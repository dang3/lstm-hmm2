dec
inc
mov
and
push
pop
dec
repz
js
push
outsl
sub
push
xchg
incb
or
out
enter
mov
add
adc
jns
arpl
mov
stos
sub
fucomip
es
test
inc
dec
lds
js
jno
xchg
in
mov
jo
pop
xlat
adc
and
mov
inc
mov
xor
mov
dec
jg
and
pop
hlt
and
xchg
cmpsb
xor
inc
inc
inc
sbbb
iret
lods
mov
ss
pop
push
push
out
aaa
std
mov
and
sbb
repz
outsl
push
mov
dec
daa
xchg
dec
data16
out
cltd
adc
cmpsl
scas
mov
xor
repz
dec
push
mov
sub
mov
push
cmp
dec
pop
stos
fsubl
data16
and
mov
pusha
pop
sbb
dec
mov
in
adc
push
cmp
movsl
jno
cltd
fisttpll
xor
xor
push
push
lret
fidivrl
mov
lret
aaa
cmp
xchg
addl
cli
add
jg
pop
cli
test
adc
hlt
rorl
sbbl
leave
dec
pop
aam
mov
sub
and
xchg
rclb
mov
out
ror
mulb
pusha
xor
aad
mov
cwtl
arpl
pop
add
jl
popf
imul
mov
shrl
sub
push
add
pop
es
loope
adc
inc
inc
std
mov
push
cmp
dec
lods
pop
mov
lods
outsb
repz
outsb
or
mov
lds
dec
lret
and
repnz
pop
xor
xor
pop
divl
and
xchg
into
ljmp
insl
jnp
mov
add
lods
mov
int3
adc
adc
push
sahf
scas
add
adc
inc
or
and
mov
xchg
mov
pop
inc
rolb
test
loopne
mov
je
test
sar
lea
sbb
sub
mov
pop
data16
iret
xor
nop
stc
sub
mov
aam
stos
jle
popf
mov
dec
and
cmp
std
sti
xchg
mov
pop
push
bound
mov
mov
add
imul
inc
push
adc
xchg
xor
xchg
lods
mov
xchg
push
insl
and
sub
fidivl
fcomps
adc
cld
arpl
mov
cmp
mov
ret
not
adc
sub
setne
sete
sar
neg
not
inc
pushf
pusha
pushf
stos
pushf
sets
pushl
mov
call
lea
je
bt
test
cmp
cmp
pushf
lea
jge
pushf
pushf
lea
je
jmp
bt
ror
pusha
jmp
cmc
push
mov
add
stc
pushl
pushf
pusha
cmp
jmp
ja
into
adc
adc
mov
sbb
je
add
scas
subl
sarl
nop
sub
push
dec
push
dec
insl
in
ds
inc
insb
nop
xchg
mov
pop
inc
jg
pop
or
je
pop
pop
pop
jp
sub
gs
fisttpl
pop
jg
adc
mov
jae
nop
je
in
repnz
mov
movsb
or
mov
push
jmp
cwtl
int
jb
out
cld
jo
push
fisubs
dec
pushf
ss
pusha
je
iret
in
fsubrl
push
out
xor
in
lods
inc
pop
arpl
test
aam
jnp
aaa
insl
xchg
jb
push
jl
in
fs
shlb
add
stc
jg
ret
mov
daa
fidivs
pop
push
dec
lcall
mov
loopne
or
or
inc
enter
stos
inc
pusha
roll
ret
insb
daa
sbb
sbb
mov
pushf
pushl
movb
lea
call
jmp
inc
not
inc
call
call
seto
jmp
lds
into
adc
and
add
out
popf
jne
push
add
je
pusha
lock
cli
inc
arpl
scas
pop
in
push
xchg
sbb
jbe
or
cwtl
movsl
pop
push
mov
outsb
cmpsl
and
scas
push
movsb
mov
push
xlat
arpl
add
and
mov
cmpsl
imul
dec
mov
sub
cs
mov
lds
cli
fdivl
stc
addb
popl
cmpl
xchg
xchg
lods
movsl
lock
mov
lahf
movzbw
mov
mov
call
jmp
dec
in
dec
scas
dec
dec
lods
dec
outsl
dec
scas
dec
push
in
and
outsb
outsb
push
outsb
and
into
in
test
jb
pop
rorb
lock
mov
push
sbb
out
adc
inc
inc
or
aaa
add
push
add
insb
or
rolb
mov
xlat
cmc
inc
sbb
pop
sti
or
sub
mov
sbb
jle
inc
icebp
je
popa
jmp
stc
push
sti
push
fldenv
scas
push
cmpsl
bound
jg
inc
mov
mov
adc
xchg
mov
scas
xor
adc
popf
out
test
lcall
inc
and
sub
fbstp
outsl
frstor
jne
mov
fsub
cmp
pop
jae
pushl
or
cltd
cmpsl
mov
add
or
loop
fisubrl
jne
adc
and
fldenv
adc
cmp
aaa
test
cmpsl
pop
mov
hlt
jle
inc
or
cmp
popf
int3
fwait
push
pop
add
push
xor
pop
mov
inc
jg
xor
sub
sub
inc
sbb
mov
dec
push
fs
mov
std
fsubrp
ffree
in
dec
rcl
loope
inc
mov
pop
xor
push
push
fnstcw
push
int3
sbb
push
in
add
mov
aaa
add
stos
xchg
leave
iret
mov
int3
dec
xor
mov
sarl
lds
sbb
mov
fimull
xchg
mov
push
xor
sub
xchg
xor
pushf
adc
push
sub
push
daa
out
stc
addr16
push
stos
mov
mov
leave
pop
push
fsubrl
out
daa
addr16
out
pop
mov
aas
mov
and
jo
scas
lods
push
jmp
sahf
jle
sub
push
cmp
mov
mov
inc
jl
outsl
addr16
sub
dec
in
stos
sub
mov
mov
shlb
lods
lret
andb
cmc
test
ret
aas
mov
push
ret
data16
and
sbb
lret
mov
dec
and
jle
sub
ja
js
scas
fisubs
imul
push
pop
addr16
sub
dec
and
cmpsb
and
sub
adc
lret
lret
jle
sub
jbe
cmp
fs
stos
mov
pusha
out
sbb
scas
sahf
jle
sub
cmp
stos
mov
cmp
sahf
jle
sub
push
xchg
dec
adc
inc
shlb
push
outsl
lret
jle
sub
mov
shrl
jle
sub
jbe
push
sti
test
mov
hlt
push
stos
addr16
sub
dec
and
subb
movsb
jle
sub
orl
sub
jne
mov
mov
cmp
add
mov
dec
xor
mov
push
jb
mov
and
lock
insl
mov
das
mov
jle
sub
shlb
leave
je
or
icebp
cmp
bound
and
sbb
adc
mov
std
leave
stos
xchg
scas
sahf
jle
sbb
dec
mov
les
rcrb
add
cs
imul
dec
pop
xor
add
je
cmp
lret
scas
dec
aas
in
push
mov
inc
scas
pop
pop
pop
test
repnz
dec
add
clc
mov
ret
lahf
fwait
std
aaa
sub
shrl
int
mov
add
das
sbb
mov
jns
lret
dec
lods
lret
sub
stc
icebp
pop
mov
stos
jl
aam
jb
jl
cmp
ret
lock
lahf
addb
subl
pusha
fldenv
insl
pusha
mov
adc
fdivrp
sbb
jns
mov
mov
sub
push
test
pop
jb
stos
dec
mov
fs
movsl
insl
enter
orb
pop
cld
dec
cs
sub
sub
jb
sub
orb
and
stos
dec
cmc
psubw
cmp
frstor
pop
mov
hlt
jbe
dec
sub
and
adc
push
scas
test
cmp
cmp
aas
xor
movsb
and
lods
mov
cwtl
cli
xor
adc
cld
cmp
jecxz
adc
in
xchg
dec
loope
stos
push
loope
fwait
popf
inc
mov
int
dec
clc
inc
popw
jecxz
add
add
mov
bound
xchg
fsubs
fcmovu
sbb
pop
mov
popf
movl
push
fistps
or
inc
push
lret
fnstcw
add
cmp
outsl
lret
push
dec
sub
add
xor
add
subl
sub
add
bt
call
stos
not
movb
mov
lea
pusha
jmp
sub
cmc
movzbw
mov
setae
mov
test
push
ror
btr
add
rcl
rcl
dec
shl
shr
clc
xor
rol
bsr
mov
movsbw
btc
neg
clc
add
mov
bswap
bswap
mov
jmp
pushf
movl
pushf
pushf
push
movl
pushf
push
lea
jmp
call
lea
jnp
push
lea
jne
jmp
call
lea
ja
pusha
lea
jae
rcr
mov
movsbw
inc
btc
sub
mov
jmp
lds
adc
inc
pop
movsb
push
mov
cmp
mov
les
int3
inc
fdivp
addr16
lds
xchg
mov
adc
cmp
bound
inc
pop
adc
jnp
add
mov
sahf
iret
dec
jne
ret
sbb
mov
lds
push
dec
adc
out
cmpsl
sahf
sub
aaa
mov
jns
jne
mov
or
call
rcr
jmp
movb
dec
bt
pushf
bt
cmp
setge
call
cmc
bt
test
pushl
lea
je
test
sub
push
cmp
pushf
lea
ja
call
pusha
dec
pushf
jmp
pop
not
pushf
mov
not
pop
pop
movsbw
pop
bswap
pop
push
mov
movzbw
pusha
pushf
call
mov
pusha
call
sar
mov
clc
stc
clc
and
cmc
clc
clc
cmc
add
bt
bt
call
pusha
mov
movw
pushf
pushl
ret
lea
je
pusha
mov
lea
jmp
pusha
inc
lea
pushf
lea
call
push
pushf
pusha
pushf
adc
movl
lea
call
call
lcallw
ljmp
xchg
and
aas
xchg
pop
sub
fisttps
jbe
jno
data16
jl
jp
fs
push
fildl
ret
cmp
aam
call
mov
arpl
sub
cwtl
pop
fs
xor
inc
mov
sub
sbb
xchg
fcomi
and
xorb
jb
xchg
cli
jo
adc
pop
pop
pop
scas
inc
leave
sub
push
inc
fldenv
orb
lock
push
loop
mov
fbstp
fnstenv
sbb
jb
nop
mov
mov
cmp
sub
jbe
push
stos
cmpb
mov
pop
call
aam
mov
fldenv
out
mov
stos
shr
bound
sbb
and
jge
stos
aaa
jg
arpl
push
cmpb
jnp
sbb
dec
push
bswap
pushf
neg
inc
mov
stc
mov
pushf
and
test
stc
pusha
add
push
lea
jmp
pushf
dec
xchg
movzbw
shr
rol
add
mov
clc
push
shl
movsbw
push
shl
push
or
push
not
lea
push
cmc
bts
mov
cmp
mov
shrd
cmp
not
btc
mov
stc
push
test
or
pushf
call
lods
inc
ror
not
shr
sub
pushl
adc
sub
xor
adc
neg
jmp
les
mov
adc
mov
add
ret
jnp
mov
or
cmp
aad
nop
mov
les
xchg
mov
jnp
inc
xorl
mulb
repnz
jno
and
lahf
jl
jle
pop
mov
jmp
iret
lret
inc
xchg
mov
push
lea
jae
call
xor
pop
xor
cs
insb
add
test
sbb
mov
add
add
movzbl
jmp
cwtl
cmp
ficoml
insb
jne
sbb
push
cld
add
into
clc
jg
mov
and
popf
add
pop
xchg
cmp
jbe
inc
pop
imul
movsb
mov
mov
push
out
lds
cli
mov
adc
out
add
ror
inc
test
arpl
stc
lods
push
push
jno
int
add
daa
add
nop
test
xor
aad
jle
xor
jp
lret
add
popw
std
popa
cmpsl
test
imul
jno
cmp
fsqrt
ljmp
leave
jne
sti
loop
popa
and
outsb
cwtl
cmpsl
pop
cmpsb
fcomi
ret
insb
sub
mov
lahf
popa
mov
sbb
out
addr16
xchg
add
lods
andl
mov
int
inc
loop
addl
mov
gs
sysret
pop
sbb
jmp
mov
adc
in
arpl
stos
push
mov
leave
lds
ret
push
jnp
lock
out
daa
nop
sbb
in
out
je
fists
adc
fimull
pushf
add
clc
mov
cmp
clc
movl
jmp
dec
mov
test
cmp
setl
pushl
lea
push
pushf
mov
movsbw
mov
pusha
lea
ja
pusha
movb
jmp
ret
add
popa
inc
mov
data16
pushf
cs
and
dec
jnp
sarl
lea
or
push
das
pop
and
xchg
int3
test
mov
cmp
mov
or
sub
xor
loop
inc
dec
sti
pop
sbb
lgs
mov
cmp
mov
lcall
repnz
add
inc
xor
jl
jp
push
out
adc
sub
add
mov
fs
je
cmp
stc
add
jmp
call
popa
push
sub
lea
ja
jmp
push
pushl
lea
jne
pusha
movb
stos
pushf
pushf
movw
movb
lea
jmp
movl
call
add
push
clc
movb
pushl
cmp
jmp
les
fdivr
cmp
iret
xor
aad
inc
rcll
sbb
ret
cld
pop
and
insl
das
adc
mov
fistpl
pushf
cmpsb
data16
lahf
xor
xchg
jns
lock
lods
add
sahf
inc
add
andb
mov
lahf
jp
enter
mov
add
cs
adc
into
pop
add
add
push
stos
push
in
movsl
adc
jmp
adc
cmp
in
and
or
push
stc
scas
xchg
xchg
pop
lahf
vandnps
sbb
sbb
fstl
fs
std
lods
bound
add
push
mov
xchg
into
sub
int3
mov
pop
lea
out
push
out
leave
int3
icebp
pop
rolb
das
scas
jne
ret
dec
pop
fldt
fstpt
adc
repnz
xorb
pop
mov
fdivr
jae
fsubs
jno
imul
lahf
aas
mov
gs
dec
cltd
jae
int
add
int3
cltd
mov
in
movlps
xchg
jg
das
xlat
and
and
pop
and
sbbl
mov
lods
mov
in
cs
jecxz
mov
sub
clc
push
repz
cmpsl
inc
lret
cmc
into
xor
push
xchg
lcall
inc
rcr
jb
mov
inc
icebp
pop
in
dec
movl
mov
stos
mov
push
jmp
add
test
mov
aas
sub
cmc
rcl
mov
rol
test
shrd
shl
mov
bswap
cmp
bts
shr
clc
test
mov
clc
pusha
or
call
sahf
aaa
out
adc
sbb
cmc
dec
out
ffree
dec
xchg
mov
int3
andb
adc
dec
test
dec
mov
pop
jnp
xor
jns
loop
call
mov
sbb
shlb
add
mov
andl
addr16
cmpsl
mov
lret
adcl
push
nop
addr16
or
jg
adc
add
scas
cltd
jg
clc
fsubrs
pop
enter
add
ffreep
test
pop
sbb
fwait
xorb
in
mov
jnp
test
cmp
int
push
bound
sbb
add
xor
lock
in
sti
mov
aas
fld
push
cmpsb
shlb
arpl
mov
test
filds
pusha
jle
mov
dec
shlb
or
fadd
push
test
inc
stos
shr
pop
mov
fidivrs
daa
shrb
test
int
sub
or
cwtl
mov
pop
cs
fstps
pop
push
ss
adc
cmp
mov
fsub
jne
inc
add
lret
and
xchg
movsb
cmp
ss
mov
js
out
jle,pt
push
test
and
pop
iret
imul
sbb
mov
cltd
fcmovnu
test
ret
push
lds
xor
mov
push
imul
out
hlt
fnstcw
add
push
call
mov
loopne
lds
data16
mov
pop
push
in
mov
mov
cli
push
loop
lret
rorb
mov
dec
clc
sbb
lock
push
dec
jns
cwtl
sbb
lea
call
jno
jae
bt
sub
pusha
call
cmpl
pop
rolb
in
xchg
inc
into
mov
mov
xor
and
jle
out
mov
scas
or
movsl
mov
dec
repnz
or
fcoms
lds
pop
bound
jnp
mov
inc
inc
loope
scas
bound
push
cltd
popf
inc
mov
mov
push
cmc
fs
jmp
jmp
dec
mov
shr
adc
dec
adc
and
mov
cmc
outsl
fucomp
pop
mov
test
mov
pop
vcvtss2sd
movsl
ret
cs
push
stos
inc
push
add
or
cmp
mov
fs
and
pop
stos
push
lret
dec
mov
lahf
fs
aas
cmpsb
and
pop
call
jns
jne
sarb
test
insb
and
mov
movl
mov
pushl
ret
xorb
adc
xor
jmp
lea
cltd
add
push
sub
lret
bound
push
in
push
sbb
pushf
call
xchg
mov
sbb
sar
scas
mov
das
xor
cmp
nop
add
rcl
or
adc
pop
xor
aad
fs
mov
jg
pop
out
pop
in
adc
inc
outsl
clc
jg,pn
jecxz
and
add
add
outsl
leave
pushf
pushl
mov
lea
je
pushf
cmp
call
pop
ja
adc
test
xor
insl
aad
xlat
jae
lret
int
jmp
subl
mov
sub
leave
inc
mov
in
add
cmp
in
push
sbb
in
ret
test
push
ja
sarb
cmp
jg
or
add
cmp
in
or
adc
mov
inc
xchg
das
nop
imul
pop
dec
loop
jb
ret
push
ja
aaa
iret
inc
mov
dec
jnp
pop
xchg
insl
xchg
into
lahf
mov
push
loopne
test
cli
or
jb
xlat
ret
mov
sub
xchg
mov
fcom
insb
xchg
fildl
inc
fdivp
inc
and
or
repz
fwait
mov
fidivl
fistl
nop
imul
or
dec
int3
mov
cmc
aaa
pushf
pushf
pop
ss
or
pop
das
sahf
jge
sbb
das
fisubs
adc
sub
lods
pushf
movl
pushf
pusha
jmp
lea
jb
bt
jmp
dec
mov
add
je
push
stos
cli
xor
pop
add
jbe
jns
xchg
pop
inc
scas
dec
push
fcompl
ficoml
cmp
inc
jo
push
sub
pop
pop
mov
call
inc
loope
mov
and
fsts
das
fildl
jo
cs
inc
fsubs
mov
les
cmpsl
pop
popl
cwtl
movntq
test
les
sub
movsl
out
or
fnstsw
sub
jecxz
jb
paddusw
in
pop
ret
daa
test
and
adc
adc
cmc
pop
fistl
push
cmc
sub
mov
jg
and
mov
or
push
push
and
loope
jne
fdivr
or
dec
into
xchg
sbb
adc
push
sub
imul
scas
push
rcll
je
push
xchg
stos
and
nop
adc
stc
inc
fldenv
pushf
cmp
pusha
movb
mov
lea
jb
clc
push
cmp
mov
lea
jae
shld
bts
bt
dec
mov
bts
sbb
btr
mov
neg
shrd
sbb
neg
mov
bt
cmc
stc
clc
xor
pusha
clc
pushf
repnz
mov
pusha
push
pushl
lea
jmp
push
push
lea
call
call
sub
pop
jecxz
jb
xchg
push
push
mov
or
sarb
mov
ss
xchg
pusha
push
sbb
dec
push
xor
mov
pop
cmp
popa
inc
stc
mov
jb
mov
int3
mov
incl
icebp
movsb
jnp
movsb
adc
jge
dec
mov
int
movsb
mov
addb
and
sub
stc
sub
dec
mov
inc
iret
xor
cvttps2pi
push
push
jb
xchg
das
call
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
test
pusha
push
movb
pushf
lea
je
pushf
pushf
push
add
test
stc
bt
cmp
movb
push
jmp
loopne
iret
in
jb
leave
dec
sti
jae
sub
xor
and
shr
ds
xor
cmp
les
or
jno
aas
push
pusha
ljmp
fiaddl
and
fisttpl
add
add
sub
and
fsubs
jmp
orb
lods
pop
ljmp
ficompl
mov
cmp
and
pushf
and
test
xor
and
outsl
jo
pop
fldt
add
out
fimull
test
lea
jbe
clc
sub
shrd
clc
adc
neg
mov
shl
pusha
mov
jmp
cmp
cmp
jmp
lea
jne
call
cmp
lahf
lea
call
pusha
pusha
inc
pushf
adc
push
pushl
ret
in
das
mov
xchg
imul
lds
adc
lahf
lods
sub
jge
adc
adc
bound
and
jmp
scas
mov
lahf
stc
popa
mov
cmc
arpl
sbb
outsl
jns
jne
adc
repnz
pop
pusha
fldcw
jmp
xchg
jmp
jmp
int
jmp
cmp
add
dec
test
shl
push
pushf
pushl
lods
pushf
not
clc
sub
test
neg
jmp
pusha
lea
jbe
xor
sub
test
shrd
sub
mov
inc
shr
btr
sar
mov
cmp
shr
bt
add
xadd
not
push
movzbw
shr
cmc
sar
or
bsf
mov
pushf
xor
adc
inc
add
not
not
mov
jmp
adc
out
jb
mov
aad
jecxz
repz
fildl
mov
cld
jge
mov
stos
mov
inc
push
in
imul
cmpsl
mov
dec
or
mov
mov
xchg
mov
push
cmp
xchg
sbbb
and
enter
cwtl
cltd
out
jb
pop
loope
lds
inc
inc
sahf
jo
fwait
mov
cld
loope
jmp
mov
jecxz
aad
sti
jno
sub
pop
dec
mov
clc
lcall
hlt
push
mov
mov
jbe
pop
jmp
xor
scas
dec
mov
jno
xor
xor
ret
sub
lcall
gs
test
repz
adc
xchg
lahf
mov
sub
movsl
les
xor
jnp
mov
shll
xchg
pop
icebp
push
repz
mov
enter
subb
shr
sub
add
addl
cmc
clc
cmp
pushf
push
lea
jae
call
pushl
lea
jne
rcl
pushf
mov
mov
stc
cmp
pusha
pushf
lea
ja
not
jmp
jmp
cmpb
pushf
push
pushf
pusha
lea
jne
dec
shrd
sar
mov
push
call
push
dec
call
pop
out
jmp
loope
std
pop
mov
mov
js
cwtl
out
insb
xchg
lahf
fidivl
ss
cmpsb
or
and
mov
mov
sbb
mov
mov
jl
xor
xor
test
arpl
sbb
mov
mov
xor
dec
sub
cs
mov
add
or
aad
push
cltd
sbb
pusha
fldenv
adc
or
subb
cli
insb
inc
xor
jmp
lock
loopne
xchg
outsb
mov
shlb
test
adc
adc
adc
or
sahf
fldenv
sub
xor
jbe
in
movl
add
sahf
in
mov
popa
mov
pop
mov
sub
or
movsb
ficomps
pop
loop
mov
je
mov
pop
xor
ret
jl
jmp
fxch
lret
lcall
out
stc
arpl
sub
sbb
aaa
inc
mov
xor
shlb
dec
std
push
push
arpl
aaa
pop
lea
bswap
lahf
mov
call
lea
jb
pusha
pusha
pushl
lea
jmp
pushf
inc
mov
movb
lea
call
stc
pushf
clc
pushl
cmp
mov
jmp
lea
jne
jmp
add
add
add
pushf
mov
push
pusha
lea
jmp
stc
dec
mov
call
lea
je
pusha
lea
jmp
movw
pushf
lea
call
pusha
pushf
movl
adc
movw
pusha
pushf
jmp
cmp
pushf
movb
lea
jae
not
stc
sub
rcl
mov
btc
btr
movsbl
mov
adc
mov
mov
cmc
clc
xor
test
test
repnz
pusha
pushf
lea
jne
bswap
add
mov
movzbl
sub
btc
mov
pusha
movl
sub
pusha
pushl
popl
cmp
call
lea
ja
rol
and
neg
sub
shr
sub
stc
add
and
mov
jne
add
and
or
mov
test
call
mov
pushf
pusha
pushf
pushf
lea
jmp
pushf
cmp
pushf
call
xor
jb
inc
nop
adc
out
adc
outsl
lods
xor
neg
cs
xor
push
mov
int3
jp
loope
scas
mov
into
pop
or
xor
lret
add
cmp
lcall
dec
nop
ja
shl
cmp
rorb
jne
fldcw
aam
pop
out
stc
lret
loopne
test
repz
inc
dec
int3
mov
pushf
pop
dec
mov
outsb
mov
jb
insb
xlat
data16
mov
shll
ss
sbb
jmp
dec
shl
mov
ror
sub
push
jmp
xchg
push
pop
in
adc
outsb
xlat
add
push
jmp
int3
jae
imul
sub
aaa
js
decb
aad
xor
ja
std
xchg
popa
cmp
mov
mov
aaa
mov
mov
dec
stos
cs
mov
mov
add
and
push
mov
lahf
dec
mov
shll
cld
lea
pushf
xchg
jmp
jb
push
rcrl
repz
xchg
adc
pop
cmp
sbb
data16
in
pop
sbb
inc
addr16
out
push
jp
mov
and
test
xchg
mov
sub
clc
xor
popf
sbb
insl
ja
movsb
add
test
ljmp
clc
cmp
mov
xorl
jne
imul
sub
inc
imul
movb
pusha
pushf
adc
pushf
mov
lea
jmp
jmp
lea
je
stc
stc
test
jmp
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
fs
call
push
pushf
call
lods
pushl
pushf
not
stc
ror
pushf
pusha
push
not
call
cmp
imul
jb
xlat
ja
arpl
dec
mov
cmc
sub
imul
pop
jae
movsb
mov
mov
pop
and
iret
lock
and
rcll
xor
fisubs
sbb
out
push
add
ror
or
jno
cmp
jns
or
rolb
jmp
or
mov
je
push
scas
sbb
ret
leave
mov
test
pop
mov
jb
out
adc
or
sahf
dec
mov
or
mov
cmp
add
dec
dec
sub
adc
mov
inc
or
aam
loopne
sbb
and
nop
push
cli
mov
add
and
lret
mov
adc
sbb
xchg
sbbb
add
adc
mov
adc
repnz
adc
sbb
push
loopne
and
xor
inc
inc
push
push
mov
icebp
add
call
add
fstpt
int3
jbe
loopne
stos
lcall
xor
xchg
hlt
push
fs
xchg
cmp
enter
aam
sahf
scas
mov
mov
lods
xchg
adc
sbb
mov
repnz
fs
mov
das
xorl
pusha
cmp
and
bound
shrb
hlt
call
jne
push
cmpsb
push
dec
lahf
adcb
in
lds
clc
ds
fidivrl
pushf
aaa
mov
xchg
orb
push
cli
ror
mov
adc
push
in
adc
cs
jl
fcmovnb
lock
out
popa
dec
lahf
and
cmp
or
lea
rorb
outsl
push
sub
sahf
fcoms
pop
es
cltd
inc
cmp
mov
in
loop
cld
cs
bound
inc
pop
mov
mov
arpl
dec
mov
lcall
int3
in
adc
scas
inc
hlt
jno
and
dec
xor
popa
fwait
scas
and
es
jno
or
push
je
push
gs
out
adc
fwait
mov
popl
push
lret
popa
mov
arpl
pushf
mov
add
add
call
add
cmp
scas
sti
xor
jo
es
adc
or
inc
js
mov
push
dec
xchg
jns
mov
fisttpl
inc
ret
inc
negl
push
fsubr
sbb
lret
adc
mov
cmp
inc
stos
sub
pop
stos
xchg
out
adc
mov
pop
xor
ret
movsb
mov
out
adc
call
std
das
sarl
mov
cmpsb
mov
in
cmp
or
insb
sub
pop
adc
sbb
jmp
xchg
or
push
cltd
push
sarl
xor
enter
and
pop
test
call
or
stos
lock
mov
or
es
mov
jne
inc
out
insl
jmp
push
lock
cmc
sbb
mov
lret
jle
popa
dec
cmc
int
dec
ret
adc
push
cmp
xchg
fsubp
dec
out
fs
je
jmp
mov
jb
push
int
mov
sbb
imul
sub
and
lds
or
dec
adc
jle
cld
cmp
mov
inc
jmp
or
call
xchg
xchg
dec
cwtl
pop
fcoml
mov
sahf
mov
adc
jg
xchg
jl
dec
xor
insb
pop
arpl
inc
lock
arpl
jg
mov
pop
mov
call
sub
add
inc
cwtl
sbb
sbb
sbb
sbbb
sbb
dec
pxor
lret
fsubrs
pop
push
mov
push
pop
je
jge
insb
arpl
not
pop
movsb
push
inc
jae
ljmp
push
add
mov
cmc
icebp
pushl
jno
mov
sub
xor
inc
fwait
pop
imul
adc
cmpsb
iret
sub
roll
inc
sub
shr
insl
ficoms
and
pop
mov
lods
or
rcrl
pop
scas
push
jne
shrl
stos
lret
push
aad
loopne
push
mov
dec
jl
cli
leave
aas
addb
es
mov
sbb
mov
mov
push
rolb
lahf
mov
inc
push
fadd
addb
mov
and
cltd
adc
out
and
inc
shlb
rcr
fidivs
jbe
aaa
rcrb
push
inc
jb
jge
ret
jno
rorb
lods
test
inc
lds
mov
xchg
gs
hlt
jp
cmc
pop
stos
mov
sarb
nop
pop
lock
cmp
cmp
or
jnp
xor
test
pusha
lea
call
pusha
lea
jmp
shl
xor
mov
pusha
call
not
mov
pushf
jmp
lods
cmc
bt
mov
pushf
not
jmp
ror
xchg
mov
cmc
sub
jae
xor
pushf
call
fnsave
repz
xor
rorb
nop
jbe
jle
mov
jo
jmp
fcomps
int
dec
sbb
dec
lret
push
je
fs
shrl
mov
xor
js
shlb
mov
pusha
pushf
call
not
push
call
cmp
dec
repz
sar
adc
jae
movsl
das
xlat
enter
ja
and
fwait
push
add
out
outsl
or
sbb
jb
sahf
cli
daa
dec
das
in
or
lods
jmp
repnz
sbb
push
out
fldl
dec
imul
jnp
mov
cltd
gs
or
push
das
push
outsl
pop
andl
ss
lods
mov
flds
pop
dec
mov
aaa
xchg
xchg
add
lock
lods
jns
rcr
lcall
inc
into
jmp
sbbb
pop
sbb
adc
dec
jp
inc
mov
pop
xchg
daa
lret
sbb
aad
data16
or
out
sbb
hlt
cmpb
and
mov
push
bound
test
inc
lea
fucomip
out
movsb
dec
cli
or
mov
mov
push
stos
shr
les
dec
das
and
push
sbb
and
jg
push
add
xchg
les
out
aas
xlat
inc
lahf
jecxz
dec
mov
cmpl
pop
dec
adc
aas
jp
adc
lret
add
or
fcmovnu
cmc
cltd
push
lea
dec
aad
mov
bound
frstor
sub
lret
insl
scas
repnz
shll
addr16
jmp
adc
push
in
mov
repnz
adc
and
sub
test
mov
sub
repz
rcl
insl
and
add
cs
lret
dec
stos
inc
push
fiadds
cli
jp
inc
pop
lea
test
insb
jl
or
mov
aam
or
dec
ss
inc
hlt
cmp
outsb
test
jns
sti
and
pop
mov
push
dec
insb
jle
inc
or
sbb
mov
rcl
cmp
pop
in
sbb
xor
xchg
jne
in
xlat
rol
rclb
outsb
inc
mov
push
daa
cmpsb
inc
cld
stc
xchg
dec
jnp
dec
clc
add
loop
and
enter
jne
shlb
dec
push
inc
bt
not
pushf
pusha
call
inc
jecxz
hlt
adc
xchg
mov
mov
sub
stos
in
ficoml
push
push
movsb
clc
mov
in
jae
and
imul
sbb
outsl
lea
pusha
imul
repnz
sahf
lcall
pop
jo
xchg
xchg
sub
push
or
dec
cwtl
mov
int
aas
cmp
pop
imull
adc
cmpsb
jecxz
sbb
sub
lds
push
mov
cmp
inc
out
or
jo
rclb
cmp
jmp
push
scas
xchg
jle
push
adc
pop
or
outsb
push
dec
push
loope
stos
adc
push
mov
push
xchg
out
popf
dec
add
popa
sahf
lret
mov
adc
mov
sbb
or
sub
fadds
adc
adc
dec
aaa
sub
cwtl
mov
fsubl
jg
cmp
and
and
sbb
fldcw
aas
adcb
and
sbb
and
int
icebp
cld
jae
inc
pop
sub
push
cmc
cmp
pushf
lea
jbe
ror
mov
rol
shl
xchg
add
dec
cmp
xadd
mov
lea
call
scas
sub
push
aas
movsl
pop
fbstp
or
inc
out
pop
jmp
sub
incl
sbb
pop
jge
xor
ficompl
insl
stos
mov
scas
mov
mov
mov
test
push
mov
pop
movsb
or
aad
inc
cs
add
sub
cmpsb
pop
popf
push
btr
outsl
cmpl
mov
jnp
arpl
mov
push
es
adc
and
jae
pushf
cmp
mov
lea
jae
pushf
cmp
push
lea
ja
not
call
jbe
pop
notb
mov
pop
scas
sub
jmp
imul
pop
and
add
xchg
pop
sbb
inc
out
push
ja
mov
insl
not
lea
add
enter
fnstenv
bound
pop
jne
movsb
or
scas
imul
es
inc
cmc
movups
or
mov
mov
sub
shrl
and
push
lahf
sbb
dec
leave
data16
test
test
add
not
sub
jns
push
stc
sub
pushf
neg
jmp
add
dec
outsb
je
jb
gs
jo
outsb
inc
add
repz
adc
cmp
ss
test
sbb
xor
adcb
push
fisubs
push
cmpsb
mov
enter
mov
in
dec
mov
xor
jge
outsl
sub
sub
dec
cmpsb
mov
dec
add
cmp
stos
repz
in
jge
mov
dec
iret
sub
xchg
xchg
mov
mov
xor
cmc
int
cld
rcrb
push
pop
xchg
inc
mov
call
sub
sub
ficoms
jb
jg
and
add
dec
shll
adc
lods
cmp
loope
push
mov
loope
cmpsl
xlat
sbb
xor
add
mov
jp
xchg
dec
sbb
xor
es
xchg
cli
mov
mov
push
jmp
fildl
or
stc
jge
gs
xlat
lods
pop
repnz
rcll
mov
and
les
popf
push
clc
xor
inc
push
push
sbb
jne
jae
andb
push
xchg
dec
xor
mov
test
cli
push
iret
pop
lds
dec
pop
clc
sbb
sbb
sbb
cmp
sbb
sbb
sbb
sbb
push
pop
fisubrs
push
jl
sub
insb
fisubs
js
pop
sbb
xor
push
xchg
fs
dec
mov
addr16
imul
fiadds
xor
test
xor
sarb
ficoms
xor
dec
cwtl
pusha
pop
movsl
popf
cmp
mov
movsb
mov
aas
lret
mov
loop
fsubr
clc
sub
sub
pop
dec
mov
and
add
outsb
enter
lea
pop
addl
add
sbb
or
xchg
mov
adc
mov
and
cmc
and
andb
adc
jns
jnp
jge
jg
addb
xchg
mov
push
adc
pop
pop
pop
pop
pop
pop
pop
adc
pusha
popa
bound
gs
push
insl
outsb
scas
sbb
xchg
jae
mov
sbb
mov
lea
sub
mov
mov
hlt
adc
xchg
xchg
and
test
loope
xchg
adc
lods
sbb
pop
inc
push
dec
lret
mov
clc
cs
stc
add
add
mov
push
sub
sbb
aam
mov
and
int3
out
in
repnz
or
fcoms
clc
push
fcompl
pop
pop
push
push
popf
dec
es
cmp
pop
sub
and
sbb
xchg
pop
or
clc
pop
hlt
movsl
lock
pop
call
fdivrl
aam
enter
mov
test
mov
andb
pusha
popf
dec
es
ss
cmp
pop
and
or
call
cmp
test
je
insb
es
movsl
dec
ss
pop
cmp
popf
sub
sbb
or
mov
jp
and
mov
movsb
es
cmp
movsl
insb
ss
pop
xor
cwtl
or
clc
adc
cltd
and
adc
fldcw
xchg
or
in
lea
pop
movsb
pop
jo
cmc
pop
sbb
dec
jo
data16
and
xor
and
aas
fs
push
or
je
hlt
ljmp
dec
sbb
stos
movsl
leave
ss
int
movsl
sbb
dec
pop
dec
insl
popf
mov
stos
cmp
pop
out
push
ss
inc
popa
popf
xorb
mov
dec
test
movsb
pop
pop
std
pop
sub
push
xor
inc
or
setle
js
in
adc
pop
sbb
int3
jne
negb
pop
or
xor
inc
adc
pop
pushf
hlt
xor
cmpsl
sub
mov
cmp
and
sbb
inc
cmp
pop
xor
es
sbb
xor
test
add
and
and
movsl
nop
mov
xor
add
clc
popf
hlt
es
pusha
call
fdivrl
fcomps
shlb
int3
pop
enter
es
push
movsl
insb
ss
pop
push
popf
dec
and
xchg
xchg
jge
popa
push
cltd
ja
xchg
inc
xchg
je
xchg
pop
inc
pop
xor
dec
cmp
pop
push
shll
pop
xchg
xchg
cmpsb
nop
pop
sub
popf
xor
xchg
cmp
pop
dec
sarb
movsl
inc
ss
pop
cmp
popf
xor
daa
cmp
pop
xor
pop
sbb
pushf
adc
inc
inc
add
clc
popf
xor
hlt
cmp
pop
lock
js
and
pop
fcompl
aam
xor
int3
cmp
ss
sub
lods
cmp
pop
movsb
movsl
ss
cmp
cwtl
cmp
pop
nop
movsl
cmp
test
pop
jns
rolb
push
push
cltd
sahf
fcompl
and
cltd
shlb
and
cmp
and
lods
sub
adc
mov
add
loop
out
aam
add
leave
adc
fnstenv
adc
cmp
mov
xchg
adc
stos
jmp
push
and
mov
adc
shll
mov
xchg
push
jmp
xor
mov
pop
into
cmpsl
mov
jg
cmp
or
icebp
mov
adc
xchg
mov
mov
loopne
cmp
cmp
dec
sbb
push
or
and
cmc
pop
mov
loopne
movsl
and
divl
and
mov
pop
popa
insb
push
clc
adc
cmpsl
dec
dec
dec
int3
movb
addr16
xor
fsts
xchg
lahf
mov
outsb
adc
mov
aam
mov
xor
lahf
outsb
xchg
in
cmp
or
test
mov
fcoml
xchg
andb
stos
xor
sahf
push
data16
cmp
sbb
push
push
push
jmp
test
xor
outsb
js
repz
xchg
or
xlat
out
jns
sub
in
add
and
aaa
cwtl
pop
das
push
rcr
add
mov
ret
sbb
dec
lcall
push
mov
jmp
sti
and
adc
jne
and
clc
adc
pusha
outsl
cmc
popa
fcomps
shrb
cmpsb
xchg
addr16
mov
loope
xor
into
test
pop
and
xor
jecxz
adc
rclb
dec
inc
xor
mov
imul
xor
iret
jae
jmp
inc
mov
cltd
sub
pop
pop
adc
cmp
xchg
mov
mov
clc
sarb
pop
in
imul
aaa
push
movsl
xchg
push
inc
push
dec
sub
push
inc
aam
push
xor
xchg
pop
stos
int3
aam
jmp
dec
lock
insb
sbb
negl
cwtl
pop
push
sbb
lods
mov
inc
dec
inc
and
inc
add
outsb
adc
mov
out
mov
leave
inc
idivb
mov
insl
lret
aam
cmp
adc
dec
dec
arpl
loop
or
aam
xchg
unpcklps
fidivl
mov
pushf
outsb
imul
sub
and
jbe
adc
ret
sbb
repnz
out
fcompl
icebp
mov
add
pop
sbb
mov
add
add
adc
add
popa
insb
inc
jb
gs
ror
call
lods
lock
inc
scas
dec
ret
or
gs
xor
ret
push
ret
add
sub
push
push
inc
jmp
cmpsb
sbb
mov
imul
mov
add
stos
jno
xchg
mov
jecxz
add
aaa
outsl
roll
xchg
sub
out
ret
or
push
pop
frstor
fldt
or
mov
pop
mov
adc
cmc
inc
stos
inc
scas
in
leave
cmp
dec
dec
aad
sbb
cmc
adc
mov
jmp
loopne
push
sub
xchg
lods
xchg
lcall
lahf
mov
push
ficoml
call
js
iret
stos
inc
loope
pop
xor
jnp,pt
inc
jecxz
cli
enter
fists
and
mov
mov
sbb
and
into
adc
jnp
mov
xchg
xlat
jnp
or
int3
dec
std
xchg
sub
iret
and
push
arpl
ficoms
cmp
push
push
jmp
pusha
pushf
lea
jne
call
stos
pushl
push
lea
jmp
add
push
gs
arpl
pusha
mov
pusha
mov
lea
jmp
mov
mov
mov
jmp
add
clc
pusha
mov
bt
test
cmp
pushl
test
push
call
pushf
lea
jb
cmp
jmp
es
add
inc
mov
arpl
je
adcl
gs
xchg
cmp
loop
sarb
bound
aas
negb
and
int3
sbb
sbb
testl
lods
into
movb
or
cs
xchg
loope
mov
clc
add
pop
xchg
popa
xor
add
or
mov
subl
and
inc
test
push
shr
pusha
mov
lea
je
push
mov
adc
movw
pusha
lea
jmp
call
subb
jb
adc
dec
testl
sub
aas
pop
xor
mov
pop
jl
lahf
jp
or
xor
sbb
xchg
xchg
imul
jmp
pop
xlat
movsb
pop
sti
divb
sbb
ss
jecxz
fiaddl
pop
nop
dec
addl
sub
je,pt
into
pop
out
add
and
stos
das
clc
add
xchg
xor
sbb
cld
add
sbb
add
loopne
add
mov
add
add
add
add
std
add
call
cld
add
flds
lock
lret
add
mov
add
flds
sar
add
flds
add
add
add
sbb
add
or
add
add
add
xor
jmp
addl
adc
es
cwtl
push
aaa
lret
insl
xchg
add
or
mov
and
inc
sub
xorb
mov
jnp
outsb
mov
out
mov
je
sbb
lret
repnz
pop
dec
shl
and
xchg
bound
mov
mov
adc
mov
push
push
jo
xorl
pushf
f2xm1
mov
sub
int
fnstenv
jo
inc
mov
rcrl
insb
lret
loope
adc
das
scas
dec
out
dec
mov
icebp
adc
out
pop
lret
pop
std
shll
jge
sbb
cmova
jae
inc
stos
mov
cmpb
push
dec
or
dec
push
cmp
out
arpl
mov
loopne
idivb
sbb
es
lods
fsubrl
stos
out
xchg
outsb
xlat
push
mov
sub
jnp
out
xchg
pop
movzbw
pop
pusha
pop
bswap
not
mov
pusha
mov
push
mov
bswap
movzbw
pop
push
push
pushf
mov
pushl
ret
das
cld
scas
add
jb
outsb
fisubrl
cmp
jbe
sbb
es
loop
and
popf
and
mov
pop
lea
js
loop
sahf
and
lret
sbb
xor
in
je
mov
testb
xchg
sub
or
sub
pop
jmp
stc
rcrb
loop
stos
mov
inc
xchg
xchg
add
and
sbb
sbb
mov
pop
cmp
push
dec
sub
sbb
sbb
cmp
xchg
push
sub
test
adc
pop
loop
pop
or
xchg
cmp
xchg
mov
sub
test
mov
pop
cltd
cmp
lock
pop
xor
mov
xchg
sbb
cmpsl
xchg
data16
inc
sti
inc
cmc
pop
lds
push
in
popa
outsb
fisubrl
mov
call
fstps
sbb
adc
je
data16
and
jle
pop
mov
push
xchg
mov
mov
sti
sahf
fisubl
jne
cmpsb
lea
bnd
insl
sarb
test
jle
add
sbb
cs
orb
dec
cmpsl
xlat
dec
pop
pop
out
pop
push
insl
inc
movsl
movsb
jo
adcl
in
inc
jecxz
push
movsl
mov
lods
test
pop
and
dec
xor
mov
lcall
icebp
das
jmp
fcomip
xor
jmp
cmpsl
je
pop
adc
outsb
lret
je
inc
in
in
adc
mov
sub
mov
push
icebp
jns
aas
pop
sbb
mov
icebp
sub
cmpsb
test
fsub
xchg
or
and
cld
mov
mov
jge
dec
ds
xrelease
ljmp
clc
mov
addr16
xor
out
pop
ljmp
sbb
mov
lret
rcrb
rorl
push
inc
add
xor
push
pop
pushf
mov
lea
setg
add
shr
add
add
neg
mov
test
test
call
call
movzbl
movsbl
setp
movb
movsbw
push
call
pushf
push
pushf
lea
je
sbb
or
add
shrd
bswap
mov
pusha
add
push
cmp
mov
mov
btc
pop
pushf
ror
mov
cmc
clc
cmp
mov
pusha
lea
jbe
rcr
sub
stc
mov
xor
add
btc
mov
pushf
cmp
bts
add
rcr
movl
pushl
mov
pushf
pusha
test
cmp
call
shll
jb
cwtl
cs
mov
xchg
xchg
stos
jl
fildll
mov
jl
pusha
mov
clc
test
sbb
xor
dec
sub
jae
cmpl
mov
int
push
jle
test
loope
shlb
push
fnstsw
loopne
out
je
imul
ja
and
loop
inc
jmp
push
dec
pop
outsb
subb
call
push
mov
xchg
jp
and
cmp
mov
lea
je
cmp
bt
cmc
or
jno
pushf
push
pushf
lea
je
btr
aas
adc
sub
pusha
aaa
sar
mov
push
sar
shl
xadd
mov
shl
shr
add
bsf
push
sete
movsbw
mov
test
cmp
or
pushl
pushf
lea
je
xor
btr
add
sar
push
and
xadd
sub
rcr
pop
shr
movzbl
stc
neg
add
mov
setbe
adc
bt
add
movzbw
inc
add
add
cmc
mov
bt
shr
cmp
cmc
cmp
pusha
movb
pusha
lea
je
cmc
test
cmp
pusha
push
pushf
lea
je
jmp
lea
jne
call
inc
mov
or
movsb
or
push
and
in
xchg
sbb
xlat
pop
mov
in
jmp
pushf
setns
sbb
ja
xor
xbegin
mov
sbbb
push
adc
lock
arpl
lret
mov
test
xor
ljmp
adc
mov
mov
or
lcall
xchg
outsl
cld
jae
popa
mov
cwtl
inc
orl
fists
sub
aad
mov
adc
dec
xor
xor
adc
and
add
adc
subb
push
push
int3
ja
cwtl
or
scas
cltd
add
and
jl
pushf
lret
adc
mov
sub
leave
fnsave
rclb
xor
sub
jle
insb
in
mov
lcall
inc
call
dec
sahf
or
cmpsb
pop
fsubl
add
or
or
gs
sbb
dec
arpl
xor
repz
lret
and
divl
adc
stos
icebp
mov
test
lods
inc
adcb
movsl
dec
jmp
jno
xor
daa
out
cmp
imul
and
and
jmp
adc
call
icebp
loopne,pn
adc
and
xchg
push
into
push
xorl
or
xchg
xchg
into
rclb
lea
call
cmp
stos
test
sbb
sbb
mov
push
mov
dec
aas
and
imull
aad
push
mov
stos
repz
rorb
repnz
fildl
clc
fnstsw
mov
jnp
push
cmpsl
dec
int3
mov
popf
pop
std
xor
jo
pop
cmpsl
sub
add
pop
sahf
sub
mov
lea
jne
jae
pushf
stos
pushf
pusha
movb
lea
jmp
mov
pushl
movl
pushf
mov
pusha
push
pushl
ret
call
mov
sbb
cld
leave
adc
push
mov
lods
pop
rcl
jne
pusha
mov
adc
loopne
mov
shll
lret
cmp
sbb
xlat
in
loope
adc
fdivs
push
insb
mov
rclb
mov
out
xor
jbe
daa
aam
movsl
adc
faddl
adc
mov
out
adc
adc
adc
pushf
movsb
outsb
mov
movaps
ds
stos
mov
dec
push
les
xchg
mov
push
sbb
adc
outsb
mov
jo
in
js
cmp
sbb
xchg
loop
ror
hlt
into
sbb
xor
cld
dec
xor
addl
sbb
pop
jge
adc
xchg
cmpsl
insb
cli
mov
dec
add
test
mov
loop
sbb
lahf
out
add
jp
mov
loopne
rclb
leave
add
mov
fcmove
sub
xchg
loope
je
test
pusha
inc
jg
pushf
add
aaa
int3
xchg
mov
sbb
sub
mov
jb
push
xor
jbe
or
mov
xor
negl
xlat
fisubrs
push
push
subl
dec
in
cmc
sub
jp
xchg
pop
sbb
inc
insl
xor
pop
push
aaa
cmp
nop
adc
ror
sbb
xchg
pop
or
xor
sysenter
or
dec
push
pop
xor
push
sbb
rclb
and
fiadds
sbb
jne
xor
sbbb
incb
sbb
sbb
cmp
mov
push
cmp
in
pop
mov
sbb
subb
push
loopne
pop
push
sbb
fs
push
xor
and
sbb
sub
das
xor
xor
jl
pop
mov
pop
and
fisubl
or
rcrb
xchg
fstps
xlat
pop
and
xchg
cli
sub
loope
cltd
push
testl
jp
fsubrl
sbb
out
das
xorl
stos
xor
ret
in
mov
xor
addl
add
jns
fisttpl
sbbl
push
add
xchg
mov
inc
sub
lock
xor
aad
pop
inc
xor
sbb
mov
push
sbb
hlt
pusha
hlt
arpl
addr16
cmp
cmp
cmp
pop
movsb
cltd
pop
cs
pop
andl
int
adc
add
inc
sbb
sub
gs
sbb
test
loopne
xor
and
mov
popa
xchg
lods
out
data16
insb
sbbl
sub
and
inc
jbe
lods
lea
js
popf
xchg
push
jnp
fisubs
jne
js
dec
cmp
cs
jne
cmp
addl
push
js
ja
xor
popa
mov
jns
loopne
dec
xor
add
xor
inc
sbb
inc
mov
loop
cli
sub
imul
rcrb
and
enter
sbb
jle
mov
xor
pushaw
dec
jge
nop
jge
dec
sbb
sbb
xchg
ja
leave
jl
jne
ds
andb
push
sub
inc
mov
dec
stc
pop
dec
test
lcall
data16
inc
outsl
cmp
jns
push
dec
jl
fdivrs
lea
hlt
sbb
add
movsb
cs
xorl
inc
xchg
insb
data16
jns
test
lods
aas
xchg
mov
mov
jnp
mov
cmp
mov
lret
orb
movsl
out
sub
mov
jmp
int
mov
adc
mov
pop
sarl
xchg
jg
ss
dec
inc
cmpsb
les
jne
orl
das
fs
dec
aam
imul
fldl
pop
xor
call
pop
or
dec
add
out
sbb
cmp
popa
xor
sbb
cld
ja
insb
js
subl
insl
jo
cmp
movsb
pop
dec
push
addl
fiadds
sbb
je
dec
inc
pop
jle
mov
jb
insb
mov
dec
pop
cmp
pop
stos
addr16
add
jp
and
jns
loopne
dec
shll
sub
mov
sbb
loope
and
xchg
les
cwtl
mov
fidivrs
je
movsb
ds
cld
lcall
out
rcrb
adc
mov
xchg
add
push
and
rcr
daa
pushf
int3
mov
sub
movsl
pushf
ss
pop
sub
pushf
fmull
cmp
pop
aam
sbb
movsl
insb
ss
mov
lea
cmp
mov
adc
sbb
clc
push
xchg
xor
jp
adc
sub
sbb
sbb
and
arpl
pusha
sub
xchg
cmpb
sbb
rclb
push
hlt
test
addl
lods
mov
push
cmp
sub
push
bound
in
popa
test
and
lcall
fs
addb
sbb
test
data16
jb
fs
inc
outsb
sbb
xor
sub
mov
fwait
movsb
mov
movsl
fsubl
enter
xor
sbb
int3
sbb
mov
cmpb
mov
xor
jns
ja
test
pop
aad
movsl
push
adc
ja
xor
pop
push
xor
cmpsl
sub
test
adcl
push
jns
mov
push
push
mov
lea
sub
and
scas
es
push
fs
sbb
push
inc
pop
or
mov
aad
aad
xor
inc
addb
mov
lea
cli
mov
pop
pushf
pop
ret
jl
nop
jb
ss
subb
jl
pop
out
inc
mov
jnp
cmpsl
pop
fldl
push
es
les
movsb
lods
mov
pop
nop
pop
mov
aas
lea
aaa
jl
pop
add
js
inc
mov
ret
pop
testb
imul
mov
cltd
sub
mov
dec
cmp
and
or
mov
pop
mov
dec
test
lods
js
inc
xor
popa
ljmp
out
inc
sub
into
jns
fs
or
pop
pusha
jns
xor
add
mov
arpl
mov
scas
mov
mov
xchg
pop
fsubs
jns
push
test
popa
jne
ja
and
jbe
mov
pop
in
je
insb
push
and
lea
xor
repz
and
pop
dec
pop
rcrb
push
sub
imul
inc
and
pop
push
popa
les
and
in
push
push
dec
sbb
cmp
lret
out
inc
push
jl
jno
fcoml
cmp
mov
mov
iret
mov
xchg
fstp
mov
outsb
sbb
lock
imul
out
xchg
stos
das
in
es
imul
pop
cmpb
subl
js
inc
jge
andl
es
pop
and
push
jns
js
sub
pop
adc
or
lea
xor
cwtl
jb
sub
cld
push
test
xchg
mov
ret
mov
movsb
adc
push
push
gs
pop
or
push
sub
adc
fsts
push
push
out
xchg
push
adc
xchg
xchg
xchg
xchg
cwtl
adc
lcall
adc
mov
cmpsl
test
test
scas
scas
mov
mov
mov
mov
mov
adc
mov
mov
ret
enter
lret
int3
int
iret
rclb
rcl
aam
xlat
fcoms
fcmovu
loopne
loope
jecxz
in
out
adc
ljmp
adc
repnz
cmc
div
clc
adc
cli
sti
cld
std
incl
adc
add
add
push
pop
or
or
or
push
movups
adc
adc
adc
pop
sbb
sbb
sbb
sbb
and
and
and
sub
sub
sub
xor
xor
xor
cmp
cmp
cmp
inc
inc
inc
adc
inc
inc
dec
dec
dec
dec
dec
adc
dec
dec
push
push
push
push
push
adc
jbe
js
jp
jl
jge
jg
addl
mov
outsl
jo
jb
je
xor
nop
xchg
xchg
pop
xchg
adc
mov
adc
push
pop
pop
pop
pop
pop
pop
adc
pop
pusha
popa
bound
gs
addr16
insl
pop
outsb
pop
xor
ds
add
adc
push
mov
addl
lret
ret
xchg
arpl
addb
jns
jge
std
pop
sti
adc
in
push
push
test
jns
ficoml
pop
aas
lea
sub
repnz
push
je
addr16
sub
stos
xchg
mov
cltd
jl
jns
jge
jnp
mov
push
je
or
enter
mov
loope
subb
and
lret
imul
jbe
mov
push
insl
fs
js
lea
insl
cmpsl
xor
mov
sbb
or
cmp
cmp
mov
xor
cmpsl
data16
cmpsl
imul
xchg
mov
mov
icebp
add
repz
outsl
jno
xchg
movsb
xchg
xor
inc
xor
xchg
or
xlat
daa
xchg
jnp
xor
andb
mov
icebp
jbe
das
fwait
pop
pop
pop
cmp
mov
pop
pop
ficompl
js
jmp
lcall
aas
xor
call
scas
rcll
push
ds
cmpsb
jae
adc
test
xchg
dec
or
dec
add
aam
pop
int3
mov
pop
inc
add
pop
outsb
bound
andb
push
jl
fsubrl
lea
cltd
mov
mov
adc
andl
sbbb
popf
jbe
out
sbb
jp
and
xchg
nop
movsl
sbb
push
push
xor
loopne
inc
sbb
cmp
and
and
cmp
mov
ficoml
pop
and
push
inc
push
ds
jl
sti
test
xor
cmp
test
sbb
cwtl
cmp
outsb
pop
fcoms
fucomp
jnp
xor
xchg
daa
xchg
xchg
sbb
sub
dec
and
pop
and
jne
pop
pop
dec
mov
mov
sub
call
fiadds
cmp
test
sub
xchg
call
cmp
cmp
lds
xor
mov
pop
lock
in
fdivs
test
shlb
sahf
jp
and
mov
cmp
cwtl
pop
xchg
push
subb
mov
cmpb
pop
js
je
jo
insb
push
cmp
movsl
push
ss
pop
dec
dec
popf
inc
es
cmp
cmp
sbb
adc
movsl
loopne
int3
pop
lods
mov
sub
or
movsl
test
sbbb
popf
push
es
cmp
jo
xor
mov
aam
mov
mov
cmp
adc
lods
popf
andb
cmp
push
or
cmp
js
sbb
cmp
and
ret
xchg
aam
fists
test
inc
js
push
and
loopne
les
push
lahf
dec
lcall
into
push
and
lahf
push
sbb
cltd
aam
sub
push
cmpb
sbb
pop
push
and
jb
sub
dec
dec
push
push
push
sub
outsb
mov
cmc
fbld
imul
mov
pop
sbb
and
js
pop
inc
movsl
dec
xor
popl
jl
sbb
sbb
cmc
cmp
and
popa
addl
and
sbb
jnp
fbld
fstpl
popf
adc
ss
fldl2e
and
jp
mov
xor
pop
std
in
add
sub
sbb
cmpl
pop
jp
fs
sub
pop
pop
jle
or
or
jns
imul
sub
pop
jge
lcall
cmpl
xchg
mov
or
pop
push
out
loop,pn
xor
inc
sub
inc
mov
xorb
fs
testb
pop
subl
test
sahf
push
mov
dec
mov
out
mov
sub
and
test
pop
inc
sbb
dec
scas
pushf
imul
sarl
cmp
jnp
add
les
int3
mov
jns
sbb
and
xchg
cmp
daa
bnd
rolb
fwait
inc
push
mov
mov
jge
insb
js
cmp
sarb
sbb
popf
lcall
scas
js
cmp
lahf
mov
cmpsb
xor
mov
sbb
sub
and
mov
cld
push
sub
movsb
cmp
sbb
sub
enter
das
sbb
adc
in
jp
insb
add
push
hlt
push
sarb
xchg
dec
xor
dec
sbb
js
push
in
popa
jge
pop
daa
pushf
into
and
pushw
fisubs
jbe
mov
push
sub
inc
xchg
stc
inc
dec
ss
popf
dec
es
cmp
inc
rcr
lret
arpl
pop
inc
and
ss
sub
mov
dec
pop
dec
lret
pushf
icebp
mov
inc
aas
pop
push
nop
lods
mov
test
push
jl
jne
sbb
test
and
sbb
lods
sub
and
mov
push
cmpsl
lea
sbb
mov
xchg
lahf
stos
outsl
mov
iret
cmpsl
cmc
mov
mov
and
xorl
cmpsl
mov
cld
xchg
mov
fcomps
push
xor
cmpsl
ljmp
xchg
scas
or
jl
sbb
xchg
cmpsl
movsl
cmpsb
dec
sub
cmpb
jle
push
and
dec
inc
nop
mov
lret
xorb
mov
divl
mov
mov
cmpb
xorb
mov
cmpsb
pop
xorb
out
sti
or
repnz
lods
xorl
into
mov
mov
aas
test
mov
mov
fsubrl
mull
add
mov
push
insb
cmpsl
sbb
jns
jae
push
stos
pop
sub
sub
mov
jne
mov
push
adc
push
fldl
cmp
popa
cwtl
mov
pop
push
cmp
push
mov
dec
push
int3
sub
je
sysexit
or
inc
inc
add
pop
sub
mov
xchg
inc
cmp
sub
popf
fcomps
pop
lds
pop
fcoml
sub
pop
je
push
push
sub
and
pop
push
ss
inc
sub
mov
rep
lods
je
jo
hlt
loopne
mov
xor
aad
sbb
sbb
insb
lock
xor
fsubs
dec
lahf
pusha
and
inc
push
mov
pop
sbb
xor
add
and
dec
jl
mov
and
or
add
sbb
sbb
pop
sbb
sbb
fcoml
push
inc
fs
mov
and
xchg
sub
add
xchg
cwtl
jmp
fsubrs
inc
adc
xchg
inc
enter
or
movsb
mov
sub
cmp
xor
sub
rcrl
mov
fsubl
sub
outsb
ss
xchg
dec
rcrl
mov
inc
in
out
xor
mov
jecxz
jg
mov
adc
shll
ret
xchg
push
inc
jnp
lea
push
xchg
dec
rcl
dec
or
dec
and
aas
repnz
xor
and
cltd
adc
fldcw
cmpsb
cld
rcll
dec
fcomi
sbb
sub
cmp
mov
loope
ljmp
clc
cwtl
jle
jl
inc
pop
add
lods
lea
xchg
sbb
mov
cli
je
icebp
lahf
shrb
cmp
adc
sub
jg
shrb
xor
xor
mov
xchg
adc
mov
cmp
push
hlt
inc
or
sub
mov
xchg
inc
pop
mov
adc
dec
add
jo
mov
outsb
pop
jns
sbb
adc
mov
add
push
aam
or
mov
mov
push
out
xchg
fisubrl
mov
mov
lds
in
push
jmp
xor
adc
les
jecxz
jbe
cwtl
push
xor
aas
mov
fs
insl
and
adc
sarl
cmp
mov
in
lcall
not
push
pop
add
sub
xor
rol
xchg
push
push
push
ror
aam
push
cmp
adc
push
push
cmp
push
clc
push
push
cmp
xchg
add
shll
roll
ror
push
push
and
ror
xchg
push
and
ror
aam
and
rorl
push
and
rorl
push
and
rorl
push
and
rorl
push
and
rcl
adc
push
fcom
xchg
xchg
movsl
shl
cmp
outsb
adc
sar
push
call
xchg
xchg
pop
rcrl
imul
sar
xor
push
adc
xor
push
mov
xchg
repnz
cmpsl
rclb
aaa
shll
shll
xor
repnz
movsb
sarb
mov
mov
push
cltd
cmp
stc
rorl
insb
xchg
mov
aam
aam
repz
adc
repz
push
mov
mov
mov
adc
xchg
push
ss
mov
xchg
pop
xchg
aam
aam
lret
adc
ds
xchg
push
inc
push
mov
xchg
pop
xchg
aam
aam
push
imul
and
sub
add
inc
mov
sbb
shrl
and
aad
push
push
dec
fistpl
mov
aaa
sub
aam
sub
dec
push
push
je
jne,pn
movsb
push
cmp
push
sub
xor
pop
inc
sahf
and
je
jne
push
push
shlb
pushf
out
rorl
xor
fcoml
int3
cmc
cmp
and
pusha
dec
add
sbb
faddl
movsl
sbb
sbb
mov
jb
xchg
xchg
inc
aaa
bound
fwait
sbb
fwait
pop
sbb
pop
inc
addr16
jae
jns
mov
jp
sub
sub
stos
les
inc
test
xchg
cmp
sub
jae
lea
jae
loopne
jne
leave
ss
cmpb
ss
jp
sub
dec
ja
jns
adc
sbb
orl
and
test
mov
push
push
sarl
jns
cs
inc
sbb
sub
mov
push
mov
adc
es
out
xchg
loope
cmp
adc
movsb
cmp
jae
out
adc
add
or
push
push
hlt
enter
cmpsl
sbb
adcl
insb
data16
shlb
mov
shll
cmp
jl
xchg
sbb
int
addr16
inc
xchg
adc
pop
adc
xchg
popl
scas
push
inc
xchg
mov
clc
repz
jge
in
pop
xorl
leave
aad
xor
pop
enter
in
js
xor
inc
mov
jo
cwtl
cmp
sub
dec
bound
push
stos
pop
lock
cmpl
cmp
inc
sub
mov
inc
rcll
leave
std
adc
dec
shrb
mov
or
push
cltd
xor
inc
push
fs
adc
sub
insl
xor
outsl
push
ss
mov
je
push
lock
xor
outsl
pusha
sub
cwtl
adc
push
in
rorb
ja
adc
cwtl
adc
sarl
aaa
push
rclb
mov
and
sub
sub
xor
lea
xor
rcrl
mov
sbb
push
lods
mov
movsb
aaa
les
pop
add
xor
rcrl
aam
testb
jmp
test
jl
sub
mov
mov
sub
mov
push
aas
push
lds
in
and
push
int
sbb
shlb
cltd
xor
mov
fdecstp
enter
loop
adc
mov
je
lret
jb
in
jle
sub
out
xor
xchg
aaa
xchg
incb
aaa
jnp
test
lock
int3
std
jae
cltd
mov
psubd
xchg
mov
or
inc
mov
push
sbbl
jo
xor
arpl
cmp
imull
push
mov
pushf
add
out
sbb
faddp
loop
addr16
sub
cmp
add
sbb
sub
dec
mov
mov
mov
sub
lods
xchg
in
or
mov
ljmp
fdivs
cmp
out
and
and
inc
lcall
les
or
mov
pop
xor
les
sbb
cmpsl
inc
xor
cltd
cltd
inc
leave
insb
sbb
jnp
outsl
sbb
nop
xchg
mov
je
inc
fstl
cmp
stos
push
adc
lods
repz
mov
mov
pop
pop
and
jb
pushf
push
pop
sbb
xor
dec
cwtl
sub
out
pop
adc
mov
push
std
adc
fdivs
or
jmp
cmp
in
sbb
mov
int
ds
repnz
sbb
mov
sbb
sbb
pop
movsl
pop
ss
jp
popf
fisubrs
cmpsb
cmp
dec
lret
jne
sbb
popf
lods
sarb
pop
lock
push
and
int3
xor
pop
popf
data16
sbbb
ss
add
pop
decb
popf
add
in
ss
push
cmp
movsl
pushf
ss
lret
cli
sub
ds
pop
data16
mov
lcall
ss
in
popf
sbb
sahf
daa
lock
cmp
cmpsl
sbb
ss
sbb
cmp
pop
loopne
push
xchg
sbb
lods
cs
insl
xlat
mov
inc
adc
in
sub
inc
xchg
mov
aaa
add
dec
bound
aas
into
fidivs
add
jno
mov
adc
cmp
sub
js
adc
orl
aas
arpl
and
mov
mov
cmc
mov
adc
movsl
mov
adc
sub
mov
xchg
jecxz
fs
pop
mov
outsl
adc
add
or
inc
push
inc
adc
mov
xchg
jge
sub
movsb
dec
adc
int3
dec
pop
jo
sub
push
cmpsl
xchg
je
popf
dec
fists
push
mov
scas
pop
bound
xchg
scas
cli
xor
jle
sbb
and
gs
in
xchg
out
hlt
ss
ficoms
pop
jecxz
sti
or
push
sub
pop
scas
dec
pop
sub
aad
mov
cltd
mov
fs
pusha
in
add
push
mov
iret
mov
sbb
lret
rorl
inc
adc
lret
lea
adc
in
add
or
fcmovnbe
xchg
adc
fcom
stos
lret
dec
or
mov
mov
adc
lods
ds
sbb
ja
das
adc
int
daa
fmuls
dec
push
fistps
adc
mov
pop
push
adc
and
lock
adc
nop
fistpll
scas
bound
es
cmp
and
cmovb
out
adc
lods
fsubl
gs
int3
xor
xor
adc
enter
push
adc
dec
inc
fnstenv
test
xchg
mov
into
fldt
inc
xchg
push
out
movsb
lock
adcb
lea
xchg
call
pop
loop
xor
push
xchg
mov
mov
sbb
daa
lods
xchg
jg
faddl
adc
mulb
inc
sbb
sub
andl
shl
clc
add
bnd
sar
pop
push
cmp
stos
adc
cmp
adc
adc
mov
inc
hlt
mov
mov
in
sub
adc
stos
push
fwait
add
jge
call
push
scas
adc
int3
sbb
pop
inc
cs
jo
add
pop
gs
cmpsb
hlt
fcmovbe
and
out
sbb
mov
movsb
sub
adc
mov
stc
adc
xlat
jo,pt
mov
cmc
int
pop
jno
pop
fwait
nop
push
add
add
sub
sti
cmpsb
data16
dec
jno
sbb
adc
clc
rcrb
les
or
cmp
ljmp
mov
lods
push
sbb
mov
mov
add
mov
xchg
clc
mov
adc
dec
lods
inc
inc
aam
stc
push
les
and
imulb
pop
xor
push
js
cmp
sub
adc
sbb
int3
mov
cmp
mov
out
push
xor
call
xchg
push
insb
mov
stc
cltd
lea
test
aam
xchg
insl
clc
push
sbb
cld
adc
xor
insb
roll
dec
out
cmp
and
rcrb
mov
cld
mov
or
jmp
mov
stos
add
jne
insb
adc
or
les
cmc
add
xchg
fsts
repnz
jbe
mov
adc
mov
add
jae
adcb
xlat
jns
add
inc
adc
loop
lock
push
data16
xchg
adc
das
mov
out
cli
add
jp
addr16
and
mov
jnp
pop
add
add
out
mov
push
push
fxtract
ja
shrl
aam
push
mov
imul
adc
sbb
push
xor
imul
inc
les
push
int3
inc
adc
ss
cwtl
sbb
fimuls
adc
xorl
push
lock
lahf
inc
fwait
xchg
loop
fcomps
aas
clc
xor
xor
out
or
push
mov
xchg
mov
push
scas
add
sbb
aaa
inc
add
cmp
push
sbb
repz
call
adc
mov
sti
adc
fidivl
mov
xchg
mov
adc
test
insl
adc
inc
jo
orl
xchg
sbbb
push
push
repz
fsubr
int
push
aaa
sbb
mov
push
xor
std
adc
xlat
fdivs
sub
adc
aas
leave
mov
push
gs
inc
insl
jmp
adc
aas
and
adcl
cld
shlb
test
fidivl
repz
test
xchg
adc
push
icebp
pop
cmp
sbb
or
mov
pop
xchg
incb
shrl
jge
cmp
out
lret
es
adc
pop
dec
cltd
adc
bound
gs
loopne
in
roll
jl
jo
adc
or
loopne
popf
enter
jno
sub
adc
xchg
mov
lret
xlat
inc
sbb
sbbl
xchg
fimuls
sarl
push
std
adc
jle
xorl
les
lcall
ljmp
sbb
mov
adc
rol
push
mov
inc
pop
arpl
or
inc
jp
and
push
adc
lahf
mov
loope
push
adc
push
fadds
xor
jne
jmp
pop
jns
sbb
test
push
pushf
pop
dec
sti
stc
mov
inc
jle
sbb
jo
cmp
mov
lret
jmp
pop
add
adcb
repnz
adc
je
daa
das
inc
adc
inc
lcall
add
mov
and
rcrl
sub
ficoms
and
sub
mov
xorb
into
jl
std
pop
cmp
dec
xchg
repnz
and
push
cld
outsb
xchg
inc
cmp
lock
clc
mov
dec
adc
xchg
sbb
xor
xor
mov
arpl
pop
and
cwtl
lahf
sub
adc
xor
sbbb
inc
pop
fxtract
jb
push
cld
xchg
adc
pop
aas
fs
adc
out
xchg
aas
lods
or
adc
cmpsb
in
jns
mov
mov
ds
or
in
jle
mov
dec
aam
dec
fisttpl
xchg
dec
das
adc
xor
into
add
ret
adc
dec
cwtl
mov
fstpl
and
ret
adc
lahf
inc
push
pop
xor
sub
out
adc
xchg
pop
lock
mov
dec
push
jg
dec
xor
inc
sub
or
mov
fstpt
adc
int3
cmc
sub
and
ret
stc
push
adc
push
call
xorb
popa
stc
pop
mov
movsl
fwait
dec
loop
xchg
int
fisubrs
inc
dec
int
push
and
insb
sarb
push
lcall
cli
dec
enter
test
cld
xchg
repnz
and
repz
sbb
jb
iret
jg
das
xlat
jg
xor
call
push
push
add
repz
das
jnp
dec
cwtl
jl
leave
ss
and
mov
inc
rclb
dec
add
or
mov
add
push
hlt
jne
cmp
sbb
mov
pop
sbb
inc
pusha
mov
xchg
rcll
xchg
imul
mov
imul
mov
enter
fadd
loopne
inc
pop
dec
push
jg
xchg
shlb
js
jecxz
jb
fildll
rolb
in
xchg
loope
lds
out
dec
add
and
adc
jmp
mov
add
xchg
sbb
jp
and
pop
pop
jp
subb
push
push
push
push
rclb
add
loopne
jns
pop
mov
arpl
gs
call
xchg
mov
mov
pushf
pushl
clc
shr
call
scas
pop
aad
adc
pop
movsl
pop
xlat
xor
in
lock
jmp
shl
into
adc
sbb
push
or
cmp
lea
inc
pop
inc
cli
in
push
in
mov
outsb
sub
adc
dec
xlat
sbb
movsl
dec
icebp
test
movsb
mull
xchg
mov
cmp
fs
push
dec
pop
jb
iret
xchg
dec
lea
cmp
push
mov
mov
mov
movb
rcrb
divb
cmp
inc
lea
jae
not
mov
inc
jmp
cmp
dec
sub
jmp
test
mov
mov
loope
dec
shrb
shlb
aas
jb
inc
mov
shlb
mov
ret
in
mov
mov
imul
movsl
out
jb
cmc
inc
scas
jg
shlb
add
ja
dec
push
std
adc
push
addl
mov
jno
mov
sub
lcall
mov
leave
push
xchg
sbb
ds
fs
cmp
or
les
cwtl
sub
push
sarb
test
enter
lea
jae
cmc
call
inc
test
clc
pushl
cmp
shr
call
fsubrl
dec
cs
dec
shll
or
pop
scas
sbb
pop
cmp
inc
lods
adc
dec
push
aaa
sub
adc
std
ljmp
andl
xchg
insl
imul
jo
push
ja
add
insb
jmp
es
adc
addr16
arpl
and
jne
ljmp
dec
idivb
adc
jge
jae
jge
pop
lods
push
aam
mov
sub
ds
sub
movsl
in
addr16
jne
daa
rcll
dec
ret
pop
jae
mov
push
pusha
inc
cmp
jmp
mov
mov
in
add
pop
mov
into
fiaddl
mov
sub
in
cmp
outsb
jp
add
adc
jle
adc
repz
mov
inc
pop
sbb
mov
push
stos
mov
pop
jmp
arpl
jecxz
pop
sbb
mov
fdivrl
mov
inc
scas
mov
inc
testl
dec
or
mov
mov
stc
add
mov
adc
std
or
jo
lret
lods
hlt
popf
cmc
pop
mov
xchg
das
push
out
adc
sbb
pop
outsb
push
cmpsb
mov
and
adc
into
add
jge
pusha
sar
mov
lret
jmp
mov
mov
cmp
adc
or
lret
push
xlat
xchg
xchg
jns
leave
mov
jecxz
adc
add
xchg
test
out
or
fucomip
pop
imul
pop
cli
cli
adc
mov
pop
loope
stos
dec
lods
sbb
xchg
and
fwait
daa
lahf
nop
mov
jle
pop
in
pop
xchg
imul
std
jg
cmp
loope
sahf
xchg
loopne
int
push
and
mov
mov
pop
and
dec
inc
out
fistpl
push
fcomi
jb
dec
mov
insb
xor
dec
jge
orl
jle
adc
jp
or
add
test
scas
inc
bound
scas
cwtl
lahf
jle
stos
sub
push
mov
lods
into
outsb
int3
and
in
scas
outsb
dec
and
push
dec
in
scas
and
mov
push
into
lods
lods
and
push
scas
and
int3
and
push
mov
lods
and
in
and
sub
in
dec
int
mov
lods
dec
insb
outsb
dec
outsb
dec
and
mov
mov
push
mov
pusha
push
mov
lea
call
jmp
movb
mov
inc
pushf
push
movb
lea
call
cmp
push
cmp
pusha
movb
call
add
call
lds
xor
andb
jl
pop
mov
fiaddl
push
bound
and
pop
pop
clc
add
mov
outsb
mov
or
mov
movsb
and
cwtl
inc
push
lret
imul
sti
add
pop
sub
addr16
jno
push
jno
mov
bound
mov
shll
push
loopne
out
pop
out
insb
pushf
dec
or
mov
mov
jp
pop
or
push
in
mov
push
cmpsb
iret
xor
inc
repz
and
sub
push
mov
fwait
mov
add
lret
xor
sub
xor
xchg
outsb
ja
mov
nop
std
ds
xor
sar
bound
int3
or
fnsave
add
out
mov
cltd
aam
decl
pushf
add
out
insb
pop
orb
cmp
push
repnz
rcrl
xchg
mov
bsr
movsb
daa
ljmp
cli
jae
and
hlt
popa
test
sub
cmp
cmp
pusha
mov
lea
ja
bt
imul
stc
add
pusha
lea
jmp
jmp
call
xor
bt
repnz
push
pushf
lea
jmp
inc
in
xor
mov
mov
cwtl
js
push
movsl
or
sahf
fstpt
pop
sbb
xchg
div
daa
insl
mov
mov
cmp
dec
mov
xor
push
mov
das
mov
cs
xor
insb
ljmp
je
or
loopne
mov
sbb
testb
rorb
mov
mov
stc
jle
push
jnp
ror
mov
mov
dec
outsl
popa
fs
imul
add
mov
cmp
call
loopne
jge
adc
mov
mov
mov
mov
fcmovb
cmpxchg
dec
pop
sbb
ja
push
pop
pushf
lcall
lcall
mov
mov
shlb
popf
mov
add
mov
and
push
push
int3
sbb
mov
cltd
jle
test
loopne
lret
pop
mov
popa
xor
pop
or
popl
xchg
subb
adc
add
jb
dec
mov
and
out
ja
sub
in
or
xor
cmpl
cmpsl
sbb
flds
scas
pusha
fs
mov
dec
pop
adc
fmulp
icebp
ljmp
aam
cli
dec
hlt
insl
xchg
sub
cmp
cmp
je
jp
aad
sbb
mov
dec
in
pushf
and
xor
inc
push
lahf
addb
mov
test
sbb
in
cs
inc
sub
mov
sub
std
sbb
popf
adc
dec
jl
xchg
sti
xchg
mov
je
cmp
dec
cmp
cmp
shrl
and
xchg
cmp
mov
gs
lds
sub
lahf
test
xchg
sub
sbb
out
adc
imul
xchg
mov
jp
ret
and
stos
sbb
mov
sarb
into
cmc
and
sbb
je
notl
cmp
dec
cld
call
mov
cmp
hlt
jno
into
mov
push
and
out
lea
cld
pop
push
xor
adc
inc
std
jne
xchg
fwait
jmp
out
sub
cld
pop
mov
std
ja
push
dec
fistpl
ss
mov
add
pop
cld
adc
mov
or
push
dec
xchg
adc
cld
es
dec
xchg
out
jbe
sub
add
daa
adc
adc
sbb
std
xchg
outsb
inc
out
xor
push
in
in
jne
fbstp
and
movsb
scas
aam
push
fcoms
adc
cmpb
xor
dec
or
movsl
sbb
push
in
or
mov
data16
cld
orb
cwtl
add
or
and
ljmp
shr
shl
imul
sbb
nop
adc
sub
inc
lret
sbb
aam
xchg
push
dec
mov
lods
fnstcw
lods
dec
lods
push
sbb
cmp
sbb
and
aam
std
in
push
fcompl
loopne
lret
stos
push
dec
adc
cmp
pop
std
stos
and
popf
nop
xor
pop
hlt
and
xor
inc
je
test
cmp
jecxz
into
enter
and
rolb
pop
sub
enter
aad
add
mov
in
mov
fildl
popa
add
push
pushf
nop
jp
sbb
adc
sahf
xchg
popa
pushf
sub
add
xor
mov
xor
daa
ljmp
lock
cli
sub
movsb
lret
adc
loop
arpl
add
sub
cmpsb
out
popa
jl
push
jb
aad
cld
movsl
mov
repnz
ljmp
lods
pop
mov
fwait
nop
push
popf
movsl
adc
jl
sub
inc
or
cmp
sahf
xchg
add
sbb
sbb
push
sbb
popa
mov
outsl
shlb
pop
aas
and
je
xor
mov
inc
xchg
dec
std
jp
stos
in
jl
sub
mov
in
cmp
pop
jnp
loopne
push
fisttps
or
in
push
fldt
mov
sbb
addr16
in
repnz
cmp
enter
and
cld
mov
xor
mov
pusha
push
mov
movsl
scas
xchg
inc
mov
jl
lret
xchg
shlb
xor
fidivs
hlt
cli
cld
lods
pop
aam
mov
xor
cwtl
add
xchg
out
je
in
dec
jle
loopne
rcr
and
bound
jb
pop
or
fwait
popf
cltd
adc
ret
cmp
mov
mov
pop
fwait
pusha
xor
test
adc
pop
gs
xor
imul
fcompl
std
pop
les
data16
push
sahf
dec
pop
in
stc
and
lret
add
and
add
clc
push
add
jmp
jmp
dec
aam
push
std
inc
pop
daa
mov
mov
mov
adc
xor
out
sbb
icebp
sbb
xchg
daa
push
fs
stc
int3
sbb
sbb
push
je
jl
addr16
adc
in
aam
or
pop
sub
cltd
fsin
mov
mov
add
loopne
xor
sub
sbb
pop
fisubrl
sbb
and
into
roll
and
xor
in
sbb
or
fwait
add
pop
or
in
pop
jp
ds
jmp
repnz
daa
imul
push
and
inc
ja
pop
pop
cmp
loope
cmpsl
mov
jo
mov
or
cmp
xchg
adc
in
lcall
outsb
fdivs
sbb
jmp
and
pop
scas
cmp
inc
lea
xchg
js
inc
cld
popa
int
dec
and
lods
rclb
clc
in
dec
clc
mov
or
fistpll
xchg
std
adc
pop
negb
mov
xchg
adc
push
ds
jbe
in
movsl
movsb
push
daa
or
ss
xor
mov
jno
jmp
xchg
inc
or
mov
xchg
xor
fldl
ficomps
mov
mov
xor
cmp
cmp
xor
xor
adc
pushf
lea
test
fbstp
xchg
mov
mov
pop
fnstsw
mov
fsubp
movsb
and
je
sbb
ljmp
cli
imul
pop
jl
lcall
xchg
cmp
and
in
ljmp
std
sub
lods
sub
icebp
xor
in
jl
or
es
mov
mov
xlat
cmp
push
sbb
movsb
lea
jge
xchg
movsb
mov
scas
push
lods
inc
dec
fdivl
jbe
sbb
inc
mov
in
fstl
popf
icebp
sahf
int
std
jns
imul
xchg
mov
jg
imul
mov
std
imul
lcall
ret
mov
adc
std
jp
sub
and
iret
sbb
jmp
testl
ss
and
mov
mov
push
inc
jl
push
out
aam
inc
jae
inc
sbbl
sub
fwait
and
push
std
jne
inc
cld
push
sub
pop
or
insb
adc
stos
jnp
test
sbb
push
jns
out
xor
xor
and
sbb
xor
test
mov
cld
inc
es
inc
inc
std
dec
popf
lods
test
mov
push
jmp
jo
test
xor
cmp
sbb
xchg
idivb
out
inc
pop
out
in
std
int
xchg
je
pop
mov
popf
dec
cmp
je
xchg
cmp
adc
fisubl
jae
or
aam
mov
pop
inc
jl
pop
inc
cmp
push
and
pushf
enter
into
push
and
dec
pop
xchg
lcall
add
add
pop
loopne
sbbl
lahf
mov
addr16
and
and
and
aaa
mov
jae
inc
inc
out
mov
ds
psubsb
call
cmpsl
sub
mov
imul
mov
je
adc
stos
cmpsl
cmp
inc
pushf
movsl
ss
and
mov
xor
sub
push
shrd
sbb
xor
imul
cld
and
xchg
pmuludq
cltd
das
adc
jo
mov
adc
cmp
pop
sub
push
inc
xor
nop
imul
pusha
xor
scas
sbb
and
enter
push
lods
cli
pop
shlb
xor
out
xchg
sbb
fs
pusha
test
js
push
sub
fsubrs
mov
sub
je
jl
sbb
push
xor
out
sub
lcall
and
push
sub
lahf
push
dec
sbb
cs
into
js
sahf
jo
cli
fwait
movsb
and
and
inc
cmpsl
sbb
xor
cwtl
fs
mov
sahf
int
pusha
cmp
sbb
ret
jbe
les
es
mov
push
push
pop
cmpsb
sub
cmp
enter
sbb
and
dec
jns
adc
mov
scas
sbb
enter
pop
les
mov
hlt
jl
int3
fdivrl
xchg
test
mov
pop
pop
cmp
xor
inc
pop
mov
sub
rcrb
movsb
loope
sbb
cmp
mov
cwtl
fadd
xor
insb
dec
insb
cmp
bound
xor
rolb
test
push
pusha
push
mov
inc
test
hlt
pop
push
pushf
push
fsubrs
aaa
dec
sbb
sbb
push
popa
aam
sbb
pop
mov
rcr
fidivrs
aaa
enter
out
xchg
push
pushf
adc
out
pop
pusha
xchg
mov
mov
out
mov
out
pusha
insb
fwait
and
aam
xchg
and
sub
pop
and
mov
fcomps
and
add
movsb
call
push
mov
xor
pop
adc
int3
imul
cmp
movsl
mov
dec
aaa
enter
sbb
cwtl
sbb
cmp
sub
fdivrl
adc
mov
pop
pop
js
aad
dec
in
xchg
adc
push
jae
jmp
imul
repnz
lea
cmp
addr16
sbb
sub
iret
and
dec
xor
jp
aaa
push
jne
mov
push
je
iret
ret
sbb
xor
dec
push
xor
mov
dec
sbb
sbb
xor
push
aam
sbb
testl
aaa
and
fisubs
in
call
fiaddl
or
or
in
jl
xor
pop
mov
sub
xor
add
push
cli
stos
les
mov
leave
sub
ficoms
ja
lret
cwtl
in
mov
xchg
movsb
cmp
or
sub
mov
mov
repnz
std
enter
pop
test
mov
adc
and
sbb
cwtl
aam
fiaddl
add
std
or
int
mov
subb
std
xor
mov
mov
xchg
add
and
add
cwtl
mov
sub
adc
push
or
je
test
pop
ror
into
jge
jp
iret
ja
dec
or
ss
add
cmp
pusha
stc
mov
bound
dec
pop
dec
mul
daa
mov
cmp
cmp
jmp
lahf
xor
ja
enter
roll
sbb
sahf
sbb
out
lahf
pop
fcoml
in
mov
cmc
sub
ficoml
stos
cli
or
sub
stos
xchg
adc
ret
andl
add
negl
sbb
sbb
and
cmp
scas
push
add
jae
xchg
in
xor
out
sbb
fs
stos
dec
cmpsb
push
addl
pop
into
fwait
iret
sub
dec
add
imul
jmp
push
pushf
repnz
out
fwait
jo
and
and
dec
adc
sub
dec
and
inc
mov
xor
pop
jmp
std
fistpll
xor
insl
pusha
out
fdivl
movsl
and
and
xor
sbb
inc
mov
aas
sbb
stos
pop
shrl
cld
pop
mov
pop
ds
sub
cmp
and
call
cmp
or
inc
pop
pop
pop
icebp
pusha
cld
xor
movsl
lcall
add
mov
xor
imul
sbb
repz
adc
xchg
xchg
pop
das
cmpb
xor
jl
mov
aad
and
sub
and
cld
stos
and
jnp
mov
cmp
push
cli
jns
stc
sbb
push
add
sbb
dec
xor
pop
mov
dec
nop
xchg
push
inc
xlat
push
aad
dec
or
push
rclb
daa
xchg
fcomps
sbb
or
xchg
adc
jle
fsubl
or
xchg
inc
mov
cwtl
ret
dec
pop
std
inc
imul
xor
sub
movsb
xchg
dec
mov
in
es
sub
adc
leave
push
mov
cmp
movsb
sbb
cmp
lret
jp
push
xchg
je
and
jge
xchg
add
mov
pushl
sbb
icebp
aam
jbe
dec
inc
gs
cmc
sbb
mov
hlt
sbb
dec
jg
loop
lret
push
pop
and
sub
mov
lahf
mov
cld
out
jb
pop
aam
in
fistpl
je
jbe
mov
xor
cmp
adc
shr
decl
jmp
push
cmpb
mov
mov
mov
lea
jne
stc
aad
clc
mov
sub
aam
aam
inc
push
mov
inc
rcr
add
stc
neg
mov
cmp
test
pusha
lea
je
pusha
clc
pushf
mov
sub
bt
bt
clc
jmp
mov
repnz
jmp
add
inc
js
je
jb
arpl
jae
cmp
inc
adc
push
incb
dec
mov
cli
sub
pop
push
pop
out
imul
push
jno
cmp
cmpsb
mov
ret
faddl
movsb
pop
lret
jmp
popf
test
aas
mov
lods
outsb
daa
cmp
shlb
enter
xchg
add
cmp
sbb
iret
pop
leave
or
pushf
out
iret
or
jge
jno
sbb
jns
bnd
add
jnp
movb
test
jmp
movl
pushf
call
popa
adc
jb
jbe
adc
cmp
cmp
push
push
je
mov
ja
mov
faddl
test
mov
stos
shrb
sbb
mov
notl
int3
push
stos
xchg
or
test
gs
and
hlt
mov
sahf
mov
adc
int
xor
push
xchg
inc
jb
roll
push
mov
fistpll
jmp
jae
shl
stc
mov
mov
and
mov
adc
btr
shrd
mov
stc
push
xor
clc
repnz
pushf
pushf
pushl
lea
jmp
inc
pushl
mov
dec
movb
inc
call
cmp
bt
add
test
clc
movzwl
adc
mov
push
call
lea
jne
call
mov
mov
push
push
mov
movb
movb
inc
pusha
lea
jp
not
bt
stc
rol
push
cmc
pusha
jmp
cmc
jg
inc
adc
jo
and
int
mov
add
jmp
jae
es
std
push
in
push
xor
in
cmc
and
insl
fnsave
js
aaa
lret
mov
add
vmovups
or
pushw
ja
cmpsb
dec
xor
push
inc
jae
or
xchg
sub
sbb
inc
pop
jbe
inc
loope
shr
iret
inc
xor
adc
pop
mov
ljmp
mov
cmp
neg
jmp
pop
mov
add
push
in
sahf
pusha
mov
mov
xchg
test
test
dec
repz
xor
cmp
mov
push
into
in
in
mov
negl
shl
insb
jmp
xchg
test
in
add
xlat
cmp
rclb
inc
mov
jnp
xchg
pushf
cwtl
arpl
push
in
aaa
leave
outsb
rcr
cmpsl
shlb
lret
xchg
pop
mov
inc
aas
and
imul
mov
setge
inc
not
sete
inc
pusha
pushf
pushf
mov
pushf
jmp
sbb
scas
jbe
pusha
rolb
mov
xchg
sbb
xor
xor
call
sbb
cs
das
and
daa
fstpt
push
lock
sbb
in
fists
adc
insl
mov
les
adc
cmpsb
cmp
and
jb
cmp
decb
jge
pop
outsb
rcrl
jmp
push
stc
repz
mov
xlat
pushf
pusha
call
stos
jnp
inc
adc
xor
repz
jae
popa
pop
pop
xor
jns
sub
sbb
jmp
or
out
bound
fistpll
arpl
or
jl
mov
pop
jb
in
push
sub
sbb
jns
xchg
or
lock
mov
loopne
jbe
pop
mov
jo
sub
push
icebp
pop
std
stos
xchg
pop
push
ret
addr16
jnp
daa
add
inc
xor
arpl
push
jb
push
arpl
fs
jae
dec
pushf
not
mov
push
call
add
repnz
adc
or
mov
mov
cld
mov
in
mov
icebp
addb
movsb
jle
push
out
insb
sbb
in
jle
popf
cmp
pop
pop
test
shrb
in
fptan
push
cmpsb
pop
mov
ds
inc
mov
out
enter
pop
and
pop
repnz
cmp
push
inc
pushf
shlb
mov
jb
ret
and
sbbl
add
out
es
xor
sbb
or
mov
stos
push
scas
adc
mov
pop
icebp
in
lea
aam
jae
inc
and
adc
es
aas
mov
loopne
adc
out
les
test
mov
sbb
inc
insb
pop
mov
jmp
push
mov
mov
cmc
cmp
clc
add
pushl
movb
lea
jno
mov
sbb
bt
pusha
mov
stc
cmp
jmp
push
lea
je
push
pusha
push
lea
jmp
cwtl
lahf
movb
cwtl
pop
setno
not
push
not
mov
lea
pusha
movb
movl
movl
mov
pusha
movb
pushl
ret
xchg
xor
push
in
repnz
lock
outsb
mov
xchg
inc
push
insl
push
rorb
mov
add
pusha
js
sub
pop
mov
add
test
push
jmp
ds
or
add
push
stos
sub
daa
int
daa
pop
pop
xchg
repnz
mov
dec
clc
mov
cmc
or
add
in
ja
cmpsb
data16
fnsave
cmp
cbtw
jp
inc
imul
adc
jl
mov
in
aas
mov
pop
sub
bound
xor
popa
add
inc
bound
stc
rcl
sub
or
jbe
inc
mov
cmp
sahf
int3
ret
int
pop
cmpsb
and
aam
mov
or
aam
and
clc
stc
add
pushf
movw
lea
jmp
shl
call
mov
jb
inc
cmpsl
add
jno
pop
cmpsl
or
xchg
jae
pop
scas
test
mov
pop
cmp
fs
or
lahf
jo
adc
jl
stos
int3
call
sbb
mov
and
cmp
cmpsb
loopne
aam
mov
and
sarl
popf
cmp
jne
nop
pusha
hlt
push
push
dec
ror
cs
mov
cmpsb
stos
mov
sti
lds
jmp
aaa
push
mov
push
mov
sbb
cmp
sub
cwtl
pop
hlt
inc
les
nop
sub
in
lcall
movsb
xchg
and
movw
lea
je
push
sub
pusha
bt
cmp
pushf
lea
ja
call
jg
test
adc
pusha
xchg
mov
je
add
add
mov
xor
and
stos
mov
push
sbb
das
xchg
mov
imul
out
inc
mov
push
and
aas
jge
test
mov
jmp
xor
jnp
ljmp
lods
sub
je
pop
cld
adc
sbb
sahf
xchg
jge
cli
push
fdivrs
mov
gs
mov
call
or
add
repz
pushf
pusha
pushf
lea
jmp
lret
inc
hlt
dec
adc
jle
pusha
in
pop
push
fdivs
pop
andb
out
or
sahf
sub
into
test
cmp
lret
jle
pop
sub
jmp
call
cmc
jno
xor
jmp
xchg
xchg
std
jmp
sub
push
mov
cs
data16
sbb
cli
or
mov
ja
scas
in
imul
jb
mov
fistpl
sbb
ja
pushf
mov
xchg
jno
scas
xorl
cwtl
add
sub
mov
and
data16
push
out
test
add
aas
daa
sarb
mov
scas
ljmp
imul
jo
jecxz,pn
aaa
xchg
movsb
sar
scas
out
imul
adc
xchg
cmp
dec
lods
and
lds
or
iret
incb
call
jb
push
xlat
daa
in
sti
inc
divl
push
aad
push
pop
rcrb
pop
xchg
movsb
push
xor
stos
outsl
rcll
and
sub
scas
bound
inc
enter
adc
iret
aam
adc
pushl
jecxz
sbb
out
and
dec
sub
outsl
adc
loopne
push
iret
or
add
gs
add
sub
xchg
fsubl
jmp
pop
and
fadd
out
mov
or
or
decb
mov
pop
lds
pop
bound
mov
divl
jb
and
push
out
int3
sub
mov
and
dec
push
movsl
add
loopne
aas
or
and
nop
mov
and
les
out
sub
adcb
cmpsl
addl
mov
sbbl
adc
push
jne
inc
dec
mov
or
and
dec
std
bound
insl
cmc
icebp
mov
out
lret
inc
fmuls
test
call
pushf
jmp
add
push
movzwl
btc
mov
cmc
add
pushf
mov
stc
cmp
test
jmp
push
lock
std
std
lea
add
push
jge
push
into
into
das
lea
or
ss
int3
lahf
cld
fnstsw
cltd
in
cwtl
dec
dec
stos
and
aam
pop
enter
shrl
adc
test
or
jno
xor
je
in
xchg
push
cmpsw
adc
in
and
xchg
call
enter
aam
xchg
jle
dec
adc
je
sub
mov
or
test
insb
nop
cld
mov
pusha
jbe
push
into
push
aas
mov
mov
mov
xlat
add
int3
rcll
les
insb
jns
enter
push
xchg
repz
or
hlt
inc
out
mov
ret
push
and
sub
jb
outsb
out
pop
out
inc
cld
cmp
popf
addr16
or
cmp
aam
mov
push
pop
jl
cmp
jo
xor
mull
cwtl
outsl
mov
data16
inc
mov
ret
test
iret
xor
lcall
fsts
xor
cmp
outsb
add
mov
inc
sbbb
cltd
dec
mov
fsubs
ljmp
push
imul
clc
or
addr16
dec
mov
lcall
jo
and
int3
rorb
jb
push
loop
mov
cwtl
aaa
pushf
cmp
jmp
das
int3
cmp
xor
bt
xlat
mov
push
mov
push
mov
xchg
iret
mov
xor
out
xor
xor
inc
add
fsubrl
iret
fcomip
sub
sub
movsl
scas
inc
jno
jbe
push
lret
sbb
fldt
mov
mov
push
call
push
sbb
std
push
cmp
out
pop
sbb
cs
sbb
into
inc
xchg
fsubrs
push
pusha
scas
shll
cmp
cmp
jmp
push
aam
dec
adc
add
jle
pop
loopne
mov
lret
pushf
mov
xchg
mulb
mov
mov
or
or
mov
or
fidivrs
mov
fdiv
scas
add
faddp
adc
dec
shrl
push
xlat
roll
fdiv
lods
pop
jbe
inc
loopne
orl
mov
sbb
dec
ret
cmp
pusha
daa
ror
bts
shrd
mov
cmp
movb
cmc
add
bt
pushl
clc
mov
movzwl
lea
bswap
bswap
bswap
mov
cmp
add
jmp
add
dec
gs
popa
addr16
outsl
js
add
sub
jmp
rol
xchg
stc
btc
btr
mov
clc
setg
rcr
aad
sub
aas
push
mov
lahf
push
cwtl
push
daa
rcl
add
bsr
push
aaa
push
mov
test
mov
test
mov
pushf
lea
jge
pushf
lea
je
pushf
not
mov
dec
add
dec
bsr
dec
mov
stc
cmc
test
pushf
pushf
call
movb
imul
pusha
test
add
pusha
push
pushl
lea
jmp
mov
jb
lods
and
sbb
insl
addl
mov
push
daa
add
dec
xor
pop
sbb
test
dec
mov
sbb
iret
mov
jmp
jnp
gs
dec
test
ja
mov
rorl
add
loope
mov
fdivs
loopne
sarl
popf
loopne
mov
inc
filds
mov
xlat
add
dec
push
fisubl
in
jmp
movb
pushf
pusha
imul
stc
jmp
ja
jbe
adc
mov
ds
scas
push
mov
and
pop
sbb
test
cmc
pop
jge
sbb
sub
ds
add
push
int3
lcall
xchg
nopl
push
jp
pop
lods
jmp
adc
cli
push
cmp
jae
inc
das
mov
lcall
lods
in
xchg
ret
imul
test
pop
adc
dec
or
push
fildll
adc
addr16
cmpsl
bound
testl
pop
js
adc
push
shrb
inc
mov
sbb
push
jbe
pop
add
dec
ret
mov
cwtl
addr16
sub
xor
jno
xchg
and
mov
adc
push
roll
ret
xor
fisttps
sub
dec
dec
or
loope
dec
lds
das
fnsave
sub
leave
rcll
jns
loopne
gs
movb
dec
dec
xchg
outsl
shll
insb
ja
ss
adc
dec
ljmp
push
testb
or
mov
xor
subb
ud2
bound
loopne
mov
inc
xor
fisttpll
pop
pusha
out
cmpsl
and
pop
fldt
sti
inc
add
sbb
sub
sub
jnp
sbb
jge
sbb
mov
mov
sbb
jmp
pop
sbb
fsub
or
mov
mov
sar
add
adc
sub
data16
sub
scas
adc
cmp
int
arpl
pop
rclb
jns
js
mov
mov
mov
xor
sahf
nop
in
dec
sti
test
pop
stos
imul
fdivs
inc
cmp
push
push
mov
push
adc
clc
in
scas
subb
ja
jnp
repnz
sbb
xchg
into
push
ret
lcall
stos
adc
mov
or
lods
cltd
cmpsl
jbe
xor
xlat
loopne
push
bound
mov
popa
sbb
mov
out
ret
mov
adc
test
push
lods
cli
pop
cmpsb
fildl
mov
inc
in
inc
aam
dec
int3
cmp
insl
push
add
pop
mov
mov
sbb
xchg
ljmp
add
xchg
jno
xchg
xor
push
and
imul
and
sub
adc
in
push
sub
and
pop
adc
lock
inc
call
cmp
pop
lahf
sub
mov
or
push
xor
sbb
sbb
add
adc
stos
lcall
and
xor
xchg
pop
xchg
test
adc
popf
push
sbb
mov
sbb
js
lahf
in
int3
add
outsl
push
mov
push
dec
xor
cmc
je
push
push
xchg
lahf
popa
sbb
jno
sub
or
test
test
mov
push
mov
jle
movsb
jl
sub
adc
fs
pop
xchg
jle
es
and
jge
and
sbb
jecxz
and
sub
cltd
movsl
inc
mov
je
and
add
movsl
push
pushf
dec
clc
push
xor
faddl
sub
adc
decl
xlat
mov
dec
jp
and
gs
cmp
dec
in
fnstsw
push
jae
pop
cmp
mov
movsb
and
sbb
lock
push
pop
lods
ret
push
mov
dec
xor
cmpsb
push
pop
inc
jle
and
ljmp
sub
rcrb
push
xor
and
xchg
cld
dec
lods
xor
mov
xor
mov
jb
lahf
stc
jno
test
add
or
std
mov
mov
mov
adc
sbb
pushf
jae
lret
xchg
adc
loopne
cmp
mov
xchg
and
inc
or
jbe
or
and
mov
jns
or
fs
sub
lds
sub
pop
sbb
pop
sahf
push
dec
and
rorb
pop
es
mov
movsl
arpl
mov
jo
adc
pop
stos
das
lea
xor
into
popa
shlb
inc
data16
fs
sbb
jo
pop
adc
mov
dec
xchg
and
xchg
test
xchg
xchg
mov
in
pop
and
sub
inc
push
sbb
or
xor
push
enter
xchg
mov
mov
pop
mov
cmp
mov
addr16
es
mov
in
pop
add
and
add
aam
repz
mov
mov
aad
std
xor
and
imul
sbb
xor
cmp
lods
mov
jno
adc
sbb
cli
xor
xchg
or
jae
sbb
mov
and
in
jmp
hlt
cld
movsb
adc
push
lock
cmp
insb
sbb
cmp
inc
add
push
mov
mov
stos
sbb
aas
call
pop
dec
rcrl
xchg
sub
fdivrl
data16
cld
and
push
icebp
or
and
lcall
rol
cmp
js
jle
push
sub
loopne
adc
pop
sbb
and
jns
imul
push
inc
and
sub
mulb
es
cld
cmpsl
scas
scas
mov
shr
ds
sub
cwtl
mov
or
and
in
idiv
and
mov
add
lret
mov
imul
out
fnstsw
pop
pop
cs
and
push
in
movsb
jp
mov
or
sbb
ljmp
sbb
mov
push
xor
jg
incl
cmp
sbb
sbb
mov
mov
push
push
and
xor
mov
push
or
xchg
mov
popf
sbb
aad
sbb
sub
and
xor
jg
inc
push
mov
sbb
aad
gs
cmp
scas
int
arpl
inc
pushf
mov
pop
test
add
xchg
mov
xchg
xchg
fcomps
adc
adc
add
addr16
sbb
rcrl
and
or
rorb
push
aas
fs
push
pusha
int3
stos
cli
test
rorb
pusha
cs
loopne
mov
clc
xor
js
sub
xlat
push
aad
sbb
cltd
lock
jne
decl
and
lods
movsb
inc
xor
das
lcall
push
mov
and
xor
adc
movsb
push
movsb
mov
aam
dec
cmpsb
repnz
pop
jbe
sub
mov
xor
sbb
repz
and
dec
cmp
dec
test
cmp
aaa
daa
xor
xor
les
push
mov
scas
pop
and
push
sbb
pop
pop
popa
imul
aam
push
inc
pop
sbb
push
pop
jl
out
js
mov
and
lea
rclb
es
mov
cltd
and
adc
mov
cmp
or
loopne
sub
cmp
and
mov
adc
cmp
lahf
es
js
sub
jne
sub
fstpl
outsl
js
adc
loope
lret
movsb
and
mov
and
fwait
dec
mov
js
in
cmpl
test
mov
add
and
cld
add
in
pop
cmpsl
mov
aaa
push
xchg
cmpsb
push
jle
xor
or
and
sub
addr16
insb
sub
mov
daa
push
movsb
leave
xchg
sub
imul
lods
cmp
sbb
out
call
xchg
stos
mov
jecxz
sar
jle
push
or
mov
xor
pop
clc
aaa
xchg
loop
arpl
leave
in
fldt
and
mov
mov
mov
inc
data16
cli
dec
pushf
cwtl
inc
mov
dec
movsl
xor
cmpsl
pop
pushf
aaa
pop
mov
jbe
xchg
dec
xchg
and
scas
xchg
mov
imul
dec
pop
and
es
xchg
dec
lcall
and
pop
inc
lahf
mov
clc
xor
bound
popa
push
aaa
adc
lahf
push
cmp
jp
aaa
or
mov
stos
or
mov
out
lahf
pop
cmp
or
lahf
in
imul
clc
cmp
pop
xchg
xchg
push
test
xor
xchg
or
test
cwtl
xor
lahf
daa
push
push
jle
pop
cld
inc
jns
aam
pandn
out
cltd
jne
xor
cmp
outsl
aas
arpl
js
inc
call
sub
sbb
gs
mov
sbb
lahf
lods
rcrb
lds
arpl
add
mov
mov
loopne
sub
inc
push
sbb
add
push
in
cld
jbe
sbb
mov
loope
pop
sbb
pop
outsb
popf
pop
push
testl
fisubrl
outsb
dec
pop
sub
mov
lret
fisttpll
cmp
sahf
sbb
sbb
in
std
mov
mov
and
mov
leave
jp
xchg
sbb
mov
and
fstpl
addr16
adc
cltd
dec
lods
loope
cmc
pushf
ljmp
ja
stc
inc
daa
movsb
test
int3
sbb
add
jne
inc
xor
push
inc
cltd
les
loop
std
mov
push
adc
cmpb
sti
dec
xor
lods
test
clc
adc
and
aaa
ss
pushf
sub
es
inc
and
xchg
das
movsb
jo
and
cld
xchg
insb
xchg
cmp
orb
mov
andps
lods
ja
cltd
insl
loop
out
loope
push
js
or
push
ljmp
js
addr16
xchg
lcall
imul
pop
sub
sub
mov
stos
sbb
lock
cmp
cmp
push
pop
and
decl
shrl
fdivrs
xchg
jns
insb
lahf
bound
dec
xor
jl
cld
jecxz
pop
push
mov
ds
gs
inc
addb
scas
ret
popa
mov
hlt
cmp
cld
cwtl
jns
cmp
scas
fwait
xor
pop
shll
orb
int3
xor
icebp
sbb
push
outsl
fs
shlb
les
cmp
mov
xor
popa
add
sbb
push
adc
int
sbb
mov
cmp
outsl
sbb
sub
sbb
popf
or
cmp
add
cltd
clc
sbb
mov
aad
ja
pop
scas
or
jl
add
cmp
insb
iret
inc
push
xchg
push
push
shll
or
in
cmpsl
push
mov
movsb
cltd
fstps
neg
cwtl
sbb
xor
imul
and
add
andl
sub
pop
push
jb
mov
test
xor
in
cmp
jb
dec
daa
out
xchg
movsb
pop
cmc
sbb
xor
mov
in
cld
lcall
and
aam
sarl
icebp
std
adc
je
sbb
pop
cld
sbb
clc
loope
sbb
in
sbb
and
and
aaa
cmp
stos
fisubrs
adc
xor
and
and
cmp
cmpsb
pop
shll
cmpsl
fcoms
xor
jmp
pushf
xor
and
xor
mov
idiv
adc
pop
test
jl
fnsave
shlb
mov
xor
std
pop
out
adc
push
cmp
adc
adc
xor
jl
lcall
adc
pop
pusha
aaa
out
pop
pushf
inc
push
jl
push
int
mov
xor
pop
pushf
xchg
mov
cltd
and
ss
xchg
mov
jle
cld
cmp
xchg
fmuls
int
ss
aas
jmp
sub
call
cmc
xchg
ficoml
and
sbb
inc
sbb
and
out
cli
xchg
filds
imul
jg
inc
popf
popa
fsubrl
test
sub
push
jg
push
imul
sbb
fs
lcall
jecxz
xor
sahf
sub
sub
xor
xchg
xchg
popf
pop
pusha
lcall
insb
mov
xor
cmp
push
arpl
xchg
xchg
aad
inc
popa
movsb
inc
imulb
sub
push
dec
pushf
jge
jae
pop
xchg
addr16
imul
or
fst
adc
cltd
or
push
cld
leave
sti
fwait
xchg
fsubs
inc
fistpl
lahf
loopne
shrl
adc
sbb
in
and
aas
xor
and
popf
iret
inc
mov
pop
popf
ss
add
movsb
jp
cmovae
nop
sbb
es
sub
data16
rcrl
pop
jp
aad
pusha
push
pop
test
lret
jg
xchg
scas
fstps
sti
lahf
fcompl
aad
add
inc
adc
inc
and
push
pop
mov
pop
sarl
xchg
mov
xchg
xchg
jle
sub
xor
pop
out
ficompl
cltd
mov
jl
and
cmp
push
lock
mov
inc
xor
es
mov
notb
gs
rcll
adc
pop
stos
lahf
sbb
sbb
dec
and
mov
xchg
je
cmpb
xor
lock
cld
dec
sbb
mov
xor
stc
ret
jge
sbb
jl
jle
mov
push
xchg
in
sub
mov
cmp
in
and
xor
ret
sbb
inc
xchg
sbb
inc
adc
stos
mov
inc
test
jl
mov
fstpl
cmpsl
fdivs
dec
stos
pop
popf
mov
ja
cwtl
sub
inc
mov
lret
sbb
iret
outsl
push
leave
push
push
pop
and
popa
push
enter
loopne
xchg
cmpsl
or
push
sub
xchg
and
add
hlt
fmuls
lock
push
pop
xchg
cmp
sub
xor
mov
test
pushf
push
pop
insb
or
sub
or
insb
mov
nop
pop
pop
mov
pop
sbb
add
xor
cmp
pop
movsb
and
scas
fimuls
sbb
push
xchg
imul
jg
push
cmp
aam
and
insl
or
lods
aam
xor
push
in
add
sub
adc
outsb
out
xor
out
cld
sub
and
adc
in
js
add
adc
notb
fs
in
sub
iret
test
aaa
add
lock
fbld
push
mov
std
outsl
jp
and
imul
enter
ja
lock
dec
xor
and
mov
mov
and
shll
data16
push
push
in
andb
in
pop
jb
push
push
imul
in
jno
sub
mov
xchg
jge
and
cmp
enterw
mov
in
and
sub
and
enter
xchg
jae
xor
or
cld
cli
repnz
push
ds
sub
xorl
ljmp
and
mov
jae
popf
mov
sarb
dec
push
movsb
aas
xor
adc
push
addr16
sbb
pop
sbb
in
pop
cld
fbld
mov
scas
fdivs
or
loopne
gs
jno
xor
and
jbe
lock
sbb
and
dec
push
dec
mov
xchg
add
mov
mov
dec
aaa
jnp
or
popa
jne
andb
inc
push
inc
orb
in
jge
fs
subl
mov
adc
je
adc
push
mov
rorb
mov
jecxz
imul
ja
pop
out
dec
mov
int3
inc
movsb
shl
les
push
or
dec
inc
pop
rolb
mov
cwtl
popa
mov
xchg
adc
push
fsub
sbb
mov
in
out
call
lock
clc
lcall
add
divb
jno
sbb
xor
js
es
sarl
adc
movsl
sbb
pusha
cwtl
xor
xchg
sub
sub
pop
stc
fs
addr16
add
pop
repnz
ja
xor
inc
push
pop
inc
jae
mov
push
xchg
adc
lods
aas
lahf
es
adc
sub
sub
sub
jecxz
mov
pop
aad
xor
in
adc
clc
pop
push
in
lcall
mov
imul
push
inc
lahf
pop
cmp
pop
dec
fcoms
aaa
cwtl
gs
aaa
or
cmp
repz
addr16
push
cmp
mov
movsl
add
push
test
inc
aam
mov
cld
fsubrl
mov
lahf
sahf
rorl
fldt
or
xchg
in
stos
push
lcall
call
hlt
jle
mov
icebp
imul
cmp
cmc
in
lock
jae
dec
inc
sbb
int3
dec
pop
and
xchg
es
cltd
ss
hlt
mov
stos
mov
inc
sub
imul
and
sub
or
sbb
stc
pop
fsubrl
mov
xchg
sbb
jge
dec
popf
ss
loop
mov
cld
imul
xor
sbb
adc
ffreep
fbld
adc
pop
loope
in
mov
xchg
cld
xor
cli
or
sub
and
rcrb
xchg
outsl
xchg
pop
push
pop
xchg
fucomip
rcr
stos
pop
loop
cmp
das
cmpsl
mov
clc
add
add
aam
lds
mov
inc
scas
dec
in
and
pop
gs
pop
mov
and
push
jno
lea
dec
push
add
insb
std
inc
xchg
fildl
push
or
in
insb
jae
cltd
push
fcomip
cmpsb
sahf
add
testl
mov
test
movsl
outsb
call
cmp
xchg
aad
mov
ja
test
mov
push
mov
cld
std
stos
jecxz
imul
jle
xchg
sti
sbb
fs
sbb
sub
fdivs
data16
outsb
pusha
push
pop
push
mov
test
push
cmpsl
imul
cmp
test
imul
and
inc
mov
leave
add
push
data16
cmpsl
push
fs
cmp
push
push
sbb
filds
push
inc
cmp
sub
test
fadds
dec
sub
std
xchg
imul
xor
mov
das
test
mov
lahf
and
lods
jne
mov
add
cld
push
xchg
push
or
gs
adcb
add
loop
pop
fistpl
movsl
nop
sahf
loopne
mov
test
add
imul
and
xlat
mov
mov
sub
sbb
jg
jnp
and
sti
jle
in
idivl
out
cmpsb
mov
pop
in
jl
inc
test
cmc
sbb
jl
cmp
xor
daa
lret
cmp
sahf
fstl
jl
or
std
lock
xchg
in
movsb
scas
sbb
hlt
cmp
cmp
test
test
dec
loope
and
push
or
add
sub
inc
mov
int3
push
cwtl
dec
mov
dec
and
int
movsb
rcrl
mov
out
cmp
fwait
in
addr16
push
sub
lcall
lahf
and
or
std
lret
lahf
mov
movsl
aad
dec
in
adcl
pop
pushf
lahf
outsb
push
cwtl
gs
adc
jae
pop
cli
push
pop
in
sub
jle
lock
sti
push
jo
ja
or
xor
dec
insl
sub
mov
mov
cld
test
aaa
jle
dec
es
fstp
jl
jno
jle
cld
lret
mov
sub
sbb
or
jp
jle
repnz
push
and
adc
movsb
mov
xor
insl
insl
cwtl
ss
cld
mov
cwtl
add
pushf
and
inc
rolb
pusha
je
inc
dec
xor
jg
jae
mov
and
rcrl
xlat
loopne
or
push
sub
cmp
fldenv
shrl
push
push
ljmp
mov
pop
jbe
mov
cmp
xor
in
sub
push
mov
and
pop
loopne
lock
lods
push
nop
and
xchg
pushf
cld
push
pop
or
loope
mov
push
push
mov
mov
cld
aad
sbb
inc
cmp
sahf
pop
xchg
add
mov
outsb
or
cmp
outsb
not
rol
push
out
lcall
cwtl
cwtl
push
out
stos
pop
and
mov
iret
xchg
cmpsl
mov
int3
push
pusha
sbb
sahf
push
xor
push
add
negl
pop
inc
out
loop
jbe
daa
dec
fwait
adc
jp
sub
andb
es
dec
add
cmpsb
mov
lods
xor
rclb
inc
xchg
pusha
mov
add
leave
addr16
das
jb
insb
pop
es
and
imul
and
enter
mov
pop
shl
movsb
xchg
push
inc
xor
pop
pushf
mov
sub
movsb
xor
gs
dec
hlt
lock
cmc
lret
ljmp
mov
mov
jmp
shrl
cmc
push
fs
and
inc
fistpl
push
in
pop
cld
mov
lods
sub
dec
std
js
xchg
fdivrl
cs
cmp
cld
mov
xor
clc
movsb
fstpt
popa
cld
mov
add
jae
daa
or
or
inc
in
push
xchg
pop
add
lret
lods
aad
push
cmp
out
test
ljmp
lcall
cltd
add
repz
inc
stc
in
and
scas
lods
out
mov
dec
out
cmp
add
xchg
mov
in
es
push
or
int3
clc
sahf
test
or
aam
sub
fsubl
loop
and
jle
roll
popf
mov
adc
sbb
dec
mov
cltd
mov
sti
aam
adc
jl
test
sbb
jle
and
push
loopne
vaddss
mov
lcall
in
popf
pop
dec
inc
xchg
xchg
xchg
pop
adc
cwtl
cltd
pop
cwtl
xchg
mov
xchg
outsb
inc
jge
push
adc
mov
push
lret
imul
dec
lcall
pusha
sti
mov
popa
sbb
jbe
gs
aam
jle
inc
adc
jl
mov
fs
stos
int
jmp
pop
sbb
sbb
ss
repnz
lcall
pop
pusha
mov
jmp
arpl
fsub
and
pop
add
cmp
push
in
sbb
pop
xchg
ss
or
inc
sahf
dec
sub
mov
cmp
and
mov
xor
addl
inc
sbb
in
fs
jmp
cld
lods
js
mov
xor
sub
dec
test
jmp
push
jo
jae
jns
fistpll
pushf
adcb
insb
pop
popf
mov
rol
enter
sub
adc
adc
pop
clc
mov
mov
pop
out
loopne
inc
fistl
aad
mov
sahf
cwtl
mov
pop
movsl
pushf
and
mov
pop
pop
imul
push
and
xchg
cs
sbb
xor
mov
cmp
or
out
das
xor
and
sbb
dec
cmp
callw
pop
dec
sahf
insb
mov
mov
sub
inc
imul
out
dec
shll
mov
sub
dec
push
dec
push
or
mov
std
and
pusha
movsl
pop
push
sbb
cs
mov
call
subb
sub
sbb
and
jne
inc
push
insb
in
movsl
push
lods
sub
sub
jbe
rcrl
in
xacquire
sbb
pop
subl
mov
int3
pop
cmp
push
mov
push
push
outsb
cltd
inc
mov
cwtl
jbe
cltd
inc
mov
sub
xorl
or
mov
dec
mov
bound
cmpsl
and
stc
pushf
add
lahf
loopne
arpl
cltd
xor
add
inc
mov
cmp
sbb
scas
cld
xchg
inc
jg
shr
repnz
mov
cmp
ds
dec
jmp
push
es
mov
sbb
clc
cwtl
pop
dec
gs
xor
inc
pop
adc
push
and
jae
xchg
mov
sub
jbe
and
add
ss
and
nop
out
sub
mov
sub
mov
insb
jo
aas
loopne
push
cs
test
add
popf
xor
pushf
sbb
pop
int3
mov
sti
dec
ss
sbb
and
jae
lahf
xchg
sbb
push
xchg
out
jg
jle
in
sbb
fs
push
cmp
pusha
pop
adc
popf
pop
add
rcrb
es
enter
mov
mov
cmp
or
scas
inc
push
adc
cmpsl
dec
rorb
pop
pop
pop
shll
lds
mov
lret
test
xor
mov
xchg
es
mov
lea
xor
pushf
dec
push
jns
xor
inc
push
jo
sub
pop
xchg
dec
sbb
mov
xor
test
sbb
xor
push
mov
and
cmp
sbb
xor
inc
adc
cltd
out
aam
daa
sbb
push
lahf
mulb
gs
xchg
push
pop
sbb
shr
loop
lods
imul
push
cwtl
jbe
xchg
xor
cmp
inc
jb
rcr
dec
pop
clc
cmp
cmpsl
dec
mov
mov
call
test
push
dec
call
inc
js
rolb
jl
push
shlb
clc
cltd
cmp
pop
dec
or
pop
pop
cld
pop
inc
sbb
dec
mov
cmp
xchg
int
pop
popa
std
call
popf
lods
dec
xor
sahf
mov
movb
bound
call
lret
mov
ss
pop
hlt
push
stos
jle
dec
xchg
cmp
inc
sbb
sbbb
aaa
sbb
sbb
pop
stc
std
mov
mov
xchg
jecxz
pop
movsl
pop
insb
push
pusha
jecxz
cmp
ja
cmp
xlat
inc
sbb
push
es
cmp
fdiv
mov
mov
dec
popf
gs
aas
inc
gs
adc
popf
xor
arpl
push
pop
das
jne
inc
outsl
add
cmpsl
add
xor
xchg
xchg
or
cmp
subb
cmc
aam
add
sbb
xchg
test
sbb
cmp
push
je
pop
pop
mov
and
je
cmc
imul
movsb
ljmp
or
fsts
rorb
push
ljmp
gs
ret
inc
cmpsl
jle
push
or
dec
pop
jle
sbb
mov
int3
sbb
mov
add
into
test
jae,pn
cld
outsl
aaa
pop
fdiv
sub
jo
ds
nop
mov
mull
lret
dec
arpl
popa
sahf
and
cs
out
es
xor
and
push
cmp
clc
inc
add
or
in
adc
fdivl
imul
negb
jae
mov
es
and
pop
lea
mov
pop
xorl
mov
jle
push
mov
fisttpl
lret
sbb
aaa
mov
sbb
ja
dec
xor
push
shl
mov
cld
mov
imul
jns
mov
and
int
xchg
jl
jne
ret
lds
jns
repz
xor
mov
sarl
fs
out
jbe
cld
mov
add
inc
or
pop
clc
xchg
xor
lahf
repz
mov
mov
les
or
mov
xchg
add
xlat
jl
cmp
jb
mov
stos
cmpsb
cmc
pop
push
je
popa
sub
imul
jge
rcrb
outsb
repnz
je
add
sub
in
cmpl
ljmp
int3
add
or
inc
inc
and
sbb
inc
movsl
sbb
pop
into
sub
xor
xor
xchg
mov
xchg
test
add
inc
jae
cmp
push
pop
pop
cli
imul
add
or
jbe
mov
jnp
add
insl
sbb
fs
cmpsb
mov
hlt
mov
inc
push
hlt
mov
scas
je
rcrb
and
lcall
fidivrl
jmp
pop
std
inc
popf
push
xor
mov
pop
pop
adc
inc
inc
sbb
js
sbb
bound
cli
xchg
enter
fwait
push
cld
push
cmp
es
adc
das
imul
push
sbb
popf
daa
sahf
pop
enter
jecxz
fistps
sbb
ss
sub
push
outsl
inc
jmp
xchg
mov
jmp
mov
inc
outsl
in
in
clc
cmp
jle
movsl
cmp
ss
mov
insb
mov
stc
sbb
fdivrp
pusha
fldenv
popf
xlat
adc
mov
ficoml
lds
lcall
dec
xor
push
mov
mov
pushf
and
mov
mov
int
in
mov
sbb
inc
jmp
dec
pop
adc
sub
pushf
and
arpl
ret
es
xchg
scas
pushf
jb
es
testl
inc
sbb
mov
or
jge
sub
xchg
sub
sbb
cltd
sub
jl
xchg
cmp
xorb
jo
cmpl
cmp
dec
adc
jb
stos
sub
std
jp
push
sbb
sti
mov
stos
in
jbe
xor
aaa
cltd
push
rcr
out
cmp
ret
jnp
insl
cmp
and
ds
mov
fdivr
movsl
sti
sub
mov
lods
lods
pop
mov
cmpsb
mov
jmp
daa
cld
and
pop
jae
push
cld
xchg
sub
cltd
je
pop
repnz
push
movsb
movsl
sbb
adc
jns
dec
xchg
das
xchg
xchg
inc
mov
pop
xchg
adc
sbb
leave
arpl
cs
xchg
xchg
xchg
movsb
sahf
mov
f2xm1
cmp
loope
push
leave
addb
and
cmp
daa
repnz
inc
popa
pop
das
xor
lret
inc
sbb
cmp
inc
mov
xchg
cmp
xor
mov
xor
dec
jp
xchg
pop
test
sahf
sub
sub
ljmp
xor
and
and
push
movsb
mov
sahf
push
xor
jo
xor
repnz
in
adcb
mov
je
aaa
imul
adc
pop
pop
movsb
shlb
dec
and
and
fwait
inc
jle
sbb
lds
mov
inc
lea
mov
repnz
pushl
xor
or
add
sub
and
push
pop
sbb
sbb
int3
inc
push
and
cmpl
loopne
mov
nop
dec
movsb
movsl
dec
sbb
xor
cli
mov
and
pushf
push
push
mov
mov
movsl
xchg
fcompl
push
jp
cmp
xor
push
sbb
mov
xlat
mov
dec
inc
pop
fsubr
js
xchg
movsb
in
cwtl
pop
cmpsb
ja
fadds
pop
aaa
dec
test
inc
mov
add
jle
and
in
das
push
push
pop
stos
test
push
lahf
or
fdivl
out
adc
push
sub
pop
jno
mov
lahf
mov
aaa
pop
rcll
sbb
shl
cwtl
and
popf
sahf
ljmp
push
fistpl
jl
shrb
je
push
es
cmp
sub
inc
xor
pop
lods
aam
mov
and
bound
xorl
jns
xchg
cli
int3
popf
nop
pop
pop
xchg
push
test
push
push
popf
and
cmp
test
sbb
and
push
pushf
mov
lods
dec
lcall
push
cmpl
xor
jne
xchg
sbb
pop
mov
and
fwait
movsl
sub
pop
jb
xor
sbbl
iret
aaa
insb
clc
pop
jge
scas
fidivl
cltd
pushf
mov
pop
scas
iret
sahf
cmpb
or
sub
ds
daa
mov
jne
lahf
in
cmc
fwait
dec
cwtl
and
lcall
movsb
jne
cs
and
std
push
jecxz
pop
out
fdivrl
pop
and
fcompl
out
jp
push
outsl
xor
addr16
fs
jno
shl
push
and
ss
into
jg
movsb
test
inc
js
ljmp
sbb
cmpl
sub
data16
cmp
dec
push
js
sub
mov
xor
cld
imulb
push
pop
jns
sbbb
cmp
ret
lock
int
jl
or
xor
sarb
and
aam
cltd
scas
adc
aam
and
xor
cld
mov
jp
sub
in
les
pushf
and
iret
mov
mov
in
and
mov
jge
sub
cli
cld
adc
xor
pop
test
sub
xchg
sub
jns
or
int
sbb
cwtl
inc
and
sbb
scas
js
and
aaa
ljmp
into
test
jb
and
and
fbstp
aam
push
insb
mov
xchg
fs
jg
mov
or
sub
xorl
mov
jns
call
dec
aad
cld
movsb
and
sbbl
and
inc
lcall
popa
cmpl
rorb
and
xor
and
int
sub
daa
pop
out
movsb
pusha
or
rol
les
inc
cmp
push
sub
movb
push
and
insb
les
adc
lds
les
inc
mov
outsb
and
imul
test
movsl
jno
scas
mov
mov
xchg
data16
jns
jge
addb
xchg
popf
sub
ss
xchg
pop
js
or
ljmp
es
movsl
jge
stos
js
lods
cmp
insb
mov
aad
cld
sbb
push
and
in
xchg
ljmp
lock
cld
push
pop
into
in
fsubl
imul
cmpsb
sbb
arpl
jl
jns
inc
jno
icebp
aad
cld
ds
int
aaa
inc
cmp
in
and
clc
sbb
pusha
je
hlt
js
aas
js
mov
xchg
cmc
mov
cmp
cmp
les
dec
ss
and
hlt
stos
ret
mov
pushf
and
shlb
pop
negb
mov
ss
es
fs
add
sub
nop
sbb
cmp
daa
daa
test
and
mov
cld
jmp
es
rorl
cmp
sbb
out
nop
ret
push
mov
sbb
inc
das
cmp
fldt
ljmp
sbb
mull
shlb
mov
pop
mov
push
inc
adc
jge
sbb
movsb
mov
daa
xor
add
mov
daa
cld
cli
adc
stos
imul
bound
and
mov
inc
xchg
cmp
and
cmp
movsb
sbb
sbb
sbb
push
es
inc
call
stos
das
sbb
dec
sbb
in
inc
aas
sub
data16
sbb
mov
mov
in
iret
mov
pushf
pop
sbb
xchg
sbb
aaa
mov
ss
lret
jmp
mull
xchg
out
adc
repnz
or
adc
fidivl
imul
jl
notl
push
fwait
or
fildl
jl
and
cld
js
call
sbb
and
rcll
push
jle
push
xor
sbb
and
adc
inc
mov
or
pusha
lcall
jmp
and
jmp
stos
pop
movsl
and
inc
xchg
push
adc
sub
dec
shlb
jne
mov
jb
adc
add
jle
cmp
jmp
sub
lcall
popf
sbb
jle,pt
cmp
push
mov
pop
jl
test
pop
dec
aad
out
pop
xchg
leave
lea
xorb
fldenv
aad
pop
mov
repnz
mov
jae
addr16
cmp
pushf
pop
mov
lahf
stos
inc
cltd
bound
xlat
xchg
stc
push
sbb
mov
xor
cmpsl
push
repnz
outsl
pop
or
lcall
xchg
pushf
cmp
out
mov
daa
rcrb
lahf
sub
dec
inc
cs
out
xchg
cmp
xor
stos
sarl
push
int3
push
pop
dec
push
xchg
sbb
dec
push
lcall
cltd
out
movsb
xchg
popf
rclb
sbb
jno
xor
pop
xchg
test
xchg
sub
int
movsl
push
xor
fcmovnb
push
mov
outsl
movsl
aas
loopne
imul
adc
and
sahf
inc
cmpsl
mov
mov
and
jmp
xlat
es
add
push
dec
sbb
mov
or
push
jmp
dec
mov
mov
xchg
mov
mov
xchg
mov
pop
xor
loopne
int3
es
shll
das
sarl
pop
push
jne
loopne
iret
movsl
sub
fsubrl
sub
addr16
xchg
sahf
pop
xor
xchg
call
sbb
outsl
ficompl
dec
and
js
xchg
push
repz
inc
dec
jo
lds
push
cmp
sbb
xor
in
aam
imul
cltd
or
push
push
sarl
clc
or
aas
xchg
adc
mov
movsb
mov
jp
fsub
mov
sub
gs
test
dec
les
out
je
sub
mov
imul
lcall
mov
push
and
lahf
popa
adc
pop
les
jne
addr16
adc
and
imul
or
pop
mov
lret
pushf
out
movsb
or
jo
mov
in
test
pop
and
cld
xchg
mov
lods
mov
lahf
adc
mov
and
push
pop
xlat
adc
cmc
pop
cs
stos
pop
stc
sbb
rcrl
hlt
sub
mov
sub
fiaddl
mov
fdiv
ret
popa
cmp
clc
push
rclb
mov
and
fisttpl
clc
ljmp
xchg
inc
adc
shlb
aad
mov
xchg
xor
sub
mov
or
fsubrs
or
xlat
sbbl
push
xor
movsb
das
lahf
xchg
and
push
add
js
mov
mov
xor
sbb
dec
or
pop
xchg
mov
and
mov
sub
popf
out
fs
cmp
arpl
stos
ret
nop
imul
and
add
popf
jmp
in
jno
pushf
xor
adc
push
push
ficomps
lods
push
movsb
shlb
jno
lds
sbb
mov
aas
cld
jl
sahf
incl
mov
fcompl
and
and
in
xlat
fdivr
clc
adc
pop
ficompl
xchg
xchg
or
hlt
ds
dec
inc
pop
ss
sub
loop
jle
push
lods
sbb
popl
xor
xchg
mov
sub
dec
mov
xchg
fldz
test
sbb
xchg
mov
xchg
xchg
sub
xchg
in
mov
aaa
push
and
fdivl
call
mov
pmuludq
xorl
push
jl
xchg
cmpb
cld
inc
cmp
pop
jbe
push
adc
sbb
push
push
fs
rorl
pop
cld
pop
jo
sub
sub
jle
jb
dec
sbb
ss
lcall
testb
popf
inc
into
cmp
pushf
ljmp
fcoms
jno,pt
and
or
sub
fwait
jb
xchg
mul
sub
jnp
sbb
aad
jl
stos
test
jbe
lods
push
add
nop
and
push
cmpsl
cmp
cltd
pop
sbb
popf
adc
les
data16
addr16
je
sub
cld
aam
lret
cmp
insl
sub
adc
fdivp
fsub
xchg
fnsave
sub
lret
aad
jecxz
xor
adc
pop
sbb
sbb
mov
repnz
lahf
sub
and
pop
sbbl
push
sahf
push
jb
les
inc
lahf
loop
push
out
je
pop
cwtl
jo
lock
mov
out
jmp
and
out
pushf
pop
xchg
sbb
xchg
dec
lcall
in
repnz
popf
lods
pop
imul
or
das
aam
lea
mov
jne
push
adc
pop
scas
sbb
movsl
js
dec
jns
jne
dec
test
mov
scas
nop
outsb
std
push
and
leave
inc
cmpsl
and
cwtl
xor
std
or
and
and
outsl
mov
in
call
ds
and
test
dec
and
mov
xor
sbb
or
pop
adc
mov
jge
out
adc
inc
adc
push
mov
push
sub
xchg
xchg
mov
sub
ss
in
xchg
mov
cmp
mov
sub
out
xchg
jne
bt
xchg
fisubrl
aaa
bound
je
aam
xchg
jl
cld
in
imul
jle
jl
mov
imul
sbb
and
push
mov
jp
xor
or
js
sub
mov
push
dec
mov
popf
lret
sbb
sub
es
push
std
in
idivl
inc
aaa
cmp
xor
dec
xchg
testb
js
and
xchg
push
cmp
cmp
cmpsl
stc
outsb
or
push
xchg
jns
xchg
dec
add
ret
adc
test
cmp
push
fcmove
jno
cmp
jno
call
cmc
sbb
cmp
and
out
out
nop
cwtl
fdivrs
movsl
je
imul
and
inc
daa
jne
sbb
ljmp
push
xor
adc
jg
xor
aas
xchg
imul
sub
xor
sbb
dec
dec
popf
int3
inc
sbb
popa
xor
out
mov
adc
and
jns
xor
and
add
arpl
pushf
fistl
loop
lret
dec
push
add
cld
iret
stos
or
pop
popf
mov
push
je
dec
cmp
lcall
fstpl
pop
xor
and
xor
jp
cmp
and
xchg
xchg
repnz
mov
cmpsb
test
sarl
and
adc
and
jle
push
pop
mov
cltd
pop
pop
lret
inc
mov
dec
push
inc
cld
adc
add
bound
jl
cmp
shlb
sub
dec
loopne
loop
pop
cmp
movsl
and
jmp
sbb
fcoml
fsubs
push
jo
sbb
xor
mov
and
lcall
jbe
les
rcrb
mov
ret
mov
pop
in
mov
sbb
clc
and
cltd
hlt
push
sbb
sub
xor
fsubl
pop
sbb
loopne
dec
dec
ficoms
jnp
push
pop
lock
cld
scas
mov
pop
cmp
mov
mov
adc
lods
icebp
xlat
jl
lock
jge
arpl
pop
and
jo
in
sbb
bound
and
and
cmp
xor
movsb
pop
outsb
mov
add
sbb
int3
mov
push
and
adc
cld
jg
inc
push
testb
jl
sub
cs
roll
xchg
hlt
adc
popa
sub
scas
mov
sub
adc
cld
mov
xor
push
push
js
and
xor
mov
push
popf
or
adcb
mov
in
aas
push
or
insb
out
sbb
xchg
xor
push
mov
jo
sub
sub
pusha
lea
outsb
das
push
adc
xor
sti
aam
pop
sbb
test
nop
inc
int3
fcompl
or
gs
mov
jle
addr16
mov
cmpsl
scas
and
dec
cmp
add
ljmp
xchg
ret
pop
loop
addl
sbb
sbb
push
jae
jb
js
cmp
fisubl
insb
cmp
popf
pop
sbb
imul
loopne
inc
es
ss
test
adc
sbb
sbb
fmull
sarl
xor
aas
xchg
jb
pop
sbb
das
sub
adc
leave
and
dec
dec
test
or
pop
aad
lea
les
adc
sbb
push
mov
aam
jmp
into
shl
pop
push
add
insl
xor
lock
outsb
sub
and
xor
dec
mov
popf
leave
aam
sbb
lcall
fsub
js
inc
fdivl
cld
repz
jae
outsb
aas
clc
sub
mov
fs
and
mov
shlb
je
adc
and
push
cmp
hlt
daa
push
mov
xor
lret
mov
das
push
mov
adc
and
and
push
lahf
ficoms
mov
sub
sbb
or
cmp
adc
cmp
inc
fisttpll
lcall
cmp
lock
lock
nop
pop
enter
add
out
dec
mov
pop
popf
rcr
fidivs
dec
cmp
pop
mov
mov
xchg
insl
push
sbb
fisubl
aad
xchg
dec
sbb
sbb
fwait
mov
dec
push
xchg
js
mov
movsb
cmpl
sbb
xor
fsubl
fstl
push
mov
push
dec
sbb
roll
fisttps
push
mov
inc
sbb
imul
sbb
pop
xchg
jge
jb
push
int
push
add
ds
sbb
lahf
outsl
js
es
dec
repnz
or
sub
aaa
add
lods
adc
in
adc
mov
repnz
std
imul
sbb
adc
push
leave
shlb
scas
lcall
push
pop
orb
xchg
xchg
xchg
test
xchg
addr16
sub
rol
std
insb
sbb
mov
mulb
and
push
adc
xchg
adc
cmp
xchg
xor
push
inc
mov
daa
stos
adc
cmpsl
js
xor
xor
mulb
xor
out
insb
fidivs
mov
cltd
lds
pop
mov
push
scas
shll
xor
ss
mov
leave
lock
cld
pop
and
les
out
popa
rol
aaa
and
test
sahf
or
sbb
cwtl
lea
or
sbb
xchg
sbb
cld
push
mov
sbb
arpl
xor
jp
popa
adc
mov
or
int3
lcall
mov
dec
pop
std
mov
pop
cmpsb
inc
fildl
sbb
or
mul
lods
ds
xor
lahf
loope
test
mov
sbb
jns
cmp
cmp
push
clc
sahf
push
fdivrl
mov
mov
mov
pop
sub
lahf
sbb
ret
std
lea
add
add
cmp
cwtl
or
ja
adc
inc
and
push
adc
add
and
xchg
cld
add
jo
pop
aad
xor
daa
sahf
jb,pt
cmp
dec
pop
stos
xlat
std
inc
sub
lahf
pop
inc
sbb
fimull
loop
dec
in
adc
mov
xchg
mov
or
fnstcw
lahf
rorl
repz
sub
cmpsb
xchg
pop
out
std
jle
inc
mulb
and
adc
jo
mov
lret
jnp
mov
mov
push
subb
sbb
or
sbb
pop
jne
in
sbb
imul
inc
int3
dec
jl
cs
pop
push
mov
lock
daa
pop
sub
xchg
std
sbb
subb
ja
push
test
aad
jp
jge
addr16
lret
jle
aad
loop
das
mov
ja
arpl
imul
xchg
jno
es
xchg
shll
sbb
lahf
leave
xchg
xchg
fidivl
addr16
ss
sahf
dec
lret
xchg
ds
pop
mov
outsb
or
ja
push
jns
xchg
sbb
orb
xor
popa
cmpsl
bnd
scas
jg
cmp
cld
test
in
pop
mov
dec
dec
loopne
addr16
add
mov
in
movsb
xor
xor
xor
scas
mov
arpl
insb
push
mov
pop
xchg
sarl
out
dec
xor
inc
push
pop
mov
je
imul
push
adc
fmuls
ss
cmp
xchg
mov
pop
pop
sub
lret
xchg
idivb
push
and
pop
jns
imul
and
fsub
movsl
push
sbb
ret
cltd
pop
outsb
xchg
daa
or
xchg
adc
and
sub
dec
lcall
pushf
dec
lods
lret
and
and
sub
push
sub
inc
out
fs
cltd
push
xchg
sub
and
xlat
mov
sbb
mov
push
popf
xchg
and
and
pop
sub
lahf
fistpl
push
xlat
mov
popw
loope
add
fdecstp
xchg
sbb
xor
lods
data16
imul
push
loop
aad
popf
mov
sub
inc
dec
scas
pop
pop
bound
pushf
and
shll
pop
lods
jns
popf
push
sbb
clc
popf
mov
insl
sbb
inc
shrl
leave
repz
adc
adc
pop
jp
inc
sbb
in
cmc
xor
pusha
aas
xchg
out
jecxz
cmp
mov
sbb
dec
inc
inc
sbb
insl
or
jle
adc
xchg
cmp
inc
test
je
inc
ljmp
mov
xchg
pop
xchg
push
pop
and
cmpsl
lahf
pushf
aas
add
mov
or
shrd
push
les
cld
into
or
pop
je
repz
movsl
sub
dec
mov
jbe
insl
imulb
push
sbb
popa
xchg
lahf
jecxz
inc
pop
cmp
out
xchg
mull
and
cmpsb
dec
insb
xchg
push
sbb
and
mov
mov
mov
arpl
fstps
mov
mov
dec
sub
movsl
divb
cld
and
stc
dec
inc
pop
rolb
xor
cmpsl
cmpsb
sub
xchg
cld
push
pop
pop
lcall
sahf
add
jl
lea
enter
lret
cld
ds
push
lahf
xor
sahf
sbb
js
add
jno
or
inc
or
adc
sub
inc
inc
jg
outsl
fs
mov
push
adc
pop
jle
lea
sbb
pop
lret
mov
popf
addr16
cwtl
jb
xchg
mov
xlat
test
in
imul
rorl
inc
or
ss
push
and
shll
xchg
es
dec
pop
out
hlt
or
mov
loopne
and
nop
mov
sub
vpavgb
mov
mov
cltd
fadds
aam
rcrl
pop
mov
pop
ret
inc
faddl
dec
es
adc
adc
in
pop
and
lcall
test
or
push
sbb
dec
ljmp
fldl
in
mov
and
push
lahf
and
negb
cmp
outsb
ret
push
adc
das
and
push
shl
push
inc
jp
sahf
push
int
imul
pop
dec
outsl
xchg
cld
sub
xchg
pop
jno
hlt
call
mov
mov
loopne
aam
adc
fisubrl
fisttpll
loope
pop
mov
push
xor
and
mov
inc
lds
sub
sbb
jle
adc
aam
aad
inc
sbb
cmp
les
nop
call
add
cmp
and
cld
notb
popf
sbb
xchg
mov
xchg
and
or
pop
and
add
in
int3
dec
es
xchg
sbb
mov
jmp
aas
sahf
pop
adc
adc
xchg
push
mov
daa
imul
ds
fstl
push
or
xchg
js
jmp
xor
mov
push
mov
push
adc
adc
xor
xor
or
dec
cvtps2pd
pop
scas
xor
aam
pop
shr
xor
sbb
xchg
push
xchg
mov
inc
sbb
loop
jle
aad
sbb
es
mov
std
ds
dec
frstor
xchg
mov
mov
std
movsb
jns
movsb
pop
xchg
dec
aas
fcmovu
cmp
arpl
aaa
xor
jnp
jnp
mov
push
outsl
fsubl
push
and
dec
xchg
push
push
aas
sbb
lock
pop
shl
dec
aaa
lds
add
lea
push
jb
sub
or
movsl
repnz
clc
loop
fidivrl
ss
cmpsb
mov
pushf
les
cltd
pop
mov
fsubrl
and
dec
lcall
push
insl
cltd
and
cmpsb
mov
hlt
and
pop
mov
ss
xchg
xor
cmpsb
dec
jbe
push
xor
sarb
dec
inc
push
cld
dec
aas
inc
dec
pushf
clc
mov
outsl
dec
negb
and
movsb
in
mov
sub
xor
cmpsl
test
dec
pushf
dec
fdivs
aas
pushf
mov
mov
pop
repnz
push
xchg
addr16
ficoms
sbb
sub
in
mov
push
fwait
js
inc
test
pop
les
and
push
mov
fdivr
test
int3
lcall
xor
lea
and
dec
or
cltd
in
ja
xor
rcl
popf
inc
inc
out
mov
filds
pop
out
mov
mov
fwait
sti
push
xor
and
sti
cld
test
pushf
pop
dec
lea
in
cwtl
cli
mov
or
pop
add
shlb
xchg
and
movl
sub
movsb
in
clc
or
and
arpl
push
movsb
jne
je
jb
fwait
sbb
add
pushf
pop
pop
sahf
pushf
rcrb
inc
clc
xchg
cmp
test
cmp
lret
lahf
jns
pop
xor
es
aam
cs
bound
pop
pop
push
enter
inc
addr16
add
jns
cld
inc
push
or
test
cmc
and
lahf
repz
jp
cmpsl
and
loope
int
mov
sub
aad
pop
sbb
xchg
dec
add
sub
popf
mov
push
adc
mov
cltd
xor
mov
aas
shlb
fmuls
out
xchg
pusha
jp
sbb
fnsetpm(287
xchg
idivb
and
pop
adc
ficoms
push
mov
jle
daa
lods
outsl
or
test
inc
in
iret
movsb
xchg
jle
dec
sbb
adc
adc
pusha
cwtl
xor
push
sub
pushf
dec
push
sub
movsl
cmp
and
pop
xchg
or
or
sbb
in
call
sub
test
adc
push
pop
js
nop
repz
xor
jae
je
and
or
movl
sbb
out
gs
dec
sbb
lods
inc
xchg
sub
ss
sbb
and
sbb
jl
sahf
sub
pushf
and
sub
and
pusha
inc
and
jb
or
imul
inc
mov
adc
push
sub
lea
jbe
jae
mov
test
or
adc
mov
sbb
test
push
sub
addr16
or
xchg
push
cmp
je
pop
and
and
sub
lahf
xor
dec
fistl
es
and
sbb
sbb
or
jb
pusha
mov
fwait
cld
cmp
mov
jecxz
mov
js
mov
repz
int3
sub
xor
push
out
iret
mov
int3
lock
nop
jle
xchg
or
push
add
je
cli
lods
aas
je
push
fs
fisubrs
int
pop
les
imul
dec
loop
cwtl
bound
loopne
push
pop
pop
adc
mov
adc
sub
aaa
inc
and
pop
arpl
adcb
and
sbb
pop
push
mov
les
xchg
pop
mov
inc
mov
cmpsb
fcoml
int
imul
or
test
pusha
bound
cmpsb
push
aad
mov
push
popf
jl
lea
movsb
filds
sub
out
lods
xor
push
xchg
and
cmp
sarb
pop
test
addb
cltd
lea
dec
dec
cs
dec
and
sub
dec
lcall
das
dec
arpl
xor
daa
nop
aas
xchg
out
dec
insl
das
push
outsb
adc
sbb
fwait
bound
and
fcomps
mov
or
mov
cmp
sub
fcoms
mov
lret
dec
xor
xor
pop
and
into
imul
test
arpl
out
pop
mov
out
shlb
lock
daa
aad
shll
loope
dec
sahf
das
nop
cmp
fdivr
fcompl
sbb
push
loopne
mov
pushf
daa
mov
test
sbb
sbb
addb
cmp
inc
mov
pop
push
dec
fsubrs
gs
and
push
or
or
xchg
mov
xchg
daa
push
loopne
or
sbb
cld
stos
pop
inc
nopl
mov
add
out
xlat
cmp
cwtl
test
xchg
ss
movsl
xchg
stos
push
mov
pushf
push
int3
js
sarb
push
mov
das
sbb
mov
and
adc
push
sbb
jl
push
lret
and
shrl
dec
jl
sub
xchg
stos
add
jl
jbe
in
and
xchg
pop
cmpsb
or
dec
sbb
in
or
xor
sahf
pop
mov
test
and
mov
adc
pop
movsl
sbb
adc
in
xchg
fnstsw
pop
ljmp
aad
in
xchg
add
xchg
sub
cld
test
xchg
xchg
mov
push
das
push
adc
and
stc
cmp
fs
daa
sub
dec
fsts
in
mov
mov
mov
in
push
fsubrs
mov
cmp
xchg
adc
test
xchg
lahf
xor
mov
cli
push
hlt
lods
lcall
lcall
fadd
cmp
cmc
aaa
and
popf
rcr
and
mov
inc
xchg
cmp
add
ret
adc
cltd
lock
inc
cwtl
cld
mov
and
cmp
js
int
add
ror
pop
rcll
and
jl
out
pop
and
xchg
cvtpi2ps
lahf
sbb
orb
dec
int
cmp
sub
insl
popf
dec
rcrl
std
daa
outsb
ret
inc
push
jle
cld
dec
das
pop
out
mov
movsl
sbb
xchg
xchg
call
adc
adc
rorb
jl
nop
pop
xchg
sub
cmpsl
rcll
je
mov
js
vucomiss
popa
jae
push
inc
rolb
daa
mov
out
pop
push
lahf
les
push
xor
xor
xchg
pop
add
fstpl
out
incb
sbb
push
push
stos
push
mov
and
mulps
mov
cmp
fs
in
das
seta
in
stos
je
imulb
js
rcrb
inc
push
cld
cmp
mov
xor
jl
cmp
mov
push
push
push
pushl
adc
sbb
ljmp
icebp
adcb
and
pushf
mov
push
dec
xor
std
sub
cld
xchg
and
jne
push
adc
adc
cmpb
and
push
mov
mov
sbb
cmp
cmpsl
lods
xchg
pop
xor
pop
xchg
cmp
sub
pushf
int3
inc
aas
jmp
aad
inc
fnstsw
mov
and
lahf
arpl
imull
push
xchg
cmp
fwait
mov
or
and
cld
mov
xlat
mov
pop
cli
in
adc
pop
bound
int
clc
movsb
pop
pop
cmp
pusha
xlat
sub
pop
out
add
and
movsb
js
dec
push
std
mov
xor
xchg
in
pop
fisttpll
pop
mov
xchg
push
cli
push
aad
and
mov
sbb
insl
mov
dec
outsl
and
jmp
rolb
aaa
and
not
bound
lods
test
mov
cmp
sarl
mov
cmp
cmp
cmpsb
xlat
mov
addr16
es
stc
xchg
ljmp
push
jmp
mov
xor
and
sub
std
test
jmp
jne
iret
lea
fildll
nop
sub
fisttps
jo
jnp
outsl
jp
or
pop
popf
xchg
sub
sbb
and
pop
jl
fcomps
sbb
sbb
mov
mov
lahf
push
sahf
imul
jecxz
or
push
cmp
js
cld
cmp
push
inc
pushf
sub
mov
add
adc
fwait
imul
icebp
arpl
mov
outsl
xchg
mov
cwtl
dec
in
inc
bound
xchg
pop
cmp
inc
or
movsb
pusha
dec
push
int3
arpl
jecxz
sub
pop
or
xor
pop
fnsave
cmc
cmp
testb
inc
dec
jecxz
sbb
mov
mov
sub
mov
cs
movsb
cmp
inc
pop
imulb
or
sub
cmp
sbb
jae
stos
and
pop
inc
aaa
sti
and
push
jbe
inc
push
sub
mov
and
jo
pop
mov
gs
fisttpll
mov
xchg
adc
cmpsl
mov
in
mov
xchg
adc
jl
ljmp
cmp
cmpsb
mov
sub
pushf
mov
dec
push
lock
pop
sub
xchg
push
sub
lahf
cmp
pop
mov
testb
rcrl
dec
pop
and
push
mov
or
loop
fsubrl
sahf
leave
pop
ret
fucomp
adc
sbb
xor
pop
mov
mov
lock
imul
mov
popa
dec
outsb
push
push
sbb
out
xlat
xchg
fstpl
scas
imul
sbb
sbb
mov
pop
xchg
mov
das
rorb
ss
dec
pop
ja
mov
xor
pop
ficoms
mov
data16
pop
push
fcoms
dec
aad
xchg
imul
in
ret
push
add
movsl
push
inc
les
sbb
or
jns
lret
and
add
cmp
shrl
sarl
rcll
dec
dec
in
mov
or
jne
nop
jl
mov
xchg
cmp
jmp
push
mov
pop
sub
push
aad
pop
aaa
inc
jl
inc
movsl
das
fmuls
rorl
mov
dec
inc
inc
test
arpl
adc
das
inc
cmpsb
mov
and
sub
lea
cmpsl
sbb
jae
es
cmp
mov
adc
or
test
into
loop
or
insl
int
cmp
cwtl
cltd
daa
mov
push
inc
nop
mov
dec
sub
pop
fisttpl
pop
cli
or
inc
pop
notb
in
cs
in
fsubl
inc
dec
test
mov
jmp
clc
cmp
and
shll
dec
xchg
jae
pushf
es
enter
ret
stc
xchg
aad
xor
pop
or
aad
sub
movsb
leave
mov
pop
popf
inc
cmp
dec
xchg
int3
pop
xchg
das
jp
inc
xchg
push
popf
std
pop
movsb
daa
xor
inc
xor
inc
inc
add
inc
pusha
add
ficoml
dec
ljmp
dec
popa
cli
xchg
mov
pop
cld
loopne
pop
and
fwait
stos
xlat
shlb
dec
repnz
push
lahf
push
dec
xor
in
mov
cld
push
add
xchg
sbb
addr16
sbb
stos
xchg
icebp
call
dec
xor
and
push
mov
and
addr16
xor
and
push
in
out
or
fmul
pop
push
inc
in
faddl
xchg
div
inc
clc
inc
jo
mov
sahf
sbb
inc
push
sbb
pop
leave
hlt
cmp
loope
and
push
lahf
sbb
adc
jecxz
sbb
dec
cwtd
or
popf
in
in
sahf
adc
mov
cmp
and
movsb
dec
xchg
or
sbb
rcrb
data16
bound
dec
seto
push
ds
push
add
out
xlat
inc
lods
incl
add
sbb
jno
loopne
adc
mov
mov
call
push
sbb
cmp
mov
mov
adc
push
out
xchg
pop
jne
sbb
sub
test
xchg
loopne
sub
enter
sbb
movhps
mov
dec
or
pop
imul
daa
daa
mov
je
or
jo
dec
ret
dec
cmpsl
popf
ds
mov
xchg
adc
jb
stos
cmp
movsb
sbb
mov
faddl
cld
and
les
xchg
xchg
xchg
test
int
lods
fcmovb
push
pusha
sub
push
sti
cld
shll
jo
sbb
mov
or
inc
std
std
movsl
fs
push
mov
pop
enter
sub
and
mov
es
jle
pop
les
lds
shrb
push
xor
jns
and
xor
incl
jbe
xor
xchg
push
push
cmp
daa
ss
popa
push
pop
jno
insl
rcrl
push
push
inc
sbb
sbb
pop
pop
stos
pop
pop
outsb
xchg
popf
pop
cld
push
cld
jno
mov
test
test
ret
insb
subb
mov
test
cld
dec
cmp
add
mov
sub
repz
ret
adc
push
or
pop
pop
aam
sbb
sbb
and
inc
daa
sbb
or
xlat
incb
dec
add
push
adc
add
aam
and
and
fs
cld
mov
daa
push
push
popa
cmpsl
dec
sbb
push
xlat
jmp
cld
add
dec
adc
mov
sbb
push
sbb
sub
push
adc
movsl
sti
pop
movsl
ss
loopne
push
push
sbb
rclb
pop
incl
bound
pop
sub
mov
pop
stos
sbb
push
aam
call
pop
jne
pop
jo
or
xor
xor
or
xchg
and
insb
sahf
fstpt
fcomps
ds
xchg
sub
jo
in
cmp
mov
xchg
pop
xchg
push
pop
jo
sbb
rcrb
push
aas
push
stc
and
repz
loope
and
jne
cld
push
dec
pop
aaa
pop
out
inc
dec
mov
test
cltd
lcall
and
and
outsl
inc
pusha
xchg
daa
push
loope
cmp
and
push
pop
push
out
and
xchg
cmpsb
xchg
cmp
das
xor
xor
imul
push
inc
cs
xlat
fdivs
dec
sub
pop
add
rolb
or
insb
addr16
xchg
xchg
or
push
adc
out
push
pop
add
pop
icebp
cmp
rcrl
sti
push
xchg
fcomps
inc
xchg
mov
or
xchg
cmp
pop
adc
push
xor
mov
in
clc
sub
mov
gs
iret
or
cmp
or
sub
and
dec
cmp
and
add
hlt
inc
jb
fs
push
aas
xlat
pop
in
push
cs
adc
cmp
dec
push
ret
add
jp
ds
or
or
popa
pop
fsubrs
mov
mov
dec
pop
adc
shrb
mov
add
stos
push
bound
rcrb
std
mov
cmp
mov
jl
xor
sub
xor
js
sbb
pop
aas
hlt
mov
mov
popf
jns
mov
xchg
pause
mov
imul
push
push
popa
pop
ret
mov
jnp
gs
sub
push
and
push
pop
adc
nop
or
jg
and
scas
xor
lahf
adc
jecxz
and
xlat
cmpsb
mov
ss
es
jns
sbb
jp
loope
cmp
popf
addr16
xor
and
inc
or
jae
pop
lods
jne
adc
sub
pop
out
fbstp
cmp
cmp
jbe
call
pop
pop
pusha
push
loop
xchg
add
cmp
jp
push
dec
cld
and
or
jecxz
int
pushf
fnsave
ja
pop
xor
rorb
mov
divb
push
inc
imul
shrl
ret
shll
sub
cmp
call
mov
jl
lahf
out
sbb
ljmp
add
cwtl
in
mov
push
push
sti
pop
push
mov
daa
mov
and
in
imul
cld
xchg
and
or
dec
push
mov
js
inc
pushf
bound
jo
in
aad
shlb
sub
pop
test
adc
xchg
dec
fildl
push
lds
fcmovnbe
movsl
in
fs
fsubrl
push
sbb
nop
mov
cmpsl
adc
push
or
popf
xchg
mov
je
sbb
into
jne
inc
jle
insl
adc
dec
js
aad
xchg
or
lahf
aad
xchg
js
mov
sbb
aas
push
call
xchg
xor
push
movsl
cltd
and
xchg
jb
cmpsl
sub
sbb
push
mov
xor
xor
push
cmpsb
cltd
and
xchg
xor
push
xor
enter
mov
jle
mov
push
lcall
cmc
pop
gs
in
outsl
aas
mov
cltd
adc
not
pushl
ljmp
sbb
xor
imul
cli
push
iret
test
sbbl
pop
incl
push
push
inc
jmp
and
pop
lock
push
repnz
lock
dec
shll
pop
data16
rcll
cmp
leave
jmp
cltd
pop
sahf
sbb
add
push
aad
pop
pop
add
sub
or
in
jp
mov
rcr
sbb
sbb
shll
pop
push
movsb
dec
sbb
loopne
inc
lahf
push
pop
pop
sbb
ss
adc
dec
add
and
daa
dec
testb
ficompl
adc
or
xor
xchg
outsb
add
pop
sub
xchg
jp
ficompl
cmp
pop
mov
sub
sbb
inc
mov
mov
sbb
adc
mov
and
out
push
xor
mov
into
adc
jb
pop
in
pushf
xchg
mov
sti
xchg
sbb
mov
mov
clc
sbb
bound
adc
pop
push
cmp
outsb
ljmp
aad
xor
cmp
test
in
insl
das
or
clc
std
imul
jae
mov
pop
imul
pop
xchg
leave
cmp
adc
mov
cmp
or
sub
pop
add
xor
inc
xchg
pop
xor
xchg
dec
xchg
es
lahf
xlat
pop
stos
mov
outsb
jnp
lret
push
loopne
jae
shrb
push
inc
mov
mov
aad
push
mov
fcomp
adc
mov
xchg
ljmp
jecxz
sbb
mov
mov
mov
stos
scas
insb
jle
rcrb
and
cmp
fdivs
ss
sahf
inc
in
pop
sbb
insb
jne
cmp
mov
xchg
xor
dec
cmp
test
mov
cli
mov
adc
push
xlat
cmp
insb
mov
stos
push
pop
lret
add
cmpb
pusha
xchg
hlt
push
insl
cmp
cld
mov
mov
mov
and
jb
pop
adc
push
sub
push
lods
adc
add
push
clc
hlt
movsb
push
cmp
xor
insl
fstl
daa
cmp
adc
loope
gs
xchg
pop
pushf
pop
and
or
adcb
add
or
xchg
adc
fs
sbb
lcall
outsl
sub
cld
add
dec
fisttpll
sbb
je,pn
mov
insl
jmp
ss
cli
imul
testl
xor
stos
mov
imul
sub
inc
push
xchg
imul
lock
frstor
int
xor
loope
inc
test
movb
dec
std
mov
out
mov
mov
sbb
cmp
sub
inc
aad
jmp
lahf
fcoml
and
push
fimuls
mov
in
cmp
insb
daa
cmc
push
mov
in
sbb
mov
cmp
xchg
enter
push
lods
imul
push
jbe
inc
mov
out
and
lock
hlt
add
or
dec
fstps
int3
clc
mov
dec
test
mov
stc
mov
dec
data16
popf
jbe
popf
cmp
sbb
ret
jne
cld
iret
out
dec
dec
xor
stc
test
pop
pop
sub
scas
lahf
pop
les
xor
sub
xchg
sti
push
xchg
sahf
pusha
dec
cmp
fucom
xor
pushf
mov
fists
xlat
out
mov
jg
or
fisubs
cmpsl
pop
sub
mov
out
std
xor
jp
xchg
test
adc
sbb
lods
push
cmp
bound
js
mov
fmull
push
sbbb
repnz
icebp
aad
rcrb
sbb
gs
pop
frstor
pusha
add
xor
xor
push
jle
mov
daa
sub
sbb
inc
sub
rcrb
and
cmpsl
push
xor
xor
hlt
pop
lahf
leave
cmp
or
jle
xor
push
pop
fistl
sub
imul
je
sbb
fdivrl
jmp
and
sub
and
push
mov
fists
jb
pop
dec
push
dec
fsubl
mov
pop
jae
sbb
cmpsl
int
push
push
addr16
ljmp
lds
sbb
push
cmpb
out
jle
lahf
popa
dec
or
orb
lea
sub
cld
ss
loopne
pop
enter
push
jns
add
push
mov
lret
sbb
cmp
push
arpl
inc
cmp
aad
pop
dec
dec
fs
dec
and
mov
rcll
cmp
es
push
fisubrl
and
mov
mov
js
mov
je
mov
push
pop
adc
xor
sbb
xchg
adc
push
cli
scas
mov
hlt
in
mov
adc
cld
repnz
cmp
cmp
sub
pop
imul
cmp
popf
xor
cld
lds
xor
pushf
gs
mov
test
pop
jno
pop
push
and
push
popf
pop
out
std
std
add
sbb
mov
xchg
push
pushf
xorb
fiaddl
popa
scas
jo
adc
filds
aas
inc
sbb
dec
mov
push
insb
push
pop
ss
xchg
push
push
mov
ja
ficoml
and
xchg
cmc
push
daa
popf
xchg
pop
aas
popf
and
pop
outsb
fistl
imul
push
push
cwtl
xchg
cmp
pusha
iret
dec
pop
fimull
aas
int
shlb
sub
cmp
lret
scas
leave
and
xchg
mov
inc
into
push
and
push
movsb
mov
test
cwtl
cs
outsl
jp
sub
mov
cmp
push
sbb
and
xor
out
pushf
int3
jae
cld
test
jge
int3
jne
xor
popa
add
push
sub
jmp
or
lods
add
or
cmc
ss
and
jmp
sbb
cmp
jmp
movsl
and
imul
out
xchg
push
std
adc
sbb
in
adc
jb
pop
movsb
adc
fcmovnu
shll
cwtl
dec
mov
sbb
hlt
lds
xchg
and
leave
mov
and
aaa
stos
mov
jo
pusha
std
aas
ret
dec
and
mov
pop
sahf
leave
ss
ret
sub
ret
imul
push
movsb
push
scas
aam
push
test
push
je
xchg
cmpsl
pop
xchg
mov
mov
pop
jb
sub
mov
es
ja
fcompp
inc
jg
popf
inc
mov
xor
stos
push
loope
mov
pusha
lods
es
dec
cs
cmp
fstpl
pushf
xchg
xor
movsb
shll
lahf
mov
pusha
mov
mov
movsl
sti
addl
lock
out
loopne
xorb
std
jbe
and
pop
xor
lret
lret
cmp
out
cmp
add
pop
lods
icebp
sbb
sbb
mov
in
out
lahf
dec
orb
jge
fwait
jge
repz
outsl
cmpsl
subl
or
out
xchg
shll
mov
inc
sahf
in
cmp
movsb
push
clc
imul
movsb
lds
popf
mov
adc
and
out
sub
das
jmp
outsb
sub
daa
push
sub
sub
sub
push
or
cld
fcmovu
pop
mov
sti
push
es
mov
sub
outsl
repnz
push
mov
cmp
into
and
or
cmp
mov
cltd
inc
push
sub
xor
sub
sbb
lcall
sbb
dec
cmp
xor
add
cmpsl
jle
push
cmp
dec
xor
cld
xor
cs
testl
stc
mov
sub
xchg
sbb
nop
jle
jb
pop
dec
imul
push
lea
mov
push
inc
popf
inc
xchg
push
and
loop
movsb
push
cld
mov
push
leave
adc
sub
insl
inc
or
mov
or
shlb
filds
adc
add
ss
inc
adc
loop
inc
add
xchg
pop
inc
xchg
bound
xchg
xchg
xor
push
xchg
fidivl
sbb
push
mov
xor
xchg
sub
hlt
mov
pop
xor
movsl
xchg
pop
inc
sbbl
std
or
push
add
sbb
push
and
call
push
xchg
cmp
cmp
xor
jns
mulb
dec
dec
inc
mov
sub
jg
push
xor
cld
rcr
jl
mov
pop
sub
cltd
lahf
push
adc
decl
sbb
sub
and
jnp
or
loop
push
pop
fisubl
push
es
push
sbb
and
es
out
inc
in
mov
repnz
sub
fcoml
stc
popf
xchg
sbb
sbb
and
cmc
and
mov
into
mov
scas
xor
outsl
mov
jb
rcll
xor
sub
bound
aaa
xor
jns
push
nop
push
cmp
testb
cmp
hlt
jnp
cltd
sbb
or
and
inc
mov
and
sbb
dec
mov
push
jl
sub
jle
sbb
pop
and
adc
mov
hlt
lcall
cmc
fs
pop
mov
ja
repz
bound
mov
outsb
jg
sarl
popa
pop
dec
xor
adc
cmp
inc
cmp
cmp
pop
jnp
mov
and
push
xor
lods
cld
cmp
mov
and
pushf
adc
lcall
test
mov
pop
adc
add
mov
fnstsw
sbb
mov
pop
in
outsb
adc
cvtps2pi
and
gs
test
fdivl
and
cmp
xchg
sbb
pop
fisubl
mov
repnz
ret
cwtl
test
adc
and
or
ljmp
test
sbbb
test
cld
fucomi
sbbl
and
stc
cs
xchg
pop
popf
mov
dec
dec
inc
jo
cs
and
add
test
mov
sbb
inc
andl
inc
pushf
sbb
pop
sbb
dec
mov
mov
or
insl
scas
mov
int3
bound
and
fistpl
xor
test
and
dec
jno
mov
aam
xchg
jne
das
adc
push
pop
mov
or
das
out
inc
adc
sbb
fs
fdivs
sub
mov
push
and
divl
popf
xchg
test
test
imul
mov
scas
in
jne
dec
int3
in
push
xor
inc
inc
push
add
xchg
xchg
mov
adc
sub
sub
sub
cmp
mov
dec
out
inc
mov
push
xor
cwtl
inc
out
enter
mov
xchg
push
sub
out
sub
std
frstor
inc
pop
shlb
clc
xor
inc
inc
clc
mov
into
hlt
mov
fisttps
dec
xor
jns
cmp
xchg
cmpsb
inc
and
sahf
xchg
call
dec
xor
mov
rorl
jmp
in
int
dec
hlt
xor
mov
std
lahf
fstpt
aaa
xchg
sub
pop
stos
sbb
mov
outsb
jp
inc
jecxz
inc
adc
and
pop
mov
pop
jae
add
pop
aam
pop
xor
adc
push
jae
jmp
stc
inc
into
push
ret
push
xor
adc
notb
mov
and
addr16
xor
mov
mov
cwtl
jbe
xchg
fsubr
sub
sarb
jne
sbb
pop
sti
popa
mov
push
test
lock
mov
in
jbe
sub
pop
or
test
mov
clc
sbb
sbb
xchg
sub
repz
in
cltd
out
fdivrl
pop
cmpsl
int
aaa
orb
xchg
aaa
mov
ss
mov
cmp
cmp
pop
adc
cwtl
jle
daa
push
cmp
loopne
mov
pusha
push
fs
jb
push
addr16
jo
enter
pop
test
jb
sbb
mov
cs
sahf
jl
jbe
lds
mov
mov
sub
mov
sbb
push
push
or
inc
push
cld
pop
cs
movsb
sbb
sub
pushf
es
cwtl
sub
cmp
sub
jbe
dec
in
push
cli
adc
lret
cmp
insb
daa
loop
int
cmpsl
repnz
mov
sbb
jmp
out
push
sub
lock
mov
xor
cmovp
lds
inc
fcmovu
lcall
sbb
hlt
cmp
cmp
rcrl
or
adc
mov
test
fldenv
aad
sbb
jno
push
repnz
mov
push
mov
and
add
jl
inc
sbb
aaa
xchg
or
loopne
jae
lods
pop
lods
xor
adc
jbe
and
xchg
push
dec
sbb
fcoml
js
jae
sahf
dec
push
fwait
push
cltd
loop
and
addr16
pop
hlt
xchg
push
stos
outsb
repnz
sahf
cmp
fsts
inc
out
imul
jne
push
lods
loop
mov
pop
aaa
jb
sub
outsb
aaa
xor
and
sbb
lock
cmp
dec
or
lcall
incb
les
mov
sbb
jbe
cmp
fadds
filds
imul
pushf
rcll
pop
jns
inc
and
popa
aam
or
push
imul
in
push
das
dec
lods
pop
test
mov
callw
push
mov
xchg
inc
jne
sbb
pop
cmp
inc
js
adc
xchg
mov
sbb
xor
das
push
sahf
and
in
and
mov
dec
and
orl
cmp
or
inc
jle
pop
jne
das
pop
add
sub
sbb
xchg
push
dec
bound
xchg
add
xchg
divl
xor
inc
add
xchg
xchg
push
xor
sbb
inc
lcall
xor
sbb
daa
pushl
loopne
mov
subb
out
push
mov
jbe
jno
es
popf
mov
dec
lret
xor
jge
int
in
push
pop
popf
fwait
and
lods
xchg
pop
adc
cli
push
shl
jge
loope
lods
cmp
les
ficoms
in
pusha
cmp
or
lds
or
cmp
add
fstps
sbb
adc
pop
in
add
inc
jns
je
pushl
mov
xchg
mov
lahf
push
adc
mov
clc
mov
push
lret
and
add
js
sub
inc
adc
xor
in
mov
mov
and
es
popf
sub
push
movsl
and
xchg
lds
xchg
fists
cld
xchg
rolb
sub
das
outsl
xchg
or
mov
cmp
clc
sub
sub
inc
fdivrl
cs
adc
rorb
cli
cld
notl
dec
xchg
xchg
aad
inc
xchg
jl
cmc
push
popa
out
popf
cmpb
adcl
mov
cwtl
xor
rcll
cmpsl
adc
cltd
pushf
sbb
mov
mov
pusha
into
gs
pushf
inc
mov
sbb
jno
icebp
sub
test
cld
xor
icebp
mov
push
lret
jle
jp
adc
fisttps
int
cld
das
std
push
inc
xchg
inc
or
dec
fs
mov
cwtl
xchg
lcall
std
outsl
lret
inc
dec
jle
out
cli
xor
call
or
rclb
mov
popf
fdivr
jl
sbb
push
cmp
mov
sub
sbb
and
int
adc
jg
sub
mov
mov
pop
and
and
sbb
xlat
adc
inc
fcompl
sbb
pop
in
pop
inc
sub
push
pushf
sub
inc
and
sbb
das
cmp
lods
inc
fsubrl
sbb
and
out
rdtsc
cmpb
es
xchg
cmp
jl
jb
jge
sub
test
pop
or
xor
push
shll
es
and
sahf
sbb
xchg
ds
je
xchg
push
sbb
xchg
in
test
pop
mov
pop
aas
in
sbb
and
hlt
sbb
cmp
pop
and
inc
xchg
mulb
std
push
xor
pop
jns
push
ss
daa
sub
sbb
sbbl
sahf
sar
cmpsb
add
test
jle
sub
fldl
cmpsl
ss
or
and
cmp
mov
mov
rorb
dec
ds
je
fwait
fs
subl
movsl
out
leave
inc
push
repnz
xchg
hlt
clc
or
sbb
xchg
movhps
sbb
sbb
aas
jle
or
or
mov
pop
mov
ds
inc
mov
mov
insl
mov
and
insb
mov
fsubl
and
push
addb
sub
cmp
shr
cmp
ret
push
sbb
mov
lds
sbb
lahf
in
push
push
mov
rcrb
inc
ljmp
test
xchg
or
pop
inc
xor
xchg
inc
fisttpll
push
xchg
int3
cmpsb
sbb
pop
sbb
and
sbb
mov
aaa
fmuls
sub
insb
dec
jo
inc
sub
outsl
les
sub
testb
mov
shlb
mov
movsb
int3
pop
push
sub
loope
inc
xchg
xchg
and
aas
dec
mov
mov
cld
sub
mov
pop
insb
cmp
jmp
outsl
cmp
cmp
aam
aam
cmp
out
mov
or
and
sub
cmp
mov
mov
mov
xor
sbb
out
dec
mov
adc
out
push
testb
jle
insb
push
inc
and
popf
add
mov
add
pop
mov
fwait
and
int3
mov
push
fs
jl
les
cld
jns
lahf
mov
push
call
in
stos
sbb
ret
sbb
jp
and
adc
fisubrs
xor
insl
pusha
dec
mov
cltd
sar
xor
lock
daa
pushf
sarl
inc
gs
sub
mov
loopne
xor
hlt
hlt
add
or
jo,pt
mov
fs
and
mov
or
sbb
popf
dec
xor
test
or
sub
je
cwtl
push
adc
xchg
push
cltd
out
push
add
push
push
xor
cwtl
adc
sub
insl
mov
dec
sub
lock
push
pop
addr16
adc
pop
push
and
push
rcrl
pop
int3
hlt
test
test
jp
xchg
inc
fstl
and
mov
jg
arpl
sbb
xor
xchg
das
mov
lahf
sub
xchg
dec
jg
push
pop
pop
sub
and
mov
mov
popa
lock
fildl
jne
lcall
cmp
fs
aam
adc
jl
stos
add
pop
loopne
cld
pushf
insb
pop
test
dec
jno
mov
lock
or
pushf
insb
push
lcall
movsl
push
sub
dec
xor
mov
ss
and
sbb
jle
adc
xorl
adc
mov
lock
ljmp
jmp
insl
cmpsb
cmpsb
call
jle
push
push
pop
aad
dec
cld
cmpsb
cmp
lret
dec
lret
addr16
sub
xchg
push
and
jo
xor
outsl
aam
insl
jge
and
movsl
adc
clc
shlb
and
adc
xchg
and
cmc
dec
pop
add
xlat
push
mov
dec
jg
es
fisubrl
pop
xchg
inc
xchg
or
sub
sbb
fadd
fisubrs
clc
xor
sub
mov
hlt
imul
and
outsb
sub
sbb
adc
icebp
jno
loope
in
and
cmpsl
insb
fwait
cmpsl
addps
addr16
incb
adc
data16
fcoml
push
stos
ljmp
cmp
xor
adc
fcmovbe
fcmovnb
les
sti
lcall
mov
loopne
and
add
shrl
xchg
movsb
add
and
in
xlat
lods
into
xor
imul
std
rcll
aad
push
mov
jge
out
jg
cwtl
push
cmp
mov
fnsave
jbe
xchg
dec
sbb
fwait
dec
sub
imul
or
cltd
cwtl
sbb
xchg
sub
cltd
add
cltd
jge
aas
push
xchg
data16
ds
adc
add
pop
xchg
add
ljmp
shld
sub
nop
dec
leave
pusha
or
in
add
pop
mov
jg
les
ds
xor
push
cmp
cld
scas
es
sbb
adc
push
insb
sub
filds
aam
dec
je
js
cld
out
push
push
or
push
pop
pop
es
adc
es
sbb
xor
push
adc
inc
sbb
sub
sub
sbb
jmp
pushl
push
push
inc
or
stos
push
mov
push
sarb
insb
cwtl
daa
lahf
imul
aaa
push
push
dec
sub
sub
dec
dec
xchg
pop
ret
jne
sbb
and
cmp
outsb
mov
mov
ss
push
and
addr16
jmp
and
adc
inc
lds
ja
jns
push
ss
cmp
sbb
insl
sbb
sub
sub
pusha
and
push
and
popf
leave
dec
imul
push
adcl
adc
or
push
jg
daa
sbb
insb
lahf
fistpll
or
test
adc
cmpsl
jno
daa
and
ret
pop
mov
sbb
sub
les
pop
lahf
and
repnz
xor
xchg
sub
in
mov
sub
xchg
out
xchg
jbe,pn
outsb
insb
fisubrl
nop
or
xor
push
inc
xchg
sbb
xchg
or
stos
cld
xor
add
mov
shl
sbb
cmpsl
or
mov
aas
mov
and
xor
dec
adc
pusha
pushf
cld
cmp
jmp
or
ss
les
jmp
sbbb
jle,pt
cld
mov
jmp
pop
add
and
sbb
movsb
xchg
fnstenv
sbb
inc
lods
jl
push
arpl
aas
pop
bound
icebp
sub
fimull
into
cmp
lahf
arpl
ljmp
and
sub
cmp
bound
mov
cwtl
cmp
and
imul
cmp
gs
sbb
cld
movsl
popa
add
stos
xchg
cmc
xchg
sub
je
pop
xchg
cld
rcrb
rorb
nop
push
xor
add
mov
addr16
adc
inc
cmc
adc
and
pop
pop
cli
xchg
xchg
aas
fisttps
jecxz
xor
pop
mov
cmpsl
popf
aas
xor
pop
fwait
add
lahf
mov
out
cltd
xchg
dec
loope
inc
pop
dec
das
out
sub
movsl
cmp
and
pop
or
imul
popa
rorb
mov
fldenv
xchg
jnp
push
fsub
inc
iret
inc
sbbb
xchg
fstl
pop
push
out
bound
push
sbb
movsb
int
sub
push
pop
cmovl
incl
sub
mov
in
dec
jle
push
cmp
popf
pop
sub
cld
call
xor
sti
es
push
cmp
scas
sub
xor
pushw
jge
pop
je
dec
push
sbb
cld
sahf
nop
push
mov
xor
sbb
mov
jnp
test
repnz
sub
pop
mov
lods
adc
pop
cmp
add
test
les
mov
mov
push
push
cmp
subl
cmp
mov
jb
cwtl
sbb
xor
aad
imul
adc
mov
sub
stos
xor
in
mov
mov
xor
xor
std
sti
repnz
sub
and
test
sbb
gs
and
xor
sub
sub
pop
arpl
js
sbb
pop
sbb
ret
addl
xor
adc
cs
jbe
lea
gs
mov
test
sub
arpl
lds
inc
lods
xor
faddl
movsl
pop
sub
xor
data16
pop
and
mov
pop
jae
mov
sbb
je
or
adc
sbb
fmuls
shll
mov
pop
cmp
fists
jmp
mov
pop
adc
cld
push
mov
pop
push
sub
fbld
daa
xchg
xchg
rorb
and
pop
out
es
xchg
xor
std
push
fidivl
arpl
jae,pt
xchg
fs
fs
xor
cli
jb
testb
xor
insl
jecxz
ret
testl
sub
fisubrl
xchg
clc
cld
iret
inc
xor
jp
das
dec
xor
mov
rcrl
dec
lds
dec
xor
adc
jle
insb
subb
ds
fcmovnb
sbb
lcall
insb
inc
scas
and
je
aas
dec
and
adc
daa
add
or
iret
dec
sbb
mov
repnz
iret
xor
inc
in
inc
sarb
push
out
sbb
sbb
lods
rcll
sub
mov
test
movsb
sbb
jns
rcrl
push
mov
dec
sub
add
leave
or
xor
shrb
les
nop
jg
ret
enter
cwtl
pop
insl
xlat
sbb
inc
sub
mov
add
sbb
loopne
and
and
push
mov
fcoml
fcompl
and
pushf
in
stos
int3
add
inc
rclb
pop
sbb
and
testb
and
xchg
rcr
popa
push
jb
aad
sbb
push
push
pop
pop
or
std
shll
loop
add
sbb
inc
pushf
fstpl
cmp
push
push
insl
aas
aad
movsl
sbb
push
cld
lds
mov
xchg
inc
movsl
out
push
mov
push
sbb
imul
sbb
mov
pushl
xchg
cld
and
arpl
int
sarb
push
sub
int
test
mov
sbb
sub
add
stc
sub
ds
clc
jecxz
jne
iret
jl
pop
cwtl
push
sub
mov
inc
and
xor
dec
jle
stos
shll
sub
test
aas
mov
fs
sbb
mov
out
sbb
push
sbb
xchg
mov
inc
lods
push
xor
in
xsavec
movsb
arpl
lods
ds
and
and
jbe
jo
insl
and
jmp
divl
adc
test
xor
push
js
xchg
mov
insl
call
sbb
cmp
mov
cld
cmp
mov
fnsave
insl
test
nop
bound
shlb
push
add
popa
or
enter
mov
dec
int3
mov
dec
cwtl
mov
lock
push
push
pop
aad
sub
mov
pop
adc
and
test
lahf
mov
bound
lret
push
and
jl
add
mov
imul
xchg
in
jne
clc
push
push
lods
jl
cmp
loop
sub
fs
adc
jae
jp
test
add
add
xchg
push
jl
sbb
addr16
popf
fisubrs
test
sub
ss
dec
mov
or
inc
fldcw
mov
jl
xlat
lret
in
xor
inc
xchg
dec
sbb
dec
push
iret
out
mov
enter
cmp
stos
out
pop
mov
les
test
cld
push
pop
hlt
fwait
pop
mov
mov
xchg
shrl
sbb
xor
cld
negl
xchg
adc
xchg
ficoms
clc
sub
push
and
in
clc
insl
enter
push
dec
add
shll
sub
add
sbb
fdivrp
sahf
fucomip
push
mov
and
lcall
ja
pop
sub
mov
cmp
ljmp
insl
sub
adc
sbb
movsb
stos
or
hlt
loop
hlt
cmp
dec
hlt
das
mov
jo
test
push
sub
fstl
xor
and
sbb
and
sahf
xor
fst
mov
mov
push
sub
lods
mov
push
outsl
mov
push
cmpsl
cltd
outsb
fnstsw
icebp
adc
add
push
arpl
mov
ljmp
adc
dec
aad
cli
or
outsb
mov
fnstenv
pop
sbb
insl
mov
mov
adc
xor
push
out
mov
and
cmp
xor
xchg
daa
cld
pop
sub
js
pushf
push
addr16
in
xor
inc
outsl
inc
mov
sub
push
aas
add
cmp
aas
push
inc
and
inc
mov
aam
push
mov
mov
inc
add
mulb
daa
lea
sub
and
jle
inc
pop
sbb
insb
std
js
nop
mov
std
mov
into
pop
jp
imul
es
jno
jno
dec
mov
cmp
and
aas
in
jge
call
pop
js
xor
rorb
add
sbb
and
push
pop
mov
mov
call
jbe
and
cmp
mov
lock
jne
hlt
je
insb
cmp
add
and
stos
mov
bound
ret
and
faddl
xchg
stc
adc
hlt
push
mov
cmpsb
jle
ret
dec
sub
aas
pushf
test
test
inc
mov
je
dec
into
fiaddl
outsb
out
xchg
sbb
lds
adc
aas
lds
cwtl
jg
xchg
daa
je
icebp
lret
or
js
xor
popa
imul
xchg
mov
or
xor
jmp
je
mov
int
sarl
fbstp
call
lds
lahf
jne
hlt
out
loopne
and
jne
xor
xchg
idivb
stc
inc
cmp
inc
pop
push
cmp
mov
mov
and
js
jb
call
cmpsl
and
test
mov
xor
pop
sub
shlb
into
fidivrs
dec
xacquire
aas
pop
bound
repz
push
or
popf
fldt
outsb
jg
popa
movsb
and
mov
cmp
sbb
add
sahf
sbb
mull
push
cwtl
inc
dec
pop
inc
jnp
add
mov
dec
or
stos
sbb
xor
adc
sahf
imul
xor
cmpl
and
in
cmp
push
cmp
scas
cmpsb
cmp
mov
mov
data16
test
fmuls
dec
sbb
ret
cmp
push
inc
jno
inc
inc
sub
adc
dec
popf
dec
push
push
jecxz
sbb
mov
add
mov
pusha
sbb
loopne
mov
jbe
sarb
add
and
sub
inc
js
sbb
movsb
xchg
jb
imul
pop
das
int3
cmp
mov
mov
pop
adc
fdivr
mov
adc
fcompl
and
sub
push
dec
jno
cmp
insb
sbb
lods
pusha
pusha
aaa
cmp
sbb
cmp
lahf
push
sbb
mov
jnp
mov
mov
and
shll
xor
push
push
jae
cld
ss
cmp
pop
je
dec
cmp
inc
jbe
fisubs
jbe
xchg
dec
cld
leave
adc
sbb
out
ss
jb
xor
add
ret
jmp
or
sbb
into
or
or
subl
and
sbb
sub
sub
arpl
dec
int
cmpsl
lock
push
sahf
ja
push
rol
inc
fxch
addr16
sub
lea
sbb
movsb
adc
ja
jae
push
hlt
push
dec
adc
fidivrs
lcall
nop
and
cld
and
push
push
fisubrl
stos
push
imul
jne
movsb
das
cld
in
hlt
notb
add
push
push
adc
jg
lock
push
xor
jp
repnz
idivb
inc
ficompl
fldcw
pushf
xchg
sub
divb
test
jl
xchg
push
ficoml
or
imul
outsl
cld
and
ret
xchg
sbb
cli
xor
xchg
sbb
jne
xchg
push
repnz
xchg
call
push
aas
fisttps
xchg
sbb
movsl
and
or
lods
jmp
push
or
frstpm(287
inc
fsubl
test
lcall
bound
ss
popf
ret
call
sub
cld
dec
mov
mov
gs
scas
mov
cmp
insb
sub
jmp
sarl
int
enter
lahf
push
push
push
inc
lds
pop
or
ret
aas
movb
cmp
xchg
jl
jne
dec
ds
dec
push
data16
push
and
imul
push
aaa
test
mov
in
mov
popa
dec
cmp
addr16
test
outsb
and
in
mov
outsb
push
js
ss
in
fwait
jbe
adc
inc
mov
mov
imul
pop
gs
xchg
xor
sbb
sub
pop
xor
add
out
mov
mov
out
je
roll
mov
jp
pop
fisttpll
or
mov
sub
dec
xor
es
dec
push
notl
mov
jmp
add
loope
aas
lock
mov
cmp
sbb
lret
mov
pinsrw
fbstp
dec
sbb
imul
xchg
push
or
push
nop
nop
xor
call
cld
sbb
test
sbb
jb
pushf
fstpl
jno
test
dec
inc
push
xchg
jb
add
xchg
xchg
test
jo
outsb
sub
std
push
in
mov
cmpsb
inc
jle
fs
lret
and
subb
cmp
clc
pop
lcall
push
ja
int
fsubr
sbb
push
add
mov
lcall
fdivrs
sbb
push
push
xchg
dec
insl
test
xchg
popf
sbb
inc
xlat
inc
xchg
outsb
hlt
stos
fs
vpsrlq
mov
std
add
jnp
jae
xchg
hlt
dec
push
leave
fistps
push
add
xor
les
or
in
loop
cld
push
es
pop
xchg
ret
sub
push
call
test
dec
aad
lret
mov
and
mov
scas
add
xchg
mov
mov
in
mov
add
xchg
cmc
pop
mov
mov
mov
dec
jmp
or
daa
push
aas
aad
xchg
inc
cli
adc
and
in
adc
mov
test
rcll
xchg
inc
lcall
or
insb
jg
mov
insb
pop
mov
xchg
imull
js
es
cld
sbb
sub
out
das
xor
cwtl
xchg
push
inc
add
inc
insl
and
push
cmpsb
call
add
lds
push
ljmp
bound
cmp
mov
or
popf
cmc
aaa
gs
or
lahf
mov
cltd
pushaw
cmpsb
mov
or
push
inc
dec
imul
mov
ljmp
sub
scas
das
je
sbb
cld
sbb
jmp
es
push
jnp
xlat
xchg
gs
sub
pop
fstpl
sbb
inc
sahf
sbb
cwtl
frstor
xor
inc
pop
sub
dec
dec
icebp
std
xchg
shlw
frstor
popf
imul
xor
cmp
add
fisttps
test
aas
aad
or
sbb
sub
or
mov
aad
cltd
int
mov
cld
cmp
xchg
ljmp
divl
pop
pop
sub
cmp
hlt
cmp
cmp
setb
cmp
inc
xchg
push
mov
test
push
lods
push
sbb
mov
daa
daa
cld
mov
mov
xor
call
xchg
int3
popf
imul
cmp
pop
enter
or
cmp
mov
cli
sbb
xor
gs
sub
sbb
cld
lea
lods
movsb
stos
ljmp
jns
pop
xchg
cltd
loope
sbb
shrb
insb
int
mov
aas
lahf
jne
nop
setb
shll
mov
cld
jp
push
adc
mov
into
pop
xchg
test
cs
and
rol
pop
and
push
rcr
add
jp
pop
movsl
sbb
jmp
xor
sbb
lcall
repnz
fwait
xchg
cmp
fwait
sub
xchg
or
adc
test
and
lahf
nop
sub
mov
xchg
aas
sub
popf
jnp
cmp
pop
repz
insb
outsl
int3
je
pop
mov
sub
xchg
frstor
cmp
mov
sbbl
xor
sub
cmp
movsb
sbb
call
jmp
xchg
mov
adc
xchg
data16
rol
into
push
imul
fisubs
push
inc
sub
inc
and
pop
fs
jae
dec
fsubrs
adc
sbb
pop
cmp
cmp
push
adc
movsb
pop
xor
pop
enter
mov
lds
popf
or
nop
push
clc
lcall
adc
mov
imul
mov
and
jecxz
sbb
jnp
cwtl
roll
aas
cmp
cwtl
mov
dec
test
mov
mov
push
sub
pop
mov
pop
push
xchg
xor
jbe
push
insb
push
inc
jo
ss
je
push
push
js
dec
mov
and
fldl
test
jecxz
sbb
jns
fdivs
push
xchg
test
out
dec
adc
inc
leave
cwtl
sbb
add
sub
push
movsb
xor
fnstcw
ss
sub
push
mov
mov
movsb
mov
ss
sub
push
fdivs
jbe
loopne
imul
in
pop
sub
push
in
xor
cmp
hlt
xor
add
lcall
call
add
cli
inc
or
push
in
adc
lock
sbb
mov
and
stos
sub
pop
push
sub
mov
ss
xor
jae
push
cmp
pop
js
ss
sub
push
dec
xor
xor
ss
push
pop
and
ret
pop
add
pop
negl
pop
in
pop
pop
push
and
push
lret
xor
daa
sub
out
sub
mov
sbb
lods
loop
loopne
popf
pop
ret
in
cmp
pushf
sbb
mov
jns
inc
sbb
clc
addr16
aam
dec
dec
loopne
es
jbe
sbb
jge
jne
and
lcall
sbb
test
shll
xchg
les
stc
mov
pop
out
xor
int3
aaa
aad
cmp
shlb
in
mov
push
sbb
add
pushf
push
and
pop
sbb
clc
jnp
pop
sbb
xchg
xor
adc
test
sub
cmpl
and
xorb
loopne
or
jle
inc
gs
sbb
in
adc
sbb
jp
add
gs
xchg
std
setae
pop
not
jp
pop
mov
lahf
loope
adc
sbb
pushf
inc
pop
push
ss
mov
mov
dec
and
dec
sahf
ret
cwtl
push
and
xchg
xchg
push
inc
and
or
dec
inc
out
aad
push
mov
sbb
pop
or
pushf
push
push
push
push
outsl
insb
push
iret
in
or
add
aas
rcrl
js
xor
lcall
int3
movsb
pop
sbb
pop
adc
invd
ret
sbb
rorl
aas
fbld
mov
stos
push
adc
and
pop
xchg
adcl
aad
push
push
cmpsb
inc
fs
arpl
xchg
aam
es
cmp
pop
pushf
jmp
fidivl
mov
sub
xchg
hlt
push
out
xchg
roll
stos
pop
push
mov
pop
sub
pop
xor
pusha
and
pop
jae
pop
lods
add
jne
sub
add
and
add
or
sbb
jnp
xchg
add
sub
jno
fidivl
es
loop
fs
mov
and
mov
mov
ss
sub
pop
in
mov
daa
xchg
add
push
sahf
push
adc
and
push
dec
fisttps
pushl
nop
dec
push
sub
pushf
and
pop
jge
imul
popa
xchg
add
sbb
push
add
pushf
jo
or
mov
cwtl
mov
outsl
xchg
pusha
xchg
bound
lods
test
xchg
mov
mov
imul
cmp
mov
mov
ss
and
push
jo
pop
dec
pushf
adc
int3
sub
cmp
imul
adc
xchg
push
dec
push
mov
imul
loope
shrd
cmp
lahf
dec
adc
dec
ss
and
xor
sbb
addr16
pusha
cmp
cmc
hlt
out
dec
cld
je
repz
in
mov
sub
jbe
sub
sbb
pop
and
jno
xchg
sbb
lds
xlat
mov
stc
xchg
mov
pop
imul
jns
or
pop
fidivl
dec
adc
xchg
mov
pop
lret
or
xor
cli
daa
jo
sti
mov
cli
jecxz
pop
jb
sbb
or
add
sub
cmp
or
sbb
cmp
mov
xchg
std
sbb
inc
cltd
push
jp
push
movsb
and
pop
sbb
in
mov
pop
sti
scas
and
ret
js
enter
jno
loopne
call
cmp
inc
movsb
mov
mov
rcll
pop
mov
sbb
popf
sbb
adc
andb
fsubl
lahf
mov
or
pop
adc
clc
pushf
pop
pop
cmc
mov
or
sbb
cmp
pop
lods
pop
data16
mov
and
mov
pop
inc
and
mov
cwtl
movsb
cmp
and
push
clc
adc
lock
es
arpl
mov
test
cld
fdivrs
cmp
daa
add
sub
sbb
hlt
fnstsw
and
mov
cmp
repz
enter
add
out
out
mov
lods
movsl
sbb
int3
popf
aam
out
andb
into
pop
sub
pop
and
pop
sbb
cmp
and
and
sbb
ss
movsb
mov
sahf
lret
sahf
and
pushf
fwait
sub
sarb
stc
xor
fs
add
les
fstpl
jno
mov
jle
hlt
inc
popf
sub
adc
xchg
adc
mov
cmp
cld
sub
repz
imul
shl
mov
lret
inc
sarb
fcmovb
nop
add
sbb
lret
adc
lahf
and
popf
into
lcall
mov
fs
sbb
mov
ljmp
mov
sbb
push
lcall
dec
and
sbb
mov
fs
sbbb
pop
push
mov
jg
imul
div
das
add
in
or
loope
sbb
push
mov
and
jecxz
mov
pusha
xlat
push
test
and
imul
cld
cmc
xchg
dec
fcoml
sbb
cld
mov
push
sub
sbb
pop
or
sbb
shl
jnp
or
push
stos
nop
xor
sbb
ja
loop
rcl
sub
xor
sub
pop
inc
jae
cmpsl
popf
jp
add
outsb
lds
les
iret
and
arpl
test
adc
pop
inc
and
push
mov
mov
mov
rcl
and
mov
movsl
sbb
call
sarb
push
xor
pop
cmp
cli
pop
push
daa
cmpsb
cmpsl
pushf
rcll
mov
sbb
cld
mov
cmp
out
xchg
dec
call
test
test
cltd
movsl
sbb
cmp
test
cltd
cmp
sbb
jns
mov
jge
clc
xchg
jmp
jb
cld
iret
popf
sub
fldcw
aad
adc
int3
mov
std
ror
mov
adc
cmc
and
aad
fstpl
cld
insl
cs
notrack
sub
push
sub
inc
adc
les
push
mov
mov
cmp
add
addl
ret
sahf
sbb
and
sub
xor
cwtl
add
les
shll
push
add
pop
rcrb
lods
sbb
mov
xchg
sarl
mov
movsb
cmp
push
cmp
in
jns
scas
xchg
xor
jo
sahf
std
xchg
aas
xchg
and
and
loop
movsb
in
scas
dec
pushf
push
mov
inc
dec
insb
mov
inc
or
cmp
test
sub
sbb
xlat
nop
xor
xor
push
xor
xchg
js
adc
add
mov
and
dec
repz
pushf
pop
inc
or
push
enter
or
sbb
sbb
and
push
jle
adc
dec
stos
push
mov
insl
int
pushf
push
loope
in
dec
pop
cmp
fnstsw
roll
pop
or
lea
add
dec
imul
and
sti
jb
frstor
repz
leave
add
mov
sbb
push
xchg
clc
sbb
sbb
add
bound
pop
push
ss
pop
xchg
sbb
arpl
test
jae
jae
add
pop
andb
and
jnp
ret
int3
shll
mov
add
rcll
xchg
and
pop
cli
ret
hlt
outsb
jno
sub
jecxz
push
pop
add
test
ss
push
inc
sub
inc
lahf
pop
mov
xchg
pop
into
push
mov
xor
insb
dec
hlt
xchg
inc
into
and
aas
in
fisubs
lahf
xor
inc
aad
arpl
pop
lods
cmp
jg
pop
inc
stc
ljmp
pop
adc
pop
xlat
or
xor
push
pop
add
sub
ficomps
xor
clc
jge
icebp
cmp
push
movsl
add
call
iret
sub
push
pop
mov
or
rcrl
lods
and
cld
and
push
mov
cwtl
xor
jmp
popl
in
in
xor
sahf
xor
lret
dec
int
sub
fimull
add
jmp
or
push
xchg
ror
sbb
mov
loope
cmp
xchg
dec
mov
cld
cs
mov
mov
xchg
jp
or
in
inc
enter
lcall
outsb
leave
stos
into
cmp
cltd
mov
cmp
xchg
jb
mov
das
loope
and
push
mov
shll
xor
pop
cmp
pop
add
jno
aaa
cld
mov
cwtl
adc
cld
loope,pt
cmp
add
dec
aas
repnz
sbb
cmpsl
or
or
xor
and
rolb
testb
clc
es
in
sbb
fwait
xchg
aas
pusha
lret
iret
lds
push
push
adc
sub
in
mov
filds
pushf
adc
mov
aad
or
ret
popa
call
ds
fdivr
inc
aaa
sub
popf
push
jmp
ljmp
jecxz
nop
or
sub
es
xor
cmp
cmp
or
inc
push
in
insb
std
jg
jae
fs
pop
xchg
sbb
xlat
cli
shll
xchg
nop
sbb
lcall
test
adc
jecxz
jge
mov
jge
mov
insb
xchg
imul
mov
mov
sahf
fs
dec
mov
dec
sbb
mov
fimuls
mov
mov
mov
test
jae
out
mov
std
mov
clc
outsl
iret
cmp
scas
in
or
and
sub
ror
mov
xchg
push
repnz
js
ss
sbb
sbb
fcoml
cmc
mov
jle
scas
aad
icebp
mov
loopne
xlat
push
adc
xchg
leave
movsl
cwtl
lock
cmc
mov
pop
gs
hlt
mov
mov
xor
pop
sub
cmpsb
inc
cmp
mov
mov
daa
sub
mov
sbb
push
add
in
int3
inc
ss
lahf
sarl
jns
pop
and
jnp
push
push
test
imul
jl
cld
jbe
or
pop
insl
jnp
insl
leave
jecxz
test
lret
fsubrs
xchg
inc
rclb
mov
push
pop
ljmp
xor
mov
repz
dec
insb
cwtl
in
cmovne
push
pop
lahf
icebp
inc
sbb
pop
loop
scas
xchg
nop
sbb
das
or
ret
aad
mov
xor
cmp
imul
sbb
mov
xor
movl
inc
into
and
dec
or
sbb
movsb
repnz
dec
sbb
inc
sbb
sbb
sbb
or
jmp
pop
mov
clc
add
cmp
shrb
aas
adcl
inc
pop
icebp
popf
sbb
test
insl
sti
add
cmp
jae
mov
sub
rcrl
mov
sub
cmp
jmp
inc
imul
push
inc
addr16
aad
leave
sarl
adc
xor
sub
pop
dec
jae
jno
jo
mov
aad
dec
sbb
fs
push
push
imul
xor
aaa
push
fcompl
inc
jno
jle
popa
jns
or
outsl
add
rcrb
cld
mov
sbb
push
lcall
stc
sbb
sbb
add
enter
fadd
js
mov
jle
mov
bound
into
das
pop
dec
fisttps
push
xor
sbb
xchg
pop
nop
call
add
fs
ja
cmpsb
xchg
adc
pop
push
xchg
imul
jno
or
imulb
bound
rclb
mov
aam
mov
dec
cmp
mov
sarl
inc
sarl
xor
popf
and
cmp
sub
adcl
es
fstl
lods
stos
sub
fldt
std
stos
fildl
and
inc
sub
in
jns
daa
data16
aas
or
add
das
fstpl
push
addr16
mov
xchg
xchg
popa
or
aad
popl
dec
popf
mov
stos
inc
sbb
and
fs
insl
cmpsb
pop
add
pop
std
adc
mov
popa
ret
sub
cmpb
mov
pusha
data16
cmpl
dec
xlat
jmp
cli
cmp
xchg
movsb
sub
cmp
dec
xor
xchg
enter
xchg
mov
mov
loopne
lret
mov
cmp
mov
lods
mov
pop
push
sbb
rorl
adc
repz
cmp
adc
les
mov
pop
gs
in
scas
lds
jns
roll
mov
lret
sub
and
test
leave
dec
fisubrs
stc
pop
aad
inc
push
push
mov
sub
iret
inc
notb
testb
sahf
push
inc
cmpsb
and
fisttpll
push
lret
push
outsb
cmp
xor
cmp
push
mov
les
pop
cmp
and
xchg
xchg
testl
hlt
cmpb
dec
cmp
out
in
mov
int
pop
xchg
stos
xchg
jp
outsl
jbe
out
addr16
movsl
push
cmp
js
inc
push
stos
js
xor
cld
cmp
ret
data16
jbe
out
push
int
add
jge
mov
stc
pop
popf
or
popa
fcmove
adc
in
or
jb
imul
insb
in
or
xor
mov
push
inc
sahf
and
fwait
mov
xor
sbb
adc
fimuls
and
cmp
mov
push
inc
sbb
cmp
xchg
pop
xor
ja
sub
vmwrite
push
mov
out
lcall
rcll
jg
mov
sti
push
mov
bound
clc
mov
jne
gs
sub
imul
mull
push
sbb
ror
jmp
or
add
das
or
push
mov
sbb
xchg
cmc
ljmp
sbb
sbb
cli
mov
mov
push
adc
add
testl
sti
mov
cmp
movsl
lock
call
enter
push
sbb
mov
add
xor
xchg
ret
adc
and
push
cmp
ss
pop
ss
inc
lds
outsl
inc
sub
sbb
pushf
loope
cwtl
pop
push
inc
mov
sub
stos
pop
stos
enter
ret
stos
je
out
imulb
movb
cmpsl
xor
cmp
pop
loopne
test
add
loopne
hlt
outsb
outsl
rcll
insl
fwait
sbb
jae
or
lret
dec
pop
sub
lock
int
pushf
shlb
lahf
outsb
iret
sub
popa
ficoml
push
push
mov
incb
jmp
ds
xchg
jns
inc
mov
and
xor
or
jnp
outsb
push
cwtl
cltd
push
int
cmp
daa
loop
mov
cli
sbb
test
mov
jmp
xchg
dec
addr16
push
and
cmp
push
mov
int3
xchg
and
push
std
pop
les
fcomps
in
mov
xchg
dec
in
inc
aad
pushf
out
sub
and
and
xor
push
xor
xchg
cmp
leave
pop
sbb
add
orl
arpl
loopne
and
in
sbb
pop
ds
adc
fldt
stos
mov
cmp
stos
jle
and
popf
and
lods
dec
pop
cmpsl
adc
test
and
loop
cld
xchg
jno
std
lods
xchg
jp
jnp
inc
fcmovne
cmp
mov
clc
jle
pop
push
cmp
test
movsb
sub
inc
movsl
pop
addr16
and
xor
aaa
lds
lret
adc
fucomip
insl
pop
jl
cwtl
cld
mov
dec
fidivl
adc
ja
jg
xor
jl
mov
push
sbb
mov
test
repnz
aas
nop
iret
jae
stc
add
and
and
cld
fisubl
jg
sub
dec
dec
sbb
sbb
fcoml
in
mov
push
jo
clc
push
mov
daa
mov
dec
mov
lods
pop
mov
nop
fwait
leave
mov
cld
lods
mov
jp
adc
mov
push
les
sub
aas
cld
mov
mov
popa
scas
mov
and
mov
rcll
bound
mov
and
and
popf
pushf
lods
mov
inc
mov
fisttps
mov
sbb
xchg
mov
std
push
faddl
inc
jmp
mov
cmc
dec
mov
jg
data16
push
jl
push
sub
add
dec
sbb
sahf
outsl
xor
sti
sub
inc
xchg
ds
jecxz
fadd
sub
cli
movsb
mov
sub
cld
rcr
pop
mov
inc
mov
and
cmp
scas
in
push
mov
repnz
inc
xchg
push
inc
lods
xor
mov
in
push
xchg
cltd
roll
sub
and
xor
mov
cmp
movsb
xor
add
mov
push
sti
cmp
jo
sbb
xor
daa
loopne
or
call
jecxz
cmp
mov
icebp
in
out
inc
hlt
lods
xchg
ljmp
cld
jns
xchg
outsb
mov
pop
push
sbb
cwtl
xchg
inc
insb
inc
lea
jo
shll
mov
push
xor
and
lcall
jnp
sbb
pop
je
sbb
sub
movsb
pusha
push
mov
push
int3
sbb
std
mov
xor
mov
sti
sbb
inc
dec
ret
adc
mov
out
jnp
int3
movsb
xor
push
pushf
std
insl
mov
xchg
push
icebp
aad
jmp
cld
sarl
icebp
das
cmp
inc
or
shrl
cmpsb
xor
jae
mov
xor
cmc
pop
xor
and
xor
push
ss
xor
xor
mov
mov
addr16
imul
inc
lcall
xor
lock
push
jge
sub
inc
mov
xor
sbb
fisubl
insb
pop
sub
mov
inc
movsb
xor
add
aam
sbb
sub
and
cmpsl
cli
clc
push
mov
push
repnz
aad
lea
in
mov
xchg
add
aas
add
dec
in
arpl
mov
push
repnz
xor
in
jbe
and
sbb
sbb
xchg
sbb
outsb
in
or
aas
sbb
fs
xchg
or
cmp
jns
and
and
ss
stos
insl
and
or
pop
shlb
imul
mov
pop
adc
sti
es
adc
fisttpll
popa
inc
aam
mov
sbb
stos
push
movnti
aas
push
sahf
inc
dec
fiadds
or
stc
and
jmp
pop
xchg
or
pop
shrb
add
inc
or
cltd
mov
sub
dec
sub
aam
push
push
fs
aaa
or
xchg
jb
pop
push
lock
rcrb
movntps
jl
sub
mov
adcl
and
es
outsb
add
inc
push
notb
push
add
cmp
ret
fs
xor
fcompl
idivb
inc
sub
pop
fldcw
xor
push
or
cld
dec
xchg
ret
xchg
sub
or
push
bound
in
cmp
fsubs
push
and
js
mov
mov
ss
pop
imul
sub
xor
and
dec
inc
icebp
mov
or
cld
jo
mov
xchg
inc
sbb
mov
ficoml
test
sbb
inc
add
adc
xchg
movsl
lahf
int3
dec
sahf
cmp
inc
mov
nop
scas
pop
bnd
or
insb
fbld
shlb
jl
lods
adc
fisttpll
mov
mov
xchg
pop
fimull
and
out
inc
and
pop
hlt
or
ficompl
pusha
inc
mov
js
pop
lods
iret
fldt
mov
xor
cmp
sub
sbb
xchg
js
jae
jl
xchg
dec
inc
adc
push
aas
or
outsb
xor
sarl
insb
mov
jg
mov
pop
push
fs
or
fwait
jo
pop
jae
jb
cmp
lahf
aas
adcb
lahf
xlat
pushl
pop
inc
inc
std
outsb
test
sbb
or
mov
pop
xor
enter
dec
mov
sub
das
fs
cltd
xor
das
fistl
fstpt
fcompl
lret
shl
sbb
sbb
es
leave
jae
xchg
xor
push
mov
nop
lds
and
cltd
enter
ficomps
scas
push
imul
push
or
inc
xchg
and
push
cld
cmpsb
pop
ljmp
aaa
cld
pop
pusha
jg
mov
sarb
mov
jne
das
rcll
xor
xor
or
outsb
sub
fmul
jmp
sbb
ret
add
nop
sub
adc
cwtl
jbe
aaa
faddp
jnp
sub
cltd
cmpsb
push
sarb
sahf
imul
adc
jb
imul
add
in
pop
in
xchg
cwtl
xchg
ljmp
outsl
mov
inc
test
out
mov
pop
push
data16
pop
inc
push
imul
cmp
mov
xor
ja
ds
sbb
fstl
xchg
dec
ficoml
std
dec
bound
lcall
gs
jno
pop
mov
das
add
fcmovnb
lahf
arpl
xchg
div
xchg
arpl
imul
push
out
aad
cmp
jl
dec
or
mov
inc
sbb
and
test
jb
sbb
scas
inc
lahf
and
das
adc
and
call
push
pop
mov
pop
mov
loopne
popf
sahf
push
or
scas
and
int
inc
xchg
pusha
pop
lahf
imul
imul
and
push
xchg
testb
push
mov
push
sbb
scas
adc
dec
mov
pop
xlat
stos
aaa
jo
adc
iret
pop
insb
and
fsub
fwait
mov
sub
bound
pop
and
mov
inc
mov
xchg
or
into
and
incl
or
pusha
xchg
push
sub
mov
cmpsl
xlat
dec
rol
sbb
loop
push
adc
mov
inc
pushf
sub
or
jno
add
call
dec
movsl
jp
test
sbb
xor
cmp
aas
xchg
push
insl
das
sbb
or
int
sbb
in
pushl
cmp
es
daa
out
out
cmp
pop
nop
cmp
shrb
xchg
xor
push
dec
inc
sbb
cmp
icebp
xchg
pop
cltd
out
xor
xchg
fcmovnb
andb
ss
pop
inc
cmp
cwtl
and
popf
shrl
mov
fwait
sub
pop
jae
adc
cmp
mov
es
xchg
fisubl
lret
cld
call
jnp
lahf
call
int
cli
push
sub
sub
scas
xchg
enter
push
dec
xchg
pop
fidivrl
sbb
pop
jge
dec
xorb
inc
xor
push
popf
cld
push
mov
add
cmc
jbe
insl
outsb
jge
xchg
scas
cmpsb
cmc
aad
data16
sub
test
xchg
jmp
jnp
push
lea
or
cmpsb
xchg
push
loopne
stos
xchg
sbb
cld
inc
cs
xor
xorl
mov
push
jb
cwtl
fdivl
jecxz
jp
cmp
add
test
inc
jb
addr16
xchg
mov
mov
test
jl
inc
sbbl
es
pop
loop
jge
mov
jo
xor
sub
mov
sbb
cld
decl
into
sahf
mov
dec
aad
fsubl
xchg
push
sub
mov
sbb
and
leave
jns
fstpt
sahf
cli
fildll
stos
popf
mov
fstl
xchg
add
aas
push
inc
aam
push
mov
imul
pop
pop
rcrl
nop
inc
or
xchg
outsb
cmp
aaa
push
sahf
sbb
les
adc
adc
xor
inc
inc
xor
cs
es
xor
cmp
add
or
mov
push
outsb
xchg
jp
outsl
sub
stos
imul
xor
push
jne
jnp
push
push
imul
inc
mov
cmp
dec
cmp
ret
test
cmpsb
xor
out
outsb
movsb
xor
pop
dec
pop
iret
pop
and
xchg
jo
xor
int
push
or
push
jb
clc
xchg
mov
icebp
mov
cld
lods
fisubs
xchg
mov
into
mov
mov
xor
push
push
dec
xchg
inc
sbb
sbb
stos
add
xor
arpl
sbb
push
or
sbb
cli
shrb
out
stos
out
lret
gs
pop
fwait
sbb
push
and
popa
arpl
and
add
ds
adc
test
and
add
aaa
int3
lcall
or
inc
xchg
and
pop
push
jno
xchg
sbb
xor
xchg
popf
xchg
push
inc
rorb
cmpsl
test
jbe
pop
xor
nop
popa
cld
xchg
jecxz
adc
arpl
stos
dec
aad
pop
hlt
adc
fwait
xchg
nop
jmp
outsl
cwtl
iret
pusha
repz
adc
cltd
cmp
pushf
pop
cmp
mov
adc
rcr
and
mov
push
add
or
ss
sub
mov
into
lcall
and
int3
push
es
dec
dec
sub
mov
adc
sub
sub
xor
mov
mov
mov
mov
and
stc
add
mov
aas
mov
inc
ds
or
pop
loop
in
dec
mov
push
test
cmp
sbb
into
gs
mov
insb
fcompl
lret
mov
and
adc
xchg
pop
lea
adc
push
xchg
mov
fidivrs
aad
data16
rcrl
insb
sub
leave
cmc
pop
pop
dec
mov
dec
sbb
or
imulb
les
xor
xchg
sahf
daa
xor
fs
xchg
pop
cld
cmpsb
jnp
rorb
push
pop
adc
push
sbb
xchg
lock
mov
dec
sbb
nop
int3
jb
sahf
cmp
aad
sbb
out
or
lea
ds
jl
paddd
sbb
pop
dec
or
lea
pushf
push
inc
cmp
push
jmp
xor
fidivrl
push
in
adc
aaa
jae
sub
rcrl
jmp
icebp
cmc
push
fcoms
mov
inc
loopne
in
or
pop
xchg
pushf
mov
push
dec
mov
testl
add
test
cmp
mov
mov
xor
jp
pop
mov
add
dec
jle
pusha
clc
test
cmp
add
in
js
dec
mov
xlat
adc
or
mov
xchg
fisttps
xor
jb
jno
jns
pop
daa
and
push
xchg
mov
pusha
push
sbb
adc
adc
int3
jbe
lds
daa
cmp
jmp
push
ret
enter
push
adc
mov
lock
pop
int3
mov
xor
decl
clc
cmp
lock
cmp
xchg
xchg
dec
in
fcoms
sub
in
add
push
sbb
aad
xchg
xchg
loopne
xor
out
sbbl
mov
ds
adc
xor
and
mov
call
popf
imul
icebp
add
sbb
arpl
cli
pop
sbb
or
xlat
xchg
xor
cmp
aam
sbb
adc
adc
pop
mov
mov
repnz
inc
push
jmp
outsl
int
cmc
sub
push
sub
sbb
sbb
adc
fildll
inc
xchg
sub
sub
cwtl
xor
stc
mov
pop
lods
mov
inc
movb
pop
es
xchg
add
sub
cltd
xchg
pop
sbb
jae
mov
imul
mov
sub
push
cld
jmp
movsb
push
mov
cmpsl
fisubs
fisubrl
xchg
cmp
jbe
push
leave
daa
mov
decl
mov
aas
cmp
xor
das
sbb
adc
mov
xchg
lret
je
xchg
int
jp
aaa
bound
mov
inc
sub
adc
sahf
fildll
cmp
jae
jne
pop
cld
fs
mov
mov
in
pop
sub
daa
xchg
fmuls
mov
and
jns
dec
xchg
mov
pop
lahf
mov
add
inc
cli
sub
fnstenv
movsl
xor
jbe
cwtl
mov
lds
cmp
mov
push
ret
ffree
mov
xor
xor
pop
insb
push
andl
pusha
cmpsl
add
mov
jge
mov
or
shll
inc
push
inc
popf
push
adc
dec
pop
call
cmp
test
ficoms
ds
xchg
ljmp
negl
test
cli
inc
xor
push
movl
push
cmp
sub
ds
dec
sbb
clc
mov
push
xor
adcb
mov
or
mov
ja
cli
ret
sti
push
aas
popa
jno
dec
dec
pop
or
or
mov
nop
pop
in
add
aad
sbb
xlat
xor
or
xchg
sbb
mov
pop
push
sub
xchg
cmp
push
mov
push
test
xor
das
push
lret
sub
xchg
imul
push
mov
dec
inc
push
sahf
gs
sbb
cmc
std
nop
je
fdivl
fstps
fsubl
dec
pop
push
adc
iret
and
pop
js
mov
xlat
inc
mov
sub
pop
dec
inc
pop
and
xor
sbb
jge
pushf
cmp
ja
popf
cld
fisubl
lahf
les
mov
stos
xchg
jno
cmpsl
xchg
add
mov
lea
jo
popf
fidivs
pop
push
lcall
mov
addl
ss
inc
pop
shr
les
sbb
jo
lret
xchg
xor
push
daa
pusha
pop
pop
jae
data16
lock
and
sahf
inc
mov
idiv
into
or
pop
ret
xor
and
jl
popa
loopne
stos
and
jl
jns
outsl
and
mov
and
cwtl
cmpsl
push
mov
scas
dec
call
xchg
inc
lcall
push
add
lods
or
push
and
stc
pushf
add
hlt
and
int
aaa
mov
test
cmp
out
dec
sbb
mov
arpl
movsl
es
pop
lods
hlt
inc
sbb
cld
push
inc
sub
or
in
mov
pop
loopne
or
daa
cld
mov
push
popa
lods
inc
sub
sbb
xchg
icebp
jecxz
cld
mov
mov
incl
sahf
or
sahf
push
pusha
or
cmpsb
stos
movsb
mov
sub
mov
lods
cmpsl
add
movsl
jp
sub
dec
xchg
in
xchg
fs
xor
xchg
or
adc
sub
xor
jge
ret
cmp
pop
xor
xor
mov
bound
shlb
popa
or
int
mov
xchg
sbbb
sbb
cmp
daa
cmp
xor
cmp
or
mov
sub
sub
in
cmp
addr16
ss
push
xchg
push
cmp
popf
fisubrs
adc
mov
es
or
xchg
push
test
dec
cltd
sbb
out
push
aam
or
ds
mov
jg
jbe
pusha
inc
jbe
sti
xor
jp
mov
and
cs
push
cmp
xchg
es
aaa
ljmp
push
xor
sbbl
sbb
mov
mov
lea
fs
jle
jns
sub
mov
mov
mov
fidivl
jb
inc
lods
xchg
mov
popf
xchg
push
and
sbb
xchg
repz
or
pop
fisubs
gs
xor
xchg
cmp
daa
rcrb
outsl
ret
shll
gs
sbb
ret
jge
in
subl
jo
das
in
add
jb
xchg
or
pop
int
lods
les
outsb
fst
inc
pop
xchg
mov
adc
lahf
mov
xchg
inc
xor
push
aad
adc
push
pushl
iret
daa
cld
popf
inc
mov
aas
in
rcll
xor
test
icebp
shll
ficompl
sahf
mov
cmc
cmp
cmp
jmp
rcl
xchg
adc
out
pop
in
pop
or
vpaddusw
mov
sub
aaa
sarl
mov
lcall
mov
xchg
push
mov
xchg
or
fsubrs
decl
sub
in
add
addr16
int3
out
shll
mov
or
sbb
cwtl
sbb
pop
sbb
sub
sbb
mov
int3
sbb
inc
cmp
xor
push
mov
es
roll
xchg
lds
push
jne
xchg
sbb
loop
push
fcomp
or
or
lcall
or
sub
outsb
inc
xchg
dec
adc
hlt
fs
mov
pop
or
stos
push
das
or
lea
push
or
sbb
lock
or
push
hlt
cmp
xor
adc
xchg
icebp
pop
xlat
or
sub
xchg
ficoms
sbb
subb
xlat
mov
fwait
int3
sbb
faddl
inc
loop
je
sbb
call
jbe
icebp
push
popf
es
push
adc
sbb
xchg
popf
pop
mov
xor
adc
aad
jecxz
xor
mov
mov
mov
jbe
inc
sbb
jns
jno
addl
xchg
int3
push
outsb
outsb
repz
add
mov
sub
inc
push
sbb
lahf
cld
mov
or
fidivrl
push
decl
sub
mov
sub
fdivrl
push
mov
push
push
xor
sbb
lahf
jb
mov
sbb
dec
int3
imul
pusha
xor
sbb
addl
aaa
call
pushw
pop
pop
pop
bound
stos
mov
push
into
mov
inc
fnstenv
aad
add
pop
and
push
fnstcw
es
fsts
pop
mov
inc
inc
jl
push
and
and
and
jnp
pushf
push
pop
insl
fmull
sub
sub
in
insb
xor
sbb
cmp
in
insl
in
adc
fstl
or
xor
xchg
notb
dec
inc
les
mov
aad
cli
pop
cmp
popf
jo
sub
cld
pop
mov
sbb
aam
jp
aaa
negb
cld
xchg
push
outsl
cmp
movsb
jno
adc
lock
repz
dec
sbb
pop
insb
sub
stos
out
push
loopne
call
inc
xor
inc
mov
pop
jbe
sub
dec
out
bound
jecxz
das
adc
mov
incl
nop
out
daa
jnp
repz
sbb
inc
sub
jb
jae
rorl
cmc
sbb
js
gs
jp
fcmove
xchg
pop
inc
xor
cld
mov
push
adc
mov
dec
loope
cmp
cmp
in
xor
mov
in
repz
mov
std
mov
cmp
cwtl
je
dec
jl
xor
mov
add
fs
xor
inc
mov
xchg
fsubr
clc
aas
mov
es
sahf
leave
and
or
fsubrl
pusha
cwtl
std
cmp
cwtl
cld
dec
movsb
mov
std
decl
jp
sub
sahf
std
inc
cmp
and
call
xor
mov
add
sbb
repnz
push
and
push
clc
stos
add
testl
adc
in
push
pop
xlat
insb
std
mov
pop
push
cmp
jp
pop
and
lods
pop
in
sub
or
loope
decl
inc
fstpl
je
xchg
fdivs
scas
in
shll
jle
push
lods
pop
in
in
cld
pop
mov
dec
pop
or
mov
dec
sbb
add
push
xchg
ljmp
in
lahf
das
insb
xchg
mov
mov
push
cmp
add
adc
data16
push
insl
push
pop
and
cld
mov
sbb
adc
arpl
sbb
xchg
xchg
cwtl
cs
add
pop
adc
push
sbb
mov
imul
fstpt
std
mov
and
xlat
outsl
dec
adc
pop
fildll
in
push
jmp
sub
daa
push
inc
mov
icebp
sbb
fld
cmp
sub
nop
dec
inc
and
inc
pop
inc
pop
lcall
sbb
push
push
mov
enter
popf
cld
mov
push
adc
pop
test
adc
cli
xchg
xchg
xlat
xor
jno
icebp
jae
shll
fs
and
rcrl
sbb
lcall
xor
jb
xor
xchg
fldpi
addr16
pushf
push
pop
addr16
in
ss
xchg
dec
popf
jno
adc
mov
jne
xor
out
and
sbb
push
loop
pop
fdivrs
sub
ret
pop
enter
jp
test
xor
fadds
adc
jmp
mov
insb
push
shlb
addr16
daa
mov
iret
es
iret
mov
jmp
dec
pop
cmc
and
rcrb
add
es
pop
and
push
push
sbb
cltd
std
mov
cmp
sub
or
sbb
cld
ficoml
adc
mov
ficompl
rorb
and
fs
cmp
cltd
xor
mov
ret
and
push
pusha
stos
lcall
and
inc
inc
rcl
lahf
xor
push
sbb
add
in
and
arpl
inc
mull
xor
and
sub
ret
shrb
jge
test
mov
cwtl
in
adc
adc
fidivrs
sub
daa
pop
sbb
jns
in
in
push
adc
adc
lods
and
sbb
mov
test
mov
movsb
jno
in
adc
sbb
or
sbb
push
adc
jle
test
pop
inc
and
loopne
mov
adc
lcall
pop
inc
dec
popf
push
es
cmp
mov
cmp
nop
and
sbb
mov
sub
insl
sarb
lcall
jb
sub
xchg
dec
pop
sub
mov
int3
or
sub
lret
fnstenv
mov
xchg
rcrl
dec
stos
in
data16
jno
fcomps
sahf
pop
shrb
adc
inc
insl
pushf
sbb
push
pop
inc
xchg
std
scas
repz
xchg
dec
dec
nop
and
dec
std
dec
sbb
or
and
push
inc
add
push
cmp
es
fwait
aas
call
inc
decl
into
push
lds
sahf
adc
stos
push
sbb
pop
out
lcall
push
fmull
sbb
ja
xchg
shl
fwait
cmpsb
cmp
cltd
mov
into
in
dec
push
xchg
and
xlat
and
jmp
cmp
adc
out
mov
or
sub
mov
popf
fs
sbb
push
bound
subl
movsl
imul
mul
sti
enter
lea
jmp
cmp
jne
push
xor
out
out
fstl
sbb
cltd
ljmp
ret
xor
pop
sbb
or
inc
cs
sbb
xor
sbb
adc
pop
fcomip
adc
js
mov
and
mov
lahf
adc
lret
mov
push
sbb
jp
pusha
loopne
sbb
xchg
aaa
stos
mov
idiv
sub
daa
popf
xchg
sub
pop
pusha
mov
cmp
test
negb
std
out
pop
jno
inc
adc
sub
pop
pop
push
jle
fdivrl
shrl
nop
mov
cmp
iret
out
out
and
adc
pop
sub
lcall
sbb
shrb
or
jno
xchg
or
push
xor
je
shl
out
xlat
push
jae
jecxz
xor
inc
sub
icebp
xchg
jg
icebp
cmpsl
cmp
add
mov
mov
or
and
out
jae
cmpsb
inc
jmp
cmp
fldcw
sbb
push
fildll
out
xlat
gs
pop
in
imul
fs
aas
es
imul
push
fs
aas
add
ret
int
out
cmp
sysexit
pop
mov
push
loope
xor
lock
push
sti
imull
mov
mov
loop
xchg
bound
push
popf
scas
mov
ja
call
mov
push
sbb
cmp
pop
lods
sbb
or
xor
nop
inc
push
and
decl
repnz
int3
sub
mov
ss
cwtl
pop
push
ss
add
sub
sub
and
add
and
mov
mov
sub
xor
push
lahf
jns
adc
out
dec
sub
pop
inc
cmc
testl
fstl
popf
xor
bound
call
push
xchg
push
out
xor
daa
push
inc
xor
cmp
xor
mov
jne
mov
inc
or
bound
add
in
adc
sbbb
jb
mov
or
out
lret
cmp
dec
loopne
inc
pop
push
xor
in
inc
xchg
cmc
push
popa
xor
push
adc
movsb
and
push
inc
push
xchg
idiv
xor
incl
push
stos
ljmp
adc
aam
enter
popf
or
sbb
add
and
or
std
lods
jno
fisubs
mov
jle
push
insb
std
pushf
mov
or
fildl
inc
clc
mov
pushf
rorb
push
arpl
pop
repnz
xor
sbb
imul
sub
mov
in
mov
call
sub
jle
scas
insl
aas
push
push
xchg
out
or
pop
sbb
cwtl
mov
push
adc
out
or
cltd
push
jle
and
pop
incl
insl
ds
in
cmp
sti
insb
aam
arpl
popf
mov
lods
or
mov
dec
pop
push
adc
xlat
and
ret
imul
aas
cmp
xor
push
dec
push
xchg
ficoml
pop
xchg
cwtl
lret
pop
lahf
popf
push
and
and
xchg
fsubl
insl
xor
dec
push
aad
push
mov
iret
sbb
scas
mov
adc
mov
adc
in
xchg
mulb
clc
std
dec
sbb
pop
call
cmpsb
dec
mov
in
mov
out
cmp
arpl
adc
sti
mov
imul
jno
mov
inc
iret
cmc
mov
push
add
mov
jae
data16
int3
mov
cmpsb
loop
mov
nop
inc
cmp
xor
aad
aam
popa
or
aas
loop
in
movsb
and
and
push
and
cld
lahf
dec
lds
rcll
pop
in
cmpsb
push
xor
icebp
add
test
dec
sarl
loop
pop
mov
mov
aam
sub
xchg
cbtw
xor
jmp
cmpsb
pushl
pop
ret
xor
adc
push
mov
sub
inc
lahf
and
pop
repnz
call
xor
sahf
ds
jmp
push
hlt
bnd
js
outsb
roll
pusha
dec
and
adc
xor
jbe
lock
xchg
lahf
push
mov
lds
push
lahf
xor
jmp
sub
sub
xchg
mov
cli
ljmp
push
mov
mov
xchg
pushf
mov
xchg
jmp
mov
pop
push
mov
inc
out
lcall
xor
xchg
pop
mov
sbb
xchg
or
insb
loopne
insb
cld
sub
sbb
lcall
cmp
pop
sub
test
pop
fnstsw
gs
mov
jmp
mov
mov
gs
mov
mov
push
shlb
js
inc
sarb
cwtl
adc
push
nop
mov
inc
inc
sub
movsb
sub
pop
int3
mov
js
sbb
mov
les
mov
cld
mov
cs
sub
pop
push
sbb
fcmovnb
sahf
push
fisttps
cld
sbb
add
or
and
movl
pop
and
js
pop
addr16
pop
push
jecxz
or
repnz
mov
sbb
add
jle
insl
inc
fnsave
cld
sub
mov
push
pop
nop
xor
pushl
or
mov
cmp
push
scas
in
into
inc
mov
arpl
sbb
sub
push
loop
ss
inc
sbb
iret
aam
and
pop
xchg
push
inc
js
jmp
jle
sbb
popf
pop
ret
cwtl
mov
and
pusha
leave
cltd
cmp
jno
stc
xchg
or
std
andb
jmp
cs
dec
xchg
cmpsb
adc
push
xor
sbb
imul
negb
sub
lcall
pop
jnp
mov
aaa
popa
movsb
dec
mov
or
fmul
jmp
xor
ss
pop
fadds
outsl
mov
ljmp
sbb
std
stos
imul
ss
and
push
inc
and
xchg
popa
lods
sub
nop
insl
andl
and
mov
aad
aam
inc
inc
push
movsb
insb
pop
int3
mov
lret
sarl
roll
pop
stc
mov
push
pop
adc
sub
or
movsb
popf
and
inc
jae
cmp
mov
mov
xchg
sbb
sbb
arpl
sub
cmp
xchg
pop
ljmp
push
jbe
push
cmp
sbb
rorb
inc
and
jg
inc
rolb
push
pusha
inc
in
or
xchg
sbb
inc
int
mov
pop
and
das
pop
add
cmp
in
arpl
dec
push
mov
in
cld
inc
sub
mov
inc
or
pop
lods
int3
cmpsl
push
mov
ja
xor
sub
mov
push
subb
call
mov
int3
fsubrs
mov
xchg
rol
dec
pop
repnz
xchg
and
jg
dec
xchg
jns
sbb
outsl
jnp
inc
sub
pop
fnstcw
ljmp
inc
aad
inc
pop
xchg
mov
push
lret
cwtl
cwtl
push
mov
jg
and
in
jp
pop
xchg
and
pushf
nop
aad
into
jb
jp
sub
inc
bound
lock
lret
push
push
adc
int
add
aaa
in
aad
cli
daa
push
mov
sub
movsb
pop
fnstsw
dec
jmp
xchg
xor
xor
fistpl
roll
inc
ds
ficoml
mov
mov
jb
fcoml
std
jg
and
xor
pop
loopne
and
sub
fcoml
and
push
fcomps
jmp
add
dec
fimull
sbb
sub
sbb
es
sbb
das
lods
test
fucomp
je
mov
out
ficoms
pop
mov
adc
mov
mov
xchg
lcall
mov
leave
sbb
adc
mov
dec
sbb
add
pop
enter
mov
adc
cli
mov
pop
cmp
inc
dec
cltd
sub
rorb
fdivl
mov
movsb
xchg
aad
aam
adc
fstl
add
dec
mov
lods
mov
out
in
jns
fs
or
and
or
add
decb
xor
outsl
pop
mov
loop
sub
lods
sub
clc
xchg
mov
pop
inc
loop
xchg
adc
test
ret
imul
xor
add
orl
imulb
cld
xlat
mov
popf
xchg
xchg
stos
nop
mov
jp
jno
cmp
and
cld
in
dec
push
and
dec
lds
mov
xor
push
push
repnz
cmp
and
add
clc
imul
int3
add
sbb
xchg
add
push
or
push
jl
dec
sbb
lret
decl
xor
movsb
cmpsl
fsubr
fcoml
mov
xor
loop
pop
xor
das
cltd
or
cmp
cmp
sbb
xor
inc
pop
loopne
cmpsb
rcrb
adc
jl
nop
jp
xchg
mov
sbb
inc
xchg
stos
test
sub
into
jecxz
inc
push
and
jge
out
pop
call
pop
pop
mov
pop
push
cmp
pop
imul
adc
sub
jmp
xchg
pusha
cmp
ss
arpl
mov
pop
add
mov
xchg
mov
push
int
mov
xor
cmc
sbb
dec
jp
xor
push
in
lea
mov
mov
adc
in
push
rcpps
mov
ficompl
push
push
inc
lcall
and
lahf
gs
cmp
mov
pop
dec
cmp
mov
push
repz
fildl
stc
lea
mov
pop
adc
sbb
pushf
jbe
fistl
adc
push
push
std
cmp
sbb
pop
in
pop
stos
mov
cmpb
pop
rcrl
das
or
xor
mov
addr16
pushf
stos
inc
cmp
cmpsb
sbb
mov
popf
fstps
mov
lds
inc
jl
mov
and
xor
pop
sbb
jle
jle
add
cwtl
adc
jl
pop
xor
push
mov
cli
lret
ficoms
lahf
in
jge
and
mov
xlat
dec
cld
sub
jnp
sub
stos
xor
cwtl
push
and
rolb
aad
cmpsb
bound
hlt
pop
shr
bound
cmp
out
and
cmp
insb
decb
cli
add
mov
and
pop
and
lods
lret
ss
fmul
je
push
repnz
inc
cmp
adc
lahf
mov
int
xor
rorb
jo
inc
ficoml
sbb
xchg
or
push
adc
add
pop
add
dec
adc
ss
ljmp
inc
adc
xor
ljmp
es
sarb
fcoml
and
sti
testb
movsb
sbb
sbb
std
out
mov
pushf
pop
and
mov
and
std
shlb
sbb
and
into
fwait
inc
mov
xor
adc
dec
aam
or
and
fstpl
rcrl
mov
out
popa
ffree
test
aaa
arpl
arpl
push
stos
or
push
lret
je
mov
inc
dec
or
pop
lcall
les
test
rorb
xchg
add
fdivrl
aam
aam
inc
xchg
fisttpl
aam
xchg
dec
or
push
cmpsl
xchg
sub
sahf
add
adc
aad
std
xor
outsl
cmp
xorl
jo
xor
cmp
ficomps
popaw
daa
jg
inc
adc
and
loope
lods
pop
mov
negl
jo
or
add
add
add
dec
imul
adc
repnz
xor
mov
adc
popf
or
out
xchg
int
popa
push
lcall
cwtl
pop
push
jae
mov
push
mov
push
arpl
ret
daa
js
xchg
xchg
cmpsl
fsts
and
into
call
push
mov
pop
sbb
out
les
enter
sbb
or
add
inc
sub
aaa
fcompl
dec
xchg
idivl
aam
outsl
push
testb
cmpsb
xor
sub
jnp
stos
push
daa
popa
int3
insl
pushf
add
dec
xchg
mov
push
dec
pop
xchg
push
sahf
inc
test
push
pop
xchg
mov
mov
xchg
cli
lahf
xor
jmp
mov
mov
pop
cld
std
cmp
adc
out
sbb
gs
add
push
sbb
out
and
adc
pop
in
orb
push
push
mov
pop
xor
xchg
cltd
rcl
popa
xchg
stc
test
les
pop
stos
in
jae
sub
sbb
out
sbb
pushf
xor
movsl
out
movsb
in
pushf
shl
add
jae
pushf
cmpl
popf
fcmovne
mov
popf
or
fwait
or
aaa
lahf
mov
stos
popf
bound
jno
jbe
fimull
add
and
pushf
xchg
mov
pop
pop
or
push
or
fwait
clc
add
fwait
popf
mov
fwait
push
adc
mov
test
add
call
mov
enter
xchg
jbe
mov
cmp
cmpl
push
fcoms
push
fimull
jle
sub
xchg
pop
jle
jae
int3
pop
push
add
loopne
mov
push
stos
jno
mov
push
ss
pop
out
pop
push
inc
jle
fdivs
jl
dec
popf
popf
mov
xor
inc
or
xchg
inc
cli
adc
cmp
pop
dec
mov
cmpl
cmp
imul
or
xchg
sbb
sbb
rcrb
jns
leave
imul
add
outsb
add
pop
and
aam
push
int3
push
loopne
imul
push
xchg
sbb
push
inc
fdivrs
in
or
pop
fldl
imul
xor
mov
fsubl
sbb
dec
ljmp
popa
loopne
push
push
or
xor
lds
xchg
enter
in
add
pushf
jae
sub
stos
clc
sub
pop
call
and
cmpsb
aam
pop
xchg
push
push
dec
xchg
and
push
push
pop
inc
xchg
dec
adc
pop
notb
ljmp
dec
push
adc
ds
xchg
je
and
xor
pushf
insb
ficompl
sbb
mov
jp
lods
nop
inc
mov
mov
and
dec
add
mov
jecxz
imul
xchg
dec
mulb
or
xor
sub
mov
xor
or
and
hlt
adc
insb
sbb
and
daa
add
pop
and
adc
mov
push
lahf
fcoms
std
cmpsb
mov
jmp
mov
sub
or
cld
fmulp
imul
mov
ja
sbb
sbb
jl
fnsave
mov
je
jno
sbb
fisubl
insb
sbb
data16
mov
je
cmp
sbb
pusha
popa
sub
and
dec
rclw
je
fistpl
xchg
movsl
xor
jecxz
fistps
push
sub
xchg
int
jmp
jb
dec
xchg
push
sub
ret
push
in
and
pop
pop
xlat
or
mov
wbinvd
roll
push
in
xchg
adc
mov
aaa
jle
outsb
pusha
dec
pop
fsubp
inc
es
pop
and
xor
pop
xor
adc
xchg
cmp
call
cmp
fcmovbe
mov
push
out
mov
sub
in
push
mov
jmp
cmp
push
dec
and
call
cs
aaa
adc
xlat
mov
cmp
mov
dec
aaa
and
and
shr
sbb
cld
sbb
fldl
pop
lahf
or
pushf
push
ffree
adc
jno
fdiv
xchg
xlat
push
cmp
shrb
sub
popf
sub
arpl
cmc
add
movsb
and
fcomps
adc
xchg
in
outsb
fcomps
pop
push
sti
sbb
add
jae
xor
jb
mov
loop
sub
sub
push
jo
and
adc
movsb
rcrb
popf
aaa
cltd
xor
pusha
mov
and
pop
loop
and
xor
aaa
fistl
inc
aam
dec
outsl
and
inc
cmp
in
fldenv
or
addr16
fidivl
daa
aad
fs
lea
or
jecxz
xchg
xchg
cwtl
fstpl
aas
or
in
cltd
in
out
paddb
out
lahf
dec
sub
stos
push
cltd
loop
cmpsb
mov
xor
mov
imul
ljmp
xor
pushf
fiadds
and
mov
pop
cs
add
xchg
scas
ret
xchg
jb
mov
inc
popa
and
mov
popf
mov
shlb
dec
out
and
scas
push
and
push
or
shrb
cmc
test
pop
aam
cmp
and
xchg
pop
sbb
movsl
cmp
mov
imul
in
and
movsb
imul
sbb
aad
xchg
xor
inc
pop
repnz
and
frstor
adc
adc
mov
std
pop
lods
daa
push
and
cmp
inc
cmp
je
pop
pop
and
adc
adc
jl
sbb
and
push
push
in
aaa
cmp
add
aad
dec
lods
xor
cltd
sbb
mov
pushl
adc
push
popf
ret
and
pop
filds
adc
pop
das
clc
push
push
push
js
xor
idiv
pop
cs
xchg
sbb
and
xor
sbb
hlt
and
dec
xchg
mov
xor
je
cmc
mov
aaa
mov
je
outsl
rcrl
sub
aad
xor
mov
mov
pop
inc
insb
push
test
mov
cmpsb
inc
addr16
jp
imul
xor
push
dec
movsb
pop
cmp
repz
jne
sysexit
sbb
add
lahf
adc
pop
push
xlat
into
adc
jno
xor
pop
xchg
mov
mov
cmovs
and
push
or
add
sub
cwtl
mov
mov
sbb
cmp
incl
aaa
and
pop
test
pop
sahf
pop
push
inc
call
push
fs
xor
lcall
icebp
and
lret
out
sbb
outsb
xchg
fldln2
test
ret
data16
or
cwtl
jno
add
addr16
pusha
lret
or
cmpsb
mov
or
cmc
push
ss
mov
xlat
and
sbb
movsb
popf
jle
in
inc
daa
lret
cmp
push
cs
jbe
in
lock
pushf
call
ret
and
pop
das
jmp
sub
in
sbb
mov
sub
sub
ljmp
loop
mov
pop
fadds
dec
pcmpeqb
pop
stos
xchg
mov
pop
movsb
shlb
mov
gs
push
or
and
pop
xchg
popa
or
add
push
cmpsb
or
and
cmp
lock
in
jmp
lcall
pop
sbb
popf
mov
fdivrs
and
int3
pop
adc
jp
xchg
xchg
ss
aad
out
es
sub
adc
orl
aam
popa
mov
cmp
sub
xchg
leave
sbb
lret
aam
and
ljmp
in
jbe
jle
dec
cld
mov
adc
push
mov
and
pop
jle
cld
lahf
push
das
cli
add
mov
adc
popf
sbb
xchg
pop
xchg
xor
and
clc
loope
ss
sbb
jmp
and
push
gs
icebp
xchg
adc
loopne
xor
mulb
cmpsl
test
loopne
aaa
sti
in
or
mov
dec
sbb
adc
dec
aas
xchg
push
xchg
push
out
inc
bound
clc
scas
mov
cmp
and
or
das
jg
pop
mov
sbb
push
add
mov
ljmp
sub
and
daa
dec
sbb
and
fdivs
enter
fcompl
ret
stos
pop
inc
jo
inc
sbb
in
addr16
aam
xor
xor
inc
stc
jo
notb
mov
shll
mov
xor
cmp
popa
sub
jb
js
arpl
mov
popf
sub
insb
sbb
sbb
xchg
xchg
push
lcall
lahf
std
out
push
cld
ds
pop
xchg
push
sbb
mov
fcmovne
add
inc
xchg
or
out
dec
fldl
fimuls
in
out
sub
pop
add
cmp
int3
ljmp
icebp
lret
sbb
mov
aad
idivl
push
xchg
addr16
xchg
and
fiadds
push
lods
mov
bound
sub
dec
inc
dec
repz
bnd
insb
mov
cmp
mov
shld
push
popa
cmpsl
sbb
out
mov
pop
mov
add
rolb
bound
inc
dec
fisubs
add
out
cmp
pop
mov
cld
or
pop
add
push
cwtl
or
stc
arpl
cmp
arpl
in
sbb
fwait
aam
jae
std
push
pop
ds
and
xchg
push
jnp
adc
mov
cli
mul
sbb
out
dec
out
cmc
xchg
jge
out
cwtl
xchg
lock
mov
jl
mov
loopne
sub
adc
xlat
push
or
loop
cmpsb
les
sub
mov
jp
mov
outsl
ret
divl
cmp
cld
and
sbb
adc
arpl
dec
and
cmc
out
adc
add
add
mov
fdivrs
fnstsw
jg
cwtl
es
daa
sbb
jno
dec
ret
pop
inc
cmp
jl
ljmp
mov
in
jge
data16
pop
xchg
movsb
cmp
std
pop
or
rolb
xchg
jb
aad
daa
gs
add
gs
mov
push
adc
jl
inc
sub
push
push
and
fcomps
add
dec
mov
in
idivb
popf
jno
lret
enter
mov
push
add
jo
aam
std
add
and
xor
call
hlt
inc
fadds
std
add
cltd
sub
dec
mov
out
enter
int3
je
imul
in
rorb
and
pop
sbb
test
movsl
mov
cmp
lret
fcom
ljmp
jo
dec
mov
repz
mov
push
imul
jb
adcl
dec
mov
sbb
xorb
into
sbb
mov
jbe
adc
push
cmp
inc
adc
cmp
jge
and
push
enter
mov
sti
test
fsubr
cmp
fisttps
pusha
dec
arpl
add
push
push
repz
and
hlt
lods
push
movsl
mov
push
jl
push
push
clc
push
loopne
cmpsb
sbb
jg
imul
lea
add
je
outsl
fs
gs
imul
add
fs
jae
pusha
call
jae
pop
push
push
jb
sbb
and
jl
xlat
sub
adc
mov
inc
jmp
jmp
cli
ret
movsb
and
and
jb
cmp
xchg
xchg
cld
les
mov
cmp
std
shl
and
fistps
int
ret
insb
fistl
sar
dec
iret
xor
js
fs
jb
bt
clc
cmpb
pushf
mov
push
lea
jne
inc
rcr
sub
mov
bt
test
stc
add
stc
bt
cmp
movzwl
and
mov
test
pusha
test
add
cmc
jmp
das
xlat
pusha
movhps
jb
inc
mov
cmp
push
mov
cmpsl
add
inc
pop
jae
cmpl
mov
lods
in
shll
aas
test
iret
and
mov
subl
notb
mov
push
mov
push
jb
mov
sbb
add
mov
ret
mov
mov
add
and
loope
out
hlt
aas
mov
lods
in
and
popf
dec
push
push
dec
dec
outsb
push
stos
lods
ret
ds
ljmp
sar
mov
inc
xchg
dec
push
cld
xchg
js
nop
imul
push
xor
outsl
adc
ret
stos
xchg
movsb
cmpsl
add
cmpsb
xchg
jecxz
cmp
movsl
dec
in
cmp
test
scas
push
decb
jae
dec
repnz
sbb
mov
enter
out
lea
jae
call
lea
jne
btc
neg
mov
jmp
jmp
push
lock
std
std
lea
pushf
ret
jg
push
into
ret
scas
dec
sub
pushf
mov
pop
mov
xor
dec
outsl
int3
lods
jge
stc
in
sbb
into
and
aam
pop
int
mov
fcomps
popf
lahf
shll
mov
loopne
inc
inc
neg
inc
in
xchg
push
cmpsb
lods
push
xchg
js
aad
test
mov
inc
ss
pop
sbb
inc
bswap
pushf
add
movsbl
sar
lea
cmc
shr
adc
btc
movzbw
mov
sbb
clc
add
pushf
pop
mov
lea
pusha
mov
jmp
jmp
ljmp
cmp
shll
test
movsl
pop
in
outsb
xor
mov
dec
insb
inc
mov
cmp
test
mov
iret
mov
dec
in
das
xor
sahf
andl
adc
icebp
stos
lods
mov
or
js
rcl
loope
pop
inc
nop
mov
inc
loop
and
push
xor
cltd
lea
sub
dec
sbb
sbb
lock
cld
xor
fdivl
adc
lock
mov
fs
call
jmp
popf
xor
push
jb
nop
jl
adc
jne
mov
adc
testl
mov
cld
jo
push
push
sub
xor
mov
cmpsl
and
push
lahf
cmpsb
adc
add
xchg
xor
fadds
in
sbb
xchg
sbb
das
and
sbb
stos
leave
cmp
adc
jb
adc
ss
add
cmp
cmpl
lock
out
cmp
dec
mov
adc
jmp
jno
push
mov
xor
xchg
or
fsubrl
and
inc
loop
xchg
adcl
dec
mov
cmpsb
ret
out
out
jmp
mov
fstps
adc
adc
push
test
stos
and
stos
mov
xchg
push
inc
mov
adc
jb
icebp
sbb
mov
je
clc
xor
divl
push
and
xor
jmp
rcrl
cmp
xor
jnp
pop
pop
push
push
repnz
dec
in
dec
jmp
pop
scas
push
pop
mov
adc
adc
movsl
pushf
sub
lret
xchg
or
inc
hlt
sub
mov
and
int
mov
loop
cmpsb
sub
lods
outsl
lock
test
push
xchg
fs
jecxz
mov
decl
fildll
pop
hlt
cmp
sub
test
pushf
cmp
pushf
mov
lea
jae
pushf
pushf
pushl
lea
jmp
shl
mov
pushf
shrd
mov
cmc
bt
cmpb
push
pusha
lea
jne
cmp
bts
and
sub
setno
aam
cmp
neg
mov
dec
rol
add
shl
xor
mov
call
rol
mov
lea
pop
mov
call
cmp
jmp
xchg
lea
jge
push
pusha
dec
call
mov
call
pushf
call
mov
push
jb
pop
sbb
jge
aaa
negl
push
jb
xor
sarb
ljmp
and
adc
ret
jge
sub
xor
ret
aaa
call
daa
mov
je
lcall
sti
test
loop
lcall
mov
rcl
hlt
lods
and
and
push
adc
jb
xchg
inc
cltd
ja
imul
pop
shl
cld
popf
dec
jae
mov
pop
testb
mov
jno
dec
outsb
subb
inc
insb
pop
and
aas
rorl
adc
dec
push
dec
xor
mov
arpl
xchg
daa
adc
xchg
xchg
add
xchg
pop
jg
jnp
addl
unpckhps
jmp
and
stos
jl
lods
dec
pop
cmp
mov
or
sti
sbb
adc
mov
lods
xor
movsl
adc
pop
or
lods
test
mov
mov
sti
outsl
mov
aad
and
mov
cmp
xor
mov
push
pop
insl
je
sbb
pop
push
push
push
jb
enter
fdivrs
sahf
sub
push
jno
insl
jb
sub
into
aad
ret
sub
sbb
sti
push
adc
xchg
lea
outsb
lea
shr
es
sub
xchg
mov
cmp
inc
mov
dec
sbb
and
rcr
shll
into
or
jl
jno
ret
sub
push
aad
mov
test
inc
inc
ret
lahf
mov
in
mov
inc
and
sub
pusha
mov
sub
movw
mov
neg
pushf
pushf
call
dec
out
adc
mov
mov
sti
inc
popa
decb
jp
inc
dec
out
leave
mov
jo
dec
cbtw
outsb
out
xchg
cmp
je
cmp
xchg
mov
rorb
pop
aaa
push
xchg
mov
mov
mov
jns
aaa
cli
xchg
je
push
stc
cmp
sub
es
push
push
cs
out
xchg
jns
push
shl
xor
and
testb
fstpt
and
jmp
pusha
pushl
ret
xor
call
push
jb
jne
outsl
testl
jns
dec
sbb
ss
fdiv
out
int3
xchg
imul
fimull
cmpsl
in
ljmp
pop
ret
xor
and
in
clc
adc
aas
pop
xor
insb
dec
aad
push
pop
jae
sbb
mov
fwait
inc
inc
out
cmpsb
push
push
sub
pop
scas
push
jg
stos
icebp
jo
incl
int
dec
decb
dec
ret
and
fucomi
mov
jne
dec
push
dec
dec
dec
dec
inc
push
cs
insb
add
jb
jb
sbb
pusha
xchg
pop
cmpsb
jo
sub
into
dec
into
popf
mov
movsl
mov
sbb
push
sbb
lods
lahf
js
dec
xchg
mov
lds
dec
or
inc
in
jb
fbld
jmp
outsl
test
mov
hlt
pop
daa
mov
stos
fs
sbb
mov
popa
cmp
adc
pop
push
mov
cld
push
fisubl
fiaddl
popa
sahf
lock
imul
cwtl
jg
dec
test
cmc
test
clc
cmp
lahf
pop
lahf
lea
bswap
mov
pushf
pushl
movb
push
lea
ja
jmp
jle
in
push
jb
inc
repz
fstpt
lds
xchg
cmp
test
xor
out
sbb
scas
mov
sbb
stos
sar
fs
add
mov
into
addr16
dec
xchg
popa
xchg
or
imul
imul
jmp
push
add
or
sarl
stos
mov
fisttpll
adc
divb
adc
sub
pop
and
jl
es
lds
fists
sti
push
rcll
push
scas
add
push
pop
outsb
pop
push
adcl
push
lea
call
jg
pusha
push
pusha
mov
pusha
pushf
pushl
lea
jmp
and
adc
push
jb
arpl
adc
xchg
sub
movsb
push
xchg
pop
lods
jl
inc
xchg
add
sbb
jb
xor
movsl
and
xor
movsb
mov
mov
pop
adc
adc
lods
scas
mov
mov
jecxz
sub
mov
pop
jecxz
mov
jmp
in
pop
and
sarb
out
bt
mov
jmp
scas
push
jecxz
push
jb
xor
imul
lahf
mov
mov
cmpsb
jno
jno
dec
outsb
movsb
addb
cmpb
pop
or
mov
pop
add
sarb
loop
sbb
inc
cltd
pop
xchg
dec
lret
shl
jne
pushf
pop
sbb
outsl
out
mov
xor
lcall
adc
test
dec
pop
outsb
xchg
push
stos
ret
lahf
sub
mov
pop
loope
imul
pushf
adc
cwtl
jns
lea
out
jmp
sbb
xchg
push
jb
lcall
cs
fnstsw
dec
lret
fadds
xchg
insl
nop
sti
fistpll
push
mov
out
mov
scas
repz
fistpl
repz
pop
pushf
fwait
dec
shll
mov
nop
lret
fwait
fwait
pop
xchg
dec
push
out
add
sub
pop
gs
jbe
and
psubsb
movsb
es
in
cmp
dec
xchg
mov
push
mov
and
cmp
cmp
jl
or
or
push
mov
dec
jmp
in
dec
inc
sbb
jb
cmpsl
and
dec
ret
sub
cmp
ret
ja
lods
test
pop
loop
lods
xlat
fisubs
stos
mov
cltd
insl
or
out
mov
jle
mov
lcall
xlat
lods
div
lock
push
dec
mov
fs
adc
mov
je
jbe
fwait
daa
push
repnz
jo
loop
pop
loope
mov
into
dec
stos
xchg
pop
das
xlat
pop
mov
and
and
dec
popf
add
pop
in
xchg
into
adc
ss
push
stos
movw
pusha
push
lea
jmp
jmp
cmp
pusha
pushl
push
call
pushl
inc
mov
pushw
popfw
lea
jb
inc
jmp
lea
jne
setp
call
inc
pusha
inc
pushf
push
mov
jmp
into
insb
add
pop
mov
pop
mov
xchg
sub
mov
push
pop
jl
shll
mov
adc
mov
push
and
xchg
xchg
icebp
dec
lcall
cmc
enter
adc
lods
adc
cmpsb
adc
insb
pop
xor
cwtl
or
xchg
or
xchg
mov
pop
push
shlb
xor
fdivl
mov
pop
xchg
lods
or
cli
pushf
xchg
insl
popf
push
inc
xchg
into
sbb
ret
add
add
inc
xchg
dec
dec
popf
das
sbb
jb
dec
testl
mov
pushf
mov
inc
mov
ss
cmpsb
push
or
xor
dec
clc
jns
into
pop
dec
icebp
fstpl
mov
das
inc
sbb
and
ljmp
sub
jb
dec
inc
or
sub
lock
jmp
jae
and
stos
xor
mov
icebp
insb
push
sbb
cwtl
jo
insb
fsubrl
or
int3
mov
lods
jno
push
mov
pop
mov
std
ljmp
jp
in
mov
inc
int
dec
or
fadd
mov
mov
xor
arpl
cwtl
jbe
lods
and
cmp
mov
jo
insb
cmp
fwait
mov
add
mov
popf
cmp
or
xchg
mov
stc
push
fnsave
add
sub
scas
push
xor
push
jb
in
cld
cmp
sbb
je
mov
cli
add
call
push
loope
adc
and
xchg
push
sub
loopne
and
cli
push
xor
in
in
sub
lret
add
and
jnp
push
mov
rorb
mov
add
mov
adc
jns
sbb
jno
and
jl
outsl
fwait
enter
or
pushf
push
add
jmp
pusha
call
push
movl
lea
jb
pusha
cmc
stc
pusha
cmpb
call
add
cmp
pop
xchg
cs
adc
cmp
add
cwtl
iret
shrl
daa
and
push
test
add
outsl
pusha
jbe
adc
cmp
push
arpl
jbe
sub
test
addr16
lcall
ret
mov
sub
and
pop
lcall
out
ja
daa
stos
xchg
sarb
ror
adc
sbb
roll
mov
push
adc
pushl
movl
call
pushf
lea
je
shl
ror
mov
movzbw
movsbw
movsbw
clc
add
push
mov
bt
pusha
test
jmp
movl
pusha
pushf
movw
lea
jmp
xor
gs
push
jb
mov
and
ret
dec
test
bound
cld
in
test
je
jmp
sarb
xchg
sub
xchg
adc
sbb
mov
push
or
lahf
and
stos
xor
push
enter
sbb
shrb
lea
or
or
or
or
shlb
mov
inc
mov
rorl
inc
repz
sub
mov
pop
push
jb
jmp
imul
sub
mov
mov
popa
dec
clc
sub
pusha
bound
int3
test
arpl
jo
xor
ret
cmpsl
mov
add
repnz
inc
rorb
cmp
xchg
loope
xor
in
mov
dec
ja
sbb
test
and
xor
adc
push
mov
pop
cmc
jb
insb
push
insb
sub
aam
inc
pop
sbb
mov
push
jb
arpl
insl
out
mov
test
xchg
mov
hlt
or
dec
xchg
sbb
and
sbb
add
fwait
add
dec
ror
jno
jnp
and
loopne
push
push
cmpl
fisubs
mov
lock
cs
push
sbb
outsl
jae
pusha
lahf
or
lds
pop
adc
lea
or
and
scas
mov
ret
and
call
jmp
lods
sub
push
sub
insl
andl
pop
jmp
push
sti
lods
jmp
mov
jb
dec
cmp
pushf
sbb
js
shlb
xor
lret
fstl
inc
jl
sub
testb
cld
jge
add
sub
ljmp
outsl
or
and
call
push
push
lea
jae
cmc
sub
push
pushl
pushf
lea
call
jmp
maskmovq
testl
inc
inc
fwait
arpl
pop
inc
dec
jnp
loope
lds
mov
rcrl
push
subl
mov
xor
rcll
cltd
test
jle
sub
mov
pop
lods
pushf
imul
fstpt
test
stos
xrelease
jmp
xor
lret
xlat
fidivl
out
lods
fwait
lret
jle
fisttps
xchg
scas
push
mov
nop
push
jp
frstor
shll
roll
leave
mov
insl
jp
je
inc
jmp
cli
or
and
jb
outsl
lret
popa
inc
out
mov
mov
jnp
enter
lods
xchg
into
sti
pop
das
out
inc
sarl
cltd
inc
scas
push
mov
cltd
in
inc
cltd
mov
cmp
xor
test
outsl
test
jb
fs
inc
mov
fwait
insl
sub
testb
push
jmp
mov
cmp
sub
scas
sbb
int3
scas
inc
dec
push
add
add
fmull
repnz
xchg
adc
movsb
aad
test
xchg
and
jb
mov
nop
push
mov
fisttpll
dec
mov
lahf
in
ljmp
sbb
sahf
mov
cmp
push
arpl
aas
mov
lock
out
repnz
xorb
push
loop
stc
mov
repnz
out
lods
test
jbe
mov
inc
daa
xor
inc
ss
andl
xchg
inc
cli
inc
cld
fldl
push
mov
lock
clc
and
jb
js
data16
pusha
fs
imul
xchg
inc
out
notl
push
andl
xor
cmp
push
jo
cmp
sbb
jecxz
fwait
subb
mov
sahf
retw
dec
aad
in
xlat
daa
xor
sub
mov
fsts
xchg
inc
cmpsl
push
jle
aas
and
dec
push
jp
and
jb
xor
jae
sub
ss
aad
in
inc
mov
rcll
in
adc
cltd
addr16
imul
je
addr16
pop
call
push
test
mov
jb
subl
push
mov
mov
xor
mov
sahf
jmp
jp
sahf
sbb
dec
pushf
cmpsl
mov
shlb
sbb
mov
adc
into
push
rcll
imul
and
xchg
xchg
sub
pop
cmp
fdivr
orl
sbb
fisubrl
push
je
enter
popf
fldl
xor
mov
stc
ret
sub
sbb
sahf
sbb
cli
out
jbe
cmp
decl
rolb
pushf
movl
jmp
push
push
inc
push
xor
cs
insb
add
cmpl
add
jmp
mov
add
aad
add
add
add
and
add
add
add
jp
add
add
add
lea
add
add
add
add
pop
call
add
shlb
add
jnp
add
add
add
add
add
jmp
incl
rcrb
xor
test
decl
stos
push
pushfw
popw
sbb
pusha
mov
cmp
movw
mov
mov
not
jmp
pusha
movl
mov
mov
movl
pushl
push
pusha
lea
jmp
mov
mov
mov
jmp
add
add
movl
bt
mov
lea
jnp
bt
push
mov
cmp
call
dec
mov
clc
bt
cmp
bt
cmpb
pushf
lea
jne
sbb
bsr
sub
shl
shl
mov
rcl
sbb
pusha
dec
add
stc
shl
mov
pusha
jmp
stc
test
call
lea
je
cmc
jmp
xchg
sets
lods
call
sahf
insb
add
sbb
sub
dec
dec
jnp
xlat
jne
mov
into
xchg
mov
rolb
nop
ds
sbb
adc
cwtl
jnp
mov
pop
mov
mov
jmp
pop
pop
pop
jo
shlb
mulb
sti
sti
pusha
ret
sub
test
xchg
xchg
dec
mov
lock
mov
test
ret
jmp
shll
jno
sarl
sub
xchg
push
dec
mov
jge
aas
incl
rcl
fs
add
enter
imul
scas
add
adc
push
mov
sbb
int3
xor
sub
jmp
fistl
push
push
adc
daa
push
jb
push
fbstp
addl
roll
cmp
mov
rorl
xor
xchg
loop
mov
lods
xor
hlt
and
inc
inc
sub
add
xor
xchg
mov
inc
pop
std
or
add
movb
lods
and
adc
ljmp
lds
in
and
adc
or
lcall
aad
jecxz
test
js
xor
sub
es
loopne
cmpsb
fwait
sbb
out
or
jmp
lcall
dec
outsb
and
leave
outsb
adc
push
ds
cmp
xor
add
test
add
cmp
add
sahf
add
mov
call
xchg
push
mov
push
pop
mov
in
leave
fdivrs
xchg
ret
push
xchg
sub
test
mov
jp
adc
jns
mov
das
ficompl
movsb
and
mov
popa
stos
xor
ret
pop
ret
call
mov
sub
jb
loope
stos
orb
shrb
mov
loopne
sub
into
out
jns
pop
fbstp
jecxz
testl
xlat
ret
pop
pop
push
or
test
ret
insb
sub
fs
pusha
mov
push
scas
jo
pop
mov
mov
adc
fwait
and
adc
sub
psubw
and
shrb
shl
fs
jbe
mov
stc
xchg
inc
mov
sbb
mov
ret
insb
in
sbb
out
movsl
int
lds
cs
xchg
fnsave
adc
stc
loopne
popa
scas
inc
sbb
std
std
pop
pop
inc
xchg
adc
lahf
sahf
jge
lods
sub
in
push
decl
and
jl
ja
adc
fmull
pop
aad
not
gs
jno
pop
loope
stc
xchg
inc
sbb
test
sti
scas
das
inc
imul
cmpsl
repnz
stos
and
loop
cld
xlat
adc
adc
lcall
dec
sbb
fldl2e
add
aam
cltd
dec
cltd
les
add
fstps
mov
add
pop
or
push
xor
or
adc
jae
add
in
pop
mov
sub
push
scas
sub
jb
ss
and
jo
sbb
sub
push
mov
jb
loop
inc
sbb
inc
in
and
shrb
lcall
or
pushf
add
and
loope
js
in
add
imul
add
les
push
in
mov
add
mov
xor
mov
xchg
es
push
fcoml
push
jb
lods
sub
ret
imul
dec
jecxz
fsubrs
nop
gs
sub
add
jo
push
or
pusha
push
mov
mov
jne,pn
mov
int
add
jecxz
out
sbb
xchg
int
jnp
insb
jae
sbb
xchg
xlat
xor
mov
sarb
iret
shl
or
cltd
push
movsb
daa
or
out
lret
stc
ja
mov
mov
sub
int3
xor
push
jb
imul
jno
lods
sbb
push
jmp
int3
sbb
mov
mov
das
fst
cld
ss
pop
or
scas
sbb
push
dec
mov
aas
and
push
push
jl
fistpll
adc
repz
sbbb
mov
jmp
in
insb
hlt
lock
cmp
dec
test
scas
stc
add
cmp
xchg
xchg
adc
aam
fiaddl
outsb
adc
ljmp
push
rorb
aad
outsb
call
push
imul
pop
decb
bound
leave
and
xchg
and
and
shl
test
adc
mov
les
sbb
jecxz
mov
adc
int
pop
scas
das
orb
jne
clc
aas
jb
lret
aaa
lret
imul
subb
mov
call
loop
das
mov
lea
push
add
sbb
dec
outsl
xor
mov
sub
arpl
adc
push
and
cs
dec
daa
pusha
xor
push
loopne
cmp
imull
jg
mov
pop
push
dec
jnp
xchg
into
sub
pushf
jle
push
sbb
ds
arpl
in
nop
or
xor
movsb
cli
adc
ss
outsb
sub
jne
pop
xchg
push
jne
ret
test
and
std
gs
hlt
pop
inc
lcall
mov
cmp
sbb
or
outsl
sub
fistpll
sbb
fwait
pop
xor
cmpsl
dec
std
gs
addr16
dec
mov
pmulhuw
sbb
sub
sub
xor
clc
loope
xlat
jae
aaa
in
or
rcrb
test
push
out
enter
ja
pushfw
and
and
lahf
fstpt
or
clc
cmc
ficompl
stc
arpl
and
rcrb
add
or
cli
cli
and
or
mov
jb
dec
cmp
add
pop
shl
push
fisubl
pop
out
pushf
add
cmpsl
lods
pop
scas
inc
out
test
add
add
inc
and
pushf
pushf
pushf
lea
ja
call
push
push
pushl
pusha
lea
jae
mov
rcl
rol
mov
push
xadd
mov
bsr
pop
mov
bt
sub
pusha
repnz
pushf
lea
jmp
mov
sub
test
leave
and
sub
and
xchg
mov
ret
mov
adc
cmpsl
fidivs
lods
fnstcw
aad
bound
in
pop
inc
test
iret
xchg
mov
lcall
sub
loopne
pop
mov
jae
xor
pop
mov
inc
xor
js
ljmp
pop
hlt
imul
add
fimull
lret
sub
jb
fldt
lret
dec
mov
cmp
dec
or
pop
inc
jbe
fsubrs
aas
test
sbb
inc
daa
xchg
hlt
jmp
mov
ja
push
out
pop
add
fs
mov
shrb
loop
jns
stos
cmpsb
aas
cltd
sbb
cld
inc
adc
rcll
insb
and
push
mov
sub
dec
test
cld
popa
out
and
inc
sub
pop
loopne
call
push
lea
je
bt
test
cmp
add
cmc
cmp
pusha
call
jmp
cmp
jmp
mov
movb
pusha
lea
jb
pushf
pusha
pusha
mov
pushl
ret
lret
xor
push
jb
pop
loopne
xchg
sub
cmp
xor
adc
and
cmp
add
jbe
arpl
xor
rorb
xchg
xchg
fldcw
or
ljmp
lidtl
cmp
cmp
fsincos
inc
or
pop
sub
rol
movsl
ja
sbb
loopne
cli
cmp
sub
cmp
add
mov
xlat
pop
xchg
push
push
outsb
push
ret
ljmp
movl
call
pushf
not
clc
stc
ror
pushf
not
jmp
mov
lea
push
pushf
lea
js
call
pushf
movb
adc
jmp
call
test
push
jb
lods
sub
jle
pop
scas
dec
into
sub
push
iret
mov
sub
adc
sbb
cli
mov
push
enter
movsb
test
aas
adc
fcomp
das
sub
push
sub
fldcw
leave
mov
pop
outsl
xchg
mov
pop
stc
scas
cmpsb
mov
iret
or
ss
push
mov
and
pop
mov
rorl
and
sub
call
cmpsb
test
outsl
int3
dec
mov
stos
or
mov
nop
inc
insl
iret
pop
jno
fsts
lea
jb
pushf
stc
clc
cmp
call
jg
push
cs
jb
fiaddl
mov
nop
and
pop
cli
ret
data16
mov
out
jmp
mov
in
rcr
pop
sbb
inc
addr16
xor
sub
xor
ss
mov
cmc
dec
push
ret
inc
fistps
clc
sahf
mov
push
ret
ds
cmp
icebp
out
mov
and
cli
mov
scas
imul
pop
dec
push
inc
rcrb
loopne
rcrb
sub
mov
scas
and
mov
jnp
sbb
pop
bound
mull
xor
adc
bts
mov
jmp
pusha
pusha
lea
jbe
pusha
call
push
mov
lea
call
pushf
movb
pushf
call
or
gs
push
jb
jno
inc
cmc
or
dec
decl
inc
sti
jg
pushf
mov
mov
jmp
enter
add
jnp
out
xchg
mov
mov
enter
bound
mov
stc
dec
dec
push
mov
dec
push
add
aam
in
lods
inc
mov
movsb
mov
jge
add
cmp
and
fimuls
jecxz
add
and
es
and
and
insb
push
insb
jle
jge
stc
fdiv
js
stc
test
mov
jmp
jmp
lea
ja
bt
bt
imul
stc
pushf
add
mov
movw
lea
jmp
es
jb
test
adc
fstl
outsl
repz
adc
push
test
inc
rolb
mov
push
dec
push
push
fcomi
rcrl
out
pushf
xor
lock
adc
jmp
pop
outsb
mov
popfw
mov
push
dec
cmp
scas
cmpsl
mov
jl
shll
push
enter
daa
push
pop
insl
mov
pop
lcall
add
addr16
not
inc
lea
not
inc
xor
not
add
xchg
sbb
mov
clc
add
setae
ror
mov
cmc
push
stc
not
add
rol
mov
pushf
sub
pusha
call
cli
and
xor
jb
cmp
pop
out
or
aas
sub
push
inc
and
xchg
add
call
xor
xor
mov
pop
clc
dec
outsb
ljmp
daa
addr16
add
push
in
arpl
das
add
mov
inc
xchg
fnstsw
xor
push
mov
jns
fs
jb
clc
call
test
mov
pushf
pushl
call
jb
mov
push
jb
lds
cmpsl
add
daa
fnstsw
ror
add
pop
nop
je
lahf
fcmove
imul
ret
daa
loope
fnsave
cltd
fidivs
mov
je
in
movaps
adc
bound
leave
mov
mov
fs
imul
add
ss
incl
xchg
fistps
ss
jno
fwait
mov
jns
int3
jb
xor
jb
dec
cmpsl
or
sub
clc
inc
jbe
xor
insl
mov
lcall
mov
and
and
jne
aas
mov
or
lretw
sbb
jle
cmp
inc
xchg
int
test
lock
or
xorb
jb
in
decb
outsb
test
push
call
pop
jnp
repz
daa
cmpsl
hlt
lds
lds
add
inc
movsb
mov
xchg
jb
cmpsb
cmpsb
jb
test
and
push
inc
push
dec
mov
jne
xlat
fsub
sarl
leave
pop
js
and
xor
jl
push
sub
in
stos
inc
mov
inc
xchg
movsl
cmp
mov
bound
nop
jae
pop
shrb
cwtl
mov
insb
in
push
lea
call
push
pusha
pushf
lea
jae
stc
stc
clc
sub
pushf
jmp
pushf
jmp
lahf
pop
call
push
mov
not
call
pusha
setae
pushf
lods
stc
jmp
shl
pushf
push
not
push
lods
cmp
bt
cmc
push
not
movb
bt
clc
sub
cmc
pushf
neg
jmp
xchg
popf
xor
jb
out
xchg
sbb
insl
fstps
into
sub
fsubrs
int3
mov
adc
test
mov
cmp
adc
cmp
push
mov
js
jae
inc
lock
push
xchg
add
sub
adc
mov
push
pop
pop
jl
rcrl
std
enter
add
mov
inc
rolb
arpl
sbb
xor
call
xchg
ficompl
push
stc
push
jmp
movl
pushl
lea
jmp
loope
sbb
aam
fsubrl
sub
push
mov
mov
fldt
sbb
cs
dec
nop
push
and
push
test
xchg
push
xor
jecxz
push
lock
call
das
ret
fldt
mov
jbe
in
lahf
stos
enter
and
sbb
xchg
aam
lcall
jecxz
repz
dec
mov
sahf
jne
pop
mov
in
insb
lahf
stos
cmpsl
dec
scas
stos
sub
lods
dec
in
dec
lods
and
into
and
push
into
lods
lods
and
push
scas
and
int3
and
push
mov
lods
and
in
and
sub
in
dec
int
mov
lods
dec
insb
outsb
dec
outsb
dec
and
mov
xchg
bsf
mov
pusha
ror
mov
clc
test
mov
call
hlt
cmp
xor
mov
mov
popa
xchg
jns
sbb
jecxz
xchg
mov
push
and
jnp
push
xor
mov
test
add
cmc
out
pop
jb
sahf
lahf
cmp
js
and
sar
jp
sub
clc
bound
xchg
jl
add
scas
out
leave
cmc
unpckhps
fsubrs
cmp
loop
xchg
jae
jge
repnz
cmc
jle
push
jb
test
loopne
test
inc
ljmp
cli
cmp
fld
inc
pop
ds
outsl
xchg
adc
incb
dec
aad
cmp
ds
loope
pop
dec
push
loopne
lahf
ds
xchg
mov
movl
cmp
xchg
into
cmp
push
shrl
insb
out
fcoml
into
ds
push
enter
nop
inc
pop
adc
and
inc
lock
movsl
sub
and
sub
jo
orl
sbb
jno
mov
daa
jne
fs
je
call
fcompl
lods
ss
jb
or
pop
mov
outsb
shr
push
in
xor
xchg
outsl
mov
push
pop
das
jmp
mov
pop
mov
dec
mov
mov
dec
jne
rorl
fcmovnb
dec
push
jbe
mov
jno
test
scas
sub
jp
jg
leave
pop
adcl
movb
in
dec
xor
push
and
cld
mov
outsl
dec
ret
je
push
jb
mov
xchg
adc
xor
mov
or
xor
sbb
cmpsl
adc
pop
je
ss
ret
dec
pop
or
insb
movsl
addb
scas
inc
data16
add
adc
sub
cmc
rcll
adc
inc
adc
or
ret
nop
jl
cli
xor
push
lret
les
inc
mov
les
push
adc
xchg
ret
aad
insb
neg
ficoms
shlb
xor
cmpsl
pop
cs
mov
xchg
sub
ljmp
ds
xchg
mov
inc
sub
dec
scas
cltd
pop
pop
lcall
in
test
negb
cli
add
jmp
xor
insb
notl
mov
scas
repnz
and
rolb
clc
mov
not
clc
mov
cmc
jmp
jmp
outsb
in
popf
aaa
push
jb
jmp
std
dec
xchg
sub
sbb
mov
lods
scas
mov
jg
mov
and
ret
jmp
js
lahf
shlb
fwait
les
push
gs
jnp
test
xor
or
sub
out
cmpsw
adc
icebp
adc
or
shl
inc
call
lcall
mov
pushl
pop
xchg
mov
mov
cmp
pop
jl
adc
mov
ret
sub
lea
pop
jmp
xor
fwait
cmp
jb
inc
jmp
aad
mov
popa
repnz
jp
xor
jp
lods
add
rcll
adc
shlb
mov
vprotd
dec
or
or
out
shl
addr16
mov
dec
sbb
push
or
and
test
fildl
and
cmc
push
push
add
dec
mov
add
jnp
imul
jb
dec
loope
pop
jge
and
mov
aaa
jmp
stc
inc
and
push
pop
xor
jo
dec
xchg
pop
inc
pop
aas
sbb
xor
push
mov
jns
add
dec
ret
sbb
sub
popa
loop
ds
aam
cmp
jb
ja
sbb
adc
fwait
mov
xchg
lock
mov
mov
pop
fmulp
ficomps
addr16
xchg
dec
adc
pop
sbb
loopne
xor
cmp
fisubs
jns
imul
hlt
or
mov
pmaddwd
cmp
mov
xor
imul
or
pop
sub
int3
sti
loopew
add
outsl
fs
outsl
imul
lea
jbe
xadd
mov
xchg
add
and
lea
pusha
adc
mov
lea
movzbw
movzbl
add
and
movl
movzbl
shld
shrd
mov
lea
cmp
cmp
push
jmp
cmc
movaps
push
jb
jle
push
mov
scas
push
mov
cmpsb
sub
inc
inc
mov
in
mov
ljmp
sub
enter
mov
popf
mov
in
pop
sub
lods
sub
sub
rolb
sti
leave
push
shrb
inc
cmp
jbe
into
jp
xor
es
mov
or
mov
cmp
jb
movsl
pop
xchg
inc
mov
push
mov
out
and
into
loope
pop
ror
and
cmp
jnp
pusha
mov
lahf
push
dec
imul
in
push
sub
sar
scas
ds
stos
daa
lret
repnz
bound
cmp
lret
xor
mov
sbb
das
jb
jmp
adc
dec
xor
push
jb
jge
aas
xchg
sbb
in
pop
movsl
sbb
lea
and
add
insl
aas
in
dec
push
xor
pop
inc
out
mov
clc
or
mov
xchg
lret
sti
sub
mov
fcoml
xor
das
xor
je
push
adc
mov
ss
sbb
fnstsw
add
rcrb
cmp
jmp
call
add
mov
mov
hlt
mov
cmp
sbb
imul
push
pop
jle
out
jb
mov
mov
loope
jmp
inc
inc
jecxz
dec
inc
xchg
scas
fcoml
cmp
xor
loopne
jns
xchg
out
ss
cmp
mov
lret
push
pop
push
repz
jmp
pop
lcall
mov
push
lea
mov
and
pop
inc
and
stos
mov
rol
hlt
push
mov
adc
xchg
nop
data16
push
pusha
outsl
dec
leave
push
inc
js
mov
jmp
adc
or
sub
stos
mov
jae
push
jg
les
dec
jnp
out
aaa
aad
stc
mov
adc
sub
scas
mov
arpl
pop
pop
imul
jae
sub
jmp
and
cmp
in
or
dec
dec
and
xlat
xor
leave
sbb
cmp
sub
cltd
stos
jne
pop
or
jge
cmpsl
mov
xchg
mov
xor
jle
repnz
dec
test
adc
or
xchg
or
fisubl
das
scas
lcall
aaa
das
rorl
pop
xchg
mov
cwtl
adc
adc
les
jl
leave
push
adc
sbb
out
jg
ja
mov
adc
insb
ret
repnz
jle
xchg
in
cwtl
fwait
mov
lds
xor
repz
pusha
call
lds
jmp
xchg
mov
mov
movsl
adc
xchg
dec
rorb
inc
inc
ret
mov
out
nop
ss
jge
loope
pusha
out
rcrb
loop
and
adc
jo
sahf
and
iret
adc
mov
aaa
imul
shl
push
and
in
inc
inc
xchg
xchg
jmp
nop
cmc
or
cwtl
sbb
push
xchg
cs
loopne
cwtl
adc
dec
repz
inc
jae
test
push
mov
adc
sbb
aam
lahf
mov
mov
xchg
dec
inc
cltd
dec
push
repnz
leave
jl
stos
call
mov
sbb
gs
xor
push
clc
mov
fcomip
fstpt
out
jecxz
cmpsb
xlat
loopne
or
sbb
filds
iret
imulb
inc
pop
jmp
scas
insb
adc
mov
push
push
test
push
or
push
call
sub
adc
sbb
push
std
mov
adc
inc
fidivl
push
cmp
mov
mov
and
jno
mov
fucomi
jae
mov
nop
test
es
dec
in
fstl
adc
imul
pushf
mov
mov
add
xor
xchg
lock
aaa
test
ret
loop
movzwl
ljmp
jge
lahf
cmp
xchg
lea
les
jnp
jecxz
cs
cmp
jge
pushf
andl
pusha
addr16
ljmp
test
shr
cld
push
cmp
aas
adc
out
dec
movsl
cmpsl
sbb
shll
ljmp
movb
pop
adc
hlt
stc
fcomps
and
xor
test
es
fprem
mov
pop
jle
mov
adc
ds
and
inc
loope
shl
sbb
inc
rol
in
mov
cmp
es
test
lods
addl
dec
pop
mov
aaa
lods
js
push
rcrl
adc
xor
cmpsb
xchg
jg
xchg
stc
dec
and
mov
ljmp
mov
and
push
clc
aaa
inc
mov
dec
or
loop
pop
test
sbb
jecxz
xor
mov
addl
pop
xor
dec
iret
sub
aas
addl
fldt
cs
mov
repnz
fcmovnu
shll
pop
fdivp
faddl
cli
mulb
pop
mov
jno
pop
call
dec
stos
pop
inc
pop
inc
mov
xchg
jmp
push
lahf
jo
push
push
inc
mov
xchg
or
cmp
cmpb
mov
addb
adc
popa
pop
xor
in
jp
shrl
leave
loopne
xlat
out
mov
lret
jecxz
sbb
mov
call
mov
mov
push
jl
stc
mov
loopne
fsubrp
jno
and
sub
add
push
dec
push
xor
mov
cmp
xchg
lock
lret
jl
mov
push
or
cmovb
loopne
outsl
aam
lods
xchg
push
pop
bound
dec
sub
jle
enter
cmpsl
stos
jo
addr16
xchg
mov
cmp
pop
jl
mov
adc
jle
xchg
lahf
cs
test
sbb
loope
sti
lahf
adcb
push
mov
pop
sub
jle
repnz
ss
push
mov
mov
imul
inc
mov
cmc
adc
xchg
mov
mov
jo
mov
sbb
js
in
adc
shll
aaa
sbb
aam
pop
xor
js,pn
lock
inc
jne
inc
test
call
jno
xchg
jmp
in
inc
std
mov
in
sbb
jle
mov
jno
rcr
pop
mov
clc
push
jae
loop
loope
mov
pop
sub
lea
sub
popf
cmp
mov
and
inc
pop
fwait
jle
cmp
std
aam
std
mov
lcall
in
or
mov
xchg
cmp
sti
ret
sbb
dec
fstps
sub
or
rcrb
fnstenv
sahf
dec
mov
fcmovb
jmp
outsb
inc
sub
lea
push
mov
pop
mov
insl
sub
push
or
lods
adc
jbe
mov
ds
hlt
lds
andl
inc
lods
pop
cmp
out
and
mov
xchg
mov
push
prefetch
pop
pushl
in
mov
sub
mov
aaa
call
xchg
jg
ljmp
mov
or
and
xchg
lahf
scas
dec
push
or
mov
repnz
imul
addr16
xchg
or
jmp
inc
in
stos
xchg
loope
jbe
dec
ljmp
clc
icebp
mov
repz
cmp
sbb
jg
pop
pop
mov
mov
adcb
out
dec
addr16
iret
es
and
jns
push
inc
mov
rorl
outsb
push
and
repnz
dec
jmp
jg
in
jp
scas
int
rcl
notl
fucom
pop
js
push
push
mov
sbb
test
jae
xchg
pushf
xchg
and
mov
cmpsl
add
xor
xchg
repz
xchg
jnp
mov
aas
or
sbb
nop
jle
and
loopne
pop
lds
pusha
fwait
sub
lods
push
sbb
icebp
sbb
ret
imul
xor
push
out
push
in
int
out
mov
test
stos
movsl
mov
push
ror
xor
mov
cmpsb
dec
mov
add
ja
test
in
push
dec
pop
pop
xchg
xchg
das
sbb
mov
sar
mov
inc
mov
xor
in
adc
xor
xchg
cmpsl
arpl
mov
pop
mov
cmp
out
pop
cltd
loop
mov
dec
lods
orb
rolb
jge
inc
jb
insl
sbb
adc
and
mov
add
sbb
dec
pop
ror
push
jnp
cli
xchg
jle
call
insl
mov
js
mov
push
pop
adc
adc
fs
loop
ficomps
jg
push
cmpsl
pop
lds
sbbl
push
mov
mov
inc
sbb
xchg
outsl
mov
or
pop
xor
jnp
push
cmp
pushl
cmpb
jmp
push
add
stc
bt
cmp
clc
test
push
pushl
lea
jne
jmp
mov
pushl
jmp
stos
pop
fildl
jb
and
xchg
aaa
pop
pushf
test
jae
mov
in
fcomps
loop
stos
sbb
cmp
subb
imul
lds
nop
loop
push
cmpsb
pop
mov
rcll
mulb
push
pusha
jno
xor
xchg
mov
xlat
into
push
dec
mov
rcrl
fdivrl
fstl
frstor
mov
stos
fisubrl
imul
mov
pop
arpl
sub
push
jb
imul
mov
inc
ja
xor
jp
clc
mov
adc
shll
imul
loop
bnd
xchg
das
jo
mov
ja
xor
push
or
pop
push
xchg
arpl
and
ja
popf
leave
jmp
dec
cmp
or
and
ss
mov
dec
push
fs
pandn
test
mov
orl
add
mov
push
iret
mov
int3
repnz
xchg
mov
lods
inc
jp
jg
dec
jmp
dec
jo
pop
test
dec
xchg
addr16
loopne
mov
mov
or
cmp
rcr
push
cmc
or
jno
jae
adc
jo
fs
xor
nop
mov
push
orl
mov
and
jge
out
and
mov
std
lds
pop
out
or
adc
pushf
sbb
mov
add
aad
add
add
add
and
add
add
add
jp
add
add
add
lea
add
add
add
add
pop
call
add
shlb
add
jnp
add
add
add
lea
call
pushf
call
pushf
lea
jae
inc
jmp
dec
inc
push
dec
inc
dec
xor
cs
insb
add
bts
mov
pushf
and
cmp
add
pushf
pushl
push
movl
lea
jmp
pushf
movw
push
jmp
shll
dec
push
jb
inc
push
pop
cmpsl
mov
xor
bound
sub
fnsave
lods
sbb
cmp
outsb
adcb
scas
fnsave
lcall
imul
lods
add
jge
mov
and
int
and
add
push
push
xlat
in
push
jb
cmp
cmp
call
xchg
add
push
inc
mov
sub
mov
pop
mov
inc
jle
mov
scas
mov
rorl
out
jmp
inc
mov
out
fs
push
pop
in
jecxz
cmp
std
call
stos
sbb
sub
sub
lock
fimull
fistps
movsl
push
shll
xchg
and
or
mov
lea
jae
call
sarl
jbe
inc
testb
stos
dec
loopne
xchg
pop
and
lds
jo
cmc
pop
lock
out
sbb
inc
adc
dec
xor
adc
sti
out
mov
pushf
add
out
repnz
push
mov
inc
inc
add
mov
push
adc
adc
loope
adc
andl
popf
sub
sbb
outsb
leave
mov
xor
push
sbb
fwait
pushf
dec
push
jb
inc
les
push
shlb
inc
mov
add
cltd
out
cmp
xchg
xor
inc
ficomps
outsl
jno
adc
out
push
dec
stc
mov
sbbb
pop
fsubrl
movnti
repnz
sbb
sub
cmp
cmp
sbb
clc
xor
jae
jnp
dec
test
js
push
jno
sti
clc
xlat
testb
jno
dec
push
jb
stos
data16
jp
insb
aam
scas
sbb
negb
lods
mov
inc
dec
fwait
rcl
pop
fsubl
movsl
pop
mov
scas
push
or
addb
jg
jb
aaa
lcall
jns
xchg
pop
mov
inc
ss
xchg
mov
jnp
test
pusha
je
in
push
fidivrs
cmpsb
inc
lock
loop
mov
mov
cmp
and
insb
and
push
pushl
ret
mov
lea
jmp
push
cmpsb
iret
dec
push
jb
inc
mov
dec
stc
jno
outsl
xchg
mov
mov
sbb
pushf
aas
sarl
xchg
popf
and
call
xor
ja
mov
sub
mov
ja
jmp
loope
fs
mov
inc
jnp
std
jp
inc
push
fsubl
into
sbbl
sbb
test
sub
lcall
es
shl
mov
ret
sbb
cmpxchg
or
dec
mov
mov
out
and
arpl
xchg
fildll
inc
or
jb
sub
movsl
xor
push
xchg
sbb
jbe
sub
int
mov
sbb
inc
sti
aaa
mov
adc
test
popf
sub
fbstp
push
ds
lock
xchg
pop
in
aam
xchg
nop
popf
xchg
push
testl
jge
cltd
push
movsb
fistps
inc
movsb
and
dec
loope
out
mov
loope
jle
stos
pusha
lea
jmp
andb
dec
push
jb
mov
test
ja
imul
filds
mov
fcomps
negl
sbb
in
ljmp
mov
sahf
adc
sub
out
jle
mov
in
inc
fisubl
or
pop
jno
addl
or
stc
fimull
xor
push
inc
jmp
subl
inc
fidivl
lcall
bound
jg
jmp
dec
push
jb
testl
scas
pop
mov
loop
addl
pop
lahf
xor
xor
ror
daa
rorl
dec
pop
inc
clc
out
aaa
jg
push
xor
ja
mov
daa
cmp
add
or
jg
insb
inc
mov
mov
clc
fldenv
push
mov
xchg
cmp
int3
or
leave
cmpsb
and
insb
push
stc
repnz
movb
pushf
lea
jne
push
lea
movzbl
movb
not
mov
sets
movsbw
js
cwtl
lea
call
mov
pushf
push
pusha
jmp
bsf
bt
shr
add
rol
ror
adc
shr
shld
bsr
cmc
mov
neg
add
jmp
add
pop
and
dec
enter
mov
lock
in
insl
orl
outsl
push
jns
sbb
inc
insl
nop
sub
jno
inc
call
daa
jb
pop
shr
not
js
stos
xorb
sub
mov
nop
hlt
cmc
sbb
xor
xchg
mov
sbb
pop
mov
push
sbb
jbe
js
push
mov
test
gs
cs
movb
mov
setns
call
lea
ja
call
lea
ja
push
call
jmp
movb
rep
pushl
lea
bswap
mov
mov
pushf
push
pushf
lea
jmp
pusha
jmp
or
or
and
sbb
adc
and
stc
sbb
jp
cli
adc
and
or
adc
js
and
popf
add
jp
pop
call
sbb
fimull
enter
fcmovnbe
sub
mov
lahf
aam
mov
inc
dec
pop
cld
push
inc
and
cmove
jne
sub
and
mov
pop
sbb
jge
or
in
or
pushf
xor
mov
and
aam
int3
sub
sbb
xchg
and
mov
or
or
xor
jo
xlat
or
adc
push
fwait
ja
cltd
mov
cld
in
jno
sahf
adc
sbb
mov
cmp
sbb
xor
and
xor
sbb
in
mov
mov
sbb
inc
and
mov
push
loop
daa
sub
pop
cmp
pop
sbb
psllq
and
std
aaa
mov
mov
mov
xlat
cmp
outsl
dec
fwait
cmp
test
push
shll
add
jl
or
sbb
popf
pusha
loop
cld
and
sub
dec
pushf
sub
jno
sbb
pushl
pop
aad
dec
out
pop
in
out
lahf
in
mov
push
sub
imul
dec
shll
jbe
add
xchg
fstps
dec
mov
or
out
lahf
cmp
fwait
xchg
or
and
xor
or
mov
inc
cmp
gs
mov
mov
push
pop
lret
jp
rorl
popf
imul
cmp
enter
add
std
mov
pop
cmp
jb
sbb
adc
push
clc
pop
fs
dec
lahf
nop
mov
xor
ficompl
xchg
pop
mov
jl
insl
mov
sbbl
mov
push
and
xchg
out
mov
lock
xchg
adc
ss
int
movsl
pop
sbb
or
dec
jmp
fwait
adc
xor
popf
ljmp
adc
and
in
addr16
clc
movsl
arpl
jecxz
push
xchg
mov
sbb
pusha
std
test
mov
dec
adc
dec
pop
or
push
cmc
ss
sub
in
iret
aam
aam
sub
pop
and
pop
cmp
push
and
or
xor
jl
or
test
pop
pop
jne
and
std
jge
adc
js
cld
dec
cmp
and
mov
and
pop
sub
pop
sbb
and
outsl
push
cmp
ja
cmp
std
sub
pop
jl
addr16
jmp
sbb
aam
sbb
lock
adc
je
fmull
sbb
lcall
pusha
fcomps
or
mov
inc
scas
jg
scas
rclb
fsubrs
lods
xor
ljmp
into
cmpsb
push
test
add
fnstenv
pushf
nop
mov
pop
out
and
mov
sbb
enter
aad
or
lods
dec
pop
or
daa
cwtl
pop
mov
hlt
and
lret
sbb
ljmp
jnp,pt
jbe
insb
cld
push
je
fisubl
mov
xlat
fstp
ss
and
add
or
bound
dec
mov
fsubl
popf
testb
push
fs
add
cmp
jecxz
sbb
and
repz
daa
cmp
or
jmp
add
fsubrl
fsubrs
lcall
mov
or
sbb
mov
sbb
xor
sysenter
jae
jge
in
cmp
adcl
roll
test
xor
xchg
jmp
jl
sub
out
int
imul
cmc
pop
dec
std
adc
push
jae
inc
push
clc
xor
mov
and
mov
sub
sahf
je
icebp
jle
or
gs
sub
push
mov
pushf
das
cld
adc
sti
pop
pop
je,pn
ficomps
popf
scas
sub
rcl
xchg
shr
cmpsb
sbb
out
es
push
pop
gs
repz
pushf
call
lahf
es
sbb
or
pop
cmp
mov
fbld
out
repnz
pop
xchg
fcoms
xor
mov
ret
sub
test
adc
mov
adc
sbb
xor
in
imul
push
push
dec
aam
push
out
push
push
cld
dec
jle
fdivrs
imul
add
sbb
gs
adc
cmp
adc
unpckhps
inc
mov
cltd
pop
icebp
or
sbb
mov
xchg
roll
jmp
lods
out
dec
adc
loope
xchg
andb
adc
xor
or
add
popf
sti
dec
add
je
sbb
mov
enterw
push
aam
out
dec
pop
xlat
jno
rorl
pop
aam
aam
in
or
and
test
adc
leave
daa
push
pop
aas
sbb
push
or
or
aad
fisubrl
or
std
xchg
je
clc
and
movsl
xchg
std
sti
and
inc
repz
mov
dec
loope
insb
mov
std
or
adc
pop
gs
xchg
cmpxchg
hlt
cld
insb
imul
and
je
and
inc
je
mov
and
imul
cmp
aaa
je
push
repz
cmp
in
imul
sub
je
std
jp
cmp
adc
filds
cmp
inc
jl
push
lods
xor
dec
and
jl
push
cmpsl
nop
ret
mov
xorl
push
daa
pop
mov
test
lods
dec
scas
pop
adc
popf
and
push
lds
xchg
jno
jmp
mov
pop
jl
mov
in
shl
mov
push
sbb
les
lock
aaa
cs
clc
dec
fs
test
adc
sbb
ss
adc
mov
fisubrs
daa
adcl
push
xchg
xchg
and
shlb
or
dec
mov
lods
push
jmp
cmpsl
xchg
cmp
mov
xchg
out
pop
nop
cmpsb
test
adc
cmp
aam
mov
dec
xor
fdivl
in
and
mov
iret
leave
xchg
out
cmp
sub
popf
imul
aad
mov
hlt
mov
xor
sub
cltd
test
or
pop
xchg
mov
je
movsl
fldt
bound
xchg
xor
cld
clc
sbb
outsb
fs
fcoml
insb
add
loop
lods
lret
dec
xor
xor
bound
scas
popa
dec
hlt
std
scas
popf
mov
in
xor
push
push
insb
dec
sub
jne
pop
lods
sbb
sub
pop
jns
and
xor
cmp
pop
shlb
inc
push
adc
repz
pop
jecxz
and
mov
pusha
mov
insb
mov
call
cmp
or
push
xchg
cmp
sub
add
add
cmpsl
out
popf
inc
sbb
fbstp
movb
lcall
mov
mov
stos
popf
dec
neg
add
cmp
movsb
and
inc
loop
je
ret
push
sahf
mov
movl
test
mov
in
mov
inc
and
hlt
fisttpl
pop
cwtl
jo
clc
xchg
push
push
jo
and
or
aad
std
cmp
jne
push
and
add
or
sub
sbb
sbb
je
rcr
out
clc
sbb
sahf
inc
mov
jp
xor
jnp
mov
xchg
out
icebp
popf
popa
adc
cltd
sub
sbb
and
lock
push
aam
cmc
daa
or
push
inc
sub
out
cmp
jl
cld
loope
sub
leave
sahf
cmpsb
jbe
imul
push
pop
sbb
out
mov
xchg
or
pop
mov
sub
scas
sbb
std
cmp
push
int
dec
jecxz
cld
outsb
xorb
out
popa
fmull
push
xchg
pop
push
movsl
loop
je
sbb
and
inc
or
xchg
xorl
push
dec
sub
and
popf
int3
loope
inc
jl
cmp
imul
mov
sbb
mov
test
jmp
sub
add
xor
inc
mov
xlat
aad
fs
or
or
fs
fbld
inc
pop
les
jae
and
cld
imul
pop
xorb
lret
movsb
mov
sbb
add
jo
and
or
pop
std
pop
cltd
outsl
aam
sbb
out
pop
dec
sub
cld
lcall
and
loopne
cmp
rcrb
or
mov
and
and
mov
push
inc
dec
imul
aam
jl
add
jns
int3
mov
cld
test
sub
cli
xchg
sub
sub
jbe
pushf
jle
pop
je
hlt
inc
stos
sub
sbb
sbb
xor
mov
lods
mov
xlat
lods
or
mov
inc
push
xchg
in
mov
add
jp
es
sbb
xor
and
adc
dec
shll
and
lcall
add
loop
push
fwait
sar
fidivrs
cld
xor
sub
push
xor
xor
sub
data16
addr16
and
xor
jo
lret
push
das
dec
dec
nop
pop
das
icebp
popa
mov
jge
in
mov
mov
int3
sahf
cs
lods
loop
push
push
mov
mov
sbb
lahf
shrl
lock
or
sarb
bound
and
jp
lock
push
lods
add
std
cmp
jl
sub
jl
sahf
ret
enter
mov
clc
cld
cmc
orl
and
xor
imul
pusha
movsl
lds
data16
je
pushf
and
in
in
sub
push
push
pop
mov
mov
cmp
sbb
pop
mov
in
dec
aaa
in
fwait
fs
adc
jne
sbb
lahf
sarb
adc
mov
std
push
dec
push
pop
mov
pusha
int3
lret
in
push
test
fidivrs
subl
dec
sub
test
cld
mov
and
and
movsb
jecxz
sbb
xchg
mov
pusha
jge
mov
cmc
ss
les
push
add
ljmp
lock
xor
jb
ficoms
jno
mov
inc
dec
xor
lahf
scas
cltd
js
pop
pushf
cmpsl
test
jmp
jbe
insb
imul
rcrl
jp
cs
jbe
mov
sahf
jo
xchg
and
push
mov
fsubs
pop
push
std
pop
xchg
mov
arpl
and
cld
mov
ds
or
int3
dec
push
pop
dec
or
les
mov
xchg
mov
orl
pop
bound
push
daa
cltd
aam
fcomps
cmp
iret
hlt
inc
movsb
aas
imul
push
jp
cld
jbe
cmpsl
je
pop
sub
sbb
push
xor
sub
jae
push
or
mov
insb
or
xchg
fsub
nop
sub
sub
and
mov
std
sub
cmpsb
ds
mov
add
jbe
addr16
outsl
movsb
fwait
xlat
jae
adc
cs
shr
push
pop
add
cltd
aaa
inc
xor
pop
fsubrl
movsl
jmp
mov
je
dec
push
andb
mov
and
shll
push
test
cmp
lods
sbb
cmp
in
popf
lock
lea
mov
inc
pop
das
es
mov
sbb
dec
and
jns
jg
xchg
scas
out
les
stos
inc
fwait
cmp
inc
and
cli
add
jns
insb
lds
imul
mov
ret
aad
aam
cmp
pop
ds
scas
pop
push
lods
imul
enter
and
dec
mov
jl
lock
sahf
sbb
push
jecxz
pusha
xor
pop
or
mov
addb
or
mov
jl
mov
lret
push
push
xchg
mov
in
cmpl
pop
jns
cld
xor
cmp
cld
push
arpl
sbb
and
pushf
and
pop
out
and
cltd
xchg
shlb
xchg
jno
gs
imull
je
and
pop
push
xor
xor
into
cmpsl
inc
pop
inc
loope
jns
sbb
nop
sbb
lea
or
mov
sub
loope
pop
xor
std
rclb
jl
xchg
mov
push
subb
aam
iret
mov
in
jbe
xchg
inc
outsb
adc
jnp
ret
inc
and
xchg
fsubl
leave
sub
dec
andl
push
jg
jl
inc
orl
sbb
inc
xchg
push
mov
int3
rorb
jl
sub
sti
jg
rclb
ret
mov
add
andb
fs
lret
lahf
inc
les
mov
aas
movsb
movsl
and
xor
or
enter
je
call
mov
jmp
cmpsl
imul
push
xor
ds
sub
data16
loop
cmc
fisubl
xor
push
mov
dec
popa
mov
cmpl
push
int3
jg
hlt
mov
fistl
push
int
pop
movsb
mov
test
call
add
fidivl
pop
xor
gs
push
fdivr
imul
movsb
nop
jl
jecxz
inc
inc
int3
popf
cmp
jb
or
repz
mov
insb
and
test
mov
addr16
arpl
xor
sbb
pop
push
lahf
lret
push
clc
popf
cmpsb
mov
cld
inc
mov
pop
xor
cmc
add
jmp
sbb
and
mov
mov
and
sbb
fidivrs
mov
jb
je
iret
sub
dec
jge
jns
imull
inc
jae
out
push
int
sarb
shrb
cmp
jae
adc
jl
add
clc
data16
out
mov
lods
loopne
sbb
imul
fcoml
fwait
in
fidivl
xor
rcrl
cmp
mov
sahf
imul
daa
cld
sarb
es
out
orl
setns
outsb
fidivl
stos
inc
fwait
push
mov
adc
adc
sbbl
inc
pushw
cwtl
mov
lret
push
dec
data16
or
data16
jmp
insl
hlt
push
push
jb
rcr
push
push
or
jns
test
movsb
cld
add
mov
shrb
push
mov
cmpsb
cltd
pop
aad
adc
insb
or
and
arpl
dec
push
js
fs
lods
xlat
xor
lcall
insl
jl
iret
daa
shl
pop
mov
je
stos
and
in
dec
sbb
cmp
movsl
shrb
push
lahf
shrl
mov
and
pop
pop
and
mov
jno
fcoml
and
jp
xchg
sbb
sub
subb
int
out
stos
add
mov
sbb
pop
inc
mov
movsb
out
pushf
sbb
or
lods
fistl
out
lahf
jmp
aad
pushf
jl
add
or
dec
insb
jge
repnz
inc
push
mov
pop
shrb
movsl
cmpsl
sbb
mov
pop
cmp
lret
jge
push
dec
jg
adc
inc
sub
push
push
jg
rorl
jno
hlt
data16
outsl
cld
andl
frstor
pop
push
gs
test
lea
dec
sbb
inc
movsl
cmpsb
ficomps
daa
pop
mov
lahf
popf
jle
and
push
out
pop
lea
in
sbb
mov
push
push
pop
lods
xchg
mov
ss
cmpsb
mov
loope
jle
sub
pop
fmull
xchg
jo
ret
ret
cwtl
int3
pop
cmp
fldcw
test
and
mov
sbb
repnz
sbb
xor
add
nop
in
mov
jl
imul
notl
jo
rcrb
inc
fs
or
sub
inc
mov
cmpsl
sub
mov
pop
out
pop
cmp
xor
mov
ror
pop
and
faddl
jne
cmpsl
mov
test
cwtl
lret
rorb
sbb
stc
sar
xchg
mov
fs
pop
f2xm1
lods
in
cltd
push
dec
xchg
int3
cmc
insl
ljmp
and
and
pop
stos
inc
adc
lds
movsb
jl
in
xchg
dec
pop
pop
shrd
stc
cld
cmp
inc
cltd
scas
or
xchg
xlat
or
xor
jnp
pop
shl
or
or
ficomps
sub
push
into
insb
aaa
cmp
cmpb
push
mov
scas
mov
fildll
dec
pop
popw
fnstenv
xor
out
cmc
push
cmpsl
loop
pop
sub
lcall
int3
loop
sbb
fdivp
aam
mov
mov
sbb
jmp
xor
sub
lea
xchg
and
ficoml
mov
cld
inc
xor
aam
stc
jno
scas
inc
push
and
std
mov
aam
test
or
lret
sub
negl
lahf
iret
jecxz
pop
jp
xchg
pop
mov
stos
in
pop
pusha
inc
cmp
push
clc
add
mov
lds
jp
xchg
sbb
sbb
ja
push
int
inc
bound
repnz
ffree
dec
sub
aad
mov
in
push
std
jb
xor
pop
enter
mov
cmp
fucomip
cmp
test
inc
faddl
test
scas
je
rolb
sbb
mov
mov
sub
out
outsl
push
sbb
arpl
mov
mov
popf
pop
pop
cmp
idivl
cmp
or
jb
out
sbb
pusha
mov
pop
xchg
inc
mov
or
jge
cmp
cmp
std
negb
fsubs
pop
inc
aad
nop
cmpsl
enter
imul
sbb
push
mov
sub
imulb
cs
sbb
or
rcrb
shll
aam
outsb
and
sbb
inc
push
fisubrl
pop
pop
xchg
or
sahf
mov
lret
jb
mov
fbld
mov
pop
adc
sbbl
ja
mov
jae
xor
cwtl
and
es
mov
cld
mov
in
xor
and
xchg
cld
je
cltd
aaa
add
clc
sbb
jo
sbb
dec
adc
lret
out
adc
cld
and
imul
jae
xchg
int
pop
jnp
mov
add
adc
cmp
dec
fs
rorl
cs
fwait
mov
xor
mov
sarl
movsbl
add
jbe
push
push
pop
or
outsb
push
ss
imul
pop
sbb
fs
and
ljmp
jns
das
daa
std
mov
outsl
sbb
sbb
jg
push
sub
std
dec
movsb
xchg
sbb
loop
addr16
imul
test
daa
inc
fisubrl
mov
jns
mov
lahf
scas
xchg
add
pop
pop
addr16
idiv
jne
mov
or
push
insb
sbb
xor
xor
jg
es
test
not
sbbl
push
cmp
mov
xchg
test
adc
sbb
ficomps
nop
mov
push
push
stc
mov
mov
pcmpgtd
sbb
dec
sbb
neg
cmp
mov
xor
popf
mov
cmp
cwtl
popa
outsl
std
jo
push
lods
mov
sub
dec
mov
or
mov
sub
pop
mov
push
push
mov
mov
fs
mov
xchg
cwtl
lret
mov
fldt
add
xor
out
cli
dec
sub
les
mov
bnd
jae
inc
cmp
xor
mov
xchg
dec
inc
jb
push
and
into
loop
cmpsb
in
iret
insb
popa
mov
js
and
push
and
mov
cmpsl
push
cld
or
push
mov
mov
in
cltd
jo
xchg
push
lcall
ja
ljmp
fldcw
pop
aad
popf
daa
xchg
in
jl
addl
cld
jmp
inc
data16
add
and
jno
pop
cltd
sub
pop
fwait
mov
xchg
jl
sbb
mov
mov
pop
cmpsb
aam
pop
jl
popa
dec
je
mov
sbb
mov
push
rcr
jmp
out
je
int3
pushl
sbb
pop
add
inc
jp
mull
into
push
fwait
push
lea
or
enter
fadds
push
xor
imul
mov
jp
inc
adc
push
pop
dec
movsb
leave
addr16
sub
push
cld
das
pop
sbb
push
cmp
push
xchg
mov
sbb
add
movsl
sbb
test
xchg
jl
in
xor
std
dec
sub
pop
sbb
movsl
sub
mov
scas
inc
adc
xchg
mov
push
cld
outsb
test
mov
inc
rcll
daa
cltd
sbb
aas
pop
bound
or
jg
pop
jbe
mov
adc
sti
push
sbb
std
xchg
pop
shlb
cmpsl
jo
and
cmp
out
mov
and
sbb
mov
adc
jl
pop
andb
cwtl
mov
call
push
jl
xor
xchg
loop
std
adc
push
push
and
mov
push
jbe
sub
jno
pop
push
leave
cmpsb
sbb
cmp
rcrl
cmp
mov
ret
jns
pushf
dec
in
sbb
mov
push
psubd
incb
ss
shr
push
ret
dec
lcall
cmp
cmpsb
out
scas
js
jb
int
mov
xchg
dec
pop
or
push
movl
daa
push
sub
data16
cmp
adc
je
mov
cmp
dec
pop
cmp
mov
loopne
fstpt
cld
popa
jnp
fldl
leave
or
cmpsl
jno
mov
jno
int3
pop
xchg
subl
xlat
add
fldenv
data16
push
pop
mov
ret
sub
jo
cwtl
out
pop
add
sub
push
mov
push
movsb
sub
xchg
adc
sbb
mov
clc
loope
pop
xor
cmp
jns
inc
jmp
addb
pop
pop
mov
call
adc
xchg
xchg
dec
add
fmul
cld
negb
test
mov
mov
push
sbb
inc
subl
fsubl
xor
pop
push
daa
pusha
lret
outsb
inc
mov
cmp
sub
jge
out
movsb
mov
addr16
aam
int3
arpl
adc
push
add
movsl
adc
pop
jbe
lods
mov
movsb
cmp
in
sbb
popf
mov
inc
div
sbb
cs
and
or
xchg
inc
iret
inc
mov
idivl
pusha
inc
in
lret
popf
gs
dec
xchg
pop
cmp
jns
jp
xor
xchg
in
add
pop
push
dec
scas
lock
lcall
push
movsl
rcrb
call
dec
push
push
dec
jae
xchg
jo
pusha
aam
int3
jl
xlat
xor
std
pcmpeqw
xor
jg
xchg
sub
add
ret
sti
data16
mov
xor
mov
pop
imul
pusha
test
pop
xor
std
mov
cld
jae
and
repz
push
add
cwtl
or
cmpsl
popf
ficoms
jnp
push
dec
popf
fistpl
insb
sub
cmpsl
mov
daa
pushf
jb
out
stc
xchg
std
mov
ficompl
fldl
inc
outsb
popf
mov
and
cmc
xlat
lods
dec
and
pop
jb
mov
mov
mov
shrl
cli
es
push
adc
lret
mov
nop
jo
sbb
fwait
pop
push
inc
and
pop
movsl
frstor
mov
sub
lret
ljmp
loopne
jnp
and
xchg
cld
arpl
in
inc
loope
mov
fsubs
pop
mov
adc
sub
fisttpl
shll
sbb
and
stos
test
push
inc
and
xchg
sub
push
pop
movsl
cmp
adc
cld
roll
push
movsb
out
scas
cmpsb
ja
pop
sbb
and
pop
mov
cmpsb
bound
inc
aaa
cld
fs
std
mov
icebp
andl
jg
push
adc
pusha
movsl
mov
xlat
jecxz
sbb
in
call
push
sahf
ret
shlb
pusha
cmpsl
inc
not
aam
roll
gs
fcmovne
mov
cmpsb
movsb
pusha
jl
add
cmp
inc
cmp
imul
in
sub
lahf
push
imul
scas
ja
push
push
fcom
rorb
mov
sti
push
outsl
cmc
pushf
and
repnz
imul
scas
popa
add
jl
iret
movsl
mov
popf
or
in
cmp
add
cld
cmp
and
xor
cmovnp
mov
pop
popa
and
xor
cli
xchg
lahf
jmp
nop
mov
sarb
and
and
mov
scas
inc
xor
and
std
mov
js
push
cmpsb
ja
mov
incl
adc
in
sbb
lds
push
aam
movsb
je
or
andl
ret
andl
fs
pop
dec
gs
stos
or
cmpsl
dec
sbb
sbb
push
pop
bound
jg
es
shlb
sub
xchg
les
or
pop
outsb
test
xchg
mov
mull
mov
push
add
movsl
les
test
pop
negb
popf
dec
scas
shrb
mov
inc
xor
inc
inc
pop
sub
sbb
mov
pop
fdivs
addr16
inc
out
hlt
in
xlat
sbb
fcompl
je
xchg
int
std
aas
cmc
movsl
arpl
pop
aam
dec
mov
inc
cmc
lret
xor
std
cmp
push
clc
scas
sbb
rorl
in
out
pop
adc
rcrb
jl
andl
hlt
push
loop
jo
mov
std
dec
sbb
pop
mov
push
cld
mov
sbb
ret
enter
jno
or
pop
cmp
pop
out
add
lahf
and
divb
fisttps
and
jp
xchg
and
cwtl
pop
and
jbe
bound
mov
and
pop
hlt
sar
testl
add
sbb
dec
dec
cmp
out
mov
sub
mov
rorb
jo
cwtl
sbb
jno
mov
or
hlt
jae
xor
and
int3
in
stos
bound
sub
leave
es
jb
xchg
cmp
scas
into
mov
jmp
ficomps
loop
dec
or
jnp
push
or
mov
sbb
aam
inc
clc
xor
mov
mov
outsl
sbb
xor
mov
xor
push
jb
or
sbb
jno
sub
adc
in
adc
and
into
cmc
xchg
es
or
fs
jmp
pusha
lahf
pop
jo
mov
push
imul
aaa
iret
cmpsl
cmp
fbld
push
pop
fwait
push
xor
inc
cld
add
pusha
sahf
sarl
mov
and
mov
std
inc
sti
movsl
inc
push
or
add
sarb
xchg
inc
adc
pop
sbb
push
test
daa
fwait
sbb
std
adc
jae
xor
cwtl
inc
rorb
dec
clc
pop
addr16
movsb
call
repz
fs
cmpsl
sbb
mov
dec
inc
in
xchg
xor
lods
xor
lret
movsb
stos
cld
out
mov
sub
fsts
jl
sub
stos
mov
dec
lock
cmp
aam
arpl
add
outsb
aad
lahf
scas
fmuls
rorb
jnp
popa
jge
mov
lahf
fs
dec
pop
inc
out
data16
or
cmp
bound
or
add
daa
xor
sbb
ret
ljmp
imul
bound
loopne
xchg
cs
push
push
pop
jne
jl
cmc
jmp
push
push
cltd
fldl
fdivrs
pop
xchg
or
mov
sarl
jl
int
jns
pushf
mov
sbb
out
cmp
xlat
push
pop
push
cmp
sahf
scas
ss
fdivl
cld
inc
hlt
insb
in
mov
mov
dec
push
cmpsl
jle
test
add
mov
xchg
insb
push
jl
cs
cmp
xor
inc
aas
mov
lods
push
and
leave
pushf
call
imul
insb
std
fdivrl
mov
insl
sbb
xor
add
aad
jmp
add
in
mov
into
fdivl
imull
aas
imul
dec
sub
jl
sub
imul
adc
fcoms
hlt
jge
push
stc
call
xor
cmp
loop
scas
xchg
cwtl
cld
add
in
aas
xchg
xor
push
mov
fsub
ret
test
mov
mov
insl
sbbb
sarl
int
cmp
mov
and
std
stc
jbe
sub
push
clc
inc
adc
mov
std
mov
inc
push
bound
jbe
mov
xchg
inc
sub
cmpsb
and
shlb
sbb
cmpsb
pop
js
and
sub
mov
pop
add
hlt
jle
stos
cld
mov
rolb
fst
out
mov
fadds
nopl
xchg
push
ja
shll
test
and
insb
lods
inc
jbe
loope
enter
nop
cwtl
xchg
jecxz
mov
cld
jo
push
fistps
sub
ljmp
pop
fstpl
cld
sub
cmp
push
std
divb
mov
inc
test
rcrl
popf
sbb
pop
jl
cld
mov
pop
cld
jge
loop
movsb
shll
jnp
cld
pop
push
pop
push
clc
push
push
inc
xchg
push
mov
or
xor
add
jl
push
ret
adc
cld
and
imul
jp
sub
movsb
mov
inc
mov
das
pop
sub
add
aad
dec
pop
jle
adc
or
xchg
jae
inc
std
repz
inc
sbb
es
or
mov
addr16
or
pushf
lea
sbb
mov
or
cmc
sub
adc
int3
mov
add
hlt
xor
mov
and
insl
movsb
imul
adc
cwtl
aad
lods
inc
lea
jecxz
add
adc
jns
jmp
xchg
addr16
adc
add
out
dec
add
ret
push
enter
mov
sub
je
add
out
cmpsl
mov
push
pop
mov
aad
loope
test
mov
mov
fabs
imul
pushf
ret
cmpsl
mov
std
pop
add
test
addl
inc
jge
lahf
jge
inc
cwtl
or
xchg
mov
xor
lds
int3
sub
push
mov
mov
sbb
ds
add
jo
addr16
pop
sub
lcall
mov
xchg
jl
rorl
push
push
movsb
cltd
xor
pop
inc
xchg
mov
das
movsl
cmpsl
push
mov
notl
out
int3
test
call
xchg
sahf
cmp
cwtl
cld
rolb
jge
push
sbb
jae
add
cmp
aaa
shrb
sbb
mov
shl
into
mov
js
cwtl
push
cld
xor
cli
inc
sub
jae
inc
test
mov
add
and
arpl
js
stos
mov
pushf
and
adc
ss
sbb
mov
push
jg
stos
testb
mov
push
cld
cwtl
call
sub
out
lret
push
gs
push
mov
repnz
jo
ficoms
jge
loope
test
ss
lods
sbb
push
push
mov
inc
shll
xor
inc
aaa
scas
rcrl
pop
icebp
push
es
pop
xchg
popf
jg
adc
imul
ja
push
push
cld
jne
sarb
lock
or
enter
lds
jge
push
sbb
scas
imul
rcr
cmp
cltd
out
sbb
imul
xor
out
je
vpaddb
and
push
xor
mov
in
fnstcw
and
out
pop
inc
mov
repnz
mov
jl
mov
sbb
psrlq
sub
clc
out
xor
and
inc
loopne
jo
cmp
push
lock
cmp
loopne
mov
pusha
mov
call
cmpsb
push
inc
and
cmp
and
mov
pop
popa
cmp
aad
cld
cmc
ss
push
xor
test
sbb
movsb
pop
in
sbb
inc
iret
fwait
pandn
push
mov
cmpsl
jg
flds
fdivl
jne
dec
std
inc
ss
movsb
adc
sbb
out
xchg
pop
ficompl
lock
stc
sbb
cwtl
cmp
xor
mov
and
in
and
jns
aam
push
insb
or
into
imul
mov
pop
test
lcall
icebp
aaa
adc
outsl
sarl
jae
cmp
mov
lret
or
dec
std
sub
pop
dec
adc
push
or
mov
mov
jle
mov
cltd
xor
clc
aad
inc
cltd
lods
dec
mov
mov
lds
daa
orl
add
adc
cmp
out
js
shlb
dec
and
fisttps
std
jg
sub
sub
inc
pushf
sbb
adc
fisubrs
fscale
jo
cmc
dec
mov
js
mov
push
out
push
in
pop
sub
cmp
in
inc
push
fidivs
cmpsb
imul
data16
cmp
pop
mov
jns
je
cld
push
imul
ds
adc
std
out
pop
dec
cmp
movsb
inc
cli
xchg
leave
inc
iret
sbb
jl
adc
imul
idivl
mov
adc
fisubl
inc
mov
sti
push
jge
movsb
in
xor
loope
push
inc
ljmp
int
test
and
std
sbb
ret
push
inc
shrl
inc
test
cs
pusha
mov
imul
add
cltd
add
and
push
jl
ljmp
sub
sbb
xchg
std
cmpl
int
mov
cld
fsubp
cmc
adc
pop
mov
lea
arpl
cmp
pop
ret
lods
sbb
cld
lcall
cmpsl
xor
inc
jae
frstor
popf
sub
les
insb
int3
xorl
sti
inc
int
fdivl
pusha
aaa
pusha
jecxz
pop
and
repz
sub
stos
or
daa
adc
and
cld
loop
gs
push
ss
cmp
cld
cmpsb
inc
sub
pop
hlt
pushf
jo
daa
jbe
xor
jb
aad
push
cmp
cmp
lods
pop
push
jno
push
call
ret
ja
mov
inc
xchg
pop
push
jmp
in
pushf
or
pushf
sahf
push
cmc
xchg
jnp
cs
in
cmp
pusha
pop
insb
sbb
adc
lcall
xchg
xor
lds
pop
adc
pop
loope
push
sbb
sub
scas
out
rorl
subl
jns
into
and
inc
adc
jb
test
test
in
and
cmpsb
lcall
mov
push
decl
loope
addr16
int3
stc
fcoms
add
gs
insl
mov
sub
cs
jb
scas
js
cmp
sub
std
test
mov
and
dec
sbb
mov
shl
pop
xchg
dec
push
pop
cld
sbb
int
cs
dec
push
addr16
sarb
gs
fs
pop
pop
sub
and
push
cli
les
in
out
roll
sub
test
popa
je
mov
dec
mov
pop
sbb
sub
lods
add
cmp
xchg
and
add
push
xlat
out
outsb
push
cld
aam
mov
je
mov
pop
std
push
mov
inc
lret
and
and
pop
movsb
mov
cmp
jmp
push
data16
or
or
push
xor
inc
addr16
rcrl
push
adc
jg
pop
std
test
mov
enter
pop
ss
leave
shrl
mov
push
scas
sub
cmp
fs
mov
adc
mov
and
sarl
add
or
nop
lret
jmp
pushl
adc
cld
push
push
or
mov
sbb
sub
loope
dec
push
jge
movsb
ds
add
adc
scas
jl
sub
setg
mov
sbb
and
cld
inc
into
adc
push
pop
sbb
insl
adc
jmp
scas
adc
call
pop
and
dec
imul
daa
inc
lret
sti
sbb
movsl
push
imul
xchg
mov
cmp
adc
add
in
out
fsubrl
in
jecxz
or
mov
inc
cld
lods
imul
stos
in
out
in
dec
sbb
lahf
pusha
jae
pop
std
mov
cmp
inc
negb
popf
ljmp
inc
cmp
jge
push
fsubrl
int3
push
fs
sbb
bound
push
push
movsb
ja
xor
insl
sahf
data16
inc
inc
and
pop
and
xchg
xchg
jae
hlt
adc
jl
pop
daa
adc
popf
adc
enter
cwtl
dec
into
xchg
or
stos
add
xchg
pop
sbb
cmpsb
es
pop
mov
std
mov
aas
sbb
adc
push
dec
daa
outsl
enter
lock
pop
dec
sarl
cmc
adc
out
xor
jns
and
out
dec
cmpsl
xchg
xchg
xor
push
hlt
enter
lods
pop
jbe
les
lahf
add
in
sbb
in
xchg
cmp
pushf
and
cmc
sbb
adc
sub
pop
gs
xchg
jbe
rcr
adc
addl
dec
stos
pop
mov
mov
lretw
std
push
in
cld
iret
nop
cmp
jl
in
jns
jle
movsl
push
test
sbb
jmp
aas
sar
adc
dec
test
std
pop
popa
add
cmp
push
das
dec
movsb
lcall
mov
cld
mov
sbb
cmp
test
test
mov
adc
push
adc
add
loope
pop
push
in
iret
add
lds
mov
dec
or
mov
sbb
mov
xor
int
mov
jl
cmp
fnstsw
xchg
pusha
cmp
mov
mov
cltd
cld
add
loopne
sub
and
ret
and
sbbl
jle
jno
add
mov
push
xchg
popf
sub
adc
xlat
divl
dec
mov
outsb
call
dec
call
stc
xor
inc
cwtl
cld
sub
in
jb
popl
inc
in
loopne
int3
jmp
pushf
aam
movsb
rcrl
xor
cld
jl
inc
bound
fsubl
popa
dec
andps
fwait
sahf
jno
xchg
mov
sbb
ret
pop
xlat
lret
sub
dec
out
fsubl
out
cld
iret
inc
rcrb
and
lock
adc
jl
inc
out
mov
dec
push
mov
xchg
repz
fmull
sbb
and
pop
lock
loope
dec
and
xchg
shlb
fisubs
negb
xor
std
stos
or
sbb
sbb
pop
insb
cwtl
cld
cmp
fisubrl
sub
aad
fstpl
inc
xchg
pop
pop
xchg
lahf
shl
mov
pop
push
pop
xor
xlat
push
test
sbb
cwtl
call
int
sub
gs
or
das
xor
jnp
data16
test
adc
sbb
fs
outsl
push
mov
js
stc
lret
std
dec
push
push
xchg
cmp
je
mov
dec
pushf
insb
ror
repnz
test
cld
mov
gs
bound
pop
lahf
ror
call
mull
je
sub
std
lcall
dec
lcall
mov
xchg
outsl
dec
es
and
jno
cld
cmpsb
add
out
push
jl
test
cmp
mov
outsb
cltd
js
negb
popf
shlb
lods
int
fdivrs
and
js
aaa
jl
call
cmp
ss
pop
hlt
in
jl
outsb
frstor
flds
add
inc
or
gs
iret
sbb
adc
in
ds
adc
test
pop
ret
or
fnstenv
cld
into
adc
adc
lahf
push
fwait
fwait
add
pop
or
les
cmpsb
pop
xlat
les
iret
lods
loopne
sub
dec
scas
outsl
outsb
gs
cld
pop
jne
sbb
add
mov
adc
inc
movsb
repnz
std
mov
inc
shlb
jne
jl
fsubs
xor
out
pop
adc
std
jl
xchg
mov
or
lods
mov
jo
incl
sbb
and
sbb
mov
mov
or
lret
cmpsl
fwait
cmp
fs
test
insb
je
les
std
cmp
ficoms
mov
inc
add
cld
fsubrl
fcomps
aam
fs
jl
lret
jbe
xchg
lods
hlt
gs
or
inc
in
push
xor
sahf
imul
cmp
arpl
cmpsb
mov
sub
fidivrl
cwtl
sbb
mov
aas
sbb
pop
dec
xchg
lea
push
cld
mov
pop
cmp
cli
push
fstpt
jnp
and
fsts
cmc
pop
fcoml
fidivs
dec
sub
add
xchg
pop
outsb
push
fildll
std
adc
add
test
or
hlt
mov
arpl
cmp
cmp
pop
incl
in
xchg
mov
ljmp
enter
sub
xor
jmp
dec
mov
rorb
xor
dec
fisubrs
cld
cltd
movsl
pop
add
imul
clc
adc
lds
or
out
jb
sbb
pop
clc
mov
dec
imul
lret
cmp
loop
repnz
incb
sbb
pop
mov
add
out
sbb
clc
lcall
mov
sarl
les
shlb
ss
data16
sbb
or
dec
adc
lcall
cmp
mov
popf
pop
cmp
xor
xor
out
jo
or
add
cmp
frstor
jb
fwait
and
pop
popf
into
cmp
cld
adc
dec
xchg
push
aad
dec
jl
je
fmul
mov
push
cmpsb
lcall
int
outsb
arpl
cmp
ret
jb
push
ss
out
lret
mov
mov
test
bswap
cld
int3
je
sub
cltd
add
sbbl
xchg
pop
pop
pushf
addr16
decb
mov
mov
outsl
fdiv
xchg
sbb
xor
push
loope
mov
sbb
js
inc
jbe
jne
dec
cmp
xor
jno
push
inc
in
sbb
jnp
shlb
addr16
call
pop
or
mov
ljmp
mov
inc
inc
xor
rorb
mov
fsubrs
mov
mov
adcl
xchg
sub
cmp
xor
adc
jle
sub
pop
cmp
frstor
sub
adc
dec
mov
and
mov
sbb
pop
add
movsl
dec
cmc
sti
call
jmp
js
shlb
pop
xchg
cltd
ja
push
mov
jne
or
cld
icebp
pop
mov
mov
dec
shll
cmpsl
mov
inc
out
addr16
inc
jae
stos
stos
jl
aas
cmp
mov
filds
cmpsb
popf
cld
movsl
mov
iret
or
jmp
pop
shlb
xchg
mov
push
je
imul
lahf
pop
cld
outsl
fildll
and
inc
mov
cmp
xchg
sub
cmp
fwait
sbb
inc
in
and
jns
pusha
cmp
setne
mov
jo
les
cld
pop
outsl
and
sub
sbb
push
lods
stos
stos
sub
sbb
lret
daa
dec
jge
cwtl
call
scas
pop
popf
fs
add
imul
pushf
pushf
pop
movsb
xor
sbb
lods
xchg
xchg
adcl
jmp
pusha
mov
je
dec
jl
daa
int
icebp
xchg
mov
in
es
jl
sub
sub
out
imul
test
loope
push
loop
fs
inc
dec
and
shlb
wbinvd
test
cli
inc
pop
add
popa
jbe
lods
jne
test
mov
push
dec
mov
xor
mov
mov
mov
scas
push
sbb
aam
cmpsb
jnp
icebp
inc
jg
mov
push
fstl
in
xor
test
sbb
test
cmp
cmp
mov
aam
sub
dec
call
pop
test
or
ds
jl
push
cmpsl
fwait
jne
mov
push
mov
mov
mov
jno
mov
outsb
movsb
fdivrp
dec
fnsave
xor
out
es
pop
xor
add
mov
daa
cltd
lcall
sti
clc
in
movsb
outsl
iret
icebp
fdivs
xchg
je
mov
mov
inc
inc
mov
out
icebp
jp
enter
and
loop
stos
inc
shlb
scas
cld
cmp
dec
lret
clc
mov
jno
popf
sub
aad
pushf
cld
cmpsb
fmull
imul
mov
movsl
pop
cltd
ss
daa
les
xchg
std
and
rorl
out
dec
repnz
mov
jmp
inc
jno
push
and
orb
addr16
pop
adc
xchg
or
cltd
jnp
xchg
cmp
cmp
loope
and
lods
popf
lods
ja
fsubs
sbb
pusha
xor
and
std
xor
add
and
jb
loope
ss
cmp
pop
daa
sahf
int3
into
jae
cmp
and
push
mov
flds
mov
mov
test
cld
fidivrl
shll
cmpsl
insb
and
fwait
adc
int3
out
jl
xor
dec
out
movsb
mov
xchg
fcmove
sbb
daa
cmc
or
xlat
dec
cmp
gs
cmpsb
fldl
inc
and
imul
sub
jns
out
jp
and
cmc
sub
jl
imull
jne
js
mull
outsl
mov
popa
pop
mov
fsts
sbb
and
arpl
rcll
xchg
xor
sub
sbb
pop
fs
fldenv
and
and
add
mov
mov
mov
std
push
pop
dec
or
inc
fisttpll
in
cld
inc
dec
fimull
or
leave
inc
sbb
push
std
cmp
shlb
imul
loopnew
jb
cs
insl
xchg
int
jbe
sbb
int
jge
arpl
mov
or
mov
or
mov
cld
mov
test
std
sbb
sbb
inc
cld
stos
sbb
outsl
mov
cmp
mov
xor
lods
test
jne
arpl
stc
inc
gs
sub
rcll
xchg
sub
sbb
jns
push
cmp
pop
push
or
or
outsl
push
js
sbb
push
sarl
jns
adc
outsb
xchg
inc
ret
pop
addr16
nop
in
jge
xor
je
mov
cmp
ja
or
pop
mov
fucomip
cmp
mov
cmp
popa
jne
adc
xchg
add
cmp
and
movsb
push
loop
je
jno
setbe
out
lret
pop
inc
cli
sahf
jge
int
or
mov
xchg
loop
and
sbb
mov
mov
pop
push
nop
fsts
rep
dec
xor
dec
bound
adc
ljmp
leave
cmp
sbbb
cmp
pop
mov
jl
sahf
ret
pusha
test
push
mov
popf
add
xchg
shll
inc
mov
sub
mov
dec
popf
add
je
popa
xchg
int3
fstp
pop
xchg
pop
incl
mov
cmp
sbb
cltd
addl
ficoml
mov
sysexit
jno
cmp
pop
insl
mov
lods
pop
mov
movsb
sbb
pop
or
jl
repz
fcompl
push
xchg
shll
mov
dec
sbb
mov
and
mov
int
lds
aam
fistl
loopne
movsb
jecxz
movups
je
push
mov
pop
gs
xor
shrb
repnz
movd
push
shl
popf
stos
fadds
and
or
daa
xor
jo
daa
subl
sub
loope
std
and
inc
adc
jae
xlat
push
repz
and
inc
movsb
insb
xchg
pop
mov
push
or
call
xchg
jo
pop
lods
mov
icebp
shrl
cmp
sarl
loope
nop
pop
jp
mov
out
cmc
inc
inc
cmp
movsb
add
out
xlat
jb
add
fcompl
sub
int
call
rorb
shll
mov
aam
xchg
lock
lea
subl
push
test
xchg
loope
in
and
cmp
stos
xchg
aad
popa
ficompl
adcl
fadds
popl
icebp
adc
aas
movsl
cmp
dec
xor
mov
or
sub
pop
mov
jbe
adc
cmpl
add
xchg
mov
out
js
fsts
pop
or
movsb
sbb
je
and
adc
sbb
pop
jle
add
pusha
push
cmpsl
xor
rcrl
fs
xor
jl
mov
xlat
cld
xor
sub
xor
sbb
pop
mov
pop
or
cmp
pushf
fidivrl
inc
adc
sarl
push
add
out
rolb
pop
jecxz
lcall
or
movsl
pop
cmp
clc
jbe
je
lea
adc
sarl
dec
sub
clc
inc
int3
pop
sub
rcr
pop
mov
mov
mov
mov
cmc
pop
sub
jnp
bnd
jl
mov
sbb
lods
push
mov
inc
cwtl
std
into
into
out
enter
pushf
out
adc
jl
in
xchg
insl
jae
mov
mov
test
cld
lds
dec
js
int3
xor
pusha
mov
pop
xor
xor
out
push
xlat
daa
and
inc
dec
or
xchg
es
imul
cmp
inc
out
test
cmp
cmp
stos
out
dec
lea
cwtl
pushl
mov
fstps
xchg
andb
out
push
sbb
cmc
inc
test
cld
imul
rcrl
dec
negl
cld
pop
xor
rol
pop
mov
jl
xor
daa
mov
lea
repnz
sbb
jmp
stos
mov
std
xor
aas
call
push
cld
jg
inc
mov
jnp
fsubrl
jbe
das
aas
push
std
jmp
insl
les
xchg
pop
mov
shr
sbb
sub
andb
movsb
sub
cmpsb
xchg
gs
and
inc
enter
push
shll
rcll
and
int3
cmp
cmp
push
lahf
inc
lea
push
push
xor
daa
je
mov
cld
jbe
jp
hlt
mov
add
pusha
xchg
push
mov
pushf
int
or
inc
cmc
popa
push
jg
xor
cltd
inc
mov
mov
jg
jbe
stc
stos
sub
dec
sbb
push
push
test
cld
pop
sub
dec
xor
xchg
and
mov
and
xchg
cs
or
xor
loopne
jae
ret
std
push
sarl
scas
fisubrl
imul
push
jl
adc
xchg
and
ljmp
mov
ret
push
data16
movsl
test
jl
lods
test
xchg
rcr
popf
sbb
pusha
and
bound
jbe
std
mov
mov
pop
inc
mov
lds
inc
or
scas
sub
int
popf
add
mov
fimull
imul
sub
fwait
adc
or
mov
mov
jnp,pt
mov
cmc
aad
xor
out
dec
popf
jl
insl
add
fiaddl
jae
iret
adc
cmp
jecxz
movsb
frstor
sbb
or
pop
test
aad
xchg
xchg
dec
adc
cltd
lcall
pusha
push
out
mov
je
std
xlat
and
push
jecxz
xchg
jb
mov
push
loopne
mov
jl
clc
cwtl
sub
xor
clc
inc
es
mov
and
jl
es
jno
into
mov
dec
mov
xchg
fildll
sbb
dec
push
sub
fnsave
sbb
int
dec
lods
orb
fs
cmp
movsl
pop
push
mov
pop
nop
xor
ds
out
fistl
adc
lds
mov
inc
stos
pop
out
je
xchg
push
pop
shrb
push
cld
push
fsubr
cwtl
add
sbb
sub
mov
pop
cld
imul
arpl
cmp
or
add
std
call
add
sbbl
sahf
cmp
rcr
sarb
in
out
leave
and
cmp
fildl
lahf
jns
push
inc
cli
or
stos
pop
xchg
sub
cmp
pusha
mov
mov
add
push
mov
jg
mov
cmp
push
ja
popa
int
dec
out
ret
cmp
les
pushf
xor
insb
in
addr16
xor
test
std
stc
iret
sbb
lcall
out
sbb
jbe
mov
js
stos
fcom
mov
adc
sub
adc
sbb
in
mov
les
aad
add
dec
push
jl
stos
imul
or
dec
lods
test
cmpsl
adc
jns
sbb
inc
adc
adc
movsl
sub
push
sub
and
xlat
xchg
jl
lahf
test
cmp
add
jle
mov
fsubr
push
add
pop
cld
daa
or
inc
push
and
int3
mov
sbb
leave
pop
loop
jecxz
test
xor
mov
sub
test
mov
push
sbb
xchg
loopne
rolb
sahf
sub
inc
jecxz
dec
cmp
pop
xchg
imul
inc
enter
fwait
aam
pop
xor
cmp
mov
outsb
inc
movsl
jecxz
and
scas
jmp
and
push
sti
mov
shrl
pop
or
nop
jl
sbb
lret
pop
sbb
dec
mov
mov
cmp
arpl
inc
ss
fs
or
adc
jno
outsb
cwtl
xor
aaa
ja
mov
sbb
or
sbb
mov
pop
jnp
test
dec
insb
fnstcw
decl
add
mov
xchg
jbe
inc
mov
inc
dec
pop
cmp
inc
cmp
shlb
movsb
jge
je
inc
data16
sub
push
lock
pop
cs
sbb
xchg
rclb
inc
ss
mov
xor
arpl
cmpsl
cmp
idivb
pop
inc
or
sbb
push
xchg
push
pop
lcall
push
ret
mov
popf
lcall
es
dec
adc
pop
xorl
jae
mov
and
inc
jge
in
shll
test
pop
lahf
bound
insl
mov
mov
xchg
scas
fisttpl
xlat
arpl
cmc
popf
and
or
sub
mov
clc
and
mov
mov
iret
insb
aas
dec
mov
inc
into
xchg
aad
jns
jbe
or
std
cmp
or
sbb
inc
sbb
data16
push
pop
xchg
sbb
xor
add
js
add
std
pop
fstps
inc
xor
pop
aaa
loope
gs
scas
push
mov
xor
inc
inc
xchg
xlat
add
lret
lods
cs
insb
mov
push
sahf
mov
mov
push
sbb
push
sub
jl
sub
in
enter
or
sbb
hlt
pusha
out
cmpsb
fcompl
cwtl
cmp
push
insb
jg
or
mov
div
push
push
inc
icebp
cld
or
fcomps
pop
outsl
add
mov
jb
push
and
pusha
adc
xchg
je
mov
shll
and
pop
std
popa
pop
and
in
ds
lods
inc
sahf
daa
xor
pop
cltd
sub
es
iret
sbb
mov
mov
dec
repnz
test
jl
mov
rcr
nop
ss
rep
push
jns
addl
and
pop
or
xchg
adc
subb
push
lea
pop
cld
test
adc
mov
dec
divb
test
bound
mov
int
and
mov
arpl
cmpsb
or
and
cld
mov
hlt
and
mov
pop
cmc
imul
into
pop
or
add
dec
mov
cld
outsl
movaps
dec
in
inc
cld
inc
pop
in
mov
jno
push
or
ljmpw
pop
int
sub
in
or
xlat
std
sub
xchg
cld
mov
or
je
stos
bound
ret
imul
lret
push
inc
push
popf
xchg
pop
push
jl
jb
inc
mov
push
stos
push
fnstsw
mov
sbb
loope
pop
mov
cmp
stos
test
inc
mov
push
jecxz
popf
add
loopne
sbb
popa
rorb
dec
int3
cmp
xor
fs
in
inc
notb
outsl
xchg
push
sub
mov
adc
jnp
fnstsw
pop
rcrb
mov
shll
cmp
lret
dec
pusha
pop
jnp
inc
jl
and
add
or
xor
adc
cmpsl
std
scas
add
cmp
pop
adc
pusha
cmp
push
sbb
push
je
int
fldl
pop
xor
ja
dec
add
xchg
lds
aad
mov
sub
mov
stc
ljmp
mov
push
stos
xlat
mov
cmp
push
shrl
cmp
decl
pop
std
arpl
and
or
scas
es
add
or
push
nop
xlat
push
push
fidivl
inc
and
lahf
push
cmp
adc
mov
stos
test
cld
inc
sub
fstpt
pop
icebp
mov
sbbb
dec
les
mov
aam
and
pop
arpl
inc
sbb
testb
mov
jae
jmp
jecxz
bswap
sbb
das
inc
mov
call
jno
sbb
nop
pop
xor
scas
outsb
lret
jmp
cld
and
xchg
cmp
fisttpll
xor
std
cltd
lret
sub
cld
adc
xor
pop
sti
sarb
test
dec
lods
aad
leave
xchg
lret
test
rorl
xchg
mulb
ret
xchg
popa
in
push
mov
cmp
sbb
cld
loop
negl
stos
xchg
imul
jb
jg
int
aas
or
xor
xchg
mov
insb
or
cmpsl
xchg
mov
movsb
in
cld
and
in
pop
ds
enter
xor
stc
sub
fs
xchg
into
pop
ss
inc
cld
testl
cmpb
mov
clc
es
cmp
lret
cld
movsb
popf
push
push
gs
movsb
aad
jecxz
jl
sbb
pop
outsb
dec
mov
loopne
sbb
sahf
bound
cs
jmp
cmpsb
dec
pusha
imul
cmpsb
out
jae
cld
sub
and
daa
cmp
sbb
pop
mov
lret
inc
ja
in
xchg
mov
mov
mov
movsl
cmp
lea
in
pop
jl
sub
push
xchg
or
popf
push
and
scas
mov
xchg
sub
mov
mov
sbb
dec
psrlw
xchg
and
add
add
call
aam
ret
mov
jbe
add
jns
cmp
jbe
rolb
sti
lcall
pop
push
or
pusha
repnz
in
das
cwtl
clc
cmp
std
cli
data16
dec
pop
lcall
lock
pusha
push
fldl
lods
jbe
and
xchg
pop
adc
inc
ficoml
xchg
and
cmp
jl
movsl
repnz
push
sar
ret
movsl
imul
outsl
inc
fs
divl
shlb
mov
pop
fdivrl
popf
mov
jne
push
inc
cld
gs
fisttps
out
leave
xchg
add
iret
push
push
jl
cs
aad
gs
push
test
inc
push
outsl
or
aaa
shl
arpl
inc
jb
xor
movb
movsb
jb
dec
and
inc
or
shlb
imul
sbb
jge
and
lret
cmp
push
fisttpll
mov
xor
insb
xchg
fwait
pop
iret
sbb
and
inc
mov
jb
and
sbb
mov
std
pop
shll
mov
push
mov
cwtl
jg
mov
int3
gs
hlt
jae
pop
and
sub
xor
mov
jne
cld
adc
orb
sub
call
sbb
pop
insl
icebp
sub
mov
jns,pt
or
xor
sbb
lea
cmc
mov
inc
sbb
sarl
les
ja
dec
addr16
es
cmp
or
je
movsb
mov
jle
cwtl
cmp
jmp
cmp
dec
rorl
jle
push
gs
aam
ficoms
sbb
in
movsb
pop
and
add
mov
mov
cmp
inc
adc
enter
int3
dec
ds
push
mov
xchg
call
push
jge
sbb
push
pop
movsl
rolb
jno
sbb
dec
aas
pop
cmp
fwait
or
sub
cmp
outsb
cs
mov
test
js
and
aam
daa
or
test
pop
mov
cld
jecxz
ret
sbb
movsb
pop
pushf
insb
je
xchg
std
dec
int
shrb
test
inc
daa
lods
cld
and
xor
fwait
xchg
les
int3
stc
fidivl
sub
fdivs
inc
jecxz
std
rcll
or
iret
daa
cmc
mov
mov
cmpsb
jnp
xchg
in
mov
and
into
add
mov
mov
shl
scas
jo
jnp
bound
in
cmp
jge
arpl
pop
sub
adc
dec
dec
repz
cltd
jae
xlat
mov
in
frstor
push
sub
pusha
dec
ret
push
xor
repz
inc
pop
sub
insb
sbb
inc
rcr
mov
data16
inc
mov
js
subl
and
inc
std
repnz
daa
lret
lds
pop
jne
imul
push
xorl
test
sub
int
jo
lcall
jmp
addr16
push
sbb
and
lods
shl
cmp
ss
push
sub
pop
push
dec
aam
imul
ja
and
pop
call
bound
pop
jl
gs
aas
stos
mov
cmp
pop
insb
scas
imul
getsec
add
jns
cmp
push
jmp
fisttpl
fcomip
cmp
jne
sub
cld
xchg
fs
push
push
int3
pop
fscale
sbb
fimull
dec
jne
jl
je
sbb
dec
pusha
cmc
insb
mov
sbb
mov
or
repnz
movsb
popf
mov
movsl
adc
and
mov
mov
daa
xor
push
movsb
test
idiv
dec
shl
hlt
adc
ror
mov
push
lret
pop
test
push
jae
push
fisttpll
push
ret
mov
rclb
repnz
or
mov
lods
inc
pop
pop
pushf
inc
jl
decb
jbe
call
js
cwtl
aas
or
cltd
cmp
push
sbbl
inc
pop
loopne
push
lret
pop
xchg
inc
dec
push
lcall
xor
je
rorl
inc
jge
fs
fwait
leave
leave
cmp
int
pop
cmpsb
test
jl
add
scas
mov
mov
inc
xor
mov
cld
mov
call
pop
lahf
jae
lahf
xor
out
cmc
sbb
test
push
pushf
lock
adc
dec
mov
xchg
pop
sar
fisttpll
insb
adc
lods
xlat
fs
popf
pop
incb
es
push
loopne
movsl
adc
jmp
hlt
mov
xchg
push
ljmp
and
in
rcll
es
mov
jbe
add
movsb
push
cld
sub
sub
pop
popa
push
xchg
mov
imul
ja
std
or
dec
es
inc
fs
int3
inc
bswap
and
gs
cmp
inc
jmp
sbb
testl
repz
jnp
movsl
fsubrs
xchg
test
ljmp
movsb
jl
fisubrs
mov
imul
enter
jmp
fnstenv
lahf
mov
rorb
dec
ja
insb
add
cli
push
shl
inc
leave
lds
add
insb
int3
and
jp
cmp
pop
push
leave
scas
xchg
xor
xchg
ret
lahf
cmpsb
fists
xchg
mov
sbb
xor
sahf
and
ss
fildl
cld
scas
in
or
lock
out
dec
out
les
mov
add
cmp
cld
cmpl
mov
mov
push
mov
jg
popa
leave
pop
es
pop
push
jbe
jge
stc
insb
into
pop
imul
js
cmp
iret
data16
inc
fisubs
dec
mov
stc
stos
add
fprem1
imul
jb
stos
jl
ljmp
cmpsb
cwtl
cld
xchg
inc
xchg
or
fnstsw
insl
mov
or
rorb
sbb
repz
dec
mov
jp
pop
and
cmpsb
in
test
stc
xchg
ret
cmp
dec
jge
cld
ja
sub
sbbb
scas
mov
sahf
mov
inc
js
rclb
push
and
cltd
jbe
mov
sbb
pop
xchg
and
int
dec
loopne
daa
cmp
mov
popf
adc
xlat
sahf
cld
outsb
shrl
mov
pop
add
sbb
ds
pop
dec
rclb
lods
jge
fisttps
and
sbbb
scas
xlat
std
call
shll
lahf
es
call
inc
or
fcomp
or
mov
mov
jae
in
lahf
or
out
xchg
loopne
mov
icebp
mov
lods
lahf
inc
inc
xchg
cmp
mov
decl
add
insb
cwtl
aam
lock
and
movsb
cld
add
into
sub
mov
sarl
lds
iret
adc
std
jge
inc
inc
pop
mov
pusha
sar
clc
add
ret
cmp
sbb
jae
popl
outsb
mov
mov
std
sbb
adc
inc
pop
icebp
xchg
popa
inc
pusha
popa
and
mov
and
jl
jo
pop
add
ljmp
mov
push
js
scas
jmp
xchg
shl
xchg
cmp
fsubs
pushf
int3
push
cmp
mov
dec
fdivs
sbb
pop
data16
out
fbld
or
fbld
cmp
enter
mov
dec
jl
jo
popf
push
mov
inc
sbb
aaa
testb
dec
push
es
cmp
sbb
popa
lds
loope
mov
mov
into
xor
and
iret
xor
stos
inc
in
sub
aas
mov
xchg
cmp
stos
sbb
jl
xor
lret
xorb
std
pop
sbb
in
push
pop
inc
cmp
imul
iret
push
bound
xor
pop
clc
nop
cmpsb
out
imul
cmp
mov
jne
stc
out
push
je
lods
pop
imul
xchg
outsl
imul
bnd
cmpsb
add
addr16
js
movsl
sbb
es
popf
in
mov
mov
xchg
inc
jns
jl
outsb
jecxz
cmp
daa
push
rolb
shl
cmc
sbb
jnp
mov
add
xor
movsl
sbb
jg
in
mov
push
sub
xor
mov
jne
jbe
idiv
push
std
xchg
adcl
fnstsw
out
pop
hlt
add
int3
sub
xchg
fistps
or
add
scas
in
jns
ljmp
pop
adc
test
test
add
ja
ficompl
adc
mov
movsb
jle
inc
xchg
pop
ljmp
aas
push
outsb
jg
mov
je
int
hlt
stos
cmp
jle
add
in
sub
add
aas
or
jl
push
je
add
adc
loopne
int3
cmp
into
outsb
mull
pop
test
and
call
dec
rcl
jnp
aam
ja
inc
popa
es
xor
push
inc
out
cmpsl
mov
inc
frstor
inc
cmc
shll
cmp
nop
pop
add
dec
movsb
dec
mov
lock
insb
std
push
stos
roll
or
pushf
add
sbb
enter
in
test
es
cmp
jge
data16
push
jno
cmp
sahf
push
mov
cmp
dec
pop
push
xchg
mov
add
movsl
lcall
sbb
pop
mov
rcll
daa
xor
push
cld
lret
jb
push
and
dec
shrb
pop
psubsb
xor
test
xorw
and
fs
adcl
pop
les
cld
leave
rcrl
cli
or
cmp
and
add
jbe
out
pushf
cld
dec
pop
mov
lret
pop
mov
cld
sahf
loopne
xor
loopne
aaa
xor
dec
mov
inc
outsb
call
xchg
xchg
push
std
jne
push
pop
jecxz
xchg
xor
jl
sub
nop
mov
and
inc
sub
in
and
pushl
ss
sbb
ret
mov
ret
jo
pop
daa
ret
jp
cli
xor
negl
push
arpl
mov
or
mov
adc
sub
dec
popf
mov
jge
dec
mov
dec
popf
sbb
sbb
iret
push
xchg
and
mov
xorl
jb
mov
cmp
jle
addr16
ds
mov
push
sbb
ljmp
pop
cmpsb
shl
daa
xchg
loope
pop
jbe
daa
xor
movsb
mov
pop
daa
dec
clc
inc
bound
jge
jbe
mov
dec
jmp
ret
cmp
test
pop
enter
push
movsb
push
notl
leave
pop
push
dec
adc
sbb
and
shlb
pop
push
je
fwait
xor
and
xchg
adc
ljmp
ret
std
xchg
cmpsb
fstpt
mov
fwait
pop
and
dec
inc
int3
mov
jb
inc
pop
mov
imul
adc
or
lea
sbb
loopne
cmp
cli
xchg
lods
clc
sub
sbb
loopne
inc
dec
adc
xchg
fmull
in
daa
iret
scas
je
mov
xchg
subb
pop
hlt
or
pop
xchg
sbb
mov
pushf
leave
cld
inc
int3
add
sbbb
cld
sbb
pusha
push
in
sub
jmpw
cwtl
aad
add
daa
leave
mov
cmp
sbb
cmpsb
jae
in
shr
sub
std
mov
gs
sbb
pop
aas
inc
in
in
jge
cmp
add
xor
shlb
push
iret
insb
mov
jl
or
add
xchg
and
mov
xchg
xchg
divb
sbb
xchg
pop
movl
aam
pop
mov
xor
popf
das
adc
cmp
pop
sub
inc
mov
xchg
pop
into
sahf
ds
mov
jne
lret
je
mov
mov
cmp
dec
push
lea
cld
cmpb
jae
inc
mov
cmp
and
jmp
call
add
test
jg
jo
lahf
aaa
nopl
push
sbb
pop
sub
das
ds
push
xchg
jp
in
in
jns
in
loop
aas
stos
inc
loop
mov
fistps
mov
lcall
push
adc
fsubr
cmp
sbbl
sbb
or
cwtl
je
inc
stc
sbb
mov
rcll
les
dec
push
daa
or
cld
add
sub
shll
and
sbb
ror
adc
repz
test
inc
mov
fdiv
loopne
fst
mov
adc
or
mov
addr16
out
bound
cli
clc
jge
sbb
arpl
mov
bound
lret
ljmp
movsb
in
rol
fcmove
outsl
dec
sbb
mov
sub
xchg
push
xchg
jo
mov
outsl
into
mov
mov
sbb
sbb
in
and
cmp
mov
or
cmp
fwait
jns
cmc
pop
cld
into
imul
xchg
mov
lahf
sub
cmpsb
std
jo
daa
mov
push
xchg
lods
test
nop
fistpll
pop
out
scas
xchg
jo
lahf
inc
mov
xchg
out
pop
aad
push
or
pushf
das
addl
data16
dec
std
xchg
cmpb
cs
lret
sub
jle
sub
cli
jecxz
rcl
imul
int
pusha
and
add
sbb
jp
ljmp
sahf
sbb
cmp
push
ss
decb
lods
nop
std
jno
scas
mov
pusha
cmp
or
mov
in
inc
je
cmc
xor
jb
cwtl
incb
je
dec
cli
push
insl
or
xchg
leave
jl
dec
ret
scas
pop
sub
test
mull
xor
cltd
ljmp
cmp
sarb
lret
or
lret
lretw
cmp
testl
mov
mov
jbe
xlat
ljmp
scas
scas
inc
mov
adc
mov
dec
sbb
pop
or
pushf
loope
arpl
push
movsb
adc
fwait
sbb
call
repnz
aad
sar
js
imul
in
dec
fstpl
int
cmpsb
sbb
repnz
ret
mov
js
add
fldenv
xor
inc
jb,pn
mov
dec
jmp
test
xchg
aam
test
pushf
arpl
mov
push
fwait
cmpsl
push
fs
aas
adcb
dec
push
push
inc
cmp
ds
jae
insl
inc
xor
inc
xor
xchg
mov
mov
and
mov
jbe
jl
stos
mov
sub
ljmp
jge
lret
jp
cs
fdivr
jle
fistl
push
xchg
test
out
jecxz
sub
or
xchg
std
pop
scas
nop
popf
mov
sarl
cld
popa
retw
popf
push
mov
adcl
test
sub
pop
std
dec
int
fnstenv
jne
in
push
and
rorb
sbb
sub
ds
mov
xor
sbb
std
fdivl
jl
mov
pop
je
jo
or
daa
xchg
adc
jmp
pop
loopne
aam
inc
negb
testb
lea
fwait
pop
sub
sti
pop
xor
and
lahf
repnz
mov
gs
popf
or
jl
stos
push
mov
cmp
jl
mov
icebp
mov
in
lret
movsb
hlt
lahf
outsl
clc
or
call
mov
cmp
push
sbb
jae
add
and
mov
xlat
push
popf
push
cld
jne
cmpsb
mov
daa
mov
hlt
jb
pop
cmp
ret
sbb
sub
pusha
push
out
rcrl
outsb
add
inc
sbb
cmp
movsb
or
pop
jae
xchg
xor
mov
inc
and
fstpl
mov
push
cmp
xchg
push
out
push
lea
cs
sbbb
es
cmp
cld
cmpsb
sbb
mov
cmp
xchg
daa
xchg
out
mov
pop
mov
int
rorb
lods
shl
outsl
xor
incb
add
xor
std
sahf
pop
sti
les
daa
repz
int
inc
dec
out
clc
jp
pop
repz
mov
mov
movl
jle
mov
sbb
mov
push
shlb
sbb
pop
inc
std
das
mov
jl
or
pop
fidivs
jb
out
mov
pop
es
lock
aaa
jns
cmc
imul
into
cmpl
push
add
std
out
sub
sub
loopne
adcb
mov
cli
stos
jle
fisubs
jmp
sti
clc
pop
xchg
outsl
mov
xlat
push
aaa
test
xor
ja
sahf
loope
push
sub
std
mov
pop
jge
fsubrs
fs
inc
and
sbb
and
mov
mov
sub
out
mov
push
movsl
sub
and
out
ja
xchg
aaa
aad
mov
push
sbb
sbb
inc
adc
cmp
nop
lods
or
jg
cld
ds
xchg
or
mov
mov
loopne
aad
mov
test
shll
out
int3
jge
call
and
test
std
mov
push
movsb
sub
mov
push
cmp
push
adc
add
jl
loope
cwtl
int
push
mov
stc
test
sbb
pusha
arpl
lret
and
inc
in
pusha
jno
pop
jg
lret
out
mov
xlat
cld
push
jne
inc
rclb
pop
andb
rcl
aam
push
cmpsb
shrb
or
iret
xchg
sbb
and
insb
test
cltd
in
pop
lcall
arpl
cmp
add
or
pop
xchg
sbb
iret
insl
mov
lods
bound
jge
lret
jmp
loopne
adc
lea
push
cld
inc
mov
cmpsb
jno
in
movsl
icebp
dec
mov
inc
arpl
sub
shlb
xchg
xchg
sub
sbb
enter
inc
shl
std
cld
jbe
test
mov
add
sti
pop
adc
repz
fcoml
pop
leave
fimull
pushf
aas
push
or
in
test
mov
cmp
fs
fwait
pop
jns
adc
jecxz
out
xchg
dec
cld
subl
pop
pop
ficomps
movb
nop
pop
push
pop
out
cmp
xor
lods
shll
mov
push
fdivr
add
leave
xchg
stos
jl
imul
push
cld
inc
xor
fsubl
scas
lahf
ds
aad
xchg
bound
jl
aad
pop
sbb
aaa
addr16
mov
sub
adcl
cmp
xchg
and
cld
stc
xor
or
adc
cmp
xor
dec
loope
fstps
out
dec
add
mov
loopne
js
jp
lahf
dec
mov
scas
loopne
xchg
mov
sahf
mov
mov
std
xorl
sbb
insb
insb
bound
lea
xchg
sti
cltd
cmp
je
leave
lret
negl
scas
sahf
js
adc
pop
movsb
daa
jl
mov
out
xor
inc
or
adc
gs
xchg
push
pusha
mov
mov
push
pusha
pushf
movsb
ret
add
adc
mov
inc
clc
push
sbb
int3
repnz
gs
ljmp
sub
lods
sbb
jge
addl
xchg
sti
push
imul
push
xor
mov
mov
int3
and
pusha
lret
ljmp
adc
xchg
les
inc
mov
stc
daa
cld
lods
sbb
aaa
and
loope
mov
hlt
sar
push
imul
jb
popf
or
std
adc
insb
jbe
mov
or
inc
jb
mov
push
add
insb
lcall
loopne
movsb
push
incl
cld
ds
or
cmp
in
sbb
mov
xadd
adc
arpl
stos
dec
pop
enter
pop
or
pop
mov
in
or
dec
and
cmp
inc
mov
push
cmp
out
adc
or
rcrb
lods
lock
xchg
jl
es
aaa
shlb
sub
je
xor
rorl
mov
ret
xor
pushf
aad
movsl
push
xchg
jl
xchg
and
aam
jp
in
clc
lret
jge
push
jb
push
lods
xchg
pop
push
and
insl
mov
outsb
dec
xchg
iret
stos
aam
cld
pop
outsb
sbb
stc
popf
pop
fcompl
popf
cmpsb
add
mov
pop
lret
jl
jl
sub
cmp
push
push
ret
sbb
scas
mov
outsl
pop
sahf
loop
scas
xchg
cmp
cld
pop
stos
sub
into
pop
mov
std
nopw
cmp
mov
subb
lds
xchg
dec
push
data16
repz
cs
jmp
or
imul
jg
cmp
daa
sub
fldcw
daa
movsb
mov
mov
sub
dec
mulb
es
pusha
pop
adc
bound
inc
ss
test
sub
pop
lahf
adc
cld
stos
mov
inc
sub
in
test
std
push
loop
into
push
cmpb
test
mov
jbe
imul
add
into
jmp
out
loop
aaa
jl
fisttpll
js
iret
sub
sarl
je
sti
cltd
and
pop
out
cmpb
inc
int
mov
push
add
lods
cmp
sub
test
mov
jbe
xchg
icebp
pusha
dec
sub
rclb
sub
pop
out
push
pop
xchg
scas
mov
pop
daa
mov
cmp
std
pop
mov
cmp
add
cmp
int3
imul
xchg
dec
push
adc
cltd
cmp
xor
loop
fsubrs
out
sbb
test
int
pop
dec
aaa
jg
lea
mov
jl
iret
cmpsl
addr16
pop
hlt
and
in
imul
enter
gs
lahf
jg
jo
push
lret
mov
jl
sti
cmp
pusha
mov
dec
pop
dec
sub
inc
jne
cmp
mov
push
stos
mov
jp
push
sbb
xchg
fnstcw
inc
ss
arpl
sbbl
int
test
aas
lods
sarl
flds
sbb
leave
and
std
pop
pop
repz
xchg
lea
incb
cmp
arpl
cwtl
les
xchg
leave
push
mov
sub
popf
outsb
movsb
mov
jae
pushf
bound
sbb
or
cmc
rorl
sub
dec
loope
push
das
lret
jmp
dec
movsl
and
std
lds
or
and
cmp
mov
inc
into
add
test
popa
mov
jmp
rcrb
adc
popf
mov
pusha
std
cmp
mov
xor
pop
cmp
ss
je
shrb
push
imul
push
pop
mov
cmp
inc
or
inc
xchg
or
in
sti
sbb
roll
push
jns
popa
jb
cmpsb
xchg
movsb
jne
xor
addr16
orl
add
neg
xchg
imul
pushf
sbb
jg
imul
jmp
cmp
push
lret
loopne
cmp
orl
adc
cmp
loop
lcall
xchg
or
and
std
sbb
fwait
stos
out
jb
cli
add
jl
or
push
jg
cmp
dec
shrb
in
xor
push
sub
or
push
sbb
mov
hlt
push
and
jl
add
push
jo
cld
inc
and
mov
enter
leave
popf
gs
push
sub
sbb
lods
ss
rorl
push
cmp
mov
push
cwtl
aad
cld
push
jo
dec
sahf
mov
iret
dec
xchg
add
pusha
mov
inc
lods
push
lret
cmp
test
xor
pop
daa
fcomps
sbb
in
rclb
xchg
test
add
rolb
pop
int
jnp
insl
xor
xchg
scas
bound
xchg
push
add
jmp
scas
add
out
and
mov
out
lock
push
leave
and
es
jp
and
mov
push
repnz
adc
into
test
lret
enter
imul
lret
std
sub
loop
pop
rcl
mov
pushf
push
and
popa
fsubrl
pop
inc
mov
mov
or
pop
inc
xor
lcall
xchg
jg
repnz
push
mov
jle
push
cltd
rcl
out
push
std
jecxz
in
pop
inc
sarl
cmp
test
lods
add
and
sub
movb
testl
sub
sub
ret
mov
cld
aad
ds
pop
scas
jo
cmp
das
std
gs
dec
sbb
les
xchg
inc
iret
xor
imul
sahf
pop
inc
jnp
adc
jne
movsb
inc
add
and
sbb
sbb
xor
jns
mov
mov
sahf
cmp
push
inc
ffree
sub
sub
je
and
xchg
fst
sbb
pushf
in
jb
addb
cld
push
jnp
data16
notl
inc
pop
pop
dec
pushf
mov
dec
mov
or
ljmp
lods
mov
push
jmp
movsl
pop
or
loopne
mov
mov
stos
arpl
mov
push
arpl
lods
cwtl
lea
inc
rcrl
shrl
xchg
xor
and
jge
sub
cs
iret
pop
movsb
mov
ss
xchg
out
imul
jmp
popf
dec
adc
push
aas
lret
cld
xchg
test
mov
nop
xor
or
pop
mov
jp
movsb
sahf
std
cmp
pop
dec
dec
jl
push
jnp
add
mov
jl
dec
sbb
in
pop
mov
sbb
test
setle
push
and
aad
push
cmp
ficompl
push
and
push
and
divb
mov
mov
es
cmp
pop
jmp
in
cmpsl
pop
xchg
xor
sub
pushf
sub
mov
sbb
mov
mov
ja
gs
adc
iret
repz
adc
pop
cli
shrl
test
inc
mov
mov
jg
xor
popa
movsb
adcb
repnz
cmp
rorb
add
ret
push
sub
or
or
popf
add
sbb
inc
sbb
ds
aas
add
lcall
fnsave
or
ljmp
roll
cwtl
and
roll
dec
sbb
and
jecxz
test
in
fcompl
je
cmpsl
push
jle
and
xchg
popa
push
mov
jmp
hlt
pop
ret
pop
pushf
out
and
sub
jl
hlt
call
ret
daa
mov
cmp
inc
rcr
sti
adc
in
sub
mov
and
lret
pop
std
jg
fsubs
and
fstpl
xor
ret
mov
add
mov
push
jl
xor
jge
lcall
and
sbb
sbb
adc
std
mov
jl
icebp
or
pushf
mov
push
movsl
pop
jge
outsb
fstl
js
fsubr
cld
outsb
out
outsl
repnz
mov
fcomip
mov
ljmp
adc
js
and
xchg
or
in
and
cmp
out
loope
shrl
cmp
mov
insl
sub
popf
jmp
pop
jno
outsl
cmc
addl
cld
pop
jp
or
mov
inc
popf
dec
out
xchg
pop
adc
push
adc
cltd
std
aam
push
push
xchg
stos
and
xor
cld
mov
xchg
dec
stos
pop
mov
push
leave
es
mov
and
enter
mov
cmp
adcb
repz
hlt
cld
inc
stos
mov
aas
mov
test
scas
out
cltd
fwait
arpl
out
jnp
gs
lcall
imul
add
pop
sbb
inc
je
and
test
cwtl
push
mov
mov
test
push
cmp
cld
repnz
dec
inc
lcall
pop
insl
cmp
cltd
cld
mov
clc
jb
mov
jae
pop
mov
inc
push
mov
sbb
data16
xchg
or
push
pop
faddl
lock
outsb
mov
xchg
lods
std
sbb
es
push
scas
cmc
mov
inc
in
cmpsl
sbb
faddl
mov
je
cwtl
out
in
adc
jmp
fwait
inc
stos
cmp
xchg
idivb
jns
es
inc
data16
dec
into
pop
jle
adc
xchg
shrb
pop
xor
lret
add
fnstsw
loopne
inc
lds
xor
sub
repz
push
mov
add
je
mov
jbe,pt
inc
sbb
or
pop
and
sarl
add
gs
std
fwait
inc
dec
push
filds
sbb
jl
mov
lds
gs
fsubl
cmp
push
int3
rcrb
setnp
cmp
mov
and
sub
sub
aam
jl
mov
xor
pop
sub
pop
mov
ucomiss
xor
movsb
add
repz
xor
mov
push
sbb
xchg
cmp
out
and
and
iret
mov
idiv
cmp
int
call
cmp
sti
ret
cld
sub
or
je
mov
mov
dec
std
inc
xor
xor
pop
fsub
push
test
int3
out
dec
sbb
repnz
cmp
xlat
shr
movsl
in
push
push
loopne
lahf
push
imul
sub
movsb
jb
inc
xchg
cmc
mov
push
test
pusha
xchg
push
jbe
mov
add
mov
cmp
fsts
cmpsb
fisubrs
or
mov
pop
pop
add
std
mov
lret
and
jmp
mov
mov
cld
pop
push
nop
ret
je
and
inc
jno
mov
ja
sbb
mov
rcll
loope
in
lcall
sbb
lea
mov
fcomp
lea
iret
or
add
push
jbe
push
mov
mov
sbb
out
inc
pop
test
push
sub
cld
mov
mov
jmp
rcrl
cwtl
std
xchg
movsl
or
popf
lret
push
sub
mov
je
sbb
cld
repz
cltd
shll
inc
mov
aad
sub
sbb
es
fcoms
mov
mov
pop
pop
add
and
std
lahf
pop
test
mov
out
fisubs
adc
pushf
bnd
mov
popf
data16
jmp
jnp
aad
inc
outsb
aaa
incl
inc
les
insb
iret
mov
insl
cmp
pushf
sub
push
adc
jo
cmc
std
stos
xchg
xchg
lds
cmpsb
sub
sub
add
cltd
cld
outsl
sarl
hlt
mov
lret
mov
pop
imul
inc
sarb
outsl
jbe
or
sbb
push
loopne
pop
mov
mov
inc
nop
fcompl
int
jge
jecxz
into
stos
mov
pop
fdivrp
arpl
mov
outsb
faddl
and
inc
arpl
fs
cmpsb
jg
jo
dec
in
repz
lea
adc
sbb
pop
or
mov
or
jns
movsl
sub
mov
imul
sbb
sbb
rcll
adc
or
mov
pop
inc
int3
stc
pop
mov
mov
fwait
mov
lahf
in
or
pusha
cmpsl
xchg
jno
push
xor
adc
stc
pop
std
popf
aam
iret
in
jno
shll
lods
incb
xchg
inc
adcb
and
jl
shll
inc
push
sub
cs
arpl
mov
dec
or
mov
adc
sbb
jno
popf
dec
mov
imull
xchg
jno,pt
idivl
adc
jbe
jecxz
add
imul
out
push
mov
lods
dec
std
or
adc
rcr
fildl
fcomip
xor
jmp
xchg
out
loop
and
adc
incl
or
cld
pop
mov
mov
imul
xchg
xlat
adc
sub
mov
xor
dec
int
pop
pop
mov
push
aad
mov
das
outsl
xor
pop
std
cmp
mov
xchg
adc
jle
test
shll
rorl
stc
fwait
push
mov
scas
cld
cwtl
mov
push
iret
imul
je
xlat
insl
jns
leave
in
sbb
arpl
shl
movups
std
aaa
cmpsl
loopne
mov
push
icebp
mov
hlt
pop
in
and
cmp
jg
jne
ficompl
adc
pop
mov
or
mov
adc
jp
in
insb
testl
jbe
pop
sub
in
jg
ja
je
push
pop
cmc
mov
inc
add
adc
out
jg
jbe
movsb
adcl
xor
adc
adc
stos
xchg
xor
test
cmp
in
test
movsb
xchg
adc
dec
dec
je
sub
cld
xchg
jecxz
inc
movsb
adc
push
mov
xlat
mov
mov
in
add
shlb
cmp
pop
aam
cwtl
xchg
movsb
lds
and
xchg
aad
xchg
cmp
test
into
hlt
push
sbb
jl
cmp
and
bnd
lods
mov
sbb
add
jl
movsb
nop
sub
pushl
je
mov
mov
pop
adc
sbb
movsb
loope
add
adc
xor
pop
inc
je
mov
lea
int3
movsb
sbb
daa
adc
ficoms
xor
shlb
es
sub
inc
cmp
jne
xchg
adc
nop
sub
mov
ja
cwtl
xchg
in
dec
cltd
aas
sub
add
add
xchg
xchg
fdivl
pop
ja
aam
push
push
xchg
xor
hlt
ds
mov
js
movsb
and
cmp
addr16
xorl
mov
call
jle
push
mov
sub
jns
adc
mov
adc
mov
sbb
jg
jnp
aam
inc
sbb
sbb
push
adcb
xchg
mov
hlt
dec
push
xchg
pop
int3
ja
xchg
push
orl
jne
clc
cld
ss
leave
sbb
or
push
lods
cmp
in
cs
sub
popf
aam
jne
imul
sbb
bound
in
xlat
ds
push
inc
imul
cmpsb
xchg
mov
je
pop
lods
sub
xchg
jns
push
push
loopne
inc
mov
sub
jge
push
andl
stos
movsb
inc
inc
add
xor
adc
xor
push
push
enter
out
movsl
add
je
inc
and
mov
mov
fsubl
inc
sub
dec
dec
and
sahf
aad
sub
test
loop
add
in
push
sbb
lcall
sbb
jno
data16
xor
inc
ficoms
mov
sub
nop
cmpb
and
insl
cmp
xchg
nop
push
data16
in
inc
pop
movsb
push
jl
je
test
in
lahf
or
xchg
pop
std
fwait
lock
sub
and
sbb
cmp
add
sub
in
xchg
inc
movsb
mov
pop
fistps
je
sbb
sbb
adc
les
or
adc
clc
or
insl
xchg
and
pushf
xchg
add
pop
imul
xchg
sbb
sbb
inc
imul
sbb
xchg
int3
push
jg
dec
push
lfs
jnp
je
and
mov
daa
inc
movsl
sbb
je
xorb
sbb
dec
pop
cld
mov
lds
in
in
ss
mov
incb
cwtl
aam
adc
mov
notl
hlt
aas
xlat
clc
sbb
je
lods
pop
test
out
in
lods
cwtl
push
pop
mov
or
sub
sbb
lea
sub
and
je
pushf
cmp
xor
movsb
loopne
int3
pop
jb
ljmp
mov
out
fistl
or
pop
mov
popf
and
pop
dec
andl
add
aam
in
jg
cltd
jmp
cmp
stos
in
jp
aam
movsl
push
je
mov
enter
add
xchg
push
int3
jp
movsb
lret
inc
out
loopne
ja
mov
pushf
pop
sbb
xlat
sub
dec
daa
mov
dec
xchg
cld
adc
sbbb
adc
inc
imul
out
sbb
add
push
jne
sbb
jg
push
xchg
pop
or
xchg
in
int
and
jne
lods
jge
inc
into
pop
movsb
aam
adc
cmp
sub
pop
dec
mov
mov
mov
push
iret
dec
pop
pop
sub
in
dec
jmp
push
sbb
adc
outsl
cmp
movsb
jle
or
xchg
std
jp
dec
cld
adc
nop
nop
push
cmp
rclb
and
fs
mov
or
jecxz
test
int3
addl
jecxz
sub
jl
xchg
inc
movsl
je
test
and
mov
jnp
cld
sub
es
movsb
int3
js
push
stos
cmpsb
lea
xchg
js
sub
addr16
and
ja
adc
or
stos
pop
cld
cmp
lods
loopne
xor
les
cmp
push
cld
sbb
enter
les
xor
sbb
xchg
jge
mov
cmp
sbb
add
loop
in
int3
aas
and
add
and
push
andl
aam
pusha
in
fs
sbbl
xchg
add
and
adc
movsb
pushf
adcb
addb
sub
mov
mov
aad
int
aad
aam
dec
lea
fcoms
fs
pop
and
out
mov
and
cmpsb
xor
xchg
and
push
mov
daa
les
or
and
jg
movsb
inc
movsb
adc
fcmovnbe
mov
cwtl
es
jl
and
pop
rolb
adc
sbb
nop
loope
pop
in
mov
and
movsb
rclb
out
out
pop
ss
aam
cld
fldcw
or
xchg
cmpsb
js
int3
fdivrl
pop
adc
adc
cld
inc
mov
sbbl
pushf
lods
aaa
rclb
movsb
add
or
sbb
and
jnp
cmp
xchg
cmp
js
jp
in
mov
mov
inc
fadds
mov
cmp
jp
je
mov
leave
sub
push
addl
xchg
add
aaa
inc
xchg
mov
cmp
push
mov
pop
push
mov
jp
andb
cmp
movsl
or
fldt
push
or
test
jnp
aam
shlb
mov
or
test
mov
mov
je
mov
testb
inc
mov
std
das
pop
out
pop
mov
fmull
dec
ljmp
jae
sbb
adcl
js
in
jl
sub
into
es
mov
cmpsb
xlat
cwtl
jg
add
xchg
push
popa
mov
xor
push
xor
outsb
clc
pop
push
add
push
and
cli
test
and
movsb
aaa
or
ror
fdivl
adc
addr16
cs
xlat
lods
insb
xor
jge
jl
jmp
mov
dec
pushf
lods
sub
mov
push
sub
je
andl
fs
mov
mov
cmpxchg
in
test
jbe
mov
mov
in
lods
cltd
jecxz
cli
mov
dec
es
adc
les
sbb
imul
in
ss
mov
ja
fsubl
jmp
add
add
lock
cltd
mov
fistpl
movsb
xchg
hlt
gs
or
and
nop
push
push
lods
sub
inc
dec
push
shll
adc
or
and
negb
cs
les
mov
jnp
inc
dec
xchg
icebp
mov
imul
out
jnp
inc
push
hlt
ss
cmpl
nop
mov
push
sbb
and
in
jne
inc
repnz
pop
dec
je
leave
negb
adc
push
fdivrl
inc
aas
jge
in
fdivs
adc
mov
mov
rcll
push
sbb
mov
xchg
push
data16
fildll
stos
cmp
je
or
sbb
mov
ja
jbe
dec
pop
inc
push
pusha
stc
pushf
inc
test
mov
hlt
fiadds
test
fadd
lea
or
sbb
xchg
push
les
cwtl
sub
xlat
subl
sub
and
icebp
sbb
xchg
cmp
xlat
dec
fs
hlt
loop
sub
jp
mov
sub
jnp
pop
sbb
pop
and
in
xchg
dec
cmp
push
adcl
lock
pop
pop
mov
lods
xor
mov
mov
fdivp
and
movsb
mov
xchg
dec
rcrb
js
nop
xchg
jl
enter
adc
lea
push
inc
outsb
ja
loopne
push
jbe
and
pusha
in
pop
dec
xor
xor
in
in
mov
mov
imul
sub
movsb
adc
mov
sbb
cmp
andb
push
movsb
stos
icebp
inc
fdiv
push
and
les
sbb
subb
mov
mov
add
adc
cwtl
in
xor
sbb
adcl
dec
inc
adc
add
sub
or
inc
add
jns
cmp
add
sub
je
cld
fstps
push
int3
dec
xchg
loope
cmp
movsl
mov
mov
xor
cld
and
in
and
sub
sbb
cmp
js
pop
clc
fcmovu
push
mov
cmp
cld
adc
stos
scas
inc
dec
cmp
jne
jge
ss
cmp
pop
je
addr16
outsb
xor
mov
mov
adcb
scas
cmp
inc
xor
xchg
lods
jecxz
jp
les
inc
sbb
mov
loopne
int3
sbb
lods
dec
les
aad
pop
xor
stc
sbb
inc
les
push
mov
shrb
jno
movsb
int3
aam
jl
loop
lds
cmp
mov
in
in
aam
or
lock
cs
dec
sub
xchg
rcrl
insb
jne
lock
flds
sub
mov
shrb
xor
outsl
lret
inc
rcrb
ljmp
or
xchg
add
movsb
repnz
aad
adc
mov
es
push
jl
cmc
cmp
fdivs
xor
cwtl
test
and
je
movsb
repz
fsubl
pop
xchg
pop
int3
cmp
addr16
and
xchg
adcb
stos
push
or
in
sbb
jg
pop
inc
in
push
mov
sub
stos
cmpsb
adc
clc
aam
out
sub
cmc
sbb
and
mov
lret
insb
cli
enter
sbb
bound
hlt
dec
fucom
sub
daa
jbe
inc
adc
pop
xor
outsl
and
mov
imul
enter
enter
test
pusha
cmp
add
xchg
and
pop
clc
inc
mov
ja
fists
xor
mov
and
cmp
into
fadds
sarl
mov
adcl
push
sbb
hlt
xchg
add
nop
in
outsl
cmp
adc
popf
jns
cmp
stos
xchg
out
ret
and
aaa
lahf
cmp
mov
pop
or
mov
neg
cmp
sbb
adc
xor
cmp
xchg
bound
adc
sbb
cmp
rclb
enter
jp
aam
mov
les
insb
xchg
xor
mov
and
insl
jbe
xchg
je
xor
pop
cmp
dec
lods
inc
arpl
fisttpl
inc
sbb
jae
inc
mov
xchg
ficoml
jg
sub
xor
jle
inc
xor
insb
mov
jp
xchg
sbb
push
push
clc
sbb
jp
jl
add
push
cwtl
adc
les
sub
and
lea
aam
aas
mov
fsub
push
jl
rclb
mov
stc
push
sbb
push
je
push
loopne
push
cmp
repnz
in
xlat
pop
inc
jle
fldl
int3
mov
sbb
insl
int3
fwait
cld
xchg
xchg
idivb
jbe
clc
mov
shrb
pop
pop
je
inc
adc
mov
jnp
clc
sub
sbb
dec
mov
hlt
push
fsubr
or
ret
sbb
mov
fs
xchg
xchg
enter
aam
sbb
lock
jle
cmpsl
lods
nop
xchg
mov
sbb
mov
dec
loope
jmp
jp
mov
in
pushw
pop
mov
xor
cmp
cmp
inc
pop
dec
mov
shrl
and
hlt
cmc
sbb
mov
xchg
sbb
lods
int3
and
cld
stc
mov
sub
fiadds
push
lahf
mov
es
mov
sbb
xchg
dec
out
cwtl
imul
sbb
aam
movsl
xchg
movsl
js
aam
sub
aam
inc
es
rcr
inc
mov
stos
sub
adc
jge
sbb
jg
movsl
pop
xchg
sbb
test
setl
mov
adcl
jbe
jne
aam
insl
xor
ja
pop
imull
into
xchg
mov
and
pop
add
stc
pop
andl
mov
mov
sbb
pusha
hlt
and
call
subl
jge
add
sub
xchg
xchg
aam
or
jae
inc
clc
adc
test
push
stos
pop
sarb
jne
fs
sbb
adc
xchg
call
sub
inc
or
loopne
push
lea
sar
bound
add
jp
in
and
pop
pop
jo
js
lock
daa
add
jbe
mov
mov
stos
cmp
mov
sub
inc
fs
mov
dec
jg
mov
xor
mov
je
or
lahf
daa
insl
adc
pop
pushf
js
mov
cmp
jl
andb
pop
jge
cmp
mov
or
cmpsb
daa
mov
pushf
jle
dec
data16
and
cmp
push
call
mov
dec
mov
js
adc
ret
dec
rclb
jp
push
iret
lock
les
or
xlat
sbb
pop
sbb
lods
addb
adc
mov
inc
test
hlt
xchg
cltd
dec
outsb
inc
adc
test
sarb
jp
aam
lds
clc
and
orb
pop
jp
cmp
stos
je
cmpsl
adc
cmp
mov
movsl
mov
dec
add
sub
enter
jge
jl
sbb
insl
xor
das
mov
in
jmp
or
scas
sbb
jns
fmull
je
push
fs
inc
sti
rclb
push
dec
in
movsb
call
push
xor
push
mov
xor
push
in
dec
push
push
jp,pt
inc
push
sbb
in
les
mov
sti
imull
dec
pop
shlb
js
lock
hlt
ror
icebp
fwait
cmpsl
hlt
and
push
pop
push
fadds
rorl
and
int3
adcb
pop
cmp
lock
fstpt
inc
fdivl
mov
mov
das
in
push
mov
pop
out
push
gs
mov
push
push
pop
jbe
jg
movsb
jl
faddl
sbb
sbb
jno
inc
cmp
dec
ds
mov
je
addl
push
xor
pop
xchg
mov
lods
les
cmp
js
in
and
fs
sarl
xchg
data16
push
hlt
sub
xor
sub
sub
pop
jbe
es
jle
stc
idivb
in
pop
loopne
sbb
pop
movsb
fsubs
jmp
movb
lods
pop
xor
cld
popf
pushf
dec
mov
hlt
int
adcb
lea
pop
and
in
mov
sbb
out
xchg
leave
sbb
mov
fs
dec
inc
sub
stos
adc
add
subl
jp
pusha
adc
sarb
adc
test
cmp
ja
aam
leave
or
daa
lret
ljmp
push
dec
scas
icebp
lods
cmp
mov
addr16
sub
jp
aam
lahf
mov
hlt
xchg
hlt
loop
sbb
movsb
movsl
pop
sub
out
sbbl
xor
mov
dec
or
push
adc
or
jl
in
sbb
hlt
and
jne
pop
imul
sub
push
cld
les
movsb
adcb
dec
mov
inc
insl
and
add
adc
push
pushf
mov
mov
inc
pop
sbb
jne
cmp
pushf
sub
les
out
mov
push
sbb
xchg
pushf
and
mov
mov
in
lods
pop
xor
push
push
xor
call
test
jbe
js
and
bound
xor
je
and
dec
cli
mov
lods
add
outsb
dec
popf
mov
sub
xor
xchg
fmull
xor
movsb
faddl
jne
pop
loope
lods
shll
es
pop
fidivrs
push
mov
jl
pop
adc
test
push
and
das
pop
leave
daa
iret
xor
adc
sbb
mov
call
shlb
cltd
mov
pop
fs
mov
les
hlt
mov
pop
or
stc
outsb
inc
adc
in
cmp
insb
jnp
inc
pushf
lock
data16
pushf
lods
and
cwtl
rorb
or
xlat
cld
scas
sbb
add
jbe
push
outsl
les
cmp
les
mov
ss
data16
je
stc
add
test
jo
movsb
pushw
jb
push
cmp
je
in
pop
out
lcall
add
movsl
add
jge
mov
out
adc
cmp
mov
cmp
out
daa
push
add
test
jl
mov
mov
mov
aad
fs
and
je
test
lods
lahf
nop
es
xchg
fidivl
lods
add
dec
fsts
cmp
call
testb
push
out
lea
jne
sahf
fsubp
jg
mov
les
pop
sub
movsl
add
sbb
xchg
pop
mov
mov
xor
pop
push
and
sbb
outsl
mov
aam
inc
lds
jg
sbb
or
cmp
nop
and
movsb
xlat
in
xor
movsb
push
enter
mov
fxsave
je
mov
popf
inc
repz
dec
adc
outsl
cwtl
pop
jmp
aad
sbb
fninit
fnstenv
xor
inc
lods
xchg
xchg
mov
movsl
add
dec
or
mov
sub
add
adc
aam
fwait
jg
xor
xor
push
sbb
fstl
mov
cmp
cmp
inc
adc
aad
aas
inc
or
jle
movsb
aas
xor
fcmovb
sbb
fldln2
add
sbb
push
ds
fcoml
add
jne
clc
bound
jnp
and
and
mov
sbb
fadds
je
xor
push
leave
mov
pop
test
add
xchg
jl
sbbl
cmc
and
addb
rclb
gs
dec
push
call
add
je
inc
mov
nop
dec
js
les
out
add
and
je
sbb
sti
push
in
mov
out
aas
dec
add
aam
int
xchg
bound
dec
xchg
mov
cmp
mov
fsts
cld
sbb
xchg
test
or
jbe
subb
daa
lods
enter
sub
pop
movsb
jg
lods
xchg
and
jl
adc
nop
cmp
and
in
mov
pop
cmp
fcoml
inc
jns
das
pop
mov
bound
xchg
jae
pop
inc
dec
adc
inc
ret
mov
ja
pop
push
or
cmp
fsubr
mov
push
fists
jbe
in
jo
clc
mov
inc
movsl
push
cmp
in
test
jns
sbb
adc
xchg
inc
xchg
inc
pop
push
sub
sub
int3
adc
mov
ss
movsl
pop
push
adc
gs
sub
aad
je
cld
xchg
pop
cwtl
sub
mov
pop
js
push
andl
xchg
ret
sbb
in
loop
sbb
inc
push
jne
mov
sarl
sbb
or
pushw
jbe
cld
push
pop
mov
mov
lods
sub
and
jbe
mov
xchg
bound
push
mov
int3
hlt
mov
xchg
mov
adcb
jg
jo
pop
push
je
push
adc
shrb
jmp
fisttps
es
sub
ja
cmp
sub
pop
inc
adc
add
shrb
jg
loope
in
mov
mov
pop
jnp
xor
ds
inc
pop
jne
adc
push
fwait
push
aad
fs
hlt
jbe
jns
add
mov
loopne
jo
adc
les
or
in
xchg
test
adc
roll
xchg
pop
mov
sbb
popa
loope
scas
je
cld
adc
punpckhwd
adc
cmp
dec
xchg
dec
dec
cmp
mov
in
xor
inc
daa
mov
les
in
je
int
rclb
jp
mov
push
cmp
dec
push
dec
push
idivb
sub
ds
rol
je
enter
je
inc
adc
lret
jge
add
lahf
sub
pop
and
and
sub
xchg
inc
aad
xchg
dec
cmp
test
sub
and
adc
ljmp
push
loope
and
in
mov
addr16
sbb
fs
pushf
push
sub
sbb
pop
pusha
lea
shlb
xorl
jge
push
cmp
je
sti
dec
dec
xor
pop
je
mov
imul
test
lahf
movsb
hlt
pop
or
sbb
sub
adc
xlat
jge
xor
or
mov
aad
xor
cmc
adc
adc
adc
mov
and
cmp
adc
hlt
and
movsb
cmp
fistps
sbb
add
fsubs
dec
push
cmp
or
int3
push
xor
mov
in
xchg
fs
mov
aam
xor
gs
movsb
xorb
orb
scas
in
pop
fnstenv
cmp
daa
aam
mov
hlt
sbb
push
add
enter
stos
mov
dec
scas
stc
inc
mov
push
xchg
cmp
pop
inc
xor
stos
push
add
jge
sbb
in
shr
and
loop
lcall
pop
sbbl
cmpsb
push
mov
jge
je
push
fucom
cmpsl
fcoml
pop
add
push
arpl
or
push
jae
push
repz
pop
and
rcr
dec
or
inc
pop
adc
les
sbb
sub
cmp
pop
out
inc
stos
test
enter
enter
jbe
mov
dec
push
sahf
and
jle
lahf
lods
jl
in
pop
cmpsl
mov
nop
loopne
sbb
add
jb
sbb
add
cmp
loopne
sub
pop
and
aam
loop
mov
push
push
pushf
inc
xor
xchg
hlt
addr16
daa
test
movsb
js
or
adc
sub
sbb
fstp
jg
cwtl
and
mov
pop
sbb
mov
fcompl
sub
daa
pushf
sti
mov
push
jp
cmp
mov
call
jbe
adc
sub
icebp
cmp
lock
dec
push
imul
ss
arpl
loope
aam
push
sbb
fdivrs
xchg
mov
push
inc
cld
xchg
push
outsl
fdivl
test
and
xor
inc
xor
js
and
movsl
in
clc
loopne
test
loope
dec
sbb
pop
int3
sbb
mov
leave
outsl
sub
hlt
sbb
sbb
sub
xchg
es
test
pop
inc
daa
repz
jnp
pushf
sub
pop
sarl
inc
vunpcklps
add
stos
lods
pusha
cmc
and
push
dec
sbb
gs
inc
lods
and
xchg
lea
cmp
inc
fmul
add
and
push
jbe
and
icebp
pop
es
mov
jg
ja
inc
and
sbb
sub
mov
push
mov
fnsave
out
add
jle
adc
xor
test
push
fwait
dec
test
fs
mov
xchg
addr16
adc
nop
cwtl
aam
les
jne
loopne
aaa
daa
jbe
jmp
fcoms
sub
jns
dec
clc
fsts
adc
or
test
pop
lahf
cwtl
push
loopne
mov
xchg
sbb
jl
mov
push
lds
jnp
movsb
sbb
push
js
sbb
and
adcb
push
push
js
xchg
lods
mov
jne
and
aad
lods
je
sub
add
lock
sub
inc
pop
rorb
out
sbb
adc
jnp
inc
mov
adc
xchg
sub
repnz
lods
orb
loopne
sub
loope
pop
inc
xchg
add
or
mov
test
mov
inc
js
push
jae
xor
je
mov
pop
adc
mov
jnp
inc
add
lcall
sub
mov
loope
imul
dec
movsl
je
inc
add
mov
in
into
fcompl
xor
test
sbb
xchg
ret
mov
shll
pop
xor
and
add
aam
sbb
sbb
outsb
fisttpl
aam
ret
outsl
repz
dec
push
pop
mov
les
or
mov
inc
lods
hlt
add
fisubs
mov
mov
movl
xchg
in
sbb
or
mov
icebp
mov
cmp
lods
popf
mov
aam
je
nop
xchg
add
adc
xor
mov
imul
sub
mov
inc
rcrb
movsb
adcl
and
movb
pusha
inc
xchg
int3
test
pop
pop
jno
aas
cwtl
fsub
inc
les
sbb
push
sbb
dec
xchg
fwait
movntps
je
aam
pop
jp
je
ja
dec
lods
xlat
lods
and
aad
add
loope
mov
test
pusha
in
fildll
lcall
sbb
cmp
dec
movsb
sub
and
mov
inc
jne
lcall
mov
in
sub
int3
xor
mov
xor
push
in
adc
sbb
repz
fidivrl
insb
mov
inc
xor
sub
push
data16
sbb
loopne
add
pushf
jmp
roll
test
xor
hlt
je
dec
int3
xchg
cmp
je
cmp
inc
stos
jp
sbb
sub
sub
sub
hlt
sahf
movsl
fs
lods
sub
sbb
lcall
add
js
mov
cmp
addb
cs
fstpt
pop
mov
jnp
add
add
outsb
jmp
cmc
pushf
enter
push
mov
movsl
je
mov
cli
daa
pop
dec
mov
in
jg
mov
xchg
sub
loop
aam
inc
sub
mov
mov
adc
nop
aas
xor
push
or
add
shlb
pop
ficoms
adc
add
dec
je
stos
sub
inc
xor
dec
or
je
adcl
jae
inc
sub
mov
movsl
mov
pushw
sbb
repnz
stos
sub
cmp
aam
sbb
mov
sub
add
jb
loopne
cld
xor
add
jmp
je
jl
loop
cmc
mov
xchg
jae
inc
push
mov
inc
mov
push
adc
int3
push
dec
pusha
inc
int
lea
xchg
hlt
ss
push
inc
mov
cmp
or
clc
pusha
int3
ljmpw
xchg
mov
push
push
int3
pop
jnp
cmp
jle
or
sub
icebp
movsl
stos
jns
mov
clc
nop
pop
daa
sbb
sub
je
mov
pop
and
xchg
pusha
xchg
adcb
test
push
daa
mov
fsubl
mov
pop
jl
cmp
jno
data16
stc
mov
mov
jo
lods
mov
inc
cmp
mov
test
faddl
or
pop
mov
sbb
andl
push
in
hlt
sbb
xchg
icebp
mov
cli
xchg
push
mov
push
inc
add
sub
lock
pop
lahf
or
outsl
insb
mov
or
test
pushf
xchg
hlt
pop
push
cmpsl
rcll
test
add
mov
pop
jnp
lock
call
inc
xchg
jge
les
imul
fmuls
sbb
sub
xor
jg
mov
and
inc
imul
mov
push
and
test
sbb
cmp
xchg
les
jg
ja
cmp
clc
adc
pushf
add
repz
pop
add
jbe
cld
daa
pusha
mov
adc
int
loopne
jae
shll
mov
pushf
jl
and
das
mov
or
cmp
aas
int3
test
push
js
and
push
mov
sbb
hlt
sti
jg
outsb
js
aam
or
inc
xor
adcb
hlt
jle
lcall
or
jg
sbb
and
aas
test
inc
movsl
push
push
in
ds
cwtl
lahf
inc
xchg
mov
adc
testb
loopne
sahf
sbb
subl
scas
fld
aas
jns
fxch
scas
in
pop
lock
or
in
cmp
jg
mov
loopne
mov
adc
cld
hlt
pop
cltd
inc
push
fdivrl
pushf
lods
in
push
cmc
xor
hlt
sub
mov
inc
outsb
sub
outsl
jbe
adc
in
cmc
hlt
or
jl
or
lock
inc
mov
pushf
mov
pusha
ja
lock
sub
jl
nop
cmp
dec
push
bound
adc
aaa
mov
fadds
or
call
pusha
jl
aad
adc
hlt
add
dec
adc
jne
mov
pop
and
js
hlt
sbb
les
mov
fcomps
mov
inc
mov
pushf
lods
push
sbb
fadds
les
stos
inc
adc
es
inc
mov
dec
sub
mov
xchg
les
and
mov
inc
jne
lock
xchg
dec
daa
gs
adc
push
sbb
dec
sbb
sub
jg
in
in
out
inc
jo
xorb
xor
jle
sbb
lea
shl
sub
aad
sbb
and
xchg
sbb
cmp
jo
iret
mov
out
aad
inc
cwtl
xchg
hlt
fnstenv
insb
sub
cmp
int3
add
jnp
pop
push
xor
jmp
inc
dec
sub
and
jo
cmp
cwtl
inc
sbb
push
xlat
dec
inc
cmc
jo
push
mov
sti
adc
cmp
jb
or
mov
adc
ds
bound
aam
pop
mov
sbb
js
jl
jp
add
fs
movsb
xchg
movsb
sbb
stos
jbe
or
mov
clc
push
inc
xor
enter
pushf
cmp
push
loope
lods
jl
mov
icebp
lcall
cmp
mov
sbb
stos
mov
jbe
cmp
fdivs
xorb
cmc
jno
mov
push
sbb
addr16
pop
mov
add
pusha
test
xchg
fdivl
add
ljmp
in
out
mov
xchg
movsl
les
les
xchg
add
dec
idivl
lret
add
enter
mov
sbb
pop
das
push
js
lock
fsub
es
dec
sub
bound
sub
or
movsl
jbe
mov
push
popa
push
cmp
repnz
push
xchg
cmp
adc
inc
adc
pusha
mov
dec
inc
in
test
xor
cmp
or
lret
insb
cmp
sub
hlt
cmpsb
sbb
jns
adc
nop
sbb
and
je
dec
in
sub
lods
push
xchg
fildl
rorb
mov
cmp
jne
movsb
adc
mov
and
cmp
daa
lret
lahf
mov
sub
or
mov
pop
push
sub
mov
out
sbb
or
push
and
sub
mov
jns
aad
mov
jnp
cmp
cmp
enter
pop
jae
pop
xor
in
je
add
outsb
fcmovnu
hlt
add
cmp
jno
hlt
out
fwait
imul
push
nop
mov
push
popa
in
cld
xchg
push
les
cmp
jecxz
push
push
mov
jecxz
adc
rolb
lea
in
xor
add
push
fbstp
divb
cmp
sbb
add
sub
cwtl
mov
and
adc
sbb
push
enter
fimuls
push
xchg
aaa
jecxz
enter
or
add
inc
xor
movsb
sbb
insl
push
cmp
js
test
adc
adc
cmp
hlt
and
lds
xchg
pop
jbe
stos
int3
pop
push
sbb
and
add
xchg
cld
inc
enter
lds
orb
inc
mov
mov
add
cmp
xchg
addl
andl
std
jbe
inc
sub
sbb
cld
cld
popf
popa
pop
or
pop
clc
adc
rcr
jbe
fdiv
sub
mov
pop
les
in
call
lods
pop
aam
sub
adc
inc
scas
je
lea
fnstsw
mov
pop
test
les
mov
lods
shlb
xor
or
in
push
in
add
and
jg
xchg
das
pop
inc
hlt
push
stos
add
jne
jp
les
inc
icebp
lret
xchg
int3
mov
cmpb
lods
in
daa
xchg
cmp
or
mov
lahf
jne
lods
je
pop
insl
push
daa
jecxz
jbe
mov
fisubs
in
push
insb
cltd
jnp
and
jl
daa
inc
and
or
dec
and
and
lods
or
lret
xor
lcall
or
jl
inc
mov
test
push
cmc
jbe
je
sub
dec
xchg
dec
cmp
in
je
sub
inc
mov
mov
lods
nop
xchg
js
aam
sbb
mov
movsl
fnstcw
lea
add
xchg
inc
or
jae
jne
mov
in
xor
in
add
push
shl
lahf
add
jno
mov
or
mov
ds
clc
xor
cli
das
repnz
pop
jbe
sub
es
in
addr16
pushf
hlt
xchg
pop
imul
lock
call
sub
stos
je
jae
je
je
cwtl
sbb
xor
mov
shrb
dec
pop
jge
cwtl
sub
ljmp
jmp
and
adc
mov
xor
js
lea
xor
jne
sub
cmp
cmp
push
sahf
fisubrs
push
push
lahf
sub
push
inc
in
push
xor
mov
pusha
xor
ss
adc
cli
and
bound
xchg
fnstsw
les
push
dec
cwtl
sbb
jp
or
sbb
and
add
aam
inc
jp
dec
js
mov
or
nop
push
pushf
push
cmpsl
sub
adc
jge
loope
xor
dec
stos
mov
in
xchg
in
aam
sbb
add
inc
xor
jb
pushf
or
xchg
dec
sub
mov
sbbb
push
and
mov
inc
mov
xchg
pop
hlt
test
sti
mov
int3
xchg
xchg
mov
fs
fstp
or
imul
mov
lret
and
adc
and
nop/reserved
fistpll
sub
push
jnp
fs
push
cmp
sub
movsb
in
jne
in
xchg
dec
das
inc
aam
push
dec
jne
xchg
lods
jg
jl
inc
out
xor
jl
in
sub
cmp
inc
testl
xchg
mov
sbb
sub
adc
mov
mov
call
sbb
ljmp
jl
mov
aam
sub
mov
sbb
cmp
lea
inc
int3
jl
fdivrl
cmp
push
pop
movsb
inc
or
inc
cmp
jnp
xchg
xchg
cmpsl
ja
sub
js
call
pop
sbb
xchg
pop
dec
insl
or
test
sbb
pop
ja
xor
inc
fs
popa
sbb
fdivr
add
inc
call
mov
mov
add
mov
pusha
loopne
enter
mov
adc
jmp
add
mov
sarl
loope
clc
dec
sbb
pshufw
inc
sbb
out
push
fwait
and
je
add
faddp
je
dec
neg
cmp
pop
sbb
sarl
adc
lea
inc
adc
jg
push
es
jo
mov
dec
jge
in
or
xlat
sti
stos
in
push
int3
out
mov
jns
adc
jl
lods
xchg
sub
mov
loopne
sub
ret
hlt
add
dec
push
lahf
lods
stos
xchg
adc
je
fildl
jp
inc
sub
std
pop
sub
sbb
mov
jmp
cmp
repnz
pop
hlt
push
add
mov
sbb
or
inc
test
push
cmp
adc
imul
pop
je
in
cmp
xor
pop
jle
or
les
les
int3
fwait
cmc
jl
mov
pusha
lea
add
daa
jp
je
in
xlat
sub
jg
pop
fildl
jle
inc
je
push
dec
js
stc
push
and
test
pop
push
xor
cmpsb
sub
mov
adc
mov
adc
lods
mov
mov
cld
dec
pop
enter
cwtl
xor
pop
aas
jl
mov
jg
test
je
dec
and
xchg
add
or
fs
lea
rclb
sub
sbb
es
cmpsb
ret
inc
mov
xor
sbb
ds
in
js
aam
test
xchg
es
rcr
js
sub
pop
stos
negb
movsb
leave
inc
jno
and
and
and
xchg
or
ljmp
mov
or
pushf
and
cmp
loopne
out
mov
pop
cmp
mov
sub
bndldx
sub
inc
aas
jp
cwtl
mov
pop
cmc
jg
ja
test
cmp
mov
fcompl
dec
jns
xor
in
out
shrb
jnp
dec
clc
xchg
xchg
in
push
mov
dec
adcb
sbb
cmc
adc
mov
adc
fwait
ja
pop
sbb
out
pop
sbb
call
add
pop
xchg
adc
js
adc
cld
sbb
cmc
push
mov
pop
clc
pushf
or
enter
clc
add
push
cld
in
push
mov
or
adc
bound
cmp
outsb
add
aas
mov
jns
mov
decb
movsb
lods
cld
mov
int3
in
sbb
out
icebp
test
pop
test
ret
test
out
push
lahf
xchg
pop
add
add
fcompl
shrb
cwtl
sbb
sub
inc
xchg
or
mov
adc
or
jne
mov
sub
call
aam
ret
in
arpl
inc
lock
shlb
mov
int
lret
jnp
mov
mov
adc
jmp
js
jns
scas
cmp
outsb
xor
dec
pop
ljmp
or
mov
aam
mov
push
divl
hlt
cs
pop
push
xchg
call
cmc
pop
mov
dec
arpl
pushf
in
sbb
or
movsl
jg
adc
sub
mov
and
inc
sbb
add
xchg
loope
xchg
out
lods
add
icebp
es
mov
dec
lods
jp
les
in
xorl
dec
adc
bound
les
lret
lods
enter
fsubl
movsl
repnz
mov
in
cmp
lea
sub
mov
xchg
int3
jb
push
mov
mov
nop
addr16
mov
jbe
jnp
cld
enter
mov
movsb
sub
jl
mov
or
lahf
dec
cmp
fwait
push
inc
repz
loopne
test
mov
shlb
push
mov
faddl
cld
lods
jbe
mov
sahf
or
cmp
pop
sub
and
push
jne
add
xchg
int3
lea
enter
into
xor
les
dec
pop
push
jbe
test
stos
fcom
in
adc
loope
mov
or
es
jp
adc
pushf
ret
xchg
or
hlt
mov
push
mov
popf
and
mov
push
push
or
nopl
jo
lods
jne
sbb
cld
cmp
or
mov
mov
test
sbb
nop
int
aas
xchg
ror
push
mov
js
jp
push
inc
cmc
xchg
sub
xor
aam
adc
jg
or
inc
cwtl
pop
outsb
imul
sub
hlt
mov
pop
push
lret
or
fcomp
int
nop
sbb
cmc
or
xchg
sub
add
addr16
popf
cwtl
ret
cld
bsr
mov
push
outsl
gs
sbb
add
xchg
ficompl
or
mov
sbb
mov
pop
mov
fs
and
sahf
push
sbb
jg
or
cmc
xor
call
sub
je
test
mov
nop
jp
test
push
out
cmpsb
or
insb
sub
mov
xor
adc
or
roll
push
adc
movsl
and
sbb
ss
or
test
hlt
mov
mov
inc
jo
cli
je
sub
cmp
xchg
test
movsb
int3
sub
jbe
fs
insb
or
mov
in
xchg
or
lock
sub
movsb
arpl
das
sbb
xchg
out
aam
and
insb
jnp
pop
int3
sti
hlt
inc
mov
sub
fstpt
cmp
bound
jp
hlt
inc
fdivrl
mov
sbb
inc
mov
jo
pushf
insb
mov
and
or
test
mov
push
sbb
cmp
or
and
mov
lcall
push
test
jno
or
mov
or
pop
sub
push
dec
and
sub
shrb
jp
fcomip
cmp
lock
sbb
pop
enter
daa
push
iret
push
cmp
cmp
fisttpl
addb
lret
sub
xor
xchg
mov
mov
xchg
test
enter
jnp
xor
cld
sbb
es
pop
or
lock
in
mov
iret
xor
cmp
fnop
popf
in
js
adc
jb
jns
inc
subb
outsb
xor
adc
aam
add
lret
je
pop
inc
inc
lds
out
jns
clc
fcoms
movsb
and
repnz
lock
int3
mov
jae
lods
cwtl
dec
push
xor
jns
inc
fld
inc
sbb
insb
cmp
addb
je
sbb
xchg
dec
dec
xor
sub
or
cmp
push
xor
add
test
jbe
xchg
inc
cmp
jne
xchg
fs
add
jo
cmp
sarb
jecxz
and
jnp
mov
push
jge
lret
mov
xor
adc
aas
lock
bound
fs
fwait
jmp
mov
push
cmp
cwtl
dec
push
push
sbb
lds
adc
sbb
jg
jl
movsl
fwait
mov
test
movsb
cmpsb
or
or
out
dec
ret
push
aam
lods
stos
cmp
insl
pop
dec
inc
je
dec
sub
out
push
mov
sbb
dec
clc
jbe
pop
xchg
add
loop
loope
aam
in
add
fisttps
add
aaa
nop
pushf
or
scas
sub
jp
or
mov
mov
and
pop
insb
jne
testb
pusha
cltd
sub
jle
add
jnp
loopne
dec
sbb
out
stos
jne
shlb
jnp
xor
aam
add
aaa
add
and
aam
xor
insb
aam
sbb
aas
call
mov
sub
cmp
cmp
inc
xor
jnp
sbb
push
fisttps
fdiv
sbb
cli
cld
ljmp
inc
loopne
orb
add
xor
cmp
lahf
daa
mov
inc
sbb
repnz
adc
aam
lea
cmpsl
inc
mov
cmp
push
inc
inc
cs
pusha
push
inc
mov
cmp
hlt
insb
mov
mov
insl
stc
jecxz
pop
jbe
nop
popf
sbb
or
rorl
lock
sbb
jecxz
repz
leave
mov
push
das
out
sub
out
hlt
xor
or
hlt
ds
out
pop
jle
sbb
in
test
mov
popf
aad
jnp
mov
js
adcl
lret
jge
pushf
cmpsb
sub
adc
notb
add
pushf
je
xchg
mov
add
push
dec
xor
and
cmc
stos
shlb
xchg
mov
or
mov
aam
loop
dec
leave
fidivl
hlt
scas
xor
test
test
jp
xchg
mov
stos
dec
mov
push
pushf
sti
xchg
fildl
cmpsb
sub
ds
mov
push
xor
or
mov
add
xor
inc
xchg
sbb
stos
push
sahf
mov
jbe
cltd
in
cmc
xchg
sbb
sbbb
and
add
jle
cmp
sbb
inc
cmpsb
jnp
sbbb
fdivr
arpl
push
fcomp
jnp
fcoms
xor
xorl
call
xchg
andl
stos
jmp
push
mov
fwait
dec
pop
mov
lods
adc
inc
mov
in
in
push
aam
mov
rolb
hlt
shrb
loop
inc
adc
movsl
jg
bound
mov
aam
and
push
jecxz
arpl
pop
js
sub
iret
inc
ds
int3
js
aam
inc
inc
stc
push
outsb
jbe
jl
fsubl
inc
lds
pop
fadd
jo
inc
and
aam
test
nop
mov
and
dec
fmull
lods
dec
mov
push
les
xchg
pop
jbe
movsb
push
jno
aad
mov
fcompl
and
cmp
sub
add
adc
xchg
nop
inc
aam
gs
int
outsb
sub
xor
push
out
push
arpl
jbe
inc
jbe
jns
movsl
fs
out
mov
mov
lods
nop
fmul
pop
outsl
movsb
mov
mov
jne
add
or
add
push
jl
xchg
sbb
mov
in
test
outsl
jle
or
xchg
add
jb
movsb
inc
dec
add
sub
js
lods
push
mov
mov
movsb
aam
ret
mov
xchg
adc
inc
inc
lods
test
push
pop
insb
aam
stc
jne
cmp
add
aad
xchg
inc
mov
xor
ds
adc
sbb
ret
bound
jecxz
testb
mov
call
cmp
in
rcrl
inc
sbb
nop
js
dec
adc
pop
or
test
sbb
dec
push
and
push
push
sti
outsb
aam
mov
int3
or
sbb
mov
push
push
and
faddl
and
xor
or
hlt
push
fstps
shr
pop
ret
mov
push
mov
sbb
in
pop
popa
fisttpl
fdivrs
lret
or
pop
jns
dec
xchg
in
enter
and
sbb
je
lods
push
enter
mov
aam
mov
sub
xchg
pop
sub
xlat
in
aaa
fidivs
ss
jg
jp
cli
xor
add
int
inc
je
sbb
cmp
test
jl
jge
or
daa
add
lock
pop
test
jmp
sbb
sbb
xchg
enter
add
lds
sub
test
pop
add
mov
dec
lret
xchg
add
cmpsb
rclb
jge
push
push
jp
rorb
std
push
fnstsw
dec
mov
bound
cwtl
sub
out
inc
push
sbb
jl
adc
into
cmp
lods
les
adcb
and
aad
adc
hlt
xor
js
les
jb
rcrb
mov
sub
sbb
adc
int
xor
lea
mov
dec
js
stc
jb
add
flds
jo
push
rcrb
add
shll
mov
jne
sbb
pop
sbb
pusha
push
sbb
pop
cmpl
gs
xchg
add
xor
adc
push
fbstp
mov
xchg
or
lea
mov
dec
add
mov
push
xor
loop
icebp
and
divl
mov
mov
fnstenv
mov
inc
cmp
fildll
fidivrl
push
xchg
cmp
testl
pop
push
dec
mov
inc
scas
movsl
dec
fstpt
mov
jno
enter
inc
gs
adc
in
mov
push
fcmovnbe
js
and
int3
nop
pop
lret
mov
pop
xchg
dec
jnp
push
cmp
mov
jle
sbb
cwtl
cmp
add
fnsave
inc
and
or
cmp
dec
cmp
int3
sbb
adc
fildll
sub
ja
cmp
add
mov
pop
dec
fsubrl
cld
dec
inc
pop
dec
push
out
mov
or
and
neg
sub
pop
repz
mov
jnp
daa
or
sbb
inc
scas
out
cwtl
dec
and
fsubrs
inc
mov
inc
pop
clc
pusha
jns
loopne
push
jecxz
out
in
mov
xor
lcall
addr16
adc
mov
ret
lock
jnp
dec
xor
jne
inc
sub
adc
outsb
mov
adc
dec
dec
loop
fcom
xchg
jmp
inc
and
xlat
pop
addr16
adc
nop
fxtract
sbb
adc
sub
movsb
mov
mov
sbb
ja
pop
sarb
ljmp
lock
je
push
sbb
sbb
pop
leave
push
sub
pop
sub
sbb
sti
jo
clc
xchg
les
adc
jl
mov
push
jbe
in
inc
inc
and
sbb
and
cmp
stos
leave
test
daa
mov
xlat
orb
call
cld
inc
adc
and
fadds
inc
sub
jbe
cmp
xor
ja
test
sub
push
pop
jp
loop
xchg
inc
movsb
jg
mov
mov
sub
pop
loope
add
daa
sub
out
sbb
mov
subb
les
mov
jl
pushf
je
js
fdivrl
cmp
in
or
aam
loopne
sbb
mov
and
adc
and
mov
push
adc
nop
test
fwait
jno
clc
aam
mov
dec
subl
roll
ja
cmp
mov
sub
data16
aad
pushl
ds
push
jle
in
sbb
cmp
push
or
sub
cltd
mov
arpl
fadds
nop
push
inc
fsubrs
in
or
jp
pop
sbb
mov
je
adc
mov
ds
jg
jp
pop
dec
lds
dec
hlt
mov
sbbl
insl
icebp
mov
push
jne
fdivl
push
lea
out
jnp
fstl
in
inc
movsb
addr16
mov
js
pop
sbb
hlt
xchg
sub
and
icebp
or
push
sbb
out
sub
mov
sbb
xor
sub
cmp
push
adc
fsubrs
sbbl
sbb
es
in
je
mov
hlt
in
or
imul
and
jg
fsubrl
mov
mov
adc
enter
jl
adc
cli
test
inc
in
cmp
push
jmp
xor
xchg
adc
mov
xor
xor
cmpl
insb
cmp
nop
push
sub
dec
push
push
inc
jmp
push
cmp
outsl
test
das
xor
pop
mov
test
cmp
addb
sub
loopne
inc
xor
dec
mov
les
pop
fdivl
test
add
andb
adc
adc
movsl
icebp
lods
imul
fs
subb
mov
dec
movsb
jae
inc
lods
mov
cld
popa
cmp
jne
movsb
mov
cltd
fisttpll
mov
clc
incb
cld
adc
sbb
push
aas
vunpcklps
push
sti
roll
shrb
enter
adc
jge
xor
push
pop
push
mov
push
aam
sub
and
adc
mov
aas
sbb
and
xchg
xor
mov
mov
in
jle
insl
mov
gs
dec
das
xlat
psllq
pop
lock
ljmp
cmovl
xchg
or
cmp
in
pop
int3
dec
fsubrl
adc
pop
sbb
aam
jns
pop
add
adc
lds
jl
mov
mov
mov
xchg
dec
mov
push
aas
std
mov
add
insl
mov
pushf
andb
sahf
jne
mov
mov
adc
cmpsb
rcrb
xor
cmp
sbb
hlt
mov
mov
jns
clc
insl
pop
inc
mov
insl
mov
adc
out
push
jno
ja
mov
leave
inc
icebp
js
lahf
addb
mov
xchg
jp
gs
jnp
test
pusha
out
jp
movsb
nop
or
pop
adc
divl
outsb
inc
sbb
mov
loopne
jg
jp
push
test
js
in
inc
test
loop
inc
xor
jle
cmp
pusha
sub
je
movsb
pushf
adc
dec
jns
sub
scas
test
dec
cld
mov
dec
push
aam
fs
arpl
inc
stos
jnp
shrb
lock
push
pushf
cmc
jb
loop
inc
dec
out
adc
out
xchg
jns
in
sbb
out
dec
imul
lret
pop
add
jbe
repz
in
xor
in
xchg
jne
sahf
popf
leave
mov
mov
push
int3
inc
int
hlt
inc
lods
mov
cmovno
or
adc
push
mov
js
movsl
fs
lods
loopne
mov
loop
outsl
xchg
aam
pop
les
add
shl
pop
or
fs
and
push
or
iret
fwait
cmp
call
cli
push
inc
or
and
addr16
fs
xor
pop
ja
push
sbb
jo
add
aaa
inc
adc
pop
mov
je
sub
mov
mov
push
and
inc
cmpsb
mov
mov
hlt
sbb
js
pop
rcrb
push
movsb
cmp
adc
and
pushf
jmp
je
je
and
test
sbb
js
in
sbb
cmp
mov
aaa
js
cmp
ja
mov
mov
pushf
sub
push
frstor
je
in
jbe
jbe
stos
int3
bound
pop
dec
sbb
inc
or
sbb
js
pusha
rclb
pop
xchg
mov
or
add
enter
imul
or
pushf
sbb
xor
adc
cwtl
fdivr
inc
sbb
out
adc
out
pop
add
mov
aam
leave
jae
mov
cwtl
divb
test
cmp
insb
insb
or
mov
rorb
xor
jns
and
mov
imul
test
push
adc
push
jns
inc
test
xchg
scas
push
xlat
addr16
or
sbbb
push
mov
xchg
lds
xor
push
dec
ret
lcall
cmc
js
inc
je
lock
stos
sbb
lods
fimuls
pop
push
push
inc
mov
jae
push
push
adc
push
arpl
rolb
lea
bound
cmpsl
js
push
inc
cmp
addr16
mov
push
mov
inc
sbb
pop
jg
push
jg
aad
pop
data16
mov
mov
fucomp
sub
rcrb
in
xchg
mov
jp
lods
movsb
das
or
cmp
cwtl
push
imul
fs
add
lea
fstpl
mov
mov
andl
jns
rol
jg
and
and
call
jbe
fbstp
sbb
inc
pusha
gs
aas
mov
sbb
xchg
movsb
and
and
pcmpgtd
aad
push
push
test
jp
data16
movsb
sub
add
push
jge
sub
adcb
outsb
loope
mov
pushf
lahf
aas
jns
clc
outsl
loope
movsb
adc
adc
xchg
jl
aam
js
test
repz
sub
add
sbb
fcom
push
test
push
icebp
ss
aam
bound
cmpsl
in
hlt
jns
mov
adc
popf
sbb
int
cmp
pushf
add
pop
sub
pop
movsb
int3
jl
movsl
sbb
and
test
loop
movsb
in
stos
pop
pop
cmp
jmp
int3
adc
and
push
jnp
add
jl
dec
mov
inc
add
outsb
insl
mov
push
and
sub
pop
test
push
push
adcb
loop
fbstp
in
jns
es
loopne
mov
pop
push
in
adc
inc
jne
cmp
add
mov
fbstp
in
in
cmp
pop
aas
sbb
adcb
inc
xchg
mov
test
or
lods
ret
xlat
cld
mov
sub
out
dec
jle
mov
push
add
push
add
inc
jmp
pop
pop
fs
movsb
jg
les
clc
adc
cmp
xor
mov
shlb
dec
aam
cli
push
mov
xor
aaa
mov
ja
aam
in
in
aad
dec
mov
fcom
jp
cmp
sahf
jns
add
nop
mov
je
push
std
xor
jl
in
mov
push
test
sbb
aas
jnp
in
in
int3
sub
out
cmp
imul
push
or
lahf
or
nop
cmp
hlt
fildl
inc
jecxz
sbb
fnstsw
adc
pop
push
cmpsb
ss
inc
add
sub
arpl
jl
xchg
xchg
push
fmul
fcoml
jmp
or
jecxz
sub
mov
jecxz
idivb
insl
test
mov
pushf
aam
sbb
fimull
sbb
sbb
adcl
mov
mov
and
push
xchg
cli
loopne
lret
fucomp
adc
add
pushf
aam
int3
in
iret
aas
pop
jne
and
xchg
sarl
pop
xor
mov
fidivrs
cmp
add
mov
lret
jl
xchg
pop
shrl
jb
les
mov
add
xor
testl
jb
insl
add
dec
in
jbe
xor
cld
inc
cmp
inc
jg
addr16
cmpl
dec
data16
sbb
add
xorb
aam
push
push
stos
in
mov
jne
cmp
daa
lods
push
or
and
jle
sbb
call
int
xchg
in
fmulp
mov
pushf
jnp
pop
in
mov
xchg
jns
jg
sbb
adc
movsb
add
sbb
ficoml
pop
in
dec
sbb
inc
pop
insb
test
jp
fcoml
jns
daa
jo
mov
lret
scas
movsb
aam
pop
push
push
sbb
je
movsb
xor
sbb
jmp
sub
sbb
dec
dec
adc
cmp
repnz
pop
sub
sbb
jl
cld
jnp
adc
add
jns
jmp
pop
je
pop
xchg
cld
mov
ret
shrb
push
or
hlt
push
es
adc
pushf
adc
mov
sbb
divb
or
andl
movl
cmp
xor
fcmovnbe
xchg
jbe
orb
sub
push
xor
mov
mov
mov
jbe
sti
repnz
cmp
sarl
stos
and
sub
lcall
in
mov
test
inc
movsl
in
fcomps
setnp
loopne
xor
add
cmp
and
int3
test
sbb
sub
inc
movsl
mov
shrl
jmp
in
jo
sbb
repz
inc
and
inc
rorb
jp
and
xor
pop
xchg
outsb
cmp
adc
mov
push
add
fwait
inc
sbb
xchg
and
inc
sbb
clc
cltd
sbb
jp
jbe
aad
jne
or
fwait
pop
mov
cmp
dec
aam
push
jnp
mov
xchg
sub
pop
repnz
clc
frstor
pop
jns
sub
sbb
inc
hlt
aam
repz
loope
shll
push
sub
int
xchg
out
xchg
jnp
pop
ja
ror
push
xchg
and
addr16
stos
nop
je
je
es
inc
or
push
xchg
je
mov
cmp
or
stos
loop
outsl
dec
daa
mov
jns
or
aad
in
and
fcomps
daa
mov
and
or
xor
adc
imull
and
or
cmpsb
jnp
mov
fs
inc
test
xchg
in
xchg
lea
inc
jmp
adc
imul
clc
jp
adc
gs
xor
jl
aam
int3
mov
push
push
inc
fs
sbb
fwait
das
cmp
dec
data16
jns
add
push
dec
fisttpll
mov
dec
push
aaa
mov
repz
sub
mov
inc
jnp
aam
subl
mov
fisttpll
push
fdivs
lods
lods
leave
pop
ja
push
xchg
and
std
lret
icebp
adc
int3
cwtl
cmp
ljmp
mov
test
test
inc
enter
xchg
inc
fidivrl
std
xchg
outsb
je
add
in
clc
fs
jle
mov
je
or
test
xchg
mov
xchg
nop
xor
push
sbb
add
das
xor
jmp
enter
idivl
loopne
mov
push
out
mov
and
mov
cmp
xor
add
ds
data16
rclb
or
je
or
aam
pop
mov
pusha
inc
inc
push
das
outsb
je
movsb
cmp
cld
daa
pop
cwtl
push
pop
rclb
xor
stc
lea
adc
test
inc
je
fldenv
imul
inc
mov
sbb
test
add
cmp
or
in
push
or
jg
mov
clc
pop
rclb
loopne
adc
int
cwtl
xchg
inc
test
mov
xchg
adc
call
in
out
mov
inc
xor
icebp
and
fsubs
jnp
aad
adc
xor
adc
jp
adcl
je
idivb
sbb
shlb
fidivrl
jnp
dec
inc
jl
sub
cmpsl
or
pop
outsl
pop
hlt
mov
ja
push
imul
in
push
mov
movsl
and
shrb
js
stc
push
xchg
cs
adc
mov
sbb
or
clc
push
adc
push
and
mov
adc
lea
repnz
adc
add
cmp
adc
rcrl
mov
push
dec
in
xchg
shrl
xor
imul
mov
xchg
adc
push
ss
push
and
js
and
addr16
pop
adc
mov
adc
xor
mov
jle
and
xchg
es
das
inc
mov
add
mov
push
push
pop
adc
push
pop
adc
enter
sbb
xor
addr16
mov
push
test
add
push
inc
add
cmc
repz
jle
push
jo
sub
adc
push
mov
adc
mov
xor
sbb
mov
push
fisubs
in
sbb
cmp
call
aas
cmpsl
into
fists
mov
scas
test
scas
sub
negb
jnp
in
cmp
int3
or
out
sbb
mov
ja
xor
xchg
adc
sub
pop
push
sbb
xchg
xchg
inc
pop
rcrb
cltd
sbb
das
cwtl
adc
jl
sbb
cmp
fimuls
add
adc
xor
push
adc
loopne
stc
sbb
mov
ljmp
adc
lahf
test
divb
sbb
xchg
adc
adc
pop
dec
sbb
or
inc
or
sbb
sti
jb
ret
pushf
mov
add
jp
shrl
inc
sub
rcrb
es
mov
jae
sub
ret
push
push
js
pextrw
adc
jge
divl
ds
lock
fbld
mov
stos
imul
xor
fmuls
ficompl
fidivs
adc
xchg
cmp
pop
adc
ljmp
adc
mov
mov
xchg
and
inc
xor
jp
xor
cld
xor
lcall
test
jae
pop
xor
xor
aas
dec
jmp
add
dec
dec
jb
fiadds
sbb
add
lods
pusha
adc
in
and
adc
jl
lret
les
subb
and
or
pop
fcomip
cmp
mov
and
mov
ja
xchg
inc
jmp
and
jae
leave
adc
inc
xchg
mov
adc
iret
mov
lret
push
std
add
into
pop
dec
xchg
mov
pop
xchg
mov
jg
movsb
dec
adc
mov
cmp
out
or
adc
nop
xorl
cmp
add
adc
loopne
sarb
jle
sbb
fists
stos
in
adc
or
push
shl
mov
adc
popa
das
in
cwtl
adc
sbb
rclb
adc
movsb
sbb
dec
or
test
adc
dec
loope
sahf
and
and
sbb
cs
sub
fwait
mov
out
adc
popa
sbb
lcall
mov
dec
mov
mov
stc
or
lea
out
sbb
push
and
addr16
mov
jne
dec
clc
mov
adc
push
sub
mov
adc
insb
mulb
fmul
lcall
xchg
out
lea
insl
and
std
je
ret
adc
sbb
sub
imul
test
mov
jne
xchg
mov
add
jnp
or
ret
inc
nop
push
cmp
adc
xchg
xchg
call
and
mov
repz
stc
imul
lods
sbb
xor
loopne
in
hlt
mov
imul
xor
dec
in
sub
lret
add
popa
pop
xchg
aam
insl
sbb
adc
fwait
sbb
jecxz
push
adc
push
imul
dec
aad
jg
sbb
xor
pop
adc
js
pop
out
push
loopne
aas
pop
cmp
repz
jne
adc
xchg
cld
pop
roll
adc
or
cmp
filds
pop
push
ss
mov
or
fwait
aam
stc
xchg
dec
fsts
aas
outsl
adc
adc
loopne
orb
push
test
xchg
dec
movsb
push
jg
lds
push
push
and
daa
add
sub
dec
dec
and
ss
xchg
out
ret
ficompl
mov
mov
sbb
subb
jbe
or
adc
cmp
and
aam
sub
xchg
lahf
pop
adcb
cmova
mov
adc
or
nop
mov
and
test
hlt
mov
push
int3
test
dec
sub
stc
inc
outsb
inc
pop
cmpsb
cmc
or
mov
sub
adc
mov
je
lret
jg
sbb
inc
pop
adc
sbb
push
jle
or
xor
mov
push
sub
orb
jmp
cmp
test
pop
xchg
cli
and
loope
stos
adc
sbb
outsb
aaa
xchg
adc
enter
popf
pop
dec
jo
out
arpl
push
jb
xchg
pusha
xor
adc
mov
mov
cwtl
adc
sbb
jne
push
ficoms
stos
rorl
mov
jmp
dec
adc
push
ret
les
push
sub
push
andl
das
add
sub
adc
push
nop
pop
mov
mov
inc
loope
imul
das
sbb
sti
jno
pushl
imul
ret
adc
sub
loope
repz
and
jae
sbb
pop
sbb
jns
push
dec
rcll
mov
mov
mov
xor
adc
jle
jmp
jno
dec
test
and
xor
xchg
stos
sub
les
adc
xlat
jae
xchg
pop
add
adc
or
and
divb
movsb
mov
push
xchg
movb
mov
xor
and
insl
fwait
outsb
lods
stos
mov
inc
insl
jge
cld
mov
jecxz
dec
subl
imul
add
adc
shll
fstpl
iret
ret
pusha
and
fidivs
test
pop
pop
ret
xorl
cmp
push
or
push
sahf
mov
sbb
mov
adc
insb
sbb
in
sbb
in
fistpll
pusha
adc
dec
movsb
dec
mov
and
mov
xor
loop
xchg
mov
aaa
and
neg
sub
dec
adc
mov
lock
adc
sbb
jl
adc
mov
js
inc
fmull
cmp
jb
lcall
pop
mov
cmp
ret
pop
push
pushf
iret
add
sub
mov
adc
sti
cmpsl
fbstp
and
rcll
rcl
icebp
fldl
push
push
push
incb
adcl
pop
bound
push
dec
dec
adc
scas
mov
pop
subl
lea
cmp
and
fs
xor
test
cmp
adc
out
jmp
popa
adc
adc
jae
fidivl
dec
add
pop
sbb
push
rorl
mov
inc
int3
aam
xchg
or
mov
or
roll
mov
shr
or
adc
mov
adc
cmpsl
pusha
pop
fdivrp
loop
adc
lea
cmp
mov
adc
les
hlt
cmp
sbbb
mov
add
sbb
mov
jnp
jne
sbb
lock
sbb
push
cli
mov
xor
test
adc
int
cmpsb
adc
mov
adc
stc
jb
rclb
std
adc
sbbb
adc
adc
xor
adc
mov
fiadds
arpl
pushf
or
pop
or
scas
imul
and
and
dec
ret
clc
jg
push
dec
xor
outsl
cmp
adc
mov
adc
pop
mov
sub
and
imul
lds
dec
cmp
jbe
adc
fstl
scas
push
mov
pop
jecxz
lods
or
lods
fsts
fwait
inc
aaa
repnz
adc
lret
loopne
xchg
pop
adc
cs
or
sbb
push
dec
xchg
adc
orl
mov
dec
add
adc
cltd
shlb
test
cmp
and
jo
pop
out
adc
adc
test
cmp
in
cmp
and
push
test
mov
jnp
jmp
enter
leave
repz
mov
pop
cmc
add
and
push
test
push
out
jle
pop
dec
fsubrs
hlt
inc
fxtract
inc
cmc
and
dec
xor
xor
xchg
mulb
pop
push
mov
icebp
adc
out
inc
loopne
and
mov
adc
push
aaa
mov
in
sub
push
lods
adc
aas
test
ret
lock
xor
sub
sbb
xchg
mov
cwtl
fs
sub
sti
and
sbb
push
aaa
xchg
dec
bound
sub
pop
popf
aam
ficoms
xchg
cmc
push
aad
jnp
pop
mov
fistl
cld
das
testb
mov
aad
mov
fdivp
push
jge
pop
xor
and
mov
leave
adc
push
push
daa
mov
sbb
adc
sbb
cli
sub
nop
rclb
pusha
xchg
loop
dec
add
pop
sub
push
mov
icebp
adc
mov
xchg
lods
xor
jo
aam
test
shr
dec
adc
pusha
or
mov
jnp
sub
adc
es
shrb
hlt
adc
inc
jns
pushf
mov
xchg
adc
decl
and
add
or
adc
jp
ficoms
das
jmp
mov
dec
push
adc
sbb
pop
jge
stos
out
adc
lods
pop
cmp
fsubs
insb
ffree
mov
arpl
adc
lcall
mov
and
mov
jnp
and
outsb
pop
ja
js
sub
sub
lret
mov
ficoml
cmp
clc
fidivs
sbb
sbb
movsb
mov
jge
es
xor
lcall
popa
cmpsl
pop
pusha
or
adc
xchg
xchg
jne
sahf
xchg
inc
adc
lret
inc
mov
lods
adc
adc
inc
jns
das
cmp
and
xchg
je
int
paddd
sbb
inc
fcmovne
fcmovnb
pop
mov
sbb
xor
add
into
jge
cmpl
and
adc
cmp
mov
cmp
or
hlt
adc
out
xor
xor
out
and
mov
cmp
fdiv
push
rolb
scas
push
cmp
push
mov
sbb
xor
or
loope
icebp
adc
add
adc
xchg
mov
lods
adc
imul
pop
add
adc
js
fs
dec
test
xchg
sbb
jmp
int
iret
outsl
inc
in
bound
fwait
mov
dec
sbb
lcall
enter
das
adc
sbb
test
adc
xor
adc
mov
push
mov
scas
xchg
mov
and
lahf
push
pop
stos
dec
pop
jno
pop
mov
push
jae
mov
clc
lret
ret
scas
rcrb
insl
dec
testl
cli
adc
xchg
hlt
add
pop
mov
dec
scas
lahf
hlt
scas
adc
repnz
and
dec
cmp
xchg
mov
sti
inc
pop
pop
sbb
adc
sub
cs
loopne
sbb
out
cmpsb
fisubl
repz
arpl
je
lds
adc
inc
cmp
adc
lret
pop
orb
sbb
mov
adc
inc
das
int3
sub
jo
adc
push
pop
sub
add
xor
bnd
sbb
adc
jecxz
or
or
imul
mov
icebp
mov
out
or
adc
pop
cmp
pop
jl
mov
es
xlat
mov
loop
rcll
mov
dec
rorl
dec
das
hlt
lock
int3
fdiv
jne
jns
sub
and
pop
popa
dec
adc
mov
push
adc
fisubrl
mov
push
and
sbb
fs
mov
add
lret
mov
imul
and
arpl
push
mov
add
dec
pop
pop
xchg
cld
push
xchg
fcoml
mov
mov
push
or
push
push
mov
dec
scas
pop
xchg
mov
sub
xor
push
push
fdivrs
adc
dec
sbb
aam
cmc
cmp
jl
push
and
sub
lcall
ljmp
push
or
adc
pop
sub
data16
sub
push
adc
push
sub
shrl
orb
icebp
aas
je
mov
movsb
xchg
int3
scas
inc
mov
adc
clc
xchg
xor
pop
sti
adc
sbb
jb
js
cltd
adc
enter
popf
dec
add
xor
push
mov
scas
xchg
xchg
fcompl
jle
push
push
das
and
push
adc
adc
inc
fsubrp
add
or
adc
jge
dec
das
jecxz
add
ret
xlat
hlt
out
xor
jl
loopne
divb
and
xor
cmp
out
or
adc
add
push
clc
aas
jbe
inc
cs
push
inc
scas
insb
adc
outsl
lods
cmpsl
pushf
jg
movsb
adc
shl
mov
adcb
pop
dec
jge
sub
push
adc
les
mov
add
dec
push
mov
pop
mov
psrld
pop
cld
mov
sahf
inc
stos
ds
and
jmp
and
xorb
pop
or
scas
fsubrs
push
or
adc
jl
mov
xchg
adc
outsl
aam
iret
mov
push
and
adc
pushf
cld
cmpsb
jae
xor
pop
push
mov
adc
mov
sbb
setbe
fwait
mov
push
cmp
outsb
adc
jnp
out
nop
pop
xor
mov
ret
cmp
adc
add
jmp
inc
or
mov
dec
cli
test
cmp
jl
adc
jo
mov
mov
add
bound
xchg
leave
and
cmp
adc
adc
adc
movsb
int
into
mov
and
sub
push
jl
xor
add
xchg
out
call
rol
negb
cmp
scas
mov
subl
outsb
xor
in
leave
sti
iret
adc
mov
sarb
jne
inc
adc
decb
popf
adc
or
xchg
aad
add
int3
adc
int
lods
adc
xchg
push
jo
adc
and
fs
add
add
in
mov
jo
inc
insl
in
pop
mov
cs
xchg
fwait
and
loopne
mov
push
inc
adc
lcall
push
push
dec
xchg
mov
sbb
sti
mov
adc
adc
aam
inc
xchg
lock
dec
mov
push
mov
scas
adc
sub
and
or
out
clc
mov
stos
push
call
insb
daa
in
loop
pop
adc
lret
nop
cmpsl
mov
adc
lea
lods
adc
add
dec
les
xor
bound
xor
dec
ja
adc
inc
mov
cli
dec
adc
jnp
and
inc
inc
inc
loopne
cli
adc
fcompl
test
stos
add
std
fnsave
and
xchg
je
adc
stc
subb
add
pop
jnp
je
pop
xor
or
mov
mov
adc
loopne
xchg
rcrb
mov
jg
mov
pop
pop
xlat
jecxz
push
lea
jbe
imul
js
inc
jg
shll
adc
jp
movsl
jge
gs
adc
inc
lods
pop
mov
or
stos
sub
lret
pop
adc
loopne
ja
mov
or
sbb
fldl
push
adc
inc
and
jmp
paddq
shll
sbb
jecxz
adc
adc
adc
adc
push
mov
sub
idivb
mov
adc
xorb
repnz
push
mov
dec
outsb
out
pop
ss
lods
mov
ja
filds
aam
mov
adc
ljmp
inc
pop
test
jb
adc
cmp
cmp
sub
mov
cltd
and
push
cmp
jno
adc
mov
pop
and
bound
mov
orl
scas
out
cmc
movsb
mov
shrb
shrl
adc
fidivl
dec
cltd
ljmp
sub
adc
lods
pop
jns
fdivl
mov
call
in
xchg
sub
pop
addb
adc
mov
dec
jae
xor
mov
ja
psubw
dec
mov
adcl
sbb
push
test
mov
jl
adc
outsb
rclb
xchg
mov
sub
stos
fdivrl
mov
mov
adc
dec
leave
cmp
dec
scas
in
add
push
repnz
add
es
sarb
push
or
adc
add
out
adc
jge
rorl
gs
sbb
test
push
pop
cmpsl
or
push
clc
icebp
inc
push
sub
jbe
adc
sti
outsb
cli
repz
jp
sbb
mov
mov
sbb
jge
nop
adc
xchg
sahf
out
outsl
adc
push
hlt
pop
popf
fstpt
dec
pop
adc
das
arpl
add
xor
mov
xchg
adc
adc
jmp
mov
xchg
xor
jne
std
pop
xlat
and
mov
mov
lcall
pop
aaa
sbb
adc
fldenv
push
imul
sub
jns
adc
sbb
mov
cmp
fistpl
dec
scas
mov
ficompl
xlat
notl
arpl
mov
cmp
xchg
adc
adc
sbb
pop
dec
dec
in
jne
jb
push
mov
mov
fists
xchg
shlb
cmpsb
lret
adc
jecxz
push
out
xor
adc
shr
out
cltd
or
add
jl
lods
fwait
push
icebp
cld
mov
xor
pop
pusha
mov
out
loope
rorl
push
adc
pop
imul
aas
add
aam
mov
gs
inc
or
lock
xchg
lds
lret
inc
push
rcr
lret
inc
adc
xchg
mov
insl
ja
enter
ret
popf
push
jno
cli
and
pop
inc
jp
adc
ja
jl
andb
repz
stos
or
push
je
addr16
jo
outsl
iret
cmp
pop
stos
mov
xchg
pushf
pusha
sbb
lods
aas
dec
and
pop
js
mov
cld
sub
xor
pop
sbbl
dec
aam
mov
sbb
sub
jo
xchg
iret
xor
xchg
cmc
sub
stos
ret
imul
in
mov
dec
iret
data16
je
inc
adc
pop
inc
and
jmp
pop
sbb
pop
jecxz
ret
lods
pop
jmp
sarb
push
and
push
add
inc
mov
push
xchg
xchg
scas
cld
lcall
add
xor
jae
stc
insb
dec
or
pop
lea
in
cld
pushf
dec
aam
movsb
and
mov
fwait
push
xchg
adc
jne
mov
movsl
sub
pop
popf
fidivs
mov
pop
inc
addr16
mov
mov
call
jl
sbb
cmp
push
mov
fdiv
push
imul
push
sub
repz
xchg
cmpl
das
es
inc
gs
mov
xchg
pop
bndcu
into
xor
enter
data16
lahf
das
cmpsb
pop
jbe
jae
cld
js
xchg
xor
adc
mov
popf
fdivr
add
xchg
sbb
test
pop
mov
mov
cmp
sub
adc
xchg
cmp
xor
pop
test
jns
cld
js
lahf
insb
sarl
or
pop
and
sbb
mov
mov
adc
je
adc
cmp
fs
and
ja
aam
sub
inc
rorl
je
jmp
fldenv
jecxz
test
add
mov
jmp
mov
mov
xorl
in
pop
pop
and
ss
test
sbb
xorb
out
jno
std
lods
xor
std
push
pop
fmul
cmpsl
xchg
dec
ret
aaa
out
add
mov
xchg
idivb
push
sbb
call
subl
adc
mov
push
lock
jb
je
int3
cltd
int
push
pop
push
enter
mov
mov
rcrb
repnz
cmp
mov
adc
xor
std
jp
add
dec
xor
adc
xor
xchg
data16
sbb
int
inc
les
shll
pushf
xchg
mov
inc
inc
push
mov
jmp
es
les
adc
push
push
das
push
cld
cmp
and
ds
std
sahf
mov
mov
or
pop
xor
pop
sysenter
push
push
popf
xchg
stos
fs
mov
es
adc
sub
adc
mov
xchg
xchg
lcall
rorb
popa
movsb
outsb
xor
and
imul
push
inc
push
push
in
adc
sbbb
mov
jb
jae
sarb
push
cld
add
ds
mov
iretw
out
addr16
inc
scas
sbb
daa
aas
rclb
imul
gs
or
hlt
dec
shll
push
push
pop
scas
lret
add
std
aas
and
popf
int3
add
cld
dec
sbb
xor
and
pusha
mov
fildll
fstl
cmp
hlt
cmpsl
mov
mov
and
mov
in
jae
cmp
push
addr16
cld
fisubl
into
roll
std
jae
movsl
sbb
notl
cs
cld
inc
jle
jmp
sub
jl
push
xchg
cld
into
xor
push
jl
or
popf
cs
and
clc
cmpsb
jnp
mov
pushf
cmc
std
gs
les
shr
mov
add
out
push
inc
sub
sub
dec
sub
mov
mov
add
fdivrp
cmp
push
jmp
jg
adc
cmpsl
bound
hlt
dec
cld
repnz
and
jae
xor
jle
jae
or
lods
or
gs
inc
out
cld
fistpl
mov
rol
jg
xchg
cwtl
jle
imul
and
aad
add
mov
cmc
sub
jns
cmp
push
daa
cld
mov
push
fisttpl
iret
jmp
es
xor
popf
mov
mov
mov
xchg
dec
xchg
sbb
fwait
dec
xchg
jl
sbb
hlt
ret
mov
loop
ret
notl
aad
test
stos
cmc
fsts
loope
inc
mov
add
fcmovnu
jb
insb
pop
std
adc
out
mov
ds
mov
imul
xlat
fs
sbb
ljmp
mov
jbe
and
push
mov
push
into
shll
fs
jmp
cltd
lahf
pop
call
notb
sarl
push
cmp
clc
push
and
out
test
jno
js
cmpsb
je
lret
js
and
xor
stos
bnd
arpl
sarb
push
or
jo
pop
sub
sub
ljmp
adc
and
inc
popf
jno
mulps
inc
inc
mov
std
sbb
ja
xchg
xchg
push
daa
cmpsl
nop
push
and
and
dec
lods
xchg
negl
adc
jbe
adc
xor
pop
testb
fisttpll
mov
dec
mov
xchg
sbb
sbb
mov
sub
and
sbb
sti
inc
std
pop
and
sub
outsl
add
sbb
lret
fildll
testb
inc
cmp
and
imul
cmp
jnp
and
sbb
jb
lods
push
pop
std
xor
pusha
aad
cmp
std
fdivrl
fimull
aam
xor
jb
pop
mov
jge
pusha
push
outsb
hlt
loope
and
jae
xchg
lret
adc
mov
xchg
sub
mov
cmpsb
mov
cld
push
inc
sbb
push
mov
test
std
cmp
xchg
push
push
pop
data16
pushl
pop
out
movsb
xor
outsl
sub
sbb
ret
dec
shl
xchg
xchg
inc
inc
inc
jmp
pop
lods
sbb
arpl
push
mov
ret
test
or
pop
arpl
ljmp
repnz
sub
popf
pop
inc
mov
sbb
pop
lahf
ljmp
shlb
aad
popf
push
xchg
cmp
pop
in
xchg
push
ss
jnp
insl
subb
rcll
stos
push
sysenter
out
xor
js
and
xor
mov
sub
push
inc
stc
subb
and
mov
pop
pusha
mov
jb
push
std
fs
insl
outsb
sbb
adc
xor
dec
xor
and
jmp
pop
and
inc
je
mov
jl
les
or
aaa
pop
and
mov
test
xchg
shlb
and
cmp
fcompl
imul
inc
test
fwait
imul
ds
mov
xor
insb
xor
or
enter
rcll
insb
and
das
mov
dec
push
mov
xchg
or
sbb
in
inc
adc
xchg
cld
mov
ret
pop
mov
je
addr16
cs
fwait
aas
xchg
xchg
sti
das
std
dec
or
sbb
lods
mov
loop
add
xchg
popf
scas
sbb
in
outsl
xor
mov
out
jae
sub
sbb
mov
aaa
outsl
and
add
cmp
push
adc
mov
push
xchg
cwtl
or
sbb
cmp
mov
push
jo
cld
mov
cwtl
mov
pop
in
fmulp
ljmp
cld
leave
imul
fnstsw
and
inc
add
mov
into
pop
sub
push
js
mov
repnz
push
sub
inc
std
fwait
fwait
jl
xchg
movsl
imul
jnp
pop
mov
sahf
test
push
fwait
std
cld
or
dec
loop
ljmp
fwait
movsb
add
into
lahf
clc
pop
fidivs
dec
mov
jmp
arpl
ss
cld
lcall
loopne
or
pop
pop
std
cmp
pop
jae
sbb
mov
add
and
out
dec
cltd
insl
pop
inc
call
std
imul
ds
scas
push
mov
push
mov
push
push
mov
inc
push
lock
push
imul
je
fisubrl
push
jae
bound
mov
or
cmp
scas
jle
xchg
xchg
movsb
cmpb
sbb
rcr
pushf
cld
int
lea
lahf
in
mov
enter
xlat
mov
dec
cli
addr16
mov
ds
inc
mov
mov
int
or
pop
sub
outsl
sub
xchg
and
jo
xor
pop
mov
out
pop
sbb
ret
mov
xchg
nop
sbb
popa
mov
scas
adc
movsb
std
inc
ss
pop
mov
bound
insl
inc
dec
dec
bound
cld
shll
and
jbe
cmpl
jg
out
or
mov
mov
xor
scas
sbb
stos
xchg
push
popf
nop
mov
pop
pop
jo
or
out
and
aas
int
cwtl
test
lods
pop
sbb
xchg
ret
cld
faddl
pop
aad
inc
std
mov
fcom
dec
jae
push
mov
mov
cld
dec
out
dec
mov
xor
repnz
std
popa
mov
loopne
xchg
cmp
or
rolb
aaa
cs
dec
mov
xchg
push
jg
pop
and
fsts
xchg
mov
push
adc
jl
stos
push
cld
inc
push
mov
mov
xor
mov
fstps
jecxz
sbb
hlt
lods
pushf
push
xor
std
icebp
push
push
xor
cmpsb
mov
outsb
jle
pop
pop
xchg
jge
addr16
mov
pushf
imul
out
inc
fimuls
movsb
pop
sti
subb
jae
ss
jns
aaa
insb
pop
stc
pop
jp
fdivr
inc
add
mov
fadds
fistps
cmpsb
pop
jae
push
and
setge
stos
popa
movsb
icebp
inc
pop
sarl
pop
xor
mov
cmp
jecxz
mov
or
aam
add
je
jb
enter
out
cmp
sbb
jmp
and
mov
lret
jne
cld
sub
xchg
insl
and
movsb
movsl
adc
xor
sbb
fildll
xor
dec
aad
std
adc
add
mov
sbb
jl
je
cmp
enter
cld
inc
aam
xor
inc
or
pop
punpckhwd
std
loopne
pop
fistpl
inc
stc
adc
jmp
jp
outsl
outsl
xchg
std
add
push
cld
insb
cmp
cmp
jge
push
fcomps
add
mov
push
pop
sbb
dec
push
jnp
mov
mov
loopne
and
in
std
in
scas
jl
inc
ficoms
xor
pop
loope
movsl
jmp
jae
xchg
xor
test
hlt
xor
or
cmp
std
pop
pop
xor
jb
popa
xor
icebp
mov
jp
aas
daa
shll
mov
xchg
arpl
mov
adc
jb
mov
leave
lea
sub
inc
lahf
jg
enter
pop
mov
cwtl
mov
testb
jnp
cmp
xchg
xor
cld
in
fcom
aas
test
xor
inc
orl
rol
shlb
mov
mov
pop
jg
push
pop
aas
xor
jge
pop
jmp
mov
iret
or
pop
inc
and
aad
inc
xor
dec
aas
pop
icebp
lea
sahf
xor
mov
pusha
and
js
movzbl
movsl
pop
sub
mov
pushf
dec
cmpsb
mov
lods
in
loopne
mov
sbb
xor
stos
push
in
aas
lods
sub
fs
pusha
aam
jl
repnz
cmpsb
pop
scas
pop
add
cld
fs
testb
sub
adc
outsb
mov
pop
hlt
int3
mov
sbb
pop
repnz
mov
xor
out
mov
sub
push
mov
xor
mov
pusha
cmp
pop
rclb
leave
call
adc
aad
addr16
mov
test
repz
fcmovu
rclb
xor
sub
shll
xor
shlb
sti
and
and
cmpsl
mov
and
pop
jo
movsb
pop
ljmp
cld
insl
or
xchg
add
pop
ja
iret
xchg
ss
push
les
pop
xor
ljmp
cld
xlat
lcall
push
xchg
mov
movsb
pop
push
pushf
cs
inc
lret
ret
cld
pop
test
shr
mov
in
mov
repnz
xor
notb
insl
int
clc
cltd
cmp
enter
inc
inc
pop
std
mov
lcall
rclb
mov
push
dec
lahf
and
sub
cmpsb
out
into
fwait
iret
fcoms
fstpl
faddl
sbb
stos
push
pusha
sbb
xorb
aam
dec
sbb
cmpsb
mov
arpl
fwait
nop
repz
je
cmpsl
push
bound
shll
sbb
inc
outsl
cmp
or
call
dec
adc
fwait
xchg
insl
mov
jle
xchg
lock
sbb
mov
les
jbe
cmp
sbb
sub
lods
fs
cmpsl
int
pushf
push
pop
scas
aaa
pop
je
mov
pop
mov
push
push
push
push
sar
popa
jg
pop
pop
push
aad
cmp
push
mov
test
xchg
in
mov
in
jbe
xor
jp
pop
stc
ss
sub
inc
inc
cmp
and
leave
xor
call
mov
dec
sub
cmp
test
mov
popf
andl
test
or
inc
pushf
aaa
jl
aam
int
pop
cmp
cmp
sub
jbe
repz
aaa
xor
cmp
and
xchg
movsb
imul
push
scas
adc
lret
xchg
rcll
daa
push
or
dec
jae
lahf
das
and
sbb
in
push
dec
and
inc
add
cmp
or
hlt
loope
pop
xor
repnz
fimull
sbb
xchg
sub
pop
mov
in
dec
pusha
inc
sarl
jp
push
xchg
adc
aad
and
bound
data16
push
pop
sub
sub
pop
out
fwait
int
push
mov
shlb
ljmp
sub
movsb
push
cld
sub
sbb
aam
incb
push
sub
push
jmp
or
jns
movsb
mov
ret
ja
jle
pop
ret
lret
add
out
popf
cld
mov
sbb
mov
movsb
aam
pop
shlb
sub
imul
popw
cmp
sbb
sbb
and
or
xchg
cmpsl
aam
xchg
sahf
gs
enter
xchg
in
movsl
loop
mov
sub
sub
dec
loopne
inc
mov
dec
pop
xor
push
adc
incl
gs
les
inc
fstl
cmp
and
pop
negl
std
mov
fwait
popf
and
clc
enter
inc
adc
add
jmp
in
std
les
pop
cmpsb
mov
call
jecxz
inc
sub
xchg
push
popf
aam
sub
inc
xchg
mov
leave
push
leave
jmp
nop
fdivr
xor
fs
std
mov
dec
insb
in
jge
ja
cmp
mov
out
stos
inc
add
mov
sbb
mov
mov
mov
aam
and
xchg
orb
lods
rcl
push
std
adc
out
in
shll
jle
sub
popf
jo
cmovs
push
js
adc
std
icebp
daa
popf
aad
jmp
mov
mov
sbbl
or
add
mov
pop
inc
addr16
cmpsl
aad
imul
lret
out
call
cmp
mov
sbb
lods
push
sbb
movsl
jns
sbb
mov
fbstp
clc
cmpsl
mov
inc
xor
pop
cld
xchg
fnstsw
jno
jmp
imul
jmp
into
and
push
cmpsb
jl
popf
mov
orb
dec
push
push
and
or
push
int
imul
ja
cmc
cmpsb
mov
in
push
pop
inc
gs
xor
std
cmp
jg
fistpll
adc
rcrb
imul
hlt
ret
pushf
jne
lods
pop
bound
cmp
mov
mov
int3
lods
or
sub
loope
fs
jb
jo
cmp
aam
jl
out
jno
adc
pop
das
or
cld
cmp
fwait
movsb
lret
outsb
lea
das
xchg
je
jge
cld
gs
dec
std
sbb
inc
fnsave
adc
xchg
pop
outsl
ja
xor
and
xor
fs
dec
hlt
popa
dec
push
loopne
cld
xchg
inc
sbb
mov
push
cmp
cs
out
arpl
nop
xchg
add
imul
movsb
cmp
mov
ds
scas
fmul
mov
inc
arpl
and
sbb
pushf
loopne
and
loop
insb
aaa
cld
mov
push
fs
adc
cmp
mov
or
cs
fstl
inc
jbe
in
rcrl
lods
cmp
adc
dec
dec
ficomps
adc
xchg
mov
bound
cmp
imul
sbb
hlt
ljmp
sbb
stos
and
adc
or
jno
out
test
ljmp
loopne
pushf
loope
fwait
data16
fldenv
in
push
andb
enter
test
jecxz
sbb
cmp
and
sbb
sub
rolb
stc
adc
loope
add
aam
push
in
inc
sub
jp
xchg
lods
adc
xchg
subb
push
or
pop
dec
mov
or
mov
bound
xchg
fidivrs
sub
and
out
popa
aam
jnp
jl
adc
lods
mov
lea
adc
and
addb
stos
and
mov
incb
adc
int3
bound
aaa
cmp
call
add
inc
mov
scas
jp
pop
cwtl
imul
test
rcll
dec
mov
popf
dec
cld
enter
adc
jb
loopne
aad
call
jmp
adc
pop
test
notb
xchg
and
sbb
sub
imul
inc
rcll
in
bound
mov
fcompl
in
xchg
mov
mov
or
dec
shll
and
pop
lock
pop
mov
ja
icebp
lcall
in
cltd
push
cld
pop
inc
xor
jo
icebp
push
pusha
push
mov
adc
in
rcl
inc
xor
adc
add
mov
ss
jbe
lock
sbb
xor
mov
xor
xchg
adc
int
gs
pusha
imul
ss
aam
xor
push
cwtl
adc
loope
movsl
notl
mov
cmp
or
mov
and
int3
xor
lds
push
es
dec
cmpsb
jnp
enter
aam
push
adc
ret
popa
inc
ss
xor
and
sub
mov
and
sbb
adc
push
test
cwtl
dec
call
add
pop
sub
adc
lods
test
push
sbb
pop
or
jno
mov
pop
xchg
push
inc
andb
push
test
lock
in
add
xchg
lret
adc
repnz
xor
xchg
xchg
jae
aas
jg
xchg
and
xor
out
loopne
mov
push
jge
out
call
add
push
pop
in
scas
pop
ljmp
movsl
adc
and
inc
or
push
lcall
lret
sbb
je
lock
pusha
sub
mov
mov
push
pusha
in
cmp
popa
or
aam
adc
cmpl
sub
push
rorl
cmp
and
sbb
sub
and
loopne
cld
repnz
adc
test
lods
adc
cmc
mov
jl
iret
push
inc
dec
pop
mov
test
xchg
adcl
add
lcall
arpl
add
rcrl
cmp
push
in
dec
sbb
je
cmpsb
in
sub
cmp
and
or
adc
aam
xchg
and
mov
sti
adc
push
jle
sub
in
test
jns
sbbb
mov
in
adc
sbb
mov
xchg
push
pop
xor
fst
cmc
mov
pop
cmp
or
or
pop
out
aas
in
sbb
lds
dec
dec
sub
push
mov
stos
jge
sbb
arpl
jno
cltd
jp
fs
sub
insb
adc
or
popf
push
adc
jo
add
mov
adc
mov
repz
or
addr16
sti
pop
xchg
jns
cld
or
leave
out
in
mov
adc
arpl
imull
mov
adc
dec
dec
cmpsb
push
push
fisttpl
or
sbbb
pop
mov
xor
rcll
pop
mov
fadds
xor
and
loop
aam
pop
dec
je
ds
xor
pop
sarl
cmp
loop
imul
pop
es
add
and
cmpsl
push
xchg
mov
adc
es
jp
inc
jb
test
adc
lock
sbb
and
xchg
loop
pop
shlb
daa
aad
je
sbb
in
adc
ja
sbbb
mov
sbb
and
sahf
ret
inc
movsl
push
inc
and
addr16
popf
xchg
mov
or
mov
cmp
add
rcrb
fxch
into
jae
or
sub
es
push
shl
add
inc
jnp
aad
push
jmp
jl
add
mov
or
mov
cld
xchg
aad
push
jae
and
sti
pusha
jp
ja
cld
rcll
sbb
aam
pop
mulb
mov
mov
pop
daa
fisttpl
xchg
rcrl
pop
mov
cwtl
adc
leave
mov
mov
add
jb
fstl
sbb
hlt
scas
or
pop
push
mov
jp
xchg
ss
jo
and
add
pop
jae
ret
add
sbb
mov
in
push
xor
loopne
lret
dec
push
mov
adc
cmp
xchg
xor
cs
sbb
lods
add
sbb
and
pop
icebp
mov
xchg
mov
es
jecxz
push
fcomip
jb
cmpsb
sbb
xchg
cmp
loope
scas
stos
sbb
out
cmp
dec
and
jmp
cs
es
mov
pusha
mov
jg
push
jecxz
popa
jmp
cmp
cmp
fcomps
or
mov
pop
js
adc
mov
fnstcw
xchg
cwtl
and
in
adc
sti
popa
adc
or
adc
out
int3
test
adc
insb
inc
mov
adc
push
pop
cmpsb
popa
mov
or
sbbb
and
adc
adc
sbb
adc
xor
add
and
or
sbb
call
push
sub
dec
aaa
jl
ret
cmp
aad
adc
adcl
stc
ja
adc
mov
js
push
notb
pop
jl
shlb
and
adc
add
and
and
xchg
inc
loop
dec
adc
sti
xlat
sbb
jnp
xor
ja
fildl
push
test
xor
push
push
xor
mov
add
ds
push
and
test
out
aaa
in
icebp
add
es
sub
pop
test
add
pop
or
xor
movntps
popf
mov
or
mov
jl
notl
push
and
sbb
repz
sti
dec
pop
jne
or
mov
fdivl
clc
leave
adc
loope
es
adc
fistl
sub
mov
pushf
scas
lret
adc
jmp
or
dec
xchg
outsb
jecxz
xor
sbb
js
test
adc
adc
inc
jg
adc
fcomps
in
add
xchg
cwtl
jne
or
xchg
push
pop
xchg
or
cld
sub
sbb
jae
rclb
js
mov
jno
pop
xor
add
xchg
jne
cmp
xor
jno
ja
sbbb
and
mov
adc
jge
jne
mov
sbb
rolb
jae
push
xchg
mov
scas
insb
pop
cmc
pop
icebp
in
popa
enter
into
rcrl
mov
pop
arpl
inc
jne
sbb
push
jmp
push
mov
sbb
and
mov
enter
out
sub
ret
lret
aad
adc
adc
sti
pop
jl
and
adc
repnz
loop
pop
call
push
andl
push
adc
es
xchg
adc
mov
cld
mov
shll
into
int3
or
mov
inc
add
jb
push
lods
xlat
pop
pusha
outsl
and
es
movsb
repz
add
mov
cmp
dec
icebp
fcomps
pop
xchg
push
scas
mov
leave
cli
mov
in
adc
jl
inc
xchg
fmuls
test
and
inc
jge
out
dec
mov
cld
cmpsl
pop
mov
in
adc
data16
xchg
testl
mov
fsubrs
out
xor
enter
xchg
hlt
and
inc
cmp
cmpl
mov
hlt
pop
loopne
adc
sub
lret
adc
adc
rcrl
lods
xlat
in
jmp
adc
movsb
test
mov
xchg
mov
or
mov
lods
push
fnstcw
cmp
mull
mov
inc
ss
cmp
and
inc
or
icebp
jmp
mov
fisttpll
pushf
adc
mov
inc
inc
lahf
push
pop
adc
and
xchg
pop
and
pop
jno
xor
mov
pop
or
out
push
add
insl
xor
scas
pop
cmpsl
mov
xor
or
cmp
movsl
dec
dec
ficomps
mov
adc
lds
mov
push
push
cmp
ds
mov
push
jns
stos
or
lret
cmp
mov
clc
inc
sbb
lret
xchg
xor
dec
xchg
and
nop
in
enter
mov
pop
adc
fadd
xor
add
popf
gs
movsb
pop
unpckhps
add
push
xlat
enter
pop
jnp
sub
adc
and
jb
dec
dec
subb
push
push
sar
adc
repnz
cwtl
jne
in
adc
scas
adc
adc
daa
hlt
mov
dec
sbb
xor
es
addr16
outsb
adc
stos
add
mov
mov
inc
mov
pop
push
push
aas
movb
adc
int3
andb
cmpsb
mov
jae
mov
imul
adc
insb
loope
sbb
jecxz
pop
cwtl
hlt
mov
adc
fsubs
jne
xchg
aas
std
gs
pop
fbld
sbb
lods
cld
push
mov
in
mov
jmp
and
enter
in
cmp
and
xlat
popf
mov
shll
and
sbb
sbb
outsb
jne
sub
mov
adc
and
lret
pop
jmp
push
push
adc
adcb
rclb
add
pop
pop
lods
jae
popa
mov
mov
nop
adc
cmp
cmp
sbb
push
enter
sti
sub
mov
or
pop
push
sbb
jb
mov
sub
push
repnz
sahf
in
in
push
adc
imul
mov
adcl
push
sti
push
push
xchg
pop
pop
sbb
cmp
or
inc
insb
xchg
sbb
dec
fists
push
sbb
cltd
pop
adc
push
jl
inc
xor
bound
pusha
cli
jo
add
adc
addr16
fistps
fcom
cmpsb
push
rcrb
adc
inc
jbe
jecxz
sbb
fs
loop
xchg
insb
mov
adc
sbb
fnstsw
in
in
dec
cmc
pop
std
xchg
add
lods
or
sti
or
adc
pop
mov
mov
xchg
rclb
jmp
inc
cmp
push
xor
mov
rolb
xor
cmp
jnp
fwait
push
mov
jae
jge
xchg
fwait
loopne
cmc
sti
or
dec
dec
push
fstpl
xchg
in
lcall
in
in
xchg
cmc
stos
std
ljmp
dec
xchg
orl
dec
mov
in
xor
fwait
sbb
xor
mov
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
fwait
sbb
cmp
push
sbb
frstor
inc
std
dec
add
cltd
icebp
movsl
stc
movb
push
xchg
xor
xor
into
xor
mov
mov
mov
mov
mov
fwait
sbb
jae
xchg
pop
jmp
jb
sub
cmp
pop
idivb
sub
sbb
fwait
cmp
xor
dec
xlat
dec
out
notb
outsb
or
xchg
jne
or
adc
push
in
in
push
jae
addb
or
mov
or
icebp
or
sbb
sub
push
arpl
push
adcb
popf
push
lods
sarl
push
out
hlt
push
or
adc
mov
dec
arpl
pop
and
js
jle
mov
cltd
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
and
mov
pop
and
insl
mov
fwait
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
xlat
and
cmpsl
cmp
xlat
push
jnp
addl
pop
movsl
pop
scas
pop
rolb
pop
fiaddl
in
pop
push
add
dec
sub
xor
lret
dec
sti
dec
add
and
mov
andl
xchg
jecxz
jecxz
xlat
aaa
dec
push
cmpsl
jae
mov
out
idiv
add
dec
jnp
fcmovnbe
sbb
push
lret
push
xchg
push
mov
hlt
inc
cmc
aad
cmp
add
scas
mov
mov
nop
clc
xchg
xchg
or
push
inc
and
and
aaa
mov
sbb
in
mov
jno
add
and
dec
mov
sbb
mov
out
call
cmp
dec
arpl
push
mov
push
ret
push
fists
push
cld
and
cmp
mov
shlb
mov
jmp
xlat
ds
dec
stos
adc
insb
arpl
jg
lahf
jecxz
jecxz
jecxz
jecxz
xlat
sbb
cmpsb
inc
ja
pop
xlat
pusha
out
negl
pop
rolb
pop
jmp
add
push
sub
add
or
adc
adc
adc
mov
push
adc
inc
sbb
and
daa
add
add
or
pop
adc
xchg
xchg
xchg
mov
adc
sbb
mov
xor
push
out
in
out
fmull
push
dec
arpl
sbb
mov
dec
xchg
mov
mov
mov
nop
cld
xchg
add
or
adc
sbb
xor
mov
xor
mov
mov
fwait
and
xor
pusha
cmpsl
push
ja
test
mov
fwait
pop
mov
mov
push
iret
pop
sahf
call
push
adc
inc
dec
dec
push
dec
push
gs
push
fwait
push
mov
push
push
ficoms
and
mov
dec
dec
pop
push
js
cmpsl
push
jle
nop
pop
xchg
pop
mov
pop
out
es
xor
inc
cld
dec
int3
add
or
out
out
pop
cmc
push
push
or
push
push
and
mov
pusha
arpl
jbe
and
mov
shlb
cmp
push
cmc
push
push
insl
fldl
mov
push
fcoml
in
adc
adc
adc
adc
push
sbb
cmp
add
les
adc
outsb
adc
jle
inc
push
xchg
adc
xchg
mov
mov
jo
repnz
add
fwait
sbb
in
in
dec
cmc
push
std
pop
add
ja
jge
test
xchg
adc
adc
adc
adc
adc
adc
adc
adc
or
and
mov
xor
dec
xor
sbb
ss
dec
movsb
frstor
dec
out
inc
dec
mov
fwait
fs
cmpsb
cmp
push
lcall
les
push
jmp
xchg
push
xor
jnp
ficoms
jp
push
vmovaps
and
negb
inc
xchg
js
ds
inc
orb
daa
dec
mov
cwtl
xor
out
in
dec
xchg
dec
rol
mov
dec
xchg
into
test
sbb
mov
xor
fwait
sbb
pop
jnp,pt
fwait
insb
mov
mov
loope
ljmp
cmp
mov
push
xchg
push
popf
cmp
call
mov
pop
push
cld
push
mov
mov
and
pushf
test
pop
inc
xchg
fstpl
in
in
cmc
hlt
std
std
add
inc
xchg
jo
mov
lods
scas
xchg
aad
call
sub
pop
pop
pop
cmp
ja
jge
xchg
sti
scas
sti
mov
mov
sti
int3
sti
sar
loope
call
sti
std
sti
add
dec
cmc
push
sub
das
in
xor
fistl
fs
jns
test
lods
dec
mov
enter
mov
pop
pusha
shlb
scas
xor
test
xor
add
push
xor
lods
and
ss
inc
xor
xor
pop
xchg
out
xlat
data16
fs
xchg
jnp
lea
pop
in
cmp
sbb
adc
fs
cmp
mov
cmp
stos
xchg
mov
test
add
xor
test
test
lods
or
adc
pop
mov
das
mov
xor
mov
sub
arpl
and
bound
and
and
fistps
div
sbb
in
in
jo
or
adc
adc
dec
jno
jnp
mov
xor
mov
fwait
cmp
cmp
dec
sub
ss
in
jmp
add
pop
push
xchg
stos
inc
push
cs
cmpsl
mov
cmp
cmpsl
cltd
mov
les
js
cmp
scas
add
loop
out
xchg
hlt
movsb
push
xchg
or
dec
dec
cmp
dec
cmpsl
addr16
je
jnp
cmpl
mov
mov
mov
int3
or
jmp
add
xchg
enter
push
xor
fwait
push
js
jle
sar
stc
or
push
mov
popf
and
mov
cmp
jg
les
daa
inc
xor
je
adc
cmpsb
test
sti
cmp
inc
adc
loop
insb
pop
mov
cmp
mov
popa
xor
mov
sbb
cmpl
pop
test
inc
dec
and
sub
dec
pop
push
mov
ss
pop
bound
in
mov
mov
or
jo
in
pop
add
xor
xor
les
js
push
inc
jne
mov
fld
insb
inc
lret
clc
pop
into
mov
mov
xor
cwtl
bound
in
arpl
mov
and
movl
mov
cwtl
pop
lods
pop
mov
pop
dec
sub
or
xor
push
das
mov
push
jno
push
push
mov
iret
push
repz
push
loop
jmp
mov
and
lahf
jecxz
and
jecxz
jecxz
jecxz
fstpl
aad
outsl
dec
cmp
dec
inc
lret
insb
sahf
dec
mov
pop
pop
cwtl
jnp
fdivrs
adc
fucom
out
push
inc
fisttpll
pop
add
or
adc
adc
adc
adc
adc
push
cmp
dec
dec
jb
cmpl
fwait
xor
or
adc
les
push
fstps
inc
test
shl
in
in
cmc
repz
stc
add
daa
inc
xchg
mov
jno
jle
push
cmp
mov
mov
test
cmp
sbb
std
in
dec
sbb
sbb
inc
mov
cmpsw
rolb
inc
cs
mov
push
cmpsb
addr16
xchg
popf
jl
test
xchg
lret
mov
jno
mov
and
or
pop
push
dec
jb
jge
test
mov
sarl
sbb
sar
loopne
fs
mov
nop
mov
mov
dec
cmp
aam
push
cmp
lds
scas
movb
mov
hlt
mov
and
in
mul
add
and
cmc
inc
hlt
sbb
and
jp
adcb
inc
xchg
dec
ret
inc
and
jns
jle
fwait
mov
int
inc
dec
push
test
pop
lods
pop
pop
adc
pop
inc
bound
arpl
sbb
popa
mov
cmpsb
ficoms
push
dec
jae
fcomp
jne
mov
ds
mov
lcall
loop
loop
add
inc
sub
test
bound
movb
dec
mov
dec
pop
cmp
addr16
fwait
jo
je
call
call
xchg
hlt
xchg
clc
xchg
cld
xchg
add
push
mov
daa
pop
xchg
ss
out
imul
push
repz
sbb
dec
dec
cmpsb
dec
test
mov
push
pushf
cmp
clc
dec
scas
pusha
mov
daa
shll
aas
xlat
and
in
mov
mov
mov
pop
dec
push
xor
pop
adc
inc
push
es
in
iret
mov
sub
push
repz
pushl
pop
in
mov
add
jns
jle
test
pop
mov
xchg
jmp
cmpsb
movsl
andb
mov
push
cli
fstl
in
pop
and
aam
xor
sahf
shll
xor
xchg
testb
clc
insl
enter
xor
cmpsb
push
xchg
mov
aad
loopne
repnz
addr16
loope
add
mov
or
inc
cmp
test
adc
enter
add
and
dec
jg
mov
sbb
push
mov
insb
fmuls
mov
sub
mov
inc
and
pop
xlat
and
not
or
int
pop
inc
jmp
sbb
fstl
xchg
in
mov
xchg
fadds
mov
dec
push
jl
mov
and
dec
add
cmpsb
sahf
fs
mov
mov
mov
nop
add
push
mov
daa
js
test
xorb
xlat
nop
xchg
pop
fiadds
in
call
push
push
testb
mov
push
fistl
test
sub
je
and
and
sub
sub
xor
jp
andb
cwtl
cwtl
sbb
pop
cmpsb
dec
aam
mov
stc
repnz
pop
inc
cs
rorl
dec
jno
adc
cld
flds
adc
sbb
xchg
lods
dec
and
mov
push
imul
sub
and
std
cmp
repz
sbb
movsb
inc
mov
or
adc
fstpl
in
in
daa
cmc
sub
das
add
add
dec
xchg
mov
test
inc
rorl
pusha
xorb
dec
push
cmpsb
sub
lcall
icebp
add
aaa
sub
cmpsb
inc
jl
xchg
mov
mov
insb
iret
ficoms
xchg
insl
loopne
aam
fdivs
ret
and
test
mov
mov
xor
mov
cmpsb
loopne
sub
push
clc
push
add
push
adc
sbb
bound
stos
pop
ret
cmpsb
hlt
jns
ss
movsb
sbb
imul
xlat
push
in
cwtl
xchg
js
jl
insb
mov
sbb
xchg
mov
pushf
rclb
xchg
mov
mov
xchg
mov
les
push
int3
push
rclb
push
fcoms
push
loopne
in
push
in
mov
hlt
adc
enter
xchg
pop
or
adc
inc
xchg
mov
and
outsb
xor
push
fistpll
pusha
sub
or
insb
stos
pop
push
sbbb
mov
lret
mov
sub
push
inc
int3
push
xor
es
scas
mov
mov
pop
add
hlt
dec
clc
xchg
out
notl
or
mov
inc
sub
xor
push
xchg
scas
sub
sbb
je
js
sub
stc
mov
call
xchg
add
push
jl
lock
mov
mov
and
lock
cmp
push
pop
pusha
jnp
cwtl
pushf
hlt
lods
fcoml
cld
adc
push
aad
push
pushf
cmpb
mov
cmpsb
pushf
dec
dec
aaa
cmp
or
ljmpw
hlt
cwtl
xor
inc
inc
sbb
insb
js
lds
mov
pop
in
mov
dec
fs
mov
jo
push
nop
push
xchg
push
pushf
push
movsb
inc
lods
ljmp
in
or
aam
xchg
rolb
sbb
mov
xchg
call
add
or
adc
cmp
jne
sub
xor
cmp
inc
inc
dec
lahf
inc
fwait
mov
sti
pop
clc
pusha
les
push
cmpsl
je
test
pop
test
mov
mov
pushf
push
test
mov
pop
mov
xchg
les
push
aam
fcoms
cmp
push
enter
or
gs
jl
cmp
inc
push
inc
push
movsb
push
mov
les
loopne
or
jge
and
les
xor
xor
cmp
cmp
inc
adc
xor
push
pop
hlt
pop
clc
or
pop
mov
enter
cmpsl
movsb
loopne
in
call
and
jecxz
filds
push
or
push
xchg
insb
outsb
jo
pop
js
mov
mov
mov
enter
movsb
xchg
test
lods
jae
sbb
sar
stc
enter
adc
adc
cmpsb
in
loopne
push
jecxz
jecxz
jecxz
cmp
add
add
or
or
adc
cmp
outsb
sbb
and
pop
sub
pushf
xor
pop
enter
or
clc
cmp
cmpsb
and
fstpl
js
cmp
outsb
pop
push
out
pusha
jge
jo
push
subb
mov
push
aad
mov
sbb
and
mov
sub
adc
inc
cmp
push
push
aas
push
xor
push
lcall
pop
dec
popf
dec
sub
push
dec
sub
stc
in
dec
xchg
add
xchg
xor
dec
pushf
mov
sbb
dec
inc
cmp
fnsave
dec
out
in
inc
and
add
mov
push
pop
xchg
clc
mov
loop
and
mov
sbb
inc
cmc
cmp
rclb
cmp
xchg
push
dec
jae
sbb
inc
mov
daa
cmpsb
dec
mov
lcall
cmp
and
push
mov
sub
in
lret
mov
mov
movl
inc
popf
dec
orb
push
cmpsb
test
dec
mov
inc
aad
mov
inc
test
xchg
cli
aam
jecxz
mov
clc
sub
aaa
bound
jne
lret
pop
data16
xor
fiaddl
inc
pop
pusha
push
ljmp
push
aaa
dec
jp
push
xchg
xor
loope
pop
dec
xchg
mov
pusha
add
push
test
push
jb
hlt
movsb
xchg
pop
and
inc
addr16
push
dec
inc
push
dec
xchg
mov
sub
jns
adc
cmpsl
dec
sbb
dec
shll
dec
bound
mov
into
cmpsb
pop
pop
inc
ja
xchg
xor
mov
fs
clc
jecxz
mov
cmp
adcb
cwtl
lcall
orl
stos
pop
dec
stos
cmpsl
ret
dec
orl
push
jne
out
sbb
dec
or
cmp
les
lcall
fs
sbbb
xchg
dec
and
xor
mov
xor
cmp
cmpsb
xorb
dec
or
xchg
pop
dec
xor
push
push
inc
push
mov
test
call
sub
sbbl
pop
xor
sbb
push
cmp
sub
test
ds
dec
cs
je
dec
xor
ficompl
jl
add
inc
push
xchg
in
mov
test
pusha
xor
fdivs
inc
into
xor
cmp
scas
and
bound
xchg
sbb
pop
jb
cmp
mov
sub
cld
dec
out
push
push
int
jbe
inc
jo
sbb
pop
mulb
ds
divl
inc
jge
pushf
dec
add
jl
fsubs
mov
dec
inc
cmpsl
iret
mov
in
xchg
stc
mov
sahf
lea
dec
push
dec
imul
sar
push
or
neg
stc
push
call
not
lea
jno
ror
call
rep
pushf
not
mov
pushf
lea
jmp
int
stos
inc
pop
jb
hlt
push
mov
cld
je
push
mov
mov
lret
iret
cmpsb
mov
add
lea
data16
pop
ror
jmp
pop
inc
mov
daa
js
stc
jmp
aad
sahf
add
aam
subb
sub
daa
mov
les
fcomps
sbb
fdivs
movsl
std
stc
jmp
jmp
push
mov
lret
and
xchg
inc
sti
pop
mov
repz
xchg
mov
pusha
fisubs
lret
test
add
aas
arpl
ret
jecxz
stos
std
cmpsb
add
call
icebp
repnz
inc
xor
cmp
bswap
cmp
int3
sub
jmp
test
iret
in
icebp
or
sbb
aad
mov
push
xchg
daa
adcb
ficompl
adc
fsubrs
arpl
stos
xor
lea
call
stc
pusha
test
clc
sub
jmp
or
shrd
bswap
mov
neg
rcr
clc
push
pusha
sub
mov
jmp
pop
jb
cwtl
sub
test
fisubrl
push
pop
popf
test
cmpsb
cmc
je
or
jecxz
xchg
repz
jnp
fdivrs
or
shll
sti
or
fld
cmp
or
adc
mov
add
mov
fwait
stc
fsubs
mov
sub
xlat
adc
add
sti
cmp
pop
mov
pop
fnstcw
idivb
mov
mov
popf
leave
decl
jb
or
mov
dec
sarb
mov
jns
mov
insl
test
sti
jnp
sub
es
cwtl
test
lret
imul
sbb
orb
insb
stos
mov
sub
sub
adc
pop
sub
sarl
adc
sub
out
push
imul
int3
pop
test
or
mov
fucomp
daa
inc
cmp
cmp
pushf
pushf
call
pushf
lea
jbe
shl
push
shr
sub
push
pusha
call
jmp
pop
movzbl
mov
push
jmp
jg
jb
pop
jb
push
mov
ficompl
inc
xchg
fidivrl
pop
lea
jbe
stos
out
mov
arpl
popf
push
mov
iret
std
xchg
sub
sti
in
and
mov
pop
mov
outsb
movsb
jns
lahf
leave
pop
daa
jns
xchg
cmc
or
testl
popl
dec
sub
je
mov
daa
out
les
jb
test
in
cwtl
pusha
mov
mov
pusha
xchg
bswap
mov
lea
mov
movzbw
jmp
lea
jne
push
pushl
pushf
stos
pushf
lea
jmp
add
jb
int3
cmp
inc
cli
pop
call
or
test
loopne
xchg
pop
add
sbb
loop
ret
out
push
dec
cmc
xchg
cmpsl
inc
push
sbb
gs
insb
pushf
test
sub
fstpt
nop
rcrb
lods
out
push
inc
inc
sahf
jo
sbb
fdivr
jb
jmp
inc
aas
inc
jmp
aam
je
fildll
pop
shrl
out
jl
pushf
dec
int3
sbb
adc
add
cmpb
pushf
lea
jne
btc
sub
xor
bt
mov
stc
cmc
add
stc
movzwl
or
mov
push
pushf
call
lret
dec
pop
jb
pop
sbbl
imul
mov
fwait
nop
mov
cmp
ds
loope
jnp
cmp
icebp
test
jne
scas
cmpsl
sbb
mov
and
rclb
lcall
sub
rorl
xchg
mov
je
sub
pusha
cmp
pushf
popa
cld
jnp
adc
mov
xchg
mov
and
jle
cli
xor
pushl
lea
call
pushf
push
pushf
lea
jae
push
xor
call
pushl
pushl
lea
jb
clc
cmc
jmp
not
call
xchg
push
jecxz
pop
jb
outsl
popf
inc
call
push
inc
inc
jl
pop
shlb
leave
push
adc
lds
stos
inc
xchg
cmp
pusha
outsb
lret
mov
shll
mov
cwtl
sahf
mov
push
pop
jge
add
dec
aas
test
and
testl
push
rcl
daa
push
dec
pop
jb
lods
sbb
cmpsb
xor
xor
loope
aas
test
lea
and
sub
bound
mov
fmull
mov
cmp
inc
xchg
mov
mov
pop
loopne
sti
and
in
adc
pop
insb
out
in
mov
pop
cltd
cmpsl
or
jl
outsl
lock
fmul
sub
push
push
popf
mov
and
jg
sti
adc
pop
dec
jns
pop
pop
mov
out
lcall
adc
mov
mov
ficoml
xchg
loop
imul
xchg
aad
rol
cmp
push
push
lea
jae
cmp
call
push
jmp
cld
or
dec
pop
jb
addr16
dec
cmpsl
or
rorl
jle
clc
mov
lret
test
pop
incl
mov
aaa
lea
in
jecxz
ljmp
xor
aas
or
push
stos
jae
mov
and
lock
mov
sub
mov
movsb
xchg
shrb
test
cmpsb
or
mov
xchg
or
insb
mov
cmp
adc
in
insb
dec
jne
negl
mov
cltd
pop
mov
xchg
lea
clc
or
xor
imul
jns
rcr
xor
xchg
pop
push
iret
mov
xor
cli
adc
std
push
pusha
outsl
arpl
int
mov
popa
xchg
insl
xchg
and
jns
jge
cmovne
addr16
addb
adc
xchg
loop
xchg
push
int3
pop
and
and
jb
add
test
cmp
sub
push
jmp
insb
push
jnp
jne
xchg
mov
jecxz
add
orl
add
or
sub
sub
push
or
stos
sahf
pushf
test
fldt
fiaddl
adc
fildll
pop
adc
push
mov
mov
cmp
lds
aad
mov
dec
aam
fimuls
out
jns
roll
sub
lods
sub
mov
xor
lret
out
cmp
fcmovnbe
out
bound
push
out
lcall
testb
mov
xchg
imull
pop
dec
fists
and
push
mov
arpl
mov
sub
and
push
int
adc
add
xchg
mov
push
cwtl
sbb
dec
dec
cmpsl
sub
ljmp
jmp
ficoms
sbb
movl
movb
movb
push
lea
jmp
test
jmp
sub
push
pushf
push
jmp
mov
pushl
pushf
mov
pushl
ret
stc
pushf
test
cmp
jmp
or
pop
dec
pop
jb
outsl
out
scas
or
add
xorl
imul
inc
out
outsl
loopne
fnsave
mov
popf
jp
pop
jecxz
jle
sbb
int3
pop
add
xlat
addr16
mov
ss
ret
push
fdiv
adc
cmp
or
stos
insb
scas
sbb
pop
sti
ret
and
fisubs
xchg
out
aas
shll
out
and
mov
and
xor
xor
stos
add
fs
je
sar
add
movzbw
adc
sub
bsf
shr
rcr
pusha
xadd
mov
clc
bsf
ror
mov
add
pushf
add
clc
jmp
pusha
lea
jb
cmc
call
pusha
movl
call
btr
btc
cmc
mov
bt
pushf
push
cmpb
call
clc
cmp
cmp
mov
cmc
call
call
push
bt
cmp
call
jmp
push
call
jmp
outsl
xchg
sahf
dec
pop
jb
cwtl
xor
cwtl
sub
or
xorb
push
push
ss
jnp
or
in
loope
adc
adc
inc
insb
xor
stc
inc
jno
mov
das
mov
add
mov
jmp
mov
mov
rcll
data16
popa
int
cmpsb
mov
iret
gs
addr16
movsb
and
mov
dec
lret
movl
pusha
mov
movl
pushl
lea
jmp
aam
loope
pop
jb
push
xchg
sub
sub
movl
xorl
mov
dec
icebp
jnp
mov
mov
pop
inc
pop
inc
loope
mov
lods
pop
insl
insl
mov
mov
xchg
sbb
test
ljmp
nop
jl
shrb
das
xchg
scas
jno
imul
adc
outsl
lods
loope
xor
sbb
aaa
mov
sahf
cmp
inc
out
hlt
or
mov
addr16
lea
jns
mov
ja
push
mov
pushf
push
push
pushf
lea
jmp
inc
test
movb
cmp
xor
cmc
clc
cmc
ror
jmp
jmp
sbb
bsf
shl
aaa
mov
stc
mov
bt
sub
cmp
jmp
mov
mov
mov
pushf
lea
jmp
pushf
mov
push
lea
jmp
call
pushf
call
pushf
push
movb
mov
pusha
mov
pushl
call
mov
bt
pushl
popf
pusha
pushf
pushf
lea
jmp
pusha
call
mov
push
pushf
sub
jbe
cmp
add
push
call
push
cmpl
mov
mov
mov
pusha
call
pusha
movb
pushl
popl
pusha
push
pushf
mov
lea
jmp
mov
movw
call
lea
jne
jmp
call
ror
test
ror
neg
and
sbb
sbb
xor
test
cmp
rol
mov
add
jno
add
pushf
call
pushl
popl
push
lea
jmp
bsf
bsr
shrd
mov
inc
mov
push
jmp
pushl
popf
pushf
pushf
lea
jmp
mov
call
pushl
pushf
popl
pushl
pushl
popl
push
pushf
push
lea
jmp
pushf
mov
movb
mov
movw
mov
lea
jmp
jmp
push
push
lea
cpuid
jle
clc
sub
push
call
mov
mov
pushf
push
lea
jmp
add
pusha
mov
call
pushl
push
pusha
xchg
bt
mov
cmc
pushf
push
sub
pushf
lea
jne
bt
clc
xor
push
movb
xchg
pushl
push
movl
mov
push
pusha
jmp
mov
mov
jmp
call
pushf
not
xchg
movzbw
mov
pusha
movsbl
lea
xchg
not
jmp
mov
sub
ja
sub
jo
pusha
mov
movb
pushf
lea
jmp
shrd
shr
jmp
pusha
jmp
pushf
call
mov
pushf
pushf
push
pushf
mov
push
movb
call
push
push
mov
movb
lea
jmp
push
mov
pushf
lea
jmp
xchg
lea
not
repz
popl
sbb
movw
cmc
xchg
clc
bswap
pushl
popl
jmp
pusha
mov
call
shr
add
movzbl
jmp
aam
mov
aad
shl
and
pop
das
pop
shl
ror
rcl
pop
pusha
pushl
popf
bswap
setp
call
jmp
mov
jmp
lea
mov
call
bt
push
sub
mov
test
cmp
bt
cmpl
movw
mov
pusha
pushf
mov
pushl
mov
pushf
mov
pushf
pushf
movb
pushf
mov
jmp
cmc
clc
add
jmp
not
call
pushl
popl
mov
pushf
movb
movb
lea
jmp
clc
cmp
pushf
call
pushl
lea
jg
popl
pusha
push
pushl
movl
lea
jmp
jmp
add
clc
clc
cld
pushl
pushl
popf
movl
pushf
push
pushf
lea
jmp
lahf
pushf
mov
bswap
mov
push
jmp
pushf
popl
lea
je
not
mov
push
not
mov
lea
mov
mov
mov
lea
pusha
pushf
call
mov
pusha
mov
movb
mov
pushf
mov
lea
jmp
cmc
jmp
cmc
stc
pushf
cmp
add
jmp
pusha
pushl
popl
pushf
lea
jmp
pusha
mov
mov
push
pushf
push
movb
lea
jmp
xor
lea
bt
rcr
pop
bt
call
popl
push
lea
jmp
pusha
pushl
pushf
add
jmp
pushf
push
dec
cmp
pusha
cmp
xor
stc
stc
sub
call
push
cmc
add
pusha
movw
jmp
shl
shrd
inc
mov
pushf
shl
add
neg
shr
inc
xor
add
shrd
mov
test
pushf
shl
push
pushf
bt
shr
stc
jmp
movsbw
mov
jmp
setne
inc
mov
lea
btc
neg
clc
bsf
rcl
btc
add
cmc
test
bswap
and
or
mov
call
pushf
mov
push
mov
mov
push
lea
jmp
pushl
mov
call
pushf
push
jmp
pusha
call
sbb
mov
push
clc
add
pushf
lea
jmp
push
cmp
rcl
mov
adc
ror
pushf
rcl
add
pusha
pushl
mov
pushf
pushf
mov
push
lea
jmp
shl
xorb
movzbw
pop
pushf
lea
jmp
mov
pushf
jmp
mov
neg
stc
bt
stc
jmp
pusha
movb
pusha
movb
pushl
popl
pushf
lea
jmp
mov
jmp
pushf
popl
push
pushl
popl
movb
lea
jmp
movzbw
rcl
pushf
mov
add
add
jmp
neg
clc
cmp
pusha
add
movb
clc
sub
pushf
mov
pushf
push
lea
jmp
das
movsbl
lahf
aaa
mov
sub
btc
mov
pusha
stc
add
pusha
mov
pushf
push
mov
lea
jmp
mov
mov
jmp
movb
push
movw
mov
call
setb
lea
inc
adc
shl
btc
neg
btc
add
shld
not
call
pushf
pushf
popl
pushf
movb
pushl
popl
pusha
pushf
pushf
pushf
lea
jmp
pushf
pushf
mov
pusha
pusha
mov
movb
mov
pushf
pushf
pushl
lea
jmp
push
mov
pushf
movl
lea
jmp
pusha
pushf
call
daa
mov
sub
rol
push
rcl
mov
mov
push
add
movb
movb
call
call
cmp
clc
sub
pushf
shr
jmp
pushf
movb
pushf
movw
mov
push
mov
lea
jmp
mov
pushl
lea
jmp
jmp
rol
mov
jmp
push
call
pusha
mov
call
pushf
mov
pushl
pushf
popl
pusha
movw
movb
pushl
popl
pushf
push
push
push
lea
jmp
jmp
pushf
jmp
movw
add
test
lea
bt
movb
cmc
call
xor
test
clc
mov
call
mov
movb
mov
pushf
popl
push
pushl
popl
movw
movw
mov
movb
lea
jmp
jmp
mov
mov
jmp
pusha
xor
call
sub
stc
stc
bt
rol
jmp
mov
call
movb
movb
mov
pushf
jmp
cmc
not
test
movb
and
jmp
shl
pushf
pushf
movb
mov
call
mov
pushf
mov
lea
movb
mov
pushf
lea
jmp
shl
push
notl
aaa
ror
shr
shl
mov
call
call
mov
cld
pusha
cld
mov
pushf
push
pushf
rep
bsr
cld
mov
shrd
mov
cld
pushl
popf
pushf
push
mov
movb
lea
jmp
push
push
mov
pusha
pusha
mov
mov
push
mov
pushf
pushf
lea
jmp
pusha
mov
mov
call
call
sub
shrd
mov
test
add
jmp
pushl
popl
movb
movl
movb
lea
jmp
pushf
mov
mov
pushf
pushf
lea
jmp
push
pushf
mov
pushf
pushl
ret
jmp
call
lea
not
mov
call
call
jmp
not
movzbw
lea
jmp
lea
jns
mov
pusha
push
lea
jmp
and
cmc
mov
mov
test
test
sub
pushl
jmp
movl
sub
stc
bt
xor
bt
mov
bt
test
sub
lea
jns
pushf
pusha
mov
pusha
lea
jmp
mov
jp
bt
cmp
add
call
call
add
add
call
mov
lahf
call
lea
jne
and
test
xorb
setno
pop
pushf
pusha
pusha
lea
jmp
mov
lea
mov
call
movb
pushl
popl
mov
push
lea
jmp
test
jmp
daa
bts
bsr
lea
cmc
pusha
pushf
cmp
cmp
movw
pusha
pushl
pushf
lea
ja
das
aaa
shrd
mov
stc
bsr
lea
push
shr
sub
stc
dec
pusha
lea
btr
btc
and
stc
bsr
add
cmp
sub
movzbw
pusha
mov
mov
push
call
jmp
btr
ror
movl
sar
bswap
inc
bt
mov
xor
rcr
neg
pusha
xchg
bts
sub
movb
ror
shl
sar
ror
lea
not
and
clc
sub
rcr
mov
add
mov
pusha
shr
add
lea
btc
add
ror
cmp
mov
btc
shl
xor
cmc
not
push
movsbw
ror
shl
rcl
neg
test
add
shl
or
setno
or
neg
bts
pusha
xor
call
pusha
call
mov
mov
movw
pushf
mov
lea
jmp
mov
jmp
mov
jmp
movsbw
btc
movzbl
lea
mov
cmc
pushf
mov
rol
pushf
cmp
test
add
call
mov
pushf
jmp
push
add
rol
bts
test
neg
or
shr
pusha
cmc
add
cmc
sub
or
or
neg
pushf
add
rcr
movzbl
pushf
test
cmc
test
mov
cmc
test
or
pushf
pushl
pushf
lea
je
cmp
xor
call
mov
pushf
lea
jmp
movb
xchg
movzbw
mov
call
jmp
cmp
movl
xor
call
mov
call
pushf
call
mov
push
lea
jmp
mov
pusha
mov
rol
ror
mov
stc
sub
call
mov
pushf
pushl
lea
jmp
btr
mov
cmp
jmp
sub
cmc
pushf
movzbl
call
mov
pusha
lea
jl
pusha
pushf
popl
call
mov
jmp
pushl
test
sub
jmp
clc
cmc
not
test
not
test
push
sub
cmp
and
call
stc
aaa
jmp
mov
pushf
pushf
pushf
pusha
lea
jmp
pusha
mov
push
mov
push
movb
movw
pusha
mov
pushf
push
pushf
lea
jmp
pusha
movb
mov
mov
movb
lea
jmp
lea
jne
bswap
sar
mov
cmc
clc
and
call
rol
push
movzbl
test
add
jmp
push
push
mov
pushl
pushf
lea
jmp
test
shr
bswap
sar
movzww
push
xor
cmc
mov
bt
rol
cmc
bt
cmc
cmc
sub
clc
stc
movb
not
cmc
cmc
mov
bt
xor
clc
bt
cmp
lea
stc
call
sbb
or
cld
inc
or
inc
sbb
out
adc
and
daa
or
or
or
sbb
and
or
mov
ds
and
and
cmp
mov
inc
or
sbb
or
inc
or
sbb
or
sbb
or
push
and
or
sub
or
int3
sbb
out
adc
and
or
and
and
or
mov
or
or
or
cmpsb
inc
or
push
cmp
aam
or
pushf
and
and
xor
mov
or
inc
or
sbb
or
aam
or
inc
ds
inc
ds
push
cmp
js
or
rclb
and
or
dec
sbb
cwtl
inc
or
out
or
sbb
or
inc
aaa
or
sbb
and
or
int3
sbb
cmp
sbb
or
mov
or
cld
inc
or
xor
or
inc
sbb
sub
or
cld
inc
or
inc
inc
or
xor
aam
or
clc
cmp
sub
or
rclb
and
xor
xor
or
or
sbb
or
rclb
and
or
clc
cmp
inc
sbb
and
and
or
inc
or
js
or
sbb
or
js
or
inc
sbb
and
or
inc
aaa
or
into
cmp
sbb
or
sbb
or
push
cmp
sbb
or
clc
xor
inc
inc
or
mov
or
js
or
or
or
aam
or
out
adc
and
pop
or
cmp
dec
sbb
sub
or
xor
or
out
adc
and
inc
or
aam
or
push
cmp
cld
inc
or
mov
or
sbb
or
rclb
and
xor
or
or
mov
or
and
and
aaa
or
push
push
or
rclb
and
inc
or
out
or
rclb
and
and
or
aam
or
clc
xor
push
and
or
dec
sbb
mov
or
clc
cmp
and
or
inc
aaa
or
sbb
or
mov
inc
or
and
or
test
or
sbb
or
push
and
or
and
and
cmp
cmpsb
inc
or
push
cmp
popw
or
and
and
daa
or
popw
or
and
and
or
xor
popw
or
and
and
daa
or
xor
popw
or
and
and
cmp
push
cmp
popw
or
and
and
or
popw
or
and
and
inc
or
push
and
or
and
and
and
and
aaa
or
popw
or
and
and
or
or
or
and
and
or
sbb
or
popw
or
and
and
inc
or
int3
sbb
popw
or
and
and
sbb
cld
inc
or
popw
or
and
and
or
pusha
adc
popw
or
and
and
pop
or
cmpsb
inc
or
popw
or
and
and
or
popw
or
and
and
or
popw
or
and
and
or
xor
push
cmp
out
or
push
cmp
push
cmp
sbb
and
or
test
and
and
and
inc
or
pushf
and
and
inc
or
out
adc
and
or
cld
inc
or
mov
or
sbb
or
cld
inc
or
sbb
or
inc
sbb
inc
sbb
mov
or
pusha
adc
mov
or
cmp
and
and
xor
sbb
and
xor
cwtl
inc
or
mov
xor
push
push
or
or
or
inc
test
movb
bt
add
cmc
pushf
call
pushf
mov
pushf
pushf
pusha
pushf
lea
jmp
call
movsbw
cmp
bt
shr
mov
btc
mov
jmp
pushl
mov
pushf
lea
jmp
shr
jmp
push
call
dec
neg
ror
rcr
movzww
cmp
clc
cmc
pusha
xor
pusha
lea
jbe
rol
test
sub
cmc
cmp
not
call
pusha
divl
pusha
pushl
pushf
mov
call
call
call
lea
jns
pushf
pusha
mov
pusha
pushf
lea
jmp
add
call
movl
movw
lea
ja
mov
push
pushf
pusha
lea
jmp
mov
call
or
mov
neg
bswap
xor
movsbw
ror
sbb
add
movsbw
jmp
or
movw
movw
bt
bt
xor
pusha
inc
push
pushf
pushf
push
decl
push
pushf
lea
jne
jp
pusha
pushf
pusha
mov
pushf
lea
jmp
pusha
call
pushf
call
jmp
sub
bt
pusha
bt
push
neg
jmp
add
inc
and
movzbl
jmp
movzbw
cld
movsbw
movsbw
push
xchg
movsbl
mov
mov
call
pushf
pusha
mov
pushf
lea
jmp
push
mov
pusha
mov
pusha
mov
pushf
pushf
pushf
pushf
lea
jmp
cmc
lea
stc
cmp
xor
cmp
cmp
sub
jae
test
sub
call
pushf
pushl
mov
mov
pushf
pushl
pushf
lea
jmp
pusha
pusha
call
pushl
popl
mov
pushf
pushf
pushf
lea
jmp
sub
stc
movb
and
pusha
mov
pushf
popl
pusha
call
cmp
sub
pushf
push
mov
pushf
mov
pushf
pushl
pusha
lea
jmp
pushf
popl
jmp
call
sub
jmp
bswap
rcl
sar
mov
jmp
jmp
call
stc
cmp
push
push
call
call
pusha
movb
mov
push
pushf
pushf
pushf
lea
jmp
push
pushf
mov
mov
mov
movw
movb
movb
lea
jmp
pushf
pushf
pushf
mov
mov
mov
lea
jmp
add
pushf
pushl
call
rep
shl
sub
jle
shr
pop
pushf
test
shl
sar
mov
cmc
pusha
jmp
movw
mov
movb
pushf
pushl
push
mov
push
lea
jmp
jmp
clc
neg
push
jmp
push
call
aaa
mov
clc
mov
clc
add
push
pusha
call
lea
jg
mov
pusha
push
pushl
pushf
lea
jmp
pushf
pusha
pushf
mov
pushl
movl
push
mov
mov
push
push
lea
jmp
stc
bswap
pushf
mov
rcl
add
rol
xor
shld
sub
test
adc
adc
xor
call
pushf
popl
pushl
pushl
popl
pushf
pushl
movb
movw
lea
jmp
test
mov
clc
pushf
pushf
sub
pushf
mov
push
mov
push
pushl
lea
jmp
pusha
pushf
mov
push
pushf
pushf
push
lea
jmp
jmp
neg
bts
aas
mov
xor
mov
test
add
pushf
pushf
pusha
movb
mov
pushf
pushl
push
mov
lea
jmp
pushl
inc
movw
call
pushf
mov
push
call
movb
call
jmp
cmc
stc
pushl
cmc
jmp
call
pushf
mov
pusha
pusha
mov
mov
push
pushl
pushf
lea
jmp
pushf
call
mov
mov
mov
lea
jmp
pusha
call
mov
movzbw
movsbw
mov
pushf
setns
xchg
jmp
push
mov
push
mov
pusha
call
pushf
clc
call
pushf
pushf
popl
mov
pusha
push
pushl
popl
pushl
lea
jmp
call
movw
inc
test
test
add
cmc
bt
sub
pusha
push
sub
movl
movb
mov
push
pushf
movw
mov
lea
jmp
pusha
sbb
add
mov
bt
cmp
mov
sub
call
movb
cmp
neg
push
test
jmp
lea
jne
cmp
stc
bt
movzbw
mov
test
pushf
and
stc
cmp
call
pushf
jmp
mov
jmp
pusha
pushf
popl
call
pushf
pushf
mov
lea
jne
push
pushf
mov
pusha
mov
push
pusha
lea
jmp
push
mov
mov
lea
jmp
jmp
jmp
jmp
xor
stc
ror
jg
push
pushf
dec
call
mov
mov
pushf
popl
call
push
cmp
shl
dec
mov
rcr
mov
stc
stc
sub
pushf
pushl
shr
pusha
mov
pushl
pushf
mov
pushf
popl
call
cwtl
call
mov
std
cld
call
setbe
mov
clc
adc
movsbw
mov
jmp
mov
mov
test
pusha
sbb
mov
cmp
call
mov
movw
pushl
movb
pushl
lea
jmp
stc
clc
add
movb
lea
jmp
pusha
call
pusha
bt
cwtl
test
sub
mov
mov
push
lea
jmp
pushf
popl
pusha
call
aas
rdtsc
pushf
sub
pushl
jmp
pushl
movb
mov
movb
pushf
mov
lea
jmp
mov
sbb
mov
cmc
call
pushf
pushf
pushl
mov
pusha
pushf
popl
push
lea
jns
popl
push
mov
mov
lea
jmp
rcl
aaa
pushf
btr
mov
and
rcl
pushf
cmp
mov
clc
add
jmp
mov
mov
call
pushl
mov
pusha
mov
pushf
lea
jmp
adc
add
shr
shr
mov
sbb
xor
rol
mov
mov
pushf
clc
sub
test
bt
pushf
shl
mov
push
pushl
mov
mov
jmp
mov
cmp
stc
add
bt
shrd
pushf
movw
mov
mov
pushf
popl
pusha
movb
pushl
popl
mov
pusha
lea
jmp
lahf
setbe
mov
pushf
jmp
cbtw
call
movb
call
movsbw
cmp
daa
cmp
mov
pusha
call
pushf
pusha
mov
call
pushf
push
pushf
mov
mov
pushf
call
and
mov
bt
call
pushf
pushf
mov
pusha
lea
jmp
movsbw
mov
not
movzbl
xchg
movsbw
mov
pop
mov
pushf
movb
mov
mov
pushl
ret
dec
movsbw
shl
cmc
xor
sub
xor
pushf
mov
test
pushf
cmc
pushf
add
jmp
movl
mov
push
pusha
movl
pushf
lea
jmp
pushf
mov
mov
mov
movb
pushl
movb
lea
jmp
stc
rol
stc
stc
test
pusha
sub
mov
not
cmc
lea
pushf
clc
clc
xor
pusha
cmc
sub
pushf
pushf
pushf
mov
mov
mov
movb
mov
lea
jmp
bsr
mov
clc
mov
cmp
test
test
sub
push
test
cmp
shl
call
push
sub
push
jmp
rcl
mov
stc
clc
add
bt
cmc
shld
mov
lea
jnp
pusha
mov
call
pushf
call
push
mov
pushl
mov
movb
pushf
lea
jmp
pushf
mov
call
pushf
pushf
call
lea
call
pusha
pushf
popl
pushf
pushl
popl
movl
pushf
pushl
lea
jmp
xor
cmp
add
jb
mov
cmp
pusha
sub
pushf
mov
pushf
lea
jmp
mov
push
pushl
ret
stc
bt
bt
mov
mov
bt
pushf
sub
call
push
sub
clc
stc
movw
cmp
add
call
ror
daa
push
neg
mov
cmc
sub
jmp
clc
neg
push
call
jmp
jmp
not
movsbw
inc
call
call
cltd
rol
rcr
mov
stc
jmp
pushf
xchg
movw
call
add
add
dec
add
add
rolb
call
add
add
test
add
pusha
cli
add
mov
sgdtl
pusha
push
add
add
