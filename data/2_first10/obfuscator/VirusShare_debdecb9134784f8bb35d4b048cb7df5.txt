adc
push
cwtl
mov
push
push
pop
sbb
fisttps
xchg
stos
jp
rcr
push
loop
pushf
int3
call
sub
cltd
mov
dec
ss
lret
jl
pushl
mov
int
shrb
movl
push
xor
insb
sti
jle
pop
cmp
push
dec
and
aam
clc
pop
shll
fsubrl
and
and
fisttpl
mov
div
jno
insl
mov
mov
push
sbb
rolb
and
stos
in
or
sbb
loopne
stc
and
es
ret
pop
mov
stos
adc
cmp
push
add
pop
push
adc
shlw
mov
push
dec
cmp
addb
inc
push
sbb
sbb
nop
mov
roll
mov
imul
clc
jle
mov
fs
je
mov
not
push
mov
setae
lea
push
mov
setno
push
not
pushl
popl
not
lahf
lahf
jmp
mov
bswap
pusha
pushf
mov
call
pushf
call
jl
jl
sbb
xchg
sbb
test
outsb
inc
cmc
test
push
ja
cld
jo
inc
sub
push
in
add
mov
mov
popf
jb
pop
fnstcw
pushf
sarl
adc
outsb
mov
pop
dec
mov
jnp
mov
add
mov
and
add
cmc
pusha
rol
movb
jmp
call
pushf
lea
jae
test
pushf
sub
call
jmp
ror
stc
push
mov
call
mov
pop
mov
or
stos
jnp
das
repnz
stc
icebp
repnz
loop
sbb
mov
cs
jp
sbb
loope
mov
pop
or
cmp
aam
jge
movsb
jo
cli
mov
sbb
mov
mov
or
outsl
lock
jle
push
add
cmpsl
lods
int3
cmp
out
cmp
out
icebp
sbb
imul
jle
das
xchg
stc
cs
into
punpckhbw
xchg
enter
mov
sub
scas
scas
test
push
xchg
fidivl
inc
jecxz
int3
jnp
movsl
shrb
and
and
xor
pushf
movb
lea
jmp
cmp
pushf
pusha
lea
ja
bswap
jmp
mov
mov
lea
ja
pushf
sar
add
ror
add
lea
sbb
rcr
shl
mov
cmp
test
cmp
push
lea
jb
clc
cmp
call
jmp
fucom
rcr
push
or
mov
inc
add
sub
sbb
out
stos
push
jne
mov
push
hlt
repz
popa
cwtl
sub
out
adc
dec
loopne
mov
jae
mov
cmpsb
inc
jmp
jo
test
push
ret
mov
insl
popf
int3
mov
fdivrs
xchg
mov
mov
popa
mov
sbb
lcall
sti
mov
aas
pop
repz
pop
fprem
lret
in
pushf
pusha
mov
mov
fwait
mov
dec
outsl
inc
xchg
stos
mov
mov
mov
clc
cld
test
jae
pop
pop
in
cmp
gs
sbb
dec
mov
fstl
cmc
loope
addl
cmp
add
pop
jne
sbb
push
dec
inc
cli
and
sti
into
lods
xchg
mov
inc
mov
in
loope
jns
enter
sub
and
jns
or
jno
push
stc
add
sbb
inc
ds
push
in
adc
popf
out
or
push
addr16
fstp
pushf
push
jmp
fldcw
aad
inc
in
pop
int3
jnp
in
or
add
addl
pusha
lea
jmp
pusha
push
mov
mov
mov
movw
lea
jmp
push
movl
pushf
pusha
push
mov
lea
jmp
mov
mov
movb
pushf
mov
pushl
ret
nop
es
mov
fwait
sub
sbb
test
jmp
stos
mov
push
je
inc
cmc
mov
push
lods
popf
mov
lcall
adc
cmp
movsb
ds
lret
and
sub
stos
sahf
dec
lret
test
pop
leave
pop
mov
sub
pop
push
mov
xchg
int3
add
data16
out
mov
sub
and
enter
mov
in
lahf
mov
sbb
loopne
push
inc
push
push
les
xchg
mov
out
mov
pop
arpl
and
jmp
cmp
jo
test
rcrb
and
test
shll
mov
dec
movsl
ret
xor
mov
add
dec
or
sbb
xchg
jnp
outsl
xchg
out
dec
ret
in
adc
fs
scas
sub
sbb
adc
and
inc
call
mov
pop
jnp
inc
scas
push
and
add
or
aam
mov
add
out
cmpsb
add
push
pop
clc
imul
sahf
shl
inc
add
inc
xchg
dec
and
out
add
sbb
inc
push
out
loop
and
loop
add
cmp
inc
ret
fcmovne
fwait
add
sahf
cmp
daa
mov
dec
xchg
push
jne
jbe
sbb
push
lmsw
and
add
or
sbb
jecxz
ljmp
mulb
les
rorl
sbb
test
out
xchg
dec
shll
sub
test
scas
mov
mov
and
add
or
shl
scas
lcall
lcall
push
outsb
insb
add
push
sbb
out
add
scas
mov
dec
lods
loop
sbb
in
out
and
mov
stos
and
xor
rcr
inc
and
test
push
outsb
loopne
mov
lock
sbbl
ss
add
or
insb
sub
out
into
add
add
inc
ret
out
adc
popa
xchg
sub
and
push
mov
add
mov
lock
or
cmp
test
lock
ficoml
add
dec
mov
in
xchg
add
inc
loop
sbb
dec
scas
loop
sbb
in
dec
add
and
add
sahf
and
lsl
mov
mov
out
xorl
movsl
testb
xor
sub
fadd
xchg
mov
sub
rolb
stos
in
out
sub
and
adc
test
push
cmp
icebp
stc
add
loop
movsb
dec
flds
into
and
ret
mov
cmpsl
out
or
jg
movsl
mov
push
outsb
jg
push
add
mov
xchg
fadds
movl
dec
lret
loopne
loope
lock
and
and
lds
push
stos
scas
mov
add
jbe
sub
sub
fiaddl
cmc
pop
and
sbb
sbb
notb
ss
xchg
lea
sti
add
mov
aad
stos
jg
scas
out
je
gs
dec
sbb
fdiv
xor
and
pusha
test
xchg
out
fwait
das
lods
add
lds
add
and
scas
vrsqrtps
pextrw
pop
cltd
cmpsl
and
int3
adc
adcb
sbb
or
cmp
clc
cld
sub
jns
mov
adc
jno
dec
or
mov
xchg
popf
stos
imul
sbb
lock
sub
mov
push
mov
add
in
dec
dec
push
addb
sbb
lods
and
lret
mov
mov
jmp
lods
adcb
sub
push
add
out
xchg
xor
in
in
sub
xchg
pop
cmpsb
sub
decl
fisubl
add
sahf
add
add
rorl
daa
and
add
and
xchg
scas
mov
and
add
ljmp
or
and
add
xor
loop
or
and
add
ds
out
fiaddl
xchg
out
pop
or
add
sub
push
cli
sub
pop
scas
ret
and
add
sub
adc
insl
cli
cmp
mov
push
stos
movsl
dec
lods
push
stc
test
cmc
insl
cmpsl
scas
xchg
outsb
ror
cmc
lods
cmpsl
scas
xchg
outsb
ret
loop
dec
ljmp
clc
or
data16
enter
inc
mov
mov
in
popf
or
mov
mov
dec
stos
hlt
loop
add
call
ret
lds
pop
sahf
lret
loop
add
call
ret
test
clc
sahf
mov
mov
cmpsl
out
loope
add
inc
add
sbb
cmp
xchg
ficomps
or
and
sub
je
enter
mov
xlat
xchg
mov
ret
mov
sahf
mov
sahf
push
and
push
sub
sahf
daa
sub
enter
sbb
daa
and
imul
scas
mov
add
cmpsl
stos
push
out
xchg
ret
xchg
iret
sbb
sub
mov
inc
mov
inc
jmp
mov
out
sub
and
scas
repnz
jo
add
iret
insb
sbb
push
mul
shrl
sbb
and
fadds
js
jge
fisubrs
dec
scas
subl
cmpsb
lcall
xchg
mov
cs
cmp
inc
inc
and
in
int3
data16
inc
and
mov
add
sub
lds
adc
movsl
test
fwait
icebp
and
or
inc
jbe
push
pop
ret
xor
pop
or
movsl
loopne
jbe
sbb
mov
lods
movsl
add
sub
and
stc
xor
adc
jmp
adc
in
and
or
jae
sbb
in
mov
or
in
scas
popf
loop
sub
call
xchg
out
adc
scas
enter
adc
les
das
test
add
addr16
mov
add
lds
sub
dec
push
aaa
in
push
addr16
addl
and
cmpsb
out
outsb
sub
push
test
outsb
cmc
loop
out
lock
loope
mov
lock
mov
push
lods
cltd
and
pushf
test
jl
insl
arpl
aas
jbe
fistpll
dec
mov
movsb
inc
ficoms
clc
test
and
lret
lahf
jg
out
push
lds
and
les
pushl
pushf
jmp
cmp
out
push
cs
xchg
lock
lcall
bound
pushf
cmp
std
xor
testb
sub
jmp
addr16
and
mov
lods
insb
cli
mov
sbb
sbb
movsl
sbb
sub
shl
pushf
xchg
lods
outsb
xor
xchg
mov
mov
movsl
cs
sbb
ds
mov
cmp
sub
subb
xor
sub
lods
lahf
pop
add
fiadds
mov
out
jmp
rclb
dec
data16
sbb
mov
mov
aad
mov
sbb
and
and
call
rorb
push
dec
push
or
lret
xchg
and
xchg
mov
mov
roll
push
inc
flds
loope
imul
sbbl
les
pusha
push
movsl
push
adc
sbb
dec
mov
ret
ljmp
inc
lret
xchg
add
arpl
inc
sbb
lds
in
rol
lret
test
not
lahf
lea
pushf
xchg
movb
pop
jnp
bswap
pushl
not
call
jne
insb
insl
outsl
outsb
cs
insb
add
xchg
dec
nop
add
jbe
imul
push
lret
sahf
push
mov
mov
mov
cmp
jmp
mov
inc
ret
push
or
stos
stos
out
and
arpl
cmc
jg
loope
cltd
loopne
sbb
xlat
and
xchg
out
mov
es
cmc
lock
sbb
xorb
cwtl
sbb
inc
sub
mov
lsl
scas
mov
cwtl
inc
jge
mov
xchg
and
inc
std
femms
sbb
inc
loop
movsb
clc
xchg
push
icebp
cmp
les
jnp
cltd
xchg
lea
ja
jno
jb
cmp
clc
bt
cmpb
call
call
inc
not
mov
lea
push
lea
call
push
pushf
call
call
jno
stc
mov
mov
inc
add
push
cli
mov
in
cmc
adc
push
jl
or
push
mov
jo
push
dec
aam
mov
adc
cmp
xor
cwtl
jbe
imul
adc
add
sub
je
adc
push
mov
out
hlt
sbb
roll
out
rol
dec
dec
ljmp
imul
cli
pop
adc
or
push
mov
fstp
jnp
jmp
movl
push
movl
push
pusha
pushf
movw
lea
jmp
mov
jmp
add
add
or
sub
jecxz
add
or
dec
bound
add
or
jge
or
mov
jecxz
add
add
add
add
add
or
and
or
lea
add
add
add
setle
add
or
xchg
movsl
or
sub
jecxz
add
add
add
add
add
or
cmp
or
bswap
xchg
lea
xchg
jmp
movsbw
mov
pushl
mov
call
pushf
lea
jae
sbb
mov
adc
movsbw
inc
shrd
mov
cmp
shld
adc
neg
mov
push
call
pusha
pushf
movl
pusha
pushl
mov
lea
jmp
pusha
pusha
pushf
lea
jae
jmp
cmpsb
cmpsl
into
cltd
or
adc
add
xchg
cs
or
dec
sahf
repnz
cmp
mov
xor
daa
test
fistps
push
stos
dec
sub
jno
ja
jge
shr
xor
xchg
rclb
xchg
push
leave
or
add
movb
insb
push
inc
bnd
jo
mov
or
mov
mov
loop
sbb
or
mov
and
pop
mov
stos
dec
sub
dec
push
ret
mov
int3
jnp
mov
and
test
cmp
push
pushf
call
mov
btc
cmp
cmc
mov
test
shl
movzbw
mov
stc
jmp
mov
pusha
bswap
movl
movzbw
mov
pusha
lea
movb
pushf
lea
jg
push
push
movb
push
pushf
pushl
popl
pusha
movw
movw
pushf
pushl
ret
sete
bsf
push
movzbl
aas
mov
sbb
sub
aaa
push
aas
push
movsbw
lea
adc
push
btr
add
neg
push
sub
adc
mov
pusha
stc
jmp
jmp
call
jmp
data16
cltd
pop
mov
in
mov
xorl
mov
mov
lret
push
push
mov
inc
push
jns
push
push
push
push
mov
out
mov
xchg
mov
sarl
mulb
out
loop
jmp
mov
pop
fs
pusha
int3
xor
inc
mov
shll
fmuls
in
int3
jnp
jnp
add
cmp
jb
pusha
clc
cmp
call
btc
not
mov
bt
stc
bt
and
test
cmc
cmc
add
pusha
call
movl
jmp
cmp
movb
push
pushl
jmp
movl
movb
push
pusha
call
pusha
jmp
mov
jmp
int3
rorl
cmpsb
or
mov
push
insb
xor
jo
test
mov
cmpl
or
aad
add
jno
push
lods
sub
mov
mov
icebp
dec
std
cltd
jmp
sub
pop
mov
jbe,pt
leave
or
xchg
out
insl
out
test
cmpsb
jno
fnsave
int
xor
cmpsb
ret
mov
sub
add
ucomiss
xchg
je
ret
addl
enter
add
cmp
jae,pt
lret
dec
ret
ror
pop
outsb
add
and
fdivs
lods
mov
enter
mov
lahf
mov
push
out
jbe
pop
jno
adc
je
or
loope
or
and
push
int3
jnp
xor
mov
ljmp
cmpsb
and
bound
es
cwtl
pop
ljmp
add
mov
cwtl
pop
clc
repnz
imul
inc
cltd
add
test
cwtl
pop
pop
lds
mov
loopne
and
sbb
movsl
mov
pop
pop
xlat
cmp
dec
rorl
lods
sbb
xor
jmp
test
cmpsl
mov
shrl
lret
fbstp
cmp
mov
imul
pop
or
mov
xor
push
lea
push
std
or
fldt
xchg
jae
dec
push
pop
call
out
test
repz
jne
rorl
int3
jnp
push
dec
fldl
and
pusha
lea
je
shr
stc
mov
pushf
cmp
lea
xor
add
movsbw
rol
test
test
mov
bt
pushf
test
call
adc
mov
mov
movb
mov
pushl
ret
adc
pusha
jmp
pop
lret
or
add
add
ljmp
add
lret
add
add
mov
or
add
add
ret
add
add
add
orl
add
dec
or
mov
or
test
mov
add
lds
add
js
add
add
add
and
jmp
cmc
call
push
movl
jmp
repnz
jmp
lea
jb
bt
clc
cmp
jmp
loope
out
sub
dec
pop
popl
adc
push
sti
mov
and
movsl
movb
cmp
out
fdivrs
inc
lea
rclb
and
jmp
stos
enter
adc
scas
mov
je
mov
ljmp
fnstsw
shlb
dec
mov
notl
cmc
enter
test
iret
and
xchg
cmpsl
int
jnp
imul
int
sbb
out
aas
bound
daa
cld
push
iret
scas
leave
mov
push
jae
cmpsl
in
or
loopne
jle
imul
sbb
cmp
mov
dec
addl
mov
push
mov
mov
pop
mov
xchg
loopne
and
loop
dec
jp
das
lds
mov
jmp
movsb
adc
jae
jne
or
adc
pop
and
or
push
inc
and
pushf
pushf
pushf
pushl
ret
idiv
xchg
insb
jg
dec
mov
mov
into
rcll
icebp
inc
stc
int3
mov
pop
add
int3
jnp
icebp
push
lea
or
ret
xor
push
add
imul
nop
sbb
xchg
dec
mov
dec
lods
out
int
xchg
xchg
dec
vcvttsd2usi
je
inc
cmpsb
push
sub
mov
add
jecxz
jle
cmp
mov
and
icebp
jb
shl
jnp
movsl
movb
or
jle
sbb
into
and
fidivrs
sahf
jle
xlat
mov
adc
mov
stos
repnz
pop
imul
sub
in
mov
int3
jnp
mov
mov
int3
dec
mov
lods
dec
mov
out
add
fisubl
outsl
sub
dec
lea
pop
in
mov
push
ficompl
ss
movsb
adc
pop
out
addl
mov
cmp
xchg
mov
sbbl
jne
call
jo
movsb
push
push
scas
push
int3
test
pop
iret
push
imul
cmpsl
sub
out
test
jg
test
jnp
aaa
cs
je
pushf
stc
pushf
add
clc
call
shl
cmp
dec
mov
je
roll
sahf
mov
incb
test
je
cmpsl
inc
mov
gs
xor
lcall
jmp
mov
loope
inc
dec
jbe
pop
fnsave
jno
pop
mov
lods
ds
or
lea
mov
loopne
fidivs
loop
out
sub
jns
stos
cwtl
sub
add
jp
xchg
movsb
int3
cwtl
mov
jnp
scas
movb
cmp
test
daa
cwtl
shll
roll
enter
sar
enter
rcrl
daa
sbb
shrl
rcll
test
pop
rcrl
cwtl
test
cmp
cmp
les
in
mov
out
aaa
sub
out
xlat
mov
cmpsl
xor
mov
pop
lods
jne
inc
out
add
push
and
cmpsl
sbb
xchg
lret
add
pusha
mov
shll
push
negl
jbe
cmpsl
testl
shl
mov
jle
in
rcll
xchg
lds
xchg
into
xchg
out
fsubrs
aam
dec
sahf
dec
fcomi
out
pop
into
aam
sbb
inc
push
fwait
mov
seto
ljmp
jae
clc
ljmp
sbb
aaa
nop
stos
dec
sbb
push
xor
outsl
dec
test
or
js
fimuls
arpl
out
dec
pop
jns
sbb
xchg
mov
loop
cs
lods
xchg
add
jp
out
mov
loope
nop
mov
out
xchg
rep
adc
js
lock
gs
dec
pop
lock
movsl
loop
dec
stos
outsb
loop
jnp
jno
dec
cmp
loop
mov
js
cs
fisubrl
mov
out
xchg
repz
hlt
js
jnp
out
lock
add
mov
fists
add
sub
mov
inc
cli
imul
and
jecxz
pushf
mov
dec
lods
dec
fcmovb
rcl
fbstp
inc
xchg
mov
js
add
and
pop
lods
dec
inc
aam
dec
adc
and
xchg
movsb
add
lea
popa
sahf
xchg
xor
aam
jno
mov
push
rcrb
ret
xchg
clc
or
pop
xchg
arpl
stos
mov
mov
cmp
int
enter
xchg
pusha
fidivl
push
mov
mov
mov
mov
adc
test
int3
jnp
mov
sbb
or
xlat
aam
pushf
lea
jmp
lea
lea
mov
pusha
pushl
lea
call
pushf
push
mov
push
lea
jne
jmp
movl
pushl
push
pushl
movl
lea
jmp
mov
jmp
fs
in
repz
cmp
sub
jne
iret
hlt
adcl
jmp
or
jnp
xchg
xor
push
icebp
jmp
les
mov
mov
icebp
jae
xchg
icebp
inc
and
mov
ljmp
clc
cld
mov
lcall
into
cmp
dec
cld
xchg
push
mov
int3
jnp
stos
ret
cmp
test
push
mov
cmc
test
push
pushf
jmp
pushl
mov
movw
call
das
xchg
shr
loop
mov
mov
int3
xchg
add
add
gs
int3
push
inc
mov
popa
dec
xor
inc
mov
cmc
inc
repz
repnz
cmp
inc
lcall
data16
iret
push
sbbl
mov
cmpsl
push
push
push
cmp
cltd
ret
pop
mov
inc
sbb
push
div
aam
fdivl
lcall
hlt
sbb
add
int3
jnp
in
xchg
jae
gs
insb
xor
cs
insb
add
lcall
aaa
hlt
add
shrb
lahf
fmull
movl
lea
call
and
sar
mov
push
clc
jmp
ret
dec
xchg
cmpsl
push
repnz
and
inc
sarb
push
jo
pop
ja
rorl
push
push
in
stc
xchg
jbe
or
adc
movsl
add
or
jno
adc
xorb
fmuls
inc
xchg
int3
jnp
insb
mov
xchg
pushf
call
jne
mov
mov
mov
lods
jo
in
bound
ja
rclb
inc
push
in
sbb
lcall
test
adc
add
addr16
push
movsl
js
jnp
adc
add
test
add
sar
das
aas
xor
neg
aaa
cmc
btr
mov
and
bt
clc
add
and
mov
cmc
cmc
push
test
movl
pusha
lea
je
test
stc
sub
jmp
aas
mov
dec
mov
fiaddl
dec
jmp
fstpt
lahf
fs
mov
les
inc
xor
stos
inc
hlt
mov
inc
sub
test
mov
nop
lahf
mov
cwtl
pop
cbtw
pop
cwtl
cs
jecxz
lock
or
xchg
or
sbb
xchg
mov
and
sub
xor
bnd
lret
add
cltd
or
fsubs
jmp
mov
or
insb
movzwl
out
push
out
das
fucomip
cmp
jp
and
inc
adc
mov
xor
shl
mov
jg
cmp
loope
stos
adc
push
out
sub
outsl
das
push
jbe
xor
out
add
sbb
fucom
push
ret
fcomp
movsl
cmp
cmpsb
cmpsb
jecxz
shlb
imul
lods
pop
dec
jecxz
adc
addr16
fcomi
mov
cmp
push
lea
jne
bsr
btc
or
mov
dec
shrd
clc
test
sub
shl
sbb
cmp
clc
mov
test
sub
jmp
sti
int
aaa
les
jecxz
or
pop
cmp
hlt
xor
cltd
rorl
cmpsl
mov
mov
cwtl
jle
jne
sbb
mov
adc
mov
push
lahf
jne
push
adc
pand
xchg
mov
adc
push
es
inc
and
adc
dec
cmp
sti
fsts
in
call
or
xlat
or
stc
imul
fs
pop
push
mov
add
xchg
jge
add
lea
jb
jmp
pushf
pushl
xchg
mov
push
pushf
pushl
dec
test
shl
pushf
call
lea
btr
mov
mov
shl
sub
rcl
push
xor
shl
das
push
shr
push
daa
shr
bsf
rcr
xor
not
lea
pusha
mov
mov
jmp
in
dec
test
pop
mov
subl
jb
dec
out
ds
sub
pop
dec
imul
fwait
cmp
xchg
sbb
mov
mov
push
adc
incl
push
loopne
add
jp
adc
stos
stos
mov
xor
lock
add
es
xchg
nop
adc
pop
xchg
out
pusha
push
sbb
movsl
dec
sbb
loop
jle
xchg
es
mov
hlt
mov
adc
ss
dec
out
mov
lods
jle
leave
xchg
ror
jnp
in
rclb
pusha
pusha
movl
lea
jae
pushf
movl
push
pusha
lea
jmp
jmp
pushf
push
call
neg
adc
push
adc
dec
mov
dec
call
jmp
lods
movb
stc
call
movl
pusha
lea
jmp
lea
call
pushf
push
movb
adc
pusha
pushf
lea
call
push
pushf
jmp
movw
jmp
dec
call
pusha
pushf
lea
jb
push
stc
pusha
pusha
cmpb
pushf
pushf
pushf
call
movl
push
pushf
call
sub
mov
pusha
sub
jns
cmpb
jmp
pushf
cmp
xor
call
mov
push
pushl
pushf
pushl
lea
jmp
call
add
push
push
lea
jnp
pushf
mov
push
lea
jmp
pushf
pushf
call
xchg
bswap
mov
lea
lea
pushf
call
shl
bsf
bsr
push
jmp
bt
mov
add
pushf
push
push
lea
jmp
lea
je
push
stc
cmc
pushf
sub
cmc
cmc
cmp
mov
call
movsbl
mov
not
movsbw
movzbw
call
push
jmp
div
xchg
fisttps
mov
pop
pop
decb
jg
mov
imulb
jne
pop
mov
jmp
add
inc
in
lret
dec
mov
adc
push
mov
repz
mov
dec
int3
aad
sbb
or
pop
adc
lea
loope
movsl
mov
sbb
adc
ds
pop
lods
add
jno
xor
lds
jno
aad
shl
adc
orb
xchg
inc
incl
pushf
mov
lea
setbe
lea
call
call
test
xor
call
add
push
xor
inc
dec
xchg
insl
mov
dec
mov
inc
xor
lock
aad
jp
loopne
stos
arpl
push
add
aam
mov
sub
pop
push
adc
pextrw
mov
inc
inc
mov
xchg
stos
or
pusha
test
movsb
jne
mov
or
jae
push
pop
subb
cmc
sahf
cli
pusha
or
mov
es
push
jmp
push
out
inc
or
xchg
push
jnp
stc
hlt
jp
jne
shr
mov
call
call
imul
cmp
pusha
add
mov
pusha
movb
lea
jmp
push
pusha
lea
jae
movsbw
mov
rcl
mov
push
bsr
mov
stc
add
jp
stc
cmp
sub
pusha
test
jmp
clc
ror
pushl
push
xor
cmc
stc
bt
pushf
shr
jmp
mov
pushf
mov
jmp
jmp
cmp
pushl
mov
call
pusha
jmp
xor
cld
sub
jno
std
bt
popfw
push
jmp
lea
jne
sbb
sub
inc
mov
pusha
clc
jmp
push
jmp
jmp
lea
jne
bt
rcl
mov
neg
rcl
bswap
pushf
sub
pop
sar
bswap
mov
test
test
cmp
bt
sub
stc
stc
cmc
bt
pushl
call
test
or
pushf
lea
je
bt
cmp
or
pushf
jmp
or
jmp
add
push
insl
mov
cmpb
mov
sbb
dec
dec
dec
cmpsl
mov
mov
dec
lret
dec
in
mov
or
ror
ja
shl
rol
mov
mov
ds
jbe
cmpl
sahf
ds
lret
mov
jb
aas
and
xor
xchg
add
mov
pop
je
mov
and
push
int3
jnp
jecxz
mov
or
add
test
cmp
push
jmp
stos
jle
stos
dec
jl
mov
stos
jle
ja
jl
mov
xchg
outsl
mov
jle
and
push
jl
jle
into
es
jno
mov
jmp
lods
jge
xor
xchg
lret
jno
dec
hlt
lea
xor
dec
in
push
je
out
cld
and
fistpll
push
in
adc
sbb
mov
jp
xchg
mov
es
sbb
and
inc
xor
test
xchg
sub
mov
test
mov
mov
cmp
inc
mov
add
jnp
or
sbb
add
cmpsl
mov
ljmp
mov
hlt
jne
ret
push
xchg
inc
cld
les
mov
fs
sub
insl
pop
jg
call
add
mov
dec
ss
adc
push
sahf
imul
jl
aad
mov
pop
sub
movsb
fidivrs
xchg
in
cmc
or
or
daa
out
pop
cmp
fmuls
pop
adc
mov
jo
jb
xor
mov
xor
movsl
sbb
lods
jg
push
fisttps
mov
pop
outsl
mov
or
sbb
sub
dec
pop
and
xacquire
cmc
sbb
xchg
push
in
add
push
inc
sub
or
fiaddl
xchg
into
inc
xchg
cmp
mov
hlt
out
xchg
subl
add
shlb
xchg
out
dec
or
xor
sahf
or
iret
outsl
jg
xchg
sarl
outsb
lret
mov
jge
mov
fwait
push
mov
repnz
shlb
mov
leave
mov
mov
xor
or
xor
jne
sub
fs
pop
adc
push
loope
cmp
lret
repnz
inc
arpl
sbbb
lock
ficoms
sub
sbb
call
ljmp
mov
out
dec
popa
test
mov
pop
mov
and
mov
sub
testl
jo
xchg
mov
int
push
mov
shlb
xor
mov
in
mov
rcll
add
cmp
mov
jp
sbb
movl
jne
cmp
mov
in
dec
leave
dec
sub
bnd
xor
pop
cmp
les
and
test
cld
jae
adc
pop
dec
addr16
mov
xor
xor
test
fstps
into
pop
jg
rclb
cld
lock
dec
in
inc
lret
stos
rorl
ret
test
lahf
rcll
in
push
inc
sub
repnz
cmp
xchg
pop
xor
pop
gs
das
inc
aaa
fdivrs
icebp
sub
mov
sbb
sub
testl
insl
pop
xchg
mov
shll
jmp
sar
ret
or
test
sub
mov
ror
jno
push
scas
lea
call
testl
dec
mov
mov
xchg
out
jmp
xchg
inc
inc
push
test
gs
sub
fisubrl
sub
jmp
dec
ror
jnp
adc
js
add
mov
fisttpll
test
addb
dec
aaa
aaa
jge
pop
add
and
pop
movsl
es
push
inc
adc
xor
loopne
repz
movsl
inc
mov
es
and
ret
xchg
adc
inc
mov
inc
xabort
xchg
cmpsl
xchg
fidivrs
lods
sub
adcb
mov
inc
out
inc
ret
sub
sbb
or
xchg
mov
xchg
cmp
jmp
lahf
loop
stc
test
es
xlat
andb
sbb
dec
sarl
out
add
inc
out
mov
movsl
stc
int3
jnp
dec
gs
pushf
lea
jne
movsbl
pusha
mov
pushf
movb
movzbl
pushf
mov
pusha
lahf
jmp
call
lea
jne
rcr
lea
mov
bt
push
stc
call
pusha
lea
jne
pusha
pusha
movb
movsbw
movw
mov
push
cwtl
movsbw
call
push
mov
call
ja
lea
pusha
mov
pushf
pop
bswap
mov
jmp
lods
bt
cmc
rol
mov
xor
jmp
pusha
lea
jne
and
movzbw
mov
jmp
dec
add
xlat
imul
hlt
rol
xchg
mov
lea
pop
sbb
jge
in
add
ret
in
mov
sbb
xor
loopne
dec
loopne
test
nop
scas
inc
shrw
lock
or
pop
jne
hlt
push
movb
sbb
loopne
out
in
xchg
mov
test
repnz
icebp
out
mov
adc
dec
mov
shll
xlat
into
inc
imul
jle
jnp
push
cmovno
scas
pushf
jmp
pushf
mov
mov
movl
movl
lea
jmp
cmp
pushf
call
pushl
popl
pushf
push
pushf
movb
pushl
ret
arpl
arpl
xor
fs
insb
add
repnz
cltd
sbb
adc
popf
adc
jno
push
aad
pop
in
fcmovnu
xchg
iret
iret
js
cmp
mov
or
xchg
xor
sub
imul
aad
sar
cmp
fcoms
or
addr16
iret
nop
movsl
dec
enter
fcmovu
xlat
push
xchg
add
push
ret
and
and
or
pushf
out
scas
xor
loope
adc
mov
outsb
cmpsb
push
dec
ret
test
sti
pop
jns
pop
pop
pop
push
orb
daa
inc
or
cmp
test
aaa
aaa
insb
mov
jae
int3
jnp
hlt
icebp
mov
jge
mov
push
pushf
lea
call
jmp
aad
lds
sbb
shlb
lock
xchg
out
cmp
popa
cltd
mov
and
dec
out
jno
in
dec
sub
jmp
scas
xor
jg
inc
pop
dec
ljmp
aam
mov
popa
test
aad
jnp
subl
mov
sub
cmp
clc
cmc
repnz
jmp
add
inc
gs
gs
inc
imul
add
mov
popl
add
movl
call
pusha
stc
stc
push
xor
sub
cmp
cmc
or
push
pusha
mov
lea
je
pushf
mov
jmp
pusha
push
lea
jne
btr
mov
cmc
cmp
stc
cmc
cmp
jmp
inc
lea
pusha
pushf
jmp
lea
je
push
cmp
stc
push
sub
pushf
test
test
cmp
call
bts
rol
mov
btr
shr
and
push
bsf
bsf
mov
cmp
pushf
or
push
lea
je
rcr
add
lea
adc
bswap
xadd
sub
pushf
shld
sub
shr
shrd
shld
pop
mov
stc
pushf
bsf
inc
add
shr
add
lea
sar
sar
mov
cmp
pusha
shr
stc
cmp
stc
cmp
movb
lea
je
call
call
push
lea
call
pusha
pusha
call
pusha
push
or
pusha
push
jmp
cmp
call
add
add
add
sub
add
add
add
add
add
add
add
add
add
or
mov
add
add
mov
pushf
lods
mov
lock
jns
push
cmpsl
push
adc
pop
std
icebp
shrb
je
dec
pop
and
jo
fistpll
jecxz
out
adc
xlat
cld
nop
xor
pop
xor
pop
in
test
jbe
or
cld
sbb
aas
lods
add
inc
cld
mov
cld
xor
js
shlb
addr16
imul
leave
stos
inc
fs
and
mov
xchg
lods
dec
std
push
mov
lock
inc
cmp
mov
popa
jp
aas
loope
xchg
mov
mov
push
cmc
cmp
iret
cltd
test
ss
push
add
push
adc
adc
je
and
repz
sub
or
add
pop
addr16
popf
jnp
dec
sub
inc
push
mov
inc
in
movsb
push
mov
mov
xor
sbb
dec
ret
inc
lahf
add
mov
dec
fs
divb
clc
inc
xchg
sub
clc
andb
push
fdivrs
mov
scas
testl
out
cmp
xor
xchg
sub
in
pop
cld
lcall
in
cmp
fisubl
outsl
shrl
mov
cmp
lea
sbb
cmpsb
push
xchg
mov
imulb
or
rcll
ds
mov
pop
mov
xchg
or
dec
jo
push
pop
imul
iret
sbb
orl
mull
cmp
testb
dec
jecxz
bound
xchg
fdivl
std
movl
clc
leave
jb
lea
loopne
cld
push
pop
xchg
xor
cmp
imul
out
push
push
test
xor
xchg
out
test
inc
cmc
outsb
sub
mov
out
ds
out
enter
mov
dec
sarb
outsb
dec
and
jns
js
push
adcb
xchg
jmp
sbb
jg
mov
and
push
lret
andl
mov
scas
int3
mov
in
push
fwait
cmpsl
je
ficoml
pop
js
ds
adc
mov
cmp
rorb
loop
mov
shlb
sub
leave
rolb
mov
inc
add
sbb
inc
sbb
insb
in
repnz
inc
jge
jnp
inc
call
jg
lahf
pop
cli
inc
mov
nop
sahf
xor
outsb
gs
addr16
repnz
push
or
or
inc
int
int
es
mov
xchg
mov
xor
push
int
push
jb
imul
lock
pop
and
jno
or
pop
idivb
push
cmpsl
mov
mov
and
cmpsb
pop
ljmp
jns
xor
add
cltd
hlt
gs
inc
push
mov
fldt
cld
dec
push
pop
pop
stos
push
lret
inc
cs
push
jmp
sbb
fwait
mov
inc
xchg
int3
pushf
cld
jge
lcall
jo
lods
push
lock
adc
xchg
into
or
into
adc
clc
and
dec
pop
pop
jo
pop
aaa
mov
pop
daa
lahf
cwtl
jo
jge
repnz
int3
es
les
mov
test
leave
gs
daa
movhps
in
rorl
ret
stos
fidivl
stos
cli
into
fsubrs
mov
jp
movl
out
mov
jnp
push
gs
xchg
mov
hlt
into
jae
leave
pop
rolb
rcrl
addr16
dec
dec
push
dec
test
cmp
xor
jle
mov
sub
xlat
pusha
imul
jae
stc
fsubr
fistl
dec
ret
loope
pop
ss
cli
jl
mov
xchg
or
jecxz
cmc
cmp
jb
add
rep
or
test
and
push
iret
mov
xchg
je
notb
in
lcall
cmp
jb
imul
lret
faddl
adc
icebp
jle
cmp
mul
stos
xchg
mov
das
sbb
cmpsb
andl
sbb
imul
dec
jbe
testl
cs
mov
fs
mov
or
inc
cli
or
lret
iret
lahf
pop
fnstenv
xchg
test
sub
addr16
push
adc
pop
aas
mov
dec
ja
mov
or
adc
test
int3
jno,pn
sbb
or
xlat
lahf
inc
mov
push
lret
arpl
setp
es
outsb
pop
xor
jnp
sbb
and
inc
icebp
mov
stos
jg
mov
jo
mov
pop
lock
inc
loopne
pushf
aam
mov
mov
ljmp
daa
sbb
leave
add
aas
adc
and
fldt
or
icebp
add
push
mov
jmp
arpl
sub
xor
push
cli
call
or
or
popf
aam
inc
mov
xor
mov
mov
sbb
sub
cli
mov
adc
fadds
inc
pusha
outsb
repnz
mov
cmp
imulb
pusha
out
hlt
jno
outsl
jbe
and
mov
cmpsl
in
mov
and
pushf
test
imul
lea
push
incw
pop
push
aam
leave
mov
daa
add
repnz
push
imul
xor
cmp
cmc
mov
gs
sub
inc
lock
mov
popa
dec
pushf
cmp
adc
sub
mov
inc
pop
pop
movsl
test
and
out
jg
arpl
arpl
dec
mov
jmp
sub
scas
push
leave
fisttpl
push
jle
inc
cmp
mov
cltd
stc
movsb
roll
stc
addr16
ljmp
popa
fstps
int3
add
ret
jl
inc
leave
rcll
out
mov
je
cmc
shr
sub
into
and
jno
out
scas
and
sub
repz
or
xchg
mov
lcall
mov
ss
sbb
bound
push
dec
mov
es
or
ret
popa
notb
and
fldenv
sti
dec
stos
mov
ljmp
xor
sbb
adc
int3
lret
inc
pop
push
enter
rcr
ror
adc
push
insb
and
bound
dec
mov
jno
fwait
data16
gs
sti
inc
inc
stc
pop
push
jle
insb
adc
inc
andl
lea
std
rcr
push
into
sarb
push
mov
xlat
into
icebp
xchg
and
cld
sbbl
xor
ret
jp
xchg
xor
sbb
mov
fsubrs
aas
test
pop
cmp
pop
xchg
clc
or
ret
rcll
xor
and
mov
push
mov
mov
push
xor
jbe
mov
ljmp
push
xor
push
push
ror
mov
mov
mov
icebp
xchg
pushf
jge
mov
mov
mov
js
fcompl
and
add
fisttpl
aaa
addr16
dec
les
push
daa
es
ljmp
ret
pop
lods
movsb
cmp
add
or
into
inc
push
mov
pop
mov
fwait
aas
sub
mov
in
sar
fwait
and
psubsb
pop
je
and
sarl
xlat
mov
cwtl
inc
jae
iret
and
sub
xor
out
cwtl
push
in
sub
scas
and
jmp
cmp
push
jmp
sub
les
mov
or
lock
mov
add
jne
jmp
sar
ja
xor
xchg
or
dec
fldcw
iret
inc
sbb
addl
dec
inc
rclb
les
lret
loopne
daa
sub
mulb
add
jbe
orl
mov
popa
dec
pop
pop
out
jle
hlt
mov
in
call
ret
in
push
push
cmp
or
jno
push
dec
movsl
mov
aad
cmp
inc
fs
movsl
ljmp
mov
sub
notb
mov
repz
je
pop
out
out
shll
stos
and
jle
outsb
test
mov
push
fldl
and
pop
mov
dec
pop
xchg
lahf
clc
hlt
xchg
add
mov
cmp
dec
or
inc
jecxz
mov
ljmp
cmp
xlat
mov
jnp
push
lahf
jnp
sbb
cmp
nop
xchg
insb
lahf
inc
push
add
mov
sti
or
push
adc
sbb
or
imul
jbe
scas
pushf
enter
cmp
and
and
or
sarl
xor
mov
jb
test
xor
pushw
movsl
int
shll
mov
std
push
adc
mov
push
mov
into
xchg
mov
dec
dec
sti
test
out
or
pop
xchg
xlat
fwait
mov
pop
xor
mov
and
test
push
loope
test
es
cmpsb
mov
popa
push
mov
push
add
cmc
mov
out
mov
into
fsubp
jecxz
dec
dec
mov
rcll
lods
xchg
mov
mov
add
cmp
rcrb
jbe
and
xlat
dec
cmpsb
popf
and
sti
inc
cmp
sbb
cmp
fisubl
xor
cltd
leave
add
dec
push
imull
dec
sbb
imul
adc
push
mov
jp
lea
loop
loop
mov
ss
fwait
jae
pmovmskb
es
lret
std
inc
lcall
pop
dec
mov
insb
addr16
sub
js
loopne
jo
lods
jns
mov
movb
std
iret
daa
sbb
mov
mov
sub
add
out
jnp
mov
movsl
push
mov
mov
fistpll
jge
aad
ja
jae
sub
roll
jge
shll
fdivrs
ret
add
sbb
out
xor
jnp
mov
jp
call
fimull
imul
and
push
popa
fidivrs
pop
popa
mov
ret
fwait
pop
mov
int
outsl
and
movb
xchg
lods
imul
mov
stos
ret
jmp
cmp
cmp
arpl
adc
add
adcl
cmp
xor
jae,pn
loope
jns
je
mov
movl
aam
xchg
xchg
stos
or
cmpsl
test
push
pop
insb
dec
jno
into
fwait
enter
mov
aad
hlt
xor
sti
fcoms
push
dec
das
hlt
or
mov
push
xor
sbb
mov
pushf
xchg
les
push
mov
fs
jae
test
imull
ffree
sub
stos
std
sbb
in
or
inc
xchg
cmp
push
jbe
dec
jne
je
inc
push
cs
insb
add
jo
sbb
xchg
dec
mov
and
and
mov
push
pop
in
or
inc
pop
and
push
jmp
inc
ret
out
dec
cmpsl
push
out
fwait
push
insb
mov
push
ja
cmp
xchg
sub
mov
or
cmp
rol
scas
add
pop
movsl
test
roll
cmp
xchg
lret
lret
out
jmp
mov
inc
pop
or
imul
mov
lods
fdiv
pop
pop
lds
in
daa
daa
daa
mov
scas
dec
jb
add
mov
jle
cs
add
icebp
data16
inc
gs
insb
addr16
je
insl
dec
outsb
je
not
movb
push
mov
movsbw
lea
mov
movl
push
mov
pushf
pushl
ret
call
mov
pushf
lea
jae
pushf
pushf
push
pushf
lea
jne
push
call
lea
jne
call
pushf
lea
jne
add
shl
clc
clc
mov
push
or
lea
jne
push
pusha
pusha
lea
je
lea
movsbw
push
lea
ja
lea
bswap
mov
movzwl
pusha
jmp
pusha
cmc
sub
movl
clc
pushf
call
movl
call
lea
jb
test
pushf
bt
cmc
cmpb
pusha
push
call
movl
push
pushl
lea
jmp
cmp
push
lea
ja
pushf
sub
sbb
add
add
test
add
mov
rol
rcr
rcl
neg
mov
jmp
lea
jb
pusha
test
cmp
movb
pushf
jmp
xchg
mov
lea
pop
mov
pushl
pusha
mov
pushf
mov
pusha
pushf
pushl
ret
pushl
lea
jae
call
mov
pushl
popl
cmp
cmc
push
bt
cmp
call
neg
shl
add
adc
cmc
add
shl
or
bswap
pushf
mov
jmp
call
jmp
push
push
addr16
cmp
pop
addr16
push
clc
sbb
test
clc
sbb
arpl
roll
enter
sar
enter
rcrl
daa
sbb
shrl
rcll
test
pop
rcrl
cwtl
test
cmp
cmp
pusha
jmp
test
call
lret
or
xchg
sti
lahf
pushf
lods
xchg
pop
push
sub
int3
jmp
fwait
ja
ret
inc
inc
gs
add
enter
addr16
mov
mov
movsb
les
push
mov
xchg
popf
and
mov
in
test
or
sub
pusha
int
pop
test
scas
xor
push
int3
jnp
inc
pop
in
rorb
add
add
leave
bt
test
add
push
pusha
lea
jmp
call
jmp
lea
je
push
cmp
cmc
cmp
pushf
lea
je
push
pusha
pushl
mov
lea
jmp
call
aam
sbb
lds
mov
aam
sbb
mov
lods
popa
cmpsb
cltd
mov
adc
cmp
loop
add
push
stos
loopne
mov
pop
pop
paddd
ss
scas
and
or
lds
fmul
xchg
rol
lds
pop
mov
fsub
mov
sub
mov
xchg
das
imul
jbe
jmp
sub
xor
jno
cwtl
in
add
loop
aaa
xchg
imul
sbb
lret
stos
test
gs
imul
dec
sub
loopne
aaa
pop
mov
in
xchg
xchg
divb
fcompl
setb
nop
xor
cld
lods
orb
lcall
movsb
mov
xor
cltd
jnp
add
insl
aad
mov
adc
sarl
mov
xchg
enter
jmp
loop
mov
lcall
outsl
aam
mov
mov
and
scas
lahf
fisttps
test
je
add
movsl
aaa
mov
push
sub
cli
sbb
mov
int3
jnp
mov
lds
push
in
xchg
sbb
jge
in
cmc
fistpl
daa
addr16
testl
loope
pop
push
in
inc
cmp
out
sbb
int3
add
fsubs
lods
mov
lods
call
das
mov
sub
push
inc
mov
mov
daa
addr16
lret
aas
es
fwait
dec
xorb
xchg
mov
pop
imul
sbb
sbb
outsl
push
add
bswap
mov
pushl
pushf
pushf
movb
pushl
ret
and
cwtl
out
cmpsb
pop
push
gs
test
cmpsl
sbb
das
movb
data16
cmp
or
daa
inc
push
out
add
test
xor
test
pusha
in
aas
stos
inc
push
inc
jnp
adc
sbb
add
mov
outsl
fsubl
mov
mov
push
inc
or
pop
in
inc
aaa
jno
mov
ret
test
dec
inc
pop
xchg
addr16
movsl
cmpsl
subb
inc
add
xchg
movl
lea
sub
out
sbb
adc
cmp
ret
adc
movsl
into
inc
xor
dec
jns
leavew
call
les
call
fnsave
inc
jmp
das
inc
insb
and
fwait
mov
adc
loope
and
pop
shlb
daa
cmpsb
mov
mov
add
cmpsb
dec
sbb
mov
sbb
aas
mov
sub
icebp
mov
mov
pop
xchg
and
ljmp
movsl
test
in
mov
rcrb
fldcw
mov
push
loop
imul
jecxz
sub
and
inc
repnz
xchg
cmp
loope
or
rol
add
lods
lea
xor
sub
aas
and
mov
adc
sti
addb
sub
mov
cmpsb
and
daa
or
lods
inc
in
lds
or
mov
test
test
pop
push
repz
ret
and
iret
xchg
addl
mov
and
roll
jno
cmpsb
and
test
adc
test
imul
adc
cmp
movsl
out
popl
mov
out
pop
adc
movsl
push
in
mov
iret
cmc
xchg
dec
pushw
movsl
cmpsb
mov
adc
pusha
testl
and
shrl
push
jbe
push
iret
in
addr16
movsl
mov
nop
or
test
out
adc
mov
inc
les
dec
mov
inc
mov
adc
scas
lret
pop
and
fmuls
xlat
cmpsl
add
xor
lea
call
fsubrp
add
and
sbb
mov
and
push
test
cmp
adc
fldl
push
mov
sub
sub
sub
push
mov
call
test
test
in
aas
mov
in
dec
lods
outsb
mov
jno
sub
or
xchg
adc
xchg
out
addr16
sbb
sub
or
cmp
sub
int3
sbb
push
add
stc
cmpsl
push
inc
sub
cwtl
xor
pop
jno
adc
mov
jl
fbld
jno
jns
lds
and
lds
mov
in
sub
and
jno
hlt
xchg
int3
shlb
adc
lock
loop
into
cmpsb
pushf
imul
out
mov
jns
xchg
lods
sbb
test
adc
test
mov
push
clc
xor
xchg
xchg
ret
xor
cmpsb
inc
sub
sub
push
mov
test
adc
dec
xchg
lcall
shll
mov
lea
insl
fcmovb
lock
adc
in
add
inc
push
loope
jbe
orl
adc
call
in
pop
inc
inc
andl
out
adc
fs
insl
loop
aad
push
sbb
push
jae
mov
rclb
mov
out
dec
push
stc
adc
jecxz
ja,pn
into
orl
push
enter
add
rcll
inc
and
cmp
lea
out
fnstsw
insl
inc
jmp
dec
pusha
repz
mov
cmpsl
dec
or
pop
call
lods
test
repnz
adc
hlt
scas
adc
dec
mov
xorl
dec
push
js
int
push
and
lret
data16
adc
imul
jnp
cmp
jnp
mov
and
mov
adc
sub
sub
xlat
jg
xor
lods
test
mov
rcl
pop
aam
mov
test
iret
cmpsl
movsl
bound
push
and
es
setne
lock
enter
sbb
push
dec
cmp
jae
and
movsl
push
sub
push
pop
xor
mov
imul
imul
jo
push
test
and
sbb
arpl
ret
add
lds
sub
lret
xchg
rorb
pop
inc
mov
mov
mov
js
call
shll
movsl
dec
dec
mov
fisubrl
mov
loop
scas
out
mov
push
jecxz
lods
push
cwtl
xchg
mov
adc
mov
lret
push
mov
es
sub
xchg
lods
sbb
inc
insl
sub
push
enter
in
addl
sub
into
mov
enter
jo
arpl
cs
ljmp
push
mov
jo
or
mov
std
addb
add
daa
enter
fadds
adc
dec
shrb
xchg
xor
and
sub
jne
sahf
push
adc
dec
push
int
xchg
dec
insl
push
les
add
loope
outsb
jno
mov
inc
add
popf
iret
mov
and
pop
es
jbe
xlat
sbb
add
jbe
lds
or
push
clc
es
jno
scas
pop
and
lods
add
push
pop
push
popf
fdivs
sub
adc
mov
mov
push
test
xor
or
subl
pop
push
call
les
fwait
testb
lret
inc
iret
jmp
xor
sbb
mov
clc
movsl
xchg
rorl
inc
nop
in
dec
out
adc
and
sbb
ficoml
push
popf
cwtl
and
adc
outsl
dec
adc
xor
jp
add
sbb
outsb
or
fs
div
ss
dec
mov
insb
pop
inc
sbb
mov
hlt
insl
dec
hlt
and
push
xchg
fdivrl
fstpl
inc
mov
sub
sub
cmpsl
push
xor
adc
and
imul
sub
dec
push
jb
test
push
pop
add
pop
leave
push
cli
add
or
adc
adc
mov
sub
les
test
out
clc
jb
into
jmp
test
mov
out
mov
and
xchg
popl
test
adc
addr16
js
xor
adc
ljmp
das
int3
push
sub
xchg
mov
lock
pop
sub
push
add
sub
shl
jge
or
add
int
test
test
mull
cwtl
sub
testl
lds
sub
lock
aad
call
test
xlat
xchg
dec
ss
or
add
cmpsb
jmp
adc
push
pusha
xor
mov
aad
stos
cmp
fcoms
jne
pop
adc
stc
jbe
mov
sub
mov
in
push
inc
lds
jg
gs
mov
testb
or
outsb
push
mov
movsl
sub
shlb
xor
add
aas
mov
mov
sub
test
lods
out
mov
or
es
movsb
iret
dec
js
adc
mov
arpl
divl
arpl
sub
scas
pop
xor
or
and
outsb
lahf
xchg
repz
repnz
adc
and
cwtl
jg
test
sub
addr16
dec
jmp
jno
cwtl
test
fisttpl
add
int
xchg
std
mov
dec
es
out
push
fdivs
jge
iret
jbe
daa
inc
mov
push
lea
jbe
arpl
testl
xchg
les
scas
inc
and
sbb
ror
xchg
aad
adc
pop
push
aad
mov
test
adc
test
sub
mov
fsts
and
loope
adc
jmp
xchg
jo
inc
arpl
xlat
out
leave
inc
andl
jno
mov
movsl
mov
pop
daa
pop
scas
imul
sbb
icebp
dec
lret
xchg
les
dec
in
test
inc
xchg
cwtl
int
xor
fdiv
and
push
aas
fisttps
jno
sarl
fnsave
jno
push
lock
out
fstpl
mov
jge
mov
push
cmp
pop
adc
mov
xlat
int3
popf
inc
jmp
andl
int3
mov
push
les
daa
frstor
dec
push
sbb
jmp
jle
fsubs
push
push
enter
jp
cltd
mov
mov
mov
lea
out
movsb
scas
not
dec
adc
inc
xor
or
in
call
sub
shll
test
pop
mov
test
stos
xchg
jae
mov
push
mov
mov
add
inc
es
test
mov
mul
outsb
aas
pop
add
es
into
imul
repnz
and
sub
lods
mov
sbb
icebp
test
out
adc
mov
jnp
rcl
mov
fdivs
inc
dec
sub
je
adc
cli
mov
movsl
cmpsb
mov
mov
cmpsb
out
xchg
jge
into
adc
and
dec
mov
adc
xor
in
test
repnz
mov
out
lds
dec
movsb
mov
push
insb
pop
jmp
push
andl
or
stos
leave
xchg
push
ds
add
jne
subb
adc
push
fdivs
repnz
fs
pop
mov
loop
dec
daa
xchg
xchg
xchg
xchg
push
jle
jae
push
xor
fs
es
mov
mov
das
dec
in
xor
ljmp
add
dec
into
adc
adc
or
mov
cmpsb
js
push
adc
pop
ret
cmpsb
dec
fadds
in
clc
lds
adc
or
sub
jge
sub
add
mov
adc
loopne
hlt
fisubs
dec
or
out
jl
mov
or
out
in
call
scas
push
push
sbb
mov
dec
in
out
jmp
dec
or
pop
movsl
xchg
insl
in
lret
or
push
pop
pop
sub
adc
and
push
loop
pusha
std
mov
out
jle
into
popf
in
fsubs
in
ljmp
cmpsb
lahf
icebp
jle
jmp
lret
or
adc
insb
xchg
sub
mov
add
addb
xchg
nop
jmp
sub
je
repnz
and
outsb
jg
jne
in
push
add
xchg
push
dec
add
adc
das
xchg
lds
movsb
xor
xchg
shrb
push
ja
pop
fstpl
es
sub
es
int
rcrl
dec
in
loope
testl
enter
in
dec
adc
shlb
stos
push
je
jo
push
shrb
sbbl
addr16
cmpsl
xchg
int
and
mov
adc
clc
mov
adc
mov
or
push
es
add
lahf
mov
fs
and
addr16
add
test
les
in
psrad
bound
sbb
fs
fninit
adc
or
es
mov
mov
jg
bound
js
inc
sub
nop
mov
imul
jmp
sbb
sub
mull
and
pop
es
pop
aas
cmc
pop
xor
jne
dec
xor
rcll
out
es
inc
int
addr16
sub
ret
in
inc
int
push
mov
xor
loop
mov
call
or
dec
add
fdivrs
clc
sbb
sub
or
je
jb
adc
pop
loope
insb
loop
ret
movsl
fcom
mov
lahf
xor
adc
lods
sbb
dec
xor
cmpsl
mov
cmpsl
sti
pushf
pop
cs
loope
inc
mov
dec
sub
int3
fs
pop
or
out
adc
data16
and
adc
les
repnz
in
imul
lock
jno
xchg
add
adc
insl
push
andl
adc
cs
pop
add
lret
es
je
cmp
xchg
test
cs
gs
sub
sub
shr
mov
mov
stos
xchg
repnz
enterw
and
push
out
mov
push
xchg
adc
jno
inc
mov
jno
subb
sbb
mov
sub
andb
call
es
mov
iret
out
push
shll
jle
jmp
jae
es
rorl
leave
stos
inc
add
es
lret
inc
insl
outsl
xchg
popa
loop
or
add
lret
pop
icebp
push
hlt
rcll
xor
int3
rclb
movsb
xor
cmpsl
or
daa
mov
cmpsl
jp
and
adc
movsl
add
mov
arpl
in
adc
movsl
js
popf
outsl
xor
inc
in
fstps
cs
nop
jo
sub
stc
cltd
jns
mov
pop
jne
xor
icebp
rorl
mov
aad
jecxz
sub
movsb
dec
sbb
negl
es
push
shrb
mov
mov
ror
icebp
cltd
mov
jge
icebp
out
mov
push
pop
test
and
out
mov
sbb
in
sub
lcall
cmp
sbb
loop
fsubl
loope
or
mov
pusha
aas
stc
xchg
mov
lods
mov
imul
in
ss
jbe
nop
cmp
in
test
mov
jno
jns
xchg
push
shlb
loop
mov
jg
or
test
or
scas
and
int3
xchg
out
and
adc
jl
ror
xlat
data16
and
outsl
jno
xor
enter
enter
nop
or
rcrb
jg
mov
es
imul
jb
leave
in
or
push
push
pop
xchg
ds
test
push
jb
mov
ds
add
and
push
addr16
push
xchg
and
mov
pusha
out
mov
stos
dec
out
inc
enter
sub
adc
out
xchg
mov
pop
cmc
mov
bound
loop
xchg
popf
pusha
xchg
xchg
je
repnz
xchg
inc
rol
ror
lret
push
and
push
stos
or
cmpsb
sbb
adc
dec
inc
sub
movl
jo
aas
push
fsts
mov
mov
jle
jbe
pop
filds
mov
iret
jg
jno
and
sbb
fs
cs
stos
imul
mov
aaa
jno
shl
mov
es
adc
and
xchg
call
pop
out
adc
add
push
mov
inc
push
inc
mov
adc
and
repnz
shll
adcb
sbb
aaa
mov
sub
data16
pop
adc
ja
and
cmpsl
inc
gs
cs
insb
mov
aam
xor
jbe
repnz
mov
add
int3
cltd
lods
dec
mov
cld
inc
add
cmpsl
and
scas
or
dec
cmp
int3
out
sarl
sbb
gs
int
divl
bound
jno
mov
std
icebp
jbe
pop
sbb
push
stos
dec
mov
inc
dec
cmp
lods
mov
sbb
sub
xchg
arpl
dec
xor
cmc
push
out
sub
call
jae
adc
pop
or
sbb
lretw
out
push
repnz
adc
int3
mov
in
imul
mov
test
xlat
dec
aas
push
int
mov
fiadds
lods
adc
xchg
adc
test
movsb
jb
inc
jo
das
inc
js
xlat
movsl
mov
lods
and
sbb
imul
push
mov
cwtl
mov
lcall
inc
sbb
or
cmpsb
and
cmc
jg
adc
mov
lcall
xor
mov
addl
jl
loopne
mov
in
pusha
bound
outsl
add
loop
clc
mov
jno
mov
add
stos
sub
and
pop
mov
daa
adcl
inc
lds
dec
sarb
xchg
add
cli
or
push
pusha
adc
dec
jb
pop
movsb
adc
test
stos
outsl
rclb
push
adc
stos
rclb
and
and
mov
add
push
lret
ss
push
jmp
push
mov
repz
loope
cltd
add
repnz
sub
insb
stos
sbb
xor
xor
ljmp
mov
cmp
daa
add
and
icebp
mov
add
sahf
out
insl
lock
sub
mov
test
jno
xor
gs
sti
loop
mov
ret
cmp
test
inc
test
fcoml
stos
lock
shr
push
and
scas
out
pop
cs
sub
test
push
push
jbe
lcall
and
sub
outsb
daa
adc
movsl
jno
adc
fsubrl
cmp
push
push
std
jp
adc
jnp
adc
pop
int
jb
add
icebp
mov
int
imul
iret
stc
xor
fwait
mov
int3
cmc
sub
int3
sub
int
jg
in
cmp
push
lods
xor
xor
mov
xor
cmp
loopne
cmp
mov
cltd
inc
adc
mov
mov
das
rclb
push
lds
sub
xchg
sub
xchg
cmp
sbbb
pop
orl
pop
fnstenv
xchg
and
inc
pop
cltd
int3
loopne
sub
cld
xorb
rorl
cld
mov
pop
xchg
inc
enter
or
inc
call
and
test
jg
fcoml
add
inc
jo
dec
push
mov
call
mov
sub
movsl
ror
adcl
movsl
adc
dec
pushfw
movsl
int
mov
add
push
mov
and
jmp
pop
call
stc
lret
addl
push
jbe
dec
out
jp,pt
mov
cltd
xchg
ds
testl
imul
and
add
adc
inc
and
mov
test
out
data16
inc
fwait
adcl
inc
jne
and
fs
cmpsl
cmp
sbb
inc
xor
cmpsb
in
xchg
in
insb
pop
push
sbb
xchg
and
movsl
adc
pop
and
adc
sub
or
icebp
xorb
or
subl
nop
or
push
lods
popf
ds
mov
bound
rorb
sub
adc
inc
pop
mov
mov
inc
push
dec
test
addr16
sub
xor
outsb
testw
jge
mov
jo
inc
aam
js
pop
mov
insl
fmull
shl
aaa
jb
sti
cmpsb
push
xchg
push
nop
push
dec
xor
inc
mov
test
mov
mov
adc
mov
xor
lret
loope
sub
xlat
daa
mov
dec
rorb
cltd
scas
sub
sbb
mov
cmpsb
popa
jge
ret
je
jmp
push
pop
enter
xchg
push
loop
push
inc
cwtl
daa
cmpsl
adc
pop
popf
ficompl
mov
jge
jno
mull
jno
mov
fs
push
in
jl
jp
inc
enter
in
adc
push
jno
and
insw
cmp
mov
data16
xlat
mov
lods
inc
inc
shl
pop
repz
xchg
inc
test
cmp
xchg
xchg
adc
xchg
mov
sub
mov
mov
jp
jno
test
dec
adc
mov
adc
test
add
mov
and
callw
outsb
sbb
js
icebp
pop
mov
cmp
outsl
mov
cmpl
or
fwait
test
mov
bound
cmpsb
and
bound
loop
aad
lods
sub
dec
add
insb
int
movsl
inc
stos
lods
rorl
orb
clc
cmpsl
movsl
outsb
enter
ljmp
lods
and
push
and
adc
xchg
dec
cmc
pop
or
sbb
dec
movsl
and
dec
xchg
xchg
gs
inc
popf
mov
dec
fs
cmc
cltd
hlt
std
adc
push
pop
test
js
aaa
mov
dec
test
add
inc
sti
xor
out
or
sbb
push
xchg
lea
dec
adc
dec
icebp
test
mov
inc
enter
clc
adc
cmp
je
test
sbbl
lret
movsb
or
pusha
or
addr16
jmp
inc
mov
in
cltd
repz
inc
inc
pop
adcb
mov
add
or
lds
adc
mov
enter
inc
movsl
or
insl
pop
mov
pop
sub
data16
xchg
xchg
jbe
js
adc
pop
mov
in
icebp
out
pop
aam
pop
jns
in
pushf
adc
mov
pop
or
pop
and
adc
sbb
rcll
icebp
mov
pop
gs
inc
xor
mov
mov
fisubrs
push
adc
cmp
jno
adc
cmp
cmpsb
js
cmc
outsl
mov
sub
cmpsl
adc
insl
or
ret
loope
lahf
data16
xlat
xchg
jno
mov
sub
cmp
pushf
pop
adcb
enter
aam
dec
push
adc
or
jno
adc
inc
xor
je
pop
pop
adc
lods
int3
outsl
sub
sub
sub
popf
iret
pop
cmp
push
insl
mov
or
enter
mov
in
push
fsubrs
das
fs
repnz
loop
call
mov
popf
arpl
and
aaa
stc
push
les
sahf
out
cwtl
adc
and
adc
clc
movsb
bound
jle
and
mov
sbb
or
ret
add
or
in
add
stc
fs
inc
lock
enter
aaa
out
int
out
in
add
inc
pushl
jg
sub
aaa
call
ja
sub
add
int3
mov
aaa
or
sbb
jle
cmp
leave
call
daa
addr16
add
cmovbe
movsl
adc
aas
insl
pop
inc
push
mov
mov
repnz
cmp
or
lock
mov
inc
cmp
imul
ja
mov
insl
imul
scas
adc
mov
adc
xorb
test
icebp
adc
movsb
in
inc
pop
and
lahf
adc
lea
adcl
andb
int
sbb
out
das
adc
push
or
shll
xor
fldl
shll
into
rcrl
ds
pop
daa
ret
pop
test
call
xchg
inc
mov
lret
ja
popf
cltd
push
and
pusha
aad
iret
shrl
jmp
cmp
pusha
test
out
nop
jl
push
cwtl
cmpsb
inc
rcrl
dec
sbb
add
in
sbbb
sbb
xchg
adc
xchg
xor
or
or
test
and
in
stos
addr16
les
cmp
test
or
lret
cli
mov
adc
jge
stos
xchg
inc
andb
lods
push
hlt
jmp
or
mov
je
xorl
or
push
push
add
push
and
mov
jno
mov
mov
ret
fst
push
movsb
adc
test
rolb
xor
sbb
jno
testl
cli
jns
cmp
adc
mov
add
rclb
inc
sub
fwait
cmc
cmp
inc
jb
orl
inc
jmp
andb
ret
fsubs
xor
shl
xor
inc
and
data16
cmpsb
adc
fcoms
outsb
in
jno
ffreep
into
cld
cmp
icebp
push
notb
mov
fwait
popa
mov
popa
int3
xlat
test
je
xchg
sub
sub
roll
enter
jbe
cmp
enter
sbb
popa
out
and
mov
push
jno
push
test
out
cwtl
ds
addb
int
aas
and
adc
jns
xchg
call
lahf
addr16
inc
jne
leave
ja
pusha
icebp
mov
mov
loop
daa
lea
adc
test
mov
mov
pop
inc
sbb
xchg
add
bound
and
push
inc
test
pop
enter
add
jno
inc
out
rcrl
add
in
enter
out
mov
data16
adc
and
and
and
bound
push
or
add
jle
sub
adc
loop
out
arpl
inc
jmp
xchg
xchg
add
stos
jno
cmc
add
xchg
cmpsl
cmpsb
adc
push
jo
scas
adc
add
jno
movsb
out
test
push
xchg
push
sub
popa
lds
jno
dec
or
sub
addr16
cmp
dec
pushf
enter
stos
jns
movsb
mov
mov
shrb
lcall
pop
out
iret
xchg
xor
loopne
push
call
in
adc
push
rclb
cmc
xchg
out
out
add
sbb
out
add
out
cs
lods
sahf
mov
in
scas
data16
add
inc
adc
mov
outsl
xorl
adc
adc
adc
out
mov
xchg
fnstsw
nop
lcall
shl
cmpsb
cmpsl
and
adc
inc
add
cmc
inc
les
push
push
mov
imulb
stos
inc
cld
nop
mov
js
stos
lret
push
andb
or
jno
xorl
call
or
ret
adc
out
rol
jb
in
enter
out
call
in
test
divl
jne
inc
mov
sbb
clc
scas
movl
out
jecxz
stc
cmp
cmp
or
pop
loope
clc
out
xor
data16
cmp
sbb
sub
adc
mov
adc
rcll
and
inc
xchg
lret
lods
call
sub
xor
mov
push
adc
adc
test
add
mov
call
inc
and
cmp
xor
movsl
iret
test
push
scas
aam
or
punpcklwd
push
add
jo
stos
pusha
push
jbe
or
mov
call
jnp
jnp
lahf
xor
pop
js
or
popf
movb
sti
je
mov
adc
test
lahf
lods
adc
pop
jb
mov
ja
std
pop
popa
loop
or
cmpb
ljmp
loope
sub
add
jno
jmp
mov
bound
xor
xor
mov
out
enter
shll
push
jns
adc
dec
jg
shll
jne
dec
inc
mov
xchg
inc
call
push
push
add
sub
add
mov
insb
push
and
adc
sub
push
push
jbe
sarl
out
into
and
jno
inc
loope
iret
out
movb
mov
sti
inc
daa
or
in
add
jno
enter
mov
push
in
std
jg
sub
mov
lock
test
xor
adc
fadds
divb
mov
push
adc
jns
mov
in
mov
xor
sbb
sahf
push
enter
in
loop
sub
jp
outsl
push
or
adc
push
ficoml
jb
aad
out
pop
lods
inc
movsb
push
pop
sbb
outsl
or
xchg
mov
dec
and
scas
xchg
dec
aad
lods
and
dec
js
icebp
pop
call
mov
mov
xlat
add
loop
push
call
lcall
int3
shl
xchg
mov
repnz
xchg
loop
aas
shr
pop
out
pop
mull
jno
fs
cmp
and
ss
mov
mov
ficompl
outsb
popa
push
or
mov
lds
mov
aaa
and
xchg
add
subb
xchg
ret
iret
and
cmp
inc
lock
sub
rol
lds
pop
insl
xchg
xor
fnstsw
and
jbe
call
jae
cmp
pop
or
sbb
fidivrl
lock
loopne
scas
adc
xchg
je
pop
scas
push
lock
shl
jbe
call
push
inc
sbb
mov
push
ja
push
into
add
sbb
enter
jb
adc
sbbb
inc
repnz
mov
cmp
and
or
pop
ja
insb
and
mov
ret
mov
push
sbb
bound
sub
divl
push
in
cld
push
xor
jae
dec
rorl
xlat
sub
data16
or
xchg
call
scas
mov
jno
mov
mov
sahf
dec
cli
dec
test
mov
or
and
add
jno
adc
test
adc
cmpsb
jno
push
xor
mov
movsb
out
insl
std
outsl
in
addl
in
jno
popa
aam
or
call
loop
dec
ja
dec
jb
adc
pop
cmp
adc
inc
cld
push
sub
sbb
in
enter
out
loop
and
xchg
loop
xor
jbe
inc
out
push
enter
sbb
popa
sahf
arpl
xchg
fsts
adc
or
cwtl
jbe
mov
scas
add
xor
pop
gs
test
push
adc
stos
push
or
call
push
fimull
pop
jp
orl
addr16
sbb
cmpsl
adc
mov
pop
cmp
pop
fbld
xor
frstor
test
hlt
pop
add
xor
push
adc
and
push
add
lds
push
and
out
icebp
fidivrs
mov
cmpsb
xor
mov
mov
iret
fsubr
pusha
mov
into
fiadds
mov
insl
or
pop
add
sbb
cli
movsb
mov
xor
mov
add
mov
or
or
lcall
fidivl
mov
inc
shl
loop
cmp
push
and
out
shlb
push
xlat
insb
mov
add
gs
sbb
cwtl
jmp
bound
adc
cwtl
mov
or
rcl
jns
icebp
adc
clc
push
mov
sbb
jmp
jecxz
mov
cmp
cmpsb
mov
inc
mov
inc
ss
dec
pop
or
mov
sbb
in
sar
cmp
and
sub
movsl
cltd
movsl
cmpsb
and
lods
call
mov
jo
lods
xchg
xlat
int
cmpsl
ret
sti
loope
cmp
dec
jg
addr16
bound
and
cmpb
mov
out
scas
data16
lds
out
rcl
in
xor
jno
dec
out
hlt
jp
mov
out
inc
jmp
int3
test
mov
or
scas
adc
mov
out
mov
aam
dec
fdiv
xchg
mov
je
inc
and
inc
shll
and
or
data16
push
push
std
and
sub
call
pop
gs
stos
add
inc
add
push
out
mov
mov
adc
call
enter
icebp
inc
push
outsl
ja
jmp
cs
mov
shlb
jno
or
daa
jo
loopne
cld
mov
je
pop
rcrb
test
repnz
xor
pusha
or
sub
xchg
movsl
inc
in
cmp
dec
add
mov
dec
mov
push
inc
ss
inc
or
add
push
mov
or
sbb
dec
shrb
outsl
and
inc
jge
or
inc
dec
push
cmpsl
jge
adc
pop
mov
and
and
mov
xchg
adc
push
xor
loope
ss
loop
addr16
daa
add
or
mov
mov
js
push
adc
nop
or
lret
xchg
movsb
inc
mov
xor
adc
repnz
repz
pop
dec
repz
adc
and
loopne
ret
mov
dec
orb
pop
addr16
mov
das
jb
out
cmpsl
jno
out
in
data16
repnz
xor
bnd
loopne
xchg
add
and
test
cmpsl
dec
test
lcall
push
scas
sub
mov
call
lds
jno
fldenv
stos
mov
out
lods
or
dec
insb
aad
cmp
and
aaa
jecxz
mov
xor
in
out
mov
divb
xor
mov
cli
mov
cmpsl
xchg
adc
fistl
lods
sbb
loopne
cld
repnz
in
adc
xor
insl
sub
sbb
mov
test
pop
jl
cmp
pop
add
inc
out
jmp
out
cli
repnz
adc
out
jmp
jno
pop
int3
mov
insl
inc
std
xchg
pop
fdiv
das
cmp
push
cmp
cmpsb
xor
mov
int3
mov
jmp
nop
pop
xor
adc
sub
jp
ljmp
lahf
fmuls
push
cli
mov
iret
pop
jg
inc
cmp
sub
inc
cmp
adc
fisubrs
mov
pushf
or
xchg
test
or
inc
call
test
cmc
movsl
pop
int
xchg
push
in
adc
je
push
add
push
test
push
inc
xchg
inc
ss
outsb
inc
cmpsb
cwtl
xchg
adc
xchg
inc
gs
sub
push
addr16
lds
addb
imul
xchg
and
adc
leave
add
in
in
mov
xor
clc
test
addl
adc
mov
loop
pop
loop
stos
mov
daa
adc
xorl
cmp
fwait
and
jbe
lods
fistpll
adc
fs
cmpsb
movsb
mov
sub
jecxz
out
mov
je
xchg
movsl
daa
and
ret
xchg
xchg
sub
and
mov
adc
mov
in
push
and
mov
adc
xchg
pop
xchg
fmuls
add
test
push
inc
insl
icebp
nop
ret
pop
lcall
fwait
imul
js
loopne
xchg
enter
mov
inc
daa
addr16
leave
out
sub
in
adc
shll
jbe
shl
cmp
pop
lock
jle
inc
cwtl
cmp
out
repz
lds
xor
shll
lods
pop
add
pop
adc
std
cmovno
iret
push
inc
das
or
das
adc
inc
sub
outsb
movl
jns
or
sbb
sub
out
movsl
mov
ja
lahf
jns
inc
int3
cmp
frstor
int
cmp
aas
std
lock
lods
loope
adc
dec
gs
cmpsl
andb
out
cmp
add
std
adcb
or
jge
xchg
xchg
lods
xor
jge
inc
push
jmp
cmp
cmc
and
dec
jecxz
sub
jo
cmp
lock
sub
enter
xchg
and
stos
sbb
and
inc
sbb
push
inc
in
push
ljmp
add
and
mov
push
jno
adc
idivl
push
mov
push
aas
mov
inc
xor
sub
and
jecxz
and
push
out
cmpsb
or
add
jp
in
or
std
cmpsb
cmp
cli
loope
jns
mov
inc
cwtl
cmp
xor
push
scas
push
add
scas
data16
add
cmpsb
or
sub
hlt
pop
xor
lods
mov
push
lods
xlat
adc
jns
mov
dec
and
and
and
sbb
data16
imul
out
cmpsb
xchg
and
cmc
sbb
mov
ljmp
xor
push
mov
push
xor
cli
push
cmp
jg
popa
cwtl
dec
pusha
repz
lcall
outsl
jle
test
in
js
push
cmpsb
jb
shrl
push
and
into
hlt
rcr
xor
push
fdivrs
andb
push
cli
cmp
jns
cmp
cmp
mov
mov
mov
mov
lock
mov
push
pop
aaa
insb
adc
lcall
sub
sarb
leave
cmp
shll
out
mov
inc
imul
push
xor
aaa
mov
ret
mov
sub
add
jae
loop
mov
sub
movsb
sub
jns
popa
test
cmp
push
lcall
loopne
adc
mov
adc
mov
frstor
mov
cmp
mov
xchg
xchg
cwtl
cwtl
push
scas
and
add
mov
loopne
or
cmp
stos
jmp
mov
jns
adcb
cli
mov
add
push
adc
lea
inc
inc
cwtl
push
and
popa
jo
daa
imul
mov
inc
insb
aad
and
cmp
jns
mov
ffreep
in
andl
inc
add
sub
repnz
icebp
cmp
pusha
arpl
cli
sub
mov
xchg
jecxz
lds
cwtl
cwtl
nop
stos
loope
add
shrl
aad
outsl
std
into
popa
mov
and
cmc
mov
outsb
inc
add
add
mov
pop
mov
xchg
inc
or
xchg
xchg
mov
nop
xchg
add
in
pop
fsubs
add
jae
cmp
jns
and
inc
insl
lds
lods
dec
scas
out
aas
cli
sbb
push
or
cmp
mov
sub
add
test
ss
add
sub
stos
jbe
loop,pn
out
mov
push
repnz
push
or
and
xchg
outsl
dec
jne
xchg
inc
loope
sub
cli
mov
filds
je
add
pop
or
imul
jl
sub
push
dec
gs
jo
jb
cwtl
mov
sub
mov
push
cmpsl
js
aad
andb
fisubrs
stos
dec
out
movb
add
in
testb
daa
iret
sub
enter
test
in
aam
mov
sahf
ret
daa
add
out
lods
call
pop
dec
jbe
jge
gs
sub
add
cmp
or
das
out
jle
cmp
je
out
cmp
inc
cld
push
out
adc
mov
jge
sub
out
in
mov
jo
mov
aaa
mov
push
adc
jno
pop
and
mov
iret
mov
in
push
jbe
xchg
mov
or
add
popf
mov
cmp
dec
mov
imul
adc
leave
pushf
adc
add
fwait
js
outsb
loope
in
or
push
insb
push
jle
int
inc
ret
jns
repnz
sbb
inc
sbb
and
es
outsl
adc
fstpt
sbb
aam
add
ret
push
rorb
jo
inc
cmp
cwtl
mov
push
adc
cmp
jns
out
sti
mov
into
xchg
aad
jge
bound
inc
mov
dec
add
cmp
push
jbe
fmul
call
frstor
cmp
in
add
add
or
add
inc
out
sub
addr16
repz
jns
int3
cwtl
and
sti
or
leave
pushf
xor
xchg
repnz
jo
jb
mov
ljmp
and
cmp
fcmovnbe
mov
sub
and
out
stos
je
mov
test
adc
cltd
push
add
cmpsl
popa
pop
mov
lods
jno
addl
pop
int3
scas
jmp
adc
jl
mov
sub
xchg
inc
addb
jle
xor
xor
rcl
jle
push
int3
mov
inc
cmc
popf
cmp
jb
xor
dec
adc
inc
push
subb
incl
js
int
jl
jb,pt
pop
pop
mov
jne,pt
push
cmp
enter
testl
add
jp
mov
adcl
dec
sub
adc
int3
nop
push
adc
stc
int3
cwtl
xor
adc
out
jl
pop
arpl
lods
repz
testb
xchg
dec
iret
jno
sub
push
xchg
leave
mov
je
icebp
clc
xchg
out
push
sbb
pushf
mov
adc
loop
aad
call
cmpsl
or
imul
js
sub
cwtl
je
aaa
lods
cwtl
cltd
jle
fisttpll
ljmp
je
ret
lea
js
inc
iret
dec
andl
pop
xchg
adc
jb
push
cmp
push
jge
test
bound
cwtl
jmp
shl
icebp
and
scas
inc
or
das
adcb
loopne
sbb
mov
jecxz
lods
cmp
xchg
ss
adc
movsb
inc
xchg
roll
cmpb
push
jno
and
aas
push
ja
jmp
je
cld
mov
cwtl
stc
int3
sbb
rcll
cwtl
cwtl
push
sti
clc
cmp
xchg
fimull
pop
or
subb
pop
pop
lock
mov
rcrl
push
push
adc
cwtl
pusha
adc
popa
or
daa
mov
cwtl
aaa
fidivl
push
or
push
mov
out
fisubrs
pusha
sahf
add
call
add
adc
scas
jo
push
cmp
js,pn
mov
stc
push
inc
addl
add
adc
scas
jg
scas
push
or
jns
in
cwtl
mov
movsl
insl
jne
xchg
cmpb
xor
roll
fcmovnu
sub
notb
cwtl
mov
mov
pop
int3
in
or
pusha
xor
cmp
orl
inc
shl
scas
xor
out
mov
pop
cmp
or
jecxz
push
int3
cwtl
push
cltd
add
sub
adc
jge
adc
xchg
stc
ret
fdiv
sbb
les
enter
fldl
ja
add
adc
mov
mov
ret
cmp
mov
loope
xorb
inc
sub
fisubrs
outsb
enter
sub
popa
cwtl
scas
adc
inc
or
cwtl
test
or
rorl
cwtl
jp
lods
pop
jecxz
push
jp
or
aam
ds
add
sub
fmull
mov
in
ficompl
int3
mov
outsb
mov
xchg
rcrb
jmp
frstor
jle
cmp
cmp
loop
lods
push
scas
out
das
enter
repz
cs
or
cmpsl
and
pop
int
add
mov
enter
cmpsb
outsl
or
out
or
subl
and
jg
leave
sub
iret
addb
adc
cmpl
cmc
mov
mov
pop
xchg
jae
ret
pop
or
inc
loope
cmp
cwtl
sarl
and
mov
call
cmp
movsb
jp
test
add
cltd
inc
imul
int
xor
je
and
rcr
mov
cmp
out
jmp
js
imul
and
jo
mov
and
pop
orl
mov
inc
dec
call
insl
xor
int
lods
xchg
sub
fiaddl
jno
rcl
mov
out
jbe
stos
imul
xor
lock
xlat
or
popa
cwtl
inc
cmp
out
add
orl
int
xchg
clc
push
into
mov
std
int3
imul
iret
mov
inc
pmaxsw
dec
les
cld
adc
sarl
fldt
adc
repnz
cwtl
cmpsl
xlat
or
xor
sub
ljmp
aaa
xlat
mov
loope
call
cmc
insb
das
aam
pop
into
add
lock
push
push
xchg
dec
push
subl
lret
cwtl
pusha
rorb
dec
sub
mull
bound
lret
mov
dec
aas
sub
popf
int
xlat
data16
sub
sbb
push
jb
cmp
movsb
enter
push
cwtl
xor
and
es
int
sbb
incl
loopne
cmpsb
cmpsl
inc
xchg
mov
mov
lods
inc
lret
scas
dec
sbb
mov
dec
mov
pop
andl
js
outsl
pop
dec
mov
popa
imul
fdivs
pop
cwtl
sub
les
scas
cwtl
mov
fiadds
in
or
cwtl
and
xchg
call
mov
pop
cmc
into
or
pop
dec
dec
or
repnz
scas
daa
push
ret
xchg
mov
push
inc
loop
mov
mov
mov
ja
ret
mov
loopne
pop
jl
ret
movsb
push
cs
cmpsl
shlb
mov
outsl
jae
lcall
or
out
xor
inc
xor
in
mov
js
mov
lret
or
inc
pusha
repz
sbbb
pop
ret
add
cmp
fisubrs
mov
enter
inc
xchg
inc
adc
rcl
add
sarl
lods
fwait
ljmp
xlat
inc
inc
adc
mov
jl
ja
inc
add
fstpt
cwtl
mov
inc
jge
inc
dec
jb
jo
mov
add
ja
jo
fiadds
shr
jo
jge
mov
xorb
xor
es
xor
cwtl
inc
insb
xor
push
insl
pop
pop
or
mov
das
rcl
sbb
leave
test
nop
push
mov
mov
dec
imul
dec
pop
scas
mov
dec
cwtl
jae
clc
sub
jg
movsb
mov
popa
call
imul
cwtl
nop
jo
or
gs
int
jg
push
mov
xchg
loope
insl
jne
int3
cwtl
push
icebp
popa
ficoml
orb
sub
mov
ja
add
push
pop
mov
xchg
fimuls
jae
sub
adc
mov
xor
cmpsb
jle
adc
jno
nop
ljmp
dec
or
mov
adc
scas
pop
pop
adc
mov
shlb
cmp
push
inc
sub
push
rcll
xor
mov
cmp
stos
adc
push
or
mov
cwtl
adc
xor
loop
xor
sti
mov
pop
xor
or
lds
mov
roll
cwtl
xor
and
rclb
cmp
push
cld
in
jg
fwait
mov
pop
aas
out
sar
mov
nop
or
cmp
adc
mov
movsl
mov
xor
mov
or
sti
idiv
pop
mov
mov
pop
rcrl
cmp
movsb
outsb
lds
cwtl
rcll
fidivl
dec
cs
in
js
sub
repnz
pop
sub
sti
cmc
pop
jnp
jns
pop
push
add
adc
aad
mov
cmp
repz
subb
mov
adc
mov
es
xchg
fistpll
xor
cmp
xor
cmp
stos
movsb
mov
andl
incl
in
popa
cmpsb
inc
xchg
fdivp
lock
or
cwtl
es
push
out
aaa
mov
push
sbb
in
pop
rcr
mov
and
sarb
adc
xchg
cli
cmp
jns
push
and
cmp
jo
mov
pop
data16
adc
movsl
lock
insb
inc
data16
mov
dec
es
bnd
adcb
aad
and
sar
aad
push
fmuls
and
in
add
call
adc
cmp
out
out
cmpsb
scas
and
ret
and
cs
shl
jno
xor
push
mov
shll
ja
and
push
cmp
cli
stos
out
push
clc
std
bound
cmpsb
popa
cmp
bound
shll
sbb
inc
sbb
sub
or
or
out
cmpsb
ss
cmp
neg
ss
in
or
mov
sbbb
jns
sar
cmp
add
aam
test
cwtl
fldt
popa
movsl
les
popf
out
dec
testb
cmpsb
iret
and
mov
out
sub
xchg
and
mov
lret
iret
mov
andb
push
cli
cmc
cmp
and
pop
adc
cltd
xchg
dec
add
mov
push
roll
xor
cmc
mov
fadds
cwtl
sbb
jb
cmp
addb
inc
loope
and
ret
out
cmpsb
into
and
in
shrb
hlt
mov
jae
fdivr
and
in
inc
xlat
jns
mov
or
movsb
cs
testb
shll
arpl
pop
xchg
add
daa
shrl
inc
sbb
popa
cs
clc
repz
into
and
add
aad
xor
in
popa
idivl
jnp
lock
roll
sbb
mov
shl
das
out
xchg
dec
dec
pop
sbb
mov
adc
out
push
outsb
not
mov
xchg
xchg
mov
pop
fsubs
nop
rcll
orb
mov
ljmp
jnp
cwtl
mov
movb
aad
pop
lock
jo
sbb
jb
popa
xchg
sbb
sbb
iret
out
sbb
add
andb
inc
fmul
fs
movsl
mov
mov
cmp
mov
fadds
xchg
mov
add
sbb
sub
pop
in
roll
test
xchg
inc
mov
out
out
mulb
insl
jae
jns
push
sbb
sbbl
pop
leave
movsl
sub
clc
mov
adc
or
rcll
xchg
sub
jp
jo
cwtl
imul
shll
add
inc
xchg
aam
ffreep
pop
pushl
sub
jecxz
inc
sub
mov
in
jb
or
daa
dec
add
pusha
cmpsl
mov
pop
ss
idiv
pop
lret
enter
mov
push
mov
addr16
mov
and
inc
das
mov
int
nop
sbbl
in
fbld
inc
les
into
call
mov
shll
cmp
push
mov
add
gs
add
cmp
inc
dec
mov
xchg
add
xchg
inc
sub
std
mov
cmp
test
mov
mov
aaa
inc
out
insb
lcall
popf
repnz
lock
aaa
jo
mov
test
adc
in
mov
addb
adc
es
in
cld
inc
popf
jl
data16
sti
cmpsb
pop
cmpsl
fcmovnb
aas
mov
lcall
fistps
cmpl
sub
js
sub
xor
jecxz
dec
inc
or
sbb
add
testl
insl
jb
jg
out
mov
call
push
sbb
mov
daa
sub
es
and
inc
loope
sbb
divl
inc
cmpsl
jno
cwtl
xchg
mov
adc
mov
scas
or
out
pop
inc
shl
repz
sbb
rcr
outsl
add
jle
xor
jl
dec
movsl
repz
sti
mov
bnd
imull
das
in
lods
push
lods
adc
popa
xlat
push
or
mov
repz
insb
shlb
xor
imul
test
sbb
push
fnstcw
gs
cmp
cmp
mov
push
jns
inc
js
cltd
addr16
rcrb
movsb
fs
vmovd
sub
movsl
dec
addr16
pop
fsubl
mov
inc
loopne
xchg
in
cltd
addr16
mov
cli
dec
addr16
jb
repnz
sub
xor
ds
push
ss
int3
out
out
fwait
xor
rcll
adc
imul
subl
rcr
xchg
mov
iret
fs
jge
andl
in
insb
push
out
add
lods
dec
dec
sbb
test
insb
mov
decl
dec
ss
adc
mov
fcompl
jne
xchg
addr16
bound
xor
mov
movsl
lea
add
mov
push
fistps
insb
in
sub
add
movsl
ret
shrl
sub
sbb
ss
xor
rcll
out
mov
lods
int
lret
mov
sub
xchg
loopne
ret
dec
add
subl
ss
jle
push
es
in
xlat
sub
add
cmc
inc
xlat
push
int
jl
add
cmp
cmp
fs
cmp
xor
in
insl
es
loop
mov
or
cmp
cmpb
adc
mov
in
rcrb
and
xor
dec
jno
ret
int
into
xorw
cltd
pop
sub
repnz
sbb
inc
insb
add
xchg
jb
xchg
sub
and
mov
scas
mov
jp
movl
dec
add
sub
cmp
cmp
icebp
in
cwtl
xrelease
in
xor
xchg
or
and
and
xchg
roll
or
cmc
jecxz
cli
and
lahf
insb
dec
sbbb
movsl
outsl
pusha
dec
and
aad
dec
inc
add
pop
mov
sub
inc
ret
out
jecxz
dec
jbe
pusha
out
out
sub
stc
sub
mov
mov
repnz
call
xchg
jb
adc
into
jb
xlat
fs
cmp
out
sub
loopne
and
cmp
cmpsl
mov
cmp
cwtl
ficoms
cmp
add
std
jbe
psllw
sub
je
mov
fsubrs
shlb
cmpsb
xchg
jle
mov
stos
pextrw
sub
add
add
jp
clc
or
inc
push
and
mov
and
ret
dec
lret
cmp
loop
cltd
pop
fwait
es
jns
xlat
push
sbb
xor
popf
aad
sbb
jg
xor
push
cmp
cmc
roll
addr16
push
jo
inc
insb
push
push
aad
movsl
and
xchg
movsw
mov
dec
pop
sub
ror
into
out
mov
push
add
dec
addr16
jnp
int
inc
jecxz
ds
sbb
int
in
sub
jp
mov
xchg
mov
inc
aaa
add
xlat
dec
in
dec
jb
xchg
gs
aas
enter
repnz
out
mov
and
repz
push
push
cmpsb
add
add
into
cmp
lods
dec
cmp
jbe
sbb
sbbb
jns
outsb
mov
cli
and
dec
es
lock
daa
mov
es
lcall
and
adc
jg
icebp
lock
call
and
addr16
shlb
arpl
out
out
icebp
gs
inc
inc
mov
mov
jbe
std
rolb
mov
shlb
mov
call
js
loopne
xor
sub
jle
sub
xchg
lock
icebp
popa
aam
cmp
pushf
pop
mov
inc
jb
and
jg
add
mov
out
sahf
in
cld
scas
add
jnp
es
sub
flds
lods
jmp
addr16
loop
xor
xchg
jne
cmp
mov
pop
add
addr16
and
movsl
rolb
add
dec
sbbl
andl
mov
push
and
pop
sbb
addr16
ror
sbb
sbb
jns
cmpsl
and
dec
push
call
mov
test
add
in
dec
movsl
fucomip
test
ret
add
sahf
daa
insb
fbld
ja
pop
test
mov
pop
sub
icebp
cmp
sar
cmpb
inc
in
mov
enter
popa
jle
into
dec
and
cwtl
inc
jae
insl
mov
xlat
data16
subb
mull
mov
jne
rolb
xchg
pushf
or
insb
mov
mov
xchg
inc
dec
push
movsb
out
stc
cmpb
mov
sbb
jle
mov
rorl
cli
fcoml
shlb
rclb
mov
jbe
in
ficomps
xchg
mov
imul
sbb
jle
cmpsb
pop
into
mov
pop
test
inc
xchg
std
ret
jnp
inc
inc
andb
jp
in
pop
pop
add
push
mov
inc
xchg
gs
cli
mov
and
adc
add
xchg
mov
push
insb
mov
ljmp
push
cmp
out
inc
mov
or
ret
int
add
scas
mov
jmp
mov
xchg
out
add
inc
nop
fisubrs
mov
push
or
popa
sbb
jbe
in
push
cmpb
ret
pushf
inc
ja
sbb
loopne
loop
outsb
ja
mov
sbb
jnp
mov
jb
adc
ja
pop
push
addr16
mov
out
int
fisttps
sbb
pop
push
lock
and
outsl
ss
or
pop
mov
loopne
lahf
call
jmp
stos
lock
pop
insb
ss
mov
mov
mov
mov
rcrb
jecxz
into
addr16
fnstsw
inc
insl
gs
or
or
fbld
push
add
lods
insl
push
loopne
xchg
jb
test
icebp
icebp
scas
inc
mov
subl
dec
dec
cmpsb
stos
and
pop
je
inc
jns
pop
sbb
in
xor
cs
xor
cltd
lods
out
inc
out
mov
add
int
fsubr
in
lods
cld
in
test
pop
test
mov
stc
jnp
push
shll
lods
popf
ret
jle
adc
jb
cwtl
loopne
xchg
sbb
ret
adc
mov
cmp
dec
xchg
iret
inc
sub
test
lcall
aad
sub
xchg
mov
pushf
mov
pushf
std
jbe
add
mov
push
filds
mov
inc
mov
xchg
rclb
xchg
out
xchg
or
in
int3
jbe
sub
loopne
sub
arpl
and
std
mov
jb
add
repnz
ss
push
addr16
push
mov
adc
jge
sbb
ret
out
add
and
push
jmp
outsb
push
jmp
inc
arpl
jmp
addr16
xchg
sub
ss
xchg
xchg
dec
pop
sub
aas
enter
push
aaa
or
out
pop
cltd
test
push
dec
push
jle
dec
xchg
or
fsts
cwtl
sahf
and
mov
and
xchg
cmp
enter
repnz
and
push
clc
stos
out
pop
fnstenv
or
xchg
jae
jb
inc
stos
inc
aad
repz
popf
jmp
testl
cwtl
cmp
push
out
outsb
xor
xlat
cmpsb
push
xchg
pop
loop
scas
outsb
xor
or
aad
sti
mov
adc
fs
out
divb
adc
xlat
test
push
sub
es
daa
insb
jmp
fiadds
es
adc
xorl
pop
loopne
insl
jecxz
fldt
movb
fnsave
add
inc
repnz
add
repnz
inc
jge
in
aas
mov
call
mov
js
repnz
out
test
loopne
gs
orl
in
lea
add
mov
push
push
sub
xchg
dec
fmull
mov
sub
jns
data16
mov
adcl
cmp
ret
xchg
add
and
sbb
jle
mov
jle
adc
adc
int
xor
cmc
inc
add
or
sbb
xchg
cmpsl
or
sub
ds
pop
or
inc
add
or
call
sarl
roll
std
ror
js
pushf
iret
rcl
in
push
test
cmp
push
xor
xchg
inc
subl
cwtl
pusha
cmc
xchg
inc
mov
mov
ja
cli
sbb
push
into
mov
xor
ja
mov
or
loopne
daa
lret
std
nop
js
pop
jne
cmp
das
inc
lea
stos
sub
inc
stos
jle
fidivl
jle
xlat
fcoms
js
aad
jle
mov
mov
out
dec
test
sub
push
cli
adc
test
jno
sbb
xor
mulb
stos
ljmp
sbb
xor
inc
loop
sbb
sar
enter
addr16
sahf
movsl
je
cmp
sbb
jecxz
mov
int3
fisttpll
sbb
adc
inc
cwtl
cwtl
jl
add
adc
ret
es
and
daa
or
inc
jge
pop
mov
loop
and
cs
lods
testb
arpl
addl
jnp
mov
cmp
aaa
mov
xor
sub
std
inc
imull
mov
stos
and
push
leave
and
mov
xor
inc
pushf
pop
insb
adc
lods
das
aam
lock
push
add
adc
scas
shlb
and
movsb
mov
add
les
adc
mov
call
mov
in
mull
in
in
aad
test
nop
sub
mov
fcomp
lods
lock
cltd
in
xchg
test
es
xchg
daa
stos
or
sbb
mov
cwtl
or
out
and
cs
into
es
dec
add
jp
push
ja
cli
add
scas
clc
cs
adcl
loope
das
add
in
ljmp
sbb
scas
cmpsb
cltd
push
cmpsb
mov
loop
mov
xchg
push
mov
lock
fnstcw
cwtl
add
mov
push
cwtl
push
jb
jne
filds
in
sbb
test
mov
push
aad
mov
push
in
add
jmp
cmpsb
xchg
rcl
rcrl
cwtl
pop
sbb
inc
pusha
bound
inc
lret
jb
cwtl
mov
sub
mov
xchg
adc
int
cwtl
push
insl
stc
sbb
bound
dec
loop
test
pop
xor
ret
xor
mov
shll
stos
stos
loope
sub
adc
dec
leave
xchg
test
add
jo
push
repz
andb
je
adc
jge
or
push
movsl
mov
imul
in
cs
addb
enter
pushf
sbbb
cmpsb
andb
fdivrl
inc
cmp
mov
nop
cld
loop
popa
cmc
cmpsb
mov
push
in
xchg
loop
push
mov
testb
movsb
xor
and
out
adc
test
adc
push
out
sbb
fwait
test
adc
inc
das
fisubs
rcl
fs
jecxz
loope
ret
and
cmp
add
jmp
push
xchg
mov
jle
sarl
push
out
std
inc
add
popf
xor
xlat
push
jbe
aas
push
std
sbbb
outsl
mov
loope
sbb
push
in
pop
sbb
xor
push
outsl
or
cmp
jl
bound
ja
cld
loope
cltd
dec
inc
or
and
out
lahf
cmpsb
jg
ds
push
xchg
fbld
sbb
iret
les
popa
cwtl
or
int
bound
pusha
stos
and
dec
mov
enter
lock
sbb
cli
les
fs
mov
jl
and
sub
add
roll
adc
jecxz
movsb
mov
add
jle
aam
inc
cmp
cmp
pusha
fnstsw
pop
shlb
sahf
push
adc
dec
sbbb
test
enter
fsubrs
scas
shlb
mov
sahf
and
in
inc
outsl
and
cmc
lahf
aas
idivb
out
mov
cwtl
or
cwtl
xchg
inc
testb
sbb
xor
inc
push
lea
cli
mov
push
data16
push
mov
mov
into
enter
add
lods
jle
add
push
pusha
les
lods
jg
xor
jne
les
aam
and
cwtl
sub
sbb
push
mov
fsubp
out
mov
cwtl
and
add
iret
cli
pop
mov
in
pop
mov
div
and
mov
in
add
xor
mov
in
ljmpw
dec
aas
loop
cltd
call
enter
lods
inc
xchg
and
cwtl
leave
insb
loope
popf
xchg
mov
or
in
fbld
push
jns
cwtl
aad
iret
loope
inc
adc
stos
and
icebp
lea
cs
testb
cmp
jg
inc
cmp
and
js
cwtl
cwtl
subb
mov
push
pop
xlat
dec
pop
bound
dec
add
and
lahf
xor
lcall
mov
jb
popa
cwtl
sub
and
fdivp
pop
xor
cwtl
and
jecxz
sbb
cwtl
pop
pusha
ljmp
rorl
aas
arpl
xor
push
test
cmp
mov
push
outsl
pop
or
fadds
cwtl
shll
dec
or
loop
inc
popa
cwtl
dec
std
imul
xchg
mov
cwtl
mov
jle
jb
shrb
cmp
pusha
jae
lcall
push
dec
test
int3
cwtl
pop
shl
sbb
xchg
lcall
push
inc
out
pushl
sub
cmc
call
lea
out
jae
in
add
clc
xlat
sbb
jbe
cmp
pop
xchg
add
cwtl
lret
lcall
inc
test
lcall
push
int
cwtl
leave
sub
dec
adc
inc
fsubr
xadd
or
addr16
cwtl
push
pop
pop
push
or
add
dec
std
or
mov
mov
cwtl
fwait
push
enter
addb
jle
jg
filds
and
clc
andb
dec
cmc
mov
stos
out
ss
imul
pop
cmp
cmp
ja
push
out
bound
mov
sbb
incl
sbbb
mov
mov
cwtl
scas
icebp
sub
push
inc
clc
not
cmp
xorb
iret
adc
xor
xor
lcall
push
jnp
push
insl
sbb
cs
incl
xor
push
jg
lea
inc
repz
subb
pop
aam
xchg
cwtl
pop
dec
ja
inc
movsb
clc
dec
subb
push
mov
cwtl
lea
cwtl
fstps
xor
lods
pop
pushf
push
js
jno
repnz
les
cwtl
xor
mov
jbe
fistps
mov
fcmovnbe
fmuls
in
push
cmp
inc
jo
nop
lock
jle
fdivrs
fsub
xlat
sbb
cmpsl
sbbb
jg
dec
dec
fstl
mov
movsb
cmp
xchg
movsb
push
dec
push
out
jp
jmp
add
jns
inc
cwtl
cwtl
mov
ficompl
and
pushf
icebp
cmp
cwtl
mov
mov
push
inc
fistpll
outsl
push
mov
mov
push
dec
mov
cmc
movsl
mov
mov
fadds
adc
jo
xlat
mov
xorb
addb
pop
xor
inc
imul
cmc
inc
fmuls
mov
push
mov
pusha
repz
jle
add
and
xchg
in
xchg
ficoml
aas
movsb
sub
mov
fsubs
arpl
das
jl
adcb
sub
jae
sbb
xor
xchg
add
adc
cwtl
sub
lcall
cwtl
push
stos
inc
push
xor
ja
xlat
jns
nop
push
cltd
insl
cwtl
push
xorb
inc
or
mov
leave
mov
add
dec
and
push
cwtl
mov
sti
lcall
xchg
dec
leave
fxch
inc
in
add
les
jp
cwtl
add
test
test
loope
lea
stos
ja
in
popf
and
data16
mov
jecxz
insb
jo
roll
subb
dec
sbb
lcall
lock
cmc
sbbb
clc
dec
mov
dec
jmp
inc
inc
cwtl
and
pop
cwtl
push
xchg
cmp
cmp
loopne
inc
icebp
call
inc
and
pop
lcall
and
loop
inc
xchg
inc
fldlg2
popa
push
fwait
lcall
push
jg
fldenv
dec
dec
mov
in
mov
enter
jecxz
xchg
xorb
xchg
ficomps
lds
enter
in
push
inc
subb
mov
jno
jb
call
cmp
push
scas
cwtl
fisubl
pop
popf
inc
add
notb
cwtl
enter
movsb
xchg
push
add
and
and
nop
daa
cmp
jg
xlat
xor
movswl
xchg
shlb
xchg
and
sar
inc
outsb
into
jns
sbbb
xorb
aas
push
sub
lcall
jp
cwtl
xchg
fcomp
adc
loop
push
popa
cwtl
mov
xchg
lahf
sbb
cwtl
nop
bound
jmp
push
xlat
cwtl
cmp
jge
scas
shll
mov
mov
in
cwtl
sbb
aam
and
cwtl
mov
in
pop
test
les
nop
lock
mov
inc
sbb
lret
pushf
sbb
xlat
jl
orb
out
fwait
lcall
mov
fsts
das
aad
lcall
out
jp
out
fwait
rolb
fcomi
cwtl
subb
insb
inc
jle
sti
lcall
pusha
loopne
clc
or
or
insb
cwtl
fnstenv
and
mov
pop
call
and
mov
push
adc
dec
xlat
add
nop
inc
xchg
in
jle
daa
push
xor
stc
int3
cwtl
pop
xchg
fiaddl
hlt
lcall
aad
iret
inc
inc
inc
scas
test
jo
loop
fwait
lcall
cwtl
nop
xchg
cpuid
nop
push
mov
out
aad
insl
add
and
test
xlat
shr
adcb
pop
or
jp
xlat
dec
pop
cmp
mov
jp
sbb
out
adc
movsb
sbb
mov
push
xor
repz
data16
mov
jo
pop
in
or
inc
add
cmpsb
xlat
xchg
arpl
in
out
loopne
clc
or
imul
jge
dec
in
push
jmp
mov
cs
jg
xor
repz
outsl
loopne
cltd
ja
fcmovnbe
pop
adc
mov
cwtl
cmp
pop
jae
lcall
in
cwtl
cmp
mov
xor
dec
or
cwtl
fimull
addr16
notb
movl
add
cwtl
nop
mov
push
pop
sub
jmp
jne
scas
cmp
sarb
fcoms
test
fisubl
test
cmpb
or
mov
push
aas
xor
mov
movsl
orl
mov
fstpl
lcall
jne
cwtl
push
mov
call
shr
fdivrs
pop
pusha
xor
cltd
in
in
mov
cwtl
mov
pop
cmp
inc
loopne
fisttps
inc
stos
jbe
inc
and
cs
nop
and
add
sub
out
cmp
pop
and
js
add
mov
fmuls
cltd
inc
shlb
cli
mov
dec
xlat
inc
repnz
rorl
scas
pushf
inc
xorb
xor
inc
and
fwait
mov
dec
inc
dec
mov
adc
push
inc
mov
les
cwtl
test
mov
xchg
data16
xorl
cwtl
mov
mov
xor
jle
jecxz
dec
xlat
dec
aad
mov
out
ljmp
orl
dec
fstpt
inc
adc
clc
int3
cmp
daa
xchg
pop
adcb
mov
repz
mulb
repz
jo
sbb
scas
aas
cwtl
das
xor
xor
mov
xor
push
movsl
shlb
in
jne
dec
cmp
scas
dec
cmp
out
sarb
and
xchg
cwtl
adc
dec
pop
mov
mov
cwtl
push
aad
iret
bound
stos
mov
cwtl
fistps
js
mov
mov
mov
lcall
mov
pop
or
xor
adc
xchg
hlt
dec
mov
pop
mov
pop
pop
sarl
xchg
mov
push
inc
sub
lcall
inc
pop
addb
cmpsb
xor
cmp
fcoms
add
xchg
xchg
lcall
pop
cwtl
shlb
mov
jo
xor
jp
jnp
inc
sub
ss
in
and
xorb
aad
cwtl
mov
mov
pop
decl
push
xor
inc
pop
adc
scas
divb
pop
lcall
cwtl
cmp
mov
xlat
cmp
mov
iret
cmpsb
and
adcb
shll
call
movl
cmp
int
in
xor
dec
aad
mov
jg
movsb
xlat
dec
push
aaa
jo
les
ror
cmp
mov
push
mov
faddp
xchg
dec
aas
xchg
mov
bound
pop
jmp
cwtl
mov
jle
sti
lcall
notb
bound
cwtl
jae
xlat
pop
and
sbb
jbe,pn
jae
sbb
xor
pop
lret
in
dec
cmpsb
cmp
repz
cmp
test
negb
jmp
and
jbe
cmp
push
in
test
pop
lea
inc
dec
xlat
jle
jle
cmp
and
sti
sbbb
cwtl
jae
cmc
movsb
push
pop
cwtl
mov
roll
inc
pop
xchg
push
mov
leave
pop
cwtl
add
or
stos
call
inc
lock
jg
ds
rolb
popaw
cpuid
nop
or
pop
lcall
cmpsb
add
arpl
in
in
lds
movsb
out
pop
dec
push
cmp
dec
pop
aad
movb
inc
stos
cli
mov
jns
aas
wrmsr
ljmp
cwtl
das
test
sbbl
mov
fidivs
jg
or
inc
xlat
cwtl
xor
test
fldcw
cmp
out
mov
movsl
incl
out
push
decl
mov
rcrb
test
inc
lcall
scas
sti
shrl
mov
jg
xlat
aam
insl
mov
inc
fsubs
jnp
orb
imul
push
dec
dec
insb
int
faddp
rcrl
in
fldenv
dec
dec
int
popa
push
push
repz
cwtl
adc
or
lock
in
outsl
xchg
sbb
pop
push
push
sbbl
cmp
jg
arpl
xchg
popa
das
daa
xchg
clc
xlat
cmp
sub
or
adc
lret
jbe
xorb
dec
mov
call
enter
ja
sub
rcl
dec
mov
jecxz
out
dec
pusha
loope
cmc
dec
push
out
jp
out
fwait
ror
mov
add
mov
cwtl
fnstenv
xchg
xor
pop
add
rolb
jg
or
dec
lahf
mov
xchg
push
push
leave
data16
cwtl
or
xchg
push
mov
cwtl
cwtl
nop
jp
add
popa
push
adc
loope
add
sbb
mov
pop
lcall
scas
daa
or
jbe
push
inc
pop
xchg
inc
pop
push
xor
dec
dec
jmp
inc
ret
call
pop
push
dec
mov
rorb
dec
inc
mov
out
mov
pop
lcall
jne
push
add
pop
jo
popa
cwtl
xorb
mov
inc
loopne
js
data16
popa
cwtl
sub
aaa
mov
fs
pop
outsl
mov
std
ss
push
jge
addb
mov
imul
insb
xlat
pop
cmp
dec
fwait
add
or
in
push
mov
push
xchg
dec
loopne
pusha
out
cwtl
jo
gs
incl
loop
xor
scas
pop
mov
and
jle
cpuid
nop
gs
pop
lcall
add
dec
xlat
in
inc
adcb
mov
xor
sub
out
ret
pop
inc
and
push
enter
insl
push
aas
popa
cwtl
lea
jae
fiadds
push
jecxz
xor
pop
or
aam
fwait
lcall
cmp
ss
inc
mov
jle
adc
cmp
roll
dec
adcb
cwtl
mov
ljmp
inc
aam
jo
mov
sub
cmp
push
fildl
aas
xor
cwtl
test
push
inc
insl
push
cwtl
fdiv
fxch
mov
aas
loope
aam
test
jg
movsb
xlat
adc
iret
xchg
adc
adc
xor
cmc
ret
daa
cmp
dec
xorb
gs
nop
xor
pop
pop
cwtl
add
fsts
cwtl
lret
mov
ja
push
mov
jo
imul
aam
jl
sbb
stos
lcall
push
fldt
pop
mov
stos
xchg
in
jnp
cwtl
push
jb
repz
dec
subb
int
imulb
popa
daa
pusha
ss
mov
orb
mov
sarl
inc
cwtl
cld
testb
mov
add
push
loope
adcb
push
sbb
pusha
rol
adc
loope
fstl
mov
inc
push
dec
sbb
pop
enter
arpl
sti
in
push
call
jmp
sbb
dec
sbb
cltd
aaa
push
cld
xchg
cmpsl
xchg
out
jae
mov
fstpt
push
sbb
cwtl
fnstenv
add
pop
jl
ret
fcoms
xor
pusha
hlt
dec
sbb
imul
sbbb
jnp
cwtl
push
call
daa
cmp
idivb
cmc
pop
adc
jg
cwtl
adc
in
sbb
push
cwtl
push
xlat
dec
mov
xor
data16
aas
aad
mov
cwtl
lods
lock
inc
mov
dec
insl
in
sti
lea
xchg
cpuid
nop
vshufpd
xlat
insl
fnsave
in
rolb
aas
add
xchg
in
pop
mov
dec
dec
pop
add
movsl
icebp
push
jnp
xor
adc
call
loope
fadds
loopne
cwtl
nop
fbstp
dec
lahf
ficompl
cwtl
jns
insl
test
mov
cli
mov
in
loop
lods
adc
ret
mov
push
mov
push
fldt
shrb
push
pusha
adc
ja
jo
rol
cmc
jge
push
sbb
push
pop
pop
test
cwtl
sub
aaa
push
and
repz
push
inc
insl
test
test
lcall
and
dec
dec
mov
aad
xlat
pop
xchg
dec
cmp
sub
lds
ljmp
mov
popa
hlt
dec
call
cmp
loop
outsl
xor
dec
mov
adc
xchg
in
int
lcall
xor
add
cli
ja
xchg
cmp
int3
cwtl
rcll
add
mov
xor
pusha
inc
xlat
jno
cwtl
sahf
inc
repz
jle
out
nop
jp
cmp
and
adc
std
cmp
cs
inc
mov
pop
adc
jecxz
shll
cmc
jle
adc
cli
imul
dec
adc
cwtl
xor
lret
mov
push
add
xchg
in
jmp
cwtl
or
enter
push
xor
fisttpl
add
pop
xlat
and
movsl
add
or
xchg
insw
adc
leave
cld
lcall
inc
dec
shll
in
cwtl
cwtl
sub
out
jbe
mov
add
in
cmp
add
dec
mov
cmpb
jae
mov
jecxz
xor
push
cld
jle
sbb
les
pop
mov
and
jae
lcall
loop
dec
add
movsl
jnp
jp
lds
cwtl
cmp
cld
in
jb
jo
in
cwtl
cwtl
mov
add
xlat
cmp
nop
call
jae
inc
push
xchg
nop
je
mov
fisttpl
jmp
ss
cwtl
dec
int
lea
cwtl
jl
cwtl
dec
xor
scas
cwtl
mov
loope
sbbb
andb
cwtl
jl
cwtl
cmpb
xchg
repz
aas
xor
lea
aas
jmp
mov
cwtl
fsubl
push
sbb
in
push
pop
add
bound
jg
xlat
vunpckhps
dec
jecxz
insb
jo
loope
popf
add
loop
xlat
dec
add
lea
jnp
xchg
jle
sub
push
jno
pop
add
popa
cmpsl
xchg
mov
fstl
stc
nop
cwtl
call
call
push
inc
add
lods
shr
mov
add
mov
out
sub
xchg
bound
push
pop
sub
xor
xchg
insl
pop
pop
inc
das
leave
popf
and
xlat
cmpb
mull
xorb
sbb
lret
mov
icebp
leave
in
ret
data16
test
mov
adcb
pusha
sbb
mov
and
add
push
lods
rol
cwtl
xor
and
pop
sbb
mov
inc
inc
nop
adc
pop
xchg
shll
lods
push
xlat
fsts
lds
or
inc
add
or
cmp
loope
dec
in
loop
mov
mov
std
or
cmpsb
pop
mov
xor
in
push
jl
cwtl
or
int
push
or
inc
int
movb
xchg
push
mov
andb
dec
mov
mov
jnp
sub
cmp
add
xor
imul
dec
fyl2x
mov
repnz
pop
push
xor
xor
jo
jnp
cwtl
sbb
lcall
cmp
rol
xor
call
idivb
fidivrs
xor
cwtl
imul
rorl
fnstcw
lcall
jp
push
cwtl
popa
cmpb
movsb
aas
xchg
fistpl
inc
jecxz
mov
sti
ss
rcl
cmp
jae
lods
pop
outsl
xchg
sbb
mov
jo
cmp
cli
testb
cmp
mov
fildl
adc
push
and
popa
xlat
inc
xlat
and
int
clc
roll
add
sub
fxch
data16
cwtl
pop
push
pusha
ja
in
push
and
mov
pop
bound
shl
ss
cmp
mov
mov
fidivs
leave
enter
adc
fwait
roll
subb
int
adc
or
sub
dec
push
in
mov
jb
push
bnd
aam
std
mulb
popa
cmpb
xchg
sbbb
test
jecxz
push
pop
jno
jp
cwtl
and
popa
inc
fiadds
inc
cmp
mov
and
cwtl
mov
inc
lret
mov
cwtl
mov
cmp
pop
mov
add
dec
cwtl
pusha
dec
loope
push
ret
fldl
jecxz
rcrl
xchg
xor
fcmovb
daa
fistps
ja
xchg
push
mov
fyl2xp1
jecxz
and
mov
adcb
cmp
or
stc
pushf
data16
cmc
imul
dec
jbe
cwtl
dec
in
sub
aaa
mov
ret
int
or
and
jl
xorl
xchg
in
xchg
xchg
xchg
fwait
cli
rcr
ficoml
ficoms
fiaddl
mov
rorl
dec
rolb
xchg
xchg
inc
xchg
xchg
xor
or
xchg
dec
je
xor
dec
imul
fmull
mov
fwait
lock
incl
data16
lcall
mov
add
clc
xlat
mov
add
insb
jle
xlat
mov
test
push
and
insl
addb
das
sub
bound
js
or
ja
loopne
repz
aaa
pop
mov
fstpl
xchg
add
roll
rol
pushf
ud2
pop
and
xchg
lods
addb
test
rcl
dec
mov
lcall
in
and
in
cmp
test
push
mov
negl
inc
jecxz
mov
jbe
cltd
lcall
in
out
filds
cmp
clc
lock
fldenv
jmp
aas
xor
mov
push
repz
cmp
push
decl
mov
stos
in
push
cwtl
mov
cmc
or
leave
pusha
sbb
add
ficoms
cmp
in
in
cwtl
lcall
mov
mov
cwtl
or
gs
bnd
pop
xor
cmpsb
cmp
jg
cmpsl
xlat
aaa
cwtl
lret
je
jecxz
out
imul
push
dec
sub
dec
cmp
mov
dec
dec
dec
imul
loop
shll
add
add
mov
cmp
jl
cwtl
ficompl
lcall
push
add
ret
add
add
xlat
shll
imul
jno
dec
dec
shll
mov
xchg
loope
int
pusha
lahf
sbb
test
cwtl
adc
xchg
shl
xchg
add
mov
pop
popf
and
retw
add
clc
xlat
sahf
mov
pop
sbb
xchg
push
xlat
fldcw
xor
pop
xorb
divb
jp
in
dec
jle
cmp
sub
cmp
pop
aam
push
movsl
xchg
mov
in
test
push
push
outsb
test
in
cwtl
jae
push
add
js
dec
inc
jecxz
xor
xchg
rcr
je
push
mov
mov
cwtl
jnp
rcrl
mov
cwtl
imul
hlt
pop
inc
fidivrl
mov
jl
cmp
or
bound
repz
subb
mov
inc
pop
and
lret
loopne
mov
rcr
xchg
cwtl
jb
xor
and
pop
dec
test
cmpsb
push
addb
inc
adc
loope
lea
mov
shl
repz
mov
jmp
push
jns
mov
cmp
cwtl
push
iret
stos
rcll
imul
adc
mov
scas
cwtl
fcmovb
pop
std
inc
test
subb
pushf
fcomp
inc
add
jo
nop
lock
repz
push
loop
pop
stos
jle
sbb
scas
add
not
subb
andb
xchg
stc
xor
push
cmp
ja
cmp
jle
cltd
mov
sbb
aaa
mov
fstpl
pop
add
cwtl
subb
loope
xor
clc
loop
mov
sub
divb
sub
push
and
fmull
addr16
cmp
xorb
sbb
aas
test
pop
lcall
jle
push
xlat
shrl
bound
push
shrb
pusha
repz
mov
jge
lret
mov
xchg
jecxz
xor
cltd
xor
fsubs
jno
popa
xchg
lods
pop
fisubl
cwtl
dec
test
je
xor
mov
inc
in
and
out
lea
inc
out
gs
mov
push
pop
or
sbb
out
xlat
mov
xorb
outsl
in
sub
testl
push
jl
and
aad
mov
outsb
lea
cwtl
lock
lea
fwait
movsb
int
sti
jne
adc
scas
cwtl
cmp
and
mov
jbe
dec
nop
fisubs
cmpsb
adc
lcall
ret
cwtl
rol
jmp
lret
add
mov
xchg
jbe
and
cmpsl
jne
jmp
and
push
cltd
lods
in
push
mov
and
push
mov
dec
cmc
lret
dec
mov
orb
sbb
in
jecxz
push
cmp
roll
dec
sbb
cmpsb
cmp
inc
mov
cmp
dec
jp
test
and
pusha
flds
mov
inc
loope
aam
pop
fldl
xchg
dec
mov
mov
xchg
cpuid
nop
out
pop
lcall
jbe
cwtl
les
dec
xlat
in
movb
cmp
dec
dec
nop
or
push
dec
mov
jb
inc
cld
adc
mov
lods
insl
notb
cmp
add
hlt
and
mov
outsl
mov
jle
popa
push
pop
jp
cwtl
push
fbld
out
call
xchg
lcall
ret
dec
loop
sti
push
and
mov
cltd
lcall
in
jle
jns
rolb
inc
movb
out
insb
dec
ljmp
xorb
lods
clc
addb
xlat
jle
mov
cmp
and
push
pop
fists
imul
pop
inc
cwtl
in
ret
lahf
repz
push
in
pop
sarl
xchg
pop
xchg
inc
je
aad
lds
stos
push
rcrb
in
push
sbbl
xchg
notb
roll
in
imul
or
dec
or
and
jb
cwtl
repz
xchg
sbb
sahf
pop
fstpt
mov
scas
cwtl
fptan
and
xchg
cmovno
inc
xor
dec
int
mov
lahf
andl
fidivs
lcall
mov
ds
nop
push
clc
int
add
jmp
shlb
pushf
int
pop
xchg
sti
jmp
sbb
stc
lret
add
push
addb
xor
xor
outsl
dec
xlat
andb
stos
je
xor
adc
pop
xor
cwtl
push
iret
or
mov
jnp
aas
jle
xor
push
fistpll
ja
jo
jae
lcall
jbe
mov
dec
rorl
mov
aaa
cwtl
in
dec
push
add
pop
sbb
push
dec
xor
pop
add
int3
cwtl
cld
mulb
jecxz
fnop
lods
rclb
inc
lahf
xor
in
inc
aaa
adc
add
mov
cld
lcall
ds
aas
orb
out
clc
pop
lcall
cmpb
lock
mov
lock
xchg
push
xchg
fcmovnb
dec
mov
sbbb
jae
sbb
sar
push
imul
int3
cwtl
mov
and
inc
cltd
out
fwait
cmpsb
out
mov
jns,pn
stos
jae
lcall
xchg
sti
lret
xlat
sbb
int
lcall
add
push
jo
cwtl
scas
sbb
pop
lcall
add
insb
cwtl
cmc
out
jle
jbe
stos
rorb
cwtl
push
iret
xchg
fwait
and
xor
movsb
dec
cmp
mov
sbb
mov
push
xchg
cmp
mov
test
cmp
and
mov
pusha
mov
add
push
pushl
push
out
insb
jo
scas
aam
ljmp
push
inc
cmp
stos
xchg
mov
lret
jecxz
lcall
je
xor
in
mov
repz
imul
ret
popa
sti
jecxz
movsl
loopne
cmp
aas
mov
add
cmpsb
xor
movsb
scas
js
cmp
dec
sbbb
idivb
inc
and
sbb
cmp
jne
push
clc
aas
jns
sub
xchg
xchg
and
out
cltd
lcall
int
pop
std
and
xchg
cmp
loopne
int
cmp
and
cmp
stc
dec
mov
xchg
xlat
mov
nop
sbb
cmp
movsb
rcrb
jecxz
daa
cmp
inc
mov
push
mov
inc
aaa
mov
xor
fdivrs
sub
fcmovne
xchg
and
dec
out
movsl
js
imul
notl
mov
mov
adc
cltd
lcall
jae
lcall
xrelease
mov
jo
pop
ror
pop
sti
lret
mov
inc
dec
dec
xchg
mov
mov
or
mov
xchg
sbb
mov
jns
or
test
scas
sarl
pop
movsb
ficomps
xchg
pop
mov
mov
sbb
lcall
dec
mov
ffree
pop
lcall
pop
je
mov
repz
dec
inc
insb
xchg
outsl
int3
mov
sbb
mov
inc
jnp
push
ja
jo
repz
mov
iret
xor
dec
int3
stc
leave
dec
and
movsb
adc
dec
sub
cmp
cwtl
popl
add
js
lods
mov
in
jp
or
imul
js
lods
fldt
mov
dec
adc
push
xorb
sbb
xor
mov
sub
cmp
xchg
push
mov
stos
rclb
rorl
xor
fbld
sbbb
popa
jno
pop
scas
xlat
mov
inc
fwait
pop
cmp
idivb
inc
or
mov
orb
std
dec
jg
das
push
jmp
xor
mov
xor
cltd
aam
inc
xchg
mov
in
paddsw
mov
jecxz
mov
mov
aas
mov
mov
jp
mov
shl
cmp
and
pop
xchg
mov
xor
cmc
pop
mov
inc
out
mov
push
in
pop
in
subl
cmp
fnsave
jl
sbb
and
lret
jecxz
or
arpl
xor
ret
sti
cltd
xchg
pop
xor
cmp
je
or
dec
xor
ja
xchg
xchg
ja
cltd
dec
loopne
cmp
inc
mov
cmc
lds
inc
sbb
mov
iret
fdivr
cmp
sbb
mov
jno
cmp
add
jo
mov
mov
jg
out
loopne
xchg
jno
js
loopne
adc
aas
out
push
push
js
sub
mov
and
jl
lahf
and
outsb
out
pop
inc
and
sti
jge
stc
lret
jb
cwtl
pop
fcomps
pop
test
data16
mov
and
ljmp
pop
or
cltd
sbb
loopne
or
fldcw
jo
mov
sahf
in
pop
xlat
push
push
sbb
xor
mov
push
cwtl
push
pop
sbb
cmp
je
lcall
push
cmp
cwtl
fwait
adc
mov
mov
add
in
xor
sub
cbtw
test
mov
mov
lahf
repz
outsl
ja
xchg
in
scas
xchg
mov
fidivrl
orl
pop
and
sbbl
cwtl
pop
pusha
std
and
lcall
mov
or
in
cwtl
mov
mov
ljmp
sub
xchg
in
pop
fisubrl
xchg
mov
cmp
pop
cmp
insl
test
xchg
mov
mov
cmp
cli
aas
popa
cwtl
cmp
mov
and
pop
pop
cmpsb
sti
mov
loope
in
mov
pop
mov
xchg
mov
leave
inc
xchg
adc
js
cwtl
add
pop
cmp
mov
dec
dec
pushf
or
add
xor
jo
sbb
cmp
in
pop
cmp
cwtl
xor
test
inc
nop
push
and
xlat
dec
or
dec
mov
addr16
scas
xor
adc
cmc
push
jg
das
cmc
add
dec
cwtl
pusha
js
add
add
imul
cmpsl
mov
movsl
cmp
adc
cmp
cmp
scas
cwtl
xor
inc
clc
mov
push
sti
adc
adc
mov
inc
pop
lock
mov
mov
xchg
lahf
cmp
lcall
jns
int
push
mov
cwtl
mov
arpl
aaa
jp
cltd
pop
int
icebp
lret
je
and
out
mov
mov
cwtl
sar
rcl
out
jecxz
stc
lret
jne
jmp
popa
mov
xorb
xlat
cmp
lcall
mov
pop
or
mov
mov
xor
movsb
xor
and
fwait
lret
xor
cmp
cmpb
sti
pop
dec
insb
popf
imul
ret
pop
stos
into
jbe
jl
lods
ret
int
xchg
sarl
sbb
mov
pop
enter
cli
cmp
dec
popf
push
loopne
jle
imul
lcall
cmp
cltd
pop
ja
push
cwtl
shl
lods
jl
cwtl
sbb
int
pop
mov
xchg
fnstcw
icebp
jmp
sbb
push
jp
cwtl
cmp
shll
loop
dec
jo
mov
imul
outsl
loopne
add
nop
out
mov
lea
in
push
jb
ja
daa
cmp
fildl
das
sbb
cmpsl
mov
in
add
and
inc
not
inc
mov
xor
inc
xor
in
xchg
and
shlb
inc
jns
scas
cwtl
cmp
mov
mov
jecxz
add
xlat
pop
je
cwtl
lods
pop
pop
push
subl
xor
data16
and
dec
mov
pop
sbbb
outsl
dec
pop
ret
cwtl
aam
lret
push
sub
cmp
outsb
mov
dec
cwtl
cwtl
mov
imul
sub
icebp
ret
mov
jo
out
cmp
hlt
out
ret
cli
xchg
ret
adc
jb
and
ret
es
adc
cmp
scas
cwtl
fsts
jmp
xchg
and
mov
stos
add
out
shl
test
aaa
cwtl
and
movsb
int
pop
cmp
in
jbe
cwtl
jp
pop
ror
repz
mov
cld
lcall
ds
xchg
xor
fdiv
cmp
mov
inc
cwtl
cmp
jne
cmp
jno
xor
sbb
xchg
xchg
fnstcw
stos
fmulp
cli
pop
fisttpll
pop
lcall
dec
mov
in
cmp
push
lcall
mov
bound
int
ss
jle
jb
in
mov
cmp
pop
lcall
jmp
xlat
cmpb
addb
dec
dec
pop
mov
inc
dec
xor
or
inc
mov
xchg
in
adc
lcall
in
cwtl
jae
fistpl
cwtl
inc
or
xlat
aam
jle
mov
xchg
and
fcoml
jbe
into
int
mov
outsl
dec
pop
arpl
or
cwtl
fnstenv
insl
roll
ffree
scas
jo
push
mov
sarl
in
inc
sarb
or
add
ss
mov
lcall
pop
fbld
icebp
inc
aad
outsl
sbbb
fsubrs
pop
sbbl
jecxz
mov
adc
cwtl
pop
repnz
gs
fiadds
push
std
dec
pop
loopne
cwtl
inc
mov
cmp
inc
xchg
inc
inc
xchg
repnz
mov
inc
jecxz
mov
mov
cld
adc
leave
mov
scas
cbtw
jnp
call
arpl
lret
popa
movsb
xchg
fisttps
mov
outsw
aas
mov
fwait
lahf
mov
xchg
mov
iret
jl
shll
outsl
repz
stos
inc
fwait
xlat
cltd
xchg
dec
inc
pop
inc
mov
pop
lock
mov
popa
lcall
or
inc
out
fwait
lcall
call
sub
pop
sub
inc
push
push
sbb
jecxz
xchg
add
sub
shlb
insb
xor
add
and
dec
xor
add
add
int3
sbb
js
push
shl
arpl
add
jecxz
push
pusha
movsb
xor
aam
cmp
lcall
add
sbb
push
in
sbb
scas
xor
and
mov
jmp
push
shll
lret
add
lahf
add
cmp
popf
xchg
fistpl
add
jp
cwtl
xor
jbe
cmpsl
xchg
mov
and
jl
cwtl
dec
in
stos
movsb
test
shr
cmp
add
add
and
cwtl
rcr
push
jg
fbstp
faddp
mov
xor
dec
and
les
shrl
xor
xchg
push
ja
mov
icebp
mov
cwtl
mov
pavgw
xor
xchg
xorl
rclb
xor
add
jge
cmp
mov
mov
cmp
pop
testb
lret
jecxz
shl
loope
mov
out
xchg
cwtl
add
std
jbe
cwtl
cmp
loop
insb
and
aaa
cwtl
loopne
sar
sahf
jbe
cwtl
xor
and
call
aad
or
sbb
in
jb
vmulss
xor
lcall
add
jecxz
push
cmc
sub
pop
mov
mov
inc
push
mov
cmp
addb
add
int
and
fildl
dec
mov
sub
mov
or
jecxz
aam
xlat
adc
add
aad
mov
xchg
aad
dec
pop
mov
jns
cwtl
push
fistpl
fidivs
jl
cwtl
nop
xchg
test
and
in
push
jecxz
xor
shll
fistps
cmp
popa
mov
ret
sahf
add
ja
push
push
adc
sub
sbb
and
cmp
fisubl
les
fstl
mov
scas
xor
pop
clc
xlat
inc
mov
add
in
icebp
cmp
lds
cwtl
in
ret
pmulhw
mov
sub
lea
daa
cltd
rcrb
pop
push
adc
push
leave
js
add
dec
xchg
xor
fiaddl
stos
adc
xchg
das
add
dec
cmp
adc
cwtl
fisttps
jae
add
js
incl
enter
xchg
repz
adc
mov
in
pop
and
lods
testb
nop
lock
xlat
pop
and
jle
ljmp
inc
loop
pop
ret
push
xor
fcompl
or
dec
dec
pop
loop
clc
or
lods
mov
mov
cmp
pop
jmp
push
jb
mov
mov
mov
adc
sbb
cwtl
xor
shrl
ret
xlat
daa
mov
out
or
lods
or
dec
nop
cmc
ret
cwtl
outsl
outsl
push
mov
in
and
fbld
add
orb
cmp
sbb
jb
cmpsl
adc
imul
leave
dec
rcll
imul
and
push
adcb
add
sbb
or
ret
cwtl
xchg
aad
cld
imul
xchg
push
xor
xor
repz
aam
cmpsb
test
loope
cwtl
pop
repz
int
cwtl
and
pop
lcall
push
ljmp
loop
push
test
rorb
bound
mov
scas
cmp
inc
insb
stc
cmp
add
fcompl
into
sti
insb
sbb
mov
shrl
push
out
sti
fcoms
cwtl
mov
fs
dec
ja
xchg
ljmp
lds
pop
clc
shlb
pop
call
mov
insb
cwtl
daa
dec
jo
out
dec
cmpsl
fdivp
cwtl
jl
fildl
subb
and
fadds
mov
mov
movsl
jno
in
hlt
testb
push
inc
dec
addb
lahf
je
xor
sbb
adc
pushf
adc
sahf
xchg
xchg
xor
pop
lcall
cli
ret
inc
sar
mov
add
or
cwtl
loopne
sub
pop
mov
les
jecxz
ja
inc
push
cwtl
dec
add
and
sub
fnstenv
xchg
inc
je
adc
push
jnp
cwtl
or
int
and
dec
xchg
add
mov
loope
add
lea
mov
add
clc
xlat
mov
sbb
push
xlat
fldt
xchg
aaa
ljmp
xchg
pop
pop
testl
xchg
mov
dec
jmp
outsl
push
pop
sbb
mov
lods
repz
mov
jp
mov
mov
mov
cmc
dec
xlat
aas
bound
movsb
imul
cmc
lret
jp
cwtl
jnp
std
cmp
outsl
jle
cmp
add
subb
lcall
adcb
xchg
lcall
xchg
loop
mov
mov
push
fsubrs
mov
cmp
lea
jo
jecxz
mov
loope
les
enter
or
loopne
lcall
inc
pushf
pop
insl
xchg
dec
jbe
add
mov
test
push
jl
sbb
insl
daa
mov
mov
lcall
cwtl
cwtl
or
lods
jbe
sub
push
pop
sahf
jno
lods
dec
xor
cwtl
push
cmp
call
jmp
push
mov
ja
push
jmp
in
jecxz
push
inc
aam
mov
and
and
adcb
xor
testl
cwtl
adc
faddl
mov
pop
or
pop
mul
add
push
stc
fisubs
mov
pop
dec
jbe
cli
inc
ret
pusha
push
jbe
xchg
jns
cwtl
mov
fcoms
mov
negl
cmc
jbe
xchg
xchg
push
and
fldenv
inc
mov
or
xlat
pop
in
cltd
fnstsw
lods
pop
fcomp
xchg
cmp
imul
outsl
fstpl
addl
push
add
lcall
notb
adc
mov
dec
dec
mov
inc
xorb
xlat
xor
xchg
sub
subb
xor
mov
inc
je
inc
add
jecxz
push
adc
mov
out
xchg
dec
jb
pop
cmc
and
push
mov
push
mulb
xlat
sti
les
mov
add
mov
cmp
add
cmc
arpl
sti
in
es
fs
jbe
mov
dec
inc
mov
xlat
pop
leave
add
cld
testb
cwtl
jno
and
dec
cmp
adc
jecxz
xor
dec
push
aaa
inc
scas
cwtl
ret
test
call
enter
push
cwtl
leave
scas
cwtl
pop
inc
jbe
rcl
jo
in
cmp
fiaddl
dec
push
cwtl
dec
xchg
and
xchg
addr16
fstl
call
das
sub
dec
fwait
lcall
cmpsb
mov
mov
add
in
aad
cwtl
pushf
cwtl
xorb
pop
int
pop
xchg
mov
adc
insl
push
add
xor
int3
cwtl
xchg
cld
in
test
mov
int
xchg
push
fdivs
stc
add
pop
mov
and
dec
fildl
sbb
orb
cpuid
nop
gs
pop
lcall
test
jbe
mov
bnd
sbbb
xchg
mov
shl
rcll
or
mov
and
pop
inc
cmc
inc
push
jno
cwtl
adc
cmp
loopne
ror
cmc
jecxz
sti
mov
cbtw
insb
in
fs
cmp
stc
aam
jge
fs
sarl
push
lret
rol
mov
cwtl
jno
subb
xchg
dec
sbb
mov
fs
fldenv
movsl
mov
sarl
cmp
mov
orb
pop
sahf
inc
roll
dec
test
and
xchg
fs
sbb
movsb
into
aad
mov
push
aad
and
cmc
jg
xchg
pop
inc
scas
mov
fcomi
and
inc
call
xchg
inc
jb
sbb
and
push
popa
sbb
jne
fistpll
jecxz
mov
sub
push
pop
sub
push
fildll
mov
andb
in
orb
sub
dec
cmpsl
mov
scas
push
xchg
dec
adc
lret
mov
call
mov
test
lcall
insb
cwtl
rol
cli
shl
cmp
cwtl
cwtl
inc
fwait
repz
ljmp
das
mov
cwtl
cwtl
dec
stos
fs
in
jg
xor
fstl
and
out
sarb
pop
iret
sbb
cwtl
orb
in
xorb
jnp
jle
lret
insl
pop
sbb
push
aas
repz
andb
inc
mov
xchg
xorb
out
jo
subl
fiaddl
push
pusha
mov
sbb
inc
std
pop
movsb
cli
push
incl
adc
sub
push
pop
or
lods
movsb
jmp
lcall
dec
bnd
and
mov
dec
jb
lcall
cwtl
nop
jno
in
push
int3
scas
aas
cwtl
fsts
cltd
loopnew
imul
cmp
cmpsb
cli
negb
push
mov
xor
cwtl
daa
out
shlb
lcall
test
lcall
ficoms
fsub
xlat
xchg
ret
pop
sbb
js
scas
int
lcall
inc
xor
jle
sbb
frstor
sbb
or
testb
and
cwtl
in
mov
adc
andw
fmuls
xlat
and
push
test
jae
lcall
sub
rcrb
outsl
filds
jnp
cli
inc
testl
sub
sar
pop
imul
icebp
push
inc
mov
xchg
cwtl
lock
sbb
and
ljmp
fisttpl
popa
jo
nop
lock
mov
mov
xchg
in
enter
xlat
xchg
ret
adcb
xor
aaa
out
lret
mov
repz
loop
xlat
pop
call
push
ror
lods
lcall
clc
aad
cwtl
stc
mov
fst
dec
psadbw
cwtl
fnstcw
push
mov
xor
xlat
push
lods
pop
cld
fs
ja
loope
cmp
and
mov
aaa
cmpsl
dec
xchg
inc
add
fwait
js
add
out
adc
mov
popa
pop
xor
mov
in
push
lods
clc
add
aam
std
out
cwtl
mov
pop
and
fldt
adc
out
cmpsb
inc
enter
out
sbb
pop
dec
ret
popaw
mov
dec
dec
mov
cwtl
xor
idivb
ret
fsqrt
mov
mov
insl
nopl
add
push
loop
mov
loopne
mov
cwtl
stos
pop
mov
push
mov
mov
cmpsb
rol
cmc
fisttps
pop
xchg
add
addr16
dec
dec
mov
mov
xor
fsubs
out
xlat
jl
mov
stos
mov
pop
mov
in
adcb
aad
mov
jmp
mov
leave
pusha
bswap
add
mov
jne
cmp
sub
dec
mov
xorb
xchg
cwtl
cmp
cmpsl
popf
stos
jo
xor
inc
iret
loop
xor
loopne
or
rolb
in
mov
cwtl
rcll
ds
mov
mov
pop
mov
lea
and
les
xchg
test
cwtl
xor
test
insb
movsb
cmovb
add
cld
jle
inc
sahf
xlat
adc
mov
fsts
jle
or
mov
cmpsb
icebp
cmp
das
push
in
nop
and
sbb
inc
mov
xor
enter
xor
adc
mov
mov
push
ss
sub
data16
cmc
push
dec
bound
sbb
or
mulb
insl
add
inc
test
jnp
ljmp
mov
sbb
nop
aam
test
mov
stc
pop
inc
adc
dec
ss
repz
in
rclb
cwtl
aam
inc
and
enter
sbb
mov
sbb
jmp
test
iret
in
clc
mov
sbb
cs
cmpsl
or
scas
icebp
call
insl
push
jo
mov
cmp
int
adc
shr
mov
mov
inc
mov
jbe
lcall
lcall
mov
testb
fmull
shlb
xchg
jnp
or
push
lcall
inc
or
sub
inc
bound
xor
pop
fwait
test
roll
call
testb
push
mov
test
mov
roll
mov
es
cltd
lcall
mov
loope
popa
sub
mov
out
mov
adc
fwait
sbbl
push
fiaddl
in
xchg
sbb
fisubl
stos
add
push
inc
mov
cli
cmpsb
jg
in
add
mov
repz
mov
clc
inc
loope
test
movsl
repz
clc
pop
stc
push
jnp
sbb
and
pop
jge
ljmp
pop
hlt
and
xchg
test
mov
pop
and
adc
or
or
add
add
sbb
lds
inc
dec
xor
mov
pop
cwtl
cmp
xchg
cmp
das
mov
in
cmp
sub
jns
push
mov
enter
cs
mov
out
ret
pusha
repz
std
push
add
add
bound
mov
mov
push
test
adc
loop
push
sub
xchg
test
push
cmpsb
add
inc
sbb
jb
inc
add
loop
loop
es
and
int3
out
roll
cmpsb
insl
shr
ja
sbb
fidivrl
or
cmp
or
dec
mov
push
add
cmpsl
dec
pop
and
rdpmc
movsl
insl
push
icebp
lds
cmpl
mov
push
fsubs
mov
shll
add
andb
mov
mov
icebp
pop
sahf
into
shl
sub
insb
cwtl
aam
xchg
mov
and
dec
or
cmp
cmpsb
ss
mov
jbe
popa
sub
out
cs
fs
push
mov
sub
lock
fstps
in
lock
fwait
mov
mov
outsb
aam
jbe
mov
xchg
inc
pop
lcall
push
insl
shll
push
mov
mov
pop
mov
sub
sbb
into
fldenv
int3
add
cs
cmp
cmp
lods
lcall
fmuls
push
adc
sub
or
in
in
pusha
and
cmc
fsts
mov
outsl
or
cld
mov
setae
inc
cld
roll
dec
loop
adc
xchg
pop
sub
loopne
xor
movsb
lds
sbb
popa
and
mov
or
or
inc
adc
jo
pushf
mov
pushf
nop
inc
sbb
out
inc
inc
repnz
inc
out
and
int
jae
out
dec
loopne
mov
sbb
sub
sarb
rclb
out
and
or
inc
inc
and
stos
in
fstl
inc
pop
mov
mov
mov
notl
fmuls
movsl
sarb
adc
cmp
fnsave
mov
loop
mov
lret
repz
data16
fimull
or
cwtl
mov
xchg
imul
mov
out
loopne
push
push
xor
dec
jmp
and
ficoms
mov
cmp
clc
add
mov
daa
mov
movsb
sub
mov
daa
jne
loop
xchg
les
xor
mov
and
addr16
xchg
into
mov
loope
push
addr16
loopne
sbb
daa
xor
xchg
and
jae
loope
mov
insl
clc
or
pop
mov
add
dec
cmpps
mov
sbb
xchg
stos
jae
sbb
loopne
cmp
pop
cld
sbb
ret
ja
out
icebp
scas
pop
addl
push
pop
adc
sarl
xchg
jmp
adc
or
and
repz
and
or
mov
out
call
cmp
dec
pop
mov
add
lods
out
sub
and
xorb
dec
pop
enter
fimuls
rcrl
leave
cwtl
cwtl
dec
rcll
sbb
and
mov
inc
fsubs
cmpsb
dec
cmp
clc
bound
call
xchg
pop
sub
jp
xchg
sbb
mov
enter
iret
cli
xchg
jge
push
call
jle
inc
mov
call
into
inc
stos
jbe
pusha
mov
mov
mov
cmpl
movsb
push
inc
push
out
ss
shrb
jbe
arpl
imul
out
fbld
xchg
stos
mov
mov
addr16
out
fistps
cli
adc
testb
xchg
arpl
mov
repnz
mov
sub
jo
aas
lcall
insb
xchg
mov
loopne
fimuls
daa
cltd
mov
sub
add
sub
fsubrs
push
in
faddl
lret
jge
andb
mov
xchg
fcom
fcoms
lock
pop
sahf
mov
stos
pop
and
shrb
add
jo
sub
fwait
aam
repnz
mov
push
inc
test
add
shr
mov
arpl
dec
into
mov
pop
jo
inc
fbstp
mov
jo
dec
addr16
sbbl
inc
mov
stc
lods
jbe
in
inc
jb
inc
lock
sbb
cltd
push
test
sub
push
leave
and
out
add
loop
mov
aam
mov
cmp
movsl
bnd
push
std
mov
jmp
cmpb
cwtl
stos
ja
and
scas
loopne
mov
cmp
mov
in
jnp
daa
mov
cli
xor
mov
mov
lret
movsl
movsl
popa
xchg
out
mov
inc
fbstp
push
xor
mov
cmp
sbb
movsb
add
sbbl
loope
into
addr16
fbld
mov
in
sahf
adc
sub
into
sub
andb
sbbl
sub
cmp
lock
push
xchg
mov
add
push
js
dec
xchg
lahf
stc
or
jp
sbb
int
aad
and
xchg
cltd
pop
roll
movsl
adc
pop
sub
popf
mov
sbb
ret
and
push
add
fbld
test
push
adc
test
js
cmp
inc
je
cli
loope
cmp
inc
andb
and
pop
les
push
adc
sub
call
les
sub
cs
add
mov
stos
insl
xor
movsl
lods
aad
xchg
fs
in
jne
mov
pop
mov
sub
inc
sbb
fs
sbb
mov
lock
repnz
cmc
cmp
xchg
ja
movsl
push
mov
insl
dec
inc
sub
and
sub
mov
cltd
movsl
add
dec
out
add
cs
popa
das
jle
shlb
jb
add
gs
hlt
lods
repnz
inc
insb
mov
push
callw
jl
aad
subl
push
mov
cltd
cmpsl
push
push
inc
repnz
jb
aaa
cmpl
mov
add
sbb
sti
pop
mov
mov
loop
jbe
dec
fsubrs
outsb
out
and
out
inc
jns
gs
arpl
jno
repnz
cmp
add
xlat
andl
int
cli
and
mov
fidivrl
cmpsl
jmp
loope
stos
and
mov
jnp
cmp
dec
faddl
call
mov
jg
sti
and
in
push
divl
mov
addr16
xchg
lock
lcall
mov
inc
sub
insl
addb
out
int
ss
loopnew
int
sub
into
sub
int
mov
xchg
add
or
jbe
mov
sbb
sbb
sub
jne
div
pop
sbb
call
cltd
push
mov
clc
cmp
xchg
pop
dec
mov
cmc
mov
or
cwtl
xchg
rcrl
lea
adc
out
mov
and
push
loope
jno
xchg
xor
push
out
out
mov
sub
jae
lahf
int
xlat
sub
add
mov
xor
out
dec
inc
lahf
aas
jg
out
pushf
and
add
cwtl
jb
sub
mov
inc
mov
xchg
ret
rcrb
repnz
cli
shr
mov
cmp
out
pop
pop
xchg
aaa
outsl
add
sbbl
roll
cmp
mov
adc
stos
out
loop
xor
adc
in
out
inc
clc
sub
data16
mov
xchg
icebp
cmp
push
outsb
outsb
negl
sarb
add
jmp
movsl
sti
pop
out
mov
mov
dec
or
call
adc
mov
sub
jl
cmc
xlat
mov
xchg
xor
add
lahf
addr16
or
loope
inc
pop
pop
int
int
lods
fwait
loopne
add
bound
jnp
scas
jns
shl
mov
orb
lcall
pop
cwtl
add
decl
cmpsl
adc
sub
sbbl
adc
sbb
aaa
inc
outsl
adc
lods
fisttpll
orb
lahf
call
test
add
stos
scas
fbld
stos
push
imul
movsb
iret
andl
jnp
int
addr16
out
inc
pusha
or
mov
xlat
call
cmc
cwtl
xorl
or
cmpsl
lods
inc
gs
movsl
or
int3
cmp
sub
or
mov
xchg
push
mov
cmpl
xchg
xor
aaa
ret
xchg
or
loope
jb
data16
cmp
xchg
sub
aad
jb
sub
xchg
dec
gs
mov
dec
in
sbb
sbb
pop
daa
imul
pop
dec
cmp
es
adc
or
xlat
js
lcall
adc
mov
push
xchg
mov
add
es
out
js
mov
outsb
aas
inc
cmc
lret
or
outsl
in
cmp
and
jb
stos
leave
fidivrl
xor
mov
fdivs
in
aad
aas
roll
ret
cmp
sub
sub
cltd
push
adc
jl
loope
sub
mov
stc
and
fiaddl
xor
mov
bound
in
cwtl
repz
add
repz
dec
aaa
sbb
add
adc
int3
ss
push
data16
insb
pop
mov
movb
xchg
mov
out
jbe
arpl
mov
pop
mov
pop
cmp
and
or
mov
push
sbb
and
psllw
movb
mov
jbe
popa
jne
push
pop
aad
arpl
mov
push
loopne
ss
dec
pushf
addr16
mov
jp
pmaxsw
add
mov
out
push
cmpb
sbb
std
setp
out
or
and
xchg
stos
inc
jmp
mov
jl
arpl
adc
push
fcoms
psubsb
push
clc
cmp
outsb
daa
repz
std
jp
call
test
bound
cmpsb
add
icebp
shl
aad
xchg
lcall
jg
lret
rcrb
rcrb
pop
addr16
faddl
jg
mov
addl
mov
imul
mov
jns
cli
aaa
jp
pop
test
ss
stos
lahf
adc
mov
cli
popa
loope
or
data16
mov
jp
and
pop
cs
imulb
scas
pop
mov
cwtl
mov
jnp
and
out
mul
out
cmpsb
add
ret
sub
mov
shrl
inc
inc
adc
cmpsl
lock
dec
enter
imul
insl
jbe
addr16
adc
mov
inc
into
inc
jecxz
nop
xor
inc
sub
andl
jmp
xorl
ret
rolb
loopne
sub
pop
sub
in
fcom
hlt
repz
scas
mov
in
test
int
jns
test
gs
insl
clc
jb
jge
jmp
mov
sub
mov
sbb
pop
in
sbb
xor
jbe
add
sbb
popf
fldenv
cld
daa
adc
sbb
inc
inc
or
and
sub
mov
xchg
movsl
in
mov
inc
mov
xor
imulb
cs
notl
fcom
push
andb
bound
lret
jle
enter
jge
cmpsl
and
inc
or
and
sbb
push
or
fdivs
push
aaa
jp
sub
mov
mov
mov
fwait
mov
push
dec
cltd
xchg
adc
lds
cmp
sbb
mov
inc
add
or
call
popf
daa
inc
dec
xchg
dec
in
sub
out
inc
sbb
push
nop
or
lret
fs
call
xchg
movsl
or
mov
cli
mov
or
iret
mov
dec
mov
je
xor
push
mov
and
jo
pop
call
push
out
and
sub
jb
xchg
push
xchg
ret
aad
adc
loop
add
ja
mulb
pusha
pop
sub
or
ret
inc
inc
ss
mov
mov
xchg
mov
cmp
cwtl
dec
push
cmp
and
andb
and
les
add
jb
filds
add
je
ljmp
ret
movsl
in
les
mov
mov
icebp
or
lret
and
clc
aad
mov
out
outsb
je
push
test
inc
bound
lock
ds
ljmp
flds
mov
movsl
jo
rcll
and
inc
lcall
and
iret
dec
xchg
dec
mov
jbe
in
or
mov
and
or
clc
lods
repz
je
imul
push
lock
arpl
fsubs
mulb
mov
sub
movsl
sub
call
out
xlat
push
lret
pop
jne
inc
mov
mov
test
mov
and
pop
inc
or
xchg
test
fs
lock
add
lds
dec
pop
int
cmpsl
sub
mov
sub
test
into
mov
addr16
xchg
mov
push
icebp
add
jb
xor
xchg
cwtl
xchg
xchg
sbb
test
mov
ja
shlb
sub
in
mov
js
inc
inc
loop
pushf
ljmp
and
add
push
out
ret
add
push
push
clc
push
cwtl
push
jle
ret
idiv
pop
lods
mulb
lds
loope
dec
cmp
addr16
movsl
in
or
and
lds
xchg
inc
inc
ret
aad
repz
addr16
out
aad
addl
pop
or
jb
shll
or
inc
out
sbb
sbb
clc
testl
dec
iret
mov
movsl
nop
sub
cmp
loop
push
inc
xchg
mov
addr16
dec
xor
and
div
addr16
jne
adc
and
subb
in
cmpsl
movsl
aad
and
outsl
xchg
jo
adc
fldt
addb
mov
pop
test
loopne
xchg
ret
imulb
movsl
xor
out
das
icebp
syscall
cmp
pop
and
xchg
pop
lods
es
out
into
sub
in
or
movb
push
push
mov
loop
inc
inc
mov
mov
cmpsl
popl
or
push
mov
test
add
push
or
sub
lret
leave
test
cmpsl
sub
xchg
sub
lea
dec
enter
sbb
clc
add
jecxz
inc
cmpsb
jne
out
or
ficoml
insl
aad
loopne
inc
pop
addr16
loope
mov
jbe
repnz
loopne
in
lahf
test
int
xchg
push
fbld
cwtl
mov
cwtl
xor
sbb
test
fisubl
pop
lock
adcb
jne
push
movl
mov
and
and
outsl
aad
inc
mov
push
lods
inc
insb
jbe
mov
lods
add
fidivl
ds
enter
xlat
xchg
add
adc
adcl
and
push
pop
jnp
jp
filds
jne
in
jecxz
xor
mov
lock
xor
scas
sarb
cld
dec
push
mov
jg
add
faddl
rcl
in
fiadds
and
int3
jp
jecxz
cwtl
xor
loope
jle
xchg
inc
in
lea
dec
call
and
mov
int3
or
mov
jle
test
inc
dec
pop
or
adc
sub
push
push
ja
pop
and
mov
pop
int3
add
push
dec
xchg
daa
add
or
test
daa
mov
mov
mov
xor
aad
and
loop
inc
sbbl
xchg
call
adc
inc
push
mov
shll
jmp
xchg
out
xchg
pop
xchg
repnz
aas
es
push
xchg
mov
xchg
xchg
fidivl
pop
test
mov
inc
js
bound
out
movsl
fs
inc
decl
inc
into
mov
and
into
pop
stos
jle
enter
repz
pop
or
in
out
les
add
enter
cmp
xchg
xchg
mov
repnz
movsb
mov
testb
dec
cld
in
mov
jbe
test
lds
andb
push
add
clc
out
and
and
jb
xor
mov
shr
aad
sbb
in
addr16
in
xchg
pop
inc
inc
loope
inc
dec
imull
cwtl
xchg
lea
adc
or
dec
aad
mov
out
fs
les
mov
shrb
add
mov
push
mov
pop
sub
ret
mov
test
xchg
pop
xorl
jnp
pop
nop
xchg
data16
test
lds
sub
fisttpll
xor
lcall
daa
dec
incb
call
fs
into
out
and
push
xchg
call
int
and
jle
xchg
pop
out
outsl
inc
enter
enter
out
or
jns
xchg
pop
jbe
push
or
subl
inc
ja
mov
clts
push
pop
add
addr16
or
add
out
and
push
mov
xchg
in
and
mov
outsb
inc
mov
repz
or
fwait
adc
or
clc
dec
sub
lea
hlt
pop
aam
and
js
jl
and
rcl
pop
inc
fnsave
call
mov
xchg
inc
mov
mov
xchg
inc
cmpsl
sub
rorb
pop
rorl
dec
mov
xchg
add
mov
dec
inc
jns
xchg
pop
xor
sub
sub
enter
xor
push
mov
or
daa
ret
sbb
jno
push
jnp
mov
sub
subl
add
inc
push
sub
cmpsb
dec
enter
sbb
cwtl
pop
or
test
ljmp
gs
out
adc
cmpsl
outsb
jo
push
pop
subb
out
or
jle
xchg
pop
dec
bound
inc
and
xlat
inc
jmp
xchg
jle
pop
pop
out
jbe
ret
pop
mov
dec
add
add
test
sbb
cmp
or
mov
mov
push
or
fistpll
call
test
add
cwtl
out
outsb
push
int
shr
test
inc
bound
xchg
shrl
mov
add
in
data16
dec
and
xor
xor
inc
jmp
jns
pop
mov
mov
and
xchg
push
mov
movsl
push
dec
add
mov
sub
add
push
sbb
inc
out
movsl
sub
sbb
mov
pop
and
andb
subb
aas
push
test
xchg
sub
movsl
sub
sub
out
cld
sbb
xor
mov
movsb
pop
iret
out
mov
inc
mov
insl
int
push
scas
cwtl
fnstenv
aas
inc
inc
or
inc
add
mov
dec
enter
dec
dec
and
cmp
fs
pop
dec
add
test
stos
mov
cwtl
nop
js
mov
dec
out
fs
enter
jne
out
int
cwtl
xlat
or
and
out
icebp
test
push
mov
add
into
out
mov
and
addr16
daa
and
clc
aaa
mov
insl
add
and
xchg
mov
movsl
dec
cwtl
mov
adc
add
loopne
outsb
mov
ja
push
iret
pop
xchg
fwait
ret
aad
bound
push
loope
inc
mov
xchg
pop
dec
fisubrl
out
xchg
subl
inc
insl
out
pop
add
ret
mov
or
out
outsb
and
filds
jecxz
cmpsl
and
jae
pop
aad
test
into
insl
fdiv
ss
cwtl
lods
imull
stc
push
push
arpl
bound
inc
push
inc
and
xchg
arpl
and
pop
mov
stos
and
out
test
add
xlat
int3
pmaxub
lock
mov
add
out
inc
dec
cmp
jbe
inc
xchg
test
fisttps
sbb
daa
sub
jns
int3
cwtl
fbstp
pop
cwtl
out
mov
std
push
pop
jbe
mov
test
popa
and
xor
xor
into
movsl
in
cmp
aas
jle
xchg
inc
in
ror
lret
dec
out
and
and
daa
push
fiadds
daa
dec
mov
movsl
mov
add
fs
add
inc
inc
mov
dec
test
and
mov
int
and
movsb
pop
lods
mov
sub
ss
adc
sub
mov
and
jns
fs
xor
icebp
loope
in
dec
jecxz
adc
jb
dec
xchg
dec
mov
in
out
cmpsb
clc
cmpsl
add
and
call
inc
and
loopne
mov
fldl
faddl
sahf
mulb
push
mov
out
add
adc
sub
jns
adc
roll
sub
lds
xchg
inc
xor
pop
jecxz
or
repnz
add
jb
outsl
sub
out
in
test
enter
repnz
pop
xor
xor
cmp
jp
cwtl
leave
cwtl
cmp
lock
mov
inc
inc
dec
out
dec
imul
jge
out
cmp
xchg
addb
or
imul
lea
xchg
iret
lahf
out
jg
or
jle
push
push
pop
push
out
fs
sub
adcl
mov
and
and
imul
xchg
adc
mov
ja
cli
add
bound
rorl
loope
mov
test
and
sti
push
sbb
jbe
sbb
inc
in
sbb
mov
sbb
jbe
mov
push
pop
ret
adc
and
sbb
mov
pop
pop
test
leave
mov
mov
pop
enter
hlt
out
rolb
out
sub
dec
daa
sub
into
cmp
sub
shrl
xor
lock
jb
xchg
in
movsl
inc
pusha
lahf
out
or
cmpsb
ret
push
dec
lret
test
out
insl
jae
push
lcall
and
xchg
imul
dec
mov
nop
out
mov
jbe
testl
sbb
jg
jbe
fimull
test
pop
daa
push
xchg
call
xchg
adc
sub
lds
mov
pop
add
mov
mov
out
out
shrb
add
ret
daa
test
jo
jecxz
sti
adc
push
sbb
jns
mov
filds
inc
lock
and
xchg
popa
adcb
movsl
pop
into
add
xor
lock
push
add
andb
mov
orl
ss
dec
or
loopne
lock
ss
mov
sub
mov
sub
divl
stc
cmp
loop
repz
dec
in
popf
dec
push
subb
pop
int
cmc
add
mov
imul
vmread
sarb
int
mov
and
insl
dec
and
mov
cwtl
shl
jo
mov
cmp
stos
and
daa
js
inc
out
dec
xchg
sbb
mov
aas
push
mov
push
xchg
add
cmp
xchg
cwtl
lock
cmp
adc
shll
dec
sahf
ret
in
mov
jb
pusha
xchg
adc
shlb
add
ret
aaa
and
inc
aam
fsub
cmp
movsl
stc
inc
jbe
add
cmp
add
mov
and
out
xorb
shrl
xor
jg
add
jo
xor
adcb
sub
xor
inc
jecxz
stc
mov
stos
mov
roll
add
mov
mov
shll
pop
sbb
outsb
mov
cmp
jns
shlb
and
xor
jae
mov
or
mov
rep
push
bound
addr16
inc
andb
and
sub
adc
lcall
pop
xchg
enter
mov
mov
xchg
xchg
loope
ja
jmp
fwait
xor
inc
fadds
and
and
bound
outsb
loop
icebp
add
cmp
das
bound
iret
outsw
inc
cmpsl
out
dec
xor
outsl
xorl
cmp
nop
repnz
scas
cmp
cltd
outsl
ss
mov
sbb
mov
sahf
and
xor
out
jbe
psrld
subl
fsubrl
jbe
mov
stos
jno
pop
lock
pop
lea
popf
loopne
pop
lea
and
add
icebp
sbb
pop
jmp
cmp
bound
add
cmpsl
and
inc
fs
fwait
movb
lods
ret
cmp
or
daa
testb
aad
mov
jne
ja
cs
push
test
je
mov
sbb
cli
and
fs
movsb
addr16
add
enter
mov
push
or
sbb
xor
xabort
lea
rorl
jecxz
in
mov
inc
sbb
xor
int
jnp
add
pusha
loope
xor
clc
inc
sub
add
jmp
or
iret
sbb
sub
xor
out
push
out
jl
jl
gs
movd
cwtl
js
pop
mov
dec
clc
gs
and
xor
stos
inc
inc
sbb
pushf
sbb
inc
out
sub
mov
push
test
add
xchg
out
xor
aad
inc
sbb
ljmp
addr16
aaa
ss
dec
cmp
mov
dec
mov
inc
data16
mov
stos
je
xchg
lods
in
push
aad
pusha
pop
sbb
outsb
mov
popa
mov
jno
ror
lcall
mov
mov
rolb
add
popf
jmp
mov
lcall
add
dec
fwait
jmp
adc
inc
and
inc
add
ret
and
in
in
push
push
inc
in
mov
clc
out
or
sub
mov
and
pop
mull
call
call
fdivl
addr16
push
sti
fbld
fmul
rcll
jp
ljmp
sarb
mov
iret
loopne
mov
xchg
loop
fdivrs
add
out
xor
mov
addr16
or
sbb
jbe
sub
push
jnp
mov
outsl
mov
call
sub
sti
ret
xor
add
mov
dec
pop
cld
and
sbb
fsubr
cwtl
add
call
clc
call
push
jge
add
xor
mov
data16
inc
enter
std
or
push
test
sbb
cltd
aad
lcall
mov
pop
pop
add
test
mov
insb
sti
lea
data16
loope
pop
mov
popf
xor
sub
sbb
sbb
adc
js
cmp
mov
fldenv
movsl
xor
loopne
aad
aas
inc
sbb
jae
dec
fidivrs
cmpl
push
shll
push
in
dec
test
adc
nopl
inc
add
xor
mov
add
inc
in
add
out
cmp
push
js
les
and
xor
adc
and
aad
xchg
pop
pop
out
int3
lahf
fnstcw
cltd
pop
pop
jns
movsl
stc
sbb
loope
inc
aas
data16
pop
sub
cmp
orl
aaa
or
add
xor
cmp
jp
sub
mov
jb
repnz
dec
inc
add
cmp
loopne
sub
pop
mov
js
ss
lcall
jb
pop
mov
in
sbb
mov
jb
repnz
sbb
das
xchg
mov
cmp
inc
call
mov
fimuls
cli
cmp
sbb
sbb
xor
movsl
mov
inc
and
aas
cmp
sub
push
mov
xlat
fidivl
and
mov
movsb
pop
in
jae
rcrb
pop
sbb
and
sbb
leave
inc
rcrl
xchg
dec
cmp
xchg
loopne
insb
or
jns
scas
arpl
fldl2t
popf
sub
mov
fnsave
push
mov
loop
mov
and
jp
cmp
cwtl
jle
jecxz
fwait
bound
cld
xchg
add
clc
and
adc
sahf
es
and
pop
lods
lds
lret
enter
mov
add
cld
mov
fcmovnb
push
fwait
cmpsb
sbb
and
inc
lahf
cli
arpl
mov
push
inc
addr16
add
daa
int
loopne
xchg
add
addr16
jbe
mov
add
sub
scas
aad
js
test
xchg
loope
push
cli
test
arpl
cmp
je
in
outsb
adc
ret
mov
mov
mov
cwtl
pop
fucomi
and
ljmp
in
sbb
pushw
aam
push
data16
lea
out
xor
jb
fisttps
cmp
mov
and
cmpl
inc
dec
sbbl
out
cmp
and
add
add
das
mov
lcall
mov
or
push
in
leave
or
mov
ficomps
aas
pop
je
lcall
popa
cmp
iret
xor
add
add
jl
cwtl
mov
clc
and
mov
add
xor
enter
pop
jp
cmpb
jle
das
leave
out
in
icebp
mov
xor
hlt
mov
xor
sbb
jb
xchg
cmp
popf
inc
cmp
mov
add
cltd
pop
push
int3
mov
mov
int
jb
push
lock
cmp
cltd
lahf
sti
test
loopne
out
and
xchg
cmp
in
filds
out
or
sbb
dec
xchg
outsb
mov
cmp
mov
mov
aaa
ret
ret
ret
rcrl
cli
stc
inc
cmpsl
ret
out
add
and
mov
push
or
jno
and
cmp
mov
pop
pusha
adc
jp
mov
aas
xorl
aas
jb
jno
nop
pop
inc
lahf
test
lcall
sbb
sbb
jb
or
jo
mov
and
pop
popa
add
push
cmp
das
mov
push
lcall
lea
cmp
jle
addr16
gs
adc
mov
scas
pop
sub
clc
cmp
ror
jne
nop
pop
sbb
movb
xchg
jno
lahf
repnz
push
inc
inc
ja
pusha
xlat
in
pop
xor
xchg
inc
xor
dec
sbb
mull
call
mov
mov
addr16
xor
pop
inc
aas
cmpl
sbb
cld
cmp
orl
int
mov
fidivl
hlt
and
addr16
mov
adc
adcl
jb
mov
nop
cmpxchg8b
insb
negb
cli
pushf
subb
push
inc
std
mov
je
mov
js
ja
or
cmp
imul
cmp
leave
data16
not
pop
ret
dec
enter
push
pop
jmp
inc
popw
and
sbb
pop
je
lods
mov
pop
push
jge
clc
cwtl
data16
popf
sbb
or
inc
int3
cmp
and
sbb
enter
xchg
cmp
ds
add
aad
or
mov
pop
add
pop
mov
in
lock
cli
int3
inc
hlt
cmp
ja
into
loop
jno
mov
clc
dec
std
add
int
imul
rcl
adc
mov
fcmovbe
jmp
sbb
add
push
sbb
test
lds
out
mov
loope
inc
cwtl
cmp
movsb
adcb
inc
push
loop
mov
scas
out
push
mov
jp
mov
jno
inc
std
cmp
jo
cmpsb
sbb
sub
push
nop
call
outsb
cmpsl
test
scas
pop
cmp
out
test
sbb
inc
sti
fsubl
out
stos
cli
ficomps
push
inc
addb
ror
jnp
inc
push
sbbl
mov
dec
or
inc
inc
add
cmp
lret
jp
mov
cmp
aad
mov
pop
sbb
ss
pop
call
loopne
mov
loope
mov
dec
mov
sbb
fmuls
addr16
clc
cmp
and
test
pop
call
jge
inc
add
dec
push
add
iret
data16
dec
mov
adc
inc
mov
add
dec
mov
cmpsb
xchg
shufps
test
neg
jb
scas
stc
mov
rcr
das
out
inc
xchg
test
ret
push
jo
xchg
loop
out
scas
repnz
push
xlat
xchg
out
mov
inc
jno
fstpl
popf
jbe
loopne
push
mov
mov
lcall
lret
es
push
arpl
scas
and
and
sarl
subb
repnz
loop
pushf
int3
push
les
ljmp
push
pop
es
sbb
mov
lret
push
daa
movl
and
loope
lret
stos
ljmp
sub
dec
and
shr
push
dec
xchg
xor
or
adc
push
repnz
cmpsl
test
xchg
loopne
fstpl
jmp
jnp
inc
xchg
sub
es
or
loop
addb
add
jno
push
cwtl
adc
cmpsb
jecxz
xchg
inc
cmp
loop,pn
iret
and
fnsave
add
push
loop
mov
punpckhbw
testb
inc
sbb
inc
dec
add
mov
out
pushw
jbe
sub
sahf
push
ret
loop,pn
out
sub
lock
sub
loopne
out
in
and
pop
mov
sub
jne
add
mov
dec
mov
lock
push
inc
out
lds
mov
ret
push
adc
neg
lcall
into
ljmp
jo
scas
out
add
je
cwtl
mov
les
sbb
jmp
iret
sbb
ret
es
cmpsb
aas
push
movsl
mov
fdivs
xchg
mov
and
in
inc
inc
jmp
fcmovnbe
inc
add
repnz
add
pop
add
cmp
sbb
fcompl
xchg
and
fucom
cmp
shll
movsb
insb
pop
inc
sub
cmp
ja
ds
xlat
push
fsubp
mov
mov
or
std
push
bound
cmp
inc
add
icebp
pop
mov
mov
sub
xchg
outsl
into
sahf
and
xor
mov
dec
out
les
insl
lds
out
cwtl
lods
lock
cmp
bound
jecxz
and
nop
inc
daa
mov
in
idivb
fisubl
daa
cmp
mov
dec
sub
syscall
and
lret
or
test
sbb
cmova
cmp
ljmp
fxch
push
adc
mov
rcrl
and
loop
loope
je
pusha
repz
aas
push
mov
ret
mov
pop
insb
xorl
cmpsb
aas
mov
es
rol
int3
inc
add
and
add
rol
mov
and
dec
push
out
and
push
push
sub
jno
sahf
das
fistpl
cmc
xor
faddl
and
out
cmp
inc
ret
stc
stos
cld
xchg
pop
mov
mov
pop
push
mov
cmpsb
dec
addb
jae
sub
movb
and
sub
or
subl
ja
lea
out
add
cwtl
mov
mov
inc
sub
and
push
cmp
movsl
out
adc
enter
xchg
gs
inc
and
fdivs
cwtl
push
xchg
inc
popf
and
ret
mov
xchg
sub
shll
cmp
push
rcrb
and
subl
cmp
bound
add
mov
mov
dec
xlat
repnz
enter
loope
in
push
mov
fsincos
fs
add
push
xchg
sub
mov
mov
outsl
loope
test
orl
cmp
and
xor
xchg
mov
test
sub
cmp
fcmovnu
or
pop
outsl
mov
pop
imulb
dec
add
pop
flds
loope
call
xchg
loopne
lret
sub
sarb
sub
negb
ljmp
jns
push
sbb
xchg
aad
jns
leave
sbb
push
fcmove
shl
lds
or
out
test
cmp
pop
pop
add
dec
scas
pop
lds
lock
lock
cmp
loop
push
sbbl
and
roll
imul
mov
aam
xchg
popa
mov
lods
pop
adc
cwtl
adc
jbe
cmp
sti
mov
out
jle
icebp
xor
push
out
sbbb
test
stos
negl
push
sub
sarb
fsubs
inc
arpl
js
fmuls
inc
jg
cmp
popa
cwtl
andb
pusha
xchg
cmp
xchg
sbb
outsl
pop
dec
and
pop
dec
in
adc
into
lea
xor
ret
jbe
dec
sbb
bound
mov
fistps
sub
pop
pop
aas
jmp
cwtl
jg
popa
test
lcall
scas
cmp
fbstp
add
and
dec
xchg
cwtl
enter
out
mov
wrmsr
sbb
inc
and
add
fistl
pop
rcrb
lcall
cwtl
pop
shrb
lcall
pop
dec
pop
cmp
outsl
or
jns
ret
mov
enter
nop
xor
aam
inc
mov
mov
fildl
loop
dec
ds
sti
push
xchg
pop
in
pusha
push
sti
loopne
mov
inc
gs
dec
sub
fsincos
les
lahf
sbb
push
cwtl
mov
aam
cmc
pop
dec
cwtl
jl
pop
popa
movsb
addr16
jns
push
jns
aam
rcrb
dec
adc
sbb
out
rcrb
stos
out
xor
cmp
lea
add
leave
in
cmp
dec
lret
pop
mov
pop
and
ffree
dec
cld
inc
pop
push
push
mov
jae
lcall
add
jnp
bound
outsb
in
pop
lcall
mov
addr16
xor
inc
aad
repz
jnp
adc
jle
cmc
sarb
cmp
xchg
fs
cwtl
push
lock
lcall
mov
dec
aad
cwtl
xlat
cwtl
mov
popa
or
pop
dec
cwtl
push
jbe
or
cltd
xchg
adcb
xchg
cmp
inc
fwait
push
addb
xor
call
popa
and
push
std
xchg
pop
inc
testl
out
pop
ds
das
inc
in
cmp
pop
xorb
and
inc
cwtl
mov
popa
push
pop
sbb
cwtl
sarl
dec
mov
arpl
into
xchg
cs
push
add
stos
add
jl
sbb
aam
add
and
js
cwtl
rcrb
mov
push
mov
or
dec
xlat
push
and
orb
cwtl
nop
and
ret
xchg
enter
mov
inc
popw
mov
sbb
push
inc
loop
add
inc
and
dec
cwtl
inc
incl
sbb
call
call
mov
cmp
popa
add
pop
cs
outsb
inc
add
cld
es
or
es
leave
inc
loop
loope
in
les
cmpb
or
in
xchg
dec
fsts
in
pushf
outsb
es
test
into
lds
arpl
aam
cwtl
roll
add
ds
sti
and
add
push
inc
mov
fadds
mov
fsubl
push
movntq
addb
push
nop
or
imul
and
mov
hlt
das
scas
fldenv
or
sbb
out
andl
jp
sbb
pop
aas
mov
cwtl
ret
sbb
pop
dec
es
add
jg
stos
mov
xor
leave
push
lahf
cld
cmp
inc
jle
inc
out
mov
sbb
pop
inc
add
hlt
into
movsb
pop
push
decb
fsubl
dec
mov
add
jecxz
outsl
mov
sti
vpshab
test
adc
sub
movsl
adc
dec
pop
jge
and
out
incl
adc
cmpsb
imul
mov
hlt
ret
lods
xlat
add
jg
dec
cld
add
push
int3
in
mov
lcall
adc
stc
dec
fistpll
jp
movsl
data16
pop
dec
inc
mov
cwtl
dec
dec
and
shl
bound
xor
test
cmpsb
jg
mov
jg
cltd
pop
es
xchg
lds
test
xchg
mov
xor
push
add
mov
in
data16
inc
bound
das
and
pop
movsb
fisubs
sbb
sub
test
arpl
xor
lcall
sub
es
xchg
iret
out
movsb
add
cwtl
fsubrp
stc
int3
cwtl
push
pusha
je
mov
xor
push
pop
ds
pop
xchg
mov
mov
out
popa
inc
adc
add
loop
data16
out
dec
add
xchg
into
hlt
mov
xchg
repz
rcrl
xchg
test
arpl
emms
lcall
add
out
loop
add
test
out
cwtl
cmp
and
rol
jecxz
and
pop
mov
inc
xchg
sarl
out
pusha
xor
lds
push
aaa
dec
mov
add
es
or
cmpsl
mov
lret
cmpsl
ljmp
enter
dec
mov
mov
loopne
xchg
sti
jne
inc
scas
mov
out
jmp
int
jnp
sbb
mov
mov
dec
test
pop
ret
push
loopne
in
clc
ljmp
lods
jns
pop
out
mov
pop
int3
inc
fldenv
ja
mov
cmp
xor
fldt
xchg
mov
scas
in
add
out
clc
mov
cmpsb
cli
mov
pusha
xchg
es
dec
test
scas
sub
push
rorb
aaa
int
xlat
sub
js
inc
outsb
inc
pop
ret
movsb
loope
call
sbb
lods
loope
inc
in
mov
incb
add
add
pop
xchg
out
jne
js
inc
lcall
out
mov
js
out
add
mov
addr16
mov
aas
lcall
std
nop
adc
iret
lret
xchg
and
enter
jmp
and
or
xchg
jo
test
fcmovnbe
rorb
addl
iret
sbb
loope
xor
or
lds
push
jmp
lret
fsubrs
sbb
jnp
popf
inc
jae
mov
or
add
inc
dec
pop
push
or
dec
gs
in
imul
mov
pop
test
pop
add
jge
idivb
js
clc
and
repz
insb
cwtl
frstor
mov
add
mov
lahf
and
add
es
and
cmp
push
insw
sti
jle
sbb
cmpsb
ficoml
and
push
xchg
xlat
mov
xchg
mov
pop
pop
sti
mov
push
into
mov
mov
mov
inc
fs
addl
pop
inc
inc
xchg
mov
shlb
add
mov
pop
ljmp
lcall
iret
jge
lds
xlat
iret
movsb
inc
xor
ja
sub
lret
fwait
mov
shrb
sub
ja
scas
add
jb
inc
ss
mov
xor
sub
ret
fcoml
mov
dec
movsb
pop
jb
xchg
xlat
loope
pop
xchg
sbb
aaa
stc
cmp
jge
addr16
mov
movsl
popa
rorb
mov
inc
subl
xchg
fsubr
mov
jecxz
out
sub
ret
repnz
icebp
addr16
iret
jge
or
je
fisttpl
xor
int
pop
insb
movsl
clc
fisttpl
lods
mov
aaa
cmpsb
sbb
pop
mov
sbbb
clc
sub
and
not
rcrl
subl
and
mov
arpl
pop
or
or
add
pop
popf
xchg
es
sbb
cmp
pop
pop
orb
jle
xor
jl
addl
and
testl
mov
dec
test
fdivr
addr16
mov
mov
pop
push
jo
mov
int
cmp
fwait
jecxz
jno
jle
imul
jae
inc
repz
pop
cmp
sub
sbb
cmp
cmp
inc
push
push
or
fsts
js
icebp
sarl
mov
fucomi
loopne
pusha
mov
push
cld
pop
insb
aas
jp
cmp
push
jns
xchg
mov
scas
mov
outsb
test
push
testb
das
aam
xlat
fwait
aam
aam
aam
mov
fcompl
mov
cs
push
popa
push
in
push
cmpsb
jg
lcall
jne
rcrl
cmp
cmp
xor
inc
add
cmp
fdivs
pop
out
js
dec
or
xchg
out
addr16
inc
or
cmp
popa
sub
fwait
inc
scas
lock
mov
or
cmp
clc
loopne
pop
cmp
cmp
ret
lret
dec
daa
inc
lcall
xchg
sub
clc
xor
sbb
dec
aam
jo
imul
aaa
and
pop
arpl
clc
and
call
lahf
sub
fwait
das
and
cmp
fiadds
ret
and
jmp
outsb
inc
xchg
mov
jg
out
and
inc
add
cltd
mov
loope
mov
mov
in
or
add
into
or
xor
andl
adc
mov
push
sbb
test
rcrb
mov
loopne
inc
inc
inc
test
fmull
sub
sbbl
test
mov
dec
xchg
addr16
pop
aad
pop
pop
outsb
jg
ja
mov
jmp
lea
mov
dec
sbb
movsl
dec
mov
sub
mov
insb
cmp
js
xor
push
jns
mov
add
xchg
rcll
cmc
cld
dec
add
sbb
popa
ja
cmp
pop
cmc
inc
mov
fidivs
test
inc
jle
shrl
xchg
cwtl
cmp
xchg
out
mov
test
mov
sub
lds
aad
mov
data16
mov
push
data16
movsl
fdiv
fbld
divl
aaa
push
data16
inc
and
mov
sub
pop
out
iret
jnp
addr16
mov
int
sbbl
sbb
push
fsubl
movsb
sub
add
xor
or
icebp
mov
loopne
out
movsb
addr16
cwtl
xchg
or
sbb
mov
sbb
test
fs
mov
mov
fldcw
fbld
sub
int
jb
mov
loope
jmp
loopne
aaa
addr16
int
mov
sti
push
loop
push
sub
gs
bound
jb
ret
sub
sub
add
inc
loopne
and
pop
jbe
movl
mov
mov
lcall
adc
sahf
push
cwtl
push
jp
cmp
cmp
jle
sbb
and
xlat
push
test
mov
out
test
dec
enter
call
and
pusha
mov
cmp
mov
jmp
out
mov
lcall
mov
int
movsl
dec
cmp
sbb
fmull
ret
addr16
jbe
loopne
xchg
lods
or
loopne
or
movsl
pop
push
shrl
movsl
xor
xchg
nop
aam
dec
mov
fadds
andl
sub
loopne
fwait
push
or
cwtl
xchg
push
dec
sub
lcall
inc
ret
xchg
inc
inc
pushf
sbb
mov
into
add
xchg
sub
sub
cmp
mov
mov
sbb
jbe
dec
mov
lcall
js
mov
sbb
xor
cmp
jnp
popa
pusha
cltd
data16
mov
out
sub
jmp
icebp
pop
icebp
lcall
mov
mov
mov
cwtl
cmp
jp
stos
addr16
mov
pushf
add
addr16
popa
xor
pop
ljmp
pop
xor
inc
jl
pop
or
pop
addr16
insb
popf
inc
das
sbb
loop
rclb
in
sbb
push
dec
mov
add
loope
test
shl
dec
test
inc
test
mov
mov
into
mov
add
repnz
ret
lock
push
lods
xor
jae
ss
sub
add
rcl
pop
scas
pop
inc
loope
inc
cmp
shll
xchg
mov
inc
xchg
mov
bound
sbbl
push
inc
leave
je
pushf
mov
sbb
push
jl
xor
mov
repz
jl
add
jl
mull
add
push
xchg
scas
test
les
ljmp
neg
out
cmpsb
jg
loopne
std
and
cs
jae
push
scas
push
and
loopne
jg
jbe
fwait
and
pop
cli
mov
inc
mov
and
mov
sahf
xchg
and
repz
stos
jl
fldenv
into
iret
xchg
sbb
rcrl
aaa
notb
and
mov
incb
push
adc
and
mov
add
insb
test
int
es
fst
push
daa
xor
and
push
roll
xchg
add
push
dec
pop
call
hlt
into
divb
into
mov
mov
scas
and
data16
call
mov
sub
loope
cbtw
addr16
cmpsb
inc
mov
dec
mov
call
xchg
pop
imul
push
out
arpl
pop
xchg
push
mov
sub
les
insb
push
push
data16
adc
stos
jecxz
or
and
das
in
and
push
xchg
add
dec
popa
test
ljmp
enter
push
lock
into
movsl
cs
in
call
xor
test
ds
sub
adc
data16
repnz
data16
gs
and
add
add
call
movsl
out
in
cmpsl
testb
arpl
movsl
cs
xchg
out
out
xor
cltd
pop
and
fstl
xor
out
repnz
pop
hlt
scas
loop
test
lods
movb
xor
into
pop
jo
aam
movsl
mov
sbb
sbb
out
push
xor
dec
loope
lea
test
out
cmp
fcomps
ss
mov
imul
and
push
jge
js
fisttps
test
ret
push
popf
sarl
xlat
lock
mov
xchg
test
popf
xchg
adc
or
mov
int3
pop
push
mov
dec
or
xor
gs
out
pop
or
mulb
or
inc
push
lret
fs
add
scas
sub
and
loop
jecxz
and
out
ret
adc
mov
sbb
ds
add
push
sub
and
dec
ret
test
dec
mov
sub
xchg
out
test
popf
out
scas
mov
xchg
aam
bt
adc
sub
xchg
jecxz
adc
aam
inc
and
testb
lcall
repz
lret
xchg
dec
bound
xor
xchg
out
jmp
and
mov
sub
xor
movsl
push
js
fdiv
lcall
aad
push
data16
data16
mov
sub
inc
call
cwtl
pop
test
test
dec
insb
mov
xchg
divb
push
divb
imul
and
pop
nop
bound
xchg
call
orb
and
cmpsl
mov
dec
insl
stos
scas
and
mov
sub
sub
adc
shrb
test
scas
movsb
call
mov
popf
mov
inc
test
mulb
sub
pop
push
repz
inc
shll
push
jnp
adc
mov
jecxz
push
into
ret
and
cmpsl
fisubrs
jae
pop
ds
movsl
lret
imul
test
mov
or
outsb
shr
and
xor
sub
jne
cmp
or
xor
add
addr16
std
mov
insl
sbb
ljmp
mov
sbb
mov
sahf
js
aam
into
ljmp
aam
mov
cli
inc
stos
cmc
iretw
inc
or
push
cmp
adc
stos
or
shlb
lock
xchg
shlb
int
out
out
push
iret
inc
daa
or
sub
add
shlb
adcb
inc
sub
retw
mull
out
ja
cwtl
imul
in
xor
and
scas
lds
pushw
fs
inc
push
gs
or
and
incb
in
out
scas
out
or
adc
and
out
out
test
adc
daa
xchg
lea
and
fnstenv
push
pop
jno
xor
unpcklpd
daa
jge
mov
jnp
out
push
push
sub
and
imull
pop
sbb
pop
out
jb
jne
cmpsb
xchg
fisubs
or
mov
xor
insl
loope
idiv
loope
xor
outsb
fs
insl
mov
or
arpl
clc
in
dec
and
or
sbb
repnz
sub
inc
call
mov
mov
out
mov
addr16
fisubrs
push
xchg
add
sti
gs
mov
out
into
orb
add
push
test
cmp
inc
adc
sar
into
add
mov
in
movsl
fldenv
bound
and
leave
addr16
mov
sahf
xchg
xor
pop
xor
pop
xchg
out
pop
std
incb
and
and
push
call
movb
daa
jle
push
ss
mov
xor
lods
movsl
call
sub
call
call
call
data16
sbb
sti
das
cwtl
dec
les
je
sub
sub
fs
sbb
inc
scas
or
adc
sub
jno
sbb
leave
movsb
shlb
aam
mov
js
sub
rcl
mov
ljmp
ficoms
jo
xchg
cli
lret
aad
testl
lea
ljmp
mov
and
mov
divb
mov
mov
into
movsl
out
data16
daa
sub
mov
add
inc
sub
arpl
outsl
fs
arpl
jb
loop
add
out
lret
shlb
adc
push
mov
pop
neg
and
cmp
mov
mov
and
push
cmpsl
fbstp
pusha
shlb
and
mov
mov
int3
sub
sub
movsl
stc
xchg
out
je
sub
negb
or
jbe
in
xchg
mov
xchg
cmc
repnz
jb
mov
rorl
cwtl
std
loopne
cmpsb
inc
mov
into
and
push
mov
ljmp
test
and
dec
test
sbb
adc
push
mov
mov
dec
test
jg
mov
les
and
cmpsb
push
sub
dec
push
out
lods
shrb
push
scas
push
mov
into
and
adc
iret
add
std
xchg
and
stos
add
push
and
nop
bound
jbe
and
add
jecxz
leave
stos
out
into
mov
adc
sub
jb
daa
movsl
into
call
retw
add
bound
lds
sub
sbb
push
pop
lock
xchg
data16
sub
mov
repnz
add
push
out
jne
and
ret
xor
insl
imul
call
push
sbb
push
mov
shll
pop
movsb
stos
xchg
data16
shl
movsl
xchg
out
mov
and
lret
sub
jbe
pop
outsl
addr16
aaa
sbb
mov
in
notb
jmp
add
popf
loope
mov
sub
add
call
and
shlb
into
loope
ljmp
loop
xchg
outsl
adcl
rcrb
add
mov
bound
call
mov
loope
insb
lods
and
lock
into
test
jle
mov
out
pop
sub
fs
lret
out
insl
stos
dec
repz
loope
shll
and
dec
mov
mov
jge
call
push
out
xchg
inc
xor
pop
shll
movsl
push
add
call
xor
fstl
inc
aad
fisubrs
std
push
push
jle
and
insb
lret
es
inc
push
sub
icebp
test
insb
xor
popf
or
gs
lds
sti
adc
cltd
in
shrl
int3
xor
xor
inc
testl
jne
push
sub
mov
bound
outsb
cmpsb
mov
xchg
inc
inc
nop
data16
push
decb
in
jge
popf
mov
arpl
add
lods
mov
push
cltd
test
mov
das
add
sub
out
mov
inc
aaa
sub
or
jnp
push
addr16
test
dec
ret
mov
xchg
outsl
mov
and
or
arpl
cmp
jl
js
add
andl
inc
in
xchg
enter
in
add
movsl
loop
nop
bound
xchg
in
sahf
call
sub
sub
mull
xor
sbb
mov
jno
lahf
push
data16
popf
fmuls
jge
dec
or
dec
call
cs
test
mov
rorl
push
test
xor
inc
xor
adc
loop
mulb
adc
test
dec
gs
mov
xlat
push
dec
add
lea
inc
bsf
test
jo
clc
or
imul
sbb
test
lods
inc
movb
add
add
imul
sub
leave
mov
pop
pop
mov
ja
rcll
cmpsb
inc
arpl
cmp
test
sub
int3
gs
xchg
pop
or
ds
cmpl
push
add
bound
movsl
cmpsb
out
sub
and
rorb
js
push
std
int
imul
sub
enter
scas
sub
std
data16
sbb
stc
loope
xor
negb
and
mov
cmp
sub
sbb
xor
add
enter
loopnew
mov
js
mov
dec
cmp
mov
jbe
enter
xor
test
addr16
dec
dec
rcrl
add
imul
stos
inc
clc
scas
movsl
fmuls
repnz
call
cs
xor
outsl
sub
nop
test
inc
mov
jns
sbbl
lret
push
insl
movsl
dec
xor
dec
dec
add
data16
aaa
pop
movsl
imul
dec
mov
insl
adc
cmp
cmp
mov
test
cs
sub
pop
test
aaa
loope
cmp
sub
sub
lret
scas
sub
lds
sbb
push
lods
add
addr16
or
dec
lea
or
and
inc
popa
and
and
dec
into
jbe
jl
cmp
mov
mov
cli
out
or
pop
lret
loope
sbb
dec
aaa
movsl
push
out
push
push
test
jp
je
es
mov
mov
out
push
addr16
testl
mov
mov
cmpsl
pop
push
out
jbe
push
mov
dec
mov
test
shrb
ja
xor
int3
daa
fsubrs
and
ret
xchg
sbb
xchg
das
and
es
mov
mov
mov
call
das
movsl
or
cmpsb
and
pop
dec
call
int3
dec
lds
mov
or
shlb
mov
xchg
sbb
int
mov
mov
sub
lods
and
dec
sbbl
das
sub
in
leave
ret
inc
imul
and
test
adc
gs
xor
fwait
push
dec
pop
es
add
dec
test
scas
ret
loop
or
mov
das
inc
inc
mov
inc
shll
sub
mov
push
nop
bound
out
imul
scas
mov
adc
adc
and
adc
mov
push
call
fiaddl
je
cmp
bnd
mov
mov
popf
jae
es
push
pop
pop
ror
shll
push
add
int3
dec
mov
push
mov
dec
scas
inc
cmc
push
test
iret
enter
ljmp
cwtl
sbb
lret
cmp
sub
out
jmp
dec
mov
or
lahf
adc
mov
add
jae
sub
mov
sarl
mov
je
dec
mov
mov
mov
inc
ss
mov
es
xchg
push
insl
dec
andb
insb
mov
ret
test
pop
test
ret
mov
into
sub
outsb
in
mov
or
jo
rclb
adc
es
or
cmp
popl
es
test
iret
mov
lods
and
test
fsubrs
into
push
add
add
cmp
and
sub
pushf
aad
sub
fsubs
and
std
popa
pusha
cmc
and
push
pop
jmp
push
and
add
shll
cmpsl
jb
mov
sbb
sbbl
lcall
inc
ja
and
inc
jge
or
pop
loope
pop
inc
sbb
jl
mov
or
ja
mov
pop
cmp
sbb
aas
jle
push
mov
arpl
push
mov
sub
test
pop
stos
pop
pop
inc
xor
cmp
pop
fdivl
and
xor
pop
pop
sbb
push
js
pushf
out
cmp
ljmp
fdivrl
push
das
incl
clc
jmp
mov
jno
dec
out
sbb
adc
out
or
mov
adc
leave
cmpsl
sbb
sbb
pop
fcoml
dec
cmp
xchg
iret
or
push
movsl
cmp
xor
mov
mov
and
divb
insb
push
lds
aaa
data16
cmp
add
sub
repnz
mov
push
outsl
inc
or
mov
xor
shrl
add
nop
bound
and
inc
lahf
xchg
xchg
rcrb
cmp
pop
ret
call
fbstp
jg
push
and
movsb
sbb
and
inc
mov
aam
lahf
xchg
push
loopne
ret
pop
std
dec
xchg
sahf
pop
inc
pop
mov
inc
clc
and
clc
insl
or
pop
cld
mov
pop
fdivp
es
and
push
push
pop
sti
es
jno
xor
dec
enter
push
jmp
fwait
adc
cmp
es
in
lods
sbb
aas
pop
aam
xor
dec
push
mov
enter
jbe
in
int
pop
fdivrl
or
sbbl
iret
or
pop
mov
scas
es
inc
mov
lds
testb
cmp
je
ljmp
xlat
inc
cmp
jle
int3
je
shrl
mov
adc
inc
in
out
pop
setp
movsl
dec
mov
dec
into
in
cmove
add
ret
dec
outsb
cmpsb
mov
xchg
push
andl
sub
dec
and
adc
pop
jb
mov
test
fmulp
lahf
mov
push
and
inc
enter
aas
stos
loop
test
movsb
lcall
jg
pop
lahf
adc
xorb
adc
add
jne
int
out
hlt
in
push
repnz
out
jb
cltd
xor
add
cld
out
fstpt
jb
xchg
out
sbb
and
ja
mov
mov
lret
xchg
or
xchg
xchg
push
sbb
push
mov
sarl
jl
pop
ret
xor
xchg
mov
mov
es
dec
cmc
push
bound
push
jecxz
div
lds
outsb
sbb
out
mov
push
push
push
mulb
out
es
inc
jp
pop
cltd
fbstp
push
mov
shlb
push
and
dec
pop
mov
stc
test
enter
cmpsb
cmp
jo
imul
adc
xchg
or
int3
jecxz
jne
pop
imulb
imul
gs
nop
shlb
inc
mov
clc
adc
aaa
or
negb
or
bound
sbb
push
jb
inc
cltd
sbb
fcompl
pop
xchg
inc
cmp
jae
pop
fadds
jmp
xor
hlt
pop
pop
or
sbb
xor
mov
stos
mov
cmp
sbb
inc
pop
xchg
mov
fstps
jbe
push
xchg
push
sbb
pop
jg
sbb
addr16
mov
xor
cmpsb
daa
icebp
dec
test
push
scas
xchg
cs
sbb
mov
out
ja
lods
jno
in
out
sub
pop
iret
mov
dec
enter
inc
movsb
jp
sub
loopne
sbb
jbe
daa
sbb
mov
push
stos
push
push
push
cmc
dec
int3
add
mov
addr16
movsl
inc
mov
fdivp
gs
mov
lds
js
add
pop
sub
aaa
sub
mov
mov
jmp
shlb
es
int
mov
and
fdivrs
ss
sub
outsl
push
push
clc
mov
add
pop
imul
push
dec
stos
cltd
rolb
lods
inc
adc
bound
xchg
fiadds
mov
push
pushf
aas
push
sbb
xlat
or
inc
hlt
es
cmp
adc
call
test
out
xchg
scas
sub
sbb
mov
push
add
adc
shlb
es
sbb
es
mov
aam
mov
sub
mov
std
and
mov
and
lcall
mov
repz
push
push
pop
sti
popa
jl
sbb
mov
jne
test
mov
mov
dec
push
out
inc
fidivrs
outsl
pop
push
xor
cli
out
and
iret
pop
adc
mov
lods
mov
stos
add
and
ljmp
mov
dec
movsl
push
mov
es
and
dec
enter
aaa
ljmp
imull
popf
push
ss
aad
and
sbb
arpl
adc
inc
fdiv
or
and
aaa
gs
sub
stos
hlt
sub
adc
data16
lds
ljmp
js
dec
js
js
nop
bound
sbb
fadds
popa
aas
mov
mov
cmpsl
mov
movsl
jg
push
das
cmpsl
hlt
ret
ret
dec
pop
dec
cltd
cs
test
jno
lcall
xchg
inc
mov
push
movsb
pushl
in
jge
mov
adc
xchg
outsl
xchg
add
imul
aas
addb
pop
aaa
into
ficoms
movsb
jbe
filds
xchg
pop
dec
mov
clc
add
and
clc
mov
push
mov
xor
mov
sahf
shr
enter
jo
es
xchg
dec
enter
dec
adc
test
dec
inc
fsubs
add
movb
mov
pop
push
clc
lock
push
sbb
mov
sub
cli
and
pop
pop
das
pop
mov
xchg
mov
pop
jp
sbb
loop
inc
icebp
or
and
scas
push
and
mov
clc
insl
scas
test
xlat
xor
ja,pt
cmp
push
inc
xchg
jo
xor
gs
es
sub
testb
incb
inc
in
and
fsubl
and
sarb
fdivr
notl
sub
movsl
pop
daa
ja
inc
fcomp
es
outsb
cltd
jge
out
sbb
mov
sub
shrl
add
ss
fs
fisttpll
sti
pushf
xor
sbb
and
or
xchg
mov
xlat
adc
popa
pop
js
fstl
movsl
xor
adc
inc
xorb
sbb
mov
add
stc
cltd
sbb
loopne
add
push
inc
pop
popf
shrl
fdiv
es
push
test
cmpsl
push
mov
pop
push
mov
pop
sahf
xchg
fstl
jge
mov
mov
rolb
rclb
pop
inc
fidivrl
push
xchg
stos
hlt
mov
mov
clc
les
divb
enter
inc
pushf
cltd
jg
mov
repz
push
es
insb
xor
daa
mov
jmp
xor
enter
xor
mov
int3
cmpsl
jmp
jb
dec
push
xorl
lds
movb
notb
fisttps
and
xor
testb
mov
inc
test
sbb
pushfw
sbb
adc
and
insb
mov
add
in
hlt
cmpsb
lods
mov
ret
out
lcall
xor
sbb
inc
pop
test
cmpsl
adc
es
fimuls
icebp
test
pop
shrb
repnz
push
xchg
addl
and
and
loope
sbb
in
pusha
roll
and
xor
cmp
jmp
imull
divl
pop
pop
in
insb
arpl
push
leave
or
jae
es
lods
test
add
pop
adc
out
fldenv
aas
std
xchg
push
insb
xchg
sub
cmp
loope
jnp
test
aam
sbb
jmp
sbb
vcvtps2pd
cmp
fsubs
xor
cmpsl
adc
loope
es
in
or
stos
mov
gs
add
fadds
test
cmpsb
xlat
insl
call
dec
movsl
push
push
mov
cmpsb
add
mov
leave
sbb
and
xchg
scas
xchg
js
stos
and
mov
mov
and
pop
movsl
scas
ficompl
push
sub
and
inc
xor
insl
push
mov
inc
push
arpl
inc
add
fiaddl
arpl
push
into
cli
mov
aas
sbb
and
inc
inc
adc
mov
gs
icebp
add
xchg
popf
pusha
daa
sbbb
pop
mov
rcrl
mov
cwtl
push
jge
ret
inc
mov
inc
sbb
or
xchg
cmpsl
stos
es
stos
daa
jae
mov
push
mov
push
in
clc
xchg
or
cmp
jmp
addb
jmp
jle
inc
add
push
jo
int3
out
imul
push
xchg
jnp
sbb
call
shlb
js
push
sub
and
sbbl
add
test
je
and
scas
and
push
cltd
jb
jae
push
adc
cwtl
mov
rcl
inc
movsl
jno
test
ds
into
int3
out
aaa
mov
mov
stc
clc
lahf
pushf
mov
and
pop
aaa
push
lcall
das
ds
das
fisttps
mov
shrl
call
jle
lret
adc
mov
pop
add
insb
dec
inc
in
sbb
scas
cmp
out
mov
lret
cmpsl
lcall
ds
fiaddl
ss
xor
xchg
jecxz
add
les
xchg
popa
mov
insb
mov
mov
cmp
data16
add
mulb
mov
xchg
mov
mov
or
inc
and
fwait
addr16
xchg
inc
fisubrs
push
mov
sub
es
addr16
sub
jae
daa
mov
cmp
jmp
sbb
addr16
sbb
testb
pop
jne
sahf
ss
pop
int3
and
pop
sarl
mov
cmpb
loopne
popa
out
sbb
jae
cs
std
es
add
inc
rorl
es
sub
xor
inc
fmuls
push
lock
xchg
arpl
and
into
imul
xchg
jecxz
das
int3
mov
sbb
in
ret
ret
fmul
nop
daa
bound
push
call
into
sbb
sbb
icebp
test
lods
call
xor
sbb
stc
pop
sub
mov
scas
stos
pop
sub
dec
xor
popf
sub
pop
lods
pop
mov
lretw
fucomp
leave
stos
push
inc
lods
xchg
cmpsl
adc
xchg
sbb
aas
push
and
or
xor
add
xchg
push
jg
in
mov
das
mov
mov
in
inc
xlat
and
mov
xor
inc
mov
cmp
lret
mov
ja
xchg
mulb
insb
enter
fidivs
jge
xchg
pop
ds
sub
test
std
cmp
add
outsb
xor
es
jge
loope
loope
frstor
inc
shlb
rcl
mov
dec
popf
sbb
mov
je
std
es
jp
mov
mov
pop
push
and
cmp
inc
add
sbb
jmp
push
lods
inc
out
mov
push
dec
test
or
mov
dec
add
add
and
pop
mov
cmp
fstpt
mov
testb
dec
sub
bound
sbb
jb
scas
stc
fstl
int3
sub
movsl
pop
fistps
pop
mov
and
shll
sahf
mov
dec
mov
int3
sub
sahf
gs
push
mov
inc
mov
jns
arpl
push
inc
adc
jno
call
ret
movsl
xchg
into
das
jg
cs
rol
push
addr16
pop
dec
add
and
icebp
xorl
sub
jmp
fbstp
popa
call
and
fisttpll
andb
pop
push
loopne
add
movsl
imul
cmp
loop
mov
fsub
mov
fnsave
lret
int3
pop
insb
stos
fsubs
sbb
data16
cmc
es
ljmp
mov
push
and
ret
sbb
or
mov
and
jbe
and
xchg
bound
add
imul
out
or
mov
jle
xchg
shll
test
lods
movsl
clc
enter
es
inc
xchg
jecxz
out
mov
and
sub
ja
cmpsl
jmp
gs
nop
bound
sbb
adc
jmp
fucomip
mov
or
mov
loope
or
outsl
movsb
push
xchg
inc
pop
push
ret
mov
arpl
aad
push
call
jl
push
shrb
push
popf
sbb
add
xchg
fidivrs
mov
test
push
inc
lcall
and
loopne
sub
dec
and
and
mov
inc
adcb
mov
fists
out
push
fisttpll
test
dec
cmc
movsl
shl
scas
pop
loop
jne
jge
stos
call
popa
ds
push
push
sbb
lahf
mov
cmp
cltd
fimuls
sahf
dec
out
dec
mov
and
mov
andb
add
clc
loop
xchg
scas
scas
cld
call
fstps
rcr
fs
mov
rclb
hlt
jbe
inc
sbb
sub
inc
mov
cmp
scas
add
jmp
pop
outsl
or
xchg
das
lds
add
testl
ss
xchg
decb
ret
push
loope
pop
jb
add
in
bound
sbb
rcll
jecxz
xchg
inc
mov
clc
in
fdivr
pop
daa
inc
data16
daa
cmp
mov
jb
adc
push
test
fisubs
add
data16
ret
mov
clc
add
and
frstor
ret
mov
mov
std
iretw
data16
mov
and
inc
add
out
and
dec
sbb
xchg
fdivl
es
mov
lods
and
pop
es
rclb
lods
sub
push
xor
inc
mov
xchg
add
test
in
xor
sub
popf
sub
fsubs
call
leave
mov
sti
aaa
fs
sbb
les
addl
jno
cltd
aam
push
xor
mov
xchg
push
pop
je
test
sbb
call
addb
or
aaa
inc
cmpsb
ja
ret
out
gs
adc
inc
xchg
les
addl
cmpsb
mov
push
nop
and
cmp
int
sub
xchg
xchg
sbb
faddl
jbe
cmp
mov
bound
inc
mov
movsb
sahf
sbb
xchg
jecxz
mov
adc
push
sbb
cmp
mov
mov
in
push
loope
sbb
sbbb
push
and
pop
dec
xchg
icebp
sbb
adc
es
pop
xlat
cmpsl
mov
adc
inc
add
jle
test
or
cli
jae
enter
xchg
sbb
sbbb
dec
cmc
mov
sub
pop
fisubrs
jle
push
rorl
call
pop
out
mov
dec
xchg
bound
popa
pop
test
popf
ss
xor
pop
mov
dec
in
adc
cmp
jbe
test
push
sti
add
sub
lods
addr16
dec
pop
decb
sbb
xchg
jge
call
insl
inc
push
je
xchg
rcll
mov
xor
jmp
in
cmpsl
shlb
and
inc
add
fwait
and
lea
icebp
add
stos
call
jb
popa
jns
mov
call
sub
iret
pop
in
movsb
mov
test
call
ja
inc
rolb
mov
rol
adc
sub
xchg
hlt
xchg
sub
ret
mov
xchg
push
sar
and
and
adc
mov
movsl
loopne
add
gs
es
pop
dec
inc
pusha
lds
mov
xchg
cmp
iret
in
mov
push
aas
data16
push
dec
ss
in
push
push
mov
sub
dec
inc
std
dec
call
jg
rcrl
orl
sbb
jp
lea
pop
repz
xchg
or
sub
jno
pusha
js
inc
es
add
mov
fsubrp
mov
dec
out
xchg
dec
and
lods
inc
inc
mov
xchg
mov
push
push
in
inc
sub
jb
out
xchg
into
xchg
mov
enter
movsl
xor
jg
and
mov
lods
cmpsl
jle
mov
ds
test
jge
dec
mov
inc
add
cmpsb
pop
adc
pop
data16
cs
sbb
out
jae
movsl
cmp
add
and
ret
add
rcrl
inc
andl
push
xor
cmp
cmpsl
popa
sbb
adc
sub
inc
push
and
cmp
jno
adc
push
push
divl
mov
push
ret
inc
popf
aaa
out
mov
xchg
cwtl
push
repz
cmp
enter
mov
leave
add
or
test
mulb
dec
fwait
mov
dec
movsl
fcmove
lds
sbb
xor
pusha
aad
and
mov
inc
and
out
mov
enter
push
and
mov
loope
sbb
sbb
push
push
ja
popf
stos
add
push
dec
inc
mov
lea
aam
data16
in
fisubrs
adc
mov
xor
adc
mov
pop
fsubr
lcall
inc
pop
in
mov
enter
inc
pop
pop
call
and
cmp
pop
xor
aam
repz
in
and
std
movsl
sahf
loopne
lret
pop
adc
je
inc
jns
arpl
xchg
mov
jo
inc
lcall
pop
cmpsl
aad
or
pop
gs
test
add
mov
jae
push
mov
rcl
add
mov
test
aaa
std
aas
sarb
stos
xchg
pop
repnz
add
ja
inc
mov
data16
pop
pop
dec
and
push
data16
sub
sub
add
mov
gs
in
mov
std
mov
cwtl
gs
dec
ret
xor
inc
adc
test
lahf
xor
mov
idivb
daa
stos
mov
and
inc
inc
pop
adc
sub
fxch
testb
in
xchg
test
lods
gs
inc
iret
xchg
add
int
cmpsb
int3
scas
enter
es
aam
push
subb
out
out
jb
inc
add
mov
hlt
sub
sbb
stos
cmp
lock
lock
sub
stc
xchg
mov
pop
enter
cmp
fldl
ret
out
sub
sahf
mov
or
loope
adc
pop
push
dec
sbb
sub
sysenter
mov
je
xchg
dec
lret
mov
sub
fs
mov
insl
cli
adc
mov
hlt
shl
sbb
in
mov
pop
scas
xor
xor
xchg
call
and
or
add
jmp
push
and
xchg
int
sti
pop
fimuls
inc
mov
sbb
add
pop
push
and
negb
aam
or
add
push
testl
and
pop
add
ljmp
or
pop
out
gs
push
inc
add
mov
adc
adc
shrb
scas
mov
cmpsl
push
iret
add
xor
in
out
inc
sub
xchg
sub
fcoms
mov
sahf
ljmp
fimuls
cmp
cmp
test
nop
ficoms
jns
push
inc
jae
sub
outsl
sbb
faddp
and
popf
pop
sub
enter
mov
bound
jae
call
mov
xor
sub
sbb
stc
cmp
mov
out
fistps
push
repz
into
notl
and
cmpsl
lahf
shlb
mov
lret
pop
cmp
call
clc
loope
insb
into
adc
testb
push
std
dec
sbb
orl
jl
clc
test
or
sub
mov
das
xchg
in
mov
lret
pusha
mov
xor
sub
sub
lret
ds
les
mov
and
lret
hlt
and
push
jo
icebp
scas
sbb
add
pop
xchg
scas
cltd
repnz
ficompl
and
push
sbb
lahf
xchg
in
and
jne
in
bound
inc
ljmp
mov
mov
lods
cmp
arpl
insl
sub
lds
leave
test
outsb
jp
mov
cmc
inc
mov
xchg
notb
pop
xchg
cmp
fimuls
cmp
test
mov
mov
sub
pusha
ljmp
pop
jbe
in
stos
and
push
dec
andb
xor
xchg
out
xchg
loope
push
ret
out
add
push
cmp
xor
int
sub
in
fcoms
icebp
xchg
in
push
jb
add
fdivs
pop
call
dec
gs
or
fidivrs
imul
shll
popfw
mov
or
out
mov
adc
call
pushf
cli
jns,pn
cmp
mov
scas
sbb
ret
je
call
jmp
sti
push
in
push
outsb
popw
insb
popf
mov
sub
dec
pop
shll
xor
je
sub
inc
data16
cltd
fcomip
sub
adc
adc
and
xchg
int
aas
cld
bound
or
jg
inc
popa
xchg
imul
inc
xchg
into
out
pop
add
dec
daa
imulb
insl
rorb
movsl
negb
out
sti
repz
push
inc
mov
arpl
mov
in
xor
lods
movsl
in
fstpl
mov
dec
in
je
sbb
xchg
jg
sarl
imulw
mov
adc
movsb
rcrb
mov
div
movsb
or
dec
adc
sub
aam
add
call
and
rcll
fiadds
xchg
lea
and
cmp
lahf
and
data16
cmp
enter
test
xor
adc
jg
pop
into
scas
or
rorl
outsb
xor
dec
mov
add
xor
cwtl
sub
mov
inc
in
int3
call
movb
sub
mov
mov
or
fs
mov
sbb
and
push
adc
mov
jecxz
ror
mov
mov
sbb
xor
xor
shll
roll
adc
jne
push
sub
out
dec
mov
aam
cmpsb
bswap
and
insl
cmp
les
call
mov
mov
push
cmc
cwtl
data16
movsl
iret
pop
mov
push
sub
lret
out
nop
bound
push
and
in
insb
inc
test
bound
inc
mov
into
out
scas
mov
mov
adc
and
xor
mov
dec
mov
xchg
push
mov
shrb
or
shr
rcll
aas
xchg
sbb
dec
push
cs
push
xor
das
mov
out
cmpsb
or
mov
xchg
sub
test
add
roll
push
dec
mov
int3
ss
lret
divb
jg
nop
xchg
pusha
jl
shll
sub
in
mov
cmp
dec
aas
add
shl
mov
repnz
decb
xchg
or
and
js
lods
mov
out
push
push
add
ja
mov
or
out
test
testb
lock
out
out
scas
or
iret
scas
shll
movl
outsl
sbb
das
or
test
lret
add
ss
push
push
and
hlt
lods
not
imul
jge
cmp
xchg
dec
push
das
pop
adc
fwait
in
sti
aaa
dec
jle
xsha256
cmpsb
push
adc
lock
cmp
clc
push
loopne
add
lret
mov
dec
inc
out
or
das
pop
fs
je
xor
das
sub
pop
leave
push
ljmp
iret
push
out
inc
or
lods
data16
das
sub
inc
lcall
adc
adc
inc
fstl
pop
xchg
sub
xchg
gs
pop
jno
lods
movsl
jb
in
es
mov
in
insb
push
repnz
shll
std
das
ja
inc
jmp
xlat
adc
js
sbb
sub
data16
testb
in
lret
out
xor
cmpsb
subl
int
lahf
lods
push
adc
mov
das
adc
and
stos
xor
enter
rclb
in
les
rcrl
imul
fimuls
movsb
das
pusha
push
orb
fcoml
out
xchg
sub
das
cmp
sub
xchg
cwtl
daa
pop
pop
pop
pop
gs
ds
sub
test
lret
cmpsl
or
in
push
aaa
jmp
ret
pop
stos
and
data16
sub
xchg
inc
adc
or
inc
or
das
movsl
imulb
rclb
fwait
jo
movsl
xor
push
dec
lds
cli
inc
push
enter
and
push
rorl
cs
clc
das
sub
add
lret
mov
jne
inc
jmp
and
push
ret
dec
test
imul
pop
sti
das
popf
ljmp
inc
xchg
mov
lds
iret
imul
push
das
jns
repnz
aaa
es
pop
out
xor
daa
push
or
mov
call
mov
sbb
call
enter
jne
ss
or
xchg
push
into
test
lds
xlat
imul
es
mov
out
call
test
fisubs
outsl
loope
inc
add
aas
lds
rolb
lcall
and
sbb
sub
add
inc
and
inc
jmp
data16
adc
xchg
das
out
cs
in
cs
xchg
int3
lea
aad
gs
insl
movsl
leave
dec
push
das
jae
push
lret
lahf
push
add
mov
inc
mov
jae
sbb
push
jno
loopne
push
xchg
in
mov
shlb
adc
out
push
dec
test
dec
es
sbb
mov
mulb
sahf
jb
dec
push
call
jno
mov
aaa
es
mov
inc
sbb
dec
cwtl
push
or
outsl
sub
lods
movsl
xchg
adc
sub
fs
das
mov
cmpsl
dec
dec
test
movsl
and
imul
jle
cmp
cs
push
rolb
jne
sub
mov
push
mov
cs
mov
cmc
sub
dec
jne
imul
push
ror
inc
lea
adc
jb
rorb
hlt
negb
cwtl
outsl
inc
fsubr
stos
ss
xor
subl
mov
push
popa
rcl
sub
bound
fidivrs
cmpl
push
push
or
cmp
pop
fwait
pop
sarb
imul
push
push
pop
pop
jg
fisubrl
loopne
pop
fnstsw
leave
daa
sub
adc
es
adc
fistps
ficompl
xor
lock
fsubl
cmp
aaa
cs
jne
add
gs
cmp
dec
mov
pop
pop
es
mov
dec
daa
les
data16
es
jnp
ds
mov
es
in
nop
inc
cwtl
or
xchg
leave
add
hlt
call
in
or
clc
lret
adc
rcll
dec
xlat
repz
shll
adc
call
inc
jge
es
clc
add
cltd
jp
out
xchg
es
jno
dec
sbb
sbb
fmuls
jg
jge
fldenv
cli
push
push
inc
cmp
pop
pop
mov
lds
out
push
ja
sbb
cmpsb
call
pop
xchg
out
adc
push
insb
test
mulb
push
mov
pop
xor
nop
push
addr16
push
imul
stos
into
imulb
pop
mov
lods
mov
addr16
repz
mov
ljmp
push
push
fldenv
xlat
lods
test
inc
in
movsb
data16
push
mov
inc
cmc
scas
and
dec
ss
outsb
gs
imul
js
stos
das
jl
sbb
mov
pop
push
loope
adc
es
xchg
inc
pop
bound
out
iret
push
mov
adc
rcr
testb
sub
aaa
mov
je
cltd
enter
jns
fnsave
inc
lods
cmp
stos
mov
inc
push
dec
inc
pop
es
sub
jbe
call
inc
addb
ds
cmc
clc
and
xchg
lds
pop
mov
and
es
xor
mov
inc
dec
sbb
cmp
push
sbb
out
mov
push
xchg
sub
add
ret
and
jge
xchg
shlb
fstps
push
sub
sub
dec
jecxz
inc
fmull
in
mov
jg
xchg
mov
es
inc
xchg
mull
sbb
es
cli
fnsave
out
sahf
push
inc
stc
sbb
xor
xlat
mov
stos
xchg
inc
xor
fsubrs
aas
xorb
es
cmpsl
ds
jle
rcrl
test
out
enter
push
pop
mov
mov
xor
mov
insb
adc
packsswb
xor
jnp
push
mov
dec
sub
imul
push
sahf
jbe
je
push
mov
pop
sahf
add
mov
out
pusha
push
or
jne
and
push
sbb
xchg
psubsb
push
cli
pop
lcall
or
adc
imull
mov
lods
dec
push
das
jae
push
int
aam
les
mov
add
lahf
jle
das
push
jb
jno
pop
push
cmpsb
fcoms
mov
mov
mov
in
xor
mov
pushf
fcompl
clc
cs
pop
out
sub
xor
enter
push
rcrl
cli
stc
es
cmp
mov
mov
jo
add
push
ljmp
call
andb
mov
popf
jne
iret
sbb
push
xchg
sub
inc
shlb
push
stc
pushf
aaa
and
jo
xlat
stos
push
repnz
push
out
xchg
mov
and
mov
mov
mov
cmp
test
aas
subl
fstl
cli
lcall
xchg
add
lret
loop
mov
sbb
add
pop
hlt
adc
imul
mov
xor
insl
jle
lock
xor
xor
das
adc
cmpsl
xor
or
fstps
jge
add
push
outsl
sarl
stos
jno
dec
lahf
out
xchg
or
rorl
xchg
leave
sub
arpl
adc
cmpl
ja
inc
sbb
lds
push
jg
push
push
adc
out
pop
pop
scas
cmp
sahf
push
test
aaa
or
das
xchg
adc
adcb
mov
mov
push
inc
aaa
es
nop
test
lock
push
lds
das
cmp
mov
jg
fs
push
fisubl
mov
sbb
push
in
push
push
test
pop
loope
xchg
rcrl
adc
adc
cmp
xor
push
and
mov
aad
ficoms
shrl
pop
cltd
pop
jmp
lcall
mov
adc
jne
sbb
sbb
test
lods
sub
sub
xchg
jns
jle
push
xor
sbb
or
mov
fldenv
jg
cmp
adcb
push
adc
sub
mov
adc
and
mov
pop
hlt
cmc
shr
sub
dec
daa
jb
or
xchg
sub
jne
sub
dec
push
das
sbb
sbb
jg
data16
mov
adc
std
aaa
les
fstl
xor
push
rcrl
adc
dec
jge
add
es
and
or
scas
clc
stc
es
jne
fidivs
add
xor
aad
es
cwtl
je
cmpsl
fdivrp
scas
or
pop
mov
imul
xchg
lret
out
pop
or
insb
lods
loop
pop
xchg
cmp
cltd
inc
sub
jne
js
fistpl
xchg
sti
sbb
adcb
sub
jle
push
mov
jns
sahf
call
xchg
adc
push
xchg
addr16
hlt
push
das
pop
cwtl
arpl
cs
inc
fidivl
nop
aas
mov
cs
fmull
mov
test
popa
inc
pop
mull
shlb
in
daa
and
stos
aaa
js
xor
adc
loopne
cmp
pop
and
jmp
fmulp
dec
gs
addr16
xor
shrl
adc
call
das
and
cmpsb
mov
ds
arpl
inc
dec
insb
jns
fs
push
and
dec
inc
inc
xchg
mov
in
out
stos
sbb
add
sub
or
add
xlat
andl
dec
daa
std
push
mov
push
mov
push
xlat
jb
subl
sbb
and
push
cli
rorl
cmp
jmp
ficompl
insl
sbb
push
sahf
lret
lods
inc
fists
call
pusha
es
adc
inc
adc
les
or
ret
es
js
lahf
jno
pop
xor
loopne
es
loop
xor
inc
jbe,pt
popf
push
add
cmpsl
sbb
xor
sub
fisubrl
arpl
add
shll
cmc
add
scas
int3
test
or
xchg
cmp
lods
push
xor
jle
add
push
inc
mov
fs
stos
stos
das
idiv
mov
cmp
es
popf
xor
loopne
xlat
lds
das
cmp
xor
lods
jp
out
lcall
mov
aaa
pop
movsl
cmp
cli
push
arpl
hlt
sbbl
fbstp
call
and
jno
mov
sbb
iret
mov
das
insb
mov
mov
ror
add
arpl
cmpsl
fsubs
lret
aad
jge
jg
or
int3
dec
fsubrs
jle
movq
dec
ds
pop
std
sub
test
das
cmp
adc
shrl
dec
mov
cmp
cltd
shlb
add
push
into
popf
xor
cmp
cltd
rcrl
aaa
inc
adc
xchg
test
push
add
je
pop
xchg
push
movsl
mov
lahf
icebp
inc
adc
das
adc
roll
repz
stos
das
mov
sahf
mov
and
push
mov
out
xchg
cld
pusha
dec
ja
jbe
adc
shll
and
xor
popa
adc
int3
cmc
sub
mov
test
test
mov
repnz
js
mov
jg
adc
mov
dec
std
movsl
test
das
ljmp
das
sbb
bound
int3
enter
repz
xor
not
sub
push
jb
fs
iret
mov
adc
sti
imul
and
lds
xor
dec
aad
inc
imul
sub
adc
cltd
das
add
aaa
inc
mov
sub
jbe
repz
imul
insb
test
dec
movsl
repnz
mov
and
aad
mov
push
add
int
mov
cmp
pop
cmp
and
ss
mov
call
sub
push
mov
es
inc
ja
cmpsl
cmp
test
pusha
adc
outsl
xor
das
mov
pop
sbb
mov
daa
adc
mov
test
test
call
lret
xchg
cmp
cld
dec
jne
jnp
jno
pop
das
iret
xchg
xchg
adc
jae
and
ficoms
int3
xchg
es
mov
xchg
stos
xlat
lods
push
push
push
mov
jge
and
rcll
push
sub
xor
adc
jmp
mov
das
xchg
sbb
jle
inc
sahf
sbb
jl
mov
push
or
es
arpl
dec
daa
pop
mov
lret
mov
ljmp
scas
pop
and
shl
sub
out
xor
repz
cltd
es
xchg
scas
cmp
mov
ds
out
icebp
aas
cmp
push
int
das
sbb
fnsave
inc
shlb
lahf
pop
mov
xchg
add
mov
pop
sbb
ja
pusha
adc
outsl
ja
stc
out
sub
pop
das
gs
inc
push
sub
fidivs
jns
mov
jb
int3
fstps
dec
les
push
sbb
jg
das
sbb
shld
push
xchg
shll
es
sbb
inc
ds
adc
pop
fildll
not
jae
pop
das
mov
stc
cmp
add
push
mov
es
cmc
loopne
mov
loop
cld
cs
mov
adc
imul
cli
iret
adc
and
cmp
cmp
dec
push
push
fnsave
leave
call
add
cmp
add
sti
pop
pop
dec
negl
xor
adc
fistpll
das
jmp
outsb
push
es
adcb
xchg
les
mov
jge
adcl
mov
nop
fwait
pop
push
xor
das
sub
jae
adc
mov
call
bound
inc
loopne
xchg
add
adc
das
iret
sbb
jle
mov
test
roll
lods
pop
or
xor
adc
in
inc
repnz
aam
aas
xor
pop
push
pop
mov
pop
cmp
cli
add
adc
cmp
mov
adc
mov
data16
push
mov
and
adcb
pop
insb
add
add
mov
pop
pop
or
into
sub
daa
jo
popa
test
loop
imul
in
add
imul
test
filds
stos
cmp
ss
xor
sbb
jbe
gs
gs
les
push
xor
cmpsl
push
push
lods
in
sub
xchg
imull
ret
fldenv
adc
push
clc
mov
fisubrs
xor
out
push
sbb
xchg
insl
and
mov
xchg
fildl
add
lods
insb
outsb
and
dec
test
arpl
cwtl
sub
js
xchg
movsl
mov
imul
sub
mov
rorl
xchg
xor
lret
xchg
mov
shll
cltd
icebp
cmpsl
and
jno
pop
int
sbb
daa
and
in
cwtl
sbb
mov
leave
ret
js
fimull
scas
loopne
addr16
cwtl
sbb
pop
out
gs
test
in
push
fdivl
push
mov
lea
jne
bsf
ror
sar
mov
ror
btc
sub
pusha
lea
pusha
call
movl
pushf
pushf
lea
jmp
xchg
repnz
cwtl
xchg
test
dec
jmp
shl
subb
pop
cld
test
push
lahf
js
pop
add
inc
push
popf
pop
loope
in
jae
jns
cmp
xchg
rol
inc
lds
or
mov
aam
mov
insl
loop
dec
or
jmp
push
loop
js
pop
push
push
lea
je
cmc
cmc
jmp
inc
lea
pusha
pushl
mov
inc
inc
lea
mov
mov
xchg
or
mov
test
mov
pusha
movw
jmp
pop
mov
mov
cltd
dec
mov
fdivrs
push
lods
mov
or
jnp
xchg
fidivs
dec
push
xchg
call
fmull
xchg
jge
sub
cltd
addr16
out
jle
loope
sti
mov
push
jns
xor
addl
jbe
lea
scas
cld
cltd
or
mov
pop
mov
xor
cmp
pop
cwtl
cmp
imul
scas
mov
sub
aam
push
ror
or
out
push
shlb
addr16
push
in
push
jo
xor
mov
dec
inc
xor
in
xor
mov
and
popa
imul
pop
divl
mov
dec
jl
xor
jecxz
and
push
jecxz
sbb
in
daa
xor
stos
imul
adc
int3
js
in
fisttps
add
add
pusha
test
cmp
jmp
lea
call
push
lea
jne
cwtl
lea
lahf
mov
push
pusha
mov
pushf
lea
jmp
jge
push
bswap
bswap
mov
lea
pusha
inc
not
mov
lea
pusha
dec
pushf
pusha
mov
mov
mov
pushf
movl
lea
jne
inc
pushf
test
movl
not
bt
movb
clc
clc
add
pusha
pusha
rol
pushl
dec
pushf
push
jmp
call
stos
pushl
pushf
lea
jmp
pusha
call
add
inc
gs
outsl
fs
gs
imul
add
sbb
dec
mov
mov
cmp
enter
adc
xor
aas
or
inc
xchg
loop
jnp
movsb
and
into
scas
mov
jbe
sti
out
push
jg
pop
mov
dec
addb
pop
mov
sbb
xor
push
iret
sub
enter
sub
in
mov
outsb
outsb
jg
test
scas
cwtl
push
into
mov
mov
jmp
or
adc
sbb
fwait
arpl
inc
fsts
fildl
jg
jo
mov
pop
cmp
xchg
and
mov
mov
cmp
fxch
pop
mov
dec
mov
int3
js
pusha
jge
cmp
mov
dec
adc
or
lods
or
xor
dec
sub
cli
pop
pop
out
cld
adc
push
imul
push
sbb
insb
add
imul
and
sbb
jge
cmpsb
lret
xchg
int3
int
mov
push
inc
pop
and
shr
loopne
insl
lret
xchg
unpcklps
daa
adc
mov
jmp
sbb
lds
cmp
and
cmpsb
lret
xchg
cli
call
jge
sbb
cli
push
std
imul
mov
ret
incl
or
pop
cli
imul
aaa
inc
xchg
mov
xchg
sub
js
dec
int3
js
pushf
cltd
bnd
mov
mov
ja
and
mov
xlat
mov
jbe
cld
loopne
xchg
sbb
insl
rcrl
ja
mov
and
add
push
mov
pop
mov
ja
ja
mov
mov
ja
cmp
mov
shll
ja
xor
mov
adc
jae
inc
nop
ja
test
mov
sbb
mov
add
xor
mov
and
add
inc
jbe
rcr
xchg
mov
lret
push
inc
ja
sub
js
mov
mov
xlat
and
imul
ja
inc
adc
and
loop
dec
mov
mov
shll
mov
out
jbe
fnsave
mov
es
fbld
ja
cmp
mov
shll
js
adc
mov
jmp
ja
repz
mov
and
mov
ficoms
imul
mov
pop
mov
ja
inc
and
fucom
jnp
imul
mov
fbld
ja
scas
and
loop
add
mov
and
mov
push
emms
lret
arpl
mov
shll
ja
popa
es
shll
jbe
and
mov
mov
lds
xor
mov
mov
jo
imul
nop
mov
jmp
mov
ja
xchg
xor
divb
or
mov
jnp
push
enter
jmp
fidivl
push
sarl
jbe
mov
and
mov
icebp
fnsave
test
ja
aam
mov
cmp
mov
dec
inc
es
shll
js
sbb
mov
mov
cmp
in
xor
inc
mov
ja
in
movzwl
mov
or
int3
add
es
shll
jbe
dec
fbstp
inc
lds
jbe
push
fbstp
cmp
jbe
mov
mov
aaa
and
and
mov
dec
sbb
negl
shrb
cmpsl
or
jns
nop
jne
adc
out
xor
sti
jg
subb
out
add
enter
lea
int3
js
and
xor
lea
je
movzbw
add
rcl
stc
cmp
shrd
sub
pushf
shl
shr
dec
sbb
lea
shrd
mov
shr
jmp
lea
je
pusha
bt
clc
pushf
cmp
pusha
lea
jae
pushf
lea
je
cmp
test
cmc
cmp
call
push
pushf
lea
jbe
lea
movzbw
mov
cmp
sar
add
or
add
mov
mov
sub
jmp
ror
cmp
mov
jmp
mov
mov
movsbw
pushf
mov
pushl
pushf
movb
pushl
ret
jmp
add
dec
outsb
imul
inc
outsl
outsb
je
outsl
insb
jae
push
pushl
mov
call
jmp
jmp
push
mov
pushf
pushf
pushl
ret
bswap
mov
je
not
pop
call
mov
stc
cmc
neg
jmp
mov
movsbl
movzwl
call
add
add
lea
jns
pusha
movl
call
seto
mov
mov
mov
xchg
xchg
mov
pop
push
mov
jmp
bt
test
add
pushf
call
clc
test
jmp
jmp
push
not
pushf
pushf
jmp
mov
in
xchg
sbb
test
mov
clc
popa
lock
mov
stos
jmp
cmpsb
and
mov
sub
push
cmp
cmp
add
out
mov
push
cmp
push
scas
mov
sbb
push
adcb
sti
out
in
cli
mov
adc
std
sub
xlat
adc
sub
mov
je
push
push
jg
fmull
inc
aad
pop
sub
daa
movsb
mov
dec
xchg
inc
xchg
sub
js
ret
fimull
fs
jne
movzbw
mov
pusha
pushf
movb
lea
jmp
push
je
sahf
xor
dec
mov
xchg
test
cmp
cmp
popa
xor
mov
int3
adc
xchg
std
pop
or
sub
jne
mov
inc
jae
enter
sahf
shrl
jp
push
xchg
xor
ret
das
mov
rol
pop
push
sub
mov
or
nop
push
push
mov
cmp
out
outsb
out
push
test
dec
mov
adc
jno
sqrtps
test
add
add
pusha
pusha
pushf
cmp
lea
pusha
push
pushl
ret
setg
neg
test
mov
push
bt
cmpb
pusha
pusha
lea
jne
and
xor
lahf
lea
mov
add
add
test
mov
shr
mov
call
cmpb
movb
push
lea
jne
shld
rcr
sub
test
bsf
push
mov
cmc
setb
add
adc
rol
mov
pushf
mov
jmp
lea
je
pusha
pushf
call
jne
xor
shl
das
sub
xor
lea
mov
shl
add
sar
clc
clc
mov
stc
pusha
stc
test
test
mov
call
pushf
mov
push
pushl
ret
mov
loopne
cmpsl
fisttpl
dec
mov
jnp
xor
cld
in
and
imul
pop
mov
roll
lds
fwait
cmc
jg
mov
mov
mov
shll
scas
xor
aaa
test
test
and
bound
addb
sahf
sahf
shll
call
rcr
aam
imul
adc
stos
mov
xchg
push
fisubl
cmpsb
daa
loop
pushf
mov
rcrl
and
push
adc
js
jl
add
dec
cmp
xchg
sarl
pop
xor
js
fildl
adc
les
xchg
nop
jmp
xchg
dec
mov
mov
push
jle
sbb
sbb
or
or
cmp
mov
and
push
call
cmp
ljmp
test
pop
in
rcrl
jb
gs
stos
outsl
mov
pop
add
adc
rorl
insb
add
and
imul
in
cmp
fwait
daa
pop
add
adc
pop
lods
cmp
pop
sti
and
sbb
dec
leave
or
mov
in
push
xor
outsl
int3
js
mull
dec
pop
lock
jbe
mov
add
ficompl
out
or
adc
iret
stc
cli
repnz
lcall
es
and
xlat
mov
mov
popa
mov
je
or
mov
sbb
xor
js
mov
fdivr
jl
push
dec
mov
addr16
les
into
mov
or
pop
fisubs
ljmp
mov
enter
dec
cs
out
hlt
mov
mov
fadds
sbb
mov
xchg
fwait
xchg
mov
add
bound
mov
out
test
pop
and
xchg
mov
push
pushf
cmp
rcrb
mov
fcom
push
mov
push
pop
cmp
loopne
shlb
xchg
lret
je
popf
and
icebp
fisubrl
sarb
js
pop
push
xor
scas
jmp
repnz
add
ret
dec
mov
adc
test
rcll
pop
and
push
inc
mov
cs
xor
xchg
into
cmp
pop
test
in
dec
pushf
popf
cld
mov
push
mov
lahf
sbb
shlb
aaa
sbb
imul
fmull
jle
and
divb
rorb
sbb
sahf
jns
aam
mov
cmp
push
adc
lahf
sbb
loopne
cld
int3
js
dec
bound
jl
xor
mov
pop
call
mov
push
bound
jb
leave
pop
sbb
push
out
insl
clc
nop
adc
dec
mov
push
xchg
push
xchg
shll
js
jl
fwait
notl
mov
add
fs
push
cmp
dec
push
mov
inc
mov
pavgw
sub
aaa
stos
das
stc
lcall
jecxz
mov
stc
fnstenv
adc
mov
out
sbb
fst
sarb
cmp
popa
fstpt
mov
lock
xchg
pusha
inc
lock
sbb
jne
inc
gs
aas
int
and
pop
add
add
dec
mov
sbbl
arpl
aaa
repz
loope
sub
sti
rcrl
mov
mov
es
sbb
cmp
imul
pop
ljmp
dec
shl
mov
or
fs
ljmp
sti
mov
fisubrs
stos
cmp
mov
pop
push
xchg
nop
icebp
cmp
pop
fs
repnz
jb
aad
mov
int3
js
inc
pop
in
shr
push
add
add
pusha
call
pusha
movl
pushl
movl
pushf
pusha
push
pushf
lea
jmp
cwtl
dec
sub
cmp
imul
jae
idiv
fisubrl
push
fbld
xor
lods
jae
push
dec
xor
movl
jne
lcall
adc
mov
push
adcb
lahf
sbb
popa
out
inc
mov
sbb
addl
cmp
pop
jmp
outsb
es
sbb
xchg
test
jmp
xor
inc
dec
jecxz
in
das
mov
xchg
fwait
mov
mov
xor
inc
int3
js
xchg
xor
je
sbb
movzbw
bswap
mov
call
movl
pushl
mov
lea
jmp
popf
cpuid
nop
push
call
jmp
not
bswap
lea
mov
push
pusha
lea
jmp
pushl
popl
push
cmp
jmp
clc
add
jmp
call
mov
movw
call
add
cmc
test
movl
lea
jne
call
movsbw
mov
pushf
pushl
popl
bswap
lahf
not
push
not
movzbl
push
jmp
lea
ja
pushf
imul
test
add
movb
push
lea
jmp
mov
lea
je
test
bt
sub
cmc
clc
cmp
jmp
pusha
movl
pusha
movl
movl
lea
jmp
inc
cmc
mov
ror
mov
cmp
sub
movb
not
pushf
pushf
dec
test
cmp
pushl
pushf
lea
movsbw
mov
movb
jmp
adc
nop
dec
jge
xchg
xorl
cmovnp
push
add
bound
mov
out
push
out
inc
iret
add
mov
call
filds
mov
and
cs
push
jecxz
sub
mov
lahf
ja
int3
js
fcmovbe
xchg
pushf
lea
call
mov
bt
stc
stc
movw
add
mov
bt
jmp
pusha
pushl
movw
pushl
popl
push
pushf
pushf
push
pushl
ret
mov
pushf
pushf
movl
push
call
add
pushf
bt
rol
movb
dec
call
or
jo
pop
mov
adc
mov
imul
lods
mov
and
cmp
push
sahf
pop
xor
or
mov
shl
push
les
inc
nop
push
or
or
in
fcoml
ljmp
testb
stos
adc
aam
add
stos
mov
xor
push
inc
pushf
cli
add
inc
sti
mov
inc
and
mov
mov
test
xchg
xchg
mov
lahf
imul
dec
cwtl
sbb
mov
cltd
and
adc
sub
dec
cwtl
mov
outsl
ficompl
or
scas
imul
xchg
mov
jbe
shr
fimuls
cmp
inc
les
and
jb
sub
int
scas
aas
in
jnp
addl
cmp
addl
jl
hlt
test
mov
push
cli
push
lock
dec
xchg
je
mov
imul
add
fistpl
push
jl
mov
pushl
xchg
jge
pop
loopne
fs
mov
sub
or
jb,pn
jno
and
adc
aad
mov
fiadds
mov
sub
int3
js
in
mov
lea
push
call
cmc
push
sub
clc
clc
pusha
cmp
movl
lea
ja
clc
pusha
cmc
call
cmpb
call
bt
imul
stc
clc
pushf
add
pushf
mov
lea
jmp
call
xchg
das
gs
repz
ret
out
stos
mov
loopne
stc
pop
xchg
xchg
cli
insb
xchg
and
pop
xchg
push
pop
gs
sub
insl
sbb
mov
jmp
jno
mov
cmp
mov
mov
ret
cld
or
test
or
scas
call
push
jmp
das
out
ror
add
jmp
add
dec
adc
sbbl
mov
in
cmp
lods
xlat
icebp
mov
mov
push
push
outsb
xor
insl
sub
mov
fisttpl
test
xchg
pop
cmpsl
lcall
fwait
shrb
cmc
and
jecxz
or
push
adc
cmp
fstl
mov
jns
sbb
inc
pop
jge
and
xchg
mov
out
add
fmull
test
pop
sahf
aaa
dec
inc
sub
inc
repz
mov
or
gs
dec
jns
fstps
arpl
test
cmp
cmpb
int
jb
nop
jmp
xor
sub
xchg
adc
cld
sbb
mov
in
jle
xor
xchg
out
cmp
lahf
ljmp
and
cmp
add
movsb
jnp
call
cmpsb
fstpl
mov
mov
pop
popa
cwtl
push
roll
pop
or
push
hlt
ret
xchg
js
cmp
inc
mov
stc
jns
sub
out
xchg
sarb
imul
mov
loope
sarb
jecxz
aad
fs
ja
add
sar
pushf
add
sub
shrd
rcl
add
add
bts
neg
shld
mov
not
inc
dec
mov
call
lea
jbe
push
sub
clc
btc
mov
sub
pushf
not
test
sub
jo
mov
adc
cmp
call
pushf
call
pusha
lea
jmp
call
pushf
pushf
lea
jmp
setg
rcl
mov
stc
lea
jg
clc
cmc
repnz
push
movb
lea
jne
mov
call
inc
addr16
sti
add
jbe
fs
sbb
movsb
movsl
sbb
addb
sbb
push
cmp
cltd
xor
mov
adc
inc
scas
loope
cs
ds
mov
inc
cwtl
fidivrs
dec
notl
jmp
fnstcw
sbb
pop
jecxz
pusha
popa
daa
cli
hlt
sti
sahf
mov
jmp
fcomip
xor
inc
data16
mov
psubq
js
pushf
cltd
xchg
rclb
lret
jnp
jge
in
movsb
push
add
in
or
aam
push
fidivrl
js
pop
mov
cmpsl
out
movsl
stos
jg
or
push
dec
dec
cmp
xchg
not
das
push
dec
add
pop
outsb
les
inc
jb
xchg
imul
push
jle
repz
pop
add
clc
adcl
push
xchg
inc
aaa
cmp
sahf
jbe
mov
mov
imul
lock
and
xor
in
and
adc
dec
mov
outsl
inc
insl
dec
pop
push
shr
xchg
jecxz
push
es
xchg
jmp
aam
sbb
in
and
aaa
movsb
stc
inc
sub
add
jg
mov
mov
icebp
xchg
data16
xchg
xchg
xchg
clc
dec
pop
out
int3
int
jo
cld
enter
and
popa
push
leave
xchg
int3
js
mov
outsl
cwtl
dec
adc
daa
inc
push
les
jg
and
mov
movsb
adc
outsl
pop
aas
int
repz
inc
adc
jbe
shll
push
xor
aas
ret
push
cli
sti
fnstenv
in
lea
inc
sub
inc
mov
es
gs
sub
fwait
movb
call
cmovae
dec
jmp
push
xchg
mov
orb
xchg
mov
data16
js
ds
adc
lds
out
addl
shr
btc
mov
push
mov
neg
add
push
bswap
mov
pushl
pusha
jmp
pushf
xchg
mov
push
setp
pusha
mov
push
not
lea
lea
mov
jmp
add
stc
or
clc
shl
mov
movb
mov
stc
test
jmp
push
mov
inc
sub
adc
sbb
lahf
ljmp
mov
lods
enter
mov
daa
mov
loop
adc
and
cmpsl
mov
fstps
xchg
mulb
ror
push
or
aas
push
aaa
out
fs
mov
lcall
out
mov
pop
stos
mov
call
adc
pop
and
pop
int3
js
xor
cld
incl
add
cmc
cmc
cmp
or
pusha
jmp
push
push
lea
call
clc
push
stc
sub
lea
jp
push
lea
jne
jmp
adcb
cltd
pop
sub
jae
xor
adc
mov
push
lods
into
push
scas
testb
std
rcll
xchg
pop
gs
scas
rclb
sub
mov
mov
in
mov
mov
xchg
mov
and
movl
pusha
push
movl
pushl
pushf
pushf
pushf
lea
jmp
jno
inc
shlb
out
loope
jnp
stos
ret
xor
pop
and
inc
test
mov
cmp
add
gs
sub
jb
inc
xchg
jbe
pushf
in
pop
xchg
push
and
daa
push
fnclex
rcr
sbb
xor
dec
jl
xchg
getsec
lods
loopne
popf
mov
sub
jecxz
xchg
cmc
jae
mov
mov
mov
stc
lret
mov
adc
je
push
shl
adc
sar
mov
xlat
jb
jecxz
inc
fisubrl
js
lret
pusha
jmp
call
ds
and
data16
and
adc
ror
dec
push
sbb
jmp
cmp
sub
adc
data16
adc
push
out
xor
or
std
loope
inc
ficoms
add
ret
mov
in
insl
icebp
and
sti
lcall
js
push
pop
mov
pushf
pushl
ret
push
aas
mov
xor
sbb
or
or
inc
stos
inc
jecxz
dec
aaa
push
into
sbb
mov
iret
loope
xchg
int3
fdivrp
mov
xchg
int3
js
push
psrlw
push
jmp
mov
push
in
dec
mov
cwtl
xor
js
inc
pop
mov
push
cwtl
xchg
push
inc
pop
xor
punpckhwd
call
and
inc
inc
in
cmp
xor
jns
xchg
pushf
inc
lcall
sbb
int3
mov
outsl
dec
sahf
mov
xchg
lea
add
lock
js
mov
add
orl
shlb
and
lea
call
call
jmp
inc
dec
filds
pop
mov
mov
jbe
sub
mov
adc
ficompl
push
scas
add
dec
aad
ds
jns
xor
gs
inc
insb
push
aas
pop
outsl
outsb
jnp
orl
stc
lock
mov
inc
cmpsb
pop
es
lea
es
mov
orl
movsl
ret
sub
mov
rcl
test
movsb
inc
dec
sti
push
aaa
cs
enter
push
mov
push
mov
mov
inc
in
frstor
sub
lret
cs
jmp
jge
not
xchg
loop
jbe
je
jnp
jns
mov
test
pop
mov
addl
int
repz
std
pop
inc
jb
add
fbld
xor
push
jne
jbe
adc
dec
jnp
or
out
dec
cmp
cmp
imul
dec
dec
leave
pop
cs
dec
aas
or
jo
xchg
push
or
test
outsl
imul
sbbb
mov
dec
movsl
sub
mov
jo
adc
or
jmp
add
aaa
push
dec
fisttpl
lret
adc
or
jo
mov
test
adcb
rcrb
jmp
xchg
shr
jb
shl
scas
sahf
idivl
xchg
inc
adc
sub
or
dec
and
xor
inc
mov
fnstenv
and
pop
sbb
pop
push
inc
adc
mov
push
mov
repnz
ret
pop
int3
js
cmpsb
mov
and
je
push
pushf
pusha
lea
jmp
repz
dec
mov
mov
shl
icebp
inc
mov
and
fistpll
cmp
cmovno
fcoml
mov
cmp
push
mov
jl
jno
lret
sti
adc
add
out
push
xor
xchg
gs
sbb
mov
in
push
jle
sub
into
pop
adc
adc
test
stc
or
xchg
sbb
dec
mov
or
addr16
nop
adc
inc
repz
and
dec
out
cmpl
mov
out
ljmp
sar
cmp
fcmovne
cwtl
push
xchg
rolb
lcall
lret
jno
rcrb
dec
dec
jp
mov
cmp
mov
sbb
push
pop
pushf
in
lods
neg
cmc
xchg
mov
pop
dec
inc
leave
xor
cmpsb
adc
pusha
pop
xchg
sub
imul
xchg
push
pop
pop
cs
xchg
stc
cmp
repnz
mov
loope
pop
enter
push
dec
insl
lods
dec
in
stos
mov
inc
mov
mov
cmp
aam
insl
int3
js
jle
lds
shlb
lcall
imul
stos
mov
adc
cwtl
call
fprem
lea
or
test
jnp
imul
cmc
incl
xchg
pop
push
mov
and
inc
jg
adc
inc
pop
je
adc
pushf
aam
mov
jg
js
pop
push
or
inc
and
leave
pop
cld
jmp
pusha
call
stc
jno
push
cmpb
jmp
pop
data16
dec
mov
or
sbb
pusha
out
sub
daa
rcrb
mov
push
testl
sub
push
das
or
adc
and
cmpsb
outsb
in
aas
clc
sbb
dec
outsb
fimull
sbbb
test
ja
xchg
mov
out
stc
xlat
ja
aam
je
xchg
mov
inc
js
xchg
mov
lods
adc
add
test
rol
push
or
inc
stc
ja
or
fcomp
push
ss
mov
adc
repz
cwtl
repz
cmp
push
inc
inc
addr16
iret
mov
mov
lcall
pop
mov
lret
in
outsl
out
in
add
push
and
call
fcmovbe
in
test
sbb
ss
cli
xchg
inc
int3
jns
int3
loope
cli
jl
bound
jle
fdivl
lret
in
adc
cmpsb
ds
popf
daa
iret
addr16
jo,pt
div
xchg
into
into
cmpsl
dec
sub
add
xor
mov
push
cmpb
xor
sub
and
ja
pushf
cmc
sub
not
cmp
add
add
mov
not
mov
push
movb
pushf
pusha
lea
jmp
lea
add
not
shl
mov
not
stc
mov
pushf
bt
call
pushf
mov
call
add
add
or
add
add
ljmp
add
lret
add
add
mov
or
add
add
ret
add
add
add
orl
add
dec
or
mov
or
test
mov
add
lds
add
js
add
add
add
sbbb
decl
mov
movsbl
pusha
jmp
mov
xor
loop
jge
mov
adc
enter
add
stos
add
dec
popa
push
cltd
out
mov
adc
jns
std
mov
call
lea
ds
js
lea
pushl
popl
pushf
push
pushl
ret
call
push
push
mov
not
lods
call
pusha
lea
jae
bswap
adc
setno
mov
setle
sar
mov
shrd
lea
movsbw
mov
cmp
pushf
sub
jmp
lea
jae
call
add
add
orb
adc
or
sbb
or
mov
or
add
add
cmpsb
clc
test
test
cwtl
test
daa
sbb
cmp
enter
push
add
add
sahf
fsincos
add
in
iret
decl
xchg
pusha
stc
imul
mov
mov
pusha
add
movw
pushl
lea
jmp
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
lea
call
pushf
movb
pusha
push
lea
jne
bswap
movzbw
pushf
mov
push
mov
mov
lea
jmp
mov
call
pushl
inc
pusha
mov
mov
call
call
rcr
bnd
pop
and
ret
in
daa
xchg
pop
roll
or
fs
stos
xor
mov
cmp
xchg
cmp
daa
adc
xor
rcrb
or
lcall
push
lcall
loop
movsl
ss
mov
mov
dec
push
mov
xorl
int3
push
push
test
packuswb
movhps
sbb
js
stos
ret
mov
clc
pushf
bt
ror
jmp
call
lea
je
sets
lea
xchg
jmp
mov
dec
xchg
pop
ja
hlt
push
subl
shlb
cli
shll
lcall
sub
sub
dec
jmp
in
sti
hlt
das
mov
leave
fistpll
cmp
ficompl
add
insb
or
pop
into
add
js
push
dec
sub
xchg
cmc
clc
stc
call
push
pushf
movl
push
lea
je
push
movw
movl
push
push
pusha
mov
lea
jmp
pusha
call
inc
push
call
pusha
call
jmp
call
not
mov
movzbw
not
pop
movsbl
pop
mov
seto
setl
pop
pusha
push
call
dec
call
mov
sbbb
add
pop
mov
into
xor
dec
mov
fcoml
mov
cmp
lods
loope
jb
sub
jae
push
push
std
hlt
pop
pop
lea
or
pop
cs
cli
ljmp
xchg
sub
iret
push
jnp
inc
clc
pop
mov
int3
inc
adc
xor
sbb
mov
clc
jnp
or
adc
mov
cmp
sub
out
ret
dec
add
std
xchg
js
mov
jo
jl
cmp
std
icebp
int3
js
push
imul
enter
jp
mov
fmuls
jns
mov
jbe
adc
xchg
lea
cmpb
js
fcmovbe
orb
push
dec
add
std
popfw
call
call
inc
movsl
fs
imul
das
push
mov
jb
mov
stos
stos
loopne
lock
sbb
mov
fiaddl
mov
divb
fsubp
mov
out
fsubrl
push
rorl
fcmovu
icebp
push
mov
cmpsb
pop
xchg
adcl
ret
sub
and
inc
dec
sub
icebp
std
in
fwait
push
data16
add
add
js
push
dec
push
push
push
fldl
rcrb
mov
sbb
cmpsl
mov
push
insl
and
loopne
push
nop
xor
jle
sub
loop
imul
cmc
sub
xchg
push
jne
mov
mov
inc
loopne
dec
xor
aad
cmpsb
lock
jns
mov
imul
add
fs
push
frstor
daa
mov
and
mov
dec
idiv
inc
push
scas
addr16
add
cmp
cmp
push
cmpsl
test
inc
test
negb
movsb
push
jle
add
and
popf
arpl
test
popf
sub
inc
movsb
daa
stc
cli
cmpsb
out
lods
fsubrl
test
inc
scas
dec
and
inc
rcrl
mov
push
sbb
push
sub
es
repnz
xor
jns
and
stc
addr16
outsb
cmp
and
pop
xchg
sub
jl
gs
loope
sub
push
and
repz
and
cmp
pop
adc
push
inc
mov
mov
push
mov
adc
into
sahf
lcall
test
mov
stc
dec
adc
cli
and
mov
add
mov
cmc
dec
xchg
and
jp
negb
push
rol
xchg
lahf
or
stc
xchg
loopne
aas
mov
sbb
inc
divl
push
sub
push
sub
mov
mov
and
pop
cmpsb
stos
push
jne
iret
add
dec
jmp
cmpsb
loopne
adc
fldenv
ds
or
int
pop
add
pop
lret
fs
xchg
sbb
lret
cs
lcall
cmpsl
cli
jle
push
sbb
jl
idiv
sub
in
adc
mov
pop
es
out
ljmp
repz
test
fsubl
pusha
sub
lcall
sbb
xchg
xchg
and
stos
push
cs
negb
bound
pop
call
jns
dec
ja
stos
rorb
stc
jle
shll
or
jge
jl
pushf
xor
notb
add
pop
pop
daa
cmpsl
cmp
loopne
sbb
sbb
ficoms
and
stos
push
push
jnp
cltd
sub
add
sbb
repnz
sbb
push
xor
mov
cwtl
xchg
imulb
int3
inc
test
mov
test
cmpsl
pop
dec
xor
lcall
iret
cmp
pop
pop
call
movsb
sub
xchg
and
aam
cmc
or
adc
stc
scas
scas
push
add
testb
sbb
call
mov
cli
add
adc
adc
jg
incb
pop
xchg
call
jne
xor
pop
sub
lds
inc
cmp
add
ljmp
test
fsubrs
push
cmp
cld
ss
jg
cmc
jecxz
stc
lods
sti
mov
movsb
adc
scas
loop
push
xchg
cmp
cmc
cmp
mov
gs
mov
jae
push
aad
cmp
jmp
sbb
test
cli
pop
pop
inc
cwtl
rcrb
jle
jns
cmp
out
mov
mov
jne
fcmovu
test
lret
adc
out
mov
jbe
divb
adc
ret
lock
mov
out
jbe
push
sub
xchg
scas
pop
testl
pop
sbb
popa
sbb
dec
stos
push
mov
jle
hlt
rclb
repz
out
lods
or
jae,pn
pop
pop
add
ss
call
js
and
ss
loopne,pt
test
pop
out
gs
jne
loopne
popl
popa
sahf
sbb
pop
xchg
lahf
mov
add
cmp
jne
lahf
push
sti
imul
sbb
fucomi
dec
cmc
sahf
loop
mov
push
sbb
icebp
push
mov
mov
fdivrp
bound
pop
dec
cmc
in
ret
ds
jbe
movsb
cwtl
adc
in
mov
jnp
out
in
cltd
push
and
icebp
stc
xchg
sub
mov
fcoms
adc
sbb
add
push
sti
sbb
jmp
inc
mov
movsl
aad
xor
or
sub
mov
insl
adc
and
int
leave
push
lock
ficoms
fmulp
mov
sub
test
in
cmpsb
pushl
sub
cmp
loop
call
sbb
nop
or
pminub
push
xchg
pop
lods
xchg
sub
test
mov
pop
aas
xchg
lahf
into
sbb
stc
shll
add
lods
lods
stc
or
in
test
stc
inc
xchg
fdivl
pop
xchg
mov
scas
mov
and
out
mov
and
sbb
in
and
inc
jg
xchg
int
test
mov
mov
out
int
out
mov
dec
lock
clflush
inc
gs
out
cltd
dec
cmp
lods
stc
sub
addr16
sbb
es
jne
mov
in
rorl
hlt
lea
add
pop
out
pop
mov
jge
cld
xchg
jg
out
sub
mov
add
jl
dec
and
mov
mov
mov
xlat
outsb
aad
decb
lock
cs
les
repnz
xchg
pop
pushf
imull
fsubrs
daa
icebp
mov
or
loope
jl
das
test
rcr
and
stc
lds
jl
pop
movsl
negl
push
sbb
movsb
into
clc
mov
push
sti
dec
sbb
push
std
mov
sti
es
adc
rcrb
and
cmc
mov
mov
mov
mov
push
sub
xor
pop
aad
jg
push
adc
sbb
int
aam
das
adc
push
pop
outsb
testb
hlt
mov
inc
subb
or
pop
aam
loope
push
jns
pop
sti
pop
inc
push
xor
xchg
shll
lret
popf
loopne
loopne
test
sbb
ret
fcomp
cmc
push
pop
pop
ds
in
inc
xchg
pop
movsl
and
sbb
add
xchg
outsb
testb
sbb
pop
loope
sbb
int3
cmovbe
xor
and
test
stc
outsb
int3
cs
sbb
vcvtsd2si
xor
pop
push
push
cli
sbb
add
cmc
out
fidivrs
add
int
in
sbb
inc
push
pop
icebp
or
jmp
jns
imul
popa
sub
std
dec
out
pushf
cmp
jb
sub
inc
mov
mov
cmp
stos
jnp
andb
dec
in
add
adc
out
pop
dec
bound
div
mov
xchg
and
mov
sbb
and
pop
sub
sbb
jge
out
stos
xchg
inc
add
dec
pop
and
jl
or
in
xchg
cmp
dec
jns
mov
adc
pusha
test
push
mov
sarb
fld
or
inc
cmpsb
fsubrs
cmc
cmp
xchg
inc
sub
icebp
xchg
scas
xor
add
add
into
insl
loop
fsub
movsb
jno
repz
jg
sarb
adc
push
out
jle
sbb
mov
inc
or
insl
sub
cmp
hlt
and
sbb
adc
inc
push
std
cmc
call
and
mov
out
ret
mov
adc
das
movsl
pop
or
and
in
ss
xchg
and
outsl
mov
pop
cmpsl
jg
sub
loop
sbb
inc
jge
jns
jmp
mov
xchg
lods
jbe
cmp
cltd
cmp
mov
out
or
xchg
pop
adcb
sbb
jmp
mov
pop
loope
adc
fwait
cmp
orl
inc
mov
das
push
push
sbb
xchg
xchg
addr16
xchg
mov
sbb
xor
push
sar
inc
enter
out
jb,pn
and
pop
inc
jne
push
and
dec
sbb
mov
mov
shrb
andl
xorb
pop
lods
loopne
jo
inc
adcl
add
movsl
jne
jae
cs
fidivl
imul
mov
add
sub
out
xchg
cmc
jp
pop
lret
mov
loope
cmp
xlat
mov
bnd
out
mov
xor
outsl
movsl
cwtl
stos
fnstcw
inc
and
mov
cmc
or
sub
adc
pop
insl
std
fisttpll
and
jo
push
icebp
sbb
xlat
and
lea
insl
sbb
adc
test
lea
mov
rcrb
aad
stos
inc
sbb
nop
mov
sbb
and
fsub
xchg
dec
push
jne
stos
pop
sbb
lods
ss
mov
push
incb
adc
int
xor
sbb
lcall
push
mov
and
pop
popa
push
fistps
fistpl
call
sub
sbb
gs
inc
in
jg
adc
lods
push
xchg
cmc
mov
mov
cwtl
sbb
bound
cmovs
and
pop
inc
stc
fdiv
cwtl
mov
movsl
packssdw
aam
xor
dec
cs
jle
mov
cmpsl
movsl
aam
out
pop
ja
out
mov
jbe
das
movsl
sar
cwtl
scas
sub
mov
push
sahf
push
and
inc
and
popa
cmp
mov
int3
test
sbb
sbb
mov
pop
push
cmp
jbe
andl
sbb
and
test
fwait
xchg
xor
adc
fldenv
sbb
mov
adc
daa
lcall
push
outsl
sub
inc
xchg
test
lret
mov
pusha
movb
mov
sub
pop
pop
test
sub
lds
icebp
sbb
add
lods
int
or
dec
in
jnp
dec
arpl
stc
sbb
jge
dec
into
sub
mov
lock
in
shll
stc
push
or
pop
sub
pop
clc
push
sbb
out
mov
cs
out
jnp
idivb
sti
les
xor
imul
pop
mov
sub
mov
inc
xor
je
in
cs
lods
adc
pop
xchg
cmpsl
fisubl
or
and
sub
mov
stos
or
jo
cmp
xor
pop
inc
inc
fpatan
stos
jnp
loope
xchg
es
pcmpeqw
adc
push
arpl
fdivrp
sti
sbb
test
fsubl
fsubrs
les
add
or
movsl
add
mov
adc
lods
fmuls
daa
outsl
in
push
jne
negl
mov
cmpsb
push
push
into
cmc
dec
in
in
inc
insb
sahf
fcoml
nop
or
or
bnd
dec
xchg
cld
stos
in
int
bts
movsl
int3
sbb
xchg
in
and
mov
xchg
adc
ficomps
pop
data16
lcall
sub
shlb
mov
sub
stc
inc
xorb
mov
adc
inc
out
cmc
iret
psubsb
in
mov
mov
mov
xchg
cmp
jmp
mov
fwait
lods
js
xchg
cmpsb
sub
out
jl
ficoms
mov
add
div
jle
mov
mov
mov
rol
push
jg
sub
loope
pop
and
rcr
adc
inc
call
xchg
and
loope
mov
jl
in
xor
sub
test
stc
aad
push
push
mov
ja
loop
aas
mov
hlt
cmc
sahf
in
push
les
rclb
fwait
inc
cmp
mov
clc
sbb
sub
mov
xchg
sub
divb
test
insl
dec
push
inc
pop
inc
popa
and
and
add
xchg
add
js
imul
ja
mov
test
inc
dec
test
sbb
push
adc
jns
xchg
sti
aam
or
cmp
cmp
jnp
cli
or
xor
into
mov
jl
out
sub
mov
mov
pop
jbe
into
loop
mov
push
in
je
lret
sbb
scas
xor
and
pop
cmpsl
mov
sti
popf
adc
roll
sbb
sbb
jecxz
and
push
inc
jne
push
inc
or
insb
pop
mov
enter
outsl
and
lea
std
sub
or
mov
pop
add
push
int
xchg
mov
scas
jne
push
cmp
loop
sti
lock
cmp
sbb
push
shr
jbe
repz
test
js
jbe
jp
pop
in
out
mov
sub
cmpsl
jecxz
cmc
jg
lds
scas
fiadds
push
cmp
cmp
stos
icebp
popf
fsubrl
mov
or
fldcw
mov
xchg
jle
fcompl
out
pop
mov
call
stos
and
loopne
add
decl
mov
push
sahf
sub
jmp
pop
sahf
leave
sarb
jne
push
xchg
push
test
xchg
sahf
push
dec
pusha
out
cmpsl
xchg
in
mov
xchg
data16
push
add
add
mov
jecxz
add
pop
in
sbb
cmp
sub
fdivr
xchg
push
pop
ret
inc
push
sub
sbb
repz
jns
popa
mov
xchg
xchg
jge
mulb
xchg
repnz
xchg
mov
jle
scas
mov
mov
mov
or
sbb
and
sbbl
sub
stc
es
pop
ja
scas
cltd
fidivs
fsubp
sbb
sti
pop
and
movsb
xchg
push
sbb
movsb
sub
mov
out
fwait
xor
mov
repnz
test
bound
pop
call
pop
cmpsl
sbb
push
cmp
mov
pop
inc
gs
and
add
jle
ror
inc
jg
push
sbb
fsubs
add
push
jbe
jp
sbb
adcb
add
mov
sbb
xchg
fldl
pop
push
push
jbe
adc
or
pushf
pop
cld
fadds
xchg
lcall
mov
and
sbb
dec
jnp
push
aam
adc
xlat
xchg
adc
test
push
mov
cmc
sbb
aad
loopne
rclb
pop
adc
sub
and
push
ficomps
pop
testb
aad
mulb
pop
dec
jnp
jbe
adc
inc
inc
xor
push
jmp
jo
test
adc
jmp
push
cmp
cmc
sbb
in
incl
dec
shrb
sbb
jl
repnz
or
lcall
sub
bound
out
inc
sbb
dec
jb
sbb
outsl
cmpsb
sub
adc
decb
xchg
xchg
std
sbb
xchg
xchg
jbe
pop
pop
test
out
mov
aaa
push
or
out
cmpsl
pop
adc
cmpsb
jnp
xchg
jo
mov
test
bound
dec
pop
mov
xchg
sbb
fwait
shrl
or
xchg
sti
int
shlb
dec
inc
int
sbb
xchg
shr
push
daa
push
or
sahf
push
rcl
sbb
cli
inc
lods
pop
push
push
movsl
mov
cli
jnp
and
scas
dec
jl
jecxz,pt
cli
sbb
fcoms
and
jno
fbld
cmp
pusha
fdivs
dec
and
push
idivb
mov
fsubrp
cmp
aas
dec
xchg
adc
orb
and
sbb
push
cs
dec
add
sti
inc
or
call
and
sahf
add
pop
sbb
xorb
mov
ljmp
test
push
test
mov
loop
xchg
fisubrs
out
cmpsl
aad
jb
jmp
jg
js
pop
sub
sub
sbb
nop
stc
aad
mov
or
push
mov
mov
adc
cmc
pushf
ljmp
in
loopne
xchg
pop
into
mov
fisttpll
push
cld
lea
mov
movsl
jbe
pop
inc
insl
or
ds
and
pop
pop
and
cmp
repnz
mov
push
mov
sbb
repz
loopne
rclb
stos
add
sti
in
lds
and
sub
dec
loopne
cld
cmp
mov
mov
cmp
sub
pop
sub
pushf
adc
push
xrelease
lods
xchg
ljmp
addr16
out
fs
mov
pop
adc
jge
rclb
push
scas
inc
out
push
cmc
add
push
mov
pushf
addr16
dec
or
sbbb
inc
shrb
fwait
adc
mov
cmp
movsb
jnp
cmp
test
mov
into
repnz
mov
xor
and
xchg
sti
aaa
das
cs
cli
out
clc
sbb
mov
mov
cmp
or
and
pop
and
mov
xchg
jno
andb
out
mov
mov
push
mov
lea
push
mov
shlb
sti
pop
cli
leave
gs
inc
jnp
leave
dec
xchg
fsubrs
push
sbb
popa
cld
cmp
pop
pop
idivb
jbe
inc
jno
sbb
jle
inc
cmp
pop
andb
lds
loope
xacquire
stc
cmpsb
add
icebp
in
adc
inc
sarb
mov
mov
hlt
sbb
jbe
inc
sub
push
stc
pop
push
pop
les
inc
pop
test
sub
jno
mov
stc
push
dec
pop
jo
orb
jecxz
loop
sbb
jo
aad
cmp
out
fildl
xchg
test
movsl
pop
add
stos
xchg
mov
xchg
decb
mov
addr16
addb
data16
insl
xchg
test
scas
in
push
push
push
pop
ret
jl
push
sahf
cld
js
enter
pop
sub
jbe
adc
ficomps
mov
mov
sbb
out
xor
add
mov
sbb
pop
mov
sub
inc
xchg
stc
push
repnz
push
adc
pop
pop
and
in
jnp
cld
jae
rcrb
pop
stc
add
ret
flds
jne
add
add
imul
xchg
shlb
mov
push
and
dec
sbb
xchg
xchg
stos
pop
pushaw
inc
and
stos
test
scas
fimull
push
bound
xchg
jecxz
imul
xchg
jl
push
stos
cmc
cltd
repnz
inc
push
in
sbb
and
fwait
call
mov
add
scas
or
cmpb
out
jge
and
lea
pop
loop
jge
cmc
data16
imul
test
enter
into
fsubrs
test
fcmovbe
push
or
pop
das
jl
sbb
or
jp
inc
pop
sbb
jo
mov
std
xchg
jecxz
stc
out
aas
inc
sarl
loopne
sbb
mov
stos
fstp
xlat
xor
jmp
xor
sub
sbb
mov
xchg
nopl
xchg
sbb
push
out
fstps
or
je
mov
rcrb
call
mov
mov
int3
xchg
ljmp
sub
enter
sub
mov
push
dec
jnp
xchg
gs
xchg
int
sarl
push
sub
fisubl
incb
js
dec
rorl
push
add
std
lods
shr
stc
clc
sbb
xchg
in
popf
inc
sub
xor
test
lods
sub
sbb
stos
aad
push
dec
sub
lods
cwtl
lods
sbb
add
sub
std
lret
stos
insb
mov
add
jns
fidivs
stc
mov
mov
rcrl
xor
adcl
negl
out
push
in
fucomp
xor
lds
movsl
fs
inc
out
cwtl
sbb
mov
test
mov
data16
cmpsb
dec
mov
or
ja
push
pop
jle
xchg
pop
mov
sbb
ja
xchg
int3
inc
je
clc
dec
mov
nop
xor
push
cld
enter
dec
push
in
pop
cmp
adc
rorl
jns
scas
shll
xlat
neg
lds
imul
and
mov
movsb
enter
js
cmp
inc
sti
jge
push
jae
ja
xor
aad
stc
lcall
out
and
jp
in
call
lea
inc
ficoml
fldt
outsl
lahf
hlt
sub
jle
adc
and
ljmp
inc
nop
stos
js
mov
pop
out
dec
imul
lret
notl
ret
out
and
imul
out
mov
jbe
jb
sub
lret
dec
cwtl
test
out
inc
mov
push
sub
jae
or
cwtl
xor
pop
inc
subl
loop
mov
pop
js
pop
mov
out
sti
jg
sbb
sti
nop
push
add
pop
push
lahf
ss
sbb
adc
out
pop
sbb
lea
movsb
mov
pop
test
addr16
loope
test
jb
add
sbb
sub
xchg
xor
add
imul
jae
cmp
in
dec
nop
xchg
popa
and
push
cmpb
incl
xor
jb
popf
ss
pop
inc
test
xchg
pop
jbe
movsl
sbb
inc
cmc
pop
cwtl
hlt
push
sub
mov
fucom
leave
push
pop
sbb
or
cmp
js
push
popa
mov
jbe
clc
cli
cwtl
dec
in
and
dec
xchg
leave
add
pop
dec
arpl
adc
mov
adc
mov
jbe
ds
mov
adcb
dec
adc
jmp
add
xlat
mov
es
mov
cmc
cltd
xchg
sbb
gs
pop
fdivs
push
cwtl
sbb
jecxz
mov
push
cmp
adc
push
and
xor
cmpsb
popa
and
stc
jbe
fstps
js
subl
cmpsb
inc
mov
cmpsb
push
f2xm1
das
mov
outsb
pop
inc
out
ss
not
xchg
cld
outsb
outsl
adc
nop
sbb
xor
jns
popa
cmp
or
jbe
sub
dec
xchg
and
ja
in
mov
leave
sub
test
inc
add
adc
inc
and
pop
inc
or
loopne
lret
cs
inc
stc
outsb
and
and
and
scas
daa
imull
shr
fs
push
add
sbbl
movsl
sub
icebp
mov
and
or
add
stos
in
xchg
mov
outsb
sub
sub
inc
push
fiaddl
out
and
mov
sbb
pop
and
arpl
jo
mov
adc
push
ss
push
xchg
and
and
push
mov
sub
loop
test
and
sub
test
sti
mov
out
setb
outsb
daa
sbb
adc
jge
pop
pop
cmpsb
xchg
add
les
sub
fbld
out
sub
es
lods
add
popf
loop
lods
add
lcall
in
inc
movsb
lea
add
test
push
out
jle
mov
pop
and
xchg
sbb
adc
fwait
mov
xchg
mov
out
and
mov
xchg
and
adc
add
cs
sub
insl
loope
sbb
out
movsb
lret
mov
and
push
sub
and
jge
inc
mov
add
and
test
rcrb
in
in
out
cltd
and
inc
loop
pushf
call
in
and
mov
mov
cmpsb
add
and
xchg
popf
je
sub
sbb
stos
sarl
sub
lods
jl
xchg
aad
jge,pn
bound
enter
out
push
sbb
and
pop
daa
negl
sbb
xchg
adc
xchg
jl
testb
jno
out
sub
xchg
ds
push
mov
outsl
pop
cwtl
add
rcl
cld
dec
pop
push
addr16
jnp
xchg
ss
mov
test
mov
adc
pop
cs
sbb
and
mov
inc
fistpll
pop
in
and
movsl
sbb
mov
mov
fnsave
xor
addr16
popf
jno
push
mov
arpl
push
idivb
lock
cmpsb
sub
and
sub
sbb
scas
movsl
mov
fidivrs
bound
in
fistl
js
int
pop
push
cli
sbb
pop
test
pop
xor
call
repnz
xorb
lahf
xor
mov
push
fcmove
stos
inc
bound
call
scas
data16
sbb
inc
pop
scas
sbb
movsl
or
lret
inc
xchg
and
mov
xchg
out
cmpsl
mov
adc
cltd
xchg
inc
xchg
and
pop
loopne
or
enter
fcomps
jno
push
stc
mov
xor
xor
and
pop
or
cs
ss
and
add
fisubrs
and
add
jb
fsts
ja
mov
adc
rcrb
push
xchg
cs
and
xchg
gs
pop
test
sbb
jge
inc
out
dec
inc
mov
sbb
fisttpl
negb
pushf
add
mov
jns
xchg
negb
xchg
inc
push
ror
js
add
js
lret
test
fnsave
mov
push
outsl
dec
or
add
mov
xor
idivb
xchg
popf
insb
aam
xchg
sbb
and
in
pushf
xchg
lock
dec
cwtl
out
lods
fsubrp
movsl
xchg
cmpsl
scas
in
insl
cmp
aad
add
lods
fwait
cmc
clc
lcall
js
adc
into
std
xor
and
sarb
mov
mov
jge
lea
ret
cmp
push
push
cltd
add
fs
stc
sbb
icebp
in
jp
test
mov
xchg
scas
xor
daa
jne
mov
jns
icebp
adc
test
mov
push
xor
cmp
das
jmp
fidivrl
jl
cli
and
mov
push
lock
sti
stc
xor
outsl
sbb
movsb
xor
sub
push
in
pop
outsl
jnp
cmpsb
cmc
insl
dec
je
fstpl
addr16
and
subb
push
cmc
jae
xchg
pop
movsb
sub
lahf
inc
sbb
sbb
add
aas
and
movsb
or
cmp
outsl
or
jmp
pushf
cmp
nop
sbb
sub
xchg
cmp
xlat
outsl
pop
adc
std
sub
mov
jne
or
jmp
push
add
psubsb
leave
icebp
xchg
ss
and
cmp
es
mov
push
popf
inc
cmc
out
or
dec
adc
add
adc
add
scas
cmp
out
dec
adc
push
enter
cmp
and
cmp
pop
or
inc
add
cmc
or
in
xchg
pop
xor
sub
outsl
loop
sbb
cmc
sbb
decl
call
stos
clc
adc
in
fmuls
xchg
adc
sub
pop
inc
push
and
pop
shlb
jae
test
cs
mov
sub
cmpsl
push
loop
xor
push
and
cmpsb
sbb
shll
nop
daa
les
outsl
call
popa
xorb
aaa
mov
adc
rorb
fbld
xor
xor
sub
popf
xor
jmp
divl
inc
push
mov
loopne
pop
out
push
pusha
fcmovne
inc
stc
movsb
lds
fdivrl
test
pop
sub
sbb
out
jge
shr
sbb
movsl
cmpsb
mov
push
push
mov
outsb
pop
fwait
rorb
add
xor
rcll
mov
xchg
sbb
mov
cmc
jle
pusha
mov
insb
dec
mov
shrb
xor
pop
inc
sahf
xorb
test
and
js
push
jl
mov
mov
sub
cwtl
adc
movsl
sahf
mov
or
mov
xchg
cmp
dec
jle
sub
fwait
test
add
sbb
sub
data16
inc
popa
sub
jns
mov
stos
and
xor
push
or
xchg
data16
push
lret
scas
mov
icebp
das
mov
pop
jnp
aad
pop
push
or
mov
sbb
dec
pop
xchg
dec
xchg
sahf
lret
sbb
lret
mov
call
les
fisubs
sti
jo
test
stos
mov
leave
add
imul
jno
jnp
xlat
arpl
pop
pop
pop
imul
mov
jl
jecxz
loope
sub
xor
sbb
pop
sbb
jl
xlat
xor
mov
xor
add
movsl
xchg
and
fstps
mov
mov
sub
scas
sbb
sbb
jb
mov
jmp
imul
outsl
cmpsb
cmc
cwtl
push
jbe
cmp
mov
push
jne
imull
dec
scas
in
lock
mov
enter
push
sub
enter
lcall
pop
int3
sub
scas
popa
jne
nop
sbb
push
xchg
adc
stos
cmpsl
jp
and
pop
pop
fsts
sbb
cld
int3
cli
div
pushf
xor
cmp
int3
fiaddl
in
negl
inc
icebp
add
es
mov
xor
imul
shlb
lds
daa
loopne
sbb
xlat
sarl
subl
push
out
mov
ja
xor
ljmp
inc
and
idivl
jo
mov
or
aas
mov
mov
mov
sbb
mov
popf
push
mov
repz
js
and
ja
adc
jecxz
xor
sahf
insb
jle
out
xchg
jno
inc
xchg
mov
or
xchg
cmp
hlt
cmc
fwait
shr
and
push
stc
ja
jmp
xchg
add
fisttpl
scas
enter
hlt
movsl
and
adc
adc
and
dec
inc
std
js
lock
sbb
jne
data16
mov
divb
ror
jnp
pushf
stc
mov
sub
push
mov
add
andb
divb
out
mov
mov
clc
add
dec
or
ret
repz
sbb
push
jmp
cmp
and
jl
xchg
in
popf
cmp
or
xor
das
aaa
and
xor
mov
and
pop
xchg
test
or
xor
lret
pop
sar
ds
push
mov
sar
mov
sbb
faddl
mov
xchg
sbb
cltd
pop
xor
dec
lock
jle
sub
repz
sbb
rorb
ljmp
push
cs
scas
pop
inc
mov
adc
fisubrs
scas
and
dec
lea
jmp
addr16
movsb
push
mov
rolb
call
mov
dec
and
lds
sub
sub
divb
aad
sub
jae
pop
gs
sbb
inc
mov
jne
pop
pusha
and
sbb
shll
xchg
ss
adc
jge
cmpsb
fwait
jmp
adc
js
in
push
shrb
mov
in
lods
in
push
xchg
adc
mov
xchg
imul
xor
jns
sbb
pop
xchg
sbb
incl
shl
fsubrl
movsl
cmp
mov
das
mov
idivb
ss
cmc
inc
add
leave
or
test
movsl
or
mov
xchg
add
jnp
pop
cmpsb
int
rorb
out
call
pusha
or
nop
fimuls
out
aad
mov
leave
popa
call
jo
push
movsl
jne
sub
fwait
push
stc
out
and
mov
mov
stos
push
adc
insl
es
sub
pop
popf
sbb
adc
push
mov
jo
jmp
cmpsb
cmp
push
nop
mov
xchg
push
aam
push
sahf
jne
push
clc
jnp
lds
or
push
gs
mov
pop
adc
mov
jecxz
xlat
sbb
cmpsl
sub
rcrl
or
mov
lods
lret
inc
pop
inc
icebp
out
jne
mov
insl
pop
sub
repz
bound
scas
and
js
mov
mov
ds
sub
shr
cmpsl
mov
xor
sbb
sbb
int3
daa
mov
test
push
int
mov
inc
divl
mov
sbb
ret
pop
aaa
aaa
mov
imul
and
and
cmp
and
lods
push
xor
sahf
xor
add
sub
sbb
pop
fcoms
push
sbb
daa
sub
icebp
mov
sub
sbb
inc
test
jle
es
mov
push
addr16
push
pusha
mov
and
in
dec
sub
inc
mov
daa
sbb
fwait
or
push
inc
ret
in
dec
xchg
in
cli
movsl
xchg
inc
test
pop
repnz
decl
cmp
jl
cmp
sub
dec
pop
loopne
add
scas
dec
and
dec
add
mov
push
jle
cmp
push
mov
cmp
lds
ret
mov
mov
arpl
cld
inc
pop
scas
mov
sbb
sub
fadd
std
and
sbbl
add
popf
andb
data16
rolb
sbb
dec
mov
iret
outsb
xchg
push
sub
and
sub
jo
mov
mov
out
mov
or
fwait
or
sbb
imul
pushfw
or
popa
sbb
mov
cmpb
jbe
test
arpl
and
daa
daa
mov
add
cmc
xor
ficompl
test
shlb
out
popf
fs
jmp
sbb
sub
mov
sbb
jle
shl
xchg
daa
xor
ret
arpl
mov
and
clc
iret
mov
xchg
cld
xchg
add
adc
adc
sbb
jle
mov
out
xchg
cs
push
and
int
iret
sbb
xor
xor
decb
and
popf
xchg
cltd
xlat
mov
sbb
test
sub
cmc
jecxz
xor
shlb
clc
mov
pop
out
out
sbb
clc
and
shrb
les
mov
sahf
or
mov
cltd
cltd
divl
sub
and
sub
cmc
add
fwait
mov
cmp
mov
jg
js
or
test
imul
bound
and
xchg
stos
fsubl
decl
gs
add
push
frstor
or
xchg
enter
mov
xor
pop
mov
enter
arpl
or
cmpsl
sarl
jmp
add
mov
inc
rcrb
movsl
int3
icebp
lea
int
enter
lahf
add
sub
test
dec
int3
ja
xor
xchg
sahf
sub
call
push
std
sbb
mov
adc
cmpsb
into
mov
mov
cs
jb
std
icebp
fwait
jge
sub
sub
pop
cmpsb
or
jg
mov
and
and
js
pop
xor
jmp
add
mov
stos
sub
cmp
stos
pop
xchg
cwtl
jae
in
lahf
and
aad
jns
and
inc
repz
cmp
shlb
daa
adc
stc
add
mov
pusha
push
test
sahf
sub
push
adc
add
pop
and
mov
out
pop
arpl
enter
stos
lods
and
xlat
and
jecxz
sbb
scas
sub
pop
mov
daa
ret
pop
push
mov
cmp
movsl
adc
or
sub
and
mov
frstor
fwait
sub
xchg
daa
add
inc
pop
xchg
sbb
movsl
push
int
adc
scas
in
add
test
iret
in
push
and
fadds
ficompl
jl
icebp
or
pop
mov
dec
pop
mov
push
jge
mov
pop
or
add
mov
popf
shlb
mov
mov
xor
adc
nop
cs
mov
add
push
popf
sbb
stos
xor
or
xchg
mov
in
movsw
andl
adc
aaa
dec
or
jl
mov
cmp
repnz
scas
xchg
test
dec
daa
stos
aad
sub
push
roll
scas
aad
fcomps
or
xchg
aam
iret
fcoms
insb
xchg
sub
mov
repz
fidivs
ljmp
in
icebp
lea
mov
sbb
xor
daa
pushf
mov
mov
in
push
sub
imul
push
mul
push
ret
fwait
mov
sub
test
add
out
nop
push
aam
cmpsb
arpl
jb
mulb
xor
data16
call
cs
sahf
sub
sbb
inc
inc
jp
push
add
sbb
repnz
add
xchg
sub
test
negb
and
adc
cwtl
cld
jl
fsubl
scas
iret
call
mov
jbe
leave
fsubrp
mov
aam
xchg
cli
aad
xor
sub
aaa
and
idiv
pop
xchg
mov
jecxz
mov
xchg
cmp
adc
out
adc
sub
scas
mov
mov
movsl
jmp
mov
xchg
sti
and
js
add
push
inc
mov
sbb
in
xchg
int
scas
cld
xchg
stos
pop
mov
scas
sbb
aam
push
mov
aad
xchg
cs
jo
push
xor
enter
pushf
mov
adc
scas
jnp
mov
sub
mov
lcall
sbb
pusha
cltd
lock
or
push
dec
jbe
mulb
aaa
and
or
dec
xchg
cltd
notb
leave
adc
xchg
and
in
jp
insl
out
ja
out
popfw
sub
xchg
add
and
mov
into
jb
js
dec
jmp
stos
mov
pusha
inc
cwtl
cmpsb
mov
aad
and
jo
popf
in
pop
cmp
sbb
test
shrb
daa
or
pop
lea
cwtl
add
xchg
arpl
jge
xor
push
clc
adc
stos
and
in
mov
outsb
mov
insl
push
insb
mov
mov
dec
mov
mov
in
jge
cs
aaa
mov
and
repnz
and
xor
mov
adc
daa
or
mov
xor
mov
jne
mov
movsb
sub
clc
sub
lods
js
and
shlb
mov
sub
and
movsl
call
incl
xor
negb
stos
inc
stos
add
add
mov
pop
pop
outsb
enter
cmpsw
rol
sbb
add
sbb
cmp
in
jne
cmc
aad
shrb
rcr
pop
and
out
xor
inc
adc
sbb
mov
and
or
movsb
jno
sbb
pop
and
call
sbb
frstor
mov
mov
dec
jne
xchg
sahf
xchg
and
cs
addr16
cs
cmp
mov
mov
xchg
aaa
mov
xor
sub
scas
xchg
dec
xchg
push
sbb
sub
and
into
jbe
adc
mov
lcall
adc
sub
mov
push
sub
adc
dec
addr16
sub
sahf
pop
lds
mov
sbb
out
fwait
xor
xchg
out
sbb
xor
dec
imul
sbb
sub
sub
movsl
jmp
std
sub
pop
negb
and
sbb
xchg
jnp
test
xor
push
mov
lods
push
xchg
iret
jb
mov
push
std
cwtl
sbb
dec
mov
stos
xchg
fs
stos
sbb
clc
adc
mov
push
inc
pop
fistps
jle
push
test
subb
sbb
repz
daa
roll
imul
ljmp
push
in
cld
adc
mov
and
roll
mov
sub
test
or
mov
int
xor
mov
cmpsb
out
out
jmp
out
and
push
lods
loop
into
mov
rclb
xchg
xchg
push
mov
mov
add
out
pushf
cmc
sbb
or
mov
push
rcll
add
daa
mov
sub
jnp
xchg
iret
cmp
pop
xchg
movsb
ljmp
js
mov
test
mov
sub
inc
mov
nop
sbb
mov
dec
xchg
inc
pop
pop
stos
bound
adc
inc
add
pop
pop
sysenter
mov
sbb
pop
and
add
inc
daa
mov
and
pop
sbb
add
pop
cmc
add
movsb
xchg
hlt
popf
mov
mov
sbb
ficompl
xchg
lock
adc
pop
push
bound
cwtl
sahf
fcoms
shld
mov
pop
fwait
popf
inc
lea
cwtl
int
scas
shr
mov
add
and
movsl
inc
mov
cmp
rorb
mov
pop
xor
adc
sub
imulb
pop
ss
xor
movsl
aad
mov
out
xchg
inc
sbb
cmp
sbb
mov
push
lds
mov
movsl
insl
dec
sahf
mov
lods
icebp
sub
cmp
pop
jl
je
clc
rcl
mov
mov
sub
sbb
or
orb
mov
sbb
and
icebp
repz
pop
push
xor
in
clc
sbb
jns
clc
mov
and
xchg
stos
push
es
or
and
clc
shlb
and
nop
lahf
lods
in
push
jb
and
jmp
push
lret
ljmp
call
mov
push
pop
gs
pop
lret
adcl
pusha
outsl
cmpsb
out
stc
out
dec
fnsave
movsb
mov
pop
jmp
inc
stc
cmc
fnstsw
scas
push
ja
outsl
xchg
cmp
stos
push
rol
xor
mov
loop
scas
mov
xchg
sub
mov
sbb
lods
rclb
int
lods
sub
lahf
std
out
xchg
or
pop
outsl
add
stc
inc
mov
outsl
cmp
sub
je
ret
and
fisttpl
jl
push
data16
pop
sbb
mov
scas
and
rclb
and
jae
subl
arpl
outsb
mov
int3
inc
and
jo
sub
dec
adc
lcall
jb
pusha
adc
jne
arpl
addr16
xchg
sbb
pushf
push
rcrl
test
xor
cmp
pop
loope
pop
out
xor
and
ja
sub
mov
push
gs
pop
jecxz
int
mov
or
push
adc
insl
sbb
inc
movsl
add
int
or
fmulp
mov
insb
in
inc
lcall
aam
movsl
and
out
push
lret
adc
notl
in
xchg
dec
xchg
adc
stos
inc
bswap
sahf
sarl
adc
pusha
sub
cmp
sub
push
push
ror
ja
cld
add
cld
pop
adc
and
pop
loopne
sbb
xor
in
push
out
push
sub
and
imul
movsl
iret
sbb
test
aad
ja
dec
and
testl
sarl
ffreep
subb
push
scas
or
and
mov
subl
xor
das
cmp
cs
inc
aaa
call
mov
and
cmpsl
scas
sub
pop
mov
nop
imul
movsb
xchg
sbb
xchg
xchg
stc
dec
in
sub
inc
aaa
push
cmp
outsb
push
mov
mov
push
insb
sbb
mov
and
ret
cs
mov
lea
jmp
and
stos
inc
lcall
inc
fbstp
add
sbb
cs
and
pop
xchg
gs
add
fadds
in
cmp
and
ret
pushf
pop
and
icebp
and
add
stc
or
mov
push
mov
push
add
inc
add
imul
fisubrs
xchg
cmp
sub
cmpsl
pop
and
mov
sti
scas
xchg
imul
sub
clc
mov
movsl
aaa
sub
sub
mov
test
mov
fwait
mov
mov
push
jb
fwait
add
jno
outsb
popa
das
xchg
out
push
inc
inc
jo
es
mov
lea
loope
push
inc
stc
jge
lret
pusha
jae
stc
mov
sub
xchg
das
pop
pop
ds
and
stos
and
rolb
aas
les
adc
jmp
xor
push
jmp
add
jno
inc
jo
sbb
insl
in
adc
enter
push
pop
ja
sti
cld
in
add
and
add
inc
push
jecxz
jno
icebp
mov
and
adc
pop
sub
push
jmp
ja
sub
cmc
mov
inc
mov
ret
lods
sbb
mov
stos
out
test
push
repz
adc
push
ret
lea
cmc
push
in
out
and
sbb
fldt
aad
pop
and
mov
das
xor
cmc
sub
gs
gs
data16
mov
sbb
lahf
or
pop
jp
imul
rcl
cs
and
data16
push
pop
pop
jecxz
sahf
pop
and
es
sbb
add
mov
sub
xchg
xor
ja
xchg
and
insb
and
dec
push
ja
inc
jge
pop
pop
add
adc
stc
cmpsl
dec
mov
inc
jge
add
test
xor
xor
xchg
sbb
push
jnp
sbb
jnp
push
push
push
fmul
push
xchg
mov
sub
ds
addl
push
dec
mov
inc
es
inc
lods
jno
in
mull
jp
sbb
mov
das
jge
repz
es
sbb
hlt
es
clc
idiv
push
cmp
mov
cltd
es
bound
jb
lahf
es
cmc
fstpl
jl
jp
push
sbb
into
xor
dec
fsubs
dec
int
jmp
add
lods
lea
std
sahf
aas
jae
and
cld
cs
add
ret
push
and
stos
push
icebp
jp
adc
cli
adc
stc
add
sbb
into
je
clc
push
adc
mov
jns
lret
mov
js
rcl
jne
frstor
es
sub
jecxz,pn
sbb
jno
mov
add
pop
out
lret
stos
inc
jb
stos
push
out
pop
sub
adcb
sbb
pop
vgetmantps
cmc
in
loop
lds
out
xor
cmpsb
divl
or
push
or
stos
into
es
push
cwtl
mov
pusha
mov
xor
out
xchg
jnp
insb
adc
loope
cmc
dec
fdivs
es
and
add
gs
fs
dec
mov
es
lock
cmp
push
repnz
xorb
mov
ljmp
pusha
sti
fisubl
fstps
mov
xchg
dec
and
mov
fdivrs
arpl
sub
inc
es
jecxz
add
mov
push
movsb
pushf
fs
xchg
jge
dec
sbb
xor
push
lock
xchg
in
les
mov
in
cmp
push
out
mov
adc
ljmp
ror
add
pop
loope
push
push
es
enter
mov
test
and
lock
push
jge
cmp
leave
fnstcw
stc
jo
lret
pop
push
insb
das
cmp
push
push
push
cmp
imul
ret
cmp
adc
push
gs
inc
dec
out
popf
dec
scas
sub
add
jp
sbb
push
bound
sbb
mov
aaa
bound
jecxz
mov
repnz
pop
int3
sbb
add
rolw
mov
inc
mov
fisubl
lahf
adc
xchg
fcmovu
mov
xorl
dec
inc
lea
push
cs
es
push
inc
inc
cltd
es
or
sub
das
cli
and
adc
cmp
and
xchg
sbb
push
pop
push
clc
pop
jmp
out
pushf
mov
pop
sub
xchg
jl
adc
mov
sub
popf
daa
lahf
lea
mov
fmuls
sbb
sub
scas
dec
ds
sub
lds
dec
dec
xchg
dec
popf
scas
or
xchg
lahf
scas
es
dec
mov
push
popf
and
loopne
sub
pop
es
inc
xchg
imul
ret
sbb
rcrb
es
nop
jnp
mov
and
and
sbb
dec
test
ds
mov
xchg
mov
out
icebp
push
scas
mov
push
and
and
sbb
mov
cli
and
mov
movsb
ds
loopne
sub
aaa
push
lahf
jp
ja
push
push
sub
int3
out
pushf
outsb
pusha
xchg
into
ret
mov
cmp
fsubrl
jp
fdivr
jg
addr16
insl
es
xchg
ror
fiadds
es
jl
sahf
jle
mov
inc
adc
xor
scas
xchg
cld
cs
mov
push
xchg
sbb
jo
es
cmp
add
gs
scas
cmpsb
push
rol
cs
adc
pop
inc
xor
dec
sub
mov
and
pop
mov
hlt
xchg
push
fnstsw
cmpsb
es
out
pop
outsb
sub
push
es
push
jg
push
inc
fcmovb
pusha
or
add
lock
pop
xor
out
mov
rorb
into
pusha
adc
frstor
mov
xchg
cs
mov
cmc
and
sbb
out
inc
lcall
jg
loope
pop
es
jge
fcom
daa
mov
rcll
aaa
int
and
xchg
sbb
incl
mov
js
push
sbb
cmp
pop
xchg
sti
stc
jmp
es
dec
sub
mov
inc
stc
ret
and
and
rolb
mov
call
cli
push
in
iret
jecxz
or
es
mov
push
inc
in
lods
pop
add
lea
inc
hlt
push
enter
les
pop
add
es
lret
test
movsl
and
imul
sub
sbb
add
call
lods
push
in
loope
mov
mov
in
out
es
bound
mov
cmpsb
lods
mov
call
and
paddsb
inc
adc
jge
fcmovbe
es
test
dec
mov
es
enter
mov
cmpsb
insb
sub
jae
and
dec
add
out
mov
stos
pop
sub
fsubp
scas
pop
dec
pop
jnp
jl
push
and
mov
and
sahf
es
out
lds
mov
mov
popa
cltd
sti
imul
scas
imul
es
xor
sub
sub
rcrb
mov
cmp
adc
or
rolb
aam
lea
pop
mov
into
mov
xchg
pop
dec
jne
call
cs
jns
es
outsb
sbb
jae
dec
sbb
mov
jmp
pop
cli
xchg
pop
fbld
lret
in
movsb
and
arpl
xchg
and
scas
cmp
stc
adc
and
sbb
cmp
sbb
dec
scas
sti
mov
and
cli
pop
in
xor
outsl
out
cs
xor
es
das
insl
lds
mov
sahf
es
lahf
loope
fcoml
pusha
push
xchg
aas
ja
sbb
or
xchg
lcall
or
nop
shlb
xchg
sbb
shlb
int3
sbb
sub
push
mov
lret
add
pop
sub
dec
jle
pushf
push
fadds
pop
pop
sub
sub
std
ficoms
or
addl
sub
fldenv
mov
dec
mov
insb
push
mov
and
cmpsl
aas
adc
inc
outsb
lcall
ficomps
es
or
cmp
adc
mov
jae
es
xchg
in
inc
mov
daa
mov
cmp
sbb
pop
cltd
cvtps2pi
xchg
sbb
push
mov
sbb
inc
fldenv
xor
adc
int3
lcall
cli
and
dec
and
xchg
and
es
sub
int
std
push
movsb
test
xor
stos
mov
jl,pt
pop
aad
lea
or
sub
mov
push
push
ret
sbb
cs
mov
js
push
mov
sub
push
or
sahf
cmpsl
repnz
jno
loop
lret
and
outsl
hlt
push
cmp
clc
call
add
sbb
mov
fldcw
jb
mov
pop
insb
sub
fstpl
stc
inc
xlat
pusha
jl
mov
mov
xchg
or
or
push
dec
rorb
in
mov
xchg
loop
es
dec
stos
xor
cmpb
mov
mov
mov
adc
sbb
outsb
mov
xchg
popa
jle
es
mov
inc
mov
call
icebp
pop
push
xchg
add
inc
js
push
out
sbbb
test
push
sub
xor
push
sti
pop
jge
imul
pushf
adc
es
xor
insb
inc
or
mov
pop
fsubs
ljmp
sbb
fcomps
fs
adc
xchg
lock
shll
das
addr16
push
call
sub
repz
into
inc
mov
gs
stc
pop
popa
out
ds
es
popf
iret
cmpsb
and
es
dec
or
jnp
sbb
inc
cmp
stc
mov
sub
fisubl
or
pop
nop
ret
inc
cmpb
pop
push
sub
pop
es
xchg
pop
jle
fmuls
push
cs
in
out
test
es
jno
mov
ja
or
addr16
xor
test
lods
adc
shll
inc
inc
notb
mov
xchg
fldcw
add
jl
jb
clc
gs
push
dec
mov
call
cmp
push
jmp
sub
es
jecxz
xchg
jle
insl
andb
mov
dec
inc
add
push
push
or
inc
lcall
lods
out
sub
jns
shl
xor
add
jg
and
es
mov
cld
bound
sbb
add
mov
cs
movsb
ret
fcmove
sarb
sbb
gs
das
push
inc
adc
xchg
cmpsb
ss
ds
ss
das
sbb
mov
stos
sub
cmp
and
rorl
scas
lret
cmpsb
dec
sub
and
mov
add
arpl
push
fs
call
out
and
fs
out
dec
and
out
mov
jge
or
xor
mov
rorb
and
scas
shrb
inc
es
xchg
mov
xchg
es
pushl
icebp
mov
aaa
push
cwtl
pop
push
mov
mov
inc
xchg
jmp
jmp
es
lds
arpl
mov
lock
mov
cmp
inc
or
icebp
es
sti
sbb
pushf
push
ljmp
xchg
jle
dec
scas
or
enter
in
loopne
push
jno
pop
sti
fcompl
es
std
or
dec
dec
in
mov
cmp
mov
push
push
pop
outsl
push
cs
push
lods
sbb
xchg
jge
dec
mov
fs
into
sbb
out
xor
mov
scas
sub
mov
xor
test
push
xor
in
fstpl
mov
loope
mov
es
ss
stos
and
es
pop
pop
sub
mov
cmpl
inc
cmp
sub
rorb
inc
pop
mov
hlt
inc
cmp
cmp
mov
je
gs
jae
and
sbb
or
out
lcall
fstl
and
iret
push
sub
add
sbbb
mov
sbb
lods
jno
imul
jbe
pop
xor
es
pop
mov
repnz
arpl
cmp
mov
iret
pop
into
sbb
ss
call
push
adc
pop
cmp
pop
mov
inc
das
repz
lock
sbb
jno
iret
enter
sti
adc
outsb
push
dec
scas
sbb
pop
mov
je
les
dec
pop
pop
scas
bound
into
mov
gs
adc
cs
call
sbb
cmpsb
stc
out
lret
stos
and
jbe
push
cmp
sub
jo
inc
inc
and
inc
mov
or
ds
mov
xchg
cmp
pop
cmp
cmp
cli
push
add
decl
cld
idiv
jno
sti
pop
sti
cli
sti
jl
add
add
stc
or
jne
repnz
je
fdivrp
cmp
sti
jnp
or
in
subb
mov
shrb
imul
jg
cld
imul
movsb
xorb
lea
mov
testb
icebp
aaa
push
aaa
std
aaa
jg
cld
aaa
pop
or
dec
mov
idivb
push
cmp
cmp
fldenv
stc
cmp
or
inc
add
decl
cli
lods
stc
adc
sti
sahf
sti
pop
sti
fistpl
xchg
lods
pop
insb
ret
jmp
stos
int3
imul
imul
inc
and
ret
xchg
aaa
dec
inc
or
xor
aaa
jno
pop
pop
fwait
and
adc
jecxz
ret
adc
roll
pop
inc
fiaddl
inc
pop
sub
ret
in
test
addr16
in
mov
inc
out
inc
stos
inc
imul
inc
pop
inc
adc
inc
xchg
inc
push
inc
sbb
inc
pop
inc
sbb
mov
dec
cmp
xor
cmp
test
outsl
mov
mov
fnstsw
mov
test
mov
cmp
lcall
cmc
pushf
aaa
sbb
fwait
jns
fcompl
adcb
push
push
and
add
add
incl
out
stc
dec
cld
or
push
stos
sti
xlat
ret
adc
inc
popf
inc
pusha
mov
aaa
pop
ss
dec
bound
jcxz
scas
inc
insl
aaa
das
aaa
ljmp
aaa
mov
adc
fidivl
cltd
xchg
shll
outsl
push
leave
addr16
imul
mov
pop
aaa
mov
aaa
pushf
aaa
inc
les
dec
push
ss
hlt
ds
jle
cmp
cmp
push
movsb
mov
inc
add
mov
add
xor
loope
inc
daa
sub
pop
inc
pop
ss
les
jecxz
sub
push
fcompl
add
lcall
cmpsl
ss
addl
imul
insb
mov
mov
jecxz
ret
in
pop
cmpsl
jmp
xorl
in
xchg
xor
iret
sub
loope
inc
test
movsl
inc
dec
mov
sbb
arpl
ja
push
lahf
xchg
inc
cmp
gs
and
outsb
inc
add
mov
inc
sub
xor
loope
inc
les
movsb
jns
or
js
dec
and
mov
sub
shr
push
shl
cmc
push
add
push
bswap
rcl
adc
push
mov
sbb
shl
inc
mov
and
mov
cmc
shl
setnp
jmp
inc
bt
bt
not
stc
jmp
jle
int
int
cmp
scas
test
mov
inc
or
jns
aam
lds
inc
daa
les
subl
cltd
mov
or
scas
addr16
jbe
mov
int3
jns
xchg
nop
fimuls
test
jmp
mov
call
call
dec
mov
subl
jmp
aam
fnstsw
sbb
jae
mull
mov
ss
lock
mov
xchg
jns
lds
mov
in
int3
jns
and
jmp
push
jmp
setb
pushf
lea
jmp
push
lea
je
jmp
movsbw
lea
pushl
movzbl
call
bt
push
cmp
call
pusha
pushl
lea
jae
shrd
mov
dec
stc
bswap
mov
neg
mov
push
clc
cmp
xor
pusha
test
movw
pushl
repnz
jmp
cmp
sub
pusha
push
jmp
dec
lock
mov
adc
dec
scas
push
vpsllw
or
push
cmpsb
iret
lahf
mov
xor
xor
into
jne
jns
push
bound
sub
pop
or
std
icebp
mov
movsl
outsl
orl
stos
or
out
je
loop
and
push
xchg
ror
lret
pop
out
loop
xchg
push
popf
icebp
mov
jns
test
adc
dec
jno
addr16
add
mov
stos
mov
ficoms
or
jp
dec
mov
jns
ror
or
and
fs
je
cmc
stc
bt
stc
sub
call
pushf
call
lea
je
pusha
mov
pushf
pushf
lea
jmp
xor
mov
pusha
xchg
ss
pop
pop
rcll
ret
out
or
push
xchg
pop
inc
mov
and
add
inc
and
adc
imul
ljmp
mov
mov
inc
xchg
imul
mov
xchg
inc
and
sub
xor
mov
aaa
jb
jbe
in
add
mov
cmp
ret
mov
test
and
nop
xor
and
ret
int3
jns
add
push
cld
insb
or
jmp
sub
cmc
cmp
pusha
call
mov
pop
jno
mov
dec
rorb
and
mov
hlt
or
push
mov
insb
mov
dec
sub
lock
jmp
lret
mov
add
and
fisubl
jle
mov
ds
mov
mov
pop
xor
mov
aad
jns
subl
je
pushf
mov
jmp
jmp
mov
pushf
pusha
pushf
pushf
pushl
ret
or
pusha
pushf
call
cmpl
nop
sbb
notb
jp
movb
jae
adc
mov
sub
cmp
dec
xor
pop
cmp
adc
std
sbb
mov
repnz
lahf
xor
add
andb
sbb
hlt
sbbl
adc
fisttpll
inc
sbb
pop
inc
in
xor
cli
das
xor
aaa
mov
sbb
scas
out
adc
mov
dec
dec
mov
and
xor
fs
into
mov
int3
jns
fcmovbe
int
pop
aas
add
mov
lea
je
test
stc
or
push
jmp
pushf
call
pusha
lea
jne
push
pushf
pushfw
popw
pusha
inc
pushl
mov
lea
jnp
pushf
dec
clc
neg
pusha
sub
pusha
call
shll
in
mov
int
repnz
xchg
out
jnp
fcomps
jb
mov
sbb
pop
mov
fisttps
fucomi
or
scas
out
sbb
inc
les
or
test
or
adc
imul
jo
cld
leave
nop
lock
scas
cli
sarl
in
rcrb
ds
andl
and
arpl
cbtw
adc
sti
dec
fdivrs
out
dec
lods
jg
jle
cmp
jmp
mov
std
cmp
dec
mov
lcall
push
push
jbe
lret
jns
insl
out
ret
std
test
xor
notb
fstl
sub
mov
arpl
jns
lea
add
lock
test
and
push
sub
xchg
jecxz
inc
aad
mov
inc
js
pop
in
popa
sub
fisubl
xlat
int
jge
push
jp
call
insb
xchg
ret
pop
rol
cmp
fs
add
clc
jg
xchg
mov
sbb
loop
or
lcall
mov
and
sbb
loopne
xor
pushf
mov
pushf
lea
jne
pusha
call
dec
cmpsl
aaa
xchg
jmp
lahf
and
lods
out
ja
repnz
ficompl
xor
pop
mov
aas
jno
in
stos
inc
dec
rclb
sbb
dec
mov
xchg
xor
dec
cmpb
in
push
push
daa
push
pop
scas
outsl
das
adc
inc
jle
sbb
je
xchg
push
aad
aas
jbe
xchg
insl
out
test
cmp
dec
out
imul
mov
pop
neg
outsl
sahf
sub
call
mov
stos
dec
movsb
mov
insl
orl
jb
pusha
movsbw
jmp
cmc
call
pusha
pushf
movl
pushf
movl
pushf
lea
jmp
lea
movsbw
pop
lea
lea
mov
pushl
movb
jmp
pusha
mov
bsr
movsbl
add
mov
stc
cmc
pushf
stc
sub
call
cmp
mov
lds
dec
es
and
sbb
mov
pop
dec
pop
jle
cmp
lcall
jmp
sbb
mov
jne
mov
adc
mov
sbb
sbb
sti
pushw
ret
bound
sub
shr
inc
ret
and
mov
xor
decb
aam
pop
mov
xor
xor
rorb
or
lods
cmp
adc
adc
je
cld
int3
jns
and
pop
cmp
pushl
popl
call
aaa
incl
mov
fnstcw
frstor
subb
lock
xchg
adc
and
ja
aas
cmpsb
imul
sbbb
mov
lock
dec
hlt
add
call
bound
mov
jnp
push
inc
mov
jns
repnz
jb
cmp
lds
test
add
pop
cmp
mov
mov
lret
ds
stos
cmpsb
xchg
cltd
icebp
lock
das
in
mov
jbe
ret
dec
leave
loop
jo
inc
inc
ret
cmp
cmpsl
movsl
ljmp
aad
jmp
push
daa
push
imul
jne
aam
mov
jno
idivl
in
hlt
cltd
jmp
mov
shll
push
jns
cmp
lock
mov
mov
pop
mov
cmp
loope
movsb
mov
scas
sub
movsl
fsub
mov
sub
cmp
jne
je
mov
sbb
divl
out
jecxz
out
push
sti
pushf
movsb
enter
inc
jb
mov
xchg
in
mov
aaa
pop
les
sub
stos
in
mov
sub
mov
rorb
ret
or
imul
cmpsb
add
outsb
fstpt
dec
xchg
lea
sti
mov
dec
aas
jp
push
or
adc
mov
mov
popa
lock
jns
int3
jmp
mov
in
and
sbb
or
mov
rcl
add
insl
xor
xlat
popa
adcl
inc
hlt
sub
mov
dec
jle
jno
sbb
iret
inc
ret
pop
out
jns
mov
not
dec
dec
shr
not
neg
movb
sbb
sub
jmp
jg
xchg
lahf
mov
pop
pop
jg
xchg
mov
pop
xchg
xor
mov
sti
idiv
mov
sbb
xchg
pop
or
lea
xchg
xchg
ljmp
push
lahf
mov
jne
test
fisubl
gs
jecxz
mov
ret
cmp
imul
or
loopne
popf
adc
jns
jmp
sahf
push
add
mov
pushf
lea
call
push
pusha
mov
pushf
push
mov
pusha
lea
jmp
pushf
mov
jmp
jb
xor
test
adc
xchg
mov
pop
das
fimull
jbe
jmp
xor
cmp
jo
xor
and
daa
out
nop
xor
pop
inc
sbb
pop
push
jbe
jno
pop
out
aaa
and
xchg
rol
xchg
adc
push
test
mov
fs
lret
jge
inc
push
das
ret
xchg
pop
sbb
test
dec
cs
stos
xchg
pop
jl
repz
int3
sbb
xor
pop
or
dec
mov
push
ljmp
cmp
pushf
stc
sub
cmp
cmp
call
setne
jmp
pushf
movzwl
call
lea
jb
pusha
pushf
pushl
pushf
pushl
ret
mov
pushf
call
pushl
pushf
push
lea
call
jmp
jmp
inc
mov
push
call
test
mov
pushf
cmp
cmp
mov
lea
jb
cmp
test
cmp
push
call
pushl
pusha
call
movl
movw
lea
jmp
fmuls
xor
call
or
orb
jge
jb
int
push
add
mov
pop
mov
loopne
shll
jne
loop
mov
out
jge
imul
imul
lret
mov
sbb
icebp
sub
aaa
dec
push
cs
cmp
jg
popf
pop
mov
pop
and
mov
repnz
iret
outsb
pop
push
xchg
shl
clc
and
mov
jb
test
xor
jge
or
jns
out
pop
mov
or
sti
sub
arpl
dec
jbe
inc
push
out
not
das
mov
dec
subb
pushf
fcoml
inc
jnp
inc
negl
out
jge
mov
cmp
or
loop
adc
jno
jns
rcr
clc
mov
stc
test
shl
jns
push
push
pushf
lea
je
call
add
dec
outsl
popa
fs
imul
add
xorb
lcall
pusha
pusha
pushf
pushf
pushl
ret
pushf
pusha
lea
je
stc
cmp
call
xor
stc
call
insl
lods
sub
icebp
clc
fdiv
adc
push
xchg
mov
xlat
xlat
orl
test
shrb
test
push
xchg
les
scas
pop
dec
inc
mov
fnstenv
mov
int3
jns
push
cmovl
cmp
mov
jmp
mov
jns
jbe
mov
clc
fdiv
add
dec
cld
cltd
insl
and
xchg
cwtl
push
imul
cmp
in
and
pop
js
or
pop
out
test
popa
pop
hlt
cs
enter
mov
repz
inc
mov
sbb
jle
leave
scas
inc
ret
push
int3
jns
lods
enter
xchg
adc
in
shrl
inc
pop
xchg
enter
gs
repz
jne
fdivrl
sub
xchg
bound
jmp
xor
mov
int3
std
pop
xor
out
ds
movsl
into
jnp
call
call
inc
add
pop
xchg
inc
cmp
rorb
and
in
out
jecxz
in
mov
add
pusha
scas
inc
inc
mov
data16
jns
ds
enter
sub
mov
add
pushf
lea
jne
adc
ror
xchg
mov
rcl
sbb
sbb
sub
add
mov
clc
cmc
stc
push
sub
pusha
cmp
clc
pushl
pushl
popl
cmc
mov
cmp
pusha
call
and
bt
cmc
add
push
pushf
pushf
lea
jmp
movl
push
jmp
pusha
lea
ja
test
sub
test
cmp
add
jmp
movl
pushf
lea
jmp
lea
je
push
not
setle
movsbw
lea
bswap
xchg
pushf
pushl
movzwl
call
lods
lock
xor
fwait
mov
jns
in
movsb
cmp
mov
pushw
xchg
sub
push
inc
test
sahf
jmp
sbb
add
lods
sbb
lods
insb
shll
rcrb
and
push
jnp
ja
xchg
mov
jecxz
add
loope
roll
jb
mov
push
dec
int
je
pop
repz
cmpsl
popf
sahf
test
rcll
mov
das
pop
pop
adc
cli
dec
test
cmp
xchg
enter
pop
inc
xor
mov
fiadds
stc
out
clc
mov
int3
stc
pop
fsubs
cmc
mov
xor
loope
mov
push
fucom
out
fs
push
cmp
dec
inc
loopne
pop
xor
inc
iret
fisttpll
ret
hlt
cwtl
sahf
test
nop
daa
inc
test
and
mov
jno
dec
out
sub
push
iret
fwait
adc
and
sahf
sub
or
mov
popa
gs
jmp
ficoms
push
inc
frndint
push
movl
pushf
push
pushf
pusha
lea
jmp
xor
lea
call
lea
je
cmc
sub
stc
cmp
call
pushl
pushf
mov
lea
pushf
call
lea
call
jmp
pushf
add
cmc
test
cmp
pusha
jmp
jmp
push
cmp
pushf
lea
je
pushf
cmp
cmp
pusha
jmp
add
clc
movzwl
movzbw
neg
mov
pusha
test
add
clc
cmp
pusha
bt
mov
jmp
cmc
or
pusha
jmp
add
test
movzwl
rcl
bswap
btr
mov
test
movb
clc
cmc
add
jmp
cmpb
call
pushf
movb
imul
cmp
add
movw
pushf
pushl
movw
lea
jmp
jmp
cmpsb
cmpsl
xchg
shlb
inc
pop
insb
lods
mov
pop
in
imul
inc
fmulp
mov
lret
cli
pop
mov
std
xchg
in
xchg
jne
jnp
mov
xchg
scas
pop
lods
and
push
hlt
mov
lcall
pop
ret
cld
lods
add
std
jne
sbb
lods
aaa
pushf
add
mov
jbe
adc
inc
mov
clc
jne
push
xchg
int3
jns
aad
add
int3
mov
incl
jmp
aam
or
outsb
popf
fldt
push
mov
mov
loop
push
dec
jns
fs
repnz
repnz
mov
mov
das
dec
and
mov
ss
mov
sti
shlb
xchg
xchg
jnp
jno
push
in
cltd
je
pcmpgtw
repz
mov
sub
cwtl
lds
nop
push
cmp
dec
fldenv
inc
pop
push
pushf
lea
je
call
jne
gs
xor
fs
insb
add
andl
dec
mov
ret
cld
mov
les
pop
xor
outsl
test
xor
mov
lock
adc
sub
pop
aaa
in
pushf
xchg
or
nop
jl
dec
mov
mov
sub
push
jno
sbb
cmpsb
insb
or
sub
std
xchg
push
adc
enter
xchg
jl
jnp
and
pop
xlat
inc
dec
std
lret
mov
sbb
mov
adc
int3
jns
movsl
rcrb
pop
sti
add
inc
and
mov
insb
and
movw
pushf
lea
jmp
mov
mov
or
jge
inc
sbb
mov
lahf
add
inc
mov
xor
out
and
fisttpl
arpl
dec
insl
popa
xor
xor
sbbl
mov
sbb
iret
inc
adc
ss
mov
pop
push
test
loopne
dec
imul
les
fcompl
sbb
nop
dec
stc
or
lock
mov
xchg
dec
lret
mov
xor
daa
testl
shlb
fldcw
dec
xchg
adc
test
sub
xchg
je
sbb
cmpsl
stos
ljmp
sbb
in
rcrl
cmpsb
pop
push
sub
mov
inc
out
arpl
test
cmpsb
daa
inc
aas
xchg
adc
ja
sub
ja
xchg
push
adc
mov
push
jl
jmp
cmp
cmpsl
outsb
push
fisttpl
xchg
mov
ret
insl
mov
rcl
mov
xor
xchg
add
or
push
add
add
call
jmp
das
jl
xchg
adc
mov
aas
xor
outsl
out
out
iret
mov
stos
ret
addb
mov
pop
shl
or
pop
test
add
sarb
mov
je
in
lock
or
inc
sbb
lcall
inc
adc
mov
mov
xor
mov
mov
das
out
pop
fwait
cmp
xchg
loop
xchg
int3
jns
mov
pushl
lea
ja
pushf
pusha
call
lods
lock
loope
std
repz
aad
movsb
cmp
xchg
fcoms
cmc
lret
test
pop
out
inc
sub
or
cmpsb
sbb
jecxz
jmp
jmp
add
insb
add
xchg
mov
push
aad
dec
jg
jecxz
and
pop
sbb
movsb
xchg
xchg
pop
inc
aad
ret
iret
mov
lahf
lret
aaa
adc
cmc
inc
test
jle
mov
inc
inc
aad
xchg
mov
inc
shlb
fiadds
out
negb
push
das
les
xor
fs
cmp
frstor
inc
sbbb
xlat
or
leave
pop
cmp
and
jmp
inc
inc
stc
enter
fists
sub
out
mov
xor
xchg
jmp
add
into
jecxz
or
add
sbb
daa
bound
dec
and
pop
arpl
int
push
jno
out
xchg
mov
movzbw
lea
call
not
stc
neg
mov
bt
mov
cmpb
pushl
mov
lea
jne
ror
setb
neg
sub
mov
cwtl
mov
mov
add
call
mov
test
jmp
lea
jne
movzbl
not
movb
not
lea
pushf
mov
jmp
adc
in
arpl
dec
push
xchg
adc
outsb
rcll
and
enter
mov
fs
or
lret
shll
repnz
push
insl
out
test
ret
icebp
sbb
into
dec
dec
movsl
cld
lock
test
lock
int
jl
cmpsb
cmpsl
sbb
inc
scas
sub
cmp
sub
mov
sbb
dec
loopne
adc
nop
stc
adc
mov
orl
or
out
incl
cmp
call
arpl
je
outsb
repz
jecxz
add
cli
push
data16
rcl
sub
sbb
mov
sub
std
js
mov
je
xchg
sbb
test
lret
dec
loope
sub
fistl
pop
sbb
sub
dec
outsb
insl
movsl
fdivr
sarl
xchg
shll
sub
cmpsb
push
hlt
inc
mov
das
fisubrl
insl
mov
lods
pop
mov
mov
mov
test
sub
outsb
popa
lcall
shr
stos
fstpt
xchg
insb
insl
jg
push
mov
subb
mov
sub
outsb
jg
jns
mov
js
insl
adc
inc
rcrb
xchg
dec
push
into
dec
stos
mov
fsubrl
sbb
and
mov
js
outsb
lret
jae
pop
enter
mov
notb
arpl
dec
out
inc
and
movsb
ss
xchg
xor
add
lods
hlt
fxch
sub
out
mov
mov
sbb
adc
imul
xchg
dec
jo
fmull
leave
popf
jge
pop
sbb
stc
mov
jae
aaa
ds
mov
cmpsb
push
aad
xchg
test
sub
pusha
clc
movb
repnz
push
lea
jne
bswap
mov
rcl
sub
stc
mov
push
sub
movw
pusha
movw
pushl
popl
jmp
test
cmp
cmp
jmp
and
mov
cmp
out
cmp
sbb
fs
pop
or
mov
or
sub
mov
out
cmp
jmp
xchg
add
ret
test
fsts
pop
outsl
sbb
arpl
cmp
aas
fxch
mov
inc
mov
fmul
sbb
subb
add
ja
mov
movsl
jno
jmp
sbb
sub
jo
cmp
lock
nop
icebp
int3
jns
jno
pusha
cmp
push
call
jmp
pusha
lea
ja
pusha
movw
lea
jmp
ror
cmp
sar
neg
xor
pusha
mov
stos
pusha
not
mov
lea
jmp
loop
jle
in
dec
mov
or
fisubrl
ficompl
int3
int
mov
fisubrl
arpl
sub
adcb
popf
repnz
fbld
jo
rclb
push
sbb
loop
dec
fcomp
jle
and
adc
std
cmpsl
mov
adc
stos
call
mov
mov
jbe
and
loope
push
mov
lock
js
xchg
pop
orb
out
test
nop
sbb
rolb
rcl
fiadds
xchg
subl
hlt
adc
mov
pop
cmp
mov
xor
repnz
in
rcr
pop
scas
mov
sub
cmpsb
adc
mov
popa
stos
test
pop
dec
rol
arpl
mov
lods
dec
lret
xor
dec
or
in
cs
lea
mov
or
das
out
sub
fs
mov
cmp
in
or
inc
das
in
jo
sub
xchg
adc
push
or
cmpps
fwait
lea
jecxz
mov
test
daa
add
mov
sbb
dec
test
test
lret
xchg
adc
dec
insb
or
outsb
push
ljmp
inc
cmp
jle
or
fnsave
push
in
or
and
loope
sub
int3
in
and
lock
cmpsl
or
test
fsubs
jecxz
int3
insb
insl
dec
popa
mov
pushf
stos
lahf
outsb
js
xchg
or
mov
mov
into
popa
into
test
gs
scas
push
cs
dec
mov
aaa
dec
sub
imul
imul
sti
mov
mov
mov
sub
sub
gs
pop
insb
mov
out
and
xor
fcompl
enter
add
in
xor
lods
clc
inc
mov
lahf
roll
int3
es
cmc
test
mov
lea
je
pushf
cmp
jmp
push
push
lea
jne
xor
mov
call
test
lea
jbe
pusha
lea
je
clc
pusha
sub
stc
cmp
call
xchg
fs
add
imul
imul
ret
and
adc
fisubrl
fisubrs
out
or
imul
xor
hlt
mov
mov
cmpsb
mov
repz
out
add
jns
push
dec
lcall
fs
mov
call
xchg
cwtl
lods
in
mov
cmp
jnp
push
pop
shll
push
sbb
addr16
pop
nop
push
cmp
sti
sbb
cmp
pop
lock
hlt
out
mov
mov
xorl
out
stos
nop
adc
lods
les
xor
sahf
cmp
stos
inc
add
nop
jbe
jmp
pop
mov
mov
add
test
push
insb
jbe
repz
lret
xchg
mov
jbe
push
add
sbb
test
stos
pop
leave
sbb
fisubl
int3
lret
lcall
decl
das
lds
ss
mov
out
inc
fld
mov
lcall
push
xor
xchg
jg
push
sub
xchg
push
imull
mov
rolb
ret
push
das
jne
push
xchg
or
notl
stos
imul
mov
fmulp
jns
push
pop
mov
inc
dec
mov
inc
mov
in
fidivl
mov
je
popa
not
das
mov
cmpsl
data16
push
or
in
dec
pusha
inc
xor
xor
fs
jo
cmp
adc
jb
es
xchg
stos
mov
subl
inc
xor
iret
in
dec
lcall
push
mov
inc
bnd
push
xchg
or
stos
imul
mov
sbb
jns
mov
pop
clc
sub
pop
cwtl
dec
in
movsb
mov
cltd
repnz
out
cmp
cmpsl
jbe
xchg
adc
lret
push
fisttpll
enter
jno
aas
das
mov
ret
call
mov
push
fdivl
mov
aam
es
mov
rcrb
add
jns
push
dec
inc
insl
sub
push
enter
and
inc
mov
popf
movsl
mov
or
push
je
sub
outsb
mov
adc
nop
mov
loop
sahf
mov
sbb
dec
insl
movsb
pusha
and
fwait
je
adc
or
mov
jp
cmp
push
in
lahf
jg
nop
mov
mov
bound
mov
das
xor
ret
add
xor
jecxz
into
outsb
out
test
in
lcall
sub
mov
pop
push
dec
aam
in
and
vphaddbq
push
gs
add
repnz
scas
add
iret
cmp
sub
sti
sbb
inc
lret
dec
movsb
and
dec
dec
cltd
sbb
dec
fidivl
jns
jno
test
movl
push
mov
push
jmp
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
test
jae
jmp
leave
add
push
inc
dec
push
or
pusha
lea
je
call
movb
movl
pushf
jmp
pushf
pushl
popl
pushf
pushl
ret
pushf
movl
call
jmp
movb
movl
movw
movb
lea
jmp
lea
jb
bswap
pushf
mov
push
movb
pushl
ret
stc
neg
pushf
sub
push
ror
call
rep
not
mov
pushf
lea
jmp
jp
mov
mov
dec
cmc
repnz
hlt
pop
insb
ret
stos
jo
cs
mov
fisubrl
outsb
xor
imul
mov
jg,pt
cmpsl
shrb
adc
add
imul
addl
mov
dec
fwait
cmp
jle
pop
add
test
test
mov
rol
ret
dec
add
xchg
xchg
xchg
mov
adc
push
and
mov
xor
pop
ss
movsb
pop
sti
xchg
or
add
jnp
mov
mov
fistpl
push
mov
loopne
movq
sbb
js
jns
adc
lret
lea
not
lea
call
lea
jne
pushf
lea
call
pusha
push
movb
pusha
lea
jmp
call
add
add
cmc
shl
push
jmp
mov
bt
stc
cmp
jmp
push
pushf
lea
je
jmp
pushl
pushf
lea
jne
movsbl
mov
stc
mov
bts
sub
or
shl
or
btc
mov
test
cmc
sub
call
out
dec
clc
fldenv
sbb
push
inc
imul
gs
fistl
cmpsb
pop
adc
aas
sub
cwtl
lret
lock
mov
fistpl
pop
rcll
adc
mov
lock
imul
in
inc
fists
je
insb
sahf
jns
xchg
test
stc
arpl
inc
sbb
add
idiv
sbbb
sub
enter
pop
push
test
mov
pshufw
fists
or
out
in
out
das
jge
sub
enter
test
imul
mov
subb
cmp
in
push
iret
mov
mov
int3
jns
inc
pop
pushf
or
pushf
jmp
lea
mov
call
push
pusha
call
xchg
xor
lods
cmpsl
je
cmp
daa
sbb
mov
sub
nop
ljmp
or
nop
pop
fisttpl
movsl
stc
mov
dec
push
sbb
movsl
xor
add
mov
paddd
aaa
pop
outsb
fimull
mov
lods
lret
sahf
mov
addl
mov
mov
pushf
push
ja
cmp
js
mov
loope
or
mov
inc
xor
fistl
lea
into
inc
not
xchg
xchg
push
xchg
popf
dec
jns
ror
aaa
bt
test
test
pushl
pusha
call
push
push
or
push
pop
cmpb
ss
insl
sbbl
jb
and
movsb
push
aas
adc
lret
mov
adc
fadd
xor
cld
int3
jns
dec
bound
pop
cmove
cs
pop
mov
jb
or
xlat
xor
fcmovnbe
xchg
pop
fcomip
ficoms
std
cmp
lret
mov
jbe
inc
aas
fistpll
adc
rcrl
cmp
jle
adc
cmpb
mov
pusha
ds
loope
cmpsl
lds
cli
inc
mov
dec
pop
lock
jns
mov
and
mov
add
cmp
pop
xchg
mov
call
inc
jecxz
and
mov
xor
nop
int3
jns
shlb
movsl
pop
sub
dec
mov
adc
sbb
aas
loopne
inc
sbb
fiadds
cmp
jnp
cltd
inc
sbb
push
add
pop
inc
xchg
loop
sub
add
imul
jo
pop
out
pop
adc
movl
sub
aad
push
and
sbb
sbb
adc
loop
aaa
fstpl
roll
mov
cmp
pop
xchg
xor
nop
and
addb
push
mov
sub
dec
sahf
xchg
xor
dec
sub
mov
push
cmpsl
add
andb
xchg
or
mov
imul
lods
mov
xchg
js
adc
mov
pop
xchg
lock
std
jl
xlat
sub
mov
stos
fdivl
pop
call
sbbb
lock
jns
lret
lea
ja
call
cmpsl
shll
xlat
lret
pop
icebp
lock
sbb
adc
push
ljmp
hlt
mov
sti
jl
push
add
jbe
nop
hlt
out
inc
jb
fcomp
imul
adc
fildl
ror
inc
icebp
or
mov
scas
cmpsb
pop
fsub
and
mov
mov
or
aad
mov
cltd
mov
sbb
out
xlat
dec
add
aad
sbb
imul
cld
sbb
cmp
add
mov
or
inc
arpl
aaa
lds
lock
enter
jl
iret
add
cmp
mov
mov
imulb
pop
lea
push
add
mov
pop
cmc
mov
ret
adc
inc
scas
xlat
into
sbb
push
mov
nop
mov
jmp
outsb
adc
int3
jns
mov
test
or
call
mov
shr
clc
add
xor
jmp
call
movb
lea
je
cmp
je
bt
pusha
sub
jmp
xor
jmp
push
mov
push
mov
or
push
pop
sbb
outsb
sbb
cmp
mov
sub
nop
sbb
adc
fwait
or
mov
xlat
dec
fsubr
push
call
adc
fcoml
movsl
in
sub
pop
sbb
push
xchg
sbb
paddusb
mov
in
imull
xor
push
cmp
arpl
das
test
cmc
jb
lds
jmp
loop
mov
adc
clc
je
lock
jns
call
pop
pop
mov
andb
inc
and
rcll
test
cmc
jb
daa
push
push
ljmp
xor
push
imul
repnz
movl
adc
out
mov
pop
push
mov
mov
sub
mov
in
cmp
sub
jns
mov
push
call
pusha
pushf
jmp
arpl
mov
jnp
mov
sbb
jmp
push
imul
incb
mov
jbe
repz
mov
sbb
in
or
adc
pmulhw
add
sbb
adc
mov
push
gs
jae
mov
imul
subb
dec
jbe
xchg
loopne
inc
xchg
lahf
fs
das
mov
pop
in
mov
push
dec
arpl
ficoml
str
jmp
pusha
call
sub
addb
xor
test
xchg
or
in
loopne
cmpsb
xchg
imul
dec
xor
sbb
fwait
dec
aam
std
int
icebp
pop
xchg
in
sub
xlat
stc
and
sbb
add
push
push
jecxz
inc
and
sub
stos
popa
push
aam
hlt
xchg
jge
loop
mov
push
mov
lret
pop
add
fildll
add
aad
orl
or
mulb
mov
in
mov
fs
stc
popf
sarb
jge
seto
pop
rcl
fs
jle
push
fs
push
and
cltd
outsl
fidivrl
loopne
mov
jge
jmp
int
enter
push
pop
popf
popa
popf
push
fdivrs
aaa
scas
xor
jl
test
jl
nop
es
daa
in
adc
jns
jecxz
popf
aaa
lea
shrl
xchg
pop
add
adc
fisubs
pop
pop
cmpsl
cmp
sbb
dec
imul
add
into
sub
dec
mov
std
mull
int3
xor
push
aas
mov
inc
cld
xor
and
pop
inc
pop
lahf
mov
cs
jl
xor
repz
imul
jbe
cmpsl
mov
outsl
xchg
add
push
mov
push
lea
jmp
movl
jmp
jmp
push
call
aaa
pushf
jmp
pop
mov
jne
repnz
jg
pop
cmpsb
cmpsb
fsubrl
mov
fincstp
out
mov
or
sub
sbb
fildll
dec
mov
push
hlt
and
fdiv
or
pop
scas
fnstsw
in
jbe
out
jp
mull
loope
mov
nop
sbb
inc
roll
int3
mov
push
sbb
test
sbb
jns
test
cmp
test
jne
jmp
movsb
push
stc
dec
xchg
or
loope
faddp
pop
insl
jne
sub
nop
das
mov
insb
loope
push
dec
inc
dec
lcall
cmp
mov
dec
jns
ljmp
ret
incb
dec
mov
add
lea
cmc
xchg
sub
push
inc
lret
add
cmpsb
shl
cld
or
jb
jp
cmp
scas
int3
jns
dec
data16
mov
lea
jbe
pushf
pushf
lea
ja
pusha
pushf
jmp
mov
pop
idivb
add
ret
mov
xor
stos
jecxz
jae
mov
dec
mov
add
mov
mov
ror
ja
repz
push
mov
inc
into
jnp
push
fldl
aas
scas
int3
mov
add
jns
test
push
sbb
mov
test
cmp
dec
cltd
repnz
mov
dec
xchg
xchg
fnstsw
sti
mov
push
push
dec
clc
pop
in
imul
jle
cmp
or
scas
dec
xchg
mov
mov
sbb
enter
jle
lock
arpl
jg
int3
jns
jb
cld
movw
pushf
jmp
mov
push
and
fdivrp
cld
test
push
ljmp
inc
or
ficompl
xchg
inc
mov
jno
mov
inc
mov
cmp
in
fdiv
mov
enter
mov
insl
dec
testl
int3
jns
sbb
push
or
mov
mov
fisubrl
jecxz
xchg
push
push
add
cmp
xchg
sub
push
fnstenv
inc
xchg
or
sbb
inc
ja
mov
jmp
sub
in
pushf
cmp
jb
pusha
in
imul
adc
pop
movsb
js
leave
add
in
sbb
xor
ljmp
mov
push
pop
stos
sub
push
sbb
inc
cltd
sub
dec
popf
lods
and
aad
pop
into
mov
jae
cmp
jmp
lods
push
pushl
dec
jmp
push
pusha
call
push
pushf
lea
je
cmc
cmp
pusha
movb
add
movw
cmp
pushl
jmp
cmp
push
jmp
movzwl
lea
cmc
shrd
rcl
mov
push
add
cmp
mov
call
neg
movb
sub
stc
ror
test
xor
pushf
pushw
popfw
mov
mov
inc
push
adc
movb
movl
movb
pushf
pushl
ret
outsl
xchg
fnstenv
add
mov
mov
pop
ret
fistps
jge
loopne
stc
sbb
lds
fbld
xor
jb
daa
dec
mov
fcomp
lock
adc
jne
fs
sahf
inc
pop
in
shrd
mov
stc
cmc
pusha
and
cmp
add
pushf
push
lea
jmp
cmp
movl
test
mov
clc
test
jmp
lea
ja
pusha
bt
imul
call
inc
jmp
setnp
lods
call
mov
repnz
pushf
lea
jne
pushf
movb
pushf
movzbl
movb
mov
setne
lea
lea
movw
pushl
movl
movb
push
push
mov
movb
movb
pushf
pushl
ret
sub
clc
cmp
jmp
repnz
fmull
das
ja
lock
pop
int3
inc
sbb
inc
sub
xor
mov
adc
xor
add
addr16
jmp
lds
jno
stos
push
test
das
or
sbbl
inc
pop
stc
test
leave
call
je
cmpsl
xor
ja,pt
adc
sbb
push
and
jnp
and
inc
popa
int
arpl
insl
dec
mov
jns
or
pop
adc
shlb
imul
push
sahf
pushw
aaa
dec
in
push
cmp
loopne
adc
pop
cld
push
xchg
sbb
push
test
icebp
pop
and
push
fnstcw
shl
out
jnp
clc
jl
ja
fcoml
add
shrb
mov
pusha
jnp
mov
shll
or
mov
fisttpl
cs
lds
inc
add
call
cld
jo
test
add
xchg
pop
aas
jmp
add
jnp
xchg
jg
dec
fisubrs
xor
fwait
mov
jae
shll
imul
shll
jnp
push
cmpsl
cmc
stos
sbb
sbb
gs
xor
push
dec
mov
jo
mov
lods
out
pop
gs
shlb
xor
bound
dec
cmc
stos
sbb
pop
ds
and
inc
outsb
cli
test
push
nop
jle
mov
dec
adc
pushf
adc
std
sub
shll
jnp
bound
andb
xor
mov
dec
sahf
dec
dec
push
mov
jns
ror
mov
aad
movsbl
pop
pusha
pushl
ret
sbb
xor
add
cmc
movw
neg
add
shr
sub
mov
shrd
bsr
shr
movzbw
add
call
mov
add
add
jmp
xchg
push
push
out
inc
and
loopne
divb
jae
fwait
pop
std
into
and
insl
mov
dec
imul
nopl
fisttps
pop
or
imulb
lahf
bndstx
pushl
and
and
jns
out
ret
add
inc
jne
sub
stc
repnz
dec
inc
sub
std
sub
clc
lods
icebp
pop
movsl
mov
mov
insl
push
lret
add
xor
rolb
mov
popa
pop
je
inc
in
and
pop
push
jmp
xor
inc
mov
and
popf
stos
and
aas
in
dec
inc
mov
aaa
pop
push
cmp
adc
pop
shl
push
into
int
xor
fs
outsb
out
adc
sbb
jnp
lock
mov
shlb
repz
out
rolb
cmp
in
fisubl
loopne
setbe
push
push
popf
fmuls
xor
cmovl
dec
pop
and
cmpsl
jl
shll
jle
setl
dec
aaa
pop
out
out
insb
popf
fbstp
pusha
popf
adc
lahf
int3
adc
xor
mov
insl
cmpsb
pushfw
repnz
sub
aam
inc
mov
aaa
ror
jns
adc
xor
mov
mov
push
rcl
pop
mov
pop
cmpsl
xchg
inc
std
or
xchg
mov
jle
sbb
inc
addl
aas
mov
fildll
lahf
inc
fldln2
ficomps
xor
cmpsl
loope
fcomps
pop
push
push
mov
dec
cld
fs
mov
in
adc
dec
ja
rorl
and
and
mov
sub
outsl
mov
cmpsb
push
adc
out
insl
sub
outsb
test
test
outsb
mov
jae
shr
sbb
btr
sbb
mov
push
mov
mov
jmp
and
pushf
leave
mov
xchg
ficompl
dec
push
or
pop
iret
adc
lds
in
xor
sub
cmp
ror
or
repnz
js
and
cmp
sub
mov
mov
jle
push
push
or
push
fiadds
jle
stos
mov
data16
in
cmc
stc
test
scas
cmpsl
repnz
push
cs
xchg
ror
and
adc
fs
sbb
or
xor
dec
mov
jmp
in
jg
imul
jo
jle
outsl
cwtl
pop
mov
or
sahf
das
ffreep
jmp
lea
push
out
xchg
dec
outsb
repz
dec
jle
add
out
imul
fnclex
ja
or
popf
push
cmp
push
scas
or
or
cmp
xchg
mov
enter
sub
cmp
jns
inc
pop
pop
aaa
cltd
dec
jo
add
sbb
adc
sub
scas
dec
popa
dec
ljmp
inc
add
mov
and
push
add
xor
jne
and
movb
data16
sub
iret
xchg
and
insb
nop
popf
repz
cli
sbb
xchg
push
adc
adc
or
mov
aas
cmp
fcompl
fs
jns
repz
imul
btc
sub
push
dec
bsf
lea
stc
mov
shr
and
push
not
bswap
test
rcl
push
clc
movsbw
clc
lea
push
adc
shrd
jp
push
btr
inc
sbb
push
sub
jmp
push
movl
jmp
pushl
movb
test
pushf
jmp
jae
mov
dec
dec
mov
mov
jb
lods
cmp
inc
mov
xor
jae
shrl
into
cltd
inc
xchg
or
fnstsw
aad
mov
dec
bound
xlat
cmc
sub
cmp
lock
push
jne
pushf
popf
jae
jb
ja
inc
sub
ljmp
cmp
cld
mov
out
movups
popf
aad
insb
dec
in
loop
std
sub
hlt
aad
dec
mov
andl
mov
call
and
mov
cli
or
hlt
dec
data16
xor
inc
int3
jns
fstp
es
stos
movzwl
repnz
mov
add
jmp
mov
xchg
adc
xchg
insb
sarl
pop
in
lret
push
pushl
dec
repnz
mov
inc
and
mov
lahf
jb
rclb
repz
arpl
sar
cmp
push
jbe
jnp
inc
sub
rolb
xor
ljmp
mov
mov
test
lret
test
cmp
call
icebp
lods
jge
fwait
dec
imul
lock
enter
incl
in
nop
sbb
pop
and
shll
inc
fldl
jmp
mov
pop
or
psubw
jo
jl
push
mov
mov
add
mull
neg
adc
shl
jle
mov
push
push
lea
inc
inc
out
loop
lahf
cmp
hlt
xchg
inc
arpl
jg
adc
sbb
jnp
pop
jno
mov
arpl
dec
int3
jns
popf
cwtl
or
dec
mov
cmp
rorb
ret
mov
and
prefetchnta
jle
daa
or
idivb
je
dec
imul
pop
gs
push
sarb
push
decl
fldt
sbb
adc
stos
push
sub
loope
add
pop
leave
xchg
sbb
push
loopne
sbbb
or
test
pop
je
push
fstl
jp
or
mov
pop
stos
push
int3
jns
out
cmp
jmp
jmp
stos
push
sub
adc
popf
add
or
test
and
mov
scas
imul
jne
and
add
pop
ljmp
orl
sbb
and
aas
push
jbe
lahf
mov
fistpl
pop
leave
sub
inc
push
or
mov
std
loop
push
push
int3
jns
xchg
popl
sbb
mov
pusha
jmp
fsubrl
test
xchg
sbbl
psubsb
pop
hlt
fists
rol
mov
jno
push
bound
stos
stc
jp
cmc
pusha
fidivs
jle
pop
xlat
jle
daa
cmp
ja
sub
lds
fisubl
xor
mov
xor
ljmp
mov
mov
xchg
stos
popf
int3
jns
sub
or
rorl
dec
jl
clc
bt
test
add
pushf
pusha
mov
call
imul
gs
xor
cs
insb
add
pop
pusha
inc
inc
and
cmp
adc
push
aad
clc
pusha
mov
cmp
call
mov
mov
pusha
push
mov
jmp
xchg
call
sub
mov
gs
stc
dec
test
cmp
push
inc
push
mov
daa
stc
repz
loopne
sbb
cmc
mov
and
and
pop
cmp
stc
and
sbb
dec
ds
test
lods
movsl
mov
and
jp
in
fxam
pop
in
sub
cmc
xchg
outsl
outsl
pusha
sub
movsl
pop
pop
jne
mov
addr16
lcall
cmc
scas
es
pop
jae
add
pop
stos
pop
cmpsb
mov
xor
rcrb
sbb
add
jl
sbb
pop
and
popa
stos
jmp
pop
inc
fiadds
jp
lods
push
cmp
negb
pop
push
and
bound
xor
test
inc
sub
xchg
jp,pt
cmp
jle
pop
and
movsl
and
adc
sub
push
mov
sbb
outsl
adc
iret
test
push
fcoml
les
popa
movsl
mov
imul
and
adc
outsb
cmp
mov
and
jne
jb
fs
es
add
mov
add
sbb
idiv
stc
inc
out
push
xchg
mov
and
add
mov
test
jle
push
std
testb
notl
iret
outsb
and
stos
or
movsb
cwtl
sub
xor
loopne
push
and
mov
pop
fdivrl
test
out
scas
xor
inc
sbb
cmp
pop
fwait
sbb
movsl
inc
mov
inc
rcrl
cmpsl
cltd
ret
popf
loope
jne
adc
push
and
out
lea
lret
fcoms
fnsave
xor
lds
xor
testb
enter
and
xor
lret
lret
jle
sbb
push
outsb
pop
push
mov
movsl
rorb
mov
adc
mov
jbe
push
pop
pop
es
mov
pushf
pushl
mov
pushl
ret
pop
fsub
mov
test
scas
insl
mov
or
cmc
les
cmc
sbb
mov
inc
inc
daa
sbb
xchg
add
mov
jecxz
lock
xchg
pop
pop
and
mov
cmp
insl
shlb
jae
ds
push
ja
sahf
cwtl
jns
das
xor
sahf
mov
dec
fsubs
test
rcll
fcomip
adc
add
jmp
sbb
lock
push
sbb
clc
dec
xchg
mov
mov
jg
jl
mov
inc
fcmovu
mov
lock
or
xchg
lret
push
add
adc
outsb
loopne
stc
mov
loop
popa
or
in
test
inc
movsl
fs
dec
jl
mov
outsb
icebp
aad
inc
aam
es
int3
jns
xchg
mov
mov
lea
setno
mov
push
push
lea
jmp
push
pusha
movl
pushf
call
cld
push
leave
xorl
jge
test
push
pushf
lcall
fdiv
inc
mov
ds
xor
fucomi
jno
mov
pop
push
xchg
int
and
sbbl
pop
out
les
insb
push
mov
mov
mov
and
pop
push
orl
pop
lret
or
in
xchg
in
pop
adc
mov
inc
lock
mov
insl
push
inc
int3
or
pop
mov
int3
jns
ror
jmp
sarb
push
das
int
push
cmp
add
and
aad
dec
shrb
in
das
das
xchg
push
jne
jge
in
enter
add
gs
orb
pop
jbe
mov
mov
call
call
or
inc
mov
or
sub
inc
sti
sbb
cmp
in
cwtl
and
sbbl
inc
scas
iret
lock
ljmp
jne
push
cltd
repz
and
and
ljmp
loopne
sbb
pop
sbb
or
and
sub
clc
jmp
call
jo
jg
add
lea
test
sbb
fstl
stc
mov
mov
loop
lcall
ljmp
pop
mov
std
pop
test
sbb
es
push
jmp
sbb
fstpl
fsubs
enter
sbb
jg
rcrl
or
out
jecxz
mov
aaa
lock
insb
daa
int3
shll
cmp
sub
sar
out
fstpl
cs
adc
mov
mov
cmp
pushf
insb
lea
dec
mov
dec
iret
loop
mov
insb
imul
int3
jns
ja
test
add
outsl
mov
pop
xor
or
mov
lea
imul
xlat
test
adc
mov
mov
add
push
mov
stos
jge
ret
imull
adc
pop
scas
mov
xor
ljmp
or
add
mov
sbb
add
mov
mov
dec
pop
sbb
cmp
mov
les
mov
icebp
fldenv
imul
cmpsl
rclb
cs
inc
add
or
mov
rol
mov
enter
notl
int3
jns
lahf
xchg
or
xor
stc
pushf
movw
cmc
ror
test
pushf
mov
cmc
add
cmp
push
test
pusha
pushf
call
mov
xchg
call
lea
je
cmc
add
not
jmp
pusha
movl
movb
call
call
clc
mov
test
stc
jmp
movsbw
push
mov
pusha
lea
jmp
mov
pushf
movzbw
not
mov
push
mov
lea
pop
pushf
push
push
pushl
ret
lea
je
and
bts
sub
lea
test
inc
cwtl
mov
jmp
lea
jnp
pushf
movl
lea
jne
bswap
mov
call
call
push
jmp
movl
mov
pushl
popl
mov
pushl
ret
testb
repz
insl
adc
sbb
push
ret
dec
mov
add
js
call
and
jae
cwtl
mov
inc
lock
push
fwait
sbb
or
stos
test
mov
int
and
movsl
jecxz
sub
dec
mov
mov
mov
daa
seta
loopne
es
jecxz
sahf
xor
fists
int3
jns
jmp
xchg
jmp
push
dec
mov
movsb
push
lcall
gs
push
sbb
mov
fimuls
cmp
sub
test
push
mov
lea
push
jnp
call
lcall
add
out
mov
mov
sub
lds
add
push
cmpsl
jae
adc
and
xor
clc
push
hlt
cmp
sbb
imul
xor
fistl
jns
mov
mov
scas
push
pop
dec
mov
fs
lret
pop
xchg
or
xlat
and
movsl
push
sub
jns
inc
pusha
and
rol
mov
mov
int
call
mov
and
inc
lret
imul
jns
fistps
xor
insb
imul
loopne
mov
stc
pushf
ret
aad
lods
push
gs
mov
jo
inc
add
sub
jns
adc
pushf
movl
pusha
jmp
movl
pushf
pushf
mov
lea
jmp
mov
inc
imul
es
cmc
and
fdiv
arpl
lret
ds
xchg
jne
cs
xchg
or
jno
pop
pop
push
and
movsb
ret
and
jl
lret
mov
pop
mov
ljmp
lods
movsb
cmp
aam
movsl
adc
jmp
jo
mov
dec
sbbb
inc
jp
sbb
sub
sarl
adc
jmp
nop
sub
inc
movl
mov
mov
mov
lea
jmp
gs
xlat
lds
mov
loopne
xchg
xchg
mov
add
mov
and
dec
xor
pop
mov
pop
adc
pop
and
mov
jle
xchg
imul
and
jb
sbb
adc
dec
dec
pop
clc
clc
imul
stos
stos
aam
sbb
adc
dec
int
push
xor
or
sub
jns
mov
lea
call
pusha
mov
pushf
lea
jmp
call
pushf
lea
call
pushf
movb
lea
jne
pushf
mov
mov
pushl
lea
jmp
call
dec
in
jecxz
in
jmp
in
fdivrs
push
pusha
int
shll
jecxz
outsb
out
or
cmpsl
or
daa
pop
mov
call
xchg
mov
lret
pushf
popa
cs
loop
movl
cmp
and
lods
clc
les
mov
outsb
jg
push
sub
sti
sbb
pop
mov
in
jp
jl
out
mov
je
push
aas
push
xchg
cmpl
or
test
mov
adc
pop
hlt
xchg
lret
jmp
lds
sahf
jle
bound
shrl
adc
js
leave
sbbb
sbb
push
std
stos
mov
cmp
dec
fsubrp
fildll
fidivrl
fstps
aam
dec
jp
cli
shr
imul
in
popa
imul
movsl
add
push
sarb
fidivl
xor
fadds
xor
push
and
mov
xor
movsb
xor
pop
fwait
ja
mov
in
mov
imul
cmp
adc
pop
inc
and
sahf
xchg
jecxz
pop
fildl
cmp
mov
orb
cld
fstl
jne
mov
sti
addr16
lods
pop
jns
inc
repnz
aam
jns
adc
pop
lea
jae
jmp
push
pushf
pusha
lea
jne
shl
or
xchg
mov
shl
cmc
sub
add
shl
mov
bt
sub
clc
bt
test
pushl
bt
cmp
push
lea
ja
cmc
mov
sub
bsr
shld
adc
and
add
and
bt
jmp
pusha
adc
push
pushl
lea
jmp
call
push
mov
cmc
pushw
popfw
pusha
pusha
call
push
movl
pusha
movw
mov
lea
jmp
xor
addb
mov
imul
test
mov
xchg
es
stc
xor
aad
movsl
mov
bound
test
mov
jecxz
in
insl
fwait
sub
dec
dec
into
push
cs
jae
push
addb
sub
int
jmp
pop
and
jl
add
repnz
jg
push
popf
es
push
fbstp
adc
cmpsb
jae
fisubrs
jmp
lods
outsb
lret
mov
and
into
fs
jg
icebp
xor
and
jae
jg
int3
jns
sbbb
jmp
xorb
cmp
dec
push
rcrl
insl
aad
stos
mov
cmp
pop
push
cltd
jns
pop
imul
push
cli
outsl
aas
push
and
hlt
lds
outsl
ret
xchg
push
or
daa
lret
mov
ret
push
das
dec
inc
fisubrs
data16
push
stos
cmp
jecxz
dec
pop
xor
pop
pop
iret
repnz
ficoms
mov
push
inc
xchg
shr
sbb
ss
mov
dec
and
xlat
jmp
mov
mov
sbb
fisubrs
push
test
sbbl
push
adc
mov
insb
xorl
sub
mov
repz
inc
fs
movsb
mov
dec
xor
movsb
roll
inc
inc
neg
cmp
cltd
enter
cmp
jecxz
in
jg
jnp
mov
mov
cmp
xlat
sub
jns
mov
push
push
js
arpl
gs
add
lock
ljmp
sarb
cld
loope
in
or
and
loopne
xor
push
xchg
sbb
inc
mov
inc
push
mov
jbe
out
dec
nop
jnp
inc
jmp
jb
inc
dec
mov
jnp
dec
pusha
jg
or
iret
or
int3
jns
pop
push
push
pushf
add
test
mov
call
stos
in
and
mov
fldt
inc
mov
pop
into
and
out
lods
repnz
rolb
cmp
scas
mov
mov
xor
int3
jns
div
push
lea
call
pusha
push
lea
jne
pushf
mov
movb
pushf
push
lea
jmp
pushf
stc
pushf
or
call
cmpb
pushf
pusha
jmp
pop
mov
sbb
roll
hlt
call
in
mov
in
pop
xor
out
popf
cwtl
inc
mov
shrb
out
outsl
mov
pop
push
sahf
dec
pop
shll
cli
outsb
std
sbb
pop
shll
mov
xor
and
pop
dec
mov
in
cltd
jp
jno
inc
sub
bound
aad
xor
dec
jle
cmp
jae
and
push
insl
jmp
and
cmp
or
jp
sub
cmp
xor
pusha
scas
adc
popf
call
in
or
mov
int3
push
int3
sub
out
or
add
in
les
mov
and
lods
dec
mov
aam
mov
out
xchg
inc
pusha
loop
test
popf
and
or
mov
and
jns
rcr
repz
push
pusha
pushl
lea
je
push
pusha
pushf
push
pushf
movl
pushf
push
mov
lea
jmp
mov
test
pop
cmc
jmp
sub
sbb
push
xchg
inc
cmpsl
inc
pop
xlat
push
jae
or
or
jno
sub
fld
pop
pop
xlat
outsl
cmp
xor
sarb
mov
xchg
leave
jo
adc
scas
mov
ja
int3
jns
and
sbb
test
cmc
jmp
lea
je
rcr
movsbw
mov
seta
sub
not
lahf
mov
mov
sub
mov
shld
mov
test
call
inc
mov
fildll
adc
cwtl
pop
lock
jae
incl
jb
and
inc
movsl
pop
add
in
test
cmp
dec
in
xchg
xchg
jb
iret
loope
ror
call
hlt
cmc
push
or
push
fsubl
in
leave
jbe
xor
dec
add
and
aad
mov
shll
inc
jecxz
ret
arpl
pop
repnz
mov
scas
out
leave
add
mov
sbbb
or
pop
test
push
cmp
subl
loope
xchg
or
mov
and
or
xchg
pop
push
lods
jl
mov
jle
xchg
cmpb
pop
adc
pop
fs
xor
es
loopw
mov
stos
sahf
daa
jp
dec
pop
push
sbb
cmpsb
mov
dec
adc
adc
inc
scas
ret
mov
cmp
sbb
push
jns
add
cmp
push
dec
lret
mov
jo
call
jnp
inc
dec
xchg
cmpsb
into
pop
xchg
ljmp
dec
jne
mov
pop
inc
inc
pop
movsb
cmp
adc
sub
sbb
stos
lods
xor
repz
cmp
js
outsb
adcb
je
cmc
data16
std
in
fimull
insl
mov
insb
les
cmpsl
and
cmpsl
sti
mov
repnz
mov
jno
inc
pop
inc
sbb
mov
mov
xor
sub
jns
gs
pushf
dec
bt
jmp
not
setno
movzbw
call
inc
push
adc
lea
pushf
pushl
ret
adc
bsr
add
rcl
mov
clc
cmpb
pusha
lea
jne
ror
rcr
rcl
lea
sub
and
mov
sub
shl
cmp
add
rcl
shl
not
rcl
mov
call
mov
not
pusha
pushf
call
push
mov
mov
mov
xchg
outsb
sub
clc
rolb
adc
push
cmp
mov
addr16
or
xchg
jbe
or
sub
scas
pop
out
addr16
add
aam
stos
jne
jmp
lcall
ret
mov
lret
lods
pop
cld
fwait
or
sbb
and
in
pop
aas
arpl
data16
lea
jne
mov
movsbw
xor
inc
daa
pushf
not
mov
dec
cmp
not
add
add
jmp
mov
jmp
inc
imul
in
sub
sbb
pop
add
xchg
fstpt
loopne
out
int3
cmp
jae
rorb
xchg
xchg
aas
pop
inc
stos
inc
xchg
call
adc
jb
add
mov
jnp
call
adc
or
in
out
cli
add
dec
or
std
data16
cmpsb
pop
scas
sbb
lcall
adc
push
aam
daa
push
les
push
jecxz
mov
jns
fcmovnbe
lods
cwtl
mov
setb
jle
lea
push
lea
ja
pushf
pushf
movl
call
popf
rdtsc
nop
call
jmp
shr
shr
mov
cmp
cmc
call
mov
push
lea
jmp
cmp
sub
add
dec
imul
sub
es
dec
mov
stos
jno
dec
pop
mov
stc
xor
lds
xchg
shll
pop
jg
ss
clc
sahf
fistps
popf
mov
arpl
leave
fstl
aad
push
cmc
dec
test
stc
and
popf
je
fiaddl
pop
pushl
pushl
movl
jmp
movl
pushl
push
pushl
push
lea
jmp
pushf
cmp
call
lea
jne
stos
pusha
mov
pusha
lea
jmp
ror
stc
sub
call
lea
ja
call
xchg
push
sub
xor
adc
sub
jnp
out
adc
fiadds
and
xor
inc
xorl
popa
or
inc
xor
ficoml
jmp
loopne
addb
arpl
les
mov
clc
subl
pop
add
mov
ss
cmp
bound
lds
ljmp
aas
cltd
stos
lret
test
in
rolb
rorb
jmp
jl
in
cmp
cmp
xor
fisubrs
outsl
mov
cmp
dec
scas
pop
adc
lds
pop
mov
xor
pop
cmp
loop
leave
lods
addr16
ret
aas
pusha
hlt
xor
cmpsb
mov
xor
inc
gs
pop
test
sub
and
test
hlt
int3
jns
xchg
nop
fiadds
add
imul
jae
arpl
test
lods
dec
and
das
mov
xchg
icebp
pop
mov
push
adc
xchg
xor
xlat
push
jns
cli
hlt
aad
cmc
jnp
clc
fldpi
cmpl
in
fstpt
xor
pop
mov
fnsave
dec
mov
add
xchg
sbb
add
pop
in
fistps
mov
and
movsl
int3
ja
xor
dec
stos
jmp
lods
push
in
sarb
into
ud1
add
bound
jecxz
leave
int
enter
jmp
hlt
mov
rep
xchg
popf
jo
push
jg
aas
jb
jns
rcr
aam
push
les
dec
out
into
cli
test
loop
scas
adc
cmpsb
mov
xor
scas
outsl
clc
jmp
or
test
xor
sub
sbb
rol
cmp
les
int3
xchg
shlb
mov
insl
paddb
cmp
dec
or
dec
cmp
dec
cwtl
iret
mov
call
or
loope
mov
hlt
les
inc
cwtl
je
xor
in
aad
push
dec
cmp
mov
mov
push
hlt
lea
jmp
movl
pusha
pushf
lea
jmp
push
movl
pushf
movb
movl
pushf
pushf
pushf
movl
lea
jmp
jmp
pop
push
push
je
jo
add
aas
movsb
and
dec
dec
inc
sbb
fcmovu
cmc
mov
and
aam
mov
jmp
lock
xor
shl
push
clc
out
in
mov
mov
xor
xchg
loope
in
jecxz
mull
lret
mov
ljmp
mov
jecxz
rclb
pop
test
js
imul
jns
pusha
jge
leave
arpl
jp
sub
pop
lods
dec
push
sub
xlat
xor
repz
cmp
inc
loop
and
popl
or
rcll
mov
add
jl
push
cmp
sub
and
in
neg
and
pusha
mov
ret
sbb
scas
iret
adc
xchg
aaa
rclb
mov
pop
ss
mov
mov
in
int3
lods
jb
cmp
mov
add
jp
and
jle
mov
xor
sbb
xchg
and
ret
sbb
pusha
adc
dec
dec
subl
or
dec
and
pop
mov
xor
js
sub
push
into
pop
je
dec
stos
sub
cwtl
sub
cmpsl
mov
push
inc
cmp
or
mov
push
or
cmc
vpcmpgtd
jae
mov
test
pop
push
out
ffree
pop
ss
movsl
push
int3
jns
inc
pop
lods
pushl
pushl
popl
pusha
movb
pushf
pushl
pushl
ret
jle
adc
stos
xchg
subl
mov
leave
sbb
mov
rcrb
xor
cmp
notb
mov
push
loop
add
leave
loopne
ss
or
inc
jge
push
jno
push
test
test
je
loop
sbb
or
movsb
adc
jne
cli
daa
mov
jo
mov
pop
fcom
xor
and
and
stos
aas
mov
cmpsb
jg
xchg
push
and
sti
int3
jns
xchg
mov
add
push
push
dec
inc
outsl
ja
insb
outsl
popa
fs
outsl
inc
imul
jmp
sub
mov
movl
jmp
rol
test
cmp
mov
test
xor
call
jmp
lea
ja
bt
pushf
neg
or
sub
jmp
dec
clc
call
movsbw
lea
jmp
leave
stos
shrl
cmp
pop
stc
push
fldt
cmp
sub
inc
fistpll
sub
cmp
test
push
inc
dec
push
dec
cmp
sbb
add
push
mov
out
movsl
push
xchg
jns
mov
jne
sti
dec
mov
cltd
jbe
fldl
sub
or
push
mov
dec
adc
and
lods
mov
lahf
ja
push
xor
or
lds
dec
xor
sbb
mov
dec
in
dec
mov
mov
mov
dec
insb
fsts
adc
lock
sbb
dec
sti
xor
cmp
push
mov
jbe
pusha
cmp
sbb
cld
shll
xchg
sahf
inc
in
test
shll
jns
jo
sbb
rcrl
out
lcall
cmp
pop
push
or
add
adc
adc
gs
and
ret
mov
inc
ret
dec
xor
out
lds
pop
mov
sub
add
popf
sahf
in
mov
fmuls
lahf
sbb
sbb
pop
sbb
call
scas
pop
cmp
subl
ss
icebp
dec
pop
faddl
aaa
cmp
js
negl
adc
stos
cld
xor
mov
sub
iret
leave
sub
or
scas
add
vmovlps
dec
mov
pop
add
call
lea
push
pop
cwtl
inc
mov
decb
fwait
stos
dec
outsb
imul
push
andb
stos
sub
rcrb
mov
sbbl
xchg
pop
ljmp
insl
arpl
cmp
mov
fdivrp
sbb
mov
jnp
lods
xchg
aas
jns
and
or
imull
xlat
lret
int3
jns
add
test
out
lods
xor
sub
sbb
mov
pop
jae,pt
pop
shrb
lods
pop
mov
add
lock
outsl
jns
les
mov
mov
in
mov
and
xor
sub
ds
ret
lcall
sub
inc
add
sbb
cmp
addr16
ja
pop
push
ds
mov
xchg
sarb
cld
mov
inc
jecxz
lock
lret
xor
jp
fmull
negb
cwtl
fiaddl
jle
bts
outsb
dec
stos
ds
fcmovne
jns
push
es
add
push
pushf
sti
xchg
scas
sbbl
aad
shrl
sarl
push
and
cmp
fistpll
adc
sahf
lret
mov
mov
lock
add
fsubrs
pop
clc
xchg
xchg
ss
and
popf
div
mov
xorb
lea
call
jmp
cmp
fwait
dec
mov
pop
std
and
or
and
cmp
jne
loopne
dec
test
and
or
sub
inc
sbb
lods
jmp
sbb
lods
xor
and
lds
pop
sbbl
das
rsqrtps
mov
push
xchg
or
in
inc
lret
dec
repz
jbe
or
std
or
imul
aaa
inc
sarl
dec
or
cmp
int3
jns
and
mov
and
jne
shld
aad
shl
setle
sub
shrd
das
mov
cmc
rcr
ror
call
lea
jmp
sti
out
clc
insb
rorl
lods
mov
mov
fidivl
jb
mov
stos
out
xlat
lcall
insb
mov
adc
stos
notl
dec
das
pop
add
clc
aad
jecxz
and
js
fwait
outsb
popf
mov
cs
pusha
push
xchg
ficoml
xchg
ret
fmuls
int3
mov
lods
adc
outsb
cmc
lahf
mov
xor
or
and
aas
cmp
sbb
lcall
mov
jecxz
jns
arpl
add
dec
gs
popa
addr16
outsl
js
add
pop
std
std
test
stc
ret
jl
fbstp
int
mov
pushf
mov
pop
xor
xor
lcall
std
jge
cltd
in
or
loope
push
aam
pop
roll
es
test
test
popf
push
add
fs
out
shr
xchg
push
data16
mov
cmpsl
xor
inc
test
cwtl
cltd
mov
lods
sbb
dec
int3
adc
sub
or
inc
adc
cmp
negl
cs
push
inc
ret
in
push
pop
mov
leave
lcall
xchg
int3
lret
lret
lret
nop
jle
test
push
popf
rol
fistpll
out
mov
roll
mov
push
xchg
xchg
jg
fldl
scas
push
mov
mov
pop
xlat
stos
push
or
int
pop
sbbb
dec
lcall
int3
jns
mov
jge
pushf
movb
inc
test
test
test
not
jmp
cmp
or
call
add
movsbw
neg
sub
movl
lea
mov
push
test
cmp
pushf
jmp
push
pusha
lea
je
pushf
lea
jmp
push
xchg
shl
mov
sbb
add
aad
xchg
loop
and
scas
mov
or
aas
stos
cwtl
in
ret
aad
movsb
stos
lret
das
dec
ss
or
hlt
jne
ljmp
imul
pop
or
inc
jle
test
xchg
pop
clc
dec
test
in
ljmp
arpl
std
out
sub
sar
pop
pop
add
lahf
push
pop
aas
mov
or
in
jmp
inc
mov
push
loopne
jb
add
outsl
mov
pop
testl
jns
mov
inc
jl
dec
push
jle
sbb
mov
xchg
test
dec
in
repz
in
push
adc
out
mov
popa
mov
pop
jge
rcl
and
jns
daa
ds
pusha
call
sub
stos
and
push
lahf
jge
inc
les
cmp
sub
xchg
xchg
and
scas
cmp
lcall
mov
xlat
test
jecxz
aad
xor
lret
adc
xor
das
mov
leave
subl
insb
arpl
fs
and
mov
or
dec
popa
popa
mov
mov
adc
pusha
jmp
aam
jno
jns
rcr
bt
imul
test
bt
mov
add
push
movb
mov
lea
jmp
lea
jb
pushf
mov
lea
je
stc
add
test
cmp
push
call
movb
pushl
popl
pushf
pushl
ret
cwtl
jge
add
pop
mov
jle
inc
sti
out
test
repnz
inc
loope
insb
in
repnz
xor
mov
inc
add
fistpl
int3
pop
movsb
add
or
shr
jg
into
sub
push
out
jle
push
lods
movsb
jle
and
jns
sti
orl
pop
or
jo
inc
mov
inc
pop
mov
add
xchg
ljmp
cmp
mulb
ss
mov
add
dec
jnp
data16
xchg
inc
fadds
test
vmovhlps
adc
pop
cmpsb
cld
scas
jg
mov
and
push
clc
or
xor
pop
and
cld
mov
xchg
test
std
es
dec
or
sub
push
xor
lods
adc
movsb
aad
mov
or
repz
jbe
inc
dec
xlat
mov
push
or
mov
lret
cmp
dec
xchg
xchg
sub
push
lret
and
pop
cmpsl
pop
scas
xchg
movsl
fsubr
push
jnp
and
inc
enter
push
adc
push
inc
xchg
sub
inc
xlat
adc
xlat
xchg
pop
fdivrp
pop
stos
rcrl
push
or
jb
loop
notb
dec
add
dec
shll
clc
in
movsl
mov
cmp
aad
inc
js
mov
push
xchg
rcrb
ds
insl
insl
lcall
pop
mov
dec
scas
fcom
mov
in
mov
dec
mov
cmp
popl
lret
push
in
fst
ja
push
jp
or
mov
add
shlb
push
pop
add
jb
ljmp
movsb
cmp
icebp
dec
popf
rol
inc
push
xchg
int3
jns
ror
cmpsb
push
pushf
lea
ja
jmp
pushf
call
cmp
jmp
outsl
mov
imulb
out
inc
mov
push
pop
push
pop
repnz
mov
in
xchg
in
minps
or
jp
pop
outsl
ljmp
mov
jno
insb
fcoms
pusha
pop
insb
adc
cli
sbb
push
cmc
pop
adcl
pop
cmpsl
cmp
jmp
std
mov
dec
pop
inc
mov
int3
jns
add
pop
xor
and
inc
and
in
cld
out
pusha
pushf
push
jmp
bswap
not
movsbw
lahf
lea
push
jmp
lea
ja
rcr
shl
sub
sub
sub
dec
add
neg
mov
shl
pusha
mov
clc
clc
pusha
repnz
jmp
mov
lea
jae
pusha
shl
mov
add
sub
pop
mov
shl
clc
pusha
and
mov
jmp
pusha
mov
mov
mov
adc
shr
push
xor
add
std
jo
inc
mov
adc
dec
xor
out
mov
jmp
jb
or
sahf
push
xchg
test
jae
and
jbe
pop
out
sbb
jle
rcll
xchg
xchg
mov
sbbb
or
jg
in
aam
clc
jl
hlt
int
push
pop
repnz
dec
inc
mov
int3
jns
adc
and
jne
pusha
mov
mov
pushl
jmp
pushf
movl
call
int3
popf
jl
pushf
movl
pushf
pushf
movl
pushf
mov
pusha
lea
jmp
add
jmp
adc
pushl
mov
push
pushl
ret
movw
pusha
mov
push
mov
mov
setne
lea
movsbw
movl
jmp
pushf
pusha
mov
push
pushf
mov
pushf
pushf
movl
jmp
jne
ret
jne
mov
cltd
jg
in
ret
add
xor
sub
xchg
sti
stc
fisubs
outsl
jno
scas
dec
pop
jns
mov
repnz
mov
scas
stos
loop
cvtpi2ps
push
jo
loop
dec
popl
and
sbb
mov
cli
subl
xor
lds
or
dec
xchg
cmpsb
lcall
es
sbb
pop
pop
jae
insb
jns
mov
sarl
mov
jns
sbbb
orb
rolb
xchg
xor
divb
cs
sbb
sbb
inc
mov
notb
dec
xor
cld
sarb
sbb
std
sub
xchg
iret
push
pop
push
push
jge
out
push
push
ret
lret
testb
sbb
cld
jl
mov
push
add
push
cmp
lahf
movsb
je
sub
call
xor
add
aam
cli
push
subb
fmuls
jge
lods
add
int3
jns
or
sbb
adc
mov
pushf
lea
jmp
pusha
movl
movl
jmp
test
adc
xor
inc
inc
sbb
jg
add
jns
mov
fdiv
fcoml
mov
inc
hlt
shlb
and
shll
sub
jns
xor
daa
jmp
sub
loope
mov
imul
lahf
xchg
popa
mov
cmp
pop
insl
popf
je
popf
pop
sub
xchg
add
decb
sub
pop
mov
movsb
mov
addl
mov
inc
pop
mov
arpl
inc
jb
gs
inc
and
cs
add
sub
or
add
jmp
add
pushf
pushl
mov
pushf
lea
jmp
clc
or
jmp
call
in
pusha
call
daa
das
push
and
ljmp
shll
iret
xlat
cmpb
movsb
add
mov
jl
and
pop
mov
movsl
test
xor
int
xchg
xchg
mov
in
fs
js
jecxz
add
dec
or
daa
ret
push
shlb
sub
cmpl
aaa
dec
mov
test
inc
adc
push
scas
in
mov
pop
lret
int3
jns
mov
call
pushl
pushf
jmp
jmp
inc
xor
loope
dec
mov
dec
stos
adc
inc
into
and
out
pop
jp
or
in
add
popf
inc
mov
mov
popf
mov
mull
andl
and
pop
pop
stos
cmp
ficompl
push
inc
rcll
ret
mov
pop
clc
cli
sbb
mov
jnp
pop
inc
mov
xchg
jnp
xchg
jl
je
aas
int3
int3
jns
sbb
lock
pusha
cmp
call
lods
xchg
sub
dec
stos
cld
add
repnz
scas
fnstsw
mov
and
xor
xchg
nop
outsb
out
lahf
and
jle
ja
push
sbb
ds
add
data16
lods
aam
je
in
cwtl
or
arpl
cmp
fsubr
push
xchg
test
fimuls
aam
std
mov
shlb
enter
sbb
testl
add
daa
xchg
mov
add
xchg
int3
jns
sbbb
dec
xchg
or
adc
jmp
mov
cmp
pop
dec
fistpll
jb
pop
mov
mov
aas
cmp
imul
and
imul
roll
int
lret
fs
add
mov
cmpsb
out
call
xchg
js
repz
aaa
adc
inc
lahf
cmpsb
shll
movb
sbb
scas
lret
clc
push
popa
std
fildl
lods
in
jno
mov
inc
or
mov
push
mov
jle
pop
inc
adc
mov
lods
mov
cmpsl
lcall
test
sbb
push
ja
rclb
hlt
es
mov
mov
pop
xchg
lea
inc
ror
sbb
cmpsl
push
mov
mov
mov
decb
cmp
mov
or
imull
shrl
iret
loop
aam
sub
push
mov
push
push
inc
jnp
sub
sbb
inc
pop
cmpsb
xor
inc
cmp
push
sbb
pusha
mov
divb
clc
cli
movsl
pop
es
inc
dec
mov
test
aad
cs
and
mov
les
std
das
out
mov
jg
push
int3
mov
stos
test
xor
lret
dec
imul
push
xor
insl
or
push
push
sub
out
adc
je
in
mov
lcall
mov
cmp
inc
pusha
dec
xchg
xchg
bound
lods
jo
dec
xchg
dec
inc
mov
pop
and
shlb
jns
test
mul
jne
pop
movsl
into
insl
pop
mov
jmp
mov
addr16
add
sub
gs
sbb
jmp
push
dec
xchg
test
mov
pop
cmp
stos
insl
push
out
jns
push
stos
int3
loope
ss
scas
sub
je
arpl
mov
stos
add
lods
rorb
and
lea
pop
mov
adc
pushf
jecxz
lds
or
shlb
cmp
dec
leave
sbb
mov
dec
shlb
scas
int3
xchg
lcall
fs
or
mov
mov
movsb
inc
add
in
sub
jecxz
arpl
adc
mov
jns
je
nop
push
repz
out
sbb
arpl
mov
shlb
push
inc
xorl
sbb
adc
ret
or
shl
int
mov
sbb
adc
fldt
rorb
sbb
mov
loope
and
ret
pop
bound
aas
insb
sub
jb
lret
jbe
jne
scas
lods
in
ljmp
xchg
dec
jp
push
push
or
testb
adc
cwtl
test
pop
les
loopne
fdivrp
xchg
loop
scas
fcoms
lods
sub
jle
mov
movsb
adc
scas
movb
pop
mov
push
es
fstpl
and
sub
es
dec
add
fs
je
push
es
out
in
jns
rcr
or
jle
push
std
hlt
fldenv
fcmovnbe
insl
cmp
mov
daa
mov
in
pusha
ljmp
xchg
ss
or
push
lret
fwait
pop
push
es
jge
pusha
flds
or
fiaddl
push
inc
jno
push
and
pop
jbe
test
stos
mov
mov
xor
in
and
push
add
pop
es
out
and
cmpsl
jno
mov
addr16
inc
fildl
inc
cmp
xchg
shrl
sub
addr16
out
test
sbb
pushf
mov
xorb
pop
push
inc
mov
jmp
es
lods
gs
jl
xor
shrb
in
ljmp
imul
xchg
add
leave
sar
inc
jecxz
push
outsb
push
aaa
in
jecxz
popf
pop
shrb
jns
pop
jle
cs
es
dec
fildll
adc
mov
inc
push
loopne
inc
aas
sub
pop
es
jno
push
stc
mov
es
mov
jle
js
es
inc
xchg
ret
lods
mov
push
sub
insl
mov
jl
cld
push
es
bound
in
adc
shll
mov
add
fidivl
mov
push
inc
jecxz
das
int
cmc
imul
inc
jb
push
dec
or
cs
in
jo
in
cmpsl
xchg
rorb
test
xor
es
adc
push
xor
adc
gs
pop
aas
push
mov
rcrl
movl
pusha
pusha
pushl
popl
mov
pushl
movb
pushl
ret
mov
not
call
pusha
movzwl
not
pushf
lea
push
mov
movw
call
cli
mov
pop
jmp
dec
mov
xor
stc
mov
insl
in
add
ljmp
scas
push
in
aam
xor
test
je
ret
pop
cmp
cmp
mov
mov
xchg
test
jne
and
sub
lahf
sbb
and
movsb
in
sbb
hlt
mov
pop
mov
mov
push
jl
fcmovnb
jge
test
sahf
rorl
dec
mov
lret
jo
call
adc
fisttps
cmpsl
push
dec
push
adc
pusha
je
push
pop
repz
jns
mov
es
ljmp
fsincos
or
js
sbb
mov
cmp
sub
ljmp
push
adc
push
add
jb
push
push
stos
and
push
push
cwtl
jbe
mov
push
xchg
sbb
xor
shrb
sub
rcrl
sbb
jne
mov
or
leave
xchg
mov
add
es
hlt
add
pop
cld
repnz
mov
dec
pop
mov
adc
js
addl
stos
adc
fwait
xchg
arpl
cmp
jns
jbe
and
push
jmp
add
mov
mov
add
dec
push
xor
mov
cmpsb
cmp
imul
pop
outsl
jp
or
add
sub
cmpsl
mov
or
out
push
xor
inc
arpl
int3
jns
mov
and
jne
lea
mov
push
pusha
add
pusha
test
cmp
movzwl
shrd
shr
mov
clc
push
add
jmp
push
lock
std
std
mov
xchg
ret
jbe
mov
fistpll
arpl
pushf
mov
pop
stc
ss
lahf
mov
leave
in
dec
dec
inc
cld
and
aam
pop
lret
out
and
test
jbe
xchg
andl
in
push
fs
in
xchg
push
out
hlt
lds
jns
jmp
cmp
enter
roll
clc
in
push
scas
adc
loope
cltd
cltd
mov
mov
lahf
adc
xchg
push
leave
add
adc
mov
pop
add
inc
push
movsl
push
pushf
std
mov
lahf
lcall
push
dec
in
int3
jns
cmpsb
mov
pushl
lea
ja
call
cmc
shr
push
cmp
push
movb
lea
jle
pushf
lea
je
cmp
cmc
jmp
call
not
movsbw
mov
call
movl
push
mov
pop
mov
mov
push
setno
lahf
lea
lea
jmp
pushf
jmp
lea
ja
push
cmc
call
dec
rol
shr
mov
pusha
cmp
call
ror
bsf
add
setl
movsbw
mov
push
mov
dec
cmp
call
jmp
cld
mov
call
mov
pusha
pushl
push
lea
jmp
pusha
mov
pushl
movb
push
mov
lea
jmp
pusha
mov
pusha
movw
lea
jmp
jmp
lea
jne
popl
pushf
lea
jmp
mov
mov
pushf
lea
jmp
push
bswap
mov
jmp
dec
rcr
movzbl
cmc
test
sub
pusha
pushl
bt
mov
not
clc
call
pusha
pushl
popl
push
lea
jmp
pusha
not
cmc
lea
jae
sub
pushf
push
dec
stc
jmp
push
sub
jmp
pushf
shr
pushf
mov
mov
push
pushf
popl
call
sub
jmp
mov
pushl
pushf
lea
jmp
pushf
popl
mov
pushl
popl
push
mov
lea
jmp
xchg
push
pusha
lea
mov
pushf
pushf
mov
dec
jmp
sub
bswap
movzbw
pushl
popl
adc
xchg
pushf
movl
inc
btc
mov
rcr
adc
add
call
rep
shl
jmp
pushf
ror
neg
and
rol
call
mov
ror
shrd
sar
mov
cmp
call
sub
jmp
lea
jnp
pushf
mov
mov
lea
jmp
jmp
dec
cmc
mov
pusha
push
push
sub
pushf
mov
movw
mov
push
pushf
pushf
push
lea
jmp
jmp
ror
shr
mov
clc
push
ror
adc
mov
clc
add
push
mov
pusha
pushf
lea
jmp
movl
decl
call
call
mov
pushf
pushl
mov
pushf
pushf
pushf
lea
jmp
pushf
test
stc
add
movb
pushf
movl
pushl
mov
pushf
movb
lea
jmp
xchg
not
pushf
call
pushf
mov
push
pushf
mov
mov
pushl
pusha
lea
jmp
jmp
jmp
mov
mov
mov
pushf
call
lea
je
push
mov
pusha
pushl
pushf
popl
call
jmp
call
xchg
call
mov
push
pushf
movb
pusha
pushl
ret
push
call
not
test
jmp
bswap
xchg
test
movl
bt
bts
mov
add
add
pusha
stc
pushl
bswap
pop
ror
lea
lea
mov
movb
mov
lea
jmp
lea
movl
pushf
mov
movb
cld
call
pusha
mov
pushf
pushl
pop
jmp
not
mov
jmp
call
rol
bts
inc
shl
mov
rol
pusha
mov
movl
clc
cmp
clc
sub
cmc
cmp
cmc
bt
shl
movb
pushf
pushf
mov
lea
jne
push
pusha
pushf
popl
pushf
pushl
popl
pushf
lea
jmp
not
std
pusha
lea
jmp
cltd
mov
ror
jmp
sbb
add
btc
movzbl
bt
bswap
rol
ror
movsbw
movsbw
movzbw
lea
pushf
movl
lea
jmp
movzbl
mov
pushf
setnp
setge
mov
push
dec
pushl
push
mov
mov
inc
test
add
jmp
jmp
call
pushl
popl
push
pushf
pushf
pushf
lea
jmp
ror
mov
cmp
sub
clc
shr
movb
mov
jmp
pushf
popl
call
stc
movl
bsr
add
adc
mov
jmp
call
pushf
pushf
mov
mov
pushf
pusha
jmp
jmp
jmp
mov
movb
pusha
pusha
push
lea
jmp
mov
pop
mov
bswap
movzbw
pushl
mov
jmp
inc
bts
mov
sub
setb
add
pusha
jmp
jmp
push
movw
pushf
pushl
popl
pushl
push
mov
lea
jmp
add
cmp
cwtl
clc
sub
pushf
pusha
mov
pushf
pushf
lea
jmp
stc
test
add
cmc
neg
jb
push
pusha
xchg
pushf
pushl
lea
mov
call
repz
popl
rol
mov
call
movzbw
ror
bsr
shr
sbb
add
lea
lea
jge
movzbl
lea
inc
not
mov
push
jmp
pushf
pusha
call
lea
pushf
pushf
mov
movb
lea
jmp
call
bswap
call
aad
rdtsc
mov
push
sar
btr
mov
stc
bt
add
pushf
push
pushl
mov
pushf
movb
pushf
pusha
lea
jmp
mov
mov
lea
jmp
neg
mov
push
xchg
call
pushf
mov
pushf
pusha
pushf
mov
pushf
popl
mov
movl
push
pushl
pushl
popl
movb
push
pushf
movw
lea
jmp
movb
clc
cmp
xor
cmc
stc
pushl
lea
movb
rol
pushf
not
cmp
neg
clc
xor
jmp
dec
mov
btr
bts
jmp
lea
xchg
lea
not
mov
movsbw
xchg
repz
popl
movzbw
rcr
mov
pusha
lea
stc
cmc
mov
shl
btc
stc
mov
cmp
stc
movw
and
pushl
popl
rol
pusha
movsbw
lea
movl
test
lea
or
cmc
mov
bt
movsbw
btr
add
rol
bswap
cmc
btr
ror
movzbw
not
movsbl
lea
pushf
pushf
lea
jmp
call
pushf
pushl
pushl
popl
push
pusha
pushl
push
lea
jmp
movl
movsbw
pushf
mov
pop
mov
repz
popl
rol
lea
sbb
xchg
mov
rcr
mov
mov
btc
clc
clc
mov
shr
pushl
btr
ror
push
rcr
shr
rcr
add
mov
stc
add
bt
bswap
stc
ror
bswap
bswap
pusha
pushf
lea
movw
mov
pushf
lea
jmp
cmc
sbb
mov
and
mov
call
jmp
xchg
call
stc
sub
push
mov
jmp
add
jmp
lea
pusha
pushf
push
mov
lea
jmp
mov
pushf
mov
lea
mov
mov
xchg
mov
movsbw
not
lea
repz
pusha
mov
mov
sub
not
bsf
shl
mov
ror
shr
mov
rol
shrd
clc
pushl
popl
ror
sub
movsbw
movl
pusha
rcr
rcl
mov
call
mov
not
movzbw
pushf
repz
popl
jmp
pushf
pop
pushf
mov
lea
jo
pushf
mov
pushl
call
mov
pushf
lea
jmp
call
mov
pusha
pushf
lea
jmp
sub
movb
jmp
stc
cmc
add
call
cwtl
push
stc
sub
pushf
push
mov
push
lea
jmp
jmp
mov
xchg
jmp
not
movl
add
adc
mov
dec
not
sub
or
add
rol
not
bt
bswap
bswap
jmp
repz
popl
lea
push
bts
shrd
inc
push
shr
sbb
pushf
shr
mov
btc
bt
call
xchg
rdtsc
jmp
dec
cmc
test
cmp
jmp
xchg
mov
sar
btc
mov
stc
stc
jmp
mov
jmp
lea
std
std
call
movsbl
mov
lea
repz
popl
lea
xor
mov
xadd
mov
pop
xor
mov
shl
mov
shl
rcl
shl
pushl
popl
adc
ror
pushf
movl
bts
mov
shld
add
pusha
bswap
cmc
bts
rcl
ror
pop
lea
push
pushl
push
push
lea
jmp
push
not
call
movl
call
xchg
mov
bswap
pushf
mov
pushf
pushf
pushf
push
pushl
ret
not
bswap
pusha
mov
bswap
pushf
lea
pusha
mov
pop
mov
movsbw
mov
pop
mov
movsbw
xchg
repz
popl
clc
btr
bswap
mov
shld
mov
xor
sub
mov
dec
adc
cmc
pushl
popl
xor
movl
shrd
movzbw
mov
not
push
sar
add
rcl
rol
bswap
bswap
pop
not
ror
mov
pushl
movzbw
pusha
lea
push
lea
jmp
pusha
pushf
popl
pusha
jmp
lea
movl
movb
pushf
call
adc
pushf
mov
add
clc
ror
or
mov
cmp
test
bt
add
pusha
mov
pusha
push
pushf
pushf
lea
jmp
pushf
mov
mov
bswap
movzbw
mov
pusha
lea
cpuid
cmc
jmp
pushf
pushf
popl
jmp
lea
push
not
mov
pushf
mov
movzbw
push
pushf
lea
repz
popl
clc
add
push
call
cmc
stc
sub
jmp
pushl
popl
call
not
pusha
repz
popl
rcr
btc
mov
ror
mov
rcl
xor
inc
btc
mov
neg
pushl
popl
ror
shld
cmc
dec
movl
movzbw
movzbw
mov
neg
not
neg
shld
add
bts
movzbw
bswap
mov
pop
ror
ror
pusha
bswap
movl
pop
lea
movb
pushl
lea
jmp
cmc
jmp
test
sub
jmp
bswap
inc
mov
jmp
lea
pusha
pushf
pushf
lea
jmp
rcr
ror
mov
movsbw
bswap
mov
push
pushf
pushf
pusha
lea
jmp
pusha
pusha
pushl
popl
pushf
lea
jmp
call
push
pusha
mov
pusha
mov
mov
push
lea
jmp
das
bsf
mov
jnp
sar
and
or
mov
dec
mov
test
jmp
pushl
popl
pushf
movb
mov
pushf
lea
jmp
jne
pusha
mov
xchg
not
mov
lea
call
mov
pusha
pushl
mov
push
lea
jmp
into
stos
or
mov
mov
adc
mov
or
mov
mov
or
into
stos
or
rorl
mov
rorb
into
stos
or
xor
or
lods
or
into
stos
or
or
or
stc
fwait
or
cmp
or
push
cltd
or
mov
mov
or
mov
fwait
or
mov
ret
or
dec
xchg
or
cmpsb
mov
or
les
adc
or
sbb
or
aas
ret
or
dec
xchg
or
mov
adc
lahf
or
jne
or
movnti
adc
lahf
or
mov
or
dec
cltd
or
aas
scas
or
push
xchg
or
xor
or
lods
or
mov
lods
or
dec
cltd
or
mov
or
repnz
out
mov
or
inc
cltd
or
bound
or
mov
or
dec
cltd
or
push
cltd
or
repnz
dec
cltd
or
push
xchg
or
mov
or
sarl
or
lods
or
imul
adc
mov
or
inc
cltd
or
imul
adc
mov
or
in
rorb
nop
mov
or
push
xchg
or
sarl
or
mov
or
mov
or
fdivrs
or
bound
or
adc
or
sub
or
xor
or
push
xchg
or
mov
or
sarl
or
sarl
or
mov
or
pop
mov
adc
lahf
or
les
adc
mov
or
bound
or
dec
xchg
or
jae
or
sub
or
push
ret
or
aas
scas
or
push
ret
or
sarl
or
cmpsb
mov
or
sbb
or
jae
or
and
or
stc
fwait
or
imul
adc
mov
or
adc
or
inc
cltd
or
sbb
or
mov
or
mov
or
jecxz
or
push
or
aas
scas
or
les
adc
mov
adc
mov
or
sub
or
push
or
mov
stos
or
shll
or
shll
or
imul
adc
or
mov
ret
or
push
or
rorl
pop
scas
or
mov
mov
adc
or
shll
or
push
or
bound
or
aas
scas
or
push
or
mov
or
movnti
adc
ret
or
push
or
cmp
or
pop
scas
or
push
or
fdivrs
or
xor
or
adc
or
imul
adc
rorb
mov
adc
mov
or
cltd
test
adc
lahf
or
push
or
mov
or
push
ret
or
dec
xchg
or
push
or
repnz
sbb
or
dec
cltd
or
fdivrs
or
into
stos
or
jecxz
or
push
xchg
or
mov
adc
stos
or
sbb
or
cmp
or
imul
adc
or
into
stos
or
mov
mov
adc
stos
or
mov
or
pop
mov
adc
or
into
stos
or
xor
or
mov
or
sbb
or
lods
or
into
stos
or
push
cltd
or
movnti
adc
ret
into
stos
or
jecxz
or
and
or
fdivrs
or
sub
or
mov
adc
mov
adc
pop
push
add
mov
call
push
call
jmp
pushf
mov
jmp
jmp
push
pusha
jmp
add
pusha
jmp
push
pushf
popl
pusha
pushf
jmp
pushf
jmp
clc
cmp
mov
pushf
bt
add
call
jmp
pushf
mov
pop
movzbw
bswap
repz
popl
clc
add
jne
push
adc
inc
push
pusha
neg
mov
neg
not
and
jmp
mov
add
xor
cmc
mov
pushf
pushl
popl
stc
not
add
movl
sar
shl
neg
mov
movsbw
shld
adc
add
lea
bswap
ror
cmc
ror
pop
movzbw
call
push
mov
mov
push
movsbw
movsbw
call
pusha
pushf
mov
push
call
jmp
call
lea
push
repz
popl
add
test
mov
test
mov
dec
mov
pop
rcr
rcl
bsr
pushl
popl
lea
jns
push
xadd
movl
xadd
mov
bt
rcr
bt
add
rol
rcr
not
rcr
bswap
push
cmc
ror
call
mov
cmp
pusha
test
add
mov
mov
mov
push
lea
jmp
pusha
stc
pushl
popl
test
add
pushf
cmp
bt
pushl
popf
mov
push
lea
jmp
movzbw
lea
mov
setl
pushf
movzbw
mov
mov
bswap
jmp
pushf
xor
clc
push
sub
movw
cbtw
jmp
push
shld
call
lea
jne
sets
sub
mov
test
jmp
mov
mov
pushf
pushl
call
bts
cmp
push
pushf
xadd
rol
mov
or
bts
xadd
push
movzbw
dec
ror
adc
pushl
sub
neg
push
shr
pushf
sub
mov
and
pop
add
rcl
bswap
btc
rcr
ror
call
pushl
lea
pushf
mov
lea
jmp
push
pushf
popl
pushf
call
pusha
push
jmp
movw
xchg
jmp
rcl
call
pusha
pusha
mov
pop
lea
push
mov
jmp
jmp
btc
clc
mov
bsr
xor
pop
clc
mov
pusha
pushl
popl
adc
not
inc
movl
call
test
sbb
shl
lea
sub
adc
sar
btr
cmp
not
sbb
jmp
pushf
call
add
movw
jmp
lea
jne
call
or
push
cmc
bsr
bsf
mov
bt
inc
rol
add
bswap
ror
mov
bswap
mov
mov
push
rcr
ror
jmp
bt
call
pushl
mov
jmp
push
xchg
jmp
pusha
push
call
setne
or
mov
shl
and
add
call
pushf
jmp
rol
ror
movsbw
lea
pusha
pushf
lea
jmp
jmp
call
mov
mov
mov
push
pushf
pushl
ret
jmp
mov
call
pusha
and
call
jmp
movzbw
mov
seto
call
cmc
clc
cmp
sub
pushf
pushf
pusha
dec
cmp
xor
cmc
test
mov
cmc
sub
cmc
cbtw
bt
movl
push
mov
cwtl
jmp
call
push
pop
mov
jmp
lea
lea
bswap
sub
jmp
pushf
push
pusha
mov
pushl
mov
lea
jmp
mov
call
push
not
bswap
not
bswap
push
push
mov
pushf
jmp
bswap
not
ror
not
mov
jmp
xchg
call
dec
pushf
bt
call
jmp
lea
ja
rcr
bswap
push
daa
lea
adc
lea
rcr
sbb
sub
cwtl
sub
xchg
lahf
lea
movsbl
and
inc
sub
not
movsbw
pop
mov
pushf
movzbw
pushf
popl
pushf
lea
xchg
lea
std
not
pusha
mov
jmp
push
adc
cmc
add
mov
shr
add
pusha
inc
call
cmp
add
mov
pusha
sub
pusha
jmp
btr
mov
test
shr
push
sar
mov
clc
add
call
shr
aas
mov
jmp
xchg
push
mov
stc
lea
clc
stc
add
test
mov
cmc
mov
neg
push
push
call
jmp
bswap
repz
popl
shrd
dec
shr
movsbw
push
mov
push
ror
pop
push
call
add
jmp
pushf
pushf
pushl
mov
call
call
pushf
push
pushf
popl
pushl
pushf
pushl
popl
pushl
mov
lea
jmp
mov
btc
mov
pushf
push
clc
shl
mov
bswap
bsr
shrd
cmp
pushl
popl
and
cmp
shr
neg
movl
and
not
mov
bsr
cmc
cmp
add
rcr
btr
bt
bts
bswap
bt
ror
lea
movzbl
pusha
lea
pushf
lea
jmp
rcl
bt
mov
not
mov
cmp
sub
call
add
jmp
dec
cmp
mov
neg
jmp
sbb
rcl
shrd
shl
mov
neg
mov
mov
clc
add
jmp
call
push
pusha
pushf
call
pushf
popl
push
pushl
popl
movl
mov
lea
jmp
setnp
not
mov
call
jmp
movzbl
mov
pusha
cmc
add
mov
movb
lea
jmp
rol
bsr
mov
sub
not
add
xor
add
add
pushf
dec
bts
sub
lea
bt
shr
bt
mov
stc
cmc
test
shl
test
pusha
clc
shr
cmp
or
test
bt
pusha
xor
call
aaa
add
shr
mov
push
add
js
cmc
stc
sub
pusha
pushf
mov
pushf
pushf
mov
pushf
lea
jmp
add
pushf
call
pushf
pushf
mov
jmp
pushf
push
xchg
mov
call
pushf
mov
movw
lea
jmp
pusha
test
xor
cmc
cmc
cmp
sub
jmp
rcl
jmp
popl
pusha
lea
jmp
lea
mov
lea
jmp
bswap
btr
btr
ror
jmp
mov
movw
pushf
popl
call
call
call
cld
jmp
pushf
mov
push
pushf
popl
pushl
pushl
popl
pusha
pushf
pushl
lea
jmp
cmp
shl
pushl
push
pushf
mov
jmp
jmp
jmp
dec
add
lea
and
inc
jmp
pusha
movb
dec
mov
pushf
dec
clc
add
call
clc
test
add
call
movl
movb
pushl
popl
pushf
pushf
lea
jmp
pushf
popl
call
mov
lea
pushf
xchg
jmp
clc
ror
pushf
pushf
stc
add
pushf
cmp
stc
movw
mov
pushf
clc
sub
pushl
push
pushf
dec
mov
call
mov
jmp
call
mov
pushf
push
pushf
lea
jmp
call
lea
jne
setae
rcl
mov
ror
mov
cmc
test
clc
and
pusha
stc
cmp
pushf
movb
movb
lea
jne
pusha
rcl
xorb
movsbw
pusha
mov
pushl
lea
jmp
clc
add
bt
cmc
stc
shld
push
pusha
mov
call
bswap
jmp
mov
mov
test
sub
push
call
add
clc
stc
sub
pushl
jmp
add
sbb
add
call
xchg
push
add
jns
clc
pusha
add
cmp
test
bt
call
call
pushf
jmp
lea
xchg
xchg
mov
call
cmc
shrd
mov
movsbw
add
pushl
rol
bswap
pop
rol
ror
bswap
movw
not
call
not
pop
push
lea
mov
movsbw
push
call
pusha
call
rol
mov
jmp
mov
mov
push
lea
jmp
lea
pusha
lea
jmp
mov
pushf
pushl
mov
pushl
call
neg
test
xchg
pusha
pushf
movzbw
mov
lea
sbb
shrd
xchg
shl
xadd
pushl
popl
shrd
movl
movzbw
mov
ror
xor
xchg
add
ror
rcr
movsbw
bswap
stc
xchg
ror
test
lea
shld
sub
btr
mov
movsbw
mov
rcr
mov
cmc
sbb
add
bsr
cmc
mov
sbb
shr
or
cmc
add
sete
dec
inc
xor
neg
bts
ror
lea
add
mov
movzbl
movzbl
mov
push
mov
jmp
not
mov
not
pushf
xchg
repz
popl
sbb
xchg
ror
stc
mov
test
or
test
mov
push
and
mov
bsr
xchg
pushl
popl
pusha
jmp
mov
pop
movzbl
not
mov
movsbw
xchg
movw
pop
xchg
xchg
mov
bswap
bswap
lea
pop
repz
popl
shl
shrd
cmp
clc
push
stc
push
cmp
push
xor
shl
pushl
xadd
bswap
ror
push
bsf
mov
test
add
push
call
push
dec
pushl
jmp
jmp
xchg
bswap
lea
jbe
movsbw
push
lea
call
bt
bt
and
mov
dec
neg
bt
stc
push
xadd
mov
shld
or
pushl
test
btr
push
add
pushf
shr
mov
pop
clc
add
mov
bswap
clc
not
rol
ror
jmp
dec
test
pushf
add
clc
cmp
sub
pushf
call
inc
sub
bsr
pusha
pushf
not
sbb
jmp
clc
test
sub
jmp
pushl
popl
pushl
mov
lea
jmp
call
pushf
call
mov
jmp
sub
movb
push
call
jmp
call
xchg
bswap
push
jb
push
pop
push
movsbw
push
mov
push
call
mov
jmp
pushl
mov
movw
pusha
push
lea
jmp
pusha
movb
push
xchg
mov
movzbw
movsbw
mov
movzbw
mov
not
push
mov
push
movzbw
jmp
call
lea
push
movzbw
movzbw
push
mov
push
xchg
bswap
movzbw
mov
pusha
mov
pushl
movsbw
xchg
lea
repz
popl
btr
call
pushl
call
sub
and
call
mov
pusha
call
bsf
btr
mov
pushf
mov
pusha
cmp
pusha
not
jmp
bsr
mov
push
sar
add
push
mov
push
mov
movb
push
lea
jmp
lea
jnp
rep
pushf
mov
movzbw
xor
movsbw
mov
cmc
pushl
popf
mov
movl
lea
jmp
jmp
pusha
call
mov
movb
lea
jmp
mov
bt
bt
sub
lea
jns
push
mov
pushl
pusha
lea
jmp
call
cwtl
call
cmp
not
stc
sub
clc
and
jmp
pushl
popl
rcr
btr
btr
movl
sar
mov
xchg
btc
ror
add
pop
lea
bswap
call
pushf
mov
mov
pushf
pushf
lea
jmp
sub
add
jp
push
xor
pushl
bt
sub
stc
pusha
sub
pushf
call
pushf
popl
jmp
mov
push
lea
jmp
push
mov
pusha
mov
push
mov
pushl
ret
pushf
pushl
jmp
pusha
pusha
push
mov
movsbw
not
mov
jmp
pushf
popl
mov
pushf
pushl
popl
mov
pushf
lea
jmp
mov
pusha
sub
cmc
add
mov
pushl
mov
pushf
push
push
mov
lea
jmp
push
pushf
mov
pushf
pop
mov
mov
pop
jmp
dec
movl
mov
call
pop
xchg
not
jmp
mov
movb
pushl
popl
mov
pusha
lea
jmp
mov
jmp
rcl
cmp
stc
mov
cmc
cmc
call
or
btc
lea
pusha
pusha
test
movb
cmp
lea
jg
ja
adc
test
ror
mov
dec
aas
mov
lea
ror
sub
movzbw
cmc
adc
lea
ror
xor
stc
and
bsf
bts
sar
adc
sub
pushf
movw
pusha
bswap
mov
not
pushf
pushf
popl
mov
bswap
movzbw
push
cld
mov
cld
call
dec
clc
rcl
mov
sar
mov
push
cmc
sub
push
shr
pusha
jmp
sbb
pusha
jmp
call
push
pusha
pushf
mov
push
pushf
pushf
pushf
lea
jmp
movsbw
mov
jmp
bswap
setno
mov
bts
xadd
sar
mov
xchg
mov
add
shl
bsr
btc
bsr
mov
cmc
add
dec
pusha
movsbw
dec
mov
neg
pop
call
inc
jmp
cmp
pushl
popf
mov
lea
jmp
pushf
popl
pusha
pusha
pushl
popl
movb
lea
jmp
cmp
test
not
pushf
clc
test
xor
jmp
mov
cmp
sub
stc
jmp
call
sub
movw
stc
call
push
pusha
xchg
call
dec
sbb
clc
add
jmp
mov
mov
movb
divl
pusha
jmp
call
movw
mov
pusha
pushf
push
jmp
pusha
movb
rep
test
clc
call
mov
pushf
mov
pushl
ret
push
movb
jmp
mov
lea
call
mov
lea
jnp
mov
pusha
mov
movb
pusha
pushf
call
push
shl
jmp
movb
mov
pushf
lea
jmp
pushf
pusha
mov
pushf
movzbw
pushl
push
mov
not
mov
push
jmp
cmp
call
inc
mov
pusha
pushf
add
jmp
call
rol
pushf
pushf
mov
test
bswap
xadd
pushl
popl
bts
movzbw
movsbw
movl
not
mov
movzbw
not
or
add
stc
not
cmc
bswap
jg
pushf
ror
movsbw
call
pushf
jmp
jmp
jmp
call
pop
mov
mov
push
call
cmp
pushl
popf
mov
push
pushl
movb
lea
jmp
mov
movl
lea
jmp
stc
stc
movsbw
shl
mov
shld
add
rcr
not
mov
shr
xor
dec
movzbw
setle
call
pusha
xchg
pusha
bswap
mov
bswap
pop
mov
push
pop
movzbw
call
lea
movb
pushf
push
dec
call
mov
pushf
pushf
jmp
pusha
lea
jne
call
not
mov
call
pusha
clc
mov
call
not
mov
pop
pushf
pop
mov
lea
mov
jmp
lea
lea
pusha
movw
lea
jmp
dec
clc
rol
neg
jmp
lea
lea
movb
lea
jmp
jmp
pushf
mov
not
pusha
mov
push
pushf
pushl
mov
call
call
not
mov
call
and
pushf
cmc
cmp
pusha
jmp
lea
jae
pushf
mov
jmp
bsf
mov
clc
pushf
add
pusha
push
pushl
lea
jmp
not
pushl
repz
popl
cmp
cmp
mov
btr
rcl
jmp
pushl
lea
jge
popl
pusha
movb
lea
jmp
adc
rol
sbb
movzbl
clc
add
pusha
pushl
pushf
call
mov
not
not
bswap
pushf
mov
movsbl
repz
popl
shl
add
xadd
bt
mov
bts
shld
mov
shr
mov
not
sar
pushl
popl
shr
movl
shrd
dec
mov
pusha
and
lea
sub
add
call
rcl
bswap
pop
stc
ror
movzbw
jmp
add
add
clc
sub
je
not
pushf
clc
jmp
pushl
mov
pushl
mov
pushf
mov
pushf
lea
jmp
cmp
mov
push
push
or
push
lea
je
pushf
movb
cmp
xor
stc
mov
movb
bt
xchg
cmp
mov
stc
mov
call
movsbl
lea
pushl
movb
lea
jmp
cmp
test
ror
clc
notl
test
rcr
mov
pusha
sub
clc
test
bt
and
pushf
jmp
clc
mov
rol
mov
inc
shl
mov
stc
cmc
add
cmc
cmp
shrd
call
rol
not
bswap
ror
rol
bts
ror
mov
pushf
lea
pusha
pushf
lea
jmp
cwtl
push
pop
mov
call
mov
bt
jmp
call
sar
and
cmp
mov
clc
call
pushf
lea
jo
lea
pushf
pusha
call
mov
bswap
bswap
mov
pushf
mov
push
not
pusha
movzbw
xchg
call
not
lea
push
lea
jmp
rdtsc
aas
bsf
btr
mov
bts
cmp
lahf
xadd
pop
movsbw
pop
ror
neg
pop
rcl
pop
shl
xadd
push
mov
stc
pushl
popf
jmp
cmpl
jmp
jmp
bswap
call
stc
add
pusha
mov
movb
lea
jmp
add
cmc
mov
jmp
mov
lea
pusha
pop
lea
mov
mov
lea
jmp
pushf
movl
push
call
add
jmp
jmp
xadd
neg
mov
add
movzbw
adc
mov
jmp
push
call
pushl
xchg
not
mov
bswap
lea
repz
popl
bswap
mov
btr
lea
movzbw
mov
btc
mov
sub
btr
or
shl
pushl
popl
call
mov
mov
push
push
lea
jmp
mov
clc
pusha
test
sub
call
pushf
jmp
call
call
lea
jne
and
xorb
movzbl
movzbw
movsbw
push
mov
pushf
pushl
pushf
lea
jmp
sar
call
movsbw
neg
shl
mov
clc
shl
mov
bt
bt
stc
bt
add
call
movsbw
btr
bsf
mov
cmc
clc
sub
bt
cmc
add
jmp
pushl
mov
pushf
popl
jmp
inc
clc
cmc
cmc
add
jmp
pushf
popl
mov
pushl
popl
mov
pushf
mov
lea
jmp
mov
jmp
mov
pushf
mov
repz
popl
bt
mov
sar
sub
and
mov
xadd
rol
mov
jmp
mov
pushf
lea
jmp
pushf
mov
call
clc
and
pusha
call
movl
mov
call
mov
pusha
lea
jmp
add
cmc
bt
push
sub
pusha
pushl
mov
push
push
lea
jmp
mov
pushf
lea
jmp
sub
movb
sub
jae
cmc
clc
add
push
call
add
dec
and
cmc
xor
mov
cmc
sub
jmp
push
mov
bts
sub
lea
push
mov
movzbl
dec
mov
xor
bsf
ror
not
not
bts
sub
sets
movzbw
adc
xor
xor
push
rcl
sbb
sub
cmc
movzbl
call
pusha
pushl
pushl
popl
pushf
lea
jmp
pushf
popl
pushf
pushl
popl
mov
movb
lea
jmp
