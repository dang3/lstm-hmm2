incl
in
sub
lea
push
push
push
fbstp
insb
push
lea
push
sbb
add
add
add
in
leave
ret
inc
adc
dec
stos
std
ljmp
adc
add
add
mov
jmp
movsl
fcomp
inc
mov
loopne
push
adc
push
leave
cmpl
imul
jne
jl
inc
ss
sbb
andl
in
push
xchg
push
or
add
outsl
xor
adc
push
mov
push
jle
add
push
jns
or
outsb
lahf
jb
push
push
sub
xchg
push
xor
cld
push
push
xor
or
inc
in
in
hlt
outsb
hlt
jp
nop
xchg
adc
sbb
movlps
sub
movsb
mov
in
mov
push
inc
popa
es
in
or
pop
clc
push
push
mov
gs
cltd
sbb
rorl
mov
pop
jg
addl
push
decl
lods
in
push
imul
and
test
xchg
sbbb
cmp
push
adc
clc
fnstenv
jno
dec
pop
and
adc
push
jb
lods
sbb
ret
inc
outsb
cmp
inc
dec
push
sub
ljmp
sub
push
or
pop
add
mov
sub
ljmp
shl
mov
sti
add
push
adc
inc
add
mov
add
nop
or
jne
xchg
fwait
pop
out
js
push
je
hlt
fbstp
lods
inc
mov
stos
and
pusha
pop
sbbl
ret
xor
dec
add
xor
bound
jae
aaa
adc
je
push
addb
loop
cmp
inc
call
cmp
addr16
pop
mov
clc
mov
pop
sbb
inc
nop
mov
cwtl
sahf
ret
arpl
adc
mov
mov
pop
pop
sub
adc
sub
sub
fdivrl
ljmp
lods
push
roll
xchg
push
adc
fs
push
jno
push
insl
idiv
cmp
inc
inc
dec
imul
repnz
lock
ja
js
jecxz
test
add
push
push
inc
add
or
push
push
cmovs
loopne
pop
clc
inc
and
sub
inc
negl
loopne
mov
pop
push
gs
jl
lock
addr16
xorl
mov
call
dec
dec
pop
fildll
stc
je
loopne
sub
std
push
push
pusha
loopne
xchg
and
jg
nop
add
movlhps
orl
push
adc
dec
pop
ljmp
outsl
jae
and
ljmp
insl
xor
js
sub
scas
aas
mov
push
xchg
stc
hlt
call
xchg
stc
movsl
sbb
mov
cmpsb
ja
je
xor
jae
or
lahf
fimuls
cmpsb
ret
addr16
insl
mov
push
ja
hlt
push
shl
or
roll
cmpb
out
sbb
and
dec
add
sub
into
bsf
aam
fnsave
push
sub
addr16
hlt
add
jbe
push
imul
jbe
insb
hlt
xchg
xchg
fsubrs
lahf
push
and
or
jae
xchg
add
adc
loope
add
cmp
scas
mov
arpl
push
pop
pop
inc
ds
cmp
rorb
or
out
pop
jbe
aaa
inc
enter
push
mov
xor
gs
in
cmp
lock
pop
addr16
stc
lock
sbbb
lea
cmp
cmp
xor
dec
inc
in
bnd
cmp
jle
sbb
mov
movsb
rclb
jp
out
push
jb
push
gs
xlat
loopne
dec
push
add
ja
fsubrs
push
ja
pop
sbb
fs
push
push
push
fiaddl
add
lock
mov
hlt
fdivl
je
pop
fisubrs
push
imul
aam
insl
jp
sub
mov
roll
push
icebp
or
or
jne
hlt
mov
sbb
jecxz
dec
idivb
add
pop
fsubrl
std
sub
loopne
in
ja
jecxz
cwtl
xor
push
xor
pop
aas
in
inc
cwtl
add
pop
js
pop
mov
xchg
dec
dec
pop
pop
push
loopnew
outsl
sbb
ljmp
test
sub
xchg
orl
and
insb
push
xor
in
mov
sub
adc
sub
or
push
add
pusha
and
push
mov
lret
adc
aas
sbb
add
add
inc
xchg
loop
ja
xor
inc
imul
adc
lret
sub
push
add
inc
add
adc
subl
scas
jne
xor
sbb
in
out
dec
cld
fisttps
movsb
mov
xor
pop
add
xor
jmp
sbb
sbb
push
xor
push
subl
xchg
dec
cmp
fcompl
and
aas
push
pop
testb
add
pop
inc
dec
cmp
dec
ss
adc
mov
jo
enter
mov
adc
push
push
dec
push
inc
pop
fldt
push
sub
outsl
filds
add
and
enter
or
sub
inc
aam
mov
xor
cld
push
or
jo
out
jnp
ja
jns
push
lock
or
mov
fidivs
sbb
in
push
mov
dec
dec
push
jns
push
mov
call
fcomp
add
fiadds
stos
movsl
push
ret
popa
add
mov
inc
push
pusha
xchg
daa
pusha
sub
xor
loope
pop
ds
inc
test
push
popf
mov
adc
jmp
bound
mov
lret
adc
mov
mov
imul
mov
sub
sahf
push
test
fisubs
add
pop
adc
push
add
sub
push
xchg
jae
fbld
cmpsb
push
inc
xor
sbb
mov
pop
push
cmp
bound
add
xchg
mov
cld
lods
push
jns
hlt
pushf
dec
adc
call
dec
inc
dec
cltd
cmp
adcb
nop
sub
aas
sbb
mov
dec
adc
push
xorb
je
push
cwtl
adc
test
pop
decl
xor
adc
pop
dec
sub
push
in
jmp
dec
dec
dec
push
push
stos
inc
jle
mov
xchg
xchg
lcall
cs
daa
mov
xchg
orb
cmp
ljmp
xor
dec
stos
insl
inc
lds
cmpsb
inc
aas
js
icebp
pop
jne
outsl
pop
dec
iret
sbb
adc
dec
sub
mov
mov
pop
ds
sub
sbb
sub
add
add
push
jg
mov
push
dec
int3
mov
inc
sbb
icebp
inc
push
mov
jns
push
test
js
jbe
cli
xchg
and
bound
out
cmc
dec
js
sub
imul
out
lcall
push
adc
jne
hlt
addl
test
test
push
ja
xbegin
inc
push
ja
or
enter
inc
inc
andl
iret
fistpll
cld
loopne
push
xor
push
inc
outsl
push
test
hlt
sub
sbb
sbb
cmp
xor
dec
addr16
add
movl
mov
dec
sbb
loopne
adc
dec
mov
mov
cmp
cs
mov
dec
fs
je
ss
fnstenv
sbb
sbb
ret
add
pop
pop
dec
xchg
adc
lahf
push
sub
mov
dec
inc
inc
pop
lock
js
add
inc
or
inc
ss
push
mov
or
adc
icebp
jmp
inc
cld
sub
push
pop
and
sbb
xchg
cli
incl
lock
inc
mov
dec
mov
loopne
xlat
mov
cmp
js
add
dec
pop
adc
dec
add
cmp
inc
stc
fwait
xlat
stos
pop
add
fdivrl
gs
push
pop
or
icebp
mov
add
test
sub
test
inc
push
add
mov
call
push
jo
jns
mov
push
fwait
cmp
mov
push
push
sar
test
inc
arpl
out
scas
mov
jns
add
and
loope
adc
and
push
push
push
loopne
lods
and
or
addl
push
movsl
jae
cmp
es
aas
adc
cmp
dec
jb
imul
dec
bound
jns
data16
jne
ss
mov
fiaddl
loopne
je
adc
ret
push
fnstsw
call
fwait
mov
jnp
adc
mov
push
addr16
jne
or
outsb
insl
outsl
push
add
inc
push
sbb
sub
ret
sub
jae
pop
cmp
xor
dec
add
dec
fstl
dec
push
imul
push
push
sub
mov
std
add
xor
jle
rol
adcb
je
inc
lret
negl
bound
arpl
dec
into
pushf
filds
lds
test
leave
inc
sub
add
enter
jmp
jge
imul
roll
stc
sbb
ljmp
mov
xchg
jb
pop
scas
jle
pop
nop
dec
iret
inc
xor
jo
clc
adc
jae
dec
add
movl
add
xor
pop
dec
push
addl
push
jp
js
inc
lods
aas
pusha
jne
xor
divb
std
sbb
dec
and
cmpsl
sub
sub
icebp
in
addb
sub
stc
stos
adc
adcb
push
or
sub
sbb
js
push
cmc
inc
add
dec
test
ret
stos
inc
cmpsb
sbb
push
ret
sbb
imul
push
fsub
stos
call
imul
inc
nop
stc
out
stos
ds
jne
add
stc
sub
push
pop
test
inc
adc
add
js
mov
or
sbb
push
push
cmc
nop
xor
arpl
aam
das
in
jno
loope
testl
stos
or
jecxz
orl
jne
ror
fmull
cmp
push
jns
add
jo
imul
and
add
cmp
jbe
xor
lock
jmp
cmp
push
mov
div
sbb
cld
push
bnd
pushf
sbb
clc
add
mov
sub
add
and
inc
and
push
ljmp
pop
and
fcoms
mov
enter
das
push
rorl
mov
ss
out
push
shlb
push
mov
jb
mov
and
pop
out
dec
mov
js
sub
and
xchg
cmp
insl
adc
push
mov
add
ds
arpl
jno
inc
xor
xor
add
jp
push
mov
jg
pop
andl
xchg
arpl
dec
movsl
xor
js
das
sbb
adc
jp
insb
pop
dec
cmpsb
sbb
mov
jnp
lock
or
xchg
testb
arpl
inc
cmp
lahf
add
aas
cmpsb
inc
push
push
push
push
lock
cmp
rorb
jg
jno
les
ja
mov
inc
pop
or
push
inc
mov
push
dec
ret
decb
enter
imul
int3
mov
ds
jmp
push
cmpl
add
push
or
lock
mov
fsubrs
movsl
aad
imull
mov
push
inc
pop
cmp
adc
sti
cmp
icebp
test
inc
xor
ss
addl
shrl
jo
or
xchg
sbbb
out
addl
push
cli
add
in
mov
pop
repz
rcrb
lods
pop
js
je
add
dec
inc
sbbl
jne
sub
insb
xchg
sbb
mov
adc
inc
fiadds
add
mov
pop
push
push
loopne
lret
inc
mov
add
dec
incl
loopne
xchg
out
pushf
cmp
sub
mov
jg
pushl
inc
loop
mull
inc
add
insl
stos
jbe
pop
mov
pop
fadds
into
xchg
sbb
dec
std
int
ja
jno
inc
dec
or
mov
mov
sti
in
in
xchg
jmp
xchg
call
into
mov
add
push
push
add
push
pushl
mov
xor
aad
out
cs
test
or
jbe
orb
push
repz
popf
outsb
adc
mov
fiadds
out
mov
jb
out
mov
imul
scas
xchg
pop
or
aaa
ja
ja
xor
insl
shlb
mov
movsb
xor
inc
adc
mov
add
or
xor
inc
popa
mov
inc
mov
sahf
pushl
outsl
add
test
push
lods
je
sub
cld
cmp
iret
in
aas
fsubrl
and
push
xchg
mov
mov
into
pusha
lock
incb
in
xchg
add
loop
in
incb
fdivl
icebp
mov
pop
dec
shrl
or
enter
add
cli
cmp
sbb
aaa
pop
sbb
lcall
mov
rcrl
add
add
fistps
in
into
imul
insb
adc
inc
in
lcall
icebp
or
sub
stc
lea
loop
bound
ja
push
and
mov
icebp
jo
push
jg
popa
adc
mov
push
pop
daa
aad
dec
mov
xchg
xor
or
fwait
sti
addr16
lods
fdivrl
ds
pop
ud0
jb
cmp
sub
aaa
add
imul
clc
xor
cmp
push
negl
fdivrp
inc
mov
andl
adc
cmp
faddl
jge
lods
inc
movsb
repz
jle
mov
pop
clc
mov
adcl
jge
add
cmp
cmpsl
add
test
push
fwait
lods
mov
push
mov
aas
aam
jbe
test
pushw
sbb
sbb
and
xchg
jg
incl
and
imul
ret
aas
xchg
mov
mov
adc
les
sarl
fisubrs
and
loope
sbb
pushl
dec
mov
out
fbstp
jbe
in
dec
sbb
inc
inc
push
mov
cli
or
xchg
out
mov
mov
add
jbe
xor
lock
clc
out
std
cmp
adc
outsl
lock
add
enter
nop
sbb
jecxz
push
or
sti
xor
mov
clc
pop
lret
bound
repz
mov
adc
cmp
enter
enter
mov
dec
or
int
push
jns
and
mov
and
out
insb
push
jmp
push
lds
mov
xchg
push
mov
pusha
adc
lahf
mov
sub
subl
mov
jae
pop
leave
lcall
movsl
or
sbb
cmp
jge
or
sbbb
add
pusha
or
fistps
xor
jle
mov
ret
pop
mov
mov
cmp
or
decb
lret
fldl
adc
jl
sub
sbb
aas
pop
in
ficoml
dec
pop
dec
add
inc
loop
sbb
push
add
cwtl
mov
out
push
mov
lret
cmp
aas
insl
push
rcll
pop
rcll
sub
ja
adc
ja
and
aad
inc
xlat
stc
sbb
pop
jmp
push
dec
in
ja
xor
jp
fistps
inc
outsb
shrl
add
es
ret
movl
mov
xchg
pop
inc
fdivrl
mov
js
mov
adc
and
pop
mov
push
add
sub
adc
cld
ret
repnz
jnp
clc
fwait
mov
andl
shl
sbb
jle
ud0
sbbl
clc
pusha
mov
mov
push
mov
popa
sbb
iret
ja
lcall
cmp
mov
dec
es
xchg
mov
mov
inc
jae
divl
jnp
fistpll
sbb
jnp
mov
sub
fs
int
sar
cmp
ret
xchg
push
mov
loopne
cli
out
andl
or
nop
fstpl
arpl
mov
mov
sahf
add
enter
dec
mov
popf
repnz
lahf
out
bswap
hlt
clc
or
mov
lret
cmp
sub
outsl
into
mov
and
clc
nop
ror
pop
and
pop
test
lcall
mov
cwtl
pushf
fists
cmp
call
cmpsl
mov
xchg
xchg
stos
pop
lods
in
jbe
jle
pop
inc
decl
or
add
dec
xchg
cmp
push
sar
sub
pop
aas
mov
sub
decb
cmp
xor
shr
xchg
sbb
jmp
call
lock
fidivrl
pop
outsb
iret
push
sar
test
movsl
insl
outsl
or
jns
pop
loopne
mov
addr16
mov
cs
mov
sti
mov
add
loopne
ljmp
dec
inc
test
and
fsubrs
std
sub
call
pop
pop
mov
jg
decl
sbb
and
mov
loope
mov
rcll
test
mov
in
push
dec
add
fistpll
pop
jg
std
or
add
ret
clc
xor
or
push
lcall
push
movb
sbbb
push
divl
sbb
jge
clc
push
xchg
clc
aas
mov
insl
aad
cmpsb
nop
xorl
ss
pop
add
xchg
js
ss
shrl
mov
loop
jl
test
xchg
repnz
jecxz
sarb
push
les
arpl
dec
ljmp
mov
push
inc
les
sub
inc
ja
jbe
cmpsb
sti
pop
or
clc
pop
push
fildl
push
mov
hlt
aas
arpl
std
mov
aad
xor
mov
sti
out
sarb
jb
icebp
stos
sbb
cmp
lcall
std
repnz
stos
xchg
push
adc
stos
movsl
mov
pop
div
pop
ss
lret
pop
mov
testl
leave
imul
aam
sbb
pop
jmp
lcall
cmpb
sbb
sub
testb
fdivl
xor
aaa
xchg
repnz
jg
jle
je
pop
dec
negb
fwait
mov
jb
pop
into
and
xor
idiv
gs
clc
aaa
mov
aad
push
outsl
xchg
jecxz
jmp
mov
sub
cli
jns
daa
and
clc
iret
loop
mov
jle
popf
jmp
mov
push
nop
cmp
mov
bound
mov
cmp
dec
mov
sbb
jne
orb
insl
int
push
cli
iret
incb
aam
hlt
in
cmc
xor
fcomp
lods
xlat
sub
stos
mov
pop
jo
in
cwtl
pop
inc
rclb
pop
out
xor
push
mov
sbb
fidivl
out
movsb
xchg
add
mov
push
popf
fsubrp
scas
push
add
outsb
sbb
pop
clc
inc
sbb
decb
push
and
adc
fistl
pop
outsb
push
add
out
mov
add
push
push
or
adc
out
cld
ffreep
aas
data16
add
insl
int3
das
or
fldcw
pop
popa
cmp
mov
repnz
sti
pop
jo
cmp
shrl
lret
sahf
dec
mov
adc
inc
popa
sub
mov
leave
loope
sbb
lea
pop
fnsave
pop
imul
sbb
push
mov
repnz
or
or
pop
out
ljmp
lret
xor
mov
dec
dec
call
sbb
inc
scas
push
mov
push
sbb
scas
pop
aas
lods
lods
pop
mov
xor
pop
fdivl
cwtl
inc
insb
add
ret
xor
mull
mov
outsb
icebp
add
xchg
andb
mov
adc
mov
xor
cmp
in
xchg
sbb
sbb
mov
cmp
and
inc
lretw
test
das
mov
mov
cs
sub
test
mov
mov
rcrb
addl
jl
mov
aas
loope
pop
ds
cmp
push
stos
cmp
sbb
mov
addr16
push
movsl
mov
inc
or
add
inc
stos
push
lods
enter
ja
cmp
dec
gs
lods
je
int
test
jmp
fimuls
pusha
add
add
ret
ja
out
push
sbb
mov
incl
adc
loopne
shl
mov
adc
push
and
sar
push
mov
fs
pop
mov
add
mov
inc
pop
add
in
shlb
dec
std
jg
or
xchg
xor
or
stos
pusha
stos
std
mov
movsl
pop
test
cmpb
or
decl
push
ret
adc
int
in
sbb
mov
xchg
mov
pop
mov
inc
push
jge
lock
ss
xchg
sbb
mov
fdivl
pushf
lock
fs
jne
pop
out
pop
scas
dec
xorl
loope
pop
cmp
dec
jmp
sub
add
in
lret
cmc
clc
scas
xlat
inc
mov
push
dec
mov
jae
dec
inc
add
xchg
rorl
add
sbb
sub
int
and
mov
aas
xchg
repz
dec
jl
cmpsb
ljmp
xor
dec
or
mov
loop
pushw
dec
push
jnp
sbb
lds
push
mov
or
inc
std
in
or
sbb
or
cli
ja
fistpll
pop
or
mov
addr16
push
add
xchg
cmpsl
jp
xor
dec
jecxz
gs
mov
iret
lds
xor
loopne
paddusw
pusha
shl
sub
xchg
lock
stc
inc
cld
xchg
lock
orb
cmp
clc
jno
jo
rorb
sub
dec
imul
fistpll
mov
pop
dec
lock
shll
mov
inc
cld
pop
push
or
cwtl
testl
out
push
pop
mov
mov
fnstcw
mov
ja
mov
pop
jl
pop
hlt
cltd
mov
fistpll
inc
ljmp
mov
pusha
lock
xlat
jo
sarl
mov
lcall
xchg
mov
dec
xor
push
mov
js
xchg
adc
rcll
dec
out
pop
jg
sub
dec
loop
and
fbstp
stos
sub
mov
jno
xor
inc
mov
shrl
sbb
mov
or
call
adc
movsb
or
push
jl
arpl
icebp
jnp
push
push
incl
mov
jbe
repnz
das
cmpsl
jg
jg
push
call
fnstenv
push
cmp
loop
push
decl
mov
cs
jno
jo
mov
jecxz
xor
push
xor
and
repz
push
mov
jle
inc
insb
add
ja
dec
adc
inc
xchg
cmp
notb
arpl
sarb
fsub
loop
xlat
scas
lock
inc
push
add
cmpsb
sub
cmp
loopne
pop
pop
push
int3
ja
cmpsb
dec
dec
push
aas
cmp
addps
xchg
cwtl
es
push
fimull
aad
and
mov
popf
negb
ret
sub
xlat
js
jae
test
inc
fclex
shll
lods
mov
aad
mov
and
lahf
sarl
push
and
pop
inc
pop
rorb
pusha
in
mov
xor
xchg
stos
sub
shrd
scas
xor
sub
outsl
repz
shlb
hlt
sub
mov
sbb
lcall
icebp
out
push
call
add
loopne
xchg
push
add
mov
addr16
mov
sbb
lods
pop
xor
mov
mov
xor
rclb
pop
test
out
cmp
std
lea
or
push
in
out
fbstp
enter
out
dec
lods
xchg
inc
gs
lcall
adc
hlt
mov
cld
pushl
sub
adc
or
fidivrl
mov
cmc
cmp
test
leave
add
cmp
cmpsl
sti
mov
sub
jo
mov
add
or
ret
fistl
adc
cli
cmp
jmp
fldl
sub
aad
mov
popf
mov
stc
das
xor
sub
sti
push
xchg
pop
pop
xchg
clc
inc
mov
inc
push
cwtl
stos
add
enter
xchg
repz
cmp
es
sti
incl
shr
xor
xchg
xor
mov
sub
lock
stos
dec
jl
dec
std
push
pop
faddl
add
aas
pop
loope
xchg
mov
test
or
xor
mov
fimuls
fwait
pop
out
andl
call
cs
jl
sti
push
xchg
mov
jge
inc
mov
testl
and
push
sbb
loop
xchg
and
ss
lret
das
or
and
pushf
push
pop
test
xchg
scas
aas
lods
lock
imul
ret
xor
push
mov
cld
dec
lock
incl
push
fbld
dec
test
push
xor
popf
rol
ja
decl
push
aas
or
cmp
cltd
das
idiv
inc
jl
movl
or
sbb
xor
popa
ja
addr16
jbe
xchg
jge
cmp
cmp
mov
rcr
les
pop
lods
mov
inc
ljmp
cltd
adc
in
ret
xchg
and
arpl
das
icebp
sub
push
sbb
popa
or
loopne
mov
xchg
aas
cwtl
add
mov
aam
int3
cmc
mov
and
testl
fldt
call
and
add
mov
out
out
jbe
mov
mov
aad
adc
mov
mov
sbb
push
test
mov
notl
fs
es
lahf
hlt
or
pop
push
out
fst
or
sarb
cmp
mov
pop
loop
adc
mov
pushl
pop
aaa
hlt
sbb
fsub
loop
sbb
dec
cli
inc
xchg
fwait
sahf
fstpl
adc
enter
stos
xchg
mov
mov
and
adc
pusha
mov
into
loop
xor
mov
sub
aad
inc
or
mov
scas
push
dec
sbbb
ja
adc
frstor
ja
xor
into
ret
stos
ffreep
adc
and
jg
jbe
ret
mov
cmp
mov
lock
or
jg
out
cmp
int
or
out
out
fdivrp
fldl
mov
xchg
js
daa
jmp
lret
xor
fmul
mov
dec
pop
dec
stos
lahf
mov
ret
clc
fnstsw
sbb
or
loopne
mov
sbb
aas
dec
pop
jl
pushf
mov
jo
sbb
jecxz
push
sub
sar
jg
ret
out
add
pop
pop
filds
xchg
aad
hlt
mov
sub
out
pop
std
dec
or
sbb
adc
and
test
mov
mov
in
jmp
or
repnz
jnp
jmp
imulb
jl
mov
icebp
sub
pushl
pop
idivl
loop
fbstp
jp
mulb
loope
incb
fucomp
xor
rol
scas
icebp
jp
clc
femms
lcall
pop
aaa
push
cltd
and
movsb
adc
dec
pop
js
sahf
cmp
test
mov
cmc
cmp
fmul
ljmp
or
xchg
mov
loope
insb
inc
shrl
call
hlt
dec
jecxz
mov
xchg
adc
stos
inc
mov
push
int3
add
lods
fadds
test
ja
rolb
popa
arpl
xor
decl
dec
mov
ficompl
pushf
enter
jle
inc
mov
sbb
out
lock
pop
cwtl
ljmp
push
fbstp
pusha
sub
sub
add
out
decb
shll
push
or
aas
pop
jl
out
inc
mov
dec
fs
fs
mov
sbb
lcall
mov
mov
push
gs
into
fwait
jnp
xchg
loopne
sar
ljmp
sub
cli
mov
jmp
out
and
adc
lods
fwait
aaa
or
adc
cmp
stos
mov
neg
les
inc
sarl
mov
jnp
xlat
enter
push
cmpl
scas
jo
sti
mov
jne
aas
mov
sbb
das
sbb
push
ret
clc
out
outsl
sbb
jae
mov
jae
pushl
pop
dec
scas
clc
inc
xchg
adc
insl
mov
fidivrs
cmp
repnz
dec
incb
cmp
mov
test
clc
mov
aaa
loop
xchg
les
inc
inc
mov
fsubl
loopne
in
or
jno
xchg
jmp
jbe
shrl
sarl
icebp
scas
or
insl
idivb
clc
mov
jne
pop
jmp
or
sbb
test
out
out
jg
xor
pop
shl
insb
call
call
jg
pop
pop
cmp
mov
movsl
add
movsb
push
fnstsw
cli
and
sub
shlb
insl
add
pop
fsts
jl
dec
lea
push
clc
push
dec
enter
dec
popl
and
icebp
std
jg
jae
xchg
sti
xor
mov
out
and
dec
je
jmp
mov
pop
lahf
mov
inc
incw
es
xchg
bound
hlt
or
nopl
pcmpeqb
clc
mov
dec
add
inc
inc
xor
daa
cmp
jle
jecxz
movsb
mov
mov
mov
lods
pop
cwtl
sbb
pop
cld
lcall
mov
mov
jg
inc
cld
sbb
pop
push
dec
push
or
jns
xor
pinsrw
aad
mov
inc
and
mov
jg
outsl
mov
cld
push
shll
test
jae
bts
stos
mov
lret
notl
mov
stos
stos
jg
jnp
int
call
in
adc
lret
pushl
fnsave
adc
out
add
bound
cs
sub
xchg
xor
test
sbb
xchg
jp
or
es
shll
add
push
or
push
jp
mov
int3
lea
sti
mov
add
xor
jl
mov
test
in
in
cmp
ret
outsl
lahf
cli
adc
std
jb
and
push
enter
sub
aaa
scas
sub
dec
inc
out
cmp
push
dec
mov
out
or
sbb
fisttpll
scas
clc
mov
dec
cld
sub
popf
popa
bound
out
pop
out
inc
sbb
mov
cmp
or
mov
aad
jge
lods
mov
fbstp
or
mov
mov
test
inc
cmp
bound
pusha
std
cmp
mov
and
jb
jnp
js
fwait
mov
loope
xlat
outsl
jno
cmp
xchg
stos
inc
xchg
cltd
enter
aas
cwtl
in
insb
adc
cld
ljmp
pop
out
adc
xlat
mov
arpl
test
adc
push
incb
dec
inc
lea
out
ljmp
jp
adc
out
inc
ret
cli
pop
call
out
jnp
xorl
rorl
hlt
daa
xlat
inc
adc
sub
ja
mov
popf
sub
repz
jecxz
adc
mov
loop
mov
lahf
movsl
inc
jmp
cmp
je
ja
dec
clc
pop
jecxz
cwtl
scas
mov
and
int
add
aas
xchg
shrb
cs
mov
inc
pcmpeqd
and
mov
pusha
add
lahf
sarl
xlat
pop
jno
cmp
push
nop
hlt
popf
sti
pop
dec
pushl
sub
push
out
pop
loopne
mov
inc
sahf
xor
into
div
cmpsb
xchg
pushf
sub
sahf
loopne
lea
imull
mov
enter
cmc
aas
hlt
sbb
inc
scas
xchg
mov
pop
mov
xchg
data16
pop
mov
lahf
cmc
and
stc
idivl
push
inc
mov
add
dec
xor
decb
clc
pop
icebp
rclb
lret
push
test
fisubrs
or
pusha
xchg
ret
pop
ljmp
jl
or
push
push
inc
inc
js
cmp
test
stos
xchg
push
push
pop
sub
add
sbb
pop
cld
jg
icebp
mov
cmp
sti
stos
iret
loopne
pop
pop
add
popa
enter
addr16
loopne
nop
lcall
stos
jg
mov
insb
lock
xchg
inc
shlb
dec
idiv
mov
fsub
push
out
cmc
arpl
ja
lea
xor
xlat
in
int
jp
repz
push
inc
incl
jge
add
ljmp
mov
mov
jae
aas
add
or
xchg
shrl
lods
call
std
jg
ds
mov
xor
mov
xor
add
aam
pop
dec
mov
push
mov
out
pop
in
jne
aas
nopl
insl
enter
pop
cli
js
imul
dec
mov
mov
cmp
bound
sahf
movsb
cld
inc
or
rep
sarb
jbe,pn
out
jnp
dec
push
and
call
iret
sbb
repnz
std
mov
mov
push
addb
jg
jg
pop
fcoms
loopne
cmp
mov
push
sarb
cmp
mov
dec
cmp
xchg
lds
mov
mov
ja
add
xor
mov
mov
repnz
sbb
out
cmp
jnp
sub
dec
inc
pop
outsb
int
pop
push
clc
mov
lds
div
outsl
loope
mov
sbb
ficompl
aam
xchg
and
nop
loop
dec
stos
dec
push
in
cli
adc
ud0
insl
inc
outsl
cmp
cld
jbe
out
cmp
dec
xor
or
je
or
psrld
incl
xchg
jl
mov
leave
lds
call
in
pop
insl
test
lahf
adc
fnstcw
pop
xor
insb
cmp
sbb
lret
mov
mov
inc
cmp
iret
fs
mov
scas
push
pushf
shll
call
jge
hlt
mov
jg
fistps
ja
lock
aas
and
stos
mov
icebp
sub
add
mov
arpl
into
pop
call
pop
jp
rcll
mov
fimuls
add
push
pop
addl
jg
and
jg
adc
cs
mov
int
pushf
push
shrl
add
or
outsl
jno
and
xor
pop
addr16
faddl
lods
mov
mov
iret
push
stos
mov
adc
pop
adcl
jae
push
loope
inc
adc
out
cmp
outsl
out
dec
call
push
mov
xor
or
push
cmp
das
pushf
mov
arpl
push
pop
and
mov
mov
mov
jg
imul
inc
cbtw
addr16
jmp
mov
jns
mov
les
clc
sbb
push
out
fsubs
pop
adc
pusha
iret
xchg
pop
bound
add
test
mov
mov
ret
mov
aaa
cmp
in
jmp
incb
lahf
sbbl
leave
sbb
fnstsw
mov
add
pop
sbbb
sub
xchg
cmc
lcall
test
loopne
jno
rcr
xchg
lds
and
test
clc
jg
lcall
dec
lods
outsl
repnz
sbb
sbb
xchg
push
fildll
test
das
xchg
mov
loopne
ljmp
icebp
ret
adc
jge
mov
shrl
addb
mul
add
icebp
int
jg
mov
fistps
jae
and
addb
in
leave
cmp
insb
lds
lret
mov
mov
lcall
xchg
sbb
jmp
ljmp
adc
icebp
jns
sbbl
lds
jl
mov
pushf
int
sbb
hlt
stc
jge
cmpsl
lcall
into
cmp
mov
clc
push
shlb
add
inc
decb
divl
lret
rolb
pop
fucom
xchg
sub
pusha
test
push
mov
ret
hlt
xlat
or
dec
mov
out
ja
sbb
add
push
cld
inc
jge
pop
sti
aaa
push
or
call
sub
std
rcrl
data16
sub
push
icebp
fildll
xorl
add
xor
sarb
clc
pop
ret
fcomp
push
aas
int
fwait
sarl
inc
ret
push
xor
adc
sbb
mov
pop
cmp
cld
sbb
pop
adcb
pop
sub
loope
dec
icebp
jo
jne
cmc
mov
jg
call
mov
mov
dec
mov
adc
loope
stc
mov
mov
fwait
cmc
popf
jnp
in
clc
aad
cmp
lret
add
cmc
add
add
inc
leave
inc
mov
adc
mov
ja
xor
int3
mov
jne
mov
das
ds
in
inc
sbb
push
adc
sub
jge
adc
int
or
sahf
xor
add
sbb
sbb
push
mov
xchg
in
sub
lahf
add
dec
and
pushl
mov
stos
fstpt
dec
movsl
cmp
loopne
or
jae
cmp
scas
lcall
mov
jne
fwait
push
cmp
pushf
cmc
pop
mov
das
rcrb
jg
cld
aas
cld
shlb
hlt
inc
mov
out
outsl
test
lods
push
iret
xor
ret
repnz
and
push
and
test
xorl
push
arpl
dec
aaa
fwait
push
dec
hlt
out
push
je
insl
xchg
push
out
mov
mov
out
dec
adc
enter
cmp
pop
jne
dec
inc
mov
pop
adc
xor
xchg
ret
jg
ret
sub
outsl
in
fildl
adc
mov
lahf
jae
cmp
cld
jg
push
mov
jmp
sar
imul
std
mov
jl
sub
decl
fwait
pop
jae
pop
stos
popf
dec
addb
xchg
cmc
std
sbb
nop
pop
sub
das
or
inc
pop
pop
call
pusha
push
in
pop
jg
fistps
mov
outsb
lahf
pop
ljmp
popa
aam
inc
cli
sar
dec
stc
pop
decb
pop
xchg
sahf
and
cmpsb
cmp
pop
sbb
mov
sbbb
testb
sar
aas
sbb
call
add
scas
cmp
lahf
push
std
cmp
sub
dec
xchg
sbb
ret
adc
mov
xchg
imull
test
and
aas
or
sbb
outsb
leave
les
and
mov
push
sbb
dec
mov
mov
jmp
lods
jle
inc
aas
cmp
insb
xchg
xchg
out
inc
jne
sub
stc
adc
std
daa
shll
dec
hlt
mov
inc
insl
pop
popa
mov
leave
sti
imul
into
je
mov
decl
lcall
mov
insl
and
pop
jge
xchg
pushf
mov
clc
call
or
jge
xor
mov
jge
sbb
inc
jg
je
push
mov
inc
fdivrs
pop
test
jg
cld
cmpsb
add
and
mov
sbb
add
mov
jg
sahf
sub
arpl
pop
outsb
cld
push
push
push
stos
lods
jg
cli
out
loopne
cmpsb
rcrb
lds
add
sbb
sub
pop
jl
dec
cmp
jp
jmp
movsl
or
movb
xor
ljmp
jb
cmpsb
bound
inc
mov
xor
xchg
sbb
cmp
inc
cmpsb
cmpsl
or
or
sub
jo
out
incb
xchg
push
imul
jnp
add
cld
add
call
scas
xor
lea
shll
lahf
sbb
les
push
std
aas
mov
jno
aam
scas
scas
inc
std
outsl
pusha
cmc
mov
adc
scas
adc
pop
push
idivl
ret
adc
mov
mov
ja
cli
xchg
je
repnz
and
and
fmull
incb
xor
aam
jecxz
mov
dec
sub
testb
gs
jg
mov
mov
ja
or
sub
pop
adc
incl
cs
scas
inc
sbb
decb
negl
mov
cs
icebp
fdivl
arpl
hlt
sub
ds
out
push
sub
int
gs
idiv
ret
adc
ds
dec
ljmp
jmp
data16
push
sbb
cmpl
out
sbb
jbe
ret
adc
ss
addl
into
lock
decb
pop
lock
jmp
jns
cmp
negl
add
jp
or
pop
imul
pop
xchg
clc
sbb
add
fs
inc
pop
lcall
pop
loopnew
pusha
jb
push
loop
lret
iret
add
nop
popf
loopne
jbe
scas
ret
std
mov
add
pop
add
mov
shl
in
sbb
repz
out
sbb
fisubrs
out
adc
lods
adc
scas
es
imul
enter
xlat
fisttps
lds
out
pop
lods
pop
push
cltd
call
or
and
in
mov
scas
movsl
jle
cmpsl
add
notb
pushf
inc
mov
dec
mov
mov
loope
lds
int
add
pop
sbb
loop
cmp
mov
sbb
sub
inc
inc
push
test
test
mov
pop
test
adc
push
in
out
jg
mov
iret
xorb
and
test
cs
stos
xor
repnz
ljmp
mov
cld
ja
bound
inc
inc
call
push
std
add
outsl
or
sti
jecxz
xchg
pusha
mov
iret
or
push
in
sub
jge
mov
cmp
mov
or
add
insb
ljmp
pop
and
inc
in
mov
push
sarb
out
xchg
sbb
pop
out
fmull
inc
mov
fisubl
dec
inc
sub
add
mov
and
cmp
inc
sub
dec
cmp
pop
push
cwtl
jo
inc
mov
jns
pop
stos
xchg
add
icebp
mov
pop
jnp
mov
hlt
movsl
dec
jae
push
dec
add
js
add
pop
xchg
iret
insb
rcl
negl
cmp
jle
adc
cmc
aaa
outsl
xchg
jae
inc
mov
incb
negl
pop
mov
sbb
xor
movb
lcall
or
loope
jl
cmpsl
aas
mov
outsl
pop
stos
imul
rcpps
dec
cmp
or
adc
inc
adc
gs
jnp
mov
insl
add
or
mov
pop
sub
out
jle
or
mov
stc
outsl
dec
cmp
loope
xor
je
add
rcll
aam
xor
mov
mov
pop
roll
mov
add
lret
ds
and
lock
mov
jmp
mov
xchg
add
jle
aaa
mov
jbe
sub
lahf
cmp
ja
ret
add
jl
jnp
jecxz
or
imul
mov
call
movsl
jle
mov
mov
inc
pop
and
icebp
les
add
mov
call
xor
cli
repz
lahf
lea
subb
outsb
rorl
adc
push
pop
fistpll
mov
fistpll
jo
pop
sub
stos
sbb
pop
outsl
test
shrl
sub
fldt
aaa
cmp
and
adc
xchg
xor
jmp
mov
popf
cmp
dec
xchg
xchg
or
jae
ficoms
xor
sbb
arpl
sar
out
mov
and
dec
mov
pop
cwtl
es
decl
xor
dec
movsl
xchg
shll
sbb
sub
hlt
vmread
push
mov
jl
pop
or
lcall
and
lock
mov
xor
in
add
aad
pop
dec
movsl
adc
sbb
popf
leave
sahf
clc
pshufw
ret
mov
mov
sarb
sbb
mov
mov
insb
xchg
sub
call
dec
mov
xor
ror
cld
out
out
pop
xor
imul
subl
jecxz
std
out
jae
mov
push
imul
arpl
cmpsb
dec
push
or
clc
sbb
inc
and
loope
push
enter
mov
mov
pop
xlat
test
mov
jg
or
lock
jb
xor
fmull
ds
cmp
jecxz
push
xchg
jecxz
lock
int
xchg
or
jg
call
in
xchg
cmp
jbe
cld
inc
jmp
imul
gs
inc
jae
xchg
inc
and
push
ljmp
dec
int3
push
sar
mov
test
mov
add
std
in
mov
mov
sub
jno
cld
imul
or
imulb
adc
icebp
cmpsl
adc
movsl
sbb
cs
aas
cwtl
push
adc
xorb
mov
inc
std
dec
aad
icebp
jo
dec
xchg
and
push
popa
pop
fistpll
mov
add
adc
mov
sub
fcoml
sub
push
ds
ljmp
push
jge
lods
sahf
imul
adc
cmp
cld
insl
in
nop
sbb
add
nop
std
and
mov
add
lcall
and
add
jae
sbb
idivl
lock
lret
xchg
cmp
jecxz
incb
insl
cwtl
sbb
xchg
rcl
cld
mov
lods
xchg
inc
into
ss
daa
shrl
sbb
or
pusha
arpl
test
pop
push
push
jne
cmpsl
ja
out
insl
sub
cmovle
lea
sub
movsb
and
xchg
mov
aas
std
inc
add
scas
mov
sbb
xchg
repnz
mov
outsb
add
js
xchg
mov
adc
cwtl
push
pop
negl
loope
mov
jmp
adc
std
loopw
ljmp
push
xchg
into
adc
jns
jg
pop
into
rorl
sub
incl
fs
pop
jb
in
jg
xorl
xchg
in
arpl
xchg
inc
sti
jbe
sbb
hlt
scas
cmpb
outsb
or
ljmp
jg
inc
cmp
scas
and
cld
icebp
xor
cli
xchg
cmp
mov
push
sub
mov
pop
xchg
sbb
jo
ret
fsts
in
sahf
push
mov
mov
push
iret
sbb
loop
pop
daa
add
das
std
adc
sbb
fisubl
fistps
fcmovbe
adc
scas
mov
pop
sti
leave
add
xchg
mov
mov
or
cmp
and
popf
inc
sbb
into
das
add
push
sbb
inc
clc
addl
aam
js
add
imul
adc
dec
icebp
dec
cmp
jae
xor
jl
and
mov
out
dec
mov
push
stc
cmp
loopne,pn
ja
rcrl
inc
das
mov
mov
out
jmp
int3
mov
inc
aas
fisubl
aas
push
daa
ret
mov
into
lcall
ficoms
cmp
lock
mov
adc
test
out
int3
jne
aas
sarb
aas
inc
sti
push
xchg
lret
mov
mov
inc
cmc
pop
loope
fwait
ret
aas
jb
xchg
lods
ret
fsubrp
test
in
mov
lods
mov
mov
push
mov
addr16
lock
in
gs
or
call
stos
nop
xor
imul
stc
rcrl
mov
popa
fcmovnu
lods
sub
lcall
xchg
sbb
ret
xchg
cmc
pop
hlt
push
jg
in
xor
js
xchg
sub
adc
pop
js
leave
les
aas
ret
xchg
je
addr16
or
sub
cmp
fisttps
test
inc
pushl
add
jbe
daa
aam
push
inc
loopne
fiadds
cwtl
in
or
mov
mov
into
movsb
imul
lcall
pop
cltd
ret
test
or
outsl
in
sbb
and
ja
fidivrs
in
std
ficoms
dec
ss
xchg
jmp
jg
clc
rorl
popf
out
jg
cmc
mov
xor
cmc
sub
cmpb
push
mov
mov
jg
cmp
imul
rclb
je
mov
pushl
enter
mov
and
das
pop
ja
incl
inc
pop
sbbl
lcall
les
adc
aas
dec
inc
insl
cmp
cld
xchg
fnstenv
lahf
add
dec
or
and
out
mov
mov
pushf
fldcw
popa
cld
add
icebp
sbb
and
add
lcall
dec
inc
cmp
inc
xchg
bound
jg
jle
adc
negb
mov
cmp
lret
or
sbbl
movsb
push
mov
pusha
cmc
stos
and
insl
jecxz
testl
sub
arpl
js
dec
mov
scas
inc
shrb
addr16
enter
push
fs
jl
and
pop
cmc
xor
sub
cmp
imul
cmp
cmp
loope
pop
decl
rcll
inc
push
jb
insl
adcl
push
shrb
jnp
ja
ljmp
arpl
addl
push
adc
mov
in
incl
or
or
mov
jno
cmpsb
sti
cli
inc
sbb
lcall
fmul
xchg
mov
pop
cmp
shll
rcll
sub
cmc
and
arpl
mov
iret
jle
dec
ljmp
mov
mov
xor
or
mov
jg
iret
aam
jns
inc
jge
mov
outsl
jnp
call
mov
clc
jns
imull
rcrl
push
dec
jg
cli
push
xchg
jo
and
imul
arpl
cmp
fmull
outsb
mov
rcrl
dec
or
insl
xchg
and
adc
add
fldt
aaa
push
cmp
pop
sub
lods
rcrl
push
jo
outsl
and
sub
mov
popa
hlt
iret
loopne
shll
adcb
sahf
jmp
cld
xor
and
das
insl
shrl
shll
cmpb
push
icebp
cmp
sbb
shll
and
scas
stos
lcall
push
andb
push
ret
loopne
stos
pop
pop
roll
dec
inc
fisttps
push
sbb
xlat
sahf
fwait
adc
filds
push
mov
and
jge
and
sub
stos
sahf
dec
cs
clc
packuswb
cltd
imul
mov
fistps
leave
sbb
into
adc
sub
mov
and
push
pop
lret
pop
sbb
fdivrl
out
mov
sar
add
lcall
call
lods
inc
push
xchg
dec
push
mov
add
addr16
jle
sub
xchg
scas
repnz
movsl
aas
xchg
ljmp
pop
int
imul
scas
dec
dec
dec
sub
mov
mov
mov
mov
mov
ss
mov
cmpsb
js
push
out
ret
xlat
or
cmp
mov
lea
loop
pop
jo
jbe
fidivs
push
fdiv
in
inc
outsl
scas
nop
add
shrb
sub
jg
cs
xchg
ret
push
dec
scas
push
fmuls
pusha
shlb
sub
mov
sti
cmp
imul
into
mov
and
fidivrl
jg
scas
icebp
mov
cmc
push
incl
xchg
popf
mov
jge
cmc
ss
pop
cmc
das
cli
push
jmp
iret
add
jge
and
das
leave
mov
movsb
ja
imul
cmpsb
jg
scas
mov
inc
call
das
or
mov
sbb
xor
out
lods
getsec
mov
push
ss
shr
mov
dec
mov
dec
jg
mov
outsl
loopne
pop
stos
xchg
sarb
out
and
adc
or
ja
ss
pop
movsb
frstor
lret
mov
pop
std
lahf
aad
insl
pop
les
lahf
js
sbb
loop
jl
mov
insl
and
cmp
sbb
cmp
sbb
and
push
jbe
adc
testl
dec
dec
pop
sbb
cmp
or
sbb
pop
dec
mov
jg
filds
xchg
cmp
pop
jecxz
or
cmpsb
or
jo
mov
mov
stc
xor
lcall
clc
mov
les
nop
fstpl
iret
jmp
push
dec
vorps
movb
mov
or
pop
insl
pop
jg
cmp
cmp
mov
mov
add
loopne
loop
pop
cli
mov
xor
adcl
xor
mov
decb
fdivr
test
cmp
cwtl
mov
insb
sbb
bound
push
jno
cmc
and
xor
scas
icebp
and
aaa
sbb
out
cmp
xchg
aas
dec
idivl
dec
cwtl
into
outsl
cltd
mov
cltd
aas
stc
mov
and
cmp
hlt
push
sub
rcrl
mov
jg
sarl
mov
push
lods
lods
xor
xchg
or
sub
push
sbb
and
daa
cltd
sbb
sahf
hlt
icebp
or
pusha
mov
xlat
jne
xor
lock
scas
dec
aas
add
cld
sbb
andl
jmp
decb
xchg
ss
ja
mov
jbe
adc
inc
lcall
dec
add
push
jne
js
xor
pop
es
inc
pop
jmp
je
aad
mov
andb
mov
call
jmp
dec
jmp
lock
sbb
clc
dec
xor
cli
push
push
in
pusha
mov
lret
jmp
inc
dec
sub
hlt
jg
jge
out
sbb
ljmp
push
jg
push
dec
andb
jae
sbb
jge
jmp
imul
cmpsl
in
cmp
cmp
jmp
aaa
pop
sbb
push
dec
sti
jl
pop
mov
movsb
inc
pop
pop
xor
jmp
in
scas
adc
frstor
outsl
add
mov
fiadds
loopne
test
aad
dec
adc
scas
adc
movsb
out
clc
inc
jge
or
mov
cld
pop
enter
adc
out
jbe
rclb
ljmp
and
test
fdivrl
ret
jae
nop
xchg
push
fisubrs
mulb
ss
and
sbb
jo
lock
test
add
push
mov
std
add
mov
fistps
sbb
push
ret
push
lods
das
xor
mov
leave
mov
sbb
mov
aas
xor
jbe
xor
xchg
jle
out
pop
orb
inc
inc
movsb
cmpl
mov
out
inc
or
inc
jo
loope
in
cmp
sbb
imul
adc
cld
ds
sub
je
mov
pop
or
je
pshufw
sbb
or
loopne
pop
or
addr16
movsl
push
outsl
sub
call
add
aam
xchg
ds
pop
mov
cmp
push
mov
outsl
sbb
std
fdivrl
ss
mov
fs
lret
in
cmp
mov
jmp
jns
adc
mov
xor
out
sub
aas
hlt
jg
lcall
sbb
xchg
jg
sar
int
and
arpl
cmpsl
test
sbb
jp
xor
pop
ret
icebp
jmp
les
ja
cmc
maskmovq
ljmp
pop
mov
jg
jns
jge
cmpsl
inc
test
inc
out
clc
cmp
pop
clc
ffreep
jecxz
fwait
mov
sarl
lret
inc
jl
test
enter
pop
adc
clc
jbe
sbb
xchg
leave
mov
fs
push
jp
mov
dec
xlat
in
cmp
push
in
cmpps
add
mov
sbb
fcmovnb
mov
jp
dec
test
fbstp
popa
push
cmp
inc
cmp
daa
hlt
decl
push
mov
dec
cmp
jmp
scas
inc
test
add
das
nop
xchg
lret
and
lds
subl
or
cld
pop
mov
clc
cmp
rcll
idivb
out
aaa
jb
aad
and
ja
mov
ljmp
sub
push
pop
loopne
pop
les
inc
testl
push
fildl
pusha
push
pop
in
inc
jnp
cld
mov
mov
sub
sar
lock
hlt
dec
pop
and
test
int
sti
mov
ja
adcb
cmpsb
int3
insl
mov
clc
sub
mov
pop
xor
pop
icebp
xchg
idiv
xchg
jo
and
in
test
fs
popf
das
inc
clc
stos
jo
nop
fsub
pop
push
dec
in
mov
aaa
pop
inc
jmp
push
incb
pop
or
cli
test
outsb
mov
mov
mov
loopne
aas
push
fisttps
adc
mul
in
push
test
push
push
popf
pusha
je,pn
lahf
outsb
ja
pop
inc
jecxz
or
sbb
jno
jns
fnsave
daa
aaa
mov
jno
rclb
arpl
scas
mov
mov
jae
mov
shrl
sub
out
decl
and
js
daa
or
mov
xchg
dec
imul
in
shll
pop
dec
adc
mov
lock
sti
enter
orb
stc
aam
bound
pop
pop
mov
test
out
cmp
xor
sub
jg
cld
lahf
mov
inc
sub
incb
fcomps
jmp
dec
mov
xchg
into
mov
aad
lcall
xchg
mov
fsts
shl
cmp
int
mov
rcrl
incl
stc
mov
out
jg
or
stos
bound
aad
dec
dec
inc
stc
ret
decl
and
imul
add
add
sbb
test
outsl
pop
fbstp
icebp
push
inc
mov
mov
mov
test
sub
in
imul
pop
pop
insb
sub
in
inc
gs
inc
mov
ja
dec
jg
adc
ficoms
pop
aam
in
sub
mov
mov
push
pushf
mov
test
aad
icebp
sub
cmpsl
pop
pop
push
adc
sti
cmp
fidivs
add
mov
cmpsb
inc
xchg
pop
aas
pushf
pop
out
aas
daa
cld
and
jl
xchg
iret
pushf
stos
jg
lahf
mov
shlb
into
push
imul
jmp
filds
sti
repz
mov
pop
ret
xchg
loopne
mov
adcl
pop
mov
jmp
enter
hlt
xchg
clc
jge
xor
in
xor
mov
jo
sub
cwtl
push
mov
sti
ja
push
dec
ljmp
cmp
and
test
popf
ficompl
lock
scas
fistl
dec
cld
pop
cmp
popa
push
jno
cmp
mov
std
jg
popf
lock
inc
jns
call
jle
test
clc
sti
or
mov
imul
mov
xchg
and
mov
subb
jo
stos
lock
inc
cli
movsb
fwait
fwait
gs
push
push
pop
cld
aas
sbb
shll
sub
and
cmpsl
scas
cli
xchg
lods
lds
decb
mov
mov
push
sbb
mov
rclb
mov
lods
int3
jbe
mov
mov
cmp
stos
jle
std
addr16
jnp
xor
sbb
add
mov
pop
and
iret
test
cmp
cmp
jl
pop
into
xchg
ficoms
mov
das
xchg
mov
call
incb
push
sti
mov
out
ret
dec
imul
cmp
add
xchg
dec
popf
ss
xchg
cmp
or
push
pop
pop
lret
aam
pushf
call
xor
stos
ds
lret
loope
inc
sub
test
into
das
not
mov
jmp
rorl
mov
lahf
icebp
icebp
sub
push
push
mov
mov
fisubrl
pop
and
mov
in
mov
mov
or
cmp
std
aas
idivl
mov
sbb
movsl
cltd
out
mov
xlat
movb
popa
add
out
fimuls
cli
sub
mov
addl
jg
jmp
and
test
ja
push
aas
dec
enter
js
stos
aaa
jge
mov
out
push
jns
pop
push
and
cltd
sub
sbb
loope
cli
jge
sti
ror
mov
mov
cwtl
into
xchg
ljmp
cmp
sub
aas
out
scas
fwait
clc
enter
mov
or
icebp
lods
xchg
adc
bound
imul
loope
pop
addl
mov
addr16
mov
sbb
inc
xlat
ljmp
jb,pn
std
jae
inc
andb
jbe
push
sub
cmp
mov
add
cmp
call
adc
inc
test
iret
adc
pop
or
add
push
mov
jg
ja
imul
jbe
outsl
mov
inc
jecxz
adc
push
sbb
addr16
into
stc
jne
ljmp
call
lods
das
sbb
aad
inc
iret
cmp
movsl
sub
gs
xchg
scas
insb
cmp
lods
add
out
das
cmc
call
out
push
out
mov
xchg
sub
jbe
mov
or
fmull
push
fs
imul
lock
pop
and
adc
leave
or
jl
xchg
mov
cmc
sbb
cmp
cmpsl
sahf
xor
out
jg
mov
inc
pop
test
inc
jne
xchg
mov
push
cli
lea
xor
inc
clc
pop
mov
pop
xor
jnp
popf
xchg
loopne
ret
pop
sbb
push
fwait
pop
mov
clc
ljmp
rcr
das
jo
or
jg
dec
sub
in
int
loope
lock
test
ja
add
sbb
cmpsb
or
test
pushf
sub
and
dec
pop
cmp
daa
lahf
pop
imul
mov
sbbb
flds
adc
movsl
loop
loopne
loope
mov
cmpsl
movsl
mov
lahf
call
sbb
shr
add
jecxz
out
xchg
jo
in
xchg
add
cmp
and
or
stos
imull
xchg
call
es
sub
lahf
sbb
and
cmp
and
pop
add
inc
popf
loopne
xchg
lds
sbb
insb
sub
inc
jmp
ror
sub
sahf
shrl
mov
or
incl
pop
inc
mov
or
jg
sbb
pop
adc
pop
pop
cmp
mov
or
shlb
pusha
push
andl
call
or
rcr
fildll
popa
push
cmp
test
mov
cmp
cmpsl
iret
sbb
aas
pop
movsb
or
jle
js
inc
lods
fsubrl
mov
xor
idivb
ret
fcoml
push
inc
or
lret
lock
adc
push
mov
jmp
test
lret
mov
mov
cmp
pop
ja
xchg
insl
js
adc
push
call
out
mulb
aaa
iret
mov
inc
loop
xchg
arpl
js
xor
je
shlb
pop
enter
xor
in
mov
dec
or
movnti
jle
test
cmc
mov
mov
test
jns
das
imulb
sub
add
sahf
daa
dec
pusha
mov
xchg
dec
std
dec
pop
testl
adc
or
mov
and
mov
addr16
jnp
jp
repnz
jle
push
pop
xor
lcall
test
mov
mov
cmp
ja
sbb
or
mov
test
sti
mov
loopne
sar
outsb
stos
xlat
ja
pop
int3
jb
into
fs
mov
push
xor
or
push
inc
outsb
fdivrp
lcall
inc
jbe
dec
jae
add
out
aaa
jmp
popa
adc
cmpsl
sbb
or
mov
pusha
orb
leave
cld
filds
cmp
sti
scas
cmpsl
incb
movsb
lahf
mov
outsb
cli
push
pop
imul
cmp
iret
rcrl
add
mov
stos
mov
push
shrl
outsl
aas
jo
jg
inc
iret
and
jb
sti
pop
std
mov
fisubrs
jae
test
mov
scas
xchg
iret
cmpsl
pop
lcall
jae
loop
pop
cmp
pop
icebp
ja
inc
push
push
out
add
das
aad
lock
mov
mov
pop
bound
data16
sub
std
fprem
rorb
add
scas
lret
lock
scas
xor
xor
or
push
inc
aam
mov
pop
jbe
cs
push
int3
push
jge
mov
popa
jnp
cmp
ret
mov
inc
xorb
push
inc
movsl
jbe
pop
inc
std
outsl
cmp
cmp
inc
cmpsb
inc
cmpsb
push
incb
icebp
mull
lea
test
add
adc
or
das
loopne
decl
stos
cmc
adc
adc
sti
mov
movsl
push
jmp
jb
pop
push
imul
cmp
inc
and
jecxz
popl
mov
sub
decw
andb
inc
xlat
jle
test
jg
shll
sarb
sbb
stc
jg
cmp
fs
loope
sbb
pushf
push
loope
mov
leave
mov
bound
mov
mov
push
in
hlt
xchg
or
push
lock
dec
lds
jae
out
cld
jmp
test
aad
inc
shll
int3
xor
inc
jg
popf
inc
mov
aam
and
cli
sub
cmp
out
imul
jbe
adc
in
insl
stos
iret
jb
dec
cltd
test
adcl
cmp
andl
and
adc
ja
cld
daa
mov
fmull
call
clc
xchg
push
fs
outsb
outsl
popa
cmp
mov
stc
mov
das
mov
dec
xchg
push
mov
dec
rcrl
rcl
jg
mov
push
les
leave
dec
sbb
jo
sar
add
dec
mov
outsb
lret
pop
fsubrs
les
cmc
ja
loopne
dec
dec
pushf
cmp
jg
jg
and
dec
sub
bound
push
and
xchg
call
cli
cmp
sbb
sub
mov
and
mov
jb
xchg
jns,pt
add
mov
mov
mov
daa
inc
sub
add
outsl
aad
fildl
fiaddl
push
mov
daa
hlt
jmp
and
and
mov
dec
dec
adc
dec
fcoms
and
sbb
ss
scas
hlt
mov
xchg
or
jno
setno
mov
mov
daa
and
sub
cld
pop
arpl
sbb
mov
mov
shrb
mov
or
aas
pop
call
mov
pop
push
xor
xor
jns
movsl
dec
outsb
cmp
and
adc
cmc
lds
std
cmp
std
lret
adc
incl
nop
dec
stos
out
push
loope
jl
inc
push
pop
add
enter
in
cmp
jle
ljmp
xor
mov
lods
sbb
mov
rolb
adcb
pop
mov
outsl
sub
mov
jge
lahf
inc
shrb
int
pcmpeqw
ret
xchg
ss
xor
cmpxchg8b
into
in
jecxz
jg
shlb
dec
mov
mov
inc
es
mov
push
sahf
movsb
addr16
mov
cmp
mov
jle
push
sub
lahf
iret
int
dec
hlt
into
loop
out
pop
ss
mov
loope
ljmp
sbb
lods
cmp
push
mov
mov
call
add
lret
mov
inc
movsb
sti
mov
lods
mov
xor
out
cmc
aas
repnz
enter
lret
pop
dec
fldcw
addr16
cmp
sti
sub
pushf
adc
je
cld
out
or
movl
xchg
leave
je
nop
daa
dec
mov
mov
nop
lahf
movsl
adc
lret
jge
push
fisttpll
je
add
jbe
inc
pop
ljmp
icebp
pop
lods
jg
mov
jne
scas
fcmovnbe
aas
cmc
je
mov
test
xchg
repnz
imul
scas
lret
cmpsb
aam
mov
mov
and
and
lahf
shrb
dec
clc
loopne
sahf
cmp
adc
mov
fsts
imul
cli
std
into
mov
adc
xchg
stc
inc
pusha
push
in
das
je
pop
push
dec
imul
jmp
and
jl
cmp
pop
jnp
fisttpll
mov
std
add
ss
mov
std
lea
icebp
jo
addl
sti
ljmp
loope
xchg
or
insl
cmc
inc
inc
sbb
sub
fwait
sbb
scas
ja
pop
dec
jg
leave
cwtl
and
jnp
jno
inc
incb
call
pop
cs
fcomps
and
pop
ljmp
pop
sbb
jg
inc
and
pop
push
adc
into
loop
dec
lcall
mov
shl
hlt
sbb
sub
lods
mov
sahf
imul
imul
fdivr
loopne
sbb
pusha
divl
inc
pop
cli
jg
jg
ja
cwtl
jmp
shlb
xchg
lods
hlt
mov
movsb
sbbb
imulb
dec
shl
aas
jecxz
nop
sti
popa
adc
repnz
int3
or
outsl
aaa
sub
sti
xchg
jo
lret
xlat
inc
cld
outsl
ljmp
sbb
cwtl
dec
and
jb
pop
or
ret
stos
mov
fistl
mov
lret
push
adc
popf
cltd
add
std
test
fnsave
in
test
aas
mov
inc
fsts
inc
stc
push
inc
mov
xchg
mov
test
add
push
sub
decl
popa
test
and
jns
adc
stc
pop
incl
addl
aam
pop
divb
jle
jg
sti
popf
in
lods
push
testb
mov
mov
rcll
pop
mov
divl
ljmp
int3
push
es
sbb
out
sbb
adc
sbb
adc
jecxz
sti
push
mov
pop
adc
jns
pop
sbb
jg
jmp
out
xchg
jecxz
jle
sti
aas
gs
rcll
fstps
lea
addl
inc
cld
dec
lea
outsb
xorl
pop
sarl
loopne
jmp
mov
sti
jl
xchg
fimuls
out
incl
insl
push
sub
stos
das
test
lret
sub
cmp
or
lea
jo
push
sub
or
jmp
jmp
xchg
and
jnp
pop
call
sbbl
mov
dec
test
mov
or
pushf
mov
loope
stos
sarb
inc
dec
sbb
adcb
pop
push
inc
sub
ss
fucomp
xor
pop
loope
push
movsl
dec
nop
test
xchg
lea
rorb
insb
cli
addr16
leave
in
mulb
sub
sub
mov
push
mov
mov
jle
into
jl
leave
cld
inc
push
pop
inc
add
loope
in
cli
popa
div
pop
cmp
outsl
inc
xor
ljmp
mov
mov
dec
jno
push
imul
ljmp
in
out
jmp
scas
mov
mov
push
ret
fiadds
les
mov
sbb
call
adc
mov
scas
lods
je
call
outsl
repz
sbb
pop
xor
jl
sub
xor
lret
mov
cmpsb
in
jnp
mov
xchg
movsl
jno
adcb
pushf
xchg
in
mov
adc
cwtl
push
jg
mov
xlat
mov
sub
fcmovb
incl
jecxz
pop
sub
inc
ljmp
movsl
repz
pop
pop
lods
mov
sub
inc
ret
imul
xchg
rorb
xor
ljmp
adc
movsl
mov
js
icebp
xchg
mov
mov
repz
notb
inc
inc
cwtl
push
dec
mov
jecxz
mov
mov
outsb
inc
and
mov
loop
add
or
sbb
sbb
outsb
mov
jl
dec
add
leave
xor
ror
adc
ds
mov
jg
adcl
mov
mov
add
lret
enter
lcall
sbb
jo
ret
add
xchg
clc
sub
sub
jb
push
ja
fucom
push
ljmp
ss
jge
test
or
aam
lods
add
std
xchg
rorb
testb
jl
ss
in
cmp
mov
xlat
es
sbb
shl
leave
dec
mov
cmc
jmp
shll
mov
clc
dec
push
sti
inc
xchg
decb
icebp
cmovge
popf
add
pop
mov
mov
jnp
cmp
push
pop
call
sub
and
or
inc
mov
pop
std
inc
jg
movsb
sbb
pop
ret
cmpsb
lods
out
dec
iret
add
pop
dec
cmp
inc
add
add
inc
neg
pop
mov
sbb
outsb
leave
mov
mov
icebp
xchg
bnd
cmp
push
mov
jmp
inc
fld
mov
lahf
push
or
push
mov
cld
xchg
mov
loopne
pop
xchg
outsl
inc
dec
call
fdivrl
popf
sarl
add
push
pop
lea
in
scas
gs
mov
mov
jo
xor
int
out
mov
add
int3
sarb
xor
jmp
dec
rolb
lock
cmp
add
aas
fsubrs
incb
jns
dec
jecxz
lods
js
add
scas
arpl
mov
mov
out
mull
mov
pop
cltd
fwait
pop
inc
cmp
mov
push
inc
push
adc
jnp
xchg
enter
push
ret
add
push
in
stc
cmp
repz
incl
stos
fisubrs
cmp
fistpll
pop
test
push
fdivrl
inc
call
mov
push
fstl
xchg
pop
dec
mov
or
pop
call
repnz
arpl
shll
sbb
out
call
mov
in
ret
lea
mov
mov
sub
das
sub
and
aad
xchg
or
add
fildll
and
cmp
cmp
das
and
jbe
ds
fdivp
ret
ljmp
mov
das
scas
inc
xlat
push
sub
mov
xchg
ja
adc
fildl
cmp
jecxz
repnz
lcall
cld
jg
push
repnz
inc
push
dec
lock
jnp
ds
subb
mov
mov
mov
xor
out
xchg
mov
icebp
dec
cmc
jg
subl
sbb
ficoms
ds
or
lock
addr16
std
testl
inc
mov
xlat
stos
and
mov
iret
adc
movsb
mov
sbb
or
push
inc
into
jmp
jnp
mov
pop
repz
sbb
pusha
ror
outsb
sub
dec
push
add
aaa
std
mov
lods
jg
imul
movsl
incl
dec
aad
pop
cmc
inc
fiadds
push
cmpsl
ljmp
dec
out
clc
pop
mov
out
or
inc
or
dec
inc
into
call
jno
push
iret
insl
into
jns
push
repnz
cs
xchg
test
mov
jbe
ret
and
and
cmp
adc
jg
lret
js
pop
jmp
pop
addr16
clc
jg
mov
adc
and
fldt
loopne
jg
ret
aaa
xor
jbe
incl
call
cmpb
push
loope
repnz
inc
fbld
cld
stos
sti
aas
cld
push
xchg
mov
insl
push
fsubrl
xor
jl
sub
and
clc
out
loopne
mov
sub
jns
dec
mov
jecxz
insl
adcb
cmp
push
icebp
mov
mov
clc
iret
or
icebp
xchg
xchg
jae
fildll
decb
pop
push
jge
notl
lds
or
lea
std
js
ss
mov
mov
mov
push
imul
fdivrl
or
cmp
jle
xor
loope
mov
adc
cli
fwait
nop
lahf
jmp
ja
enter
adc
loopne
pop
sbbl
aaa
pop
gs
leave
jns
rolb
jp
or
out
incl
xor
inc
stos
hlt
cmp
mov
and
loop
or
mov
adc
lock
shl
in
lahf
ljmp
xlat
add
mov
xorb
adc
cmpb
sbb
arpl
fldl
lahf
adc
jg
push
aad
dec
fnsave
repnz
std
das
mov
inc
inc
adc
scas
gs
push
sub
mov
out
shlb
sub
daa
sbb
lods
loope
jae
cmp
stos
jno
movsb
ret
xchg
dec
mov
and
fcmovbe
sbb
lods
movsl
cmpsb
adc
dec
and
ljmp
inc
pop
xchg
mov
mov
sub
sar
adc
movsb
cli
dec
ficoms
movsl
jae
xor
ss
mov
lret
and
cmp
shlb
cli
fsubrl
xchg
icebp
ja
cmp
jbe
popf
ja
mov
jmp
loopne
cld
stos
dec
ds
and
jnp
or
jnp
add
xchg
arpl
or
jmp
mov
add
decl
mov
mov
mov
loopne
sbb
repnz
icebp
dec
mov
cli
or
fldenv
and
int
cmp
pop
mov
nop
xlat
outsl
scas
out
data16
nop
es
cld
sbb
bswap
rcl
stos
and
mov
mov
or
das
pop
in
xchg
push
pop
ja
fs
jecxz
lock
sbb
push
stc
xor
jge
das
xchg
jecxz
mov
das
mov
das
inc
outsb
loopne
popa
push
push
inc
cmp
hlt
das
add
add
loopne
jle
in
loope
rolb
std
lea
dec
add
dec
pop
cwtl
gs
jg
xchg
cmpsl
subl
sti
clc
pop
fstl
mov
mov
push
and
adc
imul
call
in
cmp
nop
dec
imul
pop
fucomip
pop
mulb
in
mov
mov
movsl
sti
and
pop
sti
sbb
test
icebp
arpl
push
shl
and
mov
sbb
inc
fdivrp
dec
jle
ja
out
and
jne
insb
mov
enter
dec
fcomi
outsl
ud0
lods
pop
std
mov
into
cs
loope
repz
mov
add
insb
cmpsl
pop
in
pop
push
fistpll
xchg
notb
push
in
add
mov
adc
fdivrs
call
dec
push
add
inc
pusha
dec
aas
pushf
cli
xor
push
adc
add
inc
and
roll
ret
shrb
dec
icebp
xchg
xchg
mov
or
cs
enter
ret
sbb
pushf
or
cltd
push
sbb
sbb
xchg
adc
outsl
jae
and
pop
push
std
pusha
xchg
jae
lods
lcall
adc
cmp
cltd
jo
inc
push
negl
subl
add
loopne
pop
add
jp
mov
mov
xor
sub
int3
mov
mov
fsubrl
xor
cli
inc
or
jmp
mov
jns
mov
cmp
push
daa
fadds
xchg
es
add
jle
inc
dec
jle
sti
ffreep
aas
mov
dec
ret
int3
mul
cmpsb
aam
cwtl
out
jno
movsb
xchg
scas
or
jp
jg
testl
call
inc
ja
mov
and
pop
orb
fidivl
call
dec
jmp
xchg
andb
lahf
ret
mov
or
jno
neg
std
cmp
idivb
in
add
lret
cmpsl
out
mov
xchg
add
outsl
or
add
clc
das
hlt
daa
mov
jo
jecxz
jmp
ds
cwtl
adc
jl
jg
in
ljmp
mov
outsl
stc
fildll
or
mov
sub
test
cmpb
xchg
lock
xor
jnp
xchg
jl
mov
insb
mov
xchg
inc
dec
mov
pop
loopne
push
and
clc
cli
bound
mov
icebp
add
xor
xchg
jl
mov
mov
lods
pop
sbb
fisttpll
popf
popf
test
decb
repnz
ficoms
or
pop
add
dec
sti
push
adc
xor
push
mov
addr16
push
outsb
or
pop
adc
mov
jecxz
mov
cwtl
jmp
xchg
aaa
cld
testb
out
inc
aas
add
lds
xchg
xlat
gs
mov
andl
movsb
cmc
sti
xchg
std
lods
decl
cwtl
into
rorl
test
enter
xor
sbb
mov
int3
sub
ja
iret
mov
in
ja
pop
sbbl
faddl
icebp
out
dec
aaa
in
sarb
cmp
xlat
aas
adc
fildl
pop
pop
jmp
xchg
lret
mov
jg
adcl
jecxz
sarl
sub
jecxz
fwait
jp
lods
adc
test
test
test
call
call
or
insb
rcrl
fnstcw
mov
pop
stc
lcall
jecxz
push
cmp
inc
xchg
roll
pop
sub
lcall
cli
out
bound
movsb
dec
mov
dec
ja
mov
cmp
insl
add
sbb
or
mov
in
mov
lahf
inc
sbb
and
dec
arpl
push
out
lahf
push
push
mov
ret
mov
xchg
rolb
sbbl
cwtl
and
cltd
ret
cld
ja
lcall
mov
dec
mov
dec
pop
dec
and
incl
adc
cmp
aad
rol
paddw
adc
int3
gs
lea
test
incl
cld
mulb
and
mov
xor
mov
out
jae
xchg
mov
iret
nop
push
inc
in
mov
push
rclb
inc
adc
leave
bound
jb
cmpsb
ltr
pop
leave
scas
sbb
out
inc
xor
sub
adc
mov
aaa
aaa
out
adc
fists
rep
mov
dec
cli
ja
cmp
add
mov
icebp
sbb
aas
std
icebp
inc
inc
stc
cmpsl
inc
push
add
sbb
out
loopne
ret
pop
mov
sub
sbb
xor
aaa
add
and
jg
mov
jbe
mov
movsb
ds
push
jns
outsl
jb
mov
les
lock
stos
ret
xchg
inc
cmp
push
decl
pop
push
repnz
sarl
cli
mov
jb
cmp
add
test
dec
or
outsl
inc
and
cmp
jg
inc
idivb
sbb
sahf
clts
adc
lahf
and
fnsetpm(287
movsl
repz
push
clc
aas
std
roll
js
bswap
sar
inc
dec
xchg
rclb
dec
std
outsl
cmp
mov
mov
in
xchg
dec
push
add
shll
pop
idivl
mov
sbb
leave
jae
jp
sbb
movsb
testl
jae
or
lock
cmpl
lcall
cmpsl
sub
and
cli
mov
test
jnp
mov
jg
and
test
adc
add
in
clc
pushf
sbb
outsl
adc
cmp
jecxz
adc
sbb
test
jns
sar
faddl
jno
fmuls
leave
lock
aas
push
mov
movsl
mov
sti
mov
jg,pn
fbld
mov
mov
pushf
ljmp
lods
pop
sahf
jno
cwtl
xchg
pop
in
sarl
mov
pop
mov
addr16
jns
or
cmp
inc
inc
mov
pop
nop
mov
faddl
xchg
dec
dec
stos
or
sti
cmp
js
nop
cs
mov
mov
pushl
jl
sub
xor
dec
pop
sbb
inc
add
cmc
ja
inc
mov
nop
outsb
cmc
inc
lods
movsl
cmpb
rcr
pop
fnstsw
ljmp
outsl
shll
and
xchg
jecxz
mov
adc
in
ss
jmp
loope
jmp
dec
sbb
jp
cli
aas
arpl
lods
xchg
adc
repnz
incl
test
int3
push
inc
inc
inc
or
add
push
sbb
lret
dec
imul
sahf
adc
add
pop
fdiv
lret
ljmp
push
imul
mov
mov
in
push
inc
jo
inc
mov
clc
mov
push
jg
out
int3
sbb
rcrb
clc
adc
pop
mov
sub
idivb
loopne
pop
fcmovnu
shl
add
pop
je
dec
pop
push
js
popa
imul
sub
inc
aam
jne
jae
or
xorl
push
push
push
push
out
pushl
in
push
cmpsb
ds
hlt
push
loopne
test
in
push
xchg
cmpsl
xorl
decl
and
mov
dec
xor
or
repz
push
push
mov
inc
add
push
cltd
mov
pushf
or
push
inc
out
jo
subl
addr16
xor
jo
test
dec
xor
call
clc
decl
xlat
dec
add
aaa
pop
push
push
push
push
dec
add
adc
push
outsl
push
outsb
jb
cmpsl
sbb
call
xor
push
scas
and
test
pop
sub
dec
insb
inc
mov
ds
cmp
dec
shlb
mov
call
add
mov
out
aaa
dec
pop
outsb
adc
mov
outsb
arpl
pop
mov
out
dec
fadds
ss
jo
ret
dec
ret
ret
add
push
jae
jbe
call
ja
call
rorb
pop
push
inc
bound
inc
push
gs
or
pop
sub
add
stc
stos
loopne
dec
out
cmp
jbe
adc
insb
mov
add
xchg
adc
push
ljmp
jo
xlat
imul
nop
iret
push
ss
fisubs
and
dec
dec
mov
jl
fsub
scas
fnstsw
stos
fisttps
pushf
push
testb
sti
ja
repnz
jo
or
pop
je
in
adc
testb
sbb
xchg
or
inc
lock
or
pop
insl
out
add
lret
push
pop
sahf
loope
dec
push
imul
push
xor
xchg
xchg
xor
add
xor
cmp
mov
ja
adc
mov
mov
rorl
cmp
jle
adc
inc
sti
add
xor
es
jb
bound
or
inc
mov
in
inc
dec
data16
add
fwait
sbb
jmp
test
sti
inc
jae
add
add
lock
jae
dec
inc
push
mov
xor
stos
dec
pop
sbb
cwtl
sub
pushf
adc
mov
mov
dec
pop
dec
dec
cli
fucom
dec
jo
mov
cmp
inc
adc
push
jo
dec
stc
pushf
jb
loope
decl
insb
push
cmp
push
iret
xor
adc
push
aaa
ja
inc
inc
dec
jb
shrb
in
sbb
xor
inc
bound
dec
jne
sbb
cs
hlt
push
rorb
inc
push
adc
int3
jae
inc
xchg
and
xor
or
in
sbb
mov
sub
dec
loope
and
movl
sub
outsb
push
push
inc
or
dec
rcr
nop
sti
lahf
lods
push
lds
sbbb
sub
sub
add
mov
inc
mov
stos
sub
jb
shrb
fldcw
stos
inc
lods
push
jbe
jo
cs
push
sub
sub
mov
jne
dec
add
lret
pushl
dec
ret
add
dec
clc
pop
mov
aaa
push
add
decb
mov
add
outsb
lock
into
cs
mov
jb
fisubl
insl
adc
sbb
loopne
loope
mov
dec
adc
xor
xor
incl
and
mov
sub
dec
add
sub
sbbl
dec
jne
inc
mov
stos
stos
pop
sbb
js
loop
mov
add
insl
sbb
lods
mov
mov
inc
fdivs
push
dec
jbe
or
jbe
push
mov
cld
in
add
sarl
outsl
pop
negl
push
dec
imul
jp
arpl
jo
lea
jb
pop
or
jg
dec
jo
dec
push
xor
je
cmp
shll
push
sbb
dec
push
shrb
repz
push
dec
dec
subb
int3
and
push
mov
mov
push
cmc
sbb
jns
push
imul
hlt
insb
mov
cs
add
jo
pop
cmpb
ss
js
lahf
negb
dec
in
cld
dec
dec
insb
iret
xor
sbb
cmpsb
inc
mov
and
jae
bound
lret
orb
sbb
rclb
sub
into
int
loop
cmp
pop
jl
insl
add
adc
jno
push
js
add
test
es
jnp
add
sub
inc
lock
add
mov
clc
fucomip
mov
inc
sub
sub
jae,pt
mov
add
push
in
inc
and
xchg
jae
dec
adc
pop
inc
sub
or
dec
xor
xchg
jecxz
loope
push
dec
xchg
sbb
pushl
dec
ss
push
inc
call
sbb
inc
add
ret
jg
pop
adc
imul
xor
mov
inc
scas
inc
and
popa
add
jne
dec
stc
mov
xor
pop
sbb
push
inc
dec
mov
jp
mov
push
mov
mov
pop
dec
adc
in
call
bound
cmp
jns
jb
fwait
jg
xor
add
add
pop
sub
add
push
fiaddl
dec
inc
xor
clc
les
sahf
dec
inc
out
push
jb
sub
pop
pop
into
adc
xor
gs
push
add
ret
cmp
jmp
add
stos
sti
lret
pop
or
loope
or
adc
notl
std
add
insb
pop
faddl
dec
push
cmp
mov
mov
lock
jns
leave
test
mov
outsb
push
dec
or
jo
out
xor
inc
xor
movsb
adc
push
loopne
imul
std
lock
addr16
inc
rorb
cmp
mov
push
push
jmp
jns
pusha
pop
mov
mov
push
inc
push
cmp
mov
jmp
std
add
push
out
pop
push
jo
cld
or
sbb
test
mov
jl
mov
lock
mov
into
inc
dec
mov
clc
xor
push
rclb
rorl
cld
outsl
pop
add
sbb
add
aam
fimull
lock
sarl
in
insb
inc
fs
fidivs
std
stos
inc
js
dec
dec
int3
sbb
adc
lock
fadds
pop
and
add
mov
mov
clc
mov
sbbb
stc
stos
and
out
dec
js
add
movsb
aam
les
fucomip
das
xor
inc
inc
or
mov
adc
scas
adc
outsl
or
jo
add
inc
jo
or
jle
inc
jae
adc
add
ss
push
les
imul
inc
mov
inc
enter
fimull
popa
dec
pop
popa
ds
cld
rcrl
ljmp
sub
add
js
scas
pop
lods
outsl
cmp
lret
push
mov
dec
jns
inc
and
mov
loopne
jbe
and
outsb
xor
push
push
imulb
add
add
pop
fs
jno
pop
lock
jbe
lcall
mov
mov
rcl
inc
bound
repnz
incl
xor
ret
jne
push
adc
inc
adc
add
dec
sbb
stc
inc
sub
xor
xor
mov
addr16
or
testl
iret
inc
jl
push
out
andps
sub
mov
nop
xor
xorl
pop
pop
out
pop
cmc
mov
mov
sub
ljmp
ret
push
repnz
inc
enter
orl
push
pop
fdivr
mov
fstps
mov
test
mov
jno
sbb
push
cs
jns
bound
je
adc
out
imul
pusha
daa
mov
push
popa
inc
jns
outsl
outsl
push
or
push
fildll
enter
arpl
hlt
inc
jno
add
repnz
inc
dec
push
push
push
sbb
pop
mov
js
aaa
sub
and
jb
dec
sub
enter
data16
jg
repz
push
mov
inc
dec
jno
xchg
inc
jae
or
xchg
xor
pop
dec
sub
call
rorb
inc
aaa
jb
les
dec
ja
cs
arpl
filds
dec
fisttps
or
popa
cmp
dec
jo
add
adc
mov
inc
in
out
pop
dec
gs
jg
pop
push
dec
push
inc
dec
cltd
xor
mov
sarb
and
loopne
out
push
aaa
push
xchg
test
popa
pop
lahf
or
loopne
add
xchg
enter
icebp
mov
push
push
xor
adc
mov
dec
sub
push
add
popf
out
jge
push
dec
adc
inc
dec
ss
int3
mov
mov
or
adc
xor
nop
bound
popa
pop
clc
mov
jl
add
aas
sbbb
and
fbstp
inc
inc
arpl
cmp
rcrl
mov
push
adc
call
stos
dec
and
push
push
dec
cmpsl
xchg
cmp
jecxz
dec
and
cmp
sti
std
xchg
xchg
mov
inc
gs
and
stos
ljmp
je
repz
xchg
imull
test
fidivrs
fdiv
addl
inc
mov
jp
test
pop
imul
mov
jl
lods
out
inc
sbb
sbb
int3
gs
stos
mov
dec
addr16
dec
add
test
outsb
push
jno
and
xchg
loopne
adc
ljmp
incl
push
dec
dec
fs
dec
inc
pushl
dec
dec
xor
xchg
test
jo
mov
xchg
push
js
hlt
jns
arpl
xor
mov
adc
loop
dec
pop
popa
enter
je
bswap
out
inc
mov
fs
pop
out
sarb
sarl
in
push
sub
sub
xor
add
push
jecxz
inc
pop
imul
or
loop
aad
xor
sbb
pop
and
insb
push
xor
aam
mov
in
xor
loop
add
mov
pop
sbb
and
or
push
ljmp
push
push
and
incl
mov
sbb
pop
pop
outsb
or
add
add
test
mov
inc
or
add
jnp
xchg
loope
mov
pushw
xor
or
ret
mov
test
fwait
inc
dec
insw
cmp
mov
dec
outsl
mov
sbb
sbb
shlb
fadd
cmp
pusha
xor
stos
dec
dec
lock
xor
mov
pop
cmp
dec
sbb
mov
popf
lods
int
add
mov
push
test
jnp
rcll
add
xor
dec
rcll
adc
in
cmp
jne
adc
cs
add
ret
scas
push
adc
add
mov
pop
mov
inc
test
sub
adc
nop
dec
shrb
faddl
hlt
adc
mov
adc
push
movsb
dec
dec
mov
push
xor
adc
imul
and
xor
mov
pop
rorl
mov
jbe
sahf
dec
cmpsb
dec
pop
adc
xchg
faddl
cmp
sbb
adc
xor
dec
pop
pop
jns
mov
sub
subl
cmp
dec
jb
mov
pop
nop
add
bound
aas
xor
icebp
aam
enter
adc
fldt
push
xlat
lock
adc
inc
int
leave
add
ror
dec
rcrl
imul
adc
inc
out
pop
out
popf
and
add
std
and
sbb
mov
mov
and
jne
es
cmpsl
sbb
xor
inc
push
adc
and
jg
adc
add
cmpsb
dec
xor
add
sahf
jb
mov
mov
xor
dec
xor
in
cmpsb
xchg
add
mov
mov
iret
fwait
and
mov
fimuls
adc
mov
test
bound
enter
nop
cmpsl
jg
dec
sub
and
addb
inc
jmp
inc
push
mov
mov
cmpsb
push
iret
mov
in
in
adc
rolb
xchg
dec
fwait
rcll
and
cs
ja
push
insb
ficompl
pop
add
mov
dec
cmpsb
dec
je
push
test
push
jo
add
mov
xor
rorl
adc
or
and
xor
arpl
add
adc
in
sub
lea
not
xor
xchg
jp
roll
inc
lea
rcr
adc
xchg
pushf
outsl
sub
sbb
cmp
fsubl
cmc
adc
pop
fildl
daa
adc
sbbb
dec
repnz
enter
test
cmpsb
sbb
mov
dec
cld
mov
aad
dec
imul
xchg
or
imul
mov
mov
and
imul
sub
rcll
jno
mov
adc
add
aad
add
dec
sbb
loope
fwait
addb
lret
gs
jbe
sbb
xor
into
or
mov
push
pop
cmc
scas
jb
nop
push
in
ss
adc
sub
das
sbb
xchg
mov
push
gs
lcall
rorl
enter
insl
pop
jcxz
ja
jge
add
xor
pop
mov
jno
lret
loopne
xchg
jmp
fistpll
pusha
mov
mov
inc
or
sti
lahf
mov
mov
xchg
mov
inc
mov
in
xor
adc
add
ss
mov
lds
cmp
mov
out
icebp
shl
sub
shlb
sub
rcr
mov
ljmp
dec
inc
add
dec
movl
jo,pt
xchg
adc
pop
lds
nop
mov
add
add
das
add
xor
and
add
inc
jmp
jb
mov
fsubl
lahf
sub
push
xor
popf
mov
sbb
mov
ds
jmp
pop
xchg
test
shlb
pop
dec
adc
daa
jg
adc
or
aad
cmp
add
lods
enter
loop
add
mov
nop
subl
imul
pop
or
push
and
enter
xor
cld
insb
sub
test
jle
inc
add
test
add
sbb
pop
pop
adc
ret
sarb
jbe
sub
pop
test
shrb
and
dec
add
mov
out
add
dec
adc
sbb
dec
roll
lds
adc
mov
shl
test
push
jmp
sbb
xchg
xlat
scas
add
mov
leave
adc
in
adc
jl
and
cmp
pop
cmp
loopne
pusha
add
lock
xor
insl
inc
dec
push
sub
xor
insl
popa
jb
push
cmp
lcall
pop
lahf
mov
movsb
adc
les
add
xchg
inc
rol
test
xor
cmp
mov
aam
push
xor
enter
iret
fists
pop
leave
and
add
pop
enter
add
imul
pop
adc
xchg
fs
mov
adc
xor
je
xor
addl
imul
lcall
lcall
push
sub
fadd
xchg
lds
imull
add
xchg
insl
loop
or
lahf
jne
repnz
pop
scas
adc
cmp
xchg
enter
jmp
cmp
je
inc
int3
sub
int
movsl
addr16
cmp
or
scas
sub
adc
adc
xor
pop
and
inc
push
or
pop
xlat
push
shll
mov
loope
pop
and
jno
loope
sub
shr
movb
cmp
and
imul
daa
sbb
rorb
out
dec
and
xor
clc
xor
xor
mov
lods
inc
sbb
in
rcl
mov
mov
xchg
scas
or
mov
pop
add
push
stos
push
int3
nop
cmpsb
popf
jne
cmpsl
jnp
add
inc
and
scas
adc
addl
mov
mov
test
xchg
je,pn
cmc
mov
jmp
repnz
sub
orl
xchg
or
and
cmpsb
or
nop
jo
scas
pusha
lcall
rorl
fists
dec
mov
pop
inc
add
jecxz
cltd
bound
xor
xor
adcb
adc
loopne
pop
adc
xor
jbe
sbb
sbb
cmp
outsl
add
sub
leave
mov
add
sbb
pop
sbb
aas
cld
jno
xchg
rorb
pusha
ficompl
and
nop
mov
push
push
aaa
inc
pop
cmp
add
pop
add
add
mov
sahf
dec
pop
xchg
sbb
subl
jns
push
lods
loope
dec
lret
push
push
cmp
pop
pop
sbb
dec
and
push
lods
fmuls
adc
xor
jl
orb
and
dec
orl
sub
mull
pop
les
rcl
out
xchg
mov
in
jns
and
int
sub
dec
mov
push
jl
dec
push
fs
cmp
data16
test
adc
push
test
out
jnp
pop
ret
cs
lods
std
inc
jnp
cmp
cmpsb
adc
gs
stos
jo
cmp
sub
mov
cmp
movsb
mov
and
push
adc
adc
mov
and
std
pop
cmp
mov
imul
xor
sbb
stos
cmc
fld
pop
jge
inc
jp
add
loope
pushf
sub
xor
cmp
in
imul
pusha
mov
dec
mov
add
sub
xor
icebp
jo
and
inc
popa
xor
and
xlat
out
les
test
jecxz
test
or
roll
add
in
xor
sbb
test
shll
cmp
das
push
push
fwait
pop
out
dec
xor
arpl
jecxz
add
xchg
int3
jns
cmp
push
vpackuswb
or
adc
test
adc
xor
arpl
imul
ret
mov
roll
mov
out
rorb
int
outsb
movsl
es
or
imul
push
add
lret
mov
cmp
mov
stc
xor
imul
add
push
add
mov
leave
test
mov
arpl
xor
adc
pop
fcmovnbe
mov
xor
sbb
bound
pop
movsl
inc
ret
iret
sti
leave
jns
ss
xchg
imull
sbb
add
pop
loop
loop
add
add
push
mov
ret
adc
add
jne
push
xchg
mov
jno
add
repnz
je
adc
pop
gs
xlat
es
cmp
rdtsc
inc
lock
jmp
dec
push
xchg
push
ret
mov
mov
jle
mov
and
test
pop
push
shl
es
push
fcomps
jecxz
inc
pop
and
inc
add
mov
pop
rep
add
ja
lahf
test
test
stos
xor
incb
dec
arpl
pushf
jge
dec
repnz
ja
adc
imul
cmp
int
push
je
les
jo
jecxz
data16
sbb
aaa
pop
stos
mov
movsl
sub
imul
repnz
lahf
mov
or
fnsave
inc
cmp
aaa
adc
jns
nopl
and
fimuls
push
or
jg
and
sbb
sbb
pop
andl
std
pop
push
or
adc
xchg
mov
popa
or
sbb
push
jmp
or
js
or
jno
fnstcw
fisttps
or
jo
cmp
imul
mov
or
sbb
pop
stos
pop
enter
aam
cmp
dec
or
xor
adc
xchg
xchg
pop
fisubrl
aaa
jno
xor
sbb
sbb
mov
clc
les
test
or
dec
push
xchg
test
xlat
leave
add
or
lds
jae
inc
lods
xchg
dec
arpl
xchg
pavgb
stos
orb
pop
jecxz
mov
pop
cmpsl
fldenv
and
scas
iret
mov
pop
rcll
or
fsubp
loop
aam
scas
in
mov
adc
add
dec
add
push
xchg
jg
xchg
cmpsb
pop
adc
popf
in
testb
rolb
pop
ret
outsb
jmp
xchg
inc
icebp
xor
cmp
jmp
stos
sarl
mov
dec
or
sbb
orl
dec
addr16
and
adc
xor
and
cmp
jecxz
or
out
add
add
lods
mov
hlt
fmuls
enter
add
xlat
outsb
out
push
sub
inc
adc
mov
jp
push
in
call
add
leave
jmp
test
or
jns
into
and
xchg
and
cwtl
or
push
jns
jp
stos
add
mov
add
rorb
cld
stos
jno
cmpb
sub
jno
dec
std
aaa
fsubl
cmp
jne
or
popl
lea
add
es
test
loopne
pmulhuw
loope
adc
or
dec
add
movb
ja
lods
in
ljmp
ret
xchg
adc
adc
enter
jns
outsl
push
sbb
mov
stos
adc
mov
cmp
sbb
xchg
addr16
and
adc
aaa
inc
fs
loop
adc
fiaddl
mov
daa
or
xor
and
pop
orb
ret
dec
and
mov
pop
xlat
aas
push
add
mov
test
push
imul
add
jp
xchg
in
mov
inc
mov
cmp
pop
fldenv
insl
pop
sbb
xor
sub
dec
sbb
orl
rep
pop
or
sbb
fnstcw
pop
inc
add
fcompl
inc
add
inc
jae
or
into
xchg
push
das
orl
inc
pop
enter
test
xchg
dec
icebp
lods
xchg
push
mov
arpl
aad
adc
leave
push
les
xlat
dec
outsb
add
and
aam
pop
aad
fildl
cmp
add
and
add
pop
lds
int
cmp
loopne
in
cmp
lds
cmp
jl,pn
out
insl
ror
xor
push
stc
push
or
mov
xchg
pop
fmull
pop
mov
jmp
loop
xchg
xor
es
jmp
pop
lea
stc
loop
or
pavgw
add
std
sub
xor
mov
or
push
in
stc
xor
inc
pushf
xlat
mov
mov
push
loope
jno
push
sub
lcall
or
dec
aam
dec
stos
adc
and
bound
shr
mov
sub
push
sub
lds
push
mov
fistps
pop
mov
sbb
gs
inc
nop
cs
es
xor
push
sbb
xchg
call
popa
cmp
into
lcall
movsl
and
stos
mov
mov
mov
popf
mov
lret
push
and
and
add
sbb
pop
int
sbb
pop
enter
inc
je
add
dec
dec
loop
les
mov
mov
scas
movsb
imul
xor
xchg
std
in
lock
imul
mov
test
xchg
add
mov
push
sbb
cs
les
jns
jp
cmp
rolb
mov
and
adc
jmp
stos
mov
mov
push
mov
push
inc
pop
and
adc
mov
nop
outsl
pop
scas
push
jo
or
in
pop
shll
lret
adc
outsl
push
or
cmp
add
xchg
mov
sbb
orl
mov
lods
dec
mov
fadd
jl
sbb
xor
jge
mov
dec
adc
mov
js
xor
jbe
jnp
cmp
xchg
and
xor
mov
jo
fwait
or
cwtl
xchg
cld
ret
push
mov
xchg
mov
pusha
xchg
pusha
xor
cmc
test
mov
add
call
jo
push
lods
pusha
mov
test
push
loop
arpl
pushl
sbb
subl
push
loope
inc
cmp
fistps
pop
push
pop
pop
xchg
ss
push
in
es
movsb
adc
cmpsl
and
aad
jae
scas
js
add
mov
sub
fstp
je
xor
jmp
pop
inc
je
cmpsl
xor
sbb
add
mov
popf
mov
sub
add
sti
mov
cwtl
orl
sbb
inc
push
or
adc
cmpsb
xchg
and
les
xor
or
mov
mov
test
movsb
xchg
out
add
mov
pusha
add
andb
dec
imul
cs
addl
cmp
xchg
mov
ret
shll
xor
cmp
jmp
add
iret
out
mov
lcall
out
inc
addl
push
inc
movsl
and
push
sub
sbb
js
mov
push
jne
and
test
insb
iret
ja
stos
outsb
test
sbbl
aaa
push
je
push
add
ja
in
imul
add
jmp
pcmpgtw
orl
filds
pop
mov
cmpsl
adc
add
sarb
hlt
xorl
cwtl
lcall
sbb
dec
stc
mov
lcall
sbb
mov
sub
jne
adc
or
cltd
out
add
mov
add
enter
aaa
inc
mov
cmpb
iret
std
add
inc
bound
pop
test
inc
sbbb
imul
push
test
inc
cld
jo
pop
mov
mov
mov
cwtl
add
inc
inc
adc
movsl
mov
aaa
mov
mov
shlb
aas
cmpsb
mov
clc
je
data16
aas
add
pop
xor
adc
mov
mov
shrl
jae
push
or
and
or
test
lods
xor
inc
enter
imul
add
xor
push
push
mov
addr16
mov
imul
inc
adc
pop
dec
add
push
add
inc
mov
mov
inc
out
cmp
dec
leave
insl
into
pop
ljmp
int
cmp
daa
push
mov
sbb
stos
dec
adc
nop
cmp
push
add
cmpsb
scas
cs
pop
pop
or
cmp
js
add
iret
mov
mov
bound
ret
scas
jle
mov
test
test
add
in
cwtl
clc
sbb
pop
xor
fs
je
cwtl
cmpsb
sub
repnz
jne
jno
adc
mov
pop
sub
mov
das
add
xchg
push
addr16
gs
adcb
daa
or
call
inc
push
xor
pop
scas
int
jo
cmpsl
popf
sub
or
test
mov
es
or
imul
rcl
cmpl
test
dec
shlb
mul
jns
in
sub
icebp
cwtl
nop
xchg
xchg
cltd
lock
and
sbb
mov
sub
arpl
add
mov
andl
adc
jecxz
sub
sub
sbb
push
loop
add
add
insb
pop
xor
xor
mov
aas
mov
sbb
jb
int3
aaa
pop
push
adc
mov
inc
xchg
aam
ret
jecxz
loop
adc
pop
inc
cwtl
mov
dec
mov
pop
bnd
jns
add
test
fldenv
inc
jns
push
pop
pusha
fidivs
mov
push
imul
and
pop
and
add
les
sub
aam
aaa
mov
add
fiaddl
sbb
and
adc
mov
jb
and
cmp
mov
imul
xor
dec
or
sbb
xchg
xlat
dec
dec
dec
les
mov
mov
mov
jae
dec
mov
clc
adc
jne
add
nop
scas
jo
movsl
mov
sbb
adc
pop
jmp
xchg
bound
cs
or
push
repnz
arpl
adc
stos
andl
std
sub
adc
pop
shrl
aaa
loopne
mov
xor
aad
dec
jmp
roll
cmp
sbb
xor
nop
add
xchg
and
sbb
es
pop
push
shl
dec
out
pushf
sub
testb
mov
push
jnp
out
add
lea
pop
lret
imul
xor
or
xor
pushf
xor
sbb
inc
sarl
add
pop
je
scas
and
arpl
push
xor
sub
shlb
push
ffreep
and
push
jne
jg
dec
pop
sbb
push
jmp
jne
push
subb
leave
add
dec
mov
inc
loopne
xchg
sub
enter
mov
push
dec
push
aaa
mov
test
stos
lds
nop
lret
fisubrs
lea
lcall
icebp
ljmp
mov
imul
out
add
sbb
cmpsb
add
sub
jl
push
daa
xor
pop
adc
add
xlat
fdivs
rorb
leave
inc
mov
mov
stos
add
xor
fwait
or
shlb
daa
mov
jb
roll
push
bnd
aas
gs
sbb
aaa
inc
test
pop
mov
mov
dec
and
mov
push
dec
scas
pop
adc
xchg
add
jo
add
add
mov
out
xchg
mov
xchg
dec
push
arpl
jns
lahf
or
int
xchg
bnd
push
lods
pop
jae
out
xchg
or
out
xor
dec
movsl
cs
pop
xor
xor
push
lret
sbb
inc
arpl
rorl
imul
adc
sub
dec
divl
pop
jno
add
mov
adc
aam
mov
rclb
jns
jmp
mov
xor
push
jnp
js
bound
and
cmpsl
icebp
arpl
mov
xor
dec
fwait
cs
adc
enter
bound
mov
adc
push
arpl
and
test
pop
in
inc
or
movsb
push
mov
xor
push
ja
xor
add
mov
cmp
test
jecxz
jae
int
rolb
cmp
lds
mov
or
mov
sar
lods
bound
push
cmpsb
adc
sbb
cmp
mov
lcall
add
rorb
insl
jmp
pop
sbb
lods
lods
inc
inc
stos
cmp
lahf
movsb
cmc
cmp
xchg
imul
lea
jecxz
mov
vmovaps
hlt
ds
mov
in
roll
lods
imul
jge
repnz
rolb
adc
push
hlt
mov
fidivs
dec
sbb
aam
aaa
cmp
sti
sbb
jp
hlt
adc
rorb
fistpl
sbb
inc
or
loope
stc
movsl
push
and
loopne
pop
sbb
sub
outsb
pop
cmpsl
dec
add
push
jge
imul
movq
leave
mov
xor
and
push
adc
jnp,pn
out
push
stos
inc
cmp
dec
pop
inc
fs
adc
inc
dec
es
add
or
dec
dec
enter
sarb
mov
pop
xor
pushf
repnz
daa
repnz
sahf
shrb
pop
adc
nop
lcall
push
punpcklbw
orl
add
push
xchg
imul
mov
stos
add
add
testl
addb
lahf
movsl
and
imul
rolb
imul
and
popa
jp
adc
movsl
add
push
jns
aad
cmpsl
and
mov
inc
inc
inc
mov
xor
and
sub
loope
dec
add
mov
mov
sbb
scas
push
add
addl
imul
arpl
mov
inc
and
mov
push
or
pop
inc
cltd
cmp
pop
mov
pusha
test
sub
les
xchg
mov
inc
ret
push
mov
mov
ja
popf
cmpsb
orb
or
leave
or
out
mov
fldl2e
mov
add
stos
xor
pusha
xchg
je
out
push
dec
rol
push
aaa
aad
pop
jb
sbb
xchg
inc
jg
add
cmpl
mov
or
lods
push
aaa
sub
repnz
push
popf
sarb
scas
push
lret
dec
or
pop
push
scas
adc
push
mov
shll
or
outsl
sbb
ret
add
add
fwait
jmp
jb
movsl
add
enter
test
mov
rolb
arpl
jg
push
sbb
sub
sbb
cmp
stc
xlat
nop
add
popa
aaa
and
mov
pop
leave
loope
out
cmp
fsubs
imul
inc
sub
jo
shll
xor
roll
and
lds
inc
mov
rcll
hlt
push
dec
dec
jbe
lahf
scas
push
aaa
jo
cmp
mov
insl
dec
and
and
adc
rclb
insb
mov
push
add
pop
je
jecxz
inc
pop
mov
test
push
and
inc
sub
test
or
cmp
and
lds
dec
stc
xor
cmp
mov
xlat
loopne
lods
mov
repz
cmp
mov
adc
jmp
mov
sarl
pop
iret
and
xor
sub
mov
inc
lods
stos
shlb
mov
mov
xor
dec
add
sbb
sti
cs
add
out
mov
cld
mov
mov
xor
pop
push
or
repz
mov
fnstsw
push
mov
push
xchg
pop
dec
push
pusha
dec
sbb
scas
testb
cmpsb
jmp
jnp
cmpsb
imul
sub
cmpsb
subl
cmp
jne
out
sbb
orb
test
jmp
jne
push
and
jne
xor
xchg
xor
sarl
or
nop
add
xchg
push
sub
pop
jp
fnstcw
ss
popa
sub
sub
jnp
jns
test
inc
mov
jmp
mov
mov
pop
cld
mov
or
ljmp
dec
imul
ret
xor
sub
loop
mov
adc
mov
adc
ret
add
sbb
sub
das
jp
and
orb
stos
push
ljmp
push
sub
add
into
and
xchg
push
shrl
dec
xor
or
mov
add
xchg
aaa
lea
cwtl
xchg
cmp
jo
adc
bound
mov
popf
rcl
or
adc
add
outsb
sbb
inc
ret
sub
sbb
and
cmp
push
shll
xchg
cmp
dec
mov
push
dec
sub
sub
jmp
movsb
push
cmp
mov
shl
popa
mov
lds
shll
adc
pop
pop
lods
inc
jl
mov
jl
loope
ds
dec
add
rolb
es
sahf
add
dec
adc
inc
and
xor
icebp
mov
inc
call
mov
and
ljmp
mov
test
xlat
aad
push
pop
add
sub
mov
shlb
sti
mov
lahf
dec
stos
stos
adc
or
fimuls
fistpll
inc
push
dec
sbb
sti
lea
les
xchg
inc
es
les
adc
add
add
sar
lods
inc
sub
jp
add
mov
or
cmp
sub
pop
push
cwtl
mov
pop
fmuls
mov
xchg
jo
or
popa
orb
and
dec
dec
rcll
mov
cmp
addr16
ljmp
inc
test
inc
in
pop
adc
lret
pop
xchg
xor
stos
scas
sub
add
loop
pop
adc
mov
push
push
and
mov
ja
mov
cwtl
inc
xor
push
inc
sbb
or
mov
push
cwtl
dec
pop
test
inc
push
or
jno
mov
imul
ror
addr16
fsub
aad
dec
ret
and
aaa
clc
lcall
jmp
dec
das
rolb
les
cli
cli
sbb
sub
dec
inc
sub
pop
loop
cmp
pop
aam
dec
add
cmp
dec
cmp
pop
and
addr16
pop
lods
ret
cmp
ja
addr16
mov
inc
sub
xchg
aam
add
xor
mov
imul
mov
aas
je
sbb
mov
xor
mov
push
push
mov
in
lret
cwtl
addl
sub
mov
sti
pop
jb
shl
ja
cmpsl
pusha
or
jecxz
in
adc
add
add
js
mov
push
pop
addl
cmp
lret
jmp
lock
push
inc
xlat
mov
daa
jno
loopne
jo
fwait
jp
and
cmpsb
mov
leave
lcall
cmp
cmp
xlat
and
repz
rcrl
inc
sahf
mov
jns
les
cwtl
int3
ret
xchg
push
dec
add
mov
or
inc
xchg
xor
jae
jo
ficoml
in
imul
pop
cld
pop
jo
lahf
xor
bswap
icebp
push
add
mov
cmp
es
sub
mov
inc
aas
scas
mov
add
pop
cli
push
mov
and
cmp
pop
push
mov
pop
je
sbb
sbb
add
jne
je
imul
ret
fnsave
xchg
test
stos
mov
lret
xchg
imul
addb
xchg
pop
add
std
in
hlt
ret
cwtl
movsl
sahf
or
or
inc
orb
test
cmpsb
push
into
pop
dec
add
xchg
loopne
adc
loopne
testb
jno
fldl
pop
jbe
shlb
jns
mov
cwtl
mov
shlb
jo
or
sub
imul
pop
je
popf
pop
add
jmp
inc
scas
and
aad
filds
sbb
imul
xchg
mov
insl
dec
fldt
shll
je
or
int
add
icebp
sbb
jnp
gs
cmpsl
jb
xor
iret
sbb
pop
test
mov
push
xchg
or
rclb
iret
leave
in
movlps
mov
es
mov
xor
or
dec
shl
addl
push
dec
xor
add
pop
jg
sbb
mov
shlb
adc
jns
sbb
dec
mov
inc
outsl
mov
nop
sub
movsb
sub
or
ljmp
lods
in
fsts
and
in
xlat
push
scas
stos
sahf
loope
and
lcall
mov
mov
pop
cmp
mov
movsl
rolb
arpl
test
cltd
stos
xchg
jo
cmp
mov
std
sbb
and
cmc
shll
faddp
es
xchg
outsl
inc
jb
mov
repnz
jno
sbb
pop
jb
pop
xchg
jno
test
jp
dec
rol
adc
aaa
or
mov
test
sahf
shl
orb
and
outsl
movsb
sub
push
inc
iret
cmp
loope
jecxz
test
xor
mov
rorl
addr16
rorb
pop
push
xchg
dec
dec
or
nop
out
push
cmp
scas
in
movzwl
cmp
sbb
outsl
sbb
addb
addr16
test
xor
scas
pop
sub
nop
sbb
push
and
cmp
xor
or
or
sbb
rcrb
mov
repnz
decb
leave
popa
shrb
js
xor
pusha
or
and
sub
stc
pop
insl
push
orb
push
andl
std
xor
lds
adc
insl
sub
mov
add
push
cmpsb
pop
stc
jmp
pop
xchg
jl
mov
data16
push
or
jecxz
mov
adc
pop
jb
pop
mov
sbb
or
jno
add
lea
add
add
or
fcomps
sbb
pop
lahf
pop
lds
push
sbb
inc
jno
inc
cld
xor
popf
inc
sbb
xchg
pop
xor
mov
push
dec
ljmp
jg
popa
cs
xchg
xor
movsl
call
xchg
mov
cwtl
jbe
cmp
imul
add
add
inc
and
adc
movsl
ret
push
push
hlt
jne
jo
rcll
cmp
mov
test
test
sarb
add
pop
push
and
mov
and
xchg
inc
push
fcmovnb
orl
daa
dec
dec
adc
jo
cwtl
sub
jno
nop
dec
iret
pusha
sbb
xor
lahf
sbb
adc
stos
pop
inc
mov
and
shlb
shlb
xor
mov
xorb
in
shrl
sub
mov
sub
jo
cmp
mov
call
dec
push
pusha
jp
repnz
leave
pop
push
dec
mov
rolb
ficoms
mov
cmpsl
es
inc
test
movsl
jecxz
mov
loope
cmpsl
mov
mov
mov
xor
scas
push
dec
push
shrb
sub
stos
icebp
ficoml
dec
dec
inc
mov
mov
mov
xchg
pop
cmc
int3
push
cwtl
test
loopne
add
adcl
and
pop
push
inc
sub
jne
cmp
repz
arpl
in
idivl
xchg
xor
movsl
or
fs
adc
jne
and
dec
cli
fidivs
inc
rclb
in
push
adc
icebp
cmp
stos
rcl
cmpsb
das
fildll
xchg
dec
repz
das
mov
enter
cmp
add
sub
popa
lds
shll
dec
jns
or
ffree
mov
xor
adc
sub
pop
jo
inc
sbb
mov
stos
add
pop
adc
inc
xor
cmpsb
jno
sbb
adc
dec
xor
dec
xor
dec
push
sbb
testl
ljmp
jbe
sub
cmpsl
test
mov
ds
jno
adc
inc
mov
xchg
sbb
push
inc
dec
adc
add
cmp
test
iret
cmp
sub
push
call
les
add
cmc
lret
add
xor
aad
jl
and
xchg
sbbl
push
mov
or
adc
sahf
cmpsl
or
stc
jo
lds
push
cmc
rcrb
push
adc
in
inc
cmp
pop
xchg
loopne
add
shrb
adc
out
add
mov
xor
shrb
push
adc
pushf
mov
icebp
jno
xchg
sub
fldcw
xor
cmp
cwtl
or
sub
push
xchg
rclb
lds
mov
push
test
fbld
jno
sub
loopne
icebp
out
mov
mov
push
xor
or
add
inc
aad
addl
sub
stos
lea
adc
sbb
mov
shlb
into
outsl
enter
loopne
rcr
rclb
or
mov
loop
push
ret
imul
mov
xor
adc
mov
push
and
add
sbb
ret
popa
mov
xor
cmpb
ficoms
int3
dec
inc
or
test
mov
arpl
sahf
addr16
shrl
mov
pop
inc
std
jl
and
mov
cmp
dec
or
or
shlb
mov
data16
push
add
inc
lock
test
sub
dec
push
add
xor
rorl
or
adc
xchg
clc
test
inc
shll
test
jnp
adc
jg
xchg
addl
jo
movsl
cmp
push
sub
movsl
inc
push
je
mov
xor
pop
jecxz
add
test
rcrb
pop
jg
int3
xchg
mov
add
push
and
jbe
pop
xor
xor
push
sub
in
lea
xchg
mov
dec
jae
jae
cmpsb
xor
dec
pop
sbb
add
addb
es
repnz
stos
mov
xlat
add
sub
insl
pop
pop
jmp
xchg
int
dec
pusha
cwtl
xor
add
mov
and
mov
push
aaa
cmpsb
pop
mov
ret
jno
out
lds
sub
jae
cmp
cwtl
iret
sub
adc
cmp
lods
xchg
stos
and
out
cs
pop
and
lods
pop
imul
add
push
xor
cs
movsb
cmp
orb
cmp
inc
jecxz
shr
dec
sbb
cmpsb
jmp
incl
les
push
dec
scas
imul
out
mov
inc
pop
jb
das
push
jmp
pop
sbb
movsb
popa
test
lret
mov
and
or
les
xor
and
adc
jne
dec
mov
popa
xorb
push
and
mov
add
popa
push
dec
shlb
arpl
or
sbb
mov
stos
ficompl
out
inc
movsb
imul
jecxz
loope
add
and
jo
filds
stos
pusha
push
icebp
sbb
push
xor
pop
and
add
inc
cmp
lcall
dec
loop
push
mov
lds
loopne
xchg
pusha
mov
xor
push
loopne
inc
push
or
jo
adc
or
add
xlat
rclb
adc
aaa
jbe
adc
je
add
push
lds
sahf
test
cld
xor
jecxz
sub
xor
aad
scas
add
ffreep
arpl
pop
jnp
sub
or
push
aam
scas
shlb
stos
scas
push
in
mov
inc
psrad
xor
lahf
jmp
imul
sets
xor
or
das
lret
and
in
testb
xor
push
daa
testl
and
add
mov
rcrb
pop
das
xlat
pop
ret
xor
mov
imul
cmp
dec
push
xlat
or
shlb
lahf
cmp
xor
mov
add
inc
sarl
xor
dec
aas
push
inc
dec
add
std
inc
mov
shll
aaa
arpl
xchg
dec
dec
inc
xchg
cmp
mov
daa
xlat
lds
jnp
mov
leave
or
repz
das
sbb
mov
pusha
adc
mov
fs
dec
in
stos
dec
insb
call
mov
dec
lods
inc
jnp
xchg
outsl
push
mov
fst
push
xchg
scas
sarb
mov
pop
xor
xor
xchg
dec
pop
cmp
add
sbbb
and
loopne
pop
push
test
mov
insl
and
aam
sub
xor
jecxz
das
loope
mov
mov
and
dec
mov
outsb
pushf
add
popa
mov
sub
xchg
lea
xor
cmpsl
daa
pop
dec
stos
fs
jne
imul
imul
mov
jno
pop
jae
xor
cwtl
push
or
hlt
xchg
jo
test
xchg
pop
cs
or
xor
arpl
push
aad
jno
add
cmp
sbb
sub
xchg
xchg
je
adc
loope
add
adc
cmpsb
or
stc
or
jnp
dec
dec
mov
repnz
pop
jne
sub
or
sub
loopne
andb
add
adc
je
cmp
pop
fs
cmc
fmuls
inc
xchg
pop
dec
cmpsl
jae
loop
xchg
addl
insb
lea
andl
pop
push
aaa
loopne
test
cmp
arpl
xor
or
mov
push
shrl
mov
mov
inc
ljmp
insl
mov
cmp
fbld
mov
pop
loope
insl
xor
rclb
xchg
ja
xchg
mov
xor
mov
lcall
xor
je
mov
ljmp
and
addb
cmp
stos
rorb
xchg
push
and
sbb
jno
push
sub
pop
jg
sub
xchg
jmp
push
ja
push
test
imul
les
push
xor
xor
add
inc
mov
ja
sbb
stos
mov
aaa
push
adc
adc
mov
sahf
out
mov
xchg
sbb
and
into
push
stos
adc
mov
push
sub
xor
arpl
inc
test
lret
mov
xor
sub
and
int3
jmp
add
mov
pop
push
rorb
adc
jp
add
jbe
shrl
ljmp
and
xor
sub
add
or
mov
pop
pop
inc
lods
jecxz
sbb
push
rol
xor
sarl
mov
jp
loop
or
cmp
js
mov
xor
nop
out
fistpl
or
lds
or
adc
mov
rcrl
push
mov
jae
adc
push
add
jnp
xlat
mov
mov
stos
shll
add
cmp
xlat
push
xor
popf
push
xor
adc
shrb
adc
push
adc
jmp
and
ss
ljmp
push
cltd
pop
push
ret
pop
jns
addb
xor
sub
sbb
add
arpl
push
ret
xor
xchg
gs
xchg
xor
add
mov
cmp
cmp
inc
enter
rcrl
and
sti
jb
and
mov
rolb
pop
pushl
ret
cmp
xchg
and
or
test
gs
and
adc
xor
jmp
dec
adc
cmp
jge
sub
lcall
fldl
adc
push
loop
add
jne
xchg
mov
insl
aas
add
cmc
push
es
imul
sbb
push
push
cmpl
prefetch
jecxz
shll
adc
and
in
les
jns
push
fwait
jae
xchg
xor
jge
testl
and
pop
inc
test
das
in
mov
pop
cmp
fcmovb
ret
loopne
sbb
dec
and
outsl
gs
enter
xchg
loope
inc
loopne,pn
jo
and
loopne
bound
imul
jb
pop
sub
sar
imul
daa
push
fdiv
add
dec
stos
ret
test
jno
repz
dec
das
cltd
lods
push
mov
pop
in
push
nop
inc
clc
and
push
adc
push
push
xor
sub
fs
jns
int3
pop
and
mov
std
leave
movsb
jns
and
adc
mov
js
adc
jmp
sbb
adc
int
insl
jge
insl
xlat
or
jo
push
jbe
outsb
pop
pop
repnz
xor
aaa
sub
call
sbb
xor
or
gs
pop
leave
aam
dec
arpl
aam
mov
scas
in
jecxz
sahf
cmp
adc
adc
adc
cltd
jecxz
push
cs
ljmp
in
add
adcl
lret
test
cmp
aam
imul
dec
or
inc
fcoml
pop
push
scas
popa
xor
pop
add
dec
and
dec
pop
inc
pop
fst
push
fs
das
cmc
jmp
loopne
jo
lds
and
enter
xchg
cmp
pop
adc
sub
and
inc
fistpll
arpl
popf
dec
sbb
pop
lret
stos
mov
scas
jg
jecxz
and
pop
sbb
jne
dec
mov
fldl
push
bound
push
push
es
pop
jge
nop
and
mov
xor
or
enter
out
or
movsl
sbb
les
inc
arpl
push
scas
mov
call
sahf
xor
sub
gs
popa
sub
cmp
sbb
adc
push
ljmp
lods
and
xor
inc
or
cmp
jo
jge
and
mov
adc
mov
pop
inc
rclb
cli
fwait
and
sub
mov
fildl
mov
shr
sub
sbb
adc
test
mov
addr16
push
cmp
push
inc
adc
data16
xchg
loopne
pop
mov
jo
mov
and
and
test
or
jno
dec
push
mov
out
push
xlat
push
pushf
jbe
out
mov
inc
gs
adc
pop
xchg
xor
xchg
inc
inc
mov
and
sbb
sub
mov
add
loope
fcomps
cmpsl
adc
mov
enter
push
cmp
shll
enter
add
and
add
enter
jmp
fwait
push
push
or
imul
shrb
in
mov
or
mov
scas
push
insb
lahf
fsubrs
iret
les
or
pop
pop
or
adc
xor
mov
movb
pop
mov
outsb
imul
xchg
into
vmread
push
jae
test
loopne,pn
xchg
incl
mov
out
test
or
lret
fisubrs
xchg
cmp
nop
lods
in
cmp
inc
leave
cmp
or
test
add
fsubl
adc
dec
sbb
pop
outsl
mov
sti
push
rclb
cmp
xchg
test
outsb
dec
shll
or
shlb
cmp
push
or
out
mov
sub
adc
adc
sub
faddl
imul
push
lret
repz
lods
add
int
mov
pop
xor
in
inc
add
or
adc
or
imul
flds
pop
mov
jmp
and
push
scas
in
pop
sarb
cmovae
xlat
shll
xor
xchg
out
jno
in
inc
fildl
sub
cmp
jbe
and
bound
adc
filds
scas
adc
push
test
lods
repnz
jns
lods
inc
popa
dec
fidivl
cli
sbb
xchg
fsubl
pop
xor
dec
xchg
jns
shlb
aam
adc
adc
sbb
mov
xor
dec
stos
rorb
inc
push
bound
out
mov
cmp
mov
and
lods
mov
inc
inc
adc
imul
mov
lret
xor
sbb
mov
dec
pop
jo
mov
addr16
call
jecxz
push
sub
push
mov
adc
jg
mov
jmp
and
insb
add
cltd
mov
mov
pop
rolb
cmpsl
lea
movsb
adc
push
dec
mov
rorl
enter
gs
push
dec
add
nop
dec
adc
stos
pop
sti
out
insb
xchg
enter
into
push
and
shrb
push
sbb
xchg
sub
aam
inc
pop
pop
fstl
rcr
push
imul
add
or
sbb
scas
mov
pop
test
dec
jecxz
inc
dec
int
xchg
int3
inc
or
shll
pop
in
cmpsb
xor
xor
dec
in
sub
imul
xchg
aad
mov
dec
sbb
adc
adc
shlb
icebp
ds
jns
push
data16
xchg
xor
add
pop
or
cmp
dec
lods
in
inc
popa
adc
pusha
cmp
push
fisttps
cmp
xor
cltd
cmp
loope
xchg
insl
push
xor
sbb
mov
es
iret
pushf
fisubl
xor
ja
scas
cs
int
sbb
mov
dec
pop
insl
mov
sbb
aam
push
aad
add
fldt
mov
mov
lcall
in
jge
dec
jp
icebp
or
stos
or
inc
js
mov
cmp
mov
jecxz
add
mov
roll
and
test
adc
mov
pop
leave
cmp
pop
test
sbb
stos
pop
cwtl
dec
sbb
or
shll
shll
push
xchg
test
cmpsl
adc
pop
push
stos
daa
cmpsb
sbb
sti
lret
sub
or
sti
das
cltd
or
lcall
push
dec
shl
nop
xor
push
push
sbb
lret
nop
or
fnstcw
fstpl
in
or
pop
or
pop
enter
and
mov
dec
pop
and
push
pushf
pushf
scas
dec
add
scas
orb
popa
dec
cmp
nop
add
loope
mov
pop
cmp
aas
in
or
fwait
or
push
mov
and
ret
mov
mov
cmc
and
jmp
mov
push
jle
scas
data16
loope
pop
dec
mov
pop
xchg
and
inc
sbb
mov
adc
xor
andb
fmuls
popf
xor
dec
xor
rclb
xchg
ja
fisttpll
mov
jle
sub
mov
sub
jge
pop
dec
rcrl
imul
inc
pop
pop
and
lods
aad
sbb
push
push
inc
add
ror
int
pop
adc
cmp
sbb
cmp
dec
xor
jo
dec
xchg
jno
adc
andb
push
mov
arpl
shrb
mov
cmp
sbb
movsb
sbb
bound
mov
jl
push
stos
mov
and
dec
jmp
inc
xchg
jo
imul
sbb
test
in
cmp
mov
sub
rol
xchg
int
sub
mov
push
inc
movsb
inc
sbb
arpl
je
xchg
outsb
andb
loop
sbb
add
stc
adc
imul
inc
jmp
aaa
cmp
lahf
jns
xchg
inc
les
add
ret
add
fwait
in
push
dec
xchg
push
fnstsw
push
roll
dec
imulb
xor
jo
xor
scas
jge
enter
popf
dec
shrd
sub
add
mov
mov
dec
or
cmp
and
popa
dec
sbb
xchg
jecxz
out
aad
push
cmp
cmpl
dec
add
dec
les
cs
dec
test
push
fs
xchg
fisubrl
push
stc
sub
addr16
repnz
jecxz
xor
stc
andb
cmp
les
sbb
xchg
dec
adc
movsl
mov
pop
repnz
and
loope
push
mov
jbe
sbb
inc
aam
shlb
add
pusha
dec
dec
add
adc
and
mov
fdivrl
es
flds
jge
dec
mov
outsl
shl
push
mov
movsl
adcl
mov
shrb
test
cmc
pop
movsb
lahf
les
dec
in
mov
adc
bound
mov
xchg
or
sbbl
mov
rclb
xchg
push
ret
pop
adc
adc
sub
dec
xor
add
rcrl
or
adc
shll
jo
scas
xchg
or
je
aam
pusha
cmp
add
add
and
leave
mov
cwtl
add
xchg
xor
and
and
cmp
jae
push
push
add
loope
iret
lods
pop
cmp
and
shr
pusha
mov
mov
imul
mov
mov
inc
addl
push
jno
rolb
test
xchg
xchg
insb
xor
dec
xchg
ffreep
and
and
jae
jle
insb
jns
add
imul
dec
ret
mov
cli
ror
push
sbb
jae
mov
iret
jmp
adcl
cmpsb
xor
mov
testb
pop
inc
fisttpll
sub
sub
cmpsl
lea
pinsrw
mov
repnz
jno
ror
fs
aam
popf
pop
xchg
jmp
xor
dec
inc
sbb
push
sbb
or
movsl
inc
test
and
adc
lret
push
mov
aam
or
pop
movsl
push
adc
push
lcall
in
lock
cmp
sbb
shlb
test
enter
lcall
add
pop
lods
sbb
jno
test
stc
pop
sbb
lret
test
lods
outsl
jns
mov
jb
pop
or
dec
mov
adc
das
xchg
and
add
push
dec
adc
inc
xchg
mov
pop
push
xor
push
aam
adc
and
adc
orl
push
cmp
sub
xor
push
mov
popa
push
sti
sub
xor
dec
int
mov
sbb
ret
test
xor
add
xor
adc
ret
pusha
mov
das
mov
sbb
jno
popf
imull
mov
adc
pop
cmpsb
pop
fldcw
lock
jo
ret
xchg
cmp
mov
push
xor
lea
subl
faddp
xchg
push
sub
lahf
das
into
in
cmp
sbb
xor
pusha
cmp
ret
xchg
shlb
xchg
jge
push
cmp
add
inc
call
push
sbb
mov
sar
adc
push
pop
arpl
mov
lret
pop
pop
ljmp
jp
pop
daa
sub
xor
sbb
xor
sbb
test
xchg
push
sahf
aaa
ret
and
sbb
adc
add
imul
and
sub
mov
pop
or
or
pop
loope
push
mov
xchg
mov
jne
jbe
adc
push
es
mov
add
adc
cmp
push
test
inc
jae
mov
repnz
rol
xchg
aad
jl
addl
adc
adc
cmc
and
sbb
add
add
inc
rolb
cmpsb
jb
lds
hlt
sbb
daa
dec
adc
test
cmpl
mov
clc
cmpsl
pop
pushf
dec
add
test
push
or
pop
popf
js
jb
push
xchg
pop
test
or
sbb
lods
cmp
test
jg
add
or
push
movsl
jle
cltd
mov
or
hlt
xchg
cltd
scas
sbb
fs
adc
mov
xchg
mov
mov
sbb
sbb
sub
je
lcall
dec
pop
jo
xor
jmp
dec
inc
sahf
xor
mov
xor
inc
sti
dec
cmp
mov
dec
dec
or
sbb
mov
mov
adc
xor
sbb
and
cmpsb
push
inc
mov
xor
or
or
rolb
ret
pop
mov
adc
movsb
mov
in
je
add
cs
ret
push
or
xchg
mov
aad
cmpsb
es
dec
xchg
inc
inc
push
adc
push
xlat
icebp
xchg
mov
mov
add
dec
jmp
jno
sub
loope
or
out
fisubrs
add
mov
pop
xchg
xchg
add
nop
jns
lahf
add
inc
add
sbb
dec
adc
rolb
sub
xor
inc
mov
cs
shll
mov
gs
add
pushf
cmp
xor
or
movsb
and
jnp
rclb
lea
mov
push
xchg
xor
mull
mov
in
stos
enter
dec
jp
rorb
lods
add
jne
xchg
leave
add
dec
loop
je
xor
mov
aam
rcll
or
insl
pop
test
inc
daa
mov
xchg
rorb
pop
jb
cmp
shlb
sub
xchg
sbb
ret
or
popf
clc
ja
clc
mov
jge
pop
fisttpl
cmp
and
stos
xchg
test
xor
add
loope
shlb
inc
lock
dec
cmp
xchg
nop
add
mov
cmpsb
imul
sahf
mov
in
dec
subb
mov
push
mov
fsubrs
push
std
sbb
je
stc
shll
or
pop
pop
pop
rol
dec
dec
inc
ret
in
adc
adc
mov
loop
push
pop
aas
adc
inc
inc
sbb
push
int3
scas
xor
add
push
push
test
sbb
mov
xchg
mov
ds
mov
int
dec
push
cmc
xchg
and
mov
rol
xchg
push
mov
into
sbb
pop
add
sub
or
pusha
ret
add
sub
jge
cmp
mov
mov
sub
test
mov
popa
stos
xor
les
sbb
pop
and
jmp
pop
xchg
jmp
or
xor
jp
sub
pusha
inc
jmp
inc
lods
or
or
pop
push
nop
test
sbb
pop
aaa
jl
loop
xchg
scas
mov
fmul
adc
imul
xchg
sbb
jmp
adcl
loope
rcl
imulb
insl
popa
sub
mov
rorl
inc
jne
hlt
pop
or
add
fs
lock
and
in
frstor
dec
js
adc
lret
pop
jne
jmp
adc
arpl
dec
push
jne
sbbl
jmp
mov
inc
daa
and
inc
mov
jmp
sbb
mov
adc
mov
cltd
or
xor
test
push
sbb
or
nop
cmpsl
idiv
and
inc
stos
mov
repz
or
or
sbb
fistpll
push
movl
out
and
xchg
cmp
inc
lret
rcrl
fsts
loope
push
mov
lea
add
pop
test
cmp
push
jmp
dec
add
dec
repz
xor
lcall
movsl
jecxz
add
dec
jmp
jle
addb
or
sbb
dec
sbb
sub
imul
movsl
shrb
adc
inc
and
bound
mov
scas
xchg
add
inc
les
and
stos
subl
lods
push
mov
or
mov
add
inc
add
sub
adc
or
dec
push
xchg
sbb
dec
or
dec
les
cmp
jne
mov
out
fistpl
sti
lret
mov
push
sub
stos
add
adc
xchg
fldcw
jo
or
int3
jg
push
setbe
jo
aaa
sbbl
adc
jno
data16
sub
pop
sub
mov
jno
fcmovne
rcrl
add
adc
adc
or
add
mov
inc
add
mov
cmc
fmuls
jne
addr16
add
adc
test
add
inc
or
and
or
pop
cld
adc
fbstp
or
clc
xor
push
enter
mov
sub
push
test
leave
rorl
aas
sbb
xchg
adc
cmp
stos
push
in
push
mov
aas
cltd
sbb
or
mov
sub
pop
and
lahf
sti
icebp
dec
sbb
push
jmp
xor
cltd
mov
sbb
dec
push
dec
idivb
pop
push
push
pop
decb
sbb
xchg
dec
roll
fisttps
shrb
mov
push
hlt
sbb
add
xchg
or
inc
ds
push
movsl
in
pop
in
sbb
or
imul
sub
sbb
jbe
or
pop
into
fsts
inc
mov
push
jns
dec
pop
mov
in
lds
scas
jmp
dec
mov
mov
ss
add
fwait
imul
fldl
sbb
ret
pop
sbb
and
ljmp
dec
outsb
fs
adcb
sub
movsl
add
insl
lods
lahf
out
mov
icebp
and
mov
mov
jecxz
std
into
cmc
mov
xchg
add
push
addb
jae
leave
mov
inc
mov
shlb
pop
and
and
mov
pusha
dec
shlb
push
fcmovnbe
lods
mov
pop
add
adc
int
adc
adc
sub
sbb
ret
xor
push
cwtl
jno
pop
xchg
mov
mov
mov
data16
scas
adc
movsb
xchg
lds
xchg
jne
nop
subl
cmp
inc
pushf
arpl
pushf
ret
mov
test
push
and
push
bound
xchg
and
cmp
movsb
inc
add
orb
xchg
popf
xor
inc
in
scas
scas
mov
imul
ret
ret
pop
inc
sqrtps
adc
xchg
mov
inc
add
pop
inc
cli
cmpsl
pushf
cmp
add
push
mov
mov
pop
mov
shll
jo
cld
fwait
xor
cmpl
xorb
sbb
adc
sub
add
repz
mov
inc
jnp
movsl
push
push
addb
inc
call
xlat
stos
add
es
cmp
insb
imul
xchg
cs
jns
push
popf
arpl
push
int
jns
xchg
or
mov
dec
rorl
iret
jnp
imul
sub
push
loop
adc
inc
ja
inc
mov
scas
stos
xchg
lret
gs
cmp
ljmp
jmp
sub
push
mov
or
add
stc
fnstcw
mov
outsl
rorl
or
aad
ljmp
jle
jae
add
nop
xchg
sub
xchg
pop
add
inc
cmp
jne
mov
dec
pop
out
dec
movsb
lret
pop
je
pop
cld
dec
add
push
inc
mov
std
adc
adc
dec
je
dec
push
add
fst
adc
push
pop
insb
iret
xchg
cmp
sbb
or
pop
mov
mov
movsl
add
sbb
jb
and
xchg
rclb
xchg
mov
sub
xor
add
or
lret
arpl
lods
inc
mov
enter
test
adc
inc
mov
cmp
sub
call
shlb
cmp
ljmp
sti
jbe
dec
outsb
ljmp
loopne
add
lcall
jg
push
scas
and
add
bound
and
xchg
fs
cmpsl
push
sub
aam
xchg
leave
pop
xor
lcall
jno
fwait
jle
add
and
scas
adcb
hlt
push
fnstcw
icebp
dec
cs
push
test
jno
or
dec
cmpb
and
inc
xor
sbb
imul
push
mov
jae
call
cmp
or
adc
cwtl
arpl
cs
les
push
or
int
adc
mov
fsubrl
push
adc
das
pop
push
aam
testb
push
mov
add
xor
daa
sub
xor
xchg
xor
add
or
int3
fnstcw
inc
jb
add
jo
pop
test
cmpsl
dec
js
repnz
shll
pop
cmp
dec
insl
xor
icebp
jg
inc
imul
dec
sbb
pop
test
mov
adc
movsb
mov
and
dec
xchg
pusha
jo
lods
sbb
movsl
inc
push
sahf
cmpsl
es
push
cmp
mov
lods
sbb
decl
loop
mov
jmp
mov
push
adc
inc
jno
sbb
mov
push
or
dec
sub
or
loope
pop
aas
shll
adc
je
loopne
sbb
pop
rclb
sub
sbb
or
pop
mov
push
adc
adc
das
or
inc
stos
das
inc
sbb
mov
pop
inc
stc
lea
inc
je
fcomps
pop
mov
and
adcl
push
loope
sbb
outsb
sbb
mov
movsb
cmpsb
mov
cltd
push
sub
xor
pop
repnz
xchg
xchg
jno
mov
cwtl
inc
lcall
nop
out
arpl
add
pop
inc
int3
mov
es
and
dec
inc
aaa
icebp
or
add
sbb
mov
add
icebp
outsb
sbb
in
or
push
xchg
mov
test
sub
decb
rorb
mov
jnp
adc
mov
push
xor
loop
lahf
xor
lcall
add
xchg
insb
pop
jns
adc
pop
pop
xchg
jno
popa
movsl
test
ret
sub
mov
adc
stos
in
sub
adc
imulb
idivl
cmp
repz
arpl
mov
clc
xchg
add
repz
add
gs
cmp
scas
adc
dec
roll
inc
add
xor
jns
adc
in
adc
jb
addb
insl
cli
roll
aad
sub
or
sti
cwtl
xchg
mov
movsl
or
xor
xchg
popa
and
cwtl
jne
inc
lret
pop
addr16
inc
adc
xchg
pop
xor
leave
or
add
inc
push
adc
inc
push
shlb
in
ret
or
add
lcall
pop
out
inc
scas
cmpb
outsl
mov
cwtl
mov
mov
add
addb
test
test
adc
insl
jecxz
push
cwtl
mov
sbb
loopne
jmp
rclb
pop
jp
mov
or
inc
add
jne
nop
sub
xor
addb
push
cmpsl
add
xchg
cs
sbb
in
je
jo
les
sub
inc
ret
inc
stos
push
les
adc
andb
inc
aam
cmp
push
inc
es
push
stos
xchg
filds
xchg
ljmp
sub
fsubr
int
mov
insb
pusha
jne
cmpsb
cmp
sub
mov
lret
sbb
or
aam
xchg
jo
ja
cmp
and
cltd
stos
inc
pop
adc
loopne
add
push
lods
inc
adc
test
lds
shll
sub
sub
in
or
and
fimull
pop
ficoml
pop
icebp
xor
or
dec
repz
pushf
lock
jecxz
xchg
cmp
nop
psubq
or
xchg
movsl
add
or
pop
xor
inc
xchg
lds
mov
dec
jb
aam
ja
sub
add
inc
jne
rolb
shlb
leave
mov
sub
gs
sub
jge
ljmp
mov
out
jne
pop
adc
fwait
ret
imul
dec
sbb
popf
es
lods
outsb
loope
mov
cmp
bound
jne
xchg
ret
imul
add
mov
in
loop
dec
das
cmp
push
test
arpl
in
cmp
jb
sbb
push
loope
and
pop
sbbb
xor
jno
cmp
sub
ljmp
imul
cmpsl
mov
add
rcrb
sbb
cmpsb
nop
jp
imul
push
cwtl
push
lds
xor
arpl
xchg
or
leave
inc
pop
mov
xor
add
mov
adc
jg
sub
test
out
sub
imul
lods
lahf
adc
movsl
loope
inc
stc
mov
xlat
popa
sbb
cmp
or
sub
xchg
sbb
stos
fisttpl
js
pop
cltd
and
cs
das
dec
push
sub
inc
mov
gs
lock
xchg
pop
je
mov
cmp
or
xchg
inc
dec
xchg
and
xor
icebp
pop
xchg
push
mov
lea
pop
les
or
sarl
movsl
or
add
add
adc
jmp
pop
int
roll
cmp
sub
push
push
sbb
pusha
xchg
pop
push
cmp
repnz
lock
pop
pop
xor
andl
sbbl
add
test
pop
bound
jae
sbb
mov
push
xchg
cmpsb
xchg
addr16
lahf
or
pop
add
rorb
cmpsb
and
test
popf
les
or
faddl
dec
adc
or
sub
outsb
sbb
call
mov
push
xchg
or
nop
cmp
test
add
pop
mov
out
enter
test
add
push
cwtl
dec
orb
push
test
and
xchg
cmpsl
cmp
cmp
mov
mov
cltd
lahf
pop
js
aam
sub
and
stos
or
dec
jne
adc
or
and
or
mov
je
stc
stos
inc
xchg
mov
push
pop
dec
lods
sbb
sub
xorb
sub
xchg
insl
add
adc
jae
lods
mov
adc
jb
mov
inc
roll
jb
inc
aam
inc
movsb
stos
or
pop
push
inc
mov
movsl
pop
xor
dec
sub
filds
ljmp
leave
sbb
sbb
lcall
xchg
cmp
outsl
jne
imul
xchg
sub
push
mov
mov
fs
std
sbb
xor
jmp
pop
movsb
xor
pop
sbb
aaa
jno
stos
xchg
mov
jmp
int
pop
xor
imul
mov
mov
inc
arpl
fisttpl
aaa
fbstp
dec
movl
inc
mov
and
je
mov
sbbb
jno
adc
pusha
mov
mov
loop
loopne
test
inc
push
xor
push
cmc
push
or
or
ss
jecxz
lea
adc
mov
stos
lahf
ficompl
jecxz
xor
jmp
add
movsb
pop
pop
je
lahf
mov
lahf
jg
cmp
push
adc
loop
lods
add
lcall
sub
mov
jne
inc
rorl
dec
inc
and
pusha
adc
cmp
and
sbb
mov
bnd
popf
xor
dec
and
add
mov
or
movsl
sbb
adc
addb
xor
pop
xchg
jns
es
cmp
inc
loop
add
push
and
movsl
ret
xchg
jl
cmp
and
or
gs
and
mov
cmp
fsubs
jecxz
pop
mov
je
xchg
scas
xor
fs
xchg
out
add
mov
cmc
add
inc
or
inc
push
enter
dec
jno
add
xor
adc
sahf
sub
sbb
pop
add
mov
test
mov
ss
inc
jmp
push
push
add
xchg
xor
and
pop
sbb
xor
mov
sbb
push
leave
lret
gs
mov
adc
and
call
mov
dec
fs
jno
sbbb
call
cmp
pop
push
scas
fstl
lds
aaa
int
loopne
mov
mov
adc
ljmp
sub
push
dec
sub
test
or
cmp
xor
sti
imul
sbb
xchg
ret
sbb
test
in
mov
ljmp
jae
xchg
lods
mov
fs
mov
ljmp
cwtl
mov
xchg
mov
test
shrl
out
add
shlb
imul
mov
fisttps
mov
sbb
and
outsb
or
mov
sbb
cmpl
jb
scas
push
pop
mov
ret
jns
in
push
dec
and
cmp
roll
or
and
mov
sub
ret
outsb
test
int
sub
rorl
sbb
or
pop
inc
je
push
loope
out
aam
xor
stos
xor
mov
or
mov
pop
mov
adc
mov
call
add
push
dec
xor
xchg
or
imul
adc
lea
in
cmp
mov
inc
sbb
imul
mov
jo
adc
adcl
pop
aam
jmp
mov
or
loop
xorl
popa
movsb
enter
bound
push
and
and
pop
xor
stos
lcall
adc
pop
xor
mov
aaa
and
mov
dec
call
mov
ret
lea
scas
mov
inc
lcall
or
mov
cltd
add
das
aas
or
xchg
mov
or
jne
pop
cmpsl
aad
adc
cmp
xor
dec
cmp
pop
jns
enter
in
sbb
jmp
push
outsl
int
push
cwtl
cmpsb
outsb
cltd
jp
xchg
adc
dec
xchg
mov
push
cmp
inc
ljmp
push
add
xchg
xchg
dec
rep
rorl
leave
mov
jecxz
adc
xchg
or
inc
insb
sub
sub
adc
and
or
add
icebp
pop
stos
xor
stc
icebp
test
sub
add
jmp
adc
stos
rorl
loopne
push
ror
jecxz
adc
loope
insl
cwtl
scas
jg
in
cwtl
xor
push
mov
push
add
sahf
xor
movb
arpl
rclb
bound
and
loope
add
adc
loopne
scas
add
add
add
arpl
mov
push
pusha
lahf
sbb
mov
mov
pop
mov
xchg
rolb
mov
xchg
jge
pushf
adc
mov
adc
mov
mov
push
add
push
mov
and
sub
and
int
mov
push
sbb
jo
scas
lret
fwait
sbb
stos
push
fcmovu
cmp
out
loope
inc
repnz
add
shll
xchg
mov
cmp
pop
jne
outsl
orl
cmp
cmpsb
popa
sbb
cmp
rorl
or
rclb
sahf
test
or
xchg
jo
add
arpl
mov
push
mov
or
outsl
mov
add
dec
in
nop
arpl
pop
movsl
push
test
push
jmp
lret
rclb
movsb
cmp
test
popf
push
xchg
xchg
xor
mov
and
mov
pop
pop
lods
or
xchg
push
xor
repnz
pop
int
ja
ss
sbbb
mov
adc
pop
xchg
imul
xor
nop
les
sub
push
cld
popf
or
inc
mov
pop
imul
mov
mov
pop
les
add
in
mov
das
jae
aaa
push
dec
mov
stos
jmp
mov
xor
inc
movsl
ret
out
imul
pop
pop
mov
test
and
cmp
loop
jno
xor
stos
test
in
nop
cltd
jno
scas
fnsave
sbb
adc
push
cld
add
cmp
pop
lea
or
sbb
mov
insl
xchg
or
sub
adc
and
sbb
jg
rolb
ret
lds
push
sbb
inc
xor
jge
unpcklps
into
pop
add
mov
adc
mov
pusha
outsb
out
push
pop
roll
lret
aad
sbb
cwtl
testb
hlt
insl
jecxz
es
orl
lods
stos
push
in
dec
scas
adc
movsl
fcmovnu
sub
adc
ret
pop
sbb
or
jno
mov
push
fcom
pushf
les
and
popa
sbb
xor
cmp
mov
or
insl
dec
pop
xlat
shrb
or
push
frstor
daa
lcall
xchg
xchg
jmp
out
jmp
mov
in
sbb
push
xor
pop
sbb
andb
mov
lret
nop
inc
sbb
or
out
insb
mov
cmp
das
ljmp
jnp
adc
jne
push
cmc
addl
or
pop
scas
lea
xchg
cs
inc
addb
aad
push
dec
and
inc
dec
push
add
insl
xchg
sub
ss
shlb
shll
insb
push
sbb
nop
imul
xchg
jo
test
xchg
addb
rcl
ret
push
sbb
popf
mov
inc
cmpsb
nop
mov
sub
ret
test
in
adc
icebp
xlat
pop
xchg
mov
mov
mov
cs
jb
outsl
jmp
iret
or
sub
pop
cmpsl
sbb
jne
inc
sbb
lock
movsb
and
pop
in
jb
and
lret
and
enter
outsb
pop
out
ss
jae
add
sbb
jecxz
cmp
adc
lods
xchg
sbb
jl
cmp
rol
add
mov
inc
popf
and
or
sbb
test
add
test
pop
mov
orb
push
sbbl
popa
les
push
pop
inc
sbb
and
dec
or
cmp
push
or
push
daa
mov
test
mov
or
sbb
addr16
mov
jg
sahf
jo
dec
test
pop
add
pop
sahf
jno
sub
loopne
pop
es
cmp
pop
repnz
jnp
aad
add
imul
mov
mov
inc
test
scas
mov
inc
jns
xchg
jno
cmpb
push
dec
push
inc
xlat
mov
rclb
lods
sub
aam
cmp
jbe
cmp
adc
xor
bound
rolb
stos
gs
dec
subl
and
into
jmp
mov
icebp
test
movsl
icebp
push
mov
add
int
mov
push
mov
sub
push
jne
adc
adc
inc
scas
adc
lods
mov
mov
inc
ret
cli
shll
xor
rorb
addl
and
or
push
and
nop
out
sub
mov
sub
inc
rol
xor
cmp
cmp
jne
repz
imul
rorl
outsb
inc
sub
sbb
cmpsb
imul
je
cmp
inc
pop
xor
ret
add
fwait
push
mov
mov
nop
pop
fistpll
mov
dec
adcl
and
repnz
mov
jo
push
sub
arpl
in
rolb
xor
inc
rcll
push
mov
popf
ret
lods
add
mov
add
xchg
subl
into
rorb
jbe
and
add
jno
jae
aad
and
cmp
add
pop
mov
mulb
stos
dec
cli
pop
push
add
sahf
push
movsb
push
lds
sub
lahf
rcrb
xchg
insb
and
pop
pop
dec
movsb
sub
add
cmpsb
divl
adc
dec
jg
movsl
and
andb
dec
notl
push
nop
xchg
or
sahf
push
add
pop
or
ffreep
scas
adc
or
cs
rcll
inc
test
scas
dec
out
rclb
mov
mov
sub
xchg
pop
lea
scas
inc
xchg
in
jae
inc
and
lds
adcb
fidivs
cwtl
and
jo
jg
sub
dec
int
fsubs
mov
dec
gs
cmc
insb
and
arpl
inc
xlat
inc
adc
rdtsc
arpl
test
shrl
stos
xchg
mov
syscall
imul
pop
dec
stos
xor
mulb
jl
sbb
stos
cwtl
cmp
push
imul
mov
adc
stos
sub
add
sbb
mov
xor
leave
xor
pop
bound
sbb
mov
pop
push
or
xor
lods
ja
insl
mov
or
or
dec
dec
out
xchg
adc
mov
xchg
loope
pop
lret
pop
stos
test
outsb
movsl
fstpl
inc
aad
cmpsb
stos
cmp
inc
jne
call
and
add
arpl
inc
sub
add
dec
shlb
packsswb
stos
mov
shrb
add
mov
dec
shrb
shll
fnstcw
cmp
aam
jbe
test
sbb
sahf
pop
mov
cwtl
adc
inc
sbb
cmc
testl
sbb
pop
lds
pop
jp
jno
cli
or
push
xor
adc
xor
xor
gs
xor
int
daa
mov
shll
mov
lahf
add
inc
jle
inc
pop
xchg
pop
lea
mov
inc
and
stc
inc
add
jmp
xchg
sbb
mov
add
pop
shl
rorb
movsl
inc
lods
sbb
cmpsl
or
fstps
push
cmp
cmpsl
aad
fstl
shl
adcb
adc
std
pop
jo
cmp
xchg
outsb
rcrb
sbb
jl
xor
push
sahf
or
xor
ja
adcb
push
pop
xchg
in
dec
pop
insl
enter
add
jbe
sub
mov
les
add
jge
mov
inc
popa
push
add
jne
add
sub
in
mov
mov
add
push
sbbb
push
inc
cmp
jne
mov
push
jno
sub
push
rclb
lods
xorw
test
and
add
lods
cmpsb
dec
xor
and
xchg
std
aam
out
mov
mov
adc
pop
sub
push
cmp
mov
jmp
cmp
fldl2e
les
cmp
in
push
loopne
rorb
sbb
jle
or
aad
imul
les
dec
xor
ss
test
cmp
adc
adc
adc
and
adcb
sbb
push
pop
addb
test
inc
xchg
lea
add
cwtl
fisttps
dec
push
fsts
loopne
jl
enter
gs
decb
imul
jp
jno
pop
inc
xchg
pop
adc
mov
push
or
arpl
rcl
inc
jge
or
dec
mov
cmpl
mov
jmp
jnp
in
nop
cltd
and
in
adc
add
dec
dec
inc
scas
insb
lret
roll
sbb
dec
mov
inc
bound
sbb
nop
xchg
fildll
mov
add
and
add
inc
fcoml
js
rol
adc
and
test
mov
and
imul
xchg
dec
jnp
leave
jno
pop
cmc
ret
daa
sbb
add
add
addb
cmpsb
dec
repnz
and
xchg
loopne
lret
adc
sbb
mov
test
orb
and
adc
mov
xor
stos
enter
adc
jecxz
nop
dec
mov
cmpsl
sub
nop
inc
and
pop
lea
xlat
mov
dec
in
daa
sbb
les
arpl
mov
sub
cmp
mov
dec
andb
xor
inc
add
xchg
ds
cwtl
nop
sbb
scas
pop
bound
test
ret
fstpl
in
sbb
mov
mov
mov
pushf
test
xor
out
lret
dec
movsl
xchg
push
mov
cmp
inc
add
out
cmp
lods
sub
xchg
jne
std
dec
imul
add
add
movsl
push
cltd
rolb
cmc
cld
sbb
shrl
inc
lea
add
jb
gs
xchg
or
add
scas
pop
add
sbb
les
pop
mov
and
loopne
addb
inc
sbb
outsb
push
imul
xchg
jge
or
push
adc
adc
test
lock
and
add
enter
in
inc
test
fdivs
xlat
test
lea
jne
in
pusha
dec
cld
and
inc
mov
lods
push
xor
mov
out
pop
fsub
stos
imul
xor
inc
outsl
outsl
test
jmp
or
mov
mov
sbb
adc
jmp
loopew
jno
pushl
pop
sbb
rorl
ficoml
pop
decb
and
or
imul
sbb
or
sub
xchg
xchg
add
push
movsb
push
lret
or
add
cmpsb
add
xor
lcall
mov
pop
lds
push
mov
loope
ja
insl
je
inc
jae
and
pop
xor
push
fwait
inc
inc
fildl
xchg
mov
adc
lods
mov
test
push
rclb
jb
mov
mov
out
push
inc
insb
pop
dec
testb
mov
and
les
jnp
xor
lods
es
mov
sbb
addr16
bound
mov
adc
sarb
jne
das
icebp
or
adcl
es
push
int3
fwait
cltd
lock
push
mov
inc
out
mov
jecxz
dec
lods
outsb
pop
loope
pop
add
and
inc
insb
out
add
adc
test
sahf
mov
enter
jle
mov
or
and
clc
cwtl
pop
fnstcw
or
enter
aaa
lods
inc
mov
mov
push
lea
push
mov
and
and
jae
mov
xor
jg
or
inc
stos
test
mov
sbb
xor
add
mov
ret
subl
sub
popf
test
dec
sbb
sbb
pop
xchg
push
in
andl
sub
sbb
mov
cmp
insl
dec
int
dec
fsubs
stc
mov
ret
loope
pop
enter
dec
lret
inc
add
push
inc
and
and
cmp
ljmp
dec
xor
mov
or
adc
inc
ja
insl
test
prefetchnta
xchg
pop
inc
movsb
stc
add
dec
adc
push
inc
adc
adc
push
mov
jno
rcrb
xchg
mov
and
pop
cmpsb
imul
cmpsb
outsb
or
adc
mov
andb
push
dec
and
hlt
inc
imul
push
push
add
push
insb
loope
sub
mov
lea
sbb
imul
push
sbb
xorl
adcl
dec
or
pusha
mov
inc
xor
mov
ret
frstor
mov
and
add
sbb
pop
lods
in
and
in
fucomp
scas
shll
test
dec
je
xor
stos
test
mov
sbb
int
jo
adc
repnz
or
inc
popf
adc
sbb
add
mov
jnp
lcall
jo
xchg
push
dec
in
adc
in
mov
sbb
dec
sbb
dec
sbb
add
ja
popf
adc
mov
arpl
inc
add
sbb
loopne
aam
mov
in
push
add
sub
push
cmp
or
cmp
mov
das
and
lcall
push
arpl
pop
pop
lcall
mov
ja
arpl
xchg
fiadds
push
mov
mov
arpl
xchg
insl
jg
xchg
sbb
push
ljmp
sbb
or
fcom
sub
mov
ss
dec
pop
xor
fdivrs
loope
inc
pop
or
or
cmp
popa
rclb
std
mov
test
sbb
loope
add
aad
inc
mov
les
fadds
jge
push
mov
xor
push
xor
xchg
dec
xor
negb
xchg
inc
mov
sahf
xchg
dec
mov
loopne
push
mov
and
leave
in
dec
sbb
sub
andb
popf
in
fdivs
xchg
mov
in
dec
dec
test
pop
and
inc
scas
cmp
mov
insl
cmc
adc
xor
sqrtps
out
cmp
or
popa
and
mov
add
or
dec
push
xlat
add
jns
cltd
aad
inc
and
dec
fcoml
pop
imul
jnp
cmpsb
sbb
pop
lahf
xchg
add
mov
or
add
mov
push
pushf
cmp
pop
sub
cmp
iret
stos
and
add
cltd
fwait
jmp
adc
pusha
dec
fldcw
je
cmc
and
stos
jae
mov
mov
xchg
pop
push
out
mov
mov
pop
sbb
dec
aaa
scas
andb
cmp
loopne
inc
xchg
movb
test
fstpl
jmp
mov
pop
add
inc
dec
xchg
push
js
or
xchg
push
mov
lea
mov
scas
sbb
dec
aaa
int
mov
lea
cmp
js
lods
outsl
stos
mov
sub
or
pop
shlb
inc
dec
sbb
add
inc
pop
aam
add
mov
xchg
push
or
push
sbb
xor
das
enter
lds
xor
scas
xor
lea
jb
imul
mov
add
inc
or
pop
movsl
imul
mov
push
orl
lcall
dec
inc
jmp
jne
xorl
in
imul
dec
pop
rcrb
dec
in
add
nop
push
cmp
jae
test
loop
movsl
add
jne
cltd
mov
leave
enter
and
jp
cmp
and
mov
cmovge
xchg
xor
add
das
daa
mov
xchg
push
push
and
push
dec
cmpsl
pop
popf
sbb
jns
daa
or
arpl
mov
adcl
fidivl
adc
sbb
stos
mov
mov
jnp
and
sbb
in
fwait
add
xor
add
push
sbb
inc
orb
lods
jp
jne
xchg
xchg
sub
xchg
sub
xor
mov
add
push
sub
popf
cltd
jo
add
sub
je
xor
lods
inc
cwtl
mov
xor
push
jne
stos
loop
inc
sbb
sub
and
inc
cmp
lahf
inc
or
imul
push
push
fsubs
sbb
push
hlt
and
cs
and
add
add
cmp
and
and
pop
or
cmpsb
dec
mov
rcll
rorl
stos
call
shlb
and
test
xchg
xchg
in
pop
call
cmp
fisttps
nop
daa
mov
cmpsl
and
push
push
imul
mov
pop
repz
adc
and
and
add
lcall
inc
adc
push
das
cmp
mov
mov
popf
sbb
push
push
imul
add
push
stos
cli
dec
jo
es
popf
push
and
mov
xchg
pop
sti
mov
mov
pop
repnz
fwait
inc
gs
and
std
or
out
and
inc
inc
pop
adc
sbb
stos
movsl
dec
sbb
jo
cwtl
pop
xor
movb
add
jbe
mov
sti
push
je
pop
cmp
dec
mov
fsts
mov
out
and
mov
shll
mov
pusha
sbb
je
mov
cmp
or
push
repnz
pop
scas
inc
ds
cmp
xor
sub
scas
fwait
mov
add
cld
popa
loopne
dec
xor
mov
or
dec
push
dec
or
mov
test
or
mov
sti
inc
push
push
cmp
rcr
mov
inc
sub
pop
andl
call
stos
pop
xchg
loopne
dec
aad
dec
loop
mov
lcall
or
inc
pop
xchg
push
push
sbb
cmp
mov
and
xor
pushf
jge
cmp
subb
add
call
aad
add
cmpsb
sub
es
jl
jo
pop
imul
sbbb
jecxz
sub
inc
jmp
cmp
push
mov
dec
jne
imul
mov
pop
pop
test
loope
test
sub
imul
lahf
fs
jmp
lret
shll
adc
push
mov
xor
dec
cmc
push
dec
lods
or
xchg
shlb
adc
cmpb
push
dec
or
imul
pop
test
push
or
inc
dec
pop
jo
sti
gs
push
and
mov
std
dec
sub
add
adc
push
adc
test
xor
dec
pop
jecxz
pop
and
and
push
stc
cmp
inc
out
cmp
xchg
xor
out
push
inc
sahf
daa
imul
xchg
je
add
add
add
sbb
sub
lea
add
mov
sbb
pop
outsb
dec
fwait
mulb
jge
adc
xchg
xchg
fldt
sub
add
fwait
jo
and
or
add
adc
rolb
enter
ret
push
cmp
mov
out
inc
outsl
mov
dec
jecxz
in
inc
aaa
cmc
pop
lds
cmpsb
mov
jbe
inc
test
add
xor
push
pop
mov
inc
dec
rcrl
push
pop
int
push
inc
dec
mov
rclb
jge
xchg
mov
push
xchg
aaa
jecxz
sarl
pop
jae
mov
call
cwtl
addb
pop
lods
xchg
dec
decb
mov
xchg
pop
sti
ja
cli
mov
adc
inc
movsl
cmp
push
or
mov
movsb
repnz
mov
dec
cltd
mov
and
cld
lds
bound
mov
mov
mov
dec
add
inc
push
xchg
add
and
xor
cmpsb
aad
dec
add
leave
inc
call
jne
repnz
pop
fisttpll
xor
dec
mov
aaa
jno
pop
popa
and
je
aam
sub
mov
mov
fldenv
add
and
loopne
mov
stos
add
fs
scas
push
test
cmp
pop
pop
jae
add
in
mov
das
lods
add
jecxz
add
inc
mov
test
std
int3
rolb
adc
sbb
mov
mov
mov
sbb
fists
mov
out
nop
stos
push
push
cmpsl
push
lcall
sarl
movl
push
adc
lea
jns
push
and
push
inc
dec
sahf
lahf
jne
pop
rcrl
sahf
or
sbb
pop
and
fs
jno
add
add
pop
add
negl
popf
movb
stos
rclb
xchg
imul
lahf
leave
aam
pop
sub
push
mov
mov
std
cmp
ljmp
or
scas
leave
push
jp
pushf
scas
xchg
mov
cmp
or
imul
sub
pop
add
addl
dec
mov
test
pop
in
lds
imul
std
inc
cmp
pop
sub
int
mov
adc
xchg
insl
inc
cmp
or
leave
add
adc
and
dec
sub
push
or
inc
sub
cmc
leave
movsl
repnz
adc
sub
xor
dec
push
mov
in
mov
jecxz
je
sub
shll
jmp
decb
push
test
std
imul
adc
filds
imul
add
pop
push
xchg
cltd
addl
push
loopne
pop
jns
jg
add
xchg
mov
jb
sbb
or
ficompl
gs
insl
idivb
pop
insb
and
popl
es
insb
fwait
mov
jo
loop
jae
mov
push
inc
push
xchg
pop
mov
pushl
or
xor
dec
push
sub
xor
jb
push
in
mov
inc
outsb
add
cmpl
add
aam
into
or
fcoms
inc
ret
imul
adc
shlb
inc
and
aaa
jmp
mov
xchg
cld
and
fidivrs
pop
bound
subb
rorb
mov
shrb
xchg
mov
mov
nop
pop
cli
mov
or
jae
sbb
in
fnstcw
inc
dec
lcall
and
jns
jo
or
sub
push
xlat
stos
rol
sbbb
cmpsb
test
and
cmpsl
ret
adc
sbbb
adc
sbb
iret
test
push
stos
or
loop
pop
inc
pushf
or
mov
inc
stos
push
rcl
sbb
mov
mov
adc
insb
add
ljmp
jbe
cmp
xor
jg
test
mov
fidivs
shr
jo
and
mov
sarl
pop
stos
xlat
jns
pop
aad
pop
int
aam
push
mov
cmp
mov
popa
jne
cmp
dec
imul
push
push
push
inc
jns
scas
cmp
or
xchg
das
sub
lahf
pop
inc
dec
scas
or
and
dec
push
push
sub
adc
cwtl
test
jl
cmp
paddusw
out
hlt
test
jecxz
pop
adc
inc
arpl
sbb
adc
imul
inc
leave
sbb
gs
push
add
mov
add
add
and
cmp
jno
imul
test
push
xor
or
into
xchg
cmp
mov
mov
jno
push
cwtl
sbb
sub
dec
in
jbe
add
push
lods
and
mov
add
add
add
mov
or
fstpt
push
jo
imull
cmpsl
push
enter
jecxz
dec
pop
or
movsl
xor
pop
test
inc
sbb
push
xlat
fs
scas
jmp
jne
push
mov
push
inc
dec
add
dec
shr
mov
sbb
scas
ss
lcall
cmpb
mov
sub
sbb
push
add
add
inc
std
jb
ljmp
and
cmp
into
mov
movb
cmp
leave
ja
add
xchg
jno
push
push
add
aad
xchg
push
mov
nop
xor
mov
and
cmp
xlat
jmp
push
jnp
jecxz
test
lea
cmp
add
jo
scas
aad
xchg
mov
mov
lahf
andl
mov
or
adc
or
stos
cmp
adc
sahf
pop
arpl
dec
push
sub
in
push
push
pop
sbb
nop
xlat
mov
data16
int3
stc
push
add
adc
push
rorl
xor
xor
hlt
mov
stc
adc
xor
rcll
adc
pop
jb
mov
inc
inc
out
sbb
aad
stos
test
xchg
add
scas
mov
adc
push
adc
test
std
xor
gs
leave
add
and
mov
push
mov
mov
push
es
or
mov
int3
inc
mov
rorb
outsb
inc
ss
jmp
add
pop
cmpsl
cmp
xor
popa
loopne
mov
push
cld
inc
arpl
push
stc
les
sub
ret
int
add
cs
add
loope
xchg
rcrb
imul
push
and
add
push
dec
repz
push
adc
jle
sbb
xor
gs
mov
shr
mov
jnp
popa
sub
dec
arpl
sub
addl
je
ret
imul
lcall
dec
bound
cltd
daa
pop
sub
pop
rcrb
cmp
sbb
push
sti
insl
stos
or
mov
lea
sub
lods
mov
fcoml
iret
or
adc
test
into
xchg
or
and
mov
test
pusha
insl
and
mov
sar
inc
and
push
stos
sub
or
adc
cld
clc
sub
add
test
je
adc
fwait
jg
in
or
pop
std
and
inc
jae
subb
mulb
xor
cmp
add
pushf
rolb
inc
and
push
stos
add
rorb
mov
add
pushf
lea
xor
sub
loopne
xor
das
in
lds
xchg
or
mov
push
adc
xor
cmpsb
jmp
in
or
add
dec
test
test
dec
cmp
mov
sarb
add
lahf
sbb
movsb
cmpsl
or
cltd
sti
bound
push
ss
inc
movsl
add
mov
je
jecxz
pop
lds
cmp
xchg
jmp
je
je
stos
or
cmpsb
and
dec
fdivrs
scas
cmp
add
out
sbb
push
out
mov
mov
stc
jo
rolb
scas
call
cmc
sbb
xor
andb
inc
sbb
pusha
push
pop
scas
pop
pop
lahf
add
fcmovbe
lcall
pop
mov
inc
sbb
push
cmc
add
mov
decb
add
add
cmp
out
leave
or
sbb
loopne
cmpsb
fwait
pop
stos
cmpl
inc
mov
add
dec
movsb
mulb
mov
mov
test
dec
daa
and
les
outsb
loope
movsl
jecxz
arpl
mov
adc
pop
sbb
jo
or
add
and
jbe
lret
movsl
sbb
or
pop
xlat
int
popa
stos
xor
and
inc
inc
lcall
shll
xor
xor
aad
icebp
adc
ja
aam
cmp
popa
and
in
ljmp
les
jo
adc
jno
in
stos
in
cmp
mov
or
imul
shll
adc
inc
adc
jo
push
das
add
or
add
pusha
adc
lds
dec
xor
popf
cmp
rcll
xor
fldt
hlt
jmp
inc
sbb
mov
push
out
xchg
push
add
test
div
add
push
dec
xchg
pop
mov
leave
adc
cmpsl
lret
push
sbb
jo
scas
dec
fmul
sbb
sub
xor
out
cmpsl
js
inc
stos
add
addb
enter
sbb
pop
inc
inc
and
iret
stos
loope
add
lcall
movsb
mov
pop
andl
add
jmp
inc
mov
cmp
hlt
inc
xchg
push
adc
xchg
bound
mov
andb
adc
ja
fdivs
mov
inc
add
ret
dec
xor
sti
dec
xor
cmp
sbb
loop
aad
in
inc
enter
leave
movsl
addb
inc
ret
sub
mov
nop
push
jge
adc
shll
cmp
mov
and
jno
sbb
push
cwtl
sbb
test
xchg
and
add
dec
dec
mov
xchg
pushf
mov
popa
mov
dec
insb
ud2
adc
pusha
outsl
xchg
or
in
mov
sub
sbbl
std
nop
inc
ljmp
inc
mov
out
jecxz
adc
jmp
and
enter
lods
dec
jb
je
jbe
adc
jo
lea
adc
xor
pop
pop
shlb
adc
mov
loop
bound
sub
xchg
movsb
leave
pop
pop
sub
leave
enter
test
xchg
push
lods
sbb
adc
sub
gs
sbb
loope
imul
sbb
or
inc
push
xor
push
push
icebp
xchg
cmc
add
insb
loop
add
push
fdivl
jmp
in
pop
cmp
movsl
fmuls
jns
jne
fwait
xlat
insb
jnp
add
outsl
ja
and
rdtsc
xchg
push
adc
fistl
xor
shll
jns
and
jo
xchg
xor
pop
and
popf
cmp
test
pop
push
and
arpl
mov
sbbb
add
mov
aam
in
add
shll
xor
pop
leave
cld
and
xchg
movsl
mov
les
dec
push
sub
scas
loop
sub
pop
mov
jno
xchg
loope
mov
iret
jno
pop
jne
shll
push
xchg
loop
mov
or
ja
orb
loopne
test
and
in
outsb
cs
arpl
les
stos
push
sub
cld
jns
ljmp
imul
cmp
jns
pop
dec
les
mov
dec
jmp
and
aaa
je
pop
nop
lahf
xchg
and
sub
jb
daa
xchg
out
mov
popa
addr16
jne
sbb
ja
xor
popf
or
in
xor
cld
test
adc
xchg
cmp
in
cs
sub
fldenv
fsubrl
push
inc
enter
sbb
jp
mov
xor
add
subb
pusha
xor
das
out
pop
mov
call
jno
enter
xchg
lret
popa
stos
mov
add
push
add
add
xchg
mov
les
xor
roll
inc
and
adc
add
dec
dec
loope
cmpsb
and
scas
mov
sub
test
mov
push
xor
mov
lods
dec
dec
loope
push
loopne
or
push
scas
pop
dec
jne
pop
mov
cmp
add
push
or
adc
test
cmp
imul
or
sub
jge
xor
int3
dec
or
jbe
and
aad
dec
ret
xlat
xor
jmp
sub
lds
add
cld
add
in
mov
sbb
jno
int3
sbb
cmp
stos
shlb
pushf
sbb
xchg
cmp
insl
pusha
push
or
add
xor
xchg
pop
jb
scas
sarl
rol
and
xchg
pusha
or
or
jmp
es
dec
mov
imul
xor
sti
sbb
push
sbb
outsb
and
push
adc
xor
in
sbb
mov
out
test
mov
mov
lcall
sub
dec
pushf
fs
cmpsb
push
in
scas
push
inc
sub
imul
rcll
xchg
push
push
in
fs
je
push
inc
sub
dec
ljmp
xchg
and
adc
mov
dec
xor
pop
test
aam
jno
cmc
fdivs
pop
push
inc
imul
cwtl
movsb
rcll
inc
dec
xchg
jno
push
insb
push
jg
xor
add
pusha
test
ret
out
xchg
or
cmpsl
jne
movsl
das
inc
xor
ret
cmc
inc
rorl
jno
pop
add
xor
jl
in
dec
push
sbb
jns
pop
lahf
push
xor
and
pop
or
and
shrb
addr16
addb
push
lds
repz
push
or
mov
adc
stos
add
test
cmp
daa
xlat
add
lods
push
xor
pop
lahf
push
xchg
xor
add
mov
sbb
mov
xlat
push
push
xorl
stc
iret
jo
and
pop
test
dec
movsb
push
call
je
sbb
sub
call
cmp
sbb
ret
xchg
sar
mov
inc
psraw
adc
jg
in
xchg
mov
cltd
xchg
cltd
mov
imul
xchg
pop
rclb
rcr
fwait
mov
in
cmp
inc
pop
repnz
movsb
mov
jle
push
stos
adc
adc
hlt
mov
rcrl
aad
cmp
and
add
xor
and
jp
subb
xchg
aam
data16
pop
dec
jo
jl
adc
jb
adc
or
xchg
pop
test
jno
or
and
ja
push
das
imul
lods
fs
faddp
sbb
sbb
scas
stc
pop
cwtl
scas
and
mov
sub
ja
dec
rolb
adc
in
push
push
movb
lret
inc
sub
inc
dec
mov
jg
adc
jmp
inc
movsl
xor
xchg
jne
je
mov
and
jmp
sbbb
add
loope
pop
fnsave
movsb
add
cmpsl
add
add
jno
scas
push
nop
or
mov
dec
test
pop
pop
or
shl
pop
aad
push
add
cmp
das
push
mov
jno
inc
or
pusha
inc
daa
push
mov
insb
sub
or
add
mov
loop
inc
popa
mov
dec
jmp
inc
mov
sub
imul
mov
sbb
pusha
sub
test
add
les
or
mov
adc
jno
pop
push
dec
mov
lea
cs
jb
mov
int
add
rorb
jae
sbb
inc
add
jae
in
outsl
adcb
dec
mov
adc
cmp
orl
or
int
add
bound
and
push
lcall
inc
mov
dec
mov
cmp
movsl
loopne
dec
xchg
push
add
dec
dec
xor
sbb
test
les
bound
lret
inc
dec
and
fwait
mov
mov
int
mov
cmp
pop
ret
xchg
cmp
jno
pop
mov
push
inc
dec
push
lds
adc
lahf
mov
daa
out
pushl
sbb
and
and
mov
dec
add
cwtl
test
dec
or
or
ja
gs
cwtl
jbe
sbb
cmp
cmpsl
mov
mov
and
out
sbb
test
or
and
je
cmp
addr16
jns
dec
push
or
add
and
push
xor
shrl
in
xor
in
pop
add
sub
rcll
mov
imul
popa
xchg
xlat
xchg
push
lods
movsb
ja
mov
mov
adc
add
test
jne
pop
add
shll
or
jmp
pop
mov
jge
lea
dec
lcall
cmp
push
popa
mov
sbbl
out
fildl
nop
inc
stos
or
pop
xor
sub
dec
push
adc
mov
or
pop
jae
adcb
inc
inc
stc
jne
sbb
imul
mov
add
and
add
adc
sub
ljmp
call
test
sbb
aas
sbb
ret
pop
xorb
xchg
xor
mov
jmp
out
sti
test
and
jmp
dec
pop
adc
imul
xor
daa
sbb
cld
push
imul
cs
fists
inc
adc
add
mov
repnz
and
pusha
adc
add
rcrl
cmp
jo
push
inc
in
and
add
sbb
push
ja
add
call
int3
pop
cmp
inc
movl
mov
dec
sti
or
aaa
inc
test
rolb
jg
pop
push
aam
or
test
fnsave
or
sbb
push
cmp
lret
push
movsb
add
ret
rclb
mov
adc
mov
adc
xor
pop
mov
add
sbb
or
nop
xchg
aad
stos
cmc
xchg
lea
sbb
or
and
movsl
add
test
shll
push
lock
neg
ret
sbb
or
imul
ss
and
js
xchg
cmpsb
inc
pop
je
shrl
sbb
adc
popa
add
or
out
aam
push
sub
pop
jmp
popf
ret
dec
push
dec
jb
nop
cmpsb
add
push
pop
xlat
sbb
fidivl
rol
in
sub
test
push
ret
shll
pop
push
imul
data16
stos
xchg
outsl
or
int
or
push
imul
push
pop
push
xor
sub
imul
and
add
lret
repnz
lahf
nop
out
inc
sbbl
xor
add
add
dec
sub
pusha
or
or
or
les
into
repz
pop
or
shlb
push
test
sbb
inc
cmp
daa
add
mov
push
mov
rcrb
mov
iret
sbb
push
jg
leave
cmovl
out
loopne
stos
cmc
pop
ret
or
loope
fwait
in
inc
test
xor
push
test
or
add
add
test
aad
dec
fmull
mov
popf
jecxz
and
mov
inc
adc
jl
sbb
mov
sub
mov
inc
inc
mov
test
sbb
pushaw
adcb
das
jecxz
or
or
test
adc
sbb
sbb
inc
add
cmp
mov
sub
je
dec
jno
je
cmp
cmc
mov
loop
insl
inc
sbb
stos
push
or
inc
sbb
test
mov
insb
sub
pop
lret
or
out
jmp
add
mov
mov
les
les
std
out
adc
pop
add
lods
cmpsb
sub
jns
cmp
adc
or
sti
push
xlat
adcb
cmp
jg
xor
les
add
rorl
push
stc
mov
fisttpll
sbb
push
or
loopne
and
popf
pop
enter
inc
imul
jp
test
test
rcl
sbb
jno
add
inc
test
and
jo
cmc
mov
pop
adc
and
movsl
imul
bound
nop
or
dec
push
test
sub
jge
add
add
lods
lods
sbb
jle
mov
jle
icebp
push
jb
xchg
je
push
aad
stos
fadds
in
ret
push
pop
adcb
arpl
push
xor
push
pop
cmpsl
loopne
push
fs
push
cs
and
sbb
push
mov
pop
mov
add
les
sub
pop
xor
pusha
addb
sbbb
aad
mov
mov
push
xchg
dec
push
inc
jg
adc
fists
mov
ret
scas
jecxz
adc
jno
test
mov
add
inc
or
lldt
decl
add
lret
mov
sbb
ljmp
movsl
lea
mov
adc
in
inc
test
sbb
subl
and
pop
ud1
or
push
dec
aaa
pop
nop
out
es
sti
into
rcl
pop
push
xor
push
push
pop
loop
cmp
mov
jge
nop
adc
in
outsb
mov
or
pop
adc
mov
arpl
andb
jl
loop
push
add
or
mov
arpl
insl
xor
add
pop
jmp
add
xor
or
pop
jne
ret
add
inc
and
movsb
jo
adc
dec
pop
imul
dec
pop
add
jb
inc
imul
xor
cwtl
lods
add
ret
jb
pop
cwtl
push
test
push
sti
pop
lods
push
add
sbb
dec
mov
lcall
out
and
sti
lret
push
adc
jo
sub
add
nop
out
xchg
inc
add
test
or
lds
inc
lods
jbe
mov
lods
rcl
mov
cmp
out
xchg
sbb
jmp
or
test
sub
stos
leave
dec
mov
cmp
out
insb
mov
cmp
aam
add
test
outsb
mov
sub
aaa
add
pop
cmp
addr16
nop
dec
jmp
pop
in
pop
xor
adc
nop
pop
daa
test
dec
lahf
adc
dec
mov
xorl
mov
add
add
jmp
adc
add
lods
in
cltd
dec
and
cwtl
cmp
xor
rorl
inc
pusha
jmp
dec
lret
pop
je
or
mov
sub
pusha
push
ret
or
add
call
xor
sbb
daa
cmp
adc
sbbl
pop
push
rcrl
xor
add
jecxz
mov
test
pop
or
push
test
xor
iret
pop
aaa
dec
jo
pop
mov
or
add
xlat
add
and
jno
mov
stc
psubusb
sbb
jmp
sub
mov
shll
mov
xlat
cmp
daa
add
push
adc
out
push
push
adc
cmp
add
adc
in
popa
fsts
xlat
xor
gs
rcl
sar
sbb
add
cmp
cwtl
ret
scas
push
add
data16
jo
out
pop
push
dec
sahf
sub
and
and
jecxz
add
cmpsl
jnp
fldcw
aas
cwtl
pop
push
add
and
add
addr16
and
fistpll
add
jo
bswap
mov
add
sbb
mov
xor
mov
adc
push
jae
xor
sub
add
xor
and
add
push
or
mov
sbb
ds
sbbb
lds
repnz
shrl
push
popa
push
cmp
mov
sbb
jno
xor
mov
lret
rclb
rolb
sbb
stc
arpl
dec
pop
enter
gs
inc
or
xor
add
shlb
mov
pop
test
sbb
sub
sbb
and
pusha
and
or
sbb
adc
xchg
push
mov
mov
push
and
adc
outsl
xlat
inc
arpl
jecxz
fisttpl
xchg
out
in
imul
mov
dec
jo
je
dec
add
and
pop
imul
fstl
rcl
add
insb
mov
out
je
and
insl
fldln2
addb
aad
push
dec
loopne
jecxz
test
jno
setle
cmpsb
je
nop
cs
xorb
dec
sbb
add
pop
push
jmp
xor
lret
popf
push
pop
sub
xorl
mov
lods
aaa
xor
andl
dec
jae
adc
push
jg
cmc
mov
orl
inc
sbb
or
out
pop
adc
stos
sub
pusha
push
pop
xchg
add
popa
sbbb
lea
add
nop
stos
mov
or
adc
rclb
les
xor
mov
ljmp
mov
inc
xor
hlt
add
test
or
push
cwtl
int
sub
rcrb
pusha
push
popf
mov
movsb
xchg
cltd
xor
sbb
xorl
fcompl
mov
lods
cmp
push
mov
mull
jmp
ret
push
cmp
inc
repz
add
dec
repz
mov
pop
lahf
ljmp
fwait
push
or
outsl
mov
push
pop
push
adc
xchg
adc
pop
repnz
mov
popa
xor
or
push
js
out
pop
xor
movsl
aaa
push
add
add
jo
jg
int
shrb
push
lcall
jns
add
adc
dec
loope
add
mov
fisubrl
mov
sub
and
test
adc
in
loop
cld
sub
push
pop
movsl
inc
pop
hlt
and
jo
mov
jno
cmpb
cmp
pusha
xor
add
loope
inc
cwtl
xchg
nop
cmp
push
pop
stos
enter
pop
adc
ljmp
or
jecxz
jnp
in
dec
jle
ret
mov
test
add
dec
xchg
pop
insb
sbbb
pop
lret
sti
cmp
or
dec
jne
out
dec
inc
pushf
ret
outsl
add
push
jge
pop
mov
movsl
add
lock
fldcw
stc
int
mov
int3
cmp
dec
push
push
mov
out
lea
push
addb
orb
imul
sub
sub
stos
xor
push
shll
mov
add
add
sbb
pop
popa
in
pop
inc
sbb
dec
xor
mov
gs
in
mov
dec
push
jmp
inc
rolb
push
ret
mov
jge
and
popf
arpl
fcompl
rolb
pop
mov
mov
testb
sti
and
and
sbb
jns
rolb
fucomp
mov
inc
jge
dec
fld
add
and
adc
and
les
lret
or
jns
ret
rol
inc
dec
or
jae
cmp
xor
push
xor
cmp
pop
subl
or
xor
and
stc
push
mov
test
xchg
pop
mov
adc
mov
mov
out
out
mov
xor
fists
mov
rolb
cwtl
lcall
and
addl
adc
rcrl
push
mov
mov
js
enter
dec
fisttpl
lret
dec
push
xchg
xor
or
dec
aas
loope
popa
sub
cmp
pop
inc
and
adcb
cmp
inc
pop
fistps
stc
add
push
sbb
sti
mov
scas
xor
or
pop
sub
jo
cs
xor
push
mov
dec
lret
rcll
test
or
mov
sbb
mov
sbb
popf
cmc
es
enter
or
test
mov
push
out
and
pop
xor
inc
or
dec
jmp
push
mov
mov
push
sbb
lahf
movsb
and
xor
sbb
loope
and
mov
mov
sti
or
pop
sbbb
jmp
adc
xor
lods
jecxz
fwait
shrb
and
or
jecxz
movl
ret
lods
mov
and
add
add
inc
add
or
or
nop
or
aas
and
cmpsl
std
or
jo
loopne
imul
jecxz
push
int
cmp
adc
iret
push
push
stos
ret
adc
or
or
inc
lds
jo
popf
xchg
adc
arpl
add
inc
cmp
lcall
jne
adc
mov
loopne
dec
jmp
movsl
fdivs
adc
nop
stos
lock
mov
or
dec
ds
test
mov
insb
fnsave
sbb
mov
ret
test
test
jae
push
loopne
adc
adc
leave
inc
andb
mov
mov
xor
jecxz
and
or
les
nop
out
xchg
fildll
add
movl
xor
fisubrl
aas
jmp
xchg
out
xor
sub
adc
push
xor
pop
rol
xchg
insl
pusha
orb
aaa
icebp
pushf
sub
dec
test
cwtl
movsb
and
scas
cmp
cmpsb
jmp
test
and
cmc
js
mov
popa
sti
pop
inc
dec
ljmp
xchg
or
and
add
dec
aad
mov
inc
add
sbbb
xchg
add
ret
imul
popa
loopne
int
addb
add
enter
add
shll
inc
dec
adc
rclb
cmp
xchg
and
dec
or
pop
lahf
jo
jno
imul
adc
and
loopne
xchg
jae
or
loop
shll
mov
cs
test
or
add
aam
inc
test
orb
inc
mov
xchg
dec
xor
push
int
inc
scas
in
and
lock
xchg
inc
dec
and
inc
cmp
xor
lcall
fwait
pop
mov
lea
cmp
mov
dec
ljmp
rolb
repnz
inc
faddl
imul
sub
adc
or
mov
push
jge
test
or
and
movsb
and
dec
push
adc
xchg
push
orb
add
add
fwait
jge
bound
mov
fists
pop
sbb
pop
shr
mov
add
fildll
xor
inc
jne
sub
xor
sub
out
sub
hlt
push
sbb
or
je
gs
and
addb
daa
mov
mov
mov
sub
xchg
jle
add
mov
lahf
popf
or
push
mov
sbb
aad
mov
cwtl
insb
lods
imul
dec
sbb
sbb
inc
xor
pusha
push
orl
cltd
inc
pop
or
xor
or
mov
test
fwait
cwtl
dec
push
dec
pop
enter
rorl
add
rcrl
arpl
testb
ret
sub
sub
es
sahf
inc
or
sti
daa
and
adc
sbb
outsl
lds
or
gs
lds
xchg
lods
mov
xor
test
pop
dec
xor
sbb
pop
dec
iret
outsl
pop
xchg
or
and
push
leave
cmp
ret
int
test
cmp
jns
sub
addr16
inc
addb
adc
add
push
outsb
divl
jge
loop
jmp
mov
inc
and
push
and
adc
aam
inc
mov
push
loop
fcomps
jo
dec
add
dec
or
mov
jns
filds
and
lea
js
test
or
out
sbb
cmp
push
inc
lcall
imul
aad
or
cmp
or
movsb
add
data16
pop
xor
xor
cltd
repz
inc
cltd
add
in
xchg
test
dec
ret
adc
aaa
jo
jno
fwait
cmp
daa
addl
addr16
mov
xor
mov
test
push
jne
push
aam
inc
and
xchg
or
ja
mov
dec
xor
xlat
daa
repz
cltd
add
loop
sub
jecxz
ret
sbb
inc
addl
addl
rolb
add
in
mov
sbb
mov
lods
sub
xchg
das
xor
cmpsb
addb
push
out
adc
and
addb
sbb
or
adc
push
jns
dec
cwtl
je
jecxz
add
and
cmp
mov
and
mov
xor
or
les
pop
xchg
nop
jnp
jmp
pop
int
repnz
stos
or
arpl
add
add
ret
xlat
pop
lret
mov
inc
and
push
xor
bound
adc
push
subb
push
test
shrl
lcall
test
and
and
into
sub
xor
fprem1
sti
lods
test
dec
or
adc
mov
aad
sub
sbb
fisubl
and
mov
out
daa
fsubs
add
rorb
fiadds
xchg
mov
push
add
push
cmpsl
sbb
sbb
jae
jne
mov
xchg
push
cmc
sbb
mov
sbb
or
add
test
mov
xor
or
adc
and
jecxz
sbb
shr
xor
flds
in
pop
xor
sub
adc
and
or
sbb
push
adc
sbb
add
adc
cli
nop
pop
pusha
inc
xor
or
leave
cmp
mov
add
icebp
add
dec
test
cmpb
loope
jo
adc
xor
shlb
sbb
jmp
push
aad
mov
or
inc
test
shr
xchg
aad
addb
gs
add
mov
sub
dec
shrb
sbbb
mov
stos
dec
das
mov
lcall
orb
xchg
sbb
shlb
add
pop
xor
push
mov
out
mov
daa
out
daa
or
shlb
roll
out
pop
popf
popa
push
pop
shlb
scas
imul
sbb
loopne
addb
subb
imul
outsl
push
jecxz
adcl
nop
mov
cmp
mov
or
inc
andb
jmp
xor
insl
mov
rolb
xchg
stos
dec
push
in
mov
inc
xlat
test
inc
mov
cmp
cmp
push
cmpsl
lea
push
dec
or
inc
dec
pop
stos
je
int3
mov
sub
mov
sub
and
lods
stos
cli
out
adc
dec
jmp
dec
inc
and
lea
push
mov
lea
add
add
sub
push
ret
mov
sti
jmp
cli
stos
or
and
xor
rol
add
js
jmp
js
movsl
mov
and
add
orl
push
xlat
xor
add
cwtl
sub
test
adc
mov
adc
add
pop
je
xor
mov
adc
and
add
add
adc
movsb
push
pusha
outsl
repnz
test
insl
xor
mov
adc
push
sbb
add
dec
xchg
mov
inc
in
mov
add
test
call
lods
sub
fbld
les
jmp
jns
jnp
dec
cmpsb
or
adc
cmpsl
push
and
mov
lea
inc
pop
jo
repz
sub
xchg
inc
mov
sub
mov
sub
add
scas
xor
inc
cmpsl
cmc
dec
pop
fsubrl
sub
add
shlb
pop
stos
add
iret
add
or
and
in
or
inc
roll
push
sub
mov
and
xchg
sbb
dec
shl
popf
xor
adc
push
dec
loope
jno
sbb
xlat
jl
pop
lods
add
hlt
das
pop
pusha
sub
xor
mov
xor
fninit
pop
mov
xor
pop
pushf
fildl
popa
jae
sbb
rolb
repnz
pop
jb
pop
push
imul
xchg
jge
mov
push
mov
xchg
cmp
std
jno
aas
dec
push
sbb
insl
outsb
fldl
adc
dec
shrl
jno
lds
out
in
xorl
enter
movsl
inc
or
or
sarb
mov
inc
mov
jne
xchg
add
xchg
lahf
add
xor
roll
les
lods
orb
stos
cmc
inc
lds
xchg
add
adc
dec
in
mov
sub
fcompl
arpl
sahf
mov
imul
xor
cmp
movsb
dec
or
scas
inc
loop
test
lahf
lcall
adc
rorb
pusha
lahf
fldenv
adc
mov
in
dec
adc
inc
mov
or
loopne
std
adc
movsb
add
jno
sub
stc
fcmovu
rolb
dec
or
and
pop
mov
popa
lods
cmp
out
push
add
dec
aaa
and
mov
add
lret
adc
dec
push
mov
rclb
mov
adc
inc
add
pop
js
jne
aad
in
out
mov
add
inc
jnp
mov
lds
lcall
scas
push
ljmp
xor
mov
js
imul
shrb
sbb
rcrl
nop
pop
out
nop
lret
cmpsb
lea
mov
das
cltd
xor
sub
pop
sub
sbb
sub
iret
addr16
pop
shl
inc
icebp
loope
lea
les
add
addb
push
flds
shrl
ljmp
lea
jp
add
or
in
leave
stos
js
add
push
mov
add
xchg
stos
push
add
mov
or
movsl
ljmp
mov
add
pop
mov
iret
xchg
scas
incl
cmpsl
inc
add
sbb
or
xchg
and
jno
scas
push
dec
or
cmp
loopne
add
mov
sbb
xor
sub
subl
adc
mov
jns
or
push
dec
ret
cmp
push
pop
add
scas
and
or
divb
xor
cmp
pop
xchg
push
cwtl
int
sub
addr16
insb
pop
push
dec
mov
push
leave
add
iret
leave
leave
jo
push
mov
dec
arpl
outsl
xchg
rolb
xor
aad
in
push
push
out
or
add
addr16
bound
push
mov
mov
dec
in
jno
and
gs
and
stos
in
jnp
or
test
pop
pop
and
test
rorl
adc
mov
xchg
cmpsl
push
xor
and
pusha
aad
sub
dec
and
pop
mov
shrb
jno
mov
outsl
int
push
xchg
add
mov
in
lea
cmp
add
mov
mov
fsub
push
es
cmc
addr16
or
cmpl
pmaxsw
rolb
sub
mov
fcomps
das
pop
arpl
movsl
inc
jge
or
sub
xor
xchg
or
push
jno
push
dec
push
jbe
sbb
sbbb
mov
add
sbb
xchg
jne
or
test
inc
popa
sbb
add
bound
xchg
aaa
add
adc
ret
push
pop
aaa
dec
ficomps
int3
bound
lds
bound
xchg
sbb
or
sbb
or
or
orb
jno
push
or
jg
aad
inc
and
mov
out
repz
push
mov
add
add
mov
adc
mov
inc
mov
imul
add
fadds
jb
pop
lahf
sub
or
xchg
gs
mov
xchg
ret
cmp
mov
adc
mov
iret
push
xor
mov
jo
and
add
push
jae
les
insl
cmp
push
pop
push
push
cmp
adc
mov
jbe
je
jp
cs
and
or
or
jge
jo
inc
mov
inc
sti
cli
mov
add
movsl
inc
lcall
jmp
lcall
in
mov
xchg
cmp
add
mov
ss
add
pop
push
sbb
pop
or
push
or
movl
lea
cltd
ja
cld
loop
je
mov
movsl
cmpb
jl
push
and
push
xor
add
adc
inc
loop
adc
add
and
mov
dec
loopne
stos
gs
or
and
mov
cmp
inc
lods
sub
xchg
lcall
jne
inc
test
mov
popa
cmp
push
cmpsb
mov
loop
pop
test
aad
add
icebp
adc
out
hlt
pop
add
iret
imul
sub
mov
pop
fdivs
xchg
sub
and
int
lahf
mov
adc
jle
inc
sbb
outsl
cmp
das
shll
test
mov
cmpb
inc
cmp
cwtl
mov
aaa
rcr
xchg
or
mov
lods
popa
dec
xor
add
or
stc
sbb
lcall
adc
inc
jo
add
cmp
cs
xor
pop
sbb
and
lcall
dec
dec
es
roll
bound
mov
adc
and
andb
sub
ret
popa
addb
pusha
add
iret
jno
pusha
stos
rclb
subb
lret
mov
mov
imul
and
rorb
pop
mov
xor
sbb
cmp
xchg
mov
insb
das
sbb
dec
in
push
leave
or
int3
repz
fildll
nop
daa
and
add
addb
xchg
pop
sbb
push
ret
fisttps
cmp
shrb
adc
lea
cltd
push
sbb
test
bound
or
incl
ret
sub
popa
sub
push
or
adc
inc
arpl
inc
sub
cltd
pop
or
test
aaa
pop
pop
sub
add
mov
cmp
fcompl
pusha
xorl
dec
cmp
scas
sbbb
stos
fcoml
test
mov
dec
rcll
or
push
pop
and
add
push
xchg
cs
add
add
adcb
mov
add
mov
or
mov
sbb
inc
inc
fldt
loopne
rolb
inc
inc
popf
out
int
or
xor
pop
and
adc
xor
sbb
add
out
xor
adcb
add
test
iret
lods
sbb
xor
in
add
xchg
pop
sub
add
dec
jmp
add
push
jmp
sbb
fadd
add
add
mov
cmpsl
or
fwait
cmpsl
xlat
jmp
jp
inc
aas
adc
sbb
push
push
fadds
shl
jne
mov
je
ret
scas
inc
and
pop
out
mov
push
pop
dec
xor
cltd
nop
and
inc
shl
js
int
sub
mov
adc
mov
sub
push
and
cmp
mov
mov
faddl
addl
xor
ret
push
xor
push
pusha
sbb
rolb
roll
xchg
or
mov
inc
cmp
fst
xchg
cmp
add
mov
sbb
data16
daa
push
fabs
test
push
xlat
or
fwait
inc
sub
ds
dec
inc
add
sub
loope
jp
push
lcall
push
adc
jg
das
dec
mov
sbb
incl
adc
cs
into
ret
or
pop
mov
push
loopne
adc
xor
mov
add
add
push
leave
repz
cmpsl
cmp
adc
pop
sbb
adc
sub
dec
adc
cs
adc
push
add
dec
popa
xchg
sub
mov
add
sahf
jno
sub
mov
nop
addr16
cmp
sahf
adc
ja
scas
outsb
jmp
cltd
jg
or
inc
in
mov
les
push
and
test
jmp
jo
push
pop
jae
lds
pop
lea
push
arpl
aad
movsl
rorl
sub
sub
pop
inc
or
call
dec
inc
fstps
leave
jae
dec
pop
sbb
pop
xchg
or
les
les
mov
pop
add
insl
test
incb
add
sbb
iret
dec
mov
gs
inc
add
pop
mov
mov
xor
dec
pushf
cmp
push
jp
repz
jno
adc
add
lds
jb
pop
pop
sbb
out
pop
gs
int
mov
int
sbb
or
jne
fcomps
sbb
pop
mov
enter
pop
or
dec
jp
jbe
movsb
jns
sbb
and
dec
adc
lods
add
and
scas
arpl
mov
sbb
in
inc
inc
inc
andb
and
adc
cmp
inc
inc
add
aam
addb
addr16
xchg
dec
mov
jns
cs
jmp
fwait
test
in
ss
push
shrb
jne
je
inc
iret
cltd
add
mov
add
mull
pop
and
xchg
mov
lret
enter
dec
movsl
rolb
sbb
ret
int
adcb
ljmp
int
sub
out
decb
sbb
add
cmpsl
jnp
pop
xlat
push
and
mov
adc
pop
out
adcb
adc
dec
shrb
push
push
push
sbb
adc
add
inc
or
sbb
add
sti
cmp
dec
cmp
lods
adc
mov
lea
or
and
leave
cmpsl
push
inc
jno
sub
jne
fldcw
lods
das
mov
sbb
stos
dec
add
mov
scas
mov
push
repnz
movl
xor
lds
lods
push
cmp
jae
add
test
rcr
jo
enter
xchg
addr16
adc
adc
xor
and
es
and
mov
jno
test
cmp
push
pop
iret
cmc
or
push
addl
lret
xchg
incl
js
cli
fcmovb
stos
nop
mov
adc
sbb
pop
sbb
iret
jbe
adc
add
xor
dec
xor
loopne
test
ja
mov
jno
imul
bound
adcb
mov
repz
js
imul
stos
sbb
push
adc
rorl
and
es
push
xchg
lods
incb
mov
sub
cmpsb
mov
out
xor
add
adc
int
hlt
test
or
jecxz
rorb
std
sub
pop
pop
jns
add
jb
pop
ret
fistl
adc
adc
sub
pop
mov
adc
iret
je
cmpsb
push
es
push
insb
bound
push
out
push
mov
sub
ja,pn
popa
push
or
icebp
xor
xchg
push
jno
ljmp
adc
mov
fwait
cwtl
scas
outsb
sbb
cmp
fstl
sbb
les
mov
leave
or
rcrb
arpl
push
mov
nop
out
or
mov
jo
add
dec
xor
or
push
mov
jnp
nop
sub
dec
subl
or
xchg
filds
mov
inc
test
jg
pop
dec
adc
rorb
mov
xlat
add
test
xor
pop
rclb
mov
or
inc
jnp
cmp
and
sub
add
sub
loop
scas
repnz
pop
push
pop
sub
mov
mov
push
fsubp
adc
test
push
int
in
shrb
fsubl
cmp
add
add
sti
inc
movsb
adcl
push
mov
inc
test
test
push
mov
jp
cmp
int
fs
xor
sbb
cwtl
movsl
add
push
dec
cmp
jnp
add
dec
les
dec
sbb
cmp
lods
dec
rolb
dec
fisubrl
and
hlt
mov
push
push
aaa
jmp
sbb
cmp
add
sti
mov
push
daa
test
push
push
adc
inc
sbb
arpl
xchg
and
push
mov
sub
sbb
cmp
lods
dec
stos
jo
iret
adc
movl
and
popf
jo
jns
and
int3
and
inc
mov
push
movsb
adcl
mov
cwtl
mov
push
sbb
push
jmp
loop
shlb
stos
jae
les
xchg
inc
inc
cwtl
xchg
das
dec
sbb
addb
jnp
les
repnz
xchg
or
loope
lcall
cs
xchg
or
push
xor
inc
adc
inc
adc
add
add
enter
adc
mov
movsl
lret
fwait
adc
add
pop
push
sub
xor
adc
adc
sbb
rorb
and
add
mov
xor
sub
xor
sbb
inc
jno
mov
push
mov
cmp
add
or
mov
or
or
sbb
stc
repz
or
or
dec
lods
and
and
rcll
mov
inc
rolb
sbb
sbb
mov
stc
adc
adc
aam
and
sub
xor
add
stos
data16
adc
arpl
gs
jbe
push
test
add
cmp
mov
adc
scas
iret
and
inc
enter
leave
out
sbb
or
subb
pop
sarb
xor
aam
sbb
inc
nop
inc
clc
or
cmpsl
mov
xlat
nop
cmp
xor
es
ret
aaa
ror
xor
xor
pop
jnp
adc
es
push
add
or
in
and
mov
add
jmp
dec
bound
jb
in
or
push
inc
adc
or
rcll
xchg
aad
dec
add
stos
jo
inc
dec
pop
xchg
sub
lea
stc
add
lods
test
xchg
rclb
scas
push
test
andl
iret
add
add
flds
cwtl
xor
stos
add
dec
adc
andl
xchg
or
xchg
andb
xchg
pop
clc
jnp
pop
jecxz
inc
pushf
adc
adc
or
test
leave
inc
sahf
movsl
push
andb
adc
cmpsb
pop
mov
bound
test
xchg
xorb
int3
cli
and
xorb
pop
inc
and
stos
push
add
fdivrl
mov
adc
jo
add
xchg
aad
pushf
mov
push
xlat
or
pushf
in
push
jno
outsl
adc
cmp
test
sub
sti
add
test
jle
aad
sbb
jae
ret
mov
test
or
push
dec
mov
push
push
lods
sub
or
inc
add
repnz
test
popf
mov
shrl
outsb
dec
sbb
xchg
in
mov
orb
push
out
add
xchg
add
imul
sub
sub
and
mov
cmpsb
add
mov
mov
mov
adc
and
cmp
ljmp
lods
mov
sbb
xchg
addr16
nop
es
les
push
push
inc
cmpsl
inc
pop
add
or
loop
xlat
mov
test
mov
push
cmpxchg
mov
inc
fstl
std
adcl
or
nop
or
adc
inc
push
push
loopne
mov
ret
or
loope
mov
cmpsb
fsubl
mov
inc
or
xchg
xchg
push
sbb
mov
and
push
rorl
mov
jb
mov
fwait
mov
push
movsb
popf
test
and
test
xchg
ret
pop
mov
sbb
push
pop
subb
pusha
addr16
mov
sub
mov
add
add
xchg
push
jecxz
add
inc
out
pop
leave
mov
mov
add
dec
repz
test
shlb
dec
mov
leave
xchg
sbb
sti
jp
xchg
and
mov
jmp
inc
cmp
test
add
or
mov
leave
les
push
pop
mov
mov
test
stos
add
sub
add
pop
je
adc
jb
and
scas
insl
xchg
shlb
cwtl
ljmp
cmp
xchg
fistps
stos
lds
test
rolb
add
je
inc
adc
inc
punpckhdq
or
pop
mov
sbb
push
and
mov
dec
jmp
mov
aad
dec
sbb
daa
inc
aam
xchg
xchg
rorl
xchg
xchg
mov
movsb
pusha
and
and
inc
pop
arpl
sub
and
repnz
repz
loopne
rolb
and
inc
popf
movsl
nop
ret
xor
das
test
imul
mov
orb
nop
cmp
mov
add
cmpsl
cmp
sbb
lahf
fsubl
push
adc
adc
cmova
mov
addr16
push
push
rcl
add
nop
rcll
dec
mov
xor
push
xor
adc
popa
and
sbb
sarb
xor
add
into
add
dec
pop
push
fdivrs
mov
adc
or
sub
and
and
and
jns
adc
push
dec
js
pop
adc
fbstp
fnsave
push
mov
mov
pop
sbb
or
or
add
xchg
mov
or
adc
or
push
cltd
or
repz
fstpl
sub
lret
sub
pusha
dec
lcall
xor
jne
fildl
xor
inc
mov
call
jb
lds
dec
mov
arpl
loope
loope
or
xchg
inc
movsl
add
mov
sub
or
jmp
testl
je
xor
sti
push
roll
loopne
int3
sub
xor
mov
lods
repnz
es
mov
dec
or
out
and
jo
add
add
inc
pop
add
push
push
stc
and
ret
add
xor
add
dec
pusha
dec
cmp
out
cmpb
repnz
sbb
mov
test
sbb
pop
and
or
adc
neg
stos
arpl
rorb
movsb
cmp
test
sub
pop
sbb
xor
in
sub
test
sbb
stc
or
movb
mov
add
rorb
addr16
sbb
xchg
push
test
xchg
stos
addb
add
mov
icebp
inc
mov
sbb
fbld
add
orb
adc
repz
pop
je
inc
inc
dec
sbb
or
icebp
or
fimuls
mov
push
inc
push
in
or
leave
inc
insb
add
repz
dec
push
and
mov
xor
movsb
xchg
arpl
xchg
adc
cmpps
ror
jne
pop
nop
jo
jb
fcoml
movsb
push
es
pusha
push
and
add
rolb
int
rolb
loopne
loopne
xor
out
mov
pop
int
jmp
cmp
int
sub
xchg
inc
cmp
xor
inc
and
xchg
mov
test
cmc
xor
sar
stos
add
mov
and
int
orb
std
pop
or
adc
mov
cmp
xchg
das
xchg
jnp
sub
nop
out
adc
jb
cmpsb
out
push
and
mov
mov
test
test
iret
inc
push
add
cmp
and
xor
mov
jmp
cmp
jae
xchg
mov
adc
in
mov
xor
ds
pusha
call
fadds
xchg
adc
dec
pop
adc
and
sub
rolb
adc
arpl
inc
mov
and
addr16
mov
add
add
inc
mov
add
adc
cmp
loope
add
cmp
jb
aad
lea
dec
lret
inc
adc
jae
add
and
iret
loope
or
adc
scas
dec
sbb
jecxz
pop
out
pusha
mov
xlat
pop
cmpsb
sub
dec
rolb
jbe
clc
xchg
mov
pop
inc
insl
add
xlat
add
mov
cmp
jmp
xlat
mov
jo
xor
push
adc
add
adc
jno
adc
dec
imull
flds
mov
xchg
push
shrb
mov
pop
and
js
adc
cs
add
and
jne
and
xchg
sbbb
gs
mov
xchg
mov
mov
shlb
add
jns
add
jae
xor
popf
add
jno
call
adc
push
ja
mov
add
add
aam
or
add
or
and
add
leave
int3
dec
cmp
or
adcl
push
test
mov
fisttpl
add
push
add
push
movb
mov
call
loope
decl
cmpb
xor
jo
rolb
jo
jmp
mov
sbb
in
pop
orb
push
rol
mov
xchg
outsb
xchg
and
lds
arpl
arpl
inc
xor
arpl
les
out
jne
or
ret
xchg
inc
push
mov
mov
xor
das
pop
dec
bound
mov
stc
test
xchg
aad
push
inc
add
jo
lcall
add
jnp
mov
inc
pop
int3
mov
or
inc
lds
sbb
push
push
sbb
mov
sub
push
or
lea
push
pop
pop
insb
sbb
jne
mov
xchg
cmp
push
dec
push
jecxz,pn
jno
gs
insl
jo
inc
sbbb
test
adc
clc
lcall
addl
into
inc
sbb
jns
mov
sub
stos
enter
jbe
pop
cmc
subb
xchg
dec
inc
aas
lea
loope
lock
mov
xchg
sub
pop
xchg
clc
lods
mov
xchg
xchg
arpl
leave
repz
imul
xor
sbbl
xor
subb
adc
jo
jne
mov
jnp
scas
sub
repz
rcr
repnz
xor
adc
mov
dec
or
sub
rcrb
or
or
mov
push
orl
xchg
adc
andl
dec
orl
shrb
mov
fwait
aad
popf
je
sbb
fs
xlat
test
das
dec
xchg
jno
mov
jmp
sbb
add
dec
sub
push
mov
test
xchg
adc
popa
add
iret
add
sbb
add
mov
push
xchg
pop
pop
repnz
pop
pop
outsl
mov
cmp
inc
inc
dec
xor
and
and
add
sbb
mov
fidivrl
mov
enter
jns
inc
pop
loope
loopne
jno
jg
mov
pop
push
or
test
push
lret
inc
push
adc
jp
xor
test
mov
mov
fistpll
mov
mov
jecxz
push
test
xor
arpl
and
adc
outsb
repnz
cmp
rcrb
push
test
test
pop
icebp
lret
add
and
xor
ret
iret
sub
mov
mov
enter
or
mov
jno
push
jo
or
push
dec
lcall
mov
adcl
arpl
out
inc
add
fists
stos
mov
mov
xchg
lea
int
cmp
loopne
xor
dec
test
lea
push
inc
arpl
cmp
and
cmp
adc
pop
xor
cmpsb
adc
test
std
inc
imul
jl
mov
and
rclb
cmpsb
push
xchg
push
in
incb
push
or
repz
daa
orb
mov
or
lret
nop
mov
mov
and
dec
inc
inc
and
iret
and
popa
xor
repnz
stos
pop
adc
sbb
cmp
pop
ret
add
sub
lea
pop
cmp
adc
mov
shrl
outsl
arpl
js
scas
arpl
sbb
jle
enter
add
out
xor
cmp
rorl
inc
or
xor
dec
push
aas
or
or
loopne
dec
pop
rorb
pop
mov
sbb
and
add
or
sbb
fcompl
add
inc
arpl
adc
mov
adcl
scas
xor
inc
add
in
shll
test
or
or
jmp
jecxz
mov
mov
lret
add
adc
pop
shlb
pop
pop
hlt
and
std
ret
imul
adc
xor
pop
inc
pop
dec
inc
loopne
xor
stos
nop
cmp
add
inc
pop
imul
push
push
adc
cmp
data16
je
sahf
or
cltd
and
mov
faddl
ret
bound
add
adc
xchg
lods
mov
flds
push
test
inc
repz
push
nop
mov
jae
dec
adc
jp
pusha
orb
mov
popa
sbb
inc
sahf
sub
test
test
inc
push
adc
or
in
jae
sbb
xchg
pop
pop
stos
adc
mov
xchg
cmp
aam
pop
enter
test
inc
add
les
mov
pop
adc
enter
fistps
push
in
or
sbb
push
les
xchg
out
add
sub
addb
pop
data16
nop
andl
sbb
push
and
push
inc
sub
add
cwtl
test
sahf
lret
imul
rolb
jno
out
jmp
jo
cmp
push
pop
xor
sub
int
and
mov
and
pop
and
or
push
and
xchg
push
xor
sbb
xorb
test
cmp
inc
loope
pop
adc
push
push
leave
repz
dec
add
jae
or
lcall
push
dec
pop
js
imul
lret
les
je
adc
inc
cmp
cmp
xor
push
inc
mov
shll
je
mov
addl
test
nop/reserved
add
and
sbbb
pop
push
popf
shlb
aam
dec
and
in
add
adc
adc
loope
lahf
mov
cmpsb
or
lcall
mov
jo
rcll
stos
inc
loopne
push
add
ret
push
enter
pusha
lret
dec
inc
pop
or
adc
int
ret
inc
dec
sub
add
movsl
lds
je
jnp
or
pop
pop
adc
push
in
sbb
or
adc
sub
dec
inc
or
xchg
dec
sbb
pop
cmp
inc
icebp
push
daa
add
dec
les
dec
xor
inc
adc
loopne
lsl
mov
and
int
and
addb
data16
inc
loope
roll
adc
sbb
adc
adc
and
popa
roll
jmp
lret
arpl
xchg
xchg
iret
jecxz
or
cmp
xor
mov
xor
or
inc
stc
in
and
ljmp
sbb
and
std
push
jo
inc
or
xor
ficompl
mov
movsl
pop
les
out
scas
xchg
pop
add
cmpl
xlat
pop
add
movb
adc
xor
mov
jno
push
fadd
mov
xchg
je
ret
push
mov
xor
xor
or
jne
and
dec
or
cmp
xchg
and
jp
movsl
cmpb
jg
mov
dec
xchg
mov
push
push
and
push
xlat
dec
dec
push
ret
roll
sbb
test
cmpl
cmp
push
dec
adc
mov
ds
sbb
nop
push
sbb
imul
fs
xor
xchg
mov
in
arpl
cmp
jae
loop
adc
and
subb
nop
cmc
mov
mov
add
jne
xorb
mov
dec
mov
adcb
test
imul
mov
int3
xchg
pusha
add
xor
push
inc
sub
push
adcl
inc
push
cmpsb
jno
xor
sbb
push
roll
and
ss
inc
xlat
test
mov
mov
mov
sbb
clc
daa
xchg
cmp
stc
sbb
add
cs
sbb
mov
je
cmp
or
out
add
cmp
mov
sarb
cli
cmp
iret
mov
mov
cwtl
popa
ror
and
cmp
jo
inc
stos
adc
push
ja
daa
jo
mov
pop
push
fldl
inc
jo
mov
dec
mov
mov
aam
mov
movsl
jne
adc
flds
xor
pop
inc
jp
ret
pop
mov
and
pop
adc
imul
add
and
xorb
sub
and
cmpsl
push
cmp
push
and
lds
aaa
out
mov
out
and
sbb
sbb
xor
add
mov
adc
pop
shrb
push
adc
inc
push
sub
test
mov
pop
push
adc
sbb
xchg
jo
inc
test
push
lcall
push
xorl
xor
stc
dec
or
les
dec
int
mov
mov
cmpsb
mov
push
xor
lods
cmp
out
add
pusha
xchg
outsl
incb
sbb
pop
mov
ja
test
sbb
ret
mov
mov
add
sub
and
test
movsb
add
or
arpl
dec
and
mov
push
int3
mov
and
add
das
cli
fsts
scas
sbb
into
dec
mov
cmc
inc
mov
in
pop
mov
loopne
xchg
sub
mov
push
inc
push
add
gs
and
mov
repz
and
daa
mov
hlt
add
ss
mov
push
and
push
ret
jne
ret
rorb
imul
cs
xor
dec
sbb
dec
in
shll
pop
shlb
sub
add
push
lret
mov
inc
or
xor
push
je
dec
dec
sbb
popa
xchg
and
pusha
scas
dec
mov
xchg
pop
loopne
inc
es
pop
jnp
xchg
test
inc
add
lea
adc
cmpsb
sbb
mov
add
clc
test
or
scas
xchg
adc
add
mov
sbb
ret
insb
sub
test
add
pop
jne
jns
pop
insl
ret
js
outsb
pop
and
inc
add
pop
add
dec
push
pushf
push
lcall
dec
xor
scas
mov
push
pop
enter
pop
dec
add
push
test
pop
adc
adc
push
fwait
in
lods
mov
add
jns
ss
mov
pop
je
stos
jno
push
jo
cmpb
insl
rorl
lret
popa
cmp
adc
out
imulb
sbb
std
or
aaa
and
test
daa
jb
in
cwtl
add
stos
dec
adc
insl
add
imul
arpl
jae
push
xor
rorl
inc
pop
adc
mov
mov
or
mov
in
or
sahf
lcall
sbb
ja
mov
add
mov
pop
add
fstl
xor
sbb
mov
int3
addr16
mov
fadds
cmp
cmp
xor
add
adc
push
cmp
inc
daa
push
jb
and
cmpsb
sub
arpl
jmp
mov
popa
or
sbb
ljmp
popf
adc
xchg
int3
add
loopne
cwtl
punpcklbw
sub
xor
xchg
pop
jno
out
rorb
pop
mov
and
inc
int
stos
push
jnp
and
popf
sbb
mov
mov
add
loope
lea
test
add
addl
test
insl
aam
out
aad
cs
rcrb
add
pop
cmpsl
insb
adcb
mov
lahf
dec
loop
shrb
mov
mov
in
mov
mov
jecxz
add
push
int
push
dec
or
nopl
sbb
insb
addr16
mov
cmpl
mov
push
add
sahf
in
mov
or
sbb
movsl
xor
dec
mov
jecxz
pusha
test
pusha
fnstenv
adc
adc
adc
jmp
in
pushf
xchg
test
sbb
test
shlb
pop
adcl
scas
stos
add
ret
jle
mov
jnp
add
pop
rcr
push
and
ljmp
in
sbb
pop
rorl
xor
inc
or
jns
rolb
addl
mov
or
push
mov
inc
inc
push
adc
xchg
addl
pop
and
xchg
pop
add
or
adc
outsb
loope
imul
add
mov
sub
push
dec
or
add
push
add
xlat
mov
addb
or
mov
xor
sbb
push
mov
inc
adc
mov
inc
testl
mov
test
repnz
sbb
or
add
xor
push
adc
or
add
pushf
in
inc
adc
push
dec
push
inc
add
jb
add
push
inc
inc
addl
add
push
nop
cmp
popf
or
pop
pop
xchg
sti
add
add
test
cmpsb
test
cmp
mov
dec
cmp
xchg
daa
lea
rolb
daa
mov
std
mov
lods
in
jne
inc
xor
push
jmp
and
pop
sub
cmp
dec
fisttps
pusha
mov
or
xor
add
test
add
insl
add
test
cs
maskmovq
testl
push
and
lds
sub
inc
pusha
stos
xor
jo
rorl
arpl
sub
sbb
push
inc
mov
popf
dec
add
xchg
jne
pop
leave
or
push
pop
lds
jno
xor
dec
testl
sbb
ret
je
add
xchg
and
mov
pop
popa
push
jns
sbb
xor
xchg
setne
int
add
lods
push
negb
and
mov
dec
mov
add
add
scas
mov
jno
adc
add
add
xchg
and
cltd
out
xchg
out
pop
sbb
int
cmp
sar
scas
add
xchg
std
add
pop
adc
test
mov
nop
jno
mov
adc
push
fistpll
add
ljmp
adcb
or
sbb
stos
ja
and
add
das
adc
add
sbb
mov
inc
pop
das
negl
push
test
lds
ret
push
xor
data16
pusha
les
add
nop
xchg
pop
fisttpll
lahf
pop
mov
or
and
mov
sbb
popa
sub
xchg
and
loopne
or
enter
mov
adc
pop
mov
mov
mov
or
jmp
push
push
push
iret
shrl
popl
add
push
add
pop
inc
imul
add
aas
mov
sbb
cwtl
gs
adcl
sbb
test
icebp
cmp
mov
and
sub
jne
sub
adc
repnz
icebp
rcrb
sub
push
and
nop
adcb
lret
push
cltd
repnz
xor
xchg
or
pop
aad
jo
sub
sbb
fadd
js
insl
test
and
inc
fistl
push
test
int3
and
inc
inc
cmc
or
adc
mov
pop
push
or
fs
jmp
jnp
icebp
add
add
mov
inc
or
sbb
adc
jnp
and
lds
daa
push
and
xchg
or
xor
inc
test
sbbl
shlb
or
cmp
adc
fdivs
dec
adcb
jl
fstpl
inc
inc
sarb
rolb
sarl
xor
and
in
jae
ret
lret
icebp
inc
and
or
sbb
mov
je
mov
inc
and
js
pusha
add
js
sbb
add
or
bnd
jae
mov
test
cmp
fidivrl
leave
data16
xchg
mov
daa
mov
enter
xor
xchg
sbb
mov
mov
addr16
cmp
mov
mov
mov
pop
aaa
xor
inc
fs
xorb
adc
push
and
dec
movsb
pusha
pop
inc
xor
inc
jno
lahf
and
mull
lcall
mov
icebp
add
bound
mov
dec
adc
mov
cmp
add
je
imul
scas
stc
imul
popa
mov
push
cwtl
cs
outsl
jge
xor
pop
int
daa
cmp
push
xchg
add
and
dec
orl
pusha
cmp
or
mov
leave
je
les
orb
mov
pop
je
in
xor
aas
xor
sbb
push
xchg
adc
lea
sbb
push
adc
xchg
sbb
xor
adcb
orb
adc
push
xorl
add
and
test
sbb
addr16
adc
cwtl
pop
xchg
jne
stos
mov
adc
or
add
inc
sbb
xor
ljmp
mov
inc
xor
xchg
inc
mov
popa
mov
add
mov
test
xor
roll
in
lret
lock
aad
dec
mov
mov
cmp
sbb
mov
dec
adc
out
adc
pop
iret
adc
cs
rcll
cmpsb
into
sbb
push
push
add
arpl
mov
pop
stos
sub
cmp
xor
pop
cmp
mov
aad
xor
cli
iret
stos
adc
inc
jae
xchg
jo
pop
mov
jge
or
lods
and
mov
add
dec
in
sub
mov
adc
fisubs
dec
movl
movl
cltd
adc
rcl
insl
adc
int
add
inc
and
je
jne
pop
notl
leave
dec
test
pop
dec
mov
cld
push
cmp
push
push
inc
or
xchg
cmp
adc
inc
mov
pop
rep
pop
das
mov
xor
push
dec
sub
or
movsb
xor
or
jmp
std
cmc
inc
xor
ss
stos
mov
add
xchg
dec
dec
adc
push
adc
mov
inc
sbb
or
xchg
loope
add
push
cmc
sbb
bound
sbb
adc
test
push
sub
nop
sbb
nop
mov
jmp
pop
repz
and
shlb
dec
push
popf
pop
rcl
and
stos
add
jo
add
imul
add
in
movsb
fwait
xchg
ljmp
add
jg
adc
stos
xorl
push
cmpb
push
push
loope
xor
dec
lea
ret
xchg
andl
out
add
stos
mov
and
movsl
adc
or
cwtl
lods
jns
xor
rol
sbb
add
lcall
dec
pusha
rolb
pop
int
lock
mov
and
push
aad
stc
fistl
sahf
pop
insl
pusha
loopne
outsb
mov
data16
dec
loopne
lcall
xchg
imul
dec
and
test
xchg
inc
movsb
cmc
jnp
adcl
xor
ja
push
add
loopne
movsl
add
add
dec
add
and
and
mov
shll
jmp
add
inc
mov
and
add
xchg
cmp
ret
lods
addb
test
jae
or
jmp
xchg
dec
add
push
add
scas
mov
bound
add
add
movsb
mov
leave
loop
dec
jle
and
rclb
push
adc
inc
pop
push
sbb
push
inc
shll
stc
push
pop
dec
or
add
sub
or
mov
mov
dec
mov
aas
loop
adc
js
nop
cs
dec
std
xchg
dec
cmpl
sbbb
sub
mov
sbb
mov
pusha
bound
aam
test
pushf
stos
test
lret
xor
stos
push
or
ret
and
subb
mov
mov
lahf
pusha
orb
and
subl
daa
jmp
adc
rorl
movsb
mov
sub
jmp
iret
hlt
mov
xchg
xchg
pop
je
jno
je
fistpl
dec
mov
mov
shrb
mov
fs
inc
pop
adc
mov
es
push
mov
nop
out
les
orl
cmpsb
xchg
out
cwtl
jno
sbb
stos
pop
bound
mov
pop
and
inc
imul
gs
push
es
shrb
lock
pop
inc
sbb
xor
push
in
push
add
rorl
sbb
sbb
mov
popa
xorb
bound
adc
inc
insb
inc
and
sbb
pop
xor
mov
mov
xorb
dec
inc
inc
dec
dec
push
mov
jne
xchg
cltd
pop
fistps
leave
add
imul
inc
aad
cmp
loopne
scas
mov
out
and
ss
stc
push
rorb
push
dec
inc
push
dec
add
mov
sub
push
adc
dec
adc
icebp
sbb
mov
sbb
imul
and
push
mov
mov
xchg
push
rcrb
or
and
dec
mov
inc
xor
sub
sti
push
xor
mov
xchg
add
or
scas
pop
adc
add
outsb
leave
add
sahf
inc
sbb
cwtl
loop
pop
push
adc
xchg
pop
and
cmc
adc
add
lahf
inc
mov
imul
icebp
dec
push
sub
sbb
xchg
adc
sar
dec
roll
test
aas
gs
sub
adc
pop
ret
push
push
movsl
dec
inc
inc
bound
push
rorl
ss
push
inc
mov
test
sbbl
adc
test
jl
mov
movb
add
or
jecxz
inc
xchg
lahf
cmp
xchg
mov
push
push
shrb
push
test
sub
push
test
stos
xor
add
mov
dec
add
push
stos
fildl
popf
daa
inc
repnz
inc
les
lods
inc
add
inc
inc
or
jl
cld
add
add
nop
imul
popa
add
xchg
cmp
and
jno
notb
or
or
jo
addb
inc
cmpsl
mov
add
sub
stos
les
add
push
inc
inc
and
cmpsb
movsb
xor
and
gs
push
cwtl
mov
imul
and
lea
adc
movsl
or
jle
add
scas
insl
add
add
pop
sti
sbb
mov
outsb
subb
and
adc
shlb
pop
inc
push
xlat
dec
or
lods
leave
mov
dec
inc
or
xchg
adc
popf
adcb
sub
push
mov
sub
add
xlat
mov
addb
movsb
jnp
data16
ret
add
imul
addr16
popa
int3
ds
pop
add
dec
lcall
addr16
add
inc
mov
sahf
xchg
jae
or
ljmp
pop
xor
fwait
outsb
and
dec
hlt
test
enter
sub
xchg
or
bound
stos
xchg
sbb
jne
stc
scas
fwait
movb
inc
mov
dec
jecxz
sub
pop
sub
add
and
or
xor
dec
xor
dec
sbb
add
dec
cwtl
movsl
xlat
subl
arpl
sbbb
inc
jmp
inc
sub
add
imul
inc
test
les
setle
mov
add
sbb
mov
pop
mov
push
cltd
xor
inc
sahf
adc
xchg
aad
movsb
inc
sahf
and
xor
add
mov
add
int
mov
in
jge
add
lods
add
cmp
cmp
rolb
addl
rcrb
add
add
lret
inc
jne
push
mov
dec
outsb
dec
out
push
test
enter
pop
sub
pusha
push
xor
loope
xorb
xchg
push
jle
dec
push
push
test
addb
lret
push
jecxz
daa
int
stos
pop
pop
dec
adc
pop
pop
les
mov
mov
test
jne
ljmp
mov
adc
data16
jle
lds
cmp
pop
lods
jnp
and
and
or
arpl
shlb
jae
or
loope
sbb
xor
sbb
xor
dec
loopne
add
sub
stos
sbb
xor
adc
addr16
xor
popa
aad
mov
aam
aam
pop
push
nop
into
ror
mov
xor
ss
xchg
shlb
adc
les
adc
and
dec
or
loope
xchg
shll
sbb
js
aas
add
push
jb
cli
mov
pushf
mov
test
adc
pop
aam
ror
test
and
sbb
movsb
lret
push
xchg
fsubrl
mov
and
adc
sbb
mov
imul
lret
pusha
xor
cmc
lret
push
fisttpl
jne
xchg
or
jo
inc
in
rolb
adc
aam
and
mov
pushf
sbb
hlt
inc
subl
rorb
and
movb
ret
subl
icebp
insl
cmp
dec
push
test
add
pop
sahf
pop
xor
add
popa
add
adc
xor
test
adc
insb
bound
add
sub
push
shll
push
sub
cmp
movb
inc
insl
repz
adcb
xchg
mov
fstl
push
push
stos
push
jne
ffreep
icebp
aas
add
mov
mov
aad
pop
push
jmp
jno
sbbl
ret
fcmovu
leave
pop
dec
xor
xor
xor
daa
das
insl
mov
lea
mov
jmp
sub
add
xor
pop
mov
xlat
mov
icebp
int3
sbb
loopne
pop
xor
inc
sub
mov
inc
xor
arpl
inc
sub
mov
sbb
dec
bound
push
daa
hlt
dec
test
sub
cwtl
out
lea
in
adc
or
add
sbb
or
mov
and
xchg
scas
andb
push
add
scas
test
sbb
test
loope
or
addb
popa
adc
push
inc
subb
add
out
les
cmpsl
xorb
adc
mov
add
xor
lahf
scas
loop
subb
mov
or
lods
aad
or
jmp
sub
stos
inc
pusha
lahf
or
jp
movsl
stos
or
push
mov
repz
cmp
adc
out
push
insb
rolb
rolb
dec
add
sbbl
jg
std
cli
inc
pop
xorl
add
mov
imul
loop
rolb
cwtl
pushf
xor
lcall
push
or
sub
orl
cmpsl
xlat
mov
adc
pop
xlat
push
rcrl
addr16
js
push
movsb
pop
fisttpl
xchg
in
mov
jne
sub
add
adc
cltd
cmp
sbb
xchg
out
in
je
loope
xor
adc
insb
adc
add
mov
adc
add
test
in
je
pop
je
mov
mov
inc
xchg
insb
mov
sub
xor
mov
xor
inc
mov
dec
jns
push
push
push
or
insb
push
lock
test
adc
out
jae
push
pop
pop
xchg
neg
inc
leave
jae
jmp
dec
pop
frstor
loope
xchg
roll
push
ret
lret
sti
push
sbb
pop
dec
ret
add
push
inc
inc
repnz
jge
inc
add
cmp
jecxz
mov
push
adc
and
dec
xor
les
pop
add
mov
and
mov
sub
clc
xor
mov
lret
test
mov
adc
in
icebp
push
push
add
xchg
dec
and
daa
adc
es
cmp
sbb
pusha
daa
add
es
dec
mov
movsb
mov
or
push
pop
sbb
xchg
fisttps
xor
loopne
add
cld
push
daa
add
add
inc
pop
rcl
ret
pop
sub
mov
test
in
push
inc
loopne
stos
sbb
jne
xsha256
cmpsb
push
sahf
in
add
lcall
test
mov
fnstenv
mov
ja
aad
sbb
mov
pop
dec
pop
orl
inc
or
xchg
pop
std
xor
xchg
lea
push
stos
adc
push
das
mov
inc
mull
or
cmp
or
orb
out
arpl
adc
leave
mov
xchg
mov
sbb
adc
mov
xor
dec
mov
mov
subb
push
loop
ljmp
xor
xor
test
sub
shlb
jo
add
and
add
iret
pop
jl
scas
subl
sti
or
add
add
insl
popa
inc
pop
lea
mov
mov
sub
sbb
stos
add
outsb
or
mov
push
aaa
push
add
bound
dec
test
je
inc
inc
push
sbb
or
and
inc
xorl
outsl
out
les
add
sbb
cmp
das
outsl
sub
add
je
mov
or
mov
movsl
or
xchg
or
dec
repnz
xlat
test
iret
jnp
roll
dec
icebp
jns
or
dec
sahf
dec
jno
mov
or
loopne
adc
std
xor
mov
inc
sti
sbb
mov
mov
mov
push
cs
jle
xor
addr16
sub
clc
lahf
adc
push
cltd
imul
mov
add
mov
dec
jae
popl
xor
mov
mov
fs
nop
out
xor
xchg
push
push
dec
lret
cmp
cwtl
ljmp
xor
and
sub
test
push
inc
adc
xchg
add
or
adcl
popa
daa
cs
pop
sbb
xor
pusha
lcall
pop
sbb
mov
push
xchg
pop
aam
mov
inc
xchg
xlat
inc
mov
inc
and
jae
andb
test
std
das
movsl
jmp
sub
adc
and
sldt
fsubl
lds
leave
xchg
push
imul
mov
inc
dec
nop
pop
add
shll
nop
sbb
xchg
or
nop
fisttps
inc
fildll
cmp
aad
or
test
add
pop
dec
pop
add
add
mov
xor
xlat
movb
fnstsw
cmpsl
sub
push
and
mov
and
jnp
sbb
mov
es
out
push
add
mov
sbb
cs
outsb
push
xchg
adc
arpl
and
cmp
sbb
test
adc
jo
adc
lcall
push
movsb
mov
sub
data16
repnz
sub
sahf
lods
dec
or
iret
rorl
add
sahf
into
roll
xor
add
add
cmp
test
movsl
dec
xor
sarb
in
mov
movsl
lcall
cs
cs
sbb
fldt
dec
test
adc
adc
dec
jnp
sub
add
mov
and
push
addr16
or
insl
sub
jae
xchg
into
and
stos
xchg
xchg
push
bound
sub
in
sub
sub
bound
orb
test
adc
movsl
adc
mov
roll
mov
mov
cmpsl
xchg
stos
or
push
into
or
int
xchg
push
mov
sub
subb
mov
loop
loopne
mov
xor
popf
sbb
aam
mov
cmp
inc
adc
and
adc
add
pop
mov
test
sub
adc
inc
add
sub
cmpsl
mov
rol
jmp
mov
iret
xchg
adc
nop
add
loopne
push
inc
sahf
outsl
or
cmc
inc
int
lods
add
outsl
movsb
mov
add
mov
popf
sbb
xchg
xchg
sbb
pop
push
loope
movb
cmpsl
sbb
pop
lcall
and
sbb
ret
xchg
or
adc
sub
inc
cs
add
add
les
inc
gs
mov
xchg
popf
add
mov
push
fisubrs
mov
faddp
push
add
mov
push
jne
ja
push
test
jo
jns
movsb
inc
sbb
and
in
push
loop
mov
mov
or
adc
push
mov
cltd
pop
xor
les
lret
jno
and
daa
jne
ss
and
inc
lods
and
add
xor
cmp
push
nop
data16
mov
pop
mov
int
pop
lods
inc
or
add
cmpl
ss
movsb
lods
lcall
add
sub
test
pop
cmp
lcall
jecxz
adcb
mov
shlb
add
pop
arpl
mov
jno
cmpsl
mov
cmpsb
loope
andl
xor
sbb
or
jns
pop
or
pop
mov
push
rorb
cmp
adc
xchg
add
add
insl
push
mov
mov
cmp
stos
shlb
xchg
sarb
add
pop
sbb
jo
les
sbb
add
jne
fwait
xor
add
push
xor
les
fs
loop
jo
popa
xchg
or
popf
mov
ficoms
add
pop
cmpsl
mov
mov
cmp
add
inc
ret
inc
or
cmpb
addr16
mov
pop
dec
or
je
sbb
xchg
fs
push
leave
mov
or
mov
xchg
fisubs
jno
inc
test
push
in
iret
jae
orb
imul
std
and
inc
or
jbe
cmpsb
or
sarb
push
lds
fwait
pop
xchg
jmp
or
sbb
mov
adc
or
mov
xchg
addr16
xchg
aam
or
movsb
aad
roll
xorb
in
mull
inc
orl
sbb
and
ficomps
cmp
pop
js
sar
inc
dec
adc
mov
add
inc
pop
inc
jb
addb
sahf
jle
dec
sbb
sbb
xor
rcll
xor
inc
cmpsl
sbb
imul
das
pop
or
fstps
xchg
in
pop
add
push
add
addl
push
xor
inc
cmp
int
outsl
dec
repz
add
mov
inc
add
test
test
jo
cmp
adc
inc
fsubs
pop
aad
ljmp
pop
xorb
jmp
test
and
loopne
sbb
dec
sub
imul
jns
mov
cmp
or
xchg
outsl
shlb
stos
leave
bound
cmp
mov
leave
js
pusha
stos
push
push
stc
inc
and
das
add
cmp
jo,pt
pop
push
or
scas
add
xchg
or
leave
pop
add
push
mov
loope
hlt
add
ret
bound
xchg
xchg
imul
cmp
sbb
adc
adc
sbb
jae
insl
jecxz
or
pop
and
or
fstl
rcll
stc
adc
add
inc
dec
std
sbbb
loop
xchg
xor
ret
daa
scas
and
imul
mov
pop
fst
inc
jmp
xor
cmp
hlt
in
push
xchg
push
test
sbb
mov
nop
movsb
dec
cmpsl
inc
pop
lods
mov
test
std
mov
cmp
dec
add
popa
sbb
roll
add
mov
add
movsl
or
cmpsb
sbb
xor
rcl
sub
or
pusha
jno
ja
mov
andb
sbb
lock
mov
shll
adc
subl
or
std
imull
add
adc
call
mov
out
push
sub
rorl
test
scas
inc
out
stos
das
jp
and
cmpsb
push
dec
mov
shll
mov
addr16
nop
xor
sbb
movb
cmpsl
test
mov
imul
in
aaa
push
pop
or
popa
lds
fnclex
jecxz
cmpsb
push
jecxz
roll
enter
scas
out
xor
nop
imul
inc
xchg
sbbl
push
jno
fwait
push
jbe
mov
dec
cmpsl
xor
push
sbb
xchg
ret
decb
loop
push
in
push
iret
push
add
cmp
jle
sbb
sub
xor
jmp
xorb
jnp
adc
add
dec
lcall
xor
push
or
sarl
loop
cmpl
jle
push
repnz
xchg
mov
xor
outsl
add
mov
stos
adc
rep
lahf
inc
pop
push
test
pop
dec
and
js
and
pop
jb
mov
add
or
xor
push
mov
imul
add
ss
fsubrs
je
mov
mov
inc
mov
mov
sbb
loop
adcb
mov
stos
inc
cmp
xlat
inc
pop
fbstp
push
cwtl
andl
stos
leave
flds
mov
leave
mov
mov
or
sub
pop
adc
mov
cwtl
inc
and
sub
imul
dec
cmpsb
xor
jmp
movb
push
add
sub
pusha
inc
pop
cmpsb
inc
push
mov
les
dec
aaa
popa
and
adc
cmp
pusha
pop
push
fwait
dec
or
or
xchg
and
inc
lods
movsb
add
cmp
aas
sbb
push
aaa
lea
loop
mov
adc
dec
scas
imul
dec
mov
nop
inc
inc
in
or
inc
push
iret
inc
adc
fcoml
dec
sahf
push
bound
subb
fisubl
jns
lahf
testb
and
push
jge
pop
xorb
adc
adc
xchg
sarb
jecxz
fst
sbb
inc
jg
mov
sub
movsb
add
mov
xlat
inc
pop
or
dec
pop
addl
loopne
inc
andps
mov
loopne
dec
or
push
outsl
jnp
mov
sbb
mov
adc
dec
xor
cwtl
dec
fstps
scas
xchg
and
cmp
push
push
and
sbb
push
imul
pusha
setne
test
and
pop
adc
sbb
mov
sti
roll
cs
add
push
pop
rcl
mov
cwtl
movsl
fnsave
jge
or
fbld
loope
xor
ret
jge
adc
adc
daa
movsb
adc
pop
fbld
cmpsb
loopne
roll
cmp
inc
pop
roll
or
loopne
cmp
std
add
jecxz
repz
pusha
orb
add
push
lea
xchg
sbb
pop
sbbb
adc
dec
jecxz
mov
faddl
lods
push
push
lods
sub
movsb
lret
bnd
and
cmpsb
mov
pop
xor
adc
popa
arpl
movl
les
cmp
push
adc
cmp
adc
inc
sub
sub
sub
iret
repnz
add
sbb
enter
push
dec
shl
add
add
mul
mov
and
pop
push
mov
rolb
mov
lods
shll
mov
add
leave
rcrl
pusha
aam
xor
add
dec
xor
and
mov
add
jmp
pop
icebp
adc
and
push
movsl
lea
adc
outsb
and
test
xchg
xor
adc
push
sbb
adc
pop
rcrb
outsb
in
dec
pop
xchg
cmp
pop
inc
add
ret
push
sub
bound
and
imul
popf
lock
pop
push
pmaxub
adc
nop
sub
mov
add
lret
inc
fldcw
popa
sbb
nop
xlat
arpl
imul
lahf
jae
loope
jl
mov
aas
imul
pop
add
sbb
arpl
ljmp
mov
test
or
enter
addb
mov
shrb
cmpsl
mov
aad
or
and
mov
add
xchg
fildl
push
and
push
pushf
xorb
mov
cmpsl
movsl
std
add
popa
add
faddl
movsl
sub
sbb
sub
insl
cmpsb
pusha
xor
adc
adcb
or
push
adc
mov
sub
in
push
sbb
test
aaa
insl
out
iret
and
cmc
mov
pop
push
push
add
xor
inc
xor
inc
sub
pop
dec
ja
inc
or
mov
leave
jae
fsts
xor
insl
push
xchg
test
adc
stos
jge
pushf
outsl
or
lea
add
push
push
test
push
xchg
and
dec
pop
or
test
in
scas
push
xor
add
xchg
inc
pop
sarl
inc
inc
rorb
and
div
pop
mov
mov
hlt
sbbb
and
dec
bound
xchg
mov
fiaddl
and
pop
and
inc
sub
rcll
rcll
subb
hlt
lock
add
pop
ret
cwtl
dec
pusha
scas
arpl
add
orb
push
mov
dec
add
nop
lahf
inc
arpl
in
pop
shlb
and
aam
in
mov
shlb
xchg
add
imul
notl
cmp
rolb
pop
in
dec
inc
dec
or
xchg
cwtl
cmpb
leave
add
sbb
rcrb
mov
push
shrl
xchg
andb
or
sbb
shlb
je
pusha
imul
pop
mov
mov
mov
popf
cmc
mov
add
xorl
pop
push
pop
sub
xchg
cmp
inc
loope
cmp
cld
aas
adc
add
add
sbb
add
and
iret
sbb
sub
adc
mov
mov
add
stos
mov
test
xor
sub
test
add
addr16
data16
mov
jg
and
or
inc
pop
mov
cmp
sbb
je
xor
xorb
adc
mov
push
mov
stos
xor
ret
cmp
test
dec
sub
ja
and
arpl
sahf
mov
sub
mov
dec
sub
sbb
dec
add
push
sub
pop
push
and
mov
test
rolb
popf
lret
dec
stos
or
fwait
mov
fadd
push
add
scas
pusha
and
mov
cmp
sub
or
pusha
xor
pop
xlat
movsl
test
cmp
pop
out
fisubs
or
push
add
mov
andl
sbb
and
lahf
jmp
or
pop
dec
add
mov
inc
mov
or
add
sbb
xor
dec
push
jno
mov
xor
and
inc
rolb
loope
test
ret
or
orb
or
test
inc
dec
push
and
sbb
inc
or
dec
sahf
outsl
xchg
imul
ss
jns
mov
int
sbb
cs
imul
lret
imul
or
xchg
add
adc
sahf
cltd
pop
sub
pop
xor
pop
inc
test
or
dec
and
push
repnz
loope
addb
call
pop
and
mov
push
fwait
rolb
lea
and
mov
aad
test
movsb
inc
adc
enter
or
std
andl
push
add
loope
xor
mov
or
dec
add
sbb
dec
push
mov
inc
ret
add
movsb
mov
push
pop
rclb
jg
mov
or
cwtl
call
mov
and
cmp
bound
add
in
inc
cmp
cmp
shl
sahf
fiaddl
mull
lret
inc
xchg
rcll
xchg
or
loope
arpl
fsts
insl
push
ret
ret
nop
cltd
adc
pop
int
push
or
jmp
in
xor
pop
mov
cmp
ret
jns
add
jo
inc
dec
inc
add
add
or
sarb
les
bound
lcall
push
and
nop
sarl
stos
rorb
mov
xorl
pop
xchg
lcall
xchg
mulb
push
push
jb
mov
bound
cmp
mov
add
mov
ffree
add
sub
pop
or
mov
dec
push
mov
add
or
xchg
pop
jp
and
lods
loop
outsl
hlt
sub
mov
add
inc
xchg
movsb
outsl
sub
inc
stos
sub
popa
xchg
leave
out
decl
push
adc
out
inc
xor
movsb
mov
xlat
test
push
xchg
pop
xchg
xor
xchg
arpl
mov
xor
jl
test
xchg
sahf
ss
jo
sarb
repz
test
and
insl
cltd
push
mov
dec
shlb
shrl
pop
loope
jmp
jp
je
push
mov
or
or
sti
sbb
add
sbbl
pop
rolb
shlb
push
lahf
xchg
adc
dec
outsl
fisubl
push
repnz
cs
dec
xchg
imul
lea
sub
rolb
push
mov
sbb
push
in
les
inc
and
jecxz
rol
adc
cltd
in
mov
inc
mov
xchg
loopne
aam
test
jns
add
cwtl
dec
sub
das
or
add
ret
shl
fwait
mov
stos
lcall
stos
fadd
sbb
jae
add
sub
clc
imul
arpl
inc
xor
xor
shll
imul
adc
stos
add
xlat
adc
pop
pop
dec
rorb
bound
dec
outsl
xchg
sbb
stos
imul
mov
in
mov
fidivrs
orl
push
gs
aam
adc
sbb
call
mov
lahf
stos
dec
arpl
addl
or
or
push
movsl
mov
adc
lahf
jns
jge
xchg
out
cwtl
sarl
mov
shll
pop
cmp
or
outsb
es
push
adc
ss
jmp
imull
adc
in
and
inc
inc
pusha
leave
fistps
jmp
cmc
or
xor
adc
xor
mov
into
add
aam
add
xchg
and
lahf
inc
xor
mov
pop
scas
dec
pop
cld
jmp
popa
fwait
cmpsb
subl
scas
add
sbb
xchg
lock
dec
dec
or
xchg
xor
data16
dec
xor
cs
push
cmpsb
or
cli
push
sbb
mov
xchg
aaa
mov
jae
and
popf
and
adc
cmp
loop
xchg
and
xor
loopne
stos
outsb
xchg
sbb
adc
mov
sbb
inc
into
sbb
repnz
xchg
inc
jno
mov
cld
add
add
imul
dec
add
lds
push
add
lods
sub
sub
xlat
in
test
loopne
cmpsl
sbb
sbb
xor
adc
push
adcb
or
cmpsb
in
mov
in
add
push
mov
ss
xor
add
xor
cmp
or
inc
mov
adc
imul
sahf
mov
mov
bound
jne
cmp
addl
gs
or
xchg
inc
or
or
lods
rol
popa
mov
adc
rolb
pop
mov
xchg
add
movsl
inc
sbb
or
mov
pusha
call
jo
add
rcrl
mov
and
add
dec
shlb
inc
add
add
pusha
mov
or
mov
pusha
es
sbb
pop
sbb
repz
inc
addl
sbb
mov
sbb
shlb
pop
and
inc
push
stos
rol
xchg
ljmp
pop
je
and
dec
adc
hlt
rcrb
popa
push
lahf
insb
loop
stc
popa
xchg
imul
jae
xchg
adc
pop
enter
push
mov
push
adc
test
add
push
push
push
xchg
mov
xor
dec
push
pop
shrl
add
ja
rorl
mov
add
add
xor
add
rcrb
and
aad
add
fmull
mov
inc
sub
xor
cmc
sarl
jecxz
xchg
push
adc
adcb
aaa
ds
es
and
subb
push
jo
cwtl
cli
out
addb
flds
and
jp
div
jb
fadds
scas
imul
rcr
daa
or
inc
add
mov
add
add
dec
test
insb
mov
lcall
push
cmp
or
or
add
loopne
leave
add
aad
inc
cmpsl
in
add
scas
adc
stc
in
xor
mov
mov
and
fisttpll
nop
mov
sbb
idivb
or
mov
leave
lods
in
cs
and
inc
test
sub
push
push
sub
nop
or
pop
pop
sbb
xchg
mov
add
add
sub
push
jb
andl
jne
inc
or
popf
cltd
and
jp
arpl
push
xorb
push
stos
inc
rorl
or
mov
aam
pop
scas
aas
dec
add
cmpsl
adc
add
out
xor
js
inc
shlb
popa
inc
sub
lods
movmskps
push
cwtl
test
loope
and
lahf
add
adc
sub
mov
fcomps
loopne
and
mov
mov
orb
mov
mov
outsb
push
mov
stos
mov
leave
cmc
dec
adc
mov
addl
xor
mov
scas
inc
or
and
icebp
mov
add
push
mov
inc
pop
cwtl
bound
adc
test
jno
cs
push
mov
or
test
adc
shll
push
cmp
mov
and
xor
and
inc
pop
nop
cmc
cmc
sub
jo
cmp
rolb
add
mov
sub
dec
xor
push
int3
mov
cmp
loopne
add
push
cmpsl
pop
pop
imul
push
fists
xor
or
xchg
add
add
xor
and
js
push
stc
sbb
ret
or
push
and
inc
xchg
rcl
mov
stc
jne
add
xor
dec
mov
es
imul
adcl
mov
add
xor
add
mov
inc
or
xchg
mov
pop
aaa
scas
in
ficompl
or
push
lods
sbbl
mov
shl
test
inc
or
sub
les
addb
mov
xor
arpl
jns
push
enter
lahf
scas
shrb
enter
and
or
les
adc
cs
mov
mov
push
int
inc
add
inc
repz
or
popl
mov
or
push
push
or
add
sbb
pop
jb
push
pusha
fsts
and
add
jl
push
stos
dec
scas
cwtl
and
jmp
imul
leave
sub
pop
sbb
mov
fxch
test
fdiv
cs
dec
jecxz
sub
mov
mov
xchg
push
lods
adc
dec
lods
stos
imul
pop
or
cmp
xor
and
add
repz
lods
sbb
testb
scas
sub
inc
imul
and
pop
add
icebp
rclb
std
push
add
pop
inc
out
es
sub
stos
orl
xor
dec
sahf
cmc
rcll
add
xor
add
mov
and
lcall
inc
retw
popf
jp
sub
insb
in
lahf
ret
sub
xchg
les
or
test
push
push
or
xor
scas
out
and
jmp
shll
mov
xor
stos
jl
imul
and
call
pop
movsl
nop
jo
sub
gs
movsl
add
ljmp
push
outsl
inc
stos
sbb
push
sub
rorb
mov
push
xor
xor
push
push
add
orb
dec
or
les
ret
mov
rorb
inc
sarl
and
mov
rcll
jle
arpl
sbb
iret
scas
sub
dec
andl
dec
xor
dec
cmp
jne
push
push
xchg
icebp
fadds
add
fsin
jmp
jns
pusha
sbb
aam
pop
bound
ja
add
dec
xor
dec
imul
mov
add
mov
lcall
cmp
ljmp
decl
add
in
mov
repz
xchg
rcrl
sahf
aas
cltd
cmp
and
imul
push
mov
jg
mov
adc
jnp
xor
sub
fst
or
adc
jb
pop
pop
dec
sub
shlb
pop
jecxz
xor
push
out
je
lret
sbb
push
daa
rcll
add
jo
jle
movsl
sbb
jns
sti
mov
movsl
addb
fiaddl
xor
add
adc
push
scas
sahf
movntps
mov
outsb
add
lret
xor
add
mov
cmp
lret
test
add
aam
mov
or
sub
push
add
cs
imul
push
popa
mov
adcb
fldl
mov
popf
and
stos
and
adc
and
sub
addr16
leave
lods
addb
loope
icebp
mov
arpl
fstpt
mov
data16
popa
aaa
sub
or
in
sbb
jp
sub
mov
test
popa
cwtl
fwait
jne
xorb
mov
cmp
rcrl
mov
pop
leave
repz
cmp
mov
sbb
add
lods
add
push
adc
mov
outsl
out
cmpsb
mov
pop
enter
add
and
dec
sub
mov
and
inc
jae
pop
add
cmp
test
imul
inc
or
mov
pop
push
int3
add
rclb
pop
ss
xchg
test
add
jne
xchg
jb
lods
lahf
imul
ljmp
test
xor
push
and
mov
mov
mov
cmp
inc
add
or
dec
imul
add
ss
push
pusha
adcb
jg
push
sahf
sub
jmp
sub
ffree
dec
arpl
rcll
les
ror
lea
cwtl
dec
jne
popa
xor
cmp
lock
add
add
aaa
rcr
xchg
inc
rep
and
cmpb
lods
insl
data16
add
xlat
add
mov
adc
shll
shl
and
push
inc
loope
cld
cmp
test
icebp
sbb
test
les
and
dec
mov
pusha
aam
inc
cmp
add
subb
cld
popf
jo
subb
pop
jg
and
pusha
adc
sub
jo
aaa
stos
sbb
cmp
or
dec
xchg
test
add
or
addl
imul
out
aaa
mov
mov
sbb
aad
jno
mov
adc
mov
xor
xchg
scas
dec
or
mov
movsl
sub
test
dec
add
addr16
adc
add
faddl
dec
ror
sbb
adc
xchg
xchg
dec
in
jo
pop
inc
cltd
insb
dec
add
in
dec
inc
ficompl
sbb
add
stc
shll
insl
cltd
add
sbb
leave
dec
lds
insl
cmc
lods
mov
js
mov
outsl
flds
inc
test
inc
sub
shlb
in
jle
jp
loopne
fsub
cmp
mov
or
inc
movsl
or
jnp
loopne
push
leave
xchg
inc
push
add
adc
pop
push
push
and
sbb
inc
mov
popa
jge
les
xlat
add
xchg
xchg
or
push
cmp
or
mov
adcl
nop
xor
js
flds
add
xchg
out
add
or
sbb
sbb
adc
sahf
mov
nop
or
outsb
xchg
inc
xchg
push
push
add
inc
and
adc
and
inc
add
push
loop
xchg
or
or
sub
jae
push
pop
sbb
leave
int
fwait
and
mov
xor
popa
pop
or
jae
and
sub
fcoms
push
or
push
mov
ljmp
mov
or
lea
and
stc
cmpsl
add
xor
push
mov
test
jo
cmp
xchg
mov
icebp
lret
rclb
roll
icebp
jb
inc
lcall
lret
dec
sbb
mov
and
sub
or
sub
mov
fiaddl
stos
loope
inc
adcb
aam
shll
shrl
mov
and
or
inc
dec
cltd
movsb
or
pop
mov
inc
add
pop
push
mov
les
dec
inc
sbb
mov
test
loopne
add
mov
xchg
push
push
and
loope
and
add
andl
and
test
xor
aam
adc
cmp
jo
in
inc
pop
test
add
pop
mov
scas
push
dec
ljmp
xor
mov
or
addl
xor
movsl
push
testb
int
ja
add
ja
sbb
add
loope
mov
aam
jge
lods
adc
push
cmpsl
cmp
jno
repnz
and
in
xor
mov
sub
push
fwait
mov
arpl
cmpb
stos
xor
and
jno
adc
add
sbb
bound
inc
sbb
xor
xchg
ret
xor
out
mov
or
nop
adc
and
xchg
test
inc
inc
lcall
mov
pop
enter
sbb
cmp
stc
ds
inc
jno
adc
repz
cmpsb
in
sub
or
or
mov
bound
movsb
push
or
inc
mov
sahf
push
inc
lods
mov
fstpl
dec
jns
jecxz
sbb
sub
arpl
and
mov
mov
jmp
push
shlb
fs
xorb
sub
cmpsl
add
push
repnz
push
pop
movsl
inc
sahf
imul
and
sub
pop
lods
or
insb
mov
aam
add
loopne
or
stos
arpl
sub
jp
pusha
fldenv
cmpb
sbb
inc
cmp
mov
dec
lret
mov
lcall
jg
lea
adc
sbb
mov
mov
inc
inc
sub
pop
push
sbb
rcrb
les
iret
push
or
mov
and
cmp
mov
sub
adc
sub
mov
movsb
sub
mov
adc
and
pop
push
push
ret
jmp
sub
cmp
add
cmpsb
test
les
inc
add
dec
lea
and
push
sub
bound
mov
gs
std
mov
push
mov
xchg
test
pop
adc
and
adcb
les
mov
or
adc
scas
in
call
loopne
adc
out
stos
test
insl
addb
les
test
mov
leave
add
push
loopne
jg
push
popa
add
pusha
xor
pop
push
scas
dec
push
imul
pop
fcmovnb
add
adc
shrb
pusha
push
inc
sbb
lret
arpl
xchg
sbb
push
inc
out
add
cmp
stos
pop
and
ret
inc
sub
loop
jge
sbb
add
repnz
mov
dec
subl
push
aam
pop
push
inc
hlt
jne
adcl
loopne
cld
pop
xchg
ljmp
aad
adc
push
add
lods
push
xchg
push
xchg
loop
cwtl
sub
xchg
mov
cmp
cwtl
cmc
insl
pushf
add
mov
inc
call
out
mov
leave
loopne
ds
shrb
inc
sub
mov
xchg
test
adc
cmp
movsb
sbb
lods
push
scas
mov
inc
xchg
pop
jae
cmp
not
dec
and
mov
or
and
les
pop
xor
gs
jne
outsl
or
fidivl
mov
inc
cwtl
dec
sahf
in
dec
out
add
and
jns
mov
mov
stos
or
sbb
mov
mov
and
inc
push
fnstsw
imul
dec
imul
push
xchg
xor
inc
sub
sub
add
push
mov
dec
stos
les
mov
mov
hlt
cmp
stc
fwait
stc
dec
add
pop
daa
add
ret
or
or
andb
sub
and
mov
xor
xor
and
sub
push
sbb
sub
outsb
std
dec
add
ror
cld
xor
aad
imul
pop
sbb
mov
push
sbb
sub
and
mov
bound
shr
les
lods
xchg
or
test
xchg
rorb
sbb
inc
push
mov
and
xchg
jno
push
test
rolb
and
stos
je
xor
cmpsl
mov
imul
pop
mov
mov
adc
lock
add
dec
rolb
dec
mov
outsb
sbb
out
lret
daa
mov
stc
jno
pop
sub
push
daa
push
cli
bound
mov
aam
xor
daa
inc
add
xor
or
add
mov
push
orb
imul
mov
nop
out
add
push
or
cwtl
rorb
testl
cmpsb
mov
rcl
mov
push
adc
push
pop
rcr
inc
sub
mov
dec
pop
pushf
ret
adc
out
xchg
cmpsb
mov
rolb
dec
sub
repz
pusha
mov
push
nop
addr16
data16
dec
mov
call
test
mov
jne
or
aas
or
jecxz
test
fimuls
shlb
pop
add
mov
aam
pop
mov
je
movb
lahf
xor
adc
mov
mov
inc
or
jle
sub
inc
and
daa
out
and
sahf
daa
mov
inc
test
inc
jmp
fiaddl
inc
add
jae
mov
movsl
push
xchg
sub
loope
mov
loope
push
mov
inc
or
and
xor
sbb
xor
cmp
xchg
decb
cmp
shll
test
mov
push
xor
push
or
loop
inc
sahf
add
or
sub
rclb
inc
push
cmp
push
aaa
inc
dec
stos
sub
add
pusha
push
icebp
jno
les
inc
les
xchg
xchg
aas
jns
or
adc
popa
rolb
cmp
or
into
adc
push
fs
mov
stos
enter
roll
and
mov
add
add
sbb
adc
lods
scas
mov
or
or
insl
repz
pusha
add
add
dec
inc
jp
lods
test
push
loopne
mov
sbb
adc
mov
sbb
aad
and
cmp
rolb
and
aad
jmp
mov
addr16
shrb
and
scas
outsb
or
fisttpl
pushf
adc
dec
pop
inc
inc
dec
add
or
add
jae
mov
mov
xor
jno
or
sub
xchg
lahf
mov
add
mov
lods
add
inc
dec
in
mov
mov
adc
lea
add
cli
iret
cmp
pop
dec
inc
dec
sahf
inc
movsl
sbb
es
mov
mov
xchg
aad
push
jb
mov
int3
push
outsl
mov
cltd
sbb
push
cmp
xor
or
sub
add
cmp
pop
push
mov
popf
pop
dec
adc
mov
xor
add
mov
push
push
sub
push
movsl
xor
mov
jmp
sbb
sbb
movsl
xor
dec
mov
add
sub
xorb
cmp
cmovb
push
lea
rcl
xchg
inc
and
inc
sub
inc
pop
test
stos
xchg
negl
rolb
in
ret
and
cmp
adc
lods
pop
mov
cli
insl
or
filds
push
sub
popf
inc
xor
sub
sub
dec
pusha
inc
mov
push
and
cld
in
je
mov
imul
movsl
movsb
cmp
leave
mov
rolb
imul
push
inc
ret
outsl
jo
pusha
orb
bound
jns
adc
mov
and
push
or
or
lcall
jmp
xor
fwait
xor
or
mov
imul
xor
xor
stos
push
sub
cmpb
sub
lds
dec
pop
xor
cltd
imul
push
add
cs
xchg
inc
push
lahf
cmp
push
repnz
mov
les
pop
pop
jecxz
movsb
mov
stos
sahf
movsl
jns
ja
cmc
sbb
or
sbb
push
mov
and
jo
xchg
or
mov
adc
loopne
mov
mov
mov
push
repnz
in
and
jb
mov
add
mov
arpl
add
push
and
aam
or
push
xor
push
jmp
addb
fldenv
daa
inc
jb
add
push
test
jo
and
mov
xchg
addr16
xorl
ljmp
or
packsswb
xchg
jo
jl
ds
add
pop
mov
ljmp
and
pop
xor
sbb
fistpll
hlt
mov
jmp
adc
imul
add
add
jae
sub
inc
lods
pop
dec
adc
nop
ret
nop
push
mov
stos
pop
push
xor
sub
inc
mov
cmp
cmp
and
nop
dec
adcl
aam
pop
push
rcrl
sub
sbb
jg
sbb
test
cwtl
push
out
adc
adc
adc
dec
aam
pop
lcall
jo
jmp
iret
dec
mov
add
pop
dec
dec
aad
fsubrl
sbb
adc
add
mov
jnp
jno
push
xor
stc
imul
jmp
nop
je
pop
dec
add
inc
add
and
in
push
adc
cmpsl
aad
pop
aad
rorl
lods
xor
lahf
or
push
or
mov
push
adc
dec
pop
cwtl
xlat
in
adc
lret
push
in
gs
test
add
jl
push
rorl
mov
adc
mov
mov
loop
xor
rcrl
mov
xorb
vphaddubd
sbb
or
push
nop
mov
mov
addr16
or
pavgb
sbb
nop
inc
and
add
xchg
inc
xchg
xor
ret
roll
stos
fnstcw
fnstenv
in
and
lcall
add
push
add
adc
push
lea
xor
adc
add
ljmp
inc
adc
cltd
lahf
movsb
subl
shll
pop
ret
outsl
movsl
push
pop
pushf
adc
inc
inc
and
in
xor
cmpsb
fisttpll
jnp
test
adc
addb
dec
in
les
push
push
dec
outsl
add
push
push
push
ret
cmp
cmp
xor
pop
repnz
aas
inc
sub
jae
arpl
shll
add
mov
mov
xchg
fsub
dec
ljmp
or
cltd
add
iret
cli
fwait
cmpsb
xchg
and
xchg
adc
and
popa
add
enter
or
push
mov
add
add
cmp
or
add
rcrb
xchg
sbb
mov
std
jno
test
inc
add
push
sub
mov
rolb
mov
out
and
lods
xor
test
ljmp
iret
popf
or
dec
inc
mov
shrl
dec
push
adcl
pop
or
add
addb
kandb
test
cmp
dec
roll
dec
mov
sbb
push
sahf
mov
sub
add
out
mov
add
mov
pop
loop
push
inc
sub
and
add
or
int3
mov
mov
mov
leave
jae
jge
xor
add
push
pop
pop
mov
xchg
dec
cmpl
arpl
ret
aaa
pusha
insl
xchg
push
xchg
fs
test
shll
jmp
sbb
mov
addl
jp
sub
xchg
cmpsl
jns
sub
dec
or
pop
mov
cmp
das
or
mov
or
fdivrl
insl
popa
xorb
je
dec
ss
push
adc
inc
adc
daa
clc
xchg
adc
or
inc
cmp
cwtl
iret
inc
mov
mov
lahf
mov
dec
je
pop
mov
jne
mov
xchg
arpl
inc
cmp
and
mov
test
dec
es
cwtl
arpl
push
jmp
mov
leave
inc
mov
xor
pop
push
imul
and
data16
lahf
mov
int3
scas
imul
dec
icebp
in
rolb
xor
add
sbb
std
dec
mov
test
push
in
mov
in
ja
orl
xchg
add
or
and
or
lcall
sub
iret
lods
xor
leave
aas
inc
mov
add
jne
sub
ret
adc
jno
adc
jns
lea
add
add
movsb
add
enter
add
or
mov
push
popf
jno
mov
iret
or
mov
fcoms
mov
add
or
and
xor
jmp
outsb
or
and
cmpsb
add
pop
sub
fwait
iret
rol
rcrb
push
cs
push
add
adc
and
push
mov
sub
and
stos
mov
push
insb
push
into
cmp
add
inc
or
mov
jnp
nop
inc
adc
rorb
js
mov
sub
mov
xchg
jo
xor
lods
adc
xchg
add
add
inc
jmp
int3
daa
in
lcall
cmp
jne
daa
mov
adc
and
add
mov
stos
mov
xor
dec
popa
aas
mov
sbbb
push
sbb
lahf
aam
sbbl
inc
xchg
fwait
testl
das
dec
popf
pop
les
sbb
xor
jno
pop
scas
pop
sub
push
fcomi
mov
mov
jns
lods
add
jecxz
rolb
js
dec
aad
loopne
mov
or
xor
mov
mov
cwtl
push
in
pop
repnz
mov
and
push
xor
mov
mov
inc
sbb
and
push
sbb
mov
push
and
push
les
mov
pop
enter
lds
cmp
stos
or
sbb
in
ret
dec
sahf
movsl
dec
ret
add
push
xchg
jge
add
jne
lods
mov
test
cmp
xorb
ljmp
addl
adc
call
add
negb
lea
mov
scas
popfw
mov
pop
daa
push
nop
dec
and
sbbb
mov
inc
cmp
mov
sub
pop
popa
adc
sbb
subl
in
loope
mov
xor
push
fcmove
sar
xor
stos
sbb
stos
sbb
push
or
xchg
adcb
push
pop
add
insl
cvtps2pi
lds
popf
or
mov
push
adc
icebp
mov
xchg
idivl
pusha
inc
rcrb
nop
or
add
or
mov
push
sti
mov
or
popf
sbb
and
cltd
in
push
push
xor
insl
add
sbb
cltd
jae
ljmp
xchg
cmp
xor
data16
leave
mov
add
xorb
mov
fstpt
mov
data16
dec
xor
xchg
add
mov
push
dec
xchg
jbe
pop
xchg
and
insb
or
call
pop
aam
xor
fdivl
sbb
sub
jae
movsl
push
xlat
mov
test
enter
lret
sbb
test
ljmp
lea
lcall
arpl
mov
push
add
call
push
push
cmp
sub
jg
and
mov
cmp
xchg
pushf
test
lahf
adc
xor
xchg
out
pop
add
mov
adc
push
sbb
or
mov
int
add
cmpsb
es
sub
popa
add
nop
pop
add
mov
push
mov
xor
rcl
add
add
test
je
ret
arpl
andl
aaa
test
inc
adc
push
pop
pop
lret
jle
enter
shll
aaa
mov
aas
mov
mov
iret
xor
mov
push
movsb
add
pusha
sbb
test
leave
test
rol
xor
cltd
and
pusha
addb
push
iret
mov
lods
dec
roll
or
cwtl
xchg
int
xor
sahf
insl
ja
lds
adc
repnz
cs
sub
cmp
xor
inc
adc
les
jae
les
lahf
aam
pop
jnp
jns
push
and
add
cmpsb
ljmp
add
inc
repz
sub
adc
mov
xor
add
push
aaa
mov
jnp
xor
inc
rcrb
or
scas
and
test
push
xchg
add
mov
mov
test
cmc
cmp
imul
push
in
and
add
push
sti
add
or
add
cmp
push
xor
cwtl
xor
sub
ja
xor
xor
sub
das
pop
out
add
mov
jne
push
dec
mov
adc
or
gs
movsl
cmp
push
dec
push
inc
add
xchg
lar
mov
rol
in
sub
sub
jae
push
push
sub
add
add
add
inc
push
push
mov
ret
jne
sub
xchg
and
inc
xor
mov
test
dec
jmp
xchg
add
mov
les
jg
xor
roll
mov
cltd
inc
sub
pop
add
test
pop
adc
les
sub
sti
add
cmpsb
and
mov
rol
mov
cmpsb
rolb
xchg
popf
xchg
push
and
mov
rcll
roll
dec
test
pop
lds
test
dec
push
add
push
inc
arpl
push
adcb
xchg
fisttpll
test
and
add
movsb
mov
adcb
cmpsb
imul
out
or
mov
mov
mov
test
inc
inc
mov
pop
and
pop
pop
and
repnz
dec
cmp
add
mov
pop
mov
or
cmp
mov
adc
imul
lock
push
sub
inc
mov
pop
pusha
mov
in
int
and
inc
mov
mov
push
mov
jecxz
mov
mov
repnz
rorl
inc
rorb
dec
xor
outsl
in
inc
mov
xor
xor
push
shrl
or
add
dec
jnp
or
dec
jmp
pop
mov
cwtl
andb
cmp
sbb
or
stos
leave
cmp
fwait
jne
insl
roll
adc
dec
inc
rolb
push
inc
cmp
jge
xor
sbb
jne
pop
rol
add
add
cmp
xchg
sub
scas
sub
rcr
jb
aam
repz
add
lea
dec
fwait
mov
inc
adc
inc
adc
fcom
and
fs
test
xchg
jg
sbb
icebp
lds
iret
sbbb
xchg
or
jnp
xchg
adcb
or
add
inc
fdivrs
stc
cmpsl
xor
add
jecxz
test
or
inc
add
cld
add
mov
pop
lcall
lcall
add
cmp
push
pop
mov
neg
mov
mov
adc
xor
mov
cwtl
addr16
or
jne
or
ja
cmp
rclb
pop
imul
push
add
cmp
jne
and
and
pushf
inc
adc
adc
jecxz
xchg
sbb
arpl
andb
mov
mov
inc
xor
ret
ds
mov
jbe
jo
test
mov
add
push
mov
jp
or
stos
adc
xchg
ret
aam
scas
cld
adc
fstpl
int
mov
sub
stos
and
stos
push
loope
jns
mov
mov
iret
cmp
sub
and
inc
cmp
fmuls
mov
inc
lahf
fdivl
sub
movsb
mov
lcall
sbb
leave
jo
fnstsw
push
mov
add
pop
loope
orl
xchg
inc
pop
add
test
outsl
leave
dec
out
xor
scas
nop
sbb
sbb
mov
add
xor
adc
scas
pop
sbb
mov
cmp
adcl
jg
mov
xchg
sbb
mov
sbb
inc
or
adcl
pop
addl
push
adc
int
les
fldl2t
mov
adc
and
movsl
push
imul
push
jecxz
add
or
xor
adc
add
inc
inc
sub
pusha
add
arpl
out
sbb
test
test
popf
and
cmpsl
mov
xchg
push
xchg
inc
cmp
stos
lcall
test
sub
loopne
cmpsb
xchg
incb
xor
push
xor
jg
ret
sbb
add
or
add
icebp
adc
test
sub
out
xlat
cs
je
ljmp
mov
divl
sub
sbb
push
cwtl
outsl
xchg
inc
enter
add
ret
add
add
sub
aam
dec
dec
cltd
sbb
adc
sub
push
or
sti
cmc
jmp
repz
jno
bound
cmpsb
push
jmp
inc
or
scas
shll
subb
inc
pop
sub
or
sub
addr16
jne
and
adc
add
xor
adcl
inc
pop
inc
mov
leave
xchg
mov
cwtl
cmp
sub
add
mov
and
push
add
aas
xor
test
aaa
addb
test
arpl
adc
mov
rep
pop
sub
stos
fsts
jae
add
and
mov
xchg
dec
push
scas
dec
loope
dec
push
cmp
aam
hlt
loopne
cltd
cltd
xor
pop
push
imul
or
mov
inc
adc
insl
mov
movsl
add
push
nop
addr16
pop
inc
and
test
xor
inc
inc
or
add
test
addr16
add
pop
jb
pop
adc
lret
mov
ja
outsl
and
jo
xor
aad
push
jns
push
loop
push
add
stos
add
add
mov
push
aaa
jle
fbld
mov
sbb
sbb
iret
aas
pusha
dec
pop
add
pop
xor
scas
stos
sub
cmp
imul
inc
neg
cli
es
jo
sub
ret
jno
stos
pop
xor
pop
mov
call
xchg
push
scas
stc
mov
cmp
or
mov
xchg
sbb
add
mov
pop
push
ror
dec
jecxz
popa
adcb
movsb
inc
call
inc
inc
cltd
xorb
dec
outsl
jmp
sbb
subb
test
xor
push
imul
add
shll
or
add
mov
nop
pop
dec
jb
jnp
dec
rolb
das
fisttps
add
cmp
outsl
mov
out
in
push
mov
jmp
daa
cmp
lock
loop
movsb
cmp
cmp
loopne
xor
mov
sbb
lods
loope
mov
scas
stos
and
fiaddl
xor
lods
lahf
ret
add
cmp
movl
xor
lods
inc
dec
pusha
adc
cmp
mov
pop
nop
xor
cmp
lds
and
bound
or
pop
lret
mov
sbb
xchg
sub
repz
adc
fwait
mov
inc
jne
or
xor
in
xchg
test
mov
inc
and
jecxz
imul
adc
xchg
pop
lcall
add
movsl
push
mov
stc
test
es
stos
xor
cmc
inc
pop
popf
orb
xchg
jne
or
inc
jae
lcall
jne
or
add
xor
inc
pop
mov
inc
and
push
or
jo
in
movsb
cmpsb
arpl
inc
adc
mov
cmp
mov
or
inc
mov
add
lods
and
add
int3
or
xor
jg
adc
sbb
out
inc
sbb
or
sub
xor
or
inc
sbb
iret
cwtl
cli
dec
shrb
or
push
lods
les
jmp
inc
ret
daa
movsb
jmp
xor
shll
xlat
inc
adc
mov
les
aam
cmp
xor
scas
add
add
out
out
add
dec
sub
daa
push
test
add
pop
movsb
sti
sbb
lea
sub
cmp
mov
jge
bound
int3
pop
xchg
faddl
stc
pop
movsb
lea
rcrb
add
sub
inc
int3
mov
jp
xor
ljmp
jecxz
xchg
and
mov
add
adc
test
pusha
cmp
push
sub
test
mov
dec
sbb
mov
ds
in
xor
rolb
sti
or
or
imul
psrlw
adc
daa
mov
dec
or
or
fildll
sbb
ss
sub
xor
mov
fidivs
stos
shr
popf
pop
xchg
imul
and
pop
pop
or
lcall
cmpsl
or
lea
jne
push
xor
jae
adcl
loope
push
push
add
ret
aas
popa
or
mov
jge
inc
and
xor
jnp
es
mov
leave
lcall
and
or
and
pop
xchg
shll
xchg
or
push
mov
inc
popf
lods
or
imul
rolb
mov
xchg
push
icebp
cmp
inc
push
je
pop
pop
push
cmpsb
add
je
dec
pop
mov
add
mov
lcall
pusha
jae
jns
push
adc
pop
add
pop
stos
aam
mov
adc
pop
and
or
popf
or
adc
stos
lret
mov
pop
add
sbb
imul
add
dec
inc
lds
mov
and
inc
pop
jno
xchg
mov
push
mov
test
stos
adc
mov
mov
popf
decl
xchg
xchg
jmp
out
es
and
xchg
cmp
loopne
push
mov
ficoml
inc
popl
pusha
imul
enter
pop
lds
shll
std
pushl
mov
roll
mov
fnstcw
dec
das
je
sub
notl
orb
call
add
pusha
push
cmp
sub
pop
xor
sbb
repnz
dec
inc
pop
mov
adcb
inc
out
fs
into
mov
and
std
mov
rclb
and
xor
xchg
mov
addb
inc
add
add
stc
push
lea
dec
push
push
mov
insl
adc
cwtl
jno
mov
sbb
int3
and
jo
orb
jecxz
test
sub
pop
les
mov
or
xchg
insl
inc
mov
fldcw
or
jmp
outsb
or
dec
mov
pop
sbb
or
sub
dec
sbb
pusha
sbb
das
ret
cmp
jge
mov
push
xchg
mov
stos
mov
mov
mov
inc
mov
and
fsubr
addb
add
imul
dec
and
cmpsb
out
shrb
push
add
addl
in
into
inc
inc
andl
push
and
pop
out
mov
push
pop
orl
jae
dec
jb
int
or
les
nop
pop
inc
fwait
xor
movsb
adc
notl
stos
push
lods
adc
imul
add
inc
lods
jg
jne
rclb
dec
out
das
mov
xchg
sbb
pusha
gs
push
or
push
subb
pop
ljmp
cmp
xor
stos
rclb
xor
bound
mov
movsl
cmp
inc
sub
adc
pop
pop
and
imul
jne
add
addl
mov
in
inc
mov
mov
sbb
inc
outsl
mov
aam
inc
cltd
add
lds
xchg
add
xchg
gs
sbb
jns
jp
mov
daa
and
add
pusha
popa
mov
add
pop
shrb
jae
orl
sub
sub
cmp
ds
stos
mov
loopne
adc
sub
sub
loopne
mov
push
push
xor
sbb
push
repz
movb
mov
movb
ret
sbb
pop
add
addl
movsl
adc
adc
in
sub
aaa
test
repnz
jl
push
mov
imul
sub
ret
out
cmp
mov
and
xor
add
sub
push
and
cmp
rcll
roll
xchg
cltd
aas
orl
add
movl
xor
adc
aad
push
mov
nop
bound
je
mov
rcrb
mov
cwtl
movsb
pop
push
sbb
jno
imul
push
add
rclb
sub
jnp
push
cs
les
mov
inc
outsl
push
add
dec
and
daa
aaa
mov
pop
aam
push
leave
lret
aaa
xor
fld
inc
push
mov
stc
xor
and
or
push
out
pusha
fiaddl
and
jecxz,pt
mov
inc
andl
xlat
imul
sbb
xor
mov
add
movsl
push
add
push
clc
push
int3
cwtl
dec
sahf
decb
add
mov
aad
push
cwtl
push
cld
shl
popf
pop
mov
inc
fsubl
xchg
jo
repnz
mov
add
mov
inc
mov
xchg
js
adc
sub
push
movsb
lock
outsl
or
inc
cltd
ret
hlt
dec
sahf
sbb
jp
inc
mov
or
pop
or
sbb
sub
js
jno
sahf
and
fwait
fwait
arpl
aas
icebp
sub
popa
sub
jmp
cmp
add
or
xchg
xor
xor
insb
add
movsl
test
pop
and
mov
in
or
xor
stos
mov
mov
push
flds
adc
mov
scas
adcl
and
pop
pop
add
dec
shrb
loope
test
xor
ljmp
add
in
lods
dec
mov
cmpsl
pop
jmp
push
cmp
inc
push
hlt
xchg
mov
jns
mov
cmpb
and
add
push
sbb
add
ret
mov
sub
mov
dec
pop
push
je
or
insb
mov
push
push
and
test
outsl
movsb
xchg
addb
inc
and
mov
or
inc
fs
add
jns
mov
lea
test
in
pusha
sub
add
add
movsb
imul
lods
add
cmpsb
lcall
rolb
xchg
das
ret
inc
mov
mov
or
inc
test
push
jns
adc
xor
inc
inc
dec
daa
scas
xchg
stc
out
test
mov
mov
sahf
lods
mov
cmpsb
and
pop
aad
push
inc
add
or
fnstcw
xor
jne
aas
test
dec
nop
or
push
lea
cmp
sbb
push
lods
and
adc
xchg
xor
pop
push
dec
ds
sub
sbb
xchg
addr16
repnz
fistl
push
adc
or
repz
add
xchg
add
or
add
push
and
pop
add
xchg
mov
test
dec
nop
leave
lahf
push
add
xchg
sbb
sub
or
push
mov
dec
xchg
or
jno
sbb
sbb
dec
sbb
imul
cmpsb
pusha
sub
xchg
adc
out
jg
pop
enter
ja
xor
xchg
xor
int
add
popa
add
xor
int
or
test
cld
stc
sub
sarl
ret
inc
outsb
or
push
xor
jns
test
or
fisubl
or
sub
orb
pop
outsl
or
xlat
xorb
mov
loopne
jne
cmc
mov
enter
decl
adc
dec
mov
cs
les
adc
xor
add
push
push
adc
sub
dec
ret
lret
and
mov
and
lods
test
add
pushf
in
fisttpll
adc
push
adc
int
dec
or
mov
test
jb
mov
xor
iret
xor
lcall
cmp
popf
loop
lcall
push
xor
lea
push
adc
notl
fadd
ds
mov
popa
push
inc
fwait
rcl
test
leave
test
adcb
sbb
xchg
push
inc
push
adc
dec
push
enter
aam
pusha
and
popa
xchg
inc
imul
sbb
cs
xor
jns
test
and
lcall
add
dec
inc
pop
insl
aad
inc
lods
mov
outsb
xorl
arpl
push
add
add
test
push
sbb
addr16
mov
test
xor
pop
jo
or
cmpsl
xor
mov
inc
add
jge
xchg
mov
push
pusha
push
and
xor
xor
shl
mov
mov
jne
and
cmp
xchg
int
flds
adc
inc
adcl
cmp
sub
and
sub
or
outsl
cltd
mov
inc
mov
out
add
inc
sbb
das
cmp
movsb
push
sub
out
mov
je
pushf
dec
xor
xor
add
cmc
fsubrp
stos
nop
add
or
dec
les
dec
inc
incb
pushf
shll
xchg
loop
push
xchg
xor
pop
mov
xchg
push
adc
imul
and
inc
aam
mov
bound
push
rcl
jb
add
jmp
nop
push
mov
push
dec
pushf
in
scas
mov
pop
add
cmp
mov
add
mov
mov
add
and
or
or
shll
xor
push
dec
jl
or
dec
loope
push
ja
fistpl
inc
sub
and
mov
lahf
mov
fst
mov
add
add
mov
and
out
xchg
inc
inc
adc
imul
xor
mov
or
cmp
xor
xor
inc
pop
adc
daa
shll
push
and
dec
or
add
inc
arpl
dec
leave
pop
xor
out
scas
jns
cmpsl
es
jne
push
xchg
push
in
mov
test
sbb
add
jg
adc
and
jnp
or
mov
adc
aam
cmp
fadds
dec
fbstp
add
push
adc
mov
das
add
xchg
cmpsb
xchg
lret
fsubs
arpl
sub
stos
jo
scas
test
add
mov
sub
add
stos
stc
jecxz
les
gs
add
push
dec
or
jp
rcrl
es
pushf
cmp
push
push
and
lea
adc
or
aam
add
mov
xchg
out
or
call
fnstcw
adc
std
sbb
stos
adc
mov
and
adc
and
and
pmulhuw
sbb
jmp
cmpsb
out
inc
imul
cmc
and
sbbl
lcall
and
xor
xchg
inc
push
inc
aad
jno
jg
lea
add
test
add
jne
pop
cltd
dec
pop
je
les
pop
mov
push
arpl
outsl
mov
addb
add
pop
shll
or
dec
popa
hlt
es
enter
pop
fcmovnb
push
add
jecxz
adc
adc
and
xor
lcall
dec
pop
clc
or
and
loope
push
add
inc
sarb
sarl
dec
pop
add
aam
jmp
and
add
mov
scas
repz
lods
cmp
add
xchg
mov
rorl
mov
stos
cwtl
mov
cmp
push
add
inc
add
cmp
xchg
or
mov
jne
movsb
cwtl
pop
repz
pop
mov
add
or
and
add
inc
lods
js
xchg
shrl
ss
inc
inc
xchg
loopne
add
xchg
dec
add
inc
inc
sbb
in
add
aam
jnp
add
or
aam
and
push
test
mov
popa
sbbb
add
insb
dec
add
jne
cmpsl
sub
or
mov
cmp
fwait
adc
sti
and
adc
push
cwtl
xchg
mov
arpl
cmp
stc
gs
inc
mov
xor
movsl
mov
data16
push
sub
flds
mov
pop
arpl
push
js
in
enter
pop
and
or
or
dec
xor
dec
mov
and
push
xchg
cmp
cmp
adcb
nop
pusha
cmp
movsb
test
dec
sbb
iret
xchg
mov
inc
dec
and
enter
mov
loope
jecxz
jns
jo
xchg
mov
inc
push
je
push
adc
test
jecxz
push
ja
add
xor
cmp
shlb
loop
imul
mov
stos
aas
subl
pop
pop
sub
inc
sub
in
adc
mov
xchg
add
adc
sub
cmpb
add
pusha
mov
and
lret
scas
add
sarb
test
cmpsl
imul
cmp
inc
dec
adc
pop
push
test
jne
inc
or
jne
pusha
sub
and
xchg
lods
cmpl
mov
daa
ljmp
dec
jle
add
sbb
mov
jo
xchg
add
jns
shll
addb
xor
and
lea
xor
pop
std
mov
and
jmp
popf
push
jle
mov
cmpsl
and
cltd
imul
sub
adc
xchg
pop
add
dec
stos
add
cmpsl
xchg
arpl
adc
cmp
orl
pop
daa
xor
cld
pop
inc
add
leave
rolb
iret
push
mov
add
jno
push
sub
sbb
movsb
mov
inc
sub
popf
movsl
add
xor
sub
scas
lds
arpl
lcall
push
inc
sub
scas
sbb
int
or
imul
arpl
filds
xchg
sbb
and
shrb
jo
insl
test
outsl
sub
in
xor
int
push
addl
push
and
movl
jbe
jno
fs
pushf
or
or
xor
add
inc
xor
movsb
push
or
nop
xor
bound
push
dec
in
adc
jle
dec
add
mov
add
jo
mov
add
iret
inc
push
cmpsb
pop
test
adc
adc
outsl
push
push
fimull
rcll
das
mov
add
je
insl
loop
repz
aam
mov
push
jmp
mov
mov
cmp
pusha
jns
add
movsb
fwait
cmpsb
push
add
orb
sub
test
push
cmp
add
mov
push
xor
aam
aas
loopne
enter
sbb
shll
push
add
xchg
pop
pusha
push
xor
mov
jle
sub
inc
xchg
xchg
inc
xor
adc
dec
mov
pop
xor
ret
ja
inc
xchg
push
scas
nop
sub
fcoml
int
xor
add
add
jae
dec
pop
ret
dec
adc
inc
xor
inc
adc
mov
push
cmp
cmpsb
lods
lods
testl
mov
adc
inc
jmp
out
mov
add
or
pusha
cmp
or
push
jmp
mov
push
adc
push
lods
or
add
add
and
dec
sbb
mov
jae
push
add
out
lods
add
test
inc
insl
sbb
xchg
fldl
inc
and
adc
je
adcb
or
pop
xchg
shl
fistl
push
mov
ret
add
es
sub
mov
xchg
push
inc
pop
push
xchg
jne
push
and
scas
fs
or
daa
pusha
sbb
sbb
jno
pusha
test
push
jae
cmpsl
stc
adc
test
pop
call
shlb
test
das
es
add
arpl
mov
pop
jp
test
shrb
cmp
cmc
push
mov
dec
test
cmpl
ds
dec
xor
out
sub
sub
push
and
aaa
das
mov
and
sbb
or
addl
push
sbbl
add
jno
xchg
lds
mov
popa
repz
push
sbb
and
ds
adc
inc
push
sbb
cmpsb
mov
in
aam
popa
adc
or
stos
sbb
mov
notl
les
mov
adc
movsb
adcl
dec
xchg
shll
cmc
mov
mov
xchg
pop
movsb
imul
jmp
mov
adc
or
or
cs
inc
jno
push
or
popa
push
dec
movsb
cs
iret
sahf
stos
ret
gs
mov
and
lar
and
mov
jno
repz
rclb
mov
push
or
add
xor
sub
sti
or
leave
mov
xor
push
imul
add
movsl
lcall
cmp
bound
repz
inc
fmull
pop
xchg
out
add
jne
jne
sub
popf
out
pusha
mov
inc
and
jge
dec
push
or
pop
fldl
push
ljmp
xchg
inc
dec
sbb
or
cmp
test
sbb
loopne
aas
mov
sub
sub
or
in
jp
cmpsb
add
aad
pop
cmp
out
mov
cmp
jo
enter
roll
push
jne
push
in
mov
in
pop
fstp
sbb
push
sub
add
sub
stos
push
mov
inc
pusha
push
jmp
mov
aam
mov
data16
scas
mov
dec
pop
dec
mov
pop
shl
rcll
xor
sahf
das
sbb
adc
aam
test
xor
push
mov
pop
and
mov
add
mov
add
mov
mov
cs
bound
sbb
dec
mov
sub
push
sub
mov
push
mov
inc
fcmovbe
mov
std
fistl
pop
mov
lods
out
in
stos
mov
adc
sub
sub
addb
mov
add
sub
inc
dec
push
loope
aaa
jo
xor
adc
cmc
push
insl
loop
xor
cwtl
push
mov
xchg
dec
inc
ja
sbb
lods
mov
jno
test
adc
out
aas
dec
adc
iret
push
int3
les
in
adcl
addb
in
daa
push
mov
cmp
shld
addl
add
loop
fisubrs
mov
inc
imul
ja
mov
sbb
or
or
sarb
add
or
adc
dec
arpl
add
inc
fcomp
lods
add
inc
movsl
or
fistpl
nop
lcall
mov
sbb
sbb
inc
popa
sub
pop
les
test
add
jnp
cmp
int
xor
stos
inc
jg
add
test
xor
fcmovb
adc
xor
scas
sub
dec
loopne
add
stos
inc
test
scas
add
gs
or
xor
xorb
iret
inc
mov
pop
and
pusha
test
es
inc
sbb
stos
mull
aad
hlt
ret
push
test
ja
sahf
xor
ret
and
rolb
pop
mov
dec
push
stc
push
cli
std
xchg
push
fwait
gs
inc
repnz
add
and
push
mov
dec
push
pop
and
or
movsb
inc
jmp
subb
cs
add
or
int3
mov
push
xchg
insl
dec
out
inc
rolb
enter
adc
ret
std
and
xor
rcll
cmp
popa
mov
sub
pop
push
pop
sbb
mov
lea
aad
sbb
push
xor
jg
add
push
lods
dec
lods
inc
imul
pop
inc
inc
xchg
mov
inc
gs
fcmovu
pusha
pop
fs
push
popf
xor
jmp
mov
sbb
add
push
inc
imul
add
aas
popf
clc
les
or
push
inc
sub
sbb
push
jg
bound
in
notb
mov
sub
mov
adc
push
add
cltd
ja
test
addb
pop
cmp
push
pop
aas
mov
inc
or
sbb
jg
bnd
jns
aam
jae
or
out
loopne
add
mov
add
mov
cld
fldl
adc
out
dec
dec
rclb
push
dec
add
and
in
inc
test
mov
or
push
dec
push
mov
adc
inc
pop
aad
and
ss
xchg
scas
add
scas
sub
xchg
cmp
mov
xor
orb
xlat
ret
dec
sti
lds
mov
inc
push
nop
lcall
lods
movsl
inc
xchg
movsb
lahf
test
cwtl
sbb
insb
pop
pushf
mov
lea
imul
push
cwtl
push
fldl
and
cld
jo
jo
pop
movsl
jns
daa
add
dec
cmp
add
adcb
testl
imul
push
shrl
jmp
into
aaa
and
mov
in
pop
popa
loope
xor
imul
les
stos
xlat
stos
or
push
add
and
movsb
addl
mov
adc
add
sub
adc
push
inc
mov
push
nop
inc
test
ljmp
xchg
insb
lods
es
rclb
push
ljmp
fimull
push
xor
jns
js
sub
mov
inc
inc
xchg
dec
xor
jg
ret
xor
adc
mov
into
lea
aam
popf
ret
rcrl
les
nop
add
sub
and
inc
popf
and
in
mov
iret
adc
cwtl
mov
fwait
or
pop
and
mov
inc
orl
jns
subl
push
add
xor
jo
mov
xchg
xor
test
test
add
orb
jo
push
test
pop
test
mov
xor
push
pop
iret
es
mov
pop
jb
pop
dec
js
push
or
ret
arpl
cmpsl
push
jne
pop
sbb
xchg
dec
or
rolb
pop
mov
add
or
sbb
dec
or
pop
test
subb
add
scas
sbb
cmp
inc
stos
mov
inc
ja
inc
orb
lret
xchg
add
insb
pop
add
xor
dec
pop
push
leave
daa
or
and
lahf
xor
ror
addl
das
xor
add
and
iret
aam
ljmp
jne
or
test
or
adc
add
xor
mov
dec
inc
and
cs
add
dec
inc
mov
jb
imul
add
inc
sarb
pusha
push
loope
dec
scas
inc
pop
push
scas
lahf
aam
push
mov
bound
dec
rclb
adcl
nop
out
sti
scas
cmp
xor
adcb
add
pop
ret
cwtl
inc
push
add
out
fs
mov
dec
xor
inc
and
and
je
sbb
out
xor
adc
stc
jne
nop
lret
scas
mov
fxch
bound
js
inc
and
dec
pop
int
loopne
mov
xorb
xchg
pop
inc
mov
ficoml
add
movsl
push
mov
cltd
add
sbb
jecxz
lods
or
sbb
pushf
clc
repz
adc
mov
fs
inc
pop
and
lods
add
test
sub
addl
adc
mov
inc
jecxz
push
push
xor
adc
sbb
adc
sub
sbb
pusha
add
pop
mov
add
mov
ja
cmp
or
push
cmp
addl
pop
add
loopne
add
loop
jae
and
fdivs
inc
loope
cltd
add
dec
or
dec
repz
and
cmp
add
fmuls
mov
add
jge
inc
rolb
and
adc
movsl
add
arpl
and
repnz
les
stos
dec
xor
mov
jge
insl
push
sub
cmp
mov
cli
or
int
mov
push
push
push
mov
or
inc
adc
add
jo
notl
call
jg
mov
je
insl
std
mov
push
inc
dec
pushf
push
adc
push
ret
rolb
add
adc
rcrb
inc
test
adc
rolb
decl
sbb
icebp
inc
mov
gs
or
test
push
push
dec
or
and
push
pop
inc
stos
imul
inc
xor
mov
or
jb
mov
and
mov
sbb
pop
mov
push
fs
or
out
pop
adc
add
xchg
inc
add
mov
imul
dec
shlb
or
add
cmpsl
or
arpl
add
and
push
adc
or
adc
pusha
mov
test
push
xchg
idivl
stos
dec
lret
adc
adc
ret
fldenv
jno
add
adc
imul
add
daa
stos
shrb
cmp
cmpsl
sub
das
lret
cs
mov
xor
ret
push
push
add
test
or
jae
xor
dec
mov
daa
mov
xchg
daa
adc
leave
aam
and
test
in
sub
sbb
andb
push
daa
ret
test
adc
call
mov
loope
popa
pop
cltd
loop
adc
inc
ja
push
inc
movb
adc
inc
sub
pop
jl
push
lcall
cmp
out
flds
push
int
inc
jl
add
nop
iret
imul
mov
add
jge
sbb
cwtl
push
test
jle
in
pop
mov
or
test
fisttpl
and
xor
and
cmp
lret
jae
or
xor
loopne
mov
add
lods
and
fistpll
push
and
jg
sbb
loop
add
dec
push
push
xor
dec
aad
les
jl
lret
add
push
int
sub
fdivs
cmc
add
mov
adc
orl
xchg
dec
xor
pop
pop
pop
adc
lods
cmovp
add
sub
jmp
mov
lods
cmpsb
jne
add
scas
adc
and
stos
add
in
fadds
and
ret
adc
bound
cltd
in
test
cmp
mov
aad
xor
add
repnz
inc
imul
or
xor
add
inc
mov
addb
lret
out
mov
sbb
xchg
pop
lods
add
xor
cltd
shlb
or
mov
rolb
adc
inc
xchg
pop
daa
add
mov
push
movsb
push
dec
outsl
scas
xchg
or
lret
pop
aad
orb
packssdw
inc
mov
addr16
add
test
and
shlb
in
mov
rolb
test
xor
inc
pop
add
and
xchg
nop
cmp
imul
pop
add
and
jns
stos
pop
push
or
shll
test
add
add
xor
iret
xchg
push
or
cmp
and
bound
sbb
or
test
movsl
inc
sahf
mov
add
add
les
inc
add
add
or
cmpl
movl
mov
test
outsl
mov
add
stos
add
ret
mov
fs
add
notl
mov
mov
lret
sbb
fcmovnbe
stc
movsb
orl
or
mov
pop
sub
sub
rorl
mov
adc
lds
and
in
addl
add
fcompl
add
dec
or
loop
mov
sarb
cs
mov
mov
push
movsl
or
push
pop
lock
push
dec
add
dec
pop
dec
xchg
pusha
ret
jno
jge
pop
fstpl
mov
notb
fwait
mov
movsl
and
shlb
rorl
add
cli
rorl
std
mov
imul
imul
jecxz
pop
xchg
pusha
rolb
adc
test
stc
add
push
xchg
jnp
add
push
or
or
mov
xchg
cmc
add
push
test
cmp
push
or
mov
sub
cltd
sub
mov
mov
mov
stc
imul
add
add
dec
add
mov
cld
jg
xchg
xchg
cltd
jne
add
stos
push
insb
pop
or
jns
jge
dec
mov
cs
add
in
push
test
imull
add
dec
jne
insl
and
sbbb
popf
inc
mov
cmp
fwait
and
mov
pop
aam
jae
push
xchg
dec
cmp
enter
aaa
stos
or
roll
mov
xor
jecxz
or
pop
add
jbe
mov
movsb
cwtl
pusha
cmp
add
insl
icebp
add
or
add
inc
mov
inc
gs
fwait
pusha
mov
or
and
andl
or
dec
add
out
mov
add
mov
lds
mov
repz
mov
inc
test
movsb
xlat
push
cs
adc
inc
mov
xchg
ljmp
cmp
shll
fiadds
cmp
sbb
adc
xchg
sbb
lock
adc
sub
mov
adc
dec
xor
inc
xor
jae
or
or
xor
push
adc
inc
mov
out
ljmp
pop
sub
push
pop
jno
sbb
add
cli
xor
mov
add
scas
add
arpl
outsl
xlat
pusha
pop
xor
and
adc
cs
adc
add
jecxz
dec
pop
xchg
retw
aam
imul
mov
pop
ret
dec
cli
test
jmp
bound
jns
jl
subl
inc
mov
sub
mov
test
add
sub
xchg
pop
sbb
insl
cmc
mov
out
and
pop
jnp
add
dec
rol
pop
inc
mov
jbe
jne
xor
mov
cld
imul
pop
push
loope
push
int
cmpsl
xchg
push
xchg
xor
mov
addb
adc
and
sub
inc
pop
test
adc
push
ret
nop
push
cmp
nop
jns
in
and
sub
dec
push
xor
sbb
addr16
add
sub
sub
out
pop
push
rclb
pop
mov
test
jne
pop
shll
xchg
xchg
loopne
and
repz
push
pop
in
and
lcall
and
testl
adc
les
mov
dec
sbb
adc
or
xchg
dec
add
add
sbb
push
dec
aam
mov
les
add
cmp
cmp
rolb
dec
xchg
push
das
mov
xor
lea
int
aad
jno
and
add
cmp
push
mov
rolb
xor
rolb
fadd
adc
push
je
and
divb
sub
leave
imul
lahf
or
inc
mov
push
adc
lds
cmpb
push
js
sub
jne
xor
out
add
lret
mul
sub
mov
pusha
add
adc
iret
xchg
inc
cmpsb
push
dec
and
test
and
in
gs
mov
pop
or
frstor
roll
insl
jno
push
leave
lds
lods
jo
xchg
cs
test
lods
add
and
mov
and
stos
ss
pop
pop
jo
add
pop
xlat
adcl
add
sbb
mulb
and
mov
mov
and
orb
and
adc
push
adc
insb
cmp
rclb
aam
arpl
sub
push
adc
push
dec
nop
jmp
adc
push
cmp
movsl
mov
gs
iret
dec
adc
lcall
xor
in
addb
add
inc
adc
xchg
aad
add
and
out
mov
jecxz
in
imul
cmp
inc
inc
push
test
std
leave
test
data16
pop
jecxz
mov
add
add
mov
dec
add
je
mov
push
roll
sbbb
fst
adc
jns
jne
pusha
dec
pop
and
jno
ss
or
mov
test
adc
jge
es
mov
xchg
lods
filds
stc
mov
inc
xlat
push
orl
daa
test
test
or
fldcw
testl
in
dec
loopne
mov
stos
stos
dec
scas
adc
mov
cmp
xchg
or
add
cmp
inc
and
inc
mov
addl
cmp
jl
sahf
out
add
sbb
je
test
adc
add
add
int
sub
cltd
inc
mov
inc
inc
adc
sbb
sbb
dec
outsl
insb
jb
xor
test
fwait
ret
jecxz
and
inc
jnp
mov
sub
mov
pop
movb
inc
pop
rcl
mov
int3
and
loopne
outsl
int
pop
and
stc
inc
sbb
sbb
push
rolb
dec
xchg
sub
fldcw
inc
add
mov
iret
xor
push
lea
adc
and
cwtl
les
cmpl
mov
lods
cmpsl
xor
sbb
adc
add
iret
iret
sub
aad
int
orl
adc
mov
and
xor
mov
adc
or
push
fnstcw
adc
sub
jne
jecxz
xor
dec
inc
sbb
cltd
test
or
add
daa
jno
inc
and
dec
pusha
test
push
rorl
cmp
ret
cmpsb
iret
or
mov
push
fnstcw
add
push
subb
inc
add
imul
mov
arpl
xchg
xchg
push
add
mov
loope
adc
inc
sbb
addb
pop
enter
lahf
je
dec
pop
add
icebp
notb
popf
mov
add
mov
add
add
add
scas
mov
pop
xchg
std
les
inc
int
add
mov
mov
rolb
test
dec
mov
inc
inc
nop
mov
popf
jmp
nop
push
and
pop
adc
in
or
fstpt
gs
aas
sbb
sbb
adc
lahf
aam
push
sarl
pop
xor
mov
cmp
lret
xchg
insl
nop
sbb
xor
jecxz
xchg
pop
addb
xor
xchg
cmp
or
mov
andl
aad
loopne
and
nop
or
or
push
mov
push
cmp
insb
lret
or
add
dec
jne
insl
inc
mov
test
imul
sbb
add
or
inc
daa
insl
add
cmp
es
dec
rcll
imul
fists
xchg
cmp
add
lcall
sbb
jecxz
out
imul
in
ja
cli
inc
or
dec
adc
stc
mov
and
sbb
jnp
lcall
scas
or
movsl
in
push
pop
xchg
imulb
add
push
pop
enter
jb
xchg
inc
mov
or
pop
pop
xor
cmp
fnstenv
push
add
adc
ret
rorl
dec
int3
out
imul
or
out
xor
xchg
push
adc
and
mov
or
mov
nop
out
cmp
inc
sbb
lods
loopne
pop
xor
dec
das
add
xor
fs
cmp
inc
loopne
cs
das
sarl
jg
jno
push
pop
and
jmp
jmp
pop
mov
add
test
pop
mov
add
sub
mov
inc
lret
cmpsb
dec
sub
insb
dec
stos
mov
cmpsb
mov
mov
add
pusha
mov
mov
push
xchg
pop
push
mov
xchg
jno
test
insb
push
rolb
mov
pop
push
test
or
pop
lret
push
stos
lea
test
and
sub
add
dec
xor
cmpsl
or
test
nop
dec
js
push
jecxz,pn
or
or
xor
xchg
push
cmp
aaa
mov
push
dec
or
adc
dec
add
xchg
jge
jb
inc
inc
inc
loope
cmp
fs
lods
daa
mov
sbb
mov
cmpsb
push
pusha
sbbb
sbb
addl
pop
sbb
sbb
shlb
jmp
jge
add
jno
shll
leave
aas
dec
or
cmp
adc
ret
test
and
aas
sub
lret
xchg
aam
and
sub
call
fsubs
mov
in
jmp
not
inc
add
es
push
sahf
movsl
repnz
and
push
push
adc
aaa
je
push
add
adc
pop
adc
iret
fildl
mov
mov
sub
and
and
sbb
or
flds
mov
dec
jne
add
mov
mull
sub
lret
ret
dec
daa
rcrl
push
sbb
je
jmp
and
movsl
add
xchg
cmp
mov
inc
cmc
lock
pop
jno
jns
jo
imul
data16
fnstsw
fisttps
sub
or
shlb
add
adc
popa
sbbb
add
cs
xchg
aad
mov
pusha
loopne
add
ret
ja
test
inc
popl
loop
xchg
jecxz
addl
sbb
jmp
aam
jmp
punpcklwd
push
cmpsb
inc
adc
adc
xchg
ja
add
popf
int
bound
inc
mov
lea
and
jno
cmp
cmc
or
aad
mov
xchg
mov
cmc
test
push
outsb
mov
scas
gs
cwtl
sbbb
add
xor
dec
push
adc
mov
ss
lret
inc
sbb
pop
fists
add
mov
fildl
mov
sub
jo
cmp
mov
nop
mov
sub
int
pop
push
leave
pop
je
push
add
in
jl
add
out
popf
in
push
sbb
inc
sub
or
dec
or
aas
push
add
call
pop
popa
sbb
sbb
mov
outsl
add
and
mov
adc
push
sbb
push
sarl
add
inc
adc
and
and
addl
lods
sbb
cs
adc
fsubrp
es
dec
or
ficoms
sbb
sbb
jno
and
add
jmp
xchg
fadds
loopne
jo
jae
sbb
push
or
inc
sbb
or
fimull
int
add
push
loop
ds
or
pop
add
add
add
inc
cmp
and
pop
loopne
sub
inc
sbb
dec
lea
dec
rorl
and
insb
add
push
repz
inc
sahf
movsl
jns
pop
push
pusha
add
imul
les
and
stos
dec
dec
jae
add
push
xor
mov
push
repnz
add
fdivs
push
mov
test
ret
push
inc
add
xchg
add
jno
js
and
sub
adc
cwtl
jne
pop
mov
mov
test
sarl
arpl
add
pop
sahf
test
sub
mov
popa
imul
mov
add
adc
or
mov
pop
ljmp
lea
add
adc
fstpl
mov
push
scas
in
lahf
push
adc
sahf
inc
ljmp
xor
pop
cmp
sti
jbe
hlt
sbb
or
out
roll
add
rcll
mov
dec
add
rcl
xor
out
cmp
push
mov
mov
shrb
add
fstps
pop
loope
xchg
push
or
mov
mov
add
sub
out
jecxz
inc
adc
pusha
jmp
loope
add
dec
push
shrl
adc
ret
shrb
stos
fwait
pop
pop
movsl
fcomps
mov
push
push
orb
scas
ficomps
es
and
xchg
les
jmp
jl
add
lret
push
stos
popa
add
sbb
mov
imul
inc
outsl
or
dec
pop
add
les
and
sub
test
push
filds
adc
mov
notl
xchg
rolb
mov
push
xor
sti
dec
xor
adc
or
loope
pusha
sub
jo
mov
imul
inc
adc
fldz
daa
dec
jo
dec
and
lcall
loop
pop
xor
out
adc
nopl
out
jl
push
stos
inc
es
cmp
loope,pt
dec
fwait
mov
ret
testb
pop
inc
pop
sub
out
mov
sbb
test
push
adc
xor
flds
or
stos
rol
pop
lds
sti
adcb
mov
mov
add
xor
dec
and
cmp
test
cmp
sub
jnp
in
dec
add
xchg
sub
lahf
jecxz
ret
pop
repnz
mov
mov
push
lcall
sti
dec
arpl
dec
lea
adc
inc
lea
scas
mov
in
lcall
add
mov
add
push
pop
xor
sbb
addr16
push
mov
and
movsb
pop
cwtl
jmp
mov
rorl
xchg
xchg
xor
nop
pop
insl
jno
or
dec
clc
orl
imul
pusha
mov
or
pushf
shll
or
inc
push
cmc
ja
pop
pop
inc
dec
sub
cs
dec
dec
adc
inc
inc
or
add
cmpsl
nop
jns
push
cltd
les
call
gs
shll
pop
and
push
or
out
test
dec
dec
test
xorb
adc
add
movsb
addr16
and
pop
imul
jb
cmp
dec
mov
lea
jns
jo
sbb
ffree
repz
sti
int3
or
jno
sbb
xchg
test
xchg
push
cmp
iret
and
pop
push
or
rolb
arpl
cmp
scas
stos
imul
rolb
shrb
sub
push
adc
jmp
xchg
mov
jo
lcall
xor
xchg
xchg
icebp
inc
jmp
pusha
mov
pop
es
imul
adc
insl
or
test
cmp
gs
or
push
imul
mov
push
inc
or
adc
addb
adc
cmp
stos
sbb
test
movsl
add
je
call
lds
dec
xchg
addb
xor
filds
dec
movb
imul
mov
push
pop
and
ret
or
les
add
repz
xchg
mov
push
outsl
loope
and
add
add
rolb
add
mov
adc
adc
xor
mov
cs
mov
and
xorl
movsl
addl
lods
ds
add
das
pop
jp
and
inc
arpl
or
daa
icebp
mov
or
shll
mov
pop
push
les
je
pusha
push
add
sub
xchg
je
pop
je
movsb
loope
xor
dec
xchg
nop
sbb
push
or
mov
cwtl
sub
sahf
stc
int3
shlb
adc
add
sbb
pop
mov
sub
sbb
cmc
and
inc
repz
adc
sbb
jge
stos
mov
mov
dec
jae
mov
fsubrs
in
add
xor
add
rolb
data16
push
push
rolb
adcb
adc
pop
lahf
sbb
xor
add
bound
subb
stos
pop
and
dec
loope
daa
pop
test
cmp
repz
and
fistpll
add
test
stos
xchg
or
or
es
inc
inc
mov
scas
jmp
mov
ret
or
or
loop
mov
inc
adc
insl
mov
xchg
sbb
out
jo
adc
shrb
mov
int
enter
sub
xor
push
test
dec
xchg
inc
and
stc
popa
imul
push
sbb
sbb
insb
xor
cmpsl
sub
dec
cmp
js
jecxz
or
and
shrb
xchg
add
sbb
mov
outsb
inc
mov
jecxz
jno
sbb
sub
push
adc
orb
push
or
and
aad
shlb
aam
lds
lock
and
subb
mov
ss
dec
xor
sbb
test
adcl
es
xchg
enter
dec
push
or
icebp
outsl
push
mov
fstps
lcall
addr16
xor
dec
test
jb
mov
xchg
cwtl
aam
xor
mov
bound
push
mov
cmpl
cmp
add
movsl
lea
and
xor
add
rclb
sbb
sbb
outsb
xlat
mov
jnp
mov
cmp
add
sbb
sub
and
scas
xor
sbb
or
xchg
rolb
loopne
rolb
jno
sub
inc
pop
push
xchg
xor
adc
cmpsb
out
and
cmp
sar
mov
or
jno
mov
inc
subb
xlat
mov
lcall
adc
cwtl
out
dec
mov
pushf
pop
enter
aam
loopne
adc
addl
sbb
dec
xchg
adc
and
idivl
mov
mov
in
mov
push
mov
imul
xlat
or
add
xor
mov
cmpl
popa
jne
fiaddl
divl
fwait
mov
sub
inc
xor
dec
ja
dec
repz
xchg
xchg
divb
mov
add
test
cmp
xor
movsb
mov
or
add
adc
dec
imul
scas
add
or
add
jnp
dec
inc
test
test
and
iret
push
ja
and
mov
loopne
add
bnd
add
mov
dec
or
sub
inc
xchg
add
adc
mov
in
sbb
jmp
xchg
or
int3
mov
test
mov
enter
scas
in
sub
xor
fcmovnbe
mov
test
clc
inc
or
adc
arpl
mov
movsb
mov
push
test
mov
inc
loopne
sub
and
add
adc
or
aam
es
rolb
pop
sub
mov
mov
imul
xchg
jne
or
xchg
inc
sahf
outsl
mov
inc
adc
add
xor
mov
add
mov
pop
movsl
cmp
in
shrb
loopne
sbbl
mov
pop
inc
flds
add
mov
add
push
inc
aad
xor
add
mov
and
mov
sbb
imul
sub
push
jb
icebp
xchg
bound
mov
xor
add
dec
repz
inc
cs
cmp
add
lahf
add
nop
sub
imul
adc
sub
or
and
mov
je
inc
sub
pop
sbb
aam
lods
aad
inc
sbb
es
dec
or
pop
pop
inc
test
mov
inc
popf
xor
inc
add
aam
pop
mov
or
push
icebp
push
dec
in
push
sbb
mov
push
sbb
enter
mov
pop
aad
loopne
outsl
push
hlt
adc
dec
in
insl
outsb
mov
xor
push
or
sbb
and
rcrb
cwtl
rcll
sub
or
lahf
int3
dec
ljmp
in
imul
xchg
ja
mov
ror
scas
dec
pop
push
xorb
inc
aas
inc
stos
cmp
xor
notl
add
and
add
push
push
ret
mov
pop
push
sbb
ja
add
inc
cmpsl
mov
frstor
adc
push
adc
test
leave
jae
ljmp
push
and
inc
out
inc
cltd
pop
push
bound
loope
add
push
aad
les
add
aam
mov
jmp
inc
stos
push
popa
or
mov
mov
sbbl
jp
jmp
adc
pop
leave
mov
int3
adc
dec
sub
mov
or
inc
xchg
add
dec
fdivs
push
adc
and
into
adc
rolb
mov
jp
sub
xchg
add
cmc
lahf
mov
js
pop
or
pop
sahf
or
jns
push
sub
lods
add
xor
sub
push
inc
test
and
shll
loopne
arpl
pusha
sub
adcl
pusha
arpl
jl
in
add
mov
bound
or
outsl
push
add
les
mov
mov
sbb
stos
xor
add
test
dec
add
sbb
cmpsb
push
pop
mov
inc
mov
inc
movsl
or
lea
loopne
rcrl
jl
cs
cmp
cmp
push
add
mov
imul
or
iret
adc
sub
add
and
mov
inc
fwait
jp
sub
jns
fiaddl
dec
dec
bound
xorl
mov
les
inc
jnp
gs
xor
cmp
push
inc
dec
dec
loop
inc
push
mov
stos
fiaddl
and
cmpsl
lcall
sahf
fs
jecxz
push
imul
in
lods
popa
repz
jmp
push
add
lods
xchg
repnz
scas
outsb
jecxz
jo
cmp
or
add
xchg
dec
jg
movsl
cmp
subl
jo
adcb
inc
leave
imul
cmp
dec
mov
or
imul
mov
stos
lcall
mov
jnp
lahf
push
bnd
jno
and
xor
and
push
add
adc
add
ret
xchg
and
popf
cmc
rclb
loop
xchg
aas
fwait
rorb
cmp
jge,pn
mov
test
mov
pop
xchg
lock
jno
cmc
add
sbb
mov
shlb
cltd
jo
sbb
cld
inc
sub
push
add
xchg
mov
add
sub
inc
push
and
or
bound
dec
adc
movsb
mov
imul
mov
sbb
xchg
test
pop
add
push
inc
sub
inc
movsl
xor
jecxz
mov
rolb
addb
ret
insb
lods
and
inc
push
rorb
push
inc
mov
xchg
sub
dec
rcr
jno
pop
leave
orb
xchg
lahf
rol
cmp
cmp
xchg
mov
inc
mov
and
xorb
mov
add
aaa
inc
mov
xchg
imul
aas
scas
dec
dec
and
in
add
sub
and
push
mov
mov
sbb
insl
popa
push
ret
xchg
pushl
add
call
mov
bound
add
dec
outsb
mov
fldcw
pop
or
lods
out
push
xlat
or
je
dec
loope
repz
push
xchg
adc
adc
xor
scas
jecxz
pop
pusha
xor
add
and
add
pop
inc
add
movl
inc
xor
and
cmp
mov
jne
popf
addb
mov
inc
adc
dec
ret
push
fsubrl
out
xchg
xor
sbb
pusha
or
inc
adc
push
lock
pop
add
insl
inc
mov
nop
xlat
and
fbstp
adc
ja
iret
cs
push
daa
aaa
scas
jns
movsb
add
adc
sub
sbb
jnp
xlat
nop
mov
call
pop
cmc
test
sub
xor
cmp
int
ret
dec
inc
ljmp
cmc
ret
push
pop
push
cwtl
jne
insl
add
adc
add
xchg
xchg
or
inc
lea
adc
orl
and
inc
imul
ror
les
and
mov
pop
jbe
inc
dec
dec
cmp
lods
add
sbb
jge
sub
mov
push
xor
mov
daa
pop
adc
lcall
fs
les
test
dec
and
inc
sbb
add
push
into
pop
mov
jle
add
sbb
out
inc
bnd
mov
mov
inc
add
sub
mov
dec
mov
pop
inc
and
enter
aam
sub
adc
clc
inc
xor
inc
or
test
push
lods
scas
repz
in
add
xor
or
gs
filds
jg
shll
push
das
int3
lahf
mov
sbb
add
jo
jge
pop
pop
and
add
out
cmp
add
mov
arpl
inc
cwtl
push
jo
mov
stos
pop
xchg
inc
sub
lods
push
xchg
sbbb
cmp
clc
jg
pop
mov
inc
or
add
xor
dec
xor
adc
mov
aad
or
xchg
loope
dec
fmull
inc
adc
lock
push
sub
cmp
inc
aas
stos
push
push
xorb
inc
lds
int
sbb
push
cwtl
pop
or
and
in
inc
jecxz
sar
mull
dec
lret
xor
inc
and
and
xor
lea
dec
jno
in
jo
inc
or
lea
mov
or
hlt
cwtl
adcb
jge
ret
insl
pushw
sub
jmp
pop
ret
addr16
mov
bound
push
adc
test
inc
popa
add
xchg
or
add
add
mov
xor
add
sbb
insl
leave
inc
inc
sahf
pop
push
imul
mov
jb
add
rorl
aam
pop
add
adc
or
mov
and
push
and
xlat
mov
cmp
push
aad
rcll
cmp
cmpsl
and
jecxz,pt
mov
sub
rcll
pop
or
cmp
xchg
add
mov
xchg
mov
pop
and
add
loopne
adc
sub
movb
test
xor
push
pop
or
shll
or
sub
pop
popf
adc
and
or
inc
bound
and
mov
push
and
mov
adc
sub
test
inc
mov
lcall
sub
inc
std
mov
leave
cli
out
mov
adc
faddl
cmp
rolb
lret
or
inc
pop
push
ret
pop
aaa
xor
adc
add
add
shrb
popa
mov
and
xchg
mov
inc
sbb
pop
sbb
push
xor
sarl
sub
aaa
pop
push
xchg
add
std
jae
and
or
rorb
cmpsl
sub
dec
or
test
aas
and
mov
add
leave
jg
loop
inc
mov
add
mov
out
xor
test
mov
rorb
mov
sbb
cmp
loope
rolb
jecxz
and
xor
jge
xchg
stos
adc
add
gs
lret
pop
out
cwtl
fsubs
icebp
ret
adc
cmpsb
sub
mov
jb
pop
mov
push
cmc
mov
sub
nop
inc
push
sub
mov
test
sbbb
mov
adc
xor
pop
sahf
push
pop
test
or
inc
in
push
cmp
or
iret
add
pushf
cmp
or
jae
mov
sub
movsb
add
add
jo
and
dec
lods
add
and
or
mov
jo
movl
int3
nop
xchg
sbb
push
inc
xchg
rcrl
mov
inc
add
add
pop
adcb
xor
cli
xorl
add
in
iret
or
sub
imul
insl
jmp
and
xchg
adc
test
add
xor
sbb
and
adc
adc
inc
xor
in
xor
ret
stos
popa
and
inc
add
xor
mov
in
inc
mov
inc
and
inc
lods
cmc
aad
add
iret
xchg
or
add
push
mov
or
cmpsl
xchg
xor
stc
test
xor
mov
push
imul
sub
push
in
imul
adc
lods
xchg
adcl
xor
cmpl
cmp
push
leave
mov
add
mov
lcall
lea
sbb
add
dec
iret
xchg
xor
sbb
adc
ret
mov
in
xchg
push
adc
insl
mov
loope
sub
ret
sub
adc
xchg
mov
pusha
xorb
jns
loopne
mov
or
bound
mov
and
xchg
repz
je
add
cmp
fadd
and
or
push
pop
and
or
inc
adc
or
cmp
pusha
gs
sub
jns
or
adc
cwtl
shl
insb
adc
xor
push
jne
and
jae
xor
stos
pusha
xchg
mov
scas
imul
dec
adc
add
sbb
inc
rcrb
inc
pusha
popl
mov
cmc
or
add
subb
mov
cmp
dec
sbb
inc
shrl
test
addr16
test
pop
outsl
add
jb
repz
pop
movsb
add
mov
push
movsb
je
push
gs
jns
add
dec
dec
mov
int3
pop
xor
push
adc
mov
sbb
stos
or
mov
sahf
pop
add
lods
inc
mov
inc
lods
mov
outsb
lea
mov
pop
clc
push
ljmp
push
dec
rcr
and
test
enter
aad
push
nop
lds
je
rclb
shll
or
cli
push
add
pop
adc
add
or
jge
push
add
cmpl
rolb
pop
mov
add
adc
inc
push
nop
inc
xchg
jmp
xor
popa
imul
jae
or
mov
pop
test
insl
lds
add
inc
push
sbbl
mov
cwtl
push
adc
or
or
mov
jno
call
pop
lcall
inc
roll
nop
sub
jno
imul
adc
pusha
jne
dec
add
sub
jo
popf
mov
loopne
in
add
sarb
scas
xchg
jno
or
movsb
loop
cmp
test
lcall
mov
out
test
fwait
scas
xchg
cwtl
rclb
sbb
orb
rolb
xchg
adc
repz
push
mov
call
test
and
xchg
mov
rolb
mov
iret
adc
dec
das
xor
mov
mov
dec
fisttpl
aaa
dec
push
mov
mov
aam
lret
jmp
push
add
inc
cmp
movsb
inc
sub
dec
fwait
stc
das
add
sbb
fs
rorb
subl
cld
jns
stos
cmp
mov
sbb
bound
movsl
mov
dec
das
sub
xor
popa
dec
incl
push
mov
cs
shlb
test
add
mov
mov
cmpsl
dec
stos
adc
add
bound
jbe
xor
add
and
pop
mov
addl
pop
popa
add
push
jne
add
out
push
cmpsl
add
loope
xor
dec
adc
xor
dec
sbb
push
data16
sbb
test
inc
add
add
pop
xchg
cmp
or
jg
dec
cmp
or
shrl
adc
mov
or
push
lods
pop
push
popa
roll
add
xor
shr
popf
sub
mov
xor
xor
mov
pop
dec
xchg
jno
aam
int
arpl
test
leave
or
mov
and
and
adc
add
push
dec
pop
push
rolb
andl
mov
ds
movsb
inc
push
xorb
or
inc
ret
add
ja
fisubrl
shrl
or
icebp
add
xor
in
les
push
mov
dec
inc
gs
add
push
out
mov
inc
popl
cmpsb
sbb
jb
sbb
cld
out
sub
push
lea
cwtl
pusha
jmp
sub
shl
jl
xchg
sub
cmp
mov
sti
cmc
adc
jne
fucomi
adc
sbb
movsl
loopne
imul
jno
xchg
or
dec
mov
test
add
xchg
cmpb
push
or
dec
sub
add
jae
add
sbb
inc
or
dec
dec
jb
sbb
pop
jne
add
dec
dec
push
inc
outsb
or
xor
and
stos
pop
leavew
unpckhps
adc
test
dec
xlat
xchg
mov
add
scas
cli
push
push
push
movsl
out
pushf
inc
add
adc
adc
or
xor
call
adc
mov
daa
loopne
out
xchg
sub
cmpsl
add
xchg
cmpsb
sbb
fmull
xor
and
jecxz
and
test
xchg
xchg
inc
dec
inc
inc
push
push
mov
sbb
stos
sub
or
xchg
xchg
jmp
pop
add
xchg
xor
mov
or
lahf
add
mov
sub
cwtl
aam
rorl
rcl
inc
repnz
add
cwtl
or
ret
add
mov
test
call
inc
jmp
std
inc
dec
push
jo
push
jp
xor
cmp
int
ret
mov
arpl
xchg
push
and
xchg
push
jb
sub
jns
sub
and
mov
arpl
sar
add
sub
ds
icebp
add
push
mov
mov
movsb
dec
lock
mov
add
sbb
mov
jl
popa
sbbb
addb
call
sub
pop
roll
and
dec
addb
add
movsl
add
les
popf
dec
fldl
nop
imul
xchg
mov
add
adc
mov
sbb
test
adc
rclb
add
add
mov
cltd
rcrb
mov
mov
xor
adc
xlat
add
pop
test
xor
push
aad
mov
int
ja
nop
data16
pop
push
test
leave
jecxz
ja
dec
push
and
xchg
fs
stos
push
inc
pop
xor
mov
jmp
sar
les
add
sbb
lock
movsb
sub
dec
dec
repnz
add
mov
inc
xlat
push
push
sbb
push
addb
mov
xchg
sub
cmpsb
imul
sbb
xor
repz
push
rclb
gs
pop
leave
ret
nop
pop
rclb
add
rorl
scas
dec
adc
sbb
or
adc
clc
stos
sub
sub
xor
sti
mov
or
out
arpl
push
out
add
adc
and
aam
adc
mov
test
push
push
and
push
or
movsl
ss
add
add
mov
pop
aad
mov
mov
inc
push
sub
leave
fsubrl
cmp
mov
mov
add
dec
inc
stos
or
fnstenv
adc
sbb
xchg
lahf
lcall
dec
aam
inc
push
pop
mov
xchg
aam
mov
fucomp
call
fnstsw
jecxz
pusha
cmpsb
xchg
sbbb
add
aaa
add
mov
mov
test
popa
in
pop
or
loopne
mov
adc
or
jae
sbb
push
lds
inc
adc
aas
jg
xchg
addl
xchg
loopne
sub
pusha
aas
jne
pop
sbb
sub
and
sbb
cmp
pop
mov
xchg
ss
test
adc
xor
cmp
test
or
cmp
cs
stos
mov
pusha
dec
cmp
adc
rorl
adc
or
roll
arpl
and
addr16
repnz
cmp
dec
aaa
mov
xorb
pop
and
rolb
sbb
mov
in
addb
adc
pusha
pop
cmp
mov
xor
es
inc
or
clc
std
bound
xor
loope
jmp
aam
mov
add
orb
jecxz
xor
insl
ja
push
or
int
jecxz
jns
sbb
dec
dec
rclb
aad
or
sub
inc
add
fadds
mov
xchg
push
jbe
pop
jnp
sbb
cmp
fstpl
and
inc
repnz
or
rolb
test
jmp
aam
push
andl
or
cltd
sbbb
icebp
mov
add
push
and
inc
sbb
mov
or
mov
adcb
sbb
popa
inc
jmp
aas
rol
fs
mov
je
jmp
lahf
sbb
popa
call
inc
and
push
jno
pop
xor
add
lds
ret
add
repnz
and
fiadds
jnp
lods
cld
add
mov
or
and
adc
std
imul
stos
dec
sbb
push
jo
insb
roll
pop
inc
stos
fiaddl
xor
cmc
inc
iret
push
and
sbb
addl
arpl
movq
nop
sti
mov
clc
std
imul
repz
xchg
sbb
shlb
mov
inc
sub
addl
dec
xchg
push
sub
jmp
add
adc
xchg
jb
addb
lret
loopne
fchs
inc
or
addb
or
jb
or
cmp
inc
mov
xchg
push
cmp
cmpsb
ss
loop
push
jg
out
mov
and
xchg
les
les
xchg
out
cmp
scas
movsb
lcall
or
adc
push
and
xor
or
stc
sub
xor
movsb
push
inc
sub
or
mov
inc
xor
rolb
mov
or
and
popl
pop
sbb
mov
mov
scas
pop
pop
sbb
adc
adc
add
movsl
or
sbb
xchg
dec
cmpxchg
hlt
push
cmp
insb
sbb
pop
std
das
pop
xor
add
popa
fnsave
insl
adcb
add
imul
jo
lret
movsl
imul
or
ret
pop
leave
popf
xor
inc
add
add
adc
cmp
sbb
sbb
mov
shr
mov
test
lds
push
and
pushf
xchg
adc
scas
add
dec
cmpl
push
lods
or
imul
test
mov
test
push
sarb
loope
sub
inc
adcl
mov
adc
xlat
xorl
shlb
xor
add
jg
adc
sbb
daa
mov
add
add
nop
mov
cmp
test
aad
mov
and
inc
sub
add
repnz
cmpsl
mov
inc
popa
push
add
cwtl
or
test
dec
cmpsb
and
call
add
push
and
sbb
mov
aad
je
adc
test
jmp
mov
xor
xor
add
add
sahf
inc
movsb
xchg
cmp
les
jecxz
imul
mov
add
add
cli
sbb
dec
and
ja
sbb
add
inc
sbb
push
test
addl
test
in
add
sub
dec
andl
test
rcll
sbb
mov
test
scas
movsl
pusha
fsts
inc
dec
repz
aaa
inc
aas
push
jne
ret
sbb
push
add
or
adc
adcb
mov
inc
add
cwtl
popa
das
push
xor
push
sub
push
nop
push
mov
add
xor
invd
xor
cmp
sbb
lahf
lods
stos
movb
inc
xchg
cmp
jb
adcl
inc
aad
push
repnz
or
loop
aad
or
xchg
arpl
push
in
push
push
xchg
or
xchg
and
add
imul
mov
rol
jmp
inc
dec
sbb
add
shll
in
sub
pop
or
adc
mov
cmpl
adc
jns
push
add
or
jl
push
orb
push
or
add
inc
sbb
sub
push
xchg
fistl
jbe
mov
dec
stos
or
sbb
scas
add
push
cmp
aaa
add
mov
mov
sub
pop
lods
sbb
in
xchg
mov
dec
stos
push
push
popa
pop
push
insb
fldenv
add
xor
aad
andnps
scas
inc
inc
sub
pop
xchg
test
or
mov
mov
inc
xor
inc
mov
add
xchg
dec
sbb
push
xchg
aam
mov
les
jmp
movl
stos
push
lods
inc
mov
add
adc
imul
movb
jmp
mov
lods
adc
pop
enter
das
mov
mov
jp
sub
xor
add
lret
mov
add
fcomps
loope
mov
call
popa
push
sub
add
add
xchg
jnp
jo
les
adc
sbb
std
inc
push
mov
ljmp
push
jo
push
daa
cmpsl
subb
lods
aaa
sub
dec
test
pop
cli
gs
inc
pop
xchg
sbb
aad
sbb
mov
lods
sbb
es
icebp
push
pop
shlb
or
out
xchg
sub
adc
sub
aad
jmp
hlt
jmp
data16
pop
mov
add
cmp
addl
push
popf
jecxz
test
iret
xor
in
mov
imul
ret
in
sub
add
mov
xchg
subb
mov
mov
and
ss
sub
push
and
pop
push
add
sbb
out
mov
addb
mov
stos
dec
add
loop
add
inc
add
lcall
rcrb
in
jo
inc
xchg
push
cmp
dec
inc
inc
pop
test
dec
inc
ret
sub
fwait
pop
add
roll
add
sub
cmpsb
push
mov
scas
loope
dec
sbb
movsb
adc
or
adc
mov
mov
scas
shrl
insl
sub
mov
adc
adc
inc
xor
pushf
xchg
sub
inc
cmc
add
add
or
aam
aam
xor
inc
cmpsl
add
inc
dec
mov
dec
add
inc
fldl
inc
or
bound
cmc
push
mov
inc
and
jmp
lock
or
imul
mov
rcrl
lods
std
jbe
inc
add
popa
adcb
inc
cmp
cld
pop
inc
sbb
stos
mov
or
cmpsl
into
aad
and
add
pop
add
shlb
push
mov
inc
aas
ss
pop
mov
or
dec
sbb
xchg
push
or
mov
mov
sub
and
push
test
and
mov
and
cmpsb
cmp
inc
repz
jo
cmp
aaa
xor
pop
incl
xorl
add
dec
pop
adc
filds
xchg
push
imul
push
mov
popl
add
cmp
ret
mov
nop
daa
xchg
push
jge
xchg
arpl
mov
stos
adc
jle
or
and
cmc
or
mov
aam
aaa
mov
pusha
mov
bound
nop
stos
mov
add
xor
or
and
outsl
or
push
sub
fiadds
xchg
sbbb
adc
movsl
addb
in
out
cmc
lods
pop
bound
bswap
adcb
push
jo
cmp
jmp
add
flds
loopne
addl
daa
add
imul
sub
push
mov
or
stc
addb
arpl
bound
iret
lret
sub
or
adc
lds
scas
or
add
lea
jne
mov
add
test
add
add
push
or
inc
jnp
enter
add
add
out
add
or
and
dec
adc
mov
sub
pop
push
shll
into
sub
dec
int
pop
mov
xchg
cmp
in
jge
loopne
cmc
stos
inc
adc
stos
inc
add
test
adc
daa
cs
or
inc
outsl
xchg
lds
adc
call
dec
or
dec
cltd
sarb
xchg
cwtl
and
mov
sbb
cmp
or
icebp
adc
cmp
and
pop
lock
or
loope
pusha
jecxz
aam
push
test
add
popa
push
imulb
sahf
dec
push
cmp
add
inc
add
push
sbb
jno
and
dec
sar
sbbl
rclb
jp
add
mov
xor
pop
jne
cmp
test
mov
cwtl
stos
icebp
cs
test
shlb
subl
js
add
sub
sub
in
mov
fsubp
cwtl
xchg
mov
and
cld
movsb
sbb
lahf
outsl
add
add
push
add
xchg
inc
int3
mov
jge
or
add
inc
adc
jne
sbb
add
mov
inc
dec
jle
inc
mov
and
sbb
movsl
cs
and
sub
cwtl
add
mov
jns
add
pusha
add
dec
adc
out
adcl
and
xor
jg
and
sbb
inc
inc
or
andl
mov
inc
sbb
or
pushf
jbe
cmp
add
int
pop
sub
lods
inc
push
add
mov
test
mov
in
mov
xor
lret
ret
push
dec
push
xor
jp
movsb
push
cwtl
fisttps
xchg
jne
or
adc
cmpsl
inc
fistl
mov
mov
add
sbb
arpl
ret
and
mov
fldl
push
test
mov
rolb
or
loope
lods
cmp
mov
xor
push
xchg
xchg
cmpsl
jge
xchg
sahf
xchg
xchg
lahf
add
getsec
scas
sbb
imul
sub
dec
sbb
xor
inc
adc
inc
pop
cld
smsw
imul
sbb
cmp
ljmp
ljmp
mov
inc
imul
add
or
adc
es
loopne
pop
mov
cwtl
dec
push
ds
popa
sti
dec
popa
orb
jl
pop
adc
shll
std
rclb
and
orb
or
mov
cmp
push
nop
inc
push
ret
cmp
mov
xor
xchg
dec
sbb
rclb
fwait
imul
cmp
mov
add
movsl
dec
lods
cmpsb
lods
or
outsl
inc
add
icebp
push
or
add
add
mov
fadd
rorl
repz
das
fldt
push
or
inc
and
add
push
outsl
sub
add
inc
scas
mov
adc
or
dec
add
scas
popf
push
mov
push
repz
fnstsw
adc
sub
inc
xlat
adc
out
add
jecxz
or
add
push
inc
out
aas
add
cmpb
out
test
xchg
nop
xor
add
cmp
cmp
xlat
xor
push
add
pop
mov
adc
mov
in
pop
movsl
add
loope
mov
or
cmp
std
mov
jge
andb
out
jge
inc
sub
xchg
xor
ds
cli
xchg
leave
cmpsb
push
jecxz
loope
call
aad
adc
test
xor
arpl
dec
bound
pop
sub
test
and
mov
or
pop
sbb
dec
add
sbb
cs
gs
mov
push
shlb
movsl
xchg
xchg
sub
dec
dec
aaa
xchg
mov
cs
std
sub
mov
add
sub
dec
adcl
mov
or
or
pop
int
push
out
call
lods
adc
or
rcrl
mov
ret
sbbb
mov
or
insb
fistl
mov
testl
pop
xor
push
fcoml
push
mov
pop
jo
int
imul
mov
lret
clc
ret
inc
sub
xor
sub
mov
inc
push
push
add
fwait
sbb
lret
sbbb
mov
or
and
shrl
xadd
jmp
mov
push
cs
fistpl
xchg
push
push
sbb
lahf
movsl
movsl
add
add
addr16
add
xchg
cs
pop
hlt
push
sbb
js
shlb
push
scas
cmc
lods
mov
sbb
jbe
jecxz
mov
add
and
push
ror
add
add
sbb
inc
jp
cs
inc
nop
push
popf
xchg
or
outsl
mov
ror
and
jo
add
push
xchg
sub
mov
lea
shrl
adc
cli
test
rcll
jmp
inc
xor
cmpsl
push
and
pop
push
mov
mov
shlb
dec
adc
decl
push
jmp
xorb
addr16
cmpsb
cs
xor
aam
inc
out
push
pusha
xlat
mov
out
xor
push
mov
arpl
or
scas
pop
arpl
dec
sub
add
sub
push
insb
pop
and
dec
movsb
shll
test
mov
xor
test
movsl
add
clc
test
orl
add
leave
jb
inc
dec
adc
stos
mov
add
xor
push
out
std
dec
xor
repnz
shrb
push
mov
lret
or
adc
dec
mov
push
stc
fldcw
xlat
xor
je
add
add
and
mov
pop
je
mov
pop
jl
xchg
mov
push
insl
cmpsl
rcrb
push
push
push
cmpsl
xor
and
cwtl
dec
sbb
repnz
push
nop
shrl
cmp
jb
xor
sbb
dec
shlb
fldt
dec
adc
int
xor
inc
push
xor
nop
inc
inc
mov
mov
mov
push
and
xor
add
inc
mov
cmpb
mov
or
push
shrl
adc
or
jns
or
dec
pop
out
push
xchg
movsb
test
jne
xor
sbb
insl
adc
push
adc
jmp
jnp
dec
inc
add
aam
add
daa
inc
loope
sub
pop
cmp
or
daa
dec
adcb
lcall
es
movsb
push
fistps
fdivl
sbb
les
xor
xchg
or
jno
mov
aas
in
bound
dec
inc
xchg
jecxz
push
test
lods
adc
mov
push
test
dec
aaa
jo
mov
mov
adc
xor
push
xor
and
push
push
xchg
stos
add
aam
subb
cmp
addr16
mov
inc
mov
test
jg
mov
das
test
push
mov
sbb
jmp
adc
sub
xlat
mov
stc
pop
aaa
xor
jl
pop
mov
add
adc
jae
fstl
sub
gs
lds
mov
mov
add
mov
push
stos
add
dec
adcl
inc
dec
adc
adc
rorl
lea
dec
push
push
ret
mov
lds
add
testl
and
sbbl
sub
addl
add
gs
push
and
adc
pop
rol
add
push
test
inc
icebp
adc
mov
daa
inc
xchg
dec
mov
cmp
pushf
std
cmp
adc
mov
and
repnz
mov
or
inc
test
scas
in
rorb
push
dec
or
mov
sbb
les
add
and
nop
out
enter
mov
nop
xor
add
push
pminsw
lock
fadd
aad
fadds
es
pop
stos
inc
mov
sub
jecxz
cmp
stos
dec
sbb
movntq
and
jnp
add
iret
stos
xorl
inc
test
mov
loopne
or
dec
ss
dec
push
xor
mov
out
adc
es
test
loopne
cmpsl
inc
and
rorb
mov
mov
cmp
mov
push
cmp
rclb
ss
stos
xchg
out
push
mov
ret
mov
enter
mov
push
add
add
jg
push
adcb
xchg
jno
and
or
lcall
or
or
jecxz
pop
add
mov
movsl
mov
adc
sub
adc
sbb
add
in
aad
add
mov
cmp
movsl
scas
mov
mov
inc
lahf
mov
sub
pop
push
in
add
jecxz
add
rcrl
ret
mov
adc
pop
inc
adc
add
xchg
orl
push
cmc
or
add
nop
addr16
int3
jns
xor
adc
add
andb
push
sub
and
shlb
mov
pop
xor
mov
sbb
lods
add
add
add
lcall
add
cmp
or
xor
scas
mov
mov
mov
jae
rcl
mov
mov
movsl
idivl
or
adc
xor
icebp
xchg
popa
leave
mov
xor
test
std
adc
cmp
mov
addl
pop
xchg
mov
mov
lea
test
ret
push
mov
or
pop
loopne
cmpsb
mov
aas
sbb
loopne
imul
add
popf
dec
lret
inc
scas
push
mov
nop
xlat
enter
arpl
xchg
js
inc
inc
add
mov
inc
dec
or
notl
sub
nop
inc
adc
adcb
or
pop
aad
pop
dec
scas
test
mov
arpl
ljmp
je
pop
xor
mov
mov
sub
dec
and
test
out
addl
imul
mov
cs
mov
add
push
mov
adc
add
js
shl
add
jo
rclb
push
xor
lahf
sbb
add
adc
sahf
pop
mov
lahf
ljmp
and
dec
sub
push
mov
nop
test
mov
dec
cmpl
or
xchg
pop
inc
add
out
adc
or
dec
mov
push
clc
or
outsl
stos
es
daa
pop
adc
out
iret
daa
je
push
or
and
les
adc
rol
popa
xor
int3
pop
sub
stos
jns
sbb
push
out
or
int
lahf
pop
or
sbb
add
test
pusha
inc
add
cltd
and
cmc
sbb
cmc
cwtl
loopne
or
mov
xor
inc
imul
adc
outsb
add
mov
loop
hlt
in
add
dec
inc
or
movsb
mov
pushf
cmp
shrb
add
add
sbb
or
addr16
rep
cltd
cmpsb
adc
sbb
mov
outsl
push
push
ret
xor
pop
xor
stos
icebp
insb
jecxz
or
insl
cmpsb
pop
cmp
sub
fmul
int
cmp
or
jno
or
inc
sti
add
dec
enter
add
sbb
stos
adc
movsb
jns
fildl
lds
mov
movsl
xchg
add
push
ljmp
out
mov
inc
adc
rcll
adc
jnp
push
mov
and
cmc
add
dec
or
imul
mov
mov
lods
sub
lea
or
outsl
test
mov
dec
inc
mov
jne
loope
push
jmp
jle
rcll
mov
orl
aas
jge
add
ja
lret
or
pusha
sbb
or
or
daa
stos
dec
adc
jmp
push
add
movsl
add
test
or
or
push
mov
sub
add
xchg
push
cmp
add
movsl
xchg
sahf
inc
mov
inc
leave
adc
mov
xor
push
rclb
mov
mov
stos
ficompl
outsl
pusha
mov
in
in
push
test
sub
stos
sarl
mov
pop
sbb
test
rcl
or
push
test
je
adc
sub
pop
lcall
jne
or
push
int
je
inc
xor
mov
in
lods
rorl
lcall
push
and
add
cmp
test
xor
inc
push
and
adc
mov
out
leave
or
push
add
cmp
imul
stos
and
insb
roll
lds
add
lods
cwtl
andb
add
call
dec
add
add
push
push
inc
aam
jo
mov
adc
inc
mov
lea
add
xorl
xor
aam
inc
insb
or
loopne
lahf
add
es
mov
mov
fs
add
das
add
ret
lcall
nop
out
stc
push
icebp
adc
xchg
push
or
jne
mov
xchg
or
fildl
lds
jo
jmp
add
inc
loop
test
cmpsl
dec
pop
lcall
xor
or
sbb
rolb
and
imull
pop
pop
sub
mov
inc
outsl
push
test
stos
arpl
or
add
mov
je
or
push
add
and
stos
push
or
fwait
push
xchg
inc
mov
or
ficoms
xchg
aaa
xor
stos
insl
jno
dec
adc
nop
setno
pusha
orb
movhps
or
add
add
aam
mov
test
scas
pop
inc
aaa
jne
jne
cmpsb
or
call
pop
sbb
rclb
fpatan
scas
and
add
cmpsl
andl
daa
jae
es
sub
adc
add
xlat
enter
sbb
insb
rorl
loope
mov
ret
sbb
mov
sbb
popf
pushf
jbe
out
nop
sub
mov
cmp
pop
mov
adc
inc
dec
push
pop
dec
sbb
pop
je
sbb
xchg
jp
mov
mov
repnz
jns
xchg
adc
frstor
push
pop
adcw
shll
dec
pop
int3
dec
fdivrs
xor
out
movsl
aam
sbb
cmp
and
pop
loopne
and
add
sbb
sub
xchg
jns
imul
and
xor
outsl
sub
mov
add
bound
sbb
adc
test
and
add
les
ror
sub
pop
add
push
fdivl
cmpsl
sbb
inc
test
movsb
fldl
pop
fs
jmp
call
add
in
xchg
pop
test
test
pop
or
dec
cmc
add
cmp
rclb
shrl
xor
add
or
ret
test
leave
sbb
mov
insl
dec
clc
das
sub
dec
mov
jge
dec
or
aad
fwait
incl
pop
mov
or
pop
push
cltd
jmp
mov
inc
lods
in
pop
lds
push
jmp
out
dec
cs
mov
xchg
jne
mov
rcrb
add
mov
jo
mov
lds
rolb
and
jmp
and
xorb
jnp
rolb
cmpsb
add
xor
nop
or
dec
pusha
test
adc
adc
xor
push
jb
xor
mov
in
jns
fsub
or
lcall
push
or
pop
push
push
add
popf
pop
mov
or
mov
push
fcoml
jnp
mov
test
mov
and
add
rorb
or
and
or
jae
or
and
mov
mov
test
add
jns
repnz
xor
pop
lds
sarb
push
leave
repz
imul
add
dec
pop
add
or
and
adc
push
loope
movsl
inc
shrl
mov
mov
popa
cmc
addl
push
pop
xchg
dec
xor
stc
pusha
add
xchg
dec
xlat
mov
int
inc
pusha
shll
add
jg
jne
rol
jo
push
xchg
ss
jo
sub
leave
pop
dec
les
addr16
xor
orb
insl
add
imul
insl
pop
imul
xchg
aad
insl
cwtl
jbe
pushf
push
xor
dec
sahf
outsl
sbb
push
or
test
rcrl
and
ret
aas
mov
add
adcl
or
or
or
or
dec
adcb
in
xchg
nop
fnstcw
xlat
xor
leave
push
xchg
push
xlat
ss
loopne
inc
push
add
add
rcll
add
mov
sbb
movsl
fwait
aam
xor
or
add
mov
test
xchg
test
outsl
lock
imul
mov
dec
inc
lods
leave
and
xchg
add
dec
sbb
and
sbb
cmp
in
dec
and
cli
jmp
push
or
mov
rcll
inc
aad
jns
or
inc
mov
or
mov
sahf
ret
pusha
dec
pop
sbb
inc
pop
adc
ljmp
sti
bound
xor
add
push
cltd
adc
xchg
imul
sbb
mov
push
or
repnz
inc
movsl
insb
cmp
test
adc
pop
xor
int3
pop
xor
mov
mov
pop
aad
ret
inc
xor
push
inc
xchg
or
and
and
test
cmp
push
sub
pop
add
push
push
dec
mov
inc
mov
rclb
add
and
imul
mov
and
add
mov
push
jne
test
mov
test
cmp
cmp
add
dec
mov
es
and
aad
inc
add
inc
scas
push
mov
and
mov
daa
popf
hlt
insl
dec
xchg
xor
jo
sub
mov
cmpsb
mov
stos
mov
xor
pop
add
push
push
xchg
or
lods
inc
sahf
addr16
and
add
adc
lock
push
nop
addr16
adcl
jne
bound
in
movswl
jbe
decl
or
adc
xchg
imul
jo
sbb
inc
sahf
mov
xor
cmp
leave
push
dec
nop
or
or
shlb
add
mov
sbb
shrb
enter
inc
pop
pop
imul
in
mov
pop
insl
popa
dec
mov
enter
orb
test
fs
inc
or
xchg
xchg
mov
test
sbb
push
and
jne
sub
mov
add
sub
outsb
arpl
inc
adc
add
sbb
test
scas
das
lods
sbb
cs
jb
repnz
pop
mov
mov
ficomps
add
dec
cmp
pusha
sbb
xchg
push
sub
mov
cwtl
and
cmp
rorb
nop
pop
addr16
and
xchg
fwait
xchg
lret
addb
push
mov
sub
ret
stc
cwtl
push
and
test
xor
stc
test
adc
stos
imul
gs
inc
adc
jo
inc
rcll
or
outsl
add
bound
xchg
xchg
andb
mov
insb
adc
jmp
add
rclb
test
cmp
cmp
xchg
and
pusha
push
gs
and
sub
jo
mov
rol
inc
lods
pop
cmpsb
cmp
jne
mov
loopne
adc
mov
pop
xor
test
jl
sbb
jne
push
or
sbb
aam
adc
out
test
adc
pop
inc
sbb
xchg
push
test
loope
mov
jnp
push
es
test
shll
sarl
outsl
add
iret
movb
mov
pushf
lods
push
xor
scas
add
or
push
inc
jae
jns
andl
outsl
leave
test
sub
inc
add
fcmovb
push
fucom
ljmp
push
imul
out
push
in
insb
push
lret
or
xor
or
daa
inc
add
es
aam
andl
jg
in
xorb
out
pop
mov
add
out
mov
pop
xchg
filds
or
and
pop
sahf
insb
mov
mov
in
pop
inc
inc
push
dec
pop
sbb
fidivs
push
xlat
movsl
inc
ret
sbb
inc
sbb
fwait
and
xor
rorb
hlt
sbb
and
sbb
cmpsb
adc
pusha
add
cmp
test
mov
nop
out
adc
xor
sub
daa
sub
mov
imul
and
and
xchg
in
adc
subb
jne
mov
arpl
push
xor
pop
dec
mov
les
push
jbe
mov
cmp
xlat
push
pop
inc
sbb
cmc
cmp
gs
enter
sahf
pop
or
movsl
inc
dec
in
jns
inc
rorb
movsl
lcall
iret
mov
sbb
push
les
gs
outsb
jo
rolb
rsm
inc
test
xor
xor
std
mov
addb
addr16
aaa
daa
out
push
enter
add
add
es
and
orb
inc
inc
and
xchg
dec
sub
cmp
and
adc
out
add
add
daa
and
imul
inc
lods
jo
je
dec
daa
pushf
mov
out
arpl
mov
fistpl
inc
inc
popf
je
mov
leave
iret
sbb
les
scas
in
pop
adc
cmpsl
xlat
aaa
insb
mov
mov
push
jecxz
push
scas
insl
inc
push
add
aaa
push
out
xchg
xor
mov
addl
loop
push
rorl
and
and
enter
adc
dec
imul
orb
addl
fidivrs
movsl
dec
popa
add
push
adc
mov
jmp
cmpsb
loopne
mov
adc
cmp
push
fsubrs
das
pop
rclb
dec
ss
adc
sti
add
xor
adc
scas
nop
out
inc
or
cmp
cmp
xor
inc
pop
xor
arpl
lea
or
cwtl
inc
mov
pop
movsb
stos
sbb
jno
mov
xor
fisttpl
xor
adc
or
adcl
insl
adcb
or
loop
xchg
popf
jmp
sbb
inc
sub
bound
daa
xor
stos
loop
xchg
aam
push
dec
inc
adc
add
xor
sub
mov
dec
add
rolb
xchg
std
jp
push
or
mov
add
dec
jno
mov
mov
and
mov
jbe
popa
add
sbb
je
push
jmp
add
and
add
and
mov
xchg
out
popa
ss
xchg
inc
sbb
negb
pop
push
sbb
mov
lcall
cltd
sbb
add
sbb
inc
add
jne
push
inc
loop
sub
or
inc
pusha
adcb
or
add
movsb
sbb
mov
and
inc
xchg
leave
rcll
or
or
adc
mov
dec
sahf
adc
int
arpl
aad
stc
into
mov
sbb
cwtl
test
xlat
mov
movsw
bound
ja
push
and
aam
jae
push
sub
dec
push
cmp
sbb
fwait
mov
and
aaa
call
ja
rolb
mov
add
xchg
out
sbb
add
jecxz
inc
or
mov
mov
xchg
je
sbb
sahf
in
jae
pop
push
dec
xor
aad
adc
adc
lcall
inc
xor
xchg
sbbl
mov
push
jecxz
and
sub
cmp
aaa
es
jmp
sub
ljmp
subl
mov
cmp
je
popa
mov
adc
adc
lea
xor
jmp
dec
mov
dec
or
dec
cmc
mov
xchg
add
aaa
test
movsl
add
or
sbbl
cs
dec
jge
addb
inc
jmp
imul
sub
xchg
add
test
jecxz
push
pusha
aam
int3
adc
shrb
and
add
or
cmp
sub
dec
add
loopne
inc
adc
imul
xchg
inc
outsb
push
pusha
incl
outsb
jecxz
cmp
xchg
mov
sbb
adc
subb
jmp
dec
mov
mov
inc
shlb
adc
rcll
pop
push
xlat
add
adc
adc
addb
sbb
dec
sub
stos
add
aad
or
cmpsb
cli
ja
or
mov
inc
je
sbb
ss
push
add
add
cmc
adc
mov
cmpsb
dec
dec
imul
shrl
pop
nop
addr16
push
cmp
xchg
jae
inc
cvtdq2ps
pop
lods
adc
jne
add
adc
sub
popa
shrb
daa
mov
or
sbb
nop
adc
push
xor
pop
in
inc
inc
xor
pop
xchg
insb
mov
and
mov
pop
loopne
pusha
lock
stos
add
sub
pop
inc
aam
adc
cmpsl
fcompl
inc
cs
adc
scas
mov
add
mov
push
and
mov
stos
add
fistpl
and
dec
sbb
pusha
addb
insl
out
add
add
stos
out
jecxz
add
iret
or
adc
or
mov
push
xchg
insb
loopne
test
mov
inc
add
outsb
out
std
sbb
sub
imul
sbb
cmp
in
mov
fldl
js
rclb
sbb
hlt
ret
stos
sbb
jg
mov
or
test
and
filds
jno
inc
push
dec
mov
push
iret
lea
scas
and
add
push
mov
mov
sbb
add
sub
loope
xchg
dec
and
addr16
rcrb
out
scas
and
and
add
xchg
inc
shr
adc
dec
les
adc
sti
cmp
mov
sbb
mov
dec
enter
fnstcw
mov
jb
inc
fbstp
xchg
pop
xor
mov
cmp
test
dec
jns
pop
das
pop
je
jae
sub
repnz
push
jbe
cmc
xor
lea
sub
and
iret
adcb
xor
xchg
dec
push
dec
push
and
pop
ds
or
xor
dec
mov
inc
xchg
inc
test
test
fwait
xchg
shlb
mov
mov
into
mov
mov
movsb
cmp
lahf
or
sarl
popa
das
pop
addr16
jo
orb
and
jg
sub
dec
aaa
add
mov
or
push
jne
xor
lds
and
daa
ret
lock
dec
mov
stos
fnstcw
filds
or
adc
jae
inc
jmp
and
cmpsb
add
adc
mov
test
or
jnp
add
jns
icebp
ljmp
cwtl
nop
addr16
mov
mov
loopne
inc
jg
icebp
or
test
add
lea
popa
mov
dec
sbb
js
popl
adc
rsqrtps
sbbb
pusha
add
push
mov
adc
aam
mov
rclb
push
lret
movsl
inc
adc
mov
add
adc
push
sub
mov
inc
fldl
gs
popa
lods
or
push
mov
insl
add
or
sbb
pop
cmp
sub
roll
xchg
inc
jo
pusha
pop
pop
test
mov
push
xchg
and
mov
push
subb
xor
xor
stos
sbbl
mov
leave
inc
jle
add
nop
xlat
cmpsl
pop
jo
add
mov
incl
fimull
mov
adc
adc
add
xchg
jg
push
xchg
adcb
inc
jae
pusha
leave
test
out
push
lcall
aam
sbbl
leave
in
leave
inc
jp
mov
addb
jns
dec
out
loope
ds
and
lret
or
addr16
cmp
dec
push
pop
dec
cwtl
mov
dec
scas
xor
jne
sbb
test
add
aaa
pop
movb
sub
adc
add
inc
dec
inc
dec
in
push
mov
xor
or
addl
rolb
hlt
nop
jo
je
inc
stos
inc
pop
mov
mov
rolb
xor
int3
scas
sbb
jbe
addr16
add
pop
jae
add
popa
fists
imul
mov
push
push
leave
xchg
mov
daa
cmpsl
movsl
xchg
pop
sbb
icebp
icebp
inc
xor
fsts
cmpb
mov
sti
mov
loopne
sbb
adc
mov
jo
mov
pop
adc
sbb
aad
and
cmpsb
cmp
xor
inc
sub
mov
xor
push
loop
mov
cltd
inc
fdivl
sbb
push
dec
inc
push
enter
dec
mov
test
notl
add
xor
xorb
push
stc
jns
adc
or
cwtl
imul
or
pop
leave
scas
test
andb
ljmp
xlat
add
push
nop
out
rcll
xchg
push
sbb
pextrw
nop
xchg
stos
add
cwtl
sbb
push
xchg
push
stos
dec
adc
test
mov
jno
cmp
iret
and
rolb
faddl
imul
dec
outsl
cmp
and
cmp
mov
pop
jmp
leave
push
mov
loope
add
ret
push
je
add
jp
adcb
add
and
push
sbb
xor
and
adc
lea
or
shlb
push
add
shrl
jbe
fiaddl
add
push
rolb
xchg
inc
or
inc
aad
lods
xchg
dec
popa
cmp
leave
out
xchg
jl
pop
test
rolb
cmp
cmpsb
jne
xor
push
fldenv
sbb
xor
cs
cmpsl
nop
push
das
push
inc
push
add
xlat
pusha
addb
aas
out
pop
add
push
shl
or
inc
into
cli
inc
mov
xor
mov
outsl
add
mov
stos
xchg
inc
add
lds
mov
mov
sahf
mov
push
lcall
mov
and
roll
adc
mov
sbb
push
inc
or
add
and
sub
inc
jecxz
popa
les
push
filds
dec
sbb
shll
dec
xchg
aad
jmp
mov
pop
xor
push
dec
inc
or
mov
mov
sbb
ret
add
dec
xchg
and
push
nop
push
push
fwait
sahf
dec
adc
in
mov
and
pushf
push
add
push
jb
fs
and
add
push
stos
mov
mov
add
and
sub
push
mov
and
cwtl
xor
leave
jge
rclb
daa
stc
mov
xchg
shll
addb
inc
lret
cmp
mov
sub
cltd
dec
or
xor
adc
xor
dec
pop
mov
add
das
or
cmp
jecxz
add
mov
and
dec
aad
dec
cmpl
inc
add
imul
or
or
addl
xchg
adc
mov
sbb
je
shrb
dec
pop
mov
ljmp
xor
bound
xchg
dec
icebp
push
sar
push
xchg
mov
inc
jp
or
or
imul
mov
add
pusha
mov
sub
pusha
push
in
mov
push
push
decl
daa
dec
sbb
jns
push
add
inc
lahf
and
cs
add
xchg
int
or
pop
xchg
pusha
imul
movsb
add
fisttpll
push
mov
push
sub
and
mov
jb
dec
sub
mov
icebp
add
add
mov
sbb
clc
push
add
or
jns
rclb
add
add
sub
xor
xchg
inc
popa
aad
in
and
jmp
cmp
and
and
dec
mov
push
dec
stos
iret
mov
adc
daa
jo
aas
cmp
push
je
pop
mov
inc
xor
sbb
inc
pop
cmp
xor
shlb
xchg
cmp
jne
or
and
jns
iret
fidivs
in
int
mov
les
adc
shll
int3
or
nop
movsl
jno
jno
fs
mov
pop
pop
push
xchg
push
cwtl
adc
and
xchg
in
pop
std
add
and
arpl
sub
cmp
add
repz
xchg
stos
xchg
cmp
sub
fwait
xor
and
jb
sub
push
insb
sub
bound
repnz
ljmp
test
test
syscall
adc
dec
add
dec
push
mov
pop
lret
jns
loopne
add
cmp
sbb
add
or
in
loop
jno
leave
cmc
pop
xorl
lcall
arpl
dec
movsb
xor
lret
dec
data16
sbb
xchg
adc
xor
stos
push
push
inc
incl
xor
in
inc
out
mov
pop
push
cmc
enter
xchg
jo
dec
inc
adc
lods
xchg
pusha
sbb
and
mov
xor
mov
cmp
or
ja
dec
dec
and
outsl
lret
jae
add
in
dec
ret
lcall
and
mov
mov
mov
add
or
sahf
rcl
push
and
nop
dec
push
add
movb
push
pop
jo
pop
xlat
cs
jne
push
jmp
or
lods
xchg
xchg
push
xor
dec
movsl
mov
dec
aad
xchg
push
and
movl
pop
push
addl
sub
mov
or
inc
dec
dec
mov
add
lahf
xchg
call
imul
inc
dec
arpl
scas
sahf
add
loopne
push
mov
adc
aas
sbb
mov
mov
or
imul
push
daa
pop
and
adc
inc
leave
cmpsb
loope
adc
sbb
insb
out
mov
mov
push
and
push
mov
rorb
sbb
mov
out
add
nop
add
mov
xchg
ret
push
fdiv
ret
push
or
adc
int3
and
add
push
pop
mov
xor
je
xchg
pop
gs
cmpb
arpl
nop
cmp
jns
jne
add
xor
dec
pop
xchg
fwait
cmp
mov
movsb
cmpsb
xorl
jg
jmp
pop
adc
imul
subl
sub
cmp
add
ja
mov
arpl
cmp
rorb
ret
pmulhw
xor
jno
das
pushf
xchg
push
sbb
pop
outsb
mov
dec
std
lahf
test
movsl
stos
push
shlb
inc
pop
add
add
xchg
loopne
jmp
mov
iret
lret
xor
rolb
fldcw
adc
cmpsl
dec
mov
js
mov
xchg
sbb
int
aam
test
or
in
and
dec
mov
imul
pop
scas
popa
pusha
add
aad
or
or
icebp
cmp
dec
movsb
mov
mov
gs
jmp
xlat
add
int
xor
test
add
jno
mov
cmp
mov
xchg
sbb
jl
or
or
sarb
orb
lret
cmpsb
mov
aad
pop
dec
add
aam
jmp
dec
inc
inc
adc
mov
adc
sbb
adc
pop
or
xchg
push
into
xor
xor
popa
mov
pop
in
mov
add
adc
xchg
adc
mov
cmp
orb
mov
ret
pop
hlt
adc
push
or
test
arpl
and
sbb
dec
scas
xor
xlat
xchg
jecxz
es
dec
add
mov
add
orb
arpl
shlb
bound
or
add
xor
mov
or
or
pusha
and
outsb
adc
cmp
adc
jne
shr
sbb
inc
adc
cmpsb
stos
cmp
ljmp
inc
aad
sbb
clc
out
test
push
enter
xchg
sbb
je
ja
dec
dec
sbb
dec
aaa
add
leave
inc
and
push
xor
sbb
cmpsb
push
inc
outsl
and
cmp
mov
mov
or
xlat
gs
mov
push
or
xor
xorl
shlb
pop
or
addr16
add
inc
daa
inc
sub
nop
arpl
sbb
jae
pop
pop
sar
mov
push
xor
decb
and
xor
test
movsb
mov
and
mov
jmp
mov
test
and
add
imul
repnz
roll
cltd
or
rorb
sbbb
dec
pop
scas
mov
stos
ss
mov
call
mov
xor
jo
mov
mov
popa
or
aam
add
call
loopne
and
ss
sub
or
or
mov
sub
cmp
mov
mov
cmp
push
add
xor
je
test
stc
push
mov
iret
insb
ljmp
das
pusha
stc
rolb
daa
adc
pop
adc
pop
addb
xchg
pop
and
rclb
movsb
mov
mov
and
test
notb
aad
cmp
push
push
xorb
sbb
in
sub
jae
sbbb
fst
jmp
xchg
popa
sbb
aam
xchg
mov
jno
push
inc
fwait
movsl
fldl
adc
lcall
mov
xlat
and
daa
push
add
inc
xor
inc
mov
xchg
out
ror
jg
jb
add
cwtl
add
out
loop
dec
or
mul
imul
push
insb
and
les
pushl
ret
jo
sbbb
sarb
sbb
or
mov
mov
inc
test
es
pushf
push
xor
add
xor
xchg
addr16
add
push
inc
fbld
or
jmp
push
enter
arpl
jae
push
sbb
sbb
cmp
mov
sbb
xchg
add
and
and
mov
mov
push
movsl
or
cmp
add
xchg
int
push
push
movsb
inc
sub
rolb
xchg
lahf
fisttps
add
pop
jo
pop
sar
push
and
ja
daa
sub
sbb
sbb
pop
fldl
scas
inc
enter
popf
jecxz
or
ret
dec
sbb
cmp
and
insl
and
cmpsl
es
imul
mov
and
dec
sub
adc
xchg
or
jnp
add
jo
pop
adc
roll
and
push
cwtl
dec
and
and
sbb
test
push
xor
push
leave
xchg
pop
and
fistpl
mov
mov
sbb
and
lea
sbb
dec
add
push
mov
mov
insl
fwait
pop
mov
rorb
xchg
and
cmpb
pop
out
dec
mov
cmpl
cli
mov
or
stos
add
add
stos
push
psubd
fsubrs
add
das
sub
adc
orl
push
sahf
out
lods
xor
imull
pop
mov
jge
movsb
add
add
flds
lcall
les
bound
jno
loop
jmp
xchg
rolb
pop
xor
mov
les
add
and
fistpl
pop
frstor
aad
and
mov
or
pop
xchg
mov
lods
test
add
mov
inc
imul
popl
xchg
shrl
cmp
mov
adc
mov
dec
sbb
enter
stos
pop
jle
aad
aaa
and
inc
rorl
adc
repz
inc
pop
aam
add
sbb
test
adc
sbb
add
mov
test
mov
pop
push
sbb
aaa
push
pop
dec
pop
push
dec
or
mov
ljmp
adc
adc
adc
shrb
cmp
lds
and
adc
inc
ja
mov
cmp
aaa
jecxz
cmpsb
xor
js
les
adc
es
xchg
test
adc
jae
js
and
add
enter
add
add
subb
adc
jne
inc
test
cmpsl
pusha
sbb
es
mov
pop
je
cmp
sbbl
ret
es
xor
adc
aaa
xorl
cmpsl
fldl
pop
add
sub
add
or
sbb
adc
loopne
push
cmp
test
jge
inc
inc
add
dec
popa
add
sbb
loope
and
je
xorl
cmpsb
pop
push
cmp
adc
cmp
imul
dec
push
xor
dec
jae
mov
inc
sbb
or
dec
adc
push
xchg
jne
jo
dec
fwait
jne
pop
popf
insl
mov
ficoml
cmp
insl
add
mov
pushl
shlb
or
ret
push
or
push
inc
add
inc
and
dec
sbb
mov
mov
loope
lods
add
or
pusha
addb
xlat
mov
mov
insb
pusha
push
mov
or
cwtl
sahf
push
inc
scas
xor
mov
xchg
rolb
loopne
pop
or
mov
push
xor
pusha
sub
mov
xor
add
pop
adc
ja
mov
mov
adc
jmp
in
mov
sbb
inc
imul
sub
or
shlb
xchg
ret
xchg
cmpsb
adc
and
mov
and
or
pop
sbb
lods
pushf
les
mov
movsb
or
push
inc
dec
arpl
push
mov
dec
jmp
ret
jnp
lods
pop
stos
push
pop
and
xor
sbb
icebp
push
inc
add
jns
inc
xorb
pusha
mov
xor
mov
push
inc
dec
cmp
and
rolb
sbb
mov
inc
ret
mov
sub
pop
ror
xor
cmp
inc
orb
lea
jne
fdivrl
inc
out
add
aam
cmp
pop
cmp
scas
and
movsl
repnz
adc
lcall
push
test
push
cmova
push
dec
sysret
int3
add
pop
jecxz
or
push
in
fsubl
mov
and
cmp
adc
mov
or
rclw
adc
sub
subl
rcll
std
movsb
add
adc
es
add
roll
pop
jne
testl
sbb
add
add
mov
popa
bound
les
inc
push
add
dec
or
test
jecxz
fwait
in
or
add
inc
shll
xchg
mov
fwait
int3
push
add
sub
add
dec
pop
pushf
arpl
in
rol
data16
mov
inc
mov
scas
nop
adcl
add
rcr
and
xlat
mov
xlat
xor
pusha
mov
dec
loopne
add
mov
or
adc
add
add
stos
dec
or
pop
cltd
adc
or
nop
test
rcl
xor
xchg
test
int
pop
push
push
inc
sub
cmp
push
sahf
push
leave
inc
enter
push
loopne
adc
stos
cmp
cmp
sti
mov
and
les
jb
cmp
dec
push
sti
imul
inc
ffree
in
xchg
popf
push
pop
xchg
out
mov
pop
adc
sub
sbb
sbb
mov
jmp
cmp
imul
loope
inc
rorb
cmp
orb
lods
push
rorb
or
cltd
mov
push
mov
sub
add
add
cmpsb
adc
orb
pop
xchg
inc
adc
add
xor
pop
xchg
or
jno
stc
fistl
inc
inc
adc
js
scas
sbbb
inc
jns
sbb
dec
mov
je
pusha
cltd
lret
xor
cmp
test
stc
loop,pn
adc
repnz
pop
mov
pop
movsl
scas
outsb
mov
pop
dec
xor
movlps
inc
fildl
add
add
cs
adc
sbb
bnd
rclb
shl
sub
not
aam
nop
fdiv
mov
add
mov
test
mov
xor
push
or
inc
adcb
xor
add
push
pusha
xor
nop
mov
ficompl
loopne
jnp
push
dec
shlb
adc
adc
aad
fdivr
mov
std
lods
addb
js
add
cmp
lods
stos
cmpsb
and
adc
scas
xchg
cwtl
test
push
movsl
mov
shrl
push
sbb
out
or
xchg
cld
dec
je
add
cmp
xor
imul
push
xchg
adcl
sbb
pop
push
in
add
xchg
test
and
fcoms
push
outsb
cmp
mov
sbb
int3
int
and
xchg
inc
pop
aad
xor
int
cmp
add
or
sub
dec
mov
xchg
add
inc
dec
fildl
push
pop
clc
aam
or
jns
ds
or
test
add
mov
adc
sbb
test
insl
or
xchg
mov
cltd
dec
adc
add
aaa
and
add
es
ret
or
xchg
rcrb
and
sbb
inc
and
xor
inc
and
jns
pusha
cli
ja
push
addr16
adc
test
movsb
sbb
test
addr16
add
rcrb
pop
and
add
rolb
adc
test
icebp
test
sbb
adc
jno
cmp
jno
call
mov
roll
and
adc
inc
inc
rep
mov
pop
mov
or
add
adc
lds
and
call
add
lret
cli
xchg
push
nop
xchg
pop
lods
pop
sbb
cmpsb
mov
xorb
add
dec
movsb
jg
call
push
mov
cs
or
xchg
xor
jg
addl
aaa
pop
ja
lcall
arpl
mov
push
add
pop
nop
insb
rolb
jnp
push
stos
dec
rorb
cmp
mov
ret
sbb
aaa
out
push
and
dec
sahf
dec
loope
push
leave
stos
adc
push
loope
push
inc
movb
mov
add
sub
aam
js
mov
dec
adc
lds
inc
add
push
xchg
xchg
xchg
xor
inc
lcall
imull
add
and
cmpsb
test
add
clc
lods
jmp
mov
cmp
arpl
mov
shlb
sbb
andb
add
mov
dec
jmp
push
mov
mov
call
and
xchg
aad
inc
mov
adc
mov
sub
lea
scas
pop
and
bound
add
aad
test
mov
mov
inc
lea
ja
fistps
repz
inc
mov
mov
xor
add
repz
add
mov
adc
xor
out
push
xor
pushf
stos
adcl
rol
xor
enter
adc
pop
pop
xor
push
adc
bound
into
xchg
cs
ljmp
add
dec
jne
sbb
xorl
sbb
int3
push
add
dec
addr16
add
or
movsb
push
and
and
adc
repz
adc
or
fcomps
xor
lods
pop
cmpl
fistl
or
sub
xchg
pushf
sbb
aaa
or
lcall
xor
dec
addr16
bound
inc
cs
dec
add
sbb
and
add
push
scas
cmpsl
adc
xor
aam
mov
add
in
xchg
or
and
mov
mov
jns
xchg
stos
xor
dec
pusha
adc
xor
and
popa
sub
jne
push
enter
shrb
jo
add
cmp
or
mov
int3
insl
add
pop
inc
shrl
sbbl
jecxz
addb
es
ljmp
pop
stos
sbb
incl
xor
or
or
sub
add
xlat
pusha
movsl
lods
sub
scas
xor
orl
inc
mov
stos
outsb
add
add
xchg
adc
mov
add
jge
cmpsb
push
outsb
sbb
add
inc
inc
cmpb
pop
mov
rolb
push
add
add
pop
and
addl
mov
adc
shlb
or
adc
dec
rcrl
pusha
or
xchg
sbb
add
push
mov
sub
stc
cmp
les
pop
pop
cmp
cli
mov
dec
cmp
jbe
push
popf
add
movsb
jb
lock
inc
dec
pusha
test
mov
or
or
mov
dec
fisttpll
mov
mov
shll
in
movsl
dec
sbb
adc
add
std
test
ss
bound
pushf
inc
xchg
inc
cmpsl
insl
push
mov
xor
test
andb
pushf
push
dec
xchg
fsubrl
adc
or
imul
push
jg
or
enter
cwtl
jg
movsb
daa
push
test
fs
xor
sti
das
push
jbe
je
sub
movsb
sbb
jns
push
mov
mov
and
pop
pop
adc
adc
add
cmc
inc
add
aad
data16
pop
xor
and
ficoml
add
or
xchg
ret
enter
sub
sbb
stos
mov
icebp
mov
and
enter
inc
push
mov
pop
je
dec
inc
sahf
insl
test
test
cmp
sbb
lods
flds
movsl
mov
or
inc
rolb
push
pop
push
popa
ss
insl
popl
push
shlb
sahf
adc
add
add
or
int
inc
leave
inc
insl
push
ljmp
pusha
orb
inc
test
cmp
jmp
mov
sbbb
xor
gs
mov
push
sbb
inc
mov
push
or
add
mov
mov
jge
jmp
xchg
add
je
sbb
jo
push
enter
sub
shrb
and
lcall
and
hlt
mov
repz
and
testl
outsl
inc
add
mov
sub
pop
ja
push
sbb
fistpll
imulb
mov
or
adc
sbb
add
inc
add
jno
push
and
dec
jle
adc
je
cmc
xlat
andb
jns
mov
shrb
or
lret
ret
xchg
push
xlat
xor
jmp
inc
jge
add
pusha
jp
pop
fbstp
out
xor
sbb
shlb
xlat
adc
cmp
xchg
mov
cmp
sub
mov
sbb
add
xor
jl
push
pop
aam
mov
xor
scas
xchg
push
js
call
stos
insl
bound
test
les
dec
pop
push
stos
push
test
jecxz
repz
sub
dec
xlat
dec
sbb
mov
leave
mov
cmc
xor
nop
movl
push
sub
mov
es
xchg
lods
subl
cmpsb
mov
ss
addb
and
dec
mov
mov
push
call
xchg
xor
pop
xor
xchg
xor
in
sahf
or
mov
test
or
jo
loop
pop
test
jle
inc
pop
lods
mov
or
sbb
mov
and
jp
dec
loopne
test
mov
sarl
sub
or
fisttpl
dec
or
xor
cmp
adc
xor
mov
or
sbb
inc
das
dec
push
jne
nop/reserved
icebp
shlb
shlb
notl
inc
add
cmovbe
add
push
xchg
xorb
sbb
and
push
cmp
inc
ret
rcrb
xor
scas
imul
or
and
cs
add
aad
pop
stc
and
or
or
pusha
or
jo
mov
jmp
xchg
or
pop
or
xchg
inc
push
popf
jne
pusha
lcall
xchg
shl
push
mov
add
add
sub
pusha
mov
cmp
cmp
and
and
adc
adc
dec
jo
dec
mov
dec
sbb
dec
sbb
cmp
xchg
push
add
jle
inc
and
leave
pop
xor
jo
incl
stos
xchg
and
inc
lods
pop
and
ljmp
push
push
pop
adc
dec
xor
push
xchg
mov
push
ret
test
mov
stos
cmc
jmp
movsl
mov
and
push
daa
sbb
xor
jo
sbb
xchg
out
imul
jo
mov
mov
xchg
xor
and
cmp
mov
int
dec
inc
insl
and
test
push
dec
in
xchg
add
sbb
mov
cmp
pusha
mov
icebp
stc
add
daa
inc
int3
adc
add
add
shlb
out
sub
loope
adc
imul
mov
add
subl
adc
adc
popf
leave
sahf
pop
add
cmp
inc
lods
inc
mov
mov
push
shlb
sub
push
dec
xchg
xor
pop
jne
adc
dec
scas
xchg
and
bound
addb
das
cwtl
or
add
xor
jge
xor
popa
pop
lcall
mov
mov
das
sti
add
xor
jae
dec
add
inc
sahf
cmp
pop
pop
jne
ret
mov
or
cs
and
inc
shrb
roll
movsb
aad
push
add
clc
movsl
mov
mov
mov
and
xor
jno
xchg
repnz
adc
and
hlt
adc
mov
cwtl
push
xchg
mov
or
mov
sub
jecxz
and
das
mov
mov
test
push
sbb
pop
popf
jg
mov
incl
dec
or
repz
xorb
sub
subps
inc
add
rorl
or
iret
mov
sub
mov
fcmovnb
add
xor
mov
fsts
repz
daa
orb
or
add
lret
repz
inc
cmp
cwtl
dec
cs
lds
and
inc
stos
rclb
mov
adc
xor
and
adc
cmpl
cs
out
outsl
aaa
jb
test
mov
push
cmpsb
cmpsl
lcall
lret
fbld
xchg
leave
fldt
cld
ljmp
add
mov
or
pop
addb
dec
jae
int
adc
ficompl
add
push
inc
std
mov
cmp
xor
add
lcall
mov
loope
add
lds
inc
loope
jle
sub
sub
adc
inc
and
add
or
add
lods
cwtl
mov
cmp
or
push
lea
movsb
mov
mov
lods
push
mov
stc
movsl
inc
and
sahf
movsl
sbb
cmpsl
mov
push
mov
aam
adc
shrl
lret
pop
push
repnz
xchg
xchg
leave
mov
mov
xchg
inc
add
arpl
and
add
pop
inc
jo
repz
sbb
xor
lods
andl
imul
andb
orb
and
daa
mov
mov
push
add
push
jecxz
push
add
stc
lds
shll
sbb
adc
pop
aaa
rclb
sub
mov
inc
add
push
lcall
addr16
lret
xor
mov
out
xchg
cmp
dec
lahf
or
lret
call
addb
dec
inc
dec
push
adc
lea
mov
arpl
pop
movsl
or
out
sbb
push
sub
adc
lret
xchg
aas
orb
and
add
imull
subl
cmp
and
xor
cmpsb
jo
xlat
mov
in
mov
roll
xchg
jno
adc
dec
sbb
push
cmp
fisttpl
push
dec
pop
jno
adc
inc
insl
shrb
lods
cmpsb
sbb
scas
sub
rclb
mov
pop
dec
sbb
sbb
pop
ret
inc
roll
lahf
rolb
pusha
test
adc
jl
adc
shrl
or
fst
or
insb
add
in
jns
or
sbb
sbb
mov
repnz
adc
dec
mov
je
inc
pop
mov
cs
pop
aad
xlat
mov
or
aad
jecxz
out
jnp
cmp
subb
pop
sub
imul
dec
rolb
mov
shlb
or
stos
cmpb
cwtl
leave
or
stos
mov
pop
cli
das
cmpsb
and
cmpsl
dec
int
insb
and
inc
imul
and
xor
ja
and
mov
adcl
rolb
sti
adc
inc
sbb
xor
movsl
cmpsb
push
sti
ss
xor
aad
dec
push
jno
add
addb
xlat
shll
adc
inc
enter
jnp
mov
repnz
push
sub
xor
mov
dec
jne
repz
lock
out
push
sub
mov
and
mov
push
or
mov
mov
ret
mov
xchg
sbb
mov
inc
rcl
lcall
jp
jns
xlat
icebp
push
lods
rorl
enter
test
xor
repnz
test
cmpsb
xchg
jno
pop
loopne
lods
push
push
and
mov
mov
and
xlat
aam
inc
imul
xchg
mov
pop
arpl
push
cs
ds
add
sbbb
sbb
mov
pop
fistpl
scas
or
popa
movsl
mov
imul
je
arpl
adc
rcl
mov
aaa
or
cli
int3
fs
enter
adc
add
mov
adc
xor
sbb
fld
sub
adc
add
dec
shll
or
add
aad
imul
rclb
sbb
mov
xlat
jecxz
cwtl
pop
pop
sbb
mov
sahf
in
push
adc
sub
and
xchg
push
mov
sbb
fdivl
mov
leave
adc
mov
add
aad
and
sbbb
jo
add
jecxz
dec
shlb
mov
test
cmp
mov
adc
push
mov
add
lods
addb
inc
adc
sbb
sub
push
push
push
enter
push
push
data16
adc
call
push
sbb
add
mov
idivb
mov
mov
pop
and
add
sbb
pusha
push
xor
or
bts
fcmovb
xchg
or
addb
arpl
and
cmp
sub
pop
xor
mov
add
and
inc
dec
push
mov
push
aas
lock
rcl
orl
cmp
or
mov
and
cmpsl
xchg
ljmp
sbb
pop
dec
stos
daa
int
popf
xor
or
inc
adc
cs
pop
fiaddl
adc
jge
shrb
and
sahf
mov
and
dec
dec
push
cmp
lods
cmp
imul
mov
test
jno
je
mov
incb
push
and
and
push
rclb
xor
xor
add
mov
pop
push
aad
add
mov
mov
push
dec
rorb
xor
jge
push
inc
sbb
pop
pop
mov
pusha
push
lahf
mov
rorl
pushf
and
xchg
and
and
sarb
add
sub
sub
rorb
ja
add
xchg
scas
in
into
or
pop
test
fldenv
incl
add
sarl
push
sbb
pop
xchg
dec
xchg
mov
nop
sub
add
push
inc
mov
or
push
mov
mov
xchg
add
inc
or
push
mul
addb
or
sub
add
popf
mov
add
popa
cs
mov
or
push
pop
test
xchg
adc
sub
mov
jl
decl
sbb
adc
mov
popf
cs
iret
outsl
sbb
mov
mov
movsb
mov
sub
add
inc
ja
push
dec
and
ret
add
outsb
pop
xchg
sub
stos
mov
das
and
sbb
enter
mov
std
cmp
sub
test
pop
push
inc
add
add
push
outsl
or
outsl
movsb
xchg
shlb
fwait
adc
nop
jo
dec
adc
adc
adcb
aam
lea
xor
add
enter
inc
repnz
and
inc
mov
pop
mov
push
add
in
push
mov
adcb
lret
pop
dec
inc
or
adc
add
stos
mov
sbb
jne
icebp
cmpsl
pop
sbb
test
addl
iret
xchg
push
xchg
xorl
jo
cmp
stc
mov
inc
loop
imul
or
mov
push
gs
inc
push
lea
adc
das
lea
push
enter
filds
movsl
inc
ds
ss
sarb
pop
movsl
and
xchg
cmp
popa
adc
and
popa
jecxz
inc
or
leave
popf
and
jp
les
jne
sbb
cmc
mov
adc
ret
shrl
sbb
sub
or
pop
mov
pusha
jne
xor
and
pop
int3
xor
mov
in
pop
xchg
dec
jae
adc
insl
addb
add
mov
les
inc
imul
daa
imul
mov
mov
ret
inc
add
mov
pusha
aam
movl
lcall
jne
repnz
or
pop
and
jmp
iret
andl
mov
mov
mov
or
or
or
or
sbb
jp
jno
sub
add
popl
fwait
push
inc
adc
nop
adc
into
rclb
repz
add
mov
add
xchg
or
orl
lcall
pop
loope
mov
inc
inc
dec
in
inc
sub
xor
leave
add
cmpsl
loope
enter
or
push
or
mov
xor
jo
mov
xor
nop
in
fwait
movsl
rcll
push
aam
push
pop
je
mov
rcll
adc
fs
dec
mov
addl
ss
dec
xor
and
push
pusha
jmp
mov
xchg
pop
push
adc
push
jae
or
dec
cmp
xchg
ret
sbb
xchg
test
dec
and
pop
scas
sub
cmp
arpl
call
stos
cmpl
lea
jne
hlt
dec
andb
jb
pop
shlb
stos
xchg
loopne
rclb
and
add
inc
mov
cmp
fstpt
dec
and
sub
addl
add
test
lahf
mov
sub
adc
imul
orb
ss
push
lds
push
movb
cmpsb
pusha
pop
aad
addb
mov
push
adc
pop
rcrl
and
pop
mov
adc
adc
test
rorb
sbb
stos
out
adcb
or
mov
lea
leave
dec
es
sahf
test
xchg
inc
push
cmp
stc
and
faddl
push
inc
jb
inc
jmp
xor
in
or
push
add
jge
loopne
inc
or
sub
movsb
mov
jecxz
and
and
push
xchg
shll
ret
inc
push
into
or
bound
lds
rclb
adc
or
mov
sub
aam
pop
cmp
push
das
jg
inc
adc
mov
add
cmp
or
xchg
ret
stos
inc
inc
or
push
cwtl
lods
loop
ljmp
adc
jo
and
mov
aas
sbb
and
fnsave
or
xor
push
pop
adc
mov
addl
add
adc
add
inc
fdivrs
jns
cmp
push
push
xchg
mov
mov
add
mov
ret
movsl
imul
imul
cmp
filds
movb
inc
adc
lea
pop
je
insl
and
adc
aad
sbb
inc
fimuls
mov
sbb
cmp
xchg
dec
add
les
adc
gs
push
pop
lret
inc
dec
sbbb
add
mov
add
daa
pop
mov
fs
or
aaa
push
cmpsl
into
mov
sti
xor
inc
xlat
rolb
inc
inc
roll
cltd
sub
mov
std
rcrl
inc
jp
out
pop
pushf
add
repnz
adc
stos
test
test
adcb
and
sub
pop
or
movsb
pop
dec
test
bound
ljmp
push
add
xor
adc
int3
pop
xchg
aam
sbb
iret
lods
cmp
or
push
sub
and
xor
and
outsl
push
add
lcall
enter
sbb
sub
pushf
inc
popa
add
fwait
mov
push
rol
xor
mov
or
sahf
dec
push
push
mov
pop
and
xor
aad
sbbb
push
repnz
push
shrb
xchg
pop
daa
rol
push
inc
adc
or
jno
pop
int3
push
call
arpl
loope
in
shrb
mov
xchg
sbb
adc
cmp
pop
fstl
inc
int
xchg
mov
xchg
push
cmp
enter
mov
inc
js
push
and
jb
and
mov
push
dec
mov
add
ljmp
ret
xor
inc
adc
testl
or
xchg
cltd
mov
sbb
adc
jo
dec
lods
mov
xchg
out
mov
mov
xchg
mov
xchg
dec
inc
inc
dec
or
add
icebp
mov
imul
jnp
mov
outsb
xor
xor
sub
stos
adc
repnz
xchg
add
add
xlat
mov
out
mov
and
mov
pop
inc
test
cmp
xor
pop
push
test
repnz
es
push
test
loopne
je
sarl
bound
lock
test
and
inc
sbb
adc
daa
sbb
mov
rcrl
xor
loope
pop
or
lcall
lods
mov
mov
test
rclb
adc
add
add
out
jg
and
leave
mov
ret
iret
xor
mov
dec
lea
push
addl
sbb
lds
int
add
dec
icebp
inc
addl
or
dec
xor
mov
inc
cmp
test
add
xchg
cmp
and
inc
loopne
adc
cmp
rcr
dec
pop
subl
repz
inc
or
sbbb
adc
les
scas
sbb
mov
adc
add
movsl
lea
cmp
mov
jae
add
mov
shl
shrl
add
mov
mov
test
mov
or
xchg
ljmp
xor
int
stc
addb
mov
repnz
add
xor
rolb
dec
dec
jne
pop
sahf
arpl
aad
or
adc
test
push
sarl
scas
add
outsb
gs
push
loopne
xor
pop
adcb
pop
sti
jecxz
jns
iret
jge
push
test
cmp
adc
sub
aas
jns
aad
add
stos
cltd
jecxz
sbb
dec
in
sub
enter
lods
push
pop
cmpsb
cmp
pop
adc
xor
or
sarl
rol
pop
and
cltd
sbb
mov
cmp
loopne
scas
dec
xor
mov
cmp
dec
push
outsb
mov
test
fistpll
dec
push
hlt
and
pusha
and
sbb
les
subb
dec
cmp
or
inc
push
cmc
jmp
pop
sbb
imull
adcl
cs
add
xor
add
test
dec
inc
mov
daa
jo
lcall
adc
xor
mov
movsb
add
adc
mov
es
cmp
push
test
add
sub
cmp
pop
je
adc
jnp
outsb
fsubrs
aad
and
test
and
sub
push
ljmp
push
insl
scas
insl
mov
je
cmp
mov
mov
add
mov
inc
test
mov
sub
imul
shrb
cmpsb
lds
mov
mov
adc
jge
sbb
jno
mov
pop
xor
jp
dec
add
sarl
movsl
loopne
xchg
loopew
and
cmpsb
add
lds
sbb
nop
std
mov
and
xchg
xchg
xchg
push
sub
dec
in
add
or
and
shlb
and
into
faddl
sub
inc
ja
mov
and
fldcw
je
cmp
int3
dec
pop
bnd
xor
or
out
adcb
mov
imul
mov
jo
xchg
jl
or
mov
shl
push
loope
xorb
imul
push
xor
ret
and
or
inc
mov
inc
imul
nop
jo
cmp
push
jne
jl
mov
xchg
arpl
or
nop
test
dec
addl
sub
stos
imul
lea
int
sbbl
push
popf
xor
subb
adc
inc
jno
xor
dec
mov
in
ffreep
fcomi
pusha
in
in
rolb
subl
fld
inc
sbb
and
add
bound
jns
add
imul
andb
mov
bound
pop
aad
movsl
and
les
cmp
inc
movsl
bound
sub
add
mov
subb
inc
sbb
mov
cmp
push
mov
push
sub
mov
fs
sbb
pop
and
ss
incl
mov
pop
adc
int3
and
inc
sahf
mov
mov
test
in
or
sbb
daa
sbb
and
fdiv
in
mov
loope
pusha
test
or
xchg
andl
jp
mov
add
pop
fld
movb
mov
dec
adc
stos
sbb
cmp
xchg
lahf
mov
pusha
dec
bound
or
sub
xchg
sbb
ret
daa
jb
rclb
and
xor
imul
or
xchg
and
and
jo
xor
aam
imul
fwait
aaa
cmp
inc
dec
jns
xchg
ljmp
adc
and
lcall
mov
orb
mov
scas
add
sub
fldcw
mov
cmp
push
adc
jg
roll
add
mov
out
or
inc
test
jo
add
pop
push
push
cmp
test
mov
dec
dec
and
and
jne
cmp
pusha
add
sbb
xor
push
pop
adc
pop
or
sbb
dec
and
cwtl
mov
iret
cmpsl
orl
aad
nop
cmp
xchg
test
test
xor
add
cmp
sub
sbb
mov
aad
mov
pushf
and
inc
repnz
rcl
push
mov
sub
int
fistl
movsb
xchg
xor
sub
test
add
add
or
mov
xchg
push
lds
mov
pusha
xchg
xlat
sub
mov
sbb
shrl
adc
mov
dec
fcompl
cmpsb
cwtl
mov
andl
adc
rcr
inc
sbb
stc
pop
repnz
lcall
add
and
cmp
mov
jo
pop
push
dec
popf
fisubl
add
outsb
movsl
cmp
mov
aaa
out
xor
jp
and
xchg
xchg
cwtl
nop
outsl
sbb
xor
outsb
push
loope
nop
addr16
push
mov
repz
dec
pop
mov
inc
dec
mov
int
or
les
stos
adc
jecxz
xor
roll
push
mov
pop
xchg
dec
mov
mov
sbb
xchg
lods
add
add
push
jge
mov
adc
mov
xor
dec
lcall
add
nop
mov
jle
roll
push
inc
notl
and
bound
add
adcb
push
mov
add
dec
add
into
push
mov
cwtl
mov
and
scas
xchg
jg
popa
push
mov
add
push
lcall
outsb
pop
jp
pusha
xor
xor
rcll
inc
add
scas
and
mov
outsb
and
aam
jns
shl
popa
pop
insb
test
inc
mov
cmp
push
test
dec
popa
push
sub
and
or
mov
adc
sti
xor
aas
add
aaa
or
sbb
leave
cmpsb
imul
add
xor
and
push
test
push
fwait
inc
cmpsb
dec
test
push
test
push
int
adc
in
mov
jne
mov
adc
or
mov
stos
xchg
push
xchg
xor
sahf
add
subb
add
loope
movb
push
lds
sub
add
sbb
xchg
mov
sbb
dec
icebp
sbb
add
inc
repnz
mov
mov
andl
mov
mov
mov
in
stos
enter
sub
mov
add
daa
and
cmp
sbb
mov
xchg
inc
cmp
mov
push
inc
add
cmp
xchg
pop
sbb
cmc
push
mov
daa
jne
cmp
popf
pop
pusha
movsl
and
loope
jo
or
scas
repz
orl
cltd
frstor
imul
or
inc
cli
jmp
popf
mov
sbb
jo
mov
adc
test
icebp
addb
addl
popa
das
mov
loopne
mov
push
sub
cmp
aas
cmp
add
sbb
dec
push
add
xor
daa
inc
sbb
and
not
dec
lds
xchg
mov
adc
and
sub
mov
cli
sbb
or
sbb
mov
xor
gs
ss
jo
jecxz
mov
cmp
inc
sbb
cmpsl
and
popf
aaa
adc
xor
sbb
fabs
lods
push
jge
aas
rcrl
sbb
xor
adc
cmp
jae
aad
sbb
add
jno
xor
addb
leave
xchg
push
setns
loopne
ljmp
stc
cmc
lret
add
push
dec
rolb
add
stos
loope
es
mov
and
mov
pop
pop
adc
mov
pop
or
cmpsb
push
jae
mov
and
push
cmp
mov
js
add
dec
dec
cmpsb
add
sbb
pop
in
dec
addb
push
inc
pop
xlat
mov
fnstenv
pop
fldl
mov
adc
rolb
add
xor
add
mov
repnz
jmp
cmp
sub
push
lret
xchg
gs
sub
lret
pop
addr16
nop
jp
scas
std
mov
push
loope
cmp
jns
xchg
bound
lea
push
mov
stos
inc
popa
shrl
and
jns
add
test
out
stc
xor
xor
or
mov
xchg
ss
dec
xchg
je
jb
cwtd
adcb
dec
or
adc
push
ret
scas
cwtl
popa
or
and
jo
arpl
pop
fwait
rol
mov
aas
ret
jne
jno
cmp
cmp
dec
sbb
jno
dec
sub
int
mov
daa
xor
mov
mov
loopne
add
inc
and
inc
repnz
psraw
les
pop
adc
inc
mov
jg
dec
xchg
push
aaa
jmp
xor
loope
lret
add
fwait
inc
out
xchg
cmpsl
jns
cmp
lcall
mov
push
dec
and
xor
daa
test
enter
aam
xor
andb
and
push
fwait
add
sub
cmp
push
nop
sub
and
jo
or
fwait
loope
pusha
aam
adc
lea
mov
mov
sub
cwtl
jmp
inc
sub
xchg
fidivs
pop
jne
out
cmp
je
in
insl
bound
setle
push
and
mov
adc
xchg
xor
pop
orb
dec
or
add
test
test
adc
add
inc
jo
sub
stos
std
or
mov
adc
daa
xor
cmp
push
and
push
push
or
rolb
pop
xchg
iret
xchg
push
imul
adc
sahf
inc
inc
pop
scas
in
imul
and
adcb
mov
mov
aad
flds
jle
xchg
rolb
ficoml
call
xchg
cmp
xor
movsb
or
dec
sbb
adc
inc
cvtps2pi
adc
mov
push
hlt
push
dec
adc
je
insb
cmp
and
jmp
cmp
and
inc
mov
sub
fcmovne
and
fs
add
inc
dec
xor
fwait
sti
or
cmp
mov
iret
adc
leave
daa
adc
dec
jmp
rorb
sub
test
dec
rolb
out
jmp
cmp
or
sbb
bound
shrb
mov
cltd
cmp
lea
mov
lret
add
cltd
inc
xor
bound
sub
push
cwtl
cmpsb
lds
pusha
or
scas
xor
enter
jo
push
adcl
pop
popf
clc
adc
imul
or
cmp
les
dec
ds
test
pop
mov
loopne
add
xor
mov
test
add
mov
ds
xor
lea
icebp
incl
popf
adc
fdivrl
mov
insb
push
jns
cltd
mov
inc
inc
fidivl
add
xchg
jne
lds
pop
das
stc
popf
rolb
sub
dec
out
pop
ljmp
xor
and
add
cs
cmpsb
test
ret
loopne
sub
insl
incl
cs
xor
subb
je
daa
outsl
add
mov
jno
lods
inc
sub
push
pop
push
add
arpl
arpl
jo
adcb
add
and
rol
or
mov
mov
add
add
sub
out
adc
cmp
daa
xchg
and
and
push
loop
cmp
mov
mov
add
add
lret
sbb
dec
imul
jnp
add
push
xchg
mov
mov
xor
addb
xor
xchg
or
push
xor
pop
pop
cs
add
rolb
stc
add
adc
add
push
test
in
outsb
cmp
mov
test
add
roll
sbb
sub
popf
out
enter
add
or
jmp
addl
dec
jae
addl
fistl
stos
test
cmpsl
push
popf
xchg
or
dec
mov
or
push
mov
push
add
xor
jmp
test
addb
sbb
int3
jecxz
dec
ljmp
dec
add
std
push
or
pusha
pop
jno
adc
pop
in
add
inc
or
aad
inc
add
add
xchg
adc
pop
je
loopne
nop
and
xchg
lock
xchg
push
rcrl
cs
scas
mov
xchg
neg
aad
xor
ds
push
xchg
push
es
push
fs
dec
and
mov
scas
add
adc
push
mov
sbb
cmp
or
mov
mov
xor
test
mov
test
aam
test
sbb
jne
add
lahf
scas
ja
sub
cwtl
jecxz
add
inc
lods
mov
adc
inc
dec
xchg
mov
and
sub
mov
and
daa
jl
cmp
xchg
orb
incl
add
mov
pop
mov
pop
jo
mov
or
cwtl
xchg
rclb
loopne
and
popf
inc
rcr
aaa
fstpt
adc
mov
mov
jns
popa
pusha
rorl
xchg
xor
cmpsl
jmp
test
or
dec
sbb
cmp
test
add
inc
imul
adc
inc
cltd
xchg
add
push
mov
and
pop
dec
or
add
mov
adc
pop
je
mov
jnp
cmp
pop
leave
repz
mov
sbbb
mov
push
pop
in
pop
lahf
push
lar
push
add
or
in
cmp
mov
pop
shll
pop
nop
add
push
add
dec
jo
inc
mov
stos
pop
inc
xor
push
xor
aad
adc
xchg
test
or
fbstp
test
add
dec
pop
push
pop
out
sub
frstor
xchg
adc
addb
xor
add
lcall
and
imul
or
xor
mov
in
mov
sub
add
push
xor
repz
pop
aad
adc
inc
sub
jge
xchg
dec
inc
cmp
test
rcrb
mov
cltd
jg
ret
xor
das
adc
bound
push
ja
mov
add
mov
mov
inc
push
sbb
das
mov
mov
add
ret
lea
aad
xorl
mov
push
sub
inc
fldcw
adcb
cltd
xchg
jecxz
pushf
ret
sti
and
and
data16
stos
dec
jmp
lods
xor
lods
mov
push
dec
and
lret
iret
popa
or
leave
stos
add
xor
mov
es
rcrb
add
shrb
adc
mov
or
jne
and
dec
pop
out
mov
pop
and
add
dec
jle
inc
adc
outsb
cmp
add
and
xchg
pusha
fwait
jno
sbb
imul
xor
sbb
xor
les
dec
cmp
mov
sbb
or
sti
push
bound
rclb
sbb
imul
push
jmp
push
xchg
lock
sub
jne
push
addb
loope
repnz
imul
jge
pop
xor
add
mov
dec
dec
cmpsl
in
shlb
and
mov
mov
cwtl
test
mov
cmp
add
adcl
dec
and
xor
and
push
pop
push
mov
inc
loope
les
or
sbb
inc
add
rcrb
pop
iret
jne
add
or
mov
cmp
jge
fwait
loope
ret
leave
movsl
mov
rcl
bound
add
pop
or
aad
aaa
mov
cmp
cmp
jo
add
sbbl
push
and
cmp
or
test
sub
pop
push
subb
andl
daa
xchg
or
lcall
mov
cmpsb
pusha
sub
sbb
add
sbb
iret
iret
adc
xor
popa
jecxz
push
popfw
in
add
add
ret
movsl
sbb
jge
sbb
insl
cmpsl
ljmp
scas
bound
xchg
adc
add
mov
stos
imul
or
test
push
or
or
mov
adc
les
sub
xchg
out
leave
mov
pop
cmp
or
dec
dec
loope
call
sub
and
mull
dec
inc
dec
push
stos
adc
rclb
lods
sub
andl
fcmovne
pop
cmp
shlb
test
mov
dec
enter
test
test
cmpsb
dec
dec
bound
mov
enter
inc
dec
inc
sub
insl
add
dec
sbb
lret
mov
inc
mov
loope
mov
in
test
imul
add
pop
mov
xchg
push
push
insl
xchg
mov
ret
dec
add
xchg
dec
push
mov
and
or
clc
or
lcall
sub
loope
pop
addl
xchg
into
sub
leave
inc
mov
lods
add
pop
mov
and
jnp
xchg
add
add
lods
sbb
xchg
popl
push
test
lds
scas
sbb
dec
cli
outsb
cmpb
sbb
mov
leave
xor
inc
or
cmpb
out
dec
add
hlt
lahf
popa
je
or
sti
mov
inc
pop
and
dec
pop
xor
and
push
lcall
dec
jo
adc
lods
mov
add
and
sbbl
adc
movsb
sub
dec
add
test
outsl
dec
aas
mov
cltd
sub
rolb
xor
xor
call
cwtl
sbb
aas
add
lret
addr16
push
mov
and
fcmovne
xor
inc
mov
or
inc
dec
mov
leave
lea
sbb
add
movsb
sub
sbb
adc
and
les
dec
push
push
sub
cmp
push
pop
mov
mov
xor
sti
jbe
mov
or
xor
xor
loop
inc
pop
mov
push
int
fsubrl
in
xchg
jno
sbbb
rorb
sbb
test
adc
or
inc
or
fld
test
adc
loopne
or
dec
xchg
xchg
fidivl
sub
leave
dec
ret
int
inc
mov
xchg
inc
ljmp
inc
add
leave
inc
cli
rolb
sub
mov
inc
sub
call
pop
and
sbb
dec
xchg
cmp
nop
and
or
mov
sbb
inc
or
xchg
pop
xor
fsts
popf
mov
mov
pop
sbb
push
adc
adc
xor
and
daa
add
mov
or
or
nop
dec
fcoms
dec
mov
sub
jae
pop
push
nop
sahf
mov
dec
rcrl
test
imul
mov
int3
cmpsb
lea
popa
xor
leave
jae
or
roll
push
rorb
push
js
stc
and
push
lcall
mov
das
test
jnp
lods
adc
push
cmp
rorl
adc
mov
sbb
fldenv
mov
xlat
or
lcall
sub
mov
clc
and
test
sub
xor
nop
mov
or
jns
cwtl
ret
loop
stos
int
sub
or
ret
or
out
lods
mov
pop
mov
xchg
add
add
adc
sub
inc
stos
push
or
sbb
pop
pop
call
jl
roll
movsl
add
arpl
adc
push
mov
notl
adc
inc
and
out
pop
push
inc
xor
xchg
or
add
ljmp
and
jns
stc
mov
push
test
adc
mov
or
int
movsl
mov
push
je
imul
in
dec
cmpsb
pop
ja
adc
mov
add
pop
push
adc
ret
mov
sub
movsl
stos
jmp
pop
es
mov
inc
sbb
rclb
cs
std
iret
movsl
inc
loope
insl
add
push
and
arpl
stc
adc
jo
jmp
dec
ret
or
gs
cmp
rclb
pop
popa
lock
inc
pop
popf
daa
jp
mov
push
pusha
or
xchg
out
pushf
ret
cmp
push
movsl
mov
iret
mov
xor
movsb
cmpsl
add
push
sbb
mov
or
or
pop
adc
outsb
xor
xchg
pop
jnp
rolb
xchg
add
xor
aas
fistl
add
cmp
push
jne
add
mov
mov
add
cwtl
addb
add
add
sub
or
push
lret
adc
mov
adcl
and
add
cmpsb
adc
and
fs
iret
xorl
mov
inc
xchg
xchg
aas
mov
and
popa
orl
test
rolb
push
loopne
mov
cmp
push
xchg
pslld
pop
stc
adc
mov
stos
pop
add
stos
mov
daa
loope
inc
outsb
xchg
add
inc
aaa
inc
or
pop
push
adc
movsl
sub
push
dec
femms
jo
stos
ret
sbb
and
pop
rcl
testl
dec
mov
jl
pop
push
push
adc
in
xchg
sbb
add
or
or
xor
dec
in
loope
dec
dec
stos
add
inc
sbb
insb
arpl
add
xchg
lods
or
mov
cmp
jo
adc
loop
ret
shll
push
popf
xor
push
shlb
xchg
xor
sub
dec
andl
inc
pushf
pop
add
and
loop
push
inc
dec
push
pop
je
jno
popa
cmpsb
mov
into
pop
xchg
push
pop
sbb
fsubrl
push
or
inc
cmp
popf
int
jmp
cwtl
add
xlat
adc
xchg
ret
push
mov
jo
fcoms
and
add
and
xchg
push
add
std
inc
xchg
add
xchg
scas
jecxz
add
shrl
push
cltd
into
sub
xchg
xor
adc
push
shlb
cmp
mov
mov
pop
pop
int
sbb
and
pop
repnz
imul
cld
push
imul
and
push
scas
popf
cwtl
or
inc
sbb
scas
jge
imul
daa
mov
sub
pusha
js
mov
mov
insb
sub
dec
sbb
and
push
jae
add
adc
aad
add
xchg
xorb
pop
in
or
int
pop
xor
movsl
test
inc
sahf
or
sbb
jns
push
or
pop
mov
aaa
dec
pusha
adc
inc
daa
xor
mov
ljmp
push
test
mov
and
rorl
add
decl
cmp
loop
push
inc
and
adc
pop
test
and
dec
inc
mov
cmp
lea
fsubs
push
cmp
mov
sahf
in
movzwl
pop
adc
out
dec
ret
jno
xor
cmp
mov
orb
add
push
add
repz
xor
subb
and
mov
xchg
jne
mov
push
jecxz
push
les
sbb
xlat
shrl
and
dec
adcl
push
pop
xor
orl
mov
xor
jbe
or
lds
mov
mov
lods
add
sbb
sti
pop
mov
in
xchg
aad
pop
mov
das
pop
or
jns
mov
dec
adc
ja
sub
ret
mov
ret
and
or
and
test
xchg
add
adc
pop
and
and
xor
movsb
push
mov
addb
push
dec
or
jns
xor
inc
andl
pop
fmull
lret
mov
pop
cwtl
inc
pusha
or
popa
push
add
outsl
jno
push
out
cmp
cwtl
and
je
adc
xor
out
loopne
cs
sbb
sti
test
pusha
out
fwait
xchg
test
inc
std
es
inc
std
in
rolb
inc
outsl
xor
jae
jnp
push
test
mov
inc
inc
in
out
cmpsb
data16
push
pop
push
outsl
jne
adc
aad
stc
add
rorb
cmpsl
sbb
mov
jne
jg
add
push
adc
insl
into
sub
inc
jae
jne
dec
cmp
cmpsb
sbb
cmp
jecxz
push
mov
mov
or
pushf
or
xor
xor
sbb
sete
cmp
add
xor
push
xor
cmp
stos
jmp
or
dec
pushf
mov
inc
scas
imul
add
call
shlb
adc
stc
mov
aam
repnz
fisubrl
sbb
out
imul
filds
sub
aad
or
add
inc
es
cmp
pop
inc
xor
push
test
in
arpl
lcall
jbe
or
lea
insl
or
mov
cltd
sub
aad
pop
icebp
cwtl
aas
sub
shrl
pop
and
adc
popa
repnz
or
add
mov
jns
or
push
in
inc
xor
add
and
add
sbb
dec
xchg
xchg
dec
orb
mov
leave
sub
sub
sti
xchg
dec
xor
xchg
popf
sbb
cmp
add
push
fisttpll
adc
push
fisubrl
xor
aad
add
mov
mov
stos
loope
or
mov
jo
test
out
xor
inc
pop
adc
rolb
or
add
xchg
mov
sub
loopne
fwait
dec
xchg
loop
nop
les
xor
loope
mov
out
loopne
and
movsl
mov
adc
rcl
mov
pop
xor
repz
rcl
push
mov
mov
push
or
cmp
test
iret
xchg
push
add
xor
lods
cs
dec
xchg
imul
test
shll
mov
or
add
test
add
lods
jb
or
stos
add
xchg
je
or
test
pop
cwtl
divl
lret
stos
pop
stc
jle
push
aad
daa
cmp
inc
add
mov
cmp
adc
push
xlat
adc
bnd
out
sub
dec
shl
mov
jmp
or
cmpsb
adc
sbb
push
xchg
cld
lahf
add
mov
push
test
cmpsb
pop
outsl
xchg
pop
and
call
scas
push
nop
adc
loop
add
or
and
pop
push
inc
adc
les
or
outsb
add
pop
cmp
add
push
les
jmp
inc
sbb
cltd
ret
add
movsl
dec
xchg
insb
add
inc
adc
push
cmp
jmp
insb
sbb
ret
mov
sub
adcb
xor
inc
pop
and
mov
or
outsl
add
dec
lds
inc
mov
mov
sbb
std
cmp
iret
add
loope
push
sahf
push
and
arpl
sbb
adc
pop
push
lret
sbb
cwtl
bound
cmpsl
add
mov
mov
lahf
test
sub
jl
add
std
pop
je
ret
fcoml
adcb
cwtd
rolb
cmp
or
jne
cmp
add
rorl
push
xchg
jns
insl
call
add
ret
inc
lret
out
jae
push
adcb
rcrb
adc
in
lds
jns
xchg
pop
jne
dec
adc
fs
or
ret
aas
add
add
inc
inc
arpl
aam
jne
add
xchg
dec
mov
mov
push
nop
aam
add
add
fs
rcl
mov
mov
cmc
mov
nop
imul
xchg
out
mov
add
mov
sbb
dec
cwtl
loopne
les
or
int
jg
or
cmpsb
pop
pop
in
sub
dec
jge
test
popa
add
pop
xchg
xor
or
mov
sbb
add
xchg
sub
cmpsl
mov
cltd
mov
mov
add
pop
mov
mov
mov
test
pop
popf
dec
pop
enter
add
or
xchg
lods
cmc
lret
or
or
arpl
shl
addr16
rcrb
mov
dec
enter
xchg
cwtl
dec
jecxz
dec
mov
inc
xor
adc
sti
jne
imul
sub
sbb
mov
add
aam
fstpl
shrb
adc
add
mov
cmpsb
and
jecxz
scas
icebp
push
lea
pop
or
shll
rolb
and
cmp
add
rorl
imul
push
insb
lods
mov
xchg
or
mov
sbb
jo
and
add
mov
push
jae
lret
or
sbb
mov
sub
pop
dec
or
lea
jmp
imul
add
test
dec
pop
in
loopne
inc
pop
pop
adc
movb
jmp
mov
es
xchg
inc
or
mov
inc
ljmp
and
ret
mov
push
jp
in
mov
adc
test
push
add
or
adc
test
xor
pushf
stos
mov
sub
aaa
fbstp
pop
mov
test
add
cmpsl
push
add
inc
fistps
pop
push
push
mov
lods
or
and
or
cs
add
push
lret
xor
and
push
sbb
sub
add
rolb
xor
xchg
js
cmp
and
call
pop
cmp
cmpsl
mov
stc
repnz
jge
add
mov
sub
jmp
arpl
frstor
stos
and
xchg
pop
sbb
pop
dec
incb
insl
jg
pushf
pop
sarb
pusha
mov
ret
mov
movb
push
cmp
adc
loope
mov
dec
aam
movsl
adc
xchg
sbb
push
mov
sbb
push
dec
xchg
and
inc
inc
mov
dec
add
cwtl
imul
subl
aam
push
aas
arpl
pusha
adc
xorb
inc
pop
add
insl
jne
xchg
cmp
jae
or
pusha
push
ret
dec
inc
iret
adc
jne
mov
mov
cltd
lret
mov
mov
jge
pop
sbbl
mov
add
add
rclb
rclb
popa
add
add
add
lret
mov
inc
loopne
mov
repz
outsb
sbb
popf
mov
and
insl
adc
push
add
sub
or
push
stos
add
mov
add
outsb
jmp
mov
inc
sub
adc
push
and
push
sub
xor
stos
pop
movl
loopne
jae
and
clc
and
jae
adcl
pop
cmpsl
xor
add
and
and
sub
and
add
lcall
insl
movl
xor
jno
adc
mov
cmp
inc
pop
push
rorl
add
push
movsb
mov
popa
pusha
and
outsb
data16
imul
jg
shlb
xchg
mov
inc
pop
dec
dec
outsl
xor
inc
aad
sbb
pop
incl
push
cmp
pop
and
jae
fs
pop
bound
jecxz
orb
jb
or
in
sbb
mov
insl
xlat
loope
shll
lods
push
jge
xchg
or
xchg
shrb
inc
loop
xor
inc
pop
cmp
jle
mov
inc
lret
data16
mov
ret
test
pop
rolb
sbb
and
subl
mov
xor
cld
inc
cmp
and
les
inc
add
dec
sbb
sbbl
shlb
loope
aas
repnz
outsl
and
inc
rclb
add
sahf
movsl
and
xchg
in
dec
cmp
daa
cmpsb
push
push
rorl
push
mov
push
test
rcll
pop
add
cmp
adc
jno
adc
mov
jae
and
push
inc
inc
insb
test
xor
loop
fs
adc
inc
cmp
push
cmp
pop
jecxz
jae
adc
mov
xchg
pop
fs
leave
and
xchg
imul
mov
sbb
push
nop
mov
out
or
das
xchg
xor
mov
pop
fstp
fwait
ret
xor
cmp
xchg
or
aad
dec
sub
and
push
jmp
stos
repz
mov
xor
add
adc
jmp
pop
subb
mov
push
frstor
push
shrl
stos
jmp
shlb
dec
orb
push
jns
mov
aas
repz
and
je
mov
add
lds
test
mov
inc
rcrb
sbb
jno
inc
bound
lods
inc
cmp
and
test
pop
sub
inc
push
test
inc
mov
ljmp
adc
inc
dec
in
add
in
arpl
dec
push
test
cwtl
test
pop
jmp
je
pushf
pop
addb
mov
lret
jmp
andb
loopne
xchg
push
dec
loopne
popf
adc
aad
add
and
push
inc
mov
or
adc
sbb
mov
and
mov
lods
movsb
dec
push
lahf
sbb
push
scas
sub
pop
movsl
sub
and
dec
mov
add
dec
movsl
add
or
mov
sub
fld
inc
adc
mov
dec
inc
addb
and
pop
aam
subb
sbb
lahf
lods
bound
push
and
pop
incl
xchg
adc
fiaddl
add
add
shufps
adc
iret
cmp
mov
sub
push
daa
jmp
xchg
push
xchg
stos
jne
and
int3
xor
loop
jle
lcall
adc
test
add
rcl
xor
imul
cmpsb
mov
push
push
sbb
or
inc
lods
test
pop
xchg
test
inc
xchg
xor
xchg
push
push
inc
push
sbb
pop
repz
pusha
mov
adc
int3
loopne
mov
test
and
arpl
cmp
jno
roll
sbb
xor
cmpsb
das
add
and
xchg
mov
inc
ret
loopne
cmpsl
daa
xchg
push
push
add
mov
test
mov
idivb
and
sbb
push
sbb
pop
js
daa
inc
pop
mov
adc
pop
js
adc
lea
insl
or
and
push
sub
cwtl
mov
imul
or
mov
insb
popa
mov
xchg
sub
mov
mov
in
sarl
jae
xor
xchg
and
les
pop
fidivrs
orb
xor
xchg
pop
mov
add
xchg
inc
jbe
sub
aad
int
sub
inc
ret
dec
out
xor
inc
mov
mov
ret
mov
inc
sahf
mov
lods
cwtl
or
and
es
mov
ficoms
pop
dec
jne
test
xorl
cmp
add
ret
repz
cmp
dec
negl
fcos
ja
js
and
mov
loopne
pusha
push
jae
and
inc
dec
cmp
outsb
aad
push
sub
ret
inc
dec
jne
fwait
adc
inc
xor
mov
xchg
xor
mov
rorl
les
jecxz
mov
mov
sbb
push
lods
cmp
inc
xchg
mov
sbb
and
insb
scas
rcll
andl
sub
sub
sub
mov
xor
sbb
push
sbb
lcall
lods
mov
repz
leave
xchg
mov
inc
add
inc
sub
or
out
fisttpl
out
add
push
sbb
dec
inc
fisttps
xchg
jno
repnz
add
adc
add
push
pop
ja
mov
xlat
lea
push
and
xor
nop
cmpsl
push
in
mov
push
sub
cmpsl
mov
andb
add
pusha
insl
sub
pop
xor
adc
sub
cmp
inc
scas
out
test
ficoml
sub
out
aad
push
xchg
cmpsb
fwait
pop
add
cmp
and
je
add
pop
push
mov
add
test
imul
xor
filds
cwtl
std
fadd
mov
bound
add
stos
xchg
inc
add
push
and
stc
mov
loopne
xchg
push
cmpsb
push
jmp
sub
call
in
lret
sub
mov
subb
mov
sub
leave
outsb
sbb
cmpsb
popf
pop
or
push
mov
je
lods
cmp
loop
nop
push
mov
adc
popa
or
push
ds
mov
push
stos
lea
rorb
out
shrl
inc
xlat
sub
push
push
adc
ret
subl
and
adc
push
jge
lahf
add
lcall
push
mov
add
popf
pop
jmp
test
mov
in
push
xchg
pop
sbb
mov
push
mov
mov
add
inc
add
pop
xchg
ret
ret
cmc
xor
test
ret
dec
insb
flds
orl
inc
negb
add
dec
in
adc
lea
jg
dec
rolb
inc
inc
subl
jo
mov
xchg
inc
or
in
add
call
scas
or
adc
xlat
test
aam
and
pushf
out
sub
inc
or
or
push
adc
xchg
arpl
mov
cmp
sub
mov
stos
or
roll
adc
and
add
push
lods
sbb
xor
mov
jbe
aad
or
sbbb
adc
stos
imul
cmpsl
mov
rolb
or
js
add
gs
push
push
inc
test
mov
in
addl
fcmove
mov
mov
or
cltd
adc
add
and
test
nop
int
pusha
pop
sbb
call
outsb
test
jno
xor
mov
loopne
dec
cmp
rclb
and
sbb
mov
adcl
subb
test
andb
mov
jne
roll
imul
add
dec
xor
push
stos
mov
jecxz
xlat
adc
loop
jae
test
scas
stos
jge
mov
mov
push
scas
dec
cmpsl
xchg
shrb
in
sbb
cmp
sub
push
mov
adc
subb
out
pop
push
inc
sbb
cs
fdivl
mov
add
mov
mov
ret
or
pop
pop
adc
adc
mov
push
mov
mov
sub
inc
pusha
adcb
popf
loop
test
lds
stos
pop
push
and
push
mov
es
lds
jmp
rolb
add
lahf
pusha
dec
push
pop
cmp
stos
fwait
les
pop
mov
jno
rol
call
lahf
jno
push
nop
pop
push
pop
mov
or
xchg
jecxz
xor
add
stos
xchg
xchg
fisttpl
cld
sub
imul
test
shll
push
popf
push
shlb
das
and
add
jne
xor
pop
dec
mov
dec
sub
aad
or
xchg
inc
push
add
xor
push
cmpl
push
sbb
imul
add
pop
mov
test
ss
adc
enter
xor
add
pop
cmpsl
lods
inc
fdivrl
add
scas
inc
aad
mov
loope
out
lea
outsb
dec
loope
pusha
pusha
rol
sarl
ret
add
mov
or
popa
push
sub
cmpsl
push
fldt
xor
mov
shll
ror
aaa
addl
adc
cmp
push
xor
or
repnz
push
mov
add
push
mov
roll
rolb
jo
lea
movl
add
mov
push
or
mov
sbbb
icebp
lcall
stc
mov
mov
xchg
pop
and
adc
mov
cmp
enter
xchg
leave
es
mov
fwait
adc
addb
push
test
iret
sub
mov
add
inc
ljmp
mov
sbb
push
out
push
mov
in
push
add
in
jae
mov
add
mov
sbb
je
push
dec
inc
or
je
xchg
push
xchg
insl
pop
mov
cwtl
insb
bound
cltd
inc
imul
inc
repnz
xchg
ljmp
nop
daa
mov
cs
cmpsl
push
lahf
sbb
loopne
push
adc
or
loope
add
lods
add
fwait
aas
sbb
sbb
jecxz
mov
mov
cli
call
dec
sbb
or
jo
jbe
cmpsb
lods
mov
imul
sbb
push
sub
sub
sbb
mov
test
cmpsb
inc
mov
rcr
fistl
rcl
push
xor
sub
ret
jne
pop
inc
rolb
cmc
mov
or
sahf
fld
cld
lods
test
push
mov
in
sbb
adc
repz
or
sar
cmpsb
add
jmp
add
mov
push
stos
inc
cmp
mov
bsr
push
xchg
add
loop
push
cs
fwait
stos
add
cwtl
int
sar
pop
rcll
push
and
and
add
mov
xchg
adc
add
popf
nop
out
xor
mov
mov
int
push
fistpl
push
mov
fwait
xchg
sbb
sub
lahf
push
xor
pusha
xorb
cs
cmp
aas
dec
lods
xor
sub
orl
mov
mov
inc
jne
jge
cmpl
enter
cmp
mov
add
pop
int3
and
mov
mov
outsl
sub
into
mov
les
addl
test
mov
sub
mov
adc
cmp
faddl
push
aas
cmp
test
rorl
and
dec
cmp
jo
xor
popf
lods
sub
add
sub
mov
xor
shll
add
xchg
test
out
xor
adc
rclb
lea
push
inc
pop
push
mov
xor
sbbb
nop
mov
stos
sbb
stos
pop
rolb
dec
sbb
rol
push
outsb
popa
stos
pop
insl
ss
fwait
and
or
or
push
adc
adc
inc
dec
pop
int
ret
mov
shl
aaa
jno
aam
jmp
addl
cltd
pop
push
shlb
je
filds
dec
fsubrs
lret
repz
es
push
push
adc
mov
sbb
xchg
rolb
sbb
dec
outsl
movsl
sub
add
bound
inc
test
lods
or
jno
sbb
mov
movsl
cmpsb
mov
inc
dec
xor
jge
outsb
adc
and
movl
inc
inc
add
sub
inc
movsl
sbb
sbb
add
ja
mov
sahf
test
add
imul
out
pop
js
pop
int
add
push
inc
test
jne
dec
rclb
rclb
push
in
leave
test
or
shll
mov
dec
sub
adc
cmpsl
pop
dec
shlb
jno
xchg
movsl
int3
pop
adc
sbb
in
inc
adc
ljmp
adc
or
xchg
cmp
mov
cmp
add
add
or
mov
inc
mov
and
cwtl
pop
sbbl
repnz
xor
in
rol
add
cmp
bound
dec
test
adc
xorl
or
mov
sbb
sub
xchg
lcall
nop
mov
out
sub
cwtl
cmp
adc
add
inc
leave
mov
mov
sbb
push
and
roll
and
mov
dec
add
test
sub
lock
mov
mov
inc
aad
and
xchg
scas
jge
rolb
adc
test
ss
lods
push
popf
mov
inc
test
xor
add
add
roll
rclb
je
subl
pusha
push
adc
xor
mov
sub
in
sbb
xchg
mov
push
add
fistl
call
xacquire
pop
pop
push
cld
push
and
test
test
pusha
loop
cmp
add
lock
out
mov
imul
mov
add
dec
jae
or
in
sub
xlat
movsb
subl
enter
mov
es
sbb
adc
jns
ret
add
fdivl
and
and
and
or
nop
cmpsl
mov
pop
push
adc
mov
cmpl
lret
prefetcht1
push
imul
ret
and
jne
cs
xor
rolb
fs
push
pop
mov
movsb
and
mov
push
cmp
dec
push
test
and
add
fisubs
mov
sbb
rcll
dec
gs
mov
subl
pop
adc
or
aas
pop
adc
scas
add
and
scas
xor
ljmp
aam
or
sbbb
outsb
in
ret
mov
std
mov
mov
push
cld
and
nop
cs
cmpl
addb
out
fistpl
mov
out
addl
outsb
shll
jae
orb
cmp
rcrb
lods
pop
leave
push
leave
stos
dec
cld
mull
mov
insb
addl
sbb
stos
out
addb
xchg
mov
imul
pop
sbb
stos
xchg
subl
or
mov
leave
jae
in
and
insl
lods
call
push
mov
sbb
jo
test
dec
and
mov
stos
inc
add
loop
sbb
push
idivl
roll
sbb
xlat
and
add
cltd
xchg
sbb
jno
out
pop
cmp
dec
xor
add
shrb
mov
out
push
dec
repz
jle
or
xchg
insb
jno
cmp
xor
fdivrs
push
jmp
ret
sbb
fs
pop
xchg
je
movsl
add
fs
sub
sarb
cmp
adc
add
add
push
add
xchg
add
and
test
les
add
loopne
repnz
adc
add
jmp
loope
mov
inc
or
add
or
clc
sbb
or
jns
ret
into
pusha
int
sub
jno
and
jmp
pop
mov
mov
adc
stos
pop
push
add
movl
xlat
mov
pop
inc
mov
lcall
mov
movsb
add
repz
push
subl
rcl
mov
mov
sub
adc
jns
lea
cmpsl
sbb
mov
and
xor
andl
fisttpll
les
mov
and
leavew
shlb
push
lods
pop
mov
mov
lea
cmpl
dec
cmp
nop
jno
imul
lcall
cli
mov
or
adc
push
sub
addr16
mov
cmp
jecxz
sbb
iret
xchg
dec
add
rolb
or
add
stc
lods
add
add
orb
lock
inc
adc
adc
or
inc
or
loopne
sldt
fs
xchg
mov
mov
add
and
js
test
xor
add
inc
lcall
popa
xor
ror
loop
pop
or
pop
out
inc
sbb
push
and
lcall
or
add
aam
idiv
dec
repz
sbb
adc
cld
xlat
lcall
jne
or
lods
pop
dec
sub
movswl
cmp
or
or
adc
pop
jnp
mov
xor
push
pop
mov
inc
inc
test
test
loopne
xchg
jo
test
inc
shll
sbb
sub
jle
add
push
and
and
aaa
inc
insb
add
dec
bound
and
testl
or
inc
es
push
xor
or
adc
mov
push
stos
sbb
pop
xchg
dec
pop
pop
addr16
rclb
pop
imul
mov
fisttpll
leave
ret
or
and
and
fwait
adc
roll
add
stos
inc
mov
adc
dec
or
aad
sbb
scas
push
mov
ljmp
sbbb
jbe
cmp
or
push
shrb
add
inc
xor
add
mov
daa
sub
or
jne
and
idivl
pusha
sub
jns
bound
bound
cs
mov
pusha
cld
add
adc
pop
and
mov
xor
aam
jle
pop
cmpsb
fnstsw
sub
repnz
add
pusha
adc
or
inc
xchg
push
pop
adc
add
test
movsl
add
xlat
hlt
sbbl
and
xchg
cmp
adc
clc
cmp
cmpb
das
mov
sti
aad
inc
and
cwtl
scas
dec
dec
inc
inc
dec
sbb
adc
sbb
add
stos
xor
rorb
pushf
gs
inc
and
aad
mov
xchg
adc
push
nop
push
leave
add
jae
sbb
xchg
repz
xor
stos
cmp
sbb
inc
inc
les
movl
mov
cltd
xchg
add
push
or
sbb
mov
iret
sti
ljmp
roll
stos
inc
add
add
aam
aaa
adc
add
xor
cmc
or
fwait
xor
mov
pop
push
cmp
inc
adc
dec
or
jno
les
je
aam
push
fadds
mov
pop
call
test
sbb
adc
adc
stos
je
or
mov
aas
adc
sbb
add
push
subb
loop
pop
les
cwtl
aad
add
mov
mov
mov
ficompl
push
mov
daa
pop
push
test
or
sar
jbe
int3
sub
sub
push
mov
jns
adc
inc
add
jne
jmp
inc
cmp
jp
loopne
jecxz
rorl
pop
nop
sub
xlat
jle
es
imul
xor
adcb
push
jo
adc
jne
adc
cmp
push
and
data16
mov
stos
xchg
int
add
push
sti
shlb
inc
mov
icebp
xchg
out
adcl
cltd
xchg
sahf
cwtl
movsb
pusha
mov
je
and
das
rolb
cmpsb
stos
dec
popf
adc
add
pop
insb
or
mov
mov
je
insl
pop
cmp
fnsave
jno
mov
sub
jg
mov
add
or
rolb
jge
lret
adc
dec
push
inc
sbb
nop
js
mov
cmp
dec
jp
lds
scas
out
rorb
outsb
inc
arpl
movsl
jns
rolb
add
adc
mov
pop
iret
addl
loopne
das
and
cmp
insb
icebp
aaa
push
daa
xor
daa
cld
cmp
cmpsb
mov
jo
gs
lea
repz
push
rorl
in
mov
mov
xchg
or
test
test
in
mov
iret
pop
mov
pusha
sub
push
dec
or
jg
or
nop
out
adc
jo
sbb
movsl
xor
pop
sub
push
mov
add
pop
xchg
in
stos
and
mov
inc
dec
inc
push
ret
lds
jne
imul
stos
push
leave
jb
inc
inc
or
or
jmp
popa
stc
pop
cmpsl
jne
sub
cmc
push
rorl
nop
xlat
cmpb
xlat
push
test
scas
mov
mov
repnz
aad
roll
out
lea
inc
inc
dec
mov
stc
inc
enter
push
inc
frstor
mov
ret
subb
pop
pop
jo
cmp
cmp
ret
in
xchg
cmp
dec
fisttpll
jo
pop
mov
enter
adc
mov
cmp
pusha
inc
sahf
outsl
sarl
and
adc
add
popa
jne
hlt
scas
push
cwtl
xor
pusha
pusha
xchg
inc
push
sbbl
add
mov
daa
in
jl
push
inc
or
gs
pop
inc
mov
adc
shrl
in
ljmp
push
dec
add
fsubrl
add
add
aad
jmp
mov
movsb
stc
and
mov
out
orb
xor
push
rorl
mull
or
and
repz
or
cmp
imul
movsl
not
mov
ret
je
mov
add
fdivs
and
add
sub
dec
cmpsl
xchg
and
or
pop
pop
rol
inc
leave
sub
add
add
xlat
adc
rolb
addb
jg
adc
sbb
adc
or
rol
sub
sub
add
in
sbb
jo
and
adc
xchg
fcom
lea
and
inc
arpl
roll
dec
inc
pop
adc
rorb
dec
pop
or
mov
sbb
add
dec
sbb
add
inc
xor
lea
loope
inc
addb
lea
movsl
and
dec
outsl
and
push
adc
inc
mov
mov
rcrb
push
aad
xor
test
or
loope
jmp
inc
mov
pop
xchg
push
or
nop
out
shll
jb
sub
add
dec
sub
jg
lea
add
mov
sbb
xor
scas
mov
adc
add
and
ret
cmp
fwait
xchg
jbe
jbe
addr16
jb
add
pop
xchg
sub
inc
adc
mov
scas
inc
rclb
inc
adc
bound
cmpsb
mov
xorb
mov
dec
pusha
push
and
cmpsl
or
stos
cltd
xchg
in
leave
popf
shlb
aad
and
sbb
cwtl
inc
mov
cs
add
cmp
inc
xor
xchg
add
push
xchg
inc
xchg
and
cmp
sbb
dec
stos
jmp
pop
test
and
rorb
jb
xchg
push
sbb
push
xlat
popf
xor
push
fstl
and
aaa
fsub
push
enter
insb
adcl
test
lea
add
test
mov
dec
scas
mov
push
or
add
iret
pusha
xchg
mov
xor
and
repz
movsb
jns
test
and
mov
mov
test
add
test
adc
ljmp
int
jge
xor
cmp
in
cmpsb
stos
test
rcll
or
test
or
xchg
sub
add
xlat
sbbl
mov
rol
pop
and
push
adc
push
fsts
jae
fimuls
jb
daa
push
imul
jle
cmp
pusha
mov
ja
test
xchg
cltd
daa
dec
adcb
mov
pop
in
shld
mov
mov
fldcw
inc
or
es
pop
gs
cmpsb
add
adc
cmp
mov
mov
test
inc
mov
pop
fsubl
fs
enter
test
xor
jo
insl
mov
cld
add
jnp
sub
js
inc
ret
jo
xchg
ja
or
dec
add
xchg
hlt
sbb
add
and
dec
es
and
sub
xor
aam
jge
push
mov
pop
out
add
or
sub
mov
xor
loopne
pop
dec
lods
add
mov
and
les
shll
sub
or
mov
jmp
and
repnz
movsl
scas
push
scas
jae
or
jnp
outsl
mov
clc
int
cmp
add
mov
movsb
pop
int
addl
test
push
adc
sub
popf
xchg
cmp
stc
loopne
dec
add
insb
or
ret
add
sbb
cmp
and
shll
push
dec
pop
inc
dec
ret
mov
movsl
mov
lods
into
mov
roll
add
sbb
mov
lock
incl
inc
rolb
cmp
inc
and
dec
push
push
dec
pop
jno
xor
cmc
orl
jne
ret
fisubrl
or
inc
mov
cmp
subl
sbb
inc
std
pop
sbb
nop
cmpsl
iret
stos
jne
out
cld
mov
jne
xor
and
sub
es
add
std
les
inc
jle,pt
xchg
mov
pop
jo
sbb
roll
jo
shl
aad
adc
lds
xor
gs
cs
jno
pop
sub
test
loope
dec
loop
inc
repnz
dec
sbb
pusha
test
xchg
adc
push
mov
sbb
jo
cmpsb
repz
movsl
add
push
addl
sbb
add
mov
push
sub
in
jmp
and
out
push
and
pop
mov
xor
sbb
push
xchg
movsl
addr16
sbb
inc
jb
push
bnd
loopne
xchg
mov
add
dec
push
in
add
or
push
sub
or
push
sbbb
and
mov
addb
mov
out
mov
add
stos
xchg
movsb
add
mov
add
lahf
mov
addl
and
aam
mov
or
xor
jmp
roll
nop
addr16
add
xor
and
adc
sbb
cmc
addb
push
mov
nop
test
add
sbbb
popa
icebp
scas
and
or
and
pop
xor
sub
test
push
xor
enter
jns
roll
cmp
sub
dec
dec
sub
xor
adc
or
arpl
addb
add
mov
es
push
xchg
jnp
dec
dec
inc
aas
bound
jo
cmp
jg
int
dec
adc
and
and
add
push
sub
mov
and
sbb
mov
inc
add
mov
dec
popa
push
dec
xor
inc
and
test
dec
push
jns
adc
les
add
lods
sbb
xchg
les
or
das
test
stos
or
fs
cmp
dec
pop
add
test
mov
cmc
mov
push
je
fldcw
aam
jno
rorb
or
rol
mov
arpl
mov
xchg
mov
mov
gs
mov
imul
xor
push
int
push
repnz
jnp
cwtl
ljmp
inc
shll
icebp
aas
push
mov
xchg
in
push
nop
push
xchg
adc
fildl
dec
jae
inc
jecxz
or
inc
lcall
add
shrb
pop
sbb
pop
pop
push
add
pop
push
dec
pop
repnz
repz
rcrb
mov
mov
jecxz
and
inc
mov
inc
les
mov
imul
cs
ret
add
mov
adc
xor
xchg
sub
mov
dec
mov
mov
insb
aad
daa
add
pusha
or
les
imul
loopne
out
mov
pop
ret
dec
jne
mov
sahf
lret
push
int
mov
mov
sbb
dec
push
cmp
call
lea
and
and
xor
xchg
mov
adc
dec
push
cmc
jecxz
mov
mov
ja
push
cmp
mov
sahf
xor
and
or
xchg
addl
push
adc
ret
repz
cwtl
stos
sbb
cmp
je
or
stos
scas
imul
dec
push
pop
pusha
lods
out
sbbb
sbb
lcall
add
dec
xchg
mov
add
ds
mov
nop
push
and
or
mov
xor
icebp
insl
dec
pop
adcl
xor
push
fwait
inc
stos
pop
xor
inc
or
scas
nop
addr16
and
add
jmp
adc
dec
out
cmp
add
ret
jno
je
cmp
cwtl
and
xchg
adc
shlb
push
dec
push
lea
mov
push
insl
add
test
mov
fs
ja
push
popa
shl
and
adc
call
or
inc
add
test
adc
push
jne
gs
adc
xor
xchg
add
or
movsb
ror
pop
xor
and
sbb
daa
dec
cmpb
cmp
cwtl
lods
sbbl
nop
subb
add
adc
in
sub
sahf
aam
imul
or
dec
lods
or
and
mov
xor
and
xor
mov
inc
mov
orb
movsl
sub
and
mov
popa
pop
add
and
sarl
xchg
outsb
push
sbb
jno
adc
add
xchg
xchg
mov
or
int3
cmp
mov
mov
xchg
scas
popl
addb
push
xor
jge
sbb
inc
jns
fildll
and
xchg
jns
les
lea
adc
jne
orb
pop
sbb
popf
adc
or
sbb
dec
hlt
sbb
sbb
pop
inc
test
pop
cwtl
aad
jo
dec
xor
jbe
pop
das
lcall
sub
jns
lahf
xchg
push
shlb
push
sub
subb
stos
outsl
mov
sbb
or
push
xor
and
push
or
mov
or
jns
inc
andl
sub
movsl
add
adc
orb
mov
pop
or
popa
ljmp
andl
jg
dec
xchg
adc
adc
mov
inc
out
movsl
orl
addr16
enter
clc
push
push
add
addr16
mov
xchg
orb
inc
sbb
dec
sub
cs
bound
adcl
add
sub
adc
mov
dec
push
lcall
int3
stc
jle
dec
push
shl
or
xor
xor
repz
cmpsb
sub
sbb
loop
push
xor
inc
add
xor
adc
out
and
push
lods
mov
ret
fstpl
and
mov
dec
cli
jmp
ds
pusha
bound
adc
push
cmpsl
clc
test
adcb
add
pop
inc
or
push
adcl
scas
cs
in
or
lds
insl
push
sub
push
and
and
les
adc
add
sbb
add
or
xchg
dec
push
or
xchg
or
and
jnp
je
push
fnstsw
mov
push
pop
js
dec
xchg
test
add
inc
pop
jo
addr16
in
cmp
push
pop
dec
xchg
xor
outsb
xor
dec
dec
dec
mov
outsl
sti
sub
xchg
lcall
orb
add
or
xchg
ret
cs
inc
or
push
sbbl
jp
add
loope
xchg
dec
pop
jmp
lods
inc
dec
lcall
pusha
or
ret
daa
test
and
inc
or
nop
pextrw
mov
add
leave
shll
or
push
pop
ret
test
push
dec
add
sbb
inc
or
stc
dec
test
xorb
popf
or
jecxz
mov
shlb
call
ja
mov
mov
mov
adc
test
xor
xchg
sub
pop
sub
sbbl
xchg
mov
adcb
lea
repz
dec
or
pop
pop
lahf
sbb
inc
add
nop
cmp
pop
inc
jb
xchg
inc
cmp
add
outsb
inc
lahf
imul
xor
aad
lahf
les
nop
stos
mov
clc
divl
addb
enter
inc
mov
push
mov
addl
lods
mov
fs
stos
hlt
add
adc
je
dec
xchg
or
repnz
sub
es
ret
inc
adc
mov
cltd
adc
jecxz
xchg
mov
sbb
mov
inc
addb
adc
inc
inc
add
mov
sbb
sub
shrl
inc
xchg
loope
sub
mov
in
movsl
jo
popa
sub
mov
push
fnstenv
lock
sbb
and
adc
les
leave
and
add
push
push
or
xchg
out
loopne
push
mov
aaa
jne
sbb
loope
arpl
or
dec
jno
dec
inc
add
push
or
cmc
xor
push
push
std
icebp
fldt
std
push
fwait
idivb
mov
adc
scas
ja
xor
movsb
jo
inc
mov
adc
inc
movsb
lea
adc
or
data16
cmp
and
imul
add
pusha
sbb
dec
jp
mov
mov
ja
mov
stc
mov
adc
mov
ljmp
and
nop
addr16
sahf
sbb
xchg
jg
jge
lret
add
iret
mov
and
pop
pop
add
inc
sub
inc
or
add
add
inc
and
inc
sub
cmpsl
or
ss
add
aaa
loope
push
mov
jmp
repz
cmp
inc
push
add
lcall
push
push
push
or
inc
mov
push
and
in
add
xchg
dec
lcall
add
enter
mov
adc
dec
add
adc
lahf
sbb
rclb
aaa
mov
and
xor
mov
not
push
inc
and
sub
cmp
mov
push
xor
add
push
add
mov
imul
xor
popf
sub
pusha
lcall
out
in
jmp
in
dec
push
pop
mov
sub
fadds
dec
or
add
push
adc
xor
mov
rclb
push
dec
push
test
pop
aaa
jno
daa
hlt
xchg
popf
add
xor
inc
std
adc
push
es
or
mov
pop
cmp
imul
cli
cmovl
cmp
or
sbb
test
adc
pusha
lret
jecxz
test
imul
and
std
in
mov
mov
popa
pop
inc
mov
imul
add
stc
stos
and
mov
dec
arpl
push
arpl
aaa
add
or
jge
cmp
sbb
mov
lea
push
add
sbb
push
aad
cmp
aad
stos
and
and
fwait
cmpsl
adc
jne
frstor
mov
lds
xor
adc
int
dec
repz
push
xchg
lret
mov
ret
and
adc
jns
rol
movsb
addr16
ret
dec
or
jo
in
and
shll
add
negl
wbinvd
rcl
or
sub
rorb
mov
pop
push
out
add
mov
lods
sub
mov
dec
scas
and
leave
lcall
mov
cltd
add
push
or
adc
push
rclb
inc
pop
push
inc
xor
jae
adc
and
icebp
addl
jmp
shll
mov
or
cmp
push
andl
imul
mov
pop
mov
push
pop
leave
gs
cmp
xchg
mov
test
dec
mov
rolb
rclb
arpl
mov
add
add
arpl
add
pop
scas
pop
add
repz
int
mov
mov
sti
and
xchg
xor
repz
cmpb
cmc
adc
xorl
xor
inc
xchg
xor
fwait
push
add
scas
push
mov
cmp
arpl
cmp
add
pop
aas
inc
mov
mov
mov
add
mov
xchg
cmp
xchg
adc
sub
push
xor
out
mov
push
popa
stc
nop
inc
push
dec
mov
mov
insl
lds
insl
loope
sub
and
sbb
pop
lods
sub
aad
cmp
sbb
inc
or
ja
pop
adcb
out
cmp
and
imul
xor
addb
fwait
es
in
cmp
inc
sbb
lock
fisttpl
add
inc
jp
pop
xor
cwtl
repnz
cmpsb
mov
mov
adc
ret
cmpsb
adc
push
xlat
sbb
loope
inc
adc
mov
neg
sub
sub
sub
jmp
or
cli
ja
nop
add
push
or
pop
mov
and
mov
add
xchg
flds
inc
mov
xchg
mov
and
cmp
imul
pop
push
aas
cmp
push
inc
add
sub
dec
sub
fs
gs
sub
push
adc
mov
xlat
xchg
rol
mov
mov
xchg
ja
test
xchg
jne
pop
adc
stc
addb
cmp
mov
clc
lea
cmp
dec
push
pop
adc
mov
mov
inc
sub
jmp
sbb
jg
sahf
nop
bound
cwtl
scas
sub
pop
sbb
xor
mov
jp
arpl
fisubl
scas
test
xchg
sub
inc
mov
mov
shrb
sub
loop
pop
pop
repz
mov
loop
push
enter
push
or
leave
add
add
inc
dec
and
iret
dec
inc
pop
jne
and
dec
adc
push
xor
add
rcrl
cmp
inc
sbb
mov
orb
xchg
fsubrl
adc
test
add
cwtl
stos
or
test
dec
xlat
imul
pop
mov
or
cmp
mov
dec
popf
and
std
add
ret
xor
mov
out
xor
cli
dec
call
cmpsb
in
push
popf
int3
cwtl
and
mov
mov
rcl
add
cltd
add
cwtl
mov
sbb
mov
mov
add
test
pop
sub
inc
push
nop
add
scas
dec
xchg
mov
sub
cmp
jb
pusha
orb
cmpl
push
daa
and
cmp
in
mov
aad
nop
mov
outsl
cmp
add
movsb
sub
mov
js
adc
push
sub
pusha
and
leave
insb
movsb
push
aad
adc
lcall
mov
inc
sub
iret
test
ss
lock
sbb
add
fwait
lock
pop
jmp
clc
addr16
or
xor
sub
ja
or
lods
xor
cmpsl
mov
xor
sbb
add
mov
or
lds
cmp
ljmp
xor
popf
xchg
in
hlt
sub
jns
xchg
in
cmp
das
xor
push
test
mov
sub
push
popa
pusha
cltd
arpl
aad
and
jmp
push
nop
sbb
sub
in
inc
inc
xchg
test
and
cwtl
push
and
push
xor
or
subl
pop
es
add
xor
sub
ret
sti
gs
add
mov
movsb
mov
add
fs
inc
test
mov
dec
jne
adc
popf
mov
rcll
inc
lea
add
add
push
pop
xor
and
add
pop
rcll
fistps
adc
jbe
sti
lahf
push
add
addl
cmc
or
add
mul
cmpsb
stos
jae
dec
xchg
mov
sbb
mov
test
sub
test
mov
pop
adc
jo
sbb
aas
add
ljmp
cmc
les
cmpb
pop
xor
sbbb
push
xchg
mov
mov
xchg
push
mov
nop
and
or
add
lret
jno
mov
or
inc
sub
or
popf
into
pop
scas
xor
xchg
and
cwtl
or
sub
add
pusha
ja
jne
pushf
push
es
and
add
loope
pop
inc
bound
pop
dec
xlat
orl
add
dec
jecxz
dec
or
shrl
mov
cld
jo
xor
xchg
test
fimuls
data16
shrl
dec
sbb
mov
out
pop
add
add
cmp
sub
pop
decl
pop
inc
push
or
xor
adc
jmp
push
push
cwtl
stos
push
lret
jo
mov
movl
inc
or
adc
psubd
xchg
pop
popf
cwtl
jne
fimuls
roll
add
dec
imul
shll
popf
pop
cmp
or
or
and
adcb
xchg
jo
insb
pop
pop
pop
add
add
inc
ror
add
lcall
enter
lds
add
and
sbb
pop
mov
mov
aam
jo
setg
loope
dec
ret
add
pop
cmp
out
ss
push
roll
xchg
sub
rorb
mov
push
cmpsl
xchg
jne
add
inc
and
inc
test
xchg
cmpsl
xor
sbb
push
cs
int3
pop
xchg
mov
leave
push
push
inc
mov
and
jecxz
or
jne
and
push
pop
add
xchg
or
stos
inc
sbb
jo
add
insb
push
repnz
fiadds
ret
mov
sbb
and
add
inc
imul
jb
jle
dec
and
and
or
sbb
xchg
jbe
pop
adc
or
js
add
test
add
daa
shrb
dec
inc
add
sbb
dec
cmp
add
pop
mov
push
mov
daa
adc
stos
xor
or
dec
sub
mov
add
add
sti
adc
mov
sbb
push
mov
insl
bound
cmpb
and
push
dec
push
insb
out
pusha
je
rolb
or
xor
dec
les
push
loope
adc
les
rcl
and
push
addl
xorb
hlt
xchg
xor
subb
and
mov
jmp
pop
jecxz
jmp
adc
inc
push
insl
ljmp
sbb
bound
push
ret
rcll
pop
inc
cmp
push
mov
movsl
mov
and
pop
inc
loop
cwtl
jo
sbb
pop
vmwrite
add
xor
and
xchg
and
nop
ret
xchg
adc
not
sbb
or
adcb
inc
inc
or
add
les
mov
pop
sbb
mov
rorb
fst
rolb
dec
loop
jmp
or
pushf
rolb
push
adc
add
daa
dec
mov
jmp
inc
scas
add
repz
cwtl
or
mov
or
add
cmp
roll
xchg
and
subb
fwait
aam
mov
movsb
mov
iret
xor
jno
or
dec
pop
add
sub
enter
sub
xchg
pusha
inc
test
cmp
std
mov
les
cmp
sbb
aad
sub
adc
mov
mov
xchg
or
mov
sbb
sub
xchg
rcrl
xlat
dec
cwtl
sbb
pop
mov
adc
int3
pop
leave
mov
xor
or
or
stos
pop
xchg
push
push
or
fldt
popa
icebp
stos
mov
ja
clc
sbb
movsb
adc
sti
pop
or
shrb
dec
rolb
outsb
mov
je
sbb
daa
aam
loopne
inc
and
pop
ret
jno
lret
stc
dec
or
bound
movsl
sub
sub
mov
add
repnz
add
call
mov
cmp
adc
jnp
sahf
pop
aad
mov
adc
jp
lods
nop
out
xchg
test
cmp
add
dec
xor
lret
push
pop
mov
cmpl
adc
xor
push
and
aaa
push
xchg
subb
sub
aaa
mov
inc
adc
and
push
inc
test
jae
gs
repnz
jns
add
cmpsb
sub
adc
jecxz
add
or
adc
push
sub
pop
rorb
les
adc
push
push
and
push
movsl
push
hlt
adc
lcall
push
ret
and
xchg
lret
cltd
dec
jne
arpl
push
mov
pop
leave
rep
add
shlb
push
rdrand
insl
add
pop
or
jnp
pushf
cmp
divb
adc
push
push
add
push
rorl
or
sub
inc
lahf
pop
and
mov
cmpsb
sub
add
and
inc
loope
add
jecxz
sbb
push
rclb
mov
repz
movsb
movsl
jno
aas
sahf
lea
xchg
inc
xchg
pusha
pusha
loop
mov
mov
outsb
pop
adc
sbb
push
leave
cmp
mov
jge
mov
loop
lea
inc
dec
adc
rclb
or
xorl
xor
sub
popf
xchg
iret
roll
inc
and
dec
xchg
sub
fstl
adc
scas
cmpsl
in
rolb
pushf
xchg
cmp
addr16
mov
and
pop
fcom
xlat
mov
add
shlb
push
inc
mov
fistl
jno
and
dec
jno
cwtl
cmp
insl
push
cmp
pushf
and
imul
pop
adc
cmp
adc
sbb
add
and
inc
xlat
adcl
xlat
sub
ret
or
test
or
mov
lock
test
or
pop
shlb
xorb
int
mov
and
add
addb
inc
jge
mov
test
pop
pop
xchg
mov
mov
cmp
inc
inc
repnz
cmp
stos
scas
cmp
std
push
test
iret
cld
and
pop
aad
mov
stos
mov
or
xchg
xchg
aas
jb
aaa
xchg
pop
mov
xchg
xor
sbbl
inc
test
mov
mov
add
les
sub
insb
mov
adc
test
lds
jmp
cmpsl
pusha
dec
insl
jae
inc
sahf
in
add
scas
inc
or
or
js
mov
dec
or
pop
xor
pop
adc
dec
jo
mov
dec
pop
leave
int
inc
aam
push
mov
push
push
pop
pop
push
out
insl
sbb
pop
and
test
aad
cmpsb
mov
push
inc
pop
rclb
sti
test
push
mov
push
cmpsl
loopne
or
sbb
lahf
adc
and
pop
adc
and
popa
add
or
inc
pop
and
ljmp
inc
mov
lods
mov
lcall
add
arpl
inc
push
dec
inc
clc
lea
in
mov
call
push
test
xor
xchg
inc
rolb
addl
enterw
inc
pop
insl
xcrypt-ctr
cmpsl
popf
lds
movl
mov
dec
sub
push
inc
add
std
or
add
das
dec
daa
push
insb
pop
push
imul
jmp
cld
int
xchg
out
xor
mov
inc
add
and
and
jno
mov
dec
stos
pop
movsb
push
stos
mov
notl
cmp
push
xor
imul
jnp
loopne
or
addr16
inc
or
scas
insl
sbb
mov
inc
les
inc
lods
pop
push
in
insb
or
inc
sahf
aam
add
adc
sub
jmp
xchg
pushl
test
add
adc
inc
les
test
xchg
cli
cs
mov
mov
adc
in
rolb
xchg
in
xor
xor
adc
xchg
jb
or
add
adc
push
test
div
pop
inc
fadds
and
les
lods
jne
adc
rcr
lods
pop
inc
or
js
lcall
xrelease
and
pop
test
mov
or
outsb
iret
test
inc
pop
jno
mov
xchg
ss
popf
pusha
mov
cmpsl
ja
sarl
pop
out
cmpsl
fcmove
mov
cmp
cmp
pop
leave
sub
or
mov
jae
adcb
xor
rorb
inc
sub
mov
orl
dec
sbb
or
inc
mov
inc
lahf
das
or
inc
repz
mov
dec
mov
xor
pop
and
mov
imul
mov
outsl
add
mov
adc
pop
pop
into
stos
add
add
push
push
aad
add
jnp
inc
sub
add
inc
xor
cmpsb
mov
and
sbb
nop
mov
add
stos
icebp
add
aam
xor
sbbb
xchg
popa
jecxz
inc
and
sbb
fstpt
xor
roll
sbb
jns
inc
inc
add
and
sub
push
and
add
fwait
arpl
movb
dec
push
addr16
loop
test
pop
loope
imul
mov
test
sahf
arpl
lcall
dec
fcompl
jg
or
mov
stos
add
rclb
movsl
sub
andb
subl
loopne
fwait
and
mov
daa
sbb
add
insb
pusha
into
outsl
es
fld
shll
fwait
pop
sub
dec
add
lcall
xor
loope
sahf
push
sbbb
push
pop
mov
bound
frstor
cmp
xor
dec
pop
ret
add
rolb
push
add
pop
out
nop
sub
inc
inc
or
xor
shrl
movsl
adc
sub
shr
mov
pop
incl
push
ss
sub
add
test
enter
mov
loop
aad
sbb
shlb
xor
or
adc
xchg
cwtl
inc
sbb
mov
mov
loopne
aaa
lahf
inc
push
je
cmp
inc
sub
pop
mov
pop
ss
adc
clc
pusha
or
lcall
pop
cmp
push
ret
mov
or
cwtl
mov
orb
cmp
in
mov
push
movsb
sub
sbb
test
adc
andb
sbb
cwtl
inc
and
and
insl
dec
inc
jo
fiadds
cmp
rcl
mov
xor
xchg
and
lea
and
push
aaa
push
nop
out
rcrb
sbb
add
arpl
enter
arpl
bound
test
movsb
mov
sub
mov
inc
adc
iret
adc
aas
xor
inc
iret
clc
les
add
dec
add
test
stc
xor
pop
stc
xor
lea
sub
push
mov
or
pop
pop
stos
push
inc
and
xchg
lahf
nop
mov
shlb
mov
adc
mov
test
push
xchg
cmp
adc
xor
dec
fists
lret
push
test
adc
push
cmpsb
mov
das
addl
jne
clc
adc
loop
fwait
mov
ret
mov
loop
xchg
push
xchg
imul
stos
add
leave
cmp
sbb
adc
push
sub
cmp
cmpsb
mov
lods
xor
xor
inc
add
shrl
mov
scas
mov
bound
xchg
pushf
cmp
cld
pop
dec
sub
lods
je
loop
es
ret
cmp
ljmp
and
add
xchg
mov
subb
dec
leave
or
mov
mov
mov
cwtl
sub
add
adc
cmpb
pop
std
lock
and
xor
adc
add
pusha
stos
fsts
mov
add
add
pop
mov
lods
add
dec
imul
mov
xlat
xchg
mov
shll
add
adcl
push
stc
ret
loopne
insl
bound
iret
and
lea
aaa
or
inc
push
pusha
loopne
les
rcll
and
xchg
cmc
cwtl
mov
cmp
jmp
and
loopne
lods
sbb
push
loopne
adc
jo
add
inc
push
xor
mov
adc
rolb
aad
add
mov
and
or
and
and
das
mov
imul
stc
push
xchg
jno
add
shlb
xchg
sbb
push
addl
or
cmp
inc
in
mov
xchg
inc
jno
popf
ss
dec
adc
mov
notl
adc
nop
inc
lods
aas
dec
xchg
cmp
arpl
ret
adc
test
push
add
adc
fisubrl
inc
adc
test
ret
enter
add
cmc
sbb
lods
rcll
test
xor
xchg
adc
mov
inc
add
dec
dec
and
addr16
add
cwtl
pop
cmpsl
sub
xor
fld
sub
pushl
inc
and
mov
mov
dec
jo
add
or
sbb
inc
mov
xchg
push
push
sysret
sbb
xor
sbb
pop
ljmp
add
fsubrl
cmp
xor
aad
push
mov
cltd
mov
daa
jge
add
cmp
push
xorl
inc
test
out
les
mov
push
adc
imul
cmp
mov
nop
aaa
sahf
mov
movsb
xchg
addr16
push
push
or
pop
adc
ret
add
andl
push
mov
xchg
jo
pop
sub
and
xor
ljmp
ret
add
xor
mov
push
nop
cmpsb
stc
push
add
adc
jecxz
inc
movsb
xchg
addl
lea
sbb
mov
push
push
mov
gs
add
lods
push
add
test
adc
test
sub
xor
mov
xchg
mov
xchg
push
fsts
inc
mov
cwtl
cmp
sub
dec
popa
or
ds
xor
movsb
jecxz
adc
push
xlat
push
add
adc
pop
adc
subb
mov
push
lahf
and
je
inc
push
dec
sbb
daa
movsl
enter
fsubs
imul
or
and
ret
pop
xchg
mov
mov
jo
sbb
daa
pop
push
int
sahf
cli
fiaddl
mov
rclb
xorb
push
pop
or
out
cltd
or
xchg
xchg
and
xor
mov
or
dec
repz
sub
aam
xchg
push
es
insl
dec
add
loopne
jns
ficoms
add
or
sub
aam
dec
cwtl
push
je
fwait
xlat
cmp
mov
arpl
in
fistl
xor
mov
stos
roll
adc
or
sub
add
shll
rcll
roll
dec
and
lcall
les
and
add
or
dec
sahf
jo
inc
xchg
and
aaa
repz
dec
or
mov
pop
dec
xchg
push
or
mov
inc
cmpsl
push
ss
outsl
xor
add
or
and
sbb
xor
outsb
sbb
sub
insl
push
jge
imul
loope
push
filds
mov
push
pop
push
dec
jge
sbb
shll
push
les
loopne
cmpsl
add
cld
ret
jae
out
add
rorb
arpl
les
xchg
out
mov
cmpsl
add
add
jmp
add
xlat
xchg
les
sbb
inc
and
jecxz
pop
fdivs
pop
push
rcrl
push
daa
scas
outsb
in
xor
clc
cmp
pop
imul
rolb
xchg
rolb
shlb
mov
or
pop
xor
jno
fadds
adc
push
add
pop
je
pop
idivl
rep
add
lcall
mov
loop
arpl
xchg
cwtl
add
pop
push
pop
es
cmp
dec
pushf
sbb
add
cmp
sub
xor
mov
mov
orl
sbb
sub
push
lcall
xchg
pop
or
lds
divb
push
nop
lret
sub
xor
add
push
les
sbb
push
add
dec
sub
je
mov
addl
and
gs
xor
insb
mov
jmp
dec
or
orl
mov
dec
pop
xor
test
push
mov
aam
sbb
or
scas
mov
mov
imul
adc
int
inc
xchg
test
mov
and
add
cwtl
mov
mov
lea
dec
loop
mov
mov
test
push
sub
mov
xchg
repnz
or
int
loopne
add
mov
in
xchg
lret
mov
frstor
dec
les
addb
mov
les
ret
add
aaa
and
add
add
inc
adc
icebp
pop
lds
je
push
mov
lds
xor
xchg
arpl
enter
mov
jecxz
mov
sbb
mov
rcr
dec
and
and
ret
pop
or
cmp
and
test
sbb
mov
xor
mov
or
add
add
mov
jmp
or
mov
test
jmp
dec
pop
or
add
cld
pop
test
cmpsb
mov
adc
jnp
and
test
xor
cmp
and
add
inc
xor
lret
inc
sbb
adcl
and
inc
xor
mov
rcr
mov
loopne
mov
sbb
rorb
out
sub
arpl
stos
andb
push
xchg
mov
cwtl
sbb
push
adc
and
loop
insl
pop
push
inc
dec
and
mov
jns
sbb
mov
je
cs
movsb
js
adc
jae
push
mov
call
push
push
imul
sbb
add
dec
mov
sub
ja
push
sub
add
jge
or
adc
inc
add
sbbb
nop
daa
lcall
add
dec
dec
and
movsl
andnps
pusha
inc
jge
sbb
xor
mov
add
mov
inc
arpl
les
loopne
or
add
bound
popa
inc
mov
xor
pop
inc
and
push
and
test
subl
sarl
or
and
nop
or
scas
rcrb
push
stos
movsl
dec
sub
sbb
stos
shll
adc
xor
inc
out
sbb
adc
adc
aad
fs
mov
inc
ret
jae
dec
or
nop
out
add
add
push
or
xchg
aam
or
adc
sbb
lsl
jo
push
in
mov
and
repz
xor
xor
setne
xor
pop
add
cmp
movsb
add
xchg
test
or
orb
leave
xor
orl
rolb
hlt
add
jns
push
popf
es
or
clc
nop
add
sbb
or
inc
jmp
xor
mov
push
cmp
enter
dec
jecxz
jo
test
scas
or
loope
add
adc
dec
orb
test
and
pop
sbb
sub
daa
hlt
add
stc
fs
push
rcll
xor
xor
xchg
push
movsl
mov
add
inc
add
or
bound
ror
mov
inc
mov
pop
dec
adc
ljmp
inc
sub
mov
mov
adc
mov
adc
lret
add
pusha
push
cmp
jmp
iret
push
and
jl
fsts
fstps
mov
sbb
lret
dec
xor
xor
xor
mov
notl
or
loope
add
mov
push
loope
iret
lahf
cs
out
rorl
test
insb
dec
inc
and
test
iret
xchg
pop
push
aad
xchg
cmp
or
or
mov
imul
mov
in
insl
rolb
add
jae
arpl
adc
leave
cmp
rcll
rclb
push
push
and
das
xchg
fstpl
movsl
add
lods
sbbl
sahf
mov
or
mov
push
leave
and
sub
inc
cmp
adc
dec
rolb
and
and
dec
daa
fs
call
adc
mov
pusha
adc
mov
mov
inc
jno
inc
sub
mov
push
jns
add
xor
clc
or
mov
leave
add
orb
jge
nop
lret
fldenv
xor
popa
inc
mov
adc
dec
out
xor
or
cmc
rsqrtps
faddl
cmpsl
cmp
xor
or
add
pop
cmp
dec
loope
dec
fistpll
dec
push
or
sub
xor
push
push
lret
loopne
sbb
add
adc
push
sbb
jno
add
inc
add
loop
es
les
fbld
or
add
mov
sub
cmp
movsb
inc
pop
lret
bound
loopne
ret
or
orb
cltd
xchg
std
fiaddl
jns
or
nop
dec
hlt
mov
dec
inc
dec
push
inc
aaa
stos
add
adc
ljmp
add
or
push
jge
imull
es
add
inc
add
shll
adc
mov
cmpsl
jno
cli
mov
mov
rorl
gs
pop
and
stos
movsb
xchg
fs
sub
lods
cmc
ficoml
int3
adc
leave
movsl
ret
pop
fnstcw
or
xchg
subb
or
bound
arpl
xchg
lods
dec
cltd
sbb
sub
sbb
add
pop
cmp
arpl
out
push
and
shrl
adc
cmp
jge
cmp
sub
mov
mov
rcll
dec
adc
dec
pop
lea
shrl
cmp
adc
push
and
sub
sub
repz
pop
and
lret
inc
sarb
sbb
xor
lea
ret
add
test
adc
stos
nop
xor
mov
sti
lcall
jecxz
mov
pop
cwtl
nop
xchg
mov
pop
inc
dec
or
xchg
mov
inc
ja
adc
or
loop
adc
imul
adc
xchg
sahf
and
add
add
jecxz
imul
add
data16
jno
inc
cwtl
add
add
and
mov
sub
or
imul
loope
pop
sahf
outsb
fcomps
rclb
call
es
add
adc
mov
and
sahf
or
jae
popf
xchg
mov
movsb
mov
je
ret
sub
pop
pop
jno
out
and
dec
push
insl
add
lods
pop
add
sbb
lcall
inc
nop
mov
stos
jmp
and
ljmp
pop
push
sbb
push
shrb
mov
dec
push
dec
ljmp
or
stc
add
icebp
xchg
jo
aam
andl
add
add
push
push
lods
je
xchg
testl
sti
push
jmp
aam
sbb
lods
add
ret
lds
and
pop
pop
repz
in
test
push
lcall
or
adc
push
cmpsl
xor
rol
add
ret
add
aam
push
adc
mov
or
push
or
add
adcl
xchg
movsb
test
sub
add
sub
rclb
cmp
inc
or
iret
add
xor
inc
mov
pop
jne
push
nop
outsl
mov
shrl
mov
cltd
xor
and
popa
sar
mov
mov
mov
inc
int3
xchg
adc
add
add
aaa
add
pcmpgtd
sbb
jg
push
pop
xor
xchg
xor
mov
rolb
sub
and
or
add
add
nop
dec
or
inc
xor
pop
cmp
mov
mov
push
adc
xchg
pop
dec
pop
nop
mov
or
push
adc
add
mov
sahf
test
out
xor
sbb
icebp
or
rol
add
pop
xor
in
es
ljmp
lds
popa
fcmovnbe
mov
and
pop
idivl
pop
add
test
addl
and
mov
or
sub
or
aam
sbb
or
cmp
insb
loope
xchg
mov
inc
mov
ja
jns
hlt
sbb
add
sahf
ja
test
sbb
xchg
pop
lcall
popf
or
xchg
imul
push
sbb
and
inc
imul
lcall
pop
daa
and
fwait
cmp
aaa
std
sbb
sbb
daa
nop
faddp
ss
xlat
roll
add
xlat
xor
and
fisubl
popa
add
sbb
xchg
test
test
jmp
mov
sub
push
cmp
adc
sub
add
mov
cmc
movl
push
push
xchg
sub
dec
cwtl
pop
and
aam
mov
inc
mov
test
jnp
shlb
stos
and
jne
js
jo
pop
das
cmp
push
ret
lahf
sub
out
push
xor
xchg
push
add
xor
movsb
push
movsb
imul
fcompl
or
push
dec
sub
pop
or
mov
or
movsb
or
test
push
add
or
jmp
scas
and
ja
stos
sbb
add
adc
add
adc
rcll
mov
adc
test
ret
add
and
inc
and
sbb
mov
movsb
pop
dec
loopne
and
movsl
fs
add
frstor
add
xchg
push
daa
sbb
mov
push
pusha
aaa
fs
stos
adc
pop
leave
cmpb
enter
and
movsb
add
inc
stos
bound
dec
out
dec
fiadds
shl
int
sub
es
cmpsb
rolb
pop
mov
add
inc
cmpsb
lahf
andb
leave
mov
push
adc
jmp
dec
add
daa
nop
orb
arpl
xchg
or
in
jmp
jo
and
adc
mov
dec
notl
push
add
mov
jnp
in
stos
or
test
aas
mov
test
nop
lret
adc
mov
addb
push
dec
cmpl
xor
ret
shlb
pop
bound
sahf
mov
and
mov
jns
test
cmp
cs
push
mov
iret
mov
adc
aaa
pop
pop
frstor
sub
dec
cmp
and
sub
gs
push
ret
shrb
or
inc
inc
mov
xor
adc
cmp
jns
sub
add
push
pop
pop
je
mov
inc
sub
dec
aam
push
in
mov
and
mov
sarb
sub
test
mov
adc
xor
xchg
gs
push
mov
cltd
aam
inc
es
jmp
and
cwtl
je
xchg
push
mov
lcall
mov
pop
ja
inc
cmp
fisubrs
shlb
shrb
push
jmp
add
add
pop
cmpb
add
inc
xchg
inc
and
push
mov
adc
add
xchg
and
push
or
mov
dec
mov
std
out
inc
dec
jno
push
mov
lods
pop
pop
add
and
adc
pop
ret
inc
lods
mov
in
push
mov
add
in
loop
outsl
dec
stos
add
cmp
add
xchg
cmpsb
aaa
jno
sub
lea
test
xor
push
notl
and
cwtl
jno
jne
sti
insl
push
push
sub
adc
add
dec
js
jle
fldcw
aad
mov
adc
and
inc
addr16
out
cwtl
pusha
cmpsb
es
repz
ret
push
movb
shr
xchg
adc
lea
add
jns
add
mov
xorb
add
add
cwtl
ljmp
or
shrl
cwtl
cs
jo
movsb
jecxz
or
push
mov
and
pusha
rorl
subb
or
and
xor
adc
sbb
cmp
mov
scas
xchg
or
ljmp
pop
mov
enter
cmpsb
xor
sbbl
mov
xor
imul
jne
test
orb
or
add
adc
sub
gs
pusha
lret
mov
pop
dec
es
mov
pop
sarb
sbbb
ret
add
xchg
aas
movsb
inc
sbb
int
xchg
add
sub
es
cmp
mov
scas
pop
add
loop
test
dec
int
mov
mov
dec
shrl
leave
repz
add
mov
cltd
in
cmp
add
cmp
movsl
roll
adc
xchg
jmp
ret
mov
cs
lret
cwtl
sub
jne
in
test
and
mov
push
adc
addr16
xor
rcll
rolb
sub
fldl
push
inc
mov
and
dec
inc
adcl
int
sbbb
lods
aad
pop
inc
outsl
ljmp
addb
out
cmpsb
push
addl
xor
cwtl
xchg
leave
sub
add
push
adc
popa
mov
arpl
rclb
add
roll
pop
add
push
inc
push
or
or
add
adc
leave
jge
in
or
sub
pop
cmp
mov
xor
cmpsl
push
mov
shrb
test
cmp
lds
inc
or
loope
or
popf
sbb
push
pop
mul
adc
in
xchg
gs
inc
adc
daa
xchg
dec
add
leave
lock
lods
shlb
jne
sbb
push
mov
pop
pop
xor
sbb
hlt
mov
jno
addb
dec
test
and
icebp
ret
push
jb
and
xor
xor
shlb
test
addb
xor
andl
orl
xor
dec
mov
and
cmp
xchg
inc
jmp
dec
adc
jns
ss
sub
mov
inc
dec
in
in
push
inc
xor
xor
sub
jo
loopne
xchg
imul
xchg
stos
pop
push
xor
loope
out
pop
dec
das
scas
push
aam
lcall
xchg
sub
sbb
and
cwtl
jmp
push
sarl
add
aam
jno
add
adc
inc
dec
lods
pusha
call
xchg
xchg
xor
mov
pop
inc
repz
push
mov
ja
cmpsb
push
cmp
lea
iret
pushf
xchg
and
push
aas
rolb
xchg
sub
mov
sub
inc
mov
test
or
das
pusha
pushf
outsb
mov
push
cmp
push
cmp
and
dec
and
pop
sub
jl
dec
test
or
insl
mov
mov
lret
lods
pusha
loope,pt
imul
adc
pusha
sti
sub
xorb
cmp
nop
push
mov
xchg
pop
ret
add
sub
test
jo
xor
add
adc
int3
pusha
inc
repnz
test
je
lea
stos
adc
push
dec
mov
shll
scas
sbb
sub
mov
pop
jno
inc
mov
or
mov
add
std
call
dec
and
stc
xor
adc
and
cmp
xor
inc
push
jmp
test
loopne
movsl
mov
push
cmpsl
lret
and
mov
push
outsl
pop
push
push
nop
jae
test
add
and
cmp
sbb
pushf
lock
sbb
mov
and
sub
add
mov
sbbb
aaa
popa
arpl
adc
xorb
and
or
dec
andl
mov
push
stc
dec
fisubl
jno
push
ljmp
repz
mov
cwtl
test
cmp
ret
jb
or
adc
push
sbb
data16
cwtl
cld
or
xor
adc
dec
aad
or
add
lock
loopne
pop
xlat
mov
sub
test
mov
into
dec
dec
jne
shlb
iret
je
mov
addb
or
add
mov
ret
insl
or
dec
mov
push
popf
ret
mov
and
repz
push
xor
test
mov
shrb
add
jns
adc
pop
adc
leave
in
lea
out
inc
movl
push
jb
add
add
push
adc
mov
mov
adc
aad
and
repnz
add
aam
and
imull
add
nop
rcr
shll
andb
mov
test
jno
xchg
sarb
das
pop
adc
movsl
inc
push
pusha
addb
and
xchg
push
inc
lea
add
aam
stos
adcl
mov
dec
sbb
sub
rolb
sbb
sub
je
jne
or
inc
and
enter
xorl
je
or
sbb
leave
aad
bnd
pop
lgs
adc
aam
jns
in
cmp
sub
shll
dec
push
push
enter
push
popf
test
sbb
mov
sbb
xor
sbb
push
rolb
ja
xor
pop
and
or
add
xrelease
adc
push
jp
cmp
roll
or
stos
movsb
sub
sbb
scas
add
mov
mov
sbbb
sbb
and
and
popa
pop
sub
push
outsl
or
inc
pop
mov
aaa
inc
test
lcall
mov
adc
inc
sti
and
xor
pushf
aam
add
iret
add
adc
int
aam
ljmp
push
mov
mov
sbb
pusha
cmc
adc
mov
movsl
nop
adc
xchg
out
jne
loopne
xchg
adc
xlat
mov
add
push
push
imul
pop
add
dec
adc
sahf
hlt
xchg
inc
loopne
xchg
push
repz
push
inc
inc
mov
jg
sbb
xchg
add
sub
out
fadd
jmp
pop
mov
stc
stos
lods
arpl
inc
or
loope
adc
scas
jl
xor
add
cmp
push
pop
pop
aad
and
jge
push
or
mov
inc
loope
js
sbb
fwait
jo
pop
lds
mov
or
push
fistpl
adc
xorl
pop
ret
je
add
xchg
rcrb
iret
mov
pop
rcrl
push
pop
and
pop
enter
sub
pop
inc
xchg
pop
add
and
cmp
pop
fstps
loopne
and
test
cwtl
loopne
and
lcall
inc
sbb
loopne
adc
mov
mov
jp
clc
or
shl
cmp
add
and
pop
or
test
enter
lea
movsb
cmp
hlt
fcoms
push
stos
movsb
mov
or
inc
dec
mov
dec
jmp
mov
adc
inc
add
add
cmp
pop
inc
bound
and
add
or
and
push
pop
pop
je
push
mov
aas
ret
daa
add
inc
inc
jo
ret
sub
jno
add
sub
ja
or
test
pop
add
xchg
cmp
test
repnz
in
push
test
add
js
and
fnstenv
sub
stos
in
mov
or
jg
int3
movl
add
dec
and
cmp
mov
mov
test
mov
or
pusha
xchg
or
or
add
sbb
outsb
sub
leave
repz
cmc
push
rorl
cmpsb
mov
pusha
jo
lods
js
les
jmp
add
test
add
mov
push
jecxz
push
loopne
subb
jae
xchg
mov
pop
xchg
les
cmp
fstl
inc
adc
lret
mov
loopne
les
xor
stos
shl
xchg
call
ficoms
cmp
mov
add
rcrb
xchg
add
cltd
add
ja
sbb
adc
jns
leave
fildll
imul
dec
cs
add
fwait
or
test
push
add
add
test
stos
les
mov
pop
out
mov
and
inc
or
sub
dec
jae
mov
pusha
push
pop
roll
ret
jecxz
and
andb
push
and
ret
rol
mov
dec
push
outsl
sbb
mov
pop
adc
mov
mov
adc
push
jb
fdivrs
and
push
xchg
fwait
mov
lea
xchg
scas
lcall
ret
adc
rolb
jo
or
or
sahf
xor
andl
xlat
jge
sbb
and
cmpsl
add
pop
push
test
push
lret
mov
and
add
add
and
lods
xor
sarl
cmc
inc
jecxz
add
mov
mov
jne
movl
loop
in
or
aaa
sbb
mov
add
sub
test
dec
push
aad
rcl
and
sub
xchg
je
mov
adc
jno
cmpsl
and
and
adc
stos
add
push
sarl
and
jecxz
adc
mov
pop
pusha
aad
push
and
ror
xlat
pop
xor
pop
nop
daa
sbb
mov
rcll
jl
je
dec
push
add
jno
mov
pop
inc
xor
inc
push
xor
adc
fldl
xor
push
adc
test
jge
sbb
inc
add
loopne
or
out
mov
shlb
mov
dec
mov
inc
ds
push
xlat
xlat
jmp
inc
or
jge
and
xlat
imul
push
stos
mov
repz
stos
push
cmpb
cmpl
adc
or
movsb
cmp
movsl
sbb
and
sbb
or
sbbb
or
adc
or
stos
add
jno
pop
xor
add
mov
jne
jo
push
movsl
adcb
leave
xchg
xor
movsb
jne
add
push
aad
xor
pop
push
dec
shll
imul
sub
test
ret
add
inc
bound
popa
adc
jg
mov
ja
mov
mov
sbb
loope
sub
push
fnsave
adcl
lret
stos
add
jno
fistpll
add
push
cmp
and
aam
cmp
xor
xchg
sbb
sub
mov
rep
jne
lret
dec
movl
roll
imul
xorb
pop
mov
sbb
inc
sub
mov
je
dec
add
lds
cmp
jp
mov
jmp
push
insl
push
popa
test
xchg
and
sbb
shrl
mov
xor
push
pop
xchg
gs
loopne
inc
pop
clc
dec
pop
push
cltd
rep
adc
add
mov
mov
and
sbb
and
mov
nop
inc
in
imul
leave
aas
icebp
push
mov
test
fs
cmp
loop
pusha
add
xchg
inc
inc
mov
inc
sbb
add
mov
ja
in
add
adc
inc
xor
cmp
and
and
andl
sti
popa
add
cmp
pop
imul
add
stos
inc
lcall
inc
enter
int3
lcall
or
add
dec
test
adc
or
out
xor
movsb
add
enter
add
inc
loopne
pop
push
push
cmp
mov
jg
sbb
add
jmp
jno
popa
sub
add
xorb
test
sub
xor
inc
or
test
movsb
mov
mov
popa
add
popf
pop
sbb
xor
cmpb
add
js
stc
aad
adc
mov
arpl
popf
out
mov
adc
xor
cmp
jo
add
enter
shrl
jae
push
cwtl
xor
jecxz
push
and
loopne
mov
xor
sub
cs
lcall
mov
ja
or
inc
hlt
pop
test
outsl
xor
sub
stos
push
inc
les
ret
mov
mov
sub
xor
xor
inc
fst
test
cmpsb
cs
cltd
popa
repz
dec
push
dec
add
cmp
or
pop
jecxz
add
sbb
inc
lcall
add
lahf
add
and
or
cmpsb
xor
xchg
add
push
mov
xor
jo
adc
add
aam
and
roll
sub
cmc
aad
push
xor
aas
out
and
nop
lds
and
sub
out
nop
nop
test
aas
fs
push
and
outsl
fwait
rcl
pusha
adc
enter
adc
pop
or
or
jno
negl
mov
cmpsb
in
shlb
add
ret
pop
and
and
sub
test
xor
aaa
jo
jnp
scas
nop
inc
lret
push
scas
mov
fcomi
roll
xchg
repz
rolb
jle
out
adc
mov
mov
andb
jge
sub
mov
aas
cmp
mov
iret
pop
dec
adc
inc
and
lods
fldln2
or
stos
push
xchg
add
orb
jmp
adc
adc
ljmp
test
and
lods
jge
cmc
xchg
ljmp
adc
inc
sbb
lods
nop
leave
jb
dec
mov
adc
pusha
sbb
adc
jne
sub
xchg
enter
test
mov
loope
jns
loope
jne
adc
cmpsb
mov
pop
fmul
rcll
pop
add
in
mov
xchg
sbb
insl
adc
push
jne
imul
jmp
and
adc
cmpsb
xchg
jecxz
sbb
hlt
sbb
push
les
pushf
paddb
and
jno
aaa
push
push
sbb
outsl
push
sbb
insl
sbb
paddsb
aaa
xor
mov
enter
push
push
in
dec
add
or
lds
lods
pop
call
jbe
call
sub
dec
fsubrl
inc
dec
lock
fisubl
in
cmp
cld
adc
insb
adcl
adc
inc
push
shl
mov
orl
cmp
lret
inc
push
insb
ss
sub
dec
jmp
mov
jnp
dec
lock
clc
sbb
or
into
add
push
lock
mov
and
outsb
ljmp
push
popa
outsb
add
ficoml
xlat
mov
adc
lods
incl
xor
mov
dec
sbb
mov
inc
xchg
test
jo
push
and
sub
sbb
bound
inc
jb
leave
ret
xor
mov
add
pushl
pop
hlt
dec
inc
sahf
adc
pop
mov
xor
cmp
sub
bound
push
push
pop
xchg
inc
and
mov
jae
inc
outsb
adc
sub
decl
out
add
mov
mov
push
inc
inc
sti
dec
jecxz
or
lea
pop
jg
push
mov
popf
dec
sub
ljmp
lcall
sti
out
inc
mov
cmp
inc
imul
fs
push
mov
push
ja
out
sub
in
out
adc
xchg
inc
sub
add
inc
repz
dec
ret
sub
js
jg
inc
ljmp
outsb
inc
sbb
mov
inc
dec
mov
pop
xor
data16
sti
inc
adc
iret
and
xchg
jecxz
int3
ss
cmpsb
shll
sub
jae,pt
ret
clc
imul
push
jo
popa
imull
xor
fisttpll
dec
push
rolb
adc
mov
sbb
push
std
inc
rclb
add
or
jns
sbb
push
jge
mov
sub
insb
sbb
push
mov
adc
push
sub
dec
sbb
xor
ds
pop
lcall
add
mov
inc
add
jne
enter
jnp
sub
mov
jbe
xor
inc
push
addb
sub
cld
sbb
test
test
loop
lcall
bound
push
ljmp
fdivrs
pop
adc
in
jle
das
mov
adc
call
sub
add
inc
mov
decl
fiaddl
ret
inc
sbb
in
sub
push
ficomps
popa
pop
lods
test
incl
je
sarb
push
dec
imul
std
movhps
fs
adc
sub
mov
or
pushf
dec
add
clc
sub
dec
mov
ret
cmp
dec
add
dec
pop
test
inc
sub
js
push
mov
std
std
ja
add
insb
roll
fadds
mov
roll
les
in
mov
dec
rorb
aam
popa
gs
into
fcomps
rolb
nop
icebp
ficompl
divl
inc
add
and
imul
push
dec
sub
inc
inc
mov
incb
dec
adc
add
je
xor
fnstenv
push
fstl
sti
push
add
flds
out
dec
ja
inc
mov
dec
mov
decb
xor
dec
rcrb
call
fisubl
inc
stos
loop
mov
sub
shll
cs
dec
inc
pop
push
icebp
or
xor
jns
pop
inc
mov
mov
cmp
inc
mov
cli
cld
push
shll
dec
ret
xor
push
push
adc
aam
lock
data16
sbb
data16
xor
ss
les
repz
outsb
addr16
add
incb
sub
mov
shrl
lret
inc
sahf
inc
insl
lcall
dec
cmp
push
adc
dec
add
mov
mov
es
inc
je
push
adc
mov
inc
sbb
sub
pop
repnz
arpl
xlat
clc
mov
lret
pop
or
mov
sahf
xchg
dec
sbb
jp
xor
mov
add
jno
inc
pusha
inc
sub
adc
or
aaa
mov
imul
cmpsb
add
dec
xchg
stos
insb
mov
filds
ret
xchg
pop
lods
xchg
and
push
decl
push
push
dec
xchg
mov
call
jo
lret
pop
ficoms
movsl
inc
fmull
push
movsb
clc
lret
les
mov
sar
cmp
loopne
in
sbb
dec
xchg
dec
push
ja
xor
bound
loopne
rcll
push
jb
xor
cmp
loopne
add
jno
push
sbbb
adc
xchg
add
out
and
in
in
je
dec
jno
cmovo
push
xchg
mov
mov
inc
push
push
add
push
ret
push
mov
orb
or
pop
ret
and
pop
xor
out
lock
jo
adc
push
adc
or
push
jo
xor
and
aad
adc
rclb
mov
add
cmova
std
clc
push
add
add
ret
clc
xor
ret
in
ljmp
push
clc
sbb
int3
sub
jb
dec
dec
xchg
add
sbb
pop
adc
dec
xor
adc
pop
lock
dec
dec
xor
push
clc
and
fs
push
test
push
lret
outsl
and
sbb
push
test
or
insb
std
ja
add
jns
sbb
adc
pop
mov
push
js
dec
sbb
call
in
dec
in
inc
outsb
lcall
push
sbb
jle
push
pop
movl
jmp
imul
dec
push
insl
js
dec
inc
xlat
or
cmpb
ror
inc
mov
clc
rclb
inc
sbb
adc
fisttpl
addr16
lea
ud2
daa
mov
mov
xor
pop
jno
ror
pop
arpl
stos
push
lods
xor
inc
xorl
xor
fstpt
decl
rol
xlat
subb
out
je
pop
loope
push
push
test
clc
popf
mov
xor
xchg
adc
cltd
mov
ja
cmp
adc
inc
adc
fists
leave
pop
add
or
bound
push
sub
ja
push
or
push
lds
loopne
inc
ja
popl
mov
test
or
in
or
pop
daa
pop
je
push
jae
out
rorb
aad
jo
xchg
test
test
lret
sub
fistpll
mov
enter
movsl
add
xchg
jp
sub
dec
dec
fsts
ljmp
add
or
xor
pop
pop
adc
cmpsb
cmp
add
mov
mov
xchg
imul
in
dec
push
dec
mov
clc
push
mov
shrl
jne
insl
shrl
pop
lds
rcll
cltd
cli
inc
repnz
shll
popa
test
shrl
dec
xor
les
popf
clc
aaa
rolb
subl
popf
mov
in
xor
pop
jns
xorl
inc
sub
hlt
xor
dec
sbb
fldenv
cs
addr16
pop
mov
or
popa
jne
add
pop
push
jecxz
or
mov
push
inc
outsl
dec
add
or
push
xchg
mov
pop
dec
push
or
add
or
push
faddl
mov
xorl
pop
in
mov
mov
nop
jnp
or
pop
jo
inc
arpl
cmpsb
sub
push
int
imul
cmpsb
sub
dec
into
repnz
push
sub
dec
loopne
mov
lahf
sbb
movsb
idiv
imul
shll
mov
loope
add
das
loop
cwtl
in
dec
divb
addl
adc
xchg
mov
inc
jo
or
sub
test
lods
and
repz
and
stc
es
push
or
repz
push
ret
push
xchg
jge
out
xor
add
les
test
jno
add
push
sbb
andb
xchg
push
inc
bound
orb
addl
stc
pop
add
push
inc
movl
sbb
inc
inc
and
add
inc
sbb
xchg
test
movb
and
ja
lea
pop
xor
sub
cltd
adc
sbb
scas
lds
inc
mov
dec
movsb
xchg
aas
sbb
pop
dec
stc
adc
test
pop
lds
pop
std
lret
add
push
pop
sbb
std
and
or
test
addb
or
xchg
add
inc
sbb
adc
fcomps
aad
xchg
cmp
ret
dec
cli
int
or
jo
xor
inc
and
add
sbb
jno
rclb
adcl
push
or
add
test
mov
jmp
test
cmp
jno
add
loop
push
mov
jecxz
cmp
popf
nop
xor
or
inc
cmpsl
jno
inc
fstpt
add
in
or
jb
jecxz
sarb
mov
adc
add
or
or
pop
inc
sub
or
or
and
add
dec
popa
add
arpl
es
decl
mov
jns
dec
dec
test
or
push
mov
lahf
inc
loope
fwait
dec
inc
inc
movb
and
js
mov
pop
inc
sub
mov
pop
dec
sbb
fsubr
xlat
movsl
xor
and
pop
push
pop
or
add
bound
fadds
inc
or
movsl
adc
inc
pusha
inc
test
movsl
xor
sbb
push
out
rcrb
imul
add
pop
inc
mov
dec
dec
adc
dec
push
adc
lods
lret
shrb
dec
push
dec
dec
testb
xor
push
jno
ret
push
lcall
mov
sbb
shrb
ljmp
mov
and
ficoms
jle
outsl
adc
sub
or
jno
or
add
rcl
or
cmpsb
sub
or
xchg
je
cld
and
add
cwtl
scas
dec
push
je
popa
sbb
mov
pop
inc
xor
dec
leave
out
pop
jne
imul
in
stos
jbe
push
mov
dec
mov
icebp
mov
adc
and
jae
and
dec
xchg
or
or
movsb
cmpsl
mov
fs
insl
stc
popf
cltd
addb
movsb
and
cmp
xor
mov
push
add
ljmp
push
adc
mov
cmp
xchg
out
jge
inc
xchg
sbb
mov
rorb
sbb
add
sub
push
jo
insb
push
or
sbb
fsts
cltd
fcoms
leave
mov
aad
and
cmpsb
xchg
or
sub
lret
scas
enter
or
inc
mov
sub
adc
cwtl
dec
stos
xchg
daa
xor
add
lret
daa
jecxz
or
add
pop
lds
add
call
or
loop
jns
data16
dec
repz
push
mov
mov
incl
test
addr16
outsb
sbb
and
fbld
jns
push
xchg
xor
stos
pop
out
mov
mov
nop
pop
inc
xor
mov
xchg
inc
scas
jne
xor
xor
mov
add
mov
pop
fld
push
pop
inc
jae
test
loop
movsb
inc
aam
pop
aad
adc
pop
dec
repz
mov
push
push
das
out
jle
aaa
or
sbb
and
loope
test
or
dec
dec
pop
dec
pop
enter
inc
xchg
inc
jno
and
jp
test
nop
rcll
xchg
and
add
mov
add
sbb
mov
sub
mov
pop
push
or
adc
xor
leave
mov
push
out
sbbb
mov
jb
adcb
add
cwtl
inc
xchg
xchg
test
mov
mov
pop
pushf
cmpsb
cmp
sub
mov
sub
sbb
xchg
mov
popf
push
fs
addl
xor
fxch
xchg
rcl
adc
stc
jle
sbb
test
mov
es
add
mov
and
mov
nop
sub
sbb
inc
ds
xor
pop
inc
sub
dec
dec
lcall
or
push
lret
lcall
stc
popf
cmp
ss
jne
test
add
je
shlb
cmpb
mov
das
sbb
inc
mov
scas
sub
xor
add
fstl
cli
das
cs
or
aaa
xchg
pop
add
add
pop
sbb
ret
inc
or
add
and
jmp
push
cmp
mov
movsb
aaa
dec
push
mov
out
fnstenv
jp
push
pop
mov
push
and
adcb
sub
cmp
mov
mov
add
or
add
insb
or
filds
push
pusha
jmp
in
add
xchg
inc
adc
jo
pop
sub
push
mov
out
add
adc
push
xchg
sarb
pop
inc
xchg
xchg
lock
fs
xor
push
pop
push
push
dec
add
xchg
out
xor
mov
and
cmp
cmpsb
shl
cltd
xor
add
push
or
test
nop
out
lcall
xor
mov
fldcw
push
and
or
test
cmp
jg
adc
mov
pusha
iret
sti
push
adc
aad
mov
shrd
mov
jmp
jnp
hlt
lea
mov
add
icebp
xchg
daa
xchg
je
dec
imul
xor
add
inc
es
fisubl
rorl
pop
add
sbb
dec
add
and
outsb
mov
push
jmp
push
sub
sbb
adc
xchg
push
xor
je
cwtl
cwtl
push
test
ja
repnz
pusha
sub
shll
jo
and
adc
jne
and
daa
jle
stos
push
add
es
dec
mov
lret
xchg
test
lret
pusha
loopne
aam
dec
sti
add
push
and
mov
dec
add
or
jno
pop
xor
mov
test
je
and
outsb
sbb
lods
mov
gs
and
stc
icebp
movsl
inc
adc
xlat
mov
addr16
aam
fwait
repz
pop
fstps
cmp
or
sub
in
pop
push
dec
dec
shl
sub
sbb
sahf
adc
pop
leave
add
test
fbstp
cmc
movsb
or
xor
bound
mov
dec
imul
mov
dec
icebp
in
cmp
sbb
dec
push
out
sub
push
fistl
jns
insl
nop
out
xchg
mov
xor
sub
or
inc
dec
pop
or
aad
push
push
push
repnz
adcb
add
add
fstl
and
or
add
nop
adc
xor
dec
sahf
das
ljmp
loop
mov
pop
and
mov
out
mov
xchg
orl
cmp
add
push
adc
mov
push
sub
in
orb
testl
addr16
and
cmp
fwait
adc
outsl
cmp
or
pop
loop
pop
nop
ret
push
or
shl
das
adc
rorb
add
push
mov
or
mov
and
ret
fdivrs
loop
or
fsts
rcrb
aad
mov
adc
gs
adc
mov
dec
pop
dec
adc
shll
cmp
jo
aaa
add
les
stc
sub
add
adcl
test
je
xorb
outsl
xchg
push
sbb
cld
scas
pushf
inc
add
aas
mov
test
jnp
sub
lds
sbb
mov
and
lea
test
sbb
outsl
stos
and
or
lret
add
mov
or
add
pushf
mov
push
jmp
mov
or
test
mov
test
les
test
mov
inc
mov
fiaddl
push
add
loopne
mov
jno
test
lods
iret
and
lea
push
push
add
add
ja
cmp
xorb
push
andb
adc
popf
xor
inc
cmp
or
and
add
dec
dec
mov
mov
addl
xor
mov
gs
int3
push
loop
mov
or
add
xor
adc
or
dec
inc
jbe
and
stos
stos
dec
sbb
fwait
rclb
push
insb
adc
stos
adc
in
sub
dec
dec
into
or
cmpsb
mov
xchg
into
xchg
jg
dec
mov
aam
fimuls
icebp
cld
lret
push
adc
and
loope
mov
mov
aaa
iret
and
dec
test
push
and
lret
ret
dec
sbb
es
xchg
xlat
sub
inc
cmpl
rol
lds
bound
add
and
mov
dec
sbb
call
insl
add
cwtl
out
je
inc
add
push
sbb
lret
and
imul
inc
mov
icebp
addl
push
mov
and
gs
xor
mov
in
push
out
jl
andl
inc
adc
jnp
adc
loopne
sub
arpl
popf
mov
test
dec
cli
sbb
aam
popa
lods
push
add
stos
jmp
orb
mov
mov
jmp
ljmp
add
xor
test
or
mov
pusha
or
add
sbb
loopne
jecxz
scas
or
loop
push
es
cmp
mov
add
inc
sub
push
orb
sub
sub
js
xchg
pop
xchg
ljmp
mov
jp
jnp
sbb
les
push
addr16
popa
xchg
jl
les
fwait
lea
je
xlat
adc
mov
pop
pop
insl
jno
rclb
pop
shll
add
scas
push
jecxz
push
xor
mov
adc
mov
rclb
movb
inc
orb
add
xrelease
add
notl
add
mov
xchg
dec
mov
dec
xchg
test
or
dec
dec
and
jns
das
adc
or
iret
adc
je
or
adc
lret
dec
xor
subb
flds
inc
add
or
pusha
sub
popa
pop
sbb
add
push
in
clc
xchg
adc
lcall
fcmovb
inc
in
outsb
inc
shlb
lock
inc
xchg
jl
adc
sahf
outsb
hlt
xchg
sub
xchg
stos
and
pop
add
inc
or
shlb
inc
dec
inc
lret
pop
mov
mov
lods
ret
push
xchg
mov
insl
test
jmp
jne
sub
test
pop
mov
and
adc
andb
and
jns
arpl
test
sbb
test
cmp
mov
mov
and
popa
adc
roll
ret
xchg
jae
adc
or
sbb
xchg
sub
leave
and
cs
xor
lods
add
adcl
test
test
and
add
xchg
pop
lcall
test
mov
add
loope
dec
jo
cmpsl
push
test
dec
push
repz
and
add
push
inc
mov
mov
add
inc
ret
movsl
sub
arpl
add
push
in
sub
xor
mov
push
movsl
rolb
mov
add
xor
les
mov
popf
aad
mov
test
adc
int
mov
mov
mov
scas
push
daa
fs
jg
sub
sarb
pop
lret
rol
push
add
push
xchg
add
inc
push
and
aam
scas
lea
pop
xor
inc
push
mov
inc
push
xchg
and
nop
iret
mov
cmpl
xor
pop
add
inc
mov
mov
test
scas
cltd
add
push
xor
dec
jno
cwtl
push
pusha
adcb
push
in
stc
xchg
test
in
repz
fdivs
fsts
test
shrl
test
or
ljmp
sub
push
jne
adc
mov
push
sbb
add
mov
adc
pop
pop
sub
les
and
imul
pop
dec
mov
push
outsb
out
iret
shl
push
mov
mov
test
adc
fidivrs
jns
adc
mov
sub
rolb
mov
test
loopne
lahf
fwait
ret
gs
sti
lods
or
pop
pusha
rorb
sbb
inc
sarl
xor
inc
insl
or
jmp
add
out
rolb
scas
pop
fmuls
add
shlb
add
adc
push
aad
mov
sub
cmp
add
fildl
sbb
adc
inc
add
test
nop
das
or
loop
pop
mov
icebp
jne
jae
mov
mov
orl
popf
push
or
mov
add
jnp
dec
ret
or
xor
subps
mov
xchg
push
xor
dec
mov
test
jne
xor
or
add
sub
cmpsb
rcl
in
pop
lahf
inc
movsb
mov
xor
adc
pop
inc
push
add
xor
test
add
xchg
xor
mov
sub
mov
inc
sbb
je
adc
xor
rorl
xchg
or
push
in
sbb
inc
jne
pop
je
andb
sbb
push
mov
and
add
mov
fnsave
loope
push
xchg
mov
mov
inc
xchg
mov
cltd
mov
movb
loope
xorb
xor
xchg
sub
test
push
gs
nop
gs
jne
cmp
cmp
adc
adc
jne
jbe
mov
xchg
adc
aas
xor
xor
mov
and
sbb
pop
add
inc
sbb
or
pop
je
loopne
sub
lcall
push
lock
xchg
inc
das
arpl
pop
jb
mov
mov
stc
push
or
sti
shrb
addl
mov
loop
or
and
les
push
or
sub
push
lcall
lds
shll
test
repz
push
das
lret
sbb
out
adc
or
and
call
aaa
pop
orb
cmp
dec
nop
sub
mov
adc
iret
push
cmp
push
dec
sub
in
lods
test
loopne
mov
aas
mov
add
rcrb
sarl
addl
or
push
add
test
shrb
bound
ja
push
movb
jnp
add
mov
stos
sub
bound
cmpsb
add
adc
pusha
mov
adc
mov
ljmp
lds
bound
out
sbb
add
cmp
dec
addb
jecxz
push
mov
aam
sbb
enter
pop
dec
sbb
push
or
inc
inc
add
jecxz
add
nop
pop
push
outsl
xchg
jo
cmp
mov
inc
xchg
pop
push
cmc
add
add
and
inc
rcr
lods
push
iret
adc
dec
or
inc
push
and
push
mov
adc
adc
lods
sub
xchg
pop
aam
push
and
push
mov
inc
and
and
leave
loopne
test
xchg
or
mov
icebp
dec
mov
stc
push
mov
mov
xor
push
jae
xor
sub
mov
std
xchg
dec
or
hlt
jae
push
addb
and
test
xor
dec
test
mov
push
popa
dec
scas
add
sbb
shlb
add
call
inc
cmpsb
mov
dec
xchg
mov
and
pop
push
out
sbb
mov
or
imul
fldenv
je
xor
mov
sbb
sub
movsl
sbb
xor
imul
lds
add
sbb
mov
jno
dec
xor
mov
jne
jns
add
sub
loop
inc
mov
jo
mov
bound
sub
and
mov
xor
inc
mov
jmp
in
cs
insb
pusha
and
out
add
xor
mov
dec
pop
cltd
aam
lcall
fldenv
push
push
out
add
push
cltd
mov
xor
xchg
dec
bound
adc
adc
mov
or
jg
pop
lcall
insb
stos
jae
pop
sbb
cmp
scas
inc
and
add
add
jnp
ljmp
inc
aad
add
sbb
test
add
sti
push
inc
xor
pop
popf
rcll
dec
loope
jns
dec
and
xor
and
dec
aad
lds
mov
sbb
icebp
sbb
and
adc
das
jnp
gs
mov
and
and
mov
xor
pusha
and
pop
enter
fiaddl
out
cs
arpl
mov
and
add
inc
adc
lret
xor
scas
dec
loop
mov
aas
decl
dec
or
add
les
inc
subb
mov
or
pop
ss
int
push
sbb
add
mov
sti
adc
in
add
sub
sahf
xlat
aas
dec
and
inc
pop
dec
or
xlat
bound
and
and
mov
mov
add
push
adc
pop
les
notb
rorl
call
imul
adc
mov
xlat
xor
cmp
and
dec
and
test
adc
loop
out
mov
adc
and
xor
pop
adc
pop
push
test
sahf
cmp
movsl
mov
rclb
sar
mov
test
dec
xor
sub
pop
rorb
sarl
ret
push
leave
and
popa
lea
scas
jo
sbb
xlat
jo
and
sbb
mov
out
add
adc
inc
ret
jns
mov
rcl
push
cmp
pop
je
sbb
cmp
push
xor
lods
pop
shll
outsb
arpl
sbb
xchg
sbb
and
inc
xchg
in
mov
jne
test
xor
sub
ret
insl
adc
int
mov
fs
dec
pop
add
test
in
dec
cmp
xchg
push
dec
xchg
mov
push
rclb
mov
adc
or
and
pop
sbb
ljmp
xor
imul
pop
inc
sarb
stos
push
rclb
dec
push
xor
mov
inc
add
cwtl
pusha
sbb
dec
xlat
inc
rol
sbb
daa
nop
cmp
sbb
or
add
push
push
sub
dec
or
push
push
das
movsb
sbb
push
xor
cmp
xchg
adcb
add
cmp
add
and
ltr
subb
in
pop
add
test
pop
mov
dec
xor
mov
sub
aad
test
pop
test
inc
adc
inc
cld
and
fisttpl
pop
clc
add
add
jns
loopne
push
ljmp
cmp
cwtl
jns
inc
sub
lret
cmc
imul
pop
dec
js
outsl
sti
cmpsl
cmp
int
test
add
inc
shr
cwtl
mov
xor
addl
in
gs
or
fists
and
cmp
push
pop
sbb
inc
push
and
add
inc
daa
cmp
xor
dec
add
jne
mov
and
add
shr
adc
cwtl
call
sub
and
sub
dec
call
sbb
cmp
add
mov
scas
xchg
cmpsl
dec
data16
addl
sbb
popf
add
repz
sahf
inc
popa
nopl
adc
add
and
bound
pop
shlb
sbb
dec
or
or
dec
ret
hlt
sbb
movsb
movsl
in
imul
mov
dec
lret
cmp
mov
test
adc
sti
leave
and
sbb
xor
test
sbb
and
xor
sbb
sub
ret
dec
arpl
inc
adc
push
js
sbb
dec
sub
dec
pop
popf
pop
push
or
ror
add
bound
enter
notl
pop
addb
sub
and
sub
inc
mov
cmp
inc
and
imul
sbb
shrb
adc
add
mov
push
inc
push
daa
mov
orb
push
dec
xlat
icebp
dec
nop
arpl
cld
sub
adcb
imul
inc
xlat
int
leave
or
push
test
push
pop
loope
xor
mov
adc
xor
mov
in
lea
cmp
mov
addl
pusha
enter
cmp
xor
decl
pop
orb
and
or
gs
add
scas
mov
rolb
inc
lea
mov
fldenv
addl
or
sbb
cmp
movl
and
hlt
imul
push
pop
loop
inc
and
mov
xchg
movsl
xchg
sti
dec
stos
roll
cmpsb
adc
imul
jo
xor
inc
ret
inc
mov
xchg
push
sbb
nop
pushf
jle
sbb
and
cltd
xor
js
rcrl
cmp
adc
jmp
xchg
test
cltd
dec
sahf
outsl
adc
mov
pop
and
xchg
xor
add
lds
cs
xchg
das
aad
inc
fs
repz
mov
xor
jo
outsb
loop
jo
lods
adc
stos
xchg
pop
addb
push
sbb
sahf
in
cmpsb
xchg
inc
arpl
dec
dec
rorb
fadds
imul
adc
aas
int
and
aaa
xor
bound
push
orb
xorl
inc
or
jmp
pusha
test
cmp
fwait
or
fistl
inc
and
stos
adc
imul
out
imul
and
mov
cmpb
add
negl
mov
pop
add
mov
xor
sbb
adc
sbb
lods
bound
sub
push
xor
daa
push
nop
subb
pop
add
or
fisttpll
rcr
adc
rorb
xor
pop
addr16
xchg
and
mov
xchg
dec
lret
dec
xor
sarl
dec
orb
inc
aaa
inc
arpl
pop
or
fs
jae
in
arpl
add
rcll
push
shld
xor
adc
pop
test
push
loope
rorl
arpl
or
add
inc
mov
lcall
dec
sub
add
hlt
xor
inc
nop
out
rcr
xor
push
push
xor
xor
dec
xor
jge
pop
sub
pop
add
cmp
mov
mov
push
jo
xor
inc
mov
pop
add
mov
mov
fcompl
jns
mov
push
loopne
addb
cmp
mov
dec
cmp
pop
and
xchg
or
jbe
inc
stos
xchg
fwait
dec
test
xor
adc
arpl
mov
dec
push
aam
cmpsb
test
stos
icebp
imul
loopne
arpl
xor
cmp
push
orl
jmp
bound
push
lcall
mov
cmpb
inc
sarl
imul
pusha
movsb
mov
add
sbb
sbb
aas
aam
loope
sub
or
push
inc
scas
inc
imul
out
les
or
arpl
gs
jb
shrl
add
into
aas
cmpb
jmp
dec
xor
mov
sbbb
fld
std
xchg
xchg
cwtl
or
inc
mov
sub
mov
or
add
mov
clc
xchg
dec
pusha
jge
clc
cmp
xchg
adc
xchg
add
xchg
add
add
dec
or
add
adc
sbb
popa
add
dec
adc
insl
fidivrl
es
pop
nop
mov
xchg
ret
mov
mov
aad
shl
inc
stos
pop
xchg
je
rolb
cmpsl
in
sub
lret
adcl
add
dec
add
or
adc
push
aam
roll
adc
sub
sahf
pop
push
cmpsb
sahf
sub
push
inc
loopne
out
jp
cmpl
mov
add
pinsrw
and
stos
imul
enter
jo
mov
and
addb
pop
xchg
sbb
stc
call
pop
fidivrl
mov
sbb
xchg
jmp
jp
cltd
adc
loopne
jne
push
movsl
aas
rorb
add
shlb
scas
outsb
test
xchg
pop
jne
or
dec
cmpsl
push
xchg
repz
sub
enter
push
inc
sbb
imul
loope
adc
aad
out
add
push
test
push
mov
inc
xor
adc
cmc
push
subb
sub
test
jmp
push
jmp
call
adc
iret
add
inc
sbb
movsb
idivb
or
pop
cmp
push
xchg
out
icebp
jp
pop
jo
adc
sbb
xchg
dec
adc
xor
pop
push
outsl
dec
rorl
inc
out
add
sub
jo
sub
stos
clc
pop
inc
es
daa
adc
sub
loop
sbb
xchg
jbe
jne
dec
cmpsl
insl
add
lret
in
test
dec
stos
repnz
xchg
jno
sbb
out
mov
rcrl
inc
xor
rol
and
dec
stos
push
sub
mov
out
in
int
mov
test
dec
push
mov
adc
scas
pop
cmp
repz
add
orb
adc
push
scas
out
add
inc
mov
xchg
sub
add
mov
adc
iret
adc
test
mov
and
add
cs
lret
int
sub
add
cwtl
inc
or
sbb
add
sbb
cmp
sub
mov
ljmp
sbb
xlat
roll
movsb
cmpsl
xor
stos
jmp
adc
mov
push
jp
adcl
test
or
popf
mov
push
imul
xor
test
add
pop
and
adc
and
dec
lahf
in
mov
sbb
mov
mov
bound
jmp
std
fsubr
and
shrl
ret
lea
xor
add
movsb
inc
mov
push
cs
ds
cli
add
or
aaa
jmp
fwait
stc
popa
lcall
dec
test
pusha
xchg
lcall
xor
add
xor
push
jo
push
sbb
mov
aam
sub
in
add
rolb
push
or
jbe
pusha
sbb
sbb
sbb
das
adc
stos
add
add
std
insl
and
sub
mov
add
sub
add
sbb
xchg
gs
sub
inc
add
iret
andl
dec
aaa
mov
mov
iret
shlb
mov
mov
movsl
sahf
adc
lds
mov
inc
jecxz
popf
out
push
mov
and
rclb
adc
add
stc
adc
add
jne
push
adc
adc
adc
data16
inc
rorb
int
pusha
adc
add
ret
cmpsb
jge
adc
mov
sbb
xor
adc
mov
adc
xchg
cmova
fcompl
push
addb
xchg
fs
xchg
cmp
sbb
pop
jb
testl
add
arpl
sub
cmp
call
jae
add
mov
xor
add
leave
lea
cmp
in
pop
pop
lea
sbb
shll
add
mov
push
int3
fistps
adc
lret
shlb
adc
mov
or
mul
andl
adc
lret
mov
mov
jne
pop
dec
jne
cltd
loop
mov
sub
adc
imul
mov
lea
mov
or
xor
popa
add
adc
inc
sub
pop
or
ljmp
cmp
in
lret
stos
rcl
icebp
les
xor
std
inc
sbb
mov
push
les
rcll
adcl
lret
mov
je
es
int3
mov
push
cmp
sbb
xchg
shll
pop
in
adc
inc
mov
mov
jo
sub
sub
pop
inc
cmp
or
popa
nop
roll
mov
in
imul
scas
repz
inc
add
pop
adc
stc
push
inc
xor
mov
xor
or
dec
pop
push
add
sahf
cmpl
mov
sti
or
loope
jae
dec
push
inc
arpl
push
mov
or
xchg
rcll
push
mov
xor
push
sarb
mov
loope
mov
push
xlat
dec
sub
or
add
insb
jmp
push
and
pop
adc
mov
sahf
or
pop
je
add
mov
mov
add
jl
pop
inc
lock
add
inc
enter
adc
add
push
orl
add
add
mov
mov
jmp
and
jg
aad
mov
test
das
mov
mov
sarl
mov
test
movsb
xor
inc
mov
in
mov
shrl
mov
push
dec
shrl
push
xchg
pop
iret
push
popa
adc
mov
mov
mov
pusha
add
cmpsl
or
orb
mov
rolb
sbb
inc
daa
xchg
push
cwtl
test
lds
jp
sbb
loopne
push
andb
lods
xchg
add
inc
arpl
dec
pop
xor
dec
sbb
and
and
or
inc
pop
andb
mov
loopne
push
adc
test
shrl
movsb
dec
fisubl
ja
dec
mov
or
shll
cmpsb
mov
push
rol
add
pop
fldcw
aaa
dec
les
or
add
insb
adcl
stos
or
or
mov
cmp
test
nop
add
cwtl
icebp
sub
jns
xchg
mov
sbb
push
adc
or
inc
or
push
fwait
jae
sub
rcr
inc
nop
rcrb
or
dec
xor
jo
sbb
jecxz
jb
cmpsb
mov
xchg
mov
test
push
xor
pop
sahf
add
push
fs
scas
iret
sub
or
lea
or
mov
inc
adc
xor
sti
cltd
push
rolb
adc
sub
pop
push
sub
xchg
loope
adc
sbbb
inc
adc
push
adc
pusha
sub
stc
mov
sub
xor
in
sub
bound
out
jne
rcl
lcall
push
test
xchg
or
dec
cltd
fnstsw
js
jno
mov
sbb
pusha
pop
test
inc
icebp
adc
fs
inc
add
les
or
add
rolb
inc
sbb
or
lret
and
inc
add
ljmp
aad
adc
mulps
and
add
inc
lcall
test
push
pop
fdivrs
add
push
fisttpll
and
mov
cmp
scas
cs
jmp
push
add
and
dec
jge
mov
lods
adc
jne
jl
leave
dec
xor
lret
je
xchg
mov
test
push
test
aas
pcmpeqw
movsl
xchg
rorb
andl
ljmp
dec
xor
jo
ja
lcall
pop
lock
insl
out
imul
lcall
test
xor
xchg
push
sbb
push
and
or
mov
or
sbb
adc
jo
xor
sub
fs
jmp
jbe
inc
adc
stos
xorl
lods
or
pop
add
sub
cmp
and
push
arpl
scas
cltd
les
leave
jae
ja
loopne
or
xchg
shrb
rclb
pop
mov
sub
adc
jb
adc
popf
idiv
in
pop
cwtl
xchg
push
inc
or
mov
aad
add
nop
out
adc
xchg
cwtl
and
sub
push
mov
mov
add
or
icebp
xchg
rcll
cmp
sbb
adc
mov
or
dec
roll
mov
nop
iret
insl
jne
pop
push
out
sub
roll
daa
xor
stos
data16
adc
dec
sbb
add
test
push
inc
mov
test
lret
loope
xor
or
mov
lcall
add
mov
pop
fstl
and
sub
cwtl
dec
and
inc
cmp
mov
cmp
sub
or
or
push
loope
cmp
movsl
mov
rclb
orb
push
sbb
out
push
lods
movsb
cwtl
inc
add
out
xchg
test
jmp
arpl
ss
pusha
sub
xorl
inc
mov
bound
add
or
pop
push
sbb
push
jae
jnp
dec
dec
sbbl
mov
cltd
sbb
add
add
xchg
xchg
xchg
jl
cli
rcll
xor
push
adc
lcall
cmp
mov
loopne
jne
data16
stos
add
add
or
scas
add
test
add
mov
mov
and
pop
dec
xchg
mov
mov
std
cmpsl
jno
sbb
aad
loopne
xor
rol
ret
outsl
and
adc
push
arpl
insl
mov
xchg
sbb
jns
dec
add
jne
xor
xor
mov
jge
shlb
aad
inc
or
mov
pop
inc
xrelease
test
push
jno
movsl
repnz
rcr
adcb
jb
aam
xchg
sub
pusha
inc
outsl
rorb
jae
sbbb
rcrb
inc
add
add
sub
pop
stos
add
andl
and
fsub
adcb
push
adc
dec
scas
push
xchg
mov
add
pop
xchg
dec
and
inc
sub
adc
xchg
xor
popa
movzbl
out
jne
sub
sub
arpl
adc
push
sbb
and
add
mov
es
adcb
lret
ret
lods
pop
sub
jno
sbb
test
push
mov
xchg
or
and
sub
imul
jle
shll
mov
jmp
or
cmp
stc
jnp
or
or
icebp
dec
hlt
movb
pop
stos
stos
add
adc
push
adc
mov
mov
and
and
add
je
inc
sbb
jo
cmp
push
and
sub
rolb
fstpt
push
xlat
aam
mov
inc
mov
shll
and
jle
lret
cmp
inc
mov
xchg
cli
mov
mov
pop
push
lea
movsb
fwait
rolb
repz
mov
mov
outsb
movsl
test
inc
das
cmp
add
popf
movl
aaa
ljmp
mov
test
daa
xchg
pop
mov
adcb
and
test
movsl
add
dec
test
mov
test
adc
xorb
sub
loopne
sub
orb
cmpsb
imul
orl
and
sub
adc
fwait
popa
mov
out
push
movb
aas
cmpsl
movsl
xchg
add
leave
rcl
shl
js
mov
pop
inc
cmp
mov
pushf
mov
scas
sbb
mov
mov
or
out
fsts
xor
push
mov
mov
push
add
jp
push
add
or
pop
aad
ret
or
push
xor
and
mov
cwtl
mov
mov
sub
mov
mov
inc
adc
pusha
pop
shlb
add
jnp
push
or
or
mov
add
inc
leave
xchg
fistl
rorl
jno
popa
mov
ret
add
cmp
cmc
push
stc
sbb
hlt
rolb
xchg
jge
jno
jne
add
pop
pop
mov
push
inc
lods
and
lock
movsl
and
adc
mov
pop
and
add
add
sub
sub
or
adc
adc
lods
mov
sbb
rolb
pop
test
jne
mov
aam
lds
xor
sub
or
xor
sti
adc
push
lahf
roll
jno
sub
dec
jae
mov
roll
mov
push
fldl2t
daa
xchg
movb
cmc
inc
dec
push
dec
pop
rcl
mov
decl
adc
stos
jns
ficompl
test
lahf
mov
adc
int
mov
jne
dec
mov
pop
adc
adc
hlt
mov
push
lods
cmc
add
int
xchg
out
jne
pop
xor
add
mov
add
sarl
mov
and
push
adc
cltd
mov
mov
add
arpl
daa
or
add
jmp
mov
mov
pop
scas
inc
sub
jmp
xor
or
xchg
test
in
mov
addr16
inc
inc
or
or
inc
pop
push
test
mov
jecxz
jg
shll
stc
jns
mov
insl
aaa
mov
push
aam
mov
dec
loop
dec
inc
pop
inc
inc
and
mov
outsb
loop
jo
bound
adc
insb
cmp
xor
jmp
add
push
inc
sub
std
push
xchg
inc
xchg
popa
sbb
scas
test
sbb
xor
pop
add
jge
dec
clc
subb
jge
jo
imul
mov
ret
xchg
imul
lock
repnz
ss
lea
adcl
push
xchg
push
xor
mov
shll
pushf
sub
add
and
mov
adc
movsl
leave
repz
fildll
adc
jo
inc
dec
in
orb
cmpb
xchg
icebp
aam
jl
jne,pt
add
mov
sbb
jne
pop
push
xchg
jo
shr
cmpsb
gs
mov
add
adc
mov
adc
imul
add
mov
dec
cmc
add
cs
leave
mov
ret
add
xchg
aas
or
mov
mov
in
cmp
stos
lret
aam
sbb
sub
dec
jmp
mov
inc
add
push
dec
adc
mov
call
repnz
push
pop
pop
add
mov
dec
add
pop
sti
dec
mov
inc
movsl
imul
dec
and
repnz
lcall
push
leave
arpl
xor
sbb
scas
mov
xchg
mov
scas
nop
out
popl
sub
movsb
and
mov
insb
adc
inc
sbb
test
icebp
stos
push
adc
mov
inc
push
add
shlb
mov
in
das
mov
push
cmpsl
and
test
arpl
push
mov
roll
cs
pop
lea
add
mov
jmp
push
sub
add
pop
fadds
mov
pusha
and
xlat
lret
adc
mov
orl
adc
lcall
arpl
xchg
and
test
mov
pop
outsl
shrl
or
mov
jno
mov
daa
fildll
xchg
shlb
pushf
add
push
inc
mov
mov
add
xchg
xor
sbb
add
jg
mov
rorb
add
mov
inc
add
movsb
rcrb
mov
push
mov
addl
scas
mov
lods
jne
adc
jbe
popf
cmp
pop
sti
xchg
sbb
mov
and
je
inc
movsb
mov
aas
xchg
mov
les
or
or
inc
pop
mov
xor
dec
mov
dec
xor
sbb
xchg
cmp
mov
or
add
and
cs
lahf
test
sub
mov
ret
adc
mov
xchg
sub
pop
or
add
mov
ret
iret
repnz
into
lcall
roll
rcrw
pcmpeqw
fdivl
jno
add
add
or
insb
lcall
inc
pusha
orb
add
cmpb
push
movsb
add
lds
aaa
adc
or
cmpb
cmp
mov
mov
or
addr16
jno
sbb
xchg
nop
xchg
test
inc
into
enter
jecxz
jge
add
and
pop
cs
popa
roll
stos
dec
je
jb
inc
loopne
bound
mov
xlat
in
xor
mov
or
test
push
push
jae
and
js
cli
or
jle
lcall
jo
es
add
xchg
nop
mov
or
dec
and
xlat
addl
pusha
or
xchg
or
jp
out
xlat
repz
sbb
test
shrb
sub
inc
add
push
push
mov
dec
imul
add
leave
jae
lods
fs
scas
sub
lahf
sbb
mov
nop
repz
imul
push
add
iret
or
adc
sbb
iret
orl
cmc
ret
add
xchg
ret
jne
je
mov
dec
xor
data16
and
jo
shr
add
pop
jne
add
rclb
or
add
xor
jo
aad
jno
adc
cmp
inc
dec
in
dec
push
insb
loop
cli
outsb
and
clc
xchg
out
pop
mov
pop
shl
outsl
andl
insl
cwtl
add
xchg
inc
mov
jecxz
aam
fwait
loopne
dec
sub
dec
or
mov
out
mov
sub
lcall
enter
cld
xchg
jnp
bound
add
cmc
repz
inc
mov
pop
aaa
jne
pop
leave
loopne
cltd
push
dec
pop
pop
jns
mov
roll
jns
jecxz
les
push
daa
and
pop
push
das
mov
les
ss
xlat
xor
sbb
adc
or
test
dec
and
jns
or
int3
sbb
sahf
in
sub
xor
inc
js
push
xor
add
in
add
mov
hlt
mov
mov
xor
push
adc
lcall
xchg
sub
jp
inc
lods
push
movsl
xchg
xchg
inc
mov
sub
mov
mov
add
and
add
sbb
pop
or
imul
call
mov
add
mov
push
scas
and
push
mov
les
movsb
loopne
and
bound
or
xorl
in
pop
or
insl
loope
inc
vmovsd
inc
mov
inc
xchg
jge
inc
push
popf
aas
cmp
push
or
sbb
leave
xadd
iret
xchg
sub
push
mov
mov
fildl
push
sti
in
cmp
xchg
cmp
sbb
push
xor
and
les
test
push
mov
and
loopne
push
push
pop
xchg
add
sbb
dec
orb
outsb
adc
scas
and
fildl
add
xor
push
mov
sbb
adcl
dec
pop
pushf
and
mov
pop
pop
mov
sub
sbb
dec
add
push
mov
add
repz
jp
ds
or
add
mov
repnz
andb
push
mov
add
divl
fwait
push
add
jne
inc
push
fdivrl
adc
cmp
sar
outsl
inc
xchg
rclb
or
push
or
sub
adc
bnd
fldenv
xchg
xor
gs
adcb
inc
adc
xchg
les
rorb
add
mov
sub
pop
in
jo
cmp
loope
aam
push
xchg
adcb
jae
inc
lcall
imul
or
arpl
pop
lods
jecxz
cmp
xor
dec
push
push
or
sub
push
or
les
inc
jge
sub
gs
mov
xchg
push
sub
mov
ret
aad
mov
inc
add
add
inc
popf
test
test
test
cltd
dec
inc
pushf
pop
add
xchg
cmpsb
mov
es
add
cmp
dec
xchg
fucompp
xor
test
add
repnz
js
add
push
sbb
mov
test
pop
xor
cltd
xor
pusha
pop
jle
push
test
dec
ss
or
test
push
push
xchg
xchg
repz
enter
pop
add
pop
jmp
or
int3
shl
int
sbb
rorb
adc
xchg
addb
sub
test
in
push
inc
lea
std
hlt
aam
xor
and
add
sbb
pop
xor
cs
jbe
inc
mov
sbb
movsl
adc
add
in
mov
and
inc
xor
fstpl
lea
or
adc
and
pusha
mov
fiaddl
nop
fists
pop
icebp
inc
inc
aaa
push
xor
xchg
inc
and
sbbl
fiaddl
mov
pop
cmp
and
xchg
out
scas
daa
mov
imul
xchg
mov
aaa
fstpt
scas
adc
xor
inc
adc
mov
aad
inc
push
xor
lods
int
popf
loopne
aad
sub
dec
push
outsb
cmp
mov
sbb
xchg
inc
adc
sub
pop
pop
xchg
movl
dec
pop
sbb
insl
add
mov
sbb
mov
xlat
and
lods
jecxz
movsb
inc
jmp
and
adc
es
xchg
inc
movb
andl
mov
cwtl
dec
pop
orb
sbb
sbb
mov
inc
xor
lcall
pop
adc
add
mov
add
adc
cmc
pop
cmp
add
add
sub
mov
nop
mov
shl
stc
jne
out
outsl
fadd
rclb
adc
dec
fnsave
xchg
mov
pop
nop
cmp
sub
and
or
ja
sub
xor
test
add
mov
rcrl
movb
push
and
orl
lcall
inc
ds
imul
mov
cltd
or
adc
gs
push
add
aas
fsts
sub
jo
loopne
lea
sub
mov
test
cs
mov
pop
inc
adc
xor
adc
addl
xor
inc
nop
test
adc
push
xchg
dec
inc
ret
or
pop
pop
jb
push
test
jl
sub
push
lea
cmp
add
data16
dec
mov
adc
and
inc
and
jo
loop
lea
fwait
mov
sahf
xor
mov
dec
sti
js
adc
sbb
mov
pop
inc
or
mov
cs
jecxz
mov
add
fisttps
jns
fldt
les
sub
out
dec
push
jno
ljmp
cmp
pop
add
daa
insl
loop
arpl
test
inc
call
shll
push
shll
sbb
loop
imul
inc
popa
les
enter
adc
and
xchg
stos
movsb
inc
push
popa
dec
mov
fldt
sbb
xlat
jg
stos
mov
cltd
mov
mov
ss
or
roll
or
pop
sbbb
test
jnp
adc
mov
or
inc
aad
mov
dec
test
rorb
push
daa
sbb
xchg
repz
or
add
pop
leave
das
xor
or
rcl
nop
ja
or
inc
adc
add
mov
dec
lcall
scas
mov
pop
jne
xor
daa
push
mov
addb
mov
and
adc
add
repz
push
stc
mov
cmp
rolb
push
mov
add
xor
rolb
jecxz
shlb
pop
fistpl
xor
inc
jp
fildl
push
test
aad
adc
popa
bound
jno
or
sbb
or
les
nop
sbb
add
dec
mov
sbb
push
lret
stos
jg
test
push
and
jle
sbb
jno
test
bound
shr
mov
cmpsl
sub
cmp
jns
mov
lods
out
mov
sahf
in
out
pop
adc
add
jo
sbb
xor
iret
xlat
ret
push
push
test
mov
notl
or
loopne
xorl
lret
lahf
jae
loope
pop
test
aad
lret
cmpb
mov
pusha
test
idivl
xor
inc
pop
rolb
mov
inc
adc
pop
shlb
add
sbb
test
ficoml
push
add
adc
in
mov
addl
xchg
mov
inc
mov
push
nop
mov
push
push
or
orl
pop
movsb
repnz
imul
adc
add
test
mov
jmp
inc
jge
or
or
iret
mov
adc
mov
adc
xor
inc
pop
and
lahf
ja
sbb
mov
add
test
pop
xchg
xor
or
adc
mov
or
movsl
jb
test
sahf
outsb
pop
mov
nop
out
je
test
inc
and
cmp
fildl
push
pusha
cmc
les
inc
xor
fwait
sub
dec
scas
sbbl
jecxz
mov
mov
mov
sahf
dec
rol
aas
je
dec
mov
mov
fld
fidivrl
mov
sbb
sub
orb
jns
jb
jp
xor
iret
jle
or
rcrb
xor
outsb
and
add
add
shll
inc
push
movsl
inc
mov
mov
inc
xor
inc
int
shlb
shrl
push
push
test
popf
xchg
mov
mov
stos
dec
or
or
test
sbb
adc
mov
movb
into
pushf
adc
test
pop
push
add
jg
jo
dec
or
inc
add
or
add
cwtl
mov
pop
push
mov
pop
aam
scas
das
and
xchg
ret
out
pop
aad
mov
cmp
add
dec
shll
or
add
adc
orl
pxor
adc
push
roll
push
test
add
test
xor
adc
jmp
cmpsb
xchg
mov
test
outsb
cmp
adc
shll
and
out
inc
cmovge
xchg
shl
movsl
sub
clc
bound
add
and
stos
xorb
cmpsb
dec
mov
pop
rcl
add
and
orb
or
sbb
mov
and
lods
pop
jne
jns
in
mov
push
jne
jmp
lcall
aaa
test
push
mov
mov
or
pop
insb
lret
outsl
cmpsl
or
cmp
jge
push
stc
adc
inc
pusha
fsubrl
rolb
mov
subb
and
xchg
or
mov
adc
sbb
sbb
lret
add
test
add
pop
push
adc
cmp
sbb
push
xchg
std
inc
and
inc
lods
or
cmp
pop
mov
cmp
adc
sti
xor
dec
push
insl
gs
jb
push
cmp
mov
jne
pop
cmp
cwtl
inc
add
in
sbb
sub
popa
sbb
or
inc
add
mov
jle
or
pop
jl
imul
lods
inc
or
dec
sbb
push
inc
cmp
mov
adc
or
add
inc
or
or
inc
cwtl
fmuls
sbb
shll
pop
ret
sbb
push
out
cltd
lcall
gs
inc
dec
push
orl
add
and
jp
sbb
dec
or
mov
inc
inc
pop
lds
jmp
adcb
xor
or
jnp
dec
aaa
jne
dec
push
stos
mov
popa
adc
jae
movsl
adc
xchg
pop
add
or
add
xor
rcrl
pushf
mov
push
pop
add
sbbl
mov
and
cmp
xor
call
dec
addr16
and
pop
insl
pop
adc
or
cmp
xor
adc
out
push
sbb
sbb
imul
mov
fs
fwait
stos
pop
xchg
push
adc
add
loope
jo
xorb
dec
xchg
popf
ror
hlt
mov
leave
cmp
or
cmp
dec
and
mov
arpl
push
mov
cmp
mov
nop
stc
scas
add
inc
aad
jne
inc
or
push
fs
dec
popa
sti
or
mov
inc
mov
pop
add
psadbw
cwtl
and
xchg
das
sahf
sbb
cmpsl
repz
or
bound
jg
push
imul
sbb
jno
scas
inc
aad
mov
mov
mov
stos
cltd
xor
enter
or
cmc
jl
push
ds
js
loop
and
cmpsl
add
loope
push
dec
mov
scas
mov
push
sbb
mov
pusha
test
jp
sahf
push
push
pushl
pop
int3
test
mov
hlt
push
pop
mov
add
pop
add
adc
int
fnstcw
mov
fwait
leave
mov
inc
dec
lods
jmp
jne
xchg
pushf
ret
pop
and
jo
inc
add
in
fldl
andb
adc
sub
pusha
push
testl
hlt
cs
xorb
sbb
sbb
cmpsl
xchg
mov
add
sbb
cmp
and
add
pop
push
adc
add
lcall
and
str
inc
inc
adc
and
mov
pop
add
push
test
xchg
sub
test
sbb
adc
adc
xor
sbb
sbb
mov
popf
mov
mov
add
jl
fwait
cmp
stos
insb
adc
movsl
mov
pop
xchg
dec
jecxz
inc
repnz
mov
and
dec
in
add
leave
mov
lret
inc
push
jo
pop
daa
push
test
xchg
arpl
adc
loope
jo
les
outsl
gs
push
aam
jo
les
inc
popf
or
push
subb
jecxz
sbbb
add
movsl
jo
pop
insl
or
imul
add
and
xchg
or
leave
mov
faddp
stos
nop
movb
int
adc
adc
nop
push
movsl
xchg
and
aam
add
icebp
sbb
dec
loopne
inc
and
pop
addl
loope
xchg
push
mov
jl
in
push
xchg
mov
iret
add
and
jo
es
ja
sbb
inc
push
dec
adcl
cwtl
idivl
add
test
sbb
and
pushf
pop
lds
rolb
push
shll
push
add
xor
adc
cs
movsl
je
mov
dec
inc
pop
push
or
ffreep
nop
decb
lods
and
and
inc
and
and
movsb
push
je
flds
adc
mov
inc
and
les
jl
mov
push
dec
push
and
ss
sub
and
mov
lds
leave
sub
inc
ret
pusha
mov
js
fadds
add
mov
mov
add
repz
mov
add
mov
xchg
daa
sarb
inc
mov
mov
jno
adc
mov
adc
jo
mov
scas
add
inc
nop
and
jo
lock
cmp
xor
lods
aas
leave
add
dec
mov
fs
adc
imul
jge
les
pop
and
sub
les
mov
add
loopne
or
fs
push
inc
mov
and
stos
add
push
repnz
xchg
pop
mov
cmc
mov
or
and
cmpl
adc
mov
scas
inc
aam
ljmp
lods
dec
stos
pop
adc
ret
and
jp
std
sbb
repz
jl
add
add
inc
rcll
andl
or
aaa
pop
popf
add
mov
xchg
xchg
pop
daa
pusha
dec
add
fisttpl
add
jmp
push
mov
test
pop
and
frstor
ffree
shll
cmp
jno
adc
incl
xchg
push
nop
cmp
scas
jp
and
or
sbb
xor
dec
pop
aad
rcll
arpl
mov
rorb
xor
push
adc
inc
adc
sbb
jecxz
mov
and
or
dec
adcl
jns
add
out
push
sarb
mov
daa
xchg
dec
or
or
test
xor
lret
xchg
andb
mov
movsl
inc
iret
sub
movsb
jo
es
sarl
cmp
imul
aad
xor
push
pop
mov
inc
test
sbb
nop
test
fcoml
jge
lods
movsl
or
test
xor
insl
xchg
sub
stc
frstor
xchg
add
int3
xchg
mov
add
mov
adcl
push
cld
pop
ret
jne
xor
xchg
rclb
ret
inc
mov
rcl
or
mov
mov
push
lea
push
sub
push
movsb
xor
inc
scas
push
sub
and
pop
test
add
movsl
pop
cs
xor
ja
jo
ss
ficoms
mov
push
or
and
sub
push
and
sub
movsb
andb
orl
sub
xchg
xor
pusha
push
enter
or
and
cmc
fmul
adc
push
es
or
leave
rcrb
sub
or
jno
arpl
mov
jecxz
inc
jo
aaa
mov
lods
add
lret
subl
and
mov
or
xchg
sub
ret
ja
mov
mov
andb
jne
ret
xchg
inc
shlb
stos
pop
pop
imul
or
shll
xchg
add
or
jo
inc
add
adc
popa
or
rol
iret
repnz
mov
js
icebp
adc
push
add
mov
popa
inc
jg
mov
movsl
aas
mov
xor
mov
shll
ret
std
stos
xchg
orb
or
aaa
loope
inc
lods
andl
inc
aad
les
inc
mov
insb
sbb
adcl
push
add
inc
popf
adc
and
clc
xor
jb
or
dec
sbb
pop
or
shr
sbb
add
dec
and
sub
dec
lods
out
test
stc
sub
mov
jno
test
mov
subl
add
jns
scas
pop
add
mov
sub
jo
adc
xor
xor
pop
pop
out
mov
icebp
add
push
jae
inc
call
xchg
pop
cmpsb
scas
scas
cltd
add
and
cs
and
or
adc
subb
mov
dec
push
sbb
mov
dec
in
and
dec
out
add
loopne
add
xchg
lock
cltd
dec
inc
insl
sub
push
adc
test
sahf
cwtl
and
scas
outsl
push
jno
imul
sbb
movsl
lea
cwtl
loopne
and
bound
fildl
mov
pop
mov
inc
jae
add
lea
mov
in
shrl
rcrb
lea
mov
add
cmp
dec
sbb
push
adc
mov
adc
adc
rcll
daa
pop
and
mov
fwait
inc
push
dec
rcll
push
adc
jecxz
sbb
js
inc
adc
push
mov
arpl
sbb
sub
cmp
push
sub
mov
stos
or
lea
ret
mov
repnz
repz
mov
adc
loop
push
nop
ja
xchg
sub
add
mov
mov
mov
outsb
bound
addb
push
or
xchg
adc
stos
inc
mov
aad
orl
add
xor
movsb
push
mov
dec
nop
mov
jns
or
es
popa
push
repnz
imul
push
pop
pusha
xchg
incl
pop
pushf
cmp
and
or
mov
bound
mov
xor
sub
jo
lahf
roll
fwait
add
xor
xor
aam
sub
add
and
cmp
daa
lahf
sbb
test
xchg
push
or
or
cmpsl
mov
push
mov
sarb
adc
pop
ret
jecxz
rclb
ljmp
inc
add
addr16
adc
loop
ljmp
or
cwtl
push
fidivl
scas
inc
in
sub
mov
jmp
je
rcrl
or
jne
jnp
fwait
adc
stos
mov
add
orb
sbb
mov
cvtps2pi
or
fildl
ret
rclb
mov
fsts
xor
and
pop
add
jne
pop
les
in
pop
inc
stos
add
int
fldcw
notl
and
faddp
jge
rorb
adc
and
pop
push
inc
adc
inc
or
icebp
pusha
test
dec
xor
movb
lret
sub
sub
xrelease
xchg
or
xor
sub
mov
dec
sbb
scas
inc
inc
sub
add
mov
jecxz
andl
aam
stos
pop
sbbl
jecxz
data16
mov
push
xor
addr16
repnz
inc
or
mov
mov
jb
sbb
mulps
or
add
frstor
scas
cmpsl
xor
cmpsb
or
fcmovnb
test
lahf
cmc
xlat
addl
xchg
insb
bound
sbb
jno
pop
add
je
xchg
dec
in
xor
or
inc
sbb
jno
cmpl
push
adc
inc
xchg
mov
push
adc
leave
fldl
sbb
movsl
adc
push
mov
add
push
lds
pop
les
leave
mov
push
push
push
or
xchg
jno
inc
loopne
sbb
xor
pop
aaa
repz
subb
jmp
movsl
bound
mov
pusha
inc
or
shl
jg
xor
or
notl
add
and
imul
adc
lods
inc
push
mov
jp
or
add
push
ss
add
add
mov
pop
xor
scas
adc
or
cwtl
mov
mov
add
sbb
add
sub
std
mov
or
xor
adc
or
pop
int
add
adcb
sbb
aad
sbb
lcall
orl
jno
adc
rcrl
push
fwait
add
movl
scas
sbb
adc
fst
push
push
shlb
sbbl
xchg
mov
outsl
jbe
inc
dec
sbb
sbb
push
add
fsubr
test
add
mov
pop
add
mov
popf
sbb
mov
add
xor
add
mov
into
jge
mov
fists
push
pop
popa
push
inc
pop
mov
add
sbb
inc
inc
outsl
xor
inc
pop
or
add
sub
xor
imul
cmpsb
testl
add
cmp
dec
enter
sbb
or
adc
icebp
and
cltd
outsb
sub
and
mov
adc
dec
aam
rol
add
stos
fildl
add
inc
ret
adc
sub
add
sbbl
adc
push
push
adc
shlb
push
pop
pop
mov
xchg
test
es
int
cs
adc
mov
inc
pop
mov
ss
les
pop
cmpb
inc
test
mov
loopne
jae
arpl
test
jns
push
or
fildl
movd
mov
rorl
xor
xor
pop
adc
add
and
add
cwtl
add
push
lods
pop
or
sbb
inc
adc
or
pop
push
jae
aaa
js
mov
xor
gs
sub
mov
adc
inc
mov
pop
cmp
adc
inc
push
jno
xchg
sub
sahf
out
pop
adc
push
inc
push
cmp
es
incl
xchg
bound
aad
lcall
sub
push
add
or
cld
xchg
test
je
and
push
jnp
push
jmp
inc
sbb
repz
mov
sub
xor
add
loope
sub
xchg
lahf
or
xchg
pusha
sbb
or
add
inc
cli
xchg
call
cmp
imul
xchg
add
and
pop
rorb
pop
dec
lods
mov
inc
mov
or
insb
stc
insl
outsb
cs
inc
sub
sub
leave
sbb
lret
lcall
movsb
mov
cmp
sbb
cmpb
xor
push
dec
jne
add
dec
jg
popa
and
mov
insb
ja
je
mov
cmpsb
mov
stos
add
stos
cs
xor
push
adc
adc
ficompl
pop
lds
frstor
data16
sti
jl
outsl
dec
cmp
push
add
push
sbb
dec
mov
add
mov
mov
daa
push
adc
add
addr16
add
stos
jmp
mov
ja
push
cmc
lgs
or
test
sub
repnz
or
jo
lea
es
cmp
sti
cmpsb
xor
aas
in
lods
xchg
daa
test
test
int3
sbb
add
icebp
cmp
clc
push
int
inc
ffreep
add
in
inc
sbb
pop
add
lcall
push
adc
mov
orb
aad
add
cwtl
xchg
adc
jl
pop
iret
dec
cmp
sbb
aad
out
cmpsb
stos
dec
pusha
cltd
sub
pop
cmp
jle
test
jg
cld
adc
test
jne
add
addl
fs
leave
xor
mov
and
add
orl
push
int
sbb
mov
std
sbb
bound
cmp
lcall
add
inc
aaa
and
cmovo
outsl
lock
pop
out
xchg
cmp
cli
xchg
mov
mov
add
stos
icebp
push
jns
leave
inc
sbb
stos
add
adc
inc
imul
jne
push
pop
pop
jle
daa
les
xor
sti
and
nop
into
mov
push
shlb
pop
mov
push
pop
shlb
stos
xor
dec
mov
lret
sbbb
add
leave
mov
add
add
push
push
fwait
adc
mov
mov
mov
mov
xchg
push
test
add
in
adc
mov
or
lea
mov
mov
jae
test
sbb
xchg
les
leave
les
mov
or
inc
mov
leave
mov
jle
clc
mov
sbbb
add
xor
ja
sti
sahf
xor
mov
mov
ret
add
cmp
sbb
or
aam
dec
clc
or
icebp
add
jno
inc
and
pop
sbb
movb
dec
popf
jecxz
add
outsb
add
pop
dec
lds
or
add
dec
inc
push
xchg
pop
jne
cmp
inc
xchg
adc
dec
add
sbb
lret
mov
loopne
xor
inc
add
mov
mov
push
xchg
leave
addb
aaa
cs
addr16
les
jne
pop
sbbl
in
add
sbb
lahf
ret
sbb
or
mov
imul
movsl
js
lcall
sbb
or
rcll
or
jecxz
mov
pop
stos
add
inc
std
test
sbb
inc
add
inc
insb
in
inc
dec
inc
and
stos
push
and
dec
leave
dec
and
or
xor
xor
xor
stos
xor
mov
lcall
in
cld
xor
cmp
or
js
mov
lret
and
bound
push
push
jb
pop
mov
dec
insb
mov
mov
nop
cmc
sbb
movsb
add
loope
mov
xchg
dec
loope
jl
jne
push
sti
lcall
mov
cmp
xor
xchg
in
test
jae
movsl
add
out
inc
dec
cmp
fcoms
lea
push
adc
iret
in
or
adc
add
and
dec
ljmp
xchg
add
sbb
pop
dec
jno
in
mov
inc
jb
jne
adc
insb
test
or
pop
xchg
mov
movb
into
adc
fistl
add
movsb
inc
sub
les
mov
xchg
andl
or
inc
add
stos
inc
mov
adc
jo
imul
cmp
adc
addb
inc
pusha
adc
mov
lods
pop
mov
scas
push
sbb
rorb
aam
adc
and
out
nop
stos
mov
push
popf
out
mov
sbb
movl
imul
cmp
dec
outsb
mov
sub
dec
sahf
outsl
popa
movsb
pop
aad
xor
addl
es
lcall
ret
inc
mov
mov
mov
in
stos
adc
repz
cmp
inc
push
loop
out
mov
sbb
adc
xchg
add
or
inc
pop
ret
dec
shll
or
or
add
mov
ret
add
jecxz
jb
mov
std
push
dec
xor
sub
sub
mov
pop
sbb
mov
xor
dec
in
mov
ret
or
inc
or
or
cmp
adc
shll
sub
xchg
xchg
adc
mov
jmp
push
sub
cs
test
out
inc
xchg
cmp
xor
xor
inc
outsl
add
rol
addb
add
out
mov
dec
je
pop
push
add
jns
rorl
cmp
add
push
mov
push
xchg
pop
and
fadds
mull
adc
push
inc
or
jmp
inc
cwtl
sub
sti
inc
sbb
and
jp
mov
dec
popa
sbb
shr
cmpsl
and
nop
inc
mov
xchg
xchg
dec
or
inc
les
jg
mov
pop
mov
jo
fwait
pop
adc
fisubrl
add
or
cmp
mov
sbb
push
subb
insl
lret
or
sbb
ds
mov
dec
lods
dec
imul
lods
and
les
push
fldl
cwtl
mov
mov
xchg
ja
push
pop
int
dec
out
shll
sub
jno
mov
icebp
mov
xchg
mov
add
add
loopne
dec
cs
out
push
pop
pop
insb
or
loope
inc
mov
data16
dec
cmp
bound
mov
or
jns
pop
push
pop
lds
and
inc
sbb
or
jnp
or
dec
stos
adcl
push
push
sbb
dec
xor
lcall
inc
pop
add
add
aas
es
mov
adc
push
push
mov
loope
ret
int
mov
mov
xor
pop
pop
mov
xor
inc
sbb
mov
andb
imul
sbb
pop
jno
jne
pop
push
rcrb
xor
mov
push
adc
dec
call
mov
dec
dec
add
xchg
add
dec
adc
mov
or
pop
pop
popa
rcrl
fisttps
cmpl
and
cs
stos
rorb
inc
outsl
mov
push
rclb
shl
insl
dec
push
mov
movb
nop
or
flds
jmp
dec
and
rcrl
and
lds
dec
mov
pop
inc
push
pop
aam
repz
inc
add
cmp
or
jl
loope
sub
imul
imul
jns
addr16
cmp
je
loopne
xchg
scas
xchg
jo
adc
inc
outsl
lea
cmp
sbb
subl
push
jno
dec
mov
insb
inc
pop
add
mov
test
mov
rolb
rcr
mov
es
cmc
je
rcll
into
pop
xor
adc
xchg
ss
test
test
sbb
dec
mov
lret
adc
aad
xchg
aad
roll
push
mov
mov
nop
mov
imul
imul
add
mov
gs
cvtps2pd
movsl
xchg
movsb
test
rclb
inc
push
pop
aas
or
add
push
dec
inc
add
nop
push
movsb
subl
dec
in
xchg
cmpsl
inc
or
sbb
pusha
sbbb
dec
mov
fs
xlat
xor
pop
sbb
aad
add
addb
push
ret
pop
scas
dec
sbb
jge
sub
and
lods
or
loop
fbstp
ljmp
mov
pop
mov
cmp
mov
xor
mov
add
loop
cmp
ret
addr16
popa
push
out
sbb
scas
pop
cmp
jo
stos
les
les
mov
pop
stos
mov
sub
lds
add
and
pop
popf
cld
bound
repnz
or
stc
arpl
lret
sub
or
add
adc
xchg
dec
push
adc
loopne
mov
lods
add
lcall
inc
push
sahf
int3
mov
popf
daa
andl
fcoml
shrl
pusha
and
std
sub
push
xchg
test
rolb
repz
push
cmpsb
sub
cltd
inc
pop
adc
mov
mov
loopne
ljmp
in
add
or
jecxz
or
iret
adc
add
mov
flds
nop
stos
pop
and
movsl
movsb
jo
loopne
xchg
sub
loop
pop
dec
xlat
movsl
dec
add
scas
outsb
mov
push
out
dec
add
in
sub
jae
pop
enter
and
ja
or
stos
test
push
stos
sub
xor
js
gs
or
xor
push
les
push
aad
push
in
mov
cwtl
xchg
or
imul
in
gs
test
inc
push
push
je
inc
adc
xor
push
imul
add
adc
and
mov
ret
xchg
cmpsb
and
adc
xor
popa
add
pop
jno
add
test
cmp
nop
imul
lock
mov
cmp
xor
sbb
xchg
cmpsl
adc
push
jmp
call
aad
inc
inc
add
and
jno
add
sbb
in
xorb
adc
xor
push
rclb
testl
mov
rol
xor
inc
inc
add
sub
fnstsw
xchg
sbb
xor
fildll
fiadds
or
sbb
or
daa
dec
push
pop
test
push
jl
sub
or
inc
lods
add
mov
push
cmp
pop
mov
es
jmp
pop
sbb
movsb
push
jmp
rdtsc
nop
rolb
push
lods
cmpsb
xor
jns
mov
das
push
or
add
dec
adc
mov
test
popa
jmp
inc
movsb
dec
xchg
or
test
mov
data16
into
adc
stos
or
adc
loope
dec
sahf
out
push
out
sbb
mov
jo
dec
loop
or
test
dec
or
adc
or
fwait
or
inc
or
shr
add
dec
xchg
pop
sub
bound
adc
add
push
sub
cld
dec
rolb
nop
and
dec
sbb
jne
pop
pop
add
lret
xchg
or
xchg
popa
outsl
in
dec
rolb
push
fs
xor
xor
in
mov
push
inc
pop
arpl
sub
stos
adc
sbb
push
inc
cmc
push
cmp
rolb
bnd
and
or
dec
adc
adc
inc
xchg
inc
mov
xchg
nop
addr16
pop
popf
ret
mov
cmp
or
add
inc
rorl
xchg
inc
pop
sbb
or
inc
mov
mov
or
xchg
mov
ljmp
xchg
xchg
xor
sub
sahf
sbbl
jge
cmpsl
out
jae
sbb
ret
dec
cltd
cmp
add
push
add
lds
test
or
shll
das
or
mov
jnp
cltd
movb
sbb
inc
dec
imul
subl
adc
push
cmpsb
aad
dec
add
cmp
test
es
inc
or
pop
jge
sub
dec
ret
add
or
icebp
and
shll
adc
loop
ss
add
mov
push
xchg
and
shll
mov
push
xor
mov
sbb
lods
rolb
orl
cmc
cmp
sbb
movsl
test
in
dec
add
adc
fld
scas
push
sub
roll
sbb
adc
pop
fists
adc
cmp
adc
sbb
cmc
xor
rep
sub
add
mov
inc
lock
mov
loope
inc
cmpb
cmpsb
add
pusha
sbb
dec
xchg
inc
movsb
mov
dec
les
int
sbb
inc
hlt
sub
js
mov
cmp
mov
scas
out
adc
inc
daa
bnd
outsb
sbb
mov
scas
stos
pop
or
adc
lds
pop
xor
mov
out
jns
lods
push
inc
xchg
add
and
lcall
adc
mov
and
add
dec
adcl
mov
cli
ret
inc
jmp
ds
movsb
dec
cmc
mov
cltd
in
or
lcall
dec
fadd
stos
and
xor
xor
adc
push
inc
mov
and
sub
loope
mov
pop
test
test
mov
lea
push
sbb
jae
lahf
jo
mov
or
cmp
dec
jae
add
sbb
push
pusha
fwait
lods
mov
stos
ficoml
or
adc
pop
add
enter
ljmp
sti
into
jno
dec
add
enter
lcall
aam
mov
lret
push
and
fwait
sarl
rcll
test
cmpb
enter
fldcw
pusha
xor
xchg
mov
add
jns
test
pop
movsb
or
adcl
les
xor
mov
arpl
rolb
pop
and
nop
jge
orb
cmp
inc
add
roll
xlat
stos
push
push
cmp
fldt
dec
int
push
sbb
fisttps
dec
and
pusha
push
add
nop
imul
cmpsl
mov
aaa
mov
in
push
sub
pop
push
stc
es
pusha
xchg
push
pop
sbb
and
pop
pop
inc
pop
sbb
cmp
lcall
int
mov
or
imul
add
ror
push
add
sub
int
out
xchg
test
cmp
dec
mov
adc
mov
js
push
ret
in
arpl
add
xchg
or
fs
ja
adcb
push
mov
inc
aaa
inc
dec
jbe
mov
mov
push
sti
adc
iret
xchg
or
mov
push
fisttps
lret
adc
add
cmp
push
xor
sbb
push
dec
xor
add
popa
sbb
fwait
jmp
bound
cmc
cmp
jmp
jns
jmp
push
or
and
push
jp
or
cmpsl
je
fistpl
mov
mov
push
subl
or
sahf
xchg
jno
or
xchg
push
or
cmp
cvtps2pi
dec
mov
mov
cli
mov
out
and
add
jno
sub
add
ljmp
push
cld
adc
pop
sbb
xchg
or
xor
jno
ret
cmpsl
adc
xchg
mov
mov
and
xor
lea
shll
pop
je
push
cmpsb
push
mov
add
fldenv
push
adc
sub
and
lcall
adc
mov
data16
into
pop
inc
sbb
loopne
dec
rep
insl
xor
es
sub
push
xchg
dec
dec
xor
stc
push
push
dec
adc
sbb
je
into
add
ret
xchg
dec
add
xchg
mov
lahf
movsl
or
and
int
mov
sbb
cmpsb
jo
fildll
mov
xchg
test
je
push
xor
cmp
adc
dec
fcmove
sahf
add
xor
in
inc
adc
sbb
sub
dec
out
rolb
notl
mov
mov
add
cmpsb
jnp
inc
rcl
sbb
cmp
xor
jne
xlat
dec
insb
mov
or
cwtl
xor
mov
aas
add
adc
and
iret
arpl
pop
aaa
cs
incl
cwtl
cmpb
push
subb
popa
loopne
add
ret
add
push
int
mov
dec
fidivrs
lea
or
loopne
iret
rolb
nop
inc
pusha
nop/reserved
popa
sbb
and
or
adc
lea
push
fbld
sbb
mov
punpcklwd
pop
dec
jo
add
push
cmp
pop
dec
add
add
inc
fmull
mov
mov
mov
add
orb
ljmp
pop
or
sub
mov
das
adc
sbb
pop
fsts
pusha
adc
mov
cmp
mov
je
stos
inc
lea
dec
rcr
aam
inc
mov
inc
or
outsb
aam
add
cmp
push
rorl
pushf
cltd
adc
inc
adc
inc
daa
inc
call
es
pop
cmp
repz
rorb
adc
fs
cmp
dec
stos
add
jno
xchg
ret
jns
adc
jns
inc
mov
push
fs
std
outsl
out
jns
adc
jmp
lock
mov
sub
adc
jo
xor
mov
mov
test
add
cs
adc
add
ds
movsb
cmp
lea
add
les
shll
outsb
mov
mov
mov
sbb
push
jecxz
xor
imul
and
mov
insb
cwtl
pusha
mov
sub
inc
cmc
jle
dec
mov
and
andb
nop
xor
cmpsb
iret
dec
shll
mov
lds
je
pop
dec
mov
aaa
xchg
dec
imul
stc
mov
push
nop
dec
pop
mov
stc
adcb
xlat
nop
or
lods
add
push
insl
sbb
mov
xor
andl
adc
lods
mov
inc
add
ret
xchg
dec
adc
jo
dec
divb
fstpl
fwait
icebp
jmp
movsb
daa
fisubrl
mov
sbb
xorb
outsl
inc
int
fnstcw
insb
add
shlb
jmp
aad
in
adc
mov
and
add
cwtl
mov
push
nop
out
aas
sarb
je
add
pop
or
movb
jg
adc
mov
ja
scas
mov
mov
xor
add
pop
push
adc
sbb
and
cmp
sub
icebp
sub
nop
out
adc
lods
mov
xchg
add
inc
leave
push
pop
test
test
sbb
pusha
adc
mov
es
adc
inc
cs
shll
arpl
push
sub
popf
dec
sub
add
or
bound
and
inc
add
sbb
inc
add
add
mov
fidivl
je
sub
in
push
sub
dec
pop
lds
jge
sub
pop
xor
in
loopne
and
imull
and
xchg
loope
mov
adc
fadd
sub
jge
dec
cmp
jns
adc
xorb
add
push
add
jne
push
bswap
ret
js
pop
push
add
arpl
icebp
lcall
pop
sbb
xor
lea
sub
dec
sahf
cmp
or
mov
test
and
out
andb
sbb
popa
outsl
movsl
mov
and
mov
test
fadds
cmp
pop
push
imul
xor
xchg
mov
mov
imul
popf
xor
and
inc
push
push
leave
xchg
adc
push
inc
or
dec
push
adc
jo
adc
adc
rolb
rclb
pop
imul
mov
add
jle
mov
mov
test
add
rorb
jae
add
add
cltd
xchg
mov
cmc
inc
xor
pop
mov
push
imul
mov
nop
cmp
bnd
adc
addl
inc
mov
inc
mov
jecxz
and
mov
je
or
add
dec
enter
xchg
adc
mov
test
ret
stc
sbb
pushf
mov
loop
mov
sub
push
shll
cltd
and
cltd
add
mov
push
pop
orb
mov
iret
pusha
add
and
xor
xor
adc
cmpsl
mov
add
xchg
stc
xor
out
cmp
xor
sub
icebp
pop
xchg
xor
adc
cwtl
subb
mov
mov
loop
jg
sub
sbb
add
push
popa
rcll
shll
push
pusha
adc
jl
popa
addb
imul
loopne
in
add
cmpsb
call
sub
cmp
je
insl
sti
adc
outsb
popa
add
xor
or
sub
or
scas
adc
cltd
adc
aad
inc
add
rcrb
add
cmpsl
adc
add
dec
das
int3
mov
test
jnp
iret
pop
xchg
xchg
fldl
push
test
ss
push
xchg
punpcklbw
mov
mov
movb
mov
stc
adc
je
test
je
inc
xor
jl
mov
adcb
mov
adc
adc
add
adcb
adc
bound
cmpsb
jmp
or
jns
insb
jne
rorl
xor
lret
mov
or
mov
mov
iret
pop
xchg
imul
jge
faddl
mov
loopne
add
ljmp
repz
add
enter
push
je
sarb
adc
fldl
testb
pop
and
adc
add
ja
sub
xor
addr16
xchg
cmp
dec
mov
adc
inc
je
ja
fs
arpl
mov
or
adcb
push
mov
dec
mov
lret
add
sub
xchg
or
rcl
push
cmp
push
leave
out
mov
mov
add
inc
ret
mov
mov
or
jmp
shlb
or
fdivs
jne
cwtl
dec
scas
sbb
xchg
add
jno
and
and
add
ljmp
sbb
lds
xchg
out
xlat
loop
dec
adc
xchg
add
add
or
inc
sbb
sub
enter
cs
ret
add
mov
bound
jecxz
ja
push
les
adc
sub
pop
nop
or
cmpsb
xor
gs
xor
jns
lahf
xchg
or
push
and
call
pop
add
xor
sbbb
jo
dec
sub
in
pop
push
test
rcrl
push
sub
push
sub
fstl
sub
cmp
imul
xchg
or
mov
push
lds
mov
cli
pop
les
adc
inc
ja
pop
push
pusha
fst
add
cmp
cmp
jno
dec
push
lret
sub
push
popf
xchg
cltd
inc
movsl
dec
pusha
mov
fcoml
test
cmp
jp
inc
xor
aas
add
jne
dec
add
dec
arpl
and
push
mov
cmp
or
mov
test
mov
lds
add
sbb
mov
repz
fiaddl
arpl
outsb
test
sbbb
ficoms
sub
mov
xchg
mov
inc
inc
jecxz
cs
into
orb
aad
mov
adc
testb
jp
lahf
jle
mov
inc
pop
ret
loopne
in
push
push
jno
addr16
push
cltd
cwtl
movb
imul
inc
and
popa
stos
mov
add
adc
xchg
cltd
stc
ss
push
stc
add
in
mov
mov
sbb
lret
inc
xor
jl
stos
inc
push
xor
and
pop
cs
std
loope
xchg
push
cmpsl
daa
dec
addb
dec
mov
xor
outsb
popa
push
xor
add
fisttpll
jp
lret
rol
adc
sti
jecxz
rorl
xchg
sarb
mov
mov
jns
push
xchg
mov
popf
rol
repz
mov
ret
sub
lock
cmpsl
dec
or
add
ret
imul
leave
ret
out
cmpsl
movb
adc
pop
shlb
inc
adc
pop
enter
mov
enter
sub
mov
xorl
inc
or
inc
rclb
or
fwait
mov
adc
adc
dec
dec
sub
push
mov
mov
test
mov
jne
addl
lcall
mov
push
in
pop
jbe
xor
mov
sti
or
add
xor
adc
mov
push
adc
mov
mov
aad
xor
or
movsb
mov
rorl
out
or
adc
pusha
pop
xor
pop
jle
jno
push
jecxz
add
add
out
fstl
adc
sbb
cltd
and
push
and
insl
add
shrb
dec
dec
inc
push
sub
imul
add
sub
dec
sub
lods
pop
mov
lcall
sbb
fnsave
xchg
and
adc
in
pop
arpl
push
and
bound
adc
ret
push
test
dec
test
int3
mulb
add
outsl
push
add
les
je
or
adc
push
cs
adcb
add
loop
ss
test
add
ret
dec
xor
xor
xlat
es
and
clc
sub
lret
add
imul
nop
adc
adc
push
cwtl
push
push
xor
adc
cmpsb
push
cmp
sub
or
pop
jp
divl
jge
mov
or
loope
addl
lods
sub
and
lahf
pop
orb
mov
dec
insb
xor
popf
push
or
pop
and
and
cltd
jecxz
jg
sub
pop
xor
add
push
sbb
pop
inc
or
scas
jge
xchg
push
push
lcall
sbb
test
leave
repz
shrb
add
cltd
ret
arpl
inc
push
mov
inc
movsb
sub
adc
dec
jae
push
jno
loope
mov
pop
sbb
repnz
xchg
addl
xor
push
push
dec
jae
or
shrl
arpl
in
add
enter
sub
inc
popa
sbb
test
xchg
xchg
sbb
inc
add
icebp
xlat
orb
flds
pop
or
xor
push
and
mov
pop
stos
in
add
cmp
pusha
imul
inc
es
sbb
orl
push
add
jno
and
mov
mov
or
inc
mov
test
mov
add
xchg
sub
sub
mov
pop
push
iret
cmp
xlat
adc
sar
add
and
stos
or
xor
in
ret
jmp
inc
dec
shlb
enter
enter
hlt
mov
lods
add
adc
ljmp
cmpsl
and
mov
bnd
pop
aas
mov
sbb
sub
sub
push
push
fld
inc
add
sbb
add
test
stc
add
jns
push
adc
push
adc
ja
shrb
into
mov
les
loope
xor
xor
add
adc
mov
movsb
xor
jne
xchg
adc
loopne
cltd
mov
inc
sahf
mov
inc
orl
rcrl
andb
les
les
push
mov
scas
sbbl
and
stos
sbb
jae
js
mov
scas
jno
insl
or
mov
and
mov
subb
and
add
inc
mov
mov
mov
jnp
movsb
mov
dec
mov
push
dec
jae
das
sub
repnz
xchg
loop
and
sbb
or
push
nop
rcrb
dec
jb
inc
mov
dec
pop
push
inc
sbb
xchg
fstps
and
and
sbb
ljmp
pop
pop
mov
ret
add
mov
orb
bound
pop
daa
sbb
jno
inc
pop
xor
inc
sahf
je
incl
mov
push
or
xorb
std
fcompl
add
dec
lea
adc
cmpl
dec
push
fucomi
rorl
push
jmp
inc
and
xchg
shll
outsb
or
or
cmc
xor
sbbb
add
pop
cmpsl
shlb
xchg
add
outsl
jne
inc
adc
or
xor
cmp
inc
adc
setnp
xchg
pop
mov
xor
popa
sub
cmpb
push
or
mov
xchg
cmpsb
mov
push
imul
mov
fadd
mov
or
cmp
mov
mov
push
repnz
add
mov
aam
jno
xor
or
arpl
push
aaa
adc
dec
cmp
mov
pop
leave
fnstcw
jne,pn
negl
and
std
popa
lock
je
and
push
push
sahf
add
loop
rclb
xor
mov
adc
lcall
jae
insb
pop
adc
rol
jbe
ljmp
add
xchg
test
cmp
push
daa
and
lcall
xor
pop
add
stos
dec
scas
movsl
add
imul
sub
xchg
cmp
inc
lea
xor
cwtl
test
mov
xor
dec
aas
mov
adc
shrl
add
xchg
pop
xor
mov
sub
dec
pop
in
dec
lcall
pop
mov
push
repnz
jbe
addl
add
lcall
cmp
ljmp
cmp
sub
pop
push
dec
cwtl
and
sub
inc
jmp
pop
testb
and
cmp
push
push
push
roll
push
nop
lcall
adc
aad
jo
aam
or
nop
addb
test
iret
out
cmp
mov
mov
test
inc
cmpsb
adc
inc
mov
sti
pop
sub
and
movsl
and
dec
daa
or
inc
sub
or
arpl
int
sbb
cli
fildl
inc
pop
pop
and
sbb
and
iret
cmp
mov
or
scas
clc
shll
mov
jmp
movsl
xor
dec
sbb
adc
out
xchg
andl
add
add
cmp
sub
subl
lods
sub
mov
pop
mov
xchg
sub
add
bound
add
rorb
out
adc
test
insl
push
pop
xor
dec
loopne
cwtl
test
rcrb
and
pop
or
mov
pop
adc
rorb
dec
push
dec
add
adc
lds
pop
push
dec
fcomps
into
sub
insl
push
and
xchg
mov
adc
mov
sub
cmp
dec
bound
cmpsl
je
xor
pop
insb
dec
insb
dec
rcll
xchg
mov
mov
push
push
or
in
mov
dec
xor
pop
nop
add
inc
cltd
leave
xchg
mov
nop
stos
xor
lds
sbbb
push
nop
lret
adc
ficoms
test
xchg
loopne
ret
xor
popa
inc
and
cld
jns
sbb
out
and
in
pop
push
xchg
pushf
fucomip
adc
mov
adc
movsb
jb
add
mov
mov
enter
pmullw
inc
jecxz
cmc
mov
inc
mov
cmp
iret
cmp
dec
add
xchg
or
fsub
je
gs
aaa
and
mov
push
mov
inc
inc
mov
add
les
cmpsl
adc
or
pop
leave
cmp
sub
pop
sti
xchg
sbb
add
or
shrl
inc
and
push
xchg
fs
lds
xor
sub
xchg
movsl
jecxz
mov
pop
cmp
add
sahf
push
in
out
mov
and
sbb
mov
push
xchg
add
push
int
inc
clc
mov
adc
je
xchg
xor
jmp
ret
lds
int3
push
mov
lea
lea
test
in
dec
mov
mov
test
sub
frstor
pop
inc
punpcklbw
xor
xor
outsb
xchg
mov
adc
adc
loop
xor
andl
dec
or
adc
mov
mov
ljmp
loopne
pop
fdivrs
sub
shrb
dec
xchg
sub
lcall
push
jae
mov
movsb
sbb
push
and
cmc
addb
push
pop
add
jno
ja
add
or
xchg
push
add
xor
rolb
add
sbb
jae
mov
push
dec
inc
daa
or
adc
mov
movsl
fildll
adc
add
and
daa
roll
mov
cmpsb
jne
jne
pusha
add
sub
add
jge
and
lret
push
xor
movsb
jb
xchg
and
xchg
test
mov
repnz
hlt
mov
mov
push
add
bound
in
mov
xchg
inc
addl
leave
sub
adc
jb
cltd
xor
push
outsl
inc
fs
aas
add
repnz
sbb
push
sub
and
mov
ret
adc
xor
gs
test
pop
shlb
or
mov
sbb
movsb
ljmp
daa
add
adc
sarb
call
int
inc
adc
cmp
adc
mov
fists
mov
test
in
sbb
inc
jmp
adc
iret
sbb
sbb
popa
sub
pop
pop
xor
push
mov
in
int
cmpl
mov
and
fcomps
pushf
mov
and
add
and
and
pop
jnp
xor
cli
xchg
cmpsl
sub
dec
pop
and
int
inc
jl
xchg
push
cwtl
inc
push
pop
dec
and
push
mov
and
dec
add
add
adc
sti
fstl
cld
sbb
jg
add
aaa
sub
les
shr
xor
rorb
leave
mov
les
adc
mov
adc
mov
add
or
lods
es
sbb
ljmp
and
add
push
add
rorb
mov
xchg
mov
cwtl
jecxz
xor
ljmp
jecxz
lret
cs
shll
pop
fiaddl
movsl
inc
and
std
pop
test
inc
mov
out
sbb
lcall
add
testb
mov
inc
cmpsb
inc
sahf
in
je
inc
gs
nop
ret
add
test
mov
dec
lret
inc
and
dec
fs
scas
add
movsl
lock
mov
push
lret
call
inc
in
lret
repnz
sbb
add
xor
roll
adcl
inc
mov
outsb
push
or
push
jae
mov
add
add
addr16
inc
or
sub
push
daa
sub
popa
popa
add
int
pushf
rclb
xor
test
pop
push
dec
imul
push
mov
mov
pop
xchg
jg
mov
mov
and
ret
add
dec
das
jns
and
movsl
imul
ret
mov
add
dec
sbb
cwtl
sub
xchg
push
lcall
xchg
daa
and
sub
gs
adc
push
inc
xchg
inc
aam
bound
pop
or
aas
je
and
shlb
dec
xchg
sub
jbe
mov
or
rcrl
rcrl
adc
popa
popa
add
rorb
push
mov
add
rorb
adcb
pop
mov
mov
shl
jge
dec
push
or
mov
addb
in
fwait
sbb
loope
sub
and
lods
stc
adc
daa
push
enter
movsl
adc
sbb
or
insb
add
lods
inc
or
jmp
dec
stos
xor
sub
dec
adc
sbb
pushl
sbb
scas
mov
mov
adc
adcl
xchg
mov
mov
es
sbb
les
pushf
jb
mov
test
rcrb
test
push
ret
add
adc
sub
sbb
add
jge
lods
mov
xor
inc
lret
sbb
bound
sub
xchg
and
add
orl
sbb
jbe
je
and
add
mov
inc
and
pop
cmpsl
xor
lcall
xchg
cmc
add
sub
adc
dec
lret
xor
lret
mov
mov
adc
enter
adc
or
jmp
push
mov
sbb
les
mov
pop
pop
sub
and
movsl
add
push
roll
bound
sub
data16
inc
mov
push
pusha
shll
frstor
mov
aas
pop
lea
rcrb
push
sbb
nop
lret
jae
fstps
pop
push
xor
jno
shlb
xor
or
stos
and
push
push
and
adc
scas
push
xor
sub
iret
xorl
ret
adc
add
dec
xor
gs
insl
adcb
adc
cmovl
imul
xchg
xor
sub
add
insl
push
in
sarl
and
add
mov
leave
jae
or
addb
inc
push
negl
push
sbb
dec
pop
pop
push
ret
mov
jecxz
movl
mov
lods
xor
sbb
sbb
dec
jge
bound
push
cmp
sbb
addl
mov
add
sub
dec
pop
mov
jo
add
sti
adc
cmp
out
cwtl
adcb
jno
xor
aaa
mov
sub
pop
jg
outsl
inc
pop
aad
jo
or
or
lcall
mov
ret
mov
lods
scas
leave
or
dec
xor
addl
add
add
xchg
xor
and
mov
add
movsl
add
push
mov
in
cmp
test
adc
mov
push
and
std
and
jne
cs
or
add
inc
and
xchg
popa
mov
push
sub
inc
dec
pop
repz
jno
stos
push
lcall
pusha
dec
ret
int
or
psubusb
push
cwtl
inc
xchg
xchg
int
notl
sbb
arpl
popf
push
aad
xchg
cmp
daa
repnz
xor
jg
add
mov
mov
gs
mov
sti
roll
int
add
aad
sbbb
stc
rolb
out
mov
xor
xor
add
nop
cmp
sbb
cmp
orl
add
test
pop
insl
sbbb
inc
test
repnz
jne
jno
ret
dec
push
daa
jno
mov
add
fadd
adc
xor
jmp
and
lea
loop
xchg
fwait
test
pop
xchg
or
xor
ror
push
xor
nop
icebp
mov
mov
xchg
sub
adc
pop
int
adc
sub
add
xchg
adc
sbb
orl
loop
adc
or
rolb
enter
cmpsb
push
push
aas
lret
addb
fistl
add
pop
ss
test
adc
pop
mov
jno
push
cmc
xchg
cmpsb
xor
adc
cmp
or
pop
outsb
outsb
cmpsl
xor
lea
xor
xor
bound
adc
mov
mov
pop
pop
and
cmc
xchg
scas
sub
xchg
dec
mov
inc
add
les
and
pop
xor
pop
movsb
in
dec
jne
dec
add
inc
pop
sbb
sub
cmp
faddl
scas
dec
sub
test
add
bound
mov
pop
sar
pop
xchg
sub
and
pop
hlt
push
pushf
mov
lret
add
jne
aad
lods
jle
out
xor
lds
cmpb
mov
mov
add
sbb
cs
jge
add
pop
sbb
movsl
mov
lret
mov
adcb
xor
push
mov
fwait
movb
nop
lods
add
lds
fbstp
lods
mov
push
mov
pusha
mov
xchg
sarl
fwait
out
mov
or
xchg
or
pcmpeqd
arpl
sub
call
mov
adc
and
or
in
enter
adc
xor
pop
aad
cmp
xor
roll
push
and
add
push
shrl
dec
push
ret
aas
xchg
adc
xor
fcoml
mov
repz
pop
and
inc
mov
shl
push
lds
mov
sbb
or
imul
fsubrl
lret
cli
cmc
and
lods
in
aam
inc
push
pop
mov
jae
inc
sbb
popf
je
xchg
lret
fcoms
mov
mov
inc
test
push
mov
inc
adc
test
stos
shrb
lret
roll
test
repz
imul
mov
outsb
inc
or
enter
inc
sbb
jne
and
xor
sub
dec
or
and
jmp
xor
lods
xchg
out
mov
cmpsb
cmp
sbb
pop
andb
inc
rolb
outsl
cwtl
add
mov
add
test
inc
cmp
add
inc
adc
ret
xor
je
xor
jne
pop
imulb
add
test
sub
or
dec
jg
jns
add
gs
sbb
xor
or
jae
inc
je
lret
test
jge
dec
sahf
popa
imul
mov
sub
add
adc
inc
add
loopne
mov
ret
push
cmp
pusha
or
test
shr
enter
sbb
mov
xor
inc
or
xor
aas
mov
inc
lods
and
xchg
scas
test
imul
outsl
inc
xor
xchg
cmp
xor
pop
inc
lea
xor
pop
mov
mov
sub
push
in
fimuls
push
pop
cmp
das
mov
lcall
inc
push
mov
sbb
dec
adc
jo
jecxz
test
adc
iret
sbb
and
xor
dec
add
arpl
add
mov
mov
push
push
jl
cltd
push
push
dec
mov
sub
pop
cmp
or
insb
arpl
je
sbb
or
mov
das
insb
mov
dec
inc
add
in
nop
iret
enter
xlat
xchg
or
int
inc
push
push
mov
loope
aam
adc
xor
mov
adc
nop
xchg
and
adc
inc
adc
mov
pop
and
pop
shrb
or
adc
mov
orl
mov
pop
and
mov
mov
mov
adc
add
fwait
movsl
mov
adc
push
sbb
push
xchg
and
push
add
add
and
setno
bound
lea
push
addb
inc
aad
ja
and
sbb
and
pop
push
scas
je
sbb
push
add
sbb
or
loope
lods
lcall
ja
loopne
jns
stc
mov
dec
xchg
pop
sbb
ror
sub
adc
add
inc
and
roll
in
and
xor
les
iret
jae
add
xor
sti
pop
sbb
xor
mov
jecxz
and
inc
ret
bound
rclb
fisttpll
rcrb
inc
sahf
push
adc
stos
cmpsl
xchg
cmp
imul
xor
or
test
mov
pop
pop
adc
stc
ja
fs
adc
loop
push
mov
call
and
push
sub
imul
bound
movsl
shlb
scas
stc
popa
lret
pop
push
jae
mov
bound
fimull
inc
enter
add
push
and
pop
and
cli
add
js
enter
and
sub
mov
bound
loope
xlat
or
sub
cmp
pop
pop
jg
add
push
xor
movsl
mov
movsb
aad
aaa
fstpt
insl
jge
add
xchg
mov
inc
ret
sub
jnp
adc
sub
cwtl
scas
addb
call
sbb
scas
insl
xchg
xchg
insl
cmp
ret
adc
mov
loopne
jno
popf
std
pop
stos
inc
adc
xchg
jae
or
loopne
daa
out
adc
xchg
movsb
adc
loopne
mov
dec
out
cwtl
or
addl
adc
inc
sbb
add
ljmp
pop
inc
add
mov
cwtl
shlb
clc
or
pop
push
lea
cmc
push
rolb
or
inc
arpl
jns
mov
arpl
adcl
pop
push
mov
or
push
stos
adc
daa
les
movsl
push
or
inc
aas
test
cmp
test
xor
mov
adc
fnstsw
add
jns
in
rcrb
test
or
push
fsubrl
fadd
and
ljmp
pop
and
mov
loop
add
push
movsb
or
sbb
or
ret
add
nop
sar
xchg
push
mov
enter
daa
not
fildl
push
imul
push
push
or
mov
or
mov
test
adc
sbb
lret
ficoml
sbb
cmpsb
xchg
ret
add
xchg
mov
mov
add
fsts
and
or
je
jge
rorb
and
dec
jne
xor
and
add
mov
and
es
mov
sub
inc
push
adc
popf
test
push
add
add
fsts
lea
cwtl
lea
add
push
sub
inc
jmp
es
mov
sbb
or
inc
pop
aaa
aam
sbb
aas
out
test
pop
push
cltd
imul
and
pop
mov
enter
inc
out
inc
push
push
add
xor
mov
lret
xlat
or
popa
mov
imul
outsb
ljmp
shrb
cmp
test
outsb
pop
xchg
gs
movsl
xor
mov
mov
imul
mov
pop
adc
add
insl
and
jns
mov
es
mov
jmp
pop
adc
adc
ds
dec
xchg
cs
push
pop
cmp
jns
rolb
dec
or
dec
out
or
leave
xchg
push
addb
jne
sahf
pop
pop
xchg
popf
push
js
sub
lock
add
push
loope
push
icebp
mov
in
dec
dec
add
pop
iret
adc
lret
gs
iret
fisubrs
sbb
mov
jns
inc
add
test
mov
mov
mov
xchg
add
aas
nop
out
add
mov
scas
push
jne
rclb
or
and
xchg
in
push
xor
iret
popl
ret
inc
pop
jecxz
test
mov
lahf
pop
xchg
push
movsb
adc
lods
and
push
push
cs
test
jb
loop
out
push
and
les
or
je
adcl
push
xor
enter
dec
pop
sub
sub
inc
or
pusha
and
push
cmp
add
inc
pop
enter
cmp
jecxz
loop
inc
jns
inc
add
mov
orl
nop
or
push
mov
adc
pop
push
insb
jmp
add
movb
xchg
pusha
lock
add
mov
pop
sub
add
sub
test
push
mov
test
enter
push
das
xlat
xor
push
jo
mov
sub
xchg
sbb
addb
inc
push
inc
or
xorl
xor
stc
test
loop
sub
add
push
push
xorb
cli
mov
pop
shlb
flds
test
mov
mov
call
es
push
sub
xor
jb
ret
xchg
and
insl
mov
inc
cs
xchg
andl
adc
pop
fstl
pop
xchg
fadds
mov
add
sbb
mov
aam
add
or
sti
and
jge
mov
add
mov
mov
rorl
andl
lcall
mov
stos
dec
loope
roll
sub
sbb
or
or
rorb
mov
xor
mov
xchg
mov
pop
addl
cmp
push
lahf
cli
jne
sub
and
mov
mov
mov
in
xchg
xor
lods
mov
jns
bound
push
push
lret
lods
inc
inc
sub
out
or
movsb
lcall
popa
orl
inc
aaa
mov
push
lcall
je
xchg
jo
cmpsb
push
stos
sarl
mov
aam
cmp
mov
repz
inc
aaa
dec
pop
sbb
fnstenv
inc
jno
sti
xor
xor
les
adc
sbb
negl
cs
gs
and
and
es
es
dec
jge
inc
mov
inc
mov
mov
arpl
adc
mov
push
dec
cmp
add
adcl
add
sbb
mov
jg
xchg
or
dec
and
add
sbb
ds
leave
add
add
mov
pop
and
inc
mov
mov
icebp
push
sbb
imul
lcall
and
jne
or
and
xor
orb
push
inc
push
or
test
clc
jmp
pop
int
inc
pop
int
push
adc
test
push
push
sub
movsl
pop
in
adc
in
ja
bound
adc
inc
bound
xchg
dec
add
test
inc
xor
lods
inc
sbb
push
es
and
cmpsl
xor
dec
and
mov
dec
mov
pop
sbbl
loop
inc
pop
or
das
dec
push
ret
leave
push
ret
loopne
add
pop
jno
xchg
lods
or
sarl
shlb
ror
or
in
mov
and
bound
mov
mov
or
xchg
push
xchg
push
jecxz
inc
and
bound
dec
or
push
mov
pop
and
stos
and
lea
leave
popl
sub
pop
or
stos
iret
lds
aam
nop
inc
xchg
or
or
mov
inc
jns
xor
sub
adc
mov
adc
xchg
sub
in
idivl
repnz
ret
adc
sarb
ret
sub
rorb
inc
adc
sbb
fiaddl
sbb
pop
inc
test
adc
mov
inc
adc
pop
xchg
jge
bound
jb
iret
leave
cmp
lret
sub
or
out
inc
jmp
dec
inc
pushf
in
sbb
inc
and
fdivrs
insl
or
add
sbb
jns
test
jne
decb
dec
fildl
add
dec
add
xor
les
inc
dec
rclb
lods
inc
repnz
icebp
shrb
add
pop
add
sbbb
and
push
rolb
cmpsl
stos
inc
xchg
bound
frstor
test
add
fstp
mov
and
insb
pusha
int
mov
shll
pop
adc
mov
das
test
imul
mov
insl
icebp
lcall
loopne
insl
inc
sbb
sarl
je
dec
and
pop
push
or
push
push
mov
cwtl
cmpsb
sub
xchg
outsl
rolb
jmp
adc
in
pusha
xor
imul
sub
or
dec
mov
fidivl
mov
test
out
mov
inc
and
or
adcl
xchg
shlb
aad
popa
jle
add
sti
mov
xor
jl
xor
adc
adc
sub
das
sub
dec
or
je
adc
ss
shrb
xchg
push
mov
push
and
pop
push
jecxz
inc
sbb
adc
adc
test
pop
shrb
jge
mov
icebp
cwtl
arpl
mov
dec
rclb
repz
mov
adc
jge
scas
sbb
mov
pop
xor
push
icebp
mov
mov
push
inc
sahf
ss
mov
int
inc
sbb
popf
and
xchg
dec
xor
add
sub
popa
add
rcll
test
test
add
ja
add
pusha
or
or
ret
pop
or
adc
mov
int
es
ljmp
sbb
push
xor
inc
loopne
andl
xor
imul
inc
movups
add
xor
sbb
cmpsl
movsb
jne
push
lods
stos
or
adc
mov
sbb
mov
test
movsb
mov
gs
shrl
mov
mov
xor
jnp
int
push
inc
inc
xchg
inc
sbb
xchg
jno
pop
cmc
adc
loopne
push
ret
sti
and
xor
xchg
jmp
xchg
out
or
or
arpl
lret
and
lods
sub
jno
pop
aad
or
in
pop
cltd
fcmovb
and
testb
pop
push
push
or
cmpsb
shrb
pop
movb
push
or
sbb
mov
sbbb
insb
or
inc
pop
inc
push
test
bound
xor
sbb
divl
addb
cmp
std
and
dec
mov
mov
flds
ret
sbb
fld
rcr
xchg
mov
sub
fwait
das
shlb
jecxz
xor
and
fcmovbe
lea
arpl
add
push
sbb
or
fldl
mov
push
sub
arpl
xchg
cmpb
sbb
or
mov
sbb
popf
fmull
sbb
inc
mov
addb
adc
add
incl
cmp
jne
xchg
pusha
add
push
xor
add
aam
and
push
jo
int
push
adc
daa
testb
add
add
dec
jno
dec
or
das
pusha
lahf
dec
test
adc
xchg
jo
add
int
add
xchg
xor
sub
flds
push
and
daa
lods
pop
push
and
push
and
inc
leave
add
sbb
aaa
push
in
fldl
cltd
dec
test
cwtl
inc
push
cmpsb
add
lea
movsb
xchg
xchg
or
add
push
xchg
adc
dec
test
mov
add
mov
adc
push
cmp
and
push
xor
popa
add
push
daa
mov
add
mov
adc
and
or
jae
sub
or
inc
jne
xchg
insl
loop
add
mov
ja
or
sbb
daa
push
dec
inc
dec
jmp
cmpsb
and
mov
push
sub
push
push
pop
sub
sbb
shll
mov
sbb
push
movsl
sub
sub
inc
adc
dec
imul
out
jne
pop
add
imul
cmp
adc
test
jl
aas
addb
nop
or
fwait
cwtl
rol
in
call
xlat
mov
rolb
pushf
daa
mov
dec
pop
sarl
cltd
dec
nop
daa
ds
or
aam
mov
popf
dec
inc
gs
clts
nop
inc
fadd
push
rolb
addr16
mov
int3
push
jne
inc
or
jbe
fbstp
push
lret
rolb
dec
shll
cmp
and
inc
and
or
jp
inc
mov
popa
movsl
cmp
sub
push
test
sub
push
inc
xor
add
aam
add
imul
sub
scas
add
mov
repnz
and
adc
adc
and
mov
loopne
adc
push
loopne
and
lahf
repz
bound
fstpl
push
lods
jg
popa
cs
xlat
rolb
mov
jbe
cwtl
xchg
imul
jmp
sub
and
sbb
push
sub
mov
pop
rol
and
jo
loopne
inc
dec
add
xor
add
ss
xchg
test
mov
sub
dec
mov
scas
adcb
leave
add
jp
xchg
cmp
mov
shlb
add
cmp
movsl
xchg
lret
add
cs
pusha
nop
or
dec
or
jl
mov
inc
and
aam
sub
or
or
shll
mov
xchg
scas
sub
mov
gs
adc
not
inc
pop
add
lds
cmp
push
add
add
xchg
inc
xor
mov
mov
adc
test
jns
mov
or
gs
jb
add
add
dec
mov
test
nop
add
jno
cmp
in
dec
sbb
pop
adc
and
mov
enter
rolb
jle
push
mov
fwait
sub
pop
jno
mov
add
cld
mov
dec
mov
mov
xchg
add
lods
pop
pushf
or
cmp
pop
pop
mov
jnp
int3
jno
push
repz
mov
mov
add
loopne
cltd
inc
mov
mov
sbb
call
dec
adc
adc
stos
or
or
mov
bound
mov
or
enter
mov
insl
rcl
movsl
andps
shlb
xlat
lret
ss
push
or
mov
xorb
xchg
imul
mov
push
cltd
addb
dec
dec
adc
add
in
cmpsl
das
nop
pop
xchg
cmp
out
je
xor
roll
mov
cmp
adc
add
orl
and
lods
movsl
aaa
sbb
xchg
es
adc
mov
lcall
and
popa
or
mov
ljmp
sub
sub
pop
in
add
or
pusha
sbbb
jae
inc
sbb
add
push
inc
jmp
rol
inc
test
imul
inc
push
std
rdpmc
inc
jmp
fsts
push
sbb
sbb
adc
sbb
mov
pop
xchg
mov
sub
xchg
xchg
push
sbb
test
inc
sbb
add
outsl
inc
int
test
test
aam
or
stos
enter
in
movsb
mov
lea
mov
mov
les
sbb
cmp
push
add
xor
dec
aam
shll
inc
add
pop
inc
loope
mov
out
push
rolb
mov
or
or
adc
jno
stc
cmc
pop
inc
inc
test
jno
xor
popa
sbb
xchg
sbb
inc
dec
loopne
inc
ja
imul
inc
or
push
out
jmp
stos
sub
jmp
add
inc
mov
scas
sti
mov
push
xor
jl
push
push
ljmp
movb
leave
jmp
pop
push
push
and
out
sub
insl
lea
push
test
pop
and
and
and
inc
push
rol
inc
imul
add
push
adc
pop
inc
dec
enter
adc
xor
pop
ret
stos
inc
shlb
xor
int
inc
and
jecxz
adc
daa
dec
outsl
sbb
aam
dec
insl
sub
dec
xorl
jns
loope
dec
mov
cmp
js
add
dec
or
rolb
sub
jno
xor
sbb
sbb
bound
xor
add
mov
data16
outsl
lea
and
push
mov
add
jno
rolb
xchg
cmp
shl
loop
cmp
and
andl
mov
mov
xchg
inc
cs
es
cwtl
dec
or
cmp
popa
in
pop
or
aam
jge
dec
pusha
add
test
lret
mov
inc
out
push
dec
pop
inc
sub
repz
ja
adc
inc
add
sbb
imul
addl
add
inc
pop
mov
imul
push
push
pop
gs
xor
outsb
mov
mov
data16
adc
aam
es
or
mov
inc
inc
pop
outsb
add
and
add
dec
addr16
shrb
and
dec
cmp
cwtl
mov
xchg
mov
adc
lret
xchg
add
inc
add
or
xor
cmp
adc
push
sub
adc
or
push
sub
sbb
or
daa
leave
xor
pop
and
mov
mov
xor
cmpsb
cmp
xchg
cmp
in
lcall
out
addr16
push
dec
adc
mov
push
lcall
dec
jne
mov
mov
pop
jmp
push
mov
mov
xor
pop
pop
xchg
pop
lods
pop
mov
ffreep
inc
repnz
xorb
adc
sub
or
xchg
push
test
inc
add
inc
adc
dec
cmp
mov
adc
shll
aaa
add
sarb
jnp
cmp
movsl
mov
in
inc
xchg
lcall
inc
lea
push
or
ret
fbstp
push
inc
push
popa
stc
inc
call
movsl
adc
push
mov
test
fwait
gs
or
mov
xchg
or
mov
and
andl
pop
xchg
nop
loope
or
jo
sub
add
stos
add
cltd
ret
les
jns
clc
sbb
push
xchg
pop
cmp
shlb
lcall
inc
add
sbb
mov
in
aam
dec
add
and
mov
cmp
out
sub
jno
sub
dec
inc
adc
push
fs
mov
sti
addr16
adc
push
arpl
les
test
ret
jge
xlat
test
in
push
subl
push
sub
xchg
cmc
adc
sub
jns
lea
jge,pn
inc
push
and
stos
out
sub
mov
loop
mov
xor
xchg
in
out
fwait
sub
adc
sbb
bound
pop
xchg
xlat
mov
or
lods
dec
push
pusha
xchg
aad
push
xor
push
imul
movsb
xor
ljmp
sahf
dec
or
aam
sub
mov
sbb
push
xor
xchg
or
and
inc
xchg
lahf
sbb
ret
pop
push
in
mov
into
mov
inc
shll
ret
inc
jno
pusha
add
and
push
and
push
cmova
inc
xor
mov
xor
mov
push
or
cltd
sarl
es
add
loope
es
stos
adc
frstpm(287
push
xchg
std
outsb
loopne
leave
lea
es
and
ss
and
rolb
test
mov
adcl
ss
add
icebp
daa
inc
xchg
dec
rcrl
ja
fwait
pop
js
pusha
jmp
adc
fldl
and
add
mov
sbb
mov
push
idiv
mov
mov
sub
stc
setbe
lds
jo
jne
adc
mov
add
adc
pop
jne
outsl
add
pop
cmp
xchg
cs
sub
mov
fdivl
push
es
pop
add
aad
and
adc
dec
push
cmp
addb
xchg
sbb
shrb
inc
mov
mov
add
cmp
ljmp
out
fwait
movsb
mov
inc
jg
pop
mov
sbb
or
jge
popf
ret
dec
iret
ja
dec
pop
xor
aad
inc
inc
test
inc
sub
rcr
outsb
or
mov
cwtl
push
bound
mov
data16
bound
or
fwait
ret
inc
mov
or
adc
xor
adc
icebp
adc
pusha
adc
test
and
rorl
adc
sbb
leave
pop
stc
push
xorl
mov
fldl
jo
add
add
roll
sub
shrb
add
iret
sahf
add
add
jmp
push
xchg
sub
push
mov
inc
cmp
mov
sbb
pop
jb
sbb
and
mov
fldt
dec
mov
add
dec
mov
add
lcall
or
inc
and
push
add
movsb
es
xchg
leave
repz
icebp
and
lcall
lods
and
xchg
xchg
lcall
or
popf
fmuls
lret
rclb
mov
push
arpl
push
or
adc
push
xor
jecxz
push
adc
das
jb
outsb
sub
dec
push
and
cwtl
dec
sub
mov
shrl
add
int3
xchg
mov
mov
stos
sub
jno
push
sbb
movsb
add
pop
mov
sub
pop
les
or
stc
outsl
jmp
shrb
xchg
insl
sbb
push
mov
mov
add
inc
xchg
add
aam
out
aas
cs
add
arpl
jo
cmp
pop
cwtl
ljmp
sub
xchg
xor
inc
jnp
ficoml
add
mov
mov
xor
adc
add
insl
inc
mov
add
icebp
aas
adc
lret
lea
pusha
xor
push
iret
loop
and
out
add
cmc
xlat
push
sub
icebp
xlat
jl
and
xorb
je
add
mov
cmpsb
xor
in
dec
add
xor
test
adc
pop
sbbl
push
mov
movsl
dec
orb
and
inc
popa
or
add
pop
and
jmp
pushf
cmpsb
push
pop
stc
xor
add
imul
dec
movsb
push
mov
inc
or
dec
popf
adc
push
pop
or
adc
jne
xor
adc
xor
and
mov
jno
cmp
push
movb
test
mov
or
sbb
fs
pusha
push
sub
aaa
mov
adc
push
jo
repz
pop
sbb
mov
dec
mov
test
imul
rorb
stos
or
mov
jecxz
xor
xchg
add
cmp
scas
inc
pop
in
enter
cmp
and
cwtl
stos
or
rcll
push
mov
and
mov
add
dec
rorb
add
sbb
mov
adc
rclb
rcl
lds
fwait
cmp
arpl
mov
add
xorl
mov
xor
stc
mov
xchg
sbb
adc
shlb
xchg
push
add
in
add
jmp
addb
insl
jge
lcall
test
push
ret
xorl
push
cs
out
and
stc
adc
add
pusha
mov
mov
in
xor
rcrb
incl
or
jmp
pop
adc
add
pop
push
addl
jno
xlat
mov
call
add
push
cmpsb
add
outsl
or
xor
push
lods
and
loopne
mov
or
imul
and
push
pop
movl
or
adc
xchg
sub
lcall
push
xorl
fistps
push
xlat
mov
les
inc
and
test
adc
lahf
leave
push
xor
cmpb
and
push
inc
push
inc
insl
out
aad
or
loope
sbb
gs
and
add
test
add
and
pop
mov
cmpsb
rorl
dec
inc
push
mov
jnp
rclb
mov
jbe
andl
mov
sbb
leave
dec
enter
loope
stos
jbe
adcl
jno
mov
sbb
jb
jae
mov
lret
lret
xor
lahf
mov
dec
aad
cmp
xor
ret
add
xor
in
sbb
int3
addb
adc
shrb
add
test
sub
popa
pop
fildll
pop
and
test
js
adc
icebp
mov
and
xor
add
sbb
je
sahf
in
dec
lret
or
xor
imul
or
inc
xchg
jne
xor
add
mov
mov
dec
jne
dec
and
rclb
add
lret
inc
iret
testb
push
or
inc
call
mov
mov
inc
pop
nop
cmpsl
add
adc
insl
cmp
orb
xchg
xor
pushl
mov
rcrb
xor
jno
pop
or
push
scas
pusha
add
popa
lods
sub
sub
pop
loopne
mov
and
jge
jmp
push
loope
xchg
sub
out
in
push
mov
cmpsl
xchg
sub
rolb
push
ret
sub
in
push
sbb
dec
mov
in
inc
test
or
push
ss
sub
jae
pop
jns
mov
pushf
cmc
push
scas
and
pop
add
jno
dec
lock
ja
cmc
nop
pusha
mov
dec
jecxz
lods
jmp
jecxz
sub
xor
jnp
push
nop
iret
rclb
test
test
flds
push
cwtl
hlt
xor
mov
jns
dec
inc
push
mov
xchg
xchg
cwtl
cmovs
push
cmpsb
sbb
pop
je
adc
aam
add
pusha
and
aas
push
sbb
push
adc
add
push
xchg
xchg
push
loop
push
mov
jecxz
push
or
inc
push
mov
lods
and
gs
orl
add
or
mov
or
cmp
xor
dec
add
imul
in
pop
je
repz
sbb
pop
repnz
mov
repnz
mov
push
add
int
test
loopne
stos
xchg
nop
daa
enter
mov
arpl
cmpsb
enter
inc
dec
mov
int3
roll
pop
xor
sbb
fildl
xchg
sbb
movsb
adc
iret
cmp
xchg
add
shll
loop
mov
das
adcb
dec
mov
dec
cmc
xorl
jae
rcl
xor
push
inc
add
push
add
pop
ss
mov
xchg
adc
cmpsb
test
adc
xchg
dec
inc
xchg
xchg
mull
lcall
les
mov
rolb
push
xor
lea
mov
push
scas
add
or
ss
cmp
inc
add
cmp
aam
sbb
and
sub
push
add
or
mov
and
mov
xchg
and
add
addr16
add
xor
mov
dec
or
cwtl
push
push
test
pop
bnd
clc
cmp
lods
addr16
sbb
inc
sti
sub
inc
lods
xorb
jae
test
xchg
test
push
pop
inc
or
jecxz
sbb
mov
aam
inc
insl
popa
call
dec
and
xchg
jecxz
inc
xchg
gs
mov
or
call
or
lods
movsl
add
xchg
psadbw
fadd
les
inc
sub
dec
or
mov
or
mov
cmp
pop
jle
rorb
xlat
mov
add
xchg
ret
pop
and
in
sbb
insl
or
aad
dec
and
in
adc
repz
aad
adc
adc
dec
xchg
xor
add
lcall
cmpsb
pop
mov
mov
movsl
lret
adc
outsb
ret
push
add
pop
je
or
mov
dec
cli
shll
pop
dec
pop
clc
stos
rcrb
dec
pop
pop
repz
insb
sub
cld
push
adc
rcl
outsl
mov
loope,pn
negw
sbb
mov
rorl
cltd
mov
sbb
push
mov
mov
dec
push
and
xchg
cmp
and
inc
push
sub
shlb
nop
inc
in
and
mov
bound
jle
outsl
dec
or
cmpsb
jo
cmp
mov
lods
dec
fs
xchg
dec
xor
xor
inc
out
xchg
stos
aaa
inc
adc
bound
mov
leave
adc
mov
pop
add
push
outsb
push
aaa
es
add
ret
andb
adc
fisubl
dec
or
jno
add
iret
mov
jne
in
popf
movsb
scas
xor
mov
mov
push
or
adc
cmpsb
mov
mov
addb
add
mov
roll
add
sbb
sbb
jo
jmp
sub
stos
inc
cmpsb
cmc
sub
mov
and
inc
out
sub
ljmp
bound
or
add
pop
js
cmp
pop
cmp
rol
add
es
les
sbb
push
imul
xchg
out
mov
push
inc
fs
inc
xor
inc
adc
xorl
mov
movsb
test
lret
dec
push
xor
cmpsl
sub
fwait
add
add
sti
add
cwtl
xor
sub
fnstcw
test
jns
cs
or
push
sub
sbbb
push
fs
xor
inc
popl
shlb
xchg
pop
jo
lods
stc
stos
push
sub
sub
loopne
rcll
mov
cmp
push
sbb
or
fildll
adc
shr
or
inc
cmp
les
cmp
mov
pop
or
or
movsb
insb
add
dec
push
inc
mov
or
or
or
popa
add
push
sub
push
adc
shlb
adc
testb
lods
stos
and
loopne
enter
movsl
popa
pop
and
inc
push
xor
out
scas
mov
insb
imul
movsl
add
pop
add
sbb
and
mov
mov
inc
fwait
add
lds
cmp
pop
sbb
jno
clc
cmpsb
add
xchg
addr16
pop
push
sbb
jo
push
xor
bound
xor
xorl
loop
cs
in
cmp
adc
dec
ret
xor
loopne
scas
lret
xor
xchg
cmp
nop
test
xor
ret
and
std
or
mov
xor
cmp
sbb
add
test
add
pop
mov
cmp
pushf
xchg
mov
insl
sub
dec
pop
ds
std
push
dec
adc
inc
or
dec
sti
inc
dec
les
and
pusha
sbb
inc
sub
dec
sbb
and
mov
fstps
cmpl
xchg
mov
jno
pop
push
in
ljmp
sub
lds
pop
pop
push
out
lea
std
jmp
cmp
push
mov
inc
or
or
into
cmp
xchg
das
pop
sbb
add
jno
xorl
mov
and
mov
lcall
adc
cmp
sub
mov
inc
add
dec
mov
add
test
mov
nop
jo
loop
mov
cmpsb
pusha
gs
outsl
adc
imul
xor
xor
sub
dec
push
call
call
and
push
sbb
ret
add
ljmp
andl
pop
jnp
fld
pop
push
and
inc
xor
imul
adc
cmp
and
or
pop
iret
nop
dec
push
mov
nop
lcall
lods
mov
sbb
sarb
sbb
lds
mov
adc
movsb
add
sbbb
mov
xchg
and
xchg
cmpsl
pop
add
dec
or
or
test
dec
je
movsl
test
sub
push
cwtl
lods
fisttpll
cmpsb
cmc
push
jne
mov
shrl
fidivs
and
orb
gs
add
push
fwait
ss
loopne
fwait
push
or
lcall
sbb
xchg
fiadds
inc
cwtl
mov
adcl
fsub
mov
int3
addb
or
dec
cs
and
add
loopne
sub
pop
cmp
arpl
xor
push
and
or
or
adc
mov
fnstenv
xor
mov
mov
test
push
mov
dec
sub
and
inc
aas
push
popf
int
pop
enter
fisttps
mov
xor
adc
jae
add
orb
xor
add
or
lahf
add
cmp
add
shlb
inc
and
push
mov
or
sbb
xchg
enter
lods
push
pop
pop
adc
add
stos
mov
dec
pop
rolb
mov
pop
xchg
jle
xor
adc
push
and
adc
adc
xor
and
adc
or
mov
jmp
bound
adc
outsb
aaa
orl
push
xor
push
cmc
push
lea
or
jne
movb
xor
pop
sbb
shlb
jno
or
pop
inc
jnp
fldenv
xorl
enter
daa
or
mov
sub
add
insl
test
or
cmp
shrb
mov
adc
popa
jo
test
sub
or
add
nop
mov
inc
cwtl
add
cmpl
mov
push
repnz
push
cwtl
add
shrb
sahf
stos
test
xorb
push
push
fwait
or
stos
adc
mov
inc
and
les
add
js
add
shlb
cld
insl
push
or
adc
push
xchg
and
popa
shl
pop
pop
adc
jns
inc
dec
adc
xchg
loopne
bound
les
mov
mov
and
aad
and
movb
add
pop
add
or
les
aaa
jmp
call
jg
and
subb
inc
cmc
mov
xor
imul
test
fwait
adc
sub
add
rolb
add
xor
inc
xchg
push
roll
addr16
and
dec
sbb
inc
roll
and
add
addl
sbb
push
inc
and
or
cmp
out
push
and
test
je
daa
insb
movsl
rorb
rolb
imul
shlb
add
leave
out
sub
jns
add
dec
mov
rclb
add
adc
sbb
push
mov
aam
test
imul
scas
cs
arpl
nop
out
imul
jnp
jns
mov
add
pop
xchg
mov
or
push
mov
or
cwtl
push
test
mov
je
sub
cmp
movb
dec
or
je
mov
test
mov
jecxz
pop
inc
adc
and
mov
loop
hlt
mov
mov
in
cmp
out
dec
pop
dec
mov
fistl
shlb
xchg
roll
xchg
je
bound
andl
mov
ret
aad
rclb
sarl
movsl
cmp
mov
adc
mov
inc
sbb
inc
or
cmp
push
test
jb
mov
rolb
aad
lds
push
xor
stos
and
mov
jno
push
push
sbb
push
cmp
mov
in
mov
push
filds
cltd
and
lods
push
mov
cmp
in
mov
push
test
fistl
push
stc
les
test
inc
orl
pop
jns
add
push
fldt
stos
jae
cmp
xor
and
sub
cmp
dec
inc
adc
add
mov
and
pop
js
or
fldt
or
outsl
or
and
lahf
in
or
dec
shrb
dec
rcrb
and
sbb
sbb
sbb
jae
dec
sbb
jns
leave
sbb
inc
jo
jno
xchg
test
xor
cmp
ret
jno
rorb
imul
shl
sbb
nop
inc
sti
push
or
jnp
jno
jo
or
push
mov
adc
xchg
lret
add
int
sub
adc
test
data16
repz
add
test
es
scas
cmpl
pop
pop
int
lods
jecxz
or
lea
add
mov
push
lea
lea
test
add
add
push
popl
mov
sub
sub
subl
xchg
cs
lret
sbb
ja
or
jo
mov
add
js
nop
das
inc
add
mov
pop
jnp
cmp
xor
cmp
ss
test
push
jno
nop
test
sbb
xor
xor
adc
dec
xchg
push
lret
fists
cmp
add
sub
pop
outsb
mov
pusha
call
pop
sbb
and
sub
or
cwtl
push
mov
mov
loopne
push
gs
adc
add
inc
push
mov
repz
arpl
lcall
inc
pop
dec
popf
lds
int3
cmp
jns
adcb
rcll
mov
mov
adc
dec
push
push
lods
inc
pop
or
adc
and
inc
jp
ret
pop
daa
fdivrs
fisubrl
or
sbb
loope
js
or
sbb
ds
sub
or
adc
mov
roll
in
xor
or
mov
mov
add
pusha
aam
mov
lds
mov
aam
add
add
add
push
mov
setno
mov
fwait
cwtl
orb
imul
sahf
test
sub
adc
or
or
jge
mov
inc
loopne
sahf
int
push
pop
adc
push
or
ja
insl
out
xchg
and
push
push
cmpsl
and
add
sub
ja
add
bound
push
and
or
pushl
fs
cmp
popa
lcall
das
mov
jp
xchg
or
dec
adc
push
push
mov
add
and
push
inc
xchg
jne
popa
sbb
push
jmp
push
andb
cmp
popf
jp
adc
ss
dec
in
and
insl
pop
sub
inc
leave
push
dec
add
and
ret
xchg
xlat
mov
ficompl
and
les
int3
clc
add
dec
pop
test
int
scas
stos
addr16
or
adc
rolb
add
xor
ja
mov
jmp
unpckhps
aam
fistl
dec
gs
ds
and
or
xchg
xchg
push
push
shlb
sbbl
xor
outsb
rcrl
jle
adc
mov
mov
aaa
pop
xchg
addr16
push
inc
sahf
dec
cwtl
sub
xor
inc
je,pn
pop
cld
leave
icebp
and
sbb
nop
push
cwtl
mov
adc
xchg
test
inc
jne,pn
cmp
push
push
rorb
ret
push
xchg
movsl
add
jns
mov
inc
sahf
movsl
jb
dec
movsl
fidivrl
mov
adc
shrb
mov
in
les
push
rcl
leave
lods
xor
clc
and
push
stc
push
lret
inc
xor
dec
imul
adc
andb
fnstsw
and
stos
mov
or
cwtl
push
repz
sub
xor
sbb
loope
fadds
mov
popa
xchg
xchg
inc
sbbb
jno
leave
pop
and
inc
push
sub
js
jb
add
mov
popf
add
mov
push
mov
adc
fs
rolb
or
je
xchg
xchg
push
dec
xchg
sub
jbe
sub
and
mov
fldt
movb
inc
test
in
jge
pop
nop
out
adc
add
scas
or
inc
dec
adc
cmpsl
push
mov
inc
adc
push
adcb
les
loope
stos
inc
mov
push
dec
add
cmp
fs
jl
push
nop
popa
popf
add
orb
andb
inc
jno
bswap
sarb
xchg
adc
aad
adc
mov
int
inc
xchg
mov
xchg
mov
leave
rolb
adcb
fadd
push
mov
add
and
xor
sub
pop
add
movsl
mov
or
push
xchg
imul
imul
push
popf
daa
jmp
dec
inc
dec
aad
xchg
or
pop
push
jno
mov
add
pop
outsl
and
pop
inc
lods
test
mov
and
push
sub
imul
inc
or
mov
dec
fcompl
and
cs
bound
cmpsb
add
daa
fldenv
dec
push
mov
inc
mov
inc
add
insl
rcll
push
dec
adc
dec
mov
inc
lcall
sbb
mov
loopne
add
pushf
xchg
sub
push
push
repnz
stc
inc
pushf
mov
dec
adc
jl
mov
push
shrb
mov
or
rorb
ret
jno
add
adc
mov
xor
xchg
add
push
pop
push
adc
sti
mov
add
xor
jb
stos
inc
sarb
jg
add
and
jmp
inc
sub
mov
xchg
mov
stos
push
mov
cmpl
cmp
ja
pop
dec
dec
xor
jo
shll
sti
loopne
inc
adc
inc
jge
xlat
addl
mov
pop
adc
cwtl
mov
mov
jecxz
clc
sbb
add
jo
and
repz
pop
push
movsl
push
xor
stos
sbb
cmpsb
mov
push
sbb
leave
mov
iret
cmp
push
fildl
mov
add
int
in
mov
sbb
mov
test
and
inc
dec
cmp
jns
mov
test
push
xorb
or
jmp
cmp
jmp
push
or
xor
sub
xor
mov
and
adc
xchg
add
push
xchg
sahf
mov
jno
dec
rcll
movsb
cmp
jmp
iret
adc
mov
movsb
push
xchg
sahf
fiaddl
imul
popf
sbb
jmp
popa
or
test
add
push
xchg
and
mov
and
and
es
orl
dec
rorb
add
jae
mov
lret
dec
push
add
mov
adcl
inc
sub
clc
hlt
test
cmpsl
cmp
sarl
and
jecxz
andb
xchg
xchg
loope
adc
push
mov
test
test
dec
xor
add
add
mov
dec
iret
adc
xchg
xor
jmp
pop
push
das
aad
pushf
ss
push
lahf
adc
push
xchg
inc
pop
xor
xchg
test
ja
mov
sub
lret
push
fstpl
jg
test
add
pop
mov
test
inc
test
mov
jl
rclb
push
mov
pop
xlat
sub
or
out
mov
push
in
inc
mov
adc
add
test
push
or
arpl
insb
lcall
inc
add
clc
mov
xchg
insb
arpl
sub
ret
mov
inc
pop
mov
das
push
or
mov
and
dec
sahf
fs
or
mov
dec
push
sbbb
xor
or
inc
xor
sbb
adc
and
addb
test
cli
cmp
cwtl
test
fwait
sahf
out
add
or
lea
push
mov
test
push
imul
add
add
stos
mov
movsb
inc
lcall
adc
xor
ret
jnp
xchg
add
scas
adc
pop
jno
adc
xchg
rorl
dec
mov
xor
fcoms
mov
sub
test
dec
mov
int3
insl
test
sub
divl
inc
test
sbb
ret
jb
lods
push
cs
push
jp
add
adc
notl
and
add
inc
inc
push
lods
jp
or
cmp
xchg
inc
inc
xor
jns
mov
inc
ret
xchg
sub
or
test
mov
sub
cmp
pusha
rolb
jle
mov
xlat
sub
jnp
mov
push
mov
dec
add
arpl
sub
jo
adc
rolb
and
lea
add
scas
dec
pop
adc
xor
push
sbb
dec
adc
out
mov
rorb
lea
and
push
push
push
ja
pop
add
add
xor
xor
jne
xchg
cmc
movsb
mov
in
sbb
dec
in
xor
push
lods
mov
loope
pusha
adc
mov
inc
movsl
inc
sub
mov
jb
sbb
push
test
ljmp
sub
add
sbb
add
outsl
mov
xorl
pop
aaa
add
sub
rclb
cmpsl
loopne
lods
stos
sete
in
adc
fs
mov
jmp
rolb
push
pop
mov
lock
mov
mov
aad
test
xchg
adc
xor
xor
outsl
push
sub
xchg
mov
adcl
mov
ja
and
sarb
dec
mov
fstl
sbb
and
jecxz
dec
mov
gs
sahf
cwtl
cmp
push
inc
mov
scas
jmp
fcom
inc
pop
sub
test
stos
mov
lret
mov
inc
test
andl
add
cmp
xchg
mov
pop
les
jecxz
inc
sbb
arpl
push
and
adcb
shlb
aaa
cmpsl
or
adc
pop
nop
xor
inc
shl
les
add
insb
and
add
insl
mov
jne
stos
cmp
xchg
jl
lahf
insl
cmpsl
dec
sub
add
shlb
adc
lods
test
xor
and
push
and
inc
mov
fisttps
and
pop
repnz
dec
add
loopne
movsb
xchg
cmpsl
mov
push
stos
inc
xchg
mov
pop
and
mov
jl
or
cmpb
push
add
int
jmp
out
xlat
je
xor
add
lcall
push
or
xor
cmp
movsl
and
or
pop
mov
xchg
sub
jbe
xchg
add
imul
push
cltd
cmpsb
jmp
stos
stc
pop
test
lock
mov
rol
xor
mov
pop
xor
or
aad
sub
add
jne
inc
fdivs
or
sub
aas
insl
hlt
pop
add
or
jmp
bound
add
and
fcoml
test
js
mov
cmp
popf
setbe
push
inc
movsl
inc
or
loopne
dec
dec
fwait
sbb
aaa
mov
xor
push
push
addl
je
iret
add
out
inc
addb
adc
cltd
in
aad
aaa
pop
pop
pop
pop
push
jno
xchg
cmp
addb
leave
mov
rorb
add
negb
rorb
pop
pop
jecxz
js
xchg
sub
out
movsb
add
pushf
and
lret
or
jle
sbb
sbb
push
lahf
or
add
iret
add
sbb
iret
scas
pop
and
pop
sbb
rcrl
iret
inc
inc
pop
jno
add
mov
rol
repz
and
and
testl
pop
pop
mov
mov
add
dec
xorl
lods
pop
pushf
mov
xor
dec
in
xor
icebp
les
sbb
adc
sbb
sbb
sub
mov
rep
addl
sbb
fwait
ret
subb
aas
nop
addr16
lcall
push
fcmovnb
cmp
xchg
aad
lds
sbbb
add
cmpsb
sub
out
jmp
outsb
xor
aas
test
mov
movsl
add
pop
rolb
xor
sub
or
mov
lret
push
fs
add
mov
shlb
pop
inc
mov
lcall
inc
cmp
xchg
aam
sbb
or
and
mov
jo
adc
xlat
sub
fwait
inc
mov
test
es
into
sbb
shr
mov
adc
insl
inc
arpl
enter
jae
int3
mov
sub
add
xor
rorl
push
xchg
push
pop
dec
mov
add
pop
dec
add
jno
push
sub
popa
mov
cmp
sub
lods
mov
or
or
xchg
jo
or
or
push
inc
mov
subl
mov
sub
dec
push
mov
or
push
push
test
cmc
sbb
inc
or
lcall
je
mov
inc
lahf
or
andl
inc
movsl
mov
sub
cmp
pop
xchg
mov
call
cmp
mov
mov
add
add
cmp
add
movsl
mov
or
dec
inc
sbb
imul
xor
add
into
add
sbb
loopne
inc
movsb
aam
and
shr
dec
outsb
sbbb
in
sbb
jo
pusha
mov
push
sbb
sub
xchg
popa
sbb
push
cmpsl
or
jne
sbb
rolb
ret
cwtl
aad
nop
out
orl
add
mov
and
xchg
roll
pop
pop
sub
inc
sbb
test
orl
mov
jno
addr16
push
les
mov
sbb
mov
scas
addb
inc
clc
aad
mov
es
stc
or
adc
jmp
cmpsb
ja
push
add
hlt
mov
dec
jge
add
ja
push
and
inc
jl
popf
push
adc
sahf
adc
push
xor
mov
push
adc
cmp
and
jo
cmp
rcrb
push
cmp
or
mov
and
shll
mov
dec
adc
jmp
inc
cs
test
pop
jno
xchg
inc
sbb
leave
rcrl
shrl
lods
mov
adc
inc
mov
push
push
mov
xchg
cmpsl
pop
or
flds
add
pusha
adc
pop
jns
inc
sub
jmp
xor
pusha
cmp
jmp
push
mov
dec
imul
out
push
inc
and
out
fwait
mov
sbb
push
movsl
leave
pop
int
and
int
adc
or
cmp
lea
addl
jp
inc
ljmp
jne
adc
dec
lahf
inc
cmp
daa
imul
adc
inc
rolb
mov
les
addb
push
adc
lret
add
pop
sbbb
add
push
pop
ss
inc
mov
or
cs
in
or
sbb
push
loopne
jns
cmp
addb
loope
adc
cmp
xor
pop
dec
ja
or
cmp
dec
test
pop
popf
les
add
ret
addb
adc
push
adc
stos
lret
add
loope
lcall
add
mov
and
sbb
pop
push
fnstenv
mov
jns
push
sub
fldenv
add
xchg
sahf
and
xlat
push
or
and
cmp
adc
and
rcll
insl
loopne
cmp
sub
aaa
shll
push
and
mov
push
dec
and
mov
daa
shlb
sbb
fsub
lds
shll
pop
xchg
loop
mov
pop
or
cmpsb
or
cld
push
and
xor
mov
ss
add
ficoms
sbb
push
daa
gs
cltd
mov
push
bound
rclb
sub
or
cmpsb
sub
or
imul
shl
xor
stos
out
bnd
mov
lcall
pop
sahf
lcall
sub
shrb
add
mov
push
cmp
outsb
leave
test
mov
inc
test
xchg
sub
int3
adc
jg
shrl
movsb
addr16
popa
test
xor
push
enter
arpl
mov
test
inc
inc
iret
pop
stos
adc
add
inc
orb
dec
inc
mov
test
andb
sub
jno
aaa
or
rolb
mov
push
cwtl
pusha
nop
adc
cs
adc
adc
movsl
xor
inc
push
push
flds
in
lcall
add
and
mov
jmp
inc
cmp
pop
adc
test
lea
pop
adc
jae
push
adc
pop
fcmovnbe
rcr
dec
adc
adc
add
lock
outsl
add
repz
add
cmc
pop
add
or
mov
gs
and
add
push
mov
loopne
call
rclb
imul
push
movsl
add
roll
sub
test
sahf
in
inc
mov
mov
add
sbb
sub
inc
push
and
inc
mov
pusha
jne
xor
movsb
dec
sbbl
clc
cmp
gs
bound
iret
xor
out
or
xchg
pop
adc
inc
xchg
jg
mov
fistl
and
cmp
inc
sbb
cmc
stos
and
jmp
lret
or
nop
add
adc
push
sbb
imul
and
add
outsb
xor
leave
pop
or
xchg
xchg
je
cwtl
and
push
pop
aas
dec
sbb
or
adcl
xchg
cwtl
stos
adc
jnp
test
pushf
adc
rolb
daa
repz
add
cmp
push
subb
rorb
ljmp
pop
xchg
scas
push
test
cmp
or
repnz
and
xchg
loopne
jne
fnstsw
shrl
mov
rolb
sti
sub
push
sub
adcl
add
lea
repnz
push
pop
in
std
add
iret
and
xor
xor
fdivrs
sbb
imul
pusha
dec
mov
lock
dec
or
inc
push
and
sbb
push
adc
sub
add
inc
or
push
je
sub
adc
cmp
dec
and
or
adc
push
sbb
scas
stc
shlb
insl
cwtl
je
int
or
xchg
push
leave
int
add
or
sub
mov
popaw
je
sbb
dec
sbb
es
lds
in
or
lret
das
mov
add
cmp
sub
addl
sbb
ja
jp
dec
cmpsb
inc
subb
fwait
xorb
int
sub
test
lods
fs
nop
stos
add
xor
mov
mov
and
xor
add
enter
add
xchg
add
push
sub
ljmp
inc
scas
jo
stos
outsb
jb
test
sub
test
pop
mov
ja
sarb
fwait
jns
xchg
nop
rolb
sbb
sahf
addr16
xor
add
fisttpl
rcrb
loopne
frstor
push
test
rolb
aaa
daa
push
mov
or
xor
mov
dec
add
cs
add
adc
mov
cmpl
add
xchg
pusha
add
mov
sbb
add
push
add
mov
enter
mov
pop
popa
and
or
pusha
imul
and
mov
shrl
pop
imul
fwait
mov
sbb
imul
icebp
push
xorl
and
pushf
add
xchg
out
jmp
add
push
sahf
cmp
sub
aas
outsl
leave
mov
or
pop
add
roll
or
in
add
jno
cli
push
and
rcrb
test
test
or
jns
sub
or
inc
jecxz
adc
in
inc
sbb
and
insl
sub
adc
push
ret
cmpsb
mov
shlb
dec
mov
inc
test
mov
xor
mov
adc
xor
dec
iret
xchg
aad
add
inc
sbb
pop
inc
mov
mov
fsub
xchg
pop
sbb
movsb
mov
add
push
cmp
sbb
rcr
mov
pop
scas
rcrb
dec
pop
call
cmp
mov
or
dec
mov
stc
pop
movl
shrb
push
jb
dec
cltd
mov
inc
xchg
xor
jbe
inc
out
dec
sbb
outsb
or
mov
inc
or
jmp
push
xor
inc
iret
inc
and
cmp
sbb
push
add
xorl
loope
lretw
xchg
rclb
in
data16
in
push
aam
loope
mov
cwtl
adc
inc
add
rolb
stc
sub
dec
cmp
std
push
cli
stos
je
dec
orl
sbb
dec
roll
and
push
fisttpll
jmp
loopne
mov
int3
adc
adc
push
test
jbe
stos
push
es
sbb
insl
loope
or
stos
repz
and
push
xchg
cmpsb
stos
test
inc
mov
int
in
push
fimuls
mov
jnp
test
push
and
outsl
jmp
or
dec
and
add
adc
clc
push
insl
and
xor
xchg
sbb
xchg
xchg
dec
loop
xor
or
or
push
je
lods
jecxz
sbb
cmp
movhps
in
sbbb
jno
popf
aam
and
sbb
xor
movsl
mov
jno
fwait
dec
mov
jge
jnp
xchg
sub
arpl
test
rcrl
dec
stos
popa
mov
and
popa
roll
and
or
pop
ljmp
dec
add
mov
sbb
adc
xorb
inc
iret
inc
nop
cli
mov
repz
es
add
add
filds
adc
nop
into
movsl
push
lret
or
sbb
or
in
adc
and
int
fdivl
daa
in
sub
int
outsl
or
call
cmp
xchg
adc
dec
lods
pop
and
mov
addl
int
push
xchg
call
or
sbbb
sub
or
iret
mov
or
inc
sub
jg
inc
enter
pop
sbb
dec
inc
pop
jne
rolb
test
sbb
jp
mov
into
inc
mov
and
clc
push
adc
xchg
pusha
add
stos
or
sub
inc
shlb
cmp
pop
clc
xchg
test
or
pop
sbb
mov
in
pusha
pop
inc
cs
xor
add
inc
and
insl
xor
in
rclb
push
mov
sbb
or
sbb
cmp
rol
or
mov
or
push
nop
sub
fldcw
cmp
and
lcall
dec
sub
test
ret
xor
adc
inc
das
push
adc
shlb
xchg
adc
daa
add
dec
or
jecxz
add
aam
adcb
ss
sbb
jp
mov
jns
jne
mov
lea
dec
nop
dec
addb
push
mov
pusha
das
push
scas
stos
inc
and
add
enter
xchg
xchg
cmp
jae
pop
pusha
addb
jo
xchg
xchg
sub
jns
sub
cmpsl
cmp
cmpsb
insl
sbb
sbb
push
inc
add
xor
nop
lods
fcoms
add
enter
sbb
mov
rclb
movsl
xchg
pop
int3
out
movsb
adc
push
inc
or
mov
int
xor
mov
movsl
pop
push
fwait
in
inc
lcall
push
sbb
cwtl
sbb
out
push
roll
and
sbb
sub
addl
arpl
enter
xchg
jl
cmp
mov
pop
nop
out
pop
mov
inc
mov
pop
cmpsb
xor
sbb
mov
sbbb
int3
mov
inc
or
adc
dec
push
jns
lret
dec
ds
add
add
lea
loopne
test
dec
push
add
cli
push
pop
pop
test
scas
mov
out
mov
bound
mov
or
dec
mov
movsb
mov
and
add
orl
mov
cmpsb
jne
mov
pop
dec
sarl
gs
fwait
lods
inc
stos
xchg
mov
mov
sbb
loopne
push
or
dec
int3
mov
lcall
xor
cmp
outsb
mov
pop
mov
sbb
rclb
inc
cmpsl
mov
xorb
sbb
sub
stc
popl
and
stos
xchg
xor
mov
mov
mov
ret
fisttps
rolb
xchg
cltd
pop
and
add
xor
pop
jnp
xor
roll
js
pop
jne
je
and
or
ret
test
or
addl
lret
adc
mov
add
out
xchg
rclb
xchg
iret
arpl
cmpsl
aad
je
mov
pop
test
inc
sub
jne
cs
and
cmp
loopne
ret
cmpsb
jecxz
pop
mov
test
data16
stc
or
push
fistl
mov
pop
imul
neg
xor
mov
dec
loopne
and
cwtl
jbe
out
sti
and
xchg
pusha
xchg
and
add
inc
cmp
push
popf
push
in
mov
inc
outsl
or
das
nop
push
or
test
add
pusha
mov
adc
lods
sbb
mov
or
xor
adc
repz
pusha
mov
sbb
add
pushf
mov
aam
adc
in
js
nop
lahf
cmp
mov
push
pop
fildl
aad
add
ret
pop
adc
int
add
flds
roll
cmpl
leave
xchg
add
sub
adc
mov
in
cmpsl
mov
rcrb
jmp
and
add
xchg
xchg
add
or
mov
and
jno
cwtl
mov
orb
jp
cmpsb
jne
xchg
add
xchg
lods
iret
std
inc
xchg
mov
sbbb
pop
cwtl
xchg
icebp
xchg
mov
rolb
adc
add
movsl
les
xorl
sub
sub
add
dec
add
adcb
inc
stc
mov
cmp
sbb
test
xchg
mov
lea
stos
dec
xchg
or
aam
inc
orl
insl
gs
xor
adc
and
and
or
or
dec
sub
test
xor
mov
add
int
nop
sahf
ss
cmp
mov
dec
sbb
int
or
dec
pop
pop
xor
xchg
and
inc
sahf
outsl
cmpsl
and
inc
mov
es
sbb
outsb
repz
xlat
and
xchg
xchg
mov
les
insb
and
dec
cmc
add
or
sub
mov
add
xor
scas
leave
jae
jmp
iret
stos
adc
repnz
sub
fsubs
adc
push
xor
sbb
xchg
mov
sub
leave
adc
jo
xchg
add
sbb
test
dec
jg
dec
add
push
aas
sub
sbb
and
pop
mov
add
cmp
add
inc
dec
jno
sbb
push
cmp
ljmp
mov
aad
fimull
sbb
test
jno
mov
stos
sbb
push
push
int
mov
add
orb
push
mov
pop
enter
divl
add
rolb
je
or
or
push
cmp
cmpsl
repz
sbb
mov
andl
addb
nop
fs
aaa
dec
aad
cmp
repz
mov
jno
inc
insl
inc
mov
cmp
sub
inc
push
test
mov
and
pop
sbb
movsl
enter
rclb
adc
imul
and
in
and
test
dec
loop
jno
inc
enter
push
xor
rorb
and
addr16
loopne
fwait
push
push
add
add
lret
addl
adc
dec
and
xor
lods
push
cmpsl
xlat
imul
xchg
mov
icebp
push
inc
shlb
and
pop
jbe
arpl
adcb
dec
xchg
mov
orb
test
inc
sbb
xlat
fldenv
orb
xchg
aas
and
popa
repz
shlw
mov
xorb
pop
jo
push
cmp
xchg
int
push
mov
es
push
push
xor
and
mov
roll
aaa
shll
sub
sarb
pusha
and
mov
fs
pusha
dec
pop
inc
adc
inc
sbb
adc
sub
sub
out
dec
inc
add
adc
aad
adcl
in
adc
sbb
icebp
inc
test
inc
add
loopne
repnz
add
add
xlat
and
aaa
lret
sbb
int3
or
scas
dec
pop
or
and
mov
add
pop
adc
aam
add
adc
xchg
nop
dec
dec
inc
addl
leave
les
pusha
pop
mov
fbld
push
je
xchg
std
mov
scas
mov
or
jne
test
fs
xchg
roll
xchg
xchg
imul
add
add
fcoml
or
dec
adc
addl
das
and
adc
xchg
adc
xchg
fwait
loop
icebp
push
popa
clc
mov
ror
daa
les
push
add
sbb
cmp
jno
cmp
cmp
jno
push
adc
mov
jl
addr16
add
xlat
xor
xlat
jge
sub
cmc
shl
dec
or
cli
xor
arpl
out
adc
add
or
adc
leave
mov
push
jle
dec
pusha
andb
imul
adc
les
lds
xchg
push
sbb
add
and
sub
cmp
iret
repnz
das
aaa
add
cs
or
imul
pop
adc
jp
push
mov
rolb
xchg
dec
shll
mov
int
rolb
xchg
inc
sbb
dec
movsl
movb
add
and
shlb
mov
push
sub
push
sub
sbb
rolb
push
lret
and
ss
adc
nop
cwtl
mov
xor
test
outsb
rorb
les
inc
cs
rorl
imul
xchg
cmpsb
and
mov
xor
mov
xor
nop
dec
ret
shll
or
jle
jo
cmpsl
xor
inc
ret
sub
test
repz
imul
int
movsl
and
cltd
inc
rcl
and
sbb
inc
mov
das
add
mov
sti
or
jmp
int
add
adc
aad
shrb
cmp
sbb
inc
mov
mull
sub
add
inc
push
pop
and
dec
out
mov
ret
stos
mov
add
outsl
nop
dec
push
rcl
dec
lret
inc
mov
or
roll
cmpsl
or
repnz
inc
adc
sbb
inc
adc
sub
pop
cwtl
and
inc
repnz
add
push
stos
scas
shl
add
std
mov
imul
roll
shlb
jecxz
aad
inc
shlb
mov
mov
xor
sub
jo
shl
js
mov
scas
jg
inc
sbb
jg
push
orb
adc
xchg
orb
add
stos
mov
pop
fsts
or
push
or
test
and
aaa
out
xchg
cmc
add
test
mov
lods
sti
add
sub
or
dec
sarb
fldl
adc
dec
xor
jge
sbb
ret
outsb
aad
and
mov
inc
push
adc
sbb
cmc
pusha
and
sbbl
or
push
inc
xor
in
rcrb
dec
popa
push
add
int3
xor
andl
jno
mov
add
lea
addl
out
add
add
add
mov
and
push
loopne
orb
fcoms
cmc
add
sbb
popa
aam
jmp
pop
loope
or
add
adc
out
rorb
jno
nop
dec
add
mov
inc
add
test
mov
and
shlb
in
and
mov
or
xor
push
jp
loope
and
ss
cltd
mov
push
repnz
or
cmp
mov
sub
inc
sahf
repz
pop
inc
iret
push
pop
pop
cwtl
mov
nop
scas
out
or
dec
pop
mov
xor
inc
inc
fldl
jne
or
or
ljmp
pop
mov
add
mov
and
push
leave
adc
add
stos
pushf
test
inc
mov
push
sub
ljmp
filds
inc
or
sub
mov
add
insb
imul
or
mov
push
aaa
leave
rclb
mov
fwait
test
mov
std
fsubp
ja
nop
jo
cli
adc
test
dec
xchg
sbb
inc
or
and
xor
test
movsl
xor
testl
push
or
insl
mov
test
aad
sub
add
inc
mov
lahf
pop
ja
inc
enter
lea
jle
test
xlat
cltd
popf
shrl
xor
dec
fst
mov
and
jmp
mov
add
dec
sub
and
orl
aad
push
or
test
das
enter
or
andl
repz
dec
es
add
push
inc
or
dec
lds
fwait
gs
sarl
test
lods
inc
lea
sarl
sub
repz
xchg
push
add
xlat
adc
mov
outsb
mov
pop
or
mov
adc
push
orl
pop
cmp
mov
inc
inc
rolb
cmpsl
xor
stos
xlat
push
rcll
mov
xor
sbb
fwait
mov
mov
lods
movsb
lahf
sbb
adcb
add
addl
sub
mov
pop
inc
and
je
orb
inc
daa
xor
sbb
out
dec
rclb
aaa
pusha
dec
jmp
or
xor
dec
int
add
movsb
adc
mov
arpl
mov
inc
adc
xor
jb
clc
sub
cmp
test
cli
add
xor
adcl
inc
ret
inc
cmpsl
jo
repz
pop
cmp
cmp
test
pusha
movb
jecxz
push
mov
mov
mov
addb
iret
inc
int
inc
xchg
in
sbbb
or
or
sbb
mov
jp
mov
mov
dec
sbb
pop
insl
mov
lret
lcall
or
loop
add
or
rorb
jmp
inc
test
mov
pop
imul
mov
sti
mov
aaa
xor
adc
push
leave
movsb
mov
sub
lds
add
stos
or
jge
add
or
fs
addb
test
jae
lods
stos
sub
outsl
mov
xchg
add
filds
add
and
xlat
or
or
loop
ss
mov
nop
orl
jo
mov
movsl
pusha
hlt
scas
dec
popa
test
xchg
orl
or
and
roll
call
xor
or
and
outsb
sbb
xor
dec
adc
adc
add
and
xor
add
test
mov
push
pop
lea
push
mov
mov
pop
sub
mov
int3
push
test
xchg
sbb
pop
adc
enter
mov
add
push
jg
adc
jge
xchg
adc
cmp
or
loop
sub
add
popf
outsl
ret
je
jmp
lret
shlb
insb
loop
es
aas
mov
inc
add
add
or
and
sbb
sub
test
mov
add
jl
xlat
sbb
test
mov
inc
xor
jno
mov
inc
xlat
ret
or
push
add
add
orb
cmpsb
sub
mov
push
mov
outsb
cmc
rolb
repnz
mov
ret
jns
xor
or
sub
xor
outsl
pop
inc
jecxz
rol
scas
add
adc
add
pop
leave
mov
inc
push
pop
pop
add
cwtl
mov
jo
loopne
add
add
std
lret
shrb
pop
nop
mov
lods
or
addb
nop
stos
sub
test
inc
xchg
mov
mov
push
adc
push
add
inc
stc
xor
xor
mov
movsb
sub
add
iret
adc
sub
adc
loopne
test
xor
push
jo
and
mov
xlat
adc
test
and
mov
mov
sbb
cmp
mov
pop
or
cld
or
or
xor
add
and
dec
fmull
mov
cmp
sbb
adc
fwait
and
and
rorb
sbb
mov
cmpsl
adc
dec
push
mov
jne
rolb
mov
mov
xchg
test
insb
add
stos
mov
dec
iret
cmc
cmpsb
sbb
adc
loopne
stos
pushf
sub
jg
add
bound
mov
sahf
add
add
je
cmp
sbb
push
jbe
xchg
or
cwtl
push
dec
adc
dec
dec
add
push
mov
test
jbe
push
add
daa
pop
or
sub
dec
mov
cmp
push
inc
inc
pop
sbb
xor
or
cmp
mov
lds
dec
pusha
stc
adcl
int3
stc
or
xchg
dec
lods
jae
imul
int
xchg
and
loope
xchg
jno
inc
repnz
mov
inc
adc
sbb
sbb
rcll
cs
add
or
add
inc
xor
add
int3
test
mov
mov
push
js
adc
xchg
add
push
dec
subb
push
pop
mov
add
add
cmp
jns
inc
lea
loopne
das
dec
add
nop
mov
jo
jp
popa
adcb
sarb
and
xchg
cmp
mov
mov
adc
andl
xchg
mov
push
or
insl
dec
add
xor
jo
je
idiv
test
xor
adc
lahf
rcll
inc
outsl
push
stos
and
or
dec
dec
outsl
mov
pop
xor
push
dec
lret
mov
pop
add
or
shll
add
sub
inc
jne
inc
inc
sub
test
scas
fstpt
rorl
imul
or
popa
and
jo
stos
mov
or
push
push
shll
adc
adc
pop
xchg
push
xor
les
pop
mov
and
dec
add
sub
inc
test
fstl
add
add
mov
mov
mov
push
mov
and
jb
test
imul
cmc
repz
xchg
mov
and
sub
adcb
and
imul
js
push
outsl
insl
push
dec
addl
lea
mov
xor
add
or
sub
adcb
xor
jne
or
or
stos
add
nop
push
sub
ret
popf
jg
add
push
in
or
xchg
int3
mov
and
cmp
lds
push
add
jnp
or
adc
and
add
mov
pop
inc
loope
insl
add
sarb
data16
insb
xlat
mov
add
or
add
inc
sub
cmp
pop
or
or
shr
add
cmp
fadd
arpl
sbb
and
sbb
orl
mov
adc
jno
sbb
imulb
adc
xor
mov
and
xor
test
mulb
cs
rcr
test
xchg
mov
add
sub
add
cltd
daa
or
push
xor
push
roll
stos
or
scas
mov
gs
push
inc
add
pop
add
lcall
filds
sbb
pop
or
xor
mov
jecxz
scas
incl
imul
leave
mov
pop
jns
mov
fdivrs
push
rolb
cmpsb
add
popa
push
test
dec
addr16
cmp
inc
sahf
push
pop
cmc
popf
bswap
stc
push
jle
loop
movsb
ds
test
shll
jno
lock
sub
or
addb
cmp
adc
sbb
imul
mov
sbb
jle
loop
lcallw
sbb
push
add
xor
sbb
adc
or
mov
stc
ja
test
add
loope
sbb
loopne
adc
rclb
test
push
cmp
inc
stos
pop
add
dec
jne
xchg
sbb
mov
bound
sub
or
sbb
adc
nop
xor
test
push
lret
out
mov
cmpsb
test
xor
mov
push
and
inc
lcall
mov
iret
dec
sub
and
cmp
mov
add
adc
adc
mov
xor
xor
popf
cltd
add
lahf
cwtl
popa
xor
mov
push
sub
add
jmp
call
jle
push
push
xchg
push
add
push
jno
or
push
test
fwait
jp
movsl
mov
rclb
jecxz
add
xchg
movsb
stos
dec
cmp
sub
add
and
stos
cmp
sarl
dec
xchg
cli
and
or
loope
rclb
sub
imul
rol
mov
add
aad
sti
mov
stos
mov
sarb
and
adc
jg
xchg
adc
push
sbb
mov
or
add
addl
mov
xchg
or
decl
clc
push
pusha
sbb
xor
pop
xchg
mov
ret
pop
lcall
inc
adc
cwtl
add
sbb
and
ljmp
lea
add
lds
add
adc
mov
and
adc
sub
inc
dec
sbb
ret
dec
cmp
outsl
inc
xorl
push
lods
sbb
cs
push
repnz
dec
cmp
sub
adc
scas
cmpsb
dec
jp
sub
mov
adc
xor
pop
dec
cltd
jbe
filds
mov
or
xchg
jg
int
xor
mov
and
xchg
push
fstp
adcb
and
inc
lret
push
and
inc
dec
cld
dec
and
mov
lea
jnp
xchg
xchg
lods
push
and
push
xchg
dec
data16
push
test
xorl
mov
mov
push
scas
hlt
dec
in
arpl
pop
loope
add
sbb
pop
mov
sub
add
jns
rolb
in
dec
sti
push
dec
loop
popf
sub
dec
es
andb
xor
unpcklps
and
add
dec
repz
mov
push
leave
push
sbb
push
jne
addb
shl
mov
xchg
xor
sbb
dec
adc
cmpsb
dec
sbbl
or
enter
orl
pop
outsb
ffree
cmp
cwtl
aas
cmp
pop
xchg
js
aad
iret
sbb
sahf
push
repz
sub
pop
dec
test
lods
sub
insl
cmp
sbb
mov
mov
or
addr16
pop
inc
adc
add
daa
jmp
push
xor
int
mov
xor
xor
xchg
push
mov
subl
lods
test
scas
push
or
shlb
ljmp
setns
dec
sbb
rclb
mov
inc
sub
sub
sub
or
adc
or
mov
add
mov
arpl
arpl
adc
push
sub
adc
popa
and
jmp
dec
cmp
adc
add
push
inc
pusha
inc
push
push
lret
jl
push
repnz
jb
movsl
shlb
loope
inc
sbb
dec
add
jecxz
lahf
inc
dec
mov
or
idivb
push
adc
pusha
xchg
sub
add
and
mov
dec
mov
add
orb
adc
sbb
jns
je
mov
mov
add
jno
fldcw
push
push
xor
sbb
popa
stos
es
sarl
popa
xlat
or
sbb
ror
mov
cmp
dec
popa
test
std
adc
mov
mov
pop
rclb
inc
adc
mov
ss
push
mov
je
test
jmp
jno
int3
push
add
ret
adc
jno
movsl
xchg
pop
daa
stos
dec
loopne
cwtl
xchg
addr16
out
dec
int
push
scas
mov
lock
inc
loopne
cmpsl
xchg
xchg
loop
or
adc
dec
jp
mov
fstpl
jne
and
out
xchg
sbbb
sbb
lret
mov
addl
shrb
dec
push
xchg
out
and
sbb
inc
cli
or
rcll
mov
mov
cmp
fcmovb
mov
mov
pop
xor
xchg
adcb
add
push
and
or
dec
imul
shrb
or
and
fbld
cmc
xor
das
push
push
mov
sub
sbb
es
lea
add
adc
mov
enter
sbb
movb
sbb
xor
fstp
scas
ret
inc
xor
jmp
inc
and
dec
inc
sub
push
test
rorb
repz
aaa
xor
bound
jb
push
mov
lock
dec
push
push
cwtl
lret
js
add
jno
dec
mov
push
jmp
fsubs
sub
iret
adcb
loopne
mov
and
mov
mov
nop
movsb
punpckhbw
bound
inc
aaa
inc
dec
add
adc
sub
jno
mov
mov
jns
popa
or
add
and
jmp
loopne
aam
push
inc
mov
dec
loope
aaa
es
and
dec
sbb
test
lcall
push
test
stc
add
xor
pop
adc
fldcw
leave
pusha
mov
pusha
and
cmc
push
movsl
mov
leave
jae
stc
in
add
test
inc
adc
dec
pop
mov
add
sarb
push
jp
push
leave
xor
or
mov
mov
and
ljmp
mov
xchg
stos
sub
mov
push
sbb
add
add
cltd
and
lea
dec
mov
lret
js
popf
adc
and
sub
sbb
xor
cs
push
dec
xchg
ljmp
xchg
cmpsl
mov
mov
js
std
div
rorl
mov
push
and
xchg
add
movsb
push
loopne
hlt
lea
mov
insl
sub
dec
sbb
mov
cmp
or
fldcw
inc
outsb
movsb
and
pop
sbb
inc
frstor
sbb
xchg
daa
or
lods
ds
scas
pop
sbb
xchg
sub
cld
inc
pusha
push
inc
pop
and
inc
sub
sbb
and
outsl
ds
bound
and
push
dec
or
addb
mov
sbb
je
xchg
pop
popf
es
cwtl
movsl
xchg
push
scas
add
repz
xchg
daa
xchg
mov
sub
iret
lods
mov
push
dec
rolb
adc
pop
dec
push
sbb
adc
jne
add
stos
add
lds
add
pusha
xchg
add
add
and
inc
and
lret
bound
dec
sub
nop
mov
stos
dec
leave
iret
pop
imul
pop
and
or
xchg
mov
and
mov
push
mov
mov
mov
sbb
mov
cmp
fwait
test
and
iret
cld
dec
pop
push
adc
sbb
rorl
aam
add
xor
lret
pop
dec
and
pop
loopne
dec
sbb
add
inc
sub
cmp
insb
movsb
jmp
jbe
mov
jmp
insb
and
cmpsb
sbb
arpl
adcb
xchg
addl
mov
xor
aad
lds
inc
pop
fnop
add
xor
sbb
insb
outsb
cwtl
push
outsb
mov
inc
add
subl
pop
shll
add
aas
mov
pop
mov
jecxz
fstps
inc
pop
loope
or
ret
das
inc
imul
les
fwait
sub
add
xchg
adc
mov
fadds
je
cltd
xor
scas
sbb
loopne
ret
adc
cmpsb
push
or
mov
adc
add
add
dec
lods
stos
pop
cmpsb
add
sub
filds
movsl
lcall
mov
add
addb
and
inc
cmp
xor
into
das
add
xchg
out
dec
jmp
lea
lea
xchg
inc
mov
cld
mov
pop
pop
lret
xor
rorl
push
jno
mov
lea
jnp
lods
dec
ss
test
push
push
or
ja
mov
les
pop
lcall
inc
inc
lods
jbe
inc
mov
shlb
outsb
shrb
popa
pop
mov
inc
and
cld
or
sahf
addr16
xlat
mov
ss
in
dec
lea
inc
or
in
add
lcall
les
addr16
sub
inc
add
pop
rcr
sbb
sbb
rorl
pop
push
and
dec
ljmp
orb
add
sub
lds
dec
sbb
xchg
adc
addb
mov
lods
repz
inc
jo
xor
dec
or
pusha
sbb
enter
imul
inc
stos
adc
push
stos
pop
ret
cs
mov
cmpsl
add
sbb
adc
nop
push
shrb
adc
jno
add
or
popa
pop
push
jge
ss
xor
xchg
and
pop
or
mov
shl
sub
je
dec
inc
test
mov
je
xchg
out
xchg
xor
jne
jae
add
adc
add
imul
orb
nop
addr16
aaa
pop
adc
lcall
inc
jae
xor
jmp
xchg
test
cwtl
test
jo
push
sub
pop
adc
push
and
outsl
mov
fwait
movsl
inc
rolb
arpl
jns,pn
ss
xor
test
add
or
push
sti
and
gs
sub
aam
loop
aas
dec
mov
mov
test
xor
xchg
mov
enter
gs
js
xchg
roll
stc
loopne
dec
mov
and
cmp
dec
mov
dec
and
push
adc
and
add
xchg
popa
pusha
shrb
fisubrl
loopne
inc
push
pop
int
cmpsb
push
or
xchg
fwait
lea
xchg
adcb
cwtl
inc
adc
sbb
repnz
xor
sub
xor
add
xchg
leave
out
mov
push
popa
lcall
call
out
mov
in
lcall
push
ja
jb
test
jns
aas
cmp
andb
cmp
xor
add
dec
inc
jb
ss
add
sbb
xor
sub
adc
and
push
xchg
cld
andl
mov
arpl
and
rol
insb
push
add
pop
xor
sbb
cltd
xor
sub
push
add
dec
insl
addr16
pusha
fwait
imul
add
aad
push
add
aad
or
dec
mov
sub
clc
sbb
push
push
cmp
repnz
jne
add
sub
stc
xchg
mov
je
jmp
cltd
sub
icebp
cmp
lahf
out
imul
and
and
ljmp
push
mov
inc
inc
mov
mov
pop
adc
subl
xchg
or
insl
mov
pop
jge
xorb
stc
sbb
jno
adc
add
adc
xor
cwtl
sub
imul
js
mov
or
lds
cmc
jo
es
imull
sub
and
xor
clc
push
inc
mov
icebp
aas
pusha
dec
adc
add
pusha
bound
fildl
inc
dec
and
or
dec
push
dec
enter
aad
add
rcrb
inc
repz
or
cmpsb
or
ds
lea
dec
adc
mov
fs
inc
loopne
add
mov
push
and
xor
mov
int
add
lcall
pusha
or
roll
add
jne
and
pop
cmpsb
lock
mov
test
enter
and
add
xchg
loope
outsl
push
pusha
dec
cmp
jo
mov
xchg
enter
popa
xchg
imul
loopne
repnz
cs
push
ret
add
or
pop
dec
push
je
add
sub
or
sbb
adc
or
dec
jno
leave
inc
and
dec
inc
or
lret
xchg
xor
adc
int
leave
les
mov
mov
pop
push
pop
loope
and
sub
lds
daa
mov
fstl
lods
or
cmp
push
mov
mov
sbb
in
mov
dec
jmp
test
add
jae
push
adcb
add
outsl
imul
dec
push
pop
lods
push
mov
nop
pcmpeqw
test
sbb
scas
or
sub
sbb
jns
mov
mov
sbb
add
stos
push
inc
inc
lcall
jle
pop
inc
push
inc
dec
stos
and
daa
push
adc
outsl
xchg
inc
inc
push
inc
pusha
dec
and
xorb
mov
or
ret
sbb
nop
add
mov
inc
pop
scas
pop
lret
in
sbb
rolb
push
add
pop
push
inc
rolb
mov
inc
and
ficompl
push
stos
push
pop
shr
or
aad
sub
inc
or
add
vshufps
cmpsl
adc
or
sub
cmpsl
fistps
and
mov
add
add
inc
cwtl
sub
sub
mov
inc
adc
mov
adcl
andl
mov
mov
or
enter
adc
out
stos
mov
jns
in
test
mov
int3
movsb
test
cmp
fsubs
xor
xor
or
mov
add
test
or
push
mov
lods
popa
cmp
mov
shlb
int
mov
lods
test
jno
mov
insb
mov
fnstenv
ret
pop
push
test
add
imul
or
rcrl
pop
adc
jp
pop
roll
add
push
sub
add
rcrl
and
mov
add
mov
mov
mov
inc
mov
fwait
inc
or
shll
sub
push
pop
insb
add
lret
shl
mov
pop
xor
popf
rclb
sub
add
push
rorb
inc
mov
push
push
test
in
insl
or
les
add
sti
aam
fstpt
adc
xchg
adc
dec
fwait
mov
adc
inc
adc
sbb
xor
pop
adc
stc
iret
adc
sub
xchg
fwait
jle
xchg
scas
imul
pop
mov
mov
fadds
sbbl
add
pop
and
movl
or
aam
or
mov
fcmovu
into
xor
adc
xor
inc
mov
mov
xor
mov
popa
pop
push
jecxz
or
int
jg
loop
xor
mov
insb
jmp
xchg
pop
xchg
mov
sub
out
jne
mov
fisttps
orb
jbe
inc
ljmp
pop
add
enter
or
rorb
stos
pop
add
inc
and
add
or
in
jne
pop
or
mov
inc
or
arpl
or
ja
push
leave
repz
repz
arpl
dec
and
inc
loop
test
lods
mov
add
cltd
dec
addb
cmpl
or
or
and
push
xchg
jl
push
add
cmpsb
adc
mov
in
mov
push
mov
sub
addr16
or
jg
inc
dec
adc
fwait
dec
xchg
scas
push
mov
add
inc
popf
lcall
loopne
sub
loopne
adc
lcall
jmp
roll
push
push
adc
lea
lds
or
xchg
arpl
inc
add
inc
test
add
add
inc
inc
inc
push
cwtl
stos
mov
imul
rclb
inc
xor
adc
fstpt
shrb
mov
sbb
mov
lds
inc
mov
rol
or
inc
int3
cli
repz
popf
inc
dec
jmp
cmp
push
add
dec
xchg
add
mov
ja
inc
outsb
add
mov
mov
testb
in
fadds
test
pop
pop
clc
jnp
inc
or
lret
std
sahf
sbb
or
adc
lds
dec
shrb
mov
jmp
mov
mov
push
bound
jmp
or
bound
popa
lret
rolb
cltd
push
call
xlat
stos
sbb
xor
adc
addb
jp
cmpl
mov
xchg
cmp
mov
ss
jae
loopne
adc
dec
ret
add
xchg
sbb
xchg
fisttpl
xchg
add
sbb
jne
xor
push
dec
jecxz
or
dec
test
push
xchg
pop
pop
pop
push
dec
or
dec
add
xor
jecxz
xchg
mov
test
add
sub
add
addr16
xor
lahf
sub
je
loope
xchg
insl
pop
xchg
sbb
xchg
cs
sbbl
fcompl
lea
scas
dec
sub
mov
cld
movsl
adc
sbb
sbb
and
or
mov
call
sbb
cmovs
xorl
addb
lds
mov
dec
add
enter
rcrb
inc
in
fnstenv
lcall
inc
xor
adc
jb
sub
xor
lcall
lret
inc
test
jno
xor
add
insl
mov
data16
repz
add
mov
cmp
ret
or
add
push
and
cmp
add
call
out
pop
push
xor
pop
sbb
ret
xchg
inc
mov
sub
add
push
jne
shll
inc
ds
xor
jb
cltd
push
jnp
ljmp
sub
mov
or
lcall
and
jo
pop
mov
lea
rcrl
inc
in
or
test
inc
mov
popa
and
sbb
test
sbb
sub
push
xchg
or
add
adc
sub
xchg
jns
push
sbb
cmpsl
push
sbb
rcll
or
push
cmp
xchg
ss
push
repz
add
jo
dec
jecxz
mov
mov
sbb
rclb
mov
dec
mov
adc
imul
push
push
movsb
push
and
scas
push
add
xchg
adc
pop
xchg
cs
jns
out
add
aam
pop
cmpl
test
pop
or
into
stos
mov
xorl
dec
and
scas
jo
add
shlb
mov
cmp
inc
push
fbld
mov
cmpsb
add
push
cmp
add
nop
popa
lds
sbb
imul
pop
and
add
pop
push
mov
inc
loope
inc
mov
sub
jo
in
sarl
and
test
shlb
mov
sbb
xor
test
cmpsb
jns
cmp
adc
call
icebp
in
cmpsb
sub
dec
adc
mov
ret
es
or
test
and
mov
aaa
dec
rolb
push
mov
or
inc
imul
aad
into
js
and
test
cmpb
movsb
test
sub
pop
add
and
mov
pop
cmp
pusha
xchg
orb
ret
mov
mov
je
push
and
push
adc
push
add
jns
data16
lods
mov
cltd
scas
or
or
popa
pop
xchg
cmp
pop
inc
dec
roll
dec
and
adc
stos
inc
adc
mov
xor
inc
dec
int
movsl
rcll
aad
push
or
dec
mov
pop
or
cmp
xor
inc
push
xor
adc
push
pop
xor
cmc
lcall
mov
cmpb
xchg
add
xor
aad
inc
leave
xrelease
inc
lea
xor
add
mov
repz
sbb
add
sub
dec
or
sti
add
lods
dec
bound
mov
into
cmpsb
xchg
out
enter
add
push
pop
adc
sbb
orl
mov
mov
inc
or
call
xor
lds
call
lahf
movsb
movsb
and
adc
stc
shlb
dec
jns
movsl
dec
andb
ljmp
subl
and
push
in
add
dec
int
adc
push
add
das
jecxz
sbbb
adc
or
cmp
mov
adc
rolb
fisubl
adc
and
jne
push
dec
jg
jl
mov
or
cmp
inc
pop
adc
jno
xchg
sub
fistps
pop
lahf
mov
xlat
push
inc
pop
xchg
or
loop
and
or
xor
ficoms
mov
mov
jge
mov
lret
roll
dec
sbb
popa
sarb
xor
sub
adc
inc
or
loop
aad
adc
loope
mov
or
popl
cwtl
ss
addr16
rcl
sbb
mov
or
stc
and
adc
cs
es
mov
mov
inc
xchg
mov
inc
lcall
roll
outsb
bound
movsb
sub
sbb
filds
ss
adc
sub
push
xor
mov
add
push
out
sbb
sub
add
pop
sbb
jnp
sahf
xor
gs
fwait
movups
jb
push
dec
adc
push
aas
and
sbb
clc
cmp
inc
cmp
xor
lahf
pop
test
jne
pop
cmpl
aam
arpl
inc
orl
pop
mov
loopne
push
pushf
jg
pop
push
xor
push
xor
or
fadds
lea
cwtl
xor
xchg
mov
loopne
sarl
test
mov
outsb
sub
iret
pop
sbb
push
or
decl
xor
cmpsl
lea
xor
pop
xchg
inc
push
add
popa
jbe
insb
jecxz
jns
mov
mov
addb
pop
ljmp
imul
xchg
mov
test
add
addr16
in
test
lods
test
and
popa
sbb
ds
adc
in
in
inc
or
sar
mov
call
aas
bound
data16
mov
add
and
cwtl
popa
inc
sub
loope
sub
add
fists
mov
cmpl
cmp
push
movsl
arpl
shl
jns
leave
or
inc
adc
popa
cmp
pop
pushf
adc
test
add
cli
jne
sti
mov
shlb
scas
xor
cwtl
adc
pop
and
add
sbb
or
xchg
sbb
das
cmp
add
bound
pop
clc
add
inc
loope
dec
sub
xor
add
out
add
push
jno
push
cmpsb
call
shrl
mov
or
mov
mov
add
rolb
mov
sub
ljmp
shlb
push
pop
cld
xor
and
cwtl
sub
je
popa
adc
fiadds
dec
mov
sbb
xor
xor
vpshufhw
scas
adc
hlt
aam
test
mov
sub
pop
movsl
in
js
sub
push
addr16
sbb
in
and
push
pcmpgtd
xor
sub
xor
pop
or
ret
les
mov
pop
push
add
add
pop
sbbl
or
xchg
or
add
inc
das
add
xchg
scas
xor
or
dec
cmpsl
roll
fldl
nop
ljmp
lcall
dec
jns
jns
rolb
int3
pop
adc
shl
cmpsb
sub
stos
mov
xchg
add
incl
orb
inc
or
nop
scas
faddl
sub
sbb
xchg
inc
gs
pop
xor
lods
scas
and
push
or
lods
mov
rolb
iret
lret
mov
cs
dec
roll
push
les
test
dec
fmuls
arpl
mov
cmp
mov
clc
or
cmpsb
mov
push
mov
addr16
adc
or
adc
pop
jns
icebp
test
add
sub
rorl
imul
insb
sub
dec
and
call
jmp
inc
mov
mov
pusha
test
imul
adc
or
leave
and
pop
add
pop
push
orl
pop
popa
ljmp
iret
pop
adcb
adc
dec
jne
cmp
push
xchg
cwtl
pusha
pop
push
shll
fcmovnbe
ret
ret
cmp
inc
mov
push
dec
dec
push
rol
je
jnp
ljmp
sbb
jecxz
stos
mov
addl
leave
fwait
insb
arpl
xor
orb
or
and
aad
fdivs
jl
ret
inc
push
or
shlb
sub
inc
add
dec
adc
les
mov
repz
or
shlb
push
cmp
mov
or
cmp
pop
lret
ja
pushf
add
int
add
insb
add
sub
mov
popa
sahf
pop
roll
push
mov
mov
ss
sub
fwait
gs
imul
push
je
ret
dec
and
outsb
adc
lahf
jp
fildl
ret
rclb
mov
or
fiaddl
adc
fwait
and
out
xchg
push
push
adc
testl
dec
mov
adc
push
push
cmp
inc
sbb
cmp
sbb
and
dec
stos
sbb
push
fucomp
out
xorb
jbe
jae
and
push
dec
push
sbb
fisubs
xchg
dec
loop
nop
mov
mov
xchg
push
xor
cmp
dec
cmp
or
sub
pop
cmp
sti
insb
popf
push
pop
fcomps
dec
ret
inc
bnd
or
and
add
push
inc
jns
cwtl
pusha
nop
mov
inc
fcmovnb
aaa
xchg
movsb
rorl
movsb
inc
aam
push
add
add
dec
loope
jo
inc
ret
sbb
popa
add
das
jns
push
nop
lock
push
xor
mov
sub
popa
stc
jecxz
nop
mov
dec
pop
adc
push
sub
lods
xor
rolb
aaa
cmpsl
cs
ljmp
mov
mov
inc
mov
xor
mov
sub
push
scas
cmp
mov
rcl
or
add
or
inc
test
push
push
sbb
and
adc
outsl
aad
dec
leave
repz
rolb
ljmp
sub
mov
adc
sbb
mov
fidivs
pop
adc
pop
clc
aas
xor
loope
jmp
out
mov
pop
cwtl
sub
or
ja
dec
add
xor
cs
lds
sbb
gs
dec
jmp
add
fisttpll
adc
mov
fcmovnbe
sub
push
pop
xor
subb
xchg
les
das
mov
out
dec
add
jecxz
jp
and
xor
loope
std
sbbl
or
pusha
loopne
dec
neg
cmp
adc
mov
add
or
ljmp
loop
push
faddl
jg
sub
or
into
gs
loope
cltd
xchg
loope
pop
or
push
mov
andb
lds
pop
pop
mov
xor
lcall
shrb
pop
lea
push
cmc
imul
sub
bound
xor
mov
sbb
enter
nop
sub
movsl
add
or
bound
xor
sti
sbb
cmp
dec
rclb
pop
fcmovnb
adc
mov
enter
sbb
xchg
push
mov
add
dec
iret
les
mov
pop
icebp
xlat
outsb
mov
aad
aam
loopne
dec
push
push
xchg
push
add
in
mov
cmc
xchg
out
adc
jle
push
lock
les
push
add
js
add
sbb
and
rorb
je
push
std
mov
mov
test
jo
inc
push
shl
jp
sbb
and
psubusw
sbb
mov
xor
or
sbb
aaa
addb
pop
dec
in
into
pop
mov
mov
es
stc
mov
or
add
inc
sub
sub
sub
pop
adc
sti
xor
xor
push
xchg
inc
jno
xor
add
mov
bound
mov
sub
movl
lods
xchg
jg
cwtl
and
push
inc
aad
movsl
adc
push
arpl
lods
mov
or
inc
adc
jge
rorl
lods
lods
testl
lret
sub
mov
inc
jo
and
cmpsl
add
mov
sbb
popa
and
sub
jl
rcl
mov
mov
popf
push
jo
jne
shll
ja
mov
jo
xchg
add
subl
loope
lret
dec
fstl
and
push
dec
lea
adc
cmc
add
js
repnz
add
add
lret
int
push
jnp
adc
lret
rcrb
daa
test
dec
and
subl
pop
xor
mov
inc
movsl
sub
pop
test
push
sub
or
sbb
cmp
rolb
ret
dec
sahf
movsl
mov
or
lcall
add
jecxz
shrb
nop
mov
subb
jmp
push
test
sbb
or
mov
adc
fs
adc
test
push
out
stc
enter
and
inc
mov
aaa
jg
in
push
cmpsl
std
repnz
mov
sbb
aad
cmp
aam
sti
sarl
int
pop
sbb
add
cmp
rorb
push
popa
insl
cmpsb
movsl
cmpsb
inc
push
fstpt
mov
or
lret
xchg
dec
lcall
mov
call
dec
and
lahf
nop
sub
inc
or
fdivs
mov
pusha
adc
nop
rolb
lcall
icebp
or
flds
addb
sbb
orl
cs
out
stc
push
inc
add
xchg
cmpsl
stos
lea
std
push
push
xchg
mov
leave
mov
test
adc
add
sbb
and
mov
jmp
lds
mov
push
mov
int
jne
mov
xchg
iret
sti
mov
mov
push
test
es
push
sbb
repz
scas
clc
push
mov
cmpsb
xchg
gs
push
nop
test
xchg
sub
mov
sarl
and
jae
xchg
sub
out
rolb
xorb
or
inc
xchg
notl
inc
cmp
cltd
mov
lcall
and
cmp
sbb
sub
fsubs
test
lea
mov
push
add
cmpsb
and
shll
jno
icebp
jbe
push
daa
push
in
pop
imul
lds
ret
cs
xchg
sahf
cmp
push
out
adc
std
or
or
ljmp
adc
add
mov
add
xchg
out
imulb
adc
inc
pusha
sbb
cmp
aad
arpl
pop
xor
cvtdq2ps
test
push
xchg
and
inc
scas
add
clc
sbb
sbb
mov
dec
mov
movsl
push
test
sbb
sbb
xchg
add
adc
cmp
jns
push
rol
bound
add
mov
iret
stos
hlt
mov
push
mov
mov
add
pop
push
nop
imul
lea
xor
mov
rolb
aad
andl
das
inc
ja
adc
sub
jecxz
push
int
adc
je
ret
push
sub
mov
mov
add
jno
add
fs
ret
inc
inc
xchg
cmp
add
lea
cs
fmuls
js
xor
dec
test
iret
fcmove
xchg
cmp
subb
scas
stos
add
jecxz
pop
pop
aad
movsl
add
jbe
dec
pop
or
xor
shlb
inc
ret
shll
mov
add
sub
fwait
pop
inc
ret
xchg
lods
mov
or
loop
addl
shll
mov
ss
mov
pop
addr16
push
xor
inc
mov
loopne
jmp
add
mov
mov
jne
add
xchg
cmp
xchg
in
pop
xorl
adc
push
or
pop
dec
cvtdq2ps
inc
inc
dec
push
dec
pop
xchg
aam
loop
cmc
test
sub
sbb
mov
xchg
aad
addb
inc
movsb
mov
add
inc
jb
add
lods
jp
inc
dec
pop
and
sbb
sub
imul
fcmovbe
mov
jmp
loope
jno
popa
cwtl
mov
inc
pop
aad
mov
pop
pop
mov
adc
ret
add
cmp
orl
and
dec
cmp
pop
adc
push
add
jne
or
pushf
mov
loop
dec
or
insl
cmp
add
dec
lret
ss
stos
movsb
leave
dec
adc
sbb
mov
je
or
bound
add
outsl
cld
push
and
inc
or
int3
leave
cmpsl
stos
push
lods
shll
push
fimuls
aam
inc
lods
mov
aam
popf
lret
or
pop
ljmp
stos
adcl
arpl
add
insb
call
and
dec
mov
sbb
inc
pop
lds
das
aam
cs
or
push
cmp
je
adc
js
sti
rcrb
iret
jbe
pop
aam
push
sub
stc
or
push
lret
push
stos
cmp
lahf
je
xchg
and
lret
add
xor
sub
mov
cmp
test
mov
xor
and
dec
repz
nop
push
lds
je
inc
lds
adc
push
pop
mull
push
nop
push
sbb
shrl
sub
push
and
je
test
inc
test
mov
lcall
sarb
xor
mov
pop
mov
test
or
sub
xor
ficoml
inc
outsl
sub
jp
cltd
test
cmpsl
add
in
mov
pop
mov
adc
imul
icebp
popa
adc
inc
xor
leave
pop
jge
add
arpl
testl
orl
or
push
add
test
shrb
pop
pop
xchg
jno
je
pop
xchg
pop
fwait
cmp
push
mov
enter
es
or
add
push
lods
mov
je
cmp
les
xchg
mov
mov
xchg
add
fbld
mov
sbb
pop
leave
add
test
cwtl
add
add
push
xor
and
add
pushf
pop
lds
xchg
sbb
adc
rorb
sbb
add
inc
push
gs
push
dec
loop
enter
inc
mov
xor
imul
inc
sub
push
mov
xor
or
or
jo
push
add
and
adcb
xchg
pop
dec
xor
inc
mov
and
inc
xchg
xchg
or
jecxz
test
je
pop
sub
mov
push
rorb
lods
add
movsl
add
pusha
cmp
push
push
lret
rclb
lds
mov
mov
adc
sbb
add
sub
shlb
daa
ljmp
and
mov
int
scas
fdivs
mov
jns
mov
sbb
rorl
lock
dec
je
and
add
pop
shl
shlb
inc
inc
adc
leave
add
fcoms
sbb
jge
rolb
pop
mov
adc
push
push
pop
cmp
cwtl
sub
xchg
mov
push
repnz
dec
hlt
mov
mov
cld
dec
xor
push
or
fwait
jg
out
aam
mov
adc
cmpsl
dec
dec
jo
add
add
inc
popf
cvttps2pi
ret
inc
mov
sub
sub
nop
mov
xchg
and
sbb
and
and
mov
jnp
xor
bound
popa
add
cmp
pop
jp
add
push
dec
subb
ret
ret
ss
jle
test
add
adc
xchg
rclb
and
or
daa
inc
scas
aas
or
push
jns
lock
aad
fidivl
push
and
adc
repz
shlb
xor
add
mov
lcall
add
bound
imul
add
cmp
add
pop
shrb
cwtl
test
inc
add
cmpsl
mov
sub
pop
mov
repz
xchg
cmpsl
xchg
jno
sub
imul
mov
xchg
popl
mov
adc
adc
add
xor
cmp
das
or
dec
ret
push
jo
add
test
add
inc
jg
daa
and
mov
mov
nop
pop
dec
shlb
sub
js
lahf
xor
nop
mov
dec
sbb
add
mov
ljmp
mov
push
inc
bound
mov
adcb
pop
push
ja
push
mov
and
or
loopne
adc
jb,pn
mov
adc
dec
add
subl
aad
leave
cmpsl
nop
test
fimull
jecxz
test
add
stos
daa
xor
adc
pop
lret
mov
and
and
mov
add
sub
push
push
bound
out
addl
subb
push
adcb
repnz
sti
sub
cmp
xor
push
sbb
shll
xor
inc
in
mov
aam
insl
mov
inc
jns
jcxz
test
push
push
push
roll
cmpsl
mov
dec
or
lods
jno
test
aam
and
sbbb
xchg
mov
sahf
inc
sbb
push
negl
push
pusha
pop
and
test
sub
adc
xchg
adcl
mov
add
sub
shlb
mov
cmp
adcb
jns
out
leave
adc
dec
loop
mov
dec
je
mov
cmp
xchg
dec
pop
dec
jbe
mov
enter
add
jo
dec
jmp
popa
loop
dec
cmpl
xor
shll
xchg
or
push
mov
sbb
xor
push
mov
lcall
hlt
aam
inc
inc
and
add
in
imul
and
stc
cwtl
wbinvd
test
inc
xor
push
xor
jno
jne
and
rolb
shrl
add
stos
dec
adc
in
sub
cmp
insl
mov
adc
push
out
pop
movsl
pop
adc
adc
lds
sbb
cmc
fs
add
aaa
or
mov
or
sbb
jne
cs
cs
cmp
or
adc
fadds
add
or
dec
insl
sbb
xchg
scas
lods
push
leave
add
mov
clc
imul
push
and
add
sbb
or
inc
ret
and
cmp
jbe
add
fucomp
in
pop
push
fsts
test
push
rcl
aad
pop
aad
inc
lcall
sar
mov
cs
nop
imul
push
repz
test
daa
sbb
sub
mov
push
add
gs
movb
insl
xchg
rolb
outsb
sub
xchg
dec
adc
pop
adc
mov
insl
sbbb
push
xchg
je
dec
xchg
push
push
mov
add
push
gs
movsl
aaa
mov
xor
dec
dec
add
leave
in
lret
adc
or
adc
pop
mov
subl
pop
int3
adc
daa
pop
dec
pusha
jno
inc
dec
dec
pop
xchg
faddl
out
adcb
in
or
adc
push
arpl
and
and
test
inc
dec
mov
xor
xor
sarl
add
aad
mov
dec
xchg
loope
push
loop
and
rolb
test
jne
and
adc
push
adc
add
push
and
jle
cmp
sub
sub
adc
cmp
jo
add
aaa
bound
repnz
xor
adc
int3
shlb
and
sub
jo
stc
rol
jno
mov
scas
adc
pusha
out
sbb
xor
inc
or
icebp
dec
arpl
popf
jo
mov
xchg
scas
stos
prefetcht1
mov
sbb
add
inc
xorb
push
or
jg
and
sub
lahf
and
addb
dec
jo
or
adc
jo
nop
and
mov
dec
sbb
xlat
stos
ret
xor
or
sbbl
sbb
xor
push
sbb
or
jb
pop
loope
cmp
jmp
mov
ja
rorb
pop
push
sbb
xor
fisttpl
add
push
repnz
xchg
test
inc
lods
shll
and
push
outsb
mov
mov
sbb
jo
addr16
mov
cmp
cmp
sti
nop
sbbb
adc
push
push
test
inc
pop
push
cmp
fcoms
sbb
jge
push
and
cmpsb
dec
add
add
xor
iret
xchg
pusha
xchg
inc
iret
shlb
pusha
or
sbb
cmc
mov
rolb
jle
outsl
and
mov
leave
inc
and
sbb
imul
imul
test
xor
call
sar
mov
mov
xchg
orl
movsl
rcl
cmp
lahf
loopne
test
pop
jns
cwtl
rolb
add
test
adc
orl
mov
icebp
idivb
inc
or
pop
adc
mov
push
inc
mov
and
sbb
negl
mov
mov
push
add
add
lahf
mov
clc
es
cmp
push
adc
jecxz
or
xor
cltd
imul
mov
les
mov
and
pop
xor
faddp
cmp
sbb
outsl
sub
into
push
and
pop
xor
jno
and
stos
les
xchg
push
mov
add
xor
sbb
jo
push
dec
rolb
je
xor
push
or
mov
add
and
dec
fucomi
inc
mov
inc
aam
rolb
aam
mov
xchg
cwtl
dec
arpl
mov
cmp
pop
jp
ds
adc
je
aas
adc
sbb
imul
push
lea
mov
xor
cmp
fldl
xchg
xor
cwtl
push
push
hlt
sbb
popf
inc
mov
push
xor
rcl
fists
push
inc
xchg
gs
adc
and
repz
add
ljmp
lods
dec
push
rol
inc
mov
js
xor
push
enter
jl
gs
sub
xchg
or
rcl
pop
and
and
je
js
mov
sub
mov
add
xchg
adc
int
test
inc
sub
or
rcl
ljmp
icebp
or
mov
lods
sti
push
xchg
push
adc
inc
add
push
xchg
imul
sub
scas
add
inc
loope
mov
inc
cmp
dec
add
imul
inc
cwtl
add
out
inc
add
sbb
cmp
lods
lods
loopne
fists
ficomps
mov
push
push
xorb
add
add
shrb
push
mov
lcall
xor
add
sbb
mov
jno
mov
mov
shlb
sbb
or
cmp
jno
ja
jbe
call
stos
push
pop
inc
mov
inc
add
scas
inc
addr16
mov
pusha
sarl
and
mov
pushf
or
ret
arpl
test
xchg
mov
xor
mov
dec
cs
push
dec
and
test
inc
dec
adc
arpl
pop
adc
movb
rcrb
mov
das
inc
ss
sub
xor
sbb
sbb
fisubs
les
cmpb
in
and
xchg
mov
ss
int
dec
pop
fnsave
adc
cs
sbb
or
xchg
xor
bound
sub
rolb
xor
fcom
fstl
mov
sti
and
es
in
mov
fistl
cmc
cmpsl
or
or
or
jne
mov
jp
repnz
mov
add
and
insb
push
popa
out
aam
xchg
and
daa
mov
jo
push
or
cmp
push
lret
popa
push
push
cltd
shlb
pop
adc
insl
out
movsb
inc
dec
je
mov
in
and
jb
sahf
pop
shlb
and
test
data16
inc
push
mov
cwtl
cmp
add
sbb
test
outsb
or
gs
and
adc
lds
jo
or
shlb
inc
and
cmp
and
add
or
add
aaa
shll
cs
pop
jl
dec
push
sub
or
aas
inc
mov
cwtl
mov
lods
push
mov
in
repz
jmp
add
inc
inc
shl
push
xchg
or
xchg
sub
aad
inc
adc
mov
mov
jno
mov
inc
pop
subb
dec
mov
jge
and
vminpd
or
pop
repnz
icebp
repz
insl
outsb
add
adc
push
jecxz
addr16
nop
inc
pop
add
push
add
or
or
rcrl
mov
pusha
rolb
jns
orb
sub
xchg
ret
test
flds
jb
shrb
or
dec
or
pop
stc
add
inc
xor
push
mov
jecxz
push
addr16
mov
shll
or
cmpsb
lods
loop
rclb
jmp
out
and
adc
sub
addb
lea
pop
xchg
jno
mov
mov
mov
popa
js
hlt
or
dec
and
jo
push
pop
sbb
add
dec
adc
and
pop
xchg
or
push
or
xchg
leave
sbbb
adc
sub
mov
fadds
enter
mov
imul
repz
js
xor
dec
or
dec
aad
or
aad
jecxz
gs
popa
stos
enter
ret
sbb
dec
or
test
and
data16
int
pop
xchg
data16
js
adcb
inc
xor
roll
addl
jmp
mov
orl
sub
or
sub
popf
pusha
push
scas
sbb
or
cmp
inc
xlat
add
mov
rolb
jne
mov
jecxz
mov
roll
int3
movb
dec
add
adc
push
dec
inc
ja
nop
rolb
xchg
cmp
mov
daa
push
add
push
jo
dec
rcl
mov
loopne
dec
jg
cmc
or
or
sbb
and
rcll
and
or
inc
iret
imul
test
cmp
jo
mov
push
or
jg
adc
stos
add
mov
psubsb
push
loope
fdivl
js
push
mov
mov
sbb
xchg
cmpsl
fiadds
adc
test
push
xchg
add
movsl
loopne
mov
cmp
dec
or
push
dec
lea
dec
test
sub
shrb
dec
mov
in
mov
sbb
cmpsb
add
inc
test
mov
addl
add
cmp
push
jecxz
jns
inc
rolb
xor
inc
mov
adc
lret
add
ss
sub
push
repnz
out
test
or
cmpsl
push
xchg
mov
adc
xor
sub
fimuls
cmc
stc
imul
inc
ror
test
add
subb
mov
mov
mov
xchg
inc
dec
cmp
lret
inc
or
mov
adc
mov
repnz
inc
pop
ret
mov
add
xor
and
sub
sbb
les
adc
rol
insb
insl
shl
push
inc
sbb
dec
mov
in
add
add
sahf
and
mov
jg
cwtl
lods
inc
or
pop
push
ret
xchg
sub
add
orb
push
mov
cmp
cs
js
rclb
pop
mov
cmpsl
pop
leave
ja
push
shlb
jne
leave
push
sub
adc
test
cmpl
or
jnp
or
adc
inc
stc
jle
sub
jo
int3
sbb
push
push
jle
push
repnz
xor
add
movsl
adc
push
push
dec
push
or
popa
shrl
loope
and
jo
popa
mov
shlb
jg
sbb
add
xchg
outsl
add
mov
push
sub
stos
dec
decb
fbstp
adc
loop
leave
cmp
dec
test
ja
ret
pop
mov
lsl
int3
adc
add
std
dec
mov
lret
fisubs
inc
andb
cs
or
sub
dec
push
xchg
popf
iret
xchg
mov
mov
dec
push
sbb
jg
test
xchg
test
add
rcrl
jnp
lds
add
xor
stos
pushf
insl
or
lods
lret
add
iret
or
adc
sbb
push
or
mov
xchg
mov
ret
lock
cwtl
in
roll
movsb
enter
inc
add
xchg
pop
movb
pop
movsl
insb
pusha
push
ret
push
enter
inc
out
das
decw
add
aaa
aaa
cmpl
sub
mov
sbb
jnp
pop
push
sub
sub
pop
mov
jne
filds
xlat
sub
fsubs
add
fcmovb
aad
in
jg
adc
mov
push
and
add
sub
sbb
sbb
sbb
xchg
out
nop
xor
jecxz
scas
nop
or
insb
fisttpll
adcl
inc
ret
dec
cmp
xor
adc
xor
jae
add
mov
sbbb
rolb
sbb
pop
aaa
and
cltd
inc
dec
xorb
ret
xorb
push
add
mov
les
sub
dec
stos
pop
xchg
popl
mov
cmc
pop
and
cmp
add
push
pushf
mov
mov
or
les
nop
orl
rolb
mov
add
push
pop
sub
push
mov
imul
lcall
and
lds
xor
fwait
mov
mov
pop
frstor
push
lahf
push
nop
pop
add
mov
and
popf
cs
ret
or
adc
cmp
jp
add
adc
push
sub
insl
pusha
inc
cmp
adc
shl
xor
mov
dec
inc
addb
sub
cmpb
call
or
or
rcll
inc
jmp
imul
or
or
pop
push
lret
subl
insl
or
add
or
adc
inc
test
jnp
jno
stos
rolb
decl
imul
cltd
shrb
push
sbb
or
sub
rcl
movsb
or
sbb
mov
lret
xchg
shrl
fisubl
add
cmpsb
dec
jne
cmp
lret
pushf
sbb
addl
ss
xor
xor
adc
addb
pop
leave
rcrl
in
xchg
mov
out
xlat
push
push
inc
add
xor
mov
adc
adc
cmp
call
or
or
loop
inc
fs
pop
mov
mov
icebp
xchg
in
pop
xchg
push
dec
dec
or
stos
jnp
lea
je
or
lcall
loope
xchg
mov
cmp
test
fldenv
leave
or
add
cmpb
or
jmp
sub
xchg
test
xor
hlt
mov
mov
test
fstl
subl
jae
sub
xor
aad
dec
js
pop
add
add
and
adc
or
fsubrl
mov
ret
repz
test
or
mov
sub
sub
lret
or
aaa
cs
arpl
lret
int
enter
cli
cmp
xchg
and
push
jbe
pop
adc
add
mov
lahf
mov
sub
or
inc
push
lea
shll
nop
cmp
mov
sbb
jmp
and
in
xlat
lret
pop
cmc
rol
pop
xchg
adc
mov
fimuls
outsb
fisttpll
sub
fs
leave
popa
xchg
dec
addb
imull
push
aas
punpckhdq
or
jecxz
xor
pop
stc
les
or
cmp
les
lds
test
imull
adc
adc
sub
add
cmp
jne
lds
mov
bound
add
mov
lods
mov
mov
push
imul
aad
nop
loop
and
or
stos
ficoml
cmp
push
je
xchg
inc
pop
cmp
xchg
pop
push
in
shl
lret
movsb
jno
in
sub
xchg
jo
sub
xor
or
mov
pop
dec
push
test
aas
add
lods
or
inc
inc
sti
xchg
jbe,pn
fldl
rclb
sub
repz
mull
adc
sub
jmp
shlb
iret
cmp
pop
add
fisubl
test
sub
add
movsb
mov
pop
popa
adc
jb
movsl
inc
xchg
mov
arpl
rolb
mov
es
mov
mov
xor
lods
pop
orl
int3
lret
inc
add
and
add
movsl
or
or
pop
add
cmpb
mull
mov
xor
pop
sub
pusha
or
mov
push
roll
add
arpl
push
inc
loopne
adc
andb
adc
std
push
xchg
push
adc
into
cmp
push
movsb
stos
scas
mov
adc
and
cmpsl
ret
stos
add
bnd
inc
or
add
jb
jno
pop
add
jne
fwait
inc
push
lcall
mov
pusha
inc
push
dec
pop
or
inc
xchg
pop
inc
xor
or
xor
lret
dec
andl
repnz
pop
mov
inc
pushf
pop
jne
mov
mov
addr16
in
xchg
cmp
xchg
movsl
imul
data16
std
pop
xor
les
pop
mov
les
cld
scas
xchg
mov
jo
addb
xor
and
inc
adc
mov
dec
push
adc
dec
test
dec
inc
inc
xor
sbb
pop
insl
or
sbb
inc
jecxz
in
lods
dec
push
repz
inc
pop
daa
jno
push
sbb
adc
adc
or
lret
iret
adc
and
xchg
xchg
test
xorl
mov
iret
insl
jbe
and
xchg
dec
pushf
lret
push
test
je
dec
push
add
call
add
sub
mov
and
sbb
xchg
pop
aad
push
sub
jb
add
mov
pushf
xor
xchg
or
add
mov
inc
dec
add
xchg
or
pop
test
push
xchg
pop
xor
add
ret
int
orb
or
and
imul
cwtl
ja
lods
test
xor
imul
inc
rorb
and
add
pop
icebp
pusha
mov
adc
pop
lret
push
jns
add
fwait
pusha
lods
stos
popa
lea
dec
shll
cmpsb
mov
test
add
add
subb
inc
and
adcb
mov
in
pop
add
sub
adc
movsl
pop
dec
sbb
and
add
push
add
xchg
mov
or
test
in
or
pop
cwtl
cs
inc
fwait
sbb
sub
mov
shlb
call
or
push
or
cmpsl
mov
mov
mov
std
add
lahf
mov
push
jno
aaa
add
add
bound
pop
cld
add
sub
adc
inc
xchg
pop
sbb
push
stc
pop
sub
add
mov
mov
imul
sahf
sub
inc
add
jnp
or
lds
bndldx
cmpsl
in
je
add
sti
xor
data16
cmp
test
mov
out
add
idivb
rol
sub
xchg
adc
sub
mov
adc
ljmp
inc
sub
add
mov
push
xlat
jecxz
sbb
sub
mov
xchg
cwtl
bound
out
mov
push
xorb
adc
jno
jmp
push
inc
mov
pop
pop
cmp
sbb
dec
roll
js
xchg
jnp
mov
mov
mov
je
xor
add
pop
nop
cltd
mov
pop
outsl
xchg
shlb
mov
or
pop
sahf
imul
leave
aad
add
arpl
fs
cmpsb
es
pop
or
cmp
dec
les
stos
push
fcoms
loopne
or
push
mov
xchg
subb
xorb
mov
cmpsl
popa
and
test
pop
imul
cmp
movsl
pop
cmpsl
rorb
jns
push
jne
or
mov
pop
outsl
lcall
sbb
lcall
inc
cmc
add
adc
dec
xchg
adc
aam
or
outsb
mov
add
cmp
add
and
lahf
and
fs
sbb
inc
jb
mov
xchg
sbb
rcrb
mov
shrb
mov
inc
push
sub
inc
and
lret
mov
adc
add
pusha
rolb
vfrczps
sbb
cmpsl
bound
dec
push
jmp
jbe
jne
xor
sub
or
subb
pop
adc
push
xchg
cs
pop
cmp
lock
insb
pop
and
inc
nop
xor
sbb
add
cs
popl
addb
sub
inc
add
mov
dec
rol
inc
mov
xchg
test
mov
call
pop
sbb
adc
cmp
push
mov
adc
mov
push
or
inc
mov
cmpsb
mov
stc
and
aad
or
or
mov
call
sbbb
bound
sbb
inc
sub
sbb
loope
or
add
sbb
sub
mov
ret
sbb
dec
sub
cld
add
rorb
add
js
adc
xchg
movsb
mov
add
jne
jnp
lods
or
cwtl
dec
cs
cmp
lods
addr16
mov
pop
addb
arpl
jb
and
inc
dec
sbb
iret
jae
push
sub
xchg
pop
or
bsf
cs
ltr
enter
rolb
and
add
add
add
movsl
repnz
lods
pusha
mov
inc
cs
sahf
pop
rcrb
mov
dec
popf
sub
cmp
dec
inc
and
and
repz
sbb
leave
orb
adc
nop
nop
fldcw
lds
shll
pop
dec
loope
cmp
xchg
adc
mov
adc
and
inc
add
or
shl
out
push
sbb
lods
or
aas
or
jmp
js
int
dec
dec
arpl
xor
cmpsb
sub
or
pmullw
and
xchg
seto
shll
push
mov
xor
add
stos
sbb
pop
jbe
push
push
and
fldenv
or
inc
ret
rclb
sub
rcl
aaa
aad
mov
add
cmp
filds
popa
in
cs
adc
leave
out
add
add
or
outsb
xor
lods
test
jno
sub
lret
dec
push
add
dec
mov
dec
pop
or
negl
cmp
aaa
and
inc
and
push
mov
xchg
popa
mov
push
jl
push
popf
mov
clc
adc
andl
std
insl
idivl
mov
or
mov
or
aaa
cs
popa
ret
fldcw
add
sbb
lods
mov
mov
je
es
add
ljmp
xchg
mov
mov
pop
push
and
push
lds
aas
pop
add
mov
jae
rorl
subl
pusha
inc
add
sarb
mov
add
mov
sbb
shll
push
aam
xchg
inc
add
xor
add
mov
adc
mov
mov
add
outsb
popf
mov
or
mov
cmp
inc
and
test
addl
les
and
in
pop
inc
lds
cmp
xchg
jle
or
and
stc
and
push
cmp
and
cltd
mov
cmp
adc
cltd
jno
andb
pop
movsb
mov
or
mov
xor
pusha
sub
bound
sbb
jne
jno
xorl
fs
add
scas
cwtl
dec
adc
inc
test
adc
daa
sti
sbb
cmp
jns
jns
nop
xchg
in
movsl
or
in
loop
inc
mov
int3
int
xchg
pop
sbb
push
insb
inc
sbb
push
adc
cs
jmpw
add
push
fwait
xor
mov
sbb
gs
cwtl
xor
fwait
sbb
dec
loop
pop
inc
mov
orb
pushf
adc
imul
inc
popf
sub
sbb
clc
dec
mov
mov
sub
pop
lret
add
xor
shll
jmp
das
out
cmpsb
jno
dec
mov
xchg
cmp
ret
mov
inc
add
pop
aaa
and
stos
pusha
sbb
test
imul
add
movsb
aad
aam
aam
and
hlt
pusha
xchg
rcrl
enter
dec
adc
enter
lods
enter
mov
and
mov
lcall
or
aad
leave
and
and
imul
dec
mov
mov
cmp
sub
adc
add
xchg
xor
sbb
add
sbb
imul
jecxz
rclb
test
xor
pop
sub
andl
nop
arpl
inc
jle
sbb
jb
xchg
rclb
bound
mov
push
mov
or
aaa
sub
xchg
shrb
adc
mov
inc
popa
jmp
ljmp
add
popa
pop
xorb
aad
nop
cmp
lret
pop
add
lret
cmpl
push
mov
mov
stos
add
or
iret
jg
jecxz
inc
dec
adc
inc
add
jge
add
sahf
in
adc
push
in
sub
fldl
inc
test
ret
adc
and
push
jecxz
sbb
mov
xor
dec
pop
mov
add
jns
int
loope
jbe
addr16
imul
mov
pop
push
sub
gs
push
adc
cmp
sub
ljmp
or
rorl
push
inc
movsb
movsl
mov
inc
mov
daa
leave
mov
cmpsb
and
sub
in
and
or
inc
test
maxps
ljmp
dec
shll
mov
push
sbb
sub
pop
test
loop
xchg
sbb
sub
jno
imul
imul
push
cwtl
movsl
mov
pop
sbb
inc
fnsave
adc
jo
and
inc
pop
rolb
pop
mov
lods
add
xor
gs
rcr
jb
movb
xchg
in
jo
rolb
mov
insl
dec
pop
enter
mov
inc
scas
pop
and
adc
mov
inc
cmc
mov
jbe
subb
jns
in
and
pop
push
and
pop
sub
lret
sbb
scas
add
out
repz
jne
movb
sub
sahf
and
inc
mov
add
pop
bound
sbb
insl
add
fbld
add
pop
sarb
jbe
jb
push
sahf
aaa
rolb
mov
sbb
add
lods
stos
mov
cmp
mov
and
cwtl
xchg
xchg
js
popa
pop
sub
push
and
sub
adc
cmc
push
push
addr16
push
cmpsb
inc
sbb
sarb
test
push
lret
cmp
jno
lods
out
xlat
cmp
rcl
jle
mov
aas
movsl
adc
pop
push
test
push
div
pop
mov
cltd
shlb
inc
push
push
mov
pop
dec
xchg
andl
add
xchg
adc
cltd
inc
inc
les
fidivl
xor
dec
and
mov
jne
and
sbb
mov
mov
add
push
or
push
cmp
push
test
push
shll
push
and
cmc
xchg
lods
movsb
xor
inc
xchg
loopne
enter
orb
outsb
dec
sub
outsl
dec
inc
add
fcmovnbe
dec
pop
inc
push
and
jg
push
xor
pop
test
iret
add
and
dec
push
test
stos
xchg
push
push
dec
loope
inc
sub
cwtl
mov
sbb
xor
inc
jecxz
add
shrb
or
inc
fimuls
adc
xor
sub
jne
daa
dec
loopne
das
xor
add
sbb
leave
repz
pop
js
xchg
and
pop
pop
loop
inc
xchg
adc
and
loope
das
mov
and
cwtl
test
jmp
pop
mov
ror
push
stc
mov
or
xchg
cmp
shlb
pop
je
and
dec
imul
push
and
push
sub
gs
inc
mov
cmp
add
je
aaa
xchg
or
mov
xor
inc
cs
pop
sbb
mov
test
add
dec
xor
push
enter
or
test
adc
push
call
and
add
rolb
jno
dec
or
mov
test
cmpsl
sub
sub
xchg
insl
mov
fnstcw
shll
leave
popf
and
movmskps
lock
fbstp
add
out
cmp
imul
sbbl
inc
sub
push
sti
lods
add
stos
out
fldcw
and
xor
inc
stos
lret
mov
mov
mov
and
popa
mov
mov
pop
je
lahf
mov
inc
dec
sub
popa
rorl
loopne
pop
fadds
aaa
mov
xor
add
mov
push
inc
and
push
push
jo
xor
dec
sbb
dec
adc
or
rol
xchg
xor
pop
movsl
add
stos
push
nop
je
mov
aaa
add
icebp
mov
gs
mov
inc
adc
clc
or
lret
test
mov
cs
fwait
pop
pop
pop
push
aas
andb
push
aam
add
cwtl
les
add
pop
pop
add
pusha
addr16
adcb
lahf
sbb
mov
jne
inc
sub
or
leave
mov
cmp
decb
xchg
xchg
xor
aad
mov
sub
lret
movsb
add
mov
pop
jb
xchg
mov
cmp
imul
cltd
mov
mov
std
fmuls
mov
nop
fnstcw
rcll
xor
and
les
testl
jo
adc
in
mov
mov
adc
mov
inc
cs
sub
insl
test
sbb
or
roll
adc
adc
imul
rclb
enter
jno
outsb
test
xor
and
add
pusha
cmpsb
leave
pop
push
inc
pop
repnz
cli
pop
mov
cmp
xchg
test
cmp
pusha
mov
adc
or
out
sub
int
lock
dec
out
push
scas
iret
add
add
andl
rcrb
in
cmpb
inc
push
sub
gs
stos
mov
and
in
sbb
and
add
dec
lret
inc
sbbb
and
insb
loop
pop
lret
movsl
incb
sbb
fmul
cld
cmc
push
adc
pop
adc
push
add
mov
fiadds
dec
loop
shlb
rolb
test
jl
rclb
pop
rclb
dec
sbb
jb
push
or
addr16
sar
lds
jnp
arpl
push
xor
cmpsb
ja
inc
fadds
test
add
mov
cs
lret
test
add
push
mov
adc
pop
mov
inc
lods
or
adc
in
lods
mov
into
pop
xchg
xor
inc
push
lods
add
loope
inc
std
stc
rcl
cld
fbstp
test
loop
and
and
xchg
imul
add
xor
or
repz
sbb
push
inc
sbb
adc
push
arpl
adc
out
xchg
or
gs
adc
sub
dec
pushf
pop
and
pop
or
cmc
sub
imul
inc
rorl
lods
test
inc
and
cwtl
xor
shlb
mov
sub
add
aad
or
add
inc
fisttpl
outsl
xor
movsb
push
lds
jg
mov
inc
std
mov
sbb
sbb
jmp
xor
lcall
call
inc
mov
les
xchg
cwtl
push
scas
dec
push
inc
or
jmp
roll
nop
adc
push
in
jp
sahf
sub
scas
dec
movsl
dec
out
arpl
pop
push
cltd
mov
xor
push
out
cmpsl
pop
mov
add
xchg
cmp
add
and
pop
xor
xor
stc
loopne
adc
add
dec
xor
inc
and
inc
sbb
cmp
addl
mov
lds
jno
insl
in
sub
xchg
or
jne
cmp
in
dec
faddl
push
xor
cmp
bound
testl
leave
mov
pop
xor
adc
jle
dec
cmp
ucomiss
sbb
je
adc
push
dec
mov
adc
test
mov
les
sbb
pop
leave
movsl
aad
imul
repnz
dec
pop
dec
lea
push
iret
dec
int
mov
lea
add
adc
cmp
sub
sub
arpl
xchg
or
cmc
push
mov
and
adc
addb
jb
mov
pusha
xor
or
imul
test
arpl
or
push
add
or
or
sub
out
ret
jnp
nop
or
jns
xchg
and
mov
push
mov
and
and
pop
sti
dec
inc
mov
mov
and
stos
in
fcmovne
xor
ret
mov
sub
or
pop
dec
stos
push
push
testl
push
mov
dec
xchg
aaa
or
cmp
popa
sbb
sub
fistps
pusha
aam
popa
inc
in
mov
pop
or
xchg
sub
jmp
push
dec
testb
push
add
jno
adc
jo
mov
and
pop
adc
shl
dec
add
push
push
and
sub
cmp
cmp
sub
cwtl
pop
sti
sub
mov
add
subb
sbb
jo
xor
shlb
mov
jae
push
push
jno
iret
subb
fnsave
ds
pop
jg
mov
push
mov
ret
or
daa
or
or
loop
pusha
add
mov
jmp
cmp
lea
adc
adcl
movsl
or
mov
roll
xlat
or
mov
add
iret
push
mov
inc
and
xor
dec
sbb
mov
push
jl
outsb
mov
sbb
insl
stc
iret
mov
sbb
sbbb
jecxz
dec
push
insb
sub
popf
cltd
xchg
dec
and
out
pop
repnz
in
cmpsl
xlat
sbb
dec
cmp
jbe
fsubl
cwtl
push
aas
mov
ja
cmp
mov
and
addl
dec
fisttpl
mov
pop
pusha
fisttpll
jb
mov
or
add
xor
inc
les
cmpsb
aas
jge
sbb
aam
mov
cmc
xor
rcrl
scas
or
leave
xor
popf
xchg
inc
or
jno
or
test
inc
aas
ljmp
stos
ljmp
mov
imul
or
je
inc
int
sbb
add
pop
jb
dec
dec
or
sbb
aad
sbb
mov
adc
movl
out
ja
pop
int
xor
rolb
sbb
mov
or
push
and
mov
stos
gs
arpl
sbb
add
sub
or
adcl
add
mov
sbb
sub
shll
inc
inc
movsb
xor
fimull
fisttpll
push
or
add
xchg
pop
mov
xchg
push
iret
shlb
je
ja
inc
test
movsl
or
xchg
and
xchg
jmp
mov
xchg
and
xor
or
mov
test
push
in
in
cmp
sbb
xchg
cmp
xor
lea
in
or
cmpl
hlt
push
pusha
xchg
popa
scas
add
loopne
xchg
es
nop
dec
xor
in
dec
or
inc
sub
pusha
orb
pop
movl
push
mov
sbb
xor
mov
aam
jns
popf
and
mov
xchg
add
inc
les
xchg
dec
inc
or
adcl
push
lock
xor
or
cld
xor
mov
and
cmp
and
dec
jmp
rorb
mov
insb
inc
popa
jecxz
cmpsl
loope
add
add
xchg
xchg
daa
sub
sbb
cwtl
pop
mov
mov
push
xor
inc
or
repz
fadds
bound
popa
xor
and
je
dec
add
inc
mov
les
inc
or
imul
sub
fnstsw
test
cmpb
fsin
mov
arpl
cmpsb
stos
les
in
test
sbb
add
jl
roll
dec
dec
shrb
xchg
out
inc
test
jg
je
mov
ficompl
xor
es
pop
xchg
jmp
add
sbb
sbb
inc
or
out
or
fiaddl
shl
int
das
mov
xor
add
jb
inc
test
cmc
lret
inc
add
jo
push
je
adc
cwtl
lea
gs
push
cmpb
mov
mov
adc
mov
ljmp
fwait
mov
add
mov
jmp
cmpsl
sub
dec
push
je
mov
and
inc
jae
or
and
add
or
push
push
dec
pushf
mov
in
dec
and
popa
sub
addr16
jbe
ds
push
rolb
cmp
xor
cltd
jne
inc
dec
jecxz
arpl
push
xor
nop
adc
adcl
nop
andb
jne
or
and
add
xor
mov
jecxz
and
stc
cmp
dec
and
popf
dec
leave
adc
mov
dec
push
das
add
add
inc
and
and
mov
push
and
jno
or
push
mov
pop
jne
push
xor
sbb
repz
dec
inc
out
jo
adc
mull
mov
test
add
dec
pop
jo
xchg
xchg
mov
int
sub
lods
das
sbb
jo
mov
mov
jge
call
jmp
call
out
orb
rolb
aam
mov
sub
add
and
xor
adcl
roll
jne
add
nop
inc
xchg
and
test
sbb
leave
adc
or
mov
mov
sbbl
dec
inc
or
jo
mov
or
cwtl
push
cmp
dec
adc
imul
sbb
sbb
cs
push
cmpsl
fistpl
push
or
fisttps
fnsave
jb
adc
sbb
sbb
fwait
imul
inc
not
outsb
popa
subb
rorl
or
mov
inc
mov
sbb
or
push
test
stc
inc
add
cmpsb
mov
mov
daa
dec
pop
sbb
repnz
add
call
ja
jo
shrb
add
int3
push
insb
add
cmc
inc
int
dec
adc
je
sub
nop
orb
rolb
pop
nop
popf
lret
adcb
add
inc
inc
sbb
test
inc
scas
out
pusha
xchg
lea
loop
inc
test
loope
cmpsl
movsl
popa
bound
push
mov
jmp
xchg
add
and
add
adc
and
jbe
rolb
and
jns
hlt
adc
or
and
mov
imul
lock
and
pusha
test
imul
icebp
adc
pop
aad
fsubs
jge
mov
or
das
push
rorb
add
xchg
sbbb
cmpsl
add
sbbb
xor
notl
xor
test
jns
loop
add
lcall
dec
xor
cmp
out
dec
jne
add
jb
sbb
rcr
sub
xchg
cmpsb
pusha
es
push
mov
push
vpor
mov
fwait
adc
arpl
add
adc
and
stos
dec
adc
xor
fisttpl
popf
adc
outsb
and
lea
dec
imul
aaa
xchg
sbb
inc
sbb
adc
sarb
pusha
inc
ficoml
cmp
ret
push
popa
adc
inc
rcll
lods
add
inc
leave
je
cwtl
test
repz
sub
sbbb
push
sub
cmp
test
in
push
push
mov
inc
mov
push
mov
cmpsl
adc
test
or
xchg
cmp
inc
sub
shrb
sbb
jns
push
inc
leave
repz
cwtl
adc
aad
andb
adcb
and
adc
or
xor
or
movl
pop
les
or
pop
and
cmp
rolb
push
xchg
cmp
xor
inc
xor
and
sbb
push
mov
and
adc
fmull
pop
dec
inc
mov
call
mov
insb
or
inc
ret
cltd
cwtl
mov
mov
mov
jmp
mov
scas
mov
sbbb
sahf
inc
pusha
adcb
movsb
sbb
fwait
mov
or
lret
int
sub
test
cwtl
dec
dec
xchg
xchg
inc
and
lods
lea
or
in
mov
arpl
inc
lahf
and
stos
add
xchg
loopne
push
pop
mov
mov
jge
cmpl
inc
xchg
or
sbb
sarb
push
ret
roll
and
jecxz
rorl
sbb
inc
shlb
jno
add
aam
xor
cltd
std
mov
shrl
icebp
xor
lret
pusha
or
imul
bound
push
add
outsl
or
add
sti
les
sbb
mov
lock
aaa
addl
push
cmpsb
cmp
addl
sbb
adc
addb
xor
sbb
push
fadds
and
adc
adc
jo
cwtl
rorb
lret
sbb
fdivrp
scas
jns
mov
outsb
scas
repz
pop
sub
mov
mov
push
dec
add
xchg
mov
add
stos
push
dec
mov
jmp
sub
jne
hlt
xor
add
lcall
xor
popa
add
movb
jo
fstl
add
cmp
test
add
push
mov
cwtl
add
inc
push
pop
imul
add
test
add
jle
jo
cwtl
cmpsb
lock
es
push
out
xchg
or
push
cmpsl
add
lock
cltd
rorb
pop
lea
add
std
notb
inc
les
nop
leave
xchg
out
push
mov
adc
push
mov
xor
xchg
xchg
stc
ljmp
lods
and
fdivs
outsb
leave
les
ret
and
add
in
in
inc
aad
add
insb
jmp
adc
mov
inc
jb
inc
mov
int
inc
gs
mov
in
mov
js
pop
stos
or
sbb
or
stos
and
jg
sbb
mov
mov
scas
push
fsubrl
leave
pop
jae
movsl
dec
sub
ffree
inc
mov
xchg
nop
inc
add
cwtl
mov
sbb
mov
xor
mov
mov
add
pushf
mov
imul
and
add
ljmp
sub
arpl
jno
repnz
outsb
test
dec
imul
fstpt
inc
dec
or
aaa
je
scas
sub
cmpsl
cmpsl
dec
adc
or
xorb
stos
mov
pop
pop
add
aam
add
mov
adc
addl
andl
int3
xchg
mov
test
pop
shrl
push
push
or
push
popf
jmp
adc
repz
aad
inc
sbb
add
xor
movsl
shr
pop
sbbl
sub
pop
stc
add
jo
lcall
shrb
out
and
bnd
push
jnp
push
push
iret
jbe
rcrl
ljmp
xor
mov
pop
and
and
add
push
and
pusha
imul
mov
lds
push
or
add
mov
mov
xchg
add
adc
add
pop
adc
push
and
imul
loop
add
lods
dec
outsl
push
xor
rolb
dec
addr16
andb
lods
inc
inc
push
out
jno
mov
pop
jae
test
push
roll
sbb
push
fwait
inc
jle
adc
adc
movb
cwtl
stos
cmpsb
or
pop
mov
mov
and
iret
xchg
addr16
fldcw
mov
add
xchg
mov
sbb
sti
test
dec
dec
icebp
or
mov
cmp
insl
ljmp
dec
push
sbb
dec
cmp
or
mov
mov
xorb
adc
or
add
pushl
js
mov
inc
cmc
in
dec
xor
jae
push
dec
or
enter
jns
test
nop
out
push
lcall
sbb
jno
pop
loop
adc
test
dec
inc
push
repz
mov
mov
xor
mov
mov
cmc
adc
add
sub
sub
jnp
lea
test
mov
adc
and
in
imul
adc
scas
lods
rcrl
inc
rol
ljmp
add
cmpsl
mov
iret
adc
xor
inc
add
and
or
leave
adc
es
fists
dec
pop
frstor
adc
sub
leave
sub
cmp
sbb
push
xchg
nop
push
and
jmp
cmpb
subl
test
es
sub
cmovo
add
sbbl
decl
xor
mov
in
xor
adc
inc
xchg
sub
sub
sbbl
pop
bound
scas
mov
imul
ljmp
mov
nop
icebp
fistpl
or
roll
imul
pop
adc
adcl
adc
mov
add
cmp
dec
add
subb
ret
inc
jb
jg
add
test
add
and
stos
jne
sub
adcb
dec
add
mov
inc
stos
jns
and
adc
jbe
push
rclb
add
fcom
je
popa
out
fimull
sbb
jbe
nop
dec
insl
add
mov
movsb
xor
rol
sub
mov
push
mov
xchg
inc
dec
roll
or
lods
xchg
inc
fisubl
jnp
or
lea
sahf
dec
add
sbb
or
scas
xor
mov
lods
out
ret
xor
sbb
mov
and
cwtl
pop
and
mov
add
mov
pop
xchg
mov
pop
adc
mov
pop
sbb
arpl
xchg
lret
sub
inc
out
adc
xchg
or
ljmp
cmp
inc
add
or
pop
orb
scas
outsb
int
or
pop
push
inc
mov
pop
ror
add
dec
jmp
lcall
cmpsb
test
mov
mov
jmp
ds
pop
add
sub
add
lods
arpl
jne
dec
cmp
mov
dec
sahf
das
fwait
ja
xor
xchg
xchg
dec
push
ds
rcl
scas
nop
pop
into
xor
loopne
push
andb
gs
dec
xlat
fcomi
inc
pusha
orb
loopne
jns
cltd
fldz
xchg
add
dec
and
pop
adc
and
or
test
repz
aad
dec
sahf
inc
or
popf
xchg
push
rolb
js
nop
cmpsb
repz
int3
add
int
mov
or
call
mov
or
push
xchg
neg
ret
and
jmp
push
push
movsl
int
adc
dec
mov
aam
xchg
dec
pop
jo
punpckldq
rol
std
lock
mov
lods
jle
add
rol
sbb
nop
sbbb
sbb
jo
inc
lods
lea
mov
jae
pop
addr16
mov
add
or
mov
sub
add
stos
jno
test
inc
mov
pop
sti
cmp
jo
sub
inc
sbb
jae
pop
and
in
push
sbb
sbb
push
adc
sbb
fisubs
inc
or
mov
or
pop
cmp
icebp
pop
mov
je
and
and
mov
inc
popf
mov
or
in
xor
dec
idivl
mov
mov
xor
test
jmp
adcb
adc
jge
xchg
push
mov
adc
xchg
xchg
data16
data16
gs
sub
addb
pop
pop
cmc
mov
lahf
mov
push
xor
add
xor
add
daa
mov
cmpsl
repnz
aas
cs
xchg
lcall
aam
or
dec
sbb
outsb
test
cwtl
and
mov
add
push
pop
mov
mov
shlb
mov
rol
xor
dec
pop
sbb
scas
daa
mov
aad
mov
test
cmp
movsb
or
sti
lret
sbb
test
test
gs
lds
outsl
rorb
int
sti
xchg
xchg
cmp
sbbw
aaa
pop
adc
add
inc
adc
jp
mov
addb
out
push
push
stos
mov
pusha
pop
add
pop
add
fs
xor
movups
or
pop
sbbl
jg
leave
adc
xchg
add
mov
or
pop
sahf
imul
cmp
push
rolb
test
inc
fdivrs
pop
fwait
inc
or
add
inc
add
rolb
shrl
test
dec
add
stos
add
or
and
sub
fwait
dec
adc
iret
dec
mov
sbb
xlat
xor
imul
jnp
test
mov
pushf
inc
and
pop
insb
popa
and
mov
mov
mov
pop
pop
and
imul
xor
add
push
pop
mov
popf
sbbb
fwait
mov
adc
mov
stc
cs
aaa
add
popa
bound
ficompl
jno
adc
push
mov
nop
and
hlt
xchg
daa
mov
adc
insl
cmp
push
icebp
enter
add
pop
aam
cmp
and
jno
ret
jno
inc
xor
adc
push
mov
ljmp
mov
stos
and
fiaddl
inc
sub
xchg
mov
xor
enter
iret
jl
add
lods
or
rorb
adc
xor
and
sbb
dec
push
pop
sbb
add
inc
sub
roll
sbb
sbb
arpl
pop
or
dec
test
mov
xor
iret
or
mov
add
cltd
jno
lcall
arpl
fnstcw
les
out
sub
dec
sub
sbb
mov
mov
mov
push
cmp
dec
sahf
arpl
xchg
and
test
mov
mov
add
and
sbb
js
push
jb
mov
adc
out
rolb
or
add
or
pop
push
test
xor
or
inc
imul
push
cmp
dec
cwtl
add
inc
mov
mov
mov
pop
pop
mov
mov
scas
dec
mov
push
popf
xor
mov
adc
mov
pusha
sbb
cmp
push
xchg
out
fyl2xp1
stos
sub
loopne
mov
pop
std
mov
adc
cmp
popa
mov
ret
xchg
jo
mov
xchg
push
dec
jge
add
jle
test
outsb
or
loopne
loop
jbe
insb
sbb
mov
push
adcl
jno
push
pusha
sub
dec
mov
pop
push
gs
test
shrb
dec
xchg
leave
xchg
add
or
and
repnz
test
adc
and
rorb
leave
test
add
push
jecxz
dec
pop
and
leave
pop
in
push
add
inc
mov
test
sbb
and
xor
movsl
mov
subb
pop
enter
rolb
and
mov
mov
add
add
sbb
mov
in
pop
sub
cmp
and
sbb
lods
je
ret
outsb
sub
or
lcall
das
dec
mov
add
movsb
mov
ljmp
loope
lds
sub
shl
fbld
test
cmp
scas
xchg
sub
loopne
sarb
jns
add
cmpsl
add
test
sub
push
lock
xchg
fs
popa
push
lea
inc
shll
xchg
jg
inc
fs
jne
in
stos
mov
sbb
inc
push
inc
xlat
add
and
cmc
lods
push
pop
cs
lea
adc
xchg
adc
repnz
pop
push
or
fwait
fwait
test
sub
and
pop
add
pop
add
dec
int
test
adc
pop
and
dec
mov
add
inc
mov
jmp
mov
adc
enter
popa
cmpsl
add
or
inc
lcall
jle
push
cmp
iret
add
add
out
push
push
push
xor
and
ret
cmp
add
xor
ud0
or
cmpb
fstpt
push
cmpsb
shrl
stos
sti
mov
out
mov
imul
les
inc
adc
enter
push
or
sti
mov
cmp
mov
jns
and
xchg
jo
je
and
xor
inc
insl
and
and
xor
mov
or
sbb
ret
adc
mov
xchg
push
xor
sub
mov
or
sbbb
mov
hlt
adc
mov
or
iret
dec
push
aam
add
test
pop
pop
and
xchg
or
or
pop
inc
dec
shrl
shlb
or
push
mov
movsb
aas
cmpsb
mov
sub
xor
or
rolb
adc
jge
test
or
mov
pop
scas
int
xchg
out
stos
sbb
loop
dec
pop
push
mov
pop
xchg
mov
xor
cmpsl
fsts
pop
jns
mov
daa
hlt
sbb
push
inc
lea
cmpb
xor
cmp
lahf
pusha
or
inc
add
and
jp
and
adc
dec
sbb
scas
mov
xor
rolb
mov
sbb
sub
dec
or
aad
imul
aaa
sbb
jne
xlat
ja
pop
jne
fs
addr16
adc
sub
sarb
dec
xchg
sbb
dec
int
loop
inc
sub
cmp
inc
adc
xchg
enter
loope
mov
add
xor
scas
jbe
jl
aad
or
data16
mov
aad
and
mov
add
subb
push
mov
and
ret
mov
std
test
dec
jne
bnd
add
mov
adc
mov
and
add
xor
rcll
add
je
movsl
add
test
jno
mov
rclb
mov
add
mov
inc
movsl
inc
dec
add
dec
rclb
sub
inc
pop
dec
shrb
jne
movsl
xor
lea
push
les
push
dec
xchg
out
or
mov
imul
mov
and
lret
mov
mov
adc
xor
xchg
stos
cltd
roll
mov
jae
loope
sub
sub
aas
fwait
add
popaw
mov
sti
pop
pop
xor
lds
aam
xlat
in
or
inc
subl
ja
jae
or
lods
repz
pop
add
mov
cmpsb
sbb
and
rorb
or
int3
inc
and
push
mov
roll
mov
jne
adc
rolb
lods
pop
adc
and
push
adc
dec
push
and
dec
sub
enter
repz
mov
and
ss
inc
scas
sbb
adc
sbb
inc
movsb
xlat
pop
add
adc
repnz
xor
push
push
adc
add
add
cmp
or
cwtl
sbb
xchg
xchg
and
xchg
nop
xchg
pop
test
push
loope
lcall
and
js
and
adc
push
add
stc
xchg
xor
sub
add
ret
mov
push
sub
xor
sbb
sub
adc
sub
sbb
jl
jns
iret
cmp
inc
adc
pop
or
dec
les
addl
add
mov
ret
sbb
loope
push
push
add
loope
hlt
inc
daa
and
mov
icebp
movsb
mov
out
push
xorl
ret
js
push
cs
enter
and
add
and
leave
arpl
adc
aaa
xor
sbb
inc
mov
xlat
mov
loope
xor
and
iret
scas
cs
test
sbb
test
cmpb
xorb
mov
xchg
daa
adc
mov
idivl
enter
push
sub
add
jo
shrl
cs
sbb
and
mov
inc
push
mov
jb
sbb
mov
sahf
mov
pop
add
or
inc
sahf
jge
xor
ds
pop
inc
dec
daa
inc
mov
sbb
add
rclb
inc
add
rcl
or
mov
push
aas
outsb
xorb
addb
sbb
push
adc
shlb
scas
pop
cmp
add
add
inc
aad
mov
mov
movsb
adc
adc
movsb
xor
jo
dec
pop
stos
push
mov
mov
dec
mov
add
mov
pop
or
inc
push
inc
push
add
sahf
arpl
push
aas
push
imul
adc
adc
mov
and
pop
ret
sub
jp
dec
lret
inc
sahf
xchg
push
shll
xorb
xor
xchg
mov
or
shlb
loopne
and
loop
xchg
aad
cmp
cwtl
cwtl
rclb
or
sbb
adc
cs
rcrb
orl
sub
push
and
dec
cmp
test
rorl
xchg
xchg
mov
xchg
cmp
cmc
jbe
inc
pop
adc
mov
xor
rclb
or
and
add
jmp
test
test
int
adc
xchg
inc
mov
mov
dec
leave
in
sbb
fbld
push
dec
and
inc
mov
mov
jo
rclb
pushw
mov
rclb
aam
test
loopne
mov
inc
xor
es
and
push
dec
movl
pop
jo
rcl
pop
in
iret
cmpb
pop
cmpsb
jb
adc
push
add
xor
or
adcb
addl
ljmp
add
push
xchg
and
xor
push
lahf
inc
adc
sbb
scas
push
adc
sbb
push
cs
add
jae
jl
or
push
jbe
ret
pop
or
test
and
aad
std
or
sbb
lahf
arpl
push
and
xchg
sbb
inc
rcrl
sub
sbbb
imul
dec
daa
into
in
jbe
aad
mov
mov
ja
xchg
je
daa
pop
add
mov
dec
testl
jne
push
imul
rorb
icebp
push
inc
inc
mov
push
dec
dec
and
xor
das
add
test
shr
xchg
xchg
test
fisubrl
dec
sub
mov
add
fs
sbb
inc
add
mov
or
inc
mov
imull
adc
xor
cmpb
mov
dec
movsl
dec
insb
fdivrs
xchg
xchg
mov
and
and
pop
adc
or
aam
mov
mov
or
fldl
mov
adc
pusha
lock
popl
sub
xchg
rclb
outsl
lods
jne
add
rclb
test
push
and
jno
and
in
xchg
mov
sti
scas
aam
mov
or
inc
sbb
addb
daa
or
and
jmp
popa
dec
sahf
or
add
dec
sub
adc
cltd
into
xchg
jecxz
sub
jbe
out
sbb
inc
adc
xor
add
aaa
and
or
sbb
and
pop
cli
xchg
lea
xor
inc
jge
xchg
or
popa
xchg
in
jns
nop
mov
push
and
jb
jo
push
cwtl
mov
adc
mov
mov
sbb
xchg
adc
inc
fnstcw
adc
in
add
inc
add
and
hlt
jmp
test
mov
mov
add
xor
aaa
cmp
cwtl
or
daa
inc
mov
pop
pop
and
adc
repnz
cmp
pop
pop
mov
push
pushf
lds
jne
stos
scas
mov
xchg
mov
rcr
adc
add
jno
je
test
pop
in
stc
dec
jae
sub
and
mov
xchg
cmp
lahf
dec
aas
inc
or
dec
cmp
xchg
aad
add
subl
mov
adc
jns
jecxz
adc
ja
inc
pop
scas
cltd
adc
sbb
mov
adc
movsb
icebp
lret
inc
push
sub
in
pop
inc
or
repnz
sarl
nop
pop
xchg
jne
stos
pop
test
sbb
dec
inc
adc
addb
jg
fs
inc
add
pop
xlat
or
movsb
add
stos
push
sarb
mov
and
scas
in
xor
lods
leave
xor
pop
pop
cltd
and
or
mov
xchg
sub
add
fistpl
add
xchg
push
jmp
shll
ljmp
adc
and
mov
rol
and
popa
mov
push
inc
les
daa
arpl
mov
inc
test
cltd
aam
popf
xchg
imul
ljmp
push
imul
mov
insl
sbb
fs
push
or
push
sbb
test
aad
xor
in
adc
xchg
popa
and
and
push
push
adc
int
andl
or
mov
sbb
enter
jne
popa
dec
xlat
adc
lods
inc
aaa
push
cmp
cmp
daa
inc
jg
push
adc
nop
jnp
mov
push
jns
movsb
sub
test
mov
loop
xchg
xchg
add
or
mov
sbb
shrb
add
inc
repz
sub
dec
stc
mov
das
loope
enter
add
test
ret
out
enter
popa
push
mov
sbb
jge
add
mov
push
inc
push
jecxz
push
cwtl
cs
fisubs
push
ffreep
push
xor
arpl
and
mov
cltd
and
and
rcll
xchg
popf
arpl
inc
adc
and
inc
pop
inc
sub
pop
mov
cmp
int
mov
inc
loopne
add
ficoml
sbb
std
aam
dec
or
and
pop
add
mov
les
repz
aam
xor
test
mov
mov
arpl
mov
adc
xchg
pusha
push
dec
pop
fcmovnb
movsb
and
fsubrl
jno
cld
jno
xchg
sbb
sbb
and
ljmp
shll
push
test
movsb
push
or
push
push
push
jo
push
movsb
test
je
mov
mov
rorb
pop
mov
roll
or
insl
popa
ret
dec
daa
loope
les
cmp
cmp
cmp
add
mov
stos
nop
insl
adc
and
ss
dec
jge
rolb
shrb
outsb
lcall
mov
mov
sub
xor
clc
lds
adc
mov
or
add
sub
add
dec
sbb
movsb
insl
js
and
push
dec
xchg
hlt
add
popa
aaa
mov
popa
flds
cmpsb
loop
pop
jne
ret
mov
push
pop
pop
mov
es
push
mov
push
xor
inc
push
add
je
or
ret
cwtl
mov
gs
and
scas
loope,pn
iret
cltd
adc
ljmp
bound
xchg
in
jns
adc
jmp
xor
push
inc
xchg
mov
pop
inc
orb
imul
sub
dec
or
sub
shlb
fwait
mov
add
mov
mov
es
inc
add
mov
fdivs
cwtl
test
sub
lret
mov
test
and
popa
pop
adc
and
cmpsb
mov
cmp
das
add
mov
pop
js
xchg
dec
mov
leave
dec
mov
pop
dec
lcall
or
or
dec
add
je
mov
ret
jge
dec
add
adc
mov
daa
jne
add
xlat
imul
inc
sub
loop
jne
dec
mov
add
inc
aad
lcall
add
mov
mov
inc
aad
lds
sbbl
fdivs
add
and
xchg
in
mov
lcall
xchg
out
sub
add
iret
mov
mov
and
adc
and
mov
in
jge
push
or
dec
inc
inc
sub
add
inc
pop
test
add
mov
in
sbb
stc
les
pop
cmp
addr16
jno
mov
and
sub
xor
or
call
loopne
rorl
arpl
mov
test
movsb
outsb
mov
cmpsb
mov
mov
jns
inc
xor
hlt
sub
mov
in
sub
add
dec
daa
rcl
fldt
jns
add
jle
inc
jmp
or
sahf
jmp
xor
or
mov
sub
add
cmp
jp
test
or
pop
leave
inc
jns
mov
pop
xchg
push
cmp
sub
push
mov
cmp
xor
or
jecxz
and
or
pop
in
pusha
gs
fstpl
adc
arpl
fistpll
lds
lods
sbb
pushf
in
mov
aaa
mov
orl
cmp
rolb
and
mov
pusha
out
fldenv
xor
insl
dec
stos
pusha
pusha
repz
mov
orb
push
frstor
or
mov
push
cmpsl
add
push
loope
and
sbb
outsl
cmp
add
loop
fsts
das
push
sbb
add
xchg
jno
dec
push
add
ljmp
sbb
sti
mov
add
xlat
enter
or
loopne
leave
fildl
sahf
inc
cmp
inc
popa
loope
push
cmp
aad
or
mov
orb
test
lcall
rorb
or
mov
inc
add
xlat
enter
dec
jge
sbb
inc
popa
and
or
mov
and
les
jb
stos
push
mov
push
add
cmpsb
push
inc
xor
cwtl
sbb
mov
add
mov
and
stos
fldenv
mull
int
sub
mov
bound
add
dec
les
add
test
jns
rcl
inc
or
aad
addr16
sub
jmp
pusha
pop
dec
adc
inc
nop
addr16
lods
stos
inc
pop
fimull
arpl
push
fcmovnb
rclb
add
sbb
sbb
jns
inc
jo
mov
out
or
dec
repz
xor
add
rcll
std
and
pop
mov
mov
and
add
movsl
mov
push
add
pop
sub
jb
adc
pop
popa
fimull
inc
sbb
cmp
cmp
jge
imul
xchg
scas
add
imul
jne
add
dec
mov
sbb
mov
hlt
or
inc
adcb
mov
fwait
movsb
leave
xor
add
mov
test
add
xchg
sbb
dec
je
jo
or
repnz
pop
rol
gs
lds
xor
mov
adc
sub
add
iret
test
nop
adc
pop
lcall
push
add
sbb
add
mov
arpl
movsl
push
cwtl
ljmp
fwait
aam
outsl
push
sbb
cmpl
sbb
test
mov
jno
mov
inc
movl
mov
add
dec
pop
push
fwait
and
cmpb
frstor
xor
and
jns
adc
sub
rolb
and
sbb
jmp
jl
and
or
xor
pop
lret
mov
xchg
shlb
jmp
nop
jo
mov
cld
pop
leave
movsl
inc
add
xchg
or
incb
addr16
inc
mov
dec
jne
mov
pop
cmp
sbb
jae
pop
mulb
push
add
bound
js
inc
mov
xor
pop
aas
in
repz
push
mov
push
and
pusha
add
adc
or
mov
int
add
test
lds
aaa
insb
lahf
std
or
adc
lods
push
add
rcl
ljmp
es
cmpsl
pop
sub
or
and
cmp
lcall
sbb
push
repnz
lods
je
sbb
push
pop
es
pop
push
sub
mov
outsb
add
sbb
in
inc
aam
imul
push
aad
roll
outsb
cltd
adc
inc
subl
jne
cmp
pop
add
xchg
imul
sahf
imul
adc
call
inc
cmc
pop
lcall
push
push
jo
sbb
les
and
lahf
addb
leave
or
add
jae
inc
aad
test
test
sbb
xchg
hlt
push
mov
and
mov
nop
lcall
hlt
mov
and
pop
push
sbbl
mov
sub
push
lcall
loop
stc
sbb
xchg
movsb
mov
mov
sub
ja
add
sbbb
jno
dec
xor
adc
call
add
push
mov
rolb
push
xchg
lods
inc
jne
xor
and
cwtl
stc
and
jmp
jb
and
addr16
sbb
cmp
out
mov
xor
cmpb
dec
lcall
orl
ret
ficompl
add
mov
adc
adc
jmp
add
inc
es
or
std
dec
out
pop
daa
or
pop
and
push
mov
arpl
fwait
adcb
jne
cmpsb
stc
inc
orb
iret
mov
push
or
push
sarb
adc
xchg
mov
pop
cs
insb
xor
mov
int
and
dec
inc
mov
pushf
mov
dec
mov
add
mov
mov
mov
out
xor
leave
and
pop
jb
shr
roll
and
rol
rcrl
ret
sbb
push
mov
enter
add
mov
sbb
cmp
cmp
iret
test
inc
sahf
mov
jecxz
movl
mov
add
xor
or
inc
stos
scas
sbb
repnz
add
mov
xlat
pop
pop
and
jo
mov
mov
bound
cmpsl
inc
and
push
sub
repz
sub
add
pop
xchg
xor
mov
shll
sbb
lds
and
nop
sbb
mov
lds
and
cmpsb
xor
popf
mov
insb
addb
lods
pop
dec
pop
insb
add
cmp
fldl
movsb
mov
sub
je
iret
ljmp
xor
movb
sub
pop
addps
inc
push
ret
jno
mov
push
pop
adc
cmp
shlb
push
dec
push
mov
add
push
push
inc
adc
or
mov
bound
adc
popf
and
fldt
add
cs
inc
lods
sahf
dec
rol
loope
xor
es
scas
or
and
mov
test
out
loope
fdivs
mov
repz
aam
pop
sub
fwait
pusha
orb
mov
andnps
xor
arpl
mov
adc
insl
adc
dec
xor
mov
es
inc
int3
add
cmpsb
popf
rclb
enter
add
or
xor
nop
and
and
xchg
and
xchg
xorl
bnd
xchg
jns
aam
sub
mov
xchg
jae
and
jo
outsb
mov
cs
cmpsl
pusha
outsl
cmp
arpl
push
cmp
or
imul
push
add
add
cmp
cmpsl
popf
scas
cwtl
test
dec
and
pop
add
and
in
les
sub
add
xor
dec
mov
push
lret
aas
out
jl
mov
or
rorl
pop
pop
and
aaa
dec
cmp
fwait
or
das
push
nop
or
sub
es
cmp
lret
addr16
jnp
xchg
add
add
mov
rorb
nop
add
lea
jle
cmc
or
cmpsl
or
test
sub
dec
xor
push
sbb
xchg
dec
cmp
test
rorb
pop
xor
mov
mov
pop
add
insl
pop
inc
sidtl
dec
arpl
sahf
in
mov
dec
andb
push
or
loop
add
bound
loopne,pn
fstps
push
lcall
add
jo
mov
push
cmpsl
inc
adc
xor
sub
jne
inc
sbb
add
push
loope
mov
push
lods
mov
mov
enter
jnp
gs
sub
inc
or
or
add
adc
push
je
mov
pop
mov
leave
xor
push
adc
inc
xchg
pop
test
adc
in
arpl
add
sbb
or
aas
das
mov
or
xor
sub
testl
mov
je
in
dec
jmp
ret
mov
xchg
int
punpckldq
test
fs
test
bound
popa
pop
insl
push
or
pop
push
fadds
or
cltd
push
jne
dec
add
loop
dec
adc
adc
test
test
inc
pop
ret
pusha
adc
sbb
ret
imul
mov
mov
or
mov
xchg
sub
pop
fs
xchg
inc
imul
ss
movl
das
inc
or
cmc
jle
leave
in
pop
add
pusha
push
push
pop
ret
inc
aaa
jae
sbb
push
mov
adc
xlat
loopne
dec
or
add
add
cmp
cltd
arpl
fldcw
lods
sub
and
sub
xchg
xchg
mov
xlat
mov
jb
mov
movsl
and
andb
inc
in
xor
push
or
aaa
jbe
add
popf
andb
adc
mov
jae
insb
pop
out
daa
inc
aam
mov
push
push
add
inc
xchg
aas
push
sub
or
test
lods
mov
and
push
xor
mov
repnz
lcall
xchg
mov
and
ja
and
xchg
test
cwtl
sbb
fiaddl
in
gs
stc
mov
pop
or
insb
inc
arpl
in
xchg
sbb
pop
push
sub
leave
push
dec
jne
mov
push
mov
add
pop
aam
mov
cmp
pop
push
popa
sbbb
out
and
loopne
mov
or
aam
inc
add
movsl
enter
xchg
addb
pop
add
aaa
gs
xchg
mov
enter
ljmp
rorl
sub
mov
pusha
sub
push
push
mov
arpl
cs
roll
pop
mov
push
mov
add
inc
mov
icebp
leave
popa
push
jmp
and
jne
inc
push
push
loop
add
fdivrl
push
or
xchg
jmp
scas
jmp
stos
div
and
jne
add
popf
scas
and
stos
clc
cltd
push
add
xor
and
negl
pop
adc
xchg
xchg
or
stc
call
pusha
add
ljmp
lcall
xchg
dec
lcall
adc
dec
sbb
rolb
test
pop
xlat
das
ret
xchg
mov
mov
movsl
and
adc
mov
ljmp
mov
sbb
test
push
mov
cltd
add
push
adc
jo
test
dec
les
xchg
jno
shll
mov
mov
jmp
add
adc
mov
push
add
mov
xchg
dec
arpl
mov
sbb
rcll
cmpsb
push
mov
jo
push
add
inc
notb
and
mov
xor
imul
and
sbb
scas
sbb
int
daa
andl
les
or
inc
jmp
add
or
testl
or
push
and
ja
pusha
push
and
pop
xor
push
cmp
jle
add
add
int3
xchg
movsl
jmp
and
les
test
mov
xlat
inc
xchg
pop
lock
adc
sub
and
addl
pop
sub
mov
mov
int3
mov
in
dec
in
fsubs
and
mov
push
pop
dec
xor
or
stos
subl
adc
lar
xchg
and
fiaddl
dec
jp
and
cmpsl
fistps
gs
xchg
push
das
xchg
pandn
mov
push
add
cmp
aas
push
add
fwait
ret
xchg
sub
add
jo
or
sbbl
clc
jge
or
and
and
nop
out
jne
or
jo
jg
movsb
xor
lods
jmp
push
inc
pop
aam
xor
inc
inc
adc
mov
or
jge
addb
jmp
dec
imul
jne
cmpsl
push
imul
xor
in
xchg
mov
shll
sub
push
loopne
popa
sbb
xor
scas
sub
loope
pop
xchg
je
andl
sbb
or
xchg
xor
sbb
aam
movsb
add
mov
aad
ljmp
imul
push
push
sbb
sub
lds
dec
xchg
cmpsb
push
adc
std
popa
push
or
loop
les
push
xor
test
andl
and
add
inc
movl
dec
ret
dec
add
inc
sbb
leave
jae
mov
dec
adc
xor
mov
test
add
ret
and
add
rdtsc
lock
mov
sbb
or
mov
or
mov
xor
inc
dec
lods
add
mov
xor
ds
xchg
sbb
shl
lds
add
std
dec
sbb
rcrb
rcll
jne
sub
dec
dec
imul
ret
out
fwait
out
add
adc
inc
dec
inc
pop
ret
adc
dec
pop
cmp
sbb
push
repnz
add
adc
test
push
jo
xchg
in
loope
or
adc
jmp
mov
stc
fldl
cwtl
and
std
gs
push
dec
push
jge
andb
cmp
cwtl
xlat
rclb
and
cs
or
adcl
mov
push
iret
push
adc
aam
fwait
add
xor
xor
and
add
fsts
mov
movsb
inc
push
or
or
mov
xor
roll
push
sub
stos
mov
jnp
push
add
lcall
adc
add
add
and
leave
imul
adc
sub
or
push
add
jecxz
or
inc
sbb
jecxz
add
add
adc
or
mov
and
adc
push
mov
inc
or
test
adc
rol
pop
jno
xchg
cmpsl
orl
pop
add
aad
xor
push
add
fisttps
xor
and
loopne
adc
lcall
dec
or
or
xorl
dec
jl
mov
inc
out
fs
sbb
push
add
mov
xchg
lods
add
sbb
movsb
sub
add
dec
pop
adc
and
inc
mov
loope
push
pop
sbb
mov
sbb
pop
pop
xchg
pop
jne
xchg
dec
roll
xchg
xor
test
mov
mov
sub
lds
mov
pop
cwtl
add
das
xlat
pop
cmpsl
inc
pusha
dec
mov
push
add
or
xor
imul
je
lcall
inc
aam
add
mov
cmpl
in
and
sub
mov
mov
pop
inc
daa
add
jmp
dec
lods
push
push
or
in
int3
loopne
ret
icebp
cwtl
xor
mov
xchg
or
add
lea
or
mov
dec
adc
mov
sub
enter
sbb
jae
add
xchg
cmpl
jl
test
xchg
cmp
adc
add
dec
jne
insl
je
mov
mov
test
nop
sbbl
mov
dec
loop
push
ret
jnp
jo
mov
jb
adc
pop
sti
movsb
or
test
in
push
stos
hlt
mov
mov
fldenv
mov
add
icebp
cmp
sub
je
call
mov
mov
addb
pop
mov
subps
xchg
sub
in
addb
push
lcall
das
xor
dec
inc
or
xchg
adc
sub
popa
push
and
cli
push
xchg
insb
add
mov
inc
sbb
daa
dec
or
addb
sbb
pop
divl
dec
add
xor
mov
mov
rolb
sbb
cmpsl
pop
jecxz
pop
or
inc
movb
cmp
jno
rclb
adc
mov
lahf
jg
repz
dec
sub
mov
sub
ja
and
and
or
push
jb
fbld
sub
inc
jg
push
push
inc
lock
sbb
or
adc
push
push
mov
jae
xchg
das
or
jns
outsb
inc
add
stos
xor
shl
and
repnz
divl
xor
jo
xor
imul
and
and
dec
add
scas
inc
test
shlb
test
sahf
or
mov
dec
xor
test
or
gs
arpl
add
les
ds
enter
ja
and
movsb
movsl
test
push
movsb
jl
add
mov
sbb
push
fcomps
xchg
pop
add
movsl
or
sub
or
add
sbb
mov
not
or
aas
jp
pop
and
xor
pop
xlat
mov
or
or
add
insl
and
insl
lods
out
add
insl
adc
pop
fnstsw
push
mov
cmp
iret
mov
cli
add
fwait
push
or
sti
movsb
adc
mov
push
or
dec
stos
mov
sub
stc
movb
push
jg
sbb
into
popf
sub
inc
dec
rcrb
stos
dec
out
mov
inc
jno
dec
lcall
js
or
dec
pop
add
les
adc
push
test
test
sub
test
jns
inc
addb
jmp
and
add
call
push
jo
add
and
sbb
pusha
sub
outsb
push
fcom
xor
stos
aad
dec
push
lea
inc
sahf
pop
pop
test
lea
inc
dec
mov
pop
push
inc
shlb
and
and
xchg
dec
in
dec
roll
outsl
lods
inc
or
leave
popf
les
dec
popf
es
adc
test
fcomp
jb
push
cmp
idivl
pop
and
push
nop
inc
and
sbb
or
push
dec
sub
dec
add
pop
daa
rolb
or
and
or
and
add
leave
and
or
mov
and
push
mov
add
adc
jo
and
call
sbb
loopne
mov
xlat
add
sub
sbb
jb
test
lock
push
call
std
dec
sub
movsb
stc
adc
add
dec
mov
add
loop
sahf
xchg
dec
add
je
imul
mov
jne
xor
call
jne
push
xor
push
fsubrl
incl
sbb
xchg
adc
mov
sub
cmpsl
shrl
xchg
in
or
stos
sti
sub
add
lea
test
int3
xor
mov
bound
mov
adc
je
test
sub
aam
fldl
test
adc
sbb
push
xchg
pop
insl
push
push
adc
jb
addb
and
inc
mov
mov
mov
int
pusha
addb
lret
jbe
push
add
mov
dec
and
leave
sub
es
mov
loopne
mov
in
roll
mov
cmp
jbe
ljmp
in
arpl
inc
or
sub
cmp
xchg
adc
mov
mov
loopne
movb
and
lcall
push
sbb
push
ret
push
push
pushf
ljmp
xor
pop
leave
jae
repnz
jmp
test
add
or
mov
or
push
inc
sahf
dec
push
pop
and
or
dec
xchg
pop
shll
ret
xor
mov
xor
cmpsb
jno
mov
je
aad
addb
xorb
push
push
test
pop
sbb
imul
pop
sahf
pusha
dec
mov
cmp
test
incl
mov
je
mov
pop
mov
loopne
lds
outsb
pop
aam
shll
cmpsb
fmuls
mov
repnz
mov
xchg
scas
subl
gs
mov
sbb
insl
test
mov
ret
fsts
push
pop
inc
rorl
adc
cmp
rcrl
xchg
adcl
or
pop
out
lret
adc
out
fsts
pop
mov
aaa
or
sub
xor
inc
cltd
add
mov
xchg
cmp
rorl
inc
loope
lods
mov
push
inc
xor
or
xor
pop
les
and
push
mov
sbb
loop
test
jnp
and
jo
rolb
and
adc
loop
and
sub
push
mov
cli
xlat
xchg
inc
mov
iret
cltd
push
mov
test
xchg
inc
repnz
pop
mov
add
sti
ret
adc
adc
pop
cmp
orb
daa
mov
mov
aas
lds
popa
add
jecxz
mov
pop
push
lcall
hlt
xor
aaa
scas
add
test
imul
lea
pop
shll
cmp
sub
and
add
sub
sbb
and
dec
pop
mov
fwait
ret
jae
pop
cltd
outsl
movsb
cmp
pop
fnstsw
or
pop
inc
xor
jle
mov
adc
rclb
arpl
push
pusha
sub
push
jnp
add
pop
inc
xor
leave
mov
pop
and
enter
sbb
xor
test
or
ror
cmp
or
sub
cld
push
enter
jecxz
jmp
fidivl
test
sub
jno
or
sbb
in
cmp
sbbb
lahf
jecxz
sbb
mov
add
enter
add
cmp
jne
mov
into
adc
mov
pop
je
ret
adc
jo
adc
popf
addr16
or
xchg
sbb
shll
dec
cmpb
sbb
sbb
inc
pusha
add
repz
bound
addl
or
addb
dec
imul
mov
cmp
in
test
sbb
or
shrb
push
dec
les
in
rclb
and
cmp
add
cmp
adcl
shrb
mov
aad
xor
mov
les
mov
add
mov
sub
and
and
inc
inc
stc
fcoms
add
pop
icebp
mov
movsl
insl
fnsave
jl
or
mov
roll
mov
push
add
sub
aas
xor
xor
inc
or
jne
dec
or
cmp
imul
cli
pop
push
popf
xchg
dec
dec
or
jne
mov
sbb
pop
aas
jl
mov
outsl
stc
inc
cmp
rclb
adc
mov
sbb
push
cmp
push
cmpsb
cmc
add
inc
inc
pop
adc
push
movb
add
enter
das
imul
movsl
pop
adc
cmpsb
fwait
mov
adc
fs
fs
cmp
and
fnstenv
xor
sahf
inc
add
add
xor
push
inc
scas
lock
mov
daa
and
add
lds
add
testl
dec
sbb
lret
shrl
test
cmp
dec
push
mov
sub
push
sbbb
dec
push
add
ret
cmp
lods
and
or
xchg
je
stos
movb
jp
xchg
dec
sbb
pop
add
or
call
sub
add
mov
xor
orl
lea
and
and
sahf
add
mov
popa
dec
jnp
jns
loopne
mov
sub
sahf
pop
xchg
fnstenv
js
test
pushfw
add
and
sub
mov
dec
shrl
mov
push
mov
adc
test
dec
imul
dec
aad
inc
sahf
adc
adc
sbb
lods
push
imul
fidivrs
dec
xor
sbb
add
xor
add
inc
or
rolb
fsub
xchg
dec
ret
daa
sbbb
jecxz
push
sbb
inc
xchg
ja
popf
das
rolb
subb
or
rolb
out
popf
xchg
jns
or
or
lds
rorb
sti
push
adc
push
and
cmpsl
push
and
push
push
add
add
xor
jns
xor
sbb
mov
stc
sub
xchg
sub
xchg
mov
in
rcll
add
pop
movsl
add
add
mov
add
cs
cltd
or
repnz
cltd
mov
adcb
ret
test
loop
push
xor
mov
and
adc
out
add
adc
xchg
sbb
xor
stc
or
test
das
dec
xchg
mov
pop
push
or
rorb
add
push
fs
cmp
pop
adcl
xor
aam
in
push
mov
popl
push
dec
dec
sahf
nop
dec
push
add
fsubs
push
xor
dec
dec
pusha
iret
in
inc
adc
add
mov
and
repz
sbb
inc
or
add
xor
add
test
test
popf
and
andb
push
add
aaa
sub
or
mov
mov
scas
outsb
sbb
mov
add
jbe
popa
add
addl
jns
arpl
mov
rol
cmpsb
scas
sub
dec
stos
adc
rolb
dec
aad
movsb
and
jno
lcall
addl
rcl
inc
pop
dec
adc
ja
cmpsb
mov
rcrb
push
dec
xchg
inc
push
jno
repz
adc
push
loopne
mov
sbb
imul
cmpsb
sub
sub
pusha
jmp
orb
or
adc
cmp
push
jno
je
xor
add
les
fists
scas
roll
lods
scas
inc
inc
push
stos
pop
adc
mov
inc
pop
add
mov
cmp
or
push
and
add
insl
fsubrl
inc
xor
adc
out
mov
roll
jne
xchg
lea
inc
pop
add
xchg
xor
and
mov
push
mov
adc
inc
jae
mov
xlat
sbb
xchg
sbb
xor
or
lods
cmc
push
cmp
jo
cwtl
add
push
add
rcl
dec
inc
lcall
inc
xor
dec
shrb
xchg
push
push
pusha
or
mov
push
ja
xlat
xor
stc
mov
pop
cmp
daa
dec
rol
addr16
and
loop
pop
and
movsl
loope
and
sub
xchg
and
adc
push
pop
fnstsw
jo
stc
push
cmpsl
clc
push
test
sub
adc
pop
int3
cmp
sub
and
pop
and
and
orl
mov
stos
xchg
xor
in
pop
lret
xchg
and
mov
and
inc
sub
sbb
sbb
dec
lcall
add
lock
shlb
push
cs
adc
add
xchg
adc
in
subb
adcl
adc
jne
ficoms
push
arpl
cmp
inc
sbb
adc
xor
inc
push
sbb
mov
cmp
push
test
or
add
cmp
add
add
jno
ret
cmpsb
xor
xor
adc
in
je
add
cmp
dec
adc
jno
xor
adc
sbb
std
lcall
or
lods
repnz
js
and
push
scas
inc
sbb
lods
cwtl
inc
int
mov
push
ret
popa
in
add
mov
inc
orl
pop
mov
mov
push
addr16
or
rdtscp
mov
sbb
lahf
pop
pop
pusha
dec
aaa
push
mov
rclb
push
sub
mov
cmpl
push
push
jo
sbb
roll
inc
pop
xchg
test
test
lock
out
jmp
jmp
cmp
or
mov
adc
stos
jmp
out
test
lods
inc
jmp
and
ljmp
notb
and
inc
or
dec
push
or
js
jecxz
or
pop
orb
sbb
or
add
fldt
sub
and
sub
jo
cmpsb
xor
dec
mov
xor
lea
ljmp
cmp
sub
cltd
out
lods
inc
test
jo
mov
cltd
mov
adc
rclb
jne
leave
sbb
sahf
or
xor
add
mov
cmp
js
jp
push
jmp
add
mov
subb
and
cmp
xor
bound
or
mov
popf
mov
jge
fiadds
ret
pop
or
dec
inc
adc
lods
add
sub
sub
mov
rclb
dec
sahf
or
xlat
sbb
dec
jl
inc
rolb
or
sbb
jle
aad
pop
sbb
mov
jmp
mov
jmp
pop
aad
inc
out
cmp
adc
add
sbb
cltd
jns
xor
loope
cmc
or
xchg
mov
and
push
subb
stos
sub
pcmpeqd
inc
loope
pop
mov
mov
repz
pop
mov
mov
mov
out
jae
adc
cwtl
mov
dec
pop
fstl
sub
inc
and
inc
ret
add
loop
rorl
or
test
cmp
lods
lods
or
ret
les
stc
jbe
mov
and
or
add
mov
push
dec
pop
test
or
adc
cmp
inc
cmp
xor
imul
adc
mov
adc
cmpsl
cli
xchg
scas
mov
lret
test
adc
sbb
xor
ret
out
shrl
xor
xchg
cmp
std
mov
pop
lcall
dec
pop
pop
add
xchg
or
add
jp
dec
pusha
mov
add
xor
jnp
addl
adc
sbb
jno
loop
fisubl
add
jne
xor
enter
push
scas
call
or
xor
mov
bound
inc
xchg
mov
fwait
xlat
xchg
movsl
imul
adcl
lcall
add
add
aad
inc
jne
insl
inc
loop
pop
sbb
je
adc
cmp
gs
test
fdivs
inc
std
pop
adc
movsb
sub
aad
add
lcall
or
mov
dec
outsl
add
sub
scas
adc
outsl
iret
cmp
loope
dec
lcall
xchg
mov
adc
mov
sti
jmp
or
test
movl
cwtl
push
push
sti
push
add
call
nop
push
xchg
xor
or
cs
aas
sbb
jo
mov
mov
pushf
xchg
mov
push
add
pop
test
push
sub
pop
jecxz
add
pusha
sbb
jns
test
add
pop
and
mov
mov
mov
xor
aad
ds
in
add
rcrl
mov
stos
icebp
mov
pop
adc
sbb
adc
and
dec
push
movsl
mov
dec
imul
mov
retw
add
cmpsb
test
rolb
inc
or
cmp
cld
xor
pushf
stos
push
movsl
popf
insl
add
stos
fisttps
pusha
sub
ss
or
add
call
xor
xor
adc
loope
fcmovu
pop
rolb
sti
scas
out
nop
push
nop
arpl
lods
jge
je
push
add
inc
xchg
and
roll
and
mov
jnp
push
or
xchg
or
or
test
ja
push
cs
test
sti
inc
fwait
adc
pop
and
mov
adc
dec
pop
or
push
insl
or
or
add
push
adc
test
mov
push
xchg
dec
xchg
mov
adc
and
rolb
pop
pop
test
xchg
push
dec
and
mov
sbb
add
mov
xchg
testl
sub
test
xchg
xor
and
ficomps
push
mov
or
nop
adc
inc
push
lea
xchg
mov
inc
iret
movsl
sub
dec
fdivp
xchg
pop
xor
add
stos
in
mov
add
xchg
in
mov
in
adc
inc
push
xchg
aam
imul
loope
push
xchg
scas
xchg
sbb
ret
or
subl
push
cmpsb
dec
rcrb
pop
addl
add
movntq
cs
push
xchg
cmp
or
pop
pop
les
aad
fcmovnb
dec
cltd
sbb
push
or
xor
xchg
pop
test
sbb
push
xor
jb
adc
mov
mov
add
add
jns
std
adc
push
and
sarb
in
test
cmp
jo
aam
mov
lea
push
sbb
xor
xlat
and
jo
loop
xchg
jl
add
iret
stos
and
push
and
test
faddl
cmpsl
imul
lea
movsl
sahf
pop
lods
xchg
test
and
mov
cmpsb
inc
lea
add
and
xchg
jge
leave
jno
sub
push
add
push
add
insl
adc
and
cmp
jo
mov
cmp
inc
pop
int
sub
or
cmp
sbb
mov
orb
push
adc
ja
or
and
or
flds
stc
aam
mov
out
out
je
dec
mov
add
xchg
xor
inc
sbbl
inc
sub
shl
push
mov
test
add
add
pusha
rorl
xor
or
cmpsl
mov
push
xor
dec
testb
and
xchg
out
aad
or
cwtl
call
js
add
add
push
dec
imul
mov
fnstcw
shrb
adcb
stos
sub
cmp
lods
daa
insl
and
add
iret
lds
lock
fs
or
pop
mov
mov
inc
shrb
mov
aam
mov
dec
add
nop
je
jg
packuswb
xchg
jno
add
int3
bound
add
daa
or
xor
jecxz
push
add
add
sub
test
xorb
mov
cmp
nop
dec
pop
jne
inc
cmp
icebp
inc
dec
add
scas
jns
push
sub
dec
jno
js
stos
stc
sub
ret
stos
xorl
enter
mov
lea
mov
aaa
add
push
lds
sbb
jo
pop
sarb
mov
scas
aam
movsb
popf
add
push
test
or
dec
or
add
jne
ret
loopne
daa
jns
dec
inc
cmpb
and
inc
stos
and
push
adc
bound
dec
inc
adc
int
repnz
xor
xor
push
cltd
adc
nop
push
pop
sbbb
shll
movsb
inc
test
add
in
lahf
xor
push
popa
xor
nop
pop
cmp
je
sub
in
pop
rolb
pop
pcmpeqb
push
or
andb
mov
sub
cmp
out
xchg
daa
enter
sbb
in
xchg
aam
pop
mov
dec
lea
movb
or
add
mov
lcall
jb
outsl
lea
inc
addb
push
or
dec
sbb
addb
jp
mov
xor
push
pop
xor
fwait
push
xor
add
repnz
cltd
sbb
jne
and
xor
xor
add
and
dec
cmpsl
pop
xor
inc
int
inc
or
iret
mov
sub
and
popf
xchg
cmp
xchg
add
cmp
add
add
call
add
inc
inc
sbb
push
lcall
cs
xor
add
xchg
adc
jle
ljmp
testl
cmp
add
je
sub
movsl
es
mov
and
call
xor
adc
cltd
mov
dec
push
adc
stos
jne
add
je
add
adc
mov
or
add
pop
inc
jnp
push
fnsave
pusha
rorl
push
sbb
or
push
xchg
add
test
add
sub
or
scas
movsb
fcmove
mov
roll
cmp
mov
stos
cmpl
or
cli
add
sub
inc
xchg
fdivs
push
les
leave
lock
sub
dec
pop
mov
mov
mov
sbb
adc
je
cmp
add
or
inc
push
mov
inc
pop
jne
leave
mov
test
dec
push
push
pop
ficomps
or
orl
imul
push
fldl
dec
leave
mov
mov
les
cmp
push
add
orl
roll
pop
cli
push
addr16
add
mov
jecxz
add
mov
mov
stc
sub
xchg
mov
adc
push
mov
inc
loope
add
dec
push
inc
in
inc
mov
sub
push
ret
sbb
subb
ret
enter
shr
xchg
push
xor
aaa
inc
pop
dec
add
inc
and
aam
cmpsl
and
or
push
add
int
mov
sbb
or
xchg
rorl
clc
adc
adc
scas
sbb
test
or
pop
fisttpl
mov
add
xor
mov
pop
pop
shll
movsl
xlat
inc
popw
or
ret
push
xorl
jnp
push
cmpb
mov
scas
sbb
mov
or
insb
and
outsl
adc
jns
in
addl
push
jns
inc
mov
test
fists
nop
or
rcrb
int
sbb
lock
arpl
xchg
loopne
xor
arpl
lock
xor
or
mov
imul
push
mov
fcmovnu
add
or
imul
and
push
leave
inc
push
and
cmc
jno
and
push
adc
shll
dec
mov
or
cmp
in
cmp
xchg
adc
icebp
ficoms
loope
loopne
or
daa
andl
lret
and
pusha
push
mov
xor
jp
rcrl
xorl
adc
imul
mov
xchg
aaa
test
sbb
or
or
imul
loope
andnps
ret
mov
or
xor
imul
mov
sbbb
sti
or
dec
stc
sub
inc
sahf
inc
jmp
xchg
popa
imul
mov
cmp
adc
adc
vpxor
push
shll
add
insl
arpl
test
push
mov
es
push
movsb
icebp
fneni(8087
and
jne
nop
and
lret
and
inc
pop
lcall
xchg
jg
repnz
imul
and
push
add
mov
dec
cmpl
inc
adc
or
mov
inc
std
mov
mov
adc
test
cwtl
dec
or
out
or
cmp
js
push
jno
mov
fbstp
push
in
mov
insb
mov
and
jp
adc
add
test
push
test
in
sub
lods
add
or
aaa
xlat
dec
adc
add
push
jne
jge
adc
mov
xchg
pop
mov
jmp
rcll
dec
dec
mov
dec
mov
dec
pop
mov
dec
repnz
roll
add
lcall
aas
xor
sbb
dec
sahf
in
addr16
rorb
jmp
push
inc
sahf
lret
mov
adcb
add
jg
mov
sbb
pusha
loopne
jno
inc
sub
sub
xor
mov
nop
pop
roll
adcb
mov
jns
adc
outsb
mov
mov
out
sbb
xchg
push
xchg
xor
stos
popf
sub
push
dec
push
addb
stc
add
adc
mov
dec
sbb
gs
js
jle
dec
popa
push
leave
cmp
imul
gs
sub
mov
dec
push
fldt
jns
lods
sbb
cltd
xchg
and
mov
mov
sbb
sub
and
inc
or
roll
imul
xor
clc
mov
cmp
inc
insl
pusha
adc
push
xchg
sub
dec
rorb
pop
sub
mov
sbb
popa
push
push
xchg
mov
je
inc
xor
fldt
test
insl
push
adc
push
mov
adc
test
gs
fnstsw
mov
cmp
add
sub
mov
stos
xchg
sbb
loope
imul
jae
dec
adc
pop
adc
aam
test
mov
test
pop
and
push
dec
movsl
xchg
insl
mov
push
dec
sbb
jno
insl
lea
xor
adc
push
add
imul
test
cmpsb
sbb
aaa
mov
inc
sbb
inc
or
orl
jecxz
jp
adc
mov
adc
pop
jne
repz
push
test
jns
pop
xor
xor
andb
sarb
shll
icebp
pop
inc
int3
xlat
test
mov
mov
adc
inc
adc
xor
xchg
jl
and
jb
daa
sbb
mov
xor
dec
xchg
inc
jns
ljmp
or
xor
lahf
dec
imul
add
and
shrl
pop
cmpsb
pusha
adc
sbb
xor
add
mov
std
and
pop
adc
cmp
cmp
adc
mov
mov
add
adc
or
push
loope
shl
ret
cmc
scas
mov
leave
pop
or
push
adc
dec
or
push
push
mov
and
stc
or
enter
or
xor
inc
aaa
movsl
or
or
sub
pusha
movsl
es
mov
or
rcll
or
jns
ret
sarl
mov
stc
xor
xor
movsb
adc
jno
xchg
pop
adc
aad
jnp
fidivl
jno
mov
pop
nop
inc
xor
hlt
imul
mov
mov
testb
sbb
xor
add
push
movb
sbb
cmp
and
cmpsb
add
pop
ljmp
cmp
int3
icebp
inc
xchg
mov
mov
insb
adc
pusha
pop
pop
and
and
cwtl
dec
mov
xor
mov
or
dec
sets
sbb
mov
push
sub
aas
cmp
jnp
jmp
cmp
xchg
lret
cmpsb
pop
xchg
cmpsl
or
ljmp
and
pop
xchg
test
addl
sbb
dec
add
out
add
shrb
mov
cmp
sbb
xor
xchg
inc
rolb
ret
jno
mov
cmp
pop
addl
dec
rolb
aaa
dec
lcall
inc
cmp
and
jne
out
js
jae
and
sahf
test
fs
mov
inc
mov
sub
push
cmp
xchg
adc
pop
xlat
pop
push
pop
movb
mov
ret
mov
mulb
add
test
lret
sbb
rolb
mov
lahf
rorl
and
or
mov
and
and
and
adc
sbb
adc
and
xor
inc
xlat
dec
dec
xchg
pop
aaa
hlt
roll
cs
jge
pop
pop
push
imul
dec
add
adc
imul
adc
cmpb
nop
sbb
ljmp
stos
add
jae
pop
sbb
nop
pop
decl
mov
sbb
xchg
mov
adc
or
lock
lcall
jns
inc
dec
inc
test
int
xor
mov
inc
and
dec
pop
adc
jae
shrb
test
pop
push
andl
loope
aad
daa
dec
arpl
push
aaa
or
ret
fcomp
xchg
aam
or
push
jo
leave
inc
lret
pusha
popf
nop
cld
dec
adc
nop
and
mov
jns
and
movsl
ljmp
cmpsb
adc
jae
and
or
and
cmp
cmp
jbe
mov
inc
add
cmp
sbb
loopne
pop
dec
notl
out
les
dec
sbb
daa
push
sub
push
mov
lldt
pop
or
add
sub
daa
lcall
mov
push
adc
dec
xor
gs
stc
push
hlt
stos
pop
fwait
inc
int
xor
adc
sarl
mov
xor
loope
das
cmp
je
hlt
mov
dec
rclb
movsl
push
xor
loopne
mov
pop
lret
mov
dec
mov
lcall
mov
inc
repnz
jae
fildl
jbe
loopne
ror
mov
cwtl
mov
sbbb
mov
pop
mov
mov
sub
xor
push
int
es
sarb
popa
jnp
fildl
inc
aad
sub
mov
or
or
scas
pop
or
dec
test
stos
inc
imul
jmp
adc
push
sub
cld
sub
pop
xor
jno
add
shl
fbstp
stos
pop
xor
add
or
cmp
mov
or
and
shll
gs
test
stos
inc
lea
addb
push
in
ds
pop
test
arpl
or
xor
lret
bound
push
jmp
aad
inc
jecxz
adc
popa
push
inc
enter
out
movsl
insb
pusha
push
jnp
pop
push
add
jno
cmp
cmpsb
add
pop
push
dec
dec
mov
xor
xchg
mov
xor
mov
pop
lcall
pop
insb
imul
mov
cmp
and
xor
nop
push
pop
cmp
push
mov
inc
or
xchg
pop
cmp
mov
outsb
bound
add
xor
add
inc
mov
sub
add
xlat
stc
cmpsl
or
inc
push
ljmp
add
movsl
add
add
and
in
test
lods
push
cmp
mov
sbb
sbb
or
inc
addr16
and
andb
mov
scas
imul
call
add
repnz
push
mov
mov
xchg
dec
and
pop
lret
add
xor
pop
sbb
loop
and
insl
imul
cmp
les
rcl
add
cmp
or
mov
inc
popa
ret
jp
jmp
or
cmpsl
or
add
stos
mov
add
mov
test
mov
add
adc
je
aad
loop
add
or
rcl
adc
popl
or
mov
cwtl
pusha
bound
inc
dec
xchg
test
add
clc
xor
inc
sub
jmp
pop
test
fucompp
fmuls
in
mov
sub
in
push
add
push
cmp
mov
adc
and
add
in
or
inc
sbb
adc
xor
pop
xor
adc
mov
push
fidivrs
arpl
jl
inc
push
add
imul
push
sbb
push
test
xchg
inc
sub
cmpsb
bound
test
popf
xor
xor
bnd
dec
loop
repnz
bound
xor
mov
or
or
decl
jge
add
dec
cmc
mov
xor
add
mov
test
dec
pop
add
mov
imul
add
pusha
out
mov
sub
sub
daa
das
sbb
add
cmpsb
nop
jno
adc
add
adc
mov
pop
insb
bound
lret
js
inc
mov
push
insl
sbb
mov
rclb
push
add
test
mov
stos
sub
mov
and
mov
add
dec
xchg
sbb
dec
rolb
cmp
and
iret
adc
rol
adc
in
popa
out
aam
daa
je
aaa
push
and
sbb
stos
and
sbb
or
and
insl
jmp
inc
daa
repz
inc
dec
push
rorl
adc
ljmp
and
inc
aam
xlat
lods
and
repnz
xor
and
bound
stos
outsb
adc
enter
iret
mov
push
cs
rolb
xor
jo
sbb
inc
aam
add
inc
cmp
mov
pop
add
mov
insl
jmp
dec
lahf
jecxz
test
rol
les
repz
sbb
inc
dec
adc
pop
in
js
dec
out
adc
or
push
out
jp
add
mov
sbb
xor
rorl
inc
adc
imul
sbb
push
sbb
mov
push
adcl
test
mov
pop
xor
mov
test
pushf
scas
cmp
or
or
loop
adc
cmp
push
adc
add
mov
test
dec
adc
jmp
sub
cmp
cmp
adc
fbstp
sub
rclb
movsl
mov
out
shlb
and
sub
test
cmp
push
test
sbb
popa
cmp
int3
and
addr16
xchg
jne
xor
cmp
es
or
add
nop
or
xor
push
adc
xor
mov
add
orl
cltd
mov
scas
mov
adc
punpckhbw
leave
imull
ss
add
inc
bound
lods
sub
mov
adc
dec
and
dec
mov
cli
jl
cmp
inc
sub
pusha
sub
cmpb
jle
inc
fld
or
add
inc
das
push
popa
test
stos
dec
popf
push
or
mov
bound
xchg
pusha
nop
push
cmp
adc
ss
pop
inc
push
or
dec
rclb
mov
mov
or
rcll
jns
nop
in
orb
arpl
add
and
or
add
add
cmp
dec
scas
pusha
adc
aam
mov
stc
or
or
mov
push
or
or
mov
movsl
xchg
xor
xlat
daa
pop
lcall
test
adc
rcrl
mov
es
sub
or
fildl
mov
push
adc
orb
adc
sbb
jns
in
cmp
xor
pusha
ffree
jmp
mov
mov
mov
je
push
sbbb
pop
push
cmp
sbb
xchg
fiadds
lds
jmp
pop
sub
xacquire
and
mov
in
mov
ret
imul
inc
push
push
push
ficoml
or
inc
mov
pop
sub
fldcw
ret
and
push
into
dec
xorb
inc
insl
or
shlb
and
leave
dec
pusha
xchg
hlt
sub
sbb
pop
or
and
xlat
push
pop
pushf
movsb
sbb
and
and
or
fadd
push
js
sbbb
sbb
out
or
mov
and
test
addr16
es
inc
cmp
xor
cmpsl
inc
sub
pop
das
adc
or
push
mov
inc
dec
lcall
inc
xchg
and
and
aaa
shr
pop
les
push
mov
test
imul
sub
cmp
sbbb
inc
and
xchg
xchg
add
sub
xchg
loope
test
inc
sub
mov
push
pop
adc
pop
pop
in
xchg
dec
dec
dec
iret
lret
daa
das
loopne
rcl
fwait
lods
scas
inc
sahf
add
pop
adc
pushf
add
push
in
push
push
out
lahf
xchg
hlt
mov
repz
jmp
je
pop
enter
push
mov
and
mov
cltd
jp
cmp
lock
xchg
je
pop
add
movsl
andb
popa
pop
and
test
cmp
adc
imul
popa
insb
push
jmp
or
xchg
test
jecxz
mov
cmp
ret
sbb
sbb
out
pop
rcll
sbb
rolb
mov
and
or
iret
adc
adc
sbb
add
adc
adc
lods
dec
add
add
adc
push
dec
aas
jecxz
ss
inc
int
sbb
mov
dec
je
xchg
aad
rolb
test
shll
lcall
sub
cltd
lcall
cmpsb
cmp
xor
cwtl
cmp
mov
int
sub
mov
aam
and
ds
adc
lret
sbb
pop
stc
and
sub
and
lahf
pop
jmp
mov
jg
movsl
add
aam
push
and
jbe
push
mov
aad
adc
add
aas
sub
adc
mov
and
push
in
imul
negl
shlb
push
mov
inc
ja
push
xor
imul
dec
and
add
dec
inc
or
popa
jecxz
leave
int3
add
and
xchg
push
mov
or
adc
push
inc
lret
popa
or
sub
shll
imul
dec
cmpsl
rclb
xor
and
add
cmp
rolb
rcl
and
jnp
in
adc
fstpl
sahf
fwait
push
ss
sbb
pop
adc
or
pop
xchg
mov
mov
xor
cmp
xchg
rolb
mov
cwtl
xchg
fstp
push
leave
mov
test
sbb
fsub
mov
je
cmp
aam
adc
arpl
jp
or
cmpsb
cmp
cmp
add
push
adc
xchg
test
mov
add
inc
push
fcoms
sub
sub
adc
fs
mov
xor
je
push
xor
adc
mov
ljmp
movsl
push
adc
jge
push
int3
dec
jmp
cmpsl
sub
push
adc
add
push
sub
rolb
xor
test
xchg
inc
push
loope
xchg
les
jns
mov
loopne
dec
inc
imul
mov
sub
bound
add
std
push
aam
scas
mov
in
js
inc
rcl
arpl
enter
push
cmpsb
loopne
inc
add
sbb
out
xor
jne
adc
add
add
xchg
dec
mov
push
cs
sub
xchg
inc
xor
pushf
pushf
aaa
dec
mov
adc
xor
jmp
js
out
sbb
sub
mov
adcl
and
xchg
mov
mov
sbb
iret
jecxz
mov
lretw
insb
sbb
sbb
sub
inc
dec
add
jno
cwtl
sbb
jp
mov
add
push
add
test
in
call
and
out
jae
pop
orb
dec
jne
lret
inc
sub
mov
add
jae
nop
xor
adc
adcb
or
inc
inc
aad
pop
aad
addr16
nop
xchg
jmp
pop
mov
cmpsl
insl
aaa
icebp
pop
sbb
test
mov
mov
movsl
test
adc
xor
inc
orl
enter
xor
mov
add
adc
push
jmp
scas
pop
add
mov
and
test
sbb
test
imul
push
insl
dec
pop
inc
and
test
add
popf
nop
push
pushf
add
hlt
xchg
out
aam
cli
xchg
and
iret
xchg
cmpsb
cmpl
shrb
adcl
loopne
jmp
or
push
or
dec
adc
jmp
sbb
pusha
subb
xchg
aad
mov
loope
popl
adc
push
add
push
lcall
test
xchg
and
stos
insb
inc
pop
xor
out
or
push
cmp
mov
inc
nop
lock
sarl
mov
push
add
adc
pop
outsb
mov
and
shrb
mov
addl
cmp
daa
out
in
cli
mov
add
shrl
xlat
adc
inc
add
jne
sbb
les
cli
add
sub
add
xor
dec
dec
fucom
addb
and
sbb
and
mov
imul
or
stos
jno
add
cli
test
gs
iret
pop
push
xchg
lods
nop
cmc
lods
add
stos
rclb
pop
dec
repz
dec
push
and
and
sub
jo
aam
xor
andl
inc
mov
and
add
xchg
inc
pop
mov
adc
pop
mov
jmp
cmpsl
lcall
and
imul
pop
sbb
cld
mov
or
cmp
adc
ficompl
ja
sbb
out
out
jbe
inc
xor
dec
jns
outsb
test
aam
shll
lds
aam
xchg
push
pop
stos
aam
repnz
insl
imul
ret
adc
push
mov
les
sar
fidivrs
lcall
jg
dec
ret
test
add
or
xchg
rclb
jmp
and
adcb
xor
mov
cwtl
dec
mov
sub
xlat
or
xor
cmp
pop
shrl
test
adcl
sbb
add
dec
dec
jae
add
and
and
out
divb
pop
shrl
or
cli
inc
or
es
mov
push
jmp
inc
repnz
or
aaa
cmc
cmp
jo
jne
inc
add
subb
push
xchg
aam
mov
out
fiadds
pushf
cmpsb
test
xlat
and
test
pop
loopne
or
std
and
and
addr16
cmpsb
mov
push
mov
mov
in
xchg
or
scas
sbb
add
sub
dec
lret
sub
subb
or
pop
push
sub
xor
insl
dec
add
and
xor
fs
and
and
mov
adc
fimull
pop
pop
xchg
and
movsb
or
xchg
xchg
or
lcall
test
es
into
test
and
xlat
lods
add
popa
or
sub
dec
sbb
and
mov
js
popa
shr
xor
out
and
lods
lcall
push
test
and
enter
adc
shlb
addr16
insb
bound
sbb
lods
dec
xchg
push
lcall
cltd
fistpl
sub
dec
sbb
repz
add
cwtl
cmp
pop
add
xor
ret
or
mov
dec
pcmpgtb
xchg
push
test
lret
popa
nop
dec
sub
xchg
shlb
adc
mov
push
leave
setne
add
pop
mov
addb
lea
push
mov
das
jbe
xchg
pop
psubusb
add
out
pop
pop
dec
xchg
lods
cwtl
and
xor
cmp
lods
cmp
add
rol
push
adc
pop
add
xorb
inc
push
rol
add
adc
lods
pop
jae
push
enter
cmc
pop
or
push
push
rolb
adc
inc
cmc
sub
test
add
mov
mov
jmp
sub
dec
dec
inc
dec
adc
sub
dec
mov
movsb
aam
sbb
sbb
inc
int
sub
sub
mov
inc
cmpsl
mov
sbb
xor
pusha
cli
aad
push
mov
sbb
lds
data16
xor
dec
imul
test
clc
orb
push
push
pusha
mov
pop
and
push
mov
or
addb
lret
addb
and
loop
repz
roll
dec
scas
push
out
arpl
data16
jl
xor
sub
scas
movsl
add
adcl
add
pop
or
adc
adc
test
shlb
dec
cmc
pop
and
xchg
outsb
inc
pusha
lcall
inc
arpl
mov
dec
insl
and
mov
test
fisttpl
das
popf
inc
or
out
popa
push
dec
adc
in
mov
adc
imul
jo
iret
insb
mov
sarl
cs
adc
stc
cmp
lcall
movsb
lods
in
add
mov
mov
adc
adcl
push
dec
divl
mov
popa
cltd
xchg
mov
add
xor
or
xchg
mov
push
mov
cltd
rclb
add
or
xchg
xor
es
adcb
lods
test
mov
or
loopne
loope
jno
or
mov
sub
push
pop
cltd
adc
xlat
add
mov
stc
inc
jecxz
mov
or
xchg
inc
rolb
or
pushf
pusha
sarb
gs
push
add
test
xchg
pop
push
sbb
addl
jno
test
dec
mov
sbb
sub
xor
lods
sub
xor
add
ret
adc
aaa
in
xor
out
fdiv
shrb
mov
dec
cld
mov
dec
pop
stos
inc
test
xor
push
add
cmpsl
push
mov
in
imul
test
mov
dec
popa
add
out
mov
mov
adc
jg
sbb
xor
insl
loop
dec
mov
mov
jno
inc
pop
aam
js
fcoml
xchg
pop
add
or
lods
and
dec
mov
xchg
add
sbb
sbb
and
sub
xchg
sub
scas
and
inc
dec
inc
icebp
inc
dec
xor
and
or
or
pop
sub
pop
mov
inc
add
mov
sbb
add
mov
por
jne
pop
xor
push
push
lahf
xor
movsb
cmp
jg
lret
cmp
fistps
in
xchg
and
test
test
aam
xchg
jno,pn
sub
or
test
test
mov
mov
cmpsl
aam
test
push
and
int
or
push
add
mov
sbb
adc
leave
repnz
mov
xor
mov
xor
xchg
fists
xchg
mov
add
addr16
jae
sbb
test
test
loop
push
cmp
inc
ja
inc
call
and
and
inc
lds
lahf
cmp
jb
sbb
push
subb
call
xor
stos
nop
xor
push
or
mov
mov
mov
jae
ret
adc
mov
add
inc
pop
pop
pop
dec
ret
mov
xor
add
bound
pop
aad
loope
push
adc
sbb
jae
push
dec
mov
shlb
add
lock
jbe
nop
inc
ret
fwait
push
push
rcll
addl
pop
inc
sbbb
mov
sti
outsl
adc
loopne
adc
or
push
mov
imul
popf
add
push
and
mov
xor
pop
gs
lcall
test
fnstsw
mov
cs
movb
rorl
mov
inc
or
inc
rcrb
or
ret
cmp
sub
stc
addr16
dec
fchs
push
popa
fucomi
rolb
push
and
push
test
inc
and
aam
add
push
mov
adc
dec
mov
stc
add
sub
lds
ljmp
lods
dec
sbb
push
dec
mov
and
mov
lds
inc
jae
add
inc
adc
cld
jmp
clc
test
mov
dec
jae
mov
data16
inc
leave
pop
xchg
or
je
add
pop
mov
add
rolb
sbb
mov
add
and
sbb
inc
pusha
repz
jbe
rorb
push
lcall
push
sbb
movsb
pushf
sub
xor
adc
add
add
mov
mov
repz
pop
adc
cld
stos
adc
popa
mov
add
mov
xchg
xor
push
cmp
add
outsl
mov
lcall
jae
inc
dec
jge
adc
pop
jns
jecxz
and
xchg
jno
std
inc
or
imul
add
inc
add
push
push
shrl
sbb
adc
popa
aad
jnp
xorl
or
jno
adc
sub
and
dec
inc
call
mov
leave
fsubl
shlb
jno
push
add
or
add
fadd
push
sub
adc
jl
in
inc
loop
dec
lahf
jecxz
lea
jne
movsl
inc
xchg
imul
add
inc
or
adcl
int
pop
xlat
push
mov
and
in
pop
cmp
test
or
xchg
mov
jecxz
cmpsb
ret
xchg
shll
sbb
call
adcl
adc
and
sub
movsl
inc
add
mov
xor
ficoml
inc
fstpl
stos
gs
jne
adc
outsl
out
sbbb
lds
mov
shl
dec
aad
orl
xor
icebp
inc
daa
push
mov
jne
inc
fwait
jecxz
sbb
cmp
nop
mov
mov
iret
cmpsb
mov
cltd
inc
sahf
daa
shl
adc
xchg
and
sub
xor
dec
add
push
and
push
xor
and
icebp
orl
xor
add
pop
and
data16
gs
jns
push
xor
lods
add
push
fwait
dec
or
inc
xchg
cld
mov
xchg
adcb
mov
inc
dec
push
xor
or
cmp
xchg
sub
cmc
jbe
jl
rclb
push
add
fs
aam
jae
add
inc
pop
add
and
aad
dec
ds
imul
sbb
pop
sbb
pop
cmp
sbbb
scas
inc
dec
push
cwtl
and
adc
sbb
addb
add
xchg
jg
adc
xchg
jno
scas
and
xchg
mov
xor
sub
push
jecxz
cmp
and
add
orl
or
jns
dec
pop
rolb
sbb
inc
fld
push
mov
xchg
mov
das
push
cmc
popf
xor
mov
jp
xchg
sbb
nop
stc
xlat
arpl
inc
aam
cmp
jecxz
or
and
nop
or
fiadds
adc
cltd
inc
lea
imul
rorl
add
loop
jge
enter
xchg
and
fstl
sbbb
push
sub
mov
movsl
pop
fldl
pop
add
frstor
ret
push
rorl
fmuls
adc
or
pop
lods
in
test
xchg
sub
aam
push
xchg
jo
movsl
fnstenv
cmpsb
lcall
add
aad
jmp
rorb
inc
bound
sbb
pop
pushl
pop
int
or
lods
xor
adc
cmp
cltd
and
or
push
pusha
xor
or
sub
cmp
push
in
aaa
sbb
test
add
inc
and
int3
pop
dec
sbb
aaa
dec
or
fs
pop
aad
push
push
jle
dec
mov
inc
fisttps
adc
jecxz
xchg
add
mov
add
and
add
test
add
or
xchg
xchg
dec
pop
push
fsts
movsb
subl
mov
bound
repnz
in
std
adc
dec
xor
cmp
pop
cmp
inc
push
push
push
stos
in
lods
es
inc
push
or
movsb
pop
sub
xor
mov
and
lods
sub
jge
adc
push
inc
cmp
inc
mov
in
imul
xchg
jmp
adc
jo
xchg
lods
dec
push
roll
and
sub
pop
out
imul
jno
inc
inc
dec
arpl
add
cwtl
pop
mov
mov
mov
xchg
inc
and
fwait
into
mov
lea
inc
push
ret
les
scas
loopne
add
mov
pop
add
adc
or
inc
pop
and
add
push
shrl
loopne
ds
and
adc
pusha
add
mov
add
push
pop
lahf
add
dec
lea
sub
add
cmp
nop
or
sbb
push
push
mov
scas
pop
sbb
push
mov
inc
ret
dec
pop
cltd
inc
sbb
cmc
xchg
cmp
test
adc
movsl
addr16
dec
push
mov
es
add
mov
adc
fldt
sbbl
xor
push
xchg
aas
jns
add
fs
sub
push
or
cmp
add
les
push
dec
movsb
mov
sub
add
mov
add
dec
inc
push
pop
cmpsb
loopne
xor
stos
int3
push
xor
inc
sahf
mov
xchg
jo
cmc
ljmp
push
and
pusha
dec
dec
and
pop
adc
testl
cmp
mov
daa
bound
pushl
sbb
or
ret
enter
cld
push
insl
pop
push
cmpsl
push
or
movb
xchg
sbbb
jb
dec
jne
movsb
add
jge
cmpsb
cmp
push
add
shr
dec
inc
pop
lcall
fwait
call
push
jg
shrb
inc
test
or
test
or
movsl
aad
push
or
push
dec
xchg
es
imul
inc
repnz
dec
mov
imul
sbb
aam
mov
inc
repnz
xor
add
xchg
aad
dec
mov
adc
ret
sbb
inc
or
add
add
mov
subl
or
mov
loop
xor
pop
pop
leave
jae
mov
leave
sahf
aaa
xchg
cmp
sbb
jns
mov
mov
push
inc
or
imul
ret
xchg
dec
stos
inc
leave
addl
cmp
test
push
jg
nop
sahf
test
xor
cmp
subb
pop
dec
adc
inc
inc
mov
bound
imul
dec
cli
pop
fsubp
mov
add
mov
imul
pop
add
sub
adc
adc
push
pusha
push
repz
stc
sbb
and
mov
dec
add
push
nop
movsl
sub
mov
xchg
loope
add
inc
test
dec
xor
lods
mov
insb
jmp
add
or
xchg
ja
xor
cmpsb
lcall
adc
sbb
or
mov
xchg
test
mov
lret
insb
ret
push
adcl
push
sahf
clc
and
rclb
sub
adc
nop
push
jge
aam
adc
out
or
outsb
inc
mov
inc
sahf
add
pop
push
inc
push
sbb
cs
les
cs
add
sub
cmc
and
inc
cltd
mov
stc
rolb
push
add
adc
mov
sub
ret
aas
sbbl
imul
stc
pop
stos
lret
andb
push
dec
or
mov
ret
adc
adc
clc
sub
adc
jno
cmp
push
xchg
fnop
fsubl
addb
jecxz
sbb
push
jo
inc
dec
dec
cmpsb
push
ret
loopne
push
add
or
inc
adc
dec
ljmp
add
sub
cmpl
sub
jo
jno
push
inc
xor
cmp
movsl
cmp
movsb
add
sbb
andl
pop
leave
add
jbe
mov
and
stos
cmpsl
movsl
popf
stc
add
sbb
mov
fidivl
adc
jo
sbb
mov
pop
fisttpl
or
sub
pop
and
lds
in
sub
test
cmp
dec
pop
rorb
js
xor
stos
add
sub
add
and
cmp
test
fcoml
push
sub
add
or
das
das
mov
add
leave
je
pop
les
adc
jg
insl
pop
pop
stos
mov
add
out
inc
pop
je
fnstsw
add
sub
test
push
icebp
push
sbb
jns
stc
adc
xchg
pusha
mov
mov
inc
mov
movb
xchg
loope
add
sbb
mov
jle
test
stos
dec
dec
movsb
push
loopne
aam
add
xchg
add
imul
jmp
aad
stos
inc
or
or
and
push
and
cmp
xorl
fld
push
jnp
rolb
or
outsb
cltd
cmp
movsl
leave
fbstp
and
cs
mov
dec
push
lcall
or
lahf
sub
mov
adc
inc
rorl
in
sub
test
cli
adc
jbe
sub
imul
pop
xor
adc
adc
dec
mov
mov
xor
mov
dec
sbb
dec
pop
xchg
movsb
rcll
mov
cmp
jg
les
lahf
push
mov
and
inc
adc
and
or
push
jne
fisubrl
movsb
dec
das
pop
xor
pop
popa
pop
and
jns
adc
sbb
add
shll
and
inc
cwtl
enter
inc
xchg
pop
div
pop
push
shlb
outsb
pop
stos
jne
pusha
xchg
mov
mov
sbb
adc
mov
out
aam
add
das
mov
jmp
sbb
scas
je
sub
sbbl
xor
push
or
mov
enter
rclb
xor
shrb
arpl
jmp
int3
mov
add
cmp
call
inc
xchg
or
adc
adc
sbb
repz
mov
arpl
popf
xor
mov
push
inc
cmp
scas
roll
xchg
add
and
add
fildl
inc
cltd
dec
repz
sbb
sub
lret
cmp
test
pop
je
stc
lahf
fadd
push
adc
ss
arpl
xchg
xchg
sbb
ret
sar
mov
cmp
fstl
sbb
add
das
or
sahf
xchg
cmp
jno
push
and
sbb
pop
lods
inc
and
movsb
stos
cltd
shlb
cmp
pusha
dec
leave
mov
dec
dec
bound
inc
test
xchg
sbb
rolb
pop
decb
inc
or
inc
aad
xor
gs
cmpsb
cmp
add
dec
xor
test
cltd
mov
fcmovnbe
jno
sub
mov
stos
xchg
popa
adc
ret
jmp
nop
cmp
stos
dec
mov
insl
dec
pop
sbb
mov
inc
xchg
lahf
mov
arpl
nop
pop
popa
jecxz
cmpsl
sub
pop
mov
movsb
push
inc
mov
adc
adc
sub
pop
js
or
rcll
jnp
mov
inc
aad
aam
add
leave
cmp
outsb
loope
push
push
lds
lret
movl
test
push
inc
nop
sub
cmp
push
mov
adc
sbb
mov
mov
sbb
xor
cltd
jb
mov
leave
mov
xchg
shlb
xchg
dec
mov
mov
lods
or
loope
aaa
inc
adc
push
adc
jo
inc
sbb
ja
sub
gs
ljmp
je
outsb
sub
push
lods
orb
xor
daa
add
and
movsl
inc
rcll
adc
test
ljmp
xchg
mov
cmp
pusha
adc
aaa
scas
push
add
push
mov
or
dec
dec
and
adc
fnstenv
add
imul
aaa
inc
jns
insl
dec
mov
push
mov
and
inc
pop
ret
mov
mov
add
sub
cmpsb
mov
xchg
mov
jo
push
mov
rcrl
stos
ljmp
sub
test
add
lcall
push
leave
push
xchg
lea
rorl
mov
mov
shrb
and
orb
fld
add
adc
add
lret
jg
adc
ds
and
or
ja
mov
addb
add
xchg
and
mov
xchg
in
rcrl
sub
insb
pop
mov
add
inc
mov
ret
mov
push
cmpsb
adcb
test
xlat
push
int
lods
nop
popa
stos
add
sub
push
pop
xor
add
mov
in
xchg
xor
and
out
mov
or
iret
add
in
push
xlat
add
leave
jae
mov
je
shl
int
adc
sub
push
and
add
fisttpl
rolb
pop
cmp
or
pop
dec
ret
push
pop
push
dec
paddusb
js
xchg
inc
cmpsl
inc
pusha
out
lcall
leave
sub
addl
cltd
sub
mov
mov
les
cmp
pop
and
add
mov
xchg
cmpsb
dec
jne
ret
inc
jae
inc
adc
nop
movaps
aaa
mov
or
inc
outsl
xor
mov
fildl
lcall
jne
movsb
shrl
mov
imul
aaa
lahf
or
bswap
mov
repnz
add
xor
push
repnz
pushf
fsts
or
mov
cltd
popa
adc
xor
xchg
cwtl
pop
cmovl
mov
adc
mov
xor
mov
and
lcall
sub
dec
idivl
add
nop
or
mov
mov
push
nop
jg
pop
mov
inc
push
xor
or
ljmp
sarb
ret
decb
lret
sub
lahf
movsb
push
mov
imul
lods
add
mov
shlb
adc
sti
pop
or
out
xchg
sub
dec
sub
cmp
lret
and
lret
inc
pop
int
mov
sub
xchg
lcall
out
inc
add
pop
mov
dec
xchg
mov
xchg
xor
lds
add
add
addr16
das
cmpsl
pop
or
push
test
push
shlb
jno
out
jmp
xor
aam
push
fnsave
add
jne
jne
sbb
push
xchg
add
pop
and
pop
sbb
xor
jg
or
xchg
xchg
lods
ss
or
and
mov
add
mov
imul
adcl
lret
leave
xor
push
popf
imul
bound
popa
push
adc
js
adc
mov
in
add
int3
mov
add
or
fwait
pop
jno
and
jle
inc
or
shr
fimull
mov
push
int
inc
push
cwtl
cmp
lods
es
fcoml
mov
xchg
and
in
cs
inc
sahf
in
cmp
test
orb
xor
rcl
mov
sub
pop
insb
sahf
std
push
test
in
jns
and
mov
cli
jp
ja
loopne
lods
js
and
movsl
add
xor
push
sbb
std
inc
dec
push
push
and
add
cld
jl
nop
push
adc
xchg
sbb
ss
aad
add
mov
popf
cwtl
dec
mov
nop
cmpsb
lods
insl
mov
lods
mov
jnp
rol
aam
ss
test
hlt
repz
add
jmp
icebp
cmpsb
fldcw
push
add
imul
mov
test
mov
pop
movsb
xchg
pop
cmp
sbb
ret
pop
or
mov
fwait
movl
les
mov
sub
xor
or
pop
movb
inc
shrl
es
inc
push
sub
test
and
and
sub
repz
sbb
jne
inc
fists
leave
fbstp
push
and
xchg
rcl
add
addl
adc
rorb
sub
and
fstpt
insb
dec
lret
daa
add
pop
movsb
sub
pop
aaa
xchg
xor
or
in
addb
push
add
pop
jbe
sub
mov
inc
push
imul
imul
or
movsb
into
and
and
pop
and
xchg
ljmp
loope
int3
mov
cmp
test
inc
fistpl
xchg
add
or
add
inc
popa
and
pop
xor
cmp
cwtl
jne
inc
rclb
adc
stos
adc
xchg
lods
mov
push
sbb
es
or
test
push
sbb
lds
xchg
or
dec
sub
inc
cmc
repnz
inc
lcall
or
adc
inc
test
mov
inc
lds
adc
hlt
lea
or
xchg
popl
add
movsl
insl
mov
fimull
and
adcb
dec
sbb
add
test
outsl
sarb
shrl
add
pop
jne
inc
push
mov
bound
cwtl
movsb
and
adcl
push
sti
addb
pop
fwait
push
adc
pop
test
push
stc
add
xchg
insl
jecxz
icebp
or
adc
les
pop
and
mov
sbb
aas
inc
mov
insl
jb
sbb
aad
test
push
jb
dec
pop
adc
cwtl
mov
pusha
push
out
andl
xor
iret
lret
dec
loopne
inc
mov
movsl
out
xchg
inc
and
rorl
inc
sbb
into
rolb
sti
push
mov
sub
addps
push
mov
scas
sbb
xor
sbb
add
jns
mov
xlat
andb
pop
ljmp
and
xchg
push
es
add
insl
sbb
dec
add
sub
xor
cmp
add
aad
test
mov
and
inc
and
push
sarb
push
movsl
xor
in
imul
repz
in
add
or
lods
addl
ret
popl
push
inc
or
mov
imul
fsubrs
sbb
scas
xor
dec
popa
push
inc
or
pop
int
lcall
mov
cmp
sub
add
gs
mov
jmp
pop
int3
mov
mov
sbb
and
xor
jl
push
data16
pop
cld
adc
adc
mov
mov
imul
push
xchg
mov
aas
repnz
rorl
nop
cmp
xlat
addb
push
mov
mov
jne
je
xchg
and
test
test
mov
sarl
pop
lret
or
cmp
cmp
cmp
repz
and
push
inc
lods
sbb
inc
push
sbb
fwait
cwtl
arpl
orl
xlat
mov
aaa
sub
pop
mov
xor
int3
daa
adc
ret
add
adc
stos
add
xlat
mov
adc
push
pop
and
mov
jnp
cmp
rcl
in
rolb
jmp
or
test
mov
add
aad
push
inc
inc
add
inc
pop
mov
lret
and
mov
and
arpl
shlb
add
xor
mov
pop
lods
rorb
andl
mov
flds
notl
inc
pop
je
incl
loop
add
push
adc
stos
xorl
jecxz
sbb
push
mov
mov
push
lds
inc
lret
lea
xchg
aam
and
popf
test
mov
je
or
xchg
cmpsb
jno
pop
add
add
and
add
lods
mov
pop
pop
mov
add
inc
adcl
and
fcmovbe
fucomp
add
insb
jmp
xorb
cwtl
test
mov
pop
mov
adc
add
or
jns
mov
enter
xor
or
push
fdivr
clc
add
mov
push
rolb
sbbb
adc
adcl
or
jae
push
inc
subl
sub
sbb
push
mov
push
mov
adc
mov
push
mov
xchg
mov
lret
adc
pop
mov
jo
add
push
mov
xchg
cmp
mov
and
mov
ja
mov
int
or
adc
add
dec
enter
dec
cwtl
fstl
push
xor
add
pop
sbbb
scas
push
sti
or
dec
mov
add
std
lea
es
dec
sbb
repz
push
imul
in
push
push
inc
adc
pop
outsb
test
bound
xchg
xadd
scas
sbb
sahf
cmovae
loop
add
or
xor
lret
sub
sub
ficoml
lea
in
jae
xchg
inc
test
xchg
push
push
or
popa
push
femms
nop
movsl
adc
lret
mov
xor
sbb
lret
inc
gs
xchg
dec
loopne
xchg
je
and
and
mov
inc
xor
or
adc
aas
incl
in
subb
insb
push
aaa
popa
leave
lods
dec
sbb
sub
push
iret
cmp
mov
xchg
movsl
sub
mov
dec
adcl
out
lods
in
sbb
dec
in
cmc
mov
push
push
scas
push
xor
test
pushf
mov
in
push
addr16
repnz
outsb
jp
dec
inc
adc
push
dec
lcall
cmp
and
xchg
sub
inc
xor
inc
lcall
inc
xor
or
sarl
mov
dec
dec
lcall
adc
mov
mov
sbb
nop
scas
mov
lret
sub
adc
int
enter
xor
arpl
or
inc
das
mov
icebp
imul
nop
sub
popf
jmp
sbb
scas
les
jnp
dec
or
sub
fisubrl
adc
sbb
push
mov
or
xor
xlat
pop
sbb
and
push
repnz
stc
bound
nop
out
sbb
test
bnd
out
cmp
sti
xor
adc
inc
xchg
lea
add
and
rcrb
push
add
xor
push
iret
adc
or
outsl
xorb
dec
push
daa
push
xchg
add
adcb
ret
fldenv
test
outsb
dec
sbb
js
inc
dec
pop
outsl
xor
push
ret
rorb
ds
push
add
pop
cmp
add
ret
jmp
add
xor
jae
pop
xchg
je
outsl
ret
loope
jns
xchg
rcl
sub
jle
push
popa
stos
xor
int
insl
jmp
sub
push
andl
inc
dec
loopne
or
cmp
xchg
or
cmpsb
shl
dec
inc
and
insl
adc
or
fistpll
xor
adc
stos
scas
cs
push
and
out
stos
add
add
inc
movb
sub
push
inc
dec
xor
mov
je
push
popl
and
sbb
cmp
ja
pop
adc
adc
or
loopne
and
jae
inc
push
adc
inc
sub
rolb
in
adc
insb
jmp
dec
imul
loopne
scas
cwtl
xorl
mov
int3
out
adc
mov
sub
mov
test
and
inc
cwtl
orb
jo
pusha
add
dec
push
jo
daa
jo
insb
loopne
sti
jge
sub
add
sti
imul
and
and
or
lea
jmp
pop
adc
xor
mov
xorl
arpl
inc
loopne
jae
push
pop
cmpsb
es
imul
mov
add
loope
cmp
push
ret
mov
jecxz
and
dec
add
mov
dec
push
cmpsl
sbb
adc
push
fdiv
subl
sub
add
xchg
add
or
subl
loop,pt
push
sbb
jmp
sub
xchg
mov
and
xchg
and
add
shll
cwtl
sub
pop
stc
lret
xlat
add
push
xchg
out
shrb
lods
dec
dec
jne
jg
jp
dec
mov
sub
mov
xor
daa
shll
xor
sar
subb
inc
jmp
jmp
vmwrite
dec
push
jno
pop
jmp
sub
mov
fdivrs
pusha
arpl
in
inc
shlb
and
xor
xor
jmp
leave
add
ret
mov
push
sub
sub
adc
add
push
lahf
outsb
popf
sbb
add
mov
add
leave
inc
pushf
push
shrl
arpl
jns
add
mov
mov
inc
sbb
pop
adc
adc
add
or
and
stos
or
mov
jp
xchg
shll
ljmp
xor
lret
fsub
pusha
stos
push
test
cmp
leave
xor
and
sbb
adc
xor
adc
dec
imul
mov
addr16
jbe
sub
sbb
lods
iret
mov
mov
jmp
pop
and
and
jb
jo
pop
push
xchg
and
ljmp
inc
and
test
movsb
jns
dec
aad
and
cwtl
test
je
or
adc
cmp
add
cmp
ja
stc
add
hlt
jae
sbbl
inc
enter
repz
adc
mov
lret
or
sbb
sub
aad
mov
pop
aam
aaa
inc
mov
cmpsb
nop
inc
dec
jl
or
ret
xchg
sbb
nop
push
das
sub
push
pop
jno
xor
ljmp
dec
mov
mov
popa
adcb
jo
sub
cmpsb
addl
or
pop
ss
sbb
push
jae
xor
push
shr
test
fsubrp
fstpl
adc
mov
mov
outsl
outsl
mov
xlat
dec
push
mov
dec
inc
rcrl
pusha
sbb
addl
lds
jno
adc
test
or
inc
aaa
sbb
pusha
nop
dec
add
movsl
test
or
or
lods
or
xor
or
aas
out
lds
mov
rcrl
push
add
add
or
or
or
insl
cmpb
jo
pop
scas
sahf
and
xor
daa
pusha
inc
cmpsl
addr16
or
add
sub
jl
pop
push
adc
pop
xchg
jno
test
push
repnz
out
sbb
cs
xchg
pop
lods
sbb
or
cmpsb
sbb
lret
sub
sarl
adc
and
and
mov
popf
adc
ljmp
test
rorb
cli
xchg
sbbl
repz
xchg
mov
add
aam
jno
push
add
mov
inc
push
inc
push
cwtl
inc
aad
rcll
pop
push
inc
rcr
sub
sbb
cmp
cmp
jmp
jmp
clc
pop
pop
xor
sti
test
inc
dec
mov
sbb
mov
mov
inc
hlt
add
pop
xor
and
or
inc
push
mov
jge
fs
stc
jo
out
clc
mov
push
cmp
jl
aad
or
les
sub
pop
and
add
arpl
inc
or
and
add
aad
mov
aam
lea
push
cltd
and
sbb
test
enter
roll
je
out
movsl
pusha
arpl
rol
stc
lea
sub
push
inc
ja
rcrb
cs
fldenv
sbb
in
push
icebp
mov
inc
dec
and
rcrl
sbb
sub
pusha
cmp
mov
cmp
add
adc
mov
jo
mov
sbb
int
inc
or
test
ret
mov
cli
mov
jns
push
decl
cmp
rcrl
jne
mov
and
ffreep
sbb
je
cmpsb
inc
pop
imul
xor
pop
or
push
pusha
cltd
push
fs
push
or
rorb
imul
xchg
cmp
mov
add
mov
mov
ljmp
push
rolb
cmc
and
lcall
insl
rolb
stos
push
es
xchg
adc
orl
and
sub
sub
lds
xor
orl
rolb
cld
add
dec
jne
jnp
call
push
aam
ss
int
outsb
sbb
mov
popa
mov
jge
push
xchg
lea
xor
clc
aam
xor
rclb
xor
jae
pop
outsb
xor
add
mulb
adcb
cmc
mov
xchg
jno
push
xorb
push
mov
test
xchg
and
cld
push
stc
add
add
test
jl
xor
out
or
ss
add
mov
pop
je
lods
scas
dec
aad
inc
mov
sbbb
cmp
mov
sbb
mov
pop
stc
mov
mov
add
mov
fcoml
add
dec
nop
cmp
adc
mov
jo
and
and
jae
pop
xor
dec
out
xchg
adc
leave
pop
scas
mov
push
push
out
xor
repnz
inc
sub
orb
insl
aas
rcl
add
add
cltd
add
roll
daa
jbe
cmpsb
pusha
add
std
and
je
in
cmpsl
xor
add
fs
push
testl
inc
outsb
cs
push
jns
add
cmp
push
adc
add
mov
mov
xchg
or
or
mov
rorb
push
nop
outsl
rorb
add
mov
enter
ret
push
out
push
jae
test
lea
stc
lcall
mov
dec
sbb
les
xor
imul
shlb
adc
push
xor
sahf
movsl
leave
ss
fidivrs
dec
xor
repnz
shrb
mov
xchg
imul
cltd
scas
ds
push
and
gs
mov
mov
fsts
xchg
jno
and
jecxz
push
sbb
add
or
dec
sarl
scas
and
addr16
push
stc
fiadds
mov
push
add
andl
inc
inc
add
mov
out
mov
sbb
rep
sub
mov
dec
or
xchg
or
or
mov
loope
inc
adc
and
or
push
es
sbb
and
nop
xchg
popa
icebp
je
add
push
lods
dec
push
dec
push
repnz
sbb
and
int3
add
push
add
leave
test
inc
inc
add
jne
cmp
cmp
test
inc
fistl
shrl
cmpsb
xor
add
cmpsl
loope
mov
add
ljmp
sub
add
jns
int3
mov
push
and
and
fs
cwtl
push
sub
imul
iret
cmp
push
inc
xor
and
in
call
lahf
mov
jns
int
movsl
out
push
andb
shll
test
int3
or
subl
popa
push
inc
sbb
lahf
mov
dec
pop
sub
mov
mov
fiaddl
mov
ja
fistpl
test
inc
pop
popa
jmp
cmp
pop
and
push
adc
aaa
mov
push
and
dec
mov
adc
pop
lds
or
dec
cmpsl
or
mov
shrl
scas
fadds
xor
dec
in
loopne
lock
cmp
das
pop
mov
mov
xor
jno
mov
push
xor
sahf
push
les
popa
xchg
mov
gs
ss
dec
in
test
xchg
orb
dec
xor
add
dec
call
nop
movsl
outsb
pop
mov
mov
out
mov
rorb
mov
and
cmpsl
mov
sbb
aam
inc
arpl
daa
insb
jmp
cmc
sub
aad
mov
xor
pop
jg
dec
cmpsl
inc
push
dec
adc
das
inc
and
jo
ret
and
rcrl
adc
mov
xchg
xorb
pushf
and
hlt
adcb
pusha
add
hlt
in
pop
jge
rclb
inc
sarl
and
into
or
pop
movsl
or
adc
or
push
jnp
jecxz
jmp
jno
imul
test
or
aad
arpl
enter
adc
or
movsl
add
mov
mov
sub
inc
push
add
mov
lcall
xchg
pusha
shll
frstor
or
xor
mov
and
xchg
add
or
pop
rolb
lods
pop
push
mov
mov
cltd
dec
sbb
mov
dec
ljmp
xchg
flds
pusha
test
adc
in
arpl
and
push
mov
popf
inc
push
leave
add
pop
pop
pop
adc
lret
xchg
or
add
dec
add
dec
push
xchg
rcll
add
or
pop
adc
jns
cltd
ja
dec
push
adc
add
call
inc
sub
orl
ljmp
xchg
push
popf
push
add
pcmpgtw
inc
and
test
inc
js
int
pop
push
dec
gs
and
popa
xor
sub
sahf
in
jnp
inc
pop
mov
and
adc
add
pop
ds
or
mov
adc
adc
adc
mov
pop
jno,pn
dec
movsl
adc
adc
xor
xor
pop
push
call
or
bound
inc
sbb
cmp
add
adc
lcall
mov
push
aas
cmp
les
rorl
add
in
lahf
sti
test
ret
inc
gs
movsb
and
adc
fdivl
popf
mov
dec
shll
stos
mov
push
or
xchg
cmpsb
jge
dec
and
pop
push
lock
inc
imul
lods
fistpl
xlat
and
inc
inc
das
dec
pop
pop
rclb
add
or
nop
arpl
dec
sbb
mov
lcall
mov
ja
test
sbb
les
data16
stc
adc
xor
roll
das
rolb
or
jle
mov
lds
stos
xor
dec
pop
je
push
mov
push
or
dec
sbb
sub
fistl
das
adc
mov
and
or
dec
and
insb
sbb
fsubl
add
adc
test
fwait
fs
add
dec
inc
sbb
or
sbb
mov
push
pop
int
push
mov
nop
push
mov
push
aas
les
test
xor
or
loopne
scas
xor
add
push
repnz
out
push
and
call
add
rolb
int
add
cmp
leave
jae
pop
lcall
fadd
add
roll
aas
fdivrs
and
and
dec
jae
stos
xchg
mov
es
sub
divl
inc
fadd
add
and
cmp
pop
push
add
rclb
sbb
nop
lahf
xchg
les
or
mov
xchg
dec
pop
mulb
dec
cmp
jne
orb
shll
sbb
int
inc
movsb
test
rol
ffree
aam
add
xchg
jne
lds
pop
sbb
mov
cmp
and
xchg
test
ds
mov
inc
ud1
add
xlat
add
push
add
rclb
or
mov
inc
push
adc
mov
xor
or
pop
xchg
mov
xchg
cmpsb
sbb
das
arpl
stos
add
adc
fiaddl
push
popf
add
repnz
ret
shlb
into
xor
movsl
add
cwtl
loopne
adc
inc
jg
xor
xor
js
jge
or
fdivrl
popa
add
dec
mov
xchg
xor
push
jl
xorb
gs
das
and
inc
dec
inc
je
subb
pop
mov
add
popa
push
clc
push
rclb
ja
enter
movsb
leave
imul
mov
adc
inc
jle
add
loope
shlb
xor
out
lods
mov
inc
gs
inc
insb
or
mov
push
xor
es
add
rorl
cmc
ret
jns
or
adc
lret
inc
jb
addl
push
xor
push
xchg
cmpsb
cmpsb
push
mov
push
cltd
ljmp
xchg
test
inc
push
ret
cmp
mov
ljmp
leave
popf
pop
jo
rolb
mul
daa
xor
gs
xchg
loop
cmp
or
pop
pop
push
adc
sub
push
dec
and
mov
add
add
and
inc
lods
push
repnz
add
addl
movsb
lods
dec
mov
aad
les
cmp
movsb
sti
lea
dec
shlb
rclb
cmp
fcmovb
and
push
sub
pop
pop
xor
les
push
pop
xchg
iret
dec
cs
xchg
pop
imull
xchg
test
jg
push
xor
cwtl
inc
sti
mov
pop
leave
jecxz
flds
shlb
xchg
cmp
cltd
mov
nop
movsb
sahf
je
sub
mov
pop
popf
rcll
adc
inc
adc
rorl
mov
jp
cmpsl
push
xor
sbb
stos
inc
pop
inc
xlat
insb
out
bound
sbb
icebp
lds
inc
or
int
xchg
or
xorb
or
test
dec
push
scas
lea
push
test
cmp
add
push
mov
insl
aad
mov
cwtl
mov
jne
fsubl
pop
out
mov
xor
cmpsl
cs
and
or
jae
insl
test
in
outsl
xor
sub
pusha
pusha
dec
cltd
ja
dec
or
sub
repz
push
scas
scas
dec
mov
test
xchg
aam
rclb
imul
adc
movsb
cli
or
nop
and
sarb
shll
sbb
roll
jo
sub
or
add
xchg
inc
jae
mov
pusha
xor
call
fsubrs
mov
dec
stos
sbb
and
xlat
nop
loop
test
scas
or
scas
loop
call
mov
inc
add
sub
or
divl
insb
std
ret
xor
inc
push
add
or
sbb
mov
cwtl
add
insb
pusha
stc
jno
mov
ret
arpl
insl
or
stos
inc
cmpb
ljmp
add
scas
pop
out
pop
and
sbb
pop
push
xchg
dec
in
pop
xchg
lret
sbb
add
xchg
and
add
xchg
test
add
push
mov
xchg
push
inc
adc
pop
push
mov
adc
stos
shll
ret
xchg
scas
lahf
jne
push
andl
in
add
pop
pmulhw
mov
rclb
push
emms
sbb
inc
dec
push
sub
adc
xchg
gs
and
cwtl
sub
clc
lret
loope
fcmovnb
andl
int
ret
xchg
addb
dec
add
xchg
adc
pop
inc
rorl
aaa
dec
subl
in
cwtl
inc
cmp
mov
add
xchg
rolb
es
pop
adc
dec
sahf
xor
nop
addr16
addl
dec
ficompl
and
xchg
xchg
dec
sarl
add
rcrb
mov
dec
and
push
cmp
cmc
test
sbb
sbb
sahf
add
dec
xor
imul
mov
pop
xor
xor
aam
add
repnz
shlb
imul
cmpsl
mov
mov
dec
lcall
push
inc
or
mov
rcrl
mov
rorb
andl
jmp
jge
lsl
jne
inc
adc
repnz
gs
mov
sub
test
aad
mov
lcall
push
xor
cmp
sbb
xorb
push
push
and
or
roll
dec
cmp
iret
mov
fcomip
or
rolb
xor
pop
sbb
lods
in
or
outsl
das
push
ja
and
dec
mov
and
insl
or
sub
es
add
pop
pusha
inc
pop
adc
jns
ja
add
sbb
insb
add
rcrb
lods
mov
sub
inc
inc
ret
dec
jecxz
cmp
sbbb
inc
cmpsb
lods
mov
push
jmp
rclb
mov
stos
xchg
leave
cmp
and
popa
and
in
in
sbb
in
sbbb
movsl
outsb
in
push
sarl
jo
inc
xorl
or
cltd
addb
xchg
cmp
arpl
je
imul
pop
xchg
mov
pop
xor
stc
inc
inc
cmp
jns
mov
jo
int
decl
mov
inc
rclb
adc
popa
inc
add
dec
test
pop
adc
sub
imul
and
adc
repz
jmp
test
adc
adc
and
adc
lret
shlb
mov
in
mov
or
test
ljmp
arpl
push
insl
adc
mov
sub
xlat
inc
adc
outsl
add
cmp
cmpsb
loope
sbb
jne
inc
repnz
jae
and
movb
jns
test
cwtl
popa
sub
stos
or
push
or
lock
jge
add
and
mov
pop
orb
sub
jb
and
leave
or
mov
loop
cs
inc
ss
inc
sbb
pop
pop
je
aad
push
jo
mov
mov
push
xor
outsb
nop
aad
test
stos
rolb
data16
imul
movb
or
and
orb
xor
mov
scas
addb
pop
fimuls
dec
lahf
mov
je
inc
adc
mov
rcr
xor
mov
push
das
mov
pop
add
notb
sbb
sti
add
pop
gs
jae
xchg
rolb
fs
or
leave
data16
adc
xlat
inc
and
xchg
mov
popl
adc
shrb
inc
sbb
inc
dec
add
push
mov
pushf
iret
add
sub
ret
inc
leave
add
ljmp
and
stc
inc
sahf
dec
push
add
jno
or
dec
dec
dec
add
xchg
bound
scas
mov
sahf
out
popf
icebp
rcll
dec
jno
ljmp
shlb
inc
out
dec
sbb
nop
xchg
xchg
and
test
lds
test
cmc
sub
movb
add
mov
mul
aad
mov
pop
dec
shll
nop
sbb
inc
push
nop
dec
or
dec
cmpb
jmp
addb
dec
xor
shll
jp
dec
imul
or
scas
mov
push
fcoms
push
test
adc
rorl
fnsave
repnz
lahf
test
xchg
stos
inc
loope
cmp
movsl
leave
and
pop
add
dec
mov
aam
mov
xorb
sbb
xchg
cwtl
mov
cmpsb
sub
xchg
jno
mov
rolb
xchg
lds
cmp
adc
and
or
pop
shrl
dec
les
in
adc
aad
adc
sbb
mov
ljmp
lds
leave
pop
xchg
lea
add
cmp
es
add
adc
jo
loope
dec
and
dec
fbstp
mov
insb
or
movb
push
add
add
jnp
popa
or
inc
mov
jo
pop
sub
or
sub
lods
sbb
xor
mov
mulb
out
ror
and
cmp
cmp
add
lret
iret
add
add
mov
in
jmp
or
dec
xor
cwtl
push
aam
inc
xchg
and
mov
fisttps
jns
test
test
xchg
pop
add
fs
lea
mov
xor
aam
dec
push
xor
push
cwtl
jo
stc
hlt
jmp
adc
add
pop
movsb
jns
xor
jl
inc
movsb
test
add
mov
jno
or
xorb
add
mov
mov
and
popl
aas
cmp
add
leave
ds
inc
adc
inc
call
dec
and
movsl
and
xchg
cwtl
mov
rorl
add
sub
or
sbb
push
dec
sub
popa
or
and
lock
movsb
push
stos
repz
xor
sbbb
xor
xor
push
dec
bound
sbb
fisttpll
shlb
call
cmp
mov
or
push
jae
les
stos
add
mov
std
les
cwtl
iret
and
add
or
daa
loopne
and
daa
add
or
sbb
popa
and
sbbb
fildl
jno
adc
lret
xchg
cmp
xchg
ja
mov
mov
es
pop
pushf
xchg
push
jo
scas
and
shlb
hlt
xor
imul
xchg
xchg
jo
rolb
sub
dec
pusha
pop
loopne
add
cmp
xor
jae
in
lret
pop
push
orl
aaa
push
cwtl
sub
sub
push
arpl
scas
stos
pop
cmpsl
xchg
dec
pop
or
add
popl
test
lods
pop
push
repnz
lods
mov
xchg
cltd
xor
arpl
insl
or
sahf
xchg
sub
inc
ljmp
xchg
dec
sbb
stos
lcall
shrb
ret
inc
mov
mov
imul
ret
add
or
in
popa
and
inc
int
lcall
mov
add
cmp
cmp
xchg
into
mov
or
dec
aad
push
loopne
mov
inc
sub
mov
in
sbb
nop
xchg
out
xlat
cld
hlt
inc
push
xchg
je
mov
cwtl
xor
inc
shlb
adc
or
sub
mov
push
and
inc
inc
adc
arpl
add
add
push
add
sbb
jge
test
test
leave
outsl
adc
xchg
cmp
push
push
add
mov
add
leave
sub
xor
adc
addb
test
adc
push
mov
push
pop
inc
subb
and
and
mov
cmp
shl
loope
outsl
popf
movsl
cmp
dec
and
push
and
adc
add
xchg
push
mov
out
adc
dec
mov
ror
shlb
inc
movsl
dec
int
or
sbb
pop
fiadds
and
inc
dec
dec
fisttps
orb
pushf
pop
xchg
add
adc
sub
das
lret
cmp
iret
push
insb
cwtl
xor
xchg
or
and
and
out
cmpsb
scas
fs
inc
scas
or
mov
gs
xchg
out
jo
psubb
xor
pop
inc
dec
dec
xlat
or
push
and
ja
xor
mov
push
cwtl
insl
addb
dec
push
mov
jmp
add
jecxz
lret
outsb
inc
or
mov
push
dec
sbb
adc
dec
aas
arpl
movsl
pusha
aaa
pusha
push
pop
or
subb
je
push
lret
jl
or
popa
sbb
push
aaa
and
addr16
mov
dec
and
push
inc
test
mov
iret
mov
xor
pop
jno
push
pop
inc
and
inc
push
push
rorb
add
and
cmp
add
dec
mov
test
lea
push
dec
add
sub
push
repnz
dec
sarb
jne
mov
and
inc
leave
lock
sahf
dec
adc
mov
lahf
loope
sahf
push
add
test
sub
dec
dec
or
and
sbb
xor
cmp
add
addl
jecxz
add
rcrl
or
sbb
dec
pop
xor
mov
sub
insb
addl
bound
andb
fwait
sub
push
stos
and
xor
icebp
push
add
loopne
push
jmp
and
mov
mov
mov
movsb
xor
cmp
cmpsb
call
lea
sub
lret
mov
xchg
sbb
sub
inc
mov
popa
das
loope
cmp
shrb
xchg
xor
inc
mov
push
mov
out
int
adc
inc
add
or
es
sub
add
push
mov
dec
mov
xchg
aad
cmc
cmp
loope
add
mov
xorb
or
and
add
mov
loope
jne
dec
cmp
add
lds
pop
add
mov
cmpsb
cmp
lret
add
jle
add
lods
lea
or
dec
rclb
and
sub
gs
and
pusha
lea
insl
mov
fimull
adc
rolb
mov
mov
mov
out
mov
ficoms
dec
sub
add
mov
dec
cs
mov
arpl
sahf
pop
faddl
outsl
add
arpl
sahf
subl
mov
dec
pop
dec
sub
sbb
imul
mov
xorl
ljmp
sbb
adc
push
inc
inc
rolb
cmp
ret
add
cwtl
addb
cmp
sub
aas
movsl
mov
in
mov
pop
dec
popf
push
repnz
push
cmp
ficompl
repnz
inc
insb
shl
roll
mov
and
leave
add
add
sbb
dec
add
fldcw
xchg
jp
loope
pusha
sbb
dec
and
and
ja
push
push
enter
mov
add
jp
xor
adc
aas
mov
jecxz
repz
pop
nop
sbb
mov
push
push
aad
iret
imul
lea
sbb
cltd
mov
addl
loope
xchg
test
fwait
xor
and
sbb
gs
mov
mov
test
les
shll
pop
orb
mov
leave
inc
inc
add
loopne
inc
dec
in
mov
add
popf
xor
lods
add
or
cmp
sbb
pop
jnp
test
sbb
adc
sub
pop
aaa
dec
adc
dec
scas
add
inc
test
push
insl
mov
xchg
cmp
enter
mov
and
shrb
mov
xor
iret
adc
add
pop
dec
mov
cmpsb
jno
ret
adc
ss
ja
push
rclb
pop
nop
add
stos
fs
fstpl
inc
jno
adc
cmpsl
or
add
sub
test
mov
fidivrl
in
and
pop
adc
nop
cmp
sbbl
adc
jge
push
inc
mov
xchg
push
cmpsb
sub
ret
shr
adc
sbb
sub
inc
ds
push
fistpl
inc
inc
cltd
rclb
mov
xchg
daa
rolb
add
out
xor
add
mov
and
sbbb
insb
lods
push
push
xchg
adc
lea
test
inc
lds
loop
sub
or
pop
fs
rolb
inc
sbb
sub
mov
inc
mov
roll
lods
jbe
nop
cmp
add
or
subb
add
pop
popf
xor
fmuls
stos
sbb
add
mov
loopne
loope
js
iret
inc
add
cmpsb
cmp
rcl
add
cltd
imul
int3
std
xchg
jmp
add
and
sbb
dec
packuswb
xchg
adc
sbb
push
enter
xchg
pop
jno
mov
scas
jns
jne
inc
mov
and
push
shlb
adc
les
and
inc
adc
push
sub
jp
adc
add
fstl
add
lahf
mov
inc
jecxz
ret
mov
cltd
xchg
loopne,pn
and
in
cmp
mov
addl
and
loop
mov
or
or
dec
or
dec
adc
movsb
es
push
xor
scas
xor
jns
lods
pop
test
and
nop
mov
push
add
and
mov
add
arpl
dec
push
xchg
xchg
inc
fwait
and
inc
add
sbb
daa
and
aaa
idivl
add
mov
jmp
call
je
xchg
lea
dec
push
rolb
pop
lcall
adcl
mov
fildl
or
adc
inc
aaa
fidivl
ljmp
adc
xor
fcomps
sub
leave
notb
test
lods
adc
sbb
arpl
or
les
add
and
add
insl
aad
rcrl
and
pop
test
loope
sub
ret
bnd
fldl
inc
es
pop
adc
adc
in
cmpb
dec
dec
cwtl
popa
pusha
add
push
add
lods
push
add
push
out
mov
aam
pop
lods
sbb
sbb
clc
add
or
inc
sahf
test
popa
push
mov
cs
mov
sbbl
lret
cmpsl
lods
lcall
and
inc
push
xchg
dec
mov
and
dec
adc
add
pop
mov
cmpsl
shll
xchg
push
jge
fbld
repnz
add
or
inc
adc
inc
adc
push
xor
mov
inc
and
or
dec
push
imul
aam
cmp
jg
push
movsl
dec
dec
xchg
sub
dec
adc
in
or
addb
movb
je
or
imul
sbb
adc
and
pusha
ret
ficoml
or
or
stos
and
mov
aam
inc
adc
adc
xor
and
dec
iret
ret
jl
and
add
mov
insl
add
adc
mov
inc
jnp
add
jecxz
cmpsl
or
or
aas
call
cmpsl
lods
mov
mov
pop
pop
push
sbb
add
mov
jae
repnz
fistpl
and
cmp
cmpsb
push
test
push
roll
lods
lods
xor
lret
sbb
add
or
pop
jmp
jb
push
adc
sbb
frstor
xor
aam
xor
add
andl
adc
inc
push
and
mov
cmp
jg
decb
inc
loop
or
or
out
mov
lea
push
push
pop
lcall
mov
xchg
fs
subl
sub
inc
add
adc
test
dec
adc
inc
push
mov
cmp
jns
cmp
sub
gs
mov
cs
mov
jne
inc
sbb
adc
leave
mov
mov
roll
push
inc
fmull
addb
mov
cmp
movsl
sub
push
xorb
dec
jge
mov
flds
inc
adc
sbb
arpl
dec
push
fnstenv
dec
adc
adcb
mull
ret
cmp
inc
ret
jno
movsl
inc
or
push
inc
add
cmp
daa
mov
shrb
jb
add
pop
push
andl
inc
add
sub
imul
or
cmp
cmpsb
push
test
pushf
mov
or
in
pop
leave
repz
jns
dec
sti
mov
leave
popa
xor
and
stos
mov
push
ret
imul
and
sti
adc
loope
cmpsb
sbb
dec
push
ret
add
dec
xchg
std
or
mov
das
inc
and
xor
mov
add
sbb
test
dec
rorb
or
mov
repnz
push
mov
jmp
add
dec
sbb
pop
test
idiv
add
and
mov
mov
mov
mov
inc
sbb
sbb
shrl
add
insl
nop
add
shll
push
pop
movsb
stos
sub
stos
dec
ljmp
push
mov
jo
push
ja
xchg
imul
and
add
cmpb
adc
inc
add
and
or
dec
kmovb
jo
xor
insl
push
push
addl
repz
dec
add
out
xor
loopne
xchg
inc
movb
push
cld
dec
adc
mov
xchg
addb
adc
fwait
mov
add
or
test
sub
cmp
shrl
add
fisttpll
pop
sub
mov
mov
test
stos
fstpt
imul
inc
test
push
sub
sub
mov
dec
pop
cmp
out
movsl
push
mov
dec
jg
and
call
mov
sub
add
rcl
mov
lods
pushf
lea
add
xor
out
lods
pop
enter
xor
das
push
dec
add
and
shll
and
sub
je
sti
xchg
aas
movsb
mov
inc
cld
sub
andb
cmp
add
push
int
and
push
or
lods
inc
fistpl
and
adc
iret
mov
into
mov
push
adc
push
adc
dec
mov
int3
pop
adc
cwtl
push
xor
popf
push
mov
ljmp
and
and
jo
xchg
ret
or
mov
rolb
test
cmp
inc
inc
add
test
xchg
cmp
cmp
inc
int
dec
add
adc
mov
or
sbb
mull
push
loope
or
add
sub
push
dec
sbbb
or
add
xor
dec
adc
enter
test
mov
dec
add
mov
sbb
cwtl
push
test
add
in
lahf
jge
xchg
fs
push
sti
orl
rolb
or
lret
jae
pop
adc
mov
push
add
lods
aas
pop
push
adc
mov
testl
inc
lods
jnp
je
orb
outsl
dec
xchg
addr16
insl
ljmp
inc
insl
popa
add
scas
push
and
add
cwtl
notl
sub
jns
push
lea
cmp
mov
lret
and
mov
xor
mov
cmp
add
imul
dec
push
icebp
mov
xor
add
mov
add
add
mov
dec
mov
movsb
sub
imul
inc
das
rcrb
fildll
and
int
adc
dec
rcl
shrb
bound
xchg
ret
inc
mov
adc
pop
int3
sub
sbb
fisttps
pop
shlb
inc
push
dec
or
xchg
or
pop
xchg
mov
push
test
jns
inc
mov
push
test
push
inc
pop
sbb
add
mov
pop
jmp
dec
test
popf
add
xor
lahf
ja
mov
xchg
or
std
push
fwait
add
scas
jmp
mov
sub
rol
fisubs
pop
lea
inc
aad
and
cs
sub
das
inc
rcrl
adc
addl
lcall
aas
dec
repz
sbb
mov
and
bound
rcll
dec
repnz
adc
jb
jle
sub
out
pop
mov
sub
mov
dec
dec
hlt
shlb
cmp
add
or
test
sbb
mov
mov
pop
push
mov
cmp
es
sub
cmp
xchg
or
daa
dec
mov
imul
mov
xlat
adc
mov
adc
push
test
shrl
mov
or
add
sbb
or
sbb
xchg
inc
xor
mov
add
ja
inc
repnz
mov
and
nop
push
push
inc
push
fs
sbb
add
popa
stos
or
lea
nop
add
in
add
addl
test
fcomps
mov
xchg
or
inc
mov
sbb
dec
pusha
add
in
sub
scas
push
sub
pop
mov
add
fistps
movsl
push
or
push
movsl
push
and
lcall
push
dec
rcrb
xor
je
adc
or
jno
xchg
cmp
pop
dec
cli
jmp
pop
orb
xchg
jne
sbb
inc
or
scas
add
dec
and
stos
scas
jo
xor
xor
xor
xor
mov
inc
orl
push
cmpsl
rolb
sub
rclb
lds
push
or
mov
push
dec
push
mov
leave
inc
stos
insl
add
fs
bnd
pusha
adc
sub
pop
outsl
mov
ljmp
dec
and
mov
xor
pusha
icebp
xor
inc
repnz
jl
adc
and
cwtl
and
mov
dec
cmp
xchg
out
adc
int
cmp
jns
cmp
js
and
inc
jno
add
adc
mov
loop,pn
das
add
inc
xor
fwait
and
scas
repnz
add
movb
xor
mov
pop
je
inc
add
mov
push
sbb
dec
jecxz
xor
fildl
add
adc
sub
sti
push
mov
pop
shrl
mov
push
mov
rorb
mov
push
dec
sbb
and
push
sbb
inc
push
mov
out
dec
pop
outsl
jo
adc
sub
xor
clc
es
ja
arpl
mov
add
mov
cs
mov
ret
cmc
push
lock
xor
stos
sub
outsb
subb
add
dec
mov
lea
adc
add
jno
push
jne
nop
lods
and
jg
push
shlb
test
add
int
mov
mov
adc
inc
gs
pop
rcll
lds
jo
dec
enter
negl
out
sub
rcrl
inc
leave
mov
js
aad
or
pop
dec
out
and
dec
or
pusha
cwtl
dec
shrb
jo
dec
push
adc
inc
leave
pop
ss
jo
xchg
sbb
xor
mov
jne
add
add
mov
or
push
mov
xor
mov
lret
push
lods
push
mov
xchg
cmp
xor
inc
xchg
out
dec
imul
mov
imul
jmp
daa
mov
mov
cmpl
mov
subb
xchg
jne
sbb
mov
rep
sbb
adc
xchg
cmp
add
test
xor
stc
or
test
movsl
jnp
scas
arpl
sub
enter
dec
sahf
js
push
sbb
insl
ret
stos
dec
mov
jo
xchg
dec
pop
lds
adc
xchg
or
out
or
and
cs
sub
pop
adcb
popf
out
and
imul
mov
pusha
adc
cmp
mov
inc
mov
and
dec
arpl
inc
add
mov
dec
sbb
mov
adcb
push
sub
int
inc
inc
and
push
or
add
or
pusha
mov
stc
movsl
popa
push
add
test
inc
and
movsl
mov
cltd
cmp
inc
add
sub
fldenv
mov
sub
inc
mov
jecxz
inc
cmp
sub
arpl
mov
push
movsb
push
and
push
add
or
and
pusha
popa
shll
test
xor
daa
pop
lret
and
mov
pop
sub
movsl
add
sub
mov
or
add
jl
pop
mov
sub
nop
repnz
add
outsb
lods
testb
push
call
mov
cs
xchg
adc
add
mov
test
mov
popa
mov
mov
test
popa
cmp
push
mov
stc
xor
mov
sbb
add
adc
xor
jecxz
mov
sbbl
add
or
push
xor
push
inc
mov
mov
jne
push
aaa
and
add
push
add
sub
insb
popa
inc
rorl
sub
pop
xchg
mov
xchg
dec
ss
push
sub
and
lcall
inc
add
inc
dec
add
sbb
or
and
sbb
inc
jecxz
pusha
je
aad
cwtl
push
cs
vpminub
addb
mov
and
inc
int
mov
adc
mov
imul
inc
mov
scas
push
test
add
dec
push
fnop
add
in
or
mov
or
push
and
adc
pop
mov
dec
push
addb
inc
jne
ret
pop
shrb
adc
and
imull
in
aad
and
jo
or
movsb
pop
mov
insb
sbb
outsb
cwtl
cmp
jmp
xchg
xchg
sub
sbb
add
test
inc
sahf
add
xlat
xchg
les
jg
and
adc
jp
jb
mov
pop
push
mov
lods
rcrb
sub
sti
xor
pop
and
add
pmullw
add
adcb
sbb
inc
mov
jae
and
aad
and
add
adc
lret
sbb
jno
and
push
xor
adc
orb
ret
and
ds
ret
inc
adc
add
push
add
pushf
add
popf
lret
pusha
add
lret
adc
push
nop
xor
push
ja
mov
bound
in
inc
stos
xor
mov
loopne
or
xchg
cmpsb
loopne
sbb
pop
pop
stos
add
cmpsl
test
mov
add
les
push
cmp
inc
cmc
ficoms
dec
inc
sub
sub
xchg
cmpsb
enter
mov
adc
cmc
shll
add
add
int
push
or
mov
mov
mov
ja
add
pop
adc
inc
inc
jg
inc
aaa
movsl
mov
add
aam
jge
shll
or
xchg
mov
sbb
jle
xchg
out
out
add
and
pop
sub
inc
mov
enter
roll
sarb
dec
ret
adc
in
int
addl
push
cld
pop
add
cltd
sbb
push
push
inc
arpl
jb
adc
add
push
lret
dec
jae
lret
add
cwtl
push
mov
orl
inc
push
add
or
or
push
sbb
push
orb
inc
sub
adc
add
in
imul
inc
jo
or
aad
adc
add
mov
imul
xchg
mov
mov
xchg
adcl
shrb
icebp
push
or
iret
adc
sahf
in
inc
test
mov
push
push
pop
add
jl
faddl
push
inc
add
stos
add
ret
xor
nop
rclb
pop
std
adc
mov
lret
or
cmp
inc
adc
mov
jo
repnz
mov
call
xrelease
xor
cmp
mov
add
xchg
xchg
add
inc
popf
adc
mov
and
mov
mov
mov
iret
arpl
pop
jp
adc
adc
inc
pop
add
enter
cmp
xor
mov
xor
mov
mov
add
sbb
add
xlat
xor
or
jne
shlb
stos
rcrb
jg
or
imul
jae
push
aam
sbb
xor
imul
das
add
cmpb
ror
dec
sahf
pop
dec
sub
es
imul
or
inc
inc
jo
stos
mov
fadds
push
aad
or
int
mov
pop
out
sub
inc
adc
jge
mov
and
xchg
xchg
sbb
sub
dec
mov
dec
stos
fsubs
sbb
iret
mov
loopne
and
push
xor
inc
pop
inc
insl
icebp
dec
sbb
cmpb
fadds
and
push
mov
sub
xchg
jo
adc
adc
jp
cmp
rcrb
adcb
add
xlat
fists
push
dec
ret
adc
rolb
pop
add
and
xor
sbb
dec
jae
add
test
or
cmp
andb
jb
loopne
and
mov
dec
dec
xor
loopne
inc
iret
loop
add
add
or
or
jns
sbb
mov
mov
add
test
test
and
js
sub
insb
push
jmp
insl
inc
and
xor
pop
sub
dec
in
mov
sbb
enter
or
repz
andl
rolb
and
mov
inc
sahf
outsl
fwait
cmp
pop
jne
adc
inc
pusha
sbb
repnz
adc
cmp
lds
and
movsb
pop
mov
adc
and
and
add
adc
mov
jge
push
pop
inc
lea
pop
nop
dec
add
add
andl
popa
push
mov
insl
roll
push
or
push
inc
dec
ret
inc
or
imul
ljmp
or
ss
bound
push
or
inc
pop
imul
out
inc
inc
ret
pop
push
adc
and
push
imul
inc
xchg
inc
lea
jo
or
xor
push
add
xchg
rolb
or
test
and
repnz
or
inc
xlat
cmpsb
xor
lahf
test
in
and
ret
add
inc
sbb
adc
mov
add
mov
cwtl
outsl
xor
dec
jne
mov
mov
movsl
xor
test
movsb
xchg
rorb
jmp
mov
aas
xchg
jb
inc
test
push
scas
cs
sahf
in
cmp
inc
push
add
shl
or
mov
insl
adc
sub
add
nop
or
push
or
add
mov
xchg
xlat
and
sbb
and
mov
jnp
adc
xchg
dec
sbb
mov
mov
iret
pop
mov
add
or
pop
int
loope
cmp
jae
jnp
cltd
or
test
dec
inc
or
sbb
dec
sbb
inc
jae
inc
xchg
xor
add
ret
inc
or
pop
adc
mov
mov
nop
outsl
lret
insl
sbb
lcall
filds
or
gs
xchg
sbb
add
fstp
add
push
xor
sti
sub
mov
xorl
and
sbb
testl
ss
dec
or
dec
inc
inc
push
sbb
cmp
inc
in
xchg
mov
xor
adc
push
xor
stos
push
sbbb
leave
sub
inc
add
mov
jmp
xor
sub
ja
add
cmp
pop
mov
cmpsb
add
mov
sub
lods
push
mov
add
adc
cmc
push
or
push
adc
nop
test
xor
xchg
mov
add
or
dec
add
xchg
mov
lea
orl
subl
push
fwait
add
orb
xor
andl
xchg
xor
sbbb
dec
les
adc
add
rorl
sub
dec
rcl
add
cmp
test
mov
imul
adc
sub
pop
verw
aas
add
mov
push
nop
xor
adc
mov
call
sbb
adc
add
push
rol
add
jno
or
dec
insl
fwait
or
and
test
or
sbb
and
imul
gs
sbb
mov
stos
nop
dec
cmp
push
xchg
mov
repz
adc
mov
adc
sbb
mov
cmp
xchg
mov
xor
rolb
popl
and
inc
sti
xchg
seto
pusha
add
pusha
mov
or
mov
jmp
xlat
and
ljmp
pusha
adc
inc
sub
and
adc
cmp
adc
mov
rorl
jmp
cmp
or
sbb
adc
ds
mov
pop
pop
xchg
test
outsl
rolb
cmp
or
and
add
sbb
fists
inc
mov
inc
int
adc
test
push
add
lds
or
lods
cmp
pusha
bound
cmp
push
xor
lods
add
scas
add
rorb
insl
add
dec
add
inc
sti
lcall
add
inc
inc
or
mov
adc
push
movsb
insb
testl
push
push
xchg
test
add
adc
push
pop
sub
mov
popa
sbb
movsb
pcmpgtd
cmp
test
sub
pop
adc
cmpb
add
xchg
pop
xor
sbb
add
add
sub
add
inc
scas
push
jmp
jns
jo
addb
fbstp
daa
xor
mov
dec
sar
lds
add
inc
sbb
sbb
push
cmp
test
in
or
mov
or
jns
fwait
int3
push
cmp
xor
mov
and
push
mov
dec
inc
and
pop
mov
arpl
and
inc
adc
jne
mov
andb
incl
rorl
push
xchg
lods
add
mov
lods
nop
out
inc
or
lea
push
cwtl
sub
test
push
aam
mov
adc
pusha
test
sbb
jp
lcall
push
and
and
xchg
ja
sbb
rolb
inc
insb
adc
push
add
cmp
inc
rclb
jb
and
je
addb
test
aam
inc
and
jb
or
arpl
add
popf
scas
test
in
lea
adc
push
imul
jnp
scas
xchg
xchg
adc
adc
shll
inc
test
mov
jae
inc
xor
call
adc
push
ss
xor
out
stos
adcb
mov
adc
or
imul
xchg
pop
push
daa
rolb
add
mov
xor
lret
jnp
popf
add
mov
push
pop
add
decl
xor
push
xchg
dec
popf
mov
scas
xor
and
inc
fwait
or
mov
pop
inc
addl
push
or
ret
ss
adc
sti
movsb
inc
xor
sub
adc
movsl
xor
push
jne
popf
dec
or
inc
test
push
ffree
jno
push
mov
jge
mov
pop
push
sbb
inc
dec
inc
imul
xchg
test
mov
in
mov
jno
add
or
mov
mov
imul
cmpsl
xchg
or
gs
mov
sbb
xor
cltd
notl
pop
or
loopne
and
sub
push
jae
push
inc
xchg
push
jno
inc
or
pop
and
add
inc
adc
stos
mov
jae
and
popa
leave
add
sub
xor
subb
and
test
add
xchg
and
mov
inc
ljmp
mov
inc
andl
add
adc
push
sub
inc
xchg
popa
cmp
les
pop
jo
mov
imul
or
sub
int
sub
sub
loopne
pop
stos
add
imul
adc
fimull
inc
push
cmp
add
dec
add
dec
add
mov
in
ret
add
je
add
pop
mov
aas
movsb
mov
movsb
adc
and
xor
dec
add
inc
inc
inc
add
sub
pop
shrl
rcll
add
stos
dec
add
imul
adc
inc
lea
arpl
test
sbb
iret
rolb
jo
inc
in
loope
movsl
fs
pop
daa
push
inc
mov
sub
imul
dec
mov
add
sub
shlb
mov
xchg
sbb
inc
or
sub
xor
push
push
adc
or
adc
and
gs
ret
or
xchg
les
add
add
mov
add
mov
mov
dec
inc
adc
adc
or
sarl
fiaddl
sub
inc
cmc
jne
adc
add
xchg
adc
notl
ss
dec
arpl
adcb
add
and
add
sbb
xor
inc
nop
add
inc
aad
movsl
sbb
mov
cmp
mov
inc
ret
stc
rclb
icebp
stc
add
sbb
jne
push
and
gs
xor
lds
add
push
mov
imul
xchg
push
add
push
adc
adc
aaa
lahf
movsl
mov
into
sub
push
and
or
or
and
add
addb
rolb
xor
mov
outsb
jne
xor
push
dec
adc
cmc
sti
push
mov
push
dec
das
adc
lcall
jb
add
fisttpl
fwait
add
test
mov
sbb
sub
cmpsl
mov
bound
mov
mov
or
stos
or
xor
add
push
add
adc
or
lret
ret
sbb
ljmp
push
aas
aad
add
shll
addb
xorb
or
and
sbb
adc
sbb
stc
adc
mov
int
rolb
roll
ret
inc
jae
push
daa
add
sti
adc
or
rclb
push
push
repz
test
push
jns
xor
dec
loopne
ret
adc
adc
add
xor
push
lea
aas
xchg
mov
adc
test
test
mov
jne
pop
push
test
push
rolb
or
inc
adc
inc
xor
sbb
adcb
or
sub
inc
add
sbb
and
addr16
and
imul
imul
adc
fwait
les
ss
roll
loop
xchg
subb
daa
ret
push
add
inc
dec
les
stos
pop
push
aam
or
add
pop
mov
adc
inc
shrl
stos
andb
push
xor
and
sbb
sahf
or
xor
jb
add
mov
cltd
or
stc
stos
cs
stc
movl
adc
adc
push
and
pop
push
test
addps
inc
xor
mov
inc
add
test
adc
push
rcrl
nop
mov
push
and
adc
test
sub
adc
sub
inc
addl
pop
les
or
and
stos
xchg
sub
inc
or
inc
inc
add
xorb
sbb
xchg
xchg
addb
add
xchg
and
push
add
inc
sbb
or
sub
pop
clc
in
mov
sub
add
mov
add
sub
mov
mov
push
add
sbb
incl
sbb
or
inc
test
shlb
icebp
lea
adc
xchg
add
loope
addb
aam
repz
mov
repnz
in
adc
gs
mov
scas
lea
jmp
cmpsb
rcrl
test
xchg
out
mov
cmpsl
pop
movsb
mov
and
push
add
add
out
push
ret
out
mov
add
or
enter
mov
movb
addl
mov
sub
push
add
cmp
xor
popf
xor
and
mov
dec
add
stos
add
or
mov
add
adc
or
mov
sbb
sti
add
sbb
and
flds
adc
mov
stos
sub
lahf
pop
movsb
xor
sahf
andb
xchg
xchg
add
push
je
and
mov
add
orb
push
mov
xor
xchg
push
sbb
xor
rorb
add
sub
sbb
add
xorb
mov
pop
sti
rorl
mov
nop
and
add
sub
add
sbb
mov
pop
rol
push
inc
push
orl
sub
xchg
push
adc
test
imul
nop
and
ret
push
insl
and
jno
mov
inc
or
vsqrtps
mov
sbb
cmpsl
shll
imul
mov
mov
pushf
xor
xchg
test
or
or
aad
mov
mov
mov
adcl
cmc
or
movsb
mov
movsb
add
or
xchg
inc
pop
je
push
add
testl
sub
cltd
jnp
stos
push
sbb
add
xor
xor
jno
add
adc
xchg
sub
xchg
push
sub
mov
icebp
pop
arpl
push
cmpsb
add
push
jae
add
loop
movsb
mov
mov
leave
xchg
or
jne
sub
push
adc
dec
addl
movsl
dec
pusha
inc
and
add
add
or
inc
inc
or
push
insl
andb
stc
xchg
dec
jne
push
dec
out
test
or
adc
or
adc
add
ss
sbb
outsb
lret
inc
or
mov
or
push
inc
add
pusha
sbb
gs
xor
and
dec
add
xchg
push
adc
jne
lds
jb
sbb
movl
xor
or
xchg
or
inc
lds
movsl
and
adc
mov
lcall
push
imull
lret
or
jge
nop
or
or
imull
inc
sub
inc
test
xchg
sub
inc
jne
fwait
daa
inc
xor
loopne
lods
mov
sub
adc
inc
or
test
std
and
movsl
lea
xor
push
shrb
sub
mov
mov
rcll
adc
push
xor
ljmp
pop
inc
stos
lds
xchg
add
mov
and
or
test
in
dec
adc
cmpsb
push
dec
xchg
subb
xor
mov
inc
pop
inc
arpl
mov
sub
je
add
add
and
or
inc
lahf
pop
inc
and
jg
add
or
push
xor
add
lahf
pop
pop
adc
adc
test
adc
mov
push
sbb
push
aaa
lahf
or
add
adc
inc
inc
loope
dec
nop
pop
push
dec
adc
sub
dec
leave
test
xor
sbb
inc
add
mov
push
pushf
nop
mov
inc
mov
pusha
ret
mov
mov
sub
ljmp
mov
sbb
sbb
mov
xor
roll
rolb
sbb
mov
and
test
aas
arpl
test
movsb
bound
push
adc
or
push
enter
add
scas
and
adc
inc
sbb
je
adc
xchg
lods
adc
adc
sub
xor
inc
adc
sub
and
dec
add
push
push
mov
into
int3
cmpsb
test
add
add
int
pop
sub
sub
lahf
dec
push
add
and
mov
push
dec
dec
add
add
mov
and
push
shrb
mov
push
cmp
cltd
sub
or
sub
bound
push
cmpb
inc
adc
sub
sub
push
sbb
ret
push
add
add
test
ror
stos
fwait
add
sbb
outsl
ljmp
push
adc
mov
xor
ja
in
push
inc
jnp
adc
jnp
push
lret
xor
mov
push
push
jno
push
lock
or
add
movlps
push
sub
clc
lret
xor
lret
add
fwait
inc
jnp
ja
pop
fiadds
push
lods
out
jb
jo
push
and
jns
subl
sbbl
jo
add
xchg
xrelease
in
pop
adc
add
mov
pusha
add
ret
arpl
and
sub
clc
outsl
add
pushl
sub
add
push
inc
cwtl
add
or
incl
add
testl
popf
sahf
push
aaa
push
mov
cmp
and
test
push
push
popa
lea
shll
in
addb
jae
push
fistl
mov
add
dec
sbb
mov
or
and
into
jle
sti
add
sub
push
cmp
sub
sub
add
xor
sahf
adc
mov
add
stc
adc
pop
inc
fldt
xchg
cmpsb
daa
cmp
in
inc
inc
rolb
push
push
repnz
cld
push
daa
fdivrl
imul
xor
pop
pusha
notl
in
add
ds
push
pop
dec
push
loopne
loopne
in
in
mov
lahf
xorb
enter
add
aad
or
push
rol
lods
inc
daa
jp
addr16
add
test
bnd
sti
jmp
pushf
cwtl
add
ror
sbb
stc
inc
adc
or
add
incl
push
add
addb
xchg
add
dec
inc
add
outsb
in
lcall
xchg
dec
xchg
or
addb
add
add
jge
adc
or
jns
fwait
or
add
add
add
inc
stc
sbb
and
xor
adcl
mov
stc
add
mov
stc
push
int3
int3
out
fmuls
push
jbe
mov
stc
xor
lods
stc
pop
inc
jb
cmp
jmp
adc
inc
push
add
or
lcall
inc
addb
pop
mov
or
jp
es
out
dec
out
mov
insb
pushf
idiv
mov
sbb
xor
or
adcb
cmp
jo
sbb
or
cs
rolb
ret
enter
out
mov
sub
xchg
and
ds
stos
mov
or
push
xchg
inc
xchg
mov
xor
test
data16
xchg
ror
dec
and
mov
cmpb
imul
push
orb
jmp
push
adc
pop
pop
cmp
mov
dec
out
mov
or
pop
stc
mov
popf
les
push
movsb
in
pusha
mov
or
and
pop
cltd
popa
ror
or
cwtl
dec
sbb
test
adcb
sahf
or
and
into
add
in
cmp
xor
dec
inc
inc
dec
dec
pushf
ret
ret
jp
repnz
xor
or
push
mov
sarb
jbe
cmp
int
or
adc
int3
push
imul
jge,pn
loope
popa
ss
push
sbb
dec
les
call
push
add
mov
add
mov
xor
in
lods
sub
push
dec
lods
outsb
dec
sub
orb
pop
mov
addl
cmp
pop
adc
and
add
mov
cs
jo
int3
dec
sbb
jae
cs
mov
outsb
gs
xor
cs
insb
xchg
dec
ja
data16
negb
popa
adc
adc
inc
add
add
divb
jmp
pop
add
push
jb
je
push
or
or
gs
je
sbb
in
outsb
addr16
ss
imul
jne
jb
inc
js
dec
fucomip
mov
arpl
imul
outsb
dec
outsb
outsw
inc
lods
popf
es
insb
jae
gs
dec
push
idiv
mov
mov
gs
and
push
push
in
hlt
out
sti
std
jns
outsl
outsl
jae
das
dec
popa
divb
mov
and
popa
outsb
sbb
jne
inc
adc
outsl
and
in
fstenv
je
insl
jo
mov
gs
out
inc
inc
bound
inc
test
add
push
push
lcall
jo
gs
push
push
popa
jo
in
shrl
arpl
insb
xchg
mov
dec
jne
gs
faddp
cmpsb
pop
dec
mov
je
inc
fwait
mov
pop
dec
gs
mov
jae
pop
pusha
popa
daa
insb
inc
je
push
and
mov
arpl
sub
jne
xchg
or
sbb
push
rclb
sub
orl
push
sub
shll
shrl
loope
inc
xor
bound
sub
adc
adcl
fsts
jne
jne
xor
fs
loope
pusha
and
push
dec
xor
jnp
or
jae
push
cwtl
loop
imul
out
gs
in
jae
inc
repnz
add
inc
push
addl
dec
adc
cmp
mov
jae
and
gs
push
std
jl
pusha
fisttpl
outsl
lods
push
out
inc
outsb
cltd
inc
mov
out
enter
fistl
movsb
inc
imul
das
mov
push
xor
mov
pushf
xor
ss
add
push
rolb
and
popf
dec
jle
cmp
push
and
imul
sub
push
lcall
loopne
ss
loopne
add
ds
dec
dec
sbb
lods
dec
imul
in
fstl
sub
cmp
fcomps
inc
sub
jmp
mov
das
cmp
ja
lods
adc
das
addr16
dec
outsl
pop
cmpsb
mov
inc
sub
mov
jb
inc
insb
imul
or
fcoms
push
inc
insl
push
arpl
xor
js
xor
jae
lea
jbe
push
jo
loope
imul
push
dec
pop
arpl
pop
mov
push
mov
jae
push
daa
and
lret
into
shll
adc
xchg
xor
pop
inc
add
adcl
push
shrb
pop
loopne
xchg
cmpsl
hlt
or
dec
xchg
inc
push
push
push
je
inc
push
insb
ret
shrb
out
pop
cmp
lret
imul
push
outsb
cmpsb
pop
into
pop
icebp
jbe
and
jne
and
imul
xor
fucomi
dec
jo
dec
sbb
sub
mov
jae
lds
inc
cmpsl
ret
cltd
add
lods
sbb
push
cld
les
cltd
loopne
divb
popa
cmpsl
xchg
sbb
inc
fs
push
jo
push
and
outsb
jo
pusha
or
mov
pop
das
aaa
xchg
dec
jbe
cmp
xchg
or
jbe
push
pusha
insb
cmp
push
lret
push
lea
inc
es
fcmovb
xchg
gs
or
pop
fcomps
dec
adc
push
sbb
in
or
sub
sbb
sbb
fs
mov
push
pop
das
int3
sub
push
mov
adc
add
or
sub
or
jne
mov
outsb
std
push
out
pop
fistl
pop
inc
push
adc
mov
or
lcall
add
sahf
sub
inc
xlat
add
movsl
sub
jl
pop
xor
outsl
addr16
into
gs
sti
pop
push
and
cmc
dec
inc
jecxz
xchg
test
ret
imul
imul
jae
insb
addr16
gs
cmpsl
shlb
sub
enter
inc
ret
cs
and
loope
xlat
jmp
jb
inc
popa
dec
gs
jb
jo
je
jo
adc
jne
push
push
mov
inc
inc
add
pop
cmp
cmp
pop
mov
or
sbb
idivb
push
dec
filds
adc
and
push
inc
daa
cwtl
scas
and
and
jge
ret
insl
inc
push
insb
bound
push
je
push
xor
mov
hlt
xchg
dec
fadds
or
dec
or
sub
adc
into
cmpsl
xor
xchg
mov
sub
fidivl
xor
jne
stos
or
arpl
popa
jns
shlb
adc
fs
imul
inc
mov
jb
push
cmp
and
dec
fs
cs
cmp
inc
dec
mov
inc
jbe
sbb
push
fldcw
xor
test
sub
incl
or
cmp
push
adc
xchg
pusha
insb
lock
lods
adc
gs
or
pop
addb
xchg
dec
pop
movsl
divb
and
mov
xorb
lret
icebp
mov
arpl
arpl
xchg
adc
dec
inc
push
and
cmpsl
fidivl
out
push
popa
je
popa
pop
xor
loopne
fisubl
pop
push
insb
fs
sbb
mov
pop
sbb
jns
cmp
fstps
shlb
cld
push
loopne
outsl
add
cs
push
push
inc
mov
sbb
or
insb
jae
ss
outsl
lahf
push
sub
pop
push
pop
jl
pop
fldt
and
out
add
sbb
nop
xchg
sbb
inc
sbbb
insb
popa
mov
in
daa
xor
iret
mov
testb
jae
or
sub
and
push
and
mov
imulb
stos
jae
mov
adc
je
int3
outsl
popa
adc
sarb
out
add
bound
outsb
pop
rol
jno
add
push
push
fldl
popa
in
insb
int
stos
mov
bound
push
pop
push
xchg
addr16
adc
cmp
cmp
sbb
mov
stos
adc
imul
cmp
lea
sbb
push
xor
push
mov
les
fistpl
outsl
data16
and
cmp
insb
add
shrb
jnp
sub
shll
mull
or
or
push
inc
push
dec
add
pop
sbb
and
add
add
add
imul
lock
data16
sub
add
pop
mov
xor
sbb
call
adc
adc
or
sahf
lock
sbbb
pop
dec
mov
sbb
sbb
cld
sbb
push
insb
ficoms
and
icebp
addl
pusha
jb,pn
and
push
cmp
aaa
and
add
dec
push
jle
es
adc
add
inc
rorb
rcrb
repnz
dec
and
jge
idivl
sbb
add
incl
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
