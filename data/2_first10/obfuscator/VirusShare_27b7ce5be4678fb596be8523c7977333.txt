add
add
add
add
xor
add
jo
add
mov
add
add
add
addb
add
and
xor
add
add
add
add
add
add
add
and
xor
add
add
add
add
add
add
add
pushf
loop
add
add
add
jo
xor
add
add
add
add
sldt
mov
add
fadds
add
add
add
sub
add
push
add
addb
add
js
add
and
xor
add
add
add
add
add
add
add
add
mov
add
and
xor
add
add
add
add
add
add
add
add
add
and
xor
add
add
add
add
add
add
add
add
add
and
add
and
xor
add
add
add
add
add
add
add
cwtl
roll
xchg
add
add
jo
xor
add
add
add
add
add
add
add
sub
add
pop
add
add
jo
xor
add
add
add
add
add
add
enter
add
add
jo
xor
add
add
add
add
add
pop
add
sub
add
and
xor
add
add
add
add
add
add
add
add
lret
add
adc
add
and
xor
add
add
add
add
add
add
add
add
lret
add
cwtl
add
add
jo
xor
add
add
add
add
add
add
add
and
xor
add
add
add
add
add
add
add
mov
add
adc
add
push
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
or
dec
add
dec
add
dec
add
dec
add
add
add
add
xor
add
add
sbb
test
add
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
test
xor
dec
mov
push
ret
add
add
add
jae
add
add
ja
push
rclb
lret
repz
mov
and
add
add
lods
add
pop
add
add
jb
push
les
imul
cmc
decl
decl
out
sbb
add
cmp
add
dec
add
dec
sahf
add
push
jo
jp
cld
test
call
jl
jmp
inc
lods
out
or
les
inc
mov
adc
add
arpl
sub
mov
pushl
incl
jg
ljmp
lcall
cmp
add
xor
add
add
add
sub
nop
cld
call
jmp
je
pushl
pushl
pushl
ljmp
jmp
call
sti
sub
add
add
jge
add
add
inc
mov
jno
incl
incl
lcall
ljmp
ljmp
ljmp
jmp
jmp
jmp
jmp
pop
jmp
sub
add
add
jae
add
add
mov
insb
repz
pushl
je
pushl
pushl
decl
jmp
jmp
jmp
jmp
jmp
lcall
lcall
lcall
lcall
lcall
decl
and
inc
mov
and
sub
push
sbb
leave
mulb
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
incl
pop
repz
lcall
lcall
lcall
lcall
call
call
call
call
call
call
incl
repnz
push
add
xor
cs
add
push
test
dec
iret
stc
pop
bnd
jmp
jmp
jmp
jmp
jmp
jmp
jle
pushl
push
out
call
call
call
call
call
call
call
decl
decl
decl
decl
decl
call
jmp
cmpsb
outsb
mov
xchg
jmp
in
lcall
lcall
lcall
lcall
lcall
lcall
lcall
lcall
js
ljmp
decl
decl
dec
out
dec
out
dec
out
dec
out
dec
in
dec
in
dec
in
dec
in
inc
in
inc
jecxz
inc
jecxz
inc
loop
and
mov
adc
push
jmp
push
jmp
push
jmp
push
jmp
push
in
call
call
call
call
pushl
ljmp
incl
incl
incl
incl
inc
loope
inc
loopne
inc
loopne
inc
loopne
inc
inc
inc
fdivrp
aas
fdivrp
aas
ds
pop
nop
fldl
cmp
add
dec
jecxz
dec
in
dec
in
dec
in
dec
in
dec
in
dec
out
dec
out
dec
out
dec
out
dec
out
insl
in
jmp
aas
ds
ds
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pushl
xlat
lcall
fldl
cmp
add
inc
fdivrp
inc
fdivrp
inc
inc
inc
inc
loopne
inc
loopne
inc
loopne
inc
loopne
inc
loopne
inc
loope
addr16
cmp
pushl
xlat
pushl
xlat
pushl
pushl
pushl
xor
pushl
sar
xor
pushl
sar
xor
pushl
sar
sbb
xchg
call
fdivr
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jmp
lcall
pushl
sar
xor
ljmp
sar
das
sar
cs
cs
sub
ljmp
ljmp
ljmp
into
ljmp
int
sub
ljmp
int3
call
fldl
cmp
add
xor
pushl
sar
xor
pushl
sar
xor
pushl
sar
xor
pushl
aam
xor
pushl
pop
lret
mov
push
lahf
jmp
popf
ljmp
add
add
add
or
sbb
repnz
jmp
enter
jmp
call
xchg
add
cmpsl
xchg
jmp
mov
sub
ljmp
int
sub
ljmp
int
sub
ljmp
into
jmp
mov
setns
push
xchg
add
add
add
jb
xor
loopne
lods
out
mov
push
repz
int
and
or
mov
sbb
lcall
lcall
sar
xchg
add
cltd
in
adc
and
jmp
lcall
mov
or
xchg
add
add
add
add
test
js
lock
jmp
decl
call
repnz
aam
pop
enter
adc
sti
adc
decl
test
add
add
add
sar
sar
mov
add
sbb
adc
add
add
add
add
sub
loope
fcomi
xchg
decl
pushl
ljmp
cmp
jmp
insb
iret
add
xchg
push
jge
add
lahf
icebp
or
or
icebp
adc
ljmp
int3
lcall
ret
incb
call
xchg
in
add
add
add
add
and
loopne
in
cli
jnp
pushl
jmp
lcall
call
ljmp
mov
add
dec
mov
add
add
add
hlt
sub
cmp
ljmp
out
push
xchg
jmp
in
imul
xor
add
add
ss
mov
add
mov
data16
lcall
call
decl
incl
cld
pop
cltd
jecxz
push
lds
dec
mov
add
add
dec
ljmp
cld
or
inc
fdivrp
pop
cmc
jmp
outsb
incl
cld
sub
push
popf
out
ds
data16
ljmp
incl
lock
xor
push
out
decl
inc
loope
cmp
ljmp
vmovups
add
add
add
aas
pop
add
inc
loope
pop
idiv
push
out
aas
add
hlt
or
push
in
lcall
jmp
jmp
pushl
mov
lcall
sti
dec
jecxz
pop
idiv
pusha
clc
jmp
jmp
jmp
pushl
ljmp
xor
out
dec
out
inc
loopne
cmp
pushl
aam
sub
lcall
rolb
dec
ret
mov
add
add
push
add
out
ljmp
jmp
decl
add
idivb
decl
call
lcall
arpl
ljmp
jl
call
call
lcall
lcall
lcall
pop
idiv
popa
clc
jmp
lcall
cld
xor
or
mov
xor
ljmp
int
and
lcall
sar
lahf
lock
add
mov
add
push
addb
lock
pushl
cmp
ja
incl
add
xlat
cmp
decl
call
lcall
lcall
jmp
pushl
incl
push
jmp
push
in
call
push
lock
lcall
lcall
lcall
jmp
call
stc
and
rorb
jg
push
cmpsl
in
adc
in
nop
in
jno
add
aam
pop
lret
add
add
inc
mov
add
add
add
pushf
cli
lcall
call
incl
lods
std
push
mov
sub
pushl
sar
cmp
incl
incl
decl
call
pop
repz
ljmp
js
decl
decl
dec
jmp
push
in
call
call
lcall
lcall
lcall
lcall
cmp
rolb
into
add
add
add
dec
mov
dec
mov
inc
mov
add
add
stos
cli
es
mov
jmp
incl
scas
decl
mov
daa
lret
ljmp
sar
xor
incl
decl
call
call
lcall
jmp
outsb
incl
incl
decl
decl
decl
dec
ljmp
call
call
cmp
out
add
or
add
add
add
push
int3
dec
cli
jmp
pushl
incl
scas
decl
mov
push
mov
and
ljmp
int
xor
cmp
ds
inc
loop
dec
call
pop
bnd
jmp
pushl
ds
inc
fdivrp
inc
loopne
inc
loop
inc
jecxz
dec
in
dec
out
dec
call
xor
push
in
ret
call
mov
add
add
add
add
adc
add
add
add
push
mov
sbb
es
iret
pushl
cmp
incl
decl
decl
call
lcall
arpl
ljmp
cmp
cmp
cmp
ds
inc
fdivrp
inc
loopne
inc
loop
inc
jecxz
sbb
jmp
test
sub
jmp
lcall
sar
mov
add
add
scas
incl
scas
incl
test
add
ja
add
cmc
cmp
incl
scas
incl
mov
pop
mov
sub
ljmp
sar
xlat
cmp
decl
call
lcall
lcall
jmp
pushl
sar
xor
pushl
cmp
cmp
cmp
aas
sbb
es
xor
jmp
lret
lcall
mov
add
loope
pusha
leave
add
add
add
mov
add
mov
jg
ljmp
ret
scas
decl
jmp
ljmp
into
pushl
sar
cmp
incl
incl
decl
call
pop
repz
ljmp
ljmp
sar
xor
pushl
sar
xor
pushl
sar
or
ss
testl
xor
ljmp
int
and
lcall
call
incl
and
pusha
leave
add
test
mov
ljmp
jmp
call
mov
adc
ljmp
into
pushl
incl
decl
call
call
lcall
jmp
lret
lret
ljmp
int
sub
ljmp
int3
decb
xchg
jmp
mov
inc
fsqrt
dec
call
ds
xlat
ljmp
sar
sub
jmp
sar
mov
add
add
add
cmc
dec
mov
ljmp
lcall
decl
decl
mov
add
cmp
ds
inc
loop
dec
call
pop
bnd
jmp
lcall
mov
adc
pop
icebp
call
decl
incl
cmp
pushl
aam
sub
jmp
std
pop
xchg
add
add
add
add
aam
dec
inc
mov
jmp
call
jnp
xlat
incl
mov
pop
mov
and
decl
decl
call
lcall
sar
ret
mov
push
movsl
lock
fs
lcall
push
out
decl
incl
aas
cmp
pushl
sar
daa
std
pop
and
outsb
aam
inc
test
add
add
mov
call
dec
inc
mov
jmp
call
incl
data16
ljmp
int3
incl
lods
adc
dec
out
push
in
call
decl
mov
add
jae
jo
ljmp
jmp
lcall
call
decl
incl
cmp
ljmp
lret
mov
add
add
add
scas
incl
lods
cld
add
lcall
pushl
jmp
decl
jle
pushl
ljmp
call
lcall
sar
test
inc
loope
or
cmp
clc
mov
incl
ljmp
jmp
lcall
call
decl
decl
pushl
loop
jne
add
push
stos
cli
add
jmp
ljmp
lcall
decl
js
pushl
ljmp
jmp
inc
in
adc
add
call
jl
pushl
ljmp
jmp
lcall
call
cmp
stc
add
in
ja
add
add
stos
sti
add
dec
sar
mov
lcall
decl
jns
pushl
ljmp
jmp
jmp
decl
incl
test
inc
sti
cmpsb
lcall
incl
ljmp
jmp
lcall
pushl
lret
testl
int3
add
mov
push
xlat
call
decl
jnp
pushl
ljmp
data16
jmp
jmp
leave
incl
movsl
repz
aas
sti
mov
decl
pushl
imul
cmp
testl
lret
add
add
add
pop
loope
incl
je
ljmp
ljmp
call
incl
scas
incl
jno
add
add
cmpsb
testl
sti
pushf
call
jp
ljmp
mov
add
scas
incl
stos
sti
add
fs
jle
pushl
ljmp
ljmp
lcall
sar
sahf
out
add
cmp
sti
xchg
incl
clc
add
add
add
popa
lock
call
incl
scas
incl
addr16
add
cmp
sti
sbb
stc
add
add
stos
sti
add
int3
decl
mov
add
add
add
add
add
scas
incl
jb
add
cmpsb
testl
add
incl
add
jmp
incl
add
inc
incl
add
incl
add
incl
ud0
add
incb
add
incl
add
cld
add
incl
add
clc
add
jg
add
push
add
pop
incl
add
rolb
pop
incl
add
addb
add
add
incl
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
cld
add
add
sldt
clc
add
add
add
add
add
add
add
add
add
add
pop
add
rolb
add
incl
add
jg
add
add
add
aas
add
add
add
add
add
js
add
add
add
clc
add
add
sldt
lock
add
pop
add
loopne
add
add
add
loopne
add
add
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
addb
ud0
add
rolb
pop
incl
add
lock
aas
incl
add
cld
add
jg
add
incl
lock
incl
add
inc
stc
incl
add
incl
add
incl
add
add
int3
fnsave
sub
sbb
push
test
add
inc
sub
jge
jmp
fists
mov
cmpsl
jns
clc
jmp
push
lods
ret
adc
loopne
mov
les
xchg
or
gs
jecxz
add
outsl
std
pop
jmp
stc
out
push
aam
rclb
sub
test
xchg
out
add
aad
inc
movsb
fisttpll
cmp
test
sub
imul
mov
sub
mov
push
pshufd
pusha
sbb
in
jp
sub
mov
push
xlat
lahf
sbb
lds
lcall
xchg
dec
and
ret
aad
call
push
mov
sub
clc
in
lds
orl
leave
and
or
imul
mov
in
mov
add
sub
leave
mov
cmpsb
inc
push
push
mov
jb
jns
fsubrl
mov
cmp
sub
mov
lods
inc
fsubrl
mov
sbb
pop
fstpl
in
jl
test
leave
xor
aad
jb
iret
inc
push
pop
jo
jge
push
xchg
nop
mov
test
pop
mov
negb
pop
scas
enter
and
adc
mov
stc
das
pop
insb
xor
mov
sbb
jnp
mov
mov
sbb
sbb
add
cmp
jo
mov
inc
jo
rorl
jae
lds
xchg
push
es
xchg
clc
mov
cld
sbb
dec
lods
lret
sbb
int3
pop
sub
clc
inc
adc
mov
ret
lea
adc
mov
dec
inc
or
shlb
rorl
mov
cmp
mov
mov
or
call
or
sbb
xor
or
cmp
mov
stc
js
fs
loopne
shrl
jle
or
push
mov
shlb
ror
in
jg
jne
shlb
add
xor
movsb
adc
jnp
pop
or
add
and
addl
jno
sarl
mov
cmpb
xchg
cmp
jl
jmp
scas
or
or
push
mov
lods
sub
movsl
hlt
mov
cltd
sbb
and
lods
in
scas
and
push
addr16
sti
xchg
test
cs
mov
fidivl
jg
test
aam
repz
sub
repz
stos
mov
add
or
aad
adc
sbb
fiadds
push
ja
jnp
pop
std
pop
in
repnz
pop
mov
jg
lods
mov
inc
add
jne
xchg
push
insb
sbb
into
or
hlt
mov
push
fimull
loop
lcall
call
adc
andb
lds
test
inc
xchg
dec
pop
or
sub
xchg
and
loopne
fcompl
movsb
outsl
aad
mov
or
fsts
rcll
test
adcb
ret
xor
imul
mov
pop
int3
shl
dec
or
dec
push
inc
jge
mov
sbb
out
inc
jmp
add
jl
xlat
xchg
test
mov
mov
pop
leave
sub
or
mov
cs
and
xchg
and
push
gs
aad
aaa
mov
sub
push
inc
lds
movsb
inc
lcall
lret
xchg
xchg
call
cltd
fcomi
xchg
pop
in
test
loop
push
mov
into
pusha
mov
add
cli
iret
incb
roll
sub
in
wbinvd
and
sub
cmpsl
mov
idivl
mov
or
lret
pop
cmp
ljmp
sub
std
push
lret
ds
loopne
aad
test
sbb
or
sub
cwtl
dec
pop
insb
pushf
enter
push
push
negl
imul
ss
aaa
mov
cmovle
outsb
and
lret
xchg
or
push
ret
inc
call
aad
sbb
out
adc
in
sub
int
mov
je
or
leave
push
xchg
push
jne
popf
dec
cli
std
test
ds
xorl
movsb
test
push
or
imul
shl
push
xchg
scas
adc
mov
rcrb
cmp
movb
mov
cmp
cmc
out
addr16
repnz
in
mov
cmp
imul
push
xchg
xchg
pop
pushf
daa
push
xchg
mov
out
dec
push
stos
cmp
dec
or
insl
int
xor
sub
push
dec
dec
idivl
push
ror
and
jecxz
xor
js
addr16
movl
lret
pop
hlt
aad
hlt
bound
xlat
adc
cmpsl
aas
iret
ficomps
clc
and
cmc
fdivs
fwait
hlt
jno
or
jae
push
xlat
jmp
adc
mov
dec
pop
or
out
and
outsb
sahf
ss
in
sahf
aaa
pop
inc
mov
out
or
cmp
jns
xchg
test
xor
pop
testb
sti
push
hlt
and
pushf
testl
pop
push
sub
xor
and
scas
mov
sub
andb
mov
mov
rcll
add
xor
sbb
cmp
fxtract
arpl
pop
pop
out
loope
frstor
das
mov
popf
mov
pushf
mov
mov
adcb
push
or
push
and
sbb
xor
in
test
subl
in
sub
dec
adc
repnz
dec
and
je
je
sbb
sahf
add
out
jmp
mov
sbb
pop
pop
jl
imul
lods
sbb
xor
and
fsubs
xchg
pusha
sbb
daa
add
stc
in
jp
lret
jae
jg
jg
jnp
mov
popa
xor
movsb
inc
movsl
insl
pusha
lods
shll
mov
scas
icebp
sbb
fiaddl
sub
dec
pop
sti
insl
pop
js
adc
push
stos
and
inc
addb
xorl
hlt
scas
jno
sahf
xchg
push
scas
dec
dec
sub
movsl
out
js
push
inc
ficoms
pop
push
gs
hlt
rolb
data16
fcmovbe
inc
popa
cmc
pop
lahf
fildll
and
int
jmp
pop
inc
imul
inc
add
into
iret
add
cmpps
xlat
add
bound
jl
lds
sub
das
lcall
and
stos
arpl
in
stc
mov
mov
arpl
add
push
shrl
aas
in
adc
or
fists
mov
jb
push
mov
lahf
sub
fdivr
mov
xor
pop
std
inc
dec
fsubr
dec
movsb
cmp
sub
cmp
out
sbb
imul
adc
aam
cli
xor
imul
std
popf
into
mov
loop
leave
mov
mov
adc
into
arpl
add
into
cld
in
mov
pop
fucompp
or
shll
aad
test
imul
ja
sub
mov
cmpsb
mov
lret
lahf
pop
push
push
xchg
movsb
cli
mov
and
adc
xor
in
add
outsb
cwtl
inc
out
sbb
sti
mov
addl
lods
imul
push
push
jnp
ljmp
jb
xor
ss
push
inc
xlat
cmpl
adc
inc
xor
stos
and
adc
lock
jnp
mov
mov
inc
adc
out
pop
ss
les
popa
movsb
mov
lret
dec
popa
mov
dec
test
insl
mov
and
movsb
shll
es
test
adc
add
daa
xchg
pusha
adc
pop
push
mov
movsl
imul
add
push
aam
sub
bound
xchg
rclb
enter
cwtl
loope
inc
pop
cmpb
xchg
frstor
lock
adcb
data16
popa
sbb
mov
mov
push
fstpl
inc
mov
push
outsl
adc
mov
sahf
cmp
xor
xchg
bound
aad
arpl
rcr
rorb
orb
xchg
pop
jbe
sbb
push
and
jle
push
add
xchg
mov
fwait
orb
pusha
out
jae
fwait
jle
sbb
mov
enter
out
rorb
rcr
push
sub
sub
daa
push
adc
jmp
rorb
ret
xchg
arpl
pop
sahf
inc
adc
mov
insl
mov
mov
jnp
xchg
test
hlt
mov
sarb
jge
clc
jno
push
adc
sub
mov
mov
sti
in
xor
mov
clc
aaa
scas
dec
call
mov
data16
or
or
insl
fucomi
sarl
and
pop
mov
aad
jecxz,pn
mov
ret
in
mov
pop
mov
call
ret
push
and
in
popa
imul
mov
sub
dec
int
pop
and
ret
punpckhbw
out
adc
adc
xor
push
ljmp
ds
sbb
test
ss
jecxz
arpl
cs
in
cmp
mov
or
iret
pushf
jle
mov
fimuls
out
xor
add
mov
pop
add
push
jg
and
sbb
pop
jp
add
leave
push
xchg
push
jp
cmp
inc
sti
mov
icebp
outsl
aad
in
pop
movsb
scas
aad
and
jp
pop
pop
cmc
pusha
jmp
int
sub
hlt
pop
movsl
inc
push
jno
mov
ja
out
in
jle
push
xchg
jo
pop
mov
std
mov
sbbb
and
mov
xchg
pop
mov
loope
adc
jmp
mov
ror
and
lea
mov
js
pop
lcall
in
xor
cld
xor
inc
insl
push
adc
inc
pop
pop
jmp
mov
scas
out
inc
dec
xor
popf
adc
jno
psadbw
xchg
sahf
bound
sbb
jnp
mov
sbb
pop
sbb
pop
cld
std
or
arpl
mov
dec
nop
lret
add
rolb
push
jno
xor
jl
pushf
and
inc
sbb
sub
push
in
test
shlb
or
ror
and
mov
test
cltd
inc
orl
cmp
sub
mov
rorb
sub
outsb
push
fs
sbbl
lods
movsl
flds
and
pop
push
sub
jl
lahf
arpl
add
fld
xor
enter
sbbl
les
push
pop
mov
mov
jmp
jae
in
int
cmp
lods
fimuls
adc
adc
pop
std
pop
xchg
lahf
dec
inc
test
mov
fwait
cli
mov
in
mov
fdivrp
pop
pop
mov
xchg
bound
cmc
iret
jge
jne
scas
in
add
add
test
sbbb
sbb
dec
push
push
aam
mov
sbb
or
cmpl
sub
inc
out
sub
ja
mov
loopne
stc
push
test
test
jnp
subl
into
dec
pop
outsl
out
mov
orl
mov
int
lods
and
push
std
pop
mov
cmp
mov
mov
imul
push
mov
and
aas
cwtl
dec
es
lds
pop
addr16
jecxz
repz
out
add
dec
and
lods
push
or
jmp
xor
out
pop
es
jmp
pop
jg
movsb
xor
and
mov
mov
aaa
xchg
jmp
jge
insb
enter
mov
push
push
and
xchg
xor
test
pop
jle
shlb
cld
dec
push
sbb
jmp
out
xchg
dec
mov
into
mov
dec
pushw
inc
xor
outsl
cmp
lcall
xchg
movsl
push
cmpsl
sub
push
push
outsb
push
mov
mov
sbb
xchg
aas
lods
std
mov
push
cmp
test
scas
ljmp
mov
xchg
or
pop
hlt
aam
xor
push
pop
add
mov
sub
ds
fst
aas
test
test
xchg
in
aas
scas
mov
gs
mov
stc
nop
js
cmp
sahf
ficomps
dec
or
and
int
sub
jmp
jbe
or
pop
das
mov
sbb
push
fcomp
out
subb
xchg
out
inc
sbbb
fnstenv
sbb
jae
mov
dec
xlat
sbb
fnstenv
lea
and
lock
outsl
das
das
das
mov
and
cmp
popa
push
xorl
into
lcall
cmp
jp
out
push
bound
in
mov
out
mov
mov
mov
mov
in
fstpl
inc
iret
hlt
movsb
push
frstor
sub
nop
in
jno,pn
mov
pusha
je
inc
fcmovnbe
mov
js
scas
or
mov
les
nop
scas
mov
in
mov
push
push
jns
call
ds
bound
popf
or
jno
decl
je
dec
subl
and
or
mov
push
jp
add
cmp
xchg
jo
fcompl
in
data16
daa
cld
xchg
cmp
lock
loopne
fsubl
mov
in
enter
daa
out
mov
ficomps
inc
in
pop
or
out
scas
iret
mov
sbb
fwait
sbb
rorl
mov
adc
stos
xchg
loopne
fwait
adc
lods
divb
jbe
fcompl
les
xchg
je
dec
mov
inc
push
fwait
cmc
push
daa
out
xchg
or
dec
adc
xor
xor
inc
popa
xor
lret
shlb
lods
ja
stc
js
pop
fisubl
rolb
jp
mov
mov
inc
es
fisttpl
adc
mov
pop
mov
sub
bound
lret
popf
and
sarl
mov
cmp
sub
jmp
js
dec
xchg
stos
lcall
loopne
pop
unpckhps
test
xchg
lods
popa
sarl
jnp
mov
das
jo
outsb
and
xor
adc
imul
push
mov
jo
pop
imul
dec
and
sub
test
pop
mov
mov
js
pop
lret
cmpsb
lods
xlat
mov
xlat
jo
loopne
out
and
cltd
ret
pop
push
xor
inc
pop
cmpsl
es
mov
jmp
xor
pop
or
in
sbb
lock
fstpl
lret
out
sub
int
stos
inc
adc
mov
lds
test
sahf
inc
int3
inc
ss
mov
imul
pop
sub
stos
sbb
mov
mov
testb
mov
int3
test
add
les
inc
fidivrs
test
add
push
push
hlt
mov
aas
xchg
rcll
test
jo
test
xchg
scas
pusha
movsb
divl
add
cwtl
test
aas
or
mov
adc
push
xor
or
pop
testl
add
cmp
push
xchg
push
push
andl
pusha
icebp
les
cltd
cmp
adc
dec
push
add
xchg
sbb
dec
adc
int3
pop
test
cmpsl
in
arpl
fcoms
inc
repnz
aad
mov
movsl
jne
sub
out
ja
lcall
sbb
dec
ficoml
jmp
add
push
fsubrs
or
enter
push
jae
filds
rcr
pop
subl
add
pusha
daa
movsb
out
jg
jge
cmp
and
lahf
lods
stos
inc
js
lea
and
dec
or
in
xchg
mov
popl
enter
add
mov
sub
add
outsl
mov
xchg
into
lahf
sbb
lds
mov
xchg
testb
movsl
xchg
mov
lds
lods
inc
rorb
jae
add
pop
jge
out
push
xor
scas
movsb
je
test
sbb
mov
sbb
movsl
xor
call
ds
sub
xor
imul
pop
cld
hlt
arpl
popf
imul
je
mov
aam
push
imul
mov
sub
inc
cs
mov
add
nop
push
mov
pop
adc
sub
sub
xchg
lcall
or
lods
stos
pop
arpl
xor
ss
adc
fildll
out
in
mov
cmp
pop
cmpsl
jl
test
cld
mov
xor
dec
or
arpl
push
lds
fldt
xchg
xchg
jecxz
push
xchg
mov
jns
or
xor
dec
dec
dec
pop
sti
inc
ss
rcrb
lods
lock
in
test
aas
fstpt
cltd
rcll
xor
mov
das
leave
push
mov
mov
cltd
cmp
scas
dec
adc
mov
out
push
mov
dec
ficomps
push
dec
sub
inc
fnstenv
in
cmp
pop
inc
lahf
pop
xor
sbb
jle
mov
lock
adcb
push
dec
xchg
pop
pop
popa
sbb
inc
mov
xchg
in
fbld
das
xchg
into
add
out
loope
call
jnp
xchg
mov
cmp
xchg
fcompl
repz
bound
ja,pn
sub
mov
jecxz
enter
xchg
leave
mov
dec
or
inc
jp
inc
cmp
xchg
and
push
shrb
push
sbb
das
pop
sti
xor
cli
nop
sahf
pop
jl
popa
push
mov
ds
and
mov
push
pop
or
shrl
xchg
clc
dec
adc
js
lds
rorb
inc
or
cmp
pop
loope
jl
sahf
cwtl
add
fcoml
xchg
mov
enter
fnsave
fs
jecxz
dec
loopne
daa
fs
xchg
adcl
loop
ja
popf
pop
clc
cmp
ljmp
mov
inc
add
xchg
dec
cmp
sub
lahf
jmp
push
outsb
inc
fs
je
out
sbb
mov
and
nop
jecxz
outsb
inc
or
stc
stos
mov
mov
or
pop
xlat
adc
mov
daa
stos
xchg
mov
mov
outsb
add
adc
cli
mov
add
jl
and
sub
xor
mov
dec
sbb
and
in
dec
pop
pop
cwtl
test
insb
in
xor
add
cmp
cltd
nop
xchg
ret
popa
push
cwtl
and
jl
sahf
push
add
roll
in
xchg
jp
mov
fs
stos
inc
inc
or
fadds
cmc
xorb
inc
js
mov
xchg
push
push
es
xorb
lahf
je
mov
lcall
scas
push
and
or
outsl
push
and
mov
pusha
jbe
dec
or
push
add
adc
leave
pop
mul
enter
push
lea
dec
push
inc
std
jmp
js
cli
imul
cwtl
push
or
sub
ja
dec
push
push
inc
andb
cmp
test
cmc
daa
dec
adc
add
cmp
mov
adc
pop
sub
add
mov
imul
and
push
iret
mov
test
adc
shl
mov
repz
iret
mov
ss
in
mov
mov
gs
sbb
jne
sub
add
push
inc
ja
pop
mov
popa
mov
adc
cld
movsb
test
ja
mov
sbb
insl
cmp
out
cmpsb
dec
adc
out
inc
add
int
xorl
jo
hlt
pushf
sub
data16
inc
lret
push
sarl
outsb
movsl
pushf
lcall
mov
xlat
lcall
xor
add
jecxz
cmp
out
push
pushf
imul
push
fsts
test
and
mov
inc
divl
push
nop
add
cmp
pop
mov
lret
add
jge
enter
fldcw
bound
pop
lea
call
loop
jae
cli
dec
std
test
lock
cmpsl
dec
adc
in
and
xchg
or
roll
aam
out
pop
data16
inc
ret
jne
pop
stos
dec
jmp
xchg
cmpsb
call
inc
mov
lret
xor
loopne
rclb
movsl
addr16
dec
mov
cmp
ja
ret
inc
cmp
ret
aam
xlat
andl
or
pop
fld
pop
addr16
mov
outsb
pop
cmpsb
fs
int3
fildll
cwtl
mov
dec
dec
add
lahf
sub
mov
inc
repnz
mov
dec
and
push
std
inc
lcall
cmpsb
jecxz
pop
fisttps
mov
inc
insl
cmpsb
insl
shll
inc
out
test
add
cmp
cltd
adc
cmp
push
push
in
gs
aaa
testb
mov
int
cli
add
sbbl
dec
lock
out
push
scas
mov
mov
push
xchg
iret
jnp
test
out
leave
and
sbb
mov
dec
cmpsl
gs
mov
je
stos
push
mov
ss
adc
push
imul
add
movsl
or
adcl
inc
loopne
je
xor
lret
mov
js
fldl
in
std
imull
dec
ss
xchg
cmp
insb
pop
mov
leave
lahf
fimull
movsl
push
bound
pop
loope
mov
cltd
fcoml
adc
jp
shl
std
insl
mov
mov
arpl
or
add
dec
stos
mov
je,pn
or
loopne
jle
stc
lods
pop
ss
insb
xchg
lret
repz
dec
dec
sub
push
out
add
and
lcall
movl
addr16
or
inc
nop
dec
jae
popf
popf
flds
cmp
mov
and
mov
push
push
pop
fiaddl
out
mov
icebp
and
pusha
repz
sar
sti
lods
xor
imul
fsubl
es
push
pop
orb
cwtl
cld
and
and
addb
cli
jne
int3
and
fcoms
adc
in
mov
mov
xchg
test
jl
sub
xor
mov
jne
push
sbb
mov
or
or
xchg
fwait
sub
shll
push
adc
xor
call
add
repz
push
scas
loop
pop
mov
scas
add
cmp
fstpl
fs
aad
retw
jnp
fisttpll
and
jns
sbb
and
mov
sbb
push
adc
push
or
lock
dec
and
jnp
iret
nop
mov
into
andnps
or
jge
jne
dec
pop
push
jg
dec
add
fmull
jne
test
inc
cmp
push
mov
xor
loop
ds
jb
gs
mov
mov
mov
or
cwtl
push
in
cmp
and
dec
into
sub
rcrb
push
mov
lds
jnp
cwtl
jp
aad
mov
cmpsb
dec
outsb
lock
movsb
icebp
mov
aaa
scas
mov
sbbl
in
push
xor
sbb
mov
cwtl
inc
leave
stos
jp
mov
setns
mov
int
or
mov
scas
aas
enter
push
pop
aam
or
stos
jae
clc
lea
pop
fadds
adc
sbb
into
aad
test
sbb
mov
pop
mov
adc
and
in
mov
enter
xchg
mov
add
enter
sub
lret
ja
mov
or
or
pop
xor
or
inc
dec
bound
pop
inc
inc
inc
jp
sbb
inc
push
mov
xor
push
sub
movsb
adc
mov
or
jb
addr16
cmp
fsts
aas
stos
add
or
pop
fwait
push
sbb
mov
fyl2x
cmp
mov
pop
push
push
mov
jl
pop
in
mov
fwait
inc
int3
cmp
test
and
out
testb
sahf
test
in
mov
inc
adc
lods
mov
jae
jo
mov
sub
gs
jns
ret
imul
mov
outsl
ds
push
mov
or
cld
rol
scas
test
xchg
and
and
dec
dec
sahf
out
jae
arpl
in
ja
push
push
mov
xchg
aam
movsl
rcrb
and
mov
or
adc
mov
inc
fmull
sbb
jne
hlt
adc
pop
xchg
adc
push
fldl
adc
std
cltd
pop
aad
adcl
test
mov
rcrl
pop
xchg
or
rol
insb
stos
and
and
in
popf
push
jb
daa
into
int3
lret
dec
imul
sti
or
add
bnd
pop
sbb
mov
cmc
or
aaa
add
or
leave
fs
or
xchg
bnd
in
pop
into
data16
push
push
sbb
out
movsl
mov
cld
fadd
fsubs
mov
test
shlb
rcrl
sbb
movsl
das
in
andb
jg
and
dec
or
lea
jno
xor
lret
test
orl
fdivl
adc
cmp
push
mov
enter
les
div
pop
call
fs
pop
ljmp
insl
nop
fmull
test
stos
xor
xchg
jmp
jae
or
add
in
loop
lahf
add
daa
xchg
or
ja
jo
cmp
xchg
into
jns
add
daa
hlt
les
inc
ror
add
pop
sub
addr16
mov
les
int
jns
movsb
in
dec
aad
dec
mov
lea
jle
adc
outsl
leave
stos
dec
dec
sbb
push
pop
gs
pop
dec
and
insb
inc
out
push
or
inc
sbb
daa
ror
inc
ror
fcmovne
mov
ja
lret
inc
cmp
popf
push
divb
iret
pushf
pop
xor
jp
mov
fwait
xor
jmp
dec
push
push
nop
stos
mov
and
jge
pushf
xchg
push
faddl
ss
mov
jns
jbe
jb
das
sub
arpl
not
hlt
out
idivl
inc
mov
shr
cltd
ja
test
cld
fcoms
inc
cs
adcb
adc
mov
mov
or
pop
icebp
insl
cmp
js
mov
dec
xchg
pop
icebp
sbb
in
das
out
mov
add
gs
sub
call
mov
push
ljmp
test
popa
lret
sub
or
fmul
or
insb
cmpsb
jbe
pop
inc
lea
rorb
xchg
leave
out
loopne
pop
fsubs
xchg
push
aas
dec
fucomp
repz
popf
fnsave
mov
cmp
fisubl
outsb
sbbl
out
jmp
mov
xchg
inc
or
popf
push
enter
mov
fidivrl
lret
sub
adc
fucomi
xchg
repz
push
adc
inc
inc
popf
mov
bound
and
insl
imul
sub
scas
and
jae
push
nop
bound
stc
sub
mov
aad
fucomi
add
fnstcw
adc
or
cmc
in
pop
cmp
pusha
ljmp
jle
rclb
aad
not
jnp
jp
push
pop
stos
sub
jnp
cli
sbb
popa
xchg
mov
sbb
push
pop
shl
sub
lds
mov
xor
dec
adc
sbb
in
inc
std
stc
add
aad
or
xchg
mov
inc
cmp
mov
pop
pop
movsl
or
ja
push
fidivl
mov
xchg
insl
jnp
push
sbbb
ja
mov
xor
jae
orb
push
and
pop
pop
jg
icebp
mov
xchg
mov
repnz
fcmovu
clc
test
lret
insl
jne
jmp
or
movsl
push
cmpsb
ja
mov
movb
xchg
xchg
mov
jmp
mov
dec
mov
imul
mov
xlat
pop
call
lret
xor
rcrb
outsb
fcomip
push
jge
imul
popa
mov
xchg
jo
and
xlat
inc
cld
jb
les
jge
cmpsb
fiadds
icebp
in
mov
and
pop
mov
divl
add
push
in
dec
cs
stos
inc
inc
iret
push
push
sbb
pop
sahf
test
adc
jl
decb
xchg
sbb
popa
and
test
ret
xor
imul
je
movsb
lods
push
std
sbb
fsubrl
addr16
jbe
mov
mov
repnz
into
in
mov
push
jl
lea
adc
adc
xchg
cmpl
insb
sbb
cltd
in
and
ds
scas
stos
mov
ja
jge
dec
imul
xor
cs
mov
cmp
cs
xor
das
lcall
imulb
cmp
pusha
dec
insl
or
dec
fsin
les
mov
pop
sub
sbb
gs
ljmp
lock
sarb
sub
push
fcmovnbe
inc
cmp
or
sarl
sub
sbb
and
outsb
mov
bound
jg
or
ljmpw
and
loop
xlat
ds
pop
arpl
or
xor
push
sarb
jmp
ret
or
cld
lea
fistpll
mov
sub
nop
dec
stc
jbe
adc
mov
add
push
push
jae
bound
mov
imul
push
popa
and
xchg
test
aaa
mov
lret
xchg
shlb
test
inc
ret
mov
and
rcll
pop
dec
fstpt
xchg
adc
push
rclb
cmpsl
lods
inc
mov
push
add
gs
andb
jg
mov
sub
ror
adc
or
xor
push
push
and
daa
les
aam
jns
mov
mov
into
jnp
popa
xor
icebp
sti
dec
dec
cmp
jae
subl
and
lds
and
rorb
lret
xlat
mov
adc
dec
cld
in
mov
sti
lods
shrl
das
inc
fimull
loopne
lods
jge
jecxz
sub
imul
addr16
movsb
sbb
or
dec
rolb
cmp
inc
imul
out
in
in
pop
or
mov
mov
in
adc
lahf
loopne
dec
ss
clc
adc
mov
xor
subl
fildll
pushf
call
xchg
adc
ss
movsb
in
movb
imul
arpl
cmpl
dec
sub
push
cs
cmc
lcall
adc
xchg
insl
movsb
ljmp
pop
push
incb
push
dec
cmc
rcrb
add
std
out
and
mov
aaa
push
jle
dec
dec
add
test
mov
rcrl
xchg
adc
dec
pop
push
pusha
js
fsubp
adc
mov
dec
adc
ja
shll
push
imul
mov
inc
repnz
outsb
sbb
data16
jbe
mov
inc
mov
lods
jl
int
movntq
sti
push
xchg
cmp
sub
mov
adc
and
and
cs
testl
aad
xor
pop
addr16
dec
lods
movsl
stos
popl
sarb
push
and
push
sarl
pop
jae
xchg
pop
aam
xchg
inc
sbb
mov
test
jnp
xorl
outsb
jns
in
es
mov
fcmovne
jle
xor
xor
lea
xchg
sbb
or
mov
sbb
out
clc
das
outsl
out
sub
cmp
sub
push
sbb
and
imul
pop
sbb
lock
repnz
lds
inc
pop
pop
inc
inc
rclb
shlb
ret
cli
cmp
insl
xorb
add
cmpsb
ret
push
lahf
inc
mov
mov
cwtl
adc
mov
add
push
mov
mov
or
add
lea
gs
mov
push
jmp
call
push
outsb
mov
ljmp
pop
cmp
rcl
jb
xchg
out
xchg
xchg
jp
rcll
sub
xor
ret
stc
inc
add
cli
fisubrl
adc
in
and
adc
xchg
or
lret
cs
or
sbb
mov
jle
lcall
aas
dec
jecxz
ror
mov
fwait
sbb
dec
sub
mov
arpl
adc
cld
popf
repz
push
lods
test
outsl
arpl
cmp
xor
and
xchg
les
aam
pop
xor
loope
inc
sbb
adc
loopne
cmp
aam
mov
and
outsl
in
bound
jle
mov
mov
lret
and
or
gs
out
sbb
data16
aam
aaa
jmp
jmp
cmp
mov
xor
xor
sahf
dec
and
addr16
xchg
xchg
addr16
inc
leave
decb
fistl
idivl
ret
std
push
lds
and
in
mov
test
repz
xchg
test
dec
lods
xchg
sub
sub
adc
jl
or
shrb
out
pop
lods
es
and
xor
sti
xorb
lahf
loope
pop
into
js,pt
inc
push
push
in
aam
lock
xorl
and
rcll
shlb
loopne
push
xor
inc
sbb
inc
sahf
test
xor
jg
fs
icebp
pop
mov
push
pushf
inc
dec
in
and
gs
xor
cmpsb
std
cmp
incb
scas
or
aad
dec
xor
xchg
lods
and
in
xchg
mov
bound
shrb
mov
and
jns
xor
jbe
push
cwtl
leave
std
cmp
imul
loop
pusha
aaa
or
fsincos
cmp
push
push
or
shl
jns
xlat
outsl
and
xor
mov
scas
ljmp
jl
ljmp
pop
stc
and
out
sbb
clc
mov
mov
sti
lea
inc
shl
lea
push
lret
inc
sbb
mov
pop
clc
push
les
flds
dec
or
popa
and
pop
fcmove
push
xorl
push
jne
outsb
xchg
shll
clc
pushf
insl
adc
aas
adc
pop
mov
clc
ja
pop
into
jge
mov
sbb
pushl
repz
arpl
adcb
es
or
das
jae
mov
sbb
push
cmp
dec
mov
fiaddl
push
jl
sub
sbb
push
ud1
dec
test
mov
std
rcrb
stc
repz
xor
jg
and
fsubrs
dec
sub
into
or
movsb
popa
sub
out
and
icebp
jg
cmp
js
aam
pop
push
rorl
das
dec
mov
cmp
cmp
shl
outsb
dec
xchg
mov
pop
jae
fs
xor
test
pusha
jne
ret
repnz
sbb
sbb
mov
fs
int3
dec
fs
scas
adc
or
test
push
inc
rcll
arpl
mov
pop
xchg
sub
rcl
cmp
fmull
movsb
cld
je
push
repz
sti
sbb
push
pop
ljmp
stos
cmp
lock
in
pop
mov
adc
bound
lods
inc
xorl
push
xchg
mov
das
ficoml
xchg
cld
and
fisubrl
pop
pusha
push
sahf
mov
xchg
dec
sahf
xchg
jae
fs
xor
sti
test
push
sub
js
stos
jb
aaa
push
aam
fs
int
stos
out
xor
dec
and
cmc
push
repz
add
cmp
cmpl
imul
aaa
xchg
add
int3
pop
call
xchg
out
pop
push
xchg
sahf
xchg
das
in
jno
mov
leave
clc
and
xor
pushf
dec
mov
nop
push
xor
push
mov
mov
pop
jno
outsb
js
cmpl
movb
in
fs
sub
arpl
add
testb
enter
inc
adc
subl
jle
jae
xchg
jmp
push
or
push
push
mov
xchg
mov
xor
mov
xchg
out
jo
into
sbb
lds
pop
adc
fwait
popa
setno
data16
cmp
outsb
pop
rcll
pop
lock
movsb
jp
inc
sbb
adc
xchg
mov
mov
cltd
mov
add
dec
popa
cmp
lret
pop
in
ss
loope
test
cli
mov
ds
aam
ljmp
andl
sbb
dec
in
in
popf
bound
pushf
ljmp
mov
fidivl
cmp
mov
cmp
ljmp
roll
xchg
fisttps
mov
dec
in
scas
or
jnp
pop
loop
lods
pop
mulb
roll
fistps
pusha
jmp
cmp
jecxz
pusha
in
xchg
xchg
and
add
cmpxchg
fs
sub
mov
jp
out
sbb
fcmovnu
xor
cmp
mov
xor
inc
dec
push
jp
add
mov
sbb
sbb
imull
sub
scas
ret
adc
test
imul
mov
jle
push
inc
sbb
lahf
loop
pop
ja
dec
mov
and
mov
imul
ss
mov
fisubs
test
inc
or
xchg
test
jbe
sbb
xorl
xchg
std
jmp
js
gs
mov
inc
jne
fs
movsb
mov
cmp
ret
and
mov
popa
scas
xchg
mov
xchg
pop
or
mov
scas
mov
inc
xor
aaa
movsb
roll
pop
pop
outsl
sbb
dec
mov
les
xor
setnp
imul
aaa
ret
mov
push
adc
jnp
push
pminsw
lods
inc
pop
sbb
fs
pop
stc
xchg
xchg
popf
in
adc
arpl
bound
int
jmp
pop
cmp
and
js
mov
js
aam
iret
or
inc
std
xorl
std
inc
loop
imul
mov
cmp
lahf
dec
jbe
mov
jg
dec
sub
sbbl
sbbb
add
xor
pop
pop
pop
xor
loope
ss
or
xor
sub
clc
fsts
ret
sbb
lods
mov
fistl
pushf
fwait
adc
pop
sbb
fistl
imul
pop
addr16
xor
out
aad
or
sbb
pusha
les
xchg
jb
add
dec
gs
pushl
jmp
je
insl
nop
sbb
into
lret
xlat
sub
jge
add
fidivs
xchg
sbb
loope
lods
pop
pop
xchg
insb
pand
adc
cmp
jno
aas
mov
fs
inc
stos
sbb
lea
rolb
mov
xor
or
les
testl
into
or
pop
lds
std
js
and
adc
xchg
push
or
sbb
xchg
insb
outsl
pop
fisttpl
xor
and
and
dec
or
xchg
mov
dec
call
lret
sub
pop
pop
in
rcrb
ss
int
fisttpl
pop
orl
fisttps
push
push
mov
jns
cmp
adc
out
insl
jecxz
push
outsb
pop
and
xor
mov
outsb
int3
outsl
jmp
cmp
xchg
mov
adc
mov
cmp
inc
mov
and
xchg
adc
mov
pop
int
pop
or
adcl
ret
shll
daa
sub
shll
vmread
inc
lcall
stos
mov
icebp
jnp
scas
or
js
fsubrs
push
xchg
loopne
jmp
mov
push
xchg
add
mov
cltd
cmp
xchg
lret
out
lock
add
lret
addl
push
sbb
lods
lock
out
dec
jns
pushf
cmp
or
and
xchg
mov
mov
sbb
xchg
mov
dec
mov
stos
or
sti
xchg
cmp
or
into
inc
adc
lss
movsl
cltd
or
jno
adc
add
sahf
cltd
lret
scas
in
out
sbb
cmp
test
dec
adc
fistpll
adc
es
or
sbb
push
pop
inc
sbb
loopne
das
adc
ret
adc
mov
loop
test
cmpsl
push
jmp
cmp
pop
sub
sub
cs
pop
inc
lahf
jnp
add
incb
in
fs
mov
adc
xor
out
int3
clc
mov
sub
stc
mov
mov
pop
mov
mov
sbb
sub
push
das
jp
clc
call
shll
push
inc
and
dec
rcll
bound
cs
jmp
test
and
xchg
testb
scas
adc
mov
inc
mov
xor
lods
mov
in
negl
cmpl
dec
std
mov
add
aam
cmp
adc
mov
lock
fiaddl
out
adc
arpl
pop
rolb
into
and
sbb
pushf
jno
fsub
cli
pop
pop
int
pop
jne
mov
push
cmpsl
mov
lds
xorl
leave
adc
lahf
cmp
push
lds
xor
adc
inc
sub
stos
stc
inc
xor
dec
mov
outsb
lcall
pop
fwait
mov
test
stos
repnz
cmp
mov
mov
das
jecxz
push
icebp
mov
movsb
pushw
sub
std
hlt
mov
pop
mov
testb
jo
jmp
xchg
inc
pop
mov
mov
out
cmp
roll
int
test
inc
imul
or
shrl
paddw
stos
xchg
mov
inc
or
movsl
adc
xchg
int
sahf
test
pusha
and
nop
cld
cmc
mov
jb
js
cmp
add
xchg
rcl
xchg
lret
in
cwtl
fimuls
and
mov
subb
js
insl
lcall
cltd
mov
adc
fcompl
or
iret
stc
sub
outsb
mov
pop
rcll
xchg
cmpsl
mov
cmp
or
imul
fnsave
pop
data16
add
xchg
fwait
icebp
or
mov
insl
mov
fidivrs
pop
lds
push
dec
pop
inc
inc
seto
mov
addr16
pop
xchg
call
mov
lret
mov
xor
icebp
shl
int3
mov
inc
push
mov
xchg
adc
bound
xchg
cli
mov
flds
data16
ret
dec
std
inc
push
fiaddl
clc
dec
and
add
mov
loope
inc
or
mov
xchg
cmp
mov
lea
out
imul
inc
nop
mov
adc
mov
or
jb
jae
test
mov
stos
addr16
addl
in
adc
test
shlb
jp
dec
mov
add
lahf
inc
scas
lods
ret
mov
lods
sub
loopne
aad
or
ja
mov
and
dec
mov
aas
mov
jmp
jecxz
jbe
push
lods
dec
ja
adc
iret
pop
cld
ret
ljmp
and
repz
ficompl
xchg
add
in
mov
cmp
repz
in
xor
popa
sub
out
leave
jae
and
cmp
sbb
push
mov
outsb
test
mov
inc
cmp
stos
movsl
scas
inc
out
sbb
popf
push
mov
jae
cmpsb
mov
addr16
mov
std
jp
jecxz
inc
pop
data16
inc
call
aam
adc
insb
repz
lcall
scas
or
mov
jae
xor
bound
je
jecxz
pop
sub
lds
cmpsl
push
cmp
mov
inc
das
repz
add
shrl
push
pop
mov
cmp
movsl
jne
jb
mov
cmpsb
add
dec
popa
inc
push
mov
xor
clc
pop
lock
and
call
nop
test
lods
lds
xchg
or
sub
out
dec
sub
in
nop
aad
cmp
push
push
pop
jl
push
jp
lcall
add
test
adc
std
lods
pop
hlt
pop
ljmp
mov
jmp
dec
push
mov
insb
lds
jp
mov
cmp
lcall
cmp
mov
sub
xchg
lret
push
mov
int3
jae
mov
mov
loop
push
data16
cs
lea
mov
pop
es
imul
loope
mov
fidivs
inc
xlat
frstor
add
mov
xchg
fs
mov
fsubr
sub
popf
mov
sbbb
test
sub
test
int3
sahf
or
sub
mul
or
pop
mov
and
cmp
sbb
xchg
cmp
movsl
pop
test
inc
outsb
mov
inc
add
xor
out
or
or
test
pop
rcr
jmp
out
sub
dec
adc
insl
aad
int
xchg
cmp
fnstsw
lcall
pop
out
test
or
mov
pop
xchg
sub
mov
cwtl
sti
imul
rclb
xlat
stc
ss
cmc
aas
rcl
sub
movsl
push
mov
jle
xchg
rorb
inc
stc
out
pop
cmp
mov
inc
outsl
jecxz
fnstenv
mov
fwait
jnp
inc
sbb
push
cmpb
lock
into
jae
push
inc
dec
es
shlb
and
sti
xorb
pop
add
ss
stos
shrl
popf
loopne
je
imul
inc
and
sbb
inc
xchg
mov
xchg
das
jp
jle
or
and
push
fildll
push
jg
jns
push
dec
mov
mov
dec
cs
sbb
xor
sub
lcall
mov
clc
lea
sar
outsl
nop
adc
push
dec
cmpsb
fcmovne
insl
stos
insb
je
sub
sbb
fcoml
inc
push
and
mov
xor
adc
add
adc
loopne
in
out
jmp
fwait
sub
pop
pop
add
aas
test
out
pop
push
aad
sub
fwait
jg
in
je
jno
xchg
pop
sbbl
sub
xchg
outsl
sti
mov
imul
add
mov
pusha
nop
jne
in
adc
cmp
adc
aad
mov
and
lcall
stos
addr16
std
fadd
mov
xchg
mov
xor
or
sbb
mov
inc
icebp
dec
sahf
pop
jge
pop
negl
sbb
xor
cmpsl
inc
mov
mov
das
push
je
mov
push
movsb
outsb
inc
gs
inc
cmp
imul
and
scas
test
cmpsl
sbb
push
xor
add
mov
rcl
lods
scas
subb
lods
psrlw
xchg
pop
shlb
lret
rorl
enter
fidivrs
out
push
data16
push
push
orl
xor
es
mov
xor
inc
cmpsl
sbbb
fiadds
repz
dec
cli
mov
lcall
inc
test
add
xor
mov
ljmp
cwtl
mov
jnp
cwtl
cmpsl
lahf
cwtl
mov
enter
sbb
fdivl
sub
pop
sahf
enter
mov
mov
sti
cmpsl
sub
jmp
ss
sbb
and
push
outsl
cmp
hlt
xlat
cmpsb
loopne
sti
pop
sbb
mov
movb
sub
adc
sar
fcmovne
mov
push
jge
mov
jb
xchg
xlat
ss
jl
jecxz
mov
and
fwait
mov
aam
mov
dec
pop
clc
inc
dec
cld
popa
push
addb
outsb
data16
mov
jp
fs
rorb
lock
pop
fiadds
popf
mov
pop
pop
mov
icebp
stos
and
repnz
dec
mov
add
dec
aad
push
leave
jb
imul
jnp
fidivl
fadds
push
sbbb
insb
push
adc
inc
outsl
adc
std
hlt
mov
les
dec
pushf
in
int
xor
mov
and
mov
jbe
rep
pop
insl
push
mov
das
lret
adc
aam
xchg
imul
cmc
sub
add
or
xor
scas
je
fmuls
rorl
lcall
orl
mov
dec
inc
or
push
jb
and
inc
cmp
gs
xlat
dec
mov
ja
insl
jb
test
lcall
fcmove
lret
inc
inc
xor
lock
and
bound
and
mov
and
xchg
enter
and
rcrl
lret
or
push
push
arpl
and
xor
mov
push
add
adc
push
or
or
pop
sbb
dec
int3
mov
xchg
xor
push
inc
icebp
push
xchg
xchg
adc
cmp
lcall
mov
loope
cmp
shl
add
das
mov
pusha
inc
xchg
adc
xchg
sub
mov
mov
pop
adc
into
leave
std
decl
xor
push
push
decb
pop
push
das
lret
mov
aaa
mov
mov
pushf
into
aaa
psllw
test
out
into
pop
mov
mov
ljmp
mov
inc
shrl
dec
add
xlat
push
push
lods
hlt
mov
jl
xchg
fidivs
push
sbb
loop
cmp
xor
and
mov
mov
mov
imul
fstpl
pop
das
xor
push
xchg
nop
ficoms
leave
push
dec
dec
jmp
leave
dec
scas
push
sub
outsb
add
lds
push
fldt
nop
push
ja
lcall
pop
inc
ret
movsl
movsl
nop
lahf
test
enter
add
arpl
jg
jbe,pt
mov
fwait
mov
sub
xchg
out
movsb
mov
imul
xchg
daa
aad
add
cmp
xor
mov
sbb
mov
outsl
mov
adcb
xchg
mov
mov
add
push
pushf
movsb
inc
sbb
push
cmp
fnstsw
es
jmp
xchg
mov
add
xchg
pop
sti
cmp
es
scas
xlat
push
imul
mov
stc
out
mov
mov
js
adc
leave
jecxz
stos
movl
pop
dec
sar
inc
xor
add
into
inc
pop
xchg
int
cld
pop
arpl
ret
dec
push
sti
and
inc
xor
sarl
push
test
in
incb
mov
push
lock
enter
fimull
adcb
das
andl
popf
jae
mov
outsb
sbb
mov
sub
arpl
in
mov
mov
push
sbb
punpckhbw
mov
add
or
data16
xchg
cmpsb
mov
bound
loopne
pop
push
pop
push
lods
pcmpgtb
repnz
sub
mov
roll
adc
mov
js
xchg
or
das
jmp
inc
test
cmp
int3
icebp
mov
shlb
dec
sub
jecxz
cmpsl
mov
dec
daa
cmp
cmp
sub
pop
pop
xchg
add
int
and
enter
fwait
mov
add
adc
int3
int
lods
mov
push
dec
out
js
adc
adc
imul
push
inc
add
aaa
lret
xor
test
xor
mov
lods
xor
cmp
mov
fadds
mov
jmp
pop
aas
lea
daa
ror
insl
jae
lds
cld
mov
sub
movsl
fisubs
inc
cs
dec
sahf
inc
and
mov
lods
add
xchg
dec
aam
mov
in
pop
cmpsl
sub
pushf
cmpl
push
hlt
rcr
sub
push
xchg
es
lcall
xchg
mov
int3
imul
adc
arpl
aaa
shrb
nop
push
adc
ret
xor
loop
loope
mov
pop
xchg
aad
mov
jle
out
pop
push
bnd
mov
dec
xchg
aaa
pop
aam
cltd
lret
xchg
outsl
dec
fsubrl
mov
mov
shrb
mov
mov
and
sbb
push
rclb
out
or
jle
push
push
mov
scas
pusha
pop
not
fcompl
jl
mov
lock
insl
dec
shl
xchg
outsl
test
popf
scas
mov
mov
out
mov
lahf
mov
pop
call
je
pop
test
push
or
push
stc
lahf
mov
insl
sti
sahf
mov
mov
test
push
int3
subl
data16
out
lret
fwait
xchg
cmp
addr16
push
loopne
push
jo
dec
cltd
jo
in
ret
test
dec
lahf
sbb
fmull
dec
sbb
iret
or
sub
insb
stos
mov
push
lods
and
loopne
jg
sbb
std
clc
and
sub
dec
cltd
jo
fs
pop
mov
pop
xchg
dec
movsb
sbb
imul
stc
mov
pop
jg
mov
imull
fisubrl
mov
aam
cmc
rcr
je
add
daa
es
dec
in
or
bound
lea
aas
shrb
int
push
push
and
mov
dec
sbb
mov
jmp
mov
scas
pop
jo
pop
sbb
cli
add
xchg
pop
stos
dec
lcall
mov
cmc
cli
mov
pop
outsl
jmp
lds
cmp
xor
push
mov
lods
jge
insl
cmc
in
push
push
push
sbb
add
pop
insl
data16
adc
arpl
and
loope
nop
aad
daa
sub
pop
jp
push
inc
lahf
fsubr
inc
sub
fildll
jecxz
nop
jle
and
lock
or
and
xchg
xor
dec
cs
cli
mov
inc
movsb
jg
xchg
adc
xchg
adc
ficompl
inc
scas
es
in
cmovns
ss
lcall
loope
shll
pop
pop
in
cmpsb
out
jge
addr16
jae
fstl
and
pop
pop
adc
loope
and
mov
aad
aaa
ret
mov
xchg
movsb
or
mov
testb
inc
call
loopne
arpl
into
or
inc
dec
inc
orl
dec
xchg
fcomp
mov
cmp
jno
popf
fs
fs
je
jo
lahf
jae
out
fimuls
cli
lds
cmp
sti
shll
xor
xchg
sub
xchg
push
sbb
pop
aaa
std
lods
loope
xlat
lret
or
hlt
not
pop
sahf
push
das
cmp
mov
mov
inc
leave
fs
arpl
sbb
iret
push
adc
mov
pop
mov
shll
jo
xor
adc
xchg
hlt
shrl
inc
andb
test
inc
jae
pop
fwait
adc
js
cli
xlat
test
outsb
int3
ja
aam
test
jecxz
mov
inc
frstor
ds
mov
mov
jns
mov
xchg
mov
cmp
push
mov
iret
sbb
mov
ljmp
cmp
mov
les
aam
mov
jns
outsb
jo
xchg
ljmp
stos
mov
push
out
mov
cmp
test
out
mov
bound
mov
sbbb
or
das
or
dec
jne
and
popf
or
xchg
ret
sbb
xchg
jmp
bound
xlat
rorl
and
mov
js
mov
call
jne
nop
jb
into
mov
add
jbe
push
push
add
repnz
bound
or
mov
pop
pop
loope
push
pop
insl
ljmp
cmc
sbb
scas
lods
lods
add
es
pop
ja
push
and
mov
idiv
cmp
loop
divl
or
loopne
push
scas
bound
pop
sbb
lahf
jge
daa
and
xchg
adc
inc
popf
shrl
xchg
into
mov
data16
pop
mov
cmp
pop
leave
cs
test
js
arpl
loop
sbbb
jae
daa
push
in
scas
shl
stos
pop
cwtl
lea
arpl
rorl
cltd
dec
shll
test
rorl
ret
test
test
inc
cmp
sbb
or
out
repz
sub
fisubl
dec
mov
jecxz
dec
dec
cmp
fwait
lods
addr16
jle
push
cld
fidivs
xor
push
out
xlat
int
adc
inc
push
les
inc
int
insl
es
repz
and
into
pop
lahf
cs
mov
push
fcomip
xchg
jb
repnz
xchg
or
and
cld
aad
and
cltd
or
fsts
lea
pusha
dec
xor
xlat
inc
daa
insl
jbe
ftst
lahf
lret
adc
stos
mov
sahf
adc
in
sbb
arpl
pop
lds
std
xchg
mov
scas
repz
rolb
xchg
cmp
or
dec
cmp
into
out
fs
nop
das
imul
out
xor
adc
mov
push
inc
fdivl
cs
loop
and
std
ret
sbb
rolb
mov
out
push
shr
mov
stc
mov
push
rorb
ret
testl
sub
add
movsl
lcall
sbbl
and
lret
pop
mov
scas
in
and
gs
jl
repz
or
sbb
imul
addr16
orl
aas
sbb
jmp
cmc
xor
cmp
cld
xchg
icebp
and
scas
mov
into
mov
dec
mov
sub
scas
movsb
mulb
or
inc
cwtl
adc
or
loopne
insl
xor
lcall
addr16
inc
adc
cmpsb
imul
push
lcall
aad
cld
fs
and
pop
add
out
mov
insb
push
push
add
xchg
dec
push
daa
sub
pop
push
arpl
rcrl
mov
testb
mov
out
jns
cmp
mov
mov
outsl
mov
mov
pushf
outsl
fdivrl
dec
std
jne
mov
jmp
dec
in
dec
ffree
repnz
fnstsw
jne
lods
sbb
jb
daa
inc
dec
fstpt
dec
xlat
cmp
and
sbb
pop
xchg
sub
add
add
loope
inc
and
dec
sbb
rclb
ret
pop
arpl
addl
scas
pop
push
in
inc
out
and
insl
sbb
jg
cmp
add
mov
out
cmp
lcall
inc
lcall
xor
movsl
sti
cmpsb
dec
mov
jg
sbb
pop
test
or
jae
xchg
adc
mov
lahf
dec
push
or
js
push
stos
lods
sbb
and
das
push
popf
cltd
xchg
mov
xor
jbe
and
xchg
jb
loopne
lea
and
push
lcall
dec
push
dec
inc
orl
iret
fdivrs
pop
jge
dec
mov
hlt
jge
out
int
fimull
pop
lcall
fsubrs
sbb
pop
adc
mov
lahf
pop
mov
xor
dec
jnp
or
jno
imul
or
insb
fwait
mov
pop
push
push
jge
bound
xor
aaa
in
fadd
inc
inc
xchg
leave
push
xchg
pushf
lods
cmp
je
daa
xor
push
xchg
mov
xchg
xchg
out
pop
inc
push
lock
js
out
rorb
xchg
popa
adc
sub
mov
mov
or
repz
mov
cmp
sbb
jge
inc
mov
pop
mov
mov
lea
rcrb
xchg
mov
mov
mov
dec
icebp
loop
pusha
leave
sub
jp
dec
callw
push
mov
cli
lods
addr16
in
aaa
mov
push
add
addb
inc
or
fiaddl
pop
xchg
incb
sub
inc
repnz
pop
or
out
sbb
adc
mov
mov
mov
cld
lret
popa
fidivrs
cmpsl
xchg
push
dec
pop
or
xor
test
stos
rorl
jne
push
inc
and
aad
shlb
movsl
enter
repnz
add
xchg
lods
or
sti
dec
mov
lock
inc
fwait
test
mov
es
push
out
mov
js
push
adc
call
and
and
cli
sar
or
std
sarl
cmp
pusha
sub
cmpsl
scas
in
inc
push
imul
popa
pop
into
xchg
out
or
adcl
mov
gs
adc
cmpl
les
mov
sub
adc
dec
mov
and
and
into
ljmp
hlt
dec
xchg
jno
aam
sbb
jecxz
fs
into
pop
adc
les
divb
aam
inc
lahf
ja
loope
mov
lahf
and
or
out
nop
mov
add
nop
xor
mov
ror
iret
xor
int3
mov
hlt
lcall
in
cltd
xor
jns
movsl
inc
sub
pop
xor
dec
cmpsl
mov
subl
sbb
test
imul
aas
pop
jecxz
fisttpll
jo
push
xchg
bound
xchg
es
sbb
xor
push
lahf
xchg
mov
lods
xchg
lret
ret
inc
nop
ret
and
ret
sbb
push
ds
inc
jae
lock
pop
loop
aam
mov
mov
orb
xlat
pop
add
je
cmp
or
jae
jbe
pop
test
sub
push
adcb
pushl
add
mov
sti
int3
jno
xchg
jp
inc
mov
add
orl
lret
push
lret
aam
into
loopne
insb
or
jo
jne
ja
insl
int
sbb
subl
popa
mov
mov
jg
jecxz
lret
arpl
xchg
dec
stos
cmp
sub
and
pop
adc
mov
xchg
xor
cli
push
scas
out
dec
and
mov
cmpsb
push
test
xor
fcomip
push
mov
or
rol
sub
scas
out
sub
mov
lahf
pusha
adc
imul
faddl
iret
imulb
test
fstps
mov
ret
sbb
das
xchg
rclb
mov
mov
cmpsl
jae
mov
mov
mov
sbb
sbb
add
ret
jno
icebp
pop
mov
mov
and
out
pop
add
dec
add
repz
ret
fdivrl
push
cmp
pop
inc
xlat
std
faddl
insb
nop
ret
test
outsb
cmp
xchg
jmp
aaa
das
cld
lods
shrl
cmp
mov
loope
sbb
adc
int3
mov
sbb
popa
cwtl
xor
hlt
and
call
and
xchg
mov
add
lret
pop
rcrb
aad
dec
ljmp
mov
fs
gs
fisubrl
push
add
cmpsl
jbe
or
cmovb
shlb
push
push
push
js
insb
mov
dec
movsb
mov
jae
xchg
std
subb
pop
mov
lret
ljmp
mov
adc
addl
sbb
adc
xchg
es
ret
push
pop
loopne
push
fsts
lret
cmp
and
shrb
xor
jle
mov
xor
push
dec
in
pop
imulb
and
adcl
adc
mov
aad
repnz
sbb
inc
xchg
adc
enter
sbbl
add
mov
mov
jp
sbb
sahf
testl
sub
sarl
repnz
filds
jl
sbb
fsubrl
cld
xlat
push
out
xchg
cmp
push
cltd
jmp
push
repz
cmp
mov
into
cmpsb
adc
add
or
test
fwait
cs
js
cmc
movsl
or
decb
imul
and
push
aad
btc
jb
mov
mov
and
jge
xchg
out
jb
fucom
push
push
sub
jge
bound
dec
clc
or
shrd
jno
adcl
sbb
jno
mov
jp
jge
sbb
mov
pop
xchg
mov
and
or
jno
test
or
inc
cmpl
lret
dec
pop
xchg
sbb
jbe
scas
push
pop
pop
add
cmpsb
jne
outsb
push
xchg
bound
test
cmp
loopne
adc
or
cmp
mov
fdiv
pop
loope
fcmovnb
add
stos
cmpsb
add
enter
mov
lea
adc
in
nop
les
xor
xchg
ds
jae
das
iret
or
das
xor
fsubrl
mov
fwait
xlat
sub
arpl
lcall
into
cltd
mov
add
mov
div
into
clc
cmc
sbb
inc
pop
add
sarb
fcomip
movsl
into
mov
push
push
lock
push
hlt
add
pop
pushf
and
pop
lea
inc
push
je
push
mov
call
cmpb
stos
sbb
pop
cmpsl
pop
mov
popa
sbb
cli
xchg
xchg
mov
cmpsl
stos
out
inc
sahf
and
test
aam
mov
cmp
rep
jbe
pop
adc
xor
cli
adc
call
pop
sbb
and
adc
pop
mov
jle
test
fwait
mov
daa
mov
ljmp
lods
aas
stc
jno,pn
mov
jno
ja
mov
jg
or
lds
cld
xchg
xor
movl
stc
mov
inc
mov
scas
inc
dec
push
cmc
mov
insl
sub
xlat
ss
lds
inc
mov
ret
cmp
scas
fcoml
push
xor
add
mov
loopne
cmpsb
mov
add
popa
into
das
loopne
cmp
outsl
jmp
outsb
ret
in
popf
xor
test
inc
aas
inc
lcall
aad
jne
jbe
in
das
jo
push
sub
cmc
shll
dec
aaa
cmp
stc
mov
sbb
xor
push
jp
fs
jnp
in
pop
dec
pop
cmc
or
test
in
and
std
les
mov
repz
call
iret
mov
sbb
je
xchg
or
lahf
shlb
jb
mov
adc
inc
adc
pop
out
fdivs
adc
out
mov
inc
pop
xor
mov
in
movsb
add
pop
aaa
andb
subl
loop
sti
cmp
mov
push
jl
dec
roll
mov
jmp
lret
dec
push
cmp
add
mov
insl
cmpsl
sbb
sbb
inc
jb
fistpll
mov
in
push
iret
sub
mov
sbb
cli
sbb
mov
sub
sub
cmpsl
call
push
dec
jge
dec
shlb
jo
je
cmpl
clc
lds
inc
adc
mov
ffree
cmp
iret
aam
lahf
push
jp
add
pop
jle
sub
adc
xchg
fidivrl
dec
pop
andl
and
adc
movsb
mov
dec
loopne
pop
sub
adcb
js
test
inc
mov
sar
mull
push
lea
orl
xchg
rol
or
stos
ret
pop
fildl
xchg
lret
mov
imul
cmpsl
jnp
adc
fistpll
cmp
cli
mov
mov
out
cmp
notl
out
xor
rorb
out
push
fsts
pusha
lret
xlat
xchg
push
aad
fucomip
xorl
ret
mov
xchg
loope
test
pop
inc
dec
test
mov
pushf
std
movsb
pusha
jp
push
pop
sub
mov
xor
add
fstpl
sbb
leave
pop
sub
jno
cmp
cmp
ret
cli
out
mov
fistl
loope
aas
in
adc
push
test
ds
rcrl
sub
ljmp
dec
fwait
sahf
fcmovnb
clc
out
jecxz
rclb
xor
lahf
cmp
cmp
int3
push
ret
incl
mov
xor
mov
cmp
fxch
in
cmp
sbb
pop
dec
bound
mov
xlat
inc
aad
lea
sbb
mov
cwtl
loop
or
outsl
xor
sub
xlat
fisttpll
mov
push
inc
jnp
js
ljmp
pop
sahf
ljmp
fidivrl
mov
lret
test
pop
in
cwtl
and
ljmp
jae
pop
dec
je
adc
mov
mov
cs
xor
xchg
ret
sarl
xlat
test
jne
jge
sbb
adc
ds
pop
ljmp
insb
dec
add
loop
mov
bound
enter
jns
push
cmp
inc
sahf
ss
and
test
repz
popf
xchg
ficomps
xchg
cmp
push
mov
dec
mov
xchg
xor
outsl
inc
push
loope
out
pusha
inc
pop
pop
push
sbbb
iret
push
cmp
inc
push
clc
push
adc
repz
lea
jge
cmpsl
pushf
in
imul
fsubs
mov
mov
shll
dec
cltd
push
mov
cli
fsubr
test
les
aas
cmp
fbld
lcall
and
imul
aas
mov
mov
dec
xchg
pop
arpl
ret
cs
leave
sti
push
aam
stc
push
sbb
add
pop
cld
dec
mov
and
sbb
inc
clc
jmp
adc
sub
inc
pop
push
frstor
mov
loope
push
loop
fbstp
addr16
ffreep
shrb
gs
xchg
scas
mov
add
outsb
dec
out
ss
data16
xor
nop
xchg
sti
add
lahf
adc
pushf
pop
mov
add
sub
mov
inc
ljmp
int
push
cs
fcos
or
shrl
or
scas
mov
cmpsl
lret
mov
rclb
dec
and
jg
push
sbb
or
lods
push
mov
pop
mov
sarl
jne
or
fmul
mov
outsl
cmpsl
sbb
mov
lea
imul
jb
inc
int3
add
jne
in
and
mov
int3
push
dec
bound
inc
rorl
das
jne
adc
push
xor
loop
adc
fcoms
pop
pop
pop
and
idivl
jns
repnz
xor
and
push
push
incl
imul
dec
iret
daa
jnp
adc
shr
js
test
push
jp
stos
lock
jnp
pusha
push
aaa
push
cs
fistl
shlb
fdivrp
sub
in
loopne
aas
in
cmp
test
aas
loope
inc
push
andl
fstp
cs
out
fdivrp
fdivrl
aad
xor
insl
jge
mov
je
xor
mov
shll
mov
push
push
sbb
fldcw
lret
js
ss
dec
adc
push
mov
lock
lahf
movsb
data16
push
or
ficompl
dec
inc
jmp
or
jecxz
jnp
mov
xchg
icebp
mov
into
js
iret
cs
fnstcw
jmp
pop
mov
clc
push
rcr
ss
mov
push
out
shrl
dec
idiv
test
mov
dec
fnstenv
jp
xchg
in
loopne
jae
push
inc
jno
push
push
jae
scas
call
pop
add
cmp
arpl
mov
scas
in
xchg
repnz
sub
push
or
mov
push
mov
cmc
sbb
adc
jb
fidivrl
sub
xchg
mov
jb
mov
inc
bound
cmp
outsb
mov
rclb
adc
leave
xchg
xchg
cmp
lock
adc
mov
inc
jbe
stc
mov
incl
push
and
adc
jnp
cmpsb
cmp
sti
aam
orl
push
mov
aas
pusha
and
xor
jecxz
subb
push
xchg
pusha
fwait
jle
and
ret
ss
mov
or
pop
repz
push
sub
lret
shr
add
lods
cmc
and
popa
pop
ds
je
mov
push
aaa
or
mov
xchg
pop
push
cmpsl
gs
push
and
addr16
aad
call
mov
cld
insb
sub
xchg
sbb
ljmp
pop
addr16
sbb
mov
dec
lods
jno
xor
add
pop
cwtl
in
fldt
jno
scas
mov
xchg
push
inc
or
shl
int3
scas
jge
das
jb
imul
mov
mov
dec
sahf
mov
scas
bound
inc
arpl
xor
dec
movsb
popa
stos
inc
es
jne
in
xchg
dec
insb
or
mov
jnp
stos
pop
xchg
jne
incl
inc
lahf
pop
sbb
sbb
imul
inc
outsb
lea
dec
scas
cmp
bound
ffreep
cmpsl
fs
sbb
lods
add
sub
xchg
push
or
stc
sub
or
add
mov
mov
rcrl
insb
test
push
filds
aaa
cmp
jmp
xchg
sbb
xchg
cmp
scas
filds
ret
xchg
mov
dec
cld
dec
out
jle
xor
and
adc
inc
jmp
sub
and
das
lcall
rorl
jbe
jp
sahf
in
mov
and
mov
mov
inc
repz
push
or
nop
lcall
pop
addl
xor
cmc
loope
jbe
inc
ss
clc
mov
mov
add
mov
mov
fistl
fimuls
or
lret
mov
rclb
stos
dec
or
jg
or
sub
icebp
fcmovb
xchg
sti
mov
add
cmc
sbb
pop
pop
imulb
push
or
das
cmc
jg
lcall
movsl
jo
pop
ret
fildl
sahf
test
xor
test
insb
push
inc
adc
dec
push
imul
push
inc
ficoms
push
dec
add
bound
imulb
xor
int3
rcrb
xor
divl
arpl
push
cmp
add
sub
mov
mov
in
dec
ja
shlb
and
insl
xor
sub
mov
divb
and
xor
or
dec
test
lret
sbb
cld
std
loopne
xorb
dec
pop
pushf
inc
test
aas
and
and
cmp
or
cli
push
sub
or
dec
jno
sub
inc
or
cmp
fs
call
pop
sbbl
sahf
pushf
aam
into
dec
sbb
pusha
push
xchg
cmpsb
cmp
bound
pop
test
fwait
cwtl
sbb
and
inc
in
test
orb
jns
shlb
movsb
dec
xchg
push
sbb
xchg
hlt
push
cmp
sbb
cmpl
inc
popa
mov
and
inc
outsl
push
scas
loopne
into
pop
pop
inc
dec
movb
jg
and
mov
pop
pusha
cmp
ror
lretw
fistpll
xchg
std
popf
inc
das
pop
lds
cld
scas
add
mov
fsubl
das
imul
mov
mov
rcrl
fcos
dec
jns
jnp
ss
dec
jle
push
call
inc
sbb
mov
cwtl
in
push
pop
jp
ret
dec
jl
mov
mov
testb
sar
stos
imul
nop
sub
xor
push
lods
addb
pop
add
inc
inc
fucomp
inc
push
lock
pop
inc
out
xchg
mov
repz
dec
jno
pop
xchg
sbb
mov
sub
jne
inc
push
adc
or
out
mul
push
lock
inc
sub
adc
dec
push
into
fstp
sti
sub
dec
das
pop
or
js
arpl
fidivs
jmp
cli
push
ret
push
mov
out
jne
pop
sbb
xor
scas
adc
cwtl
xlat
mov
aad
push
sbb
jecxz
stc
adc
enter
add
jp
jno
dec
test
cmp
cld
pushw
pop
popl
sub
cmp
mov
jp
imul
adc
in
add
xchg
loope
in
insl
test
xor
adc
cmp
push
mov
fstpt
inc
hlt
mov
jno
mov
lahf
pop
test
stos
loopne
outsb
inc
xor
sbb
or
push
mov
dec
xchg
mov
stos
or
enter
mov
and
sub
lcall
orb
mov
and
icebp
testl
je
add
aaa
push
mov
cwtl
jecxz
dec
ljmp
repnz
add
das
aaa
jl
pop
frstor
das
jecxz
mov
push
dec
jmp
outsb
bound
cmp
nop
aaa
push
push
inc
cmp
fistl
jne
sub
dec
iret
popf
sbb
in
mov
push
out
mov
fiadds
fmull
lods
push
pop
lret
into
xchg
jl
inc
mov
pop
adc
arpl
mov
lea
jecxz
inc
leave
cmp
jae
inc
dec
inc
pop
stc
aam
movsb
pop
sub
or
rclb
and
mov
xchg
cld
push
je
das
pop
dec
xacquire
mov
mov
add
sarb
dec
mov
sarb
xchg
arpl
mov
add
xchg
ja
in
jecxz
xchg
mov
cmc
dec
mov
adc
rep
sub
inc
or
test
add
inc
cmp
pop
mov
add
xchg
les
push
mov
insl
fstps
das
push
enter
fcmovb
bound
xor
push
mov
jae
xor
dec
icebp
cmp
in
sub
arpl
das
adc
cmp
call
mov
or
push
pop
push
mov
insb
xchg
shlb
sub
fcomps
gs
sahf
xchg
fbstp
insb
stos
inc
cwtl
scas
dec
mov
adc
scas
mov
dec
mov
xchg
push
insl
insl
inc
pop
out
jns
std
nop
dec
pop
jnp
cs
in
mov
cmp
push
add
pop
add
pop
xchg
jbe
in
lock
xor
xchg
add
sub
xchg
testb
insb
or
imul
mov
andl
cmp
pmaddwd
sarb
sarb
inc
idiv
and
decl
popa
das
pop
lret
sbb
daa
aam
idivb
test
mov
rclb
xchg
pop
add
and
jle
push
jmp
out
scas
insl
lea
lcall
cmp
sarl
jmp
les
ret
mov
insl
xor
out
icebp
test
mov
in
and
push
cmp
xor
ja
mov
outsb
add
sbb
dec
fwait
rcrl
pop
cld
dec
sbb
int3
sbb
fs
pop
dec
mov
filds
enter
or
jmp
pop
enter
or
jne
lea
dec
adc
xchg
mov
push
adc
int3
xchg
call
dec
iret
mov
aaa
les
push
push
daa
inc
test
inc
in
icebp
adc
ja
jg
adc
cwtl
pop
xor
pop
iret
push
dec
pop
cmp
sbb
in
sahf
rcll
into
subl
push
lods
bound
add
xchg
jg
imul
mov
add
test
test
xchg
lret
xchg
insb
pop
dec
cmc
pop
xorl
addr16
rcll
sti
dec
pop
mov
xchg
pop
dec
int
pop
sbb
cmp
iret
jp
rcr
ds
cmp
ret
mov
cmp
cmc
dec
setno
pop
sub
inc
test
fld1
pop
movsl
sub
cmp
pop
dec
pop
mov
sub
std
xor
cli
or
xchg
or
rcrl
shl
scas
js
cltd
rolb
call
fistps
iret
inc
dec
out
cmp
rcrl
mov
push
jge
pop
inc
bound
movb
ds
push
loope
ds
push
jo
jl
lret
mov
mov
or
push
test
jno
jg
sub
jne
jecxz
filds
fisttpl
js
mov
sub
enter
xor
rcll
lea
pop
dec
xchg
pop
mov
into
loop
out
lahf
xchg
push
je
iret
mov
mov
jne
cmp
je
mov
mov
mov
lock
pop
inc
lcall
test
inc
pop
bound
and
sarl
adc
mov
sub
xor
hlt
int
xlat
dec
enter
jmp
xlat
push
sti
lret
pop
sub
sarl
pop
mov
add
out
test
jno
pop
xor
call
mov
lea
cwtl
icebp
and
adc
imul
cmpsb
or
dec
adc
and
or
push
xor
add
mov
pop
cmp
or
cltd
daa
mov
mov
int
stc
into
std
xor
mov
lods
push
vmread
pop
lock
mov
insl
jmp
nop
ss
cmc
cwtl
pop
into
pop
imul
or
xor
sub
out
clc
imul
lock
sbb
xchg
outsl
jle
movsl
shlb
es
and
loope
loopne
cltd
jmp
pop
sub
sub
xchg
xlat
dec
les
sbb
and
jae
mov
mov
call
mov
mov
adc
fnsave
imul
push
test
fcomps
and
sub
add
sbb
push
mov
jp
add
cmp
addl
cmp
sbb
xor
cwtl
dec
ror
repz
add
mov
jne
inc
dec
in
inc
xor
dec
add
jno
lcall
pushl
fwait
push
sahf
movsl
test
shrl
insb
and
sbb
fbstp
sub
inc
jecxz
sub
mov
lcall
lahf
xchg
jle
mov
loopne
mov
hlt
fdivrp
inc
push
xor
xchg
cmp
dec
jne
push
adc
inc
adc
xchg
add
mov
xchg
xchg
push
and
inc
xlat
mov
xor
inc
inc
adc
test
cltd
dec
jbe
stos
mov
dec
cmc
jo
jbe
and
ret
fdivs
or
mov
cmp
cmp
aaa
jno
call
mov
push
outsb
jno
jb
fdivl
mov
xor
add
cli
mov
dec
push
jg
pop
inc
mov
jl
or
xorb
dec
add
jae
mov
mov
mov
push
sbb
jmp
rcrb
scas
ret
jp
push
mov
aas
icebp
shrl
sub
aas
xor
push
inc
or
mov
nop
xorb
fsts
addr16
mov
jmp
xor
ficoml
push
das
and
adc
dec
int
jge
sbb
insl
test
iret
mov
stos
pop
scas
inc
mov
mov
std
arpl
xchg
add
add
inc
outsb
data16
fsubrl
daa
je
cs
mov
test
mov
xchg
mov
mov
xor
out
cmpsl
push
sti
outsl
push
jb
stc
adc
mov
adc
mov
mov
clc
xor
push
mov
add
mov
xor
movsb
pop
pop
iret
pop
ja
aad
cmp
icebp
mov
repnz
jno
mov
mov
addr16
and
add
addr16
std
aam
gs
or
sub
mov
shr
lret
mov
cmpsl
jle
call
pop
outsl
mov
add
cmp
mov
loop
pop
or
out
incl
mov
mov
xchg
pop
mov
lret
mov
cmp
jle
mov
push
pop
test
jp
or
dec
mov
xchg
push
push
or
stc
xchg
pop
mov
push
inc
mov
lcall
lea
xchg
outsb
and
jae
mov
fidivrl
ljmp
xchg
push
ret
xchg
std
enter
push
add
mov
add
mov
push
dec
jo
rclb
fsubl
xchg
push
and
mov
rcrb
cli
in
subl
sub
cmpsb
push
rol
pop
addr16
fildll
pinsrw
fistpl
push
xlat
fcoms
in
mull
fsubl
mov
xchg
popa
fwait
insl
dec
out
dec
scas
xorl
push
mov
rcll
inc
mov
mov
dec
add
xchg
nop
mov
loope
test
and
xchg
int3
mov
fistps
stos
pop
xchg
jle
shufps
ret
cmp
subb
mov
imul
xchg
xor
in
sarl
test
sub
rcrb
xchg
fisubl
fs
pop
ror
dec
or
push
xchg
popf
imul
lahf
ret
insl
push
shlb
mov
out
out
mov
xchg
pop
push
hlt
xchg
dec
hlt
stos
pusha
fiadds
movsl
orb
enter
jbe
gs
and
movsl
loop
jns
sbb
fsubrl
gs
les
and
ss
or
jbe
cmp
cmp
xor
xchg
push
pop
mov
jle
jmp
add
int
xchg
sub
loopne
xor
or
js
xchg
inc
sbb
mov
xchg
enter
sbb
mov
fidivs
loope
xchg
jg
sub
out
and
xchg
mov
or
sub
mov
aaa
aad
dec
dec
dec
je
enter
xor
ret
enter
stos
outsl
cwtl
xchg
mov
xchg
sbbl
shl
rcrb
mov
loopne
jne
sbb
cli
rclb
das
inc
sub
add
sub
insb
jnp
out
lret
mov
imul
xchg
lcall
and
sbb
mov
in
pop
insb
iret
inc
mov
adc
dec
clc
rorl
movsb
pusha
xor
leave
push
call
call
or
xchg
int3
or
lods
daa
mov
fmul
test
das
dec
xlat
sbb
insb
jnp
add
or
push
xchg
lret
outsb
xlat
test
mov
mov
mov
add
sbb
std
adc
mov
cwtl
pop
enter
mov
adc
hlt
mov
dec
icebp
jno
repz
rcll
mov
insb
std
loope
aad
fwait
mov
jno
ja
dec
push
and
ret
sbb
inc
pop
and
sbb
pop
adc
lahf
jno
dec
mov
lea
mov
push
hlt
mov
pop
mov
sbb
and
lods
mov
xchg
stos
push
dec
and
sarb
sarl
test
fucom
gs
sbb
mov
mov
push
in
xchg
push
sti
pop
divb
fldenv
sbb
js
pushf
push
shlb
fsubs
jg
dec
jge
push
sarl
les
mov
add
pop
or
enter
mov
xchg
and
imull
lcall
hlt
in
in
push
or
xchg
sbb
and
add
mov
jle
mov
in
dec
sbb
xchg
xchg
cltd
mov
and
push
xlat
jo
int
xchg
inc
adc
mov
inc
sbb
test
imul
dec
iret
push
jmp
pop
push
rol
clc
mov
pop
cmp
ljmp
cmp
dec
xor
in
aad
push
push
pusha
jnp
sbb
add
cmp
push
adc
dec
decb
stos
pop
xor
lock
mov
add
mov
adc
imul
mov
sbb
and
aad
icebp
imul
dec
push
mov
fdiv
push
and
sahf
push
jne
push
decb
mov
inc
fldcw
mov
fdivrp
mov
leave
mov
sub
arpl
pop
std
leave
sub
mov
add
loope
in
loope
sub
das
and
inc
add
decb
dec
bnd
lret
mov
add
addb
pop
out
rorl
pusha
add
sub
add
test
lea
mov
ret
push
cmpsb
xchg
sarl
fadds
push
sub
jae
pop
push
mov
in
push
pop
push
jne
pop
pop
xor
sbb
cmp
jb
pop
testb
rcrl
xorb
cmp
push
cmc
enter
cmp
mov
std
rclb
in
xor
pop
insb
fldenv
sahf
mov
aam
out
mov
js
test
and
ja
outsl
mov
es
aam
xchg
or
ret
mov
lret
mov
cmc
scas
test
push
icebp
mov
icebp
mov
pop
lds
roll
aam
cmp
push
mov
aad
loopne
leave
out
pop
movsl
xor
ja
or
pusha
lods
jne
and
dec
mov
dec
gs
or
inc
jo
pushf
loope
and
imul
insb
mov
loope
repnz
in
xchg
leave
rcrb
arpl
jecxz
outsb
sbb
stc
jbe
push
aaa
or
xchg
stc
dec
subb
mov
les
xor
das
xor
in
lret
shrb
mov
push
js
leave
pop
shl
ljmp
push
inc
mov
lahf
pop
mov
push
negb
sbb
push
mov
cmc
dec
sahf
popa
and
enter
cld
add
cmp
jecxz
and
jle
clc
imul
add
icebp
cs
leave
sarl
xorb
and
addr16
aas
cmpsl
pusha
ja
cmp
jne
enter
xchg
je
aad
push
pop
addr16
push
inc
test
xchg
js
sbb
scas
inc
rcrl
repnz
pop
lock
hlt
rcrl
inc
in
icebp
test
insb
mov
and
repz
mov
push
or
jae
adc
sub
xchg
loop
bound
sarl
aas
push
fistpll
push
add
movsb
lret
xchg
pop
clc
fcmovnbe
push
std
jbe
dec
bound
fdivrs
push
arpl
int
sub
and
push
inc
sbb
pop
fsts
in
pop
les
inc
add
mov
testl
cmc
push
push
enter
mov
mov
imul
hlt
ror
pop
fs
rcr
inc
inc
cmp
inc
sbb
cli
and
mov
push
pop
mov
mov
inc
fcmove
xchg
ret
xchg
pop
jle
dec
clc
adc
dec
cmp
sub
mov
ja
xor
xchg
mov
data16
decl
cltd
stos
sar
repnz
mov
cmpsb
cmp
arpl
popa
std
jp
pop
into
inc
loope
mov
movsb
pop
push
call
sbb
add
mov
mov
or
xchg
fdivl
test
daa
addb
mov
sahf
push
roll
nop
fsts
xchg
xchg
icebp
popf
jne
jae
lret
cltd
cmpsl
out
test
xchg
sub
sbb
jmp
pusha
cmpsl
mov
fisubrs
ficoml
mov
xor
jo
orb
sbb
and
ss
jne
int
add
pop
pop
mov
pop
cmp
popf
dec
rclb
fsubrl
insl
cld
adc
pop
sub
loop
lods
movsl
rolb
cwtl
and
sbb
loope
lret
xor
adcl
cmp
es
cmp
or
out
cmc
pusha
cmpsl
push
lds
fildl
cmc
jge
cmc
jb
adc
xor
sub
das
pushf
inc
sti
bound
mov
dec
movsb
imul
mov
mov
mov
pop
lods
sbb
fmul
scas
add
adc
xchg
or
sub
out
icebp
dec
ja
test
arpl
cli
push
jecxz
dec
inc
or
scas
sbb
sub
jecxz
fwait
int3
pop
cmp
and
enter
sub
mov
data16
in
bound
bound
mov
popf
shl
jbe
and
fcmovnb
mov
lods
mov
sbb
subb
in
push
je
aam
xchg
daa
fwait
call
jmp
adcl
mov
stos
mov
jecxz
cmc
xchg
clc
out
in
ds
cwtl
stos
adc
dec
filds
rclb
or
mov
adc
popa
lret
mov
ficoml
jne
gs
stos
adc
cmp
mov
mov
xchg
xchg
jno
or
jp
sub
sub
shlb
insl
mov
pop
clc
jp
add
scas
jno
paddq
in
adc
pop
jbe
mov
xchg
jecxz
es
and
mov
mov
cmc
inc
cli
cld
dec
inc
dec
sub
insl
pop
popf
fs
and
sub
and
mov
test
insb
test
aaa
dec
stos
pop
push
loope
or
lds
xor
lds
mov
and
jb
sti
push
iret
jp
jle
sahf
sub
ja
fwait
adc
pop
xlat
bound
pop
sbb
iret
fstp
int3
ret
sbb
sbb
gs
push
aam
mov
or
imul
push
push
testb
dec
movsl
cwtl
lods
dec
xchg
mov
enter
stos
pop
and
popa
pushf
insb
aas
dec
pop
lcall
loope
arpl
outsb
dec
push
jle
cs
jle
and
outsl
lahf
out
shl
lock
or
mov
pusha
and
popa
jbe
outsb
cmp
and
xchg
xchg
int3
mov
test
lock
aam
mov
push
in
arpl
jo
leave
xor
adc
mov
fildl
notl
mov
cli
in
inc
pop
mov
xchg
adc
aaa
or
sarb
insb
jecxz
dec
test
mov
push
nop
cmpsl
pop
mulps
add
into
inc
adc
cmp
and
shr
xlat
in
adc
mov
sbb
addl
stos
jb
adc
dec
xchg
in
push
mov
or
sub
xchg
lcall
mov
pop
add
stc
cmp
mov
mull
lods
rcrl
jbe
stc
lea
in
mov
push
movsl
push
push
divb
pop
mov
fnstenv
sbb
stos
in
stos
insl
mov
lods
mov
cld
add
pop
mov
imul
ret
repz
and
popf
adc
mov
push
mov
sub
inc
sahf
repz
imul
cmpsl
lahf
push
fnsave
ds
dec
jae
jp
xchg
xor
test
test
hlt
lret
fildll
scas
in
inc
loope
xor
pop
mov
movsb
js
popa
sti
sub
cmp
popa
push
pop
inc
imul
or
pop
push
fisubs
jb
sub
cmpl
shlb
dec
call
decl
add
aaa
out
imul
insl
jle
and
clc
sub
mov
cmp
inc
adc
pop
mov
sbbb
loope
cwtl
adc
aaa
and
jnp
jecxz
lahf
test
pop
push
in
pop
stos
int3
push
aaa
push
inc
cmp
loopne
pop
jl
imul
pop
push
inc
sbb
mov
bound
sti
cmp
loopne
rorb
push
lock
pop
pop
jns
inc
adc
jg
cmp
scas
adc
dec
insl
mov
push
xor
push
outsb
nop
dec
fisubl
xor
xchg
dec
cwtl
je
lock
pushf
sbb
inc
dec
sbb
fnsave
lahf
dec
or
ja
lea
pop
es
sub
cmpsb
push
sub
inc
xor
dec
adc
ss
jp
cmpsl
dec
enter
sbb
push
xchg
jmp
cmp
push
pop
imul
gs
add
insl
loopne
cmp
in
dec
stc
add
lret
std
cmp
clc
jnp
inc
dec
inc
mov
repnz
push
xor
inc
or
mov
pop
sarb
insl
jo
pop
ss
mov
xchg
cmp
jae
dec
sub
imul
push
daa
or
dec
adc
mov
sub
fidivrs
jmp
lods
mov
leave
into
mov
push
jne
incb
cmp
aas
xchg
jno
xchg
lahf
fistl
jne
xor
addr16
stc
scas
push
aad
pop
jno
aas
push
push
dec
mov
test
aad
out
sub
filds
jno
loop
js
mov
adc
movsl
int
inc
or
andb
cld
inc
and
push
ret
xchg
notl
push
sbb
data16
hlt
fcompl
jge
fs
push
or
xchg
into
sub
dec
xchg
adc
pop
ret
in
sbb
pop
in
sub
aas
call
ja
mov
repnz
fs
es
fwait
adc
dec
pop
lret
testl
into
jl
dec
fnstcw
push
push
test
clc
pop
pop
mov
dec
lahf
add
leave
std
add
pop
sub
mov
imul
xor
insb
les
push
pop
pop
or
mov
sbb
insl
jae
add
or
adc
mov
lods
jge
dec
fs
cli
pusha
lds
stc
fidivs
jmp
or
mov
mov
cli
ljmp
mov
sbb
mov
mov
push
out
repz
hlt
and
jns
pop
test
and
mov
jbe
jo
aas
adcl
pop
mov
lcall
jb
pop
push
out
and
mov
pop
mov
push
xchg
std
jecxz
outsb
je
stc
inc
and
jb
gs
ds
call
bound
test
mov
mov
adc
in
sub
mov
adc
cmc
sub
xor
ret
jg
in
addr16
int3
aad
test
out
sbb
mov
lret
add
pop
call
fdivl
jo
fcoms
dec
jge
dec
sahf
add
cmp
inc
push
mov
sub
loop
movsb
xchg
int3
xor
lods
mov
in
scas
pop
nop
jae
jmp
inc
notl
xchg
mov
pop
outsb
jg
subl
ret
aad
into
stos
mov
xor
ja
dec
mov
aam
test
daa
xor
dec
or
pusha
clc
std
lock
into
add
popa
rcrb
push
fisubl
out
lcall
sub
dec
out
add
cld
mov
xchg
cmp
bound
sub
and
sbb
push
sub
out
test
or
pop
cmpsl
mov
pop
orb
out
test
ss
popf
in
adc
sbb
mov
mov
fwait
daa
aam
test
popf
movsl
mov
jmp
jnp
xor
adc
jg
mov
sti
or
xchg
adc
dec
test
mov
jo
xlat
mov
xchg
shr
or
popa
ret
mov
imul
sub
xor
leave
sbb
shrl
add
mov
pop
add
pop
enter
fs
cmpb
cwtl
jne
mov
clc
stos
xchg
fisttps
aas
popf
in
push
or
je
mov
ja
sbb
pop
imul
aaa
cmp
xchg
pop
aam
orl
movsl
sub
or
push
dec
xchg
mulb
std
sub
lahf
pop
out
sub
insb
in
jle
scas
imul
xor
les
cmp
sbb
lret
adc
movsl
adc
inc
push
xor
aad
push
mov
movsl
sbb
mov
ljmp
adc
jbe,pt
pusha
call
xchg
jo
add
push
add
add
leave
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
add
add
pusha
inc
add
jo
add
add
add
add
add
add
add
je
