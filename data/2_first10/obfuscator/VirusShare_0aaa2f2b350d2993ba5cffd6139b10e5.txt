push
call
ret
ret
inc
ja
mov
pop
cmp
rcrb
inc
cmpsb
jp
dec
xchg
stos
lea
sbb
lods
jecxz
sub
sub
jg
push
sbb
add
cltd
lret
xchg
xchg
jmp
lcall
pusha
and
movsl
std
outsl
scas
xor
adc
inc
int3
stos
push
pop
out
or
adc
pop
loop
loop
dec
subl
pop
fbstp
sarl
inc
daa
cmpsl
sub
xchg
call
mov
push
ret
aam
sbb
dec
sbbb
sti
jmp
inc
call
fisubrs
scas
movsb
jbe
xchg
add
jbe
fnstcw
xchg
jno
or
push
js
xchg
pop
lock
push
jo
loop
pop
mov
push
js
adc
lds
insb
jb
ffreep
and
cwtl
aam
out
jle
out
sub
cmp
mov
xor
mov
lcall
repz
mov
shrb
jnp
cmpsl
jmp
test
aas
ret
jl
sbb
stos
xchg
fcomps
daa
fs
lods
aam
addr16
adc
pop
aam
insl
jge
adc
imul
out
addr16
sbb
fnsave
cmp
les
dec
sub
cmpsb
mov
out
jo
jp
cmpsb
int3
sub
sub
addb
xchg
roll
inc
xor
jbe
mov
int
or
sbb
loop
xor
mov
xor
movsb
repz
mov
fcomps
fdivrl
and
mov
loopne,pn
js
outsl
test
int
int3
adc
lahf
imul
mov
mov
and
cmp
add
jmp
lods
push
leave
mov
ret
ret
popf
sbbl
sub
movsl
and
mov
psrlw
cld
mov
inc
in
dec
movsl
and
test
jo
cmp
mov
push
pop
in
in
sub
xor
imul
lock
xchg
mov
in
inc
test
xchg
insb
jno
es
int
popl
rorb
lods
mov
mov
insl
pop
sbb
lret
and
testl
pushf
bnd
pop
jns,pt
mov
push
shl
ds
fisubl
push
lcall
fucomp
and
stc
or
sub
inc
push
push
add
mov
cs
in
movsl
and
imul
adc
repnz
add
test
lret
inc
negb
inc
testl
mov
sub
in
loope
mov
and
jl
repz
jbe
cmp
lea
fsubrl
fisubl
push
inc
push
cmp
push
test
lods
aaa
hlt
mov
push
add
pop
adc
test
sub
cmp
pop
fisttpl
cmp
add
and
sbb
jno
flds
cltd
and
push
mov
mov
pop
cmpsb
mov
jecxz
jb
dec
add
mov
xchg
xchg
mov
xchg
dec
sub
out
fs
addr16
mov
sub
mov
fildll
stc
stos
mov
cmpsl
ss
insb
cmp
jmp
loope
repz
push
andl
testb
js
aad
mov
jae
loop
xor
adc
in
repnz
int3
mov
mov
sbb
ja
hlt
and
jl
pop
sub
push
xchg
add
sbb
xor
data16
call
mov
xchg
adc
addps
jno
pop
leave
xlat
pop
out
jecxz
out
sarb
or
xchg
push
std
jp
push
pusha
ret
je
lods
mov
cvtpi2ps
out
add
dec
mov
xchg
inc
cmc
repnz
jo
push
fsubs
ret
repz
notb
leave
movsl
mov
repnz
add
or
lcall
xor
clc
mov
cmc
push
mov
dec
sti
adc
hlt
lock
je
scas
cmp
jle
ss
pushf
in
ds
out
sbb
xchg
mov
lds
insb
pop
xor
scas
jmp
sub
inc
nop
push
imul
push
mov
int3
mov
xchg
bnd
sbb
xchg
and
lods
xchg
mov
mov
loop
ret
dec
push
daa
mov
xor
ret
push
dec
fldt
in
jno
aaa
jg
clc
cmp
lret
fsubl
or
loopne
xchg
stos
pextrw
rorl
lea
push
jo
lds
mov
adc
or
aam
lods
xor
xor
or
mov
fwait
push
jecxz
imul
pop
aad
insb
lds
rorb
add
outsl
int3
sbb
ret
or
sbb
mov
sbb
sbb
inc
pop
es
sarb
jne
dec
dec
lock
mov
lret
aaa
add
pushl
push
adc
pop
subb
mov
xchg
lret
int
into
bound
mov
xorl
jno
ret
add
mov
shlb
cltd
xchg
ljmp
mov
sub
daa
pusha
sub
repz
sbb
pushf
jecxz
ror
ret
call
rcr
sbb
in
mov
ficomps
mov
hlt
outsl
and
cmp
repz
add
add
and
pop
jle
scas
mov
test
leave
push
push
rol
and
lahf
pop
mov
jl
sub
xor
xor
push
mov
mov
scas
incl
pushf
inc
int3
xchg
inc
in
push
mov
jb
xchg
pop
jbe
popf
and
push
mov
inc
rcpps
cmpsb
fsubrs
add
rorl
bound
rcrl
arpl
cmc
or
add
inc
pop
aaa
ret
aam
rcll
imul
cmp
dec
mov
inc
clc
pop
inc
test
filds
cmp
sub
sbb
test
inc
scas
stc
adc
jbe
push
cli
add
bound
sti
pop
movsb
mov
fstps
dec
cmp
js
test
jle
cmp
or
ret
es
das
push
inc
inc
jno
adc
and
ret
jle
es
rcr
bswap
sbb
cmpsb
or
ret
repz
cmp
jae
in
cmp
mov
icebp
outsl
cmpsb
inc
jnp
fisubl
outsl
push
outsl
fsubs
mov
adc
clc
push
cmp
mov
int3
cs
fistpl
stc
outsl
movsl
mov
iret
inc
fs
cmpsl
bound
stc
aas
enter
push
lret
lret
inc
cmpsl
push
or
cltd
aam
test
dec
add
mov
mov
adc
ljmp
imul
mov
icebp
loop
sbb
and
mov
sub
dec
rcrb
test
cmc
rcrl
and
add
cmp
and
or
test
adc
push
ds
je
push
test
nop
into
inc
clc
ja
cmpb
push
sub
rcr
add
ljmp
lds
xor
outsb
pop
sub
popf
subl
fwait
mov
pop
jmp
xor
mov
xchg
mov
insb
mulb
iret
pop
aaa
xchg
or
jmp
scas
dec
psrlw
mov
pop
or
inc
fildl
pop
jnp
outsl
shll
xor
and
jo
sub
xlat
or
cmp
mov
in
sub
xchg
adc
fldcw
mov
enter
imul
nop
sub
sti
leave
and
adc
loopne
sbb
push
xchg
mov
push
loope
inc
add
mov
push
ds
clc
xor
inc
mov
push
sub
xchg
mov
sbbb
or
push
mov
cmp
jnp
mov
outsl
sarl
pop
cmc
pop
push
pop
mov
mov
cmc
jns
mov
std
push
nop
mov
push
pop
hlt
xor
mov
pop
xchg
inc
data16
js
pop
aam
or
sbb
lods
xor
push
addl
xchg
in
xchg
add
cmovg
pop
fisubrs
in
cltd
shll
xor
les
pop
sbb
pop
fadd
or
loope
movsb
lret
and
or
pop
aaa
push
mov
sub
sti
xchg
push
mov
mov
mov
repz
jbe
pop
fidivs
sbb
xor
push
push
cmp
jb
jnp
jno
mov
inc
js
aaa
and
and
nop
aad
fistpll
imull
es
fsubrl
enter
add
test
cmp
pop
inc
xchg
cmpsl
lods
es
sub
stos
add
cmp
and
xchg
std
jle
gs
adc
push
adc
ljmp
inc
and
mov
push
inc
daa
sub
popf
push
les
js
popa
enter
xchg
fbstp
and
es
test
in
lret
ret
nop
int
es
je
or
aad
out
dec
pop
ljmp
inc
mov
daa
scas
aad
jge
cmp
xor
test
stos
jecxz
add
scas
xor
out
sub
or
adc
xor
dec
add
jns
int3
or
cli
leave
les
ss
inc
int
xor
xor
add
mov
aas
imul
mov
pop
pop
fistpll
dec
push
cmp
ret
addl
adc
shl
fsubr
stos
cmpsl
in
lret
mov
mov
adc
pop
lcall
inc
movsl
cwtl
jge
jmp
insl
dec
dec
loopne
mov
xchg
outsb
out
sbb
xor
jo
xchg
je
sarb
fistps
mov
adc
dec
or
push
dec
cmp
test
rcrb
sahf
call
fwait
sbb
or
pusha
das
and
and
dec
or
leave
ljmp
fisubrl
push
dec
sbb
cmp
push
pop
adc
inc
add
add
push
aas
jne,pt
test
push
and
arpl
pop
cli
adc
inc
incb
pusha
les
into
outsb
hlt
testb
mov
add
sub
add
xchg
add
xor
inc
sarl
repz
push
ficompl
fldl
cmp
push
popf
mov
les
jmp
in
sub
xor
icebp
cwtl
jae
jns
or
rorb
jne
inc
mov
test
lock
add
push
dec
rolb
outsl
pusha
jge
arpl
xchg
int3
fs
push
push
mov
adc
bound
pop
les
nop
adc
notb
push
pop
push
inc
lods
mov
or
adc
push
jecxz
mov
movsl
adc
loopne
es
mov
jl
ror
push
add
mov
adc
fwait
jg
test
fdivrl
lods
xchg
ss
jp
pop
pushf
pushf
out
xorb
icebp
fimull
bnd
je
ret
mov
mov
clc
icebp
add
push
cmp
pop
cmp
mov
stos
rclb
mov
jnp
out
repz
inc
sti
gs
push
enter
int3
hlt
adc
cmpsb
loope
sub
stos
cwtl
sbb
ret
xchg
dec
mov
stos
sbb
sbb
lods
movsl
xchg
xchg
xchg
sti
dec
or
cmp
mov
jb
incb
je
sbb
cmc
lahf
sar
inc
sub
lea
movsb
fwait
inc
movsb
rol
adc
fcmovnu
or
aad
jecxz
cli
popa
iret
inc
mov
push
sti
outsb
lret
xchg
dec
cmpsb
out
fstpt
enter
stos
int3
push
cmpb
ret
sub
adc
push
or
jp
xlat
mov
jmp
jnp
fiadds
rclb
mov
aas
js
add
bound
popa
dec
lds
cmp
jp
popa
cmp
imul
int
test
aaa
adc
xchg
cmp
push
mov
fbld
daa
in
into
fstpl
dec
mov
fsts
jecxz
push
out
sar
pop
fimuls
push
push
inc
rcr
and
out
mov
mov
inc
lret
cmp
sub
sar
inc
xchg
imul
mov
mov
cmp
mov
test
lahf
xor
dec
cmp
jecxz
mov
mov
xchg
dec
test
push
and
vpcmpeqd
push
adc
arpl
scas
jb
sbb
sbb
xchg
jns
dec
push
mov
mov
lea
inc
scas
outsb
daa
mov
pop
adc
inc
outsl
cli
and
dec
das
xor
pop
scas
pop
pop
pop
push
dec
pop
cmp
movsl
pop
sbb
aaa
mov
xchg
out
cmp
or
out
dec
adc
xor
push
xor
icebp
btcl
dec
hlt
pop
sti
mov
fcmovbe
dec
mov
push
pop
pavgw
int3
jb
jecxz
xchg
mov
push
jns
divl
adc
das
cmc
adc
test
nop
cwtl
jg
fadds
cmp
nop
in
pop
cmpsl
mov
ret
push
jne
mov
mov
nop
push
pop
popl
mov
ss
sub
sbb
add
adc
stc
mov
out
xchg
orb
es
or
dec
icebp
movsl
xor
mov
pop
sarl
inc
test
lods
mov
pop
push
in
xchg
bsf
inc
cmpsb
jno
data16
lock
sbb
sbb
xchg
pop
repz
sub
xor
mov
imul
movsb
mov
jecxz
lds
ret
adc
mov
inc
mov
cmp
pop
jle
leave
repnz
js
sub
fsubrl
dec
push
sub
lahf
mov
pop
mov
mov
sbb
mov
xor
push
push
pop
cwtl
and
ret
out
jl
mov
test
test
mov
xchg
adc
dec
in
sbb
xchg
sarb
pop
aas
aad
jns
inc
xchg
sub
jle
ds
add
adc
add
ljmp
fisubl
fcomp
mov
xchg
lock
pop
out
pop
jl
lds
or
sub
shll
test
cmpsb
mov
clc
call
xchg
cmpsb
mov
js
ret
test
dec
pop
push
sub
push
xor
and
iret
fstps
mov
jns
pop
cli
adc
lods
inc
enter
mov
outsl
insb
pop
pop
sub
jmp
mov
rolb
sbb
shll
cmpb
frstpm(287
int3
xchg
cmp
addr16
or
mov
loopne
mov
mov
ja
pop
add
ja
adc
adc
push
andl
and
sub
mov
mov
test
dec
mov
sbb
sub
mov
mov
dec
loopne
pop
fmuls
repnz
xor
movl
pusha
mov
pusha
cli
inc
and
jne
iret
cmc
mov
int3
pushf
sub
mov
mov
xchg
leave
cmc
xor
pop
inc
xor
inc
stos
insb
mov
lods
ja
jmp
jno
xor
xchg
dec
loopne
xor
xor
push
mov
lea
cmp
add
or
cmp
dec
mov
mov
xchg
push
add
cwtl
sub
incb
jmp
insb
shrb
sbb
negb
pop
leave
mov
jmp
jno
test
or
in
lcall
inc
jb
cltd
push
jo
cld
shlb
and
pop
outsb
jle
push
mov
in
lcall
and
mov
xchg
das
outsl
scas
pop
sub
pop
mov
bound
and
sahf
inc
xor
push
push
jp
scas
negl
cmp
xchg
rcrl
movsb
jle
cmp
mov
lods
push
push
sti
cmpsl
and
out
mov
nop
pusha
push
sub
jmp
mov
cmp
cmp
pop
mov
pop
hlt
enter
dec
insl
jno
cmp
insb
lret
scas
adc
out
outsl
ja
jno
jae
dec
xchg
int3
aaa
mov
in
jae
fwait
xor
movsl
testb
mov
xchg
inc
add
mov
sub
ret
loopne
inc
imul
xor
lcall
ja
pop
sbb
jle
push
loopne
out
outsl
add
loopne
jns
inc
lret
inc
std
dec
dec
sbb
push
jmp
pslld
nopl
xor
ror
ss
add
cs
sub
into
dec
in
scas
rcll
stc
sub
shrb
and
add
mov
bound
aaa
xor
mov
or
aam
push
es
inc
leave
xchg
adc
sbb
insl
cmp
xchg
xor
flds
andl
sub
jg
dec
sbb
jbe
mov
pop
inc
or
push
mov
scas
ret
int
add
jge
out
mov
and
xor
cmp
repnz
mov
xchg
icebp
mov
jae
jne
xor
mov
sti
dec
mov
int3
mov
xor
sub
lods
out
lds
dec
gs
sbb
mov
sub
movsb
hlt
jge
jmp
xor
bound
or
jbe
sti
xchg
std
xchg
imul
loop
inc
mov
loop
dec
iret
dec
cli
inc
sub
inc
notl
test
sub
fmull
flds
xchg
leave
inc
lret
push
ror
cs
inc
mov
stos
pop
push
inc
sub
inc
sbb
xchg
gs
aam
hlt
mov
jp
call
pop
pop
dec
jno
movb
lahf
dec
xor
add
loop
es
mov
xchg
int3
mov
pop
xchg
test
pop
ret
jmp
movsb
xor
addr16
das
in
add
in
aam
inc
add
iret
sbb
addr16
xchg
cli
iret
mov
or
movsl
shrl
jne
dec
mov
push
les
pop
push
mov
cmp
pusha
dec
decb
xor
mov
pop
mov
cmp
cmp
loopne
in
mov
jg
leave
fistps
lret
jg
js
and
cmc
sub
jo
sahf
popa
xchg
mov
sahf
movl
fucomi
xchg
or
out
inc
inc
xchg
mov
mov
and
jbe
stc
push
jnp
hlt
dec
mov
mov
mov
adc
std
icebp
fs
xchg
xchg
jb
sbb
xor
loopne
lahf
mov
jnp
imul
push
pop
mov
cli
imul
mov
fistps
lahf
mov
pop
mov
loop
rcrl
push
cmp
jmp
paddd
aaa
mov
inc
pop
xlat
cmpsb
ficoml
rol
mov
lcall
insl
in
jp
fs
lea
mov
cmp
add
movsb
jmp
iret
mov
xor
push
or
push
sbb
cmp
mull
je
adc
xor
insl
je
ret
sarl
jno
sub
xchg
ror
xor
push
movb
in
jp
test
sub
fwait
in
inc
sbb
xor
xor
add
xor
cld
xorl
lods
add
orl
jecxz
mov
jp
and
jb
push
cmp
dec
mov
add
dec
idivl
cmp
push
lahf
sub
xchg
fisttpl
xchg
jle
lock
mov
dec
mov
scas
dec
je
jne
imul
mov
cmp
mov
push
xlat
cmp
outsl
fstl
jmp
ds
jae
pop
cmp
mov
ds
fcomip
lea
test
xor
fninit
lods
ss
cmp
int3
sbb
mov
pop
dec
xlat
and
cmpsl
nop
aad
pop
xor
lcall
jns
xor
fdivrp
lret
inc
js
out
sbb
push
out
divb
or
jl
je
es
hlt
mov
ds
cwtl
push
or
into
push
adc
fucomip
cwtl
jns
cmpsb
cmpsl
lods
lods
subl
clc
mov
fsts
pop
add
sub
stos
pop
xchg
jmp
dec
pop
mov
call
xor
xchg
hlt
inc
dec
je
mulps
pop
lret
push
pushf
insb
jb
bound
popf
mov
sub
fmull
fistl
push
rcll
loope
sub
fsubp
pop
and
add
lret
lock
enter
mov
xchg
xchg
push
push
loope
sbb
pop
mov
aad
divb
mov
ret
out
sub
and
jnp
sarl
mov
loopne
add
sbb
iret
sub
in
or
lods
jne
mov
mov
sub
mov
fld
pop
lcall
repnz
insb
fistpll
sub
subl
insb
ret
divb
xlat
push
add
push
mov
dec
lea
lods
jl
lea
fisttps
sub
pop
out
dec
mov
fdivs
fidivs
jmp
xchg
pop
outsl
pop
sahf
lahf
pop
sub
inc
rcr
cwtl
cmp
sbb
xchg
inc
loope
mov
fwait
sub
mov
push
mov
in
add
and
pop
icebp
cmpsb
inc
es
cmp
addr16
mov
out
insl
sbb
or
jae
sahf
jge
add
loopne
xor
mov
aas
leave
ss
jo
dec
push
and
or
xchg
pop
mov
lods
xor
int3
lahf
pop
push
hlt
inc
bound
test
sub
push
sbb
lods
fcompl
xchg
stc
add
sub
mov
push
test
push
je
enter
pop
jmp
lea
arpl
daa
mov
sbb
xchg
jbe
jbe
ror
das
xchg
jmp
aas
es
or
fisubrl
xchg
mov
ret
sub
jecxz
dec
pop
mov
cld
adc
xchg
sub
jae
scas
clc
out
sti
push
inc
scas
lods
fsubrs
or
in
sarb
jecxz
rcl
nop
or
mov
dec
sahf
and
pop
and
lret
mov
dec
sbb
mov
out
out
call
sarl
jnp
xor
mov
outsl
aad
sar
ljmp
icebp
dec
sahf
iret
addb
mov
js
js
mov
cmp
bnd
aam
sbb
cmp
xor
mov
jl
jg
ss
xchg
jg
cltd
sub
jmp
pop
inc
xor
or
ret
or
mov
ljmp
push
xchg
mov
xchg
dec
ss
imul
add
fidivrs
add
dec
adc
mov
mov
mov
xor
mov
jne
inc
xor
sub
adc
push
and
fwait
sbb
pusha
enter
fstl
enter
xchg
mov
xor
dec
loop
jbe
push
push
mov
push
jns
fbstp
into
jo
xchg
jg
mov
or
mov
int3
inc
sub
mov
or
mov
jns
xor
dec
adc
pop
repnz
jno
pushf
xchg
out
pop
mov
leavew
cmc
sahf
and
adc
fsubrl
push
or
cmpsl
dec
in
shrb
and
or
pop
mov
inc
in
add
fisubrs
sti
push
popa
and
jge
cmp
add
out
pop
push
fs
test
or
int
imul
mov
cwtl
mov
push
outsl
mov
mov
outsl
pushf
inc
inc
pop
out
and
xor
lea
popl
lahf
mov
inc
jo
pop
aam
or
jnp
call
mov
push
mov
mov
pop
mov
mov
push
jns
aaa
mov
push
test
call
or
ja
and
repz
xchg
push
test
jb
rol
pop
js
lahf
pop
dec
adc
push
push
mov
ljmp
stos
push
movsb
sbb
cmpsb
pop
add
or
pop
hlt
pop
jns
mov
add
pusha
xor
fwait
sub
sub
xchg
mov
xchg
out
push
sbb
pop
xor
mov
jg
repz
out
pop
sti
mov
mov
sbb
out
pusha
imul
testl
pop
mov
dec
adc
shlb
pop
dec
xchg
dec
jp
mov
mov
mov
lds
xchg
pop
pop
ss
in
loopne
inc
mov
iret
mov
mov
push
add
xor
or
push
push
push
xor
fisttpl
aam
loop
in
test
in
push
or
mov
mov
mov
and
cmp
or
mov
xchg
out
dec
xchg
sar
adc
inc
stos
pop
push
xor
pop
sub
mov
ds
mov
outsb
xor
movsb
sbb
pop
bound
mov
stos
mov
iret
push
mov
je
imul
push
xor
je
and
stc
mov
out
push
je
jno
lds
adc
pop
mov
loop
xor
and
adc
xchg
jns
mov
and
mov
mov
cltd
and
into
sti
loope
cmp
mov
and
aaa
fisubrl
pusha
cmp
mov
add
sub
xor
aad
push
mov
pop
lods
dec
popf
mov
cld
push
push
les
add
cs
xchg
jb
xor
mov
loopne
ret
loop
js
mul
incl
test
jge
inc
xor
xchg
js
popf
es
not
fcmovne
mov
imul
mov
xchg
cli
mov
shll
mov
inc
jl
enter
shl
xchg
add
jl
sub
aaa
add
rclb
and
xor
add
mov
daa
xchg
rcll
sahf
push
and
inc
jne,pt
out
cltd
jge
or
push
pop
sarb
inc
sahf
dec
outsb
push
inc
pop
mov
pusha
push
dec
pop
std
out
pushl
dec
shlb
mov
sub
shr
xlat
addr16
or
stc
scas
push
movb
addb
jnp
jmp
sub
inc
cmp
imul
mov
mov
icebp
popf
or
sahf
lods
aad
hlt
push
and
mov
ret
xor
inc
add
outsl
cli
push
mov
fcom
dec
fldt
pop
sbb
clc
cmp
xchg
sub
lret
pop
inc
aas
ficomps
cmp
addr16
inc
lds
clc
mulb
cld
xor
out
shll
int
arpl
cli
xlat
into
inc
movsl
mov
mov
and
jmp
fstl
adc
jmp
dec
leave
test
pop
mov
inc
aaa
clc
stos
jge
fistps
dec
pusha
test
cs
push
dec
inc
test
iret
ds
inc
insb
ljmp
rcll
cmc
and
es
push
sbb
les
dec
out
insb
cmp
insl
fdivrl
sbb
fcoms
dec
cld
inc
xchg
xlat
push
cmp
cmp
push
ljmp
pop
dec
inc
pop
add
pop
mov
add
jp
fimuls
mov
pop
jae
pop
pop
mov
loope
mov
add
jns
xor
jo
mov
mov
fisubrl
mov
std
call
cmp
sub
loopne
fcomip
sbb
jp
out
pop
rolb
repnz
jb
fistps
fs
or
data16
fstps
push
dec
movsb
lret
or
adc
and
es
test
mov
insb
fistpl
xor
nop
push
cs
test
cmpb
push
dec
les
push
jbe
push
iret
mov
imul
inc
and
adc
sub
aad
out
insb
test
dec
pop
shl
sub
push
push
pop
imul
and
push
std
hlt
cs
es
mov
cltd
popf
lods
test
rorb
cld
dec
icebp
sbb
subl
push
pop
mov
dec
mov
inc
or
sub
dec
sub
ss
dec
adc
imul
fnstcw
xchg
ret
jnp
mul
inc
pop
hlt
pop
insl
push
xor
dec
pop
scas
adc
stc
pop
mov
jg
sti
cli
loope
dec
mov
add
inc
xorb
add
pop
jmp
stc
push
aad
jne
movsb
repnz
pushl
push
pop
jno
pop
mov
adc
das
std
lds
sub
inc
lahf
xchg
lcall
fst
fisubrl
in
mov
stos
and
pop
sbb
daa
mov
add
aas
sub
cmp
loop
scas
pop
rorb
dec
jnp
xchg
adc
cmp
stc
push
adc
add
mov
fs
aaa
fyl2x
cmp
or
outsl
aam
in
ljmp
xchg
sti
int3
lods
fsubrl
push
leave
loope
cmp
sti
xchg
xchg
test
movsl
push
mov
clc
fcmove
inc
sub
and
adc
add
inc
les
ss
fnsave
sbb
mov
or
inc
mov
mov
pop
push
pop
ret
int3
jp
xchg
dec
loopne
pop
aaa
ds
in
push
mov
sahf
dec
cmp
mov
leave
imul
inc
jecxz
jo
or
jae
in
aam
inc
jbe
iret
cs
ret
cmc
out
fsub
xchg
fdiv
mov
aaa
sbb
fisttpl
add
mov
rorl
movsl
mov
cli
add
frstor
arpl
jne
test
pop
shrl
jge
xor
rorb
mov
ds
mov
mov
pop
sub
clc
xchg
mov
mov
cmp
xchg
ljmp
inc
mov
mov
xchg
mov
popa
inc
call
cwtl
sub
pop
push
outsb
inc
mov
cwtl
dec
jae
fcoml
lea
call
lret
lods
mov
dec
dec
mov
push
jl
sahf
mov
sbbl
movsl
mov
adc
mov
and
adc
adc
push
mov
lock
jne
mov
int3
cmp
xchg
out
jae
pusha
xchg
orb
pop
int3
outsl
dec
push
adc
mov
adc
mov
and
fwait
mov
mov
stos
stos
xchg
jno
aam
rcrb
push
lds
bound
xlat
dec
dec
int
adc
jae
sub
imul
std
xchg
lods
inc
mov
push
out
mov
or
into
fs
ds
ret
push
insb
mov
jmp
fcmovu
outsl
push
inc
xchg
hlt
xchg
sbb
sub
xchg
lea
mov
jmp
mov
je
popf
sub
xchg
add
sbb
jno
mov
inc
xlat
or
in
jb
in
jns
sbb
outsb
sub
add
es
lcall
into
jne
bound
int3
push
mov
xchg
fiaddl
dec
leave
test
cmp
dec
in
sbb
and
and
aad
jnp
in
loop
push
stos
shl
lret
adc
push
cmp
xchg
mov
or
rcll
fs
in
adc
repz
pop
xchg
dec
pop
mov
sub
out
sub
mov
ljmpw
test
dec
aas
pop
imul
mov
test
nop
dec
es
insl
dec
jae
test
in
int3
ret
jmp
fidivl
lock
cmp
lods
jp
sbb
pusha
adcb
mov
sti
fs
jb
xor
lcall
push
shlb
jbe
loope
or
sbb
rcrl
in
add
mov
in
loopne
pop
xor
ljmp
in
lds
mov
js
negl
mov
xchg
mov
jnp
mov
das
mov
nop
mov
aam
mov
jmp
repnz
std
jbe
outsl
in
sub
mov
mov
out
inc
cmp
lock
setge
pop
iret
clc
push
jno
cmpsl
and
lds
shll
push
or
dec
loope
rcr
or
sub
testl
pop
push
mov
xlat
inc
jp
sbb
add
dec
and
jmp
rclb
rol
push
fxch
and
fstl
dec
cld
dec
xchg
lahf
push
and
and
dec
cmc
in
or
dec
jbe
imul
addb
mov
push
pop
adc
jmp
daa
pop
jmp
imul
mov
and
push
jmp
or
sbb
rcrb
sub
pop
in
cltd
xchg
inc
adc
inc
pop
push
lret
jae
je
mov
gs
je
cli
fucomp
cmpsb
mov
repz
cmp
call
frstor
jo
push
dec
in
pusha
sbb
into
sbb
xchg
repnz
mov
xor
jle
movsb
ret
push
cld
dec
fs
cwtl
sarl
or
cld
cmp
jns
stos
rorb
mov
mov
movsb
mov
xor
inc
adc
pop
adc
adc
test
stc
fcompl
pop
ret
imull
cmpsb
mov
shlb
push
jno
pusha
fistps
lods
in
mov
sti
and
xchg
jle
mov
sbb
je
sbb
push
stos
movsl
shll
out
pop
popa
jne
xchg
sarb
es
jge
dec
xchg
imul
insl
push
mov
sahf
mov
test
icebp
imul
adc
mov
stos
shlb
pop
xor
sbb
nop
and
and
sbbb
fsubrl
popa
xor
arpl
orl
xchg
jno
mov
adc
mov
push
or
mov
or
hlt
lahf
arpl
in
scas
adc
pop
push
movsb
cltd
jge
xor
sbb
jb
jg
stos
std
lret
sub
popf
shll
dec
or
push
xchg
rcl
ret
xchg
inc
xor
pop
and
cltd
mov
jnp
mov
rcll
xchg
xchg
rorb
xchg
les
scas
push
adc
add
lret
add
jno
fdivrl
xor
sti
adc
fwait
mov
jge
dec
adc
sti
jae
add
and
dec
mov
gs
sbb
add
fisubl
mov
adc
dec
cmpsl
and
std
mov
inc
scas
test
jb,pt
inc
jle
mov
sub
cmpsl
pop
xchg
lds
jne
mov
ret
mov
int3
jp
std
mov
mov
lret
cs
mov
xor
pop
push
int3
xchg
js
cmp
test
add
inc
in
mov
mov
lret
mov
js
ja
pop
ret
xchg
pop
popf
adc
and
fs
add
mov
fdiv
flds
or
test
mov
sahf
sub
scas
popf
popf
mov
loop
xchg
sub
mov
in
jae
test
or
aas
shll
push
add
push
pop
push
lods
aam
lea
mov
pop
out
ret
scas
ret
rcrb
out
int3
into
data16
fmul
inc
les
mov
ss
test
jp
shlb
insb
lods
push
pop
pop
sbb
add
imul
out
mov
xchg
popa
inc
loopne
popa
nop
inc
lea
add
mov
adc
xor
into
test
mov
pop
das
or
mov
mov
sbb
ret
mov
imul
pop
inc
mov
jo
sub
cmc
jne
cmpsb
sahf
sub
xor
into
dec
jne
dec
xchg
pop
and
out
dec
js
mov
xchg
aad
pop
add
lahf
shlb
loop
pop
jno
inc
cmp
inc
push
rorb
mov
mov
movsl
aam
jo
popf
js
and
and
jae
xor
imul
out
int3
push
jne
aam
cwtl
arpl
sub
rclb
imul
pop
test
xchg
imul
dec
jle
or
sbb
mov
xor
mov
sahf
xlat
xchg
mov
jne
jge
lret
or
jae
imul
mov
lea
pop
pop
dec
je
and
push
sub
mov
sbb
lcall
add
push
loope
inc
movsl
rcrb
nop
jbe
std
and
push
cli
adc
add
mov
lea
xor
mov
stos
ss
imul
insb
sub
mov
sbb
outsb
mov
jecxz
xor
lret
sbb
jb
nop
in
mov
fists
sarb
je
leave
and
cmp
mov
push
les
and
and
mov
jbe
jmp
test
sti
inc
inc
sub
imul
vpsadbw
sahf
imul
es
jp
mov
pop
xor
jnp
and
les
ja
leave
push
test
insl
aam
out
lods
xor
jbe
js
scas
cmp
fwait
push
inc
mov
stos
fsubl
pop
mov
or
mov
repz
out
shlb
mov
sbb
pop
cmc
jns
inc
mov
push
enter
xchg
js
movsb
jmp
add
dec
pusha
in
add
or
push
int
movsb
lea
push
jle
pop
clc
subl
cwtl
lds
cmp
loopne
cmpb
ja
pop
push
data16
sub
jb
push
xchg
nop
xlat
ret
push
es
inc
xchg
pop
xor
jge
xchg
addr16
pop
aas
jg
cli
cmp
cmp
sbb
subb
aaa
insl
sub
mov
test
cltd
and
xlat
jp
mov
cmpsl
jbe
cmp
loop
xchg
sub
ret
mov
mov
adcl
insl
cmpsl
divl
insb
imul
and
pop
mov
add
sbb
mov
js
sub
insb
or
and
rolb
jbe
dec
in
cli
pushf
stos
sbbb
ljmp
pop
push
push
mov
and
sti
fstl
cmpl
cmpsb
js
jns
fdivl
mov
xchg
sbb
xor
es
aad
mov
or
dec
shll
std
mov
mov
mov
gs
aaa
into
pushf
jo
aas
dec
mov
and
faddl
outsl
cs
pushl
add
push
int
adc
cmpsb
loop
dec
imull
pop
popf
ror
movsb
dec
inc
push
cmp
xorl
pop
xchg
nop
and
dec
mov
jg
aam
add
adc
jge
jge
add
sub
gs
lock
sbb
pop
add
aas
mov
mov
add
lcall
mov
aad
mov
loope
imul
or
mov
push
sbb
daa
push
xchg
dec
jnp
outsb
mov
dec
fcompl
xchg
cmp
cld
pop
mov
in
lahf
sbb
mov
stc
mov
femms
mov
insb
sti
movsl
inc
xor
pop
dec
xchg
insl
ret
mov
dec
mov
push
test
bound
aad
and
adc
mov
mov
rcr
xchg
orl
sub
mov
jno
xchg
out
cmp
cmpsl
es
gs
movsb
and
test
xor
push
mov
jmp
push
pushf
int
push
and
int
in
mov
jo
pop
mov
fistpll
dec
cmp
sti
arpl
das
aad
lea
xor
ljmp
pop
jnp
repz
lcall
mov
in
std
or
enter
daa
dec
pop
sti
sub
stos
inc
adc
and
mov
shr
fwait
test
push
mov
popf
cmp
sti
jae
shl
test
jecxz
js
xor
and
lods
cmpl
or
testb
hlt
mov
lods
cmp
mov
arpl
pusha
push
mov
jb
scas
xor
in
cwtl
xor
fsub
fwait
push
scas
xchg
lret
inc
shlb
int3
push
daa
cmp
pop
pop
add
jnp
data16
icebp
xlat
add
idivl
push
out
pusha
bound
stos
jno
xchg
std
test
clc
mov
add
rclb
ror
test
stos
adc
popf
outsb
dec
scas
jns
add
mov
mov
scas
pop
sub
mov
cmpsb
scas
aam
jmp
cmp
scas
jmp
push
inc
dec
push
clc
jns
xchg
fnstsw
push
push
dec
mov
add
mov
cmp
test
gs
mov
or
rcrl
inc
cwtl
inc
jnp
cmp
cmc
into
mov
adc
out
xor
fsubs
movaps
or
push
loope
outsb
mov
xor
lds
je
stos
call
andl
into
inc
jecxz
test
pusha
xchg
cld
mov
out
jmp
jle
lret
bound
xchg
dec
test
mov
ror
or
cmpsb
and
mov
sub
outsl
dec
or
xchg
in
aad
sub
xchg
std
lret
jns
sbbb
push
jne
xchg
scas
pop
add
stos
in
mov
xor
popf
lcall
jae
pusha
inc
sub
sbbl
adc
dec
or
mov
and
out
call
fmul
and
adc
pop
and
push
loope
add
mov
mov
rol
xchg
or
js
mov
fwait
dec
sahf
inc
mov
xchg
mov
and
inc
jle
aad
push
push
int3
inc
dec
scas
stos
clc
xlat
push
in
fwait
outsb
add
jl
int
and
mov
test
roll
sub
std
mov
pop
sub
xchg
mov
pusha
mov
or
push
pushl
cmp
mov
sbb
xchg
sbb
push
pop
add
adc
mov
mov
sarb
pop
dec
push
lret
cmc
je
mov
mov
pop
lods
repz
out
add
les
insl
aam
mov
xchg
adc
inc
jg
and
mov
ror
jle
mov
mov
mov
add
das
mov
add
pusha
lods
xchg
lcall
add
aam
xchg
mov
dec
cmp
xor
pop
sub
push
lods
jp
jp
jo
sub
pop
out
imul
mov
xor
cmp
inc
xchg
hlt
and
mov
push
filds
adc
cmp
sahf
jge
fs
pusha
shlb
cmp
cmp
std
loope
std
dec
cld
adc
dec
adc
jns
xchg
pop
mov
jae
test
pop
data16
out
mov
mov
shr
push
jae
cmp
pop
bound
mov
xor
push
pusha
adc
stos
data16
cmp
lods
sub
into
xor
data16
sarb
add
xchg
out
out
shl
popf
jmp
sub
in
jno
addr16
cmp
xchg
int3
addr16
push
mov
loopne
pop
mov
sub
jne
ss
jae
lret
das
scas
loop
repnz
rorl
pop
xor
pusha
inc
mov
arpl
daa
leave
leave
or
jge
cmpsb
xchg
push
mov
test
mov
fidivl
idivl
aam
iret
inc
push
mov
ret
push
push
mov
pop
jmp
in
push
mov
push
ljmp
push
mov
xchg
aaa
mov
pop
lods
sbb
hlt
out
pop
jo
call
add
jb
cmp
cmp
cli
mov
ds
fsubrl
push
in
add
inc
push
sub
fcoms
adc
adc
out
je
mov
rclb
faddl
push
jecxz
add
je
inc
stc
xchg
push
xor
mov
sbb
xor
outsb
cwtl
les
js
outsb
cli
lret
imul
fstps
enter
mov
pop
or
leave
imul
fucomp
mov
shll
test
int3
jmp
insl
cmc
xlat
lea
push
pusha
rcll
enter
iret
fdivrp
dec
rorl
aad
pop
rcl
jno
mov
in
pop
jns
add
adc
lcall
xchg
xchg
outsl
dec
dec
pusha
lea
cmp
pop
xchg
mov
mov
iret
outsb
icebp
incb
inc
mov
jb
repnz
aam
pop
dec
pop
mov
stos
pop
cmp
cmpsb
push
sbb
pushf
gs
out
shrb
push
mov
cli
fsts
mov
sbb
repnz
mov
leave
cmp
add
jns
fwait
dec
mov
pop
jg
icebp
cli
fsubrl
add
mov
scas
mov
fbld
lcall
ffreep
loopne
inc
imulb
xlat
dec
leave
outsb
pusha
dec
jmp
xchg
lods
in
pop
add
leave
popf
jle
repnz
cli
dec
in
scas
xchg
andb
adc
sete
in
or
mov
inc
sub
in
inc
je
fadds
fdivrs
sbb
imul
or
ss
popf
fcmovb
mov
inc
ss
dec
iret
fs
adc
xor
cmpsb
mov
fcomps
mov
leave
out
or
adc
shrb
sub
sbb
pop
int
loop
and
ret
mov
add
adc
xorb
xchg
mov
insb
lcall
out
ds
inc
xchg
pop
out
imul
xor
jg
xchg
jle
addr16
test
xchg
sahf
aad
mov
aam
inc
xchg
lahf
sbb
insl
pop
mov
sub
stos
loopne
pop
sarb
cmpl
xlat
jle
cmp
xor
sahf
imul
lea
bound
xchg
das
fists
ja
mov
adc
dec
xchg
mov
add
sub
stos
pop
xchg
popf
mov
data16
scas
ljmp
push
popa
add
push
jecxz
inc
ljmp
add
sub
mov
sub
out
movsl
sbbl
lahf
jae
addl
inc
fiadds
xor
add
xorb
notb
cltd
inc
or
subl
fstps
or
or
jge
dec
jmp
test
into
dec
aas
lods
scas
test
sbb
and
cwtl
mov
or
add
loope
mov
jb
int
jge
jecxz
mov
gs
jecxz
subl
xchg
jle
push
mov
or
dec
ret
push
dec
shr
adc
jo
shll
ret
adc
iretw
xchg
in
push
pop
fsqrt
push
add
das
test
ja
popl
out
mov
mov
aam
push
es
nop
insb
das
das
push
cmpsb
push
cmp
inc
gs
inc
iret
mov
jl
push
mov
pop
sbb
cmp
and
in
sub
mov
or
xchg
or
cmp
cld
pop
clc
sbb
dec
push
or
cmp
aad
dec
mov
lods
outsl
ds
sbb
in
adc
or
add
enter
fimuls
in
adc
xor
lock
xchg
or
sub
sub
fwait
lahf
or
cmp
jecxz
lcall
loope
je
or
jno
insb
fildll
or
jns
in
jmp
rcrb
addr16
mov
inc
cmp
dec
rcrb
fcompp
je
or
aaa
xchg
ss
lds
pop
jae
jo
adc
mov
and
call
in
fisubs
add
pop
sahf
jnp
sub
loop
dec
cltd
sub
faddp
pop
xor
mov
xor
xor
sbb
cli
xchg
mov
cwtl
sti
arpl
add
out
pushf
xchg
arpl
xchg
cmpsl
jo
cli
pop
data16
ret
adc
mov
nop
daa
push
ljmp
cmp
adc
andl
xor
inc
xchg
inc
mov
outsl
xchg
xor
mov
adc
cltd
mov
pop
adc
cmp
iret
xor
dec
hlt
repnz
pop
sahf
jbe
popf
pop
out
jmp
rcl
fcomps
push
fistps
pop
add
mov
jo
push
xor
gs
cmp
sub
into
pop
mov
xor
adc
dec
push
mov
rolb
mov
mov
jle
js
popa
lods
mov
pop
jae
jecxz
adc
lock
js
jno
in
add
xlat
mov
push
sbb
lods
das
sub
call
mov
xchg
lcall
sbb
jns
shlb
mov
cmp
add
cltd
pop
dec
mov
push
icebp
push
cmp
aas
cmp
loope
mov
ss
mov
enter
int3
ret
andb
mov
sub
inc
ret
pop
cmp
sbb
in
sub
mov
xlat
mov
mov
jns
mov
sbb
out
xor
jecxz
sbb
pop
xor
push
xor
sub
out
loope
jmp
xor
inc
int
jb
out
pop
mov
xchg
mov
xchg
pushf
icebp
add
inc
adc
or
test
outsb
pop
push
and
insl
mov
adc
ja
out
shl
jg
sti
or
sbb
jno
mov
or
xchg
mov
pop
imul
dec
notb
in
mov
ret
loope
or
adc
inc
add
cmp
aas
xlat
mov
jns
movsb
mov
xor
dec
jp
adc
push
inc
cmpsl
icebp
xor
loope
iret
repnz
push
push
pop
jecxz
notb
xor
insl
ljmp
and
mov
test
nop
mov
ja
std
or
adc
es
mov
or
call
cltd
in
push
jecxz
jecxz
mov
push
pop
dec
filds
pop
fisubl
mov
jmp
stos
iret
lock
or
push
out
outsb
and
pop
jle
pop
rclb
divl
es
decb
inc
rcrl
scas
dec
push
jo
inc
negl
nop
jp
pop
inc
out
repnz
pop
out
imul
fwait
enter
push
cmpsb
pop
cmp
jp
insl
push
or
push
add
mov
in
adc
jns
mov
test
popf
shrl
dec
mov
sub
or
push
cmp
je
jle
or
ljmp
jb
call
jns
sahf
jns
and
lret
das
jmp
jle
ret
mov
mov
loop
pop
test
xor
rcrb
nop
ret
pop
rorl
das
xor
jle
xchg
bound
repnz
lcall
or
mov
push
mov
pop
jp
dec
dec
inc
push
js
jns
sub
fnstcw
add
fildll
sub
mov
cmc
data16
sbb
fstpl
daa
sbb
faddp
push
int
push
call
xchg
leave
daa
push
rolb
bound
jae
gs
sbb
adc
jb
adc
add
mov
jle
cmpsb
stos
mov
add
int3
movsl
out
jb
lock
lcall
xchg
cmp
les
dec
int
push
xor
add
lahf
mov
je
push
lds
in
outsb
fdivrl
sbb
add
xlat
push
int
shrb
sub
add
mov
loop
ret
pop
repnz
xorb
mov
and
dec
dec
sbb
xlat
xlat
add
mov
cs
xchg
mov
push
nop
push
fisttps
dec
push
test
cmp
mov
sub
dec
jo
in
sub
ret
pop
sbb
jbe
push
mov
icebp
adc
cmpsb
leave
lahf
or
push
shll
int
cmpsb
xorb
push
int
or
std
dec
xchg
or
imul
push
inc
popw
xor
jnp
lods
scas
fcos
into
cmp
mov
xor
inc
sub
test
daa
bound
mov
xchg
or
jge
leave
mov
bound
imul
sbb
and
or
inc
lahf
pop
in
sub
addr16
pop
xchg
adc
dec
icebp
dec
cmp
jbe
hlt
jecxz
loop
rol
mov
xchg
and
ret
in
lcall
inc
add
scas
sbb
mov
imul
or
lods
jnp
fisttpl
test
pop
push
movsb
xchg
les
xchg
out
push
cmp
imul
mov
popa
out
in
sub
je
leave
xor
inc
lahf
and
pop
fs
xchg
inc
aaa
shl
mov
sbb
add
outsl
jae
shlb
out
call
packsswb
or
je
or
decl
push
mov
jp
mov
add
sub
inc
mov
inc
es
add
daa
jl
adcl
mov
insl
jnp
lret
adc
cmp
xorb
lods
cmp
mov
repnz
dec
lock
or
cmpb
sbb
test
jp
test
icebp
cmpb
aam
mov
or
add
mov
and
jbe
sub
pop
stos
fcom
push
xor
xchg
adc
adc
fwait
je
xchg
in
jbe
pop
daa
jge
fisttps
sub
mov
and
jno
movsb
clc
jmp
pusha
inc
xchg
test
or
cld
insb
dec
insb
and
mov
call
jge
jo
dec
out
cli
iret
repz
fdivrs
in
aas
inc
je
adc
fldl
lcall
rol
pop
pop
jle
test
cwtl
negb
lds
jecxz
jb
mov
pop
lcall
ret
outsb
mov
enter
ss
je
cmc
jp
pop
pop
and
cmp
loopne
xor
xchg
ret
pop
call
mov
mov
ret
inc
jb
push
lahf
negl
mov
hlt
in
or
adc
sbb
push
loopne
ret
div
add
push
push
adc
call
bound
repnz
insb
scas
ret
fdivs
fdivp
pop
insb
outsb
pop
sub
in
dec
lods
jg
std
outsl
jl
mov
or
mov
jns
ss
sub
inc
sahf
push
pop
lcall
lcall
fildl
aas
xchg
jb
jl
cmpsl
ss
aaa
insb
xor
mov
xchg
or
test
cs
sub
dec
inc
fs
popa
fstpl
adc
jae
pushf
dec
add
lods
jle
dec
shrl
or
leave
mov
adc
dec
inc
lar
insl
test
adc
cmp
out
pop
cmp
push
pusha
jp
lods
hlt
push
test
xor
xor
in
xchg
mov
int3
cli
dec
xchg
jp
movsl
hlt
push
and
out
les
pop
aam
in
test
rcrb
scas
lods
mov
out
cmpsb
sbb
xchg
inc
nop
fldt
inc
mov
daa
inc
jecxz
addl
ror
es
xor
push
sub
daa
lahf
aad
mov
idivb
dec
jmp
mov
clc
mov
jp
out
out
test
ret
jnp
out
repz
sub
cli
mov
and
test
lret
icebp
fst
pop
es
and
fmull
sub
dec
jmp
arpl
loopne
xor
fistps
xchg
adc
add
cmp
sar
outsl
movsb
les
mov
add
push
dec
inc
icebp
sbb
cwtl
cmp
cltd
mov
inc
pop
mov
rcll
arpl
sub
pop
stc
negl
add
add
sti
mov
mov
push
pusha
daa
mov
lret
inc
in
inc
dec
add
loope
dec
fadds
mov
adc
enter
or
pop
out
add
mov
popf
or
out
in
lahf
pop
xchg
fwait
adc
divl
jecxz
jno
aaa
stos
in
sbb
inc
aad
xor
or
std
clc
gs
insb
shll
mov
jns
data16
cmp
add
rorl
add
jg
outsb
cwtl
jnp
sbb
xchg
pop
inc
fsubrl
jno
mov
sub
pop
aas
rclb
leave
stos
sbb
pop
jmp
pop
inc
ficoms
mov
movsl
test
ss
lods
push
dec
arpl
lret
mov
push
push
popl
mov
jle
lock
xchg
sbbl
pop
lret
mov
loop
jmp
and
mov
andl
adc
idivb
popa
mov
mov
js
faddl
sub
adc
mov
inc
inc
into
hlt
cmp
lret
js
dec
push
xor
xor
xor
loop
in
es
rcr
rorl
push
xor
cmpsb
dec
movsl
xchg
call
imul
movsb
push
repz
xor
cmp
out
fmull
mov
daa
shl
sarb
pop
js
into
bound
aaa
fimuls
ja
out
mov
aam
inc
fs
sarb
rorb
sbb
sarb
stc
xorb
xor
sub
rcll
sarb
leave
rolb
dec
nop
jbe
pusha
push
sbb
mov
xor
imul
lcall
sub
add
push
mull
mul
lock
sti
mov
and
and
xchg
xchg
in
sbb
sti
sbbb
push
mov
mov
std
push
insl
add
nop
inc
sub
inc
xchg
xchg
int3
int3
inc
in
out
pop
dec
and
mov
and
and
push
daa
adcl
je
push
lret
aam
ljmp
popl
mov
add
adc
cmp
adc
mov
shll
in
lahf
lods
mov
dec
fisttpll
andl
lds
repnz
cmp
data16
lret
push
cltd
std
mov
xor
mov
sbb
jae
xor
xchg
repz
or
and
push
aaa
iret
shrl
or
push
cld
add
hlt
adc
ljmp
int
mov
adc
leave
cmp
mov
or
shll
movsl
enter
mov
and
dec
fstl
mov
inc
jb
scas
mov
loopne
data16
mov
adc
cmp
ds
jmp
sarb
mov
in
mov
inc
adc
xchg
imul
pop
lret
add
mov
jecxz
or
mov
ficomps
add
aaa
sub
dec
rol
xchg
dec
pop
jge
fsubp
gs
sahf
adc
clc
mov
jecxz
push
clc
or
mov
lret
mov
cmp
cli
pop
jnp
xorb
jmp
or
rcll
jmp
scas
das
ret
cwtl
inc
imul
sbb
push
pop
dec
repz
cmc
and
adc
or
xor
mov
fmull
pop
add
dec
push
pop
mov
and
loop
cmc
ljmp
addr16
test
mov
mov
adc
ss
mov
insb
jne
js
push
pop
jbe
test
xor
repnz
sahf
data16
add
cld
into
fmul
dec
sarl
xor
jg
inc
mov
fsubrl
sub
aad
jl
cmp
cli
lock
xchg
lods
xor
sub
sub
lock
ror
arpl
mov
enter
fcomi
std
xchg
shrl
lea
mov
xchg
mov
xchg
js
or
test
dec
add
out
ficoml
pusha
mov
and
popf
mov
lods
aam
dec
popa
sbb
data16
loopne
pop
cld
arpl
push
shrl
scas
data16
jge
or
or
daa
in
inc
ficompl
hlt
or
lahf
imul
cmp
xor
xor
sbb
push
push
mov
pop
adc
pop
vcmpsd
clc
imul
nop
pusha
daa
adc
cltd
mov
sub
cltd
cld
cmp
xor
mov
pop
loop
sub
jge
sti
mov
test
test
loop
sub
cmp
lcall
cmp
dec
ds
mov
fcompl
jnp
xchg
cmp
pop
xor
and
out
icebp
mov
leave
pop
pushf
leave
ljmp
pusha
cmp
mov
in
mov
mov
adc
loop
mov
xchg
push
and
dec
dec
xchg
dec
sub
je
jns
dec
out
pop
xlat
in
add
push
pop
adc
mov
cmp
jnp
push
sti
popf
pop
push
jo
idivb
inc
mov
mov
lods
jl
jmp
fiadds
fcoms
addr16
xchg
loope
dec
lret
pop
cld
xor
dec
ds
pop
add
out
sbb
js
adc
cmp
shl
push
hlt
js
xchg
sub
mov
imul
jmp
or
cmpl
imul
or
pop
cltd
xchg
test
mov
jbe
test
aam
fnstcw
sbb
test
out
inc
loopne
push
push
and
or
lcall
fs
xor
outsl
sub
xor
sti
and
cmp
cmp
xchg
lods
stos
push
and
or
in
jecxz
pop
push
stos
sub
inc
adc
cmc
or
xor
pop
xor
jae
test
test
jns
mov
clc
sub
mov
xor
push
adc
dec
pop
and
fisttps
sbb
icebp
inc
adc
in
push
and
push
push
repnz
sub
cmp
push
jo
aas
inc
rcrw
lcall
push
pushw
push
pop
adc
es
jnp
popf
sti
lock
outsl
leave
xorl
mov
ss
out
call
and
mov
xchg
pop
fnstsw
iret
xor
sbb
sbb
movl
stos
je
in
and
dec
mov
dec
jb
cmovge
jns
fnstenv
xor
mov
sahf
adc
mov
pop
imul
mov
inc
jne
repnz
add
gs
dec
mov
dec
mov
mov
xchg
sub
dec
pextrw
es
and
mov
fcmove
mov
pop
xchg
jl
fsubs
incl
mov
pop
divb
mov
add
and
imulb
dec
inc
leave
jnp
sub
push
mov
push
loopne
mov
xchg
mov
mov
dec
xor
push
test
jge
and
cmpsb
dec
dec
xchg
mov
mov
pop
xor
fldt
cltd
adc
fs
mov
cmp
mov
or
jb
adc
jg
cmpsb
adc
stos
int
in
popf
aad
mov
pop
test
xor
std
cli
cmp
ljmp
xchg
adc
int3
cwtl
insb
inc
push
test
xchg
and
roll
js
clc
cmp
mov
or
adcl
test
js
push
mov
and
loop
or
testb
fwait
rcr
in
aaa
insl
cmp
icebp
cmp
push
pop
xor
sbb
mov
xlat
sbb
call
xchg
or
shlb
inc
xor
push
sbb
mov
push
movsb
leave
sub
pop
aad
loopne
jbe
inc
inc
sub
jmp
dec
cmpsb
jbe
jns
loope
add
pop
and
sbb
pop
shl
jae
insl
sbb
xchg
arpl
sub
sub
add
and
js
push
mov
pop
fcomip
popf
shrb
arpl
in
pop
imul
insb
js
sti
jmp
pop
std
gs
cmc
mov
jns
mov
stos
lret
cmp
or
fst
cld
gs
stos
sbb
mov
aad
or
xor
out
out
mov
pop
lods
mov
maxps
loope
mov
pop
add
lahf
xor
sbb
clc
pop
xor
orb
hlt
mov
xchg
push
andl
outsb
push
dec
inc
test
dec
pop
mov
sbb
mov
mov
cli
dec
xor
lret
mov
outsb
gs
mov
bound
inc
pop
icebp
pop
and
or
es
jno
insl
sub
cmp
mov
fs
add
rclb
movsl
icebp
outsb
inc
dec
add
xor
dec
faddl
lds
aam
in
es
add
mov
shl
cmp
aas
push
jnp
mov
adc
movsl
mov
xchg
push
into
ljmp
popf
pop
xor
push
test
cmpsl
addr16
pop
jno
bound
xchg
subl
inc
push
imul
xchg
je
jnp
push
xchg
arpl
pusha
add
testb
push
push
mov
xchg
lds
inc
aas
and
sbb
add
jmp
test
or
cli
pop
fimuls
cmp
push
inc
jnp
dec
pop
cld
sbb
xor
lcall
fiaddl
jp
add
push
mov
mov
sarb
jp
andb
push
stc
and
jg
cmp
aad
adc
and
mov
lfs
dec
mull
push
in
dec
xchg
in
xor
or
test
lds
stc
cmp
addl
sahf
xchg
cmp
pop
pop
lcall
mov
test
cs
push
xchg
mov
or
into
movsb
xchg
mov
shll
enter
aam
sbb
inc
inc
inc
or
sbb
jl
adc
xor
push
and
je
pop
sbb
jnp
call
and
lret
xchg
jns
dec
cmp
xchg
mov
jg
xor
icebp
out
mov
std
or
je
jge
jno
negb
divb
mov
insb
ficoml
xor
pandn
mov
jno
and
std
pop
sub
insl
js
std
jl
inc
fcoml
pop
lret
xchg
lret
sbb
stc
aam
arpl
sub
mov
mov
mov
es
int
xchg
lret
shrl
scas
jmp
dec
fisubrs
inc
fistpll
fidivl
sti
xchg
dec
iret
cmc
std
push
mov
or
push
cmp
pop
lcall
xchg
mov
add
out
repz
mov
sub
iret
pusha
add
dec
jnp
les
or
mov
ljmp
outsb
mov
lods
dec
stc
inc
mov
and
fimuls
jp
inc
xor
or
push
out
sub
mov
cld
xchg
bnd
or
sub
insl
sbb
popa
enter
jnp
test
cmp
sbb
popl
icebp
xorb
pusha
dec
insb
mov
aad
inc
lods
ds
call
push
cwtl
mov
xor
xchg
ror
pop
lret
xor
sbb
jnp
sbb
xor
sub
xchg
test
pushf
scas
movb
jo
cmp
push
mov
push
inc
into
jge
repnz
cltd
sarl
mov
in
xchg
or
jmp
in
xor
dec
mov
pop
lea
cmpl
je
add
int3
mov
inc
stc
xchg
xor
rcr
gs
jbe
xchg
mov
push
fwait
addr16
in
adc
cmpsb
out
inc
adc
xchg
or
push
pushf
push
cmp
aaa
sahf
movb
andb
inc
mov
add
push
inc
mov
add
push
cmp
les
dec
mov
xchg
dec
pop
lea
fmuls
adc
mov
mov
int3
ja
mov
fcmovnbe
push
fs
aad
xor
adc
int
mov
aad
xchg
or
jp
pop
xlat
orb
lods
mov
cld
mov
inc
xchg
xor
push
imul
add
xor
data16
pushf
jb
cmp
add
sub
movsl
aam
lds
pushf
mov
jle
jp
sbb
push
imul
adc
jo
jg
jle
insb
mov
cmpsb
mov
mov
adc
xchg
xor
pusha
cmp
shrb
jl
pusha
cli
repz
fdivrs
pop
lret
pusha
jecxz
stc
mov
bound
lods
sub
rclb
pop
ds
outsb
in
jp
test
test
jle
push
std
mov
lds
xchg
add
lods
inc
out
sbb
dec
subl
dec
mov
mov
out
cmc
addr16
lock
ja
push
adc
sub
mov
sbbl
lcall
mov
sbb
jle
pushf
div
jge
add
add
and
or
fadd
mov
add
stos
movsl
out
lret
ds
stos
popf
xchg
ficompl
push
dec
outsb
pop
daa
jbe
and
jb
insb
mov
push
xor
sub
out
sbb
outsl
or
push
rolb
adc
iret
movsb
pop
xchg
sbb
call
pop
pop
je
or
mov
loope
int
adc
inc
lret
xor
daa
or
xchg
adc
cmpsb
mov
push
fwait
or
pop
lret
aam
push
lea
outsb
hlt
mov
xchg
adc
add
clc
dec
leave
mov
movl
jg
adc
xchg
xchg
mulb
add
in
imul
.byte
adc
mov
nop
add
add
xchg
mov
hlt
out
aaa
cmp
add
cld
mov
add
cmp
push
lret
rcll
out
and
or
fwait
mov
jno
mov
fsubr
mov
loope
mov
mov
popf
lds
cld
mov
push
ret
hlt
int
add
rolb
push
insb
mov
ret
loopne
mov
jp
hlt
pop
pop
push
sbb
enter
test
xor
or
mov
inc
cmpsl
scas
scas
sub
cmp
roll
dec
mov
add
jno
dec
dec
loope
enter
pop
sbb
movsl
in
jge
or
sub
and
cmpb
pop
inc
cs
dec
int3
out
mov
lret
xor
fisttps
sub
mov
imul
and
sub
add
jno
outsb
lods
lods
imul
sub
inc
sbb
pop
push
add
push
jg
push
xor
test
nop
int
jmp
xchg
andb
and
jae
and
lret
pop
adc
sbb
popa
stos
xchg
add
movsb
jl
imul
out
shl
push
mov
mov
or
popf
xor
xorl
inc
cmp
push
lea
loop
jmp
lret
gs
xor
mov
shl
iret
imulb
lahf
lahf
es
jae
dec
fwait
int
sub
insb
gs
rcrl
pop
fs
mov
fcmovbe
mov
loopne,pt
test
add
push
cmp
lahf
jp
popf
inc
and
xchg
lret
test
push
mov
sahf
mov
test
imul
test
mov
popf
dec
pop
xchg
pop
mov
push
push
adc
inc
scas
pop
lahf
fwait
inc
lret
test
pop
adc
adc
dec
inc
jne
sbb
inc
or
stos
xadd
dec
mov
xor
mov
pop
xor
imul
sti
add
add
aaa
movsb
dec
add
add
add
add
addb
addb
add
pop
add
addb
add
lock
orb
add
xor
add
mov
add
aaa
movsb
dec
add
add
add
add
mov
add
addb
add
aaa
movsb
dec
add
add
add
or
add
add
loopne
add
clc
add
addb
add
adc
add
sub
add
inc
add
addb
add
pop
add
addb
add
jo
add
mov
add
mov
add
add
movsb
dec
add
add
add
push
add
pop
add
mov
pop
add
rolb
add
call
pop
add
add
add
sbb
add
xor
add
aaa
movsb
dec
add
add
add
push
add
add
add
add
pusha
add
orb
add
add
nop
add
adcb
add
add
add
add
addb
add
aaa
movsb
dec
add
add
push
add
add
add
subb
add
or
or
add
loop
add
testb
adcb
addb
add
and
add
inc
or
sbbb
add
or
or
add
loopne
add
clc
add
adcb
add
aaa
movsb
dec
add
add
add
add
mov
add
add
aaa
movsb
dec
add
add
add
add
add
add
inc
add
add
aaa
movsb
dec
add
add
add
add
add
add
push
add
add
aaa
movsb
dec
add
add
add
add
add
add
pusha
add
add
aaa
movsb
dec
add
add
add
add
add
add
jo
add
add
add
aaa
movsb
dec
add
add
add
add
add
add
addb
add
movsb
dec
add
add
add
add
add
add
nop
add
add
aaa
movsb
dec
add
add
add
add
add
add
mov
add
add
movsb
dec
add
add
add
add
add
add
mov
add
add
add
aaa
movsb
dec
add
add
add
add
add
add
rolb
add
movsb
dec
add
add
add
add
add
add
rolb
add
aaa
movsb
dec
add
add
add
add
add
add
loopne
add
add
add
aaa
movsb
dec
add
add
add
add
add
add
lock
add
aaa
movsb
dec
add
add
add
add
add
add
add
add
add
add
aaa
movsb
dec
add
add
add
add
add
add
adc
add
add
add
aaa
movsb
dec
add
add
add
add
add
add
and
add
add
add
aaa
movsb
dec
add
add
add
add
add
add
xor
add
add
add
aaa
movsb
dec
add
add
add
add
add
add
inc
push
add
add
add
aaa
movsb
dec
add
add
add
add
add
add
push
push
add
add
add
aaa
movsb
dec
add
add
add
add
add
add
pusha
push
add
add
add
aaa
movsb
dec
add
add
add
add
add
add
jo
add
add
add
aaa
movsb
dec
add
add
add
add
add
add
addb
add
add
add
movsb
dec
add
add
add
add
add
add
nop
push
add
add
add
aaa
movsb
dec
add
add
add
add
or
add
add
add
movsb
dec
add
add
add
add
or
add
add
add
movsb
dec
add
add
add
add
or
add
push
add
add
add
aaa
movsb
dec
add
add
add
add
or
add
push
add
add
add
aaa
movsb
dec
add
add
add
add
or
add
push
add
add
add
aaa
movsb
dec
add
add
add
add
or
add
push
add
add
add
aaa
movsb
dec
add
add
add
add
or
add
pop
add
add
add
aaa
movsb
dec
add
add
add
add
or
add
pop
add
add
add
aaa
movsb
dec
add
add
add
add
or
add
pop
add
add
add
aaa
movsb
dec
add
add
add
add
or
add
pop
add
add
add
aaa
movsb
dec
add
add
add
add
or
add
add
add
add
aaa
movsb
dec
add
add
add
add
or
add
add
add
add
aaa
movsb
dec
add
add
add
add
or
add
add
add
add
aaa
movsb
dec
add
add
add
add
or
add
add
add
add
aaa
movsb
dec
add
add
add
add
add
add
addb
add
add
in
add
add
add
clc
sbb
add
add
in
add
add
add
adc
pop
add
add
add
add
add
add
add
adc
add
in
add
add
add
inc
pop
pop
add
add
add
add
add
or
add
add
add
add
add
stc
push
add
add
in
add
add
add
mov
push
add
add
add
add
add
ret
test
add
in
add
add
add
js
push
add
add
in
add
add
add
lods
pop
add
pushf
add
add
add
add
add
add
add
adc
add
in
add
add
add
pop
pop
add
or
add
in
add
add
add
pusha
pop
add
insb
add
add
add
add
add
add
pop
add
faddl
add
in
add
add
add
test
add
aam
add
in
add
add
add
jl
add
inc
add
add
add
add
add
add
pop
add
mov
add
add
add
add
add
add
add
add
add
add
sbb
add
in
add
add
add
xor
add
add
add
add
in
add
xor
add
in
add
add
add
and
add
add
add
add
add
add
add
imul
add
add
add
add
add
stos
push
add
add
in
add
add
add
in
push
add
add
in
add
add
add
or
add
add
add
add
add
lods
push
add
add
add
add
add
add
add
lods
push
add
add
in
add
add
add
sbb
push
add
add
add
add
add
add
add
push
add
add
in
add
add
add
sub
add
add
add
add
add
push
add
add
in
add
add
add
cmp
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
in
add
add
add
add
inc
add
dec
add
add
inc
add
push
add
dec
add
add
inc
add
dec
add
inc
add
add
pop
add
add
inc
add
add
push
add
add
dec
add
add
dec
add
inc
add
or
inc
add
dec
add
push
add
dec
add
inc
add
add
add
inc
add
push
add
or
add
dec
add
dec
add
push
add
push
add
inc
add
push
add
dec
add
push
add
push
add
push
add
dec
add
push
add
dec
add
add
inc
add
dec
add
push
add
add
push
add
push
add
dec
add
push
add
dec
add
add
dec
add
push
add
dec
add
inc
add
push
add
add
add
pop
add
push
add
dec
add
push
add
add
push
add
push
add
dec
add
add
cmp
sub
adc
dec
sub
adc
mulb
pop
mov
movsb
mov
out
insb
int
clc
fisubrl
lcall
inc
icebp
mov
test
jge
iret
fsubl
sbb
subb
movsl
inc
ss
loope
add
xor
pushf
jg
dec
inc
repz
pop
jno
push
daa
push
test
pusha
inc
xchg
jge
dec
in
sub
pop
lahf
and
and
fs
push
out
js
out
add
xchg
inc
mov
fbld
xchg
sbb
sub
in
push
add
inc
aas
rorl
sub
jb
popf
nop
sbb
jl
sti
iret
out
fwait
test
sbb
pop
sbb
in
jl
inc
cmpsb
jl
clc
rcll
xor
push
push
jae
adc
stos
push
mov
bound
ljmp
aaa
out
xor
out
imul
cmp
sub
popl
add
mov
sbb
arpl
inc
subb
rcrl
jge
pop
filds
cmpsl
in
add
call
sub
test
cmp
inc
jg
popa
stos
dec
insb
sti
adc
dec
ret
and
pop
add
mov
sbb
scas
mov
or
push
mov
adc
push
test
fiadds
fstpl
pusha
pop
push
pop
pop
jg
adc
push
push
mov
jmp
mov
cmp
negl
inc
mov
inc
jl
jge,pt
cmpsb
xchg
pop
cwtl
mov
inc
ja
cli
lods
repz
stc
mov
out
shlb
inc
incl
popf
push
ljmp
jmp
mov
out
movsl
sbb
jmp
adc
mov
sbb
repnz
dec
xchg
sbb
hlt
or
and
in
dec
outsb
flds
inc
dec
cmp
popf
aaa
dec
in
test
mov
cmp
jns
xchg
push
jno
shll
leave
push
mov
push
xor
js
jno
add
pop
decl
loop
cmc
mov
mov
insl
pop
lds
xchg
fistpl
in
mov
add
mov
rcll
cmp
xor
pop
xor
call
ss
add
test
mov
and
pop
out
das
aaa
test
jno
je
xor
cmpsl
test
and
into
inc
or
lahf
shlb
ret
push
mov
xchg
mov
ror
call
push
in
movsl
jbe
fimull
dec
sbbl
inc
call
mov
mov
and
sbb
adc
xlat
mov
dec
cmp
test
nop
scas
ss
mov
mov
ja
testb
jmp
mov
xchg
les
push
dec
hlt
loopne
push
cmpl
scas
or
xor
xor
or
inc
pop
scas
jecxz
or
dec
sbb
xlat
jp
mov
fistps
sub
test
loopne
mul
les
pop
inc
jle
jne
xchg
mov
fistps
sbb
fnstsw
inc
pop
stc
pop
adc
jmp
xchg
ret
jnp
stos
mov
cmp
mov
and
or
mov
adc
not
sbb
inc
lods
data16
push
dec
jns
xorl
mov
rolb
pop
leave
sbb
mov
adc
imul
inc
frstor
shr
imul
lock
pop
xlat
mov
or
into
lret
enter
sbb
test
sub
push
dec
adc
sub
into
adc
xor
dec
inc
data16
popa
pop
inc
inc
call
flds
fnstcw
rolb
xor
scas
fwait
stos
jno
cmpsb
pop
xchg
sbb
or
dec
mov
add
dec
mov
out
int3
pushl
xlat
jne
test
stos
mov
mov
adc
sub
in
mov
into
das
je
inc
loope
or
int3
mulb
cmp
sub
test
jnp
jmp
adc
dec
adc
push
outsb
and
lea
mov
push
sub
push
inc
gs
aas
mov
dec
pop
shrl
inc
jo
ret
fdivrs
fldcw
pop
mov
iret
xchg
inc
aaa
lds
mov
gs
into
nopl
pop
cmp
mov
lock
sub
push
fst
movsb
mov
lods
into
mov
or
mov
aas
adc
sub
fwait
cmpsb
sub
push
mov
xor
dec
inc
inc
or
add
cmp
pop
std
les
out
imul
movsb
xchg
das
stc
pop
mov
ljmp
enter
lcall
jge
and
jecxz
push
or
xchg
jg
ja
pop
and
xchg
jmp
gs
lds
sbb
loop
inc
cmpl
cmp
mov
sub
out
outsb
mov
out
arpl
cwtl
sub
rcrb
mov
fstl
sub
stc
test
addb
fs
orl
popf
lret
je
mull
pop
push
xchg
jmp
mov
push
xchg
dec
cmp
addr16
cmp
mov
iret
adc
int
mov
sbb
mov
lock
and
jno
lods
sub
pop
fcmovnb
fcompl
pop
cmp
sbb
add
aad
es
repnz
movsb
push
lea
xor
or
popf
in
add
pop
fnsave
xchg
add
pop
shlb
inc
jno
insl
inc
and
and
mov
jp
fcoms
sub
bound
sub
daa
inc
mov
mov
prefetcht0
mov
outsl
mov
imul
movsl
pusha
ds
cmp
leave
cwtl
add
and
jg
mov
xor
lret
fs
in
inc
mov
std
cwtl
rcrl
pop
cli
and
out
sub
cmp
mov
jmp
dec
sub
inc
in
ja
outsl
nop
xchg
mov
mov
stc
xor
cmp
sti
jle
out
cmpsl
add
mov
mov
and
push
mov
push
mov
mov
xchg
xchg
and
divb
cli
jno
and
inc
pop
pusha
cld
insb
sbb
sub
jb
gs
jbe
addr16
int3
outsb
sbb
inc
mov
mulb
jp
cmpl
or
test
push
test
xor
mov
insb
sub
lret
adc
pop
mov
push
ds
int
ficoms
cmp
push
add
sarb
ss
cmp
xchg
push
outsl
and
out
pop
movsl
pop
push
int
data16
mov
xchg
ds
imul
jns
push
call
sub
outsl
mov
in
fildll
aam
hlt
call
pop
jge
mov
dec
test
pop
and
stos
and
pusha
scas
bound
jb
sub
adc
int3
imul
xchg
cmpsb
push
sbb
int3
loope
cmp
je
jno
rol
scas
fcmove
pop
ror
and
scas
pop
jle
cld
fcmovne
push
pop
ja
add
cmpl
pop
ljmp
out
adc
fbstp
push
aad
jnp
pop
mov
shrb
or
ljmp
in
pop
cltd
pop
xchg
mov
jno
jbe
shrl
lret
rolb
cmp
cmp
pop
mov
cmc
lret
aaa
adc
aaa
push
cmc
jmp
jne
inc
sbb
mov
mov
in
xor
aam
mov
jg
xor
ficomps
mov
cltd
js
pop
in
sub
fisubl
dec
lret
and
ljmp
pop
popl
sub
cmp
adc
aaa
outsb
fildll
push
out
or
icebp
add
movsl
xchg
ss
inc
xchg
stos
ja
and
sbb
mov
lret
pushl
cmp
cld
pop
sub
stos
pop
sub
cli
xchg
scas
inc
mov
push
call
repnz
je
fstl
xor
xor
mov
adc
or
in
dec
push
dec
loopne
pushf
mov
pop
add
sub
push
sbb
mov
push
fisubs
cltd
les
stos
cld
jp
ss
enter
cld
data16
rcrl
lods
jl
dec
addr16
into
sub
jl
mov
outsl
lock
inc
xor
data16
or
dec
ljmp
outsl
xchg
sub
cld
std
pop
jp
push
xchg
and
roll
test
push
dec
sbb
xor
and
mov
mov
dec
inc
cmpsb
into
shl
sti
mov
jp
loopne
sbb
pop
dec
fcmovbe
inc
insl
jb
push
sti
icebp
aad
add
pop
push
mov
fstps
fidivl
lods
mov
rorl
ficomps
pusha
loope
sbb
sbbb
and
push
pop
inc
push
jne
add
jmp
loope
dec
jl
aas
xchg
daa
lcall
in
aam
scas
mov
int3
mov
xor
xor
jle
push
inc
lret
adc
es
mov
push
pusha
sbb
dec
js
sbb
sub
jae,pn
loop
xor
lret
dec
loope
cmp
je
je
inc
repnz
mov
jg
jl
or
shlb
stos
and
jle
cmovp
xor
push
jae
mov
pop
imul
fldenv
inc
lea
pop
mov
rep
jge
dec
sub
jo
lcall
dec
inc
mov
xchg
and
mov
lret
scas
inc
ror
push
sub
mov
sub
xor
loop
push
mov
xor
loop
jnp
stos
scas
sub
dec
sbb
jmp
dec
cmp
imul
in
test
cmc
inc
inc
dec
add
cmp
loope
add
and
lret
cmp
and
cmp
dec
int
int3
inc
mov
sahf
ss
push
addr16
addr16
push
add
popf
jmp
test
outsl
sub
pop
adc
into
les
scas
jge
sub
inc
mov
pushf
into
call
cmpsb
je
or
insb
mov
xchg
inc
mov
outsl
hlt
jge
test
pop
filds
cmp
jne
arpl
adc
dec
ret
shr
xchg
loop
and
jnp
dec
add
pop
push
sbb
mov
mov
cmpsb
int
pusha
push
pop
push
pop
dec
pop
repnz
movsl
push
stos
arpl
das
ja
and
pop
and
fsubrs
push
daa
psraw
and
mov
mov
sti
cltd
adc
dec
mov
mov
mov
xor
add
mov
mov
adc
iret
inc
test
das
adc
sbb
aam
push
mov
dec
xchg
sbb
pop
sarb
das
mov
mov
mov
mov
push
out
inc
xor
push
in
jle
inc
cmp
aam
pop
cli
sub
rcll
mov
cwtl
popa
mov
repnz
jnp
out
into
xchg
shlb
xchg
push
cmp
rol
pop
mov
sbb
aam
xor
pop
test
inc
out
adc
jmp
scas
es
push
sbb
cmp
sbbb
arpl
fisttpl
push
push
fwait
das
mov
sahf
repz
addr16
popf
loope
test
sbb
xlat
inc
and
bound
jp
push
sub
jb
rcl
add
insl
push
enter
sub
inc
xor
ja
mov
sub
iret
cmc
aas
fisubrl
cmp
mov
mov
es
cmpsl
ds
add
sbb
addb
cli
cmp
inc
dec
inc
pop
mov
add
inc
sahf
sbb
pop
call
sub
jle
jns
mov
movsl
or
lret
int
mov
cmp
rcrb
ret
adc
push
setbe
popa
and
jle
pushf
ja
pop
inc
jp
jne
sub
imul
mov
jno
jp
popa
dec
mov
pop
loopne
sbb
cmp
inc
push
dec
cwtl
les
lods
pop
cs
cwtl
shlb
sub
bound
push
into
xor
and
push
loope
fdivrs
inc
or
ds
xor
jnp
xor
inc
mov
pop
adc
hlt
cmp
stos
pop
rorb
push
in
in
aaa
bound
mov
es
popf
loop
and
xor
cwtl
sahf
shrb
adc
pop
test
int3
call
fcoms
lret
push
push
xor
or
or
stos
daa
data16
es
testl
or
adc
sub
sbb
inc
repz
or
lock
push
mov
mov
jg
dec
inc
es
and
movsb
lock
jg
sub
test
push
and
and
filds
inc
fnstenv
dec
ja
or
jae,pt
xchg
and
mov
jecxz
fdivrs
test
xor
test
je
and
test
test
ljmp
sbb
shr
mov
sbb
faddl
testb
xlat
mov
mov
aas
mov
movsb
add
inc
in
enter
pop
mov
lret
xchg
cmp
cmp
mov
leave
sub
jae
enter
movsb
test
arpl
imul
xchg
fnstsw
pop
or
icebp
sbb
mov
insb
bound
dec
cmp
inc
jne
jl
loop
adc
sbb
mov
nop
mov
cld
xor
inc
clc
enter
pop
lea
subps
repnz
rol
stos
inc
push
mov
jmp
ss
mov
cmc
xchg
jmp
enter
sub
mov
pop
pop
mov
nop
cmp
and
mov
cmp
fdivrs
insl
sbb
sub
stos
mov
sahf
sahf
and
rol
rclb
fcomps
pop
mov
or
lea
push
or
sbb
or
imul
sbb
ret
adc
lds
dec
inc
ljmp
pop
rclb
mov
das
inc
dec
scas
cmp
mov
arpl
mov
or
mov
pop
es
int
popf
outsl
or
inc
adc
mov
jb
popa
inc
shr
sahf
jae
mov
out
popl
mov
cli
and
shrb
lcall
jge
imul
pop
cmp
xchg
jmp
push
push
aam
inc
test
dec
out
imul
push
pushf
es
loopne
push
arpl
cli
mov
mov
mov
data16
mov
imul
fistpll
jecxz
into
nop
fiadds
cli
iret
lods
cmp
cld
jg
test
test
mov
test
aad
pop
xor
dec
ficoms
shll
aaa
xor
jb
dec
pop
cld
xchg
pop
xorl
in
push
iret
pop
and
jmp
mov
xchg
xchg
stos
jb
les
andl
jae
and
mov
pop
xor
adc
xor
insl
addr16
mov
pushf
mov
sub
and
dec
lock
pop
imul
and
inc
sub
add
or
movl
adc
cmp
loopne
sbb
outsl
sub
sub
xchg
adc
dec
or
mov
pushf
push
mov
vaddss
xorb
arpl
add
mov
inc
hlt
mov
or
je
dec
mov
je
clc
test
inc
popa
jg
inc
in
jo
xor
xchg
or
outsb
fwait
pop
sbb
fcoml
or
jne
push
aad
outsb
dec
out
insl
test
push
inc
pop
mov
in
jno
into
mov
icebp
sbb
push
jne
mov
adc
mov
inc
push
xchg
sbb
dec
cmp
subb
fisttps
ljmp
pusha
jo
popa
mov
mov
pop
mov
mov
punpckhwd
pop
leave
insl
adc
or
ret
push
mov
lcall
pop
ret
lods
inc
insb
jb
mov
add
pop
jne
into
and
testb
inc
pop
mov
int
inc
andb
movsl
inc
inc
jns
rorb
or
mov
sar
push
push
push
push
push
push
fucom
push
sbb
stos
ret
aad
mov
xlat
mov
mov
mov
arpl
jns
data16
int
push
test
roll
loope
int
or
repnz
loopne
int
jae
mov
flds
cmp
mov
frstor
sub
outsl
sbb
fs
inc
repnz
ret
scas
test
jb
push
pop
pop
aad
dec
mov
jo
pop
push
mov
repz
movsb
xor
cmp
inc
loope
adc
loopne
lds
outsb
mov
repnz
out
mov
mov
int3
sbb
inc
add
xlat
mov
add
fisttpl
repnz
stos
fs
aam
pushf
test
pop
les
ret
ret
push
hlt
xor
jb
into
hlt
std
cmpsb
dec
cmc
jg
mov
adc
and
inc
jns
lea
test
in
sbb
pop
add
add
fdivr
movsb
cltd
inc
shll
push
jo
pop
cmp
enter
fistpll
and
push
es
pop
bound
mov
std
jnp
mov
and
leave
xchg
pop
cmp
push
sub
xlat
dec
sbb
rclb
fisubl
xor
xor
push
and
into
mov
test
ret
pop
pop
out
inc
lods
das
daa
push
and
push
jns
inc
adc
in
inc
mov
in
int3
mov
loopne
mov
lock
add
rcl
gs
add
dec
xchg
fmuls
andb
lock
jecxz
mov
xchg
daa
lea
arpl
xlat
sti
push
mov
sub
dec
xor
jg
pop
jg
cmc
sbb
adc
jp
in
or
cmpsw
jge
int
lret
cmpsb
js
push
stc
imul
adcl
aam
clc
test
push
ds
icebp
cmpb
mov
xor
aaa
or
sbbl
fs
int3
sbb
outsb
add
lahf
mov
push
xchg
xchg
ja
xor
in
sbb
sbb
xlat
out
sbb
stos
lret
mov
dec
faddp
loopne
xor
jb
adc
pop
or
xor
bound
movsb
fildl
mov
mov
xor
dec
fwait
add
scas
add
leave
sahf
push
in
mov
aas
rcr
sbb
jle
mov
mov
add
out
sub
js
loope
leave
or
mov
shrl
ja
pop
dec
push
cmovs
dec
test
leave
iret
test
dec
pop
and
xchg
push
xchg
mov
mov
cmovle
sub
cmpl
aam
mov
mov
xor
add
mov
xor
fdiv
and
mov
inc
les
out
jae
arpl
icebp
sbb
imul
or
mov
jmp
xchg
shll
imul
mov
xorb
mov
jbe
aas
or
outsl
pop
pop
and
sbb
insl
mov
xchg
sbb
enter
ss
xor
dec
sbb
shlb
repnz
mov
add
pop
sbb
stc
xchg
icebp
sbb
push
out
push
stos
sbb
cmpsl
nop
or
aaa
and
insb
push
outsl
filds
in
addl
xchg
and
pushf
xchg
inc
frstor
sar
cmp
mov
dec
mov
sub
add
mov
xchg
xor
cmp
sbb
jl
movsb
cmpsb
mov
xor
stos
lods
scas
inc
movsb
adc
adc
or
xor
notb
pop
sti
sbb
jge
or
lret
aam
mov
sbb
push
cld
cli
std
xchg
pop
sub
lahf
adc
jle
push
fs
mov
ret
insl
fbld
cs
test
xor
imul
cld
jge
sbb
out
pop
and
adc
dec
test
pusha
fdivs
lds
mov
vpunpckhdq
arpl
xor
icebp
dec
popf
jl
popf
cmp
loop
mov
je
cmp
add
push
push
orl
cmp
mov
inc
imull
out
xchg
ljmp
mov
sbb
add
inc
lock
or
int
pop
int
push
lret
add
push
add
cmp
jbe
les
mov
or
mov
xor
xchg
mov
pushf
test
cmp
and
insb
sbb
mov
jb
jmp
out
fucomi
cld
stc
pop
dec
stos
jle
inc
loope
jge
mov
data16
xchg
jne
aam
aad
pop
ljmp
mov
lret
mov
divl
popf
inc
jp
stos
insl
jp
loopne
mov
dec
lcall
dec
xchg
cmpl
inc
int
xchg
sub
repz
fnsave
bound
mov
xchg
stos
mov
mov
pop
in
fwait
push
xchg
fadds
das
xchg
or
mov
inc
add
pop
pushf
sbb
daa
imul
or
ret
int
adc
faddp
dec
fwait
mov
ss
push
xor
and
pop
push
xchg
dec
push
dec
push
js
adc
out
lods
add
pop
test
jne
pop
mov
sub
and
inc
arpl
xchg
inc
push
mov
and
cmpsl
fcmovnu
fadd
int3
mov
sub
pop
cmpsb
mov
data16
lret
jl
lret
int3
and
pop
leave
dec
ret
out
fstpt
iret
js
sbb
ret
and
stc
scas
mov
loope
inc
cmp
hlt
cld
sahf
mov
jecxz
sbb
addr16
xchg
inc
and
jo
push
add
jmp
dec
or
in
inc
mov
out
pop
inc
fbld
mov
xchg
adc
xorl
cmp
mov
cmp
push
cltd
test
flds
in
push
pop
rcr
imul
pop
or
mov
xchg
stc
test
cmpl
inc
mov
out
into
mov
pop
xor
stos
inc
lock
mov
movsb
mov
roll
cmpsb
mov
cmp
out
dec
sti
cwtl
cltd
clc
dec
and
add
cmc
add
inc
xor
dec
out
jne
adc
repnz
cmp
inc
mov
mov
inc
ret
aas
mov
add
aam
icebp
inc
or
xchg
push
cmp
fcom
fwait
xchg
das
adcl
sbb
popf
xchg
mov
inc
pop
mov
sub
push
aas
push
fadd
popf
jmp
rep
xchg
sbb
jns
das
xchg
xchg
lods
or
mov
sbb
sahf
xchg
or
and
popf
call
add
pop
or
jle
test
push
mov
push
in
lea
out
aad
add
add
or
xchg
popf
mov
mov
nop
push
add
push
cs
hlt
mov
mov
mov
mov
ret
xor
dec
cld
mov
jl
dec
neg
lahf
push
inc
stos
add
sub
jo
dec
sub
aaa
adc
mov
lock
or
dec
add
xor
sbb
and
jne
pop
pop
adc
sbb
in
cmp
jmp
icebp
mov
pop
add
adcb
js
popa
mov
fstl
shrl
cltd
bound
fmull
ret
push
jnp
sub
loope
jb
stos
aad
rolb
xlat
inc
dec
mov
jl
pop
and
loopne
mov
test
sub
js
cmpsb
pop
in
sahf
jb
pop
jb
jl
in
or
out
movl
lret
and
mov
es
sub
jg
outsb
adc
ret
pop
enter
clc
adc
inc
xor
ret
jl
mov
push
ljmp
sub
popl
push
ljmp
lcall
jl
adc
mov
add
rclb
xchg
rclb
jg
sbb
pop
pop
in
lret
in
int
dec
fwait
sarb
sbb
sti
cmp
pop
incb
sahf
es
sbb
sub
adc
es
lods
roll
xor
or
mov
test
into
stc
testl
add
jl
lcall
leave
dec
xor
jo
push
hlt
xor
insl
call
mov
mov
pop
dec
fs
lods
push
xchg
dec
dec
mov
and
and
lods
loop
lock
out
mov
or
dec
loopne
push
shl
dec
repz
xlat
es
mov
mull
into
cmpsl
adc
cmp
out
jnp
cmp
adc
dec
movsl
xor
dec
pop
push
int
cmp
clc
ljmp
sbb
test
out
xor
cwtl
dec
pop
sbb
repnz
cltd
xchg
lods
aaa
sub
es
inc
adcl
pop
adc
je
jno
mov
mov
add
popa
subb
mov
call
lcall
push
daa
jno
hlt
lds
daa
push
xor
inc
mov
nop
mov
push
popf
fisubrs
data16
lea
mov
inc
data16
xchg
cmp
xchg
outsb
sahf
xor
popl
xor
inc
out
jge
mov
push
stos
sarl
push
or
add
outsb
jno
push
imul
repz
int3
std
pmuludq
sub
pop
sti
mov
add
stos
mov
sub
adc
mov
ds
jmp
es
fbstp
mov
mov
pop
lcall
fucomp
dec
ja
adcb
or
mov
jecxz
xlat
xchg
and
pushf
adc
aas
inc
add
xchg
push
mov
jnp
lcall
aad
mov
jge
outsl
aas
xor
and
jmp
pusha
shl
mov
mov
dec
and
lea
aam
inc
testb
cs
cmp
lahf
mov
sti
jbe
push
xchg
pop
jle
cmp
fs
stos
scas
arpl
repz
push
shrb
mov
out
sub
pop
fs
js
out
mov
dec
and
jnp
pop
cmp
xor
pop
cmpsl
cmp
shlb
pusha
pushf
sarb
rolb
movsb
pop
fwait
mov
lea
hlt
dec
das
inc
sarb
mov
dec
and
out
aas
inc
inc
imul
push
movsb
jbe
stc
inc
xchg
fstp
xlat
jne
fcompl
sti
movsl
mov
iret
mov
loopne
and
or
mov
stc
xchg
shlb
add
pop
mov
cmp
mov
and
imull
rorl
push
xchg
lock
arpl
jbe
cmp
popa
les
fldt
lea
adc
int3
cmp
add
in
push
adc
cmp
test
jl
jle
daa
out
inc
data16
shr
out
add
lock
insl
das
push
push
or
dec
fists
mov
xadd
lret
ret
jle
pushf
jl
jle
call
fnstsw
pop
movsb
icebp
fsubl
fwait
daa
inc
out
mov
or
enter
cmp
fidivrs
xor
clc
pop
add
sbb
mov
sbb
test
ss
clc
pop
cmp
xchg
cmpb
aam
popa
fldenv
pop
cmp
cmp
hlt
lahf
inc
daa
movsl
inc
test
mov
xor
rcr
call
ds
push
insb
add
fidivl
cs
sbbb
addr16
jmp
lods
ror
mov
call
jno
loopne
xor
cld
mov
popf
cmpsl
mov
fidivs
in
cs
add
xchg
mov
or
shl
shld
loope
jg
cmp
adc
pop
pop
inc
ja
daa
repnz
test
imul
inc
imul
test
fincstp
mov
jbe
shl
div
dec
daa
and
xlat
or
xrelease
xor
scas
hlt
pop
push
and
cld
fmuls
fistps
xor
inc
sarl
cld
lock
jp
nop
jae
xchg
filds
add
lret
or
andl
mov
imul
icebp
pop
std
into
add
out
and
mov
jbe
out
pop
mov
sbb
jae
shrb
lock
mov
or
addb
jg
pop
mov
mov
ret
cmpsl
inc
sub
pop
cli
xor
dec
push
imul
pop
std
shl
je
mov
push
test
push
lods
jno
inc
negl
dec
movups
pop
pop
xchg
xor
ljmp
dec
cmpsl
idivl
mov
mov
repz
xchg
jns
add
out
stos
xchg
dec
push
ljmp
push
pop
insl
mov
inc
clc
push
cmpsb
jb
push
push
or
lods
push
out
jb
or
xlat
aas
movsb
push
ss
mov
aas
cmp
and
mov
fistps
jnp
shlb
mov
xchg
lahf
cwtl
lods
dec
fsubrp
es
mov
lahf
loope
push
shlb
in
add
stos
sub
mov
mov
pop
divl
outsl
mov
es
cmp
stos
mov
in
pop
xchg
popf
shrl
mov
fucompp
int
mov
rorl
mov
imull
pop
imul
jb
bound
dec
adc
ds
cmpsb
sarl
test
fadds
rorb
je
dec
ss
shlb
or
sbb
cmpsb
sbbb
clc
sub
jae
xchg
sbb
out
test
mov
inc
addb
loop
les
xchg
jb
jge
sbb
mov
and
scas
push
jo
sub
addr16
adc
sub
mov
cs
enter
or
cmp
sarb
cmpsl
lcall
movmskps
arpl
idiv
popf
add
scas
ljmp
scas
fisubs
push
mov
push
cmp
cld
pop
xchg
cld
xor
cmc
out
ret
lahf
in
in
or
jns
movsl
xchg
mov
lret
mov
outsl
push
mov
lock
enter
mov
xor
push
mov
pop
dec
jnp
stc
nop
dec
jae
xchg
call
inc
int3
xchg
lods
mov
subb
inc
stos
daa
mov
push
dec
dec
mov
fidivrl
rolb
loop
jae
aas
push
rolb
dec
mov
fildl
sub
pop
xchg
cmp
xchg
mov
sahf
cli
outsb
add
sbb
xor
cmp
inc
scas
mov
gs
imul
ror
ss
aas
add
incb
mov
in
cmp
push
in
andl
ret
popa
pop
add
xchg
xchg
or
decl
data16
out
push
jg
jmp
out
out
cmp
movsb
jle
cmpsb
jnp
iret
es
jb
inc
push
xlat
lahf
fnstenv
cmp
pop
pop
es
add
out
aaa
pop
cmp
xchg
sahf
outsl
jne
repz
xor
into
idiv
add
cmp
pop
or
mov
int
inc
out
cmpsb
mov
or
dec
or
mov
std
mov
adc
push
mov
lret
xchg
lahf
shrb
out
cmp
insl
jecxz
mov
lock
divl
loope
xor
leave
negb
and
xchg
dec
cmp
pop
int
cmc
jecxz
adc
in
cmp
lea
es
pop
and
sti
data16
jmp
pop
mov
outsl
mov
faddp
fwait
cltd
xchg
mov
cmp
cmp
jl
imul
or
push
xchg
xor
cld
cmc
xor
stos
cmp
imul
pop
out
outsb
imul
es
mov
cmpb
xchg
mov
pop
mov
inc
cltd
daa
mov
pop
out
out
std
fs
cld
daa
mov
xor
jge
std
cs
mov
pop
inc
xlat
dec
jg
imul
inc
mov
test
cmp
shll
add
int3
xorl
cltd
pop
fucom
inc
mov
pop
sahf
sbb
aam
sub
xchg
inc
jo
pop
imulb
ljmp
cmpsb
jmp
test
in
jmp
dec
insl
adc
negl
push
pop
pop
add
lods
mov
fdivrs
dec
jmp
popa
shrb
and
aaa
lea
xchg
cmp
and
pop
movsb
sbb
or
jns
cmp
xor
jp
xchg
cmpl
sub
test
xor
xchg
lds
mov
mov
loopne
add
pushf
and
inc
test
mov
je
jns
mov
sti
fdivrl
pop
pop
std
mov
or
adc
or
push
sub
mov
dec
fldl
std
test
push
jno
ds
std
inc
cld
std
popf
add
sub
lock
outsb
sarl
shl
aas
test
in
jne
and
pop
lcall
mov
pop
push
mov
adc
adc
sbb
stc
pushf
add
pop
jecxz
jns
sbbl
lcall
xor
jg
push
push
lcall
mov
lea
data16
cmp
rcr
lahf
sarl
out
popa
xor
dec
test
pop
inc
adc
movsl
js
pop
push
jle
push
or
dec
adc
xlat
pop
fidivs
xchg
lock
fcompl
ss
into
test
cmpsb
adc
mov
cmp
cs
sub
pop
int3
fmulp
jnp
adc
mov
mov
hlt
jecxz
lock
xchg
dec
rorl
loopne
ret
xor
inc
int
movsb
xlat
push
je
idivl
dec
insb
test
sub
daa
jnp
and
adcb
les
mov
mov
push
jmp
out
popf
aam
or
add
lods
subb
rol
imul
xorb
or
stos
and
push
int
popf
cmc
or
andb
jo
sbb
or
shl
lcall
out
jns
jmp
mov
sbb
adc
out
mov
gs
xchg
mov
out
mov
add
dec
mov
sbb
push
test
je
mov
mov
outsl
or
movsl
jno
cmpb
sub
mov
outsl
xor
cld
xchg
inc
sub
stc
xor
pusha
push
adc
cli
and
subb
rorb
cld
dec
xor
sub
sub
in
sbb
add
fildl
mov
jno
sub
iret
fistpl
ja
jns
test
push
ja
mov
add
mov
jns
aam
mov
xchg
pushf
mov
mov
out
dec
and
je
fildl
xchg
popa
and
out
mov
ret
adc
out
xchg
lcall
adc
fists
mov
mov
adc
sbb
mov
ret
fdivrs
jnp
sub
jbe
das
push
xor
push
js
pop
and
int
or
push
sti
in
xchg
sub
mov
cmp
xchg
sub
iret
lods
ret
jo
rorb
cmc
stc
sahf
enter
loope
dec
mov
xor
pop
ud0
fwait
xchg
sti
xor
push
xor
mov
in
scas
pop
in
cmc
mov
mov
aam
popa
cmpsl
xor
inc
cmpl
mov
inc
inc
jne
pop
pushf
sub
xchg
loopne
push
sti
inc
insl
mov
pop
inc
outsb
mov
fcoml
sbbb
add
mov
pop
cmp
xchg
idivb
xor
les
popa
fmulp
fwait
sub
xor
push
in
lock
lods
mov
jnp
shl
in
andl
mov
cmc
les
ror
push
clc
out
pop
lds
out
lods
mov
gs
outsl
jns
rcr
push
or
mov
cli
sub
dec
ds
in
xchg
arpl
jo
jg
mov
iretw
dec
pop
mov
bound
mov
nop
mov
loope
mov
inc
repnz
mov
lcall
xor
test
adc
int3
cmpsb
mov
scas
cmpsb
mov
fcomps
movsl
jle
fistps
mov
test
jecxz
jmp
out
xlat
dec
pusha
outsl
adc
jne
sub
pop
and
push
push
dec
lds
mov
sbbl
int3
orb
adc
insb
test
into
adc
cs
dec
xchg
jb
mov
call
and
cmp
inc
push
jae
mov
mov
sbb
xor
inc
orl
or
push
adc
inc
and
in
sbb
incl
xor
repz
leave
out
cltd
jmp
sarl
pop
stc
mov
rcll
or
dec
cmpsl
jecxz
jp
fnstcw
adc
rorl
repnz
outsb
dec
test
xchg
or
jmp
negb
push
pop
and
adc
pop
xchg
ja
mov
pop
int
fldenv
add
inc
lds
cmp
pop
mov
rorb
push
push
and
fndisi(8087
cmc
popf
cmp
push
cli
push
adc
add
mov
ljmp
and
sbb
cli
and
xchg
lds
add
dec
outsb
pop
popl
into
data16
jae
dec
pop
cmp
test
bound
enter
dec
xor
jno
dec
idiv
mov
cmp
or
mov
popf
shrb
lds
sbb
aas
lods
fidivrs
mov
lcall
push
cmp
ret
cmp
pusha
fdivrl
incb
in
push
adc
xchg
mov
add
outsb
mov
arpl
pop
and
add
xchg
rcrb
dec
pushf
sub
jne
out
outsb
xor
inc
scas
es
insl
sbb
ja
int
dec
xchg
mov
mov
and
pusha
fwait
js
out
test
sub
cltd
ret
loope
call
push
mov
push
sbb
orl
lea
mov
test
movsl
mov
jo
mov
mov
inc
rorl
sub
jb
mov
cmp
inc
subl
pop
or
insl
dec
jno
cmpsb
or
rcrl
test
and
fimull
xchg
ret
inc
test
mov
lock
out
mov
cmpsb
arpl
gs
inc
adc
xchg
or
push
je
popa
mov
fdivrl
or
fwait
xor
cltd
lock
adc
inc
loope
xlat
xor
cmpsb
xlat
add
js
pop
add
jl
in
aam
push
hlt
out
jle
popf
das
mov
jg
cwtl
fstpl
leave
fwait
pop
lret
stc
add
push
inc
cmp
lods
scas
sbb
mov
iret
dec
adc
pop
adc
and
mov
jbe
push
enter
sub
inc
sarb
or
daa
ror
jl
les
inc
pop
add
aaa
xchg
je
mov
inc
jo,pn
pop
sbb
mov
jo
cmp
jp
popf
push
push
cmp
fmull
ljmp
int
xchg
dec
cli
xor
mov
orl
sbb
jo
add
incb
dec
inc
xchg
into
or
out
xchg
sbb
hlt
dec
test
neg
sarl
cmp
xchg
sahf
adc
xor
je
push
bound
cmpsb
hlt
dec
pushf
rcrb
dec
in
xchg
ss
loop
pop
inc
scas
cltd
and
dec
inc
sbb
pop
insl
stos
mov
shrb
lods
clc
filds
mov
jmp
push
sbb
xchg
cmp
add
push
or
mov
sbb
add
daa
aam
add
fwait
jl
cld
add
dec
mov
int
ds
or
fadds
inc
and
jmp
mov
test
adc
sbbb
jle
sti
jno
hlt
sub
push
gs
dec
mov
out
and
mov
push
pop
cmp
cmp
mov
lret
test
ljmp
push
rcr
and
cmp
mov
stc
ljmp
pop
fstpt
fmulp
lods
mov
xor
mov
adc
add
xor
push
lahf
jg
or
stos
fldcw
mov
mov
mov
ljmp
mov
mov
dec
and
jnp
enter
and
insb
je
pop
mov
sub
pop
into
in
aam
out
dec
push
xchg
xor
fadds
stc
rolb
lret
js
dec
sbb
xor
sub
mov
jne
mov
and
inc
lods
mov
fstps
push
sub
push
pop
mov
mov
int3
test
sub
imul
les
ret
mov
push
scas
cltd
pop
xor
and
adc
mov
or
pop
int
in
inc
orl
andb
push
hlt
outsl
in
xor
rcrb
add
mov
mov
xor
in
sar
scas
or
push
xchg
mov
push
fidivl
push
xchg
mov
add
jb
mov
push
adc
arpl
mov
push
in
sub
into
inc
add
ret
idiv
out
insb
ja
inc
arpl
mov
pop
cmp
mov
mov
jb
xchg
hlt
aad
movsb
dec
in
sbb
jns
addr16
dec
es
mov
lods
iret
ret
in
gs
dec
sub
pop
inc
xchg
mov
aas
imul
jp
movsl
cli
fucom
test
push
call
cmp
ret
sbb
fidivrs
filds
stc
popf
jg
leave
add
dec
adc
xor
adc
fldt
pop
fisubl
pop
mov
xor
sub
dec
dec
pop
mov
stos
cli
jecxz
mov
aam
cld
push
lds
cmp
mov
mov
stos
sahf
in
loope
outsl
inc
daa
enter
mov
out
in
rorb
in
add
and
dec
lret
orl
and
js
mov
je
pop
mov
jecxz
popa
rcrb
xor
jmp
mov
andl
mov
jl
xchg
jo
mov
pop
clc
movsl
push
mov
repnz
xchg
test
lcall
lcall
sahf
push
push
data16
dec
int3
pushf
cli
cmp
add
and
mov
xor
mov
ljmp
fwait
sti
cmp
shll
iret
in
lock
mov
lret
in
mov
mov
aaa
push
mov
xorl
adc
push
jb
testl
repz
jp
lods
lock
dec
repnz
cmp
inc
adc
sarb
and
lret
cli
jb
insb
lcall
jb
ret
stos
hlt
mov
unpcklps
adc
xor
push
cwtl
inc
dec
aaa
loope
lds
movsl
rolb
adc
gs
cld
and
xor
gs
pop
mov
sarb
repnz
push
fimuls
and
dec
pandn
mov
test
lret
adc
imul
insl
rcrl
scas
or
mov
popf
pop
lahf
scas
notl
popa
xlat
nop
xchg
dec
std
roll
xchg
icebp
pop
test
ds
and
cmpsb
cld
xchg
add
sub
mov
shrl
lret
push
test
stc
inc
mov
cld
or
mov
add
xor
seto
out
ret
movl
repz
cmp
popa
insl
xchg
push
fldl
mov
jno
add
dec
push
cld
or
xor
inc
push
push
decl
shl
sub
scas
fsub
dec
test
mov
mov
mov
in
ret
lret
pop
nop
cs
outsb
push
cs
je
mov
dec
dec
mov
and
stos
adc
ss
bound
xchg
inc
xlat
shr
out
fwait
add
inc
push
sub
icebp
add
xchg
xchg
movsl
jp
pushf
popa
mov
mov
pusha
pusha
dec
and
movsb
lret
outsb
push
shrl
sti
insl
sbb
sub
fcoml
dec
jmp
mov
mov
jmp
mov
inc
push
in
fsubl
inc
inc
aam
shrb
das
enter
repnz
adc
mov
push
adc
out
inc
cltd
lods
rcl
add
add
shr
dec
rol
loopne
cltd
push
adc
jo
sbb
dec
aaa
mov
loopne
popf
in
add
adc
sbb
cmpsb
jmp
add
dec
movsb
xchg
xor
fwait
adc
filds
xchg
and
lret
cmp
mov
stos
out
push
not
into
xchg
loope
inc
outsb
out
sbb
add
in
push
pusha
inc
xchg
call
mov
ret
adcb
adc
aaa
adc
in
fsubs
fistps
arpl
xchg
mov
jmp
xor
sbb
daa
int
jnp
or
pop
dec
push
and
push
sbb
adc
add
pop
cli
fimuls
loopne
sbb
mov
sarb
stc
loope
in
fs
cmp
out
inc
jp
shlb
leave
jmp
inc
insb
sbb
es
sub
mov
xchg
push
or
sti
outsb
xor
jg
loope
sti
leave
pop
jle
test
sbb
out
and
and
daa
cmp
push
xor
iret
push
or
mov
in
in
xor
ss
decl
push
cmp
ds
or
pop
inc
xor
or
insb
mov
xlat
jns
adc
sub
cwtl
ljmp
xor
iret
dec
dec
out
insl
addl
orb
xor
in
jb
loopne
cmc
dec
cmc
fwait
ds
into
lds
xor
sbb
mov
mov
aaa
cli
inc
adc
addr16
jo
xorl
xchg
pop
or
xchg
lahf
dec
lret
xchg
push
push
data16
sbb
mov
out
in
gs
imul
out
insb
movsl
repz
pop
push
std
xor
mov
xchg
mov
outsb
sbbl
jg
pop
pop
inc
outsb
in
into
sub
xchg
mov
icebp
sbb
test
sbb
jp
fisubs
sahf
lea
xchg
jmp
test
out
ljmp
cmc
lods
mov
not
or
enter
inc
cmp
push
jae
outsb
sub
sahf
mov
sub
bound
xchg
push
jp
sbb
jae
les
test
aas
lods
rcrl
dec
and
add
in
add
idivl
cmp
sub
adc
imul
xchg
lcall
daa
pushf
ret
fdiv
push
aas
xlat
rorl
enter
sbb
jb
call
sbbl
and
ret
fstl
sbb
sar
adc
push
out
push
add
test
pop
mov
mov
dec
dec
stc
mov
cmpb
push
lea
push
lret
stc
or
dec
or
aam
add
inc
push
in
mov
mov
test
les
add
lahf
sbb
sbb
mov
sub
test
xor
insb
loopne
scas
int3
push
call
addl
cmpsb
insb
xchg
mov
mov
ret
jecxz
cs
stos
testb
repnz
cmpsb
out
push
insl
scas
jo
push
xorl
inc
into
jns
push
hlt
in
iret
and
jbe
test
lods
jne
pop
push
fidivs
or
and
jne
jge
sbb
bound
cli
mov
mov
loopne
ret
pusha
pop
jae
rcrl
vandps
aam
mov
out
jmp
push
adc
stc
ss
pop
out
mov
push
inc
pop
shrl
dec
add
stos
shrl
scas
and
loop
inc
inc
push
inc
mov
jbe
repnz
std
idiv
cmp
mov
and
cmpsl
mov
dec
pop
notb
movsl
xor
push
shll
in
push
addr16
mov
mov
push
lahf
ja
xor
or
push
loope
clc
inc
dec
pop
in
pop
sub
mov
xlat
lcall
movsl
data16
jne
and
ficoml
mov
xchg
addr16
out
mov
mov
adc
repnz
inc
divl
mov
jg
andl
push
ljmp
xor
push
pop
insb
dec
stc
xchg
in
iret
bswap
pop
sbb
pop
test
cmpl
and
xchg
jb
jp
fiaddl
sbb
mov
imul
ret
mov
enter
cwtl
add
ljmp
xchg
shrb
aam
movsb
std
jmp
test
mov
popf
out
pop
inc
add
out
mov
jb
mov
fnstcw
cld
dec
loope
imul
dec
jmp
fidivs
outsb
lods
mov
xor
pop
push
cmc
dec
and
lahf
sbb
mov
out
dec
icebp
sub
mov
psubsw
xor
xchg
inc
or
inc
dec
pop
and
push
fisttps
ss
inc
jp
pop
lock
imul
jb
push
popa
ja
movsl
outsb
sbb
mov
jo
pop
mov
cmp
js
push
jp
mov
pop
xchg
inc
cmpsl
arpl
cltd
jnp
test
repz
nop
loope
loopne
pop
cmp
negl
xchg
outsl
int3
lock
mov
cmpsb
dec
push
js
xchg
and
mov
cld
es
sub
test
out
lcall
cld
scas
dec
cli
jmp
rcrl
push
mov
flds
or
mov
mov
dec
pop
push
neg
push
sbb
lods
pop
mov
xor
xchg
cmpsl
cmpsb
or
jp
mov
sbb
popf
lcall
or
inc
mov
add
inc
sub
jecxz
pop
hlt
fwait
adc
jno
aaa
imul
pop
adc
stc
mov
pusha
xor
mov
add
mov
dec
faddl
push
cmc
sarl
aam
or
pusha
inc
lahf
iret
lds
mov
and
xchg
shl
mov
dec
sbb
enter
arpl
jecxz
jle,pt
dec
push
fs
or
out
mov
sub
int
js
repnz
js
mov
repnz
loopne
loopne
call
add
and
push
mov
aad
mov
jg
xchg
sbb
lcall
mov
pop
mov
jp
aaa
sbb
xchg
fdivrp
cmp
add
rcrb
add
xchg
lahf
ficoml
sub
sub
cmpl
outsb
fwait
inc
jge
incb
cld
imul
out
das
or
cwtl
jp
inc
vsubpd
les
in
sar
and
ret
outsl
movsl
jecxz
pusha
cmpsb
and
and
ja
rorb
inc
fldenv
xor
aas
mov
nopl
mov
inc
subb
aas
inc
shll
pop
imul
mov
in
dec
pop
insl
add
sbb
aaa
outsb
inc
mov
jle
jmp
xor
in
cs
shrb
or
data16
xchg
and
aam
adc
test
jnp
mov
xchg
push
mov
sbb
mov
xor
push
jmp
aad
gs
inc
addl
add
adc
push
inc
hlt
xchg
or
mov
outsb
test
sahf
mov
ljmp
dec
xchg
rorl
notl
adc
std
add
dec
out
rcll
or
sub
lods
fisubl
mov
js
cld
lods
out
inc
ficomps
adc
or
lock
pop
lcall
xchg
or
adc
jbe
xchg
add
xor
gs
icebp
rcr
xchg
cli
stc
xor
dec
out
lahf
jo
push
test
sarl
cs
idiv
dec
rorb
pop
sub
push
sub
out
dec
mov
mov
out
xchg
ret
xor
inc
lcall
movsl
repz
cmpsl
mov
ret
pusha
and
sub
lock
inc
jl
aaa
xor
jle
jbe
std
xchg
jle
bound
es
arpl
pop
pop
jb
rorl
and
aas
cmc
gs
jo
mov
cmpsb
mov
dec
negb
sbb
mov
ds
std
or
xlat
pop
clc
adc
jecxz
jge
call
leave
addr16
aam
lds
shl
ja
inc
push
dec
mov
inc
test
scas
out
stc
cmp
add
aaa
cmp
repz
jae
icebp
lods
xchg
idivb
mov
or
call
and
mov
cmp
mov
jno
lds
shrb
cmc
inc
fwait
sbb
mov
add
mov
or
jno
ljmp
adc
jnp
mov
or
clc
mov
into
xor
lods
adc
and
aas
insl
decl
inc
mov
mov
imul
cltd
add
inc
jp
roll
inc
stc
adc
aaa
ret
pop
push
cmpsb
rclb
andb
stos
int
jno
cmp
in
imul
mov
es
js
das
push
xchg
jle
test
mov
or
icebp
imul
sbb
ljmp
sbb
sbb
lods
push
stos
sub
mov
inc
xor
outsl
pop
push
sti
cltd
fldt
pop
imul
adc
mov
jl
popa
out
call
add
sbb
ja
sub
aad
ljmp
and
ljmp
je
out
sub
imul
cmpsl
jmp
ret
inc
in
rol
mov
and
cld
rcll
add
mov
in
mov
test
cs
jp
push
lret
test
lfs
out
std
jecxz
or
iret
mov
mov
stos
push
daa
or
add
outsb
xchg
shlb
adc
adc
cld
movups
into
js
scas
hlt
mov
aas
out
cltd
repz
or
inc
mov
test
mov
add
push
mov
fisubs
iret
stos
dec
rcll
sbb
repnz
cmp
dec
out
pop
icebp
stc
xor
adc
js
addr16
call
sub
rclb
jno
bound
add
and
fcomi
cmp
test
pop
push
push
dec
cmp
mov
pop
pop
xor
mov
jo
jl
sarb
adc
cltd
lea
jl
jb
mov
mov
mov
pop
gs
lret
pop
cltd
push
inc
mov
pop
dec
sub
adc
mov
das
lea
ja
inc
inc
stos
repz
inc
cwtl
movsl
stos
jge
scas
hlt
or
fcmove
adc
shl
pushf
scas
pop
lods
adc
dec
popa
mov
sub
rcrl
faddl
sbb
out
xor
xorl
ret
xchg
dec
les
and
lds
test
out
stc
pop
scas
aaa
ss
cmpsl
rcrl
lahf
add
hlt
cmp
and
push
adc
and
sahf
test
test
mov
cwtl
mov
sbb
fs
inc
push
mov
jne
adc
stc
jne
inc
popf
sbb
daa
adc
arpl
cs
dec
mov
and
aam
lea
ljmp
cmp
xor
js
or
adc
pushf
cmp
push
jnp
cwtl
daa
lds
push
jp
out
ds
mov
lods
sbb
cltd
push
inc
cmc
pusha
xor
sub
in
sub
das
push
pop
dec
faddl
rclb
dec
nop
ss
mov
outsl
mov
dec
adc
jge
clc
cmp
push
jmp
shlb
mov
mov
lods
mov
imul
cmp
dec
or
mov
in
pop
push
and
dec
and
mov
push
jg
cltd
pop
outsl
lock
fsubs
xchg
mov
out
insb
and
and
jmp
cld
and
lcall
jl
xor
stc
cmp
inc
outsl
jbe
stos
push
inc
lret
or
int3
mov
pop
push
jge
clc
and
pusha
xor
pop
rorl
lods
fstps
out
jae
inc
cltd
bound
and
mov
repnz
ds
push
xchg
cmp
data16
ret
les
out
lret
mov
xchg
pop
push
popf
push
pop
jp
xchg
jle
inc
mov
inc
aaa
xor
push
fwait
pushf
out
andl
addr16
adc
mov
cltd
in
mov
dec
mov
movsl
repz
int3
xchg
cmp
cmc
dec
sub
push
mov
xor
xchg
aaa
pusha
add
std
mov
mov
sub
xor
sti
int3
subl
jne
dec
loop
push
shll
loope
xchg
outsb
mov
subb
pop
in
push
rolb
mov
mov
and
leave
jns
in
test
mov
push
arpl
pop
jae
cmp
sahf
addr16
decl
xchg
loop
ljmp
xchg
fcomps
jb
mov
mov
dec
aam
xchg
sbb
inc
test
cli
sub
add
mov
or
and
mov
add
push
inc
push
or
inc
mulb
mov
xor
hlt
mov
and
pop
pop
lcall
cli
call
adcb
mov
adc
sbb
adc
pop
or
xor
add
fsubs
xchg
test
stc
xor
stos
mov
or
mov
jbe
lret
fstps
push
or
lea
xchg
ficomps
mov
shl
mov
jae
pop
clc
xor
add
ret
lock
add
bound
loope
sar
xchg
out
mov
iret
insl
xor
nop
sub
add
leave
sahf
incl
xorl
sub
les
fbstp
xor
cwtl
add
cmc
sbb
hlt
mov
scas
aad
fcmovnb
mov
sub
into
inc
xchg
pop
dec
in
jnp
cmpsb
iret
andl
cmp
pop
cld
negb
sahf
js
call
orb
sub
xchg
pusha
popa
add
mov
test
adc
xchg
jnp
scas
sub
mov
ja
pop
xor
xor
sbb
fidivrs
movsb
pop
hlt
sub
insb
pop
fs
push
fwait
sbb
cmp
in
out
fstps
xlat
mov
ficompl
adc
ss
and
push
arpl
arpl
ds
int3
jo
cwtl
mov
int3
pop
xorl
pop
jno
repz
mov
sbb
rorl
add
lods
idivl
xor
ret
ret
sbb
mov
pop
shlb
testb
add
mov
popf
mov
insl
mov
stc
adc
jb
aad
jns
out
popf
or
and
shrl
ret
arpl
daa
mov
mov
lret
pop
cmp
jl
dec
es
out
jg
lret
shl
fwait
insb
sub
rcl
xchg
push
lret
push
das
test
pop
inc
call
xlat
jmp
and
inc
jae
pop
push
jle
mov
mov
dec
test
testb
and
cwtl
iret
pushf
les
aam
dec
es
sahf
out
rcl
mov
sub
arpl
and
inc
add
mov
or
sbb
mov
pop
incl
movsl
lret
mov
mov
push
push
xchg
lahf
fsubrl
outsb
and
movsl
stc
and
add
loopne
in
push
out
inc
or
test
cmc
mov
dec
mul
add
shrb
mov
pop
cmovle
aas
pop
push
sub
push
out
xchg
out
and
in
adc
push
push
add
sarl
cmp
push
xor
rolb
jne
mov
stos
mov
jne
push
repz
in
movsl
stos
sbb
mov
rep
stos
ss
xchg
sti
jb
popa
add
stc
ss
into
shrl
ja
push
jecxz
sbb
inc
cmpsb
clc
in
repnz
shll
aaa
lods
ss
das
mov
cmp
ja
mov
cmp
sbb
xchg
inc
stc
pop
xor
inc
enter
std
add
mov
fsubr
or
lea
shrb
ja
xchg
and
push
mov
loop
push
mov
shr
ds
add
arpl
mov
enter
lcall
xchg
mov
push
into
inc
sbb
les
iret
cltd
out
dec
mov
call
lea
xor
cli
push
ljmp
and
in
xchg
sbb
jg
push
push
and
adc
ss
dec
mov
adc
push
mov
mov
repnz
int
push
xor
cmp
test
or
daa
mov
pop
stos
cmpb
aad
pop
add
mov
movsl
dec
pop
inc
mov
jae
mov
test
clc
fwait
mov
mov
or
pop
sbb
fcmove
cmpsl
xchg
dec
xchg
mov
andl
inc
into
dec
push
loopne
fadds
rcrl
pop
std
mov
cmp
inc
mov
test
adcl
mov
jecxz
mov
dec
hlt
jmp
cli
jge
dec
mov
adc
xor
sub
repz
cmp
mov
mov
xchg
inc
fnstsw
pop
mov
jo
idiv
push
addr16
push
inc
jge
add
test
and
popa
mov
adc
dec
mov
push
jne
arpl
insl
jns
add
jg
and
push
ds
in
pop
mov
aam
jnp
xchg
dec
mov
inc
or
lret
dec
cld
jne
sbb
mov
rorl
sub
mov
pusha
ss
cmp
sti
loop
pop
adc
call
jmp
je
jb
in
jecxz
sub
in
and
fiaddl
jle
jo
ja,pt
loop
sbb
inc
or
jno
jno
fisubl
repnz
push
outsl
adc
ds
js
pop
sbb
mov
xorl
mov
jnp,pn
cmc
seta
test
mov
adc
or
mov
and
rcl
insl
cmp
ret
cltd
mov
adc
lcall
mov
pop
call
loopne
sub
std
xchg
mov
mov
mov
fwait
push
or
cli
sbb
jl
daa
pop
loopne
pop
loopne
shlb
inc
popa
add
xchg
xchg
lds
in
push
add
stos
stc
sub
push
js
xchg
mov
push
xor
mov
mov
and
jge
arpl
add
loopne
mov
movsl
ljmp
jno
mov
fsts
mov
ror
jbe
jns
push
mov
xchg
push
mov
xor
mov
dec
test
or
lods
xchg
inc
testl
xor
add
jbe
mov
and
xor
sub
dec
lahf
shlb
inc
arpl
jmp
dec
xlat
push
dec
push
lods
sbb
data16
imul
mov
dec
std
pop
jo
aam
stos
xchg
sub
and
mov
xchg
xchg
and
xor
pop
rcrb
add
jbe
bound
mov
movsb
push
add
popa
inc
jmp
mov
repnz
mov
test
out
filds
int
pop
jne
or
cld
sbb
pushl
push
fwait
aam
push
aad
inc
adc
ds
sti
mov
js
in
out
adc
and
rol
adcb
mov
push
jae
insb
adc
inc
xchg
sub
cli
sbb
or
and
dec
daa
xchg
dec
movsb
mov
add
push
clc
jne
stos
and
cmp
jmp
repz
sbb
mov
out
inc
add
orb
jg
icebp
xchg
dec
inc
xchg
mov
mov
loop
shlb
mov
rcrl
jbe
xchg
dec
enter
mov
push
mov
adc
inc
mov
mov
stos
leave
js
and
leave
mov
pop
cltd
scas
jno
sbb
and
icebp
add
lret
dec
mulb
mov
and
gs
inc
mov
mov
jns
sahf
out
adc
cmpb
bound
aam
std
adc
xchg
cmp
test
ret
pop
aad
xor
or
inc
xchg
insl
xor
xlat
addr16
dec
jmp
cli
dec
inc
push
and
je
dec
add
negb
or
push
add
test
int
jne
iret
push
lds
mov
jne
sbb
imul
and
lods
test
sahf
adc
cli
out
aad
or
int
adc
push
out
jge
dec
in
xchg
popa
inc
dec
movb
test
cld
mov
lea
pop
sub
cmpb
in
mov
popa
cwtl
int3
adc
daa
pop
movsl
je
cltd
pop
loopne
inc
cmp
outsl
push
push
sub
mov
lret
lret
jno
push
inc
outsb
lods
xchg
cmp
pushf
pop
xorl
add
test
outsb
xor
outsb
outsl
add
mov
imul
incb
loopne
orl
xchg
inc
mov
and
dec
aam
aad
pop
es
and
xchg
push
mov
push
adc
mov
aad
mov
int3
or
fdivp
adc
fwait
jge
inc
aad
mov
push
lret
push
push
shrb
icebp
pop
or
pushf
mov
pop
jp
push
inc
sub
sub
pop
mov
jge
mov
xchg
sbb
cmc
das
inc
jecxz
mov
insl
movsl
shr
mov
adc
test
lcall
jne
test
out
pop
add
mov
sti
dec
push
pop
adc
iret
rcrb
mov
push
call
fcmovb
add
ret
mov
out
icebp
mov
fadds
scas
imul
dec
sar
aad
add
ret
xor
dec
pop
push
mov
mov
data16
or
xchg
push
add
ja
leave
popf
decb
sti
or
jl
repz
das
sub
insb
sbb
push
push
adc
lods
mov
dec
sub
pop
ljmp
sahf
repz
ss
mov
adc
cmp
mov
xchg
insb
lcall
mov
xchg
adc
jg
jge
xor
sahf
arpl
fidivrl
imul
mov
test
cli
out
add
xor
cmp
enter
adc
lock
add
dec
imul
mov
fs
sti
xor
sub
adc
adc
flds
jns
inc
sub
mov
pop
loop
mov
sbb
loopne
and
or
pop
mov
and
jae
sbb
inc
xor
test
rorl
test
std
add
fisubs
push
xor
cli
adc
sbb
push
fincstp
js
mov
sbb
aas
pop
lods
fisubrl
gs
in
add
mov
int3
andl
scas
sbb
mov
add
fs
pop
popa
fsubrs
pushf
std
shlb
testl
stc
pop
divb
cmp
into
in
fst
push
test
xor
and
jmp
xor
clc
lds
pop
imul
xchg
addl
dec
push
pmulhw
xchg
jmp
out
loope
in
xorb
push
cmp
outsl
xchg
out
inc
lret
add
mov
pop
arpl
stos
adc
xor
test
inc
adc
xor
enter
xor
test
shlb
jne
mov
xor
cld
emms
inc
stos
jb
test
sbb
cmp
jb
mov
push
subb
jno
adc
pop
stc
imul
jno
cli
mov
lods
or
inc
jle
sbb
sarl
xor
xchg
loopne
fistps
repz
fwait
mov
sub
lret
push
jno
jno
iret
mov
mov
mov
jecxz
ja
mov
xchg
shl
mov
call
mov
xchg
inc
hlt
in
or
and
aaa
add
xlat
ja
filds
pop
push
sbb
push
lds
push
bound
xchg
fnsave
mov
es
lcall
xor
sahf
ret
sub
jmp
test
and
dec
pop
lods
or
push
pop
aad
repz
push
push
jmp
sarl
cmpsl
pop
fistl
cmp
xchg
lock
aas
xor
iret
sbb
adc
gs
lret
jno
sub
and
mov
jecxz
in
incb
add
mov
sbb
jg
jb
outsl
pop
rcrb
xor
pop
push
push
sbbb
test
icebp
pushf
stc
pushf
fucomp
xchg
mov
cmpsl
insl
popf
cmpl
mov
push
xor
aaa
insb
pop
dec
cmp
cmp
in
in
pop
imul
mov
mov
pop
and
std
sub
lds
mov
jecxz
add
std
dec
fcoml
sub
fs
inc
out
adc
xor
fstpt
xchg
fidivrl
add
push
movsl
xchg
sti
inc
cmc
sub
xchg
and
out
or
and
push
out
shrb
aas
push
pop
adc
es
lds
test
dec
popa
jns
jge
hlt
lds
add
imul
pop
pop
or
loop
loopne
in
adc
push
in
decl
mov
dec
fadds
sub
jb
pushf
mov
adc
shr
lea
fs
add
mov
jb
stc
jae
adcl
sub
sbb
dec
fs
xlat
mov
cwtl
sbb
xor
jecxz
out
xchg
dec
jae
addl
mov
sbb
loope
adc
dec
shrl
fs
inc
ret
int
in
dec
lret
les
inc
add
sub
add
xchg
aam
out
roll
mov
lcall
pusha
xchg
mov
cli
push
gs
mov
cld
stos
cmpsb
and
andl
pop
adc
add
or
xchg
ror
inc
lea
cmp
cmp
iret
mov
cli
mov
mov
movsl
or
jp
enter
cmpsl
pusha
adc
lahf
mov
mov
ficoms
cmp
add
xchg
push
push
fstl
aam
jecxz
lcall
sub
mov
xor
xchg
stos
je
pop
iret
std
mul
ret
in
and
jb
les
mov
fcomi
add
sarb
and
pop
es
sti
sub
mov
mov
dec
adc
stos
add
dec
lahf
or
pop
pop
push
mov
sbb
stos
sbb
aad
loop
cmp
sub
cmp
bound
xchg
xchg
fstl
mov
je
je
xor
and
neg
in
push
xchg
push
sub
fs
dec
cmp
adc
sub
sub
loopne
fsts
lret
aaa
and
or
mov
mov
adc
test
pop
icebp
fs
pop
mov
dec
pushf
push
dec
cmpsl
xchg
push
es
in
mov
test
popa
mov
aaa
les
or
shlb
iretw
mov
push
data16
testb
push
dec
or
cmc
dec
imul
mov
mov
xor
mov
pushf
out
push
xchg
jne
or
jmp
scas
jp
out
dec
pop
enter
dec
adc
ds
push
pop
push
dec
mov
andb
rcl
mov
push
add
ret
or
mov
sub
adc
lcall
or
ljmp
sub
gs
test
adc
imulb
cs
icebp
cld
push
add
and
xor
and
ss
pop
aas
xchg
fnstenv
cmp
pop
ret
mov
adc
push
jns
sub
pop
js
xchg
push
daa
repz
mov
in
push
jno
push
or
sub
dec
enter
jns
dec
cmc
push
scas
sub
sarl
sbb
aas
lods
xor
mov
pop
testl
xchg
xchg
je
fisubrs
fidivs
in
xlat
pop
out
mov
pop
adc
inc
cmp
aas
fcmovbe
scas
mov
stos
mov
jmp
pop
xchg
mov
cld
shll
arpl
data16
sub
std
les
or
push
sbb
and
aam
js
lcall
inc
inc
xchg
sub
xchg
repnz
negl
test
push
push
arpl
jns
outsb
mov
mov
lret
fimull
mov
fdivr
xlat
ljmp
jno
adc
shlb
or
cmpsl
subl
push
cld
and
mov
add
pop
mov
xor
repnz
xor
mov
mov
mov
adc
pop
and
add
and
xchg
daa
or
mov
jmp
test
xchg
fstpl
pop
roll
gs
dec
pusha
sarb
ret
dec
xchg
cld
and
push
mov
mov
adc
rcrl
sub
jns
lods
sti
mov
sbb
adc
xor
outsl
mov
or
clc
pop
push
shrb
sbb
fcoml
loopne
sbb
movl
mov
fcompp
xor
mov
es
stos
lea
adc
and
jbe
shrb
sbb
inc
cmp
or
sub
andb
daa
adc
sbb
jno
cmp
pop
jnp
test
cwtl
cwtl
jmp
lods
mov
out
fstps
daa
lods
mov
cmpsl
add
test
jo
mov
stc
mov
sbb
lcall
stc
stos
mov
nop
xor
in
fs
push
xor
test
andl
inc
adc
push
mov
repz
xor
jno
stos
js
sub
cmc
xor
insl
shl
lock
jecxz
adc
gs
out
xor
xlat
adc
mov
scas
or
lcall
mov
cmp
cmp
ret
jo
movsb
xor
leave
rolb
mov
and
lahf
loope
les
cmp
pop
dec
test
mov
ss
sbb
cltd
jge
les
and
sub
sahf
cmc
stos
push
mov
and
lcall
sub
inc
xor
sbb
adc
pop
sub
xor
push
push
fbstp
and
mov
adc
dec
lahf
pop
dec
xchg
out
mov
rcrb
ja
sub
xlat
mov
aam
push
or
repz
push
mov
push
movsl
push
shll
xchg
stc
push
push
ret
add
and
or
cwtl
ret
and
ss
jl
or
mov
jp
gs
jbe
hlt
fucomip
inc
sub
enter
and
out
out
loopne
push
and
mov
cmp
push
xchg
aas
bound
out
in
mov
loopne
cmpsl
cld
shll
outsb
je
jo
outsb
aas
pop
sbb
push
pop
jae
fcoms
or
insl
mov
fldt
or
paddw
xor
adc
add
sahf
add
inc
cli
mov
shrb
cmp
cltd
call
loop
lods
jmp
test
adc
andb
dec
ds
call
push
test
in
mov
add
leave
je
dec
fwait
xchg
or
scas
adc
xchg
pop
push
movntps
push
jno
pop
mov
repnz
xor
mov
fidivrs
into
pop
add
pop
aas
pop
adc
push
adc
vpsubw
decb
mov
adc
mov
les
and
fbld
sub
jns
rorb
into
enter
repz
mov
scas
test
jp
popa
add
iret
test
sbb
sbbb
rcrl
and
mov
jle
jns,pn
xor
and
cwtl
loopne
inc
cmp
icebp
mov
xchg
xchg
in
shrl
in
call
add
mov
aas
ljmp
jo
aad
aas
add
fstl
adc
cmp
adc
outsl
bound
stos
js
idiv
cmpsl
imul
cwtl
aam
mov
push
dec
lahf
jo
push
mov
outsb
mov
xchg
jo
jae,pt
bound
test
mull
jno
jns
pop
xor
int3
sub
mov
mov
adc
daa
adc
jns
jmp
cli
faddl
ljmp
mov
cmp
jb
movsl
sahf
out
push
xor
je
jnp
les
xor
mov
lcall
out
imull
inc
pop
test
pop
adc
nop
ds
xchg
movsl
push
gs
fimull
xchg
gs
jge
jb
xor
add
push
inc
push
shlb
nop
loope
jg
xorl
shll
das
movsb
aad
movl
lret
gs
js
mov
inc
ljmp
sbb
enter
sbb
xor
sbb
sbb
dec
jae
out
jmp
mov
fsubr
cmp
insl
std
repz
popa
mov
cli
hlt
loop
repz
mov
mov
mov
fsubrs
or
and
in
mov
cmpsl
sub
xor
or
jae
daa
dec
int3
jl
enter
push
pusha
mov
aaa
mov
add
mov
outsb
js
jo
mov
lret
mov
push
sbb
cld
mov
jno
xchg
pop
nop
cwtl
dec
sub
pusha
les
out
push
int3
loop
jecxz
add
pusha
inc
sub
xchg
xchg
adc
out
xor
int
sbb
dec
xor
shl
loope
stc
mov
add
in
sahf
cmp
lahf
xor
clc
cmp
out
popf
or
lahf
mov
cli
jae
testb
pop
out
dec
ficoms
mov
inc
mov
mov
icebp
popa
fnsave
in
stos
cmp
mov
xchg
jg
mov
in
xchg
jmp
scas
fst
pushw
inc
pusha
mov
add
es
dec
cmp
gs
jo
insb
mov
xlat
sarb
sub
sub
in
loope
or
or
jb
bound
out
gs
push
push
push
bound
fisubrs
sti
dec
stos
add
xor
dec
gs
or
and
mov
imul
push
fwait
jle
jg
sbbl
mov
mov
sbb
out
xor
sti
test
and
adc
sub
jo
pusha
mov
inc
push
inc
push
xchg
mov
enter
lods
inc
inc
in
adc
faddp
ljmp
outsl
cmp
ret
sub
xchg
stc
int3
stc
mov
mov
sub
sbb
into
cmp
test
test
je
je
test
test
mov
push
adc
mov
xorl
xchg
nop
adc
push
jge
xor
fnstcw
inc
cmpsb
fcomi
inc
outsb
or
fs
lock
stos
lock
push
loope
addr16
jns
dec
fisttpl
iret
jge
call
add
sbb
xchg
sbb
adcb
xchg
xchg
cmp
lret
clc
push
xchg
movl
xlat
cmc
jle
out
mov
pusha
lock
aas
pop
cmp
jmp
jmp
lods
sub
mov
pop
movsl
es
push
movsl
dec
mov
pop
es
pop
push
pop
add
je
push
decl
notl
inc
jmp
mov
shrd
mov
das
sub
adc
rcl
add
mov
lds
mov
loopne
xchg
adc
leave
pop
push
sub
int3
xor
fcomps
fstps
loopne
das
or
dec
and
mov
jnp
pop
testl
fildll
dec
lea
shrb
inc
pop
mov
add
lds
in
lret
mov
icebp
pusha
aas
jne
loope
and
cmp
pop
ljmp
push
idivl
cli
mov
icebp
sub
add
int3
popa
nop
out
dec
push
cmpsl
je
mov
inc
push
out
sub
lret
bound
lods
imul
shrb
mov
addr16
test
int3
mov
in
push
mov
sub
fwait
sbb
loop
and
loopne,pt
mov
rorb
scas
push
cmpsb
das
addr16
mov
lcall
aam
stc
nop
add
xchg
xlat
mov
push
mov
lahf
mov
inc
mov
dec
push
cmpsl
mov
sub
push
nop
or
jns
aas
add
fistl
in
lret
shll
mov
testl
mov
rcrl
adc
jmp
aam
out
xor
int3
cmpsl
int
popa
in
mov
scas
jg
add
sbb
call
lahf
aam
adc
xchg
rorl
jae
clc
cmpsb
and
cltd
cmp
jmp
cmp
cmp
mov
enter
lcall
cwtl
push
shl
out
push
and
push
sbb
xor
jae
fldl
jae
cs
xchg
fwait
repnz
jo
pushf
ret
popf
shll
mov
popa
aad
xchg
mov
adcb
stos
aaa
jne
xchg
addr16
loope
bnd
mov
xor
push
pop
or
jo
mov
cmp
test
push
mov
inc
call
xchg
ficompl
sbb
sarl
xchg
adc
js
push
dec
clc
mov
inc
xor
jbe
sub
xchg
sub
sub
fnstenv
and
fwait
sub
daa
sub
sarl
pop
xor
fnsave
mov
stos
add
jne
push
mov
nop
mov
pop
sti
xchg
pop
mov
pushf
ljmp
daa
fisubl
add
cmp
add
divb
xor
ss
loop
mov
sahf
push
mov
xor
loop
xchg
movsb
xlat
mov
ds
ds
mov
push
sub
fwait
imul
ficomps
mov
cmp
mov
dec
lcall
xchg
and
xchg
arpl
xchg
add
into
xorl
shlb
mov
mov
jns
popa
cltd
pop
add
push
or
xchg
lcall
test
and
mov
add
lret
fcoml
push
pop
scas
lea
xlat
mov
arpl
pop
mov
outsb
call
fdivl
and
int
or
lret
cwtl
xor
jnp
jbe
inc
inc
shll
sbb
popa
pop
xchg
add
pusha
jmp
push
cmpsl
inc
adc
adc
fwait
jns
test
daa
pop
js
jmp
fmull
rorb
sti
enter
adc
dec
mov
aaa
cltd
xlat
fldt
add
inc
je
test
pop
call
stos
in
push
jae
mov
pop
fsts
loop
es
pop
pop
jbe
fisubrs
out
mov
sbb
inc
js
mov
mov
fwait
in
jecxz
mov
fmul
int
ljmp
rclb
lods
mov
jne
dec
adcl
lods
dec
pop
dec
ret
imul
dec
lds
mov
adc
aas
pop
ffreep
pop
xchg
sub
push
fisubrl
rolb
js
jg
in
lcall
shll
mov
int
es
lahf
sbb
push
mov
jo
mov
fisttpll
and
shll
lcall
out
lods
inc
movsb
xor
out
ss
imul
mov
fidivrs
icebp
adc
or
jb
mov
jb
push
leave
adc
pop
ljmp
out
pusha
and
fcomps
pop
jl
push
mov
stos
xor
and
jo
jl
and
insb
mov
lea
ss
popa
lds
fldt
or
repz
aas
xor
nop
or
rorl
outsb
pop
pop
cmpsl
inc
aaa
lea
push
dec
nop
mov
mov
xor
fwait
push
dec
std
icebp
daa
lods
in
xchg
rcrb
sub
lds
mulb
pushf
add
pop
out
dec
mov
jne
test
pop
ljmp
jmp
adc
lret
xchg
xchg
jge
xor
mov
xor
adc
testl
movsb
fs
xor
fadds
pop
cmp
cli
pop
cmp
test
cmp
mov
popa
lods
mov
lret
jno
jmp
pop
and
mulb
pop
aam
or
test
stos
xchg
or
and
mov
dec
inc
test
or
divl
fstl
xor
adc
addr16
nop
imul
out
addr16
jno
in
jb
sub
mov
inc
pop
xchg
pusha
decb
loop
dec
push
add
and
mov
xchg
inc
inc
mov
xchg
push
sub
or
xor
xchg
mov
lods
aam
insb
xchg
sarl
pop
cmp
push
ret
cmpsb
fistpll
cmp
push
loope
cmc
ja
pause
inc
rclb
ljmp
ja
push
xor
jle
push
fs
fsubs
das
adc
jnp
mov
and
test
mov
and
fcoml
jbe
dec
cwtl
lods
pop
mov
cwtl
sbb
mov
scas
add
xor
das
pushf
xchg
mov
mov
mov
push
repnz
inc
sub
cwtl
or
mov
dec
ja
adc
sbb
xchg
int
or
xor
and
sbb
mov
sbb
inc
push
sub
dec
add
dec
mov
jnp
adc
cmp
pop
or
popa
mov
aad
js
stos
stos
lods
shlb
inc
dec
inc
and
and
xchg
sbb
fidivl
lods
imul
dec
lahf
leave
xchg
sbb
jl
dec
pusha
aas
and
nop
lcall
aam
sahf
les
call
insb
or
in
push
ljmp
ljmp
and
push
test
ds
adc
add
mov
cwtl
inc
ficoms
add
imul
dec
push
test
xchg
fbstp
or
push
fbld
mov
jmp
jno
out
inc
inc
pop
and
lods
call
shll
jl
push
inc
hlt
repz
icebp
or
inc
jl
dec
mov
inc
call
jbe
jge
xor
aas
mov
loop
mov
rorl
sub
in
push
jecxz
aas
test
inc
lret
jb
pop
fs
dec
cmp
ss
out
mov
xchg
cmp
mov
push
je
sub
lods
mov
sub
out
dec
mov
jl
testl
rorb
lods
aam
addr16
dec
adc
push
lock
lcall
shrl
pop
mov
jb
sarb
or
mov
push
outsb
into
dec
mov
sbb
lret
pop
add
mov
aaa
mov
pop
adc
loop
bswap
inc
lret
loope
and
add
xchg
mov
mov
dec
enter
sbb
or
jne
sti
std
mov
testl
mov
push
dec
pop
imul
je
aad
and
xlat
push
mov
fcompl
pop
mov
jbe
mov
roll
push
repnz
ds
dec
add
movsb
pop
pop
cmpl
lahf
jo
shrb
in
or
daa
jmp
inc
sbb
sub
sub
xchg
and
ljmp
xor
lock
or
rcrl
or
mov
mov
shrb
sti
shlb
and
out
iret
inc
xchg
scas
lcall
or
lods
push
cli
xorl
push
jno
push
xor
cli
xchg
sub
mov
sub
inc
push
push
jecxz
int
ret
dec
jae
add
shl
sti
mov
shl
jbe
shl
fistps
leave
cli
inc
mov
xchg
repz
fbld
mov
leave
push
ljmp
sub
jae
shlb
cltd
mov
and
jg
bound
mov
sbb
sbb
push
mov
int
push
das
popl
mov
xor
in
sti
out
xor
and
movsl
xlat
ret
clc
add
addr16
cmpsb
jg
xchg
jp
mov
xor
pushf
xchg
lcall
mov
mov
negb
cmovne
arpl
daa
test
aad
xlat
int
jmp
xchg
xchg
push
add
cltd
fs
popf
xchg
hlt
dec
test
dec
negl
jae
pop
mov
push
push
sbb
cmp
jo
subb
movsb
shr
movsl
push
cmp
mov
aam
fprem1
insl
nop
push
outsb
mov
test
mov
pop
lock
movsb
inc
repnz
sub
inc
icebp
adc
bound
jo
cwtl
cmp
hlt
or
inc
cmp
mov
dec
ljmp
xlat
addr16
ljmp
pop
cmpsl
dec
lret
add
cmp
add
popf
jle
jne
and
pusha
loope
fldt
outsl
cmp
push
mov
lock
lret
into
imul
sbb
pop
fcmovnb
ror
loop
dec
ds
rclb
aaa
sbb
adc
dec
inc
insb
mov
dec
neg
test
lods
fbstp
mov
xchg
sub
mov
jl
pusha
sbb
sbb
nop
pop
xor
sub
icebp
ret
lds
xor
push
jg
stos
jmp
inc
jb
lcall
pop
xor
lds
pop
pusha
mov
mov
or
pop
xchg
xchg
sub
andl
xchg
mov
push
test
lods
adc
adc
push
jne
cmpsl
stc
cld
cwtl
data16
xchg
fwait
cltd
jnp
dec
inc
fs
adc
sub
push
in
add
stos
cmpsl
jge
and
stos
testb
and
sbb
pop
cmp
loope
sub
sbb
bound
sar
fwait
test
stc
pop
mov
jecxz
jbe
xor
push
adc
mov
bound
sbb
xor
pushf
inc
jns
jae
shrl
add
push
lds
data16
mov
jmp
enter
inc
pop
lods
aad
outsb
ret
lods
cmpsl
incb
sub
vmulsd
test
in
inc
jl
sysenter
cmp
inc
outsb
inc
out
xchg
mov
shlb
enter
fucomi
stos
nop
xor
adc
in
and
out
mov
jecxz
test
fs
ret
ss
out
cs
sbb
outsl
cmc
aaa
mov
into
mov
and
enter
loop
xor
je
fadds
cmp
in
mov
xchg
push
jmp
mov
fiaddl
lock
and
sub
or
sbb
loop
fdivs
mov
lods
and
pop
dec
jecxz
out
xchg
dec
fsubrs
std
dec
sub
add
addr16
dec
xchg
cmp
xor
add
push
pop
and
jle
out
mov
in
jl
cli
pushf
jne
mov
or
xchg
cmc
jno
scas
in
xor
in
hlt
addr16
sarb
and
sub
lcall
fldcw
sti
call
test
out
push
mov
sub
imul
mov
jmp
inc
lds
ret
insb
lods
arpl
pop
adc
dec
shrl
xchg
mov
add
xlat
out
jmp
outsl
mov
js
pop
sub
pop
lds
imul
xor
out
cli
pop
nop
add
pop
mov
cld
je
icebp
aas
xchg
movsl
insb
faddl
stos
mov
cmp
mov
jae
xchg
insl
and
imul
inc
or
cmp
adc
dec
lret
xor
bound
inc
outsl
add
mov
push
lret
jb
in
pop
repz
mov
ds
or
in
movsl
insb
sub
lcall
les
sbb
push
xchg
int3
int
or
add
jge
sbb
faddl
push
dec
sub
cltd
mull
cmp
jmp
fildll
mov
dec
stc
imul
jne
iret
repz
xlat
cmpsl
pop
movsl
inc
jb
xor
fwait
or
cmp
pop
daa
leave
cwtl
mov
cli
gs
xchg
ds
std
mov
movsl
outsb
pusha
test
ds
aad
mov
rorl
mov
and
loop
push
xchg
push
mov
push
mov
insl
add
rol
sub
cli
push
test
jns
das
and
lock
cmp
out
bound
out
loopne
je
cmp
jae
xchg
dec
das
xor
adc
sub
dec
cmp
imul
aam
fisttpl
add
xchg
push
and
sbb
test
test
addr16
rolb
adc
sub
pop
js
cmpsl
and
fidivl
mov
inc
ja
daa
push
sahf
dec
xor
aam
mov
xor
or
out
push
mov
xor
xor
ja
mov
icebp
ret
ja
pusha
mov
dec
in
sbb
lcall
in
add
sbb
jo
mov
js
stos
fbstp
test
imul
lds
and
insb
jnp
aad
mov
sub
add
aas
mov
push
sbb
in
mov
jle
test
ljmp
dec
mov
pusha
cs
push
test
xor
sub
jge
mov
cli
cs
xor
sub
or
roll
lcall
xchg
inc
and
andb
in
jmp
mov
repnz
inc
sub
ljmp
adc
mov
cmp
push
inc
mov
fwait
cs
div
lds
cld
jge
add
call
movsl
cmc
push
xor
and
out
jge
mov
xor
hlt
xchg
fstpt
pop
test
mov
or
sbb
dec
in
push
and
dec
and
push
add
maxps
ret
rolb
enter
mov
fwait
sbb
daa
push
lods
xor
xchg
sub
loope
mov
adcb
adc
cmp
jl
mov
jle
sub
scas
imul
repz
ret
jb
ret
decb
cli
adc
push
jno
pop
jmp
mov
jle
mov
xlat
fcmovu
stos
outsb
sahf
sbb
xchg
cwtl
or
loopne
out
pushf
inc
sbb
out
mov
shl
daa
in
fisttpl
pop
or
fxam
mov
or
adc
mov
and
xor
mov
cli
push
jbe
xchg
leave
xchg
pusha
cmp
mov
mov
xor
dec
inc
adc
xor
pop
imul
ss
push
sbb
or
inc
ja
cmp
ret
out
out
leave
jns
or
push
std
lahf
insb
mov
rorb
or
jp
jecxz
mov
mov
push
clc
std
sub
scas
push
repz
dec
cmpsl
adc
mov
mov
sti
push
mov
or
xchg
int
push
outsl
stos
push
clc
xchg
mov
dec
stos
pop
jg
sahf
add
daa
lods
xor
ffreep
mov
lods
fsubrl
push
fsubl
das
addr16
std
mov
dec
xchg
or
lds
out
int
cltd
hlt
pusha
cmp
cmpsb
int
outsl
pusha
into
dec
mov
mov
popa
or
push
lods
pop
leave
pusha
rcll
rol
cmp
push
inc
push
mov
lock
add
aad
add
xchg
out
adc
sub
les
push
adc
xchg
dec
lcall
mov
jne
xchg
xchg
xchg
pushf
lods
dec
mov
jno
pop
sbb
mov
cmp
add
bound
sbb
jl
and
mov
push
mov
stc
mov
scas
popa
or
dec
sub
sub
int3
add
xchg
mov
std
sbb
fwait
fwait
jmp
adc
dec
inc
jae
mov
mov
and
mov
push
xchg
scas
sbb
jge
incb
js
stos
cltd
xchg
mov
mov
cmp
or
push
in
and
xlat
push
test
cmp
repnz
sub
push
aas
stos
rorb
mov
push
sub
xlat
or
and
testl
call
data16
mov
jns
inc
mov
icebp
testl
xchg
das
pop
fwait
and
jne
aam
roll
ret
jge
outsl
inc
out
xchg
nop
addr16
xchg
or
rorb
scas
adc
jns
imul
pop
xor
lods
fpatan
jns
iret
dec
test
rcr
mov
push
jge
test
inc
xacquire
repnz
lods
dec
and
push
or
jle
pop
sti
lret
xchg
adc
add
xchg
jo
lahf
call
inc
jbe
inc
test
movntq
xchg
inc
mov
out
jo
popa
add
arpl
adc
xchg
dec
mov
cli
hlt
lods
inc
push
xor
fldl
js
in
pop
cmc
repz
adc
cmp
ds
cmpsb
scas
or
inc
stos
sahf
icebp
hlt
jecxz
je
pop
pop
or
fidivrs
sub
cmp
inc
ret
daa
sbb
pop
sbb
xor
push
xor
jge
stc
push
cwtl
in
xor
popf
push
mov
xchg
mov
lods
scas
bound
jge
push
mov
lods
jl
xchg
mov
mov
sub
flds
gs
sti
push
fisubrl
test
negl
fnstsw
lods
jb
pusha
pop
fidivs
xor
dec
or
xor
inc
mov
or
shr
out
shlb
ljmp
jge
pop
mov
int3
cmp
cmp
insb
add
sub
or
ss
out
xchg
adcb
jne
dec
sbb
aam
push
and
lock
lods
inc
mov
pusha
cmpsb
dec
lret
aam
and
call
push
dec
pop
ja
xor
or
aaa
gs
sbb
push
cld
pop
stc
fwait
jae
jae
inc
pop
sbb
push
pop
pop
mov
imull
test
cwtl
cltd
pusha
cltd
test
and
cmp
arpl
xor
push
dec
pop
mov
int3
js
jae
cmp
mov
pop
test
inc
scas
lret
push
repnz
out
fmull
and
dec
test
inc
mov
je
or
mov
icebp
push
cltd
ret
mov
xor
adc
out
insl
aaa
add
mov
and
pusha
push
nop
or
lock
pushf
dec
loopne
pop
fwait
push
shll
imul
push
fucomp
pop
mov
frstor
push
out
data16
in
arpl
cwtl
sbb
inc
aas
cmp
sub
sub
or
ficoms
das
cmp
aam
test
push
repnz
mov
or
and
stos
cltd
or
lods
cmp
in
xchg
mov
das
imul
sbb
xchg
jo
mov
insb
call
lret
testl
mov
fcoms
or
fcmovne
enter
shrl
les
xchg
pop
mov
pop
mov
icebp
rcll
mov
lock
lret
pop
inc
cmpsl
lods
aad
cmp
stc
sub
inc
mov
jno
lds
xor
test
add
push
ror
push
push
addr16
push
pop
fldcw
inc
std
mov
or
pop
les
jne
add
xor
jbe
adc
inc
pop
fsubr
xchg
xchg
int
shll
pop
inc
js
or
inc
call
cmp
sub
scas
adc
cs
into
sub
lods
jmp
or
cmp
and
inc
mov
das
push
dec
xchg
mov
lret
sbb
push
dec
mov
rep
aam
xlat
lock
adc
call
pop
popa
stos
rolb
nop
out
add
out
rcrl
bound
jg
xchg
sarl
xor
insb
hlt
lret
and
call
repz
xchg
push
sbb
fmul
fstps
enter
gs
xchg
lcall
adc
jg
jmp
sahf
jb
add
lods
and
xchg
fstpl
add
pop
dec
mov
iret
add
mul
jmp
imul
dec
rorb
sub
data16
jns
and
jl
sbb
addr16
xchg
adc
xchg
xchg
sbb
int3
sub
int3
pop
daa
loope
shll
mov
icebp
mov
iret
mov
cmpsl
mov
ljmp
mov
inc
cmpsb
aam
hlt
enter
aad
dec
mov
sub
sti
imul
xchg
ds
mov
sub
xchg
pop
mov
sbb
xchg
dec
and
imul
fdivrl
clc
mov
ljmp
xchg
jb
pushl
lret
pop
sbb
mulb
lods
data16
filds
jp
ret
jb
loop
add
xor
aaa
and
insl
cmpb
outsl
or
inc
mov
pusha
and
cmp
push
jne
mov
or
mov
ficomps
imul
mov
rolb
int3
lea
fdivrl
sub
repz
int3
cmp
inc
inc
adc
push
mov
and
in
push
pop
rol
mov
mov
stos
inc
xlat
aad
xchg
lods
sbb
adc
sbb
int
sar
test
xorl
imul
jno
dec
insl
lods
xchg
add
jmp
adc
inc
cld
mov
push
dec
iret
movsl
pop
pop
cld
mov
cld
movb
cmp
push
lret
ja
shlb
fstps
inc
punpckhwd
cmpsb
pop
add
lea
mov
in
or
mov
sarl
dec
adc
push
inc
adc
adc
insl
inc
add
pop
idivl
stos
jp
or
lcall
test
js
repnz
pop
sahf
loope
test
test
mov
adc
or
sbb
xor
into
inc
sahf
pop
and
stc
xchg
bnd
xchg
dec
mov
rorb
push
lods
in
pop
lret
ss
push
pushf
test
into
notb
out
daa
inc
jno
das
outsb
int
jmp
adc
xchg
movsl
addr16
xor
cmp
mov
popa
clc
inc
in
cmp
loop
mov
xor
fnsave
cmp
mov
mov
add
mov
in
pop
sub
inc
clc
stos
mov
das
cmpsb
mov
mov
shrb
mov
into
imul
add
push
lahf
cld
scas
push
lret
cmc
leave
imul
adc
out
outsb
imul
and
jp
fimull
sub
gs
pop
testl
mulb
cmp
fcmove
mov
add
push
xchg
mov
push
jmp
repnz
cwtl
xchg
loope
add
xchg
and
jne
sub
repnz
sbb
dec
fsubr
dec
pop
and
mov
imul
sub
lock
sti
cmp
dec
mov
and
mov
pop
icebp
push
inc
push
and
push
cmp
or
sarb
lahf
dec
pop
pushf
test
dec
mov
test
fwait
jmp
mov
es
dec
mov
rorb
cld
mov
hlt
sarb
std
lret
mov
in
out
jbe
sbb
popf
pop
add
outsb
rorb
or
push
sbb
shll
loop
and
insb
shll
cmpsb
mov
adc
or
cmpsb
fsubrs
mov
outsb
jbe
pop
xor
fwait
test
movsb
mov
xchg
jmp
sub
rorl
test
test
xchg
xchg
hlt
sar
jle
je
arpl
aam
stos
jecxz
mov
sbb
adc
bswap
xorb
fmulp
in
out
fs
push
movsl
cmp
mov
inc
cmp
loope
testl
and
jle
test
xor
push
lcall
push
movsl
mov
loop
int3
fs
push
jb
jbe
int3
addr16
out
push
repz
cld
pop
pop
aas
leave
xchg
xor
js
jmp
lahf
sbb
lcall
jns
inc
mov
pop
test
xchg
adc
movsl
mov
test
fs
mov
loope
xor
pop
out
int
cmp
int
push
lock
dec
addr16
push
outsb
mov
inc
pop
cmpsl
into
xor
cmp
fdivl
outsb
jne
in
aaa
es
das
inc
jg
xchg
lret
jge
call
imul
mov
push
xchg
lret
sbb
sar
push
mov
je
jge
test
push
xchg
je
dec
lcall
cmpsb
pop
xor
insb
out
mov
lock
fadd
jecxz
pop
ss
je
adc
and
add
cmp
cmp
lcall
mov
cli
pop
test
add
jb
test
mov
jg
fdivr
ljmp
lahf
push
cmp
mov
rcr
fnstcw
dec
in
sahf
adc
push
rolb
push
into
mov
mov
push
xor
and
push
jecxz
xchg
sbbb
pandn
jnp
addr16
add
xchg
and
lret
and
inc
jbe
xor
mov
sbb
dec
fnstsw
mov
adc
inc
repnz
add
scas
je
imul
in
lea
add
pop
xchg
mov
add
jge
sbb
sub
pop
divb
lret
inc
lret
xor
in
ja
out
pop
add
sbb
mov
pop
lret
xor
mov
mov
mov
rcrb
pop
into
adc
mov
mov
mov
mov
push
xchg
jns
mov
clc
xlat
rclb
mov
adc
inc
iret
mov
and
popf
push
and
sub
scas
pop
mov
xchg
stos
loope
popf
outsb
stos
leave
scas
fs
lea
dec
sbb
inc
cmc
test
pop
and
filds
fcomps
out
fwait
or
js
aas
ret
out
in
dec
xchg
jae
jmp
in
pop
cmp
mov
jmp
fucomi
pop
inc
push
std
jp
movsl
jle
popa
xor
jbe
and
pop
mov
lea
leave
sbb
jbe
movsb
imul
sub
cmpsb
mov
pop
xchg
push
stos
ss
scas
imul
mov
fucomp
push
test
push
sarl
mov
fildl
pop
or
adc
xchg
dec
mov
clc
pop
aad
push
iret
sbb
inc
pop
fistpl
push
mov
scas
iret
stos
fstpl
pop
pop
sub
xor
bound
js
das
or
xor
push
pop
movsl
adc
inc
ds
inc
adc
jp
adc
cmp
lock
xchg
mov
cmp
ffree
xlat
test
adc
jecxz
nop
shlb
xlat
movb
jl
dec
mov
fsubl
xchg
mov
sbb
pop
mov
mov
in
lds
add
out
inc
cmp
dec
loope
push
jg
mov
daa
lds
insl
adc
dec
rorb
rcr
ja
add
int
std
test
lret
xabort
jno
jl
loopne
les
add
fldt
cs
mov
adc
sbb
mov
mov
sub
sub
aaa
jb
outsl
dec
mov
ljmp
add
add
mov
xlat
add
lods
mov
loopne
push
test
pushf
loope
ja
xchg
mov
jle
inc
rolb
sub
rcl
cltd
lods
test
movl
fldt
inc
pop
lods
insl
xor
roll
xchg
cmp
pop
dec
xchg
cmp
stc
lahf
loop
pop
cmp
ljmp
inc
inc
push
outsb
mov
popa
stc
enter
lods
subl
daa
cmp
inc
inc
fildll
outsl
xchg
call
sbb
pop
jle
inc
cmp
add
xor
sbb
mov
cmp
sbb
push
leave
loop
pop
mov
pop
std
add
xchg
fsubs
jns
jno
nop
adc
push
xor
lock
or
repnz
sbb
in
or
sub
pop
xchg
add
xchg
aas
leave
or
push
or
xchg
and
loopne
lods
data16
xor
ret
out
into
ja
push
xor
dec
test
faddl
pop
mov
add
cmp
xor
jmp
ret
pop
shll
stc
pop
sahf
mov
add
jg
scas
mov
pop
inc
jo
addr16
fdivl
out
popa
stc
mov
jle
inc
pushl
cltd
ret
sub
push
jae
cmp
idivl
inc
ret
fcoms
xorb
jl
adcl
sub
fsubrs
ljmp
cmpsl
dec
imul
in
cwtl
push
stos
adc
xchg
out
repz
push
dec
shlb
push
add
mov
out
stc
adc
inc
and
cli
dec
push
xor
insb
cmp
and
adc
test
into
inc
inc
pusha
fprem1
xorl
addl
cltd
dec
insl
aam
ss
out
dec
mov
jbe
mov
adc
mov
push
pop
and
dec
pop
mov
ret
lcall
mov
mov
stos
aam
cmpsb
popa
or
sub
jecxz
shr
mov
leave
int
fs
cltd
testl
mov
fcomps
sub
sub
or
adcl
lret
cmpsl
or
or
xchg
jo
movsb
mov
xchg
adc
mov
lahf
fstl
movsb
pop
cmp
ss
mov
cs
movsl
lcall
fmull
loope
jno
cmpsl
popa
jmp
leave
lods
adc
cmpsb
jmp
fisttpll
mov
sahf
or
jns
and
iret
push
aam
loope
cli
xor
icebp
mov
jp
outsl
pop
shlb
les
arpl
and
mov
pop
and
mov
les
stos
adc
call
cwtl
aam
fiaddl
mov
and
push
push
mov
inc
aad
xor
mov
push
inc
push
std
or
mov
adc
je
jmp
pop
jge
xor
cwtd
sub
ds
shrb
mov
lock
pusha
dec
daa
inc
mov
std
mov
les
mov
int3
adc
cltd
outsl
aad
in
sbb
or
inc
adc
aaa
mov
xchg
or
aad
int
int3
sub
lret
pop
push
cmc
imul
adc
out
xchg
mov
addl
leave
xor
roll
push
xchg
mov
mov
movsb
jmp
dec
or
ret
xor
fbstp
jne
rcrb
in
pop
stos
imul
pop
sbb
stos
int3
push
mov
push
cmc
shrl
push
sbb
out
jb
xor
fstpl
xor
mov
je
enter
xchg
sbb
lock
jp
push
lock
ja
clc
sbb
test
mov
mov
inc
jg
insb
outsl
mov
cmc
repz
add
dec
dec
inc
into
and
das
adc
lahf
pop
adc
xor
hlt
fs
cli
cli
pop
mov
lea
outsl
sub
lods
popa
cmp
inc
sbb
and
stos
arpl
lods
cmp
mov
jg
jge
or
or
and
cltd
pop
repz
pusha
ss
jae
cmp
shll
mov
mov
fcmovnu
mov
insl
mov
dec
lds
jns
ljmp
xor
inc
cs
or
add
xchg
aad
jge
out
lcall
out
sbb
iret
sahf
sbb
iret
arpl
adc
out
std
cmc
popf
fwait
pop
xchg
jb
jb
mov
lea
push
aad
inc
lds
dec
shll
stos
mov
xchg
cmp
out
cs
into
outsb
mov
lahf
testb
push
shld
jns
cld
mov
cmpl
mov
out
jge
jmp
int
pop
mov
mov
cmp
xor
in
jnp
in
pop
andl
add
xchg
dec
push
cmp
rclb
lahf
imul
mov
cli
rcrb
jg
push
ret
das
push
adc
inc
repnz
mov
addr16
pop
fbld
dec
jnp
mov
lahf
cmc
aaa
pop
imul
loope
cmp
xchg
mov
cmp
int3
and
testb
push
or
loop
or
and
mov
in
fmuls
lahf
adc
cmc
fnstsw
adc
sbb
cmpsb
push
dec
mov
iret
std
leave
iret
aad
push
push
sbb
lea
addr16
test
in
fcomps
inc
push
testb
adc
push
add
enter
ja
into
arpl
data16
outsb
xchg
ja
cmc
test
lahf
pop
cmp
std
push
jb
test
leave
test
xchg
lds
lret
shlb
fmuls
dec
mov
lods
add
shlb
lahf
fldt
stos
jae
or
mov
test
cmp
mov
dec
jno
jb
cwtl
jne
insb
sub
test
jmp
movsl
and
movsl
or
fsubr
sub
loop
rcll
nop
das
cmpsl
push
gs
aam
cli
pop
xchg
dec
cmpsl
xchg
dec
inc
jno
lret
fnstsw
rorl
and
adc
dec
jne
push
mov
pop
sbb
push
out
pusha
adcb
mov
popf
jne
rcrb
push
jns
mov
push
pop
leave
fcomp
sbb
outsl
insl
dec
clc
inc
and
add
mov
pop
iret
inc
sub
sbb
int
sub
imul
js
leave
push
dec
add
jns
shr
faddl
add
popa
lret
xlat
xchg
dec
jp
je
mov
mov
data16
jne
jle
xchg
test
aad
push
ficompl
dec
int
mov
pusha
sarb
movsl
lods
mov
jmp
push
fdivr
pop
and
outsb
outsl
test
and
cmp
into
movsl
loope
or
mov
jae
fldcw
xor
int
mov
jne
cwtl
xchg
mov
sahf
lds
pop
aaa
jns
mov
popa
mov
mov
add
shlb
push
lahf
add
mov
fdivl
js
mov
mov
cs
sahf
adc
sbb
pop
outsb
jnp
and
les
push
mov
mov
or
pop
std
pop
fcmovne
int3
dec
int
xchg
roll
lea
adc
add
push
inc
xor
sarl
mov
mov
pop
std
shll
pop
std
stc
pop
pop
faddp
pop
mov
jmp
call
mov
xchg
lds
add
pop
pop
mov
cs
dec
idivb
xchg
mov
add
lods
push
cmpl
mov
sbb
fwait
pop
dec
mov
sbb
repz
lcall
das
and
imul
test
dec
in
mov
mov
lock
enter
push
scas
cmp
hlt
insl
sub
inc
pop
clc
test
sub
jl
adc
sbb
push
or
cmc
dec
adc
test
sub
subb
cs
test
jno
adc
aad
rcll
push
das
add
push
scas
pop
out
mov
stos
psrad
stos
pop
cmc
sbbb
pop
jo
dec
fistl
add
rclb
push
mov
add
repz
mov
mov
dec
mov
lock
cmpl
cmp
int3
hlt
cmp
dec
push
lcall
nopl
cmp
es
mov
cltd
mov
movsb
adc
adc
loopne
mov
rclb
add
iret
ljmp
jle
addr16
pop
in
dec
popa
push
jns
xor
inc
jp
or
mov
daa
rol
xlat
fwait
std
push
orb
pop
shlb
cmc
jae
out
daa
mov
mov
icebp
sbb
dec
iret
mov
fs
mov
enter
lods
mov
xchg
addl
cmpsb
mov
mov
push
pushw
pop
push
inc
jge
movsb
out
psadbw
sub
clc
dec
push
jg
hlt
xlat
mov
shll
adc
rcrl
ficomps
dec
mov
fadds
inc
aaa
hlt
cs
scas
mov
cld
into
outsl
mov
push
push
loop
inc
js
push
xchg
xchg
sti
movsl
popl
out
mov
or
pop
ljmp
xchg
rcl
ja
pop
aaa
jp
nop
insl
jmp
mov
les
xchg
or
mov
rcrb
jns
add
std
loope
fnsave
shrl
inc
jle
cmp
not
orl
in
dec
jnp
ljmp
es
adc
pop
cmp
push
test
repz
lods
xlat
xor
cli
daa
xchg
xchg
ljmp
sub
push
sbb
dec
xchg
mov
push
dec
mov
pop
rcl
jno
inc
or
js
sbb
push
sbb
xchg
cmp
adc
xor
adc
jb
adc
xor
clc
cmp
cwtl
sahf
in
or
mov
loope
test
jno
stos
inc
addr16
aas
cmp
popl
bound
add
push
or
fisubl
add
cmpsl
loope
mov
shl
in
adc
dec
xchg
xor
jbe
add
stos
out
adc
ret
ja
inc
mov
xlat
mov
and
sub
jne
rcll
out
popa
sub
sbb
and
or
add
xchg
cli
shrl
ss
out
insl
repnz
stos
fisttps
dec
sub
or
or
dec
idivb
mov
stos
stc
test
or
aaa
jb
inc
out
inc
and
and
cli
mov
test
lret
movlps
mov
adc
xor
popa
rolb
xchg
bound
popf
inc
cmp
rcl
jp
iret
lock
movsl
imul
cmp
push
cmpsb
jne
sub
adcl
lcall
jno
cmp
imull
into
fcomps
add
xor
xchg
outsl
aam
xor
ss
rcl
mul
lcall
xlat
fisttpll
arpl
ret
add
xchg
sub
gs
inc
shlb
inc
arpl
or
stos
add
fwait
leave
cld
push
mov
inc
sub
mov
jg
les
dec
test
sbbl
jl
sbb
mov
subl
mov
adc
fs
mov
pop
dec
xchg
push
add
mov
sbb
lea
cmp
xchg
lods
mov
jne
loopne
mov
dec
jg
das
fdiv
into
cltd
adc
lods
sbb
mov
xor
xchg
and
aas
cli
add
pop
add
in
stc
fldenv
ficoml
insl
jne
hlt
dec
clc
movsl
mov
cmp
add
dec
orl
push
and
int3
popa
cmp
pushf
jg
fcmovnbe
loop
xor
mov
sub
and
outsb
inc
inc
lcall
test
or
fmuls
outsb
or
and
pop
xrelease
mov
imul
mov
push
mov
or
addr16
push
scas
addr16
push
pop
out
and
shrb
cmp
push
jae
les
adc
orl
imul
mov
cmp
and
idivb
xor
popf
std
pop
pop
xor
repz
data16
mov
cli
mov
lods
sbb
iret
sti
mov
jno
pop
cmc
js
stos
jae
pop
ret
jae
pusha
lahf
xor
or
ss
push
jecxz
data16
test
shlb
push
sbb
popa
mov
or
arpl
rcll
int3
fsubs
int3
mov
lock
mov
mov
add
xor
pusha
mov
add
or
pop
mov
mov
out
enter
pop
repnz
lahf
testl
mov
cmp
dec
test
mov
mov
addb
push
sbb
add
mov
aaa
ret
and
mov
cmp
inc
cmp
ds
push
jge
jno
filds
push
inc
and
adc
sub
cmp
xchg
pop
enter
cmc
test
sbb
icebp
repz
js
jns
movb
js
mov
stos
mov
call
lret
sbb
mov
lds
repz
cwtl
adc
mov
out
mov
sbb
insl
or
repnz
jns
push
in
or
jge
push
mov
fdivs
adc
jmp
aas
test
mov
and
add
es
or
pop
xlat
xor
imul
in
mov
int
mov
mov
dec
xchg
fwait
adc
arpl
inc
xchg
fisttpll
and
jno
repz
adc
dec
je
data16
jno
lahf
fldcw
adc
xchg
jle
xchg
and
xor
xchg
iret
mov
sub
loope
fs
sbb
out
and
mov
insl
or
movsb
lea
sbb
std
dec
popf
mov
and
or
jge
lcall
sbb
jecxz
outsl
or
mov
sbb
or
imul
dec
fcmovb
fcmovnbe
or
icebp
cli
fcmovnbe
data16
push
loope
shlb
mov
pop
dec
jp
push
cmp
jb
scas
sub
or
inc
test
mov
out
ljmp
push
jmp
jno
out
fidivrl
rcrl
dec
mov
add
mov
mov
mov
sbb
inc
sub
je
dec
scas
mov
cwtl
xor
jg
call
ja
paddd
xchg
insb
push
xor
lret
inc
cli
out
lods
mov
in
dec
stos
ja
imul
or
popa
clc
xchg
inc
pushf
adc
push
orb
repnz
fcomps
dec
pop
cmp
aaa
xor
outsl
push
repnz
sub
insb
push
in
add
mov
fcoml
call
mov
xchg
jns
das
or
sub
clc
mov
imul
scas
daa
aaa
mov
jns
jbe
sti
fucom
dec
bound
fistpl
les
addr16
leave
push
cmpsl
push
out
xchg
add
leave
mov
mov
int3
decb
inc
mov
pop
xchg
cmp
out
pop
inc
xor
sahf
in
mov
testb
in
mov
lret
cltd
sbb
mov
xchg
lock
and
scas
fcoml
ja
mov
and
pop
in
nop
aam
aad
push
jmp
bound
xchg
adc
push
push
lods
push
sti
mov
mov
mov
fnstsw
inc
ljmp
xlat
jge
sbb
add
pop
ljmp
pusha
out
mov
mov
outsb
or
sarb
xor
mov
xchg
loop
jle
into
es
in
xchg
std
push
imul
cmp
daa
xor
pop
sbb
or
mov
sbb
sub
insl
test
fcompl
cmp
jnp
clc
add
lods
push
cmp
int
rcr
pop
js
int3
rcrl
test
mov
mov
mov
sub
mov
dec
ficomps
shlb
ja
clc
lds
mov
sub
mov
and
divl
and
jnp
xchg
aam
pop
sti
sbb
inc
push
inc
cmp
cmpsb
sahf
xchg
int3
mov
sarb
add
mov
adc
repz
push
sbb
mov
xor
jge
insb
arpl
mov
sbb
mov
xchg
adc
mov
enter
mov
out
loop
dec
aas
sub
or
and
into
xor
jne
movsl
pushf
sbb
int3
mov
jl
mov
mov
loopne
movsl
ret
xchg
push
dec
jns
lret
cmp
sub
mov
stos
adc
stc
fwait
or
stos
jl
fcomp
mov
xor
or
out
int3
inc
push
test
fs
aaa
add
cwtl
lahf
push
dec
inc
aas
jl
pop
xchg
or
mov
hlt
xchg
nop
ds
xchg
popf
mov
test
push
jge
repnz
fisttpl
nop
or
notb
mov
pushl
in
arpl
adc
mov
xor
mov
cli
test
pop
fwait
xor
cmpsb
fmull
test
sub
jmp
stos
add
lcall
dec
and
sub
imul
sub
arpl
imul
mov
lds
sub
push
push
stos
jno
and
lea
fsubrl
popf
setnp
cmc
mov
lock
mov
jo
popf
lahf
fildl
js
push
enter
inc
lret
pop
xchg
fcoml
mov
sbb
inc
out
xchg
arpl
stos
fs
jbe
jo
sti
subl
loop
push
fnstcw
je
push
push
ss
mov
test
and
loope
pop
aaa
and
push
cwtl
jp
sub
jns
xor
cmp
and
lret
or
cmp
sub
mov
test
jle
xor
jmp
insl
lret
lods
rorl
aad
test
aaa
push
insb
dec
das
jl
cmc
pop
jmp
sar
mov
scas
push
push
xchg
sub
test
xchg
push
scas
inc
frstor
pop
lret
jne
xor
divb
int3
fwait
jno
jae
sub
not
cmovns
scas
data16
stos
fsubs
xchg
sbb
cmp
dec
cltd
sti
imul
jecxz
mov
jb
les
aaa
xor
fwait
inc
fidivs
push
fs
test
pop
push
lds
ret
sub
sub
pop
or
shll
shlb
sub
adc
out
adc
ja
push
adc
add
lds
fs
jnp
sub
pusha
mov
out
mov
mov
mov
sub
push
pop
and
pop
repz
std
xchg
push
add
mov
mov
push
sbb
dec
fwait
xor
loopne
xchg
add
jnp
popa
jp
shl
or
sbb
or
cmpsb
inc
mov
lods
add
das
cwtl
mov
or
mov
jp
jae
xorb
mov
jp
add
mov
mov
int
inc
pop
scas
lahf
cmp
xchg
mov
sbb
ljmp
dec
mov
sub
mov
lret
testl
jmp
adc
sahf
and
call
jb
sbbl
mov
xchg
dec
in
repz
sbb
out
jo
and
adc
sbbb
jne
push
in
xorl
pop
dec
cmpsb
loop
add
arpl
lcall
bound
pop
mov
sub
in
sbb
stc
out
jnp
insl
lea
or
popa
mov
jae
push
mov
ss
imul
xchg
cmc
inc
pop
sbb
add
push
mov
mov
push
sub
stos
pop
sbb
add
jle
icebp
fs
mov
add
negl
js
or
inc
sbb
jl
jle
sub
insb
in
jg
fs
mov
jns
ficomps
es
mov
push
ss
pop
push
mov
push
mov
and
hlt
shl
out
cmpsb
ja
mov
jb
insl
lds
push
push
cmp
std
loopne
fisttps
leave
mov
scas
rorb
pop
jo
jne
enter
fucomp
dec
and
pushl
insb
ret
sti
push
jbe
mov
bound
inc
loop
add
test
in
adc
out
das
and
mov
mov
mov
sub
pop
fsubl
push
insl
adc
push
or
jb
shlb
fwait
push
sub
and
iret
lcall
sub
pop
test
ret
jle
lret
pop
inc
sbb
aad
mov
pop
inc
js
notb
sub
jns
aam
add
mov
aaa
dec
jne
sbb
xlat
push
adc
addb
test
mov
cmp
jl
mov
sarl
test
pusha
sbb
jg
mov
mov
testl
aas
into
or
jg
push
lock
xchg
lods
mov
push
add
adc
sbb
mov
push
push
or
xor
add
sub
mov
push
int3
mov
cld
aad
dec
add
andl
mov
dec
mov
cld
out
mov
and
stos
mov
pop
nopl
push
fsubs
test
jae
and
and
and
or
jmp
int
les
xor
fcmove
push
sarl
cmp
cmp
pusha
mov
adc
mov
pop
cmp
js
push
jle
icebp
loope
mov
loope
jnp
roll
push
jb
cmpsb
cmp
arpl
and
push
daa
xchg
popa
subl
inc
sub
scas
xlat
iret
mov
cld
mov
sahf
pop
add
push
int
ret
jmp
adc
inc
pop
insb
push
mov
shlb
les
out
sub
pop
jle
sti
pop
push
xor
push
and
nop
loopne
in
lods
mov
adc
and
mov
cmp
js
hlt
cmc
pop
or
mov
xchg
push
push
sbb
dec
jg
sbb
jbe
cltd
mov
and
out
addb
ret
div
dec
and
jnp
fbld
aam
or
pop
sub
test
adcb
out
movsb
cltd
inc
scas
pop
pop
mov
xchg
sbbl
in
cmp
or
cmp
xchg
pop
repz
cld
and
jbe
and
mov
out
movsl
std
aas
mov
sub
xchg
inc
add
xor
xchg
jns
pop
mov
push
cmp
and
fisubl
cmp
jno
fldt
xor
ljmp
pop
push
dec
mov
pop
sbb
out
push
das
jns
xchg
xchg
fcoml
or
repz
adc
call
push
icebp
or
adc
cltd
jmp
jns
fcomps
adc
or
jecxz
lea
arpl
mov
addr16
icebp
mov
int
loop
test
xchg
iret
jmp
push
add
inc
insb
and
cltd
shrb
and
movsl
movsb
out
out
aaa
outsl
int
and
aam
icebp
mov
ja
decb
and
mov
xchg
inc
pop
fidivs
ficomps
sbb
loope
dec
mov
mov
or
lock
pop
idivb
pop
sti
sti
add
mov
das
xor
xchg
popl
jae
jae
jmp
lods
dec
mov
testl
shll
mov
pop
jmp
sahf
paddsb
sahf
push
loope
sbb
jp
shr
inc
inc
test
popa
psubusb
sub
cmp
cmp
xchg
lahf
add
xor
push
adc
cmp
push
pmulhw
adc
mov
push
lret
int3
lret
xchg
add
out
inc
loope
fildll
mov
xor
xlat
aad
clc
lcall
sete
xor
inc
push
out
fstl
mov
inc
fucomi
aaa
fiaddl
fidivrl
stos
hlt
xchg
mov
rep
mov
xor
add
add
dec
push
or
and
jg
outsb
leave
sahf
loop
lcall
test
inc
test
leave
lret
sub
hlt
cmp
add
mov
inc
inc
push
fs
movsb
push
shl
jo
lcall
or
fsubrl
aam
repz
jno
jmp
jg
inc
add
out
aas
adc
fsubl
mov
mov
ljmp
or
outsl
cwtl
mov
mov
ret
arpl
repz
loopne
cmp
popl
scas
es
jno
push
outsb
pop
out
add
ror
xlat
push
mov
data16
test
push
fldt
cmp
dec
call
xchg
daa
cmpsl
into
insl
out
cmp
mov
xchg
mov
fwait
addr16
sbb
ret
mov
jnp
test
xchg
popa
movsb
xor
fdivl
adc
sub
bsr
mov
and
mov
out
or
out
adc
xor
pop
mov
stos
out
outsl
les
outsl
outsb
jns
cli
sti
sub
jge
cmc
iret
dec
lods
in
push
lcall
push
pop
pop
pop
jb
repnz
mov
arpl
ret
xchg
rclb
or
add
or
outsl
js
rorb
xor
or
nop
sti
fcom
jae
inc
ret
xor
mov
aam
push
cmp
sbb
cs
mov
jns
mov
out
rorb
fscale
enter
stos
jl
push
nop
test
repz
jg
mov
and
ds
cmp
jp
js
or
dec
pop
and
insl
xchg
icebp
addl
stc
xor
adc
adc
icebp
ljmp
and
mov
mov
lods
jnp
test
sbb
scas
xor
add
mov
test
adc
outsb
ret
push
hlt
std
sbb
and
mov
jnp
sti
sbb
cmpb
xchg
xchg
aas
push
inc
stos
jg
xchg
int
scas
pop
xor
fmuls
call
arpl
adc
jae
popf
adc
cmpsb
jo
subb
sub
xchg
scas
je
fwait
dec
lcall
int3
mov
inc
rolb
cld
addr16
adc
push
out
push
dec
dec
lret
pop
push
fisubrl
lcall
mov
jge
shlb
dec
push
cmp
cmc
push
mov
inc
lods
aad
sub
popf
lods
xchg
push
lcall
movsl
sbb
adc
jmp
mov
fnstsw
cmpsb
inc
ljmp
test
das
sbb
pop
xchg
xchg
jae
test
hlt
or
cs
pop
pop
stos
add
mov
dec
ljmp
or
mov
movsl
aad
ret
sahf
ret
loopne
cs
je
outsb
loop
push
mov
icebp
idiv
lea
cltd
inc
dec
sbb
xchg
lret
pushl
mov
cmp
iret
sub
in
push
sbb
loope
ret
insb
mov
sbb
xor
sub
add
shl
sub
mov
fmulp
shll
aad
xchg
shll
mov
sbb
dec
jb
xchg
ljmp
imul
push
orl
mov
aas
imul
cmp
push
loop
add
push
dec
fistl
jnp
sub
push
iret
ret
inc
mov
and
cltd
fnsave
cmp
aam
mov
mov
icebp
mov
dec
and
ds
shl
bound
inc
int3
lds
dec
adc
sarl
lea
dec
mov
push
mov
pop
lds
sbb
xorb
push
add
mov
vxorps
cmp
iret
outsb
adc
push
cmp
int3
mov
push
dec
test
imul
je
inc
popa
cli
ljmp
and
aad
xor
and
cs
pop
mov
xchg
push
pushf
add
add
or
cmp
or
sub
lret
aas
scas
xchg
add
rolb
lds
xchg
dec
mov
mov
ja
jmp
mov
repz
add
jne
push
mov
xlat
and
adc
int3
rorl
dec
stc
inc
ljmp
je
jb
fsub
mov
notb
push
jae
mov
movsb
push
mov
adc
xchg
mov
shll
mov
pop
xchg
sub
shl
dec
push
in
aad
push
sti
adc
insb
out
xchg
mov
cmp
aas
lahf
inc
inc
jo
push
movsl
scas
mov
adc
sub
outsb
pushl
insl
push
sti
xor
stos
jmp
arpl
repz
jle
in
clc
mov
add
loope
outsl
xor
and
rcrb
fisttps
out
push
cmp
pop
rcrb
and
mov
jne
fistl
lods
sti
inc
and
fbld
mov
lcall
aad
sub
out
clc
loopne
imul
mov
flds
cmp
andb
cwtl
push
fidivl
xchg
xchg
push
pop
xchg
test
sbb
push
pop
add
and
sarb
and
popa
adc
jb
adc
mov
bound
pop
dec
pop
sti
or
mov
aad
sbb
jne
cmpsb
rclb
pop
imul
mov
shl
sbb
lock
xor
int
xchg
jmp
mov
jbe
xor
fdivl
test
mov
lcall
xchg
cmp
daa
out
mov
push
scas
sahf
sbb
sbb
jns
adc
mov
flds
inc
cmpsb
mov
pop
ss
xchg
shlb
cmp
mov
gs
clc
cmp
push
sub
dec
fnstcw
out
cmp
fsubrl
or
loop
or
mov
cmp
bound
movsb
icebp
test
adc
pushf
std
fisttpll
scas
in
jo
notl
dec
aam
pop
and
push
pop
jmp
xchg
inc
les
xlat
lds
int
icebp
sti
notb
jb
mov
cmp
pop
push
popf
push
aas
jnp
test
push
gs
jno
sub
inc
pusha
dec
aad
bound
lcall
into
sbb
xor
out
pop
cmpsl
sub
imul
adc
pop
aas
pop
adc
lahf
push
stc
adc
test
adc
sub
pop
dec
ss
xorb
cmpsb
lods
jg
cwtl
rcr
adc
jne
cltd
jae
mov
mov
nop
call
cmp
lret
lcall
jmp
and
fidivl
sub
movb
jbe
cmp
dec
test
xor
loop
rcrl
fildl
mov
clc
xchg
jmp
dec
and
xchg
insl
cmpb
data16
in
add
rclb
cmpsb
pop
xchg
sub
xchg
cmp
cmc
outsl
js
sbb
sub
lret
push
jo
dec
sahf
jnp
jge
fildl
sbb
push
and
xor
dec
cmpsl
pop
fcomps
stc
add
jmp
mov
and
mov
lods
mov
outsb
xchg
out
popl
cmpl
inc
or
jnp,pn
mov
sub
repz
hlt
rcr
lds
lock
popl
ffreep
and
adcb
jae
lret
clc
adc
loop
insl
loope
add
sub
and
xor
and
add
insl
pop
in
jmp
add
int3
lcall
dec
outsl
lret
mov
and
jle
icebp
jne
hlt
fadds
adc
xchg
xchg
adc
xchg
mov
push
pop
and
sub
cmp
testl
ljmp
dec
xchg
nop
jecxz
fstpl
inc
mov
adc
xchg
lock
cmp
in
add
push
mov
fsubs
ret
cmpb
mov
xchg
or
push
cmp
xchg
in
call
adc
sahf
jns
push
push
aaa
inc
clc
dec
fisttps
sbb
sbb
pop
ds
pop
leave
pop
jge
xchg
mov
xchg
push
aas
adc
adc
sbbb
jg
sbb
push
push
in
lcall
jae
xchg
sahf
cmc
adc
jmp
xchg
cltd
cmp
mov
inc
outsl
pop
stos
mov
inc
inc
ret
hlt
ret
cmpsb
or
iret
cmp
adc
push
sarb
sub
pop
ret
lret
jne
popf
inc
imul
mov
dec
fwait
cs
stos
test
ja
sbb
cmpsl
int
adc
adc
aam
or
out
ds
test
mov
test
fiaddl
cltd
mov
xor
fcmovne
xor
sbb
push
sahf
loope
mov
cltd
cmc
aad
sbb
dec
inc
and
scas
int
mov
and
inc
insl
push
mov
dec
movl
push
cmp
jle
mov
xchg
jnp
insb
and
leave
lahf
hlt
ret
push
lret
push
les
xor
out
or
inc
fisttpl
lcall
dec
cwtl
mov
sub
lods
and
lea
xlat
cmc
push
dec
fidivrs
mov
in
test
cmp
sbb
pop
jecxz
mov
lret
call
sbb
mov
sbb
dec
jg
std
mov
scas
mov
jle
dec
cmpsl
mov
adc
test
mov
nop
addr16
sub
sbb
insl
pushf
fcomip
lods
jmp
push
pop
out
xor
notl
das
sbb
pop
sbb
jp
push
gs
movntps
inc
int
dec
inc
lret
sub
sbb
mov
lret
and
imul
pop
jecxz
rorl
addr16
ret
lret
add
sbb
cmp
add
jne
inc
push
scas
fidivrs
sub
cmp
mov
filds
iret
iret
dec
cmp
fcmovbe
pushf
mov
lods
sbb
or
movsl
xor
ss
cmp
shlb
into
test
and
xchg
mov
add
jge
mov
test
pop
lahf
xchg
push
imul
mov
into
lahf
std
es
inc
insb
jne
out
mov
in
sbb
je
fxch
cltd
adc
sbb
sbb
adcb
or
mov
aam
call
gs
inc
loope
pop
add
cmc
jae
enter
push
test
test
inc
shlb
inc
repnz
sub
pop
pop
sub
mov
mov
inc
sbb
lret
daa
inc
cmp
or
bnd
and
sarb
dec
fstps
cli
add
out
push
and
pushl
in
sbb
daa
adc
test
mov
fsts
test
and
inc
lahf
rcl
inc
sub
xchg
int
pop
test
pop
push
pop
mov
xor
js
xor
sub
xchg
add
mov
cmpsb
movsb
jb
aaa
outsl
loop
sbb
loop
xchg
call
icebp
jmp
jge
lods
fstpt
les
push
or
mov
sub
mov
or
jns,pn
test
outsb
imul
mov
lea
mov
or
sbb
addr16
stc
dec
in
ffreep
imul
dec
push
mov
lds
aad
popf
aam
push
lods
ss
cmp
xchg
roll
out
sub
pop
pop
ret
mov
pop
repz
cmovb
fdivrp
sub
shl
xchg
stos
pop
insb
cmp
and
xchg
and
xor
in
ds
jl
mov
test
sti
test
ds
inc
xchg
es
shll
cmp
pop
push
stos
je
jp
addr16
pop
push
push
dec
pop
sub
shl
xlat
scas
cmp
stos
inc
cs
xor
je
or
bndldx
test
scas
jl
jbe
cmp
insl
bound
add
inc
scas
or
out
int3
std
js
std
outsl
mov
loope
or
clc
mov
jge
xor
fsubrl
dec
and
aaa
pop
sub
cmpsl
and
add
sub
repnz
icebp
dec
adc
sbb
scas
lcall
xchg
and
lret
pusha
jmp
mov
loopne
fidivl
jp
jl
scas
pop
aam
jge
lods
rolb
lcall
into
jne
pop
sub
dec
xchg
stc
les
pop
mov
pop
xchg
imul
repnz
jns
adcl
out
push
repnz
out
es
lods
inc
inc
and
push
repnz
pop
daa
fnstcw
xor
fists
daa
cld
inc
bound
pop
xorps
xchg
xor
xchg
jp
outsl
cs
and
stos
adc
dec
push
clc
cltd
scas
mov
and
pop
aam
sbb
jno
imul
out
test
mov
mov
mov
cmc
add
rcll
ret
sbb
mov
or
in
or
mov
ficomps
xchg
lcall
sbb
xor
and
push
icebp
sub
les
in
aaa
jp
cmp
cmp
leave
in
or
fdecstp
mov
sbb
sti
mov
jb
shlb
sbb
out
lahf
das
and
jne
cmpsb
popf
sbb
int3
lods
or
push
pop
aam
rcrl
cmp
out
test
stos
ja
sub
ljmp
orl
and
ror
jae
xchg
pop
jecxz
push
cs
shll
hlt
imul
jp
sub
fstpt
or
fcmovne
xor
jg
fcomp
jmp
fidivl
jno
add
stc
mov
xlat
fildll
out
cmp
mov
inc
js
insl
sub
dec
imul
dec
fistl
xor
sahf
movsl
or
lds
jle
jmp
fldt
pushf
dec
leave
dec
or
mov
push
jle
and
pushf
mov
cmp
pop
and
cli
cli
xchg
scas
cmp
das
xchg
add
std
mul
mov
mov
adc
clc
xor
adc
outsb
mov
mov
push
jmp
xchg
mov
jg
pop
pop
jp
add
shlb
std
repz
jnp
jmp
jbe
cmp
mov
jecxz
and
out
loope
jnp
push
push
push
mov
and
test
adc
xor
lret
pusha
xchg
push
stos
add
jmp
aas
popa
dec
idivl
and
and
xchg
out
xor
scas
ja
test
cmp
pushf
mov
jmp
lret
push
fstpl
add
in
orl
adc
mov
insl
sbb
inc
repnz
sub
sub
jge
fwait
xchg
mov
mov
push
rcl
or
mov
jge
mov
fistps
push
jg
and
adc
scas
sub
cmpl
xchg
jmp
inc
dec
in
or
lahf
into
xchg
mov
mov
loope
leave
idiv
out
daa
sub
stos
mov
adc
cmp
and
sahf
adc
arpl
pop
movsl
inc
cmp
lds
cltd
jo,pt
inc
xlat
push
inc
ljmp
jae
cmc
pop
aad
dec
jae
pushl
cmp
addr16
lds
pop
dec
mov
stos
lea
dec
sbb
and
adc
es
push
shrb
fmul
pushf
das
leave
addr16
shlb
push
mov
gs
inc
clc
mov
jns
push
mov
lcall
xchg
jo
dec
test
fwait
and
adc
sub
mov
xchg
add
fwait
sub
sub
out
in
lret
ret
inc
fcmovu
cmpsb
in
sahf
lods
dec
gs
inc
pusha
inc
jge
sbb
mov
push
jecxz
mov
mov
nop
lret
mov
push
jnp
xchg
lcall
stc
insb
shr
sbbl
testl
xchg
fidivrl
aas
jl
addb
arpl
mov
and
lock
es
adc
pop
enter
lret
jmp
add
adc
add
repz
push
cmp
mov
xorb
clc
cmp
pop
mov
gs
xor
or
test
push
sbb
sti
push
int3
jecxz
cld
cltd
lcall
push
arpl
adc
jnp
idivb
scas
xchg
lods
mov
in
cmp
ljmp
sar
stos
jo
push
pop
in
ret
dec
inc
shl
cmp
xor
sbb
in
int3
pop
pop
insb
bound
pushf
stc
pop
ficoms
mov
inc
sbb
add
sbb
xchg
out
mov
add
and
xchg
aad
movsl
push
pop
mov
xchg
push
pop
test
test
leave
xchg
ds
adc
gs
test
mov
int
and
sub
or
cmpxchg
push
ret
outsl
fwait
mov
xor
push
icebp
insl
sub
xor
dec
ljmp
out
sahf
loop
mov
push
mov
hlt
mov
rolb
xchg
dec
sahf
insb
imul
xor
out
lret
popa
lcall
mov
and
insb
mov
jg
sub
xchg
fcmovnbe
add
imul
and
ljmp
fcoml
out
sahf
jnp
mov
imul
xor
fbstp
mov
icebp
adc
xor
iret
sahf
push
punpcklbw
nop
mov
cmp
enter
lea
out
mov
scas
stos
jns
ja
sbb
cmp
push
push
leave
mov
sbb
jb
repnz
inc
pop
das
jae
adc
xchg
cmp
mov
xor
ror
mov
xchg
test
rolb
fs
mov
add
and
mov
cmpsb
out
mov
xchg
and
into
inc
leave
in
fucomip
fisubrs
movsb
sbb
and
rcrb
sbb
push
adcl
xor
jno
dec
loope
cmp
sbb
inc
stos
dec
adc
sub
incb
ror
mov
cmp
jmp
jbe
aaa
aaa
cli
mov
movsb
cmp
dec
aam
mov
sbbl
mov
jg
cwtl
or
xchg
xor
or
lock
mov
fs
outsb
push
scas
add
lods
mov
stos
repz
incl
repz
rol
inc
les
jb
inc
mov
mov
and
pop
je
add
or
mov
xor
aad
sub
adc
pop
fcomps
xchg
inc
add
imul
jp
or
mov
std
pusha
add
mov
mov
stc
insb
adc
pop
jo
dec
mov
loopne
lret
xchg
es
imul
add
pop
mov
les
popf
or
mov
js
nop
fldl
xchg
jle
mov
nop
mov
cmp
outsb
push
ljmp
dec
add
js
out
inc
mov
dec
xchg
cmp
sbb
push
addb
fst
insb
divb
cwtl
pop
xor
push
add
outsl
lret
jno
call
repnz
insl
mov
sbb
mov
jne
fs
xor
xchg
sub
out
imul
cmp
jne
jmp
lahf
popa
inc
je
addb
daa
mov
cmp
orb
cmp
xor
inc
je
insl
int
xor
fwait
lods
bound
cmc
lahf
jp
and
mov
sbb
imul
dec
xor
test
dec
popa
add
sarl
out
cltd
lods
xor
repz
mov
lcall
mov
clc
xchg
out
dec
or
aam
push
xlat
jbe
xchg
repnz
sbb
or
mov
jne
dec
xor
clc
inc
sti
cmp
mov
fimull
jg
aaa
mov
jo
rcll
movsl
adc
pop
into
mov
aas
in
xor
xchg
jmp
xchg
enter
stc
pop
in
into
sub
mov
fistpl
fiaddl
inc
sbb
pop
out
idivl
jb
add
push
inc
jne
xchg
cmp
and
repz
jle
sti
mov
out
sbb
adc
cmp
xlat
push
dec
jnp
sub
xchg
add
sbb
sub
jmp
and
outsl
cli
pushf
jbe
lahf
out
mov
cltd
lret
add
pop
std
mov
dec
cli
fdiv
rcr
inc
lock
xor
stos
icebp
sub
xchg
fsubs
add
adc
insl
dec
ret
mov
test
lret
je
sub
jb
add
adc
sub
pop
sbb
idivl
int
xchg
int
lods
inc
ret
jg
outsb
or
ss
cmpsl
lret
mov
sbb
inc
call
adc
push
int3
fldcw
mov
rcll
enter
out
sub
addr16
cmp
scas
or
lcall
mov
cmp
sbb
mov
out
adc
mov
sub
mov
inc
pop
es
xor
test
ljmp
mov
pop
inc
mov
or
pop
jmp
iret
cmp
repz
repnz
movsb
or
and
cs
mov
pop
inc
dec
push
pushf
divl
lods
js
dec
ret
cmc
mov
les
ss
jge
add
negb
and
in
or
sarl
aaa
dec
mov
aas
imul
xchg
mov
test
mov
mov
ljmp
xor
jno
adc
jbe
das
lock
jle
aad
xor
mov
push
sahf
xchg
cmpl
ret
and
push
mov
je
jmp
aas
ret
dec
dec
bound
cmp
lahf
or
adc
andb
dec
and
or
insl
inc
sbb
iret
ficompl
out
mov
inc
pop
xchg
push
mov
idiv
daa
shll
stos
out
cmp
pop
es
ret
mov
mov
pop
mov
sub
addr16
mov
or
push
push
mov
cmp
das
jl
mov
pop
inc
jmp
lcall
mov
hlt
jns
jmp
pop
iret
sub
inc
test
jnp
xlat
xor
push
imul
inc
and
sbb
hlt
lcall
mov
sbb
imul
adc
aaa
je
add
lcall
xchg
jae
divl
sub
add
sarl
outsb
and
scas
test
xor
dec
mov
xor
inc
jmp
lret
xor
gs
dec
inc
mov
mov
mov
cld
lods
cmc
loop
lea
push
mov
push
outsl
repnz
sbb
jbe
cmpsl
jle
ret
inc
idivl
nop
mov
or
roll
insl
mov
test
outsb
cmp
and
shlb
mov
pop
cmc
jo
or
cmc
iret
adc
imul
arpl
xor
mov
in
fbld
loop
int3
std
xorl
lea
sbb
out
jns
or
push
sbb
nop
jg
xchg
out
cli
mov
push
inc
fs
push
jl
cmp
sbb
js
mov
jmp
adc
in
cs
jae
mov
and
pusha
inc
adc
and
inc
push
ret
push
adcl
jl
pop
sbb
add
sbb
jns
call
shlb
in
or
test
mov
dec
add
rcrb
push
xchg
mov
pop
mov
ds
xor
repz
stos
std
mov
insb
daa
and
adc
xor
outsl
jb
xchg
in
cmp
pusha
add
pushf
jnp
mov
inc
rcrl
outsb
pop
iret
add
fsubr
dec
sub
cmc
xchg
rorl
cmp
fstps
out
enter
insb
dec
mov
leave
aad
pop
in
mov
insl
addl
sub
nop
add
mov
popf
rclb
pop
mov
mov
popf
jo
mov
in
mov
or
mov
in
dec
sub
loopne
jle
inc
xchg
cltd
dec
repnz
mov
inc
test
jmp
aam
aad
mov
repz
ret
insl
stos
ficompl
in
iret
and
movsl
faddp
sbb
mov
cltd
in
addr16
sar
lahf
frstor
aaa
in
cmc
push
data16
mov
jno
loopne
mov
cwtl
xor
cmpsb
ljmp
fnstenv
adc
addr16
nop
push
xlat
adc
hlt
and
or
dec
sbb
aad
inc
inc
xchg
mov
pop
mul
xor
jp
out
inc
jmp
mov
push
cs
adc
push
loope
cmpsb
arpl
jl
pop
mov
push
xor
pop
adc
out
mov
pop
enter
movsl
adc
mov
leave
outsl
push
add
iret
sarb
clc
jbe
pop
iret
or
mov
outsl
pop
sub
push
aam
or
js
dec
lcall
aad
inc
sbb
repz
sti
daa
mov
cli
xchg
pop
cltd
std
push
loope
call
xchg
lret
fdiv
xchg
and
negb
cmp
cld
les
insl
cvtpi2ps
repz
sbb
hlt
and
push
inc
xchg
xchg
sub
stc
idivl
or
shlb
pushf
ficoml
pop
and
rol
add
imul
xchg
lods
js
add
mov
movsb
rclb
cmc
xchg
push
pxor
lock
pop
xlat
out
inc
shlb
dec
lret
lret
fucompp
repz
jns
xchg
xor
outsl
in
movsl
adc
sub
mov
push
in
popf
push
mov
out
pop
push
pop
rorb
xchg
into
push
push
test
push
sbb
outsb
pushf
xor
in
or
mov
scas
dec
jno
add
sub
inc
shl
pop
call
int3
cmp
jl
enter
insl
scas
or
mov
adc
xchg
and
movsl
roll
hlt
ss
js
adc
cmp
mov
or
jne
pushf
xor
in
fwait
inc
std
adc
stos
into
sbb
cs
push
shlb
iret
xor
cltd
pop
cmp
les
add
mov
imul
hlt
pop
mov
std
outsl
jb
leave
adc
roll
out
xlat
scas
lret
mov
cmc
mov
push
pop
xor
mov
incl
insb
sub
scas
popf
dec
fsubl
cmp
in
jae
lea
jmp
jecxz
jp
fnstenv
fsubl
or
pop
jle
mov
push
cmp
xchg
mov
scas
out
aaa
pusha
stc
cs
pop
lods
jecxz
add
orl
inc
jle
cli
push
popa
or
add
arpl
dec
lods
xchg
out
in
jo
xchg
push
xchg
xchg
repz
and
add
mov
xchg
addr16
adc
cmc
sub
aad
jmp
xor
push
push
enter
fcomps
jnp
inc
in
mov
push
sbb
sub
sbb
push
test
test
adcb
stc
test
push
xchg
shl
pop
inc
sahf
sbb
lcall
sbb
sti
pop
aaa
adc
pop
and
aad
push
pop
in
repnz
mov
mov
and
fisttpll
std
mov
xorb
pop
jo
pop
pop
cltd
mov
dec
xchg
cld
inc
ss
stos
push
push
lods
ja
int
push
out
movsl
mov
std
xor
xchg
adc
es
mov
mov
pop
pop
insl
xchg
xchg
mov
cltd
mov
dec
mov
and
mov
push
sub
std
pop
stos
pusha
mov
repz
add
adc
sub
push
dec
pop
cmp
rcrl
mov
jae
or
push
push
ja
mov
and
and
test
sub
xchg
aad
push
insb
dec
stos
fistpl
ljmp
dec
inc
push
mov
cwtl
mov
aaa
jmp
cld
and
sbb
rclb
lods
shl
xlat
frstor
mov
adc
out
add
movsl
roll
icebp
adc
rorl
jp
jns
jo
imull
xlat
push
sahf
in
dec
inc
movsl
shrb
test
popf
sub
dec
fwait
sbb
scas
js
jge
arpl
mov
outsl
aaa
sub
and
xchg
add
rclb
or
lds
fcomip
dec
jg
mov
jb
or
sub
xor
xchg
sahf
jns
out
int3
jp
jno
mov
call
mov
notb
xor
rcrl
mov
stc
pop
sub
outsl
ficoms
fdivrl
scas
loope
scas
jmp
ret
jns
jbe
das
sbb
and
mov
popf
outsl
aam
pop
addr16
add
dec
and
aas
test
loopne
jbe
add
sbb
xchg
add
xlat
mov
subl
js
mov
adc
lret
push
sub
adc
fdivp
jecxz
cltd
sbb
lret
add
repz
xor
push
in
cmp
dec
mov
inc
fidivrs
dec
mov
pop
mov
cmpsl
cld
cltd
push
mov
mov
daa
sbb
out
dec
es
repz
jecxz
call
pushl
mov
push
arpl
pop
insb
fcmovnu
arpl
jne
movsl
jmp
sub
push
leave
aas
jp
adc
int
and
clc
mov
or
nop
cmp
cmpsw
test
jmp
sub
fwait
mov
inc
movl
out
stc
ja
pop
xlat
mov
mov
rclb
pusha
inc
rcll
ds
cmpsb
mov
push
pop
jle
leave
push
test
cmp
adc
rcr
cltd
push
xor
out
imul
mov
mov
in
stos
shlb
in
test
xchg
mov
and
movsl
adc
frstor
mov
imul
aad
dec
pushf
sbb
mov
in
push
lret
lds
cmp
addl
mov
iret
sbb
push
int
insb
outsl
adc
icebp
cwtl
xchg
pusha
push
imul
addb
and
pop
xor
aas
ret
or
imul
arpl
adc
sub
shrb
fisttpl
les
and
call
sub
lock
lahf
fists
in
fsubs
cmpsb
outsl
and
pop
mov
mov
rorl
in
mov
pop
rolb
pop
adc
jp
add
push
add
pop
dec
lods
fdivl
ds
and
xor
mov
xchg
imul
mov
roll
or
lods
push
xor
stos
in
xchg
sub
push
insl
es
jg
loop
jns
jae
stos
aaa
dec
xor
stos
mov
scas
insb
xlat
repz
sarl
rcrl
mov
jne
or
add
jecxz
imul
or
add
inc
insb
jle
cltd
cmp
sar
stos
add
jbe
test
pop
leave
pop
loop
dec
cmc
shl
cmpsl
add
cltd
leave
in
xor
xor
push
inc
mov
pop
pusha
stos
cmp
lret
mov
dec
cli
fsubs
sbb
jno
and
ffreep
jge
xchg
jecxz
movsl
test
mov
or
dec
and
scas
xchg
sbb
mov
ljmp
jge
les
adc
popf
mov
incl
frstor
xchg
mov
mov
in
cmp
or
lods
pop
mov
aas
not
inc
mov
popf
aas
and
adc
jnp
push
std
adc
mov
or
push
ja
lret
pop
lds
sbb
mov
cmpl
sub
push
fists
mov
add
ret
or
dec
dec
fst
xor
test
sbb
xor
repz
mov
push
sub
xor
stos
insb
xor
cs
stc
rep
mov
leave
xchg
adc
push
jle,pn
cld
int
xor
sti
xor
insb
movsl
lds
scas
mov
mov
orl
fldl
std
sti
mov
mov
outsl
mov
adc
loop
add
or
xchg
xor
aaa
jge
pop
xor
or
rcl
int
and
jmp
jns
or
in
sbb
cmp
pop
and
jecxz
xchg
fwait
pop
jmp
sub
or
add
jle
pop
sbb
popf
cwtl
shlb
cld
xor
pop
adc
cmp
fldcw
dec
mov
pop
outsl
or
and
nop
inc
mov
push
pmaddwd
mov
fistpll
mov
jecxz
fiaddl
mov
pop
mov
cs
fldt
push
xor
sbbl
and
push
jg
jbe
mov
insl
dec
xor
aas
add
call
leave
add
and
adc
lahf
sbb
push
out
sub
sub
mov
ficoml
sbb
mov
loope
inc
mov
mov
mov
rol
inc
scas
iret
fisttpll
mov
movsl
pop
or
gs
fisubrs
mov
pop
mov
mov
pushf
jns
jb
call
sub
mov
mov
fsubp
mov
inc
rorl
cmp
mov
mov
sahf
inc
mov
pop
sub
lds
stos
lret
push
gs
icebp
rcl
cmp
iret
sahf
xor
pushf
std
fists
jbe
inc
mov
mov
mov
adc
rorl
dec
sbb
sarw
icebp
sarb
sub
popf
out
mov
mov
ret
lsl
or
jecxz
jg
rolb
jle
inc
jo
sub
mov
cwtl
fisttps
aam
pushf
jbe
movsb
xchg
cs
lahf
dec
pop
pop
lods
cmp
cmpsb
aas
imul
enter
adcb
aam
jno
cmp
jae
jge
and
or
xchg
lahf
mov
cwtl
dec
mov
fdivrs
pop
or
sahf
push
cli
mov
adc
xchg
and
jae
cmp
dec
mov
adc
push
inc
test
mov
imul
loop
shll
hlt
cli
cmp
movsl
adc
mov
jmp
fldl
pop
inc
cmp
inc
fcom
mov
data16
mov
fcoml
pusha
push
pop
fadds
aas
or
out
sbb
mov
pop
adc
inc
add
xor
inc
in
push
stos
jp
or
clc
xchg
das
sarb
sti
add
leave
stc
into
dec
or
je
and
stos
adc
push
adc
pop
dec
das
mov
mov
dec
lcall
cmp
inc
mov
jo
out
js
fisttpll
fstpt
lock
pop
pop
sub
xor
cmpsb
jae
aaa
xchg
and
mov
pop
xor
ret
icebp
fcompl
aaa
mov
push
jg
shll
sub
adc
sbb
xor
fcoml
lock
cmp
jo
or
stos
ds
stc
adc
push
out
lea
mov
xor
or
push
inc
dec
jg
shl
cmp
xor
push
or
rol
rcrl
sti
std
mov
rorb
mov
mov
insl
scas
mov
dec
adc
add
or
xor
popf
sub
pcmpgtw
mov
iret
sbb
test
inc
xchg
mov
xor
mov
pusha
jo
out
mov
and
fst
in
pop
mov
cmp
out
inc
mov
dec
rcl
dec
stos
add
popf
popf
adc
and
pop
popf
or
pop
aam
jg
shll
sub
xor
inc
das
out
sbb
push
and
out
rcrb
mov
sbb
sub
dec
rclb
ljmp
dec
inc
sbb
push
push
ss
mov
lods
or
xor
and
xchg
movsl
mov
mov
pusha
jecxz
and
in
out
mov
test
mov
out
mov
fisttps
insb
call
loope
pop
jp
xchg
xor
xchg
add
jmp
pushf
jne
sti
cmp
aam
add
fwait
sbbb
movsb
mov
xor
jmp
fdivl
test
xor
ret
out
jne
fistpll
pop
test
add
sbb
dec
xchg
sub
sahf
lds
sbb
lret
imul
loop
jbe
test
fwait
ds
mov
xlat
call
push
mov
es
push
xchg
cli
sub
filds
dec
lret
xchg
rcll
xor
inc
and
pop
adc
repz
dec
jns
push
mov
mov
add
pop
lods
inc
xor
add
dec
and
ret
adc
pusha
cwtl
repnz
lcall
push
mov
dec
mov
mull
leave
lea
mov
addb
jp
movsb
insl
or
sub
testb
out
or
inc
adc
sbb
mov
nop
xchg
jb
cmp
insl
dec
lahf
xorb
insb
or
dec
int3
int
pmaxsw
mov
stos
nop
pushf
ljmp
mov
fadds
imul
hlt
nop
pop
imul
add
test
and
mov
pop
sub
fidivl
shlb
jns
lahf
cmpsb
shr
pushf
es
xor
adc
xchg
or
cmp
fistps
fnstenv
dec
inc
push
pushf
cmc
and
daa
in
and
popl
shll
mov
push
call
in
idivl
mov
repnz
push
clc
pop
into
or
call
js
dec
aad
cmpsl
outsl
add
cmp
inc
and
add
mov
adc
pushf
dec
in
out
sub
iret
mov
sub
sar
cmp
lea
test
sub
aam
insb
jle
mov
movsl
pop
call
and
repnz
fstps
repnz
dec
lea
add
out
sti
cmp
push
pop
cs
in
cltd
mov
push
mov
clc
std
adc
mov
call
push
loop
push
gs
adc
lcall
push
loope
sahf
adc
push
pop
out
out
stc
fidivl
lret
dec
cmp
scas
pop
mov
inc
adc
push
lcall
cli
push
sti
push
fucomi
push
cmp
in
push
fcomp
loopne
gs
ficoms
cmpsl
sti
dec
in
xor
and
xchg
jge
push
dec
aaa
pop
inc
enter
jno
inc
ret
pop
icebp
lds
adc
pop
add
push
sub
jb
clc
push
adc
sub
fcomps
cmc
lea
outsb
ds
cmpsl
xor
xchg
testb
jnp
pusha
fucomi
sti
fcmovne
pop
cld
mov
test
dec
incl
jne
fwait
jp
nop
jecxz
add
pushf
loope
wbinvd
shlb
or
sub
cmp
sub
cli
jmp
mov
push
xor
scas
add
stos
adc
or
push
popa
cld
iret
cmp
mov
dec
mov
or
adc
loopne
fbstp
pop
and
add
and
and
test
insb
lahf
mov
aad
nop
dec
inc
push
xor
addr16
imulb
pop
pop
sub
sub
mov
inc
stos
loopne
int3
lcall
xor
enter
jge
jecxz
test
jbe
mov
test
outsb
xchg
mov
jo
call
sbb
push
aam
xor
lret
fcoml
push
aam
add
inc
and
out
jecxz
jl
cld
je
outsl
push
mov
and
push
cmp
sub
push
call
jbe
scas
xchg
cli
or
and
adc
gs
rcll
jg
fs
mov
xchg
sub
ret
in
outsl
jl
inc
dec
mov
inc
adc
ja
mov
ljmp
cwtl
inc
negb
xor
loop
in
stos
test
ja
mov
push
lret
push
adc
xchg
dec
leave
xchg
xchg
dec
cmp
outsb
imulb
arpl
mov
push
insb
add
or
xor
fcmovbe
pop
dec
cmpb
pop
out
ficoml
popa
fnsave
xchg
fimuls
ret
cmc
insl
jbe
sbb
mov
insb
rcrl
es
pusha
adc
push
out
insb
loope
imul
test
and
stos
mov
sub
push
gs
or
xchg
add
loope
sub
jns
sub
dec
jns
cltd
mov
jge
mov
fldl
call
repz
jns
pop
pusha
adc
data16
outsl
xchg
mov
cwtl
insl
jo
sbb
mov
iret
jecxz
cmpsb
ljmp
xor
inc
push
add
push
lcall
lahf
adc
ret
mov
insb
mov
lret
scas
scas
sub
sbb
xor
mov
or
add
and
mov
or
mov
push
mov
lret
sti
inc
adc
lock
outsb
mov
incl
xchg
push
aas
divps
xchg
mov
sub
cmp
dec
loopne
mov
pop
cmp
outsl
fisubl
jbe
cld
lret
stc
imul
sub
inc
pop
sti
pop
fnstenv
dec
jg
or
xlat
jne
jne
and
xchg
mov
aad
popa
shll
mov
add
or
cmp
mov
js
adc
mov
adc
and
shlb
cmpsb
pop
aaa
shlb
adc
jmp
aas
sub
in
mov
arpl
notb
ret
orb
arpl
sbb
cmpsl
xchg
js
add
enter
imul
fnstenv
push
cwtl
lret
popf
and
stc
xchg
and
cld
aaa
subb
push
icebp
loop
mov
xor
sub
out
dec
cmp
cltd
pusha
sbb
insb
loop
xchg
pop
pop
push
sub
dec
mov
or
mov
mov
sub
mov
cmp
mov
scas
dec
dec
dec
fisttpll
fsub
or
jge,pn
pop
repnz
test
push
jnp
dec
jnp
mov
and
cmp
jb
and
dec
inc
and
cmpsb
ficompl
cmp
rcrb
fnsave
mov
mov
stc
cli
inc
cmp
adc
mov
stos
call
mov
jecxz
mov
test
xor
pop
adc
out
orb
sbb
dec
or
mulb
loopne
outsb
cmpsl
imul
mov
cld
pop
mov
mov
and
test
nop
cmp
test
lcall
mov
sub
adc
sbb
leave
in
push
ss
fildll
repnz
in
cwtl
insl
testl
test
js
xchg
jg
jmp
and
gs
xor
adc
movb
daa
cltd
mov
lods
orl
xchg
arpl
das
stos
sub
inc
fistl
jnp
pop
shlb
add
add
arpl
add
add
ss
je
push
xchg
mov
fsub
and
cmc
rcrl
push
shl
inc
hlt
sar
sub
push
add
pop
ror
or
mov
std
test
mov
mov
push
mov
mov
jns
jg
gs
and
out
mov
jbe
test
pop
mov
enter
cmpl
xchg
insl
push
pop
add
adc
inc
fidivs
adc
decb
add
pop
sbb
inc
pop
mov
arpl
jnp
aad
js
sub
jmp
movsl
loop
pushf
int3
cmp
movb
adc
movsl
sbb
push
lret
mov
sub
call
mov
xor
dec
or
mull
mov
mov
out
mov
adc
fstpt
mov
inc
sbb
sub
sbb
imul
mov
js
shlb
pushf
sahf
lods
popa
dec
xor
pop
test
fstl
pop
ljmp
push
shll
mov
xor
dec
jae
jno
pop
arpl
inc
sub
loope
and
and
inc
pop
daa
push
outsl
lods
das
aad
sbb
pop
jmp
mov
or
in
repnz
jns
jl
stos
jmp
inc
sub
dec
lock
lods
pusha
push
aad
or
popf
dec
dec
mov
inc
adcb
les
and
ror
mov
cld
dec
inc
cwtl
je
sub
jnp
sub
mov
mov
sub
out
sub
xchg
sti
les
dec
push
cmpsb
imul
out
xchg
sub
out
add
inc
nop
push
or
adc
mov
xchg
mov
fnstsw
jbe
add
add
xchg
into
pop
jb
sub
lds
or
adc
mov
push
popf
mov
xchg
addps
iret
nop
dec
data16
sbb
mov
cltd
mov
push
push
repz
adc
les
cmp
inc
shl
outsl
movsb
fiaddl
xchg
mov
mov
loopne
sahf
in
or
push
test
mov
movsl
gs
fucomp
stc
jb
dec
inc
xor
xchg
inc
sti
insb
cmp
mov
int3
je
cmp
push
repz
xor
js
add
push
js
and
pusha
lahf
adc
roll
outsl
adc
push
or
lods
in
xchg
ljmp
popa
push
push
and
xchg
hlt
lahf
push
push
out
dec
mov
into
stos
mov
xchg
cld
pop
or
pop
xor
jbe
aaa
insb
jle
pop
cmp
pop
mov
rorb
pop
adc
sbb
pop
lret
inc
scas
test
pushf
mov
cmpsb
in
mov
jle
fimull
xchg
repnz
and
inc
rolb
xor
jg
and
sbb
and
jno
mov
cmpsl
jno
pop
popa
mov
cwtl
shr
cld
pop
sub
and
xor
loop
push
in
sub
imul
test
subl
add
push
gs
roll
adc
fisubrs
push
push
dec
ljmp
xor
ss
mov
cltd
stc
mull
hlt
imul
jecxz
mov
adc
pushf
push
pop
jmp
jmp
cwtl
ja
cli
aam
scas
fnstcw
cmp
sbb
nop
jo
push
jge
push
jmp
ljmp
pop
iret
jns
movsl
xchg
mov
inc
std
imul
sub
in
mov
inc
es
xchg
adc
das
repnz
daa
xor
in
dec
rol
inc
push
inc
mov
sub
xchg
and
adc
js
fstps
sub
jl
cmp
inc
scas
loope
addr16
sti
or
xor
fcomps
sarb
mov
mov
sar
xor
jae
loop
fmulp
push
es
push
shrl
push
mov
adc
xorl
inc
add
push
sub
cltd
push
shl
mov
add
cmp
lret
mov
sbb
addr16
divl
loop
inc
iret
ljmp
addb
xchg
fisttps
add
test
popa
aam
push
add
xor
jbe
sub
sub
cmp
mov
lock
cmpsl
sub
inc
mov
xchg
mov
dec
lcall
push
repz
fidivl
data16
es
lcall
adc
cmp
add
movsb
popf
popf
xor
inc
ret
cmp
adc
cmpsl
pop
xor
push
dec
xor
mov
jmp
jnp
in
xor
test
jmp
mov
xchg
or
arpl
xor
and
push
adc
inc
out
jmp
dec
mov
push
call
pop
and
lods
inc
push
rclb
mov
test
sbb
lea
push
mov
pop
jo
lahf
scas
ja
lret
sbb
lret
and
xlat
mov
mov
sarb
add
out
je
fstpl
add
mov
add
mov
outsl
in
xchg
mov
pop
xor
jo
test
out
inc
and
dec
fimull
pop
pop
insl
inc
jnp
push
test
aaa
shll
adc
imul
or
jge
lods
repnz
mov
or
mov
xchg
jecxz
xlat
leave
and
add
cmp
leave
xchg
outsl
repz
push
pop
lods
dec
mov
mov
add
xor
repz
out
dec
xchg
mov
lret
adc
cmc
jbe
aas
loope
cli
dec
repz
pop
pusha
ljmp
mov
mov
inc
loopne
loope
push
cmp
push
mov
inc
and
ljmpw
and
or
sarb
adc
inc
iret
inc
cmc
rcl
ficomps
add
loop
mov
mov
add
pop
fldenv
lods
inc
movsl
orl
add
push
repnz
jbe
xor
inc
lea
pushf
jge
pop
nop
iret
aad
sub
mov
dec
imul
pop
add
ja
dec
je
out
mov
out
repnz
es
jno
cmpb
and
add
xor
sub
ja
insb
lahf
test
mull
jp
xor
rclb
leave
mov
mov
cli
push
pop
nop
test
lods
dec
add
mov
imul
or
cmpsb
int
mov
inc
jo
inc
and
aaa
sbb
inc
and
sti
nop
out
jecxz
adc
dec
aad
jo
js
add
addr16
in
mov
in
ret
sbb
mov
or
and
xchg
mov
sti
jg
mov
in
push
out
xchg
push
jno
xchg
dec
mov
bound
pushf
fidivl
push
jnp
nop
popf
adc
inc
jg
sub
pop
aaa
lret
popl
pusha
das
pop
orl
or
pop
stos
xchg
xchg
ret
mov
xchg
in
dec
repnz
xchg
gs
jmp
push
jg
aas
add
push
stos
fisubl
or
and
adc
cmc
inc
ret
test
adc
testb
pop
xlat
mov
jno
pop
pop
addb
es
fwait
lds
add
xor
int
sbb
cli
psrad
pop
jbe
pop
std
outsb
testb
sub
pop
cmp
enter
and
xchg
pop
cmpl
mov
xchg
dec
mov
rolb
insl
adc
lret
fbld
in
cmpsb
and
mov
jl
cmpsb
add
test
cli
xchg
aas
xor
mov
or
jp
push
test
aam
iret
test
push
clc
xchg
adc
scas
mov
stos
fucomip
out
fwait
adc
fs
loopne
pop
pop
pop
scas
aam
xchg
push
fstpl
pusha
sub
sub
sbb
and
push
and
test
je
sahf
roll
out
xchg
insb
cmp
popf
in
mov
fmul
cmpsb
sub
sub
int
bound
das
loop
inc
cmc
sbb
sbbb
cmc
sub
push
jbe
icebp
faddl
or
adc
jl
lahf
mov
stos
mov
mov
push
push
mov
dec
xor
in
dec
pop
das
insl
orl
xchg
add
mov
adc
roll
fisubs
fiadds
mov
jb
jnp
loopne,pt
das
movsb
int3
xor
testl
add
lods
xor
in
xor
add
test
loope
and
xchg
loopne
icebp
sbb
in
mov
cmp
cmp
cmpsl
push
outsl
shll
sarb
lods
cmp
clc
ror
outsb
pop
cmc
test
icebp
nop
and
xchg
movsl
xorl
je
xchg
inc
and
or
cmpsb
icebp
shrb
mov
inc
adc
jg
jbe
cwtl
in
lret
mull
btc
insb
ds
out
cmp
pop
es
sub
mov
lret
ds
daa
nop
push
lret
notl
jne
aaa
sbb
pop
push
push
push
inc
jno
fsubrl
cmpl
mov
int
xchg
int3
xor
jl
repz
jl
inc
lods
aaa
adc
iret
mov
aad
adc
pop
mov
and
ret
arpl
in
cs
sahf
xor
inc
jle
pop
ret
aam
int
imul
push
dec
ror
js
push
addr16
and
hlt
ja
out
jl
or
mov
stc
ret
jne
pushf
aas
mov
and
jmp
hlt
lret
fadd
jle
inc
push
mov
js
fwait
dec
ss
mov
sarb
lds
cmpsl
data16
jb
mov
int3
shlb
sti
addl
xlat
sub
pop
push
inc
shll
mov
arpl
add
lock
in
cmp
mov
cmp
cmp
and
inc
add
pop
add
out
xor
fs
jo
and
cwtl
xor
mov
cmp
mov
stos
or
lock
or
clc
or
push
mov
mov
outsb
adc
test
icebp
lea
or
in
or
adc
push
xchg
dec
cmp
popa
cmp
inc
push
and
mov
dec
add
jne
movsl
movsl
jl
stos
rorl
adc
sub
sub
pop
in
push
dec
in
sub
adc
inc
or
cmp
in
jg
sti
xchg
addl
jge
out
mov
xchg
jmp
xor
lods
mov
push
in
cld
cmc
and
inc
incl
inc
scas
dec
negl
cmp
cmc
outsl
shll
jmp
ja
mov
cmp
or
or
dec
mov
push
loopne
push
dec
mov
repz
mov
inc
lods
rcl
out
pop
popa
je
enter
stos
dec
insb
jbe
jl
push
xchg
sbb
mov
je
xchg
negb
or
and
es
add
cmp
pop
jp
test
xlat
sbb
sbb
push
jns,pt
sahf
mov
enter
push
test
mov
sub
mov
jle
cmp
cmc
inc
out
mov
test
les
add
in
mov
stc
inc
mov
fnsave
sub
inc
jg
sbb
pop
rcpps
iret
xchg
push
cmpsb
mov
movsl
aas
int
xchg
dec
push
lret
insl
std
adc
mov
out
adc
push
cwtl
stos
movsl
jle
int
jno
cld
lret
data16
push
sub
outsb
fisttpl
jecxz
pop
mov
ret
clc
sub
sbb
bound
pop
push
and
add
pop
or
out
aam
mov
jg
dec
sahf
fwait
mov
adc
xchg
add
inc
in
cmc
jmp
sti
out
mov
or
mov
add
inc
clc
hlt
sti
dec
cmc
out
pop
rcll
push
lods
lret
xor
in
xchg
and
test
dec
xchg
jno
into
jno
pop
jp
cmp
mov
les
or
xchg
loopne
and
or
into
mov
xor
dec
pop
ja
cwtl
outsl
daa
jge
cmpsb
fisubs
sub
pop
adc
ss
daa
xchg
mov
in
cli
lea
fisubs
jl
lret
mov
push
ret
aad
in
scas
sub
adc
adc
push
lods
jp
or
xor
pop
jae
rcrb
lahf
mov
cmp
pop
bound
clc
sub
inc
fnstcw
or
adc
jl
push
xchg
dec
xchg
loopne
out
xor
and
mov
ds
adc
jp
imull
xchg
xchg
outsl
pop
mov
cmp
add
ds
shrb
lds
sub
mov
dec
xchg
and
sbb
mov
pop
or
inc
and
js
fucom
ret
insl
mov
rcl
lods
outsl
inc
mov
in
adc
aaa
jg
pop
mov
push
adc
mov
popf
cmp
addl
daa
sti
lods
movsl
fldl
dec
js
and
test
lcall
adc
clc
mov
pop
sahf
loope
sbb
mov
xor
inc
in
mov
push
fdivrs
dec
stos
jb
or
pop
movsl
pop
fidivs
call
and
jno
jl
or
pop
cmp
rorb
mov
fisubl
ljmp
in
stos
cld
rclb
add
popf
daa
cltd
fadds
add
and
fiaddl
mov
ret
inc
or
xchg
js
push
fsubrs
sub
incb
adcl
shll
dec
fs
mov
mov
or
inc
xchg
inc
xchg
std
inc
xor
add
inc
sbb
aaa
xchg
in
std
or
xor
imul
dec
mov
and
pop
insl
ss
ret
sub
pushf
jbe
imul
arpl
dec
int
xchg
jg
movsl
cmp
jecxz
adc
test
clc
lahf
iret
mov
jecxz
shlb
push
mov
pop
jmp
xor
pop
xor
inc
push
push
sbb
mov
nop
mov
repnz
out
mov
pushf
push
iret
idiv
push
hlt
stc
xchg
xchg
add
mov
shll
popa
push
aaa
push
loope
fwait
ret
mov
cld
xor
and
shrl
jl
add
mov
shrl
stc
clc
pop
data16
xchg
pushf
arpl
into
cmpsl
and
je
lret
or
jl
scas
loope
out
lret
jge
pop
xchg
popa
popa
push
sbb
scas
dec
fwait
ja
jne
adc
sbb
pop
in
enter
push
mov
hlt
mov
or
pop
jl
fisubl
cmp
push
fisubl
sub
out
shll
movb
mov
and
addr16
out
test
jecxz
jmp
in
aaa
std
or
mov
push
into
fs
sub
jge
mov
and
fsubr
loop
cmpsl
lock
add
dec
push
nop
addb
or
or
xchg
sub
ja
mov
or
repz
fcoml
rcr
test
into
repz
push
push
dec
leave
in
outsl
pusha
inc
lods
repz
out
mov
clc
push
cmp
sbb
stc
iret
push
xor
sub
lods
rolb
pusha
push
es
jg
and
gs
repz
mov
cld
pop
inc
mov
xor
inc
ficoml
test
insl
sub
pop
push
sahf
lret
jo
ljmp
lea
jmp
or
push
ljmp
jbe
and
sti
push
popf
gs
and
rorl
and
outsb
test
cltd
clc
sub
inc
mov
cmp
es
cmp
lods
mov
gs
mov
aaa
add
push
loopne
inc
dec
lcall
cwtl
fnstenv
arpl
mov
fstpl
mov
ret
push
fimuls
es
lds
add
std
push
push
fldenv
stos
cli
dec
xchg
push
inc
add
push
lret
sub
icebp
ds
cmp
dec
outsb
inc
movsb
xchg
mov
inc
dec
cli
xchg
jp
mov
pop
fwait
adc
int3
push
fcmovb
and
sbb
push
cmp
popf
out
out
push
insl
add
fsubrl
or
add
arpl
bound
hlt
jno
add
xor
aam
dec
lcall
push
mov
sahf
and
into
rcr
repnz
add
jmp
pop
mov
mov
adc
mov
std
mov
mov
or
repnz
repnz
loope
dec
testb
arpl
stos
stos
lea
xchg
push
sbb
mov
lret
sahf
inc
addr16
rcll
pop
inc
xchg
mov
insb
jnp
xor
sbb
and
lahf
lds
xchg
stc
fcompl
mov
cld
pop
sar
mov
mov
sub
adc
or
ficompl
push
outsb
ljmp
jmp
out
fs
leave
push
div
xchg
mov
xor
mov
sub
jne
sbb
push
pop
cmpsb
out
arpl
dec
scas
out
jle
pusha
lret
sub
inc
fldcw
cli
inc
mov
mov
jg
aad
mov
pop
xor
xor
xchg
pop
or
insb
lds
lcall
movsb
push
pusha
inc
fsubrl
repnz
pop
or
pop
push
jb
mov
adc
je
stos
aad
sub
shlb
call
jae
mov
test
inc
jno
sahf
mov
jg
mov
add
and
fsubrs
sbb
jns
test
les
xchg
idivl
mov
pop
sbb
popa
fstps
insl
dec
sbb
out
mov
sub
out
push
sarb
popf
std
jbe
jns
aam
insl
dec
pop
add
sbb
loop
repnz
xchg
push
pop
pop
cld
dec
pop
or
loope
lea
xchg
mov
fsubl
lcall
js
scas
cmp
push
inc
gs
and
adc
mov
cmpsb
mov
mov
lods
iret
lahf
lods
dec
mov
sub
xchg
jo
add
inc
mov
sub
pusha
mov
add
in
add
sbb
push
int
adcl
aaa
xchg
xor
adc
push
xor
aam
push
mov
sbb
jne
into
mov
cmc
inc
lret
xor
push
cmp
mov
dec
sbbb
cmpsl
les
outsb
jb
lcall
lcall
mov
pop
inc
inc
imul
popf
je
mov
lds
ret
int3
lcall
ret
jecxz
dec
subl
pop
pop
inc
arpl
push
pop
sbb
or
sahf
popa
xlat
out
hlt
aad
mov
imul
mov
clc
lea
mov
dec
test
cmpsl
cmpsb
decl
mulb
jae
test
sar
push
mov
repz
mov
icebp
inc
inc
popa
sbb
sub
lcall
out
jl
mov
loop
push
mov
push
rcl
jns
dec
pop
mov
pop
add
push
mov
or
push
in
test
fidivrs
ss
dec
outsb
push
dec
mov
sub
mov
sub
mov
js
inc
pop
jns
inc
mov
pusha
mov
gs
xor
les
out
mov
out
dec
sub
jle
xchg
out
jno
inc
pop
adc
icebp
sbb
inc
fdivl
imul
mov
fcomps
je
pusha
dec
aaa
add
in
aas
out
or
xor
sbb
and
int3
js
sti
data16
loope
dec
adc
jne
test
loope
push
xor
enter
xchg
push
pop
fmul
popa
loopne
jle
push
imul
lock
sbb
pop
xchg
popf
mov
frstor
jbe
sub
push
push
jno
or
sbb
pop
sub
mov
out
outsb
pop
lods
jle
insb
cmp
push
vmovaps
mov
mov
das
out
sbb
push
push
nop
ret
hlt
inc
mov
rcrb
addr16
pop
inc
sub
pop
pop
jmp
fcmovnu
mov
inc
std
inc
and
fmul
test
adc
orl
mov
xlat
out
cmp
adcl
pop
jno
mov
jl
fldenv
push
insl
push
add
loop
sbb
and
mov
mov
cli
ret
jl
repz
outsb
sahf
inc
xlat
mov
insb
dec
xor
fcmovnb
inc
js
lcall
inc
stos
pop
mov
inc
lret
add
lret
and
dec
jne
mov
cltd
jmp
adc
fadds
fsubrp
xchg
rolb
push
das
stos
fnstenv
mov
adc
loopne
dec
pop
mov
push
pop
jb
sbbl
fstpl
mov
sbb
jle
sbb
jns
sub
sub
addr16
jmp
mov
jo
mov
adc
fwait
pop
fsubl
pusha
jecxz
pop
jmp
ret
cmp
inc
mov
imul
xor
stos
mov
leave
mov
inc
outsb
dec
and
cli
fs
mov
repnz
pop
adc
mov
pop
jb
mov
clc
xor
xorb
int
scas
aas
jo
jo
ljmp
sbb
xchg
mov
inc
in
dec
mov
pop
pop
xchg
out
add
push
xor
aad
mov
pop
jle
addr16
fstpl
push
incl
mov
ss
lods
cmp
daa
mov
je
lahf
movsb
stos
loop
int3
cs
outsb
jb
sub
in
jg
inc
sbb
ds
add
push
mov
ss
bswap
inc
enter
jecxz
push
and
les
out
mov
or
jge
jo
adc
cmp
sbb
inc
pop
daa
mov
add
cmc
hlt
mov
sbb
xor
dec
adcb
dec
jp
stos
mov
clc
sbb
xor
out
adc
loopne
sbb
addr16
xor
mov
jb
outsb
repz
es
hlt
clc
push
jno
lds
mov
xchg
mov
push
xchg
xor
out
ret
aam
add
les
and
xorb
cltd
popa
dec
inc
aaa
ja
adc
cmc
sbb
jnp
cli
int3
xchg
lods
xor
xorb
test
or
jns
lret
ja
test
sbb
fs
mov
pop
sbb
jmp
mov
jge
js
in
int
sarb
add
movsl
mov
ret
std
out
push
mov
stos
cmp
rcll
ljmpw
adc
xchg
mov
out
cmovo
out
clc
pop
fsts
and
movsb
mov
xor
xlat
into
lods
lret
pop
or
xor
out
pusha
fs
cmpsl
js
pop
cwtl
push
mov
lahf
adc
arpl
adc
movsl
aam
inc
fwait
push
xchg
mov
int
jae
jecxz
jg
inc
test
push
sahf
cmpsb
lods
push
xor
notb
aaa
out
push
rcrb
enter
roll
lods
sbb
ja
popa
add
mov
jmp
xchg
adc
shl
cmp
fld
push
mov
or
or
lret
shrb
lea
add
fistps
push
lret
inc
jns
xchg
imul
xchg
and
push
xchg
sarb
mov
ret
mov
andl
cmc
repnz
insb
cmp
loope
scas
das
ret
and
subl
outsb
lret
lods
ret
in
pushf
test
lcall
fisubrl
xchg
and
into
daa
xor
es
insl
iret
sbb
mov
test
div
pop
stos
cli
bound
pop
add
xor
push
push
cltd
xchg
test
insb
dec
andl
push
push
jb
cmp
jle
adc
fmull
lret
leave
fildl
icebp
xchg
jno
adc
and
sbb
push
or
divb
xor
pop
fsubrl
lods
sub
jbe
mov
cmp
stos
mov
addr16
popf
lret
out
mov
mov
push
xor
mov
loopne
dec
mov
add
cltd
inc
adc
pop
adcl
or
dec
stos
leave
es
arpl
xlat
cmc
arpl
les
movsl
out
or
cwtl
sub
gs
clc
popf
push
aam
mov
cmp
ljmp
stos
ljmp
fldenv
push
push
int
add
push
int
fstl
in
test
fst
and
mov
mov
test
mov
sbb
cli
xor
data16
cwtl
push
fs
gs
jno
inc
sti
inc
xor
pop
mov
dec
mov
add
mov
ja
lea
pop
push
inc
xor
xchg
pop
push
pusha
inc
dec
or
mov
aas
and
aaa
in
scas
cwtl
pop
jo
in
push
stos
cmp
fs
push
xchg
inc
jnp
push
test
imul
test
jl
xlat
adc
in
hlt
ret
stos
jecxz
and
jecxz
and
add
mov
daa
lds
pop
roll
sub
clc
loope
sbb
push
stos
cmp
jbe
pop
out
movsl
dec
sbb
mov
std
pop
or
and
icebp
xlat
xor
adc
in
repz
in
loope
mov
out
add
xchg
loope
add
jg
cmpsb
xor
jp
out
in
loopne
cwtl
fiadds
dec
pop
mov
pop
test
loopne
iret
inc
test
out
inc
sti
imul
repz
enter
in
push
lods
jmp
into
addl
dec
stc
out
fcmovbe
gs
jbe
dec
jnp
xor
mov
push
outsl
pop
jle
outsb
loop
jb
mov
jno
data16
and
iret
mov
jecxz
inc
mov
adc
call
or
xor
rorl
or
test
test
and
lahf
cmp
pop
jae
pop
ficompl
sbb
jnp
negb
xor
scas
fcomps
inc
aaa
cltd
js
cmc
enter
daa
pop
pushl
mov
push
pop
cmpsb
ja
out
or
dec
mov
scas
rcll
push
xchg
jnp
mulps
cs
loop
nop
das
xchg
inc
repz
xor
insb
xor
push
cmp
push
dec
in
jle
xorb
jg
fisubrs
add
mov
mov
jmp
sbb
mov
and
outsl
mov
xchg
idivl
sbb
sbbb
fmull
ret
fadds
test
jae
ficoml
and
in
inc
dec
lock
repnz
aaa
mov
sub
insl
mov
inc
inc
icebp
aad
mov
inc
and
leave
push
out
lahf
pop
pushf
in
repnz
xchg
add
push
or
insl
pop
out
test
cmp
xchg
pop
xchg
jmp
arpl
dec
divb
fcomi
ja
jnp
and
mov
push
movsl
std
adc
movsl
mov
sbb
cmp
nop
sub
pop
mov
sbb
fnstcw
pop
in
out
enter
movsb
adc
push
sahf
fs
mov
xchg
xor
add
in
movsb
sar
adc
inc
cmc
fdivl
inc
push
insb
pop
enter
aam
loopne
jg
fs
sbb
xor
sbb
push
flds
push
aaa
subb
pop
jns
xor
in
test
mov
xor
out
sti
cmp
xlat
jnp
insb
scas
dec
lret
or
add
pop
mov
imul
shlb
push
xchg
insb
or
fptan
aad
mov
push
push
pop
lock
aam
shr
push
arpl
sahf
dec
mov
adc
xchg
dec
lds
stc
sbb
mov
mov
test
int3
incl
pushf
loope
stc
cld
adc
nop
push
sbb
insl
in
push
clc
mov
mov
les
lods
sbb
pop
jo
into
dec
xchg
int
addr16
divl
fstpl
adc
mov
test
push
jp
stc
mov
movsl
cltd
cmpsl
sti
loope
jns
xor
ds
lds
or
les
mov
sahf
aam
xchg
icebp
or
adc
push
xlat
pop
mov
rorl
mov
xchg
pop
jl
test
add
push
xor
imul
xchg
test
jecxz
cmp
jbe
or
aas
jbe
das
iret
adc
and
pop
iret
adc
stc
push
and
lret
dec
shlb
sbb
push
dec
jo
test
into
cmp
in
jno
xlat
cwtl
xor
out
orb
pop
jmp
adc
call
fsubl
cli
mov
orl
push
fisubs
fmul
and
jns
lds
int
push
repnz
push
or
insl
jo
cld
das
out
bound
mov
out
popw
icebp
xlat
ljmp
enter
jns
pushf
adc
call
jne
mov
aaa
pop
mov
test
add
xchg
fisttps
xchg
mov
mov
pmaxsw
adc
inc
repnz
out
push
or
push
leave
add
bound
xcrypt-cbc
cmpsl
roll
push
push
es
push
fimuls
cmp
lret
bound
sti
xchg
addr16
je
sbb
or
lock
xchg
sbb
les
add
daa
jbe
pushf
addps
mov
out
call
or
add
jne
fimuls
inc
cld
pop
lcall
testb
and
call
mov
mov
aam
shll
jge
in
xchg
sbb
xchg
sub
jbe
push
and
mov
data16
pop
jb
jnp
stos
jge
decb
sbb
stc
or
mov
leave
or
pop
add
adc
jb
imul
addr16
mov
or
bound
and
add
loop
or
mov
cmp
adc
sub
push
inc
push
cs
rclb
in
mov
sub
les
mov
mov
inc
and
or
pushf
lret
jbe
rorl
push
inc
dec
mov
adc
push
sub
sbb
pop
or
gs
mov
cs
cld
and
ds
ffreep
sarb
mov
adc
dec
jb
bound
adc
mov
ljmp
inc
aas
cmp
aas
xchg
lret
mov
adc
pop
sbb
out
add
add
push
fnsave
xchg
test
sti
stos
pop
dec
jb
fstl
mov
cmpb
mov
iret
add
sub
or
mov
roll
mov
lcall
xchg
push
inc
insb
cld
test
xor
cmp
pushf
mov
cltd
push
cmp
std
or
stc
xor
and
enter
cmpsb
and
int
mov
cmp
adcl
jnp
dec
movsb
movsb
popw
sub
aaa
xor
and
fsts
mov
push
bound
les
cli
fsts
movsl
cs
jae
int
jle
add
adc
mov
loopne
or
or
mov
and
push
jmp
cltd
insl
insl
cs
xchg
sbb
lds
stc
dec
push
adc
dec
pop
cli
out
insl
rcrb
shrl
mov
cli
mov
sbb
and
xor
cmpsl
push
fisubs
xchg
sub
xchg
aad
sbb
push
imul
or
and
icebp
dec
xchg
mov
fdivs
das
cmp
mov
lds
inc
push
int3
jg
push
sub
xchg
jno
out
movsl
in
out
scas
push
clc
inc
fldt
sbb
mov
cmpsb
outsl
pop
out
mov
mov
fsubs
mov
stc
test
jno
or
add
int3
adc
fucom
cmp
xchg
rcl
xchg
into
mov
repz
lretw
xchg
mov
cmpsb
add
cmpsb
fnstenv
inc
mov
test
sbb
xor
stc
mov
movb
xchg
adc
jp
push
jecxz
mov
ffree
mov
icebp
ss
cwtl
or
sub
add
mov
shl
ss
xchg
adc
inc
xchg
cli
cmp
mov
loopne
int3
enter
pop
outsb
icebp
aam
dec
cmp
jp
sbb
sub
pop
and
sbb
mov
mov
pushf
fsubrs
cmp
dec
arpl
xchg
pop
push
or
inc
mov
or
push
pop
inc
inc
aad
dec
aam
sbb
pushf
lock
add
jp
dec
lods
into
mov
mov
testl
lret
or
inc
or
sbb
xchg
cmp
sbb
outsb
mov
out
push
jo
inc
xchg
pop
mov
ret
mov
mov
sbb
aas
addps
jl
push
adc
test
popa
and
jns
or
sbb
dec
addl
loop
notl
push
xchg
shr
xor
call
hlt
inc
es
sbb
dec
sub
lock
inc
pop
loope
int
fidivl
in
mov
shlb
jecxz
jmp
ret
jge
push
mov
xchg
and
push
cmp
and
inc
dec
sbb
icebp
dec
inc
jmp
andl
sbb
inc
jecxz
outsl
repnz
popf
in
cltd
dec
lods
addl
jae
fisttps
insl
mov
push
adc
or
test
inc
rclb
lahf
xchg
pushl
inc
es
mov
je
hlt
imul
lahf
jecxz
cltd
xchg
pop
insl
mov
dec
movsl
sbb
addl
ljmp
call
mov
in
xchg
ljmp
adc
push
push
fisubrl
fsubrp
mov
xor
pushf
das
icebp
int3
sbb
add
push
cwtl
fidivrl
insb
and
pushf
sbb
add
xor
into
mov
or
sub
arpl
icebp
movsl
fsubs
outsl
cltd
stc
sbb
adc
pop
xchg
arpl
sub
fnstenv
cmp
adc
adc
mov
stos
xor
push
pop
cli
test
es
sarb
sub
xchg
ljmp
push
xchg
fisubrl
je
cmc
lcall
inc
or
es
mov
std
jno
jp
add
push
outsl
mov
pop
mov
out
aaa
arpl
stos
std
cmp
pop
mov
paddd
sub
add
add
ljmp
stos
or
mov
cmp
into
lcall
sbb
adc
iret
push
push
iret
movsl
or
in
xchg
jno
dec
ss
push
nop
pusha
pop
xor
scas
pop
push
ljmp
pop
test
sbb
movsl
data16
jbe
decb
ds
movsb
mov
fs
loopne
insl
icebp
lods
jno
and
in
add
sbbb
inc
roll
loopne
enter
clc
repnz
sub
jmp
aad
fdivl
push
and
pusha
into
cmpsb
jo
cltd
lods
in
dec
inc
push
xor
mov
sti
push
sub
cmpsl
ret
notl
push
or
push
scas
mov
pop
xchg
repz
add
cmp
xchg
aam
jae
mov
xchg
push
pop
stos
mov
pop
arpl
mov
jg
dec
repz
loopne
ds
dec
movl
jmp
sbb
clc
mov
repnz
loop
and
pop
std
adc
minps
ret
in
dec
lcall
jl
mov
or
mov
add
push
movsb
push
mov
outsl
mov
adc
movsb
inc
and
or
aam
adc
cwtl
dec
imul
ret
push
push
pop
cli
xchg
loop
loope
pop
mov
fwait
movsl
cmp
repnz
sarl
add
ret
outsb
into
mov
scas
xor
out
pop
mov
insl
mov
divb
inc
fs
je
or
dec
rcl
fwait
ret
testb
leave
loopne
sub
and
hlt
psubusb
js
inc
pop
sbb
add
shll
sbb
dec
shr
and
cmpsl
movl
in
mov
xchg
out
ret
cmc
and
in
pop
cmp
mov
int3
call
in
xchg
into
mov
idiv
mov
arpl
or
pop
push
ret
xchg
in
stos
mov
fildll
dec
popf
outsb
inc
out
jnp
stos
leave
int3
fisttpll
sub
and
cmc
loopne
inc
enter
in
jnp
dec
and
inc
and
daa
mov
movl
stos
fidivrs
ds
lods
orb
imul
clc
mov
jo
xchg
ja
dec
pushl
sarb
mov
inc
addl
xchg
cmp
cmp
scas
or
mov
cwtl
fisubrl
dec
popf
push
xor
mov
add
and
mov
pop
or
loopne
aam
int3
je
loope
imul
daa
xchg
dec
loopne
jecxz
and
cmp
inc
movl
fisttpll
popa
in
jge
stos
in
sahf
iret
fstpl
mov
addr16
test
pop
mov
xchg
popa
mov
fwait
int
jno
xlat
cli
xchg
push
out
jl
push
aas
mov
mov
or
mov
shlb
jne
jle
out
gs
xlat
lahf
dec
jnp
lods
mov
test
pop
sub
lods
arpl
cmpsl
repz
hlt
in
aas
ljmp
aaa
mov
sbb
push
mov
mov
dec
mov
xor
movb
mov
adc
xchg
inc
iret
mov
mov
jb
or
sahf
push
xchg
pusha
push
mull
int3
xchg
pushf
xchg
mov
jns
dec
xlat
push
mov
or
lock
dec
cmpsb
push
pop
sub
sub
xor
lea
push
fistps
scas
mov
mov
sub
mov
or
mov
xchg
les
sbb
dec
pop
test
sub
or
push
jle
ds
mov
pushf
xchg
std
cmp
jecxz
push
inc
cmp
inc
gs
mov
mov
mov
mov
cwtl
rolb
es
mov
mov
nop
jo
sbb
xchg
wrmsr
fs
call
pusha
and
or
in
leave
imul
cmp
push
aam
cld
xor
cmp
loope
cmc
call
jp
xchg
mov
sub
stc
fwait
dec
jg
jnp
nop
pop
iret
pop
add
jl
repz
pop
and
mov
je
movsl
cmp
inc
lock
lock
fwait
mov
jbe
pop
scas
aam
popf
jle
xor
test
sub
mov
out
jp
dec
or
adc
fisubl
dec
addb
adc
jb
in
adc
jo
jns
mov
aas
repnz
nop
int
aad
invd
mov
sbb
lcall
dec
adc
adc
les
enter
sbb
decl
fmuls
jge
xchg
add
adcl
dec
cmp
int3
in
jmp
cltd
push
mov
cmp
stc
xchg
popf
lahf
pop
jg
pop
mov
push
ret
popf
mov
movb
mov
ret
shlb
sub
xor
imul
push
mov
test
stos
enter
rcrl
jp
rcr
pushf
out
jle
fs
push
pusha
cmc
mov
lret
dec
sti
mov
orb
inc
cmp
aad
stos
push
pushf
inc
shrl
sbb
jl
pushf
mov
push
sub
mov
xor
push
insb
fdivrl
pop
lret
cmp
jns
push
and
out
jp
in
add
adc
insb
mov
std
hlt
or
jo
hlt
popa
jmp
hlt
leave
jmp
iret
inc
mov
sti
mov
push
xchg
dec
adc
loop
cltd
xor
and
mov
es
cmp
icebp
fcmovu
rcr
xchg
xchg
out
sahf
sbb
test
out
lcall
inc
dec
and
repnz
faddl
jne
outsb
and
sbb
inc
sub
insl
mov
inc
inc
xor
pop
jns
stos
sbb
jmp
daa
ret
xor
xlat
xor
test
lret
es
jg
and
push
clc
enter
stos
pushf
imulb
cwtl
test
in
xchg
pop
and
daa
jle
pop
push
mov
shlb
mov
jnp
enter
pushf
cltd
das
sahf
cltd
call
cmpsb
lahf
daa
loopne
adc
push
out
xor
sub
xchg
jmp
adc
mov
xchg
lret
movsl
loop
jle
xor
add
pop
dec
mov
fsubr
test
loop
pop
dec
test
mov
xchg
sahf
push
mov
scas
pop
loope
stc
lahf
sti
sbb
cmp
inc
jp
cmp
cmp
lods
mov
inc
mov
mov
or
mov
mov
ret
jo
cs
dec
imul
push
pop
mov
jmp
inc
scas
mov
jae
ljmp
aas
out
fdivrp
mov
insb
dec
int
pop
or
push
mov
subb
and
sbb
mov
enter
jb
stos
in
or
or
dec
sub
movsb
add
mov
test
dec
in
stos
jo
cmp
js
out
rcrl
out
push
out
ficompl
stos
cltd
mov
sub
sbb
xlat
sbb
jge
inc
sbb
or
xlat
jae
insb
nop
mov
iret
fldln2
jb
and
mov
pop
lret
outsb
xlat
mov
lahf
sarl
mov
pop
arpl
push
dec
lcall
pushf
push
mov
test
stc
shlb
cmp
dec
int3
stos
in
sbb
scas
or
out
lds
cld
scas
int
std
adc
inc
mov
lahf
loopne
aaa
push
push
insb
movsb
dec
ljmp
rep
xor
aam
mov
clc
ljmp
cld
scas
jge
adc
mov
cmp
test
fs
xchg
jo
fprem
cmpl
ficoml
push
sbb
sbb
ds
xchg
daa
sbb
in
stc
cmp
in
or
push
cs
push
inc
pop
jno
cmp
push
ljmp
cmp
repz
xchg
xchg
inc
icebp
ljmp
dec
cmp
mov
movsl
sub
mov
mov
in
addr16
arpl
add
in
sub
test
and
adc
mov
andl
lds
jae
sub
mov
sub
pop
xor
shrb
dec
decl
jb
inc
cmc
js
inc
outsl
mulb
not
jl
mov
push
mov
repz
dec
push
mov
xchg
decb
das
jle
out
ror
push
cmp
insl
xor
sbb
lahf
mov
push
dec
insb
popf
lahf
gs
pop
sub
sub
addr16
pop
pop
mov
push
in
add
jecxz
xchg
pop
scas
mov
sti
ds
adc
dec
js
aaa
add
stos
xor
lret
inc
cmp
ret
mov
pop
cwtl
mov
fldl
repz
push
add
into
sti
clc
movsb
test
inc
cmpsb
js,pn
mov
jne
loop
pop
xor
hlt
lret
sbb
pop
loop
add
pusha
insb
mull
mov
int
mov
jne
pop
xlat
aad
xchg
sbb
int3
mov
arpl
sbb
jns
pop
les
and
or
imul
fimuls
adc
cmc
fimull
add
cmpb
loope
fsubr
rclb
in
gs
adc
pop
fnstenv
pusha
fbstp
inc
pop
in
push
in
out
mov
jb
mov
or
sub
fwait
xor
or
sahf
les
hlt
ficompl
jbe
out
dec
cltd
loopne
sub
imul
or
xor
test
insl
cmc
movsl
icebp
adc
shl
mov
jnp
jmp
orl
or
add
xchg
mov
mov
inc
in
dec
and
shll
insl
xor
adcl
mov
or
pushf
mov
cli
cmp
push
cmp
out
adc
mov
fstpl
mov
mov
jno
fwait
sysenter
jge
mov
test
push
daa
ljmp
ljmp
cmp
lea
js
cmc
ss
test
xchg
mov
call
jmp
push
xchg
sbb
xchg
stos
push
in
jp
pop
and
inc
mov
das
xchg
xor
jns
stos
mov
jae
shrb
in
sbb
idivl
mov
stos
adc
pusha
mov
je
scas
lahf
pop
dec
mov
or
pushf
jle
mov
pop
loope
test
roll
shlb
and
mov
aad
aaa
mov
hlt
out
xchg
cmp
add
inc
mov
fsubp
push
dec
mov
int3
jns
and
xchg
sub
mov
inc
imul
jns
dec
pop
lret
sahf
mov
mov
push
xor
lret
rorl
dec
lods
sbb
enter
xchg
pop
sub
cmp
or
push
xbegin
andl
push
and
mov
fdivrs
repnz
in
mov
clc
fbld
xor
push
out
dec
push
mov
xchg
mov
inc
data16
not
and
mov
enter
dec
pushf
mov
cltd
gs
mov
mov
pop
popf
nop
fisubrl
fdivrl
outsb
hlt
and
or
addr16
push
cmp
cltd
movd
jo
mov
cmp
add
pmaddwd
mov
push
mov
pop
je
sbb
xor
add
fsubs
push
rorb
cli
jns
lret
dec
jecxz
cmpsb
inc
mov
mov
mov
ror
aaa
repz
incl
xchg
into
xor
sbb
out
mov
sti
ja
les
xchg
lahf
ss
clc
lods
add
jle
sbb
aas
cld
aaa
fbstp
or
cmp
in
sti
das
hlt
jnp
std
sbb
pushf
iret
leave
and
dec
bound
jae
mov
ret
in
aam
xor
dec
jb
rol
scas
inc
mov
cmpsb
push
icebp
cmc
sbb
test
push
dec
insb
inc
add
cwtl
frstor
mov
loopne
xor
lods
jle
cwtl
daa
mov
jae
int3
cmpsb
jecxz
aaa
lret
xchg
fdivl
fisubs
sahf
inc
mov
jecxz
jno
adc
lret
or
repnz
sahf
jb
in
or
inc
rorb
inc
out
icebp
or
xchg
mov
fstpl
cmp
mov
scas
loopne
mov
repnz
xchg
adc
mov
sbb
movsb
xlat
mov
fnstsw
stos
sub
cmpsl
sbb
cmpsb
out
enter
cmp
mov
add
ret
xor
shrb
pushf
popa
outsb
rclb
std
cmc
mov
xchg
mov
pushf
or
inc
sub
push
mov
roll
mov
xor
xor
stos
or
jnp
into
flds
dec
xchg
aas
insl
mov
clc
lret
mov
sbb
shrb
pusha
mov
jns
adc
sbb
push
or
popf
divl
insb
sub
out
jno
xor
pop
test
pop
test
js
popa
sub
or
mov
add
rcr
aaa
aam
stos
out
jmp
pop
xchg
sub
lret
pushf
fldenv
mov
in
inc
lock
mov
adc
out
xor
cmpsl
inc
or
jne
push
push
pop
clc
divl
clts
pop
je
fwait
jo
or
inc
rorb
mov
out
fstpl
xor
mov
push
jae
sub
xor
je
scas
push
xor
pop
add
xor
das
andb
cmp
dec
fwait
bound
jg
push
cld
js
lock
add
mov
xor
push
cltd
aad
add
cld
inc
loopne
mov
and
sbb
out
jl
rorl
add
or
nop
test
stc
fsts
pushl
mov
sbb
inc
scas
into
pop
in
pop
ficoms
andl
in
int3
push
clc
out
ljmp
add
vshufps
push
pop
mov
dec
add
popf
mov
mov
sub
add
roll
aad
fildl
repz
and
pop
out
iret
cmpsb
xlat
cmpsb
scas
adc
pop
mov
push
mov
pusha
cmpl
xor
or
cmovns
test
and
nop
int
cmp
gs
jb
mov
orl
xchg
fimuls
sub
mov
sub
xchg
add
aaa
mov
xor
js
jb
outsb
icebp
pop
dec
dec
push
pop
push
outsl
inc
rolb
jae
std
xor
or
push
sti
je
jmp
cmp
stos
mov
or
lds
stos
add
loop
dec
repnz
jae
pop
insl
mov
mov
mul
inc
mov
daa
push
jb
sub
adc
leave
jne
ljmp
aam
mov
push
pop
jecxz
in
add
jge
add
clc
call
pusha
gs
jno
out
fists
inc
lcall
bswap
pop
lret
int3
jne
jb
outsl
fisubrs
fcmovbe
add
imul
or
dec
pop
mov
jg
divb
xlat
xor
cmp
fistpll
into
cmpsl
or
jp
lds
test
rcrl
xor
int3
xchg
enter
ja
shlb
ds
pop
mov
adc
jmp
adc
cmp
test
push
dec
jne
xchg
mov
jp
jo
add
cmp
mov
fsts
inc
cltd
pop
sub
aaa
inc
fistps
movsb
fld
popf
scas
mov
cld
cmp
std
lods
es
test
mov
mov
out
or
adc
sub
adc
adc
mov
fs
mov
and
sub
dec
out
jae
aaa
pop
push
movsb
daa
movsl
negl
inc
cmpsb
xchg
dec
dec
lahf
mov
pop
sbbl
jno
sahf
imul
test
dec
loopne
std
and
and
repz
clc
sti
mov
jo
mov
enter
and
mov
mov
pop
pop
jecxz
fucomp
cmp
dec
inc
dec
and
add
arpl
push
pop
or
in
cmc
push
subl
jl
das
test
iret
jmp
gs
jge
divl
cmc
outsl
xorb
jnp
xchg
dec
loop
aad
jp
out
push
push
jp
adc
pop
in
mov
addr16
out
test
cltd
dec
fwait
push
popa
jae
iret
ret
mov
cmp
incl
push
inc
enter
lods
fstps
test
mov
loope
and
movsb
mov
in
int3
outsb
lret
les
dec
pop
mov
xor
mov
out
mov
fld
push
inc
xchg
mov
mov
insb
add
mov
cmc
imul
pop
test
jg
pop
dec
cmp
ljmp
lea
les
adc
int3
push
dec
push
test
xchg
stos
pop
aad
sub
fdivrs
lahf
mov
addl
cmp
test
faddl
jb,pn
dec
jmp
add
jbe
dec
std
mov
pop
inc
outsl
adc
int
dec
call
ret
cmp
dec
cs
or
dec
call
sbb
jecxz
add
or
fimull
mov
iret
popa
lods
ss
jl
orb
mov
test
pop
pop
or
inc
pop
xor
notl
cmpsl
push
lods
or
iret
jne
out
xchg
mov
mov
xor
fdivrs
mov
sbb
aam
pop
cmp
cmp
sti
mov
inc
inc
xor
pop
daa
fsubrp
dec
insl
lcall
sub
lcall
xchg
mov
adc
leave
jae
cwtl
or
pop
scas
pop
and
inc
push
ss
dec
dec
xchg
pop
sahf
mov
bound
mov
cvttps2pi
xlat
cs
and
inc
fdivrl
jmp
mov
pop
push
daa
out
mov
xchg
adc
lds
loope
and
sahf
int3
cmp
loopne
inc
ljmp
mov
sbb
mov
movsl
and
js
divl
add
pop
jge
in
or
mov
jg
xchg
and
outsb
pop
fsubrs
pop
filds
aaa
jl
jl
nop
mov
add
into
js
push
mov
iret
mov
rcr
aad
les
xchg
iret
dec
fistpl
mov
jmp
mov
xor
mov
ja
std
fstp
cltd
push
sub
movsl
shll
lods
addr16
jecxz
outsl
adc
cwtl
ss
push
jg
push
inc
mov
test
mov
sbb
push
sub
push
insb
incl
std
xor
hlt
dec
cld
sahf
sub
or
jge
cmp
aaa
add
sub
jno
insb
mov
pop
int3
sbb
fldenv
repz
xor
cmp
adc
mov
add
repnz
mov
les
jbe
cmp
xor
xchg
push
data16
sahf
ror
andb
outsl
xchg
je
inc
inc
pop
es
mov
push
xor
push
fwait
jns
cmp
mov
push
mov
bound
sbbl
jns
jae
scas
ljmp
xchg
and
pushf
lods
cmp
fimull
and
imul
pop
jo
stos
mov
add
jle
pop
cmp
fidivrs
inc
popf
or
test
cmp
fdivr
add
movsl
and
imul
inc
mov
lahf
out
out
fisubrs
xlat
sbb
sbb
cmc
movb
xchg
lods
add
inc
xor
int
or
hlt
jge
cld
cmpsl
sbb
cmp
or
pop
pop
inc
pop
xchg
or
mov
imul
inc
xchg
mov
push
pop
mov
ljmp
movsb
or
pop
dec
nop
pop
jge
orl
jne
insb
cmp
cmpsl
and
mov
and
mov
jno
aas
mov
inc
int3
mov
adc
inc
xchg
ficoml
xor
adc
mov
and
sbb
enter
fimuls
sub
arpl
fld
rcrb
inc
out
insl
cmc
xchg
js
push
pop
out
mov
mov
jg
and
popf
mov
bound
and
mov
adc
pushf
fst
dec
pop
das
enter
popf
mov
mov
xchg
mov
inc
pop
xor
cmpsb
aad
pop
andb
fidivrl
inc
adc
addr16
cmpsl
pop
out
loopne
nop
sbb
fisubrl
push
shlb
cmp
inc
xlat
xchg
divb
ret
xchg
dec
add
cmp
or
jecxz
pop
clc
jmp
push
addb
adcl
mov
insb
dec
fnstenv
arpl
in
xor
mov
add
or
hlt
in
and
das
pop
xchg
roll
pop
push
lea
xor
mov
add
mov
dec
out
jp
pop
and
cmp
sub
popf
add
inc
jo
repz
xchg
and
int3
adc
adc
movsb
mov
sbb
ret
cld
mov
out
pop
sahf
inc
shl
test
pop
outsl
cmpl
jge
mov
icebp
cmp
pop
ja
test
in
jne
push
sahf
imull
pop
xchg
mov
or
pushf
xchg
xchg
sahf
lock
fcomip
ja
rcrb
outsb
loopne
leave
inc
mov
ljmp
mov
sub
test
imul
cmp
jp
cmpsb
xor
cmpsb
pop
out
cmp
popa
call
and
enter
test
lea
imul
mov
sahf
roll
mov
xor
ja
sbb
mov
jg
lret
scas
sub
push
mov
sub
stc
and
or
xchg
in
lret
in
adc
pop
in
iret
jno
ret
scas
popf
dec
dec
xchg
inc
sub
in
or
add
xor
mov
pop
jl
aad
and
test
add
push
push
enter
xchg
dec
loop
or
push
outsb
pop
add
jb
xchg
adcb
mov
xchg
lcall
test
cld
decl
push
add
movl
std
sub
add
lret
rorl
pushf
sbb
insl
lods
dec
loop
pop
mov
pop
in
icebp
or
dec
int
mov
faddl
push
ds
shll
popa
dec
leave
js
jnp
xchg
int3
pop
xchg
sub
inc
roll
mov
push
pop
xchg
mov
leave
mov
ret
push
sub
repnz
arpl
push
test
mov
stos
mov
inc
push
xchg
mov
testl
ds
dec
and
and
fistl
test
scas
add
sahf
jb
stos
sbb
pop
xchg
xor
inc
jns
stos
sbb
jno
sbbl
fs
ret
daa
movsl
sbb
outsb
out
sbb
pop
aam
add
xor
fwait
add
mov
or
into
jnp
sti
push
push
pop
mov
and
imul
adc
lods
nop
hlt
jb
in
sti
inc
loopne
inc
fisubrs
lods
cmpsl
mov
dec
push
enter
leave
test
lret
stos
jbe
imul
push
sbb
mov
fwait
loope
mov
cmp
add
ljmp
test
shrb
xchg
fisubrl
stos
lods
aas
cld
mov
push
cld
fnstcw
cmp
mov
xor
sbb
and
jb
mov
and
mov
aam
scas
cli
mov
pusha
es
outsl
jmp
xchg
mov
movntq
nop
out
insb
or
or
or
outsb
rorb
pusha
mov
movsl
mov
shl
xchg
nop
sub
pop
sub
sub
ljmp
icebp
sbb
ret
subl
dec
xchg
das
xchg
cmp
and
cld
fsubrp
mov
mov
mov
sub
aam
scas
jl
or
mov
shll
cmp
dec
test
adc
int
out
out
add
xchg
mov
sti
test
rcrl
sub
stos
pop
dec
arpl
mov
inc
mov
push
pop
mov
leave
push
into
pop
aad
hlt
imull
mov
les
sbb
stc
xor
ficoms
adc
pop
pushf
or
push
sub
mov
test
enter
jae
adc
inc
pop
and
cli
jne
ret
pop
imull
sbb
sub
test
mov
daa
outsb
pushf
aad
imul
icebp
ss
jge
mov
xchg
sub
mov
jl
fsubrl
add
xor
and
inc
das
cmp
adc
pop
dec
lds
pop
pop
les
mov
notb
adc
js
out
popa
addr16
loope
cwtl
inc
push
dec
adc
inc
aad
push
pop
movsb
inc
mov
mov
sub
int
jl,pn
jmp
sbb
xchg
cmp
push
mov
jmp
pushf
mov
push
idivl
cmp
add
fiaddl
adc
pop
fidivrs
rclb
cltd
lock
aaa
insl
nop
sbb
scas
lods
movl
pop
mov
ljmp
lds
cmp
out
mov
ret
pop
xchg
xchg
mov
sbb
lock
daa
or
add
cmp
cmp
pushf
dec
dec
push
cmpb
insb
mov
push
insb
or
aam
js
mov
mov
jbe
lret
fdivs
jb
clc
lret
jl
pop
setnp
repnz
adc
pop
xchg
cmp
xchg
jmp
dec
jp
jecxz
inc
jb
fdivrs
js
mov
adc
mov
jae
ficompl
out
inc
cld
jb
inc
fiadds
dec
cs
dec
sub
idivb
lcall
or
aam
lock
lods
jle
lock
xor
xchg
dec
movb
and
data16
jae
xchg
pop
mov
movsl
das
cmp
adc
inc
push
sub
sbb
jg
rcr
jb
mov
std
xlat
pop
int3
lods
popa
jmp
repnz
lret
sub
gs
mov
adc
mov
ljmp
ficoml
jne
pop
call
sahf
addl
xchg
xchg
popf
pop
pop
in
add
pop
fmul
jmp
insl
fsubrs
inc
adcl
inc
cmp
and
insb
sub
nop
cld
xchg
gs
enter
mov
dec
scas
popf
hlt
fwait
daa
add
cmpsl
fwait
aaa
sub
mov
sub
lods
jle
jo
mov
mov
mov
fistl
inc
dec
shlb
jbe
mov
or
mov
jb
loope
xchg
loopne
out
xchg
xchg
inc
cmp
notb
push
inc
fisttpll
in
push
rolb
rcl
and
cmp
in
pop
lods
mov
shl
mov
loope
pop
pop
and
insb
xchg
stos
pop
sbb
repnz
stc
loope
fdivrl
mov
movsb
adc
adc
inc
adc
insl
or
cmc
mov
lret
popf
xchg
lret
lods
add
out
add
inc
mov
repz
pop
or
imul
imul
es
das
shll
hlt
add
sub
outsl
cmp
xor
out
repz
loopw
rclb
sti
inc
add
jb
rorb
inc
in
pop
es
adc
adc
jno
adc
mov
movsl
lcall
mov
shlb
mov
push
jno
mov
popf
rcll
and
xchg
jge
test
jbe
fs
iret
pop
js
shrl
mov
adc
jmp
lret
mov
xlat
xchg
rcrl
daa
and
insl
ja
xor
cs
push
cmp
aaa
inc
inc
sub
xor
sbb
les
outsl
hlt
imul
pop
inc
scas
addr16
ret
call
or
adc
pop
imul
mov
cli
daa
pop
mov
ret
push
dec
hlt
stos
push
shrb
data16
rcrb
jbe
mov
add
xchg
aaa
jno
aaa
imull
pop
pop
dec
push
inc
and
mov
out
cmpb
jae
push
lods
jo
cmpsl
dec
mov
aaa
or
dec
shlb
mov
aas
out
pop
push
and
fwait
insl
movsb
out
mov
or
frstor
cmp
dec
push
fisubrs
and
divl
out
sbb
mov
jae
cmp
add
out
mov
and
daa
sbb
scas
shll
sbb
add
in
jp
jg
jns
mov
mov
sub
sbb
popa
push
and
scas
shrb
data16
jle
andb
repz
ljmp
das
mov
jne
xchg
push
shlb
cmpsb
sbb
dec
push
je
mov
push
push
scas
lret
inc
add
lahf
sbbb
and
aaa
cltd
adc
shlb
insl
aaa
jecxz
mov
mov
int
push
stc
sbb
xor
out
cmc
pop
and
loop
cmp
imul
lock
nop
jmp
and
ror
add
and
xor
push
and
sub
jno
add
xlat
mov
shll
mov
inc
inc
loope
ss
cwtl
in
lock
repnz
fwait
sub
scas
jae
sbb
pop
mov
ficompl
cli
cmpl
in
popf
jp
loopne
incl
data16
xchg
jmp
cmpl
je
idivb
lds
stos
add
cmpsl
ds
xchg
mov
sarb
fcoml
ljmp
pop
jp
das
bound
push
and
test
push
mov
das
insb
mov
pop
daa
das
popf
out
push
sbb
dec
pop
mov
mov
xchg
mov
hlt
xlat
sub
and
stos
js
imul
iret
add
orl
mov
xor
push
push
lahf
jp
arpl
popa
jecxz
adc
popf
ret
es
js
std
bswap
pop
imul
shlb
iret
pop
add
pusha
pop
pop
pop
mov
mov
insb
and
and
and
pushf
mov
daa
mov
test
inc
enter
or
mov
jp
xor
cmpb
sub
push
daa
mov
divb
fcoms
fwait
nop
push
lock
and
cmp
bound
es
xchg
sahf
jge
popa
jecxz
xor
movsb
loop
jne
lock
cmpsl
mov
jmp
jl
sahf
mov
xlat
jle
sbb
orb
sbb
cmp
pop
lock
out
xor
fsts
pop
stc
mov
popa
jle
mov
movb
xor
in
out
sub
cmpsb
in
pop
movsl
outsl
insb
and
push
cli
xchg
and
test
lret
lret
scas
push
outsl
ds
adc
dec
xor
jne
ffreep
out
ret
imul
lods
cmp
adc
jae
lcall
mov
dec
ds
inc
mov
out
sti
int3
and
ljmp
dec
add
lret
mov
xchg
and
adc
or
adc
xchg
and
testb
insl
out
or
movl
int3
ja
push
fidivs
xchg
add
mov
push
bound
mov
sbb
ss
push
xor
scas
cmpb
jp
mov
push
cmp
add
cld
call
es
jle
add
pop
pop
mov
cmpsb
xchg
dec
loopne
orb
leave
icebp
clc
add
mov
in
jb
jno
addr16
sub
in
repz
inc
test
fcompl
int
add
xchg
repnz
fstl
lock
fwait
repz
iret
cwtl
in
pop
inc
int
lahf
inc
pop
xlat
sbb
jae
xchg
mov
jmp
leave
popf
iret
int3
or
jge
mov
cli
sub
imul
sub
iret
dec
outsb
jno
inc
mov
aaa
aam
adc
call
lods
pop
repnz
and
jmp
mov
hlt
roll
cmp
insl
pop
out
sub
adc
mov
in
dec
jecxz
cmp
xorb
ret
cmp
mov
rorw
xchg
in
cmp
ja
pop
testl
test
roll
mov
shlb
lret
cwtl
in
bound
es
lcall
add
cltd
push
push
ss
pop
stos
lret
leavew
pop
lea
mov
lods
fdivl
fildl
sbb
lahf
je
adc
popf
add
or
jecxz
scas
js
dec
mov
int
push
loope
xor
push
push
insl
mov
push
and
subl
loopne
aad
arpl
decb
ret
ret
xor
push
call
sbb
sub
into
inc
cs
hlt
lods
scas
mov
adc
push
je
push
bound
pusha
or
xchg
xchg
cs
xor
inc
rcrb
je
fmulp
xchg
cmp
mov
jg
cmp
ds
add
cwtl
sub
jne
mov
lods
xchg
and
cmp
jo
daa
cmpsl
jge
mov
and
bswap
xlat
int
mov
lock
loope
in
ret
push
pop
xchg
mov
cltd
cltd
nop
outsb
mov
mov
push
sub
pop
inc
jb
cmp
cmp
xchg
jb
jecxz
test
mov
outsb
call
test
xor
iret
mov
cmp
pop
aaa
push
int
xor
mov
fwait
mov
sbb
jno
hlt
scas
push
scas
mulb
xor
cmp
sub
mov
jnp
or
imul
mov
out
push
test
add
sub
mov
mov
or
dec
mov
jg
mov
lret
or
sbbb
adc
inc
mov
push
ret
inc
jae
leave
imul
mov
push
es
pushf
dec
pop
push
imul
dec
adc
adc
inc
stc
mov
stos
imul
dec
and
orb
or
or
mov
mov
mov
aad
imul
mov
xchg
xchg
inc
dec
sub
push
stos
mov
loopne
call
hlt
dec
frstor
push
das
test
js
jno
cld
mov
cmp
scas
pop
pushf
addr16
mov
lods
lock
inc
scas
dec
mov
push
cmp
xor
inc
push
mov
pop
out
xor
lret
stos
data16
data16
ss
add
sub
out
push
fs
lcall
push
jge
inc
inc
mov
push
adc
xchg
or
push
rcrl
mov
es
cltd
aas
adc
iret
popf
stc
sbb
ja,pn
cmc
outsb
push
xchg
xor
shr
jl
jecxz
ljmp
dec
sti
mov
insb
cltd
into
lcall
int3
mov
test
subb
push
cld
xor
imul
adc
push
pop
cmp
jne
shll
cmp
aam
es
out
enter
mov
mov
test
popf
lea
push
push
mov
inc
push
pop
lock
sub
adc
mov
cmc
add
icebp
iret
pop
movsl
loopne
outsb
push
adc
mov
inc
mov
adc
in
repz
or
rorb
push
pop
sub
mulb
or
adc
push
rolb
sarb
sbb
sbb
shl
cli
jp
xchg
lea
in
ja
sub
add
hlt
xor
stos
push
cld
push
lods
daa
ficoml
cmp
mov
and
mov
mov
mov
adc
andl
dec
in
cltd
pop
popa
scas
cmp
arpl
push
repnz
jnp
pop
lret
xorl
xor
cmp
lret
mov
and
lret
imul
stos
adc
je
jle
adc
pop
aas
pushf
or
imul
hlt
inc
xchg
out
mov
mov
inc
movsl
sbb
sbb
shrl
je
ret
call
or
pushf
push
mov
mov
shlb
fs
ss
mov
das
dec
ret
cmp
scas
jbe
and
in
jbe
movsl
test
adc
xor
xchg
out
lret
mov
pop
jmp
fnstcw
pop
and
dec
stos
cmpsl
shll
outsl
les
pop
cmpl
pushf
pop
sti
lret
ja
icebp
add
dec
add
ret
xchg
enter
fisubs
mov
push
push
call
mov
add
push
xchg
add
xor
add
mulb
scas
jbe
cmp
ret
or
les
and
das
dec
push
in
es
xor
ret
dec
fucomp
insb
xchg
mov
insl
subl
loop
int3
in
or
adc
out
add
pop
ss
imul
ss
lret
mov
aas
sahf
pop
rorb
sub
jns
pop
and
shlb
inc
jecxz
sti
adc
lods
call
sti
xchg
jecxz
lret
shlb
inc
xchg
out
dec
lcall
adc
and
cmp
divl
data16
cmp
sbb
sub
ret
lds
scas
xchg
mov
jne
xchg
mov
push
pop
jp
sub
dec
cmc
fwait
mov
mov
jns
rcl
mov
lods
xorl
in
fs
add
and
sbb
dec
xor
jnp
jnp
mov
adc
xor
sbb
imul
imul
dec
cmp
idivl
cmp
outsl
mull
cld
inc
push
popf
cld
sub
push
add
mov
repnz
pop
je
mov
fists
cmpsb
mov
jl
leave
rep
icebp
cmc
cmp
inc
jg
sub
push
xor
mov
mov
mov
insb
xchg
stos
in
rcl
push
mov
outsl
das
xor
nop
pop
adc
jmp
mov
fsubs
mov
out
jnp
push
sub
in
pop
push
cmp
push
sbb
ja
cmp
mov
popf
xor
mov
push
mov
enter
push
xchg
dec
movsb
sub
mov
inc
popa
outsl
xchg
test
movl
mov
arpl
in
push
xor
pop
cmpsb
pop
inc
or
fwait
jmp
in
xor
mov
repnz
xchg
sub
sub
nop
fdivs
mov
scas
stos
loope
pop
fcmovnb
lret
xor
loopne
push
lret
ja
loop
and
adc
sub
insb
add
mov
ret
mov
jl
xchg
je
notl
icebp
out
and
push
in
cmpl
mov
pop
dec
mov
or
into
mov
mov
jns
lds
push
dec
sbb
in
out
jno
nop
mov
jecxz
mov
mov
jo
mov
inc
cwtl
sub
popf
sbb
sarb
pop
fsubrl
mov
outsb
setne
mov
je
sbb
cld
or
lret
nop
loope
and
fimull
push
ficompl
fistpl
and
fldt
ftst
cmpb
shl
loopne
lea
inc
or
std
pop
outsl
rcrl
or
push
push
add
fdivs
cmp
mov
xchg
sahf
imul
dec
cmpsb
hlt
decl
add
mov
cmp
aas
lret
push
repz
push
arpl
shrb
mov
sbb
pop
in
add
pop
fmuls
cmp
mov
nop
mov
iret
push
enter
sbb
xor
jne
js
adc
test
test
dec
sbb
sub
repz
sahf
aas
inc
mov
mov
test
fwait
js
addr16
push
pop
adc
sub
das
stc
loopne
lret
das
and
inc
or
pop
jecxz
jmp
mov
mov
mov
and
pop
imul
dec
jle
movl
cld
inc
and
cmpsb
sbb
scas
jge
mov
jp
and
mov
xchg
jmp
jno
cmp
mov
add
cmp
pop
stos
call
gs
xchg
into
shlb
mov
data16
out
iret
xor
xchg
dec
imul
mov
cli
stos
xchg
add
xchg
push
pop
nop
mov
in
or
lock
mov
inc
cmp
inc
jmp
push
sub
int3
iret
and
sti
xorl
daa
shlb
mov
bound
jl
add
inc
lret
cmp
arpl
out
pop
pop
stc
dec
insb
dec
rcrl
and
inc
fs
pop
inc
std
mov
inc
fdivl
push
mov
movsb
test
int3
mov
adc
imul
xlat
stos
mov
sbb
cmp
jmp
pop
pop
sahf
dec
test
cmp
mov
insb
inc
imul
loopne
xchg
loop
xlat
inc
sbb
push
es
push
fstl
aas
and
push
pop
pop
adcl
xor
jno
test
stc
aaa
inc
popf
mov
mov
cs
lret
out
mov
ret
xchg
sbb
inc
push
inc
inc
aad
aam
daa
and
fldcw
movsl
fwait
leave
cmc
int
lret
jg
xor
sub
add
sub
in
adc
xchg
daa
push
xchg
lret
hlt
jnp
inc
add
mov
aam
jbe
popf
shl
adc
push
jp
inc
mov
mov
pop
mov
mov
movsl
repnz
les
push
aam
daa
inc
pop
orl
xlat
xchg
psubb
cltd
mov
stos
fcmove
inc
lret
ljmp
sbb
xchg
and
popa
adc
aas
aas
mov
jne
adc
into
cmp
neg
mulb
int3
cld
push
inc
push
lods
mov
pop
cmpsl
push
jecxz
bnd
dec
inc
les
xchg
les
sarl
out
pop
cli
pop
into
stc
xor
push
insl
xor
mov
iret
imul
mov
loopne
inc
jle
jge
rclb
xchg
mov
inc
stos
loope
icebp
iret
pop
outsb
cmc
xchg
icebp
loop
dec
jae
xchg
adc
xor
std
mov
add
adc
or
scas
push
or
xchg
push
jmp
sti
jle
dec
mov
fsubl
fs
pop
pop
or
pop
aas
outsl
pop
xchg
cmpsb
enter
mov
jns
xor
sub
sbb
stos
fsubl
popf
lods
fucomi
push
jns
pusha
repnz
sub
mov
or
je
push
psubsw
dec
es
xchg
in
adc
in
and
or
sarb
ljmp
sbb
cmp
mov
adc
lahf
std
ret
in
cmp
iret
add
in
inc
fs
pop
pusha
cmpsb
jp
push
mov
out
jno
cs
dec
mov
call
sub
out
and
push
push
sub
dec
fbstp
mov
ret
mov
inc
int3
aam
stos
inc
mov
loop
pusha
pop
popf
divl
xchg
sbb
ds
ljmp
mov
ds
mov
xlat
fisttpll
lods
outsl
xchg
push
dec
xchg
outsl
repz
mov
mov
xor
call
lock
insb
std
jmp
xor
fcmovu
sarl
ds
stc
jg
cli
dec
mov
add
and
stos
in
pop
pop
cmp
add
jns
cmp
call
pop
mov
aad
xchg
out
push
movb
cwtl
sub
mov
scas
je
sub
out
xor
cmp
inc
jne
sti
dec
cmp
inc
cmpsb
inc
jl
xchg
pop
cmpsb
cld
test
out
xchg
pop
out
out
lds
inc
push
push
sub
xor
es
dec
mov
jg
inc
and
inc
mov
mov
inc
in
sub
sub
fstps
xchg
es
and
mov
dec
and
or
ja
push
shrb
jbe
cmp
inc
jg
dec
fildll
cmpsl
js
bound
xchg
pop
push
mov
dec
out
dec
fs
adcb
lret
jmp
mov
add
xchg
dec
psubusw
inc
loope
sub
jg
stc
shlb
inc
loope
test
aaa
movsb
jo
ljmp
in
sahf
jmp
jmp
cs
xchg
mov
in
xchg
popa
in
and
loopne
inc
int
and
roll
and
jecxz
xor
cmp
mov
mov
push
sub
lea
sbb
ficomps
movsl
ret
jae
push
inc
xchg
repz
pop
jae
nop
and
xor
mov
pop
push
ret
xor
xchg
aam
push
xor
mov
add
dec
inc
cmpsl
imul
and
icebp
lea
cmp
cwtl
cmp
cmp
lods
push
int3
jnp
and
pop
aad
mov
cli
dec
sahf
aam
xor
outsb
dec
or
inc
call
lods
push
test
nop
aad
out
stos
dec
or
imul
sub
sbb
sub
push
xor
mov
xor
mov
andl
test
movsl
lods
dec
push
jns
mov
dec
add
sti
xor
dec
jmp
pop
ret
mov
inc
pop
inc
mov
or
out
popa
dec
dec
movsb
sbb
insb
and
das
fcoms
mov
lahf
adc
mov
pop
and
in
repz
nop
adc
xchg
out
out
sahf
imul
dec
xchg
lahf
push
aad
shl
push
sbb
out
and
push
xlat
enter
popw
pop
push
pop
pop
jbe
rcll
jb
gs
push
dec
push
pop
cmc
mov
xchg
jge
fcomip
push
sahf
subb
ljmp
mov
inc
pop
sahf
xor
lock
sbb
pop
sub
je
jmp
mov
in
setnp
arpl
enter
sbb
cmp
pminub
es
aaa
dec
push
and
clc
mov
pushf
negb
popf
dec
xchg
jns
xchg
jb
cmpsl
mov
in
test
sub
add
push
dec
mov
push
test
outsb
lret
repnz
mov
lods
sahf
cmp
cmp
das
std
test
cs
and
movsb
mov
fs
ja
adc
xor
daa
xchg
push
or
cmp
dec
sahf
mov
mov
mov
push
jmp
jae
cmp
xchg
f2xm1
lea
pop
fs
dec
push
xorl
pop
xor
ret
test
inc
gs
mov
or
xchg
dec
leave
jns
loope
iret
jno
cmpsl
jmp
adc
repz
aas
cmp
inc
imul
ja
mov
test
cwtl
insb
pop
mov
sarb
lcall
repz
dec
xchg
insl
icebp
shlb
xor
incl
jno
xchg
dec
into
adc
aad
inc
sub
jns
push
push
pop
mov
xorb
bound
mov
mov
or
popf
cmpsb
adc
mov
push
xchg
out
stos
dec
inc
cmp
dec
fisubs
jl
inc
xchg
add
xchg
lods
rcrl
std
int
mov
add
jle
out
jge
pop
mov
pop
cli
inc
imul
mov
aaa
inc
pop
and
xchg
xor
int3
dec
loope
push
sbb
jp
mov
inc
push
or
movsb
cmp
lahf
mov
sub
fidivrs
mov
ret
add
loopne
jle
lret
mov
out
rclb
lock
mov
add
lods
gs
arpl
imul
bound
pop
and
repnz
pop
push
mov
sbb
or
mov
lods
rorb
dec
sub
fsubl
jecxz
xor
lcall
or
jmp
leave
stc
cwtl
in
inc
mov
stos
jne
js
lahf
mov
sbb
add
cwtl
stos
aad
jmp
dec
rcrb
fucomi
lret
mov
cmpsl
fiaddl
mov
test
cld
xor
leave
gs
jmp
outsb
mov
out
daa
push
mov
rorl
movsb
xor
and
pop
sbb
dec
pop
lret
mov
jmp
xor
sub
jmp
jbe
lods
cmc
cmpsb
mov
out
xor
inc
subl
call
add
jns
insl
jbe
adc
jo
into
fdivrl
jo
adc
movsl
pop
mov
and
inc
les
jg
jl
fs
stos
rclb
test
lea
push
add
dec
xchg
rclb
sahf
inc
fdivs
negl
cmpsl
outsb
test
cltd
pop
cmpl
sub
mov
or
push
repz
push
imull
inc
jno
push
fldcw
xor
dec
adc
cmp
ss
or
ds
push
popf
cmpsl
clc
cld
jp
jge
repz
jle
add
icebp
adc
fildl
mov
out
daa
aas
push
cmp
arpl
mov
or
and
pop
std
icebp
repnz
icebp
jno
cmp
repnz
mov
pusha
test
sbb
pop
mov
push
pop
xor
test
push
mov
cmpsb
mov
imul
inc
fbstp
mov
das
insb
mov
cmp
jno
mov
xchg
mov
push
cmpsb
into
pop
dec
mov
movsl
xchg
mov
xchg
cld
fdivrl
cmpsb
jb
xchg
push
and
add
sbb
lret
adc
shl
lock
negb
push
dec
test
jge
mov
aad
sub
icebp
sub
sub
inc
cs
cli
int3
fcompl
or
xchg
push
enter
pop
push
insl
xor
lea
imul
lret
cld
fldt
es
dec
mov
xor
in
and
fcomp
lock
mov
sub
cmp
roll
cmp
out
cmp
pusha
adc
or
dec
shll
int3
xor
pop
pop
popf
mov
dec
outsb
pop
pop
pusha
rorb
mov
pop
movsb
imul
out
cmc
hlt
int3
jns
loopne
cmp
adc
xchg
test
adc
sub
aaa
adc
and
imul
sbb
add
mov
add
mov
stc
enter
sub
ror
adc
adc
outsb
loope
xor
ja
outsb
mov
mov
ss
adc
inc
lret
mov
stos
int3
sbb
sbb
pusha
xchg
loopne
fs
mov
out
outsl
loop
push
out
daa
rcrl
push
test
xchg
mov
sahf
inc
imul
and
sub
push
ja
sub
out
and
push
pop
mov
pop
adc
hlt
mov
ret
pop
adc
and
inc
push
jl
pusha
xor
sub
mov
in
inc
pop
lock
or
xchg
test
loop
dec
test
pop
movsb
test
add
jbe
push
out
pop
push
sbb
sub
fsubl
sbb
and
lock
push
rclb
jno
sar
mov
paddusw
nop
shrl
pushf
xor
scas
dec
sbb
jb
push
sahf
mov
push
jbe
outsb
addr16
aas
das
stos
cmpl
mov
dec
mov
stc
es
ret
ljmp
jg
pop
repnz
add
mov
mov
pop
scas
jnp
repz
mov
xor
popf
push
int
cmp
mov
test
cmc
mov
idivb
into
scas
mov
adc
lahf
dec
bound
mov
xchg
arpl
push
add
pop
jle
enter
mov
and
insl
jp
in
push
pop
bound
imul
add
sub
mov
mov
lcall
fwait
mov
arpl
out
add
hlt
pushf
divl
pop
imul
fisubl
mov
shll
incl
xor
pushf
pop
jmp
movaps
mov
add
adc
cmc
cld
inc
jmp
sub
rorb
cmc
xor
mov
pop
into
pushf
out
scas
pop
andl
stos
gs
sub
lds
mov
xor
jno
rcll
mov
adcb
mov
mov
lcall
jp
adc
fisubl
sarb
mov
push
in
ret
fdivs
jmp
cli
pop
or
lods
pop
cmp
sbb
gs
insl
shll
dec
and
jmp
insb
xchg
scas
pop
cmpsl
data16
xchg
add
add
add
push
pop
or
and
xchg
rcl
in
and
push
mov
or
mov
outsb
cs
push
dec
jnp
dec
xor
mov
test
xchg
imul
adc
cwtl
jp
xchg
sbb
jae
inc
aad
movsl
xor
mov
jg
test
insb
mov
lahf
xor
roll
stc
pusha
adc
adc
inc
dec
sub
sbb
stos
icebp
hlt
sub
inc
jecxz
add
add
mov
mov
cmp
pop
cmpsb
xchg
aad
push
sub
push
insl
dec
sbb
push
xor
push
mov
stc
stc
xchg
cmc
add
je
out
sahf
jp
call
jae
or
stos
push
insb
cmpsl
leave
pop
hlt
loope,pt
mov
jge
mov
addr16
shl
cld
sub
sbb
xorb
push
sbb
mov
push
push
or
fdivr
icebp
mov
ret
pop
repnz
add
lea
jmp
sbb
adc
ds
mov
xor
xchg
shlb
mov
mov
rcl
dec
ja
mov
or
and
rcrl
out
sbb
jnp
lcall
jne
fwait
arpl
mov
fstp
outsb
je
cmpsb
js
xor
jmp
ljmp
or
outsl
ffreep
lods
lods
sbb
outsl
mov
das
imul
fadd
mov
clc
sub
lds
sarl
daa
pop
and
sbb
and
cmp
cmp
int
call
mov
or
push
ret
adc
jg
add
rorb
push
and
lds
or
mov
xchg
bound
clc
pop
dec
mov
and
xor
jo
xor
xchg
test
fwait
in
sarl
or
adc
shl
scas
scas
fistpl
lcall
outsl
mov
lret
or
mov
gs
daa
xor
sbb
enter
cmp
xchg
insb
cmp
shlb
cmpl
pop
dec
or
or
push
call
sahf
jmp
testb
out
push
shll
cmpsb
mov
mov
jb
push
adc
mov
pop
inc
sbb
fisttpll
inc
loop
fistpll
sub
aam
cmp
outsl
jne
mov
inc
stos
ljmp
adc
jne
push
push
cmpsb
stos
mov
cmc
int
out
lods
pop
icebp
fcom
adc
or
adc
movsb
dec
lds
jb
mov
mov
and
insl
push
or
loope
cmpxchg
mov
lahf
repnz
into
cmpsl
pop
xor
xchg
xor
inc
icebp
mov
inc
or
dec
jnp
movsl
xchg
cld
pop
jl
dec
jnp
or
ljmp
cmp
xor
xchg
sbb
inc
jo
icebp
movsl
mov
filds
lret
imul
dec
mov
subb
add
cmp
repnz
and
pop
xor
inc
pop
decl
mov
mov
movsb
shrb
mov
pusha
jle
cmp
jno
push
test
shrb
mov
sub
cltd
adc
mov
ret
mov
lods
inc
leave
mov
test
sbb
push
es
xor
mov
aad
push
pushf
xor
or
int3
adc
popa
sbb
adc
mov
fwait
mov
loope
ficomps
pushf
notl
in
mov
aam
sahf
add
add
scas
sbb
outsl
icebp
jae
lods
shll
inc
pushf
jb
loope
mov
xor
sub
jl
push
inc
adc
addr16
and
ja
add
clc
int3
aad
and
pop
std
aaa
inc
sub
ret
gs
faddl
repnz
sbbb
clc
loope
xor
mov
mov
imul
mov
adc
out
imul
fnstcw
pop
sti
mov
test
xor
push
ret
scas
xor
xchg
lahf
subb
daa
push
mov
sub
ss
push
jo
push
jecxz
push
lret
movsb
aaa
loope
cld
or
popa
and
and
addr16
mov
fsubs
pop
and
cli
mov
or
pop
test
mov
sbb
jo
sub
filds
pop
push
jmp
lret
shl
andb
cld
iret
rorl
cld
jbe
lods
pop
lea
sub
inc
jmp
sbb
pop
je
into
cmp
xchg
xor
or
pop
lcall
leave
ror
adc
mov
dec
leave
cmp
cmp
and
or
ret
test
adc
mov
sti
es
arpl
les
nop
xor
out
je
xchg
mov
imul
sub
jmp
xchg
adc
adc
or
adc
dec
daa
xor
mov
adc
fadds
and
aam
jmp
dec
xor
adc
cmp
dec
or
or
push
lods
rcll
dec
push
jl
lahf
loope
rolb
xchg
fnsave
std
shl
push
stos
xchg
scas
cmp
mov
sbb
dec
outsl
pop
fcoml
scas
xchg
cli
push
pop
lock
lret
cmp
das
sub
or
sahf
fwait
addr16
aad
pusha
jno
cmpsl
shrb
rep
mov
mov
or
sbb
shl
movsb
testl
push
pop
push
sbb
in
dec
cmc
repnz
push
out
stos
call
ja
mov
cmp
jb
shll
cltd
push
and
mov
arpl
test
call
in
dec
inc
push
sbb
add
addb
out
lock
pop
enter
mov
or
jae
shl
sub
loope
or
ds
mov
xchg
mov
push
ljmp
lds
scas
cs
js
sar
mov
les
sub
mov
int
xchg
int
lret
jge
mov
jo
jg
call
popw
and
scas
xchg
mov
ret
loop
int
mov
out
pop
or
pop
cld
bound
sub
mov
inc
mov
add
push
ljmp
jne
mov
push
mov
sub
repnz
mov
mov
stos
push
enter
and
incl
test
cmp
ljmp
repz
add
inc
inc
xor
xchg
imul
and
sbb
lods
dec
dec
mov
or
ss
cli
xchg
sbb
sub
pushaw
adc
and
imul
xchg
pushf
and
push
pop
test
adc
imul
dec
pop
adc
dec
subl
cwtl
xchg
or
inc
and
sbb
outsb
or
or
mov
mov
mov
stos
rcrb
sti
out
shll
repz
icebp
test
popa
aas
mov
sub
jb
out
addl
test
stos
es
inc
pop
or
nop
dec
adc
mov
nop
mov
in
lret
pop
bound
fdivrs
adc
ds
or
int3
xchg
insl
inc
xor
mov
add
xchg
mov
dec
je
xlat
add
test
sbbl
mov
add
xor
or
push
outsl
xchg
dec
ljmp
sub
jae
or
pop
jae
pop
inc
jge
jle
cmpsb
out
add
setge
sbb
add
inc
std
ja
inc
push
mov
xchg
add
cmc
push
in
icebp
daa
outsb
loop
xchg
add
mov
aas
dec
cmpsb
sub
push
dec
jae
pop
es
push
push
leave
jle
mov
xor
inc
fcomip
mov
scas
and
jbe
cwtl
adc
bnd
jmp
and
testb
cwtl
out
cmp
mov
mov
jge
jno
push
and
add
or
jae
dec
std
pop
in
jl
pop
mov
mov
push
fs
loopne
adc
je
les
xchg
sbb
sub
push
movsb
sub
mov
pop
xchg
dec
xchg
adc
adc
ret
imul
scas
lcall
dec
dec
push
adc
dec
and
pushf
loope
or
outsb
push
fisttpl
push
or
pushf
ja
xchg
mov
hlt
sahf
sbbl
stc
pop
test
adc
clc
jo
cld
dec
push
jb
aad
gs
mov
daa
clc
arpl
sarb
subl
or
cmc
push
add
push
outsl
icebp
andl
or
lods
jbe
pop
arpl
fldl
and
push
adc
iret
pushf
pop
and
int3
mov
jae
cmp
aad
push
dec
pop
outsb
fimull
push
jp
and
mov
fdivrs
lcall
pop
jmp
push
rcl
jmp
out
adc
mov
add
test
cmpsb
in
dec
into
lock
push
xchg
rcl
or
sbbl
cltd
clc
jge
mov
or
lcall
jmp
or
adc
push
sarl
hlt
or
nop
lods
or
negb
pop
sbb
fwait
dec
cltd
repnz
ljmp
les
loopne
mov
imul
aaa
jp
loopne
sbb
fimuls
jecxz
push
inc
pop
shr
mov
aad
in
fnstsw
les
adc
push
stc
std
dec
add
sub
mov
adc
cld
mov
sbb
ret
adc
je
arpl
inc
std
pop
xchg
movl
leave
dec
cltd
decl
insb
xchg
mov
dec
xchg
das
fnstcw
loop
pop
dec
xchg
mov
mov
cmp
mov
pop
loopne
or
incb
mov
push
test
cmp
jo
inc
jp
add
fs
push
popf
pop
mov
cmp
test
out
imul
pop
dec
dec
leave
shll
add
js
push
out
push
xchg
scas
or
xchg
push
sti
xor
test
sub
pop
movsl
sub
adc
ret
add
int
mov
xchg
lcall
inc
push
lret
lods
add
rolb
lea
fwait
or
pusha
adc
rclb
dec
jecxz
in
insb
aaa
ja
ds
nop
out
into
adc
sub
adc
push
inc
dec
pop
ss
stc
sarl
sahf
mov
mov
pop
xchg
cmp
xor
xchg
lea
stos
add
ss
xor
lret
mov
xchg
cmpsb
mov
fsubl
pushf
xor
mov
pop
dec
addb
mov
xchg
inc
sbb
cmp
xor
fsubrs
sub
mov
cli
adc
inc
ffree
jne
pop
mov
or
inc
and
repz
adc
sahf
cmpsb
notl
cmp
mov
cltd
andl
ljmp
dec
insl
dec
jg
aad
hlt
push
xchg
inc
cwtl
movb
xchg
sub
popf
icebp
jp
cltd
gs
xchg
add
add
mull
fsubrs
jno
imul
xchg
dec
xchg
xor
fimull
pop
cmp
xchg
test
mov
shlb
jmp
dec
test
shll
sub
in
cwtl
mov
orb
cmpsb
xchg
or
mov
xor
andb
jle
lret
pushf
cmpsl
dec
mov
jle,pn
jmp
insb
in
stos
clc
mov
lods
add
push
adc
mov
shlb
int3
jmp
mov
add
loopne
jg
pop
inc
sbb
cmp
sbb
inc
sub
mov
pusha
idivb
pop
add
dec
mov
into
push
mov
icebp
daa
jae
sbbb
mov
ret
testb
sub
movsl
ljmp
sbb
lcall
cs
std
push
lock
cld
jecxz
push
xor
pop
std
add
jne
mov
xchg
push
aaa
shrb
lds
jo
jmp
jg
dec
stc
int
sti
fwait
lds
inc
xchg
jl
aas
add
aas
push
ss
data16
call
dec
push
pop
dec
inc
inc
bound
das
mov
jmp
mov
dec
ret
outsl
dec
ljmp
scas
ret
mov
and
data16
mov
ljmp
nop
adc
and
rorl
jns
fldt
gs
sub
outsl
jae
jle
je
repz
cmp
xor
xlat
std
and
lcall
inc
je
stc
addb
sub
data16
cld
pop
xor
cwtl
pop
test
shll
xor
mov
pop
fimuls
cmp
mov
push
bound
xor
in
sbb
pushf
xchg
out
mov
mov
sub
out
inc
dec
inc
mov
mov
or
sub
cmp
jp
sti
mov
int3
mov
int3
and
aam
add
js
pop
sub
out
shlb
fwait
xchg
jecxz
outsl
sbb
jb
outsl
jmp
pop
repnz
enter
mov
add
iret
stc
rcrl
xchg
adc
dec
sub
insb
mov
into
out
psrlq
push
sbb
sti
sbb
jb
or
icebp
mov
nop
ds
mov
pop
scas
into
push
loop
or
jno
lret
push
adc
pop
push
out
mov
ret
cmp
aad
scas
inc
dec
sti
xor
and
dec
outsl
loop
cmp
enter
ret
lods
fptan
stos
add
sti
daa
jbe
pusha
fimuls
bound
rcrl
popf
negb
mov
add
xchg
insb
dec
dec
clc
adc
in
push
sbb
aas
push
lock
out
or
xlat
dec
xor
ja
leave
ds
cmp
push
jns
stc
repz
push
push
xchg
in
dec
mov
es
sbb
sti
ds
xor
cltd
pop
mov
inc
pop
jns
inc
adc
orb
out
or
xchg
mov
mov
push
mov
sbb
faddl
xor
cld
addb
xorl
iret
dec
jo
xchg
je
push
mov
lods
lea
pop
test
fisubs
rcll
inc
cmp
mov
mov
leave
add
stos
jp
jns
pop
fistpl
jne
xchg
inc
je
decl
int3
scas
ret
into
aas
icebp
aad
add
xor
or
mov
jae
cmp
in
jo
adc
xor
rorb
and
adc
lods
mov
mov
lock
int
cmpsl
shrl
inc
popa
enter
adc
dec
or
and
js
hlt
or
imul
inc
mov
xchg
pop
aas
mov
xchg
sub
pop
enter
xor
leave
cld
fnstenv
inc
aam
adc
and
dec
dec
sti
pop
pop
sub
xor
lret
imul
outsb
ret
dec
loope
imul
gs
test
xlat
js
adc
idivl
aas
cli
pop
and
stos
sbb
pop
adc
xchg
cmp
push
cmp
out
xchg
insl
lock
test
loope
negb
lret
negb
enter
mov
adc
test
cli
test
or
and
into
enter
mov
loope
push
xor
xorl
push
cmp
push
adc
pushf
insl
pop
insb
aas
clc
inc
fistl
mov
lret
cltd
xchg
mov
nop
mov
icebp
repnz
sti
lods
test
push
iret
out
ret
mov
int
or
adc
jge
int3
or
push
ss
jge
cmp
mov
ss
or
push
cmpsl
clc
fistl
or
adc
sahf
pop
cmp
out
leave
sar
lret
push
mov
or
addb
subb
insl
xchg
cmp
xchg
nop
aaa
push
xchg
lahf
nop
push
popa
imul
ss
pop
cmp
xchg
or
cmp
insl
int3
jmp
push
gs
ja
in
or
aad
addr16
pushl
jns
ja
push
in
lock
xor
cmc
pop
jae
push
in
scas
cmp
push
xchg
mov
dec
aam
std
add
push
mov
and
jae
in
mov
pop
cli
cld
pop
sahf
push
rolb
call
add
adc
popf
bound
test
add
ret
jo
iret
fcmovb
mov
arpl
out
nop
pop
push
and
sub
enter
cli
pop
add
aam
mov
in
cltd
xchg
dec
test
insl
pop
inc
push
loop
enter
pop
mov
xchg
data16
fsubrl
mov
cmc
dec
or
jb
inc
cld
push
xor
sub
test
insl
jl
cltd
fstpt
sub
movsb
lahf
pop
and
pop
rclb
arpl
pop
or
sub
ret
imul
pop
xchg
test
adc
or
adc
and
dec
in
test
push
leave
mov
or
mov
and
cltd
in
inc
addr16
andl
fucomip
ret
nop
aad
mov
dec
fists
jle
fildll
movsl
cmp
dec
dec
and
outsl
inc
jb
pop
dec
in
mov
ljmp
inc
pop
mov
fldcw
frstor
mov
loopne
rorb
xchg
aaa
pop
loop
dec
data16
dec
stos
mov
inc
and
aad
lea
mov
mov
push
mov
test
call
jb
inc
mov
pop
or
pop
lods
cli
fisubrl
jo
dec
inc
fsubrl
mov
dec
sbb
jle
pop
inc
sahf
xchg
add
cmp
inc
cmovge
cltd
sahf
xchg
in
test
hlt
clc
mov
pop
mov
push
jle
sbb
mov
cmp
xchg
sbb
cs
pusha
lock
add
gs
sbb
inc
push
add
lods
loopne
es
fisttpll
rcrl
pop
cli
inc
notl
xchg
popa
dec
arpl
xchg
fbstp
pop
les
in
sbb
clc
pop
mov
arpl
fmul
inc
or
bound
jbe
fstps
mov
adc
xchg
or
or
add
scas
dec
in
test
or
jno
jge
adc
adc
xchg
mov
push
in
mov
pop
mov
pop
adc
inc
push
sbb
shll
push
ret
cmp
mov
div
mov
push
mov
jg
xchg
cmp
xchg
mov
pushf
cmpb
movl
out
cli
lahf
inc
push
xchg
into
enter
adc
sarl
inc
mov
scas
stos
pop
inc
and
dec
or
push
pop
push
sbb
sarb
push
stos
sbb
sbb
adc
xchg
sbb
clc
mov
jb
bound
pop
adc
imul
shlb
stos
mov
lahf
lahf
or
push
cmp
int
and
in
test
mov
cmp
mov
stos
stos
adc
sbb
mov
dec
sbb
loop
icebp
sahf
inc
adc
ret
add
std
lret
add
imul
sub
cmpsl
or
stc
dec
inc
outsb
popf
aam
lcall
cmp
jmp
outsb
fidivs
adc
aam
mov
in
out
inc
insb
xchg
negb
mov
jo
adc
insb
push
ret
mov
fstp
mov
inc
pop
out
sbb
cmp
mov
push
mov
cmp
call
xor
push
cmc
pop
jbe
xchg
jae
jb
aad
mov
adc
loope
jns
pop
cmp
aam
push
xchg
sahf
js
outsl
mov
scas
nop
cmp
scas
push
push
gs
std
cltd
cltd
xor
lds
gs
pop
sub
jl
es
in
insb
lock
push
xor
lret
nop
lock
cwtl
sub
jmp
call
cmp
xor
popa
iret
and
push
inc
or
inc
repnz
mov
shr
pusha
scas
lds
mov
push
das
sbb
call
test
jp
fpatan
or
subb
leave
inc
jl
nop
lcall
jnp
or
sti
test
shrl
dec
pop
aas
mov
in
das
add
adc
and
sub
into
pop
roll
xchg
insb
fs
mov
dec
sub
add
aad
testb
jp
dec
cmp
inc
jl
fcmovne
or
add
sbb
loop
call
aas
adc
or
push
jmp
dec
or
dec
jae
stc
fmull
mov
adc
jg
xchg
jbe
mov
lahf
push
hlt
push
pop
divl
bnd
in
idiv
mov
lret
or
in
mov
fsubs
popa
pop
cmp
jo
mov
add
rcr
inc
inc
das
jge
mov
in
ds
daa
outsb
pcmpeqb
cmp
leave
cmpsl
inc
xor
cmp
jne
and
jae
push
ds
or
scas
dec
adc
inc
pop
lcall
in
rcll
jle
lock
cs
sub
xchg
cltd
add
ljmp
aad
pop
xchg
mov
jo
outsl
pusha
adc
test
in
popa
roll
sbb
push
xor
xor
stc
dec
and
rcll
rcrb
in
jg
jge
jmp
push
cmp
cmc
sub
outsb
xchg
mov
insl
nop
adc
test
mov
subl
jmp
test
mov
out
insl
cmp
in
pop
rcll
jg
inc
mov
xlat
and
es
push
jno
pop
inc
enter
ds
enter
iret
inc
data16
push
pop
insb
push
rorb
sbb
add
jl
pop
mov
push
cmp
push
and
jmp
inc
outsb
fs
sbb
push
pop
leave
mov
pop
test
cmpl
bound
ret
inc
add
cwtl
filds
ljmp
rclb
fcoml
test
clc
aad
lahf
xorb
dec
sub
mov
mov
dec
adcl
pop
mov
mov
inc
test
mull
movsb
push
in
aam
out
fnsave
pop
imul
in
adc
lret
out
test
imulb
lock
mov
inc
sbb
dec
and
pushf
sub
pop
or
subl
pop
add
push
push
push
xchg
push
jo
mov
mov
and
pusha
mov
jle
cmpsb
stos
movsl
sub
lret
ss
jnp
movsl
outsl
xlat
mul
push
pop
mov
jo
dec
lahf
cmp
push
jnp
imul
adc
ljmp
xchg
imul
shl
jns
sub
outsl
and
jecxz
mov
jne
push
jns
fsub
mov
fwait
out
in
adc
jns
sub
cmp
dec
insl
mov
mov
das
push
cmp
testl
mov
cmp
popa
and
or
mov
and
and
sbb
and
cltd
push
scas
push
daa
xor
push
adc
outsb
scas
shl
inc
movsl
jecxz
test
jl
data16
fldpi
dec
cmpsl
outsl
ljmp
rcll
mov
in
repnz
pop
xchg
xor
icebp
into
xchg
dec
ret
push
pop
inc
pop
fcoms
sub
fwait
add
sbb
cmp
aam
mov
mov
stos
dec
jecxz
incl
pop
pusha
mov
inc
cltd
cmp
mov
xor
lods
xlat
and
jecxz
test
lds
fisttpl
in
push
push
xor
add
xor
xor
shlb
daa
mov
sub
jp
out
jl
cmc
inc
pusha
fstpl
inc
or
iret
jg
dec
jl
dec
cmp
dec
stos
int
inc
test
in
and
scas
daa
cmp
cmpsb
icebp
jnp
xchg
ret
leave
dec
mov
shlb
int
lret
test
lods
sub
push
and
inc
and
sub
cmp
out
repz
cmp
cli
incl
xor
fiadds
cmp
mov
or
mov
mov
sti
out
lret
clc
icebp
add
ljmp
js
dec
xchg
aam
dec
or
ss
ficoms
push
add
add
lods
cmp
js
cmpsl
cmp
andb
jne
mov
jmp
push
aaa
pusha
dec
pop
lret
or
mov
fwait
jb
fiadds
jne
dec
dec
sbb
dec
sbb
das
popa
stos
icebp
fldt
inc
lods
js
nop
in
rep
add
pop
int
rcrb
sbb
stos
mov
sbb
mov
test
dec
xlat
and
fs
xchg
mov
xor
jle
pusha
lock
movsl
leave
adc
sbb
daa
adc
xchg
cmovp
cwtl
inc
dec
xor
xor
pop
push
push
and
sarl
add
rcl
or
add
test
rorb
xchg
inc
or
and
mov
pop
cmp
lret
jae
adc
pusha
xchg
mov
cltd
add
lock
mov
fadd
fprem1
test
ror
push
dec
cmp
fldl
push
mov
rcrl
aam
lea
hlt
sub
test
imul
sub
ljmp
mov
sub
add
push
aaa
pop
iret
mov
add
arpl
inc
lea
lcall
mov
pop
loop
mov
idivb
mov
icebp
cmp
add
xchg
enter
pushf
aas
adc
xor
jnp
mov
sbb
psrlw
lea
sub
mov
and
ds
sub
jbe
cmp
push
jl
sti
les
in
loop
xchg
push
cmpsl
cmpsb
insb
insl
in
mov
and
sbb
in
and
call
add
pop
aaa
sti
orb
aas
cli
pop
jl
inc
cmp
adc
mov
ret
mov
push
mov
add
out
pop
or
fdivl
mov
outsl
ficompl
sbb
or
outsl
test
addr16
push
sbb
push
sub
pop
or
dec
popa
ja
and
leave
lods
repz
ljmp
arpl
shrl
jecxz
mov
fstl
insb
or
dec
in
and
pop
lcall
dec
lcall
jg
std
jge
fdiv
push
cmp
adc
pop
jg
lret
shrb
dec
ljmp
jae
and
jns
jbe
stos
sub
push
ret
mov
mov
sbb
stos
push
cmp
add
xlat
add
xchg
and
xchg
fsubrs
gs
ljmp
mov
lahf
cmpsl
fidivrl
sbb
push
xor
outsl
adc
ljmp
cld
aas
inc
fsubl
fdiv
and
mov
fs
pushf
mov
add
out
jnp
jae
imul
out
mov
jmp
jo
outsb
sbb
mov
scas
sub
sbb
cmp
xor
into
ja
xor
in
fisubs
iret
xor
or
jp
pop
stc
inc
test
xchg
pop
jno
dec
adcb
inc
jl
lea
ds
in
push
pop
mov
pop
stos
cs
jge
pushf
out
mov
xor
push
es
inc
dec
sbb
pop
sahf
lods
xchg
push
jb
mov
orb
cmp
add
mov
scas
mov
dec
or
lea
fnstcw
push
jmp
maxps
push
mov
xor
jo
dec
adc
icebp
pop
adc
outsl
pop
push
adc
jbe
loopne
xchg
mov
into
repz
lcall
int3
xchg
xor
mov
aad
xchg
mov
xchg
sub
and
aam
inc
cmp
mov
mov
adc
push
mov
pop
xlat
adc
cmp
or
inc
dec
testb
fnstenv
or
loope
pop
inc
pusha
ds
mov
and
cmp
cmpsl
xor
xchg
push
lds
xor
iret
and
jge
imul
arpl
nop
xorb
rcl
sub
stos
mov
sbb
dec
daa
jle
stos
mov
fsubrl
adc
pop
lcall
dec
movsb
std
pop
imul
data16
jg
insb
in
mov
mov
xor
dec
iret
sarl
mov
sbb
push
addr16
setae
jl
outsb
clc
aam
mov
jns
inc
xorl
xchg
imul
and
ljmp
pop
in
out
faddl
sarl
fdivrs
lret
test
push
cmp
mov
push
inc
push
mov
shll
sub
and
inc
xchg
ud1
push
inc
call
loope
jmp
mov
mov
testb
sarb
inc
dec
sbb
jae
adc
lds
or
sbb
ficomps
xchg
cmp
loopne
adc
pop
mov
cltd
add
mov
rorb
aad
mov
or
mov
xor
adc
aad
ret
pusha
or
mov
mov
movsl
jl
ud0
sub
or
stc
in
push
mov
xchg
filds
cmp
dec
cli
ljmp
stos
lods
xor
mov
cmp
push
xor
jl
sbb
inc
cwtl
push
repz
add
jecxz
divb
adc
dec
and
shl
jne
adc
andl
add
mov
mov
push
inc
mov
jne
orb
pop
mov
clc
mov
hlt
push
mov
testl
stc
inc
inc
ds
xchg
fmuls
sub
and
jo
sub
lds
fmull
stos
ljmp
and
push
lret
and
add
fmul
pop
sub
std
cmp
cmp
xchg
insl
mov
pop
xchg
push
and
jne
jl
adc
push
or
into
and
subl
mov
push
adc
push
andl
aam
int3
faddl
ds
dec
pusha
jb
or
pop
mov
mov
out
rep
outsb
xor
sub
fcoms
mov
fucomi
int
stos
das
sub
stc
divl
add
scas
cmp
mov
add
sub
inc
dec
xchg
jp
gs
es
xlat
popf
sub
xchg
mov
jle
jb
adc
add
cmc
or
aaa
jmp
mov
push
and
enter
in
add
xchg
call
dec
and
xlat
xor
xchg
lret
pop
testl
mov
adcl
push
xor
lret
repnz
repnz
or
sbb
mov
pop
dec
sbb
dec
dec
or
pop
mov
sub
add
jnp
inc
idivb
xor
or
jmp
lea
test
add
hlt
out
leave
mov
fidivs
pop
sbb
pop
mov
jg
mov
insl
ljmp
sub
mov
popa
int3
nop
or
ret
push
inc
sbb
push
xor
xlat
je
pushf
cld
push
shlb
dec
leave
mov
fmuls
stc
sub
pop
sbbb
in
mov
mov
scas
test
fidivrs
sbb
shrb
ret
cmpsl
cmp
insb
fldl
nop
cs
add
add
pop
dec
setg
mov
jb
or
xchg
xchg
repz
cltd
idiv
mov
scas
jae
adc
xor
mov
mov
jo
and
hlt
aaa
insl
inc
ljmp
sub
popa
push
xchg
sub
cli
inc
out
lods
push
aam
mov
inc
mov
dec
cmpsb
xchg
and
movsb
jge
shrl
enter
mov
fcmovnu
xor
pop
out
cmpsl
sbb
pop
ja
popa
sti
fisttpll
cmc
lret
call
popl
add
sub
xor
jnp
mov
jle
pushf
xor
or
push
adc
cli
loope
dec
arpl
shll
aaa
and
cmp
jbe
jns
xchg
xlat
ljmp
xchg
mov
inc
inc
cltd
pop
xor
leave
mov
in
add
into
inc
daa
pop
xor
addl
insl
jle
call
jne
pop
adcl
xor
cmp
xchg
pop
pop
jmp
call
iret
out
sbb
mov
test
sahf
xchg
mov
jno
mov
cmpl
sbb
mov
iret
push
jmp
xchg
sub
or
arpl
ret
and
sub
fsubr
out
add
mov
push
or
inc
sarb
push
inc
outsl
add
sub
xor
iret
lea
ret
adc
sub
dec
scas
ret
lds
xchg
mov
push
sbb
or
xchg
insb
pop
stos
dec
std
imul
movsl
loope
testb
mov
out
insb
jbe
test
aaa
xor
inc
out
jb
pop
adc
pop
push
xchg
push
cmc
xchg
notb
jnp
cwtl
int3
push
lahf
add
xor
pop
repnz
addr16
inc
clc
movsl
mov
inc
in
or
xchg
inc
jo
fwait
sbb
fidivl
int
scas
testb
daa
or
push
sub
xchg
dec
xchg
inc
insb
test
cmp
add
mov
pop
les
pusha
xchg
mov
fdivr
sub
push
mov
aaa
mov
out
mov
dec
inc
test
xlat
cmp
fldcw
into
jp
sbb
inc
repnz
hlt
pop
xchg
pop
mov
call
insb
inc
lret
pop
pop
mov
push
es
xor
std
jb
sarl
cwtl
repz
lret
mov
stos
push
and
mov
ret
rcl
test
sub
in
xchg
xchg
mov
nop
xorl
daa
sub
sbb
lds
clc
gs
loop
lock
push
xchg
xor
add
pop
add
dec
mov
pop
mov
ss
leave
lods
xor
or
outsb
repz
cmp
bound
pusha
jl
dec
icebp
add
ret
inc
xchg
lods
repz
test
fildll
mov
stc
dec
shrb
loope
jo
jle
mov
gs
or
sub
and
xchg
cmp
aaa
mov
aaa
adc
cmp
sahf
icebp
addl
call
rcrl
or
mov
fmull
rcl
in
cli
mov
pusha
ss
or
and
fdivs
push
mov
cwtl
sub
cwtl
nop
stc
mov
inc
stos
repz
test
dec
adcb
mov
frstor
dec
mov
push
or
xchg
adc
rcll
push
xchg
mov
cltd
adc
adcb
cmp
or
dec
and
mov
cmp
sarl
insb
dec
cmp
jne
cmp
lahf
rcrb
mov
mov
out
sub
fwait
inc
negw
lock
loopne
mov
ja
dec
stos
push
test
or
dec
xchg
outsb
stos
mov
orl
jno
test
xor
stc
mov
jge
mov
cmp
outsl
jmp
hlt
mov
cwtl
sti
pop
mov
pushl
adc
push
add
mov
das
daa
cmp
push
adc
cmc
jg
jns
idivb
daa
pop
imul
clc
cltd
lret
xchg
ljmp
mov
dec
stos
adc
mov
mov
mov
sbb
or
push
inc
std
mov
and
rcrb
push
adc
popa
data16
mov
fsubs
cmp
mov
je
push
lock
mov
push
xchg
out
xor
ja
mov
insl
int
xor
cmp
mov
xor
mov
out
test
inc
or
scas
mov
bound
popf
add
in
xlat
in
and
out
push
fidivrs
jle
shrb
sbb
loope
std
jge
lcall
and
inc
test
es
lea
jae
inc
xchg
insl
in
aad
pop
xor
loopne
xchg
frstor
mov
scas
and
pop
xlat
or
pop
or
lcall
cmpsb
insl
cmp
lock
sbb
scas
out
push
roll
mov
and
dec
fwait
lea
dec
jl
add
movsl
xor
fsubs
jne
or
adc
sbb
push
test
jnp
adc
jo
sub
xchg
nop
iret
sbb
repz
sbb
dec
out
clc
mov
in
test
mov
mov
roll
sbb
and
mov
sub
xchg
jl
xchg
jae
sbb
sub
sahf
dec
fs
dec
inc
sub
and
loope
lcall
ds
mov
inc
sub
ljmp
push
sub
arpl
sub
xchg
out
outsl
add
jecxz
stc
in
bound
sbb
sbb
push
loope
mov
dec
iret
dec
andl
pop
aad
cwtl
xor
test
or
fwait
adc
fisubrs
pop
test
je
addr16
in
jae
xchg
mov
and
push
push
xchg
cmp
xchg
adc
aad
jae
dec
ja
dec
out
popl
icebp
stos
js
push
dec
jbe
enter
mov
enter
mov
arpl
push
out
mov
push
imul
push
mov
std
add
test
push
jb
pop
mov
les
cwtl
out
rcrb
pop
pop
jecxz
pop
bnd
inc
jg
xchg
shll
cmp
adc
or
in
dec
clc
xchg
pop
push
mov
popa
stc
mov
push
bound
push
ret
mov
pop
xchg
mov
adc
jno
jle
mov
rclb
insb
mov
pop
jno
icebp
jo
adc
je
add
mov
adc
sub
xchg
xor
shl
xor
movl
addr16
lcall
idivl
fbstp
fidivs
aam
and
pop
data16
mov
fsubr
aad
dec
ret
xor
js
test
insb
xchg
mov
outsl
push
and
shl
movsl
push
bound
and
lods
dec
jo
leave
lds
addr16
lods
push
pushf
fnsave
mov
mov
mov
mov
mov
int
and
imul
jp
and
popf
xor
clc
int
pop
jmp
jb
jbe
push
inc
rcr
test
daa
fildll
cmp
in
xor
pusha
add
sub
pop
sub
fwait
push
sub
loope
fisubrl
push
mov
pop
lock
mov
dec
out
aas
and
sub
mov
sahf
pop
test
mov
lahf
repnz
sub
ud2
call
out
rol
xlat
out
sbbb
adc
loopne
repz
in
dec
test
aas
test
aaa
fst
inc
cwtl
inc
mov
and
fisubl
hlt
pop
popa
jo
or
xchg
xchg
dec
nop
or
popa
sub
cmpsl
mov
xor
jae
iret
pusha
xorl
jmp
aad
push
push
rol
aad
nop
stos
dec
repz
subb
mov
loopne
es
pushf
mov
add
mov
mov
xchg
in
loopne
lahf
push
jle
xchg
mov
push
or
sub
fldcw
nop
adc
in
dec
ret
cmpsl
xor
mov
or
push
outsb
pop
enter
pop
sub
imul
std
mov
lds
add
xor
ret
pop
xchg
sti
popa
jge
jl
or
sbb
test
add
mov
adc
sub
dec
pop
xor
aad
cmc
push
imul
xor
aad
js
sbb
jg
mov
jns
mov
aaa
popa
push
call
daa
sbb
add
add
xchg
cmpsl
repz
inc
fistps
mov
push
test
cli
pop
scas
ds
fcmovnu
subb
fwait
sub
mov
dec
in
lock
data16
xchg
cmp
jb
jne
jnp
ss
pusha
xchg
jle
repz
aam
vmread
dec
and
popf
es
inc
jge
jmp
jb
ret
mov
jg
sub
and
sub
sbb
dec
test
jecxz
mov
inc
cmp
mov
out
push
sarb
mov
inc
fcmovnb
ds
fstl
out
push
jae
mov
shrl
insb
cmp
inc
inc
imul
add
push
stc
add
xor
mov
out
sub
imul
push
ss
mov
loope
cwtl
adc
and
push
pusha
std
xchg
nop
pushf
hlt
test
pusha
mov
mov
or
in
aam
inc
mov
sbb
dec
popa
inc
add
jb
dec
push
gs
mov
jo
movl
cli
mov
scas
repnz
popa
mov
aaa
mov
pushf
sub
scas
push
adc
loopew
fs
leave
mov
jmp
outsl
stos
bound
or
push
pusha
sbb
in
ss
iret
outsb
jge
pop
call
adc
test
insb
lret
mov
imul
xor
mov
push
rolb
pop
lods
mov
stos
mov
rolb
fs
cmp
jae
xchg
pop
cli
nop
jp
dec
adc
in
in
shll
iret
js
leave
in
cmp
jl
fst
pop
cmp
imul
cmp
fbld
inc
jge
imul
repz
dec
fwait
test
jg
pusha
add
test
lret
and
pop
mov
pop
jnp
cli
lea
loopne
imul
push
or
mov
icebp
gs
xor
push
iret
in
dec
test
add
jbe
mov
adc
lahf
push
je
jle
sub
dec
pop
pop
cmp
call
mov
xchg
push
inc
jno
loop
add
push
dec
push
test
mov
stos
in
and
leave
dec
push
dec
repnz
gs
cmpsl
and
fisubl
jle
mov
outsb
addr16
push
arpl
push
lds
inc
outsb
cmp
add
addr16
aaa
and
pop
aaa
push
popa
xor
movsb
pop
fnstsw
int
mov
or
dec
fistpl
pop
negl
jmp
push
js
inc
sarb
xor
and
or
mov
jne
lcall
sub
lcall
inc
xchg
push
dec
popf
xor
xchg
frstor
enter
roll
cmpsb
jae
test
rolb
jl
adc
xchg
dec
push
sbb
jmp
cwtl
and
fidivs
pop
daa
sub
jp
inc
fwait
sub
addb
cmpsb
dec
add
std
inc
inc
cmp
fidivl
adcb
out
mov
rcrl
xchg
fmull
adc
aad
inc
pop
ret
outsb
and
ja
cmp
fidivrs
jl
jae
rcll
xchg
ret
push
pop
pop
add
aad
sub
ss
ss
mov
inc
into
gs
out
stos
aaa
pop
mov
push
icebp
and
int3
stos
xchg
into
insb
ljmp
jb
jno
jbe
adc
imul
inc
mov
jmp
or
jl
call
mov
cmp
xor
push
jns,pt
push
and
xchg
xchg
dec
or
sti
inc
stos
les
loope
inc
inc
cmp
cmp
das
out
fld
xchg
adc
xchg
stc
daa
push
aaa
push
mov
and
ljmp
jecxz
or
sub
jl
push
flds
sub
adc
pop
jg
sbb
adc
jl
mov
mov
cmp
dec
lret
mov
ret
cmp
mov
fisubrs
jb
mov
mov
xchg
jmp
push
push
imul
cmp
adc
das
gs
mov
loope
daa
inc
dec
aam
dec
mov
adc
repnz
mov
inc
lods
cmp
jne
lods
jne
lods
repnz
add
inc
cmp
adc
arpl
sub
ret
dec
mov
push
aas
mov
pusha
mov
mov
ret
pop
popa
xchg
int
movaps
jae
lcall
jmp
mov
jb
sbb
inc
pop
lods
adc
insl
vpmullw
or
jnp
push
xor
sbb
jb
mov
lods
pop
mov
int3
sbbb
xor
dec
fstpt
lcall
inc
mov
lods
lret
stos
popa
mov
mov
inc
sbb
pop
jecxz
push
push
scas
sub
jo
dec
xchg
pop
push
jg
pop
mov
or
xlat
out
pop
nop
or
or
sahf
lret
ja
xchg
lret
fisttpl
jnp
sbb
sbb
imulb
fdiv
lods
fs
xchg
sub
pop
orb
cmp
push
inc
mov
xor
mov
sub
dec
cmp
in
imul
jnp
les
push
lods
js
jp
js
fistpll
dec
inc
push
lock
inc
in
ljmp
imul
mov
push
pop
movsl
ret
or
sarb
xchg
or
push
pop
adc
sbb
jge
shl
jne
push
xchg
sub
scas
test
popf
repz
mulb
cmp
mov
xlat
cmp
cmp
adc
inc
push
int3
andl
mov
scas
inc
pop
call
loop
pop
dec
icebp
mov
leave
inc
pop
push
jg
push
imul
sahf
testb
mov
es
jle
jg
push
xor
lahf
rorl
loopne
add
jnp
aas
adc
or
lcall
cmp
push
push
pop
jbe
sti
pop
and
lock
adc
mov
mov
xchg
jns
push
xchg
mov
add
in
notl
cmp
int3
sbbl
enter
push
fimuls
sbb
rolb
fldenv
add
movsl
push
and
out
fildll
test
in
in
ret
pop
fucomp
pop
in
mov
xorb
xchg
jmp
jbe
cmp
loop
dec
fnstsw
mov
pop
xorb
fidivrs
fldt
pushf
or
sbb
rorb
fs
and
add
aas
push
add
xchg
lds
xchg
adc
mov
push
in
insb
xrelease
scas
dec
push
cwtl
enter
out
out
xor
nop
and
sub
popa
dec
movsb
out
fcmovnu
out
mov
xchg
sbb
push
mov
out
out
dec
xchg
outsb
je
loope
enter
mov
iret
in
imul
jg
aad
pop
and
jecxz
mov
inc
test
int
jmp
sub
paddw
orl
lret
addr16
iret
daa
sbb
mov
outsl
lret
lods
cs
xchg
fnstsw
sub
adc
sarl
outsb
dec
ret
xor
bound
in
xor
es
and
aaa
in
idiv
inc
psubb
mov
cs
pop
or
jle
pop
push
das
ljmpw
inc
outsb
punpckhdq
jbe
andl
test
xchg
cmpsb
insb
ficomps
insl
imul
cmp
int
mov
push
and
and
jmp
filds
or
cmp
xor
sarb
add
js
jecxz
and
dec
jecxz
xchg
out
int3
out
xor
pop
sbb
jl
lods
ljmp
mov
ljmp
pop
scas
inc
cli
cmp
mov
mov
scas
arpl
jnp
xchg
fcomi
cwtl
enter
cmp
loope
ljmp
cmp
pop
push
dec
int3
add
jecxz
rcrl
jmp
stc
push
sbb
stos
pop
filds
lahf
adc
sbb
outsl
fistps
xlat
inc
lds
test
xchg
and
hlt
addr16
dec
adc
xchg
mov
and
aaa
xlat
aam
cmp
movsl
mov
leave
fs
pop
lar
mov
notl
sahf
xchg
int
xor
fwait
lret
call
rol
push
in
pop
aas
or
sbb
aam
sbb
push
out
add
pop
in
lahf
pusha
inc
push
clc
sbb
cltd
mov
mov
and
adc
scas
les
js
test
stos
or
rcll
xor
pop
mov
jmp
fimuls
jge
leave
sub
xor
jge
pop
sub
pop
add
sbb
jbe
adc
xchg
aas
push
inc
sarb
mov
sub
push
out
add
pusha
xchg
sub
xchg
jmp
addr16
adc
maskmovq
scas
and
cmp
and
sbb
cmp
movsb
add
push
and
xchg
inc
add
js
andl
fiaddl
mov
push
mov
iret
test
ret
imul
jno
mov
cmp
mov
fistl
mov
push
out
cmpsl
ret
push
or
js
inc
dec
int3
ja
sub
popa
outsl
mov
inc
pop
out
es
and
scas
push
test
sti
frstor
test
orb
test
enter
loop
leave
clc
shrb
adc
cmp
sbb
and
inc
out
jb
dec
insb
test
mov
lods
mov
stos
jne
xchg
push
or
and
xor
sbb
int
add
mov
cmpb
inc
and
fwait
mov
push
inc
dec
xchg
lret
xchg
lock
dec
daa
and
aad
pop
add
loope
leave
sub
mov
test
jl
pop
sbb
jg
mov
inc
aad
lret
lods
and
xchg
gs
push
mov
cmp
pop
fcoms
shrb
mov
outsb
imul
fwait
mov
or
xchg
sub
jg
inc
sahf
fstps
rcr
pop
mov
mov
repnz
rcl
push
xor
clc
stos
test
loop
and
and
jno
xor
aas
xor
and
andb
daa
arpl
cltd
mov
cmpsb
aas
adc
pop
dec
into
mov
adc
dec
dec
pop
add
loop
aas
mov
gs
fstl
xor
ss
dec
and
icebp
ss
push
pushw
mov
mov
scas
mov
jg
neg
adc
sarl
cs
push
pop
xchg
test
ficoml
sahf
int3
std
cmp
popa
les
mov
mov
jbe
fstpt
fnstenv
arpl
jae
push
pushf
idivb
mov
jecxz
dec
push
push
cmp
jl
jle
pop
adc
mov
mov
ljmp
jae
aas
enter
das
and
and
mov
aas
aam
cs
xlat
inc
loope
mov
cmpsl
mov
add
and
jg
stos
mov
xor
popf
inc
lret
jg
jmp
add
fwait
pop
pop
inc
or
xor
mov
inc
outsl
cltd
out
in
je
mov
inc
orb
sbb
enter
scas
dec
js
das
gs
cmp
adcl
shrl
imul
xchg
sub
or
ja
pop
push
inc
jno
xor
add
fcmovne
xor
xchg
daa
mov
push
fsts
scas
mov
cs
dec
add
jne
and
dec
push
jno
push
adc
sub
dec
xor
out
mov
lods
int3
push
lea
xchg
or
add
xor
sbb
ljmp
jecxz
dec
adc
mov
call
sbb
add
ja
outsl
pop
das
aaa
fmull
enter
rorl
add
or
cmp
adc
hlt
es
out
xchg
aaa
adc
cmp
inc
les
subl
imul
mov
inc
lock
jge
push
cmp
leave
insl
xchg
dec
jle
mov
push
ret
sbb
cs
push
add
cmp
dec
jecxz
mov
dec
adc
js
insb
jmp
push
add
mull
pop
dec
lds
test
cmp
into
rolb
dec
jg
je
push
mov
popa
jbe
inc
pop
cld
push
pop
mov
mov
outsl
mov
mov
add
mov
mov
xlat
popf
sub
arpl
stos
mov
mov
mov
insl
ds
or
pop
xchg
xchg
movsl
dec
fisttps
cld
fldcw
sbb
mov
lahf
add
inc
add
xor
sbb
repz
gs
dec
shufps
daa
push
push
mov
ror
add
sub
mov
add
jbe
loopne
xor
mov
push
rcl
fldl
movsl
xor
sub
mov
xor
repnz
dec
mov
pop
sbb
lret
add
adc
push
sbb
mov
push
xor
push
ret
idiv
mov
andb
ja
js
mov
sahf
inc
insb
xor
add
inc
pop
xlat
push
push
nop
int
add
adc
roll
push
aaa
dec
jb
ljmp
lahf
insl
and
repz
lahf
cmp
xor
adc
adc
ljmp
sub
outsb
xchg
ficoml
sub
inc
inc
testl
xor
or
repz
pop
pop
je
fstps
adc
cs
xor
enter
push
cmpsb
mov
cmp
jmp
mov
cmpsb
push
mov
outsl
and
adc
subb
insl
sbb
mov
ja
jno
mov
xchg
scas
stos
push
lea
cmp
mov
lret
iret
pusha
imul
push
cwtl
add
cmpb
lock
sar
xchg
jns
inc
imul
test
ret
pusha
adc
or
push
xchg
stos
xor
mov
mov
cmc
xor
rcrl
mov
xor
sub
sub
xchg
cmp
std
addr16
mov
lret
sub
call
or
hlt
test
lret
sub
hlt
and
ljmp
aad
ret
jge
mov
xor
les
int
mov
push
sbb
add
fistps
test
fdivrp
repz
leave
adcb
add
loopne
shrb
lods
xchg
or
add
loope
notb
jp
xor
test
fidivs
push
imul
mov
pop
addr16
test
outsb
cmp
mov
dec
into
scas
or
mov
fdivrs
xor
mov
mull
and
mov
call
sub
stc
lahf
pop
cmp
xor
addr16
sub
add
sbb
test
pop
outsb
sbb
fimuls
pop
mov
cmc
add
sbb
jmp
inc
subl
push
pop
or
mov
fstps
cs
aaa
stos
aaa
jl
inc
xor
movsl
sti
jge
movsb
inc
pop
lods
lods
dec
xchg
gs
dec
ss
loop
mov
ret
frndint
scas
lds
idiv
mov
inc
or
repnz
aas
and
dec
hlt
jae
fmuls
xlat
in
push
cmp
add
push
ret
jmp
cmpsb
xchg
xchg
jo
xor
sbb
mov
mov
scas
outsl
xor
dec
push
lret
sub
xor
push
xor
push
lock
es
cltd
push
cmp
xor
cmp
mov
mov
cwtl
dec
dec
dec
addl
fimuls
aaa
pop
or
inc
sarl
popa
sti
push
cmc
xorb
loop
xor
sub
inc
xchg
das
lcall
enter
xlat
inc
sarl
lock
imul
and
sub
inc
cmpsl
sub
loop
mov
sahf
mov
gs
or
add
pop
sub
xchg
sub
ret
movsb
jle
and
cli
iret
add
cmp
inc
inc
push
add
in
push
iret
lds
fstpt
mov
cs
cld
jl
filds
les
push
dec
pop
xor
pop
fidivrl
cmp
mov
sarl
push
mov
out
roll
inc
or
dec
cli
fmull
jge
out
dec
and
shlb
dec
pop
sahf
xchg
add
jl
inc
nop
stos
adc
xchg
push
cmp
sub
cmp
and
cmpsl
cmp
push
dec
clc
xor
int3
repnz
stc
push
or
bound
mov
ljmp
mov
outsb
imul
jns
adc
mov
dec
jno
or
subl
add
push
jbe
gs
mov
dec
test
sub
adc
push
cmc
std
mov
das
fsubrl
push
xchg
inc
cld
daa
ficomps
push
mov
cmpsb
imul
push
and
cwtl
cmp
add
jbe
xor
pop
sbb
lods
sbb
push
pop
pop
rcl
fs
dec
std
fs
and
jo
pop
in
mov
jle
pop
ret
jp
and
test
stos
push
xor
adc
aam
ret
or
and
inc
mov
test
repz
lock
adc
sbb
lea
adc
xlat
rol
sbb
movsb
mov
imul
aas
xor
jecxz
add
out
incb
fistps
stc
shr
int3
inc
add
push
cs
stos
fldt
sub
cwtl
cmp
clc
pop
sbb
cmc
aas
das
add
cwtl
xlat
xchg
shrl
jo
add
mov
sbb
sub
lods
cmc
das
scas
xlat
shll
in
icebp
xchg
inc
rcll
push
push
fiadds
add
mov
xor
addl
adc
fwait
js
dec
js
hlt
jge
dec
lods
loope
test
jo
pushf
push
xchg
ficoml
dec
or
jmp
leave
repz
fistl
xor
ja
enter
jl
int
dec
mov
xchg
mov
xorb
sahf
inc
sbb
ficompl
push
sub
pushf
dec
cmpsb
sub
mov
outsl
adc
push
fwait
mov
push
mov
xor
push
in
xchg
in
ret
push
fcomi
pop
mov
mov
inc
lods
inc
xchg
mov
push
lods
fldl
rcll
dec
lock
aam
cwtl
bound
jae
or
push
jns
nop
adc
xchg
xchg
repnz
mov
and
pop
cmc
in
fbstp
sbb
pop
lret
loope
jb
repz
and
lahf
cmp
adc
xchg
adc
push
in
faddl
xor
pop
mov
add
push
adc
inc
and
iret
add
xor
and
test
out
pop
jmp
mov
loop
fists
lcall
add
mov
xchg
jecxz
inc
cmp
jl
jmp
mov
sbb
or
mov
jp
out
add
ret
jno
sub
in
das
sbb
repz
push
mov
cmp
inc
movsb
ss
in
mov
ret
aad
test
lcall
les
pop
mov
sub
int
call
mov
add
pushf
cwtl
push
mov
mov
divl
aad
mov
cmp
jle
add
nop
arpl
jne
jmp
push
sub
adc
jl
cmp
out
mov
jmp
lret
cmp
es
pop
dec
leave
xor
sahf
movsl
int3
mov
out
push
xchg
fistpl
fisubrs
enter
movsb
mov
xchg
test
divps
fmull
lock
leave
iret
test
out
dec
xchg
mov
cli
jne
ja
inc
fnstenv
push
sarl
push
enter
dec
pushf
outsb
sar
cmc
es
daa
mov
inc
jo
jle
cmp
mov
xor
xor
ficomps
ret
dec
dec
scas
rcr
fs
dec
lods
je
cmpb
jo
pop
stos
cmp
sti
sub
inc
push
cmp
repz
ret
lahf
cmp
cmpsb
ja
xor
jmp
inc
shr
mov
dec
mov
fs
fcomps
pop
imul
jle
push
add
mov
bound
outsb
sub
into
sub
into
repz
push
mov
xor
mov
imul
dec
in
xor
dec
pop
add
fs
mov
xor
popa
movsl
sbb
repz
adc
aad
scas
loop
mov
push
mov
out
push
out
out
test
xlat
pop
xchg
lock
lcall
pop
scas
mov
push
fidivs
out
or
adc
imul
ret
mov
sbb
int
gs
mov
sub
push
cli
and
xlat
repnz
lea
pop
xchg
mov
adc
mov
lret
adc
es
cmp
repz
jns
xchg
stos
mov
aad
cmpsb
sarl
shl
js
mov
hlt
inc
std
inc
clc
inc
or
jle
mov
xchg
jl
aas
cmp
icebp
pop
in
jecxz
pop
push
cwtl
int
pop
push
xor
loope
and
inc
jo
in
jecxz
push
inc
call
pusha
push
push
sub
xlat
push
fs
sahf
je
subb
ljmp
out
sub
xor
pop
jne
int3
loopne
dec
inc
or
ja
rolb
popa
xor
and
add
sbb
and
sub
sub
insb
sub
or
mov
test
adcb
xchg
bound
lret
cmp
hlt
in
dec
fldt
mov
es
sti
xchg
daa
push
js
mov
es
inc
repz
imul
cs
fcoml
pop
scas
aam
inc
call
lret
rolb
sub
sub
outsb
dec
sahf
lods
dec
ret
xchg
inc
icebp
lock
test
cmp
mov
stc
enter
in
or
xchg
setbe
fcom
mov
insl
inc
call
sub
call
sub
cmp
push
pop
sub
adcb
jl
adc
mov
sub
mov
rcrl
mov
test
stos
sub
out
sti
mov
xor
iret
aaa
inc
pop
in
loop
mov
lret
sar
ds
jle
inc
testl
es
cmpsl
xchg
dec
sahf
jecxz
push
inc
mov
jmp
aas
pop
lds
fstl
addr16
mov
inc
imul
xchg
cmpsl
fimuls
cmp
jmp
pop
out
pop
inc
sub
insb
xchg
sbb
or
jecxz
mov
sub
push
cs
shlb
mov
dec
push
jg
inc
or
mov
push
ret
mov
pop
lock
into
jo
lcall
inc
mov
int3
insl
xchg
adc
test
icebp
negl
inc
or
popa
pop
test
mov
in
pushf
sub
jge
fs
mov
dec
mov
pop
jae
in
outsb
leave
call
pop
jge
lahf
arpl
insb
jle
jns
jne
cmp
xchg
pop
dec
jne
jne
or
es
add
scas
pop
push
mov
lock
in
sbb
jp
xchg
ja
add
fwait
daa
in
in
mov
hlt
pop
mov
bound
shrl
scas
mov
and
je
inc
fstl
cmc
stc
sbb
incb
imul
adc
inc
mov
or
icebp
mov
sbb
imul
int
jmp
mov
imul
imul
notl
dec
inc
push
sbb
push
stc
fiadds
and
in
and
outsl
shlb
push
xchg
shll
roll
add
xchg
and
in
jmp
in
xor
sahf
mov
or
xlat
scas
mov
jle
inc
in
pop
add
decl
adc
add
mov
pop
lea
adc
pop
cmc
insb
sti
nop
jae
lahf
ret
adc
adc
mov
add
mov
shrb
lret
xchg
mov
fstl
mov
jns
test
das
mov
ret
into
stc
nop
mov
rclb
dec
sub
dec
mov
mov
popa
std
mov
movsb
mov
add
or
ret
leave
out
add
pop
and
andl
clc
inc
jle
mov
push
sub
inc
repnz
cwtl
mov
in
or
xor
iret
or
cmp
loopne
data16
cwtl
bound
adc
mov
add
pop
ss
fidivl
sbb
jb
dec
cmp
or
sub
rcrb
cmp
xor
cmp
xchg
int3
fstpt
ss
jne
stc
mov
hlt
sub
xchg
cmpsb
lds
imul
div
push
dec
push
gs
cmc
mov
in
outsb
jno
roll
icebp
mov
xchg
shlb
or
loop
lea
scas
aad
xchg
pop
sbb
bound
aas
push
setl
dec
aaa
gs
gs
cmp
rorl
lods
shrl
inc
mov
mov
sub
lods
jecxz
sub
mov
mov
and
xchg
pop
adc
push
out
in
sub
into
mov
xchg
mov
add
dec
stos
xchg
adc
add
int3
and
or
inc
mov
fwait
mov
mov
or
xor
sub
inc
jnp
add
pop
mov
sahf
add
shlb
test
jnp
insl
pushf
dec
mov
add
cmp
mov
std
bound
push
pop
int3
pop
xor
test
push
repz
scas
dec
or
cmp
pop
mov
call
xlat
sub
in
or
xor
movsb
xchg
pop
aas
add
adc
stos
andb
xchg
in
out
hlt
mov
jecxz
dec
add
test
int3
aam
sub
scas
xor
or
mov
lret
mov
ja
push
cmp
pop
lcall
cmp
fldl
hlt
push
cmp
fwait
out
arpl
jl
jo
mov
cmp
scas
scas
inc
aaa
xor
and
popf
pop
aad
cmpsb
jp
push
push
mov
loop
hlt
adc
lods
mov
lods
leave
daa
stc
jne
ds
sahf
dec
sbb
mov
cmp
add
imul
lret
aas
push
dec
add
or
dec
out
jnp
cmp
mov
daa
cs
movsb
sub
mov
xor
adc
mov
push
jo
jmp
mov
cmpsb
aaa
sub
push
or
mov
xchg
cmp
loope
lret
aam
out
ja
daa
mov
lahf
out
testl
sub
imul
adc
cli
sbb
sti
xchg
dec
test
sti
pop
inc
repz
xchg
jl
popa
mov
ja
sbb
mov
mov
and
mov
lods
mov
jmp
xor
mov
add
mov
cmp
add
insl
pop
mov
xchg
aaa
std
sarb
cmp
cltd
xchg
xlat
scas
sbb
pusha
je
mov
cmp
pop
sti
js
in
repnz
dec
pop
sbb
push
push
icebp
jecxz
jle
nop
mov
std
jp
jb
jle
lret
mov
dec
xchg
pop
jle
jl
nop
sbb
in
fisttpll
mov
cmp
fldt
mov
sti
jmp
xchg
aam
add
loop
jbe
sbb
mov
sbb
sub
rclb
adc
mov
pop
pop
adc
and
fstpt
dec
mov
loopne
addb
or
lret
push
cli
cs
fwait
popa
or
xorl
push
dec
jecxz
lret
lods
mov
pop
cli
add
cld
add
push
jp
xchg
add
fs
push
xor
das
test
enter
pop
subl
or
cmp
int
popf
xchg
inc
repnz
frstor
mov
test
fmuls
out
or
ljmp
ret
sar
lods
lret
lret
lret
xchg
jns
scas
mov
pop
jle
and
shr
test
stos
mov
mov
mov
mov
mov
sub
shll
sbb
sahf
push
fmull
jne
in
dec
pusha
popa
sti
lock
pusha
jmp
inc
and
pop
inc
inc
in
mov
and
in
iret
mov
mov
push
push
add
mov
fisttpll
mov
loopne
in
andl
int
div
add
lahf
ja
lcall
std
or
mov
add
mov
loop
out
cmp
das
mov
jl
sbb
or
enter
testb
add
lea
and
fcompl
fwait
aam
mov
push
dec
sbb
pop
hlt
in
dec
mov
enter
mulb
xor
adcl
jno
iret
xor
aam
bound
dec
test
fs
ds
or
push
loop
int
sub
push
sub
cmp
out
imul
cs
jbe
add
ds
ljmp
pushf
cli
pop
sbb
movsl
rolb
xor
out
into
jg
jnp
add
jmp
jge
cmp
imul
mov
xchg
cld
mov
jae
dec
pushf
xchg
iret
add
adc
or
fs
lcall
cld
sbb
sbb
dec
and
cs
push
jle
out
in
popa
dec
fmul
mov
call
out
mov
jecxz
icebp
sbb
add
call
and
pushf
pop
inc
into
inc
and
fs
add
lret
xchg
lcall
push
shl
or
adc
push
sarl
ds
mov
dec
lret
pop
aad
repz
pop
test
jecxz
lock
popa
ja
mov
fcomps
addb
dec
mov
pop
data16
stos
or
lods
gs
xor
lea
test
or
xchg
ja
xchg
inc
hlt
pop
sbb
sbbb
nop
std
lods
xchg
test
jle
mov
lock
lds
cltd
fistpl
sbb
push
pop
pop
mov
outsb
push
mov
xchg
popa
push
cmp
jmp
dec
pop
or
push
icebp
inc
mov
popf
mov
andb
insl
orl
cmp
lock
inc
add
fildl
mov
idivl
stc
rcll
push
mov
sub
lahf
ret
adc
scas
mov
movsl
push
movsl
cli
testl
sahf
mov
negl
mov
out
arpl
fldl
mov
xchg
out
and
in
jecxz
lods
mov
xor
or
xchg
add
and
cmp
and
scas
dec
in
adc
push
lods
sub
mov
int
out
adc
int
add
mov
mov
fwait
sub
and
insl
mov
dec
mov
sbb
fiaddl
jo
data16
sbb
inc
in
repnz
push
mov
and
loopne
adc
repz
lret
gs
xor
mov
mov
sub
pop
lods
addr16
pop
cmp
push
mov
dec
sub
test
stc
jmp
mov
shll
push
mov
xchg
stos
pop
xchg
pop
mov
xor
pusha
loopne
shr
ss
jo
mov
pushf
mov
jae
mov
inc
sub
push
push
push
mov
cmp
mov
into
push
and
out
jno
test
test
push
xchg
push
nop
or
mov
cwtl
mov
sbb
faddl
dec
gs
fidivrs
sbbb
jge
rcrl
lock
popf
push
xchg
scas
leave
cmp
lods
pop
movsb
adc
cmp
add
sub
push
jmp
add
pop
out
ljmp
out
jle
pop
cmp
inc
jmp
icebp
jne
insb
in
enter
jnp
jge
movsl
add
mov
mov
sub
leave
cmp
jbe
xchg
enter
sub
call
mov
xor
roll
clc
mov
fwait
popf
push
ret
cmpsb
fsubrp
mov
in
or
imul
sbb
in
pop
pop
inc
push
std
mov
adc
push
sbb
and
subl
dec
in
mov
mov
sbb
loop
dec
mov
jg
iret
lea
sti
inc
out
fistpl
mov
cmp
ret
sbb
repz
rcll
out
or
push
pop
lea
xchg
dec
out
jnp
test
jle
sarb
cmpsb
repz
testb
jo
cmc
shrb
push
cmp
int3
add
or
jae
insb
push
inc
push
in
pop
iret
mov
int3
push
mov
stc
jmp
rol
in
es
jbe
push
leave
xor
out
sbb
ss
add
add
cwtl
jns
filds
pop
mov
rol
dec
rclb
sahf
rcrb
fwait
jne
stos
mov
pop
or
fisubrs
mov
addl
out
into
dec
add
dec
mov
dec
insl
shlb
shlb
shr
je
ljmp
or
mov
lahf
scas
add
jbe
out
pop
dec
jge
lods
sub
add
sub
pop
and
push
cmp
mov
je
dec
sub
fbld
xchg
pusha
rcrl
in
xor
outsb
jns
pop
cld
fidivrl
jnp,pt
inc
xor
xchg
in
ja
in
fmull
mov
andl
or
inc
pushf
scas
adc
lea
andb
jae
lret
in
cmp
sbbl
cld
cmp
push
in
sub
add
inc
push
movsb
mov
in
mov
adc
push
stos
bound
ds
or
fsubl
sbb
ja
add
or
pusha
stc
and
push
out
iret
fmull
push
inc
or
cmpsb
add
jl
movsb
or
pop
in
sbbb
xor
lods
mov
push
into
and
push
imul
adc
out
xor
fsubr
dec
sti
insl
xchg
cld
sti
ljmp
data16
sti
stos
add
je
test
jno
jo
out
add
cmp
cmpsl
enter
push
lock
stc
sub
in
jno
out
pop
sti
jnp
fcoms
cwtl
sub
or
mov
push
cmp
add
pop
imull
pop
push
lods
add
mov
mov
xor
stos
pop
fistpl
mov
sti
xchg
or
js
xor
shll
loop
push
fwait
or
pop
in
shrl
dec
out
mov
pop
jno
insl
repz
or
adc
inc
xchg
iret
and
xor
std
sbb
adc
xchg
mov
xor
fwait
pop
je
pop
pop
adc
and
vpaddq
jne
or
add
pop
imul
cmp
push
inc
jae
cli
xor
or
cmpb
jno
adc
sti
scas
sbb
xorb
nop
push
adc
add
sub
sbb
pop
cmpsb
negb
mov
icebp
jg
pop
insb
nop
push
xor
roll
mov
movsb
sub
insl
rcrb
dec
jns
das
cltd
push
push
jb
or
jmp
jns
je
cmp
or
xchg
xor
lahf
inc
cmpsb
out
and
xchg
sub
jbe
mov
rsm
test
adc
pusha
data16
lcall
into
leave
roll
jle
and
sbb
adc
adc
xchg
fcoml
loope
cmp
jbe
outsl
push
in
gs
fimuls
arpl
mov
ljmp
clc
data16
lahf
xchg
xchg
pusha
negb
aas
les
pop
out
repnz
jbe
xorb
int3
test
pop
mov
insl
loop
cltd
bound
dec
iret
inc
cli
jge
and
not
jge
js
dec
mov
xchg
int3
imul
pop
cwtl
or
addr16
mov
addr16
push
les
xchg
xor
lcall
add
shll
loope
in
out
xlat
inc
sub
nop
ja
hlt
xor
or
jg
jg
xor
cmp
fstpt
mov
and
jb
es
and
inc
jecxz
xchg
icebp
push
xchg
add
int3
pop
bound
jmp
int
ljmp
mov
mov
loopne
pop
xchg
mov
xor
add
movsb
mov
bound
sbb
add
jle
pop
cs
mov
ja
adc
in
push
outsl
or
insl
into
loopne
sub
xlat
insl
pop
mov
or
mov
pop
mov
decl
ret
sub
pop
je
sbb
jecxz
js
stos
pop
lea
std
insb
pop
add
xchg
sub
lods
fisttpll
jge
out
std
ret
mov
ljmp
notb
in
fwait
out
inc
mov
xor
in
call
mov
sbb
loope
push
fs
jl
mov
push
adc
fcoml
sbb
push
or
sbb
insl
loopne
inc
nop
lods
adc
xchg
pop
jecxz
xchg
dec
into
sbb
sarl
in
adc
mov
jae
push
inc
pop
pop
cmp
insb
daa
jno
mov
and
mov
or
cli
enter
and
xchg
lret
cmpsb
dec
dec
fdivr
adc
sub
dec
lods
mov
jp
pop
add
push
insb
mov
sahf
mov
push
push
in
daa
or
leave
sti
lods
or
into
dec
adc
out
mov
insb
aas
sub
pop
mov
mov
pop
rcll
ja
out
mov
mov
out
pop
xchg
ss
jge
mov
stc
dec
sub
addr16
stos
jl
push
out
lcall
sbb
rol
shrb
into
data16
cltd
loop
push
pop
divb
sbb
add
cwtl
int
jge
cmp
xor
adc
outsl
jno
dec
mov
mov
mov
test
adc
inc
test
mov
std
outsl
dec
pop
das
xchg
dec
cmp
xchg
mov
shll
push
xor
mov
mov
xchg
test
cmpb
mov
fbstp
loop
mov
sub
xchg
in
push
aaa
dec
andb
or
xchg
jp
sub
or
ss
clc
mov
sarb
dec
dec
popa
ds
imul
mov
popf
dec
ret
dec
out
mov
pop
mov
sbb
in
cld
dec
or
outsb
ficoms
sub
pusha
jp
pop
pop
lock
pop
lret
test
xchg
pop
add
jmp
out
jnp,pt
adcb
pop
in
test
or
mov
xor
fistps
jmp
outsl
mov
push
out
cmpsb
jle
cmp
daa
and
std
push
enter
in
sub
xchg
mov
mov
mov
movsb
js
ljmp
fcmovnu
sahf
dec
jl
scas
outsl
rcl
lds
xchg
imul
test
dec
rcr
loopne
insl
cmp
scas
sbb
test
add
push
js
imul
jge
inc
mov
xchg
aad
nop
test
mov
sub
mov
sbb
sbb
xor
mov
sub
xchg
and
add
adc
insb
xchg
fdivs
cltd
mov
dec
sbb
push
fwait
clc
bnd
lret
sub
add
aam
iret
pop
ljmp
insb
in
pop
in
es
loope
pop
and
lcall
xchg
jae
mov
pop
scas
xchg
jmp
addb
jmp
pushf
xchg
cmp
divb
pop
mov
addr16
aam
jnp
fidivrl
inc
sub
out
test
xchg
pop
std
pop
sbb
mov
aas
stos
xchg
mov
jb
andb
pop
or
je
loopne
xor
mov
mov
jl
dec
lods
push
cwtl
and
cmc
decb
mov
mov
inc
lret
dec
mov
add
jl
fidivl
xchg
push
es
add
xchg
add
jge
movsb
or
dec
adc
sbbl
popa
adc
and
cmp
ja
jl
cmp
push
out
jb
xor
push
lods
mov
and
mov
cmpl
int3
cmp
mov
popl
and
out
ret
in
pop
fsubs
repz
les
mov
sbb
fsubrl
rcll
hlt
loopne
pop
pop
pop
mov
xor
cld
push
sub
jmp
jne
sbb
stc
xchg
cmp
in
sti
sub
cmp
aam
jg
jnp
mov
mov
sub
cmpsl
test
pusha
xchg
popa
and
add
rcll
roll
adc
add
mov
das
lock
jg
nop
cmc
out
mov
lea
or
mov
sub
push
mov
inc
pop
orl
sub
insl
pop
scas
xor
jno
ret
xlat
inc
push
fwait
in
ljmp
cmpsl
cmp
in
pop
js
push
insb
aaa
xor
cwtl
ss
imul
pop
mov
jle
loope
or
jl
popf
subl
stos
mov
jmp
lret
jmp
push
push
movq
popf
inc
out
add
std
jl
cmp
lret
push
jp
inc
push
rcrl
stc
inc
test
fmuls
dec
icebp
adc
loope
cmc
dec
popa
sbb
mov
lret
rorb
jae
sub
stc
pop
arpl
movsb
cltd
pushf
sub
scas
or
sbb
out
inc
and
gs
jmp
popf
push
mov
dec
mov
lcall
adc
cmc
cwtl
jae
push
test
mov
mov
jne
sbb
mov
stos
ret
add
in
or
cltd
mov
aad
pushf
mov
push
mov
es
mov
push
mov
push
inc
std
inc
rorb
pusha
and
hlt
cmp
fistpl
lea
lods
xchg
mov
daa
dec
cltd
jg,pt
xchg
sbb
into
popa
mov
mov
push
jno
inc
add
dec
jp
out
add
cmp
fcoms
std
lcall
mov
gs
mov
pop
sahf
inc
dec
scas
xor
sub
aam
fdivrs
lahf
js
inc
ret
packssdw
push
and
mov
mov
cmp
repz
fnstsw
inc
mov
add
jno
jae
cmp
xor
lock
adc
mov
push
push
cmp
mov
je
jle
shr
add
mov
sbb
pop
stos
pop
add
push
enter
hlt
das
rcll
pop
jmp
sub
jmp
sbb
mov
fmul
mov
es
shrb
pop
pop
or
xchg
jbe
jns
lahf
sti
jne
cmc
mov
xchg
insb
lods
aas
mov
xchg
mov
clc
leave
test
dec
daa
push
adc
and
adc
xor
or
xchg
and
shrl
in
aaa
ds
call
mov
cmp
es
bound
movsl
testb
dec
iret
push
push
pop
pop
push
pop
ss
cmpsb
lds
daa
dec
sub
and
fs
ds
xchg
push
jecxz
inc
gs
add
loope
xchg
cmp
inc
sbb
std
loopne
aaa
aam
sarb
je
imul
push
test
inc
loope
jb
xchg
sub
aaa
mov
lret
fcmovnbe
pop
jmp
push
push
cmp
push
fisttpl
and
ret
repz
mov
mov
ret
cld
lcall
and
repz
call
and
adc
xor
outsl
add
xor
jp
mov
pop
fs
movsb
repnz
and
pusha
xchg
mov
js
fidivrl
lret
fcom
pop
out
and
ficoms
out
out
adc
mov
mov
jno
shrl
stc
insl
fdivl
add
hlt
sbb
dec
das
movsl
push
cmp
clc
lcall
jmp
outsl
mull
sbb
jb
sbb
push
jge
jmp
push
jne
xorl
enter
stc
adc
or
lret
xchg
mov
or
add
int
jg
push
cmp
imul
stos
sti
xchg
mov
xor
mov
and
cmc
subl
mov
pop
sub
dec
jmp
ret
push
sub
sub
in
je
insl
mov
jns
fdivrl
adc
into
std
jne
mov
xor
insb
es
dec
call
shll
xchg
mov
popf
jb
pop
mov
jg
rcl
xchg
push
dec
mov
xor
pop
mov
sarb
fsubr
and
fmull
flds
pop
lds
daa
mov
xorl
leave
mov
and
jne
pushf
out
aam
mov
push
cmp
xor
iret
pop
jno
cs
outsl
cmp
stc
fadd
leave
pushf
adc
iret
into
jmp
and
stc
push
je
mov
push
cmp
adc
pop
mov
xorl
push
xlat
xchg
sbb
mov
jp
or
shrl
mov
inc
in
ret
sti
dec
fnsave
adc
xor
dec
add
loopne
jmp
pushf
repz
and
imul
movsl
or
xchg
dec
fdivrs
xchg
xchg
inc
ficomps
loope
ja
sete
mov
jp
sub
mov
pop
cld
xchg
mov
sbb
mov
pop
out
and
jmp
into
fwait
dec
stos
dec
fmuls
arpl
jnp
scas
loope
inc
sub
rorb
adc
xchg
cmp
stos
push
mov
xchg
jmp
insb
jp
adc
sbb
push
mov
sarl
movsl
cmp
push
sub
insl
dec
mov
imul
jmp
and
addr16
jo
inc
push
mov
subb
ljmp
ja
mov
push
hlt
inc
add
inc
sub
movl
mov
xchg
fwait
cli
andl
std
mov
cmp
inc
dec
and
das
inc
test
jo
add
pop
insb
stos
inc
notl
sarl
xchg
test
jg
stos
pushf
push
imul
dec
lock
or
popf
dec
add
outsb
pop
sub
jl
cli
inc
inc
mov
jecxz
pop
out
hlt
js
pop
jg
mov
add
xchg
dec
jle
mov
xchg
inc
jg
xor
mov
insb
sbb
pop
lock
shl
leave
fstpt
stc
lods
dec
enter
xchg
jb
dec
fistpll
mov
mov
popf
mov
mov
fwait
shll
mov
leave
push
jmp
iret
data16
popf
jle
add
mov
dec
adc
xchg
fs
jae
popa
jbe
mov
sbb
sub
lahf
pushf
fucomi
outsb
sbb
xchg
std
cs
and
pop
leave
mov
push
add
mov
fsub
movsl
xor
ds
sub
loopne
dec
fdivr
dec
jge
frstor
andb
jbe
or
jno
xchg
or
shlb
cmc
dec
scas
movsl
test
stos
cmpsb
rorl
lock
adc
add
pop
js
inc
jge
pop
push
dec
lahf
jnp
test
push
add
add
in
pop
lahf
imul
stos
cli
jecxz
jmp
jb
cwtl
mov
adc
dec
xchg
clc
cld
or
push
cmp
in
add
daa
inc
dec
lods
addr16
or
pusha
cmp
sbb
std
lcall
dec
je
orl
mov
clc
dec
dec
rcl
shlb
popf
insl
pop
call
push
in
in
popa
xor
xor
mov
mov
or
roll
out
inc
mov
daa
push
and
divl
cmpsl
mov
pop
mul
mov
push
mov
sub
sbb
ret
mov
in
into
imul
pop
or
mov
push
orb
or
xchg
xchg
inc
ret
adc
adcl
xchg
sbb
hlt
adc
inc
test
sbbb
shll
pusha
in
xchg
xor
xor
or
pop
and
xchg
loop
jmp
loopne
test
psubusb
push
lods
or
cli
push
add
jmp
lods
xchg
add
cmp
hlt
jnp
outsl
ja
xchg
and
sbb
jnp
leave
js
clc
hlt
and
mov
push
sbb
stos
adc
jno
xchg
pop
adc
or
ret
push
lds
fwait
push
out
mov
mov
mov
int3
mov
and
cli
and
pop
stc
out
addr16
daa
jno
pop
ljmp
ret
pop
repnz
in
or
int
test
dec
flds
mov
addr16
loop
pop
sub
dec
inc
fcompp
popa
loope
add
and
mov
jnp
dec
jle
or
filds
mov
fnstsw
mov
pop
xor
rol
dec
cmp
andl
mov
xchg
mov
mov
mov
and
xchg
jb
test
adc
popa
mov
int3
repz
mov
xchg
inc
lods
call
xor
xchg
out
and
sub
sub
mov
and
inc
sub
and
loop
mov
xor
xchg
lret
xchg
xlat
lcall
dec
sbb
xchg
push
pop
sar
in
jl
pop
push
cmpsl
and
cld
insl
push
lds
mov
push
nop
stos
arpl
mov
int
out
insb
pop
dec
and
lcall
jecxz
fsubl
jb
inc
pusha
insb
and
int3
dec
pop
scas
or
ds
inc
sbb
int3
and
aam
shlw
nop
cltd
rcrb
adc
test
cs
inc
xchg
shlb
sti
mov
loopne
imul
jmp
dec
in
iret
jns
fwait
or
adc
dec
jl
es
call
ljmp
lret
xor
enter
mov
jb
pop
test
or
nop
ja
xorl
pop
jb
push
int
aam
les
aaa
andb
dec
cmc
sub
jo
outsl
test
xchg
andl
shrl
pusha
xchg
test
data16
jle
cmp
cli
rclb
mov
data16
fsts
pop
inc
dec
in
stos
aad
xor
out
loope
or
dec
push
and
outsl
pop
loope
inc
add
jns
and
subb
clc
push
ret
cmp
sub
xchg
decb
das
add
ja
sub
or
xchg
cmp
adc
or
inc
test
and
xor
test
inc
test
cs
lahf
arpl
icebp
out
cmp
mov
push
test
pushf
cmp
inc
test
xchg
fwait
dec
mov
add
pop
mov
sarb
pop
int
or
xor
xlat
clc
pushf
popf
inc
lods
and
push
xchg
addl
mov
push
outsb
jo
mov
pop
lcall
call
sahf
mov
jge
dec
stos
xchg
push
movhps
push
in
xor
pushf
fucomip
test
in
xchg
push
pop
arpl
xchg
jae
nop
mov
jmp
sub
shrb
mov
or
dec
sbb
stos
sbb
mov
ds
shlb
dec
mov
jmp
sub
xchg
aaa
xchg
lcall
dec
pop
ret
in
xor
pop
into
jp
repnz
jp
addr16
add
fisubrs
push
xchg
movsl
mov
mov
sub
inc
cmpsl
sub
enter
sti
sbb
test
mov
rclb
lods
movsl
loop
jo
adc
stos
cmpsl
adc
jl
iret
xchg
jle
xchg
cld
push
xchg
in
call
mov
pop
addr16
in
insl
call
popl
mov
xor
xchg
sub
cwtl
cwtl
cmc
lret
inc
adc
lds
sub
scas
push
dec
in
mov
push
inc
loop
outsb
dec
xor
jge
scas
and
divl
jae,pn
xor
adcb
aas
enter
sub
xchg
iret
loopne
sbb
and
mov
ljmp
cli
lods
mov
dec
pop
mov
inc
xchg
pop
inc
cld
pop
xor
movsl
in
repnz
outsl
xchg
ret
and
inc
add
xor
pushf
push
mov
pusha
dec
pusha
psubq
js
pop
pop
repz
dec
fwait
xor
dec
xchg
js
rorb
bnd
fwait
cmp
pop
test
cld
enter
imul
aam
lds
push
adc
dec
test
mov
mov
out
movsb
mov
cmpsl
leave
push
mov
push
or
out
movsl
add
icebp
dec
js
pop
mov
cmpl
inc
dec
fisttpl
inc
mov
fildll
hlt
fwait
jae
jp
xor
mov
addr16
int
push
lret
sub
loopne
aam
fldcw
sub
rcl
lret
insl
int3
ret
aad
ds
mov
out
mov
lods
jecxz
jo
loopne
mov
fcomip
dec
adc
mov
int3
aas
sub
mov
sarb
ljmp
or
aaa
add
mov
and
int
aad
fstps
pushf
mov
and
push
test
stc
xor
mov
mov
dec
jo
repz
js
xchg
faddl
les
popa
inc
dec
mov
inc
jne
out
and
push
ret
aaa
mov
ss
jae
fistl
movsl
or
or
add
test
lods
dec
fnsave
mov
inc
subb
push
scas
lds
or
sub
movsl
mov
cmc
clc
sub
xor
leave
pop
xchg
xchg
mov
popf
adc
ljmp
mov
push
xchg
loope
jae
xor
adc
dec
jo
lea
xchg
lods
fadds
add
xchg
cmp
xchg
dec
loope
cs
lods
sti
jbe
mov
icebp
or
mov
bound
and
and
cmpsb
adc
xchg
dec
in
nop
mov
cmpl
mov
stos
push
int3
rcrl
ljmp
inc
cmc
lock
adc
dec
scas
popf
sbb
sbb
or
test
xor
fsubrp
int
sarb
xlat
xchg
lods
out
ss
std
test
push
jl
movb
pushf
cmc
cmpsl
ret
fsts
ss
fcoms
and
ficoml
mov
push
xchg
stc
hlt
mov
dec
jp
ret
mov
ljmp
stos
and
push
jecxz
sbb
jbe
fidivs
add
sbb
test
call
jmp
out
sti
sarl
pop
and
negl
mov
add
jle
repnz
mov
insl
je
roll
mov
cmc
and
inc
mov
inc
xor
ss
aaa
fs
div
sbb
and
les
mov
fnclex
lret
inc
adc
mov
lahf
adc
jge
ret
test
aad
pusha
adc
loop
xor
sub
mov
xor
jbe
pop
fdivrs
pop
push
popa
arpl
cwtl
test
push
sbb
adc
sbb
jne
lcall
and
push
fmul
testb
xor
icebp
xchg
loop
push
and
push
and
data16
out
orb
xchg
xor
xchg
mov
cmp
ljmp
jg
fistpl
cmc
jno
jp
test
int
jmp
pop
jb
lret
cmp
mov
inc
mov
sbb
push
in
call
cmp
imul
jecxz
clc
adc
repnz
sub
in
jecxz
rclb
jecxz
mov
loopne
pop
dec
fldenv
or
push
adc
xchg
cmp
in
aad
movb
pop
push
or
xchg
aad
cmp
push
gs
out
jge
cli
test
mov
or
addr16
into
cmp
pusha
push
dec
fisubl
jo
sahf
or
xor
popa
jnp
inc
lahf
sub
ret
cmp
or
inc
mov
mov
dec
aas
sub
push
aad
fsubs
or
push
cs
add
dec
in
insl
pop
dec
ret
mov
add
in
dec
shr
subb
subps
jle
into
hlt
ret
mov
jo
dec
push
data16
int3
sbb
cmpsb
movsl
aad
popa
pop
jae
es
xor
push
and
or
sbb
and
int3
sub
test
mov
cmp
xor
shlb
sbb
sti
mov
mov
in
add
adc
push
sahf
mov
jmp
inc
in
rorb
jmp
jo
sbb
scas
loopne
push
les
inc
frstor
push
repnz
aad
mov
lret
in
pop
jnp
xor
jecxz
int
loop
pop
pop
daa
mov
add
xchg
xchg
cmc
and
pop
stc
ds
mov
inc
or
mov
mov
fadds
xchg
add
popa
push
push
sub
dec
pop
sbb
add
sbbb
pop
loop
andb
movsl
push
sub
dec
jg
lds
sub
hlt
ds
xchg
mov
sub
xchg
les
mov
out
xlat
filds
jecxz
cmc
ret
fldenv
addr16
dec
push
adc
push
push
outsb
mov
adcb
pop
mov
dec
test
out
sahf
inc
pop
mov
pusha
add
leave
pusha
repz
dec
dec
cmpsb
push
rcr
jmp
mov
cltd
dec
lcall
xchg
call
sub
push
int
out
pop
dec
fbld
sub
push
stc
lret
sbb
mov
clc
jmp
cmpsl
stc
or
xchg
insb
cmc
shlb
mov
inc
xor
inc
in
int
adc
jae
jno
fidivrl
ja
jmp
or
xchg
std
inc
or
enter
and
pop
push
and
xchg
sub
cltd
test
pop
and
fucom
leave
hlt
sbb
mov
inc
push
out
enter
movzbl
inc
mov
xor
test
pop
mov
mov
fwait
mov
test
popf
fs
fcoms
hlt
cmp
aad
imul
cmc
cmp
daa
int
mov
jmp
push
lea
add
ja
arpl
inc
pop
pushf
aas
mov
push
lret
hlt
inc
pop
jbe
int3
push
sbb
mov
ja
jl
jae
sub
test
lahf
sub
lcall
jp
xor
and
movsb
fs
insl
sti
fwait
push
movsl
add
aam
out
add
add
movsl
xor
ja
in
inc
push
and
cmovne
sbb
xor
lds
dec
call
mov
jne,pn
lcall
sti
inc
test
mov
add
adc
jg
setl
jp
push
adc
je
pop
xchg
into
arpl
in
test
and
mov
rorb
pushf
clc
xor
and
jb
outsl
shl
ja
lea
xor
jae
das
mov
mov
xor
mov
lock
lret
sbb
or
mov
sub
inc
mov
fists
and
into
add
aam
test
and
out
shll
int
mov
xchg
nop
addr16
xchg
fst
imul
out
xchg
call
pop
mov
int3
add
inc
out
adc
or
test
push
add
mov
fs
inc
mov
ret
push
cwtl
dec
pop
push
shr
push
pusha
xorb
lock
add
jo
dec
fsubr
dec
lcall
popf
push
cwtl
int
cmp
cmp
adc
aad
test
or
ret
lock
cmp
ret
dec
imul
pop
mov
mov
xchg
cwtl
mov
push
std
fwait
jne
mov
sub
push
sub
mov
sti
cmp
and
xor
inc
xor
push
andl
ja
lods
fbstp
dec
and
stos
lret
jne
mov
iret
mov
mov
sbb
and
shll
cwtl
icebp
mov
pop
push
cmp
shll
in
sbb
mov
add
mov
jle
jo
mov
movsl
lods
cmc
and
pop
fwait
je
mov
mov
inc
inc
jmp
loopne
dec
jmp
sub
cs
mov
rorl
movsl
sbb
testl
mov
mov
out
adc
andb
add
das
aam
jae
jl
cbtw
push
aad
adc
inc
xchg
xchg
rcl
aaa
cmpsb
jae
jns
mov
mov
sub
lcall
stos
mov
test
in
iret
and
inc
mov
cs
sub
sbb
iret
lock
and
je
mov
xchg
adc
bswap
sub
push
rclb
cmp
pop
add
insb
pop
pop
dec
ret
in
adc
mov
mov
xchg
push
add
or
loopne
andb
xchg
jno
xlat
das
fistl
shrb
iret
fbstp
xor
add
sub
add
daa
out
daa
mov
mov
sbb
inc
inc
add
lods
sub
push
xchg
add
jge
jnp
xor
adc
push
mov
inc
subl
push
daa
or
sbb
xchg
mov
fildll
test
stc
loope
xor
mov
mov
inc
mov
ret
and
shll
rcll
ja
xchg
xor
cmp
jl
imul
hlt
in
dec
push
outsl
je
xor
adc
outsl
and
mov
aaa
cli
scas
sarb
mov
repnz
pop
mov
adc
jl
cmp
add
inc
or
pop
jno
out
mov
mov
mov
mov
dec
notl
mov
addb
enter
lret
push
fdivs
sub
je
fbld
mov
out
xchg
xchg
pusha
mulb
push
sub
mov
mov
es
inc
in
ret
xchg
xchg
pusha
xor
ss
mov
in
mov
dec
mov
mov
imul
mov
das
or
mov
add
sbb
sti
mov
push
lock
imul
add
sahf
dec
adc
sub
pop
das
dec
scas
jnp
fbstp
jo
mov
xchg
xor
shr
push
add
or
push
and
pop
inc
push
pop
insl
fildl
push
outsl
insb
jnp
cmp
xchg
mov
data16
xchg
aaa
cs
or
mov
mull
mov
js
xor
push
popa
fwait
mov
mov
pushf
rcrb
inc
inc
mov
mov
insl
dec
jbe
fsubrs
jl
mov
int3
inc
in
and
pop
imul
cld
jle
mov
stos
test
outsl
pusha
inc
enter
stos
dec
jo
hlt
roll
push
adc
dec
arpl
imul
fs
cmpsl
cld
push
in
daa
sbb
and
std
mov
scas
out
inc
je
imulb
or
sub
fisubs
pop
int3
rol
int3
imull
sahf
add
and
in
sbb
jb
xor
lds
cltd
fwait
or
std
lahf
xor
arpl
stos
out
fimull
push
fisttps
dec
pop
int3
push
pop
mov
sbb
in
push
iret
mull
jmp
sub
aad
mov
lods
and
push
sbb
mov
mov
mov
arpl
sbb
lret
mov
iret
dec
sbb
add
jg
xchg
push
sub
pop
nop
sub
sbb
leave
out
sbb
xor
pop
call
dec
in
dec
or
call
outsb
xchg
push
pop
cmp
xor
ret
push
fbld
xlat
lahf
jno
inc
fs
add
sub
jno
fstps
add
test
mov
sahf
xor
mov
lret
lods
jb
enter
rcll
and
jae
add
adc
mov
clc
lret
fsub
lret
mov
mov
test
sub
out
mov
xchg
jecxz
aam
mov
int
out
or
push
int
dec
insb
aad
cli
lods
imul
inc
pop
sarl
inc
pop
ret
pop
scas
mov
rorb
sbb
daa
sbb
aad
mov
jae
push
inc
adc
test
inc
fcmovbe
movsb
in
test
xorl
sbbb
repz
adc
lock
xchg
testb
roll
jno
loop
mov
mov
popa
jnp
jo
in
jnp
cmc
cwtl
loope
fwait
outsl
sti
cmp
lods
xor
pop
xor
orl
test
add
jae
mov
jmp
jae
xcrypt-cbc
cmpsl
xchg
lock
popf
jno
inc
stos
mov
mov
lahf
pop
mov
inc
add
mov
imulb
pop
lods
or
es
mov
inc
aad
lock
mov
push
cwtl
shrl
or
insb
xor
dec
std
stos
pop
inc
ja
push
dec
scas
add
aam
imul
dec
sub
xor
jmp
repnz
mov
add
xchg
imul
cmp
sbb
cmp
mov
pop
mov
call
int3
mov
out
lods
pop
testb
add
xchg
add
adc
repz
sbb
into
mov
shll
xchg
not
int
in
push
or
dec
movsl
sub
outsl
mov
xor
cmp
xchg
dec
inc
es
lret
lea
inc
stos
inc
mov
lahf
les
and
out
cltd
xchg
popf
inc
fs
lret
jecxz
aam
jne
inc
push
push
mov
enter
and
or
mov
cmpb
sbb
mov
stc
or
xor
stos
pop
fisttps
cmpsl
iret
mov
sbb
mov
add
pop
sub
xor
pop
mov
lods
push
cmp
jp
jb
out
into
dec
iret
ljmp
sub
leave
mov
jnp
push
movsl
jg
imul
jg
movsb
lock
aas
in
leave
xchg
and
fadds
push
sub
sub
and
notb
cmpsl
and
andl
pop
test
cltd
pop
fld
fs
pop
ljmp
sahf
test
lahf
jmp
dec
subl
fldt
outsl
jmp
jns
dec
xchg
jge
mov
inc
outsl
popf
add
add
dec
imul
hlt
adc
popa
test
loopne
sti
lahf
aad
punpcklbw
sub
xchg
imul
push
sub
lahf
lcall
test
and
jg
mov
or
aad
xadd
div
cs
lret
sub
mov
loopne
popa
jmp
or
test
pop
inc
testb
adc
pop
push
adc
lret
and
xor
popl
inc
mov
sbb
inc
negb
ret
mov
sub
lea
cmp
dec
push
add
shlb
or
in
xor
frstor
mov
mov
mov
xchg
xchg
cmp
mov
es
cmp
or
mov
sub
sarb
std
lock
sbb
sub
or
popf
inc
push
mov
std
out
push
faddl
xor
lods
or
pop
loopne
insb
lods
xchg
pop
out
inc
sbb
out
mov
sub
sahf
test
push
push
push
pop
sub
mov
jbe
cld
jp
test
and
xchg
mov
paddd
mov
pop
dec
aad
les
pop
sbb
and
push
sbb
outsl
je
mov
test
rcll
or
rorl
push
push
mov
mov
aad
jno
push
out
mov
std
sub
push
lret
jl
clc
pop
xchg
lahf
mov
pop
adc
pop
ret
jg
sub
add
lret
or
sbb
outsl
bound
sub
out
sbb
mov
popf
jg
push
and
xchg
and
in
aad
rcrl
jno
and
mov
lods
cwtl
mov
mov
sbb
xor
rcrl
lea
add
xchg
imul
int3
inc
ret
mov
int
pop
cmp
push
movsb
pop
ljmp
mov
enter
jb
gs
sbb
mov
xchg
mov
dec
das
adc
loope
jecxz
pushf
mov
pop
rolb
jecxz
mov
pop
cmpsl
sbb
adc
mov
add
jecxz
aas
cmpsl
repz
loopne
ret
mov
lcall
pop
mov
lds
fistps
sbb
and
adc
push
mov
aas
push
xchg
jae
push
movsb
push
rclb
sub
js
push
movsl
jp
push
insb
jmp
xchg
je
mov
ss
mov
jbe
fxch
test
je
hlt
push
fcmovnb
sub
and
ja
pusha
out
in
fs
stc
jge
mov
mov
fists
or
xchg
mov
inc
sarb
adc
clc
pop
mov
dec
inc
shl
push
enter
outsb
and
in
leave
in
ljmp
and
lcall
cmp
movsb
test
mov
cmpxchg
bound
push
add
insb
xor
mov
shrb
xor
mov
aas
or
rorb
inc
imul
sbb
not
dec
mov
mov
arpl
sbb
or
enter
and
inc
sub
insl
pop
gs
sub
ja
lock
outsb
insl
or
xor
rorb
dec
xchg
pop
fcoms
test
lret
dec
pop
mov
jle
cmp
mov
jecxz
add
mov
dec
les
shlb
cmc
stos
sub
loopne
mov
icebp
adc
sub
xchg
sub
inc
or
arpl
or
push
push
addr16
popa
inc
sub
adc
dec
push
cli
lcall
scas
std
ja
push
jne
cmp
sbb
int
cltd
add
jecxz
imul
push
cmc
dec
fwait
jbe
pop
stc
adc
movq
fdivrl
fmuls
xor
xchg
lret
dec
mov
fcomip
je
xchg
pushf
adc
mov
dec
lahf
cwtl
cmpsl
shll
outsl
filds
or
add
ret
insb
cmp
cli
das
stc
xchg
inc
xor
jmp
jl
inc
mov
mov
pop
das
dec
arpl
nop
sarb
fbstp
mov
and
test
jg
push
xchg
int
mov
cmc
cwtl
arpl
add
xchg
sbb
loope,pt
or
cwtl
mov
jl
lods
rorl
cmp
daa
in
fs
mov
mov
repz
lea
dec
adc
inc
cwtl
cmp
in
ljmp
sti
outsb
push
shl
pushf
ret
mov
xor
lret
mov
aas
jmp
stos
sbb
mov
repnz
lret
ret
xchg
mov
jecxz
test
mov
insb
adc
idivb
sar
mov
push
xchg
mov
jae
cmpsl
cmp
cwtl
out
imul
divl
rcll
cmp
mov
ja
push
aas
outsl
stc
sub
in
pop
hlt
jl
fisttpl
xchg
xor
out
mov
sbb
mov
les
insb
push
bound
insl
mov
lcall
pop
jnp
adc
mov
cmc
sub
fcom
lds
psrlw
bswap
xchg
movsb
aad
cmp
add
mov
mov
fsub
inc
add
xlat
adc
xchg
in
add
lods
pop
mov
add
inc
jp
popf
lea
jb
sbb
cli
jnp
fcomp
push
nop
jmp
push
mov
mov
dec
lret
add
cmc
test
xor
mov
js
shl
and
lock
inc
test
push
dec
enter
dec
pop
imul
jns
andl
aaa
lret
adc
cmpsl
aaa
mov
int3
out
fists
sbb
jecxz
or
cmc
mov
es
daa
or
call
push
and
cmpsl
loope
out
push
cli
outsb
push
pop
fldl
gs
xor
mov
push
mov
jns
aas
faddl
push
dec
add
push
shlb
xchg
loop
aam
adc
xor
dec
into
int
push
int
inc
jne
pop
shlb
jg
sbb
inc
mov
mov
mov
das
inc
loope
cs
push
add
mov
sahf
sbb
lret
xor
cmp
jne
jns
and
add
lahf
and
ja
sub
fwait
cs
pop
mov
mov
stos
adc
int
dec
lret
add
xor
xor
fnstsw
jb
xor
sbb
test
mov
xchg
movsb
inc
rcr
fstpt
lcall
insb
lcall
or
push
repz
movsl
push
jg
pop
rcrb
mov
dec
inc
imul
sub
ljmp
mov
cwtl
aam
loopne
lret
inc
aad
dec
add
call
out
inc
shl
imul
sub
jmp
and
mov
out
cld
stc
or
and
and
mov
push
and
clc
sti
in
movsb
or
out
cmc
or
inc
push
fldcw
sub
lcall
push
cltd
push
out
ss
lcall
dec
add
cld
loopne
imul
inc
mov
mov
xor
pop
add
fwait
je
jo
xorl
mov
test
idiv
cmpsl
out
jle
lahf
jmp
adc
movsl
pop
pop
ss
lea
sbb
movl
or
mov
xchg
fwait
ja
jmp
pop
mov
mov
push
das
mov
cmpsb
xchg
icebp
int3
adcb
or
jge
fwait
cs
ds
lcall
cmp
add
sub
scas
scas
mov
fldt
cli
add
or
mov
mov
jge
push
sti
jl
dec
out
mov
push
adc
testb
dec
clc
ficoms
jns
into
cmp
sub
inc
cmp
cmpsl
outsl
ja
addr16
xchg
lret
sbb
mov
xchg
sbb
xchg
leave
xchg
and
pop
add
cmp
adc
push
dec
dec
and
xchg
inc
inc
jno
cli
test
jae
fwait
mov
loope
push
jno
mov
ret
rorb
adc
sbb
jno
lods
sub
lret
stc
das
bndldx
and
jb
xlat
dec
rorl
insb
test
out
or
inc
dec
test
push
xchg
xor
push
addr16
dec
icebp
mov
xlat
lcall
repnz
cmp
jmp
pop
stos
cld
pop
mov
mov
ja
and
jecxz
adc
aam
pop
int3
cld
test
lahf
cmp
inc
mov
sub
add
test
xchg
outsl
push
mov
pop
push
js
mov
fs
cltd
call
adc
dec
sbb
outsb
lea
push
or
daa
jmp
jl
push
cmp
repz
add
flds
das
dec
jmp
test
or
lahf
add
ficoml
pop
imul
cmp
scas
mov
jae
mov
mov
or
xor
loope
jbe
push
dec
add
sub
or
hlt
jp
cmpsl
iret
inc
sub
xorb
stos
adc
xchg
adc
arpl
int
xor
sahf
pop
jp
cs
je
cmc
mov
and
jp
cs
dec
mov
cmp
pop
sbb
outsb
popa
or
jb
lcall
lcall
inc
jbe
cltd
fnstenv
or
dec
pop
in
add
and
pusha
addl
je
mov
clc
inc
adc
lret
jns
inc
les
and
mov
mov
sbb
push
mov
movsb
or
dec
xor
adc
jne
fildl
inc
mov
loope
inc
cmc
fcmovbe
mov
lret
adc
inc
add
fcmovnbe
movsl
ja
or
out
jmp
jg
inc
and
fsts
sbb
loope
idivl
cmpl
jmp
in
aas
add
xor
test
std
lcall
sbb
xor
fldcw
pop
nop
es
daa
cmp
and
mov
lret
stos
and
jno
sub
or
leave
ds
loopne
cmpsl
adc
jnp
xor
loop
fadds
cmp
dec
imull
shrb
inc
pop
mov
ficoms
and
shlb
push
dec
jmp
mov
mov
xor
lods
notl
xor
loopne
mov
fdivrp
jg
push
adc
leavew
mov
mov
jnp
jns
xor
inc
pop
push
and
mov
shrb
aad
xchg
cmp
pushf
or
dec
pusha
mov
sub
cmpsb
adc
adc
jb
inc
and
test
jmp
mov
jge
aam
adc
mov
add
rclb
jge
outsl
and
push
and
in
jae
xor
out
movsb
and
push
test
jle
push
sbb
mov
sbb
aas
add
loop
jnp
sub
ds
cmp
cmpb
xchg
jbe
lret
out
inc
push
rorb
fsts
mov
mov
push
or
sbb
dec
sub
das
pop
and
mov
nop
jle
adc
push
stos
test
pop
loopne
imul
mov
cmpsl
fists
outsb
rclb
cmc
test
inc
leave
mov
push
out
mov
mov
adc
xor
xor
inc
shll
inc
push
andb
mov
add
pop
xchg
mov
mov
fdivr
xor
insb
mov
dec
icebp
outsb
in
push
xor
mov
add
pop
mov
ljmp
pop
rorl
push
xor
cmpsl
loop
ja
mov
mov
cltd
outsb
jns
push
xchg
movsb
fisubs
xadd
test
imul
mov
pop
cmp
jle
push
mov
sbb
divb
lret
sbb
sbb
xchg
push
in
ficoml
and
fiadds
lahf
test
movsl
rdpmc
iret
push
es
pop
lret
mov
jo
xchg
stos
les
cltd
stc
jnp
shlb
jecxz
cmp
test
mov
lock
pop
push
lods
subl
ret
retw
sarl
call
adc
clc
das
mov
and
clc
push
cmp
lea
pop
dec
sbb
and
pusha
sub
mov
jae
adc
scas
and
mov
iret
sbb
jmp
cmp
pop
jle
dec
or
pop
inc
cld
fcom
pop
sub
pop
xchg
ret
sbb
outsl
popf
jl
or
inc
dec
add
jno
or
jg
mov
and
mov
cs
movb
pop
sbbb
mov
popa
retw
fwait
inc
adc
pop
arpl
mov
mov
cmp
pop
cmp
mov
pushf
daa
scas
mov
imul
dec
mov
inc
loop
and
daa
out
mov
in
out
iret
mov
add
xchg
sbb
pop
push
sti
xchg
and
sub
xchg
adc
jo
push
ret
out
push
cltd
int
inc
dec
jno
jne
pop
pop
lcall
std
dec
in
pop
jne
pop
push
into
test
mov
cmp
mov
addr16
or
dec
xchg
lods
sbb
fsubl
or
popf
movsl
outsb
xlat
pop
mov
dec
and
das
fldenv
jle
adc
inc
push
mov
test
shll
push
enter
mov
aad
arpl
ja
adc
js
addb
mov
push
jle
mov
call
scas
add
mov
pop
pushfw
mov
xchg
mov
pop
nop
ds
xor
je
push
xchg
adc
xor
clc
push
push
pop
inc
scas
add
cwtl
imul
ljmp
rorb
arpl
mov
jle
lret
stos
cwtl
mov
sbb
pushf
je
cmpb
ret
fnstsw
cmp
lahf
imul
cmpb
loope
xchg
mov
int
jae
push
mov
pop
sbb
cwtl
test
xorl
flds
xchg
cmp
int3
lods
int
inc
subl
outsl
test
je
pop
push
push
cmp
pop
ljmp
test
mov
push
clc
sbb
setp
fcmovne
test
iret
inc
cmpsl
inc
inc
push
sub
push
cwtl
xlat
in
xchg
and
dec
cmc
or
cmp
cmp
or
ss
mov
mov
aam
lahf
nop
mov
or
out
mov
xchg
jmp
hlt
mov
pop
lods
dec
sbb
push
jno
inc
xlat
xor
popf
out
push
mov
bnd
add
dec
push
jmp
or
stc
mov
movsb
mov
iret
mov
and
and
push
out
fdivrl
or
pusha
lahf
sub
stc
sub
sbb
pop
adc
mov
dec
push
dec
inc
mov
or
arpl
sub
lds
add
int3
and
call
sbb
cmpsl
call
addr16
out
rolb
rorb
repnz
pop
insl
dec
mov
jbe
fwait
popa
cmp
mov
mov
sub
add
cmc
adc
pop
jnp
das
mov
cmp
mov
call
fwait
xchg
jno
xchg
cmpsl
xchg
dec
les
xchg
pop
inc
xlat
xchg
mov
mov
stos
out
in
pop
mov
jp
imul
aad
add
dec
mov
jecxz
push
add
scas
in
int
fcoms
nop
or
test
adc
fsubrs
sbb
call
adc
xor
push
adc
xchg
sub
insl
and
adc
xor
jne
sub
or
or
pop
mov
dec
and
mov
es
call
stc
leave
cmp
fimuls
mov
fidivrs
movsl
or
xchg
xor
and
ds
pusha
aaa
test
xor
cmp
mov
or
jno
mov
mov
ds
lods
push
add
mov
fcmovnbe
cmp
data16
pusha
int3
sbb
pusha
test
push
jno
xchg
daa
and
in
les
mov
add
xchg
movsb
bound
pop
paddsb
xchg
lahf
pop
cmpsb
outsb
pop
jne
jnp
cmp
popf
or
jnp
lcall
mov
in
xchg
inc
test
mov
adc
sub
sbb
fxch
or
into
test
sub
mov
sub
testl
xchg
jbe
popf
or
push
lahf
push
out
push
out
scas
push
pop
push
lret
mov
xchg
xchg
jne
cmp
adc
faddl
dec
xchg
inc
mov
repz
xor
push
sub
data16
ret
cmp
xchg
test
out
xchg
negb
in
mov
pop
pop
dec
sub
xchg
mov
adc
int
xor
pop
out
cli
jbe
aas
shl
jbe
xchg
add
aad
es
sbb
sbb
aas
or
int3
cwtl
popf
call
mov
push
mov
loop
xchg
xchg
lahf
adc
push
lods
pop
lods
cmpsl
sub
xor
filds
xchg
xchg
fidivrs
sbb
mov
sbb
sub
add
gs
and
aad
enter
test
add
bound
or
adc
inc
push
mov
push
adc
pop
cmpsl
lahf
jmp
test
sbb
repz
pop
adc
iret
test
sarl
jbe
pop
outsl
pop
ds
loopne
push
lods
loopne
aam
pop
xor
pop
adc
push
hlt
jecxz
mov
fdivs
dec
xchg
outsl
xchg
sbb
mov
cmp
jb
sub
iret
loope
inc
shrl
sub
lcall
or
add
sahf
inc
testb
inc
mov
arpl
adc
or
xlat
cltd
ret
and
mov
fcoms
push
adc
jbe
shr
jb
push
inc
or
push
enter
mov
cmpsl
or
je
stc
mov
rclb
mov
popf
daa
xchg
and
jo
dec
add
leave
push
loopne
bound
lock
lds
jl
mov
movsb
cli
sub
stc
add
sbb
jo
das
push
cmc
push
adc
in
daa
and
clc
pushf
es
bound
add
mov
aad
cltd
jns
jge
stos
sub
iret
adc
sub
fidivl
test
movsb
push
out
pop
inc
or
xor
push
mov
in
xchg
sub
jl
dec
sub
dec
pop
test
cmpsl
data16
test
in
lcall
sub
add
loope
adc
ficompl
sub
movsl
pop
aaa
push
or
stos
lds
fidivrl
jns
push
mov
arpl
dec
mov
fwait
loopne
cmp
xlat
and
xchg
and
shlb
inc
shl
ret
dec
int
or
popf
ficompl
mov
cmc
xchg
add
dec
lret
aas
les
dec
stc
lock
ds
fstpt
rorl
sub
xor
lcall
push
and
and
int
loope
sbb
testb
adc
addr16
cwtl
mov
leave
and
or
fidivl
xchg
jmp
pop
dec
int
add
and
insb
call
orl
jecxz
rcl
and
mov
mov
scas
test
pop
repnz
jo
pop
push
or
mov
repz
or
mov
sbb
or
mov
or
test
insl
lahf
dec
pop
jl
sbb
stos
popf
fdiv
cmp
sub
into
std
out
sbb
fisttps
xchg
add
leave
pop
add
mov
shr
mov
sub
hlt
jnp
mov
and
test
in
jmp
push
push
push
mov
and
stos
fcomp
mov
push
movsl
lret
cmc
shll
push
shrl
or
xor
mov
mov
and
clc
inc
or
fidivs
mov
cmp
dec
out
xor
gs
and
mov
test
cmp
incl
jge
jne
lret
mov
or
push
movsb
jl
add
mov
lds
adc
ds
clc
xchg
leave
daa
push
sbb
pop
xchg
into
cmpsl
sub
fidivrl
in
jmp
les
xor
roll
jae
fcompl
inc
pop
ljmp
push
xchg
push
out
push
and
inc
xchg
insl
xchg
loop
cmp
pop
inc
lds
rcll
fstpt
das
test
scas
sub
cmp
adc
fs
movsl
movsl
mov
fldl2e
imul
jb
push
pushf
or
adc
in
pop
je
sbb
mov
outsl
sbb
pop
jo
adc
sarl
jmp
iret
push
jle
adc
mov
out
adc
push
and
mov
mov
mov
mov
and
lods
mov
enter
fldcw
cmp
test
lods
sti
repz
jecxz
mov
dec
dec
inc
movsb
or
xor
scas
push
sub
adc
lock
popa
mov
es
stos
xchg
jecxz
lea
adcb
js
mov
in
cmp
out
mov
pop
out
je
test
aaa
loop
adc
out
xchg
jg
aad
xchg
jb
cmp
cmc
jb
loopne
fstpl
inc
push
xlat
and
ljmp
jl
cmp
daa
out
iret
and
inc
sub
pop
cmpl
mov
cmc
jecxz
data16
xor
popa
shl
fwait
outsb
sub
dec
add
fldz
xchg
js
mov
test
or
outsl
sub
inc
mov
mov
mov
cmpl
in
adcb
adc
and
ss
imul
jecxz
dec
lock
aad
jl
sub
pop
pop
xor
or
push
and
mov
mov
fsubrs
fucom
test
jnp
xchg
insb
sub
and
xcrypt-ctr
cmpsl
pop
lea
mov
stc
lods
sub
xchg
xor
popl
cmpsl
rorb
and
adc
push
mov
inc
ja
mov
jne
leave
ss
data16
cmp
cmp
mov
xchg
or
out
mov
orl
jecxz
insl
arpl
fsubrs
out
addl
mov
aas
pusha
or
mov
lods
jo
push
scas
inc
insl
or
mov
push
fadd
out
mov
loop
dec
push
xchg
in
daa
mov
push
movsl
add
les
outsl
fstps
and
lahf
ljmp
sahf
divb
mov
fcmovu
daa
loopne
insl
mov
movsb
mov
sbb
scas
jns
lea
or
cs
aaa
push
lahf
adc
call
xchg
andl
push
xchg
pop
add
adc
jo
je
xchg
dec
ss
fdivrl
cli
xor
aad
dec
or
test
jp
jns
je
and
mov
lods
jo
movl
and
push
or
fsubp
mov
jp
movsb
cmp
sahf
cmpb
fcmovne
add
adc
aaa
adc
pop
inc
shlb
pop
ficoml
in
push
jo
cltd
jge
mov
and
stos
repz
pusha
mov
push
arpl
icebp
xor
dec
dec
fidivs
inc
and
subb
inc
ror
mov
je
lock
imul
aad
mov
cli
out
sbb
mov
int3
ja
lcall
or
mov
push
mov
ficompl
addl
or
jmp
out
adc
sub
or
mov
sub
mov
dec
push
add
inc
stc
sar
push
mov
or
xchg
lods
and
mov
sbb
cmc
and
sbb
xor
imul
xchg
ds
fwait
bound
jle
cld
into
shrb
push
or
add
mov
inc
mov
ss
sub
andl
inc
adc
mov
fmul
or
jo
push
dec
sti
loope
pop
fs
mov
cwtl
popf
adc
in
xchg
sbb
pop
mov
jae
and
xor
push
push
fwait
call
mov
mulb
aaa
mov
adc
rclb
pop
mov
lret
inc
icebp
adc
out
nop
push
push
negb
dec
or
pop
ljmp
push
mov
movsl
repz
aad
jnp
jo
mov
loope
bound
dec
mov
jp
aam
into
push
hlt
outsb
and
sbb
xor
jae
shll
mov
test
movsl
dec
insb
fs
dec
jp
out
sbb
int
mov
push
jg
int3
repz
jp
aad
cmp
sahf
xor
xchg
sub
imul
mov
adcl
insb
frstor
stos
fists
sub
repz
out
and
push
test
dec
mov
pop
mov
in
mov
jmp
daa
fidivs
cmp
movsl
lret
jnp
sub
push
and
loope
sbb
jl
sub
push
cltd
loopne
test
dec
int3
shll
ficoms
or
adc
sub
dec
bound
push
pop
add
rcr
mov
add
roll
pop
xchg
ss
xor
gs
pop
test
out
fwait
fs
inc
insb
outsl
mov
push
fwait
xchg
lret
test
inc
mov
std
out
aam
rcrb
or
xchg
sub
test
xchg
bswap
imulb
test
or
lret
push
sarb
ret
pop
pusha
movsl
push
push
xor
aam
loopne
in
jae
rcr
sbb
mov
lods
loop
pushf
cmp
dec
cmp
stc
xlat
cwtl
adc
call
mov
or
xchg
shll
add
pop
stos
das
mov
clc
in
stos
push
jmp
jno
pop
je
sti
pop
out
pop
loope
sti
ret
fwait
int
sbb
fnstenv
mov
mov
jg
fnstenv
fwait
and
push
mov
das
ret
push
into
mov
out
nop
movsl
mov
ljmp
xor
push
jne
sarl
push
lods
inc
jbe
mov
loop
xor
lds
push
mov
ffree
scas
lahf
pop
mov
xchg
je
sbb
jg
mov
pop
push
js
aad
cs
mov
dec
jns
pop
xchg
inc
mov
insl
jmp
mov
test
mov
mov
mov
jmp
out
gs
cmp
pop
fiadds
in
jns
icebp
js
adc
in
subb
dec
push
lahf
stc
testl
fcmovbe
or
aam
fistl
mov
cmpsl
push
cmp
cs
sub
xor
movzbl
push
add
mov
sbb
gs
pop
in
add
jp
adc
icebp
pushf
rcrl
xchg
xchg
loopne
repz
pushf
lods
sbb
lea
mov
fsubrl
jg
and
sbb
jnp
lret
lock
mov
dec
out
pop
jb
and
push
cmp
adc
jecxz
and
xchg
out
mov
and
inc
adc
cmpsb
ret
nop
pop
sub
je
push
loope
xor
and
add
xlat
icebp
adc
fs
bound
aaa
adcl
pop
jp
movsl
data16
pop
push
insl
clc
inc
fcoms
stc
sub
and
jmp
out
aad
fisubl
std
pop
push
out
add
cmp
pop
xchg
scas
xor
bound
push
sti
into
je
inc
aam
fstp
mov
mov
cmp
lods
add
sbb
loope
daa
jg
mov
mov
push
cmp
push
sahf
pop
xor
and
xchg
jae
aas
xchg
divl
fsts
fcmovnu
outsl
lods
or
pop
dec
sub
dec
push
sub
cli
loop
sub
mov
adc
popa
int
lds
lods
jne
mov
mov
mov
cmpsl
xchg
or
dec
insb
inc
dec
jno
stc
adc
cli
aam
ret
jbe
inc
stc
imul
mov
cmp
sbb
lahf
adc
push
dec
frstor
cmpsl
mov
test
shlb
inc
mov
int
int3
and
rcr
ss
or
repnz
mov
popl
pop
fld
xchg
js
jbe
cmp
dec
jmp
cmpsb
call
mov
in
cltd
in
and
dec
add
loopne
adc
and
into
lahf
inc
dec
mov
xchg
int3
xchg
sbb
icebp
jo,pt
rclb
sarb
imul
sbb
and
hlt
inc
sti
mov
pop
rcrb
add
pop
in
jmp
in
pusha
xor
imul
aaa
push
aaa
push
or
pop
push
stos
lret
dec
repnz
push
cli
mov
pushf
test
and
sbb
lods
cmp
shll
sbb
lods
inc
out
and
insb
in
in
mov
scas
or
push
icebp
mov
out
adc
sub
cmp
rorl
sub
loope
iret
bound
fmuls
aas
jge
mov
aam
push
test
popf
sbb
jmp
scas
shlb
sub
push
int3
aad
pop
jno
stos
cltd
nop
inc
lods
and
in
testl
lods
mov
pop
lret
in
lcall
dec
cmp
cmpsb
ja
push
jbe
mov
dec
xor
sahf
mov
adcb
and
sti
hlt
sbb
jmp
fdivl
pop
push
fcompl
jp
es
sbb
cmpsl
mov
daa
jle
fmuls
loopne
cmc
movups
or
add
and
outsb
out
inc
sub
cmp
push
add
jae
push
cld
cld
cmpsl
inc
xor
mov
mov
sub
and
je
mov
inc
inc
adc
inc
sbb
test
rorl
into
fildl
and
jbe
mov
orl
jge
cs
lods
adc
lret
push
sub
adc
icebp
or
cld
aaa
dec
divl
mov
fisttpl
ds
or
and
cmp
xchg
mov
arpl
or
mov
fldl
inc
dec
mov
cmpb
jg
bound
cltd
sbb
es
insl
scas
leave
push
lods
fcomps
sbb
vmulps
add
nop
inc
inc
lock
icebp
ret
xchg
lock
mov
arpl
es
das
push
dec
inc
es
or
stos
cli
outsb
add
testb
pusha
lret
dec
mov
xchg
mov
cmpsb
cmpl
add
dec
out
xchg
mov
idivl
jle
pop
and
shrb
test
mov
sbb
out
xchg
push
in
jb
test
dec
or
adc
mov
sbb
in
sub
push
lret
loope
cli
ret
mov
testb
or
cmp
xabort
arpl
je
je
mov
adc
cwtl
or
cmp
dec
cwtl
inc
mov
inc
sti
lods
lret
jns
testb
test
lret
xor
inc
sub
adc
jge
and
leave
mov
pop
xor
popl
mov
mov
add
std
jbe
addr16
xor
roll
pop
mov
sub
pop
pop
jo
cs
mov
cmpb
out
push
pop
cltd
loop
stc
push
ljmp
push
out
xchg
jae
jecxz
lods
fildll
imul
mov
outsl
jecxz
int
sbbl
outsb
mov
int
pop
stc
mov
rolb
lods
jle
loop
jnp
iret
shrl
lahf
fs
adcl
ds
or
mov
scas
frstor
cmpsb
mov
dec
test
idiv
roll
shl
call
fnstsw
fistpll
cmp
mov
das
cli
mov
rorb
repz
xchg
and
mov
mov
pop
in
mov
call
mov
out
and
not
imul
xlat
inc
inc
test
repz
in
ror
ficoms
mov
and
cmpsb
adc
fcmovne
xlat
das
mov
sbb
add
mov
push
testb
subl
inc
into
clc
pop
fdivrl
inc
out
xor
xchg
lret
iret
int
fiaddl
xchg
sbb
repz
inc
inc
vdivps
mov
arpl
adc
mov
aaa
mov
jmp
sti
scas
adc
lcall
adc
inc
pop
adc
fisttpll
clc
cwtl
fstpt
mov
inc
xchg
mov
mov
enter
mov
gs
mov
insl
bound
or
push
push
mov
mov
inc
mov
cltd
out
loop
and
sub
test
mov
and
icebp
push
xlat
add
daa
out
test
out
insl
out
jl
popf
cmp
jle
ss
adc
sub
cmp
movsb
and
ja
fsubs
cmp
lds
dec
jb
mov
jmp
cmp
out
sub
cmp
and
jno
enter
or
mov
jmp
mov
sbb
push
sub
hlt
outsb
mov
mov
xchg
in
mov
in
mov
lea
in
and
cmp
test
fdiv
lds
jns
cmp
cmc
sub
mov
dec
iret
scas
add
adcl
sbb
mov
and
data16
xchg
fcomps
inc
push
cmp
mov
aaa
jl
imul
pop
sub
sbb
xorb
rcr
inc
mov
sahf
jb
push
dec
xchg
nop
arpl
jbe
xor
inc
les
rcll
hlt
lea
insb
scas
adc
loopne
push
inc
push
cmp
dec
pop
fwait
pop
xor
sqrtps
pop
jecxz
iret
test
xor
fs
popa
push
push
xchg
pop
lock
jge
ret
test
wrmsr
lock
inc
loope
mov
dec
mov
xchg
cmc
fldcw
mov
rolb
jae
in
pop
or
fistpll
sbb
inc
add
cmp
adc
mov
pop
movsb
sbb
int
mov
mov
mov
jl
arpl
mov
xchg
mov
sbb
lret
notl
ds
loop
push
lahf
callw
add
adc
fs
push
and
or
dec
xor
lods
ss
loope
lds
bound
sbb
xchg
sbb
inc
cmp
nop
test
incb
js
mov
mov
and
aam
outsl
mov
mov
adc
or
out
push
add
mov
or
loopne
adc
pop
jno
out
rsqrtps
pushf
outsl
pop
lods
mov
dec
imul
pop
xor
es
pop
insl
rcr
es
jb
leave
ljmp
cmpsb
in
push
scas
sbb
mov
and
cmpsl
divl
rcll
xor
push
mov
xor
xchg
gs
pop
in
cmp
sti
mov
xlat
notb
in
or
xchg
movsb
movl
add
add
pop
lock
pop
adc
dec
ret
xchg
inc
test
gs
fbld
dec
in
pop
pop
outsb
bnd
lds
add
fsubp
iret
lods
push
pop
cmp
cld
arpl
mov
mov
je
ds
pop
mov
testl
push
cltd
xorl
bswap
pushf
sbb
loopne
inc
cwtl
mov
aad
cld
or
mov
out
xor
xor
je
push
test
push
pop
push
xchg
cmp
jbe
in
inc
das
mov
sti
cltd
shll
adc
cmovle
arpl
lcall
mov
cli
push
xor
in
lahf
pop
out
inc
lret
jl
pushf
jl
decl
test
inc
pop
loopne
dec
adc
lds
mov
jmp
or
sbb
and
and
ja
ret
notb
add
rorl
jmp
aam
pop
sbb
mov
clc
add
sub
push
xor
adc
push
imul
adc
or
test
sub
std
in
leave
push
shlb
push
aas
ds
paddsw
movsl
mov
cli
sarl
psubq
mov
rol
xchg
push
mov
xor
adc
roll
pop
movsb
aaa
les
lcall
push
push
or
push
and
add
jp
aad
add
cmpsl
jl
enter
not
cwtl
xchg
mov
dec
lds
cld
and
bswap
mov
or
push
add
sbb
scas
in
std
or
leave
sub
push
jl
outsb
xor
ss
push
outsb
out
cld
pop
gs
mov
in
rolb
decl
clc
jbe
sub
push
cmpsb
aam
and
mov
xor
adc
adc
adc
inc
sbb
jnp
call
jbe
or
ds
bndldx
xor
xchg
jnp
stos
and
xchg
lock
pushf
mov
dec
jmp
xchg
repnz
inc
outsl
dec
mov
aam
in
lcall
jbe
cmp
dec
mov
mov
scas
inc
sub
and
jp
mov
dec
and
and
das
sbb
stc
addr16
pop
addb
mov
stos
jno
pop
mov
call
sbb
inc
xor
jno
ret
mov
push
clc
loopne
out
cmpl
mov
cmpsb
ja
repz
jne
xor
iret
lds
popf
inc
outsb
xchg
cmp
pop
push
addr16
lds
inc
negl
inc
push
nop
out
flds
mov
iret
xor
test
mov
repnz
pop
xchg
cltd
sarb
add
popa
negb
mov
sbb
pusha
dec
inc
sarl
leave
mov
loop
xor
xchg
jbe
dec
scas
mov
rcll
roll
dec
das
incl
xor
into
das
and
push
xchg
or
popf
test
andb
sahf
dec
xchg
in
in
mov
adc
xor
mov
int3
sub
in
or
xchg
divl
movsb
jno
pop
fs
add
gs
shrb
mov
out
popf
test
mov
movsb
dec
rcr
sub
pusha
inc
out
daa
mov
stc
leave
inc
pop
cs
scas
scas
mov
ret
push
ret
xor
cli
jbe
cld
cld
inc
sahf
cmp
test
mov
mov
push
dec
jb
ja
addr16
xor
not
jae
lock
daa
xchg
stos
in
dec
jae
sub
push
pop
out
outsl
mov
xchg
sbb
or
and
stos
or
mov
dec
push
bound
pop
outsb
xchg
scas
xor
and
lds
sahf
xor
push
mov
adc
dec
push
in
dec
adc
imul
pop
cmp
xchg
andb
adc
cmp
cmpl
sub
mov
stos
fisttpl
movsb
xor
es
mov
adc
cli
sbb
andps
cwtl
or
fsts
push
daa
mov
fidivrs
inc
ljmp
lock
mov
mov
dec
outsb
fwait
pop
lods
or
adc
subb
push
cld
mov
sbb
dec
mov
xchg
adc
shr
and
jg
mov
rorb
mov
pop
fsubrs
mov
pop
shrb
lret
add
loope
jle
mov
cmp
dec
jne
pop
pop
inc
in
fcmovbe
mov
mov
insb
add
cmpsb
cltd
pop
notl
pop
inc
les
and
jl
inc
ja
enter
popa
and
jmp
adc
rcrb
add
aad
cli
gs
std
cmp
adc
ficoml
xchg
andnps
ljmp
aas
or
dec
imul
xchg
mul
lea
inc
jne
xlat
cmpsl
aad
pop
aam
add
test
cmpsl
call
sbb
iret
lret
push
mov
pop
test
pushf
ret
insb
aad
or
subps
xor
std
dec
mov
jbe
xor
and
xchg
and
and
mov
in
push
and
xor
or
jecxz
call
push
orl
test
call
and
inc
cltd
cld
push
dec
in
sbb
cmpsl
inc
push
push
shl
cmc
or
adc
imul
outsl
push
or
in
sbb
cwtl
out
push
xchg
mov
mov
cmp
lea
inc
movsl
fwait
popf
push
cmp
test
dec
fcompl
xor
add
fstps
loop
jge
xchg
mov
xchg
mov
imul
cmp
or
sbb
and
xchg
test
rol
mov
xchg
aas
js
imul
mov
cmp
shrl
cmpsb
mov
mov
pop
push
in
mov
cmp
dec
lock
or
and
push
ficompl
dec
push
subb
mov
mov
pop
and
out
fstp
shrl
push
jns
fnstcw
les
dec
int3
and
mov
and
data16
xchg
pop
enter
xor
aas
inc
sbb
imul
adc
fsubp
xor
sbb
xchg
imul
shlb
hlt
sub
clc
dec
lahf
dec
fidivl
lret
repz
outsl
imul
xor
frstor
cmpsb
clc
sbb
ss
sub
xchg
movsb
imul
mov
push
cmp
mov
loopne
add
insb
in
adc
and
bound
je
mov
push
sbb
dec
or
or
loopne
or
sbb
in
sahf
xor
xlat
pop
jmp
loopne
insl
movsl
adc
fisttpl
xchg
cmpsb
sub
sub
mov
sbb
adc
add
dec
jl
jecxz
pop
cmc
jecxz
subb
or
sbb
rclb
arpl
test
ss
jb
jl
jl
stos
xchg
out
push
lods
test
xor
loope
jecxz
inc
xor
cwtl
roll
fsubr
sbb
nop
pop
mov
push
xchg
fstpt
sbb
push
mov
push
movsl
mov
imul
pushf
out
and
pop
lea
push
dec
mov
jns
and
or
sub
je
mov
pop
cmc
and
cmp
testl
jmp
in
sahf
sub
outsb
dec
gs
lods
ror
push
xchg
es
and
out
insl
xchg
pop
mov
xor
lds
xor
fwait
lret
dec
test
aaa
cld
cld
mulb
dec
mov
sahf
jo
shlb
orl
scas
cs
clc
in
scas
xorl
sbb
inc
mov
lcall
loop
decb
fcompl
faddp
cmp
out
pop
insb
aad
fsubp
cmp
add
xchg
sbb
je
jecxz
stc
aas
sub
jmp
or
das
pusha
mov
mov
movsl
adc
repnz
pushf
dec
xor
inc
lret
jae
push
mov
cs
pop
push
push
add
push
adc
mov
xor
inc
adc
sub
decb
mov
mov
xchg
out
xchg
mov
das
dec
stos
xchg
cmp
loopne
or
aad
jnp
sti
and
lea
lock
mov
add
leave
xor
xor
dec
jg
jnp
mov
adc
arpl
and
repz
inc
pusha
out
mov
out
icebp
mov
leave
into
cmpsb
pop
loopne
fstpl
adc
pop
stos
cmp
cmp
scas
and
scas
xor
shrb
aam
shrb
mov
sbb
outsb
xlat
repz
loope
sbb
aaa
cld
pop
fildll
popf
cmp
mov
popf
sub
xchg
xor
fisttpl
ja
stos
jno
or
cwtl
cmpsl
mov
xlat
addr16
out
loop
cld
addr16
jb
out
jne
jo
addr16
sub
in
ss
push
push
jge
adc
mov
dec
inc
nop
pop
xchg
stos
pop
add
cmp
int3
int3
inc
fsub
rolb
dec
into
arpl
fdivl
dec
sti
lea
cmp
dec
adc
push
jbe
push
popa
mov
shll
inc
nop
ret
and
adc
fbld
cli
subl
fsubs
fprem
cmc
push
lods
xchg
pop
push
xchg
push
sbb
addl
add
sbb
mov
lock
cmp
or
dec
and
pop
nop
int
push
and
cmpsl
xorb
and
cmpsb
lds
add
mov
mov
push
jmp
cs
cmpl
xchg
fs
fwait
sbb
mov
fwait
out
xor
loop
jno
shl
jg
shll
in
cmp
cmp
and
dec
gs
pop
lea
cmpsb
xor
push
lods
jnp
sbb
xor
or
stc
data16
int3
pop
inc
imul
out
stos
cmpb
enter
out
and
or
repz
int3
test
and
fldcw
xlat
mov
push
aad
into
sub
jecxz
ss
dec
adcl
outsb
loopne
mov
js
xchg
jmp
test
push
inc
scas
mov
negb
jb
mov
inc
mov
inc
mov
mov
lods
inc
gs
or
push
insb
sub
xor
xor
add
int3
outsb
stos
xchg
mov
sbb
in
mov
inc
inc
sbb
int
notb
jns
fcoms
jmp
jbe,pt
shlb
lock
mov
jmp
loopne
pop
jae
mov
es
lock
and
inc
int
fistps
cmp
incb
sbb
fcmovu
fucomip
in
xchg
push
xchg
clc
push
pop
cmp
pop
pushf
sti
push
popf
cmpsl
adcb
add
divl
enter
sub
cmp
or
std
and
sbb
cltd
pop
aad
push
sarl
mov
cmc
dec
jne
sbb
int
sbb
repz
pop
in
nop
mov
jl
pusha
or
xchg
outsb
push
popa
inc
cld
std
std
test
int3
mov
push
mov
push
dec
stc
inc
add
std
ret
nopl
out
dec
jno
sbb
jp
push
fisttps
and
lahf
xchg
or
xlat
push
fistl
xchg
push
or
xchg
ds
sti
imul
sub
inc
iret
cmp
push
fldl
je
push
pop
fnstcw
sub
leave
and
sahf
push
sub
fidivrs
ds
xchg
ret
incb
jp
in
xor
sub
test
out
into
fwait
mov
xor
into
pusha
mov
aad
fwait
les
jo
pushf
icebp
or
test
cld
pushf
pusha
arpl
add
and
popf
lcall
lds
adc
mov
ficompl
mov
push
xor
jle
sub
das
push
es
jne
imul
adc
adcl
xorl
cmp
push
inc
movsl
jbe
adc
jmp
out
data16
pop
cmp
pop
in
or
xor
dec
ret
addr16
outsb
dec
shll
xor
mov
sub
and
or
mov
or
mov
jns
push
inc
and
add
cltd
push
sbb
test
push
packssdw
lds
xor
repnz
daa
adc
repz
adc
inc
dec
push
mov
aas
movsl
push
mov
inc
adcb
push
inc
and
or
bound
popa
inc
xchg
or
pop
jmp
pop
outsb
out
fisubrl
fdiv
inc
pop
sub
sub
dec
push
or
loopne
add
icebp
nop
xor
pop
dec
sbb
lock
adc
mov
adc
or
pop
adc
testb
fs
cld
jb
sbb
call
lcall
jns
gs
jmp
fmull
ss
cmpsb
add
sahf
stos
cmp
lods
shl
nop
xchg
push
and
ds
cmp
les
out
jmp
je
stos
mov
pushw
xchg
dec
mov
out
neg
shlb
pop
mov
and
xchg
js
fstpl
bound
xor
out
jg
rcl
iret
flds
inc
xchg
cmpsb
aaa
aam
or
ss
rorl
mov
push
and
dec
scas
jle
push
insl
ficoml
push
push
inc
sbb
aad
pop
add
push
cs
fsts
sbb
imul
call
inc
mov
or
bnd
icebp
mov
sahf
std
sub
dec
stc
icebp
es
adc
sub
insl
cmp
out
rorl
cmp
jp
pop
lods
xchg
mov
test
dec
out
sub
sbb
adc
sti
add
push
inc
jae
rcrb
rorb
xchg
iret
sti
sbb
lods
icebp
push
aad
popa
cmp
and
mov
push
cli
arpl
shlb
mov
fbld
dec
leave
scas
dec
adc
adc
or
adc
ficompl
cwtl
lock
xchg
xchg
fisttps
jg
ds
aas
jb
fwait
ret
fldcw
iret
movl
fwait
mov
xchg
into
enter
dec
dec
push
inc
xor
or
fwait
pop
call
push
test
mov
inc
insl
push
dec
pop
or
sub
je
add
sarb
subb
cld
ret
mov
mov
repnz
mov
dec
inc
bound
roll
inc
jb
inc
rorl
push
xchg
sub
dec
mov
iret
mov
std
and
pop
xchg
popf
xor
push
pusha
mov
pop
jo
shll
adc
sub
fwait
arpl
jge
inc
lahf
int3
leave
jg
adc
mov
mov
lods
scas
pop
ss
mov
fnstenv
sbb
mov
addr16
mov
cmp
push
icebp
sbb
mov
bts
aam
sbb
enter
inc
pop
xchg
sub
sbb
call
xchg
mov
imul
mov
adc
xor
jge
pop
and
mov
test
pop
mov
jo
push
outsb
addr16
xlat
add
mov
mov
test
push
std
or
jecxz
outsb
mov
xchg
xchg
inc
ljmp
jmp
and
add
inc
xlat
mov
mov
pushf
cmpsl
popf
addl
mov
loopne
push
mov
dec
inc
loopne
js
fdivrl
mov
lahf
or
xchg
mov
or
scas
sbbb
or
cmp
aaa
lret
loop
xor
outsl
pop
mov
or
sub
cwtl
arpl
mov
mov
mov
cmp
xor
jge
mov
pop
sbb
push
ja
movsl
jmp
mov
add
jo
mov
push
in
jmp
sbb
incl
dec
or
dec
mov
repnz
in
or
pop
ficomps
adc
dec
xor
lods
shlb
sbb
cmp
or
pop
cmp
gs
push
xor
cli
adc
pop
or
into
adc
sbb
mov
push
sbb
cmpsb
nop
inc
std
inc
iret
add
and
or
lahf
test
push
ret
pop
add
stos
inc
adc
std
xchg
jmp
shll
mov
mov
sub
xor
je
sub
push
mov
scas
xlat
ja
mov
mulb
loope
addr16
clc
push
inc
bound
mov
or
inc
mov
aaa
adc
pop
lret
mov
int3
out
scas
inc
push
mov
mov
mov
fisttpll
mov
xor
jg
mov
shll
loop
mov
push
jno
push
fs
jb,pn
mov
dec
cmpsl
dec
sbb
sbb
sub
pop
push
js
mov
lea
fldcw
push
add
cltd
jge
es
add
mov
push
pop
mov
push
mov
clc
data16
in
adcb
cmp
pusha
call
cld
and
cltd
enter
inc
or
sub
ss
xchg
mov
lahf
cmpsl
cmpsb
addb
gs
rolb
cmpb
jno
cmc
cmp
cld
inc
hlt
sbb
std
adc
mov
xor
push
sbb
xor
pushf
arpl
jne
push
cmpxchg
dec
outsl
dec
mov
insl
repnz
fisttpll
pop
mov
pusha
icebp
cld
out
dec
mov
xchg
add
idivl
dec
jnp
out
adc
and
shrb
mov
xchg
adc
mov
daa
fidivl
mov
dec
imul
imul
mov
xchg
int
mov
mov
cwtl
jl
mov
jmp
xchg
xchg
xchg
adc
lods
ss
in
in
pop
dec
shl
xchg
es
inc
mov
cmp
mov
sbb
lods
push
sbb
mov
scas
scas
adc
mov
test
mov
je
js
xlat
cwtl
icebp
jge
stos
lea
imul
jae
inc
shl
aas
xchg
js
and
add
inc
jle
cmpsb
sub
lea
jno
lea
mov
sbb
fnstcw
adc
and
int
jp
pop
mov
fstpl
and
add
pop
mov
and
sbb
subl
dec
popf
xor
out
add
jns
jp
dec
sbb
imul
xlat
out
push
sbb
js
in
xor
sbb
leave
cld
fsubs
ret
xchg
shrl
xorb
clc
jne
mov
xchg
shl
ds
xchg
mov
inc
adc
mov
pop
push
fidivl
int3
jne
add
mov
rclb
adc
sbb
imul
lods
or
jno
mov
jnp
mov
daa
movsb
ljmp
lock
pusha
adc
int3
sbb
mov
ror
nop
sar
jmp
and
lock
outsl
int
pusha
pmullw
or
push
test
nop
pop
mov
dec
dec
sub
mov
mov
test
daa
xchg
loop
xor
frstor
ja
adcl
add
mov
ja
mov
push
jb
push
call
in
xchg
inc
loope
and
cltd
cli
mov
push
push
pop
decl
add
pop
mov
lds
pop
adc
loop
in
mov
dec
push
add
add
mov
mov
jl
xchg
sub
in
pop
ja
dec
bound
nop
pop
aam
leave
fldt
mov
inc
test
fs
shlb
add
add
sub
addb
add
push
jnp
jg
mov
addl
push
cmp
xor
or
inc
fdivs
pusha
pop
mov
pusha
sbb
outsl
or
test
out
ficompl
sub
cmpl
adc
frstor
loope
xchg
mov
dec
mov
movsb
adc
inc
aam
ret
inc
mov
test
test
and
fcoml
jge
adc
cmp
inc
dec
imul
xchg
js
jo
sbb
rorl
daa
dec
or
scas
xchg
pop
das
out
xchg
das
loop
shr
repnz
movsb
test
faddl
cmpsl
adc
cmc
sub
ds
ja
xchg
aad
xchg
sub
push
cmp
add
pop
mov
insb
je
outsb
adc
js
out
jbe
icebp
subb
lea
loope
jns
add
lods
sub
in
pushl
push
dec
inc
das
push
popa
sahf
jp
aam
int
loope
iret
push
xor
and
pushf
fwait
push
mov
cs
and
js
jne
mov
add
call
cmp
sbb
fs
inc
leave
movsb
sti
mov
mov
cmp
xor
push
add
das
add
jmp
jle
jnp
xor
sti
sub
loopne
into
or
lock
sbb
test
cmp
adc
ljmp
cli
dec
jb
push
cmp
and
jb
and
sub
xchg
sarl
sub
sbb
sub
jne
orl
pushf
imul
enter
lds
decl
and
sbb
mull
scas
or
add
push
sbb
mov
mov
xchg
test
or
mov
rcrl
and
rorl
fwait
xor
pandn
cmp
push
in
mov
mov
mov
cmc
repz
pop
sbb
cmp
push
imul
scas
lods
push
cmp
sub
adc
call
leave
cli
sarb
dec
aam
jns
shr
mov
test
sub
jmp
adc
push
dec
inc
push
sub
popw
pop
push
mov
sub
mov
imulb
jns
loop
sbb
inc
push
cltd
std
cmp
adc
pop
pop
mov
mov
popf
mov
mov
cltd
sbb
xor
shll
cmc
scas
icebp
or
add
jmp
xchg
adc
mov
dec
xchg
stos
pop
sbb
cmp
mov
jg
push
test
mov
aad
add
and
lret
test
push
in
imul
or
add
outsb
sbb
les
xchg
mov
test
cmp
add
dec
cmp
cmp
sub
push
sbb
stc
adc
dec
add
add
push
lret
push
dec
adc
cmp
adc
push
and
data16
in
pop
cmp
pop
push
add
jecxz
sub
and
push
movsb
add
push
mov
rclb
cmp
mov
ja
cmp
js
sub
adc
aaa
push
ljmpw
lods
push
push
fwait
stos
dec
dec
xor
cli
mov
in
pop
sub
pop
cwtl
stos
xchg
add
stos
insb
test
jg
das
jnp
inc
xchg
pop
pop
cmpb
daa
stc
jg
adc
xchg
lcall
xorl
sbb
pusha
shll
imul
add
and
popf
pop
and
mov
lods
sarl
xor
lods
scas
out
push
xchg
dec
arpl
mov
pop
pop
popl
test
add
je
mov
xchg
dec
fsubs
mov
stos
cmp
xor
mov
jo
dec
stc
jl
add
cmp
call
popa
dec
or
sbb
ja
dec
lea
push
clc
fwait
dec
dec
mov
je
and
pop
or
xor
daa
mov
ficoms
jge
xor
aam
sbb
push
popa
fs
inc
xchg
loop
std
or
jns
leave
aam
call
mov
dec
xchg
hlt
popa
roll
stos
push
push
xchg
lods
pop
adc
push
push
dec
add
movsb
push
mov
dec
popa
aaa
sbb
push
testl
pop
aad
inc
in
cmp
push
sar
imul
sub
and
test
loope
jle
clc
daa
and
les
push
mov
jno
cmp
jmp
xor
ret
lea
jge
adc
jp
xor
xor
stos
pop
push
dec
clc
fsubrs
in
sbbl
imul
aam
mov
push
inc
mov
sub
cmpsl
test
loop
fs
xchg
adc
sub
iret
sbb
fistpl
outsl
or
stc
mov
xchg
and
or
dec
test
sbb
xchg
aaa
pop
setp
pop
sub
es
sub
and
test
jb
fnstenv
mov
sub
repnz
outsb
pop
xchg
or
mov
mov
decl
imul
push
push
pusha
cmp
je
fsubrs
iret
dec
fdiv
mov
in
out
push
mov
in
fisttpl
das
push
pop
test
jae
lods
lock
jae
jmp
pop
movsl
adcl
int3
sbb
lea
mov
adc
js
pop
cmp
mov
imul
ds
pop
int3
jle
int
adc
add
or
jbe
testb
sbb
mov
and
fdivl
sbb
in
xor
test
sub
loop
out
mov
adcl
push
cmp
xchg
pop
call
pop
test
rcrb
sub
mov
sahf
mov
mov
cmc
mov
dec
testl
cmp
mov
dec
sub
shll
cwtl
call
dec
xor
out
out
adc
xchg
fisttps
nop
or
sub
cmp
stos
jb
fwait
aad
push
cmp
and
lods
adc
pop
jmp
dec
ja
and
dec
rolb
mov
or
lret
xchg
sahf
and
cltd
cwtl
arpl
fwait
arpl
in
shl
inc
cmp
lds
push
inc
repnz
aas
out
and
fs
xor
lahf
sahf
cwtl
iret
jecxz
test
mov
xchg
clc
mov
jl
lea
lock
mov
cltd
lret
pusha
sub
jns
jge
mov
insl
and
sub
cmp
rorl
jno
loope
fimuls
cmp
aad
das
sub
cs
mov
jl
cmpb
filds
sub
leave
rcrb
loopne
push
aad
push
shll
dec
dec
xorl
sub
mov
cmp
scas
cltd
lods
adc
fiaddl
mov
jae
test
testl
nop
mov
jns
and
lahf
sbb
push
pusha
lret
jnp
pop
cwtl
mov
mov
cwtl
mov
pop
sub
push
int
and
lcall
sub
adc
dec
dec
jp
sbb
sbb
fs
pop
shr
std
mov
lret
xlat
adc
popf
mov
add
fs
imul
xchg
std
adc
push
and
loopne
xor
popa
mov
aaa
pushf
and
dec
jb
jbe
mov
sub
adc
push
add
out
rcr
or
pop
int3
xchg
adc
sub
rcrb
add
inc
dec
popa
add
pop
inc
subl
xchg
pop
mov
fwait
lock
add
in
jecxz
xorl
rcl
gs
sarb
lods
xchg
popa
sbb
stos
loope
cs
addr16
ljmp
adc
cltd
sbb
mov
lds
mov
movsb
push
ds
je
dec
jmp
ss
testb
dec
lds
insl
and
nop
icebp
loopne
xor
cmp
jge
xor
cmpsl
iret
negl
ds
into
xchg
es
mov
ret
push
aaa
mov
jle
std
cmpsb
sti
inc
xor
add
ret
int3
dec
dec
pop
stos
mov
stos
jl
les
insb
xor
les
or
fsubs
sub
mov
negb
pop
fsts
inc
mov
cmc
mov
cs
lret
test
int
jl
mov
jo
dec
mov
dec
in
cmp
fiadds
lods
adc
in
js
and
stos
cmp
leave
lods
rcrl
pop
shrl
aas
xchg
jns
outsb
aam
mov
popf
out
adcb
lret
decl
xor
jle
loop
fistpll
imul
pop
mov
pop
and
cmp
push
jbe
arpl
lcall
push
test
dec
inc
push
xchg
sub
mov
shl
mov
fisubs
cmp
es
or
inc
clc
fisttpl
push
sub
pop
fsubrs
loopne
pusha
push
std
xchg
lds
test
dec
pop
inc
rorl
dec
push
inc
sub
pop
ficomps
std
dec
enter
cmp
mov
sub
push
xstore-rng
cmpsl
inc
fldcw
inc
stc
cmp
iret
dec
jo
and
sbb
or
fs
scas
pop
in
out
in
iret
dec
test
lret
outsl
test
pusha
in
aam
loopne
clc
lds
leave
test
jp
mov
xor
or
std
sub
sbb
fnstcw
sarl
xor
shll
fs
xchg
mov
out
lahf
sub
add
inc
scas
adc
imul
imul
setle
xor
lea
ret
jecxz
mov
fildl
fucomip
add
adc
and
add
bnd
imulb
add
inc
xor
shll
jae
dec
scas
mov
mov
xor
leave
mov
scas
mov
cmpsl
out
imul
xchg
orb
mov
mov
mov
inc
inc
jbe
out
gs
aas
testb
es
ljmp
jg
scas
out
and
ljmp
mov
push
cli
mov
fisubrl
push
xor
inc
cmc
push
test
negl
mov
add
or
fdivrs
incl
rcll
and
mov
pop
sub
mov
into
popf
fdivrl
or
xor
pop
mov
pop
lcall
shll
push
scas
xchg
repz
mov
out
imul
shll
cltd
mov
out
inc
repnz
pop
mov
enter
xrelease
dec
movb
jbe
in
adc
add
les
sub
jo
dec
int3
adc
and
jb
jns
rol
sbb
cld
ret
mov
loopne
leave
xor
or
mov
pop
dec
leave
icebp
jns
pop
push
cmp
insl
test
fucomp
insl
out
je
xchg
jnp
dec
imul
dec
setp
add
xchg
loopne
jne
xchg
out
lahf
aad
push
adc
mov
xchg
adc
gs
dec
aas
es
aad
xchg
jb
push
rclb
push
mov
cmp
aas
jecxz
mov
or
mov
shlb
nop
push
or
sub
pop
aam
push
daa
add
fcomi
sahf
pop
outsb
cmc
xchg
stos
cmp
in
cmc
int3
pop
cli
or
mov
mov
into
xchg
pop
cmp
sub
push
imul
push
sbb
sub
sbb
cld
mov
popf
ret
xchg
aad
in
mov
not
addl
push
pop
mov
adc
adc
dec
jo
dec
inc
arpl
jne
sub
jmp
push
rclb
clc
cmpsl
add
dec
notb
stos
xchg
lret
mov
mov
push
push
ficompl
mov
jb
or
scas
jno
xchg
pop
out
fsubrp
dec
gs
sub
subl
mov
or
cmc
sbb
fimuls
call
pusha
call
mov
sub
icebp
mov
mov
mov
sbb
and
push
pop
test
push
sub
mov
adc
cld
pop
cs
adc
outsl
adc
or
push
imul
nop
sub
scas
sub
jnp
pop
jg
dec
mov
into
add
daa
mov
fwait
push
jge
lods
mulb
hlt
aam
pop
mov
inc
cld
xor
icebp
sub
cmp
push
and
dec
aad
and
je
out
mov
jbe
out
fucomi
mov
aam
jl
rclb
loop
ss
gs
out
loope
in
push
mov
sbb
push
rolb
sub
adc
push
and
inc
fisubrs
push
mov
in
loope
int3
ds
in
clc
push
mov
add
loope
pushl
dec
add
mov
orb
filds
mov
xchg
sbb
fstp
lret
loop
test
rclb
notb
dec
jne
sbb
pushl
fisttps
pop
pop
repz
dec
add
push
sbb
das
lcall
data16
push
popf
stc
jmp
imul
lcall
pop
xorl
bnd
imul
test
jne
and
jp
xchg
sub
in
sbb
test
mov
imul
push
cwtl
das
lods
stos
in
mov
mov
jg
hlt
cmp
push
gs
mov
fwait
repnz
subb
xor
fcompl
in
mov
movsl
bound
mov
inc
rclb
cmp
shlb
xchg
or
or
cmp
pop
push
adcb
xchg
jecxz
push
pop
fcomps
xor
lods
sub
push
push
mov
mov
inc
sbb
iret
dec
adc
cwtl
cmc
sbb
jle
test
orl
cmpsb
fstl
adc
adc
mov
jl
mulb
xchg
daa
sbb
cmp
inc
fadd
call
stc
jp
push
and
mov
shrl
stos
inc
addb
aas
adc
ret
sub
cltd
or
out
cmp
loopne
mov
jns
sub
adc
lret
jecxz
mov
sbb
sarl
xchg
mov
dec
pop
outsb
leave
fisubl
cmc
test
imul
sbb
ficoml
std
icebp
fsub
jnp
lahf
mov
sub
or
jne
mov
add
cmc
mov
xor
dec
dec
push
stos
cli
clc
lock
stos
inc
out
jb
and
popf
jl
and
repnz
jmp
fwait
dec
mov
inc
push
cwtl
cs
testb
mov
add
ja
lods
lret
mov
daa
sub
cltd
leave
pop
lret
insl
dec
and
adc
fisubrl
or
jp
outsb
or
pushf
pop
mov
mov
push
mov
loopne
adc
mov
lock
xchg
mov
bound
test
cmp
icebp
mov
xor
dec
dec
xchg
movsl
push
pop
mov
and
clc
mov
leave
test
and
repz
lret
mov
aam
movsl
ljmp
rcr
push
repz
sti
mov
mov
imul
cmpb
sbb
pop
lret
sub
add
andb
mov
ret
pushl
xchg
int3
or
out
jns
xchg
jb
dec
imul
in
dec
stos
pop
ja
jle
xchg
icebp
mov
es
dec
aam
outsl
icebp
fsts
jnp
jle
mov
xchg
sarl
sbb
subb
fcoml
sbb
add
pop
je
jmp
push
int
rcll
jl
data16
pop
cmp
in
and
or
pop
lods
push
cmp
mov
sbb
inc
jbe
outsb
sti
loope
jns
roll
arpl
add
xor
lods
cli
shlb
shrl
movlps
shrl
xchg
js
lret
loopne
and
fwait
xor
add
leave
add
ret
inc
sbb
mov
xchg
mov
xchg
jle
or
push
divl
out
ss
xor
jge
xor
jmp
jne
daa
adc
sbb
int3
outsb
sbb
or
mov
sbb
aam
and
mov
xor
cwtl
aaa
jno
pop
pop
aam
push
icebp
or
int3
popf
mov
mov
test
mov
lahf
adc
rcl
cmp
jecxz
dec
cli
dec
scas
and
loop
xchg
imul
cmp
dec
fistpl
push
in
ja
xchg
cmp
and
add
lret
cmp
jne
lods
lcall
into
cmovnp
mov
ret
in
xchg
lods
ds
clc
cmpsb
jne
dec
in
cmpl
add
adc
push
add
xchg
xor
or
xor
data16
cmp
sbb
sub
pop
push
cmp
sbb
push
push
out
adc
mov
mov
sbb
xchg
sub
or
fidivl
out
stos
shlb
xchg
xor
or
insb
jp
inc
cmp
stc
cwtl
roll
xor
xor
js
fsubl
adc
pop
xchg
cmpsl
mov
add
sub
mov
out
or
mov
cmpl
inc
popf
iret
std
sahf
dec
add
pop
sub
push
seto
fstpl
hlt
fstpt
fcmovu
test
fdivrl
popf
test
sbb
mov
sub
stc
push
xchg
addr16
wbinvd
scas
shr
fcmovnbe
lahf
cwtl
xchg
pop
sar
push
shrb
fcmovu
cmp
adc
xor
lret
and
std
stc
fimull
jae
jg
add
pop
pop
xor
mov
jge
or
ret
adc
out
pop
push
lods
mov
mov
js
cmp
int
or
jg
cmpsb
and
lea
sbb
pop
test
movsb
jmp
jae
jg
ret
mov
das
mov
loop
cmp
rcll
daa
xlat
imul
popa
cmpsb
cmp
dec
and
ljmp
adc
icebp
xor
stc
dec
aad
sub
out
fbld
adc
cmp
xchg
fwait
pop
scas
idivb
mov
fsub
repnz
xor
test
movsl
rcrl
stos
sahf
mov
xchg
or
push
mov
jle
push
fsubrs
push
pusha
ja
mov
push
subb
pop
test
xor
mov
cltd
lret
sarb
out
fistl
and
xlat
fwait
or
mov
repz
ja
pop
sub
lahf
sbb
sarl
js
mov
ret
cld
dec
sbb
cmpsb
cmpsl
sub
sub
mov
mov
loopne
sub
shrl
fstp
pop
cld
push
stc
das
mov
pop
mov
das
pop
ss
xlat
mov
and
mov
jb
ficoms
and
scas
stos
out
cld
mov
and
lcall
mov
or
leave
cmpl
mov
sbb
test
leave
mov
jno
mov
fstps
mov
rorl
rcrb
fs
fistps
ffree
pop
std
mov
cmp
push
sbb
sahf
inc
inc
testl
xor
inc
test
mov
sbb
outsl
outsb
sbb
clc
stc
fdivr
mov
fidivrs
xor
cmp
je
daa
jle
xchg
in
iret
dec
neg
les
int3
out
daa
sbb
mov
or
test
sbb
test
sub
repz
push
stc
out
dec
dec
mov
imul
sub
jmp
fildll
jg
insb
add
scas
add
xchg
pop
dec
pop
add
stos
js
inc
test
add
push
out
roll
pop
movsl
lods
in
jo
or
cwtl
cmp
pop
or
cwtl
into
imul
inc
xchg
cmp
les
xor
xchg
or
inc
adc
dec
enter
pop
ret
repz
popf
sahf
or
ret
and
xchg
xchg
inc
hlt
out
lret
pop
jp
jbe
out
ret
loope
add
jle
notl
cltd
jb
call
push
lahf
inc
jl
pop
stos
dec
mov
jmp
jbe
enter
xchg
mov
filds
cwtl
add
out
lea
shl
push
movsl
out
out
jge
pop
movsb
popf
and
repnz
je
jo
push
leave
add
aaa
repz
adc
lret
lods
int3
jge
out
lahf
sarl
jae
loope
mov
ds
add
and
out
mov
or
xor
dec
leave
sbb
stos
pop
xchg
push
xor
xchg
in
dec
pop
xchg
mov
adc
pop
xorb
std
pop
and
xchg
sub
sbb
pop
shlb
dec
les
notb
inc
adc
cmp
push
adc
sahf
cwtl
cltd
inc
add
push
add
lret
jmp
cmpsb
mov
xor
pop
adc
scas
je
dec
add
arpl
lahf
add
adc
fidivrl
mov
xor
leave
lahf
fstl
xor
add
test
lea
push
xchg
imul
clc
and
lds
mov
pop
inc
adc
hlt
sahf
dec
mov
pop
cmp
and
ss
mov
iret
std
inc
jmp
jbe
imul
lcall
movsl
movsl
jmp
sub
and
xor
mov
or
hlt
cmpsb
aaa
sarl
cltd
pavgb
pop
pop
jmp
mov
mov
or
hlt
loope
pop
add
test
out
dec
fiadds
jb
lea
adc
dec
in
loop
mov
fidivl
jg
dec
fnstenv
sub
cmpl
jno
lods
ds
and
jb
fmull
jp
movsbl
shlb
mov
js
lods
and
and
jne
imul
orl
lret
test
iret
cmc
jnp
push
jge
sub
lahf
mov
cld
inc
push
fcoms
sti
inc
ret
jo
inc
sbb
inc
test
inc
jl
push
pop
dec
sub
cmc
ret
or
jb
out
cwtl
jg
rcl
xor
das
data16
jecxz
inc
rcl
pop
jp
lahf
scas
sub
and
jo
loop
ret
fistpll
cmp
push
or
inc
jle
test
insb
dec
mov
gs
sbb
push
das
arpl
xchg
movsb
stos
cmpsl
nop
leave
ds
ret
mov
int
scas
dec
jae
sub
mov
decl
int
push
std
fcompl
shll
addps
arpl
mov
cmp
lahf
or
mov
adc
jmp
lods
fmuls
inc
push
push
inc
mov
pop
and
loopne
test
daa
or
aad
repnz
sub
ficoml
mov
aaa
pop
outsl
aam
mov
aam
inc
sarb
mov
add
loopne
jge
iret
inc
ja
sub
inc
mov
sub
mov
jp
add
fldcw
and
adc
aad
imul
loope
int3
push
cmp
adc
std
in
and
xor
jp
clc
nop
xor
jno
aam
int3
xchg
adc
mov
jne
stos
xorl
and
or
cs
xor
std
outsl
shll
adc
sarl
push
xchg
ja
test
and
sub
fdivrl
cmp
fnstcw
xchg
jl
mov
sarl
mov
jge
ss
fidivs
sub
aaa
cmp
mov
push
lcall
mov
notl
in
jge
leave
outsl
jle
mov
cli
push
inc
test
lret
mov
fadds
mov
jmp
or
cmpsb
pusha
cmp
xor
mov
sbb
in
mov
call
ficompl
out
lock
inc
test
cs
mov
aam
and
inc
mov
inc
adcb
movsb
mov
je
xchg
cmpsl
jecxz
in
lcall
arpl
and
lods
xor
cld
imul
cmpsb
inc
mov
mov
sbb
push
pushf
mov
push
inc
jl
mov
pop
inc
out
xchg
int3
and
fidivrs
dec
notb
aad
add
js
repnz
xlat
xchg
fmul
mov
pop
mov
das
jns
jmp
mov
adc
mov
test
mov
cmp
test
rcl
and
pop
and
paddsw
mov
add
cmpsb
mov
outsb
mov
cmp
and
or
lret
xor
xor
inc
out
sbb
or
push
cmpsl
mov
data16
jb
pop
or
cmp
adc
test
subb
lock
dec
test
lcall
fst
add
mov
xchg
sbb
pop
xor
pop
scas
cmp
movsl
clc
lock
sbb
jl
sahf
into
cmp
jecxz
fdivs
les
and
lcall
or
lea
cmp
mov
pusha
call
loopne
push
lock
sti
in
stos
jecxz
xchg
shrl
jb
outsb
adc
mov
fisttpll
out
push
push
movsb
data16
popa
dec
cld
daa
fsubrs
push
test
and
xor
ret
mov
sub
and
mov
and
sbb
in
mov
scas
rorl
adc
data16
in
mov
mov
push
fildl
orl
repz
mov
int
push
in
js
inc
jge
loop
ret
dec
dec
icebp
daa
clc
fmuls
loopne
push
xor
stos
jne
xchg
xchg
xchg
scas
data16
and
adc
loopne
push
dec
cmc
stos
cmp
and
sbb
pusha
sti
mov
pop
lahf
hlt
out
jno
push
pop
fldenv
push
jp
push
inc
in
outsb
insl
clc
daa
xchg
add
bound
mov
imul
in
and
std
cmp
ret
aad
rol
flds
push
pop
mov
in
mov
lea
hlt
and
add
mov
mov
inc
dec
testb
movsb
cwtl
xchg
das
mov
cmp
dec
out
cld
sbb
mov
sbb
push
outsl
lret
lret
bound
sub
jmp
sub
fs
add
inc
cmpsl
sub
ret
test
loopne
mov
xchg
jl
test
aas
pop
push
push
aam
and
out
lret
ds
data16
mov
clc
push
mov
mov
ja
jl
xchg
xchg
test
ljmp
adc
das
mov
mov
jp
aad
mov
lahf
lret
fldt
iret
mov
adc
aam
fstpl
xchg
fldenv
scas
stc
int
mov
imull
enter
xor
imul
adc
or
bound
push
inc
jp
in
mov
in
cli
lods
daa
inc
mov
addl
sbb
das
outsl
adc
mov
out
ds
sbb
leave
int3
test
inc
xorb
lock
loope
mov
es
push
push
jns
xchg
mov
mov
nop
dec
xor
popf
cwtl
xlat
sti
push
xchg
cmpb
push
in
mov
mov
xchg
dec
adc
dec
sub
dec
stos
aas
xor
dec
mov
imul
jns
and
inc
lret
pop
mov
shl
cmp
sarl
loopne
repnz
sub
sbb
loope
mov
and
mov
sub
je
testl
xchg
or
paddusb
aad
jmp
lea
ja
push
adc
push
ja
sub
mov
cmp
mov
sahf
jg
add
icebp
mov
push
shll
dec
push
mov
dec
add
ss
movsb
xlat
mov
pop
mov
sub
or
popaw
insb
pop
aaa
dec
pop
push
push
insl
dec
out
aas
inc
inc
and
jge
sbb
orb
movsb
mov
sub
pop
popl
mov
mov
mov
xorl
mov
aam
push
add
out
popf
jne
mov
xchg
js
cmp
nop
jb
jb
lods
fs
xchg
movsb
push
or
push
or
xor
cli
cmp
je
pop
cltd
pop
lock
lahf
arpl
sbb
push
xchg
sub
inc
lahf
ds
clc
out
xchg
bound
or
cmpsb
test
into
sub
xchg
and
sbb
sub
mov
lea
add
idivl
fnstsw
ficompl
arpl
sbb
pop
pushf
lods
into
es
pop
dec
sbb
mov
mov
icebp
cmp
jmp
mov
xor
add
lods
fstps
out
sub
xor
xchg
daa
sbb
std
ja
mov
pushf
jnp
loopne
xor
rcrl
iret
fs
lret
pop
int
out
enter
inc
out
cmp
inc
push
add
jbe
sbb
scas
aam
insb
cld
inc
out
and
and
arpl
jl
cmp
int
rclb
out
popa
fcompl
insl
sub
inc
xchg
sub
sub
aas
adc
sub
mov
lcall
sbb
sbb
push
mov
push
insb
arpl
call
pop
fucom
rorl
cmp
lea
mov
cmp
dec
push
les
outsl
add
dec
aam
sub
pop
jo
scas
push
mov
pop
cld
sbb
inc
lret
js
pop
inc
div
and
jl
jle
mov
aam
int3
scas
lea
lods
xchg
jge
rcrl
fbstp
adc
sbb
test
lret
hlt
cmp
ljmp
fisubl
rclb
pushf
aad
or
or
aad
in
into
jg
shll
inc
push
clc
fs
push
sub
or
sub
inc
movsl
mov
inc
cwtl
push
mov
mov
and
cltd
es
or
adc
popa
xor
aam
ret
dec
mov
add
jb
adc
cltd
aam
int3
ss
mov
jge
andl
dec
scas
jns
mov
fs
xchg
stos
inc
insb
les
xlat
enter
idivb
iret
andl
inc
and
nop
sbb
bound
push
jle
mov
leave
jmp
jnp
sub
mov
xor
cmp
cmpb
jp
rorb
xchg
jle
movsb
xor
in
shr
loop
cltd
jp
adc
sub
push
or
enter
cwtl
in
fisttpl
nop
daa
fists
sbb
mov
adc
mov
push
mov
test
pslld
xchg
adc
add
imul
shll
mov
js
mov
mov
loop
xchg
fistps
repz
push
mov
mov
loop
pop
fadd
outsb
sub
gs
lods
dec
sarl
push
shl
mov
jge
jno
icebp
shll
fwait
roll
into
cmp
pushf
ret
mov
loope
pushf
sbb
popf
aaa
jg
out
adc
es
imul
cli
ret
call
inc
imul
jmp
add
or
cmp
out
pop
inc
mov
sub
inc
add
cmp
fisubrs
in
inc
sbb
cmpsb
cmp
dec
mov
notl
rep
in
adc
xor
inc
out
jb
sbb
movsl
inc
std
xlat
hlt
jmp
cmp
xchg
jg
sbb
idivb
ja
sbb
aam
lahf
mov
ss
je
xchg
scas
pop
into
or
sub
test
fdivs
jle
inc
push
bound
hlt
jb
mov
sbb
cmp
ficompl
sub
lock
les
and
inc
nop
fsubrp
jb
sarb
fwait
cmp
pop
loop
cltd
cltd
or
jg
fbld
lds
pusha
cmp
dec
movsb
cwtl
mov
shlb
in
roll
pop
add
push
dec
mov
inc
je
mov
mov
inc
sbb
lahf
and
jl
pop
inc
inc
mov
cmp
xor
popa
aas
cli
les
les
nop
clc
or
mov
cmp
or
or
movsw
cs
sub
mov
sub
pop
roll
repnz
mov
es
pop
insb
int3
jecxz
xchg
ret
shlb
rclb
xchg
scas
dec
sbbl
xor
jmp
sub
pop
cltd
test
nop
mov
mov
lret
sbb
out
push
cmpsl
ja
inc
cmc
fwait
inc
xchg
jnp
call
testl
lods
push
enter
xor
test
xchg
or
outsl
and
sbb
mov
mov
ss
mov
xor
sbb
ret
fiadds
popf
ds
jle
mov
pop
add
dec
andl
push
sbb
sbb
lock
pop
cmp
clc
int
lcall
cwtl
lds
inc
pop
jb
icebp
loope
jecxz
dec
inc
mov
xor
push
adc
sbb
incb
scas
or
cmpsl
test
cmp
dec
and
popf
fbld
pop
repnz
stc
jg
popl
and
cmp
xchg
repnz
lock
pop
cltd
fnsave
push
enter
push
pop
rorl
enter
or
xchg
cmp
xorb
mov
jbe
xchg
std
jge
ljmp
mov
mov
in
xchg
push
int
mov
xchg
leave
nop
cmp
std
jnp
in
xchg
xchg
loop
mov
dec
movsb
hlt
mov
jo
push
in
lcall
or
movsb
add
icebp
divb
movsb
sti
mov
xor
mov
pop
or
pop
sbb
xor
arpl
cltd
inc
out
xor
adc
sub
and
cmp
mov
lds
jbe
or
sbb
loope
mov
in
mov
push
fs
sub
test
sbb
mov
jg
adc
dec
jl
pop
test
pop
lods
and
mov
sub
je
cmp
lock
mov
jne
cmpsb
mov
out
dec
inc
shl
enter
jo
out
movsb
into
cmp
insl
shlb
jmp
xchg
sbb
dec
pop
or
aaa
xor
add
add
mov
and
shlb
jb
movsb
bound
cmpsb
add
ja
into
pop
cmp
outsb
push
xor
cmp
pop
fucomip
inc
sub
hlt
adc
mov
inc
xchg
mov
ljmp
xor
cwtl
jnp
mov
cwtl
jnp
pop
xor
int3
loopne
inc
jne
or
xor
clc
ret
and
jae
fsubrs
sahf
jecxz
push
sub
sarl
aas
rorb
incl
mov
cld
lcall
test
cs
cld
jle
mov
test
shl
insl
fnstsw
dec
sbb
je
nop
in
inc
outsb
adc
popa
in
jnp
add
and
jne
push
xchg
add
out
push
scas
ja
mov
add
popa
sub
push
sbb
cmp
xor
stos
fdiv
add
and
xor
jnp
mov
inc
outsb
cltd
imulb
pop
and
fbld
hlt
mov
and
fiaddl
pushf
shlb
lods
dec
cli
or
cmp
roll
fisubrl
andb
sahf
out
repz
mov
mov
xchg
loopne
lcall
aas
mov
in
xchg
aad
arpl
mov
inc
out
iret
movsl
xor
stos
mov
sbb
xlat
mov
sbb
push
aad
cmp
pop
sub
aam
ljmp
sbb
stc
scas
pop
adc
push
aas
xchg
or
mov
dec
xbegin
out
mov
cmpsl
stos
pop
push
inc
cltd
add
push
cs
lcall
mov
cmp
or
mov
xchg
push
mov
pop
push
scas
push
outsb
push
sbb
loopne
insb
jle
es
sbb
mov
sti
push
xor
loope
push
mov
lahf
xchg
push
jp
addr16
call
sbb
shrl
sub
fsubrs
repnz
int
sbb
sbb
addb
scas
fiaddl
push
xor
mov
cltd
repz
add
dec
jmp
and
fcoms
testl
or
mov
cmp
xor
aas
xchg
mov
test
and
cmpsl
lret
adc
loope
ret
push
dec
icebp
jle
addr16
ds
adc
adc
cmpsb
sbb
out
jb
mov
pop
xchg
cli
adc
aam
pop
xchg
jns
sahf
sub
ljmp
jns
aad
je
mov
fisubrs
popf
or
aam
stos
dec
xchg
insl
or
pop
mov
stos
lahf
outsb
mov
das
jo
filds
sub
pop
xchg
inc
sarl
jbe
je
pushf
hlt
sbb
sbb
sbb
imul
push
jo
push
stc
mov
int
cmp
mov
mov
outsl
inc
cmp
aam
imul
xchg
jg
xchg
fnsave
ret
inc
ja
aaa
leave
jbe
mov
mov
push
add
push
sbb
xchg
pop
movsl
loope
add
scas
sbb
aam
fimull
jo
xor
insl
cltd
push
out
scas
adc
adc
mov
xchg
fwait
loope
outsl
repnz
pop
outsb
dec
mov
or
loop
gs
imul
cmpsl
inc
mov
rcrb
lret
or
dec
jo
ret
cmp
xchg
xor
sub
out
je
shrl
mov
push
dec
sub
mov
arpl
hlt
out
xchg
cmp
imul
adc
xlat
jecxz
insb
push
mov
mov
sbb
jns
dec
sbb
adc
out
add
jmp
or
bound
imul
in
push
fstpl
mov
cmpsb
xchg
jo
or
out
rcr
int
jmp
fdivrl
mov
sti
mov
jnp
cld
test
mov
sti
mov
push
push
mov
fiadds
mov
test
movsb
push
cwtl
cld
mov
stos
sbb
jl
inc
movsl
pop
std
jle
loop
fisttpl
push
sbb
push
aas
sub
sbb
mov
xor
push
xchg
adc
pop
cmp
xchg
out
xchg
sbb
dec
lea
jbe
xchg
movsl
into
popa
mov
cmp
sbb
lods
lcall
mov
mov
xor
xor
lea
adc
add
out
imul
push
imul
push
pop
test
cmp
cmp
lret
bound
inc
inc
rcr
dec
imul
xchg
xchg
mov
cmp
jmp
mov
aaa
dec
or
dec
loope
mov
cmp
jle
aam
xor
inc
or
rcrb
mov
enter
repnz
imul
push
popa
sub
lea
or
or
in
add
pop
cmc
or
and
adc
idivl
mov
sub
mov
jmp
add
xlat
lea
stos
mov
inc
loopne
xchg
push
jo
movb
gs
dec
fsts
cmp
and
dec
mov
jmp
movsb
daa
dec
xchg
jns
mov
or
dec
mov
or
cmp
jb
imul
clc
jge
idiv
push
cwtl
rcrb
xlat
sbb
sbb
dec
add
fildll
dec
movsl
push
ret
sub
clc
mov
and
sbb
lret
cmp
pop
xchg
sbb
outsb
dec
lods
mov
add
push
ja
cmpsb
call
cmp
in
pop
test
adc
imul
fs
fistpll
and
daa
stos
mov
sti
pushf
xchg
ljmp
mov
or
addl
hlt
out
cs
jge
sub
xchg
mov
popa
jg
adc
jae
inc
scas
shlb
jle
dec
push
outsl
jo
mov
rol
and
insb
mov
mov
sub
cmp
jl
call
lea
push
add
gs
lock
or
jg
loopne
pop
testl
scas
xchg
movsb
adc
xchg
jmp
std
or
jg
sub
mov
lea
or
outsb
or
cmp
or
mov
pop
ja
sbb
push
push
call
pop
inc
mov
sbb
cld
mov
ljmp
rorb
aas
cmpsl
mov
gs
mov
mov
pop
pop
xchg
mov
dec
shll
xchg
lods
mov
scas
pop
and
hlt
adc
cmp
mov
cmp
jnp
xchg
mov
add
inc
daa
int
shlb
cltd
pop
adc
cmp
mov
out
jecxz
lock
push
leave
mov
push
and
mov
lret
sub
and
test
mov
mov
call
cltd
mov
lcall
lds
iret
dec
jp
addr16
adc
mov
data16
adc
shrb
arpl
inc
repnz
icebp
mov
xchg
ja
rol
xor
xor
mov
add
pop
adc
mov
mov
cli
push
sbb
pop
sbb
mov
cmp
jo
sub
arpl
jp
gs
mov
and
or
xchg
jmp
inc
jmp
imul
xchg
gs
and
adc
push
push
mov
push
cltd
aas
into
inc
xchg
and
aam
lret
mov
aas
loopne
sbb
jb
mov
mov
mov
xchg
fsubrl
negb
adc
out
out
lahf
lds
mov
xchg
mov
in
outsb
daa
aaa
push
out
lahf
push
lds
mov
je
js
mov
pop
jb
sbb
pop
push
xchg
cs
sbbl
lret
ljmp
scas
xor
mov
fs
rcll
repz
cmp
into
xor
push
test
shlb
or
mov
xchg
aas
jno
arpl
aas
out
add
faddl
jecxz
dec
test
adc
sub
sbb
mov
ljmp
icebp
push
mov
fwait
mov
stos
clc
stos
lcall
es
jmp
push
lock
inc
in
jns
pop
leave
cmpsl
sub
test
jae
dec
iret
out
push
sbbb
push
adc
lds
adc
cmpsb
or
push
sub
test
addb
shll
imul
mov
and
lods
push
dec
jge
jne
mov
jb
sub
cmp
ds
bound
imul
arpl
pop
xchg
adc
in
stos
ljmp
inc
jo
xchg
or
sub
mov
adc
xor
lcall
push
lea
mov
in
call
outsl
gs
jecxz
sub
and
int3
aaa
and
push
dec
stos
outsl
les
dec
aas
xor
jge
adc
lods
das
inc
jl
add
mov
push
adc
in
mov
mov
mov
mov
in
cmc
push
mull
jnp
enter
les
outsb
jb
out
loope
mov
push
mov
push
pop
add
push
outsl
and
ja
testl
adc
test
inc
jbe
cld
sbb
sbb
mov
std
jb
cmp
je
cmp
mov
pusha
ficomps
cmc
dec
int
out
mov
movsb
mov
jp
adc
cmp
pop
sub
fcomps
add
adc
mov
mov
and
mov
pop
mov
push
xchg
jp
insb
dec
push
orb
or
adc
dec
pop
sbb
push
cld
int
loope
imul
lret
int3
nop
lahf
mov
pop
add
jbe
add
dec
adc
xor
mov
push
lea
or
xchg
lock
or
ja
enter
nop
loope
call
xchg
mov
sahf
imul
xchg
mov
in
addr16
mul
pop
int3
and
cs
repnz
dec
fldt
inc
aam
insb
cmc
pop
das
fldcw
out
adc
imulb
adcl
add
arpl
mov
xchg
pop
call
pop
lret
fs
xor
cmp
push
std
cmp
scas
cltd
movsl
aaa
das
notl
subb
lock
sbb
xor
and
movsl
jns
daa
clc
cltd
pop
enter
in
xchg
push
add
xchg
outsb
xor
mov
cmp
ret
mov
sarl
jne
xchg
sub
mov
adc
hlt
cmc
jno
insl
cmp
inc
in
std
inc
or
add
daa
add
pop
and
mov
jg
pop
ljmp
or
jns
add
mov
shlb
sub
sbb
push
leave
cmpsb
jo
mov
mov
nop
movsb
dec
sub
jo
push
js
xchg
sbb
lret
fcomps
adc
je
xlat
push
or
pop
adc
jo
das
movsl
loopne
pop
inc
sti
mov
add
insb
fs
mov
xchg
scas
pop
and
cmp
jno
dec
jb
js
cltd
adc
lahf
sub
dec
pusha
adc
fwait
sub
popf
mov
sub
inc
mov
mov
sbb
mov
lea
jb
push
add
call
cmp
ss
pop
push
push
mov
xchg
xor
xchg
aad
add
sub
sub
loope
ss
jnp
fdivl
xlat
loope
cltd
ficomps
cwtl
ds
dec
cs
push
adc
popa
pop
or
push
jns
xchg
sbb
xor
push
add
icebp
cld
mov
push
out
pop
bound
test
jns
int3
inc
cmp
das
addl
add
pop
jns
mov
shll
pop
in
cmpsb
adc
pop
pop
lahf
mov
adc
cmp
out
or
hlt
jo
imul
in
lea
xor
push
imul
xchg
mov
adc
je
jno
push
mov
jbe
dec
adc
mov
jmp
pop
and
push
fnstcw
sbb
paddb
mov
imul
ds
fcompl
aam
in
jg
xchg
inc
mov
pop
inc
jnp
pop
push
or
inc
dec
cmpsb
fimuls
fcoms
sbb
mov
mov
sbb
add
lcall
in
lock
scas
orl
pop
mov
mov
inc
adc
jp
test
cmp
inc
pop
daa
das
fldcw
mov
rcl
lahf
adc
jnp
mov
jno
ret
rorl
and
sahf
mov
mov
lds
or
and
push
pop
adc
pop
pop
inc
sub
pop
mov
mov
test
add
push
adc
andl
jp
out
loopne
xchg
cwtl
push
fs
add
add
sahf
jns
mov
xchg
movsl
mov
inc
add
inc
jmp
shrb
or
das
clc
dec
rcrb
mov
push
push
xchg
lds
add
mov
into
add
pop
cmpsl
ja
mov
inc
shll
dec
loopne
out
test
dec
push
popf
rcl
loop
insl
or
mov
push
loop
adc
mov
inc
dec
push
into
je
mov
cmpsl
popf
lret
mov
test
es
jp
mov
nop
push
cltd
inc
sbbb
imulb
outsl
sbb
xor
fmulp
push
std
cmp
je
dec
dec
jno
rcrb
mov
dec
subb
js
outsb
dec
test
ljmp
cmp
daa
jecxz
sbb
pop
into
fwait
mov
push
sub
testb
je
jb
mov
mov
adc
cmp
in
mov
movsb
xchg
mov
xorb
scas
push
push
push
jns
xchg
mov
jp
jecxz
sub
mov
push
mov
or
jb
jp
inc
aam
mov
inc
test
jg
cs
inc
xchg
sarl
add
je
or
add
cmp
mov
mov
outsl
inc
mov
adc
dec
test
inc
mov
jbe
xchg
dec
test
outsl
adc
ja
sbb
inc
fwait
shlb
cmp
or
xorl
mov
iret
pop
sub
dec
cltd
lcall
test
cmpsb
xor
cli
hlt
cmc
imul
dec
xor
push
pop
pop
sub
push
adc
sub
test
sti
push
pop
push
jo
sub
cmp
dec
xchg
or
inc
push
fucomi
inc
call
pop
add
fcomip
push
ret
imul
sarl
mov
adc
rcrb
inc
cmp
or
fstpt
fcompl
and
jmp
xchg
mov
ds
aad
stos
or
lahf
rorb
movsl
je,pt
mov
pop
aam
lahf
sub
daa
push
dec
test
push
mov
dec
jg
dec
shl
xor
sub
mov
and
cmpsb
in
mov
inc
mov
inc
fwait
repnz
testb
dec
inc
xchg
ret
xchg
sub
cmpsl
xchg
pop
push
mov
movsb
sarb
and
hlt
add
xor
js
mov
std
jl
sbb
sub
mov
enter
cmp
and
sbb
mov
inc
mov
pop
rcrl
inc
lods
push
cmp
sub
aad
out
call
cmp
mov
jb
clc
sbb
add
les
sub
or
cmpsl
lcall
xor
mov
sub
sahf
mov
push
mov
fidivrs
dec
inc
in
test
lock
jge
adc
mov
dec
add
mov
mov
aas
test
mov
mov
fnsave
pushf
sub
push
or
test
mov
mov
xchg
fstp
jno
scas
inc
int3
ja
mov
add
int
mov
fnstcw
add
rcr
mov
insb
fdivr
cmp
push
xor
roll
rcrb
aas
scas
mov
mov
xchg
les
mov
push
mov
data16
mov
adc
xor
fdivrl
mov
xchg
loop
mov
push
call
lds
adc
xor
subb
cmp
pop
mov
xchg
iret
lahf
fldz
sub
jle
and
pop
inc
pushf
or
push
xor
dec
popa
jnp
cltd
xor
aam
xor
decl
fisttps
fwait
sub
add
popa
aas
inc
push
mov
jmp
js
in
adc
movsb
dec
xor
fildll
cli
push
inc
rorb
test
xchg
idiv
lahf
daa
int3
inc
xchg
or
bound
mov
cmpsl
testl
in
int
pop
mov
les
ja
mov
mov
ds
push
leave
push
ficoml
and
ret
in
push
mov
xor
jne
imul
mov
in
js
mov
dec
lea
mov
mov
rcll
es
data16
fisubrs
aaa
push
leave
mov
lds
ss
out
je
sub
out
scas
pusha
lcall
inc
ss
jne
es
neg
sbb
and
adc
out
ljmp
stos
decl
pop
loop
int3
clc
sub
outsl
add
push
cmpsb
movb
or
ds
test
inc
in
sbb
jno
scas
mov
xlat
xchg
into
rclb
ljmp
add
adcl
pushf
mov
ret
push
out
mov
sbb
sub
push
sbb
add
popa
adc
lret
test
sbbl
push
sub
adc
cmp
in
and
pop
mov
nop
insl
insl
mov
addb
movsb
pop
rorb
adc
les
decw
dec
lea
clc
fsubrl
cmpb
and
cld
ficompl
sbbb
cwtl
aad
mov
inc
jl
xor
cwtl
sahf
push
inc
imul
bound
xorb
jmp
jp
test
aam
addr16
clc
fisttps
pop
sti
bsr
ss
jge
push
ret
cmp
push
xchg
sbb
sub
push
int3
loop
cwtl
arpl
lods
into
xchg
dec
xlat
sub
aam
insb
cwtl
adc
sub
cwtl
mov
ja
jae
jnp
jmp
loope
xorl
enter
lods
int
push
mov
sub
in
aad
and
popf
shlb
xchg
lods
dec
aaa
mov
leave
inc
sub
cmp
das
je
es
dec
mov
iret
shll
fidivrl
int
ret
jb
lea
jge
sahf
push
pop
xlat
mov
sahf
cs
fdivs
mov
push
pop
mov
sbb
imul
cmpsb
mov
xlat
rcrb
jns
xor
dec
mov
add
mov
leave
cs
fidivs
mov
dec
cld
push
clc
std
testl
add
and
cltd
jno
xor
fbstp
rcrb
and
inc
icebp
roll
jns
push
or
mov
adc
outsl
repnz
push
aas
and
dec
add
stos
sbb
xchg
daa
xor
negl
sub
aam
scas
pop
outsb
dec
cmc
mov
jl
push
push
mov
cmc
outsb
sbb
aam
lods
xchg
pop
mov
pop
push
arpl
call
mov
or
mov
stos
inc
aaa
lret
fidivs
jb
dec
inc
cld
dec
imul
loope
pop
pusha
or
dec
mov
and
xchg
or
popf
in
lea
mov
jle
jb
mov
xor
or
test
leave
add
xor
loope
cmp
and
jmp
sbb
fstpt
push
ljmp
jno
xor
enter
xchg
xchg
dec
lds
lret
pop
push
and
imulb
mov
popf
cmc
inc
insb
ljmp
and
xchg
sub
xchg
enter
lahf
inc
ljmp
push
repz
add
sub
or
test
xlat
jge
andl
test
popf
xchg
mov
test
sub
and
mov
lahf
sub
mov
rclb
xchg
pop
cwtl
lock
rcrl
ja
pop
movsb
fstps
arpl
pop
pop
int
or
stos
jecxz
mov
inc
and
divb
sub
pop
adc
jg
xchg
push
mov
ficoms
sbb
int
cmpsl
jb
aam
add
push
jp
and
imul
cmpsb
lahf
scas
mov
inc
mov
mov
sahf
scas
icebp
int
mov
sub
lds
xchg
mov
test
push
jae,pt
jle
imul
mov
test
flds
movsb
paddsb
jbe
pop
xchg
ret
loope
xchg
xor
dec
cwtl
mov
shl
sahf
ljmp
sbb
sbbl
mov
lret
aam
in
mov
and
sarb
out
mov
neg
sahf
movsb
mov
icebp
rorb
sbb
int
jne
cmc
dec
and
lea
cmpb
test
or
mov
add
ja
jns
sbbb
aas
imul
xchg
adc
into
jecxz
jle
popl
mov
shlb
mov
jne
mov
cmp
cmp
fidivl
daa
sub
std
int
dec
std
mov
pop
movsb
ret
mov
js
jno
rorl
out
in
cmp
sub
mov
fs
cmp
mov
cmpsb
imul
xor
cli
or
popa
sub
call
and
mov
inc
sbb
and
pop
sbb
pop
mov
aas
mov
lret
popl
sbb
sti
dec
mov
into
lret
loop
mov
outsb
fsubp
xchg
push
add
mov
jae
dec
mov
mov
test
pop
cltd
enter
or
sahf
mov
cli
dec
xor
mov
ret
jge
subb
xor
cmp
mov
fdivl
push
mov
in
adc
adc
aad
inc
push
cmc
inc
stos
shlb
subl
cmpsb
into
push
scas
xor
xlat
notl
js
inc
mov
xchg
cmp
xchg
pop
mov
lods
das
and
mov
mov
push
mov
push
shr
sub
orl
fldl2t
push
mov
jp
xor
sub
xchg
cwtl
gs
push
lea
cmp
xchg
xor
xchg
mov
sub
jbe
jecxz
sti
jae
pop
lods
mov
cs
jae
insl
xchg
inc
mov
fsubrp
insl
outsb
sahf
mov
and
mov
xchg
jecxz
inc
cmp
ds
in
addl
daa
sar
push
fildl
stos
cld
das
test
fnstenv
xchg
sub
idivb
imulb
sbb
sub
lea
mov
cmpb
sbb
dec
mov
mov
std
cwtl
or
xor
cmpsl
fisttpl
mul
mov
das
lds
xor
pop
out
dec
cmp
ja
loopne
and
subb
lret
fdivl
mov
dec
pop
fsubs
cmp
test
dec
aaa
fdivrl
xchg
fldcw
and
add
push
repnz
mov
mov
add
shll
fwait
negb
frstpm(287
stc
cmp
pop
fidivrl
mov
inc
cmp
inc
leave
or
test
mov
xchg
cmpsb
mov
sub
jmp
push
enter
jae
popf
stos
cs
lret
das
sbb
jb
dec
test
sub
pushf
cld
aam
mulb
ss
xor
cld
gs
sbb
mov
push
fidivrl
scas
repz
cmp
mov
sub
sbb
push
scas
inc
pushfw
call
lods
jns
fcoms
pop
add
mov
pop
adc
and
jg
mov
das
jecxz
negb
add
mov
add
std
mov
and
fistpll
and
push
cmp
popa
dec
popf
arpl
aam
xor
mov
cs
sahf
sub
mov
loop
stos
inc
leave
sub
push
mov
dec
addr16
call
jb
in
mov
es
fmull
repz
cwtl
jge
lods
mov
xchg
adc
scas
inc
test
mov
push
jno
jnp
pusha
lea
inc
jnp
dec
lret
aaa
adc
fistpll
cmp
inc
push
mov
or
push
dec
in
inc
xor
loopne
xchg
nop
mov
pop
scas
adc
iret
adc
out
jge
jns
mov
shll
aam
and
rcl
mov
xlat
std
imul
xchg
adc
add
mov
mov
dec
sbb
add
cltd
and
add
xchg
int3
adc
push
mov
aas
push
mov
cmp
mov
mov
loope
push
xlat
sub
pop
xchg
es
outsl
inc
shll
sub
daa
mov
out
mov
inc
xor
dec
int
xchg
add
int3
mov
mov
sti
dec
lock
shr
idivl
scas
leave
and
sub
cmpsl
stos
pop
div
das
cmp
inc
pop
jmp
cltd
iret
stc
into
jge
popf
push
daa
enter
das
mov
sahf
cmp
or
imul
shll
shlb
and
and
jg
shll
adc
mov
das
pop
bound
mov
mov
out
pop
mov
rcr
xor
nop
pushf
sub
pushf
int3
mov
push
adc
sub
push
mov
aad
faddl
and
xor
jo
mov
pop
add
js
mov
inc
sbb
dec
sahf
xor
inc
lock
pmulhw
sbb
dec
pop
push
push
pop
cmpsl
mov
pop
loope
das
mov
into
mov
ficomps
jp
xchg
add
mov
mov
xor
imul
pusha
dec
ret
jecxz
out
sarb
adc
andb
stos
push
les
inc
or
lea
aam
adc
je
dec
int3
ss
das
pushf
outsl
cltd
enter
mov
popa
xlat
push
mov
inc
loop
jmp
neg
shl
ficomps
sub
fstl
ds
addr16
jmp
dec
mov
mov
notb
xor
mov
repz
paddb
push
pop
int
xchg
roll
fidivrs
mov
dec
addr16
movsb
inc
outsl
xor
jmp
mov
fimull
rorb
xchg
jle
add
stos
jbe
inc
pushl
and
mov
push
gs
hlt
dec
cmp
dec
sub
pop
loopne
sbb
and
inc
jg
lds
xchg
pop
test
fildll
fsts
cli
mov
cmpl
push
movsb
icebp
stos
shl
inc
xadd
loopne
js
scas
xor
icebp
mov
pop
das
push
jne
enter
inc
scas
ret
fsts
pushf
cmp
inc
push
cs
push
pop
and
push
lea
fucom
fsts
mov
stc
insl
cld
xor
jg
or
fcmovbe
jno
into
mov
sbb
stos
cli
scas
repz
cli
xchg
inc
or
mov
inc
inc
mov
pop
mov
fwait
cs
andb
movsl
test
inc
out
addr16
mov
adc
inc
jne
popa
rolb
rclb
cld
push
popf
dec
in
push
out
dec
push
ds
mov
shl
push
adc
cmp
mov
pop
ds
aaa
inc
push
xchg
xor
sbb
std
pop
mov
jl
add
xchg
mov
mov
movsb
xchg
std
jle
jp
bound
les
jmp
lret
movd
aas
dec
sbb
call
push
mov
push
jle
sbb
cmc
jbe
or
sahf
call
popa
sub
pop
fnstcw
mov
test
stos
inc
pop
cltd
add
or
sbb
fisubrl
xor
mov
xor
cs
loop
iret
sub
jecxz
mov
std
xchg
pop
lds
jge
cmp
vpmuludq
sbb
push
loopne
stc
std
fnstenv
scas
shll
cmp
pop
mov
inc
dec
sarb
movsb
psubb
cmpsl
and
jnp
pop
mov
adc
push
movsl
test
mov
sbb
mov
incb
cmp
jg
xchg
and
mov
or
das
loopne
mov
dec
and
mov
pop
push
xlat
das
inc
jnp
pop
mov
ja
call
int3
movb
jl
movsl
jmp
ss
clc
sub
mov
mov
jae
mov
mov
shl
jg
test
pusha
into
loopne
add
mov
call
or
mov
inc
int
andl
outsb
in
inc
mov
lock
sub
and
inc
mov
cmp
loop
mov
dec
dec
jg
jnp
ds
bound
push
loope
bound
testl
hlt
hlt
dec
add
dec
sub
leave
cmpsb
push
frstor
lret
icebp
int3
mov
add
and
jb
filds
fldl
add
fwait
or
sub
jno
cmp
xor
sbb
jno
jp
inc
adc
push
loopne
pushf
enter
insb
push
shll
jo
xor
aas
or
cli
or
push
sti
lret
add
repnz
test
pop
fidivs
pop
js
stos
mov
sbb
scas
or
dec
fidivrl
mov
ret
xchg
jge
sbb
je
push
insl
rorb
lcall
push
ja
mov
adc
xor
or
sahf
scas
es
jnp
sbb
jge
imul
xchg
imulb
repz
sub
xchg
ud2
jge
adc
iret
orl
mov
insl
fildl
pushf
hlt
mov
scas
and
push
push
jae
xor
out
dec
lret
adc
add
mov
lret
rcl
nop
pop
xchg
jnp
mov
lret
xor
inc
push
add
push
lock
enter
dec
test
icebp
lahf
std
mov
adc
shlb
xchg
dec
lahf
inc
mov
lahf
xorb
cmp
mov
adc
sti
or
cmp
cmp
jl
xchg
sbb
daa
std
inc
mov
sub
mov
not
dec
fwait
xor
push
addr16
inc
xchg
push
mov
mov
fs
lret
into
sub
fwait
push
cmp
ret
dec
jle
cltd
cmpsl
mov
cmp
add
dec
les
cmp
xchg
push
sbb
jbe
sub
stos
call
insl
mov
inc
and
mov
xor
cmp
mov
pop
jnp
out
lret
add
push
out
push
lcall
test
push
adcl
jne
jg
dec
fstpl
out
pop
sbb
mov
lahf
inc
imul
adc
rcr
push
adc
cmovae
cmpb
ds
dec
shrb
mov
rcll
in
cmp
faddl
jne
pop
push
out
dec
out
pop
or
mov
sbb
jb
jns
and
and
test
out
lds
push
hlt
mov
lahf
pop
mov
push
and
in
jmp
push
push
scas
pop
arpl
push
sbb
jl
dec
add
in
add
icebp
test
xchg
out
sahf
lahf
pusha
cmp
jge
je
cltd
mov
sbb
in
pushf
add
scas
and
jnp
in
int3
pushf
setbe
cmp
loop
xlat
cmp
gs
out
mov
gs
push
sub
pop
jg
dec
mov
aam
inc
shlb
mov
lcall
xchg
adc
mov
lahf
stos
jb
and
jmp
push
addr16
rolb
repnz
and
cmpsl
int3
aad
movsb
push
jno
cld
in
leave
scas
mov
pushf
fmul
leave
mov
outsb
dec
pop
cmp
ljmp
sub
loopne
int
add
mov
xor
push
pop
sbb
je
lock
push
pop
movsl
ja
test
aam
or
fdivrs
movsb
int
lea
sbb
xor
cli
add
lock
test
pusha
data16
add
sbb
pop
xor
lahf
aad
push
adc
cmp
jae
scas
sbb
jmp
and
dec
xchg
sub
push
xor
popa
loopne
out
repz
mov
inc
pop
movsb
fisttpl
shll
imul
lods
sbb
inc
shll
shrl
js
adc
push
adc
xor
psubq
push
mov
clc
mov
in
jno
mov
cltd
cwtl
shufps
js
rclb
aas
sbb
cmpsl
loopne
orl
mov
scas
cmp
stc
or
test
adc
hlt
mov
lock
push
cwtl
dec
sbb
pop
popa
push
push
sbb
wrmsr
lahf
ljmp
in
inc
daa
lods
daa
lock
je
cld
pop
and
ljmp
xor
sahf
mov
mov
iret
mov
insb
lods
decl
jns
lahf
ret
test
fiaddl
mov
mov
cmpsb
sahf
mov
mov
in
ja
inc
xor
push
fstps
lods
pop
daa
pushf
pop
rcr
inc
xchg
rclb
mov
inc
mov
pop
xor
sahf
cmp
jb
loop
icebp
push
mov
jmp
mov
in
mov
scas
xchg
dec
mov
xor
movsb
shlb
mov
insl
xchg
fwait
xorl
adc
arpl
fimull
test
or
add
daa
inc
inc
xor
popf
xor
out
sbbb
add
lock
bound
jns
std
aam
lret
int3
mov
cltd
adc
push
or
outsl
jo
add
rolb
inc
mov
push
cmp
xchg
lret
dec
lret
scas
xchg
mov
cmpsl
jnp
pushf
mov
out
std
jmp
ret
xchg
outsb
push
dec
pop
push
jge
sbbb
movsb
rolb
fdivl
jo
xor
mov
fdiv
outsl
rolb
add
sbb
mov
dec
cltd
lret
shll
aaa
jg
les
sbb
push
out
mov
push
sbb
loop
ret
scas
mov
outsb
pop
daa
fadds
mov
jns
popa
jnp
xchg
jg
sub
mov
stos
xor
and
or
dec
lret
sbb
imul
outsl
and
frstor
decl
cmpsl
cld
sti
je
pop
iret
mov
pushf
dec
pop
add
inc
and
dec
inc
dec
movsb
lret
adcl
push
adc
mov
pop
test
dec
adc
mov
xchg
jg
adc
or
pop
jno
jne
leave
add
and
in
inc
add
les
cmc
notl
subb
jno
jnp
or
xchg
fisubrl
add
adc
cmpsl
pop
xchg
cmpsl
mov
test
mov
push
addb
push
pop
aas
out
je
ret
pop
into
jno
hlt
pop
int
dec
mov
mov
ds
mov
ja
stos
cmp
clc
into
int
sahf
dec
xor
aaa
sti
test
dec
push
sbb
push
push
cmp
pop
push
inc
call
icebp
loope
aad
fwait
pop
movsb
cmp
pop
mov
mov
mov
sbbb
mov
outsl
mov
mov
jmp
xor
mov
push
jp
mov
aaa
push
inc
jb
fs
out
lret
cmp
negb
push
mov
mov
sub
sti
sbbb
mov
push
mov
aad
or
cli
xchg
mov
mov
lcall
jg
std
mov
xchg
jp
mov
add
push
jae
sarb
push
jns
add
inc
lea
mov
cmc
in
sub
fiadds
ficompl
xor
mov
pop
xchg
mov
xlat
out
add
addb
add
pop
scas
stos
mov
shl
ja
pop
mov
xchg
inc
inc
repnz
scas
insb
out
or
fnstcw
je
repnz
and
xchg
pop
jb
mov
lahf
cmp
jle
inc
leave
push
orl
mov
out
out
sub
jno
or
aaa
std
sub
leave
jmp
sub
lcall
push
aaa
push
dec
and
test
sarl
iret
outsl
das
cwtl
mov
lods
pop
icebp
cmpsl
iret
xchg
pop
stos
jp
out
xor
push
xchg
inc
dec
outsl
mov
pop
pop
ds
iret
jle
mov
mov
popa
add
loop
roll
icebp
or
imul
mov
aaa
imul
fisttps
stc
insb
fistpl
sbb
shll
add
sub
or
push
out
inc
mov
ja
xor
add
shll
aam
xor
add
decl
ret
mov
addr16
mov
outsl
scas
fcoms
orl
sti
insl
mov
mov
popa
addr16
nop
or
jns
fnstcw
and
fcmovnbe
jo
cld
subb
in
jns
add
imul
pop
sbb
std
add
inc
jno
in
in
add
int3
jecxz
mov
cmp
fstp
negb
cwtl
gs
int3
ret
or
hlt
pushf
les
test
adc
jbe
or
mov
add
pop
and
sbb
test
mov
mov
enter
aas
or
xor
mov
pop
in
dec
mov
cmp
imul
movsl
jne
push
outsb
clc
fcoms
mov
xchg
sahf
push
fsts
and
jbe
xchg
mov
arpl
mov
mov
xchg
sahf
pop
dec
mov
ficoms
mov
stc
xchg
push
pusha
or
mov
mov
adc
fidivs
leave
sub
dec
roll
sbb
loopne
insl
mov
leave
jl
jge
adc
test
ja,pt
xor
sub
fmul
pop
push
mov
sarb
adc
cmp
aad
aas
sarl
pop
inc
push
inc
nop
or
and
add
add
loope
mov
push
lcall
sbb
dec
inc
inc
xor
mov
xor
aas
xor
inc
mov
sbbb
xor
xchg
add
mov
mov
sbb
xor
adc
enter
and
leave
dec
gs
dec
xchg
or
jbe
mov
push
or
cwtl
cbtw
je
dec
and
in
in
lret
dec
test
in
lcall
push
pop
add
out
adc
iret
rclb
jne
xchg
ja
push
daa
jbe
in
xor
filds
ficomps
mov
scas
gs
jmp
push
and
add
data16
adc
rorl
mov
xchg
cli
imulb
jb
imul
jecxz
adc
scas
fwait
outsl
mov
mov
fcomp
mov
jecxz
jne
xchg
lods
xor
push
sbb
je
cwtl
xchg
cmp
jge
lret
xor
cmp
inc
adc
adcl
icebp
stos
jns
in
mov
dec
out
insb
dec
aaa
nop
fs
adc
jo
xor
mov
ljmp
scas
mov
pop
push
in
mov
push
sub
jg
out
fcmovne
mov
adc
aas
jl
xor
jge
ret
mov
pop
dec
lock
xchg
out
std
push
roll
pop
sbb
mov
mov
popa
or
out
gs
ljmp
mov
scas
xchg
cmp
movsb
outsb
lods
stos
jo
in
adc
xor
pop
popa
cltd
add
cs
mov
cmp
and
cmpsb
sti
das
movsl
rcr
push
mov
mov
cmpsl
jl
sahf
dec
bound
cmpsb
movsl
jne
mov
or
aad
sahf
mov
loope
iret
and
imul
jo
push
pop
outsl
or
sub
cmc
int
roll
shll
int3
jge
into
out
jae
jp
dec
lahf
in
and
ror
push
xorb
fstpl
or
and
clc
imul
sub
mov
xlat
and
jecxz
loope
mov
inc
or
cmp
daa
adc
jg
mov
or
rcl
dec
mov
shl
int
inc
pop
shr
jb
in
and
push
fs
in
lahf
pop
lods
xor
xor
je
cld
mov
push
or
mov
or
mov
pop
stos
xchg
int3
jns
ss
mov
push
inc
std
sbb
add
jle
dec
out
ljmp
addr16
mov
in
xor
lock
mov
lds
dec
fldenv
hlt
jge
jnp
ss
leave
ds
inc
divl
outsb
push
adc
nop
xchg
loop
mov
insb
inc
shr
jae
sub
loope
sub
lahf
fucomip
pop
xchg
cmp
fdivl
adc
out
sub
mov
push
cmp
add
xor
jne
out
add
push
cmpsb
adc
mov
cmpsl
cltd
dec
test
insl
nop
pop
and
nop
adc
cwtl
out
inc
push
fldl
push
rolb
in
push
sarb
jg
out
leave
mov
call
mov
mov
out
les
mov
cmp
and
outsl
jb
pop
jmp
out
fcoml
sahf
add
mov
cmp
inc
enter
int
gs
mov
mov
sub
insb
push
inc
mov
cmp
shlb
call
pop
out
sti
xor
pushf
push
shll
nop
xchg
jbe
mov
addr16
mov
or
rol
sti
mov
cmp
nop
sbb
gs
mov
sbb
test
rcrl
sbbl
fstp
in
pop
ds
sti
mov
pop
sub
xchg
xor
mov
inc
add
enter
sbb
cmc
push
call
pop
push
sbb
andb
test
movl
mov
out
inc
in
or
push
pushf
mov
mov
cmc
cli
out
dec
mov
rorb
pop
lock
jmp
fwait
mov
rolb
shll
pop
popl
and
pop
inc
bound
mov
adc
std
bound
enter
and
jae
clc
pop
ja
mov
in
adc
add
jmp
rolb
in
xchg
mov
pop
mov
add
lret
cmp
es
cmp
shl
dec
test
fs
aas
dec
jecxz
stos
xchg
or
nop
jb
mov
movsb
push
adcb
mov
push
imul
sub
and
icebp
stos
jnp
sub
fwait
xor
pop
in
inc
mov
jno
push
sub
out
push
roll
push
andb
adc
loop
ret
mov
out
scas
ret
inc
mov
or
xor
jae
idiv
outsl
fmull
test
or
loopne
jp
xchg
call
or
pusha
scas
jnp
scas
push
fwait
pop
ret
lods
test
pop
mov
mov
outsl
cmp
mov
and
xchg
lcall
rcrb
std
rcr
fimuls
jl
jae
enter
imul
in
cmp
mov
jg
sbb
daa
pop
out
sub
push
in
sbb
es
xchg
mov
clc
sub
repnz
mov
test
xor
dec
mov
fs
mov
jl
xchg
aaa
ja
jo
or
adc
mov
stos
push
out
cmpsl
mov
fildll
sub
cmp
faddl
mov
in
lods
rdmsr
fs
jle
shrb
mov
mov
sahf
fldt
sbb
cmc
pop
jnp
jp
arpl
sub
faddl
xor
lock
sub
or
ja
adc
push
and
pop
jae
imul
ds
fs
ljmp
pusha
xor
xchg
dec
mov
xchg
sahf
inc
pop
adc
mov
xchg
push
inc
lcall
xor
aaa
nop
sub
ja
lahf
repz
roll
enter
outsb
push
enter
jl
push
jno
sar
mov
jl
arpl
inc
je
cmp
sub
bound
mov
and
out
addr16
cld
fidivrs
cmp
push
outsl
pop
add
push
fld
xchg
xchg
not
sub
outsb
lret
loope
jns
insb
push
addr16
jg
inc
mov
add
nop
inc
mov
hlt
out
fs
dec
or
xchg
scas
cmp
lods
lahf
dec
les
int
xchg
inc
mov
out
xchg
pop
xor
sbb
pop
in
mov
or
lret
xchg
repnz
mov
jmp
jbe
fistpll
mov
inc
int
scas
jnp
push
cmc
fstpt
add
jb
lock
or
fwait
hlt
or
push
cmp
add
je
aas
dec
or
lret
je
fwait
notb
cltd
notl
subl
jg
sub
addr16
adc
scas
mov
sub
jge
bswap
jmp
push
fcmovu
inc
push
out
ljmp
jge
add
or
fxch
nop
jp
leave
data16
ja
cmc
popl
pop
lcall
outsl
repnz
mov
lret
xor
mov
enter
pop
int
cmc
mov
pop
pop
test
mov
ret
ret
rorb
test
jae
xabort
mov
sbb
insl
loope
cld
mov
arpl
xchg
pop
mov
push
push
loope
adc
sub
sub
xorb
imulb
in
mov
xchg
or
cmpsb
lods
nop
sub
and
pop
sbb
cmpsb
push
aaa
xorl
jecxz
test
cmp
sub
in
shr
jge
gs
imul
dec
and
push
jmp
in
and
dec
adc
cmp
lcall
inc
pop
or
sti
test
into
and
pop
or
rcl
mov
adc
out
dec
push
enter
xchg
mov
dec
lock
andl
nop
sbb
imul
sub
sti
or
jge
movsl
insl
in
mov
and
adc
lcall
insb
xchg
add
jle
or
jbe
repnz
mov
insb
out
imul
arpl
jle
neg
push
test
push
sub
mov
loopne
or
xchg
mov
cwtl
iret
fstpt
or
divb
inc
lret
pop
add
jmp
fs
cmp
jne
sbb
mov
aam
in
daa
loop
rcrb
lret
shr
mov
mov
pop
lods
test
cmp
test
lret
jmp
sahf
fisttpl
iret
mov
test
sbb
push
scas
leave
jbe
push
cltd
jp
cld
xchg
sti
xchg
or
jo
mov
jno
out
clc
jecxz
cltd
cs
orb
sub
xor
popl
mov
stos
push
fsubr
mov
or
xchg
mov
mov
adc
pop
and
lds
mov
inc
jnp
repz
stc
leave
or
mov
push
xor
fnstenv
enter
jo
sarl
mov
mov
pop
xor
mov
jno
xchg
and
mov
jne
jg
mov
jecxz
inc
out
aad
enter
sbbl
add
fidivrl
inc
push
stos
ret
inc
cmp
and
es
test
xor
icebp
inc
and
xor
jnp
scas
inc
or
lret
cltd
dec
mov
and
aaa
xchg
fidivs
add
pop
adc
leave
push
test
cmp
sub
mov
popl
loop
adc
imul
cli
xor
sbb
or
out
dec
pop
stos
fdivs
cmp
xchg
sub
popf
ret
jecxz
stc
nop
xchg
push
dec
and
ret
pop
repnz
mov
pusha
imul
adc
adc
adc
pop
jge
rcr
or
jns
pusha
inc
lret
mov
lret
in
call
into
sub
in
sbb
out
mov
sub
add
push
pop
sub
jns
cld
mov
in
into
xor
scas
adc
stos
mov
cmp
xchg
pop
mov
loop
and
add
shl
and
inc
cmpsb
dec
lea
lods
fxch
mov
in
jnp
xor
jmp
dec
test
das
jmp
xchg
adc
ja
sahf
jmp
cs
ja
push
mov
test
xchg
xor
cld
add
iret
in
xchg
adc
std
cmp
jge
in
test
dec
jnp
out
lret
shl
addr16
int3
adc
jmp
sub
fdivrs
stc
cmp
xchg
cmp
in
into
xor
mov
mov
into
shll
mov
push
or
shrl
sbb
cwtl
mov
xchg
push
fldt
cwtl
ljmp
hlt
pushf
cmpl
mov
mov
test
mov
pusha
jbe
xchg
push
lock
push
out
jns
pop
add
rcll
dec
lret
adc
cmp
mov
sbb
mov
outsl
mov
and
in
and
adc
dec
mov
jge
jp
mov
push
and
cmc
jl
xlat
cmp
xchg
jno
xchg
pop
jg
cmp
movsl
test
push
xchg
cmp
movsb
popa
jnp
sarb
ja
push
jmp
jp
fimuls
insl
push
or
stos
dec
mov
xlat
pop
push
adc
outsl
jne
pop
aas
jne
mov
mov
mov
sbb
gs
jg
inc
and
cs
ss
lea
sbb
add
dec
lahf
andl
cwtl
dec
push
jl
fucomi
push
ljmp
bound
lea
inc
mov
cmpsl
xor
jle
push
push
mov
dec
in
sub
xor
aaa
sbb
pushl
inc
xor
arpl
sub
mov
push
or
and
stos
add
pusha
inc
addr16
adc
mov
mov
xor
inc
or
sbb
clc
sub
testl
outsb
cmpsb
xlat
lahf
xchg
dec
and
int
mov
test
outsb
sub
aam
xorb
cmp
in
cltd
lock
pop
ljmp
int3
pop
fisubs
jl
es
loop
out
jae
cmp
lock
insl
mov
es
cmp
sbb
xchg
flds
pop
cmp
fmuls
inc
gs
push
sbb
bound
push
fs
or
push
jle
add
je
test
adc
xorb
mov
and
inc
mov
mov
mov
sbbb
gs
mov
ret
and
and
sbb
pop
xor
sbb
mov
sbb
lods
stc
je
ror
lea
cwtl
lds
mulb
cmpsb
add
pushf
xchg
js
cmp
lcall
sub
or
nop
xchg
mov
cs
jae
out
in
push
inc
jmp
and
sbb
and
push
dec
xchg
fsubr
iret
outsl
fwait
pop
out
in
add
add
fwait
decl
mov
into
mov
cmp
add
in
out
sbb
mov
adc
pop
sub
mov
or
mov
xchg
mov
add
xchg
sbb
loope
jmp
dec
int
out
push
pop
shlb
mov
pusha
jge
mov
cld
arpl
les
xor
out
icebp
sbb
lret
mov
pop
fs
and
jg
negb
testb
jne
sub
lahf
lods
leave
push
cmp
or
and
pop
or
stos
xchg
test
notl
mov
xlat
call
mov
shr
jecxz
inc
repz
cli
inc
sub
cmpsb
or
pop
pop
pop
movl
mov
mov
cmc
jae
cmp
mov
popf
inc
xchg
mov
pop
add
pop
mov
push
jnp
bound
push
std
sub
bound
mov
fldl
xchg
mov
fadds
fs
add
add
xor
sub
ret
fildll
jns
push
in
cmpsb
lods
pop
mov
adc
lods
or
stos
bound
xor
mov
xchg
add
stos
jb
scas
jmp
xchg
cmp
mov
in
sbb
iret
dec
or
xchg
icebp
icebp
add
or
xor
imul
lock
lods
pop
mov
nop
das
inc
out
repnz
cmpsl
gs
insl
and
cmp
outsb
fmulp
mov
jg
ds
inc
mov
or
jp
ja
mov
jmp
aam
fmull
add
ljmp
pop
xor
cmp
nop
pop
into
sub
or
xor
ror
sbb
lods
push
loop
inc
mov
pop
push
pop
inc
ret
aas
in
mov
outsl
cmpsl
iret
jns
mov
les
ss
pushf
ret
stc
and
rclb
test
add
push
mov
push
int
sbb
lret
dec
subb
xor
fs
je
xorl
xchg
inc
call
xor
jmp
daa
into
neg
jge
lods
xor
mov
dec
das
xchg
mov
inc
rol
or
xchg
shrl
imul
dec
lret
je
or
cmp
cwtl
push
sub
fsts
popa
mov
adc
inc
lahf
test
into
jge
or
push
icebp
enter
pop
sub
rdtsc
cmp
sahf
mov
rol
and
adc
sbb
push
lahf
sub
repnz
mov
rcrb
cmpsb
and
out
push
push
scas
out
andb
pop
and
jecxz
adc
mov
pop
push
mov
stc
sub
cmp
data16
scas
aam
mov
int
into
inc
das
aaa
xor
repnz
push
in
out
lret
lock
es
and
xchg
mov
push
mov
jg
cld
sub
mov
jmp
out
jl
cmpsl
pop
cmp
and
in
imul
push
mov
pop
pop
js
jmp
xor
out
jno
das
or
sub
ss
bound
push
sub
sub
outsb
mov
lock
and
add
sbb
pop
pusha
rolb
lcall
in
cmp
sbb
cmpsl
cmp
ret
pavgw
mov
add
pop
shrb
negl
or
pop
aas
gs
pop
xchg
mov
xor
cmpsb
shl
mov
fwait
dec
fwait
shl
aaa
or
inc
mov
je
dec
int3
popa
cmpsl
sbb
push
shlb
scas
mov
pushf
sub
xchg
dec
dec
cmp
imul
adc
mov
dec
gs
lret
jae
lds
arpl
jo
jmp
sbb
adc
pop
dec
inc
sbbb
iret
movsb
sahf
fsubs
out
push
lock
pop
mov
adc
pop
and
sarb
mul
push
push
xlat
xchg
movsl
pop
push
mov
pop
rcll
xchg
insb
pop
inc
out
cmp
mov
jecxz
ret
aam
push
mov
push
jo
push
sarl
add
outsb
hlt
inc
cmpsb
orl
sub
fs
or
mov
out
push
sbb
orl
cmpsl
ss
and
mov
add
mov
sti
mov
pop
das
jno
ss
stc
lret
cmp
rcll
lock
stos
and
fnstcw
mov
in
sub
movsb
xor
stc
scas
lds
loop
xor
push
sub
mov
cmp
mov
push
push
mov
lock
xchg
xchg
mov
bswap
inc
lahf
addr16
mov
pushf
aas
es
jg
fs
out
js
sahf
pop
cmpsb
fwait
out
icebp
sti
lea
or
add
sbb
xor
repnz
mov
pop
movsl
jno
cld
jg
orb
ret
cmpsb
mov
mov
mov
stos
call
out
or
adcl
lret
cwtl
gs
gs
test
gs
mov
sbb
and
loop
add
gs
jle
mov
ret
std
fsubs
dec
loopne
pop
mov
sti
mov
xchg
call
iret
mov
push
jae
push
enter
ja
sub
pusha
pusha
cltd
lcall
pop
data16
fwait
inc
sbb
popa
nop
cmp
and
outsl
pusha
lods
lods
addr16
mov
shrl
xchg
xchg
std
aad
mov
test
xchg
mov
and
ret
pushf
cli
cmp
pop
nop
and
les
push
rcrl
lahf
jmp
mov
xchg
lahf
sub
lcall
cwtl
js
fbstp
sub
leave
jno
cmp
test
xor
inc
into
out
push
push
out
jl
pop
pop
ljmp
cli
lret
out
popf
ret
sarl
xchg
cld
jb
cmpsb
insl
bound
test
int
lret
mov
sbb
xor
add
push
les
movsb
icebp
out
orb
sub
xor
bnd
mov
arpl
push
stos
and
loope
scas
jecxz
sahf
loope
popa
xor
mov
and
cmp
add
xor
adc
mov
and
pop
pop
jg
stos
and
mov
incl
sub
pop
push
push
dec
adc
test
fistpl
call
rclb
lods
loope
nop
nop
test
push
dec
adc
mov
movsl
push
mov
call
mov
xor
wbinvd
outsb
jbe
mov
aad
mov
dec
inc
rcl
std
fistl
mov
fidivl
movsl
sahf
in
int3
aam
aad
ss
mov
loope
test
and
sbbb
pop
cmc
xchg
aad
dec
addr16
popl
hlt
push
mov
in
inc
fidivl
jmp
mov
cwtl
dec
in
sbb
movsl
data16
dec
aad
jb
mov
or
sbb
stc
add
icebp
sti
jo
push
dec
push
je
fidivrl
xlat
inc
lret
jmp
enter
push
xor
imul
sar
outsl
jo
clc
mov
cld
mov
mov
outsl
mov
and
ds
icebp
icebp
sbb
scas
or
aad
xchg
mul
in
repnz
arpl
imul
int3
inc
divb
mov
and
adcl
aas
pop
add
and
push
jg
dec
imul
cmp
jne
mov
mov
cmp
test
outsb
loopne
mov
insb
add
loope
push
mov
fwait
mov
sti
dec
and
mov
aam
mov
subb
mov
mov
sub
push
inc
das
outsb
cmp
xchg
jo
cltd
std
dec
addl
jmp
cs
loop
mov
push
sarb
int3
xor
jbe
push
and
ret
les
and
dec
outsb
jae
out
pop
in
mov
adcb
xchg
stos
adc
mov
mov
inc
js
pushf
int
insl
pop
sub
inc
and
sub
movsb
cmp
cmc
insb
test
subb
les
cmp
loop
mov
icebp
mov
add
nop
or
int
adc
add
mov
hlt
mov
insb
gs
xchg
and
or
mulb
sbb
jge
or
stos
outsl
xor
je
mov
scas
sbb
or
mov
mov
add
fidivl
js
mov
mov
inc
arpl
lret
nop
and
sub
ja
cli
mov
mov
nop
push
add
jmp
mov
testl
sub
dec
add
ljmp
das
jmp
dec
mov
fwait
lcall
dec
jns
movsb
add
cmpsb
js
and
aad
cmp
js
mov
jne
cmp
sub
dec
dec
mov
sub
pop
ret
jns
dec
imul
jae
dec
add
lcall
out
testl
imul
sbb
sti
test
stos
loop
negb
lret
aad
imul
stos
jnp
das
or
nop
aas
xor
imul
aaa
bts
rol
stos
adc
ds
icebp
sub
lock
dec
shll
pop
xor
and
add
mov
rorb
repz
xchg
sti
push
mov
ss
fisubrl
outsl
int3
shlb
lret
pop
push
add
push
sub
push
xorb
and
pop
outsl
movsb
dec
sbb
lret
sub
and
loop
lock
or
imulb
or
jno
into
jns
ja
or
mov
mov
fisttps
mov
loop
cmp
addr16
daa
mov
mov
lock
ds
lret
mov
lods
push
test
dec
sub
loope
mov
lcall
xchg
push
mov
pop
and
lahf
inc
in
mov
mov
movb
pop
jmp
in
sbb
outsl
insb
dec
fbstp
lea
xor
adc
xchg
xchg
test
mov
fucom
mov
pop
jge
mov
cmc
xchg
int3
movsb
fiaddl
jne
fdivr
dec
scas
lds
and
and
ljmp
mov
jns
out
fwait
mov
cmp
mov
dec
cmp
notl
mov
mov
xor
pop
pop
iret
sbb
jl
lcall
cld
inc
mov
dec
cld
pop
std
sub
dec
pop
inc
mov
xchg
add
fwait
jle
out
push
push
out
adc
in
push
mov
xchg
test
aaa
sbb
clc
gs
out
jg
dec
hlt
adc
push
adc
mov
add
mov
std
cmpsw
fcmove
push
inc
imul
idivl
mov
pushf
xchg
sub
add
shl
cmc
hlt
sub
jge
sahf
push
fnstcw
stos
cmp
mov
xlat
icebp
cs
lahf
sbb
jl
xor
movsl
lret
sbb
mov
jo
push
jbe
test
dec
pop
mov
sahf
xor
inc
push
xchg
mull
pop
out
xorb
push
ja
inc
sub
push
movsb
pushf
std
mov
js
arpl
sti
jb
addr16
xor
push
jae
adc
push
fcoml
imul
in
shll
push
mov
pop
inc
xchg
pop
sub
int
add
jnp
cmc
pop
ficompl
iret
mov
xor
sub
aad
push
jnp
repz
inc
add
mov
lds
jae
mov
mov
cmp
cmp
or
jae
mov
rolb
cmp
loopne
insl
mov
or
add
or
shll
xchg
pop
lea
sahf
xchg
jbe
xor
loope
inc
dec
data16
pop
sbb
sti
sub
or
sbb
int3
bound
xchg
jge
sbb
push
out
dec
pop
adc
test
push
call
xor
aad
dec
test
ds
xor
push
mov
mov
cmpsb
push
sub
ret
stc
dec
mov
and
push
fldt
mov
test
push
xchg
mov
and
in
jnp,pn
arpl
xor
imul
or
ds
adc
push
inc
sahf
outsl
mov
cmp
xchg
sub
mov
inc
inc
sarb
shl
arpl
mov
ljmp
cli
dec
cld
add
pop
sub
dec
cmpsb
lock
lods
in
loop
sbb
rcrb
pop
lahf
xor
in
sbb
outsl
in
cmp
jne
stos
cli
mov
xchg
outsl
push
xor
setle
jb
pushf
jg
add
out
lock
icebp
inc
jmp
shrb
movsb
or
pop
xor
ret
scas
sahf
cmp
pop
mov
push
and
movsb
inc
gs
icebp
sub
sbb
sbb
fisttps
sbb
lds
icebp
pusha
nop
loopne
xchg
andl
fwait
jnp
pop
push
fidivl
mov
ja
xor
pop
out
repnz
les
aad
and
and
mov
jl
adc
mov
push
rorb
push
sbb
cmp
mov
inc
movl
mov
ljmp
pop
pop
repz
movsl
xchg
pop
xor
dec
cmp
push
out
mov
xchg
lds
or
icebp
mov
das
cwtl
out
or
push
dec
cs
bound
jb
sub
sub
lahf
and
xchg
vhaddpd
push
inc
pop
insl
popf
lret
push
inc
and
pop
fs
dec
mov
mov
sahf
rep
jecxz
jae
add
in
pop
outsl
dec
dec
stc
repz
inc
xchg
daa
add
jge
in
pop
mov
sub
add
inc
test
mov
icebp
xchg
sub
or
jp
adc
orl
rolb
add
xor
xlat
ud2
or
aas
div
jp
ret
inc
xchg
or
mov
sti
inc
subb
xorl
cmp
aad
and
fbld
mov
mov
rorl
add
dec
fwait
repz
pop
xlat
jne
scas
dec
pop
test
cmp
pop
icebp
sbb
icebp
xchg
push
outsl
jbe
icebp
sub
add
scas
mov
xchg
push
pop
pop
xchg
inc
into
mov
add
jg
lea
mov
pop
cld
fildl
cmp
mov
out
dec
add
in
xchg
mov
sub
sub
inc
fsubrs
xchg
icebp
lret
mov
mov
xor
pushf
cltd
test
jno
lds
mov
xor
call
push
pop
lret
or
mov
mov
aas
lret
sbb
jne
pop
dec
xchg
nop
cmpsb
push
mov
pushf
fcompl
loopne
cli
lods
and
mov
cmp
xor
test
push
inc
and
data16
add
fwait
cwtl
xchg
xchg
into
cmp
inc
jl
push
es
mov
mov
dec
mov
xchg
ljmp
sbb
pop
mov
cmp
push
ja
imul
pop
pop
in
and
or
hlt
insl
sbb
xchg
arpl
out
cmc
xchg
add
sbb
sub
subb
mov
js
dec
push
push
mov
cmp
pcmpeqb
movsl
sbbl
sub
aam
mov
mov
mov
cltd
and
das
lods
cmp
lods
ja
sbb
rorb
inc
cwtl
inc
jne
pop
sbb
cmp
mov
and
cli
mov
jbe
int
push
testb
cmp
push
jns
fwait
je
mov
std
inc
push
rclb
jo
inc
cmp
lahf
mov
rcr
daa
mov
pusha
lods
and
leave
or
scas
mov
fcompl
mov
imul
or
xchg
adc
pop
fwait
mov
insb
cmc
jl
movsb
sub
loop
mov
aaa
mov
or
dec
ret
in
ror
pop
in
enter
or
cld
pop
lods
dec
pop
stos
push
aas
fcmovnb
add
adc
iret
push
sarl
push
push
jmp
filds
imul
jle
xor
mov
test
mov
loope
cmp
sbb
scas
inc
imul
jecxz
in
in
scas
scas
out
fnstsw
or
mov
jnp
xchg
xchg
aaa
enter
sahf
in
push
mov
push
jbe
sub
mov
xlat
jl
mov
stos
addr16
and
xchg
xor
stos
mov
aas
popa
mov
daa
push
jmp
clc
add
stos
xchg
push
shrb
fnsave
repnz
je
mov
data16
cmp
sub
or
in
dec
xor
stos
aaa
in
push
gs
out
push
js
xorb
fildl
xchg
cmp
mov
in
pop
loopne
imul
pop
int
sub
dec
sti
mov
dec
imul
rcll
fldenv
push
mov
jno
pusha
pop
or
sbb
mov
gs
scas
cmp
sbb
lret
nop
popa
sahf
fwait
insl
xchg
stos
cmpsl
inc
andl
test
divb
add
push
mov
adc
lds
dec
mov
stc
mov
lock
cmpsb
popf
fisttpll
push
enter
add
mov
cmc
popa
testl
imul
fistl
leave
xorl
mov
adc
push
mov
jb
mov
push
lcall
dec
xor
es
jl
dec
cld
cld
dec
lods
cmp
mov
aam
and
xchg
lea
int3
fnstsw
or
fimuls
fadd
shr
aad
or
bound
and
cmp
enter
inc
sti
dec
mov
pop
popa
or
mov
and
or
sub
pop
fiaddl
push
lret
dec
insl
fcomp
xchg
mov
xor
xchg
adcb
mov
mov
adc
adc
cmp
clc
or
pop
pop
pushf
subb
aaa
sub
mov
dec
fiadds
outsl
mov
jnp
pushf
arpl
xchg
pop
rclb
mov
enter
lcall
data16
adc
inc
lea
mov
bound
test
jb
dec
fdivs
add
test
mov
into
push
push
scas
sbb
sbb
mov
enter
push
and
or
out
lret
mov
sub
lds
or
mov
jnp
andl
mov
xchg
ja
or
xor
ljmp
xchg
mov
adc
xchg
mov
dec
mov
fnstsw
scas
insb
ds
imul
jnp
mov
mov
dec
out
jae
stos
xor
negb
test
test
cld
loope
insb
mov
push
adc
pusha
add
xorb
or
mov
mov
stos
xor
jle
add
xchg
xor
jp
pop
mov
cwtl
xlat
jg
movsl
xchg
jne
clc
jmp
lods
nop
popa
outsl
dec
dec
out
div
pusha
xor
cli
or
pop
and
repz
lds
cmp
mov
xor
mov
cs
xchg
pop
lock
add
xchg
ss
cmp
add
andb
inc
add
dec
mov
out
pop
jmp
subb
mov
push
jns
inc
sbb
xchg
shll
dec
popf
in
sub
dec
sahf
xor
es
das
mov
xchg
ja
ret
movsbl
inc
icebp
add
pop
mov
push
or
fdiv
jbe
sbb
jecxz
popw
or
cmp
jnp
inc
pop
push
dec
repz
loope
lahf
mov
dec
mov
inc
adcb
xchg
xor
mov
lret
dec
jecxz
add
shrl
scas
jne
adc
rcrl
sub
movsb
and
addb
mov
fs
or
or
pop
pop
pop
and
cld
push
out
stos
dec
pop
movsl
outsl
push
xchg
mov
adc
shlb
cmp
icebp
fcoml
sbb
mov
mov
call
das
das
xchg
loope
scas
pop
sub
fistl
lods
pop
add
test
pushl
pop
or
fwait
rcrb
addr16
mov
ficoml
add
lods
inc
lahf
adc
add
dec
mov
push
mov
scas
mov
sahf
dec
xor
imul
mov
mov
dec
xor
add
icebp
pop
into
fdivrs
lret
pop
ret
pop
std
mov
cmp
push
xlat
rclb
and
jnp
cmp
pop
or
cmp
and
ja
fiaddl
in
push
push
sub
popa
pop
add
mov
leave
movsb
sbb
jnp
lret
fimuls
js
and
stos
aam
cmc
xlat
insb
inc
insb
leave
cmp
pusha
in
cmp
lret
sub
inc
cmp
mov
jecxz
pushf
adc
add
insb
dec
mov
pop
test
push
mov
insb
or
add
fstpl
jo
pusha
pop
inc
sbb
cmc
and
std
xor
cmp
sub
lret
mov
xor
fidivrs
ds
int
icebp
aas
fistpll
ss
je
pop
les
adc
lods
mov
pushf
mov
jne
bound
je
ss
es
scas
lods
dec
mov
inc
pushf
repnz
popa
imul
ficoms
inc
adc
sub
dec
fdivrs
into
jnp
pop
cs
pushf
jne
or
mov
mov
inc
stos
inc
jge
je
inc
sub
or
and
sub
outsl
mov
mov
mov
lret
stos
sbb
or
dec
pop
icebp
push
imul
jo
fildl
xlat
rcrl
cltd
clc
pop
lret
shrl
test
scas
cmpsl
clc
jle
out
mov
mov
mov
jmp
cmc
mov
iret
xlat
pop
pop
and
jmp
bound
jb
jmp
push
pusha
lods
rorb
pop
inc
jbe
test
call
or
shr
pop
adc
orb
sub
fwait
jb
pop
jb
sarl
orb
mov
js
add
sbb
push
in
mov
mov
andl
sarb
push
and
push
lret
leave
pusha
dec
je
aam
or
mov
das
lahf
negl
dec
lret
adc
dec
push
aam
inc
sar
lret
mov
out
loope
mov
iret
out
jae
or
or
vcvtps2pd
sarb
mov
cmp
sbbl
pop
add
inc
gs
fistpl
fwait
cmpsb
fsubrl
mov
lea
push
std
add
lds
or
add
fldenv
jbe
rclb
adc
into
rcrl
xchg
aad
in
sbb
fwait
cmp
loopne
push
xchg
testb
cli
notb
or
jb
insl
cmp
outsl
rcrl
jl
mov
cwtl
stos
rorl
aad
notb
push
shrb
fistpl
mov
mov
adc
jecxz
stos
js
insl
dec
ds
xor
loope
push
sub
out
lahf
das
pop
call
ficomps
cld
mov
decb
cltd
gs
push
cs
jmp
mov
pop
mov
cmp
leave
push
cmp
out
push
lods
xchg
mov
dec
lcall
loopne
add
push
cmpsb
or
or
pop
cmp
andl
ja
inc
inc
call
fs
fisubrs
fldenv
pushf
cmp
adc
mov
repnz
push
jne
les
add
fimull
push
test
aad
push
push
stos
les
mov
sub
xor
in
jns
inc
mov
inc
xor
aaa
pop
xor
hlt
push
xor
maxps
into
clc
sub
cltd
dec
jns
push
sbbb
inc
enter
adc
nop
loop
aaa
and
mov
jl
xchg
loope
push
mov
mov
lea
ret
pop
shlb
jbe
sbb
cmp
sti
jp
xor
pop
pop
or
cs
xor
je
cmp
adc
mov
lods
lea
nop
jg
das
insl
rol
jmp
aam
lds
xchg
mov
push
xor
cmp
ja
sub
jne
cvttps2pi
and
xor
roll
fiadds
arpl
faddl
xchg
repnz
in
inc
mov
dec
jmp
mov
jmp
push
jbe
xor
sub
push
mov
or
xchg
iret
sub
dec
loop
jecxz,pt
inc
stos
push
push
fwait
push
mov
in
add
or
lods
fcos
lock
js
stos
jo
jae
subl
jge
and
cltd
and
stc
or
incl
jl
std
dec
subb
sbb
int
mov
xlat
stos
js
or
pop
shlb
add
gs
cli
jo
inc
orl
outsb
sbb
jmp
jge
addl
clc
add
sub
es
push
cwtl
stos
xor
rcr
out
sub
cmp
jbe
repnz
incl
xor
bnd
fsubl
lea
repnz
insb
insb
and
push
adc
movsb
jl
fiaddl
and
mov
cmp
jns
jmp
mov
addr16
rcrl
dec
pusha
add
cld
sub
lods
pop
xchg
movsb
sub
jg
mov
out
lods
dec
adc
pop
data16
jne
aam
fldt
es
or
ss
mov
pop
loop
sbb
xchg
jge
ret
add
adc
pop
ds
mov
xchg
push
sub
cmp
shlb
sahf
mov
fisubs
je
pusha
mov
mov
sub
insl
and
mov
mov
pop
popa
frstor
inc
cmpsb
mov
nop
insl
daa
in
adc
jl
mov
xor
jns
jecxz
mov
sbb
in
dec
mov
shlb
jno
mov
jp
stc
pop
call
js
repz
test
push
xchg
sub
sub
imul
lods
ret
sbb
mov
push
push
jo
inc
inc
dec
push
cmp
repnz
mov
fmuls
xor
mov
dec
or
adc
lods
mov
test
cli
mov
xor
push
dec
jg
pop
push
push
subl
sahf
repnz
mov
ljmp
cmp
adc
and
call
loopne
dec
loop
push
clc
inc
enter
fcoml
lods
push
mov
daa
push
xchg
cmpsl
jp
test
insl
add
adc
shll
nop
test
fbld
repz
or
pop
hlt
movsl
scas
push
es
inc
push
push
ret
cmp
or
push
imul
cltd
or
push
sub
push
lret
push
mov
fs
cmpsb
cmc
push
mov
enter
jmp
repz
roll
and
icebp
xchg
stos
lods
out
mov
mov
jp
mov
mov
jle
and
mov
xchg
andl
xor
adc
insl
jecxz
data16
adc
sbb
mov
pop
dec
mov
pop
subl
int3
add
mov
pop
into
adc
ljmp
mov
add
lret
adc
ds
or
stc
push
push
shrb
mov
xor
cmc
add
push
cwtl
popa
mov
pop
sbb
dec
dec
jo
jmp
aas
mov
pusha
in
pop
add
clc
pop
jmp
and
decb
sub
scas
rcrb
xor
sbb
arpl
out
data16
ds
mov
gs
ss
fnop
icebp
fxch
dec
sbb
pop
rol
lea
flds
sub
rcrl
jecxz
and
jnp
sub
push
testl
xor
iret
fstl
movsl
cmp
daa
adc
pop
jb
inc
es
and
sbb
hlt
push
xchg
rorl
in
cli
mov
lods
mov
add
ret
cmp
gs
or
out
cmpsb
xor
scas
jnp
push
lret
dec
xchg
in
xor
out
popa
dec
cmc
cmpsl
lret
stc
insl
testl
cmp
sbb
inc
push
sub
cmp
xorb
loope
mov
mov
sub
or
pop
and
mov
sbb
ss
sbb
or
shl
call
sarl
jo
test
push
gs
movl
fcompl
andl
jmp
sti
clc
ret
cmp
icebp
mov
imul
clc
popl
or
sbb
mov
and
sbb
insl
pop
aam
out
jecxz
loopne
adc
addr16
xor
jge
jae
and
xor
movsb
loop
or
stos
sub
aas
push
roll
in
hlt
jmp
aad
xor
sbb
cltd
dec
stos
outsb
xchg
inc
out
cmpsb
loopne
movsl
aas
lret
mov
insl
mov
inc
pop
sbb
pusha
mov
dec
negb
je
dec
stc
pop
sbb
and
inc
add
adc
lods
lea
cmp
mov
add
stos
in
aas
sahf
cwtl
sbb
mov
dec
xor
repz
inc
inc
xor
out
add
ja
push
or
sub
fistpll
or
xor
and
lods
jge
pop
sub
xchg
insb
dec
pop
pop
jle
mov
xchg
out
sub
push
sbb
stos
sbb
xchg
adc
movsl
inc
mov
fsubrl
xchg
sub
test
xor
adcl
lahf
xchg
jp
cmp
dec
mov
push
imul
mov
popf
xor
jecxz
jp
xchg
push
lods
icebp
popa
test
ljmp
or
out
mov
mov
loope
popf
outsb
mov
cmpsb
push
sub
aaa
push
add
jnp
push
dec
sbb
sub
dec
cld
adc
fsubl
xchg
pop
clc
adc
je
sbb
js
loop
cwtl
mov
lret
xchg
cld
rol
pop
sbb
test
sbb
push
and
mov
xchg
mov
mov
sbb
jne
lret
in
sar
sub
lea
or
jp
out
out
mov
stc
fists
cmp
nop
kaddb
pop
dec
into
pop
fwait
adc
dec
jecxz
ds
cltd
or
sub
data16
in
pop
pop
loopne
push
adc
dec
loope
dec
push
and
mov
jno
ja
cs
xlat
push
test
movsl
aaa
out
jl
push
dec
xorb
aam
jno,pt
pop
xchg
sahf
inc
in
push
sbbb
dec
cmp
jae
bound
cld
mov
dec
cmp
cli
lods
pop
push
push
xchg
test
cli
std
mov
pop
call
dec
xor
push
jne
mov
add
rcll
insl
jge
jo
and
sbb
mov
ret
push
fistpl
mov
stos
cltd
mov
jne
jno
and
adc
sbb
and
mov
gs
cs
popf
shl
sbb
rcrl
and
sub
or
xchg
mov
sbb
outsb
mov
cmp
sub
test
jg
lea
jge
notl
mov
push
dec
insb
cwtl
dec
push
xchg
addl
push
scas
push
sub
mov
sbb
cltd
in
or
adc
add
pop
push
mov
xor
flds
inc
pop
imul
es
push
scas
xchg
pop
insb
push
mov
test
nop
cmp
subl
into
pop
push
jge
icebp
lock
sahf
cmp
ret
and
mov
loopne
mov
push
int3
aaa
mov
xchg
cmp
inc
adc
cld
test
pop
dec
mov
push
outsl
lret
movsb
bound
mov
add
push
dec
cltd
addr16
dec
sub
stos
cmp
iret
insl
inc
jno
loope
in
dec
xchg
in
inc
ljmp
pop
mov
xlat
push
cld
and
xchg
leave
and
insl
out
cmp
gs
ss
adc
addr16
push
enter
mov
sarl
and
pop
and
aad
in
xor
and
xor
aaa
lods
jl
add
push
dec
dec
cmc
and
test
cmpsb
mov
ficoms
jne
outsb
icebp
mov
dec
or
lock
imul
data16
lret
push
mov
dec
in
xchg
pusha
add
adc
xor
into
add
das
sbb
xchg
scas
dec
mov
adc
icebp
add
jge
dec
dec
sbb
cmpsb
push
testb
ret
sub
das
mov
lock
xchg
add
and
jmp
mov
jb
add
clc
lock
inc
cmc
mov
fsubrs
cmpsb
inc
sbb
repz
mov
ret
scas
aas
cmpsl
xor
das
adc
scas
adc
add
mov
aas
in
mov
sbb
sub
sti
xchg
xor
js
sahf
sbb
loop
inc
hlt
mov
mov
dec
in
add
mov
ljmp
test
out
lock
inc
icebp
movsb
fs
cmc
fistpll
out
test
rol
shr
or
es
sub
notb
sub
sub
pop
dec
pusha
stos
fwait
fwait
inc
mov
add
mov
sbb
pop
outsb
in
fwait
orl
sbb
aaa
fisttpl
mov
xchg
jg
enter
or
cmpsb
shl
adc
push
jp
inc
loop
test
sahf
jb
mov
ss
dec
mov
enter
popa
movsl
arpl
sub
mov
push
cmp
add
xchg
jo
sub
imul
inc
xchg
or
out
mov
jbe
push
les
lds
sbb
icebp
fmuls
aad
mov
xchg
imul
mov
int3
mov
xchg
lds
sarb
fbstp
jle,pt
jg
scas
xchg
popf
dec
stos
mov
insb
inc
adc
jns
dec
data16
out
cltd
neg
cmp
xchg
or
inc
adcb
pop
pop
dec
sub
fistpll
hlt
add
jne
mov
inc
and
xor
and
je
push
pop
lods
adc
push
and
lea
push
jecxz
ret
loop
jp
in
push
aas
or
add
xor
mov
or
lds
adc
inc
pushf
jno
push
adcl
in
dec
loope
xchg
push
push
jp
cmp
xchg
xchg
xchg
ss
pop
mov
lahf
add
movsb
pop
push
cmp
or
jmp
dec
fs
mov
fbld
test
pop
dec
in
pop
add
pop
insl
or
sbb
dec
arpl
repnz
fs
outsb
orb
and
push
xchg
mov
cmp
scas
inc
loop
or
into
dec
das
xchg
fistpl
sub
in
add
mov
aas
or
loop
int3
xchg
icebp
loope
test
gs
mov
leave
cmpsb
sbb
pop
notl
jl,pt
das
lock
pusha
xlat
popf
or
daa
leave
jl
cmc
pop
loopnew
cmp
scas
jbe
adc
clc
and
icebp
inc
jmp
jo
stc
dec
xor
xchg
arpl
rdrand
mov
out
bound
es
repnz
aad
or
inc
xchg
out
je
inc
xchg
dec
or
loope
cltd
add
sbb
insb
adcb
sbb
xchg
cmp
sbb
jl
sahf
out
inc
adc
les
iret
mov
and
inc
mov
xchg
aam
cltd
inc
or
or
push
out
push
cltd
or
sub
inc
fs
arpl
gs
sub
aad
dec
testb
fdivrl
out
jnp
or
adc
jl
jns
movsl
mov
mov
push
int
jo
mov
dec
jp
push
arpl
push
sbb
dec
push
sbb
iret
js
clc
iret
sub
jmp
call
insl
and
push
ror
dec
outsb
cwtl
loopne
cwtl
push
dec
push
sti
ret
push
adc
insb
shlb
sbb
imul
sbb
add
ljmp
pop
nop
xlat
es
push
mov
xor
mov
insb
insb
aaa
adc
outsl
push
mov
mov
adc
jmp
insl
iret
test
xor
sub
sub
aad
sbb
push
mov
and
imul
in
fmull
fsubs
sahf
pop
arpl
cltd
mov
mov
mov
push
xchg
scas
adc
nop
jo
jl
shll
or
bound
js
mov
push
dec
jle
or
ret
pop
pop
leave
xor
or
shlb
sarb
cmpsb
mov
push
arpl
test
hlt
xor
mov
lods
ret
lock
sub
sub
lods
push
test
cmp
mov
sub
inc
mov
sahf
push
call
outsb
mov
das
popa
inc
les
lcall
cmp
out
adc
jl
addr16
fwait
pop
ss
test
dec
push
mov
inc
das
pop
xchg
xchg
jecxz
pop
adc
out
das
shl
inc
pop
cmpsl
pop
sub
subl
xchg
or
cmpsb
lret
mov
aaa
pop
xor
jmp
lahf
inc
adc
loope
lret
arpl
and
xchg
popa
fsubs
or
loop
pop
jl
mov
jl
mov
push
gs
inc
shlb
mov
lcall
mov
sbbl
icebp
addl
popa
inc
xchg
scas
push
sbb
out
mov
xchg
jne
mov
fimuls
pop
mov
jp
push
out
aas
or
cmpsb
add
cmc
insl
jne
or
mov
xor
loopne
inc
test
pop
rorb
in
adc
push
pop
adc
adc
mov
repz
xchg
shrb
cmp
mov
and
push
inc
fiaddl
je
in
xor
testb
mov
cwtl
sbb
mov
mov
out
fstpl
mov
push
sub
inc
xor
push
and
shll
icebp
mov
inc
div
pop
inc
addr16
ficomps
fcmovnu
fwait
inc
push
bound
imul
jl
mov
push
sbb
xor
sbb
mov
sahf
sbb
clc
nop
addr16
call
std
xchg
cld
and
cmc
fildl
repz
push
sub
mov
test
inc
out
sahf
adc
xchg
mov
mov
mov
inc
xchg
pop
sub
in
mov
mov
out
cmp
sub
cmp
and
pusha
in
fs
insl
mov
arpl
fs
mov
rcr
jg
xchg
hlt
lods
mov
fadd
xchg
aaa
in
movlhps
fxch
cld
jmp
add
enter
loope
mov
scas
xchg
ret
mov
dec
andl
ret
test
sbb
adc
adc
cwtl
test
add
fwait
loopne
jb
ret
hlt
insl
adc
cld
xor
mov
roll
push
icebp
lea
mov
push
jbe
mov
jb
fwait
xor
lahf
nop
cmp
hlt
test
jl
loope
sbb
adc
pusha
xchg
push
mov
add
fldl
shr
mov
mov
xor
mov
imul
xor
mov
inc
push
jno
not
fidivrs
imul
cmp
mov
inc
lods
test
ljmp
mov
mov
je
iret
mov
pop
dec
test
pusha
push
inc
out
mov
and
cmpsl
cld
xor
data16
mov
adc
mov
sub
call
xlat
pop
icebp
jmp
jb,pn
in
xchg
pop
inc
fwait
inc
cmp
mov
jecxz
mov
mov
xor
sbb
push
lds
add
xchg
mov
cltd
pop
adc
outsl
in
lea
or
dec
movsl
jnp
ja
mov
fcoml
mov
inc
mov
and
addr16
inc
pusha
cs
cltd
inc
push
dec
in
in
je
adc
rolb
daa
add
inc
repz
mov
add
inc
lds
mov
xchg
dec
jns
outsl
fadds
sub
mov
clc
enter
lcall
cltd
push
hlt
xlat
push
sahf
mov
sub
push
nop
mov
xorb
mov
jl
popf
pop
lahf
cmp
adc
test
pop
add
ss
mov
mov
mov
fwait
lahf
adcl
fstpl
xchg
pop
adc
ss
cmc
sbbl
fcomps
fisttps
mov
stc
es
stos
push
mov
fsubrl
mov
and
insb
jns
jbe
pop
fwait
mov
aaa
adc
popa
lea
inc
cwtl
adc
push
inc
push
push
call
push
adc
movsb
stc
mov
pop
divl
rorl
divb
xchg
stos
aam
sbb
cmc
mov
or
sti
movsl
jp
mov
or
push
cltd
or
or
cmp
or
pop
dec
mov
push
xchg
pop
aad
cmp
xchg
ret
fdecstp
sbb
xor
adc
lods
movsb
and
or
outsb
jno
add
jo
fs
lock
dec
adcb
add
sbb
fcompl
dec
inc
ds
fldenvs
call
xor
js
int
pop
fldl
jecxz
mov
adc
xchg
or
lret
or
pop
cmpsl
adc
add
clc
je
xor
enter
jge
add
je
lock
and
cli
push
xchg
sub
inc
fistps
insb
jb
lods
dec
adc
cwtl
adc
in
xchg
sbb
loope
dec
aaa
cmp
in
mov
nop
push
mov
push
mov
and
jge
sarb
add
xchg
loope
lret
pop
jb
cmp
or
imul
add
mov
movsb
stos
fldt
mov
adc
adc
test
cmpsl
out
andb
mov
ret
into
pop
aas
push
sbb
lods
mov
cmp
xchg
out
rcrb
xchg
pushf
je
add
push
dec
decl
nop
adc
in
loop
inc
call
pop
push
mov
movaps
mov
mov
jp
xchg
sub
xchg
cmpsl
and
xchg
pop
cmc
and
ja
sbb
in
xchg
and
push
add
jbe
sbb
fsubs
xor
sub
fdivl
loope
out
jno
push
clc
arpl
push
scas
test
or
adc
cmpsb
nop
dec
cmp
sbb
ficoml
orb
lds
repz
pop
fcomps
pop
dec
pop
push
adc
movsl
sbb
xor
inc
cmc
jno
and
push
dec
mov
rcr
sub
jno
xor
into
sub
sbb
adc
xlat
push
test
push
sbb
stos
mov
pop
push
jbe
or
ficoms
mov
test
dec
test
fldcw
jnp
andl
mov
loopne
fldl
xchg
inc
jle
cmpsl
outsl
add
sub
xor
adc
loopne
andl
das
mov
negb
sub
std
pusha
call
push
loope
jmp
aam
jecxz
mov
in
daa
test
mov
shll
mov
cmp
xor
mov
sub
pushf
mov
pusha
mov
inc
int
out
mov
jns
mov
add
loop
into
xor
out
pop
adc
or
data16
inc
shll
inc
fsubl
cltd
and
pop
pop
negb
mov
out
outsb
xchg
icebp
shlb
rorl
std
xor
xor
adc
push
insl
dec
loop
mov
jge
insb
fisubrs
js
fbstp
lock
xor
cli
push
in
dec
fstpt
push
sbb
leave
int
dec
andb
xchg
mov
insb
push
in
jnp
test
push
or
xor
outsb
and
enter
xchg
mov
cld
push
add
dec
adc
or
notb
test
aaa
or
push
aaa
push
insl
into
outsl
cmp
push
xor
push
sub
pop
ficoml
cmp
and
nop
xor
push
xor
mov
dec
sub
push
add
bound
push
adc
mov
push
mov
and
aaa
jmp
out
ss
cmpb
mov
jae
mov
sub
mov
mov
sbb
aaa
and
mov
adc
insb
jb
pop
dec
xchg
and
pop
call
insb
add
and
add
in
adc
test
adc
rcr
add
adc
jne
lahf
loopne
mov
push
xchg
xchg
stc
mov
les
addl
dec
aaa
or
daa
cmp
jno
dec
or
jno
pop
dec
pop
aas
inc
pusha
push
inc
xor
sbb
sbb
nop
jmp
pop
imul
jg
fnstenv
xor
hlt
inc
sub
mov
xor
and
mov
or
ret
mov
lret
push
jnp
lea
pop
repnz
aaa
add
fsubrs
out
popa
in
idiv
adc
repz
adc
mov
pushf
cmp
pop
pop
ds
jb
xorb
dec
jo
cltd
cmpsb
cmp
loop
sub
xor
sbb
loop
and
pop
jbe
inc
cwtl
pop
cmp
ret
out
add
jp
scas
test
cwtl
sub
fwait
mull
cmp
fistps
movsl
jmp
shlb
mov
ljmp
out
repnz
add
pop
sbb
add
lahf
fldcw
mov
xchg
inc
sbb
cmp
mov
rcrl
data16
pop
or
jecxz
xchg
xchg
xor
dec
xlat
adc
stos
lods
addl
push
pop
mov
cmp
xchg
loopne
push
inc
xchg
and
mov
cmp
mov
mov
or
and
and
aad
mov
out
int
popf
inc
sbb
lock
inc
and
imul
xchg
imul
stos
fnstsw
mov
mov
fwait
or
inc
xchg
sarb
je
js
negl
sbbl
xchg
jecxz
cwtl
push
stos
add
orb
lods
adc
in
sbb
imulb
cmp
aam
push
popf
stos
shlb
and
or
cs
mov
jb
out
pop
xchg
mov
sub
fcmove
std
dec
sti
xlat
daa
xchg
wbinvd
cmp
insb
sub
stos
pushf
mov
sub
roll
fldl
fucomp
imul
mov
add
pop
adc
aam
or
loope
jl
cs
rorb
pop
xchg
cmp
sbb
mov
jns
ljmp
cmp
sub
xlat
push
jg
ljmp
or
sub
and
sub
loop
or
cltd
arpl
and
out
adc
push
pop
jl
xchg
pop
dec
sbb
xchg
sbb
add
dec
call
xchg
mov
pusha
sbb
jns
dec
jg
jge
xchg
cmpsl
mov
push
or
faddp
shlb
xlat
bound
stos
lret
mov
jns
xorb
dec
fstps
xor
aad
adc
adc
dec
push
in
sub
xchg
pop
cmp
or
in
jns
js
pop
push
jbe
gs
repz
mov
sti
dec
adc
imul
dec
jg
mov
push
lret
cmp
mov
or
ja
or
adc
jp
sbb
lods
xor
add
add
add
and
cmp
fisubrs
push
fiaddl
andl
add
mov
inc
out
push
xor
insb
adc
jmp
loop
rorl
mov
pop
repz
mov
mov
clc
fistl
aaa
lret
jmp
and
mov
stos
ljmp
ficompl
pusha
inc
clc
pop
add
clc
aaa
insl
das
ljmp
xlat
lea
shr
ljmp
in
jo
in
adc
mov
in
es
cmp
scas
cmp
mov
sti
adc
dec
xchg
fdecstp
jmp
push
data16
mov
push
int
push
xorl
and
and
pop
jge
mov
xchg
mov
mov
imul
icebp
xchg
leave
pop
xor
es
mov
neg
stos
mov
rorl
pop
imul
cld
lcall
and
pop
loop
into
adcb
push
cmp
cmovs
in
pop
lods
cmp
popf
dec
and
mov
int3
mov
aaa
fldcw
or
pop
cld
mov
arpl
sub
push
decb
arpl
test
ret
inc
repz
or
mov
and
xchg
pop
cs
mov
in
int3
andl
popf
xchg
stos
add
stos
pop
leave
adc
add
xor
scas
cmc
out
ret
pop
dec
ja
lret
add
push
pushf
inc
cmp
mov
cmpsl
into
pusha
in
dec
hlt
and
orb
imul
test
push
sbb
mov
push
or
or
roll
or
ret
add
xchg
ds
sahf
cmp
fcoms
test
mov
cmp
mov
addr16
and
stc
cwtl
inc
scas
sub
sub
mov
jbe
cltd
dec
xchg
adc
cmp
xor
cmp
and
cmc
aam
mov
xchg
push
addr16
cld
mov
popl
add
mov
cmpsb
push
pop
mov
sti
dec
push
jo
and
fildl
jno
aas
xor
xor
fbstp
mov
rol
and
push
pop
enter
mov
in
adc
enter
call
xlat
loopne
cmp
cmp
les
pushf
negl
dec
lods
imul
inc
adc
mov
lds
imull
gs
out
mov
test
cmpsb
mov
dec
ds
in
inc
ljmp
cmp
nop
mov
aas
aam
sbb
cmc
cld
in
sub
mov
insl
jne
call
insl
std
cmp
sti
adc
dec
or
stc
loop
xor
xor
rsqrtps
xor
dec
test
dec
mov
sahf
out
ret
mov
xor
scas
cld
xchg
popf
mov
add
in
mov
push
inc
jp
out
cmp
xor
bswap
movntps
add
lret
inc
jne
cmp
or
cmp
jae
mov
jp
push
cmp
mov
subl
dec
cmp
test
arpl
arpl
mov
xchg
add
inc
andl
test
insl
lcall
shrl
fdivs
cmp
sahf
xor
or
cmp
int
jb
ja
call
cli
loop
sub
adc
jo
xlat
jmp
cmpsb
mov
push
bound
shll
inc
xchg
rorb
testb
movsb
xor
out
in
pop
sbbl
mov
call
int3
mov
stos
and
adc
loopne
shl
shr
mov
and
cmc
lds
sbb
jno
test
sbb
jo
popf
cmc
push
jmp
out
jns
testb
mov
adc
mov
pop
jp
andl
addr16
pushf
pop
int3
add
into
push
adc
xchg
in
adcb
cli
mov
mov
mov
push
cmpl
mov
je
outsl
adc
loop
pop
addl
mov
mov
and
cmp
jmpw
and
daa
sahf
dec
push
xor
mov
clc
pop
cli
fstps
inc
jmp
mov
mov
jmp
cmp
jo
enter
or
es
mov
mov
add
mov
jne
push
pusha
push
push
add
mov
lea
mov
adc
pop
mov
and
sub
lods
negb
imul
mov
pop
dec
outsl
inc
mov
pop
mov
lahf
les
movsb
pop
mov
fists
repz
lret
scas
pop
lret
insl
jno
punpckhwd
pop
push
enter
add
shll
cmp
in
push
lahf
dec
mov
clc
fdivs
loope
rcll
adc
push
aam
pop
lock
movsb
add
out
iret
sbb
push
inc
sub
notb
pushf
sbb
insl
les
mov
cmc
cli
dec
mov
mov
push
in
push
dec
add
and
imul
mov
jo
cli
push
scas
push
mov
mov
sbb
std
daa
lods
cwtl
ss
or
cltd
stc
outsl
sbb
mov
std
lret
mov
cmp
aam
mov
fadd
fdivrs
inc
xor
sahf
mov
push
push
xchg
negl
pop
inc
pop
inc
adc
nop
push
nop
hlt
mov
jae
mov
stos
in
pop
cmp
popf
cmp
out
scas
or
mov
or
imul
add
lahf
xchg
pop
popa
int
loope
icebp
sbb
pop
pushf
lds
mov
mov
cld
imul
out
fs
dec
sbbl
mov
mov
js
fs
ljmp
fisubrl
arpl
jbe
jmp
push
inc
push
mov
sub
or
adc
lahf
imul
mov
xchg
inc
mov
jg
mov
sahf
and
xchg
fidivrs
and
aaa
pop
dec
add
mov
jecxz
ljmp
mov
test
lahf
es
mov
pusha
out
ffree
es
dec
mov
cmpsl
push
pop
bound
mov
sbbl
mov
mov
and
push
or
sbbb
std
cmp
push
push
adc
jl
stos
sub
les
fbld
repz
rorl
lods
jmp
push
cs
das
iretw
jne
pop
call
xchg
xchg
inc
loop
mov
xor
sub
jge
fnstcw
inc
mov
adc
cltd
mov
push
popf
jno
mov
enter
cld
or
cmc
xlat
orb
and
mov
adc
adc
or
rcll
mov
mov
stos
push
mov
add
xchg
pop
shrb
test
jno
add
or
ljmp
fucomip
dec
adc
xchg
fwait
out
cmp
mov
imul
orb
and
pop
sti
out
lds
mov
loop
jno
popl
adc
mov
movsb
inc
lahf
mov
addl
dec
mov
inc
cli
mov
xor
aas
int
cmp
jnp
mov
and
int
in
jmp
stos
fmuls
ljmp
fldenv
jp
pop
ret
push
push
adc
inc
and
jb
mov
inc
gs
sti
aad
and
jbe
mov
addb
sub
sbb
stos
imul
add
jmp
push
popf
into
nop
and
mov
js
dec
ds
outsb
imul
mov
cld
gs
ds
and
iret
sbbb
fsts
push
inc
lcall
add
push
lahf
lods
mov
cvtdq2ps
pop
mov
add
lret
dec
cld
jbe
in
dec
imul
sbb
scas
out
cltd
out
fldt
test
fdiv
dec
gs
jecxz
and
jns
movsb
add
movsl
mov
push
movsl
add
in
lret
cmp
arpl
push
inc
sub
xor
and
push
inc
cmp
lahf
jg
cmp
cmp
add
push
aad
pushf
fildll
and
cmpsl
mov
xor
add
cwtl
sbb
inc
stos
push
sub
add
cmpsl
stos
roll
outsl
lahf
es
hlt
js
pusha
or
or
test
or
pop
cmova
fistps
inc
cltd
cmpsb
lret
call
out
cmpb
dec
xchg
mov
shr
pop
add
lahf
push
sbb
pop
ret
push
cmp
scas
add
ret
insl
push
xchg
das
adc
mov
pop
pop
xchg
mov
mov
fs
ljmp
dec
insl
jmp
sub
into
add
mov
push
fs
int
cmp
in
jle
push
xchg
insl
bound
aam
adc
sarl
pop
pushf
adc
pop
ret
fdivl
out
mov
in
lods
push
push
shll
push
sub
clc
icebp
jbe
lret
jne
xor
add
hlt
add
movsl
sub
rcrl
add
xor
stos
mov
neg
pusha
fs
sub
mov
xchg
add
fdivrl
in
lcall
ljmp
lcall
sbb
outsl
mov
mov
std
rep
imul
test
repnz
pop
jne
pop
leave
mov
andb
sbb
aaa
dec
lahf
rorl
loop
loop
cs
cmpsb
jmp
xor
mov
pop
sub
repnz
sahf
xor
add
pop
aaa
gs
push
add
imulb
adc
dec
and
in
add
mov
adc
aaa
mov
push
sbb
dec
pop
popf
jecxz
mov
xor
fimuls
xor
push
jg
outsl
sub
aam
shr
gs
test
jnp
inc
fisubrs
ja
out
hlt
inc
lds
add
inc
shlb
xor
adc
cmp
add
xchg
mov
or
scas
and
adc
dec
xchg
push
dec
in
test
dec
adc
push
test
pusha
les
mov
filds
and
cmp
push
stos
fisttps
pop
testl
and
push
push
mov
sub
std
out
repnz
cmp
ret
call
movsl
aad
sub
rclb
mov
fisubrl
sbb
sarb
cmp
lahf
pop
cmpsl
in
notb
pop
out
mov
push
sbb
push
jle
or
pop
fcomps
test
push
mov
movsb
cmp
xorb
mov
and
aaa
inc
cmp
sub
out
loopne
call
out
add
inc
jbe
test
mov
push
push
rorb
lcall
push
cli
pop
out
sbb
std
ffree
inc
mov
xchg
ja
adc
pop
mov
pushf
adc
xor
fnstsw
aam
jle
mov
fwait
pop
leave
mov
rol
stos
cli
xchg
push
dec
jns
bnd
pop
movsl
push
adc
lcall
mov
mov
jecxz
ja
loopne
imul
sub
int
stos
and
push
loope
lock
pushf
pop
xor
mov
inc
jmp
cmp
sarb
mov
or
push
sti
mov
out
mov
imul
arpl
inc
cmc
sub
lea
incb
mov
push
mov
movsl
pusha
scas
jae
cmp
inc
pusha
mov
or
sub
pop
jno
push
xor
test
xchg
rol
adc
jmp
lods
or
aaa
add
xchg
mov
ds
push
cltd
movb
or
pop
jl
adc
dec
jg
fsubs
dec
lds
add
aaa
push
dec
dec
xchg
lds
roll
add
lock
mov
jb
test
dec
sbb
nop
lds
data16
les
push
xor
mov
jmp
mov
daa
xchg
lcall
scas
or
fbstp
adcb
cmpsl
and
negl
push
lcall
jmp
lods
movsb
fiaddl
jecxz
popl
popa
das
sub
rcrl
add
int3
dec
cmpsb
pushf
cmpsb
pop
mov
in
and
jp
std
leave
or
cs
sbb
movsl
mov
lahf
dec
lahf
shrl
imul
cmp
fmulp
inc
xchg
or
sti
jg
iret
or
xor
and
cli
jmp
xchg
sub
push
mov
cmpsb
push
popa
jno
sub
xchg
addr16
mul
daa
dec
sub
and
lret
repnz
leave
xchg
shrl
ljmp
or
rolb
test
xchg
jl
aam
or
mov
mov
lahf
mov
roll
mov
rclb
ss
or
add
push
push
jo
pop
cmpsl
in
push
inc
fcomps
fdivrl
ret
sub
stc
xchg
sub
push
mov
adc
and
push
clc
test
push
jle
fidivrl
sbb
leave
mov
mov
mov
divl
push
gs
dec
int
xchg
aaa
in
or
mov
and
add
leave
call
mov
push
shlb
in
adc
std
shl
lds
dec
sbb
popf
mov
sbb
arpl
sub
pusha
mov
inc
into
movsl
dec
xorb
pushf
in
es
mov
das
sub
inc
bound
and
jmp
adc
push
lods
pop
ret
pop
cltd
jg
xor
imul
jge
rorl
mov
dec
frstpm(287
sub
dec
pop
stos
out
movsb
sti
mov
das
ja
add
jbe
dec
sbb
xchg
cmpsb
decb
fstps
and
mov
cmp
js
sbbl
hlt
jecxz
cmpsb
mov
sbb
xor
in
dec
jle
out
dec
call
lcall
dec
inc
inc
pop
inc
sti
std
cmpsb
mov
sbb
mov
scas
imul
cmpsl
and
jp
pop
js
sub
outsb
mov
sbb
jmp
mov
imul
je
or
imul
fimuls
lcall
movsb
mov
insb
int
gs
mov
cli
and
and
faddl
les
xor
rcll
mov
enter
inc
mov
sub
repz
ficoms
sbb
mov
into
cmpl
fwait
icebp
rcll
add
pop
test
dec
or
inc
lea
addl
dec
jnp
mov
rorb
or
fwait
je
sbb
and
or
cmp
hlt
inc
and
pop
or
pop
mov
jp
leave
andb
scas
outsl
mov
in
xchg
xchg
cmpsb
adc
negb
lahf
popa
imul
mov
pushf
nop
jne
inc
cltd
cmp
inc
repnz
adc
je
dec
mov
daa
jecxz
push
or
sahf
xlat
mov
shll
xorb
pop
dec
fmull
ds
int3
jb
in
jmp
push
loope
push
fcmovnbe
push
or
xchg
xchg
mov
in
jo
jo
hlt
xor
negb
daa
jp
scas
dec
xor
dec
icebp
add
mov
add
sahf
push
sbb
mov
xchg
xchg
fisubrs
arpl
xor
notl
into
or
aam
ret
sub
in
scas
inc
dec
repnz
aad
in
rcll
pop
ror
stos
jns
outsl
mov
adc
scas
lret
mov
add
push
filds
aaa
inc
icebp
mov
xor
lea
sub
aas
lea
cmp
cmp
dec
movsb
cwtl
frstor
frstor
insb
pop
aam
mov
push
add
cmpsl
out
sub
xor
and
outsb
lods
filds
ret
push
out
mov
mov
inc
mov
add
shll
inc
lods
sbb
movsb
adc
popfw
adc
jae
stos
inc
pop
pushf
or
movsb
mov
scas
lcall
repnz
int
xlat
outsl
mov
push
ljmp
pop
inc
lods
xchg
xorl
std
fidivrs
fcoml
dec
ficoms
adc
push
popf
inc
sub
xor
or
cmp
js
jno
sub
mov
or
or
push
xchg
mov
in
xor
jl
repz
scas
addl
inc
fdivr
jo
mov
in
cmp
std
add
add
xorl
inc
daa
sti
dec
lcall
cmp
sbbb
popf
inc
rcrb
insb
int
and
in
xor
add
push
loop
loope
mov
or
les
sub
jecxz
loope
mov
pop
cmp
adc
mov
mov
or
call
addr16
repz
adc
cwtl
add
ret
adc
inc
ret
ret
cs
ss
or
xchg
in
rol
and
xor
fdivs
pop
jb
movsb
sub
repnz
xchg
pop
and
cmpsb
pextrw
pop
dec
mov
dec
inc
int
mov
movb
inc
subl
shlb
lahf
dec
pop
cmp
insl
cmc
les
in
xchg
jae
mov
and
dec
dec
cmpsl
fbstp
mov
fildl
push
cwtl
pop
lret
mul
mov
mov
push
xchg
mov
loopne
rcll
cmp
scas
sub
mov
mov
cmpsb
jg
pop
arpl
xor
dec
jno
mov
outsb
data16
add
nop
inc
cmpsb
shr
mov
shrl
xlat
push
dec
mov
and
sub
add
cmc
outsl
outsl
sub
fs
jmp
sbbl
leave
das
pop
mov
and
push
sub
or
jno,pn
pusha
inc
out
lcall
out
idivl
in
out
addr16
cmp
add
daa
or
stos
rcr
xchg
cltd
xbegin
rorl
iret
rol
mov
dec
jnp
and
adc
rcrb
test
and
cmp
mov
test
push
jae
subl
iret
pop
popa
jo
mov
mov
loop
enter
adc
adc
lods
loope
movsb
mov
sub
xor
rcl
mov
jg
jae
xchg
cmp
mov
outsb
dec
push
scas
fdivs
int3
jp
push
push
stc
pop
int
and
mov
pop
jnp
out
pop
gs
out
push
jmp
insb
fdivrs
pop
into
lods
rclb
cwtl
sub
test
sbb
jno
cmp
addb
mov
pop
subb
add
rolb
sub
cmpsl
sub
jae
and
arpl
fs
pop
inc
lret
fsubl
popf
stc
cmp
fsubs
inc
test
arpl
jle
stos
outsl
mov
pop
clc
xchg
jmp
adc
lret
push
es
stos
in
lods
mov
stos
fiaddl
push
into
sbb
movsb
lods
addr16
mov
pop
jmp
addr16
xchg
pop
xor
pop
pop
push
loop
sub
add
cmpsb
sbb
push
popf
insl
mov
mov
add
in
inc
push
mov
mov
and
jne
jmp
sbb
push
inc
cmp
xchg
sbb
dec
cwtl
ja
lahf
sub
or
jecxz
xor
jnp
in
or
or
add
xchg
aam
jl
mov
jae
sub
mov
loope
in
jb
or
push
mov
sbb
enter
inc
aaa
pop
and
scas
dec
pop
test
mov
iret
pop
out
push
dec
clc
lods
clc
inc
sub
aaa
outsl
push
addb
xchg
jg
lcall
movsb
xchg
jae
out
push
rolb
adcl
push
pop
outsb
mov
xchg
pop
scas
adc
dec
mov
mov
int3
dec
push
inc
sbb
mov
arpl
aad
out
dec
cli
pushf
test
popf
aam
data16
loope
std
in
jbe
jae
les
in
movsl
aaa
js
jecxz
add
xor
jl
dec
pushf
rcrl
jae
loope
adc
pop
mov
dec
lds
dec
add
jns
mov
jle
jo
mov
jge
xor
push
push
push
fdivl
loop
push
adc
mov
push
or
push
jp
sub
cltd
adc
dec
sbb
mov
pusha
adc
sub
sti
ss
popa
aas
mov
cmp
mov
or
dec
adc
adc
mov
dec
rolb
jl
cld
call
sbb
mov
stos
cmp
mov
mov
or
dec
mov
mov
daa
fstl
dec
in
add
adc
mov
cmp
xchg
sub
out
in
pop
push
inc
rorl
popa
mov
ljmp
lods
fxch
mov
mov
aas
xor
insb
xchg
ds
jle
fs
dec
pop
cmp
xchg
or
shll
mov
cltd
sub
cmpsl
adc
xchg
sbb
andl
out
push
xor
aas
adc
xchg
sub
testb
push
jmp
out
mov
lret
push
push
arpl
scas
jb
gs
xor
cld
pushf
sub
daa
and
sbb
sahf
cld
ja
rcrb
std
mov
out
sub
add
pop
or
es
xor
fwait
adc
or
dec
movsl
int3
cwtl
sbb
aam
cs
jns
cmp
int3
jg
fisubl
scas
insl
and
shl
inc
adc
mov
sbb
pop
inc
cs
and
xchg
adc
negb
push
push
or
inc
sub
test
in
stos
xchg
test
repz
mov
clc
mov
xor
adc
dec
mov
pop
inc
jecxz
outsb
clc
lret
inc
pop
cmp
jle
xor
sahf
jmp
arpl
ljmp
outsb
add
add
fldenv
fucomp
subb
push
mov
jbe
mov
insb
and
xchg
mov
mov
cmc
lret
roll
stos
adc
cs
inc
in
cwtl
shrl
and
xor
cmp
xchg
cmp
mov
mov
push
fidivrl
filds
ficoms
xor
enter
pextrw
inc
decb
adc
fs
mov
sbb
gs
or
insl
out
mov
xor
in
xlat
push
stos
dec
xor
into
lea
mov
bnd
pusha
push
push
stc
dec
rolb
add
adc
lahf
jo
popa
jnp
test
pop
shll
fmulp
push
aam
xor
and
call
pop
push
cld
rorb
push
jecxz
clc
dec
lcall
ss
aas
sti
cmpsl
je
sbbl
push
sbbb
insb
and
mov
and
int3
mov
pop
mov
mov
cmp
inc
push
fcmovb
push
pop
fisttpll
outsl
cwtl
xchg
xor
hlt
mov
rolb
sbb
ds
loopne
or
xchg
mov
inc
aam
jae
adc
jmp
fiaddl
sbb
sbb
leave
in
mov
sbb
xchg
fnstenv
mov
lcall
outsb
test
fistl
outsl
pop
mov
jle
inc
and
fcoms
in
je
imul
jle
push
push
jo
add
dec
adc
adc
bswap
mov
cwtl
cltd
sub
ds
push
fidivrl
mov
stos
jb
inc
arpl
dec
add
je
push
adc
ljmp
push
and
daa
enter
xor
mov
ss
pusha
xor
or
cwtl
sar
je
loopne
sbb
mov
int
dec
in
add
push
mov
rolb
nop
adcl
fcoms
add
jmp
les
insl
adc
mov
adc
cmpsl
fistpl
into
insl
xchg
loopne
cli
out
outsb
outsb
fcomps
movsb
push
xchg
dec
out
out
mov
push
jmp
imul
rolb
mov
xchg
mov
sub
ja
adc
mov
insb
std
mov
nop
cltd
mov
test
cmpsl
cmc
cmp
mov
jns
fsubrl
inc
mov
pop
xchg
out
int3
cli
das
jmp
inc
ret
repz
rorb
lock
popf
aaa
add
rcll
pop
rep
or
pop
mov
cmp
dec
xchg
add
ror
mov
fs
push
fiadds
mov
and
pop
push
mov
push
cltd
xorl
outsl
outsb
pop
incl
in
fdivp
std
rcrl
cmc
orl
jno
nop
rcll
mov
addr16
push
fidivrs
loope
fbld
ja
popa
sub
xlat
ret
jp
popf
xor
jo
bnd
fsubs
jae
inc
aad
jg
aas
out
xlat
int3
sub
aaa
mov
dec
fiaddl
loop
or
daa
bswap
push
pusha
and
je
fcoml
loopne
mov
bound
fsts
mov
arpl
dec
push
jae
inc
lock
daa
stos
cli
mov
and
in
or
sbb
fnstcw
dec
jae
dec
jg
aad
lret
cmp
or
fdivrl
outsl
adc
aas
mov
sub
dec
sbb
sbb
cmp
pop
test
lcall
push
xchg
cltd
mov
push
and
int3
xor
adc
mov
shrd
ret
cmp
inc
push
dec
mov
push
insl
xor
stos
outsl
test
adc
jae
jno
cltd
mov
xor
data16
rorb
into
cmp
ret
pop
idivb
pop
rolb
xor
arpl
jnp
fbld
inc
xorb
sub
push
leave
ds
sub
mov
mov
cmp
loope
les
sub
jno
jecxz,pn
fimull
sub
pop
cs
cld
rclb
jp
mov
xor
inc
js
or
sub
xchg
cli
fdivrs
jle
imul
je
insw
daa
repz
push
pop
fisttpl
dec
jmp
aaa
xor
enter
pop
cmp
xchg
push
sbb
arpl
add
notb
inc
push
xor
mov
adc
jmp
stos
fs
cmp
movsb
iret
xchg
mov
mov
dec
notl
lea
pop
loope,pn
push
mov
mov
icebp
lret
sbb
jp
push
push
shl
sub
das
fs
push
out
in
cld
pop
sub
xchg
adc
adc
push
pop
stos
ret
xor
and
ret
cmp
lods
addr16
stc
mov
cmp
add
cmpsb
aad
mov
popf
sub
inc
sub
bound
sbb
xchg
lcall
add
sti
mov
fs
push
xchg
cs
sbb
push
inc
sbb
lock
xchg
lods
outsb
ljmp
in
das
cwtl
xchg
popa
pop
dec
jle
push
cmp
mov
pop
mov
aaa
sbbl
movsl
push
fs
icebp
push
mov
pop
xor
or
push
lcall
xchg
sub
adc
inc
or
fnstcw
ja
cs
push
movsb
xchg
mov
inc
pushf
movsb
enter
sub
fists
or
mov
pop
cwtl
mov
jne
lahf
adc
add
or
xchg
jns
jecxz
push
lock
mov
out
push
roll
shl
fbld
pop
inc
iret
decb
pop
jle
xlat
sbb
out
ret
insb
fdivrl
or
xor
rcr
xchg
sub
pop
xor
sbb
mov
adc
fsubrs
adc
mov
scas
pushf
js
je
add
mov
test
outsb
mov
inc
jecxz
ret
jmp
jle
jo
dec
mov
pusha
pop
sbb
mov
push
in
testb
jl
ss
in
push
and
stos
loope
ja
mov
dec
test
dec
aad
call
out
movsl
or
mov
lret
inc
mov
xchg
xor
out
fucom
mov
xor
pop
or
aad
arpl
push
les
aaa
xor
in
jmp
pusha
leave
setbe
sub
into
and
clc
stos
mov
push
pop
rcl
outsl
xchg
mov
scas
sahf
les
into
jns
xor
mov
adc
outsb
cmp
mov
daa
in
imul
jns
cmc
push
mov
dec
or
push
inc
fadds
outsb
lds
fcoms
add
cmc
lret
mov
or
sub
or
add
repz
repz
push
sbb
popa
inc
pushf
jmp
cmp
cli
icebp
sbb
xor
gs
mov
xchg
mov
fbstp
ja
in
inc
cwtl
mov
jno
rorb
or
stos
in
pushf
rorl
mov
adc
mov
push
mov
xchg
scas
inc
sbb
in
or
lea
fs
addr16
stos
scas
xchg
mov
popl
fsub
fwait
adc
int
icebp
data16
mov
sub
add
dec
cmp
fisttpl
jb
fstpl
add
rol
insb
mov
sub
jmp
ret
inc
pop
cmp
sub
sbb
fwait
shll
jp
mov
xor
in
out
push
xchg
inc
loopne
push
ret
clc
adc
add
xor
movsb
jo
sbb
sar
dec
pop
repnz
mov
jle
into
and
insl
mov
fisttpl
xor
test
scas
lcall
xor
and
testw
lods
stos
inc
xchg
mov
arpl
invd
push
data16
int3
mov
movsb
jecxz
cmp
sbb
sub
jno
push
ljmp
add
pop
mov
int3
or
pop
movsl
jbe
addr16
mov
nop
lock
ficoml
pop
in
mov
daa
into
jg
ficoms
jge
cmp
pop
pcmpeqb
cmc
aas
push
xlat
sbb
loopne
incb
leave
mov
loope
push
mov
loopne
ss
sub
mov
pop
and
mov
out
pop
scas
dec
sub
scas
push
and
mov
sbb
and
out
es
ljmp
mov
cmp
fsubr
xor
mov
mov
testl
popa
sub
les
in
cmp
or
stc
cmpsb
std
cmp
jbe
or
les
fdivl
mov
push
sub
adc
mov
pop
push
mov
rorb
mov
dec
xchg
dec
add
dec
je
and
ss
inc
push
jo
rol
sbb
js
popf
lahf
add
mov
xchg
data16
imul
jg
fistl
jns
movsl
into
or
in
negb
xchg
ss
mov
scas
mov
outsb
dec
scas
xor
ja
add
in
jp
lahf
xor
lret
je
ret
outsl
test
mov
aad
out
std
xchg
jns
add
stc
test
jp
dec
shl
sar
mov
cmc
imul
cmp
xchg
xchg
inc
push
and
pop
sti
sbb
mov
leave
incl
lds
cmp
cmpsb
fs
mov
shr
out
lahf
es
dec
mov
int
xchg
aam
loopne
push
xor
add
cs
jge
inc
mov
dec
xchg
and
sbb
sti
push
adc
lods
or
push
inc
or
dec
xchg
cmp
or
add
loope
lock
cld
cmc
xchg
ret
out
pop
es
lods
push
inc
jmp
sub
bound
mov
iret
sahf
jmp
imul
pop
rclb
or
loopne
push
fsubrs
bound
mov
and
mov
in
fcmovnb
sub
xlat
or
push
popf
mov
sub
sbb
mov
or
push
dec
adc
push
call
fs
jl
addr16
push
mov
aaa
xchg
es
sub
sbb
in
jge
jae
repz
cmp
pop
push
pop
addr16
repz
andl
sub
xchg
jmp
mov
xor
mov
xchg
mov
fmuls
das
stc
cmp
pause
cwtl
testl
stc
sub
stc
stc
lock
std
sbb
add
dec
out
fsubr
mov
fimull
movsl
inc
pop
xchg
jge
cmp
xchg
mov
loopne
adc
lods
int
in
sbb
mov
fsubr
test
imul
icebp
cmp
cmpsl
push
or
outsb
and
inc
sti
jnp
and
iret
ficoms
fninit
pop
sub
stos
shll
sub
in
and
mov
and
mov
add
leave
mov
push
out
jae
adc
pop
dec
dec
out
mov
cld
cmp
mov
xor
popa
dec
mov
in
xchg
fldl
icebp
clc
pop
cmp
inc
push
leave
sub
out
mov
mov
repnz
adc
test
nop
cs
dec
inc
pop
cs
inc
cmp
sarb
fwait
incb
dec
movsl
cmp
cmp
push
lahf
out
mov
or
mov
lcall
mov
jne
sbb
ficoml
lret
imul
bound
xchg
cld
xchg
jbe
sub
add
mov
in
iret
sbb
int
fcoml
xor
aaa
and
mov
push
les
mov
push
mov
gs
arpl
sbb
inc
daa
into
out
fstps
add
sbb
push
mov
and
xchg
hlt
rcr
mov
movsb
inc
mov
test
inc
insl
popf
aas
mov
mov
ret
push
cmp
ljmpw
xor
leave
leave
out
mov
shrb
sub
xor
jns
ja
mov
adc
push
mov
lock
out
jns
and
sub
xchg
mov
xchg
inc
jp
lea
inc
adc
fcmovnb
cmp
mov
shll
outsb
ljmp
sub
lea
mov
push
test
decl
xchg
lods
jae
out
repnz
cmp
and
or
mov
andb
rolb
xchg
xor
mov
aaa
dec
sub
mov
arpl
push
lahf
cltd
out
addr16
in
push
addb
add
rcrb
mov
inc
pop
jns
lahf
in
std
mov
enter
add
add
lahf
shll
mov
bound
pop
lock
inc
push
fdivrs
cmp
and
cmp
xchg
bound
add
push
pop
sub
jo
or
jp
inc
dec
inc
dec
adc
add
jo
call
pusha
out
adcl
loop
jge
jmp
inc
in
add
adcb
or
and
push
in
test
decl
fdivr
push
inc
lds
std
cli
testb
flds
fldenv
add
lock
xchg
and
ds
mov
push
and
popw
out
sub
pop
xchg
outsb
sub
sbb
jae
loop
sub
push
and
es
sub
lock
imul
sti
int3
std
outsl
filds
mov
in
popa
mov
pop
mov
fistps
nop
lcall
and
outsl
addr16
pop
and
lds
xchg
push
xchg
lea
insb
aas
fcomi
jb
sub
lcall
add
arpl
inc
out
mov
jp
ss
sub
gs
adcl
pusha
scas
adc
ja
mov
mov
xchg
in
andb
leave
pusha
lret
test
xchg
into
xchg
xchg
push
jg
cmc
scas
loope
lret
xor
inc
push
sub
shll
ud0
xor
lods
cmp
mov
sbb
add
fldt
push
ret
xor
mov
out
push
push
std
shl
stos
add
fmuls
sahf
lods
xor
sbb
push
in
dec
lods
ret
int
dec
cltd
pop
mov
mov
inc
adc
xor
sbb
xchg
mov
xor
jo
lock
mov
adc
mov
addr16
in
loop
gs
pop
fcmovbe
and
jmp
sub
cmp
jns
inc
add
lds
mov
ret
shlb
xchg
outsb
mov
pop
lods
addb
adc
or
sub
ljmp
pop
inc
or
cmp
or
add
or
dec
fsubs
cmpsb
sub
je
out
pop
ss
in
int3
sub
push
lds
sub
mov
or
jne
loopne
mov
cmc
jbe
aaa
or
or
xor
jbe
arpl
sbb
sbb
ljmp
sbb
adc
out
rcl
cmp
test
adc
sbb
fmuls
mov
jl
and
mov
sti
subb
add
and
lods
pop
push
cli
jecxz
push
popa
inc
dec
movsl
imul
inc
push
sbb
shlb
ficoms
loopne
pop
in
sbbl
cmc
xchg
popf
jo
repnz
testl
mov
lret
and
lea
cltd
fneni(8087
push
outsb
and
cmc
cmp
xchg
enter
sbb
xchg
ret
pushl
addr16
mov
rorb
nop
mov
or
xchg
test
leave
pop
into
lcall
ljmp
mov
push
ljmp
jp
movsl
int3
ss
ret
jg
outsl
push
sbb
jb
adc
in
fmul
out
in
gs
bnd
or
add
insl
sub
sbb
jnp
push
lds
sahf
add
dec
mov
dec
adc
mov
lods
idivb
es
andb
adc
cmovno
loop
outsb
dec
shlb
dec
insb
rcrl
loopne
movsb
and
jns
lcall
push
push
xchg
mov
aaa
out
insb
lahf
sub
mov
dec
insl
data16
loopne
add
cmp
xlat
fimuls
and
mov
test
or
push
cs
dec
ffree
pushf
scas
hlt
repz
cmp
repz
mov
fcmovu
test
sub
xor
lock
dec
fcmovnu
mov
int3
xor
out
mov
xchg
push
jecxz
or
pop
dec
sub
xchg
mov
stos
sub
xchg
shl
subb
sbb
dec
scas
xchg
pusha
cmp
lea
inc
movsb
mov
push
into
je
loope
mov
jg
or
push
sbb
inc
aaa
cli
adc
cltd
xchg
aaa
js
mov
cli
dec
out
cmpsl
sbb
mov
xor
and
test
into
xlat
inc
daa
icebp
cmc
fsubs
jg
lret
mov
cmpsl
xor
out
lods
jo
xor
jmp
das
cwtl
or
jle
jl
dec
imul
mov
sbbl
aaa
pop
js
shrl
lods
mov
sti
pop
push
or
std
clc
pop
mov
hlt
jns
stc
inc
fimuls
inc
repz
ret
hlt
dec
push
ficoml
icebp
out
imul
pop
cld
push
ss
jnp
loop
outsb
lds
cwtl
and
in
dec
mov
movsb
outsb
stos
movsl
je
dec
xchg
in
add
xchg
sbb
call
int3
add
movsb
sar
pop
fiadds
shr
lcall
mov
ljmp
int3
or
inc
clc
dec
loope
sub
push
cs
stos
lcall
jb,pn
push
ret
out
push
sub
sbb
lods
mov
or
add
repnz
adc
sub
scas
mov
outsb
adc
cmp
loope
cmp
popf
sarl
dec
in
push
ds
mull
pop
sbb
aas
pop
and
pushf
pop
lock
mov
push
nop
pop
inc
hlt
insl
or
xor
add
mov
addr16
pushf
sbb
and
mov
cmc
adc
ja
xor
test
ljmp
imul
mov
jo
jg
sub
ret
ja
sub
aam
mov
outsb
mov
sahf
inc
insb
test
pop
mov
pop
mov
pop
mov
mov
cmp
xor
hlt
icebp
sub
test
pop
popa
nop
adc
add
push
pusha
dec
jae
repz
adc
fadd
mov
insb
mov
es
jo
lret
add
add
es
mov
loope
stos
fiaddl
adc
mov
loope
jp
add
pushf
push
push
add
arpl
mov
bound
mov
pop
adc
xchg
call
xor
clc
jp
sahf
sti
inc
jecxz
test
bound
lods
mov
cmp
ljmp
ja
and
jge
repz
jns
pop
dec
test
and
sti
dec
leave
sub
hlt
sub
clc
cmp
mov
jmp
and
ljmp
jle
mov
jl
fiadds
mov
xchg
or
mov
ror
pop
xchg
ljmp
test
das
adc
test
adc
mov
push
subb
xor
jmp
lahf
mov
cmp
push
in
mov
jmp
dec
sub
cmc
es
pop
mov
movsb
ret
fxch
pop
xchg
adc
xchg
sbb
jae
mov
sbb
mov
inc
jne
or
std
pushf
pusha
adc
adc
sub
inc
pop
repnz
sbb
ret
xchg
inc
jb
imul
or
cwtl
mov
jns
xor
jb
or
mov
push
push
jb
rcr
std
pushf
dec
stos
sbb
xor
xchg
int3
lock
add
in
adc
ret
ficomps
and
dec
jnp
loopne
adc
cli
jbe
fbstp
mov
js
mov
dec
pop
lds
pop
jns
addl
add
in
push
sub
pop
hlt
pop
mov
gs
sub
scas
sahf
mov
jns
pop
out
sub
test
lock
xor
or
dec
push
loop
pop
push
rorl
xor
cmp
loop
or
cmpsl
dec
push
dec
ss
mov
std
push
fdivl
add
fldl
dec
lret
fnstenv
shrl
movsb
cmpsl
adc
ret
inc
inc
push
adc
mov
xchg
xchg
in
push
cmp
pop
push
pusha
mov
xor
popf
or
insb
js
pusha
jb
stc
hlt
test
xchg
cmp
and
lock
ss
jne
jnp
les
lret
sbb
ret
xor
inc
and
aad
xchg
mov
pop
dec
icebp
test
stos
jle
jno
push
cltd
into
int
sub
mov
mov
cmp
in
ror
fsubr
adc
jbe
fxch
push
push
sarb
rcrb
outsb
add
sbb
jbe
test
pop
dec
and
movsl
hlt
fs
daa
imul
pushf
insb
sbb
dec
sarb
test
out
ss
cmp
int3
xor
dec
js
xor
cs
lods
jno
nop
call
loop
cmp
les
adc
orb
adcl
add
in
mov
xchg
loop
inc
leave
cmpsl
cmc
add
adc
insb
xchg
std
mov
mov
mov
imul
dec
out
push
push
rcr
or
pop
pop
jae
jp
mov
and
mov
dec
mov
jbe
jns
sahf
rorb
pop
stos
lods
in
int
sahf
mov
js
leave
cmp
push
shlb
push
inc
in
sbb
xor
outsb
aam
std
lods
or
fstps
mov
cmpsb
jle
or
test
mov
imul
adc
fs
jne
rorl
push
js
cmovae
cmpb
loop
lahf
fmull
mov
add
mov
mov
jmp
lods
push
sbb
enter
pop
sub
movsb
jns
call
lds
jecxz
mov
cmp
jecxz
push
or
xchg
jl
cmpsl
adc
stos
xchg
and
scas
pop
or
imul
or
and
fiadds
loopne
mov
psllq
mov
push
cmp
add
mov
ret
rcrb
mov
dec
add
lods
add
lds
movsl
adc
mov
stc
xchg
stos
inc
pop
xchg
cmc
xchg
or
fdivl
jmp
iret
jg
mov
fwait
je
pushw
pop
mov
push
jmp
into
lret
pushf
cmp
add
adc
or
leave
loopne
sbb
mov
and
je
enter
and
or
loope
imul
int
cmp
sub
test
mov
pop
out
add
shl
xchg
push
pop
mov
jb
dec
jo
lret
dec
mov
lahf
dec
mov
in
lods
enter
outsl
adcl
insb
push
shl
and
gs
dec
dec
sbb
imul
fcmovnbe
popa
push
imulb
loope
adc
and
mov
inc
mov
ds
popf
push
mov
xchg
sub
imul
xchg
hlt
hlt
cmpsb
mov
jle
adc
sbb
stos
pop
es
sub
xchg
xchg
adc
mov
and
movsb
les
scas
je
sbb
mov
add
jbe
je
push
cs
test
mov
xrelease
roll
sbb
cmpsl
lock
jge
addl
jg
and
int
sbb
popf
inc
in
mov
cmpsb
sti
jae
add
mov
lret
inc
lahf
add
sub
push
out
and
out
pop
push
andl
sbb
fwait
dec
or
sub
test
sub
leave
data16
add
clc
stc
insb
in
dec
insb
pop
cmp
fsubr
shlb
int3
add
xchg
sbb
jg
call
cmp
sbb
push
lods
inc
mov
cmp
int3
mov
sub
jbe
into
cmp
or
pop
out
push
popa
sbb
push
sbb
jg
sbb
cld
mov
or
mov
je
mov
push
fs
mov
scas
cmpsb
sub
fwait
shrl
test
stc
push
pop
push
icebp
jns
jb
add
add
fildl
jg
inc
ss
lahf
pop
cs
movl
stc
repz
xchg
shr
mov
push
rclb
rol
imul
mov
lret
insb
adc
jns
sti
insl
addr16
mov
or
xchg
mov
xchg
fdivrs
fstpl
add
jp
movsb
sub
add
inc
movsb
sbb
sbb
ljmp
cmpsb
mov
sbb
movsl
incl
adc
imul
jae
es
ss
jbe
sbb
shrb
leave
test
mov
out
mov
scas
loop
pop
icebp
repnz
xchg
cmp
mov
xor
add
andb
add
sbb
loop
push
int
mov
shl
cmp
adc
push
mov
addl
sbb
sub
nop
jl
fnstenv
stos
jl
add
push
sbb
rcr
xchg
and
ficompl
push
ss
sar
or
in
push
mov
mov
pusha
js
mov
inc
add
ret
mov
lea
inc
mov
mov
ljmp
and
rcl
sub
clc
sbb
jmp
xor
out
fistpl
xchg
punpckldq
dec
lods
ds
add
mov
int3
daa
jae
or
add
stos
ret
sbb
pop
jmp
push
aad
jbe
mov
adc
lcall
enter
cmpsl
mov
pop
adc
xchg
fidivrs
cmp
fstl
jae
adc
sbb
jo
loop
mov
rorb
insl
mov
outsl
pop
pop
mov
jg
addr16
stc
and
pop
pop
cmp
adc
mov
and
repz
mov
mov
icebp
test
mov
rcll
daa
lds
xor
xchg
mov
lods
bound
adc
leave
add
cmp
lcall
nop
insb
stc
dec
je
mov
test
out
call
adc
mov
imull
je
adcl
jo
and
pop
les
adc
int
pop
pop
jmp
dec
inc
dec
dec
movsl
icebp
out
sub
insb
aad
add
mov
into
daa
push
not
push
mov
lods
in
and
jge
add
popa
ljmp
add
aad
and
repnz
xor
push
ret
jmp
dec
sarl
inc
jmp
cmp
popl
cltd
ja
inc
mov
mov
dec
xchg
sbb
jno
pop
cmc
push
les
xor
movsb
jae
pop
xor
lds
and
call
sti
cltd
lds
inc
mov
adc
jge
fucomip
divb
jecxz
enter
pop
outsl
repnz
mov
xchg
or
push
dec
mov
sarl
or
pop
jae
jg
xchg
loope
inc
out
jne
clc
xchg
cmp
enter
dec
and
mov
add
int
xor
in
cmp
push
adc
mov
and
repz
cmp
das
movl
inc
cmpsl
jl
jle
or
cmpsl
or
mov
insl
cmpsb
ja
daa
adcb
int3
jno
pop
adc
das
xchg
test
iret
pop
out
sbb
fldcw
aaa
jecxz
jo
ret
push
ss
pop
js
cs
pop
fcompl
mov
mov
push
push
out
push
fs
xlat
add
int
xchg
inc
mov
dec
jns
sub
out
out
arpl
nop
aad
jo
imul
xchg
dec
inc
aas
fnstcw
push
xorl
test
arpl
adc
sub
pop
loop
inc
and
push
pop
movsl
sbb
loopne
jle
into
cmp
xchg
inc
notb
jle
push
lret
les
in
lret
xchg
fisubrl
inc
dec
xchg
loope
jne
mov
xchg
into
and
daa
jle
jns
rorl
pop
cmp
clc
mov
mov
and
test
movl
fisttpll
inc
addr16
daa
and
xchg
jmp
adc
push
aam
in
xor
push
adc
into
push
jge
add
inc
add
sbb
rcrl
daa
mov
mov
add
mov
xchg
outsb
test
rcl
sbb
loop
ret
mov
mov
add
in
sbb
or
imul
add
repnz
mov
pop
xor
inc
sub
xchg
xchg
adc
movlps
push
jo
mulb
xlat
pop
xchg
dec
xlat
push
lea
push
int3
int3
cmpl
out
scas
stos
adc
xor
or
xlat
testl
pop
scas
in
mov
mov
inc
dec
ds
lds
push
popf
dec
mov
pop
bound
cmpsb
push
call
add
insb
jmp
mov
and
inc
and
in
cmp
xor
lods
push
adc
xchg
movl
aam
cmpsb
rclb
push
mov
add
jo
mov
sub
rcrl
push
jle
mov
mov
outsl
dec
int
stos
stos
test
adc
mov
fmuls
insl
iret
popa
pop
push
or
and
test
rep
lods
movsl
fcomp
adc
and
sub
inc
push
adc
pop
in
mov
mov
movsb
add
lods
fcomps
faddl
mov
pop
outsb
xchg
mov
add
call
dec
dec
dec
pop
lret
test
sub
add
nop
mov
ror
loopne
mov
mov
fs
dec
xor
daa
dec
fbld
clc
xchg
sbb
or
jbe
inc
and
mov
add
pushf
pusha
jns
lods
mov
jns
aaa
sbbb
dec
dec
mov
popf
add
pop
mov
stos
mov
dec
insl
lcall
or
aaa
mov
mov
inc
lret
dec
sub
pop
pop
and
enter
jno
mov
and
lret
inc
aas
push
jmp
dec
hlt
or
adc
cwtl
sub
or
notl
or
jge
mov
ljmp
push
stos
sub
dec
in
aaa
insb
andb
jg
sbb
adc
sub
jle
insb
movsl
pushf
jb
jge
mov
dec
ret
dec
fsubs
les
push
fnstcw
imul
fwait
xchg
xor
fs
getsec
test
in
out
mov
scas
mov
jne
addr16
and
das
outsb
dec
out
call
cli
cmp
cmpsb
adc
cmpsb
stos
xchg
icebp
mov
repnz
lds
dec
xchg
test
mov
add
xor
insl
bound
mov
and
popf
and
divb
sbb
cmp
sbbl
shrb
rolb
fistps
pushl
pop
mov
inc
sub
loopne
shlb
or
aad
lcall
testl
sbb
ret
int3
push
out
push
inc
fsubrs
icebp
pop
push
fisubs
pop
mov
shll
dec
cmp
xchg
test
xor
xor
sub
test
add
jl
dec
ret
mov
xchg
pop
scas
xchg
mov
adc
sub
aaa
lret
dec
mov
sub
mov
fwait
lcall
mov
and
sti
jp
sbb
in
movsl
mov
aad
xchg
mov
dec
mov
adc
xchg
lods
call
dec
push
inc
pop
sbb
fldenv
rorb
dec
jge
scas
mov
mov
sbb
dec
leave
sti
mov
cmp
ret
add
data16
dec
pop
xchg
daa
ja
fs
les
outsl
in
bound
cmp
mov
hlt
pop
cmpsb
dec
add
add
icebp
in
lcall
mov
xchg
xchg
jmp
jnp
mov
sbb
dec
xchg
cmp
sub
adc
mov
test
cmp
mov
filds
pop
mov
sbb
and
lret
add
adc
leave
fisttpll
pushf
rolb
mov
movsl
mov
shlb
stos
and
ror
arpl
mov
add
fisubrs
mov
fcmovne
pop
out
out
repz
and
add
add
rclb
push
stos
lret
iret
push
sbb
aaa
lods
iret
cmpb
rclb
jo
pushf
in
jbe
jle
ret
jbe
shrl
sub
repz
lock
push
sbbl
and
and
adc
jae
cmp
pusha
push
adc
add
in
aam
xor
lret
inc
inc
push
aas
enter
loop
pop
enter
loope
mov
nop
xorb
push
mov
aad
enter
or
push
ret
int
or
xchg
pop
repz
jl
jae
mov
mov
enter
jno
mov
jmp
test
lret
fld
inc
jl
mov
mov
out
push
push
sarb
xchg
adc
pushf
pop
fcmovu
xchg
in
push
out
add
insl
into
pop
adc
addr16
aaa
and
jno
lret
ds
push
lods
cmp
fisubs
pusha
jmp
dec
stos
add
andb
aad
out
push
fcmovnu
ret
mov
sbbl
cmp
cmp
push
out
out
sub
mov
rcrb
lret
shll
imul
mov
jbe
jmp
mov
jg
mov
int
mov
or
jl
xor
inc
fs
aaa
lock
mov
and
push
xchg
xchg
xor
out
enter
pop
fwait
pop
fcoml
fwait
test
push
push
loope
and
mov
outsl
mov
cli
lods
iret
in
cmp
arpl
call
xchg
lds
xchg
sbb
sbb
lock
cmpsb
mov
sub
push
sub
jle
pop
jns
xor
test
sub
mov
add
inc
daa
in
mov
les
andb
lcall
cmpsl
insb
fbstp
jg
xchg
pop
movsb
inc
sub
mov
xchg
mov
jge
jnp
insl
lret
int
test
jbe
gs
out
mov
js
andl
xchg
aas
sub
push
xchg
int
add
lret
adc
test
cld
and
les
std
jmp
pushf
aas
sub
mov
jno
cs
and
dec
add
subl
cmp
clc
jno
setbe
and
js
mov
xchg
out
repnz
and
add
add
fimull
add
nop
mov
cmp
xor
jmp
vcvtdq2pd
pop
cld
xchg
add
cld
push
cwtl
add
popa
mov
loop
mov
mov
into
mov
xor
sub
sub
and
mov
jge
jns
js
iret
addr16
cltd
outsb
xor
mov
jmp
das
insb
push
sbb
push
mov
aad
bound
mov
sub
and
rcrb
ljmp
ja
mov
adc
stos
inc
nop
pusha
pop
xchg
stc
mov
fimuls
mov
sti
cmp
scas
movsb
in
adc
xor
adc
outsl
mulb
mov
mov
roll
xchg
adc
xchg
fcomi
xchg
cmpsb
sub
mov
xor
pop
dec
jl
cs
jb
mov
xchg
pop
pop
xlat
lret
int3
imul
jmp
in
push
imul
in
andb
xchg
sub
out
push
and
push
adc
daa
scas
jnp
out
aas
xchg
mov
jmp
xchg
jo
punpckldq
pushf
xchg
in
lahf
mov
mov
mov
cmpl
pop
pop
xor
jno
icebp
mov
je
and
in
jle
in
sbb
sbb
es
jb
sub
fcompl
xchg
in
fwait
pop
cmp
test
mov
outsb
cwtl
lock
cmpsl
cmp
xchg
fcmovnbe
mov
mov
mov
xchg
mov
call
dec
xor
mov
test
jmp
cld
in
mov
or
and
jns
pop
sbb
lods
in
scas
xor
out
clc
fistl
inc
daa
push
dec
cmpb
arpl
mov
rep
pop
add
mov
dec
adc
cld
sbb
ds
iret
loopw
mov
cltd
rorl
ret
loop
jmp
adc
mov
pop
loop
addr16
add
inc
dec
mov
sub
aam
mov
roll
xchg
jmp
insb
mov
leave
cmc
dec
push
mov
push
flds
lret
jbe
mov
sub
lock
mov
insb
sbb
fs
push
xor
mov
lock
xor
pop
mov
or
je
sub
cmp
fbstp
or
mov
cld
inc
fbld
es
xor
xor
push
lods
push
div
xchg
das
pop
repz
jmp
gs
xchg
das
cmp
ja
dec
pop
fdivrs
sub
sub
insb
xchg
les
mov
xor
xchg
xor
inc
add
jb
leave
add
mov
mov
push
fcom
int3
dec
add
int3
add
lods
push
mov
jbe
pop
ret
and
les
data16
jmp
movsb
mov
ret
rcrl
sahf
addl
and
jg
aam
push
in
push
xchg
push
mov
jmp
inc
les
cld
es
loop
and
or
into
addr16
icebp
sub
adc
sub
push
jp
jne
dec
pop
cmp
xchg
in
pop
add
jnp
subl
jg
stos
cmc
push
push
cs
dec
outsb
ljmp
sub
enter
cltd
dec
cmpl
fisubl
push
js
lods
ss
add
sub
mov
sar
push
sbb
inc
mov
test
xchg
pop
push
insb
jo
insb
test
mov
mov
mov
movsb
push
cmpsl
mov
enter
mov
lds
idivl
jl
addr16
pop
dec
push
out
pop
addr16
iret
clc
loop
jl
scas
xchg
les
fdivp
pop
inc
fldcw
inc
gs
ja
imul
jmp
loopne
sbb
add
imul
mov
pop
pushf
in
or
jb
and
hlt
dec
dec
add
pop
ficoml
flds
ss
pop
aam
fucomip
cltd
jo
mov
inc
fsubrs
pop
xlat
lods
rclb
aad
add
sbb
mov
daa
xchg
pop
or
cltd
adc
out
dec
addl
imull
xchg
insb
or
addr16
xor
push
mov
push
adc
xchg
mov
je
push
lods
rcll
loopne
lods
js
push
aam
cld
push
les
ljmp
add
sub
popf
xchg
jecxz
std
xchg
fists
ret
out
xor
dec
stos
lahf
sub
adc
lea
in
sbb
sbb
sub
shll
push
sbb
xor
push
cs
insl
sbb
mov
adc
ds
imul
mov
call
push
inc
jbe
mov
and
mov
push
int
imul
jl
jg
mov
mov
sbb
push
ds
sub
lcall
rcrb
adc
iret
sbb
rcl
dec
lret
ret
nop
cmp
fisttps
jne
scas
cltd
xchg
mov
in
lahf
lcall
mov
xchg
cwtl
inc
pop
cwtl
jbe
adc
xchg
jae
imul
in
lods
loop
adc
mov
pop
dec
loopne
loop
or
rclb
sbb
loope
adc
jne
mov
jnp
aas
sub
push
inc
mov
ja
mov
inc
stos
fsub
gs
ds
iret
hlt
mov
shll
pop
in
pusha
sbb
jge
add
jo
int
xlat
leave
bound
add
jno
jge
mov
jae
xor
jae
or
test
lcall
scas
jns
js
add
roll
mov
and
leave
outsl
or
pop
clc
inc
in
stos
adc
inc
fst
pushf
push
fnstcw
push
mov
pop
mov
mov
sub
mov
cmpsl
and
mov
add
mov
push
jecxz
in
inc
xor
pop
adc
sub
cld
xor
sbb
dec
inc
ret
lock
lock
test
push
mov
out
aas
add
push
jns
jbe
sbb
mov
xchg
test
adc
mov
jno
hlt
cmp
dec
inc
mov
lret
inc
and
cmp
iret
dec
mov
and
xor
pop
add
jp
xlat
ljmp
mov
cmp
cmpsl
mov
ds
mov
sub
call
sbb
clc
cs
push
xor
push
sarb
dec
and
aas
and
sub
mov
xor
dec
lret
cmp
je
lret
mov
nop
lret
iret
pop
aas
jecxz
add
jge
pop
fcoml
adc
mov
lods
cmp
lahf
cltd
movsb
stc
test
rcr
push
ret
pop
cld
sbb
mov
push
mov
xor
push
xchg
fnstsw
fildl
pop
jp
fists
dec
ret
outsl
imul
fldenv
mov
dec
xchg
jecxz
push
lea
out
dec
repnz
jmp
jbe
cmc
movsb
push
sbb
add
adc
repz
int3
mov
mov
clc
pop
xchg
mov
sbb
adc
mov
aas
popa
fnsave
dec
jmp
jno
pushf
stos
push
pop
xchg
sub
leave
testl
jb
jnp
dec
repz
sub
push
pop
adc
std
push
int3
mov
cmpb
or
add
mov
xchg
pop
jmp
mov
lahf
imull
cmp
cli
dec
mov
or
mov
repz
iret
mov
add
in
mov
icebp
jmp
xor
add
mov
inc
inc
jmp
lods
lret
mov
mov
repnz
cs
cmp
sub
imul
movsl
fs
mov
inc
fnstcw
addr16
lea
xchg
and
loop
or
jne
pop
sbbb
cs
mov
dec
insb
icebp
cmp
cmpsl
negb
shlb
lcall
cmpl
sub
add
pushf
hlt
push
adc
leave
or
stos
iret
mov
xlat
sub
les
inc
cmpsl
flds
push
ret
mov
adc
cli
cld
int3
xchg
push
push
stos
xor
enter
xchg
xchg
inc
jecxz
mov
ds
jo
gs
mov
test
cmc
adc
pushf
popf
mov
enter
xchg
repz
inc
popl
neg
mov
mov
into
loope
icebp
sbb
and
push
ret
xlat
ds
in
popa
dec
sub
rcll
and
xchg
rcrl
jl
stos
jl
jne,pt
sub
add
enter
xchg
loope
xchg
test
push
dec
insl
mov
dec
dec
mov
iret
in
mov
fldt
xchg
push
xchg
cmp
fwait
pop
pop
mov
enter
inc
imul
pop
cmp
lahf
popf
sbb
dec
mov
stc
mov
or
test
xchg
dec
fstpt
mov
pop
daa
fidivl
pushf
mov
lahf
jno
mov
sub
leave
arpl
ljmp
popa
mov
push
data16
cmp
cltd
inc
mov
sti
adc
mov
fisubs
dec
or
xor
lods
call
cmpb
mov
gs
aas
or
pushf
mov
sbb
sub
cmp
cmpsl
sub
sarl
int
aam
and
das
lcall
cli
xor
popf
xchg
sub
jg
loop
mov
in
jg
pop
jns
fsubs
dec
mov
test
xlat
push
mov
jns
lret
add
pop
test
mov
sbb
dec
icebp
imulb
inc
ret
ret
lcall
adc
push
adc
inc
shll
ja
lods
cld
sbb
and
mov
into
aaa
outsb
xchg
jae
fildl
mov
push
inc
insl
sub
mov
pop
nop
or
lret
push
hlt
fisubrs
dec
dec
incb
movsl
lcall
sbb
sub
sbb
repz
mov
sub
push
jae
dec
jecxz
sub
or
sbb
loop
mov
loop
jmp
popf
cmpsb
adc
cmp
mov
pop
jmp
aaa
sub
aam
sub
in
push
cs
sti
inc
inc
adc
or
mov
jnp
mov
aaa
movsb
rorl
jae
jmp
popf
cmpsb
inc
out
jne
sub
xor
jecxz
insl
sbb
mov
push
loope
js
test
mov
adc
dec
aam
cmp
mov
aam
adc
out
scas
das
ds
ret
int3
xchg
test
sbb
pop
or
mov
cwtl
push
into
outsb
dec
andb
lock
inc
dec
ret
dec
lret
push
movsb
xchg
imul
xor
jp
cld
add
jne
fstp
out
divl
xchg
pop
mov
xchg
les
aas
repz
or
js
mov
push
pop
popa
push
lret
outsl
inc
mov
je
push
jbe
or
iret
pop
xor
inc
jp
lock
mov
call
andl
fs
mov
lret
sbb
movsl
pop
cltd
lods
mov
mov
and
push
insl
loope
mov
mov
ja
dec
or
hlt
mov
xchg
mov
rorl
inc
inc
jge
dec
int3
sarb
jo
fwait
push
inc
fiaddl
neg
dec
and
jge
lahf
test
sahf
mov
dec
adc
cmpsl
xor
xor
out
out
icebp
and
call
adc
xchg
mov
gs
mov
movsl
aam
mov
sub
daa
pop
push
mov
jmp
inc
adc
mov
sbb
cli
ja
shr
cmp
xor
pop
out
repz
int3
stc
mov
xor
mov
push
xchg
mov
xor
andl
or
or
cltd
cmp
mov
or
or
dec
incl
data16
pop
push
push
dec
adc
inc
dec
xor
mov
addl
cld
mov
mov
mov
pop
push
sub
cltd
std
imul
mov
inc
pop
or
popa
enter
dec
repz
fldcw
pop
cwtl
xchg
ds
into
mov
in
pop
lret
int3
icebp
rcl
sbb
mov
jb
ja
les
outsb
sbbl
xlat
in
sbb
mov
std
jl
iret
sbb
sbb
cmp
addr16
mov
xchg
jne
pop
mov
dec
icebp
pushf
jae
push
sub
mov
push
test
std
sbb
mov
mov
incl
push
clc
in
int
xor
cmc
add
movsb
mov
lods
ds
out
in
inc
xchg
jp
cmp
test
sbb
sub
scas
jne
cmp
dec
pop
daa
dec
jns
jo
add
ds
scas
dec
mov
xchg
scas
aas
sbb
inc
xor
out
jmp
mov
out
mov
fiadds
fs
in
dec
mov
sub
repnz
sbb
jb
sbb
mov
cmpsl
pop
jo
mov
mov
inc
mov
stos
xchg
out
outsl
mov
stos
scas
imul
imul
push
mov
xor
popl
dec
or
add
jno
add
add
popa
mov
jecxz
cmp
ret
mov
jbe
xor
jns
cmpsl
pop
inc
cmpsl
adc
push
arpl
dec
jns
dec
negb
adc
lcall
mov
sub
cwtl
fsubrl
pop
add
dec
inc
add
cs
outsl
mov
dec
mov
int
les
cmp
mov
cmp
movsb
fidivrl
popf
hlt
sub
push
scas
push
push
in
jmp
insb
mov
cli
pop
into
pop
add
imul
jbe
dec
lcall
lock
cld
cwtl
xor
mov
jns
insl
pop
and
cld
int3
add
xchg
lea
aaa
xor
dec
out
pop
xchg
shlb
test
jmp
mov
cmp
mov
addr16
dec
push
fs
int
jle
mov
sub
out
fldcw
iret
inc
mov
sbb
sbb
movsb
xor
inc
jp
xor
enter
sub
pop
imul
push
ss
mov
push
mov
stos
lock
xor
mov
insb
xor
xor
clc
pop
std
add
xchg
mov
out
jno
ss
push
and
ret
leave
rolb
imul
cmp
mov
loope
test
xchg
pushf
and
pop
mov
pop
cmc
cmp
dec
lods
jmp
test
pop
into
test
cmpsb
out
sub
negl
mov
loop
mov
in
jp
into
add
iret
in
jb
fsubrl
mov
push
cmpl
jae
outsl
and
rcrb
inc
dec
cmp
xor
jne
repz
mov
push
mov
cltd
jbe
or
fmul
iret
sbb
push
sub
rcrl
and
mov
adc
loopne
rclb
xor
ds
push
rcl
lret
out
push
dec
sbb
mov
or
dec
cmc
cltd
or
lods
inc
fcoms
pop
push
into
pop
sbb
aas
lock
sbb
cs
xchg
inc
lock
sub
xchg
std
jl
jae
out
pop
adc
jp
sbb
and
ret
scas
sbb
jg
mov
xor
add
xchg
aam
jg
arpl
pop
push
inc
aad
sbb
pop
insl
or
and
int3
and
add
push
scas
sbb
jecxz
cwtl
cld
add
mov
daa
pop
push
test
lods
into
jae
push
xchg
or
iret
fnstcw
es
arpl
pop
ret
inc
or
je
ljmp
lock
mov
or
sbb
movsb
xor
xchg
in
inc
mov
mov
jmp
andb
sub
xchg
ficoms
fs
int
data16
insb
icebp
adc
ficompl
mov
mov
sarb
lods
cs
adc
scas
pop
sub
cmp
push
clc
lcall
inc
dec
stc
xlat
push
das
daa
notb
sub
or
adc
add
dec
cmc
add
adc
jp
xchg
pusha
aas
test
fcmovnbe
rorl
stos
pop
popf
mov
dec
push
mov
or
mov
xchg
sbb
jl
scas
loop
test
shlb
xor
xor
out
push
xchg
imul
and
aaa
into
sar
jae
xchg
pop
addl
mov
insb
inc
pop
fwait
negb
call
lret
jbe
in
insl
les
rcl
cs
out
imul
std
sbbb
int
xor
lods
or
mov
sub
jecxz
test
test
nop
jo
lods
fstpl
call
sbb
movsb
stos
xchg
sub
sbb
das
lahf
test
dec
stos
outsl
mov
push
outsb
adc
mov
dec
push
sbb
int3
jo
push
lds
xorl
cmpl
in
addr16
cmp
cmpsl
ss
roll
cmpsb
sub
aam
test
or
adc
mov
pop
std
jle
jg
notb
pop
stos
mov
cwtl
dec
cltd
pop
push
xchg
pop
imul
mov
xor
xor
aas
addr16
inc
or
out
sbb
repnz
notb
insl
aad
sbb
setne
mov
push
sbb
add
add
adc
adc
enter
push
aad
cld
roll
lds
fcompl
pop
adc
orb
bound
xchg
pop
mov
lcall
popf
loope
xorb
test
hlt
ficompl
fadd
mov
popa
out
mov
xor
fs
pusha
adc
mov
pop
mov
xor
ds
mov
mov
adc
adc
pop
pop
sbb
imul
out
out
sbb
pushf
mov
xchg
or
pop
add
into
in
inc
imul
cld
or
loop
and
mov
pop
sub
orb
and
xlat
std
in
jge
das
cltd
add
dec
add
insl
aaa
push
dec
inc
mov
xor
cwtl
xor
push
dec
nop
jmp
ror
test
push
sub
inc
out
leave
lock
mov
jns
das
pusha
lods
mov
lcall
dec
sbb
lahf
aas
pop
mov
lcall
xor
jae
mov
scas
call
or
loop
or
xchg
cmpsl
push
mov
clc
int3
hlt
pop
push
sub
leave
out
clc
pop
out
add
xchg
adc
or
pushl
cmp
cmp
jl
dec
add
dec
xchg
lahf
iret
cld
xor
push
sub
jmp
jle
jl
int
pop
xor
orl
push
adc
mov
mov
push
or
fs
ret
inc
lds
cmpsb
cmpsl
sub
gs
in
pusha
cmp
ret
sub
sbb
inc
pop
pushl
outsb
clc
ficompl
rorl
fistl
sbb
xor
repnz
cmpsl
loopne
cmp
sbb
cmp
inc
xor
pop
vpcmpeqb
mov
rclb
sbb
xchg
jb
xchg
aaa
jno
cmp
adc
pusha
aam
iret
pop
add
aas
lahf
push
out
cmp
add
test
pop
mov
pushf
xor
pusha
aaa
stos
out
ja
mov
push
stc
jbe
adc
and
notl
xchg
imul
imul
add
pushf
push
mov
dec
and
add
nop
adc
jae
clc
mulb
into
pop
insb
mov
push
test
insb
push
fnstenv
rcrb
add
jecxz
or
mov
data16
xor
faddl
filds
bound
and
cli
ret
pop
adc
jl
xor
mov
cmp
and
sub
xchg
mov
mov
decl
dec
inc
cmp
in
int3
push
mov
sub
cmp
lcall
pusha
mov
pop
data16
test
mov
mov
mov
aaa
or
jnp
mov
enter
inc
arpl
test
and
loop
adc
mov
pushl
push
fisttpll
out
xchg
movsb
arpl
decl
stos
cmp
or
vsubpd
pop
mov
sub
mov
jno
xor
sbb
les
popa
mov
adc
xor
iret
pop
xor
and
arpl
daa
aam
cwtl
inc
xlat
loop
insl
incb
mov
mov
sbbb
push
loope
sar
jae
iret
xchg
mov
pop
in
scas
adc
jnp
loop
mov
int
clc
sub
mov
sbb
push
out
jmp
ljmp
dec
xchg
ret
xchg
nop
ss
iret
mov
inc
in
imul
aam
fidivrs
xor
fwait
repz
add
or
push
push
movsl
fs
xchg
cmp
jp
adc
les
loopne
push
sub
lods
scas
lods
stos
scas
jae
rclb
jb
and
push
cmp
xlat
leave
loop
int3
jge
mov
aam
int
repnz
cmp
push
push
cltd
inc
sbb
ja
jbe
adc
push
jno
add
inc
mov
and
nop
lahf
xor
daa
add
pop
pop
dec
ficoml
xchg
xchg
push
cli
mov
lcall
lea
adc
hlt
dec
popa
into
mov
jne
jnp
cmpsb
rep
mov
jg
shlb
push
cmp
cwtl
insw
fisubs
fsubrs
pushf
inc
popf
mov
dec
inc
aas
sbb
lahf
roll
loope
aad
cmpsl
fstl
sar
sbb
and
cmp
xor
sub
sbb
outsl
lahf
xor
fadds
push
push
add
mov
iret
dec
leave
iret
xlat
rcl
jbe
int
xor
outsb
scas
add
out
aaa
sub
ja
movsb
xchg
int
jg
push
or
cs
xor
push
arpl
dec
mov
sarb
lcall
mov
es
sub
push
insb
ljmp
xlat
push
mov
xchg
int
inc
stos
dec
jge
stc
flds
cltd
leave
std
aam
enter
mov
mov
fiaddl
movsb
lret
cli
pop
sahf
popa
sub
pusha
sbb
inc
jp
sbb
cmp
popa
lret
sbb
jo
filds
push
sbb
xchg
je,pt
jae
mov
scas
push
xchg
jo
aam
jo
adc
movsl
jo
pop
push
aad
movsb
dec
loop
ficompl
sbb
dec
or
mov
out
jle
int3
cmp
and
cmpsb
push
adc
pop
lret
push
adc
xlat
imul
sahf
lret
pop
add
hlt
fstpt
push
push
cmpsl
mov
add
jne
shlb
adc
fisttpl
test
negl
test
cld
jae
arpl
ljmp
xor
sub
in
out
pop
testb
out
ja
mov
cmpsb
xchg
cli
leave
inc
jge
test
adc
and
jecxz
in
out
pop
xchg
je
jl
stc
sti
sub
adc
lods
mov
mov
pop
sub
push
in
adc
cltd
fmul
cmp
mov
call
fwait
movsl
test
in
test
cli
stos
ljmp
insb
add
out
pop
lcall
stos
adc
rorl
mov
push
inc
out
mov
jno
mov
repnz
cld
adc
cmp
sub
mov
pop
jmp
cltd
mov
push
stos
pusha
out
fadd
mov
add
or
movsb
sbb
or
andb
or
cmc
enter
cmp
lahf
std
add
fisttpll
cltd
sbb
xor
jle
das
loope
in
imul
adc
jle
rol
gs
iret
cltd
dec
iret
push
jecxz
outsb
nop
inc
inc
sbb
mov
push
xor
xor
jo
mov
xchg
or
xchg
jmp
ljmp
stos
push
and
dec
outsl
ds
loop
fdivrl
mov
jg
lret
xor
lret
insb
sub
push
sbb
mov
pop
jge
mov
mov
dec
jbe
dec
push
cmp
add
movsl
ja
sbb
dec
fwait
add
rolb
mov
jge
loop
add
lcall
mov
inc
mov
cld
lock
fistpll
mov
jl
adcl
mov
xchg
roll
push
stos
dec
sti
pop
and
out
stc
mov
adc
test
push
das
cmp
imul
test
fistpl
sbb
mov
cmp
nop
jmp
out
pop
lret
add
and
inc
das
pop
push
xor
mov
lods
loope
loope
scas
mov
iret
adc
and
inc
es
lmsw
lods
jns
std
push
sbb
jbe
inc
push
leave
leave
push
mov
sub
out
push
add
in
xchg
pop
sub
jbe
jecxz
adc
sbb
ss
pop
or
cld
pop
enter
mov
push
jmpw
mov
mov
out
mov
ret
jo
orl
xchg
hlt
push
movsl
xchg
dec
je
dec
enter
sub
mov
cmp
fcmovnbe
mov
movsb
adc
loope
xor
or
push
sub
ja
jns
add
shlb
ficompl
or
int3
dec
outsl
inc
pushf
dec
sub
push
xchg
bound
es
scas
ja
stos
mov
pop
cmp
stos
or
adc
pop
movsb
inc
or
movsl
clc
cmc
jecxz
pop
mov
mov
jmp
dec
mov
sahf
cmp
cmpsb
cmp
jae
cwtl
ret
cmc
mov
mov
popf
leave
dec
or
push
lahf
xor
mov
cmp
mov
jb
mov
xor
inc
jne
push
stc
fdivs
pop
jecxz
fistpl
fwait
lods
test
out
jno
and
mov
xchg
sti
cmc
xchg
or
jl
jle
jnp
out
xorl
xor
lds
cmp
pop
lods
sar
adc
lock
dec
arpl
and
shrb
ljmp
jb
pop
pop
iret
aam
xchg
popf
xor
add
jbe
and
and
rcrl
cmp
ret
inc
orb
xor
stos
fwait
mov
add
cld
and
xchg
mov
mov
xchg
or
fcmovnbe
push
out
mov
push
faddp
dec
mov
das
mov
int3
xchg
adc
and
sbb
xchg
jns
inc
pushf
out
loopne
jmp
lret
dec
testb
in
stos
mov
ja
test
rcrl
mov
mov
mov
fistpll
les
insl
and
std
dec
mov
lret
pop
cltd
add
dec
repz
pop
sub
out
xchg
jnp
push
and
pop
add
fmull
xchg
and
ret
ja
pop
bound
ja
pop
sahf
jg
pop
xchg
and
lret
outsl
cmp
insb
lcall
iret
lret
repnz
dec
cmp
es
mov
push
stc
xchg
fxch
pop
mov
dec
jmp
ffree
jmp
test
lock
data16
add
jmp
sbb
mov
mov
pop
mov
add
jge
push
fadds
andb
add
popf
es
pop
lods
mov
mov
jle
out
pop
and
call
ret
xchg
daa
or
hlt
dec
jne
inc
sub
fdivs
loope
jo
loope
cmp
push
gs
ljmp
add
adc
and
mov
notl
ja
sti
enter
shll
dec
jae
orb
lcall
sarb
mov
mov
test
and
mov
or
arpl
sbb
icebp
jmp
rolb
adc
pop
aam
hlt
rcl
mov
add
cmc
out
xchg
mov
js
loop
in
aas
inc
sub
cs
test
jbe
jne
je
xchg
daa
push
aas
ja
scas
add
fmuls
out
xchg
pop
notl
cmpsb
xor
mov
fiaddl
push
pop
les
lock
push
adc
cltd
addl
jg
ds
fisubrl
aam
sbb
xchg
mov
cmp
inc
xchg
cltd
xor
shlb
out
fisubrl
cltd
pop
out
mov
loope
lods
outsl
cld
shl
lods
xchg
fs
lret
pop
jle
scas
fmull
mov
adc
filds
notb
dec
adc
mov
jnp
movsl
lods
jno
mov
mov
push
mulb
je
adc
xchg
inc
inc
jb
int
add
inc
data16
adc
cmp
lea
xlat
jno
shl
movzwl
lret
mov
adc
xor
cli
jbe
sarl
or
aam
imulb
das
jno
into
push
fwait
js
dec
sti
sbb
rcl
or
lods
cmp
leave
fs
imul
rclb
repnz
popa
push
jne
pushf
sub
les
push
scas
lcall
ljmp
inc
test
mov
xchg
xchg
arpl
movsl
push
fistpl
cmp
mov
out
mov
repnz
aad
das
mov
enter
mov
add
push
cmp
stos
sub
out
lret
pop
sar
mov
clc
pop
mov
xchg
mov
jl
aaa
push
lock
dec
adc
or
lods
and
out
fs
jne
jns
ds
sub
gs
inc
mov
cli
rorb
sub
les
mov
inc
mov
mov
out
loope
mov
xor
pop
add
sbb
cmc
push
push
push
and
ss
adc
mov
fisubl
nop
js
stos
les
js
aaa
xor
xor
repnz
cmpsl
sub
mov
mov
mov
int
jo
sub
cmpl
ficompl
mov
repz
insb
or
lahf
cld
shlb
rol
dec
outsl
in
fmull
adc
das
lcall
les
xchg
mov
mov
insl
shlb
fs
sub
sub
scas
lods
and
popa
test
jne
and
lahf
mov
loop
xchg
test
sub
mov
push
mov
or
jl
pop
mov
jecxz
dec
pop
in
loop
xor
movsb
add
test
cmc
bound
sbb
bound
push
cmp
clc
aaa
pop
pop
dec
push
or
dec
iret
pop
mov
push
push
fmull
pop
xor
mov
stos
cmp
jbe
sub
movsl
jb
mov
add
dec
mov
mov
movsb
sub
movsl
jecxz
pusha
fsub
cs
sbb
adc
mov
repz
mov
xchg
mov
sub
add
popf
sbb
sub
xchg
sub
insb
mov
push
popa
fmuls
sbb
adc
mov
mov
out
fcompl
xchg
rolb
mov
pop
int
jbe
sub
ret
dec
cltd
sub
les
shll
in
imul
mov
push
lcall
andl
dec
imul
cmpsb
inc
jbe
push
das
mov
or
lcall
sbb
inc
or
shlb
fdecstp
mov
mov
pop
add
mov
adc
sbb
pop
mov
iret
mov
inc
push
pop
imul
in
dec
scas
imul
push
dec
push
out
arpl
loopne
mov
in
inc
xor
push
in
in
pop
jmp
push
or
push
cli
mov
add
mov
not
xor
pop
dec
out
nop
push
mov
int
js
xlat
fdivs
loopne
bound
adc
test
std
mov
xchg
xchg
mov
mov
mov
scas
cld
insb
jg
jecxz
jecxz
sub
pop
gs
orl
jbe
sahf
lods
call
cmc
xchg
jns
inc
test
ret
scas
loope
dec
cmpl
outsl
or
jle
cmp
mov
sbb
inc
das
ss
les
or
sub
and
lock
inc
bound
or
jo,pt
mov
int
xchg
sub
insl
cmpsb
aam
icebp
lods
je
sub
test
xor
out
test
mov
daa
lcall
mov
je
in
out
test
jnp
mov
mov
and
dec
push
iret
adc
enter
imul
mov
out
or
rcll
fcmovbe
adc
or
call
adc
int
mov
sub
dec
shrb
jg
adc
add
mov
ss
andl
testl
push
sbb
mov
jle
nop
mov
jmp
test
xor
mov
enter
icebp
adc
xchg
inc
sub
and
add
loop
cwtl
loop
jns
and
enter
test
in
sbb
mov
mov
scas
in
jae
lahf
js
test
xchg
jno
and
or
adc
in
in
in
xcrypt-cfb
cmpsl
movsl
or
jmp
incb
dec
out
push
add
inc
adc
xchg
add
xor
scas
insb
in
rcr
or
mov
es
aad
bound
ss
inc
pop
push
fwait
xchg
test
scas
and
movsb
cmp
cmc
addb
dec
out
pushf
mov
enter
and
repz
dec
xor
pop
scas
jbe
mov
cli
out
data16
jecxz
cld
fmulp
cld
sub
mov
pop
nop
mov
test
jmp
inc
or
pop
add
add
or
jne
xchg
mov
rcll
sub
stos
insb
movsl
sar
jb
mov
sub
fldcw
dec
mov
bound
ljmp
sbbb
inc
cmpsl
cmp
outsl
insb
out
cs
arpl
push
out
aam
sar
pushf
push
inc
add
or
mov
mov
ret
sbbb
push
pop
inc
hlt
mov
jle
dec
sbb
dec
push
add
sub
inc
outsb
mov
sub
cld
mov
sbbl
jns
sbb
adc
idivb
leave
dec
mov
pushf
mov
adc
in
push
add
shrb
mov
inc
mov
and
mov
fcom
jae
add
je
sti
hlt
cmpsb
or
or
push
inc
jl
stc
xor
pop
mov
sub
mov
mov
mov
add
adc
mov
adc
mov
aad
inc
xchg
gs
aad
inc
adc
jg
xchg
xchg
xchg
cwtl
out
lods
pop
push
out
aaa
jge
ds
enter
xor
inc
bound
outsl
add
inc
mov
jno
add
sub
roll
pop
xchg
or
inc
sbb
inc
inc
sub
orl
pop
lds
shrb
inc
xlat
and
icebp
mov
mov
repz
aas
and
mov
xchg
pop
and
dec
add
mov
xchg
mov
sub
std
mov
add
lock
in
xor
cmp
psubsw
and
bound
jp
aam
enter
jbe
cmpsb
cmp
and
cmp
int3
xchg
push
je
dec
into
pop
sub
test
sub
pop
int3
jp
or
lods
inc
cmp
test
out
insl
mov
stos
fsub
mov
sbb
call
lret
out
leave
xor
push
out
add
jge
pop
imul
test
popf
push
and
mov
adc
sbb
or
jl
hlt
xchg
mov
shll
scas
jnp
mov
add
mov
loope
fldl
fmul
shl
mov
cld
push
fsts
push
fs
test
mov
js
cmp
cmp
aaa
and
mov
add
xchg
cmp
repz
cmp
cmpl
xchg
xchg
pop
push
arpl
fmull
out
dec
leave
inc
add
stc
repnz
lcall
fsubl
adc
sti
xchg
inc
mov
ffree
aas
ljmp
and
std
and
scas
jnp
xrelease
xor
sbb
or
lahf
xor
sub
sub
mov
push
test
dec
lock
jge
dec
cmp
jae
mov
stc
lret
push
xchg
ss
pop
inc
jp
xchg
aad
jns
cmpsb
iret
jb
jb
inc
xorb
sbb
sbb
inc
sbb
imul
in
mov
pop
scas
les
xchg
lahf
test
gs
aaa
lcall
in
inc
dec
add
adc
or
jb
cmpsl
lds
cmp
repz
jp
add
imul
sbb
dec
incl
xchg
insb
inc
xor
int3
loop
call
mov
out
icebp
xor
ds
leave
sahf
popa
out
loopne
enter
sbb
clc
cmp
insl
push
je
call
xor
aam
jns
lcall
movsb
icebp
orb
cli
inc
inc
lods
fwait
bnd
dec
sbb
xchg
cmp
push
inc
mov
les
fsubs
movsl
or
sub
sbb
mov
pushf
rolb
jle
mov
repnz
in
sbb
imul
js
sti
dec
sub
dec
pop
pop
fstl
mov
mov
pop
inc
push
xlat
scas
flds
pusha
mov
fcoml
lret
cli
and
fcoms
push
call
and
add
mov
dec
dec
movsb
loop
movsb
je
xchg
adc
inc
sub
push
or
pop
jo
dec
lds
ficompl
xor
loopne
les
mov
push
int3
xor
repnz
and
fcmovnb
das
xor
shlb
sub
insb
lods
jo
popa
and
push
dec
shrl
fsubrl
jb
jno
or
fisttpll
decl
sahf
adc
xchg
call
addb
lods
sub
lods
scas
push
sahf
lods
xchg
repnz
aam
das
xor
adc
mov
push
jl
cli
rcl
push
fdivs
incb
push
loop
js
sbb
repnz
lods
jnp
in
cmp
inc
cld
test
dec
jmp
jmp
push
rcll
fistpl
shll
mov
ret
rcll
stos
jae
or
adc
cld
cli
mov
or
repnz
xor
push
fdivrl
and
jmp
cmp
or
jg
jns
push
mov
pop
in
and
cmp
adc
popa
ret
gs
jb
rol
or
or
pop
fnstcw
xchg
outsl
out
mov
inc
jecxz
imul
shll
and
xchg
mov
xor
aaa
add
aad
mov
flds
lods
and
cmpsl
mov
in
repnz
pop
xor
dec
sbb
testb
in
je
xchg
insl
int3
and
xchg
movsb
and
daa
push
xor
pop
mov
adc
pushf
sahf
mov
xlat
add
aam
cmpsl
push
inc
adc
gs
mov
cwtl
push
add
orl
sbb
in
out
lods
mov
popa
sub
pop
cmp
xlat
cmp
jmp
mov
pop
add
rorl
insb
test
mov
sbb
orl
ret
pusha
jne
je
out
sub
mov
loopne
add
dec
push
pusha
movl
int
mov
sbb
sbb
ljmp
lods
jae
into
jns
pop
jbe
sbb
and
pop
loop
inc
add
stc
cmc
arpl
adc
mov
into
daa
pop
mov
in
js
ss
decb
mov
addl
inc
nop
neg
adcl
repnz
aad
xor
cmpsb
sub
inc
sti
ficoms
enter
lods
mov
clc
je
pop
add
sbb
fwait
pushf
or
push
loope
xchg
pop
lods
popl
cmpsb
shlb
push
or
loopne,pt
xchg
das
xchg
daa
mov
mov
inc
push
out
cmp
ret
jge
jl
in
bound
pop
adc
and
push
out
sarl
or
vpsrlq
jbe
add
add
lret
mov
pop
fstl
jle
popf
add
push
lods
cmpb
mov
xlat
in
jns
mov
inc
cmp
call
movsb
and
leave
fisubl
popa
sbb
mov
adc
aas
sub
dec
push
aam
push
fsubp
inc
sbb
xchg
push
push
sub
pop
mov
flds
mov
into
push
add
cmp
les
jecxz
mov
jmp
out
cmp
mov
lcall
icebp
into
fimuls
repz
into
mov
mov
xchg
pushf
mov
int3
mov
push
insb
cmpsb
push
xchg
std
aaa
pop
xchg
inc
jmp
out
movsl
jl
btr
sub
push
inc
mov
outsb
add
insb
dec
cwtl
std
loopne
cmp
sbb
jecxz
rolb
nop
shll
sub
and
and
lds
adc
rcll
loopne
push
jge
roll
lds
mov
push
push
lret
jl
xchg
pop
sti
dec
je
fwait
repz
or
xor
cltd
mov
outsb
pop
sub
xlat
push
and
jp,pn
or
divl
xchg
daa
push
enter
sbb
ret
sbb
pop
mov
mov
pop
repnz
and
inc
jmp
push
sub
lds
adc
add
pop
cmpsl
jnp
pop
lods
pop
rcr
jae
enter
and
jle
push
cli
xchg
lods
lea
push
test
push
popa
jns
pop
lods
mov
loopne
mov
adc
or
ret
jle
add
mov
cmp
fdivrl
stc
lahf
out
neg
jno
jle
sbb
adc
mov
lods
cmp
icebp
js
mov
pop
adc
sub
call
ficoms
ret
loope
xlat
aaa
jae
mov
bound
hlt
lret
pop
fcomip
rcr
adc
lods
lahf
jp
in
push
cld
lds
lds
or
add
daa
pop
push
cmp
es
jg
stc
je
jns
arpl
inc
xorl
repz
fnstsw
jae
lret
mov
mov
dec
dec
jne
mov
jnp
cltd
xor
push
sti
push
stos
daa
push
jge
js
mov
shrl
adc
push
in
mov
push
or
mov
jb
or
add
push
leave
pop
test
ja
sbb
dec
mov
icebp
inc
les
mov
jmp
sub
xorb
insb
jo
adc
adc
hlt
inc
lods
dec
rcl
dec
out
mov
sbb
lret
push
push
insl
mov
lods
outsl
mov
or
mov
fcomps
inc
cs
je
or
stos
xchg
jl
sbb
add
inc
int
cmp
or
xchg
ljmp
sub
jno
int
push
rclb
ja
dec
subb
jge
insb
in
cwtl
out
adc
shl
divl
xor
fwait
mov
rcrb
incb
pushf
cld
out
inc
jb
imul
mov
mov
and
xchg
mov
lcall
adc
dec
fsincos
pop
cmp
jg
mov
inc
test
inc
fdivrl
insl
or
inc
imul
adc
sub
pop
test
faddp
andb
test
mov
mov
cmpsb
sub
das
sbb
cmc
test
add
shlb
daa
push
rcll
loopne
jg
adc
fidivrl
mov
stc
and
cmp
in
out
xchg
dec
nop
pop
out
mov
stc
mov
push
inc
inc
filds
xor
fimull
mov
xchg
dec
cld
in
in
push
mov
insl
push
subl
sbb
sbb
add
or
cmp
cmp
xlat
sub
push
out
sub
out
repnz
fidivl
or
lcall
test
xchg
xor
and
cmp
add
cmp
leave
fidivl
dec
xchg
cli
fimuls
loop
mov
mov
mov
out
and
jg
into
sahf
mov
push
cmp
inc
lahf
mov
iret
repnz
sahf
mov
int3
fstl
pop
hlt
daa
mov
inc
xor
test
repnz
pop
mov
repz
call
push
push
pop
aam
cmpsl
adc
or
std
or
rolb
nop
adc
divl
imul
cltd
and
push
clc
fsubrl
std
call
dec
pop
rcll
push
pop
adc
in
and
lahf
rcll
arpl
and
inc
pop
int3
xchg
ret
xor
int3
popa
or
lock
lahf
in
sbb
cmpsb
mov
dec
mov
movsb
jns
mov
push
sub
cmp
adc
add
and
jp
mov
push
cmp
stos
push
inc
jb
jnp
dec
xchg
pop
sahf
dec
sbb
pop
pop
int
mov
mov
ss
daa
out
jbe
mov
gs
and
sbb
ljmp
enter
int
push
mov
sub
cwtl
daa
test
popa
or
and
shll
testb
cmpsl
sbb
adc
inc
out
cmp
aaa
outsb
jp
sti
xchg
clc
cmp
mov
push
insb
imulb
test
lods
cld
stos
mov
ret
mov
stos
mov
push
in
stc
in
in
cmp
push
cld
cmc
pop
mov
out
stc
jl
adcb
push
in
mov
fdivrs
push
mov
xchg
arpl
in
cmp
jg
dec
stc
out
push
outsl
loope
sub
xor
hlt
mov
xchg
mov
dec
pop
cmp
fimuls
mov
xchg
imul
xlat
ss
inc
jbe
mov
pop
mov
lods
outsl
cmp
pop
iret
fs
ret
js
jg
jo
and
lock
push
psadbw
lds
xchg
mov
xor
popf
fidivrl
pop
push
pusha
cld
jg
das
js
xor
mov
push
sti
out
xor
in
data16
cltd
mov
sbb
inc
adc
push
dec
sub
mov
fisubs
mov
pop
orb
aad
leave
rclb
dec
pop
jo
mov
test
mov
pusha
incl
sahf
or
or
mov
sub
test
enter
fdivl
lret
stc
pusha
mov
lret
cmpsb
adc
sub
pop
cmpb
mov
int3
sub
mov
inc
in
cmp
in
rcr
icebp
inc
mov
sub
test
pop
dec
cli
addb
adc
pop
add
repz
mov
pop
jle
not
jmp
and
ficoms
lahf
push
rorl
popf
fstpt
loope
mov
pop
sbb
jo
inc
xor
jmp
inc
inc
outsb
push
push
or
push
fsts
push
data16
fwait
test
je
enter
add
jns
xchg
bound
fstpl
inc
repnz
addr16
mov
mov
mov
nop
sbb
pop
psubw
sbb
pusha
xchg
dec
loope
jecxz
lret
nop
test
or
xor
adc
lock
push
xor
and
lea
jae
lcall
cld
call
pop
inc
sub
xchg
ja
dec
push
sub
mov
cmp
test
jge
inc
mov
jns
mov
ja
xchg
inc
cmc
cmpsb
sub
das
jbe
mov
std
xchg
push
xchg
xchg
adc
in
shll
ds
mov
push
stos
xor
xchg
aam
das
fsubrs
incb
shll
cmp
mov
int
mov
cmpsl
in
je
iret
cli
add
cmp
idivb
mov
adc
sbb
push
ljmp
adc
test
sub
popa
or
popf
mov
jecxz
test
pop
icebp
push
sbb
xor
mov
xlat
shr
xchg
push
cmpsl
cld
stos
add
shl
inc
iret
dec
jne
adc
mov
stc
mov
out
fadds
movd
out
push
dec
ret
rcl
cwtl
hlt
jmp
in
dec
fiaddl
pop
fwait
js
ljmp
divb
mov
scas
or
mov
mov
or
ja
inc
movsb
movsb
out
push
outsl
xchg
repz
jne
sahf
mov
jo
push
jno
add
or
mov
out
mov
adc
jp
xchg
ss
xchg
ljmp
faddp
out
sub
lcall
mov
dec
cs
sbb
pop
inc
aaa
ret
cmp
jl
aad
add
mov
pop
jg
jle
das
xchg
ret
push
cmc
mov
jnp
and
add
cmp
pushf
imul
pusha
cmp
dec
inc
gs
ret
mov
inc
loop
inc
mov
sbb
stc
sub
xchg
lcall
and
fistpll
aas
sahf
and
or
mov
test
jne
mov
mov
imul
pop
xchg
mov
xor
cmc
jg
pop
scas
mov
pop
sbb
or
xchg
jae
add
in
mov
out
sub
mov
std
mov
fsubs
inc
xor
sub
pushf
fxch
adc
adc
out
fsub
icebp
sub
in
dec
jp
push
and
dec
xor
insl
cwtl
andl
xor
and
jns
mov
pop
dec
xchg
dec
jbe
push
xchg
cmpsl
inc
fiadds
xor
rorb
inc
mov
into
nop
mov
inc
sub
pop
sahf
add
test
dec
xor
jl
dec
sub
xchg
jae
cmp
jl
add
dec
push
pop
lret
test
es
hlt
mov
aaa
sti
push
xlat
xchg
rcrl
xor
ret
outsb
cld
sub
lods
pop
pusha
fiadds
cmpsl
xor
sub
flds
out
imul
pop
mov
ljmp
outsb
test
ficomps
xchg
dec
in
stc
adc
call
dec
aas
xor
nop
mov
pop
ret
stos
stc
pop
xchg
in
and
subl
js
and
adc
pop
and
insb
movsb
fidivrs
stc
xchg
mov
test
cmpsl
popl
mov
jae
dec
mov
xor
dec
les
or
inc
rcrl
lods
int
stos
pop
ss
jbe
and
and
aad
addr16
xor
xchg
insl
xchg
dec
mov
mov
ss
jle
mov
scas
add
inc
int
add
ja
mov
adc
enter
mov
sbb
movsl
lcall
test
icebp
jbe
push
mov
xor
pop
and
sarl
scas
loop
sbb
sub
pusha
sbb
subl
ret
cs
mov
xchg
lds
mov
xchg
xchg
out
mov
stc
aad
sub
inc
fmuls
xchg
fldt
daa
or
fnsave
lret
int3
or
fsubrs
cmp
lcall
popa
in
mov
js
lret
aad
push
test
xchg
mov
jl
mov
dec
mov
inc
movl
je
loope
test
mov
and
stos
push
sub
sub
push
loope
arpl
fsubrl
jo
sub
rorb
fistl
fsubrl
pop
dec
pop
cwtl
test
fildl
and
sub
adc
orl
cmc
adc
mov
enter
cli
cmp
xor
fstl
iret
ror
mov
cld
imul
xchg
stos
adc
push
mov
mov
sub
push
inc
add
xor
aaa
je
bound
inc
fsubs
fwait
lds
xchg
xor
dec
sub
stos
dec
ret
or
adc
pop
jae
jno
add
scas
xchg
cld
ret
call
sarl
pop
adc
jle
mov
enter
pop
icebp
cmp
icebp
ss
sbb
lret
sbb
and
push
movsl
daa
dec
mov
xchg
sbb
loop
adc
mov
jnp
lcall
scas
push
mov
into
frstpm(287
fs
imulb
arpl
out
jle
jb
aas
and
add
mov
aaa
daa
xlat
sub
lock
or
xchg
sarl
adc
loopne
mov
jno
sub
xor
scas
imul
and
jp
jo
mov
xor
or
das
dec
pop
jnp
xlat
dec
scas
les
das
enter
dec
sbb
scas
lods
pop
push
dec
mov
sub
repz
into
lock
or
lods
outsb
lea
push
mov
into
push
lahf
lea
sarl
pusha
and
dec
inc
fs
mov
out
add
ja
clc
je
xchg
test
push
out
push
xor
inc
repnz
movsb
mov
scas
ljmp
mov
sub
jmp
movsb
inc
sti
or
mov
push
fadds
aam
cmp
adc
in
ret
push
cmp
test
call
fnstenv
add
pop
sub
mov
fistpll
adc
fnstcw
repnz
nop
ss
pop
jne
xchg
mov
inc
rcrb
push
inc
push
xchg
mov
mov
movsb
or
shll
mov
sbb
mov
jecxz
mov
xchg
loope
fstpt
mov
inc
rcl
hlt
lret
mov
sub
sbb
and
push
in
and
rorl
clc
push
imul
jae
mov
mov
adc
lcall
mov
and
mov
popa
xor
pop
dec
inc
scas
inc
subb
mov
jle
das
mov
int3
xor
hlt
js
xchg
pop
adc
mov
cs
add
mov
call
push
aad
cmp
mov
das
leave
ds
add
ret
jle,pt
dec
inc
xchg
cmp
sub
ljmp
pop
bound
repnz
cmp
mov
lret
shl
imul
push
push
push
test
fsubrs
add
sbb
cli
sti
and
call
aas
inc
sub
iret
int3
enter
mov
push
xor
lds
sub
mov
xchg
add
lret
clc
addr16
mov
add
je
mov
jb
mov
or
scas
enter
aam
cmp
xchg
push
mov
rcl
faddp
adc
fsubr
in
jp
dec
or
jl
fnstcw
je
movsl
xchg
push
test
sbb
pop
and
mov
clc
and
fistpl
test
xor
out
and
leave
stos
adc
loop
xchg
imul
mov
jg
push
adc
popa
mov
push
fadds
imul
shl
out
shrl
mov
pop
clc
lahf
lret
clc
push
divl
mov
movsb
add
imul
cmp
lcall
outsb
int
inc
rorb
cmp
dec
pop
ds
jno
addr16
nop
pop
dec
jb
lods
mov
fdivrs
ds
ja
adc
mov
lcall
push
pusha
filds
jl
repz
lods
stos
sub
lret
xor
xchg
push
add
xchg
pop
outsb
lret
aad
or
sbb
jmp
adc
in
outsb
add
sub
sbb
gs
xchg
js
xchg
pop
ds
inc
mov
aas
mov
fiadds
mov
mov
aam
cmp
mov
lcall
enter
lea
mov
adc
mov
das
fmuls
imul
push
test
pop
push
inc
jmp
or
xor
mov
dec
cmpb
cltd
in
icebp
sbb
fwait
dec
rcrb
cs
stc
fwait
xchg
push
out
imul
pusha
clc
lret
jg
or
call
xchg
loope
cmp
insb
pusha
les
xor
mov
add
stos
sub
fwait
pop
push
pop
clc
xor
inc
jp
sbb
add
loopne
pushf
mov
jg
fs
int3
jle
hlt
pop
mov
sahf
add
mov
xchg
inc
push
hlt
rolb
add
jg
inc
addr16
outsl
loop
sbb
les
push
xor
and
addb
mov
sub
mov
or
aaa
or
inc
out
xchg
adc
nop
jecxz
dec
xchg
adc
xchg
sbb
add
mov
xchg
fdivs
adc
push
lock
int3
dec
jno
popf
mov
mov
jge
lcall
popf
mov
pop
sbb
aaa
xchg
std
mov
mov
inc
test
add
insb
xchg
into
cmp
cli
mov
sub
pop
jno
jecxz
loopne
jno
push
cmp
push
shl
int3
loope
shrl
pop
mov
lds
sub
into
sub
stos
jbe
js
in
enter
pop
neg
ret
sbb
fs
divl
add
adc
into
dec
fwait
or
aad
xor
cli
xchg
mov
adc
daa
xor
adc
and
jbe
add
push
cmpsb
jo
xchg
into
mov
ljmp
push
push
subl
pop
sbb
out
shrb
or
lahf
fsubrl
sub
pop
pop
jp
mov
scas
aas
dec
xor
xlat
sbb
aam
lods
xor
stc
push
addl
or
bound
hlt
lods
and
rcll
xlat
mov
frndint
stc
loopne
cmp
add
imul
imul
jge
adc
enter
lods
mov
test
jne
lods
das
sub
loopne
xorb
int
mulb
ss
aam
lcall
sub
out
fbstp
enter
aam
push
push
mov
jmp
and
adc
orl
fnstsw
gs
dec
scas
adcl
fs
cmp
addr16
arpl
jecxz,pt
lret
orl
ds
xchg
je
jl
cmpps
lods
jg
loop
mov
outsb
or
cli
jb
xor
mov
adc
arpl
fdivrl
pop
add
pop
mov
movsl
repz
xor
aas
push
test
sbb
add
pop
lahf
mov
aam
inc
pop
and
out
lea
pop
jp
sbbb
mov
out
test
in
pop
and
cmpsb
lock
icebp
daa
sub
and
mov
and
add
leave
jb
adc
insb
xor
andl
add
xchg
mov
ds
fdivr
mov
lock
loopne
js
fnstenv
decb
mov
filds
dec
xchg
push
lret
scas
int
inc
cmpsl
enter
pop
jmp
ds
mov
lcall
fildll
push
clc
adcb
or
mov
jb
idivl
fdivrl
push
mov
movsb
lahf
js
inc
pop
test
cwtl
mov
clc
fsubl
inc
xor
push
mov
push
inc
roll
orl
sbb
dec
repz
stos
mov
arpl
jg
adc
fnstsw
xor
add
and
cli
orb
sub
out
mov
and
jne
and
lret
or
xchg
popl
mov
xorb
mov
loop
mov
aaa
mov
jmp
and
mov
pop
cmc
inc
adc
and
xor
lret
rolb
mov
jne
jl
mov
jb
icebp
mov
lock
jae
cmp
add
imul
fildll
xor
xor
push
lods
out
sub
stc
push
inc
push
fwait
push
test
pop
outsl
mov
xchg
jbe,pt
or
jge
pusha
xor
movsb
lahf
scas
mov
outsb
pop
mov
mov
adc
xchg
cli
cmc
rcrb
mov
outsb
push
std
sub
ret
adc
adc
mov
adc
lods
ljmp
insb
clc
and
std
leave
and
mov
imul
sub
ficomps
repnz
enter
xorb
aaa
dec
fistpl
adcl
pop
mov
push
pop
je
jge
out
sbb
mov
jae
push
fisubrl
jno
cmp
inc
cmp
neg
xor
add
dec
add
insb
lcall
test
dec
xchg
mov
test
int3
jmp
sub
ja
xchg
and
pop
enter
out
mov
push
or
je
dec
lcall
xchg
add
dec
loopne
push
add
loop
testb
movsl
jb
pop
imul
or
jno
mov
mov
adc
in
ja
call
insl
sub
dec
jp
cmp
dec
fcmovne
leave
pop
inc
gs
jg
cli
jb
sbb
mov
add
and
jp
mov
sbb
into
cmpsb
cwtl
js
out
lahf
popaw
xor
and
test
test
add
sub
sub
lods
in
add
jo
mov
xchg
aad
stos
out
clc
mov
add
ds
xor
adc
jb
sar
add
adc
lods
imul
push
sub
pop
mov
outsb
rol
xchg
das
jmp
rorl
mov
mov
rorb
xchg
sub
push
sbbb
inc
fcmovu
stos
cmpsl
scas
test
pop
mov
jmp
jbe
dec
popf
mov
add
sbb
xor
mov
jmp
cmp
push
or
out
pop
gs
add
dec
and
movsb
mov
mov
addr16
pop
movl
pop
xchg
popa
sbb
xchg
cmc
add
decb
mov
dec
mov
cmp
adc
jns
nop
pushf
jp
test
fstpt
xor
pop
pop
mov
sub
js
scas
xchg
iret
sub
xorl
dec
or
xor
shlb
inc
sbb
pushf
dec
pop
mov
pusha
pop
ja
sub
in
xchg
nop
push
imul
mov
dec
jle
add
pop
movsb
xor
xor
divl
mov
sbb
mov
inc
call
mov
ret
scas
mov
sti
lcall
es
pop
jp
push
cmp
add
mov
and
cmp
aam
or
xor
sub
push
insl
cmp
xchg
fimuls
mov
dec
in
and
daa
vpandn
xchg
pop
xlat
hlt
xchg
jbe
jmp
dec
or
push
mov
jl
dec
mov
scas
lahf
push
ret
cmp
push
xchg
mov
out
jg
adc
cmp
xor
mov
fwait
pop
sbb
stc
mov
cld
cmp
or
or
pop
add
hlt
xchg
popf
adc
add
or
cmpsl
mov
and
pop
xchg
push
jno
ja
mov
cmp
mov
mov
insl
out
ret
addl
outsb
std
int
in
push
inc
scas
dec
dec
daa
js
bound
pop
fwait
jnp
or
add
mov
cmp
and
inc
dec
outsb
shr
insl
bsf
movsl
cmpsb
test
into
push
lea
dec
xor
jp
mov
stc
and
pop
mov
adc
jecxz,pt
mov
fcmovu
jle
cmpsl
cs
mov
mov
xor
aad
pop
pop
jge
out
arpl
in
xor
rcll
pop
mov
fimull
in
fst
cmpsl
lock
sub
fstl
pusha
sbb
mov
mov
shll
cwtl
sub
into
dec
push
push
push
test
pop
fsubrp
shrl
mov
xchg
cmp
pop
jae
inc
lods
mov
dec
es
nop
loope
sti
aas
pusha
dec
jl
int
mov
mov
mov
sub
aaa
test
fcos
xor
pop
int3
ror
hlt
cwtl
notl
xchg
push
sub
mov
jg
pop
lahf
imul
int3
jno
push
inc
adc
jno
mov
and
frstor
ss
or
jp
pop
call
call
dec
sbb
fucomip
les
add
sub
ja
adc
sub
addr16
inc
lret
fimull
lcall
add
push
cmpsl
mov
int
mov
or
int
mov
dec
stos
xchg
cmc
loopne
js
inc
mov
out
jo
sahf
or
jne
ljmp
adc
cmp
lcall
dec
or
or
lods
sub
cltd
sbb
pushf
xor
adc
jmp
mov
lcall
dec
in
xchg
adcb
dec
jne
pusha
clc
std
cld
dec
jae
xor
lea
shll
outsb
sarl
and
push
pop
sub
xchg
pop
stos
into
mov
jp
push
push
xlat
xchg
pop
repnz
pop
cld
dec
pop
imul
mov
xor
jl
mov
cmp
xchg
push
dec
movsb
adc
xor
xor
push
xor
adc
jne
in
aad
push
xchg
hlt
popa
cmp
mov
mov
movsl
mov
pusha
popa
pop
add
fiaddl
cmp
lret
gs
sbb
xchg
lock
jbe
pusha
cmp
in
addr16
jae
shlb
jnp
inc
fadd
pop
fsts
add
pop
cltd
test
sti
bound
in
int
dec
fwait
add
xchg
andl
mov
mov
rcr
cmp
inc
pop
xor
and
xorb
stos
sbb
and
or
shl
adc
push
int
lret
mov
jmp
enter
push
sahf
fstpt
lock
test
xor
push
dec
push
addr16
mov
loop
mov
loope
cltd
cmpl
hlt
in
jns
pop
xchg
mov
mov
dec
data16
divl
xchg
not
cli
iret
int
dec
cwtl
cmp
pop
test
adc
cmp
loope
popf
ss
stc
mov
mov
inc
cmp
or
jl
mov
jb
jl
loopne
fistpl
mov
dec
xchg
mov
aaa
repz
jnp
fwait
call
scas
or
lea
out
fs
cltd
pusha
xor
mov
enter
repnz
aad
dec
das
xchg
adc
fdivl
jge
lock
xchg
cmc
jo
cmp
jmp
cltd
sub
cmp
js
bound
jle
jp
fidivs
je
movsb
int3
pushf
inc
sub
dec
lahf
pop
repz
js
gs
sub
push
sbb
push
fimuls
stos
add
sbb
enter
subb
mov
mov
mov
movsb
sub
xchg
mov
push
and
inc
cmp
shl
jne
aas
js
cmp
cli
int3
inc
cs
mov
mov
sub
aad
shlb
dec
cmp
sub
pop
dec
jb
insl
loope
sub
mov
push
in
push
cs
add
adc
cmpsb
leave
mov
mov
jecxz
jmp
cld
adc
or
fistpll
xor
loop
mov
mov
mov
jmp
mov
lea
jmp
pop
negl
sub
xor
xchg
dec
notb
mov
jnp
xchg
mov
add
push
scas
stos
in
pop
mov
fwait
outsl
sbb
fnstsw
or
sahf
mov
xor
lea
or
rclb
dec
xor
pop
and
dec
fs
and
jp
sbb
inc
push
in
dec
dec
push
sbb
outsb
cmp
mov
add
je
mov
push
sbb
mov
mov
inc
jne,pt
sbb
inc
test
add
cmp
pop
pop
cli
push
sub
popf
fildll
cmp
inc
ljmp
int
nop
xchg
push
lock
cmp
pop
cmpsl
xor
sahf
je
push
add
push
sub
mov
cmpsl
orl
hlt
sub
xchg
cmp
daa
add
into
leave
fsubp
dec
add
inc
rcl
cmpl
and
outsl
mov
push
xchg
push
mov
cmp
inc
inc
mov
movsl
pop
test
aas
ss
ret
jecxz
out
cli
and
cmc
mov
mov
cmp
xor
pop
xchg
mov
les
movsb
cmp
add
pop
icebp
pop
call
cmp
sbb
jle
mov
xchg
lret
push
xchg
ss
shlb
xchg
xchg
sbb
push
cmp
push
push
jns
out
rol
adc
mov
scas
jne
icebp
adc
lock
and
pop
adc
push
and
mov
mov
xlat
out
mov
jp
popf
rcrl
es
mov
inc
mov
push
lret
adc
lahf
mov
test
and
in
orb
popf
add
lret
cltd
rclb
dec
mov
xchg
js
insb
xchg
icebp
test
sbb
mov
sbb
pop
pushf
pop
mov
xchg
in
sbb
mov
jp
rorl
int3
hlt
mov
pushf
sub
mov
push
mov
int
in
jl
loop
jae
sub
dec
imul
out
inc
fsubrp
pop
sarl
add
and
xor
inc
test
aad
imul
mov
mov
sbb
int
mov
mov
cld
gs
adcb
push
pop
dec
aam
hlt
adc
jbe
ficompl
int
push
pusha
xchg
fs
mov
xchg
out
fbstp
shrb
or
lret
movsl
cmc
in
rcrb
dec
mov
cmp
sub
iret
mov
je
xchg
lret
and
lea
push
mov
sbb
pop
push
fstp
mov
and
xchg
ja
dec
arpl
scas
loop
add
fyl2x
cmp
push
sbbb
jo
sbbb
jp
cs
dec
dec
shll
testl
inc
lcall
push
subl
mov
rcl
jns
repz
outsl
andl
test
adc
inc
mov
mov
pop
cmp
cwtl
jmp
out
mov
fmuls
test
fcomip
cmp
sbb
push
shrb
mov
scas
std
mov
sub
xchg
add
stos
push
aas
dec
jl
mov
add
xchg
bound
mov
aaa
adc
sbb
cmc
cmpsl
arpl
and
enter
lret
ljmp
stos
mov
fwait
pop
lock
lret
ja
in
cmp
and
fcmovu
jo
cmp
sbb
sbb
and
out
or
mov
insl
outsb
repz
mov
inc
push
mov
popa
push
inc
mov
fbstp
popf
xchg
pop
gs
push
mov
xlat
mov
ljmp
loope
loop
pop
inc
arpl
int3
mov
loope
inc
sub
cmp
mov
aam
fistps
xor
add
mov
and
cmc
ss
add
lret
jp
cmpb
sti
dec
pop
mov
stos
sub
fwait
nop
test
scas
adc
inc
shr
daa
lds
jmp
jae
test
sbb
test
stc
call
xchg
jns
adc
xlat
mov
stc
mov
xlat
and
divb
add
mov
lcall
xchg
cmpsb
dec
jno
sub
inc
sub
loope
pop
dec
mov
daa
sub
dec
outsl
iret
imul
mov
xor
imull
and
int
or
lahf
inc
nop
and
xchg
adcl
xchg
cwtl
addl
mov
mov
in
shrl
mov
add
imul
xor
lds
mov
dec
lcall
pushf
lods
xchg
sub
sbb
sbb
imul
pop
mov
xor
mov
jns
push
test
js
jbe
dec
inc
aaa
add
or
into
pop
int3
push
push
fisttpll
pop
push
adc
lea
je
test
int
ja
pop
sarl
mov
push
sbb
cmp
and
push
push
add
loop
jmp
fwait
adc
rolb
sbb
je
inc
cmc
push
pop
dec
cmpsb
and
sub
sbb
iret
xor
out
mov
pop
mov
pop
cli
cltd
ffreep
bound
andl
scas
or
testl
sbb
adc
stos
popa
cmp
push
or
popa
outsl
adc
gs
iret
push
mov
lret
xchg
mov
into
pop
pop
pop
outsl
cli
arpl
cmp
mov
sbb
jecxz
in
in
lret
sbb
pushf
mov
cmp
imul
dec
sub
lcall
lods
sub
add
xchg
cmp
test
xchg
imul
mov
or
add
pop
ja
adc
iret
sbb
add
pop
cltd
lds
in
push
xchg
cmp
pop
jno
mov
inc
aam
repz
xor
sub
das
pop
gs
test
sarl
packuswb
mov
ficompl
push
cmp
inc
xchg
push
adc
push
add
xchg
cmpsb
add
insl
enter
mov
xchg
mov
mov
arpl
stc
add
xlat
repz
gs
mov
repnz
jae
jbe
inc
push
shr
add
das
into
mov
jle
jg
or
sbbl
xor
and
mov
add
xor
das
sbb
movsl
aaa
mov
aaa
out
inc
dec
lods
push
dec
cltd
and
into
push
jp
bound
outsb
cmp
adc
jne
push
jmp
mov
add
pop
jle
lds
or
add
xor
jno
call
push
sti
dec
lods
test
out
mov
test
xlat
jp
or
and
cmc
mov
dec
push
inc
xor
mov
add
mov
xchg
xor
sbb
aas
clc
lods
push
fistpll
lock
in
or
imul
add
cmp
sub
cli
ljmp
fisttpll
mov
call
pop
and
sti
aad
cwtl
repnz
insb
sbbl
repz
loop
adc
adcb
pop
push
loopne
pushf
jns
jb
pushf
loopne
dec
adc
or
push
popf
fcmovb
jle
and
xchg
push
dec
xlat
sti
fistpll
xchg
sarl
inc
daa
xchg
xchg
xor
jle
ficomps
gs
aam
push
inc
out
call
fwait
sub
lods
fwait
adc
cli
jle
ret
arpl
adc
test
pusha
push
dec
fs
inc
out
xchg
add
stc
or
sub
fstps
cmpb
jbe
mov
lea
xor
mov
test
in
sub
cmp
ljmp
mov
jne
and
std
adc
or
mov
push
dec
xchg
inc
cld
lret
mov
xor
test
mov
daa
bound
mov
and
lds
xor
pop
cld
sbb
xor
jp
lds
jmp
je
jmp
in
sahf
dec
jmp
xbegin
jecxz
lret
pop
mov
pop
scas
dec
call
pop
fsts
inc
lds
xchg
mov
cmp
sbb
enter
sbb
mov
xor
in
pop
loope
mov
dec
popa
or
mov
popf
ror
sbb
fisubrl
ror
xchg
cmp
testb
leave
xor
jne
mov
clc
or
cmp
rolb
mov
out
mov
pop
test
ficompl
push
imul
xor
mov
ljmp
jl
inc
lret
push
fyl2x
ljmp
cmp
push
cmc
inc
cmc
dec
sbb
mov
ja
add
je
xchg
fs
testb
cmp
sbb
fisttpll
pop
in
push
into
mov
push
cmpsb
in
cmpsb
popf
push
lods
sub
jp
mov
sub
orl
dec
lahf
xor
mov
mov
push
pop
mov
movsb
sub
lds
sbb
call
xchg
mov
and
mov
les
push
sbb
inc
imul
out
dec
std
cmp
or
mov
xchg
inc
jbe
inc
push
pusha
int
scas
das
cmp
push
cltd
xchg
repnz
shll
vpaddd
cmp
pop
jno
dec
inc
call
mov
or
nop
jle
cmp
data16
xchg
jg
dec
outsb
and
mov
cld
add
sbb
sub
pop
jmp
cmpl
insl
rorb
into
fwait
mov
mov
mov
in
push
add
aad
push
push
sub
sbb
hlt
jae
pop
sbb
xor
push
shr
cmpsl
or
sub
xchg
cmp
rorl
inc
int3
stos
jo
xor
insl
inc
push
mov
pop
mov
imull
and
jno
pop
call
rol
mov
mov
sub
jp
add
or
mov
cmpsb
xor
aad
leave
or
popf
out
imul
pushf
mov
adc
xchg
outsl
sbb
sbb
movsl
movsb
or
adc
pushl
and
mov
mov
loop
mov
add
pop
inc
inc
adc
sahf
pop
aas
rorl
arpl
xchg
jnp
jnp
or
xor
adc
pextrw
es
mov
and
outsl
lcall
lret
mov
or
xchg
and
aaa
nop
jb
ret
xchg
cltd
xchg
aam
rorb
dec
pop
enter
jo
xor
mov
movsb
test
lcall
out
test
fs
icebp
cmp
sub
test
flds
in
fmull
ret
pop
jle
imul
push
ds
ss
imul
dec
adc
push
popa
push
gs
popa
das
test
ret
imul
xor
add
mov
sahf
add
fsubl
jbe
fldenv
xor
push
inc
add
je
daa
push
pop
insl
jnp
in
inc
stos
lret
sub
and
stc
rol
or
xor
cmpsb
cmpsb
lods
sahf
mov
scas
test
xor
in
out
push
dec
adc
xor
jecxz
add
rolb
lds
push
pop
and
mov
inc
sub
xchg
testb
mov
jmp
xchg
lods
addl
cmp
fdivs
jns
mov
mov
inc
inc
pop
xorl
add
std
jnp
push
fiadds
adc
mov
inc
add
fxch
cld
mov
cmp
jmp
stos
xchg
je
push
xor
xor
out
sub
sbb
je
pusha
mov
inc
adc
fcmove
pusha
sbb
enter
xchg
dec
adc
dec
mov
pop
xor
sub
or
push
mov
or
inc
mov
dec
or
pop
les
sub
sbb
cwtl
push
sbb
orl
into
mov
cmpsb
nop
jmp
jne
sub
mov
push
adc
mov
pop
cmpsb
xor
push
push
sbb
push
or
push
xor
fcom
mov
addr16
pop
mov
lock
jns
pop
pop
sbb
int3
mov
cltd
enter
xchg
cs
test
push
mov
bndstx
icebp
adc
test
adc
popf
or
mov
mov
testl
mov
jg
pop
std
push
sahf
cs
adc
outsb
sbb
push
pop
stos
mov
lock
nop
mov
insb
loopne
dec
mov
jo
dec
loope
xchg
imul
xchg
lret
test
push
mov
xor
test
pop
xor
fadds
dec
call
loopne
pop
mov
call
cld
in
insb
cwtl
dec
pop
sti
test
ja
and
fcompl
cmpb
add
jl
jecxz
lods
or
mov
mov
mov
dec
rcl
cltd
add
mov
cmp
pop
sub
call
push
xchg
dec
and
inc
push
sbb
and
pop
mov
dec
icebp
ja
sbb
adc
or
pop
xchg
cmpb
xor
push
push
mov
les
icebp
dec
popf
inc
mov
pop
mov
in
daa
iret
jmp
mov
pop
adc
shlb
or
push
or
in
sub
push
mov
jb
xchg
mov
pop
sub
loope
jns
mov
fnsave
stos
sbb
sbb
imulb
push
test
cs
xor
arpl
mov
lods
xorl
cmp
add
xchg
lret
int3
sbb
inc
inc
or
rcrl
ud0
sbb
mov
cmpl
jae
arpl
and
pop
sub
out
inc
aaa
jp
xor
idiv
call
mov
imull
outsb
orb
aad
fisttpl
sub
inc
insl
mov
test
into
cmpb
stc
sbb
xor
jmp
dec
sbb
and
lock
sbb
xchg
mov
cmpsb
scas
test
mov
jecxz
daa
mov
mov
mov
cwtl
xor
repnz
js
cmpsb
mov
out
gs
cmp
sbb
addr16
cmp
add
cld
sbb
stos
fmul
movaps
and
sub
push
jns
loop
xlat
xchg
or
mov
sub
xchg
ret
nop
es
daa
loopne
sbb
sbb
pop
mov
lds
cwtl
orb
and
dec
xchg
pop
arpl
aad
sub
pop
xor
je
hlt
mov
xor
mov
pusha
push
in
subb
mov
dec
insl
jp
add
push
pushf
imul
pushf
repnz
cmp
lds
imulb
dec
mov
lea
int
dec
pop
ljmp
sbb
cwtl
testl
xor
dec
mov
mov
bound
pop
rolb
cmp
in
xchg
push
mov
pop
pop
xor
call
jae
add
dec
pop
dec
mov
shl
and
inc
push
lret
pop
sub
fs
leave
jae
sub
inc
jo
es
and
xchg
xlat
or
mov
mov
repz
adcb
inc
mov
and
adc
into
add
pop
es
or
insl
jnp
mov
dec
jp
ficomps
into
and
les
lea
repnz
sahf
or
ret
xchg
shll
outsb
ss
arpl
jbe
adc
nop
aas
add
outsb
mov
lahf
int
fstps
cmpsb
dec
mov
cmp
jnp
stc
out
fld
je
imul
aas
rcl
adc
or
dec
insl
dec
movsl
xchg
sbb
mov
fisubrl
mov
jmp
movsb
xor
mov
outsl
jl
or
popa
jbe
aad
mov
and
popf
outsb
jp
pop
nop
leave
inc
mov
scas
lds
mull
ret
cld
and
popf
ror
test
aam
cs
shl
insl
xchg
out
xchg
adc
nop
add
shlb
aaa
rorb
or
mov
pop
shlb
sti
mov
stc
pop
out
pop
sbbl
sbb
fists
xchg
rcl
std
xchg
pop
sub
push
fsubrs
test
addl
pop
imul
cli
push
fs
adc
sub
sub
mov
xchg
pushf
mov
inc
fcmovu
addl
aad
pop
xor
pop
dec
xchg
jno
mov
ds
pop
jmp
aad
xor
popa
mov
cwtl
mov
and
aam
and
xor
xchg
mov
sub
rorl
xchg
int3
and
inc
gs
mov
and
adc
or
movsl
fidivl
xlat
sub
cwtl
pop
mov
jne
fwait
push
out
loope
mull
mov
cmp
pushl
and
add
outsl
cmc
sub
lahf
xchg
aaa
xchg
or
fistps
xchg
aam
rcrl
inc
ficomps
xor
dec
sbb
loopne
adc
fnsave
dec
stos
in
pop
outsl
mov
imul
push
hlt
nop
imul
pop
in
ficomps
sub
mov
shll
inc
or
inc
fists
test
inc
mov
fwait
cli
and
or
outsl
sub
divb
cwtl
pop
cmp
mov
cltd
fcmovnu
mov
aas
inc
pop
mov
scas
lods
ret
adc
and
sub
pop
push
aaa
imul
aam
add
push
cmp
out
adc
mov
xchg
mov
divb
cmp
gs
xchg
fisubl
jle
pop
dec
les
out
mov
sub
jl
mov
loope
push
pop
ja
mov
mov
into
call
andb
and
gs
mov
or
mov
xchg
jg
sub
pop
mov
call
cmpsl
insl
inc
imul
scas
push
sub
mov
or
fistl
in
jbe
push
jp
das
call
add
popa
fsub
nop
mov
lds
in
sti
cmc
imul
in
pop
mov
mov
xor
imul
std
and
lahf
pop
mov
lds
sub
out
or
test
addw
mov
xor
mov
push
das
lods
aad
adc
mov
xchg
mov
inc
adc
push
cmp
in
or
mov
inc
sub
mov
outsl
add
pop
cmp
mov
add
jo
mov
hlt
mov
nop
ljmp
cmp
nop
and
arpl
hlt
or
pop
sarb
rcrl
test
out
insl
iret
cmp
clc
icebp
jmp
out
in
icebp
jmp
pop
fsub
mov
popa
int
movsl
cmp
xchg
pop
and
jo
cmp
push
outsl
jne
jmp
dec
inc
xchg
das
push
jns
jg
or
inc
mov
iret
mov
pop
jge
fnstsw
rcrl
inc
outsb
lret
mov
jne
ds
cmp
mov
cmp
push
or
shrl
movsl
mov
jo
push
aas
subl
pop
lods
fwait
or
jbe
ds
dec
mov
sub
inc
mov
stos
adc
rcr
add
icebp
sub
sub
pop
mov
adc
insl
xor
push
sub
ret
xchg
sub
xchg
xor
je
in
hlt
and
xchg
or
fidivrl
jb
mov
out
push
in
pop
int
js
test
inc
mov
xchg
mov
xor
shll
pushl
jp
je
cmc
idivl
and
add
das
xchg
adc
cli
testl
adc
ret
fnstcw
xchg
add
jbe
subb
sbb
movsl
pusha
loopne
pop
arpl
mov
and
cmpsl
mov
push
pop
or
mov
jns
jge,pt
in
sbb
mov
or
jp
or
sbb
cld
sub
movsb
mov
cmp
xchg
notl
xor
popa
and
hlt
jl
mov
test
lods
repz
mov
outsl
adc
sbb
adc
xor
notb
or
or
xchg
in
aam
leave
xchg
aam
and
add
test
cmp
cmp
inc
mov
movsb
sahf
xchg
mov
mov
mov
cld
cmp
lods
sbb
fdiv
xchg
sbb
xchg
decb
pop
fst
in
xchg
sbb
sub
push
sbb
dec
ret
pop
loopne
std
push
int3
cs
cli
mull
sbb
into
imul
inc
mov
adc
mov
sbb
jne
std
inc
add
push
loop
add
jecxz
in
jbe
aam
or
xor
sub
shl
xchg
mov
and
stos
lret
test
pop
ja
leave
fnstenv
push
pop
inc
leave
xchg
jno
pop
cmc
fs
pop
mov
jge
inc
lods
insb
mov
and
xchg
je
call
ljmp
xor
sub
clc
and
mov
adc
fs
add
jl
xor
aaa
jae,pt
xor
pop
mov
dec
test
ret
daa
pushf
adc
xor
aaa
aam
mov
mov
repnz
jne
cmc
mov
dec
insb
sub
pop
cli
sbb
lds
mov
mov
mov
xacquire
pop
xchg
cmp
add
sbb
fbld
jecxz
or
in
add
sub
scas
es
and
test
pop
out
jge
xchg
inc
ds
or
push
cmc
stos
xor
dec
out
lods
and
fstps
ja
adc
pop
pusha
in
lea
inc
fisttps
ficompl
cmpsl
pop
pop
sbb
inc
sbb
xor
xor
add
test
jno
das
cmpsb
std
cmp
inc
cltd
shll
sub
or
insb
repnz
fnstenv
divb
pusha
pop
aad
mov
or
mov
xor
pushf
pop
dec
pop
out
lods
stos
cmpsb
jns
xor
adc
mov
bound
xchg
cmp
repnz
adc
outsb
mov
sbb
or
xchg
inc
mov
out
inc
cmp
push
xchg
icebp
out
push
test
out
sbb
outsl
ljmp
repz
aaa
lret
lea
mov
sbb
xchg
and
push
mov
cmp
pushf
push
shl
stos
ret
pop
in
lds
push
cld
je
nop
push
mov
mov
stos
rol
xchg
repz
hlt
adc
sub
sbb
js
fdivrl
dec
sbb
mov
inc
pop
cli
mov
pop
cmp
add
mul
pop
jge
inc
sbb
in
dec
lds
stos
sar
dec
rorl
and
sbb
in
fdiv
in
jg
cwtl
sbb
adc
lods
loope
cmp
mov
jecxz
jnp
inc
sbb
mov
push
sahf
inc
dec
inc
dec
pop
out
sbb
mov
mov
mov
dec
fcom
shll
iret
movsb
sub
aaa
inc
pop
fnstcw
bound
xchg
add
fistl
xor
mov
inc
or
dec
pusha
mov
xor
xchg
push
sub
xor
xchg
dec
daa
fildl
jle
mov
xor
jle
popf
rcrl
incb
inc
mov
mov
imul
pop
out
push
mov
mov
notb
mov
call
jge
fimull
mov
lock
ja
aas
loop
lds
imul
pop
cltd
pop
add
sahf
push
xchg
pop
pop
mov
mov
gs
sahf
imul
mov
inc
in
mov
mov
cmpsl
dec
loopne
pop
cmc
lea
lock
rclb
adc
fwait
jg
scas
dec
add
xorb
das
out
shlb
loop
testb
inc
cmpsb
mov
pop
jp
mov
xchg
outsb
or
enter
sar
pop
popa
push
xchg
cwtl
out
dec
in
stc
outsl
jo
lods
inc
mov
xchg
push
xorl
xchg
or
out
lods
inc
sti
push
or
aaa
in
push
sub
shll
push
xchg
pop
add
mov
in
adcb
sbb
rcrl
in
repz
fs
mov
lock
adc
inc
ret
pop
inc
cmp
aam
inc
ds
lea
shlb
xchg
dec
pop
popa
adc
push
cmpsb
xor
xor
imul
bound
imul
sti
cwtl
cmp
mov
jnp
fstpt
sub
rcrb
stos
iret
sub
adc
inc
lret
into
popf
and
addr16
js
sub
dec
xchg
scas
aas
mov
je
xor
in
inc
cs
pushf
pop
clc
inc
jecxz
pcmpgtw
add
pop
mov
js
jl
mov
cmpb
rcrb
mov
mov
in
or
xlat
fcoml
push
jge
mov
inc
test
dec
lahf
jmp
add
ret
adc
inc
loope
jl
xchg
mov
orb
cmpb
jecxz
pushf
stc
fwait
dec
adc
cli
das
mov
xchg
in
fldcw
addr16
sbb
int
nop
push
je
int3
cld
mov
outsl
mov
cltd
cmp
jbe
jno
shl
sbbl
movsbl
add
int
xchg
jbe
mov
in
mov
sbb
dec
decl
push
mov
rcl
push
mov
loopne
sbb
add
test
daa
sbb
xor
adc
clc
mov
pop
stos
imul
cld
jp
scas
and
inc
out
imul
fsubp
cmp
or
aaa
lcall
jl
xor
popa
xor
aaa
sub
add
mov
cmp
loop
out
inc
sbb
out
adc
inc
add
ficoms
pop
push
sbbl
sbb
mov
mov
adc
push
and
sub
dec
das
xlat
out
icebp
pop
dec
inc
repnz
in
xchg
sub
sbb
scas
dec
push
repz
mov
push
mov
sbb
xchg
jecxz
dec
mov
push
push
lods
mov
lret
adc
mov
jg
push
dec
je
shlb
pop
js
lods
mov
mov
pop
int
adc
xchg
lds
aam
or
lea
adc
cmpsl
rclb
ds
xor
mov
inc
lahf
pop
jp
ja
pop
or
cmp
leave
iret
fmuls
lret
and
sbb
lock
mov
xlat
lods
mov
shl
push
std
xor
inc
jne
xor
ficomps
fldl
or
idivl
jle
out
arpl
xor
jnp
fsubrs
das
mov
lret
cwtl
mov
bound
mov
sub
mov
rol
pushf
mov
xchg
shlb
dec
enter
sbb
mov
mov
mov
pop
cli
cmpsl
insl
mov
loop
push
mov
cld
imul
adc
shll
lea
daa
negb
mov
ds
in
jno
and
and
jae
mov
popf
imul
lea
ret
cmp
adc
jle
stos
mov
pop
mov
jb
mov
movsb
cmp
fwait
sub
daa
aaa
ss
pop
aad
and
dec
mov
lahf
lods
jmp
sbbl
mov
mov
dec
xor
rolb
ss
cs
sbb
sub
lahf
adc
sub
and
rolb
fidivrl
movsb
out
xchg
pop
inc
cmp
dec
pop
xchg
xchg
sbbb
fdivl
out
xchg
xor
imul
or
sbb
mov
daa
inc
mov
dec
add
mov
aaa
xchg
hlt
insb
shrb
lea
lret
fisubs
inc
xor
sbb
mov
repz
hlt
jo
sarb
jecxz
dec
sbb
lcall
stc
mov
dec
sub
jbe
out
mov
std
sbb
scas
mov
ss
xor
jle
and
mov
xor
loop
and
push
inc
fmuls
ja
jne
cmpsb
fsubl
lds
dec
lret
adc
testl
mov
ret
add
mov
push
xor
push
in
jbe
subl
call
ss
sarb
add
pop
xor
sbb
adc
arpl
out
lds
cmp
pop
dec
or
leave
adc
shl
sub
cltd
jg
jno
dec
iret
or
push
test
xchg
add
mov
jo
cmp
jg
xor
dec
adcl
mov
jb
xor
push
xchg
jno
stos
gs
shr
lcall
adc
loope
dec
push
xlat
pusha
add
inc
dec
push
jb
in
inc
mov
or
cs
cli
mov
mov
shl
jae
pop
dec
lds
xchg
adc
jl
mov
jle
fcoml
sub
xor
jg
push
mov
mov
loope
add
sti
shl
hlt
lahf
mov
dec
push
push
icebp
scas
jnp
mov
in
push
movsb
mov
xor
out
jno
test
test
in
mov
sbb
lahf
dec
gs
add
in
lcall
mov
pop
int
nop
cmpl
loope
nop
gs
adc
paddusw
rcll
add
sarl
mov
sub
js
mov
pop
mov
sbb
push
jns,pt
notb
cmp
into
into
xchg
dec
or
out
ja
push
xor
sub
push
cmp
jbe
rorl
daa
cld
fcmovbe
shlb
push
xorb
jp
mov
aaa
cmp
xor
cmp
lcall
fldenv
cli
testl
lods
dec
add
xlat
mov
flds
and
jo
inc
pop
or
imul
and
xchg
mov
mov
mov
push
add
adc
das
iret
mov
bound
dec
andl
jne
cmp
sti
cmpb
push
jno
xor
imul
test
outsl
imul
xor
or
int
lret
pop
pop
xchg
and
repnz
mov
fimuls
adc
test
sbb
xlat
xor
inc
xlat
mov
xor
and
test
xor
inc
add
mov
ss
lret
fdivs
popf
lcall
inc
jbe
setb
daa
fcmovbe
cmpsl
xlat
insl
mov
mov
jns
cmp
fiadds
insl
pop
or
jge
mov
stos
lods
in
mov
js
bound
mov
aam
repnz
dec
inc
jmp
in
dec
roll
push
fwait
xchg
and
scas
pop
add
cwtl
mov
aaa
rcrb
int3
imul
cmpsl
mov
fs
jge
ficoml
sub
mov
fiaddl
xchg
shll
pop
xor
insl
mov
aam
sub
jle
adc
repz
sbb
or
inc
outsl
iret
adc
cli
in
jae
push
adc
sbb
cltd
clc
lahf
cmp
adc
ror
andl
aam
and
add
or
dec
or
mov
sbb
mov
jl
lret
in
imull
push
arpl
movsb
ficomps
imul
pop
lcall
sbb
xchg
gs
dec
dec
pushf
addb
lcall
movsb
int3
jp
mov
xchg
icebp
mov
rcrb
scas
arpl
js
call
test
or
add
sub
icebp
jecxz
je
mov
in
lret
pop
test
loope
insb
daa
push
push
mov
or
or
sbb
sub
arpl
mov
dec
shll
xchg
mov
shrb
inc
fldcw
and
jae
movsb
inc
cli
dec
inc
mov
xor
mov
push
testl
push
add
lcall
xor
insl
push
sbb
scas
xor
mov
ds
jno
push
xchg
imul
xchg
aas
in
rcrb
jo
mov
pop
push
ss
cmpsl
jecxz
pop
outsb
lea
jno
push
fstpl
pop
popa
mov
pop
push
xchg
lret
aas
fistpl
les
push
mov
xchg
jp
outsl
jle
nop
and
repnz
mov
xchg
fdiv
aam
dec
enter
pop
ds
mov
cmpb
out
cs
lea
fists
mov
adc
mov
mov
mov
stos
and
mov
jno
sbb
or
popf
pop
icebp
jno
shlb
mov
into
aas
mov
or
push
fdivs
xor
lods
mov
repz
jo
jno
loop
out
push
xor
cmp
jb
cld
loopne
repz
mov
xchg
out
into
call
bound
xchg
push
lods
out
or
lods
aad
and
lret
adc
sub
and
jb
pop
rorl
fwait
incb
fwait
xchg
fs
mov
fcomps
inc
dec
sub
sub
mov
jle
movsb
cmpb
loop
out
pop
popf
cmpsl
push
add
dec
push
nop
pop
repnz
ja
movsb
or
or
aas
jne
cmp
xor
mov
push
pop
fwait
lcall
stos
cs
jns
push
xchg
sub
aas
inc
popa
and
jl
xchg
jge
gs
cmp
cmp
adcb
ss
test
add
dec
xlat
test
movsl
scas
add
xchg
aaa
int
clc
and
or
lds
aam
mov
std
test
sbb
fsubrs
adc
stos
pop
mov
mov
stos
xor
xchg
cmp
pop
dec
inc
div
call
int3
into
mov
leave
inc
or
push
cmp
mov
or
testb
lds
repnz
pop
aaa
nop
xchg
xchg
les
js
jecxz
mov
dec
fwait
lcall
push
mov
xor
dec
cltd
push
mov
orl
and
mov
nop
and
cmp
and
iret
mov
test
enter
fsubrl
call
int
popa
fisubs
sti
imul
adc
dec
jb
jmp
sub
xchg
dec
dec
add
or
xor
mov
andl
dec
jl
add
rolb
shlb
mov
loopne
pop
and
les
out
xchg
mov
mov
sbb
lret
push
sbb
mov
aam
test
cld
push
push
mov
adc
jge
pop
sbb
jne
mov
push
cli
inc
mov
push
nop
dec
mov
adc
dec
hlt
gs
cltd
adc
jmp
pop
mov
sub
add
negb
xchg
mov
fldt
inc
dec
mov
shll
push
pop
mov
lods
daa
je
movsb
or
shll
rclb
jl
push
in
mov
xchg
jg
sarb
addr16
lret
cmp
test
push
jno
gs
fldl
jae
push
inc
imul
imull
bound
adc
cltd
jg
iret
in
push
xchg
aaa
shl
push
fmull
movsb
sbb
mov
mov
mov
out
sahf
adc
jbe
jecxz
scas
mov
mov
and
sbb
sbb
sbb
in
dec
sub
in
jb
sbbb
iret
and
mov
rol
or
out
sub
push
cwtl
sub
imul
jmp
fildll
int
ret
mov
cmp
jecxz
sub
sbb
mov
shll
push
mov
cmp
cld
push
ja
xchg
dec
or
arpl
jle
ja
cmp
xchg
or
aam
shrl
call
cs
int3
cli
jge
aaa
dec
loope
orb
int3
xchg
aaa
jge
jbe
jo
mov
into
push
cmp
sbb
pop
and
pop
ret
data16
sti
add
pop
mov
popf
mov
and
or
and
inc
cmp
mov
pop
pusha
push
sbb
adc
sarl
idivl
push
pop
cmp
adc
mov
pop
mov
inc
xlat
scas
addr16
aas
pop
insb
cmc
add
dec
cmp
fiadds
lods
lods
call
sub
clc
and
cmc
rcll
popf
jmp
subb
push
jne
lods
fisubrl
test
xchg
cs
test
rclb
sbb
or
push
sbb
sbb
mov
fimull
push
scas
mov
out
hlt
lock
fists
imul
adc
shl
push
lods
push
xchg
outsb
out
sub
pop
lret
inc
nop
das
sbb
inc
adc
imul
or
fbstp
inc
jo
out
out
popf
sub
mov
leave
push
push
lret
scas
imul
jge
repnz
pusha
inc
inc
inc
xchg
jle
out
jnp
adc
cltd
pop
add
fists
popf
sub
jo
push
sub
inc
adc
sbb
push
sub
push
push
pop
iret
inc
clc
xchg
cld
fdivrs
insb
icebp
sbb
inc
testb
scas
sub
gs
ss
repnz
jo
mov
sub
add
pop
in
in
xor
cmp
inc
adc
ret
dec
and
lret
xchg
scas
jne
add
jo
jl
mov
mov
out
adc
cwtl
mov
sub
xor
sub
cmpsb
fildll
push
popa
insl
push
push
mov
lods
sbb
cmp
sbb
jne
sahf
ss
into
int
inc
or
aam
add
inc
add
xchg
mov
sbb
icebp
cs
cmc
jg
mov
sbb
repnz
je
imul
xchg
movsb
and
push
inc
cmpsb
sbb
arpl
loopne
rorl
cmc
inc
cwtl
sbbb
sbb
icebp
test
jp
mov
and
pop
push
and
bound
cs
and
xchg
push
jg
push
pop
fdivs
outsb
push
push
mov
dec
dec
jbe
lods
aam
jge
pushf
sub
mov
addl
xchg
inc
movsl
cmpsb
fistpl
mov
bnd
and
stos
fs
decl
sbb
xchg
dec
lret
and
lds
add
cmpsb
jp
loop
sub
cmp
push
push
jp
out
lcall
pop
or
push
and
inc
movsb
cmp
test
pop
push
mov
mov
gs
js
mov
xchg
dec
adc
mov
jns
repz
mov
xor
lds
insb
jle
dec
in
aad
shr
js
cmc
pop
rcl
cmpsl
dec
lret
lret
call
xorb
mov
dec
adc
mov
aad
ss
push
or
inc
ret
out
cmp
movsb
movsb
pop
icebp
popf
sub
mov
stos
test
xchg
cltd
push
jg
inc
push
and
test
loope
mov
out
or
mov
jbe
xor
imul
push
fsts
sbb
or
call
into
sbb
xchg
xor
ror
pavgb
cmpsl
pop
xor
fdivs
notb
mov
imul
pop
cmpsl
lock
push
sbb
fnstenv
jp
lock
cmp
daa
sub
xor
dec
in
jbe
mov
dec
adc
gs
cmpl
ss
or
testl
dec
aas
push
xchg
shrl
repnz
lcall
jle
mov
repz
push
aad
test
and
movsl
mov
push
mov
sub
hlt
jb
idivl
mov
add
xor
call
xorb
sub
ljmp
jns
push
movsl
sbb
fcoml
addr16
shrb
mov
ljmp
lcall
ds
rcll
inc
imulb
cmp
sbb
cmp
test
push
in
inc
jg
nop
inc
jg
fsubs
cs
xchg
jno
in
insl
add
lret
cli
push
xlat
mov
xchg
imul
and
pop
test
xchg
lods
dec
mov
sbb
xchg
lret
push
movsb
push
sub
fsubrs
ret
loope
pop
mov
jo
pop
enter
mov
fcmovu
mov
mov
dec
xchg
push
jnp
add
ret
orb
add
stc
scas
icebp
lahf
imul
dec
jle
fdivrl
cmpb
ss
insb
sbbb
cmpsl
dec
addr16
inc
push
les
insl
push
sbb
ds
fmul
dec
cmp
add
retw
imul
and
mov
cld
lods
xchg
sbb
xchg
into
push
dec
xor
jp
add
sbb
kmovw
add
mulb
cmp
inc
push
xor
into
dec
fdivl
add
inc
cmp
nop
in
add
jbe
cmp
mov
scas
in
pop
call
or
xchg
es
xor
jmp
push
jge
jne
pusha
lods
into
add
jae
mov
scas
dec
mov
push
sub
loopne
lcall
sub
xor
jl
adcl
add
or
mov
pop
sub
pop
mov
sub
shrb
repz
movsb
int3
adc
daa
mov
sbb
push
fbstp
pushf
fdivl
das
pushl
jl
jns
ds
shlb
xor
sub
inc
and
mov
test
ss
cmp
inc
jmp
test
jne
mov
dec
adc
and
pusha
pop
dec
or
insl
sbbl
fs
jl
adc
jae
hlt
loopne
test
sahf
push
xor
fs
jbe
push
in
xchg
call
cmpsb
sahf
add
or
adc
jle
inc
inc
inc
and
rcll
and
sar
inc
arpl
aas
jae
fcom
orb
and
push
mov
mov
js
int3
sub
push
clc
inc
xor
jecxz
movsb
fistpll
jnp
outsl
sub
or
push
std
std
mov
mov
mov
cwtl
fnstsw
orl
xor
aaa
ss
jae
push
rorb
and
fdivrp
mov
mov
icebp
mov
push
or
mov
sbb
mov
push
imul
lret
push
mov
mov
lea
scas
sbb
out
push
xor
jecxz
leave
ret
testl
sub
sub
iret
add
xchg
and
insb
adc
xchg
and
insb
cmp
test
add
repnz
mov
add
sbb
fstcw
jno
subb
sub
xchg
and
rcrl
xlat
inc
mov
data16
fwait
cmpsl
add
ficomps
adc
lea
nop
scas
sahf
dec
sbb
ret
fstpl
bound
lahf
push
test
scas
movb
cmp
sub
in
fwait
pop
fdivrs
sarb
dec
in
add
lcall
pop
decb
test
hlt
push
or
in
insl
jnp
push
and
loopne
mov
or
repnz
push
push
add
or
xor
lret
icebp
push
jnp
and
aam
popf
stos
inc
in
jp
ret
rclb
movb
divb
aas
in
jno
xor
inc
push
lock
jne
rcrl
jp
push
jp
xor
loopne
stc
cmp
enter
adc
xor
scas
cld
push
jno
inc
inc
mov
loopne
imul
jl
in
xchg
out
pop
in
aad
xor
notl
xchg
jmp
daa
popa
repz
sub
ja
mov
aas
mov
xor
outsb
pusha
clc
mov
pop
cmp
ss
imul
out
push
leave
stos
stc
sbb
int
les
dec
push
mov
scas
and
sub
movsb
mov
loop
int3
inc
imul
lcall
cmp
test
sub
mov
ljmp
mov
mov
mov
popa
sahf
add
pop
aam
sarb
jo
mov
dec
pop
xor
enter
sub
cmp
movsb
je
in
and
and
mov
mov
imul
repnz
xor
hlt
mov
paddusw
jge
mov
xchg
sub
sbb
mov
pop
inc
cltd
out
xchg
jo
mov
jge
and
adc
push
hlt
movsb
repz
ret
xchg
jb
cmpb
or
push
sbb
mov
xlat
shr
cld
movsl
icebp
pop
jno
inc
das
push
mov
sahf
mov
jp
inc
fistpll
inc
mov
dec
xchg
frstor
aas
and
fidivs
jo
repz
adc
fidivrl
cmpsb
mov
stc
xor
jns
mov
pop
fbstp
add
mov
mov
and
cmp
jge
mov
xchg
xor
sbb
ds
jns
dec
out
push
mov
hlt
popf
and
cmp
out
ljmp
pusha
adc
das
mov
lret
sbb
inc
int
xchg
mov
scas
jae
adc
and
daa
and
out
pop
in
or
loopne
dec
jecxz
stos
lock
fnstsw
xor
hlt
inc
mov
inc
push
sbb
daa
hlt
add
cld
int3
add
pusha
and
adc
inc
sbb
mov
xchg
pushf
jp
mov
addr16
pop
xchg
mov
cld
test
lret
inc
pop
and
lds
adc
inc
call
je
cwtl
xor
aas
and
cld
or
cmp
mov
aaa
cltd
pushf
fcmovb
outsl
fimuls
pop
rcll
jmp
pop
shll
scas
data16
lret
adcl
push
dec
push
ret
sarb
pop
insl
sub
sbb
mov
dec
hlt
fnsave
test
sub
aas
push
jae
mov
jns
sub
or
addl
inc
js
sub
adc
jbe
inc
bound
or
imul
cs
scas
pop
movsl
insl
fwait
dec
xchg
les
add
adc
push
sub
xchg
sar
pop
mov
mov
or
cmp
lods
add
in
cmp
push
mov
out
cmp
mov
jge
pop
xor
aas
jg
rcrl
add
std
cwtl
mov
mov
mov
cltd
push
imul
sub
cmp
lcall
or
aas
std
mov
add
in
xlat
push
rolb
mov
jle
xchg
sahf
popf
in
testl
pop
shl
ja
test
mov
mov
inc
and
enter
and
pop
lea
stos
push
sub
outsl
inc
stc
jns
pusha
in
stos
rclb
xlat
jns
sub
push
lods
pusha
inc
fstps
xor
cmp
call
cmp
push
cmpsb
pop
test
adc
push
decb
test
test
mov
fmull
push
inc
ss
cmp
insb
push
inc
cld
fwait
sbb
repz
mov
and
dec
adc
nop
int
mov
fisubrs
ja
rcl
mov
mov
rcl
fsubl
dec
sbb
lea
add
lds
dec
bound
push
pop
nop
add
dec
cmp
enter
std
mov
push
lret
test
and
jg
fdivr
sub
inc
jp
sbb
and
test
mov
cmp
sti
enter
sti
je
ja
test
das
cmp
mov
scas
testl
mov
cmp
popf
xchg
adc
xchg
push
cld
mov
jo
and
enter
mov
insb
add
xor
test
jp
mov
xor
pop
cli
call
test
adc
ret
pop
daa
xchg
loopne
xchg
imul
lahf
bound
and
dec
fldcw
inc
adc
ret
enter
dec
ret
pop
aas
int3
js
dec
inc
popf
cltd
and
xchg
stc
add
jbe
pop
jno
mov
add
jle
mov
and
cmp
push
rorb
cltd
pop
adcl
scas
rorb
es
cmp
push
insl
push
push
xchg
jns
movsl
lcall
sahf
dec
or
dec
inc
xor
movsb
rorb
repz
imul
cmp
mov
out
push
xchg
inc
dec
leave
mov
mov
mov
mov
pop
andl
mov
fdivrs
fdivrl
aad
push
xchg
xchg
jno
xchg
nop
shrl
shlb
mov
in
jge
mov
dec
jo
pop
xchg
sti
adc
stos
in
mov
hlt
add
rcll
icebp
xchg
xchg
and
push
std
inc
dec
cmpsb
lds
sub
ret
in
xorl
push
int
xchg
push
mov
sub
imul
xor
or
xchg
push
cs
adc
sbb
mov
xor
mov
loope
stc
dec
jle
lcall
mov
je
xchg
jp
mov
mov
adc
inc
xchg
pop
insb
push
in
push
push
and
add
jo
inc
sub
push
test
inc
xchg
xchg
ja
outsl
pop
pop
sub
enter
inc
daa
pop
pop
pop
inc
leave
mov
dec
or
dec
das
sbb
mov
outsb
dec
enter
push
sub
xchg
mov
pop
cld
call
adc
loop
inc
ret
push
add
sbb
jmp
fsub
mov
rorb
je
dec
and
ss
mov
push
xchg
jmp
jle
cli
icebp
jae
xor
das
jge
push
xor
hlt
imul
mov
pop
in
scas
notl
cmpsb
cmpsl
sbb
or
pop
and
add
sbb
aad
mov
in
sti
sbb
xchg
lahf
inc
fwait
ret
ret
mov
mov
mov
div
or
inc
fnstcw
pop
jmp
addb
push
pop
adc
mov
inc
imul
aad
or
cmp
pushf
outsl
or
scas
popf
xor
pop
jl
ja
insl
icebp
sbb
jg
jge
sti
cwtl
xor
jp
adc
jae
mov
test
xor
sbb
dec
ss
push
cltd
xchg
ds
push
xchg
orl
pop
test
pushf
cld
dec
or
into
ljmp
js
pop
sbb
pop
call
mov
cli
xlat
inc
lcall
or
jb
out
sub
jo
enter
sub
and
sub
cmp
xor
inc
ret
lcall
sbb
and
mov
add
mov
and
sbb
movsl
rorb
xlat
cmp
inc
loope
mov
sbb
and
lcall
xchg
add
enter
addr16
mov
fisttpl
ds
movsl
fidivrl
pushf
add
daa
cld
dec
inc
clc
repz
out
das
or
jge
mov
jmp
lods
dec
mov
hlt
pop
add
insb
xchg
clc
push
xor
fistps
int3
in
fs
jecxz
push
pushf
movsb
daa
rclb
cltd
dec
pop
insb
lods
cmp
int3
mov
test
xchg
push
sbb
sahf
push
mov
mov
test
in
mov
out
aas
scas
and
fildll
push
fsubl
icebp
pop
adcb
andb
push
sbb
adc
cli
mov
jns
jle
ss
cmpsl
hlt
mov
iret
pop
mov
jns
jle
inc
test
bound
jno
addr16
dec
loop
add
jae
jbe
fsub
enter
push
shl
xor
xlat
lcall
or
fmull
pop
pop
push
stc
enter
jg
push
imul
cmc
in
push
pop
or
rcrl
jp
mov
inc
lcall
xor
inc
fisubl
iret
call
je
test
imul
xchg
daa
dec
mov
add
or
dec
jl
push
mov
out
push
mov
or
or
inc
popf
pop
dec
js
in
mov
fiaddl
into
repz
int3
jns
cmp
enter
sub
call
inc
add
or
test
sti
jne
xchg
enter
push
mov
and
sbb
dec
xchg
enter
push
pop
and
pushf
lea
xchg
adc
daa
sarb
mov
lret
outsl
pop
fisubrl
xlat
cmp
testl
add
xchg
pusha
daa
jmp
scas
sbb
mov
test
jg
pop
inc
pop
lods
push
cmp
jmp
and
lret
mov
inc
xor
fs
mov
adc
sub
xchg
push
mov
bound
sub
jp
mov
pop
cmp
cmp
repnz
fnstsw
pop
cmp
lahf
lret
and
sahf
fwait
add
gs
adc
popa
aas
fsubs
push
or
fstl
xlat
aaa
lcall
cmpsl
mov
mov
out
xor
pop
jecxz
mov
lea
dec
pop
adc
iret
call
jb
jbe
out
scas
das
push
push
ds
sbbl
mov
loopne
mov
cmpsl
aam
fs
or
imul
insl
popf
pushf
mov
inc
cmp
mov
adc
rolb
mov
popf
aas
mov
push
adc
xor
sub
xor
cmp
dec
or
in
in
adc
sti
push
mov
xor
in
mov
outsb
mov
scas
mov
fisttpll
mov
scas
lcall
std
xor
add
idivb
in
cld
jge
push
fnstenv
bound
or
stos
mov
and
dec
insl
lock
mov
cmp
dec
pop
xchg
mov
or
xor
jnp
dec
imul
gs
paddsw
movsl
dec
inc
decb
adcb
fldcw
pop
xchg
popa
xor
fildll
out
cmp
push
pop
lea
repnz
or
aad
jne
and
xor
mov
sbb
daa
test
push
repnz
and
inc
pushl
mov
xchg
bound
addr16
mov
sub
cmp
fdivrs
lock
pop
rclb
xor
mov
xor
lahf
shlb
es
popf
mov
arpl
stc
add
pusha
pop
pop
xor
sub
js
insl
pushf
xchg
mov
jb
ret
call
xlat
fadd
add
xor
shlb
mov
ljmp
mov
gs
xchg
pop
or
stc
movsl
in
in
fildl
jmp
jns
and
lods
mov
pop
pop
lds
adc
mov
movb
test
dec
dec
cmp
xor
and
ja
lret
test
pop
cmp
fucom
mov
rcl
icebp
jecxz
jnp
idivl
xchg
or
or
mov
mov
pop
lods
push
fcmovb
outsl
push
repnz
loop
cmpl
push
mov
push
inc
sbb
movsb
jmp
stos
xchg
sbb
push
xchg
scas
xchg
jne
jnp
inc
xor
pop
js
lret
test
cmp
mov
fs
std
add
sub
xor
pop
dec
int3
arpl
xchg
mov
add
push
imul
jp
ja
cmpb
fs
xchg
cmpb
cmp
cmp
cmp
pop
add
and
sub
adc
aam
outsb
jecxz
jns
pop
xor
mov
and
stc
mov
adc
daa
xor
ret
ud2
test
outsb
push
mov
inc
stos
sbb
or
inc
push
cmp
adc
pop
inc
pop
pop
test
lds
dec
int
push
mov
movsb
jle
xor
jbe
fwait
shrb
dec
hlt
pushw
xchg
je
fbld
bound
mov
add
in
in
lea
xchg
stos
or
das
je
mov
repz
mov
and
mov
arpl
cmp
into
adc
push
adc
js
je
mov
pop
inc
cmp
dec
inc
push
or
mov
testl
adc
adc
push
sub
pop
jle
in
mov
mov
sbb
push
arpl
cmpsb
sub
jns
sarl
mov
out
aad
lock
mov
inc
shrl
jg
fidivrs
or
repz
jmp
scas
cmc
inc
cltd
adc
adc
push
fs
dec
out
mov
xor
jecxz
xchg
push
jle
xor
dec
mov
lahf
sub
mov
mov
mov
sbb
or
push
ljmp
adc
push
loop
mov
xlat
lds
sub
gs
pop
mov
pop
push
pop
sbb
cwtl
and
and
aam
pop
xchg
mov
push
pop
sub
inc
push
add
icebp
test
jmp
mov
in
out
fists
out
mov
inc
xchg
fildll
push
fcomps
pop
in
push
pop
loop
lods
xor
jge
sub
mov
and
and
dec
adc
xchg
jle
or
add
mov
fs
mov
inc
mov
jecxz
mov
or
movb
xchg
pop
out
mov
push
inc
or
insb
push
pop
inc
int3
xor
sbb
negb
or
inc
jl
scas
outsl
fsts
daa
mov
jb
inc
xor
cwtl
add
sub
pusha
and
repz
pop
arpl
cmp
clc
pop
cmp
xchg
fidivrl
outsb
mov
sti
jmp
jae
imul
outsb
jno
int3
ss
insl
cmp
shlb
dec
sub
mov
cmp
or
in
adc
stc
loope
out
lahf
fiaddl
rcrl
cvtps2pd
out
mov
in
pusha
jp
scas
es
jle
cli
jmp
ljmp
imul
sbb
and
mov
push
mulb
inc
sahf
cmp
or
dec
mov
movq
push
xlat
adc
aad
mov
imul
cmp
ja
loope
out
mov
jle
sbb
test
daa
push
jbe
mov
push
dec
sub
mov
pushf
cmpsl
int3
xlat
and
aam
push
out
push
or
sub
jb
sub
mov
lods
lds
xor
jns
mov
fnstenv
adc
stos
stos
xor
cld
roll
ret
data16
dec
sahf
inc
sbb
jno
cmpsl
push
pop
je
jns
push
add
jmp
mov
mov
mov
xor
pop
mov
es
dec
or
inc
gs
mov
push
or
ds
sub
jmp
xchg
or
lahf
push
mov
push
sub
fldcw
pop
cli
mov
or
or
lds
mov
jle
loop
inc
clc
je
ret
movsb
sbbl
scas
mov
cli
outsb
xchg
arpl
jg
dec
mov
fstpt
and
or
popf
mov
mov
mov
sub
fwait
jnp
xor
mov
cltd
jnp
sbb
push
pop
lret
add
inc
pop
scas
pop
xor
jle
test
cmc
lret
test
mov
mov
and
ja
push
inc
rolb
gs
lahf
sbb
fbld
data16
cmp
fldl
ljmp
mov
gs
pop
dec
rolb
test
ret
mov
pop
in
iret
mov
lret
mov
imul
shlb
mov
out
push
sub
or
dec
stos
mov
add
dec
and
and
mov
shrl
mov
fcompl
ficoms
fcompl
mov
inc
or
cmpsl
xchg
mov
in
cmp
sbb
push
dec
int3
in
outsl
push
pop
pushfw
inc
cmc
mov
pop
add
ljmp
jmp
sbb
mov
sbb
sub
lcall
mov
inc
call
fucomip
add
js
fs
pop
sub
mov
dec
pop
lea
loop
jne
push
stc
dec
fistl
mov
pop
push
inc
setnp
movsb
jg
test
jb
mov
jns
cmp
stc
mov
push
xchg
sahf
mov
out
cmp
movsl
push
jb
jge
pop
cwtl
mov
fwait
and
and
daa
sub
or
push
mov
jp
pushf
fildl
aas
jge
jnp
shr
cwtl
rorl
xor
sub
and
mov
and
scas
jne
mov
and
push
xor
add
and
jg
test
sbb
adc
insb
out
data16
sar
mov
arpl
sti
hlt
fstps
xor
nop
mov
xlat
inc
mov
dec
out
imul
xor
pushf
sub
mov
ret
push
imul
in
test
rcl
divl
ficomps
imul
sbb
outsl
mov
and
pop
adc
pop
inc
and
loop
call
addl
outsb
adc
insb
sbb
or
faddl
mov
daa
jg
iret
jo
ret
jo
xchg
push
leave
jns
cmp
or
adc
lret
push
stos
or
adc
arpl
std
icebp
sbb
in
fisttpll
pop
push
cmc
adc
pop
cwtl
insl
arpl
sub
call
call
fsubrs
push
shrl
and
sub
lea
xor
outsl
or
xchg
dec
push
xchg
cmc
sub
imul
xor
jnp
icebp
repnz
sti
pop
ret
lock
sbb
das
inc
push
daa
stc
loope
leave
hlt
fdivrs
test
ss
mov
pop
push
out
lcall
ja
popf
add
adc
add
fstps
or
in
pop
pop
lea
das
adc
movsb
inc
stos
xchg
add
sbb
sbb
push
mov
xor
push
mov
ret
iret
mov
mov
aam
cld
repz
jne
cmc
cwtl
jo
add
das
dec
xlat
jne
mov
jmp
fcompl
push
fistpl
ljmp
mov
cltd
divb
leave
jmp
adc
mov
rcr
pop
xchg
stos
jge
lds
pop
dec
or
scas
or
cltd
cmp
sbb
cs
out
cmp
jmp
mull
inc
cld
and
push
arpl
mov
sbb
jl
jo
fst
and
jb
jmp
jo
inc
int3
ljmp
dec
pop
in
outsl
and
pop
push
ja
lret
inc
mov
cmp
mov
add
add
push
sbbl
lock
test
je
jae
and
xor
movsb
mov
les
imul
jno
adc
fistpll
push
jns
ficomps
or
call
and
popa
inc
int3
sarl
or
mov
cwtl
repz
mov
lret
push
pop
mov
and
lods
push
in
rorl
mov
je
roll
lcall
push
and
inc
lea
stos
lret
fisttpl
stos
mov
pop
push
inc
jo
push
into
jg
scas
cmpsb
movsl
push
mov
add
adc
adc
ret
sbb
ljmp
aas
xchg
sbb
push
adc
add
scas
sbb
xchg
cmp
pop
xor
int
adc
fmul
loopne
mov
sbb
icebp
mov
popa
insl
cmc
xor
iret
mov
xchg
jl
cmc
jge
aas
xor
pop
lcall
xchg
iret
add
pop
fcoms
ret
shlb
leave
push
in
cmp
sbb
lods
cmc
sbb
push
xor
push
and
ffree
push
lea
cmp
call
das
jne
jns
and
xor
mov
rorb
pop
loop
jns
jecxz
repnz
stc
mov
mov
mov
pushl
sahf
or
int
pushf
sbb
add
xor
xorb
mov
xchg
stos
lods
jl
jo
popf
aam
insl
sbb
cmp
pop
or
lcall
stc
js
loopne
jae
jne
push
jecxz
ljmp
cmpsl
js
out
fldl
rcr
cs
inc
fisttpll
adc
and
in
fwait
push
popa
cmpsb
dec
pop
les
sub
mov
sti
xchg
imul
push
jge
lods
sub
fwait
pop
incb
or
imul
adc
or
in
fs
shl
xor
inc
sub
mov
insl
movl
int
in
cmp
xchg
test
mov
add
pop
outsb
sbb
or
cmp
aad
addr16
scas
dec
cli
es
repnz
inc
fistl
xor
pop
push
jg
std
mov
aaa
adc
out
popf
or
jnp
call
or
push
iret
and
jne
scas
jl
divl
jno
push
jmp
add
push
loope
add
popa
xchg
pop
dec
pop
push
out
les
int3
ljmp
jp
mov
dec
lea
lods
jmp
mov
pop
push
daa
sahf
cs
or
cwtl
pushf
mov
pop
inc
add
mov
test
dec
out
jns
repnz
pop
stc
mov
sti
xor
mov
cltd
or
outsb
cmpsl
in
gs
jmp
mov
in
repz
test
push
nop
or
cmc
cmpsl
fsub
sbb
in
or
fwait
push
inc
sahf
xor
pop
adc
push
sbb
mov
insb
and
pop
xchg
pop
clc
icebp
jno
shrb
addl
push
jae
dec
leave
adc
divb
mov
lret
int3
jecxz
lods
lea
arpl
movsl
shll
sahf
js
cwtl
adc
std
test
enter
les
popa
stc
inc
inc
outsl
push
jecxz
shll
lock
xchg
lcall
hlt
cli
call
imul
fmul
fs
dec
sub
icebp
fs
fdivs
test
sub
fs
lret
imul
and
mov
dec
xchg
sbb
jne
enter
dec
sbb
rorb
pop
call
adc
or
jns
xchg
cmpb
push
leave
mov
xor
cmp
cmc
jb
out
fstl
jl
or
stc
mov
xor
xchg
out
sahf
sahf
mov
gs
outsb
dec
pop
notl
sbb
cmp
inc
repz
stos
flds
lods
mov
add
pop
or
sbb
sub
push
in
sub
lods
pop
jle
xchg
fnstcw
add
adc
push
lods
push
das
std
mulb
adc
xor
adc
cld
mov
pop
gs
mov
jmp
xchg
pop
cmp
icebp
sub
xchg
out
fcmovu
xchg
inc
fwait
aas
mov
mov
fstps
push
dec
or
mov
dec
adc
xchg
sarl
inc
mov
push
int3
hlt
lret
mov
cmp
xchg
shlb
js
imul
fcoml
divb
cmp
mov
das
test
lahf
mov
xor
mov
and
pop
dec
inc
jb
stc
adc
iret
sub
cmc
int
mov
lea
imul
push
cmp
adc
aas
jge
pop
mov
sub
scas
add
xchg
out
add
jo
lods
cs
sbb
or
fidivrs
jge
jmp
pop
fstpt
xchg
mov
lahf
mov
jbe
int
jbe
cmc
xor
les
xlat
insb
sub
push
cmp
cmp
xchg
test
fcmovnb
adc
imul
cmpsb
into
test
call
sub
negl
loop
cli
ljmp
orl
in
lea
jle
cmp
mov
xchg
lcall
aad
dec
push
jb
dec
scas
pop
aaa
jo
insl
jnp
push
xor
and
dec
add
adc
cli
lea
and
jg
fistpl
adc
push
addl
lahf
jmp
popa
mov
xchg
xchg
pushf
mov
add
push
cld
fisubrl
test
xchg
cltd
test
xor
push
jnp
cmpb
loopne
call
iret
aam
jp
cmp
cmp
mov
mov
cld
test
fwait
imul
push
rclb
jno
dec
cltd
xchg
es
mov
rcl
lods
and
dec
icebp
hlt
sarb
loopne
mov
sub
out
pusha
add
mov
mov
mov
sbb
mov
push
or
ficomps
push
hlt
mov
mov
sti
jo
mov
pop
cltd
jle
or
fcmovnbe
test
mov
mov
addb
xchg
in
popf
push
or
adc
sub
mov
pop
sub
fs
iret
jae
ret
call
test
jmp
loope
dec
fnstenv
cs
push
xchg
xlat
fidivl
dec
stc
inc
mov
mov
jle
mov
hlt
mov
pushf
int3
adc
decb
or
push
int
cmp
dec
push
cmc
data16
jp
faddl
mov
or
push
icebp
jns
xchg
aad
xchg
adc
jb
jl
jbe
cmpsb
xchg
cmpsl
pusha
fisubs
sbbl
outsb
ret
mulps
rcr
cs
sahf
imul
cwtl
and
jnp
repnz
test
aam
ja
mov
xchg
dec
in
add
xchg
leave
sub
jecxz
movsb
sbbl
lods
popf
xor
add
xchg
dec
cmp
mov
jp
dec
subb
cmp
je
cmp
js
iret
pop
adc
fnstsw
psllw
and
inc
jbe
outsb
daa
mov
mov
mov
jmp
out
push
mov
ficomps
jg
pop
outsl
mov
sbb
sbb
cltd
pop
jo
icebp
mov
aam
sbb
mov
mov
fldl
ljmp
icebp
xchg
insl
xchg
jecxz
mov
scas
jp
xlat
inc
decb
pop
xor
pop
push
sub
mov
fbld
add
pusha
sub
lods
xchg
pop
mov
fcomip
out
jbe
ret
dec
in
lds
fstl
cltd
dec
test
jns
dec
mov
data16
testb
rcl
and
jns
lds
shr
imul
fs
pop
dec
clc
aas
or
mov
push
aas
mov
cltd
outsl
xchg
test
adc
andl
dec
jns
add
out
ljmp
mov
and
push
pop
daa
cmp
mov
cmpsb
bound
movsl
ds
sti
push
pop
pop
mov
aas
ret
cmp
sahf
mov
lret
xor
or
add
out
jne
mov
mov
push
jmp
bswap
sub
pop
cs
mov
xlat
std
mov
inc
inc
push
imul
out
mov
inc
mull
repz
adc
cmpsl
xor
mov
pop
mov
jp
loop
dec
xchg
push
shll
int3
es
push
ja
inc
inc
sti
lahf
jg
cld
and
cld
pop
js
in
out
xor
mov
ret
lahf
setb
fistl
lcall
xchg
and
adc
lds
cmp
shr
int3
or
mov
and
sbb
jg
fidivrl
stc
or
mov
andps
jo
les
pop
sbb
push
in
rol
rclb
fbstp
popa
test
iret
fnstenv
nop
jns
notb
mov
cld
mov
fildl
nop
test
cmp
inc
lret
icebp
arpl
xchg
cwtl
test
add
gs
mov
pop
push
push
mov
or
idivb
in
push
jge
lock
mov
push
into
loopne
lods
aas
xchg
pop
jmp
jbe
cwtl
fwait
cmp
outsb
rcr
xchg
sbb
iret
mov
and
lods
adc
jnp
mov
mov
jbe
aam
adc
clc
fcomi
idiv
mov
loop
lods
jp
adc
mov
loop
and
out
mov
jnp
jb
cli
inc
jecxz
inc
pushf
pop
das
ret
push
mov
push
jnp
rcll
movsl
rclb
cmp
mov
sahf
and
vmwrite
andl
insl
mov
sti
jne
rorb
inc
arpl
bound
ss
or
lahf
inc
imul
arpl
ret
rcr
push
loop
das
mov
or
sub
aas
bnd
pop
cld
or
arpl
int
xchg
sub
mov
fs
out
addr16
and
mov
dec
xchg
and
incl
loope
inc
nop
or
inc
cmp
mov
shll
adc
repz
inc
movsl
out
push
fimuls
scas
das
dec
in
in
pop
cmp
pop
fldpi
cmpb
pushf
stc
mov
clc
test
xchg
dec
xor
sbb
je
jae
xchg
inc
pop
test
shll
xchg
iret
fsubrs
mov
xchg
add
dec
movsl
cmp
push
adc
adcb
in
cmp
mov
out
and
sub
ret
rcll
mov
cmp
shlb
and
jge
mov
inc
cmp
shrb
xchg
mov
js
add
test
aas
push
xchg
xchg
hlt
sti
jmp
cmp
jb
dec
jbe
lret
ja
mov
ss
adc
insl
lret
jl
inc
divb
fstps
pop
dec
xor
sbb
cmc
xor
sbb
scas
and
push
inc
es
mov
xchg
dec
stos
fisubrl
jne
xor
cmp
sbb
mov
sub
imul
fstp
xchg
xchg
jg
je
stc
inc
add
cmp
jp
enter
sbbl
sbbb
enter
push
clc
lret
or
sub
adc
fiaddl
mov
pop
sub
ffreep
int
adc
mulb
mov
stc
adcl
outsb
or
dec
push
jp
fisttps
push
icebp
mov
nop
mov
mov
sbb
test
ds
mov
xor
push
mov
js
push
mov
jno
pop
mov
stos
cs
fisubrl
daa
int3
cmp
mov
cld
mov
inc
insl
and
lods
dec
mov
lds
sub
sbb
dec
fidivrs
mov
xchg
cltd
jl
popf
mov
mov
push
xchg
adc
in
xor
shrl
pop
stos
imul
or
adc
nopl
inc
fistpll
push
cmc
ja
sbb
cmpl
jne
les
not
or
dec
sahf
adc
xchg
arpl
jno
fadds
or
mov
cmpsl
call
jge
or
adc
xor
jl
in
insl
imul
cmp
pop
data16
jns
push
add
ss
xor
sub
lea
dec
dec
shr
jmp
sub
test
mov
lret
lea
mov
push
cmp
sti
jmp
mov
ljmp
ret
xor
and
sahf
or
pop
sbb
xchg
aam
push
ds
arpl
rolb
repnz
push
sub
repnz
pop
mov
fdivl
ret
fidivrl
mov
pop
pop
clc
mov
movsl
mov
outsl
insl
stc
loop
imul
lahf
movsb
imul
push
rorl
add
or
popf
xor
jnp
xchg
xor
xor
or
shrl
gs
dec
push
inc
or
xchg
and
fidivrl
ja
and
out
jmp
sub
repnz
mov
sbb
or
std
push
inc
ret
in
lret
addr16
or
daa
xchg
lret
or
test
sbb
pop
pop
test
out
loop
in
xor
test
fnstsw
fiaddl
cmp
xchg
or
adc
xchg
sbb
scas
out
popf
fwait
sbb
or
movsl
jecxz
out
and
mov
jb
or
in
fistps
ret
pusha
pop
sub
shlb
pop
jmp
popa
pop
or
jo
jo
icebp
inc
je
jne
jno
lahf
nop
mov
cmp
add
idiv
ljmp
je
iret
lcall
pop
sub
js
xchg
mov
mov
fadds
xchg
loopne
push
dec
test
cmp
test
dec
dec
pop
mov
int3
cld
movsb
lret
add
fsubrl
int
jae
shlb
idivb
cli
pop
fcmovnu
xchg
push
fbld
pop
adc
jle
jg
jecxz
ja
push
pop
xor
insl
dec
daa
stos
or
je
jne
cmp
xor
dec
outsl
cmpsl
pop
jae
nop
push
jb
pop
cli
inc
insb
js
and
push
lret
push
into
stos
test
ficoms
movsl
aas
dec
and
lds
fs
in
aaa
inc
xchg
ret
sbb
insb
lret
jae
ds
adc
xorl
sbb
shlb
fwait
xor
pop
jmp
xorb
mov
xlat
stos
add
dec
loope
or
ds
xlat
dec
aam
ja
push
adc
out
xchg
nop
inc
testb
dec
les
lods
mov
mov
sbb
push
mov
mov
andl
int
mov
push
jge
sbb
jecxz
add
jecxz
sbb
mov
inc
filds
pop
sub
sahf
psubusb
ljmp
fsubl
inc
movsb
fimull
inc
or
jmp
scas
push
cmpsb
sbb
sahf
iret
aas
jg
fildll
outsb
test
inc
shlb
jmp
popa
std
push
hlt
aam
repz
pop
add
push
jge,pt
test
iret
xchg
sarb
push
cmc
std
mov
shll
and
lahf
rcr
push
and
pop
shrb
out
shr
sbb
pop
mov
cmpsl
xor
adc
es
and
cld
inc
leave
lcall
lods
xchg
bound
lock
data16
clc
lahf
cs
icebp
mov
xchg
fwait
insb
iret
fs
aad
mov
mov
mov
and
sahf
mov
repnz
shlb
xor
aaa
and
xchg
push
xor
and
mov
dec
test
mov
jae
lods
adc
loope
pop
inc
cltd
cmpsb
sub
cmp
mov
out
movsl
push
dec
xor
adc
lcall
dec
rolb
push
loopne
inc
popf
mov
js
pop
pop
mov
out
shrb
and
ficoms
sub
push
mov
fimuls
pop
sbb
cs
push
arpl
jge
test
mov
stos
sbb
movsl
mov
test
jge
push
xor
enter
lods
rorl
adc
adc
mov
cld
ret
and
push
mov
mov
mov
jmp
inc
out
or
mov
leave
dec
std
inc
push
mov
push
push
clc
cmp
jne
je
lea
dec
sbb
int3
inc
mov
imulb
dec
xlat
xchg
clc
stos
fucom
add
out
divb
push
jle
loopne
pop
xchg
jb
pop
sbb
sub
sub
add
repz
rorb
cli
arpl
loopne
std
dec
xor
loop
cmp
pmullw
cmpsl
lret
xor
loopne
enter
in
movsl
stos
andl
push
inc
lret
in
cbtw
xlat
addr16
cmp
dec
add
sbb
movsl
push
cmp
pusha
xor
movsb
sub
sahf
std
imul
cmpsb
call
jle
or
sahf
into
pop
push
sbb
mov
and
mov
xchg
xchg
mov
or
lret
aaa
xor
das
jne
imul
mov
jbe
sbb
mov
cmp
push
dec
or
add
nop
inc
repnz
or
cmpsb
mov
push
fs
xchg
dec
aas
out
test
imul
push
push
xchg
pop
push
xchg
mov
test
int
sub
std
xor
push
mov
xchg
clc
sbb
js
and
inc
fwait
lea
mov
push
scas
jbe
mov
dec
push
shll
sahf
add
push
jecxz
mov
popa
jmp
or
add
mov
add
xchg
loop
jns
outsl
lds
lods
cmp
or
in
and
lahf
cmpsl
cltd
jb
dec
push
out
out
jne
mov
xor
subl
out
stos
cmpsl
xchg
sub
or
std
push
jg
sbb
dec
scas
shrl
xor
or
loop
inc
addps
addr16
or
push
out
cmpl
add
adc
and
out
inc
inc
xchg
dec
fidivs
ljmp
adc
jo
inc
adc
inc
xchg
push
clc
inc
insb
dec
rolb
stc
sbb
stc
mul
push
pop
mov
mov
and
scas
test
mov
jp
stos
dec
mov
and
mov
fcmovb
and
xlat
movsb
sub
sti
pop
shlb
out
push
outsl
mov
roll
cmovo
pop
cmp
mov
fisttpl
push
cwtl
push
in
mov
mul
fldl
and
ja
dec
aas
out
xchg
pop
sub
mov
jge
push
jge
ficomps
push
loope
or
push
in
xchg
sahf
push
movsl
adc
jno
roll
and
mov
cs
cmp
shrb
hlt
jp
xchg
lock
inc
ret
cwtl
jg
dec
lods
notl
stos
push
call
push
jecxz
mov
les
mov
fdivl
xchg
pushf
neg
les
or
ret
jg
push
add
sbb
push
aaa
scas
js
sbb
sahf
pop
xchg
sbbl
lahf
mov
fwait
mov
add
fucomip
fcmovbe
mov
in
sub
adc
and
int3
jnp
int
fnstenv
ret
cmpsb
xchg
mov
fdivr
xchg
fs
inc
lea
std
dec
mov
mov
mov
sbbb
push
and
xor
mov
test
cmp
cmp
cltd
jne
stc
outsl
aad
push
pusha
rcll
push
pop
or
sbbl
add
scas
lret
push
outsb
mov
mov
push
pusha
jb
xor
jge
pop
mov
bound
outsb
test
sub
jg
fmull
adc
notl
shrd
fdivs
imul
in
pop
icebp
add
xor
xchg
xchg
call
jnp
fcomps
fdiv
and
aam
or
jb
mov
repnz
cmpsb
data16
mov
dec
cmp
mov
cmp
mov
cmp
xor
dec
les
movsb
fimull
aas
add
dec
les
mov
sahf
push
mov
lods
xor
sub
in
popf
sub
mov
aam
loope
inc
repnz
push
mov
shlb
push
xchg
clc
adc
popf
mov
clc
addr16
push
lock
ds
lods
mov
adc
fmul
mov
dec
or
cmp
dec
loopne
add
push
movsl
jge
xchg
adc
mov
dec
push
adc
mov
mov
and
in
fwait
ljmp
je
clc
mov
fmulp
xor
add
jno
repz
xor
rclb
mov
insl
adc
lahf
cs
lods
pusha
cmp
sub
adc
test
add
fisttps
jg
in
aas
inc
jmp
sub
lods
jno
pop
decb
mov
mov
mov
mov
cmp
js
mov
icebp
adc
test
int
pop
sub
fstl
rorb
loope
pushf
add
jo
pop
cmpsb
dec
cltd
jbe
lock
stc
pushf
mov
inc
repz
mov
push
dec
inc
xor
sub
mov
xlat
jnp
cmc
and
les
sub
xor
mov
repnz
ljmp
adc
inc
insl
into
mov
mov
fadd
mov
or
cmpsl
jo
xchg
pop
or
pop
subb
adc
fbld
std
into
xor
ljmp
rcr
dec
push
mov
daa
fwait
decb
adcb
fsubrs
insb
iret
loop
movsl
scas
jbe
iret
xor
aad
mulb
mov
in
ljmp
pop
inc
ja
pop
mov
lret
push
sub
add
call
notl
bound
mov
push
pop
pavgw
dec
inc
push
loopne
jl
pusha
std
cmp
cmpb
test
mov
movsl
cmp
test
lods
mov
mov
sti
inc
gs
sub
push
cmc
lock
add
js
push
adc
aas
sti
xchg
leave
out
daa
jnp
scas
dec
push
stos
sub
mov
mov
sbb
xor
push
or
pop
jp
dec
add
fldenv
inc
cmp
leave
in
mov
fs
or
add
hlt
orb
pop
jne
cmp
or
in
jecxz
lock
adc
jmp
stc
das
fsts
and
cwtl
or
inc
mov
sub
mov
in
push
js
add
xor
fiaddl
pop
fstl
pop
pop
lock
jmp
xor
sbb
cmp
cmp
or
xchg
dec
cmc
mov
sbb
sbb
mov
dec
lret
rcrl
addr16
jb
and
mov
fwait
cmp
leave
add
mov
mov
mov
adc
fdivp
jbe
cmpsb
mov
push
cmpl
mov
jg
inc
cmp
pop
sub
pushf
scas
pop
ret
xor
sahf
add
idivb
jns
mov
sarl
add
insb
lea
jne
dec
cmpsb
pop
arpl
fmuls
out
sbbb
lds
pop
mov
push
mov
adc
inc
cmpsb
mov
rclb
mov
adc
hlt
mov
dec
subb
clc
pop
mov
inc
cmpsb
out
inc
cmp
mov
sbb
leave
inc
mov
dec
sahf
pop
pushf
aam
es
jo
push
dec
fstp
cmpsb
das
jmp
jbe
mov
cmpb
mov
clc
ljmp
int3
enter
sub
xor
mov
push
xor
mov
test
cmp
cmp
mov
xchg
call
mov
sbb
and
pop
inc
es
std
repz
sarb
pop
push
imul
xchg
add
int3
xor
out
lcall
stc
mov
mov
cltd
push
popf
inc
cmp
inc
ret
out
cmp
push
dec
movsl
push
pop
fs
cmp
cltd
sbb
sub
out
rorb
test
lods
pop
mov
jle
pop
out
lret
mov
push
mov
jns
adc
xchg
adc
ret
imul
adc
inc
cld
push
inc
dec
cld
or
std
cmpsl
ja
pop
pop
or
pushf
sbb
cmpl
cli
divb
or
out
and
imul
sub
adcb
adc
lds
lock
out
sbbl
ljmp
leave
data16
xchg
adcb
sbb
pop
xor
scas
adc
aad
out
xor
push
mov
mov
push
push
notl
cs
aas
sti
dec
mov
inc
sub
les
mov
adc
fmul
sahf
pop
jns
inc
aaa
ficomps
and
and
ud0
xchg
push
out
repz
outsb
movsb
jne
fwait
mov
test
sbb
sub
ds
mov
and
mulb
mov
test
je
stos
in
inc
aam
mov
or
mov
leave
inc
jle
mov
sbb
sbb
or
cmp
adc
xchg
std
inc
jmp
xor
jg
xor
test
add
loopne
lock
add
fisttps
inc
daa
adc
sub
sub
shlb
sub
adc
sub
pop
xlat
nop
pop
outsl
mov
sbb
pop
fcmove
cmpsl
iret
jg
jno
into
in
adc
mov
insb
or
dec
xchg
add
rolb
jmp
cmc
push
cmpl
cmp
inc
out
repz
pop
xchg
dec
jnp
test
add
add
and
mov
ds
fsts
push
std
pop
sub
pop
jge
push
mov
insl
dec
lret
and
inc
arpl
mov
xlat
push
fmul
lods
pop
mov
les
mov
jne
xchg
ss
pop
jl
xchg
pop
inc
or
lret
in
mov
aam
movsb
push
push
sub
dec
and
push
insb
mov
addb
pushf
cmp
gs
pop
cld
pop
sub
jb
or
push
inc
xor
call
ljmp
mov
cs
cld
inc
das
cmp
aas
dec
push
dec
mov
std
xchg
xchg
mov
adc
mov
scas
xchg
data16
pushf
add
and
ret
xor
lea
mov
repnz
cmp
dec
jmp
call
loope
inc
sarb
dec
jle
dec
sbb
es
stos
xchg
dec
cmpsl
and
or
xor
std
fcomps
push
arpl
fcmove
sbb
arpl
inc
movl
icebp
cmp
lock
cmpsb
nop
sub
push
imul
mov
pop
jl
loope
cmpb
stos
repnz
test
in
push
inc
cmp
adc
dec
pop
repnz
and
aad
js
aam
pushl
pushf
mov
mov
pop
jb
xchg
inc
mov
test
xorb
incl
iret
or
fdiv
mov
mov
xchg
in
inc
into
nop
test
icebp
push
mov
cmp
fadd
imul
mov
mov
outsl
or
push
push
jge
movsb
mov
andnps
dec
xchg
mov
sbb
jns
mov
mull
mov
fcomps
rcll
repz
push
fucomi
xor
inc
stc
jl
in
mov
idiv
clc
mov
popa
jle
mov
cs
ljmp
mov
repz
mov
cmpsb
pop
cmpl
sahf
out
lret
or
mov
popa
xor
shl
pop
das
roll
jbe
mov
lock
faddl
lods
or
inc
cld
dec
mov
cmp
jg
ljmp
xchg
dec
xlat
dec
xor
xchg
add
jbe
adc
inc
daa
nop
stc
sbb
push
dec
clc
enter
push
lods
pushf
xor
aaa
xor
pusha
rorl
xor
sbb
in
inc
sbbl
and
loope
adc
scas
dec
movsb
jno
push
xchg
xor
mov
pop
xor
pushf
push
lret
in
xchg
icebp
arpl
xchg
add
sbb
sub
arpl
cs
xchg
and
jg
or
mov
mov
out
fistl
jmp
dec
push
js
js
or
sti
cmp
rcrb
inc
and
out
mov
adc
sub
cmp
adc
ret
stos
lods
push
mov
xchg
ror
mov
mov
xlat
sub
jg
fsubr
cltd
scas
xor
and
inc
jp
in
mov
addl
fwait
pop
sbb
out
ffree
or
gs
sub
jo
in
xchg
enter
or
push
mov
mov
mov
sub
jp
aad
sub
mov
xchg
pop
pop
out
sbb
leave
sarl
xchg
pop
push
ds
imul
cmp
pop
mov
xlat
out
dec
xorb
test
jg
hlt
add
mov
mov
pop
push
xchg
cmp
out
push
xchg
and
add
call
sti
push
rcrb
mov
sbb
loope
jbe
pop
jg
jnp
cmc
dec
xchg
pop
sbb
push
stc
gs
scas
test
mov
sbb
repz
adc
arpl
sahf
lret
sbb
sbb
jl
lret
fs
jp
inc
not
dec
mov
and
dec
or
sbb
movsb
or
cmp
xchg
xlat
fildl
icebp
inc
cld
or
fstp
mov
inc
fldt
js
jecxz
adc
cltd
sbb
inc
pop
lds
dec
lods
stc
push
adc
pop
xor
or
push
leave
sbb
push
mov
dec
movsb
jno
or
cld
push
mov
push
std
pop
das
dec
or
xor
jae
mov
mov
mov
in
dec
jo
fistpl
push
inc
repnz
sbb
push
pusha
mov
inc
sbb
mov
in
mov
ja
stos
fdivl
inc
mov
bound
mov
pop
push
andb
mov
jo
xlat
xchg
sbb
clc
test
shll
ficoms
in
xchg
repz
shll
shrl
mov
fdivp
cmpsb
cmpsb
cmc
mov
adc
xor
inc
jbe
rcr
sahf
push
pop
aaa
xchg
cmp
js
or
repnz
mov
and
jge
testl
xchg
lock
lret
fdivrs
jp
mov
fdivl
rol
lock
filds
add
and
inc
inc
cmp
notl
push
sub
jp
jg
cmp
rorb
lods
xchg
xorb
fninit
xchg
repz
aad
xchg
xchg
add
dec
outsb
push
xor
xchg
mov
enter
pop
xchg
mov
add
lcall
into
fdivp
les
mov
adcb
lods
xor
sahf
or
scas
xchg
out
push
and
jnp
nop
or
cmp
aam
enter
cltd
out
cs
push
dec
and
sbb
mov
lods
inc
sbb
inc
xor
test
mov
xor
add
pop
or
int
ljmp
out
pusha
fs
mov
mov
test
pop
out
mov
stos
xchg
xor
adc
outsl
mov
push
dec
jge
fwait
add
out
inc
sbbl
adcb
jne
sub
pop
cwtl
scas
cli
sub
insb
cmp
roll
dec
inc
je
mov
stc
push
pusha
insl
subb
or
cmp
xchg
ret
lods
fldt
sti
aad
or
test
subl
dec
sub
push
ficompl
jnp
fbld
inc
data16
dec
lock
lret
loop
sbb
cwtl
je
clc
movsl
sub
rcll
cmp
adc
and
jp
dec
sbb
cltd
xor
jmp
mov
jne
sub
in
sub
xor
jae
xor
cmp
inc
ljmp
repz
fisttpl
sbb
stos
lcall
cmp
dec
loop
pop
xchg
mov
call
cmp
lods
push
icebp
gs
mov
and
push
jns
adc
and
stos
test
inc
inc
scas
add
fldl
negb
lock
inc
and
fldcw
aam
add
jmp
sbb
sbb
int
lret
mov
cld
add
nop
pop
inc
add
enter
xchg
jb
rorb
xchg
mov
add
out
icebp
or
sahf
das
or
int
loopne
movsb
xor
ss
cs
xor
inc
rcr
mov
icebp
ds
mov
pop
fdivl
inc
inc
adc
dec
or
je
mov
mov
mov
adc
stc
mov
cltd
clc
and
enter
cltd
pop
push
jne
jno
clc
mov
inc
sbb
mov
xchg
out
cmp
and
sub
pop
cmc
push
ja
pop
push
pop
insl
jb
mov
or
adc
stos
outsb
push
cmc
push
push
push
popa
xor
mov
sbb
xor
jae
cli
mov
roll
cmpl
insl
xor
pop
cs
fimuls
or
dec
out
adc
xor
sub
mov
sub
out
pop
mov
xchg
mov
out
sti
inc
push
ficoms
jne
fists
xchg
addr16
push
pop
dec
idiv
pop
std
pop
jb
stc
sti
or
xchg
leave
push
scas
movsl
lods
test
mov
mov
xchg
or
cmp
test
fcmovnbe
scas
cli
je
pop
gs
fstl
nop
ljmp
mov
scas
xor
popl
mov
in
bound
mov
sbb
adc
mov
sbb
xchg
push
psignw
and
insb
mov
lahf
xchg
sub
shll
adc
push
pop
mov
bnd
jl
out
mov
pop
push
jns
xchg
jns
cmpsb
mov
fs
test
daa
mov
xor
or
inc
jl
dec
push
pop
bound
mov
int3
dec
or
out
mov
leave
mov
shrl
popf
xor
in
insb
rcl
inc
sbb
sub
mov
in
jb
out
icebp
push
xor
xchg
jg
mov
fimuls
mov
inc
sbb
mov
or
jb
mov
int
leave
stc
cvtps2pi
push
pushf
ret
and
mov
inc
fstl
les
pop
dec
int3
loope
mov
cmpl
adc
push
sbb
push
fiaddl
frstor
and
adc
push
pop
cmp
rcrl
test
jno
sub
inc
enter
sbb
xchg
xchg
movsb
in
cli
sbb
pop
push
bound
outsl
jp
inc
movsl
jbe
cmpsb
sbb
pop
lds
je
pop
bswap
adcl
dec
xor
mov
xor
leave
insl
mov
addr16
lea
je
mov
sbb
xchg
xchg
xor
jle
cmp
or
xor
add
dec
fildl
addl
ret
pop
adcl
popf
xchg
jp
loopne
or
xchg
pop
movswl
mov
aas
les
xchg
push
leave
or
jp
test
les
repnz
add
xchg
popf
leave
icebp
push
ffreep
add
xor
mov
mov
pop
in
cltd
jae
dec
and
daa
roll
adc
xchg
cmp
in
cwtl
sub
das
adc
pop
mov
mov
jo
mov
mov
outsb
dec
mov
andl
mov
mov
adc
std
cwtl
and
shll
je
xor
and
sbb
outsl
test
movsl
xchg
lock
leave
test
jb
in
std
loop
leave
arpl
imul
gs
inc
in
push
sub
loopne
in
out
jl
es
push
cmp
bound
test
add
push
cmp
mov
xchg
jo
fwait
mov
mov
out
jmp
xchg
aad
inc
pusha
pop
aaa
sub
inc
insb
sub
xchg
nop
test
movsl
out
ficomps
dec
stos
insl
enter
cmpsl
mov
jge
test
notl
es
push
add
inc
mov
lahf
sub
mov
xchg
push
mov
mov
imul
iret
push
out
push
mov
add
sub
xchg
adc
ror
int
mov
dec
mov
leave
or
pop
arpl
and
jle
test
inc
jne
je
or
pushl
stos
ljmp
mov
repz
push
fsub
xchg
lret
mov
call
mov
mov
aas
mov
daa
out
push
lcall
cmp
push
push
sub
shr
in
stc
ss
enter
sbb
fldcw
sbb
pop
lods
cmp
mov
mov
dec
sbb
lret
pop
mov
nop
es
pushf
mov
insb
dec
and
addr16
bound
psadbw
ljmp
ret
int
sbb
or
into
push
in
xor
es
rcrb
jns
inc
clc
lahf
outsl
enter
pop
and
cld
xor
in
xchg
add
cmp
xchg
pop
cld
movsb
cmp
ficoml
aam
pop
mov
mov
xchg
mov
mov
xchg
fsubrl
mov
out
pop
fcmovbe
mov
arpl
push
mov
testb
push
fimull
or
pusha
add
icebp
fwait
sbb
add
stos
inc
repnz
fidivrs
inc
adc
jmp
shr
ds
dec
sub
movsl
push
pop
sahf
xchg
fsts
and
push
in
inc
icebp
pop
jecxz
jbe
inc
js
xor
ljmp
xor
mov
stos
cltd
fldcw
xor
inc
mov
jge
xchg
ja
mov
cmp
movsb
xchg
jno
nop
mov
ljmp
out
jnp
mov
mov
or
pusha
fiadds
iret
xchg
pop
les
cmpsl
xlat
test
pop
rol
xor
jge
pop
mov
aas
dec
sub
dec
sub
lret
push
shlb
lods
inc
adc
ja
mov
dec
lods
sbb
sti
adc
jg
mov
mov
roll
and
ror
pop
cwtl
and
flds
add
xor
jo
fisubl
adc
xchg
xchg
jle
movsb
inc
fcomps
ds
aas
or
mov
mov
jns
mov
out
and
cmpsl
js
push
lret
mov
add
xor
repnz
add
aas
stos
jnp
jecxz
cmpsl
scas
lret
jne
cmp
cmpsl
ret
mov
addr16
jge
cltd
mov
xchg
xchg
xchg
ja
dec
popf
mov
jnp
dec
test
xchg
cwtl
pushf
and
test
jns
std
mov
inc
outsb
push
jecxz
jp
ds
fs
pusha
add
rcr
push
jmp
fcoml
dec
arpl
sub
xchg
xchg
inc
out
hlt
dec
or
mov
xor
mov
adc
repz
loop
add
adc
xor
push
push
add
test
movsb
dec
xor
in
cwtl
mov
push
out
je
dec
ficoml
in
subb
cmpsb
lods
testb
mov
and
xchg
out
xchg
pop
mov
or
aad
pusha
je
mov
fwait
icebp
sub
sbb
add
xlat
std
mov
or
mov
adc
test
mov
cltd
jp
stos
js
jecxz
arpl
mov
and
lahf
jno
push
pop
xor
xchg
lcall
lods
sbb
sbb
mov
inc
xchg
pop
sbb
push
rorl
cs
push
sbb
gs
mov
ds
sbb
jne
lds
push
mov
pop
addb
or
mov
imul
pushf
stos
lea
idivl
push
adc
jl
inc
lahf
ja
mov
cmc
jb
adc
mov
add
in
nop
cmpsb
mov
inc
in
or
daa
push
int
out
arpl
pop
pop
std
aad
mov
jl
sahf
sbb
and
jmp
cmp
pop
add
lret
jno
jge
lock
mov
lock
sub
mov
sub
pop
jge
scas
xor
cmc
push
leave
sub
add
mov
mov
jg
push
cmp
lahf
push
into
mov
cld
inc
fisttpll
ret
mov
mov
push
nop
sub
xabort
outsl
rol
and
cmp
shll
rcrl
imul
cltd
hlt
dec
push
out
in
fs
outsl
lret
sbb
lret
int
jge
pusha
ficompl
scas
std
mov
sbb
jge
or
popl
sub
in
sub
add
shlb
or
lods
sbb
enter
xor
push
bound
cmc
jns
data16
or
dec
sahf
andb
cmp
fucom
jp
pop
mov
or
cmc
lret
xor
out
mov
lahf
jmp
flds
and
and
test
nop
bound
lds
jb
push
loopne
xchg
ret
push
dec
pop
lods
cltd
dec
jecxz
and
adc
lahf
outsl
lea
repnz
push
pop
cmp
aam
out
fwait
sbb
cmp
dec
pop
imul
add
mov
mov
stc
mov
push
add
lret
sub
jle
push
mov
scas
mov
push
mov
addl
push
and
push
stc
mov
push
outsb
mov
sbb
or
add
out
push
mov
das
jge
pop
stos
in
xchg
shrb
or
cmp
mov
jb
pop
push
stc
add
or
dec
and
daa
adc
mov
das
js
std
xchg
mov
shl
jp
jne
outsb
stos
mov
push
nop
pop
fistl
mov
dec
sarl
mov
pop
and
int3
mov
xlat
cmp
cmpb
xor
icebp
and
mov
add
xor
or
push
push
mov
add
mov
in
rol
sbb
out
xor
mov
add
gs
or
loop
in
mov
sub
test
data16
out
push
mov
xchg
shr
sbb
sbbb
outsb
adc
movntps
out
xorb
mov
test
dec
mov
mov
movups
pop
or
lea
imul
sbb
push
jno
jae
test
ficoml
push
nop
mov
mov
sbb
gs
mov
push
push
dec
push
lahf
out
pop
lret
xorb
iret
pop
or
in
sahf
das
mov
ds
lea
mov
push
or
jno
sub
das
xor
inc
xor
fildll
inc
sbb
xor
clc
repnz
xor
roll
mov
dec
adc
dec
insb
nop
call
call
jbe
pop
cmpsb
jge
arpl
jne
and
mov
daa
jbe
arpl
adc
xchg
hlt
js
jl
scas
dec
jp
daa
scas
gs
int
sbb
pop
mov
xchg
dec
xchg
les
or
mov
sbb
out
arpl
inc
repnz
sub
subl
xchg
cmc
xor
cmp
xor
sub
shll
and
fs
lods
xchg
ret
or
je
ret
pop
add
mov
xchg
mov
and
push
cmp
adc
pop
adc
fisubrs
jg
or
mov
mov
jge
and
mov
dec
stos
testl
in
pop
nop
inc
or
dec
rolb
inc
pop
lea
sub
jb
stos
sub
jns
outsb
push
stos
mov
pushf
cmp
movl
inc
cmpsb
xor
or
and
pop
ja
insb
mov
fistpl
call
lea
aas
mov
xor
in
and
cmp
ds
dec
lock
daa
test
push
sub
sbb
fstps
sbb
push
add
or
test
stos
and
or
data16
cs
and
sbb
sub
std
fcompl
push
incb
mov
out
cmpsl
sbb
dec
xor
in
lock
xor
xor
mov
pop
mov
add
enter
nop
xchg
jmp
add
imul
add
cmp
aas
mov
lea
dec
mov
add
fmul
push
jle
xchg
pop
stc
sub
neg
inc
mov
push
push
aas
fldt
mov
push
add
xor
pop
out
add
clc
pop
ret
inc
mov
sub
fdivrp
int
mov
js
roll
loope
lahf
mov
daa
xor
mov
xchg
clc
xor
jno
leave
in
adc
lret
rorl
add
pusha
outsl
sub
imul
xchg
sub
cmp
cmpsl
cmc
and
jae
jne
pop
and
fidivl
dec
sti
cmp
mov
sbb
push
xchg
jge
jnp
pop
outsl
adc
iret
jl
sub
adc
push
shlb
loope
and
push
mov
andb
dec
cmc
popa
mov
push
mov
movsl
push
out
fnstenv
aas
lea
sub
xor
ds
add
aas
in
imul
adc
mov
repnz
sbb
pusha
mov
sub
mov
div
stos
sub
push
in
cmpb
test
insl
negl
or
inc
cld
clc
lds
adc
inc
pop
shl
push
inc
or
bound
imul
mov
insl
or
flds
add
xor
mov
mov
cmpsb
idivb
ss
aam
xor
outsl
cmp
dec
fsub
lock
sub
pop
sti
mov
xlat
pop
loop
cli
jbe
nop
inc
jnp
dec
inc
or
jle
orb
jbe
aad
out
ljmp
and
dec
xor
mov
fcoms
cmp
aas
jl
push
and
mov
xchg
mov
aam
mov
loopne
lretw
xchg
push
jge
out
sub
cli
test
add
cmpl
xchg
mov
arpl
jo
mov
out
into
mov
xchg
jne
xchg
xchg
cmp
scas
mov
or
mov
xchg
xor
push
jg
jne
xor
adc
sub
into
and
jns
push
and
test
mull
inc
mov
jmp
dec
dec
pop
mov
dec
push
pop
add
bound
imul
orl
jg
pop
ss
mov
in
fcmovnu
mov
push
loop
cmp
xlat
xchg
xchg
cmpsl
xchg
pop
imul
call
movsb
lret
push
cmc
outsb
push
popf
not
dec
xor
cwtl
dec
lock
imul
adcb
xchg
mov
shl
mov
xchg
push
lret
mov
mov
cmp
imul
cwtl
adcb
and
xchg
xchg
xchg
stos
nop
aas
fs
pop
shl
fsubr
lods
pop
mov
push
ljmp
xchg
push
cmp
jne
cld
aaa
int3
jecxz
lods
or
dec
xor
adc
push
mov
xchg
jno
and
sub
movlps
dec
test
mov
ret
inc
mov
mov
mov
inc
and
cmpsb
data16
movsb
inc
sti
outsb
out
sbb
mov
xchg
cld
lcall
test
sbb
notb
pop
sub
mov
mov
leave
imul
fdiv
xchg
out
cli
aam
mov
fstl
xchg
stos
jecxz
xor
int
and
dec
pushf
cld
sbb
add
add
fmul
adcb
pop
dec
jge
loopne
dec
test
sub
lock
xchg
mov
dec
mov
adc
orb
mov
sub
aaa
lahf
lahf
addl
lods
jne
je
ficoml
adc
out
pop
xchg
push
das
dec
das
repz
sbb
js
xor
mov
flds
out
aam
lret
icebp
js
cld
sub
xchg
mov
dec
mov
sub
inc
sub
adcb
dec
dec
or
xchg
inc
mov
mov
add
outsl
xor
inc
fcoms
ds
push
lds
aaa
lods
mov
mov
pop
jle
xchg
mov
negb
cmp
xchg
pop
in
rclb
jg
add
enter
out
xor
sbb
push
fwait
pop
sahf
repz
sub
lret
in
jns
hlt
icebp
test
scas
mov
sqrtps
inc
out
jbe
nop
sarb
in
jge
sbbb
adc
jb
mov
add
lods
pusha
out
gs
pop
fistps
int
call
xchg
sar
les
aaa
dec
cltd
xchg
sub
lea
fdivr
into
sbb
sbb
shrb
or
in
cmp
xchg
and
sbb
stc
push
fbstp
aas
test
lds
in
mov
gs
mov
pop
jecxz
imul
repz
imul
daa
sbb
dec
adcl
mov
loopne
adc
shr
mov
xchg
lret
jle
adc
mov
stc
push
inc
rcr
stc
sub
mov
aam
mov
pop
bound
sbb
in
add
dec
out
push
test
in
mov
arpl
ljmp
int3
fldcw
sbb
popf
shrb
pop
xchg
push
xor
jb
lahf
and
cmp
push
mov
mov
push
xchg
iret
xchg
sbb
mov
adc
adc
push
fcmovbe
jb
xchg
sbb
dec
out
mov
lods
pop
pop
in
mov
add
jo
int
lret
push
ljmp
mov
bnd
scas
sub
enter
jo
adcb
aaa
repnz
cmpsl
mov
cltd
and
fdivl
sbb
in
mov
and
adc
cmpsb
adc
mov
addr16
ss
push
shrl
push
cmpsl
mov
cli
andl
inc
push
sbbb
enter
lods
js
test
pop
add
imul
inc
imul
add
jno
pusha
or
lahf
outsb
or
or
fidivl
pop
clc
xchg
divb
and
shll
dec
mov
sub
orb
aam
outsb
or
sub
add
xchg
mov
xlat
xchg
movsb
repnz
in
or
pop
push
lock
mov
lods
cmp
or
insb
add
aas
pop
into
jl
jb
or
jno
adc
aas
inc
mov
mov
dec
inc
or
inc
push
mov
insb
insl
imul
jmp
cmp
adc
js
pop
movsl
in
jl
push
mov
outsl
ss
inc
inc
mov
adc
xchg
popa
into
adc
ret
outsl
inc
imul
xorb
or
int3
push
xlat
roll
add
cld
daa
shrb
dec
xor
mov
cmp
add
mov
into
test
inc
jge
mov
out
stos
in
stc
push
or
inc
xor
arpl
xchg
lods
arpl
inc
inc
cwtl
adc
dec
popa
push
test
repnz
fdivrs
push
addr16
aam
das
out
popf
mov
loopne
leave
pop
pop
push
sahf
jge
dec
mov
lods
mov
fnstsw
test
dec
fwait
out
mov
xor
xor
pusha
push
pop
mov
sub
mov
cmp
mov
jp
ret
push
inc
mov
mov
shrl
push
sti
popf
data16
pop
cmp
add
rorl
fidivs
pop
sbb
out
ret
out
rcr
xchg
fbstp
scas
data16
inc
push
lret
add
int
mov
fcoms
test
adc
jbe
mov
arpl
cmc
in
lcall
xchg
adc
in
int3
jb
sahf
xchg
insl
sbb
loopne
pop
lock
jl
ss
mov
and
dec
adc
movsl
das
sarb
fdiv
cltd
add
ljmp
test
scas
mov
cs
imul
xor
cmp
add
or
call
adc
lret
js
rclb
sub
and
je
rorl
stc
mov
xchg
adc
mov
mov
lds
ja
lea
lea
dec
cld
mov
push
xor
push
mov
sub
mov
and
fisubs
lods
cmpsb
pop
pop
out
mov
fwait
leave
popa
stos
cltd
fs
jp
jl
jl
add
inc
mov
xor
test
filds
or
lods
imul
add
jle
adcl
es
lea
dec
push
push
test
negb
mov
xor
mov
mov
fs
cmp
in
call
xor
jge
jae
icebp
inc
shll
adc
lcall
movsl
idivb
pop
sub
lock
shlb
jg
jne
inc
shl
mov
insb
dec
sub
cld
in
xchg
inc
mov
aam
or
cmp
inc
and
clc
jne
push
loopne
sbb
jg
jnp
mov
jb
dec
sub
ljmp
sbb
push
ds
in
jg
into
xchg
sti
dec
cltd
or
std
in
or
or
cmp
jnp
lcall
lret
out
and
jnp
push
cmp
push
insl
cs
jecxz
mov
in
in
push
mov
xor
dec
add
cltd
mov
sbb
out
data16
sub
test
outsl
shrb
lds
add
jne
cwtl
fldl
mov
dec
add
jp
cli
clc
psadbw
movsl
sbb
shl
pop
mov
cld
xchg
into
jl
push
pop
loope
pop
sarl
repnz
lret
xchg
popf
stc
cmp
pop
das
gs
mov
xchg
imul
repnz
clc
mov
push
sbb
jb
adc
adc
js
cmp
lret
hlt
sbb
pop
jns
mov
or
fstpl
out
add
fstps
cmp
push
fwait
xchg
leave
adc
bnd
rcrb
leave
shll
dec
inc
sbb
xlat
aas
adc
push
add
push
mov
mov
mov
je
or
mov
insl
cmp
roll
imul
in
insb
scas
xchg
fwait
jnp
cmovnp
xchg
jo
es
repz
jmp
hlt
pop
cmp
loop
rorl
cld
ljmp
mov
jmp
faddl
jle
in
push
mov
repz
mov
lret
jno
scas
add
or
clc
jo
cmovne
jnp
jmp
das
xchg
ror
and
lods
sbb
and
negb
pop
or
jle
cmpsl
push
shlb
xchg
fstl
addr16
hlt
test
adc
cmc
scas
push
adc
scas
inc
fisttps
sbb
jne
add
mov
dec
push
pop
cmp
add
cmc
div
cwtl
pusha
jmp
cmp
push
adc
mov
jno
leave
inc
mov
pop
movsb
clc
mov
pop
jecxz
lret
dec
pop
fldl
stc
xor
hlt
xchg
mov
xchg
popf
pop
cmp
stc
or
sub
mov
clc
fs
xchg
test
xor
mov
add
ljmp
jb
lret
or
sbb
push
lds
cltd
imul
cmpl
test
jle
and
pop
cmp
and
js
fdivp
mov
leave
xchg
dec
and
sbb
fwait
sbb
lret
inc
lods
cwtl
repnz
or
hlt
jo
adc
cmpsb
mov
int
mov
and
jbe
mov
jo
xchg
je
ret
sub
dec
into
movsl
pop
icebp
int
sub
xchg
aaa
inc
xchg
adc
sbb
mov
xchg
jmp
in
out
lcall
das
ret
pop
loopne
mov
cmp
dec
jl
jbe
dec
sub
xor
lea
pop
cmp
repz
dec
jne
es
adc
sub
add
or
fisubrs
loop
sub
cli
jl
mov
push
insb
push
xor
popa
pop
and
dec
hlt
jno
pop
push
cltd
lods
or
xchg
sub
pop
insl
cmc
lods
jp
outsl
pop
mov
imulb
in
jmp
mov
lret
or
sbb
gs
scas
test
push
pop
add
lret
int
les
enter
xor
xchg
das
fwait
imul
imul
mov
cld
add
mov
mov
jb
mov
stos
mov
xchg
addr16
fs
lock
mov
or
and
stc
push
lods
xorb
lods
fstpt
xchg
insl
pusha
mov
sbb
adc
outsb
mov
fisubl
pop
add
in
sub
out
push
aaa
scas
bound
out
outsl
loopne
test
jb
movsb
push
or
push
mov
mov
mov
cmpsb
ret
loope
fistl
iret
mov
fsubrl
sbb
push
shll
or
shlb
aaa
jg
cld
sub
imul
shl
cmp
repz
sbb
shrb
sbb
sbb
mov
add
mov
jae
ds
cld
xchg
or
dec
push
add
sbb
stos
push
movsl
imul
jecxz
fidivl
adc
test
jmp
fucomp
xor
lods
rcll
mov
jge
push
inc
sbb
mov
xchg
jmp
push
repz
sub
int
cmp
mov
jnp
lcall
mov
pusha
xchg
lds
jno
fwait
cld
xchg
sar
or
dec
push
mov
leave
mov
ja
xchg
in
iret
jnp
js
les
cmc
xor
mov
test
or
aas
xchg
add
push
mov
ret
push
mov
and
movsl
int
sbb
into
pop
mov
call
push
add
into
mov
xchg
insl
sarb
fs
lret
ffreep
ret
dec
jno
mov
or
movsb
sbb
pop
lret
or
insb
mov
out
xchg
clc
cmpsb
loope
sub
sbb
out
dec
and
test
push
add
ja
inc
cmpsb
or
popf
mov
xchg
je
mov
cwtl
inc
pop
and
push
sbb
insb
cltd
int3
outsl
xchg
jbe
xchg
xchg
js
jge
lahf
lods
sub
cmp
icebp
xchg
push
mov
lcall
rcrl
fcomip
cvtps2pd
test
cmp
sti
fidivrl
test
in
ljmp
movsl
push
ds
test
mov
aas
lods
pop
loope
fisubl
out
sbb
mov
rcrb
xlat
push
stc
inc
aaa
mov
in
hlt
les
imul
jno
and
ljmp
xchg
in
mov
bound
outsb
mov
int3
fdivl
sub
testb
jmp
sub
jg
and
mov
fsincos
push
sub
mov
jmp
testl
xor
ret
repnz
sahf
fiaddl
jbe
inc
mov
dec
leave
test
loop
loope
loop
nop
or
iret
inc
fwait
bound
movsl
xor
popf
cmpsl
cltd
push
push
mov
adc
call
ss
in
jle
or
test
inc
jae
mov
mov
sub
mov
mov
insl
jg
push
outsl
shll
jnp
ret
inc
cs
jo
das
jo
push
gs
push
sub
xchg
xchg
sbb
test
in
sub
pop
addl
cli
xlat
sarl
mov
inc
mov
jne
xor
pop
mov
popf
inc
repnz
dec
ljmp
pop
in
push
int
leave
mov
mov
leave
inc
aas
cmpsl
dec
jge
sub
fs
mov
bound
mov
movsb
pop
movsb
pop
push
pop
ret
shlb
mov
nop
mov
fwait
push
push
fmuls
adc
pusha
add
mov
jae
jle
jb
or
sbb
js
jno
jne
ds
std
mov
xchg
inc
mov
out
and
mov
rol
and
cld
rorl
repnz
jg
adc
mov
inc
pop
lret
xchg
sarl
sbb
sahf
fstp
fmul
mov
inc
data16
in
add
adc
dec
add
js
cli
adc
lret
adcl
mov
mov
sbb
cs
jo
shlb
inc
leave
and
loop
sti
xchg
or
repz
mov
rorl
pushf
jo
dec
inc
cs
es
sbb
movsl
out
xchg
ret
out
insl
fidivrl
sbb
lahf
xchg
jno
in
sti
adc
cmc
inc
lret
and
mov
push
lret
popa
xchg
lds
mov
movsl
add
xchg
lahf
mov
sbb
push
adc
mov
ds
jae
ljmp
jnp
pop
pushf
pop
cmp
cmp
icebp
sarb
movsl
pop
ljmp
cmp
cmp
push
loopne
test
loopne
sub
cmp
lods
add
cmp
adc
push
xlat
dec
stos
lds
bound
mov
cld
add
mov
mov
clc
les
cmp
dec
cltd
fnstenv
icebp
les
xor
xor
addb
test
push
xchg
push
shlb
test
scas
cld
ret
pop
push
xor
lds
test
jno
aas
lods
int3
push
xchg
addr16
not
mov
xor
icebp
mov
aad
mov
adc
cli
xor
pushf
in
popa
jmp
notl
and
idivb
adc
addr16
xor
pop
add
popa
stos
out
dec
fsts
stc
loop
mov
movsb
bnd
loopne
push
outsb
pop
sarl
out
sbb
icebp
out
pop
jg
and
ljmp
ret
sbb
pop
loop
and
lock
sub
sbb
xchg
aam
sub
add
mov
mov
inc
xchg
xchg
inc
bound
int3
pop
mov
or
shl
in
clc
aam
push
cmc
mov
mov
lret
jnp
sub
cmp
lret
inc
cmpl
in
es
push
dec
adc
js
cmp
fwait
pusha
and
imul
call
mov
sbb
das
pop
in
addr16
stc
xchg
inc
ret
dec
std
cmp
dec
scas
jp
movl
mov
push
shll
insb
out
jge
jecxz
or
mov
add
or
jno
repz
mov
add
mov
mov
popa
mov
cmp
jg
jbe
pop
xchg
sbb
rcll
bound
leave
sbb
push
outsl
insb
bound
mov
pop
loope
cmp
pushf
mov
xor
xor
rclb
mov
hlt
jg
fwait
xchg
mov
cmp
mov
ss
imul
pop
ja
xor
mov
in
out
and
fistpll
leave
push
pop
push
sarb
sbbb
cltd
ljmp
stos
sub
push
sbbb
xor
call
add
jno
das
lret
sub
subl
xorb
jmp
dec
xchg
mov
mov
ret
jge
mov
bound
icebp
ja
xchg
jmp
or
roll
mov
and
pop
rolb
shlb
adc
ds
add
scas
adc
addr16
test
add
sub
cmpsl
sbb
push
or
out
lahf
insl
fmull
insl
mov
shlb
lock
aaa
scas
test
and
icebp
fcmovne
cmc
outsl
stc
push
js
sbb
mov
mov
popa
std
ljmp
dec
addb
leave
cmp
dec
cltd
cmp
jo
test
insb
push
add
outsl
inc
xchg
xchg
jnp
pushf
and
out
insb
pop
mov
lret
inc
jmp
jge
mov
cmp
addr16
insl
imul
mov
jns
xchg
nop
ss
push
gs
mov
in
cmpsl
adc
clc
jae
pop
and
push
mov
int3
pop
push
sbb
clc
pop
pop
fsub
mov
xchg
dec
loop
push
cmp
and
dec
test
loop
inc
test
sub
in
mov
mov
clc
outsl
loop
pop
sub
mov
negb
fs
repz
jbe
sbb
mov
cmp
fistpll
jne
sub
jmp
adc
lods
loopne
mov
jb
xor
jecxz
pop
xchg
aaa
out
out
rcll
push
bound
loop
cmp
pop
clc
rcl
js
aam
fdiv
scas
popf
dec
imul
cmp
aam
jns
dec
cmp
push
movsb
cld
in
loop
cmp
jne
and
or
mov
add
in
out
mov
cld
mov
pushf
aam
jmp
shlb
add
mov
xchg
push
cmpsb
xchg
add
out
movsb
pop
cmp
jb
dec
insl
jno
sbb
mov
mov
inc
pop
gs
cmp
pop
jecxz
add
mov
ljmp
add
dec
enter
sbb
lea
mov
loop
imul
cli
es
test
lahf
lock
mov
aad
div
mov
fs
jmp
data16
fcomps
cmpsl
sahf
pushf
pop
shl
push
jg
lahf
jmp
popf
ret
jmp
sahf
mov
mov
rcll
imul
adc
les
pop
pop
cmp
sbb
je
orl
mov
mov
xor
jl
rcll
cs
lahf
sbb
sbb
out
cmp
sub
rcrb
int3
push
rolb
es
jae
repz
leave
shrl
fdivs
mov
outsl
push
push
add
into
dec
ss
out
push
outsl
sarb
mov
jg
jecxz
rcrl
jge
push
or
test
xchg
dec
cmp
mov
aas
addl
ror
sbb
xchg
pop
hlt
and
xorl
stos
add
mov
mov
mov
inc
adc
cs
out
ret
loope
fs
or
xlat
xlat
pop
test
shrb
ret
popa
xchg
inc
pop
xchg
daa
pop
stos
lcall
lea
xlat
insl
cli
jmp
xchg
adc
inc
xorb
push
dec
lahf
jecxz
aaa
xor
insb
fsubrs
nop
cld
pop
or
mov
inc
sbb
mov
enter
add
sbb
outsl
leave
shl
inc
adc
xor
ret
stc
adc
int
jmp
mov
stos
pop
cmp
mov
pop
jl
movsl
shr
push
adcl
in
rcll
mov
aas
pop
add
push
lock
bound
inc
add
xlat
vhsubps
loopne
addr16
xlat
fnstenv
dec
out
xchg
lret
and
jae
xor
jecxz
mov
mov
push
xchg
stos
aad
lods
sahf
xor
in
jp
mov
movsb
imul
lcall
loopne
mov
hlt
mov
and
into
out
popa
test
and
addr16
adc
add
das
fstl
cmp
popa
aad
mov
pop
dec
je
loopne
call
insb
inc
or
dec
outsl
mov
jl
mov
inc
cmp
out
cmpsb
xchg
fsubs
cmpsl
mov
inc
ja
pop
or
or
sbb
outsb
jge
cltd
adc
jne
and
lcall
hlt
or
in
in
mov
mov
adc
pop
cmp
xlat
jmp
insl
aas
jecxz
push
pop
movsl
cmc
mov
cld
xorl
cmp
out
dec
push
in
ror
cli
mov
fbstp
xchg
mov
insl
adc
dec
sbb
jns
jo
int3
mov
jle
lock
push
dec
int3
jne
push
mov
inc
cwtl
test
push
je
adc
aaa
pop
fstpl
pop
rol
testb
add
xchg
push
push
or
add
sarl
int
fnstsw
sub
cltd
sbb
cmp
pop
mov
and
add
xchg
bound
mov
sbb
out
arpl
mov
rorb
push
aas
mov
dec
or
inc
add
ret
pop
push
xchg
sub
sti
add
jecxz
test
insb
fstl
ja
ret
fmull
inc
daa
int
int3
hlt
movsl
xlat
mov
mov
sub
sub
cmc
popa
repnz
inc
add
mov
add
adc
add
xor
push
push
jnp
xchg
mov
enter
push
cs
sbb
add
inc
and
adc
fists
arpl
push
inc
fadd
mov
aas
cmp
xchg
fwait
adc
mov
and
popa
js
mov
idivl
mov
lahf
subl
adc
inc
lahf
ljmp
mov
mov
xlat
mov
jns
cs
jnp
fisttps
dec
orl
xchg
lret
dec
sub
icebp
rolb
pop
mov
cwtl
out
je
add
dec
out
repnz
mov
pop
rcrl
xchg
lods
adc
sbb
repnz
es
int
cmp
inc
adc
xor
add
adc
loopne
inc
test
loop
push
mov
sbb
outsb
mov
sbb
jbe
loop
xor
test
out
sbb
test
rcl
fisubrl
imul
mov
pop
xchg
arpl
inc
aad
sbb
or
ds
dec
insl
dec
fdivrs
sbb
popa
fcomps
mov
mov
add
into
xchg
cltd
inc
adc
fistl
bound
ret
push
pop
cmp
ja
repnz
data16
je
cli
push
push
or
or
inc
mov
daa
pop
mov
stos
mov
sbb
inc
sbb
lret
arpl
mov
jne
jp
add
addr16
clc
fdivrs
mov
stos
add
repz
sbb
movsl
lcall
jbe
push
add
mov
in
sbb
shlb
sbb
pop
add
and
or
fstps
insb
pop
test
mov
push
imul
pop
lds
icebp
dec
sahf
sub
jnp
fs
adc
mov
aad
and
shlb
pop
js
data16
roll
dec
jb
add
or
fidivs
cmp
pop
cmp
std
push
inc
mov
fisubs
jae
aam
pop
inc
rol
out
in
aad
pop
insl
jae
xor
lock
sbb
into
adc
lea
add
sahf
mov
icebp
test
cmp
push
dec
inc
adc
sub
inc
scas
imul
pop
std
enter
sbb
inc
sbb
sbb
test
mov
jb
or
outsl
es
cmpsb
scas
pop
xchg
out
icebp
or
push
daa
sub
or
popf
mov
test
add
add
mov
mov
mov
shll
mov
jle
pop
xchg
inc
jno
push
movsl
mov
stos
push
adc
jmp
outsl
loop
daa
xor
pop
dec
lea
loop
adc
jmp
fdivrs
movsb
push
outsl
mov
dec
mov
mov
stos
fsubrl
aaa
add
sbb
adc
fwait
push
das
pop
add
sbb
cmpsl
push
pop
inc
push
xor
lock
fidivrl
fadd
int
jp
lods
lea
mov
push
and
jecxz
jmp
sbb
push
jb
stos
pushf
popf
dec
push
lahf
xor
aas
mov
pop
mov
outsb
and
cli
jnp
mov
popf
cmp
pop
pushf
push
sub
cmp
out
fnstenv
shl
push
fdivrs
aaa
mov
mov
in
xchg
stc
push
push
sbb
divb
and
inc
ret
inc
divl
sbb
pop
shrl
les
mov
in
add
pop
sub
imul
mov
xchg
sub
js
cltd
mov
inc
ljmp
add
xchg
leave
jg
xchg
imul
cmp
mov
mov
push
fcomps
xchg
sbb
adc
dec
in
add
pop
jnp
sub
loop
loop
gs
dec
jbe
into
push
jp
xlat
mov
dec
pop
aas
mov
add
out
pop
jl
mov
cs
sub
adc
aas
inc
inc
mov
jne
jnp
cld
loopne
mov
mov
add
insb
jecxz
push
inc
push
test
cmp
pop
jmp
push
out
fnstenv
leave
inc
lcall
sahf
sub
hlt
mov
adc
les
mov
jnp
lea
jno
data16
sbb
jb
stos
outsb
in
pushf
mov
aas
cli
push
in
sbb
roll
xor
shrb
inc
jne
xchg
out
adc
fdivp
mov
pop
sbbl
adc
bound
repz
call
in
cld
pop
pusha
inc
jg
jmp
stos
sbb
clc
inc
xlat
out
test
scas
pusha
xchg
nop
xor
push
lret
ret
call
int3
xor
dec
fs
fiadds
dec
int3
repz
das
mov
sbb
mov
fidivs
mov
add
jae
or
xor
fists
outsl
mov
sbb
out
negl
fistps
and
popl
aaa
adc
jecxz
loope
dec
inc
cmp
ret
cmp
cmp
and
sub
xor
aas
movsb
lret
mov
int3
decl
inc
scas
fimull
jbe
test
ja
pop
inc
mov
inc
das
jmp
xor
mov
insl
mov
popf
fcmovne
inc
jne
popl
mov
aad
das
xor
add
add
movb
inc
mov
fcmovbe
repz
mov
lea
repz
inc
inc
mov
cld
mov
or
int3
mov
aad
pop
and
mov
jle
jnp
sbb
push
xor
orb
jp
cmp
pop
fwait
sbb
mov
dec
xchg
push
add
imull
xor
leave
mov
lea
mov
bound
inc
notl
xchg
stos
mov
outsl
cmp
push
fnsave
data16
sub
push
dec
clc
sbb
xchg
jne
mov
mov
inc
mov
shll
lock
mov
mov
cmp
cwtl
pop
xor
sub
enter
lret
fs
mov
sub
ds
psubsb
sbb
sub
inc
inc
sub
sbb
xor
mov
mov
dec
mov
sub
mov
inc
push
iret
es
ss
inc
jns
imul
and
mov
lea
sbb
sub
and
sbbb
out
push
ret
addl
dec
push
js
jmp
mov
adc
aam
push
pop
jo
cwtl
xchg
test
xchg
inc
outsb
xlat
add
xchg
ret
jge
lret
addr16
xchg
popa
int
push
test
in
int3
xor
test
push
jno
add
push
inc
insl
icebp
cld
stos
push
push
sub
bound
cmc
add
das
popa
mov
and
fst
popf
out
xor
push
add
iret
pop
mov
and
sub
mov
jnp
int3
popa
and
stc
popa
iret
dec
sbb
xchg
jns
sub
mov
jg
insw
cmpsb
call
cmp
enter
or
mov
xor
stc
dec
mov
mov
push
rclb
movsb
jno
xchg
js
aas
fwait
dec
dec
mov
jns
xor
mov
push
cmp
mov
stos
aam
insl
lret
push
pop
or
xchg
push
push
and
pop
imul
push
dec
mov
test
pop
mov
cmp
mov
fwait
sahf
xchg
xchg
mov
cmp
adc
cmpsb
inc
dec
mov
sub
jmp
aas
aaa
aad
stos
add
xor
cmp
or
jge
iret
xchg
push
mov
mov
pop
jae
inc
push
mov
outsl
mov
mov
fists
rcll
mov
inc
xchg
in
jl
sti
xchg
shll
mov
jae
test
insb
mov
add
or
jle
test
fnstsw
xchg
add
and
cs
xchg
pop
and
repnz
test
inc
loope
inc
mov
clc
mov
fnsave
jae
jmp
xchg
scas
aaa
mov
xor
notb
orb
movsl
push
cmp
insb
or
jbe
stc
or
mov
enter
dec
mov
int3
fbstp
sub
pop
imul
sub
xchg
mov
mov
js
lret
sub
ret
and
inc
dec
push
dec
pusha
xchg
addr16
jbe
mov
inc
fnstsw
pop
stos
sar
or
add
cmp
sub
xchg
out
test
jecxz
and
sbb
pop
push
push
rcrb
or
mov
pop
sub
int
pop
pop
aam
hlt
cmpsb
jg
mov
and
mov
fldt
int
jecxz
jne
arpl
aad
mov
cmp
ficoml
hlt
ja
jmp
jge
das
loop
fst
adc
dec
xchg
push
out
ljmp
outsl
xchg
ret
aaa
imul
mov
ret
mov
cmp
in
mov
jmp
aas
iret
shlb
pop
pop
or
xchg
push
fimuls
cmpl
sbb
test
lds
sub
xor
pop
out
jo
xlat
aaa
jne
out
movb
addr16
mov
sub
test
xchg
mov
daa
movsl
fiaddl
dec
out
fwait
mov
mov
scas
and
in
in
mov
addb
pop
cmp
xchg
xchg
sbb
icebp
lahf
mov
mov
or
flds
in
lcall
out
push
and
mov
or
pop
xchg
or
dec
xchg
fisubrs
sbb
jns
mov
jl
leave
cmpsb
xchg
xchg
mov
lcall
sub
pop
mov
std
cmp
icebp
and
lcall
sub
int3
mov
mov
inc
test
aad
cmp
xchg
push
je
movsl
notb
daa
jle
dec
scas
outsl
add
adc
jo
inc
stos
adc
pop
fsubr
mov
int
lcall
xchg
bound
jg
mov
mov
fcomps
cltd
mov
mov
out
adc
xchg
cltd
sbb
sub
pop
and
and
dec
rorb
or
movsl
faddp
pop
or
aas
push
dec
push
jns
mov
fdivrl
mov
sbb
imul
iret
leave
adc
push
ja
jg
cmp
pushf
mov
or
into
xor
vpunpcklqdq
sub
ss
popf
mov
test
ljmp
arpl
loopne
mov
jno
loope
xor
std
push
xor
mov
nop
fldenv
xor
sub
and
dec
and
push
jae
ds
arpl
mov
addl
cmp
enter
mov
stc
fisubl
aad
lock
and
xor
xor
mov
dec
lea
mov
mov
aas
adcl
popf
repnz
xchg
cmpsl
or
inc
jmp
jns
pop
neg
mov
xor
mov
cmp
cmp
mov
in
xchg
ret
push
mov
arpl
mov
sahf
xchg
in
jo
mov
xchg
and
sub
std
fisttps
mov
inc
pop
mov
or
in
jo
push
cld
pop
nop
dec
jnp
sbb
mov
cmp
xchg
stos
mov
ds
fisubrl
jno
sub
lods
scas
adc
dec
test
and
xchg
nop
loope
adc
fistpll
insl
mov
das
jb
add
push
mov
adc
push
rclb
out
mov
pushf
push
mov
loop
sbb
cmp
xor
or
or
add
pop
jmp
es
or
mov
inc
cmp
and
in
push
push
arpl
in
push
lock
mov
dec
lcall
lret
adc
mov
adc
sub
dec
aam
aam
clc
xchg
cmp
call
cltd
das
jecxz
pushl
mov
add
mov
jnp
stos
cwtl
jbe
cmp
aad
cmpsl
mov
and
mov
jp
test
call
ds
push
jbe
push
or
jge
stc
mov
sbb
in
icebp
scas
push
cli
adc
orl
nop
xor
push
xchg
mov
adc
pop
push
xor
mov
bound
sub
rcrb
xchg
repz
popf
jge
loope
into
and
adc
xor
or
cmp
lods
leave
loope
outsb
jl
iret
add
or
shll
or
popf
int3
sbb
nop
mov
and
dec
xor
mov
sub
adc
pop
outsl
scas
jae
lods
ret
sar
or
mov
add
cmp
cmpsb
stos
cli
sarb
cmp
cmpsb
ja
test
sub
aaa
pop
sbb
jle
xchg
push
lcall
mov
inc
push
inc
xchg
xor
add
ret
or
imul
sub
aad
arpl
lret
push
mov
push
lahf
pop
pop
rorl
enter
pop
mov
int3
mov
push
in
sub
lret
xadd
aas
cs
pop
pop
movsl
pop
push
cmp
mov
jns
enter
pop
divb
lock
jae
es
cmp
icebp
jmp
repz
mov
dec
push
jl
cmp
sti
xchg
jl
js
hlt
insl
xchg
xchg
inc
negl
jae
and
or
pop
mov
sub
inc
mov
mov
mov
es
enter
adc
dec
aad
stos
sarl
out
push
push
xchg
adc
jp
data16
mov
add
xor
or
aas
cmc
adc
jmp
in
and
pop
test
rol
gs
push
jp
outsl
div
stos
inc
inc
lods
repnz
in
es
jp
xor
push
dec
mov
movsl
adc
xchg
jbe
dec
into
pushf
mov
push
sbb
loopne
pop
mov
ljmp
fs
shrb
push
or
inc
movb
add
mov
sub
xchg
cmpsl
test
popf
jo
xor
xor
fwait
jge
call
stos
dec
in
movsl
int3
cmp
andl
mov
mov
out
shl
stos
pushl
jle
add
movsb
daa
fwait
dec
adc
mov
mov
push
and
icebp
aas
push
or
xorb
fbstp
ljmp
sub
notb
pop
std
fldcw
cmp
mov
std
stc
push
jecxz
xlat
adc
push
inc
dec
mov
cmp
push
dec
mov
jnp
out
add
in
std
je
nop
xchg
xchg
insl
repz
xchg
aad
lods
inc
popf
adc
stos
xor
mov
lods
xchg
push
popf
icebp
xor
adc
adc
mov
das
iret
lock
lock
cmp
cmp
jmpw
or
mov
rorl
inc
lock
hlt
dec
inc
test
sub
push
push
push
lock
and
pop
dec
clc
divl
imul
mov
sbb
clc
aas
mov
repnz
sbb
cltd
fiadds
sbb
clc
sub
rorb
sahf
cmc
mov
stos
xchg
xor
ficompl
loopne
mov
xchg
push
jne
test
dec
sar
inc
mov
shlb
gs
inc
jae
inc
loopne
loopne
and
and
push
sub
sbb
in
xchg
sub
fldl
nop
lea
loop
pushf
aaa
and
call
inc
subl
jb
stos
mov
stos
inc
pop
inc
inc
push
push
cltd
dec
push
jne
fwait
xchg
popf
pop
adc
lahf
jo
push
jle
jl
cmpsl
mov
mov
cmp
adc
outsl
jge
adc
pop
daa
xchg
cwtl
jne
int3
mov
mov
push
loope
mov
mov
pop
sub
test
imul
leave
pop
mov
repnz
dec
xor
push
dec
sub
jae
ds
jbe
mov
add
or
les
ret
mov
mulps
jle
dec
sub
mov
push
add
cmp
xchg
dec
pushf
and
add
lcall
cltd
sbb
add
addr16
int
aas
sti
fisttpl
xchg
iret
mov
adc
test
ja
xchg
xor
ret
mov
mov
dec
mov
and
inc
add
lret
jns
cwtl
cs
out
jmp
xor
fdivl
ret
shl
movsl
xor
inc
jbe
imul
out
sbb
enter
push
inc
push
dec
sbb
mul
arpl
fldcw
frstor
popf
pop
iret
mov
cmpsb
inc
sub
lock
adc
sti
xchg
icebp
imul
lahf
add
inc
adc
aam
arpl
adc
ret
fcoms
jnp
mov
xor
jl
rorb
outsl
cmpsl
outsl
inc
pusha
dec
pusha
hlt
cmp
pop
xchg
test
and
cld
pusha
rcrb
push
test
negl
insl
cmpsb
es
xchg
dec
push
push
cmp
or
clc
push
jmp
int3
push
pop
inc
hlt
add
cwtl
sub
xchg
lock
push
shlb
fxch
scas
cmpb
in
cmpsl
dec
outsb
mov
or
adc
jnp
rcr
sub
cmpsb
mov
dec
adc
cwtl
sbb
xchg
mov
jne
dec
cmpxchg
xchg
and
in
test
xlat
je
inc
xor
imul
and
sbb
add
adc
xchg
mov
dec
sarl
iret
pop
data16
mov
cwtl
orb
ret
mov
xchg
fcmovu
loop
mov
outsb
mov
sub
sbb
push
in
sarb
nop
sub
ret
std
mov
sub
addr16
cmpsb
mov
rolb
jecxz
mov
xchg
pop
outsb
cmpsb
pusha
xor
inc
mov
xchg
daa
insb
icebp
add
lods
and
jp
insl
adc
aaa
push
cli
add
push
pop
ret
pushf
test
jge
adc
add
pop
or
push
jnp
xchg
scas
in
push
enter
lcall
cmp
sub
cmp
pop
and
xchg
testb
add
js
rorl
ja
sbb
jle
out
cmp
outsb
aas
dec
mov
jae
pop
mov
mov
push
cld
mov
fcomps
iret
adc
mov
jl
lret
mov
cmpsb
cmp
mov
inc
mov
push
and
es
pop
jno
int3
push
stos
inc
jns
pop
sbb
pop
repnz
mov
push
xlat
pop
sahf
insb
sarb
push
inc
inc
xor
mov
pop
dec
xor
es
xor
imul
pop
add
icebp
mov
std
add
push
sbb
rcrl
adc
sbb
cltd
arpl
push
mov
aad
xchg
lret
or
inc
xchg
std
aad
fiaddl
nop
mov
sbb
pop
mov
cmp
stc
add
xchg
or
lcall
stos
divb
cmp
xlat
addr16
lret
incl
sub
inc
sar
fmull
aad
pop
fstpl
pushf
jne
call
push
push
mov
and
in
imull
aaa
push
mov
pop
insb
inc
mov
pusha
xor
pop
mov
pop
pop
in
scas
leave
cmpsl
pop
les
pop
fidivrs
and
mov
jle
jbe
ja
inc
lods
fisubs
aaa
or
pop
jb
lods
imul
mov
mov
and
push
testb
mov
dec
sbb
dec
lock
mov
jp
xorl
mov
sbb
loopne
xchg
sbb
lds
dec
xchg
mov
adc
in
jle
xchg
and
push
pop
pop
sub
sbb
mov
adc
cmp
push
inc
repnz
mov
cwtl
and
popa
jo
dec
jae
ret
dec
repz
inc
aas
or
in
decb
dec
jp
jg
xor
xchg
pop
xor
cltd
jno
push
dec
pop
add
std
push
pop
icebp
out
fldl
fwait
cld
dec
mov
in
rol
outsl
call
mov
stc
fisubs
xchg
into
les
rcrl
cltd
out
mov
mov
add
mov
loope
je
and
icebp
es
addr16
cmp
sbb
add
adc
insb
fucomp
mov
jo
mov
and
jl
sub
inc
add
xchg
popf
test
jbe
push
or
js
or
jnp
fmuls
add
and
lret
mov
jl
jl
jnp
test
inc
bound
jmp
mov
sub
cmp
cli
xchg
mov
jg
lahf
add
lahf
xchg
add
in
and
fdivrl
fcmovnu
and
push
push
mov
pop
lea
push
out
jp
dec
pop
scas
test
js
mov
push
inc
inc
shll
xchg
xor
sub
loope
xchg
mov
mov
aaa
push
test
add
stc
dec
sbb
jge
cltd
jb
xor
lock
cltd
xorl
add
orb
jp
xlat
push
or
in
xorb
push
cwtl
jne
jns
add
inc
mov
and
xchg
adc
fsubl
stc
sbb
or
push
stos
gs
popa
pushf
in
sub
sbb
jecxz
jg
pop
lcall
lds
mov
movsb
orb
aad
fadds
jmp
xchg
push
mov
test
and
pop
js
fmulp
sub
fsubl
sbb
test
mov
pop
push
movsb
jo
cmp
xchg
jno
mov
push
repz
shlb
or
mov
retw
scas
sbb
addr16
adc
ja
sub
push
xchg
jl
mov
addr16
mov
call
or
or
popa
cld
repnz
add
mov
xchg
popa
mov
aaa
std
xchg
xchg
mov
jp
cmpsb
adc
cmp
stos
stos
xchg
mov
adc
xchg
xchg
dec
sub
pop
cwtl
jno
inc
lret
inc
pop
and
sub
xor
xchg
adc
push
inc
jb
pop
sbb
xchg
cmc
fs
pop
test
push
cmp
mov
push
mov
jecxz
repnz
xor
mov
mov
dec
xchg
cmp
xchg
mov
imul
pop
js
ja
rcll
sbb
and
pushf
stos
in
cmp
add
std
stos
pop
fcomip
push
adc
aad
inc
jb
int3
xor
cmc
sti
sbb
jl
cwtl
xchg
and
loopne
addb
push
or
pop
jle
test
adc
ja
xchg
and
arpl
xor
in
pop
xchg
jno
or
xor
scas
xchg
fsubrl
fnstsw
out
pop
mov
pusha
cmp
mov
push
scas
xor
outsl
insl
shll
into
mov
out
push
loope
aad
xor
adc
nop
sbb
push
aam
push
push
jne
repnz
js
jg
daa
insl
shrb
int
lcall
dec
fisubl
pop
imul
cld
shll
call
ss
popa
decb
dec
xor
in
and
ret
insb
in
idivb
lods
ja
adc
cli
adc
jbe
lret
mov
lahf
out
inc
or
sub
dec
sbb
push
adc
xlat
lcall
mov
imul
or
cltd
daa
gs
add
lock
aas
loope
andl
and
in
fwait
les
adc
lea
sub
jmp
rcl
inc
insl
psubusw
mov
push
and
dec
mov
mov
int
dec
or
push
xor
dec
aam
adc
mov
insb
or
sub
bound
pop
add
push
rorl
outsl
xorl
inc
rcr
sbb
les
addb
pushf
push
dec
scas
mov
xorb
xor
cmp
loop
xchg
ret
push
xchg
sbb
inc
test
loop
insl
lret
fimull
gs
in
out
fiadds
not
and
fimuls
xor
out
xor
xchg
in
inc
es
sub
dec
fbstp
sub
add
movsb
gs
ud2
and
sar
int3
dec
je
push
mov
mov
lret
mov
jns
out
lods
xchg
loopne
loope
jns
jge
xchg
daa
mov
lret
mov
push
or
xor
stos
movsb
mov
in
sti
imul
aad
jmp
jbe
xchg
rcrb
repz
flds
jns
outsb
add
daa
fwait
dec
pusha
nop
inc
dec
xchg
hlt
jbe
sbb
dec
mov
mov
movsb
ss
inc
daa
movsl
inc
mov
mov
dec
add
push
mov
in
sbb
sbb
js
int3
jns
es
ja
call
rolb
bnd
cli
in
loopne
rolb
jno
pop
mov
xor
pop
fmull
add
pop
pop
dec
aam
jbe
daa
ret
push
stos
in
adc
sbb
xchg
insb
int3
movsb
jae
xor
xchg
mov
xchg
pop
pop
adc
mov
insb
mov
pop
jns
leave
inc
push
xchg
mov
lock
dec
cwtl
jne
add
cmpsb
mov
out
xchg
cld
cmpsl
and
xchg
jns
fdivl
mov
loope
leave
inc
inc
fnsave
testl
adc
mov
push
cmp
lock
sub
jns
dec
movsb
adc
jbe
fnstenv
frstpm(287
cmp
fwait
cli
lods
imul
adcb
jmp
loop
fwait
in
shll
notb
nop
mov
push
cmpsb
lock
lret
push
cmp
and
fistpl
lock
test
pushf
test
cmp
fdivrs
movsb
sub
stos
loop
lea
fbstp
fisttps
mov
sahf
jg
xchg
and
aam
sbb
and
push
pushf
shll
cmp
xor
or
enter
cmp
fldenv
or
mov
add
movsl
push
and
mov
jne
outsb
in
mov
mov
addb
mov
cmp
fsts
jmp
stos
pop
add
mov
inc
adc
jnp
cmp
sbb
js
mov
shl
sbb
roll
lahf
in
xchg
adc
fsub
aas
xchg
jle
repnz
lahf
jns
mov
and
mov
inc
dec
push
rcrb
push
lds
push
xchg
jmp
ja
cli
shl
jecxz
ljmp
ror
add
test
lret
in
idiv
mov
daa
push
cmp
pushf
rcll
test
jmp
nop
lods
cmp
mov
inc
mov
pop
ljmp
gs
pop
cwtl
add
insb
ljmp
sub
clc
test
mov
call
fstps
jp
nop
enter
call
adc
xor
pop
iret
or
add
cvtdq2ps
lods
out
push
jb
mov
faddl
xor
pop
dec
outsb
mov
xchg
cmp
fcom
mov
sub
lods
mov
sbb
pop
popf
movsb
sub
cmp
cmc
cmpsl
push
pusha
sub
cmpsl
shrb
test
rclb
in
push
in
imul
ret
insl
pushf
pusha
cwtl
popa
sbb
mov
stos
aam
add
sub
call
mov
data16
or
and
mov
sub
cmc
cld
leave
pop
cmp
mov
push
mov
mov
jmp
lret
sbb
dec
cs
loope
out
dec
test
cld
shlb
test
add
xorb
addr16
mov
shlb
lcall
notb
das
mov
pop
cmp
pop
enter
ficoms
in
jmp
shl
jbe
orb
inc
inc
jg
into
push
cltd
hlt
sbb
mov
scas
fsincos
test
jo
mov
icebp
imul
push
mov
clc
pop
sbb
hlt
mov
cmp
mov
adc
jecxz
add
stc
jns
into
dec
and
lock
xor
cmp
inc
mov
lret
int3
shr
sbb
clc
je
and
cs
pop
push
out
stos
jnp
cmpsl
jg
fs
sbb
insl
cwtl
push
push
push
into
lods
inc
jnp
mov
stos
scas
inc
xor
stos
or
fstl
ja
ss
shl
jae
xor
jle
test
pop
sbb
inc
adc
fidivl
test
dec
loope
out
sbb
jb
gs
xor
xor
mov
inc
popf
iret
aaa
mov
ds
jg
mov
and
xor
mov
pushf
mov
call
lea
inc
xchg
or
rclb
mov
test
cs
sti
and
subb
push
leave
add
stos
lcall
outsl
in
in
mov
sbb
scas
addr16
lret
add
xchg
mov
addr16
mov
mov
mov
imul
sub
arpl
mov
xor
mov
adc
loop
lea
lcall
in
and
jmp
or
and
sbb
ret
xchg
fimull
sbb
fcmovne
push
xor
adc
sbb
daa
mov
dec
adc
push
push
mov
call
xchg
ret
jg
xchg
cmc
add
fdivrp
or
cmp
ss
mov
adc
push
leave
outsb
inc
xor
or
xor
pop
std
lods
dec
repnz
lock
pop
aas
pop
jge
push
idivl
stos
ret
lods
and
xor
jae
mov
rcrb
sarl
cmpsb
gs
cmpsb
xor
fidivrl
mov
and
cmp
mov
fldcw
inc
adc
dec
fdivrl
mov
into
out
cwtl
sbb
scas
sub
sbb
outsl
ret
fbld
jmp
mov
cld
mov
push
push
inc
xchg
push
mov
les
inc
lret
ret
dec
lret
mov
sub
push
xor
call
jl
aad
jne
pop
sbb
mov
neg
jmp
xchg
mov
cmp
fldt
mov
adc
loopne
push
ficoml
fwait
pushf
mov
stos
je
out
sbb
icebp
insb
dec
jge
or
or
ficoms
adc
mov
std
cld
push
add
pop
push
pop
and
mov
shl
sub
js
push
and
xchg
or
mov
insb
jp
mov
jnp
mov
ret
aaa
ret
js
fcomi
adc
jmp
loopne
lahf
cltd
rclb
mov
jae
lret
fstl
dec
mov
outsb
andl
loop
add
pop
shlb
mov
mov
ljmp
leave
inc
mov
popl
fcmovu
push
bound
adc
dec
insl
sbbb
fdivrs
or
pop
mov
push
inc
mov
cmpsb
jmp
movsb
pop
or
dec
js
pop
adc
jecxz
and
sub
pop
push
cmp
int
inc
and
push
cmp
or
nop
in
or
inc
mov
in
mov
and
andb
push
push
es
out
ret
push
adc
mov
jns
or
or
sub
mov
sub
adc
iret
pop
push
test
repnz
jo
lods
popa
jbe
and
test
cmp
mov
sbb
lahf
iret
nop
or
jecxz
sbb
insb
mov
aad
jp
push
adc
out
imul
lds
ss
repz
pop
repz
loopne
mov
pop
stc
popa
loope
and
or
int3
jo
inc
pop
push
cmp
pop
aas
or
xor
les
nop
jp
lock
std
push
js
insb
jb
pop
jg
fistpl
push
dec
lods
call
xchg
stc
adc
mov
in
jbe
xchg
rolb
inc
fidivrl
inc
push
mov
aam
add
in
pop
out
in
push
ljmp
test
hlt
push
mov
xchg
and
jmp
push
and
dec
push
push
and
cmpsb
add
icebp
push
or
inc
fsubrl
mov
imull
adc
jp
test
cmp
subb
pop
mov
push
cmpsl
dec
push
sbb
lret
and
push
je
add
mov
fists
xor
push
mov
out
sti
cltd
mov
xor
sbbl
sub
xchg
push
add
icebp
add
mov
mov
or
cmp
imul
or
adc
cwtl
sub
ss
les
stc
jnp
push
int3
jge
pop
ds
sub
cltd
and
es
push
aas
test
adc
cmp
movsb
push
mov
out
lods
sahf
mov
testb
jp
call
ss
es
icebp
fsubr
fs
aad
rcll
stos
sbb
sub
movl
ljmp
js
push
loopne
pop
inc
or
jo
mov
dec
jl
jle
xor
jbe
ljmp
pop
mov
in
push
xor
jmp
test
xor
out
sub
imul
jbe
outsl
popf
sbb
push
pop
fisttps
xchg
add
ja
push
xor
mov
cs
dec
sbb
sub
addb
cmp
push
lock
pop
jb
je
add
mov
les
dec
add
cmp
lods
dec
leave
pop
leave
cld
mov
add
xor
or
pop
insl
push
and
xor
clc
jne
in
jno
popf
js
and
sub
mov
pop
jb
or
test
jo
lds
inc
idivb
pop
sti
es
jb
loopne
mov
sbbb
add
repz
jne
inc
out
sbb
add
xor
push
pusha
add
push
xor
in
lods
mov
sbb
pusha
push
mov
inc
in
jl
push
mov
dec
aad
jb
jmp
inc
les
flds
mov
or
fwait
sbb
stos
or
mov
inc
inc
xor
inc
dec
xchg
fcompl
push
jge
add
pop
sub
xorb
add
pop
rcrl
jl
lea
mov
movsb
adc
jne
mov
or
rorb
pop
jno
fstpt
aam
sub
pop
mov
sbb
scas
orb
scas
je
add
dec
jno
mov
mov
mov
test
inc
out
or
add
push
ja
in
lea
movsl
and
fmuls
fisubrl
xor
mov
push
inc
movsl
stc
push
jbe
inc
mov
xchg
loope
das
jle
sbb
mov
std
adc
or
push
mov
jne
pop
mov
int
mov
adc
xchg
and
int3
insb
add
push
xor
inc
iret
pop
add
pop
adc
cld
dec
mov
sbb
sbb
xlat
ffree
xchg
inc
cmpsl
inc
mov
cltd
f2xm1
pop
mov
dec
cmp
xor
dec
mov
sub
sbb
loope
jg
xchg
lahf
adc
movsl
sahf
mov
mov
in
out
mov
mov
out
iret
cmpsl
test
call
xlat
pop
ror
jmp
add
data16
and
jo
popa
xor
fstpl
inc
lods
scas
in
dec
inc
es
adc
rcrl
add
fldcw
mov
mov
pop
inc
mov
sbb
adc
dec
jmp
aas
sbb
jp
fdivrs
mov
hlt
adc
inc
mov
dec
sub
push
out
cmpl
cmp
cmp
fs
inc
insb
fcmovnb
lods
mov
lods
lcall
jns
shrl
gs
lret
xchg
loope
jno
xlat
inc
xchg
cmpsl
push
jmp
insb
pushf
pop
mov
pushf
je
iret
sahf
jg
call
mov
js
mov
adc
xchg
insl
movsl
or
pop
mov
mov
mov
lds
mov
mov
push
xor
mov
mov
loope
scas
inc
sbb
xor
ds
push
mov
and
mov
and
sahf
xchg
or
sbb
xor
jle
mov
scas
xchg
add
and
es
jae
outsb
push
fnstcw
cmp
ljmp
inc
fistpll
push
push
push
pop
les
inc
lods
sbb
or
cmp
adc
mov
popf
add
je
fs
movsb
dec
jmp
cli
or
aaa
lret
in
arpl
fdivrl
mov
popa
sarb
out
inc
pop
hlt
jecxz
sbb
jle
cwtl
call
cmpsb
inc
jp
and
dec
push
fwait
call
roll
pop
mov
jmp
mov
loop
push
xor
lea
fisubrs
inc
push
push
pop
orb
xor
sbb
sub
in
mov
mov
push
sti
or
ds
inc
sahf
cs
test
pop
fisttpll
cmp
and
loopne
pop
test
or
clc
shlb
mov
jae
xchg
mov
insb
jno
lret
cmp
pop
testb
inc
testb
ss
adc
sub
xchg
cmp
nop
xchg
fsubs
xlat
int3
push
fbstp
mov
mov
lock
xchg
leave
and
pop
daa
nop
push
repz
add
jno
mov
sarb
jo
cmp
movsl
in
add
imul
popf
dec
movsb
jo
mov
scas
ja
imul
shlb
sub
sahf
inc
jno
push
or
or
xor
mov
mov
shll
dec
pop
jno
inc
andb
mov
push
fdivrl
and
ds
lret
push
adc
mov
mov
test
xor
jp
adc
aas
outsb
lea
hlt
fs
mov
jp
push
sti
add
push
out
xor
and
mov
int
psubw
mov
add
std
imul
gs
addr16
jne
push
ret
fsubrl
adc
sbb
inc
rcrb
leave
in
and
scas
aam
movsl
dec
cmp
xor
flds
stos
mov
sar
leave
pop
cmp
cmc
inc
sub
mov
sub
push
mov
test
add
pop
call
mov
int
push
jb
enter
push
and
dec
out
jbe
push
cmpsl
add
sahf
aas
arpl
jbe
out
dec
addr16
inc
or
bnd
jae
insb
jo
mov
dec
scas
sub
rclb
and
daa
hlt
dec
movsl
cmp
sub
push
mov
sbb
push
es
push
leave
pusha
xchg
popa
in
imul
subl
sbb
imul
sub
popf
cltd
mov
xor
jns
aad
xchg
pop
cmpl
pop
jnp
popf
sub
lds
aas
jae
in
lods
loopne
push
push
jl
dec
icebp
shll
push
stos
arpl
testl
cld
sbb
mov
and
push
jae
and
and
xlat
aas
leave
in
jne
in
mov
xor
mov
mov
pop
mov
rol
cmp
cmp
out
add
ss
cmp
jmp
sahf
mov
cmc
xchg
dec
ja
mov
push
sbb
and
shr
pop
push
ljmp
pop
lret
jns
enter
test
jle
inc
pop
mov
mov
cmp
mov
push
mov
mov
push
xchg
push
sbb
add
dec
mov
lret
es
mov
mov
lds
testl
mov
repz
in
dec
inc
enter
cs
lahf
xor
lea
repz
stos
cmp
pop
test
or
mov
mov
cmp
and
and
es
mov
pop
cwtl
arpl
imulb
cs
inc
lret
dec
aad
pop
fstps
sbb
mov
icebp
push
fs
adc
ret
add
and
pop
and
bound
fs
scas
loope
jo
push
ds
jns
arpl
push
jns
xchg
sub
bound
popa
mov
jmp
push
cmpsb
cli
mov
aad
aam
std
push
mov
push
pminub
jle
push
jno
enter
inc
jae
xchg
jnp
cltd
jl
loopne
lods
mov
cmpsb
mov
shrb
jne
and
gs
daa
popa
test
sub
orl
fistpl
outsb
sbb
mov
cmpsl
je
push
push
jnp
pop
xor
das
js
adc
jle
out
call
dec
xchg
lods
pop
push
repnz
lock
jp
mov
das
jo
arpl
in
push
divb
mov
js
rcll
jp
fistl
iret
js
pop
adc
bound
fwait
lret
ja
cmp
sbb
mov
add
pop
jo
mov
sti
xchg
inc
mov
push
push
xlat
adc
pop
pop
in
adc
inc
js
and
mov
pop
fs
aas
mov
pop
push
mov
mov
xchg
outsb
push
dec
lds
pop
leave
jns
addr16
xchg
adc
push
cs
adc
ret
pop
out
cmpsl
jo
mov
cmc
xor
sub
pop
jns
aam
roll
gs
mov
into
loope
xor
cltd
or
sub
push
aas
mov
dec
insl
enter
imul
lods
insl
mov
repnz
jl
mov
shlb
mov
imul
arpl
popf
repz
adc
js
add
push
pop
adc
mov
movsb
mov
xor
stc
subl
sahf
jns
mov
lcall
dec
mov
fadds
mov
clc
movsb
inc
mov
cmp
das
out
xchg
ucomiss
sub
test
das
cmp
mov
popl
or
jmp
sub
cmc
call
in
popa
hlt
push
dec
fimuls
fldl
fbld
cmpsl
in
pop
insl
mov
dec
fwait
or
fsts
pusha
out
push
nop
imul
stc
adc
clc
popa
mov
sub
test
jo
fiadds
mov
ret
sbb
pop
loopne
jecxz
or
xchg
bound
jg
sub
xor
out
add
aas
int
in
jne
in
add
aaa
push
mov
cmpsb
xchg
clc
sub
insb
rcll
ljmp
mov
mov
dec
adc
cmp
aam
pushf
cmc
or
sub
ret
into
stc
dec
pop
sub
xor
out
stos
push
lret
push
cmpsb
xor
aaa
sub
xchg
das
pop
stos
push
cmpsl
mov
mov
mov
shll
movsl
fwait
dec
sub
sub
fwait
ret
aam
clc
pop
mov
push
sub
movsl
jge
cmp
xchg
and
mov
push
adc
adc
dec
xchg
cwtl
cwtl
jecxz
into
aas
stos
adc
cmc
jle
mov
sar
out
cmp
adc
sub
in
mov
cmp
mov
ljmp
sub
in
jbe
mov
outsl
leave
fsubl
ud0
insl
pop
xchg
mov
mov
push
insl
jne
xor
ret
push
pop
sub
lcall
pop
sub
xlat
stos
sti
ds
insb
jecxz
js
insl
jo
add
xchg
sbb
imul
in
lock
sti
mov
fsin
cmp
jmp
out
add
test
cwtl
pop
jno
and
dec
test
and
pop
push
mov
inc
cmp
lea
stos
xchg
inc
adc
idivb
jp
inc
lock
insb
add
test
insl
fidivl
xchg
lcall
inc
je
aad
adc
xchg
outsb
inc
sarb
loop
cmpsb
ret
sti
inc
and
sbb
hlt
xor
insl
pop
pop
lret
cmp
stos
aam
dec
jae
aam
fsubr
out
lahf
ret
push
xchg
nop
hlt
or
push
sbb
mov
mov
jecxz
aas
add
popf
lds
test
xor
sahf
repz
or
mov
mov
movsl
dec
arpl
inc
popw
or
ja
movsl
push
sbb
push
mov
notb
roll
leave
or
sub
push
outsb
sbb
and
popf
fwait
cmp
pop
orl
and
push
je
jecxz
mov
imul
jnp
cmp
mov
mov
pop
rcrb
and
in
add
pop
inc
mov
lret
or
push
inc
cvtdq2ps
jbe
sub
push
xchg
lret
divb
and
cltd
std
sbb
dec
mov
sub
and
mov
clc
clc
xor
mov
lods
out
mov
push
enter
or
jo
cmpsb
test
or
call
cmp
cmp
push
neg
pop
orl
pop
add
andb
dec
movsl
pushf
cmp
mov
jl
cmp
ror
stos
stc
lds
and
in
xchg
xchg
dec
or
sarl
inc
arpl
push
pop
lds
mov
lret
xor
outsl
andl
stos
adc
pushf
aaa
mov
xacquire
js
or
rolb
mov
inc
inc
pop
loopne
xchg
into
mov
in
push
shlb
cld
shrl
sbb
hlt
lret
and
out
xchg
mul
xchg
addl
repnz
mov
mov
pusha
pop
xor
outsb
push
dec
cmc
jle
and
sub
jb
aam
mov
test
adc
cmpsl
xor
gs
adc
and
push
push
pop
pop
and
fs
xlat
shld
daa
add
test
pop
jo
sbb
sti
pop
sbb
pop
and
cltd
cmpsb
fs
sub
insl
cmp
repnz
mov
adc
adc
mov
aad
add
jmp
dec
push
ds
fs
popa
xor
adc
fisubrl
fs
pop
xchg
shl
xchg
mov
fcomps
in
xor
sbb
mov
lock
int3
aas
sti
cmp
push
push
jbe,pn
jae
sub
push
inc
loop
xchg
pop
push
lods
jecxz
loopne
cmp
cmp
cmpb
sbb
dec
sbb
in
lods
dec
jo
sub
inc
pop
sbb
repz
push
jbe
sub
cmpsb
jg
sub
cmp
mov
arpl
push
mov
in
mov
add
cmp
add
mov
inc
push
and
fisubrs
pop
xchg
push
pop
or
add
mov
xchg
xor
push
in
jae
mov
mov
jo
data16
jo
sahf
aad
iret
cs
imulb
imul
loop
js
test
xchg
fldl
cwtl
hlt
cmp
push
mov
jns
jge
xchg
inc
stc
lahf
adc
sbb
aas
lret
xor
sbb
xor
loop
shlb
jo
cmc
xor
and
das
jne
out
jmp
mov
cmpsb
adc
push
add
int3
ret
pop
repz
or
fwait
js
sbb
dec
adc
and
iret
jnp
mov
aas
fstl
sbb
adc
ja
sarb
jo
imul
out
jge
mov
push
lahf
enter
push
cltd
inc
xor
es
bound
or
add
pop
mov
cmp
insl
scas
out
inc
mov
aas
inc
pusha
xchg
stos
imul
mov
nop
xchg
leave
popf
sbb
pop
mov
imul
add
movl
rcr
push
inc
insb
pusha
in
bnd
inc
xor
scas
xchg
ljmp
popf
jg
push
push
xchg
out
sub
mov
xor
sub
mov
out
add
test
sub
pop
in
mov
stos
push
inc
dec
mov
xor
mov
push
iret
sub
adc
push
stos
dec
cltd
add
mov
loopne
out
and
pop
scas
ss
clc
dec
faddl
syscall
jo
push
adc
andl
push
loope
aaa
ja
push
sti
fwait
ret
xchg
insl
ret
mov
insb
pusha
mov
adc
dec
test
and
adcl
sbb
adc
mov
inc
push
lahf
lret
and
add
pop
mov
adc
push
bound
je
xchg
inc
xchg
lret
std
cmp
sub
sbb
notb
dec
popl
xchg
push
xchg
jl
dec
push
or
mov
ret
xor
loopne
dec
adc
les
push
mov
movsb
xor
jg
inc
arpl
aam
es
notb
lods
fs
gs
adc
stos
inc
jae
add
out
shll
cmpsl
or
and
mov
fimuls
loope
mov
inc
mov
lea
xchg
push
jmp
pop
and
and
or
mov
xor
scas
push
push
andb
pop
xor
xchg
pop
inc
je
xor
enter
inc
test
dec
mov
stc
mov
cwtl
xor
jno
adc
mov
push
push
pop
call
or
xor
adc
pop
sbb
jge
shrl
aad
pop
inc
dec
jecxz
movsl
jbe
loop
in
mov
inc
cwtl
sbb
cmpsl
daa
cmp
call
mov
mov
cmp
sbb
pushf
push
cmp
dec
cmp
xchg
add
inc
or
cmp
mov
add
push
sbb
sub
and
testl
mov
test
pushf
cmp
ljmp
sbb
dec
lods
int
aaa
pop
push
mov
fmull
xor
movzwl
popa
sbb
cmpsl
xor
leave
fwait
popa
mov
xchg
or
xor
imul
rcll
lret
pushf
sbb
push
sahf
iret
xchg
ret
jge
call
test
xchg
push
jae
and
jmp
lds
or
push
mov
inc
mov
and
sub
or
arpl
add
loope
lods
adc
dec
flds
mov
mov
jnp
lret
lahf
mull
shlb
and
stos
add
aad
push
mov
or
jecxz
push
xchg
inc
std
ja
adc
inc
scas
xorl
fists
sub
lret
or
mov
pushf
xchg
aam
adc
loope
sbb
jbe
adc
push
push
in
adc
xchg
enter
inc
je
sub
xor
sbb
std
and
rorb
js
sub
bound
mov
and
movsb
insl
andl
std
mov
popf
push
in
push
shrl
inc
adc
push
int
mov
loopne
push
xlat
scas
cmc
add
clc
test
cmc
fsubrs
mov
addr16
stc
rcrl
pop
jg
hlt
movb
add
clc
mov
mov
lock
rcrb
or
push
xor
jge
fsts
mov
xor
popa
inc
pop
pop
movsl
push
or
mov
call
jno
mov
mulb
hlt
xor
pop
push
xlat
in
inc
and
and
or
rorl
in
adc
ja
or
in
cmp
js
push
pop
mov
xor
xchg
out
sub
outsb
loopne
es
inc
push
xchg
call
pusha
repz
mov
pop
sbb
sub
sarb
sub
mov
pop
sbb
inc
repz
call
push
add
gs
or
mov
ror
hlt
jnp
add
ja
dec
dec
xchg
jns
xlat
push
mov
sbb
adc
rcrl
mov
aas
adc
stos
pusha
int3
inc
mov
popa
pop
fdivrs
fcmovnbe
cltd
and
cli
aad
jmp
mov
cmc
syscall
stos
fdivl
stc
xchg
add
jo
sahf
pop
push
mov
add
imul
add
add
mov
shrb
mov
adc
ror
mov
cmp
or
cld
loopne
mov
pusha
insl
jl
nop
inc
das
inc
sub
lds
mov
popl
out
pushf
in
sub
inc
or
cmpb
jge
mov
jge
jp
ss
mov
and
cs
std
and
jns
push
or
cmc
gs
insb
jge
iret
xor
aaa
xchg
jmp
add
mov
xor
sbb
pop
mov
mov
add
lods
xchg
out
adc
xor
and
mov
nop
lock
adc
pop
jns
jg
push
xchg
bound
sbbl
push
jae
aad
mov
cmc
jmp
mov
test
cmp
pushf
repnz
sub
xor
mov
dec
scas
loop
mov
jne
inc
aas
pop
jns
xor
and
test
cmp
xor
mov
sbb
cmp
jnp
adc
pop
mov
adc
jp
shll
mov
sub
test
gs
add
inc
shrb
sub
pushf
enter
sbb
iret
test
icebp
cmp
fs
rcr
mov
aam
sub
clc
cwtl
or
mov
mov
lods
imul
jae
mov
loopne
enter
mov
int3
push
or
rcl
mov
dec
lahf
sub
jg
push
mov
dec
sbb
dec
jge
mov
push
inc
cmc
jecxz
push
mov
xchg
enter
dec
out
jp
mov
add
sub
es
pop
aad
adc
and
data16
leave
hlt
cmp
ljmp
dec
and
cmpsl
fnstsw
jns
rcl
xor
adc
jmp
fstpl
lods
int
loope
sbb
inc
mov
test
mov
jnp
mulb
xlat
inc
jae
scas
popf
xor
jecxz
test
add
loopne
mov
jge
lods
inc
mov
addr16
dec
ljmp
ljmp
mov
gs
lret
outsl
dec
pop
sub
aaa
and
hlt
xor
add
dec
in
pusha
lcall
iret
jb
xor
jge
jne
xchg
mov
push
cmp
add
in
jle
clc
mov
mov
jae
jb
sub
pop
sahf
mov
cmc
sbb
popa
inc
adc
push
push
lcall
repnz
fiaddl
sbb
jmp
lds
data16
cmp
jecxz
cmpsl
lret
mov
hlt
nop
pushf
sbb
mov
jbe
cmp
test
std
adc
cmp
push
pop
neg
scas
inc
and
xchg
movsl
lret
shr
rolb
test
movb
and
enter
adc
nop
and
push
rcrb
jo
lods
imul
fcmovnbe
into
dec
testb
push
subl
lret
lods
push
jg
aaa
inc
mov
sub
push
leave
in
lods
add
ret
pop
imul
mov
jp
xor
push
inc
cmove
hlt
call
sub
loope
add
aaa
add
mov
sbb
shlb
leave
js
adc
loop
pop
push
pop
and
mov
sub
stos
or
jne
and
jle
loopne,pt
sbb
sahf
dec
sbb
cmp
arpl
mov
sbb
jge
sub
outsb
pop
push
ss
das
push
push
fwait
movsl
xchg
xchg
push
xor
lods
push
cli
fisubl
icebp
inc
pop
cmp
pop
repnz
or
daa
js,pt
aad
add
push
mov
repz
loopne
add
add
ljmp
cli
push
sub
pop
jge
and
add
inc
popa
mov
fldcw
inc
lds
jg
push
jl
leave
into
jns
sbb
or
out
or
ds
xchg
jno
in
aaa
jl
jecxz
pop
jae
mov
imul
pop
add
mov
insl
adc
in
andb
dec
mov
xchg
lcall
scas
push
sub
test
push
sub
mov
jg
dec
repz
dec
or
and
cltd
push
gs
popf
push
popa
lods
lahf
mov
dec
and
inc
sti
xchg
lahf
push
int
or
sub
scas
mov
mov
not
xchg
add
xor
sub
stc
dec
mov
fsubrs
frstor
mov
xor
lcall
cmp
call
and
ret
xor
xchg
mov
test
filds
mov
mov
adc
mov
xor
pop
xchg
mov
insl
jo
sub
fcomi
lret
mov
and
test
movsl
dec
pop
pop
sbb
repnz
shlb
test
mov
nop
popa
adc
push
dec
fisubl
stc
jns
jp
inc
icebp
inc
fs
jo
shlb
ljmp
mov
lods
xlat
dec
sub
jne
and
fstl
xor
loope
jne
sub
nop
add
mov
sub
xorl
fwait
push
dec
adc
hlt
add
in
leave
xor
stos
ja
push
sub
xor
adc
mov
dec
mov
xor
adc
lcall
mov
and
pop
inc
xor
scas
cmc
popf
xorl
pop
out
push
or
add
dec
xor
mov
add
jp
movsb
imul
mov
adc
mov
stos
sub
mov
shrb
arpl
outsl
lcall
imul
stc
and
ja
sub
int3
sub
out
cmp
daa
mov
cltd
push
add
orb
fwait
jecxz
ss
mov
test
mov
sbb
hlt
decl
flds
popa
clc
add
push
test
jmp
xor
lea
push
push
push
cld
xchg
add
out
sbb
push
ficoml
add
add
push
ret
mov
mov
fwait
hlt
mov
dec
cmp
sub
sub
repz
pop
lds
imul
mov
aad
add
pop
xor
fdivp
mov
pop
icebp
data16
dec
xor
sub
out
mov
fidivrl
repnz
inc
mov
stos
hlt
out
mov
mov
cmp
lods
sbb
movsl
push
or
cmp
dec
xor
inc
lret
fildll
pop
push
inc
jno
jae
inc
int
xchg
je
add
mov
insb
mov
out
sub
loopne
outsl
push
mov
dec
pop
adc
int
xorl
xchg
add
mov
jmp
sub
clc
shlb
shl
inc
sub
add
add
mov
mov
subb
popf
and
push
popf
mov
iret
pop
jmp
cmp
mov
adc
daa
dec
adc
aam
int
mov
into
xchg
pop
xchg
xchg
lret
inc
test
or
testl
insb
aad
push
and
in
adc
or
popf
mov
idiv
dec
stos
sub
mov
jle
push
js
pop
pop
xchg
lahf
adc
nop
cmp
lods
icebp
cmpsb
cmp
push
add
in
sbb
push
cmpsb
mov
fucomip
out
daa
or
repnz
xchg
addr16
push
jnp
or
push
or
adc
sti
push
xchg
jmp
adc
lock
mov
or
std
push
cmp
sahf
jmp
jns
lret
push
mov
dec
icebp
dec
mov
imul
test
dec
jno
stos
in
aas
inc
mov
jo
jecxz
ret
jp
and
adc
mov
fsubl
shrl
xlat
les
mov
mov
cmp
out
jo
add
jmp
aam
repz
xor
imul
roll
or
jl
sarb
stos
jo
repz
sar
cli
xchg
loop
jl
inc
xchg
xchg
test
bound
inc
iret
or
adc
sti
roll
cmpsb
fisttps
cld
push
mov
int
jmp
cld
jb
rcr
mov
or
or
adc
sub
cmp
loop
mov
das
sti
dec
cmpb
pushf
push
xor
out
mov
insb
jp
jno
jecxz
ja
jb
mov
adc
pop
sub
mov
les
and
cmp
xchg
mov
sbb
jne
pusha
jbe
out
decb
ds
outsl
push
jo
adc
out
dec
mov
sbb
sub
out
fs
cmp
out
xchg
call
add
adc
andl
or
xor
jmp
push
jle
push
sub
cltd
inc
cmp
hlt
xor
jnp
repnz
call
ja
movsb
mov
pop
in
hlt
aad
shll
cmpsb
lock
jo
out
jp
mov
fwait
xchg
in
add
mov
cmpsl
push
mov
mov
in
scas
push
outsl
add
cltd
push
rorb
mov
imul
movsb
cltd
out
adc
mov
mov
xchg
and
xchg
std
xchg
repnz
in
xlat
loop
add
je
push
outsb
dec
or
mov
cmp
xchg
js
jl
popa
sbbb
call
sub
in
xchg
in
frstor
mov
xchg
pop
out
pop
fnstenv
sub
jmp
sbb
lcall
stos
xor
sub
jno
jg
fmulp
out
mov
fwait
cltd
adc
repnz
jp
cmp
fildll
mov
jo
xlat
mov
jno
adc
push
mov
icebp
pop
sbb
loope
add
jmp
pop
lahf
stc
pushf
dec
mov
or
in
adc
lret
jns
xlat
push
bound
jb
int3
fldt
pop
mov
inc
iret
scas
daa
call
push
mov
lods
fs
lds
sarb
xchg
shll
push
lahf
movl
xchg
cmp
jle
and
cmp
mov
xlat
jl
das
sbb
rolb
xor
mov
notb
jg
fwait
repnz
pop
mov
negb
out
inc
ss
pop
ret
scas
adc
lret
mov
jg
rorl
cmp
lods
lahf
pop
pop
mov
outsb
xchg
mov
xor
fidivs
clc
cli
outsb
add
sbb
aam
in
outsb
out
jg
ficoms
das
rorl
and
xchg
sbb
sub
push
int3
and
rcr
sub
push
movsb
sub
sahf
sar
lods
ss
sti
test
and
dec
inc
data16
lea
mov
ja
cwtl
jnp
push
jmp
jno
sti
cmp
and
stos
or
iret
mov
sbb
inc
jg
pop
push
loope
mov
jl
mov
shl
sub
rclb
repnz
mov
mov
push
jne
or
divps
daa
mov
loope
shlb
add
movsb
or
push
cmp
mov
inc
rorl
dec
daa
dec
mov
cmpsl
icebp
or
rorb
push
imul
ja
nop
fcompl
dec
fstpl
incl
sub
movsl
sub
xchg
dec
ficoms
or
sub
shll
and
shll
or
jno
xor
mov
cli
dec
subl
jmp
adc
stos
pop
xor
adc
cli
add
fldt
sbb
push
mov
push
stos
call
scas
xchg
xor
xor
adc
lea
outsl
pop
lret
stc
inc
jl
add
sub
fwait
sub
into
into
xchg
aas
aas
dec
dec
mov
xor
sahf
lods
shl
cmpsl
dec
dec
fsts
cmp
mov
out
aas
fwait
push
repnz
dec
add
popa
cmpsb
dec
lods
mov
add
stos
or
insl
lahf
movb
adc
lds
sub
push
mov
out
fcmovnbe
ss
xchg
pop
xchg
inc
outsb
data16
sar
jbe
dec
test
add
xchg
inc
push
adc
fisubs
lea
push
out
cmc
dec
jle
out
iret
jle
aam
dec
sbb
pop
roll
into
jno
dec
pop
add
stos
nop
rclb
cwtl
mov
or
pop
inc
mov
sbb
nop
lock
and
mov
cmp
mov
cmpb
push
jmp
rolb
out
lahf
lcall
icebp
mov
inc
or
inc
insl
xor
loope
loopne
xchg
jno
jg
pushf
je
test
andl
mov
push
lock
push
sbb
flds
cmp
pop
cmc
jge
rorl
stos
adc
fistps
lods
xchg
push
add
jno
movsl
je
test
mov
push
scas
jg
fmuls
cmp
imul
in
js
adc
mov
jnp
push
fldenv
and
insb
ss
xchg
data16
mov
hlt
mov
les
insl
mov
daa
xchg
jnp
test
stos
jo
push
xchg
cli
lea
or
and
lret
and
mov
pop
dec
ss
jmp
dec
les
mov
or
or
add
cmpsb
pop
sub
jb
cwtl
mov
sub
pop
adc
mov
jp
adc
inc
xor
stc
nop
cmpl
sub
mov
mov
lret
cli
mov
je
dec
mov
add
pop
xlat
xchg
mov
mov
xchg
jb
sbbb
sbb
dec
jp
mov
mov
cmp
xlat
bound
cmp
add
lcall
mov
adc
xchg
push
inc
jns
dec
pop
pop
stos
jnp
sub
std
sub
std
cmp
jae
adc
dec
je
jmp
adc
aas
dec
sbb
or
out
or
fisttpl
inc
dec
mov
add
xchg
outsl
lds
stos
mov
je
cmp
lea
xor
loope
pop
addl
addr16
repz
cmpsb
mov
arpl
movsl
cmp
inc
sub
fidivs
pop
mov
lock
sub
pop
pushf
mov
ss
daa
imul
cmp
dec
adc
xchg
insb
lahf
mov
dec
sbb
jo
mov
adc
aas
arpl
mov
cmc
psubusw
mov
sub
and
pop
or
dec
xchg
xchg
call
cmpsb
sub
call
in
xor
gs
xchg
es
lret
add
mov
xchg
test
mov
in
xlat
add
mov
cmpsl
fnstsw
jl
cmp
add
and
or
xchg
fiaddl
aam
fstl
and
xchg
aaa
cwtl
frstor
jecxz
mov
add
jge
jmp
dec
adc
in
lahf
pop
mov
mov
out
mov
cmp
aaa
or
xchg
lods
pop
mov
inc
loope
jl
mov
call
roll
pop
lds
mov
fsub
adc
push
and
imul
enter
jo
dec
insl
bound
leave
daa
repnz
inc
jle
or
pushw
int3
in
push
inc
sti
imul
jl
xor
cmp
or
lret
fbstp
and
mov
xchg
cmp
inc
fs
mov
and
push
js
cltd
push
sbb
xchg
lcall
adc
lods
mov
sub
ficoml
movsb
cmc
jle
or
scas
out
or
out
out
and
pop
jecxz
mov
or
xchg
adc
lds
xchg
push
movsb
arpl
adcb
push
inc
outsl
test
mov
je
test
xchg
xchg
mov
addr16
scas
or
mov
stos
mov
je
pop
jg
add
mov
mov
movsb
cmp
ss
mov
cmp
test
ja
std
cs
fcompl
cmp
sbb
in
and
xor
loop
imul
insb
jecxz
jnp
add
push
lock
lock
push
int
adc
mov
lods
xor
push
xchg
fwait
push
mov
jae
data16
mov
xchg
pop
ffreep
sbbb
jg
or
mov
add
iret
enter
pop
enter
lock
or
aad
xchg
and
adc
cld
push
sbb
scas
sahf
notl
sbb
out
adc
xor
out
loopne
lret
inc
cmc
mov
xchg
jl
jne
sub
nop
xchg
cmp
dec
mov
cmp
or
das
adc
mov
mov
xlat
or
sbb
pop
sti
enter
lret
mov
popf
cs
pop
or
jmp
lods
mov
jnp
push
repnz
push
adc
loopne
movsl
xchg
and
dec
cmpsb
xor
int3
xor
cmp
aam
mov
dec
test
lret
dec
pop
les
scas
pop
pushf
adc
push
sbb
sub
or
sbbl
or
push
inc
or
out
adc
pop
ja
ljmp
fimuls
dec
jo
push
mov
dec
ret
jne
bound
add
mov
xchg
shl
and
sbb
dec
lods
mov
imull
or
popa
inc
clc
pushf
rep
andb
inc
notl
xor
lret
xchg
enter
int
sub
mov
cwtl
outsb
popf
sub
or
rol
add
xor
movb
movsb
ret
pop
adc
and
mov
push
idivb
fcmovnb
test
or
mov
or
add
das
xchg
lods
mov
pop
xchg
xchg
andl
cmpsl
pop
int3
es
dec
int3
dec
fldcw
jp
mov
pop
push
mov
je
rcr
out
out
mov
xchg
and
push
lret
cmp
test
sbb
cli
fimuls
lea
pop
inc
aad
dec
jnp
aaa
loope
mov
shlb
ljmp
or
xchg
xchg
addr16
pop
xor
call
push
ds
andb
cltd
leave
arpl
test
sub
setno
hlt
fcoml
cmp
mov
les
xor
push
stos
out
lods
sbb
cli
or
cmp
cmc
iret
sbb
in
sbb
sub
movsb
pop
mov
cmp
mov
loopne
rolb
fisttpll
pusha
icebp
push
or
cs
icebp
push
xor
popa
mov
or
aaa
jae
pop
in
mov
mov
or
xchg
inc
mov
je
dec
shlb
in
shll
xor
mov
cmp
imul
xchg
pop
sbb
enter
adc
test
arpl
addr16
cli
stc
pop
lsl
sbb
fwait
arpl
xchg
ret
leave
or
imul
and
or
xor
jbe
inc
push
jl
cmp
or
adc
xchg
adc
and
xchg
std
fcmovbe
pop
xchg
cmpl
mov
and
sbb
dec
dec
roll
cs
cmp
in
sbb
or
loope
bswap
in
inc
xor
test
push
sbb
dec
lcall
and
add
and
cmove
imul
scas
cmp
sub
push
xchg
mov
pop
xchg
mulb
mov
sbbl
xor
jg
xchg
rcll
aad
movb
insb
or
push
inc
xor
cmpsb
mov
pop
jle
sbb
lds
push
dec
pop
shl
sub
sbb
add
stos
push
filds
shll
inc
test
sbb
add
stc
jo
rcrb
or
adc
lds
neg
xor
mov
mov
sub
gs
xchg
test
lock
cwtl
movsb
sub
test
data16
jp
cmp
mov
cltd
ja
sbb
cmp
or
adc
xchg
push
repnz
xchg
outsl
lret
enter
pushf
aad
mov
lahf
push
test
dec
std
push
xchg
std
not
aam
cmc
repnz
push
and
fcoms
in
orl
sarl
mov
jmp
jl
cmp
fucomi
fisubrs
frstor
rclb
cmpsl
push
sub
jge
ret
ret
lea
push
insl
int
or
dec
mov
sub
roll
or
loop
mov
cwtl
fwait
push
cmp
sbb
push
ret
das
repz
mov
push
in
mov
roll
mov
or
add
nop
push
loopne
sub
je
jg
in
stos
movsb
pop
nop
lock
mov
push
inc
adc
jge
add
ficomps
pop
adc
sbb
cmp
sbb
mov
out
or
jmp
lock
fninit
sub
std
mov
sbb
fisubrs
lds
push
scas
arpl
ljmp
nop
lds
jb
mov
in
dec
lret
mov
sbb
nop
std
pop
mov
xor
lret
xchg
scas
out
push
ljmp
jns
and
jns
cmpsl
add
cltd
push
inc
imul
add
sub
int3
pop
xchg
pop
push
jno
shlb
cmp
add
xor
data16
ja
in
push
and
cld
dec
testl
sub
mov
testl
mov
js
outsl
je
xchg
jecxz
pusha
loopne
adc
sub
sub
jnp
adc
outsl
lock
inc
push
pop
testl
shll
das
stos
or
xchg
or
pop
mov
lret
fcomps
and
cmp
mov
inc
sub
sub
inc
adcl
dec
mov
jb
and
mov
lahf
sub
bnd
inc
cmp
loope
shr
loope
cmp
ret
leave
jns
dec
mov
leave
mov
test
in
fdivrs
mov
push
sbb
cmp
lret
leave
jno
repz
lea
jb
sbb
clc
jb
and
adc
xlat
imul
pop
lea
mov
mov
outsb
xor
xor
lret
adc
or
pop
cld
pop
xor
test
lods
pop
jp
sbb
ja
or
filds
jmp
lock
jbe
xor
add
pop
lea
sahf
mov
rcl
add
std
leave
jl
add
or
adc
movsl
xor
jecxz
sub
lock
mov
dec
repnz
loop
test
sub
or
pop
mov
stos
inc
imul
mov
pop
popf
cmp
jg
cmp
and
push
xchg
push
push
fimull
mov
mov
dec
dec
jb
rcrl
rclb
gs
push
aad
aad
xchg
add
das
jg
sbb
das
das
ljmp
popf
jecxz
push
mov
dec
or
xchg
pushf
jno
insl
rclb
pop
rcll
mov
stos
mov
adc
jo
js
ret
add
sbb
push
lods
popf
loopne
xor
call
ja
ret
jge
xlat
int3
in
fldt
lock
stc
push
mov
sbb
inc
daa
out
filds
add
or
sahf
fwait
das
add
lods
pop
jb
dec
xchg
fwait
test
inc
push
inc
sbb
dec
dec
test
jle
movsl
mov
rcrb
out
popa
movsb
and
pop
aaa
sub
sub
movsb
sub
add
leave
and
outsl
cs
icebp
mov
jge
pop
cmp
daa
pop
jl
lret
add
adc
cwtl
movsb
loop
push
popf
mov
pop
int
pop
andl
enter
shll
add
aaa
test
sub
adc
cmp
inc
xchg
orl
or
outsl
xor
shll
inc
xlat
rorl
dec
mov
lcall
incb
pop
jbe
rcr
lock
push
jle
or
inc
push
push
or
dec
cmp
outsb
popa
push
dec
ds
andl
cld
int3
and
jb
sbb
xchg
ss
pop
aaa
xchg
sub
loopne
addl
shrb
iret
hlt
pusha
in
mov
and
or
jle
xor
mov
adc
xlat
or
cmc
jbe
pop
ret
push
jp
pop
iret
out
cmpsb
push
pcmpeqw
dec
fldcw
jbe
push
cmp
xchg
cmp
jl
cmp
sahf
hlt
push
inc
dec
das
xchg
push
enter
sub
xchg
cli
mov
mov
sbb
sub
lds
push
xchg
xchg
and
push
outsb
mov
sar
hlt
in
mov
fistps
mov
sbb
fnstcw
jbe
sub
push
pop
std
daa
lahf
mov
stos
flds
jae
dec
jle
cwtl
fdivrs
pop
clc
xchg
movsb
add
ds
pop
lcall
jle
lcall
push
push
sbb
and
pop
xor
push
mov
nop
pop
out
lahf
insb
stc
inc
addr16
insb
mov
or
dec
mov
test
lret
xlat
out
inc
mov
xchg
pop
jmp
andl
movsb
jbe
test
inc
push
xchg
iret
jge
cmp
das
or
add
icebp
je
jge
arpl
pop
insl
or
mov
adcb
std
sub
jne
dec
mov
xchg
sahf
mov
jnp
fs
repz
into
imul
ds
cld
jg
or
cmpsb
fildl
cmp
push
xchg
dec
mov
xchg
jnp
rcl
jg
mov
and
in
sbb
call
add
ret
or
neg
ret
add
adc
xor
mov
testb
lret
jo
int
popa
repz
seta
aaa
shll
push
insb
xchg
xchg
pop
mov
dec
xchg
gs
test
pop
sbb
add
cmp
jo
jb
in
out
xlat
mov
mov
adcb
dec
mov
adcl
push
cli
cmp
xor
mov
es
mov
movsb
fwait
push
mov
in
push
add
insb
and
xchg
pop
xchg
xchg
jae,pn
inc
cmp
paddusw
inc
fs
dec
je
and
cmp
outsb
bound
jp
add
xchg
sbb
cmp
mov
cmp
outsb
sti
bound
xlat
or
add
mov
add
add
adc
clc
cmp
inc
pushf
push
adc
out
ds
dec
sub
pop
mov
popf
xor
nop
movsb
mov
xchg
inc
out
clc
add
xor
xor
add
pop
ret
xchg
or
sbb
add
xchg
jp
and
sub
pusha
fadd
mov
add
add
pop
jne
fwait
lret
out
jne
jp
pop
imull
testb
mov
notb
outsb
loopne
lcall
scas
jmp
repnz
dec
mov
in
daa
into
cmpsl
ret
push
clc
pop
sub
push
and
or
inc
push
les
stos
xchg
aaa
inc
xchg
adc
int3
pop
or
pop
xchg
pop
mov
mov
jle
fsubrl
rorb
dec
mov
insb
iret
test
aaa
cwtl
ja
in
in
xchg
mov
mov
cmp
cwtl
xchg
inc
sbb
jo
shrl
data16
rolb
mov
aad
clc
loop
decl
xchg
test
pslld
xchg
pop
mov
pop
and
adc
imul
out
mov
iret
outsb
mov
xor
sbb
pop
mov
test
out
cmp
loop
insl
push
xchg
sub
and
lods
push
in
stos
dec
push
loopne
mov
mov
test
or
and
cmp
out
push
or
mov
stc
jne
push
sub
or
nop
inc
jecxz
sti
out
rcl
lcall
arpl
and
loopne
jns
mov
mov
add
fs
hlt
imul
pushf
adc
adcb
lea
mov
xchg
pop
jge
xchg
fisubrl
fsubs
jo
cmp
mov
mov
dec
sbbb
insl
dec
aam
mov
in
notl
sub
test
add
sub
mov
mov
and
mov
xorl
out
sbb
sbb
arpl
cmp
or
in
hlt
mov
cmp
jno
push
push
imul
sub
add
nop
mov
aam
ljmp
jge
mov
int
cmp
insb
outsb
rolb
add
or
lret
std
push
adc
into
jns
jg
lds
call
nop
aad
roll
push
cmp
add
bound
jl
jg
xor
xor
push
popa
xor
in
or
mov
imul
inc
xchg
xor
hlt
cltd
stc
jmp
xchg
inc
mov
popf
mov
mov
rolb
stos
add
mov
les
mov
mov
xchg
lds
mov
add
fs
and
inc
sub
adc
cmp
cmp
cli
jp
and
adc
mov
in
add
pusha
lods
js
dec
mov
push
ja
mov
notl
pop
les
js
xor
test
cmp
mov
je
in
jp
push
ret
fstp
fs
dec
pop
xchg
nop
sub
pop
pushf
je
fisubrl
push
sub
xor
adc
or
xchg
es
cwtl
ds
int
cwtl
ss
or
and
aaa
dec
negb
sbb
add
int3
lea
loopne
and
xor
mov
mov
insb
pop
pop
orb
sahf
mov
iret
sbb
mov
loop
push
xchg
lods
ffreep
stos
aas
mov
xchg
xlat
es
fcomps
and
ds
ret
cmc
fwait
loopne
sub
ljmp
sbb
mov
fisubrl
cmpsb
dec
add
lock
push
fisttpl
xchg
pop
mov
mov
js
imul
pop
call
mov
inc
adc
push
shll
inc
cmp
lret
push
stos
mov
or
cmp
or
jne
fsubrl
xchg
repz
into
jp
jnp
test
dec
mov
push
jbe
pop
add
dec
shll
inc
mov
cmp
pop
frstor
add
add
in
xor
mov
mov
in
in
arpl
push
ret
xor
ss
and
stc
cli
sub
pop
inc
imul
xorl
mov
adc
repz
mov
insl
pop
test
sahf
cmp
shl
jge
adcl
sbb
cmpsb
push
ja
dec
movsb
hlt
mov
aad
mov
pop
out
sub
pop
push
cmp
daa
int
or
add
jne
push
xchg
cmpb
add
andb
or
adcl
sarl
inc
inc
popf
daa
cmp
fabs
loopne
mov
fbld
mov
mov
repnz
testl
ljmp
mov
push
jo
sub
adc
push
adc
leave
stos
hlt
or
push
or
or
dec
mov
pop
gs
notl
mov
jg
xchg
pop
push
jmp
aam
lods
outsb
or
rcrl
pop
fwait
jno
xchg
jmp
and
and
or
adc
aam
adc
scas
adc
mov
cltd
and
call
pop
in
sub
jne
data16
xor
adcb
test
sbb
shll
lds
repnz
or
leave
cmp
xlat
fadd
jne
inc
movsb
inc
pop
jb
mov
or
clc
jmp
and
cmp
imul
xor
lret
and
xor
nop
addr16
repnz
scas
lahf
push
lods
popa
inc
pop
lret
cld
clc
dec
inc
mov
call
test
or
push
mov
xor
stc
mov
fdivp
int
push
jnp
xchg
mov
outsl
adc
push
xchg
mov
popf
push
shrb
inc
rcrl
push
push
sub
pusha
dec
stc
orb
in
loope
jae
rcrl
or
mov
xchg
xor
ret
sub
or
fucom
add
mov
jge
jns
cmpb
sbb
pop
cmp
mov
shll
dec
dec
jecxz
cmp
dec
sbb
jns
rcrl
mov
or
rorl
jl
jns
push
inc
xor
scas
dec
inc
xchg
mov
das
sbb
sbb
jecxz
and
fmuls
mov
add
xchg
in
sub
addl
push
jnp
mov
or
es
sbb
pop
push
rcrb
cmpsb
fisubs
xor
daa
push
pop
insb
ret
imul
clc
jae
push
cwtl
loop
cltd
in
jns
inc
fmuls
sbb
xchg
lret
xchg
add
addr16
sbb
gs
mov
test
pop
inc
pushf
movsb
addr16
shrb
lcall
addl
cmc
add
push
movsb
xchg
pop
repz
test
xchg
dec
cmp
xchg
mov
dec
sbb
or
mov
add
clc
push
mov
dec
shrb
ja
or
mov
ds
jge
shl
and
pushf
xchg
lret
dec
lock
aam
in
sub
sbb
sbb
adc
add
andb
push
rolb
das
jecxz
jge
pop
scas
aad
es
pop
add
fwait
cmp
inc
loope
mov
cli
out
rep
add
aam
mov
pop
and
adc
cmp
xchg
inc
pop
cli
mov
sbb
stos
cmpsb
das
loopne
xchg
fcoms
iret
enter
hlt
rclb
jmp
ret
lcall
pop
addr16
pushl
idiv
sub
adc
sbb
add
movsl
ficoms
int
pop
cmp
push
sbb
leave
aad
icebp
hlt
lods
cmp
mov
and
pop
in
test
mov
jecxz
and
neg
pop
notl
jle
pop
mov
pop
stc
lret
call
cmpsl
leave
pop
add
in
pop
dec
dec
lret
and
adc
inc
or
mov
xchg
in
fwait
lods
je
pop
cmp
mov
js
jns
pop
int
mov
les
pop
pop
sub
xor
lea
jg
aaa
jo
aas
dec
and
mov
iret
loop
mov
ds
ljmp
cmp
pop
jl
jp
cmp
jmp
add
fwait
sbb
jnp
mov
ds
pop
mov
sub
ud0
mov
adc
xor
movsl
mov
push
push
push
sbb
push
sbb
pop
cmpsl
daa
pop
lret
pop
dec
lods
inc
dec
insb
arpl
push
adc
lcall
dec
cmp
aaa
lods
pop
push
stos
inc
shlb
cmpsl
mov
pop
scas
ret
jge
sub
cmp
cmp
add
cmpsl
imul
scas
fmull
movsb
pop
faddl
or
inc
xor
push
jo
adc
mov
fldt
jg
mov
int
xor
ss
outsl
cmc
out
lods
push
jp
xor
loope
ljmp
mov
mov
add
sub
mov
xchg
add
sbb
test
inc
xor
and
push
imul
mov
inc
jb
mov
cmp
test
pop
dec
in
cmp
arpl
push
mov
sbb
cmp
mov
sub
ljmp
jo
mov
xchg
xchg
adc
call
inc
lret
sub
push
or
mov
cmp
scas
dec
ja
push
mov
or
mulb
push
lret
mov
cmp
xchg
js
pusha
pop
jle
sahf
fildl
leave
xor
sbb
les
dec
add
fnstsw
imul
cmc
mov
adc
js
push
mov
pop
ret
insb
adc
leave
sub
mov
jp
pushl
push
jg
js
je
add
rorl
je
push
or
pusha
sbb
or
mov
cmp
push
push
fnstsw
sbb
aad
push
adc
push
aaa
lcall
cmpsl
and
into
js
call
xchg
jge
pop
mov
ljmp
mov
or
mov
dec
shll
cmp
or
leave
movsb
xchg
lock
jae
mov
ljmp
sbb
sub
xlat
call
out
mov
mov
movsb
in
inc
stos
jbe
rorl
push
arpl
decb
cmp
nop
shlb
ret
pushf
sbb
out
or
sub
int3
pop
mov
pop
mov
mov
xchg
loope
xchg
insl
add
push
xor
mov
cmovno
jae
dec
call
add
mov
mov
ret
cli
pop
mov
jbe
popf
cmp
enter
push
in
mov
mov
xor
push
mov
jnp
jmp
or
lock
pop
add
sub
sub
in
aaa
mov
stc
jg
adc
mov
movl
xchg
dec
xor
lock
outsb
xor
imul
inc
mov
addr16
push
adc
out
pushf
sarb
lret
out
hlt
sti
sub
inc
dec
xor
sub
out
pop
xlat
aad
dec
push
or
imul
fldenv
pop
imul
gs
mov
inc
push
movsl
push
mov
xchg
xchg
clc
das
pop
mov
push
add
int3
push
jbe
lea
sbb
xchg
insb
out
pop
es
iret
sub
xor
and
shlb
push
mov
mov
in
out
mov
sbb
add
cli
aas
cmp
insb
repnz
mov
pusha
inc
and
pop
cltd
xor
fldcw
jmp
rcl
jnp
push
and
cmc
push
adcb
popa
outsb
push
jns
call
repnz
imul
sbb
fbld
jo
lock
arpl
sbb
xchg
sbb
adc
fisttpll
mov
and
adc
daa
push
jmp
add
jo
or
inc
lahf
mov
repnz
mov
xor
cwtl
jp
in
clc
adc
jns
dec
inc
jmp
les
orl
test
xor
repnz
jbe
pop
lds
lret
xor
sbb
movb
mov
dec
push
fcmovu
mov
add
dec
ficoms
shr
lock
fbstp
push
or
sub
test
fs
and
sbbb
adc
cmp
call
pop
icebp
dec
mov
nop
push
addr16
dec
xchg
mov
pop
movsl
hlt
xorl
ficomps
filds
out
inc
xor
jl
mov
push
das
xchg
sub
cmp
push
fnstenv
add
push
pop
jo
jmp
cmpsl
fcomip
adc
pop
or
cmp
sub
xor
cwtl
das
popf
and
ret
adc
mov
aam
jb
xor
test
lods
xchg
add
lds
sub
mov
scas
cmp
iret
fidivs
sub
xor
inc
je
das
dec
inc
enter
dec
gs
mov
jl
jg
popa
lods
mov
insb
mov
cmp
xchg
push
xchg
sub
or
cmp
fdivrl
sahf
add
shrb
ret
shrl
push
push
xchg
add
xchg
movl
dec
adc
hlt
out
adc
cmp
incl
scas
aad
jnp
cmp
ljmp
sbb
popf
retw
and
aaa
jne
jmp
xlat
pusha
mov
pop
loop
dec
out
cmp
inc
sahf
mov
fstpl
add
mov
mov
sbb
sbb
lcall
loopne
into
in
ret
xor
addr16
add
ret
adc
sub
leave
gs
push
mov
stc
mov
lret
popa
jp
dec
xchg
mov
lods
loopne
jle
sub
repnz
jle
xlat
xor
sub
fsubp
mov
inc
xor
rclb
cmp
mov
mov
scas
adc
cmp
cmp
inc
ret
loopne,pn
pop
je
mov
lock
jnp
nop
test
bound
dec
xor
or
out
lret
subl
gs
loop
int
sti
out
fildl
or
lahf
clc
mov
mov
rorb
stos
outsb
cmc
cwtl
dec
jnp
rclb
shrb
ss
sub
shll
mov
dec
js
xor
sub
rcll
push
fisubrs
xlat
or
mov
bnd
mov
mov
jno
jmp
push
test
test
cmp
or
fdivs
mov
mov
xchg
test
aad
ss
jle
shrl
inc
sbb
fcmovu
xlat
mov
out
dec
sahf
call
sbb
mov
jno
mov
push
ret
mov
pop
push
aad
pop
rcll
cmpsl
xor
gs
cmp
mov
pop
fstps
inc
repnz
call
cmp
pop
fnstcw
pushf
ljmp
stos
fs
imulb
push
jp
cwtl
mov
mov
fdivrs
lods
int
xor
shrd
jae
lds
stos
mov
ljmp
cmp
fwait
xchg
icebp
movsb
adc
jecxz
cmpsl
adc
xchg
jle
dec
adc
pop
out
ljmp
test
and
lods
movsl
push
int3
subl
je
enter
call
dec
cmc
call
lock
aas
cs
fsub
xlat
or
lock
inc
cmp
inc
enter
test
mov
cld
inc
xchg
fcmovbe
cld
xor
fisttpl
xor
aas
divl
pop
pop
scas
into
lcall
mov
cmp
cmpsl
and
and
shl
xchg
adc
cltd
sbb
dec
push
add
jb
fldenv
stc
or
cmpsl
cmp
inc
repz
mov
rcrl
add
nop
cmc
add
pushf
or
push
xchg
test
sbb
jns
sbb
inc
push
out
in
fbstp
test
jle
imul
jb
aad
sbb
call
pop
sub
dec
lds
pop
aas
inc
mov
cmp
jecxz
std
cmp
fldl
or
push
inc
and
push
stc
mov
xchg
xchg
jne
add
mov
movsb
daa
cmp
push
cmp
inc
imul
repnz
lcall
dec
fucomi
pop
mov
lcall
cld
ret
arpl
in
cli
sbb
sub
mov
push
fsubs
xchg
inc
jns
ret
cli
lock
pop
push
aad
mov
adc
mov
std
cli
or
pop
mov
jge
lahf
lods
dec
loopne
sbb
bound
pop
icebp
mov
push
adcl
out
mov
mov
leave
push
add
rorl
xor
js
lcall
lcall
mov
jnp
sbb
sub
cmp
imul
outsb
push
xchg
cmp
das
aad
lock
ret
mov
add
pop
std
inc
push
out
xchg
ret
xchg
cmc
lea
push
mov
movsb
iretw
jg
push
adc
int3
stc
cli
push
icebp
push
dec
add
scas
xchg
pop
repz
sub
pop
in
adc
dec
push
addl
jns
movsl
cltd
imul
aas
xor
in
add
movsl
push
dec
sbb
cmp
pusha
xchg
js
out
outsb
push
leave
mov
or
adc
movsl
jg
xchg
out
cs
lcall
rcll
dec
or
stos
shll
xchg
push
out
mov
les
out
add
sbb
cli
cli
movsb
loopne
out
das
lret
or
cmpsl
popa
pop
fimuls
fmull
dec
pop
sub
inc
dec
hlt
jmp
adc
xchg
test
mov
push
jnp
scas
mov
dec
push
dec
hlt
fbstp
ret
pop
add
out
or
mov
and
xlat
xor
sub
es
scas
push
mov
pop
cs
pop
and
aas
call
adc
xchg
aam
ds
adc
pop
fsubl
dec
hlt
dec
or
or
imul
ret
push
shrl
pop
rcl
or
call
mov
push
dec
pop
pop
in
repnz
fisubrs
xchg
push
sbb
mov
mov
inc
jb
jns
inc
inc
pusha
jmp
pop
fsubrp
test
int
aam
dec
js
cmc
aad
mov
nop
lret
pop
mov
ret
push
int3
sbb
rcrl
lret
es
mov
add
loop
add
cmp
les
mov
ss
mov
daa
xchg
jecxz
add
xchg
pop
jnp
pop
cwtl
out
cltd
movb
je
add
mov
xchg
sarl
adc
lcall
jno
dec
repz
bnd
push
mov
add
stos
mov
fisubs
out
scas
mov
stc
lods
sbb
sbb
sbb
imul
cmp
dec
inc
xor
call
cmp
mov
sbbb
popf
fimuls
mov
mov
cmpsl
mov
jmp
jge
jp
jg
test
cmp
adc
mov
xor
ljmp
pop
negb
push
xchg
lds
xchg
jb
push
imul
iret
pop
pextrw
imul
pop
cmpsl
jl
jns
xchg
cmp
fstl
fs
int3
mov
clc
mov
mov
mov
dec
inc
cmp
call
cmp
xor
ret
cmpsl
pop
lcall
mov
cmp
inc
xor
enter
adc
lods
inc
pop
xchg
xchg
push
adc
or
jae
ss
mov
pop
out
mov
arpl
out
es
imulb
sbb
mov
insl
cltd
xor
push
sahf
loop
movsl
int3
lds
and
or
inc
jae
push
mov
outsl
or
orb
and
jmp
mov
cltd
xchg
imul
out
mov
push
xor
push
pop
pop
addr16
idivb
test
mov
sub
push
dec
push
lret
cmp
lods
popa
jmp
out
inc
xchg
sbb
pop
push
and
cwtl
out
mov
movsl
adc
aas
aas
jp
and
sub
or
into
cmp
jp
xor
push
out
mov
fisttps
ja
lahf
push
fsubs
push
shrl
dec
push
xchg
push
mov
pop
dec
sub
das
int
call
push
jne
cwtl
les
cmpsl
jne
sarb
and
lret
popa
loopne
movsl
sub
cmp
push
stos
jle
insb
cmp
mov
enter
pop
iret
test
cli
jp
test
jns
xchg
xor
dec
pop
icebp
cmp
inc
push
stos
pop
imul
dec
push
mov
rcll
es
cmpsl
stc
push
mov
inc
or
out
jmp
mov
adc
pop
xchg
nop
mov
jge
xchg
out
ljmp
jo
and
mov
push
out
popf
push
fsave
lock
mov
aad
xchg
push
xchg
enter
push
test
sbb
jl
mov
cld
sti
mov
fistpl
add
xor
fst
cmp
pop
enter
test
mov
mov
xor
pop
mov
or
repz
cmpsb
mov
shlb
test
adc
je
imul
mov
sub
jb
and
dec
or
imul
hlt
or
std
aaa
repz
fimull
mov
jne
cmp
pop
fsubrp
je
pushf
imul
xchg
jns
mov
pop
jmp
insb
sub
ret
sub
or
into
sub
lahf
lcall
jecxz
ret
leave
scas
sub
pop
mov
out
jle
jge
push
push
mov
pop
iret
dec
push
repnz
inc
imul
jne
mov
inc
lcall
mov
and
stc
dec
xor
lds
mov
xchg
inc
pop
ret
jge
xor
cmp
mov
or
inc
imul
xchg
and
icebp
test
push
mov
lcall
out
mov
jecxz
dec
enter
adc
inc
iret
push
rorb
xchg
mov
cmp
add
push
adc
into
adc
push
outsl
ret
and
sbb
cmpsl
xchg
enter
push
or
fnstsw
mov
inc
pop
fs
xchg
adc
int
call
mov
out
sbb
jns
sub
movsb
and
mov
jge
imul
push
ss
push
lds
push
clc
cmp
xchg
add
cmc
sahf
in
jmp
sbbl
mov
sub
xlat
out
pop
clc
inc
loop
test
mov
xchg
ret
push
outsl
push
bnd
push
xchg
into
clc
mov
mov
and
sbb
hlt
sbb
xchg
xchg
push
fcompl
cmp
pop
and
stc
cmp
sub
pushf
add
and
shlb
mov
int3
js
mov
icebp
les
add
cmpsl
ja
add
in
repz
in
sub
addr16
sub
fildll
add
add
jo
dec
lahf
in
stc
mov
lret
jne
xchg
mov
mov
and
xor
inc
roll
pop
shll
bnd
sbb
and
call
xor
and
xchg
jge
in
stos
call
sub
mov
jne
pop
shrl
or
push
clc
sub
test
je
xor
hlt
push
cltd
pop
push
sub
adc
ss
js
lds
and
in
add
insl
cmp
inc
push
pop
inc
cmpsl
insb
js
and
and
mov
push
mov
cli
jne
pop
aaa
jle
ljmp
out
std
cltd
fisubl
clc
jmp
aam
dec
cmc
sarl
mov
sbb
mov
roll
mov
outsb
shrb
or
cltd
fsubr
adc
cmp
notl
das
orl
shll
lock
shrl
mov
and
jle
or
decb
ljmp
xchg
pop
icebp
and
push
mov
push
sbb
pop
mov
js
jecxz
push
fsubl
ret
xchg
cli
in
adc
pop
in
shlb
adc
pop
aam
popf
add
and
xchg
and
inc
je
mov
ds
mov
pop
rolb
loope
mov
popa
pop
gs
outsl
mov
xchg
mov
add
addr16
jae
pusha
int3
and
pop
loop
jmp
lea
cmp
mov
mov
bound
nop
jecxz
mov
mov
mov
sub
mov
mov
or
mov
aad
insb
pushf
sub
fldenv
jae
push
push
test
xchg
lods
sub
in
push
dec
jg
mov
lahf
adc
push
xchg
test
das
ret
mov
rolb
sub
mov
sub
cmpsl
in
and
shlb
adc
loop
lahf
lahf
jno
dec
pop
in
minps
jmp
inc
push
jns
rcl
mov
aam
mov
les
std
mov
fs
call
lock
push
mov
dec
mov
rclb
mov
cmp
and
inc
lds
push
ret
and
icebp
gs
push
mov
mov
inc
push
aaa
shll
or
mov
stos
lret
xor
or
popa
and
test
pop
or
iret
ja
insl
ret
sbb
jo
push
lock
xor
or
repz
push
into
cmpsb
push
dec
loop
dec
mov
push
hlt
pop
je
aad
cltd
das
subb
in
push
add
into
pop
outsb
addb
inc
rcll
sbb
mov
push
lock
pop
rcl
pop
jge
cs
adc
dec
outsl
push
repnz
lahf
ds
inc
cltd
dec
jne
cmpsb
dec
jnp
xor
clc
xchg
ljmp
dec
dec
push
cmpsl
imul
bound
jno
and
test
ja
bound
dec
aas
orl
xchg
xchg
mov
jbe
mov
aaa
cld
jne
dec
sbb
dec
mov
dec
mov
mov
xchg
xchg
or
mov
mov
sbb
out
xor
cwtl
sub
sti
xchg
push
lock
aaa
dec
push
xor
cs
mov
mov
xchg
sbb
dec
or
or
scas
inc
mov
cmpsl
jb
jae
test
ja
and
sbb
xlat
repnz
push
dec
or
xorb
mov
ret
sub
stos
ss
popf
popa
out
cmc
addr16
nop
jae
mov
test
jbe
push
orb
lahf
cmpsl
adc
and
outsb
jg
in
xchg
ja
and
pop
jp
insl
insl
call
xchg
imul
mov
xor
jl
or
adc
dec
iret
les
lods
loop
mov
faddl
jecxz
xchg
mov
stos
imul
out
xchg
mov
inc
jo
arpl
sbb
rcrb
fidivl
call
sbb
jnp
cmpsl
xor
lods
push
add
add
cmp
pop
mov
mov
mov
sub
mov
xchg
testl
and
mov
sub
mov
jl
adc
push
cmpsb
mov
pusha
push
fdivr
ds
adc
notb
subl
adc
mov
lea
mov
push
test
mov
imul
fidivs
bound
push
and
mov
mov
push
jnp
mov
mov
push
cwtl
pop
pop
inc
popa
loop
inc
dec
cmc
inc
cmp
shrb
fst
pop
mov
pop
mov
int
adc
sub
dec
mov
or
and
dec
jns
int
cwtl
push
push
into
inc
xor
add
fistpll
movsl
test
mov
pop
sbb
retw
sub
jae
stos
mov
push
mov
inc
push
add
cltd
cmp
mull
out
and
mov
jl
mov
cmp
bound
das
sub
push
loopne
rcr
adc
cmp
add
push
cmc
subl
or
xchg
cltd
xchg
push
jmp
jmp
outsl
out
gs
push
adc
jp
pop
enter
mov
sub
mov
push
jmp
inc
ljmp
scas
or
inc
push
movsl
adc
insb
nop
sbb
iret
or
sbb
mov
out
push
mov
cli
pop
ds
sub
add
push
stos
sahf
xor
addr16
mov
mov
test
cld
sbb
inc
and
pushf
in
push
shl
jo
clc
pop
nop
insb
push
xor
push
sbb
add
clc
sbb
fwait
mov
clc
mov
add
fsubrs
inc
and
and
xchg
cmp
jmp
pusha
mov
std
arpl
mov
mov
jne
insb
or
pushf
sub
loope
sub
cmp
cmpsl
cmp
jae
bound
jle
arpl
leave
fwait
lds
shrl
lock
test
faddl
ss
lods
pushf
xchg
adc
mov
xchg
ret
or
dec
rorb
daa
stc
les
jno
inc
cs
mov
mov
test
jl
cmp
test
cli
and
sub
pop
xchg
jno
int
jae
jnp
fmull
outsl
push
sti
xchg
ret
int3
mov
add
jne
iret
in
out
cmp
shll
push
sti
mov
mov
and
aam
shl
push
arpl
and
jecxz
enter
int
push
popf
imul
xchg
rol
movsb
lock
cmp
or
inc
adc
jl
mov
pusha
cwtl
and
push
pop
jns
xchg
iret
xor
loopne
outsb
test
es
pop
mov
xor
push
and
jecxz
inc
xor
inc
test
push
mov
enter
cli
sub
cmp
enter
sub
push
insb
mov
dec
not
mov
add
push
inc
outsb
test
jle
jne
add
dec
cmc
inc
sub
dec
mov
inc
lods
arpl
pop
nop
icebp
inc
daa
push
xchg
push
mov
push
mov
xchg
pop
arpl
es
xchg
mov
dec
fs
icebp
mov
cmp
scas
mov
lret
arpl
dec
stc
mov
and
outsl
or
aad
shlb
out
cmc
sahf
cltd
mov
dec
sbb
repnz
and
add
sbb
jno
xchg
js
mov
rcll
pop
add
dec
jnp
fldcw
iret
xchg
and
sbb
xchg
pop
jns
test
xchg
xchg
imulb
push
test
xorl
mov
mov
jmp
ss
and
sbbl
xor
add
lcall
sbb
push
adc
dec
sahf
push
mov
dec
dec
ljmp
sbb
sbb
push
pushf
add
jecxz
fsubs
or
pop
rep
mov
pop
rcrl
cld
xlat
std
xchg
stos
cmp
mov
int3
cs
shll
imul
push
jne
mov
stc
lret
mov
loop
push
fucomip
sahf
add
dec
fisttpl
inc
fdivs
pop
lret
or
xor
dec
jae
cmp
jg
fisubs
lret
test
push
rclb
sub
les
lods
inc
xchg
mov
rcr
sbb
adc
lock
inc
insb
sbb
adc
and
mov
cmpsb
xor
mov
xchg
xchg
inc
pop
cmp
rcrb
push
lret
xchg
pop
pop
push
xor
das
pop
jmp
shl
popa
ljmp
imul
test
inc
pushf
jb
js
inc
add
inc
inc
mov
xchg
fwait
shlb
mov
cwtl
mov
and
mov
movsl
add
mov
nop
or
adc
cmp
lahf
ja
inc
add
mov
cmpb
jae
jp
xor
or
and
jle
stc
xor
mov
push
addl
mov
loope
lahf
mov
push
mov
setae
cmpsl
push
in
mov
and
pop
aas
push
repz
testl
sub
test
xor
sbb
sbb
iret
jle
in
jno
mov
xchg
cmp
frstor
faddl
inc
dec
push
pop
andl
jb
pop
inc
cmpsb
pop
push
jns
notb
cmp
jmp
shlb
repnz
mov
jae
inc
dec
or
jp
sub
nop
mov
mov
xlat
test
mov
mov
xchg
leave
xorl
decl
repnz
pop
je
out
xchg
sub
mov
xchg
mov
xor
xor
call
out
mov
pop
into
lods
sbb
mov
xor
xchg
stos
dec
inc
sbb
jb
adc
inc
pop
addps
push
stos
ja
aam
shr
in
mov
add
push
inc
std
insb
adc
pop
adc
sbb
out
shl
add
fmull
popl
sbb
dec
or
sti
or
xchg
and
and
xchg
jge
dec
mov
inc
add
pusha
adc
fisttpl
adcl
std
ds
fisubs
out
mov
pop
pop
adc
pop
fistps
inc
negl
xchg
rol
and
cmc
cmp
mov
xor
andb
push
dec
int
jmp
inc
xchg
aaa
mov
in
call
dec
sub
cltd
cld
std
out
lods
or
sti
mov
rcrl
test
mov
dec
jle
add
stos
stos
mov
adc
inc
add
ljmp
cmp
inc
idiv
insl
push
bound
or
repnz
sbb
lods
insb
inc
pop
in
push
lahf
pop
aad
imul
sbb
popa
cmp
popa
xorl
mov
push
addr16
mov
inc
jecxz
push
cmp
or
cmc
aam
jb
ss
xor
ss
int3
xchg
mov
jbe
or
or
fcompl
cmp
in
loopne
or
sbb
ss
or
test
mov
lcall
pusha
cmp
iret
rorl
mov
lods
xchg
pop
xlat
adc
inc
popa
addl
or
adcb
jne
adc
sarl
xor
push
lods
inc
push
rclb
aaa
dec
jmp
sar
into
inc
xor
cmp
insl
mov
push
mov
jae
mov
pop
jno
vmwrite
stc
test
dec
hlt
stos
fimull
mov
xchg
xor
push
xor
mov
push
xor
rorb
xchg
xor
and
in
popf
cltd
dec
cmpsb
xor
mov
nop
and
lds
sub
enter
add
dec
mov
adc
gs
cmpl
xor
sbb
in
mov
xchg
cmp
mull
test
in
cmp
movsb
jbe
cld
js
cmp
mov
in
insl
push
bound
sbb
inc
dec
mov
xor
cs
mov
loopne
sarb
insl
inc
adc
mov
dec
in
sub
outsl
ss
mov
mov
sbb
push
sbb
push
xor
lahf
enter
sub
in
mov
rorb
cmpsb
fsubs
pop
push
int
push
or
and
test
dec
jge
aaa
repz
fldcw
add
in
roll
jmp
sbb
stos
pop
push
mov
in
mov
sub
pop
and
dec
push
je
pop
xchg
es
aaa
aad
mov
and
jnp
testb
and
dec
mov
lods
xchg
das
shlb
and
push
dec
mov
outsl
dec
cli
jae
jne
or
push
stos
add
aaa
jg
sub
jno
sub
cmpsl
and
repz
fisubs
xchg
cmp
xchg
mov
loopne
lds
cld
sbb
sub
push
pop
arpl
pop
adc
dec
insb
inc
push
mov
shll
jnp
mov
ljmp
xor
jbe
mov
out
loopne
or
aad
ret
stc
cmp
cs
sahf
fwait
mov
lods
pop
lods
sti
dec
inc
xchg
jb
sbb
hlt
fs
push
or
repz
imul
push
and
scas
lea
cmp
sahf
mov
jae
out
out
adc
in
icebp
xchg
sub
sub
movsl
loopne
lahf
lods
mov
xor
mov
mov
adc
jae
push
test
mov
jne
ret
leave
push
inc
lods
repz
mov
into
aad
scas
insb
fnstenv
out
xor
sar
jecxz
lcall
in
adc
and
xchg
pop
or
ljmp
or
add
mov
or
mov
jmp
add
cmp
or
out
adc
fisttpl
insb
adc
adc
ret
mov
pop
xchg
dec
xor
jmp
icebp
lcall
xlat
jmp
mov
or
xlat
int
mov
pop
sub
adc
lcall
out
dec
adc
in
lods
xchg
aad
into
pop
ret
popf
out
sub
jle
imul
adc
outsb
aaa
mov
test
pop
push
outsl
imull
ds
loope
fwait
pop
mov
adc
mov
jle
pop
fmulp
in
icebp
lret
or
int
lock
leave
inc
cmpsb
cmpsl
sub
sbb
xor
sbb
les
mov
or
adc
mov
leave
hlt
into
sbb
out
leave
jge
jp
and
cmp
ds
mov
stc
outsl
mov
dec
adcb
into
js
add
add
mov
and
roll
push
xchg
fs
sub
add
fucom
sbb
movsb
ret
push
pop
pop
addr16
les
sbb
jl
jno
lea
cmc
push
pop
dec
mov
push
push
fists
lahf
xchg
push
out
and
cmp
mov
adc
xchg
fcompl
inc
xchg
sbb
fs
fsubl
xor
or
ret
mov
mov
add
inc
aas
and
mov
jne
cwtl
pop
jne
lock
dec
repnz
stos
ret
push
pop
ja
jmp
inc
jb
jecxz
in
or
std
cwtl
enter
int3
ljmp
imul
clc
in
icebp
rcr
jbe
mov
xchg
mov
and
push
jg
xchg
outsb
in
sarb
pop
arpl
cmpsl
dec
cmc
pop
dec
push
or
lret
scas
pop
ss
mov
lock
addr16
mov
mov
mov
mov
mov
push
scas
fwait
push
fnstenv
mov
cmp
into
stc
insl
sub
cmp
or
test
add
lret
dec
ss
mov
insl
adc
adc
sbb
pop
cmpsb
add
arpl
add
int3
std
bound
or
mov
and
std
loop
imull
xor
mov
int3
xchg
jo
loope,pt
sub
dec
push
cltd
shl
lea
adc
add
push
lods
push
clc
push
lds
cmp
cmp
movsb
xchg
dec
repz
xchg
jne
fwait
ret
xchg
and
in
insb
lret
out
imul
jg
outsb
or
pop
insl
push
negb
sub
sbb
and
mov
outsl
jne
dec
and
out
addr16
jne
jns
aaa
jne
and
push
sbb
dec
scas
jge
fwait
mov
roll
inc
out
call
clc
mov
and
decl
add
mov
jecxz
repz
push
lods
sub
xor
xor
and
ret
push
out
adc
lds
hlt
push
adc
mov
adc
loopne
add
inc
xor
cmp
cli
mov
cltd
call
xchg
movb
aaa
dec
insl
insl
mov
fnstsw
dec
sbb
cwtl
lea
jb
outsl
pop
dec
xchg
in
fnsave
xor
pop
mov
mov
or
lods
push
mov
mov
push
add
loopne
lock
lods
push
add
or
fwait
popf
push
push
stos
and
xor
mov
add
bound
movl
pop
add
int
inc
or
out
js
scas
aas
stos
aaa
add
aam
stc
lock
adc
push
push
push
aaa
or
mov
sub
mov
mov
jp
mov
push
add
std
mov
xchg
stos
add
test
cmpsb
push
dec
iret
jle
ror
cs
jmp
push
mov
ss
cmpb
les
mov
mov
add
jecxz
dec
xchg
xor
outsl
insb
add
int
push
ja
mov
test
jl
jmp
xor
cld
add
add
into
and
into
lahf
fcompl
ret
xchg
jae
jne
aaa
add
sbb
fdivrs
dec
aad
sbb
arpl
rcr
imul
lret
or
stc
stos
pushf
imul
nop
mov
inc
fwait
xchg
inc
push
das
test
data16
aam
jnp
sub
andl
pop
imul
pop
cmp
idivb
dec
popa
sub
inc
xchg
test
aad
pop
and
scas
inc
outsb
xor
jbe
fbld
push
add
cld
or
test
mov
repz
xchg
cli
dec
push
push
xchg
sub
outsl
pop
icebp
push
sub
int3
and
std
imul
push
fiadds
add
mov
mov
pop
mov
jg
movsb
mov
sbb
mov
imul
ja
and
cmp
add
rcl
dec
inc
mov
jecxz
push
in
icebp
in
nop
cltd
aas
ret
in
int
cmc
sub
mov
mov
xchg
push
loopne,pt
jo
inc
lods
xlat
call
cld
jo
insb
loop
jb
sub
mov
ja
jp
jmp
push
scas
jo
pop
and
shrl
std
jbe
sbb
fs
test
add
hlt
insb
cltd
ja
sub
loopne
sarb
cmp
loopne
push
sub
aad
mov
push
xchg
adc
cld
stos
and
push
pop
xchg
pop
sbb
pop
and
shll
ret
rcll
es
rcr
dec
jmp
pop
push
pusha
dec
aam
rcl
sbb
jecxz
jno
je
inc
test
shl
xor
adc
mov
movsb
sbb
sarl
mov
dec
jle
repz
test
andl
pop
shlb
iret
mul
xorl
pop
aad
scas
xor
mov
jns
int3
push
cmpsb
mov
add
mov
jge
lahf
sub
mov
fcomps
sbb
sub
sub
push
adc
sbb
and
add
movsb
arpl
cmp
in
int
mov
aad
cmpsl
and
sarl
pop
xchg
in
push
jo
sub
popl
lret
lahf
std
or
mov
mov
jae
mov
mov
add
and
dec
cmp
js
aas
jg
lret
and
pop
cltd
stos
add
mov
jg
xchg
data16
scas
je
into
hlt
mov
xchg
or
mov
push
jmp
movsb
ds
cltd
and
stos
repz
mov
mov
jno
test
orb
lret
xor
pop
jg
jp
sbb
push
add
add
add
ror
add
ud0
sub
loop
and
das
aam
cmp
scas
pop
push
pop
push
sbb
push
xor
in
sbb
les
xchg
ds
jg
push
repnz
push
push
aad
mov
mov
mov
cltd
jo
hlt
fmuls
fists
push
jle
es
test
ret
sahf
jnp
ret
mov
enter
pop
leave
and
lds
aaa
push
mov
mov
int
add
mov
or
or
sbb
sub
xchg
icebp
scas
sbb
lahf
sbb
xchg
sti
dec
loope
xor
mov
mov
push
or
fs
lcall
or
out
sahf
fists
and
mov
adc
cwtl
mov
inc
cs
push
sbbl
jns
or
sbb
xor
mov
push
cmc
hlt
sub
sub
jp
jnp
arpl
repz
jmp
rcll
cs
pop
xor
and
int
xchg
jp
loop
or
mov
push
dec
iret
outsl
jns
jne
mov
aas
jo
daa
sti
cli
das
pop
add
cmpl
outsl
jp
lods
jns
mov
and
mov
mov
lea
pusha
or
rcll
data16
inc
inc
or
movsb
push
add
mov
repnz
push
xor
push
sti
cmpsb
mov
push
outsb
ljmp
subps
adc
mov
imul
repz
lods
jg
shrl
mov
mov
or
repz
xor
cmp
repz
jo
in
or
scas
int
mov
adc
shrl
push
outsb
pop
sub
outsb
ret
dec
pop
das
in
mov
fistpll
sub
inc
bound
or
cmc
je
adc
in
pop
cli
jp
mov
jae
sub
cmpsb
fimuls
xchg
ret
cmp
pop
jp
add
ljmp
cmpb
imul
loop
call
ds
inc
push
mov
test
ds
push
fidivrs
cmp
outsb
sub
ja
mov
insb
add
xor
sbb
adc
cmc
mov
loope
jmp
fs
call
cmp
fildll
inc
inc
sbb
or
jb
dec
dec
push
jno
jne
sub
cmp
xor
dec
nop
xchg
mov
fcmovnbe
cmp
pop
iret
test
inc
cmp
loope
mov
mov
jp
std
mov
jnp
mov
imul
addb
mov
sbb
aad
lea
pop
pop
sarl
pop
and
in
test
mov
pop
repnz
fisubrs
jl
dec
mov
add
sbb
pop
xor
jecxz
lods
jl
aam
cmpsb
testb
in
shlb
loop
in
imul
mov
adcb
pop
js
pop
jecxz
xor
jbe
insl
jne
mov
lcall
mov
cmp
aaa
or
shlb
push
xchg
jne
out
cmc
int
dec
sahf
and
addr16
and
insb
dec
adc
out
add
lds
jae
pop
sbb
clc
jmp
aaa
sbb
cmp
mov
cmpsl
cmp
cltd
call
add
out
test
dec
leave
cmc
cmpsl
add
stos
insb
daa
jnp
mov
dec
xor
sbb
arpl
stc
adc
jp
or
jmp
out
push
mov
sarb
or
cli
mov
loope
adc
clc
lock
hlt
inc
imul
fcmovnb
cld
jns
cmp
insl
pop
aam
test
mov
push
adc
bound
andnps
dec
js
fs
pop
jge
lods
and
lret
pop
in
addr16
mov
rolb
pop
pop
test
add
out
in
sti
push
aaa
sbb
arpl
xor
hlt
out
or
cmp
pushf
fidivrs
mov
mov
inc
cmpsb
xorl
test
xor
dec
xchg
mov
into
or
add
sbb
or
subl
push
and
pushf
push
hlt
sub
ljmp
imul
cmp
aam
xor
lods
and
sub
jo
aad
cmp
es
add
dec
fnstenv
mov
ret
in
in
js
pusha
aam
mov
dec
dec
and
adc
and
cmpsl
sti
mov
cli
xor
jl
xor
test
and
loope
je,pt
dec
stc
pop
sbb
test
cmc
jmp
fs
dec
mov
and
cld
inc
mov
sub
mov
mov
sbb
test
mov
aad
insb
mov
test
jae
push
xchg
out
add
arpl
sbb
or
mov
add
fstpt
xchg
data16
push
jle
pop
arpl
out
xor
and
lods
stos
push
or
xor
push
inc
pop
cltd
testl
negl
add
mov
popf
aas
sub
push
cmpsb
addr16
pop
pop
cmpb
adc
pop
popa
and
adc
idivb
int3
xchg
inc
cmp
add
ds
dec
xor
pop
mov
or
mov
outsb
into
jmp
push
popf
cmp
push
or
cld
pop
sub
pop
xchg
sbb
ja
divl
js,pn
pop
push
cmp
xor
pop
dec
push
mov
out
push
dec
xchg
jns
out
movsb
and
cltd
sub
cwtl
and
insb
stc
xchg
and
push
sarl
add
jns
pop
shrb
aas
sub
mov
repz
xor
pushl
xchg
cwtl
jge
les
and
fucomi
xor
in
xchg
jge
mov
into
sahf
je
lret
or
shll
dec
imul
addb
push
adc
cmc
xlat
jns
push
icebp
push
cmp
loopne
out
sbb
mov
jle
and
inc
lret
pusha
sbb
ror
pop
dec
add
test
inc
loope
enter
cmp
call
pop
pushf
dec
mov
xchg
xchg
mov
sub
outsb
xorb
xchg
or
pop
pop
sbb
xor
add
jno
fmulp
sub
inc
pop
adc
cmp
mov
cmp
rclb
and
adc
mov
cs
ljmp
push
mov
repnz
pushf
aad
xor
mov
daa
leave
notb
sub
inc
pop
cld
inc
out
adcl
mov
fldenv
stos
or
or
out
lods
mov
std
ret
pop
pop
mov
xor
cmp
std
outsb
rcl
pop
pop
add
in
mov
or
xchg
inc
es
mov
je
sub
jecxz
xorl
jbe
mov
adc
lret
and
push
lcall
popf
and
pop
mov
fisttpl
add
mov
sahf
lret
cmp
add
pop
xor
push
es
xchg
push
xchg
jp
pop
sub
sub
cwtl
mov
dec
pop
fwait
int3
into
leave
mov
test
mov
lret
jae
icebp
mov
mull
dec
mov
push
jg
sbbl
subl
sub
sbb
inc
cld
repnz
stos
sti
push
push
mov
out
push
xlat
cmp
mov
insl
aas
hlt
data16
aaa
repnz
insl
adc
aam
das
fnstsw
in
jnp
mov
jne
mov
insl
mov
push
mov
fstpt
sub
cli
mov
push
and
pop
repz
add
or
add
sub
jmp
adc
or
pop
dec
enter
or
enter
pop
stos
outsl
inc
sbb
fwait
dec
ja
inc
push
stos
ss
sub
movsl
lds
inc
cmp
movsb
cli
loopne
cltd
mov
mov
sbb
call
xchg
and
mov
les
jmp
stos
dec
daa
int3
lea
pushf
loop
xchg
push
fdivrs
in
stos
push
js
mov
lret
and
and
ja
outsl
movsb
xor
aam
cs
sahf
jl
mov
pop
stos
fxam
push
cmp
pop
ret
push
and
dec
les
add
nop
dec
aad
pop
int
jae
in
stc
mov
inc
mov
jnp
movsb
loopne
cmp
sub
or
push
cmp
cmpsl
dec
pop
jb
lea
push
dec
sarb
les
jecxz
push
sahf
mov
loop
mov
cmp
movsl
insb
movsb
jno
sub
mov
cmpsb
xor
jle
xchg
push
mov
add
cmp
cltd
adc
test
js
xchg
cmc
xor
or
sqrtps
jmp
lock
xchg
cmpsb
fiadds
pop
dec
rclb
xor
scas
clc
mov
jmp
xor
sbb
sbb
dec
int3
lret
or
jl
push
ret
inc
or
insb
pop
and
jl
push
sub
out
ds
ljmp
mov
rclb
stc
fdivs
into
jnp
test
adc
push
leave
xlat
lahf
xor
mov
aam
or
push
sbb
mov
insb
lahf
shlb
lea
sbb
xor
test
and
enter
sub
in
or
sub
dec
push
nop
and
insb
sub
xchg
add
es
pop
pop
xchg
jo
pop
mov
mov
aam
fs
xchg
pop
lock
sar
clc
cmp
push
js
add
aaa
sub
push
and
rcrl
push
sbbb
out
mov
clc
push
sti
jns
mov
sub
fnstenv
mov
addb
fsts
cmpl
hlt
add
add
sbb
sbb
add
jb
mov
fistps
arpl
push
bound
xor
pusha
rcll
pop
adc
add
pop
or
push
loope
jns
scas
sub
dec
xchg
jae
ret
mov
pop
push
and
lret
xchg
sub
mov
xor
xchg
mov
push
jb
add
cmp
mov
lea
pushf
fs
xor
cmpsb
fwait
test
rorb
push
bnd
inc
sti
int
sub
jp
xorl
and
sahf
cmp
adc
push
and
js
or
xchg
aaa
mov
push
js
int3
cld
sar
notl
jle
mov
fdivrs
dec
xchg
add
xor
mov
cmpsl
aaa
jne
int
jecxz
test
lods
and
test
xor
fstl
cs
sar
into
ret
stos
inc
shrl
std
aaa
adc
adc
jle
xchg
jo
mov
push
mov
out
pop
cmp
pop
mov
adc
push
mov
jne
dec
mov
hlt
insl
inc
mov
and
xor
enter
xchg
add
loopne
mov
mov
mov
idiv
sub
int3
and
inc
orb
in
mov
loope
inc
and
xchg
in
push
call
cmpl
xchg
and
fsubrl
movsb
pop
sarb
adc
push
inc
cli
call
lock
ljmp
mov
cmc
ja
cmpsl
cmp
loop
mov
ss
cld
jmp
imul
mov
loope
pop
sbb
pusha
addr16
jg
in
and
mov
stos
fs
out
lea
mov
xchg
fnsave
sbb
adc
and
xchg
adcl
pop
dec
mov
mov
mov
cmp
lods
or
test
inc
dec
xor
testb
test
push
adc
push
push
fs
es
shlb
retw
fdivs
jp
dec
xchg
in
pop
shll
xorl
mov
aaa
lods
add
push
push
inc
lret
mov
sub
pop
or
sti
stos
push
inc
in
cmp
leave
lahf
add
jo
mov
jnp
inc
xor
sbb
out
popf
ret
imulb
clc
push
test
stos
popf
lock
pop
inc
xchg
shlb
cmc
jecxz
mov
test
jno
and
dec
xchg
int
call
in
mov
xor
inc
jg
jbe
ja
scas
sbb
mov
mov
scas
insl
test
pop
xor
mov
and
adc
cmpsb
jbe
repz
mov
add
rorl
xor
or
sbb
ficoms
ljmp
adc
rcrb
dec
jae
cli
out
cmpsl
je
mov
movsl
sbb
mov
loop
or
insl
iret
pop
adcl
jae
loope
adc
dec
pop
jmp
add
in
ss
aaa
into
jmp
int
inc
iret
popf
jno
xchg
sub
sub
pop
lods
ljmp
push
popa
jmp
add
mov
sbb
lods
lds
sarl
inc
movsb
adcl
js
xor
mov
int
inc
es
xchg
pop
cmp
xor
mov
ss
ss
call
ret
pop
pop
out
mov
cmp
bound
xchg
inc
bnd
pop
xchg
fwait
dec
ret
xor
push
or
pop
xchg
pop
or
add
push
mov
sub
sub
push
lea
jne
jb
loop
dec
push
or
xchg
or
lds
inc
loopne
es
xchg
jae
pop
cmp
pop
xchg
aam
jbe
mov
pop
pop
std
mov
loop
fs
xor
mov
mov
sub
inc
lds
lcall
inc
pop
pop
mov
inc
in
push
jp
add
xor
sbbb
mov
leave
cmp
jg
sbb
pop
aas
mov
mov
shl
out
les
xchg
mov
movsl
test
jne
int
push
add
rcrl
xor
ljmp
or
sub
stc
fldln2
in
xor
cmp
adc
aad
dec
push
jecxz
leave
addr16
dec
loope
xorl
gs
cmp
lret
mov
leave
fidivrs
gs
push
mov
jns
xchg
adc
mov
rolb
loope
and
adc
into
mov
jbe
xor
insl
rolb
and
sub
dec
jecxz
pop
and
je
or
lret
mov
ja
and
aam
aas
insl
push
rorb
mov
scas
xchg
notb
mov
out
in
rcrb
inc
ss
pop
xor
pop
and
ficompl
mov
pop
or
adc
iret
cli
sub
es
dec
call
popf
jb
jp
test
sub
xor
xchg
or
insb
orl
or
test
shll
outsb
setb
adc
xchg
push
and
cmp
xor
js
lcall
jbe
adc
pop
mov
nop
xchg
jo
xchg
or
cs
lods
repz
pop
sbb
fidivs
dec
adc
dec
xor
adc
xchg
ret
xchg
fdivr
gs
jl
shll
insb
push
cmp
xchg
jb
inc
ja
sub
test
pop
sbb
jo
adc
sub
jg
jnp
or
clc
pop
fwait
or
mov
pushf
fnsave
mov
in
in
dec
roll
add
scas
mov
popl
or
shrb
add
push
shll
stos
mov
xor
sbb
je
fyl2xp1
in
adc
ss
inc
or
je
movsb
arpl
aad
add
rolb
and
sbb
mov
xorl
ret
sbb
mov
push
mov
adc
dec
ret
cmp
pop
lret
adc
pusha
dec
mov
adc
cmpsb
mov
mull
push
jae
rcll
movsl
push
xchg
mov
xchg
or
adcl
adc
aad
mov
inc
stos
stc
adc
xor
mov
sbb
jg
fbld
ljmp
mov
mov
mov
pop
loope
adc
sbb
push
fstpt
push
out
imull
mov
popa
xchg
push
ffreep
das
outsb
mov
es
dec
fdivs
lods
stos
dec
mov
mov
dec
dec
dec
js
leave
insb
mov
ret
imul
cli
xchg
jecxz
adc
pop
movq
test
jge
ret
push
sti
inc
mov
mov
cmc
xor
aad
bound
pop
add
pushf
jnp
sahf
ss
adc
push
pop
sbb
fisubrs
aam
adc
aas
mov
call
ss
lock
ss
add
aad
mov
xor
cli
and
mov
imul
popa
add
inc
ja
outsl
mov
popa
or
lods
adc
insb
testb
cmpb
pop
bound
mov
movsb
inc
push
outsb
mov
cltd
xchg
gs
div
or
and
mov
xchg
mov
push
in
pop
mov
inc
jne
outsb
int3
inc
jp
test
mov
pusha
cwtl
arpl
in
ja
add
hlt
loopne
jo
test
xchg
mov
jmp
mov
fstpl
adc
mov
pop
fldenv
shrb
lret
mov
dec
jne
stos
pop
mov
cmp
push
sbb
jmp
or
and
mov
sbb
jbe
es
fadd
cmp
fdivrp
adc
sbb
mov
xchg
mov
jo
in
inc
mov
rcll
mov
jl
push
test
sbb
fwait
int3
jb
ljmp
sub
dec
lock
inc
fiaddl
jmp
xlat
inc
add
and
sub
int3
cli
ss
inc
sub
pop
fs
adc
add
sbb
mov
or
push
sub
mov
inc
add
xor
fisttpll
test
fdivrl
leave
mov
mov
jecxz
mov
mov
pop
cmpsb
mov
popf
or
jnp
sbb
sbb
sbb
add
addr16
or
push
cmp
rcl
adc
sub
popf
pushf
dec
or
leave
jge
scas
cmp
or
and
hlt
sbb
jl
sbb
pop
jp
xchg
test
stos
out
ret
into
mov
mov
and
int3
add
andb
jne
push
inc
and
push
insl
frstor
addr16
pushf
test
cmp
aad
xchg
test
adc
stos
mov
pop
sti
aas
sub
loope
mov
or
pop
das
and
sbb
xchg
mov
inc
into
lret
in
jge
xor
pushl
jl
cmp
test
repz
nop
push
dec
cmpsl
mov
push
in
push
out
cmp
aam
xor
inc
xchg
sbb
std
mov
mov
aas
outsl
adc
cs
xlat
outsb
loopne
pushl
sub
lods
dec
push
cmp
add
les
dec
mov
loop
push
cwtl
lret
mov
sub
dec
and
aad
add
sbb
inc
add
add
xchg
ret
push
xlat
imul
shll
das
xor
ds
shll
adc
pop
sub
push
test
xor
scas
stos
xchg
jnp
jne
int3
jno
push
aam
lcall
outsl
movsl
rclb
sub
push
xor
andl
xor
ret
sub
push
pop
int3
pop
shl
shr
jg
fwait
ja
subl
int3
push
sti
jge
cld
sbb
xorl
mov
fldt
int
fs
subb
fwait
fs
aas
andb
jae
mov
int
add
cmp
pop
xbegin
repz
ds
pop
int
int3
faddp
add
xor
js
lds
orb
xor
ds
dec
les
adc
arpl
cmpsl
jb
pop
mov
daa
pop
fdivrs
rcll
imul
inc
dec
mov
ss
jle
pop
repz
repz
mov
mov
fmuls
repnz
rcr
pop
pop
icebp
jnp
lahf
mov
dec
test
pushf
addr16
loop
dec
jp
jnp
mulb
xor
xor
hlt
and
dec
and
in
roll
fstpl
jg
in
test
xchg
xchg
faddl
cmc
ljmp
daa
hlt
cli
push
test
loopne
stos
add
cmp
adcl
fwait
in
mov
sbb
mov
sbb
mov
or
fbld
andl
jle
xchg
xchg
data16
jecxz
fistps
fcmovb
xchg
or
es
xor
stc
call
aaa
popa
outsb
push
xchg
jns
adc
cmp
pop
pop
testb
xchg
test
push
xchg
cmpsl
push
push
rorb
sbb
cwtl
dec
in
lahf
xor
pop
jmp
or
inc
addr16
push
inc
insb
popa
shrb
xchg
test
mov
es
push
jmp
mov
cmpsl
jb
inc
je
push
aam
xchg
enter
dec
cmp
xchg
js
addl
jnp
dec
cmp
aas
adcb
sbb
shlb
cmp
cwtl
dec
pop
ljmp
imul
or
lock
ret
ficoml
adc
cmp
xchg
cmp
ret
and
addl
leave
add
cmp
pop
sbb
cmp
jmp
in
in
out
xor
cmpsl
sbb
push
scas
out
mov
sbbl
sub
jecxz
std
dec
inc
scas
out
mov
dec
pop
mov
mov
xchg
insb
sbb
xor
mov
bound
add
sbb
jo
inc
lods
and
inc
jmp
sbb
mov
inc
mov
mov
addr16
rcll
fstps
cmp
stos
push
or
push
dec
or
mov
and
mov
add
mov
loop
push
inc
jge
insb
bound
cmp
adc
sti
jge
mov
dec
cli
fwait
sarl
inc
mov
cmp
rcrl
das
in
adc
rorl
mov
xchg
cmc
and
adc
pop
fisttps
push
daa
popf
sbb
or
inc
jp
or
pop
ss
jns
push
cld
sub
push
and
push
pop
movsl
dec
lahf
or
mov
lret
roll
mov
add
jne
sbb
pop
loop
shll
movsb
out
std
test
and
stc
clc
cmp
mov
jns
adc
push
fs
mov
adc
xchg
pop
daa
pushf
fildll
xor
aaa
cmpl
jae
outsl
inc
fisttpll
and
push
and
movsl
dec
xor
cmp
add
mov
cmp
test
sub
fmull
mov
jl
jl
adc
adc
fbstp
push
call
stc
cmp
popa
mov
or
adc
mov
fs
mov
imul
and
mov
mov
and
xchg
cmc
fists
sbb
sub
jns
xor
sbb
lret
dec
jae
push
and
mov
in
mov
dec
cmp
jg
daa
sub
cmpsb
pusha
test
inc
test
aad
inc
dec
xchg
pop
je
adc
pop
add
js
dec
sbb
das
dec
outsl
mov
rcll
mov
cmp
popa
mov
movsb
cltd
mov
inc
push
push
jo
sub
in
fdivr
stos
sbb
sbb
adc
xchg
cmp
shrb
dec
xchg
shrb
inc
xor
into
mov
mov
mov
jbe
mov
in
adc
clc
call
inc
iret
cltd
xchg
jl
aad
dec
and
ret
shll
inc
xor
or
mov
stc
js
popf
xchg
cmp
pop
subl
ficomps
rcll
and
add
add
insb
or
pop
sbb
jnp
cmc
aam
jg
pushf
mov
and
ds
xor
outsl
cmp
cmpsb
mov
lahf
pop
xchg
repnz
push
rclb
and
inc
lods
sti
pop
sbbb
xchg
jge
or
ret
pushf
ret
mov
mov
or
pop
push
push
add
cmp
loopne
push
das
adc
mov
cli
shl
cmp
jns
xchg
lret
jle
fistpll
iret
or
ror
xor
cs
loop
push
adc
xlat
es
out
in
ja
pop
pushf
jne
rorl
lock
loopne
mov
cs
cli
push
or
out
adc
mov
mov
push
cmpsl
push
and
inc
adc
push
jl
sti
jne
xchg
idivb
and
xor
push
dec
out
dec
xor
mov
sbb
pop
xlat
cmp
in
add
lret
dec
fcmovnb
xor
int
aam
sbb
fisttpl
orb
dec
cmp
hlt
or
push
mov
push
adc
out
add
pop
popa
stc
sbb
and
xchg
je
add
cmp
lahf
pop
pop
inc
dec
out
or
inc
mov
cmp
je
jge
outsl
mov
rclb
sti
scas
jp
lahf
mov
fidivrl
jne
cli
icebp
cli
push
sub
xor
pop
jns
pop
inc
nop
mov
divb
js
mov
scas
push
les
leave
out
sub
movsb
xchg
in
scas
lods
sub
add
sub
icebp
and
cltd
rcl
mov
mov
pop
in
inc
dec
push
jo
andb
adc
movsl
inc
das
pop
push
mov
pop
xor
iret
sub
fisubl
xchg
rcrb
scas
scas
xor
mov
jo
or
and
test
clc
mov
mov
add
mov
xchg
sbb
xchg
pop
ret
rcrb
mov
mov
push
test
outsb
in
shld
and
and
pop
mov
sub
or
dec
sub
or
cmp
mov
cmp
fistpl
cmp
rcrb
pop
call
cs
int
sbb
push
jbe
push
add
stos
cmp
mov
pop
inc
call
in
xchg
shrb
fadds
xor
mov
ja
mov
lods
jmp
mov
popf
jnp
enter
jbe
push
stos
dec
outsb
stos
shll
out
cmpb
shr
jns
mov
std
fadds
ja
loop
adc
adc
add
pop
je
or
mov
cli
mov
nop
and
xchg
mov
adc
test
or
adc
int3
sti
test
jo
cmp
mov
cs
das
adc
loopne
jg
stos
jge
xchg
xchg
movsl
adc
xor
jnp
popa
or
or
js
pop
adc
mov
lods
nop
je
push
sbb
jns
ficompl
inc
mov
dec
cmp
sbb
sub
in
push
mov
icebp
iret
fsubrp
and
int3
mov
into
popa
outsb
test
cld
mov
pop
loopne
xchg
add
mov
adc
inc
fldl
dec
mov
jbe
pop
movsb
pop
sub
cwtl
mov
movsb
mov
ret
shlb
insb
mov
jns
push
insl
jmp
loope
pusha
fildll
sub
xor
xchg
and
in
lahf
test
mov
pop
sti
add
jo
or
xchg
das
mov
mov
mov
xchg
lahf
mov
mov
push
xor
popf
popa
push
aam
and
aas
les
add
test
mov
pop
cmp
subl
or
mov
aas
dec
lea
insl
lea
aad
xchg
outsb
call
aam
push
add
push
pop
push
xchg
insl
jnp
outsl
call
add
and
test
sub
xor
xchg
aas
mov
jnp
xor
pusha
in
leave
xor
or
xchg
stos
xchg
mov
jmp
xchg
add
jecxz
cli
xchg
mov
ds
xchg
shll
loop
mov
xchg
pop
aam
adc
das
addr16
xorb
mov
mov
mov
add
xchg
enter
aam
in
cs
out
jo
sti
cmp
ja
xchg
sub
rsqrtps
and
imul
inc
pop
jnp
xchg
jecxz
mov
pop
xchg
in
test
ja
jbe
lahf
loopne
add
xor
push
cmp
mov
and
mov
jle
mov
dec
jae
lahf
xchg
xor
dec
mov
dec
push
mov
pushf
fistps
sub
sub
jmp
xor
mov
mov
jmp
pop
dec
test
insl
push
fimuls
jmp
leave
repnz
push
pop
loopne
lcall
xchg
ljmp
dec
mov
mov
pop
test
js
out
sub
push
sub
les
imul
mov
loope
fisubs
xor
out
aas
xlat
jnp
and
sarl
cltd
xchg
push
std
pop
mov
daa
or
insb
or
dec
xchg
lock
roll
fdivrl
add
faddl
insb
lret
pop
jae
cmp
pushf
mov
push
dec
sub
inc
mov
sub
loope
popa
dec
sbb
lret
jge
and
mov
test
or
and
sbb
pop
mov
ret
shl
mov
mov
cs
dec
jge
adc
pop
movsl
xor
push
int
dec
adc
fcompl
cmp
adc
mov
cmp
xlat
mov
negl
mov
sbb
jbe
adc
gs
or
cmp
ja
aam
add
rclb
xor
lods
loopne
pushl
add
lods
push
jg
fidivl
icebp
rcl
sub
out
loop
das
inc
mov
or
icebp
jb
sbb
mov
lock
jmp
fisubrs
loopne
cli
mov
mov
movsb
daa
into
or
add
loop
sub
xchg
xchg
inc
push
negl
dec
aas
dec
ja
notl
or
xor
pop
pushf
lods
xchg
wrmsr
movsb
xor
es
mov
cmpsl
jl
iret
jmp
lods
aad
rcr
sbb
js
mov
hlt
call
insl
ss
inc
add
adc
xlat
leave
clc
out
xor
mov
lds
aas
iret
mov
adc
dec
xor
xor
cmp
xor
push
lods
or
mov
ds
lahf
and
or
in
push
xor
xchg
add
sahf
sbb
test
sbb
aam
sbb
pop
gs
cmpsl
repz
out
mov
sub
push
sbbl
cmp
out
leave
cmpsl
pop
or
dec
jge
mov
push
int3
and
xchg
sub
pop
lds
xor
xchg
iret
lock
incw
mov
pushw
push
clc
cmc
pop
jp
movsb
dec
mov
mov
inc
xchg
rclb
mov
push
push
jl
test
jg
xor
jno
mov
push
lods
jae
or
cli
in
and
lock
and
inc
test
or
outsl
and
mov
mov
sbb
xlat
push
or
stos
lock
ror
and
and
dec
push
leave
cltd
or
fistl
ja
cmp
add
fcmove
cmp
das
mul
dec
jae
test
test
imul
xchg
lds
sbb
out
out
pop
jb
or
adc
insb
jl
xchg
mov
add
sub
aaa
xchg
dec
add
pop
jp
sub
adc
sub
testb
xor
xor
sbb
loope
out
xor
push
jb
je
scas
divl
mov
repnz
pop
cltd
scas
out
loopne
inc
sub
pop
jge
dec
test
xor
mov
adc
jle
jbe
in
pop
pop
xor
call
add
ljmp
bound
fdivrp
ds
out
in
xorb
mov
out
mov
stos
inc
jge
cmp
les
xor
scas
in
ljmp
imul
mov
jns
arpl
setbe
cwtl
dec
mov
mov
mov
mov
inc
scas
push
movsl
xlat
push
scas
mov
sbb
out
push
testb
aam
adc
xor
jbe
mov
and
popf
mov
add
lods
pop
jno
jae
xchg
pop
pop
mov
insb
loope
add
push
dec
mov
dec
lret
or
xor
push
sub
ret
or
and
in
sbb
push
jno
mov
pop
mov
pop
mov
cmp
loop
push
stos
lret
jne
insl
ljmp
nop
cli
jle
lret
xchg
push
cmp
mov
ret
cmpsb
jo
cltd
loop
and
nop
fcoms
jmp
lahf
int3
loopne
pop
mov
xchg
cli
cmp
leave
out
shr
sahf
adc
es
xchg
dec
inc
jb
test
int
loopne
add
add
es
add
mov
fnstenv
mov
cmpsl
popf
mov
push
or
mov
lock
inc
jno
pushf
cmpsl
sbb
jle
dec
jmp
or
jno
enter
fisubrl
and
inc
in
jnp
lea
lock
lcall
inc
ja,pn
movsl
dec
pop
lock
inc
ds
rcl
mov
and
ds
subl
std
rcpps
dec
fidivl
push
jge
iret
out
jnp
cmpsl
leave
pop
xor
ss
cli
mov
in
xchg
repnz
scas
add
push
mov
mov
pop
insl
ja
cmp
cmc
repz
es
sub
pop
les
mov
loope
mov
negl
nop
out
scas
sarl
sbb
mov
cmp
adc
inc
inc
mov
shlb
cltd
cmpsb
add
mov
cmp
es
pop
cmpsl
mov
jl
cli
shrl
subl
test
xor
mov
jmp
hlt
pop
adc
out
lds
adc
stos
or
cwtl
sub
shll
cmpsb
ljmp
sbb
dec
push
mov
and
mov
mov
mov
cmp
dec
and
dec
mov
leave
cmp
cwtl
sbb
test
das
mov
mov
test
cwtl
mov
ds
movsl
mov
cmp
cltd
lret
xor
out
and
jne
sub
jle
and
outsb
in
pop
jne
sbb
int
ja
or
sub
sbb
sub
sub
xlat
jecxz
sub
std
dec
cmpsl
adc
sub
inc
xchg
fwait
enter
xor
ret
push
dec
mov
in
lock
fistps
pop
jo
aam
cmp
imulb
sahf
cmp
stos
add
clc
mov
leave
sbb
mov
jns
nop
lock
test
pop
loopne
xor
cmp
inc
lds
and
sti
cmpsl
std
pop
dec
inc
adc
vunpcklps
mov
sub
or
fiaddl
pop
adc
adc
lcall
mov
mov
ljmp
sbb
jecxz
rcr
cs
daa
dec
cmpsb
push
fisttpl
xchg
lret
mov
outsb
addr16
into
mov
mov
aad
adc
push
inc
fsubr
addr16
mov
int3
and
repz
int
js
jo
cmp
sbb
std
dec
inc
fisttps
mov
cwtl
sub
out
xor
push
pop
fimuls
jmp
jmp
nop
sub
xchg
aad
push
das
in
icebp
pushf
aaa
daa
mov
loope
lret
lcall
es
sbb
mov
dec
cmp
hlt
xchg
je
and
xchg
inc
pop
movsl
fwait
jbe
and
stos
int3
pop
fstl
shll
aas
dec
sti
scas
nop
mov
jmp
add
push
jae
xchg
idivb
push
xchg
jno
das
xchg
hlt
push
mov
sbb
ljmp
test
fdivs
fs
xor
mov
fnstenv
xchg
mov
jb
mov
jmp
add
ss
mov
das
mov
cmpsl
orl
pop
cmp
leave
lcall
mov
cmp
dec
dec
rclb
fs
push
adc
fistps
jb
fistps
inc
xchg
ret
jge
aam
inc
inc
mov
icebp
das
pop
daa
jl
jecxz
dec
dec
dec
cs
aaa
jo
or
inc
inc
in
lret
pushf
dec
js
mov
cmp
lcall
pop
cmp
dec
mov
stos
push
push
inc
jb
ss
mov
pop
add
jle
repnz
jbe
es
in
adc
cmp
ja
out
pop
push
or
or
subb
fisubrl
xchg
mov
dec
mov
rep
loopne
cmp
and
xchg
cmp
scas
call
call
mov
jns
jmp
mov
test
inc
pop
mov
or
sub
dec
inc
push
adc
fwait
jl
mov
mov
aad
lcall
xchg
jp
and
xlat
inc
mov
xchg
lods
js
loop
xor
and
cmpsb
cmc
mov
adc
cmp
cmp
testb
push
fisttpl
cmpsl
gs
movsb
test
rclb
inc
sub
andb
mov
add
jl
std
outsb
cltd
les
or
mov
fisubrl
lea
popf
cmp
leave
pop
fwait
xchg
mov
cld
sbb
sarb
sbbb
or
fidivl
mov
fdivl
js
sahf
lret
clc
int3
stos
ja
mov
mov
insl
fmuls
aaa
or
int3
or
outsl
mov
insl
sub
adc
stc
movsl
adc
sti
ja
xchg
jo
fs
dec
rorb
scas
cmc
mov
sti
stc
pushf
test
xchg
sub
sahf
rcrb
cmpsl
pop
js
push
decl
mov
dec
dec
repnz
inc
push
sub
jge
sub
fbld
add
sti
std
xor
or
xchg
and
push
adcb
imul
clc
mov
mov
mov
movsb
adc
outsl
lock
jmp
mov
pop
inc
xchg
int3
mov
pop
lods
out
sub
sbb
jb
jp
mov
adc
ljmp
dec
daa
hlt
cmp
xchg
call
and
and
mov
pop
lds
aaa
cmp
orl
mov
dec
and
nop
cmp
in
pop
push
sub
sub
sbb
xchg
cld
std
pushf
arpl
and
adc
fdivr
add
and
xor
and
jne
or
inc
add
inc
idivb
stc
aas
xchg
mov
dec
and
fnstenv
mov
stos
cmp
jge
mov
js
xor
fimull
jge
or
mov
in
push
in
pop
rcrb
lret
pop
push
jne
ret
imul
lods
cmp
into
loopne
fstl
sub
xchg
sub
pop
mov
pop
in
dec
sbb
cmpl
aaa
dec
cltd
sbb
xor
inc
xchg
pop
dec
aam
push
push
repz
mov
and
or
push
test
push
orb
jns
push
fsts
pop
loop
loop
int
sub
stc
lods
push
cmp
es
push
xor
or
hlt
sub
out
mov
cltd
popa
pop
push
aaa
insb
and
add
push
ds
ficompl
inc
iret
jo
test
pop
dec
jno
mov
mov
dec
test
cmp
dec
pushf
loope
cs
cmp
shlb
into
cmova
insl
lret
inc
mov
mov
jge
cmp
push
mov
jmp
dec
fiadds
repz
mov
cmp
mov
mov
xchg
orl
xlat
pop
mov
in
adc
mov
inc
mov
loop
xchg
cmpsl
or
pop
pop
jle
aas
jno
pusha
inc
test
adc
push
cwtl
mov
andl
jbe
andb
mov
ja
scas
push
cmpsb
je
in
inc
jae
imul
cs
test
xor
cmp
jns
decb
divb
sbb
jnp
add
inc
lea
repz
in
dec
xor
lret
and
push
push
xchg
loop
cltd
sub
mov
cmp
xchg
stos
mov
mov
mov
in
idivl
jns
or
fs
jecxz
lret
or
xor
rolb
out
pushf
dec
call
xchg
pushf
adc
pop
andl
mov
ss
mov
in
call
push
dec
into
jmp
push
lods
xor
repnz
dec
add
mov
popa
cmpsl
sti
insl
or
fcomps
push
xor
dec
and
fdivl
or
js
aad
scas
pop
adc
test
dec
std
fiadds
mov
dec
dec
repz
shl
mov
pusha
push
in
outsb
scas
loop
fiaddl
gs
sbb
xchg
mov
adc
and
adc
sarl
das
iret
xor
and
repnz
cmp
cmp
mov
pushf
pop
jge
orb
cmp
dec
jp
mov
filds
xor
push
mov
fcoms
mov
arpl
scas
sbb
mov
in
popa
pushf
lret
out
test
shrl
and
mov
mov
or
sbb
mov
aas
pop
dec
cs
ds
cltd
dec
mov
dec
inc
roll
cmpl
popa
andb
sub
in
push
add
push
mul
jbe
xor
pop
jecxz
rcrl
leave
xchg
aad
mov
sub
in
pop
pushf
and
mov
mov
int
iret
mov
mov
gs
jns
add
rep
ficompl
fwait
or
cli
cld
rorb
cmpsb
mov
add
push
cmp
repz
mov
push
sub
adc
pop
pop
mov
pop
xor
cmp
xchg
pop
jo
mov
shrb
leave
test
loop
push
sbb
jbe
and
pop
jge
mov
or
rorl
andb
stc
push
mov
jecxz
lret
inc
jl
push
test
ja
mov
dec
jae
and
inc
fcoms
cmp
rorl
aam
sub
fcompl
mov
in
out
inc
or
mov
mov
dec
and
fmulp
cmp
inc
cmp
inc
jp
inc
fnstsw
mov
arpl
out
arpl
movsl
gs
imul
or
lahf
or
push
outsl
loope
cmpsl
out
addb
sbb
pushf
fstpt
jl
divb
rolb
cmpsl
xchg
add
insl
mov
dec
jmp
cwtl
rolb
sarb
mov
cmpsb
jo,pt
in
dec
rolb
popa
ja
js
mov
xchg
push
sti
lods
mov
hlt
mov
mov
out
pop
pop
jl
hlt
pop
ret
sbb
xlat
pop
test
xchg
push
sbb
aaa
and
mov
daa
sbb
mov
adc
repz
rcr
orb
movsl
cmp
decl
sbbb
xchg
clc
cmp
mov
popa
popf
and
push
lea
in
xor
dec
cmp
sub
sub
or
lea
out
ror
mov
cwtl
inc
or
rorl
dec
rol
ret
mov
ljmp
aad
movlps
cmp
inc
xorl
hlt
les
jl
loope
js
and
mov
jl
xor
xchg
cmp
sti
test
stos
in
inc
js
cs
sub
mov
mov
add
add
test
testb
dec
scas
pop
push
sbb
push
or
add
popa
imul
nop
jae
inc
pop
pop
outsb
inc
sub
mov
divb
xchg
pop
cmp
ss
ss
dec
out
ljmp
inc
cwtl
pop
insb
into
add
nop
mov
imul
pop
or
aaa
dec
in
loopne
fistps
cmp
push
sbb
push
ss
call
data16
rorl
add
rcrl
scas
lret
mov
stos
push
jne
out
leave
ja
mov
and
jp
mov
jns
pop
ja
out
out
push
lret
push
pusha
outsb
mov
sahf
out
mov
scas
arpl
cmp
or
movl
mov
in
addr16
pop
repz
inc
inc
sbb
pop
cli
cmp
sbb
push
or
mov
lods
or
sub
cmpb
insb
xor
pop
lcall
mov
push
rcrl
jae
xchg
xchg
jmp
and
pusha
or
repz
lods
test
out
push
inc
sub
mov
out
mov
loopne
aad
add
mov
jp
or
rclb
mov
insb
and
sbb
lret
sbb
mov
insb
mov
xor
sub
ljmp
jns
pop
mov
dec
lods
mov
push
push
pop
inc
jne
cmp
sti
out
inc
sbb
xchg
movsl
jb
xchg
test
fmul
fs
jmp
cld
std
lcall
mov
in
jbe
inc
inc
xchg
hlt
test
sti
sbb
lods
mov
push
xor
leave
xor
out
sbb
dec
pop
jmp
imul
sti
sub
add
fsubrl
daa
xchg
xchg
mov
push
std
lods
xor
push
jmp
lret
lahf
cld
fsubrp
and
clc
inc
fwait
xor
test
fcos
inc
pop
xchg
je
jne
cmp
and
dec
movsl
and
dec
inc
mov
xchg
inc
repz
mov
enter
mov
scas
sbb
je
int
xor
push
cs
loop
mov
add
adc
lahf
pusha
and
and
arpl
sbb
out
sahf
jg
call
add
dec
fstps
adc
outsl
fmul
mov
jmp
and
xor
adc
add
xchg
adc
jns
js
inc
andl
rol
sbb
or
xor
and
mov
mov
adc
fcomps
inc
push
test
mov
fsubrp
mov
or
std
cwtl
jae
push
jp
inc
pop
test
push
jle
js
dec
rorb
mov
insb
xor
push
movsb
or
mov
pop
mov
sti
cwtl
add
mov
sub
sub
cs
add
stos
mov
call
clc
jns
fs
sub
sti
jp
cltd
dec
insb
inc
push
or
jns
or
sbb
inc
mov
aas
pop
sbb
pop
xchg
sbb
pushl
jbe
jno
xchg
mov
pop
adc
int3
aaa
cwtl
pop
mov
push
pushf
inc
fcompl
loop
in
xchg
cli
cwtl
je
inc
jmp
sub
mov
pushf
add
lahf
jmp
pop
jp
xchg
or
push
insl
shrl
jmp
sub
adc
outsb
xor
and
gs
cmp
jmp
movsb
mov
pop
movsb
lea
imul
mov
mov
dec
xchg
push
push
xchg
jle
or
dec
pop
adc
out
push
in
scas
mov
cmc
fs
add
dec
es
or
or
or
sub
mov
lea
inc
cmpsb
ficoms
sbb
lret
into
push
leave
ja
lock
pop
or
out
push
loop
sbb
jg
sbb
imul
mov
aam
dec
or
scas
xor
push
fs
mov
mov
jb
xor
mov
mov
xchg
decl
fisubrl
or
gs
outsb
or
sub
dec
dec
aad
out
dec
dec
pushf
add
jae
loop
cmp
dec
pop
neg
js
sbb
sub
add
cwtl
or
jl
lock
jge
hlt
mov
add
jg
xorb
mov
and
aad
cld
inc
add
inc
sub
mov
out
insl
inc
cmp
cmpl
out
shlb
xor
cmpsb
adc
or
push
adc
xlat
add
mov
adc
adc
and
ss
and
push
mov
jne
lock
hlt
popf
and
mov
fisttpll
push
jo
and
dec
repnz
sbb
cmp
icebp
pushf
fwait
scas
pop
push
scas
das
adc
mov
fcomps
push
mov
lahf
adc
xchg
or
out
jle
inc
iret
stc
dec
repnz
fadd
lds
adc
loopne
ret
mov
push
and
jecxz
sub
aad
int3
mov
mov
out
sbb
add
mov
je
xor
adc
or
mov
pushf
xchg
fcom
pop
mov
and
inc
mov
lods
out
cmp
sbb
fs
bswap
and
jbe
lods
out
or
jnp
in
cmpsl
pop
clc
jno
jno
daa
jnp
outsl
cmp
push
cmp
inc
repnz
movsb
xchg
or
mov
lods
rcrl
imul
dec
mov
dec
mov
dec
push
ss
inc
xor
jne
jno
jecxz
sub
movsl
lock
insb
adc
cmp
clc
mov
ret
adc
jg
andl
sub
rclb
fs
cld
xchg
dec
mov
loopne
add
and
dec
or
sti
popa
cmp
mov
jp
dec
outsb
enter
fcom
add
or
sub
lret
filds
adc
insb
push
rcll
jno
cld
je
test
mov
xchg
add
or
mov
mov
imul
inc
add
int
sbbl
xor
sbb
in
imul
icebp
pop
adc
sbb
sarb
shr
pop
jb
in
in
jp
iret
mov
lcall
ret
fnsave
xor
lock
arpl
inc
pop
stos
jp
cmp
cwtl
dec
popl
orb
cmpsl
xchg
sub
push
jmp
pop
sub
jbe
std
lret
dec
test
push
add
push
xor
rcll
or
mov
fcomp
lret
cwtl
fldenv
lds
mov
lds
push
mov
mov
inc
add
add
repz
jle
cmp
xor
xchg
movsb
xor
imul
push
push
aaa
cmpsb
mov
mov
add
push
adc
xor
mov
es
rolb
jg
pop
mov
das
xchg
loope
xor
or
out
pop
pop
mov
sahf
test
icebp
push
fidivs
push
jmp
pusha
jg
loop
jnp
and
xchg
adcl
push
cmp
xor
sub
and
clc
fdivr
or
aam
cmp
mov
out
sub
mov
jo
jbe
ss
repz
xchg
lahf
mov
xor
inc
aaa
sbb
mov
pop
jmp
iret
push
inc
movsl
fbstp
iret
ja
data16
pop
sahf
fcoml
add
push
xor
xor
in
cmp
cmp
pop
add
hlt
fisubl
punpcklbw
out
jge
pop
aaa
push
adc
arpl
out
mov
jne
shll
sub
cmp
out
pushf
adc
flds
fmuls
or
pop
in
andl
lds
inc
mov
mov
xor
mov
sbb
iret
add
dec
and
and
lds
aas
pop
xchg
arpl
iretw
xchg
hlt
cmpsb
ret
xchg
fadds
mov
imul
and
xor
lret
scas
cs
xor
mov
jecxz
pop
push
xor
outsb
test
cwtl
out
sbb
push
adc
aad
add
inc
in
out
insb
adc
mov
push
inc
sahf
xchg
out
dec
ds
xchg
mov
test
es
mov
dec
xchg
lock
clc
in
aas
push
cwtl
xchg
push
int
mov
sti
sbb
bnd
enter
cmp
fmuls
and
repz
addb
pop
in
adc
outsb
pop
roll
cli
test
arpl
cmp
pusha
push
ja
push
daa
fiadds
add
sub
and
mov
roll
outsb
push
adc
xchg
xlat
xor
clc
and
stos
sub
ja
loop
loop
xchg
xchg
dec
fadds
mov
xchg
xchg
nop
dec
out
lahf
mov
movsb
or
cwtl
addl
data16
shll
sub
sar
rolb
cmpsb
sub
imul
push
scas
in
mov
push
fadd
dec
stos
je
mov
ficoml
stos
popf
insb
mov
lret
mov
outsl
outsl
and
mov
mov
mov
in
add
push
mov
cmp
lahf
in
inc
dec
mov
cmp
lods
and
in
stos
sub
movsl
adc
data16
cmp
outsb
adc
insl
jmp
push
mov
test
pop
or
mov
fs
jg
pop
cs
push
or
xchg
cmpsb
pop
cmp
cmp
adc
jbe
cmp
jne
sahf
lea
gs
jl
pushf
dec
in
test
mov
xchg
push
mov
out
shrb
test
xchg
inc
dec
out
mov
adc
or
cmp
mov
and
jnp
jnp
bnd
mov
lock
imull
mov
loope
jmp
ss
mov
and
cmc
loope
pop
addr16
jg
xor
jmp
cmp
push
ds
and
ret
inc
dec
int
lahf
or
popl
and
cwtl
movsb
outsl
arpl
push
mov
sub
aaa
fnstcw
xor
in
test
mov
inc
mov
int3
cmp
jge
xchg
xor
es
imul
lcall
pushl
into
clc
and
jmp
fbld
sub
into
and
sub
mov
mov
adcb
xor
nop
rcll
and
jp
xor
shlb
repz
js
xor
lret
es
jne
repz
xchg
ret
mov
pop
cmp
mov
arpl
sub
lcall
xchg
push
mov
mov
sub
push
pop
bound
mov
push
arpl
lcall
jae
int3
or
inc
push
sub
and
imul
xorl
cmpsl
xor
pop
stc
jae
test
mov
popf
sub
cmpsl
pop
add
jb
incb
dec
mov
das
insl
scas
test
add
sbb
jno
inc
jbe
lods
mov
fwait
lock
push
pop
lahf
or
cmp
outsb
aam
and
ss
pop
xchg
and
out
sahf
xchg
shll
push
subl
int3
movl
imul
mov
pop
test
sbb
outsb
rdmsr
cmpsb
mov
or
sahf
cld
fsubrp
jno
mov
int3
mov
or
inc
pop
cmpsl
adc
mov
lahf
push
dec
fsubs
lock
push
mov
sbb
movsb
faddl
rcll
xor
ffreep
int3
and
sub
or
ja
lahf
jnp
adc
sub
je
mov
sub
out
mov
lea
lock
pop
pop
xchg
neg
cltd
mov
jp
add
lahf
and
sarl
lods
xlat
and
imul
sti
dec
lahf
rorb
xchg
fmuls
inc
push
test
jp
fs
lcall
pop
push
sub
adc
push
repnz
push
popf
lea
into
in
dec
xor
xor
pop
add
into
pushf
xchg
dec
xchg
cmp
jle
outsb
push
dec
fbstp
movsl
xchg
insl
ss
sbb
mov
and
insb
loope
dec
test
aas
imul
jns
mov
rcrb
hlt
or
add
divl
ljmp
test
mov
shll
sbb
add
xorl
outsb
ret
sbb
test
push
cmp
jle
jecxz
xor
in
jbe
pop
mov
pop
nop
xor
push
inc
or
cmc
cli
sbb
fmulp
icebp
xchg
in
faddl
or
movsl
icebp
xchg
ret
sbb
mov
xchg
push
mov
rorb
jbe
xlat
shrl
pop
sbb
imulb
xchg
cli
in
pop
cmp
loop
push
hlt
jl
mov
xchg
movsb
gs
xchg
lods
pop
mov
int
sub
pop
jmp
add
dec
jns
fstps
or
cmpl
or
fsubrs
adc
pop
cmp
jge
inc
andps
fnstsw
add
enter
xchg
ds
sahf
xchg
mov
lcall
jae
push
mov
dec
add
pop
lea
mov
leave
sub
xchg
push
mulb
inc
lret
pop
pop
cmp
pop
dec
xchg
pop
fsubp
nop
lahf
sahf
ljmp
pushf
adc
mov
mov
shlb
aad
cmp
xchg
dec
les
arpl
les
inc
fadds
or
inc
mov
call
xchg
jae
icebp
push
inc
cmp
cld
jg
inc
cmpsl
into
cli
das
scas
push
and
test
mov
and
fisubl
in
int
mov
cmp
pop
fldz
test
sti
sti
jno
loop
dec
jnp
lods
push
lahf
cwtl
jl
into
sbb
in
cmp
fstpl
dec
add
pop
sahf
adc
cmpps
push
lods
cmp
push
mov
lret
xchg
jns
lret
mov
jbe
mov
insl
fnstcw
adc
push
or
add
hlt
sub
cmpsb
mov
adc
pop
shr
push
movsl
push
sbb
shll
adc
cmpsl
es
cmp
imul
xchg
std
cmp
fimuls
es
outsb
sub
popa
leave
mov
dec
jecxz
jecxz
fcmovnu
loope
popa
fadd
fcmovb
aad
hlt
dec
cmpl
es
jnp
cmp
and
lret
pop
jl
or
jbe
jae
test
fstpt
mov
leave
push
js
lcall
aad
gs
je
mov
xor
xchg
xchg
dec
or
or
mov
rorl
jnp
or
je
mov
fnstcw
mov
loop
lds
jp
and
xor
sbb
or
data16
jne
je
cmp
pop
push
rcll
or
push
inc
xchg
mov
cmpsl
sub
push
leave
cmp
mov
xorl
sbb
xchg
iret
sti
pusha
xchg
ror
mov
xor
add
dec
hlt
jbe
pop
dec
inc
lds
js
and
ljmp
mov
adc
mov
jns
daa
sub
loope
mov
xchg
std
scas
xchg
in
xor
push
add
and
bound
dec
std
jle
jae
adc
stos
cmp
inc
add
cmc
push
mov
sub
cmp
push
jle
test
jl
sti
mov
mov
data16
mov
int
push
and
into
pop
mov
arpl
rorb
sub
add
adc
xchg
aad
dec
out
xchg
push
daa
outsb
pop
sub
dec
les
sub
rorb
enter
fcoml
in
and
in
mov
add
loop
loope
sub
dec
scas
cltd
mov
out
xor
xchg
xlat
pop
push
sbb
xor
adc
add
stos
jg
pop
jmp
push
mov
sbb
mov
and
cmpsb
je
adc
pop
inc
sbb
mov
inc
mov
pop
fprem
fcmovbe
lds
aam
lahf
sbb
int3
rorl
adc
inc
std
mov
mov
int
rclb
xchg
shrb
push
sbb
out
push
in
cs
xchg
je
daa
adc
mov
mov
fildl
dec
ret
xor
repz
cmc
ja
int
sbbl
lock
mov
mov
fcoml
addr16
cmp
push
and
fbstp
loop
add
or
int
inc
lcall
cli
loopne
pop
mov
aaa
xlat
mov
cmp
test
pop
sbbl
jge
les
leave
push
dec
jo
scas
stos
pop
or
push
mov
cmp
or
lret
fidivl
mov
xchg
sbb
and
into
test
xchg
mulx
std
stos
in
mov
pop
adc
inc
movsl
hlt
std
xchg
sbb
push
add
arpl
xchg
xchg
dec
dec
std
ret
cwtl
mov
add
repz
dec
cltd
jns
repnz
push
into
xor
imul
daa
jmp
sub
shll
fnstsw
pop
outsl
mov
popf
mov
pusha
pusha
hlt
push
pusha
mov
fcmove
arpl
repnz
pop
adcb
iret
inc
popa
insb
sbb
popf
cmp
dec
push
imul
int
push
pop
inc
cld
or
mov
idivb
ljmp
sbb
xor
mov
test
ret
mov
pop
xchg
clc
popf
lods
inc
or
sub
sarl
aaa
fsts
push
jmp
sbb
adc
aad
je
lret
push
test
jbe
adc
fimuls
cmp
jl
cmp
aam
fidivrs
test
pop
psubusb
xor
fdivrp
imul
movb
mov
mov
push
imul
loopne
fucom
and
das
gs
shl
nop
add
int3
cvtdq2ps
lock
pop
lret
pop
jmp
imul
lock
push
ds
xor
fstpt
outsl
popf
das
popa
push
iret
es
jg
jecxz
push
fwait
push
inc
add
mov
data16
dec
fcomp
cmp
pop
pop
stos
insb
xchg
push
xchg
jle
addr16
adc
fstps
adcb
adc
testb
push
dec
je
cmpsb
mov
stos
aas
adc
xchg
movsl
dec
icebp
pop
fldenv
adc
imul
fiaddl
icebp
xchg
adc
dec
sub
push
adc
xchg
shlb
inc
adc
test
sub
rorb
aas
jne
nop
int
les
ficoms
jl
cmp
jnp
out
insb
mov
aaa
push
adcb
mov
sbb
dec
aas
dec
mov
mov
xchg
pop
cmp
js
mov
daa
iret
dec
mov
int3
cwtl
or
hlt
inc
inc
popf
pusha
test
mov
sarl
shl
enter
push
sub
int3
fcos
sahf
fnop
sbb
or
and
rorb
shr
push
xchg
and
imul
mov
xor
dec
mov
sbb
ja
cmp
stc
pop
in
call
inc
mov
nop
xchg
inc
mov
inc
clc
repnz
lock
sub
mov
ss
inc
jge
mov
daa
push
mov
jns
jne
xchg
cld
jne
xor
sbb
aad
das
test
enter
push
bnd
mov
movsb
imul
movsb
scas
dec
js
xor
scas
jg
imul
mov
pop
mov
mov
sbb
mov
push
mov
pop
dec
jne
addb
les
push
xor
test
jl
mov
cld
lahf
push
ds
adc
sbb
aam
inc
or
dec
pop
in
mov
and
rorb
dec
push
and
pop
lret
push
vpmullw
rcrb
and
xchg
and
cmp
sar
jmp
dec
push
lret
in
jmp
mov
inc
nop
jbe
and
mov
arpl
or
int3
lods
adc
mov
fnstcw
cmp
gs
inc
aad
mov
inc
dec
in
shrb
push
jmp
mov
mov
mov
xor
mov
sub
test
mov
out
pop
lahf
in
jns,pn
lea
mov
pop
mov
pop
pushf
imul
out
mov
mov
les
iret
xlat
cmc
xchg
jg
jb
outsl
ficompl
scas
mov
cmp
scas
sbb
out
clc
xor
xchg
mov
mov
mov
inc
pop
data16
movsb
fisttps
out
int3
push
ss
insb
popl
rcrb
mov
mov
repnz
add
mov
cltd
xchg
js
ljmp
das
frstor
mov
clc
cmpb
pushf
cmp
popa
scas
ficomps
mov
cmp
aad
int
mov
psubb
rorb
sti
mov
movsl
repnz
mov
pop
enter
jne
ret
cmp
inc
adc
jecxz
mov
push
gs
mov
xor
sbb
testb
rcl
add
add
psraw
es
rcll
push
lahf
xchg
add
mov
adc
inc
push
inc
shr
mov
andl
stos
inc
pop
iret
and
call
jnp
addr16
sahf
adc
out
cmp
popf
call
xlat
push
sarb
adc
pop
mov
inc
mov
out
loop
ljmp
ljmp
mov
adc
div
popa
xchg
loope
ja
adc
jbe
jl
pop
out
and
mov
test
jbe
fstp
adc
push
mov
mov
std
pushf
shrl
repz
shlb
call
add
adc
aas
and
jne
nop
mov
popf
loop
cmp
mov
sub
xchg
push
mov
out
sub
add
jae
cmp
repnz
nop
inc
das
sbb
cs
cmp
bound
into
cmp
pop
mov
xchg
imul
push
fimull
adc
xchg
ds
lahf
fldcw
cmp
jl
add
sbbl
push
ss
cmc
sub
and
adc
add
dec
sbb
mov
movsl
mov
inc
aas
xor
pop
int3
and
or
mov
mov
or
das
mov
mov
ficoml
add
dec
in
lret
xlat
orb
ja
movsb
es
jmp
call
into
adc
clc
ss
hlt
insl
xchg
pop
pop
loop
lods
stos
mov
out
pop
push
xchg
push
xor
mov
mov
mov
xor
loop
and
inc
jle
and
and
mov
jmp
inc
cmp
lret
push
or
lods
push
xor
xor
sub
dec
pop
popf
pop
mov
adc
outsl
xor
in
mov
adc
fdivrs
rorb
add
pop
bound
mov
ret
loop
in
mov
lahf
and
mov
jb
mov
mov
mov
cld
fbstp
arpl
cmp
loope,pt
add
ffreep
bound
stc
jae
inc
adc
and
ret
aaa
sbb
ret
adc
inc
xor
jb
fildll
ljmp
enter
dec
inc
adc
jno
cmc
aaa
loopne
mov
xor
mov
xor
ds
cltd
in
adc
inc
mov
fwait
ret
lret
add
mov
insb
or
jo
shrb
jl
clc
cwtl
jno
outsb
adc
xchg
ret
dec
cmp
repnz
jl
rcrl
xchg
mov
out
daa
out
std
xlat
sbb
push
aam
mov
hlt
cmpsb
mov
mov
jns
jge
flds
add
mov
ljmp
push
dec
sbb
aaa
dec
push
mov
subb
lock
dec
outsb
out
insb
sub
sub
andl
sub
pop
jp
jmp
fs
xchg
mov
iret
push
sub
and
pushf
stc
cli
push
iret
and
add
and
jl
fdivr
aas
adc
inc
orl
out
repz
xchg
in
popf
pop
hlt
mov
in
hlt
sbb
adc
aas
jmp
push
clc
jmp
aaa
and
repz
sbb
test
dec
or
mov
int3
pop
in
stos
sbb
out
and
popf
or
in
jb
add
adc
cmp
movsb
sbb
mov
push
sub
es
fs
fwait
pop
imul
daa
pop
movsb
mov
mov
in
mov
pop
xchg
stos
push
xor
jbe
in
and
pop
inc
ficoms
cmp
jp
inc
out
and
adc
cmp
sbb
es
ret
cmp
movsl
pop
sbb
dec
mov
cmp
pushf
xor
in
scas
cmp
idivl
lds
shll
xor
enter
movd
ds
mov
cmp
test
cltd
call
xchg
nop
nop
mov
nop
psubusw
lret
repz
dec
nop
call
push
jbe
pop
lretw
dec
mov
loopne
sub
xchg
mov
jmp
pushf
ret
scas
loope
inc
sbb
jp
icebp
jmp
sbb
inc
dec
outsl
push
or
push
shrb
mov
jne
mov
sarl
popa
sub
pop
fsub
mov
or
inc
jbe
add
lea
inc
out
loope
mov
out
into
xor
rcrb
or
dec
les
dec
addr16
shll
std
xor
xchg
scas
rorl
mov
addr16
ret
xor
popf
insl
add
cmpsl
mov
mov
adc
jle
mov
add
jns
sbb
es
dec
add
adc
leave
xchg
lret
mov
fwait
or
aad
insl
into
sbb
mov
mov
fdivrs
xchg
cmp
and
scas
or
clc
jb
stc
xchg
and
xchg
aas
movb
inc
mov
push
push
add
push
aad
or
rcl
jg
mov
jns
cld
xlat
pop
mov
push
lcall
and
mov
leave
xor
jg
mov
xchg
mov
push
hlt
movsl
or
loop
jb
sbb
dec
ss
scas
jl
mov
xchg
push
adcw
xchg
out
adc
cltd
fsubrp
das
push
dec
dec
movsl
xchg
fdivrs
les
ret
inc
outsl
mov
mov
pop
xor
push
jb
jg
push
leave
mov
pusha
mov
xor
arpl
mov
arpl
xor
inc
jle
cltd
sub
inc
imul
mov
aaa
mov
test
fisttps
ljmp
aad
jbe
setle
ficoml
mov
xchg
aam
fwait
in
sub
or
cmp
inc
dec
xchg
pushf
cmp
fwait
fwait
nop
das
pushf
je
fs
push
push
adcb
shufps
sbb
cmp
imul
call
sbb
mov
mov
in
and
push
stc
repz
mov
popl
push
jmp
outsl
cmp
cltd
add
jae
popl
pop
adc
mov
cld
xchg
mov
xor
lcall
pushf
sbb
mov
cmpsb
push
mov
call
bound
mov
xlat
scas
push
pusha
jl
mov
mov
cmpb
xchg
mov
cs
jg
outsb
stos
orl
push
jecxz
xchg
dec
mov
xor
jb
shrb
mov
ds
imul
into
xor
dec
sbb
out
inc
cmp
mov
ljmp
mov
cmpsb
stos
xlat
mov
mov
test
xchg
push
pop
loope
mov
fwait
sbb
adc
scas
loop
repz
addr16
lods
and
js
jp
outsl
pop
les
or
fsubrp
arpl
lret
mov
ret
mov
inc
push
lret
mov
jne
push
adc
call
in
std
cmpsb
mov
jo
mov
pushf
pop
mov
mov
imul
add
jge
aam
idivl
sbb
mov
cs
pop
bound
rcrb
cmp
test
mov
push
adc
push
mov
mov
mov
add
dec
dec
out
and
xor
test
into
cmpsb
shlb
sub
sub
dec
dec
or
mov
dec
clc
test
jecxz
arpl
aam
xor
sbbl
push
jle
xor
cmp
aaa
ljmp
in
xchg
lds
shrb
push
mov
rcl
mov
mov
and
pop
rcrb
mov
jp
nop
movsb
sub
pop
pop
mov
imul
mov
fs
or
jmp
and
rcll
adc
mov
mov
or
add
in
pop
cmpsl
addr16
xor
stos
es
repz
sub
movsl
adc
jmp
jmp
xchg
xor
add
shrl
adc
insb
sahf
inc
cli
or
xlat
mov
aas
cs
ss
fst
loop
adc
sub
dec
add
call
pushf
aaa
das
inc
iret
sbbl
outsb
adc
popa
iret
xor
cmp
aad
cltd
pushf
es
xlat
into
stos
mov
mov
adc
call
enter
xchg
sbb
pop
mov
into
sub
mov
daa
fwait
jmp
mov
mov
pop
fstpl
sbb
dec
imul
fst
std
loop
es
pop
or
dec
ljmp
pushf
test
sub
out
cmp
dec
pop
push
daa
sub
lds
inc
add
rcrb
or
bsr
data16
and
sub
fnsave
push
dec
mov
or
inc
adc
outsb
aam
sbbl
push
xchg
lock
js
testb
mov
or
xor
fdiv
mov
pop
push
into
outsb
pop
xor
jecxz
cltd
mov
fcoml
push
icebp
push
lea
movsl
xlat
dec
push
xchg
jns
inc
insb
lret
icebp
in
lahf
push
mov
inc
aas
es
xor
sbb
and
or
push
icebp
pop
enter
loop
cmp
push
stc
and
lods
shll
pop
cmp
mov
push
mov
mov
mov
jmp
repz
movsb
jge
out
sbb
in
lahf
push
jecxz
sbb
sbb
icebp
pop
aaa
lods
iret
lret
or
flds
out
idivb
mov
lods
pop
mov
sti
pop
test
pop
push
pushf
mov
ss
jmp
in
push
test
cmp
xor
add
stc
sbb
inc
sbb
xchg
inc
or
xchg
cli
and
dec
mov
mov
fwait
mov
pushf
shll
cmc
mov
fcmovnb
cltd
adc
scas
fidivl
push
mov
int3
mov
sbbb
dec
mov
add
sub
lods
lcall
pop
lods
xchg
icebp
mov
aaa
jmp
aaa
fadd
mov
pop
fstl
jp
and
lret
filds
test
xchg
imul
out
lcall
and
pop
jge
incb
or
pop
fcmovnu
xchg
mov
or
outsb
sbb
test
cmp
out
dec
jp
sub
xchg
adc
sti
repz
lea
jl
pop
popf
and
cmp
xor
arpl
imul
xchg
js
mov
stos
mov
inc
jg
fwait
xchg
push
in
xor
imul
add
sahf
xlat
test
xchg
sub
xor
jle
lea
lea
or
jmp
mov
mov
mov
loop
faddl
push
push
incb
arpl
dec
ds
or
adc
out
xchg
stc
stos
mov
out
aad
inc
xor
dec
push
mov
mov
cwtl
ficoms
fsubl
lods
inc
push
xchg
stos
clc
fistl
pop
aas
push
ss
cmp
and
push
inc
test
sti
fwait
and
out
mov
add
mov
pop
jo
in
cmp
add
xor
in
push
dec
pop
xchg
aad
arpl
clc
jbe
pop
loopne
xor
mov
xor
xor
mov
adc
cs
mov
sbb
sub
leave
jle
int
test
or
mov
scas
adc
inc
ror
xchg
pop
shrl
push
jp
ficomps
fmuls
shlb
dec
aad
les
es
pop
test
mov
or
fwait
shlb
or
add
arpl
movsb
insl
or
lcall
jbe
mov
mov
sbb
out
pushf
shl
in
dec
pop
adc
hlt
hlt
sbb
mov
stos
pop
pop
or
and
hlt
dec
stos
cmp
repnz
push
mov
cmp
call
test
add
mov
jnp
pop
inc
cmp
push
add
fsts
ss
ljmp
sti
pushf
ja
scas
dec
sub
int3
repz
inc
sub
and
mov
cmc
xlat
and
dec
cmp
add
loope
or
dec
aas
mov
daa
push
mov
adc
xchg
mov
jo
jp
nop
cmp
sub
arpl
pop
hlt
movsb
sbb
daa
cmp
xor
sub
xchg
cmp
loope
lcall
sbb
pop
adc
xor
and
jae
add
add
stos
mov
adc
jno
jbe
sbb
std
add
mov
sub
std
not
mov
push
ds
mov
xor
fstps
sbb
xchg
pop
lods
cwtl
hlt
push
pop
stc
sbb
mov
test
lea
das
int3
jmp
mov
push
dec
sub
test
pop
jecxz
sbb
subl
dec
testl
subl
dec
cli
and
adc
pop
pop
cli
iret
push
jae
imul
dec
clc
pop
cmp
push
cmp
mov
loopne
add
mov
fs
arpl
call
ljmp
movsl
xchg
and
add
push
cmp
jl
push
lock
repz
repnz
inc
or
in
aaa
dec
in
cmp
addl
clc
adc
mov
adc
lcall
dec
call
dec
outsl
sub
adc
or
pushf
add
mov
rorl
jne
fistl
stc
mov
sahf
fildl
and
rcll
mov
shl
sbb
outsl
imul
loopne
adc
pop
and
les
cmp
int
dec
mov
inc
repnz
gs
arpl
mov
enter
addr16
xchg
sbb
sbb
jmp
ds
sbb
mov
sub
cmp
jo
mov
imul
gs
insl
fistl
shrb
sub
add
and
jnp
hlt
push
mov
xlat
icebp
loop
xor
xrelease
mov
pop
stos
stc
cld
lea
cwtl
push
iret
push
aas
push
add
and
je
mov
filds
mov
sbb
sub
or
xchg
ss
inc
mov
jns
lea
push
add
jb
pop
xchg
jp
mov
mov
mov
ss
pop
xlat
mov
call
loop
ja
sbb
pop
stos
aam
cmc
pop
fs
leave
into
aam
mov
or
je
ja
cmp
mov
push
sub
ficoml
sub
insb
outsl
popf
mov
jbe
xchg
lahf
xorb
dec
sub
andb
push
andl
adc
call
sub
add
pushf
jp
xor
aam
aad
movsl
mov
stos
fcomip
sub
lods
push
mov
aad
int3
push
roll
xchg
inc
mov
aad
push
imul
lret
mov
repz
dec
mov
fiaddl
inc
iret
loopne
xor
dec
sbb
mov
sub
jp
jecxz
gs
in
and
orb
cwtl
xor
sbb
adc
movsl
add
aam
cwtl
aas
int
std
cld
pop
in
or
sbb
add
jae
loopne
insb
add
sub
pop
inc
aas
mov
movsl
test
add
adc
sbb
scas
or
xchg
bnd
xchg
sub
add
jge
aas
sbb
jb
ljmp
inc
jne
dec
pop
inc
outsl
inc
or
xchg
xor
jl
adcl
jmp
pop
int
iret
mov
lods
rclb
dec
lret
xor
mov
lods
lret
adc
mov
xlat
xor
test
push
push
pop
fdivs
pop
pop
subl
and
xor
xchg
xor
bnd
decb
mov
sbb
lret
push
pop
out
cmp
orl
in
out
fmul
sub
pop
pop
inc
ja
cmp
mov
adc
xor
mov
adc
jo
mov
je
ret
fstl
sbb
xchg
idivb
cmc
adc
and
loope
popa
leave
inc
dec
inc
stos
and
enter
aaa
sets
js
and
xchg
add
pop
push
repz
out
mov
mov
cld
mov
inc
cmp
jns
fwait
pop
or
repz
movsl
push
xchg
mov
testb
inc
jmp
divl
push
imul
cmp
fs
and
dec
outsb
mov
pop
pusha
test
js
xchg
ret
test
cmpsl
leave
push
pop
int
popa
push
test
cld
pop
stos
aaa
pop
mov
xlat
into
xor
rcll
int
mov
adc
push
xor
inc
repz
cmp
mov
dec
mov
mov
dec
out
xchg
rolb
inc
mov
dec
pushf
cmpsb
popf
int3
pop
lea
cmp
dec
sub
dec
icebp
cwtl
fnstenv
enter
pop
pop
pop
imul
xor
jp
add
inc
fwait
mov
add
add
sub
popl
xchg
sbb
ss
fidivrl
pop
xlat
mov
jl
jle
sub
xlat
sub
fnstsw
sbb
pop
loope
fwait
pop
jmp
jo
adc
lods
cli
insb
push
dec
out
xchg
pop
out
outsl
int
mov
mov
sub
jne
push
dec
xchg
push
cmp
add
lret
jo
cmp
dec
or
xchg
pop
cli
mov
subl
sub
mov
in
mov
and
icebp
push
sub
lods
in
clc
out
andl
adc
xchg
cmp
nop
adcl
pop
fidivs
sub
into
aaa
int
xor
add
jge
aas
lcall
ret
mov
faddl
inc
ja
sbb
stos
jl
pop
ds
repz
cmc
inc
popa
add
mov
pop
pop
dec
xor
pop
xchg
cmp
mov
leave
jo
movsl
pop
int
adc
inc
cmp
bound
dec
cmp
addl
clc
xor
adc
lock
movsl
repnz
jl
inc
testl
cmc
mov
out
xchg
mov
mov
int3
xor
mov
inc
ret
jns
cmpsl
sti
jae
push
aad
push
xor
dec
push
dec
scas
xor
adc
mov
lock
fimuls
xchg
sub
push
jae
cld
lret
inc
cmp
mov
test
mov
mov
xor
cmp
cmp
enter
fdivrp
pop
lods
pop
sti
arpl
xchg
pop
push
pop
pop
jbe
lds
and
iret
pop
repz
iret
jg
mov
mov
mov
mov
mov
jne
sub
mov
push
test
xchg
add
sbb
jno
into
mov
jbe
inc
ljmp
xor
sbb
push
cmpsb
jle
test
test
aaa
loopne
daa
cmp
mov
xchg
enter
fs
sbb
gs
cmpsl
lods
cmpsb
scas
negb
and
lcall
test
enter
mov
arpl
loop
aam
adc
icebp
sbb
paddq
aad
stos
sub
in
loopne
cmpsb
jbe
scas
leave
in
xchg
jmp
mov
xchg
lods
add
lret
cmpsb
roll
push
mov
cmp
xchg
mov
push
in
repnz
jl
sbb
test
les
xchg
scas
sahf
rorl
shrl
int
es
mov
cs
fsubs
das
jne
dec
sub
inc
pop
and
addr16
fadds
pop
adc
out
cmp
inc
mov
pop
jmp
testb
dec
imul
loopne
std
and
adc
adc
sbb
xchg
cmp
and
hlt
pop
in
test
stos
in
lods
hlt
push
daa
or
sbb
inc
cmc
push
subl
xor
test
inc
or
fimull
cltd
mov
shr
xchg
ret
je
out
lods
push
push
shll
cs
pop
lret
mov
insl
mov
ljmp
pop
adc
sub
jge
in
jno
fstl
lcall
xor
sbb
xchg
jge
sbb
punpckhdq
adc
inc
adc
and
les
push
dec
add
dec
mov
cmp
ja
daa
cmp
adcl
mov
test
sarl
push
pop
mov
push
addr16
pushf
shlb
insl
pop
rorl
pop
out
sub
adc
inc
loop
nop
pusha
push
mov
pop
cli
push
les
outsl
add
lcall
or
mov
shl
pop
hlt
jae
xor
dec
inc
and
adc
pop
and
or
cmpsl
dec
inc
dec
inc
std
bound
mov
popf
iret
push
fld
mov
xchg
mov
out
dec
shrl
mov
hlt
add
sbb
add
lds
rclb
adc
stos
and
je
and
clc
ljmp
push
xor
repnz
addr16
mov
mov
inc
dec
cmp
cltd
mov
pop
in
dec
mov
loopne
fstpt
mov
dec
inc
pop
cwtl
jle
addr16
xor
mov
fidivrs
jo
out
sbb
cmp
pusha
push
add
push
mov
sbb
mov
jno
dec
and
rcrl
js
xchg
jbe
ljmp
and
je
sub
mov
das
icebp
nop
xchg
rol
das
stos
aaa
pop
mov
sbb
mov
mov
mov
scas
clc
in
shlb
jge
xor
call
test
sbb
cmc
mov
mov
scas
jl
fs
xchg
out
adc
enter
push
or
mov
js
std
pop
or
xchg
loop
rclb
dec
cmpl
in
aad
jle
mov
leave
mov
xchg
mov
add
mov
jno
out
cmpsb
add
jmp
inc
lods
sbb
ljmp
sbb
xchg
adcb
mov
icebp
pop
loope
lea
push
mov
idivl
xor
movsb
xor
sub
stos
int
xor
test
mov
out
add
and
adc
mov
cmp
add
out
adc
inc
mov
outsb
gs
xchg
lock
jmp
out
lcall
pushf
xor
mov
dec
test
mov
xchg
nop
add
ja
test
add
pop
adc
pop
incb
imul
cwtl
adc
arpl
dec
push
daa
mov
mov
stos
fstpt
inc
psubq
cltd
jnp
in
or
cmp
and
andl
sub
fisubrl
and
add
cltd
jg
mov
inc
bound
pop
mov
adc
or
push
mov
daa
fstps
sub
pop
push
loop
push
jno
mov
cs
xchg
adc
out
test
clc
mov
dec
xlat
dec
outsl
add
inc
pop
or
fisubrs
lret
mov
cmpl
mov
or
sahf
sub
out
jno
cmp
mov
mov
xchg
jae
mov
ljmp
out
and
dec
xchg
xor
cmp
lret
repnz
inc
movsl
or
push
mov
jl
mov
cmp
xchg
push
popf
mov
or
popa
and
push
cld
mov
fsubrp
loope
aaa
out
xchg
xor
sub
jo
mov
xchg
sti
adc
cmp
mov
sub
pop
test
lret
sub
ret
pusha
pop
pop
xchg
and
adc
and
push
push
cwtl
adc
sbb
fwait
out
push
mov
stos
leave
movsb
mov
lahf
mov
jnp
cmc
mulb
imul
mov
xor
cmp
mov
jns
imul
inc
push
xchg
mov
pusha
loope
or
in
sub
jecxz
rol
pop
dec
int3
or
xorl
cmp
mov
loope
rcll
sub
sbb
and
sbb
push
out
dec
out
xchg
dec
pop
fidivrl
arpl
in
push
sub
mov
mov
in
xchg
rcrb
push
or
mov
ret
sub
lret
call
dec
dec
in
mov
or
add
pushf
push
jle
mov
mov
stos
shrl
bound
xor
push
ja
mov
cs
aaa
xchg
inc
inc
sub
push
inc
jp
push
jno
test
push
mov
out
mov
dec
imul
ss
fiadds
jns
cmp
xchg
adc
leave
into
sbb
negb
add
mov
xor
movsl
sub
ficomps
pop
or
lcall
out
in
fisubrs
dec
jg
cmp
sub
fcoml
cmp
xchg
xchg
pop
aam
lods
imul
test
mov
fcoms
mov
sbb
jmp
pop
cltd
mov
in
adc
xchg
imull
push
adc
jg
cltd
jp
movsl
pop
push
sti
js
filds
mov
mov
sbb
push
fisubs
les
dec
insb
xchg
std
cmc
std
ljmp
dec
jge
sbb
cmp
notl
cmp
mov
mov
pop
jnp
jno
cwtl
fistps
dec
mov
xchg
or
add
imul
int3
aam
adc
mov
lea
ds
daa
cld
adc
mov
scas
popa
sahf
outsb
and
xchg
cmpsl
outsb
jne
cmpsl
inc
xor
mov
enter
and
pop
adc
popa
ret
cli
xor
jmp
sub
dec
xchg
cltd
or
jns
imul
mov
pop
dec
std
popf
sub
clc
cmp
and
enter
lret
jp
iret
loopne
mov
mov
mov
out
shrb
add
and
mov
jp
or
mov
jmp
shlb
gs
out
mov
fnsave
addr16
movsb
jne
shl
xor
cld
mov
add
mov
loope
mov
dec
mov
shll
inc
pop
repnz
bound
mov
shll
lea
fwait
out
sub
jno
sti
bound
loop
test
int3
sbb
mov
lods
mov
rcrb
sub
or
mov
fidivrs
xor
fcomps
lods
iret
jecxz
mov
cmpl
cltd
aaa
cmp
insl
add
cltd
mov
mov
addr16
push
xor
sub
test
nop
aas
arpl
mov
rcrb
fcomps
fidivrs
mov
loop
xchg
mov
pop
mov
mov
hlt
mov
loop
loopne
nop
addr16
imul
loop
sbb
rcl
cs
sbbl
fcompl
lods
je
fcoml
gs
dec
jno
dec
jl
shrl
lret
scas
dec
insl
inc
dec
pop
pop
push
in
mov
clc
mov
sub
ret
test
jecxz
jmp
fstpt
pop
ss
das
inc
push
sub
imul
sbb
mov
mov
inc
push
cmpsb
pop
daa
push
sub
sbb
xor
repnz
mov
push
addl
jge
xchg
mov
popf
mov
dec
jg
lcall
in
push
push
movsl
scas
sbb
rcrb
mov
pushf
mov
add
jecxz
addr16
bound
adc
pop
sbb
stc
jbe
mov
cli
or
inc
add
xor
je
adc
fsts
xchg
push
xchg
and
xchg
cwtl
icebp
dec
jg
fsubrs
xlat
outsb
cmc
add
sbb
and
in
add
dec
mov
sahf
rclb
lea
sbb
xchg
into
or
aam
add
jo
das
aad
inc
sbb
or
add
jmp
rcr
xor
popf
xor
in
cwtl
dec
rorl
dec
dec
ucomiss
sbb
add
cmp
inc
or
adc
lcall
cmp
add
test
mov
lret
dec
pop
xor
incl
out
pushf
icebp
sbb
jl
clc
adc
hlt
jnp
popa
repz
push
and
inc
inc
inc
imul
enter
ret
jecxz
add
and
pop
ja
xchg
mov
xor
xor
cmp
inc
jno
or
mov
mov
in
gs
xchg
inc
lods
pop
dec
addb
fistl
fldt
jns
idiv
shl
cmp
add
dec
test
mov
clc
cmp
std
enter
pusha
mov
sarl
xchg
gs
inc
jns
sbb
dec
push
inc
popf
inc
in
jge
into
sbb
imul
cmp
cmpsl
cmc
insl
in
jmp
mov
push
pop
cmp
jb
ljmp
jge
jecxz
and
push
fmull
dec
inc
pop
xchg
das
popf
or
lcall
inc
in
fnstenv
dec
loopne
add
test
mov
scas
lcall
sbb
ss
push
nop
mov
insb
movsl
scas
xor
icebp
jb
lds
imul
sar
pop
out
jle
xchg
jle
aas
sbb
ret
sbb
mov
fsubl
je
jle
aas
push
je
imul
lock
aad
cmp
mov
jo
call
mov
xlat
push
add
fucomip
fisttpl
fstpt
in
xchg
ret
fs
pop
insb
rcrl
int
cwtl
cmp
mov
out
xlat
or
cli
mov
aad
mov
pop
push
out
stc
and
lea
lcall
movsl
dec
sub
jg
sub
dec
jns
rorl
push
hlt
daa
mov
mov
mov
repnz
je
sbb
sbb
out
pop
stos
pop
adc
mov
pop
xlat
shl
inc
imul
ljmp
jl
pop
int3
mov
popf
cmp
mov
cmp
dec
sar
fnstcw
cs
push
mov
cmp
pop
js
pop
je
jo
jbe
pop
pushf
movsl
jl
fldenv
adc
sti
sub
cmpsb
push
insb
out
inc
pop
cltd
xor
nop
shr
outsb
and
in
icebp
xlat
pusha
push
shr
es
pop
jbe
bound
cwtl
inc
or
int
enter
cmp
cld
nopl
lods
std
pop
pop
mov
inc
add
sbb
mov
push
orb
cmp
mov
mov
ffreep
cli
or
xchg
out
insl
xchg
sarb
xchg
mov
ljmp
dec
add
adc
xchg
pop
int
mov
mov
mov
jno
jmp
mov
bound
mov
in
mov
pop
lret
push
cmp
sbb
mov
pop
push
or
outsl
stos
mov
das
ss
ds
movsl
fisttps
push
insb
xchg
rorl
push
mov
sub
mov
mov
movb
xor
pop
cmc
add
pop
push
push
lea
and
pop
ds
inc
daa
int3
adc
dec
lea
fisubs
jle
jl
cwtl
inc
sbb
mov
jb
xor
adc
inc
sub
js
cmp
aam
or
js
mov
add
imul
nop
dec
stos
sub
ret
lahf
lret
sbbb
test
push
or
lahf
cmp
cmpsl
movsb
in
add
xchg
dec
and
loopne
push
mov
or
rcrb
and
call
sbb
jl
stos
pop
jge
push
adc
fmulp
aas
or
mov
hlt
sbb
xor
out
mov
and
dec
mov
pop
xchg
popf
and
stc
inc
pop
dec
adcb
push
xchg
pop
inc
inc
data16
enter
sub
data16
mov
repnz
repz
gs
mov
loope
nop
add
pop
sub
jns
fxch
popf
sarl
fnstcw
or
mov
push
inc
iret
cmp
mov
stc
mov
inc
xor
int3
inc
sub
mov
lock
dec
or
test
mov
or
mov
and
mov
push
test
imul
jbe
ror
pop
enter
testl
cmc
cmpsb
repz
or
mov
fsubs
xchg
push
adc
xchg
xlat
jp
in
xor
cmp
popa
scas
sbb
imul
test
das
adc
lds
aam
xchg
mov
add
push
shrl
pop
dec
mov
cmp
inc
jnp
int3
push
xor
jg
and
dec
jg
lcall
adc
shll
rclb
insl
fdivr
cmp
daa
fildl
sbb
dec
daa
inc
std
ja
orb
lock
jl
pop
sub
mov
fwait
dec
or
xor
push
incl
pop
adc
xor
cmpsb
mov
mov
push
cmp
f2xm1
iret
insb
dec
insb
lahf
lods
ficomps
enter
mov
push
mov
sbb
push
and
jg
xor
sbb
push
mov
jmp
xchg
sub
ss
pop
das
jecxz
or
jecxz
movsb
cmp
sbb
cmpsl
adc
daa
int3
stos
fisubl
jno
pop
fidivrl
jo
out
add
xchg
adc
xchg
xor
sbb
xor
xchg
cmpsl
sbb
pop
iret
popf
push
fimuls
xchg
into
lods
out
icebp
lcall
iret
scas
pop
shl
mov
imul
gs
das
push
fs
pop
sbb
lcall
cwtl
test
push
lcall
add
idiv
test
mov
repz
or
in
mov
and
mov
mov
mov
loop
lcall
xchg
mov
mov
mov
out
inc
fwait
jp
cmp
ss
in
lret
sub
out
and
cmc
push
inc
cmp
nop
xor
loopne
andb
mov
or
outsl
out
repnz
rcrb
pop
xorl
lods
loopne
aad
xchg
xchg
in
dec
movl
addr16
add
bound
frstor
xchg
push
shll
xor
inc
mov
out
nop
out
add
fnstcw
pop
stos
hlt
sub
jb
mov
lahf
dec
mov
xchg
into
push
mov
repz
stos
aam
mov
jp
insb
sarl
incb
mov
int
sarb
sahf
adc
sub
and
jg
sub
dec
scas
std
xchg
push
sbb
bound
xchg
movsl
pusha
out
and
mov
sbb
xor
xchg
mov
mov
sub
leave
clc
out
ss
imul
in
mov
jns
fdivrs
jb
sar
jno
ret
sub
or
daa
cmp
jg
mov
pop
xchg
int
pop
stos
push
add
inc
jge
cmp
add
ror
inc
int3
push
xor
ret
out
mov
push
jge
mov
lret
es
adc
shr
lds
mov
inc
aam
enter
pushl
lds
and
cwtl
push
adc
and
jne
sbb
add
xchg
jmp
pop
pusha
xor
mov
mov
pop
cmpxchg
adc
sahf
nop
pop
mul
and
shl
adc
fsubl
andb
fmull
mov
sub
mov
xchg
xor
decb
ret
mov
jmp
jecxz
xchg
cwtl
aad
stc
sub
sub
add
and
rcrl
mov
test
rcl
pop
inc
adc
mov
jnp
add
push
cmpsl
inc
aas
out
xchg
inc
xchg
bound
mov
lret
dec
push
sti
ljmp
push
xchg
cmpsb
xchg
adc
dec
mov
cltd
inc
jns
cld
sub
test
leave
rcl
mov
outsb
arpl
loop
and
sbb
jge
push
cltd
shll
shrl
inc
jmp
inc
push
cld
push
xlat
lea
popf
in
sarl
aam
inc
pop
xchg
popf
fidivrs
incb
jmp
xor
add
inc
dec
xchg
imul
xor
push
loopne
std
repnz
mov
push
pop
subb
jo
enter
sub
pop
xorb
cmpb
cwtl
push
scas
and
imul
dec
pushf
jne
dec
or
imulb
mov
and
in
cmpl
sub
lock
aam
mov
stc
test
aam
inc
inc
pop
in
push
jmp
das
mov
xchg
xlat
lds
outsl
dec
mov
gs
fwait
cli
loop
mov
pop
sub
arpl
fstpl
mov
fidivrl
outsl
push
adcb
sub
ds
mov
lret
es
mov
cld
jns
jle
sbb
call
or
add
cltd
mov
sub
imul
pop
xchg
jns
orb
int
or
popa
cmc
lret
xchg
outsl
dec
mov
xchg
jecxz
jecxz
subl
rcr
sbb
dec
arpl
pop
dec
ja
xchg
bound
lcall
lea
mov
push
stc
sub
ficompl
jmp
inc
loopne
inc
mov
pop
inc
ss
mov
mov
xchg
inc
xor
push
fisubs
popa
push
jns
add
and
shrb
push
pop
enter
outsl
and
adc
xchg
cmc
out
and
shlb
aad
inc
xor
stc
cmp
pop
fsts
cmp
mov
imul
test
sbb
cmpsb
mov
aas
push
fcmove
sbb
fldenv
xchg
out
loop
in
data16
or
push
call
in
pop
cmc
imull
fwait
and
xchg
mov
sub
cli
sbb
pop
ret
leave
jl
insb
idiv
cmp
jecxz
outsl
lock
sub
pop
xor
es
gs
push
and
ja
lods
scas
nop
aas
jno
mov
cs
pop
lock
xchg
pop
sbb
mov
sarl
sub
add
and
mov
mov
cs
call
mov
fadds
push
lods
add
push
pusha
ficoms
push
mov
insl
push
stc
rorb
mov
add
sub
in
xor
jne
push
subb
lods
testb
movsb
cli
sahf
jo
and
fistpll
fbld
fiadds
int3
sti
jmp
inc
mov
inc
mov
xchg
mov
mov
jns
arpl
mov
xor
jg
cmp
pop
add
cmp
roll
sbb
lods
dec
notb
xchg
dec
cmp
inc
ret
inc
in
adc
mov
xchg
sti
enter
movsb
jmp
cmp
mov
push
sub
cltd
xchg
out
jecxz
mov
fstpl
pmaddwd
icebp
inc
ja
jno
imul
push
push
jmp
scas
or
lock
mov
inc
xor
repz
jge
jge
fcmovnbe
add
pop
mov
or
mov
sahf
push
shl
outsl
pop
jecxz
lock
lods
clc
pop
mov
fwait
insb
loopne
shll
into
add
jmp
xor
js
gs
sbb
or
lods
or
jbe
dec
pop
mov
dec
xchg
push
call
sub
mov
adc
cmp
xchg
mov
and
cmpl
lret
sub
hlt
add
lods
xchg
sbb
hlt
std
ret
bound
outsl
push
xor
decl
xor
sub
jno
inc
loopne
dec
inc
sbb
xchg
sub
sbb
dec
andb
inc
jae
push
and
push
test
sub
mov
adc
adc
test
mov
jecxz
jno
imul
sub
in
int3
sahf
pop
repz
test
dec
cli
leave
out
pop
cld
insl
int
mov
push
stc
aaa
pop
enter
mov
iret
orb
enter
mov
add
lret
gs
scas
pop
lods
jp
iret
jmp
pop
test
and
ret
sahf
dec
loop
xchg
std
sub
sbb
imul
and
inc
jo
inc
dec
cmpsb
test
inc
das
ss
in
xchg
mov
push
cmpb
pop
or
cmc
sub
cltd
fsubrl
mov
cwtl
add
aam
inc
lret
or
rcl
push
and
mov
mov
jmp
or
jg
cmp
cltd
push
sbb
sbb
sahf
mov
pop
xor
ss
add
loope
in
push
test
jnp
and
loope
out
xchg
pop
jo
pop
dec
subl
mov
mov
push
jge
ja
sub
mov
cwtl
mov
add
stos
cmp
imul
add
mov
movsb
sti
addl
out
jno,pt
inc
lret
in
inc
sub
add
mov
popa
stc
stos
fiaddl
pop
aaa
lahf
test
sub
negl
test
inc
test
aas
lds
ret
out
mov
mov
or
xchg
ss
and
and
mov
inc
fucom
push
push
cwtl
mov
fidivl
movsl
rcrb
or
xorps
mov
test
xchg
divl
decb
adc
add
push
adc
cmpsb
ss
sbbb
xchg
mov
int3
or
xchg
mov
iretw
mov
push
fildll
xor
pop
cwtl
outsl
sbbb
push
hlt
inc
mov
mov
stos
mov
push
pusha
inc
push
cs
fst
insb
cmp
fcmovnu
imul
aas
mov
sbb
jecxz
jp
fwait
dec
mov
scas
mov
mov
stc
xchg
inc
pusha
mov
inc
adc
xchg
mov
inc
xchg
mov
inc
push
out
popa
xor
bound
xchg
jle
subl
sahf
int
out
xchg
xchg
push
pusha
lods
jnp
cmp
or
enter
push
inc
push
lahf
loope
lret
inc
dec
or
lcall
out
cli
daa
jle
or
std
bound
pop
call
mov
sub
lods
push
xor
sbb
xchg
out
hlt
jmp
mov
cmp
out
cmp
and
jbe
es
mov
outsb
push
sbb
xchg
sar
movsb
aam
sbb
cmp
imul
xchg
rclb
push
mov
clc
js
test
mov
es
jno
movl
arpl
leave
scas
loop
mov
xchg
or
es
ficomps
in
xchg
clc
ss
dec
sub
dec
mov
push
xor
xlat
push
push
or
mov
add
push
xchg
lods
fimull
icebp
out
cltd
or
cmp
pop
mov
inc
add
mov
add
add
pop
sub
test
or
mov
in
jb
inc
cmpsl
fists
mov
pusha
add
popf
push
ljmp
or
xlat
pop
ss
std
push
pop
dec
lret
and
jbe
xchg
and
jp
popf
sub
cmp
dec
fldl
decb
fidivrs
pushl
inc
xchg
aad
mov
jmp
mov
adc
push
leave
add
pop
jp
lahf
sbb
lahf
inc
fdivr
lock
and
cld
call
scas
push
stos
movsl
testl
cltd
xchg
pop
sbb
adc
inc
xchg
ret
lock
push
cmp
fwait
dec
push
jne
xchg
fadds
inc
cli
mov
cmp
jle
aad
cs
push
outsl
push
xor
xor
dec
cwtl
shlb
push
leave
and
add
jns
fdivr
sub
mov
aaa
xor
aam
je
sub
rol
insl
stos
sub
mov
aad
je
sahf
and
jbe
add
dec
jle
xchg
push
sbb
jp
shll
out
in
int
cmp
enter
cmc
repnz
or
push
cltd
mov
add
ds
mov
imull
ljmp
pop
push
testb
inc
jb
pusha
movsb
scas
in
push
popf
mov
push
add
fucom
mov
adc
rclb
lcall
mov
jle,pn
cli
push
and
fs
fldcw
and
push
aas
mov
insb
iret
and
clc
jecxz
pusha
cwtl
or
das
push
incl
sbbl
xor
jecxz
repz
out
mov
in
sub
jmp
fildl
into
jbe
fistpll
sbb
fiadds
inc
mov
push
mov
push
nop
cmp
xchg
cmp
dec
dec
push
push
roll
ljmp
pop
into
lds
push
nop
cwtl
adc
js
movsb
jnp
cli
adc
jl
mov
js
adc
int
cmp
add
pop
jle
scas
int3
clc
push
popf
ret
jns
add
popa
mov
orl
sub
push
adc
aad
popa
adc
out
pop
dec
push
cmp
pop
mov
out
sti
sbb
adc
mov
cmp
xchg
nop
dec
sbb
push
fnstsw
nop
cmp
pop
fdivs
nop
out
cld
xchg
xchg
cmpsb
sbb
xor
cmp
jbe
mov
and
or
ds
shll
sbb
ret
jmp
inc
call
pop
add
add
jbe
popa
inc
mov
mov
xchg
cmpsl
fimuls
ljmp
adc
sbb
sub
dec
shrb
mov
adc
sahf
shrl
mov
insb
out
test
fistps
xchg
in
rclb
pop
idiv
push
loop
rol
mov
dec
adc
add
int3
mov
sbb
rcrl
out
aaa
jns
adc
sarl
jg
int
and
rcrl
push
mov
stos
sub
mov
xor
jmp
add
mov
fsts
sar
scas
fcompl
adc
mov
leave
icebp
xor
adc
stos
mov
cmp
mul
mov
insb
hlt
popa
inc
ja
in
push
xor
std
es
shr
inc
in
pop
or
adc
fsubrl
xchg
push
mov
ss
out
pop
iret
cli
aad
sti
adc
leave
xchg
mov
inc
pushf
pop
mov
je
and
out
ficoml
cmpsb
adc
test
movsb
adc
sub
dec
fchs
xchg
ficomps
cmp
inc
shrb
mov
jnp
mov
cmp
jns
mov
mov
jmp
loop
pop
dec
in
mov
addr16
mov
ds
push
or
mov
lret
and
dec
add
xchg
mov
push
inc
lahf
es
jp
repnz
inc
loopne
cmp
mov
push
lret
mov
push
adc
les
lahf
xchg
scas
xchg
lahf
test
sbbb
xchg
xchg
fsubr
shrl
sub
notb
pushf
decb
sbb
xlat
pop
push
out
insl
push
idivb
push
sahf
pop
je
or
lret
xor
test
mov
add
xor
xchg
mov
mov
daa
in
sbb
fnstcw
or
push
lds
or
int3
int
cld
push
pop
daa
std
xor
jp
push
test
js
cmp
inc
pop
jo
inc
adc
cltd
inc
pop
mov
inc
mov
or
or
sahf
jns
sarl
add
sbb
mov
dec
repz
add
jae
sub
lret
repnz
adc
dec
xchg
hlt
mov
push
aad
adc
jmp
mov
das
jecxz
mov
and
and
jecxz
int3
or
insb
adc
pop
aaa
cltd
mov
sbb
lds
pop
outsb
jno
push
popa
xlat
jo
call
adc
lock
push
inc
ja
cld
pop
sti
cmc
cltd
rol
mov
hlt
mov
pop
das
cmpsl
mov
push
test
sbb
pop
and
pop
and
xchg
sbb
jmp
rcrb
xor
jp
lea
leave
pop
sub
int3
add
push
imul
cmp
scas
cwtl
out
xchg
pop
out
lods
xor
mov
and
add
jbe
jecxz
jae
inc
mov
mov
add
orb
mov
push
mov
xchg
pop
jg
repnz
fdivrl
cmp
push
dec
dec
add
rclb
mov
aad
jmp
pop
pop
ja
popf
stc
lcall
inc
clc
ljmp
adc
jnp
sub
movsb
mov
jne
js
test
adc
and
mov
jo
ret
popl
cmpsb
rorb
sub
dec
inc
xor
sbbb
adc
testb
cmpb
jp
push
mov
les
mov
fwait
repnz
push
push
push
xchg
mov
jo
add
ret
and
push
add
push
movsl
inc
into
ds
iret
xchg
push
fadds
out
push
daa
cmp
mov
popf
mov
jmp
cwtl
aam
aaa
jns
jg
jmp
cli
jl
and
aaa
cs
xchg
sub
out
aad
hlt
xlat
mov
xchg
jle
into
mov
popa
push
test
sbb
jp
mov
outsl
mov
dec
mov
dec
xchg
lret
call
and
and
ds
lods
dec
mov
cs
jg
leave
insl
pop
push
add
fnstsw
adc
inc
fwait
scas
pop
xor
in
je
outsl
movsl
push
mov
sbb
jbe
aad
xchg
popa
test
or
mov
in
push
xor
add
dec
inc
pop
ficompl
setge
cmp
or
iret
shrl
cmpsb
inc
lods
cmp
xor
stos
or
pushf
adc
stos
and
fs
push
lods
jl
rolb
mov
mov
test
lret
sub
dec
mov
inc
sahf
push
icebp
lcall
xchg
lds
mov
and
cmp
aas
mov
loope
aam
pop
fisubl
push
mov
cwtl
loopne
xor
scas
lret
dec
sub
cmpsl
cwtl
sarb
ja
movsb
or
lcall
xor
test
dec
pusha
addr16
out
clc
incl
and
fidivrl
jle
xchg
push
mov
mov
xchg
jnp
sahf
addr16
lods
jecxz
xor
pop
mov
arpl
fisubrl
in
push
aad
roll
xlat
in
push
cmp
pop
sub
xchg
ds
xchg
je
add
sahf
mov
pop
mov
imul
inc
call
flds
fidivrl
xchg
jg
lret
lea
int3
notb
or
test
iret
fs
adc
mov
bound
jnp
stos
dec
mov
daa
inc
addr16
xor
jl
pusha
inc
outsb
or
data16
push
inc
adc
add
inc
ljmp
ror
mov
dec
and
test
pop
in
jmp
mov
mov
int
icebp
sahf
aaa
push
data16
pop
push
inc
sub
mov
add
in
fldenv
hlt
lock
lea
ljmp
push
icebp
mov
mov
sub
mov
test
testb
mov
inc
push
jnp
clc
testb
ret
or
mov
mov
lock
inc
lock
out
pushf
or
mov
fbld
or
and
and
push
sub
fsts
dec
sbb
or
scas
mov
adc
sbb
rorl
outsb
sahf
in
ja
call
mov
in
and
push
mov
or
cmp
mov
loop
sahf
lea
scas
dec
mov
sbb
dec
lods
in
mov
mov
adc
pop
pop
sbbb
xchg
or
lahf
mov
ret
cwtl
popa
sub
mov
push
xor
lods
test
or
nop
cmp
and
repnz
mov
and
cwtl
xchg
mov
jmp
pushw
inc
sub
xor
cmpsb
xchg
pop
dec
rorl
or
xchg
push
test
or
push
sub
xchg
mov
sbbl
sarb
shlb
repz
movsb
fisttpl
sbb
test
pop
sbb
ret
call
imul
addr16
loop
nop
sahf
pop
and
pop
int
or
xchg
out
pop
mov
add
jns
fcmovne
imul
push
ficoms
movsb
pop
cmp
imul
arpl
out
mov
push
cmp
mov
or
lea
push
mov
jge
mov
mov
mov
stos
aad
xlat
dec
movsb
std
std
enter
jmp
push
push
mov
sub
inc
and
into
push
jnp
pop
lds
xchg
pop
mov
sub
ficoms
pop
decb
cmc
mov
mov
int
pusha
inc
data16
xchg
std
mov
mov
add
cmp
cmp
gs
jmp
cwtl
push
mov
cmpsl
in
inc
aas
in
and
notl
jp
inc
sbb
mov
shlb
or
mov
pop
push
jecxz
add
pop
sub
insl
cs
inc
inc
pop
nop
aaa
lods
sbb
mov
js
push
iret
inc
xchg
jp
dec
mov
lret
enter
xchg
dec
mov
data16
xchg
nop
lret
sahf
jmp
lahf
inc
fistpll
jb
jno
in
inc
or
cmpsl
pop
sarl
fstpl
fsubs
or
fisubrs
jmp
mov
movsl
push
mov
mov
push
inc
mov
or
inc
xorb
cmp
jo
outsl
jb
ret
mov
mov
push
ret
xlat
push
cmpsl
sti
mov
xchg
test
xor
push
or
pop
ja
out
sub
mov
out
and
pop
mov
cmpsl
insb
push
dec
aaa
xlat
lea
outsl
pop
pop
and
jecxz
mov
lock
sub
sub
dec
mov
and
in
scas
sub
xchg
mov
in
mov
mov
xor
dec
ss
pop
inc
push
loop
jl
mov
out
push
test
movsl
sub
nop
shl
divl
mov
es
loopne
xor
pop
arpl
xchg
out
inc
lock
daa
scas
cmc
insb
scas
dec
inc
and
mov
add
mov
call
fildl
ja
dec
mul
and
int
lahf
fdivs
pop
hlt
into
lcall
jbe
sbb
ljmp
es
add
test
dec
mov
sub
cmc
cmp
pop
jne
pop
fmulp
add
xor
out
loop
stc
out
cmp
leave
incl
push
pop
add
mov
mov
push
mov
inc
adc
insl
lods
cmc
lcall
fildl
push
pop
movsl
loop
mov
push
fldlg2
push
fdivr
dec
jle
mov
shrb
xchg
rclb
push
fdivs
mov
call
pop
or
fmuls
mov
sub
int
mov
jge
fcoms
sub
bound
std
mov
fdiv
push
cmpb
fdivl
xor
je
mov
cmpsb
push
pop
lock
mov
pushf
jp
xchg
imulb
loope
pop
jns
scas
add
mov
inc
stos
pop
test
in
push
mov
pop
lret
mov
xor
movsl
or
insl
sti
cmp
lods
jns
lret
lret
add
lock
imul
gs
xor
xchg
mov
insl
adc
in
shr
out
push
xor
fs
pop
mov
pop
test
mov
xor
aam
mov
cld
mov
add
adc
xchg
inc
imul
mov
andl
xor
insb
jmp
test
xchg
adc
xor
sbb
xchg
pop
lods
xchg
cmp
jb
cmp
clc
jle
and
fnstenv
pop
cmpsb
xchg
rcr
cmc
aaa
mov
pop
loopne
xor
insb
cmc
add
je
pop
mov
fstl
cltd
xor
push
jnp
adc
pop
xchg
fs
hlt
xchg
push
in
aam
sbb
add
add
xchg
sbb
jmp
push
dec
int
jo
push
and
sub
cmp
popf
jl
icebp
int3
and
fisubl
or
mov
cmp
repnz
jbe
sti
test
xchg
add
mov
mov
lods
aas
shrl
loopne
push
dec
lret
add
cli
mov
imul
push
mov
hlt
lods
pop
xchg
fistpl
add
cld
mov
pop
je
jp
and
or
mov
push
repz
dec
cmp
xchg
das
std
mov
pop
bound
lods
rcrb
xchg
inc
mov
mov
scas
and
xchg
fwait
inc
ja
pop
jns
sub
or
xor
movsb
push
cltd
daa
mov
push
sbb
lods
negl
cmp
dec
adc
lret
pushf
push
jns
xchg
outsb
push
dec
lret
notl
xchg
aaa
push
sub
aaa
and
or
sahf
jno
fcom
insl
repnz
mov
dec
mov
stos
push
movb
js
dec
xor
sub
movsb
icebp
shl
fldl
cld
jbe
andl
ret
sarl
cmp
mov
hlt
xchg
jae
lods
in
mov
clc
mov
repz
pop
sub
add
sub
sbb
lods
mov
dec
aad
inc
cmpsl
mov
jnp
cmpsl
lods
pushf
cwtl
popa
std
andl
push
pop
sbb
cmp
gs
mov
sti
push
ret
jo
je
mov
add
cmp
jp
dec
mov
push
xor
dec
push
xchg
jle
cmp
cmpsl
xor
and
int
sbb
push
sbb
cwtl
scas
je
xchg
repnz
aas
outsb
outsb
add
xchg
into
int3
scas
sub
outsb
inc
or
scas
pop
push
testb
mov
push
jmp
ret
jge
add
jo
scas
adc
mov
shl
adc
insl
sub
push
in
stos
mov
stc
jno
decl
rcll
insb
test
les
mov
xor
call
xor
mov
sub
adc
sahf
or
lea
les
subb
pusha
add
cmpsl
cwtl
fcmovbe
sub
jp
pusha
insb
inc
xor
lahf
sub
or
add
sub
rcrb
out
pop
dec
fs
cmc
insb
enter
insl
int3
fld1
mov
mov
xor
xchg
dec
pusha
sub
push
mov
addl
mull
fcompl
adc
js
sub
mov
insb
popa
pop
dec
inc
mov
add
call
cwtl
dec
cmpsb
xlat
repnz
cmc
add
rcrl
insb
cltd
ret
pushf
xlat
xor
and
mov
and
lahf
jb
das
ds
aas
xchg
or
je
mov
xor
cmp
sbb
inc
and
cmp
dec
push
jl
push
jae
pusha
rclb
cld
push
jo
insb
fdivrl
add
in
mov
jp
or
in
mov
dec
pushf
test
push
mov
fidivs
pop
sub
mov
mov
mov
rorb
sti
jl
sub
mov
test
jbe
mov
jl
jg
mov
push
jmp
cmp
mov
ja
sub
xchg
ljmp
or
push
pop
loop
and
dec
loop
or
fs
or
ret
lret
cltd
xchg
jb
push
xor
shl
xchg
aaa
mov
shl
cmpl
pop
lcall
and
shlb
xlat
cs
push
test
and
ret
lea
lods
in
add
das
popf
cmp
pop
sarb
mov
cmpsl
iret
jno
dec
cmpsb
idivl
jle
ficompl
stc
pop
sbb
lret
inc
mov
jg
hlt
fdiv
or
mov
mov
cltd
mov
mov
mov
jle
bnd
adc
mov
push
sarb
test
mov
lret
cltd
in
add
imul
repz
mov
inc
add
xor
xchg
cmp
pop
shrb
jl
adc
mov
cmp
comiss
push
jb
pop
sbb
dec
ficompl
neg
rcrb
loop
inc
adc
enter
mov
xchg
aas
data16
shrl
scas
pop
inc
ret
jmp
test
xorl
shl
sbb
ret
adc
add
lahf
std
xchg
push
es
xchg
pop
fidivl
dec
sbb
mov
scas
mov
int
rcr
jae
arpl
sub
xor
or
lcall
dec
outsl
mov
xor
or
jo
push
push
les
mov
inc
shrl
xchg
cmp
or
inc
test
or
fs
sbb
test
dec
cmp
ss
sti
popa
dec
push
psrld
insl
scas
lock
js
add
cmpsl
adc
xchg
cmp
push
sub
lods
xor
popa
add
adc
scas
add
cld
repz
push
sub
das
mov
push
rolb
xor
inc
mov
dec
sbb
jb
ret
cld
ja
ljmp
sti
add
pop
rol
jae
not
push
test
out
es
in
sbb
add
leave
push
and
push
aaa
movsb
lods
call
mov
outsb
scas
fsubr
or
cmp
fcomps
jge
scas
sbbl
testl
pop
inc
test
push
mov
or
outsl
or
hlt
jecxz
inc
push
xchg
or
xchg
inc
mov
clc
jmp
adc
mov
andl
mov
mov
andl
shrb
sub
data16
adc
jae
ret
push
test
and
in
in
stos
fadd
lods
mov
pop
movsl
jns
fcomps
aas
mov
xorb
fldl
push
int3
sbb
mov
outsb
mov
xchg
cli
inc
push
push
push
rorb
ret
cld
jle
mov
jne
bound
adc
xchg
push
dec
aas
out
loope
rcrb
aas
divb
jle
add
mov
je
push
out
gs
cli
sbb
xchg
xlat
test
mov
mov
iret
cmp
adc
push
add
mov
iret
in
or
test
push
mov
in
cs
adc
test
jmp
pushf
adc
lahf
shlb
and
fidivrl
push
ret
ss
cmp
xchg
int
xchg
jle
mov
rorb
mov
xor
adc
imul
adc
dec
push
jle
push
aas
adc
ljmp
pop
repnz
pop
dec
mov
mov
mov
inc
out
les
sub
xchg
stc
inc
sub
call
pop
mov
icebp
outsb
ds
and
pop
cli
sbb
in
mov
xchg
mov
in
add
adc
repz
sbb
inc
in
sbb
mov
icebp
mov
push
and
push
call
dec
mov
addr16
push
mov
cwtl
and
pop
in
scas
push
push
xor
jmp
shlb
in
outsl
dec
testb
shl
dec
sahf
cltd
hlt
aaa
inc
jo
aaa
rcll
dec
lock
push
dec
int
out
mov
sub
out
push
out
sbb
arpl
in
and
int3
xchg
out
xlat
inc
stc
mov
pushf
imul
adcl
out
addr16
sbb
mov
lret
loop
in
mov
ja
push
shrb
cmp
cmpsb
and
or
mov
xlat
mov
dec
data16
cmp
aam
or
rcrl
in
mov
aas
std
sbb
inc
loopne
lahf
xchg
fiadds
cli
mov
pop
sbb
jns
fcmovne
outsl
mov
sub
sbb
inc
sub
jb
or
fadds
addr16
inc
in
dec
sbb
aas
xchg
xor
insl
mov
jl
hlt
test
xchg
add
aas
cmpb
iret
into
lcall
push
inc
aam
cmpsl
cmpsb
je
sbb
inc
lock
sub
dec
jnp
test
jmp
fisubl
mov
sahf
push
push
dec
add
fsubrl
push
xor
push
call
push
jmp
jl
jmp
fistl
cmp
js
insl
cld
xchg
flds
add
mov
sub
lret
xor
jecxz
lods
test
mov
cwtl
fldt
sahf
nop
jne
repz
jno
sbb
test
ss
pop
jns
ss
adc
je
pop
aad
mov
addl
and
lret
xor
inc
jmp
add
push
mov
sbb
pop
add
das
inc
pop
inc
out
call
and
xor
dec
lret
jge
imul
imul
and
jae
movsb
enter
sti
aad
in
shlb
jne
aas
movsl
loope
test
xchg
pop
adc
scas
in
scas
xlat
or
pop
add
xchg
dec
xor
sub
fs
aas
fsubrs
xchg
jae
movsb
pop
and
scas
adc
ss
rcr
push
stos
cmpsl
mov
ret
les
adc
mov
out
sub
pop
mov
fs
mov
pop
push
clc
movq
cmpsb
jmp
repnz
add
out
jne
mov
mov
lahf
xchg
popl
or
jnp
dec
cmpsb
pop
xchg
call
or
enter
jecxz
les
xchg
ret
xchg
repz
scas
outsl
into
loope
scas
and
sub
enter
sbb
popf
sbb
lods
xor
stos
cmpsb
call
sarl
je
push
inc
or
push
imul
mov
popa
dec
cmp
cmpsb
repnz
inc
inc
mov
mov
jmp
lret
std
cmpb
and
lds
lock
sarl
insl
jb
sub
icebp
in
mov
outsb
insb
sti
test
xor
test
mov
iret
sub
add
add
sbb
xchg
push
lds
call
push
dec
pop
pop
push
add
ja
aam
lods
xchg
xchg
shl
or
andb
ja
sbbb
movsl
mov
in
sbb
out
push
test
add
mov
adc
out
pop
dec
inc
mov
sbb
or
dec
jmp
dec
sbb
xchg
leave
jne
mov
les
jp
push
cmp
leave
pop
add
cmpsb
lods
jle
xlat
and
shl
xlat
jle
popf
data16
mov
and
push
stc
sub
divb
inc
fstpl
and
fwait
pushf
cmp
in
leave
mov
enter
sub
mov
fcmovnu
test
insl
mov
out
bound
lods
inc
mov
scas
add
push
sub
pop
repz
icebp
imul
push
out
jl
push
xchg
cmp
cmp
add
adc
les
aad
push
mov
cld
xlat
adc
sbb
fs
push
or
or
imul
ja
mov
mov
out
pusha
shl
xlat
andl
shll
call
iret
shll
push
lret
mov
in
push
lahf
in
ficoms
roll
cmp
pop
and
jmp
lods
in
dec
lret
add
mov
or
jno
xchg
and
mov
or
stos
inc
and
popa
pop
fildl
xchg
mov
lret
inc
jmp
les
cwtl
nop
nop
xchg
std
mov
or
loop
stos
out
xchg
dec
xlat
adc
mov
add
mov
jecxz
jle
sub
loopne
decb
faddl
cwtl
stos
push
sub
ljmp
js
adc
and
push
inc
aad
xlat
mov
mov
add
push
dec
pop
dec
mov
fisttps
pushf
xchg
enter
mov
loopne
mov
cmpb
pop
and
shld
fisubs
fstps
repz
outsl
or
pop
fwait
pop
fadd
ret
dec
cmp
cltd
push
adc
ds
push
mov
add
pop
and
cmc
and
int3
push
std
cmp
sbb
movsb
mov
imul
adc
cmp
jb
push
pop
scas
hlt
mov
test
aaa
enter
icebp
and
loop
daa
subb
cmpsl
lods
sub
pop
mov
xchg
sbb
push
stos
lahf
mov
ja
aaa
fisubrs
mov
xchg
xor
lidtl
xor
sbb
or
data16
loopne
pop
xor
and
fisttps
xchg
mov
inc
lret
dec
repz
jns
ss
scas
xchg
scas
scas
push
adc
int
jmp
mov
or
inc
xchg
addr16
jne
xchg
daa
xor
and
andl
inc
repz
icebp
test
sbb
and
push
jbe
push
jmp
subb
pop
pop
movsb
sub
mulb
cmpsb
call
int
xor
movsb
ds
jecxz
stos
xchg
and
clc
stos
pop
fdivl
test
lea
xor
pop
shrb
fnstenv
cli
in
mov
mov
inc
jl
inc
jl
ss
sbb
push
push
sub
xchg
push
arpl
aaa
cmp
das
fwait
int
push
out
fcoml
daa
inc
and
outsl
and
mov
mov
sbb
jns
push
jno
into
sub
xchg
dec
adc
xchg
mov
cltd
loop
test
cmpsb
aad
mov
aas
out
xor
xor
cmp
out
cmpsl
scas
jbe
sub
scas
and
xor
int
call
inc
mov
ds
js
push
stos
and
in
loop
mov
lcall
js
in
inc
push
movsb
xchg
cmp
push
add
jae
ret
jns
lret
and
ret
scas
add
pop
mov
insl
ror
mov
fs
lock
stos
imul
js
mov
inc
dec
clc
lcall
popf
gs
xor
aad
out
push
sub
and
in
pop
ja
int3
jne
mov
jb
jbe
sbb
pushf
imul
mov
aas
cmp
xlat
data16
jbe
nop
repz
in
mov
test
dec
cli
icebp
je
pushf
ds
ds
stos
xor
ss
pop
add
inc
or
je
pop
cmp
nop
mov
mov
xlat
imul
cmpsl
iret
lods
imul
ljmp
in
shll
or
mov
in
ja
push
mov
out
insb
jl
jo
std
filds
pop
cmpsl
fadds
pop
cmp
jg
imul
enter
ror
js
stc
inc
add
shrl
rclb
dec
and
jecxz
enter
cltd
mov
stos
xchg
iret
push
jno
dec
mov
sbb
add
aam
xchg
stc
into
ja
fisttpl
rol
mov
fcmovu
aam
xlat
rorb
sub
xchg
add
mov
adc
mov
sarb
in
push
push
adc
pop
mov
xor
or
cmc
test
inc
cmpsl
mov
pop
xor
mov
mov
cmp
and
dec
fstpl
int3
test
pop
mov
pop
mov
xchg
adc
insb
lods
jbe
xchg
sahf
sub
sub
sub
hlt
or
sub
xchg
inc
lret
movsl
mov
out
mov
mov
sub
pop
push
push
xor
sahf
xor
push
mov
test
data16
inc
shlb
dec
in
int3
xor
fidivrs
xor
icebp
fdiv
jnp
imul
out
and
loope
cltd
frndint
aaa
insb
scas
or
dec
and
out
xor
jbe
push
xchg
je
test
cmp
mov
pushf
adc
mov
push
dec
hlt
pop
lret
xchg
mov
and
sti
cli
xlat
jecxz
xchg
fisttpl
and
mov
inc
loope
and
cmp
mov
add
pop
inc
pop
das
cmp
fistps
push
or
call
ret
pop
and
lret
movsl
cwtl
mov
sbb
subl
inc
jo
sbb
loope
sub
pop
xor
mov
cmp
std
or
and
jmp
xorl
ja
sbb
out
pop
pop
xchg
lock
mov
jnp
outsb
flds
push
popf
hlt
push
clc
out
mov
xor
xor
lahf
insl
cli
test
loope
adc
in
pop
push
xchg
mov
es
pushf
filds
pop
jnp
dec
dec
push
cmp
imul
shlb
icebp
imul
popf
or
adc
xorb
and
jmp
leave
dec
aad
inc
jns
cmpsl
fistl
and
dec
aam
mov
add
out
sub
inc
push
mov
andb
jbe
xchg
cs
lods
push
jg
loopne
loopne
test
sub
dec
sub
mov
pushf
rol
enter
scas
jl
sbb
fistpl
mov
test
pop
cld
xchg
add
push
notl
les
out
dec
mov
pop
outsb
sti
leave
mov
push
ret
xchg
fsubs
pop
leave
sub
ss
je
push
movsl
and
adc
pop
inc
add
or
pop
scas
or
ror
xchg
ja
pop
sbb
xchg
stos
push
pop
imul
push
andl
int3
sbb
mov
or
push
add
lods
mov
mov
jmp
out
jnp
into
push
in
jbe
scas
dec
adc
js
mov
stc
inc
movsb
out
add
roll
pop
add
out
into
mov
cs
iret
jp
mov
adc
jmp
fidivrl
subb
xor
fwait
xor
sub
push
add
addr16
popf
gs
pop
add
rorl
idivl
xor
pop
loop
fistps
iret
pop
and
movsb
xor
jge
subb
push
lret
mov
jb
mov
cld
test
push
loope
sub
push
jbe
xchg
mov
push
shll
out
lret
and
adc
aaa
fnsave
add
pop
test
fisttpll
pushf
ja
test
sbb
sbb
sub
cmovno
pop
cltd
jne
jp
rorl
cmc
lea
iret
mov
add
jle
aaa
roll
lahf
lds
std
inc
adc
sub
subb
rcrl
stos
pop
daa
xlat
adc
daa
inc
divb
inc
cmp
ss
out
adc
xlat
cwtl
mov
cmp
sti
enter
orb
out
sub
addb
mov
stos
adc
jge
adc
fisubs
jge
add
inc
rcl
dec
lcall
jne
mov
mov
pop
mov
add
test
push
test
cmpsb
dec
dec
dec
out
lods
mov
and
xchg
popl
lcall
push
into
sbb
bound
dec
mov
jmp
dec
jp
lds
ja
mov
push
pop
mov
mov
and
cs
jg
or
add
fldt
inc
or
js
xchg
jecxz
fcmovbe
xlat
cmpsl
mov
mov
mov
jge
sbb
insl
out
in
rcll
or
and
jmp
shr
jno
sub
fnstenv
xchg
mov
hlt
or
insl
or
les
aas
adc
mov
add
fadd
add
fisubrs
dec
cwtl
dec
incb
arpl
xlat
into
cmp
cli
sti
inc
test
inc
imul
and
jle
sbb
add
stc
dec
push
xor
inc
clc
push
test
mov
addr16
add
shlb
mov
jno
xchg
repz
aad
push
jl
out
sbb
mov
out
fstl
pop
pop
into
cmp
xcrypt-ofb
cmpsl
sub
jo
xchg
lret
jg
lea
cli
adc
inc
mov
stos
mov
xchg
dec
inc
movsb
outsl
scas
push
or
loope
mov
add
inc
lock
out
push
pop
sub
pop
insl
push
xlat
xchg
daa
pop
and
jl
loop
in
out
inc
pop
repz
arpl
ret
xor
cltd
sahf
mov
pop
sbb
mov
cmp
sub
outsb
and
push
and
fidivrl
stos
inc
push
jbe
out
or
fnstcw
cmpl
push
adc
and
or
xor
pop
cmpsb
xor
addr16
adc
fisubrl
inc
fs
mov
pusha
sbb
pop
sti
sub
sahf
mov
js
pushf
clc
das
iret
push
cld
mov
jecxz
out
jb
rorb
test
and
aad
ret
jle
mov
xor
inc
inc
push
lret
xor
mov
sbb
pop
leave
adc
mov
sbb
std
pushf
xchg
jne
sarb
jmp
arpl
sbb
mov
int3
jbe
adc
pop
sub
je
xchg
add
inc
dec
les
jns
pop
ret
or
icebp
lahf
push
in
or
imul
push
insl
das
add
out
push
rclb
bound
adc
and
pop
jo
jle
ja
cwtl
punpckhwd
jne
mov
add
push
js
xchg
movl
lods
mov
dec
xlat
fcoml
pop
roll
pop
sbb
out
jo
mov
in
int
lods
pop
sub
sub
or
out
cmp
cmp
jle
mov
xchg
dec
mov
adc
adc
aam
loopne
js
jb
inc
xchg
outsl
stos
sbb
add
sub
daa
loope
insl
js
fstp
loop
repz
ss
inc
xlat
jno
adc
lock
or
aad
orl
inc
fnsave
xchg
gs
fs
mov
inc
test
pop
in
adc
add
fmul
pusha
mov
adc
xchg
mov
sub
sub
mov
shr
mov
loop
fwait
loopne
gs
pop
int
loope
js
mov
push
cmc
push
in
aad
mov
fs
movsl
mov
or
dec
push
fistpll
push
testb
adc
and
and
xlat
pop
jo
mov
cmc
pop
cmp
int3
lret
add
vcmpps
out
aas
xchg
pop
bound
and
imul
cmc
add
into
and
jnp
daa
jle
lods
outsl
into
subl
imul
sti
imul
mov
jmp
dec
sbb
insl
add
lea
stc
mov
mov
inc
cmpsl
test
insl
pop
jbe
jns
stos
insl
popf
inc
fcoms
sar
inc
in
lret
mov
lahf
jg
xchg
pop
sahf
mov
repz
jne
jle
mov
in
mov
jl
in
inc
cmc
xor
inc
movsb
fsubrs
dec
cmp
loop
push
negl
in
leave
cmp
xchg
and
xor
cmp
push
scas
cmp
aad
scas
add
mov
dec
call
sbb
push
push
cld
stos
cmpl
jp
xchg
jl,pt
in
adc
dec
cmp
pop
pop
ffreep
sub
add
outsb
int
inc
mov
adc
scas
psubusb
movsb
pop
fiadds
loopne
imul
cmp
fstl
ja
pop
das
xchg
mov
inc
pop
dec
xchg
dec
sub
push
adc
xor
gs
xor
sti
mov
data16
fsub
sbb
mov
sbb
imul
stos
jae
add
dec
and
lahf
or
jg
sub
adc
or
adc
push
fs
fdivp
decb
iret
cmp
sub
dec
mov
loop
test
icebp
insl
loop
add
mov
ficompl
mov
int3
stc
hlt
ret
push
or
adc
int
loope
mov
xchg
pop
inc
or
dec
rcl
sbb
psraw
pop
imul
pop
mov
sub
jg
pop
jecxz
jle
lahf
xlat
inc
aas
into
sbb
arpl
out
mov
pusha
push
and
adcb
insb
pop
inc
ljmp
pushf
mov
mov
and
popf
mov
shrl
lock
add
push
insl
mov
fstpl
sahf
stc
jmp
lea
lahf
dec
push
and
loope
mov
or
hlt
xchg
daa
adc
test
iret
in
jge
and
push
sti
in
rorl
adc
mov
insl
test
outsl
mov
sub
mov
push
jno
mov
mov
iret
dec
movsb
insb
fidivrl
daa
push
mov
and
iret
jns
sub
shrl
mov
mov
addl
inc
adc
inc
push
stos
scas
cwtl
fwait
gs
inc
bound
sub
mov
cmpl
xchg
insb
imul
enterw
inc
popa
or
pop
int
mov
adc
ret
lahf
aaa
jecxz
push
mov
inc
int3
out
pop
adc
test
es
mov
cpuid
out
or
aam
outsl
shlb
pusha
mov
push
subb
les
data16
jmp
test
mov
dec
add
mov
add
push
movsb
rclb
mov
jmp
and
jbe
iret
jp
cmc
dec
add
scas
mov
mov
ljmp
call
pop
imul
int3
or
sahf
idivb
test
and
xchg
hlt
and
xchg
add
xchg
mov
pop
inc
adc
std
sub
lahf
xchg
jo
mov
enter
ret
aam
xor
hlt
inc
loope
cltd
lods
ds
and
jns
add
push
repnz
dec
pop
jmp
xchg
das
mov
mov
jp
leave
xchg
xchg
dec
inc
fsubrl
aaa
inc
xchg
pusha
jnp
mov
leave
std
cmp
pop
rorb
jno
push
scas
mov
iret
push
adc
jp
add
push
or
dec
adc
fdivl
in
push
push
xor
enter
or
dec
sbb
adcb
add
pop
scas
jbe
in
in
adc
mov
xor
insb
imul
fs
mov
ja
imul
arpl
or
and
pop
adc
mov
lret
jbe
add
jnp
lret
rep
sarb
xlat
cmpsb
inc
std
aad
lcall
stos
fstp
icebp
fwait
cli
mov
scas
test
and
loopne
inc
nop
pop
dec
shl
jl
mov
icebp
push
xchg
rcl
and
lahf
aam
stos
jle
pop
mov
fdivrp
push
sbb
mov
push
xchg
ret
pop
outsl
xchg
mov
aaa
mov
fsubrp
in
aas
sti
push
sbb
pop
push
cmc
push
xchg
adc
fiaddl
cmpsl
imul
lds
imul
xchg
loop
lods
cmc
int
lcall
call
fs
or
loope
notb
and
shll
or
mov
les
pushf
pop
jmp
repz
adc
in
add
rcrl
fwait
add
inc
sarb
xchg
sbb
pop
sbb
iret
dec
and
imul
negb
pushw
xchg
dec
fdivrs
cmp
insb
std
and
mov
adc
fxch
inc
std
scas
fs
aad
insl
sti
mov
mov
loope
lea
dec
das
fisttps
pop
jb
push
push
cld
sbb
dec
cmc
cmp
in
dec
ds
incb
aas
push
sub
mov
push
cmpsb
sub
dec
das
fcompl
mov
and
int
dec
sub
in
loope
or
sbb
jno
mov
or
inc
xchg
mov
jge
xor
outsl
ss
ret
xchg
and
cmp
xchg
dec
cmp
aaa
or
xor
dec
aam
pop
and
sub
cli
mov
push
sub
out
nop
xlat
mov
and
test
lock
in
dec
pop
stos
icebp
repz
loope
icebp
comiss
jns
sub
je
lahf
lret
jl
out
outsl
adc
test
and
jmp
push
or
pusha
stc
enter
dec
and
pop
dec
bound
ss
push
cmp
sahf
and
cld
jb
ja
dec
sbb
subl
inc
lret
mov
nop
ss
mov
test
adc
cmp
lret
data16
inc
pop
or
lret
sub
decb
dec
lds
mov
test
dec
insb
popf
lods
out
jp
mov
jae
movsl
or
xor
aas
into
les
push
cs
cltd
mov
and
mov
test
cmp
jl
mov
fs
jle
popa
shrl
sbb
push
ja
add
in
sub
xchg
xor
jle
ljmp
push
mov
mov
cmpsl
xor
scas
test
sbb
nop
mov
loopne
gs
les
loop
xchg
adc
lods
push
stos
and
xor
inc
mov
mov
je
xchg
lock
cmc
pop
nop
test
push
je
mov
dec
mov
les
push
and
jmp
mov
mov
dec
jl
mov
adc
ror
xor
adc
jno
add
jg
scas
stc
mov
fcoml
jb,pn
xchg
push
sbb
dec
cmpsb
inc
pop
cmpsl
xchg
sub
or
or
cmp
cltd
xrelease
add
test
scas
or
lea
fidivl
mov
jg
roll
adc
inc
out
stos
movsb
bswap
lret
aaa
dec
iret
leave
dec
mov
mov
mov
test
push
and
sbb
loopne
lock
add
jp
xor
rolb
adc
adc
push
pusha
inc
inc
inc
sub
push
and
xchg
cmp
pop
mov
add
xchg
lcall
and
ljmp
sarb
jno
or
in
jle
loopne
sbb
rolb
cmpsl
sbb
mov
pop
and
cs
out
push
mov
xchg
outsb
or
mov
icebp
sbb
sub
pushf
sub
imul
mov
dec
imul
rol
ljmp
push
mov
cs
inc
icebp
push
fmul
iret
hlt
fisttpll
push
pop
add
sub
add
test
arpl
mov
mov
jnp
push
loop
rcr
inc
pop
add
mov
cmc
xchg
xchg
and
mov
into
addl
addl
inc
sbb
inc
cld
xchg
push
mov
or
pop
or
mov
test
xchg
xor
mov
or
lea
push
sbb
push
popa
push
xchg
addr16
shlb
pop
insb
add
mov
pop
ret
insl
inc
mov
repz
outsl
das
icebp
xchg
or
in
fildll
jne
shll
pop
jmp
out
imul
jbe
or
sub
pop
sbb
xor
cmp
popf
aad
mov
das
pop
sub
cld
ret
adc
movb
cwtl
dec
dec
mov
inc
inc
push
test
out
hlt
mov
arpl
outsl
dec
lods
sub
into
adc
loope
test
mov
sarb
jno
sub
xlat
insl
out
and
testb
jecxz
nop
sub
xchg
loopne
mov
aad
or
sub
and
dec
lea
xor
cmc
inc
jecxz
rcrl
daa
ds
xor
fwait
mov
out
lock
movlps
jg
lea
xchg
loope
sti
ftst
pushf
in
cmc
pop
or
aaa
roll
fsubrp
pop
rcrw
xchg
lock
aas
ficoml
push
mov
mov
or
std
sbb
mov
push
xor
adc
cmp
mov
repnz
jmp
test
jge
push
out
cmp
fwait
inc
inc
mov
rolb
lahf
xchg
test
stos
inc
jb
repz
jmp
into
sub
test
rolb
mov
cld
mov
dec
fxch
ljmp
cmp
dec
out
mov
aaa
dec
xchg
or
mov
in
sti
sub
ss
je
iret
sub
clc
lods
subl
xor
pop
shr
data16
xor
negb
and
jns
pop
add
jecxz
jecxz
in
lret
loopne
stc
sub
adc
sub
fmull
mov
fcomi
and
lea
dec
lret
je
jmp
mov
mov
mov
aaa
xchg
mov
lahf
cmpsb
fisttpll
mov
leave
sub
push
insb
pop
dec
sub
das
mov
and
rorb
mov
hlt
call
aaa
icebp
add
pushf
call
inc
pushf
sbb
aad
xor
push
sub
sub
adc
dec
add
cwtl
and
mov
pop
sub
pop
sarb
out
and
xchg
cmp
sub
shll
dec
pop
xor
outsl
movsb
das
sub
mov
jae
push
cld
adc
mov
outsl
lock
or
arpl
jl
mov
sbb
sub
xchg
jno
out
xor
push
loope
ret
stos
shlb
sbb
sar
push
ret
mov
pop
or
nop
dec
fwait
out
pop
push
sbb
das
cmp
lret
in
mov
cmpb
lods
pop
cmp
jae
sbb
push
bound
add
or
jecxz
sbb
or
inc
dec
and
adc
mov
add
mov
imul
or
movsl
imul
andb
mov
mov
push
call
inc
int3
sbb
pop
add
les
mov
jecxz
mov
outsb
inc
leave
inc
unpcklps
adc
mov
or
test
dec
aaa
adc
loopne
fwait
jl
ss
mov
stos
pop
xlat
jbe
cmc
xor
xor
xchg
pop
js
shrl
fiaddl
mov
stos
dec
and
addr16
mov
outsb
xlat
cmc
frstor
sub
adc
ljmp
jecxz
xchg
icebp
jp
enter
out
cmpsl
jp
repnz
jb
bound
jae
inc
in
mov
js
bound
filds
jle
push
and
scas
daa
push
dec
dec
fistps
cmpb
pop
inc
dec
mov
loop
sub
jecxz
add
jmp
mov
jb
pop
dec
loop
call
test
sbb
orb
sbb
in
inc
mov
or
lods
adc
mov
sub
out
dec
cmc
inc
xor
mov
pop
sub
dec
xlat
inc
pop
cmpsb
dec
pop
push
imul
jns
popf
or
dec
jp
mov
dec
dec
jns
and
and
rol
jge
cwtl
lret
leave
ds
fs
add
or
add
incb
and
mov
xchg
mov
sub
jp
mov
call
in
popl
inc
cmp
pop
fldenv
jno
in
mov
ror
push
mov
rolb
shr
sar
push
popf
cs
dec
mov
or
incb
aaa
test
mov
xchg
or
xchg
sahf
mov
xchg
mov
jne
push
cmp
xchg
fdivl
mov
les
cmpsb
stos
rol
cmp
mov
mov
outsl
mov
and
fildl
mov
into
ficoml
pop
pop
into
mov
subl
fcmovnbe
test
adc
fld
cs
test
roll
lock
mov
jns
sbb
aad
and
xchg
dec
les
mov
pop
cmp
bnd
push
jae
data16
push
or
mov
xchg
ret
rolb
cli
jecxz
out
push
les
imul
cmc
pop
pop
insl
leave
fwait
icebp
aas
mov
jo
pop
or
fcmovne
push
enter
dec
mov
pop
mov
cmova
in
mov
add
xchg
dec
call
pop
push
push
lahf
xchg
pop
cmpsl
sub
mov
lret
pop
add
je
add
sbb
pop
stc
js
sub
into
test
cmp
or
pop
out
fucom
xor
adc
push
popa
pop
shlb
inc
les
out
ret
push
ret
pop
fcmove
test
cwtl
cmpsl
jp
cmpsb
xchg
movsb
adc
fstps
mov
mov
push
push
push
push
xchg
sbb
sbb
fmuls
fbld
mov
inc
jnp
cmp
iret
mov
adc
mov
lods
enter
sbb
and
scas
jge
iret
data16
repz
jp
lea
lret
dec
ss
adc
xor
jg
cmp
mov
mov
sahf
adc
sub
push
out
icebp
sub
fsubl
pushf
push
adc
inc
and
ds
fldt
xlat
ljmp
or
dec
outsl
nop
inc
xor
jns
inc
js
dec
mov
push
adc
xchg
mov
or
mov
sub
test
push
insl
xor
out
dec
sbb
sbb
clc
fmul
cld
xchg
rorl
mov
fists
sub
push
mov
inc
jns
das
out
es
ljmp
lds
mov
xchg
mov
in
pop
mov
lods
in
cmpsl
jae
xor
pop
push
loopne
jnp
iret
lods
stos
shll
dec
movsl
add
dec
aam
loop
add
mov
std
sarl
jge
mov
outsb
push
mov
add
addr16
and
repnz
cmp
push
popa
test
jg
jb
push
adc
add
fsubrs
cmp
push
xchg
add
movsb
jne
pop
inc
stos
dec
enter
int
pop
inc
shlb
adc
dec
push
nop
mov
shll
outsb
mov
ds
pop
out
jno
pop
xchg
mov
pop
sub
testl
repz
lods
mov
cmp
inc
add
jg
in
lahf
push
enter
insb
dec
mov
imul
stos
repnz
pop
sbb
leave
insb
movsl
sahf
fdivs
das
pusha
lea
test
or
out
mov
xchg
mov
mov
mov
pop
loop
xor
ret
loope
xchg
pushl
cmp
jmp
test
andnps
sub
idivb
lahf
cmp
test
fstps
es
idivb
mov
into
push
sbb
dec
popf
inc
xor
xor
xchg
lcall
loopne
rcr
push
addb
gs
inc
popa
rorl
addl
test
ss
jnp
fldl
xchg
lret
icebp
push
icebp
mov
outsl
sub
daa
int3
stos
cmp
dec
lret
mov
xchg
mov
sbbb
bound
test
xchg
sub
sub
out
xchg
mov
add
ljmp
and
cmp
and
sahf
gs
jae
cmp
jmp
ja
hlt
cltd
fldcw
inc
sub
in
add
aad
outsb
mov
ljmp
fisttpl
leave
push
addr16
mov
lret
rcrb
in
rcrl
int3
das
xchg
inc
sbb
dec
mov
sub
mov
rclb
sub
and
jge
jb
push
inc
fmuls
sub
lcall
mov
das
into
cmp
fdivrs
xchg
mov
xchg
inc
or
mov
mov
mov
sbb
ds
es
testb
jb
adc
and
mov
and
inc
scas
pop
sub
fwait
add
jge
test
in
xchg
lea
lds
hlt
add
jns
cmp
or
enter
add
sub
pop
push
sub
lahf
jnp
pop
in
in
cmp
mov
xor
or
push
fwait
adc
adc
add
mul
int
popa
dec
lret
jl
jle
or
mov
shlb
and
or
xchg
pop
popa
rcll
loope
jmp
sbb
mov
add
sbb
dec
inc
gs
pusha
sub
fisubl
dec
xchg
incl
push
xor
push
mov
pop
mov
and
mov
mov
xchg
xor
mov
xor
or
fs
and
stc
shlb
and
xorl
mov
xor
sub
lods
shrl
push
cmp
jne
xchg
pop
ljmp
repnz
jg
aas
cmc
adc
int3
mov
mov
frstor
leave
xor
movsl
rcrl
outsl
fimuls
xchg
cli
or
adc
divl
adc
enter
insb
loopne
jb
lock
iret
mov
xchg
imul
xchg
pop
dec
sarl
jmp
jp
orl
in
rcll
fwait
jecxz
sbb
sbb
xchg
cltd
dec
xor
mov
addl
xor
popa
std
mov
cmp
push
adc
xchg
mov
sub
leave
mov
adc
shrl
in
cwtl
push
xor
or
adc
jl
ficompl
and
pop
repz
adc
mov
inc
enter
nop
xchg
int3
fildl
pushf
lahf
cwtl
mov
mov
push
push
mov
clc
enter
ds
jp
pusha
pop
inc
sbb
jnp
push
add
xchg
filds
dec
dec
pop
mov
xchg
cwtl
pop
loop
push
ja
or
xor
push
push
sbb
popf
add
stc
leave
push
pop
fisubrs
jnp
sub
shlb
or
lock
mov
test
jnp
jle
push
fdivrs
lds
add
rcr
jmp
jl
cmpsb
out
mov
sbb
es
xchg
inc
fwait
out
outsb
jl
in
and
test
sub
pop
xchg
and
sub
hlt
mov
xor
mov
sub
lds
cmp
ds
stos
xor
loopne
dec
or
scas
and
mov
in
shll
push
ja
adc
outsb
lea
in
pusha
mov
testb
jno
cltd
in
cs
out
dec
push
and
xor
test
sub
mov
pusha
mov
sbb
cmp
pop
pop
je
iret
sub
add
stos
add
bswap
pop
int3
repz
pop
stos
and
fld
push
dec
inc
sahf
cwtl
mov
sub
mov
loope
cli
xor
das
js
xor
arpl
dec
cmp
jns
xchg
insb
testb
or
sub
fistps
adc
out
imul
mov
pop
inc
push
mov
ret
xchg
cltd
and
adc
dec
popa
cmp
fists
mov
das
cs
imull
xchg
out
sbb
add
cmp
dec
fisubl
dec
sub
adc
mov
jl
leave
jp
sbb
cwtl
jb
and
dec
or
movsb
mov
cmp
insb
push
xor
hlt
nop
lds
outsl
fs
xchg
push
jns
mov
ja
inc
push
loopne
movsb
pop
jo
in
sahf
out
inc
out
sbb
fnstenv
cmc
inc
jo
test
clc
cmp
cs
mov
inc
mov
mov
xor
mov
jl
adc
sub
in
ljmp
xor
sub
loop
movsl
arpl
pop
push
das
insb
nop
ret
hlt
cld
rcrb
add
mov
jae
push
and
fsubp
fdivrl
dec
in
xor
sbb
loop
mov
inc
fcompl
fiaddl
jno
rcrb
lea
sbb
cmc
lcall
pop
cmpsb
push
loop
mov
and
mov
sbb
cltd
inc
outsb
cmpsb
dec
daa
push
sahf
test
push
jbe
fs
ret
int
jno
aam
gs
imul
test
das
sahf
pop
loop
jnp
stc
jl
int
mov
add
jno
sub
xor
jge
adc
cmp
dec
mov
leave
mov
ds
in
insb
sub
pop
xchg
and
inc
or
pop
xor
jo
inc
push
loop
in
and
add
mov
je
jo
jbe
insl
or
dec
cmp
cmp
pop
jg
dec
out
dec
mov
pop
sarb
loop
hlt
stos
lret
mov
adc
adc
mov
out
sub
sub
iret
pop
scas
fs
sub
pop
lcall
fildll
adc
shrb
pop
mov
rcr
jecxz
adc
sbb
das
roll
out
fisubl
arpl
insb
xorb
cmp
xor
jmp
fiaddl
push
xor
es
dec
ret
sti
dec
push
rol
mov
ja
add
ret
mov
lock
jg
cmc
xor
adc
xor
test
sbb
pop
mov
iret
xor
sub
insl
fnsave
push
pusha
cmp
push
popa
adc
jb
scas
or
pop
aas
filds
mov
mov
lods
popa
xlat
pop
gs
cmp
out
or
mov
mov
imulb
mov
xchg
out
loope
out
inc
repnz
adc
inc
jmp
inc
addr16
inc
ret
push
mov
addr16
adc
pop
xchg
sahf
mov
jg
mov
call
popa
leave
aam
adc
jbe
popa
fisubrs
sti
aaa
js
fwait
sarb
es
scas
jb
ja
push
mov
sub
adc
decb
lods
mov
pop
add
clc
outsl
js
jmpw
jge
loope
in
pop
lods
add
lcall
daa
jbe
push
outsb
insb
sbb
and
loope
sub
pop
gs
out
xchg
stos
sbb
and
jge
gs
dec
fstl
and
sbb
cs
push
xor
out
and
pop
sbb
jo
lods
jge
xchg
push
jecxz
or
js
mov
loope
pop
popf
fmull
in
lahf
popf
ret
xor
xor
int
push
mov
cmp
lret
cmp
insw
out
pop
pop
inc
sahf
dec
jne
pop
int3
jne
rcrb
lock
sub
sbb
xchg
and
movsl
fwait
je
test
pop
adc
adc
call
movsl
movsl
jo
lret
xorl
xchg
in
test
xchg
push
dec
aad
xchg
pop
nop
sarl
pop
and
mull
sbb
jp
rcrl
sub
xchg
jb
es
cmp
adc
lock
add
push
pop
push
lods
arpl
add
cmpsl
cmpsl
data16
sbb
mov
shl
pop
xchg
and
fs
adc
repz
lret
stc
pusha
sub
cmp
adc
scas
mov
test
dec
ret
push
push
jge
inc
sti
pop
sub
stc
outsl
pop
call
sbb
ss
jmp
jno
sub
cmc
cmp
adc
sub
sti
ljmp
mov
in
mov
sahf
sahf
mov
adc
lds
add
cmpsb
mov
enter
mov
test
or
xchg
jl
mov
popa
in
inc
dec
pusha
sub
cmpsl
outsl
pop
cmp
std
stos
push
mov
or
jmp
out
adc
fnsave
mov
jl
pop
xchg
loopne
test
and
jl
sbb
jnp
mov
testb
adc
push
or
and
lret
aad
inc
lret
inc
rorl
sub
pop
daa
cmp
dec
rcrl
imul
dec
xor
leave
subps
fs
pop
and
sub
pop
in
mov
xor
pushf
mov
push
scas
mov
mov
jo
sub
es
out
cmp
nop
pop
ficomps
movb
mov
add
xor
push
pop
cmp
dec
cld
lock
cli
push
pusha
rcrl
dec
ret
es
sti
fdivp
jge
int
add
push
dec
push
pop
and
hlt
ret
sti
sbb
mov
aas
push
inc
and
cld
add
fs
pop
int
popa
out
jbe
movsb
cmpb
xchg
in
out
loop
adc
std
dec
jmp
addr16
xlat
int
pushf
add
xlat
leave
sbb
fdivl
sarl
lds
inc
test
mov
mov
jo
push
inc
aas
clc
xchg
sub
in
jae
mov
loopne
push
xchg
dec
test
in
out
and
push
test
jmp
mov
mov
mov
jmp
sahf
movsb
scas
jle
mov
adc
repz
popf
lock
mov
push
xchg
pmullw
scas
leave
and
xchg
inc
pop
jae
dec
xchg
add
imul
or
sbb
xor
movsb
lods
jbe
insb
mov
or
push
es
cmp
mov
je
push
std
jmp
and
jne
or
or
mov
rcr
jecxz
imul
lds
inc
scas
dec
aas
sub
lret
push
dec
movsl
sub
jbe
loopne
stc
adcb
test
mov
mov
xchg
incb
mov
imul
outsl
int3
sbb
mov
push
divsd
sahf
push
jno
cmp
ds
mov
enter
mov
or
push
lret
mov
fsubl
sbb
scas
sub
outsb
repnz
dec
test
addr16
lods
xchg
push
dec
out
xchg
insb
lret
xorl
in
in
pop
stc
out
cmp
pop
std
iret
adcl
int3
in
mov
xchg
mov
std
pushf
xor
imul
rcll
int3
imul
out
in
xor
push
call
mov
cmc
fstl
rorl
pushf
addr16
cs
xchg
aam
int3
lds
dec
cli
jno
jecxz
dec
ss
jno
pop
stos
xor
lcall
andl
out
xlat
stos
mov
loopne
adc
scas
imul
test
leave
jne
ficoml
pop
sbb
in
roll
jge
stos
sub
jle
outsl
inc
xor
adc
xlat
outsb
aas
das
add
out
cmovo
push
sbb
xchg
cmc
imul
stos
pop
and
addr16
aam
jno
mov
mov
inc
popf
dec
lret
popa
pusha
xchg
pop
outsl
jnp
add
jle
fcmovne
shrb
into
imul
pop
inc
mov
push
jae
clc
mov
fsubrs
dec
imul
frstor
push
pushf
icebp
orl
fists
inc
shll
cmpsl
mov
inc
icebp
cmp
cmp
std
xor
xchg
pop
jmp
in
dec
into
scas
cmp
pop
dec
jmp
xchg
and
shl
pop
vpsrld
rcr
popa
dec
inc
xchg
or
or
rcrl
and
push
and
xor
mov
into
mov
pop
pop
cs
mov
aas
sub
sub
or
stos
es
test
sub
mov
cmc
add
ja
pop
pop
pop
push
mov
into
imul
and
js
pop
mov
pop
sub
sbb
xor
aas
push
loop
xchg
in
in
add
and
lret
mov
lret
mov
repnz
adc
pushf
int
enter
mov
lds
push
mov
mov
ret
test
cmc
clc
or
jle
mov
arpl
add
ds
add
adc
out
jne
mov
fwait
push
daa
in
xor
jbe
iret
test
lret
inc
adc
mov
dec
jmp
and
push
push
sub
adc
mov
loope
fwait
ja
movsl
in
mov
or
insb
adcb
xor
adcb
in
lea
adc
inc
rcrb
scas
mov
mov
cwtl
loopne
mov
push
push
rolb
fs
lds
xchg
adc
shlb
and
out
test
pop
xchg
dec
jae
dec
xor
ret
sub
aaa
add
rclb
repz
mov
add
je
lret
xchg
loop,pt
mov
mov
push
fdivr
aaa
mov
cli
push
ds
repz
js
sub
dec
or
sbb
mov
call
cmc
push
shll
gs
mov
pop
mov
repz
inc
sub
std
jle
bound
jp
dec
cmc
mov
scas
repz
insb
push
lahf
inc
call
jno
fistpll
stos
mov
dec
mov
bnd
adcb
jns
mov
mov
test
clc
cmp
pushf
pop
lret
and
test
mov
jno
or
adc
adc
push
pop
jb
js
sbb
add
pop
cwtl
mov
push
int
mov
loope
sbb
xlat
pop
xor
lods
pop
mov
cmp
loopne
mov
mov
jmp
mov
sub
xor
in
dec
lock
sarl
jbe
or
sti
mov
ss
scas
pop
mov
or
push
push
xchg
inc
adc
adc
inc
mov
adc
out
pushl
pop
aas
sub
addr16
incl
hlt
scas
add
popf
dec
enter
jle
add
xor
push
test
xchg
divb
inc
arpl
push
mov
data16
testl
xchg
adc
mov
ds
lea
jge
test
sbb
in
cmc
jle
jge
loope
mov
lea
jne
and
inc
and
or
fidivl
push
xor
adc
jg
mov
or
les
xchg
mov
xor
movsb
push
inc
lret
ss
nop
dec
iret
dec
inc
or
lock
mov
mov
push
insb
mov
mov
dec
jb
push
sub
push
cmp
mov
loop
loopne
les
xor
in
add
out
enter
jp
icebp
pop
xor
dec
and
sysenter
mov
call
aas
inc
pop
icebp
jecxz
icebp
cli
cmp
push
ret
aaa
add
pop
outsl
push
shl
pop
add
aam
dec
pop
push
clc
outsl
iret
adc
lods
lods
mov
sub
addr16
xor
in
fimuls
sub
and
das
xchg
adc
cmp
add
outsb
faddl
adc
mov
sub
and
push
mov
cmpsl
dec
pop
jg
cwtl
fadds
or
hlt
pop
aam
popl
or
jbe
mov
mov
int3
insl
imul
xchg
push
sub
dec
fistpll
lahf
and
ss
push
mov
stos
mov
dec
adc
jno
sub
sbb
xchg
cmp
jnp
or
and
and
xchg
hlt
add
dec
and
das
sahf
pop
sub
push
sub
push
xchg
aas
fsub
je
push
iret
es
inc
int3
dec
jae
pop
sbb
std
mov
fcomps
adc
mov
into
lcall
arpl
cmp
roll
je
pusha
fcmovb
dec
inc
cmpsb
cmc
mov
push
inc
in
cmp
inc
jl
out
rolb
int
clc
mov
xchg
int
and
insb
incl
lds
popa
in
cmp
lcall
movsl
adc
push
out
jae
leave
sub
imul
enter
in
mov
dec
aam
pushf
xchg
pop
in
sbb
push
pop
jae
lahf
push
add
push
gs
shrl
push
inc
ljmp
frstor
jae
outsl
cld
out
imul
add
mov
fildll
cmpsb
add
lcall
pop
fnstcw
push
mov
pop
sbb
or
add
jae
add
mov
cmp
mov
les
dec
je
lret
pop
jecxz
sbb
pop
sub
and
adc
popa
jnp
jnp
jne
pop
cwtl
out
and
mov
pusha
jns
sbb
mov
rcl
mov
xchg
and
xchg
stos
mov
sbb
int
mov
test
mov
clc
in
adc
push
xor
loope
sbb
movsl
adc
adc
pop
gs
inc
or
dec
test
jns
dec
xor
xlat
idivb
in
add
mov
and
jg
mov
inc
stos
jne
into
nop
cmp
pushf
les
sub
adc
sarb
add
and
and
fxch
dec
leave
pop
xor
fisubrs
add
movsl
mov
mov
adc
imul
fnstsw
movsl
push
mov
ja
outsb
rolb
push
or
stos
sbb
dec
jg
ret
fsts
mov
jnp
xor
pop
mov
mov
rol
cld
sub
mov
jg
xchg
gs
inc
lcall
loop
xor
or
xor
cltd
mov
arpl
xor
xchg
dec
aas
push
mov
jb
cmp
push
shrl
insl
sti
rcr
ljmp
loope
mov
pop
stc
push
pandn
ss
jl
repz
inc
pop
js
fisttpll
pushl
sbb
dec
cmp
inc
pop
outsl
int3
pop
dec
decl
leave
ret
in
popf
adc
xor
scas
and
cs
out
jge
jnp
xchg
jecxz
repnz
outsl
in
pop
push
mov
pop
fistl
mov
jecxz
popf
dec
cmp
lret
lahf
incl
xchg
mov
adc
mov
popa
mov
pusha
iret
jno
xorl
cmp
mov
xor
sbb
cs
jae
test
sbb
xor
jns
out
mov
out
outsl
sub
cmp
es
clc
pop
ret
sbb
lods
out
dec
and
es
mov
gs
and
ftst
mov
popf
addr16
pop
sbb
dec
jnp
mov
aam
xchg
jmp
movsb
and
fadds
rclb
cmp
inc
loopne
test
insl
pop
shll
adcb
xor
push
sbb
push
stos
cmp
or
push
dec
pop
jbe
testb
mov
sti
add
push
ret
mov
cltd
lcall
jl
cmp
or
jmp
test
mov
cmp
push
mov
clc
and
mov
dec
mov
push
xchg
mov
arpl
out
adc
jecxz
push
divps
inc
sbb
or
mov
sbb
push
arpl
cld
jmp
add
pop
mov
fistpl
mov
push
dec
lods
and
push
cmp
aaa
sub
cmp
xor
xor
adcb
ljmp
loopne
fnsave
aas
jmp
fcmovnbe
push
xor
pop
aam
cmp
loope
iret
mov
bound
and
xchg
mov
and
ret
out
xchg
movsb
std
add
mov
pop
cmp
xchg
cmc
nop
push
fdivr
add
je
movsb
mov
aaa
movsl
es
aam
fdivs
pop
rcrl
lret
ljmp
dec
xchg
test
jge
ss
cmpsb
jbe
push
lock
fildl
mov
jle
xchg
push
arpl
adc
fwait
sub
outsl
sub
lcall
das
sbb
es
scas
push
inc
mov
cmp
ret
insb
adc
inc
xchg
sub
outsl
mov
fldenv
das
mov
push
push
pusha
dec
lahf
fcmovnb
xor
inc
add
add
xchg
test
les
mov
mov
or
inc
cmp
loop
fstps
mov
mov
aam
jo
mov
sbb
sub
cmp
push
aam
and
aaa
addb
jo
jge
imul
xchg
push
xchg
loopne
inc
fsqrt
fnstenv
adc
mov
dec
lahf
inc
push
lea
decl
aad
inc
pop
mov
or
scas
outsb
sar
inc
lahf
xchg
test
jb
push
cmc
in
lea
and
push
lods
shlb
imul
cmp
leave
add
fdivrs
jae
push
or
les
aaa
pop
cmpsb
add
xchg
dec
jb
insb
pop
jge
shlb
xchg
dec
ss
enter
clc
xchg
ret
sbb
popf
outsb
mov
xor
push
push
push
xor
sbbl
pop
sbb
bound
mov
cmp
aam
push
push
pop
or
icebp
and
sbb
inc
pop
rorb
sub
rcl
call
push
das
stos
push
jb
cli
and
cmp
jl
rorl
ds
das
insb
das
movsb
lods
jb
shll
pop
lods
push
cmp
stos
ljmp
or
lahf
mov
mov
loopne
jp
shll
lahf
iret
scas
sub
cmp
nop
push
mov
fneni(8087
aaa
sub
imul
inc
push
in
in
push
mov
fisubs
xchg
lods
mov
pop
lcall
push
pop
fisttps
clc
out
or
dec
dec
mov
sub
cld
xchg
cmpb
mov
xlat
stc
or
add
or
pop
fstps
fildl
cmpsb
jg
out
push
adc
idivl
in
jno
js
cld
and
dec
xchg
xor
add
ror
into
pop
shrb
jb
lcall
add
jmp
jp
faddl
inc
fcom
inc
bound
iret
pop
push
cmpsb
mov
and
in
hlt
out
jge
inc
sbb
add
mov
out
sub
out
lock
stos
imul
cmc
mov
xchg
pop
sbb
int
sub
add
cli
jnp
rolb
pop
fmuls
loope
movsb
mov
push
and
jbe
ret
loopne
fsts
das
repz
inc
cmp
sbb
xchg
in
sub
xchg
leave
push
movsb
inc
mov
or
cmp
push
mov
or
sbb
fstpt
or
sub
lock
cli
dec
adc
xchg
cld
dec
xchg
mov
mov
sbb
push
push
add
adc
inc
test
sti
repz
push
sub
fstpl
mov
sti
mov
add
dec
jns
sub
mov
sbb
add
pushf
mov
mov
mov
add
scas
fdivs
test
and
repz
and
decl
cmp
jecxz
pop
pop
sub
movsb
insl
cmp
outsl
or
rcr
mov
data16
inc
shr
out
insb
movsb
jbe
dec
cmp
xchg
in
cmp
out
lock
outsb
xor
cmp
addl
jo
mov
ljmp
xchg
fcoml
xchg
add
cmpsl
negb
pop
cld
ds
mov
outsb
xchg
sbb
push
imul
lret
or
pusha
push
or
orl
jnp
addr16
mulb
fs
int3
pushf
or
insb
fadds
addr16
stos
es
adc
std
push
push
lods
movsl
adc
sub
xchg
stos
shr
loopne
repz
add
xchg
arpl
or
lods
bound
out
out
ret
jne
aad
and
filds
xor
jp
dec
xchg
or
push
stos
loope
mov
jb
and
mov
xchg
push
stc
push
clc
xor
bound
iret
xchg
and
or
lds
repz
je
mov
rorl
pop
cld
in
fucom
mov
jmp
inc
and
push
jb
xchg
test
lret
dec
stc
out
repnz
mov
sub
sbb
push
les
mov
jp
int3
push
mov
push
loop
sub
inc
arpl
pop
push
mov
pop
aas
jns
inc
inc
pop
lock
xchg
adc
fs
push
pusha
mov
sub
loop
scas
inc
icebp
in
shl
in
jmp
adc
jl
xor
mov
adc
mov
mov
les
out
push
pop
add
mov
inc
and
inc
jmp
pop
movsb
ljmp
dec
loope
jo
clc
sbb
out
sub
jo
in
and
adc
sbb
fnsave
and
pop
lret
adc
fistps
cs
jns
pop
mov
mov
xor
mov
fstpt
push
rcl
xchg
int3
inc
add
test
inc
mov
loope
dec
sbb
inc
cmp
into
nop
jmp
mov
jb
lahf
loop
int
int
add
mov
jb
sub
mov
loop
fidivs
jp
jg
pop
mov
sub
jp
cmovg
adc
lahf
mov
mov
xor
cmp
test
push
dec
or
push
rolb
lret
or
push
mov
mov
lods
ret
adc
and
mov
xor
cld
dec
dec
sti
push
scas
mov
xor
push
inc
rcl
das
stos
mov
lea
cli
mov
hlt
push
arpl
jl
xor
subb
data16
mov
popa
pop
cmpsl
xchg
adc
mov
and
loop
push
mov
inc
fwait
mov
pop
scas
sbb
test
dec
mov
inc
push
pop
fstpl
xor
es
jg
call
push
mov
adc
jnp
sbbb
and
sbb
push
xchg
mov
sub
loop
inc
add
sbb
cmp
rcl
xor
icebp
shll
arpl
mov
sbb
ljmp
imul
inc
pop
pushf
sarb
ret
xor
lcall
lahf
sahf
or
std
outsb
daa
fwait
pop
mov
lahf
addr16
stc
sbb
dec
loopne
xchg
movsb
mov
xor
pop
sub
icebp
xor
cmp
addr16
mov
inc
out
loop
out
xchg
inc
jnp
jb
inc
enter
push
nop
mov
rdtsc
xchg
data16
call
mov
jbe
out
fdiv
fimull
ja
sub
outsb
mov
sbb
lods
es
ds
xchg
mov
mov
jae
cmp
lret
test
mov
ja
stc
fldl
mov
repnz
jg
push
sbb
gs
add
add
fisttpll
cli
jbe
enter
test
cmc
addb
adc
cmc
xchg
insb
and
add
cmp
incb
ret
jge
test
sbb
pop
jbe
leave
out
inc
mov
out
stc
and
jb
and
pop
insl
bound
daa
push
dec
cld
and
push
lock
jecxz
aas
arpl
mov
lods
stos
dec
jmp
jp
mov
sarb
mov
leave
fs
or
int
insb
imul
mov
sarb
sbb
mov
aas
cmp
aaa
jmp
ficoms
fwait
mov
xor
cld
insl
jmp
movsb
lods
testb
nop
add
cmp
fcomps
adc
pushf
popl
movsl
xlat
fbld
xchg
int
push
jns
add
sub
mov
ja
dec
or
push
ds
adc
rorb
clc
adc
cld
jnp
or
imul
outsl
ffree
movsb
lds
fs
push
fdivrs
fsub
fbstp
inc
inc
movsl
adc
xor
xlat
sbb
jne
cli
hlt
enter
gs
outsl
cmp
rcl
inc
sbb
inc
xchg
cmc
xor
les
outsl
push
mov
cmpsb
shrl
jne
pop
in
push
dec
and
in
lret
mov
fsub
test
jmp
dec
stos
xor
lahf
jae
popf
js
ljmp
mov
scas
das
repz
push
clc
lcall
mov
xor
pop
divl
mov
bound
mov
mov
icebp
leave
jbe
stos
pushf
mov
mov
pop
cs
add
scas
dec
lcall
push
sbb
cmp
xor
xchg
int
push
ljmp
pop
pcmpeqw
paddq
fadd
xchg
sbb
fsubl
scas
mov
push
in
cmp
push
aam
fidivs
stos
pop
mov
jo
aam
fidivrs
pop
ret
or
mov
loop
movsl
mov
sub
iret
mov
repz
bound
fs
mov
or
fwait
xchg
lea
cmp
imul
fisttps
inc
pop
ds
adc
std
fnstsw
push
fiaddl
cltd
stos
fwait
sbb
inc
xchg
pop
pop
inc
push
cmp
pop
shll
inc
fwait
in
mov
inc
jo
mov
or
jo
es
lret
cmp
mov
aas
adcl
dec
sbb
xchg
mov
inc
stos
push
movsl
cli
decl
adc
lcall
mov
and
and
lods
and
aaa
fcmovne
push
mov
xor
dec
ljmp
and
cli
add
and
push
lods
fnsave
xchg
imulb
frstor
push
pop
int
or
ds
pushf
pop
mulb
push
gs
mov
xlat
pop
or
and
icebp
push
xorl
aam
dec
mov
mov
fistpll
inc
test
cli
dec
dec
imul
out
cmc
fildl
xor
push
or
inc
dec
hlt
mov
daa
inc
or
test
sbbb
pop
mov
pop
pop
aas
cmpb
lcall
xchg
xchg
cmp
push
jge
stos
call
jns
cmp
fcomi
je
aaa
jbe
sbbb
adc
ret
sub
pop
adc
popa
data16
adc
mov
in
add
cs
inc
mov
lret
scas
dec
loope
data16
cmp
adc
les
adc
lea
mov
scas
fs
mov
pop
loope
popf
outsl
daa
rcll
jl
orl
push
jae
pushf
and
mov
test
mov
das
adc
lock
test
sub
fdivrs
and
roll
lock
pop
lcall
mov
mov
aas
sub
pop
pop
out
mov
adc
movb
in
dec
pusha
out
push
int3
outsb
orb
and
lcall
mov
jno
mov
or
xorl
mov
repnz
jno
leave
mov
xchg
push
daa
sbb
sub
mov
jo
cmpsb
call
jbe
sbb
movsl
push
fs
daa
pop
push
jmp
cld
dec
mov
jno
idivl
jb
enter
das
in
xor
imulb
dec
fnstcw
bound
sbb
jno
inc
loopne
mov
sahf
nop
mov
jns
dec
dec
add
cmp
ret
pop
pop
jg
in
andl
into
sti
pushf
ret
add
push
stos
dec
sbb
sbb
into
adc
jg
or
aaa
in
mov
stos
in
nop
lock
es
mov
ja
xor
enter
shlb
xchg
stos
and
aad
sbb
inc
scas
mov
lds
cmc
add
pop
jns
push
sbb
fistpl
subl
cmpsb
lods
outsl
ds
xchg
loop
loop
std
or
outsl
mov
mov
jo
mov
fimuls
fidivs
fstpt
xor
loop
xchg
cmp
mov
dec
cmp
jbe
jmp
enter
ja
xor
mov
out
push
arpl
add
mov
jbe
movsb
lds
rol
mov
push
int
cmpsb
jb
cmpb
test
jecxz
cmpsb
aaa
adc
out
adc
cmp
ret
sti
insb
inc
outsl
push
mov
sahf
lea
sahf
pop
push
and
fisubl
nop
sbb
add
repz
jbe
shlb
pop
in
ret
cmp
xor
out
mov
dec
jecxz
cmp
fwait
xchg
rorl
sbb
call
iret
xor
sbb
pop
or
sbb
imul
test
push
pop
add
inc
inc
xchg
pop
fsubrs
popa
mov
inc
cmp
rcl
or
add
xchg
aaa
pop
pop
or
movsb
add
jecxz
std
mov
and
test
mov
dec
mov
jge
enter
xor
lods
aas
lcall
mov
cmpsl
cmovno
mov
and
mov
sbb
or
aaa
cmpsb
adc
mov
and
mov
cmp
ljmp
pop
scas
fidivs
or
cmpsl
or
xor
jmp
mov
inc
mov
dec
popa
inc
jne
mov
repz
inc
pop
ja
or
xlat
jp
fwait
lret
call
adc
mov
mov
std
mov
sbb
ljmp
rcl
cmp
or
and
rorb
test
jns
mov
and
popf
sbb
jle
xchg
mov
fistpll
mov
aam
push
cmpsl
inc
pop
push
pop
in
and
jb
jecxz
or
mov
mov
enter
lcall
jns
rcrb
sar
repz
stc
in
cmc
lret
xchg
in
and
fwait
lock
jnp
mov
bound
add
push
or
sub
and
pop
inc
popf
or
dec
inc
fucomp
push
pop
add
adc
mov
ss
cltd
inc
fimuls
in
les
stos
lret
sarl
jne
jp
sar
dec
cmp
push
dec
imull
mov
out
mov
or
js
adc
sbb
shlb
data16
fnsave
mov
shlb
xor
dec
imul
adc
add
xchg
xchg
fs
andl
cmp
dec
in
mov
popa
aam
jle
mov
ljmp
insb
test
test
nop
rorb
sub
pop
imul
adc
pop
xor
test
int3
and
stc
cmc
sub
cmp
inc
dec
add
cmpsl
ret
ret
xor
jb
adc
fistpl
add
and
into
mov
dec
jge
inc
push
inc
jno
fidivrs
jg
lret
dec
jb
sbb
push
lds
int3
add
add
loope
xor
rclb
out
sbb
or
in
inc
jle
ror
adc
cld
cmp
dec
icebp
or
notb
jo
cwtl
xor
cmp
dec
rcrb
bound
adc
ljmp
lds
call
mov
pushf
xchg
out
aas
cmpsl
in
mov
xchg
jb
test
sbb
shlb
xlat
pop
lret
lret
ror
mov
pop
jo
sub
dec
sti
mov
inc
xor
pop
dec
int
outsb
js
mov
or
iret
mov
nop
xchg
pushf
mov
out
mov
outsb
mov
outsl
pusha
lahf
jl
mov
inc
cmp
jnp
dec
lea
xchg
adc
mov
sbb
icebp
dec
adc
in
mov
fcmove
scas
lock
enter
or
sahf
sub
jle
xchg
fwait
sub
xor
adc
aas
cltd
ja
xor
mov
inc
adc
shll
cmpl
xor
jg
cs
in
insl
xchg
subb
pusha
pop
jg
jecxz
dec
jae
hlt
aaa
adc
pop
fisubrl
pop
sbb
xchg
ds
mul
mov
std
jbe
fs
das
or
dec
repz
loope
pop
arpl
jns
gs
fistpl
push
lods
and
cvtdq2ps
mull
das
out
dec
xchg
inc
xchg
ljmp
lock
es
into
jb
xor
and
pop
mov
imul
sub
data16
repz
movsb
adcb
scas
jge
push
aad
out
inc
and
aam
jge
call
nop
pop
rcrl
cmp
fnstenv
orb
loop
adc
scas
cmp
add
mov
lret
push
pushf
inc
mov
add
cli
setb
popf
jecxz
shlb
test
dec
cli
xor
clc
jp
jo
mov
lock
xchg
sub
cmp
push
mov
xchg
loop
rcl
mov
ljmp
lods
inc
subb
pusha
in
adc
lcall
xor
into
outsl
xchg
xor
or
mov
ja
pop
in
sub
or
ret
shlb
aas
in
repz
les
xchg
pop
loope
in
mov
inc
test
loopne
in
imul
pop
jl
sub
cmp
lret
dec
lods
xchg
lock
repz
lods
mov
sbb
out
aad
add
nop
and
in
mov
fdivrs
xchg
sbb
fsubl
pop
test
lret
loop
adc
sbb
push
dec
sahf
lahf
pshufw
out
cli
or
sub
mov
sahf
dec
mov
shrl
std
sub
xchg
or
sbb
ja
dec
sub
daa
mov
addr16
xchg
insl
inc
into
inc
lods
mov
cltd
cmp
mov
in
sbb
inc
popa
and
push
int3
push
mov
xchg
xchg
test
out
rorb
lea
jbe
fildll
xchg
inc
adc
js
shrb
sbb
sub
mov
dec
or
ss
mov
imul
addb
out
test
in
mov
sbb
cltd
pop
push
ror
sbbl
adcl
sahf
pop
insl
rcl
testb
movsl
mov
dec
icebp
add
fidivrs
out
and
mov
mov
sub
enter
out
jae
mov
pushf
push
mov
dec
pop
sub
inc
lcall
outsl
and
xor
dec
adc
daa
lret
jmp
sub
es
sbb
pop
push
cmpsb
into
inc
push
cmp
jno
xor
fbstp
inc
outsb
push
jp
xchg
inc
jb
lea
adc
inc
mov
pop
add
xchg
popf
xor
bound
dec
or
cld
push
cmp
add
push
ret
movsb
or
imul
inc
ljmp
ret
pop
roll
push
cmp
pop
jmp
lods
pop
clc
mov
lret
arpl
xchg
xor
mov
pop
out
jge
inc
aas
mov
add
xor
mov
mov
cwtl
sub
mov
xlat
cmp
sahf
jecxz
cltd
add
push
outsl
in
xor
push
jo
mov
fwait
js
in
mov
cltd
pusha
sbb
movsl
xchg
repnz
int
xchg
mov
cmpsl
ud1
in
insl
fcoml
orb
nop
add
mov
xchg
aam
sbb
pop
or
lret
vldmxcsr
mov
out
mov
enter
adc
sub
jb
xor
push
push
pop
cmpsl
mov
xor
ja
fwait
mov
ja
xchg
sub
sbb
pop
adc
xchg
push
mov
test
popf
jbe
push
inc
jp
in
loope
dec
sub
cli
xlat
mov
cld
enter
cmpsb
or
clc
mov
mov
lock
sub
mov
add
aam
add
adc
jo
cwtl
movsl
dec
ret
mov
lret
xor
pusha
shlb
gs
push
repz
pop
leave
push
std
stos
cwtl
stos
xchg
sub
adc
call
jge
outsl
stos
call
cmovb
mov
dec
push
pop
fcoms
lret
sub
loop
adc
arpl
mov
ffree
xor
gs
gs
js
push
cli
add
mov
inc
das
cmp
ss
sub
mov
xchg
sbb
xlat
push
int3
adc
dec
push
iret
std
test
push
ffree
pop
addr16
aad
cmp
outsb
popf
push
add
mov
xor
inc
addr16
cs
scas
in
mov
movsb
push
gs
rol
int
subb
xchg
and
repz
pop
cmp
insl
dec
push
ffree
clc
cmp
test
adc
and
sbb
mov
mov
scas
lock
inc
test
fdivrs
iret
mov
dec
mov
mov
mov
out
jmp
es
and
jae
pop
out
cmpsb
fdivl
xor
push
repnz
push
jp
lret
into
cmp
ja
ss
mov
ja
xor
imul
mov
out
and
aam
push
mov
add
and
ret
xchg
jmp
into
push
cmp
push
xchg
test
cltd
sbb
xchg
push
rclb
add
in
pop
pusha
lock
nop
shr
mov
add
mov
fnsave
adc
mov
lds
or
sbb
aaa
xchg
aas
pop
push
jge
lret
xchg
xor
push
adc
jno
adc
insb
sbb
xor
adc
ds
inc
jl
inc
test
dec
loop
mov
ljmp
pop
ret
sbb
jecxz
jecxz
int3
sbb
loop
cmp
in
cs
es
sub
cmp
sbb
mov
cld
fs
mov
or
mov
cs
cld
std
sbb
xchg
cmp
jnp
mov
ret
lea
cmp
dec
fsqrt
jmp
or
adcl
jns
test
sub
xchg
mov
in
cltd
add
push
inc
xchg
push
lcall
dec
movsl
cltd
sti
jge
and
iret
lock
lock
sub
in
mov
mov
jmp
pop
sbb
pop
mov
in
call
push
shlb
or
add
pop
add
leave
call
sub
xchg
pop
ret
xchg
mov
inc
outsb
insb
loop
stos
repz
and
push
es
movsb
inc
mov
push
adcb
and
xor
mov
sbbl
push
push
fmull
in
sbb
or
or
jmp
adc
lahf
inc
lcall
scas
aas
imul
push
sub
loopne
in
out
dec
cmpsl
aas
loope
iret
jo
int3
fnstsw
add
cmc
sub
popa
fsubrs
enter
push
sub
mov
cli
and
addb
shrl
cltd
repnz
fwait
cmp
xlat
jbe
push
out
decb
sti
fwait
popf
inc
push
mov
pop
mov
pop
sbb
fs
adc
ficomps
xchg
cwtl
arpl
out
pop
test
push
mov
xor
push
mov
lcall
inc
pop
movsl
out
pop
shlb
gs
andb
sbb
popa
inc
mov
imul
mov
jge
inc
or
aaa
mov
repnz
cmp
jp
orl
xchg
cmp
ljmp
aad
and
inc
add
aaa
add
adc
jecxz
insl
dec
mov
and
push
movsb
popa
bound
cmp
es
sbb
into
fs
adc
lcall
pop
and
cmp
xchg
fld
mov
mov
jnp
mov
xchg
push
cmpsb
jo
fistl
mov
and
pop
adc
and
pop
shrb
jp
jp
fcoms
out
shr
fwait
insb
sub
cmp
inc
fs
dec
and
scas
mov
xchg
jb
mov
inc
dec
shll
add
mov
push
mov
xor
or
push
and
in
rolb
stc
inc
stos
movsb
mov
xchg
or
mov
xlat
iret
xor
adc
and
ljmp
adc
dec
popa
mov
push
nop
sub
es
xchg
sbbl
xor
xchg
faddl
imul
jnp
mov
ljmp
cmp
adc
and
or
cwtl
xchg
push
ret
sti
inc
pop
sbb
sbb
les
out
call
fisubrl
in
push
push
lods
jecxz
ret
push
leave
sub
sbb
adc
add
lret
pop
test
jae
and
js
cld
mov
push
mov
adc
fisttpl
mov
sub
xor
xchg
nop
sub
inc
fcmovnb
inc
jno
add
testl
aam
push
push
push
stos
mov
xchg
cmp
fbld
jmp
mov
inc
xor
push
pop
add
inc
mov
loop
pop
dec
cmp
dec
lret
or
sbb
cmp
cmp
xor
dec
sbb
loope
cmp
add
dec
aam
push
movsb
cltd
mov
clc
cmc
ss
adc
add
loop
mov
fistpl
pop
pop
loopne
ret
test
fcomps
and
sbb
mov
jne
and
mov
fstpt
xchg
roll
out
clc
mov
sub
mov
mov
fldl
lea
rclb
xchg
mov
sbb
pop
sub
mov
pop
aaa
and
add
adc
jle
adc
mov
popa
cmp
fdivrs
dec
pop
out
inc
movsl
cmpsl
pushf
lock
cld
icebp
and
mov
adc
sbb
int
popa
jg
arpl
jmp
sbb
iret
dec
and
xor
push
jns
hlt
es
mov
mov
ror
push
dec
mov
adc
push
xchg
push
imul
add
rclb
cmpsb
jae
mov
sub
mov
stos
scas
hlt
stos
mov
push
ja
mov
rcrl
mov
and
mov
sub
xchg
pop
bound
bound
or
mov
push
leave
cltd
stos
daa
push
scas
gs
ds
ds
cmpsb
adc
ja
inc
jmp
aaa
dec
jmp
enter
xchg
lods
imul
lock
add
push
icebp
adc
dec
loop
pop
or
aam
fs
popa
mov
in
ss
sbb
sbb
xor
jo
inc
int
fldenv
push
xchg
xchg
sbb
pop
in
adc
inc
mov
addr16
int
js
imul
adcl
shlb
jecxz
lds
cmc
xchg
pop
icebp
sub
test
jg
fmuls
leave
cmpsl
mov
rclb
sti
addr16
in
or
mov
cld
pop
mov
in
adc
dec
cmp
cmpsl
xchg
mov
inc
idivb
aad
hlt
and
outsb
pop
push
in
mov
scas
inc
cwtl
push
dec
mov
jnp
lods
std
nop
sarl
mov
outsb
mov
testb
icebp
add
pop
fimull
orb
aas
mov
add
and
outsl
push
lods
dec
arpl
pop
adc
sbb
pop
jne
mov
je
int
ret
or
bound
or
popf
xor
xorl
insl
push
and
test
into
or
cs
lret
cmp
and
mov
into
push
popf
lea
add
jmp
into
pop
pop
pop
fs
cmp
dec
nop
int3
les
cmpsl
or
loope
mov
sub
ds
sbb
lahf
loope
aad
popf
loop
test
dec
sub
gs
xor
movsb
and
xchg
mov
sub
test
imul
roll
pop
fdivl
mov
sbb
in
sahf
aas
je
loop
pusha
std
shll
or
in
iret
imulb
pop
fldl
scas
pushw
inc
lods
std
lcall
mov
popa
clc
ljmp
dec
scas
outsb
imul
mov
repz
stos
push
jae
dec
xchg
adc
jl
inc
mov
fldenv
push
add
mov
scas
xchg
mov
ret
imul
push
push
or
mov
leave
jecxz
setb
aas
cwtl
push
rclb
in
fs
imul
push
insl
push
mov
inc
xchg
lret
mov
xchg
icebp
mov
adc
add
sub
mov
mov
cmp
mov
test
push
clc
mov
jo
sahf
mov
push
push
scas
mov
mov
jbe
adc
or
fwait
pushf
in
adc
in
pop
rcll
or
xchg
add
fdivrl
cltd
sub
jg
fidivrl
sbb
repz
mov
loope
daa
ret
cmc
ret
sbb
and
xchg
inc
test
addl
lret
push
push
shl
leave
fstpt
sbb
dec
int3
movsl
xor
jbe
rorl
xlat
xchg
mov
adc
pop
ss
add
movsl
jecxz
enter
imul
idivl
scas
or
addr16
jg
sbb
jne
mov
fimull
mov
notb
aad
js
nop
repnz
call
cli
mov
fbstp
and
sahf
test
sbb
dec
sub
jl
push
jae
ret
mov
mov
pop
cmp
adc
jge,pt
cmp
push
shll
and
pop
daa
mov
imulb
pushf
call
cmp
lea
mov
pop
cmpb
jge
sahf
ja
nop
xchg
clc
cmpsb
adc
insb
jecxz
adc
mov
clc
add
dec
rcpps
push
inc
adcb
mov
test
jno
icebp
lock
add
bnd
pop
sbb
sbb
push
lahf
add
xlat
adc
movsl
fucomi
insb
int
lcall
addr16
in
rcrl
dec
negl
sbb
inc
jmp
add
jmp
add
fdivrs
adc
or
popa
push
arpl
mov
ret
adc
in
add
pop
add
hlt
cltd
jnp
mov
mov
fmull
and
pop
jmp
jle
xchg
mov
and
inc
ss
and
inc
push
jbe
test
cwtl
imul
or
lret
leave
sarb
and
fs
cmp
js
xchg
popf
adc
pop
fnstcw
xchg
in
mov
dec
xchg
push
adc
jnp
xchg
ret
jl
jmp
notl
stc
fadds
inc
add
aaa
imul
les
aad
pushf
outsl
pop
mov
jmp
mov
dec
popa
mov
dec
dec
mov
daa
ljmp
ds
addr16
mov
cmpl
xchg
out
aam
les
lret
fs
add
xor
fucomip
and
aas
stos
push
sub
nop
rolb
xlat
sbb
sbb
mov
xchg
aad
dec
lock
xor
fildl
into
sbb
push
je
cmpsl
mov
stos
add
sbb
mov
cwtl
clc
shlb
movsb
push
sbb
push
cs
or
xchg
adc
jb
sub
test
rolb
and
mov
jo
loope
cmp
inc
sbb
inc
mov
push
add
lock
dec
mov
in
out
pop
lds
mov
fistpll
xor
lods
faddl
stc
pop
inc
ret
jmp
or
popf
test
fsts
and
dec
cltd
repnz
inc
jae
icebp
xor
call
test
lret
iret
pop
aaa
aad
xor
xchg
ds
shrb
lds
icebp
mov
sub
inc
push
cmpsb
mov
sahf
rol
imul
sub
xor
mov
sub
push
lahf
rolb
lea
push
mov
xor
xchg
push
mov
adcl
pop
repnz
xchg
je
pcmpeqw
push
xchg
stos
fs
mov
nop
aam
mov
or
mov
sbb
push
cmp
mov
aaa
mov
nop
aas
jae
leave
ret
mov
cmc
lret
lret
mov
sbb
aad
js
mov
mov
xlat
lea
inc
int3
mov
inc
jg
sbbl
mov
cmp
mull
call
push
roll
ret
adc
xchg
repnz
lods
int
dec
cmp
mov
add
cmp
push
and
fidivrs
mov
push
mov
mov
xchg
aaa
xchg
jae
or
sbb
gs
les
in
int
push
sub
jae
fidivs
xor
fst
xor
shr
sub
add
shl
pop
jno
pop
fadds
arpl
cmp
xchg
mov
adc
xor
mov
addr16
insl
aam
inc
xchg
jge
push
cmpsl
stos
mov
lret
dec
xor
andl
push
repnz
mov
mov
loop
mov
arpl
and
in
mov
mov
sbb
add
sarl
jge
mov
ljmp
push
push
pushl
xchg
sbb
push
scas
test
stc
adc
push
inc
jp
and
cli
and
lahf
dec
mov
not
xlat
or
cli
pop
cmpl
frstor
push
dec
xchg
push
gs
and
sbb
andb
call
and
jo
or
push
pushf
push
cmc
cmc
sbb
in
cmp
movsb
adc
mov
mov
jo
cmpsb
cmp
int
loop
rol
pop
inc
cmpsb
mull
add
dec
jl
stc
stc
lret
ljmp
mov
push
ret
pop
mov
dec
dec
imul
mov
jge
lahf
pop
and
inc
xchg
insl
lcall
cmpsl
mov
lcall
and
call
lret
insl
loop
pop
test
mov
call
and
stc
scas
cltd
js
jl
test
popaw
xchg
fucomi
lods
fs
bound
clc
and
mov
push
xchg
xchg
push
inc
inc
inc
push
mov
jb
sub
orl
sub
test
inc
loope
jbe
test
xor
mov
scas
imul
jle
lds
or
stos
stc
aas
scas
mov
test
cmc
mov
dec
int3
pop
push
xor
dec
push
mov
inc
and
xchg
cmp
xchg
xlat
xor
jp
jp
orb
adc
enter
repz
mov
jae
jno
xchg
dec
push
push
loopne
push
jb
jae
mov
adc
sub
push
clc
mov
mov
jno
test
lret
and
adc
add
rorb
pmuludq
xor
loope
sbb
stos
ss
scas
negl
cmpsl
addr16
iret
xlat
adc
push
xchg
dec
mov
cmc
cmc
js
inc
lret
js
dec
pop
sbb
popf
pop
iret
pop
push
push
fistl
xchg
out
mov
pop
inc
lret
jb
lods
inc
pop
mov
sbb
xlat
loopne
mov
inc
xchg
cmpsb
sti
xchg
adc
jne
sbb
ret
mov
stos
sbbl
jecxz
dec
adc
in
loopne
xorl
cmc
out
mov
mov
insb
mov
mov
scas
lret
dec
clc
sbb
lock
sub
jp
xor
cltd
sub
das
push
dec
fwait
loop
out
fldl
nop
in
movsb
cmp
or
jne
rcl
loope
jmp
xor
in
ds
sub
adc
les
adc
das
xchg
dec
jmp
push
jle
push
adc
jmp
add
sbb
xchg
pop
or
dec
mul
mov
jl
push
bnd
rcrb
cmp
push
jo
aad
cmp
jecxz
dec
mov
dec
arpl
enter
inc
xor
xor
fwait
test
adc
incl
mov
jb
push
shrl
lret
mov
out
aam
ljmp
xchg
mov
addr16
and
dec
cwtl
orl
xlat
sar
mov
jmp
imul
cwtl
dec
cmp
cmp
mov
push
call
mov
xor
inc
lret
jno
dec
xchg
call
stos
repz
inc
push
nop
push
mov
mov
dec
ret
out
popa
sub
xor
and
inc
or
adc
rorb
dec
ss
mulb
outsl
loopne
xchg
mov
jp
inc
pop
js
inc
stc
fdivrl
lods
clc
cmpsb
sbb
xor
or
inc
push
cmp
or
dec
add
in
xor
adc
test
stos
push
fdivrl
daa
imul
pop
mov
push
sbb
loopne
daa
mov
loope
psubd
sbb
push
cmp
in
xor
inc
push
and
arpl
cld
inc
lock
cmpsb
imul
xchg
out
mov
jg
iret
cmp
pop
std
mov
jecxz
pop
lods
push
sbb
inc
mov
add
imul
sbb
mov
add
cmp
mov
cltd
inc
ret
and
mov
or
pop
outsl
push
lds
bnd
xor
subl
pusha
repnz
sub
add
jp
pop
sub
out
add
in
ret
filds
jg
test
push
fwait
cmp
jecxz
push
int
jecxz
lret
jns
mov
pusha
mov
lds
cld
cmp
jne
or
pop
lds
and
mov
or
adcl
add
mov
and
dec
mov
add
scas
enter
jns
pop
dec
out
and
lret
push
insl
iret
inc
push
adc
push
call
jae
leave
sbb
mov
sub
test
loop
sti
xchg
pushl
test
push
pop
inc
sbb
dec
lods
fucomi
and
lahf
mov
adc
pop
xchg
xchg
test
das
sbb
mov
rclb
out
movsl
ljmp
cld
bound
pushl
xor
addr16
and
and
jnp
mov
xchg
xchg
sbbb
jo
gs
in
lcall
mov
pop
jg
push
mov
out
imul
sub
test
mov
mov
pop
aad
xchg
das
scas
push
dec
mov
sub
scas
arpl
mov
scas
sub
mov
shrb
mov
popf
lods
mov
out
bound
mov
adc
movsl
push
xchg
pop
fldenv
mov
rol
pop
ficomps
gs
ds
jecxz
and
outsb
adc
jl
lcall
pop
es
and
inc
sub
jle
dec
ja
mov
cmp
out
cmpl
nop
fwait
push
cmp
jbe
mov
shll
std
out
into
leave
push
sub
or
xchg
aam
and
sbb
aaa
daa
add
pop
or
jns
sahf
pop
adc
les
aad
pusha
out
test
push
mov
adc
push
ss
inc
mov
xchg
pop
lods
sub
ljmp
loop
push
dec
push
adc
lock
aas
jo
and
sbb
add
or
xor
sub
and
mov
sbb
pop
and
jnp
xlat
outsb
or
lea
notl
stos
insb
mov
insb
shlb
lods
es
movl
insl
inc
mov
mov
mov
xchg
push
sub
fbld
xchg
adc
addl
ds
popf
cmp
enter
adc
adc
dec
xchg
out
mov
lods
and
test
sahf
aad
or
aad
pop
jp
dec
loopne
pop
shrb
inc
add
lock
adc
ret
push
xchg
dec
jl
jmp
gs
in
jge
das
les
mov
imulb
push
lahf
fwait
mov
dec
and
popf
xchg
arpl
push
shlb
add
stc
out
jmp
cmovns
test
jge
bound
adc
call
xchg
cmc
out
rcrl
mov
jno
jno
lock
lods
cmp
adcl
test
in
jns
xor
std
push
loop
imul
loop
test
or
scas
inc
ja
lea
xor
dec
shlb
clc
ror
adc
add
lods
mov
jae
add
lahf
loop
shll
in
fucomip
cmp
pop
mov
pop
mov
pushf
rorl
pop
jnp
push
int
xchg
and
mov
addl
rorb
dec
mov
jae
jb
stos
push
in
mov
cmp
int
insb
inc
xor
test
out
jmp
in
mov
stos
pushf
xchg
ljmp
ja
jns
and
cmp
and
es
aad
mov
mov
mov
dec
and
imul
ret
mov
cld
or
call
stc
sub
jmp
subb
add
add
mov
ret
int3
or
shrb
stc
xchg
xor
jmp
mov
push
jecxz
out
mov
push
cltd
int
add
fisttpl
rorb
ret
push
push
lods
sub
ss
jge
jae
pop
icebp
jno
pop
dec
inc
sub
dec
test
pop
push
shl
and
xchg
xchg
xchg
mov
stc
cmpsl
arpl
fistpl
repnz
inc
dec
mov
cmp
inc
mov
mov
in
pop
inc
notl
cmpl
cwtl
ja
xor
add
pop
jnp
js
add
xchg
push
push
movsb
cwtl
xchg
dec
sahf
adc
dec
fs
jp
lods
mov
inc
or
rclb
mov
jecxz
ret
out
cmpsb
fchs
clc
jmp
sub
xor
in
loopne
adc
mov
push
adc
dec
outsl
fisubs
add
pop
pop
xchg
dec
xchg
push
cs
push
jnp
mov
mov
std
cld
jb
sbb
cmp
mov
stos
pop
sbb
mov
mov
and
cwtl
mov
les
xchg
iret
fstpl
mov
mov
inc
dec
cltd
xchg
int3
and
or
sbb
xchg
aas
cmc
jmp
scas
pop
add
das
pop
cmp
cmp
mov
sub
daa
pop
sub
cmp
shrl
xor
das
or
push
test
pop
mov
adc
push
loopne
clc
sbb
push
or
cltd
sub
mov
mov
push
sahf
xchg
or
xor
adc
adcl
inc
mov
push
orl
lahf
mov
jle
inc
mov
jecxz
les
lahf
inc
aad
push
test
jle
outsb
cld
stos
xor
outsb
push
stos
dec
mov
fists
in
sub
jle
xor
or
std
std
imul
out
and
xchg
mov
jmp
xor
dec
cmpsb
lret
rcl
push
cltd
pop
andl
lcall
inc
push
fstpt
or
jge
jae
movsb
loop
lock
sarl
pop
jl
adc
fldcw
xor
sarl
pop
shll
inc
mov
insl
cmpsb
fisttpl
fsubs
xor
jnp
in
and
fdivrs
push
sub
aam
xchg
and
adcb
adc
mov
dec
and
cmp
scas
jp
push
mov
and
add
std
jecxz
stos
pop
das
cmc
sbb
and
add
pop
cmc
pushf
push
ret
enter
cmp
jp
hlt
add
jmp
add
mov
cwtl
fsubrl
mov
out
sub
and
sbbl
pop
xor
ficompl
push
les
push
pop
mov
int
cmc
addr16
pop
arpl
mov
push
inc
fildl
and
pop
inc
ffreep
cltd
xchg
out
xchg
push
or
enter
enter
xchg
push
dec
cmpsl
cmp
adc
shr
pop
sbb
ret
sub
lods
inc
push
leave
cltd
sub
sub
rcrl
jae
cmp
mov
stos
jb
test
push
shrb
push
lock
lcall
jbe
rolb
xchg
daa
mov
add
pop
mov
cld
jns
cmpsl
sub
stos
mov
adc
inc
push
std
and
cmp
jecxz
aam
pop
mov
int3
or
cmpb
cwtl
test
leave
leave
mov
jg
jb
pop
dec
lds
and
or
fimull
daa
mov
lahf
jns
leave
out
iret
repnz
decl
enter
dec
sub
mov
sti
xor
cmpsl
and
in
sbb
pop
popf
popf
add
cli
and
add
mov
push
mov
sahf
cwtl
roll
insl
cmp
pop
adc
sbb
xor
cli
adc
or
inc
inc
mov
ljmp
lock
xlat
test
cmpsb
pushf
lds
setns
mov
ret
sbb
xchg
jbe
jo
mov
lods
push
es
and
sbb
push
jl
push
mov
sub
aaa
and
xchg
jp
cld
cltd
fdivrl
adc
cltd
popf
jns
xor
push
insl
or
xchg
cwtl
js
out
stos
cmpl
les
std
adc
lods
xchg
repz
pop
out
dec
jecxz
call
shll
push
sbb
dec
push
push
dec
cmp
inc
mov
or
hlt
std
imul
sti
jbe
pusha
leave
cmp
in
aad
daa
out
push
mov
jo
dec
out
and
fcomps
inc
out
dec
shll
and
xchg
mov
xlat
mov
sbbl
sahf
jge
ret
es
fnop
xchg
test
jl
mov
lock
shl
aad
insl
push
pop
cmp
xor
inc
inc
sbb
aas
mov
adc
hlt
mov
stos
fstpl
rcll
push
aaa
mov
popf
mov
jecxz
subb
and
xchg
andb
and
push
add
leave
lahf
mov
push
imul
fdivrl
nop
fcompl
shll
add
repnz
inc
in
lods
lock
xchg
js
mov
imul
sbb
sub
lret
mov
cmpsl
arpl
mov
jmp
sub
push
ret
dec
sub
sub
cmp
lock
and
or
jp
imul
sbb
and
lods
mov
test
push
test
aas
mov
icebp
cmp
push
frstor
lret
mov
sbb
dec
cmp
mov
inc
fsub
lea
xchg
imul
sti
mov
in
sbb
outsl
sub
pop
divl
lea
int
mov
in
fstpt
cmpsl
xchg
sbb
rol
addr16
mov
lea
jb
xor
fcomps
div
call
gs
outsl
xor
mov
scas
fld
push
jge
mov
xchg
jns
cli
xchg
cs
push
lods
subb
cmp
cmp
in
mov
dec
xor
cmp
std
inc
cmovo
pop
lret
outsb
mov
orps
sbb
cmp
fldcw
iret
jns
clc
mov
pushf
mov
mov
pop
sub
add
xor
pop
lret
inc
insb
pop
or
test
or
test
sahf
fnsave
insl
xor
pop
shlb
mov
popf
push
lret
les
mov
xchg
xor
das
nop
test
sahf
pop
adc
aad
push
test
ss
sti
pop
incb
dec
es
enter
push
ja
inc
subl
rolb
cmp
dec
and
aad
scas
lret
mov
sahf
dec
cmpsl
insb
push
mov
enter
imul
and
xor
push
or
mov
fistpll
jmp
adc
jmp
lret
pop
xor
sub
pop
adc
in
xchg
test
js
xchg
dec
dec
sub
mov
shlb
aad
mov
jg
in
or
sbb
or
ljmp
mov
adc
dec
notl
aas
mov
arpl
jbe,pt
mov
cmp
nop
inc
xor
push
fs
pop
add
fisubs
or
cmp
gs
lds
sbb
je
cmpl
ja
faddp
imul
mov
outsl
cld
fdivs
fidivs
ss
cmp
push
lahf
das
pushl
mov
sti
rcll
xchg
dec
aas
call
call
fcomps
ret
jnp
pop
pop
in
adc
xor
cmpsl
cmpsb
add
xchg
mov
adc
push
les
mov
insb
adc
cmp
add
mov
pop
xchg
cwtl
imul
add
cs
mov
xchg
sub
inc
sahf
arpl
icebp
cwtl
dec
fsubrl
popf
cli
and
inc
aam
test
cmp
xlat
push
bound
inc
outsb
int3
mov
cmc
movsl
mov
xor
add
js
out
imul
and
cli
cld
pop
cmp
lock
shll
push
add
xchg
lret
out
adc
pop
leave
fchs
sbb
xor
jb
mov
mov
div
inc
jno
fistpll
shld
in
xor
roll
lcall
mov
lock
adc
or
xchg
loopne
push
popa
jns
fiaddl
jg
andl
aam
cld
add
fisubrl
loopne
ja
mov
lahf
jp
fldt
enter
adc
inc
sub
into
insl
xor
sub
or
out
pop
xor
inc
sbb
or
and
out
inc
std
or
in
int
xor
jns
mov
fsts
repz
mov
push
mov
sbb
test
dec
push
jnp
js
lret
fldt
cmc
inc
in
shlb
test
mov
cmp
adc
push
cmp
jnp
mov
cld
bnd
push
jmp
icebp
or
fidivrl
mov
lcall
dec
xchg
sarl
or
and
aas
cmp
lods
ljmp
xor
hlt
shll
push
xchg
lock
std
movsb
ret
lods
test
jmp
outsl
xchg
iret
and
imul
or
insl
sub
stc
adc
jle
fiaddl
sbb
or
cmp
repz
fs
movd
lret
outsb
sahf
jne
sbb
les
int
test
mov
int3
out
inc
leave
sbb
stos
mov
mov
add
outsb
jg
out
dec
out
jle
and
fbstp
stos
xchg
aas
ss
nop
push
push
jge
jne
addl
jmp
in
shl
and
incl
xchg
mov
stos
cs
adc
mov
nop
movsl
pop
in
das
nop
nop
ja
in
dec
lret
cmp
cld
popa
pusha
xor
outsb
sbb
sub
loopne
pop
xchg
cmc
or
fildll
shll
push
jb
lds
mov
popa
mov
jle
add
mov
sahf
xchg
mov
lods
mov
clc
jp
adc
sbb
pop
call
dec
inc
outsl
mov
fnstenv
out
pop
lcall
add
add
test
pusha
push
shll
sub
sarb
mov
push
je
ljmp
sub
call
ljmp
daa
xor
xor
test
add
inc
sub
ds
push
xchg
mov
into
sub
movsl
dec
ds
test
fucomip
shlb
movsl
dec
and
and
test
ds
mov
cmp
js
sub
inc
fisttpll
ret
jnp
mov
int
mov
lcall
inc
iret
jne
xor
sub
pusha
icebp
popa
dec
mov
dec
ljmp
xlat
pushf
push
jecxz
fdiv
pop
jno
outsl
loop
pop
mov
sub
outsl
and
adc
add
add
lds
pop
into
dec
fists
pop
push
jmp
jns
dec
mov
inc
cli
fdiv
shl
pop
jmp
jmp
adc
stc
imul
sub
push
rcrl
xor
mov
pop
enter
std
insb
testb
fldl
nop
dec
xchg
aas
out
jae
sub
call
test
jo
ljmp
sahf
bound
popf
enter
dec
les
mov
push
jg
icebp
cwtl
pop
jg
push
arpl
imul
outsl
mov
nop
push
jge
test
int
jge
push
adc
ret
sub
mov
in
test
sub
dec
or
enter
fwait
scas
adc
xchg
icebp
andb
inc
push
dec
outsl
cld
fidivrl
mov
shrl
idivb
push
lea
pop
icebp
sub
cmc
mov
xchg
xchg
lcall
jbe
pop
cmpsb
xchg
add
mov
inc
lret
mov
test
fiadds
or
rclb
scas
into
add
int3
enter
lock
or
stos
pop
lret
sbb
inc
sub
mov
mov
dec
adc
xlat
xchg
pusha
push
xor
cwtl
fcompl
push
sub
xchg
stc
insl
fcomi
push
ja
xchg
add
iret
pop
cmc
ja
inc
dec
cltd
dec
fsub
xchg
or
or
call
add
and
shll
dec
push
cmp
or
xor
xchg
pusha
sub
sbb
dec
jl
pop
stos
cmp
push
xchg
fsubr
jecxz
rclb
pusha
push
ja
add
clc
lea
push
mov
xchg
sbb
push
je
or
call
inc
push
mov
xchg
mov
in
in
mov
subb
dec
mov
rorb
cltd
pop
push
scas
test
cli
popf
mov
shl
pop
push
ret
sub
aam
pop
les
sbb
xchg
test
ret
push
outsl
mov
inc
cltd
pop
js
xchg
or
add
push
loope
xlat
mov
cmp
push
test
fidivrl
xlat
adc
lods
int
dec
adc
aas
inc
dec
cwtl
in
test
xor
fstpt
popa
xor
mov
cmp
push
dec
inc
fs
jno
add
add
fldenv
hlt
pop
shrb
fiadds
jno
fwait
test
popa
mov
mov
adc
cmpsb
jle
dec
dec
and
std
pop
jecxz
jo
and
mov
jge
adc
mov
cmp
xchg
mov
negl
hlt
cld
pop
aam
arpl
pop
jg
in
add
divb
push
leave
mov
arpl
cwtl
add
mov
cmpsl
add
pop
jmp
mov
xchg
cltd
xchg
xor
or
push
sbb
addr16
push
lahf
insb
and
ror
scas
mov
push
loop
call
js
dec
push
addr16
ss
jle
lds
std
cmp
fsubr
movsb
shlb
mov
push
jb
push
idivb
and
jno
out
aaa
out
insl
pusha
cltd
push
pop
dec
ds
orb
fnsave
mov
xchg
movsb
out
xor
xchg
ret
dec
sahf
lea
inc
loop
mov
cmp
xchg
in
adc
filds
push
pop
push
ds
ret
xor
xchg
in
xor
loopne
hlt
sbbb
inc
mov
out
stc
add
arpl
pusha
stos
shll
stc
fisubrl
das
adc
jl
mov
ret
push
jno
push
pop
pop
pop
and
fstpt
mov
les
rorb
repz
in
cmp
inc
jae
sub
mov
add
out
mov
pop
cmp
and
roll
cmp
jl
or
pusha
iret
sub
ljmp
int3
adc
ds
add
push
jp
push
cmpsl
insb
testb
xrelease
push
sub
mov
movsl
sbb
mov
or
sub
sub
adc
mov
push
xchg
adc
lcall
orl
cld
add
cmpsl
xor
jno
ja
repnz
es
imul
es
fs
mov
loopne
movl
xor
inc
lcall
and
pusha
push
xor
dec
data16
sub
push
inc
jle
inc
and
mov
stos
ret
in
lock
ss
scas
imul
int3
adc
and
cli
sub
mov
aaa
shlb
jl
call
jmp
mov
fildl
inc
ja
push
jns
subb
aam
ss
leave
xor
stos
popf
push
dec
adc
into
dec
lret
fisttpll
xor
adc
jp
ret
add
inc
add
sub
int
pop
lods
cmp
jl
mov
add
cltd
mov
ja
push
jp
int3
loope
xchg
repz
mov
or
into
sbb
in
jae
in
and
pop
int
mov
xchg
push
js
push
mov
xchg
mov
fnstsw
sub
mov
cli
adc
test
rcl
ds
inc
lock
xchg
mov
fists
push
push
fs
cmp
sub
pop
mov
je
dec
cmp
gs
insl
pop
cltd
jle
jle
hlt
mov
ljmp
xchg
push
scas
mov
in
mov
ret
jg
mov
cmp
dec
cli
das
push
loop
fadd
pop
mov
mov
stos
mov
daa
dec
mov
in
aam
ror
xor
sub
lds
xchg
fbld
and
movsb
stos
orl
sbb
imul
hlt
xchg
pop
jae
adc
es
je
rclb
sti
outsl
mov
ficoms
lea
inc
xlat
jno
push
jecxz
rcll
fsubl
sti
mov
mov
test
dec
out
out
push
push
mov
sbb
fadd
pop
mov
sbb
xor
ds
stos
xor
jno
mov
insb
popa
pop
and
push
push
inc
mov
gs
jne
inc
mov
pop
es
sbb
add
inc
outsb
fldenv
repnz
inc
gs
int
xlat
out
lock
add
push
data16
test
xchg
sub
data16
pop
lret
xor
loopne
pop
ljmp
sbb
pop
bound
in
xor
xchg
inc
loopne
lcall
push
push
sti
loope
push
rol
dec
test
clc
mov
adc
mov
into
jb
push
push
jmp
adc
bound
adc
xchg
ljmp
sbb
sti
out
push
test
popa
std
call
xor
adc
mov
mov
sbb
hlt
sbb
cmp
sti
push
cwtl
cmp
mov
shll
mov
push
sbb
in
mull
in
pushf
sbb
je
sub
pushf
in
pushf
lods
add
push
fsubrs
add
pop
inc
mov
fsubr
pop
popf
mov
lea
clc
mov
pop
mov
ss
or
ds
jns
xor
cvtdq2ps
into
insl
pop
pop
movsl
lds
jl
cmp
pop
outsb
pop
xchg
jecxz
cwtl
ret
sub
stos
daa
sub
fmul
push
clc
test
mov
in
fiadds
jl
out
adc
add
inc
jmp
stc
mov
xchg
mov
pusha
jge
mov
push
outsb
sub
icebp
pop
movsb
xor
mov
mov
shlb
movsb
out
push
mov
adc
cmpsl
outsb
sub
jns
scas
shl
jns
mov
cmc
jl
in
jbe
out
shrb
inc
mov
xchg
adc
pmullw
push
fcmovnb
loope
ficoms
mov
out
lret
adc
shl
dec
nop
aas
dec
mov
dec
sub
aaa
adcb
mov
jle
aad
adc
push
jecxz
and
jno
cmp
jo
inc
inc
popf
pop
dec
scas
dec
sub
outsb
jecxz
data16
add
cmpsb
push
fmull
mov
jb
jo
aas
imul
mov
call
add
dec
aam
inc
add
sar
push
inc
sti
push
inc
push
gs
add
cmpsl
mov
and
cs
in
ss
xchg
pop
mov
ds
sbb
shlb
push
cmpsl
cmc
xorb
jns
xor
and
mov
in
outsb
gs
and
rcrl
or
bnd
sbb
xchg
and
sub
adc
pop
dec
or
rorl
ljmp
addl
and
movl
out
adc
xor
or
in
push
fsubrl
mov
dec
adc
nop
fidivs
in
outsb
in
xor
aas
lods
aaa
mov
xor
ljmp
xchg
push
jmp
repnz
jmp
jae
outsb
into
cmpsl
and
jg
loopne
adc
lods
stc
popf
test
lcall
inc
xorb
cmp
xchg
cli
orl
es
scas
xchg
and
iret
and
mov
mov
loopne
fcmovb
lods
dec
scas
stos
adc
out
aas
cmp
or
subl
aam
pop
xchg
xchg
or
stos
pop
jno
cld
lods
cld
xchg
incl
pop
or
mov
ds
push
push
mov
imul
mov
outsb
lock
cli
dec
jmp
in
adc
testl
cmp
dec
mov
std
out
sub
xor
cwtl
cld
loopne
and
daa
xor
cltd
mov
cltd
adcl
xor
mov
and
adc
inc
aas
out
cmp
or
jb
out
and
shlb
mov
js
and
bnd
adc
aad
mov
jmp
insl
outsl
into
pop
daa
add
jns
sbb
sub
mov
mov
xchg
popa
insl
out
xchg
int
add
call
lcall
dec
pop
xor
jmp
sbb
addb
arpl
or
inc
pop
lahf
mov
mov
ret
xchg
inc
rol
out
leave
cmp
out
mov
add
iret
dec
lret
cmpsb
mov
dec
xchg
or
pop
or
jae
mov
dec
and
xor
inc
outsl
pushf
lret
clc
lret
in
iret
popf
sarl
out
or
fdivl
mov
jge
xchg
jge
aas
je
mov
jl
outsl
into
jl
aad
sbb
jbe
push
mov
lds
insl
xchg
mov
ficoml
aam
fistps
bound
aas
sti
rol
rorb
fs
outsl
jecxz
sub
jno
inc
outsb
ret
scas
mov
pop
dec
adc
mov
ja
or
xor
inc
fmuls
out
dec
rclb
insb
jmp
mov
popf
push
in
leave
push
inc
push
push
in
mov
or
rolb
icebp
nop
pop
adc
mov
pop
iret
int3
out
pushf
popf
gs
and
aad
xchg
neg
sarb
fisttpl
popa
inc
and
cmpl
jae
sbb
add
jbe
call
pop
dec
cmp
sbb
jp
dec
cwtl
mov
jo
popa
add
inc
inc
movsb
mov
push
add
and
xorb
mov
js
adc
inc
lahf
xor
xor
jl
or
push
rorb
mov
es
dec
xchg
ja
pop
mov
jbe
pop
mov
incb
das
pop
xor
imul
add
ss
loop
push
mov
or
or
test
into
xchg
push
pop
xor
mov
pop
mov
push
mov
dec
push
xchg
lahf
sahf
cmpsl
and
test
insb
into
mov
ja
les
dec
lret
lret
push
xchg
mov
into
icebp
les
xor
leave
test
xor
jbe
outsb
cld
jb
fbld
pop
popf
jge
mov
sub
loopne
cmp
mov
push
push
imul
dec
xor
ret
push
enter
mov
vprotb
xchg
xchg
push
inc
insb
pop
mov
adc
xchg
push
aam
mov
iret
mov
imul
pop
sbb
iret
lock
cmp
mov
adc
out
inc
mov
mov
leave
mov
call
dec
lock
mov
ds
adc
lock
aaa
aad
jo
ljmp
test
jno
popa
xor
insl
inc
sbb
jmp
lds
into
aas
clc
rcll
rorl
fiaddl
lahf
lock
dec
insl
jge
icebp
sub
cmpsb
inc
rcl
jmp
xor
jno
mov
aam
jecxz
jae
repnz
punpckldq
xchg
or
mov
xchg
mov
imul
mov
out
dec
sub
repnz
or
ljmp
xchg
test
mov
cmp
dec
test
lea
insl
xchg
mov
iret
inc
adc
rol
add
mov
inc
cmpsl
aaa
add
push
mov
into
or
js
dec
sub
fildl
sar
insb
out
jbe
ss
pop
cmc
icebp
dec
inc
stos
pop
aas
xlat
hlt
pop
test
sbb
stos
cmc
shlb
pop
repnz
dec
and
popaw
push
push
and
icebp
lret
adc
sub
stos
movb
xor
in
bound
mov
jmp
lret
stc
mov
jb
xchg
loopne
outsb
mov
daa
int3
push
pop
iret
sbb
ss
push
cmp
sahf
js
inc
lcall
scas
sarl
inc
out
sbb
mov
inc
ljmp
adc
cmp
nop
lods
out
lods
rolb
mov
stos
mov
movb
fsubl
es
cmp
push
add
jle
mov
inc
imul
jecxz
jb
dec
cmp
mov
add
xor
mov
in
stos
xor
jb
cmp
cmc
in
and
inc
loopne
jg
and
iret
hlt
push
sbb
mov
outsl
mov
loope
loopne
fildll
jmp
stc
aam
mov
mov
enter
mov
jge
pop
test
test
insl
mov
arpl
pop
mov
dec
test
or
les
stc
fisubrs
jmp
inc
sbb
inc
pop
stos
gs
aam
pop
jle
jns
mov
dec
cmp
push
push
jnp
fnstsw
adc
cltd
mov
pop
hlt
pop
and
sbb
and
inc
in
push
push
mov
hlt
in
enter
inc
pop
jecxz
pop
shll
test
ja
sbb
outsl
pop
jo
xlat
rep
lods
pop
mov
cmpsb
inc
out
inc
repnz
adc
repnz
add
hlt
pop
test
je
outsl
imul
out
cli
mov
lods
pop
arpl
in
mov
adc
std
or
push
lret
push
sarb
mov
sahf
test
xor
pop
mov
pop
nop
mov
scas
push
pop
adc
iret
cmpsb
or
dec
outsb
call
inc
mov
jecxz
outsl
insl
enter
mov
setns
xchg
and
pop
mov
scas
jmp
jnp
shrb
stos
in
push
push
push
ret
shrb
jne
movsl
pop
mov
movsb
mov
jge
call
enter
inc
cmp
or
fs
out
lret
les
pop
sub
xor
in
pop
dec
mov
cmpsl
lret
pop
inc
rcrb
pop
cmc
and
test
push
adc
dec
iret
insl
cs
std
push
lcall
add
dec
xchg
mov
jo
xor
outsb
cs
sub
dec
jns
das
add
inc
push
scas
imul
jle
enter
mov
repz
push
xor
sti
sbb
xchg
movsb
push
pop
out
fninit
dec
fnstsw
inc
loopne
outsl
adc
dec
xchg
push
addb
clc
cltd
xor
subl
xor
mov
cmpsl
bound
or
mov
jp
push
xchg
push
movsl
aam
insb
xchg
test
repnz
pop
shlb
jge
shl
xor
fwait
stos
and
aam
adc
ret
push
popf
not
cmpsl
jnp
data16
popf
add
outsb
aaa
shll
pop
pop
mov
and
inc
dec
inc
sbbb
imul
and
imul
ffree
sahf
mov
sub
mov
pop
dec
jecxz
ret
scas
ret
inc
repnz
fwait
pop
xchg
ljmp
imul
inc
adc
push
mov
rolb
outsb
stos
gs
cmp
fmull
dec
cmp
decb
xlat
sub
pushf
pop
push
jmp
mov
ret
je
cmpsb
rolb
iret
fcoms
xlat
xchg
lds
pop
mov
dec
shlb
sti
and
cld
sbb
sbb
test
fs
imul
sub
push
mov
cli
aam
xchg
stos
xchg
test
cmp
and
adc
sbb
imul
sbb
fbstp
jge
pop
xchg
sti
push
push
popf
xchg
stc
dec
add
in
loope
test
xor
dec
add
std
mov
cmpsl
sbb
jecxz
mov
xor
scas
rcll
jnp
mov
fwait
xor
dec
scas
push
addr16
in
loope
in
pop
xor
xchg
xor
lods
jae
or
or
pop
mull
pop
dec
fildl
xor
adc
mov
mov
pop
xchg
adc
mov
push
add
dec
xchg
sarb
jae
out
iret
adc
popa
fbld
dec
pop
andl
fisubrl
lods
jecxz
mov
xorb
test
adc
mov
cmpsb
push
mov
push
popa
pop
dec
push
ds
pushf
sbb
jmp
dec
movb
cmp
mov
negl
cmp
add
mov
stos
idivb
out
xor
aaa
es
adc
jb
jmp
mov
mov
std
pusha
jle
popa
mov
push
movb
push
lret
and
xor
aaa
inc
jecxz
push
mov
das
lahf
insb
aam
ds
push
out
add
mov
pinsrw
es
outsb
in
mov
loop
mov
mov
hlt
and
ds
xor
jg
sub
inc
fwait
pop
sbb
jnp
arpl
sbb
jno
lods
jbe
out
mov
dec
cmpsb
xor
mov
loope
adc
sarl
in
mov
sub
lcall
sub
xor
mov
cld
repnz
pusha
mov
loope
inc
test
inc
lahf
loopne
icebp
cmp
das
insb
mov
cwtl
jmp
lods
jno
jp
add
jb
sbb
ds
mov
jne
mov
arpl
adc
cmp
cmpsl
fisubl
in
xlat
push
mov
mov
adc
push
jb
push
jno
ss
insb
cmp
lock
in
lds
cli
js
add
cli
icebp
bound
mov
stos
jne
fstps
xchg
in
ljmp
sbb
xor
xchg
xor
pop
rcl
cmpb
jle
addr16
xor
sbb
add
test
mov
fstcw
cmp
scas
dec
jge
push
leave
jnp
inc
jae
call
mov
cmpsb
push
lock
and
dec
mov
fst
jnp
dec
ss
mov
jle
dec
xchg
jns
mov
pop
imul
mov
iret
pop
fucomip
add
sub
or
inc
int
pop
adc
imul
rolb
cld
dec
addr16
add
xor
js
sti
mov
ljmp
adc
insb
hlt
lods
and
mov
pushf
dec
stos
push
cmp
iret
cmp
cmc
jmp
push
fiaddl
xor
adc
inc
jmp
jge
aaa
stos
jp
push
and
aas
jo
cmc
loopne
lahf
sub
adc
sbb
jmp
dec
lahf
loop
outsb
xor
les
mov
dec
mov
cs
pop
xchg
or
icebp
or
jp
adc
add
repnz
cmp
ret
mov
iret
repz
repz
add
sbb
inc
sub
cmp
inc
mov
jbe
mov
out
or
testl
mov
push
sub
pusha
adc
mov
stc
mov
por
imul
dec
aad
xchg
in
pushf
repnz
enter
inc
test
stos
imull
push
sub
mov
xchg
push
inc
mov
adc
mov
mov
sbb
add
aam
lcall
xchg
sub
test
xor
cmpl
sbb
lock
and
and
leave
dec
inc
lahf
dec
test
fsubrs
jmp
outsb
cmp
ret
mov
or
mov
dec
inc
gs
pop
fcmovnb
imul
clc
mov
arpl
sbb
ss
lret
xchg
push
adc
dec
xchg
cmp
adc
mov
mov
and
das
popf
inc
mov
mov
cmpsb
dec
sbb
ss
lea
arpl
jnp
fnstenv
mov
pop
pop
or
movsl
lahf
fs
mov
push
xchg
push
sti
lods
fadds
in
outsl
leave
add
mov
leave
sbb
insl
lds
mov
mov
cli
aad
jecxz
push
std
out
fmuls
mov
adc
inc
outsl
dec
or
or
pop
data16
or
sarb
inc
jmp
in
pop
and
rcll
sbb
fisttpl
ss
xchg
jl
leave
mov
push
int3
ds
int
pop
lret
dec
movsb
fisubrl
ret
lcall
into
je
mov
out
cmc
mov
xchg
push
add
xor
push
jmp
enter
mov
cmp
mov
dec
jb
ljmp
daa
hlt
pop
xor
add
pop
or
and
add
and
ret
mov
mov
mov
ret
les
shlb
inc
and
loopne
pop
scas
repz
adc
pop
cmp
js
ljmp
in
mov
stos
arpl
sbb
lds
push
ud2
stc
scas
add
outsl
into
scas
cmpsb
js
mov
loop
or
add
mov
repnz
jmp
inc
test
jnp
and
rorl
pop
mov
or
sbb
div
dec
aam
ss
xchg
and
lret
sbb
aas
cli
sbb
add
out
lock
rol
addb
and
filds
lret
mov
shl
xlat
xor
mov
fldenv
adc
loopne
jmp
incl
or
popf
mov
sbb
mov
cmp
insb
jnp
or
sub
in
shll
imull
lahf
es
adc
push
sbbb
test
mov
loopne
fisubs
inc
lcall
fdivs
addr16
dec
daa
sub
jns
fisubs
mov
xchg
push
dec
lods
mov
jno
enter
in
push
inc
lods
mov
in
rclb
pop
inc
and
jb
cmp
into
stc
mov
test
mov
mov
xchg
leave
andb
fdiv
sub
fcmovnbe
and
xchg
nop
lods
sub
mov
xchg
addr16
pop
sbb
push
lds
sub
lods
mov
shll
xor
xchg
jp
sub
jp
mov
std
out
mov
xlat
add
inc
sbb
mov
or
divl
daa
lods
inc
imulb
and
out
jmp
mov
adc
pop
mov
cs
hlt
daa
or
jg
or
outsl
add
push
arpl
and
mov
lods
push
pop
pop
mov
xor
sti
inc
pop
cld
hlt
fstpl
cwtl
mov
lcall
loopne
xor
leave
mov
sub
add
cmp
flds
test
scas
repz
addl
dec
inc
xchg
repz
xor
push
fisubs
add
cmp
lea
dec
ljmp
sbb
lret
cmpsb
stc
ficoml
and
into
xor
mov
ja
cmp
xorb
lea
ja
inc
repz
orl
adc
mov
mov
push
stc
mov
sub
pop
mov
test
lcall
pop
and
push
shl
shll
cmpb
xchg
imul
adc
nop
ljmp
xchg
scas
orl
incl
jle
adc
inc
loopne
loope
inc
daa
ja
push
loopne
les
mov
sbb
jmp
and
scas
out
jmp
hlt
popa
push
fadd
jg
movsl
enter
cmc
sti
or
das
enter
repnz
testl
jmp
repz
arpl
insb
sub
sbb
and
hlt
repz
adc
stc
loopne
jo
gs
or
call
shl
mov
jae
int
jmp
pop
adc
sbb
repz
int3
cltd
sbb
xor
imul
cmpl
sub
adc
fnstenv
frstor
xchg
adc
push
rclb
inc
xchg
jae
nop
test
push
jp
or
dec
and
stos
mull
lds
mov
mov
iret
inc
pop
gs
data16
jge
or
fnstcw
xchg
adc
cmp
imul
push
dec
ret
shll
jg
adc
inc
enter
mov
jno
pop
addr16
inc
lea
pusha
arpl
add
insb
sbb
jno
cld
and
negb
mov
cmp
aas
imul
call
aaa
lcall
mov
into
xchg
or
or
in
out
jae
adc
repnz
jge
mov
adc
mov
jbe
bound
imul
cmove
inc
sub
mov
sbb
insb
mov
lods
or
mov
jg
sub
insb
inc
in
imul
adc
cmc
pop
inc
repnz
rcl
mov
dec
js
add
div
aaa
mov
maskmovdqu
sbb
jne
cmp
push
cli
sar
stc
pushf
mov
aam
xlat
push
mov
dec
mov
in
lret
cmp
je
les
cmp
rcrb
and
stos
arpl
jns
xchg
xor
shlb
add
pop
imul
mov
or
mov
inc
add
pop
mov
neg
adc
xchg
sub
mov
leave
jecxz
ds
dec
ret
xor
aam
or
cmp
into
or
and
in
push
jecxz
mov
mov
shll
jnp
add
mov
stc
pop
add
loopne
inc
fisttps
pop
test
in
dec
stos
cmp
int3
fs
dec
movsb
out
mov
or
bound
sub
sbb
repnz
adcb
dec
call
int3
jnp
mov
imul
rcrb
xchg
fldenv
mov
push
xor
in
cmp
inc
int3
mov
inc
dec
fwait
xchg
mov
sbb
out
loop
cmp
mov
cmpsb
call
mov
sbb
pop
popa
lea
cmp
fisttpl
or
sub
and
pop
pushf
mov
and
repz
xchg
mov
inc
out
repnz
push
mov
pop
xchg
outsb
add
adc
test
xor
ds
or
push
sub
aad
or
out
mov
jo
andb
mov
sbb
xchg
sbb
sub
repz
lds
mov
xchg
sbb
lds
dec
mov
xchg
out
sbb
lods
iret
mov
fdivl
fldcw
push
push
sbb
jge
xor
sub
pop
sub
push
dec
lods
adc
mov
test
sub
js
jbe
push
mov
je
shrb
push
lret
addr16
repz
dec
pop
out
in
movsb
arpl
in
cmp
iret
sbb
mov
negb
fnstsw
xchg
or
mov
sbb
in
pop
in
bound
adc
cmc
lds
and
repz
nop
jge
ss
cmpsb
insb
sbb
mov
decl
inc
je
imul
dec
arpl
js
dec
mov
jmp
sub
mov
dec
add
add
movsb
mov
or
cmp
fidivrs
sbb
jg
ret
mov
adc
sub
xchg
dec
lock
xchg
jg
gs
mov
pop
into
std
mov
movsb
sarb
mov
mov
mov
sar
stos
std
mov
inc
popf
les
into
push
or
pop
fcomi
inc
popf
mov
or
subb
xor
push
adc
and
and
add
mov
dec
jle
sbb
lea
call
bound
loopne
xlat
cmc
call
cmp
mov
push
daa
sbb
lret
leave
mov
loop
imul
fisttps
rep
xchg
mov
andl
xor
into
and
mov
jp
push
push
in
movsl
mulb
xor
dec
inc
mov
jae
aad
popf
push
jae
xchg
lcall
in
pushw
cli
in
pop
les
pop
pop
pop
sub
out
and
xor
cwtl
xchg
add
loope
push
lcall
sbb
cwtl
sub
mov
gs
xchg
adc
pop
leave
insb
pop
out
ficoms
and
lahf
or
stos
add
pop
push
xchg
cld
insb
insb
push
out
div
popa
pusha
loopne
jg
lret
mov
xchg
mov
lods
xor
xor
jl
dec
imul
push
sbb
xorl
andb
fnstcw
repz
je
push
jo
mov
inc
fimuls
lds
fs
loopne
pusha
inc
jo
adc
jp
mov
in
repz
adc
push
enter
shll
ffreep
inc
repz
xor
faddl
mov
jecxz
xchg
mov
fdiv
das
mov
jmp
addr16
out
arpl
lods
lret
popa
cmp
scas
and
pushf
test
xchg
ret
dec
mov
addr16
bound
bound
arpl
and
in
mov
xor
shll
outsb
adc
push
xor
push
subl
xor
jns
mov
dec
add
dec
rorl
mov
hlt
in
pop
dec
call
push
add
jl
scas
add
ljmp
stos
jmp
shl
insb
insb
dec
addr16
jbe
fs
xchg
mov
and
jecxz
dec
dec
mov
cmp
mov
arpl
jl
pusha
aam
loope
dec
jg
jns
inc
icebp
mov
adc
jno
aam
mov
dec
fs
cmp
rorl
mov
mov
stos
xor
dec
ret
mov
push
dec
sarl
ss
imul
lods
repnz
sbb
dec
out
xchg
popa
and
pop
add
out
fbld
inc
movsb
mov
sbb
int3
mov
stc
rcl
push
adc
adc
jle
leave
out
clc
int3
nop
jb
inc
pop
scas
pusha
dec
mov
stos
push
mov
xchg
in
imul
sub
inc
xchg
push
lsl
jae
fimull
pop
jnp
repnz
sub
xor
clc
mov
stc
push
rolb
or
or
lcall
das
mov
fiadds
dec
mov
fucomi
pop
leave
insb
push
push
imul
mov
sbb
xchg
fwait
and
cmp
ss
dec
push
dec
pop
out
pop
pusha
cld
aaa
mov
fistps
jnp
mov
add
ret
sub
punpcklwd
lds
xchg
sub
dec
aas
dec
pop
call
lock
mov
mov
jle
icebp
pavgw
mov
out
inc
xor
inc
test
aas
les
pop
jle
jp
fcomps
pop
scas
ret
pop
mov
xorb
pusha
int
add
inc
cwtl
movl
mov
push
or
xor
push
test
insl
inc
jne
std
push
xchg
push
jnp
divps
ret
mov
bound
dec
jo
stos
or
inc
jmp
mov
ljmp
cmpsl
mov
push
fistl
ljmp
popf
add
jns
jne
xchg
lods
idivl
cld
arpl
mov
and
jne
mov
popa
add
mov
nop
pop
dec
nop
push
push
jmp
cld
cmp
dec
les
jg
ret
sub
loopne
mov
in
mov
or
cs
mov
adc
jno
scas
das
nop
scas
push
mov
lret
adc
jnp
or
inc
mov
add
clc
test
xorb
push
adc
cmpsb
cmp
test
cmpsb
mov
rclb
mov
lods
sbb
sbbb
test
scas
aaa
addr16
mov
mov
pop
inc
in
inc
pop
std
xor
sub
lahf
repnz
push
ja
fadds
aam
push
sub
dec
add
aas
cmp
jne
and
push
xor
lods
mov
jle
cmp
fcomps
in
add
ficoms
mov
movsb
jne
xchg
jb
push
xchg
inc
jae
or
aam
and
jg
fdivrl
out
fs
or
mov
xor
xor
sbb
movsb
jno
cmpsb
flds
ret
dec
jmp
inc
push
imul
cmp
dec
or
cmp
mov
jae
or
aaa
jo
sti
cmp
mov
xchg
pop
pop
dec
mov
jne
inc
fs
sub
fwait
mov
les
lods
xor
sbb
rcl
xchg
mov
outsl
movsb
call
insl
jb
xorb
dec
inc
clc
sti
cmp
inc
push
pop
test
dec
sbb
push
inc
out
out
out
loop
jb
jo
clc
and
xchg
rorl
out
imul
xor
push
jb
and
mov
jae
fbstp
inc
mov
xor
jecxz
js
aas
sti
stos
adc
inc
sbb
xor
mov
mov
and
sub
in
jp
leave
mov
cmp
jecxz
xchg
mov
repnz
and
mov
scas
adc
cmpsb
lcall
jl
repnz
mov
lea
and
aas
push
inc
adc
mov
iret
fisubs
add
xor
jmp
pop
sbb
notb
test
adc
mov
nop
lahf
sub
pop
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
call
xchg
sahf
jg
xchg
mov
pop
call
push
dec
dec
outsl
jl
pop
mov
flds
add
mov
mov
sub
call
inc
sub
scas
dec
fsub
mov
je
pop
mov
and
add
xor
add
sub
mov
push
jmp
inc
out
aam
jb
inc
jns
pop
insb
xor
add
add
and
pushf
movsl
mov
pop
sub
mov
add
mov
sub
jne
mov
jmp
xchg
ror
into
out
cld
test
call
jle
sub
mov
sub
fdivs
movsl
lods
push
xchg
mov
stos
into
adc
pop
xlat
lea
repnz
fwait
or
pop
push
cmp
nop
je
clc
jg
outsb
clc
xchg
stc
dec
clc
pop
xlat
sub
test
dec
jbe
mov
mov
xchg
jle
repnz
mov
xor
pop
xlat
clc
movsb
push
mov
mov
leave
add
add
jecxz
pop
xor
pop
xlat
clc
sbb
ret
cmp
fcoml
fldcw
pop
xlat
clc
inc
scas
mov
dec
ja
mov
push
cmp
jg
cmpsb
add
mov
loope
add
outsl
sahf
ds
xor
fnstenv
clc
push
or
xchg
repz
leave
adc
inc
push
in
and
xchg
movsl
clc
pop
movsb
dec
inc
add
bound
outsl
int3
imulb
aaa
adc
cmpsb
sub
jg
jo
pop
cmpsl
xchg
pop
push
xlat
idivl
xlat
repz
test
or
test
aad
add
test
inc
pop
aam
jg
push
mov
lcall
sbb
nop
and
arpl
xchg
inc
repnz
hlt
les
push
xlat
popf
fisttpll
pusha
jo
sbb
mov
test
ficoml
je
pop
xor
testl
lock
clc
rep
sbb
and
and
mov
out
ss
or
aam
and
mov
pop
rorl
cltd
sbb
je
xchg
aam
inc
pop
mov
jae
push
inc
mov
ljmp
mov
add
jns
popa
daa
jns
jns
mov
aam
aaa
pop
popa
sub
inc
cmp
mov
rdpmc
mov
jle
adc
adc
sbb
mov
mov
mov
fsubl
adc
cld
test
jle
insb
test
cmpl
fimull
jbe
dec
cmc
jmp
adc
mov
sub
and
sub
ljmp
ss
or
mov
or
ret
fmull
aaa
or
dec
lret
push
jmp
stc
aaa
stc
xchg
mov
jge
push
clc
sahf
imul
daa
jns
sti
mov
daa
jns
mov
lock
add
dec
sub
xchg
aam
push
jns
adc
in
out
push
dec
or
cld
cmp
leave
shll
jno
repnz
shlb
jge
xor
jge
inc
ss
call
pop
shrl
in
add
out
bound
mov
stc
and
mov
and
jnp
mov
les
jmp
cli
cld
gs
popa
gs
push
jno
fucomi
jge
mov
xor
dec
popa
gs
push
bound
dec
bound
dec
or
idivb
jle
or
push
cli
popa
xlat
aad
push
fimuls
mov
arpl
mov
bound
jecxz
dec
add
int
bound
fisubl
adc
mov
or
fdivrp
popa
gs
lcall
lods
mov
lock
mov
push
outsb
int
popa
gs
shlb
bound
mov
pop
pop
jmp
inc
inc
pop
mov
inc
jns
leave
mov
add
gs
xchg
sub
fisttps
and
stc
popa
gs
cli
ljmp
mov
push
gs
or
mov
push
gs
or
arpl
leave
mov
add
arpl
dec
bound
shrb
inc
popa
shrb
fistl
jmp
fsubrl
push
mov
fs
cli
ret
jmp
mov
jnp
cmpsl
fmuls
sbb
push
mov
jns
leave
mov
add
leave
mov
add
add
dec
ficompl
cld
jle
pop
mov
pop
pop
and
stc
popa
gs
mov
inc
gs
mov
aaa
jnp
pop
faddl
cmp
lret
dec
gs
inc
insb
gs
push
gs
dec
gs
xchg
mov
mov
bound
and
and
scas
pop
pop
mov
scas
pop
notl
mov
lahf
and
mov
dec
fwait
push
stc
pop
jmp
in
adc
and
mov
in
xchg
mov
dec
fwait
push
stc
pop
jmp
jb
xlat
pop
lds
arpl
popa
cs
cmp
int
and
mov
ss
cmp
dec
and
and
fldcw
outsl
popa
cs
cmp
int
and
mov
ror
fstpt
bound
imul
cmp
int
and
mov
insb
and
mov
lcall
jmp
gs
xlat
pop
lds
arpl
in
shrl
cs
cmp
rorb
sub
or
enter
mov
sarl
fisttps
dec
lret
vcvtps2dq
jg
inc
dec
xchg
scas
mov
fs
pop
stc
test
dec
xchg
scas
mov
cmp
shll
dec
bound
call
bound
dec
jns
mov
bound
or
xor
andb
dec
push
gs
fsubs
mov
and
fdiv
shlb
jge
push
gs
sub
dec
bound
popf
dec
push
gs
rcr
rclb
mov
imul
lret
dec
xchg
sub
adc
in
mov
cli
popa
gs
jge
test
dec
lahf
dec
adc
xchg
adc
sub
inc
mov
or
lret
mov
loopne
add
and
cli
fbld
and
mov
cli
or
ret
jecxz
ss
pop
pop
dec
xor
push
dec
mov
dec
loop
mov
push
mov
xor
call
jno
mov
mov
bound
dec
bound
dec
bound
dec
bound
dec
bound
dec
bound
std
popa
inc
mull
pop
cli
popa
gs
popa
gs
bound
dec
bound
mov
bound
dec
bound
jnp
gs
bound
dec
bound
dec
bound
dec
bound
mov
out
or
pop
in
inc
idiv
movl
dec
cltd
sahf
add
pop
and
lock
mov
int3
repnz
popa
jp
mov
ljmp
or
adc
push
incb
hlt
jo
cli
xchg
out
jmp
sahf
xor
js
loope
mov
xor
jbe
adc
xchg
pop
inc
dec
push
lods
push
es
xchg
into
das
mov
fcoms
inc
movsl
pop
test
in
dec
mov
jl
aam
nop
rol
mov
mov
pop
push
lret
je
in
jno
test
stos
cmp
pop
cli
test
pop
push
sysenter
lret
cmpsb
or
das
cmc
inc
jnp
and
xchg
das
add
cmc
pop
sti
leave
sbb
cmc
adc
subl
andl
inc
push
sbb
aam
xlat
add
loope
cwtl
stos
push
fstpl
or
xor
jmp
xchg
cwtl
sbb
lret
daa
sub
push
push
xchg
mov
sub
sbb
and
xchg
fs
int
jbe
mov
fnstcw
add
and
jns
cmc
dec
mov
lock
je
or
pop
and
pop
sbb
popf
test
add
in
out
lahf
out
add
call
sub
in
addr16
sbb
push
jb
sbb
dec
mov
std
pop
cmp
loope
cld
je
orl
xor
es
lds
mov
pop
mov
aad
mov
adc
dec
dec
add
jb
stc
lret
push
mov
or
ja
cmp
or
pop
repnz
dec
mov
cmpl
push
mov
inc
cmp
and
pusha
incb
push
lret
out
adc
andl
jl
loope
bound
mov
inc
cmp
push
lret
push
xchg
pop
outsb
dec
pop
negl
pop
aad
inc
rcr
cltd
pushf
jb
test
leave
fidivrs
rcrb
movsb
bound
cmp
outsl
cmpsl
loopne
xor
lcall
imul
loopne
stos
jne
lds
add
sbb
mov
test
xchg
ss
outsb
mov
lret
ret
pop
out
push
xlat
repnz
repnz
das
pop
daa
inc
pop
mov
movsb
aaa
push
adc
repz
pop
mov
jb
or
arpl
mov
dec
or
imul
aad
cmp
xor
cmp
xchg
push
jmp
cld
mov
xor
repz
pop
mov
cwtl
neg
sub
cltd
or
rorl
add
add
or
add
adc
mov
push
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
mov
push
add
mov
push
add
mov
push
add
mov
push
add
mov
push
add
mov
push
add
mov
push
add
add
add
add
jbe
jo
xor
cs
insb
add
imul
insb
add
gs
xor
fs
insb
add
insl
arpl
xor
fs
insb
add
jb
imul
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
add
add
add
add
add
addb
add
mov
push
add
add
add
mov
add
fistpll
add
add
inc
jb
gs
imul
inc
gs
arpl
popa
jo
add
add
imul
jae
js
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
add
add
add
xor
add
add
push
add
and
add
add
call
add
adc
add
add
sub
add
add
xor
add
add
or
test
add
add
and
add
add
or
test
add
add
add
add
add
add
push
add
xor
add
add
add
add
and
add
add
add
add
adc
add
add
add
add
or
sub
add
adc
add
and
add
add
and
add
add
inc
add
add
cwtl
imul
sbbl
nop
nop
nop
and
add
add
mov
mov
cmp
insb
fs
cmp
shll
subl
popl
scas
scas
scas
add
leave
sar
cmpl
jge
pop
aaa
int
push
out
push
dec
dec
and
dec
je
ret
and
inc
imul
jno
jno
in
fdivrp
in
fmul
jmp
aam
call
ret
mov
xchg
mov
mov
mov
ret
jo
mov
mov
xchg
xchg
xchg
or
in
sar
out
fst
in
fxch
ljmp
call
ret
sub
loop
jecxz
lods
pop
jge
jge
loopne
icebp
jecxz
out
jmp
enter
ret
jmp
sarb
jmp
jae
mov
xchg
add
fcomp
hlt
jmp
out
out
loopne
jmp
rol
jmp
sarb
push
in
jmp
jge
fcmovnb
lods
call
mov
popa
popf
xchg
mov
add
add
fcmovu
push
in
in
repz
sar
call
iret
mov
call
mov
inc
movsl
ja
jecxz
mov
shll
addr16
jbe
fcmovnu
in
jmp
jmp
jmp
int
in
mov
jmp
mov
in
frstor
fnstcw
push
inc
mov
push
or
push
push
ror
into
hlt
stc
hlt
icebp
push
icebp
in
push
in
in
jmp
int3
mov
jmp
enter
xchg
ljmp
mov
je
mov
push
jmp
scas
sahf
push
popf
pushf
fwait
push
loop
fsub
div
in
cld
imul
jmp
jmp
enter
ret
scas
jmp
lret
jecxz
xchg
fidivrl
pushf
call
mov
cli
cwtl
jp
mov
jecxz
jecxz
int
int3
jecxz
clc
ffree
mov
fcmovnb
test
call
mov
cltd
call
scas
xchg
ljmp
mov
add
call
movsb
mov
xchg
lds
lahf
shll
inc
fwait
jl
mov
jg
add
add
push
je
lret
movsb
test
inc
mov
test
mov
push
lahf
mov
jmp
add
repnz
add
add
add
add
add
pop
add
rolb
add
add
add
add
add
pop
add
incb
add
decl
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
push
dec
sbb
sub
pop
push
push
push
push
inc
cmp
stos
shll
push
loopne
pop
mov
aaa
push
outsl
popl
pop
push
push
adc
sub
outsl
mov
dec
mov
pop
sub
sbb
mov
filds
call
lods
dec
incl
xor
push
aas
aas
aas
add
arpl
jnp
jns
push
sbb
pop
add
add
add
add
add
inc
daa
test
xor
fdivs
push
fcmove
xchg
cmp
sbb
dec
dec
push
test
jle
sti
loopne
fidivl
cmp
push
add
movups
add
add
cmp
pop
cmc
cmc
cmc
call
ror
inc
mov
insl
mov
sbb
aaa
pop
pop
pop
add
outsl
add
sbb
test
scas
pop
mov
or
add
add
add
mov
in
dec
cmpsb
inc
ljmp
and
add
add
add
add
and
and
mov
in
in
call
int
ret
ret
mov
cld
jae
push
xor
pop
add
lret
lds
adc
mov
jg
add
inc
adc
in
in
in
sarl
shrl
or
add
add
jg
jg
push
push
push
jnp
hlt
hlt
fcom
sar
out
fst
jmp
int3
jmp
aam
fmul
mov
mov
popaw
cmpsb
and
and
cltd
mov
fstpt
xchg
add
add
hlt
rclb
rep
jmp
ret
ret
scas
dec
dec
dec
add
popl
sbb
sbb
call
ror
out
fst
in
fcmovne
in
fcmove
ljmp
fcmovne
mov
mov
imul
iret
jecxz
mov
rclb
cld
repnz
imul
popf
fistpll
inc
pop
pop
pop
add
lcall
sar
lock
out
in
fmul
in
fcmove
jmp
leave
jmp
jmp
iret
mov
dec
mov
mov
inc
lods
pop
mov
out
aad
fdivrl
hlt
add
add
add
pop
pop
xor
call
loope
loop
iret
out
loope
out
in
in
fcmove
jmp
enter
ljmp
call
int
call
ret
jmp
stos
in
xlat
mov
cli
idivl
pushl
add
add
aas
aas
add
xchg
xchg
mov
rcl
int
repnz
push
loope
out
loopne
out
fst
in
fcmove
jmp
ljmp
ljmp
jmp
iret
mov
cld
sti
mov
fistpll
fwait
sub
daa
sbb
add
add
icebp
icebp
fcmovu
in
aad
repnz
push
jecxz
out
loope
out
jmp
lret
jmp
aam
jmp
sarb
jmp
sarb
cld
cld
sar
lret
jo
shlb
test
lock
dec
dec
andl
lahf
add
add
add
and
or
call
into
push
jmp
icebp
in
push
loope
out
ljmp
jmp
rol
call
sarl
jmp
lret
out
out
push
out
lods
out
fistl
fadd
mov
fcmovnb
mov
sarl
xchg
in
push
dec
inc
jge
and
adc
add
add
dec
dec
outsb
icebp
icebp
icebp
call
rcl
ljmp
push
out
push
in
push
loop
out
fst
ljmp
call
sarl
jmp
iret
mov
fmulp
scas
sti
clc
mov
push
loop
call
lods
push
call
mov
mov
loope
mov
fcmovb
lods
call
mov
sub
inc
xor
add
add
add
add
add
iret
iret
jmp
rcl
into
push
in
out
hlt
jmp
push
call
fdivr
icebp
jecxz
in
fcmove
jmp
rol
jmp
sarl
jmp
into
mov
jmp
lret
call
idivb
call
mov
cmp
sahf
pusha
faddp
scas
jmp
lret
jecxz
mov
ffreep
stos
dec
mov
hlt
mov
frstor
add
add
jg
jg
addr16
out
out
dec
int
out
call
call
push
ljmp
icebp
in
ljmp
jmp
sarb
jmp
int
jmp
int3
mov
fadd
scas
clc
out
scas
jmp
int3
test
mov
mov
push
fsubl
dec
lods
mov
loop
scas
jmp
scas
jmp
lds
aam
andl
add
add
add
add
adc
sub
loopne
neg
fstp
call
rcl
clc
icebp
in
push
out
jmp
push
jmp
push
call
out
ret
rol
jmp
iret
mov
jmp
int3
mov
jmp
leave
mov
loop
movsl
std
divb
ljmp
lods
ffree
lahf
call
mov
incl
mov
test
jmp
mov
add
add
pop
add
out
dec
enter
out
ljmp
lock
imul
call
push
jmp
xlat
jmp
rol
jmp
iret
mov
jmp
lret
mov
jmp
leave
mov
fcmovnb
lods
push
loopne
jmp
rcll
mov
ja
faddp
lods
dec
mov
jmp
test
ljmp
xchg
xchg
addb
add
rcl
shl
call
rcl
stc
cmc
icebp
clc
repz
push
repnz
push
out
ljmp
ljmp
in
mov
jmp
int3
mov
jmp
mov
ffreep
mov
fld
mov
jmp
inc
and
lret
mov
fnstcw
ja
in
int
fnstenv
pushl
jae
leave
ror
leave
sbb
add
add
add
add
aas
aas
add
cmp
pop
mov
repnz
cli
div
stc
hlt
lock
clc
repnz
push
lock
cmc
out
call
in
jmp
into
mov
jmp
lret
loopne
mov
faddp
scas
fdivrs
fwait
std
icebp
movsl
std
rep
mov
nop
je
call
mov
fstpt
test
aam
mov
lret
negl
push
pop
pop
pop
add
push
push
sub
hlt
lock
stc
stc
cmc
repnz
clc
repz
icebp
in
push
out
ljmp
fst
jmp
int3
mov
jmp
mov
ffreep
mov
fadd
lods
jmp
into
xchg
stc
jecxz
push
fisttps
jmp
xchg
call
mov
lahf
fdivrs
fwait
call
mov
ljmp
push
rorl
add
add
scas
test
in
in
icebp
in
jmp
div
in
push
out
call
jmp
lret
loopne
mov
ffreep
mov
faddp
scas
fadd
stos
fdivrs
fwait
call
mov
call
mov
mov
call
mov
call
mov
call
mov
inc
mov
inc
mov
mov
mov
xchg
xchg
mov
fcom
jecxz
out
repz
out
jmp
jmp
leave
mov
ffreep
mov
ffree
scas
fadd
lods
fstpt
cmpsb
fnstcw
fdivrs
sahf
call
mov
call
mov
call
mov
call
scas
nop
cltd
je
roll
add
add
add
mov
shl
out
fld
scas
cmc
ffree
mov
fadd
lods
fcmovnb
stos
fidivrl
movsb
call
mov
lahf
call
mov
call
mov
call
mov
call
scas
nop
call
lods
pushl
pusha
cmp
cmp
add
add
jp
push
dec
subl
mov
fdivrs
call
mov
call
mov
call
mov
call
scas
xchg
call
lods
dec
test
test
mov
mov
push
cmp
mov
push
push
daa
push
inc
xor
mov
xlat
mov
pushf
call
mov
call
scas
xchg
dec
lods
mov
into
test
dec
movsl
test
mov
push
xor
insl
push
sbb
es
mov
stos
mov
mov
dec
lods
dec
test
dec
movsb
test
rcrb
movsb
push
ds
arpl
inc
sub
pop
aas
cltd
lods
mov
movsl
xchg
enter
xchg
push
sub
addl
sub
jae
sub
lahf
lahf
lahf
add
lea
lock
add
add
add
incl
cld
pop
filds
pop
incl
add
incl
add
incb
add
cld
add
cld
add
aas
clc
add
aas
clc
add
jg
add
pop
lock
pop
loopne
add
rolb
add
add
add
add
add
add
add
add
add
add
pop
addb
pop
loopne
add
clc
add
paddd
add
incl
add
cld
add
incl
jg
inc
push
ljmp
add
add
add
add
add
add
and
add
add
andb
add
pop
pop
add
sub
push
cmp
pop
pop
pop
push
cmpb
cmp
inc
sub
mov
movsl
dec
in
xchg
aas
stc
mov
fiaddl
adc
pop
pop
pop
or
add
add
add
add
or
mov
leave
outsb
in
lock
lock
in
into
jo
in
popa
fnstsw
push
push
and
addl
pop
sbb
sbb
and
push
push
stos
xchg
dec
mov
adc
inc
add
xchg
mov
lret
jnp
sti
filds
out
iret
jae
shrl
cld
test
add
add
dec
dec
dec
add
push
push
adc
sbb
addr16
add
add
cmp
sbb
pop
xchg
daa
movsl
stos
mov
iret
aam
push
out
call
fisttps
mov
sbb
inc
add
push
add
stc
fldl
shrl
inc
fwait
jge
lret
add
add
adc
add
add
cmp
add
and
dec
mov
mov
ret
ret
ret
jmp
outsl
imul
clts
outsl
outsl
outsl
add
add
add
sbb
aas
mov
mov
pop
in
int
in
into
jo
mul
in
xchg
outsb
fs
xchg
or
add
or
outsl
add
int
pop
sti
fisttps
dec
mov
inc
sti
cmp
adc
add
inc
add
add
jg
jg
add
add
test
test
hlt
hlt
hlt
loope
loop
mov
stos
cld
insb
arpl
pop
cmp
add
pop
ja
ja
add
add
daa
daa
daa
add
jle
ss
mov
insl
pushl
mov
adc
add
inc
add
add
add
cmp
push
sub
cld
out
in
imul
cmpsb
inc
jmp
or
cmp
add
xor
add
sbb
jg
pop
pop
pop
add
inc
inc
je
lock
repz
leave
call
leave
mov
inc
mov
mov
test
adc
xor
dec
dec
dec
add
add
je
jle
inc
in
shlb
lea
mov
xor
inc
cmp
pi2fd
add
add
add
add
inc
cmp
xchg
idiv
jmp
fnstenv
ljmp
and
add
and
add
add
sub
sub
xchg
xchg
xchg
add
add
ret
call
in
in
ror
sar
leave
fmulp
ret
enter
ret
mov
pushf
icebp
popa
pop
pop
sahf
or
lock
xchg
mov
xor
fadd
xchg
sub
add
add
pop
pop
pop
add
mov
mov
fnstenv
dec
repnz
or
add
add
add
add
add
add
pop
pop
pop
add
add
add
or
pop
pop
pop
xchg
stc
stc
stc
out
out
out
dec
lret
lock
jmp
int
jmp
aad
fmulp
sar
mov
inc
mov
popf
negb
push
xchg
adc
adc
and
and
mul
icebp
les
dec
test
imul
add
add
add
sti
out
or
cld
hlt
lods
call
mov
pushl
add
pop
aaa
aaa
aaa
add
arpl
pop
pop
pop
add
aam
out
repz
fdivrp
leave
in
fst
in
fcmovne
in
fcmovne
jmp
lret
enter
lret
mov
dec
mov
stos
ljmp
push
dec
xchg
adc
mov
cltd
in
jle
ret
cmc
loopne
mov
add
repz
repnz
sti
cli
repnz
jmp
mov
push
clc
movsl
inc
add
add
jnp
jnp
clc
clc
clc
jmp
lret
leave
out
in
fst
out
in
fcmovne
in
fcmove
in
fcmove
ljmp
jmp
rol
fmul
mov
dec
mov
stos
cmpsb
cltd
nop
jmp
repz
test
dec
dec
cmpsl
push
movsb
add
add
cld
icebp
mov
cld
divl
jmp
mov
pop
int3
clc
repnz
das
das
das
add
out
clc
out
out
out
fcmovnu
lret
out
out
in
in
fcmovne
in
fcmovne
in
fxch
ljmp
jmp
rol
jecxz
mov
aad
mov
int
scas
inc
mov
fxch
sahf
out
mov
iret
cmpsb
inc
hlt
cmpsb
xchg
pop
dec
sti
divb
jmp
mov
xchg
imul
add
add
add
pushf
pushf
pushf
lret
repz
jmp
jmp
int3
leave
out
loope
out
loopne
out
in
out
in
fcmove
jmp
lret
fmul
jmp
jmp
aam
jmp
rol
jmp
into
mov
call
shll
imul
scas
fdivs
mov
sti
stc
mov
jmp
ret
fstpt
leave
sbb
add
add
aaa
aaa
add
xor
repnz
lock
aad
loopne
int
lock
out
loope
out
out
in
fmul
in
fcmove
in
fxch
jmp
ljmp
ljmp
ljmp
out
mov
xlat
ret
mov
loope
test
imul
stos
cld
cld
mov
jecxz
pop
scas
xchg
inc
movsb
rol
add
add
add
or
push
mov
mov
cmc
cmc
cmc
jmp
in
dec
mov
icebp
jecxz
out
loopne
out
loope
out
in
fmul
in
fcmovne
jmp
leave
ljmp
ljmp
ljmp
jmp
rol
jmp
sarb
fcmovb
scas
push
in
mov
cld
cld
sar
cmc
mov
out
pusha
fidivrs
inc
xchg
push
push
push
pop
inc
inc
inc
add
add
add
or
add
cmc
cmc
cmc
in
in
in
dec
into
iret
jmp
fcmovnbe
push
in
lock
push
loop
out
loope
out
out
in
fcmove
ljmp
ljmp
ljmp
jmp
rol
jmp
sarl
fcmovnb
mov
jmp
mov
cld
sti
mov
loope
pop
call
mov
mov
popl
insb
or
dec
dec
add
add
add
jnp
or
int
ljmp
int3
leave
hlt
jmp
icebp
in
icebp
jecxz
out
loopne
out
loopne
out
jmp
lret
xlat
ljmp
jmp
rol
jmp
rol
call
sarb
out
mov
clc
repz
cld
cld
int
fistpll
sarl
dec
mov
jge
xor
sub
add
add
add
add
je
je
div
idiv
jecxz
jecxz
int3
int3
int3
jmp
out
push
out
repnz
push
jecxz
icebp
loop
push
loope
in
fst
jmp
enter
call
aam
jmp
sarb
call
sarb
jmp
iret
mov
in
scas
cld
cli
mov
push
out
fcmovnb
mov
fadd
mov
fadd
scas
call
mov
movsl
cwtl
mov
xor
sub
add
adc
inc
add
add
add
dec
add
sbb
aas
in
in
jmp
jmp
fdivrp
int
push
ljmp
repz
icebp
in
push
in
icebp
jecxz
out
loopne
out
fst
ljmp
jmp
aam
call
sarb
jmp
iret
mov
out
mov
fcmovb
mov
cmc
in
mov
cld
sti
sar
shlb
repnz
fstpt
fs
mov
mov
loope
mov
fadd
scas
xlat
mov
movsb
inc
mov
sti
mov
lret
and
push
pop
pop
pop
add
add
add
or
jnp
icebp
icebp
in
in
mov
loopne
hlt
jmp
hlt
ljmp
repnz
icebp
in
lock
out
loope
in
fcmovne
jmp
aam
jmp
rol
out
mov
out
mov
out
mov
loop
mov
stos
cld
clc
mov
fsubrs
jp
out
loop
dec
mov
mov
ffreep
mov
in
mov
jecxz
mov
loopne
mov
fcmovnb
stos
mov
fwait
inc
mov
cld
test
mov
push
push
push
add
add
add
and
add
xor
pop
ljmp
call
xlat
fdivr
iret
int3
lret
out
out
cmc
in
in
hlt
ljmp
repz
push
in
icebp
in
push
loop
ljmp
jmp
rol
out
mov
jmp
iret
mov
jmp
into
mov
in
mov
out
loopne
std
cli
mov
call
test
call
mov
hlt
in
mov
iret
scas
pop
inc
sahf
push
sarb
mov
in
mov
jecxz
mov
loop
mov
ffreep
lods
fidivrl
xchg
clc
mov
insl
jecxz
addr16
mov
add
add
add
add
test
repnz
loopne
loopne
out
call
call
push
jmp
push
ljmp
repnz
repnz
out
loope
jmp
aam
jmp
rol
jmp
sarl
jmp
into
mov
out
mov
jmp
int3
mov
fcmovb
test
cli
icebp
mov
cld
cli
mov
inc
fwait
inc
inc
test
loopne
mov
ljmp
mov
lods
jmp
enter
enter
enter
lods
faddp
test
mov
insl
fsubrs
xor
add
add
daa
daa
add
inc
inc
js
lock
jmp
iret
iret
ror
int
clc
icebp
in
imul
call
cmc
in
in
repz
repnz
icebp
in
out
loopne
jmp
rol
out
mov
in
mov
in
mov
in
mov
in
mov
ffree
mov
out
movsl
cld
divb
mov
lea
dec
mov
fld
cmpsl
mul
fwait
mov
jnp
dec
mov
loopne
lods
jecxz
scas
loop
lods
loop
lods
dec
scas
mov
scas
mov
cwtl
jns
mov
addr16
pop
pop
pop
lret
lret
lret
in
out
out
out
call
xlat
xlat
inc
ret
ret
push
out
jmp
div
ljmp
in
in
hlt
jmp
hlt
ljmp
repnz
in
fmul
jmp
rol
out
sar
sarl
in
mov
jmp
lret
mov
jmp
lret
mov
loope
mov
fadd
test
imul
cmpsb
std
divl
ljmp
mov
fnstcw
scas
jmp
leave
xchg
jmp
push
and
test
fs
fdivrs
stos
jmp
les
cli
mov
data16
mov
popa
leave
cwtl
mov
adc
adc
bound
xchg
hlt
hlt
hlt
jmp
loopne
call
rcl
aam
sar
clc
repz
push
icebp
in
div
jmp
imul
jmp
push
in
in
repz
repnz
jmp
rol
out
sar
iret
mov
in
mov
jmp
lret
jecxz
mov
loop
mov
ffree
scas
loopne
mov
clc
lock
xchg
fs
xchg
push
jnp
faddp
scas
ffreep
scas
call
mov
ja
scas
xchg
dec
call
pop
mov
mov
fnstcw
loop
mov
mov
lods
aam
rolb
ja
ja
sbb
sbb
xlat
xlat
xlat
repnz
out
fcomp
fdivr
mov
repnz
clc
repz
clc
repnz
div
in
imul
ljmp
in
in
hlt
jmp
repz
fdivrp
out
out
sar
iret
mov
in
mov
loope
mov
loop
mov
loop
mov
loopne
mov
xlat
mov
popf
cld
repnz
inc
lods
js
jne
sbb
sbbb
into
mov
ffree
lods
xlat
mov
xchg
jmp
shll
xchg
inc
popf
jbe
xchg
jo
lcall
leave
cmpsb
sbbl
outsl
fs
add
add
push
push
jl
lock
loopne
loopne
leave
lret
aad
stc
cmc
repnz
stc
hlt
icebp
clc
repnz
clc
repnz
push
icebp
jmp
imul
jmp
hlt
in
in
repz
out
ret
iret
mov
jmp
into
mov
loope
mov
loop
mov
loopne
mov
loopne
mov
ffree
scas
call
mov
sahf
cli
lock
jge
xor
pop
cmp
call
mov
cmpsb
fnstcw
jbe
in
int
loop
pop
call
test
cmp
mov
mov
call
insl
push
xchg
ljmp
add
or
add
sub
dec
xlat
xlat
xlat
in
rcl
sar
mov
hlt
icebp
cli
div
stc
hlt
icebp
clc
repz
clc
repz
push
icebp
in
push
out
ljmp
in
in
repz
in
mov
in
mov
jmp
lret
loop
mov
loope
mov
faddp
mov
ffree
scas
call
mov
cwtl
std
out
mov
pushl
nop
pop
lcall
scas
cwtl
call
mov
jl
in
iret
je
repnz
jmp
mov
imul
xchg
popa
repnz
jns
iret
fwait
js
shlb
add
addl
or
jp
jp
aad
clc
cli
div
cli
div
stc
cmc
repnz
stc
hlt
lock
clc
repz
div
in
div
jmp
cmc
out
jmp
hlt
jmp
lock
in
mov
jecxz
mov
loope
mov
loopne
mov
ffreep
mov
ffree
scas
mov
cwtl
sti
ljmp
std
repnz
std
lock
cld
in
popf
movsl
mov
jns
cmp
iret
mov
aam
sahf
mov
mov
shll
cwtl
aam
cwtl
std
cmpsb
test
sahf
jp
mov
in
in
in
add
add
add
jnp
sysret
add
add
test
in
ljmp
div
stc
hlt
icebp
stc
hlt
lock
clc
repz
push
icebp
in
push
out
ljmp
in
out
lock
jmp
into
mov
loope
mov
loope
mov
loopne
mov
ffreep
mov
ffreep
mov
fadd
lods
out
xchg
cli
loop
cld
jmp
nop
sti
loop
push
fisttpl
jmp
leave
xchg
call
mov
call
mov
fidivrl
sahf
call
mov
fdivs
cltd
mov
jne
mov
mov
add
add
add
dec
inc
ror
lret
aad
in
in
out
ljmp
stc
cmc
icebp
clc
repz
push
icebp
in
push
lock
imul
jmp
icebp
out
jmp
int
jmp
lret
loope
mov
loopne
mov
faddp
mov
ffreep
mov
faddp
scas
fadd
stos
fdivrs
nop
ljmp
call
mov
lcall
mov
lahf
fdivrs
sahf
call
mov
call
mov
xlat
mov
call
mov
cld
lcall
mov
push
add
mov
mov
jmp
out
lock
out
jmp
clc
repz
div
in
imul
ljmp
jmp
mov
loope
mov
faddp
mov
ffreep
mov
faddp
scas
fadd
lods
fadd
stos
fstpt
movsb
call
mov
mov
fnstcw
mov
fdivrs
pushf
aad
cltd
call
mov
call
mov
shll
insb
fcoml
pop
aas
movsl
mov
scas
push
movsb
movsb
movsb
push
jno
outsb
dec
scas
stos
test
loopne
out
fsubrp
icebp
jmp
div
icebp
in
cmc
out
jmp
loop
mov
ffreep
mov
ffreep
mov
faddp
mov
fadd
lods
fadd
stos
fcmovnb
test
fnstcw
fdivrs
mov
xlat
mov
pushf
mov
aam
xchg
aam
xchg
aam
xchg
shrb
xchg
nop
imul
imul
test
test
pusha
pop
pop
cmp
ror
fsubp
fstp
ljmp
jmp
faddp
mov
ffreep
mov
faddp
mov
fadd
lods
fadd
stos
fcmovnb
stos
fnstcw
movsl
fidivrl
xlat
mov
mov
aad
fwait
call
mov
call
mov
call
mov
shll
call
lods
mov
mov
arpl
lods
jbe
cmp
imul
jns
jae
iret
lret
loop
xlat
jmp
mov
faddp
mov
fadd
scas
fcmovnb
lods
fcmovnb
stos
fidivrl
cmpsb
fnstcw
call
mov
lahf
call
mov
call
mov
aad
cltd
call
mov
call
scas
xchg
call
scas
xchg
shrb
mov
pusha
cmp
stos
mov
add
bound
push
pusha
pop
pop
push
mov
mov
aad
cmpsl
icebp
ffree
scas
fnstcw
cmpsb
fnstcw
mov
sahf
aam
pushf
aam
lcall
mov
shrb
nop
dec
stos
mov
int
mov
into
test
xchg
imul
pop
cmp
fcmovnu
fildl
xchg
sub
pop
dec
cmp
sahf
cmpsb
mov
into
mov
in
fidivrl
mov
call
mov
pushf
shll
cwtl
call
mov
shrb
nop
dec
stos
mov
int3
cmpsl
mov
int
xchg
mov
push
jle
xor
jnp
xor
sahf
xchg
nop
add
add
test
es
cmp
gs
dec
lcall
xchg
out
mov
popf
call
mov
shll
xchg
dec
lods
xchg
shrb
dec
cmpsb
xchg
int3
movsl
test
mov
ds
push
xor
lock
add
add
add
aaa
xor
push
imul
mov
pushf
test
aam
fwait
cli
shlb
xchg
dec
lods
dec
stos
mov
int3
cmpsb
xchg
lret
movsb
test
lret
mov
push
das
mov
cmpsl
mov
add
aas
cmp
sbb
dec
xor
addr16
test
xchg
jbe
int
test
cmpsb
xchg
lret
dec
mov
jne
jl
xor
gs
inc
pop
out
out
out
add
add
add
push
or
pop
adc
push
cmp
jbe
pop
inc
test
andb
movsl
xchg
lret
inc
mov
dec
je
sub
lret
adc
add
add
arpl
sbb
and
sbb
pushf
nop
push
inc
mov
dec
sub
addr16
dec
dec
pop
pop
pop
add
sbb
push
pusha
ds
insb
inc
daa
xchg
pop
inc
xor
xlat
aad
or
add
add
ret
int3
enter
loope
push
clc
pop
add
inc
sldt
sti
orb
add
incl
add
add
clc
add
pop
add
push
push
add
sldt
push
add
add
add
jmp
add
add
add
inc
add
sldt
inc
add
cmpb
add
addb
cmp
add
cmp
add
add
add
incl
add
add
add
incb
add
add
add
incb
add
add
add
cld
add
add
jg
add
add
add
pop
add
clc
add
add
pop
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
pop
add
loopne
add
add
add
clc
add
add
aas
add
incb
add
add
add
addb
add
add
lock
add
add
cld
add
add
add
incl
add
incl
add
inc
add
incl
add
clc
add
incl
add
incb
add
add
incl
jmp
ud0
add
clc
ud0
add
lcall
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lcall
cmpsb
xchg
insb
add
lea
mov
jge
mov
jbe
shrb
outsl
add
movsl
ja
lret
add
mov
push
add
jge
out
shll
mov
test
add
movsb
sahf
add
stos
cwtl
add
mov
add
mov
addb
mov
test
shrb
add
scas
xchg
add
mov
add
mov
xchg
add
mov
add
mov
add
mov
add
mov
lahf
add
mov
cmpsl
add
mov
movsl
add
lea
loope
mov
jecxz
xchg
add
iret
xchg
add
lret
out
xchg
add
loop
add
ret
fcmovnb
test
add
ret
scas
add
ret
mov
ffree
mov
loopne
movsb
add
frstor
add
mov
jecxz
mov
loopne
mov
jecxz
mov
jecxz
mov
add
int
add
iret
mov
add
sarb
add
in
add
les
ror
roll
ror
add
rcl
add
fcmovu
add
fcmovu
add
rol
add
aam
add
rol
add
aad
add
aad
add
xlat
enter
enter
lret
fcmovne
add
fmul
add
fcmovnbe
add
add
fstp
add
hlt
lds
out
loopne
add
loope
add
loope
add
jecxz
add
out
add
call
in
hlt
ljmp
imul
jmp
add
hlt
icebp
add
or
add
or
add
add
add
add
add
adc
add
add
push
add
add
add
add
push
cmp
add
add
add
add
dec
pop
pop
pop
push
inc
xor
add
sbb
bound
push
dec
dec
nopl
add
add
dec
popa
bound
push
inc
inc
dec
adc
sub
add
sbb
addr16
push
inc
inc
or
or
add
dec
gs
inc
cmp
adc
add
imul
add
or
add
push
xor
sub
add
add
cmp
sub
and
add
and
and
sbb
add
pop
push
sti
add
pushl
add
icebp
mov
add
daa
add
loopne
add
rolb
add
add
add
add
add
add
add
pop
add
cld
sldt
decl
add
incl
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
sbb
inc
and
xchg
nop
je
add
test
add
mov
add
dec
add
cwtl
inc
add
adcb
mov
stos
nop
outsb
add
lea
test
nop
jne
stos
xchg
jl
mov
jbe
mov
jnp
mov
jge
mov
mov
dec
add
cmpsb
inc
add
movsl
dec
add
lods
dec
add
lods
push
add
lods
push
add
scas
pop
add
mov
add
mov
add
mov
add
mov
pop
add
mov
pusha
add
pushf
jl
shlb
push
add
mov
add
mov
pop
add
ret
jecxz
popa
add
les
loopne
insb
add
leave
push
add
int
add
lret
jo
in
into
jae
call
enter
sarl
out
aad
add
popf
addl
mov
addb
fwait
addb
popf
lea
mov
fwait
cwtl
add
mov
mov
test
mov
xchg
add
test
fwait
add
movsb
mov
add
test
add
mov
add
movsb
test
ret
add
cmpsb
mov
int3
stos
mov
shrb
add
mov
add
mov
add
mov
add
mov
mov
ret
add
scas
xchg
add
mov
add
mov
fwait
add
mov
xchg
add
mov
lcall
mov
popf
add
mov
add
mov
test
shll
add
mov
scas
add
mov
mov
add
mov
mov
add
mov
mov
iret
mov
test
mov
xchg
add
les
add
int
add
int3
test
in
xlat
mov
ljmp
add
fisttps
add
into
xchg
add
rcll
loop
fwait
add
fcompl
add
loope
add
loopne
add
jecxz
add
loope
add
in
add
loop
add
jmp
mov
add
shrl
fcmovb
lods
add
ret
ffree
scas
add
leave
scas
add
ret
rol
mov
fcmovb
mov
faddp
mov
fcmovnb
mov
rol
mov
add
int3
mov
add
lods
add
shrb
add
fisubrs
add
mov
loopne
mov
jecxz
mov
in
mov
loope
mov
in
mov
jecxz
mov
add
int
add
into
mov
add
sarb
add
loopne
add
out
add
out
mov
add
out
scas
add
icebp
movsl
add
rep
add
rep
add
out
add
divb
add
idivb
add
sti
mov
add
mov
add
int
add
into
ret
int
add
ror
add
ror
add
rcl
add
rcl
add
aad
add
aad
add
fcmovu
add
add
fstp
add
rol
add
aam
add
rol
add
aam
add
lds
ljmp
add
fmul
add
fcmove
add
fcmove
add
fcmove
add
fmul
add
fst
add
fst
add
add
cld
roll
cmc
leave
add
loopne
add
loope
add
loop
add
loop
add
loope
add
jecxz
add
in
add
out
add
loope
add
out
add
out
add
call
call
add
call
loope
hlt
jmp
add
in
out
hlt
out
call
add
repnz
add
icebp
icebp
add
repnz
hlt
hlt
add
hlt
icebp
pop
xor
add
add
xchg
push
sbb
push
push
add
add
add
and
add
dec
jnp
add
add
pop
and
add
add
sbb
add
hlt
lret
jno
add
add
mov
shl
movsl
lahf
jno
add
sub
add
shlb
add
hlt
into
xlat
mov
sbb
add
int
out
fcmovu
mov
jae
cmp
lock
fsub
jecxz
fcmovu
fidivrl
les
add
in
in
out
fcmovu
mov
xchg
daa
dec
shl
in
out
jecxz
fcmovu
fidivrl
in
sub
dec
add
int
in
in
in
out
fcmovu
mov
sarl
dec
ljmp
fidivrl
pushf
xor
xchg
je
add
add
add
lock
div
in
in
mov
scas
stos
les
subb
scas
scas
pushf
sbb
add
push
hlt
leave
repnz
div
cmc
in
fcmovnu
mov
mov
mov
mov
push
pop
lods
cmpsl
cmpsl
push
insl
add
add
ror
sti
cli
cli
div
in
xlat
mov
mov
mov
cmpsb
ret
pushf
subb
je
arpl
add
push
lock
idiv
in
in
mov
mov
mov
xchg
stos
mov
push
pushf
cmp
add
add
iret
iret
sti
cli
cli
div
out
mov
mov
lar
cmp
add
add
add
sti
cli
cli
cli
jecxz
mov
lea
pusha
jge
pop
inc
add
add
add
add
cli
cli
cli
mul
mov
mov
xchg
insb
insb
sbb
leave
repnz
cli
cli
cli
jecxz
mov
insb
imul
inc
add
add
aam
cli
ljmp
xchg
xchg
jne
insb
addr16
dec
add
lret
mov
jne
imul
add
jbe
jne
jne
imul
dec
gs
imul
add
add
imul
add
inc
push
push
adc
aas
adc
add
decb
jmp
ud0
mov
incl
into
aas
incl
data16
incb
add
cld
add
jg
add
clc
add
jg
add
pop
lock
add
add
add
add
add
add
add
add
add
pop
rolb
pavgb
add
lock
pop
cld
add
pop
incl
add
cld
add
incl
inc
push
ljmp
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
pop
cmp
add
sbb
jge
and
jnp
aaa
add
data16
jnp
add
jo
add
jne
add
xorb
mov
add
mov
add
xchg
cmp
fsubrs
dec
add
xchg
inc
add
pop
add
nop
pop
add
fwait
pop
add
mov
cwtl
pusha
add
cwtl
imul
mov
jae
lods
nop
jne
stos
cwtl
jae
movsl
xchg
jp
stos
xchg
jl
mov
jl
mov
lcall
mov
mov
jle
les
add
mov
dec
add
test
add
stos
dec
add
mov
add
stos
push
add
movsb
pop
add
scas
pop
add
lods
push
add
mov
add
mov
add
mov
add
mov
push
add
mov
data16
lods
fs
test
pusha
add
mov
imul
les
js
lret
mov
add
rcrl
ret
ffreep
jl
in
pusha
add
insb
add
lret
in
into
jb
loopne
jl
out
jnp
in
shlb
jmp
jl
lock
aam
add
cwtl
add
xchg
addl
scas
fwait
xchg
test
cltd
mov
stos
fwait
mov
mov
test
test
xchg
add
mov
mov
lods
mov
cwtl
add
cmpsl
xchg
add
test
pushf
add
mov
add
stos
add
mov
add
mov
addl
lret
add
cmpsl
mov
stos
mov
into
stos
mov
shrb
add
mov
add
mov
add
mov
test
mov
mov
leave
lods
xchg
add
scas
nop
add
mov
add
mov
add
mov
add
mov
add
mov
lcall
mov
sahf
add
mov
add
mov
add
mov
stos
add
mov
stos
add
mov
mov
add
mov
mov
int
mov
faddp
nop
add
lret
fwait
add
lret
out
mov
jmp
fimull
add
fiadds
add
fisttps
add
rcll
add
ficoml
add
fcompl
add
loope
add
loope
add
out
add
jmp
cltd
add
in
add
jmp
add
shlb
stos
add
shrl
add
sarl
ffree
mov
mov
aam
mov
add
leave
mov
add
lds
jecxz
stos
add
mov
loop
mov
in
mov
add
sarl
add
loope
add
loopne
add
in
add
ljmp
hlt
in
add
jmp
add
icebp
movsb
add
icebp
stos
add
loop
add
in
mov
cld
out
mov
cli
hlt
mov
stc
idivb
add
ret
ret
add
mov
add
int3
lret
add
enter
int
add
iret
int
ror
add
ror
add
aam
add
xlat
aad
xlat
xlat
fadds
fcmovnu
fildl
out
roll
aam
add
lret
add
enter
int3
add
fcmovnbe
add
fst
add
add
sti
ret
cmc
lret
add
loopne
add
loope
add
loope
add
in
add
call
jecxz
ljmp
add
jmp
add
jmp
add
out
jmp
add
repnz
add
repnz
hlt
icebp
add
clc
testl
add
das
cmp
or
add
add
push
push
push
dec
cmp
add
addb
add
outsb
sahf
mov
arpl
add
inc
push
stos
stos
inc
add
add
mov
add
add
add
add
xor
push
stos
cmpsb
data16
add
movsb
mov
add
add
cltd
jae
add
add
add
outsb
inc
push
or
add
pushf
scas
dec
xor
add
cld
fcmovnu
mov
add
add
add
sbb
add
add
mov
cmp
add
fnstsw
add
add
into
dec
sldt
add
enter
cmp
add
add
cld
fucomi
jmp
mov
jb
add
add
add
rcll
jge
add
add
cld
hlt
loopne
jmp
fnstsw
add
add
roll
outsl
push
jmp
jmp
out
mov
lret
xor
inc
push
hlt
cld
jecxz
out
jmp
jmp
call
xchg
pushf
cmpsb
xor
add
add
je
neg
out
out
out
jmp
jmp
call
mov
xlat
int3
inc
dec
cld
cld
jecxz
repnz
out
jmp
jmp
out
call
ret
xlat
push
dec
addb
add
out
out
out
out
jmp
call
out
call
in
xlat
dec
ds
add
outsl
cld
mul
ljmp
jmp
out
out
mov
mov
inc
insb
add
add
add
cld
jecxz
repz
repnz
out
jmp
out
out
out
out
mov
push
ds
xchg
xchg
xchg
bound
add
hlt
fcomi
repnz
out
jmp
out
out
out
mov
in
iret
cmp
mov
hlt
div
clc
repnz
icebp
jmp
call
mov
shr
inc
aad
inc
mov
mov
pop
add
hlt
mov
repnz
icebp
jmp
out
out
mov
mov
aad
push
leave
xor
mov
xchg
add
add
add
add
mul
fdivrp
clc
clc
clc
repnz
out
out
out
mov
lret
xor
cmp
xchg
mov
mov
sub
add
add
add
hlt
mov
clc
repnz
out
out
mov
rol
xlat
cmp
inc
mov
rol
rol
sub
add
add
add
neg
fdivrp
cli
clc
clc
clc
clc
repnz
out
out
mov
rol
leave
adc
mov
rol
rorb
add
jecxz
cli
cli
cli
stc
clc
clc
clc
repnz
out
mov
rol
int
cmp
sbb
pop
xchg
rol
ja
add
add
add
hlt
fninit
cli
cli
sti
stc
stc
clc
clc
clc
bnd
mov
rcl
push
push
sub
mov
mov
add
add
jecxz
jecxz
cli
cld
sti
sti
stc
stc
clc
clc
repz
rcrb
mov
pop
or
sub
add
add
cld
hlt
fninit
cld
sti
sti
sti
sti
stc
stc
clc
clc
bnd
rol
mov
add
or
xchg
adcl
xor
imul
add
add
jecxz
jne
std
std
sti
sti
sti
stc
stc
clc
clc
repnz
shlb
push
test
inc
inc
and
sub
add
add
add
add
std
std
std
std
sti
sti
sti
stc
clc
cli
repnz
mov
xchg
movsl
int
ror
mov
add
xchg
mov
popa
jb
jne
std
std
std
sti
sti
sti
stc
stc
clc
repnz
les
movsb
lods
mov
mov
sub
add
jecxz
idiv
std
sti
sti
sti
cli
clc
repz
les
push
fwait
mov
mov
sub
add
div
cli
cli
cli
cli
clc
clc
ffree
les
cwtl
xchg
mov
mov
jbe
pop
mov
cli
clc
mov
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
xchg
xchg
xchg
mov
test
sub
add
mov
lds
cwtl
cwtl
cwtl
xchg
xchg
mov
test
pusha
add
in
mov
mov
cwtl
xchg
xchg
mov
mov
sub
jae
insb
cwtl
mov
mov
mov
sub
add
add
xchg
cwtl
mov
mov
sub
sub
add
bound
xchg
xchg
mov
jns
js
sub
add
imul
sub
gs
js
sub
sub
add
add
jns
dec
and
pop
add
pop
and
sub
add
add
incl
add
cld
aas
add
inc
pop
add
sti
sarb
add
incl
lock
add
cld
jg
lock
add
clc
pop
and
add
clc
pop
jecxz
incl
add
lock
sar
add
loopne
jno
incl
add
loopne
adc
incl
add
rolb
cmp
add
rolb
xchg
add
incl
add
incl
add
incl
add
pop
incl
add
add
add
incl
add
add
add
incl
add
add
add
aas
add
cld
add
add
sldt
clc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
rolb
add
pop
add
rolb
add
sldt
rolb
add
sldt
rolb
add
pop
add
loopne
add
add
add
lock
add
aas
add
clc
add
add
jg
add
add
add
jg
add
addb
add
add
jmp
add
add
add
clc
add
add
add
incl
add
incl
add
jmp
add
incl
add
clc
add
incl
add
incb
pop
incl
add
inc
ud0
add
push
ud0
add
cld
pop
incl
add
aas
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
pop
add
add
add
add
add
add
mov
or
add
add
mov
mov
push
mov
clc
clc
mov
mov
mov
add
mov
add
add
xchg
add
sti
add
pushl
add
icebp
mov
add
daa
add
loopne
add
rolb
add
add
add
add
add
add
add
pop
add
cld
sldt
decl
add
incl
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
add
mov
add
add
add
add
jo
call
add
add
addb
push
jo
add
add
add
mov
or
add
mov
add
add
add
xchg
or
add
add
add
add
clc
mov
call
add
or
vpmacssdd
add
add
mov
add
add
add
mov
add
add
mov
add
add
jg
mov
add
add
mov
add
add
clc
clc
clc
clc
mov
mov
clc
decl
mov
jo
clc
clc
mov
jle
mov
decl
jbe
xchg
decl
mov
push
add
mov
clc
clc
mov
mov
add
decl
mov
out
mov
add
ud0
clc
mov
call
add
mov
decl
mov
add
add
mov
add
add
add
or
xchg
add
add
add
mov
js
add
loopne
add
js
jle
add
add
add
add
decb
jmp
ud0
mov
incl
into
aas
incl
data16
incb
add
cld
add
jg
add
clc
add
jg
add
pop
lock
add
add
add
add
add
add
add
add
add
pop
rolb
pavgb
add
lock
pop
cld
add
pop
incl
add
cld
add
incl
inc
push
ljmp
add
add
add
add
add
add
add
add
add
addb
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
or
add
add
ja
mov
rolb
mov
add
outsb
mov
xchg
add
add
add
add
add
decl
call
mov
add
psubb
or
add
call
add
add
add
add
jo
or
add
clc
mov
add
add
add
decl
jo
mov
add
clc
mov
clc
out
add
mov
jle
add
add
add
add
mov
or
mov
mov
call
add
mov
clc
clc
mov
mov
add
add
add
add
clc
mov
mov
add
add
add
clc
mov
mov
mov
or
decl
mov
xchg
add
add
clc
mov
mov
add
add
mov
mov
call
xchg
add
add
clc
mov
mov
mov
jg
mov
mov
mov
mov
mov
mov
clc
clc
decl
mov
call
mov
add
or
clc
clc
clc
mov
mov
enter
call
clc
clc
mov
mov
mov
add
clc
decl
mov
call
add
clc
mov
decl
clc
call
call
add
add
clc
clc
mov
divl
jle
js
loopne
add
or
mov
mov
add
add
clc
mov
mov
mov
add
add
or
clc
clc
clc
mov
mov
jo
add
add
add
clc
clc
mov
mov
mov
ja
add
add
add
add
mov
js
ja
or
mov
xchg
add
add
add
add
mov
js
xchg
add
mov
js
xchg
addb
add
add
js
call
xchg
add
add
xchg
enter
add
or
xchg
add
in
ja
add
add
add
add
addb
xchg
add
incl
add
cld
aas
add
inc
pop
add
sti
sarb
add
incl
lock
add
cld
jg
lock
add
clc
pop
and
add
clc
pop
jecxz
incl
add
lock
sar
add
loopne
jno
incl
add
loopne
adc
incl
add
rolb
cmp
add
rolb
xchg
add
incl
add
incl
add
incl
add
pop
incl
add
add
add
incl
add
add
add
incl
add
add
add
aas
add
cld
add
add
sldt
clc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
rolb
add
pop
add
rolb
add
sldt
rolb
add
sldt
rolb
add
pop
add
loopne
add
add
add
lock
add
aas
add
clc
add
add
jg
add
add
add
jg
add
addb
add
add
jmp
add
add
add
clc
add
add
add
incl
add
incl
add
jmp
add
incl
add
clc
add
incl
add
incb
pop
incl
add
inc
ud0
add
push
ud0
add
cld
pop
incl
add
aas
incl
add
incl
add
incl
add
incl
add
incl
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
cli
popf
pop
aas
pop
add
add
add
xor
ljmp
into
mov
adc
sti
mov
out
ret
adc
iret
pop
mov
add
jbe
outsb
jnp
and
fcoml
mov
xchg
push
sbb
jl
push
jge
jo
cltd
gs
daa
scas
shrb
fisubs
xor
and
test
lods
xor
ret
mov
push
repnz
movsb
adc
out
sub
daa
pop
xor
out
pop
cmpsb
pop
push
adc
shrl
xchg
dec
ret
outsl
adc
arpl
lret
test
adc
xchg
push
jb
or
xor
rcrb
js
cmpsl
jnp
mov
imul
push
dec
adc
fdivrl
jbe
dec
mov
jg
or
jg
stc
push
pop
lret
stos
and
outsl
pop
fbstp
scas
scas
out
in
cwtl
xor
xchg
aam
inc
jl
lds
imul
jle,pn
test
dec
xchg
xchg
sub
enter
or
push
lret
fidivrs
push
aaa
or
das
mov
movsl
or
fisttpl
lea
cmp
in
fldcw
repnz
test
add
add
insl
fwait
rorb
mov
iret
mov
xchg
fst
and
leave
add
in
mov
xchg
scas
xchg
jecxz
fcmovnu
ljmp
xor
sub
cwtl
and
mov
fstl
das
adcl
sbb
push
sbb
sbbl
lock
js
insl
add
push
imul
dec
inc
stos
or
in
daa
mov
sarl
pop
mov
mov
mov
faddl
push
in
inc
adc
inc
xchg
iret
and
hlt
adc
cmp
cmp
xchg
xlat
es
jecxz
test
sub
lods
hlt
sbb
cmp
addb
daa
mov
std
sub
les
lret
cmp
in
xor
bts
or
paddd
jbe
sbb
xor
dec
andl
lret
dec
push
movsb
aas
aam
mov
pusha
mov
inc
gs
out
dec
shl
lods
xchg
lcall
arpl
aas
fmulp
mov
push
pmuludq
mov
lods
popf
mov
inc
jmp
add
bound
int3
mov
data16
push
ja
xchg
mov
push
cmp
cltd
nop
ret
mov
test
mov
add
push
mov
aas
mov
cmp
cmp
test
mov
ljmp
xor
dec
lods
inc
jge
lods
call
rorl
aad
cmp
stos
aas
jmp
testl
pop
add
push
sbb
lret
push
and
pop
sbb
pop
sbb
movsb
movsl
pop
pop
and
out
push
mov
lea
and
in
je
jmp
test
fstps
pop
test
lods
lcall
xor
pushf
cmc
dec
js
mov
xchg
sub
mov
add
mov
lods
out
sub
ret
out
jb
rorl
js
jecxz
mov
or
fwait
fcomps
xchg
insl
mov
shll
addr16
jnp
push
ret
inc
add
cmp
mov
dec
sbb
pop
jnp
cwtl
test
popa
pop
insl
rorl
setb
fsubrs
mov
clc
sbb
sub
and
jl
les
cmp
mov
popa
mov
test
out
sbb
test
mov
sub
cltd
gs
sbb
popf
dec
mov
xor
pop
jg
cld
or
lret
fcompl
loopne
pop
shl
idivb
jmp
jns
sub
push
ror
leave
xchg
jb
mov
cltd
testb
cmp
add
inc
adc
in
add
sbb
in
mov
mov
inc
push
stos
or
fcompl
andl
jmp
fidivl
in
inc
and
rcl
scas
xchg
movsb
pop
notb
iret
stos
lret
push
fmuls
push
popf
imul
push
rclb
push
jo
out
jo
mov
cmc
dec
push
or
aam
es
dec
push
out
and
scas
pop
lahf
cmp
incl
lods
sub
in
pushl
ss
jne
cmp
fistps
stos
aaa
mov
into
out
jmp
pop
scas
xchg
pop
and
jg
mov
sub
push
rcll
xor
in
jecxz
dec
faddl
and
or
jmp
and
jb
push
xchg
jnp
mov
adc
mov
mov
testl
push
mov
ret
xchg
add
lahf
lods
push
stos
pop
test
adc
or
cmp
cwtl
mov
rcrb
xchg
xor
push
xor
cmp
ror
push
ljmp
and
mov
push
xchg
pop
inc
mov
mov
inc
sub
sub
jbe
pop
imul
xor
into
mov
ljmp
push
mov
and
lods
and
sub
sahf
xchg
add
sbb
add
dec
popf
add
xchg
xchg
das
cmp
daa
add
out
imull
sbb
or
push
mov
cmp
pop
pop
xchg
inc
mov
in
insb
mov
push
mov
in
addr16
cmp
pop
popf
cmp
add
insb
popf
jmp
fisubrl
mov
push
cltd
xor
divb
and
jnp
test
fstpt
stos
fidivs
and
or
adc
in
xor
call
insb
inc
and
and
lods
mov
in
push
xchg
push
jb
cwtl
adc
and
push
rcrl
push
cltd
and
jo
jnp
pop
in
mov
mov
ds
mov
repnz
push
pop
imul
sub
push
lea
mov
dec
mov
pop
mov
adc
and
sub
push
cld
mov
xor
jnp
xor
ret
aaa
add
mov
cltd
push
and
sub
jo
sbb
and
xor
cmpsb
popa
movsb
xchg
pushl
adc
inc
mov
push
cltd
sti
xchg
xor
cmpl
fmuls
cmp
add
mov
jo
cwtl
leave
xchg
stc
push
cmp
add
pop
sbbl
out
clc
cltd
test
cli
cmp
or
mov
in
xchg
addl
ja
sti
adc
mov
adc
aam
imulb
lcall
js
fiaddl
rorb
push
jge
inc
add
fsubrs
fcmovne
dec
pop
and
idivb
imul
ja
scas
cmp
in
mov
mov
ret
stc
lcall
decl
pop
movsl
repz
mov
cmpsb
imul
ret
add
or
sub
pop
fdivrs
popa
imul
out
lods
cmp
daa
mov
sub
mov
sbb
jne
sub
jns
imul
sbb
js
mov
fldl
cmpsl
sub
mov
pop
or
push
aam
push
scas
or
hlt
popa
stos
ret
clc
mov
out
mov
out
mov
test
mov
pop
lds
cli
cmp
fdivs
cmp
xchg
in
mov
push
sub
xchg
inc
cli
and
cwtl
popf
loope
roll
subb
adc
icebp
imulb
mov
jmp
xchg
or
ljmp
mov
stc
arpl
shlb
jecxz
movups
test
dec
jg
mov
jo
mov
cmpb
les
xor
mov
xor
ss
mov
cmp
jp
cpuid
inc
cmc
cmp
mov
ret
imul
fst
jnp
fs
push
out
mov
xchg
imul
pop
lret
mov
movsb
test
fsubs
cld
in
addr16
ljmp
sbb
hlt
sbb
loope
popf
negl
repnz
movsb
je
mov
daa
data16
stos
or
pop
jbe
pop
loope
push
xor
aad
pop
jle
inc
sar
mov
dec
arpl
push
aad
adc
jge
loop
sbb
fcoml
add
mov
sub
push
out
xchg
enter
out
xor
jne
and
mov
dec
lret
pushf
jecxz
xor
sbb
mov
lea
sbb
adc
inc
push
bound
call
repnz
aad
sarb
addr16
in
and
test
push
cmpsb
jae
enter
aam
inc
scas
repnz
and
mov
mov
rcrb
sub
in
sub
push
xlat
in
sub
movsl
lret
mov
fwait
pop
out
mov
jnp
movsb
dec
cld
adc
jge
fucomip
imul
icebp
and
daa
data16
mov
push
mov
lret
test
or
mov
ss
or
ja
cmpsl
into
nop
push
jecxz
xchg
ss
and
roll
in
inc
xchg
movsl
xor
or
xchg
shl
lods
mov
xchg
gs
pop
pop
xorl
ret
cwtl
or
or
lret
lds
cmp
leave
in
aam
fwait
aas
hlt
pop
out
xor
add
lret
sub
mov
push
sbb
pop
add
int
xchg
cli
or
push
fmull
lock
je
fs
ret
mov
int3
adc
pop
mov
push
sbb
or
jne
mov
lret
fs
dec
cmp
sti
test
sarb
lock
push
mov
mov
xor
pusha
add
xor
push
xlat
sar
scas
shlb
mov
mov
repnz
inc
pop
xchg
jnp
push
mov
fwait
pop
jp
filds
or
pop
imul
dec
ljmp
jmp
stc
sbb
loop
and
dec
mov
push
cmp
mov
adc
outsl
rcrl
jno
mov
xchg
cld
jns
xchg
test
sbbl
jbe
mov
test
repnz
push
cmc
dec
icebp
mov
pusha
popf
scas
jl
test
notl
aas
push
mov
shrb
imul
push
fstps
xor
dec
and
pop
cmp
or
adc
negl
xlat
jbe
loope
out
dec
aas
in
cmc
icebp
js
out
pop
jne
outsl
and
mov
repnz
sub
ja
sub
loop
add
loopne
dec
push
call
aas
inc
es
cwtl
lret
mov
xchg
ret
inc
cmp
les
or
subb
mov
mov
daa
movsl
vunpcklpd
mov
nop
cmp
stos
icebp
fcom
clc
push
add
std
lret
mov
xchg
gs
sti
adcb
xchg
insb
lock
mov
fwait
mov
dec
notl
stc
mov
in
insl
cmc
fnstcw
popf
cmp
gs
das
xor
mov
cli
pop
test
popf
sub
dec
dec
jl
mov
xchg
daa
shrl
sbb
mov
xchg
iret
fcom
mov
outsl
pop
or
lahf
sbb
push
mov
xchg
fcomps
ret
pop
inc
mov
dec
jns
xchg
xchg
shlb
xchg
xchg
outsl
fst
scas
ja
cmp
mov
adc
movsl
inc
push
inc
push
popa
test
cli
int3
jo
fcom
jns
lods
xchg
cs
xor
ret
loope
lcall
jb
mov
inc
adc
fnstsw
aad
lock
cmp
fidivl
and
xor
and
mov
inc
push
jmp
xchg
sbb
mov
fisttpll
insb
pop
stos
mov
hlt
adc
int
add
dec
mov
icebp
push
sub
lret
scas
imul
and
fldl
mov
test
inc
push
je
hlt
stos
jae
data16
adc
andb
sbb
pop
mov
cmc
in
lods
xor
movb
jnp
fwait
inc
sarl
inc
or
or
xor
mov
xchg
xor
notl
mov
sbb
inc
xchg
fstps
sub
mov
sbb
cwtl
jo
int3
adc
lods
rorl
mov
push
mov
inc
movl
xor
sub
sarb
mov
mov
jl
fldenv
stos
jo
sub
stc
test
stos
sbb
push
mov
aas
lock
mov
cld
ja
and
pop
sbb
xor
sub
int
sahf
rclb
adc
cmp
sahf
subb
sti
adc
popf
decl
notl
pop
iret
sahf
add
mov
jp
ffree
rorl
out
push
fldt
xor
adc
push
lcall
pop
push
das
push
mov
mov
outsl
pop
or
cli
cmp
cwtl
leave
push
bnd
mov
and
lret
push
nop
mov
inc
repnz
into
arpl
mov
jns
xchg
cmc
dec
notb
push
cli
and
jmp
mov
out
push
lret
inc
lods
and
stc
pop
lock
aaa
cs
add
mov
shll
jge
mov
pop
pop
pop
dec
xchg
mov
jmp
gs
cs
jno
cltd
pop
je
andb
adc
ror
fwait
add
les
enter
mov
mov
std
mov
pop
pop
out
mov
push
popf
shrb
push
dec
or
xor
xor
in
fistpll
xor
cmp
cld
scas
jnp
mov
imull
jge
sahf
arpl
mov
xchg
pop
out
mov
aaa
imul
bound
or
lds
cmpsl
xchg
ljmp
jle
jecxz
data16
xorb
adc
jo
push
mov
mov
push
mov
cmp
stos
test
lcall
xorb
sbb
dec
call
lret
ljmp
xor
mov
sbb
jo
mov
lds
jge
pop
idiv
mov
imull
sbb
adc
sbb
mov
push
xlat
mov
aas
dec
add
ret
adc
inc
call
cmpsl
les
pop
pop
in
cld
repnz
aaa
or
and
outsb
cli
inc
mov
or
es
pop
pop
push
roll
jnp
pusha
negl
mov
imul
insb
adc
xchg
and
imul
cmp
iret
jno
cmp
fildll
adc
push
aaa
push
addr16
sbb
xor
adc
xchg
call
sbb
sbb
scas
dec
jno
push
int
insb
fidivrl
shlb
jmp
add
test
cmp
xor
sbb
jbe
mov
ret
adc
repz
mov
aaa
jne
jo
popf
out
loop
pusha
into
pop
mov
or
mov
add
lcall
push
and
pop
loop
push
mov
gs
cltd
cmpb
push
and
sub
mov
push
add
or
jb
mov
aad
cmp
nop
mov
add
popa
xor
in
push
dec
dec
jle
jmp
push
stos
jg
inc
sbb
outsb
enter
filds
jnp
cmp
sub
ja
adcl
jecxz
loop
int
dec
mulb
adc
cmp
testb
mov
fsubrs
and
in
push
xchg
aaa
push
fcoms
sub
dec
jmp
ret
fs
pop
push
adc
bound
pop
imul
push
hlt
push
dec
notl
mov
sbb
fbstp
jb
sbb
or
push
in
std
test
aaa
push
xor
xchg
mov
push
pushf
repnz
enter
dec
fwait
cltd
shrb
fwait
cld
in
lret
mov
jmp
ljmp
push
jns
lods
sub
sub
mov
jnp
lret
fldcw
fisubrs
add
sbb
jne
add
push
iret
out
aas
pop
aad
or
test
dec
jae
and
jl
out
nop
fs
mov
cld
scas
pop
push
stc
pop
loopne
jmp
cmpsl
xchg
mov
test
jb
movsl
scas
jmp
sbb
gs
test
aaa
mov
inc
data16
and
inc
push
data16
out
sbb
lea
dec
mov
inc
dec
int
mulb
xor
inc
sbb
adc
jmp
repnz
lcall
cmpsb
xchg
mov
mov
cli
mov
inc
fidivs
mov
pop
jo
in
pusha
imul
test
ret
mov
and
fnstsw
les
addl
adcb
test
jo
stos
sub
or
push
mov
add
xorl
clc
jg
pop
out
dec
insb
inc
cmpsl
dec
adc
es
xor
dec
sub
lahf
mov
mov
xor
inc
stc
cmp
dec
xchg
dec
fdivrp
sub
pushf
aaa
call
mov
mov
cltd
mov
out
imul
std
insb
and
fnstcw
xchg
dec
cmpsl
js
sbb
fldcw
stos
push
xchg
out
pop
lock
inc
outsb
cmp
mov
mov
sub
rorb
shll
pop
lea
mov
xchg
push
imul
jp
ret
aad
insl
popfw
clc
pop
dec
mov
jno
pop
outsb
test
add
enter
out
push
cld
test
jge
xchg
in
fwait
stc
or
leave
add
lock
inc
cmp
sti
fldt
fimuls
pop
int3
subl
sub
pop
jmp
push
insl
and
mov
ds
add
xchg
mov
int
mov
out
jnp
pop
lea
in
xor
lret
es
jnp
addb
imul
mov
daa
jmp
arpl
mov
aaa
cmp
fidivl
jle
dec
sarb
cmpsl
and
mov
or
fisttpl
shll
js
or
in
scas
loope
and
lods
aaa
mov
sbb
cmp
in
sbbb
cmp
js
aad
cld
xchg
aam
adc
xor
add
pop
pop
jmp
inc
dec
inc
jp
add
push
arpl
sar
adc
sbb
in
dec
cmc
push
aam
or
insb
movsb
mov
outsl
arpl
aaa
cmpsl
mov
adc
fsub
lea
jb
movsl
not
pop
adc
jl
fildll
xorb
cmpsl
xchg
or
dec
and
adc
ljmp
ljmp
xor
es
adc
mov
mov
clc
pop
mov
sub
jg
sti
pop
lret
js
pop
push
dec
pushf
xchg
push
xor
push
nop
mov
lds
xor
mov
or
iret
test
aad
adc
adc
icebp
dec
xchg
adc
in
cmp
into
pusha
movsl
cmp
pop
popf
jb
mov
out
stc
pop
push
outsb
icebp
data16
jmp
mov
or
cmpsl
pusha
repz
lret
inc
sub
testl
aas
jbe
sahf
arpl
push
int
dec
lds
push
mov
add
cltd
and
adc
push
jb
sub
xlat
pop
ret
or
insl
xor
test
js
insl
test
mov
in
cwtl
xor
add
mov
push
dec
xchg
subl
pushf
xchg
push
dec
sub
cmpsb
push
sbb
and
dec
cmpsl
inc
jmp
popa
mov
inc
es
cmpl
and
inc
and
cmp
cmpsl
mov
sub
lods
ljmp
lfs
dec
push
adc
aaa
xchg
dec
add
mov
and
mov
aam
pop
xchg
aad
ficomps
pop
jmp
jnp
lret
insb
popf
pop
mov
xlat
and
aas
int
pushf
jecxz
push
scas
ret
sub
xlat
mov
cmp
and
push
jbe
push
sub
repz
mov
outsl
mov
fldt
in
scas
daa
sbb
lods
cwtl
mov
fdivl
test
nop
dec
lods
and
mov
nopl
sbbb
aam
daa
mov
mov
je
fisttps
mov
repz
rcl
adc
cmc
imul
addl
popa
jo
test
xor
nop
xor
dec
cmp
adc
pop
sbb
push
push
push
xor
loop
loope
push
inc
add
mov
cmc
lcall
fisubl
and
sub
or
pop
mov
mov
cwtl
arpl
outsb
adc
mov
jno
jmp
jbe
cmp
dec
push
inc
sahf
dec
xor
add
add
cmp
ja
sub
fstl
loopne
adc
stc
xchg
les
sbb
iret
lds
data16
jg
mov
lods
cmp
negb
push
push
sbb
outsl
sbb
mov
adc
sub
sbb
jns
cmpsb
jp
add
sub
shr
loopne
subb
ss
lods
mov
in
sub
ficoml
jmp
dec
mov
shrb
pop
lahf
cmp
xor
add
es
jecxz
pop
lods
push
mov
sub
sbb
jae
push
lcall
ret
push
adc
xor
dec
gs
fs
shl
nopl
jmp
aam
mov
pop
pop
sub
add
push
sbb
mov
fmull
mov
push
pop
pop
and
jmp
pusha
cmp
dec
hlt
aad
scas
shll
fsubr
clc
aas
xchg
sarb
jl
daa
loopne
xchg
mov
pop
dec
pop
imul
dec
or
mov
movsl
idivl
adc
fiadds
sub
rcrl
shlb
lea
jo
or
je
xchg
lods
orb
sti
adc
sti
sarb
xor
adc
mov
xor
jo
sahf
movsl
loopne
insl
and
adc
dec
mov
lock
xchg
sub
loop
inc
pusha
mov
clc
jge
push
sub
mov
adc
sarl
aad
adc
push
cli
loopne
psraw
enter
jae
stc
mov
arpl
div
js
jo
and
mov
shl
xor
sub
push
ljmp
mov
xor
cld
shufps
jnp
popf
inc
xchg
roll
rcrb
fistpll
mov
and
negb
lods
pop
fs
lods
sub
cmp
and
or
pop
xchg
ret
out
pop
pop
mov
jns
xchg
dec
stc
inc
jb
repz
jno
sbb
cmc
mov
in
test
inc
push
jmp
dec
pop
mov
jne
out
jl
fwait
ret
test
sbb
xchg
mov
push
lds
adc
mov
mov
sub
popf
sub
movsl
inc
inc
xor
ja
mov
add
stc
xor
xchg
lcall
cmp
fwait
pusha
outsl
fisubs
jmp
cmp
shl
js
push
in
sbb
pop
sub
fists
std
mov
cltd
jmp
mov
fwait
shll
push
or
pop
outsl
out
mov
or
fimull
adc
pop
aam
push
out
jae
pop
xor
leave
jne
repnz
stos
ja
push
mov
sbb
jb
dec
aaa
std
clc
popa
in
loopne
and
in
mov
pop
lods
and
in
mov
imul
cwtl
or
inc
rorl
adc
mov
outsl
rol
in
pop
std
xchg
push
movsl
inc
mov
popf
mov
push
enter
insl
cmpsb
push
jns
outsl
sub
test
or
clc
sub
cmp
sahf
es
jl
mov
jl
loopne
movsb
in
jno
repnz
dec
cmc
adc
mov
mov
lahf
or
imul
in
je
std
sub
sub
les
test
movsl
mov
inc
push
inc
xchg
int3
cmp
lods
insl
inc
cld
insl
stos
popf
add
mov
dec
out
and
fcmovb
xchg
push
in
loopne
or
sub
scas
and
add
pop
imul
or
call
loope
into
fimull
nop
mov
fcmovne
insl
and
pop
inc
and
adc
fistps
lods
or
insb
or
pop
loope
cmp
test
cmp
daa
imul
test
dec
mov
jns
jo
dec
push
inc
pop
adc
dec
incb
jne
fdivrl
lcall
xchg
and
mov
or
shrb
jae
notb
mov
adc
push
cmovns
push
xchg
test
adc
das
push
movsb
dec
mov
outsb
add
sarl
loope
jbe
leave
pop
lods
mov
cmpsl
sahf
fstp
cmp
aad
lods
ja
popa
daa
ljmp
imul
mov
into
fs
mov
xor
mov
xor
ret
adc
add
clc
dec
push
mov
out
inc
or
aad
jno
adc
dec
xlat
jb
inc
and
or
jmp
or
hlt
jp
call
fiadds
arpl
add
inc
jb
out
lahf
xchg
inc
cmp
mov
sbb
cmp
xchg
outsl
fldcw
lods
aad
nop
cmpsl
cli
mov
pop
add
or
mov
into
lahf
aaa
or
fdivrp
pushf
or
rcl
fimuls
mov
call
or
test
xor
inc
push
sub
mov
shll
pop
cmpb
in
lcall
xchg
ss
hlt
pop
popa
sti
lods
cmovns
cmpb
jge
aas
in
mov
lcall
pop
mov
add
xor
mov
test
push
push
les
aam
fwait
aas
mov
and
lock
out
adc
sti
and
cmp
pusha
add
lea
cmp
adcl
push
sbb
jns
fwait
xchg
aas
out
fimull
jae
rclb
xchg
push
daa
xor
leave
sahf
pop
mov
mov
dec
pop
ss
sti
and
add
adc
add
roll
mov
mov
xchg
ficompl
dec
jge
xchg
clc
imul
popf
adc
xchg
cld
mov
je
popa
dec
jmp
sbbl
and
test
cmp
and
outsl
icebp
mov
jle
xor
lea
mov
in
popa
enter
call
ficoml
mov
nop
jne
lea
dec
and
cmpl
xchg
shrl
test
es
rcr
mov
push
mov
shrl
test
xor
cvtps2pi
pop
subb
xchg
out
cmp
jno
push
scas
imul
pop
pushf
sub
jge
rorl
mov
mov
mov
popa
mov
mov
or
pushf
xchg
out
ds
mov
loope
or
mov
push
jmp
or
sub
out
iret
insl
mov
push
outsb
mov
popa
mov
fildl
mov
cmp
dec
leave
sarb
mov
fucomp
mov
ljmp
stc
lods
mov
aad
pop
pop
sarb
ja
cld
jnp
test
inc
fwait
push
stos
out
adc
jne
jmp
pop
fs
fdivs
neg
and
adc
test
push
pop
mov
dec
push
in
bound
in
mov
xchg
aaa
pop
cmpb
xchg
dec
ficompl
lret
adc
mov
out
adc
lret
mov
push
ret
cs
sub
vmread
fsubrl
fistpll
popf
fistpll
push
push
mov
stos
sbb
imul
adc
pop
divb
mov
ret
inc
out
sub
int
xor
mov
mov
rcrb
mov
loopne
loope
stos
fbld
mov
fcmovne
sbb
xor
mov
adc
aaa
in
mov
cmpsl
repz
jl
lock
roll
jmp
inc
jecxz
popf
repz
loope
loope
cmpsl
mov
adc
sub
sub
pop
fldt
ds
cld
mov
mov
pop
jl
cmp
aas
push
ljmp
std
pusha
testl
loopne
test
outsb
jge
jle
aad
or
xchg
mov
push
iret
fistps
jns
push
test
mov
aaa
pushf
sahf
inc
pop
inc
pop
scas
pmulhw
daa
jge
sbb
adc
mov
daa
movsb
push
outsl
xchg
jle
daa
in
rcrl
mov
xchg
fcompl
dec
xor
xchg
and
or
cltd
pop
mov
aaa
cmpsl
repnz
push
cmpsb
in
rorl
sbb
and
mov
xor
lret
es
nop
out
xlat
add
xchg
mov
insl
push
dec
push
mov
add
iret
rolb
fisubrl
ss
xorl
mov
js
pop
dec
pop
jo
fs
test
rcrb
ss
cmc
xchg
imul
xchg
int
push
push
xor
push
cmp
push
cmp
jb
mov
imul
pop
lock
push
fimull
arpl
out
jae
jle
cmpsl
adc
jmp
scas
shll
pushf
sbb
and
aam
pop
xor
or
nop
cmp
pop
and
out
pop
pop
push
loopne
push
mov
pop
pushf
call
xchg
jnp
rorl
adc
mov
inc
jp
dec
dec
mov
stc
jno
pop
das
pop
pop
mov
mov
scas
mov
sbb
inc
mov
fcomip
mov
ret
pop
mov
unpckhps
xor
aam
or
pop
je
repnz
or
mov
cli
int3
notl
mov
mov
in
inc
jae
dec
jl
push
adc
push
sub
mov
mov
fidivl
mov
xor
jmp
ljmp
icebp
inc
and
or
cs
int
data16
stos
popa
xor
out
cmp
movsl
mov
mov
mov
pop
jnp
cmp
mov
push
ljmp
dec
adc
xlat
mov
dec
enter
imul
push
stc
rolb
loopne
les
jmp
int3
add
call
test
out
aas
repnz
in
roll
aam
add
and
pop
in
sub
rcll
imul
xor
sbb
xor
aas
push
out
sbb
insb
add
or
mov
jp
cmc
cmpsb
adcl
add
cmpsb
test
push
mov
call
push
sbbl
fsubs
sbbl
and
scas
outsl
je
cmp
shlb
in
mov
cld
imul
cmp
mov
xchg
rcll
mov
js
dec
mov
test
cwtl
out
add
into
decl
ljmp
xchg
fucomp
adc
pop
cmp
xchg
shl
sbb
adc
mov
cmp
and
roll
add
in
fnsave
push
lret
dec
ret
mov
mov
lds
aam
and
jne
sub
and
icebp
imul
cwtl
xchg
call
cmpb
enter
sub
cmp
test
xor
xor
dec
daa
dec
loopne
jle
icebp
or
mov
xchg
push
xchg
test
and
xorl
pop
add
or
repnz
push
cmp
sbb
xor
pop
mov
testl
dec
cmp
pop
nop
cmpsl
das
push
rcll
pop
ljmp
pop
imul
push
xchg
stc
cmp
rcl
jg
adc
mov
mov
inc
mov
rep
xor
xchg
jb
xor
repnz
daa
movsl
mov
fs
pop
clc
push
dec
fsubrs
data16
test
push
pop
and
ds
sti
lcall
iret
cmpsb
stos
mov
inc
push
rcrb
mov
cmp
push
mov
xor
mov
cmpsb
mov
lahf
dec
xchg
adc
xchg
mov
or
sbb
cs
jecxz
dec
int3
stc
in
jle
aam
out
cmp
rorl
jg
pop
loop
push
cmpsl
mov
loope
push
iret
mov
push
sahf
fs
sub
and
insl
lods
fmuls
push
out
ja
fwait
or
jg
and
inc
adc
aas
lret
push
bndstx
jne
add
add
out
mov
inc
push
out
jno
aad
push
dec
mov
leave
inc
js
jl
icebp
test
arpl
das
cmc
mov
and
sub
fdivrs
rorb
mov
mov
sarl
leave
scas
iret
popa
mov
xor
mov
cmc
add
dec
dec
insl
data16
or
aad
inc
jo
adc
dec
jno
pop
es
or
stc
mov
jp
mov
inc
sub
dec
sub
dec
mov
adc
scas
or
xchg
ss
adc
clc
add
loope
adcb
pop
push
movsl
sti
xor
cmp
fdivrp
ret
sti
dec
pop
or
stos
xor
int
subl
sub
mov
cmp
shll
fisubl
js
jmp
mov
std
sub
xor
pop
das
cltd
js
jecxz
popa
mov
sub
nop
cwtl
mov
cmpsl
dec
out
les
push
and
mov
mov
scas
and
stos
add
test
shlb
xchg
mov
dec
loope
jns
pop
fldcw
lock
mov
lods
movsb
jecxz
testl
lret
xchg
mov
dec
adc
jns
mov
inc
sbbb
xchg
ret
stos
scas
decb
and
jl
out
pop
dec
and
push
push
jo
outsl
sbb
cltd
jno
aad
dec
push
add
jg
imul
and
out
in
jp
mov
dec
test
outsl
cmp
pop
push
and
adc
push
in
mov
movsb
add
jnp
movsb
cli
pop
sbb
push
mov
add
fiaddl
daa
sbb
sub
sbb
add
jo
mov
lcall
mov
fisubl
sub
ret
mov
or
movsb
jne
iret
jnp
mov
sbb
repz
das
cwtl
mov
jecxz
sbb
int3
movsb
int3
push
rol
fsubl
into
mov
or
xor
xchg
test
add
mov
repz
fimuls
jns,pn
push
rcrb
scas
pop
nop
ds
fsubl
cmc
push
jl
or
jge
inc
test
pop
fcmovnu
push
add
xchg
fwait
and
push
adc
mov
fsubl
pop
lret
dec
enter
dec
outsb
lahf
sbb
mov
jmp
movsl
aam
idivb
not
mov
pusha
dec
addr16
fs
and
mov
sarl
push
fadds
xor
and
rcll
mov
push
or
inc
push
mov
push
xchg
scas
mov
int3
loop
pusha
mov
adc
mov
decl
in
and
enter
mov
repnz
lret
lods
dec
pop
mov
jns
push
pcmpgtd
lods
cwtl
nop
lds
mov
pop
adc
or
roll
inc
shrb
loope
in
das
iret
jle
adc
adc
xor
or
xchg
sahf
je
xor
mov
jmp
enter
push
sub
dec
and
lock
push
sbb
pop
sub
mov
mov
out
gs
outsl
sbb
cmp
jmp
jecxz
xor
daa
mov
sub
mov
inc
out
mov
je
jno
dec
loopne
push
mov
xor
xchg
or
js
addr16
pop
shrl
sub
lcall
pop
clc
popa
and
insb
cmpsl
dec
lock
xor
sub
jne
je
mov
fcmovne
data16
aaa
aad
inc
popa
mov
iret
mov
mov
push
aas
adc
test
sbb
fdivl
push
cmp
sarl
add
jbe
sub
imul
pop
dec
dec
rorb
xchg
mov
mov
jge
mov
aad
push
stos
fs
mov
mov
dec
jecxz
subl
dec
mov
in
sbb
jae
pop
sub
add
ret
sub
jno
aad
pop
cmpsb
rorl
xchg
mov
je
out
jp
cwtl
cmp
xchg
pop
es
and
or
fisubl
jge
xor
out
add
xor
add
arpl
enter
push
mov
insl
inc
ljmp
stc
add
pop
push
mov
mov
dec
test
ja
inc
cmp
daa
stos
push
into
in
iret
push
xor
push
aam
push
orb
call
xor
dec
jbe
mov
xchg
inc
adc
or
test
fs
aaa
psllq
negb
adc
movsl
imul
sbb
data16
jnp
hlt
cmc
lods
dec
idivb
in
jbe
pop
ret
dec
adc
andb
mov
in
xchg
mov
pop
adc
jb
pop
pop
add
xchg
daa
popl
nop
ffreep
jbe
outsb
add
push
pop
pushf
push
lret
inc
lock
mov
add
lret
aad
xchg
mov
or
mov
enter
adc
lcall
sbb
jb
repnz
inc
jl
sub
mov
and
lahf
mov
and
in
pusha
inc
adc
push
out
in
std
and
xchg
arpl
out
jae
call
mov
lods
or
add
dec
movsl
mov
add
sub
in
pop
repz
lods
xchg
inc
xchg
cmp
and
jno
pop
mov
leave
scas
ds
mov
aad
scas
cmp
adc
xchg
hlt
xor
in
mov
std
jge
xor
call
jae
out
mov
out
mov
data16
repz
idivb
lcall
dec
adc
lock
test
jno
mov
fwait
mov
loope
cwtl
movsb
xor
xchg
idivl
fists
inc
dec
sar
add
push
fs
cmpsb
or
ja
adc
mov
insb
and
call
cmpsb
xchg
cmp
cmpsl
push
ljmp
loope
fistpll
mov
or
and
loop
mov
xchg
mov
xor
mov
xchg
push
fidivrl
mov
jbe
sub
inc
dec
or
mov
xchg
xor
xlat
shll
cmp
xchg
in
push
mov
js
les
fldcw
scas
into
in
inc
pop
adc
sbbb
jb
ja
mov
jno
push
fisttpl
fld
jo
adcb
sbb
cmp
out
dec
or
and
jmp
xor
inc
and
mov
push
in
out
jecxz
adc
fstpt
aas
adc
or
mov
inc
out
or
fnsave
mov
lret
cmp
inc
add
cmp
pop
icebp
xor
test
inc
addr16
loop
mov
sub
push
ror
dec
cli
adc
pop
mov
mov
addr16
push
inc
inc
jecxz
push
sti
cltd
pop
pop
jg
jp
push
out
ja
cmpsl
cmp
xor
test
mov
push
gs
xchg
jl
shlb
les
sub
add
enter
repz
xchg
imul
rcll
test
sbb
testb
lods
push
mov
scas
xchg
daa
pop
jge
cmp
jl
fdivrs
jmp
rorl
call
out
mov
dec
pop
insb
jno
insb
fadd
sub
pop
push
imul
scas
es
and
or
iret
sub
outsb
fs
incb
loopne
pop
je
addb
je
or
cmc
sbb
jno
inc
dec
cmp
dec
mov
xchg
mov
stos
fists
push
push
in
mov
pop
mov
sub
cmpsl
lcall
push
push
jmp
fcomps
inc
loopne
lret
jecxz
mov
ja
rcll
xchg
add
rcll
shll
jae
rcrb
push
and
cmp
mov
rcl
jl
sub
lahf
jnp
mov
sti
sbb
mov
jb
rol
mov
adc
movsl
mov
jecxz
inc
and
jae
cmp
inc
adc
xor
jo
mov
rol
hlt
xchg
adc
lock
dec
out
sub
dec
inc
add
bound
cmp
push
mov
clc
add
mov
jge
dec
insl
clc
adc
pop
or
leave
add
inc
xchg
xorb
cmp
jb
pushf
sbb
xlat
xor
test
int
outsl
mov
jge
dec
idivl
in
jl
aad
rcrb
or
aam
repz
adc
out
pop
xor
xchg
mov
pop
push
xchg
out
xchg
add
jne
push
mov
aam
rcr
daa
in
mov
daa
popf
fistl
mov
push
add
orb
jo
out
bound
add
jle
cmpsl
mov
and
insb
loop
cmp
outsl
jg
ljmp
call
out
std
je
dec
sbb
sbb
xchg
pushf
lcall
andb
sub
fsubl
or
popf
and
ret
xchg
imul
lcall
in
lock
adc
xor
cmp
dec
pushf
xchg
andb
cmp
jp
xor
mov
jb
dec
loop
mov
mov
xchg
ss
xchg
xchg
pop
cli
mov
or
jecxz
push
cmp
jg
push
insb
scas
lcall
adcl
ds
fmuls
jnp
xor
lahf
pop
icebp
pop
inc
pop
aam
aad
in
mov
aas
flds
sbb
stc
jge
sbb
pop
rclb
jae
cmpb
xchg
cmc
lea
sub
push
in
movsb
jg
jmp
mov
inc
push
mov
int
daa
fwait
mov
into
bound
fs
cld
clc
sti
out
cmpps
arpl
mov
dec
test
pop
push
aad
data16
cmp
call
jae
xchg
mov
sbb
sub
daa
adc
pop
push
lcall
sub
lret
pop
mov
dec
fwait
xchg
dec
mov
movsl
inc
or
popa
mov
pop
and
stos
mov
xor
adc
rclb
mov
scas
je
sub
xchg
in
cmpsl
sti
mov
rep
xchg
ficompl
andl
dec
loope
int
mov
aad
into
insb
jle
push
inc
scas
sub
xchg
int3
pop
out
std
push
mov
gs
jnp
sub
sahf
dec
rorb
lods
lea
shl
mov
sti
call
fucomi
movsl
stos
jns
fs
stc
jae
sbbb
daa
outsl
fwait
jge
sti
icebp
or
mov
mov
mov
stos
ljmp
test
jnp
pop
and
sbb
jbe
mov
pop
xlat
push
add
xor
arpl
orb
mov
mov
mov
xchg
in
das
notb
dec
xchg
sub
xchg
mov
cltd
fsts
xchg
sbb
sub
fsubr
lcall
pop
push
lea
push
test
rclb
cmp
inc
cmc
lahf
jl
mov
add
inc
jbe
or
jmp
imul
mov
scas
jnp
loop
pop
xchg
shlb
cs
xor
imul
aaa
jns
mov
pop
lret
orb
dec
scas
lea
xor
jge
aaa
inc
std
popl
outsl
sti
outsl
lea
or
push
testl
loop
jnp
in
data16
mov
lahf
jne
data16
loop
add
fcmovu
popf
jg
inc
aas
or
cmpsl
pop
das
mov
inc
imull
out
adc
lcall
int3
out
gs
aam
ss
test
mov
mov
pop
sarl
or
sub
movl
leave
lret
frstor
and
xor
inc
cmp
xor
sar
fdivs
push
fldt
mov
inc
mov
push
sbb
sbb
mov
adc
mov
insb
sbb
call
out
pop
pop
pop
pop
xor
pop
gs
adc
or
je
imul
push
xchg
fstl
out
xchg
movb
mov
mov
inc
leave
leave
jmp
test
sbb
pop
sbb
mov
adc
clc
lock
push
or
cli
jb
gs
inc
jno
stc
ret
lcall
push
sbb
and
bound
xchg
into
out
and
pop
mov
jne
xor
lea
inc
stos
out
nop
out
mov
jns
push
xor
adc
outsl
enter
add
mov
es
xor
push
daa
shrl
loope
mov
ja
xchg
pop
mov
jo
sub
adc
mov
in
xor
cmpsl
dec
mov
roll
ficoms
mov
xlat
or
adc
and
xor
hlt
into
test
insb
pop
jp
notl
popl
scas
jb
loope
sub
fidivrl
js
cmpsl
enter
inc
jmp
mov
mov
scas
sub
pop
mov
add
jb
lods
sahf
adc
leave
sarl
xchg
sbb
mov
pop
lret
lods
out
ret
ret
xchg
mov
xchg
loopne
inc
adc
stc
call
test
clc
inc
lods
ljmp
sub
pop
jl
adc
sbbb
mov
push
push
rorb
js
push
push
or
ds
jbe
dec
sbb
sub
xchg
add
xor
mov
test
test
xchg
imul
and
out
out
popa
push
out
mov
cwtl
pop
pop
pop
ret
fcompl
mov
dec
dec
push
hlt
stc
jno
test
push
aad
divl
test
inc
mov
or
sbb
mov
adc
rorb
stc
stc
fxtract
shl
pop
and
subl
test
into
jae
add
push
inc
xor
pusha
xchg
scas
out
or
add
rcll
inc
mov
dec
aam
inc
fiadds
sbb
mov
push
mov
cmpsl
int3
fdivl
jbe
sbb
cmpsl
ret
push
sbb
jo
test
adc
push
xor
dec
ja
std
pop
sbb
mov
leave
jbe
ret
fistpl
aad
and
pop
test
addl
imul
push
inc
cmp
or
daa
mov
lea
mov
nop
xor
push
movb
das
cmpsl
enter
test
pop
stc
lock
add
pop
push
cmp
outsl
cmp
xchg
dec
mov
aaa
mov
in
cmp
fcoml
add
sbb
adc
sub
adc
cmpb
push
test
stos
xchg
mov
dec
xchg
push
jmp
leave
loope
pop
pop
inc
add
or
mov
mov
push
push
cwtl
fildll
xchg
sbb
add
arpl
mov
mov
jae
jnp
aam
push
mov
mov
pop
aaa
pop
outsl
dec
push
jmp
adc
or
mov
add
sub
mov
and
test
sbb
or
in
inc
ljmp
xor
mov
nop
out
sahf
notl
mov
pop
rorb
hlt
test
test
push
jne
xor
push
adc
pushf
sub
sbb
imul
mov
cwtl
icebp
xor
lods
movsb
inc
and
push
xor
scas
js
lds
aam
adc
jmp
test
es
dec
es
test
dec
cmpsb
mov
sub
push
xor
iret
iret
mov
dec
fcmove
xor
pop
mov
das
add
out
jo
shr
or
cmp
loopne
sub
outsl
inc
hlt
mov
ja
xchg
out
push
xchg
aam
mov
divl
pop
je
and
outsl
or
mov
jl
lods
add
test
shll
xchg
gs
mov
outsb
dec
es
fs
popf
sarl
jb
mov
roll
inc
pop
daa
cmp
sahf
jns
push
mov
in
jmp
dec
mov
cltd
divl
adc
inc
pop
ret
rep
push
jbe
lods
data16
dec
lea
dec
xor
pop
iret
int
sub
xor
push
push
xlat
out
pop
xchg
inc
add
or
push
ret
jl
sub
mov
ficomps
and
mov
inc
roll
cmp
push
xchg
push
mov
in
push
xor
lock
ja
mov
fs
call
dec
mov
sti
jbe
add
jge
rorb
mov
fldenv
or
xor
push
add
mov
pop
and
push
xchg
leave
jb
ret
add
ret
mov
inc
lahf
push
xorl
push
jne
sub
ljmp
adc
in
orb
rclb
jbe
jecxz
mov
cmp
insl
xor
jecxz
or
sub
sub
jge
bound
xchg
add
xchg
mov
or
scas
pop
in
in
xor
xorl
scas
pushf
inc
inc
xchg
subl
mov
shlb
fwait
cmp
leave
add
sub
sub
cmc
sub
xor
loope
jbe,pt
fs
or
dec
cs
popa
loope
push
aaa
sbb
push
mov
pop
xchg
sbb
loope
int3
or
imul
in
ja
pop
negl
lahf
inc
or
cmp
cld
or
dec
cmp
scas
adc
push
addr16
je
pop
pop
push
mov
jo
push
shlb
in
jmp
cmpsb
xlat
mov
xchg
xlat
int
mov
xchg
data16
rolb
xor
jae
pusha
or
dec
sub
femms
mov
das
push
inc
and
in
sub
add
mov
fldcw
mov
sub
mov
inc
mov
fldl
jl
adc
pop
xchg
adc
sub
cmp
mov
or
enter
dec
jge
inc
hlt
imul
and
stos
rorl
jecxz
mov
sub
loope
in
mov
sbb
jnp
out
dec
and
sbb
out
data16
ret
jnp
stos
lcall
pusha
out
sub
lcall
enter
fsts
jmp
xlat
sbb
adc
and
cmp
mov
insl
sahf
test
icebp
aas
mov
dec
out
mov
cmp
fsubrs
add
clc
addl
fstps
sub
jl
sar
dec
pushf
mov
shll
loopne
out
out
cld
add
fdivl
pushf
dec
test
inc
cmp
loope
clc
call
fbld
adc
dec
cmp
xor
ret
aam
and
adc
les
dec
je
add
push
fst
cmp
pop
adc
push
xchg
mov
mov
push
lret
adc
lea
adc
andl
dec
mov
shrl
rcrl
or
adc
push
in
adc
pop
mov
mov
sahf
scas
inc
outsb
cld
fwait
and
mov
sarb
and
fstpt
js
xor
mov
add
lcall
imul
into
dec
cmpsl
dec
pop
out
xchg
dec
int3
mov
cmpsb
ss
xor
xorb
cmc
dec
icebp
into
xchg
mov
adc
sbb
and
pop
adc
in
inc
sahf
mov
fcomps
xchg
jle
imul
cmp
xorl
shl
and
lahf
mov
inc
int3
jecxz
push
popf
jl
out
inc
leave
cmp
insb
mov
test
pop
shll
fnstcw
divl
adc
es
cmp
in
pop
shrb
cwtl
push
dec
in
adc
out
inc
inc
sub
out
inc
add
mov
mov
mov
shrl
push
push
hlt
pop
push
mov
pop
fdiv
sbb
inc
imul
aas
arpl
subb
mov
fsubl
call
das
mov
in
xchg
push
cmc
movsl
adcb
mov
ret
lea
fidivrl
and
test
sbb
insl
ret
imul
sbb
repz
pushf
aaa
xchg
int
and
dec
test
add
bound
or
sbb
popf
loope
test
mov
sbb
jbe
lcall
mov
xor
sub
and
cmp
aad
and
cmpsl
bound
inc
push
cli
add
std
loopne
sbb
mov
cmp
rcrb
add
and
cmpsb
ret
dec
xchg
and
or
ds
loop
jbe
lods
out
lcall
add
mov
mov
sbb
stos
mov
xchg
mov
mov
mov
mov
cmp
cmp
jno
adc
insb
dec
cltd
pop
dec
jbe
fimuls
inc
or
ljmp
sbb
inc
sbb
rcr
sbb
out
jb
dec
inc
and
jns
xchg
popa
fldl
cld
jmp
popf
lods
xchg
push
pop
pop
xchg
adc
adc
nop
cmp
repnz
pop
into
or
scas
push
jbe
loope
cmp
jmp
insb
fcmovu
lret
addr16
test
scas
js
xor
mov
push
cmp
fnsave
addr16
cli
ret
inc
addr16
cmp
es
es
xor
imul
mov
push
sahf
sahf
mov
push
adc
mov
aad
sbb
js
mov
into
adc
ret
xchg
enter
pop
xlat
into
adc
cmc
enter
mov
leave
adcl
or
ja
jg
lahf
fidivrs
sbb
clc
leave
ret
add
movb
adcl
pusha
data16
mov
xchg
and
xchg
jle
cmpl
in
inc
sbb
or
scas
into
push
inc
loopne,pn
jno
xor
into
lods
or
push
fwait
or
xlat
popa
loope
loop
nop
inc
jb
xor
in
nop
sbb
pusha
jbe
or
sbb
lret
cmc
out
adc
sub
fisubl
and
inc
push
or
nop
lcall
push
lcall
mov
cmpsb
lock
jns
stc
sub
push
jb
loopne
mov
pushf
fwait
push
mov
pusha
mov
out
cmp
and
leave
outsb
lret
jb
test
imull
push
ss
push
lret
add
call
push
out
jo
mov
movlps
sarl
movd
mov
pop
push
jnp
scas
mov
in
pushf
xlat
inc
adc
ss
lret
pop
pop
add
clc
cmp
test
jmp
jg
adc
jg
lret
nop
add
cltd
bound
jl
cmpsl
dec
addl
fidivl
aad
xchg
fs
mov
test
arpl
movb
cltd
test
loop
mov
popa
cs
popa
les
sub
xchg
xchg
push
repz
push
mov
cmp
adc
notb
mov
scas
fwait
jmp
es
mov
cwtl
pop
xor
addr16
adc
ja
std
ret
jnp
int
sti
add
pop
inc
mov
add
adc
xchg
xor
inc
pusha
out
out
jg
nop
fstl
in
movl
inc
add
jecxz
roll
fsubs
jbe
mov
clc
fisttpll
mov
pop
sub
cmp
push
push
loopne
adc
sub
and
mov
xor
xor
movb
imul
mov
cltd
xor
sbb
pushf
dec
dec
rclb
loopne
jnp
popf
push
xchg
mov
xor
sbb
call
loop
or
shlb
jne
fiadds
xchg
sub
inc
pop
xor
jne
stos
push
js
pop
pop
and
shlb
push
xlat
sub
iret
inc
sbb
or
xor
fiaddl
es
ja
sbb
add
out
xor
movsl
mov
cmp
nop
andl
dec
repnz
fidivs
pop
repz
out
and
inc
fdivp
lods
daa
inc
mov
imul
mov
lods
mov
fsts
mov
test
insl
shlb
pop
adc
dec
scas
push
xchg
jmp
inc
repnz
sbbb
lret
aam
fs
inc
push
pop
mov
sarb
test
data16
idivl
insb
popa
inc
lods
stos
xchg
lcall
test
cltd
xchg
insb
mov
cli
pop
sub
mov
hlt
jo
xor
out
test
fs
mov
and
jns
mov
push
push
fdiv
push
out
jns
mov
imul
and
out
fists
cmp
xor
lock
dec
mov
loopne
sahf
std
inc
fucomip
shll
jns
into
inc
inc
cmc
aam
add
aas
add
sbbb
lods
mov
xchg
aam
push
outsb
lret
xchg
pop
mov
sbb
sbb
js
add
jns
xchg
cmp
std
mov
pop
pop
inc
jo
mov
dec
mov
mov
cmc
mov
or
cmp
or
ja
pop
jae
dec
pop
fwait
imul
xchg
fcom
test
arpl
inc
jg
lahf
out
lret
sbb
cmp
jbe,pt
aad
stos
push
mov
out
pusha
dec
and
pop
std
shll
add
pop
push
stc
test
scas
xor
bound
adc
andl
push
mov
es
js
pminsw
mov
cmpsb
popa
sahf
movsb
pop
out
test
data16
hlt
pop
shr
ds
xor
sub
adc
shll
ds
ret
int3
dec
xor
popl
mov
adc
add
shrl
sub
adc
leave
xlat
adc
jge
loopne
in
inc
inc
bound
mov
dec
cmpsb
cwtl
imul
cld
inc
loopne
popa
test
test
gs
shrl
rorl
test
push
loop
jecxz
repnz
dec
mov
add
fiaddl
inc
fs
add
or
pusha
scas
bswap
sub
pop
lods
aam
das
int3
mov
call
popa
lret
pop
push
push
test
mov
in
dec
vpmacsdqh
pop
cmpsl
add
cmp
popa
mov
jne
insl
pop
push
mov
or
jl
lds
mov
mov
test
or
pop
test
shrl
testb
jg
mov
mov
pop
shrb
mov
pop
mov
negl
jmp
inc
lret
mov
push
dec
cmc
cmpsb
je
add
mov
dec
mov
ficompl
hlt
out
xchg
jnp
sub
lds
sti
fildl
jl
nop
ret
and
fwait
push
mulb
pop
fbstp
pusha
xor
inc
adc
decl
mov
cmp
add
push
jp
jbe
adc
mov
push
inc
mov
in
jbe
shl
in
pop
mov
mov
pop
jns
xlat
outsl
fmuls
rcrb
jle
cmp
inc
sti
out
pop
mov
aas
push
fdivrs
mov
std
mov
ja
ljmp
xor
mov
pop
inc
or
scas
dec
cmpsb
lret
rorb
xor
cmp
gs
mov
repnz
push
xchg
jl
rclb
clc
dec
or
and
push
xor
in
iret
aas
sub
xchg
inc
add
xor
mov
or
xorb
jecxz
jbe
jno
pop
scas
in
dec
jmp
jle
icebp
add
adc
mov
inc
mov
adc
repnz
xor
lahf
and
xchg
cmp
jbe
push
xchg
data16
xchg
dec
sub
jmp
sbb
cmpsb
ret
cmc
es
push
pushf
sbb
pop
jp
jge
push
test
pop
lcall
fisubrl
mov
mov
insb
int3
fs
or
mov
sbb
push
mov
xor
mov
lods
pushw
pop
es
pushf
jnp
cmp
xor
dec
and
imul
pop
cs
adc
sub
in
or
xchg
inc
in
mov
cwtl
push
inc
dec
imul
xor
rorb
pop
pop
jmp
in
cmp
sbb
fs
pop
lods
mov
mov
push
jl
push
add
mov
bnd
pop
test
jns
cmp
inc
or
mov
sub
lods
push
dec
mov
sbbb
fistpll
out
push
out
stc
sub
into
pusha
inc
mov
sub
fstp
dec
cmc
xor
dec
jns
aam
out
adc
push
xchg
mov
cltd
cmp
insb
js
inc
mov
je
popa
push
stos
mov
pop
es
lods
les
push
out
xor
and
enter
repnz
cmpsl
and
mov
aaa
inc
add
add
into
xchg
ss
cmp
or
xchg
or
fistpll
adc
stos
cmpsl
inc
push
mov
mov
fcmovnb
push
int
xor
sbb
cwtl
repnz
int
sbb
aam
popf
rorl
sarb
mov
rol
ret
jnp
mov
pop
mov
lret
loop
daa
or
test
dec
cmp
stos
aad
bound
lret
xchg
in
xor
and
sbb
mov
lcall
mov
call
aam
shll
and
jp
cltd
cmp
lea
sbbb
es
lret
sbb
addl
cmp
xchg
sahf
std
adc
pop
addb
pop
xchg
jl
mov
and
sub
inc
sub
adc
cmp
jmp
stos
jnp
mov
insb
adc
adc
mov
cmp
jae
int
movsb
repz
push
jb
push
and
in
dec
mov
mov
or
adc
dec
out
mov
mov
je
jns
push
fnstsw
dec
jmp
ficoml
pop
inc
dec
stc
data16
lea
add
pop
adc
add
cltd
mov
jl
push
repz
scas
test
faddp
dec
push
outsb
sti
dec
inc
pusha
pop
call
popa
push
sbb
pop
cli
inc
xchg
mov
mov
mov
fs
mov
mov
push
pusha
pop
cli
jg
adc
ljmp
sbb
push
pop
mov
ret
gs
mov
adc
dec
and
or
mov
mov
pop
xchg
mov
push
mov
inc
outsb
push
sbbb
xchg
or
xor
lods
cmp
sbb
push
sub
jo
aam
push
imul
cmp
push
dec
xchg
xor
loope
sbb
adc
in
je
loop
pop
mov
mov
and
xor
fs
mov
ds
jae
jp
in
popa
xchg
mov
scas
pop
shll
jle
loopne
scas
and
jbe
fsubs
pop
in
adc
push
mov
or
jl
aaa
xlat
jbe
mov
mov
add
jl
cltd
faddl
jge
idivl
cwtl
or
push
jp
cmp
mov
daa
pop
jne
test
mov
mov
iret
and
movsb
jo
dec
pop
aam
push
mov
pop
sbb
mov
rolb
add
shll
push
mov
or
add
sub
dec
jne
clc
int
lds
testl
subb
push
sbb
pop
pop
pop
xchg
or
mov
insb
sbb
pop
adc
push
repz
popf
dec
adc
arpl
sub
mov
int
movsl
lahf
xchg
rcrb
clc
pop
xchg
jne
mov
push
lcall
jge
or
int
ljmp
mov
and
sub
mov
xor
inc
xchg
mov
cmpsl
xor
arpl
orl
jae
cwtl
jns,pn
cmp
push
pop
cmc
mov
add
and
ret
roll
out
mov
xchg
xor
and
add
mov
out
leave
stos
shlb
mov
rcrl
outsl
and
cmp
pop
lea
adcb
cltd
cmp
les
enter
push
lods
push
les
test
scas
imul
inc
or
clc
icebp
lea
dec
movsb
mov
dec
into
pop
dec
lfs
and
pop
movsl
jle
and
es
xchg
adc
mov
lods
push
lret
mov
ret
push
rcr
xchg
push
push
sub
jbe
cwtl
adc
mov
mov
outsl
movsl
gs
push
fsubs
push
xchg
shrb
or
xor
ss
mov
pop
mov
mov
jp
imul
adc
ja
and
sub
aaa
jle,pt
std
lds
shlb
popf
mov
sub
sub
mov
cwtl
push
mov
push
pop
les
out
xchg
pop
mov
das
clc
jp
add
pop
inc
or
dec
jne
mov
or
fdivs
jae
pop
cmp
jge
fdivrl
lods
stos
es
leave
ja
fwait
dec
xlat
stos
shrb
cltd
divb
xorl
push
add
mov
inc
or
fsubrl
js
mov
lods
data16
sub
sub
js
add
mov
repnz
aad
push
jmp
or
mov
and
fstps
shll
mov
adc
sub
test
loop
lahf
shr
cli
je
inc
inc
xchg
ret
dec
shrl
jl
xor
jge
dec
dec
testl
test
jmp
dec
xchg
imul
movsl
js
loope
xor
jle
dec
or
mov
fidivrs
sbb
sub
mov
in
jmp
dec
cld
push
ja
je
jns
insl
arpl
sub
cmp
jns
in
pusha
jbe
xor
insb
lahf
mov
and
add
jge
xchg
or
out
jbe
ss
cs
or
out
rolb
pop
cmp
mov
cli
shrb
mov
mov
jge
and
add
cmpsb
int3
imul
mov
jg
in
mov
add
adc
mov
outsb
shr
pop
mov
adc
pop
fcoms
cli
outsb
loop
lea
bound
rolb
push
popf
adc
out
add
inc
in
mov
cmp
mov
loope
mov
adc
in
repnz
mov
lretw
pop
or
cmp
nop
add
fistpl
adc
lret
outsb
add
xchg
sbb
cltd
pop
scas
jb
jno
insl
and
stos
inc
pop
pop
in
mov
sbb
push
std
stos
xchg
out
push
cmpsb
or
sbb
add
inc
outsb
aas
in
adc
xchg
clc
movsb
xlat
mov
scas
int
ret
sub
xor
mov
or
pop
clc
jp
pop
enter
xor
xchg
mov
cltd
pop
push
lods
add
lahf
add
sti
shrl
pop
gs
loopne,pn
push
sub
inc
test
js
pop
mov
mov
imull
pop
mov
inc
inc
test
push
int3
sub
scas
js
repz
or
add
call
stc
movsl
cmp
cmp
into
cmp
push
jecxz
pusha
sbb
jne
inc
mov
in
adc
or
jae
test
jo
sbb
ficompl
dec
adc
xor
out
sti
and
mov
scas
fmull
data16
mov
movsl
dec
aaa
adcb
mov
mov
push
pop
orb
ja
pop
xlat
lods
mov
inc
jno
mov
xlat
mov
pushf
mov
shlb
ja
or
mov
adc
lods
sbb
mov
inc
sarl
mov
fiaddl
fwait
jp
xchg
pop
xlat
call
test
dec
xor
shll
lret
sub
fsubl
mov
in
cwtl
imul
jl
stc
mov
std
sbb
xor
jp
mov
out
sub
popf
aas
pop
stos
mov
or
aaa
cmp
sub
cwtl
mov
add
jmp
xchg
push
test
enter
push
aas
daa
insb
loopne
scas
inc
mov
or
sbbb
scas
repnz
mov
insl
sbb
loope
leave
jg
push
xchg
jecxz
in
das
inc
shl
ds
inc
xchg
sar
sub
nop
and
sbb
add
jecxz
push
rorl
jo
jae
shll
lods
pop
rcll
out
and
cmp
outsl
jbe
arpl
pop
jnp
test
adc
fmull
mov
adc
mov
cmp
cmpsb
mov
test
mov
or
push
jge
push
sahf
mov
lret
adc
pop
or
adc
mov
mov
add
out
mov
rcr
insl
frstor
pushf
mov
fs
push
fdivl
pusha
ficoms
jo
mov
xchg
adc
repnz
sbb
mov
mov
dec
cld
insb
pop
leave
mov
push
push
shll
jg
movsl
jle
push
aam
adc
jecxz
fnsave
push
je
mov
nop
mov
insl
xchg
jae
inc
das
xchg
ja
std
shl
inc
bound
xchg
pop
push
movl
cmp
push
icebp
mov
add
outsb
lds
push
adc
in
fsubrl
xchg
test
jecxz
shll
jmp
stos
cmp
xor
jno
out
testl
adcl
cmp
ljmp
in
fisubs
inc
lret
cld
mov
fisubl
test
bound
xor
fistpll
mov
dec
push
add
sbb
jp
iret
jmp
clc
sbb
push
jl
mov
jecxz
pusha
dec
pushf
sti
test
cmp
push
cmpsb
xchg
movsb
icebp
popf
lret
push
jns
jne
gs
inc
sub
sarl
adc
jnp
sbb
xchg
movsl
mov
or
xchg
sub
push
jmp
push
push
jns
out
dec
and
bnd
int3
ffreep
adc
push
mov
dec
and
rcll
mov
and
xor
push
sbb
mov
lcall
dec
fnsave
fbld
inc
pop
xchg
loope
divb
pushf
cli
lret
js
push
fldt
ja
and
scas
sbb
stos
mov
dec
shr
cwtl
nop
test
jle
xor
lock
cmp
popa
pop
cltd
nop
insb
xor
ret
mov
sahf
int3
divl
in
lret
and
hlt
lds
testb
and
or
shrl
jns
cmp
pop
jnp
mov
or
pop
mov
xor
lahf
orl
jp
add
nopl
insl
pop
aad
adc
or
shlb
mov
into
mov
gs
inc
xor
mov
cmpsl
xor
dec
sbbb
clc
cmc
out
bswap
adc
push
mov
mov
sub
jne
aam
test
sbb
push
shrl
test
popa
jno
dec
jne
bound
cmpsl
pushf
xor
imul
fsubrp
into
cwtl
sub
and
pop
cs
xchg
outsb
dec
inc
int3
sub
sub
test
in
inc
cmp
test
ror
and
xchg
sub
hlt
inc
and
add
sti
xchg
dec
dec
aaa
cmp
fists
xlat
sbb
and
bound
test
mov
lock
popf
cld
lds
aam
ss
test
sahf
popf
popa
pusha
imul
ret
frstor
gs
jge
jns
pop
mov
iret
add
and
cmp
lcall
adc
inc
stos
mov
ret
mov
test
cmpsb
cmp
add
scas
mov
sete
inc
mov
aaa
and
xorl
xchg
test
pushl
cmc
and
mov
and
xor
add
or
xor
cmp
inc
insl
addr16
dec
add
mov
popa
add
negb
and
mov
fsubrs
push
popa
ret
enter
xor
cmp
imul
je
inc
mov
addr16
or
in
jae
cs
xor
inc
bound
hlt
jle
xor
adc
xlat
aaa
sarl
and
dec
outsl
mov
or
jbe
incw
fists
rclb
push
fsubrl
dec
ljmp
test
call
sub
hlt
adc
imul
adc
aas
sbb
pop
pop
es
jne
mov
out
jno
mov
or
push
addr16
sub
arpl
fistpll
mov
pusha
cwtl
push
mov
sbbb
or
xchg
jge
xor
sbb
hlt
mov
mov
popf
fidivl
lcall
stc
lret
xorb
sahf
es
jne
ficompl
jb
jl
shr
cmpsb
dec
jno
arpl
rol
test
dec
xchg
push
and
inc
cmc
out
in
xor
mov
addr16
and
mov
adc
jle
cmovge
xor
cmpsb
and
jno
loopne
call
loop
sbb
push
ja
ret
jb
jbe
jmp
adcl
cmc
clc
jp
sbb
or
cltd
inc
pop
cwtl
xor
cld
pop
out
dec
mov
xchg
push
jne
push
cli
in
or
push
rolb
cmp
in
testl
cwtl
xchg
or
add
cmp
pop
jae
ljmp
dec
jg
scas
pop
pop
sbb
enter
stc
enter
filds
pop
push
xor
mov
cltd
stos
cwtl
call
adc
xor
insb
fdivl
xchg
test
push
cld
jnp
pushf
das
jbe
pusha
xchg
and
inc
lret
in
cmp
push
xor
repnz
outsb
jns
out
xlat
xchg
push
cltd
mov
inc
lret
shr
xor
jl
jnp
vmread
mov
lock
prefetch
jb
aas
negb
notl
inc
mov
ljmp
clc
shr
and
push
add
pop
pop
inc
inc
ljmp
outsb
fsubp
push
mov
aad
or
test
xchg
fidivrl
test
rcrl
les
pop
popf
repz
inc
nop
pop
icebp
sub
inc
sub
test
dec
hlt
dec
mov
repnz
cmp
mov
int
xor
inc
jp
mov
imul
cltd
pop
pop
roll
push
ljmp
fstps
mov
inc
arpl
jne
jnp
lods
aas
pop
movsb
mov
dec
pushf
jle
imull
fldenv
lea
movsl
call
inc
xor
aad
inc
jb
mov
shrl
iret
xchg
mov
decb
jnp
outsb
dec
fisubs
test
pop
sbb
pop
out
fisttpl
pusha
pop
sbb
push
cmc
sub
sbb
pop
jmp
or
sbb
fs
stos
fldcw
sbbl
in
mov
xchg
aas
out
aam
mov
mov
sub
loopne
and
sbb
jp
mov
nop
andl
jmp
mov
mov
mov
xchg
add
add
pushf
subl
mov
cmpsl
cmp
arpl
cld
nop
xchg
cmc
dec
std
pusha
shlb
inc
add
pusha
lret
inc
push
dec
cmp
mov
jbe
js
int
sub
push
int
cmp
mov
sub
adc
jge,pt
adcb
out
inc
repnz
int
out
outsb
mov
stc
mov
inc
pop
push
stc
aad
jb
xchg
or
cmp
push
mov
mov
add
cmp
inc
dec
inc
sahf
in
xchg
inc
xor
xor
fucomip
js
ds
popa
stos
mov
insl
incb
adc
jp
mov
mov
int3
andb
popl
dec
aas
and
jg
ret
in
mov
fnsave
mov
lret
add
mov
jb
mov
mov
jne
leavew
sub
cwtl
xchg
iret
stos
mov
mov
jg
xor
filds
and
sti
movsl
fiadds
add
jb
cld
ret
je
cmpsl
inc
mov
mov
scas
test
lahf
jg
in
std
cli
mov
push
scas
add
mov
insl
fisubrl
sub
dec
pushf
leave
jbe
pop
inc
lods
inc
push
fdivs
xor
lds
jl
leave
popf
add
sub
pop
mov
arpl
movl
xchg
cmp
call
sbb
mov
or
sbb
add
dec
jp
popa
test
mov
mov
lods
std
and
cmpsl
imul
adc
fs
rorb
sbb
test
adc
mov
pusha
jle
or
xchg
push
and
lahf
lds
dec
jecxz
leave
dec
ffreep
js
inc
and
push
adc
dec
stos
daa
mov
addr16
repnz
mov
sbb
popa
sbb
pop
mov
ficoms
adc
dec
mov
popa
out
dec
aaa
sub
add
jne
int3
enter
cmp
lret
sahf
cmpsb
cmp
mov
inc
jl
or
jne
push
in
jmp
push
xor
xchg
jle
push
mov
pop
xor
cmc
jecxz
clc
and
lcall
out
jns
add
lret
and
stc
and
push
dec
cmp
shll
xchg
daa
lods
daa
mov
cmc
mov
mov
sub
shl
and
in
insl
or
ss
into
push
addr16
aaa
jno
jmp
inc
sbb
dec
xchg
imul
fdivrl
xchg
cmp
push
idivl
insb
pushf
jge
ds
mov
mov
dec
rcll
out
and
movsl
stos
fsubrl
mov
es
jae
arpl
push
and
jnp
cmc
outsl
mov
mov
pop
xorl
or
cwtl
mov
outsb
push
mov
mov
jl
mov
dec
jae
mov
mov
inc
lds
mov
popa
movsb
lea
ja
adc
add
dec
mov
adc
sub
cwtl
sarb
in
jl
xorl
popf
dec
stc
add
out
mov
loop
cmpsb
dec
xor
loop
nop
fisttpl
ficomps
xchg
dec
push
mov
les
xor
xchg
jne
stos
mov
push
xor
xor
jb
inc
outsl
pop
adc
pop
mov
call
and
or
fisubrs
gs
cmpsl
xchg
mov
sahf
les
xchg
dec
mov
lcall
inc
adc
jmp
cmpsl
mov
test
inc
jno
lahf
adc
fmull
imulb
imul
jp
jmp
cmp
xor
xor
out
inc
cmpsb
cmp
xor
inc
sbbb
add
jbe
xchg
adc
push
cmp
lcall
lea
imul
and
cld
orl
push
inc
mov
repz
dec
imul
out
and
mov
adc
cmp
cld
mov
outsb
imul
bnd
test
inc
sbb
and
mov
inc
test
int3
sub
test
mov
pop
dec
movsb
hlt
mov
sbb
aad
repz
pop
loope
or
ds
fs
mov
mov
add
mov
mov
insl
into
pop
stc
fidivs
cmp
adc
das
cmp
aam
and
inc
lods
insl
mov
jmp
stos
inc
xor
inc
and
out
int3
cmp
ficomps
lods
lret
lcall
or
cmp
xor
das
jne
aas
jne
and
inc
idiv
bound
ds
mov
jb
insb
xchg
mov
and
sbb
bound
in
mov
shrb
pop
xchg
cwtl
inc
and
sbb
fdivrl
pop
inc
or
xchg
imul
or
int
enter
mov
iret
cmp
adc
sbb
push
rol
inc
dec
mov
mov
movsb
leave
xor
and
repnz
cmpsb
fcmove
and
call
xchg
psubq
shrl
cld
clc
fyl2x
inc
jno
adc
mov
mov
ss
xlat
pusha
cltd
push
jno
push
enter
test
adc
daa
and
fs
shlb
mov
shl
mov
mov
jbe
mov
je
outsl
xchg
inc
push
outsl
xchg
adc
addl
sub
xlat
cmpsl
sahf
test
add
jno
inc
inc
ror
xchg
fildll
fldl
cmpsb
pop
or
xlat
dec
pusha
sbb
mov
dec
lock
adc
lock
sbb
dec
mov
sbb
inc
mov
and
sub
lret
movsl
stos
cld
ror
mov
dec
nopl
and
jle
aam
jecxz
je
mov
daa
and
fcmovbe
subb
mov
insl
pusha
or
fcmovu
adc
jp
out
insl
out
xorl
fidivrl
or
data16
mov
mov
mov
sub
inc
pop
push
repz
or
add
xchg
cmp
add
fcompl
and
mov
icebp
aad
popa
and
xor
dec
inc
mov
or
adcb
mov
jge
mov
popf
shlb
mov
mov
sub
inc
aaa
out
cltd
sbb
jbe
pop
mov
std
mov
rcrl
adc
popa
loop
sbb
and
pop
xchg
xchg
fcmovu
xchg
jmp
dec
dec
jle
dec
aaa
adc
jae
and
mov
dec
mov
jnp
in
inc
test
push
adc
lds
int
in
xchg
mov
arpl
cmp
cmp
xor
adc
xor
jns
jo
filds
push
test
incl
add
or
daa
jge
fimull
lock
xor
and
cltd
fnsave
inc
jg
inc
mov
repz
xchg
mov
xchg
push
inc
fld1
imul
cld
shr
lea
je
pop
pushf
shr
adc
sbb
stos
pop
dec
out
push
aaa
in
cmc
push
out
nop
push
test
in
decb
loope
or
push
adc
mov
lea
jge
mov
rorl
loop
inc
jle
aaa
ljmp
push
loopne
sbb
sti
scas
xchg
cmp
push
inc
push
popf
sbb
inc
sahf
xchg
testb
lock
cltd
out
fwait
dec
dec
out
rcl
clc
cmpsb
mov
hlt
jnp
sub
push
lea
mov
mul
fisubrl
or
add
lock
mov
sub
stc
testb
mov
push
addr16
pop
dec
out
aas
pop
push
mov
add
or
daa
jno
fwait
test
add
leave
ds
lret
mov
mov
or
out
xchg
xchg
add
rcrl
xor
dec
scas
stos
outsl
mov
ja
dec
sbb
xchg
xor
pop
dec
cmp
testl
test
ja
sub
insb
jmp
mov
xor
pop
push
push
icebp
out
inc
push
in
into
xchg
jp
pop
rolb
shlb
lcall
inc
lret
out
in
mov
arpl
out
jmp
cli
loop
das
or
mov
adc
pushf
mov
leave
inc
lock
inc
in
clc
sahf
cltd
pop
mov
subb
xchg
push
xchg
sarb
in
std
pusha
in
sbb
movsl
mov
stos
sarb
pushf
rolb
dec
aaa
sub
repnz
adc
sub
pcmpeqw
jno
rorl
aam
mov
mov
xor
inc
mov
inc
leave
mov
jbe
mov
shlb
movsb
ret
mov
push
mov
call
inc
rol
fiaddl
lods
xchg
mov
out
test
sbb
and
mov
mov
push
xor
ret
in
adc
shrb
mov
fldenv
leave
mov
mov
pop
inc
leave
js
jl
xchg
mov
sub
insb
addl
mov
jp
test
popf
inc
repz
insb
jb
dec
mov
in
test
mov
xor
and
sub
sti
sub
test
mov
out
into
sahf
stc
mov
fnsave
std
shrb
inc
inc
cmp
mov
mov
nop
int3
out
pusha
pop
adc
mov
scas
cld
in
aad
mov
push
inc
scas
in
test
or
mov
shlb
mov
ds
pop
push
fs
and
xor
mov
fwait
mov
inc
popa
sub
int
lods
xorl
add
sub
pop
popa
aam
mov
icebp
dec
add
push
adc
add
shlb
es
sub
pop
lds
jno
jnp
sub
push
xchg
sbb
mov
sub
daa
fstps
or
inc
xor
adc
inc
jl
adc
dec
bound
and
adc
fwait
lea
test
mov
and
inc
and
movsl
nop
das
enter
dec
push
pushf
and
xor
mov
adc
in
lock
and
fildl
pop
scas
xchg
xor
cmp
pop
adc
imul
inc
fidivrl
pushf
sub
mov
aaa
test
in
jns
std
pushf
roll
mov
lock
movsb
shll
iret
leave
pop
push
in
dec
popa
stos
subl
lods
pushf
mov
movsb
push
jl
in
sbb
dec
fsubrl
cwtl
cmp
dec
lock
xchg
jbe
push
ret
mov
repz
pop
xchg
es
sub
and
inc
inc
int3
ficoms
leave
clc
inc
adc
fiaddl
cld
xchg
sbb
lcall
push
inc
loopne
fsts
cmp
jae
dec
push
mov
ret
scas
scas
dec
or
or
icebp
jmp
shlb
cmp
in
push
sub
pop
test
jne
mov
fidivrl
icebp
dec
xor
mov
aam
fldcw
iret
repz
ljmp
xlat
loopne
push
movl
iret
or
jecxz
scas
pop
idivl
je
repnz
imul
ret
sub
sub
pop
leave
mov
sbb
jae
je
bound
incb
pop
out
pop
movsl
movsb
and
or
lahf
dec
add
rcr
inc
push
adc
cmp
addl
nop
rcll
sbb
xchg
aam
inc
and
mov
test
repnz
in
xor
mov
sarl
cmp
or
pusha
sbb
inc
sbb
stos
stos
mov
mov
pushf
out
fdivl
push
mov
iret
insl
xchg
adc
sub
or
mov
fstpt
cmp
pop
dec
or
fsubrp
adc
jecxz
fcompl
lods
imul
aaa
pop
xchg
stc
mov
mov
mov
out
cmp
je
hlt
push
mulb
pop
xchg
pop
out
mov
js
adc
call
fcmovnb
mov
repnz
mov
rorl
mov
out
popa
xchg
shll
aam
je,pt
rcrb
mov
in
out
add
adc
test
xlat
mov
jne
mov
xor
lods
jnp
pop
jge
xchg
sbb
push
pop
ret
movsb
jbe
scas
int
mov
loope
in
pop
cmp
jge
call
rorb
and
jne
cs
push
jo
xor
inc
das
imul
push
push
loop
loope
pop
ficompl
pop
daa
sub
repz
mov
test
aaa
push
add
jo
dec
icebp
in
mov
jno
lahf
xchg
movsl
mov
adc
rcl
push
jcxz
add
xchg
mov
inc
addr16
push
mull
sbb
push
add
mov
rcr
xor
mov
lods
arpl
mov
pusha
xchg
cmpsl
call
jp
hlt
mov
sti
sub
pop
lret
cmp
or
xorl
cmp
mov
imul
out
imul
pusha
filds
fwait
call
gs
sbbb
sti
dec
pop
outsb
out
pop
sbb
inc
xchg
fisttps
cmp
in
lcall
cmpb
jne
xor
xor
pop
out
push
clc
ret
push
ret
sub
aas
dec
mov
pop
stc
pop
shll
pop
sub
movsl
mov
lea
xor
and
xchg
inc
xlat
into
imul
sahf
xchg
mov
inc
push
das
lock
aad
dec
loope
or
push
jno
fwait
and
sub
pop
push
lods
je
push
in
and
test
in
fdivl
inc
repnz
adc
sub
mov
mov
add
cmp
sti
lret
data16
jae
js,pn
sub
pop
push
dec
push
mov
sbb
clc
lcall
out
repnz
data16
cmp
jae
or
xchg
repnz
or
pop
imul
addr16
out
and
mov
stc
xchg
nop
pop
sti
adc
add
mov
xchg
imul
hlt
lds
sbb
pusha
xchg
int3
cwtl
sbb
add
and
xor
aas
pop
loopne
mov
xor
mov
xor
shlb
cmp
pop
xchg
int
out
cld
test
xchg
and
fwait
js
es
xchg
gs
or
sbb
pop
xorb
lea
imul
xor
cmpsb
push
xor
leave
mov
pop
es
mov
into
cmp
sub
hlt
jecxz
imul
loopne
sar
sahf
in
lods
das
fcos
mov
inc
out
les
jle
mov
inc
stc
jp
and
icebp
insl
jno
cmpsb
scas
inc
cmpb
aas
sbb
pop
or
out
cmp
inc
or
and
sbb
xchg
pop
lods
shr
rol
lcall
mov
lahf
lock
or
loop
push
sbb
imul
mov
xor
scas
daa
outsb
dec
or
fnsave
dec
add
dec
inc
adc
cmp
push
rcll
movsb
xchg
mov
xchg
hlt
cmpsl
jne
mov
xchg
bound
fwait
aam
pop
push
dec
cmp
aas
scas
subl
cmp
xor
mov
jecxz
or
sbb
push
inc
inc
pushf
dec
push
pop
and
pop
jecxz
ljmp
bound
movsl
mov
bound
adc
mov
mov
cmpsb
adc
cmp
mov
pop
rclb
dec
xor
mov
pop
inc
jne
mov
iret
mov
js
loope
jo
add
adc
fstpl
clc
idiv
or
mov
fcoms
int
mov
cli
jb
jecxz
push
dec
jnp
add
cld
inc
mov
call
mov
mov
ja
xchg
andb
inc
push
fistl
pop
adc
lret
push
test
mov
leave
test
dec
sub
stos
dec
ds
sahf
xor
lock
mov
push
push
sti
jns
sub
mov
jo
xchg
je
int
lods
xchg
sbb
xor
or
jb
lret
shlb
outsb
fldenv
jae
ss
insl
dec
imul
cmp
js
hlt
pop
fbstp
popf
out
fwait
xchg
aam
jl
addl
fadds
mov
sarl
mov
shrb
jecxz
fnstenv
add
xchg
lock
pop
inc
sub
lods
or
aam
frstor
push
testl
add
dec
pop
pushf
aam
lcall
push
sti
insb
push
cltd
int
or
sahf
fimuls
iret
jle
dec
xchg
or
test
inc
insl
or
ds
add
mov
jle
cmp
cmp
sti
push
dec
push
xor
neg
sbb
mov
adc
push
leave
cltd
addr16
das
clc
outsb
xor
pop
sbbb
mov
outsl
nop
movsl
add
dec
shll
inc
xchg
add
mov
mov
cltd
push
leave
and
push
or
and
outsl
pop
fnsave
loope
push
iret
and
int3
jle
and
push
adc
jg
mov
int3
int3
inc
mov
in
cmp
xlat
mov
lds
fsubrs
xchg
inc
and
cmove
cltd
pop
jg
lahf
int3
cwtl
sbb
xchg
sub
cmpsl
push
mov
cmpsl
sub
xor
adc
mov
repnz
cmp
and
sar
mov
rcrl
out
add
loop
subl
push
sub
sub
xor
andb
lea
jae
clc
jmp
jecxz
or
jp
jb
jae
bound
jne
gs
cli
out
faddl
push
add
pushl
mov
divl
xchg
pop
sbb
stos
mov
push
lcall
fs
sub
adc
and
push
xchg
mov
push
lds
adc
lahf
inc
es
mov
push
aam
popf
sub
jmp
fsubrl
jb
lret
je
lret
mov
push
push
addb
clc
insb
jno
mov
in
mov
pop
mov
pushf
ss
cwtl
repz
stos
lods
mov
inc
jno
push
lahf
mov
lock
mov
icebp
imul
fs
pop
inc
mov
xor
push
fcmovnu
or
cltd
dec
stc
cmpsb
inc
push
pop
loopne
adc
jo
xchg
add
xorl
jne
mov
xor
test
cmp
jae
test
xchg
cltd
push
sbb
daa
andb
sub
ja
mov
mov
aam
pushf
shl
lret
mov
daa
testl
push
mov
mov
push
lret
jl
cmp
lds
lds
test
add
movsb
jae
into
fadd
out
add
subb
and
cmp
ror
xchg
dec
cmpsb
jbe
push
sub
lahf
adc
sbb
lock
enter
mov
inc
xchg
enter
test
movsb
xlat
mov
mov
aaa
cwtl
add
pop
das
insb
sbb
and
lahf
out
jecxz
add
mov
scas
test
cmp
cmp
xchg
ret
jl
lods
mov
or
into
repz
xchg
mov
xor
mov
aas
mov
insb
fucomp
sbb
xor
pop
fstl
jecxz
dec
sarl
imul
pushf
ror
out
flds
mov
insl
and
or
cmp
call
dec
fidivrs
ljmp
jg
mov
push
inc
xchg
adc
pushf
xor
lret
jg
icebp
fldt
bound
xchg
fistps
cmc
addr16
inc
and
and
cmp
sbb
mov
fbstp
enter
movsl
sbb
inc
repz
dec
and
push
imull
or
aas
xor
cmpsb
cmp
push
adc
inc
dec
arpl
add
xchg
nop
push
insl
xchg
lods
xor
xlat
and
cmp
sbb
jg
pop
in
cmp
sub
cmp
push
call
add
movsb
pop
cs
and
jo
lods
cmpsl
test
loop,pt
push
mov
mov
in
xor
cmp
push
popa
iret
aad
in
jmp
das
cli
jne
mov
dec
dec
imul
gs
mov
or
in
or
push
adc
dec
movb
and
mov
mov
jo
ds
popa
shl
not
jbe
add
mov
cmp
dec
add
mov
sub
xor
out
add
cmp
fistpll
xor
add
add
jno
int
inc
dec
mov
or
xchg
mov
inc
adc
scas
mov
fmuls
mov
loop
mov
sub
jb
xor
xchg
add
inc
inc
rcr
inc
mov
dec
xor
iret
cmp
ficoml
sbb
dec
and
pop
shrl
xor
icebp
lahf
psubsb
fldl2e
mov
aam
xchg
cld
dec
insl
jmp
cmp
sub
out
or
sbb
fs
std
pushf
xor
cmp
js
data16
inc
push
sbb
xchg
adc
movsl
outsl
shr
sbb
lock
xchg
fcomps
cs
inc
mov
sbb
out
mov
push
push
gs
icebp
xchg
subb
ret
pop
int
xor
outsb
repz
xor
push
test
movsl
mov
mov
stc
shrb
sub
sub
loopne
and
loop
test
test
mov
xor
sbb
and
cld
push
jecxz
scas
add
ret
jbe
push
mov
mov
repz
ror
jmp
push
jmp
stos
adc
sti
repz
mov
xchg
mov
dec
stc
es
loop
mov
lret
xchg
ljmp
movsb
xlat
mov
daa
mov
and
fwait
or
pop
sbb
imul
hlt
pop
push
push
sahf
adc
pop
adc
gs
and
cmp
xchg
enter
mov
jecxz
and
cmpsb
inc
or
sbb
outsb
imul
fcoml
jecxz
in
cwtl
or
in
repz
sub
jb
mov
sahf
imul
lods
shrl
int3
outsl
cwtl
xor
rcll
mov
aaa
xor
jo
jg
push
pop
out
bound
pop
popa
cmp
inc
scas
mov
pop
repz
xlat
jnp
push
call
scas
cmp
sbb
fcmovbe
xchg
fsubl
rol
lock
lds
mov
shlb
jg
ja
mov
in
inc
popa
xor
jmp
out
sub
cmp
sti
or
fisubrl
jbe
mov
test
rcl
lret
aaa
sub
sahf
nop
sysexit
mov
lret
push
adc
xor
lds
mov
test
scas
inc
insl
or
sbb
das
shlb
inc
inc
inc
or
int
loope
in
xor
xchg
hlt
movsb
xchg
sti
dec
out
push
inc
nop
rcrl
cmp
orl
dec
ja
addr16
popf
inc
int
mov
jp
aam
popa
gs
xchg
add
outsb
bound
and
and
es
stos
outsl
movsl
test
mov
imulb
sti
sbbl
fldcw
fstpl
push
scas
jp
outsl
stc
pushw
frstor
and
test
outsb
sbb
cmp
andb
pop
ss
inc
adc
mov
ret
ret
cmp
inc
pop
ret
fistps
inc
inc
out
mov
into
push
shll
jnp
data16
ljmp
add
jge
je
call
pop
xchg
int3
xchg
cmp
in
lret
es
mov
mov
fst
ljmp
test
enter
in
lret
testl
scas
xchg
push
xchg
jle
add
xor
shlb
mov
sbb
add
push
adc
movsl
sub
pop
jge
push
push
push
xor
sub
gs
adc
andb
jbe
or
cmp
add
pop
fcoml
and
lret
sbb
int3
scas
sbb
sahf
lods
inc
fs
xor
call
cli
insb
add
shlb
mov
in
push
mov
sub
sub
pop
loope
sub
sbb
jp
nop
mov
stos
and
sbb
cmp
adc
jecxz
add
lret
cs
sbb
cmpsb
dec
xor
and
adcb
out
cltd
rcll
push
inc
outsl
fwait
ret
in
scas
fsubrs
pop
test
xchg
hlt
push
xchg
jle
testb
dec
dec
push
push
out
fbld
xchg
inc
mov
test
aas
xchg
cli
aam
sub
adc
mov
roll
and
test
lea
lret
push
pop
mov
mov
arpl
jae
ret
pop
andl
jmp
mov
dec
dec
popf
enter
pusha
loop
ret
scas
arpl
stos
aad
xchg
mov
mov
xor
mov
jmp
clc
fimuls
test
inc
push
arpl
xchg
bnd
jbe
popw
enter
sub
sbb
dec
mov
add
or
sub
out
scas
pop
lock
stos
addr16
test
out
rcrb
xchg
and
pushf
sbb
mov
movb
lock
pop
push
arpl
adc
sarl
ss
inc
add
add
lods
push
push
fdiv
pop
lods
aaa
sbb
inc
aas
ret
repz
pop
push
test
cmp
mov
pushf
cmc
out
add
out
into
mov
loopne
inc
mov
incl
cmpsl
push
mov
aam
mov
push
dec
mov
sub
push
push
xchg
mov
fwait
push
jbe
mov
jno
add
push
push
lods
xchg
xchg
cmpb
pcmpeqd
lret
sub
cmpsl
cltd
or
lods
lret
and
shlb
mov
outsb
cltd
xchg
mov
mov
call
ja
stc
shl
pushf
sub
push
fimuls
add
mov
sub
gs
mov
loope
ds
and
push
mov
ljmp
and
push
sub
or
outsb
out
pop
repz
xor
imul
or
sub
sub
inc
xchg
push
sahf
pop
out
mov
or
hlt
loop
sbb
push
imul
mov
xchg
mov
addr16
mov
push
jl
mov
sub
test
loopne
mov
outsl
sub
sub
add
outsl
leave
ss
mov
xor
cmp
lret
mov
insl
ss
push
inc
mov
adc
push
pop
call
pop
mov
sub
dec
and
cmp
push
mov
cmp
fwait
and
rolb
sub
mov
lret
je
xor
lods
push
sbb
jecxz
pop
jle
jl
sti
inc
testl
jne
scas
insl
stc
jns
pop
or
nop
mov
cmpsl
insb
movsb
dec
call
int3
dec
mov
sub
out
cs
fcomip
in
pop
or
pop
dec
and
pusha
dec
das
push
xor
mov
ja
pop
dec
jnp
cltd
imul
aas
stos
test
cmp
popf
sub
sar
cmp
es
push
xchg
cmpsl
ja
pushf
testl
js
popf
cmp
scas
cmp
mov
movsb
add
imul
xor
or
out
enter
fcompl
adc
push
mov
jecxz
cli
gs
mov
mov
movsb
adc
and
fwait
push
movsb
push
psrad
test
mov
dec
or
cmc
push
cld
cmp
mov
push
sbb
jb
xor
movsb
dec
bound
cwtl
push
mov
inc
xorl
test
sub
jno
subl
xor
es
push
aaa
xchg
sbb
pop
push
shll
sub
xor
mov
leave
adc
jge
xorb
sarb
and
cmp
xchg
gs
fldenv
mov
rcrl
xchg
sbb
push
inc
arpl
sbb
push
sbb
sbb
ret
dec
test
insl
fwait
addr16
aaa
rorl
dec
push
in
sti
mov
jle
loop
and
mov
dec
repz
pop
sbb
in
sbb
pop
adcb
sahf
dec
cs
hlt
lret
add
dec
add
xor
cs
popf
enter
sbb
repnz
or
repz
arpl
test
push
enter
fstpl
scas
cmp
lahf
or
add
pop
jne
inc
pop
iret
sub
mov
mov
scas
lcall
pop
mov
pop
push
shrb
jb
pop
mov
popa
mov
jle
jge
pop
mov
movsb
adc
test
sbb
mov
pop
xlat
sub
xchg
mov
mov
xor
mov
jl
insl
sub
idivb
jg
ds
loopne
adc
cmp
xchg
pop
cmp
cli
adc
jl
lahf
mov
push
mov
mov
pop
inc
jo
cltd
pop
add
imul
arpl
mov
pop
xor
pusha
or
fdiv
jecxz
mov
jbe
sub
xchg
jae
mov
orb
xchg
cmpsl
ds
jns
cmp
pop
xchg
pop
sbb
int
mov
bound
fdivl
mov
pop
xchg
movl
je
ss
cmp
call
pusha
xchg
push
imul
out
push
ficoms
int
jg
pop
sbbb
xchg
mov
push
arpl
cld
mov
adc
repz
push
roll
sub
mov
cmp
fisubrs
ficoml
test
pop
in
add
bound
xor
mov
sbb
addr16
rcl
ret
scas
ret
cmp
sbb
mov
aad
int3
test
shll
lea
pop
cmp
dec
movsl
movsb
xchg
mov
shrl
cmp
and
dec
mov
adc
or
or
fnstsw
in
jg
sub
lret
sub
dec
insl
jnp
arpl
push
mov
mov
add
ret
inc
push
iret
jg
ret
in
jmp
mov
stos
cld
out
repz
ljmp
insb
cld
dec
or
out
xchg
dec
cmpsb
in
lret
out
inc
mov
adc
es
jle
fsubrl
ret
imul
cmp
gs
add
push
test
out
je
cli
inc
fs
out
je
jge
js
or
mov
pop
pop
pop
rcrb
insb
scas
ss
sbb
imul
inc
fwait
shll
inc
addl
lret
inc
pop
shrb
daa
in
fisubrl
scas
push
mov
popf
xchg
scas
pop
popa
xchg
or
jnp
lea
lods
pop
decb
sub
jnp
sbb
pop
int
popa
int3
in
push
adc
xor
lcall
insb
and
adc
jno
pop
jae
push
cmp
out
push
sbb
cmc
push
sbb
adc
repnz
xchg
mov
mov
ljmp
lods
adcb
jo
fsubs
rcl
sub
repnz
adc
sbb
fisubs
pop
or
mov
sbb
and
add
pop
call
jbe
call
sbb
inc
sbb
sub
add
ret
leave
daa
lods
cmc
sbb
mov
ret
xchg
jl
les
cmpsl
xchg
in
rcrl
lods
dec
jmp
sub
push
in
jg
dec
popf
push
lods
or
les
loope
push
decl
sbb
inc
xor
iret
push
add
cltd
fsubrl
push
leave
movsl
test
sub
setae
cltd
repz
test
inc
jae
lret
inc
inc
and
bound
push
outsl
xchg
mov
cmp
or
fldl
imul
adc
repz
fistps
in
imul
rcrl
xchg
jge
sub
adc
lcall
mov
fcomip
ret
pusha
in
lahf
adc
rolb
sbb
lock
inc
out
add
shll
xor
nop
mov
or
addr16
cmc
nop
xchg
xchg
sbb
pop
pop
cmp
ret
pop
loop
jb
jl
dec
xchg
jl
out
adc
xchg
inc
jno
sahf
adc
cmp
out
xchg
pop
mov
dec
xchg
mov
cld
jbe
adc
icebp
loopne
ret
cli
ret
mov
test
movsl
pushf
out
fstps
jp
or
test
cwtl
outsl
enter
xchg
push
add
enter
popl
sti
jle
xlat
stos
ljmp
mov
lock
movsl
dec
arpl
adc
test
dec
mov
aad
mov
push
in
lret
imul
dec
repnz
fimuls
je
leave
inc
mov
mov
nop
mov
movsl
sbb
loopne
mov
jns
rolb
outsb
sti
inc
stos
sbb
ret
es
lahf
in
jne
sbb
addl
adc
dec
ss
bound
ja
movsl
mov
jmp
add
push
cmp
xchg
push
rcrl
push
mov
test
enter
insb
mov
leave
push
or
test
dec
sub
fstpt
js
jle
or
xchg
addr16
pop
xorb
pop
mov
dec
inc
nop
push
fs
movsl
jl
dec
sbb
mov
push
mov
and
add
fcoml
movsb
fldcw
mov
mov
test
daa
aaa
aas
push
fisubrs
mov
das
push
out
push
cwtl
sti
jl
mov
adc
pop
nop
clc
jo
adc
jp
add
xor
push
stc
push
jne
cmp
fisttpll
sbb
mov
mov
daa
mov
ficoml
and
cmp
ret
push
mov
mov
or
in
and
dec
lcall
fmuls
xor
loopne
pop
dec
push
jb
fcmovnbe
pusha
insb
roll
ret
dec
pushf
mov
aaa
dec
cmp
push
adc
cltd
push
out
adc
dec
mov
inc
adc
xor
and
dec
fldcw
popf
or
hlt
and
mov
dec
cltd
mov
popa
add
outsb
hlt
popf
mov
dec
rcrb
jmp
or
imul
xchg
pushf
sub
in
adc
mov
and
and
sub
jne
dec
sub
push
mov
in
mull
and
aas
es
popf
lea
fdivl
xchg
or
inc
xor
mov
loope
out
mov
outsb
into
jecxz
aad
pop
shlb
fdivrp
lahf
pusha
push
push
popf
mov
fdivs
or
mov
adc
mov
pop
sub
mov
mov
sahf
out
adc
imul
mov
or
sahf
push
addr16
imul
sub
cltd
dec
movsl
jecxz
clc
ficompl
stos
and
pop
add
xorb
ret
jnp
hlt
pop
popa
int3
enter
in
sub
jo
pop
movsl
mov
or
popa
pop
test
xchg
push
mov
rorb
out
and
enter
testl
adc
sbb
push
loope
fildl
lock
jge
outsl
add
mov
xlat
mov
frstor
rcll
ficoml
aam
jmp
push
push
inc
repnz
mov
out
jbe
mov
lret
loop
mov
inc
mov
or
jecxz
loope
hlt
push
orl
test
cmp
daa
ret
sbb
fstpl
and
lds
dec
xlat
jae
lret
mov
cmp
mov
mov
iret
bound
xor
mov
jg
inc
fisttpl
dec
sahf
add
in
es
cmp
nop
loopne
lods
out
icebp
lods
adc
dec
mov
jl
jae
jbe
mov
cli
sbb
gs
adc
xor
popf
test
mov
lea
xchg
and
xchg
push
jge
push
mov
popa
ljmp
aas
push
das
out
xchg
pop
idivb
jle
outsl
incl
xchg
jmp
add
test
adc
lret
push
push
inc
jg
mov
mov
cmp
xor
out
sbb
jl
pop
jle
sub
fsubl
xchg
inc
inc
loope
sub
adc
cmp
lods
mov
adc
mov
jb
daa
cmpsb
pop
push
mov
rol
in
insl
inc
push
cli
mov
cltd
out
push
lods
xchg
and
push
ds
leave
fnstcw
aam
fstps
sbb
xchg
je
or
mov
test
and
inc
xchg
jmp
popf
xchg
dec
mov
stc
mov
jecxz
fstps
addl
sti
movsb
aad
mov
test
mov
adc
adc
sti
lahf
ret
xor
data16
pushl
push
pop
adc
aad
imul
pop
scas
sahf
mov
repz
or
mov
out
ja
cmp
in
xchg
call
data16
lock
sub
lahf
pop
and
ret
sub
pop
outsb
fistpl
dec
and
popa
inc
out
insb
mov
xchg
nop
pusha
loope
sahf
imul
inc
sbb
jno
popf
add
mov
or
movsl
cmpxchg
jb
mov
cltd
jl
movsl
jg
jns
aas
flds
cli
out
cmp
das
leave
insl
sub
inc
jecxz
dec
lock
sahf
hlt
xchg
fdivrs
pop
scas
sub
pcmpgtb
add
stos
leave
cli
ret
cmp
dec
dec
mov
or
and
je
add
test
xchg
out
mulb
or
das
xor
inc
mulb
cld
mov
in
add
outsb
sbb
dec
or
addb
inc
mov
add
cmp
inc
shr
mov
stos
pusha
loop
sub
into
inc
cld
mov
jmp
sub
pusha
loop
adc
stos
lds
sbb
xor
jmp
loop
push
rcl
mov
sbb
cmp
inc
add
aaa
sbb
lods
push
add
scas
cmc
mov
into
or
cwtl
fbstp
adc
or
push
jge
jno
je
cmp
dec
lods
fisubl
jl
orb
adc
hlt
adc
push
xor
push
mov
mov
cmp
shr
in
inc
dec
cmp
popa
lods
cmp
push
fisttpl
int
lds
ljmp
out
inc
fmull
sub
mov
pop
xchg
dec
andb
stc
scas
test
pop
add
addr16
ds
addr16
fdiv
mov
jnp
aaa
sbb
mov
xor
fmuls
inc
test
add
popa
cmpsb
sub
push
call
xor
dec
mov
sar
and
scas
stc
inc
sub
sub
pop
dec
xor
pop
jecxz
dec
xor
adc
sbb
xor
rolb
mov
hlt
loop
fcomps
stos
pop
xchg
dec
lahf
ljmp
ficomps
insl
testb
inc
test
cmp
mov
add
outsb
mov
insl
rolb
lock
sub
ss
popa
dec
xchg
jno
pop
fs
jmp
jmp
add
mov
ds
pusha
xchg
mov
cmc
nop
sbb
ss
pop
out
push
insb
fistpl
iret
enter
pop
xchg
lret
sub
pop
mov
test
mov
mov
cltd
sub
adc
mov
fdiv
mov
sub
xlat
pop
add
xchg
xchg
rep
stc
std
or
lret
int3
xchg
movsb
jmp
xchg
jp
cmp
iret
daa
mov
adcl
cmp
insb
pop
cmp
outsl
insl
loope
xchg
je
xchg
pushf
mov
mov
in
sub
push
inc
push
inc
or
jmp
pop
jno
jnp
cmpsl
daa
gs
jge
mov
aad
js
mov
and
add
daa
push
mov
mov
mov
or
mov
dec
fucomp
pop
sahf
dec
cmp
inc
shll
imul
dec
dec
mov
outsb
push
cmp
test
jge
cmp
cmc
ljmp
ret
pop
cltd
adc
shrb
push
pushf
pop
inc
mov
faddl
xchg
xor
sahf
ds
test
mov
rorl
nop
xor
mov
test
fwait
mov
enter
push
pop
out
into
sbb
or
inc
xchg
fiadds
cmp
pop
icebp
inc
push
pop
fwait
mov
pop
or
sahf
inc
pop
loop
xlat
pop
push
repnz
insl
mov
inc
shll
dec
mov
icebp
pop
push
dec
insl
lcall
push
jl
jno
dec
inc
cmc
mov
nop
push
sbb
andb
jp
adc
dec
mov
cmc
push
pop
sub
orb
ss
mov
inc
sbb
adc
add
lds
mov
lcall
scas
jnp
out
pusha
imul
push
mov
fists
add
and
daa
add
cmp
pop
cmp
out
inc
sub
lock
int3
sar
mov
jmp
sahf
in
and
je
repz
xorb
lock
xchg
or
and
jne
je
int3
dec
xor
xchg
je
xor
xchg
sahf
xlat
or
loope
push
jmp
push
mov
movsl
jns
insb
mov
leave
sub
inc
dec
in
mov
and
mov
push
jae
push
inc
lcall
fsts
sti
jmp
mov
cmpsl
cmp
or
addr16
xor
dec
out
cmpsb
popf
xor
and
hlt
pop
sbb
cmpsl
cmpsb
dec
pusha
stos
inc
push
jmp
int
shll
sbb
pop
push
adc
dec
das
mov
out
cwtl
cmc
push
repnz
fdivrl
stc
out
xchg
aad
push
in
loopne
mov
cmp
testl
add
add
add
and
xchg
mov
repnz
fstpt
pop
xlat
sbb
xchg
in
mov
xchg
daa
mov
cmp
ds
imul
aas
das
ds
std
ljmp
cmpsb
cmp
inc
inc
xchg
xchg
scas
push
in
cmp
sbb
insb
xchg
lea
sub
ret
andl
adc
pop
mov
inc
js
aaa
push
mov
repnz
inc
jne
and
mov
xchg
push
push
mov
mov
sbb
sbb
js
mov
jne
aas
lock
mov
dec
pop
les
sbb
pusha
or
out
xor
sbb
aas
push
xor
out
or
ret
imul
aas
testl
xchg
ss
push
push
cwtl
xchg
mov
lret
int3
mov
or
data16
pop
dec
adc
mov
cltd
fdivrl
push
jecxz
sbb
dec
cmpb
dec
fwait
test
daa
mov
or
jo
dec
int3
and
inc
sti
iret
pop
addr16
js
jne
jl
lahf
and
mov
xchg
fdivrs
loopne
sub
add
pop
scas
push
mov
imul
mov
sbb
jle
xchg
xchg
mov
cwtl
mov
inc
xlat
sti
and
test
aaa
add
jo
or
into
cmc
ret
xor
in
icebp
mov
test
je
lods
sub
aad
ds
push
test
cmp
jl
xor
out
adc
loop
xor
js
mov
ss
popa
mov
xlat
jmp
lods
ljmp
fadd
xor
cltd
in
xchg
dec
cltd
push
cmp
bound
jg
nop
outsb
mov
or
pop
rcrl
icebp
or
and
lock
or
stos
cmp
cmp
lret
jle
jbe
push
js
adc
jmp
sub
lock
jo
lahf
adc
gs
push
inc
out
aam
iret
jb
and
movsb
or
ficoml
cs
shlb
test
cmp
or
cwtl
cld
jp
rorb
xor
jle
add
adc
cltd
sbb
and
adc
and
and
cli
xchg
cs
jg
and
sbb
data16
pop
xor
int
js
nop
push
jne
aad
lret
add
les
sub
sbb
leave
inc
xor
imul
repz
inc
push
pop
push
mov
daa
pop
inc
mov
and
add
pushf
inc
mov
iret
aam
out
rcrb
add
cmp
dec
jl
nop
mov
or
and
les
sub
push
aad
xchg
lock
dec
leave
xor
inc
cmp
test
adc
and
cmp
cwtl
int
dec
xchg
negb
pop
mov
ds
es
les
ret
xor
pop
ds
aad
ret
scas
cmp
lea
shll
subb
xorl
sbb
lock
adcb
outsb
inc
sub
test
sbb
test
stc
jnp
or
shlb
ds
jno
fmuls
fwait
outsl
bound
clc
mov
adc
xchg
mov
fidivrl
adc
or
adc
std
test
jo
es
jbe
lock
test
cld
add
mov
cmpsb
push
rclb
pushf
in
in
sar
incb
cmp
jnp
xor
sub
sub
mov
or
dec
insb
divb
jbe
js
cs
ja
pop
nop
push
loope
inc
notl
loopne
push
or
enter
inc
jmp
cmp
cs
xchg
mov
add
add
fists
inc
dec
shlb
adc
cmp
dec
test
std
dec
cltd
push
mov
iret
add
xor
xchg
shrl
mov
loopne
loop
lods
aam
addr16
out
cs
xor
or
stos
or
out
dec
es
add
sub
mov
inc
push
sbb
mov
jmp
out
cmp
adc
push
sbb
jno
aas
inc
sbb
fcoms
shr
movsl
stos
hlt
xchg
jl
inc
push
cmpsl
jns
aam
lcall
dec
adc
cwtl
test
push
xor
jb
popa
xor
rcll
and
mov
fildl
lods
sbb
add
xchg
adc
lods
shlb
outsb
xchg
jg
fidivl
xchg
add
repz
shl
jecxz
lods
push
mov
dec
push
cwtl
rolb
icebp
stc
dec
mov
jne
mov
lods
xchg
fs
js
lahf
nop
in
movsb
xchg
das
hlt
pop
nop
fprem
insb
rcrl
add
dec
insl
push
cli
rorb
xor
sti
fnstsw
pushf
jne
adc
scas
push
rcrl
mov
xchg
mov
xchg
pop
dec
mov
cwtl
sbb
mov
xlat
jne
mov
je
sbb
cltd
adc
inc
insl
and
pop
sub
push
push
ja
dec
mov
lock
mov
adc
outsb
fdivrl
popf
fldcw
adc
or
out
rcll
mov
adc
out
cmpsl
jae
std
pop
dec
sub
xlat
sbbb
mov
das
fidivrs
lods
test
mov
sub
sti
aam
xor
fisubs
insl
clc
idiv
push
jge
lds
into
sti
adc
cmp
mov
arpl
call
fisttps
push
lahf
mov
frstor
push
jo
push
pusha
fs
insb
pop
pop
pop
dec
imul
push
dec
js
push
stos
push
sbb
fstps
loopne
imul
fmulp
ja
loope
pop
sbb
jns
fbld
inc
or
and
mov
dec
dec
leave
push
addl
loop,pt
jne
mov
sbb
inc
mov
loopne
pop
out
lock
inc
in
decb
xor
loop
ror
fldenv
xchg
lock
and
or
cmp
jnp
mov
scas
loop
sub
sub
cmp
push
pop
pop
fld
inc
aad
lea
jno
mov
dec
sub
or
in
mov
in
and
sbb
cs
jbe
and
push
or
in
and
inc
mov
sbbb
andl
jae
jno
mov
sbb
fwait
xor
mov
imul
adc
push
das
cmpsl
or
loopne
or
inc
jbe
pop
push
clc
and
int
jb
stos
xorb
test
daa
cwtl
adc
mov
cltd
pop
mov
and
xor
scas
lds
stos
int
ljmp
shrl
sbb
jbe
imul
hlt
in
or
add
push
sbb
fdiv
add
mov
cmc
inc
xor
dec
pop
ljmp
movsb
ljmp
xlat
and
ret
cmp
stos
pop
outsl
cli
mov
add
insl
je
jb
dec
aad
dec
mov
mov
cmpsl
js
inc
lock
lret
pop
lahf
lock
pop
pop
push
inc
sub
enter
sar
mov
mov
int3
cmp
xlat
in
add
jne
inc
dec
and
mov
arpl
mov
jl
jnp
stc
loopne
ret
sub
pop
cmpsb
dec
jb
mov
fwait
pop
sbb
dec
scas
rcrl
flds
mov
push
pop
jle
push
or
test
xchg
add
sbb
out
inc
out
pushf
mov
add
stos
cmpl
adcb
rcrb
ret
pop
ss
mov
inc
and
mov
mov
hlt
nop
cwtl
out
and
shl
movsl
jle
leave
fucomi
sbb
inc
rorb
in
loope
mov
scas
sahf
inc
mov
mov
push
mov
mov
insl
inc
mov
pop
test
ja
push
sub
and
iret
push
xchg
rcl
mov
aad
mov
dec
or
pop
jp
inc
add
nop
jnp
cmp
aas
in
pop
inc
mov
sbb
or
push
mov
andl
fldcw
ja
imul
iret
jae
pushfw
add
out
add
and
and
dec
test
jge
call
mov
add
jbe
stos
mov
cmpsl
jnp
xchg
les
out
movsb
inc
lea
jl
dec
mov
lods
in
cmp
inc
jns
inc
lods
sub
jns
jle
dec
rol
test
pushl
into
add
mov
mov
ficoms
sbb
arpl
adc
pop
cwtl
pop
xchg
add
fists
into
lock
inc
ja
or
jb
js
andb
push
fldcw
cld
les
in
lahf
mov
cmpsb
dec
ret
jno
dec
push
pop
adc
inc
clc
leave
push
push
addr16
jnp
pop
sub
les
xchg
in
imul
out
ljmp
mov
sub
mov
mov
cs
jae
dec
test
ret
xor
mov
cmpsl
iret
push
cld
jnp
inc
cmc
sbb
sarl
adc
sbb
fldcw
fcom
outsb
push
adc
flds
int3
ficompl
add
adc
ret
mov
push
mov
mov
push
aam
or
mov
and
add
lds
jg
jnp
leave
flds
mov
push
xchg
sub
fwait
lcall
cwtl
lods
ss
cmpb
dec
push
mov
adc
inc
mov
or
xchg
cli
ficoms
repnz
pop
loopne
cmpsl
xor
popf
sbb
aad
mov
mov
movsb
cli
sbb
out
aam
or
dec
pop
push
clc
es
xchg
sub
out
clc
nop
pop
inc
stos
fwait
pusha
icebp
cmpb
cmp
mov
lret
push
loope
pushf
jno
ljmp
sub
jecxz
ret
mov
mov
push
idiv
enter
xchg
jns
push
mov
fwait
repnz
loopne
jg
and
decb
int
stos
mov
jmp
pop
jp
mov
sbb
pop
jbe
int
push
insb
xlat
mov
push
daa
iret
in
pusha
inc
pop
xchg
xchg
mov
dec
insb
inc
shll
popa
lahf
jnp
outsl
sbb
das
dec
fstp
aas
adc
jg
hlt
adc
arpl
mul
push
leave
pop
push
test
sub
mov
bound
mov
lea
jg
mov
and
jecxz
jno
cwtl
testb
mov
add
mov
add
mov
int
inc
sub
mov
pop
jbe
shll
add
xchg
pop
mov
mov
ja
push
dec
add
hlt
mov
mov
xchg
sub
fnstcw
arpl
inc
cmp
rcr
iret
and
dec
pop
popa
xor
jg
test
jbe
fstl
lock
rorl
call
les
lock
idivl
lahf
mov
sbb
xchg
sub
nop
int
fsub
mov
icebp
inc
mov
jb
loopne
dec
xchg
lods
jl
sub
shlb
in
mov
inc
pop
mov
and
mov
push
cmp
inc
xchg
out
mov
mov
xchg
shlb
test
jae
notb
mov
aam
arpl
xlat
jmp
lret
xchg
popl
adc
cmpsl
insl
adc
stos
lods
sahf
lds
sbb
das
dec
xor
ror
adc
out
and
iret
mov
aad
sub
inc
sub
movl
dec
pop
or
xchg
sbb
int3
gs
imul
pop
and
gs
mov
jg
lds
pop
out
and
mov
cmc
mov
lcall
adc
fistpll
sahf
jp
rcll
int3
std
repnz
repnz
sbb
neg
and
inc
shll
stos
je
push
and
repnz
sbb
loope
and
dec
loope
mov
jmp
das
aas
inc
mov
aad
dec
stos
into
add
popf
or
mov
sub
mov
ljmp
push
push
in
stos
testl
cmc
xchg
fimull
gs
arpl
out
lahf
push
cs
mov
mov
clc
movb
sub
nop
addl
push
cs
insl
cmp
cwtl
pop
ja
or
enter
pop
cli
pop
or
stos
xchg
jge
push
sbb
outsb
jle
mov
cmp
stos
jno
inc
dec
xor
inc
call
mov
pop
or
xor
and
jns
sbb
bound
push
jno
cmpsl
add
push
cmpsl
add
and
xlat
pop
push
lret
inc
test
push
adc
leave
jp
in
sar
test
xchg
dec
mov
add
test
shrb
or
in
cmp
xchg
cli
add
not
mov
cmp
push
in
adc
mov
mov
out
adc
fistpl
jbe
push
out
mov
inc
mov
sbb
out
sub
jne
push
test
ja
xor
sub
xchg
cwtl
mov
mov
inc
idivl
test
out
xchg
call
imul
lret
je
sub
mov
scas
sub
mov
ret
sub
push
pop
xor
dec
mov
in
cwtl
jge
icebp
ljmp
inc
pop
jns
loope
es
fstp
mov
mov
int
add
pop
std
cs
lea
xchg
inc
mov
fisubrl
inc
push
pop
jl
cmpb
popa
xchg
repnz
into
test
mov
mov
and
mov
mov
push
insb
fdivl
in
inc
das
icebp
icebp
add
sub
cltd
shlb
fldl
lahf
sti
into
sbbb
lcall
mov
cmpsl
cmpsb
lock
fidivrl
lods
mov
or
and
xchg
pop
dec
or
cmpsl
or
scas
or
xchg
push
pop
push
adc
mov
pop
fnstenv
or
xor
fisubrs
pop
lahf
jnp
inc
pop
cmp
test
mov
inc
mov
outsl
dec
mov
stc
icebp
push
cmp
jecxz
add
adc
ljmp
mov
pushl
cmpsb
andl
xchg
pop
loopne
mov
push
cmp
sbb
xor
testl
cmc
outsb
xchg
pop
cmp
mov
scas
mov
adc
stc
bound
lods
daa
sub
or
loop
imul
out
mov
inc
add
outsl
xchg
push
dec
sub
popl
adc
loope
shrb
inc
fildll
push
int3
push
dec
cltd
jnp
pop
std
push
jg
repz
xor
dec
subb
and
inc
push
fdivs
dec
pop
pushf
fsubr
mov
xor
push
or
jl
ds
mov
ret
mov
in
cmp
push
popf
popf
xor
push
loope
psrld
push
mov
rclb
mov
mov
inc
mov
inc
add
stos
iret
cmp
dec
jne
ret
jmp
es
jno
pop
adc
out
jg
mov
mov
rolb
lods
jp
cmp
test
loope
pop
dec
add
jmp
mov
leave
dec
sbb
and
jl
mov
cmp
rolb
adc
test
movsb
es
xchg
push
out
fs
icebp
int3
cmp
jne
nop
push
notb
mov
and
test
addb
fcmovb
icebp
lods
fisttpl
clc
adc
sbb
jb
js
or
add
mov
mov
cwtl
and
jmp
ror
sub
fcoms
and
jg
fwait
cmp
fldcw
sti
mov
movsb
mov
fimull
dec
rcr
sbb
dec
into
dec
dec
xchg
lds
mov
jbe
aam
insl
xor
sbb
pushf
dec
jb
push
aaa
mov
dec
dec
inc
popf
jo
je
into
in
shll
sbb
add
test
jge
push
and
ljmp
jl
jmp
and
add
fldcw
adc
push
sarl
iret
clc
daa
sub
and
mov
ficompl
cmpsl
ret
in
inc
and
pop
sub
iret
mov
add
xchg
cmpsb
push
sarb
sbb
xchg
ja
jne
data16
int3
cmpsl
scas
fldcw
xor
nop
rcrl
xchg
xchg
xor
repnz
mov
xor
in
movsb
mov
dec
sbb
cmpsl
sbb
push
out
into
int
ss
and
inc
scas
jp
dec
jle
jge
push
jp
and
adc
bound
aas
aam
mov
mov
cwtl
mov
push
data16
loop
lds
mov
in
arpl
shrb
jno
cmp
pop
divb
lock
in
das
or
mov
test
jb
mov
sbb
mov
clc
xor
gs
je
and
jg
dec
loope
int
cld
cmc
incl
pusha
in
jo
jne
mov
dec
movsb
lods
mov
xchg
iret
mov
pusha
push
fistpll
pop
movsb
mov
repz
and
das
sahf
cli
sub
sub
adc
xchg
and
test
in
ljmp
jo
mov
mov
adc
fcomps
mov
adc
pop
push
ljmp
lods
mov
sti
pop
mov
js
je,pn
lcall
pushf
out
inc
mov
or
inc
sbb
sub
fisttps
int
cmc
rcl
mov
pushf
aaa
call
pushf
xchg
iret
hlt
stos
shll
int3
out
sub
xor
out
aam
lock
sub
dec
adc
and
sti
or
ret
dec
xchg
stos
std
int
adc
test
adc
insl
out
ror
ret
out
push
push
pop
xchg
imul
adc
fs
outsl
mov
popa
push
adcl
out
mov
fcoms
dec
lock
fwait
adc
mov
je
mov
cmp
sub
push
test
aam
mov
loope
shll
call
or
push
rorb
pop
push
adc
shlb
add
inc
je
jo
mov
outsl
xchg
xchg
dec
popf
adc
icebp
cs
enter
adc
pop
add
bound
fstpl
dec
mov
adcb
aam
cmp
lahf
and
in
nop
or
sbb
ja
mov
pop
das
push
lds
xlat
adc
xor
incl
mov
pop
aas
cmc
rcr
jnp
outsl
xchg
pop
int3
sub
and
push
lahf
adcl
aas
je
lods
test
out
cmp
inc
xor
stos
std
xor
adc
dec
hlt
imul
ja
mov
ret
cmp
mov
stos
jecxz,pt
push
adc
xchg
jp
push
sub
inc
outsb
test
inc
jbe
loope
inc
pushf
rcll
js
mov
dec
enter
jno
jle
xor
add
or
cld
xor
loopne
stos
std
movsl
bound
xor
push
xchg
jno
inc
lods
adc
or
sub
aam
insb
insl
adc
mov
jnp
fbstp
inc
mov
mov
inc
lret
loop
mov
test
fistl
inc
imulb
xchg
and
data16
add
movsl
out
scas
pop
sar
mov
dec
mov
pop
jmp
inc
mov
adc
add
mov
loopne
inc
mov
or
cld
adc
sub
push
loope
and
icebp
je
fwait
outsl
out
inc
out
aam
imul
jmp
add
push
add
cmpsb
or
mov
adc
enter
and
das
shlb
lock
xchg
fxch
mov
pop
dec
cmp
push
jno
adc
mov
xchg
inc
mov
adc
inc
jmp
pushf
repz
fisubrl
mov
adc
arpl
data16
pusha
cmp
and
xor
das
sub
dec
mov
xchg
rcrl
lock
iret
outsb
mov
cmp
popf
jnp
aas
les
xchg
xchg
sub
mov
xor
xor
pusha
and
pop
fcom
test
inc
mov
cmp
cmpsl
dec
cmp
jb
cmpsb
rcrb
jae
pop
pop
arpl
push
lret
popa
leave
stos
sti
push
xlat
hlt
repz
jb
clc
loope
imul
or
movsb
sahf
insl
sbbb
push
cmp
pop
inc
or
mov
roll
gs
test
iret
mov
test
jbe
xchg
pop
pop
stos
sub
xchg
mov
add
rorb
fstl
adc
dec
xchg
sub
adc
and
or
clc
lcall
adc
out
jecxz
xchg
bound
sbb
repnz
push
jp
mov
mov
das
andb
mov
inc
mov
mov
in
push
jp
lock
in
pop
stos
pop
mov
push
aad
mov
pop
mov
imul
rolb
or
jmp
fmuls
mov
jo
xor
test
test
and
cmpb
mov
pop
mov
daa
xchg
lock
sti
dec
js
sub
loope
push
ss
mov
sbb
cmc
or
movsl
mov
in
pop
and
pop
mov
icebp
mov
jbe
rcr
sbb
push
mov
mov
add
iret
xchg
sub
push
sub
out
lock
jae
rol
xor
cli
mov
addr16
add
outsl
scas
cld
push
fidivs
xchg
add
push
or
cmp
mov
sbb
jnp
push
fwait
lret
sarl
into
dec
push
rclb
clc
addl
lcall
popa
sar
add
jne
and
jb
lods
add
adcl
dec
adc
dec
adc
ds
push
in
adc
das
jle
js
rcrl
pop
call
sub
xchg
test
mov
ffreep
shll
fnsave
mov
mov
icebp
popa
ret
push
std
push
pop
aad
xor
out
mov
ret
mov
icebp
outsb
icebp
adc
mov
cmpsb
mov
fldcw
aad
repz
nop
xlat
and
cli
jnp
loop
mov
fldl
sub
add
xchg
aaa
lcall
inc
mov
popa
inc
sahf
scas
mov
je
in
mov
test
add
outsl
aaa
dec
into
daa
je
pushf
cmp
mov
xor
mov
cmpl
shr
and
push
dec
clc
mov
pop
push
mov
popa
push
xor
loopne
test
push
sub
test
xor
pop
cmpl
mov
adc
repz
jecxz
repnz
sub
pop
fsubs
sar
mov
test
aam
arpl
or
xor
and
jmp
repz
sahf
lret
lods
pop
mov
inc
fimuls
pop
cmp
sbb
add
add
or
push
popf
repnz
sub
mov
and
arpl
and
and
xor
add
lahf
shrl
fistl
out
xchg
adc
test
shl
xor
mov
fnsave
jge
adc
test
cmp
enter
sbb
movsl
cmp
adc
xchg
add
fs
fcmove
add
jmp
add
or
jle
jns
stos
dec
fists
dec
cmpb
push
xor
or
dec
test
add
mov
loopne
adc
leave
testl
int3
rolb
scas
mov
fsubrl
cmp
xchg
into
xchg
out
sub
and
pushl
xchg
test
pusha
sub
dec
adc
mov
dec
add
and
aad
clc
mov
push
es
call
into
jb
aas
in
ret
hlt
push
mov
cmp
push
out
and
into
push
dec
cmp
mov
adc
icebp
adc
and
pop
les
out
push
cmp
sub
aas
das
rcr
sbb
sub
stos
testb
cmp
cli
leave
scas
push
out
ret
sbb
stos
fstpt
rol
hlt
insb
push
mov
rcrl
outsb
sub
xchg
dec
daa
stc
push
jns
mov
mov
shl
adc
cmc
leave
adc
movsl
cmpsb
cmp
mov
ret
and
les
or
addr16
jecxz
jp
leave
in
or
out
ror
mov
dec
gs
xchg
sbb
mov
and
scas
push
and
lea
inc
fdivrl
jp
and
ret
jno
popa
xor
cli
mov
ss
inc
rorl
inc
mov
loope
xchg
out
stos
hlt
stc
insl
jno
adc
cmp
push
fidivrl
push
sar
aas
into
mov
call
jge
pop
dec
lock
out
mov
scas
xor
aad
push
mov
push
rcll
add
inc
rorl
pop
arpl
cmp
adcb
imulb
sbb
add
test
or
je
xchg
inc
in
pop
sbb
cwtl
inc
or
dec
jl
rolb
shll
addl
pop
sub
mov
and
and
dec
add
or
push
out
cld
inc
stos
push
adc
gs
mov
jae
pop
std
push
jg
pop
mov
cmp
push
ret
pop
jp
mov
sbb
pushf
ljmp
mov
popa
lods
cltd
mov
pop
jecxz
adcb
ds
ljmp
push
pusha
fdivs
add
adc
pop
xchg
push
les
test
dec
movsl
dec
add
inc
xlat
and
lidtl
jg
nop
dec
pop
sbb
mov
imul
pop
xchg
cld
icebp
fisubrl
push
cwtl
sbb
xchg
jnp
test
or
jns
aaa
leave
xchg
mov
mov
stos
arpl
pop
inc
cli
std
mov
inc
cmp
test
js
xor
ffree
stos
je
movsb
adcl
jae
dec
push
jae
dec
ja
pop
fstpt
and
lock
pop
jbe
xor
cmp
jmp
sahf
inc
loop
fbld
xchg
loop
lcall
dec
pop
lods
test
das
stos
cmc
in
movsb
out
rol
cld
icebp
lods
pusha
orl
push
iret
rorl
je
push
xchg
scas
dec
push
xor
addr16
fisubs
call
mov
add
push
dec
scas
stc
pop
xchg
adc
lods
lods
xchg
pop
sbb
add
xchg
imul
or
push
ret
cmp
mov
lds
roll
jp
xchg
testb
sbb
lods
cld
mov
inc
cmp
fnstsw
mov
adc
push
pusha
jno
push
test
dec
push
xor
and
or
sbb
imul
mov
cmpsb
repz
mov
pop
dec
int
xor
repz
enter
inc
sbb
mov
rcl
cld
cmp
repz
ret
mov
lcall
aaa
enter
adc
sub
shr
xchg
sbb
in
pop
fwait
or
jb
add
mov
in
push
cs
cmp
or
cmp
jmp
adc
cmp
xchg
stc
loope
std
aad
cmp
sub
push
repnz
dec
xchg
mov
push
es
pop
cmp
les
popf
leave
mov
orb
data16
adc
mov
into
mov
pop
push
jmp
mov
cli
ljmp
pop
imul
jae
sub
fwait
cltd
mov
dec
arpl
push
cli
pop
pusha
pop
ljmp
movsb
adc
lret
dec
das
xor
ret
mov
inc
insl
inc
cmp
or
jne
pop
cmp
ja
cmc
popf
jmp
xchg
and
ja
mov
mov
cs
aaa
aad
int3
push
dec
cld
jg
fdivr
adc
jo
adc
insl
es
subb
mov
sti
cwtl
mov
or
sarb
je
js
in
push
pop
data16
movsb
pushf
mov
mov
mov
dec
rclb
fidivs
jb
out
out
jae
cmpl
mov
add
push
outsl
insl
and
mov
ja
jg
mov
fwait
xchg
pop
xchg
ret
and
fcmovnb
jl
mov
lds
sub
sub
inc
mov
jnp
sbb
into
and
or
and
mov
setnp
or
mov
int3
loope
aad
pop
cs
sarb
lods
dec
sub
scas
sbbl
lock
js
sbb
or
add
xor
movsl
push
inc
popa
cltd
repz
hlt
jo
mov
fisttpll
xor
call
andl
and
repz
or
inc
sub
and
sub
aad
cmpsb
sti
sti
xrelease
ja
jl
test
das
movsl
lods
xchg
push
mov
push
jle
fimuls
out
dec
jge
jno
ljmp
test
add
pavgb
sub
rclb
clc
aam
push
sbb
outsl
gs
imul
jecxz
push
inc
test
jp
ficompl
adc
jp
out
loop
in
cmp
int
mov
sbb
lods
sti
mov
sub
sbb
and
sbb
movsb
outsb
pop
mov
adcl
jecxz
fwait
sti
push
adc
or
add
cs
jne
dec
and
adc
out
push
xchg
push
loopne
loop
mov
ljmp
push
icebp
cltd
cmp
call
adc
or
sbb
jnp
outsb
loope
dec
cld
iret
xchg
mov
popl
jne
add
dec
lret
xor
repnz
lea
dec
leave
xchg
fdivr
pop
in
cmp
sub
ljmp
ljmp
fisttpl
dec
dec
sbbl
aad
mov
xchg
fcmovu
mov
int
cmp
into
pop
xor
xchg
fisttpl
outsl
sub
sar
adc
jecxz,pt
in
sub
push
inc
adc
bound
roll
jnp
lahf
mov
sub
add
aad
jecxz
inc
and
sub
jbe
mov
and
mov
ret
shll
out
push
cmp
xor
insl
faddl
ja
mov
dec
cmc
push
sbb
push
mov
push
es
push
jp
arpl
xor
or
out
in
clc
hlt
lret
pop
shlb
push
dec
mov
in
js
testb
cmp
cmp
les
push
and
or
mov
jbe
leave
xchg
and
and
aas
stos
movsl
inc
andl
in
in
add
cmp
ret
ds
push
ret
inc
mov
hlt
pop
pusha
pop
jmp
jae
xchg
cld
stc
dec
add
jbe
sbb
cmp
jmp
adc
test
and
push
adc
cs
mov
mov
mov
fs
insl
xchg
and
add
pushf
inc
xchg
sbb
icebp
jl
insl
sti
mov
int
xor
repz
xchg
flds
pop
jl
dec
outsl
mov
call
push
in
faddl
mov
mov
sub
jb
pop
cld
lahf
imul
clc
cmpl
popa
fldenv
fimull
push
mov
out
cmp
in
sbb
testb
inc
jge
daa
cmp
push
stos
push
and
cmp
pop
imul
push
scas
icebp
imul
aad
mov
outsl
sarb
rorl
out
jne
sbb
shll
lret
add
insb
cmpsl
cmp
xor
push
mov
mov
mov
mov
xor
dec
mov
jns
xor
mov
in
cmpsb
repnz
cmpsb
lcall
js
sti
add
ret
pop
jns
dec
icebp
lods
fists
xor
popa
in
inc
mov
lahf
or
es
rolb
and
inc
jae
scas
stc
xor
mov
xchg
sbb
cld
pop
rcll
inc
xor
lock
push
or
xor
repnz
sbb
xor
sbb
adc
mov
xchg
lds
adcl
sbb
fs
mov
mov
mov
jge
out
push
mov
shlb
or
jmp
je
sbb
pop
or
dec
xchg
pop
or
mov
jae
add
add
dec
mov
mov
sub
lcall
sub
fnstsw
mov
lcall
and
cmp
lahf
adc
adc
je
movsb
push
mov
lret
icebp
insl
test
cli
xor
fwait
mov
shl
mov
mov
inc
scas
lret
repnz
out
mov
and
pop
mov
mov
out
push
push
xor
es
scas
ds
pushf
xor
das
push
mov
js
cmp
ljmp
xchg
push
sub
cmp
repz
push
cltd
dec
cmc
dec
pop
mov
lcall
test
fwait
test
cmp
lea
rcrl
xchg
cmp
jae
call
sar
push
pop
scas
mov
xchg
inc
lret
push
scas
push
inc
outsl
and
cmpsb
or
jo
push
outsl
fwait
inc
or
aas
test
xchg
hlt
outsb
lcall
loop
inc
xor
das
jle
jle
push
ficomps
and
mov
addl
cmp
fdivrp
jo
jmp
jb
xorl
lret
mov
lret
fucomi
xchg
mov
pusha
and
cmp
adc
push
jl
nop
out
and
sub
sub
cld
cmpsl
je
std
adc
fs
ss
jg
lret
mov
mov
movsl
or
sbb
push
sbb
scas
mov
xor
sub
movsb
xchg
fldt
add
hlt
sbb
xorb
testb
inc
notl
movsb
push
or
xchg
xchg
push
lret
pop
andb
add
push
in
push
adc
or
mov
add
push
gs
lahf
lods
lock
icebp
xchg
dec
test
push
cwtl
and
inc
outsl
js
ja
push
pop
mov
notl
gs
adc
fsub
inc
arpl
mov
jmp
lret
jle
dec
xlat
adcb
js
incb
adc
sub
push
push
shr
adc
jns
pop
dec
aam
and
movsl
or
mov
add
fists
test
mov
dec
dec
andl
icebp
cli
mov
xchg
or
aaa
sub
lods
sbb
and
mov
or
adc
cmc
ja
dec
or
test
sub
or
out
or
sbb
gs
sbbb
mov
adc
jle
pop
xor
dec
xchg
pusha
sub
jg
les
lahf
jo
imul
daa
sarb
cltd
inc
shl
mov
sub
in
in
scas
dec
jle
jg
jbe
cmpsl
insb
je
pop
xor
fdivrl
das
scas
xor
pop
push
bnd
stos
movsl
xlat
sbb
das
dec
sub
std
insl
test
xchg
jb
jle
inc
mov
sub
ror
sar
xor
shlb
lods
push
fisttpl
push
lcall
adc
xor
repnz
scas
cmp
lods
mov
sub
jge
dec
or
fs
mov
jp
enter
jo
test
sub
or
cmovne
mov
mov
ja
ja
adc
push
add
jne
pop
add
ss
mov
aaa
or
jg
push
das
fimull
xor
adc
ret
addr16
xchg
sub
mov
insl
mov
cmp
mov
test
fwait
call
aas
sub
outsl
sbb
iret
ja
daa
fs
and
push
pop
faddl
mov
out
mov
test
das
dec
cmp
jl
pop
scas
push
bswap
jge
inc
rcll
push
arpl
sbb
mov
jmp
mov
icebp
daa
mov
gs
leave
sub
push
popa
push
xchg
std
notl
inc
pop
imul
inc
jl
cli
and
ret
out
into
or
stc
sub
and
sub
xchg
insl
sub
daa
or
aad
pop
out
adc
loop
inc
pop
sub
dec
popa
fdivl
rcll
enter
stos
cmpsl
sub
push
push
rorl
push
add
repz
clc
out
xor
jge
sahf
xchg
movsb
fdivr
push
iret
pop
jmp
lods
inc
mov
stos
push
shlb
mov
into
lret
outsl
push
fidivrl
shl
xchg
sbb
sbb
mov
cmp
adc
ljmp
sub
aad
les
and
out
mov
cmpsb
inc
inc
imul
or
test
jg
pop
gs
inc
in
outsb
aam
mov
call
push
mov
mov
inc
mov
stos
lahf
push
rorb
inc
loope
ss
iret
fwait
js
or
movb
int3
cwtl
in
lea
push
push
add
cmc
arpl
sbb
fs
ret
pushf
ljmp
xor
mov
mov
sbb
add
dec
dec
pop
ret
roll
adc
push
xor
sub
mov
mov
sbb
decb
sahf
mov
enter
mov
jle
dec
movsb
sub
repnz
je
jg
ss
lahf
cld
dec
mov
mov
dec
test
xchg
jnp
lods
pop
push
ljmp
xor
inc
imul
movb
mov
outsl
xchg
sbb
lock
out
clc
cmpsb
outsb
push
mov
fmuls
mov
bound
sar
jne
out
xor
pop
push
mov
lods
ret
mov
sub
shrb
push
jns
xchg
test
xor
or
loopne
out
jmp
lahf
and
or
outsl
sub
out
xchg
bound
ret
push
lods
mov
push
xor
and
pop
sbb
add
lock
cmp
and
adc
scas
icebp
cmc
push
pop
pop
sub
pop
mov
mov
mov
fdivrs
mov
mov
add
fsubs
cmpsl
orb
inc
fdivrs
jae
scas
cmp
not
in
sub
cmp
fnstsw
adc
std
mov
inc
dec
fnstenv
inc
mov
sbb
cli
xor
jp
cmp
ljmp
fwait
aam
add
imul
popf
jmp
add
jne
pop
mov
lock
ss
add
notl
movsb
mov
cmp
jg
js
clc
dec
mov
jo
imul
mov
aaa
or
push
mov
cli
stos
fdivr
xchg
and
jns
and
inc
popa
fs
mov
push
add
mov
fadds
dec
adc
push
dec
cmp
add
pushf
and
and
xor
push
in
inc
mov
and
mov
stos
mov
insb
int3
xor
xchg
dec
inc
in
adc
add
gs
lds
xchg
inc
adc
adc
jecxz
into
mov
cmp
push
pop
cwtl
mov
pop
and
mov
je
nop
pop
inc
shll
inc
jbe
and
sub
pop
add
dec
dec
mov
jmp
jecxz
xchg
fsubr
test
inc
outsl
data16
int
jge
lds
enter
xor
imul
pop
test
push
stos
add
std
xor
xor
in
sbb
inc
inc
in
stos
mov
mov
inc
push
sub
sti
push
pop
iret
lods
push
test
mov
ror
inc
xchg
sub
jg
push
cs
xor
mov
sbb
and
outsl
in
jns
mov
pop
push
dec
clc
out
mov
mov
mov
push
insl
add
lahf
clc
stos
xchg
adc
dec
jnp
sarl
mov
pushf
xchg
sbb
jns
push
xchg
sbb
mov
jecxz
jge
pop
add
jg
pop
mov
fstl
pop
insl
stc
mov
inc
sbb
insb
jp
ds
jns
mov
icebp
push
pushf
pop
imul
nop
sbb
test
mov
pop
sbb
mov
sbb
mov
enter
loope
mov
rorb
and
mov
sbb
jo,pt
xchg
mov
inc
out
dec
mov
push
xor
jne
dec
cmp
je
dec
scas
sar
and
dec
mov
xor
or
cs
jmp
jno
cmp
sub
sbbl
int
jnp
pop
dec
movsb
and
and
lods
jecxz
out
mov
mov
sub
sbb
push
add
push
lret
gs
imul
jnp
mov
std
add
dec
sbb
sti
xchg
sbb
mov
cltd
cmp
lods
test
mov
aas
loop
lcall
outsl
mov
adc
inc
sti
jmp
xor
rorl
pop
pop
shll
pop
add
stos
sarl
gs
pop
cmp
ja
lahf
and
pop
insb
push
mov
mov
fistpll
rcrb
cmpsb
aad
mov
mov
inc
xor
movsl
mov
rcrb
mov
test
jl
lods
nop
jp
dec
push
insl
adc
xchg
jle
xchg
loopne
loope
das
out
mov
mov
leave
outsl
or
or
imul
jo
cmc
xor
jge
sub
and
dec
mull
sub
mov
dec
mov
sbb
cwtl
mov
fmuls
xchg
outsl
inc
dec
mov
mov
in
jl
push
jg
inc
inc
lock
test
movsb
jne
sahf
test
repnz
or
lcall
shll
and
jle
jno
movsl
inc
or
mov
and
aam
iret
cmc
push
aaa
mov
or
out
and
or
in
sbb
xchg
data16
jmp
xchg
shlb
icebp
jne
cwtl
in
shlb
decb
cmovs
jl
imul
iret
es
inc
jmp
xchg
fistl
popa
and
and
fidivrs
aad
sbbl
lahf
push
orb
stos
bnd
fs
jp
and
adc
fcompl
outsb
inc
daa
adc
add
lcall
pop
cmp
lock
cmpsb
shll
andb
push
out
sbb
and
ljmp
sub
nop
jae
push
lcall
push
out
push
push
pop
mov
nop
call
sub
rorb
call
dec
jle
pcmpgtw
xchg
mov
mov
sub
cmp
movsb
sub
mov
jge
inc
mov
pop
xor
clc
jge
rcrb
jmp
movsb
add
lds
stc
rclb
and
jb
repz
ficoms
call
cli
dec
mulb
and
outsl
push
faddp
sahf
mov
jp
jmp
test
inc
xchg
sahf
and
fcmovu
js
mov
fbld
mov
ficoml
dec
fistl
mov
add
push
repnz
sahf
fldcw
jbe
adc
in
or
jge
cmp
sbb
movsl
cmc
aas
aaa
clc
xchg
sub
out
mov
sbb
call
xor
icebp
add
sub
fisubrl
ds
inc
dec
test
aas
mov
sub
outsb
pop
adc
dec
call
fxch
aas
or
xor
cmpsb
xchg
mov
mov
xor
xchg
std
inc
xchg
nop
push
int3
jns
rcll
jns
pop
mov
jns
test
mov
mov
sub
push
push
cltd
loope
jnp
push
lahf
scas
jne
lods
sbb
negl
xor
jmp
rol
cmpsl
adc
mov
sbb
hlt
adc
adc
pushf
lods
daa
sub
push
aam
pop
aas
dec
lahf
jb
loopne
test
clc
sarl
imul
daa
dec
cli
popa
shrl
insb
lods
xor
push
push
cmp
mov
movsl
std
popa
mov
or
pop
add
std
jo
xchg
xor
test
cmp
xor
dec
mov
add
shrl
push
cwtl
pop
mov
pop
cmp
mov
daa
push
test
inc
mov
popf
xor
pop
inc
out
shl
rolb
push
vaddsubps
adc
or
mov
shl
dec
mov
iret
std
fadds
jbe
xchg
in
dec
inc
cmp
shll
loop
pushf
fcmovne
imul
pop
xchg
imul
mov
xchg
and
stos
cli
repz
out
in
stos
add
lds
jae,pt
lds
xchg
js
jae
jne
jg
or
pusha
cmp
jmp
sbb
cltd
inc
add
cmpsl
adc
jnp
mov
into
out
imul
dec
sbb
lock
loopne
or
xor
outsl
stos
add
push
scas
or
dec
and
ja
adc
rorb
xor
sbbb
lds
cwtl
pop
or
push
pop
out
js
mov
mov
xor
lods
push
cmp
outsl
mov
fmul
jnp
push
pop
fwait
loopne
sbb
mov
adc
repz
mov
ror
jmp
xchg
in
divb
xor
jecxz
jmp
sti
mov
int3
iret
pop
sbbb
pop
inc
xor
imul
mov
xor
aas
xor
das
mov
jp
mov
mov
outsb
mov
push
push
mov
xlat
xchg
mov
cmp
lea
sub
in
into
or
mov
xchg
mov
and
pop
xor
cmpsb
cmpsl
sub
mov
in
nop
arpl
inc
add
push
add
mov
sahf
mov
adc
cmp
xchg
dec
fisubs
inc
pop
aad
xchg
mov
xchg
push
adc
cmpsl
fdivr
stos
icebp
xchg
into
int
pop
shrb
fidivs
jg
pop
push
icebp
scas
outsl
xchg
or
into
ja
fistl
xchg
cmp
int
jmp
xchg
push
fsubs
shll
outsl
nop
dec
fisubs
sub
lock
mov
adc
pop
inc
insb
popa
jns
jg
cmp
dec
pop
sub
jg
jecxz
inc
mov
xor
cli
dec
flds
pop
mov
push
ja
inc
jp
push
inc
bsr
inc
ret
cmpsb
mov
xor
inc
lock
test
bound
sub
mov
js
push
pop
xchg
xor
pop
clc
mov
mov
nop
adc
push
and
test
pop
notb
jp
cmp
mov
daa
mov
push
sbb
rcrl
inc
stos
xor
mull
ljmp
push
mov
jmp
ficoml
inc
inc
cmp
xchg
enter
or
mov
and
push
adc
addr16
or
les
clc
das
mov
dec
shll
push
mov
pop
hlt
xor
push
pop
push
in
xor
flds
lock
jb
dec
and
xlat
push
xor
pop
push
scas
es
aam
mov
scas
insb
icebp
inc
lods
lds
mov
and
push
into
in
jbe
cmp
cmp
shrb
add
inc
add
jp
mov
xor
xor
mov
jp
mov
lret
mov
and
xor
iret
lock
pop
mov
mov
pop
mov
enter
sub
sub
mov
in
cmp
mov
xchg
test
pop
shr
mov
pop
sti
xor
out
stos
cmp
pop
jae
push
fcmovne
les
jno
add
inc
xchg
dec
and
ficoml
sar
shlb
push
xor
lahf
scas
inc
fsubrs
add
mov
sahf
sbb
scas
and
jbe
mov
jo
ret
pop
fs
insl
lea
sub
add
dec
mov
add
imul
subl
push
pop
or
mov
jge
test
xor
sbb
sahf
jl
xor
lods
loopne
jae
nop
repz
pop
call
outsb
mov
push
icebp
mov
add
cli
bound
movsb
std
divl
into
cmp
mov
pop
pop
mov
shlb
repz
mov
pop
jmp
out
push
addr16
lods
les
gs
jne
filds
sbb
jg
jnp
leave
adc
arpl
es
shll
aaa
cmp
sub
and
ss
call
lods
fwait
icebp
mov
lret
fcomps
dec
cmp
dec
mov
add
shl
mulb
adc
in
sbb
dec
push
xchg
xor
dec
xor
xor
dec
xchg
mov
mov
mov
cmpsl
ficoms
sbb
and
xor
add
sub
sbb
fcompl
aas
dec
cs
pop
pop
xor
out
mov
push
sub
imul
pop
sbb
fistpll
push
hlt
and
mov
dec
ja
ret
inc
pop
mov
aaa
push
pop
sti
xor
filds
shll
cld
sti
rclb
in
arpl
outsl
outsl
cmp
aaa
outsb
mov
push
fdivrs
in
movsb
mov
scas
push
add
int
adc
pop
and
jae
mov
sbb
int
pop
stos
fdivr
inc
mov
sbb
jmp
jmp
stos
add
pop
stos
add
push
xchg
inc
push
lahf
mov
scas
leave
inc
rcr
jmp
xor
int
nop
test
imul
call
out
out
push
mov
sbb
mov
fwait
mov
outsl
lds
addr16
imulb
daa
loope
sbb
pop
sub
mov
test
int3
cld
lods
and
dec
sbb
adc
and
lds
cmpsb
data16
data16
out
mov
shlb
jg
cltd
addr16
lahf
cmp
lcall
sbb
inc
testl
pop
jae
push
or
and
jge
mov
dec
pop
stc
mov
rcll
inc
popf
popf
sbb
jo
jns
xor
mov
add
jo
das
adc
repz
xor
sub
mov
mov
icebp
pop
shll
iret
pop
dec
sub
lods
insl
mov
ja
hlt
sub
mov
lods
stos
ret
pop
mov
inc
fnstcw
iret
jns
pop
pushf
pop
out
ret
xchg
rclb
pushf
mov
sbb
mov
adc
dec
cmpsl
jge
aaa
jae
test
lret
inc
mov
jbe
mov
adc
subb
les
mov
jl
shlb
rcrb
sub
int
loope
lea
or
mov
cli
in
enter
jge
xchg
cmp
xabort
lcall
outsl
add
and
fsubrl
push
mov
cmp
loope
inc
out
push
cmpsb
adc
test
cli
mull
jns
out
adc
adc
sahf
imul
fadds
pop
lcall
jae
mov
shr
aaa
xchg
mov
cmpsl
iret
add
add
pop
pop
cli
icebp
pop
mov
fcmovb
add
xrelease
push
push
mov
loope
or
dec
mov
test
inc
cs
repnz
lret
xchg
mov
lcall
dec
movsb
scas
inc
sti
jle
into
into
or
pop
and
sbb
stc
dec
ss
add
fsubrs
and
jb
dec
cmp
lds
adc
cmc
or
psrad
pop
xchg
in
push
sub
test
xor
addr16
stos
lcall
loop
test
adc
push
add
fadd
pop
pushf
sti
addl
roll
xor
xchg
mov
jne
mov
or
push
divl
out
push
imul
mov
or
mov
xor
fs
inc
mov
daa
popf
cli
fimuls
inc
add
cmc
dec
jnp
push
xchg
dec
data16
rcrb
into
pop
and
pushf
test
cmpsb
jmp
xor
adc
sub
jnp
mov
int
jl
es
mov
pop
cmp
pop
pop
xor
and
je
call
in
out
inc
adc
fwait
lods
adc
icebp
jo
xchg
sbb
pop
scas
or
aam
sub
in
cs
ljmp
out
lds
and
out
out
jae
pop
imul
fsubrp
dec
lahf
adc
daa
pop
xor
out
cmp
or
or
fsubrs
jnp
add
mov
add
or
sub
xchg
pop
dec
lds
push
aaa
int3
fwait
mov
jg
les
test
cmp
incl
out
fwait
mov
imul
mov
push
cmp
inc
je
sbb
or
mov
dec
jp
js
inc
inc
push
mov
inc
aas
push
out
or
push
in
and
ret
int
cmp
inc
xchg
loopne
mov
cs
lret
dec
push
ficompl
and
stc
outsb
dec
hlt
data16
or
dec
cmp
addr16
xchg
shlb
scas
repz
cltd
or
enter
inc
xchg
popf
outsl
xchg
dec
dec
stc
push
test
lea
mov
sub
mov
push
sub
cld
popf
dec
inc
mov
pop
cmp
push
addl
ss
sub
cmp
out
and
out
enter
dec
add
cmp
ljmp
cmp
jle
and
push
dec
pop
push
push
mov
or
popa
lock
push
notl
fs
imulb
sbb
out
clc
mov
pop
jo
test
aaa
xor
mov
push
in
push
xchg
lea
xchg
sub
repnz
mov
pusha
mov
mov
mov
mov
xchg
jl
jg
jae
scas
jo
push
jbe
xor
mov
or
loopne
add
icebp
sbb
push
popa
out
test
ljmp
ss
fimuls
les
dec
sti
aam
lahf
cmp
or
aaa
les
popf
loope
stos
jmp
out
rcrl
cmp
leave
sbb
jmp
push
xchg
adcl
sub
dec
ja
cmpsl
lret
mov
xorb
dec
stc
nop
aad
push
mov
jp
sahf
rcr
test
inc
out
cmp
js
insl
es
adc
mov
inc
xchg
icebp
push
mov
jo
cmp
adc
cmpb
je,pt
dec
mov
fsubrs
in
jae
stc
pop
adc
or
jmp
push
mov
es
imul
pop
loop
or
fsubr
sar
fs
inc
jb
imul
xor
push
stc
jns
add
xlat
or
aam
outsb
sti
daa
outsb
jno
xchg
gs
inc
push
mov
xor
jnp
pop
xchg
repnz
gs
push
cmpsl
push
cmp
outsl
mov
inc
fldcw
mov
das
sub
enter
lcall
repz
inc
std
sub
cld
jnp
add
mov
pop
je
repnz
pop
adc
and
mov
xchg
pop
xor
mov
add
cmp
mov
jle
adc
subb
sub
cs
iret
inc
and
adc
jb
cmp
test
cmpb
mov
icebp
jo
and
cmp
out
xchg
aaa
sub
fsqrt
dec
jp
xchg
mov
xchg
mov
fld
pop
pop
ljmp
cmp
cmp
mov
push
mov
jg
inc
jo
aam
scas
mov
scas
ja
xchg
bound
in
cmp
aam
aaa
leave
lcall
outsb
push
icebp
push
roll
fstl
adc
mov
push
in
inc
out
add
cmpb
dec
push
cmp
icebp
std
ds
je
out
sbb
pop
imul
jge
push
pop
aas
test
push
push
mov
and
movsl
fidivrs
push
lods
ret
pop
sub
mov
push
lods
fbld
iret
das
jge
fsubr
icebp
leave
and
mov
xor
movl
push
adc
cmpl
jno
out
cmc
push
inc
mov
pop
sti
cmp
test
ljmp
mov
mov
imul
mov
loop
sbb
sahf
add
lods
mov
adc
jnp
out
lods
sti
mov
js
and
nop
jmp
pop
fiaddl
cmp
mov
xor
mov
pop
push
sbb
pop
daa
es
cwtl
mov
scas
mov
stc
pop
mov
push
or
movsl
or
addb
or
push
subl
push
sub
add
xchg
inc
arpl
xorl
dec
jp
test
or
dec
cld
mov
mov
add
xorl
mov
loop
fcoml
mov
pop
pop
add
rorb
mov
xor
jb
cli
iret
sbb
mov
mov
iret
cmp
and
xchg
pop
push
pop
test
cwtl
mov
out
xchg
icebp
iret
jbe
jecxz
das
xor
and
mov
xor
adc
loope
insb
push
xchg
jecxz
repz
out
dec
iret
rcr
and
sti
xchg
add
xor
mov
subl
xlat
xchg
pushf
xchg
push
out
dec
aad
xor
pop
into
adc
ja
int
mov
popf
rorl
pop
pop
pop
pop
cmp
aas
jp
sahf
adc
lret
popa
xor
into
aaa
and
hlt
inc
or
push
xchg
mov
or
push
xchg
or
mov
lock
xchg
jo
lock
push
sarl
or
ror
mov
add
jmp
xor
push
stos
sarl
xchg
cs
out
push
movsb
push
jmp
sub
cmp
stos
xchg
movsb
cmp
inc
mov
mov
push
cmp
pushf
in
jge
sete
add
cltd
mov
pop
dec
inc
pop
jp
mov
mov
sbb
push
outsl
lret
lahf
jno
jge
lret
jnp
cld
jecxz
ffreep
std
out
mov
pop
mov
jg
jge
cmp
dec
push
in
arpl
and
and
inc
aad
bnd
stos
movl
inc
decl
mov
fbstp
mov
add
push
mov
mov
push
dec
inc
mov
xlat
lds
sub
and
or
ss
lret
inc
push
roll
popl
loope
mov
add
sub
pop
and
inc
and
sbb
and
dec
or
sahf
adc
shl
cmp
jno
or
and
stos
lods
jne
or
xchg
sub
out
inc
loopne
stos
mov
enter
sub
popf
test
lahf
cmpsb
dec
fsubrs
ds
rcll
je
xor
push
adc
negl
movsl
cltd
leave
nop
adcl
push
xchg
push
lock
in
and
out
fsubrl
sahf
pop
aas
or
pop
loope,pt
aas
sub
cmc
outsb
mov
mov
push
movsb
lret
hlt
in
ljmp
addr16
inc
pop
popf
sub
cmc
insl
sub
xchg
and
enter
cmp
push
imull
sbb
cmpsb
xchg
mov
dec
sbb
icebp
push
jp
fwait
insb
push
movsl
inc
mov
xor
fsubs
lcall
or
aas
lret
inc
xlat
sbb
xor
ret
pop
push
adc
mov
push
cmp
cmc
test
mov
xchg
movsb
jp
stos
jae
repz
pop
fucom
jle,pt
sbb
int3
data16
xor
and
cmp
xor
xor
jnp
jno
push
or
out
xor
ss
je
addr16
sahf
push
jae
in
dec
imul
lahf
sbb
sbb
ds
lds
ja
out
fidivrs
stc
stc
pop
sbb
mov
insb
pop
mov
arpl
xor
int3
sub
stos
cmpsl
dec
xor
or
xchg
push
and
lods
push
imul
pushf
decl
and
xchg
xor
pop
pop
sbb
lea
sti
mov
je
xor
lods
dec
inc
xchg
and
insb
fwait
cli
in
jbe
pushf
jl
and
lds
das
xchg
adc
roll
enter
je
xchg
test
and
cltd
dec
dec
outsl
lods
jnp
push
inc
test
adc
rcll
cwtl
rolb
mov
dec
adcl
xor
add
or
les
in
mov
cmp
lahf
lods
daa
pop
push
xor
jle
addb
mov
bound
dec
xchg
aas
in
sub
ljmp
jo
inc
push
lcall
mov
clc
test
pop
ficoml
xchg
dec
stos
jns
jnp
in
pop
cmpsb
pop
inc
loope
or
inc
cmp
mov
cmpsb
arpl
pop
test
mov
cltd
xchg
mov
lods
jl
call
jl
mov
xchg
jo
loope
xor
int
xchg
stos
push
cli
sbb
inc
js
lods
fldl
xor
in
mov
sub
xchg
pop
hlt
and
nop
aad
out
add
call
lds
in
push
iret
pop
iret
mov
push
or
xchg
iret
jmp
sbb
fstp
and
dec
ffree
sub
fst
pop
or
lods
das
jecxz
les
in
mov
pushf
jecxz
jnp
push
int
insb
sti
ret
inc
sub
adc
jne
repz
mov
sub
fwait
inc
addr16
pop
jmp
or
or
out
in
lods
sbbl
jge
add
scas
cltd
adc
mov
int
inc
and
jnp
cmp
ud0
cmc
popa
mov
dec
scas
fildll
xchg
test
cwtl
jae
xchg
mov
adc
out
pop
insl
test
in
in
and
inc
popa
nop
cmpsb
rol
insl
inc
repz
mov
dec
push
pop
frstor
pop
pop
stos
pop
aas
repnz
cmp
or
inc
mov
mov
cmp
sub
dec
xlat
dec
push
scas
pop
xchg
and
mov
cmpsb
pop
inc
negb
movsl
and
push
jb
mov
sbb
mov
dec
xchg
cmpsl
add
mov
jge
stc
and
les
das
test
decb
stos
lods
scas
dec
sahf
and
dec
pand
add
jmp
lods
push
out
xor
xchg
mov
decl
adc
ja
lret
xchg
ljmp
mov
and
aam
aaa
jns
arpl
pop
jmp
cmp
icebp
ret
stos
fsubl
add
test
mov
loope
cmpsb
int
xor
or
call
mov
das
jno
cs
dec
fistps
mov
stc
xchg
mov
cli
test
dec
mov
cmp
repnz
lret
xchg
in
adc
je
xlat
sbb
cltd
das
add
cmpsl
pusha
xchg
sbb
dec
sti
sbb
clc
mov
ljmp
xchg
jne
js
enter
sbb
xor
ret
cmp
fidivrs
mov
push
mov
ljmp
bound
inc
xor
and
cmp
jle
lea
dec
js
divl
notb
inc
fdivs
mov
push
or
aas
daa
sub
lea
mov
in
mov
pop
pop
or
push
je
xor
push
dec
out
cmp
or
jp
out
xchg
scas
outsb
loop
insl
jne
mov
cmp
outsl
int3
xor
sub
mov
loop
jecxz
fstl
push
sbb
test
ljmp
xchg
movsb
adc
lcall
pop
pop
mov
or
test
jge
mov
test
xor
sub
or
sbb
int3
and
hlt
arpl
imul
pop
mov
test
push
cmp
jns
adc
jnp
sbb
sti
cmc
jecxz
gs
adc
into
pop
lahf
ret
int3
pop
xor
xchg
insl
xrelease
sbb
aad
ja
stos
pop
inc
and
int3
push
add
imul
jmp
mov
pop
ror
mov
jg,pt
jmp
mov
fildll
inc
loope
cmp
aaa
in
dec
out
jae
inc
outsl
adc
push
mov
mov
xchg
jp
push
inc
out
sbb
cmpsb
push
hlt
pop
mov
shrl
jmp
in
sahf
xchg
cld
aad
outsb
das
rcll
and
mov
mov
test
jecxz
jnp
fisttps
and
xchg
push
fidivrl
lcall
mov
push
out
pusha
addr16
jo
iret
push
aaa
lods
xchg
cmova
lods
lods
add
ret
inc
pop
xor
in
arpl
scas
push
xchg
push
pop
lea
mov
push
xchg
addl
repz
notw
rol
aad
mov
lahf
rorl
mov
dec
daa
lock
mov
mov
fcompl
ret
push
push
cmp
loop
bound
addr16
xchg
mov
jb
dec
mov
mov
jae
cli
or
inc
mov
mov
scas
out
mov
idivl
cmpsb
popf
mov
loope
in
fistpl
lahf
ljmp
fiaddl
xor
outsl
jno
pop
ffree
sub
push
push
pop
fucom
pop
xorb
js
aas
inc
aaa
fcoml
push
es
testl
adc
or
inc
jnp
lret
insb
cmp
mov
add
xor
mov
ror
mov
pop
sbb
mov
test
adc
les
repnz
jae
dec
sti
ds
pop
push
movl
shl
pop
test
in
out
test
mov
jge
dec
js
pop
or
sub
mov
rclb
aaa
int3
lods
cmc
in
mov
inc
cltd
fisttpl
pop
lcall
pop
xchg
mov
fstpl
ss
ret
sub
pop
mov
mov
add
ret
andb
lcall
ss
and
inc
and
aam
pop
sub
mov
sbb
dec
iret
fldenv
popa
test
mov
sbb
sub
call
adc
movsb
lods
popa
lcall
sbb
sub
mov
inc
pop
lret
sub
fisubs
pushf
les
cmpsl
sub
jnp
lret
scas
jno
inc
bound
insb
test
out
inc
cmp
jo
cmp
cmp
dec
fnstsw
push
outsl
pop
int3
mov
test
inc
inc
enter
push
pusha
xor
adc
xor
jmp
mov
xchg
insl
adc
xor
jo
lods
xor
or
je
stc
jmp
xor
jb
fisttpll
loope
cmp
pop
in
fildll
scas
fcmovb
adc
xor
push
rorb
push
icebp
shlb
bound
aas
test
lock
into
hlt
or
lods
mov
nop
xchg
rclb
fidivs
rorl
cmp
fisttpll
insb
fldenv
cmp
outsl
cmp
mov
mov
jnp
into
pop
movsb
out
int
sbb
dec
jmp
in
ljmp
dec
out
mov
mov
nop
test
test
imul
xor
xor
lret
and
sbb
out
push
les
dec
andl
scas
jns
push
adc
imul
repz
inc
aam
jne
mov
jecxz
inc
push
lret
push
out
or
adc
push
jb
xchg
mov
xchg
xor
dec
nop
loop
stos
push
dec
ret
fsubp
mov
push
sbb
movsl
mov
cmp
lea
sbb
xchg
mov
push
jl
jne
lea
push
rolb
sub
xor
aad
dec
nop
cmpsb
xor
or
inc
xchg
ret
out
ret
mov
dec
ds
loope
ds
hlt
sar
and
or
je
add
push
mov
dec
push
pop
mov
iret
mov
push
push
mov
pop
sahf
mov
inc
in
or
xor
push
repnz
pop
sti
pop
cmp
in
popa
xlat
mov
sbb
pop
dec
xor
fnstenv
xchg
lock
lret
clc
fisubs
clc
and
push
mov
fisubrs
mov
jae
mov
jge
and
lock
adc
and
lea
pop
out
mov
ss
bound
sub
sbb
jl
pop
push
dec
push
shrb
sbb
stc
enter
out
dec
loop
mov
pop
or
cmp
or
lea
jmp
dec
dec
cmp
dec
add
bound
adc
cmp
lcall
mov
dec
sarl
pop
adc
lret
ljmp
enter
mov
push
gs
nop
pop
adc
out
lahf
mov
xchg
or
pop
mov
movsb
inc
call
xchg
ror
cmp
lahf
and
ljmp
stc
outsl
dec
call
cmp
scas
fistl
das
call
imul
mov
mull
xlat
mov
repz
je
add
pop
mov
cmovb
sbb
push
adc
ljmp
jg
in
in
adc
lahf
pop
jmp
jl
stos
adc
add
jmp
mov
mov
in
cltd
notb
and
imul
sub
sbb
inc
negl
mov
or
sub
inc
mov
call
dec
aad
lret
enter
push
xchg
cld
lahf
mov
movsb
adc
or
pushf
es
icebp
push
mov
into
test
sti
mov
movsb
sbbl
lcall
mov
adc
scas
lret
push
mov
mov
imul
xor
and
dec
test
cmp
sahf
negl
dec
mov
mov
incl
add
xlat
pop
cltd
xchg
rcrb
hlt
sub
into
and
fwait
push
stos
mov
cli
ss
divb
mov
sbbb
mov
mov
push
fsin
mov
xchg
std
insb
lock
mov
es
cwtl
es
or
aam
or
lock
pop
sti
stos
outsl
int3
adc
mov
in
lret
imul
lcall
mov
into
mov
in
jb
jge
mov
sub
leave
jo
outsb
ds
mov
arpl
fwait
and
fs
mov
pop
add
sub
xchg
mov
sti
cmpsb
sbbb
je
movsb
and
fld
insl
cwtl
inc
repz
and
cs
push
pop
lds
outsb
or
dec
in
push
rclb
pop
dec
in
jbe
inc
mov
xlat
cwtl
mov
sub
xor
pop
lds
leave
ret
movsl
outsl
jecxz
or
test
sbbb
test
adc
sbb
mov
repnz
push
pop
mov
mov
xchg
cmp
lret
cmp
sub
mov
add
and
mov
jae
push
lcall
enter
call
js
cli
push
mov
cmpsb
mov
xor
mov
mov
cs
sub
or
mov
fwait
inc
subb
imul
or
mov
cld
pop
jl
push
daa
data16
mov
xchg
arpl
cs
fwait
aam
adc
rcr
mov
leave
dec
and
mov
jmp
nop
jge
mov
pop
push
and
mov
cmp
sarb
icebp
ja
xchg
xchg
jmp
aas
ja
jle
mov
mov
jge
sub
pop
inc
or
push
add
lret
sahf
sub
scas
and
jmp
mov
push
lods
jno
jno
mov
xchg
sub
pop
sahf
inc
adc
push
pop
cmp
es
cmp
inc
cmp
sub
mov
push
imul
repz
pusha
lcall
jmp
xchg
bound
stos
outsl
sub
xchg
aaa
outsb
add
lods
pop
mov
lahf
rorl
enter
adc
inc
shr
in
cmp
pop
fadds
adc
jns
call
lahf
push
stc
lret
les
and
xchg
inc
int
loope
test
cmp
mov
sub
cmp
xor
ljmp
add
das
scas
jno
in
and
sbb
arpl
push
lods
inc
pusha
or
jl
inc
cmp
pop
mov
fucom
out
insl
loopne
jns
xor
or
adc
add
jno
pop
sub
xorl
repz
push
xchg
push
out
and
cmp
add
or
mov
or
mov
popa
iret
sti
dec
fisttps
imul
pop
xor
push
mov
pop
bound
cmp
orb
or
repz
mov
rcrl
cmp
xor
cs
incl
js
xchg
add
popf
add
mov
cwtl
test
adc
cmp
push
sar
lret
loop
in
push
loopne
push
pop
xchg
xor
sbb
lcall
and
mov
addr16
adc
inc
gs
jne
jmp
sbbl
dec
ja
jmp
mov
repnz
sub
stos
out
push
test
aam
dec
scas
cld
mov
cld
test
lods
mov
pop
jmp
and
push
mov
sar
std
jns
stos
sbb
insb
sahf
add
sub
pop
inc
sub
xor
scas
lds
or
mov
aaa
test
sar
scas
loope
xchg
cmp
jbe
sub
mov
push
fidivs
jne
push
mov
sub
rcll
cmc
in
mov
shlb
xchg
jae
mov
pop
pop
xlat
pop
ret
mov
cs
dec
pusha
sti
dec
sbb
lds
sbb
popa
pop
mov
enter
clc
movsb
cmp
push
mov
inc
js
pop
pop
pop
stos
pop
xor
xchg
stos
and
push
sub
popf
insb
mov
nop
fisubl
mov
fwait
xchg
mov
sahf
les
enter
mov
enter
cmp
sbb
fsub
pop
xor
dec
stos
dec
pop
insl
dec
lods
sbb
test
dec
fistpl
cmpsb
insb
mov
adc
push
jle
test
imulb
arpl
daa
inc
sbb
mov
sub
or
cltd
mov
fimuls
mov
cltd
and
mov
pop
mov
pusha
lahf
push
loop
sbb
add
lock
push
jge
es
in
sub
aad
aam
jne
lods
cmpb
xor
test
divl
push
mov
jl
mov
lock
stos
jo
cld
inc
pop
xchg
or
mov
icebp
push
xchg
dec
out
adc
or
adc
xchg
mov
imul
push
inc
call
dec
mov
cmp
push
cmp
ror
jle
ret
lods
cmp
ss
mov
test
test
or
xor
flds
or
sti
mov
sub
in
test
std
cmp
fdivrl
loopne
pop
das
adc
and
daa
call
addr16
push
mov
cli
sub
or
fs
sti
dec
outsl
inc
mov
in
xor
sti
jno
mov
popf
mov
lcall
sbb
mov
mov
jg
pop
pop
sbb
jecxz
push
jecxz
jmp
cmp
out
lret
test
cmpb
push
xchg
mov
cmp
fdivs
add
fistps
mov
jb
andb
mov
fdivr
clc
cmp
arpl
ret
inc
addb
pop
fucom
lea
inc
dec
inc
jno
sub
outsb
shl
loope
imul
pop
jl
push
stos
mov
ss
out
sub
std
mov
jne
arpl
ss
and
inc
fdivs
cmp
sub
xchg
pop
xchg
jnp
ret
inc
mov
add
cld
jbe,pt
jle
push
mov
cli
mov
ljmp
fwait
inc
xchg
pop
repnz
fmull
cmp
cli
repz
push
adc
cmpsl
jbe
pop
into
or
fistps
push
mov
jge
or
adc
cmp
mov
test
mov
sti
push
mov
dec
sub
rcl
addr16
es
push
mov
adc
cmp
nop
pop
dec
jl
lock
jo
iret
aad
sti
enter
bound
add
sbb
iret
into
dec
clc
xchg
sub
mov
jbe
pop
aas
jne
sbb
mov
repz
sbb
jbe
stos
pop
jge
testl
cmpsl
out
xchg
es
aas
xchg
sub
sbb
pop
adc
dec
filds
in
es
repnz
or
notl
dec
mov
add
dec
clc
inc
rcll
nop
cld
mov
into
jp
push
sub
iret
popf
in
and
mov
dec
lahf
dec
ja
test
jnp
jno
xor
ret
xchg
lret
jecxz
jne
jg
in
inc
ss
jo
into
mov
stos
rclb
inc
and
cmp
jle
pop
sbb
or
mov
stc
cltd
sbb
jbe
std
jl
add
in
inc
dec
or
cmc
inc
sahf
jo
cmc
enter
sti
incl
jae
hlt
adc
fstl
pop
push
push
mov
into
cmp
cmpsl
sub
arpl
jmp
dec
pusha
cmpsb
imul
or
ror
cs
or
push
pop
das
push
stos
jbe
mov
jo
cmp
mov
jo
in
pop
cli
sbb
int3
mov
and
roll
or
xchg
pop
lcall
jmp
sar
loopne
jg
sub
shll
sbb
mov
sbb
dec
sbb
mov
cmp
dec
jnp
stc
jmp
fidivs
std
push
push
testl
cmp
mov
setno
loopne
pusha
iretw
fwait
mov
stos
mov
pop
sub
rolb
ret
negb
mov
sbb
xchg
push
stos
mov
sbb
lret
je
mov
jecxz
add
and
cmp
push
lea
or
mov
movl
cld
push
aaa
adc
sarl
in
and
pop
xchg
lret
or
shl
xchg
xchg
ljmp
cmp
sub
cwtl
cmpsl
nop
xchg
fs
aas
je
in
pop
or
ret
lcall
push
clc
and
sub
mov
ja
dec
dec
pusha
or
xlat
loopne
imul
sub
rolb
jl
in
sbb
pusha
leave
cmp
push
dec
mov
mov
pop
call
stos
jg
inc
into
pop
add
xchg
sub
inc
jns
mov
cwtl
sbb
mov
out
xor
cmp
out
rorb
jp
mov
gs
jmp
xchg
test
aad
icebp
push
adc
cld
sbb
push
test
repz
xor
iret
adc
int
mov
jecxz
xchg
imull
jne
add
and
push
int
repnz
jo
lea
add
jmp
sub
push
sub
insl
out
cwtl
pop
pop
lcall
inc
mov
in
push
mov
push
ljmp
lods
imul
jo
ljmp
mov
dec
popf
arpl
lahf
fst
fstpt
std
sub
repnz
xlat
fxch
sti
in
scas
cmp
jb
push
push
jecxz
cmp
and
jle
and
cld
int3
jae
xchg
mov
and
pop
js
rclb
add
adc
es
ds
dec
pushf
inc
or
adc
aaa
icebp
cmpsl
sti
sbb
mov
fcmove
aad
and
mov
mov
es
push
dec
mov
sbb
lds
negl
iret
mov
mov
fisubrl
mov
push
jmp
dec
insl
lcall
sbb
or
scas
mov
or
fldl
cs
clc
mov
push
mov
movsb
cmp
jmp
mov
mov
add
jbe
sar
mov
mov
cld
inc
mov
pop
sub
cld
xchg
icebp
or
jb,pn
xchg
sub
mov
cmp
mov
ret
fs
mov
xchg
mov
push
aas
inc
lahf
jno
fstpl
aaa
cli
into
mov
inc
mov
cmp
js
jb
sub
dec
cmp
push
push
test
mov
int
mov
mov
into
inc
pop
sahf
jo
pop
add
inc
out
sarb
in
jle
or
sbb
mov
in
sbb
sarl
addr16
lods
out
sbbb
dec
push
sbb
das
test
sahf
dec
xor
jne
pusha
pusha
pop
pusha
movsl
loope
bound
jbe
jo
push
lret
and
aaa
lret
insb
dec
jmp
repnz
push
sub
jp
jo
dec
imul
xchg
lea
mov
mov
xchg
dec
nop
dec
mov
jmp
adc
scas
xchg
inc
fs
push
or
cmp
stc
adc
testb
push
xchg
ret
adc
nop
pop
push
test
jle
mov
cltd
out
in
fwait
addr16
scas
out
and
mov
inc
xor
push
adc
pop
incl
and
hlt
push
jae
addr16
mov
push
push
push
out
mov
and
sbb
andl
or
das
inc
mov
sbb
sub
loop
insb
lahf
es
out
fwait
iret
sbb
jbe
mov
sbb
fs
and
and
sbb
add
mov
cld
inc
lret
mov
ret
and
push
dec
adc
mov
cmp
incl
test
fistps
xchg
subb
ficoml
in
jl
js
xchg
popf
and
icebp
aaa
pusha
pop
or
mov
or
inc
loop
sub
ljmp
lods
sbb
xchg
jmp
pop
jmp
adc
and
adc
dec
sbb
pop
imul
sti
insl
inc
xchg
adc
pushf
nop
jno
out
mov
xor
ss
mov
icebp
xor
adc
push
jmp
pop
mov
in
xor
cmpsb
dec
sub
push
dec
test
out
fadds
pop
inc
adc
push
pushl
imul
popa
sub
arpl
das
cmp
shl
lahf
insl
jne
cld
ret
cld
jno
pop
sub
bound
cwtl
mov
jmp
mov
push
or
ja
push
sti
addr16
xor
inc
push
flds
mov
fdivrl
cmp
mov
and
stos
add
xchg
cltd
mov
ljmp
jo,pt
mov
aam
or
cmpsl
ret
or
stos
sub
lea
xor
jmp
adc
lods
rcrl
outsb
xchg
outsl
sub
jmp
dec
jmp
push
sbb
dec
mov
push
call
es
popf
cmpsb
pop
sub
sbb
std
add
push
and
test
fcmovne
aam
or
and
fstl
ja
cmp
inc
pop
int3
ret
lret
es
out
test
leave
push
fs
jbe
sbb
and
gs
adc
hlt
dec
dec
add
and
pushf
out
ret
adc
cs
cld
fdivrs
xlat
cmpsb
addr16
jae
inc
pop
cmp
and
bound
push
loope
sbb
or
mov
je
lret
cmpsb
andl
mov
aas
xor
dec
dec
sub
push
pop
mov
push
sub
pop
sahf
movsb
jo,pt
push
adc
mov
into
fstpt
bswap
xchg
sbb
dec
cmp
mov
jp
pop
adc
mov
mov
sti
mov
dec
mov
inc
shlb
push
test
popl
mov
mov
pop
mov
mov
cmpsl
aad
or
mov
inc
dec
xchg
jle
lock
loopne
daa
xchg
addb
jmp
imul
mov
sub
mov
mov
jbe
repz
xor
cmp
and
xchg
clc
ror
int
add
dec
fwait
stos
cmpsl
pusha
push
dec
push
and
and
pushl
inc
lds
jnp
push
ficompl
sbb
loop
loopne
push
push
push
xchg
push
fwait
adcl
in
pop
mov
xchg
inc
jbe
pop
or
push
add
xchg
cmpsb
pop
and
les
imul
xchg
fildll
sar
jp
bound
aas
xor
sbb
adc
sub
push
dec
xchg
mov
mov
sbb
lea
pop
push
pop
inc
push
or
movsl
sub
inc
xor
sub
lret
out
fdivl
imul
in
cmp
or
cs
sbb
mov
pop
mov
fwait
inc
aaa
mov
cwtl
xor
stos
sub
push
cld
and
les
xor
xchg
and
lea
mov
pop
out
int3
fdivrs
std
fs
aam
pop
inc
xor
ljmp
mov
add
movntps
mov
adc
fs
fildl
cmp
loope
xor
insl
xchg
sub
stos
mov
out
push
repnz
es
xor
rolb
mov
rorb
lret
shl
repz
mov
adc
sub
and
push
into
mov
inc
enter
or
inc
scas
stos
fadds
stc
dec
add
pushf
insl
aad
adc
push
fidivrs
sti
lahf
cld
bound
cmp
push
stc
leave
lock
and
hlt
mov
leave
sub
dec
lock
pop
cs
push
sbb
sbb
or
icebp
mov
test
or
xchg
xchg
mov
add
pop
daa
xchg
out
mov
test
lret
sbb
outsl
mov
xchg
jbe
xorb
mov
enter
push
addr16
pop
iret
addr16
mov
dec
imul
cmc
jmp
test
push
dec
or
mov
bound
dec
sub
aaa
ds
aas
das
sub
movsl
mov
roll
sbb
scas
call
lret
cmp
lcall
inc
hlt
xchg
xchg
mov
push
imul
pop
dec
test
dec
pop
cld
pop
pop
mov
pop
int
divb
jmp
pusha
shrl
mov
adc
sti
and
repz
inc
pop
inc
pop
popa
scas
scas
pop
fwait
in
xor
ret
loope
rcrl
fcmovu
jge
cltd
notl
cmp
cmovne
xchg
jg
jo
stos
or
jns
rclb
shll
mov
pop
cmpsb
loopne
adc
in
addr16
gs
or
lret
jmp
ss
test
es
sbb
dec
push
and
sub
cs
bound
add
adc
and
scas
cmp
loopne
cmpsb
mov
jmp
xor
jecxz
mov
test
or
scas
ret
inc
mov
pop
in
and
inc
repz
fists
add
jns
xor
mov
pushf
mov
inc
idivb
push
iret
lods
push
or
bound
push
int
sub
imul
push
sbb
pop
incb
lds
xchg
push
xchg
sub
loop
add
scas
decl
xor
xor
in
push
adc
add
push
pop
roll
and
jmp
jns
pop
ja
pop
push
push
test
leave
jl
pushf
cmp
scas
roll
adc
test
jecxz
lods
scas
fs
pop
mov
int
pop
push
dec
jae
leave
stos
mov
sbb
insl
rol
scas
inc
stos
data16
cmp
imul
adc
or
rorb
xchg
in
pop
jb
inc
or
fsubrp
jo
cmp
mov
fstl
cmp
idivl
nop
bound
push
aam
xor
sub
cmp
cmp
pop
loope
bound
cmp
cmp
jg
pusha
xor
sub
or
push
adc
ja
leave
mov
int
or
sbbl
jae
dec
cmpsb
xchg
ret
sub
dec
lcall
mov
test
iret
adc
jmp
imul
mov
xchg
mov
ds
fidivrl
call
movsb
std
and
push
inc
jmp
xor
or
ret
int
aaa
jns
nop
loop
jecxz
xchg
mov
mov
add
mov
mov
fcomps
popf
jecxz
ja
pusha
lret
repnz
mov
add
shr
sub
outsb
sub
jp
dec
popa
sbb
icebp
mov
pop
mov
cwtl
enter
je
mov
insb
lret
inc
add
enter
jge
insb
add
ret
out
dec
pushf
popf
stc
mov
sbbb
outsb
hlt
push
jg
fsubrs
mov
cltd
andb
out
and
bound
mov
xor
mov
jmp
out
or
mov
mov
mov
pusha
add
mov
xor
and
inc
int
cwtl
jns
dec
xchg
dec
in
jno
add
xchg
cmpsl
outsb
xchg
icebp
ss
adc
add
or
push
inc
xchg
pop
icebp
xadd
insl
in
lret
gs
xor
arpl
into
movsb
jb
jb
loope
cmp
adc
xlat
call
cli
incb
xor
push
push
xchg
sti
das
adc
lahf
fs
pushf
mov
mov
jno
push
push
cs
adc
es
sub
mov
cld
push
push
andl
adc
push
sbb
jae
xchg
push
iret
dec
sub
inc
xor
lcall
lret
cmpsl
js
mov
imul
pop
jo
das
and
std
lea
ja
jl
mov
adc
cmp
sbb
mov
out
mov
je
sbb
cltd
push
inc
add
xor
arpl
pop
jecxz
dec
in
shl
dec
movsb
mov
int
mov
mov
mov
adc
ficoml
lea
push
mov
in
inc
inc
cmp
xlat
jmp
cmc
nop
out
aas
aad
push
lcall
icebp
out
test
cmpsb
lahf
add
fimull
adc
fidivl
fwait
in
pusha
dec
and
pop
subb
push
ret
std
pop
xor
sbbl
out
movsb
orl
inc
jl
cmp
push
loope
movsb
pusha
sbb
and
xor
sub
cli
adc
cltd
clc
xor
data16
cmp
pushl
push
fistl
jbe
ja
jmp
nop
sub
popf
pushf
or
sub
daa
or
push
pop
jbe
sbb
jmp
bound
je
enter
mov
mov
mov
inc
pop
je
sti
or
stos
lods
std
adc
cmc
sub
rcrl
cmc
mov
js
adc
test
sub
jne
or
fidivrl
aaa
xchg
mov
adc
inc
rolb
out
scas
xchg
pop
out
mov
jge
inc
push
sbb
inc
inc
ret
mov
pop
nop
jae
cmp
outsb
insl
mov
insb
sti
mov
jmp
ja
test
iret
add
jmp
mov
lcall
sbb
xchg
mov
dec
scas
fwait
jl
xchg
std
mov
dec
outsb
sub
mov
test
lret
pop
push
test
stos
or
jns
mov
adc
xchg
rorl
push
cmp
test
and
cmp
sub
sbb
or
pushl
push
loopne
pop
dec
out
sub
out
lcall
cmp
gs
test
fiadds
jmp
cmpsb
outsl
imul
inc
sbb
mov
loop
xor
and
jae
imul
scas
jle
jg
sbb
cmp
pop
pop
push
push
or
leave
adc
xchg
aad
andl
jae
inc
ret
or
incl
sbb
inc
mov
mov
cs
in
ficomps
push
jp
jnp
pop
or
scas
adcl
lcall
dec
jnp
pop
imull
push
sbb
test
lds
ficoms
iret
mov
outsl
cwtl
int
jmp
mov
daa
sbb
cmc
cmp
adc
scas
fs
lods
hlt
push
mov
cmc
inc
mov
inc
getsec
mov
cmpl
mov
cmp
adc
fiaddl
sti
sbb
mov
aam
outsb
and
jbe
dec
movsb
mov
xor
sarl
fldl
out
dec
push
pop
outsb
in
fcmovb
ja
jns
pop
push
cli
cmp
xor
mov
and
push
es
fdivrs
xchg
jmp
sbb
shr
outsb
jle
mov
test
push
or
cmp
jmp
ja
adc
sbb
xchg
sti
sahf
idiv
and
ja
mov
dec
mov
shl
jb
mov
in
mov
jge
push
dec
xchg
pop
jp
jg
xlat
popf
cmp
pushf
iret
ret
jecxz,pn
les
stc
fcoms
and
scas
leave
add
xchg
mov
addb
leave
rcl
push
cltd
cmp
sbb
xor
pop
and
fmuls
and
movsl
dec
mov
jmp
dec
jns
pusha
imul
mov
ret
add
cwtl
sub
stos
or
inc
add
fcoml
lahf
fwait
xchg
mov
sbb
sarl
das
pop
jb
ja
mov
out
jge
inc
repz
outsl
enter
fisubrs
jo
sahf
in
orl
adc
fs
in
push
mov
clc
imul
insl
xlat
jecxz
add
repnz
xchg
xchg
xor
pop
jns
cmp
movsb
dec
loopne
movsl
adc
sub
fisubrl
hlt
mov
adc
adc
fmul
add
js
dec
jl
call
xchg
fisttpl
mov
fidivl
call
mov
dec
jle
mov
inc
add
push
xchg
sbb
mov
push
mov
inc
push
jp
roll
jmp
push
fsub
movsl
add
in
mov
in
ror
popa
and
imul
adc
pop
sub
and
fcoml
or
nop
mov
pushf
aam
xor
mov
ljmp
pop
jb
xlat
cmovge
adc
std
xor
movsl
mov
int3
lea
mov
mov
fs
sbb
pusha
xor
dec
xor
mov
divb
jmp
stos
das
cmp
ss
test
xor
std
and
dec
pop
jo
shll
sub
movsb
inc
sbb
pop
push
jnp
add
aad
sub
or
pop
push
lds
icebp
mov
add
mov
je
mov
pop
cmp
insl
adc
mov
pop
mov
icebp
call
js
sbb
push
outsb
repz
je
pushf
in
adc
je
mov
mov
pusha
jecxz
sbb
or
subb
cwtl
imul
or
lock
jp
xchg
out
out
es
dec
pushf
mov
and
cmp
xchg
pop
sahf
lret
sub
adc
scas
push
and
xchg
xchg
cli
sub
mov
arpl
xor
fsubrp
ja
fscale
xor
std
xchg
data16
dec
push
int
data16
dec
das
mov
notb
sub
mov
pop
lcall
pop
aam
push
dec
rorl
sbb
push
imul
xchg
sub
outsl
pop
fmull
push
adc
insl
pop
inc
insl
js
push
loope
inc
cmp
mov
in
in
outsl
sbb
adc
mov
mov
je
out
push
scas
out
aas
test
sbb
aaa
mov
sbb
jbe
push
aam
mov
shlb
stos
aam
or
and
xchg
jmp
jl
test
or
xchg
rorb
je
or
sbb
jmp
out
mov
jmp
jbe
jbe
sub
cmc
das
xor
repnz
fsubl
jo
addl
xchg
loop
pop
and
dec
adc
sub
jbe
cwtl
mov
push
jp
sbb
mov
sbb
fistl
cmp
data16
inc
daa
sbb
dec
in
mov
add
das
dec
lret
adc
repnz
jl
les
sbb
ror
and
add
sub
add
rcr
and
mov
out
shrb
sahf
leave
shll
insb
aam
pop
pushf
jg
ret
int3
jno
mov
pop
adc
push
push
movsl
pop
pop
fcomps
loopne
je
dec
popf
sub
pop
mov
mov
mov
dec
outsl
rorl
clc
shr
test
into
repz
sub
xor
cwtl
adc
gs
cmp
xor
push
orl
push
mov
xchg
push
leave
roll
scas
cld
mov
into
push
mov
les
leave
iret
cltd
push
xor
ret
je
roll
adc
jle
and
mov
mov
mov
lret
fwait
dec
push
daa
mov
xor
pop
push
cmc
mov
adc
ret
cmc
pop
lea
out
jge
adc
inc
sub
les
int3
xchg
jecxz
xlat
clc
ret
mov
fsubrl
lods
or
mov
inc
je
and
xlat
testb
add
jnp
repnz
stos
pop
imul
jmp
popa
rcrb
mov
ss
mov
add
add
aam
cmpsb
mov
cmp
cltd
jge
shlb
sbb
xchg
ds
add
fs
aas
std
pushf
or
test
mov
pop
hlt
stc
mov
stc
adc
aam
xor
xlat
and
push
jmp
dec
pop
mov
dec
pop
jl
sbbb
sub
std
ret
add
adc
add
ss
cmp
jb
dec
mov
mov
dec
lret
mov
aas
jl
cld
fildll
push
repnz
popa
int3
adc
mov
ret
dec
fadds
test
and
pop
xor
mov
mov
enter
mov
xchg
inc
mov
and
arpl
mov
xchg
sti
xchg
ds
xor
or
in
xchg
push
mov
jns
xlat
sbb
sbb
es
jg
dec
imull
pop
jo
movsl
mov
insb
mov
inc
rcl
popf
std
or
jno
loopne
push
cmp
pop
mov
push
xchg
imul
or
push
outsb
aas
mov
dec
and
int3
pop
pop
inc
xchg
or
jne
repnz
mov
and
mov
cld
mov
push
lret
lcall
insb
movsl
push
sbb
cmpsb
adc
mov
cmc
sbb
mov
pop
sub
arpl
test
jbe
mov
xchg
xchg
repnz
fcmovnb
lcall
mov
loopne
xlat
mov
push
cmp
insl
nop
iret
lea
pop
jp
xchg
sub
push
je
mov
popa
adc
sbb
sbb
adc
sub
cmpsb
hlt
mul
out
cmp
dec
sbb
dec
imul
call
push
xchg
and
rcrl
sub
add
inc
js
or
movsb
or
lock
jnp
lret
imul
rol
jecxz
addl
in
out
adc
fsubp
shll
inc
das
adc
aad
and
xchg
inc
sbb
pop
dec
mulb
sbb
push
dec
push
cld
mov
mov
push
inc
jbe
int
roll
data16
pop
mov
lcall
push
into
push
cmpsl
cmp
push
and
jle
sahf
mov
cmp
push
pop
add
in
mov
sti
mov
mov
xor
out
mov
mov
popa
test
sbb
mov
fisttpl
imul
or
not
mov
fs
out
outsb
push
cmp
adc
sahf
jmp
adc
pop
int3
mov
ds
cmp
jmp
cmp
loopne
icebp
out
mov
or
mov
and
or
jbe
jno
hlt
xor
clc
mov
jb
or
mov
ds
in
rorl
sti
xor
loop
mov
xlat
test
dec
cmpsl
fisubs
pop
xchg
nop
ljmp
dec
nop
movsb
inc
xchg
and
cmp
rcll
mov
pop
into
imul
lea
or
loope
sub
jecxz
lds
jle
pop
pop
jb
cmp
leave
std
cld
addr16
and
ljmp
add
jb
xchg
test
stos
repz
mov
addr16
mov
fs
mov
loope
int
push
inc
fidivrs
mov
push
aas
and
cmpl
and
dec
fsin
scas
jbe
sbb
sahf
sti
fcom
ja
adc
sbb
add
mov
sub
adc
lret
mov
push
cmp
push
dec
popa
or
sarb
xor
mov
je
pop
xor
xor
or
fimull
push
mov
popf
aas
jo
adc
fcmove
add
pop
repnz
inc
xchg
and
or
xor
orb
fnstcw
and
icebp
movb
ja
xchg
jle
test
sbbb
or
clc
popw
imul
sub
popf
sub
or
insl
pop
rorb
into
test
mov
push
lcall
push
in
adc
xchg
aam
adc
cmp
cld
jno
popf
xchg
jle
bound
mov
fistps
jge
arpl
outsl
sbb
add
pop
and
and
dec
inc
pop
daa
fiadds
adc
push
icebp
dec
repnz
push
shll
xor
jno
mov
sbb
mov
inc
pop
sbb
popf
adc
movsl
mov
inc
insl
jb
jmp
xor
jmp
xor
das
pop
lcall
fcoms
int3
in
xchg
dec
sub
arpl
divb
pop
clc
mov
inc
jl
stc
inc
add
fdivrs
inc
icebp
jno
and
mov
movaps
scas
imul
xor
stc
push
leave
stc
imulb
in
loope
pop
movsb
bound
inc
gs
cmovne
mov
jecxz
fstps
sbb
lds
nop
and
push
pop
xor
and
pop
lods
add
in
and
jmp
sbb
out
pop
insb
lock
or
outsl
mov
in
or
in
dec
rclb
adc
scas
sub
out
cmp
ja
jns,pt
decl
inc
mov
adc
jae
pop
dec
adc
push
fdivp
jecxz
mov
test
jmp
jmp
cmp
rcrl
out
jae
mov
pop
idivl
enter
js
testb
and
cld
pop
xchg
sub
dec
mov
and
jne
loope
fstpt
ret
std
or
add
cmpsb
fisttpll
dec
mov
daa
dec
jae
and
cmp
jp
sbb
add
adc
xchg
fdiv
jmp
imull
mov
pop
mov
mov
cmc
xor
jp
ds
popl
sub
sub
push
outsl
out
cld
mov
push
mov
mov
mov
nop
pop
cmp
inc
roll
push
pop
or
std
mov
mov
xor
dec
jge
fs
scas
mov
lea
test
mov
mov
test
mov
insl
adc
test
insb
test
or
subl
daa
xchg
inc
leave
mov
sbb
aas
jnp
fucom
push
xor
loope,pt
loopne
std
inc
pop
je
adc
lcall
sbb
cmc
or
test
decl
clc
sbb
mov
icebp
les
sti
cmpb
sbb
dec
popa
push
xlat
xchg
jp
les
cmp
scas
dec
xchg
push
add
xchg
stos
ja
sbb
scas
pop
jg
ja
add
negl
nop
les
mov
iret
adc
xchg
ds
mov
gs
shlb
add
lcall
rcr
enter
enter
clc
pop
aad
loopne
mov
mov
data16
gs
sti
or
inc
stos
push
out
rolb
jecxz
es
or
or
adc
idivl
daa
mov
mov
ljmp
push
push
and
sub
movsb
outsl
icebp
and
test
adc
jmp
fisubrl
inc
adc
xor
mov
inc
pop
lds
jecxz
mov
push
pop
lea
out
arpl
pop
adc
mov
mulb
jmp
out
xor
and
pop
adc
sub
and
mov
push
jo
xor
test
hlt
pop
pushf
in
jg
or
jl
add
pop
inc
inc
cmp
fidivrl
out
or
and
and
in
movsb
or
sbb
rcrl
loop
and
push
je
dec
fs
ss
lcall
mov
adc
mov
add
mov
xor
shl
cwtl
mov
scas
femms
xchg
jg
loop
jl
push
jnp
or
stos
jmp
sti
cmp
xor
mov
sub
das
pop
scas
ret
out
inc
ja
cmp
jno
sub
push
divb
in
dec
jb
xchg
inc
sbb
lea
addr16
test
xchg
loope
or
push
fidivrl
jb
mov
popa
aas
add
pusha
jp
test
sbb
dec
rorl
test
shl
aaa
xorl
out
pop
dec
mov
add
das
sar
mov
ljmp
mov
xchg
push
mov
shl
xchg
adc
fsts
in
pop
jle
push
stos
xor
icebp
xchg
mov
pop
or
ret
xchg
push
pop
subb
pop
lret
repz
xchg
in
fnsave
jns
sbb
clc
movl
mov
adc
mov
mov
jmp
notb
inc
loop
jns
ss
dec
push
movsb
cmc
xlat
adc
cli
out
cmpsl
lds
and
int3
add
cld
xchg
dec
jecxz
enter
fucomip
jp
push
inc
les
inc
or
xrelease
icebp
shl
fidivrs
xor
ss
popf
mov
xchg
loopne
xlat
xchg
pop
rclb
jecxz
cmc
cs
ja
xchg
bound
push
and
xchg
je
cmp
cli
je
sbb
mov
xchg
mov
fdivs
and
add
adc
push
adc
aaa
xor
mov
jg
repnz
pop
jne
mov
ficompl
xchg
cmpsl
mov
pushl
popf
push
aam
xor
cmp
lods
mov
js
sbb
lahf
cmpsl
pop
incl
xchg
push
movsl
dec
ud2
fisubs
fwait
sarl
mov
fnstcw
dec
pop
and
icebp
and
inc
adc
enter
sbb
dec
test
dec
sub
xchg
insb
cmp
mov
aas
jo
out
adc
lea
in
enter
into
pop
imul
inc
or
roll
xor
and
ficoms
add
mov
mov
jge
adc
cli
rorl
mov
daa
bndldx
jb
sbb
sbbl
adc
or
push
cmp
lock
dec
adc
xor
mov
sbb
shlb
mov
scas
enter
add
fdiv
int
add
cmp
mov
cmpsl
jg
mov
cltd
in
insb
jno
popf
lods
cmc
insl
and
movsl
insb
mov
out
mov
loopne
lret
inc
out
dec
pop
dec
jmp
jb
xor
lods
gs
adc
cld
mov
adc
sub
test
xor
push
sti
pusha
push
add
adc
and
cmp
scas
fisttpl
shll
dec
sub
testb
mov
fildl
repnz
je
add
dec
je
mov
jns
div
xchg
dec
insb
cmpsl
popf
pop
jae
sbb
push
in
test
mov
cld
loopne
cmp
mov
mov
ljmp
add
mov
cli
and
repnz
ja
mov
fwait
push
lcall
dec
xor
mov
stc
jmp
test
mov
and
and
jae
popa
add
dec
stc
cltd
push
adc
xor
mulb
add
cltd
jnp
sahf
adc
ds
cmpsb
sub
sub
lcall
popa
in
cwtl
pop
push
lods
loop
cmp
ds
push
pop
leave
jle
xlat
mov
sub
stos
addr16
ret
inc
dec
pushf
xor
test
mov
push
and
mov
dec
mov
and
adc
outsl
popf
scas
jecxz
rolb
fmull
repnz
lock
pop
jb
arpl
popa
pop
ficoms
jae
das
cltd
loopne
dec
addr16
cs
adc
mov
test
push
push
dec
lahf
jnp
ss
loop
imul
idivb
pusha
loopne
mov
or
dec
shll
xor
cmpsb
cmp
or
ucomiss
mov
fs
add
insb
lods
adc
cmp
repz
outsl
pop
jge
jno
add
outsb
scas
pop
test
fldl
testl
inc
jp
sbb
sbb
xor
test
leave
push
stos
scas
in
dec
mov
sub
subb
ss
or
out
aam
jns
mov
ja
movsb
inc
insb
push
int
test
mov
pop
mov
repnz
cmpsl
cmp
lea
xchg
cmp
sti
decb
movb
sub
push
inc
bound
sbb
cmp
dec
sbb
xchg
dec
lock
ficompl
and
stc
sub
std
mov
hlt
aam
mov
mov
cmpsb
inc
and
push
cmc
mov
mov
fists
lahf
mov
jb
dec
loopne
xchg
push
pop
divb
mov
arpl
fdivl
addr16
in
jl
or
lods
dec
mov
mov
or
cmp
and
mov
cmpsl
test
ljmp
into
and
jmp
adc
sahf
xchg
sub
cmpsl
xchg
cmp
sarl
pop
cltd
xchg
stos
push
fwait
jnp
inc
xor
mov
gs
ss
lcall
inc
sub
jmp
cmpsl
popf
pop
js
push
pushf
xor
pop
jnp
sub
mov
adc
cltd
or
lcall
push
or
inc
xor
mov
and
adc
addr16
fsts
push
shl
lahf
push
xchg
dec
mov
sahf
push
push
add
pop
and
outsl
mov
insl
fstps
cltd
inc
into
or
lcall
or
cmp
inc
fidivrl
les
xchg
mov
jg
dec
fadds
insl
xor
mov
stc
add
and
test
sub
xorb
add
and
movsb
sbb
pop
inc
add
xor
and
inc
aaa
mov
cmp
insb
stos
cmp
dec
sub
dec
hlt
pop
lea
and
cmp
or
dec
aaa
jge
jecxz
sub
jo
jnp
dec
sub
loope
test
imull
and
jnp
inc
pop
mov
mov
push
dec
loop
mov
test
and
inc
aam
sub
pop
fsubrl
mov
inc
pop
adc
aad
cwtl
fisttps
in
mov
jle
jno
addr16
fists
daa
test
mov
sbb
jp
push
lea
mov
xchg
in
icebp
cld
jb
rcl
jno
into
xchg
fiadds
xor
aam
xchg
and
loope
les
pop
clc
dec
xchg
outsb
out
push
dec
outsb
push
fs
cmp
dec
sub
dec
push
fucomip
aad
std
jg
int
add
out
in
in
test
jl
aaa
roll
push
idiv
lret
lock
std
sbb
push
push
sti
jae
pop
insb
sarl
inc
mov
in
dec
push
aad
stos
lcall
inc
lret
adc
add
sti
and
in
aad
lret
bound
cmp
leave
add
jmp
dec
data16
repnz
adc
jnp
sub
stos
push
das
push
lcall
mov
test
ret
xchg
push
and
dec
loope
int3
inc
jge
adc
je
sub
jno
and
dec
ret
or
call
mov
cmp
sub
popf
incl
mov
fmuls
add
addr16
fiaddl
dec
fnstenv
sbb
shrb
pop
imul
and
dec
jnp
dec
daa
adc
in
and
in
pushf
or
push
rcrl
sbb
popa
std
add
in
std
nop
xchg
adc
inc
movsl
lock
jg
stc
mov
jo
outsl
dec
pop
or
movsb
loop
and
hlt
inc
loop
pusha
xor
mov
int
and
sub
pop
in
pop
dec
sub
out
repz
jmp
loope
je
cmp
std
jbe
xchg
jb
das
add
in
in
rclb
lds
push
fiadds
cmp
inc
in
and
je
lods
je
ret
mov
popa
jne
inc
mov
jl
in
out
jno
xor
rclb
xor
cmpsb
mov
jecxz,pn
mov
mov
out
int3
push
push
or
xchg
cmp
mov
out
lds
into
iret
inc
movsb
pushf
iret
std
shr
rsm
aas
cmpsl
stos
aam
fmulp
fldl
and
ljmp
xlat
scas
cld
aas
sahf
dec
push
sbb
or
add
mov
aad
mov
loopne
push
jo
push
lcall
gs
xchg
popa
xchg
lea
ret
and
jo
xchg
xlat
je
mov
mov
xchg
jge
sub
shll
pop
iret
inc
fnstsw
sahf
mov
cmpsl
xchg
cmp
outsb
adc
mov
adc
sbb
cs
lds
inc
pop
loopne
jl
xchg
push
sub
or
dec
in
or
dec
cs
jae
cmp
jmp
cvtdq2ps
mov
ficomps
cmp
stos
insb
push
or
jnp
sbb
mov
jle
add
sbb
sar
or
inc
mov
and
test
jns
popa
add
movsb
mov
aad
fbstp
mov
icebp
cmp
xchg
mov
lahf
jle
push
loope
xlat
jne
add
adc
pop
dec
imul
pop
aaa
adc
fisttps
in
push
sub
fnstenv
mov
fbstp
push
pushfw
in
stos
repz
lea
xchg
lretw
mov
call
push
inc
test
clc
popa
mov
xor
nop
push
cltd
and
test
out
cld
jecxz
push
adc
mov
bound
mov
pop
sub
fdivr
imul
icebp
loopne
add
fmull
test
int3
ss
dec
jno
push
pop
dec
adc
in
cltd
imul
mov
pushf
imul
out
push
push
pop
and
pop
xchg
sub
bound
xor
cmp
and
add
sub
out
sub
call
mov
xchg
and
dec
cmpsb
dec
ss
sarb
stos
cwtl
outsl
sbb
dec
xor
mov
adc
pop
lods
es
dec
lock
jne
ret
negb
sub
int3
fs
or
shrl
and
xor
cltd
ja
xor
clc
dec
and
xchg
mov
fisttpl
in
inc
push
mov
push
in
fisttpl
test
in
push
mov
cmpsl
mov
mov
adc
aas
lods
mov
sub
inc
mov
cwtl
add
aam
and
outsl
cmc
sahf
jecxz
xchg
lret
sti
or
inc
lods
loope
sbb
stos
ret
pop
cmp
ret
js
iret
sub
push
lret
mov
push
lea
dec
add
and
dec
jg
jnp
jb
jo
cmp
xlat
or
sbb
cmp
push
out
ret
movsb
add
int3
mov
mulb
scas
mov
aad
in
xor
pop
scas
popa
or
lcall
mov
cmp
je
andb
pop
movsb
pop
fstps
lret
insb
sahf
cmp
sbb
ds
pop
push
test
mov
adc
add
sbb
psraw
jge
mov
mov
loop
data16
push
je
test
test
fiadds
cli
pop
fcomip
dec
and
in
mov
stos
cmp
push
fwait
lock
xor
divb
fcmove
fimull
xchg
mov
fwait
rcr
push
xor
mov
fbstp
test
dec
loope
fdivrp
repz
lea
lods
push
xchg
jg
ret
add
rolb
pop
lods
out
mov
cmp
int3
xor
jnp
mov
jne
sbb
lods
lahf
decl
out
lods
negl
shlb
dec
sub
adc
inc
inc
cmp
mov
fidivs
pop
ss
pmulhw
xchg
out
aas
sub
cmp
dec
xlat
sub
cmp
pop
repnz
adc
ss
and
shrb
adc
jb
lods
xchg
inc
pop
jb
mov
xor
sahf
cmp
lea
sbb
or
je
call
jle
and
mov
notl
ret
dec
cmp
movsl
ror
ret
pop
sbb
shll
mov
aas
or
cmp
sbb
mov
mov
push
test
push
dec
lds
cmp
jmp
mov
jecxz
call
inc
lcall
ret
lods
mov
jbe
or
jns
les
dec
scas
call
add
test
push
fnstenv
add
lcall
pop
add
outsl
dec
imul
sub
pop
push
bound
pop
pop
sti
jecxz
and
bound
mov
push
iret
bndstx
fiaddl
test
hlt
add
cmp
dec
lcall
test
testb
cmpsl
add
cltd
mov
int
mov
out
dec
test
lret
test
xchg
sbb
lret
aaa
mov
inc
arpl
leave
jmp
jecxz
dec
popf
aas
icebp
sub
lods
cmpb
jne
dec
lcall
xchg
mov
leave
add
loopne
push
roll
inc
dec
test
cmp
cmp
in
inc
push
mov
and
sti
jb
loopne
and
xor
ds
andb
ret
mov
lods
test
repnz
cs
dec
or
push
xchg
pop
add
int3
add
in
addr16
scas
pushf
inc
stos
lds
mov
push
push
leave
test
lock
push
ss
ljmp
iret
push
add
mov
cmc
aaa
adc
pop
mov
pop
frstor
out
pop
mov
adc
rorb
pop
xchg
lock
fisubs
popf
lahf
inc
sbb
jno
adc
push
pop
mov
mov
movsl
sub
sti
fstpt
fs
dec
ss
xor
bound
cmp
cltd
inc
jl
fsubl
fwait
cmc
adc
pop
enter
adc
testb
jge
cmpsl
or
repz
cmp
in
stos
push
es
sbb
sar
popf
sub
pop
dec
cwtl
sbb
or
mov
jg
jo
mov
xor
jno
cltd
sub
and
dec
sub
xor
in
ljmp
popf
jne
arpl
jge
dec
mov
mov
jns
sbb
push
hlt
inc
fcmovne
iret
sub
leave
mov
in
xor
mov
sbb
daa
add
scas
daa
push
cmp
adc
xchg
jns
mov
std
pop
pushf
ds
lret
dec
stc
lods
shrd
test
repz
mov
jno
faddp
movsl
mov
lret
fcomi
les
or
cmp
mov
aaa
icebp
adc
ja
push
out
ret
or
int
pushf
lea
sbb
inc
jnp
mov
out
push
jp
sub
fdiv
loop
cmp
dec
je
sub
jl
aad
test
cmp
lret
loopne
push
mov
jnp
cmp
sbb
add
ret
popa
xchg
jl
add
insb
pop
sbb
int
lea
jo
push
xor
push
sub
out
inc
lods
enter
pop
add
jb
sub
int3
ret
popf
and
jmp
add
fistpl
popa
scas
push
bound
mov
sub
lock
add
push
sub
jns
jne
push
lret
add
or
icebp
mov
leave
xor
outsb
mov
pop
stc
inc
js
mov
out
jle
out
or
dec
push
mov
mov
aaa
std
pushf
mov
gs
dec
pop
cmpsl
out
add
cld
mov
jns
ljmp
sub
add
fwait
xchg
add
push
dec
pop
out
add
cmp
sub
jl
jmp
adc
or
rcll
inc
inc
icebp
addr16
and
ss
and
xor
xchg
enter
in
in
push
sbb
jne
lret
test
jns
js
push
jmp
jb
add
movsl
addr16
push
movsl
ds
mov
arpl
rcrl
popa
jmp
xor
mov
xor
pop
sub
cmp
dec
scas
arpl
int3
mov
mov
cltd
insb
fildl
push
aas
xlat
adc
mov
jg
add
xorb
mov
push
vpunpckhdq
jb
movsl
mov
sub
pop
or
jne
add
rorb
notl
jo
nop
faddp
jmp
cwtl
les
sub
sub
outsb
push
js
xorb
flds
push
sbb
aad
stos
std
sub
or
dec
add
stos
fiadds
sub
shr
fistps
cld
call
shrb
and
mov
ja
xchg
add
pop
jnp
jp
ljmp
mov
cmp
lds
mov
xor
inc
dec
loope
pop
mov
sarl
mov
sub
bound
imul
leave
cmp
mov
sbb
sbb
test
mov
inc
xchg
or
cmp
mov
mov
daa
cmp
call
lret
mov
lea
mov
or
sbb
push
sub
push
rcr
clc
leave
add
adc
add
push
pop
sahf
add
push
inc
in
out
xor
inc
das
xchg
cmp
cld
sbb
cmp
pop
cmc
stos
pop
bound
outsl
or
lcall
imul
aad
addr16
mov
xor
shrl
sub
daa
sbb
mov
lret
les
mov
xorb
pop
mov
and
xorb
daa
sbb
or
jp
pushf
push
lods
push
mov
dec
outsb
sbb
je
xor
adc
pop
mov
addr16
sar
sbb
push
adc
xchg
sbb
arpl
mov
add
not
mov
cs
jmp
outsb
add
inc
lahf
iret
imul
cmp
mov
shlb
cmp
hlt
test
sbbl
aas
sbb
inc
ret
mov
mov
ficomps
jge
ficompl
pop
inc
jo
scas
mov
pop
mov
ljmp
and
adc
pusha
sahf
mov
int3
mov
cmp
out
sbb
fstpl
hlt
ljmp
or
push
sub
jmp
scas
clc
in
insl
clc
xchg
pop
scas
das
movsb
stos
leave
scas
idivb
push
jbe
and
shll
lds
adc
ret
xlat
clc
popf
adc
mov
mov
push
ja
faddl
pushf
mov
aad
aaa
pop
mov
jnp
mov
lret
cmp
mov
repz
rorl
xor
fldl
sbb
mov
mov
daa
int3
test
mov
fdivrp
inc
rolb
psubusw
push
int
jno
mov
jo,pn
fidivrs
test
xlat
adc
mov
decl
cli
pop
adc
inc
movsb
incl
fidivrl
loope
subl
and
lods
jnp
and
mov
and
lcall
cmpsl
lahf
or
pop
mov
inc
pop
ja
adc
sub
inc
lea
mov
sbb
jg
clc
push
mov
rcll
mov
xchg
cmp
data16
adc
fbld
popf
addr16
jae
xchg
xchg
pop
out
ret
pop
xor
and
adc
push
repnz
sbb
and
sub
hlt
add
fisubrs
daa
push
push
and
xor
cld
mov
mov
and
ss
mov
pop
xchg
jge
ljmp
outsl
jns
cmpsl
xor
sbb
push
in
mov
jge
or
sarl
fucomi
or
cli
sbb
or
and
adc
xor
iret
sub
ret
sub
repnz
idiv
add
rclb
pop
ja
push
jmp
xchg
sub
sti
das
in
cmp
gs
inc
lea
xchg
pop
mov
jne
sub
repnz
negb
pop
lods
cmp
mov
pop
lods
mov
ret
ss
sbb
negl
jne
jmp
fistpll
mov
enter
stos
mov
adc
jle
data16
setb
push
rorw
jne
gs
out
sti
mov
mov
fs
fdivl
enter
cltd
xchg
outsb
mov
or
mov
pop
bound
xlat
jmp
rorb
lcall
jecxz
xchg
xchg
xlat
and
rorl
scas
sbb
jl
adc
mov
push
bound
out
rcl
push
mov
sub
loopne
jnp
pusha
mov
loopne
fwait
es
ds
jo
test
arpl
cmp
xor
xchg
mov
fsubrl
sbb
push
insb
push
adc
cld
jne
mov
mov
shll
xor
xchg
inc
jmp
out
lcall
loope
cld
cmp
sbb
cmp
xchg
sti
sub
sub
mov
or
ljmp
jbe
and
jae
shrb
cmp
jbe
je
dec
aas
fmull
clc
imulb
push
dec
cmp
inc
daa
mov
adc
jle
xor
and
shrb
cmp
cmp
sti
sub
andb
imul
xchg
push
cmp
test
sbb
mov
cmc
mov
jbe
mov
rclb
ret
ja
pop
push
inc
xchg
leave
pop
mov
mov
aam
xchg
dec
nop
call
out
mov
popa
into
pop
cmp
js
push
inc
pushf
mov
das
jo
or
xadd
and
mov
stc
adc
push
fnstenv
mov
xchg
dec
cmpb
xor
lods
adc
push
xchg
fs
push
lods
je
lcall
adc
insl
rorl
push
mov
loop
cltd
cltd
sti
push
jbe
clc
add
out
mov
sub
sbb
and
aaa
loop
ss
mov
push
incb
add
mov
sbbb
pusha
int3
pop
xor
iret
inc
pop
jb
cs
movsl
add
and
xchg
push
daa
popl
das
mov
icebp
lret
inc
enter
push
mov
hlt
mov
fistpl
fsubrl
pop
mov
pop
push
and
mov
xchg
push
shrb
popf
scas
test
pop
mov
fstpl
stos
popf
lahf
mov
or
loop
push
arpl
mov
adc
lret
ret
mov
lret
pop
lret
out
je
enter
or
shrl
stos
jmp
lret
and
imul
arpl
inc
fsubp
movsb
push
push
jge
test
rcr
repz
iret
pushf
cmp
das
sbb
inc
stos
bnd
sbb
lods
icebp
push
loop
xchg
xchg
pxor
adc
jmp
loopne
xlat
arpl
lock
xchg
adc
xor
push
cmpsb
repnz
fadd
rcrl
cmpsb
pop
add
sub
ljmp
mov
mov
mov
xor
pop
lock
je
jno
sub
inc
cmc
dec
inc
test
push
cld
mov
es
mov
das
std
jno
mov
add
add
mov
mov
xor
cmp
int
lods
jae
in
sub
sub
lock
cmpsb
aam
adc
jb
loop
mov
popa
cmp
or
fwait
cmpsb
xchg
add
push
cmp
into
ljmp
inc
sub
aad
xchg
xor
insl
mov
adc
xor
das
lcall
mov
lods
nop
adc
add
prefetcht1
bound
cmpsb
out
cwtl
in
rol
inc
adc
push
loop
mov
cmp
movsb
inc
int
adc
dec
mov
dec
rcl
jge
das
push
les
aad
incl
out
inc
dec
and
cmp
sbb
mov
pushf
dec
movsb
mov
shll
int3
mov
pop
clc
jno
sbb
inc
cmpsl
loop
jns
jge
test
aaa
fcoms
and
xor
cmpsb
pop
ret
and
popl
pop
idivb
out
or
xor
or
mov
sbb
jl
mov
push
cmpsb
jae
jns
push
out
shll
xor
fcoml
xchg
sub
sahf
mov
push
xor
jmp
dec
sbb
sbbb
jle
daa
sub
adc
scas
and
and
in
jmp
negb
cmp
or
das
jno
xchg
shl
add
out
inc
nop
popf
imul
cmp
dec
insb
ret
mov
mov
adc
xchg
sub
dec
sbb
not
lcall
inc
cmpb
dec
test
dec
fwait
jnp
or
leave
lahf
sub
hlt
in
loop
leave
lcall
or
sbb
and
cmpsl
mov
mov
mov
inc
dec
xor
mov
lea
adc
shll
cwtl
cmp
cmp
loope
mov
adc
stos
cmp
hlt
rorl
xor
adc
aas
add
pop
xor
pop
mov
and
xchg
adc
sub
lods
stc
ljmp
cmp
in
aaa
jns
test
out
insb
mov
push
and
int3
in
mov
mov
insb
stos
sub
xchg
out
pushf
mov
repnz
sub
sbb
pop
call
fsubrl
pop
outsb
push
bound
clc
jecxz
jns
fdiv
aad
test
push
mov
pop
mov
push
adc
sub
cld
loop
sarl
dec
push
into
jnp
arpl
jle
add
mov
lcall
les
jae
out
add
xchg
mov
pop
sbb
subb
mov
mov
sbb
sbb
ss
arpl
xlat
xchg
leave
ror
cmpb
imul
shlb
mov
xor
lods
call
out
imul
dec
clc
mov
stos
adc
cmp
sahf
cmp
hlt
jbe
nop
push
mov
js
or
in
leave
sahf
in
xchg
lret
sbb
mov
daa
xchg
ficomps
icebp
scas
lea
adc
push
lret
test
jecxz
cmpsb
inc
or
mov
cwtl
pop
frstor
lds
iret
sarb
inc
inc
add
orb
pusha
xor
push
mov
cmovae
inc
popa
ljmp
movsb
push
mov
xchg
ficoms
popf
int3
sbb
cmp
repz
shrb
dec
push
or
inc
scas
pop
pop
inc
dec
outsl
add
sbb
rolb
inc
push
adc
adc
daa
ret
test
push
sarb
lcall
aaa
insl
jl
pop
das
mov
daa
ja
push
adc
pop
aam
out
fxch
jle
enter
inc
fwait
lock
mov
loopne
sub
mov
pop
icebp
test
fldenv
sbb
mov
xor
hlt
fmull
push
mov
xchg
mov
xchg
inc
incl
mov
lret
pop
or
xor
jnp
pop
lods
xor
adc
cwtl
mov
test
xchg
and
push
cmpsb
scas
push
pop
movb
out
cmp
pop
sub
je
mov
pop
in
sub
xor
out
jle
push
push
or
push
dec
jb
loop
test
mov
int3
clc
into
dec
push
mov
pop
push
push
daa
fdivrl
lock
sarb
mov
push
sub
jnp
xor
xlat
test
out
pop
das
cmp
lods
sub
add
jae
test
cmpsl
popa
mov
push
or
inc
outsl
mov
or
jl
idivl
test
sbb
je
lcall
inc
cmpsl
test
inc
out
mov
lahf
imul
enter
test
push
mov
imul
and
xchg
mov
imul
insb
mov
xchg
and
dec
pop
ds
test
mov
dec
cltd
mov
pop
add
ret
cmp
mov
mov
dec
pop
mov
fisubrs
fldlg2
sbb
mov
adc
int
xchg
mov
push
xchg
js
mov
add
fdiv
ds
jns
repz
rorb
xor
insb
cld
aam
mov
cli
sub
outsl
fs
xor
orl
orb
jecxz
dec
jg
mov
lret
adc
add
je
mov
sbb
jmp
adc
popf
xchg
or
dec
cmp
push
enter
jmp
sub
jae
push
inc
in
out
testb
cmp
pop
mov
jb
adc
pusha
jmp
jmp
dec
lea
pusha
ret
shrb
mov
mov
dec
ret
or
mov
xchg
inc
imul
in
cmp
std
fbld
shl
ds
xor
das
xchg
pusha
inc
jo
je
push
std
dec
xor
sbb
pop
pop
dec
and
jno
adc
popf
jae
fnstenv
pop
scas
mul
outsl
cmpsl
fdivrs
testl
mov
pusha
les
std
adc
sub
fs
ljmp
das
jge
addr16
push
repz
add
int
mov
pushf
adc
aaa
outsb
adc
in
cmp
mov
in
mov
notl
dec
mov
fisubrs
push
das
jmp
push
outsb
jmp
fstps
lret
imul
adc
sbb
in
jg
in
add
sub
xor
cmp
int3
xchg
sbbl
subb
jg
movsl
dec
jbe
int
fstp
mov
pop
push
rcll
stos
jo
jg
cmp
subl
jo
fsts
sub
shlb
cmpsl
leave
inc
ds
outsl
and
xor
pop
xor
push
xchg
mov
lock
bound
je
aam
add
pop
inc
mov
sbb
push
push
fdiv
cmp
lahf
aaa
in
rolb
mov
ror
cmpl
repz
repz
xchg
stc
cmp
repnz
fcoml
mov
test
sar
jg
dec
inc
lock
jb
pop
mov
pop
add
cmp
xchg
repz
mov
mov
cwtl
lret
push
cmp
sti
rolb
inc
loope
inc
adc
ljmp
mov
jns
clc
gs
or
inc
roll
sbb
jecxz
adc
out
js
int
movsl
adc
addr16
pop
xchg
lods
cli
arpl
scas
ds
xchg
faddl
out
int3
xor
sbb
data16
cmc
sub
loop
aaa
add
mov
popf
rcrb
sti
ret
or
push
cld
adc
ficoms
bnd
scas
dec
mov
negb
inc
fcmovbe
jb
jo
push
repnz
shrb
sahf
inc
fucomp
std
add
xor
dec
js
mov
mov
jle
sbb
pop
int
nop
jmp
lahf
jl
shll
popf
xchg
mov
cmp
popf
inc
sbb
je
lods
sbb
test
fcomi
jne
jg
icebp
mov
stos
aam
xor
add
xor
loopne
jb
arpl
cltd
mov
imulb
push
xchg
pop
nop
xor
insb
lods
sbb
pop
add
fsubs
adc
icebp
mov
or
pushf
lret
lods
pop
adc
inc
pop
add
sbb
xor
inc
in
xchg
xchg
push
jl
pop
repz
jne
mov
mov
xchg
adc
int3
or
xor
xchg
push
dec
xor
fimull
dec
mov
cmp
cld
adc
test
out
outsl
add
dec
cmpsl
pop
test
ret
mov
lahf
and
mov
pop
dec
sub
popf
push
mov
xchg
jo
inc
mov
push
xor
insl
dec
mov
or
outsl
shr
dec
and
in
enter
das
icebp
js
xlat
fwait
pop
daa
aam
stc
sahf
mov
pop
mulb
imul
pop
mov
or
mov
in
movsb
inc
cmp
bound
xchg
sub
icebp
in
or
xor
pop
cmpsb
mov
imul
or
lret
sbb
cmp
fs
fmul
dec
daa
xchg
lods
out
jne
push
and
and
push
cmp
xlat
sbb
inc
imul
das
xchg
push
into
push
or
mov
iret
aaa
test
iret
pop
adc
ret
divl
sbb
xor
out
dec
jne
pop
sbb
gs
pop
popf
cld
lahf
push
mov
jp
cmp
imul
or
adc
xor
sbbl
cmp
lcall
push
mov
ficoms
xlat
aas
lds
in
dec
les
or
repz
mov
div
sbb
mov
cmp
out
int3
xor
rorl
lds
sarb
inc
mov
lods
push
mov
cmp
push
testb
jno
xor
sbb
cmpsl
inc
dec
mov
cmp
cmp
fcomps
jo
cmp
int
out
stc
add
mov
pop
add
mov
mov
lret
je
outsb
mov
dec
mov
sbb
add
jl
arpl
dec
insl
inc
cmpsb
movsl
jb
mov
jne
fst
pop
xor
aas
pop
jle
mov
adc
lods
es
icebp
ds
repnz
dec
test
pop
stc
push
jno
push
dec
iret
push
pushf
jne
daa
insb
ja
sub
stos
jecxz
clc
lds
fisubl
loop
pop
inc
mov
popf
fnsave
cmpsl
sar
xor
jbe
enter
mov
and
and
pop
cmpsb
in
xchg
jae
sub
push
scas
mov
lret
push
clc
jg
scas
ret
xchg
mov
into
clc
arpl
lcall
xor
mov
sbb
xor
or
lds
out
cli
push
daa
clc
sub
add
push
outsb
js
push
jecxz
movsb
add
inc
dec
scas
adc
addr16
ja
inc
addr16
lods
dec
das
jg
sbb
xchg
mov
mov
fwait
lods
mov
pop
neg
sti
mov
and
xchg
sbb
out
adc
decb
jo
sbb
cmp
les
cmp
loope
adc
mov
fisttpll
rcrb
aam
ja
mov
cmp
mov
sub
sarb
cwtl
jne
adc
cmpl
push
shrl
jge
leave
mov
or
and
mov
xchg
jo
add
fmul
xor
fadd
mov
pop
lahf
jmp
dec
aam
mov
add
cmp
pusha
cmp
in
mov
pop
in
adc
lods
mov
ja
ret
add
xchg
push
fwait
or
rcl
pop
sbb
cmc
outsb
sbb
add
mov
push
popa
aam
ss
adc
sub
inc
inc
cmp
sbb
sbb
push
xchg
sub
jne
sub
pushf
sbb
and
inc
lret
pop
xlat
jle
mov
outsb
jl
mov
sub
out
sub
xlat
add
movsb
in
cmovnp
je
std
cmp
fwait
mov
dec
or
add
xor
push
or
push
aam
test
xlat
icebp
ficoms
adc
jl
xchg
mov
jnp
ljmp
insl
lods
add
dec
cld
cmc
pop
lret
inc
ficoms
jmp
mov
mov
mov
negl
pop
loop
dec
cltd
push
sti
push
test
mov
dec
jne
adc
add
sbb
xchg
jbe
ret
je
ss
outsl
mov
sbb
in
fcoms
push
insl
adc
fst
ret
cmpsb
movsb
lock
jne
mulb
xchg
pop
test
ret
je
dec
inc
pop
in
jmp
dec
pop
sub
add
inc
xor
ss
mov
nop
test
mov
inc
or
lcall
movsb
cmpsb
mov
jno
popf
jle
adc
sub
popf
sbb
rcr
in
sbb
out
and
out
stos
mov
xor
xor
imul
jb
or
in
outsb
inc
mov
push
int
add
cmp
aas
fsubrl
repz
jmp
xchg
je
mov
jl
sub
stos
push
or
out
mov
fstl
and
cmp
adc
sarb
dec
sub
xor
mov
aam
test
out
sub
les
pop
in
ret
xchg
ret
shrl
cld
bound
enter
and
mov
insl
xor
daa
stos
fwait
pop
scas
mov
adc
pop
cwtl
xor
in
add
fisttpll
leave
mov
sbb
test
xor
add
aam
lds
test
jns
fstpl
fs
xorb
out
stc
add
leave
jae
mov
cmp
repnz
or
adc
cmp
and
mov
mov
xchg
jae
xor
scas
mov
jmp
jl
cmc
nop
push
mov
rclb
inc
dec
push
mov
jecxz
adc
orl
dec
xor
fbstp
xor
pusha
inc
mov
mov
sbb
std
and
outsl
pop
or
xor
sub
addr16
ret
adc
repnz
call
mov
jmp
dec
in
mov
mov
and
es
dec
adc
or
lods
mov
les
movsl
cli
ss
mov
adc
jp
loope
mov
jg
lret
xchg
bnd
stos
mov
arpl
push
push
ds
cltd
sbb
jnp
dec
adc
dec
pop
xor
out
mov
in
push
pop
decb
add
fs
lret
jae
xchg
and
inc
xchg
mov
insl
lsl
jecxz
dec
push
xor
daa
icebp
inc
inc
aad
clc
add
xchg
icebp
in
push
lock
pop
shrb
inc
mov
popf
mov
lods
push
jp
push
push
rolb
mov
outsl
repz
mov
add
lods
pop
cmp
stos
and
sbb
xor
dec
dec
pop
dec
aam
addr16
push
mov
stos
fildl
mov
popw
je
clc
mov
adc
jb
mov
sbb
pop
leave
fs
out
xor
sahf
outsb
in
imul
jecxz
pop
pushf
and
jle
fdivrl
or
mov
dec
and
and
fsubrp
stos
orb
flds
shll
xchg
cmc
jns
and
jno,pt
xchg
xchg
gs
and
and
roll
fisttpll
shlb
mov
sbb
insb
pop
pop
rcrl
adc
pop
mov
xchg
inc
and
cmpsl
out
jbe
jg
or
add
jno
xor
sbb
dec
cli
out
fbld
aas
sarb
mull
test
xchg
idivb
out
scas
fstpl
sarl
adc
aad
sarl
dec
xchg
mov
test
sub
push
push
movq
notb
inc
lret
dec
sbb
les
mov
adc
jge
pop
pop
scas
sbb
jno
and
and
push
outsl
add
jmp
call
mov
and
loopne
cmpsb
scas
pop
push
fadd
out
fadds
sbb
pop
inc
jmp
cltd
xchg
arpl
packsswb
dec
jne
ja
mov
mov
ret
push
hlt
push
rorl
fisttpll
ds
pop
or
add
loopew
test
lods
pushf
adc
mov
mov
mov
outsb
mov
rclb
adc
pop
icebp
sbb
lret
fsts
add
out
and
testb
adc
sbb
andl
or
xchg
add
shrb
stc
pop
or
lcall
repz
mov
ljmp
repz
mov
mov
aad
mov
movsl
fists
stos
jno
and
pop
cmpsb
in
mov
aad
mov
push
or
imul
scas
adc
cwtl
push
xchg
repz
or
sbb
call
test
inc
sbb
loopne
inc
push
xlat
dec
aas
test
stos
fildl
add
lret
adc
lds
cwtl
sbb
out
adc
ds
inc
pop
lahf
sarb
jae
repnz
dec
iret
adc
pushf
leave
sbb
jb
movsl
fildl
cmpsb
adc
cmpsl
dec
lock
in
sbb
dec
or
data16
push
scas
sub
repz
xor
jnp
add
inc
pop
inc
cmpsb
mov
rorb
pop
and
pop
stos
push
fdivrl
lret
popa
dec
out
ja
xchg
push
rolb
push
mov
dec
call
mov
jle
push
xor
mov
imul
aaa
xor
dec
negb
xlat
adc
and
or
test
pop
mov
leave
inc
jecxz
add
mov
sbb
mov
dec
add
xor
aaa
out
cmp
sbb
mov
lods
sub
xchg
enter
movsb
shl
and
xor
sub
test
jns
cmp
scas
nop
dec
ds
sbb
or
push
xchg
loop
and
lock
ljmp
cltd
xor
cld
sbb
out
ret
aam
scas
xor
push
or
mov
out
jae
or
xchg
fidivs
sub
jmp
popf
int3
pop
ss
cmp
mov
adc
enter
dec
sbb
pop
adc
cmp
push
xchg
pop
pop
or
ja
sub
leave
in
push
xchg
jle
and
je
xorl
mov
add
jg
dec
cmpsb
push
xor
mov
mov
xchg
test
xchg
inc
jb
test
inc
shll
cmp
cmc
mov
sti
cli
push
bound
adc
icebp
mov
outsl
ret
xlat
fistpll
es
test
stos
sarl
fistps
cli
insl
mov
fs
stos
jle
xchg
mov
pushf
in
mov
jb
sbb
mull
jb
jae
mov
test
stos
or
inc
pop
pop
push
mov
or
mov
adc
inc
insb
test
enter
mov
test
sub
or
or
mov
nop
aas
adc
add
repnz
test
mov
aas
pushf
or
stos
insb
ret
sub
mov
xchg
cmp
aam
cmc
aam
std
add
push
xor
xchg
sub
fimull
jb
add
aas
jbe
pop
mull
jns
add
jnp
xchg
pushf
xchg
dec
jae
popf
fbstp
pop
adc
icebp
mov
adc
inc
and
mov
in
das
xchg
mov
sub
mov
pop
add
jno
je
in
dec
shl
fiadds
lods
cli
push
lahf
gs
jo
arpl
jae
mov
push
cmp
jle
fists
push
add
mov
daa
sbb
lahf
xchg
lock
jg
ret
xchg
mov
insb
jb
pop
in
cmpsb
dec
xor
mov
xor
cmpsl
push
orl
data16
cmp
mov
mov
jnp
dec
pop
mov
pushf
in
pop
fists
int
movsl
leave
scas
add
inc
lods
jns
daa
pop
out
out
scas
inc
mov
pop
xorl
dec
movsl
mov
lods
sbb
jp
xchg
test
pop
mov
add
inc
pusha
push
ret
xchg
lcall
add
xchg
lcall
hlt
cld
cs
loopne
pop
inc
xacquire
insl
adc
cwtl
mov
jbe
stos
xchg
movsl
repz
insl
adcl
pop
scas
mov
fildl
test
rorl
mov
fildll
mov
inc
ljmp
mov
int
adc
xor
cwtl
dec
adc
cltd
test
adc
lods
dec
fs
popa
cmpsl
insl
imul
dec
pop
mov
cli
jp
add
leave
clc
imul
aad
repz
inc
in
adc
jbe
adc
and
jp
dec
sub
sahf
imul
or
out
mov
repnz
movsb
in
popa
repnz
jp
mov
cmp
and
adc
xchg
pop
adcb
xor
pop
adc
inc
mov
rclb
mov
jge
stos
mov
sti
sbb
cmp
sbb
pusha
dec
and
jb
data16
in
ljmp
dec
mov
inc
adc
out
repnz
shl
add
ja
xor
sbb
dec
pop
loop
dec
pop
xor
push
ja
pop
stos
aas
in
mov
or
add
mov
ljmp
pop
stc
mov
fwait
sub
pop
pop
out
stc
mov
dec
dec
push
rolb
mov
jbe
pop
pop
adc
or
arpl
and
jb
push
xor
adc
and
out
xor
push
add
cmpsb
je
test
xchg
ss
inc
xor
dec
add
inc
pop
xchg
push
push
fwait
mov
daa
jo
idiv
fsub
mov
popa
das
push
arpl
adcl
sbb
gs
and
jo
cmc
addr16
dec
push
dec
insl
cmp
cld
jo
cld
mov
mov
mov
roll
in
jmp
test
cmp
dec
mov
cmpsl
mov
add
fisubs
ja
insb
es
cli
imul
push
insl
mov
addr16
jg
sbb
sub
jg
std
scas
pop
nop
loope
jne
mov
data16
mov
adc
cmpsl
xchg
scas
xor
dec
fldcw
xor
fs
adc
mov
nop
xor
mov
in
and
mov
xchg
vminsd
shll
inc
pop
iret
and
fsubrl
addr16
cli
enter
rcl
lods
inc
add
andl
mov
loope
xor
inc
in
inc
sbb
xchg
push
rolb
fldt
lret
insb
or
aam
outsl
repnz
or
das
xor
pop
xchg
xor
mov
and
imulb
aas
les
add
cmp
xchg
sbb
adc
fwait
pusha
and
push
push
pop
jns
je
add
leave
aad
lock
mov
mov
add
push
adc
stos
sub
pushf
das
sbb
pop
popa
pop
adc
xchg
sbb
xchg
icebp
cmpsl
int
dec
fstl
and
xchg
push
jmp
scas
dec
mov
imul
aam
mov
mov
pop
xor
jecxz
and
adc
jge
pop
adc
mov
push
lahf
sti
leave
xchg
into
rolb
dec
xor
push
adc
adc
jns
ss
sbb
mov
mov
hlt
repnz
inc
pop
mov
test
lods
mov
loopne
pushf
mov
lock
push
push
stos
leave
mov
xchg
xor
or
push
insb
faddl
mov
xor
mov
dec
dec
push
adc
cmp
in
lcall
pop
xor
std
idivl
xlat
andl
call
jle
add
xor
mov
or
lcall
int3
mov
pop
jge
int
or
mov
lods
mov
cmp
fldl
cltd
inc
and
or
mov
push
fcomps
sbb
nop
or
in
notb
jmp
cwtl
mov
fsubrp
xchg
or
pause
jecxz
aam
test
iret
inc
das
xchg
xchg
dec
adc
xlat
pop
mov
mov
xchg
call
dec
popa
push
fstpl
in
pop
push
and
ljmp
mov
ret
cmp
movsl
push
shrb
push
jmp
push
pushfw
cmp
xchg
ja
fistpl
bound
gs
mov
sbb
mov
xchg
in
push
cmp
push
cmp
int
aas
xchg
xchg
xchg
mov
divb
out
xchg
pop
pop
push
pop
mul
dec
in
hlt
in
cwtl
rcr
cmp
lret
fldt
test
insl
sahf
inc
mov
sub
or
push
jbe
mov
inc
jbe
pushf
add
push
dec
mov
sbb
pop
std
enter
in
cli
jnp
xor
push
xchg
adc
ret
adc
dec
imul
or
aaa
gs
inc
and
arpl
jecxz
mov
mov
lret
lea
jo
mov
pop
test
add
push
push
and
aaa
cs
daa
repz
pop
sti
test
xorb
fnstcw
sbb
mov
cs
pop
stc
cld
test
icebp
sub
mov
lahf
xchg
and
pop
out
outsl
test
xchg
xchg
sub
pop
scas
arpl
loop
mov
mov
add
outsl
test
lahf
xor
pop
push
test
xor
stc
scas
std
push
push
pop
popf
xor
gs
scas
or
push
in
outsl
pop
test
pop
cld
pop
mov
test
cwtl
stos
xchg
fcmovb
dec
loopne
outsl
sti
ficompl
inc
xchg
sbb
cmp
rorb
xchg
adc
arpl
iret
ljmp
pop
ss
push
repz
cmp
xchg
jbe
push
clc
xchg
or
xchg
pop
sti
xor
cltd
fisubrl
push
mov
pop
movlps
jbe,pt
or
lahf
mov
pop
mov
fcoml
inc
xor
mov
jge
mov
mov
adcl
or
cmpsl
movsl
mov
or
in
mov
testl
out
xchg
inc
xchg
hlt
push
scas
dec
push
inc
mov
pusha
and
xor
test
je
fisubrl
test
lahf
pop
loopne
decb
call
dec
gs
and
gs
loope
movsl
mov
lds
sbb
or
push
fisubl
cld
mov
popf
adc
xor
pop
and
pop
jp
std
dec
xor
idivb
gs
or
adc
arpl
lea
testb
mov
push
push
loopne
cmpsl
inc
and
loopne
pop
fsub
mov
cmc
fidivrs
inc
sub
jno
idiv
popf
dec
xchg
es
out
push
push
jno
lea
repz
mov
js
daa
fwait
xchg
scas
pop
jecxz
add
in
sub
or
add
pop
push
lods
pop
fisubl
and
pop
je
dec
dec
imul
ss
fcoml
cld
popa
pop
push
fdivl
push
loope
adcb
mov
xor
mov
mov
inc
dec
imul
jae
enter
dec
xor
int
fisubs
movsb
nop
lods
stc
xchg
pop
imul
int
loope
enter
pusha
cwtl
cmp
lods
fcompl
outsb
jne
pop
xchg
es
outsb
mov
in
inc
xor
popf
mov
mov
loop
mov
xor
aaa
xor
or
icebp
jo
jnp
popa
cs
aaa
out
mov
jg
je
sbb
aas
das
pop
pusha
loopne
fimuls
push
jne
dec
gs
mov
or
jp
aad
mov
dec
lea
cmp
repz
jmp
mov
ficoml
jne
xchg
dec
add
push
inc
push
xchg
jno
push
or
mov
cmp
sahf
fsubrs
mov
pop
push
stos
sbb
pop
mov
imul
jmp
cmpsl
std
hlt
inc
loop
mov
sbb
pop
sub
repz
sub
mov
sahf
pusha
pop
or
jmp
aam
xor
mov
decb
xchg
dec
call
mov
sbb
scas
xor
pop
fists
lds
pop
mov
dec
jg
jno
adc
into
in
aas
push
out
leave
xor
jg
jnp
push
mov
mov
mov
in
inc
xchg
jno
xor
int
adc
shlb
lock
jmp
or
cmpsl
push
sbb
jb
aas
mov
les
fwait
or
rolb
add
mov
jmp
aas
shll
call
jg
push
shll
mov
mov
or
lds
lret
and
push
pop
add
incl
lods
cmp
lret
sbb
inc
mov
scas
adc
pop
jmp
sbb
mov
jg
mov
fwait
repz
mov
repz
lahf
decb
cltd
or
and
or
cmp
mov
js
arpl
jb
mov
inc
jp
add
push
les
mov
jmp
sar
icebp
pop
dec
sarb
data16
xchg
insb
sbb
xor
inc
mov
cmpsl
pop
ss
add
jo
arpl
sub
pop
call
mov
jb
pop
addl
lahf
xchg
ja
push
xchg
scas
insl
xchg
movsl
gs
jl
sbb
test
lcall
rorl
daa
inc
fwait
pop
popf
test
into
test
hlt
sbb
xor
mov
rcrb
or
ret
fiadds
adc
lods
pop
sbb
inc
xor
aas
call
cld
insl
jb
aaa
lods
cmp
mov
mov
popa
pop
repnz
iret
jo
mov
mov
xor
and
int
cwtl
mov
aam
icebp
test
incl
adc
daa
push
jo
or
lret
cmp
sub
sub
and
jg
mov
mov
cmp
int
scas
push
fwait
mov
pop
xchg
inc
lret
or
aas
mov
add
mov
out
lods
pop
jl
jb
fdivl
push
fisubrl
std
insb
sub
sbb
sbb
dec
push
sbb
int
adc
fs
mov
sub
jbe
call
and
adc
andl
stc
cmp
lds
lds
ss
xor
shrl
pushf
inc
icebp
inc
push
in
push
lock
cmp
xchg
jo
test
aaa
lods
adc
inc
cmp
jl
rcll
test
mov
push
popa
test
sub
mov
out
cltd
cmpsb
adc
xor
fs
mov
adc
sbbb
lods
jns
add
faddl
mov
in
out
xlat
mov
fsubl
test
pop
mov
ja
hlt
test
jnp
mov
inc
fnstsw
shll
int3
mov
les
dec
data16
pop
je
sbb
out
lret
push
rolb
in
mov
ss
xor
jae
dec
mov
orb
jne
insb
or
incb
into
xchg
add
adc
mov
call
cmpsb
and
lret
push
lahf
mov
jo
mov
adc
test
sub
add
jl
andl
or
in
adc
aad
gs
inc
pop
cli
pop
out
addb
push
mov
sbb
in
and
mov
icebp
mov
dec
mov
mov
lret
xchg
xchg
adc
lock
and
pusha
incl
jecxz
sub
lods
andl
sti
fs
mov
jl
and
cmpsl
sti
jbe
icebp
sbb
mov
ror
or
dec
mov
pop
enter
xchg
sarl
cmp
adc
aaa
jbe
movsb
cmpl
fidivs
jl
inc
insb
lds
sub
lds
clc
rolb
sbb
je
mov
pop
fnstsw
fimuls
mov
inc
jp
or
sbb
sub
mov
stos
dec
dec
fsubrs
xchg
cmp
sbb
into
sbb
mov
in
mov
cmpsl
ljmp
push
pop
imul
fistl
pop
stc
sub
cmpsb
std
scas
pop
dec
out
cmp
xor
dec
loopne
sub
loope
cwtl
dec
pop
into
rorb
pop
sar
xchg
decb
push
sub
jno
cmp
fnstsw
push
outsb
pop
push
cmp
subl
sbb
xchg
add
mov
lock
jl
mov
inc
jl
pop
daa
sub
aad
inc
add
in
inc
aaa
dec
cs
push
scas
sbb
or
dec
and
icebp
aad
jae
sub
sar
pop
add
add
rcrl
mov
mov
iret
imul
and
xchg
jg
xorb
push
in
cmc
add
pop
jmp
pop
jp
and
cmp
jbe
pop
mov
fcomps
movsb
lcall
test
cmpb
lret
cwtl
imul
das
popf
cmc
loop
gs
push
sub
int
dec
cltd
call
mov
sub
int3
cltd
jl
add
sbb
das
in
jle
repnz
pop
jmp
adc
dec
and
and
test
movsl
gs
or
mov
repz
sub
add
mov
sub
sub
repz
ret
rcl
adc
test
xchg
jne
mov
aam
mov
insl
out
inc
shrl
or
clc
push
insb
scas
jae
mov
mov
and
jecxz
cmp
cmc
inc
xchg
jb
mov
xlat
nop
adc
scas
icebp
mov
arpl
pop
mov
fadds
and
mov
lfence
fnsetpm(287
call
js
cli
fld
jnp
jbe
dec
cmp
test
ljmp
adc
repz
test
cwtl
push
arpl
mov
sbb
gs
cmp
lahf
push
rclb
xchg
adc
dec
ja
add
push
std
pop
mov
and
and
push
in
mov
xchg
andb
mov
pop
adc
or
rcr
idivl
lock
cmc
out
push
adc
cmpsb
negl
adc
lea
pop
ret
and
jmp
adc
jge
cmp
nop
jb
inc
sub
mov
add
inc
repnz
xor
jle
hlt
leave
ss
pop
inc
fsubrs
outsl
sahf
push
xor
inc
cmpl
lcall
jne
outsl
mov
cmp
adc
jmp
fisttps
out
sbb
mov
or
orb
sub
out
inc
or
inc
sbbl
enter
and
popf
aas
mov
mov
lcall
jecxz
rorl
adc
pop
jbe
mov
mov
mov
jp
pop
shll
das
fdivrs
push
nop
test
pop
cwtl
jb
xchg
andl
dec
aaa
fistpl
jl
aaa
dec
aad
in
subl
push
pop
test
pop
adc
stos
shll
mov
sbb
jmp
xorb
cmpsb
and
push
in
out
lods
xchg
inc
sbb
mov
sub
sbb
shrb
xchg
shrb
bound
pop
subb
or
rcrb
push
lcall
test
repz
sbb
adc
push
dec
stos
mov
icebp
adc
add
dec
movsl
std
push
fwait
dec
cmc
pop
lahf
pop
mov
loope
dec
cmpsl
mov
add
mov
fxam
add
pop
push
gs
cmp
lret
rcll
out
adc
jge
push
out
sub
data16
lea
push
inc
sbb
xchg
and
xchg
call
sarb
pop
popf
pop
xchg
pusha
jae
outsb
push
push
mov
scas
inc
and
lahf
es
ret
insl
jo
mov
insb
cmpsb
repz
and
sbb
lret
ret
adc
into
and
or
mov
popa
call
xchg
or
mov
sarl
mov
scas
mov
xor
inc
dec
jae
shl
fldt
stc
mov
add
shll
mov
sbb
pop
call
popf
sbb
xchg
out
decb
out
lret
std
mov
add
xchg
inc
push
pusha
pusha
imul
pop
ss
xor
dec
clc
xchg
cmp
mov
or
cmp
adc
ret
popf
mov
mov
fmull
mov
adcl
xor
out
dec
dec
popf
out
loop
xchg
pop
into
sahf
sbb
lahf
imul
loope
inc
lret
int
xchg
lock
cmpsl
fmull
in
gs
jno
jae
dec
aas
and
cld
adc
jns
cmpsl
fdivs
adc
sbb
jns
add
inc
fildl
mov
sub
push
imul
sar
mov
enter
cli
testb
cmpsb
push
rcrl
mov
inc
int3
jmp
mov
out
lds
or
xor
andl
push
arpl
xchg
mov
adc
arpl
pop
aam
or
adc
xchg
std
add
xor
xchg
push
mov
pop
jne
pop
inc
sbb
lret
jl
mov
mull
ds
into
sti
mov
cmpsl
mull
int3
pop
and
or
adc
pop
iret
iret
push
test
mov
mov
lahf
enter
insl
mov
nop
pop
cmpsb
xor
and
in
les
fstl
test
neg
or
push
test
jecxz
or
sub
mov
add
jl
or
call
std
or
cmp
adc
mov
js
add
aad
scas
mov
sub
stos
mov
out
xor
push
pusha
pop
push
add
sbb
mov
pop
pop
pop
int3
sbb
inc
es
mov
push
or
adc
jo
push
sbb
add
fwait
push
push
shl
push
mov
add
xlat
adc
cmpsl
dec
mov
jecxz
int
aam
shlb
aam
aaa
jb
repz
and
fstp
jl
call
mov
pop
or
cmc
pop
lcall
scas
push
mov
inc
add
xor
adcl
xor
lea
cmp
add
pop
xor
dec
pop
jo
lret
sub
fsubl
xchg
cmp
in
fcmovnu
xchg
lret
dec
aas
jo
sbb
push
int
pop
arpl
xor
pushf
mov
popa
ljmp
movsl
mov
push
or
add
push
mov
mov
cmp
or
imul
jo
adc
push
rol
pop
lret
cmpb
or
sbb
inc
pusha
das
or
or
int
mov
das
fnstsw
inc
sbb
idivl
jae
fildll
adc
mov
je
in
sub
mov
push
int3
dec
sub
lods
jecxz
mov
dec
imul
cmp
xchg
repz
inc
mov
add
mov
push
jnp
call
mov
cld
sti
push
scas
repz
lods
lret
fwait
jge
cwtl
in
pop
das
out
inc
mov
test
fldenv
add
and
push
ja
inc
sub
cli
jg
cmpsl
jg
pop
in
mov
call
scas
in
fs
inc
push
sub
sub
fucomi
inc
mov
and
shll
inc
mov
sahf
xchg
lahf
fstps
test
arpl
mov
jmp
cld
mov
dec
sbb
mov
push
enter
xor
stos
pop
rep
mov
aam
fisttps
repz
mov
xchg
fldt
dec
cmpsl
pop
push
mov
shrb
fcomi
push
push
stos
jg
and
aaa
jg
in
and
pop
add
sbbl
pop
imul
vphaddbw
mov
ficomps
cmc
cmp
leave
fcoml
jo
xchg
hlt
pop
cld
cmp
mov
and
sbb
out
jno
push
out
hlt
mov
inc
sub
sbb
std
lods
and
push
inc
mov
xchg
push
out
fcoms
pushf
sub
lahf
add
lcall
rol
out
and
lock
and
test
in
cmp
loopne
daa
xchg
add
loopne
xchg
xchg
iret
insb
hlt
sti
cmp
stc
rcrb
adc
dec
es
std
inc
mov
push
jmp
push
sbb
aam
int
ljmp
push
push
inc
inc
outsb
push
pop
test
mov
lea
imul
imul
push
clc
add
shll
leave
sub
mov
pop
inc
or
aaa
dec
inc
pop
push
xor
arpl
adc
jecxz
movsb
mov
xor
addr16
or
pop
jne
icebp
and
call
mov
add
lods
pop
outsb
jns
sbbl
xor
mov
js
loop
frstor
je
push
sub
repz
xlat
in
adc
test
push
addl
addr16
ret
push
xchg
jbe
icebp
mov
ret
dec
add
shrl
add
or
mov
push
mov
iret
add
adc
testl
push
sbb
or
pop
inc
cltd
inc
inc
and
sbb
out
aam
icebp
aas
outsb
xchg
add
sbb
test
sbbl
cmp
or
sbb
ss
mov
into
hlt
in
pop
mov
mov
fcomip
inc
xchg
dec
jae
outsl
pushf
xchg
dec
pop
and
mov
adc
mov
cmp
cli
jns
jne
jge
popa
sub
sub
mov
in
jl
sbb
test
mov
lahf
jg
shlb
inc
addr16
mov
sahf
xchg
stos
adc
sub
mov
movsb
sbbl
jae
addr16
dec
test
lods
mov
cld
sub
nop
dec
in
and
add
addr16
fsubrs
lds
gs
pop
cmp
mov
push
dec
jno,pn
sti
xchg
sub
push
pop
cmp
mov
lea
adc
insb
mov
lods
pop
push
movsl
call
rorb
jno
pop
or
das
mov
arpl
cli
mov
xlat
scas
fwait
xor
cmc
into
int
jo
ljmp
xor
int3
mov
push
rcll
sbb
xchg
or
push
icebp
cmpl
rcrl
xchg
inc
mov
push
xor
in
mov
and
ss
sub
adc
mov
jg
fnstsw
push
sbb
mov
mov
cmpsl
das
cmc
jle
scas
outsl
mov
data16
ret
xchg
lret
ljmp
repz
or
xchg
aas
inc
outsl
push
out
xchg
rorb
xor
add
fwait
push
add
and
add
fcmovnbe
adc
pop
shrb
mov
idivb
mov
pop
pop
addl
xchg
mov
push
adc
or
rorb
orw
mov
rcl
in
out
bound
iret
call
pusha
outsl
mov
xchg
shrl
add
and
adc
adc
xchg
popf
sub
movsb
pop
cmp
inc
push
cmpl
fldl
inc
lahf
ljmp
add
orb
xor
addr16
nop
aad
pop
sbb
lods
js
sub
cmpsl
lods
repz
enter
cmp
test
imul
je
fstpl
repz
add
test
mov
dec
or
mov
jae
pop
aaa
sti
sbb
in
test
xchg
fsubrs
and
insb
mov
xchg
dec
pop
sbb
cwtl
xor
jns
mov
sbb
pop
movsl
lds
push
das
loope
mov
xchg
or
inc
cmpsl
stos
adc
lea
les
mov
mov
or
dec
push
push
mov
loop
inc
push
out
repnz
sub
and
lret
xor
push
les
pusha
fmull
pop
cld
fwait
dec
dec
mov
push
out
in
cli
push
adc
cmp
pusha
sub
cmc
pop
mov
fcmovne
repz
cs
out
adc
pop
cmpb
pop
and
mov
fstps
fisubrl
inc
jo
scas
shll
dec
push
xchg
lods
pop
cwtl
in
mov
adc
pop
and
xor
adc
cmp
cli
das
or
add
xor
pop
cs
adc
dec
call
add
ret
stos
aaa
pushf
xchg
scas
push
int
jg
pop
push
bound
xor
xchg
jo
mov
sbb
or
filds
mov
dec
repz
xchg
push
ret
xchg
test
int
pop
xchg
call
and
jecxz
inc
cld
iret
mov
push
sahf
mov
jmp
mov
add
xchg
lods
jmp
stos
aaa
adc
push
sub
or
xchg
imul
mov
cs
loope
testb
imul
dec
jmp
shlb
mov
outsb
adc
popa
xchg
out
in
movsl
xchg
sbb
pop
inc
xor
repz
and
sub
mov
mov
and
nop
jns
mov
jecxz
filds
aad
nop
aam
inc
scas
lods
xor
xchg
mov
xor
pop
aas
or
dec
jne
mov
pop
inc
or
lcall
imul
jl
popf
lods
or
add
rcrl
xchg
shl
jns
stc
orl
test
mov
xor
mov
xor
dec
cli
loopne
imul
loope
stos
jl
xor
enter
xor
orl
ror
push
mov
jmp
addr16
mov
or
pop
ss
sahf
outsb
mov
aad
gs
es
iret
lea
and
outsl
dec
std
jecxz
int
cmp
ja
fs
xor
sti
xchg
xchg
sub
xchg
stos
inc
out
jmp
je
mov
sbb
daa
popa
and
pop
test
pop
jns
out
jnp
aas
push
jbe
ds
push
pop
push
ss
icebp
push
enter
sub
xchg
insb
sbb
cli
add
cld
adc
adc
stos
xchg
std
sbb
stos
xchg
cmc
insl
xchg
sbb
int
lcall
lock
test
jbe
add
jno
scas
cmp
cmp
lds
jb
adc
daa
sbb
aaa
jecxz
nop
fwait
mov
movsb
daa
fs
gs
je
sub
dec
testb
push
mov
fsubrl
and
adc
dec
pop
pop
inc
inc
int3
std
xor
adc
in
loop
mov
cmp
adc
jnp
pop
prefetchw
or
clc
lret
iret
jae
jnp
insl
jp
and
les
in
or
dec
scas
add
jb
adc
push
and
add
movsb
xlat
insl
mov
inc
repz
dec
push
mov
std
and
pop
stos
movsb
jo
in
out
fimuls
jbe
imulb
xchg
mov
mov
mov
jl
xor
mov
push
ljmp
psubusb
in
pop
inc
mov
scas
adc
dec
add
push
paddw
inc
adc
je
daa
out
outsb
pop
xchg
adc
adc
jmp
push
aam
push
xorb
test
mov
xchg
push
shrb
or
mov
xchg
ja
mov
sub
pop
jle
movsl
cmp
addl
jmp
mov
popf
arpl
out
or
mov
imul
inc
arpl
imul
push
fs
cmp
inc
mov
mov
cmp
out
jbe
pop
das
pushf
inc
jge
shlb
std
sbb
int
push
dec
adc
popl
adc
aas
test
jmp
and
psrlw
pushf
cmp
fldt
fsubl
jge
adc
xchg
insl
loopne
cmp
je
andl
mov
push
mov
xor
adc
mov
pop
mov
mov
push
sbb
mov
aas
test
rcll
dec
adc
lret
rol
add
sub
cmp
mov
ret
loop
loopne
cld
gs
aam
mov
daa
mov
dec
dec
push
insb
ss
inc
push
and
iret
mov
cs
outsb
and
mov
dec
push
push
jge
addl
mov
mov
shlb
cmc
cmc
cmp
jno
dec
jae
das
pop
pop
mov
jb
mov
jl
jns
je
imul
adc
lock
or
test
push
les
mov
dec
popf
data16
jmp
repz
lret
cmova
or
pmulhw
mov
enter
jecxz
pop
pop
push
mov
out
mov
jecxz
dec
cld
push
sub
call
lret
pop
stos
mov
aam
fwait
push
subb
xchg
mov
mov
fwait
xchg
pop
aas
jecxz
sbb
inc
fwait
and
mov
std
inc
mov
xchg
jne
shr
and
cmp
imul
cmc
sarb
push
xlat
inc
loop
or
mov
daa
lret
jl
inc
sbb
push
insb
cmp
dec
ret
cmp
xchg
out
push
je
addr16
movsb
pusha
add
imul
inc
loop
stos
mull
dec
les
jg
inc
sbb
aaa
pop
adc
enter
xchg
mov
cmp
loopne
add
sbb
scas
jp
mov
imul
fcomps
or
jge
jp
cmpsb
jbe
sub
in
rol
loope
stos
push
hlt
cmp
sub
test
out
dec
loop,pn
add
mov
cmp
pop
jns
ss
xchg
movsl
cli
div
mov
int3
pop
inc
inc
imul
insl
lods
cmp
adc
leave
push
xchg
push
sti
pushl
xchg
lahf
mov
mov
jle
into
cmp
es
outsb
nop
jmp
subb
lea
lahf
sub
stos
push
pop
dec
cmpsl
xor
dec
in
repnz
inc
xchg
fwait
push
cmp
pop
inc
sahf
iret
push
sub
mov
test
js
in
push
pop
dec
cmp
mov
jl
aas
inc
dec
sbb
shl
nop
mov
sub
das
mov
fidivl
mov
fwait
leave
ret
xchg
fildl
push
in
insb
xchg
mov
sahf
or
dec
orb
out
push
jb
sub
into
push
sbb
adc
inc
mov
sbb
or
js
pop
mov
push
loop
inc
rcll
jb
xchg
or
scas
movsb
aaa
test
ss
sarb
jo
cmp
dec
mov
jl
jmp
outsb
cmpsl
add
test
push
movsl
int
pop
sbb
and
mov
aad
loope
jle
xchg
pop
cld
pop
mov
int3
jge
int3
xchg
gs
adc
aaa
popa
mov
idivb
stos
xor
push
fsts
pop
jae
gs
stc
ror
xchg
bndldx
mov
and
mov
shr
fsubs
cld
nop
mov
aaa
shl
fimull
push
cld
cmp
cmpsl
dec
mov
add
pop
jb
mov
pushf
jns
jb
xor
mov
clc
adc
lods
fs
jbe
lret
mov
push
aam
iret
dec
test
repnz
fs
into
mov
xchg
push
dec
clc
dec
cwtl
inc
out
jp
mov
or
jmp
cld
icebp
rcll
and
xlat
cld
aas
and
inc
jmp
lock
cmp
sub
sub
mov
mov
jnp
shll
mov
or
popf
fs
lea
xchg
scas
dec
xlat
jae
clc
addb
inc
std
pop
mov
add
xor
jecxz
sbb
aaa
aas
xor
mov
pushf
fcmove
pop
lock
mov
ret
inc
jg
sbb
sub
test
jbe
mov
sbb
sub
inc
in
push
jmp
aam
loop
jno
pushf
call
rolb
inc
inc
dec
scas
pop
out
add
ret
int3
and
mov
lret
icebp
jge
xchg
mov
dec
dec
sub
cwtl
adc
xchg
push
out
stc
lea
lock
push
sub
mov
and
sahf
mov
fmulp
movsb
fstp
fnop
hlt
fadd
inc
into
andb
scas
lds
adc
mov
xor
jmp
ja
xor
mov
lahf
cmp
mov
in
jbe
in
cmp
clc
in
stos
mov
push
adc
cmp
mov
bound
dec
xor
cmpsl
lock
out
std
mov
testb
jns
in
outsb
call
imul
cmp
fnstsw
inc
lea
cmp
adc
ret
or
mov
or
es
xor
pop
inc
loope
lcall
push
mov
fldenv
inc
icebp
push
dec
add
inc
test
sbb
das
xchg
incl
stos
mov
jnp
sub
inc
sahf
notb
mov
xchg
mov
add
into
pop
imul
fnsave
or
mov
stos
cmp
lahf
push
mov
test
cmp
popa
lcall
xchg
iret
in
rclb
add
mov
sub
add
fdivrl
js
gs
mov
xchg
js
jb
xor
push
lods
test
dec
add
jle
loopne
mov
xchg
lcall
inc
add
lret
data16
mov
out
insl
test
jbe
inc
jnp
repnz
rcl
into
les
test
in
add
adc
add
roll
dec
add
fucomi
push
sub
xchg
es
add
pop
insl
mov
hlt
push
sti
fcmovnbe
movsb
leave
clc
mov
loop
cmp
push
jecxz
arpl
rolb
and
or
pop
test
cwtl
mov
adc
sub
adc
mov
pop
loope
push
mov
pop
std
mov
jne
scas
subb
lahf
push
ret
mov
cmp
adc
xchg
fadds
cltd
lods
sub
out
out
fcmovnbe
scas
dec
mov
cld
pop
pop
push
mov
pop
inc
dec
mov
lret
lods
cmp
loopne
or
data16
xchg
adc
ret
ja
mov
sbb
fwait
scas
and
andb
arpl
fnsave
pop
fldcw
fwait
pop
or
dec
in
popf
mov
lret
mov
sbb
push
stos
imul
cmpsl
jns
out
or
inc
insl
sub
xchg
lret
out
adc
mov
dec
into
pop
mov
xchg
ja
push
inc
and
mov
fdivrl
and
dec
movb
leave
inc
pushf
xor
lcall
mov
jmp
jg
addr16
inc
je
in
sbb
fistl
sbb
pop
aad
pop
aam
scas
xor
out
inc
xchg
movsb
sti
cmp
sbb
int3
pop
adc
push
push
xchg
ds
sub
scas
or
pop
cmp
xlat
sub
or
adc
lret
pop
mov
inc
into
cmp
scas
adc
lock
incb
loop
lods
es
out
outsl
adc
pop
mov
in
mov
scas
fs
inc
fisubrs
and
movsl
jmp
adc
xchg
popf
lret
shrl
mov
mov
leave
in
loop
xchg
ds
outsb
xor
stos
inc
sarl
scas
jbe
xchg
cmpsb
or
jne
or
pop
and
xor
jno
push
or
mov
negb
sbb
cmpl
inc
pop
mov
dec
fs
js
xchg
xor
adc
ljmp
add
cmp
mov
add
cmpsl
pop
inc
daa
stos
movsl
es
jno
sbbl
jne
jbe
shrl
test
mov
mov
jp
add
out
outsl
jns
bound
cltd
mov
pop
fidivrl
sub
scas
mov
xchg
outsl
and
or
xchg
sahf
jecxz
jecxz
outsb
mov
daa
mov
aam
xor
sub
movsb
sub
lock
ret
jp
and
loop
gs
cltd
insl
stc
jnp
scas
fadds
test
mov
xchg
sub
fldenv
mov
add
adc
rclb
cli
int
pop
test
dec
lcall
inc
cmp
pop
adc
into
push
dec
stc
out
pop
mov
aad
push
int3
xor
ss
push
xchg
popa
mov
inc
xchg
int
rorl
flds
iret
sbb
data16
mov
lock
div
jb
push
mov
push
mov
pusha
sarl
xchg
xchg
cmp
sbb
pop
cmpsb
loopne
leave
sub
mov
pop
insl
mov
addr16
push
mov
and
cwtl
imul
push
jl
cmp
adc
or
push
cmp
push
adc
inc
mov
std
pop
sbb
sarl
andl
inc
dec
mov
pop
mov
pop
pushf
push
mov
sub
mov
enter
enter
lods
and
sbb
fistpl
pop
xchg
inc
popf
add
push
loope
cmp
int3
xchg
inc
or
mov
inc
cli
jl
in
stc
stos
dec
aas
mov
sub
xchg
sbb
xor
mov
sub
add
mov
les
lods
xchg
ja
pop
dec
jnp
sub
fisubrs
daa
adc
out
lds
fsubl
xor
xchg
xor
es
leave
add
add
fnstsw
xorl
js
fcoms
jbe
pop
nop
shr
dec
mov
hlt
push
lds
push
and
leave
mov
cmp
dec
icebp
int
and
adc
xchg
cmp
pushf
loop
ds
inc
mov
dec
pop
pop
inc
stos
aam
mov
movsl
dec
data16
subb
jl
test
aad
xor
xchg
std
mov
out
inc
jbe
xor
aaa
xchg
out
cmpsl
clc
and
inc
dec
outsb
insl
movl
outsl
stc
add
and
xchg
bound
xchg
mov
adc
add
sahf
jnp
dec
mov
sub
test
outsl
jmp
sbb
pushf
call
jno
leave
iret
fidivs
jb
xchg
inc
pusha
lods
es
inc
fistpl
out
add
sbb
sbb
jns
cmp
adc
push
xchg
movsb
and
xor
and
dec
aam
and
aam
adc
dec
repnz
xchg
fdivrl
in
int
pop
cmpsl
insl
and
push
lods
push
addr16
bound
movsl
repz
pop
adc
dec
addb
movsl
je
out
movsb
fidivrl
xorl
cmp
push
inc
scas
insl
jbe
mov
or
outsl
cli
out
bound
push
lock
cmp
jmp
mull
jo
hlt
mov
dec
xchg
mov
bound
repz
push
icebp
jno
inc
call
pop
loop
into
add
fisttpll
test
mov
iret
dec
lret
repnz
push
jecxz
add
sti
ja
xor
push
fnstenv
int
test
dec
pop
ret
hlt
cmpl
pop
nop
mov
add
pop
jno
decl
jecxz
mov
bound
ja
aam
inc
jecxz
imul
ja
sarl
sbb
stc
aaa
cwtl
push
push
mov
out
rcll
inc
dec
push
sub
gs
xchg
mov
cmp
cmp
jl
imul
adc
out
sbb
cmp
pop
or
dec
in
out
push
inc
add
icebp
lcall
jmp
sbbb
cmp
mov
and
push
mov
insb
mov
mov
iret
push
call
inc
pop
in
fmulp
ja
jne
and
pop
aam
pop
loop
subb
sub
rcrl
out
shrb
xor
arpl
std
xchg
dec
loop
stos
sbb
out
in
xor
mull
pop
movsl
sti
lods
sti
pop
bound
or
aaa
cmpsl
cld
repz
sbb
add
sub
loop
pop
jmp
mov
inc
orb
push
dec
das
stos
into
mov
dec
mov
bound
std
in
cmpsb
stos
add
outsl
cmp
stos
nop
negb
lret
inc
popa
sub
loope
ja
sbb
inc
aas
ljmp
scas
sbb
je
in
aam
xchg
outsl
fstpl
cld
rorb
cmp
and
mov
cmp
push
outsb
pop
in
push
xchg
std
dec
xchg
sub
pop
or
cmp
mov
loop
lods
ja
push
inc
repnz
adc
loopne
xchg
test
add
test
movsb
out
or
push
lods
cmp
pop
dec
nop
pop
push
mov
fnstcw
add
mov
inc
sub
xor
hlt
jns
movl
ljmp
mov
mov
pop
xor
or
mov
je
cld
std
stos
pop
aad
cmp
jns
aad
xchg
sub
in
mov
mov
cli
das
adc
pop
jmp
aas
push
pop
fmull
and
mov
add
lahf
mov
add
outsb
dec
jne
push
lea
stos
jbe
add
mov
and
das
not
imul
pusha
sbb
fistpl
xchg
out
scas
addr16
dec
sbb
push
out
mov
inc
push
loope
in
je
in
xor
adc
ret
or
bound
inc
enter
scas
notb
jnp
or
mov
testl
jo
ror
jl
cmp
dec
mov
jmp
push
push
dec
jbe
loope
xchg
mov
dec
loope
mov
pop
cltd
cmp
insl
lahf
pop
and
cmc
cmp
sahf
popl
mov
inc
cmc
xchg
add
mov
sub
xchg
adc
lahf
xchg
mov
dec
sub
mov
sbb
cmc
xchg
stos
jl
je
fcoml
sub
test
aam
xor
adc
jb
xor
enter
leave
daa
adc
imul
in
mov
and
push
stos
roll
stc
lea
cmp
ljmp
mov
stos
jmp
adc
cmp
push
mov
or
dec
inc
sbb
and
outsb
stos
popa
sti
mov
sbbb
rclb
push
movsb
mov
sbb
js
adc
arpl
jne
push
inc
jge
movsb
fs
rol
pop
mov
push
mov
icebp
xchg
push
aas
push
mov
xchg
mov
push
repnz
or
push
stc
cltd
and
cmc
fwait
add
out
or
sbb
adc
cwtl
sbb
push
jg
mov
stos
mov
and
arpl
insl
cmpsb
fs
jb
test
cmp
shll
jecxz
adc
int3
out
aas
xlat
mov
mov
jae
push
cmp
cld
out
jno
mov
sbb
lret
dec
push
jns
out
mov
in
out
push
rcll
mov
dec
outsb
outsl
int
shll
shlb
jecxz
sub
adc
fcomps
mov
movsb
lret
push
shrb
push
scas
arpl
mov
pop
cmc
add
lds
loopne
pop
cmpsl
dec
mov
sbb
loopne
sti
imul
xchg
pop
ss
loop
jle
aaa
outsl
cli
das
in
sub
mov
xchg
stos
push
in
scas
xor
rcrl
aad
dec
xrelease
bound
xor
mov
pop
mov
cmp
stc
rorl
adc
sbb
clc
pop
dec
rolb
lods
and
sbb
push
scas
bound
bound
add
xchg
fs
idivb
and
insb
mov
mov
push
fs
mov
hlt
sub
add
adc
scas
dec
mov
cmp
divl
jnp,pt
or
sub
lods
sbb
mov
add
sub
mov
jno
sbb
movsl
jbe
in
int
xor
mov
mov
add
sub
cmp
mov
fs
dec
out
divb
lds
jnp
mov
pop
sub
cmp
and
mov
cmpsl
mov
dec
mov
call
int3
push
mov
xchg
ja
jmp
pop
adc
jecxz
inc
add
jle
mov
adc
std
lea
lods
dec
xlat
aaa
mov
xchg
add
push
movsl
mov
inc
scas
lahf
xchg
xchg
lahf
ffree
rclb
pusha
dec
daa
adc
sbb
sub
test
xor
data16
xor
cld
xor
add
les
data16
xor
sbb
dec
jp
push
fldt
test
mov
daa
iret
ret
xchg
cltd
fwait
pop
sbb
and
das
mov
cmp
xchg
push
xchg
push
ss
fmuls
push
lock
push
pop
push
xchg
outsb
and
cmp
push
mov
xor
mov
aas
fldenv
pop
cld
push
jecxz
mov
push
aas
mov
shl
dec
and
cltd
std
dec
and
js
sbb
xchg
and
nop
xor
shlb
inc
imul
stc
test
and
pop
aaa
sti
push
dec
daa
xorb
xchg
dec
jle
insb
and
lods
lods
repnz
loopne,pt
pop
add
loop
leave
dec
sbb
lret
pusha
add
shr
shlb
leave
mov
jbe
lds
stos
mov
push
fs
stos
jo
jbe
pushf
sub
ds
and
jmp
pop
mov
cmp
fsubl
jle
inc
cmp
xchg
dec
adc
mov
fcompl
pop
in
or
dec
js
push
aam
js
mov
dec
pop
fbld
add
mov
mull
xor
ss
fmul
in
rorb
shrl
jne
pop
lods
call
jne
rol
icebp
sbb
sbbb
divl
outsb
ret
push
add
sbb
jl
popa
xor
cmc
mov
pop
lret
je
xor
filds
loope
shl
xchg
out
jecxz
rcr
push
ficompl
fadd
mov
xchg
stc
jmp
mov
mov
dec
fcmovbe
es
add
and
es
dec
sub
jae
outsb
jno
or
sub
enter
add
insl
adc
jle
mov
gs
dec
or
ds
cltd
mov
push
dec
sub
add
jmp
rcr
jecxz
lock
stc
fidivrl
loop
pop
mov
mov
or
or
and
iret
jmp
mov
xchg
dec
int
shlb
xor
or
xor
jns
cli
jns
bswap
adc
icebp
or
scas
test
leave
jl
mov
imul
test
inc
mov
out
sbb
icebp
or
lahf
movsl
xchg
add
push
mov
push
inc
push
adc
or
lods
push
cmp
inc
sarl
push
dec
xchg
push
jp
jecxz
call
sub
clc
pop
sbb
mov
test
lret
std
pop
jmp
scas
xor
sbb
pop
cmp
lret
mov
aas
scas
sbb
jmp
add
inc
or
push
jbe
or
mov
aad
mov
inc
pushl
cmpsb
adc
cld
lock
and
push
xchg
mov
mov
jecxz
xorl
or
icebp
rol
add
jl
sub
add
movsw
imul
pop
inc
aad
mov
jae
cmp
jo
dec
je
addr16
ds
mov
dec
lret
pop
daa
xor
fidivs
loope
scas
lret
or
test
mov
xor
inc
nop
jns
mov
mov
ficoms
sub
cmp
out
das
dec
rclb
and
xlat
std
sar
add
daa
lea
shll
arpl
hlt
ss
nop
sub
mov
in
jp
inc
adc
push
incb
lret
sbb
movsl
sti
or
inc
and
jo
mov
sbbl
out
cmpb
cmp
mov
sbb
sub
mov
pop
or
out
cmc
inc
or
das
mov
xchg
xchg
cmp
xchg
push
adc
sbb
cmpsb
movsl
pop
lret
js
sub
pop
xor
add
xchg
aad
xor
or
pop
lcall
sbb
add
popf
iret
sbb
lods
outsb
pop
pop
js
jle
shrl
adc
dec
cmpsb
cmp
xor
mov
shll
sbb
mov
mov
ja
test
xchg
add
mov
push
arpl
ss
ret
mov
sub
mov
jge
sbb
orl
jbe
sub
mov
cmpsb
es
adc
ds
and
rclb
sbb
mov
stos
jno
lcall
clc
sub
mov
fdivr
cmp
sahf
test
sahf
dec
push
movsb
gs
mov
shrb
repz
adc
dec
stos
gs
rorb
test
adc
aaa
push
pusha
pop
aaa
push
mov
je
pop
pop
imull
xchg
and
aad
cmp
inc
clc
xchg
dec
cmc
dec
pop
inc
flds
dec
mov
lods
push
push
jg
pop
cmp
and
testl
sbb
insb
hlt
sbb
or
loope
mov
xchg
pop
jo
es
xor
in
les
jmp
jb
mov
mov
add
movsb
ret
lret
cs
andl
xor
cld
push
xchg
cmc
mov
mov
adc
nop
mov
cmp
cld
cmp
aad
push
inc
dec
sbb
mov
adc
inc
icebp
jae
aam
sub
mov
cmp
xchg
xchg
jg
sbb
jae
pop
inc
out
pop
adc
cmpsl
push
imul
dec
imul
test
jne
mov
mov
push
push
dec
icebp
dec
xlat
push
add
mov
scas
add
mov
pop
jbe
cmp
test
leave
shll
jl
xor
loop
add
enter
arpl
fisubrl
xor
mov
jo
sub
inc
lcall
adc
inc
test
decl
enter
jecxz
fprem
mov
pop
lahf
mov
dec
mov
pop
bound
lahf
fnstcw
jno
mov
cmp
mov
add
or
icebp
sub
out
inc
xchg
pop
xchg
mov
dec
test
xchg
sbb
loopne
add
outsl
push
test
xor
iret
jg
test
mov
movsl
inc
dec
pop
enter
push
scas
sbb
stos
shrb
xlat
rcl
mov
out
cmp
dec
cmpsb
adc
mov
xrelease
jne
inc
cmpsl
cld
mov
seta
in
dec
push
jp
daa
in
icebp
xor
daa
test
out
mov
lret
cmp
pushf
pop
jge
cwtl
repnz
lds
pop
insl
gs
sahf
sbb
sub
test
andl
push
ljmp
jp
ret
scas
je
notl
add
xor
push
and
mov
aad
mov
mov
or
ljmp
aaa
mov
mov
xchg
mov
add
insl
repnz
loope
adc
inc
dec
mov
push
push
mov
sub
rcll
jb
repnz
mov
lahf
xor
cmpsb
mov
ljmp
sbb
ss
pop
out
fists
in
std
jp
dec
int
add
jbe,pn
stc
and
dec
lret
stos
aad
sub
push
aaa
sbb
dec
cmp
pushf
xchg
fidivs
xor
outsb
inc
jp
addr16
dec
sub
ret
dec
imul
push
stos
aad
scas
fisttpl
dec
push
int3
inc
xor
imul
rcll
gs
jbe
xorb
mov
pop
mov
mul
inc
mov
in
xchg
ja
insl
mov
loope
aam
sub
pop
pop
or
pop
and
pushf
jle
xchg
push
xchg
ret
fstps
cmp
cmp
sbb
les
adcb
push
popf
and
test
mov
sub
pusha
lea
jg
xchg
xchg
adc
lret
jl
test
cmp
jle
bnd
cld
or
inc
ret
cmp
push
lret
out
sub
mov
xlat
and
push
fwait
out
fstpl
sbb
cmc
negb
inc
iret
pushf
push
push
test
addr16
repz
jmp
mov
and
fs
addr16
jbe
repz
nop
pop
sub
adc
adc
jle
mov
clc
pop
sub
push
cmp
test
inc
adcb
mov
mov
mov
push
loope
xchg
sub
sub
out
gs
jmp
in
negb
idiv
in
xor
xor
test
mov
gs
push
loopne
in
stc
push
in
pop
popl
insl
pop
aam
cmc
mov
or
sti
jae
popf
xchg
ljmp
pusha
pop
xor
adc
jae
in
dec
notl
imul
stc
push
into
les
jne
clc
add
addr16
cmc
stos
mov
push
push
inc
ss
xor
sbbb
push
xchg
rcr
lock
sbb
mov
jle
movsb
push
push
es
and
repnz
mov
push
push
insb
xchg
mov
dec
fdivrs
push
shrb
adc
mov
in
mov
sbb
mov
outsb
push
stc
push
inc
cmp
jns
js
adc
push
jmp
pop
fistl
pop
sub
sbb
in
push
fwait
add
push
adc
leave
test
sub
aas
ret
jbe
cs
push
loope
mov
adc
mov
clc
jp
pop
scas
sahf
dec
insb
subb
in
loopne
je
scas
mov
popa
push
jno
mov
pop
ficoml
rcll
xchg
repnz
ficoms
jns
sbb
outsb
add
add
bswap
pop
test
nop
jmp
iret
and
sub
ret
push
and
popa
fldenv
jo
rcr
data16
or
cmp
lret
movlps
inc
scas
dec
push
imul
xchg
cmc
aam
lock
jb
dec
cmp
inc
popa
jns
add
push
xlat
jbe
xchg
cmp
enter
mov
emms
cwtl
enter
clc
rorb
bound
and
cmp
scas
inc
jp
mov
leave
mov
push
in
pop
jg
xor
hlt
mov
sub
aam
adc
ljmp
lret
pop
and
xchg
call
repnz
mov
push
lds
mov
cs
dec
adc
mov
call
test
repz
sbb
scas
push
dec
push
invd
mov
scas
sbb
push
jge
mul
xchg
rcrb
fs
cmp
pusha
jge
lods
popa
in
mov
repnz
sub
hlt
mov
aaa
sti
fbstp
enter
bnd
mov
shll
mov
mov
dec
cmp
push
loopne
xor
rcr
jb
lahf
add
cltd
ret
add
mov
sub
add
ss
fstpl
jg
in
push
dec
into
imul
jnp
xchg
nop
icebp
mov
mov
add
pop
adc
xchg
sbb
push
or
inc
mov
lock
or
les
cmpsb
xor
xor
ret
mul
adc
mov
inc
outsb
mov
mov
push
dec
push
xchg
dec
aam
xor
xor
mov
jp
mov
jnp
push
repz
jmp
or
cltd
aad
ljmp
arpl
enter
cmpsl
test
mov
pop
xor
and
mov
mov
test
lahf
inc
arpl
aam
pop
cmp
dec
sbb
bound
in
ss
inc
dec
sub
xor
and
cltd
mov
mov
fprem1
cmp
and
mov
insl
test
jg
pop
push
ret
insb
xchg
lods
clc
xor
fwait
and
jae
movl
cmp
pop
hlt
xor
daa
pushf
inc
fstl
andb
scas
xchg
pushl
test
pop
cltd
int
cmc
jbe
cld
out
sbb
movsb
inc
add
adc
dec
mov
push
setnp
adc
daa
pushl
xlat
adc
pusha
push
xor
roll
adc
ja
lret
inc
fimull
ss
js
addr16
push
repnz
adcl
shlb
jmp
sub
loope
popf
cmp
or
mov
inc
xchg
bnd
adc
test
leave
xlat
pop
push
sbb
repz
adc
std
daa
fidivrl
adc
ljmp
push
mov
sbb
mov
aad
popf
push
xchg
lret
mov
jmp
mov
pop
movsb
add
cmp
and
lock
jmp
leave
push
dec
xchg
popa
loope
xor
out
mov
enter
in
addl
andl
loop
mov
icebp
aam
loopne
mov
leave
arpl
in
loopne
out
lret
add
push
sahf
xchg
cltd
sub
pop
gs
jmp
mov
pop
mov
cmp
push
jnp
pop
dec
push
jl
xor
stos
daa
cld
dec
shl
pop
jnp
ret
clc
inc
fldl
imul
pop
pop
test
sub
jo
pop
cs
or
sbb
addl
mov
popa
dec
sbb
ror
xchg
les
adc
leave
and
shlb
push
mov
aam
inc
jmp
mov
jb
inc
mov
mov
mov
js
xchg
sar
push
dec
mov
cmpsl
mov
sbb
popa
adc
sub
dec
pop
js
daa
daa
sbb
iret
xchg
stc
popa
inc
push
addr16
in
add
repnz
outsb
loop
xchg
xor
push
mov
repz
std
es
push
push
and
push
mov
ret
mov
leave
daa
clc
sti
lahf
cmc
jmp
clc
in
clc
hlt
pop
mov
add
jecxz
xchg
sbb
jo
ret
xchg
mov
xchg
xor
in
lcall
dec
ss
mov
mov
arpl
scas
jae
dec
cld
movsb
push
adc
push
sub
adc
out
xchg
jmp
xchg
push
shrb
add
add
je
imul
mov
iret
insb
shll
sub
xchg
pop
mov
cmc
push
movsl
nop
in
adcb
jecxz
fwait
test
mov
aad
lret
mov
sub
lock
or
push
nop
mov
dec
aad
cld
and
fsts
icebp
faddl
cwtl
aam
cmpsl
decb
fldcw
mov
adc
and
lods
cmc
test
xchg
push
cmpsb
cmp
pop
jne
stos
sbb
pop
fwait
ss
or
push
jbe
stc
mov
fdivrl
out
outsb
rolb
push
jmp
push
push
and
add
cmpsb
adc
lock
push
pop
or
out
pop
loop
mov
cmpsl
imul
lds
pop
cmp
push
mov
movsb
out
add
jecxz
jmp
dec
xchg
das
pop
into
cmpsb
push
push
fwait
cmp
adc
insl
sbb
inc
scas
int
sbb
cmp
lret
scas
out
mov
xor
add
cmp
or
fmul
cmp
jl
mov
inc
mov
stc
popf
push
pop
insb
xchg
or
inc
jo
test
rclb
cmpsl
push
and
push
xor
hlt
arpl
loop
stos
pop
push
loope
push
nop
movsl
xor
and
jl
jo
test
mov
data16
xor
mov
iret
mov
adc
es
pop
mov
mov
and
xchg
lods
cmp
pop
sbb
dec
pop
sub
pop
cmpsb
pop
pop
in
enter
test
sti
js
mov
dec
into
xchg
xchg
outsl
rolb
pop
cltd
aad
cmp
mov
cmp
cmp
xchg
mov
and
lahf
pop
jg
shll
repz
xchg
in
jnp
xchg
adc
dec
xchg
sarb
loope
scas
push
outsb
mov
lret
pop
xor
sub
cmpl
mov
xchg
inc
sub
and
ss
mov
jbe
daa
dec
imul
mov
mov
cmc
mov
push
subb
fsub
popf
mov
das
push
push
cltd
scas
test
dec
jns
jb
dec
sbb
mov
hlt
jo
mov
mov
mov
pop
stos
xchg
push
subb
inc
pop
inc
add
cltd
inc
xchg
xchg
repnz
mov
subps
jo
jle
mov
in
pop
xor
mov
cld
jle
pinsrw
sbbb
pusha
jmp
testl
and
test
out
jmp
and
fdivl
and
mov
push
mov
outsb
mov
lcall
ret
rclb
movsl
pop
lds
jl
clc
cmpsl
repz
jge
cmpsl
jmp
xorl
sbb
jmp
movsl
insb
orl
and
push
ret
pusha
mov
add
inc
mov
stos
push
jecxz
testl
aas
mov
push
orl
cmp
sbb
mov
xor
clc
xchg
ret
push
clc
push
nop
cmpsb
jge
mov
xor
sbb
rcrb
pushf
leave
dec
rcrl
push
es
std
xchg
out
int3
dec
push
xor
mov
fcmove
xchg
pop
jmp
std
push
repz
sahf
or
cmp
dec
xor
mov
mov
das
ss
imul
sar
dec
dec
subl
xlat
leave
scas
xor
push
sti
pop
or
mov
inc
pop
jge
sbb
stos
shl
add
divb
iret
daa
add
dec
jb
popf
fmull
scas
cmp
add
imul
adc
xor
mov
pop
movsl
arpl
add
repz
test
push
mov
cmp
mov
pop
jl
mov
pop
stos
dec
or
cltd
dec
ret
sbb
sti
inc
mov
inc
xchg
pop
test
outsl
add
jp
push
push
call
and
mov
mov
xlat
jmp
lret
push
sub
lds
pop
mov
test
sbb
mov
mov
subl
or
test
jno
pop
lds
jns
push
jnp
je
sbb
inc
jge
jae
cmp
add
push
or
lock
add
shrl
cs
pop
clc
fcmovnbe
mov
cltd
cli
adcb
shrb
jge
or
dec
inc
ljmp
out
jmp
add
push
loop
mov
adc
cltd
mov
xchg
lds
xchg
pop
mov
cmp
pushf
pop
int3
xlat
movsb
cmp
les
repnz
les
xorps
or
outsl
and
or
dec
dec
das
jno
int
cs
repnz
std
mov
jo
sti
rolb
or
lahf
mov
cmp
stos
pop
xor
mov
pop
dec
mov
xchg
out
add
inc
jo
xlat
xchg
ljmp
jle
sti
or
out
push
test
ret
cltd
test
les
aaa
inc
mov
cmp
pop
or
add
inc
int
and
mov
mov
fadd
in
js
sbb
pop
mov
pop
inc
test
adc
jnp
cli
je
mov
cmp
into
or
stos
cs
lret
sub
iret
stc
push
stos
orb
fadds
or
mov
out
mov
push
clc
rcrb
mov
jno
daa
aam
xchg
and
jbe
cmp
lret
jp
fstpl
test
jmp
mov
inc
push
jns
sbb
mov
cwtl
and
jbe
shlb
pop
popf
fmull
or
jnp
test
mov
ffreep
clc
call
or
arpl
sti
xor
jl
xor
sbb
jmp
inc
xchg
xchg
push
sbb
or
inc
xchg
mov
icebp
pusha
pop
ret
xor
cmpl
jnp
ljmp
jnp
mov
mov
push
mov
cmp
in
push
mov
and
lret
sbb
or
stos
lret
scas
fmul
add
aaa
inc
mov
test
adc
gs
adc
sub
add
aas
out
sti
adc
xor
jno
test
jecxz
dec
std
push
shlb
cld
dec
int3
mov
jns
in
call
xor
stos
lea
imul
lcall
dec
hlt
dec
ss
loope
ret
adc
mov
imul
mov
popa
push
fwait
shrl
sahf
lea
cltd
mov
xlat
lods
xchg
nop
dec
jne
xlat
lock
sbb
scas
fucomp
popf
pop
imul
push
sub
dec
loop
cmp
outsb
bnd
cmpsb
xchg
xlat
pop
cmpsb
int
movsb
sbbl
mov
pusha
mov
das
sbbb
push
cs
mov
sbb
adc
jns
xlat
test
or
cmpsb
sub
sub
fmulp
stos
add
imul
fnstenv
stos
xchg
adc
sbb
inc
sti
pop
aaa
dec
repnz
sub
xchg
das
mov
pop
adc
das
sub
mov
dec
adc
push
je
aad
push
ret
gs
cld
mov
jmp
inc
daa
stos
xor
and
cmp
inc
stc
insl
xchg
inc
fidivs
cld
cwtl
xchg
xchg
pushf
fisttps
jns
loop
sbb
push
std
sbbb
pop
xchg
testl
pop
xor
imul
or
imul
sub
lea
out
loopne
sbb
xor
xchg
dec
adc
adc
pop
dec
push
aas
pusha
je
rorb
jmp
lods
rcll
gs
out
sbb
mov
js
clc
mov
sub
adc
popa
fwait
sahf
outsb
xor
cmp
and
cld
les
daa
mov
sub
xor
mov
mov
sbb
cmc
xchg
pop
js
lds
shll
pop
rorb
and
test
jo
fs
in
cmp
ret
push
ja
out
dec
xor
pop
stos
inc
rcl
cmpsl
shll
dec
pop
imul
mov
popf
fwait
es
inc
mov
lcall
jge
or
mov
xchg
inc
out
int3
loop
into
push
add
repnz
mov
loopne
fs
std
add
inc
fdivrs
or
xor
inc
mov
sub
push
jbe
xor
femms
aad
adc
jbe
mov
mov
add
and
pop
ret
push
stc
mov
mov
mov
sbb
push
mov
sarb
aam
aaa
mov
shrl
out
cltd
sub
dec
rorb
xchg
in
insb
fcomps
cmp
mov
push
xchg
divl
out
sub
insl
sub
xor
push
sub
sub
mov
js
out
insb
jnp
es
test
jo,pn
addr16
push
aam
sbb
fadds
das
push
scas
inc
sbb
stos
scas
adc
sub
or
std
push
mov
mov
push
aad
ds
jne
sbb
lock
push
inc
test
lock
test
das
mov
pop
push
outsb
mov
mov
data16
data16
add
mov
add
cmp
mov
rorl
cltd
inc
mov
bound
mov
xchg
movsb
adc
mov
pop
mov
lcall
lock
stos
sub
and
cmp
xor
sbb
adc
sarl
jns
outsb
cmp
in
ror
lret
imul
and
xor
movsl
xor
dec
dec
jnp
push
loop
je
out
cltd
lidtl
fists
je
sub
mov
pop
or
leave
push
cmp
aaa
sbb
stos
add
imull
add
in
push
stos
push
or
imul
pop
mov
inc
sti
imul
cwtl
rclb
pop
ss
adc
push
xlat
or
inc
add
mov
xor
daa
and
jge
mov
adc
sub
dec
rorl
arpl
fsubl
outsl
pop
mov
and
je
out
push
lock
pop
inc
adc
daa
xlat
and
fcoms
xchg
fsubrs
or
loop
xchg
cli
outsb
sbb
and
test
push
fidivl
pop
stos
dec
or
in
jecxz
push
es
cli
pop
fnstsw
push
xlat
jp
call
sbb
xor
cmp
mov
cltd
add
in
loop
mov
roll
inc
inc
shll
adc
decl
pop
push
or
in
inc
inc
mov
jnp
sbb
cmp
insb
push
sub
inc
mov
mov
or
imul
int
pop
test
int3
and
push
in
test
shrl
scas
bound
dec
popa
mov
mov
and
fiadds
movl
sbb
iret
xchg
cmpsb
mov
call
jno
fsin
scas
hlt
lcall
adc
add
mov
sti
jb
sbb
insb
add
and
jns
fwait
jge
and
jb
push
test
sarb
test
les
loop
ja
pop
test
sbb
cmpsb
mov
rol
movsl
push
cwtl
xchg
loop
arpl
leave
imul
cmp
jp
data16
outsb
in
scas
adc
adc
pop
repz
cmc
jmp
test
adc
push
cmp
fiadds
ja
jb
gs
and
lahf
and
cwtl
pushf
pop
push
cli
jo
push
sti
xlat
add
pop
lret
jo
mov
in
mov
fisubs
test
aad
adc
rolb
gs
inc
push
xchg
jb
fistl
dec
xor
addb
adc
arpl
add
mov
and
scas
int3
mov
xchg
fucom
dec
cld
stc
mov
fcmove
xchg
ss
pop
xchg
je
leave
cwtl
mov
call
xor
sbb
jne
lds
dec
imul
fcmovne
cs
mov
pop
jbe
insb
push
outsb
cmpsb
cmp
or
lahf
cmp
cs
aad
xor
xchg
shlb
inc
mov
dec
or
xchg
rcrl
pop
pop
cmp
dec
inc
push
sti
or
mov
sbb
shrl
jecxz
jno
enter
jecxz
stc
inc
xchg
addr16
in
and
lahf
mov
and
test
mov
daa
jp
mov
xchg
aam
sub
icebp
add
or
fchs
or
add
xor
mov
in
rcrl
cmp
push
add
roll
lock
adc
xchg
test
jge
inc
jne
imul
hlt
nop
adc
ficoms
sahf
test
mul
das
repz
movsl
pop
and
fists
pop
xchg
fdivrs
inc
jle
jns
out
dec
jg,pt
shrb
jb
adc
rclb
in
les
ret
cli
out
mov
lret
in
fmuls
mov
jmp
cmp
lret
push
bound
ret
mov
or
inc
xor
repz
jo
data16
mull
mov
stos
pushf
dec
lret
mov
inc
sarb
sbb
addr16
jo
aad
cmp
xchg
out
test
or
stos
and
orl
or
jmp
inc
adc
inc
pop
inc
pushf
call
jne
fildl
daa
lret
imul
inc
pop
in
dec
fwait
push
in
subl
notb
or
subb
inc
mov
pusha
jb
repnz
mov
xchg
iret
xor
push
lea
sbb
std
sbb
mov
mov
out
scas
cmp
and
subb
jp
or
fs
inc
xchg
sub
test
push
roll
shlb
out
sbb
cmpsb
cmpsl
data16
mov
imul
sub
out
aas
mov
das
testb
pop
xor
pop
add
dec
push
sub
mov
arpl
sbb
mov
cmp
loop
sbb
mov
andb
lret
rcrb
mov
jg
push
xor
icebp
or
insl
xor
dec
mov
jg
pop
mov
and
int
out
cmp
add
cli
push
mov
xor
mov
mov
sbb
sbb
jns
popa
push
adc
adc
mov
xor
mov
call
push
add
and
mov
jge
cmp
lock
insl
out
fidivrs
jno
pop
and
push
fs
fwait
xchg
rcrb
das
into
pop
jb
std
jmp
push
jb
jbe
fmuls
dec
cmp
adc
mov
cmp
dec
loope
adc
dec
mov
xor
inc
add
add
nop
xor
mov
mov
sahf
loop
fs
sub
adc
mov
push
aas
insl
xchg
mov
in
dec
or
fisubrl
es
fwait
mov
add
mov
pop
mov
leave
imul
adc
pop
loopne
dec
adc
add
into
fisubrl
sub
xchg
fsubr
int3
nop
stos
ja
sub
in
addl
repz
in
into
fstps
jp
cld
sti
inc
sahf
dec
mov
mov
jp
mov
lret
rcrb
jmp
arpl
dec
push
sub
ja
arpl
std
xchg
scas
xchg
fistpl
lret
pushf
dec
aad
mov
loope
pushf
pop
fsincos
add
push
insl
jmp
jl
arpl
jle
rcrl
pusha
inc
inc
xor
pop
and
inc
gs
cmp
mulb
push
or
sahf
cmp
pop
and
sarb
lret
subb
loopne
ss
test
inc
mov
adcb
ret
es
les
sarl
inc
mov
jp
push
das
lahf
cmc
mov
repz
sbb
dec
test
inc
out
js
lcall
daa
test
fcoms
jg
inc
xchg
loop
push
repnz
mov
cmpsl
sbb
ret
push
imul
stc
imul
mov
push
out
adc
mov
mov
lret
and
push
xlat
mov
cmp
lods
pop
or
and
sub
das
dec
cmp
adc
inc
add
and
lret
loope
iret
add
push
pop
mov
and
sub
imul
and
xor
das
popf
xor
lret
out
mov
jle
push
jmp
ljmp
jle
push
cmc
lods
pop
shlb
push
gs
fisubl
push
shlb
dec
je
aaa
test
and
pusha
mov
sbb
xchg
jp
fists
or
scas
jg
jae
cli
sbb
xchg
dec
mov
loopne
cmp
fsts
mov
mov
rorb
mov
stos
or
jns
aas
pop
fiadds
aam
cmp
sub
pop
pop
scas
sbb
fisubs
fisttpl
lgs
jb
fiadds
jae
mov
imul
and
outsb
popf
test
lods
cwtl
xchg
mul
scas
pop
jge
subl
xchg
sarw
sti
xor
in
insl
mov
pushf
rcr
rorl
lods
gs
inc
dec
or
out
sbb
out
mov
mov
xchg
pop
jno
dec
adc
in
jecxz
add
call
stos
mov
popf
push
jb
xor
pop
movl
mov
rclb
shrl
gs
dec
inc
sbb
arpl
inc
scas
mov
add
add
sbb
and
mov
xorb
cmpsb
mov
mov
arpl
mov
fs
ret
dec
sub
fadd
out
xor
jl
loope
jb
mov
push
fdivs
ds
into
mov
stos
test
mov
adc
mov
xor
mov
movl
cwtl
and
cmp
and
mov
sbb
into
pop
adc
into
dec
mov
jl
cs
cmp
dec
mov
out
movsl
push
jge
xchg
dec
aas
std
mov
pushl
mov
fwait
lods
xchg
cld
pop
in
in
cmp
aas
adc
int
sub
xchg
bound
cmp
sbb
addb
imul
pop
imul
mov
pop
xchg
adc
jecxz
or
xchg
sub
pusha
daa
add
mov
xor
nop
push
sbb
into
push
js
mov
outsl
add
cwtl
xor
push
fwait
pop
push
pushf
mov
push
popf
stos
jmp
sbb
loopne
xchg
imul
popa
ss
and
dec
cmp
add
aaa
fistpll
test
jle
and
or
mov
cmp
adc
fisttps
or
pop
dec
jmp
push
adc
dec
incb
ljmp
cmp
test
lcall
mov
popa
rcrl
js
ficoms
repz
hlt
cmp
and
inc
adc
inc
xlat
sbb
ret
aaa
and
inc
faddl
nop
mov
dec
movsl
xor
add
js
lds
dec
adc
xor
popa
aad
and
mov
and
push
push
and
jge
jbe
scas
inc
inc
mov
aam
aas
in
test
and
mov
and
mov
add
xorb
popa
mov
xchg
popa
scas
test
cld
int3
fdivr
mulb
push
mov
push
push
cmp
sub
sti
fldcw
mov
ret
cltd
push
mov
loopne
movsl
dec
addr16
imul
xchg
sbb
jbe
or
popf
out
inc
mov
js
dec
adc
pop
dec
lcall
xor
lahf
xchg
jmp
jb
pop
mov
sbb
pop
mov
and
add
or
add
rol
ljmp
out
xchg
mov
adc
arpl
emms
pop
mov
aaa
rcrl
jne
inc
aad
cmp
shl
neg
fistps
or
inc
imul
imul
fisubrl
mov
push
pop
je
mov
inc
std
paddd
test
cli
fildl
inc
data16
jne
popa
pop
daa
repz
std
push
jmp
js
push
in
push
ss
jne
out
push
xor
sahf
shl
dec
xor
xor
fistl
lods
inc
sub
sub
xor
out
loopne
leave
jmp
add
idivb
push
and
int
imul
andl
jle
fidivs
inc
pop
mov
loope
mov
cmp
mov
xor
ljmp
leave
sar
das
test
pop
and
cmc
cli
jb
jbe
mov
insb
mov
jnp
mov
in
push
ficomps
leave
add
neg
dec
push
mov
push
mov
xchg
mov
mov
mov
clc
icebp
shl
xor
and
ficompl
adc
sub
xor
cli
fwait
ret
push
and
mov
leave
out
adc
test
sub
add
cmp
mov
lret
cmpsl
std
adc
adc
jns
int3
or
dec
adc
popf
adc
ret
cld
pop
stc
iret
jae
jg,pn
insb
or
es
adc
popa
test
mov
loope
and
dec
cli
mov
mov
clc
jg
sub
orl
data16
js
pop
sub
xor
pop
sub
jo
and
das
shll
les
and
dec
mov
popa
ds
push
aam
ret
hlt
ja
rorl
cmp
cwtl
popa
xchg
cltd
sbb
pop
ficoms
or
ds
cld
sarl
mov
pop
mov
int
insb
xor
ror
stos
out
shll
imul
xchg
add
ljmp
push
hlt
sub
popf
xor
inc
out
cmpsb
lea
bound
cmpsl
pop
imul
scas
sub
pushf
or
movsb
ret
sub
sahf
out
push
jge
cmc
std
cmp
push
ja
mov
mov
add
cltd
mov
mov
dec
or
in
mov
and
les
jae
push
or
mov
or
ljmp
loope
fwait
out
dec
ja
scas
push
mov
adc
gs
test
invd
add
jg
ret
dec
daa
push
jbe
xchg
xchg
fnstcw
pop
ljmp
pop
movsb
pop
lahf
mov
mov
ja
and
nop
cmpsb
inc
mov
test
mov
inc
or
xchg
mov
jbe
xchg
jle,pt
dec
cmp
dec
inc
cli
out
or
xchg
jb
in
fists
iret
cmp
jb
hlt
sbb
pop
mov
movsb
or
repnz
pop
cmpsl
rolb
xor
pop
sahf
lds
addl
cmpsl
push
xor
xchg
lods
jle
sbb
insl
stos
fiadds
jo
dec
rcll
mov
iret
dec
sti
push
daa
mov
cmpsb
repnz
dec
xchg
and
jae
fsts
out
lcall
mov
shll
lds
repz
lahf
lret
mov
stos
hlt
push
ret
jle
mov
push
test
jb
push
fcom
scas
sub
dec
push
mov
xchg
and
test
cwtl
cmpsl
mov
cmp
ficoml
xchg
ret
fcoml
ret
add
nop
or
dec
jp
fs
push
xchg
cmc
lods
mov
test
push
rcrl
cmc
je
push
jo
sbb
jmp
icebp
ja
ss
xor
push
jl
or
add
or
sub
shlb
pop
mov
bound
adc
push
mov
adc
test
mov
in
pushf
icebp
popa
stos
je
icebp
sbb
mov
xor
or
sub
jb
xlat
cmp
adc
arpl
push
and
out
loope
push
mov
cli
jnp
lret
bound
in
jle
or
jbe
pop
sahf
sbb
inc
out
inc
pop
cmp
mov
xor
xchg
andl
push
adc
sarb
inc
xor
push
les
shll
and
add
pop
xor
inc
ffreep
stos
std
xlat
and
fmuls
pop
js
push
jns
sets
xchg
sbbl
lds
movsl
mov
push
scas
fistpl
mov
sbbl
icebp
pop
lret
rolb
jge
int
aam
push
sbb
scas
subl
rcrb
out
mov
and
sub
out
loope
adc
and
shlb
fldt
rcrb
sbb
pushf
push
cmp
das
and
mov
data16
push
xor
xor
cs
stc
insl
mov
push
xor
pop
imul
adc
je
ss
lea
dec
arpl
cmpsb
cmp
adc
aas
dec
out
push
and
in
orl
fadd
sbb
jb
mov
cmp
cmpsl
or
mov
xchg
js
int
clc
repnz
jne
or
cmp
mov
popa
push
mov
enter
dec
push
jo
sbb
and
insb
mov
and
movsl
sti
adc
mov
out
cwtl
push
inc
popa
jp
in
inc
add
jp
vorpd
popf
imulb
push
rcll
jmp
push
cmc
pop
cmpsl
ljmp
aas
cmpsb
mov
out
sub
sub
or
sbb
cli
jne
shrl
ljmp
rol
scas
cmpl
mov
xchg
test
imull
mov
aad
pusha
int
cmp
mov
cmp
cmp
leave
xchg
loope
sbb
adc
aas
test
jo
inc
xchg
push
pop
cmp
lret
call
enter
mov
fwait
push
or
sbb
mov
idivb
xor
jmp
js
bound
sub
or
sub
imul
push
xlat
mov
or
fisttpll
leave
lds
inc
scas
jo
je
enter
rcrl
cmp
repz
loopne
int3
or
hlt
lcall
or
rcrb
sti
mov
and
outsl
cmc
inc
hlt
lret
and
popf
sbb
adc
fsubl
jo
push
arpl
rcr
cmp
sbbl
loope
add
lods
mov
mov
js
push
negl
pop
aaa
repz
pop
mov
adc
inc
jmp
cmpsb
cmp
loopne
outsb
negl
rolb
xchg
clc
pop
shl
pop
inc
sub
xchg
xor
rolb
sub
mov
sub
data16
int
push
es
cmc
fisttpl
sub
add
xchg
jb
clc
mov
dec
adc
add
push
jecxz
pop
out
xor
dec
and
call
jnp
xor
rorb
into
ljmp
stos
dec
push
adc
pusha
pop
fisubrl
movsl
mov
into
cld
aaa
jb
mov
in
inc
scas
push
mov
lds
push
push
and
fcompl
jae
fwait
inc
out
out
cld
add
daa
orl
pop
fnstcw
xchg
scas
cmp
popf
repnz
and
bound
mov
jnp
xor
jne
xchg
lock
mov
mov
add
and
stos
mov
sub
imul
mov
jne
leave
or
push
push
jbe
mov
sahf
cltd
or
int3
pop
je
icebp
sbb
mov
dec
sub
lods
shlb
mov
sub
sbb
pop
jae
push
xchg
sbb
stos
xchg
dec
xchg
or
insb
pop
sub
addr16
scas
shll
push
jno
test
xorb
imul
jecxz
outsb
lds
push
xor
bswap
mov
jmp
xchg
pop
xchg
xchg
sub
cmpsb
xor
sbb
xor
adc
or
mov
test
daa
test
xor
jae
test
test
out
add
push
mov
scas
enter
aam
mov
cmpl
jge
inc
mov
cs
scas
and
lret
sti
fsubr
movsl
mov
je
fdivl
jae
mov
push
movsb
insb
dec
or
and
add
mov
cmp
dec
es
ret
jle
jae
or
fcmovu
mov
ret
arpl
add
xchg
mov
jge
or
xchg
mov
loopne
jne
or
mov
cmp
mov
fwait
in
dec
mov
mov
cmp
inc
leave
test
pop
enter
mov
xor
adcl
sbb
cld
aad
mov
add
ret
or
jge
mov
push
jne
xchg
mov
cmp
add
sahf
into
pop
das
pop
fnstsw
push
adc
test
pushf
fimull
sub
ret
int3
cmpsb
xor
or
mov
and
ror
ljmp
lods
mov
cmp
dec
inc
hlt
xlat
es
sub
jle
xor
and
or
sar
cmp
repnz
repz
sbb
cmp
lret
xlat
scas
push
xchg
or
pop
lret
jl
jmp
inc
sub
fisubl
inc
sbb
lcall
repz
pushf
jno
pop
inc
pop
repnz
rcrb
push
and
mov
lahf
imul
push
dec
ret
clc
test
cmp
scas
es
pop
addr16
pop
pop
pop
out
popa
jge
inc
sbbb
aas
mov
xor
outsb
push
jecxz
popf
fldt
jno
push
int
test
lahf
dec
jns
sub
xchg
jb
mov
cli
int3
xchg
inc
xchg
lods
dec
jne
icebp
fidivs
adc
loop
or
mov
leave
in
sub
test
out
mov
dec
mov
inc
adc
fwait
aad
ds
lcall
sbb
orb
jae
push
inc
push
xor
cs
fistps
lock
fisttpl
stos
inc
cmp
adc
jns
aam
daa
sbb
movsb
xor
push
ljmp
scas
jecxz
xor
rol
cwtl
in
push
lock
jno
repz
dec
je
icebp
jns
popf
addr16
je
inc
push
jne
mov
fs
bnd
sarb
jmp
jnp
add
imul
aaa
stos
push
sub
insl
out
sub
stos
test
jnp
pushw
pop
outsb
add
pop
inc
jge
mov
sub
scas
ss
pop
adc
push
sbb
jecxz
and
xor
addr16
or
dec
jno
dec
pop
mov
aas
and
mov
adc
jecxz
push
scas
inc
js
movl
xchg
inc
dec
jle
movb
in
enter
mov
mov
cmc
and
add
data16
pop
inc
xor
clc
arpl
mov
in
inc
xchg
popf
in
in
inc
xor
mov
or
notl
jg
jbe
shrl
test
icebp
xor
mov
pop
lods
mov
mov
pop
push
mov
lret
push
dec
std
mov
and
mov
jne
rcrb
popf
daa
inc
mov
and
pop
and
lods
pop
xchg
add
xor
push
and
mov
movsb
mov
ljmp
les
pop
push
sbb
mov
out
xchg
loop
sub
test
jo
mov
jge
push
lods
adc
stc
mov
insl
push
mov
push
popf
iret
adc
movsb
lret
fimuls
xlat
dec
aad
inc
jl
jecxz
mov
enter
outsb
lea
xchg
jb
push
lret
aas
pop
cmp
inc
pop
jne
js
push
out
jne
lahf
pop
mov
insl
mov
xchg
pop
scas
cmp
push
rclb
cld
and
add
faddl
mov
cmc
dec
in
adc
fildl
mov
cmp
push
stos
out
sbb
inc
cmc
or
xchg
aaa
sub
sbb
xor
push
cmp
push
jp
mov
mov
divb
orb
js
hlt
roll
xchg
test
int3
mov
insl
pop
add
shlb
dec
dec
out
jp
pop
push
mov
xchg
inc
cmp
and
repz
ljmp
fstps
fwait
aam
mov
lods
or
cld
clc
inc
fdivrl
aad
rclb
cmp
scas
xchg
loop
fists
mov
jge
pusha
ret
fidivrl
jl
pop
loope
xor
aaa
or
mov
movb
int
dec
adc
es
pop
dec
lahf
adc
xchg
sbb
aaa
mov
jne
jne
add
jl
fidivrl
xchg
mov
leave
cmp
fucom
mov
out
cmp
gs
xchg
sbb
and
mov
incb
scas
rcrb
and
ret
dec
sbb
xchg
xor
adc
xchg
xchg
scas
scas
push
ficompl
jmp
outsl
sbb
leave
sub
rclb
add
in
movsb
rcll
mov
dec
inc
rcll
arpl
addr16
add
mov
ss
add
popf
sbb
jno
fildll
adc
out
push
mov
mov
mov
pop
lahf
xchg
lock
clc
mov
xchg
xchg
gs
cwtl
cwtl
fldz
mov
insl
pop
sbb
jae
loope
and
or
mov
jg
inc
mov
pop
nop
js
shll
mov
and
in
rolb
ret
mov
or
mov
xchg
jb
push
pop
in
xchg
mov
daa
lock
pop
sub
fidivrl
adc
lods
jae
adc
ljmp
pusha
cltd
adc
pop
test
fcoms
lods
popa
sahf
nop
fdivl
sub
fisubs
or
fs
popa
fs
mov
fsub
inc
movsb
xor
push
dec
out
mov
repz
and
shlb
gs
fbld
enter
dec
mov
call
cmp
xor
adc
adc
lock
loope
jb
xchg
sbb
bound
and
imul
mov
mov
test
ffree
mov
xor
mul
mov
lahf
bound
mov
fbstp
jbe
dec
inc
arpl
mov
roll
cmpsl
gs
dec
sbb
or
pop
push
sbb
fadd
xor
add
fsubl
sbb
les
sub
lds
jge
xor
mov
xchg
cmp
jl
loop
pop
sub
sub
and
negb
push
ficoml
neg
call
sahf
jmp
push
sbb
into
inc
adc
in
int3
icebp
xchg
and
popa
mov
ficompl
icebp
or
mov
mov
mov
sub
mov
arpl
lods
rolb
mov
sbb
jl
mov
repz
mov
push
pop
jmp
test
jbe
push
into
je
and
bound
push
call
fistpll
adc
ret
scas
rolb
cmp
mov
or
sub
adc
push
sbb
mov
xchg
stos
xor
lahf
xchg
sarb
or
mov
jg
xor
mov
dec
mov
repz
dec
cs
test
jo
lahf
adc
mov
imul
ljmp
xchg
cmp
xchg
stos
mov
jb
rclb
hlt
inc
dec
shlb
adc
orb
repnz
lret
nop
push
loop
and
cmp
mov
jg
es
cmc
fnstcw
dec
std
cs
aad
and
std
and
or
pop
xor
insb
imull
sbb
push
push
ja
rolb
sub
lds
cwtl
pop
test
push
fwait
cltd
sub
jne
mov
push
stos
aad
out
cmp
in
insb
or
jnp
sar
sub
dec
xor
test
add
call
ret
push
cwtl
jb
jo
mov
jb
jo
mov
into
push
popf
add
push
jo
xchg
movsl
jmp
sub
pop
scas
cmp
imul
lcall
dec
mov
xchg
xchg
je
sti
rolb
pusha
or
cld
or
aad
pop
fldl
cmp
fiadds
in
cwtl
add
jb
xchg
call
into
popf
jle
out
dec
mov
rorb
dec
bswap
push
dec
xor
aaa
cmp
mov
sub
lret
data16
mov
sbb
pop
mov
push
mov
mov
xor
lahf
nop
pop
cs
iret
mov
in
cwtl
fimull
mov
jl
sbb
cli
cmp
and
and
inc
fld
sub
mov
js
icebp
jl
pop
or
ja
inc
pop
jl
xor
stc
loop
xchg
int
xor
xchg
sarb
mov
es
sub
jb
xor
scas
jns
shl
ja
pop
sub
push
cmp
mov
xchg
test
int
stos
sbb
and
pop
xchg
loop
dec
imul
repz
pop
and
xchg
inc
add
outsl
mov
mov
scas
mov
add
cmc
ficoms
repnz
leave
pop
inc
lea
daa
mov
fistl
push
cmp
push
das
jo
stc
xchg
sub
mov
and
mov
push
add
pop
dec
mov
xor
in
inc
mov
fcompl
data16
pop
call
loope
cmp
scas
adc
and
test
cwtl
int3
mov
pop
add
in
cmp
cmp
push
js
sbb
or
mov
leave
push
sub
fdivs
add
inc
test
dec
test
dec
or
out
adc
pop
leave
es
lahf
arpl
inc
sbb
dec
pop
test
push
push
xchg
dec
xlat
mov
lock
push
lret
jecxz
hlt
and
test
stos
sub
mov
xlat
xor
xor
repz
fs
jb
sbb
mov
cmp
lods
pop
fldcw
mov
cmpb
pop
hlt
cltd
sub
rorl
inc
lcall
cwtl
ljmp
jg
cmovge
and
into
leave
dec
sti
sbb
push
push
iret
xor
xchg
xor
aas
adc
ss
mov
mov
or
xor
das
sahf
push
and
inc
xor
addr16
jo
out
lods
bound
mov
in
int3
add
rcrl
jle
loope
jg
sbb
jbe
sub
lods
shlb
fwait
into
jne
dec
repnz
and
cmpsb
xchg
ljmp
mov
stos
mov
push
lea
xor
mov
das
jnp
cmpsb
lret
std
pop
jno
jbe
xor
push
in
push
dec
fimull
mov
or
jae
mov
mov
sahf
aaa
popf
inc
pop
sbbb
push
arpl
mov
or
aas
xchg
outsb
ljmp
cmpsb
cld
or
mov
push
sbb
mov
scas
imul
dec
or
imul
sahf
inc
adc
mov
fisttpll
out
fwait
ja
xchg
imul
inc
je
lds
rorb
pop
aaa
sahf
dec
ljmp
mov
out
jnp
fcompl
adc
lret
lock
ljmp
push
mov
push
cmc
aaa
mov
adc
sbb
in
hlt
rorb
or
cld
js
sbb
or
dec
mov
stos
lcall
popf
jo
in
xor
cs
mov
push
shll
fiaddl
mov
inc
adc
xor
inc
icebp
push
sub
pop
outsl
orl
leave
daa
adc
sub
inc
xor
lahf
xlat
sub
pop
mov
inc
sbb
nop
mov
int
test
and
jg
xor
xor
es
sbb
xchg
sub
dec
mov
add
loop
xor
cs
orl
mov
ret
test
les
jae
dec
adc
sti
call
mov
dec
mov
cmpsl
aas
cld
inc
or
lock
or
inc
pushf
mov
mov
out
or
mov
or
or
in
aad
jp
or
push
pop
cmp
lock
dec
or
aam
jbe
pop
fimull
insl
add
xchg
push
xchg
add
mov
and
ds
jecxz
in
inc
dec
aam
jno
jp
popa
scas
inc
xchg
sbb
dec
addr16
outsl
out
sbb
and
xchg
test
into
pop
pinsrw
dec
pusha
push
adc
jl
lret
shr
into
or
mov
xchg
popf
daa
inc
popf
xor
xchg
mov
push
dec
aaa
mov
mov
jg
sbb
sbb
gs
test
fsubrs
xor
and
xchg
test
and
gs
push
push
fadds
ljmp
mov
xor
inc
stos
std
rcrl
adc
jae
dec
xchg
push
mov
loopne
adc
push
cs
push
int
push
movsl
fidivrl
and
aad
jno
movsl
mov
xorl
cmp
dec
out
loope
js
mov
xor
sub
pop
cmp
enter
ss
inc
mov
cmp
cmpsl
ss
stos
addr16
shll
fstpl
jmp
xor
test
into
sub
popa
inc
loopne
je
enter
push
jo
sahf
into
out
dec
addl
jo
test
lock
mov
stos
dec
jp
jbe
fwait
xchg
xor
andl
pop
andb
mov
sbb
popf
in
sbb
jl
imul
sbb
push
outsl
repz
psubq
int
sub
xor
push
push
in
jno
cmp
or
pushf
dec
aam
or
pop
icebp
insl
stos
and
es
imul
insb
fisubs
sbb
dec
movsb
inc
dec
je
in
jne
xchg
inc
xchg
andl
dec
testl
out
daa
and
push
out
in
xlat
and
mov
xchg
fadds
jp
xchg
inc
mov
ficoml
xor
lock
pop
xor
leave
hlt
popf
hlt
fdivl
inc
movsb
xor
rcrl
sub
imul
lds
shll
out
mov
dec
ret
nop
je
adc
or
dec
insl
jne
xlat
shll
in
push
jle
iret
into
jg
add
mov
cmpsl
mov
mov
inc
adc
repnz
out
mov
jge
ja
scas
minps
mov
xor
pop
fildll
loop
cltd
out
mov
push
outsl
mov
clc
cli
rol
sbb
jmp
xchg
aas
xchg
mov
adc
xchg
push
mov
or
mov
pop
pop
fidivl
clc
and
fidivs
mov
mov
pshufw
adc
cmp
xchg
test
call
fcoms
mov
dec
inc
out
sub
in
aad
pop
ljmp
clc
dec
iret
pop
sbb
or
stos
ss
leave
repnz
or
loop
test
dec
imul
add
js
and
pop
shrb
ss
cmp
stc
popa
inc
or
call
push
xor
lahf
xchg
dec
out
fcoml
pop
xchg
sahf
sub
hlt
rcr
imul
daa
push
mov
xchg
add
push
mov
mov
cmp
andb
mov
jns
jno
int3
test
ret
arpl
jb
outsl
cmp
mov
call
jbe
pop
lods
xchg
add
xor
push
aaa
decl
jne
pop
and
lret
add
lods
out
jp
mov
xchg
adc
ds
js
enter
sub
mov
outsl
nopl
jmp
ljmp
paddusb
sub
inc
push
lods
push
sbb
loope
pop
subb
dec
stos
adc
lahf
jmp
add
cmp
mov
aad
lcall
push
inc
xor
sub
test
inc
jbe
and
out
imul
push
mov
push
lods
jecxz
es
call
inc
out
inc
fmuls
pop
stos
and
cmpsl
inc
sbb
stos
rclb
aad
out
cmpsl
xchg
pop
and
sub
fsubl
xchg
loopne
add
ret
dec
xchg
add
add
adc
cld
mov
mov
and
adc
repnz
fs
pop
movsb
and
add
jecxz
push
adc
add
daa
cli
and
sbb
psubb
jns
pop
cmp
cmpsl
rclb
mov
or
imul
mov
in
push
int
sbb
and
xor
mov
xlat
popa
leave
mov
jne
pop
pop
lcall
and
clc
pop
std
pop
cmp
inc
les
push
testl
mov
xchg
adc
fwait
andb
gs
xor
push
jae
std
jg
repnz
xchg
mov
iret
pusha
jb
dec
pop
push
xchg
mov
push
ffree
adc
lret
mov
nop
cmp
mov
and
dec
stc
test
test
les
add
imul
inc
xor
outsb
fidivs
jle
popa
fwait
dec
inc
insb
inc
push
std
jbe
adc
jne
rorl
imul
into
jne
popa
fldl
cs
mov
cwtl
inc
or
pop
inc
pop
mov
in
faddl
lahf
dec
std
sahf
mov
and
lret
mov
jae
movsl
cli
rcll
js
or
fucomi
mov
aam
test
mov
fcmovnu
loope
pop
mov
dec
mov
cmp
decb
cmpsl
dec
jmp
inc
outsl
dec
adc
loop
adc
push
xchg
and
sub
dec
push
inc
arpl
cmp
xchg
jo
adc
popa
cmpsb
rcrl
mov
sub
icebp
fwait
lret
dec
adc
xor
mov
mov
addr16
jno
inc
jbe
stc
push
adc
and
dec
sbb
cmp
jl
cmc
pop
jno
icebp
ss
pop
cli
xchg
fcoms
sub
stos
adc
in
dec
inc
lcall
add
std
push
lods
dec
and
icebp
enter
xor
or
aas
jmp
sarl
cld
fcoms
jb
sbb
push
fldcw
sbb
mov
incb
pop
adc
and
ja
push
push
insl
mov
pop
cmp
in
mov
mov
cmp
shll
lock
sbb
mov
fidivs
sahf
sbb
scas
push
lock
les
xchg
or
ret
inc
push
fdivl
and
shlb
into
enter
jmp
sarl
aaa
insl
insl
clc
pop
mov
lea
out
jae
data16
xor
les
adc
jae
jecxz
movsb
fst
out
out
pusha
mov
xor
push
data16
iret
jg
sub
sbb
sahf
sbb
inc
jnp
lret
adc
jp
xchg
cmp
pop
hlt
lret
jnp,pn
cmpsl
inc
mov
mov
push
mov
in
push
push
xor
jmp
in
jmp
int3
or
sahf
cmp
inc
sub
outsl
sbb
fwait
cld
pop
loop
xchg
lea
xor
xchg
xor
outsb
leave
xlat
test
sbb
popw
inc
icebp
popa
xchg
push
jns
mov
popa
out
imul
std
out
mov
mov
pop
dec
add
push
nop
popa
packuswb
fmul
popf
xchg
mov
ficompl
mov
xlat
push
or
xchg
dec
jg
inc
dec
and
or
push
ret
sbb
mov
cmp
inc
jg
xor
sbb
push
dec
jle
ljmp
push
clc
repnz
jge
mov
mov
xchg
rcrl
pop
xor
dec
mov
mov
andl
mov
and
or
cmp
mov
int3
rcr
mov
popf
cld
cwtl
imul
ja
in
push
hlt
in
mov
int3
jecxz
xchg
dec
or
add
int
mov
jo
mov
mov
pushf
sub
lods
cmp
jo
jmp
adc
jae
mov
fnsave
je
inc
sahf
fmuls
jb
insb
pop
cmp
push
ret
fldenv
mov
into
xchg
mov
pop
aas
jns
xchg
adc
jb
adc
cmp
xchg
jbe
cmp
mov
sti
call
pushf
sbb
push
xor
hlt
out
xchg
xor
cmpsl
xchg
shl
jle
fmul
pushf
push
mov
mov
rorb
mov
sub
jo
aas
out
pushf
add
jnp
mov
pusha
gs
inc
adc
inc
notb
in
cmp
aad
mov
mov
mov
xor
dec
stos
cmpsb
ljmp
cmp
repnz
pushf
sub
movsb
movsb
pusha
sbb
loope
lcall
call
movsl
sbb
xor
ljmp
or
cmp
daa
into
insl
cmpsl
add
mov
cmp
test
adc
push
inc
mov
arpl
add
test
decb
mov
dec
sar
inc
cltd
push
sti
push
push
popa
outsl
mov
pop
xor
pop
cmp
pop
sub
out
lahf
in
out
or
pushl
popf
les
outsb
cmpsl
xchg
and
dec
mov
push
xor
in
adc
mov
lahf
fsubl
dec
pop
aaa
aam
jg
pop
sahf
mov
mov
push
and
push
cmp
ret
pop
addr16
insb
fcoml
imul
jbe
shlb
loopne
stc
insb
xchg
xor
shl
xor
pop
push
mov
lret
mov
std
sarb
xchg
sbb
push
or
mov
adc
jmp
jle
cmp
and
mov
rorb
fidivrs
out
vmovaps
int3
and
inc
mov
xchg
inc
out
pusha
jne
xor
inc
xor
js
push
jg
fisttps
mov
jns
jge
and
mov
aas
and
or
sub
lret
jecxz
test
out
inc
sub
popf
lds
adcb
out
cld
aam
xchg
les
leave
mov
roll
pop
roll
mov
push
mov
xchg
push
mov
int
mov
adcl
lret
idivb
jae
pusha
mov
leave
and
repz
stos
add
jg
lods
jae
rorb
fwait
or
sbb
loope
aas
jle
mov
add
pop
js
xlat
out
sbb
jae
sahf
mov
fsub
xchg
pop
xlat
imul
shll
cld
jecxz
mov
aam
pusha
push
cmp
out
scas
inc
cmp
xor
and
hlt
insl
add
ss
sarb
fldcw
aam
push
rol
call
out
jp
mov
sti
sub
adc
cltd
or
mov
data16
mov
xchg
pop
loop
fs
xor
dec
cli
hlt
sub
add
ret
cmp
mov
pop
mov
pushf
push
mov
or
mov
jo
cmp
fildl
pop
jb
lret
addr16
jp
add
xchg
repnz
mov
mov
mov
imul
je
pop
popf
pop
cmp
add
sub
jle
aad
iret
or
push
mul
inc
pop
cmp
clc
into
pop
mov
sub
pop
jg
jmp
adc
pop
jo
cmp
adc
ss
xlat
pop
jmp
stos
pop
scas
xor
call
adc
into
fcoml
xchg
stos
imul
xlat
and
inc
fistpl
lds
js
lret
dec
sahf
stos
dec
insb
adc
push
fucom
jg,pn
jle
sbb
cmp
mov
sub
sbb
jmp
sbb
xchg
repnz
push
push
push
aad
std
lods
sbb
cmp
outsb
mov
lret
push
add
stos
in
push
mov
mov
cmc
lods
or
nop
nop
jbe
xchg
push
sub
push
fxch
minps
outsl
jp
add
and
adc
nop
mov
jl
lret
cmp
or
jbe
mov
mov
ffree
test
dec
sbb
fcomps
cmc
bound
sti
lea
sub
mov
jno
cltd
mov
mov
lahf
or
cmp
test
adc
in
add
adc
inc
pop
in
mov
int
clc
aad
arpl
push
add
sbb
scas
loop
cmc
jecxz
pop
fisubrs
mov
add
lods
pop
or
or
cwtl
pop
pop
and
mov
cmp
test
mov
popa
cld
fimull
sbb
push
bound
inc
pop
push
dec
sbb
adc
jmp
cmpsl
jno
pop
mov
dec
mov
dec
lock
inc
jnp
fisttpl
mov
push
pop
daa
fisttpll
inc
mov
or
xchg
xchg
aam
adcl
into
lret
in
scas
sbb
out
cmp
lds
pop
addr16
push
mov
stos
mov
and
pop
leave
rclb
and
pushl
ret
gs
stc
ja
mov
pop
cwtl
out
inc
repz
dec
push
jg
jne
leave
mov
xor
lea
xlat
sub
out
mov
adc
rcrb
pop
jg
pop
cmc
pusha
stc
and
add
cmc
inc
dec
mov
and
cmp
addr16
push
das
xor
ss
pop
add
fbstp
jns
shl
enter
or
inc
dec
mov
and
pop
pop
iret
xchg
mov
or
pop
outsb
inc
dec
or
or
pusha
jae
jno
mov
jbe
addb
clc
lods
ds
xchg
mov
cli
cmc
mov
lret
mov
add
mov
mov
add
int
cmp
cmp
sarb
call
sub
add
sbb
out
mulb
pusha
adc
sbb
inc
mov
aaa
xor
outsl
fiadds
xchg
xchg
ss
dec
bound
jecxz
ret
pop
push
stos
xchg
push
sub
data16
iret
inc
add
cmpb
fdivrp
push
cltd
aad
stos
pushf
mov
daa
xor
fsubrs
stos
ret
mov
call
popf
stc
test
or
mov
stos
inc
test
mov
mov
insl
fidivrl
sub
in
xlat
cld
cmc
mov
imul
push
cmp
fdivrl
and
inc
imul
ja
mov
rorb
divl
jge
call
out
mov
pop
add
pop
outsl
vpcmpgtw
jg
push
test
cld
pop
inc
ja
fwait
mov
xchg
iret
mov
ss
and
mov
jmp
movl
test
pop
adc
bound
mov
or
mov
inc
bnd
in
and
cmc
cmpsb
jbe
mov
cltd
pop
outsb
lods
fwait
addr16
test
mov
scas
pop
pop
xchg
mov
imul
sub
push
or
pop
mov
cmp
mov
mov
jnp
repz
pusha
cmp
roll
ret
mov
adc
jo
and
cmp
and
ret
xchg
aad
pop
adc
push
adc
insb
stos
in
pop
xor
rorb
mov
out
push
add
cwtl
fcomps
pop
mov
cmpsl
adc
pushf
arpl
adc
sbb
and
das
int3
lods
inc
pop
out
jp
inc
jmp
movsl
inc
mov
imul
fsubrs
mov
dec
fistl
push
scas
scas
push
xchg
mov
dec
pop
js
inc
cmp
inc
push
in
jle
jp
add
movsb
adc
into
inc
flds
shlb
and
mov
or
xchg
out
call
sub
fldenv
loope
jge
mov
push
movsb
xor
sub
pop
inc
jb
dec
xor
data16
jecxz
out
stos
sbb
fs
rcrl
int
scas
cmp
rclb
xlat
outsb
addl
jae
outsl
sub
add
test
cmc
mov
pop
push
stos
lods
aad
dec
jle
test
push
popf
iret
xor
xor
mov
sahf
sbbl
pop
mov
xor
mov
xchg
cmp
stos
or
and
rorb
es
shl
iret
lcall
sahf
int
push
add
sbb
jo
mov
mov
wrmsr
xchg
lret
xchg
dec
and
test
sbb
insb
loopne
cli
jecxz
arpl
mov
test
xor
jne
mov
xchg
loope
jmp
jb
mov
or
adc
cs
aad
mov
cmpsb
outsl
insb
inc
adc
mov
lret
fs
clc
nop
mov
mov
ret
cltd
adc
fildll
shrb
pop
adc
and
fisubrs
sub
sahf
xchg
test
arpl
in
xor
inc
cmp
add
jae
add
cmp
dec
pop
and
push
push
movsl
push
jnp
jp
stc
or
mov
into
or
and
xchg
add
xchg
sub
cmp
fildl
call
and
jbe
lea
addr16
sub
mov
xor
popf
roll
or
mov
fdivl
inc
jb
push
mov
jecxz
lahf
sub
std
mov
icebp
ljmp
pop
xchg
aas
inc
xchg
jge
fdivr
add
mov
push
out
scas
imul
enter
and
or
fldcw
je
out
leave
fiadds
mov
xchg
int3
je
mov
int
push
idivb
inc
fsts
jb
lahf
js
or
mov
pop
imul
stos
xchg
fimull
fs
test
inc
aam
add
lock
mov
in
push
sbb
and
and
aas
add
out
lock
mov
aas
push
sahf
push
in
pop
sbb
pop
lods
or
sub
jp
cltd
out
sub
mov
pop
subb
push
xchg
pusha
dec
jno
sbb
pop
add
push
js
pop
in
ds
std
fs
mov
mov
dec
cltd
mov
jb
mov
dec
mov
xor
dec
pop
ret
lcall
stos
or
mov
out
sbb
pop
pushf
mov
xlat
jl
lret
out
rorb
cwtl
add
or
mov
lret
insl
shlb
cmp
leave
xor
rol
and
es
lock
int3
data16
cltd
xchg
dec
test
int3
fisttps
push
push
mov
sahf
pop
mov
cltd
sbb
dec
gs
mov
loope
cmp
sub
adc
jmp
inc
fwait
scas
mov
pop
arpl
and
imul
sti
fistps
ss
xchg
pusha
fwait
icebp
testb
loopne
dec
dec
pop
test
jg
lods
leave
daa
add
sub
push
xor
push
fistpll
inc
aaa
addb
out
pop
pop
ja
xor
es
mov
test
pop
jmp
mov
lods
data16
pop
repnz
add
cwtl
pop
lds
data16
std
in
pop
xor
imul
mov
mov
sbb
pop
std
push
xor
sub
repz
adc
mov
mov
dec
sbb
test
andl
push
sarb
lds
mov
test
lret
cmpsl
lods
inc
mov
ffree
dec
adc
in
pusha
jl
icebp
dec
ja
in
or
test
mov
call
mov
out
cld
pop
sub
sub
aas
bound
cs
fnsave
das
ror
bound
mov
mov
or
lea
adc
xchg
sbb
sub
cmp
sbb
jmp
in
xchg
inc
rcll
outsl
inc
or
mov
push
aas
push
and
repnz
cmp
insb
fstps
adc
lret
cld
and
lcall
push
std
mov
cmp
loop
inc
push
stos
lcall
fsubs
inc
and
ja
mov
stos
popa
push
es
mov
mov
into
and
pop
addr16
in
test
jg
dec
adc
ljmp
sahf
or
pop
or
xchg
or
cltd
jge
mov
testb
adc
loopne
lods
imul
sbb
sbb
jo
pop
sbb
add
std
movb
movsl
fs
adc
or
or
fs
out
cmp
cld
inc
cmp
pop
jg
arpl
shrb
sarb
popa
int3
adc
je
jns
adc
mov
int
in
lret
mov
stos
ret
mov
pop
lret
mov
sub
psllq
rcrl
daa
dec
les
push
fstps
sbb
daa
ret
and
stos
jmp
sbb
lock
dec
adc
out
scas
inc
aas
jb
fcmovne
sti
mov
clc
pushf
push
out
mov
dec
mov
adcl
pop
adc
lcall
jae
das
mov
mov
scas
lods
xchg
test
xchg
push
test
ljmp
adc
jg
inc
pop
or
and
test
jnp
push
or
imul
ret
xchg
fbld
dec
movb
pop
inc
push
pop
or
je
aas
lods
shll
xor
mov
mov
test
xchg
hlt
scas
mov
inc
loopne
jecxz
aaa
xchg
into
and
xchg
idiv
fldcw
push
mov
and
adc
std
popa
inc
push
push
jmp
mov
dec
xor
je
lods
sbb
clc
mov
jmp
sub
addr16
pusha
mov
lret
rolb
fcomps
les
lock
inc
xor
popa
scas
push
mov
mov
inc
out
adcb
mov
int3
jo
repz
les
lea
xchg
fnstcw
stc
call
gs
negb
lods
andl
cmpsb
or
aaa
dec
pop
cmpsb
into
movsb
imul
add
xchg
int
sti
out
cmp
test
lock
iret
jo
or
aaa
fcomps
enter
lret
mov
pop
mov
adc
inc
and
and
mov
dec
fldl
jg
rorl
push
sub
sub
mov
ds
adc
sub
int
fsub
jno
enter
xlat
mov
pop
mov
loop
cs
mov
adc
lret
lods
jge
push
shlb
xchg
jle
xchg
fidivl
in
inc
jne
xchg
mov
ror
dec
or
xor
leave
or
enter
mov
inc
xchg
out
or
stos
je
outsl
jge
dec
sub
scas
repz
mov
in
inc
stos
xchg
in
cmp
js
bound
adc
shlb
in
push
sbb
je
mov
arpl
mov
outsb
sub
mov
pusha
xor
sbb
xor
xchg
pop
test
adc
mov
ret
call
push
push
dec
scas
xlat
pop
push
int
pop
faddl
loope
sub
nop
popf
push
cmp
mov
mov
push
iret
dec
jae
and
ds
cmp
xchg
cmpsl
mov
mov
fs
jmp
ljmp
pop
add
sbb
shl
insb
rorb
dec
sbb
mov
xor
pop
cltd
push
movsb
xchg
cmpsl
int
ret
inc
adc
imul
sahf
pop
repz
repnz
fiadds
cmc
cmpsl
lret
mov
outsl
jp
dec
lcall
out
jecxz
ljmp
sbb
pop
clc
ret
push
ss
call
sbb
addr16
mov
mov
push
xlat
pushf
fdivrs
cli
stc
mov
aad
xor
lock
lcall
push
jo
pusha
in
or
jno
mov
std
push
pop
jae
sub
push
ljmp
movsl
ja
adc
push
sub
fistl
fldt
push
cmc
sub
mov
lods
sbb
push
mov
pop
mov
xchg
cld
movsb
dec
cmp
and
sub
adc
dec
sub
xchg
enter
in
jecxz
lods
in
mov
popa
outsl
cli
inc
mov
fstp
int3
fisubrs
push
cmp
fcompl
dec
mov
ret
and
test
xor
aas
or
dec
jbe
mov
mov
addr16
xor
sbb
iret
mov
test
fmul
adc
push
dec
out
pop
lods
mov
idivb
aas
cmpsl
mov
mov
inc
inc
jnp
sbb
jmp
adc
sub
mul
xchg
loope
inc
pop
xchg
sbb
bound
mov
mov
pop
xlat
inc
test
pop
dec
xchg
scas
arpl
testb
sub
and
into
xor
test
sub
cmp
sbb
movhps
add
repnz
cmp
loop
and
repz
pop
dec
xchg
cmp
inc
inc
in
jb
cltd
dec
inc
xor
jge
inc
imul
mov
pop
adc
cmp
movsb
xchg
sbb
sbb
hlt
call
mov
or
int
aaa
inc
jns
je
aaa
inc
aaa
out
sub
mov
xchg
ror
addl
int
call
lret
push
push
leave
sub
and
dec
cltd
out
or
mov
pop
and
add
cmp
mov
xchg
cmp
xchg
sbb
sbb
fld
add
xor
add
stc
xlat
inc
insl
scas
mov
bound
test
cmp
cmp
insb
push
mov
mov
into
or
in
xchg
mov
in
lret
mov
leave
cmp
mov
daa
shll
add
push
sub
rcr
jp
dec
pop
xchg
xor
mov
daa
ror
or
jae
in
xchg
jnp
mov
ja
popf
loop
xchg
loope
insl
loop
jnp
pop
cmpl
mov
test
mov
adc
or
inc
cmp
inc
or
pop
dec
sbb
push
add
mov
sti
lcall
out
jp
xchg
push
hlt
enter
and
stos
push
rorb
stos
jno
es
jae
andl
loope
push
fildll
push
and
inc
loope
aaa
pop
mov
adc
cld
or
push
std
cmpsb
push
icebp
int3
jne
push
fs
andl
fmuls
mov
push
fnstenv
es
xor
clc
les
or
mov
mov
jmp
xchg
das
scas
or
xor
pop
cmpsb
mov
xchg
in
orb
dec
mov
push
xchg
popf
mov
aad
lret
into
call
lds
popa
cltd
push
dec
sbb
xchg
in
jg
jle
test
ret
das
cld
push
cmpsl
adc
daa
out
fwait
cmp
mov
sbb
mov
loope
cmp
lret
dec
jnp
mov
dec
scas
popf
and
mov
fdiv
pop
leave
xchg
push
inc
ja
pop
push
leave
inc
mov
in
mov
mov
dec
jl
push
pop
sbbb
jne
stc
and
gs
add
popa
pop
in
rcr
push
xchg
test
dec
sbb
inc
ja
stos
pusha
mov
loope
popf
fnsave
cmc
les
pop
sbb
jmp
jb
xchg
push
jo
dec
jge
xor
popa
sbb
test
adc
outsl
leave
sahf
sub
je
lcall
les
adc
cltd
in
fstpl
xor
and
insl
cmpsl
sub
and
loop
pop
mov
pop
lds
xor
imul
sub
imul
out
xchg
mov
in
add
dec
cmp
pop
clc
mov
push
or
ret
adc
or
push
or
jae
icebp
adc
xor
sbb
imul
fisubl
daa
clc
test
rcr
inc
inc
inc
movsl
cmc
dec
shlb
call
and
jne
imul
pop
adc
xor
cmp
in
mov
mov
sbb
fs
arpl
in
arpl
adc
cmpsb
stos
lret
push
pop
mov
iret
rolb
push
pop
xor
out
mov
scas
imul
push
fimull
mov
inc
dec
cmc
in
jl
jnp
into
cli
into
ljmp
sub
lock
xchg
mov
imul
mov
movsl
xchg
lea
test
mov
push
ficomps
cmp
jecxz
mov
xor
push
dec
mov
imul
push
add
sbb
in
std
pop
and
popa
and
addl
mov
jno
fldl
movsl
in
or
in
imul
inc
fcomp
inc
inc
lea
dec
fsubs
aas
subl
adc
mov
push
aaa
cltd
push
pop
cmp
aam
test
xchg
hlt
sbb
loope
movsb
add
in
mov
push
outsb
cwtl
iret
gs
dec
int3
sbb
test
xchg
cmpsb
xchg
xchg
mov
lock
inc
mov
jecxz
jae
or
sbb
fadds
int
loop
pop
outsb
jbe
fdivs
je
lret
push
and
xor
mov
cmc
enter
outsb
mov
push
and
adc
pop
mov
cmp
clc
pop
ret
int3
push
pop
pushf
out
xchg
sahf
fiaddl
mov
cmp
mov
sbb
dec
mov
sub
and
xchg
repz
mov
popf
inc
ret
sbb
jle
cwtl
adc
adc
dec
test
or
xor
push
mov
ficompl
cmpsb
das
add
add
xchg
dec
ljmp
pop
std
push
xchg
mov
movsb
mov
cmp
pop
sbbb
sub
cmp
dec
inc
cmp
dec
fwait
mov
in
fiaddl
add
add
js
cmpsb
adc
movsl
js
cltd
shl
add
xor
js
xorl
push
jbe
cld
dec
lea
adc
mov
enter
sub
subb
push
mov
cmp
addr16
mov
pop
aas
mov
adc
les
clc
pop
mov
push
orb
pop
mov
shr
insb
movsb
inc
adc
mov
inc
xchg
lods
pop
popf
dec
push
or
xor
add
js
inc
sbbb
mov
repnz
enter
inc
cmpsl
enter
out
and
inc
sarl
sarb
jge
mov
and
movsb
jnp
jbe
xor
xchg
xor
cltd
aas
cld
pushf
xchg
stos
add
lahf
insl
push
movsl
and
popf
lods
int
jle
movsb
pushf
xor
pushf
data16
iret
inc
or
pushf
jns
ljmp
into
and
cmovb
lcall
bound
icebp
mov
adc
jmp
dec
push
popa
mov
add
call
loop
je
dec
push
lods
test
fs
in
icebp
out
jp
mov
data16
cld
sbb
adc
or
xchg
mov
je
daa
push
dec
xchg
xchg
fmulp
pusha
inc
push
adc
lds
out
sahf
lock
rorl
push
jne
ss
aad
test
fisttpll
bound
jl
mov
out
das
aas
faddl
push
inc
mov
lahf
inc
pushf
inc
sti
test
dec
popf
lods
pop
andl
xchg
jp
scas
out
loope
cli
xor
arpl
outsl
jle
mov
mov
jae
ja
pop
xchg
pusha
cmc
mov
fwait
stos
cmpsb
jmp
fsubp
push
sti
aam
in
aas
movsl
popa
shr
adc
cmp
not
cmp
std
sbb
cmp
mov
jp
xor
mov
nop
mov
dec
gs
cli
mov
jnp
xor
jae
gs
and
test
push
xor
clc
mov
sub
cmp
inc
sub
cld
and
out
dec
movsb
pop
or
inc
xchg
pop
movsl
dec
sub
or
ficoms
cmp
out
es
fbld
pop
lock
ror
pslld
inc
xchg
out
std
lret
mov
or
sti
and
out
inc
mov
fisubrs
sub
cmc
sbb
xor
lods
mov
adc
add
inc
sti
outsb
orl
mov
mov
sub
and
xor
fcom
fdivrp
adc
gs
loopne
add
sub
push
xchg
f2xm1
add
lcall
sarb
sbb
xchg
or
mov
and
jg
jmp
in
sti
jge
jge
mov
out
enter
outsb
xchg
in
out
mov
cmp
push
scas
frstor
fdivs
inc
fwait
int
stos
fwait
add
and
add
pusha
mov
pop
movsl
xor
lods
xor
mov
sbb
out
pop
or
roll
loopne
cmp
push
mov
jecxz
mov
xor
xor
push
add
pop
out
push
test
shlb
push
dec
adc
mov
add
mov
jae
subb
mov
int
jp
mov
lahf
cmpsl
int
pop
xorb
mov
out
jmp
mov
dec
and
inc
pop
xor
aaa
mov
ja
scas
movsb
sbb
sub
pop
icebp
cwtl
push
mov
xchg
out
add
xchg
mov
pop
ret
aaa
sub
xlat
lds
aas
jbe
push
lods
out
and
fcoml
enter
ret
sti
psrad
scas
dec
lea
iret
or
xor
xchg
ss
cmc
adc
sub
push
jp
cmp
mov
pushf
xchg
lods
xchg
jp
movb
adc
cltd
roll
notl
adc
bound
sbb
sub
iret
mov
or
jp
jb
jle
xor
call
jae
scas
mov
xchg
add
sub
loopne
pop
stos
int
cmp
lret
fs
dec
jg
loope
cmc
or
mov
mov
int
sub
daa
inc
scas
hlt
inc
cmp
scas
xchg
outsb
out
mov
push
dec
push
ret
xchg
xchg
push
adc
in
cmp
repnz
scas
dec
incb
inc
cmp
sysexit
cmp
dec
mov
sbb
rol
fmull
insl
stos
sti
xorb
mov
in
daa
cltd
out
rcll
push
jp
jle
pop
sarb
pop
in
mov
mov
out
sbb
inc
negl
mov
fnop
stc
or
repnz
fs
jge
pop
sbb
mov
pop
jl
jecxz
fisttpl
xchg
cmp
hlt
inc
test
sub
pop
popa
pop
inc
xchg
push
cld
cmp
sbb
sbb
dec
pop
add
sbb
bound
jl
jle
ret
lcall
testb
adc
fisubrs
sarb
jns
mov
sahf
inc
fimull
call
sub
lcall
dec
rol
insb
push
sub
call
sarl
cmpsb
and
fbld
cwtl
std
pushf
shlb
sbb
movsl
mov
dec
push
inc
frstor
mov
xchg
rorb
mov
pop
dec
mov
add
or
inc
subb
cmpsl
rcl
or
outsl
fwait
out
ljmp
ja
inc
mov
movsl
data16
loop
aaa
mov
out
gs
cmpsb
mov
inc
add
dec
hlt
or
push
and
sahf
jo
jns
xchg
or
test
push
stc
inc
cmpsl
sub
ja,pn
scas
pushf
les
int
fdivr
cmp
push
cmp
negl
stos
xchg
cld
jo
xor
add
int
call
enter
sahf
mov
push
in
int
jmp
sbb
push
lock
mov
addr16
or
pop
pushw
sbb
into
enter
sarl
lea
sbb
ss
jmp
js
inc
call
push
inc
loope
push
jp
jle
mov
ds
addr16
decb
or
sbb
and
roll
sbb
cmc
fisubs
in
add
push
push
repnz
push
shl
inc
rcrl
movsb
mov
xor
ret
rcrb
sub
xchg
fisttpl
inc
inc
pop
int
or
xchg
cmp
iret
mov
sahf
xchg
xchg
add
jp
ds
pop
imul
dec
mov
cmp
rcrl
sbb
movsl
shll
dec
and
cmpsb
jae
lret
lods
adc
sarl
sbb
adc
enter
cmp
mov
inc
sub
push
mov
movsl
test
clc
mov
xchg
enter
push
popf
push
lods
sbb
mov
adc
cwtl
int3
mov
mov
test
cwtl
pop
sbb
cmpl
popa
lods
ja
dec
sub
push
mov
jnp
xor
lds
xchg
repnz
inc
mov
dec
adc
test
jbe
xchg
pop
scas
and
or
sub
sub
xchg
adcl
loope
cmpsb
dec
into
mov
outsl
sbb
ljmp
jg
mov
in
pop
adc
das
je
mov
add
sbb
imul
and
jmp
and
sub
stos
ss
mov
mov
push
test
and
mov
test
jne
ret
pop
ljmp
xchg
xor
aam
lret
mov
mov
aaa
adc
push
inc
fidivrl
jecxz
jne
mov
inc
mov
jp
mov
bound
add
or
sarb
push
shrb
das
out
je
cli
arpl
shrl
sub
gs
ret
mov
dec
mov
addl
mov
mov
cmp
test
shl
movl
xchg
and
push
and
mov
inc
mov
int
addl
xchg
fsubs
inc
subl
and
cmp
mov
insb
or
sti
mov
adc
stc
xor
mov
nop
aas
jle
jo
cltd
jmp
daa
enter
fcoms
cmp
push
mov
call
mov
mov
je
test
jge
cmp
or
das
andl
xchg
ja
pop
in
sub
ror
jl
adc
subl
xlat
mov
mov
xor
sbbl
shr
pop
mov
add
hlt
mov
enter
pop
dec
jle
jnp
pop
lock
outsb
scas
les
sbb
inc
icebp
shlb
stos
jno
and
dec
add
sub
adc
jmp
jb
iret
xchg
cmp
test
inc
jmp
aaa
cmp
shlb
subl
push
call
jb
ljmp
addr16
fcoms
jne
lahf
fldenv
cmpsl
mov
mov
pop
loopne
or
movsl
pusha
cmp
sahf
cmp
ret
sbb
xor
inc
cld
jns
xchg
sub
nop
out
push
pop
pop
cmp
and
int
ficoms
movsb
aam
mov
mov
adc
gs
nop
inc
mov
insb
orb
test
and
jg
or
pusha
xchg
or
hlt
test
lcall
pusha
and
test
fisubl
das
mov
fbstp
scas
xchg
fcoml
push
movsl
test
scas
mov
jae
rolb
pop
popl
cltd
mov
lahf
loope
in
out
mov
shrl
repnz
push
push
gs
into
mov
mov
mov
outsb
mov
repz
ja
aad
call
inc
fistps
sbb
dec
adc
sbb
adc
es
dec
stos
inc
xorb
inc
or
cmp
and
cs
push
lds
cmpsb
add
mov
inc
xor
sahf
sub
push
inc
mov
loopne
out
cwtl
mov
jle
leave
nop
int3
inc
orb
push
mov
xor
jge
cld
lcall
inc
add
or
ret
add
push
dec
push
sbb
in
dec
or
sub
scas
jl
jmp
inc
into
add
out
sub
std
jbe
bound
daa
mov
dec
arpl
pop
sbb
call
adc
neg
in
insl
or
jmp
xchg
cmpsl
pop
pop
pop
rcll
jle
ret
pop
movsb
jno
gs
mov
fbld
enter
xchg
cltd
cmp
xor
inc
bound
addr16
xor
pusha
call
adcl
popf
sub
xchg
sbb
lock
dec
inc
loope
add
mov
arpl
ss
daa
jge
dec
out
sub
pop
jb,pn
pop
lcall
loopne
icebp
sub
ret
loopne
into
enter
sti
shl
push
add
xchg
addl
inc
inc
in
mov
sarl
mov
cmp
pop
and
out
dec
ffree
leave
mov
fsubs
int3
jne
cwtl
lds
daa
push
nop
stos
lds
leave
rcrb
push
sti
jns
sub
xlat
mov
mov
lret
xchg
mov
cld
into
mov
pop
cmp
int3
inc
push
push
mov
cli
push
shr
leave
xchg
call
pop
dec
pop
dec
mov
jle
mov
mov
add
mov
fsub
push
adc
mov
jo
divb
sti
push
out
negb
mov
ret
ljmp
lahf
cmp
adc
test
push
out
and
lea
sti
lcall
cmpsl
jp
dec
fmull
jge
aad
xor
ret
or
inc
jp
inc
and
inc
xchg
gs
repnz
and
stc
and
push
ds
lret
add
and
loopnew
inc
repz
inc
pushf
lock
fnstsw
and
dec
ja
ljmp
in
mov
shll
xchg
lcall
cli
add
jp
xchg
stos
mov
ss
mov
mov
icebp
fs
mov
clc
xchg
xchg
mov
push
jecxz
pop
cmpsb
mov
pop
sahf
dec
fidivl
jbe
arpl
leave
repz
fsts
push
pop
fs
repnz
mov
cli
pop
sub
or
xchg
cmp
mov
stos
rcr
jb
xor
push
inc
push
jmp
adc
cmp
adc
das
cmpsb
in
fwait
cmp
sub
in
ret
add
outsb
add
mov
jmp
fidivrl
adc
pop
cmp
adc
add
or
ficoms
loopne
cwtl
out
sbb
push
loopw
sbb
pop
fs
clc
icebp
adc
push
xor
xchg
mov
in
adc
mov
hlt
rolb
jmp
in
std
in
das
dec
popa
cmp
or
cld
ljmp
mov
fdivs
aaa
int3
cltd
int
cmpsb
adc
mov
sub
notl
roll
mov
pusha
sbb
scas
ss
cld
fisubl
mov
fisubrl
rclb
test
jmp
or
fcomi
dec
in
movsb
add
and
dec
cwtl
shll
andb
repnz
xchg
ss
cmc
dec
fwait
push
jb
sbb
fsts
mov
mov
rcl
push
push
pushf
add
sbb
mov
cmpps
cltd
imul
js
sahf
dec
jmp
mov
aaa
jmp
imul
movsb
push
mov
loopne
jecxz
cltd
cltd
and
movsb
stos
cmpsb
lret
mov
daa
xor
add
jecxz
fnstenv
jmp
int3
daa
xor
xchg
rcrl
jnp
sti
ljmp
imul
lods
ja
stos
sahf
jo
pop
adc
sbb
data16
xor
fcmovbe
fildl
and
mov
dec
out
xchg
xor
mov
std
pop
push
sbb
js
inc
loopne
outsb
lods
lahf
int3
mov
and
call
out
aas
inc
stc
pop
fimuls
sub
lea
shr
and
add
mov
and
add
fidivs
mov
shl
or
mov
sbb
lret
mov
insb
pop
xor
int3
pop
mov
or
and
cwtl
cmc
and
and
pop
aaa
popf
stc
xor
jns
imul
cmp
fdivrs
fwait
aas
inc
jnp
adc
cmc
sub
fcmovbe
cmp
dec
loop
inc
bnd
orb
pop
ja
movsb
es
bound
sub
sahf
scas
mov
mov
mov
push
daa
lock
jg
jmp
or
inc
lea
cmp
fdiv
push
mull
push
push
jno
mov
push
cltd
jbe
mov
xchg
call
dec
fiadds
xchg
cmpsb
jae
lahf
xchg
out
es
andb
sub
es
stos
pop
cs
je
aas
sti
ret
pop
sbb
cmp
loopne
sbb
sub
addr16
push
inc
enter
push
std
xchg
out
lret
adc
mov
cmp
xor
repz
or
adc
clc
xchg
jns
int
and
pop
rolb
das
or
data16
arpl
out
cmp
mov
out
adc
cmc
outsl
ucomiss
mov
in
aaa
jb
stos
cltd
aaa
rorb
mov
pause
push
loop
jmp
icebp
inc
ret
cmc
jge
in
cltd
std
test
jl
sub
inc
jnp
sub
in
mov
imul
dec
jns
jl
mov
push
test
mov
ret
cmpsl
pop
pop
popa
mov
cmp
seta
outsb
cmp
clc
mov
sub
insl
xor
pop
jg
cld
jg
xchg
or
jne
test
fsts
push
sub
jno
std
mov
aad
inc
es
stos
sub
std
iret
in
or
add
mov
test
or
movsb
shrl
push
sub
hlt
mov
jae
pop
cmp
aad
mov
insb
adc
cmpsl
cmp
frstor
push
into
sbb
mov
pop
out
pushfw
mov
mov
sbb
stc
ljmp
inc
sbb
mov
and
outsb
mov
sub
sbb
and
stc
xchg
mov
shlb
push
lea
test
xchg
test
cmp
mov
dec
cld
out
fucom
xor
push
push
cld
xor
and
dec
inc
add
lds
scas
cwtl
push
jl
xchg
fdiv
call
icebp
pusha
mov
xor
dec
filds
movsb
jmp
jnp
xorb
fstpt
adc
add
rolb
mulb
imul
clc
rcl
aad
outsl
loope
sbb
cmc
rolb
and
sub
cmc
cwtl
pop
sbb
cmp
xchg
sti
inc
out
fmuls
pop
xchg
int
enter
fcompp
sbb
sub
xchg
imul
arpl
out
dec
mov
push
xorl
daa
pop
popa
inc
test
adc
xor
and
jecxz
lds
popf
pop
mov
jmp
jb
jecxz
or
clc
add
js
cwtl
in
fnstsw
mov
lcall
int3
sbb
leave
outsb
loopne
and
movsl
sbb
sbb
sbb
test
nop
mov
inc
mov
jne
arpl
pop
jg
adc
pop
loopne
stos
pop
or
js
lahf
inc
clc
xchg
in
adc
shrl
gs
pushf
push
movsb
in
mov
loop
pop
sti
scas
or
pop
mov
mov
lds
jne
push
mov
pop
inc
cmpsl
fisttpl
loop
lret
and
imul
mov
ds
movsb
popf
cmp
pop
dec
push
or
pop
aam
addb
adc
lods
jne
scas
lea
lret
daa
movsb
call
aas
jp
ja
inc
jl
add
sbb
outsl
and
pop
data16
int3
out
push
lods
mov
test
jbe
jbe
cld
sub
iret
leave
stc
aad
cs
lret
cmpsl
pusha
dec
std
insl
dec
mov
or
lahf
pusha
adc
sbb
inc
jbe
pusha
jae
inc
cmp
sahf
xor
inc
lods
dec
xchg
test
les
sbb
xor
leave
mov
jge
jmp
cwtl
cs
inc
sahf
or
ds
cmp
cmp
or
or
mov
mov
stos
fcmovnbe
cli
arpl
dec
dec
mov
pop
or
push
dec
loopew
imul
fisttpll
add
push
cmp
cwtl
pop
xor
or
cmp
mov
movsb
sub
sbb
mov
push
mov
lret
adc
rcll
mov
inc
aam
xchg
subl
dec
mov
mov
int
adc
out
cmpsb
xchg
xchg
imul
jge
dec
adc
aad
jns
leave
loopne
addr16
fcmovbe
ss
leave
adc
xchg
sbb
sbb
jbe
sub
mov
xor
stos
pushf
and
sbb
shlb
ror
xchg
sub
sti
test
js
xlat
pushf
mov
push
jmp
cmc
outsb
cmp
das
inc
fcomps
and
iret
test
ljmp
mov
adc
ja
pop
test
fcomip
mov
les
movsb
sahf
in
js
sub
test
or
lret
hlt
das
loopne
jno
jl
sub
scas
sub
adc
adc
roll
push
repz
andb
loope
stc
sahf
mov
hlt
fsubl
sbb
pop
lds
scas
lea
cmp
and
push
pop
pushf
mov
sbb
fadd
xlat
dec
push
jge
add
in
jge
sub
lret
sub
iret
xchg
push
lret
or
imul
mov
nop
ja
inc
and
jecxz
addb
out
push
or
fisubrs
mov
or
daa
sarl
ret
fistl
xchg
repnz
scas
pop
jns
mov
fs
mov
dec
movsl
mov
les
sub
xor
mov
sub
push
addr16
iret
pop
leave
imul
daa
add
and
clc
dec
out
push
ret
push
int
jmp
es
in
add
out
inc
adc
mov
cmpsb
stc
fimull
test
sub
sub
xchg
lret
inc
xchg
lret
push
jno
pop
es
or
sub
cwtl
ret
pushf
sahf
push
lcall
loop
loop
jo
or
push
sarb
data16
and
pop
lcall
fwait
or
enter
pop
cmp
cmpl
jne
or
movsl
xchg
dec
fistl
xchg
mov
out
xor
test
popf
outsl
and
cmp
and
js
or
iret
pop
mov
push
xchg
pop
ja
xchg
lret
sti
lahf
push
sbb
and
inc
push
inc
sbb
movsl
mov
stos
sbb
sbb
adc
mov
out
pop
repz
add
aad
mov
push
outsb
stos
lret
mov
xor
xor
push
mov
pop
xor
xchg
pop
aaa
sahf
push
jecxz
xor
xchg
call
scas
dec
mov
lock
lock
push
mov
jne
leave
fs
lahf
sar
je
sbb
and
fmul
addr16
push
aad
jmp
in
push
imul
stos
inc
pop
lods
and
push
or
ljmp
adc
mov
jne
aad
add
or
push
rcrb
imul
inc
push
sub
mov
or
ja
sbb
add
pushl
shlb
icebp
rorb
adc
insb
jae
inc
pop
mov
push
scas
dec
mov
jmp
cmp
fstp
pop
rcr
cmpsl
jnp
mov
pop
jbe
and
stc
gs
mov
int3
js
pop
jp
imul
enter
jb
add
mov
outsl
push
ja
adc
mov
stos
xor
inc
insb
out
xlat
mov
in
cmc
adc
xor
lahf
idivl
popa
dec
fwait
imul
and
nop
stos
outsl
xor
jb
loopne
and
ja
loopne
or
fwait
in
mov
dec
push
mov
jb
cmp
cmc
mov
cmc
ftst
lcall
pop
sub
xchg
nop
dec
cmpb
movsl
fcmove
in
pop
and
pop
out
or
dec
das
sub
in
mov
nop
pop
arpl
rorl
lret
adc
inc
mov
pop
xor
rol
mov
adc
jmp
add
mov
shll
popf
mov
jns
daa
sub
push
sub
cmp
mov
mov
push
adc
add
pop
sub
into
scas
adc
add
push
je
pop
loope
mov
xchg
outsl
cld
dec
mov
adc
jb
pop
mov
shlb
cwtl
icebp
stc
pop
mov
xchg
and
sub
mov
cwtl
mov
add
pop
cld
mov
movb
jb
stos
insb
bound
mov
movb
pushf
nop
dec
outsb
xchg
mov
mov
je
arpl
andb
outsb
int
or
in
jnp
gs
iret
dec
in
dec
in
cmp
sub
pop
testl
push
sub
add
sub
sub
outsl
jae
push
les
xchg
gs
push
rcrb
jne
and
std
or
addb
xorl
cwtl
pusha
imul
push
jp
pop
sbbb
push
cmpsl
ds
inc
gs
add
inc
subb
dec
xchg
and
inc
fbld
pop
or
xchg
mov
or
es
adc
ljmp
stos
mov
mov
ja
push
test
sbb
and
fcmove
cmpsb
into
inc
xor
imul
add
je
push
xchg
mov
cmpsb
movsl
pop
mov
push
and
idivl
pop
adc
push
xchg
in
icebp
dec
sbb
add
out
outsb
xor
lea
pop
pop
andb
mov
in
push
mov
aas
or
in
dec
xlat
fcmovbe
je
and
arpl
loope
sar
scas
jb
ficompl
shll
ds
xchg
cs
clc
add
ja
inc
loop
or
mov
subl
andb
sub
out
inc
repz
addr16
lahf
inc
sub
aad
xor
ret
add
push
pop
xor
lahf
cmc
and
add
out
sub
fsubrl
jo
mov
jae
pop
cmc
imul
aas
arpl
inc
lock
leave
sti
pop
jo
jle
add
cli
jmp
cmp
ficomps
es
mov
cld
sahf
cli
xchg
lods
mov
xchg
mov
inc
negl
fisttps
inc
sbb
lods
inc
in
jmp
in
ret
cmp
or
xchg
divb
and
int3
mov
dec
adc
daa
mull
je
cmp
aaa
out
push
pusha
xchg
cmp
out
sbb
loop
lret
add
fcmovbe
push
subl
inc
repz
lds
sbb
ljmp
jae
xchg
push
pop
jmp
sub
loopne
mov
icebp
imulb
repz
popa
ja
shll
ss
add
jmp
test
int3
popa
imul
andl
push
cmp
and
or
xor
cli
movsl
jb
cmpsl
mov
sbb
jns
or
sub
mov
push
ljmp
sbb
lds
ret
xchg
loope
aaa
jmp
pusha
rorl
repz
test
std
xchg
inc
sub
js
mov
or
push
jge
mov
or
inc
pop
addb
adc
imul
mov
lcall
cmpsb
adc
jno
ret
cld
lods
jmp
pop
mov
lods
adc
cwtl
or
mov
ja
loope
inc
fs
lds
adc
and
das
push
xchg
out
ret
jecxz
mov
pop
pop
add
pop
mov
sub
push
testl
out
add
cmpsb
div
push
xchg
pop
jl
pop
cmp
mov
adc
repnz
int
bound
pop
xor
sbb
enter
dec
iret
es
push
cmp
jg
sahf
int3
repnz
xor
je
add
shll
push
fsubs
pop
stos
daa
push
cwtl
mov
jle
popa
mov
lretw
in
fnstcw
pop
jbe
inc
ljmp
mov
adc
mov
inc
mov
leave
in
int3
jg
jo
icebp
mov
jg
gs
popf
call
call
mov
xchg
push
push
add
pushf
or
inc
xchg
stos
mov
imul
mov
ja
push
shl
mov
mov
push
push
aaa
mov
cmp
stos
loope
xchg
nop
fisubl
jnp
cli
xchg
call
push
cmp
pushl
pop
fwait
inc
jnp
push
lret
push
scas
shl
cld
addr16
and
push
mov
js
loope
fdivrl
sub
mov
cmp
or
xor
mov
jae
xor
out
ret
jns
add
xlat
mov
bound
testb
mov
fwait
mov
xor
loop
inc
ss
cmpsl
andl
daa
lret
dec
adc
mov
dec
sbb
insb
outsb
out
mov
jg
sbb
jg
loop
repz
cld
data16
scas
xchg
cmpsb
push
push
or
ja
daa
jo
sahf
or
push
mov
ljmp
scas
loop
cltd
add
leave
scas
cli
sbb
sbb
clc
and
push
dec
jle
or
fimull
dec
inc
out
imul
add
adc
test
inc
sbbl
xchg
shrb
movsb
mov
fidivrl
outsb
push
pushf
pop
ret
mov
daa
mov
lods
push
stos
and
enter
and
pop
mov
mov
stos
sbb
mov
xchg
xchg
out
and
lds
lods
sbb
mov
fildl
inc
or
mov
jg
pop
pop
jge
inc
cmpsl
push
test
push
ja
test
lret
inc
inc
push
popa
aas
jl
mov
js
fimuls
sahf
mov
push
dec
lret
outsb
adc
loopne
in
repz
das
mov
or
stc
inc
out
sbbb
stc
adcb
and
push
adc
out
mov
push
pusha
inc
subb
je
adcl
dec
stc
imul
pusha
rclb
std
lods
xor
movsl
jb
mov
rorb
inc
and
leave
push
cltd
outsl
sub
sub
or
shll
sub
in
loope
movsl
push
xchg
iret
ljmp
and
pop
inc
pop
fdivrp
sbb
mov
lret
or
sbb
lret
in
int3
scas
icebp
lods
rcr
es
lods
pop
sbb
lret
outsb
cmp
push
rorb
cld
sub
lock
cmp
or
pop
cwtl
sbb
repz
iret
dec
or
mov
icebp
ret
xchg
cld
or
mov
jmp
scas
xchg
ret
mov
frstor
and
mov
inc
mov
sbb
lock
nop
add
pushf
iret
sub
mov
inc
add
jp
sbb
mov
inc
scas
mov
sbb
mov
test
in
mov
xor
mov
hlt
mov
cwtl
jb
addl
add
sbb
or
sub
in
in
xchg
or
mov
test
movsb
push
mov
or
mov
insb
inc
cmpsb
fldl
out
push
jne
xor
push
popa
ds
and
adc
dec
sbb
mov
shrb
pushf
addr16
xchg
ret
mov
add
or
mov
mov
std
fidivrl
adc
imul
out
jmp
cwtl
lock
fcompl
and
pop
mov
cwtl
lea
ja
cmp
dec
or
mov
mov
push
inc
je
testb
sub
out
cmp
jns
inc
outsb
out
shll
fs
jmp
bound
sub
add
fistl
leave
cmpsl
adcl
jo
hlt
sub
dec
rcrb
das
sub
adc
in
xchg
mov
xor
inc
rcl
pop
dec
or
icebp
inc
aad
dec
pop
stos
add
lea
test
mov
sub
sub
or
pop
mov
mov
cmp
lret
pop
test
and
cld
inc
jle
pop
xchg
sbbl
or
lods
in
jbe
sub
or
popf
mov
jnp
add
insl
xor
nop
mov
iret
jp
test
jp
mov
mov
lahf
inc
jae
insb
imul
jecxz
xchg
mov
loop
outsb
xor
jge
out
cmp
sarb
dec
pop
je
sbb
cmp
adc
fadd
xchg
cmp
in
and
push
loopne
mov
jns
jo
mov
pop
pop
js
adc
mov
mov
lahf
sub
je
mov
mov
and
in
sahf
or
xlat
imul
lds
test
add
sbbb
shrl
cs
jne,pt
add
and
pop
adc
pop
push
negl
adc
jbe
adc
shll
mov
pop
mov
roll
xchg
dec
jmp
xor
mov
mov
test
add
mov
xchg
pop
loope
mov
sub
adc
mov
sub
jg
jmp
bound
aam
rcl
inc
or
dec
movsb
mov
mov
mov
or
in
push
jmp
jl
pushf
stos
icebp
pop
pop
xlat
subl
mov
imul
jno
mov
mov
mov
clc
rcrb
mov
outsl
jmp
cli
adc
and
ss
mov
shlb
pushf
insb
in
fstpt
push
ret
test
orl
inc
push
aad
lahf
popa
cmpsl
pop
dec
dec
and
mov
push
pop
push
push
test
jbe
mov
out
push
sbb
inc
mov
xchg
inc
mov
pop
jge
stos
sub
inc
push
inc
mov
jecxz
cmp
test
jg
mov
cmpsb
shll
andb
inc
les
ret
dec
fdivrs
adc
vpshuflw
das
add
jl
mov
popf
or
dec
inc
bound
inc
repnz
adc
pop
and
cmpsb
addl
das
push
je
loopne
sub
in
jecxz
stc
mov
rclb
jp
adc
add
xchg
insl
and
stos
fldenv
push
stos
dec
cld
fstps
sub
push
mov
mov
inc
inc
sub
add
mov
jnp
inc
stc
mov
daa
push
aam
or
nop
sahf
mov
ret
xchg
cld
cmp
div
mov
push
idivb
imul
mov
pushf
mov
inc
mov
xchg
popf
stc
loopne
rclb
jmp
ficomps
notl
data16
inc
lret
adc
nop
loopne
mov
cmp
xor
push
movsl
movsl
and
cmc
fmul
outsb
cmp
cli
push
push
jnp
hlt
xchg
mov
push
cmc
sti
shrl
xchg
dec
mov
push
jns
jns
lret
sbb
push
push
jp
ja
dec
xor
mov
fucomp
mov
lds
lret
sbb
test
sbb
pop
adc
lgs
sub
mov
aas
adc
mov
ja
rdpmc
mov
fisubs
cmpb
adc
cmp
mov
mov
sub
aaa
add
mov
sub
test
dec
xor
fldl
dec
adc
add
rclb
out
mov
adc
rorl
pop
jge
lcall
daa
int
dec
fucom
xlat
sbb
push
cmp
jo
cltd
ds
inc
or
xchg
cmp
cmp
sbb
push
push
dec
shll
fiaddl
and
xchg
cmp
cs
stos
mov
in
push
or
cmc
popa
arpl
xor
cltd
adcb
and
decl
incl
iret
adc
je
shlb
outsb
into
cmp
and
sub
outsb
sbb
push
lret
xchg
or
push
rcl
add
sbb
enter
pop
insl
cmpsb
add
mov
lods
fidivl
dec
jo
mov
push
xor
imul
sub
ljmp
push
cs
fldenv
lock
ss
cmpsl
xor
lea
push
xor
pop
sbbl
bound
or
xor
in
jbe
test
icebp
mov
fiadds
out
pop
pushf
xor
pop
inc
adc
outsl
push
aam
cltd
testl
std
xor
stos
arpl
movsb
dec
push
mov
addl
ds
or
loopne
es
lds
push
or
fisttpll
stos
lret
mov
lods
sbb
stos
adc
arpl
sbb
jle
loope
imul
and
adc
std
aam
call
shrb
cmp
mov
add
data16
leave
fidivrs
xor
jae
xchg
push
xor
shlb
jp
hlt
adc
sahf
enter
pop
push
add
enter
and
mov
inc
jo
call
ret
jb
imul
dec
imul
mov
mov
outsb
and
add
mov
scas
lods
lods
adc
cmp
out
jne
jl
out
dec
push
jl,pn
xor
and
pop
adc
jle
push
dec
pop
jmp
bswap
mov
mov
pop
popf
or
cmc
mov
push
jns
dec
pop
jecxz
out
cltd
repz
loope
add
push
lret
pop
aaa
mov
loopne
jb
push
inc
jmp
xchg
xor
pushf
dec
hlt
push
je
mov
push
int
adc
cs
cs
fildl
adc
filds
aad
xor
or
mov
aas
jecxz
sar
push
stos
das
xor
push
outsl
jecxz
call
mov
aaa
es
mov
cmp
leave
test
pusha
mov
dec
add
lods
orb
push
outsb
xchg
notl
pop
sub
iret
jne
dec
test
test
push
pusha
leave
jbe
hlt
push
jle
nop
push
mov
add
pop
cld
daa
mov
mov
data16
xchg
aad
push
dec
fsubl
dec
or
mov
fcoms
xchg
repz
and
add
fiadds
push
cmp
sarl
push
enter
mov
mov
push
lcall
xor
insl
inc
movb
outsb
sbb
sbb
sbb
fnsave
ja
adc
jno
cltd
cmp
mov
push
loopne
jle
mov
jne
fucom
repnz
iret
mov
mov
es
fnstcw
aas
sub
xor
mov
adcl
cmpsb
xor
cmp
or
faddl
mov
mov
pmaddwd
stos
movsb
push
add
or
adc
jae
jnp
mov
imul
mov
ja
enter
mov
pop
pusha
mov
or
sbb
add
cmc
mov
shl
adc
mov
jmp
fwait
loop
mull
clc
adc
xchg
rclb
or
jne
inc
xchg
sub
add
sahf
out
cltd
mov
adc
shr
aaa
mov
pop
mov
dec
lcall
inc
lds
aam
ret
dec
dec
xchg
push
xor
dec
jecxz
mov
jge
jecxz
mov
mov
jb
add
mov
js
scas
ljmp
outsb
repnz
sbb
xor
and
fdivl
mov
mov
dec
mov
xor
dec
xor
shrb
mov
jge
setae
bnd
std
iret
stos
out
addl
adc
movsl
jmp
adc
push
push
adc
mov
cmc
stos
sub
inc
fwait
push
xor
and
not
jle
fisttps
and
lds
pop
rcl
stc
scas
rcll
pop
pop
mov
test
outsl
ja
out
stos
stos
cmpl
xchg
stos
or
jmp
sub
mov
pop
fbstp
mov
out
jecxz
imul
dec
arpl
and
mov
pop
lret
iret
loopne
jl
sub
jp
test
cmp
nop
jecxz
arpl
leave
sub
mov
xor
cmpsb
sub
sub
sub
jnp
int3
scas
rorl
sub
lea
or
adc
test
jp
push
fcoms
mov
stos
xor
dec
test
jno
cmp
sub
out
ret
push
stos
xor
push
push
jns
and
test
popf
inc
or
loopne
and
mov
or
pop
sbb
fiaddl
pop
movsl
lds
popf
xchg
popa
les
inc
or
jns
pusha
cmp
push
add
sarb
loopne
adcb
lea
iret
cwtl
pop
jmp
xchg
repnz
dec
jb
sub
dec
mov
and
arpl
into
add
pop
mov
loope
dec
sub
hlt
or
push
sub
and
cmpsl
aam
jae
dec
adc
add
fs
add
test
insl
daa
nop
movsb
add
pop
jg
cmp
add
cwtl
imul
mov
test
mov
adc
andb
mov
jo
pusha
xchg
shlb
scas
mov
mov
and
je
shlb
cmc
insb
inc
jmp
rcrl
mov
jp
cld
enter
cmp
pop
ja
icebp
lcall
push
test
daa
add
enter
pop
or
pusha
rcrl
stos
mov
cmp
dec
sbb
adc
sti
lds
not
enter
out
cmp
jno
lock
add
jmp
inc
mulb
and
cmpsb
arpl
xchg
push
movsl
push
imul
and
loop
mov
fucomip
outsl
jecxz
lret
push
bound
mov
push
and
pop
loopne
loope
cmp
push
daa
movsl
and
test
and
stos
add
add
in
repz
lahf
inc
mov
incl
adc
xchg
aam
xchg
mov
int3
cld
adc
in
or
ljmp
test
xchg
outsl
sbb
leave
or
mov
and
mov
icebp
jno
outsl
push
inc
test
jmp
sti
jl
call
xchg
aad
sub
aad
mov
rcrl
cmp
in
mov
loop
xor
pop
cmp
jge
cmp
jne
fiadds
or
mov
pop
mov
mov
jnp
cmpb
push
movsl
xchg
sub
xor
mov
aas
cmp
fwait
das
xchg
xchg
mov
push
xchg
dec
and
jbe
push
scas
xchg
es
push
pop
jno
and
aad
cmp
sti
add
xchg
sbb
out
sub
test
dec
or
dec
xlat
scas
sbb
inc
aaa
pusha
sarb
loopne
push
and
sub
xor
scas
enter
mov
add
pop
sbb
fdivl
loopne
mov
stos
xchg
insb
adcb
fcoml
idivl
outsb
sbb
adc
lods
push
add
sahf
enter
mov
cmp
adc
hlt
fcmovnu
int3
jecxz
clc
ficoms
dec
jg
adc
push
int
and
pop
je
mov
jns
imul
xor
out
rcll
adc
pop
dec
loope
fwait
jb
or
lret
inc
cltd
xor
sbb
fists
icebp
in
adc
aad
pop
adc
xchg
sbb
adc
mov
jnp
pop
loopne
and
shll
cmp
gs
imul
daa
mov
pop
mov
inc
inc
jmp
in
or
adc
mov
cmp
push
sbb
push
call
notb
inc
ret
xlat
xor
stc
loope
lret
cld
mov
leave
aaa
pop
filds
sub
mov
mov
xchg
pop
adc
xor
notl
imul
lods
or
bound
rcll
sbb
ss
sub
mov
mov
ss
xor
mov
sub
pushf
flds
jp
xor
aas
lds
inc
adc
mov
call
out
sti
hlt
mov
lahf
xor
lret
leave
in
inc
jg
movsl
loope
jne
pop
inc
adc
jbe
shlb
mov
inc
fidivrl
insl
fcomps
outsb
mov
pop
jmp
xor
sub
push
inc
jnp
and
aaa
mov
test
sbb
in
add
insl
xor
mov
xor
stc
xchg
mov
or
orps
sub
jae
mov
xor
xchg
int3
inc
filds
dec
sub
iret
ret
jae
push
add
mov
imul
xorl
lods
jl
xor
inc
xor
jb
cmp
mov
adc
jg
xor
push
out
dec
arpl
sub
jge
addl
es
and
addr16
mov
cmc
scas
sub
mull
nopl
imulb
icebp
mov
je
or
pop
lcall
into
jmp
xchg
bound
arpl
negl
sbb
add
pop
xor
jge
fnstenv
push
rcrl
cmp
push
jne
inc
psrld
int3
mov
inc
addb
fcomp
cmpsl
pop
lea
sbb
push
lahf
pop
xchg
sub
leave
fwait
push
aad
xor
adc
fdiv
fwait
sbb
arpl
or
xchg
mov
pop
xchg
mov
clc
aam
cmp
jmp
imul
es
sub
add
and
imul
xchg
movsl
cld
out
inc
cltd
xchg
insl
ss
mov
xchg
je
lea
and
push
js
movsl
xor
loop
fwait
pop
sti
push
mulb
mov
lods
test
mov
mov
dec
mov
mov
outsb
xchg
lods
scas
or
jne
pop
mov
add
arpl
lcall
out
test
ret
mov
push
mov
jp
test
loopne
and
arpl
xchg
pusha
lret
jle
mov
pmullw
fistpl
std
lret
fcmovnb
inc
rolb
repnz
leave
jl
loopne
std
pop
data16
dec
inc
mov
int3
cmc
sbb
es
or
xor
mov
jmp
fs
xlat
js
adc
fwait
repnz
sar
repz
xchg
mov
push
ja
imulb
sbb
shrb
lods
mov
xchg
testl
movsb
hlt
fidivs
cmp
adc
or
out
xor
adc
pop
cmp
jl
or
in
adc
sbb
inc
dec
ror
inc
xlat
enter
cmp
or
pusha
lea
mov
stos
fidivl
xchg
push
mov
out
mov
sub
scas
cmp
mov
data16
fisubs
shrd
das
repz
sbbl
jns
push
scas
jge
push
das
or
iret
aad
fxch
sub
sub
inc
mov
add
xchg
fs
mov
mov
data16
push
cmp
div
dec
jns
rolb
in
lea
pop
pop
lahf
adc
cmp
pusha
add
mov
out
mov
sub
jmp
xchg
cmpsb
lods
imul
sub
cmp
mov
lcall
imul
cmp
mov
mov
out
mov
das
mov
ja
xor
push
ret
dec
adc
int
sbb
fisttpl
push
mov
popa
rorb
mov
dec
cmp
mov
hlt
xlat
lret
mov
mov
iret
dec
inc
test
andl
and
sbb
pop
lock
pop
insl
cwtl
xchg
in
xchg
loope
sbb
enter
inc
xchg
jecxz
mov
pop
sbb
jbe
jle
or
rolb
bound
fisttps
pop
xor
or
sbb
cmp
pop
pop
repnz
fbld
imul
out
fimull
sub
negb
ret
cmp
mov
dec
sub
repnz
or
ja
sub
cs
std
sbb
sub
push
push
jns
into
imul
cmp
data16
adc
sub
rorl
lds
sbb
pop
iret
in
shrl
fcomps
js
in
fisttpll
fistps
cwtl
std
inc
mov
orb
outsl
dec
mov
mov
pop
inc
in
mov
xor
dec
xor
out
shrl
jno
push
add
pop
sub
and
inc
test
mov
dec
jle
push
xchg
inc
jmp
mov
lcall
inc
adc
stos
stos
cmp
js
call
jb
and
xchg
push
movsl
xchg
loopne
je
or
cld
icebp
mov
push
fimuls
push
sub
incl
xchg
inc
dec
enter
pop
lret
rorb
xor
movsl
jo
jp
jno
push
hlt
aam
cld
scas
stc
lea
cmpb
lods
lret
test
and
mov
push
cmpsb
sbb
dec
mov
mov
adc
inc
daa
push
shll
es
fsubl
ret
xchg
cmp
mov
add
cmp
sbb
jg
lock
cmpsl
pop
mov
inc
loopne
xor
ret
lea
sub
mov
testb
or
test
mov
dec
push
inc
sbb
ds
sbb
cmp
ds
cmp
mov
sahf
movsl
push
push
fbld
outsl
lahf
push
cmpsb
add
insb
pop
ret
inc
into
je
insl
xchg
lahf
mov
jl
test
push
movsl
mov
hlt
or
inc
enter
daa
popa
or
adc
mov
xchg
pop
jge
jg
inc
fsts
add
cwtl
sbb
pop
pop
cmpsl
sbb
push
xor
add
stos
mov
ret
push
add
jnp
stos
out
inc
adc
lahf
les
adc
lods
sbb
push
mov
cmpsl
cmpsl
repz
ret
jb
adc
insl
fs
rol
sub
jnp
popf
push
sub
sbb
push
and
mov
add
dec
or
mov
adc
jl
sbb
call
cmp
pop
daa
dec
dec
ljmp
jnp
gs
fmull
ret
inc
cld
mov
gs
mov
cmc
addb
push
das
ljmp
ds
lock
cmp
adc
push
pop
ret
jno
data16
rcrb
jb
or
mov
or
adc
mov
jg
and
out
sub
and
add
aas
push
in
insb
nop
mov
push
mov
pop
lret
loop
inc
stos
pop
mov
faddl
nop
out
in
lods
cmp
and
pop
cmp
mov
xor
dec
push
jp
aas
dec
sbb
dec
stc
lds
cmpsb
lea
pop
lret
xor
push
xor
int
mov
mov
sbb
fwait
inc
push
push
mov
ret
push
push
mov
lods
iret
jno
fistpl
and
insl
shll
add
jecxz
mov
arpl
mov
lods
scas
stos
push
pop
movsl
cli
fcmovnbe
outsl
dec
and
je
lods
fidivl
sbb
xchg
out
pop
out
mov
sbb
pop
mov
pop
sub
test
sub
or
test
insl
or
adc
adc
repz
pushf
loope
in
mov
lret
dec
ret
stos
jge
or
idivl
and
fisubl
dec
shll
push
imul
clc
loope
and
sbb
inc
je
push
jne
pop
sbb
dec
adc
jne
imul
add
test
pop
adc
jg
xchg
cmp
scas
dec
xor
add
cli
subb
jno
pop
lea
or
pop
call
pushf
and
jae
jbe
orb
movsl
xchg
sbb
lods
test
test
cmp
rorb
sub
aaa
into
out
dec
adc
pop
or
xchg
and
sahf
rorb
add
xlat
sub
fldcw
hlt
mov
fisttpl
add
push
insl
scas
inc
loope
cmp
and
and
mov
int
mov
js
jns
loope
outsl
and
test
fmuls
cmpsb
iret
pop
mov
mov
mov
lret
mov
adc
jp
adc
out
push
inc
adc
adc
adc
decl
cmpsl
mov
sahf
jge
pusha
mov
sub
mov
paddq
cmp
sbb
cmp
push
adc
add
cld
dec
jnp
pop
xchg
movsl
filds
das
into
and
sti
test
sub
iret
add
fnstcw
insb
mov
sub
test
fiadds
sbb
loope
sbb
in
clc
cmp
cmp
jp
das
xchg
popa
aas
in
push
out
xchg
into
ret
cmp
cmpsl
jbe
add
test
pop
and
mov
rcrl
push
mov
mov
fwait
or
cmp
fsub
cmp
fnop
mov
pop
aas
loopne
cli
mov
sar
inc
mov
or
jbe
xchg
mov
sub
add
lods
les
inc
mov
pop
push
inc
test
icebp
sbb
in
add
stos
hlt
jns
pop
xchg
jl
or
adc
xor
flds
or
ret
sbb
testb
mov
aad
sbb
mov
mov
mov
js
cmp
jne
and
xchg
sbb
jge
fs
dec
mov
addr16
mov
es
mov
adc
pop
sub
and
mov
leave
adc
cld
jno
push
xor
sahf
rcl
int3
jb
ffreep
stos
xchg
test
jg
xor
xchg
ficompl
push
data16
xor
xchg
int
xchg
sub
inc
fildl
xorb
icebp
or
jne
mov
push
fsub
ret
pop
mov
xlat
add
adc
inc
push
neg
push
inc
dec
mov
pop
and
sbb
aad
int
fistpll
insb
push
jo
je
stos
inc
mov
cmpsl
shrl
xlat
fidivrl
cld
lock
aad
add
sbb
lea
inc
sub
lcall
jp
call
pop
popa
or
cld
cmp
add
inc
mov
aaa
xchg
and
pushf
jp
xchg
inc
pop
movsl
adc
xchg
loope
cmpsb
cltd
add
pop
sub
mov
call
mov
lret
and
xchg
clc
xchg
sub
push
sub
js
jo
fwait
iret
fmull
divb
mov
mov
mov
xchg
mov
sub
mov
rorl
adc
aad
inc
out
arpl
inc
pop
not
jg
lods
jae
stos
fxch
sahf
jmp
enter
divb
data16
xor
jne
dec
push
out
adc
rolb
and
mov
pop
cmpsb
call
dec
inc
mov
pop
addr16
aad
push
mov
adc
xchg
jp
jmp
add
rcll
pop
in
lock
sbb
sbbl
xchg
and
in
mov
jg
loope
push
mov
loope
cmp
and
mov
pop
adc
insb
imul
xchg
mov
or
jle
stos
loop
test
jge
pop
push
inc
add
insl
sbb
jb
xor
pop
jle
and
mov
loop
mov
dec
xor
sbb
mov
sub
lds
roll
jmp
in
mov
mov
xlat
lcall
sbb
xchg
push
clc
nop
pop
dec
enter
call
les
pusha
xorl
outsl
cs
sbb
push
jecxz
jl
mov
fsubs
or
jecxz
insl
or
ds
test
inc
nop
sub
adc
notb
leave
mov
fadd
xchg
ret
cmp
xlat
popa
cmp
push
pop
or
insl
gs
adc
xchg
or
mov
shl
iret
addr16
xchg
adc
out
les
jae
pushw
lods
or
mov
xor
mov
push
hlt
aas
and
add
mov
mov
cmp
stos
pop
mov
sub
mov
mov
into
loope
pop
bound
and
push
in
xchg
ret
jnp
add
outsb
xchg
rol
dec
sub
lret
xor
shl
sbb
std
or
sub
popa
mov
pop
or
add
rcll
push
jo
pop
pop
pop
mov
mov
jg
pop
jne
jno
adc
dec
jnp
ficoms
xchg
sbb
cmp
sub
xor
clc
pop
adc
ficoms
gs
lods
sub
mov
ret
adc
insl
dec
jbe
test
lahf
push
adc
sub
addr16
mov
xor
mov
add
inc
and
icebp
xor
sbb
mov
rcrb
cmp
loope
ljmp
aaa
test
push
into
adc
cmp
out
sbb
data16
out
xor
out
mov
fistpll
pmuludq
mov
sub
jecxz
mov
jmp
cmp
loop
jbe
jbe
push
bound
fdivrs
jecxz
repnz
cmp
aad
cmp
icebp
add
shrb
and
and
mov
dec
jne
fmul
add
and
pop
sbb
in
adc
mov
add
lods
push
fldl
shlb
push
rcrb
movsl
push
sbb
es
or
gs
dec
shrb
xchg
pop
imul
movsl
mov
add
sbb
pop
mov
bound
push
mov
mov
fcoms
sub
and
xor
sti
ss
pop
mov
ljmp
mov
push
imul
pop
sbb
int3
shlb
dec
clc
cs
xchg
cld
fisubl
pusha
in
scas
clc
sub
cmpsl
cltd
add
xchg
jg
xor
jo
jo
or
sbb
cmc
add
push
lahf
lods
cwtl
scas
aad
out
scas
mov
jl
cmp
cli
push
clc
and
stos
jecxz
and
xor
popa
data16
sti
lods
mov
mov
rcr
cs
fidivl
loop
pop
lcall
loopne
sbb
or
inc
test
stos
fstpt
mov
jns
mov
push
or
mov
mov
or
push
pop
insl
cmc
add
mov
or
cmp
cwtl
mov
dec
add
out
cmp
lds
mov
movsb
outsb
ror
movsbl
out
pop
insl
les
jns
addr16
xchg
or
jmp
push
jmp
xor
fisubrl
addr16
ljmp
xchg
cmp
popa
xor
and
sbb
into
fs
cmc
xlat
push
ljmp
mov
pusha
mov
cmp
mov
les
cs
mov
jne
cmp
xchg
inc
into
and
lahf
js
movsb
out
cli
shrl
jns
cmp
sub
mov
add
push
loopne
mov
jmp
mov
mov
f2xm1
and
or
xchg
xchg
scas
cwtl
adc
push
pop
sub
jnp
sahf
packsswb
push
sub
push
dec
insl
adc
insl
test
lret
movsb
fisttps
pushf
fstps
push
lods
fisubrl
stos
lds
adc
jp
and
mov
ret
daa
dec
enter
es
dec
xlat
stos
sbb
std
in
xor
loopne
insl
inc
loope
xchg
int
xchg
mov
sbb
push
mov
xorl
jmp
xchg
test
repz
pop
js
pop
or
sbbl
xlat
xlat
pop
adc
insb
xor
aad
sar
sub
lcall
hlt
mov
dec
scas
mov
and
out
movsb
sbb
sbb
movsb
insl
jge
xchg
jo
inc
scas
mov
mov
stc
imul
inc
stos
or
inc
adc
test
incb
xchg
xchg
or
test
pusha
cwtl
pop
iret
sbb
int
mov
jno
jg
jle
push
xor
movsb
jnp
mov
mov
adc
or
scas
pop
sarl
jle
hlt
decb
fldl
cltd
das
push
cmc
lcall
lock
jp
leave
addr16
notb
outsb
mov
xorb
std
mov
scas
xchg
movsl
in
aaa
leave
dec
js
pop
adc
fstpt
push
add
cli
mov
jbe
pop
mov
in
jno
mov
ds
ja
loopne
lock
jne
rcl
bt
fs
mov
push
outsl
and
stos
fistpll
in
dec
mov
xchg
jg
popa
mov
cld
outsl
jns
inc
es
repnz
movsb
stc
nop
and
mov
decb
jae
sub
push
repnz
sbb
dec
mov
aam
rcll
jmp
int3
cmp
out
push
dec
aas
sbb
adc
pop
shrb
cmpsl
imul
movb
ljmp
dec
mov
pusha
inc
pop
mov
xchg
sub
add
hlt
add
or
mov
nop
push
dec
stos
stos
imul
mov
add
aaa
inc
lods
fidivrl
mov
mov
sbb
rcll
cmp
loopne
enter
dec
jno
add
push
into
shll
imul
aas
shll
iret
xchg
movsb
repnz
jecxz
in
mov
rolb
clc
cmpsb
adc
test
call
mov
sub
mov
push
std
scas
sub
jns
nop
dec
jno
sti
and
pop
js
mov
xchg
mov
xor
xor
pop
call
jae
lcall
scas
orb
pop
or
jle
cli
inc
sbb
sub
pop
inc
call
gs
cltd
mov
cmc
ja
dec
jne
aaa
lret
leave
push
pop
scas
push
clc
add
sub
scas
int3
xchg
and
jae
mov
stos
sbb
in
pusha
out
inc
pop
mov
pop
repnz
mov
sahf
aad
popa
and
adc
lahf
sub
inc
xchg
mov
data16
push
and
in
cli
mov
fbld
leave
ret
jge
pop
into
lcall
outsl
stos
nop
fsubr
jae
js
lret
ss
stc
repz
into
and
pop
jmp
aas
clc
das
or
dec
fidivrs
loop
rorl
push
les
scas
ret
movsb
and
aaa
push
jnp
out
dec
mov
mov
pusha
inc
sbb
aas
xchg
fildl
or
mov
mov
and
lods
cmp
fld
aam
pop
bound
loopne
inc
push
mov
sti
cmp
mov
dec
sub
pop
adc
inc
cmp
ret
outsb
add
les
fcoms
mov
out
loope
ds
add
mov
mov
lds
pop
sbb
or
xor
cltd
adc
xchg
loop
mov
jecxz
inc
pop
or
xchg
sarl
xor
movsl
jae
pop
in
jbe
and
subl
mov
pop
xchg
push
pop
ss
lret
xchg
xor
lret
xchg
lock
nop
mov
sub
lea
hlt
xor
iret
push
aas
xlat
and
fbld
in
and
ljmp
fnsave
shlb
mov
lds
pop
imul
pop
repz
sarl
dec
push
pop
loop
sbb
ret
int
add
ss
jae
ret
aaa
test
nop
mov
ret
mov
aas
xor
jns
dec
cli
mov
iret
repnz
ja
xchg
pusha
dec
shll
aam
shll
daa
sub
popa
push
add
outsl
dec
add
xchg
inc
mov
lret
sbb
roll
rcl
adc
adcl
mov
adc
or
imul
test
mov
push
lods
xor
push
daa
mov
cli
mov
movsl
hlt
int
rcrl
cld
dec
or
std
xor
daa
sub
mov
shlb
pop
inc
jnp
mov
xchg
dec
lea
arpl
xorl
leave
push
dec
mov
cld
pop
inc
lcall
test
imul
cmc
sbbl
or
push
inc
aam
in
cmp
push
sbb
pushf
cmp
jge
add
push
les
int
out
loopne
ja
pusha
addr16
and
loopne
mov
in
in
jbe
cmp
popl
mov
sti
lds
inc
adc
and
sub
int
xchg
jge
lahf
js
or
fcmovnb
jae
inc
fstps
xchg
cmpsl
notb
cmp
jl
add
sub
cli
cld
cmp
fdivr
sbb
arpl
cmp
cmpb
mov
jecxz
shlb
lcall
jbe
js
or
shrb
xchg
fnstsw
jo
stc
add
adc
loop,pn
mov
mov
xchg
add
xchg
scas
cltd
and
dec
fsts
jnp
out
lock
lcall
testl
popfw
sbb
jb
add
sub
into
mull
bnd
push
rorb
loop
ds
push
js
pop
lods
ficoml
aas
pop
mov
jne
fnsave
jle,pt
add
in
xchg
mov
and
or
dec
imul
add
cmpsb
and
pop
imul
fucom
pop
lret
mov
nop
idivl
adc
jae
jl
test
lods
stos
push
in
fidivs
add
and
leave
mov
movsb
cmpsl
ss
faddl
push
xlat
and
arpl
fucompp
inc
inc
movsl
in
fwait
out
fists
roll
ds
icebp
test
rcll
add
xor
sub
rcrb
inc
xchg
pop
lods
loop
add
jae
xchg
loope
ror
or
negb
xchg
xchg
xchg
sub
pop
stos
pop
mov
scas
pusha
rol
xor
mov
mov
fwait
lret
and
fsubp
and
xor
bound
mov
in
and
movsl
stos
push
mov
pop
dec
add
sahf
mov
xlat
xchg
inc
cld
std
imul
popa
push
loopne
mov
add
lds
stos
inc
pop
xor
outsb
fwait
jno
add
ret
and
mov
pushf
jnp
arpl
jge
cmpsb
std
inc
and
mov
mov
js
scas
and
cmpsl
jnp
pop
lret
mov
jne
inc
test
jmp
push
fmull
add
js
adc
out
pop
adc
imul
clc
jnp
push
je
pop
fnstcw
add
inc
stc
rdmsr
sbb
or
jb
adc
inc
lahf
ss
stos
mov
xchg
mov
inc
loope
arpl
sub
test
mov
pop
outsl
and
mov
add
or
cmp
std
mul
adc
xchg
push
iret
mov
dec
pop
and
insl
imul
lahf
nop
jge
jge
lahf
add
mov
mov
xchg
cmp
xor
mov
push
ljmp
shll
fildl
outsl
loopne
add
sbb
mov
pop
adc
in
movsl
ds
lods
dec
lods
and
shlb
aas
mov
insb
xchg
fucom
pusha
xchg
sbb
dec
sub
add
daa
ret
or
test
pusha
out
mov
jb
xchg
pop
jnp
add
out
sti
mov
or
sub
push
repz
cli
fdivs
jns
or
fsubrs
xor
ss
sbbb
jg
gs
out
mov
jle
jbe
insb
and
repnz
adc
mov
jnp
adc
sbb
lret
pop
addl
mov
fsqrt
xchg
insl
sub
pushf
cli
inc
pop
or
mov
aaa
jl
aam
shll
dec
mov
adc
pop
repz
lds
mov
mov
hlt
jp
push
inc
inc
jle
push
cmp
xchg
js
push
sub
fcomps
daa
push
ds
mov
out
add
scas
push
lret
push
push
fisubrl
push
inc
sarb
adc
aam
and
dec
gs
pop
jne
cmp
cmp
lret
xchg
pop
jl
dec
mov
inc
jno
sub
mov
fs
jecxz
add
push
pop
xor
xchg
lea
pop
fnsave
dec
mov
lcall
adc
pop
cwtl
andl
jg
pop
pop
inc
aas
add
fcomi
add
aam
jmp
add
cmp
inc
js
add
lret
push
out
pop
jge
outsl
out
push
xchg
pop
pop
xor
dec
or
por
jp
ds
mov
or
pop
xor
gs
sbb
xor
fldt
loop
lcall
mov
imul
dec
inc
sub
clc
out
enter
push
and
cmpsl
sub
inc
xor
ror
out
into
jnp
add
clc
addr16
js
add
push
test
mov
jmp
xor
int
cmpsb
test
xor
cmpsb
stos
rorl
ljmp
clc
pop
mov
mov
gs
int3
mov
sub
xchg
xchg
push
xor
ss
xor
push
jle
and
cmp
mov
fnsave
xlat
sarb
add
fs
xlat
out
mov
sub
xchg
xchg
dec
div
or
sbb
outsb
es
js
mov
pop
ss
test
xchg
add
mov
xchg
js,pt
or
movsb
popf
out
gs
sbb
sub
dec
and
mov
sbb
and
xchg
ror
movsb
cmp
ret
push
stos
sti
repnz
lods
ret
cmp
in
xchg
fadd
mov
dec
repnz
pop
xchg
call
rcll
push
cmp
divb
ja
es
movsl
xchg
add
cmp
dec
mov
or
mov
daa
xor
mov
aaa
push
jmp
div
loopne
cmpsb
imul
subb
add
loope
jmp
clc
mov
inc
adc
orl
test
cmp
cmpsb
jecxz
fdivs
stos
mov
or
cmp
lret
push
sbb
sbb
or
ss
mov
stos
pop
mov
pusha
jne
ret
test
daa
iret
andb
mov
inc
or
das
idivl
lods
ljmp
xchg
scas
mov
cmp
mov
xor
push
jl
adc
or
leave
cmp
jns
test
loopne,pt
lcall
jmp
push
dec
lds
cmp
mov
cmpsl
in
in
sub
bound
out
negl
cmp
clc
cmp
and
popf
push
fldl
into
lods
addb
add
adc
cmp
movsl
jecxz
outsl
std
mov
or
mov
xor
and
movsb
xchg
das
rcr
out
test
imul
jl
push
std
inc
mov
movsl
jmp
inc
sbb
mov
imul
stos
mov
stos
ss
cs
mov
jl
lret
out
jbe
or
out
lret
fildl
lods
out
data16
int
inc
out
daa
and
imul
mov
cmp
push
mov
cmp
jae
pop
dec
mov
fdivs
in
sar
stos
pop
sub
lahf
rcrl
push
xchg
fldl
push
popa
loopne
imull
and
mov
mov
mov
movsl
popa
idiv
popa
jnp
cld
dec
pop
testb
xlat
jmp
stos
sub
adc
xchg
pop
mov
movsl
sti
add
in
dec
cli
add
dec
xchg
out
and
pushf
jge
mov
in
ret
sahf
dec
fldenv
mov
movsb
aas
aas
xlat
cmp
sub
push
lods
loopne
dec
pop
sbbl
sbb
mov
and
js
mov
push
cmpsl
enter
mov
enter
je
dec
fdiv
test
stc
dec
imul
jo
sbb
mov
pop
outsl
jae
mov
cmp
xchg
cmc
adc
push
lcall
inc
push
pushl
jmp
pop
mov
imul
js
js
std
mov
cs
fldcw
sub
scas
push
mov
xchg
test
sbb
pusha
in
lods
gs
mov
jae
mov
pop
fwait
or
sarl
sbb
gs
xchg
test
scas
insb
xchg
sub
in
nop
cmp
stos
xchg
xor
mov
add
xchg
nop
inc
in
and
jmp
lcall
add
orb
cli
arpl
add
pop
xchg
or
pop
lock
push
insl
lods
mov
jbe
ljmp
adc
ss
test
insl
mov
mov
outsl
jl
popa
out
imul
fadds
xchg
mov
in
aam
mov
icebp
lock
sub
insb
frstor
jns
xchg
dec
cmp
mov
filds
ljmp
add
les
dec
inc
daa
or
test
call
lcall
repz
shrl
adc
ja
je
pop
mov
sbb
jo
cmp
aaa
adc
testb
mov
cmp
je
out
sub
pop
popf
mov
xchg
pop
in
jae
xor
dec
test
pop
ss
lock
cmc
dec
call
pop
push
jae
or
cmp
jnp
xchg
adc
ss
add
add
out
inc
push
fcmovnbe
cmp
pusha
call
add
lods
xor
sarl
sbbb
stos
repnz
insb
int
mov
cs
ss
dec
mov
mov
out
mov
jecxz
iret
jge
dec
mov
jno
xchg
inc
test
fnsave
fildll
xor
push
and
fsubs
ljmp
mov
mov
xchg
in
push
mov
mov
cwtl
sub
push
addl
int
cmpsl
add
inc
add
sbb
and
jg
mov
fldcw
cld
icebp
or
lcall
lock
xchg
xor
fmuls
mov
loopne
push
and
mov
and
test
hlt
mov
xor
int3
mov
mov
std
and
mov
jg
je
xor
shrb
mov
cmpsl
mov
mov
jmp
jns
dec
pop
in
pop
or
divb
mov
pop
insb
pop
sub
push
fnsave
mov
dec
jns
pushf
and
xlat
inc
fidivl
js
cmpsl
data16
adc
mov
xchg
adc
std
loop
pop
jno
lcall
mov
lods
push
fiadds
cmp
cmovg
iret
mov
fisttps
jmp
xchg
pop
repz
imul
test
sub
outsb
ret
sub
in
sub
test
out
int
or
rcr
das
mov
mov
pushf
stos
xlat
push
in
cmp
mov
dec
imul
and
mov
xchg
out
aaa
or
xchg
fmul
xchg
test
icebp
lea
int
pop
dec
ror
sbb
jnp
cmp
push
adc
jge
stos
mov
addr16
lcall
leave
mov
cmp
es
ds
iret
mov
jp
rorb
jmp
dec
in
jmp
jmp
aam
setno
aam
ret
leave
test
movsl
jb
inc
scas
mov
loop
scas
test
inc
aaa
movl
dec
add
sub
jns
push
mov
fidivl
jp
or
inc
addb
jo
mov
jne
aad
mov
cltd
mov
and
dec
dec
fxch
imul
lds
ss
je
adc
push
dec
xlat
repnz
stos
in
push
xchg
lods
aaa
jae
xlat
mov
rol
mov
mov
aad
test
out
out
popf
out
dec
cmp
loopne
fcomi
fildl
pop
cmpsb
sbb
and
xor
mov
inc
mov
mov
aad
inc
mov
leave
loop
adc
mov
and
pop
sub
lret
ret
xor
sub
xchg
cli
leave
movsb
sbb
clc
sti
jne
and
sbb
pushl
push
fcoms
jle
call
adc
jecxz
negl
int
xor
xor
cs
lret
sbb
in
jmp
dec
xchg
push
xor
adc
mov
mov
call
cmp
sbb
lock
out
jmp
mov
sbb
enter
sub
sub
xchg
sub
push
mov
aam
mov
loopne
xorb
fcomps
mov
psadbw
lods
sub
mov
in
xor
icebp
add
inc
aas
push
int
fstps
outsl
loope
mov
inc
and
fadd
pop
cmp
lret
adc
jmp
or
sbb
imul
ljmp
and
ret
push
pop
test
cli
sub
loop
adc
data16
out
enter
dec
push
in
xor
mov
sbb
aas
mov
dec
inc
xor
and
dec
addr16
jnp
lret
fidivrl
je
jmp
ret
push
out
ret
jne
jmp
outsl
mov
jae
call
clc
or
adc
repnz
or
das
mov
pop
ret
xchg
lock
or
adc
lods
jp
dec
lahf
mov
and
cmpsb
and
fldlg2
sahf
cltd
outsl
dec
das
sub
addr16
lret
loope
shl
xorb
loop
xchg
es
test
leave
outsl
dec
pop
scas
arpl
jge
mov
adcb
pop
aaa
jb
mov
ljmp
ja
and
sub
movsb
push
cmp
push
sub
mov
mov
jb
ret
out
push
ja
inc
bound
xchg
add
dec
xorb
rcll
sbb
mov
xlat
sahf
dec
adc
dec
mov
jecxz
push
insb
push
cmc
cmp
push
xor
xor
clc
stc
shrb
mov
and
fisubs
dec
sbb
cmp
stos
xchg
aas
loop
les
xchg
or
or
stc
fsubrp
adc
dec
sub
sub
in
scas
add
lds
movsb
jbe
sub
push
test
les
out
or
clc
fmul
cmp
scas
inc
mov
add
adc
pop
mov
mov
sbb
jl
xchg
es
push
ror
jne
pop
jmp
jmp
imul
sbb
fst
jge
push
insb
cli
adc
push
dec
adcb
xchg
mov
mov
ss
ss
cmp
mov
push
mov
cmp
mov
loope
fistps
jecxz
mov
daa
orb
adc
add
int3
jbe
test
mov
rclb
push
std
loopne
adc
mov
iret
cmp
push
adc
cli
pop
mov
in
aas
and
xor
xlat
inc
adc
sbb
es
xchg
jno
fstl
int3
sub
pop
jmp
xchg
xor
and
push
lea
cmpsl
sbb
mov
push
faddp
add
and
and
jmp
lods
dec
xor
jge
or
mov
ja
push
std
cwtl
sbb
in
pop
test
fnstcw
aas
movsb
sbb
jo
mov
pushf
das
xchg
push
bound
out
inc
cwtl
es
or
xor
inc
ja
jnp
loop
jmp
jl
mov
aad
fstpt
sahf
xchg
push
pop
mov
sarl
ds
cmp
lods
call
mov
nop
mov
enter
jnp
adc
jg
push
les
xlat
das
or
fisubs
stos
stos
icebp
scas
outsl
jmp
push
sbbl
inc
ss
cmpsb
cmovne
xchg
dec
xor
je
outsl
ja
adc
int3
jl
insb
dec
movsl
and
scas
enter
push
daa
rorl
fldcw
mov
dec
cli
dec
insl
inc
inc
inc
sub
xchg
scas
in
and
adc
je
or
cmp
pop
aas
dec
sub
fwait
dec
push
popa
and
test
std
push
xor
adc
inc
in
lcall
jmp
pop
xchg
arpl
in
les
pop
js
enter
mov
fisubrl
xor
outsb
stc
mov
jecxz
jge
mov
popl
inc
sub
mov
add
test
pop
or
push
jge
mov
dec
sbb
push
adc
sbb
test
jg
popf
mov
push
rolb
xor
inc
rcr
push
cltd
xchg
and
mov
in
xor
sti
jecxz
cmp
addb
push
pop
sub
aad
fildl
sub
flds
and
pop
test
pop
std
inc
mov
test
stos
push
icebp
mov
dec
sbb
lods
jle
aas
jb
jo
pop
std
or
pop
push
adc
dec
dec
insb
or
aaa
dec
mov
inc
std
outsl
push
sbb
lods
adc
imul
pop
icebp
ljmp
adc
pop
xor
leave
outsl
rcll
cli
rol
es
dec
xor
rolb
inc
movsb
fldcw
push
insl
inc
aam
dec
out
jb
inc
test
mov
loope
aam
jmp
aam
or
xor
call
andb
cmp
or
mov
jbe
mov
loop
cltd
xor
mul
xor
lods
aam
imul
adc
int
loopne
pushw
fisubrs
adc
mov
hlt
ss
dec
es
pop
sarb
mov
arpl
cmp
js
ja
adc
jmp
pop
jno
and
xor
andl
jae
jno
or
hlt
xlat
imul
fmul
add
fwait
sub
cmpb
mov
xchg
cmp
inc
imul
fnstsw
fldl
and
rol
ret
and
lods
call
lahf
daa
dec
xchg
mov
nop
pop
mov
adc
aam
pop
or
mov
mov
jo
xchg
loope
jle
das
push
pop
dec
loope
std
fdivrl
insb
jge
ret
loope
xchg
les
int
push
sub
rorb
or
push
or
mov
leave
mov
popa
lea
adc
jne,pn
dec
cmp
push
das
push
outsb
adc
nop
mov
mov
lods
push
xchg
sbb
lret
sbb
or
push
ss
adc
scas
imul
mov
adc
rcll
jnp
mov
mov
cmp
mov
imul
leave
add
dec
xchg
stos
ret
shr
icebp
dec
mov
push
mov
xchg
push
jbe
fwait
sbb
dec
fistl
into
ret
xchg
mov
push
lea
inc
cmp
push
fs
jl
pushl
into
fcmovbe
xchg
pop
adc
aad
daa
movsb
cmp
jnp
out
mov
loop
xchg
cmp
push
sbb
sbb
ss
out
jb
aaa
movsl
cmpsb
sub
jle
and
adc
orb
adc
push
mov
into
sahf
ljmp
mov
hlt
cs
and
push
add
lds
fdivrs
pop
movsl
call
leave
pop
sbb
enter
cwtl
push
fsubl
orl
shll
sti
xchg
cmp
int3
pop
inc
push
repnz
movsb
jnp
imul
inc
aam
push
push
movd
mov
call
loop
jmp
jnp
xor
xchg
lahf
test
xor
test
imul
push
imul
mov
addl
and
lcall
jl
or
mov
and
shlb
add
shrb
rorl
js
addr16
in
and
or
ljmp
repz
not
sbb
jecxz
dec
ljmp
mov
lds
pop
xchg
jecxz
push
notb
hlt
sub
sahf
add
sbb
in
mov
jns
jle
imul
aad
push
sbb
and
jmp
mov
in
mov
leave
stos
fsubrl
sub
shl
lods
fisubs
pusha
in
sbb
xor
sbb
gs
adcl
cltd
jg
adc
mov
in
xchg
lods
popf
ret
sbb
xchg
pop
jl
outsl
xchg
cmp
insb
sub
fwait
in
jo
adc
mov
loop
adc
xchg
test
xchg
shlb
sbbl
fwait
xchg
into
jb
ret
lds
rolb
sbb
sti
inc
rcrb
add
xchg
imul
icebp
stc
clc
pop
or
cltd
into
stc
mov
mov
pop
jae
sbb
jecxz
loop
rcll
and
es
notb
cmc
inc
sbb
lcall
mov
iret
mov
ss
add
push
and
cmp
and
ret
scas
jecxz
hlt
dec
push
fwait
sbb
cmp
xor
dec
add
mov
cs
fldcw
popa
ret
aad
dec
dec
adc
ret
sub
adc
or
inc
jecxz
cmc
out
aas
scas
hlt
iret
mov
js,pt
push
leave
pop
ja
ror
jo
iret
enter
mov
test
cmp
xor
cmp
mov
push
sub
sub
sbb
jnp
fisttps
rorb
inc
sbb
dec
call
adc
adc
inc
adc
mov
xchg
roll
popf
inc
xchg
outsb
pop
mov
lock
leave
cs
mov
mov
xor
jno
xorb
mov
leave
xchg
xor
and
dec
and
cmp
mov
and
xchg
inc
mov
popa
rclb
fmulp
repnz
push
ficomps
lret
xor
ret
clc
shr
icebp
movsl
add
cmp
push
jge
outsb
inc
add
jo
lahf
ret
cmp
mov
xchg
push
push
or
jns
pushf
mov
inc
inc
lea
enter
mov
inc
stc
cmpsb
sbb
cmp
out
mov
or
popa
fsubl
sbb
jp
fstpt
clc
cmp
fstps
orl
stc
sbb
push
adc
xchg
xor
sub
sar
cmp
lahf
push
shlb
enter
mov
int3
loopne
xor
cmp
leave
rorl
inc
lods
mov
jbe
mov
cmp
add
rcrb
movsl
lock
outsb
stos
shrb
clc
lret
incb
pop
popa
xchg
dec
mov
dec
subl
out
jl
jno
cmp
mov
fidivs
add
adc
or
or
xor
ss
push
cmpsl
test
fdivrl
sbb
jp
stos
mov
adc
push
stos
pushf
pusha
xchg
mov
jge
jecxz
hlt
adc
ja
inc
icebp
fs
aas
cmpsl
movsl
insl
and
je
add
adcl
loopne
sub
mov
push
sub
mov
or
imul
cmc
xchg
push
fs
xchg
out
out
dec
fidivrs
pushfw
sti
lock
dec
pop
jecxz
call
stos
jg
outsl
clc
fwait
and
push
push
cmc
adc
jge
popa
inc
movq
std
out
xchg
mov
adcb
cmp
lret
adc
lret
inc
repz
fdivl
out
in
mov
and
inc
orb
lea
mov
test
ja
mov
and
iret
sti
mov
inc
jne
sahf
mov
push
mov
sub
jp
lret
xchg
sbb
xor
cmp
adc
mov
mov
jbe
std
xchg
mov
adc
xchg
insl
gs
jns
jno
mov
dec
call
stos
sub
jbe
push
aaa
cld
add
in
xchg
test
push
jmp
xlat
std
inc
adc
test
ficompl
shrb
cmp
lcall
push
sbb
inc
in
aaa
leave
cmp
jne
xchg
jmp
lahf
and
mov
js
inc
mov
mov
aad
or
stos
xchg
pop
and
mov
mov
push
xor
cmp
or
mov
bound
scas
push
or
add
movb
cmp
nop
mov
popa
loop
add
iret
or
xchg
stos
fbld
xchg
add
jmp
adc
dec
in
xchg
xchg
and
ljmp
cld
lods
or
and
dec
xor
mov
mov
stc
bound
add
push
jns
mov
xchg
sbb
or
mov
dec
mov
ja
adc
out
push
mov
orb
xchg
xor
rorb
pop
jp
fdivs
jns
and
pop
dec
dec
xchg
out
daa
sbb
gs
pop
pushf
sub
outsl
push
push
daa
aad
out
jae
testb
push
xchg
std
jbe
aam
gs
push
cmc
aaa
dec
jl
ficompl
int3
dec
cmp
jp
notb
cld
mov
out
imul
rcll
push
loop
pop
aad
sub
xor
jb
sbb
add
pushw
insb
jecxz
or
js
cwtl
jecxz
xlat
jl
mov
lcall
test
or
and
mov
test
adc
xchg
out
insb
xchg
int
mov
lea
adc
movsb
and
arpl
stos
jecxz
es
mov
stc
mov
ffree
add
xor
dec
mov
mov
shll
enter
lret
cltd
mov
stc
loope
cltd
and
xor
cmp
push
pop
sbb
inc
inc
xchg
pusha
cmpsl
fprem
lret
test
xrelease
dec
xchg
push
rcl
jae
mov
push
loope
sub
outsb
pop
icebp
mov
dec
lcall
lods
int3
stc
daa
sub
jg
ja
popf
dec
fists
pop
jg
inc
ret
or
gs
adc
imul
pop
inc
cmp
inc
jo,pt
imul
out
iret
pop
ja
add
test
or
jl
lret
pusha
and
add
fists
xchg
int
movsb
mov
outsb
pop
jb
dec
mov
sbb
or
jl
stos
imul
stos
adc
xor
or
sub
out
cmpsb
lods
mov
add
ja
xor
xor
fcoml
repnz
mov
sub
dec
icebp
jmp
cmp
push
insb
scas
mov
pusha
mov
test
add
and
dec
in
pop
mov
outsl
sub
ss
js
sbb
out
fwait
push
loop
push
xlat
sub
cmpsb
sbb
test
popf
or
iret
fldt
aad
repz
push
aad
sbb
stc
pop
and
mov
notl
idiv
xor
data16
popa
push
in
xorb
jae
jmp
mov
add
mov
fistpl
mov
je
and
push
out
addr16
sub
std
or
dec
rcl
pop
addr16
je
xor
fwait
js
jb
and
pusha
je
mov
and
lcall
sub
fildl
add
push
inc
jno
fs
pop
xchg
cmp
lock
test
aam
popf
nop
dec
out
push
je
aaa
rorl
out
sub
in
or
push
dec
mov
test
fdivrs
loopne
data16
or
adc
iret
outsb
jp
clc
sub
cli
out
pushf
imul
push
or
cmpsl
lods
and
and
and
dec
mov
sbb
adc
addb
dec
sahf
inc
lods
pop
das
sub
sub
ficompl
ss
mov
aad
adc
js
test
xor
pop
into
lea
mov
lret
cmp
mov
fidivrs
pop
aam
cmp
fildll
iret
mov
pop
sti
leave
shll
pop
aam
stos
jo
jo
sub
mov
adc
xor
shlb
xchg
sub
lock
dec
adc
push
cmpsl
out
loop
scas
out
add
cmpsl
shlb
add
nop
into
push
inc
sbb
mov
push
test
sbb
aas
loope,pn
sub
inc
and
arpl
bound
hlt
mov
out
and
mov
decb
or
lea
das
jl
cmpsb
incb
jle
ljmp
test
sub
xchg
jnp
rolb
xchg
les
or
nop
js
fldcw
or
sarb
fxch
out
adc
jp
popa
les
and
lahf
dec
xchg
sbb
mov
cld
fs
out
or
or
pop
jge
bound
adc
or
jno
shrb
addr16
push
mov
ret
orl
movsl
cmp
hlt
sub
out
fld
adc
pop
cli
and
ljmp
jecxz
fdivl
xorps
aad
mov
nop
mov
testb
outsb
faddl
rcll
lods
aad
or
and
add
imul
jecxz
sahf
xchg
les
fidivrl
mov
adc
jae
orl
push
xor
mov
or
xchg
push
in
dec
and
daa
add
bound
xchg
sbb
dec
insb
dec
cmp
cmpsb
fs
and
call
gs
add
frstor
and
cmp
push
jnp
push
add
loopne
sarl
add
sbb
dec
add
loop
xchg
ss
popf
ja
notl
xor
ret
xchg
stos
mov
adc
loop
mov
lock
fwait
orb
sbbb
lds
test
imul
jl
push
rol
fucomp
out
repz
outsl
pextrw
pop
test
pop
pop
push
pop
cmp
xchg
jne
daa
ljmp
xchg
fmuls
lock
xchg
jmp
mov
mov
nop
outsl
push
hlt
movsl
xorb
lret
arpl
arpl
and
int3
imul
sbb
sbb
mov
pop
push
leave
sub
cmpsl
loop
adc
xor
cmp
adc
jbe
hlt
or
sbb
fsubrs
lods
in
mov
sahf
int
sbb
and
and
and
loop
dec
inc
shlb
roll
adc
pop
push
dec
mov
inc
movsl
sub
and
xor
xchg
jnp
add
lock
xchg
dec
scas
jne
inc
sub
ds
add
mov
popa
sub
push
pushf
inc
addl
or
cmc
pop
dec
loop
je
jecxz
cld
mov
cmpsb
lea
cmp
xlat
mov
jmp
push
test
imul
mov
mov
inc
loope
push
test
cltd
imul
pop
pop
jp
aad
les
cmpsb
cmp
loop
out
push
mov
out
loope
dec
mov
mov
adc
hlt
ret
fidivl
movsl
jae
std
and
mov
mov
mov
cmpl
dec
mov
xor
jmp
push
outsb
jns
push
pop
mov
mov
lret
xor
inc
push
cmpl
lods
push
imul
xchg
dec
jecxz
cmpsb
inc
inc
gs
cmp
scas
cmp
std
xchg
and
lahf
inc
cmp
lret
add
outsb
add
mov
imulb
repnz
inc
subb
jae
push
movsl
sub
or
inc
and
inc
shrl
bsr
aaa
add
lods
es
xchg
xchg
outsb
pop
vunpckhpd
bound
mov
jb
push
xchg
pop
int3
adc
bound
fisttpl
xchg
adc
sbb
adc
lea
or
imul
push
and
jo
icebp
sbb
fidivl
subb
pop
mov
int
mov
cmpsb
push
and
out
sbb
lret
rcrb
cmp
rcl
loop
out
mov
pusha
ljmp
add
pop
jle
pop
inc
xchg
push
lods
testb
shlb
cwtl
in
push
int3
or
inc
sub
inc
clc
push
in
js
xchg
aad
call
insl
fbld
mov
jmp
imul
dec
ja
mov
sti
jnp
xor
adc
xchg
jge
jmp
jbe
push
adc
jl
hlt
jmp
movsb
mov
fwait
lock
vpackssdw
shll
sub
lea
dec
cmp
test
xorb
arpl
pusha
mov
stos
inc
mov
and
lret
cwtl
mov
jl
repz
leave
cmp
dec
movsb
mov
gs
shll
or
loop
jae
es
push
cwtl
jnp
jmp
sbb
iret
jns
adc
adc
cmp
in
int
in
test
lods
cld
call
push
sbb
xor
repnz
popf
cli
fwait
and
mov
or
scas
cld
pop
pop
inc
jbe
xchg
aas
mov
adc
sbb
js
sbb
adc
sbb
ss
shlb
dec
fdivrs
call
in
dec
xchg
into
out
testb
mov
fisubrl
adc
push
inc
aaa
push
cmpsl
sbb
ret
xor
es
inc
daa
fucomip
mov
fsubrs
insb
mov
fadds
int
in
push
popf
bound
outsb
and
cmp
pop
out
pusha
push
pop
mov
sub
cld
iret
imul
enter
out
frstor
aad
aas
call
adc
and
stc
sbb
in
aaa
stc
sub
mov
push
dec
loope
repnz
add
and
mov
mov
test
pushf
xor
cld
lods
stos
movsl
mov
pop
push
rcr
data16
ja
fimull
clc
andl
sbb
mov
pop
mov
ds
fcmovu
jle
leave
xchg
mov
mov
push
add
les
pusha
xchg
aad
xchg
mov
and
xchg
xchg
mov
push
dec
idivb
mov
jbe
sub
xchg
ret
mov
stc
sbb
dec
cwtl
lea
nop
pop
push
cli
mov
jge
imul
add
jbe
or
repnz
inc
sbb
push
xchg
notl
fcoml
movsb
mov
pusha
outsb
fidivl
add
das
jae
rcrb
mov
dec
jmp
dec
cmp
and
ja
inc
push
adcb
sub
dec
mov
sbb
cmp
jl
mov
xchg
ss
or
ss
dec
andb
fstl
inc
adc
mov
jg
inc
sahf
pop
leave
or
jle
dec
aam
or
mov
push
mov
push
push
cmpb
outsl
lret
push
jl
jge
or
push
mov
fisubrl
shl
jbe
pop
out
frstor
push
dec
and
xchg
inc
xchg
iret
mov
push
inc
dec
mov
ljmp
jo
cmpsl
imul
or
push
push
inc
add
cmpsl
mov
fmulp
clc
sbb
cmp
addr16
out
mov
mov
push
notb
shlb
push
inc
mov
fnstcw
or
ret
mov
ror
imulb
add
scas
das
sub
jae
fwait
adc
aas
add
adc
notb
push
mov
or
cmc
jmp
xchg
and
in
and
inc
push
addr16
inc
lret
jl
cmpsl
sbb
divl
xor
lock
push
pop
or
push
push
push
andb
dec
inc
call
fimull
mov
jecxz
mov
push
and
pop
pusha
lock
jmp
xchg
mov
fcoms
outsl
clc
pop
cli
xchg
xchg
test
add
jae
jb
jg
adc
gs
xor
cmp
sub
sbb
adc
and
sti
cmp
jb
push
add
xorl
fwait
adc
lds
fisubs
test
shrb
xchg
pop
mov
lods
mov
jnp
mov
and
sti
mov
lahf
mov
sub
lret
cmp
movsb
cmp
mov
imul
sub
mov
inc
and
aam
cwtl
sti
dec
adc
lds
int
into
aam
aad
mov
lods
sti
push
and
sub
mov
push
cmpsl
jnp
jo
cmpsb
mov
and
jo
or
inc
or
push
jb
cmp
cmp
loope
fcoml
notb
xchg
sbb
cmp
jo
shll
in
jne
test
adc
mov
push
rcl
scas
lock
outsl
jns
jo
sub
scas
ljmp
cmp
inc
mov
add
lods
jecxz
je
loop
out
xor
and
scas
xor
jbe
pop
cmp
mov
and
ror
out
jae
cltd
out
xor
addr16
iret
call
sub
movsb
pop
mov
cmp
shl
inc
pop
pop
push
pop
xor
mov
jnp
loopne
inc
jno
sahf
push
xor
xchg
cmp
add
daa
test
je
add
ret
popa
out
int
mov
push
xchg
add
pop
adc
mov
mov
dec
loope
gs
ja
pusha
push
mov
and
out
movsb
dec
stos
adc
xchg
mov
push
lods
push
pop
lea
stc
pop
cmpb
mov
ss
fsubr
nop
lds
ljmp
or
inc
fldenv
add
sub
sub
mov
and
ds
xchg
dec
adc
cs
mov
gs
aam
clc
xchg
mov
inc
xchg
neg
fcoms
mov
fcomps
test
sub
out
xchg
cli
sbb
jl
insb
mov
leave
inc
lea
push
and
inc
sbb
enter
out
add
jbe
and
adc
jns
repnz
and
fidivrs
or
xchg
xchg
adc
mov
fstpt
cmp
pop
dec
ret
xchg
ficompl
jge
je
adc
push
mov
pushf
push
and
inc
jp
ds
mov
aam
xlat
push
xor
das
out
rcll
inc
scas
cmpsb
add
insl
js
imul
sahf
inc
mov
push
xchg
and
shrb
add
and
dec
cltd
mov
mov
adcl
push
push
pop
imul
test
add
movsl
add
mov
in
andb
aaa
xor
cmpsb
cmpsl
jb
js
dec
jne
inc
xchg
mov
dec
sti
mov
iret
xchg
push
gs
adc
mov
push
pushf
shl
scas
dec
popf
lock
addl
inc
pop
push
gs
jnp
js
inc
clc
adc
addb
add
inc
cld
call
or
ficompl
and
sub
rorb
lea
cmc
insb
pushf
enter
adc
stos
test
push
je
xor
adc
jne
mov
add
mov
lcall
hlt
mov
in
in
shll
das
sub
mov
xchg
fwait
pop
cmp
sbb
aam
aaa
mov
movsl
jp
fistl
jnp
mov
mov
loop
lds
jmp
dec
pop
imul
jns
movl
jbe
subl
das
or
repnz
stos
fdivp
insb
out
movsb
lods
lcall
sub
aam
fisubs
pop
adc
fcoml
jbe
pop
inc
mov
jae
jb
adc
sti
repnz
test
or
push
and
ja
push
mov
jmp
cmc
xor
xchg
xchg
mov
outsl
or
or
pop
stos
movsb
repz
or
out
lea
push
stc
cld
int3
out
jbe
jmp
int3
adc
or
divl
shr
fisttpll
cld
insb
les
cmp
jne
xchg
lret
cld
adc
daa
dec
mov
sbb
cmpsb
add
mov
imul
es
bswap
xor
gs
cmp
adc
scas
js
add
pop
mov
jno
insl
lret
push
sbb
pop
mov
and
pop
shll
mov
pop
shr
out
add
add
fucomip
mov
adc
jp
xor
orb
fwait
xchg
imul
push
in
nop
bnd
outsl
jnp
adc
cmpsb
dec
jle
xor
frstor
out
xchg
lds
sbb
lret
lds
hlt
xor
and
out
insl
insl
sarb
in
jnp
cmp
and
mov
mov
subl
mov
icebp
mov
fistps
and
push
fscale
dec
jmp
cwtl
inc
adc
or
sahf
add
xlat
jg
dec
and
mov
call
sbb
lcall
das
sbb
xchg
mulb
sbb
or
push
mov
jnp
push
mov
lds
mov
je
push
dec
xor
add
int3
sti
push
xchg
repz
adc
jecxz
push
mov
mov
jns
push
dec
data16
push
ja
imul
mov
lahf
pop
jmp
popa
mov
mov
frndint
gs
xor
xor
inc
pop
int3
adc
sti
jbe
cmp
jl
pushf
pop
dec
xor
faddp
mov
fucomp
mov
and
enter
inc
cltd
or
inc
sub
js
cld
jg
add
or
stos
jmp
iret
dec
iret
shlb
stc
xor
inc
xor
xor
sarb
push
jnp
cmpsl
lods
call
movsb
fcomps
or
dec
xchg
repz
mov
pop
gs
call
mov
cmp
repnz
mov
shlb
hlt
and
int
fisttpl
adc
in
out
pop
sub
call
mov
and
inc
into
push
sbb
shr
adc
push
or
lahf
fmull
cmp
and
sub
sbb
call
inc
cmpsb
inc
lock
jge
lahf
lahf
lahf
addr16
jae
jnp
jbe
or
in
pop
mov
cmp
xor
rcll
mov
fisubrl
popa
inc
dec
jg
jg
cmp
rcll
icebp
movsb
sbb
mov
aam
and
jmp
lahf
cmp
lods
popf
and
push
cmp
notb
aam
pop
sbb
jl
rclb
xchg
mov
or
dec
sahf
mov
jno
insb
subb
push
mov
add
out
sarl
test
sbb
idivl
lods
pop
inc
inc
call
cmp
mov
clc
push
cltd
addr16
movsl
fwait
mov
add
xchg
nop
sub
insl
mov
jno,pt
sbb
lcall
ss
inc
push
jae
andb
movsl
push
inc
popa
test
pop
mov
jp
push
ret
loope
jae
jl
cmp
repz
jl
es
enter
sti
call
repz
incb
jo
xor
mov
add
pusha
xchg
sbb
dec
push
push
into
ja
push
jo
pop
push
std
push
mov
ja
test
into
in
xor
stos
fldcw
pop
xchg
jno
cmp
xchg
bsr
or
lahf
std
push
mov
pusha
ret
cli
aaa
in
mov
mov
es
add
add
sahf
ficompl
int
testb
inc
mov
jb
xor
in
fiadds
je
inc
cmp
les
arpl
es
inc
lods
sbb
mov
jo
arpl
cmpsl
jle,pt
mov
scas
fidivs
dec
cli
sbb
lcall
aas
loopne
leave
cmp
push
and
cld
dec
test
aas
repz
into
mov
xor
sub
data16
popf
inc
cmc
pop
cmp
and
lea
dec
adc
lret
arpl
jbe
outsl
icebp
pop
xchg
les
jns
sbb
pop
sbb
stc
adc
or
mov
repz
inc
xchg
inc
sbb
pop
add
jo
jbe
jg
test
cmpsb
test
pop
mov
loop
cmp
cli
rep
lock
std
mov
dec
ret
mulb
cmp
shll
mov
pop
cmpsb
inc
dec
lret
and
push
popl
cmp
cmpsb
cwtl
movsl
das
not
nop
inc
sar
imul
jp
jg
push
mov
xchg
addr16
mov
cs
cltd
jbe
and
and
leave
scas
xchg
daa
sbb
sub
out
shl
popf
es
fucomip
lds
cmp
lcall
fisubl
pop
stos
xor
dec
mov
mov
xchg
in
xorps
add
data16
sarb
xor
movsl
sub
dec
aas
mov
testb
ja
push
cmpsl
daa
push
xor
outsl
mov
xchg
flds
andb
arpl
popf
jp
mov
dec
jnp
sub
fisttpl
lock
jbe
frndint
xchg
aam
add
repz
push
xlat
pop
out
rol
les
sbb
ficomps
xor
sbb
lods
je
sbb
iret
jne
std
hlt
jnp
mov
lahf
and
aas
mov
insb
inc
std
mov
pop
sbb
mov
push
xchg
pop
push
rcl
out
mov
pop
std
lock
scas
ret
and
mov
cmpsb
fldl
adcl
adc
insl
dec
loopne
shlb
sub
pop
jg
sub
int3
aaa
lahf
jl
mov
jo
jns
and
sbb
mov
xchg
daa
add
in
push
repz
pop
xor
mov
jb
sub
dec
push
out
push
ss
popf
ret
movsb
cs
sbb
int3
push
scas
lock
je
inc
clc
pop
std
addr16
fnsave
icebp
jmp
cli
push
cwtl
push
jg
bound
sub
enter
stc
add
inc
cmpsb
test
sbb
int
addl
push
fimull
add
push
mov
jle
lods
add
popa
xchg
sub
lcall
leave
stos
imul
daa
and
call
loop
inc
bound
rolb
jg
inc
push
inc
pushf
jno
sub
push
xchg
xlat
pop
rol
shlb
iret
dec
cmp
or
mov
fmulp
sahf
sub
add
jmp
jno
scas
cmpsb
add
adc
arpl
shlb
in
xchg
cwtl
mov
xor
stos
sub
dec
mov
ret
cld
xor
test
popa
ss
jmp
lcall
popa
stos
jle
xchg
leave
ds
aam
scas
pop
inc
testb
lahf
lea
jp
jb
inc
sub
cmp
out
je
adc
xchg
dec
adc
or
cmp
cmc
in
mov
lds
ret
insb
sti
cmp
or
shlb
push
sub
popa
iret
popf
sbb
test
push
mov
pop
popf
jle
inc
or
clc
adc
inc
insb
inc
lds
or
sbb
scas
fucom
mov
push
pop
adc
aas
push
rolb
push
sbb
jnp
arpl
mov
imul
mov
mov
fdivs
insl
jbe
nop
aad
push
jg
mov
sub
mov
mov
icebp
xchg
nop
lds
dec
sbb
add
sbb
scas
shrl
xchg
call
imul
int3
or
test
lods
and
xchg
dec
xor
mov
xchg
dec
xor
add
and
add
sbb
and
mov
sub
push
fdivrs
add
inc
shr
ret
int3
out
inc
sar
cmp
mov
or
lock
jmp
fldcw
or
decl
jg
xor
loopne
pop
in
scas
xchg
xor
aam
lds
mov
pop
mov
cld
cld
jg
lds
mov
sub
outsl
xchg
mov
jo
pop
cmpsb
and
imul
insb
clc
dec
and
jnp
xor
std
leave
pop
pop
gs
gs
push
mov
cmc
xchg
call
xor
cmovge
lods
cmpsl
inc
loopne
out
push
xor
inc
mov
out
inc
push
cs
in
mov
arpl
push
out
xchg
push
adc
pop
fs
imul
repnz
sub
jns
jg
mov
mov
mov
push
jns
test
pushf
or
cmp
ficompl
test
xor
jle
lods
insb
adc
leave
cmp
push
sub
inc
xchg
shl
stos
cli
pop
or
xchg
push
xchg
or
inc
pop
mov
jns
mov
mov
sub
mov
in
mov
fidivrl
sbb
xorl
or
mov
mov
addl
popaw
bound
mov
outsl
test
cmp
or
out
mov
lods
pop
push
inc
cwtl
jne
inc
test
sbb
nop
sub
insb
pusha
lods
stos
jecxz
hlt
int3
mov
clc
daa
or
cmp
loope
mov
push
or
fsubr
jb
mov
push
push
outsb
pop
lcall
fmul
mov
push
cmc
popa
jp
or
jne
mov
pop
mov
and
shll
xor
fcmovne
and
popa
mov
popf
fildll
cmpsl
lcall
ds
dec
push
jnp
andb
js
mov
out
or
stos
cmp
leave
pop
stc
push
imul
jge
fidivs
pop
cmp
aad
xchg
pop
lahf
and
dec
jp
bound
sub
shl
mov
cltd
sub
jo
enter
or
lea
aaa
fidivrl
jne
xchg
fstpt
ljmp
int3
fld
mov
decl
sar
ss
outsl
ds
push
fnsave
inc
dec
cmc
iret
dec
mov
iret
aaa
iret
push
mov
stos
nop
or
adc
aas
clc
shlb
adcl
lods
push
jg
mov
adc
imul
or
inc
loop
xor
dec
inc
mov
cmp
addr16
pop
rcll
neg
xchg
push
sbb
cmc
xchg
add
add
mov
adc
push
sahf
scas
sbb
loopne
jns
pushf
sbb
and
cmp
dec
sbb
jb
out
and
xor
cs
sbb
xor
mul
data16
cmp
inc
ds
repz
shll
adc
push
xor
dec
lock
dec
push
pop
mov
or
pop
sbb
cmpsb
sbb
xchg
cmp
lahf
outsb
outsl
addr16
mov
xchg
xchg
out
repnz
mov
daa
pop
xchg
jp
push
xor
push
fnstsw
int3
imul
dec
cmc
insl
add
outsl
lret
push
xor
fcomi
insb
fadd
popl
pop
lret
add
mov
shlb
mov
loop
scas
inc
jmp
rcl
lods
nop
out
xchg
and
cmp
mov
stos
jo
jae
mov
mov
jg
andb
rcll
push
push
push
cwtl
in
ljmp
push
push
sti
pavgb
push
mov
mov
sbbb
sbb
lds
repz
fcoms
mov
xchg
test
div
mov
insb
popa
rcl
jle
lret
adc
ljmp
imul
xor
es
out
mov
or
xorb
pop
cwtl
insl
mov
push
mov
pop
xchg
mov
cmp
mov
sub
pop
inc
and
adc
in
mov
lods
inc
nop
in
xchg
in
mov
xor
dec
pop
fwait
mov
sub
inc
scas
lods
out
sbb
scas
loope
pop
mov
xor
mov
fisttps
mov
cmp
push
mov
mov
adc
jns
push
fwait
pop
pop
mov
lds
add
add
mov
loope
mov
fdivrs
cld
repz
push
out
dec
push
insb
inc
jnp
mov
lret
cmp
movups
jle
add
aas
push
stos
dec
in
cld
gs
sub
push
ja
mov
mov
dec
sbb
mov
xor
pusha
mov
sbb
mov
cmp
mov
jo
sub
mov
ja
push
sbb
leave
jl
jo
mov
inc
scas
out
sbb
inc
push
call
dec
add
cld
adc
push
ret
fwait
add
mov
in
out
jle
ljmp
addl
mov
adc
sbb
popf
adc
or
adc
mov
pushf
ljmp
jg
aam
je
dec
int3
aas
mov
pop
or
adc
adc
or
scas
mov
int3
cmpsb
push
out
sahf
js
xlat
fprem
mov
loopne
fs
ret
xorl
and
or
test
movsl
test
lock
aas
sub
mov
arpl
dec
mov
jmp
and
dec
pop
cs
cmp
inc
loop
xor
pop
sbb
push
push
lock
sub
testb
in
fdivrl
popa
mov
push
test
mov
fisubrl
push
xlat
push
andb
push
mov
fstl
test
and
enter
inc
ret
xchg
jecxz
inc
outsb
not
mov
mov
lahf
jb
sub
aam
mov
jae
or
imul
insl
xor
pushf
clc
mov
add
xchg
mov
sub
push
pushf
xchg
rcrl
js
das
xor
mov
xchg
rcr
cmpsb
xor
sub
cmp
add
fs
mov
xor
sbb
movsl
mov
dec
rcll
call
cmp
scas
repz
and
or
lock
mov
and
cmp
je
pop
jo
scas
out
in
out
xchg
mov
ret
add
push
lds
rolb
inc
mov
pop
std
daa
das
pusha
lret
push
cmp
add
jmp
test
fstpl
pop
xchg
mov
rclb
shlb
push
or
add
inc
xor
lds
ret
jnp
fs
das
or
and
in
daa
cmp
dec
cmp
in
lret
arpl
inc
mov
ljmp
jg
push
sub
mov
popa
imul
sbb
xor
cmc
push
inc
out
movsb
outsl
lret
test
inc
lahf
ljmp
test
repnz
cwtl
aam
call
add
push
jns
ja
sub
xchg
test
sub
rcr
rorb
add
clc
push
add
rolb
fdivr
mov
int
gs
js
push
add
jmp
jmp
aad
loope
xchg
mov
xor
push
iret
inc
or
lods
int
dec
pushf
roll
dec
outsl
loop
push
xor
mov
pop
cmp
outsl
nop
mov
lahf
push
cs
adc
jb
inc
js
inc
out
neg
mov
jmp
sbb
cmpsl
sti
sahf
ds
je
repnz
mov
gs
push
pop
push
or
pop
mov
lock
sub
jl
jb
repz
and
push
xlat
aaa
jnp
lds
sub
xor
ret
andb
lock
and
jge
inc
addr16
lock
js
loope
xchg
add
movsb
xchg
xor
into
push
xorb
aad
push
sbb
push
add
lahf
sbb
cmpsb
push
jmp
mov
xchg
ds
icebp
xchg
sub
je
mov
adc
loope
adc
lea
adc
mov
cmp
mov
mov
mov
ret
adc
aad
push
adc
out
rorl
mov
add
outsl
into
xchg
xor
js
pusha
sbb
lea
mov
mov
int
cmc
xor
movsl
push
push
sub
cmc
add
lods
xchg
jecxz
clc
test
inc
std
pop
mov
notb
nop
mov
push
push
jl
mov
fiadds
and
sbb
rorl
cwtl
ljmp
push
js
lock
push
lds
mov
int3
inc
push
js
and
hlt
into
fistps
mov
pop
inc
xchg
jp
inc
cmp
mov
aas
es
lock
add
aam
out
push
sub
cmp
dec
mov
jbe
pop
mov
stc
xchg
add
je
sbbl
scas
cs
fidivrs
mov
add
mov
shll
mov
push
sub
or
xchg
dec
movsl
jp
or
mov
and
push
dec
cli
xor
mov
pop
xchg
push
popf
mov
bound
inc
addl
ja
cmp
jnp
imul
mov
enter
cltd
pop
mov
cmp
push
or
push
lods
jle
pop
fstpt
sbb
cmp
clc
xor
fidivl
bound
inc
push
and
mov
and
fucom
push
aaa
stc
jb
loope
push
fadds
das
daa
ret
shrl
push
push
pushf
add
mov
xchg
jno
testb
cltd
mov
push
cs
or
test
pop
enter
arpl
add
clc
daa
mov
or
scas
gs
xchg
in
jg
dec
mov
xchg
mov
cwtl
or
jae
scas
pop
lcall
idivl
in
lret
int
cmp
cmp
add
xchg
andb
cmc
xchg
cmp
inc
pusha
xor
push
movsb
mov
push
stos
je
mov
mov
mov
push
loopne
inc
or
addr16
cmpsb
xor
push
and
out
push
outsb
push
adc
arpl
mov
lcall
jecxz
stc
mov
jge
and
mov
jl
movsb
jl
push
push
inc
in
js
xchg
pop
push
or
adc
rorb
gs
imul
aad
mov
outsb
mov
lock
ret
dec
int
loopne
and
xchg
es
cltd
mov
jl
inc
dec
lds
les
mov
cltd
and
push
movsb
dec
out
mov
and
pop
inc
popa
js
rolb
adc
jmp
cmp
lds
roll
mov
subb
prefetch
or
sbb
shlb
inc
call
stc
jno
pop
fdivp
push
mov
and
xchg
mov
jae
push
rcr
out
inc
cmp
out
pop
mov
dec
into
pop
sub
push
test
fstp
pop
dec
and
or
push
jnp
movsb
or
stc
dec
or
mov
gs
mov
lods
mov
cld
inc
jno
jg
dec
popf
jle
mov
sub
inc
shr
bound
mov
mov
iret
adc
lret
adc
fsubrl
pop
jne
sub
mov
cwtl
cwtl
push
pop
add
sbb
jl
mov
in
sti
bound
rol
pop
movsl
icebp
sub
cmpsl
lock
in
test
frndint
or
cwtl
insb
or
scas
inc
or
inc
movsl
lea
int
or
int
je
mov
mov
out
push
or
cmpsl
and
out
xor
and
xchg
sub
fisttpll
rorl
pushl
fstps
inc
xchg
inc
cmp
add
mov
shrb
add
add
out
push
es
repz
jb
mov
mov
dec
mov
jns
icebp
inc
xchg
pop
or
loopne
loope
jg
xchg
test
enter
inc
fcomip
push
and
mov
mov
dec
inc
out
mov
xor
les
roll
insb
arpl
or
inc
adc
mov
jno
out
xor
inc
cmp
js
xchg
mov
add
int3
mov
push
mov
in
cld
fdivl
out
outsb
sbb
add
dec
out
mov
dec
enter
fdivs
mov
or
fidivrl
jecxz
and
pusha
insb
loopne
adc
sub
jns
fsts
js
mov
xchg
out
cld
scas
jecxz
sbb
fmuls
mov
out
xor
lret
jbe
and
xchg
js
push
mov
aad
fwait
mov
dec
sahf
lods
fs
pop
sub
or
mov
or
pop
add
into
cltd
repnz
or
mov
and
lret
mov
aas
imul
lret
in
mov
dec
push
push
cmpsb
cwtl
jno
xchg
sub
movsl
stc
inc
jb
jmp
mov
std
adc
mov
push
cmpsb
add
lods
mov
adc
in
pop
push
cli
fimull
loope
cmp
inc
jmp
cmp
adc
cmp
scas
dec
aas
sbb
mov
cwtl
jne
mov
scas
xchg
xchg
bound
cmp
lahf
mov
shlb
cmp
or
adc
in
movsb
cmpsb
ss
cmp
js
sub
repnz
dec
and
sub
mov
mov
jae
and
adc
or
mov
lock
dec
notb
mov
xchg
repnz
pop
sub
sahf
fldt
mov
jno
test
inc
push
ret
add
fiaddl
xor
aaa
imul
fstpl
mov
fistl
in
dec
add
pop
imul
ljmp
push
sub
mov
inc
das
fs
lahf
or
pusha
loope
add
int3
ja
push
cltd
push
cs
mov
mov
mov
in
sbb
idivl
lret
mov
aaa
scas
mov
pusha
negb
mov
pop
lods
popf
xor
mov
popf
mov
addr16
xchg
loope
pop
add
out
popa
inc
repz
das
pop
in
sahf
cmp
mov
je
or
in
dec
outsl
add
fisubl
lcall
cmc
std
adc
sti
sbb
sub
rcll
jecxz
pop
pusha
negl
pop
jmp
inc
add
pusha
test
dec
nop
mov
mov
addr16
mov
outsl
mov
out
push
addr16
ja
aam
xchg
or
cmp
pop
mov
pop
cmpsb
push
xor
pop
xor
mov
out
test
sbb
fcomi
xchg
cmp
pop
sub
es
clc
mov
cmp
mov
inc
je
xchg
cmp
mov
pop
mov
aad
and
xor
adc
dec
mov
lock
aas
pop
mov
popf
mov
mov
roll
shrl
or
cmc
data16
pop
add
sub
mov
push
adc
inc
aaa
mov
aaa
adcb
mov
out
and
dec
mov
xchg
push
add
adc
ja
add
jae
mov
jp
test
inc
les
rolb
or
cmc
push
mov
mov
nop
mov
aas
stos
add
or
mov
sbb
in
xlat
pop
or
test
jo
bound
sbb
fwait
adc
xor
inc
mov
lcall
sub
lock
xchg
dec
daa
xchg
push
jge
push
mov
adc
in
push
adc
mov
mov
bound
adc
pop
add
inc
cwtl
in
sub
icebp
imulb
out
adc
aad
imul
mov
jp
jmp
mov
cmp
int3
mov
insl
mov
xor
sbb
xor
test
cli
sbb
push
shrl
jns
rcrb
popf
sub
and
pop
xchg
jl
add
push
cmp
es
notl
aam
sahf
pop
add
outsb
outsb
jne
lock
movsb
mov
cmp
adc
and
mov
mov
in
pcmpgtw
enter
lea
xor
shlb
fistps
call
cld
xor
inc
pop
mov
mov
sbb
add
in
stos
push
fs
aas
mov
cs
jp
aaa
in
jg
ficoms
xor
mov
hlt
push
test
mov
data16
jbe
pusha
sbb
pop
dec
mov
sub
sub
cltd
xlat
cmp
or
pop
mov
call
mov
mov
sbb
push
cld
sub
scas
dec
push
mov
insl
scas
test
jge
les
mov
xor
or
adc
pop
lods
sbb
imul
sbb
pop
mov
mov
shll
mov
cld
jg,pt
push
dec
mov
loope
enter
pop
sbb
mov
movsb
imul
mov
out
pop
scas
mov
jno,pt
outsl
jp
pop
movsb
inc
mov
leave
sarb
inc
stc
xchg
rorl
lret
pushf
divl
mov
xchg
inc
mov
imul
test
gs
insl
cmpsb
dec
or
cmpsl
bound
mov
mov
push
push
mov
inc
mov
cmc
mov
arpl
mov
xchg
dec
push
push
andb
test
add
dec
mov
dec
mov
stos
dec
or
mov
aam
movb
in
dec
mov
add
jo
sub
push
mov
rolb
cmp
sub
sti
imul
sarl
add
cmpsb
pusha
and
push
lods
repnz
cltd
outsb
cmp
push
mull
cmpsb
lock
fisubrl
xor
mov
out
sub
mov
dec
adc
addr16
sbb
movsb
xchg
push
lcall
pop
ja
out
fst
cmp
lds
cli
and
stos
daa
popf
jo
or
shlb
rclb
dec
jecxz
pop
outsl
rcl
xchg
mov
inc
push
sbb
popa
out
sub
jno
and
std
xorl
mov
cwtl
adc
call
decb
lds
dec
inc
rolb
or
cmp
or
fstpl
jb
int
adc
mov
push
cmp
xchg
jae
in
pop
push
stos
into
mov
adc
lcall
cltd
xchg
push
pop
inc
jl
int
insb
mov
mov
dec
dec
sub
push
mov
pusha
lahf
lods
rorb
cmp
lea
loop
cmpsb
adc
xchg
inc
mov
adc
bound
sarb
adc
xchg
dec
cwtl
lods
ljmp
or
mov
cli
cmp
sub
in
iret
fcomi
cmp
loop
mov
int
enter
bound
stc
jb
outsb
sub
push
push
mov
addr16
add
iret
xor
inc
lahf
and
push
movsb
pop
jg
add
and
mov
int
mov
xor
ds
jbe
push
outsb
stos
lds
adc
adc
sbb
dec
js
enter
arpl
pushf
xchg
add
loope
xchg
icebp
jbe
xadd
sub
mov
ja
shll
lcall
insl
test
sarb
mov
and
mov
mov
adc
inc
mov
insl
fidivrl
fwait
out
push
and
das
push
pop
data16
inc
rcrl
cmpsl
test
sbb
popa
inc
xchg
cmp
lods
subb
mov
dec
push
int3
dec
jns
mov
out
xchg
decb
jge
adc
push
or
push
sbb
xchg
fnstenv
or
and
mov
mov
in
and
fnsave
jno
addr16
ljmp
or
in
and
in
fadds
fsubr
jne
ficoms
mov
dec
and
or
and
xor
into
xchg
cmpb
scas
or
sbb
mov
int
ljmp
pop
stc
les
aas
sub
nop
inc
push
mov
daa
lods
lock
imul
cmp
out
xor
pop
dec
lcall
outsb
cmpb
loopnew
arpl
cs
add
push
adc
xor
mov
daa
add
jge
dec
call
xchg
mov
mov
add
mov
pop
add
or
sahf
lret
dec
mov
mov
cmp
pop
mov
xor
sti
insl
ds
push
adc
insb
test
mov
pusha
xchg
xchg
pop
lock
pop
subw
or
add
pop
jnp
out
push
rcr
lock
pop
xlat
lahf
mov
inc
adc
inc
adc
pushf
cltd
push
lds
lods
aam
test
aas
jecxz
dec
test
adc
cmp
xor
or
movsl
push
push
mov
xchg
iret
repz
ret
or
cmp
data16
in
std
jae
inc
int3
jae
addb
in
popf
cmc
xor
sub
gs
dec
shlb
mov
xor
mov
addr16
popa
mov
incl
jp
arpl
cmp
dec
aam
xor
fildll
out
add
rcll
push
daa
add
mov
psrlq
mov
sbb
jo
mov
cmpsb
inc
sub
or
inc
mov
enter
sti
or
scas
mov
mov
mov
insb
jmp
jmp
cmp
xorb
cmpsb
jo
icebp
push
adc
dec
xchg
xorb
imul
mov
mov
sub
pusha
out
mov
xor
or
lods
popf
mov
sub
mov
inc
push
outsb
scas
push
dec
mov
lock
cli
clc
ficoms
push
rolb
ret
fsubs
and
jmp
outsb
negb
ds
mov
xlat
jo
xchg
outsb
mov
out
adc
orb
bound
sbb
xor
dec
in
sbb
ret
test
lea
dec
imul
jge
mov
jg
lea
push
sub
das
mov
pop
shl
dec
sbb
mov
mov
push
and
mov
mov
orl
test
movsb
arpl
shlb
pop
xchg
fdivrp
cmp
orb
xlat
out
cs
lods
dec
pop
insl
out
cld
loope
sub
pop
jo
scas
push
mov
mov
jmp
mov
xlat
and
sahf
pop
inc
jae
push
imul
ret
arpl
push
and
lods
inc
scas
xor
lahf
imul
iret
sti
sbb
scas
mov
into
pop
or
je
mov
add
es
mov
mov
jecxz
xchg
push
mov
dec
popf
cmpl
loop
jecxz
and
xor
jle
repnz
loope
shl
stos
xor
jno
fnsave
movsb
popa
outsl
xor
ds
sarb
cmc
mov
fs
nop
and
out
dec
gs
adc
lret
icebp
jge
mov
in
mov
inc
or
xchg
jl
aas
jge
or
leave
or
mov
dec
jbe
imul
stos
adc
cli
out
jmp
or
push
pusha
out
sbb
push
pop
into
push
arpl
dec
mov
dec
mov
jne
mov
push
popf
cli
pop
movsb
nop
sti
js
enter
jno
ljmp
outsb
xchg
mov
test
inc
xor
not
sub
hlt
jo
stos
stc
pop
popa
ljmp
sbb
or
jb
xchg
test
insl
cld
adc
fmull
sbb
mov
xor
fcoml
bound
movsl
lock
cmp
fiadds
or
negb
adc
push
outsl
inc
cld
push
inc
add
cmpsl
jmp
push
xchg
out
ja
push
adc
mov
popa
sarl
push
push
hlt
in
push
faddl
test
push
jge
icebp
xlat
fwait
push
andb
je
insl
jae
dec
jmp
clc
sub
jg
bound
cmp
stos
jge
shrb
inc
and
out
addr16
je
movsb
ret
fisttpll
xchg
cmp
push
mov
call
xchg
jno
mov
mov
arpl
pop
mulb
and
or
inc
roll
pusha
pushf
mov
shl
arpl
int3
mov
fisubrs
repnz
dec
adc
jmp
mov
out
je
movsl
inc
fwait
add
scas
inc
push
enter
stos
mov
mov
push
out
xchg
push
stos
xchg
mov
mov
repz
mov
xchg
cmp
adc
mov
dec
pop
cmp
sbb
xor
mov
mov
movsl
sbb
aam
push
adc
add
repnz
das
mov
xor
jmp
push
add
xor
lods
pusha
jne
fistpl
adc
xchg
xchg
jp
repnz
pop
in
aad
push
pop
dec
popf
pop
jmp
out
jnp
or
mov
jo
shlb
je
sbb
sub
in
call
xchg
cltd
inc
xor
in
ljmp
add
arpl
pop
and
aaa
dec
sub
shll
jne
movsb
ss
cmp
out
test
js
filds
sbb
add
mov
cmc
cld
out
ficoml
push
lock
mov
xor
inc
jmp
scas
mov
sbb
jmp
push
dec
repnz
mov
scas
inc
mov
insb
test
fldl
and
fdivrl
and
cmp
mov
and
fadds
mov
pusha
pop
data16
imul
imul
stc
pop
xlat
enter
fs
inc
pop
adc
and
or
jg
lods
jne
and
test
pop
pop
dec
and
push
and
outsb
lods
xchg
lahf
inc
inc
push
pop
sti
mov
in
adc
push
dec
loopne
fisttps
sti
or
cmp
inc
inc
sub
sub
push
and
lock
xor
cli
sub
test
out
pusha
outsb
int3
mov
stos
dec
shr
add
jmp
add
sbb
fists
mov
pop
or
pop
addr16
pop
add
or
or
arpl
fstpl
cmp
sub
out
fwait
push
and
js
jp
int3
sub
insb
pop
push
jae
xchg
int
sbb
dec
mov
jg
fldenv
call
pushf
ret
fcoml
xor
jae
mov
sbb
add
test
sbb
xchg
les
std
aas
or
jmp
idivb
and
ret
sbb
out
xchg
push
inc
popa
in
fsubrs
sub
std
and
mov
insl
xchg
cmp
pop
loopne
iret
push
xchg
or
xor
cmc
pop
aaa
push
jmp
cwtl
dec
enter
sbb
inc
in
adc
gs
push
clc
add
sub
cmpsl
pop
mov
outsl
aaa
pusha
scas
jmp
adc
and
xchg
fst
es
addl
jmp
jl
and
pushf
pushf
inc
jae
push
xor
dec
dec
or
fwait
imul
fsubs
xchg
insl
mov
or
pop
pop
loop
inc
jne
gs
ds
lret
or
and
sub
cmpsb
mov
daa
fs
jae
pop
daa
pop
jge
push
push
insb
add
sti
fwait
rclb
adc
enter
bnd
jmp
add
xchg
sub
inc
mov
int3
aaa
and
ss
xor
aaa
sbb
sub
jno
mov
adc
jbe
lret
icebp
jp
fcom
call
dec
mov
xor
jp
push
xor
push
mov
pusha
outsl
and
push
icebp
fists
and
in
sub
cmp
cmp
movsb
xor
xor
mov
xchg
adc
cmp
outsb
add
and
out
cltd
jl
cmp
mov
add
lcall
fimull
iret
ja
sub
sti
std
jbe
and
arpl
loope
sbb
mov
xchg
sarb
je
add
dec
add
and
push
pop
xchg
push
popf
sahf
xor
mov
in
stc
outsb
popa
pop
mov
fs
adc
add
or
xlat
outsb
jle
xor
les
or
ljmp
inc
xchg
cli
xchg
jl
imul
ret
jnp
xchg
push
lret
pop
inc
mov
mov
push
ja
sbb
or
mov
xor
push
xlat
mov
push
jae,pt
stc
cmp
addr16
dec
stos
or
mov
lock
jl
lods
gs
xchg
and
push
out
sahf
hlt
int3
out
and
xor
fs
xchg
loop,pt
and
scas
jbe
ljmp
xor
and
dec
sub
aad
inc
push
mov
xchg
pop
mov
rcrb
xlat
pop
add
ret
nop
icebp
cwtl
inc
lcall
and
in
int3
fsubrs
sub
pop
jl
add
inc
jne
addb
sarb
sub
pusha
ds
stos
pop
int
sbb
lea
and
sbb
mov
das
inc
clc
ja
mov
sahf
mov
xchg
iret
popf
push
sub
test
negl
lret
mov
adc
loope
and
mov
scas
cmpsl
add
cmp
xchg
jb
pop
orl
out
push
and
dec
push
iret
sbb
cs
jmp
mov
pop
in
sub
cmc
jno
movsb
lea
subl
insb
xor
ds
mov
add
push
sar
mov
call
idiv
call
mov
push
loopne
cmpsb
mov
lret
cwtl
in
adc
push
jbe
jbe
outsb
mov
mov
in
jb
cmp
out
fdivrl
loope
scas
inc
inc
adcb
stos
repz
push
mov
xor
in
push
or
jno
xor
and
inc
insb
or
push
or
dec
jns
loop
les
xchg
jp
sub
shlb
push
repnz
cmp
pop
hlt
mov
push
or
adc
mov
lret
je
test
xchg
and
lods
and
mov
lcall
jne
pop
cmpsl
pop
jle
sbb
je
pop
sti
sbb
imul
int
stos
aam
lret
out
loop
lret
mov
jle
dec
inc
xor
sub
xor
inc
jnp
mov
fwait
icebp
pusha
leave
cld
fistpl
fs
pop
pop
push
dec
cld
adc
dec
cmp
shlb
outsl
imul
arpl
test
pop
lahf
pop
dec
outsb
out
cmp
xor
rcrb
cmp
fsubrl
xchg
adc
imul
pop
sub
lret
loopne
pop
adc
inc
mov
push
out
out
sahf
mov
jne
mov
jo
or
or
das
ja
pop
cli
mov
pop
sti
stos
inc
roll
and
sbb
fidivrs
jg
xor
mov
and
push
fistpll
mov
jnp
pop
ja
adc
fs
jno
sbbb
dec
inc
scas
mov
pop
sub
adc
loope
xor
jmp
mov
cmp
daa
loopne
inc
jge
dec
mov
add
daa
xchg
mov
insl
or
inc
int3
test
int
dec
sbb
mov
test
sbb
aam
adc
lods
es
and
xor
imul
bound
pop
sarb
stc
mov
pop
mov
out
push
lds
xor
mov
pusha
scas
rcrl
lret
or
or
lret
lea
pusha
push
and
loopne
mov
das
push
xchg
pop
cld
pop
aaa
mov
and
cmpsl
lock
mov
cmp
xor
mov
and
jle
push
js
jle
repnz
fnstenv
nop
mov
inc
lea
into
loope
sub
push
call
inc
or
sub
in
and
cs
in
leave
dec
push
ss
or
push
cli
out
jns
cltd
jle
cltd
jbe
lea
push
scas
dec
inc
dec
mov
sub
call
fwait
testb
push
xchg
call
mov
call
hlt
push
xchg
pusha
stos
mov
add
fs
inc
cmp
xchg
mov
cli
add
shll
jne
xchg
fcomps
fwait
push
icebp
xchg
rclb
testl
js
jo
mov
loope
or
js
dec
std
sti
push
cmp
mov
mov
inc
push
es
aaa
shlb
and
jg
mov
xchg
add
sbb
push
mov
mov
xor
ljmp
and
xor
mov
adc
jge
jl
in
stos
movsl
cmp
iret
push
leave
add
lds
ret
mov
scas
and
testb
lcall
push
jnp
fidivl
mov
xchg
daa
test
test
call
pushw
gs
jmp
fcoms
and
xchg
jae
in
dec
dec
fldt
mov
lds
fmuls
mov
lahf
jb
sar
movsl
mov
pop
popf
mov
std
push
sahf
int3
cmpsb
mov
mov
fsts
sarb
push
jge
lds
dec
aaa
scas
je
adc
jae
add
or
std
sub
and
sub
xchg
xchg
and
into
cmp
dec
pop
adc
dec
fs
cli
into
out
pop
push
fcomp
push
xor
pop
push
add
push
std
out
fstpl
int3
in
push
out
adc
rclb
sbb
js
addb
shlb
mov
insb
idivl
inc
mov
aam
int3
cmp
test
and
dec
push
xor
scas
jns
stos
mov
mov
xchg
aam
cmp
jnp
rep
fcompl
cltd
shll
fmull
lret
scas
pop
mull
daa
xchg
stos
push
cmp
iret
scas
add
push
mov
out
or
mov
ljmp
inc
mov
inc
addr16
lret
lahf
cld
mov
faddl
in
int
and
call
ljmp
cmpsl
clc
aam
or
or
cli
lcall
push
orl
xor
xor
in
mov
jae
dec
inc
aaa
and
stos
mov
jg
clc
sub
fcoml
in
mov
mov
or
and
cmpsl
mov
cli
test
xorb
sbb
cmp
mov
pushf
pop
xor
fmull
cmpsl
repz
sbb
push
mov
adc
lods
push
test
pop
cmc
mov
mov
test
int3
lods
movsb
mov
shl
sbb
filds
push
enter
pop
call
push
fstpl
leave
cmpsl
cmpsl
mov
orl
adc
push
add
gs
cmp
lods
pop
popf
fwait
insb
fidivs
sahf
sbb
aas
in
xchg
and
clc
stc
insl
shrb
iret
sahf
dec
push
jae
inc
cmp
into
jno
cli
pop
xchg
cmp
and
negb
pop
cmp
sti
je
sbb
and
mov
cmp
js
sbb
add
popa
roll
push
mov
cltd
lahf
cmpl
movsl
cmp
js
aas
push
sbb
jnp
sbb
cltd
mov
mov
int
insl
leave
pop
out
mov
sbb
push
fneni(8087
aas
in
add
cmpsb
inc
mov
push
push
cmp
ljmp
or
arpl
and
push
stos
test
push
or
cwtl
out
popl
leave
pop
and
clc
imul
mov
jno
pop
outsb
fldt
add
adc
xabort
pop
inc
shlb
dec
inc
cmpsl
mov
andb
add
jne
push
push
roll
out
sti
orb
imul
cmp
and
inc
mov
dec
addr16
push
dec
pop
add
stos
mov
jmp
scas
jb
mov
test
shr
jne
jp
add
mov
sub
jecxz
jecxz
stc
push
clc
cwtl
push
sub
xor
mov
pop
sarb
aam
leave
notb
fisubl
mov
mov
ljmp
ret
mov
out
fcompl
add
or
pop
inc
pop
shll
mov
imul
shrb
repz
jns
mov
repz
js
sbbl
cmpb
jno
or
stos
sbb
roll
xor
pop
lds
sub
or
add
insl
std
pop
punpckhwd
mov
xor
shrl
loopne
lds
push
mov
mov
and
add
orl
and
test
push
jecxz
mulb
insl
push
aad
nop
jno
les
shll
sub
inc
movsb
mov
jb
cwtl
and
andl
inc
dec
add
jmp
push
jl
les
out
stos
push
add
inc
and
mov
cld
xor
adc
arpl
push
xchg
fwait
push
adc
pop
inc
and
into
stc
jl
test
lock
and
fs
pop
and
ja
data16
enter
dec
ficoml
insb
outsl
push
mov
inc
fdivrs
cmpsb
std
or
lock
int3
outsl
cmp
jl
jmp
xlat
gs
cmp
fldz
jno
les
in
aas
shlb
sahf
adc
sbbb
xchg
sbb
adc
movsb
scas
cmp
scas
xor
dec
leave
aad
add
data16
pop
test
jle
and
aaa
jmp
jbe
xor
scas
je
xor
lret
in
test
adc
mov
aam
rclb
test
xchg
add
stos
cltd
js
lcall
mov
pop
movsl
sbb
sub
jp
mov
add
pushf
push
cltd
dec
in
ret
fistpll
inc
int3
push
daa
or
or
dec
push
out
xor
adc
addr16
call
lods
add
loop
out
xor
sbb
mov
xchg
mov
cmp
fistl
adc
add
enter
imul
mov
pushf
or
or
push
loope
xchg
jns
ret
add
hlt
aad
push
cmpsb
mov
scas
cltd
loop
and
dec
add
sub
cmpsl
mov
inc
js
fs
sbb
in
mov
push
and
xor
dec
scas
fstl
fmull
jbe
add
sbb
shlb
mov
aam
xor
mov
rorb
dec
xchg
xor
jmp
jae
fprem
cs
sub
sub
shl
xchg
gs
clc
push
adcb
jge
cmpsl
cmp
sub
adcl
repz
adcb
popf
sbb
jp
cmc
or
xchg
in
push
sbb
test
sub
fidivs
pusha
das
jg
push
sahf
pop
jp
push
je
dec
cld
or
insb
es
mov
or
movsb
lcall
fst
pop
cmc
unpcklps
mov
enter
dec
jp
inc
adc
and
cwtl
movsl
mov
faddp
mov
lods
insb
hlt
sub
xchg
mov
bound
cmp
sahf
push
inc
fxch
js
sbb
jg
push
mov
push
negb
jp
fwait
inc
sub
mov
int3
adc
out
mov
jns
insb
lahf
or
dec
xchg
scas
ljmp
sbb
test
lea
and
adc
push
sbb
fs
ret
sti
xor
cltd
adc
inc
repnz
out
gs
mov
int3
insl
mov
push
bound
cmpb
pop
stos
xorl
not
clc
sbb
sar
fcompl
in
push
test
pop
pop
push
sub
std
out
xor
cwtl
jo
test
jecxz
mull
or
rol
sbb
xor
insb
inc
mov
pop
mov
fsubs
xchg
ljmp
addr16
ret
add
jp
add
xor
push
push
sub
in
mov
pop
shrl
push
addr16
fmuls
adc
ret
dec
jns
xor
lahf
or
jmp
or
and
mov
movsl
mov
sub
dec
out
xor
rcr
ja
sbb
fwait
mov
fstpt
adc
dec
mov
loope
aas
je
in
aad
or
mov
pop
jp
cpuid
outsb
in
pop
cmpsl
mov
in
sub
mov
je
dec
shll
xchg
fiadds
test
or
rcll
jnp
test
insl
or
adc
inc
test
repnz
stos
notl
sbb
popf
mov
rorb
sti
mov
or
jmp
mov
daa
pop
lods
sub
iret
xorb
sbb
push
push
rclb
pop
sub
cltd
or
xor
mov
flds
adc
and
mov
jae
stc
sti
popa
push
xchg
xor
cltd
mov
in
pop
ret
pop
mov
cmp
add
cmc
roll
xchg
cwtl
jae
inc
fcoml
push
jnp
in
mov
jp
mov
jb
sarb
out
jne
mov
sahf
sub
ljmp
sub
xchg
mov
pop
mov
stos
in
dec
sub
mov
lods
out
out
mov
filds
and
insb
rolb
pop
jg
in
inc
test
iret
mov
xchg
mov
sahf
js
jno
gs
lcall
push
pop
das
mov
dec
add
or
scas
and
cmc
sbb
jle
scas
cli
mov
out
mov
outsb
or
xchg
ja
xor
data16
xchg
scas
aam
sbb
iret
ds
mov
fs
mov
movd
ds
add
sub
cs
pop
ror
cli
and
cmc
in
xor
jle
xchg
adc
xor
sbb
inc
roll
cmp
imull
pushf
mov
push
repnz
sbb
xchg
mov
dec
outsl
psrlq
push
sbb
add
pop
mov
stc
arpl
dec
jnp
mov
mov
cmc
in
ds
sarl
or
cmp
lahf
dec
push
sahf
fldcw
lahf
mov
sub
xor
lret
or
sbb
movsl
pop
sbb
sbb
je
sbb
orl
gs
jb
test
cld
lahf
sub
popa
jl
pop
adc
lods
jbe
mov
push
push
or
mov
ss
mov
push
mov
sub
mov
sub
test
test
jp
hlt
lods
xacquire
out
push
scas
cmp
int3
pop
sar
out
call
inc
shlb
pop
dec
movsb
or
scas
xchg
sbb
jle
and
je
or
lret
pop
push
loope
pop
or
mov
dec
jl
pop
test
or
fistl
movsl
stc
insl
sbb
test
in
dec
and
cmpsl
sub
inc
mov
adc
sbb
push
push
in
adcl
scas
out
mov
sahf
popa
rorl
push
sbb
mov
cmp
mov
pop
imul
xor
cmp
lret
and
dec
or
mov
or
or
fstps
or
and
movsb
insb
dec
mov
pop
add
jl
cmp
sbb
dec
lea
test
and
stos
xchg
arpl
repz
fwait
shll
cs
das
jp
cmp
mov
jbe
rcr
out
mov
pop
mov
fbld
or
mov
ret
imul
jae
clc
aad
cmp
dec
shrb
dec
repnz
adc
rorl
in
rol
jg
jle
jne
jp
add
lahf
xchg
mov
jne
dec
and
sbb
pop
sbb
frstor
fistps
xor
cmp
mov
icebp
test
push
dec
cmpsb
aas
lcall
mov
cld
inc
inc
mov
jecxz
in
inc
subl
and
xchg
sbb
inc
push
subl
jg
xchg
addr16
jo
fstpt
cs
das
ss
dec
add
adc
orb
mov
mov
push
add
push
jge
and
scas
arpl
xchg
mov
jns
mov
or
test
arpl
mov
inc
fldt
sahf
mov
mov
bound
dec
fcoml
ja
loop
mov
les
lcall
int
getsec
dec
inc
add
xchg
pop
mov
shlb
jle
xor
xchg
arpl
inc
mov
sub
mov
mov
sub
push
cmpsl
pop
adc
and
jp
lcall
mov
imull
add
cmp
xor
dec
mov
fwait
aas
ja
xchg
dec
es
adc
fsubr
sbbb
lock
push
sbb
in
adc
cmp
outsl
dec
mov
fs
mov
mov
andl
icebp
mov
or
shll
nop
jo
cmp
les
fiadds
fildll
pop
mov
jns
mov
add
adc
lret
dec
mov
dec
sbb
mov
jg
leave
dec
adc
mov
hlt
nop
jne
mov
pop
aaa
sub
jle
mov
out
mov
in
or
push
sbb
in
adc
xchg
fstp
push
inc
xlat
push
mov
lret
sbb
divl
xchg
lahf
inc
dec
sbb
lods
lret
in
xchg
andb
repnz
scas
inc
jo
pop
arpl
addb
and
popa
push
mov
xchg
and
push
or
sbb
mov
push
xchg
or
xor
in
pop
add
jg
in
xor
sbb
xchg
xchg
enter
mov
push
dec
subb
cwtl
cmp
jmp
sarl
jl
inc
int3
sbb
jl
sbb
xchg
adc
jno
lods
add
sub
shll
fadd
pop
ss
xchg
push
jle
mov
xor
push
mov
stc
mov
fnstcw
sbb
mov
jge
pop
and
in
mov
pop
test
lret
and
fwait
test
xchg
out
inc
or
sbb
pop
sti
mov
or
mov
into
mov
xchg
dec
mov
mov
arpl
inc
test
aad
cmp
sbb
pop
cmpl
out
xchg
inc
aaa
cmc
stos
xor
mov
mov
or
in
xchg
data16
xchg
lret
adc
mov
cmp
dec
lock
flds
scas
out
stos
mov
pop
pop
fsts
movsl
adc
sahf
mov
jb
outsb
bound
pop
add
or
add
or
mov
add
ss
lds
movsb
out
jl
xchg
ss
fnstsw
std
popf
cltd
cli
out
inc
dec
aaa
mov
cmpsb
jmp
mov
popf
ljmp
jb
mov
mov
cmp
arpl
sub
mov
mov
ds
jg
flds
sub
sub
fidivl
dec
pop
xchg
shlb
pop
aas
push
in
jbe
xchg
xor
cmpsl
sub
int3
arpl
jg
push
dec
pop
push
sub
daa
jle
rcr
cmpsl
lahf
or
pop
int
inc
shrl
xor
inc
mov
loop
push
clc
std
sbb
loope
lcall
jge
ss
xchg
or
mov
add
cmp
loopne
jbe
lret
mov
or
pop
push
int3
loopne
imul
jl
jae
mov
aad
lock
in
and
sub
push
xchg
addl
repz
sub
xchg
sbb
mov
out
sub
lahf
pop
xlat
ss
outsb
sahf
lret
push
andl
mov
mov
xchg
sbb
xchg
mov
daa
mov
mov
and
dec
in
dec
push
xor
lahf
push
dec
sbb
cmp
into
jnp
nop
add
or
popf
sub
add
dec
stc
enter
inc
inc
xchg
jmp
jae
movsb
in
xlat
xor
pop
jne
popf
jecxz
clc
loop
ds
add
dec
into
push
inc
imul
bound
je
inc
jg
movsb
push
fidivs
gs
add
jb
mov
add
pop
mov
xchg
push
and
adc
hlt
int3
push
fstl
mov
sbb
mov
stc
int
dec
pop
xchg
cmp
xchg
mov
cmp
call
push
mov
mov
loop
xchg
mov
shrl
hlt
aad
mov
pop
mov
adc
jp
mov
dec
lds
imul
call
fisttps
das
lods
mov
sbb
adc
mov
mov
mov
call
dec
je
xchg
and
jnp
xchg
adc
mov
mov
mov
aam
adc
sahf
sbbb
mov
dec
pop
imul
push
bound
rcrb
xlat
add
lret
or
mov
lock
cmpb
sahf
ficoms
outsb
pushf
insb
fisubs
mov
mov
rol
fiaddl
lea
xor
mov
xchg
fs
mov
mov
dec
int
cmp
mov
das
fildl
out
daa
xchg
push
mov
or
push
test
clc
stos
xor
push
sbb
loopne
lcall
or
push
pushf
add
or
mov
mov
xchg
dec
push
dec
jmp
fiaddl
loopne
pop
pop
pop
add
cmpsl
pop
cmp
rol
addr16
mov
nop
push
or
call
lds
cmp
mov
decl
lahf
push
test
mov
gs
mov
and
int
pop
xor
subl
pop
pop
fistpl
mov
mov
test
in
mov
fisttpll
mov
pop
cmp
inc
adc
push
sub
dec
lret
sarb
rclb
cmpsb
sbb
outsb
mov
aaa
pop
inc
out
or
sbb
pop
mov
inc
adc
sbb
repz
pusha
jmp
jmp
call
lods
jmp
or
call
nop
mov
call
out
scas
incl
lret
repnz
or
in
pop
dec
js
jne
cmp
jne
dec
lock
add
mov
push
fidivrl
cmp
jae
sub
shl
xchg
jb
dec
clc
daa
jp
dec
inc
or
nop
movsb
xor
sarb
ja
jns
inc
std
and
mov
lcall
mov
cld
mov
lea
mov
xchg
out
mov
stos
fdivrp
ss
sbb
in
leave
inc
fistl
insl
fwait
movsl
js
insl
sbb
loopne
pop
push
push
int3
mov
dec
out
pop
xchg
int
fisubs
xor
xor
pop
sarb
mov
push
push
dec
in
mov
rolb
add
daa
push
and
xor
dec
inc
xor
jp
fs
pop
hlt
mov
add
inc
sahf
cmpsl
repnz
mov
hlt
xor
xchg
test
jne
rorl
aam
sti
shl
addl
push
movl
jbe
lods
jb
xchg
or
or
xchg
in
xchg
stos
mov
je
mov
scas
or
mov
jnp
mov
cmc
xchg
out
dec
sbbl
aas
outsl
shrb
mov
imul
adc
movsb
dec
push
xor
or
push
inc
cwtl
les
sub
and
inc
lock
push
hlt
insb
push
bound
jl
add
add
xor
xchg
je
mov
or
jns
repz
pop
stos
or
mov
pop
cli
dec
jmp
aad
dec
call
and
rcll
xor
inc
aad
daa
jns
incb
xor
sub
aas
aaa
dec
xor
jne
repz
jne
adc
sbb
std
mov
outsb
stos
push
mov
pop
aas
test
sbb
movsb
sbb
flds
adc
ret
fidivl
and
mov
adc
add
js
xchg
xchg
scas
push
addr16
xor
popf
fwait
pop
hlt
and
inc
mov
mov
in
sub
loop
adc
sbb
mov
fisubrl
or
int
cmpsl
cmp
dec
ljmp
dec
test
in
xor
test
scas
jbe
mov
pop
fld
sub
push
inc
loop
clc
push
xor
or
xor
es
ret
nop
mov
das
and
push
sub
movsl
lods
loop
xchg
sub
push
ds
fisttpl
or
test
sub
pushf
movsl
adc
iret
cmp
push
xchg
xchg
addb
mov
push
stos
fiadds
and
mov
pop
stos
loop
or
jae
in
std
inc
outsl
push
jl
cmpsb
gs
mov
pop
jno
aam
hlt
lret
mov
movl
aam
push
mov
add
pop
dec
and
movsb
fisttpl
es
inc
push
cmpsl
or
sub
jmp
mov
dec
push
mov
push
dec
push
adc
scas
jns
in
inc
out
adc
adcl
xchg
mov
jo
fwait
dec
test
rcrb
xchg
fsts
fistpll
rorl
rolb
lahf
xor
outsl
fdivrl
addr16
scas
xchg
arpl
lock
pop
lahf
pop
lea
mov
rolb
jo
cmp
ret
rcll
lods
push
mov
mov
or
dec
inc
mov
hlt
imul
pop
aam
jnp
mov
std
sti
cmp
jg
push
fnstsw
inc
sahf
xorl
push
rcrl
mov
jns
stc
cmpsl
jae
adc
mov
mov
sahf
popa
adc
jno
cmp
mov
das
push
jl
popa
xchg
pop
sbb
push
pushw
xor
pop
sub
and
cmp
sti
pusha
mov
jne
mov
insb
mov
add
or
cwtl
and
jnp,pn
mov
repnz
hlt
dec
jg
fnsave
add
ret
aam
add
cli
psubw
lahf
rcrb
mov
sub
pop
ficomps
enter
cmp
mov
pop
fldt
lods
insb
fstps
or
inc
jmp
stos
dec
or
xchg
mov
addr16
xor
pop
mov
loop
loope
movsb
mov
popf
pusha
lock
ret
mov
add
cmp
xor
mov
ret
mov
cli
cltd
pop
out
subl
pop
sbb
push
fwait
out
sub
rcl
aaa
dec
popa
pushf
push
jl
pop
dec
imul
xor
fs
push
mov
xchg
outsb
lret
mov
pusha
cli
and
ljmp
repnz
mov
jmp
pop
fdivrs
mov
fsubl
or
int3
jecxz
xchg
sub
iret
outsb
cli
stos
adc
jecxz
in
mov
mov
mov
frstor
lahf
cmp
shlb
test
out
inc
or
and
daa
sbb
xchg
roll
pop
cmp
aad
xchg
inc
mov
or
jecxz
mov
ret
out
sub
mov
add
pop
push
sub
cmp
push
mov
sub
sub
mov
ss
or
push
lcall
movsb
fwait
stos
xchg
mov
mov
in
sbbl
into
push
add
aas
leave
or
jae
lds
dec
into
pop
inc
cmc
pop
mov
push
push
sub
clc
sbb
iret
pop
mov
inc
lcall
fsubs
in
addr16
test
or
lock
sub
clc
jns
cmp
mov
rcrl
xchg
mov
dec
test
sub
scas
enter
mov
add
hlt
adc
inc
in
mov
inc
fdivp
mov
and
lock
ja
dec
push
mov
hlt
push
lcall
xchg
adc
out
and
bound
pusha
arpl
xchg
jno
sar
scas
movsb
frstor
scas
cli
aam
xor
insl
jp
movsl
aas
and
leave
jl
std
aad
jge
sub
cltd
scas
and
in
lahf
push
jno
adc
mov
sbb
lcall
cltd
lds
dec
push
cmp
outsl
cwtl
xor
addr16
lret
jmp
inc
fldt
dec
mov
loop
jp
mov
ja
scas
lods
mov
rolb
push
sbb
nop
pushf
stos
dec
pushf
and
or
sbb
repnz
aam
mov
ret
sub
cs
out
test
ja
and
loopne
adcl
pop
addl
cmc
xchg
add
je
cmpsl
mov
cmp
xor
cmp
mov
aaa
xor
pop
cmpsl
popl
sbb
dec
inc
and
rolb
lcall
mov
adc
sbb
xchg
ret
data16
jge
movsl
rcl
lret
push
jae
shr
lds
sbbb
or
xor
sbb
jne
out
mov
pop
movsl
gs
dec
pop
mov
mov
dec
scas
stos
xorb
and
jecxz
fcompl
sbb
mov
or
enter
cmp
cmp
out
dec
popl
xchg
mov
inc
sarb
jns
mov
outsl
jmp
and
les
sbb
aaa
or
mov
mov
out
adc
in
out
dec
xchg
nop
fwait
xlat
xchg
leave
xchg
aad
mov
sbbb
sub
fcmovb
mov
inc
add
mov
into
imul
les
test
push
inc
leave
lcall
sub
push
push
add
out
push
lahf
cs
jns
jle
xlat
pop
call
jl
ret
sbb
fmull
dec
lahf
mov
push
jae
mov
imul
insb
inc
jle
push
addr16
addr16
add
jp
fs
rclb
ds
inc
or
and
add
mov
sarl
shrl
lods
outsl
mov
rorl
cwtl
or
leave
cmp
incb
daa
in
dec
push
mov
add
jle
jge
ss
mov
xchg
hlt
and
mov
pop
adc
inc
sbb
mov
imul
cmp
jg
repz
pop
rep
fcmove
and
sahf
lods
jg
ds
repz
jno
repz
pop
mov
mov
and
jge
push
inc
repnz
pop
sbb
add
test
cld
hlt
pushf
mov
xchg
fildl
cwtl
loopne
insb
push
xchg
and
and
clc
frstor
push
loop
push
sar
in
pop
lock
insl
xor
xchg
inc
add
into
or
adc
push
insb
and
ds
cli
add
add
insl
and
les
cmp
or
ds
lea
lock
sub
vpmacsdd
jnp
xor
outsb
insb
cmp
movsl
jp
mov
fdivrs
fs
imul
xor
add
lret
mov
sub
pop
mov
push
repz
xchg
mov
sbb
pop
sub
scas
sti
cmp
call
sbb
cli
mov
notl
mov
sub
cmp
aas
aas
int3
in
adc
or
mov
fsubr
shll
cmpsb
dec
cmp
xchg
in
fdivs
hlt
fiaddl
sbb
xor
pop
jge
lods
xchg
call
divb
es
lock
lods
rcrb
mov
sub
repnz
push
mov
les
test
jnp
mov
push
sbb
pop
incb
push
subl
pop
adc
cltd
faddp
xchg
test
test
out
pop
sar
scas
loop
jne
popa
adc
adc
cmpsb
test
enter
pop
push
cmpl
pop
xor
jae
jae
not
and
push
pop
dec
cs
mov
fwait
scas
repnz
sbb
dec
xchg
mov
adc
add
or
mov
and
dec
add
leave
sbb
cltd
add
mov
in
dec
imul
or
cmp
in
loop
cmpsb
pop
inc
push
ret
sbb
inc
cmc
mov
adc
in
cmp
mov
push
in
loope
call
sub
fisubl
rcll
pop
or
and
ds
cld
mov
popa
push
movsb
shll
insl
insb
xchg
pop
fisttpll
jbe
imulb
mov
mov
jle
push
mov
movsl
sbbl
mov
xlat
xor
add
lock
ljmp
lret
and
jns
push
in
shll
nop
stos
xor
jp
pop
push
int3
xlat
lret
cwtl
dec
push
enter
push
mov
sub
nop
hlt
mov
jp
xchg
test
call
mov
add
add
loop
jl
mov
fnstsw
mov
fsub
aas
in
cmpsl
add
dec
jmp
aam
pop
movsb
cmp
sub
lods
cs
inc
in
fucomp
push
dec
pop
fnstcw
or
je
xchg
nop
sbb
mov
addr16
xorl
addr16
mov
fnstsw
mov
xlat
push
repz
mov
sbb
jl
pop
leave
fs
outsl
inc
daa
lds
aas
call
in
inc
mov
xor
push
enter
sbb
pop
fs
in
mov
fcmovnb
mov
testb
ss
in
cmp
push
add
xchg
mov
jnp
movsb
lds
jle
orb
clc
aam
loope
lds
mov
xchg
das
in
add
push
insl
pop
xchg
cmp
pmaxub
push
lahf
sbb
lret
stos
imul
xor
icebp
test
mov
sbb
test
imul
xor
fidivrs
sub
jp
js
mov
and
adcl
pop
rorb
fiadds
sub
enter
inc
mov
mov
inc
or
or
push
cmp
loop
imulb
scas
enter
or
or
push
dec
pop
cmpsb
insb
ret
jecxz
addr16
cmpsb
mov
out
mov
xchg
mov
dec
cltd
out
stos
xor
ljmp
sbb
test
sub
or
sub
cltd
lea
dec
mov
mov
or
push
mov
mov
and
call
ja
dec
das
inc
ja
sbb
ljmp
aad
fst
filds
add
dec
jl
gs
jge
mov
ficoms
mov
push
and
cmp
xchg
pop
pop
sarl
jmp
fcmove
sbb
mov
sub
push
ret
or
incb
lcall
dec
mov
jle
ljmp
sbb
frstor
pop
dec
cltd
and
lock
cmpsl
scas
xor
mov
lret
sub
and
outsl
test
scas
push
cmp
nop
mov
mov
aas
aam
shll
pop
and
cmp
pop
and
je
pop
pop
nop
lods
repnz
xor
mov
jno
mov
loop
pop
jmp
out
ficomps
ds
in
pop
mov
std
dec
xlat
rclb
lods
or
adc
les
mov
imul
rcrb
adc
xor
fstpt
or
fildll
popa
pop
inc
enter
push
nop
dec
ljmp
mov
add
pop
sbb
fstpt
xchg
mov
push
push
inc
dec
pop
xchg
hlt
inc
ficomps
fdivl
je
mov
in
adc
jne
roll
loop
pop
dec
ljmp
push
sub
test
cmovbe
pop
xchg
int3
push
cmpsl
fnstcw
test
test
sbb
cli
out
fisubl
sahf
pop
cmpl
cmp
lret
sub
hlt
mov
jmp
xchg
or
sub
or
test
inc
push
filds
mov
sub
add
cli
imul
pop
rcrl
mov
push
dec
popa
xchg
fldl2e
out
mulb
xchg
jecxz
enter
lods
sti
stos
stc
jecxz
adc
jge
stc
mov
jnp
add
repnz
xor
ret
cmpsb
lods
mov
dec
das
test
push
mov
ret
pop
jle
out
outsl
and
iret
and
xchg
cmp
xchg
jp
push
pop
and
inc
dec
pop
or
ds
js
pop
cmp
dec
enter
enter
xor
xlat
sarb
jbe
mov
outsb
in
testl
and
mov
int
cmc
rcr
add
push
call
mov
or
pop
push
add
or
cmpsl
movsw
mov
and
das
aas
inc
sbb
test
loop
sbb
mov
or
test
sub
mov
stc
rcrl
mov
mov
jge
out
lret
stos
push
int3
pushf
call
cmp
je
jl
dec
imul
sarl
mov
fistpl
mov
adc
jge
nop
aad
mov
int
jle
shll
add
and
insl
int3
ja
les
js
xorl
jmp
mov
jmp
movsb
sub
sbb
push
addr16
xchg
xchg
sub
dec
mov
mov
in
jo
sbb
arpl
cmc
fs
pop
xchg
xchg
sbb
in
push
xor
lods
sarb
jle
jne
mov
sahf
jae
mov
aad
inc
mov
or
jno
jp
shl
push
mov
insl
shll
push
sbb
mov
fldz
inc
mov
pop
add
pushf
or
sub
das
lods
cwtl
sbb
mov
pop
mov
inc
mov
cmp
cmc
add
jo
hlt
add
add
cmp
jo
sbb
mov
sub
xchg
mov
arpl
sub
mov
pop
sbb
and
or
jmp
mov
pusha
dec
sbbl
insl
mov
pushf
xchg
cmc
shr
or
lret
ret
push
js
xchg
mov
scas
push
out
movsb
xor
sti
pop
les
in
inc
in
icebp
xchg
mov
cmpsb
movsl
leave
add
push
jne
inc
sarl
xchg
lahf
mov
xchg
and
and
dec
clc
adc
mov
mov
pop
shlb
xor
mov
stos
daa
dec
xchg
scas
mov
clc
mov
mov
cli
flds
imul
pop
insl
aad
and
ss
jp
repz
mov
cmp
pop
pop
inc
shr
inc
movsb
adc
stos
out
sub
sub
mov
into
push
inc
pusha
inc
pop
pop
cmp
test
jge
cmp
ds
pop
jb
mov
dec
or
or
mov
mov
aas
arpl
mov
popl
xchg
mov
sbb
push
or
add
rorb
xor
testb
jne
sub
popa
nop
add
aam
push
mov
dec
mov
pusha
scas
inc
xchg
mov
adc
ds
xchg
insb
jp
jns
mov
ja
mov
sbb
xchg
mov
repnz
and
jne
addl
not
xchg
add
fstpl
pop
mov
pop
loopne
cmp
xlat
sbb
pop
mov
adc
push
je
in
add
ja
stos
xchg
aam
mov
and
push
dec
gs
jg
or
inc
jnp
les
cmc
sbb
stos
rclb
inc
dec
mov
scas
xchg
popa
insl
ret
sbb
mov
adc
clc
andl
push
and
sbb
mov
sar
in
shrl
outsl
cmp
in
push
lods
push
xchg
fcomps
mov
loopne
ja
out
adc
mov
or
movsl
lods
sar
test
jns
adc
lahf
adcb
xor
popa
dec
test
or
rcrb
pop
ja
fdivs
neg
in
mov
pop
lret
mov
js
insb
cld
jmp
mov
push
add
test
lret
and
mov
sub
xchg
mov
loop
inc
and
inc
push
add
mov
mov
pop
mov
cwtl
or
dec
push
mov
sbb
xchg
arpl
pop
hlt
gs
lret
loope
xchg
aad
or
pop
loopne
ds
es
mov
fisubrs
sarl
into
xchg
add
jae
push
mov
mov
sbb
lock
pop
sbb
iret
sub
pop
mov
pop
es
outsl
rcll
inc
mov
mov
cmc
repz
mov
fwait
sub
stos
repz
or
and
ret
mov
sub
test
movsl
sbbl
push
sti
add
jg
pop
add
pop
dec
test
rol
sbb
push
lds
addr16
js
lahf
dec
xor
xchg
inc
or
daa
es
fiaddl
jnp
in
adc
and
and
and
push
mov
pop
frstor
les
insl
xor
add
adc
lock
clc
sbb
jl
inc
adc
lret
xchg
jle
mov
mov
xlat
sbb
add
lods
lods
and
das
sub
out
fstpt
js
lret
daa
push
scas
aas
sub
xchg
mov
pushf
sub
daa
insl
pop
xchg
icebp
xchg
jge
or
cmpsl
sahf
shlb
inc
pop
inc
jle
mov
popf
fs
cmpsl
pusha
lahf
jge
pop
xor
mov
daa
mov
fidivrl
sti
jnp
std
fwait
jbe
jb
sbb
sub
xor
mov
repz
je
inc
shrb
sbb
jo
mov
stos
addl
ficoms
mov
cld
movsl
mov
test
fwait
into
mov
push
gs
popf
and
sbb
es
add
test
fsubr
imul
andl
add
adc
sahf
loope
push
lret
push
in
outsb
aas
aas
mov
imul
fmuls
fs
in
mov
push
jnp
popf
popa
popa
push
dec
xor
xchg
mov
icebp
in
aad
aaa
lock
mov
testl
jb
loop
repnz
jno
pop
push
jmp
icebp
dec
mov
lahf
and
xchg
lea
cwtl
pop
cmp
add
lock
repnz
and
mov
mov
test
cmp
aas
testb
stos
pop
cmp
xchg
lods
sub
xchg
mov
aad
xor
lods
shr
inc
std
std
aas
out
push
aaa
push
push
or
stos
jns
sbb
and
and
pop
loopne
insl
test
cmp
pop
pop
jns
dec
pop
sti
dec
aas
ficoms
jmp
mov
push
dec
inc
insl
out
stc
mov
std
or
ja
mov
cmpsl
inc
and
mov
push
mov
lea
jno
in
xchg
inc
jmp
pushf
adc
push
lcall
shr
push
cmc
jecxz
adc
xchg
push
fwait
dec
add
sbb
cli
pop
push
sub
jmp
mov
rdmsr
fstpl
stos
arpl
adc
stos
out
add
mov
or
in
lock
jbe
inc
repz
and
pop
cmp
sub
cmc
scas
jmp
sbb
and
imul
adc
int
jge
cmc
lcall
fisubrl
repnz
insb
in
rol
and
ror
int3
mov
jmp
and
fldl
idivb
cmpsl
in
and
andb
test
mov
mov
pop
hlt
fstps
addr16
adc
sub
mov
jl
js
ja
loop
ret
mov
int
movsl
popa
jne
dec
in
lds
or
pop
int3
adc
cmp
sub
lock
pop
out
jp
in
sarb
push
add
inc
push
imul
test
mov
xchg
push
and
fistpl
movsl
mov
adc
dec
out
adc
test
add
aad
ljmp
pop
test
xchg
imul
lret
or
mov
loopne
sub
cmp
mov
shll
movsl
into
in
fldt
dec
push
fcom
dec
outsb
adc
xchg
subl
test
lret
scas
xor
imul
or
lahf
jb
pop
das
inc
popf
add
repnz
loopne
fwait
movsb
and
mov
xchg
mov
inc
or
loop
enter
std
shll
loopne
jne
inc
lods
out
scas
dec
dec
les
ss
mulb
mov
pop
add
cmp
sub
sub
jl
xchg
test
neg
dec
int3
pop
add
mov
stc
mov
jmp
adc
lret
mov
int
jmp
repnz
ret
dec
sub
push
clc
scas
jp
and
daa
loopne
sti
jg
mov
mov
pop
add
sbb
into
mov
sti
cmp
push
in
push
cmp
aad
int3
out
add
xor
ds
push
sub
xor
mov
fcmovnb
sub
fistl
pop
mov
in
dec
jne
in
mov
ret
iret
sar
pop
jo
out
aad
enter
adc
gs
in
in
je
leave
jnp
dec
xchg
push
out
sbb
decb
adc
popf
hlt
sub
incl
pop
imul
jns
mov
iret
fcmovnbe
mov
pop
out
cmp
setg
sub
sbb
add
cmp
fwait
pushf
std
inc
mov
daa
jl
mov
push
nop
fstps
push
ljmp
imul
or
jb
pop
cmp
pop
xchg
jae
iret
pop
repnz
cmp
sbb
jecxz
sbb
push
and
data16
pop
in
in
lcall
jmp
mov
inc
out
outsb
imul
pop
add
inc
enter
lahf
or
nop
scas
dec
or
mov
aad
inc
add
jg
xchg
pop
fisubl
inc
sub
xchg
sub
enter
mov
pop
mov
and
cmp
out
mov
pop
ds
lret
mov
imul
lds
sbb
scas
outsl
xchg
xlat
or
out
outsl
mov
mulb
or
jo
adc
movsl
pop
stc
add
xchg
adc
lods
mov
sbb
loope
movq
and
dec
push
adc
push
lcall
pop
mov
imul
out
dec
loope
arpl
in
mov
bnd
cmp
sub
sub
jmp
ss
lahf
jnp
sub
sub
hlt
test
pop
dec
call
pop
hlt
adc
test
into
sbb
sbb
push
in
or
mov
outsb
xchg
jp
sbb
cmp
jae
and
jo
sbb
xorl
push
insl
mov
sbbl
imul
out
fdivl
sbb
gs
test
test
call
in
xchg
fisttps
les
and
into
sub
push
loop
mov
pop
aam
adc
out
loopne
insb
xor
xchg
pop
mov
dec
pushl
sub
icebp
dec
mov
mov
mov
mov
xchg
pop
cmpsb
scas
cwtl
fbld
call
enter
mov
pop
scas
dec
insb
pop
andb
cwtl
pusha
mov
sete
cmp
jg
mov
and
adc
ss
movsb
sub
inc
fsubrp
xchg
xor
cmp
jp
subl
out
lret
aas
mov
loope
lahf
imul
or
push
ret
outsb
mov
lods
xor
ljmp
les
add
mov
push
dec
dec
adc
filds
sbb
sbb
stc
xchg
fwait
xchg
addl
ja
aas
jae
adcb
pushf
add
push
jo
les
mov
mov
pusha
into
jecxz
jnp
inc
cmp
roll
call
cmp
fiaddl
and
dec
movsl
int3
inc
xor
adc
pusha
nop
rcll
adc
cmp
jp
mov
dec
inc
xchg
pop
cli
lods
in
ror
pop
adc
aad
in
stc
sub
lock
sbb
add
ss
cmc
push
mov
push
xchg
adc
fwait
inc
xlat
lock
pushf
daa
xor
jbe
sub
xor
mov
mov
pop
cli
mov
lret
stos
mov
mov
shlb
or
cmc
pushf
repz
adc
lret
std
lds
hlt
sbb
mov
in
in
aam
mov
repnz
fsubs
clc
mov
loope
push
push
and
mov
imul
fs
and
mov
mov
cmp
pop
push
mov
int3
out
mov
inc
aam
or
adc
sub
ret
xchg
test
mov
pop
repz
cmc
les
rcl
sub
sub
aad
imul
add
repz
mov
cmpsb
movsl
jge
mov
dec
push
shll
sub
sbb
xchg
movsl
push
int3
leave
addr16
fisubl
imul
icebp
ss
imul
add
sahf
sti
pop
jno
inc
pusha
dec
clc
repnz
arpl
cmc
xchg
scas
mov
mov
subl
popa
enter
addr16
jno
shll
stos
sub
int
shrb
mov
xor
js
cs
loopne
loope
out
pop
mov
push
cmp
jg
push
int
loop
test
out
movsb
mov
subl
inc
inc
insl
iret
lcall
xchg
pusha
mov
mov
mov
inc
leave
jns
pushf
fcompl
push
lea
or
cmp
mov
mov
cltd
test
mov
cld
mov
jbe
dec
rclb
pminsw
icebp
loop,pn
iret
mov
dec
test
xlat
mov
mov
js
popf
daa
shr
loop
bound
aaa
push
jo
into
out
sbb
cmc
repz
mov
out
fsts
pop
addb
imul
negl
pushf
loopne
test
pop
xor
shlb
leave
sbb
add
or
adc
out
inc
cltd
repz
push
push
loope
push
pop
push
dec
pop
add
lods
cmp
jge
sub
jecxz
inc
enter
push
dec
jmp
movsl
mov
testl
mov
shlb
xchg
loop
out
arpl
adc
in
mov
mov
dec
andl
dec
ja
mov
mov
sarl
push
sbb
roll
mov
lods
adc
in
adcl
jle
add
fsub
iret
outsb
or
dec
mov
mov
sub
sbbb
movsl
test
push
in
sahf
orl
lahf
outsb
ja
stc
push
pop
add
test
push
cmp
dec
mov
pop
cmp
dec
inc
cld
clc
fsubl
and
clc
lock
mov
jp
jo
ret
out
mov
jo
cmpsb
sahf
mov
call
lock
inc
loope
test
arpl
outsl
push
xor
xor
xchg
pop
xor
jns
or
cld
in
lock
push
push
fwait
mov
cwtl
shl
mov
cltd
pop
movsb
enter
and
orb
sbbb
fsubrp
push
and
or
das
mov
fmuls
shll
leave
jecxz
sbb
adc
adc
dec
jp
inc
sub
ret
negl
push
imul
pop
sub
xchg
mov
addb
xchg
jg
insl
mov
cmp
jl
xchg
cmp
neg
mov
adc
in
les
mov
addb
test
sub
lcall
daa
mov
aad
je
xchg
daa
enter
xorl
xorb
mov
mov
test
mov
xor
iret
sbb
fidivrl
dec
sbb
mov
sar
inc
mov
adc
jne
gs
std
call
pop
pusha
aad
test
test
rol
sub
flds
aaa
push
testl
jno
in
add
cli
stos
mov
lock
push
or
shr
jnp
jnp
xor
cmp
sbb
fimull
push
inc
adc
lods
movsl
loop
int
sub
mov
aaa
jae
push
and
adc
pop
pop
aas
movsl
cli
push
out
in
sbb
add
add
jns
sbb
jbe
sbb
xor
ret
popa
dec
shll
push
dec
stos
test
mov
jge
pop
inc
push
mov
or
xchg
lea
leave
scas
push
lcall
sub
nop
sub
cmpb
stos
mov
adc
mov
jnp
scas
push
cmp
lret
add
push
mov
mov
pop
or
and
jmp
jmp
mov
xor
lods
leave
mov
mov
into
add
shrb
mov
out
gs
popf
in
nop
hlt
stos
pop
mov
cs
enter
or
inc
sbb
gs
jne
psrld
inc
leave
bound
sbb
pushf
push
cmp
out
stos
lahf
aas
out
pusha
mov
in
in
bound
cmp
stos
cmp
scas
daa
fiaddl
sbb
mov
xchg
push
xor
sub
int3
mov
out
andb
es
stos
in
inc
xchg
dec
shlb
jne
loope
mov
out
daa
jae
in
sbb
cmc
or
adc
sbb
pop
into
shlb
cmpsb
push
jns
pop
and
test
adc
inc
movsb
cmp
movsl
xor
push
pop
test
push
jae
mov
push
xor
sbb
jecxz
xchg
cmp
jl
inc
cmpl
xor
mov
and
jp
stos
lock
ja
aam
and
pop
ss
dec
insb
div
dec
daa
imul
sub
cmp
pop
int
mov
repz
pop
bound
aam
inc
mov
dec
lahf
out
test
mov
cmpsb
push
out
ja
cmp
pop
dec
or
sub
iret
lahf
jb
xchg
xchg
push
xchg
xchg
nop
mov
or
pop
mov
cmp
nop
pop
jle
cwtl
jg
arpl
cld
inc
int3
dec
les
mov
test
lret
mov
cmp
dec
xor
fmull
int
and
push
jne
mov
and
arpl
test
aad
pusha
mov
daa
cli
jo
mov
dec
mov
mov
in
add
imul
dec
xchg
mov
jnp
mov
icebp
sub
mov
xchg
dec
jns
movsb
inc
and
ret
popa
xor
fldenv
arpl
jns
pushf
pushf
or
sub
loopne
push
aas
push
or
xchg
or
imul
enter
jle
cltd
aad
inc
sti
xchg
pop
loop
add
pusha
out
lods
cli
nop
push
add
mov
mov
mov
add
pop
cmp
push
insb
xorl
int
adc
xor
fisubrs
xchg
inc
mov
loop
scas
mov
cmc
dec
push
stc
dec
cmpsl
push
aam
inc
add
cmp
pushf
in
cmp
add
xchg
in
aad
xchg
sub
lret
lahf
clc
popf
mov
stos
in
fstpt
rcrl
in
inc
ss
cltd
sbb
test
sub
inc
adc
int3
imul
xor
sub
inc
clc
in
ss
sub
adc
in
sub
inc
adc
jle
dec
or
fadd
imul
xchg
movsl
sbb
lods
das
add
stc
icebp
jae
mov
sbb
cli
push
test
and
int3
xor
je
mov
leave
adc
call
mov
sub
xchg
sarl
sub
adc
jbe
xor
push
sbb
idiv
push
or
mov
shlb
ds
xchg
movsb
add
or
lcall
faddl
push
adc
push
sbb
add
and
movsb
je
cwtl
sub
add
pop
pusha
mov
les
or
sbb
inc
aas
movsl
rcrl
fcmovnb
adcl
out
jno
aas
mov
xor
dec
mov
into
test
movsl
jns
addr16
iret
in
jns
xchg
cmp
leave
aas
sbbl
js
jle
int3
add
and
insl
aas
int
lcall
adc
je
add
jg
lahf
mov
push
jo
scas
iret
dec
dec
cmp
jmp
in
stc
xchg
movsb
sbb
addr16
outsb
push
push
and
jnp
xchg
fwait
in
or
lds
push
dec
and
lds
xor
out
fidivl
pop
jl
cmp
pop
xchg
call
stc
and
and
loop
mov
cmc
bound
adc
dec
xchg
jp
mov
sarb
nop
mov
dec
mov
jp
pop
adc
mov
adc
insb
scas
xchg
sub
repnz
movsb
out
jg
xchg
xchg
std
push
xlat
xor
jl
mov
das
dec
test
push
jno
push
pop
lea
dec
aas
pop
gs
adc
push
sub
push
pop
es
int3
add
inc
jmp
mov
fiaddl
ffreep
hlt
jbe
xchg
in
cmp
test
push
adc
scas
fstl
add
mov
dec
mov
dec
cmpsl
les
add
aad
out
jno
xor
jno
dec
or
pop
sbb
mov
xlat
adc
xchg
fs
push
leave
cmp
push
fwait
mov
dec
xchg
lea
movsl
shlb
fisubrl
pop
pushf
sub
and
cld
xor
sti
mov
sar
adc
cwtl
shrl
mov
inc
int
addl
jl
jae
out
call
adc
inc
inc
insl
test
cmpb
ljmp
test
out
inc
push
cs
cld
cmc
xchg
neg
push
inc
adc
nop
or
gs
inc
lret
decb
arpl
out
cmp
and
aas
cmc
pop
shrl
bound
popa
jb
mov
mov
xor
orb
pushf
iret
popa
addl
fldenv
jbe
scas
jo
and
mov
or
jnp
repz
sbb
adc
xorb
add
or
test
mov
cmp
push
movsb
sub
in
xchg
push
inc
sbb
cmp
add
cmp
mov
adc
dec
jae
inc
add
in
dec
inc
js
cmp
sbb
inc
out
mov
dec
cltd
idivb
push
dec
pop
pop
ja
cmc
xchg
adc
insb
mov
inc
adc
push
mov
mov
mov
xchg
gs
xchg
add
push
lock
lods
cld
and
imul
mov
cmp
fidivs
jl
pop
mov
or
mov
int
xchg
iret
mov
and
jl
nop
ret
xchg
sbb
je
sub
cmp
mov
xchg
bound
testl
jno
xchg
repnz
rcrl
jp
div
add
out
lods
adc
xchg
mov
cli
cmp
int3
jge
inc
dec
arpl
mov
jno,pt
mov
add
imul
mov
mov
cltd
inc
std
mov
cmp
adc
jg
mov
xchg
or
test
xchg
jmp
in
pop
insb
xor
ds
js
test
addl
jmp
push
sbbb
cmp
jne
in
int3
sub
jb
in
add
ret
pop
pmaddwd
mov
jbe
fisubl
addl
sarb
aad
mov
in
mov
xlat
or
cmp
popf
mov
scas
xchg
jmp
rorl
jecxz
aas
into
pop
pusha
jp
cmpsb
adc
sbb
test
and
xchg
je
pop
and
xlat
daa
nop
lret
mov
int3
decb
mov
mov
and
or
addb
add
pop
iret
sub
add
mov
sti
inc
into
xchg
xor
inc
gs
fildl
psubusw
cmpsb
dec
out
adc
out
jp
loope
push
mov
adc
les
fwait
pop
in
mov
data16
pop
int
out
sbb
mov
fldl
cmpsb
xchg
mov
dec
adc
mov
mov
push
out
pop
jbe
lds
pop
inc
ret
push
fstpl
out
sub
xchg
ja
out
sub
outsb
imul
mov
pop
mov
out
pop
mov
push
jle
decb
or
mov
or
mov
mov
mov
mov
cmp
jle
out
test
bound
out
jb
jecxz
ret
mov
mov
or
mov
mov
pop
repz
add
xor
pop
cmpsl
push
aas
in
mov
clc
xor
fstl
into
push
sahf
stc
es
loope
push
mov
leave
popl
clc
lds
shrl
rclb
xor
jae
adc
push
inc
dec
or
mov
pop
cwtl
jae
xor
cmpsl
lock
std
fs
push
int
jns
push
mov
pop
jb
lcall
in
hlt
scas
sbb
test
pusha
or
sbb
add
sbb
imull
sub
icebp
push
and
inc
mov
subl
lea
bound
cmp
mov
adcb
je
mov
pop
push
pop
inc
call
pop
cmp
es
jbe
jb
add
movsb
push
jp
lret
jns
push
and
bound
mov
pusha
enter
or
mov
mov
pop
xor
adc
sbb
fstps
sub
pushl
test
inc
repnz
ss
fs
ljmp
push
jg
in
in
pop
cltd
out
outsl
mov
jp
repz
repnz
inc
mov
adc
push
pusha
pop
cli
lods
mov
cmpl
int
add
insb
arpl
mov
add
imul
pushw
in
push
sti
xchg
dec
scas
push
mov
inc
sarb
mov
rcrb
loop
cli
xchg
mov
sahf
cmpb
aam
arpl
test
lcall
dec
test
push
rclb
fdivl
and
sub
imul
popa
movsb
add
xlat
aaa
jecxz
imul
leave
into
jle
pop
movsb
xchg
push
mov
or
aam
inc
lret
icebp
repz
and
add
pop
scas
mov
mov
mov
cs
movsl
shlb
xor
aam
rolb
adc
fnstsw
test
sub
xchg
fldcw
jle
jae
fdivs
or
adc
jno
fstl
mov
sub
out
fidivrs
inc
das
sbb
addb
stc
sub
popf
ja
jmp
aam
test
test
push
pop
push
add
ds
stos
bound
int3
lahf
ret
pop
and
lahf
or
xchg
or
or
sub
pushf
test
sbb
subl
mov
clc
aas
cwtl
mov
push
adc
or
mov
pop
lahf
jae
iret
mov
jb
inc
sub
fnstenv
movsb
inc
mov
cmp
sbb
shrl
shrl
push
mov
aas
fwait
push
loop
into
cmpb
stos
into
pop
int3
dec
sub
pop
out
sahf
and
mov
fnstenv
int
dec
repz
icebp
xor
cmp
cmp
add
pushf
mov
push
outsl
jae
fwait
xchg
out
push
and
sbb
push
cmp
fcoms
into
adc
sub
jb
fs
lahf
adc
jge
and
lods
or
loope
cwtl
inc
pop
sub
lret
sub
fwait
or
xchg
mov
xchg
lods
cmpsb
ljmp
xchg
rol
sbb
andb
in
jl
xchg
adc
add
popf
sub
mov
ljmp
fsub
pop
mov
repnz
movsb
in
adc
movsl
sti
fnstcw
push
enter
xchg
and
mov
dec
scas
fidivs
xchg
loop
xchg
jge
psubusb
pop
and
dec
insb
sbbb
iret
lret
sbb
pop
lret
movsl
or
ss
shll
xchg
daa
mov
test
xor
bnd
jae
mulb
jo
inc
dec
dec
xor
sbb
js
inc
stos
mov
pop
xor
dec
cmp
mov
push
repz
pop
push
outsb
pop
outsb
sti
push
cwtl
xor
test
mov
adc
push
add
inc
mov
mov
ffree
out
jnp
loope
add
arpl
pop
mov
fistpll
sbb
in
dec
pop
sbb
je
mov
cmp
cmpsb
stc
sti
sbb
sbb
ret
lods
xchg
mov
testl
jmp
and
rcll
repz
push
clc
and
outsl
push
lea
mov
jmp
xchg
adc
xor
mov
sbb
adc
sub
ja
call
inc
pop
shr
mov
sbb
cmp
adc
xchg
lcall
aam
jo
jne
xchg
aaa
push
lahf
mov
sbb
jmp
mov
popa
rorl
xchg
or
rolb
enter
mov
jecxz
xlat
push
pop
int3
or
inc
xor
cmc
aam
cmp
xor
movsl
dec
sub
rorl
rcrb
ret
scas
lret
shrl
js
dec
mov
inc
addr16
repnz
mov
out
sub
je
fadd
pop
mov
cs
fbstp
mov
enter
mov
ljmp
dec
fcomip
jp
xor
push
clc
jge
inc
inc
mov
sbb
gs
sbb
mov
pop
xchg
mov
into
iret
adc
scas
mov
lods
sti
push
out
jb
aam
sahf
mov
inc
mov
push
dec
mov
inc
ljmp
fldt
mov
enter
jge
dec
add
xor
enter
in
sub
mov
mov
mov
cmpl
ja
rcrl
push
dec
mov
jns
mov
clc
insl
add
mov
pop
hlt
into
jns
sti
xor
pushf
enter
xchg
movsl
das
loopne
cmp
pop
mov
inc
add
mov
sub
jg
loope
fcmovu
leave
pop
ret
mov
and
or
mov
inc
ss
es
mov
inc
pop
je
xor
lret
inc
lcall
adc
sub
inc
shrl
ret
int3
mov
ja
cld
fistpll
mov
hlt
mov
cmp
mov
fadd
ret
icebp
fbstp
mov
mov
in
mov
aas
and
mov
outsb
xchg
sbb
sbb
mov
call
scas
push
push
push
and
aas
sbb
dec
mov
movsl
out
call
mov
dec
loop
cmp
sub
push
sbb
aad
dec
les
push
xchg
cs
out
push
jmp
pop
insl
inc
frstor
and
sub
sbb
xchg
xchg
inc
add
aaa
ret
lahf
stos
sbb
addr16
in
lods
daa
rcrb
xchg
cli
sahf
shll
pop
stos
mov
scas
pop
out
test
dec
orl
add
push
fwait
xchg
aaa
jge
jne
push
mov
or
loope
fisttps
dec
add
dec
pop
xor
out
aad
add
mov
pop
lret
pop
xchg
popa
inc
lock
pop
rcrl
mov
fucom
jge
mov
daa
daa
scas
test
adc
push
cli
or
daa
inc
ljmp
cmc
scas
enter
push
sub
jmp
shrb
push
xor
lods
cmp
andl
mov
jnp
inc
add
xchg
push
xor
cmp
gs
dec
cmp
movsb
movsb
mov
mov
or
dec
cmp
xlat
daa
jecxz
dec
jmp
and
xchg
stos
sbb
jecxz
lcall
setae
and
lods
push
stc
sbb
or
aas
push
push
mov
mov
out
push
insl
aas
movsb
xchg
or
lods
mov
push
jecxz
ror
pusha
push
mov
xchg
popa
mov
mov
arpl
in
test
jle
mov
xchg
ret
xchg
cmp
pusha
int
and
outsb
inc
xorl
xor
add
lcall
cwtl
or
mov
paddq
mov
mov
xchg
and
loopne
inc
jae
pop
sub
add
lds
ds
test
stos
pop
cmp
mov
sbb
outsb
pusha
lret
mov
sbb
sbb
mov
rorb
mov
inc
mov
sahf
fsubs
icebp
xchg
ds
js
dec
and
pop
mov
test
rcl
jo
or
push
jae
aam
jg
fld
pop
pop
adc
add
mov
vmread
mov
or
cmp
xchg
dec
pop
push
inc
test
enter
mov
cs
push
lock
xchg
pop
arpl
dec
push
push
aad
mov
scas
lods
mov
aam
popa
jnp
loope
jg
sub
enter
stos
add
mov
in
sbb
pushf
add
jmp
mov
jle
loopne
cwtl
in
lods
loopne
sub
add
decl
out
sbb
or
mov
into
arpl
jnp
jae
and
mov
popf
popf
out
sbbl
js
test
es
ret
add
sahf
pop
inc
inc
andl
dec
cmp
push
pushf
out
into
lock
fsubrl
push
sub
xor
mov
mov
test
fdivrl
cmpsl
push
popf
xchg
sub
mov
xor
xor
mov
sbb
mov
add
daa
cmp
in
addr16
data16
xlat
xor
cmp
loop
aas
mov
outsb
jecxz
jbe
or
cmc
lock
cmpl
cmp
dec
jnp
gs
push
mov
lret
lahf
mov
mov
das
pop
popf
daa
pusha
adc
dec
sahf
pop
mov
mov
aas
xchg
sbb
mov
pop
stos
cmp
mov
jb
jmp
cmp
test
icebp
xor
adc
addr16
loope
mov
xor
fbld
cwtl
inc
mov
loop
loop
xor
lds
stos
push
out
cmp
in
cltd
in
cld
sbb
cld
orb
add
jp
xor
repnz
leave
dec
pop
or
push
int
sbb
sub
mov
lds
cs
mov
sbb
cmp
lods
into
dec
lcall
jp
add
fbld
insl
or
push
xchg
mov
negl
loope
mov
imul
lds
mov
cmp
mov
fisubs
cmpsl
mov
cmp
in
sub
movsb
and
hlt
xchg
add
jo
cmpsb
sbb
leave
sbb
ss
in
xor
into
mov
call
and
or
push
sbb
fisttpll
test
jg,pt
sub
in
lods
pop
mov
jae
jo
cmp
mov
push
and
js
xchg
xor
push
lahf
lea
es
ds
and
add
repnz
shll
push
and
and
movsl
xchg
xor
ss
int3
sahf
pop
or
nop
push
mov
jecxz
lcall
inc
mov
jnp
int
sti
inc
push
cmp
adc
xchg
sub
push
pop
xchg
idiv
je
push
mov
aas
ficompl
jecxz
mov
pusha
sub
call
orb
mov
inc
or
xor
inc
dec
mov
inc
push
ds
mov
adc
mov
out
mov
jg
orb
and
loope
nop
push
sbb
stos
dec
outsb
sub
push
sarl
jae
cmpsb
gs
insb
xchg
dec
sbb
dec
mov
or
mov
or
scas
cmpb
or
stos
mov
sbb
mov
sub
add
icebp
ret
lret
mov
mov
lods
jbe
and
in
pop
cmpsb
jmp
sub
and
cmp
out
or
je
pop
and
mov
adc
lret
mov
call
outsl
rcl
das
mov
mov
mov
stos
out
pushf
mov
jle
je
ffree
into
inc
inc
repz
in
sub
dec
xchg
test
test
jno
pop
cld
push
xchg
adc
xorb
dec
fwait
xchg
xor
mov
popa
aad
and
cltd
push
sub
fxch
jge
ret
fwait
xchg
rcl
out
arpl
and
cmp
mov
inc
inc
xchg
xor
jno
hlt
aam
testb
inc
sbb
pop
mov
loope
pop
mov
add
fidivl
aas
addb
test
inc
xor
xchg
fwait
fwait
cmp
cmpb
xor
add
shll
push
sti
int3
mov
pop
clc
add
sar
jle
loopne
outsb
out
lock
sbbb
sahf
and
sarb
out
arpl
cmp
xchg
scas
inc
or
pop
mov
fwait
jmp
ss
cmp
xchg
cmpl
lret
add
mov
ljmp
fldenv
sbb
int
and
insb
mov
jae
inc
pushf
mov
sub
std
dec
xor
pop
pop
inc
lock
pminub
repnz
nop
cltd
sbbl
adc
jge
repz
dec
dec
insb
mov
sub
and
adc
xchg
imul
andb
sarl
xchg
xchg
jb
sbb
jg
mov
insb
sbb
and
xlat
mov
es
or
adc
filds
cmp
out
push
and
incl
or
xchg
das
imul
test
ss
xchg
out
popf
fs
adc
stos
mov
xlat
pop
jmp
adc
mov
xor
aam
cmpb
mov
outsb
enter
xor
ja
cmpb
dec
xchg
push
xor
and
sarb
pop
iret
mov
incl
push
jmp
movsb
or
test
jg
test
bnd
add
test
in
jle
mov
sahf
sub
cmpsl
nop
mov
mov
xor
sub
stc
leave
pop
xchg
subb
in
inc
pop
sbbl
mov
or
fistpll
ret
ret
jbe
inc
js
xorl
cltd
mov
add
fdivrs
sub
movb
dec
sub
nop
repz
ja
jne
mov
ljmp
xchg
andb
out
fld
out
jb
cli
jno
popf
int
dec
adc
rcrl
jg
inc
addb
add
pop
in
push
dec
loop
adc
push
cmpb
pushf
lock
pusha
or
or
std
imul
and
mov
xchg
es
aam
xchg
in
hlt
lea
inc
and
iret
cmpsl
call
or
mov
add
negl
inc
mov
xorl
arpl
dec
int
push
out
shlb
jno
jno
add
sti
mov
mov
inc
xchg
lret
in
push
sub
and
rdtsc
jp
enter
addr16
scas
cwtl
icebp
cld
lret
movsb
push
test
cmp
stos
ja
mov
cmp
lea
mov
mov
arpl
mov
pop
mov
push
push
cvtps2pi
scas
sub
or
inc
ljmp
shlb
push
fstpt
mov
lock
xor
repnz
std
imul
in
cmp
push
cld
push
das
in
lea
xor
jmp
sti
add
and
arpl
jb
insl
mov
push
in
xlat
push
mulb
call
ds
enter
and
cmp
fisubl
stc
mov
push
or
stos
call
xor
cs
call
jecxz
movsb
add
dec
ja
fistl
or
in
hlt
arpl
and
sub
mov
sahf
or
dec
adc
fucomp
adc
push
inc
pop
dec
sub
adc
dec
push
mov
mov
or
sub
or
xchg
xor
cvtps2pd
adc
add
popa
jne
jae
into
movsl
adc
movsb
or
adc
in
mov
pop
fisttps
or
jo
clc
cmp
je
jp
sub
adc
out
and
adc
in
iret
rorb
inc
xchg
es
xlat
xchg
adc
cwtl
jne
pushf
mov
xlat
in
push
test
aas
sarl
psubb
movsl
out
mov
cltd
ss
in
pop
sbb
push
inc
shlb
dec
aas
pop
faddl
jbe
push
pop
inc
repz
or
sub
xchg
xlat
pop
rcrl
dec
mov
jo
int
pop
popa
out
sti
sub
mov
mov
jle
lret
int
rcr
xor
cli
movl
rcll
gs
clc
fcompl
mov
mov
daa
jno
mov
adc
loope
mov
jle
mov
fdivl
je
in
push
test
xchg
xor
ret
pusha
clc
movsb
inc
test
dec
loopne
lods
add
test
add
mov
xchg
dec
add
shlb
dec
imul
push
cmp
adc
loope
add
sub
cmpsb
stos
lret
jo
test
mov
outsl
scas
rclb
sti
aam
dec
pusha
shl
jne
les
mov
mov
mov
jb
bound
adc
inc
fcoml
dec
jb
lcall
mov
int
sub
out
addr16
mov
mov
pop
and
adc
or
inc
test
mov
scas
out
in
test
cwtl
mov
and
mov
xor
pop
jo
fisubrs
add
add
xor
imul
sub
pushf
lds
aas
sbb
xlat
mov
cmpsl
sar
mov
out
mov
xchg
jo
mov
cld
cmc
out
dec
ss
fsubl
dec
push
outsl
ds
push
mov
push
xchg
inc
mov
mov
push
mov
loop
mov
dec
shlb
xorb
cmp
mov
cmp
jmp
call
cmp
int
scas
xor
xchg
test
mov
jmp
xor
popf
mov
sbb
data16
scas
pusha
cli
loopne
call
outsl
out
dec
mov
pusha
lret
xor
jl
outsb
mov
jge
push
out
push
inc
dec
shrb
ret
mov
and
scas
push
outsb
add
in
sub
fsubrp
jecxz
fsubrs
mov
int3
mov
into
mov
lods
mov
fisttps
pop
das
pop
or
xchg
mov
pushf
sbb
sbb
and
scas
out
xchg
or
incl
js
lcall
ficoms
loop
pop
int3
leave
mov
add
and
adc
loop
sti
adcb
dec
ljmp
dec
les
out
mov
adc
add
outsb
cld
push
pop
or
mov
dec
mov
dec
jb
cmp
jne
sbb
popf
dec
in
in
adc
shrb
fxam
ljmp
push
push
movsl
sub
xchg
fbstp
imul
outsl
cmpl
add
jns
mov
sbb
xchg
pop
fisttpl
imul
sbb
sahf
in
adc
arpl
inc
and
fcmovne
jno
jnp
lods
dec
movsl
dec
push
dec
pop
mov
jo
jg
xor
xor
rcll
ja
sbb
nop
ss
cmpl
pop
into
popf
jnp
or
mov
mov
and
add
lahf
sub
out
mov
mov
cwtl
fst
mov
push
mov
cltd
push
loope
cmpsl
leave
arpl
lea
xchg
mov
pop
mov
dec
mov
jo
pop
shr
in
outsl
jae
inc
dec
cs
and
mov
xor
insl
or
ror
gs
mov
jb
push
pop
and
sub
pushw
cmp
xlat
icebp
and
add
adc
jle
or
and
adc
jge
sbb
fsubp
xchg
mov
adc
iret
js
push
adc
mov
mov
push
imul
daa
jno
das
pop
std
in
inc
cmp
pushf
cmovge
and
xor
or
dec
notl
or
pusha
shll
imul
cmpsl
or
push
jnp
pop
cmp
vsubps
lock
popa
cmp
and
jecxz
pop
mov
mov
add
push
int3
lret
pop
icebp
shll
mov
adc
push
je
jne
cmp
cmp
inc
cmpb
push
push
xchg
cmc
out
xchg
arpl
das
dec
jmp
leave
ds
jecxz
adc
jae
imul
pop
ret
or
punpckhwd
dec
popf
imul
pop
movsb
divb
nop
adc
fsts
xchg
fistpl
inc
mov
aas
outsl
cmpsl
lods
cmp
out
ds
dec
decb
repnz
and
adc
mov
xchg
pop
jo
jmp
lcall
cmp
fcompl
insb
xchg
enter
cmc
sub
mov
xor
mov
xchg
movsb
lods
xlat
and
lods
cmp
jmp
call
add
push
pop
sub
insb
add
out
adc
cmp
