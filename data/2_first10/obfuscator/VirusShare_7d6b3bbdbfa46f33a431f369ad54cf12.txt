clc
test
js
js
dec
cmp
and
lods
lods
inc
and
inc
pop
or
incl
lods
loop
test
outsb
dec
lods
cs
outsb
dec
lock
lock
add
inc
and
clc
sbb
sbb
mov
movsb
add
dec
movsb
js
incl
inc
add
dec
add
adc
idiv
sbb
or
and
sbbb
or
dec
add
dec
sbb
sbb
decl
dec
and
decl
mov
and
add
test
sbb
adc
andb
fcmovnu
fwait
loopne
dec
adc
in
pop
inc
cs
xor
adc
mov
addl
mov
lock
js
inc
dec
or
inc
sbb
inc
test
fstp
sbb
loop
mov
movsb
outsb
adcb
js
inc
add
testb
or
dec
mov
adc
les
and
inc
and
addl
add
and
outsl
pop
lock
adc
cs
inc
mov
xor
lock
incb
sbb
add
out
and
and
add
or
push
adc
dec
dec
jp
loop
push
cmpl
mov
jle
outsb
insb
add
clc
or
out
add
sbb
outsb
add
jbe
popa
sti
sub
mov
adc
mov
jg
mov
add
clc
lock
movsb
clc
adc
enter
negb
dec
ficomps
test
lods
dec
add
mov
jmp
dec
xor
pop
and
add
movsb
mov
pop
or
push
mov
jb
js
scas
push
outsb
clc
lods
xchg
and
push
test
inc
clc
add
add
bound
add
lock
addb
sub
mov
adc
in
add
outsb
insl
mov
and
and
movsb
outsb
sbb
adc
inc
add
adc
xor
or
js
js
push
and
adc
das
sub
xor
dec
inc
testb
mov
mov
outsb
and
xchg
cs
xor
lods
sbbb
add
add
add
push
mov
fcmovnbe
and
inc
dec
lock
or
into
sbb
push
cwtl
mov
pop
jmp
sub
mov
les
dec
cmp
push
shl
adc
push
fisubl
insl
mov
sbb
inc
cmpsb
adc
sbb
lcall
pop
dec
ds
and
in
inc
jmp
jle
jo
xchg
je
and
adc
add
aaa
or
pop
outsb
adc
dec
push
inc
roll
into
dec
adc
test
sbb
idivb
rcrl
sbb
in
pop
test
and
mov
bound
ljmp
add
xor
push
and
sbb
cmp
loop
xor
test
ficomps
rolb
mov
adc
and
mov
jbe
adcb
js
loop
add
subb
test
add
adc
ss
and
add
lcall
test
sbb
cmpb
fsubs
or
pushf
jo
dec
movsb
lcall
fmull
and
roll
cmp
dec
sbb
dec
les
fcmovnu
sbb
cmp
nop
addb
lods
mov
hlt
mov
and
and
mov
cmp
push
in
cmpsb
push
xchg
mov
lods
jle
loope
test
shlb
lcall
ret
ss
mov
add
mov
push
dec
push
loop
mov
cmp
add
mov
mov
rorb
in
ret
push
fs
sbb
jb
adc
xor
fmull
lcall
add
inc
popa
jl
and
or
ds
and
push
xchg
bound
test
xchg
lock
xorl
push
add
dec
inc
test
mov
loop
jle
xor
mov
sbb
push
sbb
stos
mov
xchg
mov
adc
or
push
adc
push
mov
bound
dec
add
fsubrl
pop
xor
sbb
sahf
and
mov
decl
addr16
inc
les
pusha
sbb
aam
adc
xorb
adc
pusha
add
mov
addb
lock
js
addl
mov
mov
outsb
jl
add
imul
out
adc
sub
sub
sbb
sbb
sub
pop
pop
inc
or
add
clc
into
or
mov
mov
fadds
sub
sub
lods
movsb
adc
sbb
cmp
cmp
mov
cmp
and
fisubs
ret
or
mov
xchg
pushf
xor
and
adc
push
adc
push
fidivrs
or
push
adc
mov
mov
push
dec
je
jbe
sbb
add
loopne
je
sbb
ljmp
loop
int3
lcall
clc
out
add
sub
jmp
add
data16
and
jp,pn
adc
push
inc
mov
pop
pop
cwtl
loopne
inc
inc
pusha
jmp
push
jo
and
xor
mov
aam
or
add
andb
addl
lcall
pushf
jl
flds
sub
xor
adc
mov
or
push
dec
mov
adcb
lods
lcall
inc
xor
sbb
xor
mov
xchg
test
cmp
sahf
jp,pt
inc
push
pusha
xor
push
incb
mov
xchg
mov
sbb
test
add
mov
push
xor
and
xor
pop
in
push
mov
mov
sub
pop
movsb
jb,pt
or
rclb
jbe
ret
sbb
pop
jp
xchg
imul
fcoms
inc
adc
adc
rolb
cwtl
outsb
andb
mov
data16
cmp
push
cwtl
ret
add
sbb
adc
or
test
push
mov
sub
xor
pop
dec
shlb
movsb
jl
and
mov
movsb
int
xor
je
adc
ljmp
cmp
jp
xor
out
add
movsb
lcall
and
push
inc
add
adc
fdivrl
add
add
addb
jbe
loopne
push
sbb
sbb
aam
js
push
movsb
dec
pusha
push
cltd
mov
push
add
xchg
or
pop
push
js
in
shll
imul
push
int3
dec
adc
push
shlb
mov
pop
or
insb
addl
cmpsb
cld
shlb
inc
les
movsb
jo
bound
loop
mov
push
mov
and
bound
mov
popa
inc
outsb
rolb
xorb
sbb
sub
lock
sbb
xchg
mov
loopne
push
push
push
cwtl
push
sbb
xor
adc
int3
lods
xor
stos
or
mov
xor
addl
mov
mov
popa
add
lcall
test
and
push
clc
mov
add
addl
sahf
js
sbb
ljmp
cmpsb
mov
ror
loop
cs
xchg
pop
ss
jo
popa
and
into
add
mov
sbb
push
test
pop
mov
jle
pusha
and
or
cmp
dec
testb
shrl
xor
addb
ret
adc
dec
adcb
fadds
movsb
mov
andl
dec
cld
adc
pop
repnz
into
cmp
lods
mov
mov
movsb
pop
test
or
xchg
cli
testb
dec
popa
push
mov
mov
and
add
mov
loop
mov
adc
js
push
inc
xchg
ret
pop
mov
js
pushl
test
les
lcall
xor
aad
adc
sahf
pop
adc
and
lcall
les
dec
and
rolb
mov
je
cmpb
andb
and
sbb
pusha
stos
add
xor
adc
fmull
cmpb
movsb
outsb
cmpsb
dec
xchg
adc
xchg
xorl
lret
sbb
inc
pusha
add
pop
les
jo
adc
mov
cs
ret
push
loop
jo
orl
or
dec
add
cmp
scas
xchg
add
jo
cmpsb
xor
loopne
inc
fs
adc
dec
add
mov
sahf
call
dec
xor
adc
xchg
inc
mov
sbb
test
fiaddl
mov
or
je
inc
sbbb
add
subb
jl
loopne
dec
mov
les
cmpsb
inc
add
int3
ret
movsb
cmpsb
push
mov
addb
and
dec
in
call
add
and
mov
inc
xor
test
adc
adc
push
add
inc
and
and
or
push
sbbl
sbb
loopne
loopne
movsb
dec
push
mov
sbb
rcll
sahf
add
call
pop
mov
and
loopne
push
inc
orb
and
xor
and
pop
lds
adc
and
add
mov
shrb
movsb
outsb
bound
stos
lods
inc
add
fiadds
adc
test
es
push
cmc
fidivl
pop
cmp
test
sub
loopne
enter
push
dec
adc
sbb
adc
insb
addl
call
pop
pusha
sbb
or
adc
push
sub
add
mov
lods
sbb
test
insb
loop
loop
orb
mov
add
mov
lock
cmp
inc
push
addl
add
xor
dec
push
pop
jl
movsb
adc
jmp
and
outsb
xorl
push
je
inc
sub
and
js
ret
mov
outsb
add
rcrb
or
sub
sbb
adc
lcall
addl
sbb
sbb
sbb
test
xor
jne
loope
xchg
in
or
fsubrs
jae
adc
sbb
cld
mov
and
push
or
or
push
movsb
push
sbb
jp
cltd
add
loop
mov
jmp
push
jb
push
and
pop
push
repnz
add
xchg
dec
enter
cmpsb
es
xchg
leave
lods
sub
loop
push
sub
dec
cld
scas
mov
mov
bound
or
mov
movsb
xchg
xchg
xor
xchg
adc
xor
add
test
dec
xchg
push
into
leave
or
mov
into
ret
add
andb
dec
cmp
add
mov
adc
js
fsubs
clc
sbb
movsb
je
cmp
lock
jbe
out
cltd
in
mov
adc
lods
sub
mov
rorb
sbbl
and
lods
dec
inc
test
ss
je
mov
negb
and
loop
push
or
addl
sbb
outsb
and
jbe
and
and
xchg
pusha
sbb
mov
xchg
andb
shll
jne,pt
add
add
scas
add
cwtl
add
je
andb
push
adc
es
sbb
loopne
lock
in
aam
dec
or
pop
add
lock
inc
and
mov
add
lock
inc
mov
push
or
and
sbb
pop
xchg
data16
hlt
shlb
add
adc
jb
lods
xchg
loop
nop
hlt
mov
dec
inc
sbb
stos
adc
les
adc
icebp
xor
adc
or
and
and
repnz
sbb
jl
divb
adc
out
mov
ret
dec
roll
clc
adc
sbb
jo
lcall
push
sbb
xchg
inc
mov
add
xor
scas
les
adc
adc
shlb
pop
xchg
dec
pop
adc
cli
mov
mov
or
adc
or
add
ljmp
int3
les
js
dec
mov
sbb
shll
mov
sbb
mov
fwait
jp
add
out
lret
and
add
add
sub
je
xchg
les
push
mov
or
les
adc
cmp
push
sbb
adc
sbb
and
adc
add
inc
and
cmp
sbb
push
mov
lock
ljmp
cli
pop
loop
clc
dec
lcall
dec
outsb
or
push
cltd
adc
js
addb
dec
neg
les
aam
lods
or
mov
pop
enter
dec
je
push
sub
or
rolb
add
out
push
inc
push
shrb
int3
sbb
aam
pushf
test
adc
dec
lret
roll
add
cwtl
test
je,pn
in
adc
sub
addl
lods
rolb
shrb
mov
out
orl
xor
jbe
int3
popa
push
fiadds
push
xor
lods
sub
inc
push
test
mov
js
les
push
add
xor
test
xchg
sub
cld
pusha
mov
dec
hlt
ss
loop
loop
adc
into
mov
test
subl
lock
data16
ljmp
xchg
sbb
lock
mov
cmpb
or
adc
ret
fmull
push
cmpsb
adc
incl
or
add
ret
adc
ret
rcr
cli
test
or
or
sub
and
mov
sub
push
andl
add
adc
cmp
inc
lret
les
orb
outsb
push
into
sub
add
loop
aam
sbb
test
adc
sub
inc
inc
mov
lods
cmp
push
sub
out
shrl
pop
bound
jae
dec
push
adc
inc
or
xor
xchg
dec
or
push
push
data16
inc
mov
push
mov
sub
ljmp
nop
mov
rorb
fs
clc
lods
fiadds
adc
js
shrb
add
sbb
pop
js
or
popa
or
adc
push
movsb
test
and
aam
add
sbbb
xorb
pushf
xor
stos
mov
xchg
adc
jo
nop
adc
push
sbb
sbb
push
in
js
xchg
inc
daa
int3
je
inc
add
cmp
sub
cmp
adc
mov
dec
or
aam
sbb
dec
int
movsb
add
lret
and
sub
or
bound
ss
cmp
stos
jo
movsb
and
adc
les
inc
xchg
loop
rolb
enter
or
xor
pushf
and
or
sbb
clc
add
adc
xor
jbe
inc
sbb
or
pop
add
pop
dec
sbb
push
sub
push
and
mov
lcall
adc
or
lods
cmp
pop
lods
lods
push
loop
sbb
lods
adc
add
xor
pushf
and
adc
dec
sub
hlt
movsb
nop
add
inc
repnz
xor
and
add
or
dec
retw
and
rcr
inc
loope
inc
jo
inc
andb
adc
lock
lcall
insb
lock
add
ljmp
sub
dec
push
cwtl
add
lcall
lock
push
add
loop
push
and
cmp
pop
and
test
adc
fisubs
pop
aam
into
mov
adc
jo
mov
cmp
in
mov
loopne
mov
jp
add
sbb
mov
shlb
cmp
shrb
push
movsb
outsb
jle
pop
add
les
movsl
dec
cmp
xor
mov
xor
movsb
rcrb
sub
mov
dec
cmpsb
cmpsb
or
lock
orb
addl
nop
dec
jl
mov
fdivp
fcom
cld
nop
mov
imulb
xor
cwtl
xchg
pop
push
icebp
scas
pop
push
call
inc
test
lock
sbb
pushl
out
xor
sbb
data16
rorb
and
and
orb
add
cwtl
ret
int3
sub
fidivrl
sbb
sbb
jbe
fs
adc
mov
sbb
ss
xchg
and
pushf
jo
or
clc
adc
pop
xor
mov
xor
adc
rol
push
xor
cmp
ret
into
lcall
adc
test
inc
clc
ljmp
int3
xor
ret
aam
data16
dec
adc
sbb
insl
adc
mov
inc
test
dec
push
das
rorb
ret
xor
xchg
and
or
jb
adc
dec
scas
lds
scas
pop
mov
je
sbb
cmp
cmp
cwtl
inc
imul
lock
push
es
add
jle
fadds
xchg
shll
lods
push
mov
adc
inc
and
add
cltd
dec
sub
adc
sbb
inc
es
aam
push
sbb
add
rclb
sbb
adc
js
xor
add
mov
addl
lds
xor
sub
add
pop
shll
pop
int
mov
xchg
sbb
push
push
call
addb
or
js
or
xchg
inc
mov
cmp
xor
in
and
shl
aad
jo
push
je
in
pop
int3
lock
mov
adc
mov
jb
sbb
mov
cmpsb
adc
add
push
adc
orl
jle
cwtl
movsb
push
call
inc
mov
push
inc
add
es
xchg
es
push
dec
jo
or
add
or
dec
faddl
mov
ret
sbb
jbe
and
dec
dec
cmp
inc
xchg
ret
js
adc
jo
mov
add
mov
push
cli
data16
and
xor
lock
pop
int3
mov
movsb
and
aam
xchg
push
stos
adc
pop
addb
test
adc
aad
xor
and
faddp
add
xor
and
xchg
push
out
popa
stos
stos
out
outsb
outsb
bound
cmpsl
loop
aam
rorb
aaa
lcall
lods
sbb
pop
sub
push
add
and
add
add
lock
mov
sahf
inc
xorb
test
inc
clc
add
add
add
inc
outsb
and
lods
clc
sub
jmp
dec
mov
test
or
mov
lods
inc
sub
adc
mov
or
cld
movb
push
and
xor
in
or
jo
inc
xor
cmovbe
push
xor
fcoms
popa
test
jmp
push
adc
inc
mov
or
js
cs
pop
jne
cwtl
adc
sbb
sbb
les
and
push
or
lret
inc
cmp
data16
hlt
sbb
push
mov
and
mov
dec
dec
pop
add
fmul
sub
add
push
and
je
and
movsb
xchg
lret
lcall
inc
push
adc
hlt
cmpsb
pushf
add
jmp
jle
cmp
adcl
xchg
addb
insl
orl
shrb
cwtl
dec
test
push
lret
xchg
adc
pop
sbb
mov
pop
push
nop
push
bound
pusha
sbb
xor
push
push
or
add
sbb
movsb
sub
mov
int3
notb
pushf
ljmp
add
rol
pop
mov
push
loop
push
jle
lret
pusha
xor
ss
add
mov
jae
adc
xchg
out
mov
mov
lods
add
or
dec
push
es
add
test
cmpsb
push
add
sbb
adc
pop
add
test
lods
clc
data16
pop
clc
pusha
enter
add
cli
push
add
push
sbb
sbb
cli
test
ret
into
xchg
stos
jecxz
and
lret
out
imul
movsb
rclb
and
cwtl
or
pushw
jb
mov
mov
stos
dec
cli
ret
sbb
adc
hlt
mov
adc
push
jbe
xor
inc
test
pop
or
shlb
call
ss
enter
clc
lock
dec
cmp
mov
jo
push
pop
or
mov
jl
loop
sub
shl
push
cltd
shlb
lock
sbb
cmp
add
aam
ds
lcall
cs
aam
sbb
mov
or
add
cli
fimuls
sbb
pop
loop
les
sub
aam
add
js
adc
lcall
mov
out
adc
mov
inc
dec
mov
sahf
inc
push
pusha
push
dec
sbb
adc
sub
mov
xor
and
mov
enter
addl
mov
and
mov
add
int3
push
or
mov
pop
pop
push
orb
sbb
mov
aam
pop
push
and
rcrb
or
in
sbb
inc
add
sahf
es
mov
jle
call
loop
mov
or
sbb
mov
lret
inc
jo
sub
movsb
les
ret
push
lods
aam
fisubl
rclb
cmp
orb
push
lcallw
lock
shl
add
xor
je
pusha
dec
cmp
call
add
adc
loopne
add
adc
adc
and
cs
pop
and
jp
jp
jo
mov
incb
mov
addb
or
outsb
inc
data16
shlb
sbb
not
popa
xor
xor
add
pop
test
add
nop
or
inc
into
add
push
cwtl
mov
bound
add
mov
add
jne
mov
pop
loop
inc
adc
loopne
fimuls
test
test
addb
ffree
testb
push
loopne
adc
push
andl
push
or
test
sbb
xor
into
mov
dec
loope
xor
loopne
data16
outsb
add
inc
inc
dec
push
dec
mov
stos
and
pushf
outsb
dec
or
rorl
movsb
sbb
push
cltd
mov
inc
and
dec
cs
test
lods
ret
stos
add
sbb
inc
inc
mov
cwtl
xchg
dec
xor
push
jo
add
je
or
push
enter
insb
add
push
push
and
pushl
mov
rolb
stos
add
lock
sbb
loop
adc
cs
push
add
ret
adc
and
stos
jb
push
sbb
xchg
dec
cmp
mov
or
mov
adc
add
pusha
fcompl
push
loopne
or
stos
mov
mov
cltd
dec
sub
adc
inc
in
or
and
cwtl
lcall
pusha
andb
push
pop
add
xor
or
and
fdivl
mov
xor
int3
mov
jl
jb
addb
dec
repnz
test
ss
jno
pop
sar
dec
clc
insb
xchg
add
ret
enter
fdivrl
add
pusha
push
adc
lock
outsb
in
loope
call
std
xor
push
and
dec
xchg
xor
dec
mov
into
mov
pusha
push
cli
lock
loopne
push
pop
or
loop
outsb
ds
outsb
jb
adc
pusha
mov
dec
jbe
or
rorb
es
lret
cmp
pop
cmpsb
sbb
add
inc
add
adc
adcb
sbb
push
xor
lods
and
sbb
shlb
jae
push
mov
and
push
fs
cmpsb
andl
sbb
js
cmp
je
incl
int3
pop
xor
pop
xor
mov
mov
stos
add
adc
adc
lds
sahf
mov
adc
addb
cli
adc
cli
in
inc
add
loop
cmpsb
movsb
add
adc
jo
pushf
sbb
adcl
mov
movsb
inc
sbb
adc
shlb
and
and
dec
pop
xor
movsb
data16
es
add
lods
mov
sub
repnz
sbb
push
lret
movsb
adc
clc
xchg
adc
hlt
faddl
pop
or
call
in
add
pop
test
jo
scas
addl
dec
and
out
inc
int3
jb
mov
xor
inc
ds
jno
jne
add
inc
mov
mov
pop
push
loop
cmp
jb
mov
test
xchg
xorb
daa
pop
add
insb
loop
pop
push
jmp
add
pop
pop
test
stos
pop
add
adc
pop
lods
or
or
sub
mov
shrb
add
clc
add
push
mov
call
add
mov
add
mov
push
sbbb
xchg
dec
push
repnz
lea
jbe
dec
sbbb
loopne
bound
lcall
xchg
push
xchg
or
mov
nop
loopne
dec
or
add
test
clc
fwait
add
movsb
adc
xchg
mov
pop
je
pop
movsb
sbb
push
adc
call
cmp
ficomps
lcall
xorb
aaa
int3
and
hlt
lock
push
dec
and
push
xchg
and
stos
loopne
add
shlb
ficomps
stos
rol
add
add
lods
js
cmpl
add
divb
mov
push
lock
ret
cwtl
or
je
pushf
and
push
mov
loopne
sbb
and
sti
mov
movsb
je
add
fisubl
and
ljmp
and
test
xor
and
jo
fmuls
in
inc
repnz
addl
push
cwtl
pushf
and
test
inc
sub
push
push
inc
or
mov
pop
loop
xor
cmp
out
adc
mov
out
xor
jl
mov
and
push
push
inc
ror
jp
js
cli
push
or
dec
pushf
dec
xor
adc
push
clc
sub
dec
movsb
add
mov
in
mov
in
lcall
movsb
adc
inc
je
loop
pusha
or
push
test
clc
int3
and
xor
push
stos
cmp
outsb
inc
inc
sub
mov
sub
xchg
clc
hlt
jo
int3
or
sbb
imul
push
adc
adc
and
loope
push
aam
dec
sbb
inc
pop
xor
xchg
or
inc
sub
cmpsb
outsb
shlb
ljmp
into
pop
sbb
rorb
jbe
adc
or
andb
mov
leave
push
enter
and
aam
xor
cltd
test
ficoml
sbb
lock
push
or
andl
add
ljmp
push
cwtl
lea
pop
pop
inc
adc
sub
movsb
pop
add
into
and
mov
adc
jno
fcomps
add
xorl
inc
xchg
sub
and
mov
adc
jbe
add
xchg
out
xchg
push
or
sub
and
xorb
adc
dec
push
adc
cwtl
rolb
fdivl
sub
pop
or
dec
addb
cmp
call
in
pop
and
fmull
je
push
xor
rolb
push
lods
test
sbb
orb
lock
add
rcrl
adc
push
int3
or
lock
fdivp
inc
add
adc
sub
jecxz
push
js
adc
sbb
push
lcall
jo
add
add
jo
sub
sub
sbb
xchg
adc
bound
aam
xor
ret
xchg
or
and
add
testb
cmp
or
popa
data16
pop
lcall
in
add
pop
rcl
call
lock
clc
dec
dec
mov
push
push
cmp
xchg
mov
dec
ret
adc
or
mov
clc
sub
repnz
jo
xor
sbb
add
mov
xor
or
mov
test
pusha
adc
push
enter
or
mov
loopne
loopne
and
push
and
adc
call
adc
scas
jnp
add
loop
dec
fxch
push
mov
push
movsb
jbe
rcrb
or
in
push
mov
push
adc
adc
ljmp
test
sbb
xchg
shlb
add
sbb
xor
outsb
lods
cltd
loopne
pop
loopne
cmp
add
xchg
push
add
push
orb
cld
add
sub
andl
outsb
test
or
or
fisubl
je
xor
sub
pushf
call
mov
push
dec
adc
inc
andl
add
adc
add
or
inc
incb
lods
or
mov
add
ljmp
inc
xor
mov
orl
les
fimull
add
cmp
dec
cmpsb
jb
sbb
jae
enter
xchg
push
add
xchg
push
shll
mov
adc
push
push
pop
inc
ret
mov
add
add
dec
and
xor
mov
sbb
dec
ss
incl
test
js
inc
mov
mov
xor
inc
lods
dec
inc
or
or
mov
sbb
cwtl
xor
adc
and
negb
add
adc
jbe
int
sbb
pop
and
cltd
mov
test
stos
push
cmp
adc
inc
xchg
push
sub
adc
jmp
fmuls
and
into
inc
cwtl
add
cmp
sbbb
in
dec
mov
fs
xchg
pusha
and
js
inc
inc
inc
movsb
es
push
fisubrs
cwtl
adc
cmpsb
cmp
and
or
fiadds
dec
data16
in
inc
add
adc
mov
mov
mov
shlb
faddl
lock
pusha
pop
ret
outsb
lods
lods
cmp
inc
inc
mov
dec
push
andl
test
push
andb
adc
cmp
addb
les
or
test
data16
mov
outsb
or
push
inc
andb
and
add
and
je
rolb
pop
js
and
add
push
add
repnz
or
insb
push
or
adc
push
stc
jl
cld
sub
mov
or
das
shrb
loop
or
push
xor
inc
loop
movsb
outsb
shll
lret
int3
fimuls
add
clc
mov
or
cmp
inc
or
xchg
je
cs
pusha
xor
add
test
or
mov
adc
push
adc
lock
outsb
jle
and
sub
addl
mov
pop
mov
outsb
sahf
inc
clc
adc
mov
roll
cwtl
bound
loop
dec
dec
rcrl
cwtl
sbb
ret
mov
push
xchg
in
fadds
add
xchg
stos
rcl
into
orb
add
dec
jl
adc
inc
je
clc
jbe
inc
mov
scas
adc
jbe
dec
and
lods
add
sbb
mov
dec
push
clc
data16
or
inc
mov
xchg
jbe
push
call
cltd
rol
call
xchg
sub
xchg
out
mov
test
push
adc
inc
sub
jo
stos
and
clc
lcall
out
mov
xchg
arpl
enter
xor
adc
push
loop
inc
sbb
xchg
or
xchg
and
int3
imulb
mov
and
mov
stos
and
push
stos
inc
xchg
mov
and
or
push
cmp
inc
dec
and
and
jo
push
and
sahf
loop
push
sbbl
mov
lock
sbb
fadds
xchg
scas
push
inc
pop
inc
clc
xor
dec
bound
je
add
ret
leave
and
sub
cmp
andl
cli
nop
adcl
loopne
jp
lcall
mov
bound
push
or
call
les
je
adc
js
dec
add
add
sub
sbb
enter
adcb
push
add
and
in
andb
inc
add
outsb
add
and
fs
pop
shlb
add
adc
int3
dec
mov
and
movsl
add
dec
popa
mov
jne
add
test
inc
or
mov
js
movsb
xor
push
inc
lock
insb
sub
jp
push
mov
dec
lock
adc
sarb
adc
xor
test
push
ds
into
data16
and
sbb
jp
sub
test
andl
cs
and
xchg
shrl
dec
push
shlb
pop
add
subb
or
or
shlb
push
lock
or
mov
bound
xchg
insb
xor
lock
push
cs
adc
adc
enter
repnz
inc
pop
add
js
xchg
je
lods
xor
xor
or
loop
shlb
jl
rorb
adc
test
fcmovne
push
sbb
in
scas
or
cmp
push
and
fcoms
inc
cwtl
jo
jp
loop
push
shlb
fimull
jo
js
hlt
add
xor
add
sbb
or
clc
mov
mov
clc
push
cltd
ds
je
outsb
adc
adc
push
xchg
xchg
pop
data16
cmp
inc
mov
sbb
cwtl
mov
je
or
xor
mov
inc
scas
adc
pop
and
movsb
movsb
test
pop
int
out
mov
xchg
loop
or
shll
cmp
add
and
scas
add
ret
mov
mov
call
and
pop
out
aam
je,pn
test
into
jo
adc
push
ret
hlt
ss
mov
lock
mov
cmp
and
adc
sbb
xor
sub
dec
or
adc
dec
mov
push
inc
add
and
pop
clc
mov
ljmp
adc
adc
push
add
mov
test
int3
and
bound
dec
bound
sbbl
mov
mov
repnz
or
jbe
ret
ret
dec
sub
cwtl
adc
lcall
movsl
jb
dec
and
push
adc
inc
push
inc
add
fs
mov
adc
out
lock
jl
dec
jmp
jp
or
pop
lcall
add
pop
jl
xchg
inc
add
sbb
pop
and
aam
clc
dec
sbb
leave
or
js
dec
ds
add
outsb
orb
or
adc
movsb
inc
data16
xchg
xor
popa
shlb
xchg
pusha
cmp
jb
inc
sbbl
outsb
dec
fcoml
or
repnz
popf
xor
int3
push
push
adc
sbb
adc
and
add
outsb
int3
jb
mov
enter
pop
js
inc
xor
or
cmpl
dec
ret
andl
xchg
pop
sbb
add
outsb
rorb
cmp
aad
sbb
jbe
cmp
lret
aam
cwtl
dec
xchg
dec
int3
xor
test
call
push
aam
les
push
add
cmp
jp
ret
dec
movsb
cwtl
sub
xchg
adc
xchg
nop
int3
je
or
adc
add
add
add
add
cmp
fidivrl
or
push
andl
mov
xor
pushf
into
add
inc
add
mov
ret
sbb
inc
and
fsubrs
cltd
roll
scas
lcall
or
int3
lods
xchg
adc
xchg
and
fadd
ss
add
lods
and
dec
xchg
popa
push
mov
addl
hlt
rolb
push
xchg
mov
mov
dec
subb
jne
outsb
sbb
or
mov
adc
ds
data16
mov
or
push
out
loop
dec
or
ss
fs
add
push
lock
xor
sbb
mov
sbb
push
pop
mov
inc
fs
sbbb
adc
or
xchg
push
outsb
sub
or
adc
push
adc
enterw
xchg
inc
mov
inc
and
sub
dec
js
rorb
jl
add
and
pop
push
sarl
add
mov
int3
in
int3
fs
fisubs
cmp
sbb
into
cmpsb
jbe
mov
mov
sub
add
inc
adc
sbbb
sub
mov
push
inc
ficoml
add
lret
lret
sbb
or
dec
inc
test
and
mov
add
pop
push
xchg
out
shlb
mov
push
pop
jmp
dec
mov
outsb
idivb
sub
sbb
or
or
xor
cmpsb
sbb
jo,pn
ljmp
add
adc
pop
ljmp
inc
into
enter
adc
xor
outsb
cmp
sbbb
cs
and
in
js
push
mov
mov
and
enter
outsb
xchg
test
test
adc
xchg
inc
loop
add
or
pop
xchg
inc
mov
xlat
lret
es
xchg
sbb
insb
xchg
jo
sbb
push
or
sbb
jp
pop
sbb
sbb
add
push
dec
fsubp
into
roll
xchg
inc
cmpsl
pusha
add
adc
mov
clc
mov
mov
adc
test
push
jbe
mov
out
ret
push
test
lcall
xor
pusha
ss
mov
cmp
mov
xchg
adc
push
sbb
outsb
adc
inc
rcrb
push
or
add
pop
out
lods
inc
adc
or
fadd
js
sbb
sbb
push
mov
or
mov
faddl
mov
add
sbb
mov
push
mulb
popa
sub
fdivs
test
je
push
mov
add
aam
stos
adc
and
cwtl
mov
dec
sub
leave
mov
or
popa
adc
out
sbb
push
fdivrp
scas
cmpsb
xor
adc
pusha
pop
mov
or
fadds
add
sub
scas
add
add
dec
int
repnz
mov
mov
jo
adc
pop
push
sbb
jo
or
pop
fimuls
int3
ret
or
xchg
and
fcoms
push
mov
clc
mov
adc
andb
push
sub
test
push
sbb
mov
adc
shlb
insb
out
sub
fcom
add
mov
pop
push
lock
pop
lods
in
inc
orl
xor
dec
add
sbb
or
xor
adc
and
add
inc
dec
pop
push
adc
mov
cwtl
jo
cmpsb
pusha
jle
adc
fisubrl
sbb
mov
lock
adc
gs
fmul
jo
sbb
sbb
and
inc
lcall
sbb
and
fs
call
and
movsb
loop
mov
and
clc
mov
and
mov
outsb
cmpb
addb
add
pushf
xchg
xchg
or
test
fcoms
es
mov
outsb
or
ficomps
xor
add
pusha
push
and
orb
mov
rcrb
sub
xchg
jne
and
ret
or
push
or
or
lcall
mov
and
clc
in
cmp
mov
add
int3
lock
lods
add
nop
test
mulb
dec
and
cs
hlt
mov
pop
nop
or
and
add
inc
push
dec
cmp
clc
inc
inc
pop
pop
subl
outsb
or
and
dec
xor
add
push
adc
lock
add
adc
lods
inc
pop
dec
scas
push
test
and
outsb
dec
adc
jbe
dec
fs
sbb
lcall
adc
ret
adc
mov
or
or
mulb
mov
and
add
mov
mov
mov
adc
ret
push
rolb
push
pop
sub
fmull
js
loop
int3
adcb
mov
jno
xchg
ret
or
push
jbe
add
int3
int3
adc
xchg
mov
pusha
jb
adc
cmpsb
xor
loopne
lods
and
data16
or
test
adc
sub
inc
push
test
jle
mov
clc
sub
adc
clc
pop
or
loope
sub
mov
xchg
add
jle
ss
push
pusha
js
outsb
xchg
inc
add
and
movsb
bound
je
bound
rorl
dec
mov
loop
test
xchg
adc
push
mov
push
mov
mov
dec
bound
adc
clc
pop
hlt
sub
mov
jb
es
inc
mov
xor
sahf
scas
dec
sbb
mov
insb
or
and
jp
pop
mov
dec
mov
cmpsb
adc
inc
inc
mov
aam
sbb
and
push
sub
or
bound
enter
fidivl
jbe
rorl
sarb
subl
dec
lock
les
js
dec
lods
push
test
push
pop
mov
shlb
fdivrp
rolb
sahf
enter
dec
sbb
add
fdivrs
lock
ret
sub
sub
inc
ret
test
mov
mov
addb
dec
cs
or
cwtl
sub
fs
add
int3
add
dec
add
cli
les
xor
out
test
or
pusha
add
movsb
lock
mov
les
push
cmp
dec
cmp
outsb
shrl
int3
mov
xor
inc
outsb
adc
xchg
loope
ljmp
push
adc
lock
or
loopne
cltd
add
or
sbb
sbb
rorl
or
aam
movsb
fcoms
lcall
and
sub
and
xor
push
jbe
scas
inc
test
lock
pusha
push
xchg
clc
movsb
ljmp
or
pop
dec
add
int3
add
fsubrl
pop
and
jmp
xor
inc
and
dec
cli
jbe
or
test
fsubrs
adcl
push
aaa
shlb
adc
out
xorb
xor
sub
rorb
sub
add
or
pop
sub
js
inc
mov
xor
int3
mov
add
lods
or
pop
xor
jo
pop
xor
sub
cmp
insb
and
inc
dec
fwait
pushf
pop
push
pusha
call
in
hlt
sbb
or
push
lea
stos
outsb
push
jo
dec
js
or
xchg
orb
cmp
add
xorl
add
and
pop
arpl
sbb
adc
rorb
push
addb
and
push
dec
lock
out
lcall
xchg
mov
fimuls
xor
sub
sub
dec
xchg
inc
out
and
je
popa
xchg
adc
add
and
jb
pop
and
or
and
fs
pop
or
sub
es
fs
push
or
or
outsb
rolb
ret
add
addb
add
test
sub
int3
les
mov
sub
xor
ret
int3
call
in
outsb
es
sub
movsb
pop
mulb
andl
jb
xchg
cmp
pushf
out
insb
adc
and
add
rcr
add
popa
cmpsb
dec
push
inc
add
dec
hlt
mov
pop
xchg
cld
xor
rolb
orl
nop
sbb
jp
pop
xchg
lods
or
push
inc
dec
dec
cwtl
cwtl
xor
mov
mov
add
inc
adc
push
sbb
ret
aam
ret
cmpsb
and
mov
ljmp
add
sbbl
sahf
lret
push
fcompl
shlb
daa
mov
dec
loope
and
outsb
add
xor
add
in
xchg
mov
sub
stos
and
inc
and
les
andl
mov
clc
jbe
xchg
or
inc
sub
inc
aaa
loopne
scas
dec
js
sahf
push
adc
mov
push
shlb
mov
js
adc
cmp
les
int3
cli
adc
cs
clc
lcall
adc
add
xchg
stos
popa
dec
or
pop
test
xorb
push
pop
cmpl
les
adc
mov
mov
into
movsb
and
fsubrs
dec
popa
xchg
rclb
and
into
repnz
icebp
adc
andb
cltd
dec
push
inc
je
adc
push
dec
test
loop
mov
sub
jo
repnz
inc
or
push
xor
stos
in
xor
mov
or
cmp
sbbb
jbe
and
scas
xchg
or
shlb
push
xchg
sbb
dec
outsb
shrb
sbb
adc
push
or
rorb
push
add
out
or
loop
sbbb
push
sbbb
aam
ret
and
fsubrl
jmp
inc
cli
adc
js
es
jbe
ss
in
pop
pushf
nop
lret
in
cmp
pop
loopne
push
cwtl
or
add
push
mov
clc
adc
xor
mov
mov
leave
shl
sbb
add
sub
add
rolb
dec
mov
push
or
inc
add
ss
sbbb
roll
sub
lock
adc
ss
sub
xor
dec
sub
js
adc
push
add
mov
add
add
dec
loope
movsb
loop
cmp
es
xchg
mov
nop
mov
mov
push
mov
push
push
dec
incb
bound
cwtl
sub
add
rolb
and
xchg
add
and
sbb
pop
push
or
addb
mov
sbb
sub
movsb
adc
stos
dec
call
sbb
dec
mov
adc
xor
inc
mov
loop
test
test
lods
pop
test
push
sbb
and
test
sbb
lcall
pop
repnz
sub
cmp
rclb
ret
popa
or
and
cmp
aam
pop
inc
pop
add
or
add
sbbb
and
sub
hlt
aam
dec
add
hlt
and
and
loop
data16
pop
lock
add
jbe
outsb
adc
add
clc
into
adc
lock
xchg
rclb
add
inc
outsb
and
je
push
data16
adc
inc
push
shl
xchg
sbb
or
jo
push
adc
addb
fdivs
lcall
test
sub
add
stos
inc
xor
or
mov
jae
inc
sbb
push
bound
aam
cmp
inc
xchg
sbb
and
shlb
mov
adc
mov
pushf
xor
nop
sub
rorb
sbb
clc
enter
test
jb
jb
or
inc
xadd
sub
shrl
adc
sub
roll
rol
test
xchg
inc
sbbb
dec
cwtl
add
adc
dec
and
and
sub
nop
push
andb
enter
or
nop
dec
incb
es
xor
bound
dec
call
lock
loop
push
aad
sub
int
in
cwtl
inc
mov
call
cltd
jo
jle
lods
and
add
rclb
xor
jle
add
dec
data16
test
adc
cwtl
rcrb
not
lock
add
clc
cs
loop
push
push
dec
cwtl
aad
dec
mov
lock
adc
or
mov
cs
rcr
and
adc
and
sub
push
xchg
fadd
jo
and
cbtw
andb
je
inc
popa
xchg
mov
ljmp
push
add
or
inc
mov
sub
clc
adc
cmp
add
sbb
sbb
push
test
es
inc
mov
or
js
mov
adc
decl
les
cltd
pushf
and
push
les
sbb
and
add
xor
clc
and
leave
add
adcb
pop
dec
in
sbb
rcll
inc
fs
or
es
push
xchg
insb
and
fs
je
push
addb
pop
daa
hlt
rorb
lock
movsb
ret
mov
add
sub
xchg
orb
push
dec
cmova
leave
jo
test
sbb
adc
loopne
add
les
or
and
jle
sbb
jecxz
sbb
int3
jle
subl
add
push
mov
add
or
jbe,pt
incb
jp
out
dec
or
loope
lods
xchg
les
push
mov
add
call
cmpsb
jb
test
andb
mov
adc
les
add
sbb
addl
adc
dec
rclb
add
lods
cmp
sbb
insb
xor
cmp
or
mov
out
bound
add
out
lcall
lods
add
movb
add
adc
lcall
stos
adc
cs
pop
mov
sbb
adc
pop
cmpsb
push
add
lea
addb
adc
adc
ljmp
push
sbb
fiadds
mov
int3
pusha
xor
fimull
jbe
lods
inc
sub
test
inc
push
push
mov
in
inc
icebp
mov
enter
xchg
dec
rcr
faddl
loop
push
cmp
into
add
mov
jmp
push
test
loop
inc
cmp
xor
mov
test
sub
xor
ret
adc
fcmovbe
popaw
push
push
adc
lock
jecxz
mov
jae
mov
shrb
inc
popa
and
lcall
pop
add
enter
in
adc
sub
rolb
add
push
or
andl
movb
add
data16
mov
and
into
movsb
imulb
cli
dec
or
aam
inc
push
or
cmp
adc
cli
jle
mul
adc
mov
aam
mov
inc
movsb
fsub
xchg
js
jo
je
inc
mov
lods
lret
xchg
or
sub
adc
jo
push
add
aam
jo
pushf
adc
push
jo
js
test
orb
add
mov
adc
clc
nop
add
xchg
adc
cmp
clc
cs
adc
enter
add
and
cwtl
pop
outsb
mov
xor
into
cwtl
and
jecxz
shrl
loop
add
pop
pop
or
lods
inc
adc
je
enter
mov
mov
mov
or
and
sbb
add
js
or
les
cmp
test
or
add
enter
dec
sub
xor
and
push
pop
sbb
cmp
or
ret
cwtl
and
add
push
jb
or
xchg
pop
pushf
jne
adc
or
mov
dec
or
into
js
xchg
xor
sub
aad
mov
notb
and
jmp
pusha
mov
add
inc
cmpsb
lods
dec
add
in
cmpsb
add
dec
sub
or
shlb
push
dec
cmp
movsb
jle
or
push
cmpsb
lods
sub
dec
and
or
mov
fs
imul
mov
mov
lret
mov
dec
fs
adc
push
call
push
inc
and
stos
sbb
cmp
rclb
xchg
or
xchg
mov
imul
dec
mov
pop
push
xchg
mov
hlt
dec
and
push
cltd
sbb
stos
inc
lock
shll
ljmp
call
xchg
sub
or
cmpsb
xor
mov
jo
and
adc
add
xchg
sub
add
pop
mov
in
leave
xor
push
and
push
xchg
test
jl
cmpsl
or
pusha
cmp
push
test
pop
push
dec
inc
sub
cmpsb
or
or
xchg
pop
add
cwtl
movsb
push
push
subl
adc
je
push
pop
push
loopne
nop
dec
in
jle
jl
ret
and
fidivl
lds
add
in
sbbb
pusha
cmpsb
xchg
mov
dec
and
jbe
inc
movsl
aam
fsubrs
or
loopne
mov
or
cmp
push
sbb
or
xor
mov
mov
int3
clc
lcall
popa
xor
lret
and
outsb
pop
movsl
mov
inc
add
andb
inc
add
adc
inc
inc
or
fcoms
sub
bound
inc
outsb
orb
and
jb
mov
sbb
sbbb
cmp
adc
add
add
add
stos
inc
xor
adc
add
orb
add
pop
sub
dec
in
push
jo,pt
push
pop
pushl
insb
push
inc
xchg
cwtl
inc
cmp
or
js
decl
inc
sbb
je
adc
mov
push
add
outsb
cs
cli
mov
inc
or
addb
dec
clc
xchg
addl
push
push
pop
orl
and
push
cmpb
sahf
and
pop
mov
xor
cs
adc
mov
add
fiaddl
add
sbb
mov
cmp
mov
cli
push
fidivs
cmp
dec
pop
xchg
leave
dec
sbb
mov
add
push
incl
and
mov
dec
add
mov
or
cwtl
ficoml
addb
and
lea
pop
js
or
pop
mov
syscall
xchg
fsubr
outsb
fimull
ds
mov
or
and
mov
mov
adc
xor
lock
loopne
push
cmp
dec
cmp
or
or
jne
add
dec
test
clc
mov
incb
pop
repnz
fs
xchg
and
dec
sbb
ret
inc
ret
dec
sahf
loop
or
test
xor
add
pushf
xchg
ret
add
into
inc
and
clc
xchg
jo
es
push
adc
cmp
dec
gs
cs
xchg
push
add
nop
and
in
and
and
clc
and
or
adc
fiadds
mov
add
inc
and
out
cltd
jmp
add
mov
or
mov
pop
outsb
jo
jo
leave
jo
jbe
sub
lea
mov
add
sahf
sbb
or
adc
xor
popa
test
dec
in
js
movsb
adc
je
add
sbb
add
mov
adc
push
sbbl
push
inc
aaa
pusha
add
les
jb
xor
jp
nop
add
ret
dec
push
mov
and
out
mov
je
push
add
adcb
incb
shrl
and
lcall
aad
inc
or
inc
add
mov
or
or
testb
inc
setne
inc
mulb
addl
stos
not
outsb
xchg
cmp
adc
outsb
inc
and
pusha
out
mov
xchg
mov
aam
sub
shlb
negb
inc
mov
xchg
cmp
inc
leave
and
outsb
jo
sbb
cld
scas
or
xor
pop
int
xchg
push
push
lods
mov
inc
cli
xor
icebp
test
push
or
lods
lock
and
xchg
inc
add
xchg
push
add
push
movsb
movsb
dec
nop
dec
dec
push
mov
lods
in
push
adc
and
adc
xor
call
pop
xor
loopne
add
pusha
push
or
ret
adc
movsl
push
loope
js
ljmp
sub
dec
xor
pop
stos
mov
inc
popa
sub
inc
ret
dec
mov
call
jp
or
xor
jb
int3
popf
pop
xor
ret
pop
nop
mov
push
add
lods
cli
loop
and
inc
sbb
addb
xor
pushf
xchg
sub
xor
pushf
push
cs
add
clc
xchg
adc
cld
dec
sub
clc
in
sub
add
inc
in
loop
es
push
insb
or
or
dec
xor
decb
jb
orb
sbb
int3
add
inc
rol
cmp
and
or
aam
sub
stos
ds
lret
xor
inc
dec
or
add
jo
movsl
ds
mov
inc
xchg
jbe
and
jle
lea
sub
mov
and
js
cli
inc
push
inc
pop
sub
push
inc
outsb
enter
adcl
jno
ret
sbb
or
shrb
pop
push
push
add
mov
add
mov
xchg
insl
or
mov
jnp
push
push
or
push
jnp
jg
and
btc
add
or
or
push
add
dec
pusha
adc
fstpt
imul
dec
mov
add
dec
leave
ret
cmp
xor
jns
ss
ja
fucomip
inc
mov
mov
lret
lcall
hlt
or
xchg
and
mov
or
push
jb
aam
test
jmp
xor
mov
je
sbb
neg
or
sub
dec
inc
inc
rclb
sbbl
push
movb
inc
mov
cmpsb
dec
test
cmp
add
ss
jne
inc
inc
nop
dec
out
xor
mov
add
addl
dec
inc
mov
fmuls
inc
in
out
loopne
mov
sbb
loop
repz
rolb
mov
imul
inc
ret
mov
scas
out
or
mov
mov
inc
faddl
stos
cmpl
inc
sbb
daa
xchg
cs
cmp
in
sti
loopne
roll
cmp
push
sbb
jle
fcompl
shll
xorl
fwait
test
mov
test
aas
jnp
jae
add
inc
aas
icebp
ljmp
jns
sub
mov
mov
fmull
xor
rcrb
std
push
mov
aaa
push
or
rclb
fdiv
sub
iret
or
jmp
test
es
adc
mov
stc
out
and
push
aaa
dec
aad
orb
leave
and
push
push
pop
icebp
jl
repz
fdivrl
cwtl
std
clc
push
sub
or
imul
adc
jp
push
out
mov
fisttpll
fsubl
dec
adc
mov
sub
fstps
jns
lcall
pop
fcompl
popf
daa
inc
sbb
add
add
xchg
mov
repnz
xchg
ss
jo
or
sbb
add
adc
insl
xchg
sbb
daa
add
popa
faddl
xchg
pop
jl
hlt
fdivl
sti
lods
inc
fmull
ret
fidivrl
enter
and
lahf
aas
or
mov
ja
pop
pop
jg
jno
sub
fwait
pop
pop
outsb
fsubl
jnp
xor
outsl
fdivl
sub
popf
cmpsl
mov
and
inc
sbb
pop
clc
lds
cwtl
daa
js
incl
leave
fdivrl
sbb
mov
mov
adc
ret
int
imul
mov
jns
mov
aaa
sub
push
orb
es
lahf
xchg
cld
insb
sbb
adc
mov
xorl
int3
jns
pop
jle
jb
loop
enter
jo
int
addr16
rorb
ficoms
push
mov
aaa
js
sub
inc
fdivrl
jnp
idivb
mov
fsubl
mov
and
sub
in
cmp
add
mov
mov
or
inc
fadd
sbb
add
fprem
shlb
fstps
jmp
mov
test
xor
popf
mov
outsb
jae
les
pop
cld
negb
cmp
dec
jns
sub
addr16
aaa
cmp
jl
mov
mov
xchg
imul
sub
js,pt
mov
rcl
push
lcall
dec
mov
out
mov
pop
inc
inc
sub
mov
mov
and
test
and
cmpsb
inc
in
pop
pushf
mov
jo
cmpsb
int
add
cld
out
push
xor
in
lret
mov
jg
push
cmp
inc
mov
cld
cmp
lcall
aas
fdivl
out
mov
jno
sbb
outsb
adc
xor
jne
lea
pop
or
ljmp
cmp
ljmp
cmpsb
push
orl
pop
sbb
cltd
push
ss
lcall
push
rcrl
mov
lods
cmp
jne
stos
jne
enter
loopne
into
loop
loop
ds
mov
mov
fsubr
fdivl
lock
add
mov
or
mov
ffree
or
sub
mov
cmp
add
out
adc
push
and
sti
test
mov
push
cmp
loopne
outsl
xor
popf
insb
inc
xlat
aaa
fdiv
lret
adc
ret
cmp
popf
es
add
jecxz
sbbl
std
addb
or
pop
test
mov
or
je
push
jp
filds
popa
or
rorb
and
or
loopne
leave
adc
pop
pop
jae
pusha
xor
add
cwtl
lods
test
lds
cmpsl
xchg
outsl
jp
push
je
cmp
add
clc
fcoml
pop
cmpsl
xchg
mov
inc
xchg
rclb
xchg
shlb
incb
dec
sbb
mov
rol
push
push
loope
pushf
fdivl
jl
sbb
stos
cmp
rcll
shll
jp
test
and
jmp
mov
adc
xor
sar
test
aad
cmp
jle
imul
xor
gs
fmull
sbb
or
sbb
xlat
insb
lcall
lock
jns
cmp
cwtl
das
sti
push
stc
lock
pop
divb
xchg
mov
push
aad
fstpt
aas
xor
xchg
pusha
add
shl
popa
fdivs
mov
shr
daa
push
faddl
lcall
mov
dec
fmul
data16
pop
sbb
divl
ret
mov
sar
and
mov
sbb
repz
push
adc
push
or
int3
sub
adc
sbb
jbe
add
out
repnz
popa
pushf
dec
lcall
subl
pop
xchg
add
sub
das
or
pop
push
pop
faddl
mov
rcrb
popf
adc
lock
adc
das
fidivl
popa
ret
out
sub
shl
addr16
or
inc
aam
mov
mov
fdivs
fwait
pop
cmpsl
cmp
mov
out
in
xchg
call
jmp
and
clc
or
or
xor
mov
fsubr
cmc
std
push
bound
mov
sub
cltd
cmpsb
iret
gs
lods
stos
out
enter
in
xor
testb
test
push
push
xlat
int
out
fisubrl
jp
xchg
cmpsl
lds
clc
sahf
loope
cmp
add
xor
push
inc
or
jle
lods
pushf
xchg
aam
imul
pop
dec
test
aas
and
sti
ds
push
mov
sub
mov
dec
sub
pop
jp
xor
shrl
jbe
inc
dec
push
ret
fwait
mov
decl
dec
jbe
out
jbe
push
outsl
inc
dec
mov
dec
inc
push
add
fimuls
cli
add
push
aaa
dec
mov
decl
lret
sub
lea
push
push
lea
fildll
in
push
mov
or
push
repnz
jbe
fld
mov
scas
jne
pop
fsubrl
testb
insl
cltd
xchg
flds
xor
mov
ss
jmp
mov
loop
outsl
mov
mov
xor
jnp
mov
cmp
push
mov
repz
in
mov
xor
jnp,pn
dec
ljmp
popf
das
pushf
fstp
sub
in
mov
stos
cmp
and
shlb
sub
fadds
pop
and
sbb
icebp
sub
mov
xor
inc
mov
sti
xor
iret
inc
cmp
stos
dec
and
xor
and
mov
dec
mov
xchg
xor
and
fadds
repz
scas
jns
cs
je
icebp
mov
test
rcl
cmp
add
mov
add
loope
dec
and
popa
or
mov
cwtl
int3
xor
fstpl
push
dec
jmp
ss
jg
adc
mov
mov
xchg
mov
lret
popa
dec
inc
mov
add
cwtl
jno
sub
in
loop
push
mov
push
xchg
dec
cmp
jb
pop
cmpb
sarl
push
mov
push
jbe
add
call
out
daa
pop
sbb
xchg
div
sub
and
lea
cwtl
mov
emms
pop
add
rorb
mov
mov
adc
pop
inc
xlat
notb
lock
jmp
jl
mov
xchg
lds
jmp
push
cli
clc
loop
andl
test
mov
mov
stc
add
mov
enter
add
mov
dec
shrb
mov
jns
and
pop
in
inc
in
jnp
jl
jno
inc
lea
xchg
mov
pop
lods
push
inc
std
aam
or
repz
ss
imul
repnz
leave
sub
jae
xchg
scas
push
scas
xor
fdivr
ss
call
pop
mov
inc
addl
push
pop
in
or
push
pushf
pop
jmp
mov
popa
test
bound
pop
sub
sbb
cwtl
adc
mov
enter
fwait
daa
inc
xchg
pop
jbe
mov
insb
mov
sbb
shr
lret
shrl
push
or
mov
lcall
cmpsl
loope
test
out
iret
pop
sub
imulb
cli
loope
inc
cli
lea
rol
repz
pop
cmpsb
in
and
push
lcall
mov
cmp
xchg
mov
push
sbb
xchg
dec
xor
adc
fsubs
add
fnsave
iret
gs
mov
rsqrtps
cmp
prefetchwt1
test
add
sbb
or
call
fcoml
cmpsl
pop
cmp
mov
cmovo
rol
add
inc
orl
add
adc
fstpl
pop
pop
and
cltd
mov
pop
xorl
clc
fbstp
and
inc
mov
push
pop
adc
push
dec
ds
jl
mov
aam
jns
push
sbb
out
clc
inc
and
fcmovne
dec
mov
loope
or
mov
add
je
xor
imul
movsl
jnp
gs
dec
cmpsl
cmp
pop
or
in
pusha
mov
pop
orl
or
in
inc
mov
sbb
mov
xor
xchg
push
add
mov
out
add
rorl
add
stc
add
push
push
push
mov
outsb
xor
dec
add
adc
popa
add
jmp
dec
pop
mov
inc
sub
mov
ret
dec
sub
in
push
dec
inc
dec
add
add
push
xor
xor
add
add
pop
bound
inc
dec
xor
mov
divb
int
pusha
pop
aas
mov
add
dec
push
xchg
addr16
outsb
inc
inc
push
dec
mov
xorl
leave
ret
xchg
jbe
loopne
cmp
pop
fisubl
cmp
clc
cmp
int3
in
test
rcr
pop
xor
mov
push
mov
push
xlat
jnp
testl
imul
mov
in
cmpb
xchg
movb
jns
xor
xor
testb
jl
jge
push
or
movsb
aas
sbb
jnp
addl
aas
mov
mov
mov
cmpsb
pop
sti
and
xor
test
in
ljmp
or
dec
xchg
mov
sub
scas
pop
xor
or
add
rclb
mov
jnp
dec
int
sub
xchg
inc
rcll
xor
lock
enter
cmc
jle
repnz
faddl
sbb
shlb
pop
jno
fdivrl
in
imul
and
stos
cmp
loopne
or
les
cmp
or
push
movl
cmpsl
push
xor
lods
dec
in
mov
cvtpi2ps
add
pop
pop
push
jno
mov
outsl
push
loope
daa
pop
lock
add
mov
add
jl
insl
push
pusha
adc
adc
in
jmp
inc
sub
mov
mov
and
in
pushl
cwtl
or
scas
out
mov
and
aas
paddusb
mov
mov
cmp
jge
and
add
nop
sub
aas
pop
inc
insb
mov
es
and
push
mov
rclb
and
pop
cmp
jmp
icebp
cmp
cmp
jb
xor
lret
adc
adc
fsubl
xchg
dec
test
mov
cltd
jne
pop
shr
dec
test
xchg
jmp
dec
dec
rcrl
mov
wrmsr
mov
loope
lahf
fcmovnbe
mov
mov
cltd
adc
mov
arpl
xorl
std
lret
inc
pop
push
or
push
insl
stc
xchg
pop
imul
and
push
adc
add
data16
or
imulb
jge
je
cmp
mov
hlt
daa
cmp
or
popf
mov
mov
sysret
fcomps
cmp
cmp
aad
std
int3
mov
or
inc
xor
pop
imul
push
dec
test
pop
sub
cmpsl
fisubs
sbb
popa
or
push
inc
and
jnp
sbb
or
nop
outsb
dec
movsl
push
xor
test
sub
push
fisttpl
lods
adc
imul
enter
aad
stos
mov
cmc
frndint
cmp
fdivrl
stc
dec
sbb
ficoml
subl
adc
adc
push
pop
sbb
sarl
push
mov
or
enter
or
aaa
pop
pop
add
mov
mov
xlat
sbbl
add
imul
push
nop
outsl
add
bound
adcb
sub
int
jle
and
mov
dec
mov
mov
pop
sbb
and
mov
into
xor
xor
inc
pop
repz
cmp
test
pop
sbb
inc
mov
lods
push
in
cmp
push
in
xchg
and
add
cmp
adcb
add
sbb
mov
mov
dec
cmp
je
sbbl
imul
pop
cmp
in
out
je
mov
push
call
add
hlt
enter
inc
mov
inc
add
ja
inc
jne
inc
lret
je
inc
add
ljmp
add
inc
clc
push
pushl
clc
scas
icebp
lods
test
lahf
or
add
jmp
dec
outsb
mov
dec
mov
pushf
dec
inc
add
std
imul
repnz
aam
popa
ss
mov
inc
dec
add
jae
mov
icebp
push
fwait
mov
mov
sub
add
or
cwtl
mov
jno
inc
and
push
jb
xchg
lods
jge
jl
jae
push
inc
mov
mov
inc
fsubs
out
inc
mov
push
xor
mov
outsb
pop
fs
dec
imul
and
adc
inc
mov
xchg
notl
ljmp
jo
imul
xor
dec
addl
pop
push
add
filds
arpl
lods
jb
add
in
cmpb
movsb
sub
repz
push
push
testl
add
rcr
cwtl
pop
mov
sbb
push
push
loopne
push
in
mov
add
jbe
sar
inc
dec
sub
pop
scas
dec
push
sbb
gs
pop
or
lcall
dec
mov
inc
jb
jecxz
inc
pop
popa
or
sub
add
dec
jo
push
xchg
fmull
dec
xchg
sbb
xor
arpl
xchg
push
push
int3
fsubp
jmp
dec
mov
insb
adcb
lret
gs
out
dec
xor
mov
mov
inc
dec
fildl
icebp
pop
clc
ja
dec
pusha
push
addr16
lds
ja
xchg
clc
dec
dec
imul
pop
dec
push
bound
push
inc
pop
jl
push
jne
inc
ret
aaa
pop
mov
ja
iret
cmp
mov
es
lds
into
dec
add
pushf
inc
addr16
inc
stc
jl
sti
cwtl
ret
dec
push
rcr
cltd
ja
out
ja
jne
testb
pop
lock
and
cmp
add
pop
inc
add
icebp
or
jmp
jae
push
push
dec
mov
daa
lret
in
into
in
adc
jo
dec
dec
subb
cmpps
fs
imul
js
ret
bound
and
dec
mov
add
repz
addr16
jnp
sbb
enter
jge
mov
inc
in
add
sub
inc
add
mov
cmp
shll
mov
insl
xor
in
push
shrl
clc
out
adc
pushf
addl
xchg
pop
out
aaa
fsubs
mov
addr16
je
push
inc
pop
dec
push
dec
mov
rolb
outsb
popa
push
cmpsb
dec
pop
fcomps
cli
repnz
push
push
push
iret
inc
shlb
inc
jmp
xor
ficoml
stos
sbb
adc
push
jmp
mov
adc
iret
fcmovu
popa
add
mov
in
icebp
lahf
dec
dec
xor
imul
fisubl
jmp
jne
inc
dec
inc
ja
jge
pop
es
fidivrl
mov
add
push
pusha
cld
xor
cld
push
push
ret
jns
ret
jnp
dec
sarl
sarb
mov
lods
rorl
jae
iret
dec
adc
cmp
xor
cmp
shll
sbb
std
repnz
jmp
push
roll
push
sbb
jo
in
xorb
or
dec
popa
inc
js
jnp
fildll
or
fmul
mov
ds
pop
dec
dec
inc
imul
mov
push
icebp
mov
dec
xor
enter
inc
dec
outsb
mov
call
arpl
cld
pop
icebp
xlat
mov
dec
inc
outsb
addr16
inc
add
dec
or
jne
inc
pop
pop
in
loopne
out
push
imul
inc
add
lock
fucomp
push
or
enter
fstl
push
outsb
xchg
dec
mov
dec
dec
xor
test
mov
jl
push
xchg
push
mov
push
sti
shlb
push
inc
push
push
aad
fmul
stc
dec
dec
es
pop
push
xchg
xchg
orb
dec
push
push
lock
mov
inc
insb
aas
xor
js
fdivs
cmpsb
push
dec
dec
pusha
shrl
dec
cmp
in
or
inc
rolb
xchg
mov
or
insl
insb
xor
jno
or
mov
dec
dec
insb
addr16
mov
rorl
push
push
jp
repnz
dec
mov
mov
mov
mov
lods
fisubrl
dec
icebp
sbb
and
inc
mov
sub
pusha
add
lds
add
add
in
add
sub
sub
and
jbe
pop
xchg
and
vphadduwq
popl
mov
xor
add
out
mov
lds
fmull
rorb
push
jb
and
sbb
cmp
mov
subl
pop
jp
fisttpl
scas
xchg
jmp
dec
mov
fimull
adc
cmpsb
pusha
add
push
and
int3
dec
jecxz
xchg
dec
rcrb
rcll
scas
loop
dec
fistpll
pop
sbb
mov
test
lds
fcoml
mov
pop
dec
xlat
add
sub
pop
lea
mov
addr16
add
call
pop
les
test
jp
orb
xchg
mov
push
arpl
insl
test
add
mov
orb
adc
notl
xor
fadds
xchg
add
pop
mov
sbb
jnp
dec
add
cwtl
pop
imul
pop
jmp
add
pop
jne
and
add
xor
add
push
add
and
mov
inc
popl
sbbl
incl
leave
fsubl
ret
jne
xor
iret
add
mov
sub
ret
into
add
aam
inc
push
push
dec
ss
ret
fcomip
ja
push
push
fs
inc
mov
dec
fmulp
add
dec
mov
inc
xor
cmp
loopne
inc
roll
lock
shlb
jmp
push
push
add
push
dec
repnz
loopne
ficoml
inc
dec
fisttpl
jo
push
add
mov
js
inc
faddl
addr16
lods
sarb
es
ss
push
mov
dec
out
sbb
or
bound
fisubs
ret
push
shrl
dec
dec
add
sub
outsb
inc
mov
daa
ret
jge
in
mov
jg
loop
scas
dec
decb
adc
incb
adc
out
repz
xor
insb
push
dec
je
inc
fistpl
rcrb
cmp
or
mov
xor
pop
movl
jae
shll
sub
es
mov
adc
xlat
jno
push
je
jge
dec
mov
jo
inc
push
pushf
pop
jecxz
mov
pop
xchg
xlat
in
xchg
icebp
mov
mov
adc
push
outsl
fisubrl
xor
sub
mov
inc
movsl
push
popa
push
dec
inc
jg
cld
dec
les
clc
adc
fcompl
clc
sub
cmp
fisttpll
pop
loop
inc
xor
mov
pop
or
bound
and
add
inc
dec
lcall
xor
add
popf
jno
cltd
dec
test
push
imul
push
sldt
push
xchg
cmp
bound
jne
mov
bound
loop
xor
jns
cmp
ds
and
js
rcrl
and
and
sub
scas
or
pop
xor
mov
test
ret
sahf
sahf
pop
fldt
add
ficoms
out
jno
sbb
dec
adc
clc
pop
sub
das
rcl
inc
xchg
inc
cmp
pop
into
nop
xchg
ror
push
mov
hlt
inc
sbbl
cmp
je
dec
out
inc
std
scas
les
loop
out
sbb
shrl
inc
scas
insb
jb
mov
mov
xorl
test
mov
mov
mov
leave
ljmp
and
or
pusha
push
sti
push
lret
rolb
arpl
pusha
push
or
addr16
add
pop
pop
adc
stos
icebp
mov
mov
jecxz
add
push
cmp
mov
xchg
mov
lock
ret
je
addb
mov
mov
jbe
mov
decl
jmp
dec
imul
imul
mov
fldl
jmp
xor
adc
and
push
dec
les
int3
push
mov
loop
push
shr
add
dec
pop
stc
push
pop
jo
addr16
js
mov
adc
movsb
inc
mov
lock
mov
add
jmp
jo
cmpsb
pop
pop
mov
lods
shlb
nop
jecxz
sbb
out
mov
insb
or
mov
dec
cmp
push
mov
rclb
leave
xchg
sbb
sbb
cltd
test
fwait
test
mov
fwait
xor
imul
pop
lret
pop
push
xchg
cmp
mov
jo
test
sbb
and
jmp
add
sbb
lods
pop
fstp
adc
movsl
cmpsb
sti
aas
push
pushf
sbb
push
push
arpl
xchg
les
insb
dec
fdivl
gs
mov
data16
and
lds
nop
cmp
cs
cs
inc
cwtl
stos
and
loope
push
adc
cmp
fdivrl
jp
push
or
cwtl
inc
push
jg
popa
xorb
xchg
in
sarl
xchg
aaa
sbb
add
pushf
cmp
pusha
cmp
pop
pop
inc
loopne
sbb
and
jmp
out
ret
insb
es
sub
sbbl
mov
stos
pmaddwd
out
push
shll
ljmp
call
jae
dec
and
add
xor
cmp
pop
sub
pop
fwait
int3
push
arpl
fcomps
jge
fucomp
int3
mov
xor
push
daa
cmc
mov
fdivs
clc
inc
and
xor
pop
dec
repnz
jno
pop
loopne
in
xor
js
cmp
adc
rclb
push
rcrb
or
pop
add
jbe
mov
aad
xchg
clc
pop
pop
xlat
jne
ljmp
aad
push
lds
ret
adc
pop
mov
fldl
popa
add
push
ret
out
inc
icebp
loopne
lcall
add
insb
sahf
xchg
pcmpeqw
adc
out
test
or
scas
les
pop
clc
subl
inc
mov
xor
int
cmc
sbb
xchg
loop
lods
dec
fcomip
sbb
gs
or
jno
pop
pop
adc
xlat
in
enter
ds
jne
and
sahf
pop
ds
stc
lret
cmpsb
mov
arpl
outsl
adc
aaa
imul
xchg
add
push
popa
or
dec
push
push
jb
add
lds
push
jno
dec
mov
ret
inc
mov
jle
je
ljmp
inc
outsb
das
xchg
jle
out
inc
dec
add
inc
mov
inc
mov
dec
inc
mov
mov
dec
aaa
je
shrb
adc
push
inc
test
ficoml
test
dec
xor
fistpll
clc
out
pushl
push
ret
mov
inc
mov
inc
add
mov
mov
inc
mov
inc
add
rolb
test
xor
incl
add
dec
loopne
dec
jo
add
add
ds
mov
xchg
push
adc
stc
repz
popa
sbb
shlb
bound
rcrl
out
jns
push
mov
dec
dec
rolb
dec
insb
dec
add
fisubrl
add
icebp
or
jnp
adc
push
dec
ret
ss
loop
or
add
inc
sbb
addr16
sub
mov
and
data16
push
jb
arpl
jnp
mov
nop
dec
inc
jbe
or
dec
push
jno
mov
clc
push
push
scas
in
mov
push
push
scas
mov
sti
jb
lock
out
decb
push
push
or
shll
repz
sub
outsl
jae
dec
jl
and
xor
ja
push
mov
test
ret
jae
dec
sbb
scas
rcr
pop
fidivl
fiaddl
iret
pop
jp
pop
jb
jp
fs
or
jg
and
dec
adc
push
push
inc
fwait
push
push
outsb
jb
push
loopne
cmpsb
pushf
cwtl
jne
push
sbb
push
inc
add
pop
push
shlb
insl
add
mov
jo
add
js
mov
fsubl
or
pop
mov
dec
or
xchg
and
dec
cmpsl
loopne
xchg
push
dec
outsl
int3
push
mov
xchg
faddl
push
push
bound
in
ljmp
movsb
dec
ja
dec
addr16
sbb
jge
dec
outsb
arpl
jno
push
mov
insl
jo
cmp
arpl
data16
inc
inc
popa
mov
movl
mov
out
cli
inc
fldl
add
dec
sub
xlat
and
mov
xchg
lock
mov
add
xchg
cmp
xor
push
outsl
ret
jge
inc
adc
je
add
les
out
outsl
int
jl
pop
jo
bound
dec
jns
pop
aam
jge
push
pop
push
fmul
xchg
xchg
mov
roll
jns
mov
push
movsl
xchg
adc
ret
insb
dec
add
jge
push
push
pushf
dec
cli
pop
jp
push
inc
push
je
js
mov
repz
cld
sbb
popa
insl
dec
test
sbb
sbb
push
dec
pop
mov
aaa
or
ret
push
adc
push
lock
mov
dec
sahf
add
cmpsl
ret
mov
xor
and
imul
lcall
xchg
dec
pop
jl
sbb
movb
mov
dec
dec
xchg
js
pinsrw
out
popf
push
xor
pop
sbb
sbb
shl
sti
mov
and
adc
add
bound
push
xor
xchg
push
cmp
subl
adc
push
inc
xchg
jno
rorw
lret
cmp
inc
fisubrl
mov
pop
inc
pop
insb
and
cwtl
aad
pushw
jo
andb
ror
cmpb
shrl
mov
add
inc
add
out
inc
inc
sub
adc
aam
and
sbb
xchg
cltd
dec
jns
outsl
rorb
cmp
fimull
cmp
add
push
pop
dec
cmp
pop
scas
imul
xchg
pop
and
adcb
cld
rclb
outsl
dec
xor
fcmove
adc
add
bound
jbe
pop
les
xor
sub
sub
lods
mov
mov
shrb
jg
out
mov
mov
or
add
xchg
movsb
mov
lret
and
ja
loopne
xchg
and
sahf
inc
pushf
push
sbb
pop
pop
shll
lods
into
or
in
scas
jmp
test
adc
jae
movq
and
ljmp
inc
bound
icebp
adc
pop
shll
mov
jb
fldenv
mov
cmpsb
xchg
cwtl
mov
popa
loop
sbb
push
mov
inc
jne
shrb
xchg
fisttpl
aam
aad
fsubrp
es
xor
dec
clc
loope
push
xchg
jno
adc
mov
movsb
pop
sbb
xchg
mov
out
mov
pop
sbb
mov
inc
jge
rcl
jno
mov
inc
jp
jecxz
lret
es
push
or
pop
sub
je
and
xor
pushf
sub
push
inc
hlt
shrl
shl
mov
cltd
aaa
lods
and
push
and
sub
add
popa
ja
adc
fisubl
sub
in
pop
test
lods
fldt
jns
stc
cld
rorl
test
mov
or
add
icebp
fimull
push
jmp
shr
not
add
cli
push
and
cltd
setae
xor
subb
mov
xchg
js
add
sub
mov
je
inc
cwtl
call
inc
dec
loope
fwait
in
add
sbb
pop
mov
imul
push
push
cmc
push
jmp
rolb
push
test
mov
mov
in
clc
outsl
or
inc
mov
cmc
decb
jge
lock
jg
jp
sbb
jnp
icebp
jne
cmp
adc
push
push
pop
push
sbb
rcll
push
and
xchg
clc
cmp
je
stos
jbe
lds
clc
pop
add
jmp
inc
pop
out
fstpt
push
jge
xor
rcll
clc
xor
push
ficomps
mov
jnp
test
inc
ds
fldl
popa
ret
hlt
xchg
cmp
and
insb
mov
inc
adc
dec
adc
int3
into
cmp
pop
pop
jne
mov
in
arpl
stos
sahf
dec
orl
mov
movsl
sub
stos
scas
cmp
push
push
inc
xchg
pop
push
jmp
xchg
inc
mov
movsl
testl
and
mov
pop
sbb
sub
fsubrl
or
inc
pop
xor
sbb
movsb
mov
mov
cmp
cld
xor
and
inc
xor
test
sbb
xor
sarb
loop
in
int
std
push
jns
and
es
add
sub
push
pop
sbb
arpl
insl
cmp
inc
inc
in
or
adc
xchg
loope
xor
aas
shll
imul
aad
xor
int
adc
ret
and
or
mov
mov
mov
or
mov
data16
sbb
mov
popa
pop
sbb
call
dec
pop
icebp
adc
jo
ja
jbe
shr
lock
add
add
inc
das
xor
xchg
mov
mov
or
sub
popa
or
and
cs
mov
mov
mov
loope
xchg
push
in
fldenv
mov
out
sbb
loope
loope
inc
insl
cmp
loope
xchg
jp
fisttps
inc
lret
lea
jle
adc
adcb
xor
push
jnp
sub
loopne
fsincos
std
lods
xor
jbe
ja
push
xchg
jp
cmpb
or
adc
jno
xchg
les
testl
sar
popf
cmpsb
add
sub
mov
out
test
sub
sbb
adc
and
and
stos
mov
mov
ja
and
in
dec
lds
in
ret
aad
sub
stos
mov
push
outsb
popa
xor
pop
pusha
sar
add
lds
fstpl
inc
inc
xor
subl
fadd
dec
imul
mov
cs
push
cmpsl
push
nop
pop
lcall
cs
mov
sbb
stc
fdiv
aad
insl
orb
mov
dec
and
lods
fisubrl
loop
sub
push
and
mov
xchg
mov
inc
jb
and
jns
inc
xchg
adc
stos
inc
into
mov
add
cmp
inc
xorl
mov
sarb
add
sub
lods
adc
cltd
dec
cmc
or
repz
cmc
sbb
adc
pusha
movsl
aad
jl
mov
jl
in
push
les
in
test
call
cltd
add
faddl
or
pop
adc
adc
jge
jo
popa
lods
add
jb
testl
cs
sarl
dec
lods
inc
add
pop
movl
add
inc
xor
cmp
sbb
loopne
cltd
inc
loop
push
cmc
or
push
cmc
xchg
jb,pt
and
mov
push
add
adc
int
xor
add
push
hlt
scas
adc
test
sbb
mov
sub
les
cmpsb
fidivrl
pop
subl
ss
cmc
and
fisubl
mov
dec
fidivrl
xchg
ficoms
test
pushl
fprem
mov
dec
mov
mov
pop
or
cld
sub
push
je
jmp
ja
xor
ja
mov
ljmp
add
add
js
lar
fldenv
notl
inc
jecxz
or
idiv
add
adc
mov
add
xor
sub
lock
sbb
cld
mull
ret
ret
xor
mov
insl
inc
or
sub
lods
test
out
and
jge
lock
sti
mov
sub
jae
test
lret
add
dec
fiaddl
jno
test
adc
gs
dec
ljmp
jns
dec
imul
mov
fisubs
aaa
push
add
out
mov
data16
ret
add
outsb
fldt
add
jo
fwait
xchg
pop
add
cmp
add
lea
orl
xchg
jno
jecxz
stos
mov
inc
and
or
push
fisttpl
ss
xlat
es
loopne
mov
negb
xchg
add
jl
adc
sahf
jbe
inc
je
aad
imul
mov
ret
sbb
jo
adc
or
addl
xchg
fisttpll
pop
pop
scas
cmp
xchg
mov
imul
pop
movb
push
test
imul
pop
pop
push
and
push
mov
jmp
movsl
in
cmp
or
push
loopne
cmpsb
repnz
outsl
xchg
cli
fmull
test
adc
add
es
mov
call
std
add
mov
sub
ljmp
cmpsb
add
and
dec
xor
inc
bnd
sub
and
push
xchg
fisttpl
sub
xor
or
mov
sbb
xchg
or
les
and
arpl
inc
lahf
loop
shlb
inc
sbb
lcall
push
call
push
hlt
mov
sbb
fwait
adc
adc
xchg
roll
jge
adc
pusha
adc
loop
push
mov
xor
push
clc
aas
fnstenv
mov
js
stos
pop
push
inc
std
call
mov
mov
adc
sbb
xor
adc
dec
insl
mov
push
push
push
adc
jne
cli
and
negl
invd
gs
stos
outsb
jmp
push
push
mov
push
mov
fisttps
dec
add
int3
mov
lsl
push
jbe
mov
dec
dec
fildll
dec
inc
fmull
sub
lea
push
mov
movb
sahf
sbb
in
sub
int3
jmp
mov
dec
inc
push
imul
dec
jo
les
dec
insb
dec
dec
cli
add
imull
sbb
sub
jge
sub
std
push
dec
mov
shll
add
icebp
insl
imul
std
xchg
pop
or
mov
roll
xchg
int3
stos
or
push
sar
push
and
push
dec
jbe
dec
mov
mov
sub
ljmp
insl
pushf
je
addr16
nop
cwtl
shlb
mov
rcrb
mov
outsl
add
data16
xchg
lea
fcomip
lea
mov
jmp
stos
xor
add
inc
dec
pop
add
arpl
inc
gs
or
addr16
jno
dec
filds
cmp
push
fs
dec
add
out
sub
addr16
aaa
aam
mov
shrb
cmpsb
inc
loop
adc
inc
and
jae
xor
sub
jl
jo
jne
add
pushf
mov
mov
adc
sub
mov
dec
mov
insl
push
cld
xor
insl
filds
mov
inc
pop
stc
add
aam
xchg
xchg
rorb
sti
xchg
mov
push
add
gs
outsl
je
movsb
addb
jp
mov
lea
and
nop
push
lcall
dec
cld
inc
enter
mov
pop
inc
push
pop
mov
add
lahf
cmp
xor
jmp
ja
push
loop
jmp
xor
gs
daa
sub
cmp
adc
or
mov
pop
adc
loop
js
mov
inc
jno
addr16
sahf
rcrb
push
lea
dec
add
lcall
enter
aas
adc
xor
add
into
cmp
out
lock
inc
inc
add
inc
sbb
dec
enter
or
hlt
cmp
jo
push
bound
loopne
xor
shlb
adc
pusha
js
stos
rorb
std
sbb
cmp
jbe
imul
or
inc
out
xor
cmp
les
dec
inc
and
dec
jno
orb
inc
add
jp
push
iret
ret
ljmp
xchg
es
stc
fwait
out
mov
jmp
gs
and
ret
call
loopne
leave
loope
mov
push
xchg
add
addr16
inc
adc
xor
in
and
fs
std
clc
push
incb
out
mov
das
loop
dec
inc
lock
pop
iret
lods
adc
dec
call
je
jne
cli
inc
xor
jle
das
mov
jo
int3
loop
xchg
decb
test
fs
stos
pushf
inc
and
cmpsl
arpl
in
jns
or
pop
dec
add
sbb
xlat
add
negb
pop
or
ljmp
sub
in
andl
je
and
call
push
imul
ds
xor
inc
add
mov
int
lcall
pop
xchg
and
outsb
imul
jnp
push
fsubrl
fmull
ret
or
daa
cs
add
rcr
arpl
lahf
aam
cs
xor
mov
xchg
jg
cltd
cmp
jecxz
pop
dec
outsb
sbb
adc
test
mov
fldl
mov
sbb
push
bound
mov
in
mov
pop
test
jne
pop
add
aas
xor
mov
in
xchg
jne
sbb
into
imul
out
jmp
xchg
hlt
pushf
jge
movsl
add
xchg
sbb
subb
sub
mov
add
cmp
cwtl
mov
insb
push
push
test
hlt
outsl
xor
jb
cld
push
dec
and
aam
mov
pop
jecxz
movsb
mov
cmp
subl
adc
add
test
jbe
addl
push
mov
mov
mov
jp
add
divl
pop
add
in
or
enter
ret
and
xor
hlt
mov
loope
xchg
fstl
and
cmpsl
cmc
xor
cwtl
push
sub
cld
rclb
std
sub
dec
rcrl
lods
js
adc
punpckldq
shll
and
sub
adc
mov
mov
clc
and
scas
sub
scas
aad
outsl
into
sub
shlb
push
fiaddl
inc
loopne
pusha
jmp
lcall
and
dec
mov
cmpsl
clc
jb
mov
stos
scas
dec
js
xor
adc
imul
nopl
mov
scas
add
fistpl
push
push
jle
add
stos
hlt
xchg
xchg
jne
jecxz
sahf
sbb
dec
jecxz
fldl2t
mov
fwait
inc
test
packsswb
lods
xchg
mov
enter
imul
sub
pop
or
clc
pop
adc
les
dec
sbb
xor
push
pop
xchg
dec
test
pusha
dec
inc
dec
aam
test
and
xchg
lret
sahf
mov
repnz
gs
mov
push
and
dec
shlb
fbstp
dec
jle
scas
repz
decl
sar
and
gs
lods
sbb
pop
movsb
fistl
jnp
sbb
nop
arpl
push
je
pop
push
inc
inc
enter
inc
clc
cmp
das
push
jno
push
or
add
pop
mov
int
shll
add
add
push
pop
rcll
std
popa
shrl
push
nop
lock
and
jl
push
push
xlat
dec
pop
jo
nop
call
push
push
sbbl
pop
inc
mov
inc
or
sbb
test
rcll
mov
scas
and
cmp
sahf
fs
jo
sti
scas
mov
mov
xorb
sarl
cmp
aaa
test
inc
mov
movsb
sarl
pop
cmpsl
xchg
mov
sbb
and
jle
cmp
ret
xchg
adc
in
loope
fisttpl
outsb
stos
ret
out
arpl
dec
inc
cld
orb
and
fldenv
nop
inc
mov
sub
mov
lret
add
and
mov
ret
sbb
dec
or
sub
loop
pop
push
inc
cs
sbb
sub
mov
xchg
aaa
mov
inc
stos
hlt
sbb
mov
inc
adc
dec
insl
cld
add
add
loop
rclb
aam
dec
pushf
dec
mov
add
std
jge
dec
dec
outsl
arpl
shrb
out
jb
push
out
insb
imul
lret
orb
mov
push
jne
stos
sbb
fmul
outsl
fimull
mov
insb
push
jno
add
imul
mov
inc
dec
insb
dec
jnp
push
and
pusha
or
stos
jne
sub
mov
dec
movsb
push
pusha
fildll
iret
call
jno
addr16
push
fiaddl
jge
mov
mov
xorb
scas
pop
js
jo
jp
jae
add
movsb
add
fs
pusha
and
dec
push
in
mov
jne
push
dec
jno
aad
add
enter
push
fldcw
mov
add
xor
xor
xchg
repnz
push
mov
jb
stos
jo
add
inc
lods
js
call
add
loopne
repz
movsb
dec
inc
test
jbe
rorb
icebp
jno
jnp
and
shlb
movb
shll
dec
inc
jb
in
dec
pop
ljmp
stos
inc
test
sbb
int3
fadds
xor
xlat
push
mov
or
adc
mov
push
insb
dec
push
rolb
pop
jle
rclb
inc
xchg
xor
movsb
es
add
pop
dec
stc
in
loopne
dec
ficoml
fcmovu
and
arpl
movsb
dec
sub
in
rcr
iret
sub
add
aam
bound
lock
insl
dec
push
mov
movd
jns
push
add
or
sub
sbb
les
xor
push
dec
inc
rcrb
push
push
sahf
lock
mov
insb
inc
cmp
jo
inc
bound
dec
push
cmc
xor
xchg
imul
sbb
xor
push
rcrb
xchg
inc
enter
hlt
mov
dec
jp
and
ss
fwait
add
cld
fisttps
jns
mov
out
push
ja
push
lock
lahf
mov
cs
pop
mov
sub
cld
filds
dec
fs
cmpsl
sub
adc
adc
je
insl
bound
lock
inc
jl
stos
clc
push
pop
lret
pop
dec
lods
fwait
dec
xchg
cs
aaa
jne
sbb
je
fs
sbb
mov
add
test
mov
cmp
sbb
cmp
dec
cli
lods
cli
ds
dec
push
adc
dec
popl
xchg
mov
inc
imul
inc
cwtl
dec
cmpsb
adc
inc
jo
cmc
pop
addr16
in
pop
repnz
inc
pop
mov
xor
mov
insb
xchg
jg
loop
enter
imul
push
push
add
cli
dec
and
push
xchg
call
push
xor
cmp
mov
fildll
imul
sbb
push
aaa
push
jge
adc
jg
lahf
mov
jecxz
insl
adc
lock
inc
iret
lods
inc
add
push
pop
or
mov
add
mov
lret
adc
in
dec
add
lretw
imul
ret
mov
gs
adc
into
pop
sbb
inc
xor
fildl
test
jne
divb
ret
jae
pop
andb
fs
fs
arpl
lret
cmp
fwait
call
call
dec
push
arpl
push
pop
or
jb
out
mov
outsl
dec
jo
test
sbb
push
inc
xor
or
mov
or
dec
inc
xlat
cmpsb
cmp
xchg
xlat
push
ret
push
push
adc
jo
enter
mov
mov
cbtw
testl
insl
push
inc
dec
xchg
popa
cmp
inc
pusha
imul
outsl
push
cmp
popa
fcoms
daa
je
mov
loopne
push
or
scas
dec
cmpsb
inc
mov
jecxz
mov
jecxz
ljmp
fnstcw
jns
fs
gs
and
pop
and
xlat
jb
mov
jae
sbb
ss
push
inc
dec
repnz
jns
jno
das
outsb
ds
in
dec
push
dec
ds
data16
mov
insb
pusha
adcb
mov
xorb
adc
rcl
out
dec
xchg
pop
cmp
xor
pop
test
cmp
jbe
jmp
loopne
addr16
fs
das
mov
push
cli
fidivl
push
dec
inc
dec
insl
ficoml
sbb
sub
add
hlt
sub
inc
adc
cmp
dec
ret
inc
jo
fsubr
jae
dec
xchg
fs
xor
add
lret
loopne
xchg
add
mov
andb
les
rorb
sahf
fistps
nop
fidivrl
mov
cmp
sahf
bound
movb
mov
inc
inc
andl
adc
cmp
jecxz
push
or
jbe
je
rorl
int3
jne
ss
dec
xor
dec
push
push
ret
xchg
cwtl
dec
mov
outsl
add
dec
dec
xorl
mov
dec
enter
dec
jge
sarb
adc
inc
inc
outsl
fdivp
push
pop
add
adc
inc
insl
xchg
adc
pop
fwait
pusha
jo
inc
insl
inc
inc
cltd
cld
aaa
xor
push
int3
jb
cmpsb
pop
mov
pop
push
push
out
dec
hlt
outsl
insb
jne
or
movl
xlat
outsb
jne
outsl
pop
dec
pusha
icebp
std
rorl
dec
push
pusha
popa
sbb
push
aaa
inc
or
push
mov
add
test
add
ss
call
test
mov
inc
add
fisttps
adc
sub
cmp
rorb
and
jmp
call
xchg
mov
push
fidivl
xchg
add
inc
loope
testb
add
mov
in
push
fisubs
pop
addr16
pop
cli
std
push
mov
in
push
rcrb
push
and
shrl
inc
out
sbb
jl
clc
mov
ss
cmp
cmpsl
jo
out
inc
ja
imul
es
lret
cmpsl
mov
pop
fldenvs
inc
push
rcl
ds
xchg
cmpsb
je
iret
add
pop
push
xor
cmp
add
push
imul
xchg
mov
mov
shr
mov
scas
cmp
or
sub
insb
inc
or
shll
mov
mov
inc
dec
xor
xor
cs
ret
adc
ret
jae
hlt
xchg
push
incl
jo
lock
dec
sub
add
mov
sub
pop
ds
mov
cmc
ror
dec
inc
xchg
jecxz
int
dec
push
ljmp
add
insl
aad
add
gs
mov
inc
add
cli
pop
mov
pushl
and
pushf
cmp
pusha
mov
ss
jbe
pop
jmp
jnp
sbb
dec
lock
cmovs
outsl
cmovge
into
jae
dec
ljmp
addl
loopne
outsl
push
push
test
push
jae
push
mov
inc
imul
jns
dec
jmp
adc
fidivrl
cmp
mov
fsubr
lock
addb
push
push
pop
xor
shl
mov
inc
pop
cmp
mov
push
aam
ret
add
cmp
pop
addr16
sub
lock
push
mov
ret
cmp
dec
push
clc
shl
jmp
dec
je
sbbb
inc
rol
js
clc
daa
lods
subb
inc
out
dec
js
push
mov
jmp
push
inc
dec
and
stos
insl
or
push
push
in
adc
or
int3
mov
dec
mov
in
inc
xor
lret
fisttps
fs
bound
js
sub
rclb
aam
pop
addr16
jle
and
dec
sbb
ja
fs
push
fmuls
fbstp
adc
lret
jno
shlb
cs
imul
cmp
loopne
stos
enter
xor
dec
xchg
mov
push
ss
pop
mov
setb
dec
or
inc
inc
lds
mov
in
insb
insb
jae
out
dec
push
or
mov
jne
jbe
movsb
add
dec
push
dec
mov
inc
jl
push
adc
pop
add
or
cmpsb
jo
push
mov
subb
adc
jp
mov
adc
ja
add
mov
aaa
fisubrl
scas
xor
call
in
cmp
inc
adc
fmull
mov
mov
or
sbb
jge
and
std
faddl
lret
mov
cmpsl
cltd
inc
jb
jg
pop
add
loope
dec
pushf
mov
or
mov
out
rolb
or
test
or
xor
shlb
mov
cli
mov
testb
jne
sbb
or
movl
cmp
leave
or
rcll
add
push
mov
leave
xor
adc
add
cmp
push
cltd
inc
and
inc
cltd
pop
push
outsl
icebp
movl
stos
mov
insl
cld
outsb
fmul
mov
cs
xor
out
jb
xchg
add
sub
cwtl
popf
fadd
xchg
jae
mov
test
pop
xchg
outsb
add
or
testl
mov
dec
add
sub
push
ljmp
stc
popa
popa
jno
int3
dec
fbstp
lcall
mov
pusha
lcall
inc
sub
or
inc
dec
lea
mov
ds
sahf
mov
xchg
jmp
sbb
push
add
push
adc
rcr
xchg
cmp
xchg
sub
adc
cltd
mov
stos
mov
cmpsl
and
test
dec
movsl
pop
jmp
lcall
daa
loopne
dec
and
mov
sbb
pop
pusha
popa
incl
lcall
sbb
adc
ljmp
lods
cmpsl
jno
sbb
dec
or
ret
fisttpll
shll
add
out
sub
xchg
pop
mov
inc
std
movsb
sub
and
lahf
lea
scas
in
testb
mov
lods
sub
dec
mov
cld
aam
pop
push
mov
aas
xacquire
lods
jo
dec
or
sub
jmp
loopne
adc
pop
dec
add
xor
xchg
xchg
insb
dec
dec
test
push
pop
push
stos
pop
fwait
pop
roll
jne
dec
test
push
push
push
push
sub
add
sbb
add
cmc
out
outsb
and
sbb
test
jle
dec
pusha
or
ds
dec
cmp
aam
gs
mov
popf
or
add
lret
repz
sbb
fs
test
jns
pop
or
sbbl
jno
aam
popf
stos
rolb
pop
iret
subl
push
xor
push
mov
push
loope
dec
sub
ss
and
leave
cmp
nop
ss
jl
add
add
mov
mov
sub
rorl
or
jno
add
jecxz
das
in
pusha
xchg
add
mov
mov
repnz
adc
lock
ja
in
and
and
insb
dec
sub
cli
test
cmc
cmp
aam
in
or
pop
std
out
dec
repnz
fsubrl
cmp
sub
jl
lds
xor
mov
outsl
pop
add
lret
cld
rolb
dec
dec
shl
inc
add
clc
add
outsb
mov
ljmp
add
into
cld
rcrl
scas
sbb
daa
sbb
sbb
push
out
adc
ret
inc
rorl
mov
inc
les
test
fisubl
or
fwait
or
test
push
lahf
out
or
xchg
mov
in
test
push
clc
addr16
mov
push
mov
call
insb
pusha
aad
mov
and
fbld
adc
icebp
xor
es
aad
ljmp
movsb
xor
pop
mov
push
mov
out
test
pop
bound
rol
loope
arpl
mov
xor
dec
jns
and
mov
cmp
je
jb
lea
rcrl
andb
js
pop
mov
jbe
mov
cmpsl
dec
pop
add
jno
sub
pop
fcompl
int
daa
lahf
lcall
cli
pop
xchg
cmpsl
mov
in
sbb
adc
lea
cmp
hlt
out
fildll
mov
movsb
xchg
jge
enter
dec
rcrb
out
and
inc
add
inc
xchg
add
pop
adc
outsb
xor
add
outsb
es
imul
dec
dec
jmp
cmp
jbe
into
daa
bound
gs
mov
mov
nop
cmp
push
cli
xchg
shrb
insb
and
out
data16
repz
fstps
push
lret
dec
mov
dec
push
ja
add
sub
cmp
dec
cmp
hlt
push
jne
xor
aad
fisttps
mov
pop
mov
cmp
inc
je
xchg
jbe
dec
loopne
add
fldl
or
sbb
loop
std
add
ljmp
jmp
and
mov
dec
in
into
and
cld
rcr
dec
inc
pop
ret
dec
mov
adc
add
dec
push
push
push
dec
push
add
dec
pop
dec
and
stos
mov
push
push
push
sarb
mov
jo
gs
les
loopne
adc
push
inc
inc
aas
add
outsb
je
push
mov
dec
dec
lahf
add
outsl
jno
ret
iret
shr
daa
fstl
sbb
add
add
test
inc
adcb
xlat
xchg
jne
insb
dec
xor
sarb
aaa
pop
out
xor
cwtl
aas
mov
ds
out
je
push
or
clc
mov
test
cmp
dec
and
mov
push
add
inc
or
jno
xor
inc
pop
pop
sbb
mov
fistps
push
xor
shrb
aaa
pusha
out
shld
xor
ret
or
cs
sbb
inc
shl
xchg
cmp
sub
fdivrs
push
mov
movups
call
stc
adc
sub
loopne
dec
popa
and
test
push
inc
dec
mov
lock
dec
mov
mov
popa
inc
jbe
cmp
push
sbb
adc
jle
cld
pusha
inc
loop
inc
xor
pusha
add
dec
dec
insb
jbe
pop
and
dec
fs
fs
insl
push
pop
add
je
dec
push
movsl
push
popa
xchg
fldt
cwtl
aaa
xor
bound
movsb
jmp
push
dec
movsb
or
pop
push
mov
mov
sbb
aam
ljmp
jge
je
jae
dec
pop
fstps
xchg
out
mov
add
xor
aaa
je
mov
sarb
cltd
lods
test
and
loopne
jo
arpl
ljmp
pop
enter
dec
pushl
xor
mov
cld
xor
or
adc
inc
jne
out
bound
sbb
jb
js
jns
arpl
pop
clc
mov
dec
and
inc
js
insl
lods
add
fs
inc
push
jnp
adc
pop
push
aam
das
js
mov
aaa
push
pop
xorb
das
xchg
fsubrp
aam
rcrb
ret
shl
shlb
fsubrs
pop
xadd
cmpsb
adc
mov
and
jo
lock
lds
ret
aam
xor
push
aaa
adc
cmp
mov
ja
push
jne
mov
xor
mov
hlt
cli
mov
adc
jne
lods
pcmpgtd
xor
jae
xchg
dec
xor
xchg
inc
cld
pop
sahf
movsl
jae
and
sbb
jae
push
mov
mov
movb
and
orb
ret
mov
cli
shll
mov
movsl
arpl
lea
and
dec
xchg
jg
pop
dec
mov
add
or
pop
pop
mov
imul
inc
cmp
xchg
add
ja
jg
imul
iret
test
push
dec
pop
jne
add
or
pop
and
xlat
aas
sbb
inc
fmull
lahf
jl
clc
inc
mov
pusha
add
fisttpll
repnz
or
inc
jle
pusha
in
add
callw
push
divl
rorl
pushf
push
push
push
sub
test
sub
std
push
adcl
or
int
lcall
fiadds
ss
mov
loop
aam
clc
idivl
adc
add
jg
dec
std
cwtl
xor
insl
stos
mov
xchg
jle
fisttps
nop
xor
clc
jnp
xchg
mov
pop
add
lds
adc
loope
inc
shrb
cmp
inc
lock
push
mov
cmp
or
mov
pushf
popa
ret
jecxz
movsl
push
mov
or
mov
pop
cmp
xchg
sbb
enter
jl
xchg
frstor
mov
sbb
jp
int
repnz
repz
repnz
icebp
xlat
mov
outsb
addb
jge
sub
inc
add
jns
enter
pusha
cmp
sub
jecxz
addr16
cli
rcrl
pop
ret
xor
test
filds
mov
jo
pusha
out
sbb
stc
xchg
out
xlat
les
jo
inc
lods
mov
sub
pop
out
repnz
inc
fs
and
cld
dec
cld
push
into
push
sbb
jle
xor
lds
push
hlt
inc
aam
test
pop
jo
fstl
mov
mov
repnz
mov
rcrl
xlat
enter
rorl
aas
adc
dec
pop
and
clc
jns
push
sub
xor
add
push
arpl
push
nopl
mov
arpl
lods
add
scas
popa
loope
adc
cmpsl
adc
add
jge
xchg
stos
xor
inc
lcall
roll
ret
jmp
cmp
push
inc
clc
add
mov
push
test
out
and
arpl
inc
pop
icebp
pusha
lds
ret
mov
movl
sbb
lea
je
sbb
sub
leave
and
pushf
pop
fldl
jbe
add
xor
lcall
orl
sbb
repz
jne
or
pop
inc
push
test
movsb
xlat
ficompl
fwait
cmpsb
aad
xlat
push
cmp
fs
xchg
out
test
adc
mov
and
add
mov
jo
push
push
imul
dec
inc
xlat
sahf
jo
rolb
cli
sub
daa
fs
shll
or
inc
jg
sbbb
mov
cltd
mov
mov
fcoml
hlt
inc
jo
dec
test
mov
jne
fnsave
ljmp
pop
je
sub
movsl
fwait
test
daa
adc
es
cmp
ds
iret
mov
sub
push
mov
adc
xchg
and
xor
fadd
aad
icebp
les
aaa
stos
xor
or
add
movsl
adc
ja
push
addb
add
iret
push
xchg
push
aam
inc
jo
pop
mov
pusha
xor
mov
mov
repz
scas
lea
xor
mov
inc
cmp
in
rcrl
je
cwtl
cmp
outsb
aad
dec
pavgb
jo
add
ds
dec
push
js
in
xchg
push
loopne
xor
jp
mov
scas
sub
mov
xchg
call
jecxz
mov
lcall
xchg
mov
and
push
test
addr16
add
stos
mov
push
scas
imul
adc
mov
addl
call
mov
test
mov
pop
mov
js
push
fimull
add
xor
lret
xchg
xor
es
jns
sub
rorb
adc
fndisi(8087
repnz
sbb
push
push
push
add
or
mov
mov
call
mov
xchg
or
sahf
dec
mov
repnz
add
shrl
cld
negb
sub
inc
lods
inc
add
inc
inc
dec
gs
loope
mov
mov
ja
cmp
add
rclb
mov
ss
je
in
pop
js
imul
outsb
jo
loop
dec
jne
ret
push
dec
imul
push
mov
decl
xchg
push
xlat
xlat
addb
inc
jle
adc
cmp
mov
push
ja
inc
add
imul
xchg
sub
mov
adc
inc
cmp
mov
xor
out
jbe
xor
inc
sub
rorb
daa
mov
add
dec
dec
sub
test
xchg
mov
push
imul
inc
jl
sbb
push
mov
or
inc
jns
dec
xchg
sub
xchg
call
mov
dec
ja
in
dec
jl
js
adc
dec
idivl
sub
push
push
ja
add
xchg
ret
adc
xor
aam
mov
shll
aas
inc
jge
and
ret
subl
ret
mov
ret
inc
xor
mov
repz
push
int3
xchg
mov
push
sub
rolb
mull
imul
fadds
and
scas
sub
inc
js
xchg
xor
imul
lock
xor
popf
and
lds
lret
daa
shl
jne
ljmp
imul
clc
ret
nop
nop
cld
or
xor
fdivs
pop
sub
out
scas
imul
iret
xor
popa
dec
inc
mov
and
push
hlt
sbb
lcall
pop
lods
subb
cmc
xor
jg
fs
fdivrl
xlat
push
mov
mov
inc
ret
mov
mov
sub
cmp
es
sbb
cmp
jnp
and
dec
pop
add
mov
jl
jne
xchg
pusha
mov
test
sahf
lods
cmp
sbb
shrb
push
push
cmc
adc
rcl
push
jno
bound
push
mov
mov
inc
out
mov
xchg
test
inc
add
add
sbb
rcrb
jl
cwtl
and
popa
not
aas
sar
loop
push
pop
test
jae
stc
enter
rcll
push
push
mov
daa
js
and
sbb
cmpsl
test
jo
and
into
pop
pop
inc
cmpsb
lock
mov
mov
lcall
gs
sub
jne
cs
mov
out
pop
mov
fcoms
jmp
test
lods
lcall
sbb
inc
jae
gs
call
out
push
ljmp
loop
int
call
into
test
jle
push
call
add
mov
imul
xor
mov
fcmovu
lods
sub
add
ja
push
xchg
loopne
daa
mov
test
xchg
and
push
dec
pop
inc
shlb
je
jg
dec
push
pop
test
repnz
fnstenv
sub
push
stos
pushf
pop
sub
sbb
sub
jae
add
cmp
adc
out
in
jge
ja
lret
incb
lea
jp
aam
dec
fimuls
addr16
sub
push
call
mov
sarb
fcomps
lea
xor
clc
adc
xchg
sbb
fstl
test
mov
inc
pop
push
stc
pop
jns
in
popa
xlat
sbb
stos
cwtl
bound
arpl
cmc
adc
fidivl
add
mov
div
xor
ljmp
in
mov
pusha
xlat
sbb
push
xchg
xor
push
imul
mov
sub
fwait
push
stos
mov
mov
dec
or
pop
and
sbb
ds
xchg
imul
pop
in
adc
arpl
mov
mov
push
and
stos
out
pop
mov
pushw
mov
bound
and
pop
push
pop
mov
scas
insb
popf
cli
fcmovne
js
loope
out
stos
int3
cmp
xor
add
jbe
mov
loope
rcl
aam
mov
lock
les
insb
sub
or
dec
inc
das
xor
add
pop
mov
mov
ret
inc
or
in
or
sub
mov
dec
rcr
inc
add
fiadds
adc
dec
ret
jns
mov
js
sbb
andnps
movsl
jle
nop
mov
lods
or
jne
pusha
lea
pusha
cwtl
push
xchg
clc
test
sub
and
push
mov
gs
in
cmp
outsl
push
rclb
sub
stos
jb
movsb
push
mov
adc
adc
mov
jl
test
mov
shlb
mov
inc
mov
push
lock
inc
and
call
jl
daa
pop
push
mov
popf
ficompl
int3
sbb
ret
sub
test
sub
sbb
shr
dec
movsb
pop
or
lds
xor
lahf
pusha
loope
cli
out
les
adc
mov
jmp
jo
dec
adc
ficoml
call
bound
test
in
sub
cmpsb
gs
xchg
cmc
lds
add
movsb
rorl
sub
in
fmuls
les
sbb
fsubrl
push
jecxz
dec
sti
enter
lret
mov
pop
sub
icebp
sbb
sbb
pop
aad
jg
add
aaa
cmp
or
push
dec
fs
or
push
stos
xor
sbb
and
lahf
cmp
imul
adc
icebp
push
sub
mov
orb
inc
adc
jmp
dec
test
inc
pop
jl
push
push
out
notb
dec
sub
std
add
push
loope
adc
pop
sbb
movsb
fucom
xchg
icebp
sbb
loopne
or
inc
jge
mov
jb
out
push
dec
cmp
xor
xchg
lcall
imul
add
jo
add
mov
scas
xor
xor
je
mov
dec
js
inc
cmp
sbb
push
jbe
in
inc
pop
cwtl
pushf
in
arpl
sbb
sti
add
dec
add
iret
in
outsb
popa
xor
out
inc
clc
inc
pusha
rcrl
outsl
mov
dec
dec
xor
pmuludq
xchg
fdivrl
dec
mov
inc
js
pop
cmp
ret
or
js,pn
jle
outsb
jne
xchg
icebp
pop
divl
xchg
mov
jmp
push
imul
cmp
inc
loopne
sar
call
or
push
lock
pop
mull
scas
cmp
cmp
push
cmp
insl
sbb
addr16
mov
xor
adc
push
adc
test
xor
enter
adc
insb
mov
andl
dec
bound
mov
mov
xorl
jns
mov
push
call
inc
xor
rolb
push
inc
out
inc
mov
fs
sub
ret
ret
or
in
pop
stc
test
dec
test
inc
and
fstpl
fmull
js
dec
dec
pop
adc
js
jno
inc
bound
lods
xorl
sbb
cltd
enter
icebp
xor
xchg
loopne
add
add
mov
xchg
iret
dec
dec
xlat
cmp
add
xchg
mov
ror
fdivrs
fsubl
lds
jmp
aaa
push
imul
dec
or
push
gs
and
add
in
sbb
or
jae
jg
clc
hlt
inc
mov
sbb
push
jg
iret
testb
dec
add
out
jmp
and
xchg
jnp
mov
test
or
adc
rolb
pop
jge
stos
xchg
stos
and
add
arpl
xor
add
or
lods
outsl
std
lods
push
sub
daa
xor
movsl
inc
mov
and
iret
push
rolb
jbe
mov
sbb
clc
pop
push
mov
pushf
sahf
lods
or
leave
or
add
mov
add
adc
mov
inc
lods
push
scas
xlat
popa
add
call
add
cmp
movsl
in
rorl
jno
pusha
lods
sahf
shll
xchg
inc
rorl
lock
imul
ss
mov
rcr
leave
mov
jmp
jp
in
fcompl
mov
bound
add
cmp
jmp
jecxz
jo
lods
mov
sbb
subb
inc
dec
add
xor
sub
rorb
into
and
push
and
push
addl
leave
add
sbb
and
paddsb
push
lds
sbb
mov
sub
adc
sub
add
adc
mov
mov
mov
call
xchg
or
sub
dec
cmp
arpl
js
aas
pop
and
shrl
rcll
sbb
enter
mov
push
enter
dec
pushw
sbbb
add
sahf
hlt
mov
mov
dec
es
addb
and
lock
mov
daa
mov
and
test
icebp
sub
or
and
sbb
dec
outsl
shlb
xchg
outsl
push
ja
popa
enter
mov
jae
out
addr16
dec
jno
inc
aaa
xchg
and
dec
mov
ja
movsb
mov
ficoms
je
pushf
and
fisttpl
sbb
ljmp
mov
mov
push
dec
ja
xor
icebp
int
mov
mov
cwtl
cmp
jno
xor
xchg
shr
addr16
inc
or
sbb
mov
push
inc
add
add
mov
lea
add
dec
mov
push
ss
stos
add
rol
fbld
mov
jp
mov
jge
clc
pop
inc
xor
fisubrs
sbb
sahf
and
and
push
test
test
pushf
inc
fcmovnb
adc
mov
inc
cs
mov
inc
dec
popa
popf
push
mov
push
dec
sbbb
dec
rorb
inc
ja
dec
lret
push
notl
inc
insb
in
rol
sarb
push
push
dec
jnp
jbe
scas
xor
das
gs
add
into
push
sub
xchg
pop
mov
mov
incb
loop
sbb
cmp
xor
jo
mov
out
arpl
or
js
inc
movsl
das
xchg
jb
jae
fs
sbb
xor
pushf
nop
decb
push
mov
push
ds
aaa
subl
jp
inc
dec
and
xchg
aaa
push
mov
pop
jo
scas
test
movsb
mov
xor
xor
test
testl
js
push
out
fwait
and
jmp
call
xor
gs
orb
sarb
ret
jno
add
push
imul
lock
xchg
fs
xor
dec
js
add
test
stos
mov
push
mov
imul
int3
insb
scas
out
aaa
mov
and
sbb
call
mov
dec
inc
pop
pop
ljmp
dec
mov
jne
dec
fstpl
add
aam
pop
js
call
add
jge
mov
ret
popa
push
pop
cmpb
dec
jno
cld
push
cld
xor
popa
sub
lcall
jbe
xor
sti
add
int3
jo
rolb
test
mov
push
xor
dec
inc
xor
push
sub
cs
push
inc
bound
sti
cmpsb
jae
push
test
rorl
lock
add
fistpll
cld
aad
jo
icebp
sub
mov
mov
pop
dec
push
fildll
das
jno
pop
pushf
push
inc
jecxz
rorb
jne
jo
or
xor
insb
data16
xor
push
outsl
popa
insb
out
cmp
addr16
push
mov
push
xor
push
cli
test
cmpsb
add
jo
int
cmp
cmp
fs
push
cmp
dec
in
sahf
inc
sub
xchg
mov
insb
inc
bound
cmp
jo
jmp
mov
imul
adc
cmpsl
jmp
ja
inc
cmp
mov
insb
outsl
lcall
or
pop
popa
subb
mov
bound
dec
mov
bound
out
dec
nop
inc
outsb
mov
das
cmp
add
cmpsb
data16
inc
push
push
sub
xor
mov
sub
jne
je
aad
lret
stos
push
ja
dec
inc
repz
loopne
std
dec
push
or
je
test
push
push
push
mov
notl
mov
inc
jbe
xor
arpl
addr16
sub
push
test
cld
std
leave
cmp
jb
insl
inc
rorl
jbe
dec
stc
push
lods
cli
or
and
lahf
mov
adc
xchg
jns
fadds
cmpsl
das
jecxz
insb
adc
cmp
cmpsb
pop
sbbb
dec
fwait
bound
fsubl
jmp
rolb
clc
nop
shr
bound
inc
pop
dec
push
or
mov
ja
dec
in
movsb
jg
and
cmp
xor
cwtl
mov
inc
xor
mov
add
jge
adc
push
lahf
fcomi
daa
shrb
popa
xchg
add
outsb
mov
pop
inc
out
dec
xor
lret
xchg
adc
into
xchg
clc
push
mov
jecxz
push
xchg
xchg
and
test
inc
adc
in
jmp
push
inc
sbb
aas
outsb
insb
push
mov
fcoml
loopne
lcall
repnz
and
jge
xchg
les
sbb
int
pop
mov
loope
dec
sbb
dec
leave
pop
add
fstl
xchg
adc
mov
xor
dec
into
pop
lcall
js
jbe
adc
addr16
sub
dec
adc
hlt
mov
dec
dec
or
jns
mov
hlt
aaa
adc
add
test
mov
and
mov
push
mov
push
adc
jne
out
iret
sub
hlt
dec
test
lea
cmc
rclb
pusha
jb
xor
stc
lods
xchg
lcall
fdivl
ja
xor
cld
cmpb
mov
jno
push
push
sub
inc
pop
push
push
mov
cld
pop
or
loop
xlat
sbb
mov
inc
pop
in
or
xor
shlb
test
ror
jne
insl
daa
inc
out
je
sbb
sub
out
loope
les
arpl
mov
stos
push
orl
lea
and
in
daa
pop
xorl
inc
stos
rcrb
clc
arpl
adc
fsubrp
xor
fs
jmp
cmpsl
fisubrs
add
push
jno
pop
pushf
std
xchg
insb
mov
ret
cmp
in
jle
es
dec
jns
push
sbb
in
cmpsl
in
mov
adc
jmp
rclb
jmp
inc
loope
adc
push
fstpt
cmp
xor
xchg
xchg
add
mov
mov
inc
out
shrb
fdivs
mov
icebp
mov
arpl
xchg
jo
loopne
scas
in
in
dec
sub
push
or
cmc
pop
daa
mov
jcxz
loop
rcll
iret
adc
insl
jl
or
stos
shr
push
stos
or
sub
mov
sub
lea
rolb
xor
clc
dec
idivb
cmp
fisubrl
sbb
mov
mov
inc
mov
jno
sbb
xchg
adcb
jecxz
or
out
popa
dec
dec
inc
fldl
xchg
push
fists
nop
out
in
pop
jb
push
mov
xchg
add
bound
pop
ret
push
xorb
and
lcall
add
dec
add
loope
movsl
mov
bnd
lds
ds
mov
dec
sub
iret
pop
mov
bnd
xor
cmpsl
lock
movsl
aam
jne
int
out
mov
jg
dec
cld
mov
inc
inc
inc
out
fimull
adc
inc
or
or
xchg
or
orl
lock
inc
out
lea
mov
pop
stos
jae
jo
je
inc
cmc
sbb
and
adc
repnz
shrl
push
adc
sbb
mov
add
and
jnp
cs
mov
adc
or
dec
ja
dec
mov
ljmp
cmp
scas
ret
push
cwtl
std
jle
sbb
sahf
ret
dec
mov
mov
rcrb
js
div
add
repz
add
pop
mov
or
and
fimuls
cld
xor
sbbb
push
rclb
jecxz
jns
lret
fnstcw
lea
mov
add
mov
pop
jmp
stos
and
out
sbb
int3
fldt
outsb
xchg
inc
or
add
sbb
jmp
or
lods
into
sbb
or
push
mov
cmp
andb
push
movl
clc
in
nop
out
mov
pushf
cmp
add
pushf
add
insl
loopne
dec
push
scas
ret
push
ss
sar
and
arpl
sbb
cltd
pop
pop
rcll
jmp
xor
call
lock
jne
push
adc
popf
cmp
pop
sub
les
sbb
mov
jge
mov
sub
out
aad
jns
and
jbe
mov
cli
dec
je
daa
mov
movsb
imul
or
xor
sub
jge
pop
jno
loop,pt
add
sub
fdivrs
pop
jp
mov
xchg
adc
or
mov
iret
shrl
test
dec
add
lret
dec
int3
and
or
xor
popf
mov
push
fstpl
cmp
pusha
jge
aam
mov
jle
mov
outsb
inc
and
lock
pop
cmp
xor
inc
lea
loopne
or
push
mov
inc
push
aas
imul
fwait
add
sbb
lcall
add
push
and
and
ret
pop
stc
jmp
shll
sbb
cmp
xchg
push
push
inc
pop
jge
cmc
jbe
dec
dec
cmpl
insl
adc
loope
cmpsl
pushf
subb
cmpsb
xlat
mov
les
pop
cli
cltd
push
inc
ret
mov
inc
inc
cmpsb
pusha
jp
inc
dec
fiadds
lret
and
sub
mov
ret
lcall
aaa
push
add
cmp
orl
jp
jae
pop
outsb
call
jecxz
lcall
push
push
push
call
push
cli
mov
mov
jp
pop
xor
xchg
subb
stc
jbe
mov
hlt
jmp
or
call
xor
and
mov
divb
or
stc
sub
jb
daa
adc
and
mov
push
andb
faddl
mov
cs
scas
sub
mov
sbb
pushf
pop
sbb
or
push
xor
stos
push
or
push
jecxz
test
or
stos
sbb
mov
mov
mov
repz
or
adc
inc
pop
dec
and
inc
fs
lret
addl
cmp
inc
cmpl
xor
push
sub
adc
fcompl
cmpsb
or
xchg
rcrb
and
xchg
fimuls
lock
xchg
mov
mov
leave
mov
cs
rolb
mov
and
jo
jne
mov
rcll
mov
sbb
stc
mov
sub
aaa
jbe
scas
nop
inc
add
test
dec
addr16
bound
mov
mov
nop
int3
add
jmp
arpl
pushf
sbb
je
aam
cmp
adc
adc
bnd
cmp
inc
inc
adc
mov
movsl
pop
xchg
push
cmpsb
filds
add
mov
leave
adc
jp
xor
inc
lds
leave
roll
out
out
and
and
cmp
pop
cmpb
sti
lds
pop
dec
inc
and
cmp
cmp
and
inc
outsl
sub
loop
xor
arpl
dec
mov
dec
cld
inc
sbb
lahf
aad
lds
sbb
outsl
push
call
jo
shl
push
inc
jae
jns
lds
int3
ret
stos
push
stc
mov
push
dec
into
fidivrs
sbb
sbb
dec
cmp
mov
and
mov
ffreep
push
lds
sti
xor
in
out
and
sarl
and
add
mov
pop
lcall
mov
add
iret
mov
xchg
inc
pop
daa
ljmpw
stc
and
cwtl
ljmp
into
jns
add
sub
cltd
sbb
mov
add
ljmp
pop
cmp
push
jne
and
mov
lret
adc
jg
mov
add
add
sbb
push
ljmp
add
orb
xchg
pop
data16
jle
add
xlat
cmc
xchg
hlt
add
dec
repz
outsl
and
dec
pop
jo
jmp
add
ljmp
push
add
mov
ficoms
icebp
daa
ljmp
cwtl
jg
xor
ljmp
jbe
mov
sub
xchg
clc
cmp
mov
pop
add
mov
add
jecxz
aas
addr16
loop
and
es
inc
dec
mov
leave
es
mov
gs
out
imul
or
in
cmpsl
xchg
mov
rolb
xor
xchg
cmp
ret
pop
xchg
out
fisubl
adc
sbb
ljmp
jo
js
mov
leave
mov
inc
sub
push
add
or
xor
xor
jmp
incb
mov
xchg
loope
arpl
lea
add
xchg
es
pop
ds
add
mov
aas
test
cmp
arpl
aas
repnz
pop
fsubl
movsl
adc
mov
xor
jle
mov
mov
stc
test
push
notl
pusha
es
mov
sub
lea
shrb
mov
jl
sub
cmp
pop
xor
xchg
push
push
icebp
js
sti
mov
ss
sub
out
mov
scas
daa
dec
sub
inc
cwtl
andb
pop
jmp
or
or
jno
dec
mov
push
mov
lods
imul
mov
test
jle
adc
mov
fiaddl
dec
sbb
cli
mov
add
xor
adc
push
out
cmc
push
mov
inc
inc
repz
mov
cmpl
repz
pop
daa
cmpl
cmp
imul
mov
jbe
jmp
pop
pop
mov
dec
addr16
jo
add
mov
lret
cltd
xchg
imul
adc
cld
outsb
das
sbb
cmc
test
lcall
fsubl
gs
cwtl
sub
mov
movsw
nop
push
lds
clc
push
sbb
cmp
mov
mov
pushf
xchg
sbb
inc
mov
and
jno
icebp
pushf
nop
dec
pop
popa
mov
and
xor
push
mov
lods
divb
push
and
mov
js,pt
in
add
call
shlb
idivl
pop
arpl
or
or
mov
cli
and
imul
and
xchg
enter
inc
insb
inc
int
jno
sbb
pushw
jl
cmp
in
dec
iret
add
adc
in
fs
mov
popa
jmp
orl
sbb
cmc
scas
jg
gs
xor
fwait
mov
mov
xchg
push
fcmovnu
xchg
mov
jp
add
daa
cs
jne
xor
mov
or
stc
popf
mulb
sbb
shrb
mov
xor
dec
pop
inc
cmp
jns
and
cmp
and
mov
test
fistps
pop
pushf
mov
test
rcl
mov
xchg
int3
shll
fcoms
shll
push
mov
lea
sbb
outsb
iret
jbe
inc
loope
dec
jp
lret
add
xchg
out
xchg
pop
push
xchg
pop
mov
pop
jno
inc
jo
xchg
inc
cmp
inc
pushf
xor
jmp
lods
cmp
call
push
mov
shl
int3
fstps
mov
and
andps
dec
pop
or
sub
mov
push
jl
cwtl
ds
sbb
out
out
test
dec
js
lea
pop
xchg
rcrl
es
popa
push
out
inc
dec
shl
scas
mov
cmpl
lods
jge
xchg
sub
inc
in
dec
jnp
je
and
ret
add
inc
movsl
xor
pop
sbb
pop
sbb
test
fsubr
push
aaa
jo
pop
in
in
shrl
sbb
xlat
mov
mov
jp
xchg
inc
neg
and
jne
sbb
xchg
inc
sub
mov
call
repnz
movsl
mov
fwait
adc
fsubs
fstps
add
jmp
sbb
cmpsb
push
mov
jg
mov
and
push
mov
lret
sbb
les
adc
sbb
pop
push
pop
inc
dec
je
mov
inc
jecxz
ret
mov
loopne
out
sub
jns
lret
outsl
jae
loope
mov
lock
test
mov
add
mov
dec
xor
mov
mov
or
dec
je
loop
je
lods
shrl
sub
les
jmp
push
jb
js
dec
and
inc
into
dec
inc
ss
aaa
adc
fadd
dec
inc
arpl
rcll
jb
adc
inc
ret
pusha
loopne
adc
je
popa
push
adc
imul
mov
mov
mov
pop
inc
ret
pop
inc
dec
dec
and
test
push
shrb
shl
sbb
aaa
xor
shlb
add
repnz
mov
xchg
test
cmp
call
ret
mov
lcall
imul
add
inc
jg
sarb
inc
hlt
inc
add
inc
add
out
loopne
xor
mov
jmp
bound
xorb
pop
push
dec
mov
ss
add
xor
add
inc
imul
dec
jl
ret
push
js
or
mov
daa
test
outsb
dec
sbb
dec
pop
dec
inc
mov
xchg
rolb
dec
dec
inc
push
outsb
xor
mov
rep
inc
bound
jo
aaa
imul
testl
rcrb
ret
cmp
stc
sbbb
mov
inc
dec
hlt
inc
loopne
add
inc
push
je
jae
pop
cli
jae
jbe
icebp
aaa
inc
push
dec
mov
add
cmp
bound
lret
push
and
push
popa
push
outsb
mov
mov
and
add
sbb
dec
add
jl
inc
addr16
inc
notb
and
pop
sbb
dec
dec
adc
xchg
jae
add
jno
jnp
push
dec
cmp
bound
mov
add
or
mov
pop
mov
xor
dec
cvtps2pi
xchg
and
cmp
je
cmp
or
ljmp
jge
ret
test
nop
clc
divb
dec
data16
outsb
dec
mov
loop
int3
gs
ljmp
pop
xor
dec
push
ja
push
xchg
aaa
cwtl
or
push
rorb
add
xor
mov
and
imul
add
dec
bound
cwtl
add
pop
stos
push
xor
cmc
popf
gs
out
ss
xor
mov
mov
dec
push
dec
inc
jb
mov
icebp
jle
push
les
mov
dec
call
lsl
push
insb
push
mov
inc
insl
add
test
call
adc
xor
push
dec
dec
add
dec
fiaddl
inc
popa
pusha
insb
rorb
sub
cmc
cmpsl
pop
and
dec
inc
jmp
xor
dec
and
insl
jbe
sbb
xchg
shl
jp
mov
xchg
fs
xchg
add
xchg
mov
outsl
push
xor
jp
jbe
ret
sbb
cmp
adc
mov
mov
mov
inc
fwait
xchg
mov
mov
pop
in
insl
ja
xchg
add
shll
lds
arpl
in
cmc
jno
hlt
test
fnstcw
inc
loopne
push
testl
ss
mov
sbb
jb
pop
add
dec
bound
dec
and
mov
dec
inc
or
adc
popa
dec
inc
pop
jno
in
ret
lret
hlt
inc
or
lods
sbb
cmp
stos
jle
gs
out
inc
arpl
out
stos
or
xor
aad
in
lea
mov
subb
jg
dec
adcl
push
mov
xchg
inc
fsubs
sbb
jmp
jne
dec
inc
jmp
pop
inc
push
dec
push
fs
push
and
xchg
dec
pop
and
je
xor
jae
jbe
popf
push
cmp
dec
addr16
pusha
fs
push
xchg
insl
inc
inc
aam
fiaddl
imul
or
daa
loope
xor
repnz
addr16
push
ja
pop
arpl
movsl
ljmp
jbe
xchg
fadd
mov
enter
lock
imul
jo
mov
add
sub
mov
pop
fcomps
cwtl
push
insb
ss
call
dec
add
push
enter
push
push
pop
or
mov
push
idivl
mov
dec
ljmp
jg
mov
jbe
pop
fstps
inc
cmc
xor
shr
push
jne
jbe
adc
inc
mov
cmp
popa
loope
jno
subb
lods
push
dec
aas
shrb
dec
cmp
jns
cmc
jno
jb
dec
pushf
add
mov
mov
pop
iret
bound
and
pop
dec
scas
daa
mov
js
dec
popf
dec
mov
adc
sub
test
fs
xor
dec
lret
icebp
jno
xor
fmuls
dec
inc
bound
pop
decb
pop
sub
mov
pushf
rol
push
das
stos
mov
mov
shrl
aaa
jo
dec
loopne
push
loopne
push
add
aam
stc
leave
mov
cmp
cmp
mov
jo
ss
lds
push
dec
divb
xor
mov
xchg
daa
xchg
sub
js
aaa
add
mov
sti
bound
mov
push
xor
scas
or
jle
mov
mov
add
add
xor
cld
sbb
adc
push
fnsave
ds
fiaddl
dec
pop
lea
or
rcrl
fiadds
repz
clc
fs
cli
daa
fisubs
cmp
arpl
sti
and
sub
xchg
imul
xchg
pop
aas
or
dec
inc
roll
popl
add
pop
add
fwait
add
add
sbb
movsl
adc
mov
dec
or
hlt
sbb
adc
out
sub
rcl
adc
and
les
mov
push
leave
test
mov
xlat
test
mov
fucomip
aam
cmp
fwait
or
sarb
rol
inc
das
rcr
sub
call
movsb
fidivrl
dec
call
in
in
mov
cli
and
aam
lea
add
add
mov
or
std
movsb
movsb
arpl
loopne
insl
aaa
xchg
ja
pusha
test
arpl
inc
mov
cmp
push
sbb
add
pop
xlat
mov
aad
iret
loope
out
and
sahf
dec
sahf
sub
imul
addl
rcr
inc
loop,pt
js
call
cs
mov
pop
nop
push
aaa
test
inc
push
xchg
jg
dec
cs
xchg
inc
push
sub
dec
or
ljmp
sub
mov
mov
ret
xor
aaa
testl
pop
sub
dec
mov
addr16
lret
out
add
jo
pop
sub
out
inc
add
in
mov
lea
jp
xchg
sbb
pop
lahf
xlat
dec
out
xchg
xchg
mov
addr16
sbb
shrb
mov
cmpsb
sbb
mov
stos
shl
jbe
mov
sub
subl
or
in
mov
movsl
sbb
adcl
outsb
loopne
js
mov
lret
push
fists
xlat
cmp
adc
pusha
adc
jns
push
xor
pop
sbb
in
imul
mov
add
xlat
dec
xchg
mov
jns
sbb
add
pushf
es
ss
push
in
mov
bswap
aaa
pushf
push
push
int3
xchg
add
dec
rorb
sbb
push
dec
xor
inc
sbb
xor
pop
lahf
cltd
hlt
sbb
ret
imul
es
adc
cmc
mov
test
repz
cwtl
test
mov
cwtl
mov
jg
in
add
ljmp
clc
cltd
test
cwtl
cmc
inc
jp
jb
or
enter
inc
lock
outsl
mov
and
lcall
pop
or
xchg
outsb
and
add
adc
dec
jp
mov
mov
add
cmpsl
cltd
and
repz
and
mov
xorb
mov
jmp
adc
stos
sbb
xlat
push
mov
adc
adc
cmp
movsb
adc
cmpsl
dec
fs
add
std
aam
mov
adc
mov
push
xor
mov
insl
adc
mulb
sbb
dec
mov
xor
pop
jmp
dec
inc
xchg
jns
fwait
push
jle
pop
inc
add
or
inc
cmpsb
cld
gs
shlb
insb
jns
pop
mov
push
je
add
mov
incb
sub
pop
frstor
inc
mov
jae
sbb
daa
push
scas
adc
mov
movsb
icebp
mov
sub
roll
jns
inc
pop
pop
aaa
sahf
adc
pop
jns
mulb
outsl
adc
jl
sub
jmp
imul
inc
mov
shll
push
icebp
mov
cmp
dec
fisubl
popf
sbb
pusha
and
fidivl
or
subl
mov
jge
add
and
fsubs
lahf
cld
jns
fmuls
push
mov
lahf
push
nop
cmc
cmp
gs
inc
xor
mov
jp
loope
or
add
or
test
lret
ret
sbb
or
fdivs
jge
loope
xchg
mov
mov
or
daa
or
lea
cli
mov
sahf
fwait
xchg
cli
cltd
insl
push
push
scas
jo
and
out
adc
mov
in
int
cmp
xchg
inc
adc
loope
sti
mov
cmpl
mov
andl
or
movsb
shll
push
imul
jns
inc
ljmp
pop
sbb
cld
mov
test
push
movsl
push
inc
push
or
test
mov
push
push
test
mov
andb
add
add
pop
mov
jo
std
mov
dec
mov
stc
arpl
addb
push
fisubrs
jle
mov
lods
leave
mov
adc
test
lods
and
rcrl
enter
bndldx
lcall
mov
dec
nop
mov
or
jo
add
outsl
in
test
rorl
arpl
jg
out
jno
je
pop
lcall
arpl
dec
inc
lods
ret
dec
je
add
ret
insl
push
mov
pop
dec
pop
add
and
add
sarb
lock
jmp
jo
dec
add
insl
push
fisubl
mov
jp
je
dec
in
insl
js
js
mov
inc
push
loop
fists
xorb
out
push
inc
outsb
nop
dec
lock
inc
fs
pop
pusha
xchg
fsubr
xchg
mov
filds
or
adc
arpl
xchg
lods
lock
xor
fldenv
push
mov
mov
adc
xchg
add
sub
inc
mov
fs
adc
inc
aaa
add
or
movsb
insb
inc
je
fiadds
nop
jmp
inc
flds
jmp
aam
pop
aas
push
popa
lock
push
lret
pop
sub
dec
jnp
aas
cmc
ret
mov
dec
inc
mov
nop
sahf
sub
in
sub
lds
or
and
inc
nop
mov
jne
ja
scas
push
xchg
pop
push
xchg
cld
clc
bound
jbe
aas
jmp
add
cmpb
in
scas
pop
loop
rcll
dec
pushw
lahf
push
and
add
icebp
adc
or
mov
test
xlat
es
xor
push
mov
add
xor
orl
and
cmpsl
push
movsb
mov
sub
adc
add
shrb
add
ja
mov
cmp
psrlw
movsl
enter
imul
inc
mov
pusha
pop
pushf
xchg
xchg
mov
xor
add
shl
inc
mov
mov
sbb
push
cmp
inc
pop
leave
stos
cmpl
lds
adc
cmp
pop
pop
pop
inc
or
nop
mov
xor
aad
push
push
and
fwait
cli
jmp
rcll
xor
sbb
orb
loopne
dec
aaa
lea
jb
and
pusha
xchg
test
mov
cmpl
inc
mov
cmc
and
addb
and
nop
aas
movsb
enter
lret
sub
adcl
or
mov
stos
outsl
or
xor
xchg
icebp
jmp
or
jae
insb
loop
rcrl
test
mov
aaa
test
pop
add
push
or
dec
std
xchg
das
or
dec
mov
in
ja
inc
add
cmp
mov
das
rolb
inc
xlat
adc
mov
add
mov
stc
adc
push
incb
and
cmp
scas
pop
inc
inc
mov
clc
movb
dec
jbe
lock
js
clc
add
inc
mov
loopne
jne
cmp
sub
insl
adcl
push
jno
outsl
dec
fmull
data16
push
add
mov
pop
inc
mov
xor
stos
add
inc
push
mov
aaa
imul
shl
nop
stos
fdivs
loope
shlb
ret
and
cltd
scas
dec
or
inc
clc
xor
addl
clc
xchg
sub
dec
pop
ret
push
push
mov
push
add
jge
stc
popa
cmp
push
outsl
scas
dec
ljmp
test
xor
cmp
mov
outsl
pop
inc
push
cmp
mov
inc
stc
or
push
pusha
push
or
aaa
repnz
pop
xor
dec
out
or
ss
xchg
push
add
xchg
repnz
xor
add
add
stc
push
cmp
sub
pop
test
mov
add
ljmp
add
insl
lods
lods
xchg
sbb
dec
xchg
les
shrb
pop
fdivrl
outsl
adc
adc
jnp
in
shr
ret
jns
in
push
mov
cmp
adc
jne
pusha
mov
inc
bnd
ret
xorb
push
filds
sub
jbe
in
cmc
sbb
push
mov
cmp
in
mov
mov
lcall
push
xlat
andb
movsl
mov
push
adc
test
xor
jp
sbb
mov
xor
xchg
fildll
mov
repnz
cmp
fsin
push
jmp
dec
xor
fisubrl
jo
pop
and
jg
adcb
icebp
dec
ljmp
jmp
push
sub
jne
dec
movsb
das
pushf
pop
add
xchg
bound
shrb
popf
int
ret
and
imull
or
movsb
js
xor
imul
pop
jmp
and
or
sbb
add
pop
add
mov
jg,pn
int3
xor
cwtl
test
push
xchg
mov
and
loopne
mov
iret
xlat
push
cmp
shll
sub
pop
lret
sbbl
lret
mov
jnp
cmp
and
std
or
jecxz
in
and
or
jmp
add
arpl
je
cwtl
jmp
or
inc
fs
and
ds
les
dec
andl
cmc
push
out
sub
jbe
jns
rorl
mov
push
enter
cmp
jae
or
aad
lret
adc
add
hlt
push
sub
adc
jmp
sbb
or
incl
xchg
xchg
je
ja
shl
sbb
leave
xchg
xchg
fcmove
dec
rcr
pushf
pop
repnz
les
sub
loop
insb
pop
lret
ss
das
testb
iret
out
jo
loope
lcall
dec
cld
imul
adc
ja
rol
jg
insl
sub
jmp
vmovntps
or
stos
mov
mov
sbb
bound
loop
sbb
int3
ds
cld
nop
xchg
lcall
ss
lcall
lods
shlb
stos
cld
loope
pushf
das
movl
arpl
pop
mov
cmp
cwtl
cmp
and
sub
ljmp
and
or
mov
adc
scas
hlt
pmullw
xchg
ss
outsb
insb
mov
mov
test
stc
aas
and
sahf
insl
fbstp
mov
shlb
jb
jo
inc
shlb
mov
sbb
sbb
cmp
jo
mov
nop
cli
mov
or
movsl
pop
cmpsb
xlat
sub
sbb
outsb
testl
xchg
sub
jecxz
cli
leave
lea
sbb
push
movsb
xchg
pop
sbb
mov
insl
and
inc
inc
ja
scas
pop
dec
xor
mov
inc
push
jecxz
xchg
add
leave
pop
jno
ss
notl
push
push
push
jo
mov
les
or
or
aas
gs
dec
lods
stos
dec
jge
sub
cmp
and
xor
test
into
push
int
jge
loopne
pop
test
cltd
and
xlat
ficomps
outsb
push
je
inc
sar
cli
sub
add
sub
inc
add
aas
jecxz
sbb
lahf
dec
xchg
jbe
inc
adc
xchg
pmulhw
bound
cwtl
push
sub
data16
adc
fucomip
sub
inc
scas
jne
je
lods
xchg
enter
xchg
bound
flds
push
cs
cmp
aad
mov
sbb
sub
es
adc
aam
push
cli
idivl
sbb
adc
push
not
loopne
mov
popf
mov
pop
push
push
adc
daa
aaa
sahf
push
add
inc
inc
out
in
jle
xor
mov
iret
sarb
mov
arpl
jl
mov
paddq
and
imul
or
or
sbb
stos
inc
mull
push
push
dec
das
sub
add
lret
inc
in
js
push
mov
bnd
dec
je
cwtl
int
or
imul
loop
addl
bound
xor
mov
pop
xor
mov
sbb
js
bound
popa
fs
outsl
nop
inc
push
mov
or
enter
xchg
pop
adc
dec
jne
dec
push
jle
fmuls
out
insb
inc
subb
int
fidivrl
rclb
pop
outsl
add
mov
inc
xor
out
jo
dec
loop
or
push
pop
cmp
or
sbb
fdivrs
jns
imul
sub
out
gs
inc
fists
xchg
stos
lds
add
adc
push
insl
inc
xchg
sub
imul
mov
pop
lock
outsb
cmp
clc
jle
mov
push
inc
outsb
data16
inc
clc
fcmovnu
xchg
sub
lcall
js
cmp
inc
or
dec
dec
push
or
ss
dec
pop
jb
icebp
into
rolb
jae
lods
sub
push
jg
adc
ds
jae
fs
dec
jecxz
cli
ja
add
adc
jae
shll
loope
dec
dec
bound
lods
pop
in
out
sub
jp
lock
cmc
insl
dec
enter
sbbb
inc
je
inc
data16
jge
add
adc
push
cmpsb
outsb
std
pop
popf
pop
push
loope
mov
test
adc
loop
inc
inc
dec
pop
add
je
xlat
push
dec
inc
hlt
sbb
pop
pop
test
cmpsb
mov
mov
adc
lret
xchg
lods
cs
mov
mov
mov
ret
xchg
inc
movsl
mov
sub
test
ljmp
mov
add
mov
xor
or
adc
cmpsb
roll
jbe
dec
sub
inc
fldenv
mov
fwait
inc
mov
out
push
bnd
mov
dec
xor
inc
sbb
sbb
adc
mov
inc
dec
or
push
inc
cwtl
sbb
movsb
sbb
sub
pushf
stos
adc
lock
jle
addr16
aad
movsl
pop
sub
pop
sahf
add
frstor
repz
leave
inc
sub
xor
mov
aas
jno
adc
hlt
cli
xchg
repz
sbb
jmp
jge
test
jg
faddl
shll
mov
fildll
pop
shl
add
jb
fiadds
pop
and
mov
xchg
js
sub
stos
scas
andb
mov
outsb
cmpsb
imul
push
pop
inc
cld
mov
icebp
xor
pop
dec
adc
sub
sub
outsl
and
xor
jnp
xchg
mov
sbb
jmp
mov
orl
dec
out
sbb
push
xchg
popf
out
fstp
dec
push
jnp
mov
dec
pop
repnz
cld
js
gs
aam
sbb
jae
stos
push
repnz
push
jo
dec
adc
jbe
add
int3
in
pop
shll
mov
xor
jp
mov
mov
xor
addr16
xchg
dec
out
ja
add
sbb
fs
xor
jno
adc
mov
inc
or
lahf
pop
js
mov
sti
xchg
push
lcall
cmp
pusha
in
aam
mov
icebp
adc
add
sub
fbld
lods
call
adc
lods
inc
out
stos
xlat
adc
adc
ret
imul
mov
jne
or
insl
addb
pop
test
sbb
mov
lods
lods
xor
xchg
les
xchg
cmp
or
rcrl
pop
daa
mov
or
stos
adcb
push
rolb
dec
pop
je
dec
jmp
es
and
and
mov
popa
cs
mov
and
fistpll
and
dec
xor
pop
gs
add
sti
mov
and
adc
inc
pusha
in
mov
add
or
inc
sbb
popf
adc
push
les
aas
lea
dec
aaa
xor
jle
xchg
or
popf
adc
or
jae
lea
xor
out
add
clc
inc
sub
std
sub
lahf
pcmpeqb
dec
jae
in
push
push
fsubl
sbb
mov
stos
dec
push
lcall
outsb
int
sbb
mov
push
ljmp
cltd
mov
in
in
dec
cli
sub
inc
inc
lea
jne
out
rclb
push
clc
mov
jo
and
shlb
inc
cmpsb
and
xor
xchg
pop
jle
ret
mov
jno
je
inc
add
sbb
jl
and
mov
adc
aas
inc
or
add
std
or
jns
inc
je
ret
mov
pop
bound
sarb
fisttpl
cmp
pop
sub
inc
jbe
sub
or
stos
shrb
stc
addb
pop
outsb
inc
add
or
in
mov
add
sbbb
sbb
sbb
and
or
stos
dec
jmp
mov
loope
ftst
mov
cli
icebp
insl
cmpb
mov
add
push
test
icebp
in
mov
sarb
mov
shrl
jnp
pushf
mov
loope
xlat
xor
loopne
sbb
frstor
mov
add
inc
jmp
fldenv
inc
leave
lock
add
pop
pop
aam
hlt
xchg
mov
shl
sbb
or
pop
clc
sub
insl
lods
sti
fldt
mov
stos
fwait
cmpsb
inc
scas
mov
fs
mov
xchg
add
jbe
test
jmp
inc
popa
mov
dec
clc
jecxz
mov
or
dec
or
jae
es
out
cwtl
mov
cmp
cmp
cmpsl
mov
mov
xor
push
leave
sub
in
ret
mov
cmpsb
fadd
arpl
nop
mov
out
pop
pop
inc
or
jne
and
push
mov
in
add
rcl
mov
add
mov
repnz
xor
jae
test
dec
imul
mov
aaa
imul
fwait
and
cmp
sbb
leave
mov
rorl
dec
inc
loope
jmp
test
call
mov
and
pop
jns
mov
inc
int
or
push
rorb
sahf
out
pop
rcr
test
outsl
hlt
cmp
fnstsw
das
jns
jmp
or
inc
dec
lods
adc
or
hlt
popa
xor
jge
cmp
and
sub
add
jns
dec
mov
xchg
inc
out
popa
jne
xchg
cmp
adc
jl
shrl
int
add
repz
cmp
push
push
test
xchg
cmp
movsb
inc
sub
enter
xor
add
stos
sbb
push
mov
adc
jno
das
cmp
cwtl
xor
jb
xor
push
stos
pop
sub
xlat
pushf
lds
or
jle
gs
js
push
pop
mov
jno
movsl
lods
cwtl
sbb
pop
sbb
xchg
mov
adc
cld
xorl
jne
push
fs
xor
jbe
mov
aad
cmovge
push
gs
fnstenv
pushf
les
mov
or
roll
test
nop
or
pop
cmpsl
push
or
cmp
sbb
push
push
pop
or
in
cmp
popa
push
adc
xor
mov
stos
cs
mov
mov
pop
push
mov
mov
add
mov
nop
push
cli
cs
jg
xchg
mov
stc
divb
push
push
movsb
xor
inc
xchg
xor
out
inc
sbbl
add
cmc
xor
push
call
inc
jmp
sub
test
jp
inc
std
loop
mov
test
sbb
fisubl
cmp
push
mov
xor
into
rclb
add
pop
int
mov
or
mov
cli
je
inc
mov
fnsave
and
mov
orl
xchg
push
stos
inc
iret
loopne
or
cmp
popf
hlt
icebp
in
hlt
adc
fsubs
stc
sub
insb
jp
adc
loopne
arpl
dec
pop
mov
ja
lcall
jle
adc
pop
in
fwait
scas
add
test
pop
setg
lret
inc
jno
push
push
fs
jl
scas
inc
lea
xchg
mov
cltd
call
adc
adc
out
inc
xchg
xchg
mov
scas
ret
cmp
rolb
out
lock
jno
pop
int3
out
movsl
xchg
scas
adcl
push
jb
cmpl
lret
test
mov
cwtl
ljmp
mov
sti
fisttpll
xor
jns
adc
pop
jecxz
add
add
mov
add
pop
popf
mov
imul
out
sub
fbstp
cltd
lds
in
ret
add
cld
and
cli
sub
xorl
inc
lcall
xor
xchg
add
cmpb
sub
dec
pop
aaa
dec
mov
imul
sbb
dec
fists
sbb
cwtl
dec
cmp
or
jle
js
and
mov
es
push
jbe
add
cmp
jo
jl
incb
or
push
push
pop
rcl
add
dec
inc
arpl
stc
bound
mov
inc
cltd
jne
mov
jmp
js
xor
outsb
push
aam
or
cltd
cmpsb
lock
sarb
loopne
gs
insb
das
lods
xchg
or
jo
jl
shlb
jp
add
aaa
cmpsb
sub
in
pop
das
ficoms
sub
and
add
mov
jecxz,pt
and
inc
inc
daa
pop
mov
pop
dec
add
adc
cmp
pop
imul
leave
std
fnstsw
sbb
inc
sbb
add
faddl
dec
loop
inc
jne
mov
pop
sbb
insl
mov
xchg
mov
gs
xchg
fsubl
scas
sub
repnz
jmp
testb
and
push
dec
andb
xor
push
mov
mov
sub
imul
sbb
xchg
je
sub
push
sti
repnz
or
inc
push
popf
xor
mov
mov
fs
xchg
jle
inc
imul
push
adc
cld
or
mov
add
in
faddl
push
es
aas
aas
pusha
mov
push
mov
mov
add
sbb
mov
jno
cmp
dec
ds
mov
dec
or
push
and
inc
xor
sarl
xchg
cmp
lock
adc
mov
fcoml
pop
outsb
mov
pop
dec
int3
out
xchg
adc
mov
rcrl
pop
push
or
je
subl
lea
xor
addl
add
int3
add
fwait
mov
stos
mov
inc
ficoms
push
mov
cmp
jns
cmp
bound
push
fsubs
pop
add
repnz
ds
jns
iret
addb
orb
jne
inc
pop
xorl
jns
or
sbb
pop
repz
lret
rcll
outsl
or
inc
jmp
or
daa
sbb
cmp
mov
mov
aam
movsb
xor
xor
mov
inc
push
mov
add
or
and
push
inc
iret
call
jmp
inc
dec
ljmp
sub
movsl
test
jecxz
pusha
pop
add
sbb
dec
ss
xor
clc
xchg
arpl
inc
mov
je
lcall
stc
add
push
xor
xchg
dec
lock
inc
dec
dec
mov
sub
inc
add
adc
hlt
push
push
mov
cmp
fs
leave
sbb
test
dec
js
nop
jbe
push
es
test
aaa
mov
jno
mov
movsl
inc
dec
jecxz
jmp
push
call
insb
bound
aas
rorb
jne
push
push
push
pop
push
lea
lods
hlt
call
adc
push
sbb
mov
dec
inc
jo
inc
sbb
je
sbb
aam
dec
arpl
ja,pt
repnz
mov
sbb
sub
cld
or
mov
sbb
push
pop
fimuls
pusha
mov
or
js
add
sti
pop
jp
imul
mov
jbe
cmp
jle
jns
jp
sub
jo
in
xchg
daa
add
jb
test
pop
inc
inc
dec
inc
xor
ss
dec
stos
add
sbb
xchg
push
pushw
addr16
imul
push
sarl
lret
cmp
push
aaa
cltd
ficoml
pop
push
push
imul
mov
inc
cmp
movsl
sbb
mov
ja
push
xchg
imul
inc
into
adc
add
sub
mov
cmp
push
ret
dec
loopne
dec
lahf
int
ss
jns
dec
push
or
xor
jl
mov
inc
dec
pop
ret
jbe
sub
xlat
mov
fcomp
shrl
pop
stc
or
aam
inc
and
mov
rsm
push
dec
lret
push
push
imul
sub
cmc
iret
pop
mov
dec
xchg
push
add
or
fsubrl
dec
bound
imulb
mov
push
push
inc
cmp
push
mov
dec
popa
imul
movsb
shl
loopne
je
xchg
push
dec
imul
dec
imull
ret
cmpsb
imul
ret
inc
fdivr
popf
push
pop
dec
jmp
dec
mov
loope
xor
arpl
inc
clc
in
xchg
cmp
rcrl
mov
stc
das
scas
mov
rolb
jno
xor
sub
mov
xor
sbb
push
dec
cmpsb
sbb
outsb
outsb
add
bound
jecxz
lods
xor
sbb
add
imul
outsb
pop
test
mov
xor
xor
adc
popf
inc
mov
cmp
das
push
and
daa
jge
nop
dec
push
sti
fcomp
imul
xchg
jbe
xor
stos
lods
dec
lcall
push
pop
gs
push
gs
inc
aam
rol
mov
dec
sbb
add
dec
jo
outsb
inc
cwtl
adc
sub
pop
cmpsb
arpl
push
clc
inc
bound
fsubp
sbb
inc
dec
push
adc
jl
sbb
mov
or
rolb
imul
jge
xor
movsb
pop
pop
xor
ficoms
push
xchg
inc
dec
clc
inc
imul
outsb
push
scas
dec
mov
mov
lret
lahf
into
sbb
iret
mov
aas
addb
insb
sbb
jmp
jb
push
leave
js
add
into
adc
inc
dec
push
add
inc
xor
insb
sub
stc
rcl
dec
fsubr
insb
push
jns
ljmp
pop
inc
cmp
push
scas
clc
fs
push
in
push
push
popa
push
cwtl
mov
dec
sbb
cmpb
xor
or
ja
push
dec
pop
dec
add
dec
scas
lret
outsl
fists
outsl
inc
inc
or
outsl
ja
cmp
xchg
xor
dec
dec
imul
iret
insb
lods
and
mov
pop
xchg
in
pushw
dec
jo
push
flds
cli
and
push
int3
in
sahf
mov
data16
lods
sub
xor
and
rcrl
mov
or
mov
movsl
and
jno
imul
and
and
arpl
mov
pop
adc
fcomip
inc
xor
popa
ret
dec
dec
sahf
insl
adc
push
mov
mov
sub
mov
jecxz
or
sti
daa
mov
into
fsubrl
jge
sarb
push
inc
push
cmovnp
xchg
fsubrl
push
movsl
dec
dec
fdivl
dec
mov
mov
mov
adc
sub
add
sub
xor
movsl
inc
add
and
cs
dec
leave
sbbb
cmpsl
call
pop
aas
iret
ja
jp
and
je
ja
outsb
jbe
dec
nop
cmp
mov
mov
and
fcompl
cli
roll
jo
push
sbb
mov
pop
jne
inc
std
push
in
or
xor
enter
movsb
fcoml
or
ret
add
loop
fildl
sar
faddl
pop
adc
pshufw
push
in
stos
mov
mov
mov
adc
mov
jns
pop
sub
les
inc
lcall
push
fwait
mov
cmp
push
adc
les
add
xor
mov
stos
xor
add
xchg
adc
aam
cli
lods
mov
jg
mov
push
or
mov
int
clc
sar
mull
pop
mov
insl
add
mov
or
rolb
mov
sbb
dec
sar
nop
push
popf
push
add
clc
into
call
inc
movsb
jo
jecxz
imul
push
popa
jb
nop
ret
push
das
in
repnz
and
fistl
in
pushf
xor
inc
inc
xor
scas
add
jle
jg
aaa
popa
inc
cmp
mov
mov
jns
pop
xor
push
jae
dec
out
rclb
xchg
or
push
or
aam
jp
dec
cmp
jae
push
add
jp
jne
jno
mov
pop
aad
mov
rol
in
xchg
testl
dec
push
das
hlt
xor
leave
cmp
push
das
add
jmp
fsubrp
inc
or
push
imul
je
dec
pop
cwtl
mov
mov
push
imul
mov
push
leave
push
pop
nop
xorl
jo
mov
sti
inc
inc
pop
out
rolb
cmp
xlat
cmpsb
dec
pushaw
jno
inc
mov
test
mov
rcl
in
es
inc
sub
rorl
pop
js
ret
cmp
mov
pop
sbb
lea
mov
rorl
loope
fcoms
jmp
outsb
aas
std
sti
push
cmc
cmc
cmpsb
int3
add
cld
movsl
insl
outsl
adc
imul
enter
xor
mov
ret
xchg
out
data16
rclb
cltd
adc
cmp
pusha
and
add
aaa
lret
dec
lds
dec
xor
jo
test
push
fwait
popa
or
lock
inc
outsb
arpl
and
clc
outsl
push
out
add
dec
std
in
and
dec
sarb
dec
jnp
xor
mov
push
stc
push
inc
mov
gs
arpl
inc
jo
outsb
xchg
rorl
arpl
sahf
xchg
enter
dec
arpl
pop
mov
popa
stc
stc
sti
pop
xchg
sahf
pop
stc
add
xorb
fisubrs
dec
enter
clc
aam
mov
mov
stos
fwait
and
ret
jb
or
ss
sbb
push
dec
movsl
lea
inc
inc
nop
cld
xor
pop
outsl
iret
jno
fcoms
call
push
jle
jecxz
adc
imul
dec
inc
ss
add
xchg
mov
xchg
push
xor
adc
and
pop
push
xor
mov
cmp
xchg
inc
xor
add
pop
mov
inc
insb
sub
test
add
frstor
cs
dec
popa
aam
mov
clc
dec
xor
cmpsl
fidivrl
inc
push
push
push
js
in
mov
insl
fs
ss
xor
dec
test
adcb
pop
xor
icebp
mov
jne
call
sbb
xchg
cli
lock
push
jne
push
int3
dec
or
push
iret
xchg
add
ljmp
inc
addr16
sti
cmpsl
out
jo
mov
dec
imul
inc
js
dec
cmpsb
and
push
inc
repnz
pop
cmc
sbb
dec
inc
push
fisubrl
push
mov
jmp
clc
fidivrl
push
dec
inc
push
in
roll
cmc
imul
addr16
int
sahf
xchg
pop
xor
lea
push
sbb
sarb
pop
pop
inc
inc
pop
inc
or
dec
jne
in
lret
ret
mov
rcrb
dec
adc
push
jmp
mov
dec
in
sbb
cli
add
or
dec
pushf
dec
pop
inc
movnti
pop
shrb
push
xor
add
xchg
call
scas
repz
mov
insb
push
mov
or
and
lock
push
das
xor
xchg
ja
inc
dec
js
pop
clc
sub
imul
cmp
loop
test
lods
pop
xchg
ljmp
cmp
ss
mov
jmp
cli
ret
push
dec
gs
push
push
push
jg
shl
js
jns
cmpl
pop
push
inc
call
int
add
in
add
or
les
in
jmp
push
dec
pop
pop
mov
jecxz
sti
add
stc
push
dec
rcrb
inc
bound
dec
rcr
and
mov
jno
jae
or
mov
loop
dec
inc
fdivl
xor
or
stos
cli
mov
ss
leave
cmc
adc
das
paddusb
dec
adc
sbb
enter
test
dec
lds
les
pop
jnp
cvtdq2ps
mov
inc
movsl
ret
inc
popf
xor
mov
xchg
push
sbb
xchg
cmp
xor
out
pop
inc
insb
push
fcompl
scas
lds
lcall
xor
mov
adc
jbe
or
mov
push
xchg
mov
mov
sbb
cmpsb
inc
dec
aad
push
leave
cwtl
stos
stc
xchg
xor
imul
push
or
push
mov
shlb
adc
shrb
fisttpl
sbb
pop
push
sbb
fcompl
sbb
xchg
push
dec
mov
cltd
je
imul
push
and
cli
inc
xchg
nop
pop
dec
jg
inc
add
inc
das
add
xor
adc
add
xor
rcll
mov
jnp
mov
stos
xor
shll
mov
sbb
or
dec
mov
sahf
outsl
and
nop
pop
scas
mov
in
lds
aam
mov
sbb
stc
xchg
adc
sub
pop
inc
add
leave
fcompl
shr
stos
push
jo
push
imul
jl
adc
jns
mov
gs
loope
sbb
pop
jecxz
or
ljmp
pop
dec
dec
rcrb
insl
out
movsb
test
scas
add
push
xor
add
cmp
mov
test
push
sub
and
lret
add
mov
sub
gs
shlb
subl
jle
pop
pop
add
fwait
or
cmp
fistpll
sub
push
inc
call
ljmp
outsl
add
insl
jmp
push
pop
dec
inc
jns
or
mov
pop
test
dec
push
inc
mov
push
push
push
push
and
popa
mov
xor
push
push
jmp
mov
push
es
mov
dec
push
es
pushl
mov
out
jb
data16
insl
dec
mov
mov
inc
cmp
incl
roll
dec
mov
pinsrw
inc
into
js
push
je
lock
outsb
jmp
add
or
repz
test
xabort
test
test
stc
mov
cmc
or
mov
push
jbe
loop
inc
pop
outsl
xchg
push
jmp
jne
inc
inc
inc
push
push
jne
inc
mov
lock
xor
notl
sbb
in
xchg
dec
push
cmpsb
push
push
dec
push
dec
mov
pop
pop
movsb
in
mov
dec
cld
sti
aam
mov
push
shll
loopne
push
ret
jne
add
jo
imul
shl
jne
add
cli
fildll
call
mov
loopne
inc
mov
cmpl
jge
nop
cltd
pop
sub
sbb
movsb
stos
rol
js
inc
xchg
adc
daa
stos
in
pushf
shlb
call
sub
inc
decl
mov
hlt
int3
jecxz
push
or
pop
pop
orl
xor
fldt
inc
mov
sbb
in
jecxz
push
cmp
cmp
jne
roll
inc
lock
and
push
xorb
xchg
pop
mov
dec
xchg
jnp
cwtl
test
and
xchg
mov
shrb
add
push
fwait
loope
test
cmp
enter
adc
push
pop
and
mov
test
aad
xchg
inc
add
add
push
fsubs
in
jl
lret
add
xlat
inc
mov
inc
push
mov
push
xchg
pop
sbb
inc
and
call
test
inc
fwait
jp
pop
adc
and
mov
mov
add
and
int
lea
sub
xchg
sbb
enter
nop
pop
out
rol
pop
rcrl
mov
adc
out
add
sbb
pop
lea
or
sub
inc
mov
sub
sbb
add
push
or
adc
ret
sbb
mov
mov
mov
fisubrs
cmpsl
jbe
dec
rol
faddl
lcall
inc
cmpsb
push
jecxz
jns
fcom
ljmp
lret
shlb
movb
dec
adc
mov
mov
and
mov
nop
mov
push
sub
stos
sbb
and
mov
sbb
mov
inc
cld
les
push
cltd
test
ds
popf
xor
loopne
pusha
add
push
fcompl
dec
xor
mov
test
pop
xor
add
jmp
mov
aas
or
pop
xlat
fldl
pop
xchg
mov
add
out
rcll
add
nop
add
sub
sbb
or
pushf
rorl
cmp
out
mov
cmp
outsl
lods
stc
fcomps
jne
fldt
inc
fcoml
inc
xor
fbld
adc
repnz
add
cmp
lahf
mov
jne
icebp
add
fucomi
movsb
decl
aad
sub
mov
ret
mov
int3
mov
adc
out
fisubs
dec
dec
xchg
jne
pop
inc
pop
xchg
jp
cmp
xor
adc
jle
test
or
add
hlt
fldcw
inc
jae
ret
insl
adc
jp
jne
cmc
add
lods
leave
out
test
sub
movsl
jmp
push
pop
xor
fwait
addl
fmull
nopl
call
sub
adc
jae
mov
xchg
adc
jb
imul
mov
je
mov
add
pop
ret
inc
xor
bound
and
inc
cwtl
inc
call
iret
or
arpl
into
sub
ja
dec
cmp
dec
mov
push
add
into
dec
add
jg
pushf
xor
mov
loope
inc
mov
dec
ljmp
add
add
jb
stos
cltd
or
andb
aaa
pop
fs
test
xchg
adc
push
movsb
add
push
aam
stc
xchg
mov
jp
fadds
dec
pop
out
sub
push
or
jae
addr16
subb
ret
adc
das
mov
shll
inc
pop
ret
jb
push
addl
ds
cmp
mov
prefetch
inc
xor
add
orb
mov
push
iret
movsb
aas
jmp
sti
lods
sahf
outsb
sub
sbb
mov
add
mov
shlb
inc
cmp
rol
push
jp
jbe
fadds
inc
jno
dec
xchg
sub
js
mov
gs
ss
cwtl
aaa
cld
dec
clc
cmpb
fadds
push
sbb
xor
xor
lcall
jl
pop
mov
imull
push
lahf
or
cltd
push
dec
mov
xor
into
mov
bound
dec
call
mov
ret
add
jg
dec
ret
clc
push
pop
jo
lea
mov
dec
or
rclb
cli
cmc
nop
jo
cmpsb
imul
sbb
inc
inc
pushf
fisubs
add
xor
arpl
es
and
arpl
and
loop
cmp
xor
ljmp
push
imul
ret
dec
shr
fbstp
call
movsl
lahf
sbb
loopne
sbb
xchg
in
pop
dec
xchg
push
pop
call
bound
pusha
repz
push
push
xor
ret
je
in
add
paddq
add
jno
jl
inc
inc
cld
jmp
jbe
clc
and
fidivrs
push
fdivl
inc
dec
inc
cmpsw
adc
ss
jno
aam
push
shlb
pop
inc
add
or
mov
ljmp
nop
loopne
loopne
or
or
in
ret
xchg
mov
and
inc
dec
jae
pusha
push
dec
adc
xor
outsb
xchg
jmp
gs
mov
xor
cmpsl
aaa
mov
push
push
insl
jae
xchg
xchg
jge
aad
insl
stos
mov
push
push
ja
icebp
inc
mov
loope
scas
jmp
inc
xor
subl
xor
pop
repz
in
ljmp
jno
xorb
push
arpl
test
cltd
push
data16
and
sub
les
pop
sub
adc
fmuls
jne
sub
dec
adc
je
jle
rorb
jns
addr16
mov
dec
test
test
sbb
inc
xor
cmp
lock
imul
gs
jle
mov
outsl
dec
outsb
mov
addr16
xor
js
das
or
mov
inc
pop
mov
imul
ror
lcall
xor
push
jne
mov
into
sub
popa
inc
push
ret
ss
push
xchg
shlb
sub
pop
out
inc
test
mull
lret
roll
pop
lcall
cld
cmpsl
pop
in
shll
add
cmp
out
arpl
dec
pushf
lock
pop
mov
fildll
jbe
mov
add
push
stos
xchg
jo
pop
sub
les
jne
lods
pop
pop
filds
inc
push
sub
dec
lea
xor
mov
call
ljmp
outsb
mov
nop
icebp
repz
mov
push
fucomip
inc
call
inc
in
out
mov
dec
ret
mov
inc
pusha
xor
in
bound
xchg
and
imul
hlt
mov
dec
inc
inc
shlb
sti
imul
inc
imul
dec
add
pop
shrl
pop
inc
mov
inc
stos
push
dec
push
adc
sbb
jb
outsl
aaa
dec
jp
inc
int
add
cli
pop
jl
inc
lock
jb,pn
mov
cmp
cwtl
xor
jns
pop
loop
pop
imul
dec
adc
xor
pop
das
test
push
xor
scas
jmp
jo
xorb
mov
xchg
dec
dec
aad
mov
jae
lock
imul
adc
pushf
cmc
add
bound
mov
sub
stos
mov
xor
int3
testl
movsl
and
ja
mov
inc
mov
lcall
cmp
push
fdivrs
popf
xchg
lea
push
jo
xor
mov
dec
rorb
or
addr16
dec
outsl
and
jae
inc
or
jns
xor
lahf
xchg
jb
imul
dec
mov
fmul
mov
sahf
call
test
lock
out
icebp
and
aas
xchg
add
xor
dec
test
and
adc
inc
mov
icebp
dec
push
push
push
dec
pop
call
pop
popa
shrl
push
das
inc
push
xor
stos
js
orb
scas
adcb
mov
sub
jo
xor
es
pop
mov
ret
je
aaa
xchg
lock
or
jb
push
stos
or
or
rolb
cmpsb
add
xchg
shrl
or
dec
in
mov
add
jb
inc
shlb
jns
in
dec
icebp
or
jle
push
lret
insl
mov
push
bound
xchg
mov
cmp
push
clc
add
inc
inc
mov
push
decl
js
rdpmc
add
ror
jo
test
adc
push
sti
add
mov
cmp
or
in
and
add
std
lahf
mov
cmc
fildll
sarl
loopne
aad
inc
lea
xchg
adc
mulb
mov
mov
inc
or
je
mov
sbb
loop
push
test
dec
aaa
and
insb
std
test
inc
push
cli
mov
test
mov
movsl
jo
ss
mov
push
mov
int
inc
mov
jne
add
lret
mov
or
call
adc
or
add
mov
inc
mov
test
arpl
cwtl
rcrl
lock
and
ret
test
inc
aas
inc
out
fldt
xor
outsb
orb
add
adc
dec
inc
ror
lods
jecxz
lock
loope
aaa
jnp
cs
addr16
xchg
xchg
sarb
es
sub
push
sbb
lret
add
pop
cmc
pusha
xor
in
orl
add
push
xchg
dec
jge
int3
or
stos
int3
mov
mov
add
push
popa
add
cmpsl
es
mov
xor
psllw
movl
hlt
push
xchg
xor
xchg
inc
cmp
add
push
aad
inc
stos
xchg
sahf
test
dec
mov
or
and
jl
sub
repnz
fiadds
adc
rol
xchg
adc
inc
mov
cmp
and
shll
lods
mov
ret
and
sub
push
hlt
aam
stos
adc
popf
pop
mov
jmp
add
mov
cmpsb
mov
dec
stc
mov
ret
inc
adc
mov
cltd
pop
cmp
test
xor
adcb
adcb
jp
in
xchg
lods
arpl
stc
pop
mov
insl
outsb
dec
cmc
loop
or
fs
dec
xchg
sub
popa
mov
jo
daa
sbbl
ret
cmc
hlt
sbb
fcomps
cmp
cmp
xor
shrb
inc
mov
mov
aas
addr16
fsubrs
fdivr
mov
es
adc
adc
or
orl
xor
faddl
cld
and
dec
cmp
andl
xchg
test
scas
sub
xchg
add
imul
test
lods
lar
sub
add
shlb
pop
xor
enter
sbb
sbb
lock
and
sbb
es
dec
push
adc
mov
ja
dec
xlat
dec
lock
bound
xor
les
mov
out
push
push
and
mov
rolb
mov
add
stc
es
stos
outsl
add
mov
sub
xor
add
pop
or
or
jne
addr16
outsl
ss
sbb
or
inc
inc
aam
out
call
jle
icebp
xor
test
iret
push
adc
sbbl
pop
imul
and
push
xchg
lcall
aad
data16
or
or
mov
outsl
mov
or
and
insl
out
push
push
jo
arpl
mov
push
pusha
test
inc
data16
and
js
cltd
add
shll
test
mov
fdivl
mov
mov
jno
jp
shlb
lods
pop
pop
push
in
iret
dec
out
pushl
xor
push
fldt
add
xchg
addr16
jno
sub
fsub
addb
or
fs
into
scas
mov
insb
stc
push
dec
or
lcall
out
pushf
sbb
pop
mov
jmp
inc
add
mov
andb
jbe
adc
shlb
insb
pop
push
xchg
jbe
dec
jo
dec
ret
gs
pop
xor
js
icebp
and
iret
push
imul
nop
push
mov
fs
pop
out
and
ret
inc
mov
push
push
fisttps
add
aam
ret
inc
clc
fildl
inc
xor
test
ret
push
fmuls
mov
push
dec
das
inc
mov
adc
and
add
adc
jne
mov
sbb
sub
fnstcw
pop
push
or
adc
jg
fidivl
aad
dec
out
mov
stos
add
mov
or
or
cwtl
in
pop
mov
aaa
or
rorb
adc
aaa
add
push
sub
push
dec
add
sbb
jge
clc
test
jb
and
ss
cmc
inc
ljmp
mov
and
inc
shlb
iret
push
shll
ror
adc
xchg
dec
sbb
xlat
testb
sub
dec
outsl
push
push
aas
insb
xchg
adc
lahf
mov
fistps
mov
fmul
sub
pop
or
lods
les
mov
mov
mov
movsl
push
les
add
mov
jbe
sbb
shrl
lds
das
xchg
nop
in
bnd
lret
inc
adc
jle
in
stc
nop
mov
cltd
pop
decb
loope
std
xor
xchg
xchg
sub
mov
sbb
and
fcomps
cmp
iret
ja
clc
addb
push
xor
pop
in
pop
jmp
jne
aaa
ret
inc
enter
sbbl
cmp
xchg
pop
jb
mov
mov
jae
xor
rcll
xor
push
test
dec
sub
cld
mov
pop
fcmovu
mov
adc
xchg
adc
pop
ss
sub
arpl
loope
stos
out
mov
lahf
stc
cwtl
out
or
sbb
notb
push
mov
dec
clc
xchg
cmp
xchg
push
in
xchg
ss
dec
push
popf
rorb
das
leave
sbb
adc
inc
lret
xor
imul
sub
push
push
add
xlat
repz
cmp
pop
pop
push
loopne
mov
aam
fbld
pop
pop
daa
ss
mov
xchg
pop
mov
push
pop
inc
dec
lcall
push
add
arpl
das
cmpsl
fnstcw
in
adc
andnps
das
ret
mov
xchg
xlat
ficompl
popf
repz
inc
or
jns
adc
test
xchg
clc
xor
jge
test
outsb
rolb
cli
add
pop
icebp
cmp
mov
xchg
inc
out
mov
inc
xchg
inc
mov
test
inc
mov
and
adc
in
sbb
jne
push
mov
das
push
ljmp
jbe,pn
repnz
add
lret
leave
mov
add
rolb
cwtl
orl
push
cmp
or
daa
mov
movb
jb
pop
cmc
inc
out
lods
jecxz
je
mov
xor
jmp
in
sbb
mov
jmp
mov
loope
repz
addr16
les
int
dec
pop
imul
add
loope
xorb
sub
jo
jae
nop
dec
cmp
adc
push
test
ljmp
hlt
gs
daa
loopne
fidivl
cltd
dec
leave
daa
loope
movsl
out
dec
jmp
aam
inc
mov
cmp
or
cmp
dec
negb
cmpb
popa
or
push
cmp
imul
and
jnp
out
ljmp
or
fstl
insl
or
stos
rorb
jns
xor
mov
fmull
xchg
pop
rclb
inc
aaa
xlat
add
inc
jle
sbb
int
aaa
rclb
fcomps
ffreep
cmp
push
or
cmpsl
sbb
adc
or
cmp
xchg
rcrb
cltd
sbb
scas
loop
add
fdivrl
or
push
out
inc
sti
fisubrs
mov
and
jbe
mov
xchg
adc
mov
mov
dec
lahf
ficoml
in
inc
loope
in
das
mov
sahf
add
mov
jp
lea
je
mov
imul
test
sbb
enter
add
pop
ret
roll
les
je
or
adc
pop
pop
call
xor
inc
fcompl
in
mov
pop
mov
fs
cmpsb
clc
adc
and
lea
cmpl
add
lods
dec
inc
loopne,pn
daa
jb
cmp
leave
ret
add
push
inc
cmpsb
movb
inc
psraw
daa
mov
sbb
in
cmp
ror
and
jno
inc
test
xchg
pop
add
add
sbb
jb
mov
test
sbb
pop
add
jmp
inc
incl
xlat
outsl
push
cmp
add
stos
sub
pop
js
inc
fstl
xor
sbb
jo
add
out
mov
mov
jle
dec
bound
add
call
sbb
arpl
push
push
push
pop
dec
dec
insl
or
dec
test
sbb
mov
pusha
aaa
dec
xchg
push
adc
jo
popf
ret
jb
shrb
test
loope
inc
stc
and
or
stos
inc
and
inc
mov
shll
sbbl
fdiv
callw
jmp
mov
push
inc
cmp
inc
loope
inc
inc
push
cmp
mov
and
xchg
cli
or
dec
das
dec
outsl
into
nop
jecxz
aam
addl
xor
mov
push
dec
outsl
addr16
xchg
mov
stos
adc
nop
add
add
push
push
push
dec
loopne
jg
lock
loop
mov
pop
cli
aaa
ljmp
dec
loop
sbb
loop
mov
mov
pop
insb
xchg
cmp
cmc
popf
pop
enter
je
add
je
adc
shrl
mov
push
out
outsl
aas
inc
lea
jecxz
jp
orl
inc
in
divps
lcall
shlb
mov
lock
loopne
lods
cli
data16
add
repz
inc
ret
push
inc
lcall
repz
cmpl
mov
fsubrs
and
cmc
outsl
movsb
add
jo
sub
add
loop
shlb
mov
and
sbb
and
add
pop
and
dec
les
je
into
pop
lds
jne
scas
push
cmp
pop
sub
enter
sub
inc
cmp
mov
xchg
sbb
add
xchg
mov
shll
add
cmp
clc
jne
test
leave
and
sub
sub
test
jne
pop
addl
cmp
out
pop
adc
add
or
mov
clc
lock
in
sub
lock
ja
inc
lods
aas
rcr
outsl
xchg
dec
xchg
lcall
lret
mov
in
call
mov
mov
lahf
adc
outsb
icebp
push
outsl
cli
mov
daa
or
rolb
in
flds
repz
jp
addr16
js
daa
cmc
in
fcompl
cmpsb
dec
fistps
lock
xor
jmp
xlat
es
dec
aad
jmp
dec
xchg
cmc
loopne
xchg
fsubs
xor
adc
xchg
imul
push
test
add
nop
xorb
dec
shrl
lock
add
cmp
jl
add
adc
inc
inc
leave
enter
repnz
and
and
inc
rcl
mov
sarl
push
adc
stc
pop
jge
mov
addr16
nop
sbb
movsb
loope
movl
or
in
xor
shrl
lret
sub
sbb
dec
test
or
add
cld
add
mov
in
or
jnp
mov
rolb
addl
dec
jle
mov
out
outsb
pushl
sahf
mov
icebp
lahf
dec
add
sar
orl
pop
rcll
mov
add
dec
jb
andb
adc
sbb
push
adc
pop
and
push
or
mov
icebp
push
xchg
hlt
std
pop
sub
adc
cmp
add
aas
mov
in
rcr
mov
add
sbb
pushf
mov
xchg
sub
ret
mov
xor
add
xchg
aad
mov
xor
inc
scas
sbb
lea
sbb
aam
ja
arpl
jo
leave
cmpl
mov
test
arpl
inc
orl
movl
mov
aas
mov
ret
jle
jmp
lret
rolb
xor
push
pop
call
xorl
cwtl
jnp
mov
in
aam
lods
cmp
adc
dec
loope
shll
sub
inc
xor
mov
out
std
sub
lahf
add
dec
push
xchg
stos
inc
scas
fnsave
dec
and
clc
pop
pop
dec
lea
and
and
mov
or
xor
enter
movsl
push
add
call
adc
les
xchg
xchg
xlat
fstps
or
or
pop
js
sub
mov
and
cmp
mov
inc
sar
out
xchg
and
std
xor
in
dec
push
insl
mov
jp
add
push
movsb
js
mov
and
add
xor
xor
addl
fldcw
inc
ret
aaa
push
push
fldt
sahf
pusha
or
add
orb
or
lcall
dec
mov
in
mov
fwait
aaa
mov
jo
and
lahf
cmc
in
mov
xchg
nop
cli
setns
out
and
out
fisubrl
xlat
pop
into
xchg
dec
ss
movsb
adc
fwait
test
and
push
cld
push
inc
push
inc
mov
add
aam
add
push
dec
jae
pinsrw
cld
jae
xchg
je
add
pop
jne
push
add
popf
lods
cmpsb
or
push
jno
stos
into
into
fildl
repz
mov
dec
rcrb
movsb
mov
jbe
inc
add
icebp
mov
je
inc
ret
xor
adc
mov
inc
add
aam
add
shl
inc
push
enter
mov
cwtl
arpl
dec
test
xlat
dec
call
dec
inc
insl
mov
lods
and
dec
ja
xchg
insl
es
dec
testb
nop
popf
repnz
sbb
dec
dec
push
xchg
clc
mov
dec
les
or
sbb
stos
dec
dec
inc
sbb
je
lahf
pop
aam
dec
xchg
testb
pop
aaa
add
daa
lcall
insb
dec
push
test
add
inc
and
shll
cmc
lock
xchg
movsb
sub
push
es
push
xor
int
les
push
rorb
aaa
sub
stc
insb
call
fdecstp
xor
stos
arpl
and
jns
adc
stos
add
loopne
inc
inc
dec
ja
ljmp
sbb
sub
adc
enterw
dec
dec
rol
adc
push
xchg
iret
push
jbe
inc
push
mov
rcrb
sbb
rolb
jl
mov
inc
push
push
out
cmp
xchg
inc
iret
rorl
dec
addr16
dec
add
push
out
call
xor
data16
inc
dec
mov
cld
ljmp
aam
xchg
rorb
xor
sbb
out
push
jp
pop
xchg
in
adcb
jne
popa
push
mov
nop
inc
mov
orl
cltd
xor
inc
inc
xchg
ficompl
push
je
lock
pusha
cwtl
loope
push
mov
push
data16
and
out
jle
arpl
testl
inc
lods
inc
cmc
xor
gs
sarl
jne
push
ss
dec
inc
inc
aam
pop
pop
pop
pusha
sbb
push
or
jbe
stos
sub
mov
push
aas
add
xor
xchg
mov
push
lock
inc
dec
jbe
push
addr16
jns
xchg
add
inc
inc
loop
pop
or
cmp
dec
push
rcrl
hlt
jno
dec
lock
mov
inc
add
arpl
sahf
add
xor
mov
test
inc
dec
jo
pusha
mov
inc
xchg
jne
arpl
out
jbe
jecxz
jmp
adc
and
xor
mov
add
inc
xor
pop
mov
imul
imul
and
dec
push
in
mov
imul
addl
enter
push
xor
test
cmp
mov
or
add
inc
addr16
push
fnstsw
flds
popf
out
rcl
je
mov
ret
push
mov
out
dec
cmpsb
sub
mov
adc
out
cmp
push
inc
fiaddl
dec
jns
fdivs
jl
shrb
lret
mov
es
pop
ljmp
lods
inc
scas
dec
addr16
dec
or
inc
call
call
add
push
ja
mov
popf
xor
dec
push
jmp
call
lret
xchg
fdivrs
dec
push
xchg
xchg
push
or
xchg
xchg
xor
or
mov
or
mov
hlt
gs
cltd
lret
sbbl
xlat
mov
inc
mov
test
mov
add
cli
push
push
inc
cmp
dec
ja
shll
sbb
xchg
sub
push
or
mov
popa
cmpsb
repz
adc
lods
mov
cmp
dec
pop
cld
jne
iret
or
addr16
not
repz
scas
dec
rol
xor
add
addr16
jb
xor
lea
push
insl
cwtl
pop
xchg
pop
adc
xor
das
cmc
sub
or
or
mov
popa
pop
stc
inc
xor
sbb
mov
pop
mov
pushl
mov
fisttps
push
push
pop
fisubrl
sub
orl
jmp
sarb
clc
popa
je
mov
add
cli
inc
jmp
fcoml
pop
shl
jae
lcall
out
jne
dec
xor
dec
int
xor
stos
inc
repz
fiaddl
iret
jge
insl
mov
jns
jmp
sahf
and
pop
inc
mov
xchg
jecxz
sbb
rorb
jl
dec
js
outsb
pop
insb
dec
inc
push
mov
popa
push
or
mov
cmp
and
scas
and
ja
clc
cmpsb
add
xchg
or
outsl
mov
ret
xchg
cmp
int3
fwait
adc
das
testl
loope
cltd
dec
adc
notl
sub
dec
ss
inc
jmp
aas
dec
mov
bound
out
dec
dec
inc
ljmp
mov
dec
ffree
out
cs
or
push
jns
stc
fsubp
sahf
mov
imul
push
in
or
data16
lea
cmp
pop
or
lret
cli
ror
push
sub
inc
jno
jae
cmp
mov
cmp
jge
sarl
ret
pop
push
mov
push
push
or
add
sub
xor
sub
or
pop
mov
push
imul
loopne
jg
inc
push
stos
leave
push
sbb
sbb
or
gs
push
aas
cmpsl
jbe
pop
out
js
iret
adc
xor
xor
dec
insl
xor
mov
sarb
hlt
mov
test
add
inc
and
mov
cmp
icebp
or
sbb
rcll
xor
xor
mov
pop
pop
adc
mov
cmp
adc
or
clc
mov
rorb
dec
push
pop
lods
jge
test
icebp
iret
repnz
add
or
sbb
add
adc
sti
mov
lret
adc
and
lds
test
shlb
bound
jge
and
addr16
or
out
scas
es
pop
mov
jmp
mov
mov
jo
push
movsl
push
int3
xor
and
sub
add
cmpsb
sbb
pop
lahf
push
and
push
test
push
pop
mov
in
sub
cmpsl
fdivl
jno
imul
push
fxtract
shrb
push
mov
xor
scas
push
addr16
jmp
and
sbb
loop
xorl
and
jae
or
or
js
scas
add
push
aas
enter
cwtl
cmp
rorb
repz
sub
push
adc
lret
adc
jo
jbe
mov
add
shrl
arpl
shrl
adc
mov
call
sbb
xchg
sahf
add
mov
call
jbe
pop
push
insb
filds
dec
fstps
aas
addl
or
hlt
cmpl
or
in
pop
mov
inc
add
xor
sbb
test
dec
test
xchg
in
inc
adc
adc
hlt
bound
jmp
int
jmp
inc
and
popf
in
shr
and
call
cwtl
adc
add
mov
movsl
mov
aad
int
orb
sub
adc
movsl
or
inc
add
ret
add
cmpb
iret
sub
xor
add
out
das
rclb
jge
adc
dec
xchg
outsb
sti
rcrl
push
aad
sbb
pop
sbb
lods
cmp
mov
jle
neg
xchg
xlat
mov
inc
loope
mov
jecxz
xchg
mov
jbe
push
nop
mov
lds
mov
add
inc
aam
jno
xlat
popf
xor
cmp
stc
jae
push
dec
adc
mov
subb
xchg
add
stos
and
aaa
add
dec
repnz
cmpsb
add
fmul
cmp
je
iret
mov
push
pusha
add
je
push
sub
push
or
adc
mov
aas
and
xchg
mov
mov
inc
cmp
push
sub
mov
xchg
mov
pop
xor
dec
lock
cmp
cmpsb
add
ja
adc
daa
fnstsw
inc
sbb
in
cli
mov
loopne
dec
add
jo
insl
or
adc
js
sbb
shll
daa
xor
pop
mov
push
and
ret
jno
inc
cmp
lahf
pop
mov
sbb
scas
outsb
jno
add
dec
out
inc
cmc
mov
cmp
sarl
sub
or
xchg
dec
mov
mov
pop
jmp
es
addb
or
xchg
sbb
lret
add
xchg
fadds
mov
mov
aaa
add
popa
mov
push
mov
ljmp
mov
push
or
mov
pop
ss
xor
clc
mov
lcall
or
call
push
dec
mov
fnstcw
dec
cmp
outsb
movsb
xor
pop
das
aad
int3
pushf
sub
and
dec
mov
jmp
push
dec
jb
dec
dec
loope
imul
inc
jns
mov
add
addr16
dec
in
jne
dec
dec
push
mov
or
or
inc
cmp
mov
jmp
push
xchg
ret
jne
inc
fs
pusha
pop
sti
xor
inc
in
push
push
repnz
out
push
push
sub
dec
mov
mov
dec
ficomps
mov
cmc
imul
dec
jb
and
dec
outsl
bound
inc
dec
movsl
roll
xchg
inc
sbb
popa
add
jb
pop
jmp
inc
clc
inc
add
or
rolb
mov
dec
cmpsl
or
hlt
sarb
and
loopne
lcall
mov
nop
dec
inc
inc
mov
pop
add
ljmp
sub
sarl
or
pop
cmpl
shlb
mov
dec
push
arpl
aam
ret
jmp
hlt
movsl
incb
enter
lock
jb
pop
inc
dec
addb
pop
xor
test
and
jmp
rclb
fdivrp
out
mov
inc
jle
lret
mov
imul
outsl
loop
int
xchg
fs
push
inc
outsb
idivb
push
pop
cmp
bound
out
nop
push
jo
xor
xchg
xchg
into
imul
inc
xor
psadbw
pop
add
mov
dec
movl
ss
add
mov
icebp
jecxz
ret
mov
xchg
push
push
insl
hlt
adc
cmc
push
push
outsl
jmp
jae
dec
push
fmul
inc
cmp
insl
sbb
out
xchg
lods
mov
jns
sbbl
push
mov
ret
dec
lods
repnz
mov
add
imul
push
push
xor
icebp
pop
stos
cwtl
stc
xchg
popa
dec
inc
inc
push
fs
movsl
in
int3
and
push
cmp
das
cmpsb
and
mov
push
push
or
int
add
push
adc
add
lock
push
adc
sti
mul
pop
push
mov
in
dec
push
cmpsb
xor
cmpl
call
cs
xor
pop
mov
ret
addl
or
xchg
inc
scas
scas
stos
out
dec
mov
adc
and
add
add
inc
lcall
mov
rcrl
sub
cmp
pop
pop
in
pop
in
inc
adc
insl
neg
insb
clc
arpl
inc
inc
pop
adc
fadds
cmp
hlt
mov
dec
mov
insb
ljmp
jb
push
add
rclb
push
popa
push
pop
hlt
cltd
lock
rcll
scas
lcall
mov
add
cmp
and
sbb
jge
xor
out
nop
je
insl
inc
call
inc
mov
stc
ret
or
ss
scas
sahf
push
loope
mov
scas
push
sub
push
cmp
lock
enter
rcrb
xchg
mov
push
mov
push
and
cli
sbb
cs
jmp
fwait
dec
push
imul
aam
cmp
add
shr
mov
popl
cmp
inc
test
xor
push
push
push
test
loopne
mov
and
adc
pop
cmc
cmova
push
cltd
enter
jns
cmp
nop
stos
mov
inc
fdivs
outsl
and
jns
add
sub
cmp
ja
movsl
adc
adc
jo
inc
icebp
cmp
or
or
cmp
push
pop
and
fs
inc
int
sti
jne
sbb
jno
jg
lds
test
inc
inc
push
stos
lods
test
mov
in
sbb
test
sahf
pop
cmp
add
sub
nop
mov
push
fstl
loopne
mov
sahf
in
push
jns
loopne
aas
add
mov
or
fdivr
or
out
stos
sbb
xchg
sbb
call
hlt
pop
fmull
add
adc
push
dec
and
pop
mov
lods
bound
mov
iret
out
xor
adc
inc
rcrl
and
testb
incl
xchg
push
loope
testb
addl
ret
fwait
xchg
imul
inc
add
push
push
push
cmc
ja
testb
cmpsb
mov
mov
pop
xor
dec
out
std
sbb
sbb
xchg
jb
inc
jns
rcr
popa
add
dec
adc
sbb
dec
dec
inc
mov
in
arpl
fdivrl
mov
push
dec
ret
mov
jecxz
shlb
jmp
sbb
dec
ret
pop
dec
dec
push
ret
mov
or
popf
and
inc
dec
mov
les
inc
inc
dec
nop
mov
adc
push
js
dec
dec
nop
loopne
cmp
add
pop
mov
mov
jp
inc
roll
int3
push
or
lcall
mov
pop
into
int3
xchg
mov
std
nop
stc
inc
push
dec
cmp
popa
popa
jle
mov
inc
push
add
cmpb
setns
ss
push
dec
adc
or
or
mov
insb
outsl
push
sbb
lret
bound
xor
clc
sarl
loopne
jns
push
jnp
sahf
pop
xchg
jp
jae
xchg
pusha
push
jge
dec
cmp
cmpsb
add
cmc
mov
push
shrb
mov
jne
inc
js
insl
fmull
pop
add
xchg
or
in
inc
push
mov
test
popf
push
inc
pushl
add
test
jbe
fucomip
xchg
subl
dec
js
lods
push
loope
imul
das
cmpsb
hlt
dec
addr16
dec
imul
adc
mov
dec
push
loop
xor
insl
dec
dec
out
movsb
fsubrl
das
inc
dec
inc
dec
xor
dec
jb
jl
imul
push
bound
xchg
aam
inc
push
mov
jb
movsb
test
jl
inc
xor
dec
and
ja
xor
add
movsb
inc
xor
xor
outsb
inc
movsb
mov
loope
cmpb
movsb
lds
fmuls
mov
cmc
out
fxch
mov
mov
xorl
aaa
push
jno
out
xchg
inc
rcr
out
jmp
out
ret
inc
insb
mov
outsb
sbb
test
and
je
insl
push
dec
ror
test
push
mov
loope
outsb
push
in
lahf
js
cs
mov
xor
bound
insb
stos
fs
orb
in
dec
cmp
mov
dec
mov
mov
jb
ss
pop
pop
mov
xchg
jne
dec
bound
xor
xchg
inc
movsl
fisubs
push
xor
lods
adc
mov
fs
adc
lods
insl
popf
mov
in
mov
adc
jecxz
js
addr16
ret
push
lcall
mov
jp
sbb
sub
or
dec
cmp
dec
and
pusha
sub
test
popa
out
push
cli
jl
xchg
jne
inc
jmp
push
out
sbb
xchg
cmp
mov
shll
jb
add
shll
loopne
test
jl
push
xor
stos
loopne
inc
mov
aam
fnsave
mov
rcrb
jnp
inc
jp
shll
cmp
push
dec
and
dec
sub
push
fs
fsubl
ss
jl
push
es
ja
lret
js
je
cs
insl
insl
add
cmpsl
mov
push
je
inc
inc
pop
push
inc
test
scas
cmp
or
decb
pop
pop
addr16
cmpsl
sub
mov
lea
sub
cmpsb
out
clc
adc
loope
popf
rcrl
leave
inc
push
jge
aas
or
adc
stc
in
xchg
add
jle
dec
mov
adc
stos
jne
pusha
mov
in
iret
lcall
vcomisd
addr16
adc
popa
pop
cwtl
clc
mov
mov
sbb
popf
sbb
int3
adc
mov
test
rcl
pop
xchg
mov
jnp
mov
std
cmp
mov
insl
cmp
addl
or
imul
ss
xor
mov
xchg
lods
icebp
icebp
sbb
rorb
hlt
add
cmp
aam
pop
mov
push
adc
test
adc
rcrl
sbb
mov
imul
insb
cmc
repz
pop
addl
aas
add
lret
ret
mov
sbb
sahf
or
pop
adc
lods
and
mov
mov
mov
sbbb
jg
sbb
testl
idivl
add
sahf
addr16
fiaddl
scas
xor
cmp
pop
cmpsl
repnz
iret
mov
or
sbb
xchg
sbb
add
adc
adcb
out
lea
dec
xchg
out
xchg
push
movl
inc
sbb
into
push
cmpsl
push
jmp
sbb
adc
es
xor
pop
push
or
push
jecxz
or
inc
js
dec
jo
inc
adc
testl
mov
adc
jmp
cmc
push
pop
rol
xor
jno
lds
or
inc
inc
loopne
cmp
sub
mov
sbb
outsl
push
stos
push
pop
jmp
xor
xor
inc
int
push
mov
jo
fwait
mov
dec
xchg
bound
movsl
push
mov
shr
cmp
xchg
mov
rol
lods
filds
mov
out
lods
or
push
pop
sbb
push
add
push
xor
cmpsl
shrl
push
sub
je
mov
cwtl
enter
push
cwtl
test
je
pop
jge
roll
scas
outsl
test
mov
pop
xchg
stos
mov
jo
xchg
mov
movl
and
adc
pop
enter
in
and
jbe
jns
cmp
cmp
dec
lcall
aaa
pusha
xchg
bound
adc
inc
lcall
je
push
loopne
mov
lds
sbb
lcall
in
test
test
and
mov
nop
int3
adc
sbb
outsb
adc
mov
inc
repz
add
sbb
mov
cli
pop
cmpsl
mov
push
sub
sub
test
jbe
mov
inc
imul
mov
daa
pop
jo
dec
lahf
icebp
icebp
fcomps
fwait
aam
mov
ljmp
mov
popa
inc
and
add
sub
lea
xchg
jo
jl
inc
scas
test
std
sub
scas
xchg
repz
rcr
shl
inc
fcoms
rorb
in
lcall
add
and
in
jns
cmpsb
je
ljmp
push
xlat
jo
push
inc
mov
xchg
hlt
fcomi
pop
inc
shrb
push
jle
inc
rcrb
jp
sbb
cmp
pop
repz
pusha
inc
sbb
orl
lods
add
push
call
adc
xchg
push
xchg
je
xchg
cltd
fbld
mov
ficoml
add
or
inc
xor
lock
andl
jg
repz
mov
mov
jmp
movl
and
movsb
in
mov
adcl
pop
sub
scas
cmc
scas
cmp
cmpsl
mov
mov
outsb
adc
rcrb
cmpsl
push
sbb
pop
or
mov
lds
inc
adc
inc
push
jno
cmpsl
add
adc
fistpll
or
jbe
xchg
xchg
jbe
cmpsl
mov
jp
pusha
jmp
jecxz
addr16
jbe
jb
test
sarl
subl
xchg
lret
push
inc
add
movnti
push
inc
inc
lock
jnp
pusha
lock
mov
imul
push
or
jle
xor
pop
sub
sbb
push
or
push
mov
inc
les
or
xor
inc
loopne
inc
cmpsl
cld
jae
loope
xchg
dec
dec
clc
shlb
out
sarb
inc
inc
push
sub
add
jbe
js
push
push
hlt
dec
pop
dec
jecxz
jns
or
mov
inc
ss
aas
add
shll
sub
xchg
outsb
aam
push
cmp
outsb
nop
out
and
cmp
addl
enter
inc
xor
add
xor
gs
xlat
gs
dec
daa
mov
xorl
clc
lahf
movsb
fsubr
push
inc
jb
lea
inc
xor
repnz
jb
test
movsb
or
xchg
inc
addb
cmp
cs
lcall
outsb
inc
xor
inc
push
mov
outsl
xchg
test
jmp
xchg
dec
lds
jno
mov
dec
or
hlt
and
lahf
ja
daa
xor
bound
and
sub
xor
sub
jmp
pslld
in
std
sbb
jns
fstl
mov
push
inc
js
out
add
adc
rorb
dec
xor
filds
adc
inc
int
pop
mov
in
fldenv
insl
ror
pop
add
mov
arpl
in
inc
pop
sahf
js
mov
xor
mov
dec
dec
sub
adc
rolb
and
mov
mov
les
and
jecxz
clc
mov
xor
or
cmpsl
lock
mov
and
mov
fadd
push
cld
leave
ficoml
push
sbb
sub
les
inc
inc
ficoml
jb
dec
test
add
sbb
cmc
daa
inc
cli
dec
outsl
dec
daa
iret
sub
sub
imul
pushf
daa
mov
sub
sti
or
jns
dec
punpckldq
mov
xchg
and
aad
sbb
in
mov
add
inc
or
mov
cmpsl
pop
pushf
loope
push
xor
jns
mov
push
pop
sbb
das
inc
ret
push
shll
push
xor
mov
ret
test
mov
xor
pmullw
les
lds
push
pop
jns
jmp
inc
dec
pop
dec
in
add
or
loop
pop
xchg
icebp
dec
cwtl
pop
push
fwait
mov
push
or
clc
movsl
xchg
shlb
popf
inc
sub
or
cmc
stos
cmp
movsl
fsubrl
mov
mov
mov
mov
mov
dec
mov
pop
or
bound
adc
outsb
push
or
ret
cmc
ja
insb
push
dec
outsl
add
rorl
outsb
popl
scas
inc
repnz
sbb
sahf
lea
iret
xor
ds
cmpl
pop
outsl
push
adc
movsb
leave
imul
dec
test
cli
mov
inc
or
rcll
push
pop
leave
sahf
int3
cwtl
popf
rol
loope
sbb
mov
lret
mov
shll
adc
jecxz
jmp
cld
adcb
adc
mov
xor
mov
cmp
scas
nop
cmp
xlat
and
lds
pushf
mov
in
inc
jle
loopne
inc
rcll
jmp
xchg
addl
or
add
movsb
rclb
adc
outsb
ret
test
adc
sbb
stc
xor
rcll
filds
jbe
and
mov
push
rcll
xchg
dec
xchg
cs
pop
mov
add
mov
pop
xchg
xchg
hlt
jmp
pusha
lcall
addr16
subl
ljmp
mov
inc
fdivl
inc
es
pop
pop
testb
orl
xchg
shrb
xchg
xor
add
rolb
addb
jg
pop
out
xlat
xchg
xchg
and
inc
ret
shlb
loope
jns
out
push
push
insb
sbb
and
mov
jmp
or
roll
and
rcr
inc
jae
inc
dec
decl
testb
lret
and
inc
popa
gs
jo
pop
adc
inc
faddl
iret
aaa
dec
testb
pop
dec
popl
sub
mov
mov
mov
push
add
sub
hlt
in
mov
dec
xor
addr16
inc
add
or
add
mov
xor
cmp
sub
dec
popa
dec
lret
call
mov
jmp
stos
push
sar
or
mov
clc
sbb
xor
or
jmp
dec
repz
leave
and
rolb
fs
imul
xchg
inc
xchg
jnp
dec
mov
jns
scas
fidivs
rcr
pop
add
push
inc
mov
add
dec
inc
push
shl
inc
imul
not
xchg
mov
push
repnz
shll
xchg
inc
cmp
add
dec
dec
inc
jns
jg
inc
mov
addb
bound
in
xchg
rcll
pushf
sbb
ja
sub
push
sbb
adc
push
inc
add
push
out
roll
mov
jle
add
or
xchg
xchg
shrb
cmpsl
sbb
ficoms
stos
stc
adcl
movsl
and
xor
cmp
push
negl
pop
push
shll
push
ljmp
push
or
addr16
ss
sub
repnz
enter
or
js
mov
cld
scas
sub
push
les
cmp
aam
dec
aam
inc
inc
add
test
push
dec
jo
test
push
mov
or
aaa
cmpl
cmp
popa
inc
bsf
ret
inc
mov
jb
dec
fcmove
push
orl
pop
popa
xor
push
mov
inc
std
rcrb
jo
push
pop
gs
push
outsb
dec
mull
push
loopne
jl
lds
lret
je
xor
jbe
repnz
push
add
fimuls
mov
frstor
nop
addr16
mov
add
nop
inc
bound
xor
dec
cmp
roll
jb
and
or
push
adc
push
aaa
insb
xchg
iret
add
inc
inc
xor
jmp
outsb
imulb
clc
sbb
jae
push
addr16
sub
xor
pusha
sub
test
push
imul
insl
and
xchg
jbe
inc
repz
ljmp
outsb
jns
stos
cmp
or
cmp
cmp
and
mov
bound
pop
insb
push
jb
test
xchg
andl
ret
jecxz
xor
nop
sarl
fnstcw
lods
lret
ret
data16
inc
out
jne
mov
loopne
push
imul
lcall
mov
inc
jne
push
push
popa
mov
xor
xor
movsb
jmp
inc
push
mov
xor
mov
and
dec
push
push
mov
inc
rclb
push
scas
cmpsb
sbb
mov
xor
pusha
movsb
jge
and
jmp
bound
add
insl
and
fs
dec
sub
push
scas
xor
inc
xchg
lods
pop
cs
test
xchg
outsb
jae
jbe
mov
mov
fcoms
xchg
pop
bound
jl
outsl
xor
std
or
ss
imul
dec
sbb
scas
dec
xor
push
jbe
push
jne
dec
push
dec
lret
adcb
shrb
push
out
leave
loop
rorl
sbb
clc
and
pop
and
cmc
das
or
mov
ss
push
pop
or
inc
outsb
push
dec
jecxz
nop
loop
jle
dec
arpl
mov
push
push
inc
sub
inc
ja
test
xor
dec
test
push
stos
push
sbb
dec
clc
inc
push
add
jo,pn
mov
imulb
dec
popa
mov
xor
xchg
mov
and
clc
add
int3
xchg
jne
dec
xor
mov
je
cmp
ret
test
pop
test
and
ja
into
dec
std
mov
pop
inc
stc
push
test
sub
minps
lcall
mov
pop
loopne
leave
mov
push
imul
push
xchg
xchg
mov
test
or
dec
aam
inc
add
popa
pop
sbb
push
jge
lret
or
flds
std
sbbl
mov
inc
popa
inc
lods
lods
aas
clc
adc
jne
call
stos
mov
rclb
clc
repnz
push
outsb
ja
shll
fldcw
jae
ret
mov
mov
push
dec
xchg
faddl
fldcw
mov
data16
out
pop
dec
xchg
add
pop
notl
push
int
or
push
push
ficoml
sub
pop
cmpsl
jae
shlb
rorl
cld
cli
fisubrl
enter
push
clc
mov
push
rclb
pusha
lods
inc
mov
push
xchg
sub
cld
jl
pop
loopne
imul
pop
imul
mov
push
fisttps
incl
mov
dec
enter
or
aas
rcr
inc
bound
add
mov
inc
xor
pop
jne
jne
pushf
imul
pusha
jg
jg
add
jmp
add
dec
xor
mov
mov
jno
fnstenv
xor
sub
push
fwait
or
inc
arpl
sbb
inc
xor
ljmp
in
mov
dec
imul
addr16
xor
adc
xor
scas
add
ja
cmp
ss
gs
shlb
idivl
in
pop
int3
jb
pop
ja
bound
inc
mov
push
je
mov
iret
add
sub
dec
clc
add
dec
mov
inc
fistpl
jno
cmp
orb
push
pop
shlb
mov
pop
insb
pop
icebp
stc
outsb
inc
push
stc
jmp
addr16
push
inc
je
je
das
adc
addl
push
inc
cmp
idivl
mov
lods
mov
cmp
lret
jbe
xor
nop
xor
mov
cmp
sti
test
dec
xchg
addl
js
push
fprem
rolb
pop
jbe
into
mov
sub
sbb
xor
cmp
into
ret
cmp
int3
xchg
or
sub
leave
rorb
pop
in
mov
fbstp
stos
ret
cld
jmp
rol
jae
shl
bound
dec
mov
and
pop
add
dec
add
int
or
les
insl
sub
add
shr
xor
xor
aas
and
xchg
mov
pop
js
push
rcrl
lret
inc
lret
sbb
fyl2xp1
clc
cmp
sub
sbb
pop
inc
sub
jns
dec
mov
das
mov
adc
ss
sub
loopne
add
test
es
inc
cmpsb
sahf
sti
mov
jo
bound
xor
inc
pop
les
icebp
mov
inc
mov
imul
push
pusha
call
jns
sbb
dec
nop
sarl
jb
pop
mov
insl
add
jbe
lds
cs
es
int
dec
ss
push
test
pop
pop
and
lds
inc
faddl
aam
push
sub
movsl
rorl
push
lret
repnz
pop
imul
xchg
mov
ja
xchg
or
xchg
lods
fistpl
sub
push
decb
pop
test
lods
mov
loope
mov
shll
pop
out
arpl
jns
inc
adc
or
lret
adc
inc
dec
fcompl
dec
or
lock
ret
inc
dec
adc
sub
clc
aad
push
loop
xor
fsts
mov
stos
cmc
movq
or
cmp
mov
add
inc
test
cld
mov
shlb
outsb
mov
inc
cmc
repnz
pop
sbb
popf
call
jl
sub
add
call
dec
mov
orb
movlps
jo
test
pop
or
loop
lcall
dec
mov
adc
cmc
sub
idivl
jne
in
cmp
out
or
jle
fimuls
leave
out
adc
pop
cmp
xchg
add
fstpt
dec
sub
fdivrs
incl
dec
pop
nop
dec
cs
fcmovb
lods
lret
mov
mov
iret
sbb
lock
xorl
movsb
push
repz
dec
int3
imul
cmp
mov
sub
dec
add
dec
sahf
lret
add
push
mov
sar
repz
incl
sub
popf
stos
sbb
addl
sbb
nop
sbb
icebp
je
ljmp
movsl
out
sub
pop
fcmovne
and
orl
aaa
cmp
and
pop
push
int
add
out
add
xchg
push
mov
jecxz
pop
mov
xchg
lock
pop
sbbl
cmp
mov
test
out
mov
xchg
leave
vmptrst
inc
data16
and
sub
pop
mov
mov
xor
cmpsl
test
insl
notl
ret
xor
and
pop
xorl
addb
pop
push
daa
loope
data16
push
adc
cmp
dec
xchg
ljmp
jmp
jne
adc
ret
fistpl
fsubrl
mov
pop
enter
std
loope
pop
adc
loopne
shlb
sub
mov
addl
and
mov
adc
push
mov
inc
inc
bound
add
push
pushw
jns
lods
xchg
subl
insl
popf
dec
out
xchg
push
mov
lret
lods
inc
subl
jle
gs
pop
dec
xor
iret
gs
arpl
cld
dec
dec
jae
xor
movsl
add
in
xchg
and
push
enter
fimuls
inc
jmp
addr16
imul
movsb
fmull
jne
inc
icebp
into
and
fmuls
jnp
and
jns
cmp
sar
ljmp
inc
dec
rclb
outsb
popa
inc
push
push
or
stos
cmp
inc
adc
add
inc
ret
bound
mov
imul
push
jb
push
insl
data16
push
pop
clc
xchg
inc
dec
xor
push
clc
or
loope
out
loopne
push
js
int
movsb
sbb
push
sbb
xchg
dec
inc
mov
out
testl
xchg
and
mov
jle
jbe
inc
lods
pop
jmp
in
xchg
nop
out
xchg
lock
adcl
add
nop
loopne
stos
push
pusha
movsl
jae
push
pushf
inc
or
sub
xchg
outsb
adc
dec
adc
cmp
mov
fimull
aad
inc
cs
jbe
lods
pop
movsl
mov
sahf
inc
icebp
inc
sub
lods
xchg
test
add
cmp
outsl
in
jno
arpl
add
ret
imul
pushf
cmp
xor
inc
sbb
mov
hlt
adcl
lahf
mov
clc
inc
in
add
ja
aaa
sar
fwait
pusha
inc
pop
cmp
js
or
jmp
imul
fwait
call
js
push
or
icebp
dec
aad
adc
dec
loop
pop
fdivl
cmpsl
xchg
stos
imul
cmpsb
aaa
lock
adc
dec
test
xchg
loope
dec
jbe
or
mov
and
sti
in
fwait
not
repz
lcall
mov
mov
mov
mov
js
inc
and
cmp
pop
and
cmpsl
mov
pushl
data16
push
mov
stos
lock
sahf
shlb
jmp
dec
push
loope
aad
add
movsl
or
push
dec
jle
mov
or
sub
test
fisttpll
dec
xor
adc
ret
add
into
arpl
pop
out
jbe
cmpsl
xchg
jecxz
ficoms
sbb
hlt
data16
ret
xchg
or
test
repnz
dec
jle
pop
movsl
fdivr
cmp
aaa
jle
mov
mov
loop
fwait
adc
and
iret
popa
lahf
clc
xchg
int
int
or
in
jnp
out
shl
mov
idiv
or
test
call
jmp
sahf
out
rcll
inc
stc
loope
push
xor
sbb
push
out
enter
subb
fstpl
mov
in
int
out
nop
scas
test
out
mov
cltd
xchg
fmull
inc
lods
les
mov
lods
and
popf
mov
jp
add
mov
mov
lret
sub
jb
negl
inc
pop
fwait
jmp
jmp
lods
lret
cmp
push
neg
lods
push
dec
mov
stos
hlt
insb
out
adc
mov
dec
sub
xchg
pop
outsb
sarl
inc
jl
mov
mov
inc
sub
rolb
sub
imul
popf
inc
mov
sub
jmp
jns
nop
mov
inc
ljmp
jbe
sbb
clc
mov
and
add
adc
es
rolb
xor
jg
jge
cwtl
imul
in
movsl
es
mov
mov
mov
fstp
add
dec
dec
idivl
and
push
xor
xchg
in
push
dec
or
std
sbb
and
mov
cmp
cmp
cld
out
lea
les
stos
push
mov
jno
xchg
les
roll
insb
in
ss
ja
dec
icebp
sbb
iret
aad
cmpsl
aas
inc
mov
dec
loopne
and
fists
xor
insb
imul
or
pop
mov
xor
ss
or
leave
pop
xor
popf
int
adc
loope
pop
dec
sbb
jg
jns
imul
add
xor
cmpsl
dec
das
jl
ss
xlat
cmp
addr16
add
js
movsb
outsl
mov
idivl
adc
nop
xchg
add
pop
sti
sbb
xor
dec
sarb
sbb
pop
mov
fistps
and
xor
daa
loopne
cli
jmp
xlat
cmp
js
lcall
fadd
call
lret
lea
jae
lods
dec
adc
adc
jmp
jmp
leave
push
add
sbb
xor
mov
popf
stos
pop
pusha
dec
and
mov
inc
pop
mov
xbegin
xchg
push
jns
or
scas
push
fsubs
scas
pop
les
data16
mov
lcall
xor
xor
pop
lods
nop
mov
sbb
xor
and
outsb
sbb
movsl
sub
dec
psraw
mov
mov
xchg
sahf
jge
rolb
mov
outsb
jns
fisttpl
in
mov
inc
pop
xor
repnz
in
mov
adc
mov
pop
rcr
or
push
push
cmp
test
push
adc
push
dec
int3
mov
mov
xchg
mov
popa
bound
decl
and
pop
in
xlat
call
ljmp
stc
inc
jbe
cmp
jae
mov
fwait
jl
ret
test
insb
xor
mov
jne
loopne
cmpsl
roll
xchg
push
popf
mov
adc
and
mov
jnp
es
pop
insb
add
cmp
cmpb
add
data16
jb
lahf
hlt
add
xor
popf
xor
inc
mov
cmp
push
cmpsl
jecxz
jae
mov
sbb
jns
fsubl
jmp
daa
jl
push
dec
popf
sbb
hlt
cmpl
sbb
ret
test
pop
ret
cmpsb
je
dec
lds
sub
dec
jg
fldl
xchg
mov
loopne
fsubl
es
sbb
add
adc
dec
loopne
jmp
mov
lods
and
dec
mov
clc
pop
inc
mov
sbb
dec
cld
xor
into
arpl
movsb
sub
orb
lahf
cmp
loop
dec
inc
aad
dec
xchg
jns
addr16
push
or
jmp
lcall
or
dec
dec
mov
js
aam
fnstsw
rclb
scas
add
jnp
loop
lock
or
jmp
mov
jb
leave
test
scas
in
jge
cmpb
dec
rcll
inc
in
mov
mov
xchg
sbb
add
movsl
jle
das
adc
stos
jae
mov
mov
fsts
jae
or
fs
cmp
sbb
cmp
pusha
dec
stos
jmp
ss
xchg
shrb
mov
dec
ret
rorl
push
push
mov
fs
jg
clc
mov
push
pop
jmp
loopne
push
dec
shll
enter
mov
jb
lret
out
xchg
add
hlt
jae
sub
xor
jo
outsb
ret
pop
pop
outsl
out
arpl
push
insl
push
mov
add
pop
push
fs
fs
sbb
ds
data16
ss
dec
dec
es
jbe
jmp
adc
shrb
or
outsb
inc
xor
mov
or
sbb
sbb
rolb
inc
mov
je
dec
pop
mov
lret
inc
test
mov
cmp
popf
add
push
mov
loope
jo
adc
je
jb
popf
mov
fimull
mov
jno
clc
test
mov
outsb
dec
bound
insb
push
sbb
into
add
dec
xchg
insb
cwtl
les
inc
out
rcll
sti
adc
push
jb
inc
push
mov
je
pop
sbb
inc
mov
pop
dec
or
fdivs
xor
xor
outsb
xor
jne
into
mov
jns
pushf
xchg
dec
mov
js
or
inc
and
xchg
add
inc
push
movsl
mov
test
inc
add
cltd
int
cmpsb
cwtl
dec
push
push
lock
sbb
push
xor
ljmp
push
cmp
rolb
fnstsw
xchg
and
movsb
or
push
cwtl
fs
insb
mov
and
or
xor
mov
adc
xchg
hlt
mov
xor
clc
pop
dec
mov
je
xchg
push
xchg
test
rcll
sub
out
pop
testl
data16
pop
adc
ss
sbb
outsl
arpl
and
icebp
movsb
sub
xchg
inc
cmc
xchg
pop
ja
push
ss
sbb
iret
fnsave
dec
je
jae
jne
inc
jae
add
lret
hlt
add
pop
jbe
or
lock
dec
cli
imul
push
pop
loop
jo
xor
insl
ret
popa
dec
add
or
into
out
xchg
ret
xor
into
fmull
inc
aam
pop
adc
xor
sub
add
push
jo
adcl
xor
fisttpll
mov
xor
loop
test
repnz
cmp
push
fs
fadds
int3
inc
dec
dec
addr16
bound
cli
pop
stc
dec
ljmp
jae
mov
xor
pusha
fwait
adc
push
or
sbb
dec
fs
mov
fs
sarb
inc
ss
xchg
rcrl
inc
and
push
daa
fcmovnb
inc
push
inc
xor
jnp
jmp
xlat
adc
sti
and
or
imul
dec
dec
insb
and
ss
sub
hlt
lahf
push
dec
ret
test
inc
mov
inc
sub
daa
inc
mov
arpl
aad
push
pop
js
popf
test
push
bound
fcmovnbe
test
leave
repz
shrb
sti
push
sti
roll
mov
nop
push
daa
outsl
jb
shr
addb
nop
outsb
or
dec
sub
testb
xchg
orl
and
test
mov
xor
into
push
adc
pop
sbb
dec
daa
cmp
xor
jecxz
adc
gs
adc
sarl
cmp
xchg
pusha
psubsb
roll
xchg
mov
addb
rclb
call
lahf
add
movsb
sub
sarb
je
mov
test
sbb
insb
pop
jno
inc
mov
inc
push
sub
jno
arpl
push
add
mov
jbe
push
std
lds
push
xor
xchg
push
cmpsl
lahf
xor
lds
pop
sbb
movsl
aaa
push
mov
ss
ret
rcrb
xlat
adc
pusha
sbb
repz
and
rcrl
leave
pop
adc
stos
mov
loop
mov
dec
push
adc
xor
lds
aam
loopne
cmp
outsb
psrlw
call
cmc
mulb
shll
pop
loope
adc
nop
pop
test
or
push
sbb
stc
aad
jecxz
sahf
sbb
cmp
mov
jae
push
nop
data16
imul
xchg
mov
push
adc
push
and
scas
nop
aaa
dec
pop
or
in
dec
jmp
call
addb
sarl
insl
lds
add
adc
sub
xchg
addr16
test
jo
cmp
dec
lods
or
mov
xchg
insl
orl
sub
es
add
add
inc
and
insl
das
mov
add
ss
inc
fs
mov
andb
inc
pushf
xor
xchg
scas
jmp
jecxz
or
dec
les
xor
dec
dec
mov
mov
inc
or
add
mov
add
pop
mov
gs
iret
cld
add
vandnpd
cmp
add
dec
in
stc
ret
add
enter
cwtl
fs
xor
rol
pop
fs
cmp
add
mov
dec
jb
mov
cmp
add
sbb
hlt
mov
cmp
je
ljmp
mov
inc
bound
mov
inc
push
sub
cmp
lods
dec
push
adc
adc
add
out
ljmp
les
jge
push
lock
bound
fs
pop
jb
push
insb
fs
mov
inc
push
or
imul
bound
mov
xchg
rorb
test
jmp
jmp
data16
mov
xchg
cmp
xchg
inc
mov
mov
addl
lods
and
addl
cmp
popa
insb
filds
fdivr
fbstp
mov
stos
in
ja
and
and
sub
and
and
push
dec
out
inc
xor
pop
jge
inc
insb
rcrb
scas
mov
adc
mov
addl
dec
mov
addb
gs
les
xchg
push
lret
mov
inc
add
loop
enter
add
inc
stos
movlps
or
inc
pop
adc
mov
jle
push
push
std
push
lea
dec
pop
mov
or
adc
mov
in
rcrb
inc
fcmovnbe
nop
cld
sbb
loope
std
das
push
movsl
adc
push
jne
rol
sbbl
mov
inc
mov
xchg
fildl
add
mov
xor
inc
pop
mov
add
sbb
fldenv
inc
enter
sbb
loopne
jb
pop
sbb
stos
sbb
and
test
sbb
fdivl
dec
and
mov
sarl
add
fildl
or
jg
fiaddl
cmp
push
lods
push
add
sbb
sbb
xor
xchg
out
push
aad
add
repnz
les
jo
adc
iret
dec
rorl
mov
xor
dec
mov
mov
sbb
ljmp
jns
jmp
stos
shlb
mov
push
add
loopne
outsb
je
push
add
xor
insl
shlb
cmp
mov
dec
jae
mov
loop
addb
adc
nop
pushf
js
jns
push
fstpl
jle
mov
adc
in
scas
imul
stos
add
enter
xchg
and
stc
xchg
dec
int
mov
xchg
movsb
cmc
lahf
adc
cli
andl
sub
daa
scas
push
inc
sub
xor
sbb
fidivrs
scas
stc
and
in
mov
xchg
les
jmp
cltd
sbb
in
adcl
and
push
jg
and
mov
add
les
sbb
mov
shl
je
mov
movb
icebp
insb
pop
cli
sub
jl
lcall
inc
mov
push
jge
mov
push
aaa
or
aaa
xor
jno
adc
or
and
add
fdivrl
js
mov
mov
test
jle
inc
adc
or
pushf
adc
cwtl
lea
xlat
push
test
mov
or
push
movsl
test
test
pop
pop
pop
and
int
es
lods
xor
sahf
add
lods
call
jmp
mov
fsubs
add
push
cmc
ss
or
stos
std
sub
inc
aam
xor
js
adc
jne
jne
cmovl
mov
scas
pop
sbb
pop
mov
cmp
mov
call
push
int3
lds
popf
mov
push
sbbb
pop
sbb
cmpsl
std
sbb
cmp
sub
xchg
xchg
jno
cli
pop
shrl
or
scas
cmpsl
shll
movsb
inc
sbb
push
or
imul
mov
add
rorb
dec
sbb
cli
mov
test
rolb
loope
repz
int3
add
push
mov
jl
or
inc
sbb
aam
ds
adc
in
sub
popl
pop
iret
mov
cmpsb
mov
cs
orl
lcall
pop
je
fists
fsubrl
xor
cmpsb
and
ljmp
jo
fwait
adcl
lock
fnstenv
or
pop
dec
pop
rcl
dec
xor
jl
bound
nop
lahf
out
mov
mov
mov
cmpsl
xor
pop
sub
add
mov
das
decl
adc
int
push
mov
aad
xchg
cs
dec
inc
test
cltd
ffreep
pusha
popa
adc
or
or
pop
stos
adc
add
xor
scas
aam
pop
lret
loope
shlb
aaa
dec
inc
inc
jg
mov
pop
xor
mov
and
sbb
in
xchg
out
je
mov
daa
test
add
pop
adc
pop
cli
sbbl
jecxz
dec
test
xor
fildl
add
add
dec
clc
and
outsl
sbb
add
push
mov
gs
ret
pop
push
pusha
ret
out
push
stc
pusha
lret
xchg
stc
pop
dec
jl
push
ret
pop
in
sbb
dec
or
testb
repz
scas
jg
mov
xor
pop
mov
push
cltd
inc
outsl
pop
and
or
jo
lahf
lock
and
mov
push
xor
sbbl
loope
sub
lea
push
aaa
add
xorb
push
mov
cmp
rclb
pop
push
scas
imul
fsubl
cmc
sbb
xlat
mov
aam
push
inc
sbb
pop
xchg
jo
sub
jns
pop
sbbl
jno
call
sub
add
cmc
push
push
adc
jp
jg
or
imul
inc
in
test
mov
jne
adc
arpl
lods
mov
cmp
ss
add
jne
add
push
push
imul
add
fwait
adc
ja
jne
xchg
aam
das
add
xlat
sub
dec
mov
inc
stos
xchg
test
orb
push
jp
push
inc
mov
ss
inc
sub
add
mov
inc
mov
xchg
je
add
add
pop
dec
mov
dec
test
push
or
fidivl
xor
mov
fiadds
push
jo
inc
dec
nop
ljmp
inc
xor
mov
pop
push
push
push
test
sub
jns
dec
and
pop
inc
aaa
pop
push
ja
push
ja
adc
stc
pop
bound
lret
push
pop
and
dec
ss
inc
jo
fiaddl
orl
push
cmp
pop
add
pop
pop
push
sbb
ret
push
rorl
add
or
nop
mov
xchg
les
jno
addr16
in
inc
push
lods
out
and
push
mov
lock
imul
sar
add
mul
xchg
nop
push
pusha
icebp
add
or
iret
xchg
call
andl
dec
xor
insb
aam
push
lahf
and
dec
lret
gs
or
mov
adc
jb
leave
add
fdivrs
pop
inc
sub
dec
or
dec
dec
and
dec
inc
sub
cmpsl
fldenv
inc
dec
inc
mov
scas
mov
ret
cmp
ds
fdiv
mov
nop
scas
dec
push
ret
push
into
popa
mov
les
inc
loop
pushf
ja
or
mov
bnd
js
dec
jae
push
jle
insl
loop
aaa
adc
data16
jecxz
add
pop
dec
add
loopne
dec
inc
inc
insl
inc
jmp
cmp
insb
inc
outsb
outsl
cwtl
sbb
jb
div
mov
mov
sti
dec
pop
mov
inc
push
xchg
arpl
adc
shlb
jo
pop
sbb
pop
sbb
xor
xor
push
lcall
push
fcmovb
add
sbb
or
pop
jns
addb
ja
ret
push
jb
xor
dec
pop
xchg
pusha
pop
notl
sub
data16
faddl
int3
dec
inc
push
or
hlt
pop
inc
pop
aam
push
js
pusha
insl
adc
arpl
push
lcall
call
pop
xchg
mov
jo
cmpsb
in
call
inc
fs
std
inc
in
mov
cli
push
jns
ja
lea
repnz
iret
add
adcl
lret
mov
xor
dec
bound
out
dec
mov
aaa
pop
arpl
ds
sti
in
xor
jne
pop
ljmp
and
sub
gs
add
fildll
cmp
jo
in
dec
xor
push
adc
push
push
mov
cmp
call
movb
push
popa
inc
jne
jmp
xor
scas
or
daa
or
cmpsb
test
rclb
loopne
inc
lock
jb
cmp
cmp
in
push
sbb
pop
inc
sbb
cmc
xchg
pop
push
push
push
insb
mov
push
aaa
mov
jmp
mov
push
inc
and
add
mov
mov
and
ffreep
fstl
xor
je
shlb
mov
push
sbb
add
stos
or
inc
jb
xlat
sbb
scas
or
adc
add
xchg
cmp
sub
add
or
pop
mov
cli
arpl
stos
shlb
inc
inc
rorb
push
adc
clc
stos
arpl
dec
pop
inc
rclb
es
inc
lea
fisttpll
aad
jge
xchg
add
jnp
lods
push
rclb
jb
movsl
insb
xor
in
ret
pusha
inc
adc
jnp
shll
pop
jnp
sub
inc
stos
data16
add
fadds
pop
out
mov
mov
mov
add
and
inc
cmp
lcall
loop
mov
push
repz
xchg
push
adc
nop
orb
lods
mov
and
stc
call
cmpsl
sub
pop
add
add
aam
loopne
repz
xchg
cmp
out
push
or
stc
fiadds
adc
icebp
mov
push
pop
insl
xchg
mov
scas
js
adc
jl
mov
adc
add
insl
insb
xor
ret
fsubl
push
sbb
fiaddl
push
push
jne
cmp
and
adc
cmp
fstpl
and
push
cmp
jl
xor
inc
popa
fwait
push
fcompl
adc
out
mov
dec
movups
cmc
loop
stos
mov
add
orl
daa
lods
dec
inc
call
sti
ret
jno
mov
push
add
rolb
bound
push
mov
sub
inc
loopne
and
xchg
inc
mov
xchg
mov
or
sbb
push
mov
dec
movsb
dec
je
push
outsl
jb
dec
rolb
je
push
aam
dec
mov
push
lahf
xchg
ljmp
jl
add
dec
loop
js
out
jge
test
mov
push
lods
inc
jmp
mov
mov
inc
mov
cli
mov
inc
movl
mov
jo
jbe
je
ja
movsl
aaa
push
or
push
outsb
push
repnz
call
loopne
pop
dec
mov
jmp
inc
jae
mov
je
push
fs
test
nop
mov
xchg
push
sbb
pop
push
add
pop
sub
dec
pushf
dec
fisttpl
jmp
in
push
push
push
test
jne
add
insl
mov
fldl
int
dec
inc
and
inc
mov
fwait
outsl
cmp
or
aam
mov
mov
insb
or
push
rclb
rolb
outsl
push
xor
js
mov
inc
pop
or
pop
push
push
or
pop
mov
ret
sti
leave
or
mov
dec
imul
sbb
and
mov
sahf
clc
pop
hlt
test
push
gs
dec
movsl
or
or
pop
addr16
push
rcr
jo
dec
ret
cmp
lcall
push
inc
int
cld
xor
jo
inc
pop
dec
jge
cli
xchg
call
lret
xor
xchg
mov
fsubrl
out
pop
mov
loopne
push
xor
bound
ret
pop
hlt
xor
xor
test
and
dec
dec
enter
push
pop
ljmp
mov
push
ljmp
xchg
lock
outsl
in
fs
xor
mov
cli
xchg
repz
mov
push
lahf
adc
mov
lcall
push
gs
iret
clc
mov
or
cmpsl
fsubrl
nop
or
cwtl
orl
jb
and
das
sub
add
jns
sahf
pop
dec
sub
xor
sbb
or
es
add
sub
popa
or
addr16
jnp
js
pop
and
or
rorl
fsubrp
ret
std
je
add
add
stos
mov
sbb
sub
mov
out
leave
test
mov
adc
enter
ret
pop
xor
pushf
les
jl
jo
or
shrl
mov
movsb
xlat
and
iret
cmpl
idivb
push
xor
mov
jle
adc
lret
js
dec
add
push
jl
test
or
xchg
dec
leave
lahf
data16
mov
stos
xchg
cmp
pushf
inc
dec
pop
dec
jns
addb
test
pop
insb
adc
mov
sub
rolb
int3
and
or
das
mov
xlat
loopne
add
loop
movsb
in
cli
loop
inc
push
or
mov
pop
pop
daa
sub
clc
insl
lea
sub
les
push
pop
adc
sub
nop
xchg
jb
push
fsubrl
mov
lret
int
lods
clc
xchg
dec
loop
test
sbb
lds
addr16
pop
and
shrb
out
pop
rcrl
sbb
pop
adc
loope
rcll
cmp
adc
sbb
xchg
sbb
icebp
pop
mov
adc
inc
mov
jge
stos
or
sbb
lahf
mov
push
stos
add
jae
jno
shrl
sbb
fstpl
add
sti
jae
add
adc
inc
popa
and
mov
pop
or
sbb
in
xlat
inc
xchg
inc
mov
xlat
dec
mov
inc
pop
pop
addb
jno
aaa
je
loopne
in
shll
jmp
mov
or
xchg
hlt
jns
rclb
fs
ror
cli
mov
out
leave
xchg
dec
je
outsl
xor
andl
lea
fs
dec
ds
xor
fcompl
imul
push
dec
call
add
cmp
adc
inc
popa
push
loope,pt
sub
mov
outsb
in
js
scas
sbb
sub
xchg
cmp
jne
hlt
lea
cmc
dec
out
inc
inc
mov
cltd
push
and
jbe
sbb
ja
push
mov
pushf
scas
jge
and
cwtl
aam
addr16
jmp
sub
sub
mov
mov
lock
ja
insb
push
insb
in
ja
jo
incb
cs
jno
or
aas
and
xorb
jae
pop
mov
clc
xchg
mov
out
or
pop
dec
xor
mov
outsl
adc
loopne
mov
insl
mov
sbb
inc
or
jno
add
pusha
add
pop
and
push
xor
inc
add
xchg
insl
push
adc
loope
sbb
imul
push
push
jno
inc
mov
jo
fildll
ss
cmpsb
cmp
xor
repz
adc
or
imul
fmull
psubd
into
inc
sub
inc
jns
fs
sahf
inc
sti
inc
xorb
inc
jno
or
push
jle
sub
mov
mov
mov
jl
fwait
hlt
ds
dec
subb
inc
dec
stc
les
pop
inc
loopne
repnz
cmp
add
xor
inc
dec
mov
inc
arpl
inc
inc
pop
dec
dec
pop
mov
or
lret
adc
push
pop
or
add
or
clc
dec
sub
inc
xchg
dec
daa
add
or
push
js
add
push
cmp
inc
pop
data16
or
popa
dec
ja
scas
adc
inc
sbb
dec
addr16
push
mov
mov
mov
cltd
pop
xor
push
dec
ds
sahf
fld
inc
xor
rorl
add
movsb
lods
lret
push
je
cmc
sbbl
xor
or
inc
jns
inc
dec
inc
or
mov
sub
push
xchg
sub
push
shlb
dec
aam
pop
sbb
lock
jne
ss
inc
add
aas
hlt
jbe
jnp
jmp
pop
dec
mov
dec
ljmp
lcall
add
mov
jl
inc
mov
jmp
insl
and
or
xchg
loopne
fs
cmp
dec
pushf
mov
je
pop
outsb
mov
je
scas
jbe
jo
mov
js
dec
inc
nop
fidivrs
pop
jmp
outsb
movsb
inc
mov
fdivrs
imul
push
inc
mov
int3
inc
jbe
dec
or
cmc
xchg
push
test
push
mov
bound
xor
loopne
push
ss
jbe
xor
push
mov
dec
loopne
mov
jl
into
push
dec
dec
ss
mov
sahf
fistl
jle
es
mov
js
loopne
in
xchg
push
mov
push
jmp
inc
ljmp
push
ret
push
js
push
xchg
dec
xor
jne
jae
inc
bound
mov
inc
jae
mov
jne
ret
dec
pop
and
arpl
xchg
push
push
dec
add
push
cmp
arpl
jo
push
push
fdivs
rolb
bound
lods
mulb
or
jb
dec
inc
jl
out
sbb
popa
test
dec
pop
cmp
mov
push
xor
dec
shll
push
js
loop
sub
jp
dec
push
popa
jo
jns
sbb
imul
mov
dec
dec
gs
gs
lods
mov
clc
inc
sbb
jmp
outsb
inc
test
sub
dec
ror
adc
cltd
mov
mov
stos
jg
xor
inc
pop
dec
push
inc
pop
test
inc
mov
inc
jmp
in
add
jle
fistpll
orl
outsb
push
inc
pop
push
push
scas
in
fiaddl
xor
je
imul
call
mov
ds
mov
aaa
test
imul
adc
mov
inc
xor
jns
inc
testl
jmp
dec
cmpsb
inc
faddp
arpl
inc
call
outsb
dec
cmp
lret
ss
add
mov
rcr
aam
xchg
inc
dec
push
push
push
bound
data16
clc
hlt
mov
mov
ss
dec
imul
add
insl
cmp
and
xor
jmp
fs
mov
lods
mov
aad
lods
push
push
add
pop
aad
ja
dec
std
popf
scas
pop
inc
dec
push
inc
ljmp
fmuls
add
jmp
mov
inc
insb
inc
mov
out
adcl
mov
xchg
shll
jmp
xor
into
pop
or
test
lods
ficomps
dec
outsl
mov
jl
icebp
jge
mov
pushf
and
jo
push
clc
adc
mov
cmp
xor
movsb
loopne
sbb
lret
dec
add
sbb
push
mov
sbb
loopne
out
loopne
mov
cld
int3
shll
push
lods
dec
sub
call
mov
imul
cs
outsb
cmp
jl
rorb
cli
push
rcrl
mov
inc
enter
imul
dec
or
inc
inc
ja
jle
icebp
pop
testl
inc
mov
aam
pop
sub
xor
push
jmp
mov
dec
jns
cld
rcrl
repz
popa
push
xor
mov
inc
xchg
shlb
pcmpeqb
ret
sbb
sbb
mov
push
pop
pop
dec
push
dec
pop
jae
jmp
jle
test
dec
jmp
push
stos
rclb
jmp
jbe
fwait
adc
popa
ret
fadds
push
arpl
insb
loopne
outsl
not
push
push
repnz
add
test
clc
out
mov
ljmp
inc
xchg
iret
pop
sub
xchg
xlat
and
je
inc
rcl
and
xor
ss
mov
test
ret
pop
xor
das
hlt
ret
sbb
jmp
inc
pop
push
pop
jbe
pusha
mov
mov
sbb
jge
int3
fidivrl
adc
dec
bound
jmp
push
push
xchg
mov
mov
out
push
gs
pushf
dec
shl
and
rclb
xchg
aas
mov
or
fwait
adc
inc
pop
jne
call
inc
fcom
dec
add
ljmp
pop
cwtl
dec
and
fwait
enter
sbb
jno
add
inc
cmp
dec
xor
jno
push
bound
ret
and
dec
xor
mov
sbb
push
scas
test
inc
xchg
in
hlt
leave
ret
mov
movsl
push
push
mov
adc
movsb
iret
repnz
lock
mov
inc
dec
xchg
add
mov
mov
xor
cmp
push
dec
insb
lret
out
add
inc
inc
int3
inc
outsb
sbb
roll
mov
xor
xchg
xor
loopne
sbb
stos
adcl
sbb
dec
mov
dec
orb
fisttpll
push
ds
jo
mov
sub
pop
push
push
pop
iret
les
fst
jmp
inc
push
addr16
out
mov
mov
js
pop
fdecstp
inc
jae
mov
cli
and
xor
pusha
subl
add
popf
es
imul
mov
stos
mov
inc
add
or
stos
or
inc
ljmp
shll
sbb
aam
cmp
xchg
rolb
dec
dec
out
push
cltd
inc
add
pushf
dec
sbb
mov
jo
mov
pop
lds
mov
sbb
sbb
mov
nop
fdivl
dec
cmp
adc
movsl
test
mov
dec
aas
test
repnz
scas
inc
adc
addl
imul
rclb
sbb
subl
pop
push
divl
aad
mov
sub
out
add
jp
lds
outsb
ret
mov
push
add
inc
aam
dec
in
xchg
jp
cmpsl
or
mov
or
aas
mov
daa
ljmp
pop
cltd
pop
pop
pop
jns
sbb
xor
outsb
sub
mov
or
out
rcr
testl
outsl
enter
mov
test
popa
andl
sub
ja
cmpsb
loop
xor
sub
cltd
movsb
or
ret
push
xchg
mov
jns
mov
out
mov
sbb
jecxz
jg
movl
rclb
pop
in
sti
fidivrs
and
adc
mulb
aas
repz
lods
inc
jmp
andl
arpl
lahf
outsl
ljmp
nop
and
push
or
mov
jecxz
icebp
lea
into
jno
sub
mov
sbb
andb
mov
mov
test
or
mov
push
push
push
xchg
ljmp
das
push
sbb
subl
push
push
orl
cltd
pop
xor
sbb
dec
adc
jne
mov
out
sub
test
outsl
daa
push
mov
sub
je
cltd
push
test
dec
mov
mov
int3
mov
in
aam
out
xchg
jp
lret
and
sbb
add
stc
dec
and
loopne
mov
adc
out
add
mov
sub
add
xchg
sbb
inc
insb
pop
jle
add
dec
test
scas
mov
jmp
sbb
icebp
shlb
xlat
add
mov
cmp
inc
fldcw
pop
cs
xor
dec
scas
leave
loopne
push
fidivs
icebp
mov
hlt
lods
mov
push
add
in
xor
xchg
das
dec
pop
fdivl
ja
adc
loopne
and
clc
outsb
lock
sbb
push
cwtl
sub
movsb
pop
and
pop
sbb
inc
add
test
push
das
add
and
stos
mov
addr16
or
mov
xlat
or
cwtl
out
imul
insl
pop
fsubrs
mov
daa
pop
mov
repz
jmp
cmpsl
ret
pop
or
pop
xchg
push
jecxz
or
dec
andl
xchg
jno
test
xchg
and
pop
jmp
cld
inc
je
ds
clc
jnp
mov
pushl
jo
push
or
pop
xchg
add
mov
pop
fiadds
fcomip
ret
mov
ret
pop
jnp
insb
andl
xor
repnz
add
xchg
leave
pop
aad
and
jle
cld
adc
in
cld
jbe
jecxz
rclb
mov
stos
bound
xchg
jnp
cmpsb
roll
xchg
cs
repz
sub
pop
sbb
into
repz
and
dec
mov
fmull
and
dec
fistl
inc
xor
movups
test
stos
inc
inc
outsb
mov
std
in
xor
jp
popa
lds
xor
stc
add
popf
inc
fnstenv
popf
lods
cmp
movsb
das
dec
cwtl
mov
insl
lds
mov
outsb
sbb
jns
cmp
mov
insl
test
jo
pushf
cwtl
scas
out
jbe
rcll
pushf
loope
add
lret
in
mov
pminub
popa
int
pop
into
insl
sub
mov
mov
pop
mov
jne
pop
jecxz
push
loop
lods
loope
bound
adc
adc
add
mov
xchg
in
adc
add
cmp
mov
das
aad
push
scas
lock
imul
or
subl
shl
ret
enter
movsl
pop
iret
aad
add
mov
shlb
shll
cltd
movl
xor
es
ss
adc
aam
xor
fnstenv
aaa
sbb
or
jnp
shrl
xchg
push
jno
sub
or
mov
sbb
popa
lods
inc
xchg
adc
clc
insb
cmp
sbb
inc
sub
xor
mov
xchg
xor
bound
jge
adcl
add
push
xchg
shll
add
pop
incl
iret
ja
arpl
sub
scas
dec
push
fsubrp
adcb
rcll
push
mov
ja
dec
jle
sbb
fisttpl
pop
cli
mov
lea
lea
push
mov
add
stos
into
addr16
jnp
in
cmpb
lret
adc
pusha
and
xlat
cwtl
xadd
sub
cmc
lock
jg
push
jne
push
add
jae
imul
cmpsl
adc
jmp
pop
pop
fnsave
mov
clc
mov
sub
mov
loope
mov
push
push
test
push
int
mov
fnsave
in
and
insb
xchg
add
jmp
ret
movsb
add
pop
xchg
jo
icebp
xchg
mov
mov
shr
movsb
jae
fcoms
jb,pn
xor
xchg
cmp
loopne
xor
fcomps
test
cmp
and
xor
dec
sti
lods
out
adc
in
leave
dec
insb
insb
add
mov
cmp
fisttps
xchg
dec
ret
nop
xchg
or
or
das
pushf
outsl
ds
xor
je
sbb
sti
sub
aas
cltd
jle
cmp
mov
fs
pop
pop
adc
inc
hlt
jle
dec
fs
std
sbb
xchg
aas
jmp
inc
aaa
cmpsl
dec
inc
jnp
sarb
add
add
xchg
ljmp
pop
pop
add
inc
adc
stos
ret
out
dec
ljmp
pop
bnd
push
xchg
jae
cmpsl
int3
jge
cmp
clc
roll
pusha
cmp
mov
cs
dec
pop
aaa
xchg
jne
lret
insb
mov
xchg
sub
in
addb
cld
or
js
lret
lods
loope
sub
sbb
fisttpll
movsl
loope
icebp
outsb
pop
and
pop
dec
cs
es
popf
and
js
mov
popl
popf
or
bound
adcl
sbb
mov
mov
ja
addl
into
int3
jg
adc
lock
xor
outsb
pop
adc
mov
rcr
and
mov
dec
sub
jns
dec
sub
push
mov
je
das
cli
or
cmp
out
andb
push
pop
aam
pop
sbb
sub
and
and
xchg
je
mov
hlt
cmp
adc
and
jno
cmpsb
cmp
inc
sahf
dec
aad
xchg
dec
ljmp
icebp
sub
mov
push
jb
lods
sbb
aad
shll
fildll
das
scas
mov
out
cmp
jbe
rorb
xor
lret
int
arpl
insl
gs
int
and
sbb
js
jecxz
out
shl
lea
scas
out
xcrypt-cbc
cmpsl
adc
dec
add
mov
xchg
test
test
imul
call
inc
xchg
pushf
mov
cli
jmp
faddp
add
imul
hlt
packssdw
jns
xchg
sub
movsl
stos
jmp
sbbb
fs
out
push
push
std
es
xor
decl
insl
pop
daa
in
mov
fs
pop
sbb
sbb
orl
pop
sbb
jnp
mov
lcall
outsl
lahf
pop
dec
mov
loope
ret
pop
lods
addb
nop
movl
or
xor
jp
adc
mov
int3
xlat
xchg
pop
insl
inc
inc
mov
jbe
pop
enter
xchg
xor
aas
in
mov
std
push
cmc
enter
cmp
clc
hlt
push
mov
xchg
loop
cmp
scas
icebp
sarb
inc
mov
inc
repnz
mov
icebp
sahf
scas
cmp
outsl
or
add
push
lea
adc
sarl
add
ret
es
icebp
adc
insl
ltr
imull
jnp
sub
cmpsb
and
xchg
lods
mov
jmp
add
sub
cwtl
insl
inc
sub
pop
call
pop
push
lods
fisttpll
test
icebp
test
idivl
mov
sub
dec
push
xor
insl
ret
std
cld
cwtl
or
adc
jl
pop
lock
mov
sub
sub
loop
out
sbb
mov
loope
lahf
cld
mov
cmp
xor
pop
push
jmp
test
adc
cmpsl
dec
mov
cs
mov
and
test
add
xor
mov
push
push
sbb
jnp
decb
xchg
mov
das
xchg
pop
sub
roll
mov
adc
cmp
mov
fistps
mov
or
fsubrs
xor
and
notb
dec
jle
aad
sarb
mulb
mov
cmpsl
adc
enter
jo
adc
lret
mov
bound
cmc
loopne
adc
sarb
jmp
fnsave
inc
xor
imul
xchg
fbld
and
les
shlb
adc
sub
sbb
mov
pop
xor
or
mov
jne
mov
jp
mov
movsl
add
xor
push
dec
aaa
and
dec
rcl
add
mov
sbb
sbb
repz
and
xchg
sbb
pop
inc
sbb
add
call
das
dec
inc
cltd
and
or
inc
or
mov
mov
push
in
rol
loope
inc
roll
dec
or
bound
inc
inc
mov
testb
inc
rclb
sarl
adc
sbb
inc
sub
pop
sti
mov
sahf
inc
stos
and
push
xor
mov
push
div
mov
adc
movsl
xchg
dec
sub
push
sub
orl
nop
sbb
inc
cwtl
fsub
loope
bound
push
xor
xchg
enter
and
xor
flds
addl
out
lock
das
cmp
mov
inc
xor
sbb
sbb
push
icebp
bound
and
pop
and
and
lods
and
cmp
xor
mov
sbb
add
outsl
bound
jo
enter
or
add
daa
and
aam
insl
aaa
xor
inc
and
pop
popf
push
lcall
mov
jmp
scas
add
mov
mov
add
or
push
repz
push
mov
push
test
shll
add
pop
lret
faddl
loop
push
jo
subb
loope
sub
int
adc
jo
mov
jge
daa
rcll
mov
pop
adc
sub
fwait
mov
or
paddb
mov
sbb
daa
aaa
adc
das
or
test
rcl
cmp
pop
dec
push
adc
mov
fdivr
mov
nop
fbld
inc
jp
outsb
loop
icebp
add
mov
sbb
loopne
outsl
inc
sarb
sbb
loope
or
cmp
mov
and
rolb
aas
test
or
dec
test
mov
aaa
jbe
sbbb
or
cmp
inc
push
mov
mov
lret
inc
out
inc
or
lods
dec
fwait
sbb
shrb
int
and
dec
pop
setno
pop
mov
mov
icebp
mov
adc
mov
daa
roll
pop
or
xor
nop
movsl
or
sbb
inc
fcoml
std
ja
dec
add
in
xchg
adc
inc
scas
adc
and
pop
nop
scas
xor
nop
addb
arpl
sbb
inc
pushf
orb
out
and
inc
xchg
mov
nop
dec
mov
cmc
das
xor
or
pop
jne
addb
xchg
mov
push
aas
stos
orb
outsl
movsl
ret
cmp
push
dec
out
fcoml
pop
sbb
or
and
rol
add
testl
insl
icebp
jecxz
push
int
roll
out
sub
and
xor
ret
pop
jg
and
xchg
add
sub
arpl
imul
xchg
or
adc
inc
push
sub
xor
daa
insl
mov
inc
adc
sbb
mov
rclb
out
xchg
cld
sbb
add
xchg
and
sbb
jno
stc
dec
or
or
xchg
xchg
dec
sbb
dec
mov
add
sub
dec
mov
push
xlat
mov
sub
outsl
jns
add
adc
sub
cmpsl
mov
test
mov
ss
xchg
mov
and
movsb
leave
or
in
cmpl
testb
ret
mov
addl
adcb
pop
cwtl
sub
xlat
fwait
pusha
pop
xor
gs
xchg
mov
lret
push
jne
inc
into
mov
mov
add
out
mov
arpl
add
jle
cltd
fcmovnbe
adc
test
sbbl
xor
sbb
addl
pop
loop
shl
dec
adc
cmc
daa
jo
loop
pop
or
jno
cmpsb
test
jb
arpl
aad
pop
lret
inc
shrb
js
xchg
loopne
inc
mov
test
xchg
pop
add
or
repz
fwait
push
mov
xor
push
inc
test
stos
dec
sbb
into
cmp
cltd
pop
or
mov
pop
popf
mov
dec
lods
sti
fsubrl
inc
sbb
es
pop
test
adc
pop
jbe
sub
push
push
in
xchg
roll
lds
xchg
inc
rorl
mov
cltd
scas
dec
adc
cmpsb
or
iret
cmp
fbstp
xor
push
or
in
sub
pop
push
je
nop
pop
push
and
dec
xor
sarl
test
scas
sbb
xor
adc
cmp
not
push
sahf
stos
popa
iret
xor
inc
data16
sub
mov
sub
pusha
scas
pop
xchg
out
bound
xchg
mov
inc
jmp
push
clc
lcall
cmpsb
pop
je
cmpsl
jmp
xchg
xchg
push
xor
testl
cmp
rol
mov
push
sbb
pop
lods
imul
addr16
add
fmull
lret
sub
sub
add
add
push
push
mov
int3
pop
or
cmpsl
pop
mov
es
jmp
inc
repnz
mov
hlt
pop
jmp
pop
mov
jl
dec
daa
inc
test
ljmp
mov
stc
out
fcoml
lods
popa
mov
stos
fdivl
out
xor
into
lock
mov
xchg
sbb
pop
stc
adc
or
stc
mov
andl
mov
setp
mov
jno
sbb
out
fucomp
dec
add
inc
aad
xor
xchg
dec
sbb
test
call
orl
push
add
imul
fisubl
clc
or
enter
dec
xchg
into
mov
cwtl
and
pop
fbstp
xor
movsl
jno
ds
pop
jne
cmp
or
test
mov
rorb
push
insl
dec
xchg
ss
inc
pop
lret
insb
and
xchg
adc
sbb
test
das
sub
mov
aad
inc
inc
lods
push
inc
pop
xchg
scas
push
test
nop
jo
mov
or
repnz
mov
jg
scas
inc
lods
mov
add
cmp
les
pop
cmp
jb
aad
dec
int
jbe
aam
jecxz
repnz
pop
sbb
jns
dec
scas
dec
pusha
imul
cld
push
shrb
out
aaa
ss
xchg
lahf
and
jae
int3
mov
mov
xor
dec
and
mov
pop
fsubrs
fcompl
push
int
insb
xor
ja
or
ja
cmc
and
loope
sti
aas
popa
mov
inc
push
pop
or
push
cmp
test
sbb
jmp
mov
mov
add
sbb
xor
pop
dec
shl
push
jmp
sub
pushf
in
jo
add
notl
push
test
std
ret
and
sahf
fnsave
andb
cmp
sbb
stc
lods
inc
addl
pusha
sbb
push
fs
inc
add
xor
xchg
cld
in
out
les
jecxz
mov
sbb
aam
cmc
mov
cmp
inc
mov
andb
and
popa
mov
outsl
jecxz
dec
pop
cmp
add
pop
sbb
push
and
mov
sbb
scas
imul
push
ja
xor
pop
inc
jle
jl
sbb
leave
outsl
inc
mov
pop
not
adc
mov
dec
pop
mov
ljmp
xor
mov
aam
js
shll
add
cmp
data16
inc
cmp
and
jne
pusha
jnp
xlat
fxch
mov
and
aad
adc
popa
add
lock
mov
shll
fwait
push
in
repz
int
scas
jecxz
push
or
shll
fmull
inc
roll
mov
rcrb
hlt
and
xchg
jb
icebp
push
dec
aas
clc
in
ret
loope
aaa
lods
jne
bound
fmull
stos
icebp
cmpsl
cmp
mov
add
sbb
xor
sbb
nop
dec
lea
add
dec
subb
sub
xchg
arpl
repz
mov
fmull
xchg
je
pop
ljmp
mov
pusha
arpl
xchg
mov
jne
ja
xor
add
ss
cmp
in
or
aaa
nop
lcall
sub
lea
lock
mov
iret
mov
inc
jle
and
shl
xchg
or
ret
dec
stos
enter
cmp
hlt
in
outsb
push
movsl
add
mov
sub
dec
dec
and
cs
inc
lahf
sub
push
in
inc
cmp
imul
mov
bound
dec
mov
mov
jp
inc
mov
filds
cmc
mov
sbb
add
jo
cld
lahf
addr16
or
jmp
pop
fdivrl
jge
test
or
jg
enter
into
aas
fildl
stos
ss
daa
mov
test
xchg
andl
pop
ss
sub
lock
or
orl
jne
adc
jle
and
mov
mov
cmc
or
fiaddl
ret
cmc
mov
jnp
jo
dec
push
repz
addb
xchg
jbe
test
incb
lods
xchg
clc
aam
jl
inc
jmp
sub
xor
push
lea
pop
mov
scas
push
mov
pop
addr16
dec
jae
jno
xor
lds
mov
sub
push
mov
rol
xor
and
and
clc
push
in
movsl
int
dec
fcoms
ret
test
adc
incb
pop
mov
bound
jbe
js
dec
rorl
cmp
mov
and
sbb
pop
ljmp
add
hlt
and
push
mov
stos
mov
or
xchg
call
inc
aad
cmc
jne,pt
loope
popaw
out
push
nop
lahf
push
mov
sub
mov
mov
out
fnstsw
imul
lds
ja
xchg
daa
test
in
inc
movsl
ss
inc
lahf
popa
fsub
les
cmp
aad
test
jnp
pop
out
in
pop
adc
popf
mov
cvtps2pd
xor
into
sub
xchg
dec
mov
adc
mov
movsb
pop
hlt
xchg
imul
pop
dec
and
adc
fcmovb
or
push
adc
cmp
jne
add
int
cltd
ljmp
mov
fs
and
into
or
xchg
mov
dec
sbb
cli
jno
jnp
lret
sahf
insl
fildll
rorb
or
ret
out
gs
shrb
leavew
aas
les
aad
imul
cwtl
mov
subb
xchg
inc
popa
bound
ja
pop
inc
adc
mov
movsl
inc
pop
xchg
cmpsb
push
mov
cmp
in
inc
inc
je
mov
cmp
pusha
inc
repnz
sub
leave
add
push
bound
add
or
int3
sbb
shrl
movsl
pop
xor
sub
xorl
ja
xor
push
out
mov
inc
add
pop
mov
mov
rcrl
jmp
sti
dec
inc
arpl
xchg
ret
add
leave
xchg
mov
imul
es
or
inc
in
cld
or
test
cmpsl
loopne
sbb
xchg
push
pop
jno
adc
insb
xchg
ljmp
add
das
leave
adc
dec
push
lods
cmp
push
mov
mov
cltd
mov
cwtl
dec
push
cmpsl
mov
cmp
jge
push
lcall
xchg
gs
loop
adc
jae
lods
push
sub
or
pop
pop
ret
xchg
dec
add
fwait
adc
es
push
cmc
das
jne
adc
inc
addr16
mov
rorb
push
sbb
xlat
aas
mov
add
adc
and
cmp
mov
ljmp
cmp
imul
adc
jl
dec
jne
or
inc
jb
out
mov
addl
ja
add
fnsave
pop
dec
inc
cmpsl
jecxz
rcl
ret
adc
out
sub
fs
stos
xor
push
andl
js
out
add
fisttpll
pop
push
ffree
xor
fdivrs
lcall
test
lahf
fcoml
ja
inc
sub
push
xlat
cmpsb
orb
mov
lods
mov
jo
and
push
jne
ljmp
xchg
fbstp
adc
mov
xor
mov
push
stc
jo
adc
mov
icebp
adc
add
cltd
repz
icebp
adc
rcr
lods
das
cli
pop
adc
dec
xchg
adc
mov
mulb
fmuls
inc
adc
packuswb
rorl
gs
and
mov
xor
xor
ret
mov
xor
push
inc
and
outsb
mov
shlb
lcall
mov
and
pop
add
je
inc
mov
lea
or
loope
ja
pushf
enter
xorl
push
xor
push
mov
call
dec
faddl
adc
mov
aaa
push
push
je
mov
push
pop
or
loopne
dec
mov
cmp
push
push
adc
jg
cwtl
push
shll
arpl
sub
pop
adc
fldl2e
lds
push
orb
or
push
sbb
push
xchg
mov
jne
subl
sbb
push
adc
adc
push
jge
push
adc
mov
fsubl
inc
stos
imul
mov
fwait
mov
push
xchg
mov
lret
sbb
inc
ljmp
adc
jno
jmp
scas
stos
adcb
rcll
scas
xor
mov
push
and
pop
pusha
sub
xor
jge
jmp
jl
cmpsb
and
jno
or
cltd
add
jne
daa
nop
pop
mov
cmp
mov
test
mov
jecxz
lcall
add
jb
adc
and
in
mov
aaa
push
sti
adc
cmp
test
adc
arpl
push
mov
jnp
daa
cmp
in
inc
mov
pop
inc
add
roll
dec
or
jns
jmp
adc
and
xor
or
in
pop
jl
rcr
scas
and
or
mov
push
dec
xchg
push
inc
loopne
imul
aas
mov
xchg
std
movsb
mov
xor
sub
loopne
inc
pop
adc
sub
xor
sub
fwait
bound
sbb
cs
iret
int3
and
lea
jmp
sbb
inc
adc
and
xor
dec
xor
mov
adc
adc
jo
and
xor
add
jbe
sub
in
mov
aaa
ret
mov
inc
scas
mov
fcoml
xor
xchg
gs
xor
jne
arpl
dec
dec
adc
cltd
leave
push
imul
insb
insb
outsl
cmp
push
data16
adc
jge
jle
push
cmp
mov
outsb
jne
push
cltd
jecxz
cmc
inc
xchg
pop
in
jg
pop
dec
mov
sbb
mov
xor
sbb
scas
inc
lahf
sub
cmp
adc
xchg
and
jl
add
cs
popa
test
xchg
xlat
notl
and
inc
lods
cmp
push
mov
mov
iret
les
jo
xchg
test
xor
jmp
or
sahf
xor
xchg
cld
stos
inc
fildll
iret
xadd
jg
push
add
push
inc
adc
pop
bound
xchg
xor
jg
dec
ret
pop
xchg
add
sbb
adc
lea
inc
test
rcll
dec
push
push
mov
lods
movsb
test
pop
das
inc
lret
faddl
inc
adc
ret
mov
cltd
test
or
int3
cmpb
push
pop
enter
mov
dec
and
sub
mov
in
dec
push
mov
add
pop
les
repz
jo
pushf
add
jmp
cmp
lea
mov
lret
mov
push
cmpb
jecxz
mov
cmp
out
mov
pop
pop
cmc
xor
lods
imul
stc
sbb
or
shlb
push
jp
push
or
add
jb
adc
xchg
pop
test
aas
cmp
cmp
and
and
xor
dec
jmp
icebp
push
push
cmc
mov
adc
lock
xlat
pop
or
pop
inc
mov
xchg
xchg
push
aad
xchg
inc
pop
inc
jo
inc
xor
in
lods
add
xchg
mov
inc
xchg
in
mov
push
adc
inc
jecxz
and
xor
dec
xorl
xor
loope
leave
loope
mov
push
jns
xor
inc
or
outsb
loop
test
shll
stos
mov
cmpsb
sub
jo
subl
sbb
fs
mov
inc
pop
push
mov
notb
inc
mov
adc
sti
push
dec
loop
ss
push
jl
movsl
mov
cmpsl
pop
cmp
lcall
inc
cmp
mov
sbb
dec
loop
sbb
arpl
shlb
inc
jns
clc
ret
adc
aad
mov
test
rorl
add
push
scas
nop
or
shll
sub
add
ja
jo
add
lcall
or
lds
jnp
int3
cwtl
iret
pop
out
push
cmp
lea
inc
ljmp
mov
push
int3
popf
pusha
mov
push
cwtl
fildl
mov
ljmp
jl
les
sub
movsb
out
adc
dec
push
cwtl
sub
mov
dec
ss
inc
es
push
jnp
jo
dec
sub
jge
jno
negb
cmpsb
adc
push
loopne
test
cmp
jl
push
aaa
push
lcall
movsb
aas
stos
aaa
test
lds
xor
loop
xor
clc
dec
stos
movsl
dec
cmpsl
add
inc
sub
bnd
dec
cmpsb
pusha
xorb
pop
fstpl
call
out
jmp
into
or
mov
lds
jg
cmp
ljmp
imul
lea
call
in
pop
xorl
iret
inc
testb
and
lcall
and
inc
jg
dec
notl
out
push
xchg
adc
add
push
cmpsb
aam
xor
xor
lcall
sbb
imul
fwait
mov
sahf
frndint
xlat
mov
cld
stc
jns
inc
ljmp
mov
hlt
cmp
push
jne
pop
jo
in
pusha
lcall
xor
cmpsb
sbb
jmp
lock
sbb
jle
ret
std
and
xchg
push
inc
add
mov
ljmp
enter
mov
xor
dec
fisttpl
fidivrl
jecxz
mov
test
xlat
mov
jmp
mov
int3
cmp
and
test
cs
ret
cmc
das
fstpl
enter
incl
daa
adc
push
pop
cmp
add
data16
sub
xor
push
aaa
jae
rclb
push
jno
mov
push
pop
or
mov
call
cli
xchg
int
addr16
into
jb
gs
stc
sub
sub
fidivrl
pop
add
incl
movsb
arpl
insb
cmpsb
imul
iret
add
in
adc
test
test
nop
lods
aaa
dec
incl
inc
add
or
std
or
in
inc
push
call
push
shl
xor
incl
push
loope
lock
imul
fsubs
cld
test
xchg
and
stos
in
mov
enter
fists
xchg
movb
ss
aam
or
xor
stos
sub
xor
lods
and
push
cmp
das
in
dec
adc
out
push
fimull
ljmp
push
mov
pop
ds
mov
aam
imul
add
arpl
call
stos
stc
sub
pop
add
mov
mov
xor
jg
ljmp
fisubs
and
lock
stc
ret
dec
jg
xchg
int3
out
icebp
lcall
mov
mov
cmpsl
gs
mov
out
push
fwait
ds
shll
aaa
pop
aam
lock
out
adc
arpl
cmp
sbb
orb
pop
inc
in
leave
repz
mov
pop
push
mov
call
push
cmc
xchg
fstpt
fistps
cmp
add
or
stos
pop
dec
test
loope
ljmp
cs
mov
mov
aaa
into
into
lock
in
pop
mov
shl
or
ficomps
cmp
popa
fcomi
daa
arpl
int
cld
pushl
inc
push
aam
inc
lretw
mov
and
pushl
jnp
jmp
adc
repz
movsl
stos
mov
mov
insl
outsl
in
fs
call
xlat
stos
sub
jno
je
dec
std
into
int
jle
cmp
ret
mov
sbb
push
and
xchg
dec
mov
lods
loope
loope
sar
cmpsb
lcall
pop
xchg
add
movsb
push
push
push
xchg
mov
or
add
mov
xor
movl
and
pop
cld
sahf
jg
ljmp
xor
mov
xchg
dec
adc
sub
stos
loopne
jb
ljmp
iret
inc
cmc
mov
test
fiadds
mov
jo
inc
cltd
inc
das
pusha
fwait
mov
incl
xor
rcl
jnp
jnp
rclb
test
lret
mov
stc
repz
pop
cmc
call
or
int3
fidivs
fsub
in
ret
aad
pinsrw
pop
or
incl
or
inc
lret
shl
out
jge
outsb
lock
adc
mov
aaa
mov
jg
jmp
inc
cmpb
mov
xchg
push
or
call
push
xor
out
imul
jecxz
push
jae
add
je
clc
fldcw
jmp
sarb
sbbb
stos
fistps
cmpsb
js
push
jns,pt
dec
clc
gs
adc
add
jl
addr16
stos
in
inc
push
fdivrs
test
jmp
icebp
and
pushf
sbb
stc
dec
sbb
divb
cmc
ljmp
arpl
data16
push
mov
jle
jb
sar
jmp
iret
out
fdiv
pop
repz
scas
sub
jno
cwtl
inc
push
cltd
imul
xor
ljmp
xor
mov
jmp
xchg
mov
push
or
sbb
cltd
iret
or
mov
stc
inc
addr16
cmp
jb
mov
lods
in
lret
insb
push
mov
mov
mov
sbbb
push
jno
loop
decl
aaa
jb
adc
imul
rclb
leave
scas
lcall
dec
jb
aam
cmpsb
sarb
outsb
test
into
or
out
push
jbe
out
xor
cs
pop
xchg
push
mov
xorb
xchg
push
sbb
xchg
dec
sbb
pushl
ficomps
mov
fnsave
xor
pop
or
in
loop
mov
mov
or
mov
fstl
mov
out
cmp
sub
or
inc
lahf
xor
ljmp
imul
js,pt
js
lea
dec
sbb
inc
icebp
aam
cld
aaa
lods
bound
popa
lahf
fimull
xor
decl
cwtl
shlb
adc
lock
push
int3
bound
jp
and
lcall
imul
or
addr16
push
cmc
jnp
jmp
call
dec
and
jmp
scas
arpl
aam
push
js
jns
imul
rcrb
ds
jge
rcll
out
fcmovnbe
pop
scas
fldl
pushl
lock
dec
jmp
jb
ja
cmpsb
push
andnps
mov
fiadds
dec
out
xor
repz
int
push
loop
repz
jg
push
push
js
orl
xchg
cmpsb
subl
mov
pop
cmp
inc
std
dec
sub
xchg
dec
mov
pop
mov
incl
sub
xabort
mov
test
mov
pusha
cmp
add
movsl
pushf
jle
aas
push
mov
mov
dec
mov
cmp
incl
pop
xchg
sub
sub
add
lret
shlb
scas
jg
xlat
leave
dec
sbb
rolb
inc
jnp
sub
fdivrs
ret
std
aaa
ljmp
pop
xchg
pop
cltd
bnd
hlt
adc
push
sbb
xor
mov
lds
jg
add
aam
ret
mov
dec
mov
xchg
xor
lcall
data16
jne,pt
sub
movsb
iret
jns
movsl
std
cmp
push
fs
call
loopne
ds
ret
push
add
and
outsl
test
mov
ss
mov
ds
fcmovb
inc
lret
lcall
pop
dec
out
loop
jecxz
mov
movsl
filds
jp
lock
xchg
cmp
sbb
add
outsl
or
xchg
mov
pop
xchg
pop
jnp
lea
mov
xchg
add
add
mov
pop
hlt
mov
fbld
inc
loop
repnz
inc
jg
cli
sahf
mov
mov
mov
mov
pop
add
in
xor
ja
lock
xor
insl
push
inc
xchg
ljmp
arpl
inc
fistl
dec
xchg
in
out
into
ljmp
mov
ljmp
scas
shll
cltd
shll
mov
aaa
sub
lcall
mov
push
inc
data16
sub
fxch
bound
mov
jg
fdivp
mov
mov
aam
dec
mov
mov
decl
pusha
sub
sub
test
push
lret
add
jmp
mov
repnz
std
das
mov
leave
cmp
xchg
ret
mov
xchg
sbb
call
loopne
popf
lds
mov
dec
adc
test
stos
insb
call
xchg
fildl
sbb
int
xchg
fsts
jo
pop
sub
outsl
cmp
testb
jb
mov
loop
incl
enter
sysenter
dec
cli
xor
pop
rcrb
lahf
pushl
in
out
in
adc
jb
pop
xor
xchg
shl
popa
test
incl
cmp
push
int3
lds
fwait
pushf
and
bound
rclb
call
sub
dec
jle
pop
mov
cmp
or
shrl
sbb
xchg
jge
cmp
and
mov
add
cmp
loop
sti
jmp
mov
sti
shlb
ror
int3
ret
je
mov
mov
sbb
cld
jns
aas
mov
inc
orb
jne
imul
cld
jns,pt
fldt
adc
add
pop
or
sub
outsb
fmull
jbe
clc
cmp
outsl
cmp
fiadds
loope
les
jle
inc
mov
cmp
jne
aaa
and
mov
mov
rol
mov
push
sub
and
ljmp
les
test
loop
fsubr
add
adc
cwtl
fcoms
pushl
jmp
lret
add
rcll
aam
movsb
fiadds
pop
xchg
enter
pushl
sbb
sub
nop
aas
mov
push
stc
jg
inc
rclb
or
fcoml
pushf
mov
mull
loopne
in
xor
lods
xlat
ror
dec
std
mov
es
sti
outsl
clc
mov
mov
or
lock
lods
jecxz
incl
push
mov
test
scas
call
or
xchg
psubw
mov
pop
push
mov
inc
ss
jo
mov
loope
pop
or
pop
sbb
xchg
das
jl
cli
adc
lcall
lret
sti
sbb
and
xor
adc
xlat
cmp
jmp
pop
aas
jns
mov
adc
lret
mov
shr
adc
push
fbld
mov
cmpsb
incl
ds
scas
jmp
dec
sbbb
je
and
mov
add
jns
jmp
lcall
fwait
lret
std
dec
pop
stos
std
addb
mov
push
mov
dec
decl
pop
xchg
rorl
mov
xchg
push
add
jl
clc
ljmp
cli
pop
ss
lret
mov
out
pop
sbb
fsubrl
pop
cmp
stos
xchg
add
cmpl
cmp
out
mov
lret
jns
xor
push
xchg
ljmp
adc
jg
sbb
push
movb
js
cld
cs
incl
mov
mov
mov
cmpsl
fsubrs
adc
jo
pushl
std
test
leave
lcall
pop
push
mov
add
mov
push
bound
bound
cmpl
loopne
and
adc
inc
clc
xor
popa
pop
jle
lcall
ss
pushf
or
or
cmpsb
pop
pop
xchg
mov
orl
cmpsb
fbstp
jl
sbb
adc
call
loopne
jecxz
inc
data16
inc
sub
mov
jbe
out
and
fwait
lcall
sbb
xor
add
test
daa
pop
mov
sub
loope
xor
mov
cwtl
cmove
mov
push
sub
fistpll
test
push
or
imul
push
add
popf
push
and
loop
xchg
int3
push
movsl
scas
out
xchg
or
mov
fwait
jmp
dec
je
cmc
cltd
push
inc
cltd
xlat
push
push
adc
cmp
mov
xlat
sti
push
adc
dec
les
adc
inc
in
xor
test
jle
or
inc
aaa
cmp
std
inc
jmp
add
ret
and
dec
loop
fisubs
loope
dec
loopne
jg
push
data16
fs
cmp
addb
or
pushl
sub
mov
mov
sti
fsubrl
push
xchg
aam
loopne
cld
sbb
pop
dec
and
mov
and
cli
ljmp
xchg
shrb
dec
fidivs
push
shlb
aas
loope
adc
ja
ja
loope
fistpll
and
test
jl
data16
push
sbb
add
push
jne
push
adc
lahf
mov
jb
or
notb
push
inc
lret
mov
fucomp
cli
jo
adc
xchg
inc
cmp
stc
xor
pop
sti
sbb
jne
pop
pop
mov
mov
add
loop
adc
cmc
das
push
jmp
incl
js
lahf
pusha
fdivl
ljmp
dec
mov
pop
int3
ret
jb
sub
cltd
adc
call
scas
push
fdivrs
loopne
loopne
xor
bound
or
fbstp
xor
outsb
gs
pop
push
inc
mov
pushl
dec
mov
ljmp
subl
sbbb
push
push
add
pop
cli
loop
dec
and
add
dec
mov
clc
icebp
or
xchg
jle
aaa
std
inc
incl
lods
scas
mov
mov
mov
sbb
push
jnp
push
mov
dec
rclb
jmp
sbb
lret
js
out
xchg
adc
stc
ljmp
inc
ss
jl
and
push
in
cmp
test
mov
dec
cmpsb
mov
fnstsw
dec
daa
lock
cmp
loopne
mov
aam
dec
xlat
xorb
cwtl
push
add
aam
mov
incl
cmp
mul
mov
ficoml
fcmove
lahf
loop
lock
ret
push
inc
jnp
fnstcw
cld
lcall
frndint
add
std
ret
mov
xlat
or
imull
dec
pop
mov
std
or
ja
scas
lret
loop
notb
fwait
and
pushl
decl
lock
dec
sbb
adc
adc
mov
dec
xchg
rcll
add
cmc
lock
enter
cmpsb
loop
mov
mov
cli
push
xchg
pushf
bound
movl
cmp
stos
adc
lock
scas
loop
lock
xchg
loop
imul
out
call
or
call
sti
jnp
cli
popf
iret
repnz
jmp
dec
pop
inc
push
mov
fstpt
pop
inc
out
outsl
clc
ljmp
cmp
shll
lret
mov
xor
shll
mov
pushf
stos
or
jle
sti
inc
jle
ljmp
cmp
add
pop
sub
aaa
cld
fsubl
xchg
sbb
dec
cmpl
push
in
push
ss
jp
out
aad
dec
jmp
pop
scas
dec
lret
and
call
popf
xor
jae
fsubl
imul
xor
mov
lds
test
xchg
inc
pop
and
sbb
add
out
push
movsl
dec
and
push
dec
cmp
test
scas
cmp
test
int3
and
scas
cwtl
or
test
cmp
xor
stos
std
mov
and
adcb
or
add
inc
fwait
das
ret
ja
adc
cltd
mov
mov
push
stos
inc
std
xor
sbb
aad
jmp
jne
fidivrs
insl
sahf
cmpsl
or
outsl
jo
mov
test
push
sub
xor
push
sahf
and
push
stc
imul
jns
dec
imul
pop
rcl
dec
pop
les
xor
pop
mov
das
call
mov
sbb
push
mov
mov
mov
mov
pop
clc
mov
loop
je
cmpb
pcmpeqd
xchg
push
pushf
gs
rcrb
or
pushf
lret
clc
mov
pop
test
in
ds
push
insl
cmp
jmp
xor
es
ret
test
or
cmp
es
jns
mov
xchg
cwtl
jo
stos
inc
scas
cmpsb
shrl
outsl
adc
and
adcb
rclb
jne
fnstcw
mov
add
cltd
and
les
dec
out
data16
add
int3
loopne
add
add
sbb
cs
jae
dec
xchg
inc
mov
icebp
test
fadd
dec
cld
imul
pop
sbb
xor
sbb
sbb
mov
cli
sbb
je
pop
adc
imul
adc
and
ss
cld
mov
popa
push
repz
add
lods
mov
add
stc
loope
or
ret
add
jle
xchg
imul
mov
adc
inc
mov
das
cs
rolb
scas
cld
mov
add
or
adcl
or
stos
ror
je
stos
push
adc
cmp
lahf
mov
push
cmp
ss
pusha
cmp
loopne
dec
or
ds
lcall
insl
dec
hlt
in
adc
push
dec
jecxz
push
outsl
mov
stos
mov
jp
test
adc
or
test
stc
adc
adc
jecxz
push
loop
aas
adcl
add
pusha
and
loope
push
aaa
mov
mov
rcrl
nop
out
adc
in
lds
shlb
repz
or
cmp
mov
push
xor
sbb
idivl
adc
xor
add
lock
mov
stos
or
adc
lret
xor
mov
insb
loop
ds
mov
test
jne
ret
sub
lods
pop
push
jge
sub
dec
fistps
icebp
xor
enter
fsubrl
ret
scas
mov
jl
scas
loop
lea
pop
clc
adc
push
add
dec
add
push
and
lea
fs
mov
adc
inc
pop
test
or
iret
mov
scas
scas
push
jb
mov
cmp
cmp
nop
bound
inc
arpl
lds
xor
cli
add
and
sbb
cwtl
add
ret
mov
mov
mov
int
rclb
in
jae
or
gs
sahf
or
push
push
ss
dec
push
insl
lcall
ss
and
daa
inc
push
or
sub
mov
mov
mov
jns
inc
mov
mov
jmp
es
ja
in
loop
add
sbb
gs
cmpsl
fwait
or
xchg
stos
pop
fisttpl
push
dec
popl
mov
jecxz
adc
hlt
push
fsubrl
hlt
xor
andl
mov
dec
int
rorb
xorb
dec
insl
xor
in
lods
jns
add
mov
addr16
inc
test
dec
rcrl
es
adc
adc
ja
push
adc
or
dec
xchg
push
cld
cli
xor
push
jb
jge
adc
orl
xorb
inc
je
mov
dec
cwtl
aad
rcll
shlb
cmp
jl
sub
jno
int
jg
fsts
nop
popf
jo
lods
or
lcall
xor
and
cmpsl
xchg
mov
jnp
mov
test
loope
aad
sbb
add
sbb
imul
popf
lea
mov
fimuls
icebp
pop
outsl
fimuls
scas
xchg
pop
push
and
je
fucomp
inc
mov
aaa
inc
enter
pop
dec
or
aad
and
daa
inc
or
out
fildl
aaa
push
mov
lock
rclb
pop
rol
mov
add
cwtl
push
mov
data16
adcl
int
pop
repnz
xlat
cmpsl
mov
lods
daa
neg
mov
mov
cmpl
scas
out
repz
es
fdivrl
ror
push
or
int
xor
sti
popf
sbb
cmp
in
lahf
and
lret
loopne
es
mov
shll
pop
xchg
xor
lcall
ror
push
adc
mov
jmp
aad
xor
xor
mov
add
imul
mov
mov
stos
inc
hlt
adc
ret
in
sbb
in
mov
or
subl
movsb
push
mov
jno
push
popf
or
sub
mov
js
lret
add
xlat
pminub
add
gs
inc
or
leave
xadd
xor
or
sub
lods
mov
adc
or
pop
mov
imul
inc
xchg
jp
fstl
pop
bound
aas
ret
out
testb
and
jge
push
loope
xlat
jg
bound
outsb
jecxz
inc
rcl
pop
push
sbbl
pop
gs
repnz
insl
mov
xchg
xadd
out
push
inc
lcall
lret
jmp
mov
clc
dec
add
mov
jl
inc
cmc
adc
rorb
popf
mov
push
and
push
inc
mov
test
pop
xlat
or
push
jae,pn
shlb
mov
and
sarb
jns
test
sbb
fcoml
mov
cmp
and
xor
dec
mov
imul
add
cmp
aad
ret
out
loop
xor
xor
xor
cmc
or
sub
call
ret
repnz
push
cmp
shlb
addr16
add
je
add
xchg
fwait
pop
jbe
mov
sbb
inc
mov
pop
push
ljmp
sub
mov
lods
sbb
or
dec
std
jo
movsl
repnz
push
or
call
adc
scas
pop
mov
loop
leave
aaa
cmpsb
sahf
cmc
and
out
das
cmc
jecxz
jae
mov
dec
inc
aam
pushf
or
mov
das
lcall
lret
fdivs
mov
sbb
mov
mov
jmp
ds
pop
aad
movsl
imul
pop
push
int3
mov
js
jae
push
insl
sbb
aas
fiadds
push
xchg
push
push
std
cli
mov
cmpsl
sbb
shlb
fidivl
push
push
loope
xchg
adc
insb
xor
xchg
movsl
push
mov
or
inc
xchg
xor
out
mov
push
fwait
in
incb
repnz
das
js
ja
xor
xchg
fdivrl
cmp
shrb
add
fadd
hlt
push
clc
jne
sbb
sbb
out
adc
xchg
jecxz
pop
outsb
mov
xchg
lcall
cmp
mov
hlt
data16
mov
adc
lret
jno
loopne
xor
pop
loope
pop
adc
movd
xor
repz
add
push
test
dec
sbb
mov
push
cmp
or
pop
pop
fdivrl
push
fisubrl
scas
sub
dec
xchg
pop
bound
adc
cmp
rcrb
mov
mov
add
fistps
adc
or
jge
mov
cmpsb
js
mulb
cs
das
jne
add
cwtl
xchg
adc
push
and
out
flds
xchg
pop
pusha
inc
out
aam
es
test
push
jl
sbb
xchg
and
enter
add
ljmp
fwait
jne
cmp
ljmp
lret
adc
and
jnp
repz
std
stc
inc
les
fwait
jnp
faddl
push
test
sbb
sbb
adc
push
aam
cmp
lods
inc
loopne
imul
pop
jne
in
xorb
fstps
jns
and
jecxz
adc
sbb
xchg
mov
add
out
ljmp
pusha
jo
mov
or
adc
add
mov
mov
adc
xor
xchg
mov
add
rclb
rorb
scas
push
stc
mov
mov
cmc
mov
push
dec
les
imul
test
insb
loope
and
sub
mov
cmp
sbbl
ficoms
in
in
mov
rclb
mov
push
icebp
adc
cld
adc
test
jg
add
adc
subb
fsubl
push
test
add
push
inc
shll
adc
call
mov
adc
orl
in
lret
and
or
test
or
subl
mov
inc
call
adc
pop
fcompl
xchg
push
call
adc
adc
dec
adc
or
inc
popf
pop
aaa
and
dec
adc
jecxz
or
xlat
inc
mov
movsb
ss
and
subb
addr16
add
mov
mov
addr16
mov
icebp
in
inc
aad
fadds
insl
ljmp
add
jne
cs
pop
xchg
mov
cmpb
rcll
xor
sbb
mov
or
mov
sbb
adc
add
add
pop
fcoms
pop
inc
xorl
jnp
push
add
mov
nop
out
or
hlt
add
lock
xorb
mov
dec
xlat
les
jbe
add
mov
addb
out
loopew
fstpt
or
lods
rolb
xlat
mov
adc
pushf
clc
inc
and
and
fcoml
jbe
aas
iret
fwait
aaa
jge
stc
lea
mov
or
cltd
mov
sub
mov
push
mov
pop
and
push
mov
test
jp
pop
xor
sub
out
adc
test
clc
add
push
and
cs
lods
std
inc
push
sub
in
xor
nop
or
aad
or
inc
rcl
inc
pop
add
mov
cmp
add
mov
xchg
xchg
and
inc
insb
mov
sub
mov
loop
jo
or
repnz
insb
add
add
aad
mov
inc
pushf
add
push
out
add
rcrb
adc
mov
push
aaa
push
sub
pop
fwait
and
xor
jb
lcall
addl
jecxz
jns
xchg
and
pop
add
mov
lret
fs
mov
mov
adcb
xor
sbb
addr16
loop
fdivrs
push
mov
or
mov
cs
and
adc
xor
adc
rclb
mov
mov
addb
int
jmp
cmp
sti
stc
xor
sub
dec
xchg
addb
jno
imul
stos
jbe
mov
in
xchg
repz
rol
loopne
lahf
adc
cmp
cmp
dec
outsl
lret
call
repz
pop
push
pop
jmp
lods
add
mov
xor
mov
push
cmpsl
loope
imul
ficomps
test
ret
adc
lcall
dec
xchg
push
lcall
adc
pop
xchg
pop
cmp
mov
jle
mov
xor
movsb
cmp
adc
sbb
and
inc
pop
adc
loope,pn
push
mov
icebp
mov
and
cltd
cmpsl
inc
add
cmp
mov
outsl
jae
add
dec
lods
cli
repz
xor
mov
inc
out
out
repz
pop
add
or
pushf
sub
cmc
mov
and
les
pop
push
pop
popa
or
jo
adc
icebp
or
pop
add
push
out
das
inc
inc
jbe
and
xchg
sub
fisubl
pop
sub
inc
dec
ret
or
mov
movsl
loop
cmpsb
idivl
dec
mov
call
mov
mov
dec
mov
adcl
cmp
dec
cmp
jmp
flds
stos
lock
jge
cltd
cmp
or
add
add
or
shlb
push
jmp
add
mov
push
imul
inc
aam
test
push
jmp
loop
scas
cmp
and
cmp
and
dec
mov
mov
jp
adc
dec
mov
imul
sarb
mov
mov
into
cmpsl
xor
mov
push
pop
repnz
or
and
jnp,pt
dec
mov
aas
das
ja
outsl
mov
or
xchg
xor
movsb
pop
stos
sub
addb
gs
pop
or
test
addb
mov
clc
fiaddl
xchg
mov
xchg
sub
in
or
or
pop
jns
rcll
cs
movlhps
mov
sahf
es
sti
push
out
dec
or
add
and
daa
fsubl
push
dec
mov
fadds
orb
das
pop
pushf
add
stos
and
in
mov
in
jae
iret
xchg
adc
cmp
ljmp
pop
les
int
loop
test
mov
sbb
sahf
mov
dec
loop
jne
mov
mov
outsb
add
mov
push
daa
sbb
mov
ds
hlt
lods
dec
imul
out
repnz
dec
adc
inc
jmp
mov
xchg
icebp
lods
xor
arpl
pop
pushf
lret
push
popf
push
test
add
dec
mov
loop
xchg
inc
loop
fwait
rclb
xlat
mov
jb
mov
les
rolb
inc
cmp
mov
mov
cmpb
xchg
sbb
fcomps
mov
hlt
sbb
icebp
sbb
jns
in
lock
ljmp
jnp
jae
lahf
adc
and
clc
rorb
pop
js
jae
pop
aam
movswl
insl
mov
rcll
sbb
js
js
mov
cmpsb
mov
inc
push
adc
mov
leave
daa
outsl
in
push
push
ret
adc
mov
andb
dec
lods
mov
inc
iret
test
push
mov
int
repnz
inc
out
fistpll
es
daa
enter
popa
sub
nop
enter
pop
popa
dec
sbb
les
lret
enter
fnsave
popf
jmp
cmc
cmp
ficompl
fidivs
push
and
sub
sub
and
rolb
push
or
sbb
cltd
subl
dec
arpl
jge
lods
push
push
out
adc
pop
jne
xor
fildl
stos
shll
sub
cmp
xchg
sbbb
push
jg
xchg
mov
sbb
enter
push
inc
mov
aam
outsb
push
mov
out
cmpl
lods
in
or
cmp
adc
mov
and
popa
stos
ret
mov
in
outsl
call
jl
call
cli
push
aam
aas
icebp
xor
lock
scas
sbb
xor
mov
add
pop
je
shld
add
movsl
push
mov
loopne
push
sbb
sub
int
lock
pop
and
outsl
mov
pop
leave
in
add
dec
les
jbe
push
mov
ret
into
jl
mov
pop
sub
subb
mov
lret
adcl
jno
or
and
add
sbb
out
sub
push
and
mov
jbe
push
test
lea
jnp
mov
inc
scas
cmp
loope
xor
out
jne
or
or
lahf
movsb
pop
xchg
inc
ficompl
fistpl
stc
adc
push
adc
pop
out
adc
stos
sbb
mov
out
xchg
imul
rorb
rcrb
andb
sarl
or
sub
lret
sarl
test
sti
les
out
bnd
pusha
xchg
insl
push
xchg
mov
jmp
pop
jo
xchg
cmp
pop
cmp
jns
movsb
daa
add
test
cmp
xorl
add
inc
push
clc
scas
int
xchg
inc
dec
jo
inc
and
not
sub
rcll
dec
push
fldt
and
pop
pop
pop
repnz
in
ds
push
dec
jle
stc
fildll
adc
gs
lock
xor
movsb
add
loopne
push
jp
push
sbb
cmp
fcoml
xchg
insl
inc
addb
dec
cs
jbe
push
loop
add
stos
or
add
add
mov
push
loope
inc
test
pop
nop
test
pushf
iret
cwtl
es
scas
or
stos
sbb
icebp
and
push
add
sarl
xchg
jns
xor
xor
pop
cmp
adc
cld
sub
push
jmp
cmc
push
sub
call
inc
sbb
je
imul
xor
loopne
add
xchg
mov
sub
and
cmp
jne
pop
aas
or
jns,pn
je
dec
daa
dec
outsb
pusha
dec
movsb
arpl
icebp
aaa
enter
mov
cmp
pop
test
push
mov
or
dec
addr16
iret
inc
int
mov
add
jmp
out
mov
cmp
or
inc
cmpxchg
ds
mov
or
lods
es
and
add
daa
out
xor
stos
fstl
xchg
xchg
xchg
fwait
inc
add
lods
cmp
rorl
es
add
inc
js
fwait
sub
jne
sbb
clc
mov
inc
jne
adc
or
jge
movl
pop
insl
int3
push
jmp
mov
add
jle
mov
aam
cld
push
xchg
inc
or
adc
sbb
mov
repz
xor
inc
pop
aam
int
push
dec
or
sbb
and
pushf
cmpsl
movl
test
shl
sub
mov
jno
xor
push
test
xchg
mov
fsts
lcall
adc
inc
lods
add
cmp
jnp
jl
jp
lds
test
push
aaa
sub
mov
add
mov
icebp
imul
pop
mov
sbb
sbb
test
bswap
popf
push
test
mov
lds
ret
xor
outsb
leave
cwtl
fs
mov
mov
into
mov
inc
push
cmp
add
sub
movsb
lds
cmc
in
inc
stos
inc
stos
loop
je
clc
and
shll
dec
push
pop
out
sarb
pop
xor
cmp
xor
ja
mov
mov
test
mov
mov
scas
sub
pushf
mull
outsb
fcompl
int3
adc
je
lret
and
xchg
cmpsl
mov
push
test
xor
push
adc
fcom
test
mov
jp
jmp
lahf
out
sbb
cmc
sub
xor
mov
jae
shlb
jecxz
std
adc
mov
push
mov
mov
out
lods
or
inc
jg
pop
jmp
pop
jmp
pop
pop
mov
mov
stos
sbb
data16
mov
imul
pusha
adc
les
fstpt
lret
dec
lds
rol
hlt
test
jmp
adc
adc
cmp
adc
add
jno
dec
xchg
lods
sub
out
das
sbb
xor
add
inc
rep
nop
in
push
jmp
push
enter
cmpsb
or
lods
shl
fwait
xor
dec
outsl
int
xchg
js
jo
inc
sub
repnz
mov
sahf
test
xor
shll
lock
ficoml
mov
pop
loopne
cld
sub
mov
stc
movsl
lahf
cmp
testl
cmp
lds
xchg
int3
lret
addr16
xor
mov
aaa
imul
movsb
addr16
xor
push
cmc
loopne
les
fdivrs
ja
add
pusha
lret
jno
fwait
add
out
cwtl
rclb
add
mov
push
in
dec
test
loope
inc
int
xchg
dec
mov
mov
push
inc
inc
sbb
es
xlat
xor
push
mov
push
fs
or
cmp
or
push
aam
clc
inc
neg
mov
pop
xor
popa
out
push
push
aad
cs
jmp
xchg
jno
and
xchg
and
add
or
ficoms
ljmp
das
and
movsl
in
lahf
lock
lods
pop
adc
xchg
ja
inc
pop
test
xchg
test
jnp
stos
sbbb
shll
test
push
sbb
jl
jb
mov
sub
or
mov
xor
ret
dec
lock
pop
pop
lods
jbe
push
pop
clc
imul
imul
xorb
popa
push
and
loop
xor
dec
dec
cmpsl
stos
cmpl
inc
cmpsb
jge
insl
negl
in
aam
sbb
adc
cmp
cmp
xor
and
mov
pop
mov
add
aad
fimull
xor
das
roll
fdivrl
test
cmp
int
adc
insl
shrb
adc
xchg
stc
push
test
fnstsw
mov
js
or
dec
cmp
out
stos
mov
lcall
addl
fs
and
lea
data16
ds
aaa
loopne
lock
lahf
fucomp
mov
call
ret
test
arpl
pop
les
add
inc
mov
add
push
jecxz
fdivs
jmp
push
popf
dec
and
aad
push
dec
sub
sub
dec
push
iret
inc
xor
sub
or
mov
std
ret
loopne
mov
jge
sbb
jae
iret
push
sbb
jo
push
mov
jb
cmpl
xchg
clc
aam
fwait
cmpsl
jae
cmp
dec
andb
pusha
cmc
sub
out
sub
cmc
scas
dec
inc
cmp
je
lds
or
pop
xor
or
popf
xor
mov
dec
shrb
xchg
sbb
mov
and
jle
dec
pop
xchg
push
imulb
daa
push
pusha
cmp
movsb
lods
mov
or
sub
popl
add
mov
daa
test
mov
lahf
mov
test
hlt
cmpsl
int3
add
or
mov
call
push
adc
dec
sbb
inc
mov
out
jle
cs
in
loopne
clc
jne
mov
fsubp
in
ffreep
push
daa
push
jge
pushf
pop
mov
sbb
mov
out
ret
inc
and
loop
push
mov
das
gs
adc
sub
dec
int
orl
sbb
adc
in
dec
loop
adcl
movsl
push
mov
mov
ret
ss
popa
mov
sub
mov
xchg
push
icebp
add
mov
sub
jbe
pop
imul
push
movsl
add
scas
fnstsw
cmp
xor
adc
bound
cmpsl
sbb
test
add
out
lds
xchg
cmp
add
adc
inc
pusha
test
lcall
roll
outsl
addr16
dec
outsl
push
int
mulb
jp
add
test
scas
jmp
xchg
pop
mov
mov
imul
shrl
in
xor
ror
xchg
sbb
or
les
loopne
mov
xor
inc
xchg
pop
mov
mov
int
mov
dec
pusha
xor
mov
xchg
cmp
xor
push
add
mov
dec
dec
jle
andl
gs
iret
test
push
adc
scas
push
int
jg
xor
adc
fs
es
mov
ljmp
pop
lods
add
lock
push
mov
xor
mov
and
imul
cmpsl
xchg
mov
add
pop
push
stos
jns
inc
mov
pop
inc
aaa
repnz
imul
sbbb
out
sub
mov
and
lret
push
or
dec
sti
push
imul
xchg
push
adc
sbb
inc
popa
movsl
adcb
adc
dec
addr16
addr16
pop
push
cmp
xor
adc
stos
int3
xchg
arpl
push
xchg
cmpl
aas
push
dec
jmp
ja
jbe
mov
add
into
pop
fld
push
sbb
inc
adc
lret
inc
mov
mov
arpl
aad
cmp
rcrl
mov
lcall
repz
jns
sub
or
hlt
test
es
rcrb
rcrl
mov
jb
inc
cmp
mov
inc
cmp
add
shlb
cltd
loop
mov
insl
daa
pop
cmp
faddl
adc
or
fstpt
adc
shlb
push
push
sahf
pop
repnz
push
mov
loop
aam
rol
or
dec
inc
and
ss
xchg
xchg
pop
mov
ret
mov
in
push
pop
inc
mov
aam
inc
mov
inc
jge
sbbl
push
call
pop
insl
je
insb
inc
sbbb
pop
mov
xchg
push
cmpsl
movsb
outsl
pop
sbbl
add
fldpi
jno
cmp
subl
adc
pusha
push
or
out
add
in
in
aam
rolb
test
cmpsb
cmp
mov
mov
insb
mov
jge
add
mov
jecxz
rdtsc
int
pop
cmp
andl
inc
rcrb
xor
adc
adc
and
ja
mov
xchg
push
dec
or
lea
stc
pop
mov
jp
cmpsl
leave
js
adc
mov
add
jo
jecxz
mov
sub
xchg
arpl
push
or
jae
mov
add
pop
insb
aam
rcr
or
in
push
or
call
add
push
iret
ja
add
xchg
jmp
xor
jns
jecxz
outsb
push
pop
dec
sbb
in
jne
js
cmp
loope
test
push
mov
mov
mov
xor
out
pop
jo
push
pop
popl
sbb
lret
mov
imul
inc
sbb
mov
insl
inc
fmull
inc
inc
rol
fisubl
test
or
xor
pop
les
mov
int3
icebp
loopne
or
adc
adc
testl
xor
mov
xor
lret
inc
push
fs
pop
push
pop
add
inc
pop
insb
adc
dec
xor
sbb
and
and
push
mov
into
sbb
xchg
inc
jmp
movsl
sahf
jecxz
fistl
pop
mov
add
mov
inc
clc
and
les
push
jg
sub
cltd
jp
cmp
xor
push
in
sbb
push
mov
inc
xchg
arpl
dec
cwtl
lret
sbb
sarl
cltd
in
and
sahf
jmp
xor
xchg
xchg
add
sub
jo
inc
icebp
push
daa
cmp
xor
scas
addr16
rclb
nop
nop
daa
adc
inc
call
jecxz
rcrl
or
adc
and
bound
rorb
pop
cmp
dec
pusha
or
popa
lock
xor
lock
pop
ss
dec
rolb
xchg
bound
mov
and
rclb
mov
lock
imul
jnp
pop
xchg
shrl
push
cmp
cmpsl
nop
into
mov
aaa
mov
dec
imul
movl
icebp
sbb
mov
pop
mov
fistl
scas
lcall
mov
inc
mov
cmc
cltd
repz
jp
pusha
cmp
fwait
clc
cli
test
outsb
adc
mov
xlat
dec
out
mov
mov
or
bound
fwait
jno
pop
mov
lret
stos
fsts
add
hlt
xlat
in
int3
stos
push
sbb
mov
xchg
cmc
mov
mov
imul
add
dec
leave
sub
sbb
add
push
stc
stc
test
add
int
scas
aas
stc
sbbl
sub
mov
pusha
int3
test
pop
xor
push
or
push
xor
test
add
aad
aam
push
mov
or
loope
les
mov
mov
hlt
test
cmp
out
setle
fisubl
cltd
jl
and
dec
roll
jno
add
xlat
aaa
imul
xor
sub
fisubl
xchg
test
and
ret
icebp
lods
cwtl
mov
test
aaa
flds
mov
xchg
movsb
xor
mov
cli
push
jb
out
and
nopl
jne
and
pop
or
cmp
lods
pop
iret
inc
repz
pop
out
xor
inc
cld
mov
mov
lcall
das
xchg
sbb
cwtl
daa
jno
mov
mov
sahf
push
and
mov
mov
xchg
fprem
mov
xorb
sbbb
sahf
and
xlat
ss
xchg
jp
addr16
jmp
dec
and
or
ljmp
sub
adc
inc
jge
test
add
inc
dec
add
sub
mov
dec
dec
ss
jp
in
loopne
cmp
aad
mov
mov
ljmp
movsb
inc
mov
mov
pop
xor
in
in
test
std
fidivl
ss
es
sub
or
pusha
enter
inc
movsl
push
cs
mov
adc
inc
pop
cwtl
leave
insb
movsl
push
mov
cmp
shrb
nop
cmpsl
and
test
and
js
repnz
jecxz
jno
dec
xchg
stos
add
sub
enter
aaa
imul
outsl
std
and
xor
inc
rcll
inc
pop
daa
cmpsb
arpl
jg
xchg
jl
inc
sbb
addps
pop
gs
mov
fiadds
lods
or
or
int3
sub
and
jne
or
push
lret
xchg
jae
sub
mov
mov
inc
mov
gs
pushf
jg
adc
xchg
mov
or
hlt
mov
ret
lods
sbb
mov
add
outsb
call
add
cmc
lods
adc
xchg
xor
out
push
mov
xchg
or
insb
mov
rcrl
xchg
push
movsl
mov
and
mov
jecxz
mov
jno
movsl
push
ret
cwtl
nop
xchg
fprem1
mov
aas
aad
add
movsl
mov
dec
mov
inc
rep
call
hlt
and
hlt
testb
and
xor
jae
fcoms
lea
mov
inc
inc
sbb
ret
xchg
loop
push
push
aaa
xor
pop
add
les
xor
sub
scas
rorb
decl
jl
mov
push
or
inc
icebp
pop
xchg
test
lret
mov
rorb
pop
test
add
rcll
sub
js
push
loop
outsb
push
or
pusha
and
add
imul
dec
es
mov
inc
lods
out
inc
add
sub
int
push
dec
popa
inc
data16
xchg
cmp
mov
add
and
addr16
outsl
xor
subl
adc
lods
mov
xchg
or
lds
rcl
cmp
and
mov
ljmp
mov
dec
add
sub
and
mov
enter
push
pop
out
cmp
xor
loopne
push
xor
cmp
jmp
inc
aaa
adc
lret
pop
repz
or
mov
aad
inc
dec
jg
mov
push
test
xor
movsb
cltd
xor
xchg
add
iret
add
add
adc
mov
push
xchg
jbe
xlat
xor
mov
xchg
lods
mov
enter
fwait
jp
xchg
in
ret
and
rclb
mov
lahf
lds
and
inc
enter
arpl
movsb
cmpsb
xlat
cmc
or
stos
xchg
sbb
mov
cld
loope
stc
pop
movsl
mov
dec
jecxz
lcall
pop
mov
adcl
enter
mov
testb
sub
ret
popa
push
mov
or
imul
shrl
out
inc
xor
add
ficoms
loop
mov
sbb
xchg
pop
add
mov
pop
push
mov
xchg
sti
cmp
xchg
xchg
stos
sbb
mov
inc
mov
add
lods
test
push
mov
jecxz,pn
es
pop
and
adc
es
nop
add
mov
cmc
add
lcall
mov
lods
stos
jo
jmp
sti
pop
xchg
pop
bound
xor
xor
shll
sub
mov
xlat
orb
hlt
mov
inc
sbb
dec
cld
imul
push
nop
js
push
or
xor
jmp
rcll
inc
lods
push
adc
sbb
jge
xchg
pop
mov
sub
inc
mov
andb
adc
sub
pop
push
jmp
add
pop
adc
sub
sub
pop
push
cwtl
insb
dec
je
push
or
pop
jle
pushf
or
in
mov
mov
mov
std
mov
rclb
jg
pop
fistl
fwait
add
pushl
xchg
adc
test
cmpsb
jmp
pop
sbb
mov
jg
fcoml
mov
or
dec
sub
repz
in
aam
ret
iret
rep
fsubl
loope
inc
mov
inc
mov
lahf
leave
popaw
mov
cli
sub
lret
mov
mov
push
clc
inc
icebp
lcall
mov
adc
inc
push
sbb
lcall
push
push
adc
dec
dec
dec
push
lods
jns
pusha
add
movsl
sti
add
jnp
adc
jg
gs
test
add
daa
int
or
add
pop
jl
mov
addr16
adc
and
xor
adc
add
push
jle
sub
xor
clc
loop
mov
mov
xor
leave
mov
lods
ret
adc
mov
dec
std
cmp
and
push
fnsave
aam
leave
pop
lds
scas
cwtl
jo
push
dec
push
movsl
xchg
loop
sub
pop
jno
pop
sbb
lea
pop
enter
mov
js
repz
in
mov
mov
std
adc
push
adc
pop
cmpl
call
jbe
loop
je
bound
lea
inc
in
adc
sti
or
inc
or
call
cmp
cmp
pop
mov
mov
lock
loope
xchg
bound
ljmp
mov
call
lcall
movsb
push
mov
dec
das
aam
jo
rorl
or
push
add
leave
dec
sbb
mov
aad
inc
pop
cmp
add
fsubr
dec
dec
scas
mov
jecxz
nop
cmp
int
dec
cli
or
jo
xor
add
sbbb
sbb
pop
pop
xor
inc
mov
add
bound
or
add
fwait
ret
nop
in
jmp
test
cwtl
mov
mov
inc
mov
ret
sbb
mov
adc
add
jge
cmovl
xor
das
push
scas
fcoms
lcall
inc
mov
out
add
push
icebp
sub
sbb
lcall
mov
inc
lret
cmp
sub
lea
inc
and
push
aad
mov
cmp
and
push
pusha
sub
rorb
jae
bound
repz
push
in
jp
mov
or
sbb
mov
test
hlt
popa
bound
scas
cs
pusha
mov
or
or
jge
and
roll
std
movsl
lods
cmp
jmp
adc
mov
push
popf
shlb
mov
jns
xor
xorl
jge
inc
repz
or
adc
mov
jmp
notl
rolb
out
add
mov
adc
xchg
add
mov
sub
pop
and
jmp
mov
bound
sub
rol
jo
fists
pop
lahf
movsb
jmp
inc
mov
add
pop
mov
cmp
or
fcmovbe
lret
in
push
loopne
test
pusha
jno
inc
das
cld
push
push
les
mov
inc
std
imul
add
inc
lea
lods
cmp
pop
xchg
mov
push
rclb
jb
jne
xchg
and
rol
outsl
cmc
repz
add
scas
jae
addr16
iret
les
inc
fidivs
dec
push
push
cmp
or
push
cmp
stos
ja
or
mov
cmp
xor
push
push
sub
jbe
roll
vmwrite
xor
andl
roll
sbb
mov
mov
adc
and
arpl
scas
jmp
imull
mov
jmp
loopne
cmp
test
mov
cmc
xchg
nop
mov
arpl
pushf
mov
scas
add
adc
stos
inc
xor
cmp
add
sbb
push
jl
loope
jae
pop
add
xchg
sahf
mov
pop
sub
aam
adc
outsl
dec
or
jl
push
dec
lods
imul
cld
pop
pop
add
loope
insl
cmp
mov
cs
jno
mov
imul
adc
mov
sbb
cmpsl
add
sub
ret
ret
and
push
dec
lcall
enter
ljmp
nop
jg,pt
addr16
popa
and
jne
les
rcrb
xor
sub
popa
rclb
loopne
sbb
mov
sub
pop
push
xchg
in
sub
add
rcll
ja
cmc
inc
loop
orl
xor
iret
pop
or
mov
loope
lret
dec
es
fisubl
pop
fcomi
sarl
xchg
jmp
outsb
add
push
jle
add
push
push
push
push
mov
scas
fistpll
fldcw
gs
or
fadds
cmpsb
test
and
push
neg
fcomi
mov
push
or
sbb
mov
in
dec
xor
jbe
int
cltd
mov
mov
push
push
inc
rcrl
jle
imul
inc
jmp
and
xchg
mov
scas
push
add
cmp
mov
jno
cmp
pusha
dec
cmp
les
sub
xchg
push
outsb
sub
jno
clc
cmp
imul
push
scas
push
pop
inc
xor
call
cwtl
shlb
xchg
xor
lock
adc
leave
add
jno
xor
pop
xchg
pop
cmpsl
test
inc
push
mov
adc
cltd
inc
mov
lods
fiadds
dec
pop
add
mov
or
mov
and
xchg
xchg
repnz
test
roll
mov
into
xchg
iret
addl
fucomip
fildl
cmp
cmp
and
cmp
outsb
inc
dec
mov
adc
int
in
or
roll
mov
arpl
mov
movsl
jbe
or
or
aam
nop
pop
mov
cs
int3
inc
mov
push
hlt
mov
and
cmp
sbb
lock
scas
mov
test
popa
xchg
cmpsb
decb
and
lret
push
jl
mov
push
xor
mov
pop
int
mov
icebp
mov
push
pusha
ret
xor
dec
ficomps
cmp
dec
xchg
pop
inc
dec
cmp
clc
loop,pn
bound
xchg
mov
jp
cmp
jmp
inc
add
jne
xchg
and
dec
fucomip
inc
ficoms
and
lret
fstl
jne
sub
push
mov
jo
dec
pop
jecxz
cmpsl
mov
pop
sub
js
dec
mov
cmp
cmc
loopne
mov
pusha
jl
xor
dec
leave
test
outsb
mov
loopne
xchg
repz
mov
adc
xor
cmpb
xchg
pop
sub
or
push
push
push
divl
sbb
mov
jmp
test
popf
mov
jb
rorb
mov
incl
and
jnp
xor
sbb
or
push
insb
ror
psllw
sub
shrb
pop
adc
loopne
push
cltd
aas
mov
push
or
mov
jmp
xor
xchg
pop
jmp
dec
inc
movsl
sbbb
addb
imul
stc
push
in
mov
xor
stos
mov
mov
lahf
jae
in
rorb
xor
cmp
mov
in
add
push
sub
fwait
imul
add
pop
or
jmp
or
sub
adc
test
or
pop
adc
pusha
les
cld
push
pop
xlat
pop
sub
cwtl
cmp
call
imul
ficoms
mov
or
jp
daa
loope
mov
mov
neg
movsb
dec
push
shl
inc
mov
add
xlat
cmp
ds
lds
arpl
test
dec
add
jo
cs
cld
mov
or
xchg
pop
pop
and
loopne
cmp
and
lods
repz
nop
int3
dec
xchg
pop
mov
movsl
fwait
cli
lahf
jl
push
jno
js
and
sbb
mov
adcl
jecxz
mov
sub
push
push
xchg
push
loop
mov
adc
mov
fidivrl
mov
mov
mov
int
dec
xor
fsubrs
dec
lahf
loop
mov
xchg
push
aas
lret
test
xchg
mov
adc
mull
pop
dec
jl
xchg
and
or
daa
pop
inc
loop
jo
mov
pusha
orb
lds
sbb
xor
sbb
gs
add
fwait
inc
pop
sub
add
repz
or
popa
xlat
xor
lods
mov
mov
mov
mov
jns
jnp
lcall
mov
xchg
lods
push
subb
push
frstor
dec
mov
jmp
jmp
dec
stc
call
jmp
imul
scas
loopne
sahf
push
sbb
push
loop
in
add
ljmp
test
jg
mov
adc
mov
sahf
mov
mov
jns
sarb
push
das
loope
ret
cmp
lea
push
jo
mov
adc
cmp
inc
fbld
xchg
add
dec
jns
add
or
aas
xor
and
inc
test
jb
sub
dec
shrl
dec
add
mov
mov
ret
adc
jb
enter
iret
mov
jge
inc
clc
pop
xchg
jo
cmp
or
lcall
rclb
shlb
insl
lods
adc
adc
incl
stos
xchg
sbbl
xchg
dec
mov
es
std
test
popa
stos
xchg
std
testl
sub
in
or
mov
pop
fldl
in
repnz
inc
mov
roll
jb
add
sbb
add
mov
jo
and
inc
sbb
loope
cld
ljmp
cmp
xchg
aaa
dec
lcall
jge
in
xor
outsb
mov
mov
or
les
xor
cmpb
ret
push
adc
sub
test
punpcklbw
rclb
imul
nop
xor
sub
and
mov
push
xchg
mov
or
cmp
rcrl
fadd
icebp
out
xor
out
add
sbb
sbb
scas
cmp
inc
pop
mov
push
sub
inc
test
sbb
xchg
daa
fists
fdiv
stc
fwait
pusha
push
and
and
push
sbb
addr16
xchg
push
add
psubd
sbb
popf
and
dec
or
fbstp
mov
inc
rcrb
push
jo
imul
lock
aas
cmp
mov
pop
cmpsl
mov
xlat
and
sbb
leave
repz
jb
adc
push
test
and
aad
fxch
jns
push
push
or
outsl
push
jno
in
adc
iret
adcb
inc
mov
imul
dec
xor
daa
adc
mov
xor
fisttps
jl
mov
clc
les
mov
repnz
and
std
jmp
sub
cld
filds
ljmp
test
mov
imul
sbb
ret
scas
divb
or
xor
dec
mov
insl
add
and
mov
in
stos
cmp
test
adc
repnz
stos
add
inc
clc
and
pop
int3
sbb
inc
mov
test
xor
je
xor
bound
insb
sbb
aad
xchg
sbbb
add
or
popa
add
out
mov
mov
adc
jge
sbb
add
mov
pop
push
lahf
ret
cmp
fsubl
sbb
int
mov
pop
xor
js
add
cmp
loop
sub
ja
mov
pop
push
popa
mov
imul
pop
adc
inc
lods
mov
xorb
add
movsb
add
adc
jo
pop
icebp
jae
and
push
inc
adc
test
jne
inc
aad
jmp
int
add
aas
sub
and
out
je
stos
in
gs
bound
push
fwait
sub
add
stc
cmpsb
lcall
dec
fstpt
add
mov
fisubrs
push
dec
shrb
pop
mov
dec
cmp
mov
orl
and
cmp
sub
and
lcall
add
dec
ret
test
dec
push
add
xchg
pop
adc
scas
cmp
scas
mov
mov
cmp
loop
mov
jl
add
add
xor
and
cwtl
sub
and
mov
push
or
inc
dec
lods
or
nop
pop
add
pop
shlb
cltd
nop
dec
and
jno
add
movsl
push
aaa
aaa
jl
rcrl
movsb
sub
lods
cs
and
mov
sbb
add
xchg
xor
sbb
lods
adc
rolb
xor
xchg
hlt
inc
adc
repnz
les
test
dec
jns
mov
jno
push
and
push
add
popa
inc
mov
xchg
xor
push
pop
add
xor
fsubrs
sbb
clc
cltd
das
push
ficoml
lea
push
loopne
or
sarb
shrl
sahf
popa
add
or
push
and
mov
lea
sbbl
push
mov
ret
pop
pop
mov
adc
xchg
loope
call
jmp
mov
mov
fcompl
loope
leave
js
enter
sub
mov
insl
cld
sbb
jg
jno
add
add
adc
sti
cmp
or
xor
inc
fwait
aad
add
bound
jg
stc
pop
xor
pop
cltd
fistpl
jb
mov
mov
or
inc
cmp
mov
out
mov
shll
jmp
or
test
sti
and
push
icebp
and
clc
sbb
aad
or
dec
xor
mov
sbb
inc
mov
test
fiadds
sub
cmpsb
into
stos
loop
mov
sub
ss
pop
aas
sub
cs
jne
fld
or
roll
out
mov
push
adcb
repz
call
test
movsb
cmp
mov
xor
jmp
or
and
cmp
xor
push
xlat
cmp
ret
add
push
imul
pop
icebp
cmp
lea
sub
arpl
adc
xchg
mov
hlt
mov
iret
jno
cwtl
pop
dec
mov
repnz
mov
subb
shl
sbb
sbb
hlt
pop
leave
jl
push
stos
mov
push
lahf
adc
cmp
push
pushw
outsl
hlt
mov
and
cmpsl
inc
shlb
mov
mov
out
test
push
in
sbb
daa
mov
stos
pop
fnstsw
inc
aas
and
add
xchg
addl
push
adc
push
lcall
mov
ret
mov
std
les
pop
cwtl
lret
mov
inc
add
shr
iret
add
loope
aam
icebp
pusha
jne
inc
sbb
test
loope
dec
mov
aas
fwait
sahf
arpl
sub
add
dec
dec
pop
imull
ds
aam
push
cmpsb
xchg
mov
or
outsb
sbb
and
lods
fldl
fdivrl
test
das
inc
in
inc
shrb
lret
scas
stc
xchg
test
dec
test
push
jp
test
aam
pop
fadd
xchg
xorb
xor
xchg
arpl
or
sub
jo
sbb
or
ds
xchg
lcall
lcall
jg
xor
pop
inc
rcr
sub
jecxz
orl
add
xchg
push
jl
mov
icebp
mov
mov
inc
cs
jo
iret
outsl
imul
ret
pop
jp
js
jo
testl
call
bnd
cld
mov
icebp
or
clc
sub
je
xlat
subl
jp
dec
stos
xchg
fistpll
jne
push
test
dec
subb
int3
xor
dec
mov
cmpsl
jecxz
outsl
push
pop
in
bound
pop
sbb
inc
hlt
add
fwait
mov
mov
lahf
je
mov
int3
fidivl
int
out
sub
jecxz
xchg
je
std
loope
or
xchg
jp
add
movsl
leave
adcl
scas
std
stos
in
xrstor
enter
sbb
xor
xchg
rcll
ret
and
aad
adc
es
ds
dec
cmc
pusha
and
inc
and
lods
pop
int3
mov
icebp
push
imul
xor
jg
ljmp
fdivr
iret
cwtl
xor
xchg
rclb
and
add
mulb
jns
addr16
push
add
xor
leave
sbbl
andl
and
mov
or
mov
test
addl
mov
or
jno
gs
loopne
insl
lock
adc
xchg
sub
mov
lahf
punpckhbw
add
mov
pop
jno
adcb
lods
hlt
clc
push
jmp
pushf
testb
add
add
xchg
mov
jg
lret
jg
aam
stos
jbe
movsb
cmp
scas
jecxz
xor
gs
out
sub
daa
mov
mov
xlat
adc
inc
daa
or
lods
xchg
xchg
pop
mov
mov
pop
ja,pn
pop
data16
movsl
pop
cmp
and
into
add
cmp
jnp
scas
xor
jb
push
ja
mov
mov
cld
and
movsl
mov
and
jbe
call
ja
adc
lds
mov
xchg
cmp
dec
xor
pop
dec
shll
or
mov
sub
xchg
push
lock
cs
inc
dec
cli
inc
lcall
mov
xlat
pop
jmp
test
cmpl
sub
rcl
mov
xor
or
adc
or
add
fcomp
shlb
iret
and
movsb
shl
icebp
test
fists
enter
and
lcall
cmp
test
sub
out
or
jl
add
in
pusha
dec
bswap
repz
xchg
or
mov
iret
push
and
or
push
add
mov
jnp
sub
inc
lods
push
inc
mull
push
ret
pop
pop
cmc
test
adc
dec
adc
stc
jge
jl,pt
je
jne
scas
sarl
inc
lds
xor
mov
fldenv
pop
sub
jmp
loop
xor
mov
mov
and
push
adc
cmp
fwait
out
hlt
push
test
jmp
sub
mov
imul
ret
and
cs
cmp
stos
enter
ljmp
jo
mov
xchg
lea
mov
inc
pop
cmp
test
lods
inc
xor
aaa
cmc
hlt
mov
push
jbe
jmp
in
mov
mov
mov
nop
pop
mov
cmpsl
inc
lcall
cmp
daa
xchg
pop
cmc
sbb
add
cld
loopne
test
mov
repnz
test
cs
jo
inc
notl
lds
out
scas
pop
dec
pop
aam
mov
add
dec
icebp
dec
rorl
sbb
add
lods
faddl
cmp
push
ja
mov
push
enterw
mov
mov
xlat
jle
inc
jle
jns
or
call
movsl
sbbb
pop
or
je
movsl
les
jg
dec
shrb
inc
sbb
cmp
imul
mov
inc
add
sub
push
insl
lea
in
inc
jmp
mov
ds
adc
rolb
lea
sbb
pop
sahf
sub
cs
push
mov
dec
mov
mov
jbe
mov
cmp
inc
add
int
mov
xchg
hlt
push
xchg
es
jmp
or
cmp
in
mov
push
push
pop
jecxz
in
xchg
pop
rclb
sub
mov
dec
cld
dec
adc
push
pop
jmp
xchg
cli
rcrb
xorps
adc
mov
rorl
sbb
push
fildl
add
pop
imul
mov
mov
push
xchg
movsb
ljmp
andl
mov
jmp
nop
outsl
lcall
sub
lea
call
sbb
adc
sbb
or
js
iret
movsb
nop
inc
adc
out
xchg
mov
lahf
push
pop
and
push
sar
in
push
dec
dec
sahf
and
inc
popf
movl
jecxz
lahf
outsb
std
mov
adc
aam
push
shrb
dec
cmp
xor
cmp
imul
fnstcw
push
out
pop
jge
or
hlt
in
sub
stos
stc
xor
les
mov
sbbb
pop
inc
xor
mov
loope
mov
lods
jg
test
aam
sub
xor
cmp
push
push
repnz
mov
aas
jg
aaa
fdivs
add
sub
sub
jp
lret
lea
loop
add
shll
sub
loop
rol
and
mov
jg
leave
and
scas
fmul
add
sub
add
xchg
mov
insb
mov
pop
mov
loop
add
add
push
dec
xchg
imul
out
pop
pop
jl
jmp
lahf
hlt
fs
push
inc
les
cltd
les
in
ljmp
shlb
sub
data16
aaa
push
sub
mov
adc
adc
xchg
and
and
fcoml
xchg
pop
lahf
dec
fwait
jecxz
mov
dec
mov
clc
mov
negb
pop
xchg
les
mov
outsb
dec
cld
fwait
lods
sub
pop
loope
xchg
xchg
mov
icebp
cmpsb
test
repnz
xlat
shlb
les
shlb
cld
ja
clc
xchg
jp
inc
jge
or
movsl
insb
fmuls
fbstp
dec
jnp
insl
andb
cmp
daa
outsl
mov
in
and
rclb
inc
mov
mov
adc
push
cmpsl
loop
cmp
ja
sbb
jnp
dec
popa
add
fnstcw
mov
xor
jo
aad
xor
sub
or
cmpl
loop
sar
scas
je
out
push
mov
leave
inc
adc
push
sub
aad
out
das
cmpsb
rcrb
dec
inc
inc
cmp
push
inc
fdivs
cwtl
sbb
shlb
notb
out
jg
xchg
ret
and
cmpsl
or
popa
icebp
pop
xor
mov
lds
pushf
sub
insb
rolb
aad
push
ljmp
out
andl
pop
rolb
jns
adc
push
int3
scas
push
inc
mov
clc
daa
test
in
push
sub
dec
sbbl
hlt
es
adcb
add
cmp
dec
aas
repnz
fcmovne
ja
jp
mov
push
jo
cmp
movsl
ja
dec
inc
lea
call
mov
or
sub
lahf
xchg
pushf
cld
push
ret
add
add
or
adc
mov
imul
mov
push
mov
std
xchg
into
fidivrs
cwtl
test
or
jmp
sarl
insl
inc
adc
dec
and
inc
jecxz
repnz
add
ljmp
or
mov
fiadds
push
mov
xchg
das
bound
inc
repnz
sbb
cmp
stos
xchg
pop
inc
in
jbe
jb
leave
sbb
pop
and
fsubr
xor
mov
test
and
pop
pop
mov
mov
out
pop
sbb
andl
add
jmp
pop
sub
mov
dec
loopne
lods
jmp
sub
push
sub
fsubl
inc
adc
enter
iret
mov
jecxz
sbbl
sub
pop
mov
nop
push
ret
outsl
xor
mov
sub
cld
add
jle
iret
popf
add
dec
xlat
adcb
push
jg
and
dec
or
and
cmp
add
add
xor
dec
int3
lea
xor
das
punpckhwd
push
and
pop
sub
jg
test
stc
xchg
mov
aam
mov
cmpsl
add
xor
or
pop
add
enter
es
mov
inc
and
dec
mov
or
jae
mov
pop
cwtl
out
popf
sarb
loopne
imul
jae
aad
lahf
ret
pop
rolb
enter
jecxz
push
inc
les
lea
or
jns
inc
push
loopne
sub
movsb
mov
test
bound
adc
mov
sub
aam
cmp
pop
mov
adc
or
test
int
xlat
inc
inc
push
das
arpl
clc
add
sub
lds
adc
sub
push
jno
test
ja
xchg
mov
add
add
and
inc
clc
movsb
or
xchg
inc
pop
xchg
mov
lods
lcall
sbb
adc
cmp
jae
add
fisttps
test
loope
mov
leave
js,pt
lret
adc
fsubs
xor
and
sbb
mov
xorl
mov
dec
mov
ja
jecxz
xchg
push
inc
mov
xor
out
mov
mov
inc
and
scas
push
mov
es
loope
and
xchg
ret
and
scas
push
aas
cmp
lods
cmp
sahf
arpl
test
sbb
testb
add
push
nop
jmp
add
jne
fdivrs
lahf
inc
jp
scas
repz
ljmp
rclb
out
mov
add
add
xor
jmp
mov
lods
mov
xchg
fcmovbe
out
xchg
cmpsb
mov
xchg
test
fistps
sub
arpl
icebp
stos
cltd
fists
shlb
push
stos
das
mov
aas
push
insb
int
int
cld
sbbb
sub
js
add
sbb
cmp
arpl
push
xlat
mov
mov
sub
push
xlat
sbb
xor
scas
mov
jne
in
dec
mov
out
jno
push
xor
test
mov
jnp
pop
mov
jl
sub
bound
insl
je
mulb
xchg
mov
cmp
aaa
or
shll
in
and
rcll
call
ljmp
sbb
mov
les
or
aaa
sbb
xchg
mov
cmp
sub
xchg
cmp
hlt
sbb
xchg
inc
push
fwait
add
inc
sbb
pop
cmp
cmpsb
in
or
pop
or
addl
xchg
sbb
mov
xchg
cmp
scas
dec
fldcw
rcrl
lea
nop
loope
ror
cltd
push
es
jecxz
mov
mov
lret
clc
xor
mov
loopne
add
sub
jg
out
cmp
loope
pusha
leave
lea
sub
xchg
cs
popa
pop
and
or
adc
pop
vcvtsd2si
out
sbb
test
scas
and
push
sahf
out
das
push
mov
jmp
sub
data16
popa
test
sbb
cmpsb
loop
cmpsl
mov
mov
pop
and
in
into
lcall
les
imul
add
fdivl
xor
xchg
jecxz
adc
and
xor
inc
hlt
fstpl
xchg
push
inc
cltd
insl
enter
pop
lods
stc
add
fs
pop
insl
movsl
or
aas
jno
iret
push
nop
lcall
out
sbb
or
sub
loope
pop
in
cwtl
sbb
leave
in
mov
xchg
pop
jge
dec
sbb
and
push
mov
xchg
dec
mov
insb
xchg
jo
sbb
lds
pop
pop
rorb
js
rolb
mov
ret
pop
mov
jne
shlb
inc
add
sub
das
xor
fstpt
andb
xchg
xor
add
inc
xor
cmp
loope
out
xchg
pop
pop
sub
out
xor
imul
dec
cli
jl
pusha
sar
stos
fistpll
adc
jle
pop
adc
jb
stos
mov
push
and
ljmp
xor
repnz
enter
add
inc
mov
mov
inc
push
adc
xor
jmp
andl
fildl
enter
push
push
outsb
out
jne
adc
pop
cltd
mov
clc
popf
jo
stos
xor
mov
push
inc
jecxz
push
push
cmp
dec
sti
jmp
movsb
mov
adc
test
cmp
mov
in
lea
mov
aas
mov
xor
cmc
add
and
test
and
jmp
cmp
ss
rcr
stos
mov
or
push
xchg
push
roll
cld
dec
cs
imul
add
cmpsb
jge
incl
jmp
xchg
pop
loope
cwtl
pop
cmpsl
xor
pop
push
cmovne
cli
pop
mov
sbb
dec
imul
lock
scas
add
cld
fwait
xlat
or
rorl
or
pop
lea
test
mov
xor
jecxz
cmp
mov
jns
scas
or
das
xchg
loope
add
aam
jb
adc
jno
xor
loop
push
mov
push
lods
movsb
inc
adc
sbb
pop
rcl
popf
mov
and
loope
dec
shlb
ljmp
lahf
adc
inc
xchg
gs
push
inc
xchg
dec
sub
push
test
jo
fs
lahf
inc
xchg
daa
add
icebp
iret
jnp
popa
popa
stos
mov
xor
and
push
adcb
ss
je
add
sbb
aam
mov
fldl
jle
lea
test
sub
pop
daa
hlt
lock
cmpb
outsb
dec
rcrb
sbb
lret
and
inc
mov
adc
or
mov
add
add
insb
cmp
xor
test
cmpsb
adc
add
xor
les
movsb
cmpsb
push
in
or
add
mov
dec
xor
repz
mov
add
mov
dec
xchg
push
daa
jb
sbb
adc
fstpt
pushf
lahf
mov
adc
mov
adc
adc
push
sbb
mov
test
or
rorl
neg
sbb
in
pop
inc
ds
lret
sub
mov
mov
inc
mov
sbb
mov
push
mov
test
inc
sub
jno
test
mov
sbb
ffree
jne
pusha
mov
gs
or
shrb
dec
fldcw
pop
dec
cmp
lcall
inc
mov
in
decl
jnp
add
scas
daa
bound
out
bound
cmpsb
fimull
push
mov
or
stc
je
sbb
icebp
rcrb
js
movsb
cmpsl
lret
adc
rol
imul
sub
pop
leave
imul
dec
or
sarl
rolb
jno
mov
mov
sub
paddb
pusha
dec
sub
adc
fidivrl
lret
add
or
fisttpll
gs
push
xor
or
sbbb
adc
mov
mov
jecxz
mov
aam
sub
arpl
mov
bound
add
aam
out
push
add
imul
pusha
shll
xchg
cmp
rorb
rcrb
cwtl
cli
push
xor
fwait
add
ret
andb
movsb
ret
adc
xchg
dec
repnz
fmull
add
jecxz
dec
inc
sub
inc
repnz
fs
rolb
insb
push
mov
jmp
xor
or
sbb
test
push
pop
push
jne
sub
fcompl
pop
inc
int
or
sub
dec
sbb
pop
mov
movsb
cmc
dec
xchg
jmp
cld
mov
jge
inc
lahf
mov
lods
and
push
pop
pop
orl
ficompl
cltd
push
clc
imul
loope
jmp
cmpl
xchg
or
hlt
shlb
pop
out
rcll
mov
ret
push
inc
pop
and
daa
sbb
sbbb
sti
in
test
mov
cld
cs
rol
lea
mov
or
adcb
fst
and
aad
cmpl
mov
mov
mov
add
and
addb
cmc
lsl
mov
mov
fisubrl
push
das
dec
int
jno
fs
sub
or
mov
adc
cmp
inc
pop
pop
add
inc
notl
jl
pop
enter
test
add
in
push
imul
xchg
pop
xor
adc
cmp
xchg
and
mov
scas
add
and
cld
jmp
mov
js
or
dec
popa
xor
xorl
icebp
xor
add
clc
shr
mov
dec
sti
inc
into
dec
push
mov
jno
add
push
jne
in
rorb
das
push
lcall
sbb
cmpsb
inc
loopne
lods
jmp
mov
stos
jecxz
sbb
sbb
dec
cltd
mov
clc
stos
push
inc
add
icebp
mov
xor
mov
inc
jmp
inc
dec
cmp
cli
sub
xor
stc
inc
addr16
ret
mov
push
mov
lock
push
loope
push
cmp
fsubl
inc
xchg
popa
filds
mov
int3
adc
dec
lods
xchg
scas
inc
adc
jg
js
ss
aad
dec
add
inc
pop
add
aad
orl
xchg
lea
inc
dec
inc
sbb
movsl
mov
popf
pop
and
jg
daa
push
loopne
or
sub
xor
mov
or
outsb
popf
xor
pop
sbb
ret
dec
sbb
add
insl
sahf
xchg
jnp
mov
loop
call
sarb
rcrb
ret
aad
xor
test
dec
pop
inc
mov
and
bound
dec
std
jb
push
not
arpl
aas
xchg
sbb
das
sub
cmp
mov
mov
jb
movsl
and
xor
lea
xor
hlt
sub
test
subl
push
push
idivl
and
xchg
movsb
pop
pop
xor
jno
push
sub
fmuls
icebp
add
dec
inc
pop
imul
stc
adc
test
xor
popa
arpl
in
into
push
or
mov
std
decl
xchg
push
popf
popa
mov
xchg
out
jle
pushf
mov
cs
inc
sbb
pop
push
sbb
mov
aam
mov
test
pop
aad
or
imul
int
xchg
loop
push
and
sub
add
test
ja
insb
and
jge
dec
add
ret
jnp
adc
out
jno
orl
adc
mov
jo
jmp
adc
and
imul
or
push
mov
adc
sub
add
jnp
xchg
mov
shlb
cmp
add
test
enter
inc
aas
push
pushf
sub
loope
cmpsb
pop
out
mov
inc
aad
aam
mov
add
inc
and
mov
shl
sbb
dec
ffree
xor
inc
mov
subb
mov
dec
mov
sub
aam
sub
or
push
call
xor
xchg
jge
or
push
leave
andl
jmp
xor
les
mov
and
testb
fxam
test
ds
mov
push
movsl
icebp
sbb
push
or
popf
jbe
xchg
cmc
push
mov
fwait
xchg
scas
cmp
add
setbe
add
adc
and
adc
mov
xor
jp
lret
add
cmpsl
add
cli
mov
push
ret
pop
mov
sub
aam
xchg
cmp
inc
daa
sbbl
dec
adc
sbb
adc
addr16
int3
xchg
inc
leave
fdivs
call
in
and
repz
push
mov
jns
lcall
xchg
add
xchg
push
push
js
dec
adc
jnp
xor
js
aas
xchg
pusha
pop
push
jmp
sbb
or
int3
jne
rcl
pop
sub
fimuls
jge
mov
xchg
cmp
orl
pop
mov
cmp
sbb
xor
int
pop
cs
dec
cmp
push
or
sbb
mov
mov
inc
pop
mov
mov
subl
je
int
insb
mov
dec
add
and
loop
inc
mov
popf
aas
inc
mov
mov
xor
test
dec
repz
in
movsl
jbe
lds
mov
mov
stos
pusha
fsubr
loop
jo
pop
jge
inc
jmp
pop
push
xchg
pop
pop
aad
xchg
leave
outsl
stos
mov
insb
jp
sbb
rcll
xorb
or
ja
mov
push
insl
inc
pop
rorb
sub
fcoml
icebp
orb
xchg
push
ret
fadds
test
pop
dec
pop
mov
add
fwait
test
stos
inc
scas
popf
inc
jae
jae
pusha
sub
fnstenv
mov
mov
lods
push
add
and
sub
push
test
mov
sbb
mov
push
stc
out
xchg
jo
push
push
lcall
in
pop
pop
dec
js
loop
cld
aam
adc
icebp
jo
mov
das
sbb
imul
popa
mov
arpl
adc
pusha
push
inc
ss
mov
scas
adc
push
mov
and
mov
scas
sbbl
scas
push
adc
push
addl
xor
movsl
and
lock
or
pop
cs
push
cmp
sbb
scas
push
jne
jo
pop
pop
movb
dec
pop
xchg
movb
lods
inc
fwait
lods
dec
loope
fsubr
les
test
xorb
cmp
cmpsl
cs
js
xorl
imul
ficoms
ds
and
xchg
out
aad
pop
outsl
test
stc
daa
shlb
or
push
and
push
push
fcoml
push
test
sbb
jae
xchg
fs
sahf
pop
mov
rcrb
aad
pop
adc
ja
out
vlddqu
nop
or
addr16
sbb
in
pop
inc
xor
and
sbb
xor
or
leave
push
in
push
add
jns
and
lods
cmp
call
cmc
xorb
pop
or
lock
jmp
insb
inc
gs
or
out
jg
ja
xlat
je
or
add
cmpsl
and
inc
sbb
int3
mov
pusha
add
incb
lret
sub
popf
push
int3
decl
adc
rcrl
out
arpl
inc
sub
mov
sub
pop
mov
andl
gs
mov
mov
shrl
testl
push
pop
xchg
or
or
add
sbb
sbb
xrelease
xchg
aam
dec
add
stos
push
les
adc
xchg
out
test
pop
pop
scas
and
mov
leave
dec
jb
in
rorl
dec
les
std
inc
rdtsc
leave
outsb
mov
and
aam
mov
stos
push
dec
fwait
sbb
imul
pop
js
mov
add
xchg
lods
enter
cmpsl
stos
cli
push
dec
or
xor
idivb
mov
sbbb
clc
push
stc
je
outsl
fsubl
mov
add
xchg
push
sbbb
pop
xor
pop
daa
imul
push
add
andnps
ret
add
pop
jne
bound
popa
xor
push
mov
mov
mov
test
push
iret
rolb
push
roll
pop
pop
loop
ljmp
lock
movsl
mov
sbb
mov
sarl
add
sub
dec
xor
daa
pop
clc
push
cltd
lcall
add
jle
cmp
cmp
xchg
and
or
sub
inc
rep
pop
add
imul
icebp
adc
add
mov
pop
andb
dec
pop
or
adc
mov
jp
ret
jnp
mov
jecxz
lods
out
mov
sub
jl
shr
and
test
in
in
shl
add
mov
mov
add
cmp
stos
and
aaa
dec
push
and
nop
pop
lahf
and
dec
xchg
scas
inc
ljmp
mov
push
les
pop
test
or
and
fsubrs
dec
pop
push
sbb
rcr
or
outsl
pop
jge
xor
mov
mov
inc
cmp
jg
popa
or
cmc
add
das
mov
movsb
add
pop
add
mov
lcall
fisubrs
xchg
mov
cmp
out
loopne
enter
xchg
jp
sub
mov
push
outsb
fistps
cltd
leave
aas
mov
imul
sbb
lahf
or
fdivl
lods
jle
pusha
sub
sbbl
les
ret
cwtl
test
int3
in
mov
sbb
adc
sti
xchg
outsb
stos
cs
cmp
jecxz
lea
and
lea
call
adc
and
and
cmp
mov
adc
popa
xrelease
clc
adc
nop
sarb
mov
aam
dec
xor
sbb
inc
sbb
jne
pusha
or
pop
sub
jbe
inc
gs
jns
sub
andl
cli
popa
repnz
call
mov
loopne
jmp
push
js
inc
xor
push
stos
xchg
cwtl
push
loope
xor
subl
std
adc
out
push
mov
jg
subb
bound
scas
sbb
mull
int
es
outsb
mov
scas
mov
repz
addr16
push
push
pop
jnp
loope
cmpsb
cwtl
js
or
cmp
sbb
mov
sbb
pop
out
test
sarl
imul
mov
mov
stos
adc
daa
pop
pop
or
stc
dec
xadd
movsl
sbb
pop
push
mov
xorb
sbbb
xchg
push
sbb
in
sub
jecxz
lds
fimull
pushf
add
aaa
or
inc
dec
ss
test
mov
mov
mov
adc
jl
adc
test
xor
dec
dec
mov
std
push
cmp
or
int
push
jmp
jae
jns
inc
xor
lods
cmpl
out
jnp
aam
inc
loop
xchg
xor
imul
pop
in
call
cmp
rorl
fwait
dec
cmp
push
jno
faddl
mov
lret
lock
rcl
movb
cmp
and
mov
enter
pop
icebp
sub
sbb
or
leave
add
in
les
sbbl
loope
push
scas
loope
popf
or
lea
rcl
in
add
imul
xchg
sbb
imul
imul
mov
mov
mov
cld
mov
adc
sub
inc
sub
test
jne
mov
pop
xchg
xor
cmp
add
dec
popf
out
orb
adc
cmp
test
push
and
test
lods
pop
mov
jmp
or
jecxz
jb
inc
shlb
mov
lea
and
sbb
imul
adc
incb
push
daa
xchg
pop
sub
pop
pop
xor
dec
jno
mov
mov
xor
or
mov
adc
inc
xchg
xchg
mov
fiadds
cli
jecxz
sub
adc
inc
mov
int3
enter
and
push
add
inc
push
add
pushf
iret
or
flds
out
add
push
dec
or
scas
stos
sub
xor
stos
in
mov
and
inc
inc
sub
inc
ds
fimull
das
adc
mov
rclb
imul
fs
adc
repnz
pop
pop
rorl
arpl
in
shl
jnp
add
add
xor
and
ffree
xchg
arpl
xor
test
pop
add
ja
ret
andb
pop
mov
imul
ljmp
test
arpl
or
outsb
jmp
jp
clc
cltd
lcall
or
fstl
lret
xor
shll
pop
jns
cld
and
scas
rorb
cmp
mov
sbb
xor
test
xchg
and
add
adc
popf
push
sbb
cmp
rorl
dec
cmp
push
add
sbb
popa
movsl
aas
imul
cs
sti
fsubrs
je
push
sti
jns
jo
in
pop
pop
sbbb
test
adc
xlat
mov
mov
inc
jp
out
dec
mov
xchg
cmp
outsb
xor
pusha
sbb
add
mov
pop
mov
pop
dec
movl
aad
mov
add
iret
movsl
mov
xchg
xchg
push
dec
jmp
or
decl
clc
call
popf
and
sub
cmp
mov
mov
sub
shll
adc
lods
lahf
jae
dec
cmp
aam
xor
jmp
pop
push
pop
shrb
mov
pop
push
lahf
loope
mov
mov
inc
cmp
add
andl
call
ds
repnz
mov
mov
insl
mov
or
rep
bound
add
mov
stos
outsb
sub
and
or
fdivrl
adc
mov
push
or
add
xor
shrb
int
notl
dec
push
push
out
imul
popa
inc
mov
stos
or
rcl
lret
and
bt
out
push
popf
int
mov
pop
or
mov
or
jmp
push
and
clc
sbb
stos
adc
xchg
out
adc
sbb
pop
inc
movsl
mov
inc
rclb
test
pushf
inc
insb
test
pop
jae
loopne
push
push
push
hlt
add
sub
pop
cmc
test
repz
es
loope
out
lret
cmpsl
xor
add
jl
jae
and
roll
nop
lock
adc
xor
hlt
inc
cmpsb
loop
cmp
or
push
psubusb
and
bound
adc
std
dec
cmpsb
xor
jmp
mull
fidivrl
pop
les
or
gs
pop
xor
push
mov
bound
cli
and
add
mov
cld
jge
adc
iret
outsl
mov
push
or
popa
inc
out
mov
dec
xchg
mov
push
mov
loop
xor
dec
mov
add
add
ret
mov
xchg
mov
pop
mov
addb
push
xchg
insb
aas
inc
sub
roll
mov
jo
cmp
shll
mov
mov
adcl
loop
dec
jmp
int3
jae
shll
ja
inc
stos
je
pop
inc
mov
add
sbb
or
cmpl
and
or
in
arpl
aad
cmp
jo
bound
shlb
mov
pop
add
mov
ret
int3
mov
sub
adc
sbb
add
jg
mov
popa
cli
lds
mov
mov
movsl
dec
xor
xchg
pop
lret
iret
mov
mov
jg
lods
notb
loop
push
fldt
or
xor
popa
push
sub
sbb
mov
mov
sbb
data16
xchg
shrb
dec
adc
xchg
rolb
jns
ss
ficompl
lea
iret
fcoms
sbb
push
dec
je
cmc
shll
inc
pop
push
divl
cmc
sti
fistpll
dec
adc
sbb
in
dec
add
scas
cld
push
test
xorl
push
cmc
pop
jo
clc
inc
xor
mov
add
addr16
xorl
lods
imul
push
lcall
loopne
enter
cmp
inc
mov
icebp
inc
cmp
xor
nop
shll
xchg
xor
loop
insb
push
dec
mov
mov
je
in
sbb
pop
xchg
mov
out
rcrl
xor
pop
fsts
aam
enter
repz
adc
aas
mov
cmp
add
out
ja
dec
jb
fistl
sub
and
aad
sbb
pop
lds
sahf
fs
sbb
inc
xchg
lcall
mul
cld
test
inc
sbb
sahf
bound
lret
rolb
and
pop
dec
sbb
mov
addr16
cmp
xchg
or
xor
test
imul
rcl
pop
fldl
mov
imul
push
addr16
lods
mov
imul
push
gs
jae
and
add
dec
imul
cmc
and
out
xlat
ret
fisubrs
sub
scas
or
loopne
fwait
adc
mov
pop
jns
and
je
mov
add
xchg
pop
sbb
call
mov
lcall
ss
or
dec
das
push
mov
out
add
aad
mov
dec
addl
mov
sub
dec
add
push
add
jmp
xchg
mov
xchg
xchg
leave
rcll
iret
loope
or
cltd
popl
ret
jb
aam
sahf
xchg
mov
leave
fmulp
movsb
mov
fidivrs
mov
pop
in
clc
sub
in
add
jne
insb
out
rcl
or
sbb
retw
pop
jecxz
or
jge
pop
shld
or
push
dec
sub
cltd
scas
icebp
and
sub
jne
dec
push
mov
nop
mov
sbb
jecxz
and
mov
notb
jns
mov
mov
push
cmp
dec
adc
outsl
or
dec
ja
xor
mov
test
mov
push
fstps
lcall
sub
imul
add
push
andb
jge
sub
jle
gs
lahf
lods
mov
dec
sbb
shlb
mov
push
pop
scas
aad
adc
dec
pop
sub
jl
sub
das
jo
and
inc
jecxz
mov
cld
rol
imul
mov
iret
scas
scas
add
cmp
leave
adc
xchg
arpl
cmp
push
lcall
popf
ja
jmp
push
mov
dec
out
xor
dec
dec
xchg
mov
test
pop
and
mov
out
testl
lret
sahf
push
xor
scas
inc
mov
push
repz
insb
sahf
xchg
imul
roll
loopne
and
insl
mov
icebp
das
cwtl
sahf
jmp
mov
xor
inc
or
mov
add
jmp
lock
or
and
xor
icebp
sahf
dec
loopne
in
sbb
test
inc
cmp
push
push
or
add
hlt
xchg
inc
nop
cmp
rol
fnstsw
push
push
jle
test
mov
mov
jno
dec
push
inc
lcall
insl
addb
add
push
cs
stc
leave
fldenv
fsubrs
imul
jmp
inc
inc
xlat
xor
es
mov
pop
mov
jmp
jnp
out
xchg
stos
daa
push
or
out
mov
lea
lods
pop
cmp
pop
fnstsw
leave
mov
call
imulb
add
out
les
insl
cld
cs
add
push
ljmp
cli
sbb
rolb
cmp
inc
dec
sub
sub
es
or
xor
add
adc
cwtl
pop
fcom
inc
test
shl
mov
jmp
inc
sti
mov
mov
add
pushf
xor
and
jge
sub
in
bound
sbbl
pop
pop
push
and
aam
sub
mov
sub
lods
sbb
or
lret
in
pusha
rcr
mov
aam
push
cmp
and
adc
sub
aam
mov
xchg
push
push
shrb
lret
popf
lock
inc
jae
jmp
ret
sub
inc
dec
aaa
and
test
push
jg
mov
adc
adc
sub
aaa
jecxz
mov
pop
arpl
dec
mov
ret
mov
sbb
dec
cmp
aam
in
mov
roll
dec
pusha
cmp
imul
scas
repnz
cld
ljmp
push
pop
aas
cmpsb
testb
sub
and
inc
push
mov
xchg
and
adc
test
test
stos
jne
add
ja
test
sar
stos
xchg
les
dec
mov
std
or
jae
nop
cmp
xor
mov
mov
add
in
mov
dec
add
jb
lcall
dec
ret
push
out
push
xchg
adc
nop
push
xchg
cmc
addb
inc
mov
pop
and
add
xchg
jmp
aam
push
cmc
and
shlb
or
cmpsl
mov
push
mov
jl
addr16
les
sbb
andb
iret
sbb
aad
mov
test
les
pop
aas
and
xchg
sbb
mov
mov
mov
adc
ret
add
bound
in
ljmp
cmp
rolb
mov
jb
jnp
push
jno
fst
test
icebp
dec
idiv
inc
xchg
xor
sbb
lcall
or
sbb
into
das
mov
dec
xor
mov
mov
inc
addr16
adc
scas
scas
xorb
and
or
adc
pop
jns
cltd
push
mov
imul
in
and
sbb
movl
imul
dec
xlat
enter
and
je
int
lcall
add
fbstp
mov
dec
push
popa
adc
cmp
adc
cmpsb
mov
and
pushf
and
call
dec
pop
les
xor
mov
dec
pushf
jg
add
xor
add
daa
loop
inc
dec
and
mov
mov
sub
cmpl
cmp
add
rcll
jle
inc
jnp
pop
mov
loopne
lods
cmp
ret
mov
mov
push
inc
sti
jge
adc
jg
adc
mov
xchg
adc
mov
mov
mov
xorb
inc
iret
ficoml
in
add
or
push
repnz
mov
ret
xorl
cs
mov
lcall
adc
mov
call
int
lods
xor
and
scas
mov
push
mov
sbb
mov
and
pusha
movsl
jp
lea
leave
mov
cwtl
add
jae
movsl
sub
inc
jae
dec
call
or
dec
cs
fs
mov
stos
and
insb
aas
mov
mov
psrlq
push
aam
push
xchg
stos
loopne
cmp
adc
xchg
dec
inc
aad
mov
ret
stc
mov
fldcw
cmp
mov
cmpsl
fxch
lret
imul
loopne
pop
xchg
jne
dec
addr16
dec
clc
jge
int3
insb
lea
pop
call
fiaddl
cli
insb
xchg
movsb
mov
and
inc
fsubrl
iret
adc
inc
jns
jl
shll
xchg
cs
dec
and
sub
rcrb
out
call
cmpsl
testb
rorb
aam
lahf
cmp
push
push
sbb
maxps
add
jl
xor
jmp
jmp
xor
popa
stc
xchg
popa
nop
xor
jbe
xor
sbb
mov
pop
es
xchg
std
pop
lods
push
test
aam
cld
repz
es
inc
cltd
cmp
rclb
in
inc
xchg
mov
mov
lret
xchg
int
int3
adc
xchg
jno
sub
fisubrl
jne
mov
dec
mov
cmp
lahf
negl
xor
stc
daa
xchg
in
add
fdivr
mov
loopne
test
xchg
js
fimull
int
cmp
jecxz
xorb
xor
pop
sub
js
pop
xchg
cmp
int3
int
imul
push
pop
pop
das
push
mov
aad
popa
shll
ret
cmp
das
cmp
pop
mov
nop
shr
repnz
loop
sub
add
adc
pop
pop
add
mov
and
rclb
cmp
test
sub
roll
shrl
movsb
mov
adc
dec
leave
add
shrl
cli
jnp
mov
jge
in
in
jmp
cwtl
rolb
repnz
xchg
popf
aaa
sub
dec
pop
lds
pop
test
cmp
les
jno
xor
test
mov
dec
fldt
stc
mov
lret
int3
add
jns
jbe
rcll
dec
jb
nop
mov
inc
icebp
adc
mov
mov
psllw
js
mov
push
mov
push
push
or
xchg
mov
and
ret
aam
jae
jnp
inc
stc
leave
js
movb
mov
adc
stos
xor
inc
lahf
scas
jge
lods
or
xchg
clc
add
cmpsl
mov
jecxz
sti
xlat
repnz
and
push
loopne
mov
ret
dec
mov
mov
adc
aam
jae
jg
or
scas
xchg
movsl
cmp
repz
ljmp
sub
fidivrl
mov
pop
imul
mov
push
sbb
add
test
lods
enter
push
adc
push
pop
bound
aaa
fcmovb
sti
arpl
pop
pop
jns
cmp
adc
mov
clc
jp
mov
test
inc
ret
ja
mov
jae
pushf
pop
jne
jl
iret
stos
das
mov
mov
sub
clc
hlt
testl
dec
mov
push
mov
xlat
movsl
sbb
mov
cmp
popa
dec
ja
push
cltd
scas
adc
dec
clc
push
mov
jl
movsb
lock
push
dec
fmuls
jmp
jge
clc
ja
adc
int
ss
pop
js
daa
movsl
push
adc
pop
clc
ss
fmull
push
pusha
sbb
mov
xchg
sub
enter
enter
push
clc
push
fsubr
adc
mov
push
ljmp
mov
sbb
sub
bound
xchg
jns
pop
jle
push
push
xchg
and
imul
cmp
fwait
outsb
push
pop
jge
lea
sahf
popf
add
test
push
mov
push
push
daa
lock
aad
js
mov
into
and
mov
jge
xchg
dec
dec
mov
dec
jp
add
and
pop
adc
cli
imul
fiadds
add
push
adc
stc
add
jle
or
pop
sar
aaa
mov
outsl
aas
cmpsb
fsts
xchg
cwtl
mov
lahf
jg
mov
inc
movsl
sbb
cwtl
cmpsl
in
pushf
rclb
pop
jno
or
and
jge
mov
pusha
bound
xor
xor
bound
dec
enter
adc
in
mov
and
add
mov
sub
pushl
stc
mov
loopne
ret
aaa
cmp
sbb
je
arpl
adc
jno
mov
sub
mov
mov
xchg
stos
push
cmp
pop
mov
sbbb
pushl
or
enter
cmp
xor
mov
movsb
jmp
dec
push
cmp
movsb
negl
js
or
sub
add
aad
jge
push
ds
adc
push
mov
mov
cmp
push
add
add
into
mov
std
add
cmpsb
bound
dec
scas
mov
ss
dec
jp
fildll
adc
push
test
xor
mov
xor
fwait
xor
and
and
adc
fwait
sub
call
and
mov
mov
and
push
mov
movsb
pop
adc
aas
pop
xchg
into
xor
sbb
mov
push
arpl
filds
nop
mov
xchg
adcb
loop
pop
dec
psubd
xor
xor
fneni(8087
cmp
mov
lods
push
aas
and
pop
leave
cltd
dec
fiaddl
scas
mov
jae
adc
xor
mov
pop
test
call
test
decl
and
or
ret
rcr
add
mov
pop
lods
mov
adc
sub
loopne
adc
xchg
mov
push
dec
inc
sarl
outsl
xchg
push
add
in
clc
sbb
mov
cmpsl
cmpsb
jg
push
inc
lea
mov
imul
in
add
dec
sbb
push
mov
test
idiv
adc
cmpsl
push
stos
fisubrl
sub
add
inc
xor
xor
into
incl
pop
or
inc
jns
dec
push
add
push
fnstcw
ret
mov
out
orb
mov
cmp
mov
test
dec
inc
ficoms
test
jno
push
push
xor
movsl
rorl
adcl
add
fcmovnu
cmc
addb
xor
ja
jecxz
jo
testl
adc
movsb
xchg
insl
and
arpl
jae
je
add
cli
lret
pop
mov
lods
loope
sub
insl
mov
pusha
pop
jge
mov
rclb
mov
dec
pop
and
arpl
faddp
cltd
int3
lret
sbb
int
sbb
adc
inc
scas
mov
xor
cli
mov
sahf
in
iret
in
rcrl
mov
cmp
dec
ret
or
fstpl
pop
repnz
pcmpeqb
ret
imul
out
inc
cmp
inc
aaa
popa
nop
lret
xorb
aaa
js
and
cs
aad
cmp
aam
aad
mov
jns
push
sbb
cmpsb
mov
add
in
arpl
pop
mov
shr
mov
inc
enter
pop
push
cmp
fwait
jp
ds
addr16
xchg
cmpsb
lock
insl
test
inc
loop
cmp
cli
xchg
roll
and
fistpl
and
pop
movsl
cmpsb
push
outsb
add
add
vmwrite
ja
jno
mov
sti
xor
jne
inc
sub
mov
and
xchg
xor
in
popa
test
and
mov
mov
adc
insl
test
push
push
shr
outsl
loopne
ljmp
test
stc
mov
ds
pop
mov
xlat
imul
je
imull
lds
jp
push
push
orl
inc
adcl
rcl
sub
popf
mov
pop
aad
in
das
insb
loope
xor
lods
mov
mov
dec
stos
push
scas
push
xor
shlb
mov
inc
or
lea
hlt
cli
add
bound
cltd
sub
cmp
cmpsb
mov
stc
or
cmc
insb
pop
sub
adc
das
out
mov
push
or
jle
and
mov
pop
pop
sbb
inc
xchg
mov
cli
adc
push
jno
push
jecxz
mov
addr16
and
fwait
mov
dec
daa
sbb
sub
dec
ret
dec
aam
insb
dec
sub
jge
in
dec
cmp
push
lret
ret
push
inc
js
movsb
push
inc
test
push
dec
push
adc
jge
sub
push
pop
inc
mov
sbb
out
dec
dec
sbb
xchg
in
pop
loop
mov
fs
adc
mov
sbb
jo
icebp
adc
andl
js
shrb
adc
jecxz
cmpsb
jnp
jns
jns
out
mov
or
in
sub
lock
lret
mov
ljmp
loop
pop
push
cs
dec
mov
les
stc
in
ja
xlat
sbb
cmpsl
push
pop
lahf
sub
lock
cmc
xchg
jl
sbb
dec
lock
xchg
rcrl
outsl
mov
xchg
cmp
stos
in
or
sti
frstor
insl
mov
pop
movb
pavgb
pop
or
clc
outsb
mov
or
pop
pop
cmpsb
xor
xor
arpl
push
pop
add
cltd
stos
mov
andb
xchg
mov
imul
and
mov
xchg
cmp
loopne
js
or
cmp
repnz
cmp
mov
fcom
dec
pop
xchg
push
mov
neg
and
out
cmpsb
data16
mov
pop
je
test
dec
cmp
das
aaa
mov
mov
adc
lahf
push
mov
cmp
dec
cwtl
push
dec
dec
add
enter
pop
in
or
cmpsb
loope
mov
call
mov
xchg
in
pop
dec
mov
dec
aaa
push
jne
sub
in
xchg
mov
fcomps
sbb
xchg
sub
repnz
xchg
cmp
lods
push
push
inc
cmc
addr16
adc
mov
and
loopne
cmc
mov
jle
mov
cltd
push
rorl
shlb
fsts
jae
xor
test
push
lods
bound
ret
add
into
stos
adc
sub
pop
lahf
jmp
mov
xchg
cmpsb
mov
test
xor
sub
inc
dec
pop
add
pop
push
repnz
into
imul
mov
xor
daa
aad
mov
and
aas
insl
data16
or
jg
xlat
outsb
sbb
jbe
adc
lods
outsl
add
push
adc
mov
and
lcall
add
dec
or
pop
pop
aam
push
jecxz
std
jge
lret
adc
sbb
inc
cmp
or
sub
xor
jo
jnp
loope
xor
adc
pop
repnz
mov
cld
pop
repnz
xor
lret
mov
sbb
loop
mov
loopne
fistpl
or
or
flds
daa
stc
ja
add
movsb
movsl
mov
insl
mov
adc
xor
fldt
stos
aaa
xchg
pop
sar
dec
pop
cli
out
and
sub
adc
and
add
imul
sbb
dec
cmp
mov
inc
aaa
lods
rolb
jecxz
mov
loope
xchg
and
cmp
cwtl
aad
leave
pop
push
pop
and
push
add
lods
push
clc
fs
adc
or
cmp
dec
xchg
push
pop
daa
icebp
pop
cli
and
push
shlb
lods
popf
sar
or
jp
imul
sbb
ss
outsl
mov
xchg
or
jno
xorb
and
and
push
dec
push
lea
insl
cli
xchg
or
loop
arpl
inc
mov
out
js
aaa
push
test
adc
fistpl
sbb
jnp
cmp
xchg
cmp
clc
cmp
add
loope
aaa
lret
roll
js
or
sub
xor
lods
ss
xchg
push
xor
push
and
jno
lahf
inc
iret
fmul
movsb
add
fsubr
jecxz
fldcw
sub
mov
add
or
mov
jnp
xchg
pushl
jo
das
out
adc
jnp
enter
ret
das
jle
sub
lahf
test
mov
insl
cmp
or
mov
inc
icebp
stc
mov
aas
scas
std
push
es
addr16
and
out
aaa
dec
stc
pop
xor
movsl
mov
mul
xchg
push
gs
xor
imul
incl
pop
or
movsl
add
mov
pop
mov
pop
push
sbbb
cli
adc
or
in
sbb
pop
jg
aaa
imul
lahf
and
movsl
and
ja
pop
sub
inc
ret
test
mov
int3
inc
adc
sbbb
or
push
jge
dec
push
aas
shr
iret
sbb
push
cs
loopne
push
test
pop
lcall
cmpsl
and
adcl
sub
fnsetpm(287
mov
jae
mov
push
and
dec
icebp
and
jmp
dec
xor
jp
pop
sbb
and
mov
xchg
push
imul
inc
addb
mov
aad
xor
jo
ret
mov
and
cmp
cmp
repnz
lcall
inc
pop
mov
adc
xor
daa
pinsrw
xor
cmp
xor
adc
push
das
jo
mov
outsb
adc
rcrl
xor
xor
xchg
and
je
jp
jle
gs
subb
lcall
movsl
add
ja
std
add
or
mov
fsubrp
cltd
push
loopne
inc
mov
sbb
jnp
inc
mov
pop
les
movl
insb
push
push
aad
mov
cld
mov
push
add
sub
out
fadds
add
mov
push
push
sbb
xchg
shr
add
sbb
inc
dec
cmpsb
mov
lock
mov
lds
sbb
rcll
jne
ds
f2xm1
xor
mov
mov
push
out
sbb
adc
cmpsl
sbb
xchg
fstl
icebp
jns
and
mov
rol
xor
push
test
les
push
jmp
sub
xchg
loopne
sbb
addl
outsl
inc
shlb
jecxz
je
mov
fldl
cmp
imul
or
pop
sub
fmul
clc
mov
dec
push
add
int3
rolb
and
test
out
inc
pop
popf
iret
movsb
sbb
enter
dec
xor
lds
pop
test
sbb
xchg
xor
add
pop
add
sbb
sub
adc
inc
or
pop
push
mov
push
std
imul
aam
dec
inc
loope
or
adc
in
ret
fs
jmp
rcrb
inc
mov
or
add
dec
jle
xor
lcall
dec
cli
popa
mov
clc
mov
xchg
lea
pop
in
dec
loopne
aaa
and
repnz
jg
or
std
cwtl
icebp
cwtl
addr16
test
popf
push
je
push
push
dec
rorb
in
test
movsl
mov
in
sub
jmp
repnz
clc
aas
in
jae
ret
pop
call
xor
cmp
sub
add
fimull
mov
andl
movsb
and
adc
jmp
movsl
gs
lcall
add
clc
cmpsb
xlat
pushf
popf
test
sbb
push
les
pop
sbb
hlt
aaa
stos
push
xchg
les
cmp
sub
clc
fnstsw
dec
cli
pop
outsb
xchg
jbe
les
cmp
stc
pop
cmp
jmp
fsubl
mov
and
testl
test
hlt
popf
jecxz
sub
dec
add
mov
mov
dec
test
and
xlat
pop
cmc
fmull
or
ja
add
into
add
lret
daa
xor
mov
push
push
xchg
js
and
push
sarl
test
stc
inc
pop
xor
sahf
hlt
pushf
push
add
dec
mov
pop
cmpsl
xlat
nop
int
jbe
sub
push
out
es
shl
fwait
pop
jge
add
mov
sbb
and
insb
inc
rclb
add
jecxz
shr
ret
ss
jbe
pop
mov
movsb
mov
mov
mov
mov
imul
sarl
rcll
into
aaa
push
push
negb
mov
inc
adc
pop
rolb
mov
loope
insl
and
adc
push
or
jno
or
les
jnp
int
loopne
cltd
cmp
sub
movsl
push
sub
bt
jg
dec
cmpsl
push
sbb
decb
mov
mov
mov
sti
jno
mov
mov
aas
shrb
lods
enter
xor
xor
jno
insl
mov
or
dec
xchg
js
xchg
pop
pop
pop
mov
lods
pop
pop
mov
punpckhdq
popa
test
push
push
adc
lcall
xor
or
sub
popf
sbbb
jg
adc
pop
xor
jno
std
lods
test
push
sub
shl
lock
incb
call
aad
scas
pop
xchg
mov
adc
fisttpll
or
jae
cmpsl
jle,pt
push
in
scas
cmpsl
mov
pusha
std
cmpsb
and
hlt
icebp
xor
ljmp
aam
xor
jnp
sbb
nop
scas
xor
inc
repz
pop
adc
xchg
out
lret
lds
or
xor
adc
icebp
sub
add
insl
out
mov
lock
add
loope
inc
pop
repz
and
outsb
popf
outsl
and
jl
out
movsb
js
rcll
ret
cs
add
pop
dec
sub
loop
int
xlat
cmp
add
adc
shrd
push
jnp
mov
mov
sub
adc
fistpll
mov
cmp
jbe
push
lahf
jp
mov
mov
pop
mov
das
jb
sbb
rclb
pop
mov
cmp
aaa
mov
je
add
adc
add
std
xchg
cli
loope
sbb
int
cmp
hlt
rcr
loopne
sahf
in
dec
aam
xor
pop
add
or
cmp
pop
add
jg
fcmovu
ss
nop
icebp
cltd
test
shrb
cmp
or
jmp
xchg
mov
rcrb
adcb
rcll
mov
jl,pt
aaa
cmp
fwait
movsb
call
add
add
bsr
sub
sub
mov
sub
cmpsb
dec
jmp
pop
sub
lea
cli
lock
rcrb
pop
imulb
movb
jle
in
xor
push
add
daa
adc
clc
lods
movl
inc
jecxz
pop
mov
fmull
push
xchg
or
std
sbb
mov
sub
shrl
test
xor
cmpsb
addr16
add
jmp
fidivl
addl
sahf
addr16
mov
arpl
sbb
inc
xor
add
and
and
shrl
mov
xchg
mov
stos
sarl
shlb
pop
add
mov
mov
pop
das
shrl
decb
inc
es
movsl
ljmp
out
pop
pop
outsb
xchg
mov
mov
xchg
sub
roll
sub
mov
mov
stos
popa
push
inc
or
fisttps
push
repnz
pop
jle
sub
or
lea
dec
pop
sbb
mov
scas
sbb
sub
sbb
mov
cmp
sub
mov
out
out
scas
add
inc
jmp
mov
rclb
mov
inc
lea
or
adc
cli
push
mov
push
imul
gs
xor
cs
adc
xchg
pop
mov
rcll
pop
rcrb
mov
adc
xchg
pop
pop
lahf
mov
icebp
fidivrs
andb
or
and
mov
cmp
jg
xlat
sub
mov
rclb
add
jp
xchg
jno
lret
mov
les
or
sbb
mov
sbb
adc
loope
loop
shll
add
test
xchg
int
adc
pop
add
loop
sbb
test
sti
xchg
fsubl
lea
inc
inc
or
sub
inc
es
and
adc
push
or
das
leave
cmpsl
inc
cltd
movhlps
or
not
xchg
test
mov
pop
mov
add
mov
repnz
les
insb
std
sahf
mov
and
pusha
xor
daa
nop
lcall
sub
push
lods
cmpl
es
lods
loope
lods
push
pop
xchg
and
cmp
pop
daa
push
add
ja
sbb
test
push
ljmp
cwtl
mov
mov
pop
inc
movsl
or
movl
mov
ja
aaa
jno
js
cmp
push
adc
mov
sub
adc
es
cwtl
das
and
movsl
aas
pop
cmp
mov
ret
aam
test
add
or
mov
cwtl
add
mov
sbbl
iret
pop
rcl
in
xchg
or
and
sti
lods
outsl
push
shlb
inc
jecxz
jmp
and
cli
mov
test
xchg
addr16
dec
cs
es
cmc
mov
adc
lock
adc
xchg
sbb
or
xor
mov
jp
sbbl
out
repz
dec
adc
add
xor
mov
pop
push
cmp
cmpsl
sbb
dec
inc
mov
xchg
in
mov
rcll
inc
inc
les
ret
inc
mov
insl
lods
jne
ficomps
jl
jmp
xor
pop
lods
sti
incb
cmp
nop
jl
jecxz
sub
adc
pop
iret
mov
jbe
lea
cli
add
or
pop
sti
lea
shll
repz
inc
outsl
aad
mov
xchg
sti
in
lahf
inc
mov
jno
mov
inc
vpsrld
repz
movsl
adc
fwait
aam
in
movsl
or
or
push
les
in
inc
test
or
loopne
test
and
mov
dec
push
dec
clc
mov
rol
and
pop
mov
cmp
loopne
add
or
out
shrb
xchg
aam
add
xchg
add
shrb
mov
iret
inc
mov
das
sbb
mov
test
test
xor
jns
test
jno
aas
and
push
jno
rolb
in
xchg
jo
rcll
sbb
jl
mov
and
das
sbb
and
ljmp
add
pop
repnz
lahf
vmread
enter
push
pop
mov
jle
push
mov
ljmp
orl
mov
or
pop
xlat
popa
cwtl
xchg
fdivs
cltd
or
push
aad
push
and
adc
rolb
aaa
mov
insl
pop
add
ret
and
inc
sbb
push
jmp
mov
xchg
jo
push
mov
jmp
mov
imul
cli
lahf
popa
addr16
fcom
adc
jne
lahf
js
ds
mov
in
loopne
add
fldl
dec
insl
dec
push
pop
push
mov
imul
ds
and
mov
adcl
or
cmp
mov
jno
inc
test
pusha
loop
addr16
jmp
sbb
add
cwtl
inc
imul
push
je
mov
inc
fidivs
in
popa
dec
mov
xor
push
imul
int
loope
pop
aaa
and
fstpl
mov
jae
fxch
insl
mov
test
addl
mov
in
aad
adc
pop
or
cs
sub
sti
pop
mov
push
int3
inc
mov
pop
out
icebp
les
jae
sub
int
cmpl
fs
pop
out
lcall
fists
push
xchg
ljmp
loopne
out
inc
repz
mov
sub
mov
loopne
mov
flds
ja
int3
sarb
stc
sti
pop
in
sub
cmc
and
pushf
cmc
sbb
or
ret
adc
cmp
inc
jae
sbbb
mov
fwait
pushf
sub
rcrb
push
push
mov
dec
jecxz
pop
add
in
shrl
scas
jno
adc
pop
and
test
les
fs
cli
push
fsubl
adc
xlat
js
cld
push
cmpl
cmpsl
or
inc
adc
push
jno
mov
ret
cltd
adc
lea
stos
pop
insl
jno
daa
hlt
lcall
pop
dec
mov
push
xchg
out
adc
add
int3
inc
mov
sbb
sub
cmp
lret
sub
aam
mov
cwtl
es
and
dec
mov
pop
dec
int3
test
dec
loopne
jecxz
pop
shlw
dec
jg
divb
lods
xor
jp
pop
pop
jl
jg
aad
or
mov
cmc
push
out
call
pop
inc
sbb
dec
mov
mov
add
data16
xchg
add
cmp
lret
stc
lods
inc
xor
sbb
xchg
insl
pop
or
jle
mov
cmp
out
ret
xor
adc
pop
dec
aam
xor
cmp
and
mov
cmpsl
push
and
mov
ljmp
ficomps
je
aad
xlat
incb
xor
lcall
xor
imul
int
iret
push
cmp
add
add
das
xchg
mov
gs
dec
repnz
imul
mov
xor
stos
dec
and
fisttps
jmp
adc
lods
clc
mov
inc
pop
mov
xlat
int
xchg
xor
xor
or
mov
adcl
xchg
fbstp
sarb
cmovle
stos
rorl
mov
jo
mov
mov
dec
xlat
imul
jne
shrl
xor
frstor
push
or
lret
jecxz
jmp
add
xchg
jb
sbb
or
call
setge
push
daa
aas
cmp
cmp
and
xor
leave
inc
aaa
xlat
sti
sub
test
loopne
lock
daa
pop
sub
rclb
icebp
iret
inc
or
inc
out
insl
div
add
test
pop
lods
adc
ds
fistps
in
fs
adc
xchg
sbb
push
dec
jne
dec
xchg
icebp
pop
xor
outsl
mov
cmpsl
mov
mov
pop
pop
adc
or
push
addl
aad
push
sahf
fisttpl
popf
nop
shrb
fsubrs
dec
rclb
jmp
jo
pop
jge
ret
adcb
mov
push
jg
dec
mov
add
cmpsl
inc
shll
ja
sbb
aas
add
dec
pop
test
loopne
jmp
stos
outsl
jle
sysexit
scas
or
pop
inc
push
loop
jge
cmpsl
out
rorl
dec
mov
jl
or
test
xchg
pop
imul
mov
xor
sbb
sbb
icebp
insl
js
jl
das
in
dec
shrb
pop
adc
scas
or
mov
in
xchg
or
sub
lock
add
lods
cwtl
push
xor
ret
push
sub
xor
std
xchg
cmp
popa
sub
js
add
pop
or
and
sahf
add
nop
mov
jo
or
add
enter
add
inc
inc
pushf
inc
pop
or
mov
inc
mov
test
xchg
sub
pop
add
pushf
jns
dec
test
dec
xchg
inc
jbe
or
std
sbb
fstps
fdivl
cmp
cmp
inc
mov
in
mov
and
pop
popf
add
mov
rolb
push
fs
add
pushf
outsl
lds
add
cs
shr
adc
add
fwait
mov
and
mov
test
pop
cld
insl
jecxz
fnstenv
ret
mov
mov
or
sbb
and
jmp
flds
dec
imul
stos
dec
pop
adc
jno
sahf
jo
stos
and
pop
jle
sub
popa
push
pop
and
fstps
jmp
add
mov
push
cld
aaa
in
mov
mov
mov
js
push
imul
clc
ret
lcall
cmp
std
mov
lahf
lret
xchg
out
xchg
adc
addb
pusha
test
dec
mov
inc
adc
insl
adc
in
lds
ljmp
add
fucomip
push
xchg
nop
mov
pop
popf
add
lock
pop
xchg
and
add
arpl
push
mov
fdivr
push
jnp
jmp
stos
pop
inc
mov
pop
pusha
pop
movb
mov
mov
xor
repz
bnd
pop
push
add
inc
mov
fistps
add
add
push
icebp
in
or
xor
mov
or
test
dec
sub
mov
inc
dec
add
inc
ja
nop
stos
subps
pushl
mov
loope
test
mov
or
test
mov
filds
add
adc
xor
call
stos
outsb
outsl
cs
sti
dec
jo
xor
call
in
xor
movsb
jl
js,pn
test
loope
aas
and
sbb
cld
add
add
push
add
dec
dec
and
jl
int
sub
add
sbb
push
test
add
inc
outsl
pushf
mov
repnz
mov
adc
bound
xchg
cmp
or
push
jle
addl
push
push
lret
xor
aam
xchg
pop
xor
js
mov
pop
loopne
imul
mov
dec
adc
sub
xchg
adc
inc
dec
and
ficoms
xchg
mov
repnz
orb
inc
jle
add
adc
pop
cli
push
aaa
xchg
and
mov
sub
nop
jb
sub
das
sti
inc
sbb
aaa
xor
mov
sbb
mov
rcr
push
movsl
lahf
dec
mov
push
dec
jg
les
and
imul
fmull
shrl
pop
jns
push
dec
sbb
test
in
xchg
fsubl
adc
lock
out
rclb
sbb
sbb
or
push
lods
pop
loope
or
xlat
sbb
faddl
add
test
or
push
xchg
dec
pusha
test
xor
adc
and
test
cmc
mov
add
inc
lds
cltd
rcl
fcomip
and
inc
imul
cmp
dec
ds
shll
fsubrl
add
bound
addl
ss
push
lods
adc
negl
aaa
and
shlb
fwait
push
icebp
inc
or
shrl
dec
mov
out
sbb
daa
mov
or
shrb
das
mov
push
mov
inc
and
add
scas
dec
inc
xchg
setge
add
test
adc
add
shll
pop
mov
adc
push
int
and
pop
push
add
pop
lds
push
push
inc
xchg
pop
data16
mov
and
popf
xchg
addl
pusha
xchg
inc
dec
push
lahf
sbbl
mov
popa
jmp
mov
xchg
cmpsb
push
and
shr
inc
push
ret
dec
and
sub
add
lods
pop
sbb
push
repnz
mov
add
cli
inc
ljmp
mov
mov
sub
xchg
cmpsb
mov
sbb
mov
ljmp
test
jnp
stos
or
sbb
mov
and
add
subl
push
mov
push
leave
sbb
rcrl
adc
fistps
add
fmull
and
jecxz
dec
les
xchg
sub
xor
sbb
xchg
stc
mov
cmpsl
sub
xor
sub
mov
insl
pop
mov
outsl
dec
or
pop
sbb
push
pop
xor
in
adc
rolb
sub
outsb
inc
insl
loope
or
cmpb
shlb
dec
test
mov
mov
mov
les
lret
mov
add
add
imul
incl
xor
jno
cmp
jns
jne
roll
xchg
mov
cmpsl
inc
adc
adc
andl
and
cwtl
in
out
addr16
fmull
rol
fbstp
push
stos
sbb
fwait
inc
push
mov
loop
add
popa
iret
jnp
pop
xchg
movsl
subl
jb
sub
push
mov
nop
xchg
insb
inc
negb
mov
test
xor
aaa
lods
cmp
shrb
pop
aas
bound
jne
push
icebp
test
outsl
adc
hlt
enter
ja
dec
lea
mov
fcompl
das
sub
int
mov
inc
test
push
or
mov
pop
sub
dec
inc
add
cmp
test
inc
mov
icebp
jmp
clc
mov
xorl
arpl
in
jp
dec
xchg
sahf
idivl
in
mov
jmp
cmpsb
push
sub
inc
or
mov
xchg
inc
pop
mov
and
repnz
icebp
pop
scas
addb
fdiv
pushl
fdivs
push
and
push
adc
xor
push
cmc
dec
mov
pop
inc
insl
inc
mov
sub
out
cmp
xlat
fsubl
daa
jo
pop
adc
cld
lcall
sbbb
and
iret
ljmp
xchg
cmp
clc
fidivl
and
xor
add
mov
mov
inc
jae
lahf
aad
test
jl
push
jl
xchg
cmp
and
fstpl
cmp
adc
sbb
push
pop
dec
pop
loopne
adc
lret
jmp
push
sbb
xchg
cmp
sub
lcall
pop
jbe
push
or
cltd
pop
mov
jmp
call
in
xchg
xor
push
pop
popf
sub
pop
pop
bound
xor
jl
inc
xchg
adc
out
cmp
and
cmp
fbstp
sbb
push
aas
mov
or
jmp
lcall
lds
cmp
inc
das
sub
pop
int
jae
dec
dec
add
je
in
or
jae
fiaddl
roll
hlt
subl
shrb
xor
cmpsl
pop
out
hlt
adcl
jge
movsl
xor
icebp
mov
cltd
loope
mov
add
add
loopne
add
out
dec
push
lock
icebp
jne
shlb
xor
xor
or
cmp
add
divb
rolb
loop
push
bound
add
xor
leave
mov
mov
adc
inc
dec
bnd
lds
xor
or
int3
test
out
jnp
mov
xchg
push
lds
adc
add
mov
test
loop
popf
sbb
fildll
pushf
pop
add
lcall
pusha
cs
shl
fisubrs
fiaddl
scas
cmp
sbb
cmp
test
mov
arpl
dec
lds
ljmp
and
sbb
pop
mov
cmc
rolb
sbb
jae
loopne
outsb
xchg
mov
mov
lods
mov
mov
lods
inc
pop
sahf
or
cmpsl
in
icebp
lahf
fnstcw
mov
cmpsb
repz
pop
adc
aaa
mov
lret
ss
mov
add
in
dec
movsl
jno
ret
inc
cmp
and
gs
loopne
mov
aas
dec
sbb
and
cmp
test
cmp
rolb
pop
xchg
test
pop
data16
xor
mov
adcl
xor
adc
add
dec
and
cli
adc
dec
repnz
or
xchg
inc
sbb
dec
jp
and
test
xchg
bound
out
imul
sbb
sahf
lds
lds
loop
sub
inc
adc
xor
fisttpl
test
sbb
xchg
cld
add
add
stos
subl
insb
xor
daa
mov
xorb
out
and
call
stos
lods
push
inc
int
shlb
mov
sub
lret
push
inc
enter
adc
xor
rclb
ja
dec
or
fsubr
mov
negl
mov
add
adc
push
out
imul
call
ret
and
jg
pop
jnp
push
adc
push
cli
pusha
inc
sbb
xchg
test
or
rorl
pushf
mov
jge
out
jle
js
std
add
cmp
dec
mov
jp
sahf
pop
dec
iret
sti
jno
push
xchg
cmp
loope
aas
and
sbb
xchg
adc
stos
std
sbb
pushf
sbb
push
mov
cmpl
cmp
nop
mov
jo
divl
or
pop
es
aas
ljmp
pop
repz
add
add
sbb
das
insl
xchg
jns
push
pop
out
adc
mov
add
fcom
inc
test
movsl
pop
mov
mov
loopnew
jno
das
cmc
into
jnp
inc
popa
jno
les
test
mov
xchg
or
loop
jo
pop
add
dec
aad
les
adc
int
or
mov
pop
shrb
adc
roll
cld
cmc
pushl
mov
jns
jl
xor
iret
sbb
inc
lock
mov
and
in
cwtl
inc
cld
int3
add
ss
sub
insb
icebp
jb
or
dec
or
or
or
scas
hlt
lods
fisttpl
jo
cmpsl
outsb
pop
in
jae
out
push
push
mov
jbe
jns
mov
xor
dec
shlb
icebp
pop
dec
mov
in
sub
dec
aad
sub
jmp
cmp
mov
mov
fidivs
subb
jge
adc
loope
addb
cmp
sbb
pop
flds
lds
mov
xchg
adcl
lods
jns
aad
pop
push
xchg
lcall
push
cmp
mov
xchg
out
movsb
into
fnsave
cwtl
ja
mov
std
xlat
pop
xchg
pop
pop
mov
mov
xchg
inc
imul
rcrl
sub
in
lods
jge
cwtl
ret
xchg
test
adc
xor
aad
or
mov
ds
adc
fnsave
add
xor
repnz
mov
in
lods
lret
out
inc
mov
aas
sbb
sbb
mov
or
stos
movsb
xor
insl
cmp
xchg
push
in
push
xor
or
cmpb
pop
out
inc
and
jne
push
popf
adc
jno
paddd
xorb
shlb
jno
jp
lea
out
pop
jb
sbb
pop
jb
mov
and
test
inc
jae
add
aad
es
sahf
fmull
push
dec
repz
popf
ljmp
pop
leave
mov
daa
jo
inc
aas
sbb
mov
aad
lods
pop
sub
lea
aam
and
imul
repnz
jp
sbb
adc
les
sub
and
fcmovbe
or
lods
int
jns
es
cld
xchg
roll
cmpsl
nop
bound
push
and
es
lcall
dec
add
add
xlat
add
sbb
and
push
mov
push
mov
aam
iret
cli
popf
shrl
jecxz
lret
mov
call
pop
sub
jp
adc
or
movsl
jl
push
stc
mov
daa
js
sub
mov
push
adc
out
in
pop
cwtl
loop
jmp
jne
fadds
ss
ds
daa
gs
ss
movsb
test
push
or
mov
add
mov
cmp
mov
cmp
shrb
adc
add
add
loope
lds
bound
and
shrb
xchg
js
imul
push
ret
inc
bound
insb
xchg
daa
mov
dec
pop
xor
movsl
nop
enter
icebp
dec
rclb
lea
mov
mov
or
je
jg
cmpsl
add
inc
jle
adc
bound
in
test
insb
and
mov
add
bound
xor
arpl
mov
add
mov
mov
sub
mov
insl
cmp
add
sub
inc
pop
adc
inc
jmp
push
int3
mov
and
cwtl
or
inc
push
dec
inc
in
xor
fadd
lret
push
push
jge
inc
jecxz
inc
cs
iret
push
adc
enter
sub
loopne
xor
insl
inc
insb
lock
mov
scas
mov
dec
testl
pushl
sub
add
xor
inc
pop
dec
mov
adc
jg
bound
sbb
lret
xchg
jle
xor
pop
jb
or
inc
rcrb
rcrb
cmp
outsl
js
aad
pop
scas
scas
insb
je
xchg
xchg
fidivl
sbb
dec
xchg
or
out
aad
jmp
fsubrs
repz
and
xchg
or
lcall
fcompl
aas
fs
mov
xchg
mov
mov
int3
dec
mov
fs
movsb
negl
inc
xchg
loop
jmp
push
sbb
mov
inc
and
cmp
icebp
notl
push
push
adc
adc
cmp
inc
sbb
into
enter
jne
sub
mov
jg
orw
inc
cltd
lea
sbb
popl
push
imul
and
or
add
aad
lds
pop
fimuls
aaa
push
inc
enter
cmp
stos
fcomps
cmp
jb
mov
mov
inc
adc
xor
mov
mov
test
add
and
add
or
push
push
insb
subl
aam
mov
cmpsb
aam
ret
xor
pushf
iret
xor
xor
xor
lahf
adc
or
scas
aaa
jo
lods
push
pop
jae
mov
ljmp
push
adc
mov
add
hlt
sarb
xchg
jle
jl
outsl
dec
lds
pop
or
in
mov
iret
xchg
test
je
sbbl
aaa
mov
mov
dec
mov
push
outsl
nop
outsl
test
pop
js
sbb
cmp
hlt
js
ljmp
inc
clc
inc
sahf
cmp
xchg
sbb
ds
mov
test
pop
pusha
test
sub
or
sub
pop
nop
rol
dec
xor
jnp
pop
popa
stos
pop
push
sarl
mov
test
inc
imul
popa
das
loop
gs
xchg
add
icebp
les
fldt
in
pop
jl
into
je
mov
int3
lds
mov
cmp
xor
lods
inc
pushf
adc
mov
rclb
fistl
nop
add
mov
rcrl
daa
sahf
aam
pop
mov
fcoms
sub
out
jo
hlt
lds
addb
pop
mov
je
push
decl
pop
repnz
adc
xor
lcall
add
popf
scas
mov
push
dec
inc
cmp
iret
mov
sbb
push
inc
adc
pop
mov
daa
pop
xor
pop
cld
test
aas
mov
xor
stos
mov
jns
loope
imul
mov
cli
inc
jns
jne
ds
jae
cmc
add
xor
rclb
shll
and
stc
jnp
inc
dec
sub
jg
popa
repz
jge
inc
dec
pop
xor
dec
xchg
mov
cmp
add
adc
inc
adc
popa
movsl
out
mov
fsubrl
push
jne
mov
or
or
mov
in
cmp
test
pop
orl
insb
jns
adc
call
mov
jns
shrl
ficomps
fistpl
adc
xor
loopne
dec
or
add
je
push
leave
pusha
pop
scas
sub
push
adc
push
lret
loop
ret
scas
movsb
sub
loopne
add
fldt
mov
in
bt
mov
add
imul
je
inc
xchg
adc
pop
xchg
inc
loope
stos
hlt
mov
pop
pop
dec
jb
int
jge
jo
pop
aas
mov
popa
bound
xchg
in
pop
adc
inc
aas
and
fimull
push
lods
sbb
inc
mov
mov
pop
mov
into
aas
in
mov
out
shlb
mov
ret
and
dec
rolb
stc
xlat
inc
add
sub
pop
out
das
add
sbb
vunpckhps
mov
jno
bnd
mov
cld
outsl
daa
cli
cld
sub
inc
push
fcmovb
jo
xchg
jo
imul
sub
aaa
push
push
mov
loopne
into
mov
mov
repz
mov
cmp
cmp
data16
shlb
in
jne
sbb
pop
fcomps
movsb
and
cmp
dec
mov
adc
inc
notb
addr16
mov
std
iret
inc
aaa
out
jnp
cmc
cs
and
lock
adc
mov
sbb
adc
mov
dec
cmp
movsb
inc
aaa
xchg
pop
andl
stos
sub
mov
push
bound
push
popa
fildl
js
mov
loope
mov
pop
dec
mov
or
push
jp
push
dec
into
push
repz
je
jae
fcom
add
jle
push
pop
pop
push
movsb
mul
pop
test
in
xchg
jp
fldcw
aad
orl
scas
cmc
pop
add
xor
mov
decb
imul
pop
adc
push
in
mov
push
xchg
jle
jbe
fsubrs
dec
mov
in
mov
pop
xchg
add
mov
push
or
pusha
xchg
sbb
fnstsw
movsl
add
icebp
xchg
sbb
sub
int
dec
lds
or
dec
pop
aas
jl
lock
push
cld
mov
add
jl
popf
add
cwtl
sbb
mov
adc
test
repnz
dec
push
shlb
xor
mov
insl
add
push
and
jae
push
ret
mov
sbbl
add
inc
pop
addb
sahf
jnp
addr16
mov
mov
sbb
mov
and
cwtl
dec
dec
or
mov
jge
mov
mov
movsl
lods
or
jecxz
push
frstor
xor
adc
jb
lea
push
enter
in
ja
adc
inc
add
rolb
xorl
add
jae
add
mov
mov
mov
or
sub
pop
lods
push
daa
loop
pop
adc
cltd
addb
xorl
sbb
pop
jg
inc
adc
pop
loope
push
inc
leave
jecxz
icebp
cmp
dec
cmpsl
or
pop
and
sbb
cmp
adc
cmp
push
mov
push
test
add
mov
push
jb
cmc
mov
xchg
add
shrl
pop
jo
jp
mov
push
pusha
add
dec
test
into
cmpxchg
rorl
sti
ja
or
lahf
mull
sub
fs
lds
jmp
cwtl
or
mov
fldenv
loopne
add
dec
repz
ljmp
mov
scas
lret
fdivl
mov
xchg
pop
cwtl
loope
incb
mov
push
add
adc
test
aaa
imul
inc
sbb
xor
push
push
pop
and
fld
ret
sarb
imul
mov
sub
add
xor
dec
sbb
bound
jecxz
sub
mov
adc
adc
lcall
lods
aam
sbb
pop
aam
lods
mov
adc
frstor
std
jecxz
lds
inc
dec
ret
testb
add
stos
push
or
in
lods
es
rcr
in
mov
push
out
jmp
sbbl
mov
mov
add
xchg
sub
enter
push
bound
jecxz
insl
pop
bound
push
scas
out
adc
add
adc
inc
or
xchg
cli
mov
fcmovbe
push
test
loope
es
inc
and
push
mov
adc
push
pop
xchg
xor
add
jno
sbb
call
andl
aam
loope
or
add
push
or
push
les
stos
nop
movsl
jmp
loope
sbb
scas
or
stos
xor
pop
push
imul
xor
cltd
rclb
fs
add
inc
mov
les
cmpsl
sbb
test
insl
aam
addl
daa
sbb
push
mov
nop
ja
aad
dec
cltd
cwtl
add
dec
arpl
sub
add
sbb
or
xchg
adc
rolb
jae
inc
repz
ljmp
addr16
pusha
int3
mov
les
jmp
sub
stos
scas
aam
or
jo
lods
test
push
dec
fucomp
lahf
fdiv
adc
lcall
push
in
rorb
adc
adc
xorl
push
mov
pop
lahf
push
adc
mov
rol
push
sbb
test
push
jb
in
outsb
test
xor
xchg
adc
adc
sbb
xchg
pop
and
out
sub
cli
push
and
addl
sbb
das
push
ret
add
inc
pop
enter
outsb
or
ret
xor
rclb
movsb
inc
push
pop
push
add
mov
dec
adc
jns
in
test
sti
adc
fcoms
cli
or
leave
or
test
and
int3
adc
gs
imul
mov
pop
lea
lock
mov
add
stos
arpl
les
push
xchg
jbe
or
mov
pop
mov
cmp
cmpsl
rorl
pop
jo
and
xchg
add
mov
andl
mov
and
add
push
or
movsl
add
aam
inc
sub
pop
in
aam
push
xchg
pusha
or
add
sbb
inc
vhaddps
inc
jae
sbb
mov
or
push
inc
adc
xor
inc
jno
pop
fidivrl
mov
inc
and
mov
add
clc
faddl
sbb
mov
or
pop
jo
repnz
mov
pop
mov
and
es
adc
scas
cmp
mov
lea
or
inc
add
dec
inc
sbb
mov
fisubl
mov
cwtl
or
xor
add
loop
xor
mov
push
add
subb
cltd
push
pop
pop
cmp
pop
mov
dec
movb
xor
loopne
jno
mov
andb
push
imul
andl
hlt
adc
inc
mov
jl
sbb
pop
insb
fsubl
mov
xor
lret
cmp
std
pop
insl
push
inc
lahf
jns
pusha
xor
and
add
lahf
push
xchg
out
les
mov
daa
test
cs
push
mov
pop
cltd
mov
mov
cs
push
mov
pop
das
cmp
js
enter
or
push
xchg
xchg
lods
push
loop
add
jns
push
xor
adc
sub
inc
dec
lods
lahf
mov
jo
loope
into
sbb
cmc
aad
adc
stc
lret
xor
adc
mov
in
inc
daa
ret
mov
cmpsl
mov
sbb
push
loop
fsqrt
sbb
in
jae
adc
jne
inc
cmpsl
repz
shlb
xor
and
sti
dec
test
stos
nop
sbb
sub
jl
pusha
pop
and
scas
mov
jecxz
movsb
jno
pusha
ljmp
test
out
or
sbb
fildl
and
fldl
test
mov
sub
aam
inc
jg
scas
inc
lods
orb
dec
loopne
sub
mov
rorl
mov
imul
loop
imul
xlat
push
stc
add
out
arpl
call
jae
cmp
sub
inc
add
add
add
jnp
jns
pop
gs
fisttpll
jmp
iret
dec
dec
dec
xchg
shrb
and
jnp
sti
arpl
les
push
subl
jecxz
add
rorl
shll
loopne
mov
xchg
data16
cmc
cwtl
dec
mov
fnsave
test
xchg
mov
sbb
nop
jl
fdiv
jecxz
ja
outsl
inc
mov
inc
pop
cwtl
mov
jb
insl
sbb
das
cs
test
mov
dec
inc
lds
fwait
mov
pop
dec
mov
dec
push
sbb
sbbl
in
pop
xchg
adc
xchg
rorb
sub
inc
sti
dec
push
cs
in
mov
sbb
addb
xchg
int
or
lret
inc
mov
pop
sub
and
adc
mov
stos
jmp
stc
cmp
movsl
sbb
xchg
nop
insb
andb
outsb
imul
leave
arpl
loop
nop
pop
imul
roll
adc
add
adc
xchg
or
push
push
sub
mov
sbb
add
xchg
add
add
imul
push
mov
icebp
andps
mov
pusha
push
dec
jl
sub
push
call
stc
or
cmpb
mov
pop
mov
adc
popa
push
cmp
fdivs
pop
mov
push
pop
mov
rolb
insl
call
ret
mov
pop
add
inc
mov
mov
mov
mov
pop
and
inc
loopne
outsb
push
fimull
in
inc
sub
sub
mov
and
xor
scas
jg
outsl
in
outsb
or
mov
sar
adc
stos
sub
xchg
stos
mov
add
addb
mov
dec
arpl
rclb
cltd
xor
dec
mov
mov
imul
push
sbb
inc
jl
sub
jb
cwtl
mov
enter
faddl
dec
adc
pop
fstl
fcomip
push
mov
sub
inc
add
pop
pop
add
jbe
ljmp
ret
cli
or
arpl
pop
sbbb
inc
pop
repnz
clc
inc
test
loopne
addl
and
sbb
cmpsb
pop
sub
xchg
mov
add
rclb
mov
mov
andl
fistl
sub
js
xor
andb
adc
ret
insl
xor
adc
or
jmp
inc
lret
dec
cwtl
push
inc
test
rclb
or
pushf
fcoml
pusha
inc
dec
loopne
sbb
ljmp
and
ret
sbb
dec
pop
inc
aaa
sbb
addl
mov
fdivl
in
lret
inc
inc
lcall
insl
test
cli
jg
push
aam
hlt
pushf
shrb
lcall
lea
push
sub
jae
adc
dec
jecxz
mov
xchg
repnz
jnp
and
ret
int
cmpsb
fsubl
pop
inc
orb
pop
jmp
imul
xor
rorb
bound
imul
push
inc
pushf
jns
lahf
out
imul
push
loopne
fucom
push
cmpb
and
pop
hlt
loopne
jb
pop
push
aam
inc
push
gs
dec
daa
cmp
ret
jo
adc
sarl
lods
mov
loopne
iret
lcall
cmp
les
jg
les
or
cmp
test
pushf
test
lods
jae
or
pusha
mov
adc
into
sarb
cmpsb
repnz
add
xor
decl
adc
dec
std
mov
add
clc
lcall
das
cld
int3
enter
sub
jle
cltd
popl
cwtl
loop
dec
out
jle
in
xlat
test
pop
test
adc
sbb
xchg
insb
sbb
cmp
icebp
cli
mov
jle
lock
add
ds
fidivrs
stc
sbbl
fwait
pop
testl
loope
addr16
mov
mov
rclb
adc
dec
xchg
adc
dec
and
cmp
dec
and
out
imul
cmp
jecxz
rcrb
aad
push
ja
gs
pop
push
mov
sub
cmp
test
orl
pop
lret
lea
aam
test
add
test
push
pop
push
push
xorl
lock
xchg
loope
inc
pop
xchg
lret
dec
iret
lds
or
movsl
bnd
inc
faddl
cwtl
imul
mov
dec
dec
push
popf
je
out
es
ss
jae
jg
mov
cli
sub
sub
mov
into
mov
and
mov
sub
push
fists
push
enter
cwtl
add
test
pop
sti
cmp
std
pop
movsl
insl
mov
jne
andb
pop
sbb
outsl
add
cld
stos
cmp
jnp
mov
repnz
das
or
lock
shrb
jno
push
xor
pop
dec
or
mov
sbb
push
imul
or
into
push
dec
call
jmp
inc
dec
adc
cmpsl
or
adc
pop
sub
lea
pop
fcmove
jg
insl
inc
jo
add
insl
mov
add
std
add
cmp
cwtl
push
js
imul
or
inc
jle
cmp
cmpsb
jne
nopl
in
loope
pop
sbb
loopne
sbb
jb
aaa
push
inc
add
mov
pop
lds
lcall
imul
dec
pop
dec
or
lea
inc
test
add
and
sbb
cwtl
cmp
mov
mov
rorb
leave
icebp
fmuls
icebp
mov
pop
out
adc
cmp
mov
mov
xchg
cli
mov
jg
lret
jp
push
push
mov
pop
inc
in
daa
fstpl
arpl
xorb
out
inc
lret
add
cmp
pusha
lods
out
int3
mov
add
or
push
loopne
orl
inc
pop
jb
jo
arpl
outsb
imul
inc
pop
and
add
stos
sub
clc
xchg
out
out
leave
fistpl
lock
mov
dec
into
ret
sbb
mov
jg
jo
lock
daa
mov
push
jmp
nop
push
cs
push
mov
or
or
loope
pop
insl
inc
sub
icebp
popf
and
mov
jecxz
mov
ret
mov
jg
lods
ss
cmc
out
ja
push
shll
arpl
fildll
out
jle
push
jecxz
cmp
in
ret
das
mov
adc
adc
cmp
pushf
inc
test
lock
lea
pop
test
hlt
sub
ret
push
xchg
cs
in
dec
push
push
sub
push
pop
fbld
sub
cmc
and
push
test
pop
push
cmc
daa
sbb
stc
aad
cmc
push
pop
push
pop
sub
mov
je
add
arpl
or
negb
mov
adc
dec
ss
fimull
or
push
pop
cmp
hlt
inc
pop
es
mov
pop
mov
stos
push
addr16
xor
lock
pop
rolb
inc
cmp
or
dec
gs
das
pusha
daa
mov
sbb
add
sbb
arpl
jb
cmp
xchg
aam
cmpsb
xor
in
mov
adc
sub
insb
jae
out
js
das
fwait
xchg
and
icebp
loopne
call
xchg
inc
mov
insb
roll
mov
xchg
test
jns
add
jmp
mov
push
jg
inc
or
jnp
add
lret
ret
dec
push
dec
cld
jmp
int3
ss
daa
mov
cld
jl
stc
fists
pop
jo
popf
aaa
push
cmpb
add
add
rolb
outsl
xlat
jns
js
xor
sub
xchg
pop
inc
mov
pushf
fdivl
jno
push
dec
mov
outsb
dec
outsl
call
int3
push
or
ficoms
sub
xchg
mov
movsb
mov
jno
pop
sti
jne
and
push
shrl
mov
inc
xor
pop
insl
sbb
push
xchg
das
mov
daa
add
mov
enter
push
scas
outsb
insb
dec
mov
fwait
or
mov
ret
nop
dec
fdiv
sub
dec
call
sbb
js
mov
mov
test
in
push
or
jecxz
jnp
xor
lock
adc
icebp
sti
cmc
loopne
lock
std
insb
pop
nop
sbb
add
xchg
into
idivl
imul
movsb
inc
inc
pop
flds
enter
imul
inc
enter
xchg
sub
incl
movsl
xchg
xchg
out
jns
clc
xchg
jae
jmp
stos
rcrl
popa
repz
lock
pop
xchg
mov
lock
stc
push
xlat
int
fisttps
test
mov
jmp
cmp
mov
test
out
sbb
dec
cmp
aad
or
loop
cs
sbb
outsl
jno
xor
les
add
aaa
add
jbe
jmp
sbb
fidivs
xor
jae
adc
cmp
push
jl
jge
inc
enter
inc
inc
xchg
lcall
roll
cltd
jp
jmp
jp
mov
mov
hlt
clc
xchg
inc
pop
push
add
mov
xchg
outsb
out
movsb
lods
aam
add
pop
adcw
add
adc
ds
es
loope
xchg
pop
andb
sub
xchg
sbb
into
jae
orl
pcmpgtd
dec
movsb
mov
pop
inc
jmp
lods
ja
pop
pop
je
mov
cld
shrb
dec
xchg
in
add
cmc
push
add
jmp
repz
xchg
and
pop
out
push
outsb
mov
loopne
cs
into
mov
and
ror
jno
push
inc
loope
pop
adc
repnz
int3
sarb
fstps
in
xlat
inc
int
dec
ror
jle
enter
inc
adc
mov
rcll
add
lock
mov
add
dec
les
lds
in
jp,pt
dec
in
aad
repz
js
jl
and
pop
lods
mov
icebp
jnp
lock
xchg
lods
push
dec
pop
mov
jnp
pop
adc
add
into
sbb
lahf
pop
push
fildll
mov
mov
les
or
mov
jno
lret
fucom
and
clc
jne
mov
addr16
adcl
or
loop
loope
mov
mov
inc
stos
jmp
stos
pop
dec
add
or
in
pop
mov
inc
ret
js
inc
jge
push
and
es
daa
loopne
dec
shrb
jnp
adc
andb
lahf
xchg
cmpb
cli
gs
jno
les
ds
mov
repz
insl
sti
int
and
roll
inc
imul
lds
cli
mov
or
outsl
fimuls
mov
sbb
pop
mov
mov
es
rcll
lcall
das
rcll
push
arpl
push
sahf
or
mov
cld
fmull
sbb
dec
push
inc
lcall
adc
lahf
lds
lcall
push
mov
cmc
mov
or
add
push
leave
mov
fstps
stos
pop
cmp
lods
push
push
or
loope
inc
sub
dec
cwtl
aam
cld
pop
shrl
and
inc
or
inc
mov
and
push
jl
sub
test
mov
out
mov
das
les
xchg
cli
add
mov
jbe
dec
dec
es
mov
push
sub
or
sbb
sti
stos
or
roll
inc
jmp
cmp
es
imul
lret
rolb
xor
dec
mov
mov
cs
adc
jmp
mov
or
stos
fistpl
inc
adc
mov
or
jae
or
insl
or
dec
bound
sbb
add
push
mov
sti
cld
sub
mov
cmpsb
push
pop
fstl
cmc
push
pop
les
popa
or
xor
fldcw
jge
dec
dec
lds
in
enter
sub
test
pop
add
shlb
stos
outsb
ret
inc
cmp
dec
inc
xchg
lcall
scas
ljmp
sub
xchg
jl
push
arpl
sbb
lcall
sbb
or
arpl
enter
inc
sarl
je
popa
lahf
add
xchg
jo
xchg
out
daa
in
jb
insb
or
sbb
jno
jl
test
ss
pop
insl
jg
or
imul
push
dec
popf
mov
pop
inc
mov
inc
lods
or
cwtl
scas
loopne
movsl
xlat
test
add
stc
es
repnz
mov
mov
ret
push
add
bound
aas
fcomps
mov
cwtl
sub
cli
sti
cli
ljmp
dec
and
je
dec
pop
push
fsubs
icebp
hlt
lods
adc
clc
call
xchg
push
push
jmp
and
pop
jne
lahf
mov
cmp
rcl
dec
lea
and
divl
scas
adc
fs
pop
outsl
sub
fsub
add
jge
add
push
dec
mov
xor
rclb
sbb
mov
xorl
cmp
push
adc
test
and
lret
aam
enter
es
inc
sahf
kmovw
pop
movsl
dec
das
push
cmpsl
sub
mov
call
jo
cmp
test
sti
in
jo
int3
push
notb
add
addr16
pop
push
icebp
xchg
sbb
aaa
call
pop
sbb
xchg
sub
mov
add
fmull
xchg
or
fsubrs
jmp
sbb
dec
sub
xchg
shrb
ja
mov
dec
dec
mov
inc
pop
add
jl
sbb
pop
imul
addr16
push
mov
mov
inc
sahf
fs
test
dec
add
inc
mov
or
shrl
jns
out
add
dec
jecxz
jecxz
sub
jmp
pop
push
mov
jmp
fst
out
fldenv
js
and
push
cmp
inc
andb
pushf
call
push
pop
les
xor
cs
loop
movsl
sarl
xor
mov
xchg
inc
notl
aaa
cld
popa
dec
stc
mov
jmp
add
jnp
pop
popa
xchg
fdiv
cs
loope
cmc
js
sbb
loopne
out
pop
sbb
sbb
cmpsb
scas
adc
mov
sub
cmpsb
movsl
and
pop
mov
stc
adc
cmp
mov
cmp
cli
jmp
xlat
fbld
fwait
out
and
dec
pop
movsb
add
test
sub
stc
sbb
add
pop
add
jns
ret
aas
jle
push
pop
xor
and
sub
lods
aas
test
mov
fidivs
push
dec
mov
xchg
addr16
jg
jg
and
repz
sub
cmc
mov
cmpsl
lret
pop
xor
add
push
adc
test
and
roll
cli
das
stc
insl
movsl
or
ret
mov
fdiv
cmp
stos
clc
pop
aad
dec
es
xchg
daa
pusha
out
stos
push
pushf
mov
push
xor
inc
das
rorb
and
pop
js
sbb
and
push
sub
jnp
sbb
movsl
add
in
mov
xchg
insl
xchg
and
pop
xchg
rcrl
or
inc
je
push
shll
mov
push
mov
jmp
mov
cs
xor
sub
test
jl
dec
dec
in
and
and
rcrb
fcmovnu
les
cmp
mov
push
xchg
sahf
adc
imul
jbe
lock
jb
scas
mov
xchg
push
mov
pop
mov
fmuls
addr16
push
lock
sub
jl
fstpl
scas
dec
addr16
and
int
jmp
cmp
ret
adc
xchg
out
xchg
repz
popf
mov
movsl
push
pop
data16
lret
push
test
add
shl
adcl
pop
jo
arpl
mov
loopne
inc
cmp
mov
mov
stos
mov
mov
or
loopne
xor
inc
out
sti
jge
xchg
mov
js
jmp
and
and
mov
mov
in
or
jg
pop
xchg
jl
lds
movsb
push
jmp
jne
inc
insb
cmp
int3
outsl
lods
lcall
aam
mov
cmp
mov
jmp
ret
push
fs
arpl
adc
ljmp
xchg
add
incl
arpl
mov
shll
orb
mov
add
dec
jnp
and
hlt
popf
divb
nop
insl
sbbb
enter
aaa
sbb
nop
int
out
jo
cmp
jecxz
inc
inc
mov
inc
jnp
sub
and
or
pop
add
in
pushl
scas
push
ror
inc
repnz
in
inc
ret
add
xor
pop
fsubrl
je
add
gs
sbbb
and
cwtl
inc
mov
add
add
imul
jne
inc
jbe
outsb
je
outsb
push
filds
jmp
inc
js
gs
ret
insb
je
fistpll
push
gs
push
imul
gs
in
lahf
sub
popa
fs
or
outsl
data16
xor
push
je
ja
adc
dec
insl
int3
add
cmc
push
sbb
mov
push
repz
pushl
addr16
outsl
insl
insl
adc
xor
fidivs
je
cld
pop
ja
jo
mull
insb
jae
jb
popa
je
dec
inc
fsave
int3
push
loop
imul
mov
jp
jne
imul
scas
inc
in
push
jo
push
mov
imul
inc
inc
adc
ds
adc
js
clc
inc
push
xor
jne
dec
inc
dec
inc
daa
mov
jnp
mov
insl
fstpl
arpl
inc
jge
and
or
gs
jo
cltd
insl
xor
gs
popa
mov
adc
mov
sub
outsl
ja
inc
mov
rcr
inc
mov
outsw
sbb
pop
push
je
dec
and
jnp
jae
push
outsb
data16
pop
jnp
dec
sub
arpl
fs
test
gs
dec
aam
movnti
insb
popa
pop
dec
pop
fwait
sbb
inc
and
xor
scas
add
punpcklbw
sbb
in
mov
mov
mov
jnp
insb
shll
mov
inc
xor
inc
je
pushw
inc
mov
push
push
lods
imul
sub
pop
inc
jne
insb
loope
mov
inc
addr16
dec
cmp
fsts
jb
push
sub
dec
dec
push
popa
push
push
pop
in
hlt
push
inc
sub
dec
orb
sarb
mov
sub
mov
dec
jbe
movsb
inc
jne
fs
js
fldl
inc
cli
jo
popa
stos
jne
push
in
jl
push
repnz
movsl
clc
mov
aam
mov
je
or
inc
inc
fidivrl
xor
push
insb
ficompl
test
imul
add
and
add
add
inc
jmp
pusha
inc
outsb
mov
push
jne
and
xor
inc
inc
mov
fcmovbe
push
xchg
and
sub
inc
mov
outsl
dec
and
lods
jns
test
push
sbb
lods
mov
sbb
add
outsl
or
hlt
bound
push
or
pop
js
dec
jne
push
ja
push
pop
xchg
cs
ljmp
gs
cld
imul
cmp
push
stos
enter
hlt
or
jo
scas
sbb
popa
jns
je
mov
or
mov
dec
lret
loop
mov
jns
dec
mov
arpl
insl
outsl
mov
cmp
outsl
js
lret
jns
or
mov
push
sub
insl
movsl
fs
jo
jae
stos
or
fdiv
mov
aaa
jl
jne
pop
push
inc
lea
dec
pop
in
inc
dec
pop
inc
inc
js
loop
mov
insb
imul
popa
xorl
fistl
popa
xchg
cmpsl
test
ja
fs
les
ds
jae
xor
arpl
mov
insl
notb
je
enter
jns
cmp
cmc
aad
adc
adc
inc
add
xor
sub
jmp
sub
dec
mov
aam
xchg
cmp
pusha
mov
inc
add
cmp
pop
ss
push
sbb
cmp
jne
lds
jo
push
mov
outsb
sbb
mov
fidivrl
lds
xchg
mov
dec
dec
outsb
adc
xchg
arpl
test
dec
gs
lahf
fimuls
sbb
cmp
data16
test
jns
jb
pop
and
mov
sbb
rcrb
push
cld
push
outsl
data16
bound
in
mov
aam
push
add
xor
lock
push
insl
scas
test
xor
pop
jno
xchg
out
lret
popa
jae
sti
xor
mov
push
outsb
jb
pop
sub
dec
mov
pop
gs
sub
push
push
cmp
shlb
lret
sub
push
outsl
jbe
pop
out
dec
scas
int3
inc
push
into
outsl
pushf
mov
jecxz
pop
int3
add
xor
inc
pushf
push
mov
cld
xor
push
or
jl
sub
inc
inc
inc
jne
push
and
mov
jns
clc
aas
pusha
arpl
push
dec
mov
mov
jge
pop
imul
popf
push
test
ret
cmc
xchg
and
xchg
incl
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
mov
inc
add
rolb
