call
jmp
nop
nop
nop
nop
nop
nop
push
mov
mov
xor
mov
mov
mov
pop
ret
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
push
call
xor
add
mov
mov
mov
ret
call
jmp
nop
nop
nop
nop
nop
nop
push
mov
mov
xor
mov
mov
mov
pop
ret
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
push
call
xor
add
mov
mov
mov
ret
call
jmp
nop
nop
nop
nop
nop
nop
push
mov
mov
xor
mov
mov
mov
pop
ret
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
push
call
xor
add
mov
mov
mov
ret
call
jmp
nop
nop
nop
nop
nop
nop
push
mov
mov
xor
mov
mov
mov
pop
ret
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
push
mov
push
mov
cmp
je
lea
call
mov
call
add
cmp
jne
mov
push
call
add
xor
mov
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
movb
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
push
movl
mov
mov
cmp
mov
je
mov
add
mov
add
cmp
jne
mov
mov
mov
cmp
mov
je
mov
add
mov
add
cmp
jne
mov
mov
mov
cmp
mov
je
mov
add
mov
add
cmp
jne
mov
lea
call
lea
call
add
lea
call
mov
call
pop
pop
ret
nop
nop
sub
push
mov
push
push
push
mov
test
je
mov
mov
mov
sub
sar
jne
pop
pop
pop
xor
pop
add
ret
test
movl
ja
lea
lea
push
push
call
lea
push
lea
call
lea
push
push
movl
call
mov
mov
cmp
jle
lea
test
je
cmp
jbe
mov
mov
cmp
jge
mov
mov
inc
add
cmp
jge
jmp
lea
lea
push
push
call
lea
push
lea
call
lea
push
push
movl
call
mov
mov
mov
lea
lea
cmp
je
sub
mov
mov
add
cmp
jne
mov
pop
add
pop
mov
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
lea
mov
push
mov
movl
call
mov
lea
xor
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jae
mov
cmp
jne
cmp
mov
jbe
call
mov
call
mov
sub
cmp
jae
mov
test
jbe
mov
sub
add
push
lea
push
push
call
mov
add
sub
mov
push
push
call
test
je
push
mov
call
mov
call
movl
mov
pop
pop
pop
pop
add
ret
cmp
jbe
cmp
jne
mov
cmp
jne
mov
cmpb
jae
push
mov
call
mov
test
jne
mov
mov
mov
mov
mov
mov
mov
inc
mov
movl
mov
pop
pop
pop
pop
add
ret
push
push
mov
call
test
je
mov
test
jne
mov
mov
mov
mov
shr
rep
mov
mov
and
rep
mov
pop
mov
pop
movb
pop
movl
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
jne
mov
ret
nop
nop
nop
sub
push
push
mov
push
push
lea
call
mov
lea
mov
mov
mov
movl
mov
movl
cmp
movl
jae
mov
lea
cmp
jne
test
jbe
call
lea
call
mov
sub
cmp
jae
mov
test
jbe
mov
sub
push
lea
lea
push
push
call
mov
add
sub
lea
push
push
call
test
je
push
lea
call
lea
call
jmp
test
jbe
cmp
jne
mov
test
jne
mov
cmpb
jae
push
lea
call
mov
test
jne
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
push
push
lea
call
test
je
mov
mov
test
je
mov
mov
mov
mov
push
shr
rep
mov
and
rep
lea
call
lea
push
push
movl
call
pop
pop
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
movl
mov
test
je
lea
mov
test
je
cmp
je
dec
mov
jmp
push
call
add
mov
movl
movl
movl
call
pop
ret
nop
nop
nop
nop
nop
push
mov
movl
mov
test
je
lea
mov
test
je
cmp
je
dec
mov
jmp
push
call
add
mov
movl
movl
movl
call
testb
je
push
call
add
mov
pop
ret
nop
push
push
push
push
mov
push
mov
push
mov
call
mov
add
lea
xor
mov
mov
mov
mov
mov
mov
mov
cmp
jae
mov
cmp
jne
cmp
mov
jbe
call
mov
call
mov
sub
cmp
jae
mov
test
jbe
mov
sub
add
push
lea
push
push
call
mov
add
sub
mov
push
push
call
test
je
push
mov
call
mov
call
movl
mov
pop
pop
pop
pop
pop
ret
cmp
jbe
cmp
jne
mov
cmp
jne
mov
cmpb
jae
push
mov
call
mov
test
jne
mov
mov
mov
mov
mov
mov
mov
inc
mov
movl
mov
pop
pop
pop
pop
pop
ret
push
push
mov
call
test
je
mov
test
jne
mov
mov
mov
mov
shr
rep
mov
mov
and
rep
mov
pop
mov
pop
movb
pop
movl
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
push
lea
call
mov
lea
mov
mov
mov
movl
mov
movl
cmp
movl
jae
mov
lea
cmp
jne
test
jbe
call
lea
call
mov
sub
cmp
jae
mov
test
jbe
mov
sub
push
lea
lea
push
push
call
mov
add
sub
lea
push
push
call
test
je
push
lea
call
push
push
lea
call
jmp
test
jbe
cmp
jne
mov
test
jne
mov
cmpb
jae
push
lea
call
mov
test
jne
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
push
push
lea
call
test
je
mov
mov
test
je
mov
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
movb
lea
push
push
movl
call
pop
pop
pop
nop
nop
nop
push
push
push
push
mov
push
mov
push
mov
call
mov
add
lea
xor
mov
mov
mov
mov
mov
mov
mov
cmp
jae
mov
cmp
jne
cmp
mov
jbe
call
mov
call
mov
sub
cmp
jae
mov
test
jbe
mov
sub
add
push
lea
push
push
call
mov
add
sub
mov
push
push
call
test
je
push
mov
call
mov
call
movl
mov
pop
pop
pop
pop
pop
ret
cmp
jbe
cmp
jne
mov
cmp
jne
mov
cmpb
jae
push
mov
call
mov
test
jne
mov
mov
mov
mov
mov
mov
mov
inc
mov
movl
mov
pop
pop
pop
pop
pop
ret
push
push
mov
call
test
je
mov
test
jne
mov
mov
mov
mov
push
shr
rep
mov
and
rep
mov
call
mov
pop
pop
pop
movl
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
mov
push
call
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
jmp
xor
mov
cmp
jne
mov
jmp
mov
sub
sar
mov
mov
xor
cmp
mov
jle
cmp
je
mov
sub
sar
cmp
jbe
mov
mov
mov
mov
cmp
jne
mov
jmp
cmp
jne
mov
cmp
mov
je
mov
push
push
call
test
je
mov
mov
sub
mov
sar
cmp
jae
mov
cmp
je
sub
sar
cmp
jbe
mov
call
mov
jmp
mov
mov
call
add
mov
jns
xor
lea
push
call
add
mov
mov
mov
push
push
push
call
lea
mov
push
push
push
mov
call
mov
add
push
push
push
mov
call
mov
mov
push
push
mov
call
mov
push
call
mov
add
lea
mov
mov
call
lea
mov
mov
mov
xor
jmp
mov
sub
sar
cmp
jae
lea
push
push
push
mov
call
mov
lea
mov
push
sub
mov
sar
sub
mov
push
push
call
mov
cmp
je
mov
mov
add
cmp
jne
jmp
lea
push
push
mov
push
mov
call
mov
lea
cmp
je
mov
sub
sub
cmp
mov
jne
lea
cmp
je
mov
mov
add
cmp
jne
addl
mov
inc
cmp
mov
jge
mov
jmp
mov
push
lea
mov
call
mov
or
xor
repnz
not
dec
push
push
lea
call
lea
lea
push
call
lea
push
push
movl
call
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
mov
test
push
jne
xor
jmp
mov
sub
sar
xor
test
jle
mov
mov
test
je
mov
sub
sar
cmp
jbe
mov
mov
cmp
jne
cmp
je
cmp
jne
cmp
je
inc
cmp
jge
jmp
mov
push
mov
lea
call
mov
or
xor
repnz
not
dec
push
push
lea
call
lea
lea
push
call
lea
push
push
movl
call
mov
pop
pop
pop
pop
add
ret
pop
pop
pop
or
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
mov
mov
test
jne
xor
jmp
mov
sub
sar
xor
test
jle
mov
mov
test
je
mov
sub
sar
cmp
jbe
cmp
je
inc
add
cmp
jge
jmp
mov
push
lea
mov
call
mov
or
xor
push
repnz
not
dec
mov
lea
push
call
test
je
mov
mov
mov
mov
shr
rep
mov
push
and
rep
lea
call
lea
lea
push
movl
call
lea
push
lea
call
lea
push
push
movl
call
pop
pop
pop
mov
pop
add
ret
pop
pop
pop
xor
pop
add
ret
nop
nop
sub
push
mov
push
push
mov
test
jne
xor
jmp
mov
sub
sar
xor
test
jle
mov
test
je
mov
sub
sar
cmp
jbe
mov
mov
push
mov
push
call
add
test
je
inc
cmp
jge
jmp
mov
push
lea
mov
call
mov
or
xor
repnz
not
dec
push
push
lea
call
lea
lea
push
call
lea
push
push
movl
call
lea
call
mov
pop
pop
pop
add
ret
lea
call
pop
pop
or
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
mov
push
mov
mov
xor
cmp
je
mov
sub
sar
je
push
mov
call
mov
mov
push
call
mov
mov
cmp
jne
mov
jmp
mov
sub
sar
mov
mov
test
jle
mov
test
je
mov
sub
sar
cmp
jbe
mov
mov
push
push
call
mov
mov
add
cmp
jge
mov
mov
mov
inc
cmp
jl
mov
test
je
mov
push
mov
call
xor
push
mov
mov
mov
call
add
jmp
mov
push
lea
mov
call
mov
or
xor
repnz
not
dec
push
push
lea
call
lea
push
lea
call
lea
push
push
movl
call
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
push
push
push
push
mov
mov
push
push
mov
call
mov
add
mov
push
push
mov
call
mov
mov
push
push
push
mov
call
add
mov
mov
mov
push
push
call
mov
mov
push
push
push
mov
call
mov
add
mov
mov
push
push
call
mov
lea
mov
mov
mov
call
mov
push
mov
mov
mov
mov
push
lea
push
push
call
add
lea
push
push
push
lea
call
test
jne
push
push
push
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
xor
pop
pop
pop
pop
add
ret
lea
lea
push
call
test
je
mov
mov
test
je
push
lea
call
cmp
jg
push
lea
call
mov
lea
push
push
lea
call
push
lea
call
lea
call
lea
lea
push
call
push
lea
mov
push
call
push
mov
call
mov
cmp
jne
push
call
mov
add
test
je
push
lea
mov
push
call
mov
call
mov
test
jne
xor
jmp
mov
sub
sar
lea
mov
lea
mov
sub
dec
push
push
lea
call
push
lea
call
lea
call
push
lea
call
lea
push
push
lea
call
push
lea
call
lea
call
push
lea
call
mov
lea
push
push
lea
call
push
lea
call
lea
call
mov
push
call
mov
mov
add
lea
mov
sub
dec
push
lea
push
call
push
lea
call
lea
call
mov
push
call
add
lea
mov
push
call
mov
mov
sub
lea
sub
push
push
lea
call
push
lea
call
lea
call
push
lea
call
mov
lea
push
push
lea
call
push
lea
call
lea
call
lea
lea
push
call
push
lea
mov
push
call
push
mov
call
mov
cmp
jne
push
call
mov
add
test
je
push
lea
mov
push
call
mov
call
mov
test
jne
xor
jmp
mov
sub
sar
dec
mov
lea
mov
sub
dec
push
push
lea
call
push
lea
call
lea
call
push
lea
call
mov
mov
lea
mov
sub
sub
push
lea
push
call
push
lea
call
lea
call
lea
push
push
lea
call
push
lea
call
lea
call
push
lea
call
mov
lea
push
push
lea
call
push
lea
call
lea
call
mov
push
call
mov
mov
add
lea
mov
lea
sub
dec
push
push
call
push
lea
call
lea
call
mov
push
call
push
mov
call
add
test
je
mov
xor
cmp
je
mov
sub
sar
cmp
jbe
cmp
jbe
mov
mov
lea
mov
mov
movl
mov
mov
push
push
push
mov
call
jmp
xor
mov
push
push
mov
mov
mov
call
add
test
je
push
lea
call
cmp
jle
dec
lea
push
push
lea
movl
call
push
lea
call
lea
call
jmp
movl
push
lea
call
mov
lea
mov
sub
dec
push
push
lea
call
push
lea
call
lea
call
push
lea
call
mov
lea
push
push
lea
call
push
lea
call
lea
call
mov
push
call
mov
mov
add
lea
mov
sub
dec
push
lea
push
call
push
lea
call
lea
call
mov
push
call
add
mov
mov
mov
sub
mov
imul
sar
mov
mov
shr
add
cmp
jae
mov
test
je
mov
mov
sub
imul
sar
mov
shr
add
cmp
mov
ja
mov
test
jne
xor
jmp
sub
mov
imul
sar
mov
shr
add
add
test
mov
jge
xor
lea
shl
push
call
add
mov
mov
mov
push
push
push
call
lea
mov
push
push
push
mov
call
mov
add
push
push
push
mov
call
mov
mov
push
push
mov
call
mov
push
call
lea
add
lea
mov
mov
call
inc
mov
mov
lea
lea
mov
jmp
xor
cmp
jae
lea
push
push
push
mov
call
mov
lea
push
mov
sub
mov
imul
sar
mov
mov
shr
add
sub
push
push
mov
call
mov
lea
push
push
push
call
add
jmp
push
push
add
push
mov
call
mov
push
add
push
push
call
lea
lea
push
push
push
call
add
addl
lea
lea
push
call
test
je
jmp
mov
push
mov
lea
call
mov
or
xor
repnz
not
dec
push
push
lea
call
lea
lea
push
call
lea
push
push
call
mov
push
mov
lea
call
mov
or
xor
repnz
not
dec
push
push
lea
call
lea
lea
push
call
lea
push
push
call
lea
call
mov
mov
test
jne
xor
jmp
mov
sub
sar
mov
mov
test
jne
xor
jmp
mov
sub
sar
cmp
ja
cmp
mov
je
mov
add
mov
add
cmp
jne
mov
mov
mov
test
jne
xor
lea
mov
jmp
sub
sar
lea
mov
jmp
test
jne
xor
jmp
mov
sub
sar
test
jne
xor
jmp
mov
sub
sar
cmp
ja
test
jne
xor
jmp
mov
sub
sar
lea
mov
cmp
je
mov
add
mov
add
cmp
jne
mov
mov
mov
mov
cmp
mov
mov
je
push
push
call
add
add
add
cmp
jne
mov
mov
mov
test
jne
xor
lea
mov
jmp
sub
sar
lea
mov
jmp
push
call
mov
add
test
jne
xor
jmp
mov
sub
sar
test
jge
xor
shl
push
call
mov
mov
add
cmp
mov
je
test
je
mov
mov
add
add
cmp
jne
mov
mov
mov
movb
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
pop
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
lea
mov
push
mov
movl
call
mov
lea
xor
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jae
mov
cmp
jne
cmp
mov
jbe
call
mov
call
mov
sub
cmp
jae
mov
test
jbe
mov
sub
add
push
lea
push
push
call
mov
add
sub
mov
push
push
call
test
je
push
mov
call
mov
call
movl
mov
pop
pop
pop
pop
add
ret
cmp
jbe
cmp
jne
mov
cmp
jne
mov
cmpb
jae
push
mov
call
mov
test
jne
mov
mov
mov
mov
mov
mov
mov
inc
mov
movl
mov
pop
pop
pop
pop
add
ret
push
push
mov
call
test
je
mov
test
jne
mov
mov
mov
mov
push
shr
rep
mov
and
rep
mov
call
mov
pop
pop
pop
movl
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
lea
mov
push
mov
call
movl
movl
mov
mov
sub
mov
sar
cmp
mov
jae
mov
test
je
mov
sub
sar
cmp
ja
mov
test
jne
xor
jmp
sub
sar
add
test
mov
jge
xor
push
lea
push
push
call
mov
add
mov
cmp
mov
je
push
push
call
add
add
add
cmp
jne
lea
mov
push
push
push
call
mov
add
push
push
push
mov
call
mov
mov
push
push
mov
call
mov
push
call
mov
mov
add
lea
test
mov
jne
xor
jmp
mov
sub
sar
mov
lea
mov
pop
mov
pop
jmp
xor
cmp
jae
lea
push
push
push
mov
call
mov
lea
mov
push
sub
mov
sar
sub
mov
push
push
call
mov
cmp
je
mov
mov
add
cmp
jne
jmp
push
push
add
mov
push
call
mov
mov
add
cmp
je
mov
sub
sub
cmp
mov
jne
lea
mov
cmp
je
mov
mov
add
cmp
jne
addl
lea
call
mov
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
test
push
push
push
mov
jne
xor
jmp
mov
sub
sar
mov
test
jne
xor
jmp
mov
sub
sar
cmp
ja
cmp
mov
je
mov
add
mov
add
cmp
jne
mov
push
push
mov
call
mov
call
mov
lea
mov
jmp
mov
call
mov
mov
call
cmp
ja
mov
mov
call
mov
mov
lea
push
push
push
call
mov
mov
add
push
push
push
mov
call
jmp
mov
mov
push
push
mov
call
mov
push
call
add
mov
call
test
jge
xor
lea
push
call
mov
add
mov
push
mov
push
push
mov
call
mov
mov
mov
xor
mov
mov
test
je
mov
sub
sar
cmp
jae
test
je
sub
sar
cmp
jbe
mov
mov
mov
test
je
mov
sub
sar
cmp
jbe
mov
inc
movl
mov
mov
jmp
lea
push
push
lea
call
lea
lea
push
call
lea
push
push
call
mov
push
mov
lea
call
mov
or
xor
repnz
not
dec
push
push
lea
call
lea
lea
push
call
lea
push
push
call
pop
pop
pop
add
ret
sub
push
push
push
push
mov
call
mov
xor
lea
rep
push
lea
mov
push
call
push
mov
call
mov
cmp
je
push
lea
mov
push
call
push
mov
call
mov
cmp
jne
lea
call
lea
call
xor
pop
pop
pop
pop
add
ret
mov
test
je
mov
sub
sar
cmp
ja
lea
lea
push
push
call
lea
lea
push
call
lea
push
push
call
mov
mov
push
movl
call
mov
call
push
call
mov
test
je
mov
sub
sar
cmp
ja
lea
lea
push
push
call
lea
lea
push
call
lea
push
push
call
mov
push
mov
call
mov
push
lea
push
push
mov
call
mov
add
push
call
mov
mov
mov
mov
test
je
mov
sub
sar
cmp
ja
mov
push
lea
mov
call
mov
or
xor
repnz
not
dec
push
push
lea
call
lea
lea
push
call
lea
push
push
call
mov
test
je
push
lea
call
mov
test
je
push
lea
call
push
call
push
lea
mov
push
call
push
lea
mov
push
call
lea
push
mov
call
lea
lea
push
call
lea
lea
push
call
push
call
mov
mov
mov
push
mov
push
push
push
lea
push
push
call
mov
add
push
call
lea
call
lea
call
jmp
push
call
lea
call
lea
call
lea
call
lea
call
lea
call
pop
mov
pop
pop
pop
add
ret
nop
nop
nop
nop
sub
mov
push
push
xor
push
mov
mov
movl
xor
mov
test
je
mov
mov
sub
imul
sar
mov
shr
add
cmp
jbe
ja
mov
call
mov
mov
mov
push
push
call
add
test
jne
mov
test
je
mov
mov
sub
imul
sar
mov
shr
add
cmp
jbe
mov
mov
push
push
call
add
test
je
inc
add
jmp
lea
lea
push
push
call
lea
lea
push
call
lea
push
push
call
mov
test
je
mov
mov
sub
imul
sar
mov
shr
add
cmp
ja
lea
push
push
lea
call
lea
lea
push
call
lea
push
push
call
lea
lea
lea
push
call
mov
lea
mov
mov
push
lea
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
call
mov
mov
lea
mov
push
lea
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
add
ret
nop
nop
nop
sub
push
mov
push
push
push
mov
push
mov
lea
mov
push
mov
mov
mov
lea
call
push
mov
push
call
lea
mov
push
call
mov
lea
push
call
mov
lea
mov
mov
push
lea
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
call
lea
call
mov
test
jne
push
mov
push
call
push
mov
push
call
lea
mov
push
call
mov
lea
push
call
mov
lea
mov
mov
push
lea
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
call
lea
call
mov
lea
push
lea
mov
call
lea
lea
push
call
lea
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
push
mov
mov
call
mov
mov
lea
mov
push
lea
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
call
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
pop
add
ret
mov
lea
push
mov
call
mov
mov
lea
mov
push
lea
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
lea
call
mov
pop
pop
pop
pop
add
ret
push
mov
lea
call
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
push
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
jae
mov
cmp
jne
cmp
mov
jbe
call
mov
call
mov
sub
cmp
jae
mov
cmp
jbe
mov
sub
add
push
lea
push
push
call
mov
add
sub
mov
push
push
call
test
je
push
mov
call
mov
call
pop
pop
mov
pop
pop
ret
cmp
jbe
cmp
jne
mov
cmp
jne
mov
cmpb
jae
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
inc
pop
mov
pop
mov
pop
pop
ret
push
push
mov
call
test
je
mov
cmp
jne
mov
mov
mov
mov
push
shr
rep
mov
and
rep
mov
call
pop
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
mov
push
push
mov
mov
push
push
mov
mov
xor
or
xor
mov
mov
mov
repnz
not
dec
mov
cmp
jbe
call
mov
cmp
je
mov
test
je
cmp
je
cmp
jne
dec
push
mov
mov
call
pop
mov
pop
pop
pop
ret
cmp
jne
push
mov
call
pop
mov
pop
pop
pop
ret
mov
cmp
ja
cmp
jae
push
mov
call
push
mov
call
mov
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
pop
pop
movb
mov
pop
pop
ret
nop
nop
nop
mov
test
jne
xor
ret
mov
sub
sar
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
jne
ret
mov
sub
mov
imul
sar
mov
shr
add
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
test
mov
je
mov
test
je
lea
mov
test
je
cmp
je
dec
mov
jmp
push
call
add
movl
movl
movl
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
jne
xor
ret
mov
sub
sar
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
cmp
je
mov
push
test
je
mov
mov
add
add
cmp
jne
pop
ret
mov
ret
nop
nop
push
mov
push
mov
cmp
je
push
lea
mov
call
mov
call
add
add
cmp
jne
pop
pop
pop
ret
sub
mov
push
push
mov
mov
or
xor
push
repnz
not
dec
movl
mov
lea
push
movl
movl
call
test
je
mov
mov
mov
push
mov
shr
rep
mov
and
rep
mov
mov
pop
movb
lea
movl
push
lea
call
mov
push
lea
mov
call
mov
lea
push
push
push
lea
call
lea
push
push
movl
call
pop
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
push
mov
mov
cmp
jae
call
mov
mov
mov
sub
cmp
jae
mov
cmp
jne
mov
mov
add
cmp
jae
call
mov
call
mov
sub
cmp
jae
mov
test
jbe
mov
sub
add
push
lea
push
push
call
mov
add
sub
mov
push
push
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
cmp
jae
mov
test
jbe
mov
sub
push
lea
push
push
call
mov
add
sub
mov
push
push
call
test
je
push
mov
call
pop
mov
pop
pop
pop
ret
xor
cmp
jbe
cmp
jne
mov
cmp
jne
mov
cmpb
jae
mov
cmp
je
lea
mov
test
je
cmp
je
dec
mov
jmp
push
call
add
xor
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
inc
pop
mov
mov
pop
pop
pop
ret
mov
call
cmp
jae
call
mov
test
je
mov
test
je
cmp
je
test
jne
dec
push
mov
mov
call
pop
mov
pop
pop
pop
ret
test
jne
push
mov
call
pop
mov
pop
pop
pop
ret
mov
cmp
ja
cmp
jae
push
mov
call
push
mov
call
mov
test
jne
mov
mov
mov
add
mov
shr
rep
mov
and
rep
mov
mov
movb
pop
mov
pop
pop
pop
ret
push
mov
push
cmp
mov
jbe
call
mov
xor
cmp
je
mov
test
je
cmp
je
cmp
jne
dec
mov
mov
mov
mov
mov
pop
pop
ret
cmp
jne
push
mov
call
mov
pop
pop
ret
mov
cmp
ja
cmp
jae
push
mov
call
push
mov
call
mov
push
mov
mov
push
mov
shr
rep
mov
mov
and
rep
mov
pop
mov
pop
movb
pop
pop
ret
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
cmp
jae
call
mov
xor
cmp
je
mov
test
je
cmp
je
dec
mov
mov
or
xor
mov
mov
mov
repnz
not
dec
push
mov
mov
push
call
test
je
mov
mov
mov
push
shr
rep
mov
and
rep
mov
call
xor
mov
mov
mov
sub
cmp
jae
mov
cmp
jbe
mov
mov
add
sub
push
lea
push
push
call
mov
add
sub
cmp
jbe
call
mov
cmp
je
mov
test
je
cmp
je
cmp
jne
dec
push
mov
mov
call
pop
mov
pop
pop
pop
ret
cmp
jne
cmp
je
pop
mov
mov
pop
pop
movb
pop
ret
cmp
jae
push
mov
call
mov
mov
movb
pop
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
movb
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
cmp
mov
jbe
call
mov
xor
cmp
je
mov
cmp
je
cmp
je
cmp
jne
dec
pop
mov
mov
mov
mov
pop
xor
pop
ret
mov
cmp
jne
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
dec
pop
mov
mov
mov
mov
pop
xor
pop
ret
push
call
add
mov
mov
mov
pop
pop
xor
pop
ret
cmp
je
mov
mov
pop
pop
xor
pop
ret
cmp
je
mov
cmp
ja
cmp
jae
cmp
je
lea
mov
cmp
je
cmp
je
dec
push
mov
mov
mov
mov
mov
call
pop
pop
mov
pop
ret
push
call
add
push
mov
mov
mov
mov
call
pop
pop
mov
pop
ret
cmp
jae
push
mov
call
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
mov
mov
mov
mov
mov
sub
sar
cmp
jae
mov
test
je
mov
sub
sar
cmp
jb
mov
test
jne
xor
jmp
sub
sar
add
test
mov
jge
xor
lea
push
call
mov
mov
mov
mov
add
cmp
je
test
je
mov
mov
add
add
cmp
jne
test
mov
jbe
mov
mov
test
je
mov
mov
mov
add
dec
jne
mov
lea
cmp
lea
je
mov
sub
sub
add
test
je
mov
mov
add
add
cmp
jne
mov
mov
push
mov
call
mov
mov
add
lea
mov
mov
test
jne
xor
mov
mov
pop
lea
mov
pop
pop
pop
add
ret
mov
mov
sub
pop
sar
add
lea
mov
pop
pop
pop
add
ret
mov
mov
sub
sar
cmp
jae
lea
cmp
lea
je
mov
sub
test
je
mov
mov
mov
add
add
cmp
jne
mov
mov
mov
sub
sar
sub
je
test
je
mov
mov
add
dec
jne
mov
mov
cmp
je
mov
mov
add
cmp
jne
mov
add
mov
pop
pop
pop
pop
add
ret
test
jbe
shl
mov
mov
sub
cmp
je
test
je
mov
mov
add
add
cmp
jne
mov
mov
sub
cmp
je
mov
sub
sub
cmp
mov
jne
lea
mov
cmp
je
mov
mov
mov
add
cmp
jne
add
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
or
mov
cmp
jbe
mov
mov
movl
lea
mov
test
jge
xor
mov
push
call
add
mov
jmp
mov
mov
add
test
jge
xor
push
call
add
mov
mov
ret
mov
mov
movl
mov
test
jbe
cmp
jbe
mov
mov
mov
mov
lea
mov
shr
rep
mov
and
rep
mov
mov
mov
test
je
lea
mov
test
je
cmp
je
dec
mov
jmp
push
call
add
movl
mov
inc
mov
movb
mov
cmp
ja
mov
mov
mov
movb
mov
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
xor
push
push
mov
cmp
je
mov
test
je
cmp
je
dec
mov
mov
mov
or
xor
mov
mov
mov
repnz
not
dec
mov
cmp
jbe
call
xor
mov
cmp
je
mov
test
je
cmp
je
cmp
jne
dec
push
mov
mov
call
pop
pop
pop
pop
ret
cmp
jne
push
mov
call
pop
pop
pop
pop
ret
mov
cmp
ja
cmp
jae
push
mov
call
push
mov
call
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
movb
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
mov
test
jbe
mov
mov
mov
push
test
je
mov
mov
add
dec
jne
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
cmp
je
push
mov
test
je
push
mov
call
mov
lea
mov
mov
mov
push
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
cmp
jne
mov
pop
pop
pop
ret
mov
pop
pop
ret
mov
test
jbe
push
push
mov
push
mov
mov
test
je
push
mov
call
mov
lea
mov
mov
mov
push
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
dec
jne
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
cmp
je
mov
push
mov
add
mov
add
cmp
jne
pop
ret
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
cmp
je
push
push
mov
lea
push
mov
call
mov
push
mov
mov
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
cmp
jne
pop
pop
pop
pop
ret
nop
nop
push
mov
push
mov
cmp
je
push
mov
sub
sub
push
mov
call
mov
lea
mov
mov
mov
push
lea
call
mov
cmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
jne
mov
pop
pop
pop
ret
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
test
jne
or
mov
jmp
nop
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
push
mov
or
xor
repnz
not
sub
mov
mov
mov
shr
rep
mov
and
rep
pop
pop
ret
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
movl
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
sub
push
mov
push
mov
push
mov
test
je
test
jne
cmp
jne
mov
test
jne
mov
mov
mov
mov
call
lea
push
push
push
call
lea
lea
push
call
push
lea
call
push
lea
call
mov
mov
push
push
call
add
test
je
push
push
push
push
call
lea
mov
call
lea
call
lea
call
mov
pop
pop
pop
add
ret
push
call
add
test
je
push
mov
call
jmp
xor
push
push
mov
mov
call
mov
push
call
add
lea
call
lea
call
lea
call
mov
mov
push
call
neg
mov
sbb
and
add
push
call
mov
push
push
push
push
call
pop
pop
pop
add
ret
nop
nop
push
push
call
push
push
call
mov
test
jne
mov
push
push
push
push
call
mov
ret
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
mov
push
call
mov
movl
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
lea
push
push
push
call
lea
push
push
call
add
test
je
push
lea
push
call
push
push
call
push
push
call
push
push
call
add
pop
add
ret
nop
nop
nop
nop
push
mov
sub
push
mov
push
push
mov
or
xor
repnz
not
dec
lea
push
call
add
mov
test
je
push
push
push
call
add
movl
mov
mov
mov
mov
cmp
mov
lea
mov
jne
mov
mov
jmp
cmp
jne
add
mov
mov
mov
jmp
cmp
jne
add
mov
mov
mov
jmp
mov
mov
lea
sub
mov
add
mov
lea
push
rep
mov
push
call
add
test
je
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
cmp
jne
mov
jmp
cmp
jne
mov
cmp
jne
mov
push
call
add
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
xor
mov
mov
movl
movl
movl
movl
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
push
mov
mov
mov
lea
shr
lea
and
cmp
mov
jae
incl
mov
mov
shr
add
mov
mov
sub
cmp
jb
mov
push
lea
push
push
call
lea
push
push
call
mov
add
add
cmp
jae
mov
lea
push
push
call
add
add
add
cmp
jb
xor
jmp
xor
mov
sub
add
push
lea
push
push
call
add
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
push
mov
push
push
mov
lea
push
push
call
mov
add
shr
and
mov
cmp
jb
mov
sub
push
push
push
mov
call
lea
push
push
push
mov
call
mov
push
push
push
call
push
push
push
call
add
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
test
jbe
mov
mov
push
or
lea
sub
mov
add
mov
mov
shr
mov
mov
shr
mov
mov
shr
mov
add
lea
cmp
jb
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
test
jbe
mov
mov
sub
mov
mov
inc
dec
jne
pop
ret
nop
nop
mov
test
jbe
mov
push
mov
mov
mov
push
mov
mov
shl
mov
shr
rep
mov
and
rep
pop
pop
ret
nop
sub
mov
push
push
push
mov
push
push
lea
mov
mov
mov
mov
push
push
mov
call
mov
mov
not
mov
and
and
or
mov
add
lea
mov
mov
shr
shl
or
add
mov
and
not
and
or
mov
add
lea
mov
shr
shl
or
add
mov
mov
not
and
and
or
mov
add
mov
lea
mov
shr
shl
or
add
mov
and
not
and
or
mov
add
lea
mov
shl
shr
or
mov
add
mov
mov
not
and
and
mov
or
add
mov
mov
lea
mov
shr
shl
or
add
mov
and
not
and
or
mov
add
lea
mov
shr
shl
or
add
mov
mov
not
and
and
or
mov
add
mov
lea
mov
shr
shl
or
add
mov
and
not
and
or
mov
add
lea
mov
shl
shr
or
mov
add
mov
mov
not
and
and
mov
or
add
mov
mov
lea
mov
shr
shl
or
add
mov
and
not
and
or
mov
add
lea
mov
shr
shl
or
add
mov
not
mov
and
and
or
mov
add
mov
lea
mov
shr
shl
or
add
mov
and
not
and
or
mov
add
lea
mov
shl
shr
or
mov
add
mov
mov
not
and
and
mov
or
add
mov
mov
lea
mov
shr
shl
or
add
mov
and
not
and
or
mov
add
lea
mov
shr
shl
or
add
mov
mov
not
and
and
or
mov
add
mov
lea
mov
shr
shl
or
add
mov
and
not
mov
and
or
mov
add
mov
lea
mov
shl
shr
or
mov
add
mov
and
mov
and
mov
or
add
mov
lea
mov
mov
shr
shl
or
mov
add
and
and
or
mov
add
mov
not
lea
and
mov
shr
shl
or
add
mov
and
mov
or
add
lea
mov
shr
shl
or
mov
add
not
mov
and
and
or
mov
add
mov
lea
mov
shl
shr
or
mov
add
mov
mov
mov
not
and
and
mov
or
add
mov
lea
mov
shr
shl
or
mov
add
not
mov
and
and
or
mov
add
mov
not
lea
and
mov
shr
shl
or
add
mov
and
mov
or
add
lea
mov
shr
shl
or
mov
add
not
mov
and
and
or
mov
add
mov
lea
mov
shl
shr
or
mov
add
mov
mov
mov
not
and
and
mov
or
add
mov
mov
lea
mov
shr
shl
or
mov
add
not
and
and
or
mov
add
mov
not
lea
and
mov
shr
shl
or
add
mov
and
mov
or
add
lea
mov
shr
shl
or
mov
add
not
mov
and
and
or
mov
add
mov
lea
mov
shl
shr
or
mov
add
mov
mov
mov
not
and
and
mov
or
add
mov
mov
lea
mov
shr
shl
or
mov
add
not
and
and
or
mov
add
mov
not
lea
and
mov
shr
shl
or
add
mov
and
mov
or
add
lea
mov
shr
shl
or
mov
add
not
mov
and
and
or
mov
add
mov
lea
mov
shl
shr
or
add
mov
mov
xor
xor
add
mov
lea
mov
shr
shl
or
mov
add
xor
xor
add
mov
lea
mov
shr
shl
or
add
mov
xor
xor
add
mov
lea
mov
shr
shl
or
mov
add
xor
mov
xor
add
mov
lea
mov
shl
shr
or
mov
add
xor
add
mov
lea
mov
shr
shl
or
mov
add
xor
xor
add
mov
lea
mov
shr
shl
or
add
mov
xor
xor
add
lea
mov
shr
shl
or
mov
add
xor
mov
xor
add
lea
mov
shl
shr
or
mov
add
xor
add
mov
lea
mov
shr
shl
or
mov
add
xor
xor
add
mov
lea
mov
shr
shl
or
add
mov
xor
xor
add
lea
mov
shr
shl
or
mov
add
xor
mov
xor
add
lea
mov
shl
shr
or
mov
add
xor
add
lea
mov
shr
shl
or
mov
add
xor
xor
add
lea
mov
shr
shl
or
add
mov
xor
xor
add
lea
mov
shr
shl
or
mov
add
xor
xor
add
lea
mov
shl
shr
or
mov
add
not
or
xor
add
lea
mov
shr
shl
or
mov
add
not
or
xor
add
lea
mov
shr
shl
or
mov
add
not
or
xor
add
lea
mov
shr
shl
or
mov
add
not
or
xor
add
lea
mov
shl
shr
or
mov
add
not
or
xor
add
lea
mov
shr
shl
or
mov
add
not
or
xor
add
lea
mov
shr
shl
or
mov
add
not
or
xor
add
lea
mov
shr
shl
or
mov
add
not
or
xor
add
lea
mov
shl
shr
or
mov
add
not
or
xor
add
lea
mov
shr
shl
or
mov
add
not
or
xor
add
lea
mov
shr
shl
or
mov
add
not
or
xor
add
lea
mov
shr
shl
or
mov
add
not
or
xor
add
lea
mov
shl
shr
or
mov
add
not
or
xor
add
lea
mov
shr
shl
or
mov
add
not
or
xor
add
lea
mov
shr
shl
or
mov
add
not
or
push
xor
push
add
lea
mov
shr
shl
or
mov
add
not
or
xor
add
mov
add
lea
mov
add
mov
shl
shr
or
mov
add
mov
add
add
mov
lea
push
mov
mov
mov
call
add
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
test
jbe
mov
push
mov
push
mov
lea
sub
xor
xor
mov
mov
mov
add
shl
or
xor
mov
add
shl
or
mov
lea
cmp
jb
pop
pop
pop
ret
nop
nop
nop
nop
sub
xor
push
mov
mov
mov
lea
mov
push
mov
call
mov
mov
add
lea
push
push
push
mov
call
lea
lea
push
push
mov
call
mov
lea
push
push
push
mov
call
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
xor
mov
xor
lea
mov
mov
rep
stos
stos
xor
cmp
mov
mov
mov
mov
jle
mov
xor
lea
mov
push
push
push
call
lea
or
xor
add
repnz
not
sub
lea
mov
mov
mov
or
repnz
mov
dec
shr
rep
mov
and
inc
cmp
rep
jl
lea
or
xor
lea
repnz
mov
not
dec
mov
shr
rep
mov
and
rep
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
push
push
push
mov
mov
mov
xor
mov
push
push
mov
mov
mov
call
lea
mov
call
cmp
jne
mov
xor
mov
mov
mov
mov
mov
inc
mov
lea
call
cmp
je
push
call
add
mov
push
push
mov
call
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
call
mov
push
mov
lea
push
push
mov
call
mov
mov
cmp
mov
mov
je
mov
cmp
jne
cmp
jne
mov
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
je
lea
mov
call
lea
push
push
mov
call
mov
cmp
jne
xor
mov
mov
mov
shl
push
call
add
mov
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
mov
push
mov
lea
push
push
mov
call
mov
lea
push
mov
push
lea
push
mov
call
mov
xor
cmp
je
push
call
add
mov
mov
push
lea
mov
push
push
mov
call
mov
push
call
add
mov
mov
lea
xor
call
mov
dec
mov
jne
mov
mov
lea
call
cmp
je
push
call
add
mov
mov
cmp
mov
mov
je
mov
cmp
jne
cmp
jne
mov
push
mov
call
mov
mov
lea
mov
mov
mov
push
mov
mov
mov
mov
call
jmp
cmp
je
lea
push
push
lea
call
mov
lea
push
push
mov
call
cmp
jne
mov
push
call
add
mov
mov
lea
xor
call
mov
dec
mov
jne
mov
mov
lea
call
cmp
je
push
call
add
pop
pop
pop
add
ret
nop
nop
nop
nop
sub
push
push
push
mov
push
mov
push
mov
lea
push
push
mov
call
mov
lea
push
mov
push
lea
push
mov
call
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
mov
mov
jg
test
jne
mov
mov
shl
mov
shl
push
mov
push
call
add
mov
mov
mov
dec
mov
shl
movl
mov
mov
mov
mov
test
mov
je
mov
mov
sub
cltd
mov
mov
xor
sub
mov
sub
cltd
xor
sub
mov
imul
mov
imul
add
lea
shl
cltd
sub
sar
jmp
mov
mov
sub
cltd
mov
mov
xor
sub
mov
sub
cltd
xor
sub
add
lea
shl
mov
mov
mov
xor
mov
mov
add
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
shl
mov
mov
mov
mov
shl
mov
mov
mov
lea
lea
push
push
mov
call
mov
mov
mov
shl
add
mov
mov
imul
lea
lea
push
add
push
lea
mov
call
push
lea
call
lea
lea
push
push
mov
call
lea
push
mov
call
mov
mov
cmp
je
mov
mov
shl
push
mov
lea
push
mov
mov
call
cmp
je
mov
mov
shl
mov
movl
xor
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
add
mov
add
cmp
mov
jl
mov
add
cmp
jg
mov
cmp
jl
mov
add
cmp
jg
cmp
jne
cmp
je
mov
mov
imul
mov
add
cmpb
jg
mov
lea
lea
push
push
lea
call
mov
mov
cmp
je
mov
mov
shl
mov
cmp
jne
mov
mov
inc
mov
mov
cmp
jl
test
jne
movl
mov
shl
mov
shl
push
mov
push
call
add
mov
mov
mov
mov
dec
mov
shl
mov
mov
mov
mov
mov
mov
mov
test
je
mov
mov
sub
cltd
mov
mov
xor
sub
mov
sub
cltd
xor
sub
mov
imul
imul
add
mov
lea
shl
cltd
sub
sar
mov
jmp
sub
cltd
mov
mov
xor
sub
mov
sub
cltd
xor
sub
add
mov
lea
shl
mov
mov
mov
mov
mov
add
mov
mov
mov
lea
mov
add
mov
mov
movl
mov
lea
mov
mov
push
mov
mov
mov
lea
push
mov
call
mov
mov
add
lea
mov
imul
mov
mov
add
mov
lea
push
push
jmp
mov
shl
mov
test
jne
mov
mov
mov
mov
mov
add
cmp
jge
lea
mov
push
call
mov
mov
cmp
mov
je
mov
mov
shl
cmp
je
lea
call
mov
mov
cmp
jne
jmp
push
lea
push
mov
call
mov
mov
mov
mov
mov
add
mov
mov
mov
lea
mov
add
mov
mov
mov
mov
mov
movl
mov
mov
mov
shl
mov
mov
mov
mov
shl
mov
mov
lea
lea
push
mov
call
lea
lea
push
push
mov
call
mov
mov
mov
shl
add
mov
imul
mov
lea
add
lea
mov
push
push
lea
call
push
lea
call
lea
lea
push
push
lea
call
mov
add
cmp
mov
jl
jmp
pop
pop
pop
xor
pop
add
ret
mov
inc
mov
mov
mov
cmp
jl
test
jne
movl
mov
shl
mov
shl
push
mov
push
call
add
mov
mov
mov
dec
mov
shl
mov
mov
mov
mov
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
sub
mov
mov
push
push
mov
mov
push
push
mov
mov
mov
cmp
je
mov
mov
cmp
setl
test
je
mov
jmp
mov
cmp
jne
mov
test
je
push
push
lea
push
push
mov
call
mov
movb
mov
pop
mov
mov
pop
pop
mov
mov
pop
add
ret
mov
test
mov
je
cmp
jne
push
push
lea
push
push
mov
call
mov
movb
mov
pop
mov
mov
pop
pop
mov
mov
pop
add
ret
lea
call
mov
mov
mov
cmp
jge
push
push
lea
push
push
mov
call
mov
mov
movb
mov
pop
pop
mov
pop
mov
mov
pop
add
ret
movb
mov
mov
mov
pop
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
cmp
je
mov
cmp
je
mov
mov
cmp
jne
mov
mov
mov
pop
pop
ret
mov
mov
cmp
jne
mov
mov
mov
cmp
je
mov
cmp
je
mov
mov
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
mov
push
push
push
push
mov
mov
mov
mov
mov
cmp
je
mov
mov
cmp
setl
test
je
mov
jmp
mov
cmp
jne
mov
test
je
push
push
mov
call
mov
mov
mov
mov
mov
add
push
push
call
mov
mov
add
inc
cmp
mov
je
cmp
jne
mov
mov
cmp
jl
mov
mov
mov
cmp
jne
mov
jmp
mov
mov
mov
cmp
jne
mov
mov
mov
jmp
cmp
jne
mov
mov
mov
mov
mov
cmp
je
mov
xor
cmp
jne
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
jne
mov
mov
push
call
mov
movl
mov
mov
mov
mov
mov
push
mov
call
jmp
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
jne
mov
mov
push
call
mov
movl
mov
mov
mov
mov
mov
mov
push
call
mov
cmp
jne
mov
pop
pop
mov
movl
mov
movb
mov
mov
pop
mov
pop
add
ret
mov
test
mov
je
cmp
jne
push
push
lea
push
push
mov
call
mov
mov
movb
pop
mov
mov
pop
pop
mov
pop
add
ret
lea
call
mov
mov
mov
cmp
jge
push
push
lea
push
push
mov
call
mov
mov
movb
mov
pop
pop
mov
pop
mov
pop
add
ret
mov
movb
mov
pop
pop
mov
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
push
mov
lea
call
mov
mov
lea
cmp
mov
mov
jne
mov
jmp
mov
cmp
je
mov
cmp
je
mov
mov
cmp
jne
mov
lea
mov
lea
call
mov
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
jmp
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
mov
mov
cmp
jne
mov
cmp
je
xor
cmp
jne
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
jne
jmp
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
cmp
jne
jmp
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
mov
jmp
mov
cmp
jne
mov
mov
jmp
mov
mov
jmp
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
lea
call
mov
push
call
mov
mov
add
dec
mov
mov
pop
pop
pop
mov
pop
add
ret
nop
nop
nop
push
mov
push
mov
mov
push
mov
test
je
mov
cmp
jne
cmp
jne
mov
mov
cmp
mov
je
mov
mov
push
call
mov
push
call
mov
add
cmp
mov
jne
mov
pop
mov
mov
movl
mov
mov
mov
mov
mov
pop
mov
pop
mov
ret
cmp
je
mov
lea
call
lea
push
push
mov
call
mov
cmp
jne
mov
pop
pop
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
push
mov
mov
cmp
mov
je
push
mov
cmp
jge
mov
jmp
mov
mov
cmp
jne
pop
cmp
mov
je
mov
mov
cmp
jl
lea
pop
pop
mov
mov
mov
pop
ret
lea
mov
pop
pop
mov
mov
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
mov
cmp
mov
je
mov
mov
push
call
mov
push
call
mov
add
cmp
mov
jne
pop
pop
pop
ret
nop
nop
nop
nop
nop
push
push
push
push
push
mov
push
call
mov
xor
add
lea
mov
movl
mov
call
cmp
jne
mov
mov
mov
xor
mov
mov
inc
mov
lea
call
cmp
je
push
call
add
mov
push
call
mov
mov
mov
mov
mov
mov
add
mov
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
mov
push
call
mov
mov
mov
push
mov
movl
mov
lea
mov
mov
push
mov
call
mov
mov
add
inc
cmp
mov
je
mov
mov
cmp
jne
mov
mov
cmp
jl
mov
mov
cmp
jne
mov
jmp
mov
mov
cmp
jne
mov
mov
mov
jmp
cmp
jne
mov
mov
mov
cmp
je
mov
xor
cmp
jne
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
jne
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
mov
jmp
mov
cmp
jne
mov
mov
jmp
mov
mov
jmp
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
jne
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
cmp
jne
mov
pop
pop
mov
movl
mov
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
mov
mov
pop
ret
mov
cmp
jne
mov
mov
mov
pop
ret
mov
mov
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
mov
mov
pop
ret
mov
cmp
jne
mov
mov
mov
pop
ret
mov
mov
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
cmp
je
mov
cmp
je
mov
mov
cmp
jne
mov
pop
ret
mov
mov
cmp
jne
mov
mov
mov
cmp
je
mov
cmp
je
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
call
mov
mov
add
mov
mov
ret
nop
nop
nop
nop
nop
mov
push
mov
test
jne
mov
cmp
jne
mov
pop
mov
ret
mov
mov
cmp
je
mov
cmp
je
mov
mov
cmp
jne
mov
pop
ret
mov
mov
cmp
jne
mov
mov
mov
cmp
je
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
call
xor
movl
mov
mov
mov
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
ret
nop
nop
nop
mov
push
push
call
ret
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
dec
push
cmp
mov
ja
jmp
call
mov
call
pop
add
ret
mov
call
mov
call
pop
add
ret
call
mov
call
pop
add
ret
push
call
mov
call
pop
add
ret
push
push
mov
call
mov
call
mov
mov
push
push
lea
push
push
call
add
lea
push
push
mov
call
mov
call
mov
mov
push
push
lea
push
push
call
add
lea
mov
push
push
call
mov
call
mov
mov
push
push
lea
push
push
call
add
lea
mov
push
push
call
mov
call
flds
call
flds
push
call
push
push
lea
push
push
call
add
lea
mov
push
push
call
mov
call
mov
lea
push
push
push
call
add
lea
push
push
mov
call
mov
call
mov
mov
push
push
lea
push
push
call
add
lea
mov
push
push
call
mov
call
mov
mov
mov
push
push
push
lea
push
push
call
add
lea
mov
push
push
call
mov
call
xor
lea
mov
push
push
push
call
add
lea
mov
push
push
call
mov
call
mov
call
pop
add
ret
mov
or
add
divb
adc
jb
adc
jb
adc
nop
nop
nop
push
push
mov
call
mov
mov
push
push
push
push
call
mov
push
push
push
push
call
mov
push
push
push
push
call
mov
push
push
push
push
call
mov
push
push
push
push
call
pop
mov
pop
ret
nop
sub
push
mov
test
jne
mov
jmp
mov
mov
push
push
push
lea
push
push
push
movb
call
xor
mov
mov
lea
push
push
push
call
add
lea
push
push
mov
call
mov
call
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
movb
push
push
push
mov
push
call
add
lea
push
push
mov
call
mov
call
pop
add
ret
nop
nop
push
push
mov
call
mov
or
xor
repnz
not
dec
je
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
push
push
mov
push
call
cmp
jne
mov
jmp
movl
push
push
push
push
call
cmp
jne
mov
jmp
movl
push
push
push
push
call
cmp
jne
push
mov
mov
call
pop
pop
ret
push
mov
movl
call
pop
pop
ret
nop
nop
nop
nop
push
mov
push
call
mov
pop
test
push
je
push
push
push
call
ret
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
mov
pop
test
push
je
push
push
push
call
ret
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
mov
lea
call
lea
lea
push
call
lea
push
push
lea
call
mov
push
push
call
add
lea
test
setne
call
test
je
push
lea
call
push
lea
call
mov
push
push
lea
call
test
je
mov
push
push
lea
call
mov
mov
push
lea
call
test
jne
lea
call
test
jne
mov
lea
push
lea
mov
mov
call
push
lea
call
lea
call
lea
lea
push
call
push
lea
call
lea
call
mov
push
mov
call
mov
push
push
push
push
call
lea
call
lea
call
test
jne
pop
pop
lea
call
lea
call
lea
call
lea
call
pop
pop
add
ret
nop
nop
sub
push
mov
push
call
lea
push
push
push
mov
call
mov
call
lea
lea
push
push
push
push
call
add
lea
push
push
push
call
pop
add
ret
push
push
mov
call
mov
push
mov
mov
call
mov
push
push
push
push
call
push
mov
push
call
mov
call
lea
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
call
lea
push
push
push
mov
call
mov
call
lea
lea
push
push
push
push
call
add
lea
push
push
push
call
call
call
mov
call
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
mov
pop
test
push
je
push
push
push
call
ret
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
push
call
lea
mov
call
movl
lea
mov
call
movl
lea
mov
call
movl
lea
mov
call
movl
lea
mov
call
movl
lea
mov
call
movl
lea
mov
call
movl
lea
mov
call
movl
lea
mov
call
movl
mov
lea
xor
push
mov
movl
mov
mov
mov
call
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
nop
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
mov
lea
call
lea
lea
push
call
lea
push
push
lea
call
mov
push
push
call
add
lea
test
setne
call
test
je
push
lea
call
push
lea
call
mov
push
push
lea
call
test
je
mov
push
push
lea
call
mov
mov
push
lea
call
test
jne
lea
call
test
jne
mov
lea
push
lea
mov
mov
call
push
lea
call
lea
call
lea
lea
push
call
push
lea
call
lea
call
mov
push
mov
call
mov
push
push
push
push
call
lea
call
lea
call
test
jne
pop
pop
lea
call
lea
call
lea
call
lea
call
pop
pop
add
ret
nop
nop
sub
push
mov
push
call
mov
test
je
add
lea
push
push
mov
call
lea
push
push
push
push
call
push
mov
call
pop
add
ret
push
lea
call
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
call
mov
test
je
push
push
push
lea
lea
push
push
mov
call
mov
lea
push
push
push
push
call
lea
lea
push
push
mov
call
lea
push
push
push
push
call
lea
lea
push
push
mov
call
lea
push
push
push
push
call
lea
add
push
push
mov
call
lea
push
push
push
push
call
push
mov
call
push
mov
call
mov
push
call
push
mov
call
pop
pop
pop
pop
add
ret
push
lea
call
push
lea
call
push
lea
call
push
lea
call
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
call
mov
test
je
push
push
push
lea
lea
push
push
mov
call
mov
lea
push
push
push
push
call
lea
lea
push
push
mov
call
lea
push
push
push
push
call
lea
lea
push
push
mov
call
lea
push
push
push
push
call
lea
add
push
push
mov
call
lea
push
push
push
push
call
push
mov
call
push
mov
call
mov
push
call
push
mov
call
pop
pop
pop
pop
add
ret
push
lea
call
push
lea
call
push
lea
call
push
lea
call
pop
add
ret
nop
sub
lea
push
push
push
push
mov
push
push
push
push
push
mov
push
call
lea
push
lea
call
push
lea
push
push
push
push
push
call
lea
lea
push
call
push
lea
push
push
push
push
push
call
lea
lea
push
call
push
lea
push
push
push
push
push
call
lea
push
lea
call
push
lea
push
push
push
push
push
call
lea
lea
push
call
push
lea
push
push
push
push
push
call
lea
lea
push
call
push
push
lea
push
push
push
push
call
lea
push
lea
call
push
lea
push
push
push
push
push
call
lea
lea
push
call
push
lea
push
push
push
push
push
call
lea
lea
push
call
push
lea
push
push
push
push
push
call
lea
push
push
mov
call
mov
call
mov
call
push
mov
call
mov
mov
push
push
push
push
call
push
mov
call
mov
push
push
push
push
call
push
mov
call
mov
push
push
push
push
call
push
push
mov
push
push
call
push
push
push
push
mov
call
cmp
jne
push
mov
call
mov
push
push
push
push
call
pop
pop
pop
pop
add
ret
cmp
jne
push
mov
call
mov
push
push
push
push
call
pop
pop
pop
pop
add
ret
push
mov
call
mov
push
push
push
push
call
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
push
lea
call
push
push
push
push
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
mov
call
call
push
lea
push
push
call
add
lea
lea
push
mov
call
lea
push
mov
call
flds
call
push
lea
push
push
call
add
lea
lea
mov
push
call
flds
call
push
lea
push
push
call
add
lea
lea
push
mov
call
lea
push
push
mov
call
mov
lea
push
push
push
push
call
lea
push
push
mov
call
lea
push
push
push
push
call
lea
push
push
mov
call
lea
push
push
push
push
call
mov
lea
push
push
call
lea
push
push
push
push
call
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
mov
call
call
push
lea
push
push
call
add
lea
lea
push
mov
call
lea
push
mov
call
flds
call
push
lea
push
push
call
add
lea
lea
mov
push
call
flds
call
push
lea
push
push
call
add
lea
lea
push
mov
call
lea
push
push
mov
call
mov
lea
push
push
push
push
call
lea
push
push
mov
call
lea
push
push
push
push
call
lea
push
push
mov
call
lea
push
push
push
push
call
mov
lea
push
push
call
lea
push
push
push
push
call
pop
pop
pop
pop
add
ret
nop
sub
push
mov
push
call
call
flds
call
flds
push
call
push
lea
push
push
call
add
lea
push
lea
call
push
mov
call
pop
add
ret
nop
nop
nop
nop
nop
nop
push
push
mov
call
mov
push
mov
mov
call
mov
push
push
push
push
call
push
mov
push
call
mov
call
lea
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
call
push
push
mov
call
lea
push
push
push
mov
call
mov
call
lea
lea
push
push
push
push
call
add
mov
lea
lea
push
push
push
push
push
push
call
lea
lea
push
call
lea
lea
push
push
push
push
push
push
call
lea
or
xor
repnz
not
dec
je
lea
lea
push
call
lea
push
push
push
push
call
push
mov
call
pop
pop
add
ret
nop
nop
sub
push
push
mov
push
call
lea
push
push
push
mov
call
mov
call
lea
lea
push
push
push
push
call
mov
mov
add
lea
push
push
push
push
call
lea
push
push
lea
call
lea
lea
push
push
push
push
call
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
push
push
push
push
mov
push
call
mov
call
mov
lea
push
push
push
push
call
lea
push
push
lea
call
lea
or
xor
repnz
not
dec
je
lea
push
push
push
push
call
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
push
push
mov
push
call
push
add
mov
push
call
call
mov
add
inc
test
jle
shl
mov
mov
shr
mov
rep
mov
mov
shr
mov
rep
pop
movl
pop
ret
nop
nop
push
mov
push
push
push
push
call
push
push
push
push
call
push
push
push
push
call
pop
ret
nop
nop
nop
nop
nop
push
mov
push
push
push
push
call
push
push
push
push
call
push
push
push
push
call
pop
ret
nop
nop
nop
nop
nop
push
mov
push
push
push
push
call
push
push
push
push
call
push
push
push
push
call
pop
ret
nop
nop
nop
nop
nop
mov
push
push
push
mov
push
call
lea
mov
call
movl
lea
mov
call
movl
lea
mov
call
movl
lea
mov
call
movl
lea
mov
call
movl
lea
mov
call
movl
lea
mov
call
movl
lea
mov
call
movl
lea
mov
call
movl
lea
mov
call
xor
movl
mov
mov
mov
mov
mov
mov
movl
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
nop
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
mov
test
je
push
push
mov
push
push
push
push
call
lea
push
push
mov
call
push
push
push
push
call
mov
push
push
push
push
call
inc
push
push
push
call
add
push
push
push
push
call
push
mov
call
push
lea
call
pop
pop
pop
ret
push
push
push
push
call
push
lea
call
push
lea
call
pop
ret
push
mov
push
call
mov
test
je
push
push
mov
push
push
push
push
call
lea
push
push
mov
call
push
push
push
push
call
mov
push
push
push
push
call
inc
push
push
push
call
add
push
push
push
push
call
push
mov
call
push
lea
call
pop
pop
pop
ret
push
push
push
push
call
push
lea
call
push
lea
call
pop
ret
push
mov
push
call
mov
test
je
push
mov
push
push
push
push
call
add
push
push
mov
call
push
push
push
push
call
push
mov
call
pop
pop
ret
push
push
push
push
call
push
lea
call
pop
ret
push
mov
push
call
mov
test
je
push
mov
push
push
push
push
call
add
push
push
mov
call
push
push
push
push
call
push
mov
call
pop
pop
ret
push
push
push
push
call
push
lea
call
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
push
call
mov
test
je
push
push
mov
push
push
push
push
call
lea
push
push
mov
call
push
push
push
push
call
mov
push
push
push
push
call
inc
push
push
push
call
add
push
push
push
push
call
push
mov
call
push
lea
call
pop
pop
pop
ret
push
push
push
push
call
push
lea
call
push
lea
call
pop
ret
push
mov
push
call
mov
test
je
push
push
mov
push
push
push
push
call
lea
push
push
mov
call
push
push
push
push
call
mov
push
push
push
push
call
inc
push
push
push
call
add
push
push
push
push
call
push
mov
call
push
lea
call
pop
pop
pop
ret
push
push
push
push
call
push
lea
call
push
lea
call
pop
ret
push
push
mov
push
push
push
push
push
push
push
mov
push
call
lea
push
mov
call
mov
push
push
push
push
call
dec
push
push
mov
push
push
call
push
push
push
push
call
cmp
jne
push
mov
mov
call
push
jmp
push
mov
movl
call
push
lea
call
push
push
push
push
push
push
call
lea
push
mov
call
push
push
push
push
call
mov
dec
push
push
push
push
call
push
push
push
push
call
cmp
jne
push
mov
mov
call
push
jmp
push
mov
movl
call
push
lea
call
push
push
push
push
push
push
call
lea
push
mov
call
push
push
push
push
call
cmp
jne
mov
push
jmp
movl
push
mov
call
push
push
push
push
push
push
call
lea
push
mov
call
push
push
push
push
call
cmp
jne
mov
push
jmp
movl
push
mov
call
push
push
push
push
push
push
call
lea
push
mov
call
push
push
push
push
call
mov
dec
push
push
push
push
call
push
push
push
push
call
cmp
jne
push
mov
mov
call
push
jmp
push
mov
movl
call
push
lea
call
push
push
push
push
push
push
call
lea
push
mov
call
push
push
push
push
call
dec
push
push
mov
push
push
call
push
push
push
push
call
cmp
jne
push
mov
mov
call
push
jmp
push
mov
movl
call
push
lea
call
push
mov
call
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
push
call
lea
mov
call
movl
lea
mov
call
movl
lea
mov
call
movl
lea
mov
call
movl
lea
mov
call
movl
lea
mov
call
movl
lea
mov
call
movl
lea
mov
call
movl
lea
mov
call
movl
lea
mov
call
xor
movl
mov
mov
mov
mov
mov
movl
mov
pop
pop
ret
nop
nop
nop
nop
nop
push
mov
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
nop
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
mov
test
je
push
push
mov
push
push
push
push
call
lea
push
push
mov
call
push
push
push
push
call
mov
push
push
push
push
call
inc
push
push
push
call
add
push
push
push
push
call
push
mov
call
push
lea
call
pop
pop
pop
ret
push
push
push
push
call
push
lea
call
push
lea
call
pop
ret
push
mov
push
call
mov
test
je
push
push
mov
push
push
push
push
call
lea
push
push
mov
call
push
push
push
push
call
mov
push
push
push
push
call
inc
push
push
push
call
add
push
push
push
push
call
push
mov
call
push
lea
call
pop
pop
pop
ret
push
push
push
push
call
push
lea
call
push
lea
call
pop
ret
push
mov
push
call
mov
test
je
push
push
mov
push
push
push
push
call
lea
push
push
mov
call
push
push
push
push
call
mov
push
push
push
push
call
inc
push
push
push
call
add
push
push
push
push
call
push
mov
call
push
lea
call
pop
pop
pop
ret
push
push
push
push
call
push
lea
call
push
lea
call
pop
ret
push
mov
push
call
mov
test
je
push
push
mov
push
push
push
push
call
lea
push
push
mov
call
push
push
push
push
call
mov
push
push
push
push
call
inc
push
push
push
call
add
push
push
push
push
call
push
mov
call
push
lea
call
pop
pop
pop
ret
push
push
push
push
call
push
lea
call
push
lea
call
pop
ret
push
mov
push
call
mov
test
je
push
push
mov
push
push
push
push
call
lea
push
push
mov
call
push
push
push
push
call
mov
push
push
push
push
call
inc
push
push
push
call
add
push
push
push
push
call
push
mov
call
push
lea
call
pop
pop
pop
ret
push
push
push
push
call
push
lea
call
push
lea
call
pop
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
push
push
push
push
push
push
mov
push
call
lea
push
call
mov
push
push
push
push
call
mov
dec
push
push
mov
push
push
call
push
push
push
push
call
cmp
jne
push
lea
mov
call
push
jmp
push
lea
movl
call
push
lea
call
push
push
push
push
push
push
call
lea
push
call
push
push
push
push
call
mov
dec
push
push
push
push
call
push
push
push
push
call
cmp
jne
push
lea
mov
call
push
jmp
push
lea
movl
call
push
lea
call
push
push
push
push
push
push
call
lea
push
call
push
push
push
push
call
mov
dec
push
push
push
push
call
push
push
push
push
call
cmp
jne
push
lea
mov
call
push
jmp
push
lea
movl
call
push
lea
call
push
push
push
push
push
push
call
lea
push
call
push
push
push
push
call
dec
push
push
mov
push
push
call
push
push
push
push
call
cmp
jne
push
lea
mov
call
push
jmp
push
lea
movl
call
push
lea
call
push
push
push
push
push
push
call
lea
push
mov
call
push
push
push
push
call
mov
dec
push
push
push
push
call
push
push
push
push
call
cmp
jne
push
mov
mov
call
push
jmp
push
mov
movl
call
push
lea
call
push
mov
call
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
mov
sub
mov
mov
push
push
push
xor
push
mov
call
mov
add
lea
mov
mov
movl
call
cmp
jne
mov
mov
mov
xor
mov
mov
inc
mov
lea
call
cmp
je
push
call
add
mov
push
call
mov
mov
add
mov
mov
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
sub
mov
push
push
mov
xor
push
mov
cmp
mov
je
mov
cmp
jne
cmp
jne
mov
mov
cmp
mov
je
mov
mov
push
call
mov
push
lea
call
push
call
mov
add
cmp
mov
jne
mov
lea
push
mov
mov
mov
mov
mov
mov
mov
call
jmp
cmp
je
lea
mov
call
lea
push
push
mov
call
mov
cmp
jne
mov
push
call
add
lea
mov
mov
xor
call
mov
dec
mov
jne
mov
mov
lea
call
cmp
je
push
call
add
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
mov
sub
mov
mov
push
push
push
xor
push
mov
call
mov
add
lea
mov
mov
movl
call
cmp
jne
mov
mov
mov
xor
mov
mov
inc
mov
lea
call
cmp
je
push
call
add
mov
push
call
mov
mov
add
mov
mov
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
sub
mov
push
push
mov
xor
push
mov
cmp
mov
je
mov
cmp
jne
cmp
jne
mov
mov
cmp
mov
je
mov
mov
push
call
mov
push
lea
call
push
call
mov
add
cmp
mov
jne
mov
lea
push
mov
mov
mov
mov
mov
mov
mov
call
jmp
cmp
je
lea
mov
call
lea
push
push
mov
call
mov
cmp
jne
mov
push
call
add
lea
mov
mov
xor
call
mov
dec
mov
jne
mov
mov
lea
call
cmp
je
push
call
add
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
push
mov
push
call
lea
mov
call
movl
lea
mov
call
movl
mov
lea
lea
lea
push
mov
mov
mov
mov
mov
movl
call
push
mov
call
push
mov
call
mov
pop
pop
pop
ret
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
lea
call
lea
call
lea
call
lea
call
lea
call
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
call
lea
push
push
push
mov
call
mov
push
push
push
push
call
push
push
push
push
push
mov
call
push
push
push
push
push
mov
call
push
push
push
push
push
mov
call
push
push
push
push
push
mov
call
push
push
push
push
push
mov
call
push
push
push
push
push
mov
call
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
mov
mov
call
call
mov
xor
push
push
push
push
call
mov
mov
cmp
jle
push
push
lea
mov
jmp
mov
xor
mov
lea
push
push
push
push
movl
mov
mov
movl
mov
call
mov
xor
dec
je
dec
je
dec
jne
mov
push
jmp
mov
push
jmp
mov
push
push
push
mov
call
mov
lea
push
push
push
call
add
lea
mov
mov
push
push
push
inc
call
flds
call
push
lea
push
push
call
add
lea
mov
inc
push
push
push
mov
call
flds
call
push
lea
push
push
call
add
lea
mov
inc
push
push
push
mov
call
fldl
call
push
lea
push
push
call
add
lea
mov
inc
push
push
push
mov
call
mov
push
lea
mov
call
mov
lea
push
lea
mov
call
lea
lea
push
push
mov
call
mov
push
lea
call
push
lea
call
mov
add
mov
push
lea
call
mov
lea
push
push
push
call
mov
xor
mov
mov
cmp
jne
mov
push
lea
push
push
call
mov
add
mov
push
push
push
call
lea
call
mov
cmp
je
mov
test
je
cmp
je
dec
mov
jmp
dec
push
call
add
mov
mov
inc
add
cmp
mov
mov
mov
mov
jl
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
push
lea
push
mov
call
mov
lea
push
push
mov
call
lea
call
mov
push
mov
mov
mov
push
lea
push
push
call
add
xor
lea
push
push
push
lea
call
test
jne
push
push
push
call
jmp
lea
lea
push
call
test
je
push
push
mov
cmp
je
push
lea
call
mov
lea
push
push
lea
call
push
lea
call
lea
call
mov
push
call
mov
mov
add
lea
mov
sub
dec
push
push
lea
call
push
lea
call
lea
call
push
lea
call
mov
mov
sub
lea
dec
push
push
lea
call
push
lea
call
lea
call
push
lea
call
mov
lea
push
push
lea
call
push
mov
call
lea
call
lea
push
push
lea
call
push
lea
call
mov
mov
mov
or
mov
mov
mov
mov
xor
repnz
not
dec
push
push
lea
call
mov
mov
mov
push
lea
mov
call
mov
lea
push
push
push
lea
call
mov
mov
push
lea
mov
mov
call
mov
lea
push
push
push
lea
call
lea
lea
push
push
mov
call
mov
cmp
je
lea
mov
cmp
je
cmp
je
dec
mov
jmp
push
call
add
mov
mov
cmp
mov
mov
je
lea
mov
cmp
je
cmp
je
dec
mov
jmp
push
call
add
mov
mov
cmp
mov
mov
je
lea
mov
cmp
je
cmp
je
dec
mov
jmp
push
call
add
lea
mov
mov
mov
call
lea
lea
push
call
test
jne
pop
pop
lea
call
lea
call
lea
call
lea
call
lea
call
pop
add
ret
nop
nop
nop
nop
nop
sub
push
push
push
push
mov
call
push
mov
call
mov
or
xor
repnz
not
dec
je
mov
push
mov
push
mov
push
push
call
test
jle
mov
mov
lea
push
push
push
push
call
mov
lea
mov
mov
mov
cmp
jne
test
je
mov
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
test
je
mov
mov
push
push
inc
push
push
mov
call
cmp
jl
mov
mov
push
push
push
push
call
mov
xor
push
push
push
push
call
mov
test
jle
mov
lea
push
push
push
push
call
push
push
lea
push
push
call
add
lea
lea
push
push
push
push
call
mov
push
push
push
push
inc
call
cmp
jl
push
lea
push
push
call
add
lea
push
push
push
push
call
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
push
mov
push
push
mov
push
push
call
mov
push
push
push
push
call
mov
xor
push
push
push
push
call
mov
test
jle
mov
lea
push
push
push
push
call
push
push
lea
push
push
call
add
lea
lea
push
push
push
push
call
mov
push
push
push
push
inc
call
cmp
jl
push
lea
push
push
call
add
lea
push
push
push
push
call
pop
pop
pop
pop
add
ret
nop
sub
push
mov
push
mov
mov
push
push
push
push
call
mov
lea
push
push
push
push
call
lea
push
call
mov
add
mov
lea
push
mov
call
lea
lea
push
mov
call
lea
lea
push
push
mov
call
mov
lea
mov
lea
mov
push
push
lea
mov
call
mov
push
lea
mov
mov
call
push
lea
call
mov
mov
lea
push
mov
push
push
lea
movl
movl
movl
call
mov
mov
mov
test
jne
mov
push
lea
push
push
call
add
lea
lea
push
call
lea
lea
push
call
push
mov
call
lea
call
mov
pop
test
pop
je
mov
test
je
cmp
je
dec
mov
add
ret
dec
push
call
add
add
ret
nop
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
push
push
mov
push
push
call
mov
lea
push
push
push
call
add
lea
lea
mov
push
push
push
call
push
lea
call
lea
call
push
lea
push
push
mov
call
push
lea
call
lea
call
push
mov
call
mov
pop
pop
pop
movl
add
ret
nop
nop
nop
push
push
mov
push
push
mov
push
push
call
push
lea
push
push
lea
call
push
lea
call
lea
call
push
mov
call
mov
call
mov
pop
movl
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
mov
xor
lea
movb
rep
mov
mov
stos
push
push
stos
mov
push
push
mov
call
push
push
push
push
call
mov
test
je
push
xor
test
jle
push
push
lea
push
push
call
add
lea
push
push
push
call
push
lea
push
push
push
call
mov
mov
push
push
push
push
call
inc
cmp
jl
pop
push
push
push
push
call
cmp
jne
push
mov
call
mov
push
push
push
push
jmp
push
mov
call
mov
push
push
push
push
call
lea
call
pop
pop
pop
add
ret
nop
push
push
push
push
call
ret
nop
nop
nop
nop
nop
push
push
push
push
call
ret
nop
nop
nop
nop
nop
sub
mov
push
push
mov
mov
mov
push
mov
push
mov
mov
cmp
je
mov
mov
cmp
setl
test
je
mov
jmp
mov
cmp
jne
mov
test
je
push
push
lea
push
push
mov
call
mov
movb
mov
mov
jmp
mov
test
mov
je
cmp
jne
push
push
lea
push
push
mov
call
mov
movb
mov
mov
jmp
lea
call
mov
mov
mov
cmp
jge
push
push
lea
push
push
mov
call
mov
movb
mov
mov
jmp
movb
mov
mov
mov
pop
pop
mov
mov
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
ret
nop
nop
sub
mov
mov
push
push
push
push
mov
mov
mov
mov
mov
cmp
je
mov
mov
cmp
setl
test
je
mov
jmp
mov
cmp
jne
mov
test
je
push
push
mov
call
mov
mov
mov
mov
mov
add
push
push
call
mov
mov
add
inc
cmp
mov
je
cmp
jne
mov
mov
cmp
jl
mov
mov
mov
cmp
jne
mov
jmp
mov
mov
mov
cmp
jne
mov
mov
mov
jmp
cmp
jne
mov
mov
mov
mov
mov
cmp
je
mov
xor
cmp
jne
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
jne
mov
mov
push
call
mov
movl
mov
mov
mov
mov
mov
push
mov
call
jmp
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
jne
mov
mov
push
call
mov
movl
mov
mov
mov
mov
mov
mov
push
call
mov
cmp
jne
mov
pop
pop
mov
movl
mov
movb
mov
mov
pop
mov
pop
add
ret
mov
test
mov
je
cmp
jne
push
push
lea
push
push
mov
call
mov
mov
movb
pop
mov
mov
pop
pop
mov
pop
add
ret
lea
call
mov
mov
mov
cmp
jge
push
push
lea
push
push
mov
call
mov
mov
movb
mov
pop
pop
mov
pop
mov
pop
add
ret
mov
movb
mov
pop
pop
mov
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
mov
push
mov
test
je
mov
cmp
jne
cmp
jne
mov
mov
cmp
mov
je
mov
mov
push
call
mov
push
lea
call
push
call
mov
add
cmp
mov
jne
mov
pop
mov
mov
movl
mov
mov
mov
mov
mov
pop
mov
pop
mov
ret
cmp
je
mov
lea
call
lea
push
push
mov
call
mov
cmp
jne
mov
pop
pop
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
push
mov
lea
call
mov
mov
lea
cmp
mov
mov
jne
mov
jmp
mov
cmp
je
mov
cmp
je
mov
mov
cmp
jne
mov
lea
mov
lea
call
mov
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
jmp
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
mov
mov
xor
cmp
jne
mov
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
jne
jmp
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
cmp
jne
jmp
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
mov
jmp
mov
cmp
jne
mov
mov
jmp
mov
mov
jmp
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
lea
call
mov
mov
mov
cmp
je
push
mov
call
add
cmp
jne
mov
push
call
push
mov
mov
mov
call
mov
add
mov
pop
dec
pop
mov
mov
mov
pop
mov
pop
add
ret
nop
nop
nop
nop
push
mov
push
push
mov
cmp
mov
mov
je
push
push
mov
mov
push
call
mov
mov
mov
cmp
je
push
mov
call
add
cmp
jne
mov
push
call
xor
push
mov
mov
mov
call
mov
add
cmp
mov
jne
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
push
mov
lea
call
mov
mov
lea
cmp
mov
mov
jne
mov
jmp
mov
cmp
je
mov
cmp
je
mov
mov
cmp
jne
mov
lea
mov
lea
call
mov
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
jmp
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
mov
mov
xor
cmp
jne
mov
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
jne
jmp
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
cmp
jne
jmp
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
mov
jmp
mov
cmp
jne
mov
mov
jmp
mov
mov
jmp
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
lea
call
mov
mov
cmp
je
lea
mov
cmp
je
cmp
je
dec
mov
jmp
push
call
add
push
mov
mov
mov
call
mov
mov
add
dec
mov
mov
pop
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
cmp
mov
mov
je
push
xor
mov
mov
push
call
mov
mov
cmp
je
lea
mov
cmp
je
cmp
je
dec
mov
jmp
push
call
add
push
mov
mov
mov
call
mov
add
cmp
mov
jne
pop
pop
pop
pop
ret
nop
nop
nop
nop
push
push
push
push
mov
push
call
mov
mov
mov
push
mov
movl
mov
lea
mov
mov
push
mov
call
mov
mov
add
inc
cmp
mov
je
mov
mov
cmp
jne
mov
mov
cmp
jl
mov
mov
cmp
jne
mov
jmp
mov
mov
cmp
jne
mov
mov
mov
jmp
cmp
jne
mov
mov
mov
cmp
je
mov
xor
cmp
jne
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
jne
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
mov
jmp
mov
cmp
jne
mov
mov
jmp
mov
mov
jmp
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
jne
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
cmp
jne
mov
pop
pop
mov
movl
mov
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
mov
mov
pop
ret
mov
cmp
jne
mov
mov
mov
pop
ret
mov
mov
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
mov
mov
pop
ret
mov
cmp
jne
mov
mov
mov
pop
ret
mov
mov
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
test
jne
mov
cmp
jne
mov
pop
mov
ret
mov
mov
cmp
je
mov
cmp
je
mov
mov
cmp
jne
mov
pop
ret
mov
mov
cmp
jne
mov
mov
mov
cmp
je
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
cmp
je
mov
cmp
je
mov
mov
cmp
jne
mov
pop
ret
mov
mov
cmp
jne
mov
mov
mov
cmp
je
mov
cmp
je
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
cmp
je
mov
cmp
je
mov
mov
cmp
jne
mov
pop
ret
mov
mov
cmp
jne
mov
mov
mov
cmp
je
mov
cmp
je
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
push
xor
cmp
je
mov
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jae
mov
cmp
jne
cmp
mov
jbe
call
mov
call
mov
sub
cmp
jae
mov
cmp
jbe
mov
sub
add
push
lea
push
push
call
mov
add
sub
mov
push
push
call
test
je
push
mov
call
mov
call
pop
pop
pop
pop
ret
cmp
jbe
cmp
jne
mov
cmp
jne
mov
cmpb
jae
push
mov
call
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
pop
inc
pop
pop
mov
pop
ret
push
push
mov
call
test
je
mov
cmp
jne
mov
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
movb
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
lea
mov
test
je
cmp
je
dec
mov
jmp
push
call
add
mov
movl
test
movl
movl
je
push
call
add
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
test
jne
or
mov
jmp
nop
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
push
mov
lea
call
testb
je
push
call
add
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
mov
sub
mov
mov
push
push
push
xor
push
mov
call
mov
add
lea
mov
mov
movl
call
cmp
jne
mov
mov
mov
xor
mov
mov
inc
mov
lea
call
cmp
je
push
call
add
mov
push
call
mov
mov
add
mov
mov
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
sub
mov
push
push
mov
xor
push
mov
cmp
mov
je
mov
cmp
jne
cmp
jne
mov
mov
cmp
mov
je
mov
mov
push
call
mov
push
lea
call
push
call
mov
add
cmp
mov
jne
mov
lea
push
mov
mov
mov
mov
mov
mov
mov
call
jmp
cmp
je
lea
mov
call
lea
push
push
mov
call
mov
cmp
jne
mov
push
call
add
lea
mov
mov
xor
call
mov
dec
mov
jne
mov
mov
lea
call
cmp
je
push
call
add
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
push
push
mov
push
call
lea
mov
call
movl
lea
mov
call
movl
lea
mov
call
movl
lea
mov
call
movl
mov
lea
lea
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
movl
call
push
mov
call
push
mov
call
push
mov
call
push
lea
call
mov
pop
pop
pop
pop
ret
nop
nop
push
mov
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
call
testb
je
push
call
add
mov
pop
ret
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
call
lea
push
push
push
mov
call
mov
push
push
push
push
call
push
push
push
push
push
mov
call
push
push
push
push
push
mov
call
push
call
mov
pop
mov
pop
ret
nop
sub
mov
mov
push
lea
push
call
mov
lea
push
push
mov
call
lea
call
mov
push
mov
mov
mov
push
lea
push
push
movl
call
add
lea
push
push
push
lea
call
test
jne
push
push
push
call
jmp
lea
lea
push
call
test
je
push
push
push
push
mov
mov
test
je
push
lea
call
mov
lea
push
push
lea
call
push
lea
call
lea
call
mov
push
call
mov
mov
add
lea
mov
sub
dec
push
push
lea
call
push
lea
call
lea
call
push
lea
call
mov
mov
sub
lea
dec
push
push
lea
call
push
lea
call
lea
call
push
lea
call
lea
push
push
lea
call
push
lea
call
mov
push
lea
mov
mov
call
mov
or
xor
push
repnz
not
dec
mov
lea
push
call
test
je
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
movb
mov
xor
push
lea
mov
mov
call
mov
lea
push
push
push
lea
call
mov
mov
push
lea
mov
mov
call
mov
lea
push
push
push
lea
call
lea
lea
push
push
mov
call
push
lea
call
mov
cmp
je
lea
mov
test
je
cmp
je
dec
mov
jmp
push
call
add
mov
mov
cmp
mov
mov
je
lea
mov
test
je
cmp
je
dec
mov
jmp
push
call
add
mov
lea
inc
mov
mov
mov
mov
call
lea
lea
push
call
test
jne
pop
pop
pop
pop
lea
call
mov
mov
push
push
lea
push
push
call
add
lea
call
lea
call
lea
call
lea
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
call
mov
mov
add
push
push
push
push
call
mov
movl
test
jle
push
push
movl
mov
lea
mov
push
push
push
call
mov
add
xor
push
push
push
push
call
test
jle
mov
lea
push
push
push
push
call
lea
lea
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
test
je
mov
push
push
push
push
inc
call
cmp
jl
mov
xor
push
push
push
push
call
test
jle
mov
lea
push
push
push
push
call
lea
lea
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
test
je
mov
push
push
push
push
inc
call
cmp
jl
mov
xor
push
push
push
push
call
test
jle
mov
lea
push
push
push
push
call
lea
lea
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
test
je
mov
push
push
push
push
inc
call
cmp
jl
mov
lea
xor
push
push
push
push
movl
mov
mov
movl
mov
call
mov
lea
mov
push
push
push
call
add
lea
lea
push
push
push
mov
call
mov
push
lea
mov
call
mov
lea
mov
push
lea
call
lea
lea
push
push
mov
call
mov
push
lea
call
push
lea
call
mov
add
push
lea
mov
call
mov
lea
push
push
push
call
mov
mov
xor
mov
cmp
jne
mov
push
lea
push
push
call
mov
add
mov
push
push
push
call
lea
call
mov
cmp
je
mov
test
je
cmp
je
dec
mov
jmp
dec
push
call
add
mov
mov
mov
mov
mov
mov
inc
add
cmp
mov
mov
jl
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
sub
push
push
mov
push
push
push
mov
push
push
call
mov
lea
push
push
push
call
add
lea
lea
mov
push
push
push
call
push
lea
call
lea
call
push
lea
push
push
mov
call
push
lea
call
lea
call
push
lea
push
push
mov
call
push
lea
call
lea
call
push
lea
push
push
mov
call
push
lea
call
lea
call
push
lea
push
push
mov
call
push
lea
call
lea
call
push
mov
call
mov
pop
pop
movl
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
mov
mov
push
push
push
push
call
mov
lea
push
push
push
push
call
lea
push
call
mov
add
mov
lea
push
mov
call
lea
lea
push
mov
call
lea
lea
push
push
mov
call
mov
lea
mov
lea
mov
push
push
lea
mov
call
mov
push
lea
mov
mov
call
push
lea
call
mov
mov
lea
push
mov
push
push
lea
movl
movl
movl
call
mov
mov
mov
test
jne
mov
push
lea
push
push
call
add
lea
lea
push
call
lea
lea
push
call
push
mov
call
lea
call
mov
pop
test
pop
je
mov
test
je
cmp
je
dec
mov
add
ret
dec
push
call
add
add
ret
nop
sub
push
push
push
push
mov
call
push
mov
call
mov
or
xor
repnz
not
dec
je
mov
push
mov
push
mov
push
push
call
test
jle
mov
mov
lea
push
push
push
push
call
mov
lea
mov
mov
mov
cmp
jne
test
je
mov
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
test
je
mov
mov
push
push
inc
push
push
mov
call
cmp
jl
mov
mov
push
push
push
push
call
mov
xor
push
push
push
push
call
mov
test
jle
mov
lea
push
push
push
push
call
push
push
lea
push
push
call
add
lea
lea
push
push
push
push
call
mov
push
push
push
push
inc
call
cmp
jl
push
lea
push
push
call
add
lea
push
push
push
push
call
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
push
mov
push
push
mov
push
push
call
mov
push
push
push
push
call
mov
xor
push
push
push
push
call
mov
test
jle
mov
lea
push
push
push
push
call
push
push
lea
push
push
call
add
lea
lea
push
push
push
push
call
mov
push
push
push
push
inc
call
cmp
jl
push
lea
push
push
call
add
lea
push
push
push
push
call
pop
pop
pop
pop
add
ret
nop
nop
push
push
mov
push
push
mov
push
push
call
push
lea
push
push
lea
call
push
lea
call
lea
call
push
mov
call
mov
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
mov
call
push
mov
call
mov
or
xor
repnz
not
dec
je
mov
push
mov
push
mov
push
push
call
test
jle
mov
mov
lea
push
push
push
push
call
mov
lea
mov
mov
mov
cmp
jne
test
je
mov
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
test
je
mov
mov
push
push
inc
push
push
mov
call
cmp
jl
mov
mov
push
push
push
push
call
mov
xor
push
push
push
push
call
mov
test
jle
mov
lea
push
push
push
push
call
push
push
lea
push
push
call
add
lea
lea
push
push
push
push
call
mov
push
push
push
push
inc
call
cmp
jl
push
lea
push
push
call
add
lea
push
push
push
push
call
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
push
mov
push
push
mov
push
push
call
mov
push
push
push
push
call
mov
xor
push
push
push
push
call
mov
test
jle
mov
lea
push
push
push
push
call
push
push
lea
push
push
call
add
lea
lea
push
push
push
push
call
mov
push
push
push
push
inc
call
cmp
jl
push
lea
push
push
call
add
lea
push
push
push
push
call
pop
pop
pop
pop
add
ret
nop
nop
push
push
mov
push
push
mov
push
push
call
push
lea
push
push
lea
call
push
lea
call
lea
call
push
mov
call
mov
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
mov
mov
push
push
push
push
call
mov
lea
push
push
push
push
call
lea
push
call
mov
add
mov
lea
push
mov
call
lea
lea
push
mov
call
lea
lea
push
push
mov
call
mov
lea
mov
lea
mov
push
push
lea
mov
call
mov
push
lea
mov
mov
call
push
lea
call
mov
mov
lea
push
mov
push
push
lea
movl
movl
movl
call
mov
mov
mov
test
jne
mov
push
lea
push
push
call
add
lea
lea
push
call
lea
lea
push
call
push
mov
call
lea
call
mov
pop
test
pop
je
mov
test
je
cmp
je
dec
mov
add
ret
dec
push
call
add
add
ret
nop
sub
push
push
push
mov
push
mov
xor
lea
movb
push
rep
mov
push
stos
stos
mov
mov
push
push
mov
call
push
push
push
push
call
mov
mov
test
je
xor
test
jle
push
push
lea
push
push
call
add
lea
push
push
push
call
push
lea
push
push
push
call
mov
mov
push
push
push
push
call
mov
inc
cmp
jl
mov
push
push
push
push
call
push
push
push
push
call
test
mov
je
xor
test
jle
push
push
lea
push
push
call
add
lea
push
push
push
call
push
lea
push
push
push
call
mov
mov
push
push
push
push
call
mov
inc
cmp
jl
mov
push
push
push
push
call
push
push
push
push
call
test
mov
je
xor
test
jle
push
push
lea
push
push
call
add
lea
push
push
push
call
push
lea
push
push
push
call
mov
mov
push
push
push
push
call
mov
inc
cmp
jl
lea
call
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
mov
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
mov
call
push
mov
call
mov
or
xor
repnz
not
dec
je
mov
push
mov
push
mov
push
push
call
test
jle
mov
mov
lea
push
push
push
push
call
mov
lea
mov
mov
mov
cmp
jne
test
je
mov
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
test
je
mov
mov
push
push
inc
push
push
mov
call
cmp
jl
mov
mov
push
push
push
push
call
mov
xor
push
push
push
push
call
mov
test
jle
mov
lea
push
push
push
push
call
push
push
lea
push
push
call
add
lea
lea
push
push
push
push
call
mov
push
push
push
push
inc
call
cmp
jl
push
lea
push
push
call
add
lea
push
push
push
push
call
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
push
mov
push
push
mov
push
push
call
mov
push
push
push
push
call
mov
xor
push
push
push
push
call
mov
test
jle
mov
lea
push
push
push
push
call
push
push
lea
push
push
call
add
lea
lea
push
push
push
push
call
mov
push
push
push
push
inc
call
cmp
jl
push
lea
push
push
call
add
lea
push
push
push
push
call
pop
pop
pop
pop
add
ret
nop
sub
push
mov
push
mov
mov
push
push
push
push
call
mov
lea
push
push
push
push
call
lea
push
call
mov
add
mov
lea
push
mov
call
lea
lea
push
mov
call
lea
lea
push
push
mov
call
mov
lea
mov
lea
mov
push
push
lea
mov
call
mov
push
lea
mov
mov
call
push
lea
call
mov
mov
lea
push
mov
push
push
lea
movl
movl
movl
call
mov
mov
mov
test
jne
mov
push
lea
push
push
call
add
lea
lea
push
call
lea
lea
push
call
push
mov
call
lea
call
mov
pop
test
pop
je
mov
test
je
cmp
je
dec
mov
add
ret
dec
push
call
add
add
ret
nop
nop
nop
nop
nop
nop
nop
mov
mov
test
jne
or
mov
jmp
nop
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
push
push
push
mov
push
call
lea
mov
call
movl
lea
mov
call
movl
lea
mov
call
movl
lea
mov
call
movl
lea
mov
call
movl
lea
mov
call
movl
lea
mov
call
movl
lea
mov
call
movl
lea
mov
call
movl
lea
mov
call
movl
lea
mov
call
movl
lea
mov
call
movl
lea
mov
call
movl
lea
mov
call
movl
lea
mov
call
movl
lea
mov
call
movl
lea
mov
call
movl
lea
mov
call
movl
mov
lea
mov
mov
lea
push
mov
xor
movl
mov
mov
mov
mov
mov
mov
call
push
mov
call
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
mov
mov
push
push
push
push
call
mov
push
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
mov
test
je
push
push
push
mov
push
push
push
push
call
lea
push
push
mov
call
push
push
push
push
call
lea
push
push
mov
call
push
push
push
push
call
add
push
push
mov
call
push
push
push
push
call
push
mov
call
push
mov
call
push
mov
call
pop
pop
pop
pop
ret
push
push
push
push
call
push
lea
call
push
lea
call
push
lea
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
mov
test
je
push
push
push
mov
push
push
push
push
call
lea
push
push
mov
call
push
push
push
push
call
lea
push
push
mov
call
push
push
push
push
call
add
push
push
mov
call
push
push
push
push
call
push
mov
call
push
mov
call
push
mov
call
pop
pop
pop
pop
ret
push
push
push
push
call
push
lea
call
push
lea
call
push
lea
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
mov
test
je
push
push
push
mov
push
push
push
push
call
lea
push
push
mov
call
push
push
push
push
call
lea
push
push
mov
call
push
push
push
push
call
add
push
push
mov
call
push
push
push
push
call
push
mov
call
push
mov
call
push
mov
call
pop
pop
pop
pop
ret
push
push
push
push
call
push
lea
call
push
lea
call
push
lea
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
mov
test
je
push
push
push
mov
push
push
push
push
call
lea
push
push
mov
call
push
push
push
push
call
lea
push
push
mov
call
push
push
push
push
call
add
push
push
mov
call
push
push
push
push
call
push
mov
call
push
mov
call
push
mov
call
pop
pop
pop
pop
ret
push
push
push
push
call
push
lea
call
push
lea
call
push
lea
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
mov
test
je
push
push
push
mov
push
push
push
push
call
lea
push
push
mov
call
push
push
push
push
call
lea
push
push
mov
call
push
push
push
push
call
add
push
push
mov
call
push
push
push
push
call
push
mov
call
push
mov
call
push
mov
call
pop
pop
pop
pop
ret
push
push
push
push
call
push
lea
call
push
lea
call
push
lea
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
mov
test
je
push
push
push
mov
push
push
push
push
call
lea
push
push
mov
call
push
push
push
push
call
lea
push
push
mov
call
push
push
push
push
call
add
push
push
mov
call
push
push
push
push
call
push
mov
call
push
mov
call
push
mov
call
pop
pop
pop
pop
ret
push
push
push
push
call
push
lea
call
push
lea
call
push
lea
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
mov
push
push
push
push
push
mov
push
call
push
lea
call
push
push
push
push
push
push
call
push
lea
call
mov
push
push
push
push
call
push
push
push
push
push
push
mov
call
lea
push
mov
call
push
push
push
push
push
push
call
lea
push
call
push
push
push
push
push
push
call
lea
push
call
mov
test
je
push
mov
call
push
lea
call
push
jmp
push
mov
call
push
lea
call
push
lea
call
push
push
push
push
call
push
push
push
push
push
push
mov
call
lea
push
mov
call
push
push
push
push
push
push
call
lea
push
call
push
push
push
push
push
push
call
lea
push
call
mov
test
je
push
mov
call
push
lea
call
push
jmp
push
mov
call
push
lea
call
push
lea
call
push
push
push
push
call
push
push
push
push
push
push
mov
call
lea
push
mov
call
push
push
push
push
push
push
call
lea
push
call
push
push
push
push
push
push
call
lea
push
call
mov
test
je
push
mov
call
push
lea
call
push
jmp
push
mov
call
push
lea
call
push
lea
call
push
push
push
push
call
push
push
push
push
push
push
mov
call
lea
push
mov
call
push
push
push
push
push
push
call
lea
push
call
push
push
push
push
push
push
call
lea
push
call
mov
test
je
push
mov
call
push
lea
call
push
jmp
push
mov
call
push
lea
call
push
lea
call
push
push
push
push
call
push
push
push
push
push
push
mov
call
lea
push
mov
call
push
push
push
push
push
push
call
lea
push
call
push
push
push
push
push
push
call
lea
push
call
mov
test
je
push
mov
call
push
lea
call
push
jmp
push
mov
call
push
lea
call
push
lea
call
push
push
push
push
call
push
push
push
push
push
push
mov
call
lea
push
mov
call
push
push
push
push
push
push
call
lea
push
mov
call
push
push
push
push
push
push
call
lea
push
mov
call
mov
test
je
push
mov
call
push
mov
call
push
jmp
push
mov
call
push
mov
call
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
call
pop
pop
pop
pop
add
ret
nop
mov
push
push
push
push
push
mov
push
call
mov
lea
lea
lea
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
movl
call
push
mov
call
push
mov
call
push
mov
call
push
lea
call
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
call
lea
call
lea
call
lea
call
lea
call
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
call
call
flds
call
flds
push
call
push
lea
push
push
call
add
lea
push
lea
call
push
mov
call
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
push
add
mov
push
call
call
add
call
mov
xor
inc
cmp
jle
shl
mov
mov
shr
mov
rep
mov
mov
shr
mov
rep
pop
movl
mov
mov
mov
movb
pop
ret
nop
nop
nop
nop
nop
sub
push
push
mov
lea
call
lea
lea
push
call
lea
push
push
lea
call
mov
push
push
call
add
lea
test
setne
call
test
je
push
lea
call
push
lea
call
mov
push
push
lea
call
test
je
mov
push
push
lea
call
mov
mov
push
lea
call
test
jne
lea
call
test
jne
mov
lea
push
lea
mov
mov
call
push
lea
call
lea
call
lea
lea
push
call
push
lea
call
lea
call
mov
push
mov
call
mov
push
push
push
push
call
lea
call
lea
call
test
jne
pop
pop
lea
call
lea
call
lea
call
lea
call
pop
pop
add
ret
nop
nop
push
push
mov
call
mov
push
mov
mov
call
mov
push
push
push
push
call
push
mov
push
call
mov
call
lea
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
call
push
push
mov
call
push
push
push
mov
call
mov
call
push
push
lea
push
push
call
add
mov
lea
lea
push
push
push
push
push
push
call
lea
lea
push
call
lea
lea
push
push
push
push
push
push
call
lea
lea
push
call
lea
lea
push
push
push
push
push
push
call
lea
lea
push
call
lea
lea
push
push
push
push
push
push
call
lea
lea
push
call
lea
lea
push
push
push
push
push
push
call
lea
lea
push
call
push
mov
call
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
call
push
push
push
mov
call
mov
call
push
push
lea
push
push
call
mov
mov
add
lea
push
push
push
push
call
mov
lea
push
push
push
push
call
mov
lea
push
push
push
push
call
mov
lea
push
push
push
push
call
mov
lea
push
push
push
push
call
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
call
call
flds
call
flds
push
call
push
lea
push
push
call
add
lea
push
lea
call
push
mov
call
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
call
push
add
mov
push
call
call
add
call
mov
inc
test
jle
shl
mov
mov
shr
mov
rep
mov
mov
shr
mov
rep
pop
mov
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
call
call
flds
call
flds
push
call
push
lea
push
push
call
add
lea
push
lea
call
push
mov
call
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
call
mov
call
push
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
call
call
flds
call
flds
push
call
push
lea
push
push
call
add
lea
push
lea
call
push
mov
call
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
call
push
add
mov
push
call
call
add
call
mov
inc
test
jle
shl
mov
mov
shr
mov
rep
mov
mov
shr
mov
rep
pop
mov
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
call
call
flds
call
flds
push
call
push
lea
push
push
call
add
lea
push
lea
call
push
mov
call
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
call
push
add
mov
push
call
call
add
call
mov
inc
test
jle
shl
mov
mov
shr
mov
rep
mov
mov
shr
mov
rep
pop
mov
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
mov
sub
mov
mov
push
push
push
xor
push
mov
call
mov
add
lea
mov
mov
movl
call
cmp
jne
mov
mov
mov
xor
mov
mov
inc
mov
lea
call
cmp
je
push
call
add
mov
push
call
mov
mov
add
mov
mov
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
sub
mov
push
push
mov
xor
push
mov
cmp
mov
je
mov
cmp
jne
cmp
jne
mov
mov
cmp
mov
je
mov
mov
push
call
mov
push
lea
call
push
call
mov
add
cmp
mov
jne
mov
lea
push
mov
mov
mov
mov
mov
mov
mov
call
jmp
cmp
je
lea
mov
call
lea
push
push
mov
call
mov
cmp
jne
mov
push
call
add
lea
mov
mov
xor
call
mov
dec
mov
jne
mov
mov
lea
call
cmp
je
push
call
add
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
mov
sub
mov
mov
push
push
push
xor
push
mov
call
mov
add
lea
mov
mov
movl
call
cmp
jne
mov
mov
mov
xor
mov
mov
inc
mov
lea
call
cmp
je
push
call
add
mov
push
call
mov
mov
add
mov
mov
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
sub
mov
push
push
mov
xor
push
mov
cmp
mov
je
mov
cmp
jne
cmp
jne
mov
mov
cmp
mov
je
mov
mov
push
call
mov
push
lea
call
push
call
mov
add
cmp
mov
jne
mov
lea
push
mov
mov
mov
mov
mov
mov
mov
call
jmp
cmp
je
lea
mov
call
lea
push
push
mov
call
mov
cmp
jne
mov
push
call
add
lea
mov
mov
xor
call
mov
dec
mov
jne
mov
mov
lea
call
cmp
je
push
call
add
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
push
push
mov
push
call
lea
mov
call
movl
lea
mov
call
movl
lea
mov
call
movl
lea
mov
call
movl
mov
lea
lea
lea
lea
mov
mov
mov
mov
mov
mov
mov
push
movl
call
push
mov
call
push
mov
call
push
mov
movl
call
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
push
mov
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
mov
call
push
mov
call
mov
or
xor
repnz
not
dec
je
mov
push
mov
push
mov
push
push
call
test
jle
mov
mov
lea
push
push
push
push
call
mov
lea
mov
mov
mov
cmp
jne
test
je
mov
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
test
je
mov
mov
push
push
inc
push
push
mov
call
cmp
jl
mov
mov
push
push
push
push
call
mov
xor
push
push
push
push
call
mov
test
jle
mov
lea
push
push
push
push
call
push
push
lea
push
push
call
add
lea
lea
push
push
push
push
call
mov
push
push
push
push
inc
call
cmp
jl
push
lea
push
push
call
add
lea
push
push
push
push
call
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
push
mov
push
push
mov
push
push
call
mov
push
push
push
push
call
mov
xor
push
push
push
push
call
mov
test
jle
mov
lea
push
push
push
push
call
push
push
lea
push
push
call
add
lea
lea
push
push
push
push
call
mov
push
push
push
push
inc
call
cmp
jl
push
lea
push
push
call
add
lea
push
push
push
push
call
pop
pop
pop
pop
add
ret
nop
nop
push
push
mov
call
lea
push
push
push
mov
call
mov
push
push
push
push
call
push
push
push
push
push
mov
call
push
push
push
push
push
mov
call
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
push
lea
push
mov
call
mov
lea
push
push
mov
call
lea
call
mov
push
mov
mov
mov
push
lea
push
push
call
add
xor
lea
push
push
push
lea
call
test
jne
push
push
push
call
jmp
lea
lea
push
call
test
je
push
push
mov
cmp
je
push
lea
call
mov
lea
push
push
lea
call
push
lea
call
lea
call
mov
push
call
mov
mov
add
lea
mov
sub
dec
push
push
lea
call
push
lea
call
lea
call
push
lea
call
mov
mov
sub
lea
dec
push
push
lea
call
push
lea
call
lea
call
push
lea
call
mov
lea
push
push
lea
call
push
mov
call
lea
call
lea
push
push
lea
call
push
lea
call
mov
mov
mov
or
mov
mov
mov
mov
xor
repnz
not
dec
push
push
lea
call
mov
mov
mov
push
lea
mov
call
mov
lea
push
push
push
lea
call
mov
mov
push
lea
mov
mov
call
mov
lea
push
push
push
lea
call
lea
lea
push
push
mov
call
mov
cmp
je
lea
mov
cmp
je
cmp
je
dec
mov
jmp
push
call
add
mov
mov
cmp
mov
mov
je
lea
mov
cmp
je
cmp
je
dec
mov
jmp
push
call
add
mov
mov
cmp
mov
mov
je
lea
mov
cmp
je
cmp
je
dec
mov
jmp
push
call
add
lea
mov
mov
mov
call
lea
lea
push
call
test
jne
pop
pop
lea
call
lea
call
lea
call
lea
call
lea
call
pop
add
ret
nop
nop
nop
nop
nop
sub
push
push
mov
mov
call
call
call
mov
xor
push
push
push
push
call
mov
mov
cmp
jle
push
push
lea
mov
jmp
mov
mov
lea
push
push
push
push
movl
mov
mov
movl
mov
call
mov
lea
push
push
push
call
add
lea
mov
push
push
push
call
mov
push
lea
mov
call
mov
lea
mov
push
lea
call
lea
lea
push
push
mov
call
mov
push
lea
call
push
lea
call
mov
add
push
lea
mov
call
mov
lea
push
push
push
call
mov
mov
cmp
mov
jne
mov
push
lea
push
push
call
mov
add
mov
push
push
push
call
lea
call
mov
cmp
je
mov
cmp
je
cmp
je
dec
mov
jmp
dec
push
call
add
mov
mov
inc
add
cmp
mov
mov
mov
mov
jl
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
push
push
mov
push
push
call
mov
lea
push
push
push
call
add
lea
lea
mov
push
push
push
call
push
lea
call
lea
call
push
lea
push
push
mov
call
push
lea
call
lea
call
push
mov
call
mov
pop
pop
pop
movl
add
ret
nop
nop
nop
push
mov
lea
lea
push
call
push
mov
call
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
mov
mov
push
push
push
push
call
mov
lea
push
push
push
push
call
lea
push
call
mov
add
mov
lea
push
mov
call
lea
lea
push
mov
call
lea
lea
push
push
mov
call
mov
lea
mov
lea
mov
push
push
lea
mov
call
mov
push
lea
mov
mov
call
push
lea
call
mov
mov
lea
push
mov
push
push
lea
movl
movl
movl
call
mov
mov
mov
test
jne
mov
push
lea
push
push
call
add
lea
lea
push
call
lea
lea
push
call
push
mov
call
lea
call
mov
pop
test
pop
je
mov
test
je
cmp
je
dec
mov
add
ret
dec
push
call
add
add
ret
nop
sub
push
push
push
push
mov
call
push
mov
call
mov
or
xor
repnz
not
dec
je
mov
push
mov
push
mov
push
push
call
test
jle
mov
mov
lea
push
push
push
push
call
mov
lea
mov
mov
mov
cmp
jne
test
je
mov
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
test
je
mov
mov
push
push
inc
push
push
mov
call
cmp
jl
mov
mov
push
push
push
push
call
mov
xor
push
push
push
push
call
mov
test
jle
mov
lea
push
push
push
push
call
push
push
lea
push
push
call
add
lea
lea
push
push
push
push
call
mov
push
push
push
push
inc
call
cmp
jl
push
lea
push
push
call
add
lea
push
push
push
push
call
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
push
mov
push
push
mov
push
push
call
mov
push
push
push
push
call
mov
xor
push
push
push
push
call
mov
test
jle
mov
lea
push
push
push
push
call
push
push
lea
push
push
call
add
lea
lea
push
push
push
push
call
mov
push
push
push
push
inc
call
cmp
jl
push
lea
push
push
call
add
lea
push
push
push
push
call
pop
pop
pop
pop
add
ret
nop
nop
push
mov
lea
lea
push
call
push
mov
call
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
call
mov
test
je
push
mov
push
push
push
push
call
add
lea
push
push
mov
call
lea
push
push
push
push
call
push
mov
call
pop
pop
add
ret
push
push
push
push
call
push
lea
call
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
mov
mov
push
push
push
push
call
mov
lea
push
push
push
push
call
lea
push
call
mov
add
mov
lea
push
mov
call
lea
lea
push
mov
call
lea
lea
push
push
mov
call
mov
lea
mov
lea
mov
push
push
lea
mov
call
mov
push
lea
mov
mov
call
push
lea
call
mov
mov
lea
push
mov
push
push
lea
movl
movl
movl
call
mov
mov
mov
test
jne
mov
push
lea
push
push
call
add
lea
lea
push
call
lea
lea
push
call
push
mov
call
lea
call
mov
pop
test
pop
je
mov
test
je
cmp
je
dec
mov
add
ret
dec
push
call
add
add
ret
nop
sub
push
push
push
mov
push
mov
xor
lea
movb
mov
rep
mov
push
stos
stos
mov
push
push
push
mov
call
push
push
push
push
call
mov
test
je
xor
test
jle
push
push
lea
push
push
call
add
lea
push
push
push
call
push
lea
push
push
push
call
mov
mov
push
push
push
push
call
inc
cmp
jl
mov
push
push
push
push
call
push
push
push
push
call
mov
test
je
xor
test
jle
push
push
lea
push
push
call
add
lea
push
push
push
call
push
lea
push
push
push
call
mov
mov
push
push
push
push
call
inc
cmp
jl
push
push
push
push
call
cmp
jne
mov
add
push
jmp
movl
add
push
mov
call
push
lea
push
push
push
push
push
call
lea
mov
push
call
lea
call
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
push
mov
lea
call
mov
mov
lea
cmp
mov
mov
jne
mov
jmp
mov
cmp
je
mov
cmp
je
mov
mov
cmp
jne
mov
lea
mov
lea
call
mov
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
jmp
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
mov
mov
xor
cmp
jne
mov
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
jne
jmp
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
cmp
jne
jmp
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
mov
jmp
mov
cmp
jne
mov
mov
jmp
mov
mov
jmp
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
lea
call
mov
mov
mov
cmp
je
push
mov
call
add
cmp
jne
mov
push
call
push
mov
mov
mov
call
mov
add
mov
pop
dec
pop
mov
mov
mov
pop
mov
pop
add
ret
nop
nop
nop
nop
push
mov
push
push
mov
cmp
mov
mov
je
push
push
mov
mov
push
call
mov
mov
mov
cmp
je
push
mov
call
add
cmp
jne
mov
push
call
xor
push
mov
mov
mov
call
mov
add
cmp
mov
jne
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
cmp
je
mov
cmp
je
mov
mov
cmp
jne
mov
pop
ret
mov
mov
cmp
jne
mov
mov
mov
cmp
je
mov
cmp
je
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
cmp
je
push
lea
mov
call
add
add
cmp
jne
pop
mov
push
call
xor
add
mov
mov
mov
mov
test
je
push
call
add
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
test
jne
or
mov
jmp
nop
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
push
push
push
mov
push
call
lea
mov
call
movl
lea
mov
call
movl
lea
mov
call
movl
lea
mov
call
movl
lea
mov
call
movl
lea
mov
call
movl
lea
mov
call
movl
lea
mov
call
movl
lea
mov
call
movl
lea
mov
call
xor
movl
mov
mov
mov
mov
mov
movl
mov
pop
pop
ret
nop
nop
nop
nop
nop
push
mov
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
nop
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
call
mov
test
je
push
push
mov
push
push
push
push
call
lea
lea
push
push
mov
call
lea
push
push
push
push
call
add
lea
push
push
mov
call
lea
push
push
push
push
call
push
mov
call
push
mov
call
pop
pop
pop
add
ret
push
push
push
push
call
push
lea
call
push
lea
call
pop
add
ret
nop
sub
push
mov
push
call
mov
test
je
push
push
mov
push
push
push
push
call
lea
lea
push
push
mov
call
lea
push
push
push
push
call
add
lea
push
push
mov
call
lea
push
push
push
push
call
push
mov
call
push
mov
call
pop
pop
pop
add
ret
push
push
push
push
call
push
lea
call
push
lea
call
pop
add
ret
nop
sub
push
mov
push
call
mov
test
je
push
push
mov
push
push
push
push
call
lea
lea
push
push
mov
call
lea
push
push
push
push
call
add
lea
push
push
mov
call
lea
push
push
push
push
call
push
mov
call
push
mov
call
pop
pop
pop
add
ret
push
push
push
push
call
push
lea
call
push
lea
call
pop
add
ret
nop
sub
push
mov
push
call
mov
test
je
push
push
mov
push
push
push
push
call
lea
lea
push
push
mov
call
lea
push
push
push
push
call
add
lea
push
push
mov
call
lea
push
push
push
push
call
push
mov
call
push
mov
call
pop
pop
pop
add
ret
push
push
push
push
call
push
lea
call
push
lea
call
pop
add
ret
nop
sub
push
mov
push
call
mov
test
je
push
push
mov
push
push
push
push
call
lea
lea
push
push
mov
call
lea
push
push
push
push
call
add
lea
push
push
mov
call
lea
push
push
push
push
call
push
mov
call
push
mov
call
pop
pop
pop
add
ret
push
push
push
push
call
push
lea
call
push
lea
call
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
push
push
push
push
push
mov
push
call
mov
mov
push
lea
push
push
push
push
push
call
lea
lea
push
mov
call
push
lea
push
push
push
push
push
call
lea
lea
push
call
mov
test
je
push
mov
call
push
jmp
push
mov
call
push
lea
call
push
push
push
push
call
push
lea
push
push
push
push
push
mov
call
lea
lea
push
mov
call
push
lea
push
push
push
push
push
call
lea
lea
push
call
mov
test
je
push
mov
call
push
jmp
push
mov
call
push
lea
call
push
push
push
push
call
mov
push
lea
push
push
push
push
push
call
lea
lea
push
mov
call
push
lea
push
push
push
push
push
call
lea
lea
push
call
mov
test
je
push
mov
call
push
jmp
push
mov
call
push
lea
call
push
push
push
push
call
push
lea
push
push
push
push
push
mov
call
lea
lea
push
mov
call
push
lea
push
push
push
push
push
call
lea
lea
push
call
mov
test
je
push
mov
call
push
jmp
push
mov
call
push
lea
call
push
push
push
push
call
mov
push
lea
push
push
push
push
push
call
lea
lea
push
mov
call
push
lea
push
push
push
push
push
call
lea
lea
push
mov
call
test
je
push
mov
call
push
jmp
push
mov
call
push
mov
call
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
call
pop
pop
pop
pop
add
ret
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
push
lea
mov
mov
call
mov
xor
mov
cltd
sub
sar
test
jle
mov
mov
push
lea
mov
call
mov
mov
imul
mov
add
lea
add
push
push
call
lea
lea
push
call
mov
inc
mov
cltd
sub
sar
cmp
jl
lea
lea
push
call
mov
xor
mov
test
jle
mov
mov
xor
mov
lea
xor
push
push
call
mov
movzbw
add
lea
lea
lea
shl
add
inc
lea
mov
cmp
jl
mov
lea
push
mov
call
lea
call
lea
call
lea
call
mov
pop
pop
add
ret
nop
nop
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
jbe
mov
and
inc
push
shr
mov
mov
mov
mov
mov
add
dec
jne
pop
ret
nop
nop
nop
nop
nop
sub
mov
xor
push
push
mov
push
push
mov
rep
mov
mov
mov
lea
and
push
push
push
call
add
lea
push
push
push
push
push
push
push
call
test
mov
je
push
push
push
push
push
push
push
push
call
test
je
mov
test
je
mov
xor
mov
mov
rep
mov
mov
rep
mov
mov
and
or
shl
mov
mov
sar
test
jne
mov
push
push
push
push
push
push
push
push
movb
mov
mov
mov
movl
call
test
je
mov
mov
lea
lea
push
push
rep
movb
call
lea
or
xor
add
repnz
not
sub
mov
mov
mov
shr
rep
mov
and
rep
mov
push
call
mov
inc
cmp
mov
jb
pop
pop
pop
pop
add
ret
mov
push
call
pop
pop
pop
pop
add
ret
mov
push
call
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
mov
push
push
xor
mov
mov
push
lea
push
push
call
add
lea
push
push
push
push
push
push
push
call
mov
cmp
mov
je
movl
mov
xor
lea
push
rep
stos
lea
push
stos
push
movl
movl
movl
movl
call
mov
add
lea
lea
push
push
mov
push
push
lea
push
push
push
push
movb
call
test
je
mov
test
je
mov
mov
lea
cmp
ja
lea
mov
lea
mov
rep
mov
add
cmpb
jne
dec
jne
mov
lea
add
mov
mov
mov
lea
mov
rep
mov
add
cmpb
jne
dec
jne
mov
mov
add
movl
mov
mov
inc
cmp
mov
jl
push
call
mov
inc
cmp
mov
jl
mov
pop
pop
pop
pop
add
ret
push
call
mov
pop
pop
pop
pop
add
ret
nop
nop
mov
mov
push
xor
mov
mov
mov
mov
mov
mov
mov
and
or
mov
mov
push
mov
push
shl
mov
mov
push
push
push
mov
movl
push
mov
push
push
call
pop
ret
nop
sub
push
push
mov
push
xor
push
mov
mov
mov
lea
push
push
push
call
add
lea
push
push
push
push
push
push
push
call
mov
cmp
je
xor
lea
mov
push
mov
push
mov
lea
mov
push
push
mov
push
push
mov
push
push
movb
mov
mov
call
test
je
mov
test
je
mov
xor
lea
mov
rep
mov
lea
shr
mov
mov
rep
and
mov
neg
sbb
and
add
stos
mov
lea
mov
push
push
lea
push
lea
push
push
push
call
add
test
je
mov
mov
lea
cmp
ja
mov
mov
lea
lea
mov
rep
mov
add
cmpb
jne
dec
jne
mov
lea
add
mov
mov
mov
lea
mov
rep
mov
add
cmpb
jne
dec
jne
mov
movl
add
xor
mov
push
call
mov
inc
cmp
mov
jb
mov
pop
pop
pop
pop
add
ret
push
call
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
call
test
je
xor
pop
add
ret
push
push
push
push
push
push
push
call
mov
push
call
mov
mov
mov
mov
mov
push
push
mov
mov
call
push
push
mov
call
mov
xor
cmp
jge
mov
cmp
jge
mov
mov
cmp
jle
mov
cmp
jle
mov
mov
mov
sub
sub
push
push
push
call
push
push
call
mov
mov
mov
push
push
push
push
push
push
push
push
push
call
mov
push
push
call
push
mov
mov
call
push
call
pop
pop
mov
pop
pop
add
ret
nop
nop
nop
nop
sub
push
push
push
push
xor
push
push
push
push
mov
mov
call
mov
mov
push
push
call
push
push
mov
call
imul
push
call
cmp
jg
mov
mov
mov
shl
shl
mov
mov
lea
push
push
push
call
mov
mov
and
mov
imul
add
mov
cltd
and
movl
add
mov
mov
mov
sar
imul
shl
mov
movw
lea
mov
push
push
mov
mov
mov
mov
mov
mov
call
push
mov
call
mov
lea
mov
push
rep
mov
call
mov
test
je
push
call
mov
push
push
push
call
push
mov
call
jmp
cmp
jg
mov
jmp
cmp
jg
mov
jmp
xor
cmp
setg
dec
and
add
jmp
mov
mov
mov
mov
mov
push
push
lea
push
push
push
push
push
call
test
je
push
push
push
call
push
call
push
push
call
mov
push
push
push
push
push
push
push
call
mov
cmp
jne
pop
pop
pop
xor
pop
add
ret
xor
lea
push
push
lea
lea
mov
push
add
push
push
movw
mov
mov
mov
mov
call
mov
mov
lea
push
push
push
push
push
call
mov
push
call
push
call
push
call
pop
pop
pop
mov
pop
add
ret
nop
nop
sub
push
push
call
lea
push
push
call
mov
lea
add
push
mov
call
mov
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
push
mov
mov
xor
mov
mov
mov
pop
ret
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
push
call
xor
add
mov
mov
mov
ret
call
jmp
nop
nop
nop
nop
nop
nop
push
mov
mov
xor
mov
mov
mov
pop
ret
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
push
call
xor
add
mov
mov
mov
ret
call
jmp
nop
nop
nop
nop
nop
nop
push
mov
mov
xor
mov
mov
mov
pop
ret
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
push
call
xor
add
mov
mov
mov
ret
call
jmp
nop
nop
nop
nop
nop
nop
push
mov
mov
xor
mov
mov
mov
pop
ret
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
push
mov
push
mov
cmp
je
lea
call
mov
call
add
cmp
jne
mov
push
call
add
xor
mov
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
add
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
add
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
add
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
add
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
add
mov
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
add
mov
ret
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
mov
mov
ret
push
call
pop
ret
nop
nop
nop
nop
mov
call
mov
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
push
mov
call
push
mov
call
ret
nop
push
call
pop
ret
nop
nop
nop
nop
mov
call
mov
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
mov
sub
mov
mov
push
push
push
xor
push
mov
call
mov
add
lea
mov
mov
movl
call
cmp
jne
mov
mov
mov
xor
mov
mov
inc
mov
lea
call
cmp
je
push
call
add
mov
push
call
mov
mov
add
mov
mov
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
sub
mov
push
push
mov
xor
push
mov
cmp
mov
je
mov
cmp
jne
cmp
jne
mov
mov
cmp
mov
je
mov
mov
push
call
mov
push
lea
call
push
call
mov
add
cmp
mov
jne
mov
lea
push
mov
mov
mov
mov
mov
mov
mov
call
jmp
cmp
je
lea
mov
call
lea
push
push
mov
call
mov
cmp
jne
mov
push
call
add
lea
mov
mov
xor
call
mov
dec
mov
jne
mov
mov
lea
call
cmp
je
push
call
add
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
mov
sub
mov
mov
push
push
push
xor
push
mov
call
mov
add
lea
mov
mov
movl
call
cmp
jne
mov
mov
mov
xor
mov
mov
inc
mov
lea
call
cmp
je
push
call
add
mov
push
call
mov
mov
add
mov
mov
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
sub
mov
push
push
mov
xor
push
mov
cmp
mov
je
mov
cmp
jne
cmp
jne
mov
mov
cmp
mov
je
mov
mov
push
call
mov
push
lea
call
push
call
mov
add
cmp
mov
jne
mov
lea
push
mov
mov
mov
mov
mov
mov
mov
call
jmp
cmp
je
lea
mov
call
lea
push
push
mov
call
mov
cmp
jne
mov
push
call
add
lea
mov
mov
xor
call
mov
dec
mov
jne
mov
mov
lea
call
cmp
je
push
call
add
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
mov
sub
mov
mov
push
push
push
xor
push
mov
call
mov
add
lea
mov
mov
movl
call
cmp
jne
mov
mov
mov
xor
mov
mov
inc
mov
lea
call
cmp
je
push
call
add
mov
push
call
mov
mov
add
mov
mov
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
sub
mov
push
push
mov
xor
push
mov
cmp
mov
je
mov
cmp
jne
cmp
jne
mov
mov
cmp
mov
je
mov
mov
push
call
mov
push
lea
call
push
call
mov
add
cmp
mov
jne
mov
lea
push
mov
mov
mov
mov
mov
mov
mov
call
jmp
cmp
je
lea
mov
call
lea
push
push
mov
call
mov
cmp
jne
mov
push
call
add
lea
mov
mov
xor
call
mov
dec
mov
jne
mov
mov
lea
call
cmp
je
push
call
add
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
mov
push
lea
push
call
mov
lea
push
push
mov
call
mov
test
jne
push
call
add
lea
call
mov
push
mov
mov
mov
push
lea
push
push
call
add
lea
push
push
push
lea
call
test
jne
push
call
jmp
lea
lea
push
call
test
je
push
push
push
push
mov
mov
test
je
push
lea
call
cmp
jg
push
lea
call
mov
lea
push
push
lea
call
push
lea
call
lea
call
mov
push
call
mov
mov
add
lea
mov
sub
dec
push
push
lea
call
push
lea
call
lea
call
push
lea
call
lea
push
push
lea
call
push
lea
call
mov
mov
push
lea
mov
call
mov
or
xor
push
repnz
not
dec
mov
lea
push
call
test
je
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
movb
mov
xor
mov
push
lea
mov
call
mov
lea
push
push
push
lea
call
mov
mov
mov
push
lea
mov
call
mov
lea
push
push
push
lea
call
lea
lea
push
push
mov
call
mov
cmp
je
lea
mov
test
je
cmp
je
dec
mov
jmp
push
call
add
mov
mov
cmp
mov
mov
je
lea
mov
test
je
cmp
je
dec
mov
jmp
push
call
add
mov
mov
cmp
mov
mov
je
lea
mov
test
je
cmp
je
dec
mov
jmp
push
call
add
lea
mov
mov
mov
call
lea
push
lea
call
test
jne
pop
pop
pop
pop
lea
call
lea
call
lea
call
lea
call
lea
call
add
ret
nop
nop
nop
nop
sub
mov
push
push
lea
mov
call
mov
lea
mov
push
lea
call
lea
lea
push
push
mov
call
mov
lea
mov
lea
mov
push
push
lea
mov
call
mov
push
lea
mov
mov
call
push
lea
call
mov
mov
lea
push
mov
push
push
lea
movl
movl
movl
call
mov
mov
mov
test
jne
mov
push
lea
push
push
call
mov
add
lea
mov
push
call
lea
call
mov
test
je
mov
test
je
cmp
je
dec
mov
mov
pop
add
ret
dec
push
call
add
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
or
xor
xor
repnz
not
dec
jne
pop
pop
pop
ret
mov
lea
push
call
push
lea
call
cmp
jle
mov
lea
call
pop
mov
pop
pop
ret
nop
nop
nop
nop
sub
mov
push
push
call
add
call
mov
xor
cmp
mov
mov
jle
push
push
mov
push
push
mov
mov
mov
mov
movl
test
jle
add
mov
mov
lea
push
push
call
mov
mov
push
push
lea
push
push
call
add
lea
push
call
push
call
push
lea
call
push
push
call
mov
add
cmp
lea
je
call
mov
mov
inc
add
cmp
mov
jl
test
jne
mov
mov
mov
mov
inc
mov
add
mov
rep
mov
mov
mov
mov
inc
add
cmp
mov
mov
jl
mov
pop
pop
pop
pop
push
push
mov
call
add
ret
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
or
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
ret
mov
push
call
movl
mov
mov
mov
pop
pop
pop
mov
pop
ret
sub
push
call
mov
push
push
lea
push
push
call
add
lea
push
call
mov
lea
push
push
push
push
call
lea
push
push
push
push
call
pop
add
ret
nop
nop
nop
nop
sub
lea
push
push
push
push
push
push
call
mov
add
lea
push
call
call
mov
lea
push
push
push
push
mov
call
mov
mov
sub
test
jle
test
jne
push
push
push
lea
push
push
call
add
lea
push
call
lea
push
call
mov
add
lea
mov
push
push
push
push
call
pop
pop
add
ret
cmp
jne
lea
push
push
push
push
call
cmp
jne
movb
mov
lea
push
push
push
push
call
lea
push
push
push
push
call
pop
pop
add
ret
nop
nop
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
nop
nop
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
cmp
jge
mov
shl
add
shl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
push
call
add
mov
cmp
jne
inc
mov
jmp
mov
mov
mov
inc
mov
xor
jmp
mov
ret
mov
push
call
movl
mov
mov
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
push
call
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
shl
add
shl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
push
call
add
mov
cmp
jne
inc
mov
jmp
mov
mov
mov
push
push
mov
push
mov
push
mov
push
push
push
call
add
inc
mov
xor
jmp
mov
ret
mov
push
call
movl
mov
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
rep
mov
mov
rep
mov
mov
rep
mov
mov
rep
xor
mov
mov
mov
xor
mov
mov
mov
fwait
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
fwait
jmp
mov
push
push
lea
push
call
add
lea
push
call
mov
mov
cmp
je
mov
mov
mov
inc
mov
cmp
jg
fwait
movl
lea
lea
shl
lea
mov
mov
mov
mov
mov
cmp
je
cmp
je
cmp
je
mov
mov
fwait
movl
mov
xor
jmp
mov
mov
mov
mov
mov
fildl
flds
fdiv
mov
cltd
sub
sar
mov
fiaddl
fstps
fdivrs
mov
cltd
sub
sar
mov
fiaddl
fsts
fsubs
flds
fsubs
fld
fmul
fld
fmul
faddp
fsqrt
fstpl
fstp
fstp
cmp
je
cmp
je
cmp
jne
fwait
movl
mov
lea
lea
shl
add
mov
rep
inc
mov
mov
fwait
jmp
mov
ret
mov
push
jmp
fwait
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jge
mov
mov
mov
cmp
jle
movl
mov
lea
lea
shl
add
mov
rep
inc
mov
mov
lea
lea
shl
push
flds
call
push
flds
call
push
mov
push
mov
push
push
call
add
fwait
jmp
mov
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
call
lea
push
lea
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
call
lea
call
lea
mov
mov
mov
mov
mov
mov
mov
add
push
mov
call
mov
mov
mov
lea
lea
shl
add
mov
rep
inc
mov
mov
fwait
jmp
mov
ret
mov
push
jmp
fwait
movl
mov
test
jle
mov
test
jle
mov
push
mov
push
fildl
push
fstps
fildl
push
fstps
call
add
call
mov
mov
fldl
fcompl
fnstsw
test
jne
cmp
jg
mov
test
jle
mov
test
jle
mov
mov
mov
push
push
lea
push
call
add
mov
lea
rep
movsw
lea
lea
or
xor
repnz
not
sub
mov
mov
mov
shr
rep
mov
and
rep
lea
mov
mov
mov
movl
mov
lea
lea
shl
add
mov
rep
inc
mov
mov
fwait
jmp
mov
ret
mov
push
call
movl
mov
inc
mov
mov
fwait
jmp
mov
ret
mov
push
call
movl
mov
mov
mov
mov
xor
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
fwait
jmp
mov
ret
mov
movl
mov
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
lea
cmp
jle
push
mov
push
push
mov
mov
cmp
mov
jge
lea
fldl
fcompl
fnstsw
test
jne
mov
mov
mov
rep
mov
mov
mov
rep
mov
mov
mov
rep
mov
mov
inc
lea
add
cmp
jl
inc
lea
add
mov
lea
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
push
mov
test
jle
push
push
push
mov
push
mov
mov
cmp
mov
jge
lea
fldl
fcompl
fnstsw
test
jne
mov
mov
mov
rep
mov
mov
mov
rep
mov
mov
mov
rep
mov
mov
inc
add
cmp
jl
inc
add
mov
lea
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
xor
call
call
mov
test
mov
jg
mov
pop
ret
nop
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
mov
xor
mov
mov
cmp
jge
lea
mov
add
lea
sub
add
lea
shl
mov
mov
mov
mov
mov
mov
inc
mov
jmp
mov
ret
mov
movl
mov
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
movl
mov
mov
mov
jmp
mov
ret
mov
or
mov
cmp
jne
movb
push
push
push
push
lea
push
call
add
lea
push
push
push
push
mov
call
mov
test
jne
push
push
push
push
lea
push
call
add
lea
push
call
lea
push
call
add
mov
mov
lea
push
push
push
push
mov
call
jmp
mov
cmp
jne
lea
push
push
push
push
call
movb
cmp
jne
lea
push
push
push
push
call
lea
push
push
push
push
call
push
call
movb
mov
mov
pop
pop
pop
mov
pop
ret
movb
mov
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
nop
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
call
mov
lea
shl
mov
test
jne
mov
movb
push
movb
movb
movb
movb
movb
movb
movb
call
add
test
je
mov
push
shl
add
mov
mov
mov
lea
push
mov
call
add
pop
add
ret
mov
test
je
mov
lea
lea
shl
cltd
idiv
cmp
jle
mov
mov
push
xor
mov
push
push
call
add
pop
add
ret
nop
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
nop
nop
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
nop
nop
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
nop
nop
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
flds
fsubs
flds
fsubs
fld
fmul
fld
fmul
faddp
fsqrt
fstp
fstp
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
push
mov
mov
mov
mov
push
lea
push
push
lea
call
xor
mov
push
lea
call
mov
cmp
je
lea
push
push
lea
call
push
lea
call
lea
call
push
lea
call
mov
lea
push
push
lea
call
push
lea
call
lea
call
mov
lea
mov
sub
dec
push
push
lea
call
push
lea
call
lea
call
mov
push
call
mov
mov
push
call
mov
mov
add
lea
mov
lea
sub
dec
push
push
call
push
lea
call
lea
call
inc
add
jmp
lea
mov
movl
call
lea
call
lea
call
lea
call
lea
call
pop
pop
pop
pop
add
ret
mov
call
push
mov
push
push
lea
push
push
push
push
push
call
lea
lea
push
push
push
push
call
add
lea
lea
push
push
push
push
push
push
call
push
lea
mov
push
call
call
mov
add
lea
test
jle
and
mov
shl
mov
rep
pop
pop
add
ret
nop
push
mov
xor
mov
inc
test
jle
push
push
mov
mov
mov
sub
mov
inc
mov
mov
mov
mov
add
inc
cmp
jl
movl
pop
pop
pop
ret
mov
pop
movl
ret
nop
nop
nop
nop
nop
nop
nop
mov
xor
mov
cmp
je
add
inc
cmp
jl
or
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
fildl
push
push
push
push
fstps
fildl
mov
xor
mov
fstps
mov
mov
mov
push
push
push
push
call
add
call
cmp
jle
push
push
call
add
mov
xor
lea
rep
add
inc
cmp
jl
pop
pop
pop
pop
ret
nop
push
mov
and
sub
push
push
push
push
xor
mov
lea
cmp
jge
lea
fldl
fcompl
fnstsw
test
jne
mov
mov
lea
rep
mov
mov
mov
rep
mov
lea
mov
rep
add
cmp
jl
add
mov
cmp
jl
pop
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
flds
push
call
flds
push
call
push
push
call
add
call
mov
xor
test
mov
jle
push
push
mov
push
mov
mov
mov
push
call
add
cmp
jg
mov
mov
mov
rep
mov
inc
add
mov
mov
mov
add
dec
mov
jne
pop
pop
mov
pop
pop
add
ret
mov
pop
add
ret
nop
push
mov
push
push
push
push
xor
cmp
jne
pop
pop
pop
xor
pop
pop
ret
mov
lea
lea
shl
cltd
idiv
cmp
jl
pop
pop
pop
xor
pop
pop
ret
mov
mov
mov
mov
mov
mov
push
mov
push
push
push
call
mov
mov
add
cmp
jne
incl
jmp
mov
mov
mov
mov
mov
push
push
push
push
call
mov
add
cmp
jle
push
call
add
cmp
lea
jne
mov
mov
jmp
lea
lea
mov
shl
add
rep
flds
call
flds
push
call
push
call
mov
push
push
call
add
cmp
jg
mov
xor
push
mov
mov
call
add
push
call
mov
add
inc
cmp
mov
jl
pop
pop
pop
mov
pop
pop
ret
push
call
mov
lea
lea
shl
flds
call
flds
push
call
flds
push
call
flds
push
call
push
call
mov
fildl
fadds
call
fildl
push
fadds
call
push
call
add
push
call
pop
pop
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
xor
cmp
mov
mov
jle
push
push
push
mov
mov
flds
call
flds
push
call
push
call
mov
add
cmp
jge
cmp
jle
lea
mov
mov
rep
mov
inc
add
mov
mov
mov
mov
inc
add
cmp
mov
jl
pop
pop
mov
pop
pop
add
ret
mov
pop
add
ret
nop
nop
nop
nop
push
mov
xor
test
jne
pop
ret
push
mov
xor
test
jle
mov
cmp
je
inc
add
cmp
jl
pop
pop
ret
lea
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
xor
test
jne
pop
ret
push
mov
xor
test
jle
mov
cmp
je
inc
add
cmp
jl
pop
pop
ret
lea
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
call
mov
xor
xor
test
jle
mov
mov
cmp
je
inc
add
cmp
jl
pop
pop
ret
lea
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
test
je
mov
test
je
mov
push
push
push
lea
push
push
lea
shl
cltd
idiv
mov
mov
mov
lea
lea
shl
cltd
idiv
mov
call
mov
cmp
jne
push
push
push
push
call
cmp
jl
push
push
push
push
call
push
call
add
push
call
push
push
push
push
call
cmp
jne
push
push
push
push
call
cmp
jl
push
push
push
push
call
push
call
add
push
call
push
push
push
push
call
cmp
pop
jne
push
push
push
push
call
cmp
jl
push
push
push
push
call
push
call
add
push
call
push
push
push
push
call
cmp
jne
push
push
push
push
call
cmp
jl
push
push
push
push
call
push
call
add
push
call
pop
pop
pop
ret
nop
mov
push
test
push
je
mov
test
je
mov
mov
push
push
lea
push
push
lea
shl
cltd
idiv
mov
call
cmp
jne
push
push
push
push
call
cmp
jl
push
call
add
cmp
jne
push
call
pop
mov
pop
ret
pop
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
test
push
je
mov
test
je
mov
test
je
mov
lea
lea
shl
cltd
idiv
cmp
jge
mov
mov
push
push
lea
push
push
lea
shl
cltd
idiv
mov
call
cmp
jne
mov
test
jne
push
push
push
push
call
cmp
jl
call
push
call
push
call
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
sub
lea
push
push
push
push
call
mov
mov
add
lea
push
push
push
push
call
add
ret
nop
nop
nop
push
push
push
push
push
push
call
mov
xor
test
mov
jle
push
mov
push
push
push
push
push
call
add
mov
inc
add
cmp
jl
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
push
call
mov
xor
test
mov
jle
push
mov
push
push
push
push
push
call
add
mov
inc
add
cmp
jl
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
call
mov
xor
test
jle
mov
mov
push
call
add
test
jle
lea
lea
shl
add
fldl
fcompl
fnstsw
test
jne
mov
inc
add
cmp
jl
pop
xor
pop
ret
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
push
call
mov
xor
test
mov
jle
push
mov
push
push
push
push
push
call
add
mov
inc
add
cmp
jl
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
xor
test
jne
pop
ret
push
mov
xor
test
jle
mov
cmp
je
inc
add
cmp
jl
pop
pop
ret
lea
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
test
push
jle
fldl
fcompl
fnstsw
test
je
mov
push
call
mov
mov
mov
add
rep
mov
mov
mov
rep
lea
mov
lea
mov
shl
add
rep
pop
pop
ret
xor
test
jle
mov
mov
mov
mov
push
mov
push
push
push
call
fcompl
add
fnstsw
test
jne
mov
inc
add
cmp
jl
pop
pop
ret
lea
push
lea
shl
mov
push
call
mov
mov
mov
lea
rep
mov
mov
mov
add
rep
lea
mov
pop
lea
mov
shl
add
rep
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
call
call
mov
xor
push
push
push
push
call
push
push
push
push
mov
call
cmp
mov
jne
movl
mov
mov
cmp
mov
jle
push
movl
mov
mov
push
call
add
test
jle
fldl
fcompl
fnstsw
test
je
incl
mov
mov
inc
lea
mov
add
rep
mov
mov
mov
inc
add
cmp
mov
jl
mov
pop
mov
mov
mov
push
push
push
push
push
lea
push
push
mov
call
mov
add
lea
push
call
cmp
jle
push
call
pop
pop
mov
pop
add
ret
call
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
push
call
call
push
push
push
push
call
cmp
jne
mov
xor
cmp
mov
mov
jle
mov
mov
mov
xor
test
jle
mov
mov
cmp
je
inc
add
cmp
jl
mov
mov
mov
rep
mov
inc
add
mov
mov
mov
inc
add
cmp
mov
jl
mov
mov
jmp
mov
xor
cmp
mov
mov
jle
mov
mov
mov
xor
test
jle
mov
mov
cmp
je
inc
add
cmp
jl
jmp
mov
mov
mov
rep
mov
inc
add
mov
mov
mov
inc
add
cmp
mov
jl
mov
mov
xor
push
push
push
push
call
test
jne
mov
mov
cmp
mov
jle
mov
mov
mov
xor
test
jle
mov
mov
mov
cmp
jne
mov
test
jg
mov
mov
mov
push
mov
push
push
push
call
fcompl
add
fnstsw
test
jne
mov
inc
add
cmp
jl
lea
mov
mov
rep
mov
inc
add
mov
mov
mov
inc
add
cmp
mov
jl
mov
mov
push
call
mov
add
test
jle
push
call
mov
xor
xor
test
mov
jbe
lea
mov
lea
shl
mov
mov
lea
push
lea
mov
shl
push
mov
mov
push
push
call
fcompl
add
fnstsw
test
jne
push
call
mov
mov
lea
lea
mov
shl
add
inc
rep
mov
add
jmp
push
call
jmp
mov
mov
inc
cmp
mov
jb
mov
movb
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
xor
mov
mov
push
push
push
push
push
call
add
test
je
push
push
push
push
push
call
push
push
push
push
push
mov
call
add
mov
inc
add
inc
lea
cmp
jl
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
push
push
push
push
push
call
mov
xor
test
jle
push
mov
push
push
push
push
push
call
add
mov
inc
add
cmp
jl
pop
mov
pop
pop
ret
mov
pop
pop
ret
nop
nop
push
push
push
push
push
push
call
mov
xor
test
jle
push
mov
push
push
push
push
push
call
add
mov
inc
add
cmp
jl
pop
mov
pop
pop
ret
mov
pop
pop
ret
nop
nop
sub
push
xor
push
call
add
call
mov
test
jle
push
push
push
mov
mov
mov
test
jle
mov
mov
shl
add
mov
lea
mov
mov
cmp
jne
mov
mov
mov
inc
rep
add
mov
add
dec
mov
jne
mov
add
dec
mov
jne
pop
pop
mov
pop
pop
add
ret
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
xor
mov
mov
push
push
push
push
push
call
add
test
je
push
push
push
push
push
call
push
push
push
push
push
mov
call
add
mov
inc
add
inc
lea
cmp
jl
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
mov
xor
push
test
jle
mov
mov
cmp
je
inc
add
cmp
jl
or
pop
ret
inc
pop
ret
nop
nop
nop
nop
nop
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
push
push
call
mov
xor
test
jle
push
mov
push
push
push
push
push
call
add
mov
inc
add
cmp
jl
pop
mov
pop
pop
ret
mov
pop
pop
ret
nop
nop
sub
push
call
add
call
mov
movl
test
jle
mov
push
push
mov
push
push
mov
xor
test
jle
mov
mov
mov
cmp
jne
mov
mov
push
push
push
lea
push
push
call
add
lea
push
call
mov
mov
push
push
call
add
push
call
mov
inc
add
cmp
jl
mov
mov
inc
add
cmp
mov
jl
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
push
push
push
call
test
je
push
call
add
call
mov
xor
test
jle
mov
mov
xor
test
jle
mov
mov
cmp
je
inc
add
cmp
jl
inc
add
cmp
jl
call
mov
xor
test
jle
mov
mov
push
call
add
test
jle
mov
shl
add
mov
mov
cmp
jl
mov
inc
add
cmp
jl
pop
pop
pop
xor
pop
ret
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
call
mov
test
je
call
mov
push
push
push
push
call
mov
push
push
lea
push
push
call
mov
add
lea
push
call
push
lea
push
push
call
add
lea
lea
push
push
push
push
call
push
mov
call
mov
add
test
jne
push
push
push
call
pop
pop
pop
pop
add
ret
test
jne
push
call
lea
push
lea
shl
mov
lea
push
push
call
mov
push
call
mov
add
push
call
mov
push
call
add
push
call
mov
push
push
call
add
push
jmp
push
call
push
call
mov
add
push
call
call
push
call
call
call
call
call
lea
lea
shl
mov
push
call
add
pop
pop
pop
pop
add
ret
nop
nop
nop
sub
call
mov
test
je
call
push
push
push
push
call
push
call
add
test
jne
push
push
push
call
add
ret
lea
push
push
lea
shl
mov
lea
push
call
mov
add
push
call
mov
push
push
call
add
push
call
mov
xor
lea
mov
rep
stos
lea
stos
test
movw
mov
jle
lea
mov
mov
add
mov
mov
mov
add
dec
jne
lea
push
push
call
add
push
call
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
call
push
call
mov
add
xor
test
mov
mov
jle
push
push
mov
mov
mov
xor
xor
test
jle
mov
mov
cmp
jne
mov
mov
cmp
jg
mov
inc
add
cmp
jl
test
jne
mov
lea
mov
mov
inc
add
rep
mov
mov
mov
inc
add
cmp
mov
jl
mov
pop
pop
test
mov
je
call
push
push
push
push
call
push
call
add
test
jne
push
push
push
call
pop
pop
add
ret
mov
mov
shl
add
mov
sub
mov
jmp
lea
lea
shl
mov
lea
push
call
mov
add
push
call
mov
push
push
call
add
push
call
mov
xor
lea
mov
rep
stos
lea
stos
test
movw
mov
jle
lea
mov
mov
add
mov
mov
mov
add
dec
jne
lea
push
push
call
add
pop
pop
add
ret
nop
push
push
push
push
call
push
call
mov
add
xor
test
jle
mov
mov
xor
test
jle
mov
mov
cmp
je
inc
add
cmp
jge
jmp
mov
shl
add
cmpl
jl
inc
add
cmp
jge
jmp
pop
pop
pop
mov
pop
ret
pop
pop
pop
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
sub
lea
push
push
push
push
call
mov
mov
add
lea
push
push
push
push
call
add
ret
nop
nop
nop
push
push
mov
push
push
xor
mov
mov
push
push
push
push
call
add
cmp
jne
push
push
push
push
call
push
push
push
push
mov
call
add
mov
inc
push
call
inc
add
lea
cmp
jl
pop
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
call
mov
lea
push
push
push
call
mov
add
test
movl
jle
push
mov
push
mov
push
push
mov
push
call
mov
mov
mov
lea
sub
add
cmp
jle
mov
push
call
mov
lea
push
push
push
call
add
lea
push
call
push
call
push
call
add
mov
mov
inc
add
cmp
mov
jl
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
push
push
push
mov
mov
mov
push
lea
push
push
call
mov
add
lea
push
call
push
push
lea
push
push
call
add
lea
push
call
lea
lea
push
push
push
push
call
mov
push
mov
call
lea
lea
shl
mov
lea
push
call
add
push
call
xor
test
jle
lea
lea
push
push
push
push
call
add
lea
lea
lea
push
push
push
push
lea
push
push
call
lea
lea
push
call
push
lea
call
cmp
jle
mov
lea
mov
sub
dec
push
push
lea
call
push
lea
call
lea
call
mov
push
call
mov
lea
push
push
push
call
add
lea
push
call
mov
push
push
call
mov
add
jmp
mov
push
push
call
add
test
jne
mov
push
call
add
push
call
mov
push
push
call
add
test
jne
mov
push
call
add
push
call
push
call
mov
cmp
jl
lea
call
lea
call
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
sub
mov
push
push
mov
push
mov
mov
push
lea
push
push
call
mov
add
lea
push
call
mov
lea
push
push
push
push
call
add
lea
push
call
mov
lea
push
push
push
push
call
mov
push
mov
call
add
test
jne
push
call
lea
call
lea
call
pop
pop
xor
pop
add
ret
lea
push
lea
shl
mov
lea
push
call
add
push
call
xor
test
jle
lea
lea
push
push
push
call
add
lea
lea
lea
push
mov
push
push
push
push
push
call
lea
lea
push
call
push
lea
call
cmp
jle
mov
lea
mov
sub
dec
push
push
lea
call
push
lea
call
lea
call
mov
push
push
call
add
test
jne
mov
jmp
mov
push
call
add
mov
push
lea
push
push
call
add
lea
push
call
mov
push
push
call
mov
add
jmp
mov
push
push
call
add
test
jne
mov
push
call
add
push
call
mov
push
push
call
add
test
jne
mov
push
call
add
push
call
push
call
mov
cmp
jl
lea
call
lea
call
pop
pop
pop
mov
pop
add
ret
nop
nop
nop
sub
mov
push
mov
mov
mov
push
push
call
add
test
je
push
xor
push
mov
mov
mov
mov
mov
call
push
lea
mov
mov
call
push
lea
call
cmp
jle
push
lea
push
lea
call
push
lea
call
lea
call
push
lea
call
cmp
jle
lea
push
push
lea
call
push
lea
call
lea
call
mov
push
call
push
lea
call
push
lea
call
lea
lea
push
call
push
lea
call
mov
push
call
lea
call
mov
push
push
push
lea
mov
call
test
je
lea
push
push
lea
call
test
je
mov
mov
and
and
mov
lea
mov
call
mov
mov
imul
add
cmp
jl
push
lea
push
push
call
mov
add
cmp
je
push
call
add
mov
imul
push
call
mov
add
imul
push
mov
push
mov
lea
call
movb
lea
call
mov
cmp
pop
jne
push
call
lea
call
lea
call
lea
call
xor
pop
add
ret
mov
push
push
call
add
test
je
push
call
push
mov
call
push
call
lea
call
lea
call
lea
call
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
flds
sub
mov
mov
mov
push
mov
mov
mov
push
xor
push
push
mov
mov
mov
mov
call
flds
mov
call
mov
push
lea
mov
mov
call
push
push
lea
call
mov
cmp
je
cmp
je
mov
xor
mov
mov
shl
mov
mov
push
push
lea
push
push
call
lea
push
call
mov
add
inc
cmp
jne
mov
mov
mov
jmp
cmp
je
mov
cmp
je
jmp
mov
shl
add
mov
mov
jmp
cmp
jge
mov
mov
jmp
mov
mov
cmp
jne
cmp
jne
mov
inc
cmp
mov
jl
cmp
jle
mov
push
mov
call
cmpl
jg
push
push
call
push
push
lea
push
push
call
lea
push
call
add
lea
call
pop
pop
pop
mov
pop
add
ret
mov
mov
movl
jmp
push
call
add
push
call
lea
call
pop
pop
pop
or
pop
add
ret
nop
nop
mov
mov
flds
sub
mov
mov
mov
push
mov
mov
mov
xor
mov
mov
mov
mov
call
flds
mov
call
mov
push
lea
mov
mov
call
push
push
lea
call
cmp
jne
lea
call
or
pop
add
ret
mov
shl
inc
mov
cmp
jne
lea
call
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
call
test
je
movl
call
lea
push
push
call
mov
test
je
push
push
push
push
movl
call
lea
mov
push
push
call
lea
or
xor
repnz
not
dec
mov
cmp
je
mov
dec
cmp
jne
movb
lea
or
xor
repnz
not
sub
lea
mov
mov
mov
push
shr
rep
mov
xor
and
push
rep
lea
or
repnz
not
sub
lea
mov
mov
mov
push
shr
rep
mov
push
and
rep
lea
push
call
lea
push
push
push
push
call
push
lea
push
push
push
push
call
push
lea
push
push
push
push
call
add
lea
push
push
push
push
push
call
push
lea
push
push
push
push
call
push
lea
push
push
push
push
call
push
lea
push
push
push
push
call
add
push
call
pop
pop
pop
add
ret
nop
nop
push
push
call
push
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
push
push
push
push
call
add
mov
lea
lea
push
push
push
push
push
push
call
lea
lea
push
push
push
push
push
push
call
lea
mov
push
call
lea
mov
push
call
lea
push
mov
call
mov
lea
push
call
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
mov
push
lea
call
mov
push
push
mov
lea
push
call
lea
push
call
add
push
call
mov
mov
mov
lea
call
lea
push
push
push
push
push
mov
call
mov
cmp
jl
mov
push
call
mov
cmp
jl
mov
mov
lea
push
push
push
call
mov
mov
mov
push
call
movw
push
call
mov
cmp
jne
mov
test
je
push
call
lea
push
push
mov
push
call
lea
call
mov
call
lea
push
call
mov
cmp
jge
push
call
mov
cmp
jne
push
call
mov
mov
mov
mov
push
call
mov
cmp
jge
push
push
push
call
mov
cmp
jne
push
call
mov
mov
mov
mov
push
call
mov
cmp
jge
push
push
push
call
lea
call
lea
push
push
push
push
push
call
mov
cmp
jl
mov
push
call
mov
cmp
jl
mov
mov
lea
push
push
push
call
mov
mov
mov
push
call
mov
cmp
jne
push
call
mov
mov
mov
mov
lea
push
push
call
mov
cmp
jge
push
push
push
call
push
mov
push
lea
call
mov
mov
movw
mov
mov
push
call
mov
cmp
jne
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
push
call
mov
xor
cmp
jge
push
mov
push
push
call
lea
push
call
mov
cmp
jge
push
call
lea
call
push
mov
mov
push
call
add
mov
cmp
je
push
mov
call
jmp
xor
mov
cmp
jne
push
call
push
mov
push
call
push
mov
push
call
lea
call
mov
call
push
mov
mov
push
call
add
mov
cmp
je
push
mov
call
jmp
xor
mov
cmp
jne
push
call
lea
call
mov
call
push
mov
mov
push
call
add
mov
cmp
je
push
mov
call
jmp
xor
mov
cmp
jne
push
call
push
mov
push
call
push
mov
push
call
push
mov
push
call
lea
call
mov
call
lea
push
call
mov
mov
xor
lea
rep
stos
stos
lea
mov
or
xor
repnz
not
sub
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
push
call
add
mov
cmp
je
push
mov
call
jmp
xor
mov
cmp
jne
push
call
push
mov
push
call
push
mov
push
call
push
mov
push
call
lea
call
mov
call
push
mov
mov
push
call
add
mov
cmp
je
lea
push
mov
call
jmp
xor
mov
cmp
jne
push
call
lea
call
mov
call
mov
cmp
jne
push
call
mov
mov
mov
mov
push
call
mov
cmp
jge
push
push
push
call
push
mov
mov
push
call
add
mov
cmp
je
push
mov
call
jmp
xor
mov
cmp
jne
push
call
push
mov
push
call
push
mov
push
call
push
mov
push
call
lea
call
mov
call
push
mov
mov
push
call
add
mov
cmp
je
mov
push
mov
call
jmp
xor
mov
cmp
jne
push
call
lea
call
mov
call
mov
cmp
jne
push
call
mov
mov
mov
mov
push
call
mov
cmp
jge
push
push
push
call
push
mov
mov
push
call
add
mov
cmp
je
push
mov
call
jmp
xor
mov
cmp
jne
push
call
push
mov
push
call
push
mov
push
call
push
mov
push
call
lea
call
mov
call
push
lea
call
mov
mov
push
mov
mov
push
call
add
mov
cmp
je
push
mov
call
jmp
xor
mov
cmp
jne
push
call
lea
call
mov
call
mov
cmp
jne
push
call
mov
mov
mov
mov
push
call
mov
cmp
jge
push
push
push
call
push
mov
mov
push
call
add
mov
cmp
je
push
mov
call
jmp
xor
mov
cmp
jne
push
call
push
mov
push
call
push
mov
push
call
push
mov
push
call
lea
call
mov
call
push
mov
mov
push
call
add
mov
cmp
je
push
mov
call
jmp
xor
mov
cmp
jne
push
call
lea
call
mov
call
mov
cmp
jne
push
call
mov
mov
mov
mov
push
call
mov
cmp
jge
push
push
push
call
push
mov
mov
push
call
add
mov
cmp
je
push
mov
call
jmp
xor
mov
cmp
jne
push
call
push
mov
push
call
push
mov
push
call
push
mov
push
call
lea
call
mov
call
push
mov
mov
push
call
add
mov
cmp
je
push
mov
call
jmp
xor
mov
cmp
jne
push
call
lea
call
mov
call
mov
cmp
jne
push
call
mov
mov
mov
mov
push
call
mov
cmp
jge
push
push
push
call
call
mov
mov
push
lea
push
push
call
push
push
call
add
mov
mov
push
call
add
mov
cmp
je
push
mov
call
jmp
xor
mov
cmp
jne
push
call
push
mov
push
call
push
mov
push
call
push
mov
push
call
lea
call
mov
call
push
mov
mov
push
call
add
mov
cmp
je
lea
push
mov
call
jmp
xor
mov
cmp
jne
push
call
lea
call
mov
call
mov
cmp
jne
push
call
mov
mov
mov
mov
push
call
mov
cmp
jge
push
push
push
call
add
mov
mov
mov
cmp
jne
push
call
mov
mov
mov
mov
push
call
mov
cmp
jge
push
push
push
call
mov
cmp
jne
push
call
mov
mov
mov
mov
push
call
mov
cmp
jge
push
push
push
call
mov
cmp
jne
push
call
mov
mov
mov
mov
push
call
mov
cmp
jge
push
push
push
call
mov
cmp
jne
push
call
mov
mov
mov
mov
push
call
mov
cmp
jge
push
push
push
call
mov
cmp
je
mov
push
call
lea
push
push
push
push
push
call
mov
cmp
jl
mov
push
call
mov
cmp
jl
mov
mov
lea
push
push
push
call
mov
mov
mov
push
call
push
mov
mov
push
call
add
mov
mov
cmp
je
mov
movl
push
call
mov
cmp
jne
mov
test
je
push
call
jmp
xor
mov
cmp
jne
push
call
push
lea
push
lea
call
mov
call
mov
call
push
lea
call
push
lea
call
mov
call
lea
push
call
mov
cmp
jge
push
call
mov
cmp
je
mov
push
call
mov
cmp
jne
push
call
mov
mov
mov
mov
lea
push
push
call
mov
cmp
jge
push
push
push
call
mov
mov
mov
mov
cmp
jne
push
call
mov
mov
lea
push
push
call
mov
cmp
jge
push
push
push
call
mov
mov
push
call
add
mov
cmp
je
push
push
mov
call
jmp
xor
mov
mov
cmp
jne
push
call
cmp
je
mov
cmp
jne
mov
push
call
mov
cmp
jne
cmp
je
push
call
mov
jmp
xor
push
lea
call
cmp
je
mov
call
mov
cmp
je
mov
push
call
mov
cmp
jne
push
call
mov
mov
mov
mov
lea
push
push
call
mov
cmp
jge
push
push
push
call
mov
mov
mov
mov
cmp
jne
push
call
mov
mov
lea
push
push
call
mov
cmp
jge
push
push
push
call
mov
mov
push
call
add
mov
cmp
je
push
push
mov
call
jmp
xor
mov
mov
cmp
jne
push
call
cmp
je
mov
cmp
jne
mov
push
call
mov
cmp
jne
cmp
je
push
call
mov
jmp
xor
push
mov
call
cmp
je
mov
lea
push
call
test
jne
mov
mov
push
mov
call
mov
cmp
je
mov
push
call
call
movl
lea
call
lea
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
lea
call
lea
call
lea
call
or
mov
mov
jmp
mov
ret
mov
lea
call
lea
call
or
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
mov
add
test
je
push
mov
push
movl
movl
call
test
mov
jne
test
je
push
call
pop
jmp
xor
test
mov
jne
push
call
mov
pop
pop
ret
nop
nop
nop
push
push
mov
mov
push
movl
movl
call
test
mov
jne
test
je
push
call
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
push
mov
test
movl
movl
je
test
je
push
call
push
push
call
test
mov
jne
push
call
mov
pop
pop
ret
mov
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
lea
push
call
test
jne
test
je
mov
test
je
push
call
mov
test
je
push
call
add
push
call
add
pop
xor
pop
ret
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
mov
test
je
push
call
add
testb
je
push
call
add
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
test
movw
mov
je
mov
push
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
push
mov
test
je
mov
jmp
xor
mov
test
je
mov
jmp
xor
mov
test
je
mov
jmp
xor
mov
push
push
push
push
call
mov
test
jge
push
push
push
call
mov
test
je
lea
push
call
test
jne
mov
test
je
push
call
mov
test
je
push
call
add
push
call
add
test
je
lea
push
call
test
jne
mov
test
je
push
call
mov
test
je
push
call
add
push
call
add
mov
test
je
lea
push
call
test
jne
mov
test
je
push
call
mov
test
je
push
call
add
push
call
add
pop
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
push
push
mov
test
mov
je
mov
jmp
xor
mov
push
push
call
mov
test
jge
push
push
push
call
test
je
lea
push
call
test
jne
mov
test
je
push
call
mov
test
je
push
call
add
push
call
add
pop
mov
pop
pop
ret
nop
nop
nop
nop
mov
push
push
push
push
mov
test
je
mov
jmp
xor
mov
test
je
mov
jmp
xor
mov
test
je
mov
jmp
xor
mov
test
je
mov
jmp
xor
mov
push
push
push
push
push
call
mov
test
jge
push
push
push
call
mov
mov
test
je
lea
push
call
test
jne
mov
test
je
push
call
mov
test
je
push
call
add
push
call
add
mov
test
je
lea
push
call
test
jne
mov
test
je
push
call
mov
test
je
push
call
add
push
call
add
mov
test
je
lea
push
call
test
jne
mov
test
je
push
call
mov
test
je
push
call
add
push
call
add
mov
test
je
lea
push
call
test
jne
mov
test
je
push
call
mov
test
je
push
call
add
push
call
add
pop
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
push
push
push
mov
test
mov
je
mov
jmp
xor
mov
push
push
call
mov
test
jge
push
push
push
call
test
je
lea
push
call
test
jne
mov
test
je
push
call
mov
test
je
push
call
add
push
call
add
pop
mov
pop
pop
ret
nop
nop
nop
nop
push
push
mov
push
test
mov
je
mov
jmp
xor
lea
mov
push
push
mov
sub
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
call
test
jge
push
push
push
call
mov
test
je
lea
push
call
test
jne
mov
test
je
push
call
mov
test
je
push
call
add
push
call
add
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
lea
mov
push
push
call
test
jge
push
push
push
call
mov
mov
pop
mov
pop
ret
mov
mov
pop
mov
pop
ret
nop
nop
nop
push
push
push
push
mov
mov
test
je
mov
jmp
xor
mov
sub
mov
mov
mov
push
mov
push
mov
mov
mov
mov
mov
mov
call
test
jge
push
push
push
call
test
je
lea
push
call
test
jne
mov
test
je
push
call
mov
test
je
push
call
add
push
call
add
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
call
test
setne
mov
neg
sbb
and
add
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
xor
mov
lea
push
push
push
push
call
mov
add
lea
push
push
push
push
call
mov
lea
and
push
push
push
call
add
lea
push
push
push
push
call
xor
lea
mov
push
push
push
call
add
lea
push
push
push
push
call
xor
lea
mov
push
push
push
call
add
lea
push
push
push
push
call
mov
lea
and
push
push
push
call
add
lea
push
push
push
push
call
xor
lea
mov
push
push
push
call
add
lea
push
push
push
push
call
xor
lea
mov
push
push
push
call
add
lea
push
push
push
push
call
mov
lea
and
push
push
push
call
add
lea
push
push
push
push
call
mov
lea
push
push
push
call
add
lea
push
push
push
push
call
xor
lea
mov
push
push
push
call
add
lea
push
push
push
push
call
xor
lea
mov
push
push
push
call
add
lea
push
push
push
push
call
mov
lea
and
push
push
push
call
add
lea
push
push
push
push
call
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
push
push
push
call
dec
neg
sbb
and
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
mov
push
xor
push
movl
mov
mov
mov
mov
mov
mov
lea
imul
add
add
cmpb
je
mov
sub
sub
cltd
mov
mov
sub
xor
sub
sub
cltd
xor
sub
add
mov
cmp
jg
mov
mov
mov
mov
add
inc
cmp
mov
jl
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
push
push
call
mov
mov
mov
mov
push
push
push
call
push
call
push
call
add
push
call
call
cltd
idivl
mov
call
cltd
idivl
mov
mov
mov
imul
add
cmpb
jne
push
push
call
add
cmp
jle
mov
push
mov
call
mov
mov
push
push
push
call
add
pop
pop
pop
pop
ret
nop
nop
nop
nop
flds
sub
push
push
push
push
call
flds
mov
lea
call
lea
add
lea
xor
lea
lea
inc
mov
mov
add
cmp
jl
xor
lea
lea
mov
mov
inc
add
cmp
jl
lea
mov
mov
mov
mov
dec
add
dec
jne
lea
mov
mov
mov
mov
dec
add
dec
jne
xor
lea
mov
mov
push
push
push
call
add
test
jl
mov
cmp
jg
test
jl
cmp
jg
mov
mov
imul
add
cmpb
ja
push
push
call
add
cmp
jge
cmp
jg
inc
add
cmp
jl
pop
pop
xor
pop
xor
pop
add
ret
mov
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
push
push
push
mov
push
xor
xor
test
mov
mov
jle
push
mov
mov
mov
push
push
call
add
cmp
jge
mov
lea
mov
inc
add
cmp
jl
mov
pop
pop
pop
pop
pop
ret
nop
push
push
push
push
mov
push
push
push
push
push
xor
call
mov
call
push
push
push
push
call
push
push
push
push
mov
call
mov
mov
test
jne
test
jne
mov
cmp
jne
mov
push
push
push
lea
mov
call
push
push
push
push
call
mov
push
push
call
add
test
jne
push
call
lea
call
pop
mov
pop
pop
pop
pop
ret
fildl
push
mov
mov
fstps
fildl
push
fstps
push
push
call
mov
push
push
fstp
call
add
test
je
lea
mov
push
movb
movb
call
mov
mov
push
mov
call
push
call
mov
add
push
call
lea
call
mov
pop
pop
pop
pop
pop
ret
mov
push
push
call
add
test
jne
mov
mov
test
jne
cmp
jne
push
call
mov
add
test
movb
jne
push
call
mov
add
test
jne
call
mov
inc
cmp
mov
jle
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
push
call
add
mov
mov
test
jne
cmp
jne
push
call
fildl
mov
mov
fstps
fildl
push
mov
fstps
push
push
call
add
call
cmp
mov
jle
test
je
push
call
add
jmp
mov
push
push
push
call
push
push
call
mov
mov
push
push
push
call
push
call
add
mov
mov
test
jne
cmpb
jne
push
call
mov
add
cmp
jne
push
call
add
push
call
call
flds
mov
mov
push
push
call
flds
push
call
push
push
call
add
test
jle
test
jle
movb
mov
mov
push
call
add
movb
jmp
push
call
add
push
call
push
movb
call
add
mov
lea
call
mov
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
call
add
push
push
push
push
call
test
jne
pop
ret
call
mov
mov
mov
push
push
push
push
call
mov
add
lea
lea
mov
shl
lea
lea
shl
sub
cmp
jg
cmp
je
xor
pop
ret
mov
pop
ret
nop
nop
sub
mov
push
push
push
push
push
push
push
lea
xor
mov
call
mov
push
push
push
push
call
mov
mov
test
jne
mov
test
jne
call
test
setne
mov
call
xor
mov
mov
push
push
push
call
mov
add
cmp
jne
test
jne
movb
jmp
cmp
jne
push
push
push
push
call
push
push
push
push
mov
call
push
push
push
push
mov
call
mov
mov
push
push
push
lea
mov
call
push
push
push
push
call
test
je
mov
test
je
mov
push
push
call
add
test
je
mov
test
je
mov
push
push
call
add
test
je
push
call
push
call
mov
mov
push
push
call
add
test
jne
test
jle
push
call
add
push
call
mov
jmp
lea
movb
push
mov
movb
call
mov
jmp
flds
call
sub
cltd
xor
sub
cmp
jg
flds
call
sub
cltd
xor
sub
cmp
jg
push
call
add
push
call
call
mov
movb
movb
lea
call
cmpb
jne
push
push
push
push
call
push
push
push
push
mov
call
push
push
push
push
mov
call
mov
mov
push
push
push
lea
mov
call
push
push
push
push
call
test
je
test
je
mov
push
push
call
add
test
je
test
je
mov
push
push
call
add
test
je
push
call
push
call
mov
mov
push
push
call
add
test
jne
test
jle
push
call
add
push
call
jmp
push
call
mov
add
movb
mov
mov
mov
jmp
lea
movb
push
mov
movb
call
jmp
flds
call
sub
cltd
xor
sub
cmp
jg
flds
call
sub
cltd
xor
sub
cmp
jg
push
call
mov
add
push
call
call
push
call
call
push
call
mov
movb
movb
jmp
push
call
push
push
push
movb
mov
mov
call
add
mov
lea
call
lea
call
pop
mov
pop
pop
pop
add
ret
lea
movb
call
lea
call
pop
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
mov
push
push
xor
xor
push
test
jle
mov
cmpl
jne
mov
mov
fildl
push
push
push
fstps
fildl
push
fstps
call
fcompl
add
fnstsw
test
jne
mov
inc
add
cmp
jl
pop
mov
pop
pop
ret
lea
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
lea
push
push
lea
call
mov
push
push
lea
push
push
mov
mov
call
mov
add
lea
push
push
push
push
call
mov
xor
test
mov
jle
inc
lea
push
push
push
call
add
lea
lea
lea
push
mov
push
push
push
push
push
call
lea
lea
push
call
mov
push
call
push
lea
call
mov
lea
push
push
lea
call
mov
push
call
mov
add
lea
mov
call
mov
lea
mov
sub
dec
push
push
lea
call
push
lea
call
lea
call
push
push
call
mov
add
push
call
push
lea
call
mov
lea
push
push
lea
call
mov
push
call
add
lea
mov
call
mov
mov
sub
lea
dec
lea
push
push
call
push
lea
call
lea
call
push
push
call
mov
add
push
call
push
lea
call
mov
lea
push
push
lea
call
mov
push
call
add
lea
mov
call
mov
lea
mov
sub
dec
push
lea
push
call
push
lea
call
lea
call
push
push
call
mov
add
push
call
push
lea
call
mov
lea
push
push
lea
call
mov
push
call
add
lea
mov
call
mov
lea
mov
sub
dec
push
push
lea
call
push
lea
call
lea
call
push
push
call
mov
add
push
call
mov
mov
mov
push
mov
push
push
push
push
push
call
fildl
add
fcomps
fnstsw
test
je
fildl
fcomps
fnstsw
test
jne
fildl
fcomps
fnstsw
test
je
fildl
fcomps
fnstsw
test
je
cmp
jl
jmp
push
call
add
lea
push
lea
call
mov
push
call
mov
lea
push
mov
call
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
pop
add
ret
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
push
mov
call
ret
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
push
mov
call
ret
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
jmp
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
push
mov
call
ret
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
jmp
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
push
mov
call
ret
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
call
mov
call
mov
call
mov
call
mov
call
mov
jmp
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
push
mov
call
ret
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
push
mov
call
ret
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
push
mov
call
ret
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
call
mov
call
mov
call
mov
call
mov
call
mov
jmp
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
push
mov
call
ret
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
jmp
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
push
mov
call
ret
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
jmp
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
push
mov
call
ret
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
jmp
nop
nop
mov
push
push
push
mov
push
call
lea
mov
call
movl
movl
mov
pop
pop
ret
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
lea
call
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
add
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
mov
call
push
push
lea
push
push
push
mov
call
push
push
push
push
push
mov
call
push
push
push
push
push
mov
call
push
push
push
push
push
mov
call
push
push
push
push
push
mov
call
push
push
push
push
push
mov
call
push
push
push
push
push
mov
call
push
push
push
push
push
mov
call
push
push
push
push
push
mov
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
mov
lea
push
push
call
mov
mov
mov
mov
sub
add
sub
mov
add
mov
sub
push
sub
push
push
push
push
mov
mov
mov
call
mov
mov
mov
sub
push
push
mov
sub
push
push
push
mov
call
mov
mov
mov
sub
push
push
mov
sub
push
push
push
mov
call
mov
mov
mov
sub
push
push
mov
sub
push
push
push
mov
call
mov
mov
mov
sub
push
push
mov
sub
push
push
push
mov
call
mov
mov
mov
sub
push
push
mov
sub
push
push
push
mov
call
mov
mov
mov
sub
push
push
mov
sub
push
push
push
mov
call
mov
mov
mov
sub
push
push
mov
sub
push
push
push
mov
call
mov
mov
mov
sub
push
push
mov
sub
push
push
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
mov
push
push
push
push
call
pop
mov
pop
add
ret
nop
nop
nop
nop
push
mov
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
mov
push
push
push
push
call
cmp
pop
ja
jmp
push
mov
call
mov
movl
ret
push
mov
call
mov
movl
ret
push
mov
call
mov
movl
ret
push
mov
call
mov
movl
ret
push
mov
call
mov
movl
ret
push
mov
call
mov
movl
ret
push
mov
call
mov
movl
ret
push
mov
call
mov
movl
ret
push
mov
call
mov
movl
ret
inc
int3
add
pop
int3
add
jne
add
mov
add
cmpsl
int3
add
ror
adc
int3
add
repnz
add
or
add
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
test
mov
je
test
je
mov
push
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
cmpl
jne
push
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
mov
push
push
push
push
mov
mov
mov
mov
mov
cmp
je
mov
mov
cmp
setl
test
je
mov
jmp
mov
cmp
jne
mov
test
je
push
push
mov
call
mov
mov
mov
mov
mov
add
push
push
call
mov
mov
add
inc
cmp
mov
je
cmp
jne
mov
mov
cmp
jl
mov
mov
mov
cmp
jne
mov
jmp
mov
mov
mov
cmp
jne
mov
mov
mov
jmp
cmp
jne
mov
mov
mov
mov
mov
cmp
je
mov
xor
cmp
jne
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
jne
mov
mov
push
call
mov
movl
mov
mov
mov
mov
mov
push
mov
call
jmp
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
jne
mov
mov
push
call
mov
movl
mov
mov
mov
mov
mov
mov
push
call
mov
cmp
jne
mov
pop
pop
mov
movl
mov
movb
mov
mov
pop
mov
pop
add
ret
mov
test
mov
je
cmp
jne
push
push
lea
push
push
mov
call
mov
mov
movb
pop
mov
mov
pop
pop
mov
pop
add
ret
lea
call
mov
mov
mov
cmp
jge
push
push
lea
push
push
mov
call
mov
mov
movb
mov
pop
pop
mov
pop
mov
pop
add
ret
mov
movb
mov
pop
pop
mov
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
push
call
ret
nop
nop
nop
sub
push
push
mov
push
push
mov
lea
call
mov
mov
lea
cmp
mov
mov
jne
mov
jmp
mov
cmp
je
mov
cmp
je
mov
mov
cmp
jne
mov
lea
mov
lea
call
mov
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
jmp
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
mov
mov
cmp
jne
mov
cmp
je
xor
cmp
jne
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
jne
jmp
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
cmp
jne
jmp
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
mov
jmp
mov
cmp
jne
mov
mov
jmp
mov
mov
jmp
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
lea
call
mov
lea
call
push
call
mov
mov
add
dec
mov
mov
pop
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
mov
cmp
mov
je
mov
mov
push
call
mov
lea
call
push
call
mov
add
cmp
mov
jne
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
mov
push
call
mov
mov
mov
push
mov
movl
mov
lea
mov
mov
push
mov
call
mov
mov
add
inc
cmp
mov
je
mov
mov
cmp
jne
mov
mov
cmp
jl
mov
mov
cmp
jne
mov
jmp
mov
mov
cmp
jne
mov
mov
mov
jmp
cmp
jne
mov
mov
mov
cmp
je
mov
xor
cmp
jne
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
jne
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
mov
jmp
mov
cmp
jne
mov
mov
jmp
mov
mov
jmp
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
jne
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
cmp
jne
mov
pop
pop
mov
movl
mov
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
mov
mov
pop
ret
mov
cmp
jne
mov
mov
mov
pop
ret
mov
mov
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
mov
mov
pop
ret
mov
cmp
jne
mov
mov
mov
pop
ret
mov
mov
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
call
mov
mov
add
mov
mov
ret
nop
nop
nop
nop
nop
mov
push
mov
test
jne
mov
cmp
jne
mov
pop
mov
ret
mov
mov
cmp
je
mov
cmp
je
mov
mov
cmp
jne
mov
pop
ret
mov
mov
cmp
jne
mov
mov
mov
cmp
je
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
cmp
je
mov
cmp
je
mov
mov
cmp
jne
mov
pop
ret
mov
mov
cmp
jne
mov
mov
mov
cmp
je
mov
cmp
je
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
mov
add
mov
mov
mov
mov
mov
mov
push
lea
mov
call
ret
nop
push
mov
lea
call
testb
je
push
call
add
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
test
jne
or
mov
jmp
nop
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
push
mov
cmpl
jne
push
push
xor
push
mov
call
push
push
push
mov
pushl
mov
call
test
jne
call
jmp
call
mov
test
je
mov
mov
call
test
jne
mov
mov
call
jmp
pushl
mov
call
movl
mov
mov
pop
pop
pop
jmp
cmpl
jne
call
mov
test
je
mov
mov
call
call
push
call
call
push
pushl
call
jmp
cmpl
jne
call
push
call
pushl
call
push
pop
pop
ret
push
push
call
call
jmp
jmp
call
push
call
pop
mov
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
call
push
mov
movl
andl
add
call
mov
mov
leave
ret
pushl
add
call
ret
call
test
je
mov
mov
call
ret
xor
ret
ret
pushl
call
pop
ret
mov
jmp
mov
jmp
push
xor
cmp
push
push
je
xor
cmp
setne
jmp
push
call
mov
cmp
je
mov
push
push
call
cmp
mov
je
push
push
call
cmp
mov
je
push
push
call
cmp
mov
je
push
push
call
cmp
mov
je
push
push
call
cmp
mov
je
push
push
call
cmp
mov
je
push
pop
mov
jmp
mov
mov
mov
mov
mov
mov
movl
xor
pop
pop
pop
ret
push
push
call
test
je
pushl
pushl
call
jmp
testb
jne
mov
xor
cmp
jle
cmp
jle
mov
push
call
cmp
jge
push
call
cmp
jl
xor
jmp
mov
pop
pop
ret
push
mov
sub
call
test
je
pushl
pushl
call
jmp
testb
je
mov
jmp
pushl
call
test
je
lea
push
pushl
call
jmp
lea
push
pushl
call
test
je
pushl
lea
push
call
jmp
xor
leave
ret
push
mov
sub
push
push
call
test
je
pushl
pushl
call
jmp
cmpl
jne
mov
xor
cmp
je
cmpl
jb
lea
push
push
push
push
call
test
je
push
mov
mov
push
mov
call
push
mov
call
lea
lea
movsl
movsl
movsl
cmpl
push
movsl
pop
mov
mov
pop
jb
add
push
push
call
mov
jmp
xor
pop
pop
leave
ret
mov
test
jne
pushl
call
push
call
ret
call
mov
jmp
mov
mov
mov
xor
movl
mov
mov
mov
movb
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
call
push
push
mov
mov
movl
movl
call
andb
lea
call
mov
pop
mov
leave
ret
push
mov
mov
test
je
push
call
andl
pop
mov
test
je
push
call
andl
pop
mov
test
je
cmp
je
mov
mov
call
andl
pop
ret
pushl
call
ret
push
push
push
mov
call
push
call
mov
andl
test
pop
mov
jne
mov
add
push
push
call
pushl
push
call
cmp
mov
jne
call
mov
mov
call
push
jmp
push
mov
lea
push
mov
call
mov
push
push
push
call
add
test
pop
jne
mov
push
call
mov
call
push
call
xor
jmp
push
push
call
push
push
mov
call
add
test
jne
test
je
mov
test
jne
mov
cmp
jb
andb
jmp
andb
mov
push
call
push
pop
pop
pop
pop
ret
mov
test
je
mov
and
neg
sbb
neg
jmp
xor
ret
mov
test
je
mov
test
je
mov
push
mov
mov
mov
pop
jmp
xor
ret
mov
test
je
mov
test
je
mov
push
mov
mov
mov
pop
jmp
xor
ret
mov
test
je
mov
test
je
mov
push
mov
mov
mov
pop
jmp
xor
ret
push
mov
push
mov
test
je
add
push
push
lea
call
mov
mov
push
mov
pop
jmp
xor
leave
ret
push
mov
push
mov
test
je
add
push
push
lea
call
mov
mov
push
mov
pop
jmp
xor
leave
ret
push
mov
push
mov
test
je
add
push
push
lea
call
mov
mov
push
mov
pop
jmp
xor
leave
ret
push
push
mov
xor
cmp
je
mov
push
call
test
je
mov
cmpb
jne
mov
test
je
cmp
jne
cmpb
jne
push
pop
mov
pop
pop
ret
push
mov
cmpl
jne
xor
pop
ret
cmpl
push
lea
jne
push
call
pop
mov
mov
mov
push
mov
pushl
mov
call
pop
pop
ret
mov
call
sub
andl
push
push
mov
push
lea
call
mov
push
pop
lea
push
mov
mov
call
push
lea
movb
call
lea
mov
call
mov
lea
push
call
mov
andb
lea
call
mov
mov
pop
pop
mov
leave
ret
push
mov
push
andl
add
push
mov
call
mov
leave
ret
mov
call
sub
push
andl
push
mov
lea
lea
push
call
mov
push
pop
mov
mov
cmpb
je
cmpb
je
mov
lea
push
call
mov
lea
push
mov
call
push
lea
movb
call
lea
mov
call
mov
lea
push
call
mov
andb
lea
call
mov
mov
pop
pop
mov
leave
ret
mov
call
sub
mov
andl
push
lea
push
push
call
mov
push
pop
mov
mov
mov
push
push
lea
movb
call
push
push
push
push
call
add
lea
push
call
mov
lea
push
call
mov
lea
mov
call
andb
lea
call
mov
mov
pop
pop
mov
leave
ret
mov
call
push
push
mov
andl
push
mov
mov
push
pop
test
mov
je
add
lea
push
call
mov
lea
push
call
mov
andb
lea
call
mov
mov
pop
mov
leave
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
call
push
mov
movl
andl
call
mov
mov
leave
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
call
push
push
mov
mov
movl
movl
call
andb
lea
call
orl
lea
call
mov
pop
mov
leave
ret
push
mov
pushl
call
mov
andl
andl
mov
movl
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
movl
ret
push
mov
pushl
call
mov
andl
andl
mov
movl
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
movl
ret
mov
push
mov
andl
andl
mov
mov
mov
lea
push
call
mov
pop
ret
push
mov
call
add
push
call
pop
ret
push
mov
push
lea
push
call
mov
call
andl
andl
push
call
pop
pop
ret
mov
call
sub
push
push
mov
push
mov
mov
lea
push
call
cmpl
jne
pushl
andl
lea
pushl
push
call
mov
dec
mov
imul
test
lea
jl
inc
mov
mov
mov
sub
dec
jne
mov
push
mov
mov
call
mov
mov
pop
pop
mov
pop
leave
ret
mov
add
push
call
push
push
call
push
push
mov
mov
test
je
push
lea
push
call
mov
push
mov
mov
call
pop
pop
pop
ret
push
mov
pushl
call
mov
andl
andl
mov
movl
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
movl
ret
push
mov
pushl
call
mov
andl
andl
mov
movl
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
movl
ret
pushl
pushl
pushl
call
ret
pushl
pushl
call
ret
pushl
pushl
pushl
pushl
pushl
call
ret
push
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
pop
ret
push
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
movswl
shr
movswl
mov
mov
mov
pop
ret
pushl
pushl
pushl
pushl
pushl
call
ret
push
mov
mov
test
je
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
call
pop
ret
pushl
pushl
pushl
pushl
pushl
call
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
call
push
mov
movl
andl
call
mov
mov
leave
ret
push
call
pushl
call
mov
pop
mov
mov
sub
add
cmp
jae
push
call
add
push
pushl
call
add
test
jne
xor
jmp
mov
sub
mov
sar
lea
mov
mov
mov
addl
mov
call
mov
pop
ret
pushl
call
neg
sbb
pop
neg
dec
ret
push
call
test
pop
mov
jne
push
call
mov
pop
andl
mov
mov
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
push
mov
mov
movl
pushl
call
inc
push
call
pop
mov
test
pop
je
pushl
push
call
pop
pop
movl
mov
pop
pop
ret
push
push
mov
mov
movl
mov
test
mov
je
pushl
call
inc
push
call
pop
mov
test
pop
je
pushl
push
call
pop
pop
jmp
mov
mov
mov
pop
pop
ret
cmpl
movl
je
pushl
call
pop
ret
mov
test
jne
mov
ret
push
mov
push
movl
call
mov
pop
test
je
push
call
pop
push
call
pop
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
sub
mov
push
push
push
pop
mov
lea
rep
mov
mov
mov
lea
push
pushl
pushl
pushl
call
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
lock
add
inc
jmp
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
mov
jmp
add
pushf
jmp
add
mov
add
test
add
jl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
fsubr
add
loopne
add
in
jmp
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
js
add
cwtl
ljmp
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
jmp
adc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
jo
add
js
add
mov
add
pushf
jmp
adc
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
cmpl
push
push
push
jne
pushl
pushl
call
pop
pop
jmp
push
call
mov
mov
pop
movzbw
movzbl
inc
mov
testb
je
mov
test
jne
andl
jmp
xor
inc
mov
mov
mov
movzbw
movzbl
inc
testb
je
mov
test
jne
xor
jmp
xor
inc
mov
mov
mov
cmp
jne
cmpw
je
jmp
push
call
cmp
pop
sbb
and
dec
jmp
push
call
pop
xor
pop
pop
pop
pop
ret
push
push
push
push
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
movzbl
mov
mov
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
lea
lea
movzbl
inc
jmp
cmp
mov
jne
neg
pop
pop
pop
pop
ret
pushl
call
pop
ret
push
mov
sub
mov
push
mov
mov
lea
movl
push
lea
pushl
movl
push
call
add
decl
mov
js
mov
andb
jmp
lea
push
push
call
pop
pop
mov
pop
leave
ret
push
mov
push
push
push
push
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
jmp
pop
pop
pop
leave
ret
pop
pop
xchg
jmp
pop
pop
xchg
jmp
push
mov
push
push
push
push
push
mov
mov
movl
push
pushl
pushl
pushl
call
mov
mov
and
mov
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
cld
mov
xor
push
push
push
pushl
pushl
pushl
pushl
pushl
call
add
mov
pop
pop
pop
mov
mov
pop
ret
push
mov
sub
mov
andl
mov
mov
mov
movl
inc
mov
mov
mov
mov
lea
mov
pushl
push
pushl
call
mov
mov
mov
mov
leave
ret
push
mov
cld
mov
push
push
pushl
pushl
push
pushl
pushl
pushl
call
add
pop
ret
push
mov
sub
push
push
push
andl
movl
mov
mov
mov
mov
mov
mov
mov
mov
andl
andl
andl
andl
movl
mov
mov
mov
mov
lea
mov
movl
mov
mov
mov
mov
lea
push
mov
pushl
call
call
pop
pop
andl
cmpl
je
mov
mov
mov
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
cld
mov
mov
and
test
je
mov
movl
push
pop
jmp
push
mov
pushl
mov
pushl
mov
pushl
push
pushl
mov
pushl
pushl
call
add
mov
cmpl
jne
pushl
pushl
call
mov
mov
mov
jmp
push
pop
pop
pop
pop
pop
ret
push
mov
push
push
push
cmpl
push
mov
mov
mov
mov
mov
mov
jl
cmp
jne
call
mov
dec
lea
cmp
lea
jge
cmp
jle
cmp
jne
mov
decl
mov
mov
cmpl
jge
mov
mov
inc
mov
mov
mov
cmp
ja
cmp
jbe
call
lea
pop
pop
lea
pop
leave
ret
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
xor
or
repnz
inc
neg
dec
mov
std
repnz
inc
cmp
je
xor
jmp
mov
cld
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
test
je
mov
cmp
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jmp
push
call
pop
ret
cmp
jne
push
call
pop
movl
lea
push
lea
push
push
call
add
mov
test
je
push
pushl
pushl
call
add
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
mov
mov
pop
pop
pop
leave
ret
mov
push
push
mov
test
je
mov
mov
sub
mov
test
je
movzwl
movzwl
sub
jne
inc
inc
cmpw
jne
cmpw
je
inc
inc
jmp
xor
pop
pop
ret
push
mov
push
push
mov
push
push
call
mov
xor
cmp
je
push
call
push
call
pop
push
pop
pushl
pushl
pushl
call
add
mov
test
je
push
call
pop
jmp
push
call
mov
pop
pop
pop
pop
ret
push
mov
mov
push
push
xor
xor
cmp
push
je
mov
cmp
je
cmp
jne
cmp
jbe
mov
add
movzbw
mov
cmpb
je
inc
inc
inc
cmp
jb
jmp
mov
mov
push
push
push
push
push
pushl
call
test
jne
call
cmp
je
call
movl
or
jmp
lea
mov
mov
mov
test
je
mov
movzbl
testb
je
inc
mov
inc
decl
test
jne
push
sub
pushl
push
push
push
pushl
call
test
jne
jmp
cmp
jne
pushl
call
pop
jmp
push
push
push
pushl
push
pushl
call
cmp
je
dec
pop
pop
pop
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
cmp
jne
mov
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
je
jmp
push
call
pop
ret
cmp
jne
mov
test
je
lea
and
jmp
push
pop
mov
cmp
ja
push
call
pop
movl
mov
shr
push
call
pop
mov
orl
call
mov
test
jne
push
jmp
mov
push
call
pop
ret
mov
test
jne
push
pop
add
and
push
push
pushl
call
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
mov
cmp
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
push
pop
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
push
pop
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
mov
mov
xor
push
call
pop
ret
cmp
jne
cmp
ja
cmp
jbe
add
and
jmp
push
pop
mov
mov
cmp
ja
push
call
pop
movl
lea
push
lea
push
push
call
add
mov
mov
test
je
cmp
jae
mov
shr
push
push
pushl
pushl
call
add
test
je
mov
mov
jmp
push
call
pop
mov
test
je
movzbl
shl
mov
cmp
jb
mov
push
pushl
pushl
call
push
pushl
pushl
call
add
mov
cmpl
jne
push
push
pushl
call
mov
test
je
movzbl
shl
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
pushl
call
add
jmp
push
push
push
pushl
call
mov
orl
call
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
mov
mov
push
call
pop
xor
ret
xor
cmp
ja
cmp
jne
push
pop
add
and
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
mov
mov
pop
pop
pop
leave
ret
call
call
mov
call
fnclex
ret
ret
mov
movl
mov
movl
movl
movl
mov
ret
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
push
mov
sub
lea
push
call
lea
push
call
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
lea
push
call
cmp
je
cmp
jne
cmpw
je
cmpl
je
push
pop
jmp
xor
jmp
or
push
push
lea
mov
movsl
movsl
movsl
movsl
pop
mov
pop
push
movzwl
push
movzwl
push
movzwl
push
movzwl
push
movzwl
push
movzwl
push
call
mov
add
test
je
mov
leave
ret
call
mov
mov
ret
call
mov
imul
add
mov
mov
shr
and
ret
mov
cmp
jne
call
push
mov
call
test
pop
je
mov
xor
mov
and
shrl
mov
mov
shl
add
mov
call
test
jne
call
xor
jmp
call
mov
call
mov
call
call
call
call
incl
jmp
xor
cmp
jne
cmp
jle
decl
cmp
jne
call
call
call
call
jmp
cmp
jne
push
call
pop
push
pop
ret
push
mov
push
mov
push
mov
push
mov
test
jne
cmpl
jmp
cmp
je
cmp
jne
mov
test
je
push
push
push
call
test
je
push
push
push
call
test
jne
xor
jmp
push
push
push
call
cmp
mov
jne
test
jne
push
push
push
call
test
je
cmp
jne
push
push
push
call
test
jne
and
cmpl
je
mov
test
je
push
push
push
call
mov
mov
pop
pop
pop
pop
ret
mov
cmp
je
test
jne
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
incb
adc
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
incb
adc
add
lods
incb
adc
add
xchg
incb
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
incb
adc
incb
adc
incl
adc
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
add
adc
adc
adc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
addb
adc
add
adc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
mov
cmpw
lea
je
mov
inc
inc
test
jne
sub
sar
dec
ret
int3
int3
push
push
mov
push
mov
mov
mov
lea
push
ret
push
mov
cmpl
push
push
jne
pushl
pushl
call
pop
pop
jmp
push
call
mov
pop
movzbw
test
je
movzbl
testb
je
mov
inc
test
je
movzwl
movzbl
shl
or
cmp
je
jmp
movzwl
cmp
je
inc
jmp
push
call
pop
xor
jmp
push
call
pop
lea
jmp
push
call
mov
pop
movzwl
sub
neg
sbb
not
and
pop
pop
pop
ret
push
mov
push
push
push
call
mov
pop
mov
cmpb
je
movzbl
mov
test
je
push
lea
pushl
push
push
push
push
push
pushl
call
add
test
je
mov
cmp
mov
jle
inc
mov
jmp
and
cmp
jne
movzbl
mov
inc
cmpb
jne
push
call
pop
mov
pop
pop
pop
ret
push
call
pop
xor
jmp
push
push
push
push
push
push
push
or
call
xor
pop
mov
mov
mov
mov
test
je
lea
cmp
jae
testb
jne
cmpl
jne
push
call
cmpl
pop
jne
lea
push
call
incl
push
call
pop
lea
push
call
testb
je
push
call
mov
mov
add
add
jmp
orl
mov
sub
push
pop
cltd
idiv
mov
add
cmp
jne
mov
addl
add
inc
cmp
mov
jl
jmp
mov
push
call
test
pop
je
addl
lea
lea
mov
cmp
jae
andb
orl
andl
movb
mov
add
add
jmp
shl
mov
push
call
pop
push
call
pop
mov
pop
pop
pop
pop
pop
pop
ret
mov
push
cmp
push
jae
mov
sar
lea
mov
and
lea
mov
shl
cmpl
jne
cmpl
push
mov
jne
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
mov
xor
pop
jmp
call
movl
call
andl
or
pop
pop
ret
mov
push
cmp
push
jae
mov
sar
lea
mov
and
lea
mov
shl
add
testb
je
cmpl
je
cmpl
jne
xor
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
orl
xor
jmp
call
movl
call
andl
or
pop
pop
ret
mov
cmp
jae
mov
and
sar
lea
mov
testb
lea
je
mov
ret
call
movl
call
andl
or
ret
push
mov
push
xor
testb
push
je
add
testb
je
or
testb
je
or
pushl
call
test
jne
call
push
call
pop
jmp
cmp
jne
or
jmp
cmp
jne
or
call
mov
cmp
jne
call
movl
call
andl
or
jmp
pushl
push
call
mov
mov
sar
and
or
mov
push
lea
mov
call
add
mov
pop
pop
pop
ret
mov
push
mov
and
sar
push
push
mov
lea
lea
shl
add
cmpl
jne
push
call
cmpl
pop
jne
lea
push
call
incl
push
call
pop
mov
lea
push
call
pop
pop
pop
ret
mov
mov
and
sar
lea
mov
lea
push
call
ret
push
call
mov
xor
mov
mov
cmp
je
add
inc
cmp
jb
cmp
jb
cmp
ja
call
movl
pop
ret
call
mov
pop
mov
ret
cmp
jb
cmp
ja
call
movl
pop
ret
call
movl
pop
ret
call
add
ret
call
add
ret
push
mov
mov
push
cmp
push
jae
mov
and
sar
push
lea
mov
pop
test
je
call
mov
test
je
mov
mov
cmp
je
cmp
je
cmp
je
xor
jmp
mov
jmp
movl
mov
push
xor
mov
and
or
mov
inc
test
je
test
je
movsbl
sub
je
sub
je
dec
je
sub
je
sub
je
jmp
test
jne
andb
mov
jmp
test
jne
orb
mov
jmp
cmpl
jne
mov
jmp
mov
test
je
xor
jmp
and
or
mov
jmp
mov
incl
mov
pop
push
call
pop
mov
jmp
xor
pop
pop
pop
ret
push
mov
push
call
mov
andl
cmp
pop
je
mov
sar
and
mov
lea
lea
jmp
mov
andb
push
call
pop
pop
ret
push
mov
push
pushl
call
pushl
pushl
pushl
pushl
call
pushl
mov
call
add
mov
pop
pop
ret
push
mov
push
push
push
push
mov
imul
mov
mov
test
mov
mov
jne
xor
jmp
mov
testw
je
mov
mov
jmp
movl
jmp
mov
testw
je
mov
test
je
cmp
mov
jb
mov
push
pushl
push
call
sub
sub
add
add
add
mov
jmp
cmp
jb
cmpl
mov
je
xor
divl
mov
sub
push
push
pushl
call
add
test
je
cmp
je
sub
add
jmp
push
call
cmp
pop
je
mov
mov
inc
decl
mov
cmpl
jne
mov
pop
pop
pop
leave
ret
orl
jmp
orl
mov
xor
sub
divl
jmp
push
mov
push
pushl
call
pushl
pushl
pushl
pushl
call
pushl
mov
call
add
mov
pop
pop
ret
push
mov
push
push
push
push
mov
imul
mov
mov
test
mov
mov
jne
xor
jmp
mov
testw
je
mov
mov
jmp
movl
mov
and
je
mov
test
je
cmp
mov
jb
mov
push
pushl
pushl
call
sub
add
add
sub
add
jmp
cmp
jb
test
je
push
call
test
pop
jne
cmpl
je
mov
xor
divl
mov
sub
jmp
mov
push
pushl
pushl
call
add
cmp
je
add
sub
cmp
jb
mov
jmp
mov
push
movsbl
push
call
pop
cmp
pop
je
incl
mov
dec
mov
test
jg
movl
test
jne
mov
pop
pop
pop
leave
ret
orl
mov
jmp
mov
sub
xor
divl
jmp
push
mov
push
push
push
pushl
call
mov
mov
push
call
push
call
push
push
push
mov
pushl
call
push
push
mov
call
push
call
add
xor
cmp
pop
pop
sete
dec
pop
pop
ret
push
mov
cmpl
push
mov
push
mov
jg
xor
jmp
push
mov
push
call
pop
decl
je
decl
js
mov
movzbl
inc
mov
jmp
push
call
pop
cmp
je
mov
inc
cmp
je
jmp
cmp
jne
xor
jmp
andb
push
call
pop
mov
pop
pop
pop
pop
ret
push
mov
push
push
call
push
call
push
mov
call
add
mov
pop
pop
ret
push
mov
sub
push
push
push
mov
xor
mov
cmp
mov
jge
mov
push
push
push
call
add
cmp
mov
jl
mov
test
jne
sub
jmp
mov
mov
mov
sub
test
mov
je
mov
mov
sar
and
mov
lea
testb
je
mov
cmp
jae
cmpb
jne
incl
inc
jmp
test
jne
call
movl
or
jmp
cmpl
jne
mov
jmp
testb
je
mov
test
jne
and
jmp
sub
add
mov
mov
sar
lea
mov
and
lea
mov
shl
testb
je
push
push
pushl
call
add
cmp
jne
mov
mov
add
cmp
jae
cmpb
jne
incl
inc
jmp
testb
jmp
push
pushl
pushl
call
mov
add
cmp
ja
mov
test
je
test
je
mov
mov
mov
testb
je
incl
mov
sub
mov
mov
add
pop
pop
pop
leave
ret
push
mov
push
pushl
call
pushl
pushl
pushl
call
pushl
mov
call
add
mov
pop
pop
ret
push
mov
push
mov
test
je
mov
test
je
cmp
je
cmp
jne
and
cmp
mov
jne
push
call
add
pop
xor
push
call
mov
pop
test
je
and
mov
jmp
test
je
test
je
test
jne
movl
push
pushl
pushl
call
add
xor
cmp
setne
dec
mov
jmp
call
movl
or
pop
pop
ret
push
mov
test
jne
push
call
pop
pop
ret
push
push
call
push
call
push
mov
call
add
mov
pop
pop
ret
push
mov
push
call
test
pop
je
or
pop
ret
testb
je
pushl
call
neg
pop
pop
sbb
ret
xor
pop
ret
push
push
mov
xor
push
mov
mov
and
cmp
jne
test
je
mov
mov
sub
test
jle
push
push
pushl
call
add
cmp
jne
mov
test
je
and
mov
jmp
orl
or
mov
andl
mov
pop
mov
pop
pop
ret
push
call
pop
ret
push
push
push
push
xor
xor
call
xor
pop
cmp
jle
mov
mov
test
je
testb
je
push
push
call
mov
pop
pop
mov
mov
test
je
cmpl
jne
push
call
cmp
pop
je
inc
jmp
cmpl
jne
test
je
push
call
cmp
pop
jne
or
mov
pushl
push
call
pop
pop
inc
cmp
jl
push
call
cmpl
pop
mov
je
mov
pop
pop
pop
ret
push
mov
push
or
testb
je
andl
jmp
push
call
push
call
push
mov
call
add
mov
pop
pop
ret
push
mov
push
or
testb
je
push
call
push
mov
call
pushl
call
add
test
jge
or
jmp
mov
test
je
push
call
andl
pop
andl
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
mov
movzbl
mov
and
inc
test
je
inc
ret
push
mov
push
xor
cmp
push
push
jne
pushl
pushl
call
pop
pop
jmp
pushl
mov
call
mov
push
sub
call
pop
add
pop
cmp
je
cmp
ja
cmp
mov
je
mov
sub
mov
cmp
je
cmp
jne
inc
cmp
jne
cmp
je
push
call
pop
mov
jmp
mov
jmp
xor
pop
pop
pop
pop
ret
push
mov
push
xor
cmp
jne
pushl
pushl
call
pop
pop
jmp
push
push
call
pop
mov
mov
movzbl
movzbl
testb
je
mov
inc
test
je
movzbl
shl
or
cmp
jne
lea
jmp
test
jmp
cmp
jne
mov
inc
test
jne
push
call
pop
mov
pop
pop
pop
ret
push
mov
sub
mov
push
pushl
mov
mov
lea
pushl
movl
movl
push
call
add
decl
mov
js
mov
andb
jmp
lea
push
push
call
pop
pop
mov
pop
leave
ret
mov
push
movzbl
testb
pop
setne
inc
ret
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
xor
cmp
push
push
je
cmp
jne
pushl
pushl
pushl
call
add
jmp
push
call
decl
mov
mov
pop
movzbw
movzbl
inc
mov
testb
je
cmp
jne
movzbl
mov
testb
jne
mov
jmp
mov
test
jne
mov
jmp
xor
inc
mov
mov
mov
movzbw
movzbl
inc
testb
je
cmpl
je
mov
decl
test
jne
xor
jmp
xor
inc
mov
mov
mov
cmp
jne
cmpw
je
mov
decl
test
je
xor
jmp
push
call
cmp
pop
sbb
and
dec
jmp
push
call
pop
xor
pop
pop
pop
pop
ret
push
mov
push
mov
cmp
jbe
andw
push
xor
lea
stos
mov
mov
shr
cmpl
mov
pop
jne
xor
leave
ret
push
lea
pushl
pushl
push
lea
push
push
push
call
add
test
je
cmpw
jne
testb
je
push
pop
leave
ret
cmpl
jle
push
push
call
pop
pop
leave
ret
mov
mov
and
leave
ret
push
mov
test
je
push
call
inc
push
call
pop
test
pop
je
push
push
call
pop
pop
pop
ret
xor
pop
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
call
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
je
call
pop
ret
pushl
mov
call
pop
ret
push
call
pop
ret
push
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
push
push
push
xor
call
mov
pop
test
pop
je
push
call
pop
mov
pushl
orl
mov
mov
pushl
mov
push
push
pushl
pushl
call
test
jne
call
mov
push
call
test
pop
je
push
call
pop
xor
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
pushl
call
mov
test
je
mov
mov
mov
mov
mov
push
call
pop
jmp
mov
push
pushl
call
test
jne
push
call
pop
call
mov
mov
test
je
call
andl
pushl
call
push
call
pop
orl
xor
mov
mov
pop
pop
pop
leave
ret
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
mov
test
je
call
push
call
mov
test
jne
push
call
pop
push
call
pop
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
inc
inc
dec
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
dec
je
cmp
jne
dec
je
and
and
cmp
jne
dec
pop
pop
ret
push
pushl
pushl
pushl
call
add
ret
push
mov
sub
push
andl
push
push
mov
mov
lea
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
mov
movzbl
mov
and
test
je
mov
inc
jmp
cmp
mov
jne
orl
jmp
cmp
jne
mov
inc
mov
mov
test
jl
cmp
je
cmp
jg
push
test
pop
jne
cmp
je
movl
jmp
mov
cmp
je
cmp
je
movl
jmp
mov
cmp
jne
cmp
jne
mov
cmp
je
cmp
jne
mov
inc
inc
mov
or
xor
divl
mov
mov
cmpl
movzbl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
movsbl
sub
jmp
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
movsbl
push
call
pop
mov
sub
cmp
jae
mov
orl
cmp
jb
jne
or
xor
divl
cmp
jbe
orl
jmp
imul
add
mov
mov
incl
mov
jmp
mov
decl
mov
test
jne
test
je
mov
mov
andl
jmp
test
mov
jne
test
jne
and
je
cmpl
ja
test
jne
cmp
jbe
call
testb
movl
je
orl
jmp
mov
and
neg
sbb
neg
add
mov
test
je
mov
mov
testb
je
mov
neg
mov
mov
jmp
mov
test
je
mov
xor
pop
pop
pop
leave
ret
push
mov
push
mov
test
push
je
cmpb
je
mov
test
jne
push
call
mov
pop
test
jne
call
movl
jmp
movl
lea
push
push
pushl
push
call
cmp
jb
cmpl
jne
push
call
pop
call
movl
jmp
test
jne
cmp
jne
push
call
pop
call
push
call
pop
xor
jmp
mov
jmp
pushl
pushl
call
pop
pop
pop
pop
pop
ret
push
mov
push
andl
push
mov
push
push
push
call
cmp
pop
jb
cmpb
jne
mov
test
je
push
push
push
call
add
andb
inc
inc
jmp
mov
test
je
andb
andl
cmpb
mov
mov
mov
je
mov
movzbl
testb
je
inc
jmp
cmp
je
cmp
je
cmp
jne
mov
jmp
lea
mov
inc
cmpb
jne
mov
mov
test
je
cmpl
je
sub
cmp
jb
mov
push
push
pushl
call
mov
add
andb
mov
mov
jmp
mov
test
je
andb
mov
test
je
cmp
jb
cmpl
je
sub
cmp
jb
mov
push
push
pushl
call
mov
add
andb
mov
mov
test
je
sub
cmp
jae
mov
push
pushl
push
call
add
andb
jmp
mov
test
je
sub
cmp
jae
mov
push
push
push
call
add
andb
mov
test
je
andb
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
cmp
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jmp
mov
push
call
pop
ret
cmp
jne
push
call
pop
movl
lea
push
lea
push
pushl
call
add
mov
test
je
movzbl
shl
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
push
call
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
cmp
jbe
xor
jmp
mov
cmp
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
andl
cmp
ja
push
push
push
call
add
test
je
mov
orl
call
cmpl
jne
jmp
mov
push
call
pop
ret
cmp
jne
test
jne
push
pop
add
and
mov
push
call
pop
movl
lea
push
lea
push
mov
push
call
add
mov
test
je
andl
cmp
ja
shr
push
push
pushl
pushl
call
add
test
je
mov
push
lea
push
call
pop
pop
jmp
orl
call
cmpl
jne
jmp
mov
push
call
pop
ret
test
jne
push
pop
add
and
push
pushl
push
pushl
call
mov
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
push
call
pushl
call
mov
pop
cmp
pop
mov
jne
xor
jmp
test
je
xor
mov
cmp
je
add
inc
cmp
jb
lea
push
push
call
push
pop
cmp
jne
push
andl
pop
xor
mov
cmp
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
andl
push
pop
xor
mov
lea
rep
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
mov
orb
inc
cmp
jb
push
call
pop
mov
mov
jmp
andl
xor
mov
stos
stos
stos
jmp
cmpl
je
call
call
jmp
or
push
call
pop
mov
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
pushl
call
pop
pop
ret
push
mov
push
push
mov
mov
cmp
jl
cmp
jg
mov
test
jl
cmp
jle
push
mov
push
cltd
pop
idiv
push
add
mov
cltd
pop
pop
idiv
test
mov
jge
add
dec
mov
cmp
jl
cmp
jg
mov
test
mov
jne
cmp
jle
inc
lea
imul
sar
add
lea
mov
test
lea
jl
test
jl
test
jl
jmp
test
jge
test
jge
lea
shl
test
je
mov
cltd
idiv
xor
cmp
setne
mov
jmp
xor
test
jne
mov
test
lea
jl
test
jl
test
jl
jmp
test
jge
test
jge
mov
imul
test
je
mov
cltd
idiv
xor
cmp
setne
mov
jmp
xor
test
jne
mov
test
lea
jl
test
jl
test
jl
jmp
test
jge
test
jge
mov
imul
test
je
mov
cltd
idiv
xor
cmp
setne
mov
jmp
xor
test
jne
mov
test
lea
mov
jl
test
jl
test
jl
jmp
test
jge
test
jge
cmpl
je
call
mov
add
lea
push
call
test
pop
je
mov
test
jg
jge
cmpl
jle
mov
add
lea
push
call
pop
jmp
lea
push
call
test
pop
je
push
mov
mov
pop
rep
jmp
or
pop
pop
pop
ret
mov
push
push
push
mov
xor
call
test
mov
jge
xor
jmp
cmpl
jne
push
call
pop
mov
test
mov
je
mov
mov
mov
cltd
idiv
mov
imul
add
lea
mov
cmp
jl
sub
inc
cmp
jl
sub
mov
inc
cmp
jl
inc
sub
jmp
push
pop
mov
mov
cltd
mov
idiv
mov
mov
imul
add
test
jne
mov
mov
push
pop
lea
cmp
jge
inc
add
jmp
mov
dec
mov
push
sub
mov
mov
mov
mov
cltd
idiv
pop
push
add
cltd
idiv
mov
mov
mov
cltd
idiv
pop
mov
imul
add
mov
cltd
idiv
mov
imul
sub
andl
mov
mov
pop
pop
pop
ret
push
mov
push
mov
cmpl
jge
xor
jmp
call
mov
cmp
jle
cmp
jge
sub
mov
lea
push
call
cmpl
pop
mov
je
push
call
test
pop
je
mov
sub
lea
push
call
mov
pop
movl
jmp
push
call
mov
push
call
pop
test
mov
pop
je
sub
sub
push
push
mov
pop
cltd
mov
idiv
test
mov
jge
add
mov
sub
mov
mov
cltd
idiv
add
mov
cltd
idiv
pop
test
mov
jge
add
mov
sub
mov
push
cltd
idiv
pop
add
mov
cltd
idiv
test
mov
jge
add
mov
sub
mov
push
cltd
pop
idiv
mov
test
mov
jle
mov
push
add
pop
cltd
idiv
mov
mov
add
mov
add
mov
pop
pop
ret
jge
mov
push
lea
pop
cltd
idiv
mov
mov
add
mov
test
jg
add
decl
mov
movl
movl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
push
mov
pushl
call
pushl
call
pushl
call
pushl
call
pop
ret
push
push
mov
mov
mov
test
je
cmp
je
cmp
je
cmp
je
cmp
je
push
call
pushl
call
pop
add
cmp
jl
pushl
call
pushl
call
pushl
call
pushl
call
pop
pop
ret
push
mov
mov
push
cmpl
lea
jne
push
push
call
mov
pop
test
jne
push
call
pop
push
call
cmpl
pop
push
jne
call
mov
jmp
call
pop
push
call
pop
pop
pushl
call
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
inc
ret
mov
test
je
mov
inc
cmp
jne
inc
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
push
mov
mov
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
test
je
push
call
test
pop
je
push
call
jmp
xor
pop
ret
push
call
mov
ret
pushl
call
ret
push
mov
push
mov
lea
cmp
ja
mov
movzwl
jmp
mov
push
mov
sar
movzbl
testb
pop
je
andb
mov
mov
push
jmp
andb
mov
push
pop
lea
push
push
push
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
push
push
mov
mov
mov
test
je
test
jne
test
je
andl
test
je
mov
and
mov
mov
mov
andl
andl
and
or
test
mov
jne
cmp
je
cmp
jne
push
call
test
pop
jne
push
call
pop
testw
push
je
mov
mov
sub
lea
mov
mov
dec
test
mov
jle
push
push
push
call
add
mov
jmp
cmp
je
mov
mov
sar
and
mov
lea
lea
jmp
mov
testb
je
push
push
push
call
add
mov
mov
mov
jmp
push
lea
pop
push
push
push
call
add
mov
cmp
pop
je
orl
jmp
mov
and
jmp
or
mov
or
pop
pop
pop
ret
push
mov
sub
push
push
mov
xor
push
mov
mov
inc
test
mov
mov
mov
je
mov
mov
jmp
mov
mov
mov
cmpl
jl
cmp
jl
cmp
jg
movsbl
mov
and
jmp
xor
movsbl
sar
cmp
mov
ja
jmp
xor
orl
mov
mov
mov
mov
mov
mov
jmp
movsbl
sub
je
sub
je
sub
je
dec
dec
je
sub
jne
orl
jmp
orl
jmp
orl
jmp
orb
jmp
orl
jmp
cmp
jne
lea
push
call
test
pop
mov
jge
orl
neg
mov
jmp
mov
movsbl
lea
lea
jmp
andl
jmp
cmp
jne
lea
push
call
test
pop
mov
jge
orl
jmp
mov
movsbl
lea
lea
mov
jmp
cmp
je
cmp
je
cmp
je
cmp
jne
or
jmp
orl
jmp
orl
jmp
cmpb
jne
cmpb
jne
inc
inc
orb
mov
jmp
andl
mov
andl
movzbl
testb
je
lea
push
pushl
movsbl
push
call
mov
add
inc
mov
lea
push
pushl
movsbl
push
call
add
jmp
movsbl
cmp
jg
cmp
jge
cmp
jg
je
sub
je
dec
dec
je
dec
dec
je
sub
jne
testw
jne
or
cmpl
mov
je
mov
lea
push
call
testw
pop
mov
mov
je
test
jne
mov
mov
movl
mov
mov
dec
test
je
cmpw
je
inc
inc
jmp
movl
add
orl
cmpl
lea
mov
jge
movl
jmp
testw
jne
or
testw
lea
push
je
call
push
lea
push
call
add
mov
test
jge
movl
jmp
sub
je
sub
je
dec
je
jmp
call
pop
mov
movl
lea
mov
jmp
lea
push
call
test
pop
je
mov
test
je
test
je
movswl
shr
mov
mov
movl
jmp
andl
mov
movswl
jmp
mov
mov
push
jmp
jne
cmp
jne
movl
jmp
cmp
jle
mov
cmpl
jle
mov
add
push
call
test
pop
mov
je
mov
mov
jmp
movl
mov
pushl
add
mov
pushl
mov
mov
mov
mov
movsbl
push
lea
push
push
call
mov
add
and
je
cmpl
jne
push
call
pop
cmp
jne
test
jne
push
call
pop
cmpb
jne
orb
inc
mov
push
call
pop
jmp
sub
je
sub
je
dec
je
dec
je
sub
je
dec
dec
je
sub
jne
movl
jmp
sub
sar
jmp
test
jne
mov
mov
mov
mov
dec
test
je
cmpb
je
inc
jmp
sub
jmp
movl
movl
testb
movl
je
mov
movb
add
movl
mov
jmp
testb
movl
je
or
jmp
lea
push
call
testb
pop
je
mov
mov
jmp
mov
mov
movl
jmp
orl
movl
testb
je
lea
push
call
pop
jmp
testb
je
testb
lea
push
je
call
pop
movswl
cltd
jmp
call
pop
movzwl
jmp
testb
lea
push
je
call
pop
jmp
call
pop
xor
testb
je
test
jg
jl
test
jae
neg
adc
mov
neg
orb
mov
jmp
mov
mov
testb
jne
andl
cmpl
jge
movl
jmp
andl
mov
cmp
jle
mov
mov
or
jne
andl
lea
mov
mov
decl
test
jg
mov
or
je
mov
cltd
mov
mov
push
push
pushl
pushl
call
push
push
pushl
mov
add
pushl
call
cmp
mov
mov
jle
add
mov
decl
mov
jmp
lea
sub
incl
testb
mov
je
mov
cmpb
jne
test
jne
decl
inc
mov
movb
mov
cmpl
jne
mov
test
je
test
je
movb
jmp
test
je
movb
jmp
test
je
movb
movl
mov
sub
sub
test
jne
lea
push
pushl
push
push
call
add
lea
push
lea
pushl
pushl
push
call
add
test
je
test
jne
lea
push
pushl
push
push
call
add
cmpl
je
cmpl
jle
mov
mov
lea
mov
inc
push
lea
push
inc
call
pop
test
pop
jle
lea
push
pushl
push
lea
push
call
add
mov
dec
test
jne
jmp
lea
push
pushl
pushl
pushl
call
add
testb
je
lea
push
pushl
push
push
call
add
cmpl
je
pushl
call
andl
pop
mov
mov
inc
test
mov
jne
mov
pop
pop
pop
leave
ret
mov
sub
adc
add
das
sub
adc
sub
adc
add
add
add
push
mov
mov
decl
js
mov
mov
mov
incl
movzbl
jmp
push
pushl
call
pop
pop
cmp
mov
jne
orl
pop
ret
incl
pop
ret
push
push
mov
mov
dec
test
jle
mov
push
pushl
pushl
call
add
cmpl
je
mov
dec
test
jg
pop
pop
ret
push
mov
mov
dec
push
push
test
jle
mov
mov
movsbl
push
inc
pushl
push
call
add
cmpl
je
mov
dec
test
jg
pop
pop
pop
ret
mov
addl
mov
mov
ret
mov
addl
mov
mov
mov
ret
mov
addl
mov
mov
ret
push
mov
push
mov
push
mov
cmp
je
call
mov
testb
je
cmpl
je
cmpl
jne
push
push
pushl
pushl
call
add
jmp
cmpl
je
cmpl
jne
cmp
jbe
mov
mov
test
je
movzbl
push
pushl
pushl
push
pushl
pushl
pushl
push
call
add
jmp
pushl
pushl
pushl
push
pushl
pushl
pushl
push
call
add
push
pop
pop
pop
pop
ret
push
mov
sub
mov
andb
mov
cmp
mov
jl
mov
cmp
jl
call
push
push
mov
mov
push
mov
cmp
jne
cmpl
jne
cmp
jne
cmpl
jne
call
cmpl
je
call
mov
call
mov
push
push
mov
movb
call
pop
test
pop
jne
call
cmp
jne
cmpl
jne
cmp
jne
cmpl
jne
call
cmp
jne
cmpl
jne
cmp
jne
mov
lea
push
lea
push
push
pushl
pushl
call
add
mov
mov
cmp
jae
cmp
jg
cmp
jg
mov
mov
mov
test
mov
jle
mov
mov
lea
mov
test
mov
jle
pushl
pushl
pushl
call
add
test
jne
decl
add
cmp
jg
decl
addl
cmpl
jg
jmp
pushl
pushl
pushl
push
pushl
pushl
pushl
pushl
pushl
pushl
push
call
add
mov
incl
add
jmp
cmpb
je
push
push
call
pop
pop
pop
pop
pop
leave
ret
cmpb
jne
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
call
add
jmp
jmp
push
mov
push
push
push
push
call
cmpl
je
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
add
test
jne
mov
lea
push
lea
push
push
pushl
pushl
call
add
mov
mov
cmp
jae
cmp
jl
cmp
jg
mov
mov
shl
add
mov
test
je
cmpb
jne
push
add
pushl
pushl
push
push
push
pushl
pushl
pushl
pushl
pushl
call
add
incl
add
jmp
pop
pop
leave
ret
push
push
mov
mov
test
je
cmpb
lea
je
mov
mov
cmp
je
add
push
push
call
pop
test
pop
jne
testb
je
testb
je
mov
mov
test
je
testb
je
test
je
testb
jne
xor
jmp
push
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
cmp
je
cmp
jle
cmp
jl
call
andl
mov
mov
test
je
push
push
push
call
orl
jmp
pushl
call
pop
ret
mov
orl
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
cmpl
je
xor
ret
jmp
push
mov
cmpl
push
mov
push
push
mov
je
pushl
push
push
pushl
call
add
cmpl
pushl
jne
push
jmp
pushl
call
mov
pushl
pushl
pushl
push
call
mov
push
pushl
inc
mov
pushl
pushl
pushl
push
pushl
call
add
test
je
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
mov
andl
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
andl
movl
pushl
pushl
push
pushl
push
call
add
mov
andl
orl
call
mov
mov
mov
pop
pop
pop
leave
ret
pushl
call
pop
ret
mov
andl
push
lea
push
call
pop
pop
xor
jmp
mov
mov
mov
mov
call
mov
mov
call
mov
mov
cmpl
jne
cmpl
jne
cmpl
jne
cmpl
jne
cmpl
je
call
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
cmpl
jne
cmpl
jne
cmpl
jne
push
pop
ret
xor
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
mov
test
je
cmpb
je
mov
test
je
mov
lea
andl
testb
je
mov
push
pushl
call
pop
pop
test
je
push
push
call
pop
pop
test
je
mov
mov
mov
add
push
push
call
pop
pop
mov
jmp
mov
testb
je
mov
push
pushl
call
pop
pop
test
je
push
push
call
pop
pop
test
je
pushl
pushl
push
call
add
cmpl
jne
mov
test
je
add
push
jmp
cmpl
mov
push
pushl
jne
call
pop
pop
test
je
push
push
call
pop
pop
test
je
pushl
add
push
pushl
call
pop
pop
push
push
call
add
jmp
call
pop
pop
test
je
push
push
call
pop
pop
test
je
pushl
call
pop
test
je
testb
je
push
lea
push
pushl
call
pop
pop
push
pushl
push
call
jmp
lea
push
pushl
call
pop
pop
push
pushl
push
call
jmp
call
orl
mov
mov
pop
pop
pop
leave
ret
push
pop
ret
mov
jmp
push
mov
push
push
push
mov
push
mov
push
push
push
push
push
mov
mov
test
je
mov
mov
test
je
andl
push
pushl
call
orl
mov
mov
pop
pop
pop
leave
ret
xor
cmp
setne
ret
mov
jmp
mov
push
mov
mov
mov
add
test
jl
mov
mov
mov
add
add
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
mov
add
mov
mov
push
pushl
mov
mov
call
push
push
call
pop
pop
mov
pop
mov
push
mov
cmp
jne
mov
push
call
pop
pop
pop
leave
ret
push
call
call
cmp
mov
je
push
push
call
mov
pop
test
pop
je
push
pushl
call
test
je
push
call
pop
call
orl
push
mov
pop
pop
ret
xor
pop
ret
call
mov
cmp
je
push
call
orl
ret
mov
movl
movl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
pop
test
pop
je
push
pushl
call
test
je
push
call
pop
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
mov
cmp
je
push
mov
test
jne
push
call
mov
test
je
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
cmp
je
push
call
pop
push
call
pop
push
pushl
call
pop
ret
push
mov
push
push
push
mov
push
mov
push
push
push
push
push
mov
xor
mov
call
cmp
je
movl
call
call
mov
jmp
push
pop
ret
mov
andl
orl
call
jmp
push
mov
push
push
push
mov
push
mov
push
push
push
push
push
mov
andl
mov
test
je
movl
call
jmp
push
pop
ret
mov
andl
orl
call
jmp
push
mov
push
andl
call
cmpw
jne
mov
test
je
add
mov
mov
mov
mov
pop
ret
push
mov
mov
call
lea
push
push
movl
call
test
je
cmpl
jne
cmpl
jb
push
pop
jmp
lea
push
push
push
call
test
je
xor
lea
cmp
je
mov
cmp
jl
cmp
jg
sub
mov
inc
cmp
jne
lea
push
push
push
call
add
test
jne
lea
jmp
lea
push
push
push
call
cmp
lea
je
mov
cmp
jl
cmp
jg
sub
mov
inc
cmp
jne
lea
push
lea
push
call
pop
pop
cmp
je
push
push
call
pop
cmp
pop
je
inc
mov
cmp
je
cmpb
jne
mov
jmp
inc
cmp
jne
push
push
push
call
add
cmp
je
cmp
je
cmp
je
lea
push
call
cmpb
pop
sbb
add
pop
leave
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
cmp
mov
jne
push
call
pop
jmp
cmp
jne
call
test
jne
pushl
call
xor
ret
push
pop
ret
mov
push
cmp
push
jne
push
xor
cmp
push
mov
jle
mov
mov
lea
push
push
pushl
call
push
push
pushl
call
pushl
push
pushl
call
add
inc
cmp
jl
pushl
push
pushl
call
pop
pop
jmp
cmp
jne
mov
mov
mov
test
je
push
push
push
call
mov
cmp
jne
pushl
call
pop
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
push
mov
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
push
push
mov
mov
push
mov
add
sub
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
mov
lea
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
jae
mov
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
mov
shr
lea
not
and
decb
jne
mov
and
mov
mov
jmp
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
jae
mov
mov
shr
not
and
decb
jne
mov
and
jmp
lea
mov
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
push
mov
mov
lea
sub
mov
and
shr
mov
imul
lea
mov
mov
dec
cmp
mov
mov
lea
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
jae
mov
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
lea
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
mov
sar
dec
mov
cmp
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
jae
mov
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
mov
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
push
pop
pop
pop
pop
leave
ret
cmpl
push
push
push
push
jne
mov
jmp
push
push
pushl
call
mov
test
je
mov
push
push
push
push
call
mov
test
je
push
mov
push
push
push
call
test
je
mov
cmp
jne
cmpl
jne
mov
cmpl
jne
mov
jmp
mov
mov
mov
mov
mov
mov
lea
lea
mov
lea
mov
mov
mov
xor
mov
xor
cmp
setge
dec
and
dec
inc
mov
mov
add
cmp
jl
push
push
push
call
add
mov
add
cmp
jae
orb
lea
mov
movl
add
jmp
mov
jmp
push
push
push
call
cmp
je
push
push
pushl
call
xor
pop
pop
pop
pop
ret
push
mov
push
push
pushl
call
cmp
jne
mov
mov
cmp
je
mov
mov
push
push
mov
mov
mov
mov
pushl
call
pop
ret
orl
pop
ret
push
mov
push
push
push
mov
push
cmpl
je
andl
lea
mov
cmpl
jne
mov
push
add
push
push
call
test
je
orl
decl
mov
test
je
cmp
jbe
mov
incl
decl
je
sub
sub
test
jge
cmpl
mov
mov
je
cmpl
jne
push
lea
pop
cmpl
jne
inc
add
cmp
jl
cmp
jne
push
call
pop
cmp
je
cmpl
jg
pop
pop
pop
leave
ret
mov
mov
push
mov
cmp
jbe
cmp
jb
mov
cmp
je
jmp
test
jne
mov
mov
and
cmp
jb
mov
mov
mov
mov
and
sub
mov
sub
pop
sar
lea
ret
xor
pop
ret
mov
mov
sub
sar
lea
mov
movzbl
add
andb
cmpl
movl
jne
incl
cmpl
jne
push
call
pop
ret
push
mov
push
push
push
push
mov
push
mov
cmp
je
mov
lea
mov
sub
sub
sar
shl
add
cmp
mov
jae
mov
mov
cmp
jl
cmp
jbe
push
push
push
call
add
test
jne
mov
mov
add
lea
add
cmp
mov
jb
jmp
mov
mov
mov
lea
mov
cmp
mov
jae
mov
cmp
jl
cmp
jbe
push
push
pushl
call
add
test
jne
mov
addl
add
cmp
jb
jmp
mov
mov
cmp
je
jmp
mov
sub
mov
jmp
mov
mov
cmpl
je
cmpl
jne
mov
cmp
je
jmp
mov
andl
mov
mov
sub
sub
sar
shl
add
cmpl
jne
cmpl
jge
add
incl
cmpl
je
mov
push
shl
push
push
push
mov
call
cmp
jne
push
pushl
push
call
mov
add
test
mov
jle
lea
mov
orb
lea
mov
mov
mov
mov
movl
add
add
decl
jne
mov
lea
cmp
jae
cmpl
je
add
jmp
cmp
sbb
and
mov
mov
mov
mov
sub
sub
lea
lea
mov
jmp
call
test
je
mov
mov
lea
mov
mov
mov
sub
mov
movzbl
sub
lea
jmp
xor
pop
pop
pop
leave
ret
push
mov
push
mov
mov
push
push
mov
push
mov
lea
cmp
mov
mov
mov
jb
lea
mov
cmp
jae
add
sub
jmp
andl
lea
mov
lea
jmp
add
cmpb
je
mov
lea
cmp
jae
mov
test
jne
push
lea
pop
cmpb
jne
inc
inc
jmp
cmp
jae
cmp
jne
mov
jmp
sub
cmp
jb
mov
mov
jmp
movzbl
add
lea
cmp
jb
lea
cmp
jae
lea
cmp
jae
mov
test
jne
push
lea
pop
cmpb
jne
inc
inc
jmp
lea
cmp
jae
sub
mov
mov
jmp
andl
lea
mov
mov
add
jmp
cmp
jae
sub
cmp
jb
mov
jmp
movzbl
add
jmp
lea
cmp
jae
sub
mov
mov
jmp
andl
lea
mov
mov
lea
imul
shl
sub
jmp
xor
pop
pop
pop
leave
ret
push
mov
push
mov
push
mov
push
movzbl
push
mov
andl
mov
sub
sar
cmp
lea
jbe
mov
sub
mov
add
movl
jmp
jae
mov
lea
lea
cmp
ja
lea
cmp
jae
cmpb
jne
inc
jmp
cmp
jne
mov
mov
mov
cmp
ja
cmp
jbe
lea
cmp
jae
xor
mov
cmp
jne
inc
cmpb
je
mov
jmp
andl
lea
mov
sub
add
movl
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
push
push
call
pop
pop
ret
push
mov
sub
fldl
fstpl
fldl
fstpl
fldl
fdivl
fmull
fsubrl
fstpl
fldl
fcompl
fnstsw
sahf
jbe
push
pop
leave
ret
xor
leave
ret
push
call
test
je
push
push
call
test
je
push
call
ret
jmp
push
mov
movsbl
push
call
cmp
pop
je
inc
cmpl
jle
movsbl
push
push
call
pop
pop
jmp
movsbl
mov
mov
and
test
jne
mov
mov
mov
inc
mov
mov
mov
mov
inc
test
jne
pop
ret
mov
mov
mov
test
je
cmp
je
mov
inc
test
jne
mov
inc
test
je
mov
test
je
cmp
je
cmp
je
inc
jmp
mov
dec
cmpb
je
cmp
jne
dec
mov
inc
inc
test
mov
jne
ret
mov
fldl
fcompl
fnstsw
sahf
jb
push
pop
ret
xor
ret
push
mov
push
push
cmpl
pushl
je
lea
push
call
mov
pop
pop
mov
mov
mov
mov
leave
ret
lea
push
call
mov
pop
pop
mov
mov
leave
ret
push
mov
sub
lea
push
push
lea
push
mov
push
push
fldl
fstpl
call
mov
lea
push
mov
lea
push
xor
cmpl
sete
xor
test
setg
add
add
push
call
lea
push
push
pushl
push
pushl
call
mov
add
pop
leave
ret
push
mov
push
xor
cmp
push
mov
push
mov
je
xor
cmp
setg
push
xor
cmpl
sete
add
push
call
pop
pop
cmpl
mov
jne
movb
lea
cmp
jle
mov
lea
mov
mov
mov
mov
xor
cmp
push
sete
add
add
push
call
cmp
pop
pop
mov
je
movb
mov
inc
cmpb
je
mov
dec
jns
neg
movb
inc
cmp
jl
mov
push
cltd
pop
idiv
add
mov
cltd
idiv
mov
inc
cmp
jl
mov
push
cltd
pop
idiv
add
mov
cltd
idiv
mov
add
mov
pop
pop
pop
pop
ret
push
mov
sub
lea
push
push
lea
push
mov
push
push
fldl
fstpl
call
mov
lea
push
mov
add
push
xor
cmpl
sete
add
push
call
lea
push
push
push
pushl
call
mov
add
pop
leave
ret
push
mov
push
push
mov
mov
push
mov
dec
cmpb
je
cmp
jne
xor
cmpl
sete
add
add
mov
movb
andb
cmpl
mov
jne
movb
lea
mov
test
jg
push
push
call
pop
movb
pop
inc
jmp
add
cmpl
jle
push
push
call
mov
pop
mov
mov
inc
pop
test
jge
cmpb
je
neg
jmp
neg
cmp
jl
mov
pushl
push
call
pushl
push
push
call
add
pop
mov
pop
pop
pop
ret
push
mov
sub
push
push
lea
push
push
lea
push
mov
push
push
fldl
fstpl
call
mov
mov
lea
xor
cmpl
sete
add
mov
lea
push
push
push
call
mov
add
dec
cmp
setl
cmp
jl
cmp
jge
test
je
mov
inc
test
jne
and
lea
push
push
push
pushl
call
add
jmp
lea
push
push
pushl
push
pushl
call
add
pop
pop
pop
leave
ret
push
mov
cmpl
je
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
add
pop
ret
pushl
pushl
pushl
pushl
call
jmp
pushl
pushl
pushl
pushl
call
add
pop
ret
push
mov
test
je
push
mov
push
call
inc
push
push
add
push
call
add
pop
pop
ret
push
mov
sub
push
mov
sub
cmp
jl
cmp
jg
push
push
mov
mov
add
test
jne
cmp
jle
inc
call
mov
lea
imul
sar
mov
mov
add
mov
add
mov
lea
mov
mov
lea
imul
add
imul
add
dec
cmpl
mov
pop
pop
lea
mov
je
cmpl
jne
cmpl
je
lea
push
call
pop
mov
test
je
add
mov
jmp
or
pop
leave
ret
push
mov
sub
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
andl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
andl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
lea
mov
mov
mov
mov
mov
addl
inc
inc
cmp
jl
xor
mov
lea
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
leave
ret
push
push
push
mov
mov
test
je
mov
add
cmp
jae
lea
cmpl
je
push
call
mov
add
add
add
cmp
jb
pushl
call
andl
pop
add
cmp
jl
pop
pop
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jb
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
inc
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
inc
bts
jmp
mov
mov
or
je
inc
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
xor
or
repnz
cmp
je
dec
dec
cmp
jae
mov
mov
mov
mov
inc
dec
jmp
mov
pop
pop
leave
ret
mov
push
push
test
pop
jne
mov
jmp
cmp
jge
mov
mov
push
push
call
pop
mov
test
pop
jne
push
push
mov
call
pop
mov
test
pop
jne
push
call
pop
xor
mov
mov
mov
add
add
cmp
jl
xor
mov
mov
mov
sar
and
mov
lea
mov
cmp
je
test
jne
orl
add
inc
cmp
jl
pop
ret
call
cmpb
je
jmp
ret
mov
mov
cmp
jb
cmp
ja
sub
sar
add
push
call
pop
ret
add
push
call
ret
mov
cmp
jge
add
push
call
pop
ret
mov
add
push
call
ret
mov
mov
cmp
jb
cmp
ja
sub
sar
add
push
call
pop
ret
add
push
call
ret
mov
cmp
jge
add
push
call
pop
ret
mov
add
push
call
ret
push
push
push
push
xor
xor
call
xor
cmp
pop
jle
mov
mov
cmp
je
testb
jne
push
push
call
pop
pop
mov
mov
testb
je
push
push
call
pop
pop
inc
cmp
jl
jmp
mov
jmp
push
shl
call
pop
mov
mov
mov
mov
cmp
je
add
push
call
mov
mov
add
push
call
mov
mov
cmp
je
orl
mov
mov
mov
mov
mov
push
call
pop
mov
pop
pop
pop
ret
push
mov
mov
test
je
test
jne
test
je
or
mov
jmp
or
test
mov
jne
push
call
pop
jmp
mov
mov
pushl
pushl
pushl
call
add
mov
test
je
cmp
je
mov
test
jne
mov
push
cmp
je
mov
sar
and
mov
lea
lea
jmp
mov
mov
pop
and
cmp
jne
or
mov
cmpl
jne
mov
test
je
test
jne
movl
mov
dec
mov
movzbl
inc
mov
pop
ret
neg
sbb
and
add
or
andl
or
pop
ret
push
mov
cmp
jae
mov
mov
sar
and
mov
lea
testb
je
push
push
call
pushl
pushl
push
call
push
mov
call
add
mov
pop
pop
ret
call
movl
call
andl
or
pop
ret
push
mov
sub
andl
cmpl
push
mov
push
push
mov
je
mov
mov
and
sar
lea
mov
lea
shl
add
mov
test
jne
test
je
mov
cmp
je
decl
mov
mov
lea
movl
movb
lea
push
push
mov
pushl
push
pushl
call
test
jne
call
push
pop
cmp
jne
call
movl
call
mov
jmp
cmp
je
push
call
pop
or
jmp
mov
mov
add
lea
mov
test
je
test
je
cmpb
jne
or
jmp
and
mov
mov
mov
mov
add
cmp
mov
jae
mov
mov
cmp
je
cmp
je
mov
inc
incl
jmp
dec
cmp
jae
mov
inc
cmpb
jne
addl
jmp
movb
inc
mov
jmp
lea
push
push
incl
lea
push
push
mov
pushl
call
test
jne
call
test
jne
cmpl
je
mov
testb
je
mov
cmp
je
movb
mov
inc
mov
jmp
cmp
jne
cmpb
jne
movb
jmp
push
push
pushl
call
add
cmpb
je
movb
inc
mov
cmp
jb
jmp
mov
lea
mov
test
jne
or
mov
sub
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
cmp
jae
mov
mov
sar
and
mov
lea
testb
je
push
push
call
pushl
pushl
push
call
push
mov
call
add
mov
pop
pop
ret
call
movl
call
andl
or
pop
ret
push
mov
sub
push
push
push
xor
cmp
mov
mov
jne
xor
jmp
mov
sar
lea
mov
and
lea
mov
shl
testb
je
push
push
pushl
call
add
mov
add
testb
je
mov
cmp
mov
mov
jbe
lea
mov
sub
cmp
jae
mov
incl
mov
cmp
jne
incl
movb
inc
mov
inc
mov
lea
sub
cmp
jl
mov
lea
sub
lea
push
push
lea
push
push
mov
pushl
call
test
je
mov
add
cmp
jl
mov
sub
cmp
jb
xor
mov
cmp
jne
cmp
je
push
pop
cmp
jne
call
movl
call
mov
jmp
call
mov
jmp
lea
push
push
pushl
pushl
pushl
call
test
je
mov
mov
mov
jmp
call
mov
jmp
pushl
call
pop
or
jmp
mov
testb
je
mov
cmpb
je
call
movl
call
mov
jmp
sub
pop
pop
pop
leave
ret
push
mov
pushl
call
test
pop
je
cmp
jne
xor
jmp
cmp
jne
push
pop
incl
testw
jne
cmpl
push
push
lea
mov
jne
push
call
test
pop
mov
jne
lea
push
mov
mov
pop
mov
mov
jmp
mov
mov
mov
mov
mov
orw
push
pop
pop
pop
pop
ret
xor
pop
ret
cmpl
push
je
mov
testb
je
push
call
andb
andl
andl
andl
pop
pop
ret
push
mov
cmp
jae
mov
mov
sar
and
mov
lea
testb
je
push
push
call
pushl
pushl
push
call
push
mov
call
add
mov
pop
pop
ret
call
movl
call
andl
or
pop
ret
push
mov
push
push
call
cmp
pop
jne
call
movl
jmp
pushl
push
pushl
push
call
mov
cmp
jne
call
jmp
xor
test
je
push
call
pop
or
jmp
mov
and
sar
mov
mov
lea
andb
lea
mov
pop
pop
ret
push
mov
cmp
push
push
jae
mov
sar
lea
mov
and
lea
mov
shl
testb
je
push
call
mov
pop
testb
je
push
call
pop
push
call
test
jne
call
mov
jmp
xor
test
je
call
mov
call
movl
or
push
call
pop
mov
jmp
call
movl
or
pop
pop
pop
ret
push
mov
cmp
jae
mov
mov
sar
and
mov
lea
testb
je
push
push
call
push
call
push
mov
call
add
mov
pop
pop
ret
call
movl
call
andl
or
pop
ret
push
mov
push
push
call
cmp
pop
je
cmp
je
cmp
jne
push
call
push
mov
call
pop
cmp
pop
je
push
call
pop
push
call
test
jne
call
mov
jmp
xor
push
call
mov
and
sar
pop
mov
lea
andb
test
je
push
call
pop
or
jmp
xor
pop
pop
ret
push
mov
mov
test
je
test
je
pushl
call
andw
xor
pop
mov
mov
mov
pop
ret
int3
mov
push
push
push
mov
mov
test
je
mov
test
je
mov
mov
mov
inc
cmp
je
test
je
mov
inc
cmp
je
test
jne
pop
pop
pop
xor
ret
mov
inc
cmp
jne
lea
mov
test
je
mov
add
cmp
jne
mov
test
je
mov
add
cmp
je
jmp
xor
pop
pop
pop
mov
jmp
lea
pop
pop
pop
ret
mov
pop
pop
pop
ret
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
inc
bts
jmp
mov
or
nop
inc
mov
or
je
inc
bt
jb
mov
add
pop
leave
ret
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
inc
bts
jmp
mov
or
nop
inc
mov
or
je
inc
bt
jae
mov
add
pop
leave
ret
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
dec
dec
not
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
imul
mov
mov
cmp
ja
xor
cmp
jne
push
pop
add
and
mov
jmp
xor
mov
cmp
ja
mov
cmp
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
orl
call
cmp
je
pushl
jmp
xor
mov
push
call
pop
ret
cmp
jne
cmp
ja
push
call
pop
movl
mov
shr
push
call
pop
mov
orl
call
cmp
je
push
push
pushl
call
add
cmp
jne
push
push
pushl
call
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
push
call
pop
ret
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
call
mov
pushl
pushl
call
pop
test
pop
je
mov
test
mov
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
shl
mov
add
andl
mov
mov
inc
add
cmp
jl
mov
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
leave
ret
mov
mov
push
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
lea
cmp
jae
cmp
je
xor
pop
pop
ret
push
xor
cmp
jne
mov
cmp
jl
cmp
jg
sub
pop
ret
push
mov
push
push
call
cmp
mov
je
push
call
push
call
pop
push
pop
pushl
call
test
pop
mov
je
push
call
pop
jmp
push
call
mov
pop
pop
pop
ret
push
mov
push
cmpl
push
jne
mov
cmp
jl
cmp
jg
sub
jmp
mov
cmp
jge
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
jne
mov
jmp
mov
mov
sar
movzbl
testb
je
andb
mov
mov
push
jmp
andb
mov
push
pop
lea
push
push
push
push
push
lea
push
push
pushl
call
add
test
je
cmp
jne
movzbl
jmp
movzbl
movzbl
shl
or
pop
leave
ret
push
push
call
pushl
pushl
push
call
push
mov
call
add
mov
pop
ret
push
mov
sub
push
mov
test
je
push
call
test
pop
jne
call
movl
call
movl
xor
pop
leave
ret
lea
andb
push
lea
push
lea
add
push
push
mov
movb
movb
call
jmp
lea
push
push
call
test
je
inc
cmp
ja
mov
test
jne
cmp
jg
mov
push
call
pop
mov
test
jne
call
movl
jmp
cmp
jle
call
movl
jmp
lea
push
push
call
pop
pop
jmp
push
mov
mov
test
je
andb
add
mov
lea
push
movb
movb
call
test
je
cmp
je
push
pop
pop
ret
xor
pop
ret
push
mov
cmpl
push
mov
mov
jne
pushl
pushl
push
call
add
jmp
push
push
call
mov
pop
test
je
mov
mov
dec
movzbl
testb
mov
je
inc
inc
test
je
mov
dec
mov
inc
inc
test
je
jmp
inc
inc
test
je
test
jne
jmp
andb
jmp
andb
mov
dec
test
pop
je
lea
xor
mov
shr
rep
mov
and
rep
push
call
mov
pop
pop
pop
ret
cmpl
jne
push
call
cmpl
pop
jne
call
incl
push
call
pop
ret
push
mov
push
push
push
push
push
push
pop
xor
push
mov
call
orl
orl
mov
movl
call
mov
pop
cmp
jne
push
call
movl
call
cmp
je
mov
mov
imul
cmp
push
pop
mov
mov
je
mov
imul
add
mov
cmp
je
mov
cmp
je
sub
mov
imul
mov
jmp
mov
mov
lea
mov
push
push
push
mov
pushl
push
push
push
pushl
call
test
je
cmp
jne
mov
andb
jmp
mov
andb
lea
push
push
push
pushl
push
push
push
pushl
call
test
je
cmp
jne
mov
andb
jmp
cmpb
je
mov
cmp
je
push
push
call
pop
test
pop
je
pushl
call
push
call
inc
push
call
add
cmp
mov
je
push
push
call
push
call
push
push
pushl
call
mov
add
add
andb
cmpb
jne
movl
inc
push
call
pop
mov
mov
imul
mov
mov
cmp
je
cmp
jl
cmp
jg
inc
jmp
cmpb
jne
inc
push
call
imul
pop
mov
add
mov
mov
cmp
jl
cmp
jg
inc
jmp
cmpb
jne
inc
push
call
pop
mov
add
mov
mov
cmp
jl
cmp
jg
inc
jmp
cmpl
je
neg
mov
movsbl
test
mov
je
push
push
pushl
call
mov
add
andb
jmp
mov
andb
jmp
push
call
pop
pop
pop
pop
leave
ret
push
push
call
pushl
call
push
mov
call
add
mov
pop
ret
push
push
push
xor
cmp
jne
xor
jmp
mov
push
pop
mov
cmp
jne
cmp
je
cmp
je
movzwl
push
cmp
movzwl
push
movzwl
push
movzwl
push
jne
movzwl
push
push
movzwl
push
movzwl
push
push
push
jmp
movzwl
push
push
movzwl
push
push
push
push
push
call
movzwl
add
cmp
push
movzwl
push
movzwl
push
movzwl
push
jne
movzwl
push
push
movzwl
push
movzwl
push
pushl
push
push
call
add
jmp
movzwl
push
push
movzwl
push
push
pushl
push
jmp
push
push
push
push
push
push
push
push
push
push
push
call
push
push
push
push
push
push
push
push
pushl
push
push
call
add
mov
mov
mov
cmp
jge
cmp
jl
cmp
jg
cmp
jle
cmp
jge
mov
pop
pop
pop
ret
cmp
jl
cmp
jg
cmp
jle
cmp
jl
mov
imul
add
imul
add
imul
cmp
jne
xor
cmp
setge
mov
jmp
xor
cmp
setl
jmp
push
mov
cmpl
push
mov
push
jne
mov
mov
andl
mov
jne
shl
mov
jmp
shl
mov
mov
lea
imul
lea
push
sar
mov
push
add
lea
pop
cltd
idiv
mov
pop
cmp
jg
imul
sub
add
lea
jmp
imul
sub
add
add
cmpl
jne
cmpl
jne
mov
jmp
mov
cmp
jle
sub
jmp
mov
test
jne
mov
jmp
mov
add
cmpl
jne
mov
mov
imul
add
mov
imul
add
imul
add
mov
jmp
mov
mov
imul
add
imul
add
add
imul
add
mov
jns
add
dec
mov
jmp
mov
cmp
jl
sub
inc
mov
mov
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
mov
lea
cmpl
jne
mov
mov
or
je
mov
inc
mov
inc
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
jmp
lock
cmpl
jg
push
jmp
lock
push
call
movl
mov
xor
nop
or
je
mov
inc
mov
inc
cmp
je
push
push
call
mov
add
call
add
cmp
je
sbb
sbb
mov
pop
or
jne
lock
jmp
push
call
add
mov
pop
pop
pop
leave
ret
push
push
pop
pushl
pushl
call
test
je
xor
mov
pop
ret
push
push
pop
pushl
pushl
call
test
je
xor
mov
pop
ret
push
push
pop
pushl
call
test
je
xor
mov
pop
ret
incl
push
call
pop
mov
test
mov
je
orl
movl
jmp
orl
lea
mov
movl
mov
andl
mov
ret
mov
cmp
jb
xor
ret
mov
and
sar
lea
mov
mov
and
ret
push
mov
push
push
mov
push
push
call
mov
xor
cmp
je
push
call
push
call
pop
push
pop
pushl
pushl
call
pop
mov
test
pop
je
push
call
pop
jmp
push
call
mov
pop
pop
pop
pop
ret
push
mov
mov
test
jne
pop
ret
cmpl
jne
mov
cmp
ja
push
mov
pop
pop
ret
lea
andl
push
push
pushl
push
lea
push
push
push
pushl
call
test
je
cmpl
je
call
movl
or
pop
ret
int3
push
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
div
mov
xor
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
xchg
mull
add
jb
cmp
ja
jb
cmp
jbe
sub
sbb
sub
sbb
neg
neg
sbb
pop
ret
push
call
push
call
pop
pop
push
call
push
mov
push
push
fstcw
pushl
call
mov
mov
not
and
mov
and
or
push
call
pop
mov
pop
fldcw
mov
pop
leave
ret
mov
and
push
pushl
call
pop
pop
ret
push
mov
xor
push
test
push
je
push
pop
test
je
or
test
je
or
test
je
or
test
je
or
test
je
or
movzwl
push
mov
mov
mov
and
mov
je
cmp
je
cmp
je
cmp
jne
or
jmp
or
jmp
or
and
pop
je
cmp
jne
or
jmp
or
pop
pop
test
pop
je
or
ret
push
mov
xor
push
test
je
push
pop
test
je
or
test
je
or
test
je
or
test
je
or
test
je
or
mov
mov
and
mov
je
cmp
je
cmp
je
cmp
jne
or
jmp
or
jmp
or
mov
and
je
cmp
jne
or
jmp
or
pop
test
pop
je
or
ret
push
xor
cmp
jne
mov
cmp
jl
cmp
jg
add
pop
ret
push
mov
push
push
call
cmp
mov
je
push
call
push
call
pop
push
pop
pushl
call
test
pop
mov
je
push
call
pop
jmp
push
call
mov
pop
pop
pop
ret
push
mov
push
cmpl
push
push
push
jne
mov
cmp
jl
cmp
jg
add
jmp
mov
mov
push
cmp
pop
jge
cmp
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
jne
mov
jmp
mov
mov
sar
movzbl
testb
je
andb
push
mov
mov
pop
jmp
andb
mov
mov
push
push
lea
push
push
push
lea
push
push
pushl
call
add
test
je
cmp
jne
movzbl
jmp
movzbl
movzbl
shl
or
pop
pop
pop
leave
ret
mov
push
push
cltd
pop
idiv
push
mov
mov
cltd
idiv
pop
mov
sub
or
shl
not
test
jne
inc
cmp
jge
lea
cmpl
jne
inc
add
cmp
jl
push
pop
pop
ret
xor
pop
ret
mov
push
push
push
push
mov
cltd
pop
idiv
mov
mov
cltd
idiv
lea
push
push
pop
push
pop
sub
shl
push
pushl
call
add
dec
js
lea
test
je
push
push
pushl
call
add
dec
sub
test
jge
pop
pop
pop
ret
push
mov
push
push
mov
push
push
push
lea
push
pop
andl
lea
push
mov
pop
cltd
idiv
push
mov
mov
cltd
idiv
mov
pop
push
mov
lea
mov
sub
pop
mov
shl
test
je
inc
push
pushl
call
pop
test
pop
jne
push
pushl
call
pop
mov
pop
mov
or
mov
shl
push
pop
and
mov
inc
cmp
jge
mov
sub
lea
xor
rep
mov
pop
pop
pop
leave
ret
mov
mov
push
push
sub
pop
mov
mov
add
dec
jne
pop
ret
push
mov
xor
stos
stos
stos
pop
ret
mov
xor
cmpl
jne
inc
add
cmp
jl
push
pop
ret
xor
ret
push
mov
sub
mov
push
push
push
push
mov
pop
or
cltd
mov
movl
idiv
mov
mov
cltd
idiv
andl
mov
shl
sub
not
mov
mov
and
mov
mov
shr
or
mov
mov
mov
add
shl
decl
mov
jne
mov
push
pop
mov
push
pop
shl
cmp
jl
mov
mov
sub
mov
mov
jmp
mov
andl
dec
sub
jns
pop
pop
pop
leave
ret
push
mov
sub
mov
push
push
push
movzwl
mov
and
mov
mov
mov
mov
movzwl
mov
and
sub
mov
shl
cmp
mov
jne
lea
xor
push
call
test
pop
jne
lea
push
call
pop
push
pop
jmp
lea
push
lea
push
call
pushl
lea
push
call
add
test
je
inc
mov
mov
sub
cmp
jge
lea
push
call
pop
jmp
cmp
jg
sub
mov
lea
push
lea
push
call
lea
push
push
call
pushl
lea
push
call
mov
inc
push
lea
push
call
add
xor
jmp
cmp
jl
lea
push
call
pushl
orb
lea
push
call
mov
add
add
push
jmp
pushl
mov
andb
lea
push
add
call
pop
pop
xor
push
pop
sub
mov
shl
mov
neg
sbb
and
or
or
cmp
jne
mov
mov
mov
mov
jmp
cmp
jne
mov
mov
pop
pop
pop
leave
ret
push
pushl
pushl
call
add
ret
push
pushl
pushl
call
add
ret
push
mov
sub
xor
push
push
push
push
pushl
lea
push
lea
push
call
pushl
lea
push
call
add
leave
ret
push
mov
sub
xor
push
push
push
push
pushl
lea
push
lea
push
call
pushl
lea
push
call
add
leave
ret
push
mov
mov
push
mov
push
mov
mov
push
lea
movb
test
mov
jle
mov
xor
mov
test
je
movsbl
inc
jmp
push
pop
mov
inc
decl
jne
mov
andb
test
jl
cmpb
jl
dec
cmpb
jne
movb
jmp
incb
cmpb
jne
incl
jmp
push
call
inc
push
push
push
call
add
pop
pop
pop
pop
ret
push
mov
sub
push
lea
push
push
lea
push
call
pop
lea
pop
lea
push
push
push
sub
mov
movsl
movsl
movsw
call
mov
mov
mov
movsbl
mov
movswl
mov
lea
push
push
call
add
mov
mov
pop
pop
leave
ret
push
mov
push
mov
push
push
push
mov
mov
mov
and
shr
and
mov
mov
mov
movzwl
mov
and
test
mov
je
cmp
je
lea
jmp
mov
jmp
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
jmp
lea
mov
mov
shr
shl
or
mov
or
shl
mov
mov
test
jne
mov
add
mov
shr
or
lea
mov
mov
add
mov
jmp
mov
or
mov
pop
pop
pop
leave
ret
push
call
pop
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
push
push
push
xor
call
pop
push
pop
cmp
jle
push
mov
mov
shl
mov
test
je
testb
je
push
call
cmp
pop
je
inc
cmp
jl
mov
mov
add
push
call
mov
pushl
call
mov
pop
andl
inc
cmp
jl
pop
push
call
pop
mov
pop
pop
ret
cmpl
push
push
mov
push
je
test
jne
cmp
je
call
test
jne
mov
test
je
mov
test
je
push
call
pop
mov
mov
test
je
push
call
cmp
pop
jbe
mov
cmpb
jne
push
push
push
call
add
test
je
add
jmp
mov
lea
jmp
xor
pop
pop
pop
ret
push
mov
sub
mov
andl
dec
push
push
dec
push
je
dec
dec
je
sub
je
sub
je
sub
je
sub
je
dec
je
or
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
call
mov
pushl
pushl
call
mov
pop
add
pop
mov
jmp
mov
mov
push
movl
call
mov
pop
cmp
jne
cmpl
je
push
call
pop
jmp
xor
cmp
jne
cmp
je
push
call
pop
push
call
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
mov
mov
jne
mov
movl
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
add
andl
mov
mov
inc
add
cmp
jl
jmp
mov
cmpl
je
push
call
pop
cmpl
jne
pushl
push
call
pop
pop
jmp
pushl
call
cmpl
pop
je
cmpl
jne
mov
cmpl
mov
jne
mov
mov
xor
pop
pop
pop
leave
ret
mov
mov
push
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
lea
cmp
jae
cmp
je
xor
pop
pop
ret
push
mov
cmpl
mov
push
push
push
je
mov
movb
inc
neg
jmp
mov
mov
mov
xor
divl
mov
mov
xor
divl
cmp
mov
jbe
add
jmp
add
mov
inc
test
ja
andb
dec
mov
mov
mov
mov
dec
inc
cmp
jb
pop
pop
pop
pop
ret
push
mov
xor
cmpl
jne
cmp
jge
push
pop
push
pushl
pushl
pushl
call
mov
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
lea
cmpl
jne
mov
mov
mov
lea
mov
or
mov
je
or
je
inc
inc
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
dec
jne
xor
cmp
je
mov
jb
neg
jmp
lock
cmpl
jg
push
jmp
lock
mov
push
call
movl
mov
xor
xor
mov
mov
or
mov
je
or
je
inc
inc
push
push
push
call
mov
add
call
add
pop
cmp
jne
dec
jne
xor
cmp
je
mov
jb
neg
pop
or
jne
lock
jmp
mov
push
call
add
mov
mov
pop
pop
pop
leave
ret
mov
push
mov
xor
lea
cmp
jb
cmp
jae
push
pop
mov
pop
mov
ret
push
mov
push
mov
push
pushl
pushl
call
add
test
je
lea
push
push
pushl
call
add
test
je
incl
lea
push
pushl
pushl
call
add
test
je
incl
lea
push
pushl
pushl
call
add
pop
pop
ret
mov
push
push
mov
mov
mov
add
mov
lea
shr
or
mov
mov
mov
shr
shl
or
pop
mov
pop
ret
mov
push
push
mov
mov
mov
mov
shl
shr
or
mov
mov
shl
shr
shr
or
pop
mov
mov
pop
ret
push
mov
sub
mov
push
mov
xor
cmp
push
movl
mov
mov
mov
jbe
push
mov
mov
lea
movsl
movsl
push
movsl
call
push
call
lea
push
push
call
push
call
mov
andl
andl
movsbl
mov
lea
push
push
call
add
incl
decl
jne
xor
pop
cmp
jne
mov
mov
shr
mov
mov
mov
shr
shl
or
shl
addl
mov
mov
jmp
mov
test
jne
push
call
addl
pop
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
push
mov
lea
push
mov
xor
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
inc
jmp
push
pop
mov
inc
cmp
ja
jmp
cmp
jl
cmp
jg
push
jmp
cmp
jne
push
jmp
movsbl
sub
je
dec
dec
je
sub
jne
jmp
push
movl
pop
jmp
andl
push
pop
jmp
cmp
mov
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jle
cmp
jle
cmp
jle
cmp
jg
push
jmp
dec
push
jmp
cmp
jl
cmp
jle
cmp
je
cmp
jne
mov
jmp
mov
cmp
jle
movzbl
push
push
call
pop
pop
push
pop
jmp
mov
movzbl
mov
and
test
je
cmpl
jae
mov
incl
sub
incl
mov
jmp
incl
mov
inc
jmp
cmp
jne
mov
jmp
cmpl
mov
mov
jne
cmp
jne
decl
mov
inc
jmp
cmp
jle
movzbl
push
push
call
pop
pop
push
pop
jmp
mov
movzbl
mov
and
test
je
cmpl
jae
mov
incl
sub
incl
decl
mov
mov
inc
jmp
cmp
je
cmp
je
jmp
cmp
mov
jle
movzbl
push
push
call
pop
pop
push
pop
jmp
mov
movzbl
mov
and
test
je
mov
jmp
lea
cmp
mov
jl
cmp
jle
movsbl
sub
je
dec
dec
je
sub
jne
push
jmp
mov
cmp
jne
mov
inc
jmp
cmp
jl
cmp
jg
jmp
cmp
jl
cmp
jg
push
pop
dec
jmp
cmp
jne
jmp
cmpl
je
movsbl
lea
sub
mov
je
dec
dec
jne
orl
push
pop
jmp
push
pop
jmp
push
dec
pop
cmp
je
jmp
mov
jmp
movl
xor
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
mov
movzbl
mov
and
test
je
movsbl
lea
lea
cmp
jg
mov
inc
jmp
mov
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
mov
movzbl
mov
and
test
je
mov
inc
jmp
dec
jmp
mov
mov
cmpl
mov
je
push
pop
cmp
jbe
cmpb
jl
incb
mov
mov
dec
incl
jmp
mov
cmpl
jbe
dec
cmpb
jne
decl
incl
jmp
lea
push
lea
pushl
push
call
mov
xor
add
cmp
jge
neg
add
cmp
jne
add
cmp
jne
sub
cmp
jle
movl
mov
mov
mov
mov
cmpl
je
xor
mov
mov
xor
movl
jmp
cmp
jge
movl
jmp
pushl
push
lea
push
call
mov
mov
mov
mov
add
jmp
xor
xor
xor
xor
jmp
xor
xor
xor
xor
movl
jmp
cmpl
je
xor
xor
xor
xor
movl
mov
or
pop
mov
mov
mov
mov
pop
mov
pop
leave
ret
cmp
add
mov
adc
add
fimuls
add
pop
mov
adc
mov
adc
add
push
mov
sub
mov
push
mov
push
mov
mov
and
and
test
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movl
mov
je
movb
jmp
movb
mov
test
jne
test
jne
cmp
jne
andw
movb
movb
movb
jmp
cmp
jne
mov
movw
cmp
jne
cmpl
je
test
jne
push
jmp
test
je
cmp
jne
cmpl
jne
push
jmp
cmp
jne
cmpl
jne
push
lea
push
call
pop
movb
pop
andl
jmp
push
lea
push
call
pop
movb
pop
jmp
movzwl
mov
mov
shr
imul
shr
andw
push
lea
mov
imul
mov
lea
mov
sar
mov
movswl
neg
push
lea
push
call
add
cmpw
jb
lea
inc
push
lea
push
call
pop
pop
testb
mov
je
mov
movswl
add
test
jg
jmp
mov
cmp
jle
push
pop
movzwl
sub
andw
movl
lea
push
call
decl
pop
jne
test
jge
neg
and
jle
lea
push
call
dec
pop
jne
lea
lea
test
mov
jle
mov
lea
lea
movsl
movsl
lea
push
movsl
call
lea
push
call
lea
push
lea
push
call
lea
push
call
mov
mov
andb
add
add
incl
decl
mov
jne
mov
mov
dec
dec
cmp
lea
jl
cmp
jb
cmpb
jne
movb
dec
jmp
cmp
jae
inc
incw
incb
sub
sub
mov
movsbl
andb
mov
pop
pop
pop
leave
ret
cmp
jb
cmpb
jne
dec
jmp
cmp
jae
andw
movb
movb
movb
andb
push
pop
jmp
push
mov
cmpl
jne
xor
pop
ret
pushl
pushl
pushl
pushl
pushl
push
pushl
call
add
test
jne
mov
pop
ret
add
pop
ret
push
push
push
push
mov
push
xor
mov
cmp
je
mov
push
push
push
push
push
push
push
push
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
push
pushl
push
push
call
test
je
push
pushl
call
mov
add
pop
cmp
pop
jne
xor
pop
pop
pop
pop
pop
ret
or
jmp
push
mov
sub
push
mov
push
mov
mov
xor
push
mov
mov
mov
mov
mov
mov
mov
xor
and
and
and
cmp
lea
mov
jae
cmp
jae
cmp
ja
cmp
ja
xor
jmp
test
mov
jne
incl
test
jne
xor
cmp
jne
cmp
jne
jmp
xor
cmp
jne
incl
test
jne
cmp
jne
cmp
jne
mov
mov
mov
jmp
mov
lea
mov
movl
mov
add
cmpl
jle
add
lea
mov
mov
mov
mov
mov
mov
movzwl
movzwl
imul
mov
add
push
push
pushl
call
add
test
je
mov
incw
addl
subl
decl
jne
addl
incl
decl
cmpl
jg
addl
cmpw
jle
testb
jne
lea
push
call
addl
pop
cmpw
jg
cmpw
jg
addl
cmpw
jge
movswl
neg
add
mov
testb
je
incl
lea
push
call
dec
pop
jne
cmpl
je
orb
cmpw
ja
mov
and
cmp
jne
cmpl
jne
andl
cmpl
jne
andl
cmpw
jne
incl
movw
jmp
incw
jmp
incl
jmp
incl
mov
cmp
jae
mov
or
mov
mov
mov
mov
mov
mov
jmp
neg
sbb
andl
and
add
andl
mov
pop
pop
pop
leave
ret
push
mov
sub
push
mov
xor
sub
cmp
je
jge
mov
mov
neg
mov
sub
cmp
jne
mov
mov
cmp
je
push
push
mov
add
sarl
and
cmp
je
lea
cmpw
lea
jb
lea
movsl
movsl
movsl
decl
lea
push
pushl
call
pop
pop
xor
cmp
jne
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
push
pop
jne
push
mov
push
push
push
push
push
call
test
je
mov
jmp
push
mov
push
push
push
push
push
call
test
je
movl
mov
cmp
jle
push
pushl
call
pop
pop
mov
mov
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
push
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
cmp
je
cmp
jne
cmp
jne
push
pop
jmp
cmp
jle
mov
jmp
cmp
jg
lea
push
pushl
call
test
je
cmp
jle
cmpl
jb
lea
cmp
je
mov
cmp
je
mov
mov
cmp
jb
cmp
jbe
inc
inc
cmp
jne
push
jmp
cmp
jle
cmpl
jb
lea
cmp
je
mov
cmp
je
mov
mov
cmp
jb
cmp
jbe
inc
inc
cmp
jne
jmp
push
push
push
pushl
push
pushl
call
mov
cmp
je
mov
add
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
push
pop
cmp
je
pushl
pushl
push
pushl
push
pushl
mov
call
test
je
push
push
pushl
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
push
pushl
call
test
je
push
push
pushl
pushl
pushl
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
je
push
pushl
call
mov
pop
cmp
pop
mov
je
cmp
je
mov
xor
cmp
sete
cmp
jne
push
call
pop
mov
cmp
jne
cmp
je
cmp
je
call
test
je
or
pop
pop
pop
leave
ret
cmp
jne
push
call
cmp
pop
mov
je
mov
cmp
jne
push
call
cmp
pop
mov
je
mov
sub
mov
mov
push
pushl
call
mov
pop
test
pop
jl
cmpl
je
test
je
pushl
lea
call
pop
cmpl
je
mov
inc
mov
add
jmp
mov
shl
push
pushl
call
pop
test
pop
je
jmp
mov
mov
jmp
test
jne
test
jge
neg
lea
push
push
call
pop
test
pop
je
mov
mov
andl
mov
cmpl
je
pushl
call
inc
inc
push
call
mov
pop
test
pop
je
pushl
push
call
mov
pop
sub
pop
add
andb
inc
neg
sbb
not
and
push
push
call
push
call
pop
xor
jmp
push
mov
push
mov
test
je
mov
push
push
pushl
call
add
test
jne
mov
mov
cmp
je
test
je
mov
add
test
jne
mov
sub
sar
neg
pop
pop
ret
mov
sub
sar
jmp
push
mov
xor
test
jne
xor
pop
ret
cmpl
lea
je
mov
inc
add
test
jne
push
push
lea
push
push
call
mov
pop
test
mov
jne
push
call
pop
mov
mov
test
je
push
add
call
mov
mov
pop
add
jmp
andl
mov
pop
pop
pop
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
call
sub
mov
push
push
lea
mov
call
mov
push
call
pop
push
push
lea
call
andl
lea
push
lea
call
lea
push
push
movl
call
pop
mov
call
push
push
mov
mov
movl
andl
push
lea
call
orl
mov
call
mov
pop
mov
leave
ret
push
mov
sub
push
lea
call
lea
push
push
call
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
pushl
call
movl
mov
pop
ret
mov
call
sub
mov
push
push
lea
mov
call
mov
push
call
pop
push
push
lea
call
andl
lea
push
lea
call
lea
push
push
movl
call
pop
push
call
ret
testb
jne
orb
call
testb
jne
orb
jmp
push
call
pop
ret
push
call
pop
ret
mov
push
push
push
push
mov
pop
cmp
jne
push
jmp
test
mov
jne
push
push
call
test
jne
push
call
push
call
pop
mov
jmp
cmp
jne
mov
cmpl
jne
push
call
jmp
cmp
jne
push
call
mov
pop
pop
pop
ret
push
push
call
cmp
jne
push
call
ret
cmpl
jne
push
call
ret
int3
int3
int3
int3
int3
int3
int3
call
jmp
push
push
mov
call
ret
push
call
pop
ret
push
call
test
jge
push
call
ret
push
mov
cmpl
push
push
jne
xor
jmp
pushl
call
mov
inc
lea
add
and
call
mov
push
push
push
pushl
andw
push
push
call
test
jne
mov
call
test
je
call
and
or
jmp
xor
push
call
push
call
lea
pop
pop
pop
ret
push
push
mov
xor
cmp
jne
xor
jmp
push
push
push
call
lea
push
call
mov
pop
cmp
pop
jne
push
call
push
push
push
push
push
push
push
push
mov
call
test
jne
mov
call
test
je
call
and
or
jmp
xor
push
call
mov
pop
pop
pop
pop
ret
push
push
mov
mov
cmp
je
cmp
je
cmp
je
push
call
cmp
jne
movw
jmp
cmp
jne
mov
mov
neg
sbb
mov
jmp
movw
mov
mov
mov
pop
pop
ret
push
pushl
call
ret
push
mov
push
mov
andl
test
je
mov
lea
push
push
push
call
test
jl
mov
push
pushl
mov
push
call
mov
mov
push
mov
call
test
pop
jne
lea
push
push
call
test
je
andl
pushl
pushl
call
leave
ret
push
mov
sub
push
lea
pushl
pushl
call
lea
push
push
call
mov
push
mov
andl
mov
mov
movl
test
mov
je
cmpb
je
mov
push
call
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
push
mov
mov
mov
mov
andl
mov
test
movl
je
mov
push
call
mov
pop
ret
push
mov
mov
movl
test
je
mov
push
call
mov
test
je
push
call
pop
ret
mov
call
push
mov
andl
test
jge
xor
mov
cmp
jl
push
mov
call
mov
jmp
push
mov
mov
mov
push
pop
sub
push
push
lea
push
push
mov
call
mov
lea
push
call
andb
lea
mov
call
mov
pop
mov
mov
leave
ret
mov
call
push
mov
andl
test
jge
xor
mov
cmp
jl
push
mov
call
mov
jmp
mov
push
mov
push
pop
push
push
push
lea
push
mov
call
mov
lea
push
call
andb
lea
mov
call
mov
pop
mov
mov
leave
ret
push
pushl
call
ret
push
mov
mov
mov
cmp
jg
pushl
add
push
call
pop
test
pop
jne
or
jmp
sub
pop
ret
push
mov
sub
mov
andl
push
push
push
mov
mov
mov
cmpb
je
cmpb
jne
push
call
mov
pop
mov
cmp
je
xor
test
mov
je
cmp
jne
addl
jmp
cmp
jne
addl
mov
mov
mov
jmp
cmp
je
cmp
je
cmp
je
cmp
jne
push
call
mov
pop
mov
test
jne
cmp
jne
push
call
pop
mov
mov
test
je
movsbl
push
call
test
pop
je
push
call
pop
mov
jmp
xor
cmpb
jne
push
call
mov
pop
cmpb
jne
addl
push
mov
mov
call
pop
mov
andl
push
push
push
call
add
test
jne
add
movl
jmp
push
call
pop
mov
mov
test
je
movsbl
push
call
test
pop
je
push
call
pop
mov
jmp
movsbl
sub
je
sub
je
dec
dec
je
sub
je
sub
jne
movl
jmp
movl
push
call
pop
mov
movsbl
or
mov
cmp
jg
je
sub
je
push
pop
sub
je
sub
je
sub
je
sub
je
sub
je
movsbl
cmp
jg
je
sub
je
sub
je
sub
je
dec
je
dec
je
dec
je
jmp
sub
je
sub
je
sub
je
sub
je
sub
jne
addl
mov
mov
test
je
push
call
pop
jmp
addl
push
pop
jmp
addl
mov
mov
test
jne
push
pop
jmp
push
call
mov
cmp
jge
push
pop
test
je
test
je
cmp
jl
mov
cmp
jg
mov
jmp
lea
cmp
jle
mov
add
and
call
addl
mov
mov
push
push
add
fldl
fstpl
push
pushl
push
push
call
push
call
add
jmp
addl
mov
jmp
sub
je
dec
je
dec
je
sub
je
sub
je
jmp
addl
push
pop
mov
add
cmp
jl
mov
jmp
testb
je
addl
jmp
addl
add
jmp
push
call
add
pop
push
call
pop
mov
jmp
mov
pushl
mov
call
pushl
pushl
pushl
call
add
mov
push
call
lea
pop
pop
pop
leave
ret
mov
lea
push
pushl
call
ret
push
push
push
mov
call
mov
xor
mov
test
je
movsbl
push
pushl
call
pop
test
pop
je
test
jne
mov
jmp
xor
push
call
mov
pop
mov
test
jne
test
je
and
mov
sub
mov
pop
pop
pop
ret
push
push
mov
push
test
mov
je
push
call
test
je
mov
call
mov
mov
test
je
movsbl
push
push
call
pop
test
pop
je
push
call
pop
mov
jmp
mov
cmp
je
mov
sub
add
lea
push
push
push
call
mov
add
mov
pop
pop
pop
ret
push
mov
push
lea
movl
push
pushl
call
neg
sbb
neg
mov
pop
ret
mov
push
test
mov
je
andl
cmpl
jne
mov
call
cmpl
je
pushl
lea
push
pushl
call
jmp
mov
andb
mov
pop
ret
push
mov
push
lea
push
push
movl
call
push
mov
push
lea
push
push
movl
call
push
mov
sub
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
dec
mov
mov
mov
add
mov
mov
mov
lea
push
call
mov
pop
mov
pop
leave
ret
push
mov
mov
push
mov
mov
cmp
jae
andl
jmp
movzwl
pushl
push
movzwl
push
movzwl
push
movzwl
movzwl
push
push
movzwl
push
lea
call
mov
mov
mov
pop
pop
ret
push
mov
sub
lea
push
push
mov
pushl
call
test
je
lea
push
lea
push
call
test
jne
andl
jmp
pushl
lea
lea
push
call
mov
mov
mov
pop
leave
ret
mov
ret
mov
call
push
push
mov
mov
movl
andl
call
orl
mov
call
mov
pop
mov
leave
ret
push
mov
sub
mov
movl
mov
mov
mov
mov
cmp
je
movl
mov
mov
cmp
je
orl
mov
lea
push
pushl
push
pushl
call
leave
ret
push
mov
sub
mov
mov
mov
mov
lea
push
pushl
push
pushl
call
leave
ret
mov
call
sub
andl
push
push
push
push
lea
push
mov
push
call
mov
add
mov
mov
mov
push
mov
pop
mov
add
lea
push
mov
call
mov
lea
push
pushl
push
pushl
call
lea
cmp
je
push
lea
call
mov
lea
push
call
mov
andb
lea
call
mov
mov
pop
pop
pop
mov
leave
ret
ret
push
push
push
mov
pushl
mov
push
pushl
call
push
call
test
je
push
pushl
push
pushl
call
pop
pop
ret
push
mov
push
call
push
mov
call
push
mov
call
mov
call
pop
ret
mov
ret
mov
call
push
push
mov
mov
movl
andl
call
orl
mov
call
mov
pop
mov
leave
ret
push
mov
cmpl
je
pushl
pushl
pushl
pushl
call
jmp
mov
pushl
call
push
pop
pop
ret
push
push
mov
push
mov
push
push
pushl
call
push
call
test
je
push
push
push
pushl
call
mov
call
pop
pop
ret
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
pushl
push
pushl
call
leave
ret
mov
call
push
call
mov
cmpl
jne
cmpl
je
push
push
call
push
mov
call
pop
mov
mov
andl
test
je
push
push
push
call
jmp
xor
orl
push
mov
call
pop
mov
mov
pop
mov
leave
ret
mov
andl
movl
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
call
push
mov
movl
andl
call
mov
mov
leave
ret
push
mov
push
mov
test
je
push
call
test
je
pushl
lea
call
andl
mov
pop
pop
ret
cmpl
jne
xor
ret
call
push
call
ret
push
call
mov
xor
test
je
pushl
add
call
ret
push
mov
push
xor
mov
mov
mov
mov
mov
call
mov
pop
pop
ret
mov
mov
mov
decl
mov
jne
call
ret
mov
push
mov
mov
test
mov
je
andl
jmp
andl
push
call
mov
pop
ret
mov
imul
add
push
call
pop
mov
mov
mov
mov
ret
test
je
push
mov
push
call
pop
test
mov
jne
pop
ret
mov
xor
mov
mov
mov
mov
mov
movl
movl
mov
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
push
mov
mov
test
je
push
call
andl
pop
cmpl
mov
je
push
mov
shl
push
call
push
push
push
mov
call
add
pop
mov
pop
pop
ret
push
mov
mov
test
je
push
call
andl
pop
mov
andl
andl
call
andl
pop
ret
mov
call
push
mov
movl
andl
call
mov
mov
leave
ret
push
mov
cmpl
jne
push
lea
pushl
push
call
mov
add
lea
dec
test
lea
jl
inc
mov
mov
mov
sub
dec
jne
mov
mov
incl
mov
andl
andl
pop
ret
mov
mov
mov
decl
mov
jne
call
ret
push
mov
mov
xor
shr
divl
mov
mov
mov
test
je
mov
test
je
cmp
je
mov
jmp
xor
pop
ret
push
mov
test
push
je
mov
xor
mov
shr
divl
mov
test
je
cmp
je
mov
jmp
mov
jmp
xor
pop
pop
ret
push
mov
push
push
mov
lea
push
mov
push
call
test
jne
cmp
jne
push
mov
pushl
call
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
pop
add
pop
pop
ret
push
mov
test
push
je
mov
xor
mov
shr
divl
mov
lea
test
je
cmp
je
mov
mov
jmp
mov
push
mov
call
push
pop
jmp
xor
pop
pop
ret
mov
push
push
mov
cmp
jne
mov
xor
test
jbe
mov
mov
test
jne
inc
add
cmp
jb
mov
test
jne
mov
push
mov
xor
shr
div
inc
cmp
jae
mov
lea
mov
test
jne
inc
add
cmp
jb
pop
mov
mov
mov
mov
mov
mov
mov
pop
mov
pop
ret
call
xor
ret
mov
mov
mov
ret
push
push
mov
push
call
mov
pop
test
jne
mov
test
je
push
call
test
pop
jne
mov
pop
pop
ret
pushl
call
pop
ret
push
mov
mov
mov
cmpl
jl
mov
add
push
call
jmp
mov
mov
pushl
mov
call
mov
pop
ret
call
jmp
push
push
mov
call
ret
push
call
pop
ret
mov
jmp
call
jmp
push
push
mov
call
ret
push
call
pop
ret
mov
jmp
call
jmp
push
push
mov
call
ret
push
call
pop
ret
mov
jmp
call
jmp
push
push
mov
call
ret
push
call
pop
ret
mov
jmp
push
push
mov
mov
test
jne
mov
mov
jmp
push
push
pop
cmp
jg
mov
call
mov
jmp
mov
cmp
jg
mov
jmp
mov
cmp
jg
mov
jmp
mov
cmp
jg
mov
jmp
lea
push
call
pop
mov
movl
andb
mov
add
mov
pop
pop
pop
ret
mov
cmp
jne
push
mov
call
ret
cmp
jne
push
mov
jmp
cmp
jne
push
mov
jmp
cmp
push
jne
mov
jmp
call
pop
ret
push
mov
mov
lea
cmp
je
add
push
call
test
jg
mov
sub
call
mov
mov
pop
ret
push
mov
cmp
je
push
call
test
jg
mov
call
pop
ret
mov
cmpl
je
cmpl
jl
jmp
push
call
ret
push
push
mov
mov
cmpl
jle
call
pushl
mov
call
mov
inc
push
push
pushl
call
add
pop
pop
ret
push
mov
push
mov
mov
cmpl
jg
cmp
jle
mov
call
push
mov
call
pop
pop
ret
push
mov
mov
lea
cmp
je
add
push
call
test
jg
mov
sub
call
pop
ret
push
mov
mov
push
mov
push
add
mov
test
jne
mov
mov
mov
jmp
push
mov
push
mov
call
mov
push
add
push
pushl
call
add
pop
pop
pop
pop
ret
mov
push
mov
push
mov
push
test
mov
je
mov
shr
test
jne
movzwl
push
call
jmp
push
call
mov
test
je
push
mov
call
push
push
pushl
call
add
mov
pop
pop
pop
ret
push
push
mov
mov
push
call
push
pushl
pushl
call
mov
add
mov
mov
andb
pop
pop
ret
push
push
mov
mov
mov
mov
cmp
je
cmpl
jge
add
cmp
jne
cmpl
jge
push
mov
pushl
call
jmp
mov
call
mov
mov
add
push
call
mov
pop
pop
ret
push
push
mov
mov
test
jne
xor
jmp
push
call
push
push
mov
call
mov
pop
pop
ret
push
mov
push
push
mov
mov
lea
test
je
push
call
push
pushl
pushl
call
mov
push
pushl
add
push
call
add
pop
pop
pop
ret
push
push
push
mov
test
mov
je
mov
cmpl
lea
jg
mov
lea
cmp
jg
push
add
pushl
push
call
mov
add
add
mov
mov
andb
jmp
pushl
mov
push
push
pushl
call
push
call
pop
pop
pop
ret
push
push
mov
mov
test
jne
xor
jmp
push
call
push
push
mov
call
mov
pop
pop
ret
lea
push
push
mov
push
call
mov
pop
ret
mov
push
mov
mov
push
pushl
call
mov
pop
ret
push
push
mov
mov
mov
cmpl
lea
jg
cmp
jle
push
mov
cmp
jge
mov
push
mov
call
lea
push
lea
push
pushl
call
mov
add
push
mov
call
pop
mov
pop
pop
ret
push
mov
call
mov
cmp
jne
pushl
call
mov
mov
mov
pop
andb
ret
push
push
mov
mov
push
call
mov
mov
mov
andb
mov
pop
pop
ret
push
pushl
call
ret
push
mov
mov
mov
cmp
jge
add
movzbl
push
push
call
pop
test
pop
jne
or
jmp
sub
pop
ret
push
mov
call
pushl
call
pop
pop
ret
push
mov
call
mov
mov
mov
pop
mov
ret
push
mov
call
andl
movl
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
call
push
push
mov
mov
movl
xor
cmp
mov
je
cmp
je
call
orl
mov
call
mov
pop
mov
leave
ret
push
mov
push
mov
push
push
mov
mov
and
push
push
mov
pushl
andl
call
test
je
test
je
test
jne
movb
jmp
test
je
movb
push
pop
test
jne
push
movb
pop
test
mov
je
movb
inc
xor
jmp
push
movb
test
pop
jne
jmp
movb
inc
andb
push
pushl
call
pop
cmp
pop
je
lea
push
push
call
pop
mov
pop
cmpl
jne
test
je
call
mov
mov
call
pushl
call
mov
mov
call
xor
jmp
push
pop
pop
pop
pop
pop
ret
cmpl
push
mov
jne
xor
jmp
push
pushl
pushl
push
pushl
call
mov
add
test
jne
mov
testb
jne
pushl
call
pushl
push
call
mov
testb
je
push
call
pop
pushl
call
pushl
push
call
mov
pop
pop
ret
push
mov
pushl
pushl
push
pushl
call
add
cmp
je
pushl
call
pushl
push
call
pop
ret
push
mov
pushl
pushl
call
pop
cmp
pop
jne
pushl
call
pushl
push
call
pop
ret
push
mov
push
pushl
pushl
pushl
call
mov
add
test
jne
mov
testb
jne
push
call
pop
pushl
call
pushl
push
call
mov
pop
pop
ret
push
push
push
push
mov
mov
push
mov
call
push
mov
call
mov
pushl
push
push
call
add
mov
mov
push
call
test
je
push
call
cmp
jl
cmpb
je
mov
mov
mov
lea
push
call
mov
add
jmp
mov
testb
jne
push
call
pop
pushl
call
pushl
push
call
push
mov
call
mov
mov
test
je
cmpb
jne
dec
push
mov
call
xor
pop
test
pop
pop
setne
pop
ret
push
mov
pushl
pushl
pushl
call
add
test
je
pushl
call
pushl
push
call
pushl
call
pop
pop
ret
push
mov
push
pushl
call
mov
pop
cmp
jne
pushl
call
pushl
push
call
mov
pop
pop
ret
push
mov
mov
test
je
push
call
test
pop
je
pushl
call
pushl
push
call
pop
ret
push
mov
xor
mov
test
je
push
call
pop
orl
andl
andl
test
je
pushl
call
pushl
push
call
pop
ret
push
mov
mov
test
je
cmpl
je
push
call
pop
orl
andl
andl
pop
ret
call
xor
ret
call
ret
mov
ret
push
mov
cmpl
jne
call
test
je
push
call
mov
call
pop
ret
push
push
mov
call
mov
xor
push
push
push
mov
pushl
call
pushl
mov
mov
pushl
call
pop
pop
ret
mov
push
mov
mov
dec
je
sub
je
push
xor
push
cmp
mov
jne
cmp
jne
inc
push
pop
mov
push
mov
call
test
je
mov
push
push
jmp
push
mov
call
test
jne
mov
push
push
mov
call
mov
pop
pop
jmp
push
pushl
call
pop
ret
push
mov
push
push
mov
mov
test
jg
push
call
mov
andl
test
je
mov
call
test
mov
je
mov
lea
push
mov
call
mov
mov
call
cmpl
jne
jmp
cmp
jne
push
mov
call
xor
cmp
pop
pop
setl
pop
ret
push
mov
push
push
push
mov
push
xor
mov
cmp
je
mov
push
call
movzwl
pushl
add
push
call
test
jne
lea
push
push
pushl
call
test
je
mov
cmp
je
push
call
push
push
push
pushl
pushl
push
call
push
push
call
push
mov
call
push
push
push
pushl
pushl
push
call
cmp
je
pushl
call
mov
pushl
call
pop
pop
pop
leave
ret
mov
call
sub
push
push
push
mov
lea
mov
mov
mov
call
xor
mov
movb
call
mov
mov
mov
call
push
lea
call
mov
call
call
mov
cmp
je
cmp
jne
mov
cmp
je
cmp
je
pushl
lea
call
lea
mov
jmp
lea
call
mov
pushl
movl
call
push
push
call
mov
ret
mov
mov
pushl
andl
mov
call
push
push
call
push
call
mov
test
je
pushl
call
pop
jmp
mov
mov
call
test
mov
mov
jne
call
jmp
call
lea
mov
call
push
push
call
orl
lea
call
mov
pop
pop
xor
mov
pop
leave
ret
call
mov
test
jne
call
mov
ret
mov
call
push
push
push
call
pop
mov
mov
xor
cmp
mov
je
pushl
pushl
call
mov
pushl
mov
orl
or
pushl
mov
push
call
test
jne
mov
mov
call
xor
jmp
pushl
pushl
call
testb
jne
pushl
call
mov
mov
pop
mov
leave
ret
push
push
call
mov
mov
test
je
mov
test
je
push
push
call
cmpl
je
mov
mov
call
andl
push
call
pushl
call
pop
pop
pop
ret
call
cmpb
jne
push
call
mov
call
push
push
push
push
call
push
mov
mov
call
mov
cmpl
je
call
pushl
call
push
mov
call
pop
ret
mov
call
push
push
push
push
push
xor
mov
mov
call
push
call
cmp
jne
mov
call
mov
cmp
je
mov
cmp
je
mov
call
mov
cmp
je
mov
push
call
mov
mov
cmp
je
push
pushl
call
mov
pop
pop
mov
pop
leave
ret
mov
call
mov
ret
push
mov
sub
push
push
push
xor
push
lea
push
mov
push
call
add
call
mov
push
push
push
push
mov
mov
call
push
push
push
push
mov
call
cmp
mov
mov
mov
mov
je
cmp
je
lea
or
push
push
lea
push
push
pushl
pushl
call
add
cmp
mov
je
push
call
push
pushl
call
pushl
call
testb
je
pushl
call
cmp
je
push
pushl
call
pushl
call
mov
jmp
pushl
call
push
pop
jmp
pushl
call
cmp
je
pushl
call
xor
pop
pop
pop
leave
ret
cmpl
je
test
je
mov
push
call
ret
xor
ret
push
push
push
push
push
push
xor
mov
pop
mov
cmp
je
lea
push
push
push
push
push
call
test
jne
mov
mov
incl
push
mov
call
test
jne
xor
cmp
jne
mov
mov
call
test
je
mov
lea
push
mov
call
test
je
push
mov
pop
push
push
push
push
push
call
test
jne
jmp
mov
mov
call
pop
pop
pop
pop
pop
ret
mov
push
push
mov
cmp
je
cmp
je
cmp
je
cmp
jne
xor
jmp
mov
mov
cmp
jne
cmp
jne
cmp
je
mov
mov
mov
mov
mov
mov
push
pop
pop
pop
ret
mov
ret
push
push
xor
push
cmp
push
jg
mov
mov
cmp
je
mov
cmp
je
push
call
test
je
push
push
pop
push
push
pushl
push
call
push
push
push
push
push
pushl
call
call
add
push
mov
call
mov
cmp
je
cmp
je
cmp
je
cmp
jne
push
mov
call
pushl
call
test
jne
cmp
jl
push
push
push
pushl
push
call
push
push
push
push
push
pushl
call
mov
cmp
jle
push
mov
call
orl
mov
jmp
call
add
push
mov
call
cmp
jne
call
push
call
xor
cmp
pop
pop
pop
pop
setl
ret
push
mov
push
push
push
push
mov
call
mov
xor
cmp
je
mov
mov
mov
cmp
jae
push
push
push
pushl
call
cmp
jne
mov
cmp
jne
jmp
mov
push
push
push
push
call
cmp
je
mov
mov
cmp
je
push
push
push
add
jmp
pushl
mov
pushl
call
push
pop
jmp
xor
pop
pop
pop
pop
pop
ret
push
push
mov
cmpl
jne
push
call
test
jne
call
mov
test
je
mov
push
push
call
test
je
push
pop
jmp
test
je
pushl
call
mov
call
cmp
je
mov
push
mov
call
jmp
xor
pop
pop
ret
mov
mov
cmp
jne
or
jmp
cmp
jne
push
pushl
call
xor
ret
push
call
cmpb
mov
jne
test
jge
cmp
jne
call
test
je
pushl
mov
mov
push
call
jmp
push
mov
call
pushl
pushl
push
pushl
call
pop
ret
mov
push
cmpl
jne
cmpl
jne
mov
shr
test
jne
mov
push
call
test
jl
push
call
test
jl
push
call
test
jl
push
pop
jmp
xor
pop
ret
push
mov
sub
push
push
mov
xor
cmp
push
mov
je
mov
sub
je
dec
dec
je
sub
jmp
pushl
call
cmp
je
mov
call
mov
cmp
je
mov
call
test
je
cmp
je
call
mov
cmp
je
mov
cmp
jne
cmpl
je
cmp
jne
push
push
push
pushl
call
jmp
call
cmpl
mov
jae
cmp
je
push
call
test
je
push
push
push
pushl
jmp
cmp
jne
mov
cmp
je
mov
cmp
jb
cmp
ja
push
mov
call
mov
cmpl
jne
push
lea
pop
movl
rep
mov
mov
call
test
je
mov
lea
push
mov
call
test
je
andl
push
pop
jmp
andl
xor
pop
pop
pop
leave
ret
mov
test
jne
mov
test
jne
call
push
call
ret
push
mov
xor
push
push
lea
push
push
push
call
test
je
cmpl
je
mov
push
mov
call
test
jne
push
call
push
call
push
pop
pop
pop
ret
mov
push
pop
xor
mov
mov
mov
mov
mov
mov
ret
mov
call
push
mov
mov
andl
add
test
je
call
mov
mov
leave
ret
push
mov
mov
push
push
push
test
pop
je
mov
mov
mov
mov
jmp
mov
cmp
ja
je
dec
dec
je
sub
je
dec
je
sub
je
sub
je
dec
jne
mov
mov
pushl
pushl
call
jmp
mov
mov
pushl
pushl
call
jmp
mov
call
jmp
pushl
jmp
mov
call
jmp
pushl
jmp
mov
mov
pushl
pushl
pushl
call
jmp
sub
je
sub
je
dec
je
dec
je
dec
je
xor
jmp
pushl
mov
call
jmp
pushl
mov
call
jmp
pushl
mov
mov
push
call
xor
cmp
sete
andl
jmp
mov
mov
push
call
jmp
mov
mov
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
ret
push
mov
mov
push
push
push
cmp
mov
jne
call
pushl
mov
mov
pushl
mov
pushl
push
call
jmp
cmp
jne
mov
andl
mov
mov
mov
mov
call
mov
test
je
cmpl
jne
mov
mov
test
je
cmpl
je
cmpl
jne
cmp
jne
cmpl
jne
cmpl
je
jmp
mov
test
je
push
push
pushl
call
add
test
jne
mov
movl
mov
add
jmp
mov
jmp
mov
jmp
cmp
je
mov
movzwl
shr
mov
jne
mov
mov
mov
call
mov
test
je
pushl
pushl
push
pushl
call
test
jne
mov
jmp
pushl
pushl
pushl
pushl
pushl
pushl
push
call
jmp
xor
pop
pop
pop
pop
ret
push
pop
ret
mov
ret
call
mov
push
mov
mov
call
ret
call
mov
push
mov
mov
call
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
mov
push
call
mov
mov
call
test
je
mov
call
push
call
test
je
mov
push
mov
call
pop
ret
xor
ret
mov
ret
mov
ret
mov
xor
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
mov
mov
test
je
cmpl
jne
mov
neg
sbb
and
add
or
push
pushl
pushl
call
jmp
cmpl
push
jne
mov
call
cmp
jne
pushl
call
push
call
mov
test
je
mov
push
push
pushl
call
push
call
mov
call
pushl
mov
call
pop
movl
pop
ret
push
mov
push
mov
test
je
cmpl
jne
mov
neg
sbb
and
or
push
pushl
pushl
call
jmp
mov
mov
push
push
push
pushl
call
test
je
mov
push
pushl
push
pushl
call
pop
pop
ret
push
push
mov
xor
xor
cmp
mov
setne
push
mov
call
cmp
je
cmp
jne
cmp
jne
call
cmp
je
pushl
mov
push
push
pushl
pushl
call
pop
pop
ret
push
mov
mov
test
je
cmpl
jne
mov
push
mov
push
push
pushl
call
pushl
and
or
pushl
push
mov
pushl
pushl
call
pop
jmp
pushl
mov
pushl
call
pop
ret
pushl
mov
pushl
mov
pushl
call
ret
mov
test
jne
pushl
pushl
call
push
call
jmp
mov
pushl
mov
call
ret
mov
test
jne
pushl
pushl
call
mov
mov
jmp
pushl
mov
mov
pushl
call
ret
push
mov
testb
je
call
mov
pushl
mov
mov
push
call
jmp
pushl
pushl
call
pop
ret
mov
test
jne
push
pushl
call
ret
mov
mov
jmp
mov
test
jne
push
pushl
call
ret
mov
mov
jmp
push
mov
mov
test
jne
pushl
pushl
pushl
pushl
call
jmp
pushl
mov
mov
pushl
pushl
call
pop
ret
mov
test
jne
pushl
pushl
call
jmp
mov
pushl
mov
call
ret
mov
test
jne
pushl
pushl
pushl
call
jmp
pushl
mov
mov
pushl
call
ret
push
mov
mov
test
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
pushl
mov
mov
pushl
pushl
pushl
pushl
call
pop
ret
push
mov
mov
test
jne
mov
test
je
mov
pushl
pushl
pushl
pushl
pushl
push
pushl
call
jmp
pushl
mov
mov
pushl
pushl
pushl
pushl
pushl
call
pop
ret
mov
test
jne
pushl
pushl
call
jmp
mov
pushl
mov
call
ret
mov
test
jne
pushl
call
ret
mov
mov
jmp
mov
test
jne
pushl
pushl
call
jmp
mov
pushl
mov
call
ret
mov
test
jne
pushl
call
push
call
ret
mov
mov
jmp
push
mov
test
je
cmpl
jne
pushl
call
push
mov
lea
call
test
je
mov
test
je
mov
push
mov
call
pop
ret
cmpl
jne
mov
mov
test
je
mov
push
mov
call
ret
cmpl
jne
pushl
call
push
push
call
pop
test
pop
je
mov
mov
call
jmp
push
pop
jmp
xor
ret
mov
ret
push
push
mov
mov
push
call
test
jne
mov
call
test
je
cmpl
je
xor
jmp
cmpl
jne
mov
cmp
je
cmp
jne
push
pushl
call
test
je
push
pushl
call
test
je
push
pushl
call
test
je
push
call
test
je
push
push
push
pushl
call
push
pop
jmp
push
mov
call
pop
pop
ret
push
mov
push
push
mov
push
pushl
mov
mov
pushl
push
push
call
test
jne
test
je
cmp
jne
test
je
cmp
jae
pushl
call
push
call
test
je
pushl
mov
mov
pushl
push
push
call
test
jne
call
test
je
pushl
mov
mov
pushl
push
push
call
test
je
push
pop
jmp
xor
pop
pop
pop
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
call
push
push
mov
mov
movl
andl
cmpl
je
call
orl
mov
call
mov
pop
mov
leave
ret
push
mov
push
mov
push
mov
shr
test
mov
jne
cmpl
jne
movzwl
mov
call
mov
push
push
push
call
push
push
call
push
mov
pushl
push
call
pop
pop
pop
ret
push
mov
pushl
call
pushl
mov
push
pushl
push
call
pop
ret
mov
push
test
mov
jne
call
pushl
mov
mov
mov
push
pushl
call
pop
ret
mov
call
sub
push
push
xor
push
cmp
mov
mov
mov
jne
call
mov
mov
call
mov
push
mov
mov
mov
mov
call
push
call
cmp
je
mov
lea
push
mov
call
cmp
jne
xor
jmp
pushl
mov
lea
push
mov
call
mov
cmp
je
mov
mov
lea
movb
push
lea
push
mov
pushl
call
add
xor
cmp
sete
mov
cmp
jne
push
call
test
je
push
pushl
call
pop
test
pop
je
push
pushl
call
pop
test
pop
je
push
pushl
call
pop
test
pop
jne
cmpw
jne
mov
pushl
lea
call
pushl
lea
movb
call
lea
call
lea
mov
movb
call
cmp
je
pushl
call
mov
orl
orl
push
call
mov
cmp
jne
xor
jmp
mov
push
push
push
pushl
pushl
call
lea
mov
mov
call
jmp
mov
call
mov
orl
mov
ret
mov
mov
xor
orl
cmp
je
mov
lea
push
mov
call
cmp
je
mov
push
mov
call
call
test
jne
mov
mov
call
cmp
je
testb
jne
pushl
call
mov
cmp
je
pushl
call
pushl
call
xor
cmp
setne
mov
pop
pop
mov
pop
leave
ret
mov
push
mov
pop
ret
push
push
mov
call
lea
push
push
push
movl
call
mov
add
mov
mov
movzwl
mov
mov
mov
pop
pop
ret
push
push
mov
call
mov
test
je
push
mov
call
mov
test
je
mov
lea
push
push
call
push
mov
call
mov
pop
pop
ret
push
mov
call
mov
call
pushl
call
test
je
push
pushl
call
andl
call
mov
pop
test
je
push
mov
call
ret
mov
call
sub
push
push
mov
push
mov
mov
mov
mov
mov
call
cmpl
mov
je
call
mov
push
pushl
push
call
push
push
call
mov
test
je
push
call
mov
cmpl
jne
or
jmp
mov
call
mov
call
xor
cmp
mov
je
pushl
call
test
je
push
pushl
call
movl
push
mov
call
pushl
call
push
push
pushl
mov
call
cmp
je
testb
je
push
mov
pop
call
test
je
push
pop
push
mov
call
cmp
je
push
push
push
push
push
push
mov
call
jmp
mov
call
mov
orl
mov
ret
mov
xor
orl
cmp
je
push
pushl
call
cmp
je
call
cmp
jne
pushl
call
mov
mov
call
mov
call
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
testb
je
mov
pushl
call
pushl
pushl
call
pop
ret
push
push
pushl
mov
mov
call
push
mov
call
mov
call
pop
pop
ret
ret
push
mov
push
mov
call
call
mov
test
je
mov
test
je
mov
test
je
mov
push
push
push
call
jmp
mov
push
pushl
push
call
test
jne
push
mov
call
xor
jmp
mov
call
mov
test
je
testb
je
push
push
pushl
call
push
call
test
je
mov
call
xor
mov
pop
pop
ret
push
mov
push
push
push
push
call
xor
cmp
jne
xor
jmp
call
cmp
mov
je
mov
lea
push
push
push
push
mov
call
test
je
push
pop
jmp
call
mov
lea
push
push
mov
push
push
mov
call
pop
pop
leave
ret
push
mov
mov
test
je
push
call
jmp
pushl
mov
call
test
je
push
mov
call
test
jne
push
mov
call
xor
pop
ret
push
mov
call
mov
test
je
call
neg
sbb
mov
and
push
call
push
pop
pop
ret
push
mov
push
call
test
je
push
mov
call
pop
ret
push
call
ret
push
push
mov
cmpl
mov
mov
je
push
call
mov
push
pushl
push
call
push
push
call
pop
test
je
push
call
mov
push
test
pop
je
cmpw
mov
jne
mov
mov
mov
jmp
mov
mov
test
jne
test
jne
test
jne
push
pop
jmp
xor
pop
pop
ret
pushl
pushl
pushl
call
ret
push
mov
test
jne
mov
test
je
lea
test
je
call
mov
test
je
mov
push
push
mov
call
push
pop
jmp
xor
pop
ret
mov
test
je
add
jmp
xor
ret
jmp
push
call
mov
ret
call
jmp
push
mov
call
ret
push
call
pop
ret
testb
jne
orb
mov
jmp
ret
call
jmp
push
mov
call
ret
push
call
pop
ret
testb
jne
orb
mov
jmp
ret
call
jmp
push
mov
call
ret
push
call
pop
ret
testb
jne
orb
mov
jmp
ret
call
jmp
push
mov
call
ret
push
call
pop
ret
testb
jne
orb
mov
jmp
ret
push
mov
call
push
lea
push
push
movl
call
add
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
push
mov
call
lea
push
push
push
movl
call
mov
add
mov
mov
pop
pop
ret
push
mov
pushl
pushl
call
mov
not
and
or
cmp
jne
xor
jmp
push
pushl
pushl
call
mov
xor
cmp
je
or
push
push
push
push
push
push
pushl
call
push
pop
pop
ret
pushl
pushl
pushl
push
pushl
call
ret
push
mov
pushl
pushl
call
mov
call
mov
pop
mov
ret
push
mov
sub
testb
push
jne
mov
mov
call
test
jne
lea
push
pushl
call
mov
mov
cmp
jne
mov
cmp
jne
push
pushl
call
push
call
test
je
mov
call
test
jne
mov
mov
call
test
je
push
mov
call
pop
leave
ret
push
mov
push
push
push
push
mov
push
mov
call
test
jne
mov
call
mov
mov
mov
call
cmp
je
mov
test
mov
jne
and
jmp
mov
mov
lea
push
pushl
push
pushl
call
pop
pop
pop
leave
ret
push
mov
cmpl
push
jne
cmpl
je
cmpl
je
cmpl
jne
mov
call
test
je
pushl
call
push
call
mov
test
je
call
push
call
cmp
je
mov
call
test
je
pushl
call
push
pop
jmp
xor
pop
pop
ret
mov
call
sub
push
push
push
mov
mov
push
call
mov
push
pop
lea
lea
andl
mov
mov
rep
mov
mov
mov
mov
mov
cmp
mov
mov
mov
mov
jne
mov
test
je
mov
push
call
andl
cmp
jne
lea
push
lea
push
push
call
pushl
mov
mov
pushl
push
call
cmp
mov
jne
pushl
lea
push
push
call
jmp
call
test
je
mov
mov
add
push
mov
pushl
call
mov
jmp
andl
mov
call
mov
ret
mov
push
mov
lea
pop
lea
rep
mov
pop
pop
mov
pop
leave
ret
push
push
mov
call
mov
call
mov
call
movswl
shr
movswl
mov
mov
lea
pop
ret
push
mov
push
mov
call
pushl
mov
mov
pushl
pushl
call
pop
ret
mov
call
push
call
mov
cmpl
jne
cmpl
je
push
push
call
push
mov
call
pop
mov
mov
andl
test
je
push
push
push
call
jmp
xor
orl
push
mov
call
pop
mov
mov
pop
mov
leave
ret
push
push
push
call
mov
pushl
mov
call
mov
push
mov
call
mov
pop
pop
ret
push
call
mov
xor
test
je
pushl
add
call
ret
push
mov
push
mov
test
jne
xor
jmp
push
push
call
mov
push
mov
lea
call
push
mov
mov
call
push
pop
pop
pop
pop
ret
push
mov
push
mov
test
je
push
call
test
je
pushl
lea
call
andl
andl
mov
pop
pop
ret
push
mov
cmpl
push
jne
push
pop
jmp
mov
push
call
test
je
cmp
jne
pushl
pushl
pushl
push
push
call
jmp
pushl
pushl
pushl
push
call
pop
pop
ret
mov
ret
mov
call
sub
push
push
push
mov
mov
mov
push
push
call
andl
andl
mov
mov
push
sub
pop
je
sub
je
sub
je
sub
jne
push
call
mov
lea
push
lea
push
push
call
pushl
pushl
push
push
pushl
call
pushl
mov
lea
push
push
call
mov
mov
pop
pop
mov
pop
leave
ret
pushl
push
push
call
push
push
call
push
call
push
call
jmp
push
call
mov
shr
push
movswl
push
push
call
xor
test
sete
jmp
pushl
call
push
mov
call
push
pushl
push
call
test
je
pushl
pushl
pushl
push
pushl
call
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
mov
pushl
call
mov
mov
call
mov
ret
push
mov
push
push
push
mov
call
mov
mov
mov
test
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
pushl
push
lea
push
pushl
pushl
call
test
je
mov
jmp
pushl
pushl
push
pushl
call
pop
pop
pop
ret
push
mov
sub
push
mov
call
cmpl
mov
je
pushl
pushl
pushl
pushl
call
jmp
mov
push
push
mov
push
mov
call
movzbl
mov
mov
test
jne
testb
jne
test
jne
cmpl
je
push
push
call
test
jne
mov
mov
shr
test
jne
and
lea
push
push
mov
push
call
lea
push
push
call
test
je
test
je
push
mov
call
mov
mov
call
mov
mov
call
cmpl
mov
jne
cmpl
jne
mov
test
je
cmpl
je
push
push
push
push
push
call
test
mov
je
call
push
push
mov
call
pushl
mov
sub
push
neg
sbb
inc
call
test
jne
pushl
push
push
call
jmp
call
mov
push
push
push
call
cmp
je
mov
mov
mov
andl
jmp
push
push
call
test
mov
je
mov
mov
push
push
call
test
jne
pushl
push
push
call
push
push
call
cmp
jne
push
call
mov
cmpl
mov
jne
mov
push
push
push
call
mov
pushl
push
push
pushl
call
cmpl
mov
je
pushl
call
andl
mov
pop
pop
pop
leave
ret
push
push
push
mov
call
mov
mov
cmp
je
cmpl
jne
call
push
push
push
push
call
test
mov
jne
call
mov
pop
pop
ret
push
push
mov
call
mov
call
cmpb
je
mov
test
je
push
call
andl
cmpl
je
andl
xor
pop
ret
push
pop
pop
ret
push
mov
sub
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
mov
mov
mov
mov
push
mov
call
test
jne
mov
mov
call
xor
jmp
push
push
call
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
call
test
jne
mov
mov
call
xor
test
setne
pop
pop
leave
ret
push
mov
cmpl
jne
push
call
movl
push
pop
pop
ret
push
mov
mov
push
test
push
jne
xor
jmp
mov
pushl
mov
pushl
mov
mov
push
mov
mov
sub
sub
push
push
mov
push
or
push
push
pushl
pushl
push
call
pop
pop
pop
ret
mov
call
push
push
mov
mov
movl
andl
cmpl
je
cmp
je
cmp
je
cmp
je
cmp
je
call
mov
test
je
mov
push
call
mov
test
je
cmp
jne
andl
orl
mov
call
mov
pop
mov
leave
ret
push
mov
mov
test
je
mov
push
call
andl
mov
call
pop
ret
push
mov
sub
push
push
push
mov
call
mov
xor
cmp
je
cmp
jne
call
cmp
jne
call
cmp
jne
call
test
je
push
call
mov
cmp
jne
mov
mov
cmp
je
mov
call
mov
mov
push
test
pop
je
mov
push
call
andl
test
je
call
mov
test
je
cmpl
je
push
lea
push
push
call
mov
add
mov
mov
lea
movl
push
push
push
mov
pushl
call
mov
push
pushl
call
mov
mov
call
push
pushl
call
cmp
jne
mov
mov
call
mov
test
je
push
push
pushl
call
mov
call
mov
mov
call
pop
pop
pop
leave
ret
cmpl
mov
je
jmp
jmp
push
mov
cmpl
jne
xor
pop
ret
push
push
push
call
pushl
lea
call
mov
mov
test
jne
pushl
call
jmp
mov
call
test
mov
jne
mov
call
mov
pop
pop
pop
ret
push
mov
push
mov
mov
test
jne
mov
call
mov
test
jne
pushl
pushl
pushl
pushl
call
jmp
pushl
pushl
pushl
pushl
push
call
pop
pop
ret
lea
ret
push
mov
call
mov
test
je
push
pushl
call
xor
pop
ret
push
call
mov
mov
test
je
mov
test
je
push
push
push
push
call
cmpl
mov
je
test
je
push
call
test
jl
mov
push
mov
call
pop
ret
push
mov
push
push
pushl
mov
pushl
pushl
call
mov
test
je
push
push
call
mov
movzwl
test
mov
je
cmpl
jb
mov
orl
orl
push
push
push
push
mov
mov
call
test
jne
orl
mov
pop
jmp
or
pop
pop
pop
ret
push
mov
push
mov
cmpl
jne
pushl
call
test
je
mov
push
mov
call
jmp
push
pushl
call
test
jne
mov
call
pop
pop
ret
push
mov
lea
push
push
mov
mov
pushl
call
test
je
mov
jmp
mov
call
pop
pop
ret
mov
push
push
mov
pushl
call
test
jne
mov
call
pop
ret
push
mov
push
mov
mov
test
je
lea
push
call
test
je
mov
jmp
mov
call
pop
pop
ret
push
push
mov
push
pushl
call
mov
xor
test
jle
push
pushl
call
push
call
test
je
pushl
push
call
test
jne
jmp
push
pushl
call
cmp
je
inc
cmp
jl
xor
pop
pop
pop
ret
pushl
call
jmp
push
mov
push
mov
cmpl
jne
push
mov
call
mov
cmp
jne
pushl
jmp
push
call
push
call
pushl
push
call
test
je
mov
push
mov
call
jmp
mov
push
push
pushl
call
test
je
push
mov
call
test
jne
mov
call
pop
pop
ret
mov
call
sub
push
push
mov
push
lea
mov
push
pushl
pushl
call
test
jne
push
call
test
jne
xor
jmp
call
xor
cmp
je
push
call
mov
call
pushl
mov
lea
push
call
lea
movb
push
push
mov
call
orl
push
call
push
pop
mov
pop
pop
mov
pop
leave
ret
push
call
xor
push
push
call
push
mov
sub
mov
push
mov
mov
mov
push
mov
mov
call
mov
lea
sub
push
mov
mov
push
push
mov
call
pop
leave
ret
mov
call
push
push
push
mov
call
mov
mov
call
mov
call
mov
xor
mov
mov
call
test
je
mov
mov
call
push
mov
push
push
push
pushl
call
push
push
push
push
push
pushl
call
mov
call
push
mov
push
push
pushl
call
push
push
push
push
push
pushl
call
call
cmp
je
push
push
push
push
call
pushl
mov
pushl
pushl
pushl
call
test
pop
jne
push
push
push
call
orl
call
mov
call
mov
pop
pop
mov
leave
ret
mov
ret
push
mov
push
mov
mov
mov
mov
cmpl
je
cmp
je
add
jmp
cmp
jne
cmp
jb
cmp
ja
mov
jmp
xor
mov
mov
pop
pop
ret
push
mov
push
push
mov
lea
andl
mov
push
pushl
mov
pushl
pushl
call
test
jne
pushl
mov
mov
pushl
pushl
call
mov
mov
pop
leave
ret
mov
call
sub
andl
push
mov
push
push
cmp
mov
jne
pushl
mov
pushl
call
test
je
jmp
cmp
jne
mov
cmpl
je
mov
lea
push
push
pushl
mov
call
test
jne
jmp
mov
cmp
jne
push
call
push
pushl
push
call
cmp
jne
mov
shr
push
movswl
push
push
call
test
jne
mov
mov
call
mov
mov
mov
mov
and
and
push
xor
call
mov
lea
cmp
lea
mov
jne
cmp
jne
mov
push
mov
call
test
je
cmpl
jb
jmp
test
mov
mov
je
jmp
mov
mov
mov
cmp
jae
push
push
push
pushl
call
test
mov
jne
jmp
mov
push
push
push
push
call
test
mov
je
jmp
mov
mov
mov
cmp
je
push
push
add
push
push
call
test
mov
jne
mov
mov
test
mov
jne
andl
push
call
xor
mov
pop
pop
pop
mov
leave
ret
push
mov
call
mov
mov
mov
cmpl
mov
jne
call
mov
cmp
sbb
and
add
dec
cmp
ja
jmp
pushl
call
push
jmp
pushl
jmp
mov
shr
push
movswl
push
pushl
call
jmp
push
pushl
call
jmp
lea
call
mov
andl
lea
mov
call
mov
mov
push
movb
mov
call
test
jne
mov
test
je
pushl
lea
call
test
je
mov
lea
push
push
lea
mov
push
call
andl
andl
andb
lea
mov
call
orl
lea
jmp
lea
call
mov
pushl
mov
lea
push
mov
movl
call
andl
orl
mov
lea
call
jmp
mov
shr
push
push
call
jmp
mov
shr
push
movzwl
jmp
push
mov
call
jmp
push
call
push
mov
shr
push
movzwl
push
mov
call
jmp
mov
call
jmp
pushl
jmp
mov
shr
movswl
push
movswl
push
jmp
mov
shr
push
movzwl
jmp
pushl
call
push
push
call
push
xor
cmp
sete
push
jmp
pushl
call
push
jmp
pushl
call
jmp
mov
shr
push
movzwl
push
pushl
call
jmp
pushl
jmp
push
call
jmp
mov
shr
push
movzwl
jmp
movswl
shr
movswl
push
push
pushl
call
jmp
push
pushl
call
jmp
push
call
push
jmp
mov
shr
push
push
call
jmp
mov
movswl
shr
cmpl
mov
movswl
mov
jne
push
call
push
pushl
pushl
jmp
push
push
jmp
push
pushl
mov
call
jmp
movswl
shr
movswl
push
push
jmp
mov
call
jmp
push
mov
call
jmp
mov
push
shr
push
movzwl
jmp
movswl
shr
movswl
push
push
pushl
mov
call
jmp
push
mov
pushl
call
movl
jmp
movzwl
shr
push
push
mov
mov
shr
push
movzwl
push
call
mov
jmp
push
mov
call
mov
mov
push
pushl
mov
call
mov
mov
test
je
mov
mov
push
pop
jmp
ret
call
add
fld1
add
call
add
lods
jmp
add
fld1
add
lret
jmp
add
aad
add
icebp
jmp
add
ljmp
adc
add
adc
add
ljmp
adc
add
dec
ljmp
insb
ljmp
test
add
cltd
ljmp
mov
add
mov
ljmp
ss
adc
add
imul
add
add
add
or
add
ljmp
adc
jmp
adc
jmp
add
jno
add
lock
add
ljmp
adc
jmp
adc
icebp
call
movl
movl
mov
pop
ret
mov
movl
mov
ret
ret
push
mov
sub
mov
push
push
push
movzwl
xor
mov
shr
cmp
mov
jne
cmp
je
lea
call
mov
lea
push
push
push
push
mov
mov
call
cmp
je
mov
mov
push
push
mov
pushl
push
call
pop
pop
pop
leave
ret
push
mov
call
mov
cmp
je
push
pushl
call
test
je
push
pop
jmp
cmp
jne
xor
jmp
push
mov
sub
push
push
mov
push
mov
mov
push
call
movzwl
mov
mov
push
mov
mov
call
mov
cmp
je
pushl
push
call
test
je
push
pop
jmp
mov
lea
push
push
movzwl
or
mov
mov
push
pushl
mov
mov
call
pop
pop
pop
leave
ret
push
push
test
je
mov
test
je
mov
push
call
push
call
mov
test
je
mov
mov
call
test
jne
pushl
jmp
mov
jmp
xor
pop
pop
ret
push
mov
push
call
test
je
mov
call
test
je
mov
jmp
push
push
call
test
je
push
call
jmp
push
push
call
pop
ret
test
je
mov
test
jne
xor
ret
push
mov
push
call
test
je
mov
push
jmp
push
call
pop
ret
push
mov
test
je
cmpl
jne
xor
pop
ret
mov
mov
call
test
jne
mov
call
mov
test
je
mov
call
test
je
mov
mov
jmp
mov
pop
ret
push
mov
push
push
pushl
pushl
call
mov
mov
test
je
push
call
test
je
pushl
pushl
push
call
test
jne
cmpl
push
jne
call
jmp
call
test
jne
pushl
call
mov
test
je
pushl
pushl
push
call
test
jne
push
push
call
jmp
xor
pop
pop
pop
ret
push
mov
push
push
pushl
mov
call
mov
test
je
cmpl
je
push
call
test
je
pushl
pushl
pushl
pushl
push
call
jmp
pushl
pushl
pushl
push
call
cmpl
je
push
call
test
je
pushl
pushl
pushl
pushl
pushl
push
call
push
push
call
jmp
pop
pop
pop
ret
push
mov
call
cmpl
jne
and
push
push
mov
call
push
pushl
call
pop
ret
push
push
mov
mov
test
je
push
call
test
je
mov
push
mov
call
test
jne
cmp
je
push
call
mov
jmp
push
pop
jmp
xor
pop
pop
ret
push
mov
push
mov
call
pushl
mov
mov
pushl
pushl
pushl
call
pop
ret
mov
call
sub
push
push
push
call
test
je
mov
lea
push
mov
call
test
jne
push
call
push
mov
call
test
je
mov
test
je
push
lea
call
mov
test
je
push
lea
call
pushl
andl
lea
mov
call
andl
orl
lea
mov
call
mov
jmp
xor
jmp
pushl
mov
call
mov
pop
pop
mov
leave
ret
push
mov
cmpl
push
je
pushl
mov
pushl
lea
push
pushl
call
cmp
jb
cmp
ja
test
je
mov
test
je
mov
push
pop
jmp
pushl
pushl
pushl
pushl
call
pop
pop
ret
push
mov
sub
mov
mov
cmp
push
ja
je
cmp
jb
cmp
jbe
cmp
je
cmp
jne
mov
mov
mov
mov
mov
xor
lea
push
push
movzwl
or
push
push
call
jmp
mov
xor
shr
push
or
push
push
push
call
test
je
mov
push
cmp
pop
je
mov
jmp
cmp
jb
cmp
jbe
cmp
jne
pushl
add
pushl
pushl
push
call
jmp
cmp
jb
cmp
ja
mov
add
push
mov
mov
lea
push
xor
push
push
push
mov
call
cmp
pop
jne
xor
pop
leave
ret
cmpw
push
mov
je
cmpw
jne
push
pushl
call
test
jne
mov
call
pop
ret
cmpw
jne
call
testb
jne
push
call
xor
ret
push
mov
call
mov
test
je
cmp
jne
mov
call
call
cmpb
jne
call
test
je
call
cmp
jne
push
mov
call
mov
test
je
call
mov
call
test
jne
push
push
push
push
push
pushl
call
mov
call
pop
ret
push
push
mov
call
cmpb
jne
push
mov
call
mov
call
test
je
call
cmp
jne
mov
test
je
call
andl
push
push
mov
call
pop
pop
ret
push
mov
call
mov
test
je
cmp
jne
pushl
mov
call
mov
call
test
jne
call
push
push
pushl
pushl
pushl
pushl
call
pop
ret
push
push
push
mov
call
test
jne
call
mov
test
je
mov
push
call
test
jl
push
call
test
jl
push
call
test
jl
push
push
push
pushl
call
push
pop
jmp
mov
call
pop
pop
pop
ret
push
mov
call
cmp
jne
mov
call
mov
call
test
jne
call
push
push
pushl
pushl
pushl
pushl
call
mov
call
pop
ret
push
mov
lea
push
push
mov
mov
pushl
call
test
je
mov
jmp
mov
call
pop
pop
ret
push
mov
mov
test
je
push
call
test
jne
mov
call
pop
ret
push
mov
sub
push
push
push
mov
mov
push
push
push
lea
push
mov
push
call
test
je
lea
push
call
push
push
push
lea
push
push
jmp
mov
call
pop
pop
pop
leave
ret
push
mov
push
mov
mov
lea
push
call
test
je
mov
jmp
mov
call
pop
pop
ret
push
mov
push
push
push
mov
mov
lea
push
mov
call
test
je
mov
jmp
push
mov
call
test
mov
je
mov
pushl
mov
pushl
pushl
push
pushl
call
test
jne
mov
call
jmp
mov
pop
pop
pop
pop
ret
push
mov
sub
cmpl
je
cmpl
je
mov
cmp
je
test
je
cmp
je
cmp
jne
push
pushl
call
test
je
lea
push
push
pushl
call
pushl
pushl
call
mov
cmp
jne
push
call
push
pushl
call
push
pop
jmp
xor
leave
ret
mov
ret
mov
call
sub
push
push
push
mov
mov
pushl
lea
push
call
call
mov
andl
andl
mov
mov
lea
mov
mov
mov
mov
lea
push
mov
call
movl
jmp
mov
ret
mov
push
push
mov
mov
call
mov
call
mov
ret
mov
mov
mov
mov
mov
pop
pop
mov
pop
leave
ret
mov
mov
andl
mov
mov
mov
ret
push
mov
sub
push
push
mov
push
mov
call
mov
mov
test
je
mov
jmp
testb
je
pushl
call
jmp
push
pushl
call
mov
test
je
push
push
push
push
call
test
je
mov
mov
lea
push
pushl
call
testb
jne
test
je
push
push
call
test
je
test
je
xor
test
movl
jne
call
test
je
mov
lea
push
push
push
call
push
call
mov
lea
push
lea
push
call
lea
push
lea
push
call
jmp
lea
push
push
call
lea
push
push
push
call
push
call
lea
push
lea
push
call
jmp
pushl
call
mov
mov
lea
push
push
call
lea
push
push
call
lea
push
push
push
push
call
mov
mov
mov
add
sub
mov
cltd
sub
sub
mov
mov
cltd
sub
mov
sar
sar
sub
mov
add
cltd
sub
mov
mov
cltd
sub
sar
sar
sub
cmp
jge
mov
jmp
mov
add
cmp
jle
sub
add
mov
cmp
jge
mov
jmp
add
cmp
jle
mov
sub
add
push
push
push
push
push
mov
push
call
pop
pop
pop
leave
ret
push
pop
ret
push
push
push
xor
cmp
mov
je
call
mov
push
pushl
push
call
cmp
je
push
push
call
cmp
jne
xor
jmp
push
call
mov
push
mov
call
pop
pop
pop
ret
push
mov
sub
push
push
mov
mov
test
movl
je
push
mov
mov
test
je
inc
inc
mov
inc
inc
mov
add
cmp
mov
je
cmp
jne
mov
jmp
cmp
jne
mov
cmp
jne
orl
lea
push
push
movl
mov
push
jmp
cmp
je
cmp
jne
movzwl
push
push
push
movzwl
push
pushl
call
cmp
jne
andl
add
cmpl
jne
cmpl
pop
je
xor
push
push
push
push
push
pushl
call
mov
pop
pop
leave
ret
mov
mov
cmp
jb
cmp
jbe
cmp
jb
cmp
ja
push
call
jmp
xor
ret
sub
push
push
push
push
push
xor
testb
pop
mov
mov
mov
je
call
test
mov
je
mov
pushl
call
orl
mov
call
mov
mov
add
cmp
je
push
push
push
push
push
call
test
jne
cmp
je
push
mov
call
pushl
call
mov
testb
jne
cmp
je
cmp
jne
pushl
push
push
pushl
call
testb
jne
mov
incl
push
push
push
pushl
call
test
jne
mov
jmp
call
mov
mov
call
test
je
cmp
je
mov
cmp
je
cmp
jne
push
mov
call
pushl
call
mov
mov
mov
call
test
je
call
mov
push
mov
call
test
je
movl
mov
push
push
push
push
push
call
test
jne
jmp
push
call
or
jmp
andl
mov
pop
pop
pop
pop
add
ret
mov
and
ret
mov
mov
mov
test
je
and
mov
xor
push
push
push
pushl
call
ret
mov
push
mov
push
mov
call
movzwl
mov
mov
push
push
call
test
mov
jne
push
push
call
mov
push
call
pop
pop
ret
push
push
mov
push
push
call
push
mov
call
mov
test
je
push
push
xor
call
test
jne
mov
mov
and
cmp
jne
call
mov
jmp
pushl
call
test
je
mov
test
jne
call
or
push
call
mov
pop
pop
pop
ret
push
mov
sub
call
mov
mov
not
and
jne
push
pop
jmp
push
push
push
xor
push
lea
push
push
xor
call
mov
add
mov
call
mov
push
testb
mov
mov
pop
mov
mov
je
lea
movl
push
movl
call
test
je
push
pop
testb
je
orb
lea
push
movl
call
test
je
or
testb
je
lea
mov
push
movl
movl
call
test
je
or
testb
je
push
lea
push
push
mov
mov
call
test
je
or
test
je
push
lea
push
push
movl
movl
call
test
je
or
testb
je
lea
push
push
movl
call
or
andw
testb
je
lea
push
push
movl
call
or
testb
je
lea
push
push
movl
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
movl
call
or
mov
test
je
lea
push
push
movl
call
or
mov
test
je
lea
push
push
movl
call
or
mov
test
je
push
lea
push
movl
call
or
mov
test
je
push
lea
push
movl
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
movl
call
or
mov
test
je
push
lea
push
movl
call
or
mov
mov
or
mov
mov
and
cmp
jne
or
or
mov
mov
pop
and
pop
pop
sub
neg
sbb
inc
leave
ret
mov
test
je
cmp
je
cmp
je
push
pop
ret
xor
ret
push
mov
pushl
call
test
je
mov
mov
call
mov
mov
call
mov
call
push
push
pushl
call
cmpl
jne
mov
push
pop
pop
ret
pushl
mov
call
ret
mov
mov
mov
orl
andl
movl
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
mov
mov
mov
andl
movl
mov
ret
mov
call
push
push
mov
mov
movl
cmpl
movl
je
cmpl
je
call
andb
lea
call
mov
pop
mov
leave
ret
push
mov
push
push
push
mov
push
call
test
pop
je
push
mov
call
mov
jmp
xor
push
mov
push
push
lea
push
push
call
push
pushl
call
push
call
test
pop
jne
test
je
mov
push
mov
call
push
call
push
call
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
push
push
mov
push
mov
andl
orl
lea
and
mov
call
pushl
lea
push
call
lea
mov
push
call
mov
xor
and
sub
je
dec
je
dec
jne
mov
jmp
mov
jmp
mov
mov
push
and
pop
je
cmp
je
cmp
je
cmp
je
cmp
jne
push
pop
jmp
push
jmp
mov
jmp
xor
andl
mov
not
shr
and
movl
test
mov
je
and
neg
sbb
and
inc
inc
jmp
push
pop
push
push
lea
push
push
push
push
pushl
call
cmp
jne
mov
test
je
call
push
mov
call
pushl
lea
mov
call
xor
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
cmpl
jne
xor
jmp
lea
push
push
pushl
pushl
pushl
call
test
jne
push
call
push
call
mov
pop
ret
push
mov
push
push
mov
mov
test
je
lea
push
push
push
pushl
pushl
call
test
jne
pushl
call
push
call
cmp
je
pushl
push
push
call
pop
pop
pop
ret
push
pushl
push
pushl
pushl
call
mov
cmp
jne
push
call
push
call
mov
pop
ret
push
push
push
push
pushl
call
mov
cmp
jne
push
call
push
call
mov
pop
ret
mov
cmp
je
push
call
test
jne
push
call
push
call
ret
push
mov
push
xor
mov
cmp
je
push
call
mov
neg
sbb
inc
orl
andl
lea
call
test
pop
pop
je
push
call
push
call
ret
push
mov
mov
cmp
je
push
call
orl
lea
call
pop
ret
push
pushl
push
pushl
pushl
call
test
jne
push
call
push
call
ret
push
pushl
push
pushl
pushl
call
test
jne
push
call
push
call
ret
push
mov
push
mov
pushl
call
pushl
call
test
pop
jne
push
call
push
call
ret
push
push
mov
push
push
push
mov
call
mov
mov
push
push
mov
call
mov
mov
push
push
mov
call
pop
mov
pop
pop
ret
xor
ret
mov
call
sub
push
push
mov
lea
push
mov
push
push
pushl
call
test
jne
push
pushl
push
call
xor
jmp
mov
mov
lea
xor
push
push
mov
call
push
lea
push
push
lea
push
push
push
push
pushl
call
test
je
testb
jne
push
call
testb
jne
lea
push
pushl
call
cmp
je
push
call
lea
push
pushl
call
push
pop
orl
lea
call
mov
mov
pop
pop
mov
leave
ret
mov
push
push
mov
push
push
call
xor
mov
push
push
push
call
add
push
pushl
push
call
mov
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
je
cmp
je
push
call
pop
mov
jmp
cmp
je
inc
inc
mov
cmp
je
cmp
je
cmp
je
push
call
pop
jmp
cmp
je
push
call
pop
mov
cmp
je
cmp
je
cmp
jne
cmp
je
mov
mov
push
call
pop
pop
pop
ret
mov
mov
cmp
je
cmp
je
cmp
je
push
call
pop
mov
jmp
push
mov
sub
push
push
mov
test
mov
jne
lea
movl
pushl
push
pushl
call
test
je
pushl
push
pushl
call
jmp
test
jne
push
call
inc
jmp
xor
pop
pop
leave
ret
call
incl
ret
push
mov
push
push
push
call
mov
xor
mov
cmp
je
dec
cmp
mov
jne
cmp
je
cmpl
je
call
cmp
je
mov
cmp
je
push
push
call
mov
call
mov
call
mov
call
mov
call
mov
call
call
mov
push
mov
call
test
mov
je
mov
test
je
push
call
cmp
pop
jae
cmpl
je
mov
andl
test
je
push
call
pushl
mov
call
pop
pop
pushl
call
test
pop
mov
jne
cmp
je
pushl
call
pop
mov
xor
pop
cmp
pop
pop
setne
pop
ret
mov
call
push
push
mov
push
push
lea
mov
call
andl
lea
push
mov
call
push
push
mov
movb
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
leave
ret
mov
call
push
push
push
push
push
mov
test
mov
mov
jne
xor
mov
pop
pop
mov
pop
leave
ret
push
lea
call
test
jne
lea
push
call
test
je
mov
mov
add
cmpl
jne
mov
jmp
push
call
mov
andl
mov
call
mov
test
jne
call
push
lea
call
pushl
orl
mov
call
mov
mov
add
cmpl
jne
mov
mov
jmp
pushl
call
push
push
call
push
mov
sub
push
mov
test
je
mov
neg
sbb
test
mov
je
push
lea
lea
mov
push
lea
push
lea
push
call
mov
add
andl
cmpl
jne
andl
mov
test
je
mov
push
call
cmpl
jne
pop
lea
call
pop
leave
ret
mov
movl
ret
mov
mov
mov
ret
cmpl
jle
test
je
mov
push
call
ret
push
mov
sub
mov
lea
push
lea
push
push
call
test
je
pushl
lea
pushl
push
call
jmp
cmpl
jne
movl
pushl
pushl
pushl
call
leave
ret
push
mov
sub
push
mov
push
lea
push
push
pushl
mov
call
mov
mov
sub
cmp
jbe
mov
lea
push
call
xor
test
setg
jmp
push
mov
mov
add
push
lea
push
call
push
pushl
call
mov
mov
sub
cmp
jle
mov
push
call
xor
test
setg
pop
pop
pop
leave
ret
push
call
pushl
mov
mov
push
pushl
push
call
test
jne
and
pop
ret
mov
call
sub
andl
lea
push
push
call
mov
mov
push
mov
pop
lea
push
push
mov
call
push
lea
push
call
push
lea
call
mov
lea
push
call
mov
andb
lea
call
mov
mov
pop
mov
leave
ret
mov
call
sub
andl
lea
push
push
call
mov
mov
push
mov
pop
lea
push
push
mov
call
push
lea
push
call
push
lea
call
mov
lea
push
call
mov
andb
lea
call
mov
mov
pop
mov
leave
ret
push
mov
sub
andl
lea
push
call
mov
lea
push
call
mov
leave
ret
push
mov
sub
push
push
mov
push
push
push
mov
push
call
add
lea
push
pushl
push
call
mov
or
cmp
je
lea
push
lea
push
lea
push
push
call
test
je
push
pushl
call
cmp
mov
jne
xor
jmp
mov
cmpl
jne
andb
jmp
push
call
cmp
je
mov
lea
push
push
lea
call
mov
push
mov
lea
push
lea
call
mov
push
mov
lea
push
lea
call
mov
mov
cmpl
jne
mov
cmpl
jne
mov
mov
push
pop
pop
pop
pop
leave
ret
cmpl
je
pushl
pushl
pushl
call
push
call
ret
mov
call
push
mov
push
push
mov
test
mov
je
mov
add
mov
mov
mov
andl
lea
push
lea
call
mov
movb
cmpl
jne
push
lea
call
mov
pushl
add
push
lea
push
call
pushl
pushl
pushl
call
andb
lea
call
orl
lea
call
mov
push
pop
pop
pop
mov
leave
ret
mov
call
push
push
push
push
call
mov
pop
mov
andl
test
je
mov
call
mov
lea
mov
mov
pushl
mov
mov
movb
movl
mov
call
jmp
xor
orl
lea
push
push
mov
call
pop
mov
mov
cmp
ja
je
cmp
ja
je
cmp
ja
je
cmp
ja
jmp
xor
jmp
push
jmp
push
jmp
cmp
ja
je
cmp
ja
je
sub
je
dec
je
dec
dec
je
dec
jne
push
jmp
push
jmp
sub
je
dec
je
dec
dec
je
dec
dec
jne
push
jmp
add
cmp
ja
jmp
push
jmp
push
jmp
cmp
ja
je
cmp
ja
je
sub
je
dec
je
dec
je
dec
je
dec
je
jmp
sub
je
dec
dec
je
sub
je
dec
je
dec
dec
jne
push
pop
ret
push
jmp
mov
cmp
ja
je
cmp
ja
je
sub
je
sub
je
dec
je
dec
je
dec
jne
push
jmp
push
jmp
sub
je
dec
je
dec
je
sub
je
jmp
mov
cmp
ja
je
sub
je
sub
je
sub
je
sub
je
sub
jne
jmp
push
jmp
push
jmp
sub
je
sub
je
dec
dec
je
sub
je
dec
dec
jne
jmp
sub
je
dec
je
dec
je
dec
dec
je
push
jmp
and
add
or
add
popf
or
adc
or
adc
or
adc
or
adc
or
add
or
add
sbb
or
adc
or
add
popf
or
adc
add
xor
adc
or
adc
or
adc
or
adc
or
adc
or
adc
add
popf
or
adc
or
adc
or
add
in
or
adc
or
adc
add
adc
je
add
enter
add
ret
cmpl
je
pushl
mov
call
test
je
mov
ret
xor
ret
mov
call
sub
push
push
xor
push
cmp
mov
je
mov
mov
call
mov
mov
mov
pop
pop
mov
pop
leave
ret
mov
call
mov
ret
test
je
cmp
je
mov
jmp
push
pop
jmp
xor
ret
push
push
mov
mov
push
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
mov
push
mov
call
push
mov
call
mov
pop
pop
ret
push
push
push
mov
mov
push
call
push
mov
call
cmpl
mov
je
call
jmp
call
push
call
mov
mov
push
push
call
push
push
mov
call
push
push
mov
call
pop
pop
pop
ret
push
push
mov
xor
cmp
mov
jne
mov
mov
mov
jmp
push
call
pop
push
push
mov
call
mov
pop
pop
ret
mov
push
mov
mov
add
push
push
call
test
mov
je
push
push
call
pushl
mov
pushl
push
call
add
cmpw
jne
mov
jmp
mov
pushl
not
shr
and
mov
call
push
pop
pop
pop
ret
mov
test
je
push
call
ret
mov
andl
ret
mov
cmpw
jne
add
jmp
add
mov
push
cmp
pop
jne
add
mov
cmp
jne
add
jmp
add
test
je
mov
jmp
add
test
je
mov
jmp
mov
add
test
jne
ret
push
mov
xor
push
cmpw
push
sete
mov
call
cmpw
pop
jne
mov
jmp
mov
test
je
mov
push
neg
sbb
and
inc
lea
push
call
pop
lea
pop
test
je
mov
jmp
mov
test
jbe
neg
sbb
and
add
movzwl
add
and
add
mov
cmp
jne
add
mov
cmp
jne
add
jmp
add
test
je
mov
inc
inc
jmp
add
test
je
mov
inc
inc
jmp
movzwl
dec
lea
jne
sub
pop
pop
ret
push
mov
cmpw
jne
mov
jmp
mov
test
jne
xor
pop
ret
push
call
mov
pop
mov
push
mov
xor
cmpw
push
push
push
setne
dec
and
inc
lea
mov
call
push
push
push
push
push
call
mov
push
call
push
pop
pop
ret
push
mov
sub
push
xor
cmp
mov
jne
xor
jmp
push
push
pushl
call
mov
xor
mov
cmp
sete
cmp
mov
jne
mov
jmp
mov
mov
and
neg
sbb
mov
and
inc
shl
cmp
je
orl
jmp
orl
lea
push
push
push
pushl
push
push
call
lea
push
mov
call
pop
mov
xor
mov
cmp
je
lea
push
call
pop
lea
mov
lea
and
lea
mov
and
cmpl
je
mov
jmp
mov
cmp
je
test
jbe
mov
sub
add
push
push
push
call
add
mov
mov
mov
sub
push
mov
lea
add
push
push
call
mov
sub
add
pushl
add
call
andl
push
pop
pop
pop
pop
leave
ret
push
mov
sub
push
push
mov
push
push
mov
pop
mov
push
call
test
jne
push
call
test
je
lea
push
push
push
call
test
je
push
lea
call
mov
mov
test
jge
neg
mov
push
push
call
push
push
pushl
call
push
push
mov
call
cmpw
jne
mov
pushl
mov
push
call
pop
pop
pop
leave
ret
mov
call
push
call
mov
cmpl
jne
cmpl
je
push
push
call
push
mov
call
pop
mov
mov
andl
test
je
push
push
push
call
jmp
xor
orl
push
mov
call
pop
mov
mov
pop
mov
leave
ret
push
call
mov
pushl
call
ret
push
call
mov
xor
test
je
pushl
add
call
ret
push
mov
push
mov
test
je
push
call
test
je
pushl
lea
call
andl
mov
pop
pop
ret
cmpl
jne
xor
ret
call
push
call
ret
mov
push
push
push
pushl
call
ret
push
mov
sub
cmpl
je
push
pushl
call
and
cmp
je
xor
jmp
lea
push
push
pushl
call
lea
push
push
call
neg
sbb
inc
leave
ret
push
mov
sub
lea
push
push
pushl
call
pushl
lea
push
call
neg
sbb
inc
leave
ret
push
mov
sub
push
lea
push
push
pushl
call
mov
push
pushl
call
mov
test
je
push
call
cmp
je
push
push
call
test
je
lea
push
push
call
pushl
lea
pushl
push
call
test
jne
push
push
jmp
mov
jmp
xor
pop
pop
leave
ret
push
mov
sub
push
pushl
call
mov
mov
cmp
ja
push
lea
push
pushl
call
cmp
jne
pushl
lea
push
call
test
je
pushl
pushl
call
pop
leave
ret
push
mov
mov
test
je
push
call
andl
pop
ret
push
mov
test
je
push
call
and
mov
dec
test
je
push
lea
push
call
dec
jne
pop
push
call
pop
ret
push
call
mov
test
je
mov
test
je
push
call
pop
mov
lea
cmp
ja
pushl
call
andl
pop
jmp
sub
sub
push
pushl
call
pop
pop
push
pop
pop
ret
call
xor
pop
ret
mov
xor
movl
mov
mov
mov
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
call
push
call
mov
cmpl
jne
cmpl
je
push
push
call
push
mov
call
pop
mov
mov
andl
test
je
push
push
push
call
jmp
xor
orl
push
mov
call
pop
mov
mov
pop
mov
leave
ret
push
call
mov
pushl
call
ret
push
mov
push
mov
test
je
push
call
test
je
pushl
lea
call
mov
mov
call
andl
mov
pop
pop
ret
mov
call
push
mov
movl
andl
cmpl
je
call
push
call
mov
mov
leave
ret
mov
mov
ret
mov
mov
ret
andl
ret
andl
ret
push
push
mov
xor
push
mov
mov
test
je
push
call
mov
mov
cmp
je
push
call
test
je
or
pop
mov
pop
pop
ret
push
mov
push
mov
mov
push
cmp
pop
je
pushl
push
call
mov
test
je
test
je
pushl
push
call
test
je
push
pop
jmp
xor
pop
pop
ret
push
push
push
mov
pushl
call
mov
mov
mov
xor
cmp
je
push
push
call
mov
test
je
push
push
call
push
call
pop
pop
pop
ret
push
mov
push
mov
xor
push
mov
mov
cmp
je
test
je
mov
push
push
call
mov
test
je
test
jne
xor
jmp
mov
push
push
call
push
call
pop
pop
pop
ret
push
mov
or
push
mov
mov
cmp
je
pushl
push
call
mov
test
je
pushl
push
call
pop
pop
ret
push
mov
or
push
mov
mov
cmp
je
pushl
push
call
mov
test
je
pushl
push
call
pop
pop
ret
push
mov
xor
push
mov
mov
cmp
je
pushl
push
call
mov
test
je
pushl
push
call
pop
pop
ret
push
mov
push
push
push
mov
push
mov
mov
cmp
je
lea
push
pushl
pushl
push
call
mov
test
je
lea
push
pushl
pushl
push
call
mov
mov
pop
pop
mov
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
mov
cmp
je
lea
push
pushl
pushl
push
call
mov
test
je
lea
push
pushl
pushl
push
call
mov
mov
pop
pop
mov
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
mov
cmp
je
lea
push
pushl
pushl
push
call
mov
test
je
lea
push
pushl
pushl
push
call
mov
mov
pop
pop
mov
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
mov
cmp
je
lea
push
pushl
pushl
pushl
pushl
push
call
mov
test
je
lea
push
pushl
pushl
pushl
pushl
push
call
mov
mov
pop
pop
mov
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
mov
cmp
je
lea
push
pushl
pushl
push
call
mov
test
je
lea
push
pushl
pushl
push
call
mov
mov
pop
pop
mov
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
mov
cmp
je
lea
push
pushl
pushl
pushl
pushl
push
call
mov
test
je
lea
push
pushl
pushl
pushl
pushl
push
call
mov
mov
pop
pop
mov
mov
mov
leave
ret
pushl
pushl
call
ret
mov
call
push
call
mov
cmpl
jne
cmpl
je
push
push
call
push
mov
call
pop
mov
mov
andl
test
je
push
push
push
call
jmp
xor
orl
push
mov
call
pop
mov
mov
pop
mov
leave
ret
push
call
mov
pushl
call
ret
push
mov
push
mov
test
je
push
call
test
je
pushl
lea
call
andl
mov
pop
pop
ret
cmpl
jne
xor
ret
call
push
call
ret
push
call
mov
test
je
mov
mov
call
test
je
mov
test
je
mov
pushl
call
pop
ret
push
mov
sub
push
push
push
xor
mov
push
mov
call
lea
push
push
call
xor
cmp
mov
je
push
push
push
pushl
call
cmp
je
mov
jmp
cmp
je
lea
cmp
mov
je
mov
mov
mov
cmp
je
add
mov
mov
test
jne
mov
and
cmp
jbe
cmp
jbe
cmp
ja
or
test
je
mov
jmp
lea
push
push
push
lea
call
push
push
pushl
pushl
call
test
mov
je
mov
mov
cmpl
je
push
pushl
call
mov
push
call
mov
pop
pop
pop
leave
ret
push
mov
call
mov
test
je
pushl
mov
mov
pushl
pushl
call
jmp
pushl
xor
pushl
pushl
call
pop
ret
mov
call
push
mov
mov
pushl
andl
lea
call
mov
cmp
jne
mov
push
push
pushl
pushl
call
orl
lea
mov
call
mov
mov
pop
mov
leave
ret
push
mov
push
mov
push
push
test
mov
jne
call
test
jne
call
test
jne
xor
test
mov
mov
je
push
mov
call
test
jne
test
jne
test
je
push
call
mov
mov
test
je
test
je
push
call
test
je
cmp
je
push
push
mov
call
jmp
mov
test
je
push
push
call
test
je
push
call
mov
jmp
andl
mov
pop
pop
pop
pop
ret
call
mov
ret
push
push
mov
push
call
mov
add
mov
test
jle
pushl
call
test
jle
cmpl
jne
mov
jmp
pushl
andl
call
push
call
pop
pop
ret
mov
test
je
mov
jmp
push
pop
ret
mov
test
je
mov
pushl
call
ret
mov
pushl
mov
call
ret
mov
test
jne
mov
push
mov
call
jmp
mov
pushl
call
ret
mov
test
je
mov
pushl
call
jmp
xor
ret
mov
push
lea
push
lea
mov
mov
mov
mov
push
call
test
jne
mov
push
mov
call
push
pop
pop
pop
ret
push
mov
pushl
call
movl
pop
ret
push
mov
lea
push
mov
push
pushl
mov
call
cmpl
jne
call
mov
andl
mov
pop
pop
ret
push
mov
push
push
mov
pushl
mov
call
cmpl
mov
je
push
call
lea
push
mov
push
call
push
push
call
mov
push
call
jmp
mov
pushl
push
call
pop
pop
pop
ret
push
mov
push
mov
pushl
call
xor
cmp
je
push
push
push
push
call
mov
mov
jmp
mov
mov
cmp
jl
cmp
jle
mov
push
pushl
push
push
call
pop
pop
ret
push
push
mov
cmpl
jne
mov
pushl
mov
call
push
mov
call
test
jne
call
jmp
pushl
mov
call
cmp
je
push
mov
call
pop
pop
ret
push
mov
sub
push
mov
cmpl
je
pushl
call
mov
test
je
push
lea
push
push
push
push
pushl
push
call
push
mov
call
xor
test
sete
pop
jmp
pushl
lea
push
push
call
add
lea
pushl
push
pushl
pushl
call
pop
leave
ret
push
mov
sub
lea
push
push
pushl
call
test
je
pushl
lea
pushl
push
pushl
call
leave
ret
push
mov
push
push
mov
xor
push
mov
cmp
je
mov
cmp
jne
mov
cmp
jl
cmp
jle
cmp
jl
cmp
jg
cmp
jle
movsbl
sub
jmp
movsbl
sub
inc
inc
cmp
jge
mov
mov
test
je
push
call
add
jmp
movzbl
testb
je
inc
inc
inc
inc
cmpb
jne
push
mov
mov
call
mov
cmpb
je
mov
cmp
jne
mov
cmp
jl
cmp
jle
cmp
jl
cmp
jg
cmp
jle
movsbl
sub
jmp
movsbl
sub
inc
inc
cmp
jl
movb
inc
jmp
mov
mov
test
je
push
push
call
push
call
add
jmp
movzbl
testb
je
mov
inc
inc
mov
mov
inc
inc
jmp
sub
mov
push
call
pop
pop
pop
pop
ret
lea
push
push
pushl
pushl
call
ret
mov
call
push
push
mov
mov
movl
andl
call
orl
mov
call
mov
pop
mov
leave
ret
call
ret
push
mov
mov
sub
je
dec
je
dec
je
dec
je
dec
je
sub
je
pushl
pushl
pushl
pushl
call
jmp
mov
pushl
call
jmp
mov
mov
shr
push
movzwl
push
call
mov
mov
jmp
mov
mov
shr
push
movzwl
push
call
jmp
mov
pushl
call
jmp
mov
pushl
call
jmp
mov
pushl
call
push
pop
pop
ret
mov
call
push
push
mov
mov
movl
andl
call
orl
mov
call
mov
pop
mov
leave
ret
xor
ret
ret
push
mov
mov
sub
je
dec
je
dec
je
sub
je
pushl
pushl
pushl
pushl
call
jmp
mov
pushl
call
mov
mov
jmp
mov
pushl
call
jmp
mov
pushl
call
jmp
mov
pushl
call
push
pop
pop
ret
mov
call
push
push
mov
mov
movl
andl
call
orl
mov
call
mov
pop
mov
leave
ret
call
xor
cmp
sete
mov
ret
call
mov
ret
push
call
ret
jmp
push
call
pop
mov
ret
mov
ret
mov
movl
ret
push
mov
call
testb
je
push
call
mov
pop
ret
mov
call
push
push
push
mov
push
mov
call
xor
movl
cmp
mov
je
pushl
call
pop
mov
jmp
mov
call
mov
push
lea
call
mov
call
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
pop
pop
pop
mov
leave
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
test
je
cmpl
lea
jne
mov
andl
mov
test
je
mov
push
call
jmp
andl
push
pop
ret
push
pop
ret
mov
call
push
push
push
mov
mov
movl
mov
xor
cmp
mov
je
mov
push
call
mov
cmp
je
mov
push
call
call
cmp
jne
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
push
call
mov
cmp
je
push
call
mov
push
mov
cmp
je
push
call
mov
cmp
je
push
call
mov
pop
cmp
je
mov
push
call
call
mov
cmp
jne
mov
cmp
jne
mov
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
orl
add
mov
mov
call
mov
pop
pop
mov
leave
ret
push
mov
mov
test
je
mov
call
mov
test
je
push
push
push
mov
call
pop
ret
push
mov
mov
test
je
cmpl
je
call
cmpb
jne
mov
call
mov
test
je
call
mov
pop
ret
mov
ret
call
jmp
ret
push
call
pop
ret
mov
jmp
jmp
mov
call
push
push
call
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
mov
call
push
push
mov
mov
call
mov
andl
mov
mov
mov
movl
mov
call
mov
mov
pop
mov
leave
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
call
push
push
mov
mov
call
xor
mov
mov
movl
mov
mov
call
mov
mov
pop
mov
leave
ret
push
mov
push
xor
lea
mov
push
mov
mov
mov
mov
mov
call
mov
mov
movl
pop
pop
ret
mov
ret
mov
call
push
push
call
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
push
call
test
je
movl
ret
xor
ret
push
call
test
je
movl
ret
xor
ret
push
mov
call
testb
je
push
call
mov
pop
ret
push
mov
call
testb
je
push
call
mov
pop
ret
push
mov
sub
push
push
push
call
movswl
shr
movswl
cmp
mov
jle
push
pop
lea
lea
cltd
sub
sar
mov
mov
sar
shl
add
sub
cmp
jle
push
pop
push
pop
cmp
jle
mov
push
lea
push
push
call
mov
add
add
movl
sar
imul
add
movl
lea
mov
mov
movzbw
shl
incl
xor
not
mov
mov
mov
add
decl
jne
lea
push
push
push
pushl
push
call
pop
pop
test
mov
pop
jne
push
push
call
mov
leave
ret
mov
ret
mov
call
push
push
call
pop
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
mov
ret
mov
call
push
push
mov
call
mov
mov
xor
cmp
mov
je
mov
call
movl
mov
mov
pop
mov
leave
ret
push
mov
call
testb
je
push
mov
call
mov
pop
ret
jmp
mov
ret
call
jmp
push
push
mov
call
ret
push
call
pop
ret
testb
jne
orb
mov
jmp
ret
mov
call
push
push
call
mov
mov
xor
cmp
mov
je
call
mov
mov
leave
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
call
test
pop
je
mov
call
ret
xor
ret
mov
ret
push
mov
call
mov
test
je
mov
call
movl
mov
pop
ret
xor
pop
ret
push
mov
call
testb
je
push
mov
call
mov
pop
ret
jmp
mov
ret
call
jmp
push
push
mov
call
ret
push
call
pop
ret
testb
jne
orb
mov
jmp
ret
mov
ret
mov
mov
push
mov
mov
mov
pop
ret
mov
test
jne
xor
jmp
push
mov
xor
cmp
jne
mov
mov
mov
jmp
test
je
mov
push
mov
cmp
je
mov
test
jne
test
pop
je
mov
mov
push
pop
pop
ret
push
pushl
push
call
mov
test
jne
call
mov
pop
ret
cmpl
je
pushl
call
ret
push
mov
xor
mov
mov
movl
mov
movl
mov
mov
call
cmp
mov
jne
call
lea
push
call
mov
pop
ret
push
mov
push
mov
cmp
je
push
call
mov
test
je
mov
push
push
mov
call
test
mov
jne
mov
test
je
push
call
mov
push
call
push
call
add
push
call
pop
pop
ret
push
push
push
push
mov
push
lea
push
mov
call
mov
mov
cmp
jge
mov
testb
je
push
pop
cmp
jle
mov
add
testb
je
inc
add
cmp
jl
cmp
jl
mov
add
test
push
jne
mov
shl
push
push
call
jmp
push
call
mov
push
call
mov
push
shl
push
push
call
mov
mov
test
jne
pushl
call
push
call
pushl
call
call
pushl
call
mov
mov
mov
imul
add
lea
shl
push
push
push
call
add
mov
mov
pop
cmp
jl
lea
mov
mov
orl
pushl
lea
lea
mov
call
mov
pop
pop
pop
pop
pop
ret
push
mov
push
push
push
push
mov
lea
push
mov
call
mov
mov
test
je
cmp
jge
mov
mov
test
je
mov
push
call
mov
andl
mov
test
jne
mov
pushl
andl
lea
call
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
push
pushl
call
mov
test
je
mov
lea
cmp
jl
cmpl
je
jmp
push
call
test
je
movl
mov
jmp
xor
andl
andl
lea
lea
push
mov
call
push
lea
call
lea
push
call
mov
test
jne
mov
shl
push
push
call
jmp
mov
push
shl
push
push
call
test
mov
jne
call
mov
mov
imul
add
shl
push
mov
push
lea
push
call
mov
add
mov
push
pushl
call
mov
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
call
testb
je
push
call
mov
pop
ret
ret
push
mov
push
lea
push
call
push
pop
cmp
jle
mov
cmpl
lea
jne
testb
je
mov
mov
inc
cmp
jl
push
call
pop
pop
ret
push
mov
push
push
push
mov
push
push
mov
pop
cmp
mov
jle
mov
test
je
mov
cmp
je
mov
cmpl
je
andl
jmp
mov
mov
test
je
mov
push
call
mov
andl
inc
cmp
jl
cmpl
je
lea
push
call
push
lea
call
push
call
pushl
call
test
je
mov
push
mov
call
push
pushl
call
pop
pop
pop
leave
ret
push
push
mov
lea
push
call
cmpl
jne
pushl
call
test
je
pushl
mov
push
call
jmp
mov
test
je
push
pushl
mov
mov
push
call
test
mov
jne
pop
push
call
pop
pop
ret
push
push
mov
cmpl
jne
mov
test
jne
mov
mov
test
je
call
mov
jmp
xor
mov
call
mov
mov
mov
pushl
call
test
je
cmp
jge
mov
mov
jmp
xor
test
jne
call
mov
mov
push
pushl
call
mov
pop
pop
ret
push
mov
test
je
mov
test
je
pushl
call
test
je
cmp
jge
mov
mov
pop
ret
xor
pop
ret
push
mov
mov
test
je
mov
test
je
push
call
andl
pop
ret
mov
call
push
push
push
push
push
mov
xor
mov
cmp
jne
push
call
mov
cmp
jne
call
mov
orl
push
call
mov
mov
pop
pop
mov
pop
leave
ret
push
call
xor
push
push
call
push
mov
push
cmpl
je
mov
mov
mov
mov
cmpl
je
mov
mov
push
call
leave
ret
mov
test
je
pushl
call
ret
mov
test
je
pushl
pushl
call
ret
incl
ret
cmpl
je
decl
jne
mov
test
je
call
andl
ret
mov
orl
orl
movl
ret
push
mov
call
testb
je
push
call
mov
pop
ret
mov
call
push
push
mov
push
mov
movl
mov
andl
lea
test
je
mov
call
mov
test
je
mov
push
call
mov
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
pop
mov
pop
pop
mov
leave
ret
push
mov
call
ret
call
jmp
ret
push
call
pop
ret
mov
jmp
mov
xor
lea
mov
mov
mov
mov
mov
mov
orl
lea
mov
mov
mov
mov
movl
movl
movl
mov
mov
movl
movl
ret
push
mov
call
testb
je
push
call
mov
pop
ret
mov
call
push
push
mov
push
mov
movl
mov
movl
test
je
mov
push
call
mov
lea
test
je
mov
lea
push
call
mov
test
je
mov
push
call
andb
lea
call
mov
pop
pop
mov
leave
ret
mov
andl
andl
movl
movl
movl
ret
push
mov
call
testb
je
push
call
mov
pop
ret
mov
call
push
push
push
mov
mov
movl
mov
andl
push
test
pop
je
mov
push
call
mov
test
je
mov
push
call
mov
test
je
mov
push
call
mov
test
je
mov
push
call
mov
test
je
mov
push
call
mov
test
je
cmpl
je
call
push
call
pop
mov
jmp
mov
test
je
mov
push
call
mov
test
je
mov
push
call
mov
test
je
mov
push
call
mov
pop
pop
mov
leave
ret
call
jmp
ret
push
call
pop
ret
mov
jmp
push
mov
call
mov
test
jne
push
mov
call
ret
call
add
push
mov
call
ret
push
mov
lea
push
call
test
jne
mov
test
je
mov
push
call
andl
mov
test
je
mov
push
call
andl
pop
ret
push
push
call
mov
test
je
push
mov
call
movl
mov
pop
ret
xor
pop
ret
push
mov
call
testb
je
push
call
mov
pop
ret
jmp
push
mov
push
call
or
push
call
call
mov
mov
mov
call
mov
test
je
mov
mov
mov
mov
mov
mov
mov
mov
call
call
cmpb
pop
jne
call
push
pop
ret
push
mov
sub
push
push
push
mov
call
mov
mov
mov
mov
mov
mov
lea
push
push
pushl
call
lea
push
push
call
andb
pop
pop
mov
lea
push
push
lea
push
call
xor
cmp
jne
lea
push
call
pop
mov
cmp
jne
lea
push
push
push
call
test
je
lea
push
jmp
pushl
call
pop
mov
mov
mov
cmp
lea
jne
mov
push
push
call
lea
push
call
mov
andb
pop
cmpl
jne
lea
push
push
call
lea
push
call
pop
mov
pop
pop
pop
leave
ret
push
mov
push
mov
cmpb
je
mov
cmp
je
cmp
je
cmp
jne
push
call
pop
mov
push
call
pop
mov
jmp
cmpl
jne
push
call
inc
jmp
pushl
push
pushl
call
xor
pop
pop
ret
cmpl
push
jne
push
pop
mov
call
cmp
jae
test
je
mov
jmp
andl
push
call
mov
pop
ret
cmpl
je
decl
cmpl
jne
push
push
push
mov
push
call
mov
mov
cmpl
je
push
call
decl
add
add
cmp
jl
pop
pop
pop
ret
push
xor
cmp
jne
call
cmp
jne
push
push
mov
cmp
mov
lea
jne
push
mov
push
call
cmpl
jne
lea
lea
push
call
incl
push
call
pop
lea
lea
push
call
pop
pop
pop
ret
cmpl
jne
mov
lea
lea
push
call
ret
mov
ret
call
jmp
push
push
mov
call
ret
push
call
pop
ret
mov
jmp
mov
ret
call
jmp
push
push
mov
call
ret
push
call
pop
ret
mov
jmp
mov
ret
push
mov
sub
push
push
lea
push
mov
xor
push
push
push
mov
push
push
mov
mov
mov
mov
call
test
jne
lea
push
lea
push
push
push
push
push
push
pushl
mov
pushl
call
test
jne
lea
push
lea
push
mov
push
push
push
push
push
pushl
pushl
call
cmp
mov
je
pushl
call
cmp
je
pushl
call
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
xor
push
mov
call
mov
cmp
jne
xor
jmp
lea
push
lea
push
push
push
push
push
push
pushl
push
call
push
call
mov
pop
pop
leave
ret
mov
ret
call
jmp
push
push
mov
call
ret
push
call
pop
ret
mov
jmp
mov
ret
call
jmp
push
push
mov
call
ret
push
call
pop
ret
mov
jmp
push
call
test
pop
je
mov
call
ret
xor
ret
mov
ret
push
call
test
pop
je
movl
andl
ret
xor
ret
mov
ret
push
mov
call
mov
test
je
mov
call
movl
mov
pop
ret
xor
pop
ret
push
mov
call
testb
je
push
mov
call
mov
pop
ret
jmp
mov
ret
mov
call
test
je
andl
movl
ret
xor
ret
push
mov
call
testb
je
push
mov
call
mov
pop
ret
mov
call
push
mov
movl
andl
call
mov
mov
leave
ret
mov
ret
call
jmp
push
push
mov
call
ret
push
call
pop
ret
testb
jne
orb
mov
jmp
ret
call
jmp
push
push
mov
call
ret
push
call
pop
ret
testb
jne
orb
mov
jmp
ret
call
jmp
mov
jmp
push
call
pop
ret
mov
jmp
cmpl
je
push
mov
push
call
inc
push
mov
call
inc
movl
mov
pop
ret
push
mov
push
call
push
mov
call
andl
mov
pop
ret
push
push
push
mov
call
xor
push
mov
movzbl
movzbl
shl
add
mov
mov
shr
cmp
mov
sbb
pop
inc
xor
sub
cmp
mov
mov
mov
mov
je
push
call
cmp
sbb
inc
mov
mov
call
mov
mov
call
mov
push
push
call
push
push
mov
call
mov
xor
cmp
mov
mov
pop
setne
inc
mov
mov
mov
pop
pop
ret
mov
call
push
push
mov
mov
movl
mov
andl
test
je
push
call
mov
test
je
push
call
mov
pop
mov
leave
ret
mov
call
push
mov
movl
mov
andl
test
je
mov
test
je
call
mov
mov
leave
ret
call
jmp
ret
push
call
pop
ret
mov
jmp
jmp
call
jmp
ret
push
call
pop
ret
mov
jmp
mov
ret
push
mov
sub
lea
push
call
push
call
push
pop
cmp
sbb
neg
leave
ret
jmp
call
mov
ret
push
call
test
pop
je
movl
andl
ret
xor
ret
mov
ret
mov
call
test
je
andl
movl
ret
xor
ret
push
mov
call
testb
je
push
mov
call
mov
pop
ret
mov
call
push
mov
movl
andl
call
mov
mov
leave
ret
mov
ret
call
jmp
push
push
mov
call
ret
push
call
pop
ret
testb
jne
orb
mov
jmp
ret
mov
call
push
mov
movl
andl
add
push
call
mov
mov
leave
ret
call
test
je
mov
test
je
push
push
call
pushl
call
ret
mov
call
push
push
mov
mov
movl
mov
andl
test
je
push
call
call
cmp
jne
andl
orl
mov
call
mov
pop
mov
leave
ret
push
push
push
push
call
push
mov
call
add
xor
mov
cmp
je
push
push
call
pop
mov
pop
mov
call
pushl
push
call
lea
jmp
push
mov
call
call
mov
cmp
je
mov
cmp
je
push
push
call
call
mov
mov
lea
cmp
je
mov
call
test
je
mov
call
cmp
jne
mov
mov
cmp
je
push
call
mov
mov
cmp
je
push
call
mov
pop
pop
pop
pop
ret
add
push
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
and
test
je
mov
jmp
ret
lea
jmp
mov
jmp
int3
int3
int3
mov
and
test
je
mov
jmp
ret
lea
jmp
mov
jmp
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
pushl
call
ret
mov
jmp
int3
lea
jmp
mov
jmp
int3
int3
pushl
call
ret
mov
jmp
int3
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
pushl
call
ret
mov
jmp
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
mov
jmp
int3
int3
mov
jmp
int3
int3
pushl
call
pop
ret
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
mov
jmp
int3
int3
pushl
call
ret
mov
jmp
int3
pushl
call
pop
ret
mov
jmp
pushl
call
ret
mov
jmp
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
mov
and
test
je
mov
jmp
ret
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
mov
and
test
je
mov
jmp
ret
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
mov
and
test
je
mov
jmp
ret
mov
jmp
int3
int3
int3
lea
jmp
mov
and
test
je
mov
jmp
ret
mov
jmp
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
lea
jmp
mov
and
test
je
mov
jmp
ret
mov
jmp
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
pushl
call
pop
ret
mov
jmp
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
mov
jmp
int3
int3
mov
add
jmp
mov
add
jmp
mov
jmp
mov
jmp
int3
int3
mov
add
jmp
mov
add
jmp
mov
jmp
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
mov
jmp
mov
jmp
int3
int3
mov
jmp
int3
int3
lea
jmp
mov
and
test
je
mov
jmp
ret
mov
jmp
int3
int3
int3
lea
jmp
mov
and
test
je
mov
jmp
ret
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
pushl
call
ret
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
mov
jmp
int3
int3
pushl
call
pop
ret
mov
jmp
mov
jmp
mov
jmp
int3
int3
pushl
call
pop
ret
mov
jmp
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
pushl
call
pop
ret
mov
jmp
mov
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
push
pusha
pusha
lea
jne
sub
btc
xorb
pusha
mov
pushf
pushl
lea
jmp
stc
ror
jmp
cmc
clc
xor
pusha
pushf
sub
pushf
mov
lea
pushf
call
pushf
mov
inc
lea
jae
xor
jge
push
inc
pusha
pusha
clc
add
pushf
push
clc
sub
cmp
pushf
movb
cmp
sub
mov
call
shl
neg
xor
mov
bt
not
bts
ror
seto
xor
pushl
call
shl
xadd
mov
xor
mov
pushf
jmp
test
call
call
aad
cwtl
sbb
mov
setg
mov
cmp
bt
stc
cmc
add
pushf
pushf
mov
pusha
pushf
mov
mov
lea
jmp
pusha
fmull
pushf
mov
push
lea
jmp
pushf
movw
pusha
mov
mov
pushl
jmp
pushf
mov
call
jmp
pusha
mov
pushl
push
lea
jmp
sub
stc
shr
jmp
mov
std
mov
call
lea
movzbw
mov
pusha
pushf
push
lea
pushf
pushf
mov
movl
mov
pushf
movb
lea
jmp
pusha
lea
mov
call
jmp
pusha
jmp
mov
push
mov
lea
ja
push
mov
push
pushf
pushf
pusha
lea
jmp
push
pushl
call
mov
push
pushf
mov
push
lea
jmp
lea
jns
pusha
mov
pushf
push
lea
jmp
mov
push
pushf
lea
jmp
ror
mov
shl
movsbw
mov
bt
cmp
cmp
add
pusha
push
mov
movb
lea
jmp
pushf
call
pushf
mov
jmp
mov
push
call
pushf
push
pushf
popl
pusha
pushf
pushf
jmp
bswap
cmc
call
mov
mov
cmc
sub
clc
push
pushf
mov
test
cmc
lea
jnp
sub
pushf
pushf
pusha
lea
jmp
pushl
jmp
pushf
pushl
popl
pushf
movb
lea
jmp
divl
pushl
push
mov
pusha
mov
call
pushf
jmp
pushf
mov
mov
call
not
mov
jmp
push
movb
mov
movb
fcompl
movb
pushf
pushf
lea
jmp
stc
sub
test
cmc
jmp
mov
mov
pushf
movl
call
mov
pushf
popl
pushf
mov
stc
push
bt
push
mov
jmp
divl
movb
mov
push
push
call
xchg
mov
btr
movzbw
shl
or
xor
inc
bt
movsbw
sub
bts
not
pusha
bsr
bswap
stc
sub
movsbw
or
cmc
clc
xor
setp
not
jmp
mov
not
jmp
bt
sub
mov
mov
movl
pusha
lea
jmp
jnp
add
mov
clc
mov
call
aam
mov
test
jmp
dec
dec
dec
cmc
add
not
shld
neg
rcr
and
dec
sar
mov
stc
add
pushf
pushf
pusha
mov
pushf
lea
jmp
pusha
mov
call
rol
shld
mov
lea
cmp
test
jmp
neg
pushl
pushl
call
pusha
pusha
pushf
call
movb
push
pushl
mov
push
pushf
lea
jmp
inc
clc
jmp
add
btc
jmp
call
pusha
lea
jmp
pushl
jmp
pushf
sub
cmp
pusha
pusha
sub
call
push
mov
push
jmp
mov
movb
call
jmp
call
ror
neg
pushl
popl
btr
btr
shld
movl
test
mov
jmp
adc
mov
not
mov
mov
bt
sub
test
pushf
call
call
call
sub
shr
mov
test
mov
stc
stc
push
stc
add
mov
jmp
call
mov
not
call
jmp
cwtl
mov
bt
bswap
cmc
add
bt
bt
pushf
bt
lea
pushf
movb
lea
jp
stc
rol
test
jmp
btr
mov
inc
add
push
mov
pushl
sub
je
cmp
pusha
sub
movl
clc
cmc
pushf
shl
pushf
movl
mov
mov
pushf
popl
call
mov
movb
lea
jmp
stc
cmc
jmp
mov
jmp
cmp
pushl
neg
movw
dec
lea
jno
neg
bt
cmc
xor
call
pusha
pusha
jmp
jmp
lea
jnp
pushf
pushf
popl
push
pushl
popl
push
lea
jmp
add
cmc
clc
cmc
shrd
mov
call
fwait
push
movw
mov
movl
lea
jmp
pushl
popl
shr
movzbw
shrd
sbb
movl
bts
shld
bswap
sbb
mov
push
bswap
test
stc
add
jmp
jmp
aaa
mov
test
pushf
sub
cmc
clc
sub
call
xchg
or
sbb
mov
and
call
push
pushf
mov
pusha
pushf
pushf
lea
jmp
jmp
mov
push
pusha
movw
mov
pushl
call
jmp
pusha
lea
push
push
mov
jmp
call
lea
jo
pushf
pushf
lea
ja
btr
movzbw
bsr
xor
mov
shld
lea
sbb
stc
shl
sub
shrd
bsf
lea
pushf
cmp
adc
sbb
and
shr
movzbw
shl
adc
sub
jmp
not
cmp
clc
not
test
sub
clc
and
jmp
test
add
pushl
jmp
shl
shrd
ror
mov
pushf
add
not
and
sub
bswap
btr
call
pushl
mov
pushl
mov
pusha
jmp
rol
rcr
mov
jae
mov
jmp
movb
jmp
sar
mov
shr
mov
cmc
stc
pushf
call
mov
pusha
lea
ja
btc
rdtsc
pusha
lea
das
ror
xor
lea
and
sbb
sub
sub
pop
lea
rol
and
lea
sub
not
pushf
lea
pop
mov
jmp
pushf
pushf
popl
pushf
pushf
call
lea
mov
mov
lea
jmp
xchg
movsbw
not
movzbw
mov
movzbl
mov
lea
pushf
popl
bswap
not
mov
pop
pushf
lea
pushl
popl
bswap
mov
pop
movsbl
movl
bswap
not
mov
pusha
lea
jmp
not
push
sub
push
call
call
mov
bswap
call
mov
call
pushf
call
mov
push
jmp
mov
ror
mov
cmp
cmp
not
jmp
test
push
mov
sub
cmc
stc
cmc
shl
pushf
call
movb
push
pushl
popl
push
mov
lea
jmp
xchg
pusha
clc
bswap
pushl
popl
not
movl
movsbl
rcr
pushf
btr
mov
call
mov
pushf
pushl
movb
mov
mov
mov
call
neg
pushf
push
test
add
stc
pusha
cwtl
jmp
pushf
mov
call
jmp
jmp
not
cbtw
mov
shl
adc
mov
call
mov
push
lea
jmp
mov
pushl
mov
mov
movb
lea
jmp
call
jmp
sbb
and
sub
fdivs
and
ljmp
les
stos
or
and
sub
int3
dec
and
mov
and
sub
mov
xor
sub
xchg
sub
and
or
sub
mov
sub
les
call
les
push
pop
and
push
sub
and
sub
je
sub
ljmp
and
and
and
and
and
inc
sub
push
and
and
cs
insb
sub
and
sub
cmpsb
imul
and
xor
cmp
sub
outsl
sub
push
ret
sub
test
sub
cs
sub
mov
sub
subb
test
sub
mov
mov
and
or
and
sub
inc
ja
and
fsubrl
and
les
call
les
out
sub
mov
sub
push
and
and
sub
and
and
sub
push
or
sub
dec
xchg
sub
and
sub
mov
mov
and
and
sub
stos
or
and
sub
pop
xchg
and
and
and
sub
mov
sub
ljmp
and
sub
nop
add
outsb
imull
and
mov
and
sub
subb
aam
sub
fdivs
and
sub
aam
sub
push
and
and
repz
xor
and
sub
and
fisubrl
and
sub
cmpsb
out
sub
insb
or
and
repz
fdiv
sub
and
sub
call
pop
sub
and
sub
jp
sub
mov
sub
and
subb
push
or
and
js
and
lock
and
sub
mov
mov
sub
and
ljmp
dec
mov
and
fsubrs
and
das
sub
cmpsb
imul
and
lock
and
push
and
ljmp
call
sub
push
into
and
and
sub
or
sub
mov
push
cs
sub
sub
lret
and
sub
fsubrs
sub
fcmovu
sub
outsb
add
and
mov
and
xor
fdivs
and
sub
sub
call
add
and
xchg
sub
and
sub
and
push
sub
cmp
sub
mov
sub
sbbb
and
sub
fisubrl
and
and
js
and
ja
and
sbb
and
xor
sub
and
and
mov
sub
jp
sub
fisubrl
and
and
sub
and
outsl
sub
push
and
and
or
and
shrb
and
insb
and
les
outsl
sub
mov
sub
and
stos
sub
cld
pop
sub
and
inc
sub
push
or
sub
mov
sub
and
mov
and
pop
sub
and
mov
and
sub
xorb
and
les
mov
sub
and
js
and
ret
sub
mov
sub
and
mov
and
das
sub
push
fldenv
inc
incb
xlat
add
mov
pushf
lea
jmp
test
sar
rcr
mov
add
pusha
sar
mov
pushf
sub
cmp
shl
pusha
call
cwtl
mov
pusha
mov
jmp
call
mov
jmp
jmp
mov
push
mov
push
lea
jmp
pusha
pusha
clc
pushl
rol
mov
mov
call
mov
neg
setno
call
cmc
jmp
pusha
bts
rcr
xor
mov
bt
call
push
not
bswap
mov
jmp
seto
call
inc
call
test
mov
ror
neg
mov
stc
jmp
sub
stc
call
mov
call
pushf
call
pushf
popl
call
call
pushf
mov
push
pushl
lea
jmp
call
push
pusha
lea
jne
shl
bt
xorb
push
pushl
pop
pop
pop
pusha
pusha
pushl
movw
lea
jmp
pushf
popl
call
movb
jmp
mov
std
call
dec
clc
cmp
cmp
or
jmp
shl
mov
stc
not
movb
cmc
cmc
not
pusha
call
call
lea
dec
btc
not
mov
adc
rol
pushf
neg
shl
pushf
rol
adc
and
btc
mov
test
pushf
sub
push
mov
pushl
lea
jmp
mov
call
cltd
mov
bsf
bsf
btc
mov
push
shl
mov
bt
bt
call
pushf
mov
push
call
call
mov
mov
call
pusha
mov
mov
pusha
push
mov
movw
mov
pushf
mov
movb
pushf
push
pushf
mov
pushf
mov
jmp
call
push
cmp
mov
pushf
lea
ja
or
xadd
mov
shl
dec
pushf
lea
test
seto
ror
jmp
movb
neg
pushl
pushf
push
lea
jmp
cmc
pushf
pusha
pushf
pushl
popl
sub
ja
add
cmp
std
clc
popf
pushf
movb
movl
lea
jmp
mov
movw
pusha
add
mov
jmp
inc
ror
mov
test
movsbw
push
mov
jmp
jmp
mov
jmp
jmp
sub
pusha
pushf
lea
jmp
mov
jmp
movb
sub
jmp
jmp
call
push
fildl
pusha
pusha
push
movb
lea
jmp
movzbw
push
pusha
mov
pushl
setge
movzbw
pushf
xchg
pop
lea
seta
pushf
popl
not
bsf
pushl
popl
call
mov
movw
push
jmp
jmp
xchg
pusha
cmc
mov
stc
stc
stc
add
mov
shl
and
neg
sbb
mov
jmp
push
mov
movw
pushl
pushf
push
lea
jmp
mov
call
movl
shl
shl
mov
push
bswap
stc
pushf
jmp
jmp
pushf
jmp
lea
je
cmc
bt
cmc
call
mov
dec
clc
jmp
mov
pushl
mov
xchg
movsbw
call
jmp
pusha
pushl
popl
mov
mov
lea
jmp
push
pusha
lea
push
pushf
mov
mov
push
pusha
pushf
movw
xchg
push
mov
push
jmp
pusha
pushl
popl
pushf
push
lea
jmp
jmp
mov
lea
push
lea
pusha
pushf
push
mov
pushf
pushf
lea
mov
pushf
jmp
call
cmp
add
call
pusha
movb
pushf
mov
call
bt
shl
mov
jmp
pushl
pop
bswap
or
neg
movzbw
add
shl
stc
rol
neg
add
movzbw
pusha
lea
shrd
shl
bts
and
sub
shld
bts
xadd
mov
bswap
pushf
mov
sar
movsbw
add
lea
setnp
lea
shl
btr
mov
movsbw
xor
mov
bswap
dec
bswap
ror
bt
ror
clc
btc
pushf
add
movsbw
call
sub
jmp
call
clc
sub
je
sub
call
jmp
pushf
popl
pushl
push
mov
pushl
popl
mov
mov
mov
mov
lea
jmp
pushf
mov
mov
mov
movb
jmp
pusha
call
call
inc
push
not
pusha
not
push
mov
pop
movzbl
not
pop
pushl
popl
lea
movl
mov
not
mov
call
shr
jmp
mov
pushf
call
pushf
pushl
test
bt
sub
test
clc
cmc
mov
call
pusha
cmp
movb
call
pushl
mov
pushf
push
mov
lea
jg
pusha
mov
jmp
cmc
pushl
cbtw
test
stc
cwtl
test
test
jmp
cmc
sub
test
cmc
sub
jmp
call
pushl
popl
mov
pushf
mov
lea
jmp
je
mov
rcl
add
setae
pusha
pushl
pusha
mov
movb
mov
mov
pushf
pushf
pushl
mov
lea
jmp
pushf
pushl
pushl
popl
pushf
push
movb
lea
jmp
pusha
push
pushf
mov
push
push
push
lea
jmp
add
pushf
mov
mov
movb
movb
pushl
lea
jmp
pushf
popl
pushf
mov
mov
push
lea
jmp
cmp
cbtw
cmp
clc
cwtl
jmp
mov
mov
lea
jmp
cld
pusha
jmp
mov
pusha
lea
jmp
rol
bsr
mov
mov
cmp
add
call
mov
mov
mov
lea
jmp
movb
pushl
popl
pushf
lea
jmp
setge
mov
adc
bt
mov
call
mov
pusha
pushl
mov
mov
pushf
lea
jmp
cmp
pushf
add
call
and
clc
cmp
pusha
jmp
mov
pushf
push
call
shl
btr
daa
aaa
mov
pushf
push
sub
pusha
mov
mov
mov
pushf
push
lea
jmp
shrd
dec
xadd
mov
neg
shrd
xor
sub
cmc
or
sub
bts
rol
pusha
pusha
bsf
sub
sbb
bswap
sub
xor
setbe
call
mov
pushl
popl
pusha
push
lea
jmp
call
ror
mov
cmc
clc
test
add
call
shld
sbb
neg
mov
cmp
dec
shl
add
jmp
lea
jle
pusha
pushl
popl
pushl
mov
lea
jmp
pushf
call
mov
mov
pushf
pusha
mov
jmp
pushf
push
call
jmp
pushf
pushf
mov
mov
mov
jmp
bt
neg
bt
test
test
push
xor
pusha
mov
mov
pushf
sub
pushf
mov
movb
inc
mov
lea
jmp
call
pushf
popl
lea
jns
pusha
pusha
pushl
popl
push
movl
push
lea
jmp
pushf
push
movb
pushf
popl
pushf
jmp
mov
lea
jns
pushf
pushf
pusha
call
mov
movb
push
mov
movb
lea
jmp
mov
pushf
pushf
lea
jmp
fcompl
pushf
pushf
lea
jmp
lea
mov
pushf
cld
pusha
rep
shr
mov
ror
btc
add
mov
clc
std
cmc
pushl
popf
movb
lea
jmp
adc
mov
call
push
mov
mov
pushf
mov
lea
jmp
movzbw
setnp
mov
seta
mov
pusha
call
jmp
mov
pushf
pushf
pushf
push
lea
jmp
cmp
stc
mov
sbb
sets
shl
mov
stc
clc
call
mov
movw
pushl
pushf
push
lea
jmp
mov
jmp
pusha
mov
pushl
jmp
jmp
push
pushf
pushl
mov
pusha
pushf
mov
pushf
push
push
call
mov
jmp
mov
pushf
push
stc
sub
push
lea
jne
clc
sub
pusha
push
jmp
popl
pushf
pushl
pusha
mov
lea
jmp
mov
pushl
movb
lea
jmp
mov
movb
push
pushf
mov
pushf
jmp
mov
push
call
bsf
mov
rcr
mov
cmc
sub
pusha
shl
push
mov
movl
pushf
popl
movb
jmp
mov
pushf
pushl
pushf
popl
call
mov
pusha
movl
mov
pushf
movw
push
movw
lea
jmp
mov
push
pushf
jmp
neg
xor
rol
mov
inc
call
push
mov
pushf
mov
call
lea
jbe
mov
pushf
pushf
movb
lea
jmp
jmp
rcl
clc
rol
mov
cmp
sub
shl
neg
bsf
mov
inc
mov
shr
bts
btr
xor
add
pushf
pusha
clc
mov
pop
shl
bsf
xor
pusha
lea
inc
dec
dec
pushl
mov
dec
not
call
mov
pushf
pushf
popl
push
cmc
push
mov
stc
mov
clc
push
pushf
mov
cmc
xchg
stc
add
shrd
or
push
and
cmp
cmc
movsbw
push
sbb
dec
clc
dec
push
ror
rcl
sar
sub
pushl
bsr
push
not
mov
shr
shl
add
movzbl
lea
mov
jmp
mov
mov
test
mov
jmp
pushf
pushf
jmp
shld
push
call
and
call
dec
bts
pop
xor
sbb
cmp
movzbl
pushf
jmp
movb
call
pushf
pusha
jmp
push
pusha
pushf
popl
call
add
push
pusha
mov
push
mov
push
lea
jmp
mov
jmp
call
shl
call
movl
push
pushf
mov
mov
mov
movb
push
pushl
ret
cmp
pushf
sub
movw
push
mov
movw
lea
jmp
push
rep
sub
std
stc
shrd
mov
dec
mov
jmp
push
fmull
pusha
lea
jmp
jmp
fwait
pushl
lea
jmp
mov
clc
mov
jmp
mov
pushf
mov
pusha
mov
cmc
call
xor
pusha
mov
inc
push
jmp
lea
movl
pop
inc
movzbl
mov
pushf
call
mov
call
dec
clc
jmp
mov
call
clc
add
mov
call
mov
call
call
cwtl
mov
push
pusha
idivl
call
pushf
popl
call
pusha
call
push
jmp
shrd
push
lahf
mov
clc
mov
pushf
mov
add
pushl
pushl
pushf
movl
pushf
popl
pusha
pushl
popl
push
movl
movb
movw
lea
jmp
test
add
bt
lea
jle
stc
ror
call
test
jmp
pushl
popl
pushf
movb
lea
jmp
pushf
popl
pushl
pushl
popl
movw
movb
lea
jmp
pushf
jmp
jmp
jmp
pushl
popl
mov
pushf
mov
lea
jmp
add
lea
je
mov
pushf
pusha
lea
jmp
mov
jmp
lea
movsbl
movzbw
mov
not
pushf
popl
lea
bswap
mov
pusha
bswap
not
pushl
pushl
popl
bswap
movl
not
jmp
ror
shl
seta
mov
shl
sets
neg
mov
call
mov
call
call
pusha
mov
pushl
pusha
pushl
call
bt
shr
mov
bsf
shl
rcr
ror
mov
clc
cmp
cmp
test
add
pusha
mov
pushf
pusha
lea
jmp
movb
pushf
mov
pushl
mov
movb
pushl
lea
jmp
pusha
mov
jmp
pushf
lea
jmp
pushf
mov
movb
pushf
xchg
clc
pushl
popl
pusha
movzbw
movsbw
bts
movl
stc
mov
lea
jo
ror
push
pusha
lea
jmp
jmp
call
pushf
pushf
push
mov
pushl
call
setge
mov
pushf
mov
pusha
cmp
clc
call
pushf
jmp
cmc
pushf
add
pusha
movb
pushl
popf
pushf
pushf
lea
jmp
stc
pushf
cmc
add
movb
pushf
popl
call
call
lea
jmp
add
jmp
jmp
push
push
mov
pusha
call
sets
mov
sar
mov
pusha
bt
cmc
not
test
push
stc
mov
not
cmp
pusha
sub
test
pushl
and
pushl
mov
lea
jb
pushf
mov
call
mov
jmp
clc
xchg
bswap
lea
pushl
popl
ror
movl
push
stc
lea
mov
cmc
stc
stc
clc
ror
pushf
push
mov
lea
jmp
pusha
mov
mov
pusha
pushf
popl
call
cltd
cltd
mov
jmp
pushf
mov
push
pushl
pushf
popl
test
mov
clc
mov
bt
cmc
cmc
mov
push
mov
jmp
lea
jne
pushf
pushf
popl
jmp
mov
pusha
push
lea
jmp
sub
test
call
rcr
cwtl
mov
adc
jmp
pushf
jmp
pusha
pusha
jmp
mov
pushl
push
pushl
pushl
lea
jmp
jmp
bt
test
xor
sar
movzww
pushf
add
jno
add
cmc
clc
ror
call
pusha
mov
mov
jmp
jmp
mov
pusha
lea
jmp
mov
movb
movw
lea
jmp
bsf
rdtsc
pusha
sub
pushl
pusha
pushf
movb
mov
call
cmp
add
bt
movb
clc
pusha
shrd
call
push
pusha
jmp
push
call
jmp
adc
cmp
and
adc
fldt
adc
mov
and
push
rorl
push
mov
adc
movl
adc
lret
cmpsb
adc
push
pop
adc
daa
aad
adc
mov
adc
out
adc
inc
out
adc
push
or
pop
or
adc
mov
fists
push
mov
fists
push
test
push
xor
adc
push
ficoml
pop
push
ficoml
pop
push
ficoml
pop
push
ficoml
push
mov
adc
push
and
push
call
test
adc
test
adc
push
pop
adc
cmp
cltd
adc
mov
adc
data16
adc
mov
adc
movl
push
gs
adc
in
adc
test
adc
xchg
jle
adc
movsl
imul
mov
pop
adc
rorl
adc
rcrl
adc
mov
loop
push
clc
sbb
pop
daa
aad
adc
mov
adc
aad
adc
mov
loop
push
gs
adc
test
push
imul
adc
clc
sbb
push
mov
fists
push
mov
fists
adc
data16
adc
clc
xchg
adc
push
ficoml
pop
push
ficoml
pop
push
ficoml
pop
push
ficoml
adc
imul
adc
or
adc
aad
adc
test
adc
data16
adc
mov
adc
jo
adc
inc
out
adc
movl
adc
mov
adc
cli
push
adc
sbb
pop
daa
aad
adc
data16
adc
call
notb
push
in
adc
data16
push
mov
out
adc
stc
and
push
cltd
jnp
adc
rorl
push
call
imul
addl
adc
fldt
push
data16
adc
gs
adc
rolb
push
mov
adc
out
mov
push
xchg
jle
push
mov
fists
push
mov
fists
push
jl
adc
rolb
pop
push
ficoml
pop
push
ficoml
pop
push
ficoml
pop
push
ficoml
push
mov
adc
daa
aad
push
imul
adc
inc
out
adc
push
pop
adc
cltd
jnp
adc
data16
adc
mov
adc
clc
xchg
adc
movsl
imul
out
mov
push
movsl
imul
cltd
jnp
adc
mov
adc
push
or
adc
loop
adc
push
aad
adc
cmp
lock
data16
push
test
pop
or
adc
rcrl
push
cli
push
adc
sti
sti
adc
loop
adc
xchg
jle
adc
mov
adc
mov
adc
in
adc
cmp
adc
data16
adc
fldcw
push
mov
fists
push
mov
fists
pop
push
or
adc
out
adc
dec
adc
pop
push
ficoml
pop
push
ficoml
pop
push
ficoml
pop
push
ficoml
push
test
adc
jo
adc
cmp
adc
mov
adc
test
adc
jl
adc
mov
test
pop
data16
adc
clc
xchg
adc
sbb
pop
dec
adc
adc
rorl
push
mov
adc
adc
add
inc
and
mov
mov
push
push
jmp
mov
cmp
jmp
pushf
flds
pushf
lea
jmp
seto
pop
lea
pushf
popl
not
mov
push
dec
movzbl
mov
movzbw
lea
jg
pushl
lea
not
bswap
push
sete
bswap
not
mov
pushf
xchg
inc
bswap
inc
rcl
ror
lea
xor
rcr
not
neg
add
call
rol
mov
bswap
mov
push
not
call
pushf
pusha
mov
push
mov
jmp
sar
movzbl
movsbw
mov
test
test
stc
stc
not
stc
add
movl
lea
jno
push
pusha
movw
pushl
ret
pusha
sub
mov
call
pushf
mov
pushf
pusha
mov
call
jmp
test
sub
call
pushf
mov
jmp
pushl
pusha
lea
jne
cmc
bt
clc
sub
pusha
xchg
push
call
pushf
mov
pushf
mov
push
mov
jmp
push
mov
rep
bts
cmp
rol
mov
shl
shr
rcr
lea
mov
clc
test
pushl
popf
pushl
lea
jmp
sub
mov
btc
add
mov
rol
jmp
mov
pushf
mov
mov
jmp
clc
pusha
pushf
add
pusha
jmp
sub
pushf
mov
call
pusha
call
jmp
push
mov
pushl
popf
movb
movb
mov
movb
lea
jmp
ror
rol
not
jae
mov
neg
bswap
mov
stc
push
add
call
bt
ror
call
cmp
xor
pusha
pusha
sub
cmc
rol
bt
bt
add
push
stc
clc
bt
ror
call
mov
movb
pushf
pusha
lea
jmp
mov
pushf
lea
jmp
push
call
jmp
shl
pusha
push
push
mov
jmp
sar
add
stc
lea
setnp
rol
push
bswap
not
dec
inc
or
lea
pusha
xadd
sub
inc
movsbw
mov
lea
movzbw
mov
inc
add
not
mov
rol
movsbw
xor
and
sub
shl
pusha
neg
pop
pushf
dec
inc
or
bsr
neg
or
xor
pushf
pushl
push
setnp
dec
mov
pushf
movzbw
bts
movzbl
rcl
mov
bswap
jmp
pushf
popl
jmp
clc
mov
cmc
bt
movb
mov
bt
btr
ror
pushl
popl
pusha
movl
cmc
btr
movsbw
bts
mov
cmc
ror
movb
push
pushf
lea
jmp
mov
movl
mov
push
pusha
mov
call
pushf
call
push
mov
pusha
lea
jmp
mov
pusha
push
jmp
pushf
rep
add
adc
ror
test
mov
or
lea
dec
mov
bt
stc
clc
pushl
popf
movl
push
pushf
lea
jmp
mov
movb
pushl
pushf
mov
movw
push
lea
jmp
clc
ror
push
pushf
lea
jmp
das
setne
aaa
inc
mov
shl
or
sub
inc
mov
cmc
stc
push
sub
pusha
call
pusha
pusha
movb
pushf
pushf
popl
pushf
pushf
pushl
popl
pushf
movw
movb
mov
lea
jmp
call
ror
adc
rcr
rcl
mov
call
call
pushf
movb
jmp
mov
call
sub
push
cmc
cmp
cmc
and
movw
pushf
popl
pusha
pushl
push
pushl
popl
push
push
lea
jmp
lea
jne
mov
bsf
mov
clc
bt
clc
and
clc
cmp
pusha
pushf
pusha
lea
jne
add
call
not
not
bt
mov
mov
pushf
pusha
sub
call
shl
shrd
mov
btc
or
shl
movsbw
add
sbb
sar
not
lea
bswap
neg
btr
btr
ror
bts
bsf
add
bsr
pusha
cmp
sub
clc
or
dec
rol
movzbl
jmp
add
bt
stc
cmc
neg
pushf
stc
clc
bt
rol
add
jno
not
call
add
bt
movzbl
lea
mov
push
cmc
movb
pushl
rol
clc
add
pushl
call
or
cmc
mov
call
inc
clc
setne
neg
mov
movzbl
cmp
btc
push
mov
pushl
stc
call
add
test
cwtl
stc
movw
sub
jmp
pushf
jmp
mov
call
rep
bts
mov
pushf
bswap
lea
jb
shl
pop
jmp
push
mov
push
lea
jmp
mov
pushl
movb
push
lea
jmp
call
stc
cmc
bt
sub
test
lea
jp
sub
clc
call
push
lea
jne
test
movzbw
dec
shl
xorb
lea
pop
pushf
pushf
pusha
lea
jmp
pusha
pusha
mov
push
call
mov
movb
movb
pushf
push
pushl
ret
call
add
pushf
pusha
mov
mov
pushf
mov
lea
jmp
jmp
pusha
pusha
pushf
mov
call
bswap
jmp
jno
push
pusha
mov
push
movb
lea
jmp
mov
push
mov
pushf
pusha
mov
push
mov
pushf
push
pushf
mov
push
mov
call
bt
pushf
bt
shr
movw
movb
jmp
movb
pushl
pushf
popl
call
cmc
pusha
pushl
jmp
sub
pushf
lea
jmp
bt
add
pushf
pusha
pushf
lea
jmp
idivl
push
pusha
mov
jmp
clc
cmp
push
pusha
lea
ja
aad
mov
xchg
lea
shld
sub
cwtl
lea
and
push
bswap
pushf
and
pushf
sub
push
movsbl
mov
not
pushf
cld
movsbl
cld
push
bswap
not
not
jmp
pushf
popl
pushl
clc
mov
mov
mov
movl
call
pushf
lea
jne
jmp
push
pushf
pushf
pushf
popl
cmc
mov
push
mov
clc
mov
mov
call
push
pushf
mov
lea
jl
push
push
movb
pushf
mov
pushf
jmp
idivl
push
lea
jno
push
mov
pusha
push
call
xchg
pushf
mov
shl
shr
shl
bswap
mov
not
rcr
sar
mov
pushf
pusha
bt
cmp
add
mov
clc
push
clc
shrd
movb
mov
pushf
mov
push
mov
pushf
popl
mov
pushl
popl
pushf
pushl
pushf
lea
jmp
aam
mov
push
add
push
mov
pusha
call
neg
aam
movzww
pushf
xor
pushl
stc
pusha
sub
stc
movw
rol
clc
add
jmp
mov
mov
movw
pushf
pushf
lea
jmp
mov
pushf
pushf
pushl
lea
jmp
mov
clc
mov
sub
bt
jmp
cmc
push
not
push
bt
clc
sub
clc
stc
cmp
cmc
and
call
mov
movb
mov
push
jmp
movw
mov
push
pusha
lea
jmp
dec
movb
add
mov
mov
pushf
pushl
ret
call
mov
mov
std
bswap
pusha
mov
call
idivl
call
stc
call
sub
movb
jmp
not
push
jmp
mov
mov
movw
lea
jmp
jmp
lea
jne
pusha
dec
rcl
cmc
mov
cmc
push
pusha
and
call
call
push
pushl
mov
call
ror
jmp
cmp
mov
push
movb
add
pusha
movb
push
mov
lea
jmp
pusha
pushf
popl
cmc
mov
test
bt
cmc
stc
mov
test
call
pushl
mov
pusha
lea
jmp
mov
lea
jl
pusha
movb
pushf
mov
push
pusha
lea
jmp
mov
lea
xchg
not
xchg
not
push
lea
jmp
mov
push
mov
pushf
pushf
mov
movw
mov
mov
push
pushf
popl
pushf
movb
pushf
pushl
lea
jmp
jmp
pushf
movb
mov
push
push
pushf
lea
jmp
mov
push
mov
call
rol
cmp
mov
bt
xor
clc
stc
neg
pusha
push
pushf
call
pushf
popl
call
push
call
xor
jmp
movb
mov
pushl
push
jmp
bt
call
neg
pushf
movb
lea
jmp
lea
jl
mov
call
mov
push
pusha
lea
jmp
push
inc
neg
add
movl
xor
btc
bswap
bt
ror
jmp
clc
add
jge
sub
test
cmc
push
neg
pusha
stc
cmc
push
sub
bt
lea
movb
jmp
mov
pushf
pusha
mov
mov
pushl
lea
jmp
movw
neg
pusha
pushf
lea
jmp
jmp
pusha
movw
mov
jmp
jmp
push
mov
pushf
call
push
pushf
popl
jmp
sub
pushf
call
sar
mov
movzbw
cmc
bt
mov
adc
sub
mov
pushf
add
pushf
mov
clc
stc
shrd
pusha
mov
movb
mov
pushf
pushf
popl
mov
jmp
call
pusha
adc
mov
adc
mov
pusha
push
test
cmc
sub
pushf
cmp
pushf
shl
pushf
call
clc
add
pushl
mov
mov
pushf
pushl
pushf
lea
jmp
mov
not
bsr
mov
pusha
sub
bt
bt
movw
stc
add
jmp
pusha
fwait
pushf
push
lea
jmp
call
pushf
sub
stc
cmc
clc
cmp
add
call
pusha
jmp
mov
mov
pushf
call
call
movl
push
mov
pushf
jmp
cbtw
bt
jmp
pushf
push
mov
pusha
mov
pushf
mov
call
jmp
shl
adc
add
mov
jmp
call
xor
xor
inc
mov
jmp
pushf
popl
pusha
jmp
mov
pusha
push
call
sub
inc
rcl
stc
mov
pushf
add
pushl
lea
jmp
pushf
movb
fcomps
pusha
pushf
push
lea
jmp
pushl
popl
push
mov
pushf
movb
lea
jmp
lea
mov
pushf
push
movzbw
jmp
rol
call
mov
jmp
call
jmp
pushl
popl
movb
pushf
movb
lea
jmp
mov
mov
call
call
call
pushf
popl
movw
lea
jmp
call
push
movb
mov
jmp
xor
sete
bts
mov
stc
pusha
pusha
add
mov
pushf
pushf
popl
call
jmp
push
pushf
popl
pushf
call
pushf
pushl
mov
call
movl
movw
mov
lea
lea
mov
pushf
pushl
pushf
mov
lea
jmp
pushf
movw
mov
pushf
movb
jmp
not
mov
pushf
mov
pushf
idivl
call
call
add
pushl
mov
push
movb
lea
jmp
add
add
dec
notl
or
shld
shr
mov
cmc
pusha
sub
clc
test
and
pusha
lea
jp
pushf
push
pushl
pushl
popl
pusha
mov
pushl
pushf
lea
jmp
stc
call
cmp
cmp
bt
or
clc
test
xor
jmp
pushf
pusha
inc
call
rcr
ror
setg
not
lea
add
sub
btc
adc
mov
shld
setge
pushf
xor
mov
sbb
adc
dec
add
add
inc
mov
shl
seta
cmc
sub
inc
dec
stc
bts
jmp
pushf
mov
pushl
jmp
inc
pusha
push
pushf
jmp
mov
mov
mov
pushf
jmp
pushf
mov
movb
pusha
lea
jmp
jmp
sub
jmp
rdtsc
rcr
rcr
mov
aaa
pop
aam
inc
std
pop
aam
popf
lahf
setae
movsbw
pusha
mov
lahf
lahf
pusha
movw
mov
cwtl
movzbw
mov
pushl
pop
lea
mov
setbe
lea
mov
mov
lea
mov
movzbw
cwtl
mov
pop
movsbl
bswap
call
add
pushf
pushf
cwtl
cmp
stc
clc
pusha
sub
pushf
call
cmp
add
push
mov
push
pusha
lea
jmp
movzbw
inc
shrd
mov
bt
add
call
push
pushf
popl
jmp
mov
mov
mov
push
mov
lea
jmp
cmc
sub
jmp
call
pusha
bswap
movzbw
mov
pushf
push
inc
stc
mov
stc
ror
pushl
lea
jmp
xor
mov
xchg
push
test
mov
cmp
mov
clc
clc
sub
pusha
lea
jne
bt
xor
call
mov
push
movb
pushf
lea
jmp
pusha
movb
inc
push
stc
clc
stc
ror
mov
cmp
movb
push
not
cmp
add
clc
call
pushf
jmp
lea
movb
lea
jnp
pushf
push
mov
pushf
lea
jmp
cwtl
pushf
bt
jmp
movb
pusha
cmp
pushl
pushf
call
pushl
popl
mov
pushf
pushf
pushf
lea
jmp
mov
pushf
pushf
pushf
movw
lea
jmp
rcl
rol
dec
bsr
movzbl
or
sar
bts
add
btc
adc
rcl
pushf
neg
jmp
push
call
jmp
push
movb
movb
mov
call
pushf
call
mov
jmp
test
bt
sub
stc
pusha
rol
pushl
dec
movb
stc
cmp
add
pushf
stc
mov
clc
pushf
pushf
call
rcr
sub
cmc
not
rol
ror
bts
cmp
sbb
xor
test
inc
adc
bt
movzbl
bsr
movsbw
rol
mov
pushf
cmc
pushf
cmc
neg
movl
pushf
cmp
add
call
dec
rdtsc
jmp
cmc
pushf
mov
bt
jmp
mov
movl
mov
mov
lea
jmp
pushf
pusha
mov
pushf
pushf
pushf
lea
jmp
add
jmp
mov
push
mov
pushf
call
call
call
pusha
jmp
mov
mov
call
push
mov
lea
jae
push
movb
pushf
popl
pushf
lea
jmp
bsr
shrd
push
stc
rol
mov
pusha
jmp
call
push
movb
push
mov
pushf
pushf
push
lea
jmp
push
mov
pushf
push
jmp
call
push
dec
shr
inc
adc
bt
xor
not
dec
shld
call
pushf
mov
jmp
call
shld
jmp
not
seta
pusha
mov
pusha
pushf
movb
lea
jl
mov
push
mov
mov
movw
pushf
pushf
movb
lea
jmp
add
push
pushf
mov
pushl
pusha
pushl
lea
jmp
xadd
mov
cmc
bsr
mov
stc
add
call
push
mov
movw
pusha
lea
jmp
mov
call
mov
mov
clc
clc
pusha
pusha
add
pushf
movw
lea
jmp
jmp
xchg
pushl
jmp
sub
jmp
notl
add
cbtw
mov
test
cmp
jmp
pushf
popl
push
push
pushl
popl
push
push
lea
jmp
bt
mov
add
pusha
pushl
push
mov
mov
mov
mov
mov
push
lea
jmp
mov
jmp
mov
pusha
pushf
mov
mov
push
mov
mov
pushl
lea
jmp
jmp
pusha
jmp
mov
movw
mov
mov
mov
lea
jmp
mov
pushl
popl
movb
push
pushl
lea
jmp
fstps
pushf
pushl
mov
pusha
lea
jmp
pushf
push
pushf
popl
mov
push
jmp
pusha
mov
mov
shld
push
mov
pusha
pushf
call
mov
pushf
mov
pushl
pushl
lea
jmp
pushf
pusha
movb
mov
push
jmp
movsbw
push
jne
mov
push
pusha
pushf
lea
jmp
sar
not
sar
shrd
bts
bsr
add
btc
add
pusha
rol
bt
dec
movzbl
pusha
stc
cmc
mov
pushl
clc
stc
cmp
or
lea
jl
pusha
pusha
lea
je
push
xor
bt
xchg
pushl
pushf
cmp
mov
test
mov
sub
jmp
btc
shld
mov
sub
add
jmp
pusha
mov
pushl
pushf
lea
jmp
call
push
stc
push
add
pushf
pushl
movb
lea
jmp
pushf
movzbw
cmp
btc
mov
pusha
bswap
cmc
add
clc
neg
pushf
pushf
pushf
lea
jmp
push
mov
call
movsbl
lea
jmp
lahf
and
add
movzww
push
cmc
jmp
pushf
mov
pushf
movsbw
lea
mov
mov
movzbw
push
mov
not
pusha
pushf
pushf
popl
lea
pushf
mov
mov
pushf
movsbw
pushl
popl
pushf
jmp
jmp
mov
mov
pushf
call
push
cmp
add
call
btc
mov
test
jp
add
pusha
pushl
lea
jmp
xor
jmp
jmp
jmp
clc
movb
bt
sub
test
pusha
test
clc
shr
push
jmp
push
mov
movw
call
pushf
lea
jle
mov
pushf
pushf
pusha
mov
call
mov
mov
push
pushl
movb
lea
jmp
cld
call
pushf
not
mov
movsbl
mov
pop
jmp
mov
cmc
movb
bt
stc
sub
movb
pushf
lea
jmp
mov
pushf
pushf
pushf
mov
movb
mov
pushf
pushl
lea
jmp
jmp
movb
pusha
mov
bswap
mov
movsbw
mov
movsbw
jmp
call
sbb
shr
cwtd
mov
setl
mov
test
pushf
clc
pusha
not
stc
not
pushf
pushf
sub
push
cmp
push
bt
and
push
pushf
push
call
push
pushl
popl
mov
pushf
push
mov
lea
jmp
mov
pushf
mov
call
movb
pushl
pushf
popl
movb
pushl
movb
pushl
popl
movw
movb
mov
lea
jmp
pushf
mov
call
setae
jmp
jmp
call
rep
xchg
bsf
rcr
mov
rol
jmp
mov
mov
call
pushf
lea
js
push
pushf
popl
jg
pushf
mov
pushl
popl
pushf
lea
jmp
call
call
movzbw
ror
fnstsw
cmp
bt
sub
jmp
push
stc
cmp
cwtl
push
sub
mov
mov
push
inc
pushf
pushf
lea
jmp
sub
pushf
movb
call
test
test
cmc
sub
cmp
bt
clc
call
mov
push
movb
pushf
lea
jmp
cmp
pushl
clc
pushf
add
clc
pushl
popf
pushf
push
lea
jmp
bt
pusha
pushf
add
push
pushf
pushf
popl
call
mov
pushl
mov
jmp
mov
movb
movb
pushf
pushf
lea
jmp
sub
sar
xor
bswap
shr
lea
movzbl
cmp
and
rcl
mov
call
pushl
mov
lea
pushl
popl
rol
cmc
ror
rol
movl
clc
bswap
ror
mov
pushf
pushf
ror
movl
lea
jmp
call
mov
pusha
mov
pushf
pushl
push
push
lea
jmp
pushf
pushl
popl
mov
lea
jmp
cmp
movw
lea
jne
rol
push
pop
pusha
xorb
pushl
push
mov
movw
lea
jmp
push
mov
call
mov
pushf
jmp
mov
pusha
mov
pushf
pushf
popl
mov
jmp
jmp
mov
jmp
not
setbe
mov
mov
pusha
lea
pushl
pushf
push
mov
push
mov
lea
jmp
call
push
pusha
lea
mov
pusha
push
push
mov
lea
mov
jmp
sub
mov
pusha
sub
pushl
push
movb
add
call
neg
rcr
add
ror
mov
shr
adc
sub
adc
inc
mov
jmp
pushf
pushf
push
mov
jmp
stc
pushf
mov
pusha
pusha
clc
stc
add
jmp
pusha
pushf
call
movzbw
aam
sbb
lea
cmp
je
cmp
pushf
lea
ja
bt
aad
cmc
call
setno
jmp
movb
lea
jne
clc
stc
neg
xorb
call
movw
movb
inc
jmp
mov
call
call
push
add
pushf
mov
pushf
push
pushf
push
lea
jmp
push
add
call
pushf
call
call
pushf
mov
push
mov
pusha
lea
jmp
push
pushf
popl
cmc
cmc
mov
cmc
mov
pusha
pusha
lea
jge
cmc
push
pushf
bt
mov
bt
jmp
jmp
clc
call
pushf
add
call
not
call
pushf
popl
jmp
mov
mov
movb
mov
mov
pushl
ret
shl
add
mov
clc
add
movsbw
movzbw
push
inc
dec
not
or
bsf
sub
shrd
rol
inc
not
dec
sbb
bt
neg
cmp
add
cmp
bsr
add
shr
mov
movb
cmp
add
jmp
movb
mov
push
movb
lea
jmp
pushf
jmp
lea
cpuid
clc
sub
test
cmpl
call
pushf
push
pusha
lea
push
lea
jmp
xor
push
jmp
pushf
cmp
or
call
cmc
inc
rol
mov
jmp
pushf
bswap
pushf
popl
add
sets
bswap
not
push
ror
mov
sbb
shl
pushl
shld
inc
push
bsf
ror
mov
bt
sub
rcr
bts
xor
pusha
ror
movsbw
or
cmp
lea
shl
bswap
sub
not
pushf
shld
lea
lea
adc
bsr
rcl
bswap
mov
neg
add
rcl
btr
btc
mov
adc
sub
pushf
mov
movsbw
dec
movzbw
rcl
ror
jmp
fildl
pushf
lea
jmp
mov
pushf
popl
movb
pushl
popl
mov
mov
movw
movl
lea
jmp
neg
bt
pushl
popf
not
pop
pusha
mov
pushf
pushf
pushl
ret
movl
pushl
mov
pushf
movb
pushf
jmp
aad
mov
stc
bt
xchg
pushl
pushf
stc
pushf
sub
bt
movw
lea
jge
rol
call
pusha
ror
cmc
clc
push
add
test
sub
lea
jp
pushf
mov
push
mov
pusha
lea
jmp
mov
pusha
mov
push
mov
lea
jmp
mov
pushl
popl
pushf
lea
jmp
bt
lea
stc
cmc
neg
pushf
movb
pusha
dec
stc
rol
test
test
push
sub
bt
bt
jmp
mov
movb
push
lea
jmp
pusha
mov
movb
pushl
pushf
popl
mov
mov
pushf
lea
jle
popl
pusha
mov
lea
jmp
jmp
pushf
pushf
popl
push
movb
movb
pushl
popl
mov
pushl
movw
pushl
lea
jmp
pushf
movw
mov
pushf
push
push
lea
jmp
pusha
xor
jmp
mov
pushf
pushl
lea
jmp
mov
mov
jmp
push
pushf
popl
pushf
pushl
popl
push
mov
push
lea
jmp
shl
push
movb
cmc
cmc
shr
clc
or
cmp
bt
stc
cmc
xor
call
sub
stc
jmp
stc
neg
mov
cmp
call
mov
push
mov
movw
pushf
popl
pushf
movb
pushf
pushl
popl
movb
pushf
mov
lea
jmp
bsr
mov
cmp
add
call
mov
mov
lea
jmp
jmp
mov
pushf
lea
jmp
jmp
push
pushl
popl
pushf
movb
mov
lea
jmp
pusha
xor
pusha
call
pushf
popl
mov
pushl
jmp
pusha
mov
pushl
lea
jmp
add
jle
sub
clc
shr
push
pushf
mov
pusha
pushl
pushf
popl
mov
pushl
popl
pushf
pushf
pushf
pushl
lea
jmp
test
mov
bts
mov
pop
mov
bsr
call
call
pusha
not
mov
push
mov
pushf
mov
mov
movb
pushf
pushf
pushl
lea
jmp
mov
call
sar
sbb
not
mov
jae
shl
rcl
add
and
jmp
movb
pushf
popl
movb
pushl
popl
mov
movb
pushl
lea
jmp
pushf
push
mov
pushf
mov
pushf
jmp
pusha
mov
jmp
pushf
pushl
popl
movb
push
lea
jmp
not
call
neg
push
pushf
pusha
movb
lea
jmp
test
not
bt
jmp
mov
movb
pushl
call
test
mov
pushf
add
pushf
pushf
pushf
lea
jmp
mov
lea
std
push
call
movb
pushl
jmp
pushl
pushf
shl
pusha
mov
jmp
push
mov
jmp
pushf
pushf
popl
pusha
cmc
mov
cmc
mov
pushl
mov
call
mov
call
lea
cld
push
mov
mov
push
pusha
cld
pusha
cld
call
pusha
call
pusha
dec
mov
movb
add
mov
call
setle
inc
mov
bswap
dec
inc
rcr
lea
ror
cmc
mov
xor
not
shl
lea
not
sub
or
bts
movsbw
or
mov
bts
movzbw
shld
bswap
mov
btc
or
bswap
add
bsf
call
call
sub
jmp
call
mov
call
stc
clc
bt
add
mov
jmp
lea
jne
jmp
bt
and
jmp
cmp
neg
pushl
lea
jmp
jmp
jmp
mov
jmp
jmp
mov
push
mov
lea
jmp
btc
rcr
xchg
mov
clc
bsf
dec
shl
mov
call
sub
movl
call
pushf
popl
movl
pushl
popl
mov
movb
lea
jmp
pushf
pushl
popf
pushl
movb
lea
jmp
call
rol
mov
call
movb
push
pushf
popl
push
jmp
sub
inc
movsbw
shld
mov
rcl
pusha
mov
inc
pop
inc
add
lea
shrd
bsf
ror
pushf
mov
pusha
neg
btr
adc
lea
btr
not
xor
pusha
inc
movzbl
dec
dec
call
add
pusha
lea
jmp
ror
push
movb
movl
mov
lea
jmp
mov
test
clc
add
push
pusha
pushf
pushf
lea
jmp
pushf
fmull
pushf
mov
pusha
pushf
lea
jmp
pushf
mov
pushf
call
pushl
test
jmp
pushf
pushl
mov
mov
push
push
mov
pushf
popl
pusha
push
push
mov
lea
jmp
jmp
shr
inc
mov
mov
bt
bt
clc
sub
pusha
pusha
pushl
jmp
push
push
xchg
movsbw
mov
cld
cld
cld
movb
rep
bsf
clc
push
mov
sar
inc
mov
bt
pushl
popf
pushl
lea
jmp
movsbl
seto
mov
call
pusha
call
pushf
pushf
mov
pushf
pusha
call
pusha
movb
mov
jmp
pusha
jmp
pusha
push
mov
pushf
push
mov
pushf
lea
jmp
mov
pusha
pushf
push
pushl
lea
jmp
movw
mov
mov
pushf
movb
pushf
mov
movb
lea
jmp
movb
call
push
mov
push
not
jmp
mov
pushf
mov
pushl
pushf
mov
lea
jmp
add
pusha
jmp
push
pushl
cmp
pushf
call
pushf
push
pushf
popl
movl
pusha
pushl
popl
mov
mov
lea
jmp
call
push
pushf
pusha
mov
push
pushf
pushf
popl
stc
bt
mov
pusha
mov
test
jmp
fwait
push
pushf
pusha
push
lea
jmp
mov
push
bswap
mov
call
cmc
pusha
pushf
xchg
clc
jmp
pushf
sub
bt
jmp
push
mov
mov
call
pushf
pusha
jmp
mov
jmp
push
mov
push
pushf
pushl
popl
pushl
push
pushf
movb
lea
jmp
clc
sub
push
lea
jmp
pusha
mov
push
pushf
push
mov
jmp
mov
mov
push
lea
jmp
pusha
mov
pushl
mov
pusha
call
jmp
jmp
jmp
pushf
popl
movb
pushl
popl
push
movb
movb
movb
lea
jmp
mov
bt
pushf
cmc
sub
jmp
stc
call
pusha
movw
push
pushl
popl
pushf
lea
jmp
neg
or
clc
shld
lea
bt
stc
sub
pusha
pusha
lea
jmp
pusha
pusha
pushf
mov
bswap
xchg
jmp
pushf
push
push
mov
call
and
mov
jmp
pusha
or
mov
cmp
test
test
add
push
movb
lea
jmp
shl
mov
shr
btr
rol
rcl
mov
jmp
cmc
aaa
sbb
aad
mov
rol
or
pushf
mov
test
sub
clc
shl
pushl
pushf
mov
movb
pushf
popl
pushl
push
movw
pusha
pushl
popl
mov
mov
mov
pushl
lea
jmp
sub
stc
cmc
cmc
bt
ror
pushf
pusha
xor
pushl
push
bt
add
cmc
stc
mov
clc
pushf
pushf
sub
push
mov
jmp
ror
movzbw
and
stc
mov
test
sub
call
pushl
popl
mov
lea
jmp
jmp
jmp
pushf
mov
mov
push
push
movw
lea
jmp
pushf
mov
pushl
fcomps
push
pushf
pushf
lea
jmp
pushf
pusha
pushf
mov
call
mov
movb
cmc
push
and
test
bt
test
cmp
jmp
sub
cmc
shl
pusha
pushf
mov
push
call
pushl
dec
pusha
movl
pushf
xchg
mov
call
pushf
jmp
lea
jne
call
xor
mov
adc
sub
cmp
movzbw
sub
dec
cmp
shl
neg
pushf
not
movsbw
dec
stc
sbb
pushf
sub
bswap
bswap
xor
inc
mov
cmc
jmp
mov
pusha
lea
jmp
pushf
popl
pushf
jmp
lea
jne
pushf
btr
not
movzbw
xorb
not
pusha
movb
mov
pushf
pushf
pushf
movw
lea
jmp
mov
inc
cmc
jmp
call
shrd
bsf
sbb
bsr
mov
call
jmp
jmp
ror
pushf
add
pusha
movb
clc
sub
call
call
push
cmp
shl
call
call
jmp
pushf
jmp
push
pushl
popl
push
pushf
pushf
push
lea
jmp
pusha
jmp
add
pusha
neg
mov
mov
mov
lea
jmp
inc
mov
clc
ror
movl
cmp
cmp
sub
cmc
cmp
cmc
sub
jmp
neg
bt
test
cmp
clc
sub
movb
jmp
push
lea
ror
call
mov
call
call
pushf
add
pusha
mov
pusha
pushl
mov
pushf
push
mov
mov
lea
jmp
sub
shl
mov
cmp
clc
jmp
call
pushf
mov
cmc
bt
call
pop
bswap
bswap
mov
std
jmp
call
add
jmp
mov
pushf
pushf
jmp
mov
mov
pushf
mov
jmp
call
pushf
mov
call
cmp
mov
xor
pushf
call
add
cmc
mov
neg
cmc
bswap
sub
call
mov
call
mov
push
lea
jmp
jmp
pushl
popl
movb
lea
jmp
mov
pushl
lea
jmp
movb
call
call
add
pushf
pusha
pusha
push
lea
jmp
and
mov
not
mov
add
xor
dec
jmp
jmp
pushf
stc
stc
ror
cmc
sub
call
stc
add
jmp
pushf
popl
pushf
pushl
popl
pushf
lea
jmp
call
mov
push
lea
jmp
pushf
mov
mov
push
pusha
call
jmp
pusha
btc
bt
rcl
mov
cmp
shl
mov
test
pusha
call
cmp
sub
pusha
shl
movb
pusha
movb
push
mov
call
pusha
jmp
jg
pushf
pusha
mov
call
test
sub
clc
movl
stc
mov
call
call
call
sar
clc
or
notl
pushf
shl
mov
test
sub
test
stc
cmp
and
call
dec
call
add
pushl
call
bts
aad
mov
rcr
xor
mov
mov
clc
cmc
bt
add
call
cmc
neg
mov
rol
neg
stc
mov
push
add
pushf
mov
movb
movb
pushl
lea
jmp
pushl
push
mov
movb
pushf
movb
mov
lea
jmp
pushf
pushf
popl
push
pushf
lea
jmp
mov
mov
movw
call
pushf
clc
sub
pushf
add
pusha
pushf
pushf
lea
jb
pushf
pushf
jmp
cmc
xor
adc
add
or
sbb
bswap
adc
dec
shr
sar
neg
bt
mov
stc
call
call
movsbw
pushf
fnstsw
push
cmc
movb
cmc
sub
push
pusha
mov
mov
pushf
pushl
lea
jmp
cmp
add
pushf
movb
lea
jmp
btc
adc
rdtsc
jmp
mov
pushl
pushf
call
pusha
pushf
popl
pusha
push
pushl
popl
mov
pushf
pushf
movw
lea
jmp
cmc
mov
not
rcr
adc
mov
jmp
cmp
pushf
bt
call
pusha
pushf
pushf
fmull
pushf
push
pushl
lea
jmp
movw
mov
pushf
pushl
pushf
jmp
jmp
pusha
jmp
push
cmc
not
cmc
not
btr
ror
pusha
lea
pop
inc
pushl
sub
jno
cmc
cmc
and
jmp
bt
stc
sub
pusha
shl
jmp
call
pushf
lea
jl
pushf
mov
push
movl
mov
mov
lea
jmp
movzbl
stc
rcl
ror
test
jmp
jmp
std
pop
std
cmc
pusha
pushl
popf
pusha
push
lea
jmp
push
mov
pushf
jmp
jmp
add
bsf
mov
cmc
and
pop
daa
pusha
bswap
adc
mov
xadd
clc
movsbw
mov
jmp
movb
jmp
mov
movw
xchg
not
rcl
pushf
rcr
pushl
popl
pusha
movl
rol
mov
stc
call
pushf
mov
mov
movb
mov
mov
mov
lea
jmp
pushf
pushf
popl
jmp
push
push
jmp
jmp
jmp
pushf
popl
call
mov
pushf
jmp
pushf
mov
movw
pushl
add
pusha
lea
jmp
jmp
call
mov
pusha
push
pushf
lea
jmp
pusha
jmp
cld
pusha
pushf
cld
movl
pushl
push
push
rep
cld
sar
shr
mov
movsbw
stc
bsf
bswap
mov
call
ror
cmc
sbb
mov
test
bt
pusha
pusha
add
pushf
push
pushf
pushf
lea
jmp
pushf
pushl
mov
push
pushl
pusha
lea
jmp
mov
pusha
lea
jmp
call
pushf
pushl
popl
mov
mov
lea
jmp
bt
clc
neg
pushf
push
jmp
cmc
push
sub
push
pushf
pushf
lea
jmp
sub
dec
cmp
movzbl
call
pushf
pusha
push
pushl
popl
movb
lea
jmp
mov
push
movb
lea
jmp
lea
jne
shrd
or
test
mov
stc
clc
push
bt
and
call
aam
pushf
mov
pushf
lea
jge
add
call
call
push
pusha
pushf
mov
pushf
pushf
push
mov
lea
jmp
pushf
pushf
pushf
popl
jmp
mov
pushf
mov
lea
jmp
dec
xchg
clc
test
movzbw
mov
add
cmc
pushl
popl
cmp
movl
and
rol
cmp
not
mov
bsr
bswap
adc
add
shld
bswap
push
neg
cmp
bswap
sar
bsr
lea
bt
pushf
sub
push
pusha
pushl
pushl
lea
jmp
inc
bt
clc
ror
cmc
bt
test
not
add
jnp
stc
pusha
cmp
add
call
jmp
pop
jmp
call
pushl
mov
mov
pushf
lea
jmp
lea
push
jmp
cmp
test
add
pusha
push
mov
pushf
pushf
call
sub
push
mov
movb
call
mov
movb
jmp
inc
movb
bt
ror
test
cmc
jmp
sub
call
jmp
call
pushf
mov
push
pushf
mov
pusha
mov
mov
pushf
mov
push
pusha
call
mov
call
push
call
dec
mov
jmp
mov
not
pop
not
inc
mov
movsbl
call
lea
jne
call
pushf
popl
movl
pushl
popl
pusha
lea
jmp
call
movb
call
ror
setne
mov
cmc
clc
jmp
mov
push
lea
jmp
stc
mov
pushf
jmp
movb
lea
je
push
call
jmp
pusha
mov
pusha
mov
pushl
mov
movb
pushf
pushf
push
mov
push
movb
mov
lea
jmp
shl
setnp
movsbw
mov
pusha
sub
jne
test
stc
add
call
xor
test
cmp
push
cmp
cbtw
stc
cwtl
bt
stc
test
test
sub
jmp
mov
add
push
pusha
pushf
lea
jmp
jmp
cmc
add
lea
jnp
pusha
pushf
mov
pushl
pushl
pushl
pushl
lea
jmp
cmc
push
shl
rcl
movsbw
push
cmp
inc
add
push
sar
bsr
neg
and
pushl
inc
push
bswap
mov
push
bswap
push
stc
mov
jmp
jmp
call
mov
cmp
add
dec
add
lea
pusha
movb
sub
inc
mov
pushf
adc
xor
pop
btr
lea
jmp
bswap
test
jmp
test
movzbl
clc
pushl
cmc
mov
call
pushf
call
pusha
call
jmp
jmp
pushf
mov
jmp
mov
pusha
movw
jmp
pushl
push
jmp
call
jmp
mov
jmp
jmp
call
call
inc
mov
movzbl
cmp
test
jmp
push
mov
pushf
pushf
pushf
popl
pushl
pushf
pusha
jmp
pushl
popl
mov
lea
jmp
call
cmpl
mov
lea
jo
pushf
movb
mov
pushl
push
call
pusha
pushf
mov
push
movb
push
pushl
lea
jne
bsr
shr
mov
cmp
clc
and
pushf
bt
test
bt
cmp
pusha
call
pushl
popl
pushf
movb
movb
lea
jmp
pushf
movw
inc
jmp
movl
jmp
pusha
inc
mov
stc
clc
sub
push
pushf
mov
movw
movl
pushl
push
lea
jmp
call
movb
mov
pusha
lea
jmp
stc
sub
stc
sub
call
push
add
jmp
mov
pushf
mov
movl
lea
jmp
clc
sub
jmp
mov
jmp
mov
jmp
pusha
jmp
movzbw
movzbw
not
mov
call
push
mov
pushf
call
fcomps
mov
pushf
pushf
lea
jmp
btr
bsr
ror
jge
mov
bt
add
push
push
lea
jmp
mov
mov
pushl
mov
pushf
lea
movb
mov
movw
lea
jmp
aad
fnstsw
test
call
mov
call
movl
lea
jmp
pusha
pushl
popl
pushf
pushf
lea
jmp
jmp
push
movb
mov
jmp
pusha
lea
je
cmp
sub
bt
test
pusha
cmp
xchg
call
mov
jmp
mov
btr
clc
mov
bt
add
cmc
ror
pusha
xor
stc
add
jmp
xor
pushf
jmp
call
pusha
call
push
pushf
popl
movb
push
pushl
popl
mov
mov
movw
lea
jmp
rol
bswap
shr
jmp
daa
inc
das
mov
rcl
lea
mov
cmp
mov
pushf
pusha
test
add
pusha
pushf
clc
shrd
pushf
jmp
ror
cmp
call
push
neg
stc
sub
test
lea
clc
neg
call
pushl
setp
mov
movb
pushf
lea
jmp
clc
ror
pushf
mov
mov
lea
jmp
cmp
cmp
movzbl
clc
stc
jmp
mov
mov
push
pusha
mov
call
pushf
mov
mov
lea
jmp
pusha
push
pusha
call
pushf
popl
pusha
call
mov
mov
pusha
pushf
push
lea
jmp
mov
not
pusha
movzbl
pop
dec
clc
movzbw
mov
lea
xor
rcl
and
bt
pushf
bswap
cmp
mov
pusha
add
lea
jbe
mov
pusha
lea
jmp
mov
mov
movl
call
ror
movb
movl
lea
jmp
movb
xchg
bt
mov
cmp
btr
cmp
movsbw
mov
push
bswap
pusha
movsbw
pushl
popl
pushf
movl
bsf
sub
jbe
mov
cmp
pusha
bswap
test
add
mov
neg
pushf
lea
jmp
ja
neg
push
pusha
pusha
add
bt
cmc
push
cwtl
test
stc
pushl
sub
jmp
mov
push
pushl
ret
movb
mov
push
pushl
lea
jmp
push
mov
pushl
push
movb
pushl
lea
jmp
pushl
mov
pushf
pushf
mov
push
push
mov
call
jmp
shr
jmp
pushf
popl
mov
jmp
test
mov
neg
clc
cmp
sub
cmp
movl
pusha
clc
sub
jmp
ror
pushf
lea
jmp
clc
test
sub
call
pusha
mov
mov
pushl
call
jmp
ror
stc
xor
pushf
push
pushf
pushf
mov
pushl
call
movw
mov
call
jmp
jmp
call
btr
lea
inc
mov
bt
shl
inc
add
call
pushf
pusha
pushl
popl
pushf
lea
jmp
clc
cmp
cmp
pushf
add
mov
pusha
ror
pushl
bt
xor
bt
mov
call
mov
pusha
pushf
popl
call
pushl
pushl
mov
mov
pushf
mov
mov
mov
lea
jmp
push
not
pushf
mov
jmp
pushf
inc
test
sub
jne
pusha
clc
xchg
call
mov
mov
bswap
bswap
mov
pop
push
jmp
mov
sets
mov
pushf
call
pushf
bswap
mov
push
mov
pusha
call
xor
bt
shl
mov
bt
stc
btc
ror
mov
push
add
pushf
jmp
pusha
fildl
pusha
lea
jmp
jmp
pushl
mov
push
call
aam
sbb
bsr
xor
mov
cmp
bswap
pushf
sub
mov
mov
pusha
inc
pushl
cmc
bt
jmp
xchg
not
lea
bswap
cld
mov
std
cld
cld
push
rep
sar
test
not
rol
mov
xor
rol
mov
std
stc
movb
pushl
popf
pushf
lea
jmp
mov
mov
bswap
pop
movsbw
movzbl
xchg
not
lea
movsbw
mov
movzbw
pushf
popl
mov
pushl
mov
xchg
rol
movzbl
mov
bts
movb
not
lea
jp
push
bt
bswap
push
xchg
pushl
btr
pusha
bts
movw
movl
mov
mov
mov
lea
rol
shr
shld
neg
dec
inc
not
inc
btc
bt
shl
shrd
lea
bswap
sub
movsbl
cmc
or
mov
or
sete
push
call
push
mov
jmp
jmp
shrd
rcl
or
movsbw
rdtsc
cmp
cmc
sub
pushf
jmp
neg
pusha
jmp
mov
mov
push
pushl
ret
clc
push
sub
bt
shr
call
mov
movb
mov
push
pushf
lea
jmp
pushf
lea
jns
popl
pusha
lea
jmp
jmp
pushl
pusha
mov
mov
pushf
push
lea
jmp
pusha
mov
pushf
pushl
movb
lea
jmp
push
mov
pusha
call
call
pushl
popl
push
lea
jmp
bt
rcr
rol
mov
clc
pushf
call
adc
pushf
mov
cmc
mov
bt
test
add
pusha
pusha
call
pushf
popl
jmp
mov
test
mov
call
push
call
pushf
lea
setne
mov
pusha
pushl
push
pushf
lea
cpuid
call
dec
cmp
stc
bt
call
jmp
mov
movw
push
lea
jmp
pushf
popl
call
pushl
mov
call
bts
pusha
xor
mov
adc
mov
stc
pusha
add
pushf
push
pushf
mov
pushf
lea
jmp
push
mov
jmp
pusha
mov
pushf
popl
stc
jmp
movb
push
mov
push
push
jmp
bsr
pushf
and
mov
bt
stc
std
pushl
popf
pushf
lea
jmp
call
mov
push
mov
pushf
movb
mov
mov
pushl
lea
jmp
movsbw
pusha
mov
call
pusha
mov
pushf
pushl
ret
xadd
sub
cmc
sar
mov
call
push
pushf
movzbw
movzbw
mov
call
sub
push
push
jmp
inc
mov
stc
jmp
jmp
mov
cmp
cmc
jmp
pushf
popl
jmp
pop
movsbw
pushf
bswap
bswap
push
lea
pusha
bswap
movsbw
pushl
popl
jmp
movb
pushl
mov
mov
pushf
lea
push
call
and
stc
shld
rcr
mov
jmp
push
movw
movw
mov
movw
movb
push
push
lea
jmp
push
push
mov
pushf
lea
jmp
cld
cld
call
bswap
pusha
mov
pusha
call
mov
add
pushf
pushl
pushf
popl
call
not
bswap
pushl
popl
lea
mov
lea
setns
movsbw
push
call
mov
pushf
mov
pushl
jmp
aas
adc
mov
pusha
bt
mov
stc
dec
sub
sar
mov
test
add
test
pusha
movb
jmp
add
pusha
push
pushf
pushl
lea
jmp
jmp
mov
shrd
xor
shr
bsr
mov
stc
add
jo
pusha
add
call
mov
pushf
pushf
mov
movw
jmp
or
rol
sar
mov
jmp
pushl
mov
pushf
movb
mov
push
lea
jmp
cmc
cmc
mov
pusha
call
sar
stc
daa
jmp
mov
pushl
push
lea
jmp
mov
pushl
pushf
jmp
call
sub
bt
add
push
movb
jmp
lea
jb
popl
push
pusha
lea
jmp
lahf
mov
mov
push
pushf
pusha
mov
call
add
push
movl
mov
pusha
pushf
lea
jmp
call
lea
push
mov
pushl
mov
mov
push
jmp
bt
pushf
add
cmc
cmc
not
pushl
neg
test
cmc
call
cmc
bswap
pushf
call
push
pushf
mov
mov
cmp
pushf
push
test
mov
bt
bt
clc
call
mov
pusha
pushf
popl
call
push
pushf
xchg
pop
bswap
push
movsbw
not
jmp
sub
stc
call
inc
mov
clc
adc
cmc
mov
clc
call
pushf
popl
pushl
pushl
popl
pushl
pusha
pushf
movb
lea
jmp
test
mov
mov
test
test
jmp
or
adc
mov
clc
test
add
push
push
pushf
lea
jmp
push
push
mov
mov
jmp
mov
shld
shl
mov
jmp
mov
rcl
bts
xchg
bsr
lea
bt
mov
sub
jg
and
lea
shl
pushl
movzbw
not
push
clc
mov
rcr
rcr
add
adc
add
bswap
movsbl
neg
rcr
rcl
bt
mov
cmc
bt
push
bt
sub
pushf
pusha
mov
lea
jmp
mov
pushf
mov
push
pushf
call
jmp
mov
pushf
popl
movb
mov
mov
lea
jmp
push
pushl
popl
pushf
mov
lea
jmp
mov
push
pusha
pusha
mov
movl
push
push
lea
jmp
test
mov
stc
neg
push
mov
pusha
pushl
lea
jmp
inc
pusha
call
pushf
popl
push
pushl
popl
mov
mov
lea
jmp
bt
add
cmp
call
cmp
btr
lea
shl
mov
test
add
push
lea
jmp
mov
lea
jns
pushf
pushf
movw
mov
movb
pusha
lea
jmp
jmp
test
cmc
cwtl
test
movb
stc
sub
jmp
mov
pusha
lea
jmp
xor
movzbw
movzww
cmc
test
stc
xchg
pushf
add
pusha
push
push
dec
test
stc
jmp
pusha
pusha
cmc
add
call
mov
mov
pushf
pushl
popl
pushf
movl
mov
lea
jmp
mov
pushf
push
pushf
push
mov
mov
mov
pushf
lea
jmp
mov
jmp
mov
pushf
bt
pusha
jmp
mov
jmp
pushl
pushl
popl
pushf
pushf
pusha
pushf
lea
jmp
cmp
xor
test
sub
stc
pushl
rol
push
bt
test
sub
push
jmp
add
add
bswap
xor
add
test
sar
neg
rcr
rcl
shrd
pop
mov
pusha
jmp
and
rol
push
sub
bswap
mov
movzbw
pushf
bswap
push
push
pop
movzbw
jmp
mov
stc
clc
jmp
pusha
mov
mov
pushf
popl
clc
pushl
pushf
mov
test
call
pushf
popl
mov
mov
pushl
popl
mov
lea
jmp
aad
cmp
btr
mov
movzbl
mov
bt
sub
shl
mov
cmc
cmc
bt
cmp
add
call
push
jmp
mov
pushf
pusha
pusha
jmp
pushf
lea
clc
test
jmp
lea
call
bt
and
clc
shl
mov
test
sub
call
lea
cpuid
jmp
dec
pusha
push
mov
pusha
jmp
and
rcl
mov
notl
lahf
jmp
mov
call
stc
neg
pusha
push
lea
jmp
jmp
mov
pushl
pushf
movw
mov
lea
jmp
clc
cmp
add
pusha
pusha
pushf
mov
movb
lea
jmp
add
pushf
lea
jmp
call
sub
bt
stc
cmpl
jmp
bts
ror
sub
and
add
mov
test
add
call
mov
push
call
bt
stc
pushf
shr
pushf
or
bt
bt
xor
call
pushl
pushf
pushl
popl
pushf
pushf
lea
jmp
call
popl
pushf
push
pushf
lea
jmp
bt
bt
sub
clc
cmpl
call
stc
sub
call
pusha
movb
pushf
mov
jmp
pushf
jmp
jle
mov
stc
pusha
jmp
jmp
jmp
mov
mov
jmp
movb
fmull
movw
push
lea
jmp
add
call
pushf
mov
pusha
pushf
mov
call
xchg
bsf
bts
sbb
bsf
mov
dec
movsbw
ror
mov
sub
shl
call
push
mov
lea
jno
fwait
push
lea
jmp
mov
pusha
movl
pushf
lea
jmp
shl
mov
push
stc
add
movw
movw
lea
jmp
mov
bt
mov
bt
pusha
call
jmp
mov
pushl
push
lea
jmp
call
mov
push
rol
mov
bt
push
pusha
clc
not
bt
not
clc
pushf
cmc
and
pushf
jmp
jmp
jmp
jmp
mov
setg
mov
push
pushl
jmp
pushf
sub
jmp
rcl
shr
lahf
das
lea
jmp
mov
mov
jmp
not
movl
movsbw
pushf
mov
call
movsbw
mov
cmc
call
pusha
jmp
jmp
call
movl
mov
pushf
movb
lea
jmp
push
aas
bsf
mov
cmc
bswap
clc
clc
cmc
xor
pusha
push
sub
test
neg
clc
clc
xor
cmp
bt
xor
cmp
mov
sub
push
pushf
jmp
lea
push
call
call
mov
mov
push
pushl
jmp
jmp
mov
movb
pushf
lea
jmp
push
jmp
pushl
mov
jmp
dec
cmp
clc
mov
push
add
call
pushf
popl
pushf
pushf
lea
jmp
mov
jmp
mov
pushf
pusha
pushl
call
stc
pushl
jmp
mov
mov
mov
pushl
jmp
mov
push
pushf
mov
movw
mov
push
pushf
popl
pushl
pushf
pushf
mov
lea
jmp
pushf
popl
call
jmp
aam
aad
mov
inc
add
setg
jo
mov
cmp
call
call
pushl
popl
pusha
pushl
pushl
lea
jmp
decl
push
lea
jne
jmp
call
pushf
mov
movb
lea
jmp
call
movb
mov
jmp
push
pushf
popl
jmp
movzbw
bswap
shld
sub
pusha
bt
btc
ror
movsbw
xor
neg
setbe
add
bsf
rol
and
test
mov
mov
bt
stc
bt
add
call
jmp
mov
pushf
pushf
lea
jmp
pushf
popl
jmp
ror
call
call
push
mov
jmp
shl
test
neg
mov
sub
mov
test
push
push
cmp
add
call
shr
mov
call
pushf
mov
pushf
pusha
pushf
call
pushf
call
pusha
mov
movb
movw
pushf
mov
mov
mov
movb
pushl
pushf
pushf
lea
jmp
mov
pushf
lea
jmp
call
pusha
mov
pusha
mov
jmp
lea
jne
rcr
rcr
test
xorb
pushf
jmp
mov
test
cmc
mov
cmc
cmp
test
bt
xchg
shrd
cmc
adc
stc
mov
inc
mov
xchg
pushf
not
neg
mov
and
call
call
pusha
aad
mov
cmp
clc
jmp
pushf
mov
mov
pusha
movb
lea
jmp
push
sub
push
jmp
push
pusha
mov
mov
call
mov
mov
jmp
pushf
mov
pushf
pusha
pusha
mov
call
sarl
jmp
out
leave
cmpsb
jmp
out
leave
cmpsb
jmp
out
leave
cmpsb
jmp
out
leave
cmpsb
jmp
out
xor
dec
ljmp
dec
ljmp
dec
ljmp
mov
call
out
add
jmp
out
cli
push
jmp
out
mov
stos
call
out
mov
ljmp
sub
out
int3
insl
ljmp
sub
out
dec
stos
call
out
or
out
lahf
push
ljmp
and
out
in
pop
ljmp
leave
call
out
sarl
jmp
out
call
out
push
sbb
ljmp
pop
ljmp
cltd
call
out
sub
sbb
out
test
call
out
add
in
call
out
mov
leave
call
out
jbe
jmp
out
add
jmp
out
mov
call
out
jge
call
out
xor
leave
call
out
xchg
out
call
out
inc
xchg
jmp
out
mov
mov
call
out
out
or
out
push
loope
out
push
call
out
test
jmp
out
out
stos
call
out
dec
and
out
pop
push
call
out
pop
call
call
out
jge
call
out
push
repz
out
dec
stos
call
out
push
repz
out
sti
bnd
out
adc
out
loope
jmp
out
test
jmp
out
and
ljmp
sub
call
out
or
call
out
sub
ljmp
pop
ljmp
and
out
popf
iret
call
out
leave
cmpsb
jmp
out
leave
cmpsb
jmp
out
leave
cmpsb
jmp
out
leave
cmpsb
jmp
out
xor
dec
ljmp
dec
ljmp
dec
ljmp
dec
ljmp
stos
call
out
out
jmp
out
fucomip
out
stos
insl
jmp
out
int3
insl
ljmp
dec
jmp
out
call
out
mov
call
out
jg
call
out
jge
call
out
in
pop
ljmp
inc
jmp
out
mov
jmp
out
and
call
out
cli
push
jmp
out
xor
xor
out
mov
ljmp
iret
call
out
sti
bnd
out
mov
jmp
out
mov
pop
ljmp
call
jmp
out
xor
xor
out
fiaddl
out
imulb
out
cwtl
dec
ljmp
cltd
call
out
mov
ljmp
bnd
out
loope
jmp
out
and
jmp
out
mov
jmp
out
test
call
out
cltd
pop
ljmp
cmp
out
pop
push
jmp
out
sub
jmp
out
loopne
call
out
shl
jmp
out
mov
ljmp
fucomip
out
test
jmp
out
mov
jmp
out
imulb
out
cltd
pop
ljmp
pop
jmp
out
add
jmp
out
add
call
jmp
out
call
out
sti
bnd
out
cli
push
jmp
out
loope
jmp
out
mov
ljmp
sbb
out
enter
push
add
and
stc
xchg
sar
sbb
not
push
mov
test
mov
xor
pushl
popl
movsbw
stc
jmp
cmc
not
jmp
jmp
pushl
jmp
pushl
popl
push
mov
push
lea
jmp
mov
movzbl
movb
mov
pushf
call
mov
pushf
pushf
popl
push
pushl
pushl
popl
pushf
pushf
pushf
pushf
lea
jmp
mov
cmp
clc
cmc
pushf
mov
jmp
lea
mov
pusha
inc
lea
ja
add
pusha
push
pusha
mov
push
pushf
pushl
pushl
ret
jmp
cltd
rdtsc
jmp
xchg
bswap
push
bswap
push
bswap
not
pusha
movzbl
mov
movsbw
pushf
popl
bswap
lea
ja
push
mov
bswap
movzbw
lea
push
not
pushl
movzbw
push
bswap
not
mov
jmp
mov
jmp
movsbw
mov
pushl
jmp
sub
stc
cmc
call
push
xor
call
not
push
add
clc
jmp
pushf
mov
pushf
pushf
mov
call
mov
jmp
shr
movzbl
bt
sub
clc
cmp
pusha
pusha
xor
stc
clc
pushf
rol
push
pushf
jmp
jmp
cmc
sub
jmp
pusha
pusha
pushf
popl
push
movb
pushf
movw
pushl
popl
pushf
movb
lea
jmp
pusha
push
mov
call
mov
pushl
movl
movb
mov
pushl
ret
call
aas
sub
mov
inc
not
rol
mov
call
mov
pusha
movl
call
mov
sub
cmc
sub
stc
test
cwtl
cmp
cmc
sub
pusha
jmp
pushf
popl
stc
pushl
mov
bt
mov
pushf
jmp
mov
pusha
jmp
push
mov
mov
call
shl
call
cmc
bts
mov
cmc
jmp
jmp
movl
call
add
clc
push
cmc
call
jmp
pushf
popl
push
pushf
pushl
popl
push
pushf
pushl
lea
jmp
push
pusha
pushf
popl
push
jmp
call
movb
mov
jmp
mov
movb
mov
jmp
xchg
clc
mov
call
mov
mov
stc
push
sbb
push
xor
cmc
rol
push
inc
movzbw
clc
pushl
shl
jmp
jmp
call
pushf
xadd
xadd
rcr
push
sar
rcr
xor
push
bswap
ror
pushl
btr
clc
push
lea
bts
mov
inc
xor
jmp
sub
pusha
pusha
push
pushf
mov
pushf
push
lea
jmp
sub
pusha
lea
jmp
pushf
movw
mov
push
pushf
pushf
pushl
ret
movsbl
mov
jmp
jmp
mov
pusha
pushf
mov
mov
pushl
mov
call
jmp
test
not
mov
movw
sub
stc
bt
clc
ror
call
mov
pushl
lea
jmp
push
bt
push
pushf
mov
mov
bt
xchg
pusha
pushf
pushl
popl
bt
movl
cmc
bswap
movzbw
bt
mov
pusha
jmp
jmp
bsf
movzbl
mov
mov
cmp
clc
bsf
mov
pusha
bt
push
cmp
add
pushf
mov
pushf
pushl
mov
push
lea
jmp
mov
pushf
popl
pusha
push
pushl
pushl
popl
pushf
pushf
pushl
lea
jmp
mov
pushf
pushf
pushf
lea
jmp
mov
mov
mov
movw
push
pushf
movb
lea
jmp
push
lea
jns
jmp
sub
sub
js
cmc
clc
clc
shr
pushf
mov
push
pusha
jmp
dec
test
movzbl
pusha
call
mov
jmp
bsf
pushf
lea
cmc
test
pusha
cmp
jmp
lea
jno
mov
pushf
pushl
cld
jmp
pusha
pushf
popl
pusha
movw
push
stc
mov
cmc
jmp
mov
mov
movl
pushf
lea
jmp
mov
pushf
call
mov
pushl
mov
call
movzbl
clc
bsr
mov
adc
btc
or
rol
mov
test
push
test
add
pusha
pushf
pushf
mov
pushf
movw
movb
lea
jmp
mov
bt
movb
mov
pusha
call
mov
stc
bt
clc
add
pusha
pushl
mov
pushf
lea
jmp
ror
mov
pushf
push
lea
jmp
call
shld
ror
call
pusha
add
lea
jle
pusha
inc
cmc
ror
test
stc
movb
not
pusha
add
jmp
call
jmp
pushf
pushl
mov
movb
lea
jmp
pushf
mov
pusha
lea
jbe
push
movb
mov
pushf
pusha
lea
jmp
rcr
bswap
not
btr
ror
mov
not
lea
dec
inc
shl
and
stc
ror
mov
stc
jmp
divl
pusha
pushf
mov
movw
movw
mov
call
test
stc
cltd
mov
dec
pop
pushf
mov
daa
das
mov
bt
shr
not
add
mov
shrd
sbb
lea
pushf
mov
xadd
setbe
mov
and
and
movb
mov
clc
mov
dec
ror
btc
pushl
popf
pushf
movsbw
lea
call
pushl
pushl
pushl
popl
pushf
lea
jmp
call
mov
call
mov
lea
jne
rep
xchg
pop
movzbw
jmp
mov
pushf
mov
bsr
and
mov
push
cmp
ror
sar
mov
pushf
xor
test
ror
pushl
popl
shrd
bsr
pop
bt
movl
rol
or
mov
bt
clc
test
bswap
push
cmc
pushf
add
pushf
stc
jmp
call
pushf
popl
bswap
mov
not
pushl
popl
mov
mov
bswap
call
pushl
pushf
popl
movl
pushf
pushl
lea
jmp
call
add
push
call
pushf
mov
jmp
shld
movb
pushf
call
call
mov
mov
movw
mov
lea
jp
pushf
pusha
pushl
pushf
mov
pusha
jmp
neg
setp
mov
cmc
mov
jmp
bt
add
stc
ror
ror
bswap
adc
bts
xor
ror
neg
pushf
rcl
shrd
lea
test
test
bt
push
sub
pusha
pushf
push
lea
jmp
call
adc
aas
mov
rcl
cmc
mov
stc
pushf
pushf
sub
clc
shl
pushf
pushf
mov
jmp
add
pusha
cmc
pushl
popf
push
lea
jmp
push
fwait
mov
lea
jmp
pushf
mov
push
call
lea
jne
push
pushf
mov
push
pusha
pushf
lea
jmp
call
neg
xor
mov
call
mov
call
btc
rol
mov
btc
push
and
mov
pusha
pushf
add
jmp
mov
call
clc
sub
jno
stc
add
push
mov
pusha
mov
mov
lea
jmp
pushl
std
lea
std
pushf
xchg
jmp
push
jmp
mov
push
pushf
lea
jmp
pushf
jmp
mov
call
test
stc
clc
add
push
pushf
lea
jmp
pushf
popl
pushl
movb
pushl
lea
jmp
pusha
jmp
dec
mov
jmp
push
jmp
fcompl
pusha
pusha
lea
jmp
movl
mov
pushf
lea
jl
pusha
pushf
popl
pushl
pushl
popl
pushf
pushl
mov
pushf
lea
jmp
pusha
pushf
mov
pushf
movl
push
mov
lea
jmp
pushf
mov
pushf
popl
pushf
lea
jmp
mov
jmp
pushf
mov
push
pusha
jmp
push
mov
movw
push
push
mov
lea
jmp
push
neg
lea
jno
pushf
pusha
pusha
rol
bt
cmc
bt
cmc
xor
jmp
ror
clc
bt
call
cmc
movsbl
adc
sbb
mov
call
push
mov
sub
neg
add
pushl
pusha
mov
call
stc
bswap
shld
call
call
push
neg
mov
bt
pushf
bt
add
clc
clc
cmc
sub
stc
pushf
clc
pusha
bswap
bt
add
jmp
bsr
xadd
bts
xor
setge
add
je
mov
or
sub
add
shld
cmp
bts
mov
shld
test
mov
and
shl
call
lea
mov
jmp
jmp
neg
stc
sub
clc
neg
mov
pushf
sub
stc
pushf
jmp
neg
mov
inc
mov
bt
add
pushf
push
pusha
mov
call
mov
and
movsbw
mov
cmp
add
push
pushf
lea
jmp
pusha
call
mov
mov
pushl
call
cmc
test
push
sub
mov
call
lea
je
stc
cmp
cmp
sub
pushf
pushf
xchg
jmp
push
pusha
movw
mov
mov
mov
mov
movb
mov
mov
push
mov
pushf
jmp
mov
pushf
call
movzbw
mov
ror
neg
pop
bsf
pop
shl
call
pusha
pushl
popl
pushf
pushf
lea
jmp
mov
mov
pushl
movw
lea
jmp
sub
movb
pusha
jmp
pushl
popl
lea
jl
push
pop
pushf
movl
call
lea
jne
lea
neg
bsf
mov
push
cmp
and
clc
stc
cmp
push
lea
jne
shrd
cmc
xorb
call
call
decl
lea
jo
pusha
pushf
push
lea
jne
jmp
pusha
pushf
popl
pushf
call
pushf
pusha
jmp
pushf
pushf
mov
push
mov
pushf
mov
pushl
popl
mov
movw
pushl
mov
lea
jmp
push
bswap
test
not
mov
call
call
shl
aad
rcl
bt
fnstsw
bt
cmp
stc
pushf
sub
pusha
pushf
jmp
cwtl
mov
mov
call
jmp
pusha
mov
mov
mov
pusha
mov
push
pushl
pushf
mov
lea
jmp
fmull
pushf
pusha
lea
jmp
pushf
jmp
push
fmull
pushf
movb
lea
jmp
jmp
call
cltd
mov
rdtsc
movzbl
mov
setle
movsbw
lahf
call
call
pushl
popl
pushl
pushf
pushl
push
lea
jmp
sbb
cmp
setle
mov
pusha
clc
add
cmc
jmp
inc
mov
mov
mov
bt
pop
aam
test
pop
lea
bsf
clc
pop
lea
ror
shrd
pop
rol
rcl
stc
popf
movzbw
pop
call
movl
pushf
pusha
movzbw
jmp
pushf
pushl
pushf
popl
movb
pushf
jmp
pusha
pushf
movb
mov
mov
push
mov
pushf
jmp
movsbw
movzbw
pop
mov
pushf
pushf
std
cld
pushl
pushf
pushl
rep
shl
pushl
shl
mov
bswap
bsf
mov
pushf
pushl
popf
movl
lea
jmp
mov
movw
pushf
push
lea
jmp
call
pushl
pushl
popl
movb
lea
jmp
add
pusha
push
jmp
mov
clc
push
mov
push
mov
call
pusha
push
mov
mov
pusha
pushf
popl
push
jmp
pushf
popl
jmp
xor
setle
notl
test
aas
movsbw
mov
call
clc
sub
jle
push
test
call
push
mov
mov
pusha
pusha
pushl
lea
push
push
call
cmc
add
jmp
rcl
sar
add
dec
dec
shld
btr
not
rol
xor
shl
sub
bts
pushf
btr
rcl
rol
bsr
btr
btc
adc
add
xor
bsf
mov
test
pushl
pusha
clc
add
mov
pushf
jmp
cltd
cwtl
mov
lahf
cwtl
mov
pusha
idivl
mov
pusha
movb
pushf
mov
call
mov
pushf
lea
jne
lea
pusha
call
pusha
pushl
popl
pushf
lea
jmp
pushf
pushl
popl
push
pushf
lea
jmp
mov
pushf
push
pushl
lea
jmp
shrd
add
clc
rol
mov
bsr
and
rcr
bsf
mov
bt
cmc
jb
stc
add
push
pusha
mov
mov
mov
pushf
pushf
lea
jmp
sar
movsbw
aad
mov
stc
rol
mov
call
pushl
mov
call
bt
mov
clc
clc
clc
mov
mov
bts
bt
bt
pushl
popl
ror
bt
rcl
pushf
movl
rol
mov
jmp
movzww
call
jne
and
inc
shl
movsbw
mov
call
pushf
popl
jmp
add
push
jmp
bt
sub
push
call
mov
push
pushf
popl
pushf
jmp
jmp
pushf
popl
lea
jg
popl
push
mov
mov
pushl
lea
jmp
clc
sub
push
pusha
mov
pushl
pushf
pushf
mov
lea
movb
mov
movb
mov
lea
jmp
mov
call
mov
pushf
pusha
jmp
call
pushf
test
stc
pusha
xchg
call
pushf
popl
movb
pushl
pushf
push
pushl
popl
pushf
mov
lea
jmp
mov
mov
pushl
push
movl
lea
jmp
mov
jmp
shrd
jmp
push
pushf
add
pushl
mov
mov
movb
pusha
mov
lea
jmp
jmp
mov
mov
movb
pusha
pushf
popl
call
shr
push
mov
call
clc
btr
mov
dec
ror
mov
call
mov
inc
movb
pushf
lea
jmp
shr
mov
sar
adc
mov
pushf
bt
cmc
add
pushl
push
mov
pushf
lea
jmp
push
jmp
lea
movb
jmp
mov
movw
pusha
lea
jmp
jmp
jmp
call
call
pushf
stc
mov
call
xchg
bswap
movsbl
mov
pop
pushf
mov
movzbw
pushf
lea
mov
pusha
call
pushf
popl
call
mov
pusha
pushl
pushf
pushf
pushl
ret
pusha
mov
pushl
jmp
clc
push
call
mov
mov
mov
call
sbb
bts
sub
neg
cmc
or
mov
bt
add
movl
mov
movw
push
pushl
lea
jmp
pushl
popl
mov
movb
mov
lea
jmp
not
movzbw
lea
jl
bt
ror
and
and
call
pusha
pushf
pusha
pushf
mov
push
pushf
mov
mov
lea
jmp
rol
push
rcr
not
rcr
pushf
rol
bt
rcl
pushl
neg
cmc
shl
and
bsr
clc
mov
clc
add
pusha
call
lea
js
push
pusha
mov
pusha
call
pushl
popl
pushf
pushf
movb
lea
jmp
mov
movb
movb
lea
jmp
mov
call
cmc
sub
pushf
add
jo
push
bt
add
lea
jae
pusha
push
pushf
popl
pushl
pushl
popl
movl
lea
jmp
movb
add
pushf
jmp
pushf
mov
pushf
lea
jmp
mov
pusha
push
lea
jmp
aam
pushf
add
movzww
mov
stc
mov
clc
xchg
cmp
cmc
pushf
cmp
xor
push
pusha
call
pusha
push
jmp
push
inc
lea
jne
pusha
pusha
decl
jmp
movb
pushf
popl
call
mov
btr
mov
pushl
ror
movb
lea
jmp
mov
push
pusha
call
jmp
movb
push
mov
push
pushf
lea
jmp
stc
xadd
bt
mov
setns
sbb
mov
pusha
push
add
call
jmp
shld
sbb
cmc
mov
stc
call
mov
pushf
mov
push
pushf
lea
jmp
movb
clc
ror
pushf
lea
jmp
jmp
inc
test
inc
mov
pushf
pusha
cmc
stc
add
pushf
pushf
movb
pushl
lea
jmp
push
bsr
mov
shrd
not
bsr
lea
mov
inc
rcl
mov
jmp
lea
bswap
lea
push
setb
jb
seto
push
movzbw
push
jmp
call
pushf
popl
pushf
pushl
popl
mov
pushl
pushl
lea
jmp
rcl
mov
bt
add
push
push
movb
lea
jmp
push
jmp
xchg
shrd
inc
mov
cmp
shr
adc
mov
pushf
clc
sub
jnp
add
call
push
push
add
movb
jmp
pushf
mov
mov
pusha
pushf
lea
jmp
pushf
popl
test
movb
pushf
mov
jmp
mov
mov
mov
push
pusha
movw
call
bswap
not
movsbw
mov
pushl
pusha
mov
lea
jmp
sub
cmc
shl
jmp
pusha
rep
add
rcr
mov
sbb
mov
mov
cmp
cmc
pushl
popf
pushl
pushf
lea
jmp
mov
pushf
mov
jmp
pusha
lea
jmp
shr
pushf
mov
jmp
push
fwait
pushf
pusha
lea
jmp
shl
sets
sub
sub
neg
and
ror
neg
lea
stc
movzbw
lea
ror
shrd
and
call
clc
movl
movsbl
mov
pushf
lea
jmp
bt
sub
mov
cmp
ror
bts
rcr
mov
jmp
pusha
call
xchg
call
cmp
sub
test
clc
pushf
mov
shr
call
lea
jne
shr
xorb
movzbl
not
call
jmp
add
pusha
lea
jmp
mov
pushl
pushf
mov
push
mov
pushf
mov
mov
mov
mov
pushf
popl
movb
lea
jmp
mov
bt
cmp
cmp
cmc
add
push
call
pusha
mov
call
clc
stc
bt
add
cmc
bt
cmp
call
not
mov
bt
pushf
pushf
test
add
pushf
lea
jmp
mov
mov
mov
pushf
mov
movb
lea
jmp
pushf
popl
mov
pushl
popl
movl
mov
lea
jmp
mov
movb
add
pusha
pushf
popl
jmp
pusha
mov
pushf
pushf
lea
jmp
push
movl
movb
mov
mov
push
pushl
ret
mov
pusha
pusha
lea
jmp
jmp
lea
jbe
push
mov
pusha
pushf
popl
pushf
pushl
popl
push
lea
jmp
call
pushl
mov
mov
push
mov
lea
jmp
pusha
pushl
popl
movb
pushf
lea
jmp
call
pop
mov
movsbl
mov
pusha
lea
push
cld
call
mov
pusha
jmp
bsf
shl
mov
clc
jmp
cmp
add
push
pusha
mov
movw
mov
pusha
pushf
pushl
ret
push
push
bswap
movzbw
pushl
mov
pusha
movl
pushf
push
lea
jmp
mov
call
lea
mov
call
push
movw
mov
push
push
lea
jmp
mov
push
mov
jmp
pushf
movw
movb
mov
push
lea
jmp
pushl
jmp
xchg
not
mov
rcr
sbb
pusha
rol
mov
jmp
pushl
popl
pushl
push
lea
jmp
mov
mov
movsbw
rcr
mov
pushf
bt
clc
bt
add
movb
mov
pushf
lea
jmp
bt
shld
mov
test
clc
pushf
jmp
fcompl
movw
pushf
push
movw
lea
jmp
mov
call
mov
pusha
call
call
push
inc
mov
dec
inc
jmp
stc
mov
clc
stc
mov
clc
bt
push
cmc
mov
push
movw
mov
clc
xchg
rol
pushl
popl
rcl
movl
push
jmp
not
inc
movw
ror
rcr
shrd
xor
movsbw
setle
call
pushf
push
pushf
pushf
popl
push
jmp
movzbl
mov
push
pushf
pushf
mov
pushf
jmp
jmp
push
push
setno
pushf
mov
mov
mov
call
call
jmp
jmp
add
pushf
movl
mov
mov
mov
pushf
lea
jmp
mov
lea
jo
dec
call
jmp
cmc
clc
add
cmp
shrd
mov
push
pusha
mov
call
jmp
adc
rcr
mov
jmp
pushf
popl
pushf
mov
movb
jmp
test
bt
add
pusha
mov
pushf
mov
mov
push
pushf
lea
jmp
mov
add
bt
mov
call
mov
movsbl
mov
lea
mov
jmp
cwtl
call
not
mov
push
lea
mov
mov
pushl
popl
dec
movl
movzbw
mov
call
bsr
mov
bt
call
pushf
pusha
call
add
mov
test
test
sub
pushf
test
pushf
sub
test
xor
cmc
sub
clc
pusha
rol
push
jmp
jmp
mov
movsbw
mov
call
xadd
shl
cmp
mov
pusha
clc
mov
test
jmp
inc
movb
clc
pusha
ror
pushf
lea
jmp
push
decl
pusha
pushf
pushf
lea
jne
push
pushl
pushf
mov
pushf
mov
pushl
pushf
lea
jmp
jmp
pushf
popl
pushf
cmc
cmc
pushf
mov
jmp
decl
push
pushf
lea
jne
jmp
pusha
jmp
movb
not
bt
bt
jmp
movb
or
call
push
mov
mov
mov
pushf
pushf
lea
jmp
bt
neg
bt
cmp
add
movb
mov
jmp
pushl
popl
pushf
pushf
mov
pushf
lea
jmp
ror
pusha
mov
and
and
mov
stc
stc
add
pusha
pushf
mov
mov
push
mov
movl
lea
jmp
cmc
bt
cmc
push
sub
stc
pusha
clc
rol
cmc
bt
neg
clc
xor
stc
cwtl
clc
cmp
movb
sub
movl
movb
pushl
push
lea
jmp
pushf
mov
push
push
mov
push
lea
jge
pusha
mov
pushl
jmp
jmp
pushf
mov
push
mov
pusha
mov
mov
pushf
popl
movb
pushl
jmp
pusha
call
movb
xor
test
cmc
sub
bt
mov
cmp
test
sub
jmp
mov
pushf
not
pushf
popl
std
push
ja
xchg
push
pusha
mov
bswap
pop
lea
std
pushf
cld
movw
mov
jmp
not
shr
xor
mov
mov
mov
cmp
mov
cmp
push
cmc
add
pushf
push
mov
jmp
mov
call
stc
neg
jmp
adc
bswap
add
rcl
xor
clc
ror
cmp
neg
and
mov
neg
mov
cmc
stc
add
jmp
movsbw
lea
call
mov
pusha
push
movl
pushl
ret
jmp
pushl
mov
movl
movl
lea
jmp
inc
test
pushf
stc
xchg
bt
sub
jmp
rol
pushf
and
neg
shl
and
shl
shl
sar
btc
mov
clc
jmp
mov
pushf
pushf
popl
jmp
lea
clc
aas
xor
lahf
lea
rol
bsf
inc
sub
bts
lea
call
pusha
cmc
add
mov
movb
push
mov
lea
jmp
pusha
pusha
jmp
call
movsbw
mov
cmp
pusha
pusha
clc
sub
call
sub
pushf
clc
cmp
add
pushf
lea
jo
pushf
jmp
push
push
mov
push
mov
pusha
mov
jmp
pushf
pushf
pushf
popl
jmp
pushf
popl
jmp
add
pusha
pushf
movb
mov
lea
jmp
jmp
bswap
neg
inc
bt
not
sbb
xor
or
bsf
btc
cmp
mov
test
stc
cmp
clc
add
jmp
inc
xor
mov
call
mov
push
mov
pushf
pushl
ret
push
jmp
call
pusha
not
pushf
neg
jmp
call
mov
mov
movb
lea
jmp
pushl
pushf
lea
jo
popl
pushf
push
lea
jmp
mov
mov
lea
jmp
jmp
cmp
xchg
lea
movl
xadd
shld
mov
xchg
bsr
shr
stc
neg
movsbw
and
xchg
bswap
add
call
mov
jmp
pop
pushl
popl
movzbw
movl
movsbw
bswap
bswap
mov
pusha
mov
pushf
pushf
lea
jmp
push
mov
push
jmp
call
mov
lea
je
pushf
mov
push
lea
jo
push
push
push
pusha
pushl
popl
pusha
pushl
push
lea
jmp
add
pusha
movl
lea
jmp
pushf
mov
push
push
pushf
lea
jmp
lahf
movsbl
mov
push
jmp
neg
movzww
test
xchg
bt
xor
cmc
cmp
bt
xor
push
xchg
cmp
bt
push
sub
stc
pushf
ror
pushl
xor
pusha
mov
pushf
sub
call
cmp
add
call
bt
pushl
pusha
add
cmp
pushl
popf
pushf
lea
jmp
cmp
pusha
stc
neg
pushf
movb
call
mov
movb
push
mov
stc
call
push
inc
pusha
jmp
pushf
rep
rcl
mov
stc
mov
and
mov
stc
mov
cmp
pushl
popf
movb
pusha
lea
jmp
mov
pop
lea
pushf
push
mov
pushf
push
push
push
pushl
ret
xchg
pushf
mov
std
cld
jmp
mov
mov
jmp
rol
bsr
rol
mov
shrd
shr
not
clc
xor
not
sub
neg
sub
test
btr
xor
shr
test
bt
neg
ror
xor
btc
add
bsf
shl
mov
pushf
cmc
pushl
lea
pusha
add
pushl
lea
js
push
pusha
mov
pusha
mov
pushf
lea
jmp
jmp
push
mov
pushf
pusha
mov
jmp
pusha
mov
pushf
mov
call
jmp
pushf
mov
call
mov
pushl
popl
push
movw
movb
movb
lea
jmp
movb
fstps
pusha
pushf
lea
jmp
mov
jmp
shr
lea
add
ja
push
cmp
bts
btc
push
bt
bswap
xor
push
sbb
rcl
or
test
push
cmc
rol
push
mov
not
push
movsbw
rol
bsr
pushl
bt
movsbw
shr
push
add
lea
xchg
lea
mov
shr
shr
sub
add
sbb
mov
bswap
and
neg
setp
or
mov
add
adc
bswap
sub
sbb
cmp
bts
mov
sbb
sbb
mov
shrd
push
add
lea
bsr
mov
shl
xor
dec
call
dec
shrd
bt
bts
clc
sub
rol
seto
push
call
neg
mov
add
stc
or
mov
push
cmp
clc
jmp
sub
inc
movzbl
pushf
call
mov
call
xchg
pusha
pushf
lea
sbb
mov
and
adc
rcl
mov
stc
pushl
popl
movzbw
clc
jmp
mov
mov
mov
push
lea
jmp
movzbw
clc
cmc
mov
cmp
bts
inc
mov
and
stc
push
xor
mov
bt
add
call
jmp
push
pushf
popl
jmp
pushf
pusha
rcl
sub
stc
shld
sub
jae
shrd
add
cmc
mov
push
ror
bts
pushf
stc
xor
add
pop
shrd
cmp
sub
pop
movzbl
not
dec
clc
mov
movsbw
mov
test
not
test
cmp
call
inc
shrd
bswap
bt
movzbl
btc
shrd
rol
xor
add
xor
bsf
sub
not
lea
setno
sub
cmc
sub
rcl
btr
bt
push
rol
not
dec
xor
sub
jl
sub
add
shld
bt
rcr
movzbw
mov
test
pushf
jmp
movsbw
inc
pushf
bsf
mov
test
mov
pusha
add
call
adc
xor
xor
dec
fnstsw
pushf
sub
push
pushf
movb
mov
movb
pusha
pushf
movw
lea
jmp
shrd
pushf
bsf
mov
add
js
cmp
add
pushf
movb
lea
jmp
movw
cld
pushl
call
call
jmp
pushf
movb
mov
jmp
push
lea
jmp
cmp
cmc
cmp
sub
pushf
call
pushf
mov
push
pushl
pushf
lea
jmp
mov
call
rcl
sar
mov
pusha
call
call
xchg
call
call
push
pushl
pushl
mov
push
pushf
call
aas
mov
jmp
jmp
clc
shr
call
bt
xor
call
jmp
shl
cmp
setns
shr
mov
neg
shl
shl
add
push
jmp
and
rol
shr
mov
bt
mov
stc
pushf
sub
test
clc
pusha
jmp
push
mov
pusha
mov
pushf
mov
pushl
mov
pusha
mov
push
lea
jmp
bt
add
pushf
movw
mov
pusha
movb
movl
mov
lea
jmp
mov
pushl
call
sub
jmp
cwtl
ror
lea
jmp
push
call
pushf
xchg
cmp
call
add
jbe
add
push
mov
pushf
pushl
push
mov
lea
jmp
mov
call
pushl
mov
push
mov
lea
jmp
xor
clc
mov
cbtw
push
cmp
pushf
pusha
cwtl
bt
cmp
cmc
test
sub
call
pushf
test
pushl
popf
push
mov
mov
pushf
lea
jmp
mov
call
pushf
clc
or
shl
mov
cmc
stc
xor
cmp
push
bt
not
call
push
call
mov
mov
jmp
cmp
cmp
pushl
add
clc
mov
mov
push
bt
movw
sub
movb
jmp
mov
pushf
push
pushl
lea
jmp
call
add
pushf
pushf
pushf
push
lea
jmp
stc
call
movb
pushl
popl
pushf
mov
lea
jmp
push
mov
bt
add
mov
stc
push
cmp
sub
test
movb
test
shr
pusha
jmp
mov
mov
lea
jmp
mov
call
bswap
call
pushf
mov
mov
pushl
pushf
popl
jmp
pushf
mov
pushl
movb
push
lea
jmp
pushf
popl
movb
pushl
popl
pushf
lea
jmp
pushf
popl
movb
push
call
movw
pushf
mov
pushf
pushl
push
mov
lea
jmp
bswap
lea
shrd
mov
test
mov
pusha
stc
push
add
call
add
cmc
call
mov
cmc
call
push
mov
mov
movb
pushf
lea
jmp
push
push
mov
pushf
mov
pushf
pushf
lea
jmp
jmp
rcl
call
shl
sub
jmp
pushl
popl
pushf
movl
lea
jmp
shr
jmp
mov
mov
jmp
movb
call
shr
mov
cmc
jmp
test
stc
push
add
call
clc
mov
stc
jmp
mov
pushf
lea
jmp
inc
movzbl
pushf
xor
pushf
sub
pusha
clc
xor
stc
call
fcompl
movl
pusha
push
lea
jmp
lea
js
push
mov
pushf
lea
jmp
mov
pusha
jmp
pushf
mov
pushf
movb
mov
pushf
jmp
mov
pushf
jmp
bt
xor
pushl
pushf
test
neg
call
xchg
push
jmp
mov
pusha
movw
mov
pushf
lea
jmp
pushf
popl
pusha
pushl
popl
pushf
lea
jmp
setno
push
cwtl
not
mov
push
pushf
mov
pushf
mov
mov
lea
jmp
call
setle
inc
bsf
notl
pusha
lahf
aad
lahf
mov
pusha
cmp
movb
stc
sub
stc
clc
and
jmp
push
lea
jne
shld
bswap
btc
shl
xorb
pusha
bswap
mov
movl
push
lea
jmp
bsf
bt
mov
add
adc
or
mov
stc
clc
pusha
bt
add
jmp
call
movb
mov
call
pusha
pushf
popl
mov
pushl
popl
pushl
lea
jmp
test
sub
push
inc
bt
jmp
xchg
rol
rol
pushl
popl
bt
btr
jmp
rol
rcl
add
mov
bswap
neg
call
pushl
clc
sub
pushl
lea
call
jmp
test
pushf
stc
mov
not
pop
lea
xchg
pusha
or
mov
aad
btr
shr
mov
sbb
xor
aas
stc
mov
btc
neg
movsbw
mov
btr
test
rcl
bsf
mov
bts
mov
pop
pushl
popf
setnp
mov
movsbw
movzbw
mov
movzbw
lea
jae
pop
pusha
push
pusha
pushl
ret
mov
movb
mov
sbb
rcl
bts
mov
bsf
mov
bswap
pushl
popl
sar
and
xor
bsr
movl
bswap
clc
mov
cmc
mov
push
bswap
push
cmc
call
mov
pushf
pushl
movw
pushf
lea
jmp
pusha
pushf
mov
mov
pushf
call
call
jmp
jmp
pushl
mov
mov
jmp
inc
pushf
stc
mov
test
pushl
clc
call
pusha
mov
pusha
pushf
mov
lea
jmp
lea
jne
adc
mov
pusha
test
pusha
bt
and
cmc
jmp
dec
das
cmc
mov
cmc
sub
pushf
mov
movb
pushf
lea
jmp
lea
jne
btr
movsbw
ror
mov
jmp
push
mov
adc
xor
ror
add
add
mov
mov
jmp
pushf
mov
pushf
mov
pushf
mov
mov
call
stc
not
mov
test
clc
push
pusha
xor
push
ror
bt
neg
cmp
clc
lea
clc
cmp
not
movb
pushf
stc
xor
stc
bt
mov
cmp
cmc
cmc
pushf
sub
movb
push
push
call
jmp
pushf
call
setne
not
cmc
bswap
rol
bsf
rol
add
test
bt
jmp
add
cmp
neg
movb
push
movb
movb
lea
jmp
movb
jmp
shld
sub
test
mov
adc
mov
cmc
add
jmp
call
ror
test
sar
shr
shrd
sub
cmc
ror
test
and
lea
bsf
sub
shrd
mov
shrd
adc
mov
shl
shrd
add
shld
rcr
inc
mov
btr
lea
neg
cmc
xor
setns
pusha
not
inc
dec
test
sar
xor
xor
btc
movzbw
rcr
ror
sub
pop
or
xor
shrd
shl
shl
movzbl
btc
setnp
bts
cmc
mov
pushf
not
push
add
pusha
push
pushf
pushf
mov
pushf
mov
movb
pushl
ret
movb
movl
pushf
popl
movb
jmp
pushl
popl
push
lea
jmp
movzbw
movsbw
pushl
pushf
movl
movzbw
movzbl
pushf
pusha
mov
pushl
push
lea
jmp
pushf
pushl
mov
call
push
flds
pushf
pushl
pusha
lea
jmp
dec
clc
bt
and
mov
pushf
mov
jmp
mov
push
jmp
pushf
jmp
mov
jmp
push
pushf
movb
pushf
mov
pusha
pushf
pushf
movb
lea
jmp
mov
mov
call
push
add
pushl
mov
pushf
pusha
mov
push
movb
pushf
pushf
lea
jmp
pushf
call
mov
push
pushl
ret
test
cmp
push
pushl
popf
movw
movw
lea
jmp
mov
pushf
call
btc
shld
fnstsw
clc
sub
jmp
call
bsf
mov
rcr
neg
mov
clc
test
add
jmp
push
pushl
popl
pushf
pushl
pushf
mov
lea
jmp
mov
jmp
call
pusha
xchg
jmp
mov
mov
lea
jmp
cmc
pushf
mov
ror
pushf
lea
jmp
movw
pushf
jmp
push
pushf
popl
pusha
mov
stc
stc
jmp
not
ror
mov
cmp
mov
cmp
pushf
add
call
sar
not
inc
mov
sub
add
mov
mov
pusha
mov
pushf
call
mov
call
pushl
mov
call
pushf
mov
pushf
pushf
mov
push
push
pushf
mov
movb
mov
push
lea
jmp
lea
mov
not
not
mov
jmp
xadd
aam
mov
shrd
shl
bswap
mov
call
pushl
popl
mov
push
lea
jmp
shld
daa
ja
cmc
mov
not
add
mov
stc
stc
pusha
add
jmp
pusha
xchg
rcr
bsr
and
mov
add
xchg
cmc
rol
mov
cmp
cmp
bsr
pushl
popl
rol
rcl
movl
bts
mov
adc
movzbw
sar
pop
add
xor
and
sbb
bswap
pop
shr
btc
btc
neg
xor
sub
lea
pusha
mov
stc
stc
sub
pushf
push
push
movb
lea
jmp
jmp
cmp
pusha
shl
pushf
jmp
cmc
stc
mov
pushf
pusha
test
mov
call
sub
movb
call
mov
bt
cmc
mov
push
pusha
mov
mov
and
sar
clc
mov
bts
inc
mov
adc
cmp
lea
rcr
mov
xor
pushl
popl
movsbw
btc
movl
bts
mov
and
mov
dec
add
pusha
rcl
pop
rcr
bswap
bts
inc
jmp
bt
bt
pushf
stc
and
cmc
cmp
call
pushf
pushl
popl
pushl
lea
jmp
movzbl
call
add
mov
test
jmp
ror
pushf
push
movw
lea
jmp
call
bts
or
mov
mov
jmp
push
mov
pushf
mov
push
pushl
ret
mov
xor
lea
jne
cmp
clc
cwtl
pushf
stc
bt
sub
call
test
pushl
popf
pushf
mov
pushf
pushl
lea
jmp
pushf
jmp
pusha
mov
mov
call
pushf
mov
call
mov
jmp
mov
jmp
mov
pushl
lea
jmp
cmc
shld
dec
rdtsc
pusha
pushf
cmc
sub
pushf
mov
mov
call
jmp
inc
movb
lea
jmp
push
pushl
popl
push
lea
jmp
mov
call
lea
jb
pushf
push
pushl
popl
pushf
lea
jmp
xchg
lea
movsbl
mov
setne
push
push
seto
mov
jmp
call
call
xor
clc
lea
jns
pushf
cmc
sub
cmc
rol
cmp
neg
stc
pusha
xor
test
cwtl
test
clc
stc
sub
call
and
call
lea
jmp
jmp
shr
shl
xadd
mov
adc
test
bts
inc
xor
pusha
pop
dec
jmp
lea
ja
flds
pushf
pushf
pusha
mov
lea
jmp
cmp
shr
pushf
mov
mov
movb
pushf
pushf
popl
movb
pushf
jmp
jmp
mov
pushf
movb
pushl
push
lea
jmp
not
pushf
cwtl
mov
jmp
call
test
clc
add
pusha
call
movsbw
inc
pushl
popl
push
dec
lea
pushf
movl
pushf
mov
movzbl
pop
mov
mov
call
and
push
clc
cmp
pusha
call
mov
pushf
push
mov
jmp
pushf
lea
jmp
pusha
cmc
bsr
mov
push
bt
add
pushf
pushf
mov
lea
jmp
movb
mov
movl
pushl
popl
pushf
push
lea
jmp
dec
setns
clc
pushf
ror
lea
dec
rcl
rcl
sub
sar
sub
inc
movzbl
pop
bswap
mov
jmp
fcomps
pushl
pushf
pusha
pushf
lea
jmp
pushf
mov
push
mov
pusha
lea
jmp
movb
mov
pushf
lea
jmp
mov
mov
call
rcl
btc
mov
push
bt
rol
call
inc
shl
xor
mov
rcl
call
mov
pushf
pushf
mov
pushl
movw
pushf
lea
jmp
xor
adc
not
pushl
popl
shld
xchg
movl
shl
adc
cmp
shl
mov
push
bsf
add
shld
bswap
or
neg
dec
lea
cmp
clc
cmc
sub
pushf
mov
mov
lea
jmp
lea
jne
test
cmp
sub
pushf
movb
xchg
movb
pusha
pushl
lea
jns
push
push
pusha
call
xor
clc
mov
clc
add
push
mov
lea
jmp
movb
clc
jmp
sub
bsr
mov
pusha
add
pushf
push
lea
jmp
movb
pusha
pushf
fmull
pushl
movb
push
lea
jmp
not
pushl
add
pushf
sub
call
sbb
movsbw
shr
stc
mov
push
sub
jmp
lea
pushl
call
pushf
pusha
pushf
popl
pushl
pusha
pushl
popl
pushf
mov
lea
jmp
call
xor
and
movzbw
clc
mov
pushf
mov
shl
mov
bt
shr
cmp
cmc
clc
pushf
or
clc
cmc
bt
cmc
xor
pusha
mov
inc
pushf
decl
pushf
pushf
pushl
movb
lea
jne
pushf
call
sub
pushf
cmc
jmp
mov
mov
call
add
push
push
jmp
pusha
jmp
mov
pushf
cmc
pushf
test
add
pushf
pushf
mov
pushl
pusha
push
lea
jmp
aam
add
notl
pusha
shrd
mov
call
pusha
mov
jmp
push
pushf
pusha
fstps
movb
pushl
lea
jmp
call
jmp
pushl
jmp
lea
jo
cld
cld
popf
pusha
lea
jmp
jmp
test
bsf
movzbl
shl
bswap
bts
xor
dec
dec
bts
clc
neg
dec
inc
mov
dec
dec
pushf
jmp
cmc
ror
bsf
sub
lea
clc
shld
add
sub
xchg
mov
bswap
clc
mov
not
jmp
jmp
pushl
popl
bts
jmp
pushl
popl
pusha
mov
movb
lea
jmp
add
pusha
push
pushf
popl
pushf
movb
pushf
pushl
popl
movw
pushf
movw
lea
jmp
pushf
decl
jmp
lea
cpuid
test
stc
test
sub
push
mov
pushl
jmp
and
shld
movzbl
clc
cmc
movzbw
shl
xor
jmp
pushl
ror
jmp
movw
call
call
cmp
fnstsw
push
sub
lea
je
push
pushf
pushl
mov
pushf
mov
lea
jmp
pushl
lea
jbe
push
mov
jmp
mov
jmp
call
sub
btc
cmp
inc
mov
call
lea
sbb
xor
movsbl
mov
rol
inc
stc
ror
add
call
xor
pusha
jmp
pushf
mov
movb
pushf
movb
pushl
popl
pushl
movw
lea
jmp
pusha
add
pushl
pushf
pushf
push
lea
jmp
test
call
setp
bswap
mov
push
call
jmp
inc
pushf
pushf
pushf
jmp
jmp
inc
shrd
mov
call
pushl
mov
pusha
push
pushf
call
pusha
neg
jmp
movzbw
mov
ror
shr
not
mov
rcl
push
mov
pusha
jmp
jno
pushf
stc
pusha
rol
test
push
test
bswap
jmp
xor
movsbw
aas
and
mov
inc
mov
test
stc
sub
bt
stc
shr
jmp
movb
jmp
jmp
call
push
mov
jmp
mov
clc
or
pushf
lea
je
test
pusha
sub
jmp
fcompl
pushf
pusha
lea
jmp
mov
movw
call
mov
call
mov
pushl
mov
push
mov
push
lea
jmp
shrd
jmp
mov
pushl
jmp
btr
ror
shl
ror
test
add
movzbw
movzbw
rol
add
xor
sub
bswap
and
rcr
ror
mov
clc
pushf
pusha
pushf
sub
pushl
mov
mov
mov
pushf
lea
jmp
call
cwtl
jmp
mov
clc
clc
mov
test
jmp
inc
mov
xor
rcr
seta
add
call
mov
movb
pushf
push
pushl
ret
inc
mov
pushf
pushl
pushf
decl
jmp
cmp
pushf
mov
call
pushf
inc
call
inc
pushf
pushf
add
pushl
bt
pushf
cmp
sub
test
call
pushf
popl
jmp
not
movzbl
cmc
shr
sub
neg
cmc
xor
call
pushl
popl
movw
pushf
push
lea
jmp
push
dec
sar
pushl
popl
bt
movzbw
add
push
bswap
btr
mov
bts
btr
bts
add
bsr
shrd
neg
sbb
bswap
call
mov
movl
lea
jmp
call
mov
jmp
mov
pushf
mov
lea
jmp
mov
movl
pusha
cmc
cmc
mov
jmp
pushf
pushf
stc
xor
test
clc
cwtl
jmp
push
push
pushf
mov
pusha
jmp
shl
mov
push
add
lea
jo
mov
pushf
mov
pusha
mov
mov
lea
jmp
bsf
neg
shld
movsbw
bts
shrd
not
cmc
xor
inc
mov
test
pushf
pushl
add
push
mov
jmp
adc
mov
pusha
pusha
add
bt
cmc
pushl
stc
shrd
jmp
pusha
mov
mov
xchg
jmp
push
add
jmp
pushf
push
fstps
pusha
push
push
pushf
lea
jmp
mov
pushf
popl
jmp
mov
bts
movsbw
mov
cmp
cmc
test
clc
add
pushf
pushf
mov
movw
pushf
movb
pusha
lea
jmp
pusha
pushf
push
mov
push
movl
lea
jmp
cmp
cmc
add
mov
mov
bt
pusha
sub
pusha
mov
pushf
call
mov
bt
call
mov
pushf
pushf
pushf
pushl
lea
jmp
pushf
mov
jmp
add
sbb
pushl
add
xadd
stc
push
btc
add
mov
bts
sbb
xchg
not
sub
mov
ror
clc
test
sub
rol
bsf
shl
shrd
mov
test
btc
adc
sub
shld
mov
shld
btc
rcl
btc
mov
cmc
shl
add
btc
sbb
lea
mov
not
cmp
lea
rcr
sub
xor
movsbl
not
dec
shl
stc
sub
movzbw
xor
stc
ror
call
push
pushf
mov
pushf
mov
jmp
pushf
pusha
fstps
pushl
movw
pushl
mov
lea
jmp
mov
push
jmp
push
mov
pushl
pushf
mov
mov
mov
call
lea
pushf
jmp
pushf
pushf
fildl
pushf
push
movw
lea
jmp
push
pushf
fwait
push
pushl
pushf
pushl
lea
jmp
cmc
stc
mov
stc
mov
cmc
call
call
pusha
lea
jle
add
pushf
pusha
mov
mov
jmp
mov
push
pusha
call
movb
mov
lea
jo
pushf
call
push
test
test
bt
bswap
bt
stc
cmp
mov
add
test
pushf
test
call
push
mov
pusha
push
movb
mov
mov
jmp
mov
mov
pushf
popl
lea
bswap
lea
mov
pushf
mov
pop
pushf
movzbw
pusha
pushl
popl
pop
bswap
movl
mov
mov
mov
call
pushf
popl
jmp
and
lea
cmc
movsbw
sar
and
sar
dec
sub
movzbw
not
push
lea
mov
bswap
mov
call
btc
call
call
shl
clc
mov
not
dec
bsr
sub
sub
add
rol
test
xor
call
mov
pusha
push
movw
pushf
lea
jmp
pusha
mov
movb
pushl
push
push
mov
pushl
mov
push
pushf
popl
movb
push
pushl
movw
mov
push
mov
jmp
jmp
mov
movb
call
mov
lea
jo
pusha
movb
mov
pushl
pushf
popl
clc
stc
push
mov
bt
jmp
pushf
mov
mov
pushf
movw
push
pushl
lea
jmp
movzbl
bswap
mov
sete
mov
mov
bswap
movw
mov
movb
mov
movl
mov
pushl
ret
mov
movb
lea
jmp
pusha
movb
mov
movb
mov
pushf
push
push
lea
jmp
push
add
jmp
movw
mov
mov
lea
jmp
lea
pusha
dec
call
mov
mov
pushl
pushf
pushf
push
lea
jmp
shld
push
mov
call
push
lahf
push
mov
lahf
lea
seto
mov
call
mov
call
shrd
btc
mov
btc
shrd
xor
sar
btc
cmp
neg
pusha
dec
inc
setb
not
rcl
neg
shl
lea
cmc
xor
xor
add
sub
movsbw
mov
clc
cmc
push
add
pusha
mov
pushf
movb
movb
pushf
lea
jmp
jmp
pushl
popl
pushf
pusha
pushl
movb
lea
jmp
cwtl
push
lahf
lahf
mov
pushf
pushf
jmp
jmp
ror
mov
rcr
add
cmc
ror
cmc
sub
jmp
pusha
mov
pushl
pushf
pushf
push
lea
jmp
pushf
jmp
jmp
clc
test
add
jmp
movb
pushf
call
cwtl
pusha
mov
pusha
push
mov
push
mov
mov
pushf
lea
jmp
pushl
pushf
popl
call
bsf
rol
or
rol
mov
cmp
pusha
mov
add
mov
lea
jmp
pushf
mov
movw
movb
lea
push
jmp
ror
movb
pushf
lea
jmp
bswap
mov
push
push
movb
lea
jmp
movl
cmp
mov
jmp
sub
movl
jmp
sbb
mov
bts
pusha
shl
shld
mov
clc
add
pusha
jmp
clc
mov
push
stc
cmp
sub
pushf
mov
pushf
mov
movb
mov
movb
movw
lea
jmp
movzbw
mov
lea
movsbw
jmp
cmc
mov
call
jmp
sub
jmp
mov
pushf
pushl
lea
jmp
pushf
not
movw
call
add
aas
mov
sub
mov
cmp
test
cmp
cmp
add
pushf
mov
pusha
push
lea
jmp
lea
jmp
push
mov
push
test
movw
bt
mov
clc
pushl
mov
call
pushf
pusha
mov
pushf
pushf
lea
jmp
rcl
lahf
rcl
add
mov
bt
test
call
inc
stc
ror
pushl
movb
lea
jmp
pushf
xor
call
sbb
push
push
bsf
sub
pushl
popl
cmc
push
adc
sub
mov
movsbw
rcr
rcl
lea
add
jmp
mov
pushf
bswap
pushf
popl
bswap
bswap
pusha
call
push
mov
pushl
pushl
lea
jmp
sar
neg
dec
lea
test
sub
push
mov
pusha
lea
jmp
lea
jae
lea
pushf
pushf
mov
jno
mov
pushl
movzbl
push
bswap
push
mov
pushf
pushf
push
lea
jmp
pushl
popl
push
mov
movw
mov
lea
jmp
mov
pushl
pusha
mov
pushf
lea
jmp
pushf
jmp
mov
jb
rcl
ror
neg
push
clc
cmc
add
pushf
pushf
rol
bts
call
pushf
pushf
mov
xchg
call
neg
mov
movsbl
lea
call
jmp
pusha
mov
movb
lea
jmp
shld
call
shld
cwtl
mov
dec
mov
stc
add
pusha
jmp
stc
shr
mov
pushf
sub
cmc
cmp
shr
movw
jmp
mov
bt
pushf
sub
jae
sub
push
pusha
call
movsbw
mov
jmp
pusha
jmp
lea
jne
btr
shl
mov
stc
pusha
and
jmp
pushf
mov
push
lea
jmp
movzbw
mov
pusha
lea
cwtl
lea
js
mov
pushf
idivl
pushf
mov
mov
mov
call
pushf
pushl
mov
mov
jmp
bswap
pushf
popl
bsf
shr
sar
mov
shr
mov
or
sub
shld
or
xchg
shrd
mov
mov
mov
mov
inc
bsf
shl
mov
neg
rcl
add
push
rcr
xadd
pushl
btc
not
shl
push
dec
test
mov
call
pushf
pushf
popl
movb
pushf
pushl
popl
push
push
pushl
movw
lea
jmp
pushf
popl
bt
mov
pusha
jmp
movw
mov
pusha
push
jmp
call
pushf
and
mov
call
add
pusha
movb
lea
jmp
mov
movb
movb
push
pushf
lea
jmp
jmp
mov
cmp
jmp
out
push
sbb
out
and
out
or
ljmp
jl
out
scas
loop
out
insl
push
jmp
out
fstpt
out
sarb
out
leave
push
jmp
out
push
sbb
out
jmp
lret
pop
lret
mov
push
jmp
out
inc
gs
out
in
imul
out
sti
int
out
mov
ljmp
out
out
sahf
mov
jmp
out
jne
jmp
out
add
jmp
out
out
ljmp
xchg
jmp
out
or
call
out
movsb
mov
out
or
call
out
mov
jmp
out
add
jmp
out
push
sbb
out
ss
jmp
out
out
scas
call
out
jne
ljmp
or
out
aas
sbb
out
enter
jmp
js
out
aas
sbb
out
fstpt
out
sti
aas
ljmp
sbb
out
xchg
jmp
out
fs
ljmp
inc
jmp
out
aas
sbb
out
out
ljmp
loopne
out
aas
sbb
out
sahf
mov
jmp
out
aas
sbb
out
and
ljmp
and
out
aas
sbb
out
ss
jmp
out
dec
lcall
mov
call
out
sti
int
out
aas
sbb
out
hlt
or
out
cmpsl
pop
jmp
out
aas
sbb
out
and
out
hlt
adc
out
aas
sbb
out
insl
push
jmp
out
or
jmp
out
sarb
out
enter
sarb
out
aas
sbb
out
leave
push
jmp
out
inc
gs
out
xor
out
sub
out
aas
sbb
out
fiadds
out
inc
xchg
call
out
fs
jmp
out
inc
push
ljmp
shr
inc
xchg
call
out
out
ljmp
push
jmp
out
enter
mov
jmp
out
and
ljmp
out
out
jmp
sub
out
fs
jmp
out
mov
aaa
jmp
out
dec
insb
ljmp
inc
jmp
out
dec
insb
ljmp
push
jmp
out
mov
dec
jmp
out
cmp
mov
jmp
out
add
jmp
out
mov
out
add
call
out
mov
icebp
jmp
out
in
imul
out
mov
ljmp
add
call
out
outsb
es
or
out
insl
push
jmp
out
mov
jmp
out
sub
shr
cmpsl
adc
out
push
mov
out
enter
push
sbb
out
leave
push
jmp
out
hlt
or
out
mov
inc
jmp
out
and
ljmp
cmp
out
push
mov
out
pop
mov
out
sub
dec
jmp
out
inc
xchg
call
out
enter
push
mov
out
sbb
sahf
jmp
out
push
mov
out
or
call
out
push
mov
out
jmp
addr16
out
push
mov
out
or
jmp
out
mov
out
push
mov
out
mov
jmp
out
jno
jmp
out
mov
out
out
or
jmp
out
hlt
adc
out
sarb
out
sbb
mov
out
ss
jmp
out
sti
aas
ljmp
lcall
mov
mov
out
mov
call
clc
mov
stc
push
pushf
add
mov
pushf
pusha
lea
jmp
push
pusha
pusha
mov
pushl
jmp
sub
bsf
adc
cmp
mov
clc
cmc
jmp
rdtsc
mov
mov
cwtl
cwtl
movzbw
lea
mov
pusha
divl
movb
jmp
pushf
push
pushl
popl
pushf
pusha
pushf
pushl
lea
jmp
mov
pushl
popl
push
push
movb
pushf
lea
jmp
lea
jmp
jmp
bswap
mov
movsbw
movzbw
call
pushl
popl
pushf
lea
jmp
call
lea
push
call
or
test
movzbl
xor
and
sub
rcr
not
sbb
xor
inc
inc
movsbw
sub
call
pushf
popl
movb
stc
push
pushf
mov
clc
call
inc
call
mov
call
cmp
add
push
pushf
pusha
mov
pushl
movb
mov
pushf
movw
push
pushf
lea
jmp
call
call
rcl
ror
clc
mov
push
neg
shl
clc
add
mov
pushf
mov
movb
call
call
sub
movb
pusha
jmp
cbtw
shrd
mov
call
call
shld
movsbw
sub
movsbw
call
push
xchg
pusha
pusha
pushf
jmp
pusha
pusha
pushf
cmc
sub
call
ror
shl
mov
ror
call
pushf
neg
pushf
lea
jmp
test
add
jmp
call
pushl
jmp
mov
mov
mov
push
jmp
pushf
pushl
mov
jmp
call
lea
jne
push
jmp
pushl
popl
pushf
mov
pushf
movl
lea
jmp
mov
mov
stc
mov
cmc
cmc
jmp
jmp
btc
cmp
mov
jmp
xadd
shl
mov
cmc
sub
add
rol
xor
jmp
jmp
bswap
xor
neg
bsf
adc
mov
pushf
pusha
sub
pushf
pushf
lea
jmp
lea
not
pusha
mov
mov
push
mov
bswap
pushf
popl
std
movsbl
push
cld
push
lea
mov
lea
jne
movzbw
lea
push
cld
mov
pushf
bswap
pop
not
mov
push
push
cld
call
movzbl
mov
push
call
shl
pushf
mov
mov
pushf
pushf
popl
pushf
movb
lea
jle
push
pushl
popl
pushf
mov
lea
jmp
mov
cmc
call
bt
jmp
inc
mov
clc
jmp
cld
call
not
cmc
sub
jmp
call
jmp
movw
movl
push
mov
call
pushf
lea
jp
sub
stc
stc
bt
pushf
mov
jmp
push
jmp
push
jmp
pushl
popl
mov
pushf
mov
lea
jmp
mov
pushf
jmp
pushf
pushf
pushf
mov
movb
mov
pushf
mov
call
flds
pusha
movb
movw
lea
jmp
pushf
jmp
xor
inc
rcl
mov
pushf
bt
mov
call
shld
bswap
ror
mov
test
test
stc
add
pushf
lea
jmp
stc
sub
mov
sub
stc
jmp
mov
rcr
mov
cmc
clc
xchg
call
pushf
mov
rcl
mov
stc
stc
stc
test
sub
stc
jmp
mov
not
pusha
bswap
mov
mov
lea
jno
bswap
push
not
pusha
xchg
movsbw
mov
xchg
movzbw
mov
push
lea
xchg
xchg
not
push
xchg
mov
pop
call
inc
pusha
pushf
push
pushl
decl
call
jmp
btc
shl
mov
sar
bsr
or
mov
shl
push
mov
cmp
add
cmc
cmp
call
shr
pusha
lea
jl
pushf
pushf
mov
call
jmp
dec
jmp
push
movb
mov
pushf
pushf
mov
jmp
pushl
popl
movw
lea
jmp
lea
ja
neg
stc
mov
ror
lea
shld
pusha
inc
bts
sub
bsf
aaa
lea
movsbl
rcl
shl
and
call
call
movw
call
add
jl
add
mov
not
call
jmp
push
mov
movw
call
mov
pushf
popl
jmp
movsbw
mov
cmc
bt
sub
call
call
pushf
popl
jmp
lea
je
call
cmpl
call
lea
mov
push
pushl
pusha
mov
mov
movb
push
pushf
lea
jmp
mov
clc
call
pusha
add
pushl
pushf
pushf
push
lea
jmp
mov
lea
pushf
call
pushf
call
pushl
lea
je
cmc
clc
sub
pusha
xchg
stc
mov
test
clc
sub
movb
push
pushf
pusha
lea
jne
bt
cmp
call
jmp
mov
dec
bt
pushl
add
push
mov
mov
pusha
pushl
ret
movzbw
mov
shr
btr
btc
bts
mov
pusha
not
pushf
jmp
jmp
push
mov
pusha
lea
jmp
call
cbtw
sbb
mov
clc
sub
call
jmp
mov
call
cmp
inc
shl
mov
rcl
mov
jmp
push
mov
mov
pushf
pusha
lea
jmp
call
jmp
call
movb
ror
clc
neg
jmp
movl
jmp
jmp
pushl
popl
mov
lea
jmp
call
call
pushf
pushf
call
call
pushf
jmp
jmp
test
pushf
cmc
add
pushf
ror
movb
jmp
mov
pushf
movw
mov
call
movb
pusha
pushl
popl
movb
mov
push
mov
lea
jmp
jmp
mov
jmp
lea
jne
fwait
push
pusha
lea
jmp
pushl
popl
movw
movb
lea
jmp
push
pusha
mov
pushl
popl
movb
pushf
lea
jmp
sub
push
jmp
jmp
stc
mov
not
movsbw
rcr
pusha
rol
cmp
rcr
bt
add
dec
cmp
bts
clc
and
neg
not
shl
bt
mov
jmp
push
clc
shld
pushf
mov
pushl
call
pushf
push
mov
movb
push
pushf
pushf
lea
jmp
inc
call
add
mov
jmp
call
call
mov
pushf
call
cld
call
clc
pushl
cmc
pushf
add
cld
pushl
popf
pushf
lea
jmp
pushf
add
pushf
pushf
push
push
mov
push
movw
push
lea
jmp
jmp
add
push
lea
jmp
ror
clc
test
test
cmp
xor
mov
test
stc
sub
pushf
jmp
push
push
fildl
pusha
lea
jmp
call
push
inc
call
setb
cwtl
mov
pushf
pushl
ret
jmp
push
cmc
add
pushf
test
bt
xor
call
movb
mov
mov
pusha
lea
jmp
pushf
popl
pushl
call
movl
call
jmp
pushf
mov
jmp
pushf
popl
pushf
call
push
call
jmp
pusha
pushf
popl
push
pusha
call
mov
inc
pusha
lea
jmp
mov
pusha
mov
push
movb
pushf
movw
lea
jmp
call
pushf
pushf
mov
cmc
mov
ror
movzbl
pushl
popl
not
btr
jmp
mov
movb
call
call
lea
jne
or
bsf
not
mov
pusha
jmp
not
call
lahf
mov
and
push
mov
call
jmp
mov
bt
call
push
shr
call
push
mov
pusha
call
push
mov
jmp
pushf
mov
pushf
pushf
push
pushl
lea
jmp
pushl
popl
push
push
lea
jmp
jmp
pushf
popl
pushf
mov
mov
pushl
popl
mov
mov
mov
lea
jmp
jmp
clc
jmp
pusha
movzbw
jmp
ror
jmp
jmp
pushf
popl
push
pushl
popl
pushf
pushf
movb
mov
lea
jmp
pusha
call
cmc
push
pushf
bt
add
push
call
rcr
or
sbb
add
push
call
movl
pushf
popl
mov
call
pusha
not
mov
push
jmp
setge
mov
test
sub
mov
cmp
push
add
pusha
mov
pushf
lea
jmp
cmc
cbtw
lahf
mov
setg
sub
movzbw
mov
cmc
push
not
cmc
pushf
not
pushf
test
pushf
push
sub
clc
cmc
stc
and
pusha
mov
pushf
mov
jmp
mov
call
call
pushf
call
mov
clc
cmp
cmc
stc
sub
push
pusha
lea
jne
clc
push
sub
pushl
xchg
pushf
pushf
pushf
pushf
movl
call
bswap
lea
xor
neg
cmp
shld
lea
cmc
sub
pusha
pushf
lea
jmp
movsbl
add
movzbw
mov
ror
mov
clc
not
cmp
not
clc
stc
and
pushf
push
push
mov
pusha
jmp
push
movsbl
inc
rol
movzbw
rol
bsr
xor
bswap
lea
movw
inc
shl
bt
xor
shld
sar
call
rol
bts
seta
sbb
mov
cmp
mov
add
setg
sete
seto
jmp
pushf
mov
push
push
movb
pushf
mov
jmp
aaa
not
mov
bsr
mov
jmp
stc
cmp
mov
stc
movb
pusha
add
movb
movb
shld
pusha
pushl
mov
mov
mov
movw
pushl
push
pushf
popl
call
pusha
push
xchg
pusha
lea
bswap
pop
mov
pushf
mov
movl
pushl
mov
jmp
clc
movw
stc
neg
movb
push
movb
lea
jmp
jmp
pusha
pushf
popl
push
pushf
pushf
pushl
popl
pushf
pushf
push
lea
jmp
mov
mov
mov
mov
movl
pushl
ret
mov
push
jmp
pushl
popl
movw
movb
lea
jmp
call
cld
cld
cld
call
add
pushf
pusha
mov
pushf
mov
pushf
lea
jmp
daa
call
neg
cmc
mov
bt
mov
stc
add
pushf
lea
jmp
setb
not
pusha
mov
movw
pusha
mov
mov
push
movw
mov
pushl
lea
jmp
mov
push
pushf
pusha
lea
jmp
btc
mov
stc
clc
pusha
add
movb
push
lea
jmp
pushf
popl
pushf
pusha
push
call
shr
call
pushf
jmp
movb
cmc
sub
lea
je
push
pushf
mov
mov
mov
pushf
lea
jmp
jmp
inc
pushf
push
or
call
lea
jne
mov
rcl
bts
xorb
jmp
movsbw
push
pusha
push
jmp
neg
shl
mov
clc
sar
shrd
add
shrd
shl
xor
bswap
mov
cmc
bt
call
movw
mov
movb
stc
bt
mov
clc
cmc
mov
mov
pushf
xchg
stc
pushl
popl
mov
bswap
push
movl
rol
mov
clc
ror
pushl
push
lea
jmp
lea
je
push
call
setb
mov
pushf
call
inc
cmc
stc
pushf
stc
ror
pushf
mov
pushf
mov
lea
jmp
pushf
popl
call
pushl
popl
dec
dec
push
mov
call
pusha
movb
pushf
popl
mov
push
call
mov
movsbw
movsbl
lea
push
mov
pusha
pop
mov
lea
jns
cld
push
std
cld
jmp
mov
jmp
sar
bsr
mov
cmc
stc
call
rcl
push
bts
rcr
push
mov
pushf
cmc
bt
movb
ror
pusha
pushf
mov
pushf
lea
jmp
stc
shrd
pusha
mov
push
mov
jmp
mov
call
or
mov
shr
sbb
mov
pushf
test
sub
pushl
clc
shl
call
pusha
call
call
call
jmp
movb
pushf
popl
pusha
pushf
mov
pushl
popl
pushf
movb
pushl
lea
jmp
jmp
pushf
jmp
clc
rcr
mov
setae
rol
lea
neg
bswap
inc
xchg
mov
lea
xchg
rol
sub
and
mov
bt
btc
sub
mov
rol
xchg
add
adc
neg
mov
sar
xor
movzbw
lea
setnp
not
stc
stc
stc
rol
adc
sbb
and
stc
not
test
xor
sar
rcr
add
setno
movzbl
call
pushf
pusha
rcl
mov
clc
mov
pushf
pushf
bt
clc
not
clc
cmp
call
mov
pushf
pusha
lea
jmp
mov
pushf
pushf
push
pushf
lea
jmp
clc
sub
pusha
pusha
dec
jmp
jmp
pushf
inc
stc
stc
mov
ror
pusha
push
lea
jmp
mov
neg
clc
not
cmp
stc
bt
xor
clc
mov
clc
jmp
fmull
pusha
pusha
lea
jmp
call
jmp
bt
mov
cbtw
call
movzbw
pushl
popl
dec
bts
movl
bsf
mov
call
cwtl
mov
setne
mov
mov
pushf
idivl
pushf
movb
lea
jno
pusha
mov
movl
pushf
mov
call
jmp
mov
movw
mov
pushl
mov
lea
jmp
pushf
popl
pushf
pushl
pushl
popl
movb
mov
lea
jmp
call
call
jmp
pusha
mov
call
pusha
push
pusha
pushl
popl
pushf
lea
jmp
pusha
pushf
push
jmp
ror
lea
test
add
bsf
xor
rcr
push
pusha
rol
lea
neg
or
neg
adc
sub
sub
mov
movsbw
btc
bts
mov
bsr
rcl
bt
add
bsf
clc
lea
not
mov
call
pushf
push
mov
pusha
mov
pusha
pushf
mov
movb
pushf
mov
jmp
mov
test
test
pusha
movl
sub
pushf
cmp
jmp
ror
stc
mov
push
add
jmp
lea
je
jmp
call
mov
movl
push
movb
lea
jmp
mov
pushf
pushl
lea
jmp
sub
push
clc
call
fcomps
pushf
push
mov
pushf
lea
jmp
call
mov
pusha
pushf
pushf
lea
jmp
setp
mov
pushf
mov
pushf
movb
pushf
pusha
lea
jmp
call
mov
push
movb
lea
jmp
cmp
call
stc
bt
call
pushf
mov
mov
pushf
pushf
lea
jmp
rcl
bsr
mov
movzbw
btc
movzbw
sar
mov
jge
bt
clc
stc
add
jmp
jmp
pushf
push
mov
pushf
popl
movb
jmp
cmc
jmp
mov
mov
movw
pushl
mov
lea
jmp
jmp
pushf
pushl
mov
movb
pushf
popl
jmp
call
mov
pushf
movw
mov
mov
lea
je
pusha
pushf
pushf
popl
push
pusha
mov
pushl
lea
jmp
pushl
cmc
mov
sub
cmc
pushf
pushl
cwtl
jmp
mov
movb
mov
mov
mov
jmp
call
stc
cmp
test
xor
pusha
pushf
bt
xchg
bt
bt
mov
push
stc
sub
call
jmp
push
push
pushl
mov
push
pushl
pushl
ret
pusha
mov
jmp
call
cmc
dec
stc
fnstsw
stc
jle
bt
sub
push
jmp
pusha
pushl
mov
push
pushl
lea
jmp
push
pushf
popl
pushl
pushl
popl
mov
lea
jmp
pusha
mov
pushl
push
push
pushl
ret
mov
mov
pusha
pushf
pushl
ret
pushf
pushf
popl
call
movsbw
movsbw
push
call
bt
lea
stc
pusha
cwtl
cmc
sub
pushf
jmp
call
movb
mov
call
call
inc
test
pushf
jmp
jmp
test
cmc
clc
movzbl
push
test
sub
pushf
add
pushf
cmc
jmp
pushf
push
lea
jne
pusha
movl
mov
pusha
pushf
movb
lea
jmp
and
bsr
aas
rdtsc
cmp
sub
pusha
pushf
mov
mov
movb
movb
push
movb
mov
mov
movb
pushf
mov
lea
jmp
jmp
add
call
pushl
movl
mov
mov
mov
mov
mov
pushl
pushl
ret
dec
pusha
ror
seta
not
pushf
neg
sub
jmp
stc
bt
pusha
clc
rol
call
add
add
bt
sub
mov
jmp
pushf
neg
cmc
movl
add
mov
mov
push
pushf
pushl
ret
inc
xor
aas
mov
add
jmp
pusha
jmp
push
bt
call
pusha
movb
pushf
popl
movb
call
rcl
mov
sub
pusha
mov
cmc
test
call
mov
jmp
and
shl
sar
pusha
mov
btc
shrd
cmp
mov
cmc
test
push
add
pushf
push
pushf
jmp
push
pushl
popl
pushf
lea
jmp
call
shl
setle
rcl
mov
jmp
mov
push
mov
mov
lea
jmp
jmp
jmp
add
pushf
mov
push
pushf
mov
lea
jmp
xor
dec
mov
clc
cmp
call
lea
jae
popl
pushf
pusha
lea
jmp
inc
pushf
push
pusha
lea
jmp
pusha
mov
call
lea
je
push
pusha
mov
pushl
pusha
mov
mov
pushf
popl
pushf
lea
jmp
call
cmc
xor
call
push
mov
jmp
movl
lea
jne
neg
jmp
mov
call
jmp
rcr
aaa
push
jmp
cmc
test
clc
cmp
call
jmp
lea
jne
inc
shl
pushf
xorb
not
mov
movb
push
pushl
movb
lea
jmp
call
inc
movl
push
decl
pushl
lea
jne
jno
push
push
mov
pushf
pushf
lea
jmp
pusha
mov
pushf
mov
lea
jmp
or
jmp
call
mov
pushf
mov
pushl
jmp
pushf
popl
movb
pusha
pushl
popl
push
lea
jmp
mov
pushl
lea
jmp
pushf
popl
mov
mov
push
mov
push
mov
push
test
add
jo
push
mov
call
pushf
pushf
mov
movw
lea
jmp
pushf
cmp
call
call
mov
pushl
pusha
push
lea
jmp
push
mov
call
call
movzbl
pushf
mov
call
bswap
clc
clc
mov
add
pushf
neg
pushf
lea
jmp
jmp
mov
jmp
mov
push
mov
lea
jmp
bsf
mov
clc
add
mov
mov
call
pushf
mov
push
movb
mov
call
pushf
pushf
pushl
popl
cmp
bt
cmp
add
jmp
jmp
pusha
mov
movb
pushf
popl
push
call
cmc
cmp
mov
rcl
movzbw
ror
mov
cmp
call
add
call
not
pushf
mov
movzbw
lea
pushf
mov
pusha
pushl
ret
pusha
add
pushf
mov
pushl
lea
jmp
pushf
mov
fwait
push
movb
push
lea
jmp
push
movb
mov
push
mov
movb
pushf
lea
jmp
jmp
jmp
xor
cmc
call
setns
lea
mov
movzbw
setno
jmp
stc
or
rol
mov
bt
bt
cmp
sub
call
push
jmp
pusha
aad
bsf
mov
cmc
ror
shr
sete
mov
pushf
push
add
movb
jmp
mov
test
add
push
bt
clc
shld
call
call
call
pushf
call
pushf
call
shl
jbe
mov
mov
cmp
xor
push
add
cmp
test
btr
bts
xor
lea
neg
shld
shr
btr
mov
pusha
shl
test
test
shr
bt
or
test
cmp
pushf
call
shld
ror
shl
not
mov
rol
add
call
jmp
pushf
stc
sub
cmp
stc
call
push
mov
jmp
pusha
pusha
fstps
mov
pushl
lea
jmp
mov
movl
pushf
pusha
lea
jmp
call
call
pushl
lea
movb
call
pushf
popl
call
pushf
popl
mov
pushf
mov
lea
jmp
call
pushf
popl
clc
mov
stc
mov
bt
mov
mov
push
push
clc
mov
pushf
bt
mov
mov
sbb
stc
mov
inc
neg
clc
or
xchg
bswap
neg
mov
sub
pushl
popl
xor
movl
btc
mov
clc
inc
sbb
sub
add
rcl
bswap
cmc
sar
dec
shl
neg
shl
rcl
not
mov
clc
pusha
cmc
sub
pushf
push
pusha
lea
jmp
movb
jmp
movzbw
xchg
lea
jmp
pushf
pusha
mov
pushl
pushf
mov
push
jmp
pushf
mov
pushf
popl
push
pushf
push
lea
jmp
sub
jmp
pushf
popl
jmp
daa
mov
stc
add
call
call
pushf
pushf
pushl
popl
pusha
lea
jmp
call
push
mov
pushf
push
lea
jmp
aaa
add
btc
bswap
mov
call
movw
clc
clc
and
jmp
jmp
mov
movzbw
movsbw
bswap
lea
push
pushf
cld
mov
jmp
call
sub
pushf
and
mov
push
jmp
sar
cmc
sub
rcr
mov
push
add
pusha
lea
jmp
mov
mov
pushl
jmp
or
dec
mov
pushf
jmp
pusha
movb
pushf
popl
push
call
stc
bswap
test
push
not
test
cmc
bt
jmp
mov
push
pushf
push
mov
call
mov
push
pushl
pushf
lea
jmp
push
movb
fcompl
pusha
mov
lea
jmp
mov
pushf
movb
lea
jnp
pushf
jmp
fildl
push
push
pushf
lea
jmp
lea
btr
not
mov
jmp
mov
call
pusha
inc
cmc
jmp
ror
pop
xor
bswap
bts
clc
movsbw
and
setb
rcr
mov
pushf
stc
call
dec
pushf
jmp
jmp
call
mov
mov
call
pushf
pushf
pusha
mov
movw
movb
pushl
mov
movl
mov
pusha
jmp
jmp
pushf
mov
pushf
pusha
push
pushf
lea
jmp
stc
sub
jmp
sbb
mov
adc
rcl
cmp
mov
clc
jmp
jmp
and
pusha
call
lea
movb
call
cbtw
bt
jmp
pusha
pushl
popl
movb
push
pushf
push
lea
jmp
pushf
sub
clc
and
lea
jg
pushf
jge
push
pushl
pushl
popl
push
pushf
pusha
pushf
lea
jmp
cmc
rdtsc
shl
call
test
not
cmc
cmc
jmp
jmp
pushf
movb
jmp
push
movb
mov
pushf
pushf
pushf
movb
lea
jmp
lea
jo
push
pushf
mov
std
bswap
lea
pushf
xchg
lea
pop
cld
mov
cld
cld
push
jmp
call
pusha
mov
movb
clc
call
ror
push
btr
btc
xchg
push
stc
lea
ror
push
pushl
popl
movsbw
push
setle
setns
jo
mov
bswap
lea
setl
xchg
rol
rol
bts
xchg
neg
inc
jmp
jae
pusha
pusha
mov
jmp
or
cmp
shl
mov
call
jmp
stc
bt
not
bt
and
pusha
pushf
pushf
pushl
mov
pushf
push
push
jmp
pushf
pushf
popl
pushf
pushl
popl
mov
mov
lea
jmp
push
call
pushl
pushf
movw
fstps
pushl
lea
jmp
pushf
jmp
jmp
mov
pushl
popl
pushf
lea
jmp
push
mov
mov
push
call
clc
shr
mov
bsr
btc
mov
bsr
add
add
neg
pusha
xor
lea
mov
rcr
mov
push
clc
bt
shl
cmp
shr
movl
clc
or
lea
jns
bt
xor
push
inc
call
jmp
mov
pushl
movzbl
mov
pusha
mov
pushf
push
push
pushl
ret
mov
call
ror
bt
add
bswap
mov
shl
sbb
pushf
add
jmp
call
mov
mov
mov
cmp
add
movb
call
add
push
jmp
jmp
push
pushf
pusha
movl
call
clc
jmp
pushl
popl
push
pushl
lea
jmp
pushf
popl
push
pushf
jmp
bswap
mov
pusha
movw
pushf
call
add
push
pushf
pusha
lea
jmp
xchg
pusha
jmp
shr
pusha
mov
mov
pushf
push
jmp
mov
pushl
mov
pushl
jmp
pushl
call
pushf
mov
push
pushf
mov
pushf
lea
jmp
pushf
pushl
popl
pusha
push
pushf
lea
jmp
movb
pusha
pushf
pushf
popl
pushf
pushf
lea
jno
popl
pusha
push
pusha
pushl
lea
jmp
movb
mov
pusha
pushl
lea
jmp
add
cmc
neg
movl
lea
jmp
mov
lea
jl
push
pusha
mov
pusha
mov
call
mov
pushf
pushl
movb
pushf
lea
jmp
movb
clc
cmp
mov
bt
cmc
pushf
jmp
movzbw
lahf
mov
dec
bsf
pushf
shl
mov
push
add
jmp
pushf
popl
call
btc
mov
sbb
xor
setg
ror
call
pusha
push
mov
push
pushl
movb
mov
lea
jmp
cmp
jmp
jp
clc
clc
mov
shr
add
pusha
mov
pushl
setb
mov
pushf
push
jmp
mov
pushf
mov
mov
pushf
movw
pushl
lea
jmp
test
cmp
add
pushf
not
stc
sub
stc
jmp
shl
sub
pushf
mov
movzbw
mov
clc
call
clc
xor
pusha
and
sbb
mov
bt
cmc
pushf
sub
pusha
jmp
call
movzbl
push
mov
not
call
not
pushf
popl
call
sub
adc
inc
bsr
mov
bt
cmp
push
pushf
add
mov
pushf
pusha
lea
jmp
pusha
mov
mov
pusha
lea
jmp
clc
clc
ror
jmp
jmp
xor
xor
btr
test
movzbw
ror
mov
call
lahf
xor
push
mov
movsbw
mov
push
push
jmp
pusha
pushf
push
lea
jb
mov
pusha
push
pusha
lea
jmp
pushf
pusha
lea
ja
adc
sbb
shrd
rcl
mov
movsbw
bsf
rol
lea
xadd
lahf
btr
not
sub
pusha
daa
lea
neg
pusha
and
cmc
sub
mov
pop
jmp
movb
pushl
popl
pushf
lea
jmp
movb
mov
pushf
pushf
popl
call
movb
cmc
add
pusha
call
clc
call
mov
pusha
pushl
push
lea
jmp
rol
mov
adc
mov
shl
rol
mov
push
mov
pushf
add
pusha
pushf
pushf
jmp
clc
bt
shl
movb
clc
shr
call
pushf
pushl
inc
jmp
pushl
popf
pushf
push
lea
jmp
jmp
movsbl
mov
ror
clc
add
pushf
jmp
jmp
mov
mov
movb
pushl
pushf
lea
jmp
mov
lea
push
mov
mov
pushf
mov
mov
lea
jmp
stc
call
jmp
test
stc
cmc
shl
call
pushf
popl
pushf
pushl
pushf
pushl
pushl
popl
pushf
pushf
pushf
lea
jmp
cmc
cmc
ror
movb
lea
jmp
bt
sub
push
mov
test
shr
push
mov
push
jmp
call
push
fildl
pushf
lea
jmp
sub
or
mov
test
cmp
cmc
pushf
xchg
pusha
bt
add
jmp
pushl
popl
pusha
push
lea
jmp
mov
rol
movsbw
shld
sub
dec
pusha
mov
stc
clc
sub
cmc
call
js
mov
pushf
lea
jmp
pushl
rep
shl
movzbl
mov
rcl
bt
pushf
mov
call
pushf
pusha
fstps
pusha
lea
jmp
cmp
sub
mov
jmp
test
cmp
sub
stc
push
cmc
pusha
shr
pushf
jmp
mov
mov
pushf
call
shld
shr
bsf
lea
mov
push
sbb
mov
call
mov
bt
bt
mov
pop
bt
pushl
bswap
clc
clc
push
rol
mov
clc
pushf
stc
stc
ror
pushf
lea
jmp
mov
pusha
call
pushf
shl
push
pushf
jmp
shrd
mov
clc
cmc
cmp
clc
add
pusha
pushf
lea
jmp
shl
or
mov
clc
add
pusha
push
pushf
lea
jmp
pushf
popl
mov
call
jmp
bt
mov
cmp
xor
ror
mov
pusha
pushl
sub
jp
sub
clc
shl
jmp
call
call
lea
push
call
cmc
cmc
xor
bt
clc
test
stc
xor
mov
mov
cmc
test
push
sub
jmp
add
pusha
pushf
pushf
jmp
pushf
mov
pushf
lea
jmp
jmp
call
stc
add
push
call
pushl
lea
movl
mov
lea
jmp
push
call
lahf
mov
mov
jmp
test
test
mov
pusha
movb
xor
pushf
inc
cmc
pusha
bt
pushf
rol
bt
test
bt
stc
xor
clc
push
bt
xor
call
pushl
popl
pushf
lea
jmp
pushf
pusha
jmp
jmp
call
shl
shr
not
push
mov
stc
sub
pusha
push
mov
pushf
pushf
pushl
movb
lea
jmp
jmp
pushf
popl
call
bt
sub
pushf
jmp
pushf
call
mov
pushl
push
pushl
lea
jmp
call
mov
push
pusha
jmp
call
mov
pusha
mov
movw
mov
push
mov
mov
pushf
sete
mov
movsbw
pushf
popl
xor
mov
lea
push
xchg
dec
test
shrd
dec
pushl
popl
test
xchg
movl
lea
jnp
mov
pusha
sub
pushf
xor
xchg
jmp
mov
pushf
pushl
ret
mov
call
pushf
pushf
mov
pushf
mov
not
mov
jmp
or
xchg
dec
dec
and
xchg
bsf
cmc
shl
pushl
setne
neg
test
push
dec
and
shld
rol
mov
pusha
add
rcl
neg
btr
bswap
sub
pushf
xor
btc
neg
shld
rcr
sar
lea
bswap
bts
pop
cmp
sub
dec
mov
sub
clc
adc
mov
and
pusha
movsbw
movsbw
add
push
seto
xor
mov
not
setle
shl
xor
dec
bswap
pushl
dec
shl
neg
call
push
jmp
call
jmp
mov
pushf
movb
pushf
inc
test
push
add
jmp
bt
mov
movb
pushl
test
xchg
neg
mov
pop
adc
mov
rcl
mov
not
and
bswap
pushl
popl
shrd
movl
call
pusha
push
mov
call
stc
call
bts
rol
mov
add
mov
mov
mov
jns
add
call
pushl
pushl
popl
mov
push
push
pushf
lea
jmp
mov
pushf
popl
mov
jmp
movb
call
jmp
push
sub
pushf
pusha
push
mov
pushl
call
test
sub
mov
movw
mov
movb
lea
jmp
or
lea
neg
mov
neg
sar
movzbw
mov
cmp
not
test
test
push
test
not
cmc
stc
clc
pusha
and
call
dec
bt
lea
cmp
stc
neg
jmp
stc
add
pusha
movb
lea
jmp
push
pusha
sub
movb
jmp
jmp
pushf
mov
movb
mov
pushf
call
movb
jmp
shld
or
inc
sbb
mov
cmp
test
and
add
setp
mov
pusha
movb
mov
pushf
lea
jmp
jmp
jmp
cld
movzbw
lea
lea
std
pusha
pushl
xchg
pushl
not
mov
mov
push
cld
call
pushf
call
cmp
add
movb
mov
mov
movl
lea
jmp
pushf
popl
pusha
jmp
call
add
cmp
test
clc
std
popf
pusha
pushf
pushf
pushf
lea
jmp
bt
add
movb
pusha
push
lea
jmp
mov
pushl
pushf
lea
jmp
call
pusha
mov
stc
stc
add
mov
call
xor
clc
mov
stc
pusha
sub
push
mov
movb
pushf
movl
lea
jmp
add
pusha
mov
pushl
push
pushf
lea
jmp
pushf
sub
stc
pusha
cmpl
lea
jbe
pusha
pusha
mov
mov
movw
push
mov
mov
call
cmp
xor
call
pushl
popl
movl
lea
jmp
push
push
pushl
lahf
mov
mov
pushf
movb
mov
jmp
sar
pushf
sar
sub
neg
rol
neg
btc
lea
pushf
lea
ror
and
and
bswap
bsr
mov
jmp
bt
push
ror
pushf
lea
jmp
jmp
shl
cmp
cmc
stc
shr
pushf
or
test
cmp
jmp
lea
push
xor
call
pushl
pusha
pushl
popl
push
pushf
pushf
lea
jmp
bt
mov
cmp
mov
cmc
cmc
mov
push
stc
xchg
shl
mov
pushl
pop
lea
mov
rcr
xadd
cmp
mov
bswap
shr
bswap
pushl
popl
shl
movl
jmp
sbb
btr
lea
bswap
and
shl
call
mov
jmp
shl
mov
cmc
mov
cmc
jmp
inc
movzbl
push
mov
jmp
adc
pusha
inc
mov
test
add
jmp
lea
ja
pushf
mov
movzbw
push
bswap
push
pusha
mov
lea
mov
pushf
pushf
popl
not
mov
jmp
pushl
pushf
popl
call
jmp
pushf
pushf
call
pusha
mov
pushl
pusha
movw
mov
mov
call
ror
mov
xor
shrd
bsf
inc
mov
stc
add
pusha
call
pushf
mov
mov
pushf
pushf
movl
lea
jmp
stc
ror
push
sub
xor
rol
neg
rol
ror
ror
sete
sbb
shl
shld
and
ror
bswap
jmp
mov
mov
push
lea
jmp
mov
jmp
stc
cmc
push
sub
clc
bt
add
movw
pushf
popl
pusha
pushl
popl
movb
pushl
lea
jmp
shld
call
pushf
dec
not
movzbl
pushl
xor
pusha
bt
test
sub
call
pusha
stc
mov
clc
stc
stc
stc
mov
bt
mov
pop
inc
not
sar
mov
or
sub
rol
mov
rcl
cmp
neg
shrd
pushl
popl
shrd
shld
movl
sar
mov
rol
shl
rcl
lea
add
call
xchg
or
btr
rcr
cmp
mov
call
pushf
pushf
movl
pushf
movb
mov
mov
pushl
ret
add
pusha
mov
pushf
lea
jmp
mov
push
add
pusha
mov
push
lea
jmp
sar
clc
lea
cmp
cmp
push
lea
ja
shl
dec
xor
stc
mov
and
push
lea
aas
not
movzbl
sub
adc
call
mov
movl
lea
jmp
pushf
popl
push
call
rep
xchg
mov
not
sar
shl
cmc
mov
clc
clc
jmp
bt
movw
add
push
push
call
mov
pusha
pushl
jmp
mov
xor
mov
call
movb
movw
mov
pusha
mov
movb
call
pusha
movb
call
movl
pusha
pushf
push
mov
mov
push
pushl
ret
xor
lea
jle
pusha
pushf
pushf
xchg
call
pushf
popl
pushf
pushl
popl
mov
mov
pushf
pushl
lea
jmp
pushl
lea
jne
push
pushl
jmp
push
add
ja
sub
cmp
cmpl
push
mov
pusha
mov
call
rol
sub
stc
lea
mov
cmp
cmp
jge
cmc
add
pushf
pushf
lea
jmp
mov
bswap
mov
bswap
pop
pushf
popl
call
pushf
mov
jmp
pushf
popl
jmp
stc
test
mov
cmp
jmp
add
and
shl
btr
mov
push
add
pusha
lea
jmp
movb
call
cmp
aaa
mov
jmp
pushl
mov
pushl
pusha
pushl
pushf
lea
jmp
test
cmp
add
call
pusha
mov
sub
pusha
push
pushl
dec
pushf
jmp
test
rol
movzbl
pusha
cmp
xor
call
call
aas
shr
mov
cmp
mov
pusha
sub
cmp
shl
call
pushf
mov
pushf
lea
jmp
mov
mov
pushf
pushf
mov
pushf
lea
jmp
pushf
movb
pushf
mov
pusha
push
lea
jmp
add
xadd
sbb
xor
mov
neg
neg
add
pushf
mov
pushf
mov
pushf
push
pusha
lea
jmp
adc
mov
cmp
clc
add
pusha
mov
pusha
push
lea
jmp
push
mov
bswap
lea
bswap
push
bswap
pushf
jmp
aam
aam
lahf
mov
stc
call
movb
pushl
popl
movb
lea
jmp
movw
lea
jne
call
jmp
jmp
movb
mov
pushf
movb
movl
lea
jmp
pushl
popf
push
lea
jmp
pushf
neg
test
lea
mov
clc
call
pushl
popl
pushf
push
lea
jmp
mov
push
call
jmp
pushf
pushf
popl
push
call
neg
rcl
mov
pusha
mov
mov
sub
clc
shr
call
pushf
inc
pushl
movb
add
movb
bt
xor
cmc
pushf
call
push
movsbw
pusha
mov
movb
push
push
pushf
lea
jmp
mov
mov
cmc
shl
ror
add
shl
neg
sbb
bts
bswap
bsr
btc
neg
stc
sbb
lea
cmp
sub
push
pushf
movb
lea
jmp
mov
mov
pushf
call
push
jmp
pusha
pushf
mov
pushl
mov
call
mov
jmp
push
cmc
mov
test
not
pushf
mov
clc
call
call
movsbw
pushf
mov
movsbw
mov
movw
pushl
popl
not
bswap
mov
jmp
lea
bswap
pusha
mov
jmp
pushf
call
push
jmp
pushl
popl
pusha
pushl
movw
mov
lea
jmp
call
pushl
popl
movw
movw
mov
mov
lea
jmp
jmp
push
mov
pushf
mov
pushl
pusha
movb
lea
jmp
jmp
mov
movb
pusha
pusha
mov
mov
pushf
call
call
xadd
movzbl
shr
bswap
ror
neg
add
bswap
inc
mov
ror
bt
shl
jmp
movb
pusha
mov
push
call
mov
jmp
pushf
pushf
mov
call
clc
mov
mov
jmp
ror
ror
dec
mov
rcl
setns
call
pushf
pusha
pushl
popl
pushf
movb
lea
jmp
push
pushf
pushl
popl
movb
pushf
movl
lea
jmp
mov
jmp
movsbw
mov
pusha
pusha
mov
jmp
neg
movsbw
movzbw
inc
movzbw
pushf
not
not
rol
stc
shl
shr
bsr
xor
inc
mov
cmc
clc
call
pushf
pushl
lea
jne
bt
bt
push
movw
sub
pushl
xchg
pushl
movb
pusha
movl
jmp
rcl
sar
mov
movsbl
sar
clc
pop
neg
pop
rol
setns
pop
rol
xadd
bsf
pop
std
rdtsc
clc
mov
pop
xadd
inc
not
rcr
pop
ror
btr
pop
cld
pop
sbb
shld
sar
btr
pop
jbe
btc
cmp
popf
mov
push
mov
mov
pusha
push
pushl
ret
call
clc
or
bsf
mov
or
or
mov
test
not
clc
pusha
not
pushf
cmc
and
movw
movb
push
jmp
clc
xor
pushl
bt
rol
call
cltd
sar
jmp
jmp
mov
call
pushl
pushf
lea
jmp
call
test
adc
inc
jmp
mov
mov
pushl
mov
call
call
movb
mov
pushf
mov
call
jmp
jmp
bt
sub
movb
pushf
call
btr
movsbw
shld
test
mov
pushf
push
cmp
cmp
add
mov
pusha
lea
jmp
movw
pushf
jmp
inc
bt
stc
lea
bt
call
mov
mov
call
stc
jmp
sub
clc
add
pushf
call
movb
pushl
popl
pusha
pushf
movl
lea
jmp
shld
mov
rol
shl
inc
rcr
mov
cmp
test
pushf
pushf
sub
pushl
lea
jp
pushf
shr
jmp
jmp
cwtl
ror
mov
shl
mov
bt
call
jmp
call
pushf
lea
jmp
jbe
pusha
pushl
popl
pushf
push
pushf
push
lea
jmp
push
jmp
sar
inc
stc
xor
mov
test
call
call
pushf
pushf
popl
jmp
mov
pushf
lea
jne
cmp
shrd
bts
mov
stc
call
jmp
mov
call
jmp
push
pushf
push
pushf
mov
pusha
pushf
mov
movw
mov
push
pushf
popl
push
pushl
popl
pushf
lea
jmp
call
mov
jmp
test
test
add
pushf
push
movw
lea
jmp
pusha
call
push
mov
bt
pushl
mov
pusha
add
pushf
lea
jmp
mov
pushf
mov
lea
jmp
pushf
bt
test
bt
mov
shr
mov
bt
sub
bt
shr
pushf
mov
pushf
lea
je
pusha
pushf
popl
movb
pusha
mov
movb
pushl
popl
movl
pushf
pushl
pushf
lea
jmp
lea
ja
sub
movsbw
mov
adc
rol
pushf
lea
dec
sar
shl
sub
or
rol
adc
inc
lea
xor
and
pop
pusha
and
bts
bswap
sub
jmp
pushf
pusha
pushf
mov
pushf
movw
mov
mov
movw
pushf
popl
pushf
mov
pusha
bt
jmp
stc
add
pushf
mov
call
jmp
pushl
fildl
pushf
mov
lea
jmp
pushf
jmp
mov
call
pusha
rep
movsbw
not
not
mov
rol
add
shld
mov
bt
push
call
pushl
popl
pushf
lea
jmp
pushl
popl
push
mov
pushl
movb
lea
jmp
sub
cmp
push
clc
bt
shr
call
push
call
push
mov
push
jmp
mov
pushl
mov
pushf
movw
pusha
lea
jmp
pusha
pushf
popl
lea
cld
not
mov
not
call
add
mov
lea
jmp
pushf
bt
mov
pushf
xchg
neg
bsr
or
adc
push
movsbl
shrd
push
pusha
shld
movsbw
clc
pushl
popl
and
shrd
pop
cmc
movl
stc
mov
pushl
cmc
push
jmp
call
pushf
pushl
mov
call
mov
call
shr
jmp
mov
pushl
lea
jmp
bsf
or
cmc
movzbl
bsf
call
stc
push
stc
add
movb
mov
pushl
mov
pushl
ret
sub
call
dec
test
clc
add
rol
btc
ror
shl
add
jmp
mov
pushf
mov
pushf
call
call
jmp
call
bsr
movzww
test
cmc
cmc
stc
lea
jmp
xchg
mov
movsbw
mov
movzbw
jmp
xorb
lea
jmp
mov
jmp
call
shld
cmp
mov
cmp
pushf
push
add
pushf
pushf
popl
mov
jmp
call
call
mov
not
pushl
not
mov
push
bswap
mov
pushf
mov
bswap
not
pushf
popl
pusha
push
inc
mov
mov
movzbw
mov
bswap
jmp
jmp
mov
pushf
push
lea
jmp
push
pushl
popl
push
movb
lea
jmp
das
mov
rcl
mov
cmc
pushf
sub
bt
test
shl
call
sub
mov
and
mov
pushf
movw
mov
jmp
stc
sub
movb
push
mov
mov
push
lea
jmp
sub
push
movl
mov
pushf
push
lea
jmp
xor
cmc
cbtw
push
cmc
cwtl
cmp
push
sub
push
pushl
mov
inc
pushf
mov
movb
movl
mov
lea
jmp
clc
mov
ror
pushf
pushf
lea
jmp
pushl
popl
mov
push
lea
jmp
jmp
push
mov
push
call
neg
test
shl
movzbl
push
bt
xor
movw
inc
bt
stc
rol
stc
test
xor
mov
jmp
jmp
rol
neg
sub
mov
push
pusha
add
push
pushl
lea
jmp
mov
jmp
pushf
jmp
call
pushf
movb
mov
jmp
jmp
mov
call
add
jmp
pushf
push
pushf
popl
pushf
cmc
call
mov
push
lea
jmp
shl
btc
and
mov
bts
bt
sub
bswap
inc
lea
movzbw
call
mov
jmp
bsr
dec
cld
lea
popf
pusha
pushf
jmp
pushl
popl
push
lea
jmp
pushl
call
jmp
pushf
fcompl
mov
push
lea
jmp
pushf
decl
jmp
push
movzbl
not
mov
pushf
mov
movsbw
lea
jmp
stc
movzbl
test
sub
push
movb
call
call
mov
push
pushf
jmp
mov
movl
pushl
popl
pushf
pushf
mov
movb
lea
jmp
pop
lahf
mov
push
jmp
pusha
pushf
mov
mov
mov
push
mov
pushl
pushf
lea
jmp
pushl
push
mov
pushl
popl
mov
lea
jmp
jmp
movzbl
btr
add
ror
dec
add
cmc
btc
not
mov
bt
ror
sub
mov
btc
add
sub
bsf
mov
cmp
add
push
pushl
mov
pushf
mov
lea
jbe
push
lea
pusha
movw
push
movb
lea
jmp
mov
pushf
popl
pusha
jmp
push
jmp
movsbl
mov
jmp
pushf
push
mov
mov
push
push
pushf
lea
jmp
push
mov
pusha
lea
jmp
mov
pushf
pusha
lea
jmp
cmp
bswap
push
pusha
lea
cmc
pushf
test
add
jmp
jmp
pushf
jmp
movb
mov
mov
lea
js
pushf
lea
jne
test
mov
clc
stc
and
call
test
jmp
pushl
jmp
jmp
movw
clc
bt
sub
stc
shr
call
jmp
not
lea
mov
setl
pusha
bswap
lea
jb
mov
push
jmp
mov
mov
movw
movw
lea
jmp
mov
pusha
movb
idivl
pusha
call
dec
xchg
setno
bswap
movsbw
xchg
movsbl
pop
xchg
pushl
pushl
setl
inc
xchg
inc
mov
call
not
cmp
neg
call
rol
not
dec
bswap
not
neg
sbb
cmp
mov
test
call
jmp
xchg
pushl
rcl
btr
pop
pushl
popl
pusha
movl
movzbl
mov
jmp
push
jmp
push
pusha
bt
sub
test
cmc
stc
pusha
xchg
movb
clc
jmp
call
mov
lea
push
lea
call
jmp
call
push
mov
movb
pushf
popl
jmp
push
jmp
bsf
setno
call
mov
mov
shr
mov
test
pusha
pusha
sub
call
or
mov
jmp
call
mov
mov
movb
pushf
jmp
mov
mov
jmp
cmc
fnstsw
clc
call
pusha
cmc
call
pusha
add
pushf
lea
jmp
mov
mov
push
jmp
movb
mov
push
mov
mov
mov
pusha
lea
jmp
jmp
shl
inc
bsr
mov
push
add
pushf
lea
jmp
push
pushl
movb
pushf
popl
call
jmp
pushl
popl
push
mov
pushf
push
lea
jmp
mov
mov
pushf
pusha
push
push
lea
jmp
cmc
call
test
sub
pusha
mov
pushl
mov
lea
jmp
bt
clc
sub
pushf
mov
push
lea
jmp
jmp
mov
call
mov
pushl
lea
mov
pushl
movzbl
pop
jmp
pusha
mov
pusha
call
call
cmc
bt
test
add
pushf
sub
clc
xor
pushf
call
pushl
popl
pusha
lea
jmp
jmp
mov
mov
lea
jmp
call
mov
pushf
mov
pusha
push
pushf
lea
jmp
push
mov
lea
jne
clc
sub
pushf
mov
pushf
movw
xchg
pushf
push
pushf
jmp
test
sub
test
push
pushl
shr
pushl
jmp
mov
stc
cmp
push
call
cmc
sub
call
btr
push
setno
rol
mov
jmp
not
call
popa
add
inc
arpl
add
int
inc
dec
popa
add
test
jne
les
cwtl
add
les
add
les
add
les
add
inc
aas
pushf
add
les
add
add
lret
std
popa
add
add
jae
les
lds
les
add
test
add
les
add
les
mov
test
les
inc
xor
popa
add
test
add
test
add
add
les
inc
xor
jbe
add
xchg
add
test
popa
add
les
add
mulb
les
add
test
add
les
add
add
outsb
add
les
add
les
add
add
mov
add
loopne
add
les
add
add
into
add
inc
rolb
add
test
test
add
fs
test
movl
inc
lea
add
add
pushf
add
add
int3
add
add
cwtl
add
inc
arpl
add
fs
test
pushf
add
add
mov
add
loopne
add
add
mov
add
add
scas
add
inc
mov
fs
add
fadds
add
fs
test
in
add
add
popa
add
add
mov
add
in
add
add
addl
mov
add
les
add
imulb
inc
fadd
add
test
gs
test
lret
std
jge
inc
arpl
add
les
addb
inc
addl
scas
mov
add
inc
fs
les
add
les
movl
in
add
test
add
inc
loop
add
add
stos
add
les
add
les
les
les
popf
add
inc
mov
int
inc
dec
push
add
inc
dec
outsl
add
add
addl
add
test
add
inc
loop
add
test
addl
popf
jle
add
pushf
add
inc
addb
aas
int
inc
dec
push
add
test
add
les
add
les
add
inc
cld
xchg
add
inc
insl
cwtl
add
inc
and
mov
test
mov
add
test
addl
xor
inc
insl
addl
and
outsb
add
add
lods
add
inc
insl
push
add
les
fadds
inc
addl
sbb
test
add
in
add
les
movb
inc
addl
mov
mov
add
idivb
inc
insl
xchg
add
les
add
test
add
test
test
add
add
outsl
add
mov
pushf
popl
movzbl
call
push
mov
pusha
pushf
popl
call
sub
mov
jmp
push
mov
pusha
pushf
popl
cmc
bt
mov
pusha
stc
pushl
push
mov
cmp
stc
mov
cmc
mov
push
xchg
adc
test
mov
inc
cmp
shrd
mov
pop
pushl
popl
rol
bts
movl
sub
mov
test
push
pushl
call
pusha
movb
call
dec
movzbw
movzbl
rcl
bts
and
xor
jge
pusha
inc
rcl
not
shrd
mov
neg
jmp
call
movw
mov
mov
movb
lea
jmp
pushf
stc
sub
jmp
sub
jmp
mov
pushl
pushf
lea
bswap
pushl
movl
movsbl
jmp
pushf
call
pusha
movl
pushl
popl
pushl
pushf
pushf
push
lea
jmp
bt
jmp
cmc
xor
clc
rol
movb
clc
add
jmp
pushf
pushf
inc
call
cmp
add
jmp
sub
pushf
pushl
or
movzbl
jmp
cmc
stc
ror
cmc
xor
bt
sub
pushf
mov
pusha
lea
jmp
lea
jne
cmc
clc
xor
pushf
jmp
mov
pushf
pushl
ret
pushl
pushl
popl
pushf
pushf
push
push
lea
jmp
movb
lea
je
pushf
sub
mov
call
pushl
popl
push
pushf
pushl
lea
jmp
bt
movsbw
daa
mov
pusha
cmc
sub
clc
sub
pushf
pusha
pushl
test
xchg
push
pushl
add
mov
inc
mov
sub
stc
clc
test
stc
cwtl
test
mov
movb
sub
movb
movw
lea
jnp
mov
pushf
lea
jmp
cld
mov
push
cld
jmp
cmp
bsr
mov
test
call
push
rol
mov
neg
mov
bt
cmp
not
call
mov
push
push
push
mov
jmp
bt
stc
shl
bt
call
lea
jae
and
clc
cmp
pushf
lea
ja
pushf
lea
jne
not
cmc
xorb
setl
sete
movzbl
movsbw
pop
pusha
pusha
lea
jmp
jmp
push
ror
push
mov
push
pushf
lea
jmp
clc
add
sbb
mov
pushf
call
bt
not
pushl
pushf
ror
pushf
clc
stc
pusha
add
cmp
jmp
pusha
jmp
pusha
mov
movw
pusha
mov
pop
call
mov
pushf
lea
jmp
mov
cmc
mov
jmp
rcl
push
not
bt
movsbw
call
pushl
pushf
mov
jmp
jmp
pushf
call
pusha
jmp
jmp
pushf
popl
jmp
mov
movw
mov
jmp
pushl
inc
movb
mov
lea
jmp
jmp
movl
cmc
shl
mov
clc
push
movb
bswap
stc
mov
call
pusha
movw
lea
jmp
stc
std
pushl
popf
push
lea
jmp
add
movb
mov
pushf
movb
pushl
lea
jmp
add
bsf
mov
pushf
test
push
add
jmp
mov
pushf
pushl
push
mov
call
movsbl
cltd
lea
and
mov
lea
mov
cmc
jmp
mov
jmp
bswap
stc
call
cmc
cmc
mov
lea
jno
bt
sub
pusha
pusha
pushl
pushf
lea
jne
cmc
cmp
xor
jmp
call
push
call
cmp
cmc
bswap
cmp
test
add
jmp
mov
jmp
bt
rol
cmc
clc
add
test
pusha
push
mov
cmc
sub
jmp
mov
bswap
jmp
push
push
push
mov
pusha
pushf
mov
mov
pushf
mov
pushf
mov
mov
movb
pushf
jmp
clc
rcl
mov
cmp
call
call
inc
sar
push
clc
movzbl
call
mov
movw
lea
movzbw
pushf
popl
jmp
pushf
mov
call
jmp
sar
btr
mov
push
stc
push
cmp
add
pushf
pushl
pusha
movb
lea
jmp
call
pusha
not
dec
sbb
bsr
jmp
rcr
shl
add
add
clc
pusha
mov
shr
sub
add
clc
pop
neg
not
inc
rcl
movsbw
xor
rol
add
pushf
inc
bsf
shrd
add
movsbw
movzbl
call
dec
test
mov
xor
sub
mov
stc
pushf
bt
sub
movb
bt
shl
pusha
push
call
push
xchg
xadd
lea
mov
neg
or
or
neg
add
jmp
mov
shl
add
seto
pusha
setl
mov
pusha
mov
pushf
push
pushl
mov
lea
jmp
or
test
movsbw
cmc
mov
jnp
add
pusha
lea
jmp
mov
movb
jmp
lahf
pusha
mov
movsbl
cwtl
jmp
xor
btc
pop
btc
movzbl
push
bswap
pushl
mov
movb
clc
jmp
call
mov
push
push
push
pushf
lea
jmp
pushf
mov
movl
push
jmp
sub
pusha
mov
pushl
pushl
pushl
push
lea
jmp
mov
pushf
call
push
mov
movb
jmp
mov
push
pushf
pushf
pushl
ret
mov
lea
jge
pushf
pushf
popl
pushf
pusha
pushl
popl
pushl
pushf
lea
jmp
pushf
mov
pushf
pushf
jmp
jmp
movl
movw
dec
call
add
push
call
mov
call
pusha
sub
movl
jmp
movb
mov
movb
pushf
lea
jmp
pushf
mov
fcomps
pushf
push
movl
pushf
lea
jmp
mov
jmp
pusha
pushl
popl
mov
push
push
lea
jmp
pushf
pushf
pushl
popl
pushf
push
lea
jmp
cwtl
push
movsbw
mov
movzbw
lahf
movsbw
call
rcr
sar
not
das
notl
inc
shrd
mov
pushf
stc
sub
cmp
cmp
and
mov
jmp
call
pushl
popl
mov
mov
lea
jmp
bsf
rcr
bsr
rcr
mov
neg
push
mov
call
bt
jmp
movzbl
pusha
mov
pushl
movb
lea
cpuid
clc
sub
cmp
cmpl
pusha
jmp
pushf
mov
jmp
call
jmp
btc
mov
cmp
stc
pusha
add
pushl
pusha
movl
pushf
lea
jmp
mov
lea
jbe
push
clc
bt
push
cmc
bt
clc
call
sar
stc
jmp
jmp
jmp
pushl
popl
movw
movl
movw
lea
jmp
pushf
pushf
pushf
popl
lea
je
pushf
pushl
popl
pusha
lea
jmp
jmp
inc
push
pushf
dec
mov
mov
mov
push
push
pushl
popl
jmp
aam
bsr
fnstsw
cmc
sub
push
mov
mov
pusha
pushf
lea
jmp
setns
movzbl
bsr
lea
mov
or
mov
bt
jno
pushf
cmp
add
pusha
jmp
call
jmp
dec
stc
xor
call
neg
mov
call
push
cmp
push
bswap
clc
movl
bt
add
stc
stc
movb
neg
movb
lea
jmp
movb
pushl
call
pushl
mov
mov
jmp
mov
jmp
rol
call
or
sub
rcr
mov
shl
test
and
and
mov
call
push
movb
sub
call
movb
shr
lea
jge
pusha
mov
jmp
pushl
movl
push
mov
push
pushf
pushf
movb
lea
jmp
cmc
mov
push
bt
mov
pushl
mov
bswap
call
push
pushf
popl
pushf
pushf
pushl
popl
mov
movb
lea
jmp
pushf
lea
ja
lahf
xor
mov
bts
das
lea
cmp
xchg
cwtl
cmc
sub
pushf
or
lahf
dec
lea
sar
dec
add
movzbw
and
add
add
sub
not
pusha
mov
pusha
push
lea
pushf
popl
lea
xchg
pusha
bswap
not
pop
mov
pushf
push
std
bswap
lea
std
lea
jno
push
movzbw
bswap
jmp
bswap
movl
cmc
bt
jmp
pushf
call
add
pushf
test
pushl
cmc
sub
push
call
rol
mov
rcl
mov
pushf
mov
bt
add
push
push
pusha
lea
jmp
cmp
stc
sub
test
pushf
bt
sub
jmp
mov
stc
jmp
movl
mov
jmp
sbb
mov
jmp
push
movb
mov
shl
inc
mov
mov
sub
jmp
jmp
call
or
shrd
or
mov
push
jmp
pushf
popl
cmp
cmp
test
movb
mov
jmp
mov
lea
jo
pusha
pushf
popl
pusha
mov
call
adc
rcr
shld
mov
test
add
push
lea
jmp
call
push
pushf
pushf
rep
cmc
movzbw
xchg
mov
bts
rol
bt
mov
jmp
pushl
mov
inc
stc
clc
movb
pushl
ror
mov
lea
jmp
shld
bsf
movsbw
xchg
not
clc
mov
call
mov
push
mov
mov
pushf
lea
jmp
not
inc
not
bsr
sbb
mov
clc
lea
sar
sub
shld
cmp
ror
mov
push
pusha
dec
jmp
test
call
movb
mov
movw
pushf
pushl
popl
pushf
lea
jmp
pushf
popl
pushf
pushf
mov
lea
jle
push
mov
pusha
call
neg
clc
rcr
rol
mov
rcr
add
mov
js
stc
push
clc
sub
push
clc
stc
pushf
shl
call
movl
call
lea
push
call
pushf
pushf
pushf
popl
mov
mov
jmp
pushf
pushf
popl
jmp
mov
pushf
pushf
pushf
jmp
pushf
movb
push
pushl
popl
movb
mov
mov
movb
lea
jmp
mov
push
pushf
popl
pushf
stc
bt
mov
mov
stc
mov
cmc
mov
call
mov
stc
bt
call
shl
jmp
add
movzbw
mov
call
mov
call
not
mov
movsbw
pusha
add
add
bsr
bt
btc
sub
sub
rol
mov
pushf
shl
jmp
jno
bswap
bswap
mov
sete
setge
mov
push
idivl
pusha
mov
lea
jno
pusha
pushf
mov
call
cmp
mov
sbb
neg
push
shr
movsbw
sbb
push
pusha
mov
shrd
sub
bt
pushl
popl
rcl
adc
btc
rcl
movl
mov
bswap
bt
bswap
mov
rcr
btc
stc
add
clc
shl
shrd
shl
bswap
pushf
neg
shld
neg
pushl
bsf
shld
lea
call
test
shl
mov
cmp
cmp
sub
movb
movb
cmc
call
cmp
cmc
pusha
sub
pusha
push
mov
pushf
lea
pushf
pushf
mov
lea
jmp
not
test
test
cmp
not
stc
cmc
and
movl
mov
jmp
shld
mov
shr
neg
cmc
shr
mov
test
add
pushf
call
movb
pusha
xchg
test
add
pushl
sub
jmp
pusha
pushf
movb
mov
pushf
mov
movb
pushl
movb
mov
lea
jmp
call
cmc
mov
clc
mov
pop
movzbw
mov
shld
mov
mov
shl
shl
pushl
popf
movsbl
movzbw
not
pop
mov
movsbw
pusha
movzbw
mov
mov
bswap
mov
pushf
pop
mov
pushf
pushl
ret
jo
pusha
movb
mov
fcomps
pushl
lea
jmp
cmc
and
call
mov
jmp
pusha
jmp
pushf
mov
pusha
push
pushf
pushf
popl
push
movl
call
pushf
dec
test
test
mov
pushf
sub
mov
pushl
call
bsr
rcr
or
mov
pushl
call
xchg
mov
and
clc
call
call
cmp
add
pushf
movb
pushf
pushf
lea
jmp
call
pushf
push
btc
not
stc
mov
stc
xchg
stc
bswap
push
stc
rol
cmc
xchg
push
bswap
movsbw
rol
bt
push
clc
push
xchg
call
pushf
popl
pushl
mov
push
pushf
lea
jmp
push
shld
inc
aas
mov
call
movw
call
push
pushf
mov
push
push
push
lea
jmp
sete
jmp
setg
mov
call
pushl
jmp
push
pushl
popl
push
cmp
cmp
movw
add
pushl
pusha
pushl
popf
pushf
push
push
lea
jmp
lea
jge
decl
pusha
pusha
mov
pushl
lea
jne
pusha
call
pusha
push
jmp
call
mov
movb
pushf
mov
lea
jmp
pusha
pushf
movsbw
pushf
mov
call
mov
pusha
pushf
mov
movb
pushl
mov
movl
mov
mov
pushf
pushf
push
lea
jmp
mov
mov
push
pushf
push
lea
jmp
mov
movl
pushf
lea
jmp
pushf
setge
setno
mov
pusha
call
pushf
movb
mov
pushf
pushl
pushf
push
pushl
ret
push
pusha
movb
pushl
popl
pushl
push
pushf
pushl
lea
jmp
pushl
popl
pusha
push
push
pushf
lea
jmp
mov
call
pushl
neg
rcr
mov
cmp
cmp
add
jmp
pushl
popl
mov
movw
movb
lea
jmp
pushf
mov
cmc
bt
mov
clc
pushf
jmp
in
mov
or
mov
or
mov
or
js
jnp
js
adc
js
and
or
js
push
js
movsl
or
pop
or
sub
or
and
mov
js
scas
or
cmp
stc
jmp
or
addr16
or
js
in
or
scas
jl
js
lods
or
rorl
scas
or
pusha
or
rorl
movsb
or
and
add
or
arpl
or
mov
or
lcall
js
xor
js
in
js
fwait
or
arpl
or
std
xlat
or
loope
js
insl
or
sbb
or
js
movsl
or
push
js
xchg
js
lds
js
insl
or
test
push
js
fs
sbb
push
pop
or
fildll
js
movsb
or
imul
jecxz
or
loop
or
xor
or
js
lds
js
insl
or
aam
or
js
jecxz
js
ljmp
mov
or
xchg
lods
or
cmp
outsl
jne
js
xor
js
sbb
js
sbb
js
sbb
js
sbb
js
sbb
js
sbb
js
sbb
js
sbb
js
dec
or
stos
or
cmpsb
or
dec
or
xchg
js
xchg
or
mov
or
xor
or
js
in
or
and
orb
scas
or
insl
or
pop
or
fildll
js
and
and
or
mov
or
mov
or
mov
rorl
js
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
ss
jo
or
mov
or
rorl
loope
js
jecxz
js
nop
or
sbb
or
cmp
or
pusha
or
addr16
and
js
sub
or
cmp
or
movsl
or
xor
js
insl
or
jl
js
outsl
or
arpl
or
push
rorl
aad
js
jnp
js
jg
js
jp
js
and
sub
or
lods
mov
or
outsl
jne
js
mov
or
rorb
js
xchg
or
pop
or
jmp
js
les
xchg
push
or
js
addr16
sub
js
sub
aam
or
js
rorb
js
insl
or
ss
and
js
dec
or
dec
or
add
js
imul
movsl
sub
sub
or
mov
js
loope
js
pop
or
sub
or
cmp
or
mov
or
loope
js
mov
or
sub
js
lods
or
addr16
pop
jb
js
adc
js
rorl
js
movsl
or
jp
js
jne
js
jmp
js
rorb
js
and
test
or
adc
js
rorl
js
sbb
js
sbb
js
sbb
js
sbb
js
sbb
js
sbb
js
sbb
js
sbb
js
rorl
jns
js
xlat
or
loope
js
fwait
or
cmp
or
out
aad
js
in
or
loopne
or
ds
sub
js
mov
or
mov
or
js
add
js
xchg
js
jb
js
xchg
or
mov
or
daa
add
js
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
repz
lock
or
daa
add
js
jne
js
aad
js
les
pop
push
js
je
js
fwait
or
xchg
push
or
add
add
aad
push
pushf
movb
mov
pusha
push
pushf
pushf
lea
jmp
mov
mov
pushf
jmp
call
mov
stc
jmp
rep
sub
clc
ror
mov
or
not
rol
bsf
mov
jmp
pushf
movb
mov
jmp
mov
pushf
movb
lea
jmp
add
push
lea
jmp
pusha
mov
pusha
pushf
lea
jmp
pushf
and
setnp
mov
neg
mov
stc
cmc
add
jmp
jmp
mov
push
lea
jmp
pushf
push
pushf
jmp
jmp
pusha
mov
push
lea
jmp
add
stc
sub
pushf
mov
mov
pushl
mov
pushf
pusha
lea
jmp
movb
pushf
popl
pusha
call
mov
pusha
pushf
pushf
pushf
lea
jmp
decl
mov
jmp
mov
call
pusha
jmp
pusha
jmp
cmp
not
test
not
stc
push
lea
jnp
stc
sub
pusha
pushf
pusha
and
jmp
pushl
popl
movb
push
movb
lea
jmp
sub
pushf
push
mov
push
ror
pushl
clc
cmp
xor
cmp
mov
test
pusha
movb
sub
pushl
mov
pushf
push
movb
mov
lea
jmp
push
call
pushf
mov
pusha
lea
jmp
push
divl
pusha
mov
movb
pushf
mov
call
push
movw
mov
pushf
push
mov
pusha
pusha
pushf
popl
call
xor
rdtsc
btc
rdtsc
push
pushl
cmc
sub
mov
pushf
mov
mov
call
jmp
pushf
pusha
stc
sub
call
adc
mov
dec
xor
shl
or
sub
btc
movzbl
sbb
btr
bswap
pusha
mov
pushf
cmp
movw
test
not
cmp
add
jmp
mov
pushf
jmp
push
mov
pushf
lea
jmp
push
call
pushl
pusha
mov
mov
movb
mov
push
mov
push
movw
pushf
popl
call
mov
bt
movb
xchg
bt
not
mov
pushl
popl
pushl
movzbw
bswap
movl
call
call
pusha
pushf
popl
jmp
cmc
jmp
bt
mov
jmp
push
jmp
call
mov
idivl
jmp
add
jmp
dec
jmp
movl
push
mov
push
pushf
push
lea
jmp
setge
shr
mov
test
bt
add
pusha
call
mov
xadd
jmp
pushf
popl
call
stc
stc
push
cmc
cmc
stc
bt
push
bt
jmp
or
stc
xor
lea
ja
inc
pushf
pusha
mov
decl
pushf
pushf
call
pushf
pushf
jmp
neg
not
mov
bt
call
jmp
mov
lea
jae
pusha
pushf
popl
stc
call
stc
stc
xor
jmp
sub
pusha
rol
mov
pushf
lea
pushf
push
jmp
inc
neg
or
btr
mov
call
cmp
js
bt
add
jmp
ror
aas
mov
neg
mov
test
cmp
test
jmp
pushf
mov
pushf
mov
pushl
mov
lea
jmp
xchg
cmp
cmc
push
sub
clc
test
sub
jmp
bswap
pop
pop
push
mov
call
lea
jge
pushf
jmp
sub
call
add
pusha
call
mov
lea
jae
pusha
mov
pushf
pusha
jmp
bt
bt
pusha
pusha
add
pushl
pushf
pushf
mov
lea
jmp
add
pushf
pushl
lea
jmp
call
push
jmp
jmp
movsbw
movl
bswap
pusha
movzbw
pushl
mov
pusha
pushf
jmp
call
mov
setg
mov
pusha
pusha
mov
pushf
mov
push
movb
movb
pushf
lea
jmp
sub
call
add
lea
jge
pushf
mov
pushl
mov
lea
jmp
lea
jp
mov
pusha
call
inc
call
movsbw
setne
bswap
pushf
mov
pusha
mov
call
pusha
fwait
mov
pushl
lea
jmp
jmp
cmc
mov
bt
add
call
jne
dec
test
mov
jmp
mov
push
pushf
jmp
sub
mov
jmp
mov
cmc
pushl
popl
stc
movl
btr
not
rcl
rol
mov
stc
clc
pusha
ror
push
push
movw
lea
jmp
cltd
mov
mov
sets
mov
pusha
pusha
idivl
call
push
mov
call
shld
pushf
rcr
pushf
mov
sub
jl
pushf
clc
stc
add
pushl
push
lea
jmp
stc
call
shr
stc
mov
inc
add
push
mov
mov
mov
mov
movw
pusha
lea
jmp
pushl
popl
push
push
pushf
lea
jmp
inc
clc
bt
test
or
jmp
mov
movl
mov
mov
lea
jmp
mov
mov
movb
pushf
mov
lea
jmp
pushl
movb
pushf
popl
call
movw
mov
bt
stc
push
mov
test
mov
stc
mov
cmc
xchg
shl
mov
inc
shrd
mov
xor
cmp
neg
btc
pushl
popl
dec
shrd
shl
movl
sbb
bsf
mov
cmp
call
xchg
mov
ror
ror
bswap
mov
stc
add
jbe
pusha
push
pushf
mov
movb
lea
jmp
pushf
popl
mov
pushf
pushf
pushl
popl
pushf
lea
jmp
not
push
notl
daa
cmp
btc
cmc
mov
call
mov
clc
clc
add
pusha
mov
pushf
lea
jmp
flds
pusha
push
pushf
mov
lea
jmp
mov
movb
push
mov
mov
bt
clc
push
mov
pushf
call
not
movb
mov
pushf
pushf
pushl
pushf
mov
movb
pushf
mov
lea
jmp
jmp
pusha
call
sar
neg
mov
cmp
pusha
pushf
sub
clc
pushf
shr
mov
mov
call
pushf
pushf
mov
lea
jno
push
push
push
mov
pusha
pushf
movb
pushl
lea
jmp
call
clc
adc
mov
sbb
call
mov
bt
rol
stc
pushf
cmc
pushl
add
pushf
pushf
push
jmp
movl
movb
mov
call
call
das
movzww
pusha
clc
xchg
test
push
bt
xor
clc
ror
jmp
test
sub
push
call
add
clc
cmp
sub
push
stc
sub
jmp
mov
das
sar
mov
push
jmp
pushf
lea
jmp
mov
cmc
pushl
mov
movb
sub
call
bt
add
pusha
jmp
jmp
mov
pusha
push
pushf
mov
pushl
pushl
movb
mov
pushf
jmp
mov
test
test
sub
cmc
add
call
pusha
jmp
jmp
mov
pushf
push
pushf
pushl
ret
pusha
mov
jmp
push
not
ror
clc
pushl
rcr
pushf
movl
btr
call
cmc
mov
shl
jmp
pushf
mov
call
pusha
lea
jmp
rol
sbb
neg
mov
call
xchg
call
push
pushf
movw
mov
pushf
call
lea
je
cmc
sub
jmp
push
and
test
cmc
pop
and
mov
pusha
sub
pusha
mov
mov
mov
lea
jmp
shld
btc
lea
mov
mov
ror
stc
call
add
jmp
pushf
pushl
popl
pushl
lea
jmp
mov
mov
pushf
pushl
ret
pushf
call
push
pushf
mov
push
jmp
pushf
popl
movw
call
stc
bt
sub
pushf
add
jmp
cmp
cwtl
aaa
aas
mov
rol
lea
stc
mov
stc
cmp
not
push
mov
not
clc
clc
pushl
pushl
and
pusha
movl
mov
movb
pushf
pushf
popl
call
sub
jmp
aas
mov
push
adc
insl
push
adc
add
adc
mov
adc
nop
push
adc
push
adc
lcall
sahf
sbb
adc
in
adc
adc
nop
push
adc
enter
test
adc
mov
pop
adc
xchg
adc
adc
arpl
adc
pop
pop
adc
adc
adc
mov
adc
push
adc
mov
pop
adc
ljmp
lcall
adc
mov
adc
pop
adc
adc
adc
push
adc
pop
adc
adc
adc
adcl
adc
nop
push
adc
pop
adc
mov
adc
adc
adc
test
adc
lcall
and
adc
adc
xchg
adc
adc
movhps
insl
jbe
adc
js
adc
adc
adc
mov
pop
adc
adcl
adc
add
adc
clc
adc
adc
xchg
push
adc
adc
adc
push
adc
ljmp
fstps
pop
adc
adc
mov
push
adc
imul
adc
pop
adc
xchg
adc
adc
adc
adc
nop
push
adc
insl
push
adc
js
adc
movhps
mov
pop
adc
push
adc
sbb
adc
insb
push
adc
pop
adc
xchg
push
adc
loopne
adc
mov
push
adc
test
adc
push
adc
insl
push
adc
enter
arpl
adc
jbe
adc
mov
push
adc
insb
push
adc
push
push
adc
push
push
adc
insb
push
adc
pusha
pop
adc
mov
adc
adc
in
adc
adc
lcall
int3
arpl
adc
dec
pop
adc
pop
push
adc
pop
adc
lcall
dec
insb
push
adc
xor
adc
nop
push
adc
adc
adc
movhps
mov
push
adc
mov
push
adc
loopne
adc
mov
adc
adc
xchg
push
adc
ljmp
test
clc
adc
adc
mov
push
adc
pusha
pop
adc
pop
push
adc
mov
push
adc
nop
push
adc
or
adc
push
adc
push
adc
clc
adc
adc
dec
pop
adc
rclb
adc
mov
adc
or
adc
movhps
add
adc
adc
add
adc
cmc
adc
adc
xchg
push
adc
pop
adc
push
adc
pop
adc
or
adc
movhps
adc
adc
adc
movhps
lahf
cmc
adc
adc
icebp
adc
adc
mov
push
adc
adc
adc
lcall
scas
mov
adc
mov
adc
loopne
adc
movhps
add
pop
adc
hlt
push
adc
insb
push
adc
mov
adc
mov
adc
adc
adc
inc
pop
adc
test
adc
push
adc
test
adc
pop
adc
mov
pop
adc
dec
pop
adc
mov
adc
imul
adc
mov
pop
adc
sub
adc
mov
adc
adc
adc
pop
adc
mov
pusha
call
movb
call
pusha
mov
movw
pushf
push
lea
jmp
test
jmp
not
movl
mov
pushf
jmp
movzbw
mov
call
clc
shl
pushf
bt
shr
cmc
or
bt
movw
mov
xor
push
inc
jmp
add
pushf
lea
jmp
push
pusha
mov
pushf
popl
pusha
jmp
movb
pushf
shl
call
cmc
btr
ror
inc
btr
shrd
rcr
add
rol
bt
rol
btc
cmp
shl
and
cmc
shrd
shr
test
mov
cmp
jmp
mov
pushf
pushf
lea
jmp
push
pushl
mov
pusha
lea
jmp
neg
dec
ror
mov
test
test
pusha
movb
add
push
mov
pushl
lea
jmp
pushf
popl
pushf
jmp
push
mov
pushf
pushl
movb
lea
jmp
rcr
mov
cmp
bt
pusha
add
pusha
lea
jmp
push
inc
shr
btr
mov
clc
push
jmp
pusha
dec
cmp
xor
test
sub
movb
jmp
bt
and
pushf
mov
call
call
not
not
bt
mov
bt
cmp
sub
cmp
stc
pusha
test
add
call
mov
jmp
lea
ja
cmc
pushf
lea
shl
sbb
lea
shl
btr
sub
shld
bswap
ror
lahf
lea
cmc
and
push
sub
sub
movzbw
lea
pop
mov
bswap
lea
movsbw
lea
pushf
call
pusha
pusha
call
mov
pushf
push
call
pusha
movb
mov
push
pushf
popl
pushl
pushl
popl
pushf
push
push
pushf
lea
jmp
pushf
popl
pushf
jmp
shl
pusha
mov
jmp
push
pushf
lea
je
cmp
test
sub
jmp
stc
call
pushl
push
mov
pushf
movw
lea
jmp
mov
mov
lea
jmp
add
pusha
pushf
lea
jmp
pushf
popl
mov
pushl
popl
pushf
pushf
lea
jmp
add
pusha
push
lea
jmp
call
mov
movw
call
push
call
call
mov
pusha
jmp
mov
call
mov
pushf
mov
call
pushf
mov
pushf
call
jmp
mov
mov
push
lea
jmp
pushf
clc
cmp
not
test
sub
stc
cmc
and
call
bt
mov
mov
call
not
mov
cmp
test
xor
cmp
jmp
ror
test
add
call
not
dec
dec
add
pop
xor
setae
shl
sar
rol
add
bswap
movzbl
lea
call
pushl
popl
pushf
pushl
lea
jmp
pushf
popl
pushf
pushl
popl
pushf
lea
jmp
pushf
mov
neg
mov
cmp
xor
movb
call
sbb
mov
bswap
rcl
aad
pop
btr
xadd
pop
movsbw
cwtl
adc
sar
pop
rdtsc
aad
xadd
pop
daa
sbb
popf
push
movzbw
mov
mov
cwtl
lea
pop
mov
xchg
setle
lea
mov
lahf
mov
call
sub
movzbl
lea
inc
bts
dec
and
xor
sub
pop
mov
pushf
not
mov
bswap
pushf
jmp
pushl
jmp
sub
movw
pusha
add
call
mov
movb
call
add
push
mov
mov
pushf
pusha
lea
jmp
call
mov
call
pushf
mov
clc
clc
mov
jmp
pushf
movb
lea
jl
push
call
pushf
jmp
movb
pushl
popl
pusha
lea
jmp
stc
push
mov
mov
cmc
mov
movb
jmp
pusha
pushf
pushf
popl
call
call
mov
push
pushf
push
pushf
lea
jmp
cld
aad
pushl
popf
setle
movb
lea
mov
cwtl
mov
pop
mov
mov
cwtl
mov
bswap
mov
xchg
cwtl
pop
mov
lea
jmp
not
pushf
jmp
cmp
cmc
add
push
mov
pusha
mov
pushf
lea
jmp
mov
call
mov
pushf
call
bt
rcr
xadd
mov
rol
stc
ror
add
jmp
inc
btr
bswap
not
not
bts
stc
ror
shr
bt
sub
cmc
shld
xor
movzbl
pushl
clc
mov
push
pushf
bt
cmp
or
pushf
call
pushf
mov
jmp
mov
movw
pusha
mov
pushl
mov
mov
call
push
pushf
mov
pusha
movb
mov
pushf
pushl
ret
pushl
popl
movb
push
pushf
lea
jmp
call
ror
bt
stc
test
pushl
sub
bt
pushf
cmp
movb
cbtw
jmp
pushl
popl
mov
mov
mov
lea
jmp
pushf
mov
mov
jmp
cmc
add
cmc
clc
bt
popf
push
pushf
mov
lea
jmp
jmp
jmp
movb
pusha
mov
pushf
popl
cmc
jmp
clc
cmp
pushf
add
push
pushf
jmp
shr
pushf
mov
push
pushf
pusha
pushf
popl
call
call
shld
neg
dec
movsbw
mov
stc
bt
pusha
add
movb
pushl
lea
jmp
mov
call
pushf
mov
call
pusha
pusha
pushf
mov
pushf
push
call
push
pushf
movb
pushf
popl
pushf
pushl
popl
pushf
pushl
push
lea
jmp
lea
std
xchg
pushf
pushf
mov
jmp
call
jmp
mov
push
mov
jmp
bt
clc
and
push
cmp
push
lea
jp
push
lea
jne
push
xorb
mov
mov
mov
pusha
pushf
pushf
lea
jmp
clc
cmp
call
pushf
mov
push
mov
pushf
movb
jmp
pushl
popl
pushf
lea
jmp
pusha
mov
jmp
mov
pushl
mov
lea
jmp
push
mov
movw
pushf
push
pushf
lea
jmp
cmp
test
mov
stc
mov
movw
clc
mov
rol
btr
mov
jmp
jmp
pusha
pushf
popl
pushf
pushl
popl
movl
pushl
lea
jmp
pushf
pushl
mov
jmp
jmp
bsr
cmp
mov
ror
sub
add
setnp
not
mov
push
jmp
jmp
pushf
jmp
cmp
call
mov
pusha
lea
jmp
daa
mov
call
aas
not
cmp
mov
bswap
test
sbb
mov
clc
call
pushf
call
mov
movb
lea
cpuid
push
test
sub
clc
movb
cmpl
pusha
call
pushl
popl
rcr
bt
sub
bts
movl
rol
shld
bt
mov
movb
mov
call
mov
stc
add
sub
jmp
pushf
call
call
adc
setge
pusha
mov
bt
clc
jmp
mov
mov
pushl
mov
call
jmp
shrd
call
pusha
pushl
mov
movb
pushf
pushl
lea
jmp
mov
movb
pushf
mov
movb
lea
jmp
bts
mov
pusha
jmp
jmp
pusha
add
pusha
pushf
movw
mov
lea
jmp
inc
call
call
bswap
not
jmp
rcr
mov
adc
test
mov
sub
stc
mov
jmp
mov
push
mov
lea
jmp
rcr
movsbw
movsbw
mov
call
xor
movw
jmp
inc
mov
test
add
cmp
pushf
bt
sub
lea
jo
pushf
mov
movb
push
pusha
pushl
lea
jmp
cwtl
shl
rdtsc
add
mov
test
pushf
movsbw
xor
mov
jmp
pushf
mov
pushf
push
pushf
pushl
lea
jmp
pushf
lea
cpuid
clc
cmc
pushf
pusha
sub
pushf
jmp
sub
push
test
mov
shl
call
push
rol
jmp
lahf
pushf
mov
sub
jb
sub
pusha
pushf
push
mov
push
pushf
pushl
movb
lea
jmp
mov
btc
rol
bsr
mov
sar
adc
xor
lea
mov
call
push
pusha
call
mov
pushf
lea
jmp
call
jmp
pushl
popl
mov
mov
mov
mov
lea
jmp
jae
stc
and
mov
jo
sub
jmp
dec
mov
pushf
call
push
lea
jmp
call
pusha
pushf
popl
movl
jmp
cmp
sub
pushf
neg
test
xor
cmc
sub
push
call
rol
clc
clc
clc
test
xor
cmp
sub
pushf
push
pusha
call
jmp
xor
mov
pusha
push
push
cmc
add
pushl
pushl
pushf
lea
jmp
jmp
call
bt
movl
push
pushf
rcr
mov
call
stc
cmp
cmp
xchg
clc
shr
or
push
bt
push
xadd
rol
bswap
push
bswap
pushl
inc
push
xadd
bsf
sar
mov
lea
sub
or
call
jmp
rdtsc
bt
mov
bts
bswap
shld
mov
shr
mov
jmp
btc
movzbl
pusha
pushf
sub
not
not
dec
call
pushf
pusha
mov
pushf
pushf
mov
pushf
popl
jmp
rcl
jge
sbb
mov
pusha
pushf
add
pushf
pushf
lea
jmp
cmc
cmp
add
push
call
call
clc
add
pusha
lea
jmp
pushf
movb
movb
xchg
stc
pusha
call
pushf
pushf
pushl
popl
pushf
pushl
pusha
lea
jmp
call
shld
shr
cmc
mov
test
call
call
mov
movl
push
push
lea
jmp
cmc
jmp
pusha
add
call
pushl
mov
pushl
push
push
pushf
lea
jmp
call
mov
mov
pusha
pushl
jmp
push
push
movw
lea
jo
fcompl
pushf
pusha
pushf
lea
jmp
ror
bswap
cmp
lea
mov
bt
sbb
ror
clc
mov
test
test
pushf
mov
sub
lea
jle
cmp
stc
bt
shr
jmp
movl
mov
movb
pushl
pusha
mov
lea
jmp
jmp
rol
cmc
neg
movsbw
mov
sub
movsbw
shld
dec
xor
and
cmc
movsbw
cmp
not
call
pushl
cmp
cmc
add
cmp
call
mov
add
add
rol
ror
rcr
pusha
call
inc
movw
mov
decl
mov
push
lea
jne
call
call
pushl
popl
movb
mov
lea
jmp
lea
ja
pushf
pushf
popl
call
mov
push
mov
jmp
pusha
push
cld
jmp
pushl
call
mov
movw
lea
jmp
movb
pusha
mov
pushf
jmp
mov
pusha
mov
pushf
mov
lea
jmp
shld
pusha
daa
sar
mov
test
movb
movw
sub
mov
lea
jno
pusha
push
mov
pushl
mov
pushf
mov
lea
jmp
mov
movl
mov
push
push
push
pushf
lea
jmp
pushl
mov
pusha
jmp
movb
clc
sub
pusha
mov
jmp
mov
call
mov
push
mov
pusha
pushf
lea
jmp
call
pushf
popl
pushf
mov
stc
pushl
pushf
mov
bt
mov
cmc
call
call
or
movzbl
test
xor
pusha
jmp
btc
lea
stc
mov
clc
add
pusha
jmp
add
pushl
bt
cmc
cbtw
push
pushf
stc
cwtl
movw
cmc
call
mov
call
rcl
cwtl
xchg
test
mov
jmp
pushl
pushf
mov
movw
mov
push
lea
push
push
pushf
pusha
mov
mov
pushf
pushf
xchg
jmp
dec
mov
cmc
clc
xchg
test
xor
call
bt
add
movw
jmp
add
push
pushl
mov
mov
lea
jmp
shrd
shl
daa
notl
shl
mov
cmp
mov
bt
sub
pushf
pushf
pusha
call
ror
bt
cmp
mov
clc
stc
sub
push
clc
stc
mov
add
pusha
jmp
shr
setno
mov
not
adc
mov
pushf
sub
bt
shr
call
pushf
pushl
popl
push
movb
push
movb
lea
jmp
jmp
xor
ror
lea
push
push
cmp
jmp
mov
mov
movb
lea
jmp
pushl
popl
ror
movl
clc
movzbw
bswap
lea
mov
cmc
clc
bt
pushf
ror
mov
lea
jmp
mov
movw
lea
jmp
call
mov
pusha
pusha
pushf
cwtl
mov
pushf
call
inc
bt
bt
pusha
stc
xor
push
bt
pushl
sub
jmp
call
mov
movw
add
push
pushf
neg
pushl
pushl
mov
mov
lea
jmp
sub
pushf
mov
mov
pushf
lea
jmp
clc
jmp
jae
mov
pusha
push
add
mov
pusha
lea
jmp
stc
btr
cmp
shrd
mov
ror
bt
and
mov
call
sub
jg
xor
test
test
cmc
cmp
add
jmp
pusha
pushl
not
clc
cmp
add
cmc
mov
bt
sub
pushl
movb
mov
pushf
pushf
movb
lea
jmp
movzbl
clc
bsf
mov
shld
shld
bt
mov
pushf
pushf
jmp
mov
mov
push
mov
pusha
jmp
call
call
clc
mov
cmp
cmp
add
call
movl
mov
pushf
lea
jmp
mov
mov
push
pushf
popl
pushf
test
mov
cmc
stc
mov
bt
push
call
pushl
popl
pushf
pushf
lea
jmp
cmp
pushl
pushf
call
jmp
xchg
sar
mov
sar
shl
mov
call
mov
bt
cmp
add
pushl
pushf
call
cmp
stc
lea
test
cmc
pusha
xor
pushf
rol
movb
cmp
call
pushf
mov
stc
clc
jmp
call
pusha
push
pusha
mov
jmp
pushf
bt
add
jmp
pushf
popl
stc
bt
call
lea
jno
pushf
movl
call
sbb
movzbw
not
mov
cmp
test
bt
pusha
add
pusha
pushf
push
pushf
lea
jmp
xchg
mov
stc
test
or
mov
call
clc
call
push
jmp
movsbl
xchg
inc
rcr
bswap
movsbw
ror
rol
inc
xchg
not
push
push
test
lea
pushf
sub
setbe
mov
xor
call
clc
jmp
stc
ror
bt
xor
jmp
mov
pushf
mov
pushf
mov
pushf
call
pop
mov
pusha
bswap
jmp
pushf
lea
jno
pushl
pusha
pusha
pushf
mov
lea
jmp
pushl
popl
pusha
push
pushl
pushl
lea
jmp
call
jmp
pushl
popl
movb
pushf
lea
jmp
daa
stc
mov
and
pop
jmp
jmp
clc
sar
stc
call
stc
bsf
mov
cmp
rcr
mov
call
add
jmp
push
mov
pusha
cmp
cmp
sub
pusha
add
jmp
movl
pushf
push
movb
mov
mov
pusha
mov
pushl
ret
and
pushl
pushf
pushf
popl
jmp
call
mov
pushf
popl
call
rep
neg
bswap
pushf
mov
cmc
mov
clc
jmp
bt
stc
xchg
call
push
pushf
pushf
popl
pushf
movb
push
pushl
popl
mov
mov
mov
lea
jmp
movsbw
pushf
mov
not
pushf
movsbl
cwtl
mov
jmp
rcl
xadd
rol
rcr
mov
dec
mov
cmp
cmc
call
mov
mov
push
mov
push
pushf
pusha
mov
lea
jmp
push
mov
jmp
pusha
mov
call
dec
xor
cltd
bts
mov
push
test
mov
bsr
movzbw
test
mov
ror
shl
mov
btr
cmp
pushl
popf
movsbl
cwtl
mov
pusha
lahf
bswap
lea
mov
lea
pop
mov
call
shrd
mov
cmp
add
push
pushf
movb
pusha
lea
jmp
movsbl
mov
pushf
movb
lea
jmp
jmp
mov
movb
mov
pushf
mov
pushf
pushf
mov
call
call
lea
lahf
movzbw
jb
mov
call
std
jmp
pushf
pusha
call
lahf
movsbw
mov
push
not
mov
bswap
mov
push
pushf
mov
mov
lea
cpuid
jmp
mov
pushf
push
lea
jmp
rol
mov
pushf
add
call
bswap
mov
bt
jmp
mov
bt
stc
pusha
add
jmp
call
push
mov
pushf
mov
pushl
call
add
movb
pusha
lea
jmp
add
pushl
jmp
jmp
add
pusha
lea
jmp
seto
mov
push
setp
setns
movsbw
pusha
mov
jmp
neg
xor
btc
rol
mov
adc
mov
clc
pushf
sub
test
pusha
stc
clc
shl
pusha
mov
jmp
cmc
push
mov
movb
clc
mov
sub
jmp
cmp
pushf
pushf
sub
pusha
pushf
jmp
pushf
pushf
mov
pushf
lea
jmp
jmp
call
call
stc
xor
cmc
stc
mov
cbtw
stc
clc
push
call
test
movzbl
mov
pusha
mov
bswap
push
bt
cmc
lea
cmc
sub
movw
mov
movb
inc
jmp
sub
pushf
push
push
mov
movb
mov
movw
lea
jmp
lea
jo
mov
pushf
lea
jmp
mov
movb
mov
push
movb
lea
jmp
jmp
push
mov
push
pushf
push
movb
mov
call
pushf
popl
pushf
call
pusha
mov
movb
call
clc
mov
sub
ror
sub
mov
clc
push
cmp
call
pusha
add
lea
jo
pusha
mov
inc
pusha
jmp
push
cmp
sub
pushf
mov
pushl
pushf
pushf
pushl
lea
jmp
pushf
mov
call
pushf
pushf
jmp
push
pushl
pusha
mov
push
pushf
popl
pushl
call
inc
mov
jmp
pushf
pushf
popl
call
sub
jmp
shld
aam
mov
or
rcl
adc
neg
mov
stc
add
pusha
movw
pushf
jmp
pushf
call
movsbw
mov
jge
pushf
mov
pushl
divl
lea
jnp
pusha
mov
push
mov
call
cwtl
stc
cmc
sub
lea
jne
mov
pushf
movw
movb
lea
jmp
pushf
mov
call
shl
mov
clc
call
pushl
pushl
pushl
popl
mov
mov
lea
jmp
call
and
setle
pusha
mov
bt
inc
bt
sbb
mov
call
pushf
push
movb
pushl
popl
mov
push
lea
jmp
jmp
rol
movw
pushl
movw
inc
jmp
pushf
pushf
movb
mov
pushf
jmp
stc
sub
movb
call
lea
jg
clc
push
pushf
cmc
bt
mov
cmc
call
rcr
inc
rcl
mov
sete
mov
push
cmc
clc
sub
jmp
cmc
cmc
mov
push
movb
call
movsbw
setne
bswap
mov
pusha
pusha
call
call
jmp
mov
movzbw
push
pushl
btr
pushl
popl
jmp
push
pushf
mov
movw
push
pusha
push
lea
jmp
add
btr
mov
push
pusha
add
pusha
push
lea
jmp
mov
pushf
pusha
pushf
lea
jmp
movb
pushf
popl
clc
mov
cmc
mov
clc
cmp
test
clc
push
stc
bt
cmp
push
sbb
btc
shr
push
bsf
push
shl
xchg
xadd
push
ror
mov
dec
sar
pushl
bts
rol
btr
add
push
sbb
mov
jmp
cmp
push
call
cmp
call
mov
pushf
jmp
lea
mov
push
pushf
popl
pusha
pop
mov
lea
lea
jo
movzbw
not
pushl
jmp
loope
ljmp
movsb
call
out
push
jle
out
xor
ljmp
add
jmp
out
jnp
out
rep
jmp
out
xor
jmp
out
add
push
jmp
out
adc
jmp
out
sbb
jmp
out
dec
mov
out
out
jmp
out
xor
test
out
leave
call
out
xor
jmp
out
ljmp
out
sbb
out
ljmp
out
fbstp
jmp
out
fcoms
jmp
out
jns
jmp
out
jns
jmp
out
xor
jmp
out
mov
jmp
jmp
out
out
jmp
out
mov
jmp
out
in
and
out
loope
jmp
out
xor
pop
jmp
out
xor
jmp
out
jns
jmp
out
xor
ljmp
jmp
jmp
out
or
ljmp
jge
out
push
jle
out
jecxz
call
out
cmpsb
and
out
xor
jmp
out
jns
jmp
out
ljmp
out
out
jmp
out
cli
daa
ljmp
sub
out
lcall
out
dec
mov
out
cmpsb
and
out
xor
jmp
out
je
jmp
out
pop
and
out
cwtl
jb
out
jns
jmp
out
cmp
push
jmp
out
fbstp
jmp
out
fcoms
call
out
xor
jmp
out
add
jmp
out
fdivl
out
xchg
bnd
out
popa
in
call
out
loopne
ljmp
lods
jmp
out
ljmp
out
xor
jmp
out
push
jle
out
cmp
or
out
mov
jmp
out
loope
call
out
push
push
call
out
jne
jmp
out
jae
jmp
out
xor
jmp
out
inc
add
ljmp
and
out
dec
dec
jmp
out
jns
jmp
out
dec
mov
out
fcoms
jmp
out
out
jmp
out
xor
jmp
out
fdivl
out
inc
mov
jmp
out
adc
jmp
out
mov
jnp
out
jnp
out
add
ljmp
sahf
call
out
cmpsb
and
out
xor
jmp
out
xchg
bnd
out
in
and
out
inc
add
jmp
out
xchg
or
out
push
push
jmp
out
or
call
out
cmpsb
and
out
xor
jmp
out
cwtl
jb
out
loope
jmp
out
mov
jmp
out
jne
jmp
out
lcall
out
movsb
xchg
jmp
out
mov
xor
out
cmpsb
and
out
xor
jmp
out
xchg
push
jmp
out
xchg
xchg
out
sbb
jmp
out
xchg
xchg
out
jns
jmp
out
shlb
out
outsb
sbb
jmp
out
scas
sbb
out
cmpsb
and
out
xor
jmp
out
jns
jmp
out
popa
in
call
out
js
jmp
out
fbstp
jmp
out
dec
mov
out
xor
ljmp
std
jmp
out
cmpsb
and
out
xor
jmp
out
clc
leave
call
out
jnp
ljmp
adc
out
clc
leave
call
out
lcall
out
or
ljmp
sub
out
jnp
ljmp
and
out
clc
movsbw
bts
mov
mov
pusha
bt
cmc
ror
movb
movb
pushf
lea
jmp
call
mov
bsf
shl
test
neg
add
push
cmp
neg
dec
inc
shl
push
xor
and
setnp
ror
xor
add
or
add
movsbw
movzbw
lea
inc
movzbl
call
movl
jmp
push
mov
call
pusha
cmc
add
pushf
movb
pushf
lea
jmp
pushl
mov
call
mov
mov
call
push
fmull
pushl
pushl
pushl
movb
lea
jmp
movzbw
setnp
not
mov
call
call
lea
jns
pushf
push
pushl
popl
pushl
lea
jmp
pushl
popl
bswap
lea
lea
movl
jmp
add
jmp
mov
pushf
pusha
mov
lea
jmp
shld
xor
bswap
bsf
mov
jmp
mov
push
pushf
mov
pusha
lea
jmp
stc
cmc
cmp
bt
sub
pushf
pusha
push
mov
lea
jmp
mov
mov
call
xor
mov
sar
cmp
mov
stc
bt
sub
pushf
cmp
shr
call
pushf
sub
call
push
pushf
add
cmc
clc
pushl
popf
push
pusha
lea
jmp
pushf
mov
push
lea
jmp
add
jmp
xadd
mov
sbb
shr
add
setnp
sete
jmp
mov
jmp
pusha
push
pushf
push
pushl
popl
push
mov
lea
jmp
add
test
jmp
movb
pushl
popl
movb
lea
jmp
jmp
call
mov
pusha
mov
pushf
pushl
pushf
lea
jmp
call
cmp
sub
cmp
cmc
add
jmp
jmp
cmp
mov
cmp
push
cmp
pushf
mov
shl
btc
mov
pushf
pusha
bswap
mov
sbb
test
pushl
popl
shrd
btc
btc
movl
shl
btc
bt
mov
bt
pusha
cmp
bswap
call
mov
pushl
lea
push
pushf
mov
pushf
push
pushl
pushl
xchg
pop
mov
pushf
push
bswap
mov
not
movsbw
mov
pop
pushf
popl
movsbw
lea
movzbw
push
pusha
bswap
bswap
pushl
popl
lea
jl
push
movsbw
movzbw
mov
pushf
mov
pushf
pusha
lea
jmp
push
not
movsbw
rol
rol
shl
neg
push
xor
pusha
neg
shl
neg
sub
seto
inc
bswap
mov
pushf
pushf
push
inc
pushf
push
clc
cmp
add
pushl
push
push
mov
movw
movb
lea
jmp
shl
mov
dec
adc
btr
setbe
xor
shld
ror
movzbw
pushf
not
ror
add
sub
movsbw
shl
inc
xor
not
xor
bsr
shr
sub
ror
sar
or
inc
mov
push
pushl
movw
push
add
lea
jae
pushf
mov
mov
pushf
lea
jmp
mov
jmp
cmc
mov
pusha
bt
sub
call
bt
jmp
movb
mov
pushf
push
lea
jmp
cmc
clc
add
call
pushf
mov
push
pushl
popl
push
movb
movb
pushl
lea
jmp
call
bts
shl
dec
mov
test
call
mov
call
call
pushf
pusha
pushf
mov
jmp
movb
lea
jne
shl
movzbw
setns
xorb
jmp
mov
push
push
pushf
push
lea
jmp
jmp
xor
call
jmp
pusha
pushl
pushf
mov
movb
call
pusha
pushl
mov
pushf
push
push
lea
jmp
push
jmp
push
mov
pushf
lea
jmp
stc
mov
cmc
add
pushf
pusha
pusha
lea
jmp
inc
pushf
not
call
mov
clc
stc
call
call
mov
pop
push
xchg
push
bswap
bswap
pushf
popl
cmp
shl
xor
bsr
push
movsbl
shl
jge
pushl
sets
push
btc
mov
shl
push
bsr
sub
ror
not
ror
bts
setns
cmc
adc
sub
and
test
bsf
lea
call
mov
test
adc
add
test
or
or
lea
mov
cmc
xor
push
rol
lea
btc
movsbw
movzbw
clc
not
btr
cmc
push
rol
xor
btr
add
not
movzbw
not
xor
sar
sar
rcl
bsf
movzbl
movsbw
btc
mov
lea
jge
add
bt
cmp
test
push
add
movb
push
pusha
call
pop
mov
pushf
push
lea
jmp
sub
pushf
pusha
call
lea
cpuid
jmp
mov
movb
push
lea
jmp
push
call
mov
mov
pushf
lea
jmp
pushl
mov
pop
bswap
mov
pop
pushf
mov
mov
not
mov
movsbw
pusha
pushf
pushf
popl
not
bswap
not
mov
jmp
movb
mov
jmp
pusha
lea
jmp
mov
pushf
pushl
movb
lea
jmp
mov
call
cmc
xor
push
dec
cmp
cmp
movb
cmp
neg
pushf
pushf
mov
dec
stc
cmc
cmp
xor
cmc
call
shl
pusha
ror
mov
jmp
mov
pusha
mov
pusha
pushf
lea
jmp
pushf
jmp
mov
push
pushf
mov
clc
jmp
mov
push
pushl
ret
mov
call
call
call
call
mov
call
divl
pushf
movb
call
movl
push
mov
mov
pushl
mov
pusha
pushl
ret
mov
mov
call
pushf
popl
seto
call
movsbw
bsf
mov
std
stc
cmp
pushl
popf
push
lea
jmp
add
pusha
push
mov
pushf
pushf
mov
push
lea
jmp
mov
pushf
popl
call
or
ror
mov
pushf
call
mov
push
bt
cmc
stc
sub
jmp
mov
call
movb
call
pushl
popl
movb
lea
jmp
pushf
mov
clc
jmp
jmp
push
pushf
pushf
lea
jmp
push
pushf
xor
stc
stc
test
add
push
mov
neg
clc
add
push
pusha
jmp
jmp
pop
pusha
mov
mov
lea
jle
pop
movsbw
lea
bswap
mov
pop
push
pushf
pushl
pushf
pushl
ret
call
cmc
test
cwtl
clc
sub
jmp
lea
jne
lea
sar
test
xorb
pusha
pusha
mov
mov
push
pushf
lea
jmp
lea
jne
btr
bts
and
mov
call
xor
pushf
lea
call
adc
mov
clc
jb
bt
add
push
lea
jge
pushf
clc
xor
cmp
call
bt
clc
xor
call
jmp
shl
call
btr
cltd
aad
mov
inc
clc
mov
test
bt
add
pushf
pusha
push
mov
mov
pushl
lea
jmp
pushl
ror
jmp
pusha
pusha
movw
mov
push
call
push
bsf
mov
push
clc
stc
bt
add
push
mov
pushf
lea
jmp
pushf
mov
lea
jne
pusha
pushf
jmp
or
pushf
stc
shl
mov
cmc
movw
bt
xor
pushf
jmp
add
push
push
pusha
not
mov
push
call
call
mov
call
pushl
mov
pushf
pushf
pushf
popl
jmp
pushl
call
pushf
movw
pushf
popl
pushl
jmp
pushf
movb
pushf
fstps
pusha
push
pushf
lea
jmp
push
mov
pusha
pushf
mov
pushf
popl
pusha
jmp
call
jmp
mov
lea
jae
inc
bt
ror
pusha
lea
jmp
jmp
adc
mov
cmc
xor
push
stc
sub
test
add
pushf
pushf
clc
not
jmp
sub
pushf
pushf
mov
pushf
lea
jmp
pushf
popl
movb
pushl
popl
movl
mov
lea
jmp
mov
push
mov
movb
pushf
lea
jmp
mov
flds
pushf
push
push
lea
jmp
add
pushf
lea
jmp
pushl
popf
mov
movb
movw
lea
jmp
call
mov
bt
mov
stc
cmc
pushf
call
pushf
lea
push
jmp
call
pushl
call
pusha
pushf
pusha
fildl
pushf
pushf
push
movw
lea
jmp
pushf
pushf
mov
movw
pushf
push
push
mov
jmp
pushf
jmp
push
pushl
mov
mov
pusha
mov
bswap
pushf
mov
not
movsbw
bswap
mov
mov
movsbw
pushf
popl
movzbl
jmp
jmp
call
mov
pushl
pusha
pushl
pushl
ret
push
pushl
jmp
jmp
movb
mov
jmp
ror
shl
shr
movzbl
pusha
xor
movsbl
inc
clc
not
ror
or
add
shl
shld
shrd
neg
add
push
btr
xor
sbb
pusha
movsbw
movzbl
cmp
cmc
clc
mov
stc
cmp
stc
stc
or
jmp
sub
pushf
mov
mov
pushf
mov
lea
jmp
setl
sbb
rol
mov
clc
ror
pushf
mov
mov
test
pushf
cmp
sub
jmp
pusha
movb
mov
push
pushf
mov
push
lea
jmp
not
lea
mov
mov
lea
cld
call
adc
not
mov
cmp
pusha
stc
pushf
sub
pusha
mov
pushf
mov
movb
movb
push
lea
jmp
mov
mov
pushf
movb
movb
lea
jmp
pushf
mov
call
call
pusha
inc
clc
shrd
mov
cmc
pusha
push
add
mov
pushf
lea
jmp
jmp
inc
push
pushf
mov
movb
lea
jmp
mov
call
call
mov
pushl
lea
jmp
mov
sete
mov
pushf
lea
jmp
shl
mov
pushf
bswap
jmp
push
jmp
cmp
call
dec
movzbl
call
sub
jge
add
push
mov
lea
jp
pushf
mov
pushf
push
lea
jmp
mov
push
sub
call
pushf
lea
jne
push
call
xchg
stc
pushf
pushf
mov
rcr
stc
sub
mov
pusha
sub
cmp
push
bt
stc
shr
call
mov
pushl
pushf
popl
call
pushl
call
mov
mov
mov
mov
pushl
ret
call
jmp
jmp
dec
rdtsc
jmp
daa
cmp
mov
cmp
jmp
not
mov
call
stc
rcr
rol
mov
push
add
push
push
lea
jmp
push
pushl
pusha
mov
movw
movb
mov
lea
jmp
lea
ja
add
adc
mov
rcr
rcl
lea
cmp
sub
clc
adc
lea
movzbw
and
movzbl
shrd
stc
sub
push
push
mov
push
bswap
pushf
popl
mov
jmp
bsr
xor
cmp
mov
clc
clc
cmc
clc
shl
jmp
push
idivl
jmp
pushf
bt
push
pushf
call
pushf
call
call
push
lea
jmp
pusha
test
bt
add
call
pusha
movw
mov
pop
not
mov
call
fcomps
push
pusha
push
lea
jmp
sub
pushf
pushf
clc
add
clc
cwtl
cmp
bt
sub
mov
mov
pushl
push
lea
jmp
mov
lea
jbe
pushf
pusha
call
pushf
pusha
lea
jne
bsf
lea
bsr
xorb
pushf
bswap
pusha
mov
push
pushf
pushf
lea
jmp
pushf
jmp
test
add
jp
sub
bt
test
call
mov
pushl
pushf
lea
pushf
pushf
pusha
lea
jmp
mov
jmp
add
pushl
mov
lea
jmp
btr
movzbw
mov
and
mov
call
movzbw
mov
dec
shl
mov
clc
stc
call
pushl
popl
push
lea
jmp
sbb
btr
rcl
mov
bt
stc
pushf
clc
sub
pushl
pusha
call
jmp
add
call
bt
lea
rol
sub
rol
stc
dec
mov
mov
btr
mov
test
call
cwtl
pusha
sub
pusha
movb
pushf
mov
pushf
pushf
lea
jmp
cmp
bt
cmc
sbb
mov
bt
bt
add
push
movb
lea
jmp
mov
pushf
pushl
jmp
lea
jge
pusha
mov
pushf
pushf
lea
jmp
lea
jne
pushf
mov
pushf
push
pusha
lea
jmp
call
shl
aad
mov
cmp
shld
mov
cmc
add
jmp
stc
push
not
cmc
call
pusha
mov
call
pushf
pushf
popl
pushf
movw
pushf
call
jmp
mov
call
mov
call
jmp
jmp
pushf
push
mov
pusha
call
sub
cmp
cmc
cmc
cmc
shl
jmp
mov
jmp
pushf
jmp
push
mov
std
xchg
pop
mov
bswap
lea
pusha
call
add
call
lea
cpuid
call
sub
pusha
mov
pusha
call
aad
cwtl
push
lahf
mov
rol
cmp
mov
stc
add
movb
push
mov
pushf
mov
lea
jmp
mov
movb
mov
push
call
pop
movsbl
pop
shrd
sbb
cmp
sar
pop
xchg
shld
pop
not
pop
clc
sub
neg
inc
pop
adc
mov
daa
movsbw
pop
cld
pop
bsr
call
call
movw
call
mov
mov
lea
jmp
pushf
pushf
jmp
add
jmp
pusha
mov
jmp
clc
stc
and
movb
mov
mov
lea
jne
mov
pushf
pushf
call
shl
stc
shr
jmp
mov
cmp
bt
lea
ja
push
pusha
jmp
jmp
jmp
and
neg
movsbl
ror
stc
lea
clc
pushf
push
sub
pushf
lea
jmp
mov
push
mov
pushf
movb
mov
mov
call
not
mov
pushf
pushl
popl
call
pushf
call
bt
rcl
bsr
cmp
mov
xchg
rcr
mov
cmp
call
pushf
pusha
add
jmp
pushl
pushl
popl
movb
mov
mov
mov
lea
jmp
push
mov
pusha
jmp
mov
jmp
mov
pushl
pushf
mov
call
pushf
shl
movzbl
jmp
pushf
jmp
stc
add
pusha
call
inc
clc
mov
dec
neg
and
bsf
mov
xor
pushl
popl
bt
bsr
ror
push
movzbl
mov
stc
test
test
bswap
pushf
test
call
xchg
rol
mov
cmc
add
pushf
pushf
pusha
mov
pushl
jmp
jmp
mov
push
movb
lea
jmp
pop
pushf
lea
jmp
cmp
sub
cmp
clc
call
mov
movw
lea
jmp
mov
push
jmp
movw
mov
pusha
pusha
push
mov
call
inc
clc
ror
pusha
pushf
movb
lea
jmp
neg
cmp
stc
sub
test
lea
jp
cwtl
clc
push
pusha
test
sub
pushf
mov
pushf
lea
jmp
pushf
pushl
mov
jmp
mov
mov
mov
lea
jmp
mov
pushf
call
jmp
divl
jmp
movb
jmp
mov
pushf
pushf
pushf
pushf
lea
jmp
pushf
call
pushf
popl
pushl
pushl
popl
pushf
pushl
pushl
lea
jmp
aas
or
inc
mov
cmp
push
pushf
pusha
sub
call
dec
lea
xor
pushf
movzbl
not
adc
mov
stc
test
jmp
pusha
shr
pushf
mov
pushf
or
clc
pushl
pushf
lea
jb
xor
push
mov
mov
inc
pusha
push
call
push
jmp
mov
bt
stc
stc
mov
mov
pushf
mov
stc
stc
mov
bt
mov
cmc
call
bswap
pusha
inc
adc
neg
pushl
pusha
rol
bts
rol
movsbw
btr
shl
xor
call
push
call
pushf
push
call
pusha
pushf
mov
mov
pushf
push
lea
jle
push
pushf
popl
jmp
pushl
popl
adc
not
stc
shld
movl
adc
shr
push
mov
bsf
call
push
pushf
mov
movb
pusha
mov
pushf
jmp
jmp
stc
mov
cmc
mov
clc
bt
push
pusha
mov
jmp
pusha
call
mov
push
call
mov
movb
pushf
mov
pusha
push
pushl
pushf
pushl
popl
movw
pushf
lea
jmp
lea
not
btr
bt
mov
jmp
mov
movb
pushf
popl
pushf
mov
pushl
popl
mov
pushf
lea
jmp
pusha
aam
shrd
lea
mov
movl
jmp
divl
pushf
mov
pushf
call
sub
movsbw
sub
neg
setg
ror
mov
shrd
shrd
add
add
rcl
movzbl
bsr
test
mov
cmp
call
jmp
call
call
push
xchg
and
not
clc
mov
bsr
and
inc
rcl
mov
add
shl
shrd
mov
pop
not
sbb
dec
pushl
popl
inc
rol
add
movl
neg
mov
test
add
pop
not
bsf
dec
bswap
movzbw
neg
adc
bswap
lea
movb
sub
pushf
lea
jmp
pusha
pushl
popl
pushf
movb
movw
push
lea
jmp
cmc
cmc
add
pushf
call
sbb
ror
ror
movzbl
push
test
jmp
stc
pusha
movb
add
pusha
pushf
mov
pushf
lea
jmp
not
pushf
mov
and
neg
movb
mov
test
sub
jnp
sub
stc
cmc
pushf
shr
pusha
mov
jmp
shrd
mov
clc
clc
cmp
cmp
sub
push
cmc
call
mov
mov
pusha
movb
jmp
add
pushl
push
lea
jmp
lea
not
sub
aas
mov
sar
mov
cmc
add
pushf
call
bts
rcr
movsbw
pushf
mov
pushf
add
jmp
movsbw
mov
pusha
pushf
movb
divl
pusha
pushf
jmp
mov
push
pushf
call
cbtw
movb
clc
clc
movb
cwtl
stc
call
push
mov
movw
pushl
ret
setp
mov
not
shr
and
and
mov
bt
cmp
cmc
not
pushf
mov
clc
call
pushf
call
and
cmc
sar
or
mov
clc
jmp
push
mov
push
pushf
popl
stc
pusha
stc
pusha
mov
test
clc
pushf
clc
mov
stc
cmp
jmp
pushf
pushf
popl
movb
jmp
shl
pop
mov
sub
sar
bts
add
jmp
call
mov
shr
not
neg
mov
push
bt
stc
call
shr
inc
movsbw
mov
pusha
pushf
add
pushf
movl
pushf
lea
jmp
pusha
pushl
pusha
fcomps
mov
push
push
lea
jmp
pushl
mov
push
pusha
push
lea
jmp
das
mov
bt
pusha
test
xchg
call
call
ror
bsr
jne
neg
bts
not
and
sub
stc
xor
neg
mov
sub
rol
mov
pushf
pushl
call
mov
call
mov
xchg
mov
push
pusha
mov
pop
pushl
setae
pushf
popl
xor
movzbl
xchg
sub
mov
neg
ror
xor
pop
pushl
popl
clc
and
movl
inc
movzbl
ror
inc
mov
btc
sub
lea
pop
jmp
mov
pushf
jmp
mov
not
pop
pushf
jmp
pushf
movw
pushf
mov
push
call
shr
cwtl
das
mov
pushf
sub
jmp
mov
and
pusha
pop
mov
pusha
call
mov
cmc
sub
jmp
bts
inc
xor
btr
sar
cmc
xor
movzbl
test
cmp
mov
clc
or
push
lea
jnp
pushf
pusha
lea
je
jmp
not
test
pushf
not
movb
jmp
jmp
pusha
pushl
popl
pusha
push
push
mov
lea
jmp
pusha
mov
push
lea
jmp
movl
movl
pusha
pushf
movb
mov
pushl
push
pushl
ret
pusha
call
mov
movw
call
mov
call
call
call
pushf
mov
mov
pusha
movb
lea
jmp
dec
mov
mov
not
movzbw
pushf
not
pushl
popl
jmp
pushl
popl
pushl
pushl
push
lea
jmp
pushl
pusha
mov
mov
lea
jmp
not
pusha
and
movw
pushf
pushf
call
jmp
pusha
mov
pushf
pushf
mov
pushf
popl
pushf
mov
stc
test
mov
clc
pushf
mov
push
call
mov
push
pushf
mov
lea
jmp
pushf
popl
cld
push
mov
movsbl
mov
cld
not
jmp
jmp
add
add
call
pushl
lea
pushf
jmp
add
lea
adc
lea
mov
rcr
mov
pusha
xor
movb
movzbw
pop
pusha
dec
pushl
not
inc
inc
movsbw
lea
dec
or
xor
btr
call
mov
pushf
decl
lea
jle
jne
jmp
pushf
pusha
mov
push
lea
jmp
mov
movb
pusha
mov
lea
jmp
push
movw
pushf
popl
mov
lea
jle
popl
pushf
lea
jmp
pushf
pop
add
adc
sub
and
movzbw
add
mov
mov
test
shl
stc
shr
call
clc
call
jmp
xchg
jmp
pusha
pusha
mov
jmp
call
xchg
pushf
mov
not
movzbw
mov
movl
pusha
pop
pushf
popl
mov
call
shl
xadd
bsf
cmc
mov
setb
pusha
add
not
call
movw
push
mov
mov
push
mov
mov
pushf
push
mov
mov
call
push
mov
pushl
pushf
lea
jmp
test
cmc
add
call
mov
pusha
call
push
push
mov
mov
push
lea
jmp
pushf
call
pushf
test
sub
pushf
shl
jmp
lea
lea
ror
bsf
shl
shr
add
bswap
rcr
call
push
rdtsc
mov
bswap
mov
call
pushf
pushf
pushf
mov
movb
pusha
pushl
lea
jmp
pusha
mov
mov
push
pushf
pushl
push
pushf
popl
pushl
pushf
movb
pushl
popl
pushf
movw
pushf
lea
jmp
cmp
cmp
call
pushf
mov
lea
jl
push
push
mov
pushf
pushf
pushf
mov
lea
jmp
jmp
jmp
rep
btr
mov
rol
neg
shrd
mov
std
pushl
popf
pushf
lea
jmp
mov
jmp
mov
pushf
mov
mov
mov
lea
jmp
pushf
bswap
not
jmp
adc
shl
or
sbb
mov
or
push
lea
js
mov
cmp
call
mov
pusha
push
pushf
pushl
lea
jmp
pushl
popl
movl
push
pushf
movb
lea
jmp
cmpl
pushf
call
pushf
push
pushf
mov
mov
pushf
push
push
mov
pushl
jmp
pushf
jmp
movzbl
cmc
mov
cmp
test
add
jmp
ror
rol
pusha
shr
xor
clc
bswap
add
pushl
setne
call
cmc
test
pushl
popf
mov
pushf
pushf
lea
jmp
bt
cwtl
stc
test
push
pushf
sub
movb
mov
pushf
lea
jmp
add
jmp
pop
push
movzbw
lea
jmp
mov
jmp
call
bswap
mov
call
cmp
pushf
clc
sub
jmp
push
mov
call
mov
pusha
movb
jmp
pushl
popl
pop
movl
not
push
call
call
pushf
popl
pusha
pushf
pushl
popl
pushf
mov
lea
jmp
pushf
sub
movb
inc
cmc
not
xor
clc
adc
neg
rcl
and
sub
bswap
sete
inc
mov
mov
mov
bt
add
jmp
jmp
movl
pushf
call
mov
pushf
lea
jmp
pusha
pushf
push
mov
call
jmp
pushf
pusha
mov
pusha
call
mov
jmp
push
pushl
mov
push
pushf
lea
jmp
pushl
pushf
popl
movw
pushl
popl
mov
mov
pushf
lea
jmp
inc
pushf
bt
push
clc
rol
stc
xor
movb
call
rol
push
movzbl
rcr
push
xor
sub
sub
pushf
bsr
inc
call
call
into
cmp
out
xchg
call
out
adc
mov
ljmp
call
jmp
out
jne
jmp
out
jne
jmp
out
leave
lods
jmp
out
cmp
jmp
out
out
jnp
out
pop
das
jmp
out
mov
jmp
out
gs
jmp
out
pop
xor
out
cmp
ljmp
inc
jmp
out
leave
pushf
call
out
dec
and
out
dec
fs
out
lcall
ljmp
xchg
jmp
out
xchg
call
out
fimuls
out
push
cmpsl
jmp
out
pop
shr
lea
out
lea
out
outsb
mov
out
pop
das
jmp
out
rclb
out
leave
lods
jmp
out
addr16
out
inc
cs
out
test
pushf
call
out
adc
out
movsl
mov
out
mov
jmp
out
enter
push
sbb
out
adc
mov
xchg
jmp
out
aam
ljmp
js
out
jge
out
jne
jmp
out
lea
out
lea
out
jle
jmp
out
ds
out
jge
ljmp
cmp
out
addr16
out
mov
test
out
xlat
pop
ljmp
ja
out
or
out
out
jnp
out
gs
jmp
out
out
mov
ljmp
xor
jmp
out
jne
jmp
out
dec
fs
out
call
stc
jmp
out
lea
out
lea
out
pop
cmp
out
mov
je
out
faddl
jmp
out
xchg
call
out
fimuls
out
jno
call
out
rcrb
out
xchg
call
out
clc
xor
out
jge
ljmp
ljmpw
out
bound
out
call
or
out
jne
jmp
out
pop
mov
jmp
out
arpl
call
out
sub
out
lea
out
lea
out
dec
and
out
pop
mov
jmp
out
push
icebp
call
out
mov
jmp
out
ds
out
xor
ljmp
or
out
mov
call
out
mov
jmp
out
rclb
out
sub
out
clc
xor
out
fcompl
jmp
out
jle
jmp
out
mov
xchg
jmp
out
and
jmp
out
lea
out
out
jnp
out
and
jmp
out
xchg
call
out
inc
cs
out
outsb
mov
out
outsb
xchg
out
cmp
jmp
out
arpl
call
out
int
ljmp
pop
jmp
out
sub
out
dec
dec
jmp
out
jne
jmp
out
sub
out
lcall
ljmp
and
out
pop
mov
ljmp
imul
mov
ljmp
cltd
jmp
out
dec
dec
jmp
out
jno
call
out
int
ljmp
cmp
out
dec
fs
out
lcall
ljmp
fs
out
push
push
ljmp
cmpsl
call
out
jne
jmp
out
mov
xor
out
arpl
call
out
outsb
mov
out
fimuls
out
lea
out
lea
out
leave
lods
jmp
out
jno
call
out
cmp
jmp
out
push
cmpsl
jmp
out
jae
jmp
out
shrl
jmp
out
mov
xchg
pushf
push
movl
movb
push
push
jmp
pusha
pushf
flds
mov
lea
jmp
pusha
movsbw
movzbw
pusha
mov
pushf
pushl
jmp
inc
mov
cmp
push
call
jmp
pusha
pushf
pushf
mov
pusha
call
push
shr
mov
push
clc
stc
jmp
mov
mov
lea
jmp
inc
test
test
call
pushf
mov
call
pusha
pop
mov
jmp
call
xor
bt
xchg
clc
add
cmc
cwtl
test
stc
test
clc
sub
stc
bt
call
jmp
push
pushl
pusha
mov
fcomps
mov
lea
jmp
push
mov
ror
add
or
ror
add
pusha
not
pusha
mov
mov
mov
pushl
pushf
push
mov
lea
jmp
sbb
push
adc
pop
adc
adc
adc
adc
adc
push
adc
rclb
adc
push
adc
lret
push
adc
push
adc
fistl
adc
cli
push
adc
pop
push
adc
sbb
adc
or
adc
jmp
adc
jnp
adc
rclb
adc
add
pop
adc
rclb
adc
add
adc
pop
push
adc
adc
push
adc
movsb
push
adc
ss
adc
daa
pop
adc
push
adc
ja
adc
xchg
push
adc
push
push
adc
rclb
adc
insb
push
adc
pop
pop
adc
pop
push
adc
jg
adc
popa
pop
adc
pop
adc
pop
adc
pop
adc
xor
adc
push
adc
pop
pop
adc
push
adc
xlat
adc
adc
pop
pop
adc
pop
adc
pop
push
adc
rcll
adc
insb
push
adc
insb
push
adc
movsb
push
adc
fsts
adc
pop
adc
stos
adc
adc
push
adc
movhps
sbb
push
adc
popa
pop
adc
pop
adc
pop
adc
cs
adc
and
adc
adc
adc
add
pop
adc
fistl
adc
leave
push
adc
pop
push
adc
pop
adc
adc
adc
adc
adc
into
push
adc
ss
adc
pop
adc
fistl
adc
popa
pop
adc
pop
adc
pop
push
adc
push
push
adc
adc
adc
call
pop
adc
call
adc
adc
lcall
mov
adc
adc
cs
adc
pop
push
adc
pop
push
adc
loope
adc
add
adc
adc
adc
or
push
adc
pop
adc
fistl
adc
adc
adc
pop
push
adc
pop
adc
mov
adc
adc
adc
leave
push
adc
in
adc
pop
adc
adc
adc
fistl
adc
mov
push
adc
pop
push
adc
fsts
adc
push
adc
cs
adc
push
adc
ss
adc
xchg
push
adc
fistl
adc
mov
adc
adc
mov
pop
adc
push
adc
into
push
adc
push
push
adc
push
adc
adc
adc
daa
pop
adc
fistl
adc
test
adc
mov
push
adc
movsb
push
adc
fistl
adc
pop
adc
rclb
adc
and
adc
adc
adc
daa
pop
adc
adc
fistl
adc
jnp
adc
pop
push
adc
insb
push
adc
aam
adc
push
adc
pop
adc
movsb
push
adc
mov
adc
add
adc
fistl
adc
mov
adc
adc
call
pop
adc
pop
push
adc
pop
adc
movsb
push
adc
in
adc
fsts
adc
ss
adc
xlat
adc
adc
ss
adc
adc
adc
pop
adc
push
push
adc
in
adc
adc
adc
fsts
adc
lcall
or
push
adc
in
adc
push
push
adc
fistl
sarl
sub
jmp
mov
pushf
movw
mov
call
pusha
pushf
pushf
popl
push
pushf
pushl
popl
movb
lea
jmp
jmp
shr
push
call
shr
movw
mov
call
mov
stc
push
mov
call
shl
bt
movl
bsr
adc
inc
call
pushl
popl
pushf
movw
pushf
lea
jmp
movsbw
rcr
xor
mov
movsbw
ror
lea
or
add
stc
or
sub
neg
xor
shl
dec
mov
pushf
pusha
call
pushf
lea
jp
mov
push
pushf
popl
call
push
mov
call
cmc
clc
sub
jmp
push
call
mov
mov
bt
pusha
cmc
mov
bt
cmp
call
mov
movb
dec
push
pushl
lea
jmp
jle
test
rcr
mov
pusha
rcl
rcl
call
push
call
clc
btc
add
or
sub
cmp
neg
stc
push
ror
rcl
and
bswap
mov
pop
mov
jmp
pushf
popl
push
call
mov
jmp
stc
cmp
cmp
pusha
pusha
movw
jmp
push
pushf
movb
flds
push
movb
pusha
push
lea
jmp
lea
ja
jne
shl
mov
cmp
push
stc
and
stc
cmp
pushf
movb
call
push
mov
jmp
mov
push
call
not
pushl
bts
rol
and
sar
not
movzbw
rcr
add
mov
add
bt
mov
cmp
cmp
jmp
push
mov
pushl
jmp
call
push
call
push
pushf
fcomps
pushl
pusha
mov
push
lea
jmp
call
stc
mov
cmp
bt
test
jmp
pushf
fcompl
push
lea
jmp
jmp
push
push
pusha
fildl
mov
lea
jmp
mov
movb
lea
jmp
lea
jne
stc
push
stc
pusha
xor
movl
xchg
jmp
add
jmp
pushf
movb
fwait
pushf
lea
jmp
mov
mov
push
push
mov
movb
lea
jmp
add
bt
bt
neg
pusha
movw
mov
lea
jmp
pusha
push
fstps
push
pushf
lea
jmp
pusha
inc
pushf
pushf
decl
call
push
pushf
pushf
flds
pushf
lea
jmp
movw
movb
mov
pushl
movw
lea
jmp
jmp
mov
movb
cmc
pushf
add
cmc
pushf
pushf
cmp
add
pushf
mov
pushf
pushl
ret
neg
pushf
rdtsc
test
stc
sub
push
mov
movb
pushl
call
jmp
mov
mov
pushl
movw
mov
mov
lea
jmp
xchg
pop
pusha
not
mov
movsbw
mov
call
test
pushl
call
pushf
bt
jmp
lea
jne
setns
movsbw
btc
xorb
pusha
mov
pushf
movb
lea
jmp
jmp
pushf
popl
jmp
bt
mov
stc
call
pushl
mov
push
call
movl
lea
ja
seto
aad
mov
sar
dec
lea
or
aad
test
aas
sub
jmp
cmc
cmp
call
call
bt
mov
cmc
mov
mov
push
mov
sub
test
mov
shld
mov
btr
mov
lea
btc
bts
push
pushl
popl
shr
movl
pushf
shld
bt
cmp
mov
jmp
call
shr
and
lea
stc
neg
mov
pushf
push
add
push
movw
call
push
cmp
lea
bt
clc
pusha
clc
add
jmp
call
xchg
bsf
mov
bsr
mov
bswap
dec
bsf
pushl
popl
bswap
movl
btc
or
neg
mov
stc
movb
lea
jge
bswap
cmc
pusha
add
pusha
cmp
cmc
cmc
neg
pushf
pushf
lea
jmp
movb
mov
pusha
pushf
push
mov
lea
jmp
bt
neg
pushf
xor
mov
cmp
clc
sub
pushl
jmp
add
push
push
lea
jmp
clc
shr
add
clc
shl
pop
sub
ror
call
stc
sub
pushf
push
clc
pusha
shr
jmp
jmp
movb
push
push
pushf
popl
push
pushl
popl
pushf
push
lea
jmp
pushf
push
call
pushf
popl
mov
lea
call
pushf
pushl
popl
movw
pushf
lea
jmp
sbb
mov
jmp
and
jmp
pushf
popl
pushl
pushl
popl
movb
lea
jmp
setne
sar
movzww
push
jmp
mov
pushf
push
call
pushf
mov
push
call
jmp
mov
pushl
push
pushf
pushf
popl
movb
pushf
pushf
pushl
popl
movb
lea
jmp
inc
test
jmp
mov
pusha
mov
jmp
push
pusha
mov
call
push
pushf
mov
movb
movw
jmp
pusha
lea
jne
bsr
shld
adc
shl
xorb
bswap
movzbw
movsbw
pop
pushf
lea
jmp
xchg
shrd
and
movzbw
movzbw
mov
rcl
mov
lea
jl
test
bsr
push
shrd
shl
cmc
pushl
clc
adc
xchg
push
cmc
lea
bswap
mov
dec
bswap
add
bt
adc
jmp
mov
pushf
call
bswap
mov
jmp
pushf
mov
pushf
pushl
ret
shl
pusha
mov
add
jp
test
stc
clc
add
stc
call
bt
ror
pushf
pushf
lea
jmp
clc
xor
stc
push
xchg
pusha
movl
mov
bt
sub
pusha
call
cmp
bt
pushf
pushl
popl
push
test
call
pusha
mov
movzbw
call
pusha
mov
call
sub
cmc
shr
mov
pushf
mov
mov
movw
pushf
popl
pushf
pushf
pushl
popl
pushl
pushf
pusha
pushf
lea
jmp
clc
and
clc
pusha
call
mov
movb
lea
jmp
jmp
bts
shrd
shr
mov
and
pusha
and
mov
bt
jmp
shl
mov
pusha
pushf
bt
add
push
pushf
jmp
ror
pushf
dec
bsf
lea
sub
dec
xor
inc
bsr
sub
push
movzbl
setnp
mov
pushf
push
lea
jge
dec
call
mov
jmp
jmp
call
movl
call
jmp
jmp
movzbw
not
rcr
rol
rcr
not
shr
xor
pushl
setl
call
mov
pushl
call
movb
push
add
pushf
mov
jmp
pushf
mov
mov
mov
push
call
jmp
or
bt
jmp
bswap
pushf
pushf
popl
pushf
push
mov
push
pushf
not
not
mov
movsbw
pushf
pushl
popl
not
bswap
movl
bswap
not
inc
pushf
mov
jmp
mov
push
lea
jmp
mov
pushf
mov
pushl
mov
call
bswap
bswap
mov
cmc
bt
add
pusha
pushf
mov
mov
pusha
push
pushf
lea
jmp
pushl
jmp
call
pusha
movb
flds
movw
mov
mov
lea
jmp
lea
jle
jne
dec
pushf
jmp
call
jmp
jmp
push
pusha
lea
jnp
push
jmp
sbb
mov
push
sub
mov
pushf
mov
push
mov
movb
mov
movb
pusha
lea
jmp
and
mov
shl
mov
bt
setb
call
sub
jmp
cwtl
movsbw
bswap
mov
jmp
cmp
add
clc
neg
pushf
lea
jmp
call
shld
pusha
pushf
mov
pushf
pushf
movb
pushf
pushf
popl
call
push
jmp
movsbw
shl
rcl
mov
bt
test
test
cmc
add
jmp
push
pushf
pusha
inc
pushl
call
rep
xadd
mov
sbb
btc
mov
lea
je
stc
std
popf
pusha
lea
jmp
mov
push
movb
movb
mov
lea
jmp
dec
mov
call
pushl
lea
jne
jmp
add
jge
clc
stc
sub
push
movb
call
setns
rcr
cltd
mov
xor
pushf
shr
mov
pushl
sar
mov
pushf
test
add
stc
shld
push
mov
pusha
jmp
btc
call
mov
movb
pushl
popl
push
mov
pushl
lea
jmp
movl
movw
flds
pushf
pushf
movb
push
lea
jmp
pushf
popl
pushf
movb
mov
lea
jmp
pusha
jmp
lea
jmp
rcl
push
mov
sub
rol
mov
jmp
and
and
btr
mov
jmp
inc
pushf
call
dec
btr
adc
mov
clc
bt
jmp
bts
mov
sub
mov
dec
adc
mov
bt
cmp
stc
add
pushf
shld
movw
mov
movb
mov
pushf
popl
jmp
test
xadd
add
add
mov
bsr
adc
sbb
stc
mov
test
jmp
stc
stc
sub
pusha
call
sub
clc
mov
inc
test
ror
add
not
mov
push
mov
pushl
lea
jmp
test
add
mov
pushf
lea
jmp
cmp
add
jmp
mov
mov
pushf
popl
pusha
mov
pushl
popl
pushl
pushf
push
lea
jmp
push
movsbw
movsbw
movsbl
push
pushf
jmp
pushl
pushf
popl
movb
mov
pushl
push
push
jmp
rcl
movzbl
jmp
bswap
mov
pusha
pusha
pushl
lea
jmp
not
lea
cltd
mov
bswap
movzbw
pushf
mov
movb
pusha
pusha
divl
jmp
pusha
movb
pushf
pushl
popl
pushl
pushl
movb
lea
jmp
bswap
sbb
movsbw
shl
neg
lea
rol
shr
mov
cmc
test
sub
push
pushf
lea
jmp
push
jmp
pushf
pushl
pushl
popl
mov
mov
mov
mov
lea
jmp
bts
daa
mov
rcl
mov
jmp
rcr
clc
bswap
cmc
lea
cmp
js
stc
bt
cmp
jmp
pusha
movsbl
rcr
movzbl
xor
xor
mov
sub
bt
rol
setbe
pusha
inc
shld
not
bswap
ror
neg
add
movsbw
cmp
xor
sbb
adc
inc
pushl
movzbl
pushf
push
cmc
bt
mov
clc
mov
or
call
pushf
cmp
sub
pushf
jmp
push
std
pushl
popf
pushf
pusha
lea
jmp
xchg
mov
call
ja
push
mov
mov
push
pusha
mov
push
pushf
popl
pushf
movb
cmc
push
mov
cmp
mov
stc
cmc
pushf
push
mov
stc
push
pushf
xchg
not
stc
shr
neg
mov
pushl
mov
xadd
mov
bt
call
pusha
mov
mov
push
push
pushf
lea
jmp
push
xor
stc
test
pusha
sub
pushf
mov
mov
push
pushf
lea
jmp
pusha
jmp
pushf
movw
pushf
popl
call
push
test
mov
mov
mov
clc
sar
mov
bt
mov
jmp
call
pushf
pushl
popl
movw
push
lea
jmp
adc
cmc
movzbw
mov
test
and
bt
mov
push
jmp
rol
shl
call
pusha
mov
jmp
pushl
cmp
cmpl
mov
pushf
pusha
mov
mov
mov
pushf
mov
mov
jmp
call
jmp
movsbw
mov
not
call
inc
shrd
movzbw
mov
push
call
pushf
mov
movb
pusha
push
bt
add
pushl
movb
push
lea
jmp
call
call
lea
std
call
test
bt
xor
call
add
shr
movzbw
lea
mov
push
cmp
not
call
test
cmp
pushf
pusha
pusha
call
add
push
pushf
pushf
mov
lea
jmp
pushl
pusha
mov
pushf
mov
pusha
call
mov
xchg
push
movw
call
sar
rcr
stc
mov
and
cmp
mov
bt
test
clc
add
pushf
pusha
pushf
mov
mov
lea
jmp
push
jmp
pusha
pushl
popl
pushf
pushf
pushf
pushf
lea
jmp
call
and
cmp
push
dec
movsbw
cmp
stc
push
shr
push
rol
xchg
bswap
or
push
pushf
call
call
mov
pushf
lea
jmp
cwtl
daa
neg
rdtsc
cmc
jmp
pushl
popl
pushf
lea
jmp
bsf
pushl
popl
shl
call
xor
call
sub
stc
xor
mov
cmc
mov
clc
stc
cmp
clc
sub
pusha
mov
pushf
mov
mov
movw
lea
jmp
jmp
rcr
pushf
and
mov
rcr
shr
clc
add
pushf
jmp
jmp
not
pushf
push
movsbw
mov
movzbw
mov
lea
not
mov
jmp
call
inc
push
call
call
mov
mov
push
push
lea
jmp
mov
jmp
jmp
add
dec
bswap
xor
mov
cmc
pushf
cmc
add
pusha
pusha
pushf
push
lea
jmp
call
call
push
pushf
pushf
popl
pusha
movzbw
mov
jmp
bts
clc
mov
call
pushf
clc
not
stc
stc
jmp
push
push
xchg
jmp
push
mov
fcompl
pushl
pushf
pushf
lea
jmp
movw
mov
pusha
lea
jmp
pusha
pusha
pushl
popl
pushf
movw
pushf
mov
lea
jmp
sahf
mov
ret
xor
roll
xchg
loope
xchg
push
mov
lcall
lret
insb
aam
movsl
aaa
sbb
pushl
in
aam
out
test
pop
stos
stos
push
pop
sbb
popw
jg
lret
push
or
adc
pop
add
jae
out
sub
and
das
pop
hlt
cmp
xlat
movsl
mov
incb
mov
xchg
sub
xchg
adc
inc
xchg
lods
lock
loopne
xor
cld
arpl
insb
cmpsb
iret
xchg
mov
stos
and
dec
xor
mov
xlat
loop
test
sbb
mov
sbb
outsl
les
inc
loopne
pop
cmp
ss
sbb
and
cmp
sbb
jg
cmp
jbe
mov
mov
cmpsb
rcr
in
out
stos
push
loopne
mov
stos
rolb
repnz
outsb
mov
cmp
or
lods
test
push
loopne
cmp
in
mov
push
mov
adc
lahf
subb
xchg
push
data16
call
mov
xchg
rolb
repnz
filds
add
das
int3
pushf
lahf
or
icebp
inc
aam
add
stc
stos
add
loopne
shlb
sbb
lock
xchg
das
push
xchg
faddp
push
outsb
outsl
je
filds
dec
loopne
adc
fwait
adc
or
lods
xor
cld
pusha
cmp
jmp
cmc
xor
pushf
stc
xor
jmp
call
push
aaa
imul
nop
cwtl
or
mov
repnz
rol
jmp
push
adc
mov
test
pop
mov
and
pop
cmpsb
sbb
imul
ror
lea
sti
or
loope
inc
inc
adc
sub
cli
and
loopne
inc
mov
and
fldcw
xor
mov
or
cli
sti
push
lahf
and
xor
push
xor
sahf
nop
cmpsl
pop
arpl
movsl
mov
scas
nop
hlt
stos
in
jbe
jne
aam
dec
popf
pop
lcall
pop
outsb
out
and
dec
sub
out
stos
mov
lock
insl
fdivrs
sub
push
mov
pop
pop
mov
loope
adc
lahf
loopne
jbe
rcl
out
idivl
xchg
scas
jb
bound
push
insl
mov
and
pop
sbb
xor
popa
outsl
sub
push
pusha
jmp
outsb
jecxz
push
or
cmpsl
jge
mov
jmp
stc
mov
pop
push
inc
repz
push
jmp
push
xchg
out
mull
push
xlat
mov
gs
jge
into
cmp
and
mov
loopne
mov
sbb
dec
aad
in
sahf
cmp
rcrl
push
imul
int3
pop
push
inc
ret
test
xchg
mov
xor
jp
xchg
xor
jae
lods
das
fidivs
subl
xorl
lahf
pop
mov
cmpsl
cmpl
stos
push
stos
pop
pop
int
pop
jb
or
lcall
add
repnz
inc
pop
pusha
rcrl
fldt
das
sub
push
loope
sbb
push
xor
sbbb
push
cltd
fmuls
lds
mov
jo
jle
cs
sbb
and
ljmp
lea
into
daa
adc
movb
pushf
pushl
pushf
lea
jmp
push
pushf
popl
pusha
pusha
xor
bt
call
insl
jl
inc
clc
arpl
loop
mov
and
mov
push
add
jge
mov
jno
aad
mov
push
cld
mov
jb
nop
sahf
je
out
stc
adc
xchg
jno
out
loopne
xlat
jne
mov
xor
inc
sub
dec
in
cmpsb
or
dec
inc
pop
call
jmp
imul
mov
mov
in
ret
pop
inc
add
jl
xchg
fsubs
or
insl
loop
int3
fucomi
mov
sub
or
stc
rorw
jg
mov
push
pop
insb
mov
insb
xor
xchg
sub
fldt
cmpb
inc
pop
addr16
ret
ds
xchg
bound
and
sub
xchg
push
inc
mov
push
xchg
divb
stos
cmp
dec
jno
push
inc
out
sub
or
stos
jns
fistpll
xchg
sbb
sub
movsb
les
fbstp
inc
fcompp
pusha
stc
mov
adc
lret
sub
sub
sbb
mov
pop
popf
sbb
mov
lcall
adc
pusha
mov
testb
in
stos
push
adc
test
in
push
xchg
sub
popa
mov
jle
stos
xchg
dec
xchg
dec
jbe
push
inc
adc
push
dec
push
xor
and
pop
pusha
mov
xchg
inc
hlt
stos
jg
leave
or
inc
mov
data16
adc
rcrl
frstor
mov
ret
push
jmp
push
jge
js
pop
pop
and
bound
out
cmp
add
fcomps
mov
xchg
mov
shr
in
sti
adc
cmp
jp
xor
dec
decb
sbb
xor
aam
and
adc
stos
xchg
test
int
loope
outsb
sub
test
xorl
test
bt
xor
clc
cmc
xor
cmp
xor
clc
mov
xor
pusha
xor
movl
pushl
popf
movb
pushl
ret
popa
insl
inc
push
or
popa
xlat
mov
and
test
xorb
xor
filds
mov
sbb
sbbb
fimull
cmp
pop
xor
push
sub
cli
jnp
pop
imul
call
std
ret
adc
cltd
ss
xor
mov
cmc
xor
cmp
pushl
xor
cmp
xor
bt
xorl
cmc
stc
xor
clc
bt
xor
mov
pushl
popf
pushf
push
pushl
ret
popf
mov
adc
aaa
jbe
rcrb
adc
push
sahf
out
outsb
and
into
test
push
mov
push
mov
sbb
popf
or
je
mulb
std
out
pop
push
mov
ficoml
and
and
daa
push
cmp
mulb
out
and
lcall
mov
jp
add
or
mov
cltd
cmp
popf
push
or
call
mov
popf
xor
or
loope
je
jl
jnp
xchg
nop
xchg
and
add
mov
in
jecxz
aad
push
loopne
ss
push
push
jle
xor
cmpsb
insb
mov
out
sarb
pop
mov
and
add
inc
outsb
andl
cmp
ret
mov
pop
sbb
inc
rep
and
adc
test
sbb
push
jg
in
sbb
push
loopne
in
std
pushl
popf
mov
pushf
pushl
ret
movl
pushl
lea
jmp
movl
push
lea
js
push
pusha
pusha
lea
jmp
xor
pushf
pushl
popf
movb
pushl
ret
push
movb
movl
pushf
call
cs
xlat
adc
aad
iret
mov
dec
add
leave
fdivl
inc
pop
or
imulb
in
clc
out
ret
or
mov
push
dec
push
out
out
cltd
push
push
pop
lahf
outsb
and
push
and
andb
sub
push
or
fmull
add
push
test
filds
ret
ds
sbb
lea
mov
iret
or
jecxz
imul
int
fidivl
add
mov
jmp
rolb
popa
iret
sub
pusha
testb
fistpl
mov
xchg
push
pop
pop
into
pop
or
mov
rcl
pop
xor
sub
push
mov
jg
cmp
adc
pop
and
cltd
scas
loop
pop
jo
cmpsl
xchg
xchg
ds
mov
dec
pop
dec
cmp
lea
cmp
mov
addr16
rcrb
xchg
cld
jge
cld
daa
test
mov
pop
mov
pop
bound
stc
out
xlat
and
or
into
jmp
and
push
scas
repnz
inc
and
xchg
push
inc
and
jge
pushl
lea
jmp
shlb
orb
mov
movsb
xor
push
ljmp
xor
adc
bound
aad
dec
adc
ret
out
test
xor
inc
sbb
cmp
and
xor
mov
dec
dec
cwtl
popa
ss
scas
adc
inc
jnp
sbb
cmp
outsb
imul
jle
repnz
jbe
dec
mov
cmc
leave
jns
cli
and
xchg
sbb
cli
or
pop
loope
adc
add
bound
jmp
dec
pandn
hlt
pop
in
mov
lret
cmp
rcll
add
jno
repz
popf
push
push
sub
xor
daa
xchg
arpl
add
adc
push
pop
xchg
pop
stos
lods
cmpsl
cli
push
iret
ficompl
ja
mov
pop
enter
ret
test
shrb
into
mov
or
loopne
mov
out
incb
jbe
ljmp
subl
aas
fst
sbb
leave
or
les
mov
outsl
mov
cwtl
sub
es
dec
ljmp
pop
and
andb
sbb
mov
data16
cvtpi2ps
stos
push
fldenv
dec
push
jnp
cli
adc
movsl
in
mov
push
adc
notl
mov
shlb
xor
mov
mov
pop
push
mov
mov
lret
jmp
pop
xor
sarl
ret
int
popa
push
aad
scas
mov
arpl
push
stos
push
out
inc
addr16
cld
xor
pop
mov
or
mov
std
cmp
fcomip
xor
or
cmp
cmp
hlt
inc
or
sub
fadds
iret
jp
cmp
cwtl
repz
mov
imul
and
jae
dec
mov
sub
mov
cmp
fdivp
or
xchg
jae
fcomi
inc
mov
xor
das
filds
pop
mov
push
adc
mov
out
pop
iret
push
hlt
sbb
add
int
xor
add
push
inc
adc
movsb
enter
mov
sub
jecxz
btc
jo
lods
sbb
xchg
xor
outsb
repz
loopne
push
les
sub
outsl
jo
xor
and
dec
test
insb
dec
fucom
pop
sti
cmp
mov
and
popf
int
sti
jle
lods
js
je
mov
mov
jge
cmp
xor
lea
inc
fstps
inc
push
inc
sbb
push
pop
test
cwtl
inc
and
outsb
or
push
lret
jle
sub
cs
sub
xor
mov
push
aas
pop
add
and
push
dec
ja
sarl
faddl
movsl
fbld
ucomiss
dec
pusha
xchg
arpl
bound
sbb
mov
jns
mov
jl
movsl
pop
cmc
out
inc
jle
ss
mov
or
mov
ljmp
dec
push
sub
sbb
mov
sub
lret
cltd
and
sbb
sti
stc
insl
je
jl
sub
pushf
clc
xor
cmp
cmc
xor
clc
xor
test
xor
bt
stc
xorl
pushf
push
xor
bt
call
xor
clc
xor
cmp
xor
bt
cmp
xor
clc
xor
movb
call
pushf
pushf
popl
clc
xor
pusha
stc
xor
pusha
jmp
push
clc
test
cmp
lcall
or
push
pop
dec
jecxz
lret
nop
loop
repnz
rcrl
es
mov
push
pop
enter
xchg
outsl
fidivrl
mov
jl
sub
mov
imul
ljmp
xchg
int
xchg
pop
add
ja
movsb
xor
push
cmpsl
mov
ret
fmuls
out
push
xchg
scas
imul
xorl
mov
mov
fnstcw
or
cmp
fisubrl
rcrl
fwait
sub
lahf
ss
mov
in
rcrl
dec
mov
sub
jge
inc
mov
rcrl
enter
pop
insl
aam
pop
dec
repz
ja
lahf
enter
mov
cmp
xchg
xor
xor
ljmp
gs
stc
sahf
mov
fistps
sub
out
ret
add
jg
aaa
jno
in
test
push
movsb
and
inc
and
into
cltd
outsl
arpl
sub
adc
push
adc
jle
shl
pushf
test
fcoml
mov
or
jns
sbb
or
ret
movsb
xor
stc
aad
int
sub
rcrl
mov
add
mov
add
mov
fldt
iret
mov
jb
fwait
jmp
rolb
movsb
adcl
inc
adc
xlat
aas
in
xorb
mov
int
aas
jb
sub
push
adc
cwtl
xor
dec
inc
or
dec
add
mov
fstl
das
lcall
dec
mov
aaa
mov
jmp
lock
int
sub
popf
xor
ljmp
and
and
vmptrst
out
adc
call
xor
cwtl
or
nop
or
daa
test
jp
in
and
jbe
pop
dec
dec
sbb
call
push
xor
dec
out
dec
mov
fsts
jge
ja
jo
fcmovbe
fdivrs
pop
bswap
mov
paddq
add
xor
scas
jns
add
dec
jnp
divl
fisubrl
push
xor
rcr
dec
test
scas
repnz
push
fiaddl
pop
dec
adc
mov
mov
add
lock
mov
loope
inc
ffreep
andl
or
pop
enter
lret
int3
fstl
sbb
cmpsb
pop
or
mov
outsb
ja
or
mov
mov
daa
dec
jmp
push
add
sbb
pop
inc
movl
pushf
mov
mov
pusha
lea
jmp
pusha
lea
jne
pushf
pushf
movl
pusha
pushf
movl
pusha
pushf
pushf
lea
jmp
cpuid
push
jmp
mov
bound
dec
stos
push
fsubrs
add
and
pop
mov
std
pop
inc
mov
nop
mov
jp
cwtl
pop
jo
loop
jbe
icebp
fistl
add
idiv
or
data16
mov
arpl
jns
call
dec
pop
add
ucomiss
loope
jle
sbb
inc
imul
addl
or
call
mov
mull
jle
movntq
and
xor
push
dec
sbb
test
popl
shl
jne
sub
addl
add
shll
jb
ficoml
mov
lods
insl
jle
inc
cld
scas
pop
daa
cli
mov
movsl
imul
les
lea
push
movsb
adcw
cmp
mov
or
sbb
andl
xor
pushf
stc
xor
mov
xor
clc
xor
clc
xorl
push
call
mov
jmp
pushf
pushf
call
pusha
jmp
call
xorl
bt
bt
xor
bt
xor
call
jle
or
dec
inc
mov
dec
add
mov
and
xchg
int3
sarb
push
inc
jns
lea
push
cmp
inc
ja
sbb
cmc
jb
cmp
ficompl
xor
sbb
gs
sbb
pop
mov
or
les
add
aad
outsl
xchg
subl
jmp
adc
in
imul
push
icebp
js
add
jo
pop
aas
leave
cltd
jge
xchg
icebp
mov
xor
jmp
pop
add
stos
lock
sbb
sbb
imul
pop
add
hlt
add
hlt
mov
jg
test
pop
fcoml
stc
gs
pop
sbb
add
scas
sahf
mov
sti
pushf
adc
out
jbe
cmp
dec
or
push
fdivp
out
mov
imul
fs
into
inc
cli
stos
dec
fwait
cltd
outsb
inc
jbe
fsubs
test
push
pushf
popl
pusha
call
xor
jmp
jmp
jmp
add
or
mov
rcll
aad
js
mov
clc
add
push
mov
loopne
andb
jmp
and
ret
hlt
nop
add
sub
icebp
xor
dec
fstps
xchg
jo
pop
inc
cld
hlt
xorl
sbb
lods
xor
loope
icebp
inc
frstor
icebp
or
loopne
sub
loopne
push
lahf
push
in
lahf
les
fwait
and
cmp
out
fisttps
into
xchg
sub
imul
fwait
nop
stos
xorb
cs
icebp
es
sbb
cmp
jno
lcall
mov
jno
cmpsl
in
or
push
xchg
loopne
mov
jne
lahf
bound
mov
fists
aas
fstl
cwtl
js
std
adc
inc
sbb
and
enter
cmp
dec
jne
xor
shll
adc
imull
test
jb
imulb
xchg
add
popf
stos
dec
adc
or
inc
in
xor
xchg
push
jb
add
inc
mov
inc
mov
xchg
sub
mov
and
push
add
scas
cmp
dec
or
lret
adc
cmp
mov
mov
cli
lods
jb
pop
pop
fidivs
popw
fwait
ret
das
repnz
fsts
inc
pop
lods
pop
and
data16
sbb
push
stc
lock
bound
mov
jecxz
aas
xor
or
shl
pop
push
xchg
lods
hlt
movsb
fwait
mov
in
ret
sbb
push
pop
dec
mov
mov
xchg
mov
mov
ljmp
xor
xor
adc
xchg
inc
clc
xchg
scas
xor
push
or
or
pop
sub
adc
jecxz
inc
or
cmpsl
jbe
cmp
fildll
push
pop
dec
cltd
jo
push
ret
add
inc
add
leave
nop
jl
les
xchg
scas
mov
popf
sbb
popf
jb
stc
xor
shlb
mov
inc
pop
add
adc
jnp
insl
push
and
lea
pop
outsl
sbb
outsl
iret
dec
scas
fistps
icebp
nop
aaa
es
pushf
cmp
loopne
into
fwait
and
pop
dec
stc
adc
daa
out
lods
jne
loope
add
jb
jns
adc
inc
mov
push
jne
xchg
dec
inc
sub
sbb
leave
fsubs
inc
and
iret
fisttps
jmp
leave
push
lahf
sub
sarb
mov
lea
nop
loope
xor
mov
mov
mov
int
lds
stos
jle
mov
push
sbb
pop
sbb
add
mov
insb
and
in
fidivs
int
popf
cwtl
dec
jmp
pusha
pushf
popl
push
xor
stc
bt
xor
stc
xor
push
xorl
pushf
xor
bt
pushl
xor
bt
xor
cmp
push
xor
std
cld
pushl
popf
pushf
movb
pushl
ret
pushf
movl
call
clc
xor
jmp
jmp
stc
xor
mov
xchg
jl
jnp
fdivl
and
mov
fldt
or
mov
mov
loopne
adc
push
icebp
cwtl
bound
add
movsb
inc
test
mov
pop
dec
pop
add
mov
inc
sbb
popf
pop
add
xchg
out
rolb
mov
in
sbb
inc
aas
cmp
repz
sbb
mov
xor
shrb
push
dec
mov
add
mov
cli
into
repz
mov
pop
xchg
xchg
dec
xor
sbb
sub
bound
cmpb
adc
inc
ja
adc
mov
movsl
insl
mov
push
xlat
movsl
and
cmp
pop
leave
mov
cmc
push
pusha
pushf
pushf
movl
call
jmp
call
imulb
jle
insb
push
and
cmpb
fimuls
sbb
test
mov
pusha
add
sbb
cmpsl
cmp
sub
sub
lret
stc
xchg
lea
jl
out
fsubl
notl
push
and
rcl
xchg
ds
xor
in
add
mov
xor
stos
popa
push
movsb
imul
jecxz
or
inc
push
or
fldcw
popf
mov
int3
sbbl
adc
insl
bswap
and
xchg
push
inc
out
sbb
cmpsl
lds
in
cmp
pop
out
jge
fdivl
dec
jns
adcl
jmp
movl
movb
pushf
mov
pushl
lea
jmp
xchg
xchg
pop
add
adc
xor
sbb
or
pop
mov
in
lods
lret
movl
and
out
sub
cli
jecxz
data16
je
pushf
out
dec
addr16
cmp
mov
loopne
cltd
call
pushf
pushf
popl
test
xorl
bt
push
xor
movb
test
xor
jmp
jmp
xchg
mov
out
les
lods
aas
mov
fimuls
cmp
loop
push
fs
pop
mov
sbb
pop
xchg
pusha
mov
repnz
sarl
fnsave
in
popf
inc
push
dec
adc
xor
xchg
mov
cmpsb
sub
bound
cli
fstpt
mov
insb
repz
mov
jnp
or
dec
gs
pop
clc
jne
or
add
xor
xchg
add
out
in
les
push
pop
xchg
mov
inc
and
cmp
call
pusha
pusha
pushf
popl
cmc
xor
cmc
xor
jmp
jmp
mov
pushf
call
push
mov
pusha
call
xor
pusha
xor
movb
mov
xor
cld
clc
pushl
popf
movl
push
pushl
ret
call
fs
push
dec
pop
aam
ljmp
pop
icebp
push
and
dec
sbbb
sbb
xchg
xor
xor
ljmp
mov
mov
insb
cmc
or
sbb
pusha
jle
xchg
jmp
sub
pop
je
sbb
add
dec
jbe
test
sub
xchg
gs
dec
mov
pop
mulb
loope
push
movsb
xchg
add
xchg
cmp
fstps
push
jb
and
pop
daa
push
aam
cltd
xchg
push
mov
imul
pop
jg
cmp
mov
mov
popa
xor
fcmovnu
lahf
fnstenv
xchg
nop
sbb
pop
mov
loope
xchg
mov
push
pop
xchg
fists
stc
push
pushf
sbb
sub
cmp
or
cld
xchg
adc
idivb
xchg
xchg
pop
stos
lods
in
xchg
push
jb
jge
xchg
flds
lret
popf
aad
push
insl
xchg
cltd
lret
rorl
lock
les
es
ret
sbb
adc
push
dec
aad
sti
mov
and
push
sub
push
outsb
mov
sarb
lahf
test
mov
xchg
addr16
inc
mov
cld
aad
pop
and
test
push
mov
mov
fsts
dec
add
xor
sub
inc
xlat
ss
lea
pop
dec
arpl
jle
pop
mov
adcl
xchg
jo
addr16
aas
in
dec
dec
sub
xchg
pop
dec
cmp
mov
mov
insb
das
mov
add
fcompl
mov
adc
sub
int
xchg
adc
xor
push
jmp
mov
push
cli
daa
and
push
sahf
or
fmull
mov
mov
lcall
loop
add
mov
mov
or
add
mov
and
test
pop
daa
mov
push
push
push
dec
mov
rcll
cmpl
nop
jne
lea
mov
mov
cwtl
adc
and
pop
mov
shlb
xchg
adc
aas
fdivl
fidivrl
movsb
xchg
ret
push
nop
addl
mov
mul
jmp
xor
mov
mov
aam
nop
jg
cltd
jp
test
xchg
sbb
mov
mov
and
cmpsl
jp
mov
hlt
push
pop
mov
jl
nop
sub
xchg
test
ljmp
mov
shl
test
cmpsb
fcoms
imul
mov
push
gs
cmp
jmp
lahf
cmp
jae
push
rol
int3
lods
sub
mov
adc
lcall
pop
adc
insb
data16
mov
add
xchg
sub
mov
xchg
sti
jp
sub
imul
mov
mov
push
mov
pop
fcmovu
ficoml
xchg
and
lahf
clc
enter
fistpll
mov
fcmovne
cltd
rep
decl
in
insl
push
pop
sbb
enter
cmc
add
jmp
push
pushl
popf
mov
pushl
ret
push
movl
push
movl
pusha
mov
push
lea
jmp
xor
push
test
xorl
pusha
bt
pushl
popf
push
pushl
ret
pop
dec
and
test
enter
cmpb
mov
jno
test
bound
pop
mov
push
mov
xlat
push
xchg
std
iret
sahf
cmp
cmp
aam
mov
gs
enter
les
sub
pop
ds
adc
jmp
sbb
shlb
lret
jbe
movsb
fwait
or
dec
mov
mov
dec
out
mov
mov
jl
xchg
ds
xchg
jp
lcall
jmp
mov
in
mov
in
xchg
cmpb
daa
xor
sub
icebp
lcall
mov
cmp
cmp
test
out
mov
scas
icebp
daa
call
or
adcl
push
int3
test
fstpt
mov
xchg
stos
icebp
scas
movsl
cmpsl
mov
fcompl
iret
cs
dec
adc
roll
je
dec
popf
mov
movb
pushl
ret
call
call
pusha
pushf
pushf
popl
pushf
cmc
xor
push
xor
cmp
cmc
xor
call
jmp
xor
pushf
xor
movb
xor
stc
pushl
popf
push
pushl
ret
movl
call
xor
clc
mov
xor
movb
pushf
xor
push
xor
stc
stc
pushl
popf
mov
pushl
ret
ds
cmpsl
and
cmp
loopne
dec
divb
xchg
jp
pop
mov
and
or
mov
loopne
jg
or
or
push
jge
add
in
aas
clc
imul
cld
lock
add
add
iret
fistps
add
movl
push
movl
mov
pusha
lea
jmp
push
jmp
stos
mov
pop
mov
pop
pop
push
aad
sub
mov
push
cld
push
xchg
jge
or
aaa
adc
roll
inc
xchg
iret
jge
xchg
mov
sub
xor
mov
push
sbb
sub
shll
lcall
mov
cwtl
ds
out
pusha
xchg
pop
jmp
xchg
and
sub
pushf
xorl
call
daa
mov
outsl
in
jb
pop
pop
lods
cmpsb
sahf
xchg
shrb
xchg
les
mov
movsb
mov
je
adc
pushf
pop
scas
sbbb
inc
adc
ret
mov
mov
dec
cltd
push
rcl
das
fadd
int3
mov
test
xchg
in
fstp
arpl
mov
pop
pushf
jl
pop
add
sbb
loope
fistl
mov
mov
imul
stos
testl
repz
ja
call
adc
inc
sbb
psubusb
xor
add
xchg
loop
mov
mov
cltd
out
pop
sbb
push
jae
dec
mov
mov
imul
jb
popf
add
and
imul
je
sti
jne
movsb
pop
rorl
cmc
sbb
xor
xor
jmp
xor
jmp
xor
pusha
xor
pushf
xor
clc
xorl
test
test
xor
stc
call
pusha
pushf
popl
cmc
xor
jmp
call
bt
xor
cld
test
pushl
popf
push
pushl
ret
mov
push
jae
dec
dec
xchg
fsub
scas
or
ds
repz
ret
es
out
sub
stc
jno
adc
jecxz
fsubs
bound
roll
shr
pushf
ja
or
rcl
cli
rol
inc
sub
psubusb
nop
jns
mov
in
mov
jmp
cwtl
sbb
mov
insb
cmp
test
in
jnp
js
stos
xchg
xor
xlat
fdivl
dec
je
xchg
leave
cwtl
dec
mov
add
loop
sahf
je
mov
ja
sub
outsl
and
mov
mov
insb
dec
mov
lds
or
or
sub
sub
pop
sbb
cmp
incl
clc
add
es
mov
dec
es
push
or
push
push
pop
lret
jge
mov
mov
shlb
aas
lods
outsl
push
inc
sub
sub
sahf
imul
push
and
adc
sbb
inc
mov
mov
mov
push
test
cmp
lods
mov
sub
arpl
sti
cld
sbb
jbe
mov
add
mov
add
js
mov
movsl
jp
rorl
sahf
lcall
div
add
filds
dec
push
jecxz
and
cs
loop
xchg
mov
movsb
mov
ss
dec
sbb
lahf
jbe
std
insb
fs
push
jne
sbb
daa
xor
nop
pusha
pop
popa
test
je
imul
pop
jae
movaps
leave
icebp
insb
popf
push
sub
adc
and
cmpsb
pusha
push
xor
out
pop
jns
cltd
out
inc
dec
adc
into
dec
lea
lock
mov
rcll
imul
mov
sarl
pop
cwtl
or
bound
iret
xchg
mov
sbb
mov
sub
imul
mov
inc
ss
mov
icebp
leave
xchg
mov
push
inc
je
inc
fdivrs
fdiv
lret
inc
add
mov
scas
cmp
sub
or
aas
add
xchg
jnp
sbb
je
sbb
xor
add
in
lods
cld
pusha
movl
push
pushf
movb
movw
lea
jmp
negl
popa
jne
dec
out
push
adc
pop
jne
push
cmpb
mov
ret
adc
sahf
lds
fiaddl
mov
mov
incb
mov
les
cmp
lea
aas
jl
cmp
sub
andl
jnp
mov
xorb
in
aad
mul
scas
add
xchg
scas
call
push
movb
movl
jbe
push
movl
pushf
lea
jmp
xor
cmp
cmp
xor
test
xor
bt
jmp
jmp
movl
movw
lea
jmp
xor
pusha
xor
pusha
pushl
popf
push
pushf
pushl
ret
jmp
pusha
movl
pushl
pusha
pushl
movl
movb
push
lea
jmp
jmp
pusha
pushf
popl
cmp
xor
cmp
xorl
pushl
clc
xor
jmp
push
xor
bt
jmp
pushf
call
stc
xor
repnz
cld
push
cmp
rorl
adc
jno
jb
cmp
pusha
xchg
push
es
out
repnz
adc
pop
daa
loopne
inc
mov
loop
jne
push
imul
mov
idivl
das
scas
xchg
out
ret
loop
mov
adc
jbe,pn
xor
jno
push
and
imul
mov
insl
sub
mov
jnp
ficompl
cmp
inc
xchg
jge
xchg
dec
xor
sbb
into
add
sub
bound
jle
aad
mov
inc
ja
adc
mov
cmpsb
push
mov
push
xlat
lods
mov
mov
jl
negb
dec
xor
cld
stos
leave
js
sub
fidivrs
add
mov
jns
mov
test
xchg
ret
mov
cmp
mov
lahf
dec
cmc
sahf
sub
rclb
or
rcrl
xor
pop
fcom
mov
jp
shr
call
xchg
and
add
cmp
xor
stc
xor
clc
pushl
popf
pushf
pushl
ret
xor
sub
dec
in
arpl
shrl
sti
jecxz
loopne
dec
push
test
mov
xchg
hlt
and
stos
add
jnp
cmpsb
fdivl
pop
outsl
jge
add
xlat
loopne
sub
out
cmp
xchg
mov
mov
decb
shr
mov
arpl
xchg
stos
test
push
sahf
mov
cmpsl
imul
mov
pop
fcmovu
mov
mov
cmp
repnz
test
out
fnstenv
pop
out
mov
cmp
aam
jmp
ds
out
mov
das
in
jne
push
inc
pop
aaa
inc
insb
subl
faddl
xor
pop
mov
push
push
stos
test
sbb
testb
pusha
mov
push
jo
dec
pop
push
and
cmp
dec
dec
and
cmpsb
pop
push
push
pushf
call
jmp
pushf
popl
stc
xor
cmp
xor
cmp
xor
jmp
clc
xor
pusha
xor
stc
push
xor
clc
xor
bt
xor
cmp
xorl
clc
xor
test
test
pushl
popf
pushf
pushf
pushl
ret
push
mov
pushf
popl
bt
push
xor
jmp
push
call
jmp
xor
stc
pushf
xor
test
pushf
xor
clc
movb
xor
stc
xor
test
xorl
test
jmp
jmp
xor
push
pushf
xor
call
push
movl
call
cmc
xor
call
fnstcw
xor
nop
jno
mov
popa
mov
popa
ss
or
cmc
mov
test
inc
outsl
lock
js
int
push
pop
loopne
cmpsb
enter
int
sbb
lock
push
lds
push
mov
out
mov
push
jmp
fstp
enter
mov
cwtl
or
cs
in
inc
dec
imul
pop
jge
add
sub
sahf
add
cmp
ficomps
test
inc
jnp
dec
lret
adc
data16
cmp
jo
fimuls
ror
jmp
in
flds
pop
sub
in
pop
jecxz
lret
mov
mov
mov
sub
sub
and
jns
shlb
enter
jb
inc
js
xor
inc
xor
ret
cmp
das
inc
sti
push
xlat
cmpsl
mov
xchg
inc
jo
fisttps
xor
loop
es
cmp
out
in
fsubs
jecxz
add
mov
test
scas
jp
jbe
pop
insl
lcall
adc
sti
rclb
shrl
dec
out
shrl
xor
fwait
int3
push
loope
xor
fld
push
sbb
sub
inc
gs
xchg
pusha
out
or
jge
divl
mov
cmp
xchg
inc
mov
jae
xor
xchg
in
lret
mov
cmpsb
adc
rcrl
movsl
mov
lock
push
xor
lds
add
push
adc
mov
aas
into
pop
rclb
cmpsb
mov
inc
les
sbb
inc
and
sbb
jl
call
pushf
pushf
popl
call
ret
xor
xchg
fimull
sub
add
ljmp
push
out
inc
ret
mov
lods
jno
test
or
cmp
aaa
pop
jae
pop
aas
dec
dec
xchg
inc
jle
pusha
pop
imul
cmp
push
jge
jnp
jge
ffree
dec
cmp
push
iret
mov
xchg
inc
pop
xor
rcrb
jbe
xchg
jl
fnsave
add
push
or
or
sbb
sbb
xchg
ss
cmp
add
or
mov
ret
inc
xor
cmp
lret
mov
in
scas
dec
std
adc
fimull
sbb
add
out
adc
mov
dec
mov
push
mov
cmp
rcrl
push
adc
jge
dec
loope
hlt
fs
iret
mov
fcoms
xchg
xor
push
xchg
dec
clc
mov
push
inc
or
cmc
cli
arpl
xor
lods
push
or
repnz
clc
push
aaa
sub
mov
add
or
jmp
mov
sub
sub
push
enter
divb
add
add
push
sarb
xor
sbb
xor
push
enter
jg
in
movsl
stos
pop
sub
sbb
lret
pop
jp
mov
inc
bound
xchg
pop
dec
jns
mov
jne
fs
push
add
adc
push
ds
ljmp
repz
shll
lcall
inc
mov
filds
sub
mov
mov
add
das
or
mov
sbbb
out
mov
ret
mov
lret
dec
popa
jg
mov
xchg
test
mov
lahf
iret
pop
outsb
or
add
jne
lods
movsl
ss
aam
testl
data16
and
mov
inc
xor
jge
popf
cmc
and
shll
or
pop
pop
in
add
xchg
dec
loope
cmp
sahf
pusha
push
add
nop
mov
xorb
push
fstl
mov
movsb
jmp
push
hlt
mov
aas
aaa
sub
jecxz
and
xchg
shr
jmp
push
xor
scas
mov
jo
movsl
repz
das
or
mov
pusha
add
push
fxch
pop
ss
ss
add
shll
enter
sub
mov
dec
mov
mov
inc
add
sarb
mov
jb
add
lds
sti
cmc
cmp
xorl
push
cmp
xor
cld
mov
pushl
popf
push
mov
pushl
ret
stc
xor
xchg
xchg
xor
idivl
add
mov
or
pop
xlat
jle
dec
mov
dec
dec
jecxz
pop
sub
repz
rclb
rcl
lods
inc
test
js
jmp
mov
das
mov
std
jnp
pop
xchg
out
rolb
mov
jmp
les
xor
xor
mov
or
push
adc
and
or
jnp
js
mov
outsb
repz
adcl
dec
xor
bound
push
cmpsl
scas
inc
ja
adc
mov
scas
push
push
xlat
scas
repz
pop
push
ret
xchg
std
mov
dec
inc
adc
ljmp
cli
or
push
sub
push
fcmovbe
test
or
xchg
mov
pushf
dec
mov
and
jb
or
push
insb
lock
xor
push
pop
js
inc
ja
xchg
mov
test
scas
sahf
mov
mov
mov
js
or
ljmp
test
mov
push
rol
fwait
pop
outsb
into
lods
loop
mov
test
loop
xchg
mov
sbb
jo
je
and
mov
filds
repz
stos
or
rclb
xor
xchg
jg
mov
sarl
cmpsb
clc
ficompl
mov
push
scas
sub
lcall
fdivrs
adc
jmp
das
in
mov
mov
jp
enter
inc
xor
mov
popl
stc
jmp
xchg
and
mov
xchg
or
cwtl
cwtl
aas
xor
xorl
xchg
xor
adc
rorb
aad
sbb
jb
mov
inc
xor
insb
adc
mov
mov
ret
orb
lods
sbb
jle
inc
stc
dec
out
shll
mov
fisttpl
and
loopne
stos
or
in
int
fisttps
into
jb
mov
jnp
xor
sar
movsl
rcrl
repnz
jg
test
pop
or
test
dec
and
mov
jo
mov
adc
or
fadds
imul
cmp
mov
add
and
loop
mov
shr
fnstsw
or
pushf
jecxz
push
jb
inc
negl
or
mov
pop
xchg
test
push
xchg
imul
mov
xchg
pop
or
jp
lock
fsubs
jge
adc
cmp
lcall
ljmp
out
stc
insb
in
mov
mov
mov
add
pop
mov
js
cli
insb
and
xchg
and
loope
out
and
xchg
cltd
fsubr
mov
jl
push
sbb
sub
movsl
and
xchg
lahf
jecxz
and
dec
int3
jno
push
add
inc
or
jo
ljmp
scas
inc
inc
xchg
dec
mov
cmc
arpl
imul
or
inc
cltd
adc
or
mov
mov
adc
inc
push
pop
icebp
out
jp
cmp
inc
pop
xchg
loope
adc
out
jnp
xlat
seta
in
mov
and
jl
xchg
sbb
inc
pop
push
add
jb
cmpb
stos
enter
jo
cmp
ja
pop
into
lahf
repnz
push
rorl
call
jne
mov
aad
xchg
outsl
subl
push
xchg
push
cld
and
adc
mov
iret
pushf
xor
push
or
cmp
std
mov
jge
les
and
mov
stos
cli
cld
testl
inc
and
ds
test
insb
and
pushf
lea
jmp
push
pushf
pushf
popl
stc
call
inc
iret
xchg
sub
and
inc
mov
mov
rcrl
dec
dec
xor
daa
cmpsl
negl
ds
loopne
push
icebp
cld
ds
je
fsubs
dec
pop
adc
mov
lahf
lds
fmuls
add
sub
xchg
mov
jge
adc
shrl
cltd
xchg
lret
push
scas
movsb
insl
add
xor
or
mov
cld
lea
bound
dec
aas
mov
xchg
ret
pusha
out
mov
cmp
int3
xor
in
mov
inc
mov
pushl
data16
test
pop
xor
and
addr16
je
cmp
jo
adc
stc
out
movsb
in
in
cwtl
loop
insl
iret
jg
mov
mov
xchg
imul
ficoml
and
sbb
cmp
mov
fnsave
cltd
int
xchg
shrl
es
xor
cmp
stc
xor
jmp
lahf
cmc
es
loope
mov
scas
sbb
cmp
fcmovb
lcall
mov
std
xchg
shrl
add
ja
mov
push
mov
pop
and
shll
pop
loopne
repnz
xchg
xchg
pop
jno
inc
das
adc
adc
and
jecxz
mov
push
sub
xchg
sub
and
jne
jbe
lods
je
xchg
sbb
out
jmp
movl
push
movb
pushl
lea
jmp
xor
stc
clc
xor
cmp
test
xor
call
add
test
dec
nop
loopne
push
jl
mov
daa
movsl
push
sub
fdivr
dec
je
js
mov
fsts
cmpsb
xchg
mov
pusha
mov
aam
push
outsl
inc
testl
xchg
sbb
cmp
adc
testl
pop
jl
pop
out
push
add
lea
stos
orl
xchg
push
push
dec
ret
cs
and
mov
ss
addr16
test
fsubp
mov
mov
imul
xor
push
sbb
mov
jns
xchg
imul
cli
cmp
inc
mov
mov
xlat
xchg
lods
enter
lods
lds
jbe
push
mov
mov
xor
fsub
leave
lea
jb
fists
sar
out
ret
and
xor
pushf
xor
call
fstp
mov
sbb
mov
fsubs
scas
or
and
mov
or
or
mov
ds
xchg
cmc
imul
out
pop
jne
stos
leave
mov
movl
inc
push
sbb
fidivl
jb
push
lcall
xchg
push
lahf
mov
pop
jecxz
jne
push
adc
adc
and
push
mov
sahf
data16
ret
std
dec
mov
mov
push
cld
xchg
and
push
loop
push
ret
aaa
cli
adc
push
leave
pop
loop
xchg
ror
and
push
xor
rclb
loopne
jmp
in
jl
mov
cmp
data16
sbb
sub
addl
aaa
xor
in
mov
ret
xor
mov
and
aaa
inc
in
jecxz
stos
pop
push
jnp
aam
pop
and
or
movsl
sub
gs
fsub
je
shrb
sbb
ret
mov
xchg
cmp
sbb
mov
fisubrl
sti
int
xchg
lods
je
lea
aam
pop
rcrl
fdivl
adc
pop
push
jae
les
jne
xor
les
jbe
cwtl
mov
or
xor
add
fbld
jecxz
arpl
lret
xlat
scas
jp
xchg
cmp
cwtl
push
pop
ftst
jne
pusha
call
xchg
adc
pop
fdivrs
dec
cli
lret
js
insl
mov
sub
movsl
mov
sahf
inc
push
dec
cld
rorb
xchg
push
in
cmpsb
mov
and
push
xor
mov
repnz
std
pushf
pop
lds
cmp
xchg
gs
dec
cmp
mov
push
aad
pop
imul
outsl
xor
pop
mov
cmc
mov
mov
dec
push
cld
arpl
enter
shrb
loopne
movl
push
call
movb
movl
jns
pusha
pushf
mov
movl
push
mov
push
lea
jmp
push
pushf
pushl
movl
pushl
call
push
pushl
pushf
movl
pusha
call
jle
push
pushf
jmp
pusha
movl
pusha
movl
pushf
mov
pushf
lea
jmp
push
movl
pusha
pushf
mov
push
movl
mov
pusha
movw
lea
jmp
push
pushf
jmp
push
mov
pushf
popl
cmp
test
xor
pushf
call
cmc
xor
movb
pushl
popf
pushf
pushl
ret
xor
bt
test
xorl
bt
stc
xor
pusha
xor
cmc
cmp
xor
stc
jmp
jmp
mov
movl
jmp
xor
pushf
clc
xor
cmp
xorl
cmc
xor
stc
xor
pushf
jmp
pop
mov
mov
dec
push
pushf
repz
push
xchg
or
ds
sub
jecxz
fisttps
arpl
xchg
movsl
or
cltd
jns
mov
stc
out
jne
sbb
fs
fnstenv
gs
push
adc
lret
popa
or
and
pop
push
dec
cmp
stos
xorb
pop
imul
pop
and
stc
xchg
rclb
adc
in
jo
insl
cmp
imul
idivb
pop
dec
popf
jecxz
mov
loope
or
push
xchg
scas
mov
mov
jo
dec
sub
mov
in
std
pop
push
fadds
cmp
jne
out
mov
sub
jne
mov
pop
cmp
dec
push
pop
dec
rorb
lret
cmp
into
mov
sbb
ljmp
sti
push
mov
pop
int
repnz
fs
push
xchg
mov
dec
jnp
enter
cltd
pusha
pop
fdivrp
insb
inc
shll
out
and
arpl
mov
test
arpl
mov
jecxz
adcb
xchg
ret
sti
iret
lret
pop
jne
mov
push
imull
adc
loope
mov
mov
xchg
and
fs
aaa
sar
fimuls
xchg
cmp
lock
pop
mov
mov
mov
dec
cld
popf
stc
test
std
shlb
sbb
mov
repz
clc
andb
mov
xorb
aaa
cwtl
sahf
sub
jecxz
andl
ds
dec
std
pop
push
dec
pop
mov
xchg
mov
fildll
push
xor
repnz
leave
cltd
dec
push
iret
cwtl
push
xchg
sbb
push
mov
push
jae
or
add
lret
or
out
push
mov
jne
dec
pushf
xchg
push
gs
ficoms
out
jb
mov
aad
icebp
mov
jle
ret
sarl
pop
lds
mov
mov
cmp
pop
loopne
rcrb
call
and
or
int
inc
or
pop
xchg
fimuls
sbb
cmc
je
bound
cmp
pop
jns
sub
test
sbb
sbb
sub
scas
addr16
fmull
out
or
xchg
add
les
js
hlt
arpl
cmpsl
shll
cmp
mov
cld
push
cmp
test
iret
jnp
adc
cmp
cwtl
pop
inc
and
jge
rol
sbb
mov
pop
std
notb
in
cli
and
mov
rcrb
hlt
sub
sub
mov
push
sbb
mov
cld
ret
lahf
xor
jne
insl
pusha
cmp
or
icebp
jb
inc
push
mov
mov
insb
jge
jbe
pop
and
je
es
test
push
pop
sbb
fwait
pop
outsb
daa
imul
mov
test
sub
iret
mov
out
icebp
xchg
js
subb
cli
std
push
or
lret
call
addr16
sub
std
lods
push
xor
icebp
push
rorb
push
xchg
stc
sub
ja
add
jns
jmp
outsb
lahf
out
sbb
mov
jle
xchg
cmpsl
sub
ss
jnp
gs
shrl
xor
mov
jl
das
fnstenv
mov
push
pop
js
add
xor
sar
xchg
test
mov
mov
idivl
cwtl
mov
scas
mov
loope
hlt
sub
xchg
push
mov
dec
js
add
dec
loope
fxch
mov
xorl
mov
cld
jae
daa
test
add
mov
scas
testb
js
es
jne
into
or
enter
cmp
adc
outsb
testb
mov
idivb
addr16
push
or
clc
inc
and
out
loopne
xor
lret
mov
shrb
out
out
adc
xchg
lret
das
push
out
pop
sub
faddl
mov
xor
fsts
push
or
xlat
or
fildll
xor
movsl
sbb
pop
pop
push
test
gs
xchg
fucom
sbb
int3
push
shr
outsl
mov
inc
mov
mov
cmp
int3
push
cwtl
push
jae
pusha
test
adc
mov
xchg
lods
sub
dec
lock
scas
ret
jle
or
das
cwtl
jne
mov
call
in
pop
lcall
push
jg
and
loopne
inc
sti
fists
xor
xor
jmp
into
xor
lds
mov
cmovge
sub
int
imul
in
lret
pushf
mov
mov
pushl
jle
test
sahf
mov
jp
cmpl
mov
pop
orl
outsl
pushl
lret
add
rcll
and
mov
int
sbb
adc
lods
push
js
and
cmp
cmp
aaa
pushf
call
add
loope
pop
mov
xchg
fisubl
icebp
imul
sbb
rcr
les
or
int3
stos
clc
outsb
clc
xchg
or
arpl
and
leave
mov
jecxz
imul
cmpsb
mov
ret
je
aam
jge
mov
adcb
add
jno
sbb
int3
mov
lock
cmp
dec
or
testl
lds
cmpsb
push
enter
repnz
pusha
in
jne
popa
inc
add
incb
or
mov
mov
cld
orb
adc
mov
mov
lock
jb
push
int3
pop
add
adc
push
addb
push
xchg
mov
sbb
xor
jg
imul
adc
mov
push
fisttps
pop
xlat
outsb
push
or
pop
pop
dec
xchg
cmp
test
pop
mov
pop
in
outsl
xor
mov
mov
xchg
jmp
adc
outsb
cltd
cmpsw
mov
shrl
xor
mov
add
lahf
xchg
sbb
mov
push
mov
ret
mov
lods
outsb
dec
daa
jmp
insb
pushl
push
cld
push
scas
ss
cmpsl
push
xlat
push
cs
lahf
aaa
imul
shrl
jl
push
and
insb
call
mov
xchg
mov
scas
or
mov
scas
adc
sub
jns
mov
pop
jo
dec
sub
push
mov
fucomi
aam
je
aad
xchg
lds
mov
jmp
je
loope
dec
mov
daa
outsl
in
pop
adc
mov
repz
cmpl
sbb
pop
cwtl
sbb
mov
scas
pusha
xchg
jecxz
cmpsb
rcrl
xor
popa
rcrb
mov
ja
inc
aaa
jae
mov
popa
test
jae
icebp
fiadds
cmp
inc
jl
jecxz
pushf
and
xor
movsb
out
and
mov
pushf
loopne
bound
push
jno
sub
and
fisttpll
sbb
mov
mov
mov
es
xchg
leave
sub
push
xor
mov
push
lret
loope
loopne
fsubs
rcrl
or
mov
lcall
fidivrs
cmp
adc
xchg
push
imul
mov
sub
or
jg
ljmp
sub
and
mov
lahf
lds
dec
cmpsb
sti
mov
mov
mov
inc
arpl
sbb
cmp
or
inc
loop
shlb
enter
push
rclb
adc
mov
cltd
sbb
dec
or
fidivrl
mov
ficomps
or
pop
out
mov
imul
std
mov
sub
divl
cmp
ret
andb
jne
data16
jle
jl
push
movsb
xorb
adc
and
jle
sbb
add
sub
test
fcom
xchg
sub
cmp
cmp
cmp
xor
pop
movb
movl
pushf
jmp
lock
nop
stos
push
mov
mov
xor
jno
xorl
jecxz
jb
xchg
jnp
lret
lcall
add
adc
pop
out
xchg
pusha
and
ds
jne
and
mov
mov
dec
int
mov
pusha
rcrl
aam
inc
daa
scas
inc
dec
push
orb
je
aad
hlt
andl
pop
loopne
inc
fbstp
mov
punpckhdq
loopne
clc
jge
repz
addr16
push
icebp
xchg
cld
inc
mov
mov
fsubrs
scas
jp
cmp
sub
or
shrb
lock
std
add
push
mov
xor
out
mov
rorl
cmpsb
dec
sbb
push
push
adcl
stos
insb
outsl
adc
repz
xor
lds
push
push
push
sub
repz
mov
push
push
filds
cmpsb
or
mov
adc
push
enter
repz
pop
punpckhdq
adc
sub
cmpsb
pmulhuw
into
cmp
dec
leave
stos
sbb
popa
mov
jbe
test
and
dec
das
adc
cli
cmpsb
dec
imulb
repz
test
pop
popa
dec
xchg
aad
int3
jl
jne
mov
ret
out
push
adc
adc
push
jmp
outsl
mov
inc
jnp
xor
mov
mov
dec
add
fdivrl
sub
and
cmpsb
repnz
out
ret
gs
xor
sub
das
push
repnz
mov
inc
sahf
lock
pop
mov
cld
shll
add
shll
je
push
nop
dec
lahf
daa
or
in
repnz
push
cli
mov
inc
lods
rcr
es
or
jbe
fildll
and
xor
mov
add
dec
mov
movsl
je
cmpsl
mov
push
inc
stos
mov
enter
pop
call
mov
pop
fwait
sbbb
shlb
xchg
adc
sti
and
cmp
pushf
ds
sbb
pop
les
sahf
cltd
roll
stos
mov
loope
cwtl
in
lret
xlat
xchg
jo
jp
cltd
jge
fdivs
cli
inc
mov
mov
push
push
xor
push
int
sub
mov
jb
jo
into
add
cmp
adc
in
sbb
repz
ss
jbe
aaa
jle
pop
sti
pop
pop
imul
xchg
adc
jae
into
pop
lea
rcrl
push
nop
test
jo
int
out
out
jge
inc
outsl
cmpsl
scas
data16
pop
inc
fdivrl
sub
adc
clc
sbb
les
pop
mov
rcl
sbb
mov
push
fstpl
mov
inc
xchg
pop
mov
call
shlb
mov
sub
push
sahf
adc
je,pn
xor
out
int3
mov
shr
sub
mov
in
inc
cmpsl
push
scas
lret
test
sub
mov
insb
lods
xchg
scas
idivl
aam
sbb
js
cmc
cmp
pop
adc
lret
cmpsl
out
push
out
sbb
jnp
add
or
and
xchg
stc
insl
xor
lret
fstpt
cwtl
arpl
clc
mov
lret
cmpsb
mov
dec
cltd
or
mov
sti
pusha
adc
pop
out
sahf
mov
les
pop
sub
and
ja
pushf
movl
jmp
push
movl
jmp
pushf
xor
clc
pushl
xor
pushf
clc
pushl
popf
pusha
pushl
pushl
ret
push
pushf
popl
test
call
pusha
movb
jmp
pushf
movl
push
movl
pushf
movw
pusha
lea
jmp
stc
xor
pusha
xor
stc
jmp
push
call
movl
call
test
xorl
test
test
xor
pusha
xor
movl
jmp
pusha
pushf
popl
stc
xorl
clc
xor
mov
xor
bt
xor
cmc
pusha
xor
test
mov
xor
bt
xor
call
lds
and
xchg
xchg
inc
cld
jle
aam
push
mov
add
pusha
pusha
sti
or
sarl
inc
nop
fdivl
fildl
pop
and
add
xchg
out
jnp
add
push
push
xor
sbb
in
mov
enter
out
add
addr16
lock
pushf
movl
movb
movl
pushf
movb
pusha
push
lea
jmp
push
call
pusha
pushf
push
movl
pusha
pushf
pushf
pushf
movl
pushf
movb
lea
jmp
movb
mov
pusha
movl
mov
pushf
lea
jmp
jmp
pushf
pushl
pushf
movl
pushf
movl
movb
pushf
push
pushf
lea
jmp
pushf
cmp
pushf
xor
stc
xor
jmp
add
lahf
clc
arpl
cmp
xchg
xor
imul
jge
mov
repz
pusha
or
mov
and
hlt
pop
stc
push
mov
jmp
jno
jno
hlt
sbb
repz
xchg
xchg
push
subb
lret
loopne
test
mov
push
das
addr16
dec
daa
cmp
pop
ljmp
xchg
mov
bound
jns
lcall
scas
or
and
mov
mov
scas
scas
mov
inc
cmp
ret
shll
shlb
ret
pop
sbb
xchg
rcl
inc
mov
enter
pop
insl
xchg
add
inc
sub
sub
jecxz
sub
add
movl
push
movl
mov
mov
pusha
pusha
lea
jmp
pusha
pushf
popl
stc
xor
cmp
mov
xor
cmc
xor
jmp
pusha
jmp
pushl
popf
pushf
pushf
pushl
ret
pusha
mov
movl
push
call
nop
push
shrl
shlb
inc
jo
add
insb
mov
repz
outsl
cli
or
jl
fldl
jge
out
lret
xchg
or
jge
mov
jae
xchg
stos
add
dec
lods
adc
lods
xor
out
insl
inc
andl
shll
scas
int3
out
inc
divl
inc
fsqrt
and
out
jo
lods
dec
std
adc
bound
jl
adc
hlt
sahf
sbb
lds
push
xor
push
iret
push
jge
inc
sahf
dec
sbb
enter
push
jne
mov
sub
imul
sbb
int
fstps
fucomi
xchg
push
push
inc
sbb
xor
cmc
sbb
push
out
pop
aas
cmp
or
cmpsb
jecxz
pop
inc
repz
xchg
pop
pusha
dec
add
test
sbb
sbbb
movsl
jae
pop
add
out
jmp
inc
loope
fcoms
fistpll
inc
sbb
or
mul
cmp
cmp
icebp
and
push
mov
leave
and
sbb
stos
mov
inc
and
sti
pushf
push
int
cmpsl
push
fs
add
pop
movsl
stos
pop
dec
push
lret
push
xor
lahf
into
aam
movsl
dec
push
inc
and
mov
ja
push
and
xchg
mov
xchg
sbb
push
repz
sbb
imull
add
cmpb
or
stc
insl
sbb
xor
inc
aas
and
inc
jecxz
adc
outsl
pop
sti
xor
add
sti
pop
add
xchg
cmpsl
xchg
mov
fwait
or
nopl
nop
xor
shrd
dec
inc
jnp
xchg
push
ret
inc
sarb
lock
inc
jmp
lds
mov
std
fdivs
je
cltd
mov
jo
mov
push
mov
jg
out
sub
mov
mov
xchg
ds
in
sub
xor
jecxz
inc
js
sub
dec
jbe
lock
xor
mov
fs
jb,pn
mov
mov
push
push
arpl
xchg
cwtl
test
mulb
mov
fld
mov
fucomp
xchg
addl
das
dec
add
pushl
dec
dec
in
or
add
mov
push
push
push
lea
cwtl
jo
in
mov
pop
movsb
add
xchg
inc
push
mov
daa
js
mov
sbb
aam
jle
aam
inc
loop
dec
into
lcall
sub
adc
push
sbb
pop
mov
pop
sub
pop
fwait
mov
loope
fisttpl
or
push
aad
sub
xchg
leave
pop
popf
mov
sbb
nop
and
imul
mov
popf
scas
ss
or
mov
push
mov
sahf
dec
mov
add
ror
adc
sub
mov
mov
gs
fs
or
and
sbb
mov
mov
popf
das
dec
movsl
dec
aas
ds
mov
sub
or
sbb
mov
jmp
mov
aaa
fdivs
in
jecxz
pop
scas
pop
lret
or
ret
or
xchg
testl
jmp
push
pushl
pushl
movl
pushf
movl
movl
push
pushl
lea
jmp
mov
push
push
mov
and
jl
ret
dec
insb
jle
loop
cltd
mov
pop
xchg
and
in
pop
xchg
clc
inc
push
adc
loopne
mov
addb
iret
loopne
jns
inc
xor
shl
push
pop
pop
add
push
jb
test
adc
dec
jl
repnz
cltd
pop
cmp
jl
and
mov
push
pop
add
repz
test
insl
mov
xchg
jae
shlb
aas
repz
je
jb
adc
lea
movsb
mov
ret
mov
and
sub
loope
pusha
and
fdiv
inc
cmp
out
add
movsl
dec
jecxz
shl
in
push
or
pusha
or
lahf
lret
mov
mov
aad
fadd
inc
dec
push
cmc
sahf
outsb
push
addb
mov
mov
sub
fs
jbe
pusha
push
movl
jmp
push
pushf
popl
push
push
xor
clc
call
push
movl
call
test
push
xchg
xchg
push
mov
in
or
call
cmp
icebp
xor
imul
test
daa
scas
hlt
es
inc
in
mov
testl
gs
fists
sbb
mov
and
mov
ljmp
out
xchg
fcoms
pusha
pushl
lea
jmp
pushf
pushf
popl
cmc
push
xor
call
shlb
cwtl
loopne
stos
cltd
rorl
sbb
add
sub
adc
xchg
and
ljmp
cmpsb
mov
sub
mov
stos
inc
aad
add
aas
inc
arpl
inc
dec
fimull
mov
sbb
pusha
push
lds
arpl
inc
jbe
mov
popf
aam
lret
or
ret
lea
jb
pop
sub
push
arpl
int
xor
or
fisubrl
cmp
into
jae
jecxz
sbb
pop
movsl
mov
sub
jb
cld
xor
repnz
lea
xorl
xchg
test
pusha
int3
pop
into
les
xor
aaa
ret
cmpsb
enter
fimuls
les
es
in
gs
xchg
xchg
pop
sub
dec
xchg
and
loopew
lea
nop
pop
jae
jno
aam
mov
lea
sub
mov
lahf
lods
xor
mov
or
test
or
mov
fsubl
jl
xlat
xchg
mov
jb
sub
je
ljmp
jbe
inc
jle
int
in
and
sysret
into
cmp
cmc
add
lret
inc
xor
jno
jp
mov
fs
and
sbb
fisubs
hlt
add
adc
loope
mov
ds
out
out
gs
xchg
mov
dec
fcomp
sbb
loopne
xchg
push
scas
lods
pop
push
sbb
in
inc
dec
mov
xor
mov
mov
xchg
xchg
dec
clc
test
pop
jl
in
pop
int3
xchg
fisttpll
fildll
ja
ja
jecxz
icebp
insl
das
sub
das
inc
ja
mov
push
lods
stos
push
in
push
pop
xchg
cmp
mov
dec
in
sub
pop
clc
jns
fcmovb
shrl
outsb
movsl
mov
icebp
mov
jle
outsl
inc
sbb
sub
or
pop
dec
push
add
icebp
bound
sti
rcrb
push
xchg
out
aad
push
pop
mov
maxps
test
cmovs
int
fcomps
pushf
popl
cmc
stc
xorl
call
pushl
popf
movb
movl
pushl
ret
cli
mov
xchg
loopne
or
ret
in
test
pusha
push
pop
xor
sub
push
push
xchg
out
add
push
inc
add
push
xchg
fisttps
dec
xor
movsl
cwtl
stos
imul
jg
rcrb
add
mov
out
pop
sti
test
ljmp
ficomps
fildl
in
scas
sarb
mov
adc
in
fistpl
mov
aad
in
and
clc
in
mov
mov
int3
add
xchg
jne
or
out
daa
into
mov
and
mov
dec
xchg
loope
out
in
xchg
sub
sbb
into
push
out
into
les
xor
cmp
daa
jnp
xor
fwait
sbb
dec
into
sbb
and
repnz
daa
addr16
xlat
mov
xor
inc
popa
push
sahf
mov
mov
xchg
leave
repz
frstor
repz
shrl
addl
icebp
mov
imul
xorl
cmp
clc
xor
call
inc
lret
or
add
jmp
cltd
mov
lock
les
test
sti
scas
push
ljmp
dec
and
js
dec
lea
xchg
movsl
repz
mov
rorb
fadd
mov
imul
pop
leave
addr16
adc
xchg
dec
dec
iret
and
inc
sarl
and
add
sbb
sub
cmp
ret
or
cmp
jmp
nop
imul
xchg
mov
dec
push
cmpsl
or
inc
jo
aas
dec
push
out
mov
or
cmc
mov
push
dec
or
sub
out
mov
test
in
jmp
lret
aas
push
cmp
pop
dec
mov
test
in
inc
push
sub
xchg
jb
jae
rorl
jo
addr16
mov
ss
leave
mov
adc
aas
scas
pusha
lcall
add
dec
push
std
std
mov
outsl
sub
inc
and
lret
jge
xor
pop
iret
ss
push
mov
sbb
loope
dec
inc
stos
and
aam
pop
les
out
sub
test
pop
cmp
stc
add
cs
fisubs
xchg
push
lods
movsb
inc
jne
iret
or
dec
jb
adc
jmp
sbb
dec
xchg
mov
push
loopne
es
and
or
and
ss
mov
mov
fnstcw
icebp
ja
adc
aam
insl
jno
mov
inc
push
sub
repz
lea
sub
es
clc
test
add
adc
test
jle
nop
clc
add
push
repz
xchg
push
pop
jns
jnp
out
add
adc
out
icebp
or
push
test
stc
les
lret
push
or
fwait
sbb
imul
mov
xor
push
dec
ljmp
mov
fnsave
jle
scas
xchg
adc
fs
inc
jo
or
adc
pmaxsw
orb
push
fdivs
dec
rcrl
jle
movsl
rcll
das
mov
adc
sarl
mov
lock
or
std
aad
pop
sbb
push
mov
roll
cmp
shll
xchg
ljmp
dec
pop
push
xchg
jg,pn
cli
xor
clc
clc
xor
cmp
push
xor
call
jmp
push
dec
cmpsb
or
jp
iret
mov
aam
or
cmp
std
jb
stos
jns
fildl
xchg
sbb
popa
adc
inc
jmp
mov
enter
adc
hlt
test
int
mov
push
jb
and
inc
pop
pop
mov
inc
jl
ljmp
push
aas
mov
sbb
mov
js
data16
xor
pop
in
pop
pop
insb
add
inc
lcall
xor
sub
mov
jg
sbb
xchg
push
push
in
lret
jae
ds
mov
rolb
inc
popa
xchg
mov
cmpsl
popf
jmp
fdivp
jae
imul
push
xchg
mov
addr16
je
stos
test
in
cwtl
mov
in
nop
push
pushf
popl
bt
xor
pusha
cmc
xor
cmp
xor
call
pusha
jmp
movl
jmp
pushf
popl
call
pushf
movl
pushf
push
movl
push
movb
push
push
lea
jmp
pushf
call
ds
sahf
rol
movsb
popa
xchg
push
inc
cld
pop
mov
dec
pop
inc
sbb
sub
jle
cwtl
fisubrs
outsl
and
mov
into
call
dec
dec
push
cmpsb
out
test
add
xor
bt
pushl
popf
pushf
pushf
pushl
ret
movl
push
pushf
pushf
lea
jmp
pushf
popl
pushf
xor
call
jmp
movl
lea
jo
pushf
pusha
movl
pusha
pushf
push
lea
jmp
movl
push
pusha
movw
lea
jmp
pop
outsl
inc
test
dec
or
xchg
push
cmp
adc
mov
mov
aaa
jg
ds
mov
dec
outsl
stos
lea
add
jl
jle,pn
shlb
jo
imulb
add
push
lods
and
mov
pop
mov
xlat
mov
adc
push
loopne
mov
loop
mov
pop
aaa
rorl
and
ret
jne
rcll
pop
cmove
shll
aas
dec
jle
fimuls
mov
pushf
pop
mov
and
adc
jno
jg
and
and
and
mov
ret
and
inc
outsl
dec
jns
into
mov
sub
push
xor
icebp
adc
mov
jne
and
dec
sahf
insb
inc
mov
or
xor
jle
sti
in
push
mov
push
cmp
imul
push
outsl
mov
jb
ja
icebp
jmp
call
int
mov
test
cmp
adc
push
popa
pop
push
je
mov
cltd
lods
ljmp
sub
lods
out
xchg
lcall
mov
add
or
add
sti
mov
sbb
pop
leave
inc
pushf
shrl
stos
cld
popf
insl
inc
dec
mov
or
jmp
mov
mov
loopne
cmpb
add
mov
mov
roll
lds
push
dec
addr16
aas
pop
arpl
push
push
imulb
mov
xor
or
inc
or
adc
add
or
mov
cltd
in
pusha
lea
jmp
mov
cli
cmp
sbb
add
mov
xor
push
mov
orb
push
pop
js
mov
mov
mov
test
lea
int3
push
loopne
jns
dec
scas
or
push
add
decb
pop
or
jp
into
pop
das
cmp
jb
fidivs
or
add
stc
addb
xchg
in
sub
repnz
aam
pop
ds
inc
imul
inc
mov
test
mov
rcll
pop
loopne
mov
add
dec
in
push
jae
jns
add
clc
dec
fcoms
call
lahf
pusha
adc
or
dec
mov
es
cmp
sub
sub
jo
xchg
pop
test
dec
mov
jno
out
test
mov
imul
inc
stos
or
lcall
stc
pop
dec
out
xchg
xor
or
inc
fstpt
int
push
sub
popf
roll
jnp
add
fwait
mov
add
roll
shlb
mov
dec
int
bound
ljmp
xor
ds
and
aam
or
fwait
xchg
jmp
notb
and
sbb
das
popa
bound
call
adc
mov
dec
sbb
mov
sahf
movsl
adc
xchg
clc
data16
repz
ret
pushl
js
sarl
mov
out
stos
add
jg
lahf
pop
pop
pop
sub
enter
pop
icebp
sahf
mov
dec
inc
pop
sarl
into
fldcw
pushf
pop
cmp
loope
dec
jae
cmpsl
xor
mov
lea
and
pop
daa
leave
or
icebp
cltd
and
ss
arpl
mov
push
mov
mov
gs
loop
sbb
mov
xor
orb
inc
loopne
sub
pop
fmull
sub
mov
mov
add
shll
push
imul
inc
loopne
leave
out
mov
cmp
cli
cmp
mov
cltd
mov
inc
pop
aad
cmp
mov
xorl
cmp
xor
cmc
pusha
xor
stc
pushl
popf
pushf
pushl
ret
jmp
push
call
push
pushf
popl
cmp
xor
cmc
clc
xor
stc
pushf
xor
test
xorl
clc
cmp
xor
pusha
test
xor
stc
xor
stc
xor
movb
pushl
popf
pushf
pushl
ret
call
push
movl
pushf
push
push
lea
jmp
pushf
movl
jmp
pusha
pushf
movl
push
jmp
jmp
jmp
call
adc
aad
out
or
lcall
lahf
mov
mov
mov
call
fiaddl
dec
fstpt
jge
or
xchg
subb
dec
inc
and
xchg
mov
push
sub
inc
in
cmpl
xor
jne
iret
pop
mov
cmpsb
lds
insl
jle
nop
xchg
lock
jle
ljmp
insl
jne
xor
out
xchg
dec
lret
mov
jne
das
fcompl
adc
popf
jle
pop
cmp
pop
mul
mov
rcl
sahf
mov
jp
ljmp
mov
sbb
jns
xor
jb
hlt
lods
mov
cmp
fs
adc
push
mov
jmp
push
adc
cmpsb
out
mov
adc
mov
leave
loopne
ja
inc
dec
xchg
int3
add
out
jge
outsb
mov
jecxz
sbb
push
sahf
insl
ja
or
pop
inc
cmp
sub
repnz
fsubr
sar
push
out
sahf
dec
push
sub
sbb
pop
sub
sbb
xchg
out
jno
jo
or
sbb
cli
cmp
mov
or
and
sarb
jne
cmp
popl
je
jns
lds
outsl
xchg
cmc
bound
mov
cwtl
lods
jb
push
inc
lea
cmp
bound
cmp
and
sahf
dec
sbb
jae
ss
loop
jbe
subb
and
aam
inc
in
in
stos
cmp
shrb
leave
xchg
mov
insb
pop
repz
aas
rol
mov
or
fsubrl
lea
out
xchg
addr16
fwait
dec
popf
shrb
jp
testb
cld
rorl
aad
dec
mov
xchg
test
sbb
in
mov
xchg
test
dec
mov
in
rclb
sahf
je
nop
adc
test
xchg
call
fs
push
xchg
sbb
add
push
pushf
popl
clc
xor
test
xor
push
cmc
xorl
cmp
movw
xor
cmp
cmc
xor
cmc
pushf
xor
test
push
xor
pusha
xor
cmp
mov
pushl
popf
pushl
pushf
pushl
ret
jmp
pushf
push
call
xor
cmp
test
xor
jmp
fiaddl
inc
aaa
mov
xchg
sub
aad
xorb
or
sbb
sarb
adc
or
jns
push
push
or
dec
dec
add
cmp
imul
je
ret
xor
jmp
pushf
popl
push
jmp
push
pusha
mov
movl
jmp
pushf
popl
stc
xor
test
cmc
xor
call
xor
movb
xor
jmp
movl
mov
lea
jmp
call
jmp
push
movl
movw
movl
pusha
mov
pusha
pushf
lea
jmp
xor
clc
call
add
mov
dec
subl
pop
lock
in
inc
or
cmpsl
mov
scas
clc
ret
and
xchg
mov
iret
out
in
fcmove
jecxz
pusha
mov
lds
fcmovne
jo
fwait
sbb
mov
cld
push
mov
mov
enter
jg
stos
dec
inc
rcr
dec
or
jl
sbb
scas
inc
sub
mov
cmc
pushf
add
mov
and
cmp
or
push
lea
imul
fisubl
outsl
xor
arpl
add
shl
sub
cmpsb
xchg
xchg
pop
loope
sub
cmpsl
add
xchg
insl
in
lea
adc
jns
loopne
hlt
fs
int3
mov
and
out
push
sahf
fildl
outsb
pop
mov
cld
ret
adc
lea
stos
int3
sub
inc
or
push
sbb
jl
std
dec
and
lret
mov
in
addl
call
ret
xlat
lcall
cli
jns
sar
insb
xor
loope
cmpsb
xlat
push
sub
xchg
punpckhdq
mov
and
popf
in
xchg
loop
sbb
into
call
rorb
popa
or
repnz
xor
add
mov
mov
test
inc
outsb
ja
xor
sub
xor
loopne
dec
fwait
pop
jne
push
movsb
rolb
mov
insb
cltd
ja
xchg
push
dec
or
xchg
push
add
xor
cmp
xor
mov
push
xorl
pushf
xor
pushl
pushf
xor
std
bt
pushl
popf
pushf
movw
pushl
ret
pusha
movl
pusha
movb
pushf
lea
jmp
mov
mov
dec
sub
mov
lea
mov
cmpsb
fsubl
pop
pop
mov
scas
testl
fidivrl
dec
mov
cmp
mov
sub
jns
add
les
adc
push
mov
lock
cmp
push
pop
shlb
mov
cmp
lods
movsb
popf
xchg
ds
cmp
mov
sbb
push
stos
mov
stos
loop
in
lods
outsb
jg
mov
out
cmpb
sahf
out
rcll
mov
sbb
mul
loop
cli
dec
mov
cmp
mov
inc
clc
pop
lds
into
add
dec
shr
rclb
es
andb
mov
test
stos
movsb
loop
jg
insb
xor
daa
aad
insl
ja
mov
sub
or
cmp
fmul
outsb
push
movsl
pop
pop
or
es
sahf
fsubrl
mov
insl
and
insb
jnp
lret
sbb
adc
inc
cmpsb
pop
std
pop
inc
xchg
or
xor
and
push
movsl
out
fdivl
icebp
das
rcl
cmpsl
mull
push
jmp
ljmp
push
ss
push
add
mov
repnz
cmp
cmp
jmp
out
sub
push
pop
cld
xchg
xor
xchg
pushf
insb
xor
mov
xor
mov
mov
scas
imul
scas
ret
mov
xor
jl
outsb
arpl
adc
jno
inc
insb
imul
and
sub
adc
push
imul
addb
mov
cvtpi2ps
adc
lds
cmpsl
stc
push
pop
or
mov
movl
lea
jae
pushf
pushf
movl
mov
lea
jmp
pusha
pushf
popl
call
xor
cmc
pushf
pushl
popf
pushf
mov
pushl
ret
mov
xor
cmp
pushl
popf
push
pushl
pushl
ret
xor
call
cmc
xor
bt
test
xor
pusha
xorl
pusha
xor
clc
xor
cmp
pushl
popf
mov
pushl
ret
iret
push
pusha
mov
dec
mov
sbb
sarl
push
xchg
xor
dec
mov
popa
dec
inc
inc
adc
dec
scas
add
in
mov
scas
jg
jne
push
inc
aaa
jge
popl
fildl
jns
je
stc
stos
repz
mov
das
movb
hlt
pop
movsb
bnd
mov
sbb
aas
rolb
call
out
mov
pop
push
mov
arpl
xlat
sbb
or
js
mov
xchg
outsb
pop
dec
adc
xlat
icebp
hlt
gs
ja
cld
xor
cmc
mov
fsubrl
sub
nop
call
subl
aaa
adc
movsb
push
aam
adc
mov
shl
mov
scas
push
xchg
dec
test
xchg
shlb
mov
lods
sbb
packuswb
adc
add
xchg
in
jge
into
mov
jle
pop
or
data16
mov
sbb
jmp
dec
rol
pop
scas
enter
call
pusha
pusha
movl
call
movb
xor
cmp
pusha
xor
pushf
bt
xor
cmc
call
pushf
push
movl
mov
jmp
call
movl
pushf
movl
lea
jmp
push
movl
pusha
push
jmp
or
pushf
ljmp
sub
cmp
lcall
xchg
xor
cmpsl
sub
pop
push
out
jl
lret
xorl
mov
or
dec
scas
adc
push
sbbl
js
shrl
rorb
dec
and
pop
scas
stos
adc
push
xchg
jns
into
pop
adc
xchg
jne
scas
iret
and
mov
in
in
hlt
push
push
pop
lret
outsl
xor
cltd
fidivl
and
xchg
xchg
rcr
mov
push
sbb
pop
testb
popa
insb
sub
mov
sub
call
and
mov
cmc
filds
clc
push
push
jne
lret
outsl
popf
xlat
adc
jne,pt
fbld
jl
xor
mov
mov
shlb
pop
sub
jae
dec
das
imul
mov
jmp
in
push
es
adc
mov
lods
ja
sub
cs
add
stos
adc
sub
xlat
adc
push
fisttps
je
xchg
fistpll
imul
lahf
stos
adc
movsl
mov
push
jl
add
xchg
out
mov
lahf
pop
sub
jns
jb
cmpsl
out
mov
rol
cmc
dec
stc
and
sub
and
lcall
sbb
mov
push
adc
and
push
leave
sub
hlt
sbb
stos
dec
hlt
leave
cmp
add
adc
test
push
lds
movsl
mov
or
in
push
in
clc
icebp
test
add
or
rol
or
push
es
adc
mov
jg
dec
dec
sbb
ljmp
xorl
in
imul
pop
push
lcall
xlat
pusha
adc
out
dec
in
lcall
sbb
lock
and
xor
inc
and
fwait
or
pushl
lea
jmp
pusha
pushf
popl
call
call
out
xchg
sbb
cmp
jb
and
dec
mov
lds
pusha
cmp
mov
daa
jbe
jo
aad
loope
push
flds
jp
jl
jp
movsb
icebp
sub
in
inc
cmp
out
hlt
sti
mov
sbb
test
ja
add
lcall
out
test
dec
test
inc
mov
jo
xlat
fsubl
push
fisttps
roll
fldcw
inc
push
out
cmp
adc
xor
pushf
adc
rorl
roll
jecxz
cmpsl
dec
addl
ljmp
jbe
mov
mov
mov
push
sbb
lret
inc
cmp
sub
roll
lret
dec
pop
add
outsl
jle
sub
fnstenv
mov
sub
adcb
cmp
clc
jno
inc
or
jmp
aas
xor
clc
jo
incl
cmpsl
out
bound
sti
stos
sbb
rcl
fsubrs
stos
cs
cmpsl
sub
dec
dec
add
mov
sub
mov
fcoms
inc
fstpt
stos
and
decl
lret
push
mov
jle
jle
mov
pushf
cwtl
xchg
fistps
and
push
add
mov
loope
or
ret
add
cmpsb
imul
and
xor
mov
mov
lea
push
cmp
mov
rclb
test
and
xor
cs
rclb
sub
std
adc
push
sbb
lcall
pop
inc
ret
and
sub
pusha
ds
adc
pop
or
jp
es
scas
aaa
ss
insl
xlat
push
sub
mov
push
push
movl
pushf
lea
jmp
xor
jmp
call
pushf
movl
movw
lea
jmp
xor
cmp
xorl
test
pushl
popf
pushl
pushl
ret
push
pushf
movl
pusha
push
push
lea
jmp
call
pusha
call
pushf
cmc
clc
xor
jmp
call
xor
jmp
cmpsb
mov
mov
lods
ret
popa
testl
adcl
int
popa
jo
adc
fisttpl
pop
scas
dec
addl
mov
jo
sub
lods
sbb
out
push
mov
es
inc
ror
pop
scas
dec
cmpsl
fsubrl
push
sub
jbe
ret
sub
push
ljmp
push
fsubrs
jle
jmp
cmp
xlat
pusha
lods
add
mov
jle
jnp
out
dec
mov
push
or
in
add
fsubl
negl
iret
aam
bnd
xchg
psrld
mov
fistps
ss
adc
pop
pop
jne
xor
scas
push
mov
jno
add
sub
mov
pop
outsb
dec
mov
mov
push
dec
add
cli
xorl
xor
jnp
test
or
xchg
sbb
lret
lret
test
sub
jge
mov
insl
imul
orb
dec
xchg
sbb
js
clc
and
jne
data16
lock
cs
add
push
std
mov
test
pop
rcrb
fisttpll
push
idiv
out
and
mov
hlt
fsubrs
mov
mov
scas
fists
xor
loope
push
jb
sub
sub
scas
mov
aaa
call
call
mov
jns
scas
pop
fs
into
test
mov
stos
ret
fstpl
loop
rcl
stos
mov
dec
pop
lcall
icebp
adc
cmc
jb
xchg
incl
and
mov
mov
push
add
outsb
cmc
les
mov
je
and
ss
shr
inc
sub
mov
mov
adc
jecxz
in
cmp
or
stos
mov
add
xchg
push
lea
in
push
pop
rclb
mov
and
mov
stc
in
addr16
xor
adc
xor
fcompl
pop
adc
insb
in
dec
or
or
dec
in
inc
lods
cmp
sbb
xor
and
or
mov
jae
test
dec
int
pushf
lret
int
jge
mov
sbb
cmp
outsb
cmp
out
pop
cmp
cmp
add
lock
rolb
cmp
and
mov
test
adc
nop
stos
xorb
clc
aam
aam
mov
mov
ret
cmp
orb
fisubs
or
pop
lods
xlat
das
lahf
sub
jbe
outsb
sub
or
mov
xchg
ret
fildl
scas
aas
pop
daa
mov
iretw
adc
in
nop
imul
ljmp
in
das
out
pop
rorl
sub
in
in
rorb
push
fwait
les
rcr
pop
xchg
loopne
sbb
xchg
aam
add
xor
bt
clc
xorl
pushf
clc
xor
push
xor
jmp
push
call
xor
clc
xor
call
jmp
pusha
mov
movl
pushl
call
push
pushf
pushf
pushl
movl
mov
mov
movl
pusha
push
lea
jmp
push
push
movl
pusha
pushf
movl
pushf
lea
jmp
xor
stc
xor
jmp
call
xorl
push
call
xor
stc
call
xor
pusha
xor
call
jmp
xor
push
call
push
movl
pushf
movl
push
pushf
movw
lea
jmp
jmp
stc
js
shl
lds
jge
jns
idivl
xchg
lahf
pop
mov
sbb
call
sub
jmp
jmp
scas
mov
test
push
mov
clc
mov
push
pop
pop
or
xchg
inc
rolb
sbb
mov
sbb
dec
sbb
pop
pop
adc
xor
sub
call
inc
mov
mov
mov
inc
add
adc
test
repz
dec
push
push
inc
data16
int
jb
push
pop
ja
pop
test
pusha
or
clc
sbb
les
in
mov
popf
mov
aaa
xor
and
xor
jns
outsb
jmp
xor
inc
jp
xor
dec
dec
sbb
pop
jmp
inc
add
pop
adcl
and
sbb
fcmove
mov
mov
test
mov
xchg
jnp
test
outsl
fwait
xlat
idivl
int
outsb
enter
lahf
mov
aas
cmp
pop
push
adc
test
repz
dec
and
jns
mov
or
adc
fiadds
xlat
in
jecxz
mov
mull
das
and
mov
call
jle
cmp
push
data16
addl
jmp
pusha
pushf
popl
call
pushf
pushf
movl
pusha
push
mov
mov
lea
jmp
push
movl
jmp
lea
aam
icebp
jo
fcomps
add
lods
loope
dec
add
neg
daa
test
addr16
in
and
xchg
push
cmp
push
mov
out
jg
xchg
repz
xchg
mov
add
xor
lock
test
cmp
adc
lcall
lock
enter
shrb
push
in
in
fwait
add
stc
cld
out
ljmp
cwtl
jae
xor
and
mov
add
and
in
inc
push
xor
push
fsubrp
movsl
mov
shrb
loop
hlt
mov
icebp
mov
in
daa
mov
mov
adc
sbbl
push
mov
pushf
and
lds
ror
dec
inc
shlb
jne
bound
movsl
scas
inc
pop
inc
jae
dec
jl
notl
cld
testl
hlt
push
addb
test
pop
sub
sub
mov
repz
lahf
xchg
out
xchg
inc
movsb
test
dec
ds
and
das
or
in
ror
add
sti
imul
lahf
adc
shlb
andb
clc
out
call
pop
or
mov
inc
orl
jecxz
pop
push
xchg
add
sub
inc
fldcw
leave
sbb
jne
paddb
dec
mov
stc
and
popf
add
or
das
je
mov
and
test
into
jo
mov
xor
sti
jmp
movsl
dec
push
xorb
push
in
push
in
xlat
nop
xchg
adc
mov
add
insl
ss
fstps
sub
or
sti
mov
xor
mov
cmp
cmp
fdivrs
loope
icebp
cmp
push
sahf
mov
leave
fstps
or
mov
clc
push
js
pop
mov
fs
jne
je
fstps
les
dec
dec
lods
adcl
test
fsts
addr16
mov
lds
stos
popa
push
imull
inc
add
xor
out
mov
mov
rcll
mov
stos
js
xchg
repz
pop
cmp
filds
jne
ret
push
gs
popa
mov
gs
dec
das
inc
or
xchg
in
les
dec
and
loop
nop
mov
lcall
clc
orl
sbb
inc
sbb
les
stos
bound
test
jmp
xchg
cs
pop
adc
data16
rcrl
or
cmp
addr16
daa
cltd
roll
mov
int3
cmpsl
mov
lds
call
inc
lock
pop
shlb
clc
mov
out
mov
jae
scas
lahf
iret
ret
dec
pop
add
add
insb
out
mov
pop
xchg
inc
pushw
shr
lods
cmc
mov
mov
test
aaa
out
pop
jno
filds
std
imul
scas
adcl
xchg
mov
lcall
sbb
sbb
push
cmpsl
imul
sub
xchg
adc
int
push
or
inc
leave
fcoms
mov
mov
movsl
out
int3
jmp
les
and
jbe,pt
push
ljmp
lret
xor
jae
std
cmp
push
test
ja
arpl
jae
push
push
push
xchg
push
and
testl
xchg
mov
mov
test
or
xchg
xor
add
cmp
int
add
xchg
xor
inc
jo
dec
sarl
pop
mov
movsl
push
mull
ret
sarb
sbb
fstpt
adc
lods
cmp
outsl
pusha
and
mov
mov
stc
sbb
popf
movsl
mov
pushf
popl
cmc
cmp
xor
call
xor
jmp
pushl
movl
pusha
pushf
movl
lea
jmp
movl
pushf
lea
jmp
xor
cmp
xor
test
stc
xor
test
xor
cmc
pushl
popf
pushf
pushl
ret
xor
movb
pusha
xor
clc
push
xor
mov
xor
clc
call
call
push
pushf
popl
clc
xor
pushf
movb
xorl
jmp
pushf
pushl
pushf
popl
call
push
dec
rcrl
jo
xlat
sahf
cmp
insl
push
sti
das
nop
outsl
xor
test
mov
adc
cmpl
push
scas
jno
push
cmpsb
pop
and
fisubrl
sbb
int3
jnp
movsb
push
fsubrp
sar
movsb
add
sub
lea
sahf
xor
dec
cld
fists
dec
and
pop
aaa
int
jge
inc
cmp
cli
mov
push
call
sbb
enter
sti
scas
mov
xchg
mov
sbb
and
mov
sbb
scas
enter
jbe
in
jne
push
jne
fstps
jae
test
mov
sub
aas
push
pandn
movsb
mov
out
adc
xchg
add
in
and
ret
xor
cmpb
push
inc
cwtl
dec
icebp
mov
pop
mov
aas
push
jnp
mov
aaa
dec
roll
dec
ret
inc
nop
jno
in
adc
push
sbb
mov
aas
aas
dec
adc
add
mov
mov
sbb
dec
add
xor
add
int
stos
cli
lods
or
jecxz
jg
fcoml
jmp
cmp
outsl
sub
cmp
push
mov
lds
xor
add
lret
mov
repz
or
fmulp
mov
loopne
cld
dec
rdmsr
mov
movl
mov
pushf
pusha
call
movw
movl
pushl
pusha
push
lea
jmp
movl
pushf
pusha
mov
lea
jmp
lods
xchg
in
enter
mov
je
push
repnz
movsb
xchg
jle
scas
out
add
xor
outsl
fwait
mov
inc
out
pop
jnp
fdiv
xchg
insb
sub
cmp
sbb
aas
ds
das
sbb
jo
and
dec
sbbl
ds
aaa
sub
out
lock
and
ja
dec
adc
shll
cmpb
outsl
inc
xchg
repz
push
push
fildl
addr16
push
shll
out
ret
sbb
shll
inc
sbb
sbb
mov
std
int
mov
hlt
ficoms
jecxz
and
fsubr
push
cmpsl
jmp
shll
repz
inc
xchg
xor
mov
or
mov
dec
fiadds
iret
mov
mov
mov
inc
sbb
ret
in
mov
cmpb
je
push
lock
dec
in
data16
jne
aad
or
pop
add
repz
adc
addr16
fistpl
dec
dec
loopne
xor
jmp
sub
nop
leave
or
or
cmp
mov
out
add
inc
ss
add
sbb
mov
cmc
dec
cmp
inc
ja
nop
push
mov
jne
mov
loopne
int3
lods
add
mov
xor
dec
push
loopne
imul
lea
icebp
ja
pop
das
dec
mov
xchg
data16
imul
mov
cmp
es
imul
out
pop
mov
mov
mov
dec
mov
sbb
ret
xchg
push
test
mov
cmpsb
sbb
dec
push
into
mov
xor
fstps
rcl
mov
pop
movsb
dec
push
sub
ss
rcrb
mov
out
nop
clc
dec
int
aad
xchg
jg
mov
insb
jg
imul
data16
xor
loop
jb
mov
xchg
dec
adc
mov
rcll
ds
xchg
add
filds
rcll
out
movb
xor
clc
xor
stc
xor
call
pushf
pushf
popl
cmp
xor
clc
xor
cmp
clc
xor
clc
xor
pushf
push
xorl
test
xor
cmc
xor
clc
xor
pusha
pushl
popf
mov
pushf
pushl
ret
pushf
xor
jmp
cmp
xor
cmc
xor
bt
xorl
stc
xor
call
pusha
push
movl
push
call
push
pusha
pushf
popl
clc
pusha
xor
call
jmp
call
movl
mov
movl
pushf
pushf
pushl
push
lea
jmp
pushf
pushf
movl
pushf
pushf
pushf
pushf
lea
jmp
push
movl
pushl
pusha
pushf
movb
lea
jmp
push
pushf
pushf
popl
test
xor
bt
pushf
xor
pushl
xor
bt
xor
cmc
bt
xor
cmp
xor
pushf
pushf
xorl
bt
xor
stc
cmp
pushl
popf
mov
pushf
pushl
ret
xor
movb
pusha
xor
bt
bt
xor
stc
test
xor
bt
xorl
jmp
pushf
movl
push
pushf
pushl
pushf
lea
jmp
pusha
pushf
movl
mov
pusha
mov
movl
pushf
mov
push
lea
jmp
jmp
pushf
popl
jmp
push
push
jmp
jmp
cmp
mov
or
sbb
adc
inc
pop
push
mov
or
jl
adc
adc
aam
xor
xor
mov
sub
pop
lds
movsb
sub
lds
pusha
loopew
jmp
fdivs
dec
cltd
add
insb
ss
pop
xor
movsl
sbb
lods
pusha
xchg
push
scas
sub
out
fstpt
fildl
ja
sbb
je
out
and
mov
loopne
lret
cmp
stos
loop
inc
push
dec
shrl
dec
push
loope
lds
or
sahf
mov
pop
fistl
sbbb
jecxz
dec
pop
mov
cmp
lods
enter
enter
and
pop
lods
je
ret
lret
xor
lahf
push
mov
stos
pop
iret
jmp
xchg
or
mov
xchg
imul
pusha
movl
pusha
movl
pushf
lea
jmp
movl
push
call
xchg
lret
xor
sub
push
into
scas
push
pop
jno
test
xlat
jbe
mov
movsl
out
gs
aaa
stc
or
ret
lock
and
cmp
mov
call
xor
call
movl
pushf
movl
mov
lea
jmp
fsubrp
aas
xchg
cmpsb
add
imul
divb
idiv
mov
popa
mov
mov
test
xor
hlt
add
jl
rolb
jbe
mov
in
jmp
jmp
repnz
inc
mov
adc
xor
xchg
inc
sbb
mov
cmp
push
nop
cwtl
cmp
mov
adc
adc
in
push
xchg
stc
scas
xor
addr16
jmp
nop
mov
jmp
mov
dec
cwtl
loop
fcoml
nop
test
jne,pn
xchg
inc
imul
dec
fimull
mov
jno
adc
lret
int3
lahf
cld
mov
repz
and
sub
outsl
pop
add
testb
icebp
xchg
xchg
xor
sbb
push
imul
mov
pusha
lret
adc
xchg
aaa
push
ret
xor
ja
sahf
fdivrs
mov
mov
mov
add
stc
aam
xchg
sub
or
jge
push
fsts
lods
jb
mov
jo
jns
pop
insb
dec
or
ss
cmpsb
cmpsl
jno
repz
ja
pop
xor
fildll
imul
jl
dec
aam
mov
lds
pop
jns
je
push
inc
fcoml
push
pop
push
push
movsl
in
or
icebp
fldt
out
pushf
sarb
cltd
jl
fldt
sub
jo
sub
dec
cli
xchg
lods
mov
outsb
xlat
daa
clc
int
js
adc
sbb
inc
das
mov
ss
in
lea
mov
das
scas
xchg
lret
xchg
push
xor
adc
movl
loope
xchg
es
add
repz
dec
xchg
mov
test
xchg
inc
add
mov
jle
lretw
repnz
bound
mov
mov
shl
dec
arpl
mov
add
pop
addb
or
pop
sbb
mov
fadd
nop/reserved
xchg
xlat
push
mov
cmp
and
imul
fstp
lea
add
jnp
les
inc
jge
cwtl
xchg
adc
vxorps
jge
test
pop
daa
ds
add
mov
mov
je
sub
inc
pop
int
daa
inc
outsl
es
sbbl
pop
fbld
cmp
mov
sub
gs
sbb
xlat
data16
bound
xchg
jmp
jle
sub
add
pusha
movl
movb
movl
movl
movb
lea
jmp
mov
xchg
pushf
mov
jo
arpl
push
inc
xchg
inc
aaa
adcl
outsl
sbbb
imul
push
mov
pop
mov
cmp
cld
arpl
inc
lahf
std
mov
mov
loop
ret
inc
xchg
cld
sbbb
ret
xlat
push
sub
popf
add
int
cmp
push
push
mov
test
bound
das
mov
push
icebp
mov
es
xor
sti
les
loop
and
popf
pop
iret
xchg
cmpsl
es
in
or
pop
add
outsb
sub
xchg
xor
outsb
pop
nop
dec
push
jl
mov
lods
or
and
mov
outsb
sub
and
addr16
mov
add
xlat
dec
into
sti
mov
xchg
mov
arpl
or
adc
pusha
mov
cltd
es
mov
xor
cmc
xor
cmp
test
xor
test
xor
bt
xorl
bt
xor
cmp
xor
bt
cmp
xor
test
call
clc
xor
bt
test
xor
pushf
xor
push
cmp
xor
pushf
test
xorl
test
cmc
xor
jmp
push
pushf
pusha
movl
movl
pushl
movl
push
pushf
mov
lea
jmp
movl
pushf
pusha
push
mov
lea
jmp
push
shrb
pop
sbb
xor
adc
add
and
cmp
insb
jp
pop
call
xchg
jbe
or
sbb
mov
aaa
pop
xor
push
jg
mov
dec
fldenv
fdivp
cmpb
xchg
aam
adc
and
orb
pop
xorl
enter
dec
dec
adc
jmp
shlb
fidivrs
dec
sub
bound
fmuls
push
mov
movsb
ja
jns
dec
imul
cmc
std
fnsave
stc
shr
xchg
nop
xchg
shll
pop
xchg
or
es
aad
xchg
out
jb
stos
imul
mov
xchg
pop
icebp
in
shrl
rcrb
imul
dec
jmp
mov
call
mov
les
test
out
xchg
out
scas
push
stos
jmp
or
ja
xchg
and
cmp
ljmp
mov
loope
scas
decl
cwtl
or
mov
daa
cmp
ja
pop
pop
dec
and
call
movsb
pop
loope
dec
dec
daa
mov
fimuls
xchg
mov
lahf
mov
or
in
in
shll
dec
adc
dec
fstpl
push
mulb
mov
mulb
repnz
cmp
push
add
cmp
xchg
je
das
push
pop
adc
lods
clc
xchg
dec
inc
jae
notl
sub
insb
sub
inc
add
push
inc
dec
or
addl
scas
add
or
dec
fiaddl
sub
out
test
sbb
sub
pop
sub
pop
ret
adc
add
imul
push
insb
dec
sbb
sub
cs
mov
dec
sbb
mov
outsb
sub
inc
pop
aaa
dec
movnti
dec
int
addr16
mov
mov
pop
mov
dec
mov
mov
dec
sub
test
mov
or
pushw
push
out
mov
outsb
es
mov
cmp
inc
sbb
test
cmpl
sbbl
in
push
jle
and
or
mov
gs
cltd
mov
xor
cmc
mov
add
adc
pop
add
cli
data16
popf
or
adc
test
pushf
movl
pusha
jmp
nop
sub
loope
addl
dec
jl
fnsave
xchg
ret
loop
jp
dec
lahf
push
iret
inc
xchg
push
pop
mov
stos
pop
rcll
aad
lret
inc
test
pop
jp
xlat
cli
orl
xor
insl
jmp
test
and
iret
mov
sub
lea
jmp
xor
jmp
mov
movb
movl
pushf
lea
jmp
pushl
movl
movb
pushf
pushf
movw
lea
jmp
pushf
pushf
movl
jmp
cmc
xor
call
ja
add
pusha
in
pop
pop
in
mov
xchg
mov
je
mov
xchg
subb
mov
pop
sbb
jmp
cmp
repz
stos
lret
mov
aad
add
jno
dec
mov
aas
sti
pop
adc
or
enter
cmpsb
xchg
out
sbb
xorl
adc
or
adc
dec
jns
mov
and
out
xor
pop
mov
sbb
clc
sub
insl
mov
mov
jnp
sti
dec
xchg
inc
ret
lea
mov
lea
xchg
adc
jmp
inc
je
fs
dec
scas
int3
mov
sbb
xorl
nop
and
xchg
adc
inc
addr16
in
ss
mov
push
movsl
repz
lahf
mov
sahf
sbbl
pop
jle
xchg
or
mov
test
and
cmp
or
xchg
mov
lds
xchg
pop
sahf
aam
adc
fcoms
repz
sbb
jl
xchg
ss
das
dec
ss
les
imul
add
dec
into
sbb
sub
ret
les
lahf
xor
mov
ret
pop
je
dec
mov
pushf
sub
push
pop
jbe
xlat
scas
mov
jnp
test
mov
insb
stos
insb
inc
push
stc
adc
ret
dec
lret
test
in
inc
rol
mov
push
insl
jbe
fadd
shl
fisttpll
inc
gs
das
push
inc
es
cmp
mov
das
xchg
cmp
xchg
jae
subl
xor
fmulp
mov
lock
out
mov
pop
mov
and
xchg
xor
movl
movw
pushl
lea
jmp
and
or
cmp
scas
jg
jbe
hlt
mov
iret
dec
xor
xchg
outsb
std
out
in
jnp
push
testb
leave
das
adc
sub
cwtl
pop
add
or
fidivl
fnsave
adc
cld
sub
ljmp
cli
push
pop
gs
jle
adc
cmp
or
mov
loope
icebp
pushf
std
pushl
popf
pushf
push
pushl
ret
call
call
pushf
pushf
popl
pushf
xor
clc
xorl
pushf
cmc
xor
pushf
xor
movw
test
xor
test
xor
stc
pushf
xor
bt
test
xor
std
std
pushl
popf
pushf
pushl
pushl
ret
pusha
call
into
sbb
js
imul
mov
nop
adc
add
mov
out
adc
int3
cmpsb
jge
clc
fs
ljmp
xor
loop
xchg
mov
xchg
cmp
push
mov
ret
imul
arpl
stos
fimull
aaa
in
add
xchg
jb
mov
loop
cmp
push
cmpsb
push
cld
xchg
icebp
cmp
js
cwtl
mov
outsb
outsb
fcompl
lods
push
mov
inc
add
ljmp
push
scas
mov
mov
aas
mov
daa
dec
adc
add
loopne
push
jb
sub
ficoms
dec
sub
insl
dec
ss
pop
mov
push
aad
sbb
and
pop
mov
inc
mov
scas
xchg
repz
add
jo
push
fs
jl
adc
push
xor
outsb
addl
popl
stc
xor
cmp
cmc
xor
cmp
test
xor
clc
call
pusha
lea
jp
pusha
movl
mov
call
pusha
mov
movl
call
call
push
call
fldl
aad
adc
pop
and
scas
xchg
mov
scas
shl
inc
dec
scas
scas
outsl
pop
std
pushf
jae
mov
mov
cmp
iret
lea
loope
lds
sub
push
lcall
subl
inc
mov
dec
in
or
add
repz
fisttpll
int
notl
fnstsw
in
push
mov
sub
fs
pop
inc
or
xchg
shlb
mov
or
mov
hlt
mov
pop
dec
adc
loopne
mov
cmp
xchg
jmp
imul
popf
xchg
xchg
vpslld
pusha
bound
sub
mov
xor
aaa
xlat
jl
pusha
scas
pop
ret
pop
cli
and
mov
push
sub
dec
arpl
or
ret
xchg
or
and
ljmp
mov
inc
addl
div
mov
dec
xchg
repz
sub
std
repz
jb
loop
addl
mov
cmp
cmpsl
jp
cli
jmp
stc
xorl
bt
cmc
xor
pushl
pushf
pushl
popf
mov
pushl
ret
movl
jle
push
push
pushf
movl
pushl
lea
jmp
mov
and
testb
sub
mov
test
mov
js
inc
das
into
out
mov
lods
fsubp
aam
lea
add
in
pop
xor
mov
out
mov
mov
in
fmull
daa
cmp
inc
shr
rcll
test
fbstp
sbb
shl
mov
jo,pt
and
into
mov
mov
clc
push
outsb
aaa
or
call
hlt
jge
out
out
fidivrl
cmp
xchg
outsb
cmpsl
xor
pop
xchg
pusha
aad
ja
aaa
dec
pusha
movsb
xchg
mov
test
xor
mov
add
and
dec
aam
or
pop
cwtl
nop
lea
mov
aas
sub
xchg
movsl
adc
out
loopne
mov
jne
ret
repz
rorl
sub
or
sub
and
mov
mov
lds
ret
insl
shrl
cs
loop
movsb
testb
and
jno
jge
push
jns
imul
mov
iret
mov
cmp
jl
xor
aaa
out
adc
dec
js
jne
pop
fisttpll
mov
cmp
addr16
xor
cmp
xor
pushf
xor
test
xorl
movw
clc
xor
pushl
xor
call
pushf
pusha
clc
xor
cmc
pusha
xor
stc
jmp
pushf
xor
mov
pushl
popf
pushf
pushf
pushl
ret
bt
xor
bt
bt
xor
cmc
xor
mov
xor
cmp
xor
pusha
xorl
test
xor
pushf
xor
cld
jmp
xor
mov
pusha
xor
clc
stc
xor
pushl
xor
push
xorl
bt
stc
xor
push
xor
clc
mov
xor
bt
pushl
popf
movb
pushl
ret
movl
pushf
mov
mov
movl
lea
jmp
push
pushf
popl
pushf
xor
test
xor
pusha
pushf
xor
pushl
clc
xor
jmp
jmp
xor
xchg
loop
push
bound
fs
mov
push
outsl
pop
fnstenv
and
rorl
sub
or
test
sti
cmc
idivb
idivl
in
mov
cmp
sub
mov
addb
addl
movsl
push
loopne
dec
inc
lcall
jno
push
in
fs
adc
jns
pushf
dec
cmpsl
in
sub
mov
dec
cmovb
popf
scas
push
push
push
add
movsb
adc
ds
outsl
add
je
in
jecxz
adc
ja
imul
dec
dec
sbb
mov
jb
dec
dec
jbe
mov
test
pop
inc
mov
fwait
lods
push
imul
decb
pusha
sub
mov
mov
cwtl
mov
dec
and
lret
iret
jno
xchg
lea
fistl
daa
shlb
cmpsb
dec
pop
test
je
pop
cmp
out
pop
std
mov
sbb
sub
jle
cmp
pop
aam
cli
lods
outsb
fs
pop
insb
adc
or
les
pop
js
dec
test
jmp
iret
cwtl
dec
cmp
xor
mov
sbb
int3
lret
repz
mov
mov
js
movsl
xchg
out
sub
pop
adc
xchg
pushl
lea
stc
sbb
cld
bound
lods
mov
cmpsl
movsb
jp
stos
jo
imul
aaa
imul
in
sbb
icebp
mov
scas
test
mov
cmpsl
jns
ss
mov
inc
subb
jne
sub
or
stos
lock
js
cmpl
push
lret
jno
or
jo
in
inc
xchg
mov
xlat
mov
ljmp
ror
mov
push
push
and
push
and
mov
lds
sub
pusha
loopne
pop
add
ficoml
stc
stos
nop
scas
sbb
pop
push
popa
sub
inc
insl
fstp
scas
cmc
fisubrl
daa
jmp
pop
add
mov
sarb
inc
gs
jne
aaa
addl
idivl
jp
pusha
xor
jmp
pushl
movl
mov
mov
call
xor
push
xor
stc
xor
call
test
pushl
popf
pusha
pushl
ret
mov
jb
or
inc
cmp
insl
jge
jecxz
cltd
clc
cmc
or
mov
fdivrs
mov
xor
cmpsb
push
inc
shrl
xchg
subb
pop
pop
xor
xor
test
mov
push
sbb
mov
ljmp
sbb
outsb
outsb
out
cmp
push
mov
add
jno
push
jmp
dec
pop
daa
ljmp
cmc
adc
inc
and
cmp
adc
popa
adc
xor
test
jle
add
pusha
xor
mov
and
dec
pop
loope
fnstcw
cmp
out
scas
scas
mov
std
aad
dec
push
sti
pop
sti
adc
push
outsb
jg
idiv
pop
push
push
fisttps
testb
outsb
sbb
loopne
pop
sbb
in
xchg
cld
movsb
mov
xchg
int
shll
enter
cmp
mov
insb
jo
cli
lds
cmpsl
adcl
ljmp
add
call
mov
lods
fs
in
cmp
rclb
call
call
inc
push
xchg
xchg
push
lods
fwait
push
pop
inc
push
cmpsb
pushf
mov
push
or
pop
and
xor
dec
jle
push
pop
mov
imul
cmp
pop
xlat
mov
je
jno
cmpl
mov
push
aaa
inc
add
sbb
push
pop
and
cltd
xchg
mov
ret
or
ss
jle
hlt
aaa
mov
push
negl
aad
leave
pop
leave
sti
push
popf
dec
add
ss
mov
xchg
loope
lahf
pop
dec
and
push
and
add
aaa
sub
das
dec
stos
push
lods
adc
int3
adc
daa
push
rorb
mov
sbb
flds
push
insl
jge
movsb
adc
add
inc
mul
push
popa
jnp
add
pop
loop
push
inc
fdivrl
sub
xchg
shrl
ljmp
out
push
lret
mov
mov
sti
leave
xor
dec
les
xlat
loope
lahf
sbb
jae
neg
aaa
pop
add
mov
std
inc
adc
in
jmp
add
aaa
push
sbb
adc
push
sahf
fcmovb
xchg
pop
lods
loop
out
in
and
inc
jl
decl
lahf
pop
int3
mov
nop
add
push
loop
jecxz
fidivrl
xor
xor
fldcw
mov
jecxz
adc
and
mov
outsl
push
dec
daa
push
bound
pop
push
adc
outsb
fcoml
add
cmp
xor
mov
or
repz
sub
clc
add
cmp
add
bt
xor
jmp
pushl
popf
pusha
pushl
ret
pushf
pushf
movl
pushf
pushf
lea
jmp
call
or
dec
mov
add
je
loop
je
in
xchg
push
add
insb
imul
repz
pusha
jns
and
aam
sub
jg
stos
push
mov
test
sbb
outsl
lcall
nop
ret
cmpl
xor
rorb
js
test
mov
aam
mov
or
cmp
mov
cmc
dec
lea
xchg
sub
cmpsb
fnstcw
xorb
es
popf
lds
cld
je
cmc
cli
xchg
mov
fdivrl
mov
jne
fistps
test
jle
sbb
fistpll
inc
fsubl
push
orb
add
dec
es
mov
mov
mov
xor
neg
mov
cli
xlat
mov
inc
int
mov
and
xchg
int
or
addr16
loop
dec
mov
xor
aad
mov
inc
and
add
iret
jne
in
mov
aad
cld
sar
icebp
outsb
push
addr16
cs
test
cmp
push
fistps
dec
test
aam
ss
loopne
jae
push
nop
sub
push
pop
xchg
push
mov
int
add
mov
daa
out
pop
sbb
sub
jle
jno
sub
inc
idiv
mov
xchg
xorl
sbb
mov
dec
or
jnp
mov
dec
js
add
cmpsb
pop
mov
cmp
pop
fdiv
cmp
test
hlt
fisubrs
dec
lods
hlt
mov
jge
jmp
nop
mov
add
add
xor
hlt
test
dec
daa
mov
xchg
pop
push
roll
clc
mov
mov
sub
mov
push
ljmp
andb
loop
es
inc
sbb
push
jo
int3
mov
ret
dec
push
lahf
mov
inc
fimull
rcrl
jne
sbb
nop
dec
xor
mov
mov
scas
xlat
mov
push
lret
and
push
jl
inc
lock
test
js
mov
dec
lahf
sbb
jmp
and
or
fld1
stc
adc
jl
push
lcall
mov
dec
out
adc
jg
int
mov
adc
mov
sbb
push
and
jmp
lods
cmp
jg
fs
fstp
mov
addr16
and
lcall
dec
rolb
mov
jmp
je
aaa
and
ljmp
xchg
lret
mov
shll
add
movsb
fsub
xchg
out
imul
fwait
lahf
jo
dec
mov
add
xchg
dec
inc
movmskps
ror
out
stc
lcall
dec
inc
inc
das
es
jns
xchg
mov
call
test
stc
leave
lock
cld
sbb
in
stos
xchg
or
nop
xchg
sbb
sahf
mov
icebp
sub
xor
mov
in
in
sbb
xchg
xchg
push
test
rcrl
cmp
or
cmpl
cmp
jp
lahf
pop
add
cmp
xchg
das
mull
lds
int
scas
das
mov
negl
out
negl
add
and
into
jl
aam
xchg
jge
test
sbb
bnd
stc
fwait
addl
mov
fs
pushf
mov
push
mov
out
xlat
xchg
xchg
or
lds
popf
sbb
movsb
addr16
testb
notb
mov
sbb
lea
cltd
dec
add
xor
or
test
jno
or
jne
sbb
mov
push
idivl
fsubrs
xor
inc
int
jmp
inc
and
jns
movb
movl
movb
movb
lea
jg
pushf
movl
pushf
lea
jmp
push
mov
movl
pusha
jmp
pushf
popl
mov
xor
test
xor
pushf
movw
xor
pushf
jmp
call
call
sbb
push
ljmp
xor
sub
xlat
cmp
int3
out
scas
dec
test
lcall
cmp
mov
add
test
pop
pop
push
scas
cmp
int
ret
pop
lcall
rcll
or
mov
sub
push
dec
xor
fisubs
push
rcrl
jl
xor
mov
xchg
jmp
sub
xchg
dec
or
pop
aaa
in
psubusb
pusha
clc
cltd
and
mov
ret
aas
adc
pop
clc
jno
out
je
cmc
imul
aas
inc
or
cltd
mov
mov
mov
pop
pop
ja
pop
push
sbb
iret
test
dec
push
scas
movsb
jge
int3
cmp
ret
cmp
mov
enter
lcall
xor
add
pop
push
xor
adc
hlt
iret
mov
xor
mov
out
lds
mov
xor
pop
imul
xchg
xchg
sub
aaa
jle
cld
lret
adc
aaa
xchg
filds
sbb
pop
insl
gs
jmp
pushl
movl
mov
pushf
lea
jmp
jmp
jmp
clc
xor
call
push
xchg
and
or
js
jne
mov
xor
ret
add
and
pop
stos
pop
leave
cwtl
jg
rorl
insb
out
xchg
xchg
or
xchg
clc
or
popa
and
lods
jnp
and
insb
lcall
mov
sti
mov
test
jo
or
loopne
jmp
call
sarl
popl
sbb
ja
test
imul
mov
test
out
inc
pop
sbb
add
and
comiss
leave
xchg
pop
daa
fstl
sub
lret
push
fdivl
inc
fistpl
je
lahf
pop
lret
addr16
call
inc
sub
bound
pop
out
mov
jmp
scas
dec
stos
dec
dec
cmpsb
jnp
ficomps
sbb
lea
sti
mov
jp
loopne
rep
jae
push
push
lea
jmp
xor
cmc
xor
push
xor
pushf
xor
cmc
xor
bt
xor
test
pushf
xor
bt
cld
pushl
popf
pushf
push
pushl
ret
adc
cmp
adc
rorl
dec
xlat
xlat
sbb
les
imul
cmp
cmc
cltd
push
in
lahf
stos
adc
mov
mov
stos
mov
jp
dec
mov
lods
leave
cmc
es
jmp
hlt
fs
adc
ret
loop
lahf
sbb
mov
dec
test
in
xor
mov
jge
test
jmp
lods
dec
aaa
std
sub
stos
loop
out
loop
mov
push
ret
dec
imul
bound
out
pusha
popf
jae
sub
push
or
cltd
push
jecxz
push
inc
dec
push
xor
pop
push
mov
repnz
orl
pop
sub
jle
test
mov
jle
lea
mov
test
sar
dec
or
shrl
pop
adc
push
pop
out
mov
adc
mov
jns
loop
mov
cmpsl
push
imul
out
stc
pop
mov
ss
push
or
int
jmp
aaa
jmp
pop
pop
or
pushf
insb
test
scas
out
std
mov
lock
mov
inc
sub
jo
mov
aam
pushl
inc
jg
sti
push
dec
fildl
xor
lcall
scas
rorl
gs
sbb
lods
xor
add
push
sbb
push
sub
push
iret
in
repz
stc
outsl
pusha
xchg
and
int3
pushl
and
aad
pop
mov
push
pushl
pushf
lea
jmp
xorl
movb
xor
cmp
pusha
xor
clc
xor
jmp
bt
xor
jmp
sar
mov
or
cwtl
daa
push
push
sti
addl
push
adc
call
cmp
sub
cltd
leave
bnd
or
test
xchg
sar
pop
out
lahf
and
jno
into
loopne
sti
mov
lods
les
pop
cmp
ljmp
int
aad
loopne
xor
push
xchg
dec
push
fsts
jecxz
mov
push
or
xor
pop
icebp
std
fisttps
cli
add
repz
sti
jnp
arpl
mov
mov
int
call
sub
jbe
cmp
inc
xor
std
fbld
xchg
mov
mov
repnz
movsl
sar
outsl
mov
pop
fwait
push
push
in
mov
or
pop
adc
and
push
dec
mov
jle
mov
mov
mov
pop
add
dec
outsl
pop
addr16
add
mov
test
in
mov
ficoml
mov
inc
push
sbb
sub
addl
cld
dec
dec
jp
dec
aam
pop
imul
andb
ss
data16
push
push
sbb
stos
jns
and
in
aam
jg
and
and
bound
xor
push
add
jmp
push
xchg
sub
roll
dec
jecxz
call
in
insl
mov
xchg
lret
mov
test
mov
test
in
xchg
sahf
hlt
jae
sbb
jmp
xlat
lret
rolb
jno
cmpsl
lahf
mov
ja
mov
test
in
jnp
dec
jo
jae
adc
inc
xchg
lcall
dec
adc
xchg
sti
xlat
xor
int
and
dec
pop
cmp
cmp
mov
imul
out
pop
aaa
aas
int3
subl
fcoms
int3
cmp
push
inc
xor
cs
mov
push
jno
insl
pop
pop
add
daa
std
mov
sbb
cmc
lahf
test
test
lods
mov
movsb
repnz
divb
pop
sub
mov
sub
xor
cmp
jmp
add
repz
mov
adc
insl
lret
push
jle
popa
lds
out
rclb
rcrb
jmp
imul
cli
push
and
stos
jmp
push
es
pop
xor
testl
mov
jbe
sub
fnstsw
dec
lret
push
iret
adc
ss
sbb
divb
out
xchg
dec
mov
lea
jae
push
adc
sbb
jb
sub
daa
xor
mov
sub
incb
ret
xchg
arpl
loop
cwtl
inc
ret
jl
sub
xorl
push
cwtl
lods
cli
xchg
push
adc
test
adc
or
fsubs
dec
jbe
stos
in
and
adc
ret
cmp
xor
inc
imul
rcr
pop
sub
inc
fs
or
mov
push
stos
mov
fwait
xor
push
rorl
clc
push
mov
je
fidivl
xor
ljmp
pushf
sub
sti
xchg
or
imulb
fs
nop
out
roll
xchg
nop
mov
add
dec
push
arpl
xchg
enter
aam
cmp
dec
sbb
xchg
movsl
mov
cwtl
fldenv
leave
cmpsl
pop
and
iret
xchg
scas
pusha
fnsave
insl
popa
call
pusha
pushf
pushf
call
pusha
pushf
pusha
movl
jmp
jmp
push
movl
push
push
lea
jmp
xor
cmc
xor
jmp
push
xor
jmp
imul
sub
jns
xor
movsl
cmp
call
push
mov
jns
cmp
lea
insb
mov
dec
sub
dec
add
push
lea
fimull
insb
mov
jne
stc
adc
jge
push
add
xadd
jbe
dec
push
bound
pop
rcrl
inc
ja
ret
push
and
ss
jge
mov
gs
lret
repnz
lods
pop
mov
shr
test
add
ret
shl
ljmp
jno
mov
fiaddl
pusha
xchg
xchg
cmpsl
js
aad
dec
outsb
push
push
push
mov
cli
and
pusha
movsb
add
enter
into
addr16
insb
sahf
data16
pop
cld
call
adc
movsl
data16
mov
mov
adc
xor
call
pop
mov
mov
dec
adc
push
cmp
xchg
adc
shlb
jne
fdivr
jmp
inc
stos
test
into
insb
dec
cmp
jae,pt
push
push
hlt
dec
pop
sbb
outsb
call
mov
inc
into
in
and
xlat
cwtl
push
decl
dec
stos
int
sbbb
repz
aam
jecxz
in
lret
or
or
sbb
mov
ret
cmc
movsl
bound
xchg
pop
sbb
out
mov
jnp
lea
iret
xchg
jne
cmpsl
push
mov
jnp
pop
addl
add
aam
test
jns
fcoms
lods
std
pop
pop
jmp
dec
aad
mov
ret
dec
or
lret
gs
test
clc
loope
add
xchg
leave
push
sbb
repz
jmp
cltd
fimull
or
test
pop
or
sbb
sahf
push
push
pushl
xor
jmp
arpl
cmc
or
fwait
sbb
sahf
jge
ljmp
pop
scas
ja
out
pop
and
lods
xchg
fsubr
add
loopne
or
cli
enter
xchg
lods
mov
ja
mov
sub
add
not
xchg
cmpsl
fcomip
mov
lock
xchg
mov
sub
dec
sbb
adc
add
out
shl
dec
nop
cmpsl
scas
xchg
sub
nop
push
pop
lock
lock
xor
addl
jp
sub
sahf
sub
inc
loop
xor
add
test
scas
xchg
fidivl
sub
xchg
insl
test
call
into
fistpll
popa
and
int3
test
and
jo
mov
out
xchg
loopne
not
insb
inc
xor
lods
fsubs
sbb
jnp
clc
pop
inc
inc
out
mov
sbb
inc
shr
movsbl
jb
fildll
jne
int
call
fcmovnbe
push
mov
pusha
movl
push
mov
pushf
lea
jmp
pushl
popf
push
pushl
ret
xor
stc
xor
movb
push
xor
stc
jmp
xorl
bt
xor
jmp
xor
movb
jmp
adc
aad
or
and
cmp
jg
dec
lods
stos
adc
cmp
push
lods
fcoms
xor
dec
xchg
fcom
popl
out
aam
les
loopne
test
outsb
fdivr
clc
pop
clc
mov
jg
stc
or
stos
pop
pusha
or
and
cmp
hlt
push
mov
cmp
adc
cli
sti
lret
mov
jmp
out
mov
mov
les
movsb
dec
out
sbb
data16
push
movb
ret
mov
xchg
xchg
mov
pushf
ja
lret
subl
rcrb
clc
negl
loope
bts
jo
arpl
daa
xor
mov
pop
cmpsl
das
jp
je
or
icebp
mov
std
pop
daa
xchg
inc
leave
xchg
fwait
pushf
mov
inc
rcll
daa
dec
iret
xchg
imul
or
mov
cmpb
out
cmp
fcom
jb
add
inc
and
leave
arpl
pushl
pushf
lea
jmp
push
pusha
pushf
movl
pusha
pushf
pushf
lea
jmp
bt
xor
pushl
xor
pushf
xor
push
xor
mov
movb
xorl
call
ja
dec
jno
aad
ret
push
cmp
sbb
inc
out
push
sub
adc
aad
xor
loop
test
popf
cs
movl
mov
pusha
lea
jmp
pushf
popl
clc
xor
cmc
xor
jmp
movl
push
lea
jmp
pusha
jmp
pushf
popl
test
test
xor
call
call
cs
jno
or
dec
push
push
out
mov
in
jmp
fstp
call
xchg
cmp
mov
ljmp
xchg
xchg
fs
out
stc
or
xchg
and
mov
clc
push
xor
fnstcw
push
xchg
fistps
aad
ret
or
scas
repz
xlat
divb
fmull
push
push
push
fwait
decb
movsb
or
pop
add
mov
fmull
stos
cmpb
mov
jmp
mov
pushf
popl
test
xor
stc
xor
cmc
bt
xor
jmp
pusha
lea
jg
pusha
movl
push
lea
jmp
pusha
push
movl
pushl
pushf
mov
pushf
movl
movb
push
mov
mov
lea
jmp
jmp
call
mov
sti
clc
dec
mov
sub
xor
fwait
enter
inc
pop
jecxz
mov
mov
stos
adc
push
pop
je
sbb
mov
dec
or
xor
call
mov
push
movl
pushf
lea
jmp
xorl
pushf
xor
pushf
xor
test
call
call
push
movl
pushf
push
lea
jmp
movl
pushl
pushf
pushf
push
lea
jmp
push
pushf
popl
cmp
pushf
xor
pushf
xor
pushf
xorl
jmp
cld
jb
imul
mov
push
sub
js
adc
adc
fistps
stc
js
ss
pop
outsl
mov
xorl
inc
xor
loopne
inc
pop
xchg
jnp
pop
mov
mov
xlat
clc
cmp
mov
call
push
pusha
pusha
movw
lea
jmp
call
xor
call
xor
stc
pushf
xor
pushf
xorl
cmc
cmc
xor
cmp
xor
bt
pushl
popf
pusha
mov
pushl
ret
call
xor
test
clc
xor
cmc
push
xor
test
xorl
stc
xor
cmc
pushl
popf
push
mov
pushl
ret
jmp
xorb
test
outsl
jl
pop
dec
iret
cmp
fildll
fimull
cld
or
mov
and
cwtl
sub
into
lds
adc
sbb
or
arpl
cmc
add
lret
stos
jle
push
adc
xor
cmpsl
mov
mov
mov
add
inc
inc
cld
or
insl
mov
enter
adc
scas
xchg
filds
add
mov
test
xchg
and
dec
lahf
mov
jno
pushf
imul
call
and
push
jbe
ds
dec
lahf
lret
lods
bound
ss
push
xor
inc
mov
repz
dec
dec
repnz
mov
loope
dec
out
inc
dec
and
or
ror
push
cmp
jo
sbb
outsb
and
adc
jnp
xchg
lods
jmp
arpl
mov
test
popf
or
std
popf
insl
mov
js
mov
and
pop
xchg
mov
lcall
adc
jp
mov
mov
test
adc
ja
pusha
sbb
jns
and
je
cwtl
cmp
clc
pop
pop
jg
add
add
test
lock
dec
mov
lods
lock
mov
clc
sarl
lods
lret
inc
lods
mov
push
out
xlat
jle
stos
outsb
shlb
icebp
jnp
incb
mov
xchg
and
sti
pop
xor
sub
sub
mov
inc
pop
testl
pop
adc
xor
jmp
pushl
popf
mov
pushl
ret
call
in
nop
jbe
or
ret
mov
lods
cltd
lret
add
popa
cs
stos
dec
dec
cltd
inc
inc
fs
in
sub
mov
in
push
jae
insl
inc
jne
jnp
xchg
xorl
icebp
mov
pop
jne
add
pop
test
xor
xor
shll
xor
push
and
push
add
mov
pop
xchg
cmp
push
ja
bound
lea
fsubrs
js
sbb
push
stos
dec
outsb
lds
inc
sarl
jmp
imul
mov
cmp
insb
insb
test
loope
sub
push
xor
xlat
mov
inc
mov
push
mov
dec
sbb
sbb
add
stos
outsb
call
pop
lahf
dec
in
push
lods
insl
mov
mov
or
mov
leave
xchg
push
mov
xor
jnp
sbb
xchg
xchg
mov
int
shr
jle
push
and
jo
pop
push
xchg
loope
ffree
mov
enter
clc
push
popf
mov
mov
shrb
jnp
into
push
mov
ret
jns
jns
adc
bound
add
adc
jle
mov
or
inc
gs
adc
pop
hlt
pop
aad
lret
cmp
sti
push
pop
lea
adc
dec
popa
sbb
push
out
push
bound
cmp
add
test
mov
add
mov
push
into
push
cld
test
mov
mov
or
add
fistl
out
bound
add
into
push
jmp
in
repnz
pushf
lea
jmp
push
jmp
jmp
pushf
xor
movb
pushf
xor
bt
jmp
pushf
popl
bt
xor
stc
xor
call
pushl
xor
movb
pushf
xor
jmp
xor
test
cmc
xorl
bt
std
pushl
popf
mov
mov
pushl
ret
jmp
xor
jmp
stc
xor
loop
xchg
sub
jnp
pushf
add
jbe
mov
sarl
jae
stos
or
je
leave
mov
rcrl
cmc
adc
xchg
adc
sub
cmp
jb
inc
add
mov
insb
mov
bound
mov
mov
xchg
cmp
push
clc
inc
xor
add
jne
inc
jne
jg
dec
push
test
scas
testb
ljmp
bnd
cmp
adcl
scas
mov
lcall
or
pop
and
ja
adc
mov
mov
pop
push
xlat
mov
adc
mov
inc
and
dec
add
or
out
fstl
lds
bound
inc
adc
or
cltd
loopne
jo
out
nop
adc
fs
mov
mov
or
jb
out
std
and
cmp
inc
jne
push
xchg
loope
popa
cltd
cmpsb
xor
fisttpl
aam
jge
xor
pop
xor
push
jmp
push
icebp
add
lods
repnz
cmpsb
push
mov
and
fwait
iret
movd
mov
lret
mov
fidivrs
add
push
movsl
xor
js
mov
pushf
loopne
xor
mov
mov
mov
jge
mov
test
in
iret
xchg
scas
xchg
dec
dec
div
sahf
aaa
xchg
movsb
sahf
out
dec
pushf
or
test
dec
xlat
aad
stc
loopne
out
adc
inc
mov
iret
fucomip
push
pushf
call
push
xlat
adc
mov
ja
xor
insl
hlt
int3
jb
aaa
pop
popa
mov
mov
in
add
pop
fst
movsl
xor
dec
or
movsb
test
dec
fimuls
out
rol
pop
mov
clc
pop
adc
dec
andl
jecxz
pop
push
loop,pt
in
add
push
inc
sub
outsb
jb
int
stos
xchg
es
adc
lret
and
or
push
negb
imul
inc
push
sbb
in
outsb
xchg
std
pushf
clc
int3
test
inc
jge
push
jp
sub
jge
rep
int3
loop
mov
fstpl
aaa
jl
das
stos
imul
call
mov
jns
mov
lret
loop
add
loope
bound
xor
daa
repz
push
dec
mov
stc
cmp
inc
popa
push
push
pop
add
mov
mov
xor
mov
ja
mov
pusha
adc
jb
add
ljmp
enter
lods
jb
movsl
dec
rclb
sub
xor
dec
mov
das
cmp
jmp
cltd
outsl
xor
pop
inc
pop
les
sbb
xor
loopne
xchg
cld
push
jnp
pop
pop
cmp
cld
mov
fisttpll
jae
jge
xlat
jno
mov
movsl
stos
scas
insb
pop
sub
cli
lds
nop
adc
out
inc
xor
inc
test
mov
mov
lea
add
mov
inc
cmp
es
es
xchg
out
adc
mov
inc
sbb
insb
cs
icebp
mov
mov
push
ss
dec
shr
nop
in
mov
lock
shl
fdivp
cmp
jno
insl
addr16
mov
into
jmp
bound
cmpb
adc
inc
ja
adc
mov
lods
imul
mov
dec
shl
data16
int
cmp
notl
xchg
add
dec
push
outsb
insl
add
repnz
dec
and
test
push
sub
stc
fsubs
fistpll
xchg
xchg
shlb
push
fnstsw
fisubs
fnsave
repz
jns
movsl
ss
cmp
push
nop
pop
mov
inc
movsl
mov
test
mov
into
cmpsl
lcall
inc
sahf
and
int3
push
adc
test
pop
cmp
es
repnz
pop
outsl
adc
mov
pop
cld
rcl
andl
xchg
imul
ficoml
push
xchg
sbb
les
sbb
jg
cmpsl
test
jge
inc
xor
or
mov
fisubs
ja
int3
jmp
sbb
jge
mov
das
dec
and
push
popf
mov
or
sahf
lea
pop
mov
sbb
cli
jmp
mov
xchg
mull
bound
fadd
or
xor
pushl
cmp
xor
bt
test
xor
cmp
jmp
pushf
movl
pusha
movl
pushf
movb
lea
jmp
call
pushf
clc
call
xor
stc
call
movb
pushf
popl
cmp
xorl
cmc
stc
xor
jmp
xor
test
call
push
call
pushf
clc
cmc
xor
clc
clc
xor
pushf
xor
jmp
movb
movl
pushf
pusha
lea
jmp
ds
mov
gs
or
stos
lret
push
adc
push
sub
leave
pop
cld
or
and
sub
push
pop
jecxz
ljmp
std
pushf
and
leave
repz
or
pop
or
push
daa
and
test
mov
fimull
push
andb
mov
or
aam
add
xchg
mov
add
aas
arpl
in
mov
push
and
jnp
pop
pop
pop
or
or
jne
mov
or
cmp
dec
sar
add
jbe
xor
mov
inc
pop
pop
add
nop
test
imul
jb
sub
into
pop
popf
mov
fmulp
cs
ss
or
into
push
stos
mov
pushl
popf
mov
pushl
pushl
ret
call
xor
stc
xor
cmc
pushl
popf
pushl
pushl
ret
xchg
mov
xor
mov
cwtl
or
dec
xchg
popf
rcr
mov
or
jne
push
fidivs
je
rolb
pop
mov
pop
xchg
and
fmulp
dec
dec
cmp
jnp
jno
pop
dec
pop
imul
add
pop
lods
mov
push
sub
mov
push
jmp
push
inc
sub
adc
test
pop
mov
es
test
gs
iret
cltd
mov
rorl
mov
xor
push
pushf
xor
stc
pusha
xor
stc
stc
xor
cmc
test
xor
mov
xor
movb
xorl
push
bt
pushl
popf
mov
pushl
ret
call
push
call
cmc
xor
pushl
test
xor
bt
test
xor
stc
pushl
popf
pushf
pushf
pushl
ret
pushf
pushf
popl
cmc
xor
test
xor
bt
xor
stc
xor
jmp
movl
mov
movw
mov
movb
lea
jmp
pusha
pushf
movl
push
movl
pushf
lea
jmp
push
movl
push
pushl
pushl
pushf
movl
mov
push
lea
jmp
aas
stos
or
or
add
xchg
fst
in
into
mov
rclb
mov
jae
test
pusha
mov
in
inc
inc
clc
das
lea
xchg
jmp
or
repnz
pop
mov
outsb
in
call
mov
scas
divb
fiadds
sbb
mov
jmp
sbb
jl
or
sti
roll
shll
ja
jo
xor
bound
lcall
xor
or
sbb
jne
rorl
dec
cmpsl
jl
and
das
pusha
scas
stos
mov
into
inc
or
stc
add
hlt
jge
xor
cmp
outsl
stos
mov
faddl
dec
int3
adc
pop
fcoms
addr16
movsl
arpl
ficomps
lahf
sarl
data16
jns
and
and
daa
mov
fcmovnb
stc
mov
call
shrd
add
sbb
or
daa
sub
mov
les
xchg
add
sbbb
pop
int
fisubrl
xor
adc
pop
adc
push
in
int3
arpl
adc
lea
ret
sbb
dec
enter
and
or
fbstp
cs
jne
cmpsb
lea
jo
lods
mov
outsl
insb
push
push
and
repz
jge
xchg
int
xor
icebp
mov
pusha
rcl
push
cmpsl
push
repz
sbb
pop
add
fldcw
xor
les
jns
fbld
mov
xor
cmc
mov
mov
das
mov
mov
cmp
bound
ret
jno
or
lods
mov
bound
xor
and
js
xchg
push
lds
xchg
adc
xchg
test
or
faddl
fidivs
xchg
out
sbb
icebp
adc
mov
aam
xchg
xchg
bound
orl
cmp
mov
or
fldt
adc
inc
pusha
pop
movsl
pushf
sub
fwait
insb
jg
test
loope
cmp
xchg
xchg
movsb
xor
add
push
jp
xor
movsb
insl
ret
test
add
sub
mov
lcall
xchg
in
scas
xor
movsb
pop
stos
mov
int
mov
mov
cmpsb
sarl
cld
in
data16
clc
lret
sarl
popa
jmp
pop
test
push
fst
inc
mov
push
lods
jle
and
sub
pop
add
push
shll
push
dec
nop
scas
notb
loope
psrld
aaa
lcall
test
dec
jne
test
mov
or
pop
scas
mov
dec
rcrl
leave
jmp
sub
push
pushf
pop
outsl
mov
push
push
mov
add
out
and
ret
adc
sbb
sbb
xor
xor
jmp
fimuls
push
adc
sbb
fidivrs
push
inc
mov
inc
cmp
dec
cli
movsl
loope
cwtl
das
cltd
push
and
pop
mov
gs
xchg
scas
xchg
xor
movsl
dec
shlb
or
sub
leave
xor
out
xchg
push
jmp
inc
inc
xchg
jp
sbb
fsubs
cltd
insl
xchg
stos
pusha
pop
ja
xor
jno
push
or
dec
jo
mov
mov
push
add
jg
xchg
movsl
xor
notl
es
push
pushf
loope
pop
sarl
lahf
mov
mov
cmp
mov
mov
popf
loopne
sub
sub
mov
popf
mov
sbb
fmuls
xchg
mov
pop
into
lods
orl
lea
xchg
shl
ljmp
mov
xor
cmp
decb
or
cltd
mov
mov
jno
lret
nop
insl
dec
jg
adc
mov
pop
xchg
repnz
popf
cmp
add
dec
jno
inc
inc
push
and
push
int3
inc
adc
cltd
pop
scas
ret
mov
dec
jle
jnp
aad
inc
dec
dec
dec
and
sbb
cmc
xchg
outsl
arpl
jmp
or
int
sub
xchg
das
mov
out
xlat
add
pop
loopne
cmp
arpl
xor
jecxz
cmp
mov
sub
pop
in
xchg
push
bound
jb
ret
std
out
jmp
lahf
mov
call
inc
cs
outsb
mov
xor
push
jae
sub
les
cmp
sahf
iret
lea
xchg
adc
shr
pusha
pushf
popl
pusha
pushf
xor
test
push
xor
cmp
xor
pushf
pushf
xor
stc
xor
call
pusha
push
pushf
popl
jmp
call
pushf
call
pushl
movl
push
pushf
mov
push
lea
jmp
push
pushf
pusha
push
push
movl
push
movb
pushl
pushf
lea
jmp
jmp
jb
sbbb
mov
pop
sbb
cli
mov
int
fnsave
cmp
iret
xchg
jns
rorb
mov
out
or
jne
pop
mov
arpl
stc
pop
push
jmp
dec
mov
inc
jae
jp
inc
xor
dec
sbb
and
movsl
enter
lock
nop
lea
sbb
insb
or
mov
lret
or
fwait
mov
add
push
or
inc
mov
and
fnsave
mov
mov
jle
aas
shrb
dec
pop
mov
cmp
inc
pop
push
sbb
mov
mov
push
xor
jns
shrl
push
jmp
xor
sub
push
gs
movsl
mov
fsub
jl
xor
jl
test
test
cmp
enter
sbb
out
daa
add
nop
sub
add
aas
dec
imul
jns
dec
lcall
push
pop
pushl
call
xor
pushf
xorl
push
xor
pusha
xor
push
bt
xor
stc
mov
xor
clc
xor
clc
movb
pushl
popf
pushf
pushl
ret
adc
out
push
or
jno
dec
mov
sub
mov
hlt
int
cltd
xor
cmpsl
jo
into
jne
mov
lcall
out
lea
gs
hlt
test
mov
fwait
push
sti
out
movsb
stc
rorb
imull
add
and
sub
daa
cmp
or
mov
test
jne
clc
mov
mov
ja
testb
mov
sbb
or
push
cmpsl
insl
push
mov
mov
sbb
and
lods
xchg
sbbl
inc
and
cmp
xor
movl
push
mov
pushl
lea
jmp
pop
push
push
or
pop
mov
loop
mov
mov
std
std
dec
or
pop
jg
cmp
jae
mov
insb
add
mov
or
mov
imul
and
ret
dec
ja
push
pop
or
adc
inc
leave
jns
sub
lds
jb
je
popa
pop
adc
dec
push
or
push
stc
mov
int
test
pop
push
pop
xchg
enter
xchg
lahf
fs
aas
movsl
mov
cli
fmulp
outsb
ret
sbb
ror
popf
and
aas
fs
shlb
jbe
push
xchg
mov
es
movsb
dec
in
jno
fwait
xchg
cmovg
repnz
cmpsb
cmp
add
cwtl
mov
dec
mov
repnz
loopne
sti
xchg
adc
sub
shr
ret
lahf
mov
ljmp
fcmovb
stos
adc
xchg
xor
xchg
jnp
ja
push
std
or
inc
das
ret
stos
and
clc
sti
and
dec
or
in
xchg
ja
push
xchg
xchg
test
dec
fwait
dec
xor
add
stos
dec
jb
rol
push
mov
mov
aam
and
add
xlat
jo
in
push
ljmp
out
pop
nop
xchg
or
mov
xchg
test
pusha
sbb
adc
inc
xor
inc
lods
lock
push
and
pop
es
sahf
in
cltd
mov
lock
out
jbe
into
lret
or
cmpsl
dec
popa
xchg
pmaddwd
push
mov
xchg
jo
adc
or
adc
sbb
fucomi
aaa
mov
dec
sub
xchg
adc
cmp
jbe
add
mov
lods
dec
cmc
xchg
repnz
sub
aas
adc
sub
pop
leave
notb
lret
es
mov
and
pop
cltd
or
aad
or
or
fwait
test
jecxz
popf
mov
stc
add
sub
testb
cmp
sbb
sbbb
or
arpl
adc
mov
and
lcall
adc
sub
mov
cmp
or
mov
push
and
push
cli
aam
ret
sub
and
es
ja
mov
cmp
push
gs
leave
add
push
jp
cmp
lret
sbb
ljmp
dec
jae
test
in
pushf
insb
mov
xor
inc
js
mov
adc
jbe
movb
insb
pop
mov
xchg
lods
add
cwtl
outsl
leave
add
lock
inc
or
imul
out
sbb
adc
repnz
inc
insb
dec
pop
inc
test
pop
dec
icebp
ljmp
xlat
mov
mov
lcall
push
je
data16
jl
lret
add
imull
add
jne
xchg
xchg
xor
jp
cmpsb
or
jle
mov
xor
add
shl
add
mov
mov
rclb
in
mov
sbb
pusha
sarl
out
mov
mov
addb
jmp
jg
daa
mov
das
inc
and
icebp
xchg
fiaddl
popa
sbb
inc
test
outsl
xor
xchg
inc
mov
je
sbb
pushl
pushl
ret
xor
pusha
xor
pushf
mov
xor
cmc
xor
bt
pushl
popf
push
mov
pushl
ret
sub
fiaddl
into
aad
mov
enter
aam
jbe
mov
mov
mov
enter
std
adc
adc
movsl
stos
pop
mov
repz
mov
dec
xor
add
pop
pop
xchg
mov
dec
insb
cltd
das
xor
mov
mov
notb
into
sub
xchg
in
jmp
adc
mov
jbe
leave
add
dec
sub
imul
sbb
icebp
aad
cmpsb
cld
cs
lret
bound
and
add
lahf
inc
add
push
xchg
fwait
xlat
std
shrb
je
jl
insl
push
push
lret
pop
and
ss
sti
push
std
mov
scas
in
lret
adc
jecxz
test
and
mov
inc
add
xchg
int
aam
sub
addr16
stos
sub
int
xchg
push
push
mov
mov
inc
cmp
xchg
xor
xor
outsl
lahf
inc
add
cmp
loopne
mov
push
daa
shlb
add
push
fisubrs
adc
mov
adc
mov
cmp
xchg
data16
pop
sbbb
faddl
push
and
sbb
or
mov
ret
cmp
or
sub
xlat
xor
adc
adc
mov
mov
push
xchg
lret
scas
lret
mov
dec
in
jle
mov
test
cmpsl
stc
das
pop
or
lret
cwtl
cwtl
je
xchg
jmp
insl
icebp
daa
cmp
scas
frstor
mov
test
xchg
ja
mov
fildl
cltd
and
or
je
sub
adc
xchg
psubsw
fstpl
filds
cmp
add
xlat
enter
sbb
insl
adc
push
mov
inc
mov
xor
mov
xchg
push
lret
pop
in
inc
inc
arpl
push
es
mov
mov
int
push
push
pop
fsubl
mov
ja
or
mov
out
and
mov
sahf
inc
adc
mov
xor
push
sahf
fidivs
or
jmp
hlt
repz
mov
rcrb
rcrb
dec
lea
jge
cmp
jg
mov
fisttps
inc
jge
fldl
pop
cmp
xor
push
daa
xchg
scas
xchg
sbbb
inc
cli
adc
std
dec
lret
cmp
lock
js
pop
mov
popa
in
arpl
rol
adc
jnp
push
jbe
es
cli
rolb
inc
mov
andl
push
mov
ljmp
imul
outsl
sbb
push
pop
xchg
aam
outsb
xchg
movsb
sub
pusha
pop
push
scas
xchg
movsb
xchg
leave
nop
mov
xor
mov
lcall
insl
and
lret
cmp
push
mov
icebp
rolb
movsl
and
mov
iret
xchg
xchg
stos
cmc
mov
popa
inc
sbb
pop
pop
xor
repnz
cld
or
mov
and
pop
mov
imul
mov
int
inc
movsl
push
mov
je
xchg
push
in
dec
bound
add
adc
push
dec
cmp
movlps
push
insl
rolb
test
in
cmp
xor
push
in
sub
dec
push
filds
xchg
test
and
test
mov
sub
test
xor
add
dec
fiadds
mov
ja
fsts
inc
xchg
cmp
mov
jo
mov
pop
daa
mov
out
xchg
jne
fnstenv
jl
push
xor
jmp
xchg
sbb
in
add
xchg
jge
sub
xorl
mov
in
pop
xchg
jmp
ja
in
pminub
pusha
pop
pop
or
pushf
cli
and
push
xchg
push
cmp
mov
mov
push
inc
mov
enter
sti
je
mov
xor
stos
je
xor
xor
dec
outsb
insb
cmp
sbb
mull
cmp
mov
or
mov
pop
xchg
mov
push
xchg
loope
mov
mov
push
xor
add
shll
jns
or
jg
lds
jo
pop
icebp
or
aam
cmc
insb
in
inc
push
hlt
or
aam
dec
mov
xchg
mov
inc
pusha
leave
test
call
into
push
pop
jl,pt
pop
test
test
adc
ljmp
add
js
stos
pushf
or
movsb
je
je
inc
popa
test
xor
shll
jne
ljmp
push
pop
or
dec
mov
dec
icebp
cli
jp
xor
fcomip
daa
sub
repnz
jp
fistl
push
and
mov
jbe
cli
repz
cwtl
pusha
gs
iret
and
fdivrp
or
or
inc
mov
stos
fbstp
idivb
mov
or
mov
icebp
enter
xchg
xlat
xchg
lods
jg
cs
mov
and
mov
mov
std
loope
popa
cmp
sub
add
and
push
cli
xorl
mov
xor
stc
movl
xor
cmc
xor
cmp
xor
pushf
clc
pushl
popf
push
pushl
ret
jbe
pop
sbb
dec
mov
imul
inc
xor
and
hlt
jne
or
loope
data16
call
mov
sub
inc
or
jno
out
popf
movsb
sub
mov
push
fdivrl
addb
cmpl
dec
xchg
mov
jae
ljmp
and
add
mov
imul
out
inc
sti
mov
mov
pusha
xor
stc
xor
push
xor
cmc
stc
xor
push
xor
bt
xorl
jmp
mov
sub
or
pop
mov
bound
sysexit
cld
adc
pop
in
lret
jle
xchg
sbb
dec
lahf
mov
sbb
lods
lea
ljmp
js
stos
sbb
push
and
in
cmp
inc
fstpt
movsl
xchg
push
ja
lods
outsb
setle
fsubl
test
cmp
ret
sti
jl
mov
gs
mov
xlat
jmp
mov
test
insl
push
mov
notb
ljmp
jo
icebp
inc
or
divl
pop
sbb
adc
cmp
sub
sbb
mov
dec
cld
insb
inc
xor
xchg
pop
imul
mov
loope
adc
repnz
add
shrl
push
pop
cltd
mov
inc
loope
cmpsb
insl
scas
add
stos
lods
cwtl
or
cmp
mov
mov
stos
adc
sub
pop
fimull
nop
mov
cmp
push
neg
lods
mov
xor
insl
xchg
arpl
aaa
or
int3
les
ds
cmpsb
jecxz
push
cmpsb
insl
pop
nop
push
fsincos
add
push
jae
pushf
mov
fs
sahf
loope
fdivrl
fidivrs
push
scas
or
cmp
inc
or
popa
sbb
pushf
divl
mov
ret
iret
pop
adc
push
mov
cli
test
mov
jo
sbb
dec
and
loop
inc
lret
sub
lods
stc
add
aam
clc
inc
mov
call
mov
cld
rcll
sbb
test
aaa
fmull
adc
cli
movsb
mov
test
insb
gs
setbe
fwait
cld
inc
mov
repz
test
xor
call
jmp
push
pusha
pushf
push
movl
push
movl
movb
push
movb
pushf
lea
jmp
loopne
sbb
xchg
pop
fists
sbb
out
pop
push
and
mov
dec
out
hlt
mov
divl
inc
xor
xchg
sub
pop
cltd
repnz
and
cwtl
xor
push
int
shll
mov
sbb
and
push
mov
les
mov
fsubl
faddl
sbbb
jmp
mov
insl
jb
sub
push
mov
in
push
jnp
adc
xor
and
cmp
movsl
scas
loopne
js
imulb
add
jnp
mov
lods
xor
out
jp
push
xchg
hlt
daa
inc
lock
adc
sbb
je
subl
outsb
xor
les
mov
sub
mov
mov
add
or
jmp
jmp
int3
ss
ja
jb
sub
cs
repnz
push
jg
es
jl
or
cmpsb
sub
dec
and
sub
mov
mov
cmc
fwait
movl
xchg
xor
clc
xor
cmc
call
fsubrl
sbb
arpl
pushf
xor
cmp
sbb
add
push
dec
jg
ss
ss
repz
pushf
jge
shlb
sbb
mov
fiadds
dec
inc
jle
clc
mov
or
push
mov
repnz
test
or
xor
push
jle
iret
fs
sbb
arpl
ds
mov
xchg
and
fcmovnb
xchg
pop
mov
pop
and
jmp
inc
push
adc
fisttps
and
movsl
mov
loope
imul
mov
cltd
shll
je
ficoml
jge
xchg
leave
mov
into
add
loopne
xchg
xchg
clc
lods
fcoms
or
mov
mov
pop
aaa
in
hlt
xorl
scas
dec
pop
ficompl
mov
ret
fistpll
int
test
xchg
das
aaa
jo
mov
jecxz,pt
pop
push
jns
mov
push
pop
rcrl
sbb
pop
or
repnz
xor
pushf
xor
pushf
xor
cmp
xorl
pushf
cmp
xor
clc
test
pushl
popf
movb
pushf
pushl
ret
stc
call
jno
adc
xchg
jbe
pop
adcl
ss
movsb
jb
iret
adc
push
xchg
dec
ret
cmpsl
jb
icebp
cmc
cli
mov
cmp
and
or
mov
add
mov
cld
lods
jle
cwtl
cwtl
dec
lret
mov
shl
das
scas
inc
daa
lea
out
outsl
xchg
fwait
inc
adc
or
lds
push
mov
shll
push
inc
cmp
pop
clc
pop
shlb
incb
push
or
mov
lea
mov
mov
push
sbb
xor
pop
cmp
repnz
test
jns
and
fsub
pop
jmp
aas
outsb
mov
add
and
xor
and
pop
adc
push
pop
cmp
jle
push
loop
adc
jmp
out
out
pop
or
or
idivb
mov
sbb
jbe
pop
repnz
enter
mov
out
push
fisttps
push
jg
cli
mov
mov
out
mov
jne
or
iret
xchg
push
loope
aad
outsl
and
stos
mov
sub
pop
inc
push
loope
sub
mov
or
pop
loopne
es
sbb
les
add
jp
dec
sbb
mov
mov
and
gs
out
test
lods
pop
jmp
mov
add
ss
xor
cli
or
aas
dec
test
sbb
pop
scas
and
icebp
or
xchg
jno
jo
xlat
cwtl
out
mov
dec
es
ss
or
xchg
test
sahf
aaa
aas
add
or
addr16
inc
imull
cmpsl
cmp
xor
sub
mov
xor
pushl
or
movsb
or
cmpsb
sub
adc
sub
pop
int3
xor
xor
dec
push
jecxz
imul
and
jmp
cli
xchg
scas
rclb
mov
cltd
add
mov
adc
out
inc
lea
outsb
lods
je
sti
stos
adc
lret
and
call
ret
call
out
sbb
cli
and
jns
adc
fildl
ss
data16
lret
cmpsb
and
adc
push
inc
imulb
push
add
sar
pusha
popa
mov
add
push
cmpsl
sbb
add
dec
lods
lret
popa
mov
test
dec
cmpsb
testb
mov
loopne
xor
push
pop
xchg
xchg
arpl
add
cmp
mov
jb
testb
bt
cld
pushl
popf
push
pushl
ret
inc
and
and
dec
sbbl
cmp
cmp
out
jne
mov
sbb
pop
outsl
sbb
mov
sub
mov
sbb
cmp
mov
test
movsb
dec
mov
shl
gs
shll
mov
fadd
xchg
gs
scas
cmp
dec
cmc
dec
push
daa
mov
jl
add
jmp
je
xchg
mov
ror
xor
movsl
gs
or
shlb
ljmp
xlat
or
push
mov
ja
call
test
mov
in
daa
jg
cld
xchg
stc
imul
mov
mov
sub
int
inc
add
das
add
imul
lds
icebp
and
movsl
sub
dec
mov
pop
clc
mov
mov
sbb
mov
jp
int
ljmp
pop
sub
or
es
call
pushf
movl
pushf
pusha
pushf
lea
jmp
pushf
call
pushl
movl
pusha
movl
push
pushf
lea
jmp
loope
inc
and
dec
or
fimuls
lret
rorl
mov
xchg
cmp
inc
loopne
out
jp
xchg
mov
nop
and
mov
stc
addl
fldcw
rolb
aas
xor
fidivrs
ret
mov
pusha
mov
iret
sbb
rcll
int
push
movsb
fidivrs
sahf
push
repz
fs
ret
out
or
mov
cmp
loop
and
dec
pusha
cmp
pop
mov
mov
xchg
sbb
pop
mov
repz
cmpsb
mov
xor
xchg
test
mov
loop,pn
arpl
or
outsl
mov
test
xor
arpl
and
lret
dec
mov
inc
pop
fbstp
adc
pop
push
clc
push
sbb
xchg
mov
sbb
popa
icebp
mov
movsb
dec
pop
push
or
mov
cld
fs
dec
add
pushl
popf
push
pushl
ret
jmp
pusha
jmp
pusha
pusha
pushf
movl
pushf
pushf
movl
lea
jmp
xor
pusha
test
xor
pushf
call
xor
pushf
xorl
movw
test
xor
pushl
pushl
popf
movb
push
pushl
ret
inc
push
das
and
fadds
movsl
or
sti
mov
mov
jmp
mov
icebp
out
fdivrs
ja
jbe
fsts
loope
jne
ret
inc
push
aam
int3
xchg
es
push
int
loope
testb
pop
mov
ret
adc
xor
test
insl
and
in
add
sahf
xchg
pusha
sub
aad
filds
push
lahf
adc
push
insl
lahf
js
xchg
pop
bound
es
stc
rolb
shl
scas
shlb
arpl
xlat
xor
scas
cwtl
std
cmpsb
outsl
and
aaa
push
sub
fnsave
clc
adc
push
mov
pop
fstp
cli
in
inc
repnz
pop
cs
rcrb
sbb
nop
sahf
das
inc
sub
xchg
jno
and
or
loopne
loope
nop
movsb
and
sbb
and
mov
xchg
mov
incl
xchg
pushf
xor
pushf
xor
bt
stc
pushl
popf
movb
pushl
ret
pushf
xor
test
xorl
jmp
xor
push
xor
test
test
pushl
popf
pushl
pushl
ret
pusha
movl
pushf
pusha
pushl
lea
jmp
push
pop
in
fnsave
and
fwait
cwtl
or
cld
rcll
add
jbe
ds
or
jle
in
inc
iret
and
fcompl
and
test
and
add
fsubs
mov
cld
adc
icebp
pop
mov
lcall
call
add
or
gs
dec
xchg
push
mov
test
fwait
jmp
scas
imul
das
lods
addb
out
lock
into
inc
leave
aad
lds
xchg
add
push
inc
adc
push
addr16
std
add
sub
cmc
aas
jp
leave
sub
in
mov
add
inc
lods
mov
pop
pop
xchg
adc
cmpsl
scas
inc
movsb
pop
mov
pop
inc
mov
cmpsl
mov
sub
les
stc
mov
sub
inc
fucom
shrl
icebp
rcrl
call
notb
xlat
push
iret
repz
scas
sti
loopne
dec
ds
jge
iret
aas
out
stos
mov
in
mov
mov
add
stc
mov
adc
inc
mov
shlb
pcmpeqw
pop
mov
sti
jp
test
inc
sti
mov
out
jecxz
push
mov
ja
mov
jmp
push
test
lea
arpl
push
sub
lret
mov
push
xchg
push
xor
or
mov
imul
out
enter
add
jno
lods
aam
aad
mov
ja
pop
mov
add
fidivl
fisubrs
push
scas
adc
or
adc
xor
shrl
and
mov
sub
xor
mov
addl
add
mov
insl
xor
jbe
leave
mov
cmp
pop
ds
enter
jmp
movsb
dec
js
scas
sbb
xor
arpl
pop
cmpsb
hlt
mov
int
mov
pop
jnp
xchg
lcall
lret
test
mov
adc
ds
sbb
mov
les
test
xchg
inc
push
or
mov
cmc
cmc
xor
stc
xorl
cmc
cmc
xor
clc
xor
push
xor
jmp
pushf
pusha
jmp
jmp
mov
xor
std
bt
pushl
popf
mov
pushl
ret
xorl
cmp
stc
xor
call
jmp
pushf
movl
push
pushl
lea
jmp
xor
call
call
pushf
popl
test
xor
test
cmp
xor
test
pusha
xor
call
xor
stc
bt
xor
cmp
xor
jmp
mov
dec
push
popf
fcmovnu
mov
and
imul
pop
mov
jbe
inc
mov
popf
fdivs
loope
mov
iret
fistl
fwait
pop
mov
ja
addl
push
mov
sbb
adc
mov
shrl
jbe
lret
push
push
daa
imul
lret
mov
test
repnz
out
rorl
xor
add
roll
mov
rclb
mov
pop
mov
repnz
ds
out
loop
enter
inc
pusha
cmpsl
cli
cmp
pop
lock
or
jno
mov
cmpsl
ret
out
loope
push
push
outsb
xor
fistpl
mov
ds
pusha
dec
mov
daa
or
push
mov
sub
jae
inc
or
sbb
inc
jle
push
adc
shrb
xor
imul
jge
fisubrs
mov
popl
bt
xor
call
xor
jmp
pusha
jmp
push
pushf
popl
test
bt
xor
cmc
xorl
stc
cmc
xor
stc
xor
test
xor
clc
xor
cmp
test
xor
test
push
xor
cld
pushl
pushl
popf
pushf
pushf
pushl
ret
cmp
xor
bt
xor
push
jmp
pusha
pushf
movl
pushf
lea
jmp
pushl
popf
pusha
pushl
ret
pop
jne
data16
arpl
mulb
enter
xor
icebp
adcl
fildll
pop
in
add
ljmp
push
xchg
jbe
sbb
icebp
xor
mov
incb
inc
mov
int3
cmp
andb
xchg
fldl
jnp
cli
out
rcr
adc
pop
sbb
jecxz
fimull
sub
ret
repz
or
xlat
stos
xlat
adcb
imul
inc
push
pop
adc
mov
xor
insl
clc
jl
add
mov
cmpl
fdivs
mov
aaa
movsl
out
bound
insb
push
jle
call
out
mov
dec
jmp
rcrl
push
sbb
popa
cmp
ret
xchg
in
xchg
inc
jp
pushf
jae
cmp
mov
addr16
aas
rol
dec
scas
popa
mov
pop
fimuls
jns
insb
push
xor
xchg
cmpsl
cmp
adc
jns
mov
sub
icebp
leave
inc
scas
popa
test
pop
inc
mov
les
pop
add
repnz
repz
pushf
inc
mov
or
out
cmp
into
xor
jp
aam
push
stos
jp
or
into
andb
inc
mov
mov
ja
sub
mov
mov
cmp
inc
out
lods
nop
pop
mov
int3
test
mov
mov
es
push
sti
jp
ret
adc
jg
mov
dec
and
push
lods
stos
xchg
inc
repnz
cmp
repz
idiv
mov
push
cmpsl
lods
jns
aas
cld
add
cmpb
mov
mov
pushf
movl
call
jmp
fdiv
jmp
pushf
movl
mov
call
test
dec
cmp
mov
pusha
sbb
shrb
bound
mov
push
cwtl
dec
scas
clc
test
les
test
inc
add
rclb
mov
push
test
push
sbb
stos
add
hlt
int3
xchg
out
cmp
out
iret
mov
movsb
lds
pop
dec
jbe
mov
mov
adc
mov
inc
sbb
mov
dec
dec
pushf
xchg
push
sub
mov
in
lods
xchg
into
sbb
mov
rcr
addb
stos
pusha
into
in
outsb
stos
mov
rorl
pushf
lea
jae
pushf
push
movl
mov
movw
movl
pusha
pusha
movb
push
lea
jmp
pushf
xor
push
xor
stc
xor
push
bt
xor
push
pushf
xorl
test
push
xor
test
xor
std
pushl
popf
pushf
pushl
ret
movl
pushl
push
mov
push
lea
jmp
pushf
popl
cmc
xor
stc
xorl
call
jmp
aaa
jecxz
out
xchg
sbb
aaa
xchg
jnp
cmpsb
jp
jne
lcall
add
push
add
pushl
loope
pop
pusha
frstor
insl
inc
cmp
xor
cwtl
mov
mov
popf
mov
mov
push
mov
mov
ret
pop
add
mov
mov
inc
es
xchg
enter
test
cmpl
xchg
sub
pop
and
sbbb
push
sub
es
pop
dec
jno
jno
sub
xchg
inc
sti
mov
rorl
test
sub
ret
mov
push
cwtl
rorl
sarl
xchg
aaa
pushf
test
mov
xor
loopne
pop
fistps
or
clc
imul
xchg
xchg
out
xor
nop
inc
or
push
lds
inc
ret
xchg
dec
xchg
ret
sbb
lea
es
add
test
push
cmpsb
mov
jno
push
shrl
ja
daa
and
sbb
test
scas
mov
mov
or
inc
jmp
push
mov
lock
adc
xor
dec
jmp
adc
inc
fldt
xor
je
arpl
pop
push
pop
inc
fistpll
in
mov
daa
addr16
fnstsw
out
repnz
shlb
adc
addr16
idiv
cmp
js
imul
gs
loope
cltd
stos
push
cmp
xor
inc
loopne
sbb
adc
inc
and
scas
icebp
push
or
push
call
xor
jmp
xor
call
pusha
movw
movl
pushf
pushf
call
movw
movl
pusha
pusha
movw
pushf
lea
jmp
movl
mov
pushl
movl
pushf
push
lea
jmp
pushf
pusha
jmp
jmp
pusha
pusha
movl
pushf
call
movl
pushf
pushf
pushf
push
lea
jmp
push
in
mull
or
addl
adc
daa
leave
ds
arpl
adc
jmp
and
adcb
gs
cwtl
jmp
jno
mov
pushf
je
jb
mull
stos
or
lods
or
dec
mov
sub
out
scas
imul
and
shr
scas
fstpt
push
mov
push
shr
sub
push
fbld
adc
xchg
lock
push
cmp
adc
push
or
sbb
lahf
mov
jp
xor
in
push
test
mov
std
stos
ss
stos
bnd
jge
movsb
add
fisttps
fmuls
mov
sti
pop
cmpsb
popf
sahf
xchg
dec
in
sbbb
test
fldcw
aaa
rorb
xor
and
cmp
movsl
mov
cmp
rcrb
clc
cmpsb
push
sbb
xchg
inc
xor
and
dec
cmpb
pop
lods
pop
xchg
test
inc
rcl
mov
scas
jbe
aam
pushf
fimuls
add
filds
sub
add
push
jle
xchg
sub
push
js
sbb
std
mov
cmp
icebp
imul
std
xlat
sbb
adc
cld
sbb
fdivl
or
sub
sbb
test
fs
adc
xchg
pop
nop
mov
fisubs
sub
loopne
lret
pusha
movl
push
pushf
pusha
pushf
lea
jmp
movl
pusha
push
lea
jmp
or
movsb
lret
movsb
adc
fisttpl
das
out
hlt
push
das
sahf
ljmp
mov
loope
pop
push
sub
movsb
mov
into
test
loopne
cmp
aas
inc
pusha
and
push
sub
cmp
mov
jmp
jp
movsb
add
xchg
and
push
push
adc
ret
dec
iret
es
mov
iret
adc
cltd
out
out
jmp
and
lock
movsl
lods
xchg
icebp
mov
inc
push
xchg
inc
rcr
xchg
je
jle
xor
fs
jno
dec
mov
rclb
adc
jmp
dec
and
popa
sbb
dec
sahf
pop
insl
lahf
test
mov
sbb
das
stos
jns
loope
nop
push
pop
leave
adc
rorb
bnd
sub
xchg
clc
idivb
jne
lret
xchg
inc
mov
jne
dec
dec
mov
out
cvtps2pi
in
dec
pop
dec
into
inc
cmp
inc
push
push
test
pop
mov
jnp
stc
lret
mov
jo
jbe
and
and
or
in
jp
insb
enter
repz
push
add
add
push
pop
mov
and
and
mov
je
cs
cmp
test
pcmpeqw
jae
and
in
or
in
lea
jno
out
mov
pop
dec
add
andl
enter
popf
xor
inc
lea
xchg
xchg
dec
rcr
push
repz
stos
das
into
xchg
into
xchg
jl
outsb
xchg
aad
adc
icebp
incb
dec
dec
sbb
jp
jle
push
out
out
in
mov
adc
push
sbb
xchg
push
jecxz
popf
xchg
inc
pushf
nop
mov
jne
out
in
out
loop
push
push
ret
push
and
jae
out
adc
fmuls
lods
xlat
dec
inc
mov
mov
xor
movsb
and
ret
mov
mov
movsb
stos
lret
pop
insl
mov
dec
ss
pusha
call
lea
jp
pusha
pusha
movl
pushl
movw
pushf
lea
jmp
jmp
pushl
popf
pusha
mov
pushl
ret
push
movl
push
pushf
jmp
xor
pushf
push
xor
stc
test
xor
cmc
call
mov
xor
xchg
ds
and
shll
cmc
mov
sbb
mov
ja
stc
inc
fiaddl
sbb
adcl
mov
fldt
dec
ret
ljmp
les
adc
or
add
cmp
xor
mov
cmc
xor
stc
xor
test
xor
cmp
cmc
pushl
popf
mov
movb
pushl
ret
pushl
xor
bt
jmp
jmp
pushl
popf
movl
mov
pushl
ret
jmp
pushf
popl
stc
xorl
call
pushf
pushf
popl
call
xor
clc
xorl
stc
test
xor
pusha
cmp
xor
push
xor
mov
jmp
movl
pushf
lea
jmp
dec
push
adc
adc
sub
cmpb
and
out
dec
or
pop
xor
push
pop
lea
aas
in
ja
xor
mov
in
lea
icebp
test
and
stc
mov
adc
cltd
rol
xchg
mov
dec
pop
xchg
push
mov
loopne
lret
mov
jmp
data16
xchg
aad
subl
xchg
subl
jae
insl
pop
arpl
adc
bound
fsubp
jmp
push
add
cmp
ds
cmpsb
or
daa
subl
clc
xor
call
call
movl
pushf
pusha
pushf
pushl
lea
jmp
or
stos
subl
into
sbb
sub
sub
mov
mov
int
movaps
out
push
and
shlb
out
out
xchg
mov
jbe
fiadds
and
insb
bound
hlt
fsts
sub
push
add
xchg
push
add
cmc
lods
add
orl
or
xchg
icebp
aam
int
or
cmp
data16
cmp
cmp
mov
in
push
mov
je
pop
pop
sbb
jmp
hlt
xchg
lock
divl
hlt
inc
pop
lret
fcmovb
inc
mov
hlt
movsl
jecxz
xchg
xor
add
pop
or
stos
call
inc
pop
xchg
aam
xchg
adc
add
xor
lods
fxch
mov
jno
xchg
xchg
mov
subl
push
mov
cmp
pop
arpl
xor
loope
jge
in
notl
push
outsl
cmp
sbb
xchg
sahf
fwait
icebp
xchg
xchg
push
dec
add
int
xor
loope
insb
adc
pop
notl
hlt
daa
int
addr16
pop
jecxz
sub
mov
hlt
data16
jmp
cmpsb
stc
dec
nop
jns
es
pop
shrb
sti
cmp
mov
lahf
cmp
aad
aaa
cmc
sahf
subb
scas
adc
adc
insl
push
fsts
push
xorb
fsts
jl
jno
repz
cmc
mov
cwtl
lods
inc
and
xchg
iret
lods
inc
sbb
fwait
xor
or
xchg
out
in
inc
leave
mov
fs
jns
or
add
sub
pshufw
movsl
cli
test
out
jle
pop
leave
gs
and
jmp
scas
shlb
cwtl
clc
mov
insl
jbe
xchg
sub
add
cmp
scas
jns
xor
fs
dec
aam
sub
jae
sub
adc
add
jle
cmp
popa
jnp
cmp
sbb
mov
mov
sub
mov
ret
push
in
and
mov
inc
or
loopne
repz
push
roll
loope
pusha
movl
push
pushf
movl
pusha
pushf
push
movw
lea
jmp
movl
jmp
pusha
movl
pushf
movl
mov
lea
jmp
sbb
dec
sub
lods
arpl
icebp
rolb
push
lods
gs
stos
sbb
in
inc
mov
or
lock
sub
lock
jno
ss
andb
in
pop
aam
adc
data16
movsl
sbb
xor
push
mov
ja
and
add
ss
or
imul
clc
mov
popf
mov
push
pop
sub
inc
and
aaa
cmp
sbb
inc
fnstcw
sub
shll
adc
ljmp
dec
sbb
cmc
push
push
leave
sbb
xor
in
test
testl
xchg
mov
repz
adc
adc
adcb
aad
loopne
and
adc
mov
jmp
in
inc
push
es
jno
pushf
cld
cmp
push
nop
ljmp
inc
sub
pop
pushl
insl
aaa
xrelease
out
mov
and
movsl
pop
cwtl
adc
lods
mov
adc
adc
fwait
jg
add
jns
push
jmp
dec
dec
adc
stos
push
pop
mov
fs
cmp
movsl
into
test
leave
dec
jmp
fistps
jle
jbe
pop
ja
mov
mov
or
cmp
in
int3
ss
addb
jp
push
xchg
mov
mov
ss
test
test
add
xchg
push
add
iret
add
sbb
push
jg
xchg
fistps
push
push
sbbl
inc
push
xor
mov
mov
and
mov
psubusw
cltd
adc
ja
or
call
lahf
lret
sub
mov
ss
lock
rorl
cltd
push
cmpl
sti
mov
dec
rorb
xchg
jbe
ficompl
xchg
and
rcrb
inc
sahf
roll
or
lock
mov
icebp
mov
and
jno
jg
sbb
mov
sub
or
add
jb
lret
cmovl
dec
rcrl
mov
loope
fsts
add
cmp
fprem
shll
inc
mov
stos
nop
scas
add
cmp
xchg
xchg
inc
xchg
pop
inc
ss
xchg
xchg
pop
cwtl
ss
jbe
jp
mov
adc
xchg
jg
test
outsb
cmpsl
addr16
dec
and
adc
dec
cmp
cli
mov
xlat
xchg
add
loope
pop
mov
cli
jnp
or
jbe
sub
xchg
mov
xorl
mov
push
xor
test
pushl
popf
push
mov
pushl
ret
pusha
movb
pushf
lea
jg
push
push
movl
pushf
pusha
pushl
lea
jmp
xor
cmc
xor
cmp
bt
xor
call
ret
inc
push
add
mov
inc
movsl
push
repz
jae
add
es
add
cld
sarb
xchg
and
insb
fcmovnu
pop
pusha
mov
lret
test
push
and
sbb
dec
xchg
fistpl
mov
or
ljmp
icebp
cmp
xor
jae
mov
mov
mov
stos
loope
js
xchg
pop
ffree
mov
cs
rcrl
stos
push
mov
xchg
and
repnz
sahf
sub
cmp
and
repz
and
call
mov
movl
pushf
movl
push
lea
jmp
mov
pushf
popl
pusha
pushf
xor
clc
clc
xorl
cmp
xor
call
jae
push
call
pushf
popl
clc
xor
cmp
xor
jmp
call
call
xorl
test
xor
mov
pushf
xor
clc
xor
stc
xor
call
xor
test
clc
xor
pusha
pushl
popf
pushf
pushl
ret
call
pushf
push
movl
pushl
pusha
lea
jmp
push
xor
push
xorl
pusha
stc
xor
stc
xor
cmp
xor
cmp
mov
xor
stc
pushf
xor
call
jmp
stc
xor
stc
movb
xor
clc
cmc
xor
jmp
pushf
jmp
call
call
sbb
or
cmpl
insl
insb
push
mov
and
mov
sub
rcl
mov
icebp
xchg
cld
imul
std
dec
jmp
clc
call
imul
icebp
sub
hlt
mov
pop
pop
jno
into
xchg
dec
pop
aas
mov
enter
pop
lcall
xor
and
dec
sbb
mov
stos
in
test
pop
add
imul
lahf
push
gs
sbb
sti
pop
xor
xchg
dec
push
jle
or
sub
xchg
stos
loope
popa
bound
pop
mov
adc
and
lcall
inc
sbb
fmuls
lret
gs
data16
daa
or
mov
out
jns
js
lcall
pop
xor
fiaddl
pop
adc
shrb
popa
sahf
xor
sarl
lret
mov
mov
push
xchg
lock
lret
mov
mov
in
cmc
test
pushl
popf
mov
mov
pushl
ret
xor
cmc
cmp
xor
test
bt
xor
call
xor
pusha
clc
xorl
test
mov
xor
call
xor
push
xorl
pushl
pushf
xor
mov
pushf
xor
pushf
xor
bt
xor
cmc
xor
bt
stc
xor
cld
pushl
popf
pushl
pushl
ret
xorl
pushf
test
xor
push
call
pushl
popf
movb
pushl
ret
call
aam
adc
mov
and
enter
mov
dec
sub
adc
inc
stc
xorl
clc
xor
pushf
xor
cld
pushl
popf
pushl
movb
pushl
ret
pushf
movl
pushl
jmp
pushf
movl
mov
pusha
push
lea
jmp
push
call
jmp
lea
jbe
inc
shrb
mov
in
repz
sar
rcrl
and
xchg
mov
adc
and
in
pop
bnd
jne
insl
clc
cmp
pop
ret
dec
dec
jnp
orb
aam
ss
test
stos
jp
jno
and
and
sbbl
not
gs
fwait
jae
call
fs
fnstcw
aad
cmpsb
mov
enter
insl
mov
adc
sbbl
loop
push
dec
sub
test
pop
add
xchg
cmp
or
xchg
repz
add
add
and
mov
pusha
lods
sahf
rorb
and
cmp
sarl
xchg
sub
xchg
or
jbe
mov
aas
mov
xor
movl
pushf
pusha
pushl
movb
lea
jmp
push
lock
std
std
pop
xchg
gs
ret
ja
sti
dec
ror
lea
push
cltd
adc
fnsave
xor
jo
insb
in
jge
stc
in
js
dec
lods
and
aam
push
int3
add
out
es
test
enter
mov
addr16
push
in
in
xchg
push
push
mov
push
xor
lahf
or
in
adc
inc
push
pushf
popl
clc
cmc
xor
cmc
xor
clc
xor
push
bt
xor
pushf
clc
xor
clc
pusha
xor
movb
xorl
clc
xor
cld
pushl
popf
pushf
pushl
ret
fisubs
imul
pop
ret
cwtl
insb
nop
test
lods
xchg
jo
mov
mov
mov
insb
loope
insl
repnz
xlat
add
cmpsb
push
sbb
cwtl
insb
scas
jns
jg
pushl
jo
pop
and
lock
je
jge
mov
popf
mov
sbb
ret
cltd
push
pop
orb
imul
push
push
sub
mov
mov
mov
pop
imul
pop
adc
inc
jl
ret
cltd
push
in
fcmove
mov
dec
lcall
push
xor
mov
cmp
int
dec
stc
add
shlb
cltd
push
call
mov
xlat
pop
push
shll
mov
mov
repz
dec
xor
mov
adc
out
or
mov
xorb
push
div
jecxz
in
pop
daa
pop
jnp
dec
xchg
mov
lret
dec
or
clc
xchg
inc
push
mov
mov
inc
pushf
add
adc
xor
cltd
aam
addr16
sbb
sbb
and
add
xchg
jmp
push
mov
inc
imul
add
xchg
sbb
int3
push
jecxz
lock
dec
sahf
xor
cld
xor
push
leave
pop
add
xchg
call
inc
pop
sbb
mov
shll
fildl
into
xchg
int
jo
stos
or
mov
sub
push
mov
xor
mov
loop
into
cwtl
and
dec
bt
xorl
bt
xor
pusha
pushl
popf
pushf
mov
pushl
ret
xor
movb
xor
stc
jmp
xor
push
xor
clc
xor
cmp
cmc
pushl
popf
pushf
push
pushl
ret
xorl
jmp
push
pusha
pushf
popl
jmp
xor
stc
cmp
xor
cmp
cmp
xor
jmp
push
xor
test
pushl
xor
cmc
call
xor
movb
movb
xor
mov
jmp
mov
lahf
movsb
dec
mov
jo
test
xchg
in
enter
adc
test
popa
mov
sbb
pop
mov
cmp
stos
rorl
ret
int3
xchg
fs
push
xor
fnstcw
sbb
push
in
loopne
movb
cld
in
divb
mov
mov
lock
cli
and
fimull
fs
sbb
rcr
addb
jg
insl
push
sub
test
jg
mov
aas
jb
cltd
movsl
add
shll
addr16
inc
scas
lods
bound
lret
ret
decl
push
movsl
rol
sbb
add
shrl
fucomp
adc
jns,pt
cltd
cs
xchg
test
fdivrp
push
dec
xchg
mov
lods
add
std
cmp
push
cmp
and
jae
loopne
insl
adc
lret
and
call
jle
or
jbe
push
lock
out
bound
jle
ljmp
nop
in
or
test
cmpsb
lds
sahf
ret
xchg
repnz
xchg
test
out
neg
push
push
push
jne
pop
mov
ffreep
push
add
addr16
aas
add
push
inc
fs
push
out
test
inc
xor
nop
movsb
xchg
pushf
mov
in
enter
mov
addl
scas
rolb
dec
fisttpll
jge
fcomi
rcr
daa
and
rorb
inc
inc
mov
pop
sahf
aad
dec
in
cmp
add
or
dec
jmp
out
xchg
lret
rolb
pushf
cmp
cmp
mov
fmull
jns
xchg
lds
adc
insl
fbld
outsl
and
cmp
loop
popf
notl
stos
aaa
shlb
and
xlat
xchg
push
test
bound
outsl
cmp
jae
insl
mov
sti
push
sbbl
or
mov
and
lahf
out
popa
push
lds
lds
repnz
sbb
push
jmp
jmp
aas
pop
xor
push
add
dec
into
jo
stos
and
xor
jno
inc
decl
push
mov
out
sbb
or
pop
iret
popl
fs
ja
imul
push
pop
adc
popa
dec
rcrb
or
fdivl
lods
mov
mov
ljmp
loop
xor
pusha
pushf
movl
mov
push
push
pushf
lea
jmp
xor
jmp
pushl
xorl
jmp
call
pushf
pushf
popl
bt
clc
xor
cmp
xor
push
xor
jmp
xorl
push
xor
push
xor
test
xor
clc
xor
cmc
cmc
pushl
popf
movb
pushl
ret
jmp
jmp
movl
pusha
pushl
lea
jg
pushf
movl
push
pushf
pushf
lea
jmp
mov
dec
or
jne
mov
fistl
imulb
cmp
sbb
ficoml
cmp
cwtl
rcll
adc
lahf
jbe
or
mov
rcll
out
das
outsb
arpl
pop
das
lcall
shl
mov
mov
repnz
adc
fucomp
ja
iret
pop
repz
jb
daa
cmp
call
add
and
sub
jns
adc
push
xlat
mov
cmpsl
mov
add
repz
or
test
sbbl
inc
add
out
fcoms
es
pop
push
imul
xor
enter
jae
aas
xchg
inc
nop
adc
xlat
jmp
outsl
dec
adc
jp
lock
jbe
dec
rcrb
es
lock
std
std
mov
imul
add
mov
and
pop
dec
ss
xor
pop
mov
jno
dec
inc
call
push
lret
add
ljmp
out
repz
cwtl
and
scas
cmp
inc
jbe
and
xchg
push
push
scas
hlt
xchg
scas
fidivl
ret
ret
enter
fadds
notb
or
loope
and
xorl
bt
xor
stc
cmp
xor
bt
cmp
xor
cmc
stc
pushl
popf
push
pushf
pushl
ret
jnp
sbb
dec
mov
je
push
mov
xchg
adc
mov
or
push
mov
xchg
push
aas
xor
std
cmp
es
stc
and
and
sbbb
andl
mov
rcl
mov
in
and
mov
jno
inc
je
outsb
inc
pop
push
call
pop
xor
sar
sbb
add
outsb
mov
pop
lea
mov
lea
mov
lret
out
jmp
jb
out
cmp
and
pop
lds
orl
loope
loop
sbb
in
and
rorb
push
jns
test
mov
pop
push
sbb
push
and
sub
push
sarb
pop
or
sti
xchg
xchg
mov
out
adc
daa
adcl
pusha
pushf
popl
clc
clc
xor
pushf
xor
stc
mov
xorl
pushl
pushf
xor
push
pushf
xor
cmp
jmp
movl
pushf
lea
jmp
jmp
pushf
movb
movl
pushf
push
movl
mov
pusha
pushf
lea
jmp
and
dec
mov
das
mov
mov
cmp
ja
mov
negl
cmc
shr
jns
and
js
inc
jo
call
jp
cmp
lret
sbbb
imul
jl
xor
sub
adc
mov
xchg
jo
cmp
sbbl
pop
in
pop
cmp
sub
aaa
enter
out
leave
out
jl
pop
cli
ljmp
adc
dec
xor
cmp
xchg
jb
xchg
push
jne
mov
or
cs
mov
outsb
sub
adc
add
add
iret
xchg
mov
fsubl
mov
and
movsl
insl
jmp
jmp
mov
xchg
movsb
ja
test
call
and
lahf
std
ljmp
js
loopne
adcb
xor
xchg
xchg
out
dec
or
test
inc
push
jmp
jecxz
sbb
ja
out
xchg
lds
jle
xchg
fwait
scas
fisubrl
cmp
repz
pop
cmpsl
xchg
in
xor
aad
sub
inc
js
fdivr
aad
and
cmp
fucomi
cmp
xchg
rclb
push
cmp
enter
cmp
aam
sub
or
clc
pop
and
out
popa
out
out
push
test
xchg
loopne
mov
js
roll
divl
das
cs
and
dec
xchg
loopne
sti
lret
adc
mov
cmc
push
mov
stc
jp
aad
inc
mov
and
rep
pop
push
pop
jge
inc
sahf
pop
cld
jne
adc
imul
mov
jb
fdivrs
or
mov
jge
push
stos
jae
pop
jg
push
dec
lock
hlt
mov
outsb
lret
andb
enter
and
mov
movsb
hlt
dec
cmc
jbe
out
sahf
negb
add
imul
dec
sti
jae
fcos
rcrl
inc
mov
rol
add
outsl
mov
mov
stos
ficompl
jp
nop
push
repnz
hlt
push
jnp
mov
pushf
popl
test
clc
xorl
stc
xor
cmp
xor
call
pusha
mov
push
lea
jo
push
jnp
pushf
movl
pusha
pushf
pushf
lea
jmp
imull
pop
push
or
pop
pop
pop
xor
cmpsb
insb
sub
xor
cwtl
jge
sbb
cli
push
mov
mov
arpl
xor
cmpsb
out
lea
mov
pop
xchg
cmp
in
cmpsb
sbb
insl
lods
imul
jecxz
sub
jb
dec
jmp
jo
push
xor
insl
or
adc
dec
aaa
fistpl
icebp
pop
jnp
push
or
test
sub
scas
ret
or
clc
inc
xchg
push
adc
insl
repnz
ret
dec
arpl
andl
scas
ret
xchg
insl
nop
subl
push
pop
xchg
mov
js
mov
mov
loop
mov
fisubl
sti
stos
mov
add
aas
xchg
jp
push
or
pop
sbb
inc
pop
outsb
mull
mov
push
sbb
fadd
sub
cmp
lahf
in
lods
jg
pop
adc
push
inc
mov
outsl
push
popf
es
sbb
arpl
lret
dec
outsb
or
in
int3
dec
sub
push
or
sbb
clc
mov
or
jno
cmp
clc
push
nop
adc
push
sbb
xchg
test
xchg
jecxz
sbb
das
inc
push
pop
adc
pop
cmp
imul
sub
in
cwtl
add
popa
jno
cmp
inc
push
arpl
mov
push
mov
call
dec
sub
pop
jmp
lahf
jbe
psrlw
adc
mov
adc
cmp
sti
inc
movsb
nop
imul
ljmp
xchg
lods
jge
or
push
push
dec
test
dec
cmc
pop
in
leave
mov
movsl
rclb
cwtl
mov
ret
cmp
adc
aaa
pop
mov
mov
push
mov
push
int
shlb
in
and
pop
sub
outsl
es
add
arpl
jecxz
mov
or
insl
lret
fidivrl
les
or
pop
stc
clc
inc
int3
je
out
test
xchg
xchg
test
add
fs
out
or
das
xor
push
in
mov
push
mov
push
push
jle
cli
inc
xor
or
inc
jnp
lret
mov
outsl
pop
xor
insb
mov
fmull
ds
outsb
fimull
mov
sub
outsb
imul
pop
in
adc
das
cs
push
stos
sahf
adc
loope
sbb
rolb
inc
scas
mov
mov
arpl
xchg
js
push
add
jmp
mov
jle
jnp
fimuls
adc
popl
xlat
dec
adc
es
std
jge
mov
ds
movsb
addl
addl
shlb
mov
decl
outsl
into
sub
fsubl
and
cmp
pop
adc
sar
ss
pop
rorb
sbb
inc
and
pop
jne
pushl
push
mov
lea
jmp
jmp
lea
jl
pushf
movl
pushf
lea
jmp
xor
bt
xor
jmp
in
stc
mov
push
fucomp
ret
shrb
mov
mov
icebp
test
aaa
dec
pop
mov
into
pop
jecxz
add
add
adc
xchg
hlt
adc
cmpsl
xchg
jg
sub
shrl
jge
mov
roll
loop
cmc
in
jecxz
cmpsl
xor
cmp
push
or
xlat
push
pushf
lret
lret
stc
sarb
das
aad
xchg
mov
jns
sub
mov
call
pushl
popf
mov
movb
pushl
ret
xor
push
push
xor
bt
cmp
xor
stc
mov
xor
test
cmc
xor
call
call
fs
push
or
ljmp
inc
pop
dec
movsb
push
ret
rcll
fwait
sti
adc
inc
inc
inc
pop
cmp
pop
in
dec
add
jns
and
sbb
inc
out
adc
call
dec
lret
lret
inc
or
std
dec
add
leave
sbb
xor
mov
sbb
pushf
mov
xor
jo
pop
popa
push
or
mov
rol
fcmovb
movsbl
adcb
pop
in
stc
and
sub
cli
push
pop
or
or
out
mov
pcmpgtd
pop
lea
out
or
outsb
or
jns
jno
cld
ja
jp
push
mov
sub
outsl
in
push
mov
repz
xor
jg
xor
pop
xchg
adc
inc
adc
push
imul
inc
punpckhdq
in
out
push
lods
nop
and
cmc
push
mov
nop
mov
pop
pop
insl
mov
mov
xor
sub
nop
or
test
test
adc
push
xor
sbb
out
ds
or
mov
adc
sti
xchg
push
sbb
sub
in
sbb
push
stc
loop
das
add
xor
int
dec
pop
iret
cs
dec
or
dec
les
ss
or
sub
adc
incl
arpl
loop
xorl
movw
xor
bt
pushl
popf
push
pushl
ret
call
push
movl
jmp
call
pushf
popl
push
xor
cmp
xor
push
push
xor
clc
pushf
xor
cmc
xor
bt
pusha
xor
pushf
clc
xorl
push
stc
xor
clc
pushl
popf
mov
pushl
pushl
ret
xorl
bt
pushl
popf
movb
movb
pushl
ret
pusha
movl
pushf
lea
jmp
das
inc
dec
jl
sbb
mov
test
out
sub
movsb
insb
repnz
fs
out
jne
sbb
je
jmp
flds
push
in
shrb
jno
call
xor
sbb
cmp
sbb
xor
mov
popa
push
add
rol
pshufw
leave
push
shl
pop
adc
insb
pop
push
adc
mov
jge
inc
xchg
dec
ds
sbb
movl
push
movw
movl
movb
lea
jmp
pushf
movb
movl
pusha
jmp
pusha
mov
pushf
popl
stc
test
xor
cmp
push
xor
bt
xor
bt
mov
xor
movb
xor
bt
xor
movb
xor
bt
pushf
xorl
cmp
pushl
popf
pushf
push
pushl
ret
stc
xor
clc
cld
pushl
popf
pushf
pushf
pushl
ret
test
jae
imul
or
outsb
dec
jp
or
push
xchg
add
jle
leave
aad
sahf
stos
sub
inc
icebp
out
or
sbb
push
rorb
jae
js
adc
outsl
mov
add
sahf
aas
add
out
bound
insb
or
fdivs
test
nop
or
push
fnstsw
dec
mov
cmpsl
icebp
loop
push
fbstp
adc
mov
xor
orl
dec
in
leave
xchg
shr
lahf
testb
ja
xlat
movl
inc
fs
test
ret
ret
imul
data16
loopne
vmovdqu
and
andb
lahf
xchg
add
xchg
lret
imul
or
pop
pop
mov
cs
adc
sub
movsb
loope
lret
cmp
cmc
in
lret
mov
add
xchg
imul
push
adc
pusha
std
xor
push
icebp
inc
loop
ds
jecxz
cmp
push
jae
cmc
rcl
int
mov
xor
out
pop
call
leave
cmp
sub
test
lret
sbb
mov
push
jnp
or
aad
leave
cmpsb
push
push
dec
ljmp
pop
push
xor
xchg
add
cmp
pop
pop
sub
mov
add
adc
stc
pop
jne
sti
xchg
xlat
xchg
mov
xor
jo
dec
loop
xchg
xor
sub
fnstsw
rcl
out
mov
pusha
sub
shll
mov
xor
xchg
iret
scas
out
lahf
arpl
fs
imul
fcompl
sub
mov
rolb
ljmp
sti
stos
stos
int3
int3
jmp
call
movl
pushf
call
pusha
jmp
rorl
in
sub
test
pop
jp
add
movsl
fisubl
pop
sbb
xchg
fwait
les
movsl
subl
stos
fnstsw
lret
sub
and
mov
jecxz
mov
mov
shrl
mov
pop
mov
jmp
dec
cmp
jmp
cmp
pop
into
mov
rcrb
test
fsubr
in
mov
cltd
lret
fstl
imul
lock
daa
addl
or
add
cmc
or
insl
jp
call
pusha
jmp
pusha
add
adc
xor
and
jo
pushf
ficompl
xchg
xchg
repz
push
dec
mov
mov
adc
cwtl
inc
les
xor
stc
cwtl
jnp
dec
mov
or
push
test
loopne
mov
rclb
aaa
dec
jnp
cmpsl
push
pop
jle
cmpsl
push
xor
test
pop
shll
sbb
daa
xor
cltd
leave
cmp
nop
adc
cmp
sub
push
fistl
out
mov
xlat
rcrb
or
das
arpl
inc
cmp
or
fstpl
inc
or
push
mov
icebp
lcall
repz
leave
pusha
test
cmpl
es
iret
stos
scas
xchg
xchg
cmp
lea
mov
shl
cmp
jge
sar
sahf
cmp
jbe
loop
mov
pop
int3
pop
fldenv
int
xchg
fwait
in
xchg
leave
fadds
push
lods
pop
mov
repz
pop
inc
call
call
cmpsb
mov
pop
or
aaa
popf
push
ret
lcall
dec
jno
ja
adc
dec
loopne
mov
test
push
les
rclb
sti
insl
pop
inc
mov
xchg
cmpsl
adc
testb
pushf
jl
dec
cmp
xlat
es
insl
data16
push
lcall
outsl
movsl
xchg
test
jb
jg
in
aam
cmpsl
pop
aas
cmpl
pop
jge
lahf
or
orl
out
pusha
test
sub
xchg
nop
aam
ljmp
inc
sbb
mov
mov
cmpb
inc
mov
sub
fcoms
notl
xor
shrl
ficompl
adc
hlt
ds
nop
clc
loope
leave
mov
test
sub
sub
or
fwait
arpl
imul
sti
adc
das
cmpl
and
cmp
rcrb
fs
lea
cltd
jno
add
in
ficoml
sub
icebp
dec
pop
or
mov
sbb
push
xchg
or
iret
jae
inc
add
in
popf
nop
call
and
cwtl
pusha
jbe
bound
insl
adc
ds
mov
scas
xor
imul
or
int
xorl
jmp
push
xor
bt
xor
mov
xor
call
pushf
movl
push
pushf
pushf
movl
lea
jmp
call
xor
jmp
xor
cmc
pushl
popf
push
movb
pushl
ret
xor
stc
xor
test
xor
cmp
xor
call
cmp
xor
cmc
stc
xor
jmp
jmp
pop
or
stos
fimull
mov
adc
das
gs
xchg
cmpsl
in
xchg
xchg
neg
or
cmp
inc
sub
je
xchg
hlt
int3
xchg
mov
xor
out
add
test
cwtl
addr16
cwtl
test
repnz
sbb
xlat
sub
push
testl
cmp
dec
pop
enter
pop
mov
mov
sbb
mov
movsb
jge
add
sub
mov
add
pop
push
mov
jne
mov
into
popa
xchg
addr16
sub
add
cmp
out
in
push
mov
jle
testl
inc
int
cmp
or
or
mov
mov
push
or
pop
and
cmpsl
lock
insb
pop
cmp
and
push
ljmp
cltd
movsb
gs
lea
cmp
rolb
xlat
xor
mov
adc
xchg
adc
mov
add
je
lods
test
lret
jle
jl
jp
mov
imul
ret
sti
movsl
sbb
push
inc
fistps
mov
stos
test
stos
out
cmp
jge
out
into
mov
pop
sbb
adc
dec
sbb
jl
pop
push
and
xchg
mov
rol
jmp
movsb
add
xor
aas
sub
add
adc
mov
lods
out
xchg
jp
pop
xor
mov
repz
ja
fwait
pop
packsswb
out
shll
sbb
pop
icebp
lcall
fisubrs
pop
pop
sbb
fcmovnu
sti
xchg
and
push
mov
je
clc
dec
sahf
scas
out
sub
and
or
outsl
pop
pop
push
dec
adc
add
repz
std
ss
gs
fbld
stos
lret
fistl
fcoml
lea
daa
jg
lahf
das
outsl
jne
jp
movsb
add
insb
js
pop
std
ss
imul
adc
mov
dec
test
shrb
nop
mov
sbb
je
push
js
push
sbb
and
scas
jbe
dec
mov
cmpsl
sbbl
push
jb
sub
jo
xchg
inc
and
jbe
pushf
push
push
movb
lea
jmp
push
push
pusha
push
lea
jmp
mov
or
push
punpcklbw
mov
jbe
jl
insl
inc
enter
jmp
movaps
cmp
addb
insb
inc
xchg
fsubr
inc
add
popa
dec
push
int
mov
lea
jl
mov
popa
ficomps
jl
rcl
xchg
pop
mov
fidivl
lret
sbbl
and
cmp
roll
pop
or
xchg
fcomps
fidivs
sub
gs
xor
lret
hlt
sbb
sub
lcall
add
mov
ja
sahf
cmp
popa
mov
xor
mov
push
mov
xor
jmp
xorl
stc
clc
xor
cmc
test
pushl
popf
pushf
pushl
ret
push
mov
pushf
popl
push
movw
xor
pushf
xor
stc
xor
pushf
xor
test
cmp
xor
jmp
jmp
movl
pusha
call
xor
clc
stc
xor
pushf
test
xor
clc
xor
test
bt
xorl
clc
pusha
xor
clc
pushl
popf
pushf
mov
pushl
ret
jmp
pushf
popl
pushf
cmp
xor
test
xor
push
test
xor
cmp
xor
pushf
xor
stc
test
xor
jmp
pusha
xor
cmp
xor
pushf
xor
push
xor
bt
xorl
movb
stc
pushl
popf
movb
pushl
ret
pop
add
arpl
push
mov
call
sub
out
cmp
jb
sbb
inc
sub
sub
adc
cwtl
cmp
jae
push
sahf
aas
repz
mov
inc
push
test
mov
and
sub
dec
aaa
ja
int3
clc
mov
testb
inc
lock
pop
sub
ja
rorl
popf
arpl
xlat
xacquire
addb
sbb
negb
faddl
push
lret
push
mov
adc
negl
jnp
dec
gs
push
test
and
dec
scas
add
push
movl
pushf
movl
pusha
pushf
pusha
lea
jmp
clc
xor
clc
xor
cmp
clc
xor
cmc
xor
push
xor
stc
clc
pushl
popf
pusha
push
pushl
ret
jge
fistl
arpl
jmp
xchg
mov
testb
rorb
lcall
cmpsl
jp
rol
mov
or
mov
add
and
pop
and
mov
jl
gs
mov
leave
loop
ret
push
push
divl
and
sub
ss
sub
fs
jmp
and
mov
and
adc
pop
mov
sub
or
pop
dec
sub
clc
mov
dec
leave
add
inc
xorb
ss
xchg
cmp
nop
and
lods
dec
aas
cltd
push
jecxz
out
out
jl
dec
or
scas
mov
lret
movsl
ffreep
cmpsb
pop
cwtl
xchg
int3
fstpl
jae
addb
sarb
xor
mov
lock
aaa
jge
sbb
loope
pop
pop
jecxz
xor
xor
inc
cmp
das
clc
addr16
int
ljmp
jecxz
push
xor
pop
push
insb
ds
push
cmp
jge
dec
imull
fisttpll
fisubrs
mov
das
cmp
cmpsl
fsubrs
xor
imul
and
pop
xchg
push
repnz
loope
pop
sbb
pop
cmpsl
mov
inc
jae
int
jae
call
pusha
movl
lea
jbe
pushf
movl
pusha
lea
jmp
pushf
jmp
xor
cmc
xor
clc
xor
jmp
movl
push
movb
movl
push
push
push
lea
jmp
call
cmp
xor
clc
bt
xor
pusha
call
pushf
pushf
popl
jmp
mov
bts
push
ficomps
into
xchg
fiaddl
push
push
push
ficompl
adc
lcall
in
mov
sbbb
xchg
or
mov
xchg
fs
and
test
mov
jno
pop
add
movsb
or
or
clc
mov
cs
imul
out
inc
std
push
pop
mov
mov
mov
popa
out
mov
jne
pop
popf
mov
mov
xchg
in
aam
shll
aam
lcall
cmp
push
mov
in
adc
fmul
jle
addb
shlb
out
or
loope
out
pop
sbb
lret
fucomip
imul
xor
jmp
cmp
test
mov
cmpsb
outsb
inc
je
push
add
pop
fsts
adc
sbbb
inc
xor
jno
inc
and
scas
ret
mov
ljmp
nop
stc
sbb
pop
ficoms
xchg
jb
pop
ja
inc
add
shll
or
jne
cmp
xchg
cwtl
ja
push
ret
sbb
mov
shl
iret
jne
xor
ja
mov
into
cmpl
in
inc
fadd
add
adc
lds
aam
test
jmp
xorl
cmc
xor
pushl
xor
pusha
xor
movb
cmc
xor
cmc
xor
cmp
pushl
popf
push
mov
pushl
ret
jmp
mov
dec
sahf
adc
cwtl
aas
mov
jle
add
mov
addr16
push
adc
fwait
lods
or
jl
in
idivb
pop
leave
fiaddl
jne
mov
push
data16
adc
stc
or
pop
stos
push
lret
sub
int3
add
sub
insb
xchg
popl
xor
xlat
xchg
and
aam
pop
hlt
pop
and
out
adc
cli
or
xchg
and
clc
xorl
bt
pusha
xor
pusha
xor
jmp
xorl
cmc
pushf
pushl
popf
pusha
pushl
ret
lods
pop
or
mov
sbb
mov
pop
xchg
jnp
inc
js
pop
mov
test
bound
inc
mov
test
pop
xchg
adc
cmp
push
imul
push
cmp
fcoms
insl
fwait
lret
out
int3
pop
rorb
cmp
ds
mov
in
mov
xchg
sbb
rcll
int3
pop
es
daa
sahf
loopne
cmp
xchg
cmp
and
mov
jmp
jl
push
mov
out
mov
les
adc
icebp
rolb
or
pop
mov
and
adc
cmp
addr16
mov
fiaddl
and
popf
jne
in
push
imul
scas
insb
lahf
lea
sti
stos
sahf
mov
xchg
xchg
pop
dec
push
leave
lret
mov
int3
pop
clc
jb
pop
loopne
cmp
xor
pop
mov
test
enter
ret
data16
fistps
lea
add
inc
inc
mov
lods
repz
aas
je
xchg
sub
lahf
mov
mov
inc
call
imul
repnz
gs
pop
movsl
pop
out
sbb
mov
push
cmp
mov
adc
punpcklbw
lods
clc
dec
aam
jmp
ljmp
mov
subb
add
gs
outsl
or
in
fiaddl
cmp
push
push
aas
scas
insb
rol
ret
leave
push
movl
pushf
pusha
pushf
movl
movw
lea
jmp
pusha
movl
pusha
movl
movw
pushf
lea
jmp
icebp
jmp
fldcw
or
pop
ss
push
inc
jne
ja
mov
dec
mov
pop
xchg
insb
adc
bound
ss
jbe
or
or
or
jg
cmp
shl
push
or
pop
shlb
loop
adc
xchg
inc
jle
sub
sarl
mov
lret
mov
xor
mov
pop
aas
out
pop
or
mov
jl
cli
ss
movsb
insl
or
jae
add
jmp
movb
xor
jmp
xor
test
stc
xor
jmp
nop
mov
pop
mov
push
cmp
cld
pop
sub
push
xor
or
pop
scas
pop
shlb
insl
in
xor
mov
jb
inc
jg
fs
dec
cmpxchg
enter
jle
cmc
adc
cmpsb
ret
insb
add
jmp
pop
sub
dec
mov
xlat
aas
pop
dec
mov
mov
imul
pop
les
jge
nop
add
push
mov
enter
in
test
pop
push
lea
push
lds
push
das
int
stc
mov
andl
push
es
fstps
rcll
mov
insl
jle
inc
inc
out
stos
test
data16
mov
shlb
push
cmpsl
pop
mov
clc
dec
gs
shll
jns
idiv
jnp
xchg
out
sbb
and
add
push
dec
mov
ss
fwait
push
mov
mov
sbb
pushf
popl
jmp
cmp
or
lds
mov
int3
pop
dec
sub
mov
es
loopne
scas
loop
cmp
jno
movsb
je
ljmp
xlat
jg
fldcw
test
jnp
inc
daa
add
mov
andl
mov
mov
inc
and
push
in
adc
xor
pop
fcmove
cwtl
jle
xchg
or
sahf
loopne
cmp
in
test
pushf
ficomps
lea
lret
enter
fsubrs
inc
sbb
call
mov
movb
mov
icebp
icebp
pop
mov
mov
inc
sub
mov
adc
ds
fsubrs
add
mov
insb
ds
fildl
xlat
push
out
je
adc
arpl
lahf
call
cmp
aas
pop
jnp
cmpsb
mov
cld
push
xchg
adc
test
cli
pinsrw
lods
push
or
or
out
mov
ret
leave
adc
lea
clc
rcrb
dec
pop
push
lahf
aaa
aaa
jle
jnp
cmpl
add
cmp
mov
jae
mov
fmul
fwait
sbb
fs
ds
stos
push
add
pop
push
jnp
or
bound
cmc
mov
add
in
mov
mov
mov
sub
bound
dec
jne
inc
mov
mov
mov
adc
cmpsl
mov
sbb
xor
push
sub
pop
lcall
or
pop
mov
movsb
jge
arpl
and
lcall
sub
scas
imul
dec
stos
pop
pop
fstpl
push
sub
dec
packuswb
push
mov
loopne
dec
xor
cmp
lods
outsl
or
push
ret
cmpsl
das
cltd
jns
jnp
sub
dec
inc
xchg
cltd
push
add
jl
pop
or
jnp
mov
add
fldl
gs
rcr
pop
std
and
repnz
jg
cmpsl
pushf
pusha
movl
mov
push
pushf
mov
lea
jmp
mov
xor
cmc
pusha
xor
pushl
xor
clc
xorl
clc
xor
stc
xor
call
push
lock
std
std
mov
xchg
imul
push
jo
push
sbb
mov
pop
mov
ja
mov
jnp
in
sub
pop
and
aam
push
lds
out
aam
adc
test
int
and
into
mov
inc
push
scas
xchg
in
xchg
push
scas
fs
xchg
or
jl
fisttpll
add
into
fistps
jmp
pushf
movl
mov
lea
jmp
xor
cmp
xor
cmp
mov
xor
pushf
jmp
movl
movb
movl
push
lea
jmp
push
movl
pushf
popl
call
loopne
jle
push
push
inc
daa
in
dec
pop
fsub
and
xchg
inc
popf
and
pop
loop
jns
stc
lods
stos
call
xchg
test
pop
lock
aam
stos
jo
lahf
push
jle
and
sub
test
xor
adc
pop
push
or
inc
ret
mov
ljmp
inc
mov
pop
cs
push
cmp
sub
pop
sbb
cs
enter
push
push
push
call
sbb
push
ja
imul
jbe
notb
divb
sub
and
or
pop
adc
das
pop
adc
sbb
addr16
pop
and
popf
shll
sub
cmp
gs
and
inc
imul
cmp
scas
repz
and
mov
mov
mov
xchg
cmc
adc
xor
bt
pushl
popf
pushf
pushl
ret
xor
pusha
xor
test
xor
mov
clc
xor
pushf
stc
xor
clc
test
pushl
popf
push
mov
pushl
ret
xor
jmp
movl
pushf
movl
pushf
lea
jmp
movl
jmp
push
push
pusha
movl
jmp
movl
movl
lea
jmp
movl
mov
movl
push
pushf
push
lea
jmp
call
jg
in
adc
sbb
sub
stc
call
pusha
and
pop
sbb
push
jmp
lsl
inc
dec
mov
xor
popl
iret
mov
inc
shrb
movsl
cmpsl
sub
xchg
or
in
fists
xchg
xor
movsl
cmp
mov
out
jmp
push
wbinvd
aaa
test
fwait
arpl
and
dec
cmp
add
jecxz
xor
dec
les
dec
xor
sti
inc
loop
movsb
adc
repz
inc
sbb
inc
in
xor
loop
push
pop
ja
push
shr
pusha
pushf
movl
movl
pusha
jmp
call
pushf
movl
call
jmp
call
push
pusha
call
fs
lahf
jb
jle
into
insl
dec
fbstp
lahf
sub
pop
icebp
ljmp
xor
imul
dec
sahf
and
push
ljmp
sbb
in
fmul
mov
into
lds
in
or
ret
fiaddl
dec
xchg
jp
ja
out
in
stos
push
xchg
mov
jle
mov
inc
jno
jg
dec
in
shrl
out
adc
js
icebp
ret
outsl
outsl
add
in
mov
mov
and
das
dec
add
mov
lcall
pop
pop
aas
insb
pop
cwtl
xchg
insl
xchg
ljmp
fisttpl
cmpsb
fmull
fistpll
into
in
leave
cwtl
pop
into
iret
pop
mov
leave
mov
inc
dec
sbb
or
test
loopne
sarl
pop
mov
movsb
jp
outsb
mov
push
mov
in
out
mov
stos
outsl
xchg
movl
jno
in
cmp
hlt
pop
xor
mov
dec
mov
pop
scas
jno
push
jle
cmp
in
les
push
in
sub
lret
sub
ds
jmp
mov
dec
push
pop
fisttpll
add
cwtl
pop
jne
xchg
rclb
xor
mov
lcall
xorb
data16
dec
fistpll
mov
sbb
popf
inc
jg
mov
push
inc
test
dec
jns
loope
jle
pop
test
cli
cmp
rcll
shrl
dec
push
pop
lret
inc
mov
xchg
call
dec
jp
jp
adc
inc
ja
out
xor
jb
popf
inc
pop
into
adc
push
cmp
push
cmp
pop
xchg
xchg
add
aaa
pop
mov
out
dec
in
insb
cwtl
leave
add
inc
shlb
rolb
daa
lock
sub
bound
and
loope
subl
mov
sub
xchg
push
fbstp
mov
pop
inc
pop
mov
adc
mov
inc
fcmovu
mov
orb
mov
jno
sub
jnp
scas
push
jo
add
or
inc
lret
and
mov
xchg
shlb
xor
mov
dec
aad
jae
nop
sbb
out
push
cli
xorl
pushf
xor
call
pusha
jmp
movl
push
pushl
lea
jmp
movb
movl
movl
movw
movb
pushf
lea
jmp
jmp
call
jmp
xor
push
pusha
xor
stc
xor
clc
xor
push
xor
cmp
stc
xorl
movb
xor
cmc
xor
mov
pushl
popf
push
pushl
ret
xor
push
xor
movb
xor
bt
xor
cmc
pushl
popf
pushl
pushl
ret
xchg
inc
insl
jne
dec
mov
movb
inc
faddp
inc
fwait
rclb
xchg
jg
mov
sahf
push
xor
adc
cld
repz
cltd
test
jnp
pop
xchg
lods
xor
lock
std
sub
std
pop
push
jl
xchg
je
mov
cmpsb
rcl
lea
repnz
sbb
mov
repz
fdiv
sbb
in
mov
pushf
iret
arpl
sub
add
inc
cmp
or
data16
cmp
cli
pop
mov
pop
push
out
rol
pop
sub
mov
scas
test
fisubrs
movsl
inc
sahf
mov
incl
lods
dec
test
ds
fucomp
lahf
lret
test
jb
xor
sarb
jl
loop
movsl
shll
jno
jne
xor
pop
enter
ret
and
flds
sahf
out
cmpsl
lds
dec
push
fidivrs
xchg
xor
das
or
fcomi
aas
add
mov
adc
mov
mov
insb
cmp
lret
add
inc
and
pop
movsb
inc
pusha
pushf
mov
pushf
pushf
movl
push
pushl
movb
lea
jmp
mov
xor
clc
xor
call
imul
or
push
lahf
mov
cmp
int
je
fisttpll
out
xor
cmp
push
mov
dec
mov
sub
xchg
fistl
dec
inc
cmp
mov
xchg
inc
jle,pt
pop
pop
jne
int3
data16
jb
xor
arpl
sub
mov
loope
outsb
fistps
xchg
icebp
xchg
stos
xchg
or
xorl
in
addb
mov
dec
xchg
adc
mov
or
in
dec
cmp
lret
xchg
cli
ja
dec
xor
pop
adc
xchg
add
sbb
cmp
adcb
pop
mov
pushw
shlb
js
mov
sbb
xchg
xchg
mov
iret
inc
jmp
test
ljmp
lahf
repz
mov
push
xchg
pop
dec
mov
mov
inc
add
sub
inc
adc
mov
adc
xchg
inc
sub
cli
or
sub
daa
cld
mov
push
jecxz
scas
push
jae
repz
dec
push
movb
xor
call
pusha
pushf
popl
call
and
sub
jge
jge
mov
mov
aad
out
fdivrl
cli
jo
scas
adc
test
sub
pop
cltd
in
movsl
push
sub
leave
out
rclb
and
sbb
out
dec
inc
das
movsb
out
jmp
pop
mov
sbb
int3
mov
add
xchg
push
sub
and
fldenv
sbb
out
mov
mov
cmpl
fiaddl
mov
pusha
and
lods
xchg
jae
mov
in
bound
lret
popa
push
inc
call
into
shlb
push
adc
setnp
aad
shrl
outsb
loop
int
sub
outsb
xor
mov
mov
mov
addl
aam
lahf
lea
mov
sub
lods
scas
test
push
sub
inc
pop
mov
mov
adc
jmp
pop
nop
cwtl
fisubl
xlat
push
addr16
adc
fstps
cli
sahf
fdiv
sub
inc
daa
jnp
jnp
pop
sub
into
adc
sub
les
fwait
cmp
sub
adc
adc
sbb
popl
clc
mov
xorl
pusha
call
push
pushf
popl
stc
xor
jmp
stc
xor
push
sbb
sub
cmp
or
or
outsl
xlat
jae
sub
adc
sbb
cs
adc
cltd
adc
pop
xor
stos
inc
test
test
push
push
add
mov
inc
or
lea
and
mov
or
mov
sub
cmp
xor
xchg
mov
or
sbb
nop
mov
mov
sub
cmpsl
fistl
hlt
repz
xchg
xchg
mov
std
sbb
fisubs
out
sub
pop
lea
aad
test
inc
ja
adc
mov
lods
push
dec
push
push
push
xlat
test
dec
adc
mov
outsl
cmp
ret
sbb
jle
imul
jge
jecxz
stc
xlat
pop
ficoml
subl
rorb
mov
mov
scas
popf
aam
imul
aas
int
fadds
or
add
mov
out
xor
test
xorl
movb
test
xor
clc
xor
pusha
xor
bt
pushl
popf
movb
pushl
ret
pusha
movl
jmp
or
int
sbb
scas
mov
sbb
jg
sub
cmp
dec
inc
and
lcall
sub
mov
lds
mov
std
or
and
pop
xor
inc
push
push
mov
icebp
in
sub
jnp
icebp
lret
xlat
shrl
push
sub
add
ret
loope
cmovns
jge
in
push
mov
xchg
lcall
xor
add
or
repnz
mov
pop
adc
fists
mov
test
addr16
jmp
aad
imul
cli
loop
push
jecxz
movsl
or
pop
jbe
addr16
xchg
dec
push
mov
cmovp
jnp
mov
orl
fwait
je
mov
cs
leave
jg
sbb
sub
ds
mov
pop
stc
dec
xor
aaa
cli
fidivrs
ret
jns
daa
fwait
pop
pop
iret
aad
cmp
push
out
mov
int3
aam
add
xchg
into
lods
in
add
jno
lcall
push
iret
cmpsb
cltd
sbb
cltd
fsub
push
dec
adc
movsl
and
cmpsb
or
int3
ds
push
xor
call
movl
jmp
fs
jge
dec
or
incl
or
pop
popf
pop
jb
clc
sbb
lds
pop
sub
and
xor
mov
test
pushf
int3
andl
mov
push
gs
xor
jae
popf
xchg
add
push
movl
jmp
pushf
jmp
lods
aad
fs
mov
adc
fs
xchg
shrl
inc
mov
repz
mov
add
and
test
mov
repz
or
xor
jmp
pushl
popf
mov
pushf
pushl
ret
pushl
popf
movl
push
pushl
ret
adc
cs
adc
mov
xchg
mov
dec
pop
jbe
out
jb
sti
xchg
xlat
xchg
fisttpl
xor
push
rolb
mov
mov
or
adc
outsl
add
fsubrl
push
mov
jecxz
fcmovne
pop
xchg
out
stos
iret
lods
dec
cmp
enter
xor
xchg
scas
adc
shll
data16
cmpsl
dec
push
icebp
mov
popf
popf
rcll
into
cmpsb
fmuls
xchg
mov
xchg
movsl
pop
ret
fcmovbe
daa
andl
leave
cs
adc
shr
ss
mov
inc
outsb
sub
pushl
std
jl
adc
mov
fs
push
icebp
dec
adc
and
adc
lea
orl
gs
enter
pop
loope
roll
mov
dec
adc
jmp
jp
mov
mov
ja
lods
mov
push
and
inc
js
lds
andl
mov
repz
imul
fwait
addr16
sbb
jnp
push
jb
test
loope
nop
add
in
ret
dec
mov
sbb
cld
jae
mov
jp
mov
xor
ja
cmp
fnsave
shll
repnz
repz
js
je
shrb
jecxz
or
jg
je
mov
lds
andl
and
jnp
pop
bound
xorl
mov
sub
loope
stos
sbb
inc
clc
in
lods
mov
cmp
add
xchg
xchg
mov
sbb
pop
add
cmp
mov
ret
push
cltd
fwait
cmpsb
mov
xor
jg
cmpsl
jmp
aaa
sbb
jae
out
std
fcoml
ret
push
scas
fstps
cmp
lret
mov
push
lock
loopne
mov
popf
mov
push
std
and
dec
xchg
xor
adc
or
jecxz
mov
bound
pop
mov
pop
and
mov
mov
ficompl
jg
add
int3
std
xchg
push
pop
sahf
push
sub
lods
xchg
or
mov
mov
push
rolb
fiadds
orl
repnz
pop
ret
mov
ja
sahf
mov
inc
xchg
pop
outsb
movsl
inc
adc
add
daa
andl
mov
mov
insb
mov
inc
mov
mov
and
sarb
cmp
stc
and
shr
testl
mov
and
jg
movsl
cmc
mov
lret
pushf
cmc
pusha
cmp
loop
xchg
out
adc
xor
aas
xor
sarl
sub
insb
dec
cmp
pushf
pop
out
das
sti
push
push
ja
mov
lret
cmpsl
fisttpll
not
nop
push
push
mov
loopne
xchg
ss
mov
lret
popf
into
pop
mov
dec
inc
sahf
ja
sub
pop
js
cmp
add
repz
clc
xor
jle
cmc
dec
xchg
sahf
jl
xor
pop
mov
or
mov
xor
xor
arpl
mov
push
imul
or
mov
xlat
movsl
pushl
mov
lcall
mov
das
js
push
jg
fwait
sbb
test
mov
pusha
inc
xor
out
test
out
adc
imul
ret
or
shlb
adc
into
mov
xchg
jl
dec
or
jl
ljmp
push
cmp
fld
ret
mov
fidivl
cmpl
add
subl
push
push
or
call
pushf
movb
pushf
popl
test
test
xor
cmp
xor
push
bt
xor
pushf
xorl
call
pushf
pusha
pushf
popl
cmp
xor
call
stc
aam
mov
cmpsb
and
and
aaa
lds
push
and
mov
push
cmp
xchg
sub
pop
out
jns
sub
jnp
aaa
mov
sbb
stos
xor
or
jb
dec
push
pop
xchg
lahf
and
ret
fiaddl
aaa
ss
mov
and
cmpsb
in
int
call
loopne
ret
jae
xcrypt-cfb
cmpsl
daa
jno,pn
js
insb
xor
popf
jl
jno
mov
mov
xorl
stc
xor
bt
xor
cmc
cmc
xor
jmp
xorl
bt
pushf
xor
clc
clc
xor
cmp
bt
pushl
popf
push
pushl
ret
pushf
movl
movw
mov
lea
jmp
xor
movb
pushl
popf
movw
mov
pushl
ret
movl
pushf
pusha
pushf
movl
pusha
pushl
mov
lea
jmp
pusha
movl
pusha
push
movl
pushl
lea
jnp
push
pushf
pusha
pushf
lea
jmp
movl
jmp
jmp
dec
cmp
xchg
jnp
test
cs
xor
iret
xor
int3
push
out
cmp
andl
mov
mov
andl
xchg
clc
xor
sub
fsubrl
ret
es
daa
push
fcompl
xchg
pop
mov
sub
dec
mov
inc
jb
popa
mov
mov
mov
das
jmp
mov
je
cmc
pushl
popf
pushf
pushl
ret
call
xor
bt
xor
jmp
mov
pushf
popl
call
push
movl
push
pushl
lea
jmp
push
pusha
pushf
movl
jmp
and
jnp
or
aam
fldenv
lods
and
xchg
mov
cld
or
xor
cld
xchg
xlat
mul
insl
dec
add
fdivrl
popf
fcomip
cmp
clc
ss
push
bound
push
xor
cmp
lock
add
mov
inc
andl
pop
pop
dec
cmp
jl
mov
das
inc
lcall
pushl
xor
adc
icebp
jnp
cmp
sub
jae
in
bound
adc
adc
push
daa
pop
popf
es
pop
and
cmpsl
mov
mov
push
out
or
mov
leave
push
std
xchg
stos
stos
and
push
jbe
scas
or
inc
mov
sub
leave
jno
cmp
aam
jbe
addr16
fiaddl
add
add
adc
pop
outsl
repz
jns
dec
mov
ds
aad
insb
xlat
mov
ror
add
cmpsb
mov
leave
inc
push
rorb
int
mull
lret
add
sbb
cs
aad
mov
les
bound
mov
sbbl
sahf
repnz
lahf
sub
movl
pusha
movl
mov
lea
jmp
xor
call
push
mov
push
add
xchg
inc
out
jo
in
jg
and
fbld
nop
lret
cmp
xchg
push
test
jns
dec
xchg
popa
int3
or
sahf
push
mov
rcll
add
pop
or
mov
pop
fisttpll
xor
dec
xor
iret
ljmp
imul
mov
xor
push
les
sbb
ja
test
add
mov
lret
popa
push
push
sti
pop
mov
and
adc
xor
nop
mov
push
cmp
lret
push
cld
call
iret
outsl
jmp
je
cmp
adc
shrb
shll
dec
add
into
mov
sbb
fisttpll
xor
insl
push
push
pusha
cmp
xor
push
cltd
dec
inc
test
pop
test
jbe
outsb
xchg
pop
fdivrs
test
int
push
or
or
je
mov
and
mov
mov
loop
out
adc
cmpsb
cmp
adc
add
push
dec
mov
repz
lods
out
stos
popf
js
jp
dec
mov
pop
jns
mov
imul
xchg
je
or
stos
jo
sub
lret
and
adc
and
leave
mov
push
cmp
inc
pop
test
enter
dec
jb
sahf
mov
xchg
pop
inc
subl
push
fcoms
xor
das
mov
xchg
ja
mov
jne
jle
push
loope
add
out
mov
mov
rep
mov
xchg
hlt
jle
mov
pop
mov
mov
ret
xchg
cli
imul
mov
mov
lret
aam
ja
subb
mov
sbb
sub
mov
jns
mov
incb
push
pop
in
pop
add
pop
and
outsb
or
sarl
lock
movsl
in
addl
or
push
in
icebp
cmc
jle
shr
mov
shlb
push
popl
lds
shrl
xor
rcr
pushf
cmc
push
lret
lock
inc
bound
mov
pop
mov
dec
pop
sbb
cmp
push
popa
mov
add
dec
pop
or
xchg
fidivs
push
cmc
rorl
push
jbe
dec
fdivr
sub
nop
cmp
call
mov
test
inc
sub
lret
pop
add
and
push
icebp
in
cwtl
or
mov
outsl
rcrl
popa
jecxz
movsl
stos
and
sub
and
rclb
mov
je
mov
xlat
lds
dec
or
xchg
mov
sar
fcmovu
mov
or
in
adc
stos
pushl
popf
movb
pushl
ret
xor
clc
xor
call
pushf
movl
movl
jl
pusha
push
movl
movb
pusha
lea
jmp
jns
outsb
mov
dec
loop
addl
das
es
dec
ljmp
xchg
cmp
mov
mov
mov
mov
xchg
lods
mov
mov
xlat
sbbl
insl
push
pushf
mov
addb
xchg
mov
ret
add
push
movsb
pop
push
stc
adc
mov
js
dec
push
jno
mov
or
into
dec
stos
mov
adcw
lock
adc
or
xchg
mov
test
xchg
jno
mov
xor
jge
stc
cmpsl
add
imul
in
pop
cli
jmp
push
std
jno
dec
loop
rcr
xchg
sbb
lods
and
xor
cmp
sub
ss
mov
les
add
dec
push
mov
mov
inc
daa
dec
outsb
add
ss
sahf
mov
test
push
and
and
out
out
movsl
jl
mov
xor
xchg
mov
inc
mov
pushf
jnp
jg
sbb
or
arpl
cwtl
sbb
inc
adc
push
insl
jle
sub
inc
mov
sub
faddp
mov
inc
mov
ss
pop
or
div
clc
loopne
in
fstpl
imul
mov
pop
mov
jge
add
outsb
adc
insl
imul
push
xlat
loopne
cmp
sbb
scas
pop
mov
or
adc
lods
and
mov
movsl
add
adc
mov
dec
gs
sbb
inc
add
test
jb
nop
int3
lock
pop
mov
xor
aad
call
pop
std
std
xorl
ret
jne
sti
cmp
leave
mov
mov
pop
push
ss
pop
dec
cld
cmp
adc
dec
adc
add
in
shrl
adc
test
lea
add
jmp
out
aam
cmp
int
mov
mov
sbb
dec
pushf
popl
stc
push
xor
cmc
pushf
xor
pushf
cmc
xor
pushf
xor
bt
push
xor
pusha
xor
test
call
push
movb
pushf
popl
stc
xor
pushf
push
xor
bt
xor
jmp
xor
cmp
xor
test
xor
push
pushl
popf
mov
pushl
ret
pushf
popl
pusha
xor
stc
call
xor
pushf
xor
pushf
pushl
popf
mov
pushl
ret
aaa
das
push
mov
dec
call
std
and
mov
sbb
sbb
pop
mov
inc
movsb
stos
loope
xchg
xor
jp
scas
scas
cld
sti
sub
pop
int
ficoms
sahf
pusha
cmp
push
xor
cmc
pop
push
cmp
or
or
loope
pop
fs
sbb
sbb
dec
jbe
inc
mov
xchg
inc
fwait
or
push
lods
cmp
pop
add
fistpl
sti
dec
or
sub
xchg
das
jae
sub
outsl
mov
popa
cli
mov
push
lds
mov
pusha
sub
adc
cmp
test
push
adc
popf
mov
out
lods
push
repz
xor
jb
repnz
into
fistps
arpl
xor
jmp
lret
mov
dec
lret
sbb
inc
push
rorl
mov
sbb
rorb
cmc
je
jns
pop
cmpsl
enter
ljmp
add
mov
imul
push
outsb
jg
cmp
int
mov
stos
ja
cmp
lock
inc
clc
stos
and
fsubr
into
movsb
imul
arpl
scas
xchg
push
lea
sbbb
jb
scas
mov
add
push
pop
add
add
or
sub
aam
sub
inc
orb
test
cmp
ja
data16
ljmp
xor
sub
loop
push
insl
mov
pop
pop
call
mov
sbb
and
sub
pop
dec
enter
pop
clc
jl,pt
dec
sub
xchg
insl
cmp
arpl
add
cmp
pushf
movl
jmp
movl
pushf
pushf
lea
jmp
xor
call
pushf
movl
mov
movl
pushf
mov
pushf
mov
lea
jmp
fcompp
push
push
movl
pusha
movl
pushl
lea
jmp
pusha
mov
pushf
popl
pusha
test
xor
stc
jmp
jmp
push
movl
pushf
movl
pushl
pusha
push
jmp
add
xchg
mov
dec
mov
aas
adc
mov
or
leave
sbb
mov
cmp
lret
jno
cmpsl
push
aad
movsl
xlat
or
nop
shl
add
mov
pop
rolb
and
jae
inc
pop
stc
adc
mov
sarl
gs
xor
mov
mov
bswap
test
lock
mov
ljmp
push
add
rcrb
mov
xchg
dec
mov
shr
pop
mov
mov
push
iret
nop
mov
call
dec
or
push
leave
and
sahf
das
mov
ret
cmp
pusha
jp
jecxz
bound
flds
push
adc
fcoml
loop
fcomi
ljmp
xchg
out
iret
jp
outsl
push
js
mov
outsb
das
in
xchg
in
adc
push
sub
mov
jnp
test
stc
loop
and
and
mov
rcll
loope
pushl
push
pushf
xor
cld
pushl
popf
movb
pushl
ret
push
pusha
pushf
movl
call
pusha
pushf
popl
call
push
call
push
pusha
movl
pusha
pushf
movb
movl
mov
mov
movl
lea
jmp
jmp
pop
inc
jno
or
fiadds
pop
mov
mov
inc
pop
ss
icebp
jge
xchg
inc
shll
insb
js
les
cmp
pop
out
sub
clc
sbb
sbb
aaa
xchg
sbb
inc
sub
rcll
or
scas
push
push
push
daa
fsubs
and
push
jnp
mov
mov
xor
push
stos
das
push
add
int
lea
adc
rolb
ljmp
dec
push
out
add
jl
das
xor
pushf
pushf
xor
stc
pusha
xor
pushf
bt
xor
call
jmp
call
pop
xorb
or
movsl
xchg
adc
push
outsb
lods
repz
jmp
insb
popa
pop
rcll
js
and
mov
lret
lret
adc
jb
js
outsl
cli
xor
icebp
cld
out
add
lea
add
add
dec
add
jb
sti
lret
or
rcr
stos
jno
repnz
and
orb
out
push
popa
and
dec
xor
std
bound
adcl
vmptrld
in
mov
inc
rcll
push
push
add
mov
out
out
sub
shll
push
mov
fsubr
mov
mov
sbbb
add
xchg
mov
mov
mov
adc
adc
movsb
lcall
sti
rcr
movsb
movsb
popf
adc
push
add
mov
insb
cs
mov
add
cld
xchg
pushf
mov
movl
pushf
lea
jmp
call
jmp
movsb
mov
jge,pt
daa
hlt
adc
pop
shlb
push
ja
mov
ss
cmp
test
xchg
pop
and
push
pop
ss
xchg
jl
push
pop
bound
pushf
xchg
flds
push
cmc
sahf
incl
add
arpl
and
sti
call
push
pushf
pushf
popl
push
call
call
jmp
movl
call
call
pusha
call
pushf
pusha
pushf
popl
test
xor
stc
xor
cmc
xor
test
cmp
xor
pushf
jmp
movl
pushf
lea
jmp
lea
jp
pusha
pushf
movl
mov
lea
jmp
jmp
xor
dec
mov
cmp
lret
scas
dec
leave
jge
into
lcall
mov
cwtl
out
inc
push
xlat
mov
fildl
in
imul
push
enter
mov
mov
sti
cmp
and
cwtl
dec
xor
inc
fwait
jne
mov
shrl
int
mull
inc
push
ret
push
stc
insl
push
push
mov
inc
xchg
lea
mov
js
cmpsb
fwait
imul
adc
pop
fildl
lock
fnstenv
and
inc
rcr
adc
xlat
mov
add
repz
add
int
inc
xchg
or
lods
mov
addr16
dec
cmp
push
movsl
insl
mov
or
jl
aam
ret
and
jle
sub
xchg
lock
sahf
push
and
sub
scas
iret
mov
sub
xchg
or
and
lret
push
outsb
add
repnz
jne
mov
sub
imull
aad
cmpsl
jge
inc
inc
mov
mov
test
nop
ja
arpl
lret
test
les
mov
xchg
xchg
imul
pop
addr16
fs
ljmp
inc
inc
push
push
es
outsl
mov
push
ror
jmp
out
dec
inc
xchg
bound
inc
add
xor
sub
jp
pop
syscall
sub
in
xchg
setns
clc
in
shlb
js
outsb
sbbb
jle
pop
adc
cli
in
add
mov
stos
lea
inc
cwtl
mov
mov
xchg
push
adc
cwtl
push
dec
pop
xor
mov
stos
mov
cmpb
ds
rol
push
cld
mov
mov
jp
pop
inc
mov
or
fstl
mov
icebp
cld
jne
pop
jg
xchg
or
lods
orl
cmc
and
outsl
pop
js
int3
pop
in
dec
pop
int
xor
leave
repz
scas
jecxz
jo
sar
sti
pop
syscall
out
xchg
pop
add
xor
movsb
sbb
es
jge
imul
cli
pushf
lods
lods
dec
inc
inc
jmp
out
fs
popa
fsts
jl
and
xor
fwait
jl
aaa
adc
cmp
addr16
or
push
mov
xchg
pop
lahf
into
mov
or
mov
addr16
je
into
mov
push
bound
cmpl
and
or
icebp
icebp
fisubs
inc
fidivrl
stc
mov
mov
insb
test
lahf
aad
pop
mov
xchg
mov
mov
inc
or
add
inc
pusha
or
mov
insl
dec
sub
jmp
fs
stos
xor
mov
dec
mov
rolb
sbb
and
je
stos
sub
sbb
sub
adc
inc
imul
pop
add
out
sahf
int3
inc
test
xchg
or
push
data16
sarb
fdivrs
pusha
imul
add
pop
movsb
xchg
add
jle
jo
ds
stc
adc
test
dec
and
adc
cmp
jl
sbb
and
test
cmpsl
test
dec
pop
or
mov
call
xchg
enter
xor
mov
xor
and
test
inc
lret
scas
sub
into
push
xchg
xlat
into
ja
lods
lods
sbb
inc
jge
push
shrl
popa
adc
inc
cli
ss
outsl
clc
adc
fs
pushf
mov
lahf
mov
pop
fbld
xchg
xchg
scas
ret
scas
arpl
xchg
movsl
inc
std
cmc
adc
mov
aam
mov
test
fmull
insb
mov
jg
in
mov
mov
pop
push
push
and
push
dec
mov
jns
pop
cwtl
xor
rcrl
mov
pusha
movl
pushf
mov
lea
jmp
stc
xor
call
push
xor
jmp
call
cs
jno
or
add
cs
jnp
xorb
mov
xor
push
cltd
into
movsb
adc
cmp
daa
std
jbe
cmp
lods
push
and
jno
in
or
dec
pop
mov
out
jmp
sub
int3
dec
lret
nop
xor
mov
mov
jae
gs
pusha
dec
inc
mov
cmpsl
inc
pop
pop
hlt
adc
gs
ret
xchg
and
xchg
xor
bt
clc
xor
pusha
cmp
xor
mov
stc
xor
movb
stc
xor
bt
xor
stc
test
xor
clc
clc
pushl
popf
movb
pushl
ret
call
pushf
pushf
popl
pusha
cmc
xor
push
pusha
xor
cmp
xorl
pushf
jmp
pushf
xor
clc
mov
xor
cmp
xorl
jmp
push
movb
pushf
popl
clc
jmp
push
mov
pushf
movl
jmp
pushl
lea
jbe
push
push
pusha
pusha
lea
jmp
js
push
jmp
xor
bt
xor
clc
bt
xorl
clc
push
xor
pusha
xor
push
stc
xor
jmp
ljmp
mov
scas
lcall
xor
sbb
rcl
push
sub
imul
scas
sbb
push
push
pop
frstor
jno
lods
int
xor
fimull
pop
lods
scas
jmp
pop
add
and
in
xor
and
add
setae
dec
sub
loopne
sbb
ljmp
sbb
mov
shrb
movsl
xchg
push
jge
scas
adc
xchg
sahf
cmp
lcall
dec
mov
scas
ds
inc
inc
cmpsb
jecxz
movl
dec
aaa
jmp
pop
xor
push
pop
pop
mov
sub
push
add
sbb
jl
int
sahf
mov
dec
xchg
xor
arpl
jo
test
imul
cmp
mov
adc
lods
jmp
and
daa
stc
loopnew
setb
xlat
jecxz
pushf
push
pusha
movl
pushl
pushf
pushf
lea
jmp
xor
bt
stc
xor
pusha
stc
xor
clc
pushl
popf
push
movl
pushl
ret
pushf
movb
pushf
popl
stc
bt
xor
cmp
call
adc
mov
dec
sbb
fmuls
pop
enter
lods
imul
cmpsl
push
das
dec
les
mov
jns
fstpt
jno
add
push
sbb
mov
lcall
or
cltd
or
xor
lcall
stc
xor
fdivs
inc
jmp
mov
in
cmp
out
push
out
jbe
push
test
jecxz
mov
repz
ret
repz
sub
popa
incl
inc
call
movl
jmp
xorl
pusha
pusha
xor
push
call
jmp
xor
call
movl
movl
mov
pusha
lea
jmp
jecxz
inc
pushf
or
sub
dec
test
push
aam
pop
sarb
cmc
mov
push
movsb
jo
stos
das
fcoml
inc
xor
clc
imul
mov
mov
out
sbb
push
sub
movsb
dec
pop
pop
stc
mov
popa
pop
pushf
dec
and
sarl
sub
stos
pop
ds
mov
inc
in
aad
mov
enter
enter
mov
mov
add
popa
sub
test
lods
test
iret
aaa
call
pop
and
sbb
push
sbbl
pop
test
das
shl
call
add
adc
mov
jo
es
mov
es
sahf
push
fbld
sbb
insb
sub
cld
jne
or
mov
int
inc
mov
outsl
mov
sbb
fwait
pushf
roll
mov
test
bound
and
imulb
divb
aad
pop
iret
mov
andps
adc
mov
sub
inc
shll
jecxz
xchg
mov
sub
mov
fwait
fs
mov
cmp
movsl
jbe
pop
movsb
mov
int3
xchg
nop
rcl
insl
std
in
stc
xchg
mov
scas
insb
testl
jbe
in
das
jae
mov
fucomp
int
call
mov
dec
sub
lahf
and
loopne
dec
fdivrl
xchg
lsl
outsl
xchg
mov
stc
into
xor
sarl
subl
movsb
push
rcl
repnz
xchg
xor
outsb
sbb
cmp
cmc
fldt
test
and
cs
xchg
push
sbb
mov
add
addl
test
cltd
mov
fwait
subb
xorl
call
movl
push
pushl
pushf
lea
jmp
add
test
or
pop
add
xor
adc
mov
mov
pushf
xchg
jge
test
mov
shrb
inc
pop
cs
fwait
pop
adc
test
mov
mov
sahf
or
and
in
fcmovnbe
inc
cmp
xorb
inc
xchg
or
fcompl
pop
ficoms
pop
fwait
repnz
scas
mov
xor
adcl
add
mov
mov
jo
dec
push
push
je
mov
ret
cmc
repnz
mov
push
in
std
fwait
add
xor
push
in
jle
insb
mov
dec
adc
out
sahf
inc
mov
rorl
mov
cs
adc
cli
fisubrs
sti
test
mov
test
mov
test
pop
or
leave
aas
push
xor
xorb
add
xchg
fidivrs
and
add
int
mov
add
push
call
cmp
mov
dec
movsb
inc
mov
or
lcall
mov
mov
add
int3
stc
xchg
add
dec
pop
iret
popa
cmc
push
fwait
jbe
pop
sub
mov
push
sub
daa
fldt
jne
in
or
and
jns
and
cmp
pop
add
mov
repnz
fadd
add
mov
sahf
push
dec
mov
jne
outsl
or
mov
mov
mov
cmpsb
sbb
sub
fucom
stc
jmp
cmpsb
imul
or
adc
cli
jno
xchg
sbb
jmp
xor
jae
mov
sarl
hlt
enter
clc
mov
mov
movsb
dec
je
mov
pcmpgtw
aas
leave
push
ja
loope
jmp
xor
dec
inc
mov
sbb
out
in
enter
dec
sub
or
xchg
lods
mov
push
out
cs
js
pop
mov
data16
or
iret
clc
sbb
test
mov
pop
cmp
mov
mov
jle
stos
and
dec
jmp
test
add
push
jecxz
lds
cmp
mov
dec
inc
pop
push
sbb
pushf
popl
mov
call
call
movl
pushf
pushl
lea
jmp
push
pusha
jmp
pusha
pushf
popl
pusha
xor
clc
xor
call
pusha
movl
jmp
pushf
pushf
popl
call
pusha
pushf
popl
test
jmp
pusha
pusha
call
arpl
push
loope
add
pop
dec
arpl
daa
sbb
and
fwait
iret
out
inc
filds
cmp
push
xchg
loopne
lret
out
cs
sysexit
add
inc
aas
das
push
fwait
shlb
flds
and
jecxz
ja
sub
jmp
shlb
xchg
arpl
jne
dec
hlt
xor
add
cmpsb
gs
push
in
push
imul
movsl
lret
fcomi
xorl
cmpsb
roll
or
movl
movsl
push
cmpb
in
cs
cwtl
movb
int
adc
movsb
fs
fldcw
mov
or
mov
jge
lods
push
inc
test
jne
sbb
insl
mov
pop
xchg
sbb
lret
mov
leave
pop
mov
orl
ljmp
mov
xchg
clc
cld
mov
lods
xor
addr16
aad
ja
add
mov
inc
ret
shll
dec
xor
xor
and
cmp
mov
adc
stos
and
mov
pop
nop
rol
test
push
addb
fbstp
outsb
les
nop
cmp
xor
add
mov
pushf
ror
dec
pop
cmp
pushf
push
push
pop
pop
sbb
push
icebp
jle
push
jecxz
arpl
mov
repz
adc
adc
or
inc
mov
sbb
cmpsl
jle
std
in
mov
out
lcall
lock
cltd
cltd
mov
insb
xlat
lds
mov
adc
repz
dec
adc
je
mov
out
add
cmc
shlb
adc
out
mov
call
test
add
cmc
cli
sub
mov
mov
lds
add
cmc
push
or
mov
xlat
or
ret
jge
mov
les
scas
rcr
sub
push
cmp
jp
add
cmc
and
mov
cltd
cmp
add
xorb
pop
lock
les
pop
push
cmc
popf
sub
pop
add
hlt
mov
and
or
add
pusha
xor
test
call
push
lock
std
std
lea
insb
mov
nop
ja
dec
rol
int
sub
mov
pop
ss
test
std
jge
cltd
in
cwtl
dec
dec
imul
pop
push
movb
shrl
test
in
lahf
inc
add
add
pop
xchg
inc
push
push
in
xchg
push
imulb
insl
jnp
ret
xor
mov
jmp
sbb
inc
call
call
pusha
pushl
movl
movb
push
lea
jmp
pushf
pushl
popf
pushf
pushl
ret
xor
bt
xor
bt
jmp
addr16
imul
in
popf
inc
mov
lcall
dec
pushf
mov
in
pusha
fidivl
int
das
jno
arpl
xor
in
pop
les
mov
sbb
sahf
mov
repz
dec
xchg
lea
sbb
idivl
daa
repz
add
aaa
fidivrs
mov
clc
or
xor
enter
push
gs
sarl
pop
xchg
xchg
in
xor
add
push
pushl
in
pop
xchg
iret
pop
mov
adc
pushf
pop
push
push
cwtl
jp
mov
loope
or
or
and
pop
add
cld
push
aaa
or
cmc
sbb
mov
negb
ljmp
loopne
jp
imul
dec
push
into
ja
in
es
pop
or
fstpt
jbe
mov
fisttpll
loopne
lea
jl
test
in
adc
xchg
fisubs
inc
jb
adc
cmc
fstpt
xchg
pop
or
dec
imul
jmp
cmpsb
mov
jl
mov
popa
mov
clc
shll
mov
repz
mov
nop
test
in
movl
pushf
movl
pushl
movw
lea
jmp
cmp
xorl
pushl
xor
mov
test
xor
test
call
ds
cld
mov
sub
icebp
push
js
fimull
jb
sbb
push
inc
push
or
or
insb
push
xchg
or
call
pushf
pushf
popl
cmc
xor
cmp
xor
pushf
call
push
jmp
jne
xor
in
mov
lods
movsb
adc
xchg
push
cs
test
xor
mov
fwait
xchg
iret
out
shrb
dec
or
adc
out
shr
lock
stos
imul
data16
call
lcall
inc
jmp
loope
ja
mov
in
stos
mov
movsl
jae
inc
and
pop
mov
insb
and
jmp
sarb
out
push
mov
and
add
jl
jl
das
inc
or
dec
push
int
mov
inc
int
aad
sub
ffreep
cltd
jo
sti
stos
push
dec
add
leave
fidivs
std
inc
mov
inc
rcrl
js
lods
lcall
test
or
add
adc
sbb
xor
xchg
mov
push
popa
sbb
lods
rcrb
out
mov
cmc
je
lcall
push
clc
lods
je
cli
stos
inc
or
loope
mov
pop
xor
ljmp
test
xchg
lahf
and
mov
in
xchg
push
lcall
popa
out
ja
daa
mov
jp
mov
int
enter
jg
push
fldenv
fdivrl
and
inc
xchg
xchg
push
pop
sahf
mov
cmp
mov
call
mov
fcomp
outsb
aaa
sbb
jno
sbb
fs
sar
shr
lock
fnsave
pop
jmp
and
iret
ret
pop
lods
lds
add
dec
or
das
pusha
sbbl
popa
dec
daa
dec
aas
movsl
repz
adc
movsb
cmp
mov
imul
cld
and
fistps
push
or
sbb
fimull
push
cmc
aad
push
add
insb
jmp
xor
pushf
cmc
xor
clc
push
xor
pushf
pushl
popf
pushf
pushl
ret
pushf
xor
movl
xor
pusha
pushl
popf
movl
push
pushl
ret
pusha
pushf
popl
call
xorl
cmc
xor
test
stc
xor
cmc
pushf
xor
movb
xor
pushf
cmc
xor
movb
call
mov
arpl
ds
sbb
int3
and
mov
mov
leave
and
pusha
data16
dec
xchg
aam
inc
sbb
mov
xchg
or
or
ljmp
pop
aam
jp
push
sarl
or
test
and
and
push
dec
out
jnp
xchg
orb
fwait
gs
ljmp
les
and
ja
fstpt
jle
ret
cmpsl
iret
adc
stos
inc
or
fwait
cmc
fbld
sahf
mov
adc
dec
inc
nop
movl
push
lea
jmp
pushf
pushf
pusha
movl
call
mov
movsb
nop
testb
mov
mov
sbb
xchg
adc
in
xlat
ret
jae
cmpsb
fistpll
adc
fwait
sbb
jne
les
xchg
jae
jecxz
sub
pop
push
std
mov
je
enter
pushf
popl
clc
xor
test
mov
xor
test
call
call
out
loop
bound
stos
mov
out
int3
pop
and
jg
xchg
inc
scas
out
and
and
add
cs
fwait
jg
xchg
hlt
test
push
inc
movsl
cmp
add
adc
or
out
mov
mov
int3
movsl
cmpsb
dec
addb
iret
dec
dec
cltd
or
dec
pushf
jmp
sbb
lret
xor
and
and
cltd
mov
lret
in
pop
lret
ljmp
fwait
outsl
js
lock
mov
hlt
sbb
gs
push
push
mov
js
rcrb
add
adc
push
dec
addr16
or
rclb
lods
sbb
cmpsb
jmp
cmp
push
aaa
das
mov
pop
js
ret
jb
sbb
sub
jle
fldt
push
sbb
shll
xor
cmp
cmp
add
out
loopne
into
sbb
push
mov
add
jl
cmpsl
xchg
test
std
mov
and
xchg
js
mov
les
ret
decl
adc
das
scas
fdivrl
lret
sbb
sbb
mov
add
into
fistps
dec
xor
sbb
xor
fistpl
sbb
scas
add
pusha
dec
mov
mov
shll
dec
add
jbe
mov
cltd
pop
aaa
js
add
jbe
pop
mov
jb
repz
jge
enter
stos
fbld
test
rcll
and
adc
shll
mov
xchg
mov
and
and
in
or
mov
inc
add
and
hlt
das
mov
add
inc
mov
movl
pushf
lea
jmp
movl
pushf
movl
push
pushf
lea
jmp
xor
movb
xorl
stc
test
pushl
popf
push
push
pushl
ret
mov
movl
pop
pop
jno
shl
sarl
mov
mov
out
and
mov
xor
mov
ja
jne
js
repz
dec
and
push
and
idivb
dec
or
mov
mov
push
arpl
les
loop
and
sub
xchg
outsb
ficoms
sub
movsb
cmc
xchg
leave
jbe
std
add
lcall
dec
sti
fmulp
repnz
test
syscall
push
sub
into
mov
inc
add
in
jno
lods
or
scas
cmp
mov
mov
pushf
nop
xchg
pop
popf
in
mov
fprem
jne
xchg
das
outsb
sbbb
adc
push
sbb
in
adc
or
cmp
mov
mov
adc
and
xor
shll
mov
in
mov
mov
rcr
xchg
ror
fmul
pop
movsb
push
ficoms
cmpb
xor
shll
dec
aaa
bound
mov
aas
stc
inc
pusha
cmp
leave
mov
js
lcall
pop
mov
inc
fstps
or
inc
push
add
inc
out
adc
outsb
addr16
loopne
xchg
xchg
add
xorb
sub
push
fldcw
jl
cmpsl
inc
loopne
dec
sub
daa
sbb
add
pop
mov
jmp
mov
push
cmp
pmovmskb
xchg
lods
mov
sarl
add
int
lods
or
mov
jle
lea
inc
dec
xchg
or
pop
js
mov
add
adc
pop
push
jg
je
and
fwait
push
stos
jns
jp
jge
sub
stos
add
xorl
mov
jl
cwtl
std
addr16
imul
fs
stc
mov
jno
outsb
inc
sbb
inc
adc
dec
mov
sub
mov
sbb
aam
sarl
and
and
imulb
add
addr16
clc
dec
pop
pushf
add
pusha
xor
jne
cmp
xchg
mov
jmp
sub
shr
cmpsb
loope
add
dec
movsb
call
mov
xor
xchg
push
push
dec
or
das
lods
ret
sub
mov
lock
insb
les
jns
jmp
stos
addr16
jl
mov
pop
loope
jb
sub
mov
inc
cmpl
dec
dec
lea
cli
hlt
cltd
or
mov
mov
jmp
stc
mov
dec
or
mov
das
mov
daa
push
es
stos
pop
xor
int
cmp
mov
fs
pop
clc
xor
bt
jmp
movl
pusha
lea
jmp
jmp
dec
mov
push
rolb
repz
scas
and
fdivrl
push
adc
xlat
test
imul
xor
sbb
popf
iret
lcall
outsl
idivb
mov
jne
xchg
sub
ds
scas
lcall
ret
add
add
jbe
incl
leave
bt
xor
cmc
xor
bt
xor
stc
clc
xor
pushf
jmp
xorl
out
sti
cmp
das
mov
das
lret
push
int3
call
scas
orl
out
adc
out
inc
shrb
inc
cmp
addl
ds
lds
gs
cld
sub
shrb
mov
insl
xchg
jp
sub
mov
xor
push
push
out
cmp
rol
xorl
or
daa
test
leave
pop
dec
pop
sbb
cltd
jecxz
dec
mov
or
mov
cmp
addr16
outsb
push
adc
adc
out
cmp
and
inc
cmp
xor
push
rorl
mov
mov
push
pop
sub
push
addr16
mov
pop
shll
cwtl
dec
aam
pop
xlat
imulb
jno
cmpsl
rcr
cwtl
adc
imul
jne
ficompl
fadd
mov
cld
sbbb
xchg
or
pop
les
pop
add
daa
mov
enter
inc
fbstp
mov
mov
test
jne
in
cmp
xchg
in
scas
push
push
test
adc
adc
aas
sahf
hlt
imul
divl
in
cmp
movsl
jecxz
dec
das
xchg
clc
gs
sbb
movl
pushf
movl
push
pusha
pushf
pushf
lea
jmp
push
pushf
lea
jmp
pushl
movl
pushf
mov
pushf
lea
jmp
and
dec
push
adc
pop
fidivrs
fs
add
jmp
adc
and
adc
jns
cmp
xchg
ja
xchg
dec
jmp
mov
out
inc
xchg
adcb
adc
cld
in
lea
addr16
jo
enter
xchg
add
sub
mov
cld
test
fistpll
cwtl
push
inc
push
hlt
pop
mov
sbb
push
inc
lods
add
lea
pop
ljmp
sbb
or
lret
lds
add
sar
adc
and
push
mov
rorl
push
add
das
cli
adc
in
push
loope
xor
inc
scas
push
aaa
sbb
push
repnz
xchg
popf
ss
cmp
les
xor
jmp
xor
mov
pushf
xor
bt
pushl
popf
pushf
pushl
ret
push
push
call
push
pushf
movl
push
pushf
mov
pusha
lea
jmp
aas
ja
call
test
daa
hlt
loop
aas
call
fs
cmc
mov
dec
test
iret
pop
xor
push
lret
mov
leave
jmp
bound
mov
mov
lock
adc
sbb
imul
jne
sub
ss
add
outsl
std
jmp
mov
test
pop
lcall
inc
mov
cmc
push
gs
insl
pop
call
mov
cmpsb
sub
mov
sti
lret
sbb
mov
clc
repz
fwait
daa
xorl
bt
call
mov
lret
lods
push
stos
cltd
lret
inc
lods
ds
mov
mov
push
inc
in
jecxz
out
xchg
scas
gs
mov
inc
test
mov
and
popf
inc
inc
rol
mov
out
sub
mov
loop
pushf
jle
mov
out
cmp
sarb
jge
xchg
mov
fs
push
mov
push
dec
add
push
cmp
fdivr
mov
adc
sub
mov
movsl
xorb
sub
stc
jl
sti
inc
mov
iret
push
jl
adc
shlb
fiaddl
test
hlt
mov
mov
ljmp
imul
pop
mov
lock
sub
mov
shr
add
aad
jne
lret
scas
jle
es
pop
popa
shlb
pusha
or
mov
pop
cmp
gs
jae
xchg
test
cmp
xor
dec
and
or
dec
jmp
jo
xlat
cmc
adc
test
shrl
push
push
sbb
mov
in
mov
aam
cwtl
mov
sbb
dec
xor
leave
mov
xchg
in
pop
dec
jne
ljmp
add
inc
cs
sbbl
and
negb
xor
stc
das
or
push
jp
add
sbb
cmp
pushf
movl
mov
movl
pushf
pushf
pusha
lea
jmp
xor
cmp
xor
jmp
movl
pushf
lea
jmp
push
pushf
popl
push
cmp
xor
bt
xor
jmp
add
xchg
jge,pt
mov
fbld
or
out
lods
mov
mov
add
ljmp
adc
scas
dec
mov
mov
subl
aaa
inc
push
out
mov
andb
pusha
mov
mov
aam
jle
outsl
out
stc
adc
inc
arpl
mov
mov
mov
push
int
outsl
scas
xor
xchg
fdivrs
and
pusha
ror
loope
dec
aam
mov
mov
adc
insl
negl
jl
lcall
out
insb
sub
xchg
or
sbb
or
sbb
test
ss
push
sbb
fnstsw
mov
mov
pop
lret
shll
mov
push
lret
jl
mov
and
insl
mov
scas
outsb
mov
dec
out
ss
mov
and
pusha
out
jo
int3
dec
aam
lcall
or
push
pushf
pop
cmp
outsb
mov
test
aaa
push
dec
dec
cltd
push
mov
jecxz
push
lcall
fmull
outsb
mov
in
das
sub
pop
xchg
cmpsl
cmp
ret
dec
cmc
daa
cmp
popa
cmp
imul
lcall
idivl
add
icebp
mov
insb
push
loope
fstl
jmp
mov
inc
xchg
pop
inc
xchg
sub
xor
pop
dec
jmp
xor
pushf
jmp
aad
push
mov
dec
leave
xor
jno
int
loop
and
adc
add
ja
pop
xchg
ret
loope
test
inc
scas
fwait
and
movsb
fsubl
daa
outsl
inc
pop
sbb
aaa
mov
rorl
and
jbe
push
mov
lds
jne
int3
fldl
stos
jnp
out
cmc
cmc
sub
scas
mov
sti
add
xchg
mov
call
and
pop
cltd
out
or
mov
sub
pop
adc
pop
or
imul
mov
push
jns
sbb
lock
dec
jp
cli
insb
jecxz
dec
cs
ja
pop
insb
gs
mov
add
sbb
xchg
mov
adc
js
push
es
mov
out
jne
into
pusha
inc
push
ss
pop
or
jbe
pop
cmpsl
xor
xor
cmp
sar
push
adc
ret
fwait
movsb
rolb
lret
fiaddl
lea
cmp
js
mov
and
cmp
xor
cmpsb
and
push
test
cmp
add
call
pop
mov
adc
and
call
stos
mov
push
cmp
dec
pop
scas
aad
lret
jl
and
scas
sub
push
shl
mov
xchg
and
mov
sub
xor
movb
xor
stc
clc
pushl
popf
movb
pushl
ret
outsb
ds
mov
mov
push
adc
push
sub
js
clc
mov
fbld
sbb
and
inc
jo
jbe
loopne
inc
pop
mov
fwait
hlt
scas
push
jecxz
push
mov
lahf
xchg
imul
femms
pop
in
xchg
adc
xchg
xor
xchg
pop
push
push
mov
cmpsb
clc
mov
sub
push
xchg
mov
sar
xchg
mov
rcll
inc
sbb
push
mov
loopne
pop
popf
push
jns
mov
sub
xchg
jge
xor
mov
push
inc
adc
inc
dec
push
pcmpeqw
xor
jno
cmp
jp
test
or
xlat
or
xlat
jno
xchg
int
dec
mov
cltd
scas
scas
int
fwait
add
clc
fstps
in
dec
inc
pop
lahf
sbb
out
in
xchg
sbb
mov
in
inc
test
fimuls
ret
sbb
cmp
iret
add
daa
hlt
or
mov
fistpl
push
pop
cmp
int
fisttpl
mov
mov
andb
outsl
xchg
lea
insl
jle
ds
sub
gs
iret
lret
xchg
clc
lods
dec
ret
inc
stos
fistpll
outsb
scas
xor
or
dec
mov
int
je
pop
mov
pop
fimull
xchg
mulb
pusha
lea
rcll
lcall
in
fwait
sub
xchg
jb
stc
rolb
pop
in
jno
mov
jle
xor
pop
testl
mov
mov
out
iret
and
arpl
push
je
test
out
sti
push
mov
clc
popa
daa
lock
lcall
cmp
add
pop
fdivrl
push
pop
cmp
sub
idiv
jbe
sahf
adc
mov
sbb
jnp
jns
ds
mov
cmp
call
push
movb
pushf
movl
pushf
pushf
movw
lea
jmp
call
push
push
movl
pusha
lea
jmp
stc
xor
test
test
xorl
push
xor
pushf
xor
test
xor
push
pushl
popf
mov
pushl
ret
pushf
pushf
popl
call
mov
xchg
lods
inc
cltd
push
and
push
das
or
cmp
scas
aad
cmp
push
pop
push
cwtl
bound
and
inc
dec
sub
iret
jp
mov
mov
fmull
cmp
aam
or
cmp
cmp
or
mov
mov
je
movsb
xlat
aam
inc
sub
or
and
push
imul
lret
dec
cmp
cmp
in
inc
pop
push
sbb
fldpi
add
out
sbb
mov
ret
mov
or
sti
adc
xor
jecxz
movsb
mov
or
fwait
pop
nop
ret
adc
fcmovnb
cli
dec
inc
fdivl
fcompl
iret
fbstp
or
xchg
pusha
and
add
mov
fistpl
leave
inc
xchg
or
add
fbstp
movsl
movb
popl
clc
xor
cmp
xor
clc
mov
xorl
test
call
lea
jge
push
pusha
movl
push
push
lea
jmp
call
sbb
cmpb
cmp
mov
imul
push
mov
lea
in
sub
scas
jbe
mov
push
pop
sub
jp
pop
and
xchg
cltd
cmpsb
jns
adc
cmp
or
out
loop
cvtps2pi
dec
push
and
test
ret
jns
imul
scas
stc
xor
in
or
sbb
cmp
mov
jae
xchg
inc
xlat
ja
dec
mov
in
inc
mov
repz
mov
jae
inc
dec
lods
inc
test
fsub
jg
pop
stos
dec
movsl
add
push
cmc
add
jg
out
and
mov
fistps
aam
sub
cmp
pop
sti
xor
adc
jge
shll
shl
sub
and
xor
jnp
fsubrp
xchg
repnz
repz
popa
xchg
int
xchg
sysenter
std
sbb
fisubs
bound
jle
aad
stos
pop
inc
ja
adc
mov
scas
mov
push
xlat
test
imul
mov
xchg
xchg
cmp
ja
test
mov
mov
movsl
int
aad
orb
sbb
stos
icebp
in
mov
pop
sub
fimull
ret
dec
dec
pop
sbb
lods
dec
ret
es
and
movsl
xchg
mov
divb
movsb
cli
aad
int
sub
aad
addl
jle
call
push
push
mov
ds
idiv
mov
push
loop
push
adc
xor
stos
cmpsb
jbe
xchg
sbb
push
adc
cli
xchg
adc
dec
ds
sti
int
andb
hlt
stc
test
push
add
adc
lods
adc
sub
cmpsb
jg
scas
cltd
pop
je
fwait
int
add
loop
data16
shll
mov
insl
cmpsb
pop
lcall
fmuls
mov
xor
div
mov
in
inc
push
pushf
pop
scas
sti
inc
or
in
add
dec
sbb
mov
mov
rcrl
cltd
cmp
pop
jmp
hlt
jns
ds
dec
bound
andb
ret
fwait
repnz
hlt
dec
mov
mov
scas
popf
ret
jl
shrl
inc
cmc
icebp
es
mov
mov
cmc
in
or
jecxz
mov
lea
test
dec
push
sbb
add
pop
dec
jmp
pop
add
pop
aam
jp
aaa
or
rcll
or
flds
xorl
lcall
outsl
popa
push
pushf
push
movl
mov
push
movl
lea
jmp
push
pusha
movl
mov
lea
jmp
gs
xor
dec
stos
xchg
pusha
mov
sbb
dec
push
xor
sbb
push
sub
ret
sub
daa
mov
dec
bswap
inc
pop
int
cs
sarb
test
test
xlat
or
xor
mov
xlat
lds
dec
mov
test
pop
int
repnz
pusha
xchg
lods
out
push
jae
lock
lea
xor
das
lds
sub
mov
or
mov
adc
xchg
xor
mov
out
cmc
xchg
movsb
ds
mov
shrb
cmp
and
lods
call
insl
and
nop
push
sub
in
sbb
xchg
rcrb
inc
sub
roll
inc
push
jmp
jbe
sub
in
pop
push
imul
scas
enter
pop
push
sub
mov
imul
into
cmpsb
scas
sti
add
cli
out
or
fstps
xlat
dec
mov
dec
ljmp
dec
clc
sub
ret
stos
mov
jne
xchg
add
cmpsl
data16
xchg
jecxz
jle
add
incl
popa
popf
xor
cld
cmp
xor
bt
pushl
xor
call
xor
bt
jmp
call
xor
jmp
pusha
pusha
pushf
movl
pushl
mov
call
pushf
call
movl
mov
pushf
pusha
pushf
lea
jmp
mov
dec
stos
and
sub
ss
insb
nop
sub
fs
in
mov
mov
cmp
std
mov
mov
enter
dec
add
sbb
mov
push
sbbl
rol
jle
jno
mov
ret
sub
dec
aaa
lock
int
sub
int3
mov
xchg
js
xchg
cmpsb
mov
fwait
and
push
adc
xchg
cwtl
and
sar
neg
out
mov
adc
add
sahf
vunpckhps
or
sub
fldt
add
xor
repnz
fbld
xchg
scas
xchg
ss
xor
gs
lret
movl
repz
cs
stos
mov
cmpsb
movl
pusha
lea
jmp
pusha
jmp
imul
movsb
jecxz
fsubs
movsl
mov
cmc
adc
fidivrs
push
scas
mov
pop
push
push
or
adc
cmp
inc
dec
mov
fsub
jl
popl
dec
add
lock
xchg
jbe
mov
xchg
aas
adc
jecxz
or
mov
movsb
inc
sbb
scas
lret
cmp
or
or
and
ja
or
aaa
xchg
pop
jecxz
test
pop
mov
mov
jl
jb
adc
xchg
or
push
mov
fmuls
sbb
jnp
add
lcall
adc
inc
fs
sbb
or
sbb
rorl
push
out
loopne
scas
loop
lcall
lret
scas
repnz
icebp
gs
mov
jp
loope
cmp
inc
pop
mov
movsl
call
lahf
js
call
data16
mov
lea
js
push
pushf
jmp
pusha
adc
fbstp
std
cwtl
sbb
mov
inc
mov
outsb
cmp
jmp
push
cmp
sahf
stos
cmpsb
repnz
pop
add
mov
jge
neg
push
xchg
push
sub
fbstp
push
jmp
or
sahf
push
adc
cmc
xchg
cmpsb
ds
add
xchg
push
subl
adc
push
sub
cmp
sahf
cmovp
ds
add
push
add
push
pushf
das
cmc
push
addr16
aam
ret
out
and
jge
fwait
adc
adc
jo
ret
test
fistps
xchg
gs
outsb
jns
sbb
cltd
xor
ja
scas
dec
or
pop
lahf
dec
je
mov
jle
push
add
or
sti
scas
aas
pop
dec
shll
int
sbb
nop
lcall
adc
cli
divl
mov
dec
mov
add
adc
fcomps
aam
push
bound
nop
cmc
mov
push
fmul
cwtl
mov
or
iret
adc
mov
push
inc
adc
push
push
ja
fisttpll
cmp
jne
aam
mov
cmc
or
add
adc
cmpsl
sub
mov
sub
pop
mov
js
repz
pop
fidivs
xor
and
nop
push
mov
mov
adc
icebp
out
jns
or
add
iret
push
push
int3
fs
pop
jle
ret
adc
xor
add
push
mov
xchg
repz
dec
sub
call
push
mov
or
adc
xor
push
scas
jae
sahf
lods
mov
enter
dec
test
sbb
insl
daa
mov
push
mov
adc
dec
mov
ret
clc
sub
dec
inc
dec
sub
mov
int3
push
add
cltd
dec
or
pop
push
jg
jno
xchg
nop
scas
pusha
push
mov
xor
inc
inc
pusha
data16
pop
aaa
pop
cli
in
je
mov
push
sbb
jecxz
pop
nop
pop
sub
repnz
xchg
mov
push
jg
mov
rcrb
mov
push
ret
sahf
clc
push
inc
push
dec
test
mov
loopne
in
repz
lock
and
xchg
xchg
xor
xor
push
add
pop
xlat
call
test
and
inc
jle
cmpsb
insb
lret
popw
sbb
repz
xchg
mov
into
lcall
stos
mov
jbe
mov
fwait
clc
fsubl
xor
mov
push
bound
jb
aas
sub
jecxz
repnz
push
xchg
mov
test
jae
fistps
cmp
xchg
mov
pop
pop
mov
pop
shll
inc
mov
fiadds
inc
cmp
fnstenv
adc
jle
inc
mov
lds
sbb
imul
rcrb
cmc
mov
icebp
outsl
push
shl
rcr
jle
subb
inc
pusha
aaa
shrl
fprem1
pop
inc
bound
ds
xor
scas
add
je
mov
mov
dec
adc
sub
fsubrp
xchg
aam
std
push
cmpsl
cwtl
ss
or
lds
mov
aad
pop
stc
and
loop
shl
xchg
jp
test
xchg
gs
pop
test
add
repz
dec
cltd
or
test
push
sub
jmp
cwtl
xor
aas
testb
fxch
push
mov
mov
cmpsb
outsb
in
scas
js
lcall
mul
adc
lds
dec
and
jmp
jnp
mov
stos
loopne
int3
inc
in
xor
pushf
cld
lods
jae
push
or
mov
pop
push
adc
xlat
loopne
int3
jno
aad
sbb
lret
bound
add
clc
xor
push
andb
lret
adc
cmpb
pop
aad
leave
push
and
into
xchg
das
mov
mov
pop
fdivl
imul
out
jnp
and
out
inc
pop
adc
jl
call
movl
push
push
lea
jmp
call
mov
jnp
or
dec
and
cli
stos
fcompl
jg
mov
icebp
repz
cmp
pop
and
popf
jecxz
out
mov
inc
mov
pop
gs
loope
pusha
adc
or
movsl
arpl
fsubrl
pop
push
in
pop
pop
mov
push
mov
xchg
or
call
sbb
lds
mov
pop
lods
push
add
cmp
cmp
cmp
ljmp
mov
test
in
aam
in
cmc
mov
aaa
lock
inc
enter
mov
inc
sti
jl
sub
inc
add
arpl
stos
and
xchg
push
pop
rcl
addr16
outsl
inc
xor
out
movsl
add
mov
pop
adc
and
mov
adc
stos
pop
mov
jg
dec
or
das
pop
div
jg
mov
data16
xor
outsl
xchg
jg
mov
cmp
sub
enter
test
add
cmp
dec
or
stc
mov
xor
xor
inc
inc
pop
push
aas
or
fwait
push
aaa
jae
inc
inc
pop
pop
adc
fwait
ljmp
lea
xor
mov
pushf
rcrb
pop
push
adc
test
out
xchg
xlat
adcl
ret
divb
test
negb
xor
lahf
sbb
xchg
ret
dec
add
jecxz,pn
xor
rcrb
dec
scas
cs
outsb
mov
ficompl
jns
orl
jl
xchg
rorl
aas
ja
or
sub
jg
and
sub
fistl
mov
sti
test
ljmp
cmpsl
loope
dec
or
addl
testb
or
cmc
xor
cmp
xor
call
movl
movb
lea
jmp
pushl
movl
pushf
pushf
lea
jmp
jp
push
push
movl
mov
pushf
lea
je
push
movl
pusha
lea
jmp
lea
jno
push
push
mov
pushf
pusha
lea
jmp
cmc
xor
pushf
call
xorl
jmp
movl
movb
pushf
push
pushf
movl
push
pusha
lea
jmp
movl
pusha
call
call
push
pusha
mov
movl
jmp
pusha
pushf
popl
pusha
xor
cmc
jmp
mov
dec
mov
getsec
test
test
fstl
xlat
in
cld
lock
insl
daa
fists
es
xor
xchg
jae
lds
cmp
rclb
xchg
and
mov
js
mov
aad
sbb
xor
jbe
fwait
add
scas
mov
cld
roll
loopne
mov
repnz
xor
jg
sbb
mov
or
divb
mov
fwait
pop
xor
fcomi
add
stc
jno
push
lret
pop
insl
clc
scas
jbe
sub
sti
rcll
sbb
xor
lods
adc
mov
push
pop
xchg
adc
notb
cwtl
jo
popf
or
jmp
arpl
pop
inc
lahf
mov
dec
movsl
fisubl
inc
out
jge
mov
popa
or
test
and
mov
cltd
imull
das
fcomp
and
roll
loopne
das
mov
or
jp
mov
in
push
sbb
and
scas
loopne
je
and
add
add
xor
cmc
call
push
pushf
popl
jmp
xor
pusha
xor
cld
cmp
pushl
popf
mov
push
pushl
ret
xor
clc
xor
clc
bt
xor
clc
xor
call
clc
pushl
popf
movb
pushl
ret
xor
push
xor
pushf
test
pushl
popf
push
pushl
pushl
ret
movl
movw
pushl
mov
pusha
lea
jmp
xor
pushf
push
xor
cld
cmc
pushl
popf
mov
pushl
ret
jmp
push
movl
mov
lea
jmp
movl
pusha
mov
jmp
push
movl
push
lea
jmp
movl
pusha
pushf
lea
jmp
xor
test
cmp
xor
stc
xor
mov
xor
jmp
call
and
gs
dec
jmp
rolb
or
dec
adc
cld
addr16
std
jns
mov
cmp
in
ja
pop
or
xchg
sbb
cmp
mov
cmc
bound
adc
add
inc
add
inc
sub
jmp
xchg
mov
mov
fistpll
aam
sub
out
mov
sbb
in
aam
fnstenv
mul
mov
mulb
notl
sub
outsl
pop
loopne
inc
insb
in
scas
xchg
mull
in
xchg
or
and
mov
aas
sbb
lea
sbb
and
adc
out
mov
fldenv
add
pusha
cmp
sbb
sbb
inc
pop
mov
je
xchg
push
movsl
dec
or
adc
shrl
or
ret
xchg
movsb
aam
scas
dec
lahf
fnsave
and
mov
out
jmp
and
rolb
ret
rcr
add
pushf
ret
call
in
sbb
pusha
xor
adc
test
dec
sbb
ja
or
lea
pop
in
mov
dec
testl
jo
push
test
dec
cmp
mov
mov
sub
add
cmp
mov
mov
dec
int3
xor
pop
jmp
mov
adc
xchg
outsb
xchg
jl
addr16
add
jp
push
ja
push
daa
fcomps
lahf
add
pop
iret
ss
loope
adc
aas
or
mov
sbb
push
in
fiaddl
add
clc
xor
cmc
cmc
xor
movb
xor
stc
pushf
xor
jmp
movl
mov
lea
jmp
pushf
movl
pusha
mov
pusha
call
or
dec
jnp
and
push
aaa
repnz
add
sub
int
sub
fldcw
dec
pop
sbb
iret
and
pop
sub
mov
and
andl
jmp
pushf
popl
test
test
xor
test
xor
jmp
xor
jmp
pusha
pusha
mov
movl
push
call
xchg
fdivr
xchg
out
adc
repz
push
js
rolb
sub
sbb
xor
mov
pop
add
mov
dec
in
mov
lret
dec
pop
add
aad
into
stos
push
pusha
mov
insb
mov
mov
pop
scas
das
mov
ss
aam
mov
adc
fwait
sbb
inc
sbbb
outsl
and
xchg
pushf
icebp
cmp
stos
ds
les
notl
out
test
or
daa
inc
add
aad
push
sub
mov
inc
fcomp
mov
mov
mov
sub
cmp
loopne
pop
mov
aam
je
out
sub
bound
rorb
jp
nopl
stc
pop
sub
pusha
rcrl
sarb
cmp
aas
pop
and
insl
pop
cli
cwtl
or
in
add
scas
push
aaa
in
bound
nop
pushf
mov
insb
cmpsb
jb
and
aam
loopne
mov
mov
lds
xchg
mov
fcmovb
xor
inc
movsl
jecxz
xor
sub
adc
mov
cld
add
cld
in
incb
adc
pop
mov
hlt
mov
call
or
jno
mov
ret
xchg
imul
and
jg
leave
repz
insl
sbb
ds
pop
mov
je
add
inc
and
int
cmp
sub
add
push
mov
pusha
movl
jmp
call
xor
jmp
pushl
popf
push
push
pushl
ret
xor
cmp
mov
xor
stc
push
xorl
mov
xor
clc
jmp
add
aad
jg
xchg
aad
sub
idivl
cli
test
dec
pop
inc
lods
fmuls
scas
jns
and
xor
sbb
ss
sarb
repnz
pushf
mov
ficomps
jge
cwtl
lret
shlb
outsb
dec
jns
jmp
pop
sbb
or
ffree
xchg
aam
aad
pop
jae
fcomps
inc
pop
outsl
sub
or
mov
icebp
call
insl
sbb
aad
shrb
mov
int3
inc
push
mov
cmc
mov
lret
mov
add
scas
jp
adc
inc
loope
sbb
faddl
mov
mov
rclb
xor
fstpl
in
mov
xchg
subl
test
mov
add
jno
xor
mov
in
inc
stos
jnp
orb
xchg
push
outsb
mov
lret
push
faddp
jecxz
sbb
stos
mov
sbb
fmull
jmp
mov
push
test
mov
ljmp
leave
fwait
daa
add
or
pop
or
mov
test
mov
xchg
fsubl
repnz
xor
sbb
add
inc
insb
jg
mov
out
add
cmp
sbbb
cmp
adc
stos
add
dec
leave
push
js
push
dec
or
sub
push
inc
xor
int
adc
push
lret
out
push
ret
std
sub
in
jmp
add
and
rclb
inc
pop
popl
inc
loopne
lock
out
ss
cmpsl
xchg
aaa
aaa
add
cmp
imul
adc
push
push
sbb
pop
lea
std
adc
add
and
lcall
pop
mov
xchg
push
inc
jb
add
and
fmuls
mov
cld
xchg
jge
repz
lds
ficoms
in
in
add
and
xchg
xchg
mov
in
lds
xchg
fisubl
mov
js
sbb
sub
add
mov
add
nop
dec
xor
adc
mov
insb
push
push
xor
mov
and
xchg
dec
cmp
es
fimuls
or
into
scas
or
jecxz
pushf
xor
rcrb
push
pop
aaa
cmp
xor
mov
repz
inc
inc
sub
and
imul
repz
pop
mov
lret
xchg
lret
pop
lahf
mov
aaa
add
dec
jo
mov
sar
mov
or
adc
mov
jg
ficoml
dec
sbbb
aas
jns
test
cs
sbb
mov
rcl
xchg
loope
fildl
push
mov
inc
xchg
dec
push
sub
push
lods
sub
daa
fcomps
iret
push
push
cmp
mov
or
shrl
mov
movzbl
xchg
fucomp
jb
in
ljmp
into
jp
mov
neg
mov
xchg
fisttpl
rclb
pusha
add
lcall
enter
mov
iret
lea
sbb
iret
adc
mov
loop
pop
cmp
adc
fiadds
les
mov
iret
cmp
mov
inc
shl
frstor
repnz
lcall
cld
push
xchg
fdivrs
loop
pop
jb
das
xchg
inc
pop
adc
dec
pusha
fs
test
test
inc
jmp
pop
dec
into
dec
mov
mov
sbbb
aad
psllw
mov
adc
int3
sub
into
enter
xor
add
into
push
test
jno
scas
mov
sbb
leave
fwait
dec
add
mov
pop
pop
int
mov
dec
add
inc
cli
mov
fldl
dec
fs
andb
pop
xlat
jns
cmpl
test
fs
jns
adc
sbb
pop
sbb
pusha
pushf
mov
test
pop
push
rcl
movq
repz
hlt
loop
inc
mov
or
loope
or
out
and
xchg
jns
fucomip
cltd
sbbl
xor
lret
inc
sub
push
mov
out
addl
sbb
call
pop
pop
pop
push
cs
sbb
jle
scas
popa
fs
and
cltd
mov
adc
sub
int
dec
sub
or
xor
pop
or
push
adc
cmpsb
icebp
inc
and
jp
dec
mov
imulb
push
mov
add
jb
in
xor
inc
xchg
loop
cmp
sub
pop
xlat
inc
cmp
or
pop
cmp
jns
popa
push
sbb
jp
insl
arpl
movsl
insl
in
jl
cltd
xchg
dec
sbb
cmpsb
adc
push
in
pop
push
aam
insb
and
lods
xchg
dec
xchg
xor
dec
jb
mov
mov
loopne
shl
mov
mov
cmpb
inc
rcl
push
hlt
sbb
add
xor
push
test
addb
inc
popf
jl
daa
lods
dec
and
mov
mov
adc
push
aad
mov
ficoms
pop
pop
leave
les
add
cmpb
leave
and
fs
popf
xchg
sub
imul
sahf
mov
js
in
inc
dec
shll
popa
and
pop
ret
sti
mov
sub
pop
test
adc
call
push
aas
aad
adc
push
xchg
fldt
pop
xor
jmp
iret
fdivr
sbb
fucomip
test
dec
aad
out
lods
cmp
add
dec
push
pop
mov
xchg
aas
rcrl
adc
in
in
lock
dec
lret
mov
movsl
hlt
repnz
pop
pushf
inc
mov
cmp
icebp
lock
jno
push
dec
xor
jnp
add
test
es
sbb
std
in
imul
jle
ret
fs
push
cltd
cmp
xchg
in
or
mov
xchg
mov
mov
and
sahf
mov
mov
add
fs
mov
std
iret
loope
popl
cmp
mov
mov
and
push
inc
dec
cmc
adc
lods
lahf
aas
loop
sahf
lcall
sub
mov
push
mov
es
addr16
lcall
sub
add
mov
mov
pushf
pop
mov
mov
scas
movswl
call
loop
sar
add
sbb
js
inc
push
testb
icebp
inc
mov
stos
cmc
mov
or
dec
cmp
test
out
mov
in
test
test
es
fwait
repz
push
js
ljmp
aaa
testb
jle
imul
cmp
jnp
push
int3
pop
and
lret
pop
mov
adc
incb
inc
push
mov
cwtl
pushf
add
mov
int3
nop
lret
mov
inc
hlt
pushf
popl
jmp
movl
pushf
jmp
dec
arpl
or
push
adc
notb
mov
cwtl
decl
sub
cmp
stos
ret
fildl
dec
xor
dec
jno
add
sub
arpl
repz
int
cmc
lret
mov
lock
jbe
pop
jge
mov
daa
cs
sbbl
movsl
in
mov
add
jae
mov
lahf
out
xchg
inc
rolb
cs
repnz
dec
push
inc
push
lret
in
int3
pushl
inc
popf
insl
loop
mov
nop
lret
pop
sub
outsb
pop
sub
lret
out
pop
les
call
mov
and
stos
add
es
lcall
push
push
dec
push
jle
add
es
in
mov
mov
scas
xchg
dec
rcrl
nop
push
sbb
sar
inc
pop
scas
jo
or
xchg
addr16
in
push
cmpl
mov
push
es
add
and
aam
pop
leave
or
loop
addb
cmp
mov
pushf
popl
pushf
xorl
cmc
xor
stc
bt
xor
pusha
call
pushf
popl
cmc
xor
pushf
pushf
xor
clc
xor
bt
pusha
xor
mov
bt
xor
clc
xor
mov
cmc
xor
pushf
xorl
stc
test
pushl
popf
pushf
pushl
ret
call
pushf
movl
pushl
push
pushf
lea
jmp
xor
test
xor
call
dec
pop
and
or
cmp
icebp
mov
pusha
jmp
push
cmpsl
das
inc
or
sbb
sub
pushf
shrl
test
in
cmpsl
lahf
push
ss
xchg
sarb
into
pop
mov
fisttps
add
lcall
push
insl
lods
mov
loopne
sub
aas
add
pop
pusha
xchg
push
push
shrb
or
jb
push
push
xor
imul
arpl
push
mov
rclb
sub
movsb
dec
adc
sub
jge
xchg
dec
repnz
add
xor
rolb
xchg
pop
hlt
cmp
fwait
in
imul
sub
push
or
test
mov
iret
ss
shll
cmp
dec
pop
sbb
xor
lds
or
mov
lcall
mov
add
in
xor
jmp
add
cmc
dec
mov
xor
lret
rorb
jnp
loop
mov
hlt
lods
fcomps
mov
clc
lea
ret
leave
rclb
jmp
adc
dec
cmp
loopne
push
xor
lods
lea
es
xchg
cld
in
adc
lock
push
rorb
push
cmpl
add
mov
jg
sub
pop
mov
xor
jns
test
imul
leave
pop
sti
mov
popf
cltd
enter
icebp
jo
out
addb
rolb
fsts
insb
jge
lret
push
xchg
add
mov
and
adc
arpl
cmp
addb
rolb
jns
push
rolb
push
fidivrs
out
cmp
imul
xlat
jbe
cli
push
mov
ja
stos
push
push
add
or
pop
jnp
cmp
mov
subb
push
and
clc
adc
or
bound
pop
push
jecxz
ss
xchg
xchg
xorl
add
push
pop
adc
outsl
mov
dec
xor
movsb
and
push
fcmovnu
jp
sarb
stos
pop
jne
mov
mov
cwtl
shll
or
xchg
mov
loope
push
add
pop
or
stc
mulb
loop
push
xchg
subb
int3
pushf
dec
lret
loop
mov
lods
aam
fwait
add
push
lods
loop
add
movl
call
push
fimuls
dec
push
iret
push
jmp
cmp
das
jge
sub
mov
mov
mov
popa
xchg
sub
adc
sub
getsec
adc
mov
cs
inc
mov
sub
adc
mov
test
mov
enter
into
jbe
sub
jle
adc
pop
addb
les
jle
adc
xchg
insb
xor
xchg
xor
dec
mov
fcmovb
jge
test
adc
sahf
pop
mov
lods
mov
adc
lcall
les
pop
lds
std
into
pusha
jns
fadd
dec
loope
xor
and
adc
rolb
fstpt
imul
in
mov
jecxz
repz
call
push
popf
mov
cmp
es
fdivl
hlt
inc
hlt
xor
add
or
sub
pop
test
cs
mov
sub
clc
or
jecxz
inc
ss
sahf
mov
test
jns
mov
push
or
fmull
test
jbe
rcrl
push
popw
push
pop
out
clc
and
leave
add
repz
and
cli
mov
xor
adc
mov
test
xor
push
xor
cmp
push
xorl
cmp
test
xor
call
pushf
pusha
pushf
popl
bt
xorl
test
clc
xor
stc
xor
cmc
pusha
xor
cmc
xor
bt
xor
test
xor
movb
xor
cld
pushl
popf
push
push
pushl
ret
pushf
jmp
pusha
pushf
popl
jmp
movl
pusha
pusha
mov
lea
jmp
xor
mov
xor
test
cmc
xor
clc
cmp
xorl
movb
clc
xor
push
pushl
xor
pusha
push
xor
cld
test
pushl
popf
mov
pushl
ret
jmp
movl
pushf
movb
pushf
pusha
lea
jmp
call
aas
cmp
mov
mov
jg
pop
mov
xor
sub
push
pushl
mov
insb
mov
cmp
add
xchg
outsb
in
mov
sbbl
insb
mov
inc
cmp
fstpl
xchg
mov
ret
in
lret
std
mov
xchg
fdivrp
lcall
enter
pop
xchg
insb
jne
mov
cltd
pop
testl
xor
je
and
dec
ror
add
bound
arpl
jns
ljmp
aas
add
ljmp
xchg
adc
mov
pusha
outsl
pushf
in
mov
add
cs
repnz
push
xor
lcall
fistpll
fcoml
dec
cmp
sub
icebp
and
outsb
cmp
ret
mov
mov
loope
lahf
and
int
add
andl
notb
push
jo
push
add
jecxz
gs
idivb
cmpl
sahf
mov
scas
ret
cmp
fildl
rclb
jne
inc
xor
inc
je
xlat
jg
pop
ljmp
addr16
add
push
lret
cli
adc
mov
das
mov
sub
sub
stc
es
cmp
mov
cs
mov
cmp
rcrb
jecxz
adc
sbb
cmpsl
and
aad
xor
jle
lods
orl
lods
imul
loopne
push
or
mov
pop
insb
lock
jb
jns
cwtl
cmc
test
or
dec
cmpsb
in
cli
dec
cmp
push
je
and
lods
inc
sub
push
mov
mov
sbb
mov
and
loop
hlt
jne
arpl
xchg
push
test
bt
xor
movw
xor
stc
mov
xor
call
pushf
push
movb
movl
mov
movl
pusha
push
movl
lea
jmp
xor
pushf
pusha
xorl
stc
cmc
xor
jmp
jmp
dec
dec
sbb
sbb
out
xor
pop
pop
sub
adc
xchg
cmpsl
adcb
int3
enter
fmull
dec
mov
rorl
mov
pop
pop
jns
rcrl
xchg
xchg
sbb
imul
and
and
mov
sbb
push
adc
in
push
sbb
gs
into
jl
imul
out
inc
and
in
shrl
call
and
in
fisubrl
mov
call
dec
or
lock
aas
mov
xchg
sub
dec
insl
ss
inc
push
xchg
mov
sub
push
enter
cwtl
sbb
push
rolb
mov
mov
dec
or
cmpsb
push
hlt
jae
xor
push
add
ret
push
rcll
cmp
pop
and
icebp
scas
pop
das
xor
sahf
jns
push
mov
mov
int
push
imul
mov
mov
sbb
cmp
out
outsb
int
mov
cmp
aam
mov
insl
xchg
out
jmp
add
jge
or
xchg
ret
inc
nop
shl
int
shr
jl
pushf
sbb
movsl
inc
shlb
cmpsl
jl
xor
pop
pop
outsb
xchg
mov
scas
pop
inc
loop
cmp
dec
push
sub
sub
ss
push
xlat
mov
dec
or
inc
add
repnz
ret
jns
pop
push
out
xchg
iret
xchg
lods
xchg
push
jnp
pusha
inc
jne
mov
into
int3
jnp
popa
dec
outsb
mulps
sbb
aas
loopne
sub
add
pop
call
and
push
xchg
divb
lds
cmpl
xor
mov
lcall
xchg
sbb
xchg
sub
popf
mov
cmp
push
push
or
jecxz
cltd
shrb
fadds
mov
or
adc
aas
fcomps
arpl
mov
mov
jnp
push
add
mov
add
testb
loopne
int
mov
or
jae
xor
cld
mov
cmp
test
rorb
shlb
lock
pushf
inc
and
xchg
xchg
mov
jmp
out
push
or
cmp
lds
xorl
lahf
data16
popf
xchg
aaa
popf
mov
push
stos
cmp
out
rolb
pop
test
xorl
stc
pusha
pushl
popf
movw
pushl
ret
jmp
mov
pushf
movl
jmp
movl
pushf
jmp
mov
dec
imul
xchg
pop
inc
xor
inc
fmuls
inc
push
and
scas
je
addr16
subl
cld
stos
insb
jge
xchg
push
dec
dec
cmc
cmp
mov
xchg
xchg
dec
int
sub
pop
sbb
and
sub
popa
or
sbb
fwait
cmp
xor
lret
movsb
mov
mov
xor
and
or
push
push
or
or
sub
pop
pop
aaa
stc
lret
inc
add
sbb
dec
cmp
push
mov
fdiv
loope
sub
pop
dec
pop
scas
xor
xchg
cmc
xchg
popa
aaa
ffreep
int3
mov
stos
jns
mov
mov
mov
fdivr
xor
pushf
stc
xor
cmp
xor
jmp
pusha
movl
pushf
push
movl
mov
pusha
pushl
pushl
lea
jmp
pusha
jmp
jne
add
or
xchg
les
mov
out
mov
outsb
rcrl
lods
scas
jmp
mov
sub
pop
es
sub
out
xchg
inc
and
push
or
out
xchg
add
adc
aaa
test
js
jge
test
xchg
mov
add
add
fcom
and
das
shlb
shll
xlat
daa
jp
movsl
add
push
push
mov
dec
mov
sbb
aam
xor
aaa
aad
add
cmp
dec
outsb
out
push
xchg
movl
pusha
pushf
pushf
mov
lea
jmp
movl
pusha
pushf
pushl
lea
jmp
xor
jmp
ljmp
pop
mov
xchg
sbb
ljmp
shlb
aam
cmpsl
xchg
fdivrl
xchg
xchg
xchg
add
jecxz
xor
cmp
mov
and
push
daa
xchg
shl
cli
or
sbb
dec
pop
and
or
dec
jl
cmp
add
xchg
es
fcompl
sub
mov
inc
jbe
movsb
test
adc
in
dec
in
pushf
jl
movsb
rolb
xor
stc
test
ds
jl
fwait
loope
movsl
or
je
push
in
cmp
je
cmp
push
pushl
ret
call
dec
or
adc
dec
fisubrs
add
or
daa
dec
popa
bound
jo
pop
mov
in
jne
push
dec
hlt
jl
popf
shll
out
movsl
scas
insb
sahf
ljmp
jnp
nop
push
insb
insl
loope
inc
fadds
das
push
je
lahf
sub
rcl
movaps
xlat
rcrb
out
nop
xchg
scas
rorw
mov
adc
mov
xchg
iret
mov
mov
or
xchg
stos
jge
push
fs
int3
scas
sub
mov
xchg
out
sub
or
out
push
sbb
repnz
ljmp
pop
cmpl
cmp
or
mov
stc
and
fsubr
xchg
outsw
int3
insl
or
repnz
cmp
hlt
sbb
aad
push
rolb
pop
ret
aam
fwait
mov
out
popa
pop
aaa
and
pop
sub
hlt
mov
insb
or
sub
test
dec
pop
std
sbb
outsb
sar
jo
pop
xchg
lea
movsb
mov
je
adc
dec
lods
stos
mov
bound
lret
dec
mov
test
imul
and
adc
xor
mov
inc
popa
push
dec
pop
xchg
mov
adc
and
aas
sub
push
cmp
mov
movsb
int3
xchg
addl
mov
pop
and
fnstenv
mov
cmovg
fwait
aas
mov
imulb
pop
std
pop
fmuls
xchg
sar
imul
pushf
dec
sti
jbe
mov
repnz
jo
jl
or
mov
fidivrs
add
sub
inc
aas
imul
adc
ja
push
push
enter
mov
inc
and
sub
cs
mov
dec
adc
inc
cvtps2pi
aam
hlt
mov
lea
int
and
loopne
sarb
add
sub
xor
scas
xchg
fdivs
cmc
lods
and
xor
js
lock
mov
mov
mov
aas
cmp
sub
sahf
bound
ret
sti
xlat
rep
repz
mov
cmpsl
aaa
pop
pop
rcrb
xor
repz
dec
adc
scas
fcomp
lahf
fcmovnbe
iret
xchg
cmp
movl
jae
push
push
lea
jmp
movl
pushf
movb
mov
pushl
lea
jmp
pusha
xorl
cmp
call
jmp
pusha
movl
movw
movw
movl
movl
pusha
pushf
movw
lea
jmp
movb
movl
pushf
lea
jmp
or
movsb
mov
add
adc
mov
sub
inc
flds
call
pop
xchg
mov
loopne
outsl
jp
adc
mov
inc
clc
scas
xor
inc
dec
push
mov
and
loopne
test
mov
add
inc
adc
roll
push
lock
scas
ret
adc
ds
dec
pop
sti
movsb
mov
dec
mov
mov
cld
cs
sbb
push
xlat
stos
addb
pop
add
sbb
and
gs
jns
iret
dec
inc
xchg
dec
mov
dec
mov
cld
jmp
pop
or
repnz
inc
inc
lds
xor
jnp
mov
xchg
cmpsl
sbb
cmp
lods
in
and
les
jge
dec
rclb
shl
out
lahf
gs
xchg
clc
out
pop
jae
dec
notl
outsl
movl
push
andb
xchg
mov
mov
in
mov
xchg
mov
sbbl
xor
adc
imull
pop
pop
test
sbb
xchg
adc
mov
xchg
sahf
je
out
xorl
jp
leave
rcr
dec
test
ljmp
cmp
fadd
hlt
repnz
stos
mov
and
das
les
mov
push
xor
xchg
cmpsl
sub
push
mov
shrb
pop
imul
push
mov
pusha
mov
movl
call
pushf
pushf
popl
cmc
stc
xor
cmc
clc
xor
test
call
pushf
call
movw
xor
bt
xor
cld
pushl
popf
push
pushf
pushl
ret
std
pushl
popf
push
pushl
ret
pushf
popl
jmp
inc
dec
fimull
cmp
fmuls
inc
lock
enter
mov
fucomp
sub
int
out
inc
dec
lock
gs
inc
sbb
jge
imul
clc
icebp
adc
mull
cmpsl
sbb
dec
test
bound
out
rep
xchg
mov
mov
int3
lock
outsb
insl
repnz
enter
inc
fmuls
sbb
and
and
js
add
sbb
addl
ret
lahf
lea
pop
addr16
loope
in
aad
xchg
push
push
nop
repnz
leave
pop
push
outsl
dec
fmuls
sti
jae
out
xchg
into
pop
cmp
data16
andl
pop
jno
addb
cltd
mov
pop
cmp
xor
cltd
shll
pop
enter
rcr
fidivrs
pop
sbb
stc
pusha
add
dec
cmp
xor
inc
addl
mov
movl
pusha
movl
pushf
push
lea
jmp
call
stc
xorl
pusha
xor
push
stc
xor
push
mov
xor
call
pusha
pushf
popl
mov
xor
stc
xor
stc
mov
xorl
jmp
inc
cmp
or
push
push
pusha
cmpsb
xor
jb
pusha
and
test
mov
mov
ficoml
aaa
push
add
inc
insb
jne
pop
mov
jno
insl
push
pop
cmp
xchg
lds
xchg
cmc
mov
xchg
out
jge
shl
cmp
cmp
mov
mov
and
push
test
in
out
daa
jbe
insb
dec
push
out
aam
in
out
jl
mov
movb
movsb
xchg
dec
pop
pcmpgtd
mov
push
push
pop
call
imul
pusha
pushf
popl
push
cmp
xor
cmc
jmp
add
sbb
out
std
sub
mov
andl
pop
inc
pop
andl
or
movsb
loope
pop
test
std
jnp
test
lahf
shrl
les
sbb
push
sub
jo
jb
push
xchg
out
insb
jge
adcl
jle
andb
inc
ss
jmp
fstpt
shr
repnz
xchg
es
popf
mov
pop
mov
ds
xorl
daa
and
jnp
pop
pop
jge
xchg
out
jg
cltd
jle
or
in
hlt
xor
leave
lds
movsl
lea
mov
movsb
fcompl
jge
jmp
imul
pop
loopne
loope
sbb
cs
dec
push
jmp
cmp
sahf
lret
adc
movsb
add
jnp
mov
sbb
inc
xchg
es
faddp
incb
mov
out
movb
adc
jbe
push
pusha
addl
aam
sub
inc
stos
out
xchg
aaa
xchg
jg
xchg
std
sub
enter
add
mov
test
into
mov
pop
add
sub
jg
mov
mov
hlt
out
lods
scas
sar
mov
cmp
dec
cmp
push
outsb
ss
addl
inc
and
lret
filds
call
xor
cmc
xorl
cld
bt
pushl
popf
pushf
pushf
pushl
ret
pushf
movw
pusha
movl
push
pusha
call
call
jne
pusha
pushf
mov
movl
mov
push
call
ljmp
sbb
add
rorb
rclb
cmp
sbb
dec
jbe
test
repnz
insl
out
jp
cmpsl
pop
das
in
js
cmp
push
or
sbb
adc
rcrb
shl
icebp
pop
fldenv
ret
sbb
jbe
mov
fs
mov
int
fldt
subl
dec
add
mov
out
sti
test
jle
movsl
add
leave
sub
dec
xlat
shr
cmpsb
repz
call
dec
sbb
dec
movb
sub
cmpl
enter
clc
mulb
jae
movsl
ja
fcomps
mov
loopne
mov
inc
jp
adc
or
sub
arpl
cmp
pop
pop
rorl
popf
scas
push
dec
push
fwait
sti
adc
ja
cmpsl
cld
sbb
pop
ss
push
clc
pushl
popf
push
pushl
ret
stos
jmp
mov
mov
rclb
movsb
call
dec
clc
je
xorb
setl
or
ljmp
jecxz
shll
sbb
pop
pushw
sbb
icebp
subl
pop
aaa
lods
imul
mov
pop
pop
fidivrl
ror
sbb
mov
mov
addb
testb
push
ja
out
shr
mov
hlt
xchg
out
xor
and
insb
mov
jb
cmpl
cmp
xchg
test
and
mov
test
cltd
cmp
hlt
and
fnsave
jb
and
cmc
and
cmp
lahf
inc
push
lds
add
jle
dec
push
pop
repnz
xor
in
sbb
xor
jmp
dec
shrb
push
mov
and
pop
pop
adc
repnz
mov
xor
cmpsb
cwtl
decl
orl
subb
fdivs
push
and
in
int3
add
cmp
or
ja
push
fldpi
call
mov
stc
xor
xchg
lret
and
jbe
mov
bound
jb
test
jmp
popf
outsl
test
js
sar
pushf
movsl
mov
scas
mov
jle
imul
mov
lds
and
inc
add
outsb
inc
jb
sbb
push
adc
push
addl
idivl
xor
lcall
inc
ret
pushf
movl
pusha
lea
jmp
xor
cmc
test
xorl
cmp
xor
jmp
movl
pusha
mov
pushf
push
lea
jmp
pusha
movl
pusha
movl
push
lea
jmp
addr16
lock
xchg
aad
lds
movsl
fldenv
mov
rol
ljmp
pop
dec
imulb
sbb
pop
xor
gs
or
ficomps
iret
xor
frstor
js
loopne
lock
add
push
ljmp
inc
adc
es
push
and
mov
sarl
sub
nop
ret
popf
leave
add
mov
xor
sbb
xor
in
movsl
lods
mov
scas
cld
adc
and
jno
jb
call
pushf
mov
lret
jnp
pop
or
sysexit
test
arpl
inc
clc
mov
cwtl
dec
mov
int
xchg
cmp
cmpsb
es
xchg
orb
push
push
rcr
mov
sbb
out
ljmp
xchg
test
push
sub
cld
or
cmp
loop
hlt
stos
xchg
nop
stos
lret
stos
mov
iret
sti
ret
icebp
addl
sbb
or
mov
inc
xor
nop
outsl
scas
and
add
mov
adc
rorb
xchg
mov
out
xchg
jp
jnp
jle
mov
out
scas
hlt
lds
jb
shrl
idivl
add
ss
pop
sbb
int
xlat
fwait
mov
pop
dec
xor
cmp
mov
test
insb
les
or
mov
inc
inc
call
imul
cmp
outsl
sub
adc
xchg
mov
repz
mov
sub
stos
cs
pusha
sbb
not
inc
outsl
mov
outsb
das
int3
jge
repnz
bswap
shll
jb
add
push
xlat
popl
mov
sbb
sub
pop
clc
pop
fsts
add
inc
push
add
pop
bound
cmp
dec
mov
and
mov
fistpl
mov
insl
std
push
int
cmc
and
gs
cmc
stc
xor
push
pushl
popf
mov
pushl
ret
push
movl
pusha
movl
pushf
pusha
pushl
pushf
lea
jmp
movl
pushf
lea
jmp
cmp
xor
push
pusha
xor
push
xor
cmp
push
pushl
popf
push
pushf
pushl
ret
push
movb
call
pushf
clc
pushf
xor
jmp
pusha
pushf
popl
pushf
jmp
pusha
pushf
pushf
push
movl
call
xor
pushf
pushl
popf
pushl
pushl
ret
pushf
pusha
pushf
popl
pusha
xor
mov
xor
call
push
pushf
pushf
popl
jmp
push
push
movl
pusha
pushf
movl
mov
pusha
pushl
lea
jmp
ja
mov
sbb
mov
mov
std
jno
mov
mov
add
mov
jecxz
mov
cmpsl
jne
push
mov
cli
xchg
dec
enter
pop
xchg
sub
xchg
mov
mov
call
addl
test
dec
mov
push
lahf
stos
stc
cmp
lcall
sub
popf
add
hlt
aas
pusha
add
pop
cmp
add
outsl
icebp
in
or
and
sub
rolb
or
in
popl
loopne
push
pop
mov
push
je
or
sbb
push
fsubl
push
lret
loop
mov
dec
out
xchg
clc
movsl
push
rolb
test
out
and
mov
cld
xchg
jnp
repnz
ja
repz
mov
cmc
jmp
cmc
xorl
jmp
movl
push
pusha
lea
jmp
roll
mov
xchg
imul
loope
scas
push
push
jo
ror
xlat
jle
cmovae
fidivs
or
insb
cmp
jge
adc
add
jl
out
jge
stos
out
stos
dec
xor
jmp
adc
adc
push
cmp
popf
mov
dec
xchg
dec
imul
mov
or
sti
inc
arpl
or
subb
cltd
sbb
je
add
aam
clc
fstl
out
jp
test
and
push
invd
hlt
fs
xlat
pop
mov
dec
stos
popa
xor
push
adc
adc
aas
xlat
xchg
clc
lods
push
pop
daa
mov
sub
adc
pop
or
lock
insb
pushf
lea
jmp
pushf
outsb
jl
xor
outsl
mov
jns
and
shrl
arpl
lock
frstor
sbb
cs
in
icebp
mov
rdtsc
or
call
inc
lods
adc
loop
sbb
xor
mov
mov
mov
lods
push
ds
cmp
mov
gs
xchg
sbb
insl
xor
aam
outsl
repnz
pop
rorl
mov
inc
xchg
mov
dec
shrl
neg
jb
js
imul
movb
pop
pop
xchg
push
out
mov
dec
xchg
pop
adc
repnz
mov
pusha
pusha
pushf
movl
movb
pushf
movb
pushf
lea
jmp
jmp
xor
pusha
test
xor
stc
xorl
call
pusha
push
movb
movl
call
movl
pusha
pushf
movl
pushf
pushl
push
movb
lea
jmp
push
movl
jmp
push
cli
or
aas
sub
jg
inc
ret
ljmp
lods
and
xchg
sub
loope
das
test
jp
cmp
in
adc
mov
sub
fcomps
scas
divb
jo
loopne
sub
pop
and
push
cmp
or
gs
sub
jbe
jmp
xor
and
rcl
out
scas
push
mov
testl
push
rorl
test
ror
shrl
xchg
sub
dec
or
scas
pusha
pop
lret
andl
lret
xchg
pushf
mov
jg
jle
sub
sbb
leave
cld
or
cmp
and
xor
fwait
dec
pop
add
loopne
mov
sub
adc
and
daa
andl
push
nop
ret
iret
sub
sbb
pop
loope
rorb
cmp
aas
sbb
aaa
sub
cmp
repnz
mov
pushl
popf
mov
pushf
pushl
ret
movl
pushl
pushf
lea
jmp
xor
pusha
cmp
xor
bt
pushf
xorl
pushf
xor
movb
movw
xor
pushf
cmp
xor
cmc
xor
movb
xor
stc
pushl
popf
movb
pushf
pushl
ret
jmp
jmp
ja
push
jmp
pop
and
or
add
loopne
xchg
pop
jle
xchg
sbb
insl
in
jmp
cmc
rolb
push
push
lds
js
movsl
sub
inc
push
xchg
mov
lods
scas
and
test
xchg
cmpsb
pop
adc
out
and
xor
test
mov
ret
call
inc
std
fucom
insl
jae
clc
or
lcall
js
dec
and
mov
mov
xchg
movsb
push
clc
push
inc
mov
fcoms
pop
jge
loop
out
in
cld
push
popf
lds
jmp
shl
mov
add
out
dec
pop
cli
or
or
fidivl
je
mov
adc
movsb
lcall
sarb
fsubrl
lods
add
xchg
or
sbb
lcall
xchg
adc
pop
xor
mov
sub
fildl
mov
je
mov
push
adc
jecxz
sbb
adc
es
vpacksswb
adc
dec
es
mov
cmpsl
cli
jb
xchg
out
xor
movsb
lcall
ljmp
div
lret
loopne
insl
pusha
dec
arpl
and
xor
and
xchg
push
nop
cmp
in
cmpsb
xorb
and
pop
sub
fs
ffree
add
xchg
vdivsd
clc
shrl
mov
frstor
imul
insl
pop
sub
adc
sub
add
dec
dec
ss
shl
fistps
inc
pushf
pushf
popl
bt
pusha
xor
pushf
stc
xor
pushl
cmp
xor
clc
xor
test
test
xor
test
xor
cmp
xorl
test
jmp
push
pushl
pusha
movl
push
pushf
lea
jmp
xor
pushf
pushl
popf
pushf
push
pushl
ret
push
movb
movl
pushf
pushf
lea
jmp
xor
bt
xor
cmc
xor
cmc
xor
clc
pushf
xor
push
xorl
pushf
pushl
popf
mov
pushl
ret
pushf
pushf
popl
cmc
xor
cmp
xor
call
pusha
pushf
popl
call
pushf
pushf
popl
jmp
xor
cmc
jmp
jmp
pushf
pusha
movl
pushf
mov
pushf
lea
jmp
xor
pushl
xor
push
xor
jmp
jns
add
mov
imul
jae
icebp
add
call
push
cs
loopne
xchg
int3
aam
cld
ds
das
cmpsb
adcb
dec
lods
cwtl
cmc
mov
sub
and
push
addl
mov
ljmp
mov
xchg
xchg
xchg
sahf
lock
fnstsw
jge
cs
xchg
aam
xor
mov
sti
or
pop
push
js
test
out
mov
idivb
or
fiadds
jne
test
add
out
mov
xor
shrb
es
xor
or
or
js
lret
ret
and
ret
js
xchg
and
ljmp
cmpsb
mov
std
aaa
fadd
rolb
dec
nop
shl
je
fisttpl
aam
shrl
push
clc
enter
sbb
dec
fidivl
cmp
repnz
mov
and
mov
add
cmpsb
lds
dec
into
xor
push
test
xor
jmp
xor
push
xor
jmp
pop
add
fbstp
push
fucom
inc
or
enter
sub
decb
mov
stc
mov
stos
cmp
into
loop
jns
cmp
outsl
rcl
lds
outsb
ret
int3
inc
mov
cmp
or
mov
add
xor
inc
dec
xchg
enter
push
mov
mov
cmpsb
xchg
dec
add
ret
lret
outsl
push
test
ljmp
sbb
push
in
jecxz
or
mov
in
or
dec
jo
and
call
pusha
cmp
orb
mov
xor
gs
loope
mov
inc
gs
int3
sbb
adc
xchg
pop
xchg
push
popa
push
fldcw
shll
cmp
mov
adc
push
mov
jmp
outsl
adc
jae
out
pop
pop
jns
push
addb
cmc
mov
movntps
ficomps
gs
fwait
sbb
arpl
or
rol
pop
insl
xchg
jo
mov
xchg
xor
test
lcall
daa
jnp
mov
and
sbb
test
lret
sub
aam
jmp
push
mov
in
rclb
outsl
jmp
cmp
cmp
test
mov
push
add
cmc
movl
mov
xorb
int
cmp
icebp
insb
xor
jmp
jmp
fstp
pushf
pusha
movl
jmp
repz
sarb
mov
or
sbb
add
in
aad
leave
gs
sahf
loop
sub
cld
iret
push
ds
adc
arpl
mov
sub
pop
test
sub
int
xorb
in
mov
ja
mov
nop
jno
push
mov
mov
mov
sub
repnz
fisttps
bound
pushf
inc
femms
mov
cmp
mov
adc
movsb
and
mov
pop
sub
out
test
movsl
movsb
mov
es
imull
roll
xor
dec
mull
or
fs
or
mov
mov
addr16
enter
mov
mov
jl
mov
jae
out
lds
jbe
lahf
mov
icebp
adcb
xor
adc
add
loop
testl
sar
aaa
cmp
bound
or
sub
mov
ficoml
and
mov
push
mov
push
inc
jne
and
fsubrp
add
xor
sub
mov
sbb
sub
mov
sti
cld
push
addl
enter
and
xor
leave
rcrb
out
mov
insl
pop
push
push
dec
jo
push
sbb
adc
movsl
ja
push
pop
inc
sbb
hlt
cwtl
clc
dec
shlb
ja
mov
dec
xchg
sbb
leave
ss
fmulp
js
mov
mov
inc
jbe
mov
add
jnp
and
push
mov
sub
and
inc
data16
push
pop
stos
mov
adc
lds
addl
adc
mov
ljmp
inc
mov
shrl
in
push
push
scas
stos
movsb
add
fidivrs
loop
jmp
negb
dec
and
aam
ds
dec
jle
je,pn
in
sbb
jge
adc
mov
and
cmc
xorl
lock
lea
jge
and
sub
fstps
cmc
xor
jmp
fiaddl
pushf
jmp
and
ljmp
stos
inc
add
jle
in
xor
cmp
repnz
fmul
gs
push
jbe
addb
imul
push
xchg
or
in
pop
mov
ficompl
out
dec
frstor
out
ja
mov
fimuls
icebp
mov
aas
push
lea
roll
dec
or
jle
push
ja
ja
pop
int
dec
mov
dec
jno
mov
jno
or
mov
xor
mov
inc
sub
xchg
gs
lahf
das
mov
lea
stos
stos
jl
push
gs
mov
arpl
xchg
lock
pushf
je
dec
pop
lret
push
push
lds
shlb
sub
xor
cmpsb
adc
push
test
pop
pop
dec
xlat
jmp
insb
inc
mov
mov
mov
xchg
shll
push
fs
jo
icebp
inc
ljmp
lds
lcall
xlat
out
push
jnp
hlt
icebp
mov
push
jb
pusha
and
ljmp
dec
or
arpl
or
imul
jmp
and
xor
repnz
cs
lea
adc
test
in
sub
push
jo
mov
mov
add
iret
lea
xchg
nop
ret
jae,pt
inc
cmp
imul
insl
les
sub
mov
int3
mov
imull
repnz
mull
add
bt
push
xor
cmc
xor
cmc
xor
stc
xor
cmp
xorl
test
test
xor
cmp
pushf
xor
cmp
xor
cmp
pushf
pushl
popf
pushl
pushf
pushl
ret
pusha
pusha
movl
push
push
jmp
jmp
pop
dec
push
incl
out
mov
stos
loop
leave
cld
add
push
mov
data16
sub
daa
sti
add
nop
imul
ljmp
inc
cmc
lods
es
sahf
mov
aam
mov
jb
scas
sti
test
js
adc
lahf
push
pusha
or
lock
pop
popf
fs
sbb
lcall
mov
adc
fidivl
jnp
nop
aas
popf
je
ret
into
xchg
lds
arpl
mov
call
mov
popf
insl
mov
daa
in
pop
adc
push
pop
daa
inc
push
sarl
inc
mov
in
dec
int3
inc
int
addb
jbe
stos
lods
insb
jns
mov
fdivs
inc
jnp
or
icebp
rol
icebp
leave
lret
jno
sbb
sahf
scas
xlat
addl
xchg
fadds
sbb
mov
daa
ficomps
sbb
inc
insb
xchg
inc
add
cmp
mov
push
sti
cs
cld
std
loop
addb
pmuludq
push
inc
inc
sub
lret
les
fs
inc
into
mov
sbbb
imulb
push
std
or
lret
xor
cmp
std
andl
enter
jno
out
lcall
mov
mov
pop
mov
xor
test
sub
jge
leave
in
cwtl
dec
dec
shll
aam
pop
roll
shll
xlat
test
xchg
jno
out
xchg
add
inc
mov
repz
xchg
push
out
and
pop
clc
sbb
ret
push
mov
push
roll
mul
mov
mov
pop
xchg
lea
and
xor
xlat
jle
notb
mov
test
pop
fnstsw
stc
test
lret
or
dec
pop
adc
imul
sub
outsb
dec
sub
scas
push
icebp
pusha
xchg
and
imul
test
ja
jbe
sahf
xchg
rcl
lods
ret
jecxz
and
lds
pop
sub
lea
cmp
jnp
sbb
inc
inc
mulb
cld
adc
sbb
arpl
cmp
leave
stos
mov
aas
xor
inc
inc
dec
inc
lcall
aam
dec
cltd
pusha
shll
jge
adc
jle
push
incl
dec
call
pushf
aam
mov
xor
push
xchg
lea
dec
sbb
inc
insb
adc
mov
adc
push
sub
push
js
addl
adcb
inc
and
pop
movsl
jbe
jmp
movl
pushf
pushf
pushf
call
pusha
push
pushf
popl
bt
stc
xor
push
pushf
xorl
jmp
pusha
pushf
popl
stc
test
xor
call
call
movl
call
jmp
dec
loope
lea
outsl
sub
lods
xchg
inc
pop
push
and
or
out
cmp
hlt
pop
fdivs
dec
mov
dec
pop
repz
xchg
aaa
insl
push
jecxz
rorl
test
imul
loope
dec
xchg
xchg
mov
ljmp
popf
gs
movsl
imull
ret
xchg
mov
int
ja
or
inc
and
mov
int3
pop
push
bound
fadds
mov
arpl
popf
fiadds
lods
jmp
xchg
mov
lods
and
js
out
aaa
ja
mov
inc
push
and
xchg
lcall
or
cmp
out
imul
xor
push
rcrl
insl
aam
cs
or
cmp
lock
add
sbb
push
jmp
imul
repnz
test
inc
inc
and
je
inc
and
addr16
call
mov
outsl
andl
sub
mov
pop
xor
mov
fmul
out
pushf
xchg
jge
dec
out
cmpsl
pop
jle
stos
out
dec
mov
mov
movsb
stos
xchg
jmp
push
push
jno
push
addr16
sub
jne
inc
sahf
lahf
adc
push
insb
adc
xor
adc
or
add
add
les
scas
je
fidivrl
mov
in
rolb
mov
mov
cmp
mov
pop
outsl
push
sub
adc
mov
mov
sbb
or
adc
push
sub
and
or
int3
or
shlb
ja
in
add
fdivl
inc
lods
jle
aad
rol
test
cld
mov
mov
shlb
test
iret
lret
or
rcrb
xor
mov
lret
jle
or
adc
xor
push
or
or
lahf
dec
nop
movsl
add
sbb
in
or
adc
cmp
push
push
xor
cmp
fdivrs
outsb
and
add
je
lcall
add
in
sub
and
aad
iret
test
inc
xchg
popa
mov
and
loope
shl
das
cmp
std
divb
pop
push
pop
push
push
fisubs
mov
inc
inc
add
lret
scas
jne
xchg
add
rcr
loope
mov
jo
mov
adcl
mov
mov
adcl
mov
xchg
xor
test
call
pushf
xor
test
cmp
xor
pushf
xor
call
stc
xor
cli
ficoml
in
cmp
mov
xlat
mov
or
mov
mov
sbb
add
in
xchg
adc
dec
cmpsb
inc
test
clc
out
jne
mov
mov
insl
inc
cmpb
out
and
mov
leave
sbb
aaa
xor
sbb
out
and
ds
and
rorb
cmc
test
jle
adc
sahf
repz
icebp
xchg
or
std
sbb
sub
mov
roll
dec
popl
pop
stos
imul
mov
jno
insb
cmpsl
ret
and
push
movl
push
push
movl
pushf
pushl
push
lea
jmp
push
pushf
movl
pushf
call
call
call
pusha
movl
call
pushf
clc
pushf
xor
jmp
push
pushf
pusha
mov
pushl
lea
jmp
xor
push
test
xor
push
xorl
pushf
xor
call
call
movl
pusha
movw
movl
movb
lea
jmp
xor
clc
cmc
xor
jmp
call
jmp
test
xor
pushf
xor
cmp
cmp
xorl
bt
jmp
cli
dec
gs
dec
jmp
cmpl
push
notb
mov
pop
fmulp
cmp
jne
add
fisubrs
cmp
cmp
or
cld
jne
test
push
pop
mov
sarl
ret
sub
aam
jecxz
mov
cmpsb
push
pop
xchg
push
insb
addr16
mov
ret
add
xchg
loope
adc
jns
pop
sbb
in
push
mov
ret
lods
xchg
ret
jbe
push
imul
add
iret
push
cmp
fcoml
cwtl
cmpsb
push
in
outsl
adc
xor
jmp
test
lods
push
sarb
mov
sti
add
pop
shll
cmpps
out
mov
pop
inc
call
cmc
pop
and
lcall
aas
imul
mov
pushf
fwait
ret
push
mov
inc
adc
push
movl
pushf
jmp
xor
cmp
cmc
xor
pusha
xor
stc
xor
clc
xorl
mov
mov
xor
clc
pusha
xor
test
clc
xor
clc
cld
pushl
popf
pushf
movb
pushl
ret
call
xor
clc
xor
pushl
xor
pushl
xor
stc
xor
cmp
pushf
xor
call
jmp
sbb
clc
push
fcoms
lods
jmp
daa
mov
dec
ror
mov
ds
dec
push
cmp
sub
pxor
and
enter
loop
fsts
mov
mov
icebp
lods
lea
inc
out
movl
push
pushl
movw
pushl
movl
pusha
pushf
movb
lea
jmp
push
mov
adc
xchg
cmp
dec
scas
jo
mov
cmp
xchg
inc
es
jge
scas
add
jecxz
sbb
ret
imul
push
ret
daa
jp
or
jle
sbb
pop
sub
push
aam
cmpsl
pop
adcl
pop
clc
mov
xchg
lea
rcll
out
xchg
jecxz
test
dec
mov
popf
fwait
cmp
pop
dec
syscall
xchg
xlat
roll
xchg
jecxz
addr16
pushf
cltd
mov
out
js
orl
sub
je
call
sub
mov
popa
mov
movsb
cmp
mov
jb
outsl
mov
into
fbstp
mov
ljmp
jmp
imul
jg
clc
or
fs
push
xor
out
pop
add
in
popf
nop
and
mov
out
mov
pop
mov
jbe
push
jmp
push
jmp
push
push
pusha
movl
pushf
lea
jmp
call
movl
pusha
mov
push
movb
lea
jmp
xor
jmp
pushf
push
movl
jmp
xor
bt
xor
cmp
xor
push
bt
xor
bt
xor
test
pusha
xor
bt
jmp
pusha
xor
call
das
xorl
or
loopne
xchg
jne
rcrl
mov
or
add
call
lods
lods
test
pop
add
or
rcll
xchg
xchg
mov
loopne
sub
pop
loopne
int3
sub
ret
dec
pop
sbb
mov
push
loopne
add
test
or
cmpl
rclb
jmp
cwtl
stos
dec
push
out
sub
pop
stc
stos
or
cmp
out
mov
incb
lret
mov
ror
pop
movl
pushl
jmp
push
movl
mov
push
mov
push
lea
jmp
ret
adc
fcompl
sbb
push
enter
xchg
daa
test
mov
jne
push
adc
mov
dec
sub
dec
orb
bound
iret
jmp
push
fwait
dec
pop
icebp
cmpl
xor
dec
add
ljmp
cmp
pmuludq
test
sbb
fsubr
cmpsb
cmp
out
lret
test
mov
shr
stos
cmc
cwtl
add
mov
jmp
jno
adc
jns
adc
pop
dec
jge
xchg
js
sub
inc
mov
cmpxchg8b
jbe
out
fistl
jle
push
outsb
jmp
xlat
and
jle
jo
lods
push
pop
inc
mov
cmc
in
std
push
and
jg
sub
icebp
push
push
pushf
popl
pushf
xor
jmp
pushf
movl
call
sbb
lret
add
cwtl
mov
push
nop
xchg
pop
into
ret
xchg
add
pop
jecxz
pusha
aam
xchg
xor
xor
rorb
cmp
popa
out
sbb
hlt
sbb
faddl
sti
sbb
test
cmp
cli
pop
jg
pop
pop
xchg
test
movsl
pop
int3
mov
scas
inc
xchg
adc
lods
cmp
fstpt
pop
xor
pop
mov
out
fisttps
jmp
push
popf
pop
les
xor
sub
clc
jne
mov
push
test
mulb
je
insl
imul
cli
aam
mov
test
rorb
add
js
in
adcb
int
iret
or
mov
mov
lahf
push
sub
movsl
xor
roll
add
mov
cmpsb
ret
insl
xchg
push
sbb
xchg
lret
rorb
sarl
xor
cmp
js
mov
ret
push
cmp
clc
ljmp
jb
push
add
inc
sbb
hlt
mov
gs
ss
push
add
or
sbb
add
aas
pop
fldl
jo
adc
jecxz
in
lret
cmp
and
test
ljmp
fists
dec
adc
paddsw
and
mov
cmpsl
sub
test
scas
mov
icebp
in
mov
jns
mov
pop
sbb
pushf
fs
and
adc
inc
test
inc
pop
out
loope
dec
sarl
aas
mov
push
sbb
mov
aas
or
push
mov
adc
xor
jb
adc
in
jb
mov
cmpl
sbb
mov
pop
icebp
icebp
and
dec
aad
push
js
fisubl
push
xchg
sbb
xor
xchg
cmc
jbe
adc
cmp
sub
cs
sbb
inc
fistpll
repz
and
mov
pop
push
or
xchg
scas
mov
js
scas
ds
xor
mov
out
ficompl
popa
outsl
ja
fistpll
fldl
xor
out
pop
sub
or
push
mov
stos
idivb
stos
ja
out
xor
jmp
ror
sbb
iret
xor
push
imul
mov
cmp
movl
pushf
pushf
movl
push
pushf
pusha
lea
jmp
push
arpl
loopne
int
lods
dec
add
add
dec
jp
add
js
xchg
cwtl
sbb
sbb
cwtl
mov
inc
mov
dec
add
rorl
push
out
adc
lea
test
cwtl
adc
enter
clc
insb
cld
lods
movsb
pushf
add
sahf
jmp
mov
shrb
xchg
mov
stos
dec
mov
push
hlt
mov
inc
imul
ret
lods
or
inc
mov
out
fsubp
dec
xorl
adc
sbb
jo
insb
sub
sub
or
sub
pusha
or
mov
popa
inc
test
xacquire
scas
pop
cmp
xor
add
gs
int
adc
mov
out
add
pusha
mov
xchg
dec
inc
add
movsb
dec
add
xchg
ret
jg
bnd
out
scas
sub
cmp
sub
adcl
je
mov
or
insl
inc
popa
dec
push
decl
pop
push
hlt
sbb
xlat
inc
sub
scas
push
pop
push
pop
jns
ss
push
cwtd
push
xchg
mov
test
push
std
repnz
adc
pop
das
das
adc
clc
lds
jns
xchg
adc
loopne
mov
or
inc
bound
cmp
outsl
xchg
std
mov
cmc
divb
xlat
jg
insl
outsb
pusha
lret
and
mov
out
lret
add
popa
rolb
cmp
adc
push
fcomps
mov
cmpsl
add
inc
inc
inc
inc
jnp
sti
daa
arpl
dec
adc
les
gs
mov
pop
adc
mov
testl
pushf
mov
sahf
js
pop
pusha
clc
xchg
xchg
shll
xchg
adcb
cwtl
inc
mov
es
sbb
push
outsb
push
push
es
dec
addl
push
adc
sub
jp
incl
adc
xor
stc
clc
xorl
cmp
pushl
popf
movb
pushf
pushl
ret
movl
pusha
pushl
call
pushl
popf
movw
pushl
ret
pusha
call
push
pusha
mov
jmp
movl
pushf
call
pushf
movb
jmp
pusha
pushf
popl
mov
clc
xor
pushf
xor
cmc
xor
cmc
stc
xor
mov
xor
clc
pushf
xor
bt
xorl
pusha
xor
cld
pushl
popf
pushl
push
pushl
ret
inc
jb
sbb
emms
and
sub
sysexit
gs
and
dec
pop
xchg
and
rolb
push
push
loopne
mov
cmpsl
std
fwait
fs
push
cltd
xchg
fs
xrelease
jbe
nop
stos
add
je
mov
xor
loopne
pushf
in
push
mov
xchg
out
cli
adc
push
adc
ds
scas
cmpsl
mov
arpl
push
inc
lret
mov
push
add
mov
adc
mov
shlb
pusha
lret
xor
xchg
js
ja
nop
jns
fimull
sbb
pop
adc
addr16
mov
jns
cmp
mov
sar
test
repnz
cmp
enter
ss
ljmp
rclb
rcr
xor
push
adc
roll
scas
insl
dec
fnstcw
cmpsb
ds
aam
in
lods
mov
in
lods
add
stos
mov
bound
xor
inc
xor
xor
clc
jmp
pushf
xor
cmc
xor
clc
pusha
xor
bt
xor
mov
test
xor
cld
pushl
popf
movb
pushl
ret
jmp
xor
mov
xor
cmp
cmp
pushl
popf
movl
push
pushl
ret
xor
pushl
xor
pushl
pusha
xor
bt
xor
bt
xor
cmp
xor
cmp
test
pushl
popf
movb
push
pushl
ret
pusha
movl
mov
pushf
pusha
movl
pushf
movb
lea
jmp
pushl
popf
pushf
movb
pushl
ret
movl
call
clc
xor
pushf
xor
movb
clc
xor
cmp
clc
pushl
popf
pushl
pushf
pushl
ret
ja
dec
sbb
mov
mov
lea
popa
xor
ror
out
test
mov
mov
dec
xchg
push
push
jle
sub
and
xchg
ljmp
arpl
imul
push
ja
add
mov
push
pop
test
sub
xchg
sub
and
iret
mov
sbb
mov
xor
push
pop
push
outsl
insb
int
rorl
movsl
mov
sub
jmp
cmpsl
xchg
stos
cltd
addl
out
out
sbb
sbb
jne
test
or
out
cmpb
jns
nop
loopne
lcall
loop
subb
pushf
loop
scas
xor
icebp
loopne
mov
adc
xchg
mov
pop
scas
ret
icebp
xchg
xchg
shl
jmp
and
fisttpll
inc
adc
movsl
mov
xchg
jge
in
movsl
lods
popf
movsl
loope
xlat
addl
push
sub
lahf
mov
xchg
sbb
popf
lds
lret
mov
and
xlat
jno
jbe
mov
sahf
adc
inc
call
push
fdivrs
imul
sahf
xchg
ud0
sbb
out
dec
sub
mov
xor
push
outsb
push
jbe
and
mov
pminub
pop
inc
fwait
inc
call
xchg
rorb
addl
fnstcw
xchg
scas
jnp
xchg
mov
jbe
ljmp
pop
iret
mov
mov
push
inc
add
cmpsl
jns
call
mov
xchg
adc
cltd
repz
or
sub
fisttpl
push
jo
push
pop
cmp
cmp
lock
and
pop
jns
and
shrl
xlat
dec
or
out
xchg
sti
or
hlt
mov
add
mov
imul
adc
and
adc
push
imulb
push
mov
dec
jno
out
dec
mov
adc
sub
cltd
jo
bound
movsb
sbb
adc
test
test
push
retw
xchg
sahf
jp
xor
xchg
ja
imul
scas
arpl
mov
push
lods
xchg
xor
cmp
repz
jp
popf
imull
xchg
data16
mov
pop
inc
jns
xor
add
pushl
jno
add
xor
inc
pop
filds
jne
dec
flds
sub
jo
les
fistps
adc
lods
mov
or
mov
repnz
jecxz
xor
lret
in
int3
inc
mov
push
scas
xor
or
ss
push
pop
ja
cmpsb
push
sbb
rorl
imul
and
addr16
or
jne
mov
xor
xchg
xor
pop
out
fwait
jl
fistps
sbb
or
lods
outsb
push
dec
sbb
push
cmp
test
lock
xor
and
sbbb
ficoml
ja
jae
push
sub
xor
cmp
and
push
jb
and
or
cmp
push
cmp
test
in
dec
arpl
nop
adc
mov
mov
fisubs
mov
fists
addr16
test
fists
popf
aad
mov
xchg
xlat
dec
gs
shl
or
es
push
jne
mov
push
int3
repz
push
xor
jns
test
call
into
andb
or
inc
mov
push
ret
jp
enter
push
jmp
mov
int3
sbb
hlt
pop
and
sbb
and
mov
in
ret
jbe
pop
clc
inc
out
test
xor
cmp
mov
xchg
xor
fcomip
int
orb
and
cmp
cwtl
and
fcompl
daa
mov
fbstp
sbb
rcr
sbb
movb
mov
mov
sub
insl
imul
out
xchg
andl
push
pusha
movl
pushl
pushf
lea
jmp
xor
push
jmp
ljmp
imul
call
xchg
stos
mov
xchg
cmovg
shlb
xchg
xlat
out
mov
mov
test
sub
in
in
ficompl
jo
cld
es
mov
dec
addr16
pop
xchg
js
push
add
lret
test
jae
jg
call
dec
mov
mov
mov
xor
mov
call
shl
dec
jmp
ss
nop
xor
or
pusha
das
cmpsb
test
lds
push
sbb
cmp
sbb
insl
pop
loopne
sub
sub
mov
jb
fnsave
fistpl
adc
cmp
pushf
ficoml
test
ja
out
xchg
dec
inc
jb
repnz
xorl
les
jne
jmp
stos
ljmp
lahf
test
xor
jmp
push
push
movl
pushf
movl
push
push
pusha
movb
lea
jmp
movl
pushf
lea
jmp
test
push
and
mov
subb
dec
push
into
cmp
std
nop
pop
mov
ja
sub
into
testb
shl
cltd
push
push
aas
mull
add
inc
imull
rclb
xchg
or
imul
shll
imul
adc
push
push
xor
cmp
xor
movb
mov
xor
cmp
xor
clc
xor
clc
xorl
cmp
stc
pushl
popf
pushf
pushl
ret
pushl
pushf
pushf
movl
pushf
pusha
lea
jmp
push
movl
movb
push
push
movl
movb
pushf
pushl
movb
lea
jmp
pushf
movl
movw
pushf
push
lea
jmp
jno
pusha
pusha
movl
movw
pushf
movl
pushf
push
mov
mov
lea
jmp
pusha
mov
pushf
popl
movw
test
xor
clc
test
xorl
clc
mov
xor
jmp
out
out
and
lods
out
cli
and
or
dec
mov
sbb
inc
cmp
icebp
js
mov
movsb
lods
xorb
iret
inc
push
subb
inc
cmpsb
lods
int3
sub
mov
or
mov
sub
mov
jle
iret
ss
xlat
and
jecxz
cld
dec
lahf
insl
sbb
xchg
cmp
mov
addb
movsb
mov
xor
and
aad
jge
roll
aaa
pop
cmp
mov
int
or
mov
in
data16
push
mov
inc
push
movsb
mov
jl
je
push
pop
repz
rcrl
mov
ljmp
rorb
xchg
fsubrl
into
rcrb
mov
sahf
jae
daa
stos
es
dec
dec
inc
inc
lahf
push
sbb
pop
mov
out
daa
js
lret
iret
rorb
add
cmp
inc
or
mov
imul
std
and
mov
sahf
imul
fnstenv
fs
sbb
sub
push
add
in
lods
test
mov
mov
repz
das
negb
daa
fwait
jl
aam
cld
xor
pop
adc
dec
ljmp
call
mov
cmp
in
dec
adc
sub
mov
arpl
inc
mov
or
aam
sbb
and
push
mov
xor
inc
dec
insl
lods
mov
sub
cld
lock
push
sbb
loope
movsl
inc
adc
cli
or
addr16
fwait
rcrl
inc
pop
or
mov
aaa
and
fs
mov
mov
shll
inc
fmul
push
insl
rorl
jmp
ja
and
push
and
fstl
imul
in
push
in
push
inc
sti
fisubrl
fisttpll
iret
mov
mov
popa
lret
mov
jne
insb
lock
sti
xchg
stc
mov
popf
pop
int3
mov
add
pop
pop
iret
notl
cmpsb
inc
loope
adc
hlt
xlat
inc
dec
mov
dec
pop
sbb
mov
test
mov
out
outsl
fwait
inc
ja
aam
jne
cli
sbb
push
push
fisttpll
sub
sti
push
mov
test
hlt
pushf
test
jg
pushf
or
pop
mov
dec
mov
ljmp
dec
push
fdivrl
sub
sbb
ljmp
fimull
lcall
cmp
jb
fnsave
mov
inc
adc
jge
cs
push
or
je
push
pop
bound
fs
mov
cwtl
jnp
push
test
xchg
pushf
in
lcall
sbb
xorl
stc
clc
pushl
popf
pushl
pushl
ret
call
push
movl
pushf
pusha
pushl
lea
jmp
movl
push
jmp
test
xor
push
clc
xorl
cmp
cmc
xor
mov
xor
pusha
xor
cmp
clc
xor
call
in
xchg
sbb
inc
repz
hlt
pushf
jae
add
mov
stc
ret
std
mov
xor
in
cmc
dec
xor
inc
push
mov
out
add
pop
rep
sbb
sub
mov
push
sbb
out
and
xor
leave
aad
mov
lcall
xchg
mov
add
call
cld
dec
jmp
repz
jae
daa
outsl
mov
fwait
pop
mov
mov
loope
inc
test
addr16
or
sbb
int3
lahf
lcall
push
mov
xor
cmp
mov
cli
pushl
repnz
xchg
push
movsl
fcmovnu
push
xor
mov
push
bound
addr16
repnz
iret
sub
insl
inc
loope
lahf
jae
dec
scas
mov
lret
in
mov
cmp
cli
mov
loop
notb
rolb
xorl
jmp
push
pushf
popl
pushf
xor
stc
xor
pushf
xor
jmp
xor
call
xor
bt
call
bt
xor
call
dec
in
sub
subl
mov
mov
mov
xchg
jg
xor
push
das
out
lods
add
pushf
bound
mov
xchg
pusha
inc
xchg
add
cld
xchg
pop
pop
std
cmp
push
push
xchg
inc
clc
jmp
call
pop
jo
add
cwtl
ror
in
mov
fs
into
mov
adc
cmpsl
filds
lahf
pop
dec
inc
out
out
test
pop
mov
pusha
add
mov
mov
loopne
js
xchg
stos
int3
pushf
jl
aaa
out
fs
cmpsl
lods
and
imul
repnz
mov
ret
dec
in
lahf
pand
pop
pop
jae
inc
cld
xor
jle
pop
testb
xchg
aaa
sarb
xor
pop
outsl
ret
push
xor
fistpll
imul
aaa
push
cli
inc
cwtl
inc
cmp
bswap
cmpsl
xor
rorb
add
xchg
arpl
out
scas
or
xor
push
fimuls
inc
ja
jle
dec
xchg
js
add
fidivrl
fdivrl
clc
cltd
xchg
ret
lds
cltd
cmp
test
pop
xchg
xor
push
pop
into
and
jmp
leave
xchg
mov
mov
cmpsl
inc
out
mov
xchg
add
enter
mov
movsl
ja
push
push
dec
subl
push
inc
pop
es
ret
test
std
je
xchg
push
loope
test
jl
add
stc
xor
cmc
xorl
push
xor
stc
xor
push
xor
clc
clc
xor
clc
stc
xor
bt
xor
test
pushl
popf
mov
pushf
pushl
ret
push
pushf
popl
jmp
movl
pusha
lea
jmp
pushf
push
pusha
movl
movb
pusha
lea
jmp
divb
mov
adcl
adcb
push
arpl
pusha
pop
outsl
mov
orl
inc
xor
mov
shl
scas
mov
jge
loop
mov
mov
fisubs
jg
cmp
lea
int
mov
and
aad
loope
dec
mov
clc
push
xchg
iret
add
dec
icebp
sbb
aam
add
repnz
mov
pop
or
pop
pop
sub
dec
mov
and
dec
ficompl
mov
rcll
arpl
js
push
aas
xchg
push
scas
packuswb
test
jns
mov
xchg
sbb
rcll
daa
xor
andb
sbb
ss
xchg
pop
rorl
out
xor
je
add
loop
pop
jbe
pusha
fdivs
lcall
add
addb
ret
sub
inc
out
mov
aad
js
mov
xor
cmovge
out
fld1
out
pop
movsb
mov
into
push
or
out
add
dec
in
fnstcw
pop
pushf
fs
dec
loop
fcomip
dec
shlb
shl
mov
ss
scas
gs
mov
xor
dec
push
or
imul
pop
or
pop
jo
in
inc
jne
inc
cmp
or
sbb
mov
mov
push
es
xchg
sub
pop
cpuid
pusha
movl
call
xchg
sub
pop
shlb
inc
or
inc
pop
sarl
add
jp
add
add
std
xor
push
jbe
or
jb
dec
sub
cs
xchg
aas
mov
call
call
call
call
push
xor
clc
cmp
xor
pusha
clc
pushl
popf
push
pushl
ret
pushf
popl
jmp
call
push
movl
pusha
lea
jg
push
movb
movl
pushf
lea
jmp
push
call
movb
jmp
or
cs
sbb
imul
jmp
nop
inc
sbb
in
push
pop
stos
sarl
xor
dec
mov
cwtl
es
adc
out
jns
lock
mov
xchg
lret
repnz
shr
sbb
shr
and
xchg
scas
call
ret
mov
xchg
jno
xchg
xchg
repz
cwtl
std
pop
out
cmpsl
leave
test
push
mov
push
mov
adc
fs
cmp
data16
or
enter
adc
out
bound
sbb
sub
mov
dec
push
cmpsb
dec
clc
fsubr
out
outsl
mov
ret
js
in
popf
pop
stos
and
mov
pop
and
imul
jl
es
jo
js
das
jg
hlt
test
mov
jge
icebp
dec
sarl
inc
stc
mov
call
push
pusha
lea
jmp
pushf
jmp
jmp
int3
cvtpi2ps
mov
pop
addr16
dec
xchg
gs
inc
scas
sti
sti
or
adc
and
loop
test
je
dec
imul
jg
dec
mov
je
daa
xchg
out
push
mov
jmp
add
xchg
call
aam
add
pop
ret
cmpsl
pop
or
jmp
test
ret
inc
in
outsl
pop
orl
sbb
mov
mov
cmc
jno
sub
xchg
hlt
mov
or
test
push
mov
mov
loop
mov
mov
mov
fistps
and
inc
call
adc
gs
mov
sub
xchg
add
lods
inc
stc
lcall
fwait
sub
xor
idivb
enter
sub
loopne
xchg
mov
pop
into
pusha
dec
adc
idivl
pop
mov
scas
pushf
mov
xchg
cmp
dec
jae
cmpsb
push
call
cmpsl
clc
cmpsb
aam
dec
mov
ds
pop
sub
and
inc
rcrl
push
pusha
xor
lret
dec
dec
jg,pn
mov
sbb
xorl
mov
push
in
mov
leave
fisubs
ljmp
push
in
ja
push
stos
push
lahf
xchg
dec
out
sbb
shll
mov
jns
je
pusha
cmp
dec
cmp
xlat
jp
adc
and
daa
gs
dec
cmp
bound
mov
lret
adc
stos
ffreep
divb
xchg
dec
jne
adc
out
mov
popl
cmc
pushf
xor
cmp
xorl
movl
call
movl
pushf
movb
pushf
movb
lea
jmp
pusha
pusha
movl
mov
movl
pushf
pushf
pushf
lea
jmp
call
xor
pushf
pusha
xor
test
jmp
jmp
pushl
popf
pushf
pushl
ret
xor
test
xor
bt
jmp
pushf
clc
xorl
bt
pusha
xor
clc
stc
xor
jmp
pusha
jmp
clc
xor
cmc
xor
call
add
cmp
mov
fistps
inc
pop
aad
xchg
lock
scas
test
insl
ja
jl
cmp
mov
inc
jnp
pop
sub
ret
cmp
add
imulb
orb
cmp
sahf
cli
ret
shlb
and
dec
mov
inc
dec
cli
mov
inc
icebp
adc
push
pop
push
and
mov
cld
scas
leave
mov
fwait
testl
and
ja
das
icebp
push
jo
icebp
sbb
das
dec
ljmp
rcrb
jb
pop
imul
ret
out
testb
or
jns
mov
push
add
aam
or
sub
mov
fists
cmpsl
outsl
cwtl
outsl
push
pushf
popl
call
call
lret
stos
aad
or
jnp
xchg
sbb
sbb
mov
enter
cmpsl
scas
jo
pop
loop
cmpsb
mov
cmp
push
push
int3
cmp
rclb
ds
sbb
jle
sbb
outsl
cmp
fs
stos
push
clc
push
jle
cld
inc
cmpsb
jb
pop
popf
pusha
inc
mov
add
fldl
pop
add
repz
loope
push
dec
cs
mov
xor
inc
and
push
and
js
sahf
sbb
and
or
lahf
dec
jmp
pusha
xor
bt
pushl
xor
call
lea
jg
push
pusha
push
pusha
lea
jmp
pusha
movb
pusha
movl
push
pushl
pushf
lea
jmp
push
xor
stc
call
pusha
pushf
popl
pushf
stc
xorl
clc
clc
xor
stc
stc
xor
jmp
pushf
pushf
popl
call
lock
sahf
mov
dec
mov
insl
mov
jl
out
cmp
jg
pushf
cltd
fcmove
shlb
mov
dec
icebp
insb
lahf
or
push
ja
jns
push
movsb
in
pop
shlb
xchg
or
xor
cmp
adc
mov
sub
cmp
or
xlat
arpl
cli
cmc
fs
add
push
mov
add
fists
push
lret
jne
ret
cmp
cmp
cmpsl
test
xchg
and
push
jae
ljmp
jnp
repnz
jge
mov
jge
cld
pusha
movl
movb
lea
jmp
movb
mov
push
movl
pushf
push
mov
lea
jmp
add
iret
xor
dec
inc
xchg
mov
mov
sbb
ljmp
ret
les
pop
sub
push
les
jns
cmovno
imul
mov
cmp
cmc
das
or
jmp
repnz
push
test
push
data16
inc
dec
lahf
outsl
in
adc
test
nop
inc
mov
sbb
int
sbbb
aad
nopl
xlat
leave
icebp
add
aas
jno
xor
jb
test
add
pop
iret
fwait
lods
lea
into
call
icebp
push
es
xor
cmc
ljmp
jo
mov
dec
fisubl
int
pop
adcb
xor
sub
or
in
leave
cmpb
mov
jae
sub
mov
sub
cmc
adc
mov
inc
pusha
cmp
add
mov
insb
ret
jae
ret
cmc
cwtl
jae
in
push
je
rcll
push
cli
out
mov
shlb
push
test
cmpsb
adc
jne
pop
and
xchg
or
cmc
mov
out
push
ret
mov
lahf
sahf
loope
xchg
push
stc
pop
sub
mov
pop
cmpsb
dec
imul
push
dec
sub
fldl
in
into
mov
jmp
xchg
out
outsb
adc
daa
cmp
lods
fimull
push
call
daa
xchg
mul
mov
sub
inc
insl
in
sahf
push
es
xchg
push
cmp
out
mov
jecxz
jle
cmpsb
sub
sti
sbb
je
daa
es
jae
add
adcl
mov
out
mov
cmc
xlat
cmp
stos
ret
xchg
pop
push
push
das
jp
sbb
mov
dec
sub
add
cmpsb
mov
inc
fdivrs
fsubrl
mov
xchg
testb
sti
cmp
into
push
es
jg
lods
insb
loopne
inc
in
nop
add
xor
inc
adc
xchg
jns
stc
adc
sbb
loop
rcll
repz
and
cmpsb
sbb
cli
pop
cmp
and
fildl
fldenv
sar
mov
adc
add
xchg
sub
mov
cmp
sub
mov
add
icebp
jecxz
cmc
mov
and
lds
adc
push
movl
call
movl
jmp
pushf
movl
pushf
jmp
stc
xor
test
xor
jmp
pop
out
xor
jno
pop
dec
addr16
mov
stos
push
insb
inc
aad
les
pop
mov
push
pop
cld
repz
mov
xchg
xchg
push
es
adc
sbb
out
ja
mov
arpl
fstl
pop
cwtl
ja
int3
test
jecxz
imul
shr
out
icebp
xorb
push
mov
cmp
or
pop
test
jb
mov
sbb
lea
je
push
push
push
lea
jmp
call
test
xor
call
xor
stc
pushl
popf
mov
pushl
ret
push
lock
std
std
adcb
ds
ret
jae
sahf
jmp
into
lods
es
mov
mov
pop
jno
xor
fwait
jg
std
jge
sub
cmp
aam
push
lret
out
daa
adc
test
jbe
xchg
icebp
icebp
scas
xor
mov
push
mov
xchg
push
push
test
inc
popa
pop
mov
enter
rolb
cmc
mov
jg
cmp
push
xor
call
pusha
movl
push
lea
jmp
les
in
xchg
mov
iret
jbe
int3
icebp
or
jo
in
inc
xor
push
inc
xlat
fmuls
loope
mov
in
pop
pop
push
sub
repz
push
xchg
mov
xlat
jecxz
xor
aaa
pop
adc
jmp
aas
aas
into
xchg
pop
cmp
or
jbe
es
push
daa
jle
sbb
adc
or
pop
pop
pushf
jmp
sub
mulb
divb
cmc
push
jo
adc
fisubl
and
loop
and
mov
push
daa
icebp
les
into
std
xchg
lods
testl
xchg
gs
lock
dec
mov
loopne
jge
aaa
jle
lea
ret
call
scas
inc
push
stos
pusha
int3
sub
adc
idivl
dec
or
inc
add
push
jne
sarb
cmp
push
dec
jbe
pop
leave
xor
and
cmp
int3
into
icebp
mov
mov
test
dec
pop
mov
aaa
aas
cmc
aaa
push
pushf
jmp
pushf
popl
stc
xor
mov
xor
call
xor
bt
call
pusha
mov
movl
call
jmp
movw
xor
push
cmp
xor
clc
xor
cmc
mov
xorl
test
std
pushl
popf
push
mov
pushl
ret
ja
pushf
pusha
movl
pushl
movl
movl
lea
jmp
pushf
popl
call
push
cmp
or
push
repnz
cmp
or
test
gs
or
and
sbb
adc
mov
test
lods
popf
push
test
sar
out
fwait
inc
loopne
xchg
cmp
mov
push
out
add
sbb
mov
addb
shrl
xchg
cld
lret
shlb
jmp
sbb
iret
scas
push
xchg
add
mov
lods
cli
dec
jle
int
jle
mov
gs
sbb
cmp
mull
cmpsl
in
sub
pop
cmp
test
add
ds
dec
inc
fmull
das
add
orps
lods
rcll
add
cmovbe
mov
mov
enter
test
aaa
test
push
je
and
or
and
fimull
add
cmp
xorl
pop
lock
pop
fcomi
int
ds
out
sub
jmp
call
shrl
inc
fdivs
mov
cmp
es
mov
adc
fdiv
in
fstpl
add
push
out
cmp
cli
dec
mov
leave
lds
fcmove
fmul
push
dec
sbb
adc
popf
wrmsr
add
add
and
or
lcall
and
inc
aaa
cwtl
scas
sub
adc
jecxz
addr16
inc
repnz
jo
sbb
sbb
add
lahf
lret
xchg
int
call
adc
mov
dec
sbb
dec
pop
mov
repnz
jp
mov
push
push
imul
push
dec
mov
pop
pusha
outsl
jnp
popa
xchg
xor
pop
lret
cltd
dec
rcll
jnp
dec
dec
lods
xchg
sub
push
dec
out
sar
popf
add
sbb
popf
ret
mov
scas
aam
jge
mov
or
outsb
and
lods
xor
scas
jno
mov
lds
jns
fcoml
pop
cmpsl
cmp
push
sub
inc
fdivp
mov
push
xlat
enter
xchg
dec
mov
xchg
lock
jp
pop
cwtl
jno
sarl
repz
fs
mov
cmp
cmp
clc
xlat
sahf
jne
pop
icebp
mov
out
mov
push
push
stc
mov
int3
adc
bound
fs
pop
vpacksswb
stos
and
ds
mov
dec
mov
jl
push
out
js
cmp
es
inc
or
sbb
stos
and
push
push
mov
arpl
mov
ss
sbb
sbb
mov
popa
cmp
dec
xchg
jno
xor
imul
lea
sbb
pop
xchg
and
flds
sbb
jl
loop
jne
daa
das
enter
mov
dec
je
inc
ret
xchg
push
sub
mov
xor
bound
sbb
sbbb
dec
inc
pop
jns
adc
fadds
nop
jle
dec
push
test
xorl
sbbl
movl
pusha
lea
jmp
xchg
pusha
into
push
add
lcall
mov
and
cmp
popf
dec
test
je
hlt
mov
lret
stc
mov
out
sub
and
and
cmpsb
sti
push
dec
mov
pop
les
shll
les
dec
dec
push
stos
stos
add
mov
mov
cmp
out
inc
cld
lahf
jbe
pop
mov
test
insl
pop
pop
sti
mov
mov
test
xchg
mov
dec
jno
js
pop
daa
andb
dec
js
scas
pop
mov
in
push
sbb
clc
pop
enter
shrb
mov
jg
clc
loop
clc
repnz
mov
test
mov
dec
sub
xor
sarl
mov
push
nop
arpl
out
iret
fldt
mov
push
sub
jg
jg
dec
sbb
add
cmp
cmp
pop
sbb
pop
arpl
pop
push
pop
bound
inc
push
sub
leave
ret
cli
xchg
xchg
lret
cld
addl
lret
mov
popa
scas
pop
mov
outsb
dec
loopne
cmp
in
xchg
rorb
cld
mov
inc
mov
clc
out
aaa
fsubp
icebp
cmp
jo
mov
lods
jecxz
jo
inc
push
in
lret
dec
addr16
insl
mov
xchg
push
test
jl
push
dec
je
jl
or
inc
jb
jnp
lods
in
out
jo
xchg
daa
lock
inc
xchg
mov
addr16
jnp
addl
popa
inc
lahf
mov
mov
lods
imul
xchg
jg
cwtl
mov
imul
jmp
out
ret
xchg
dec
lea
lret
imul
mov
repz
jae
or
cmpsb
leave
stos
xchg
mov
xor
leave
loope
mov
jae
js
js
fildll
cmp
push
iret
dec
mov
rorl
out
insb
dec
mul
insl
inc
mov
ja
pop
pop
sub
cmp
xchg
inc
stc
addr16
pop
fcoms
popf
pop
insb
and
decl
int3
jne
add
sub
add
sbb
pusha
push
cmp
out
notl
nop
mov
outsb
sbb
pop
addl
mov
aaa
add
push
addl
or
jb
out
xchg
mov
imul
insl
cmp
dec
int
or
inc
adc
fldenv
lret
adc
cltd
lds
pop
lods
and
sub
test
cmpsl
mov
scas
push
ss
jbe,pn
push
adc
insb
addl
inc
stc
mov
mov
push
imul
xor
into
fistl
out
ds
add
popa
xchg
pop
mov
aam
mov
mov
adc
inc
js
mov
outsb
and
test
ljmp
stos
xor
sti
icebp
gs
cmp
popf
jecxz
add
and
ss
jge
in
inc
lds
xchg
jmp
adc
stc
mov
inc
or
jmp
push
ss
out
inc
or
add
and
into
je
lahf
xor
lret
mov
jo
scas
in
mov
int
jnp
adc
insb
rorb
add
add
cmp
jo
lock
jae
push
pop
sbb
pusha
inc
ss
bound
sbb
data16
repnz
jg
jne
imul
push
out
cmp
ret
cli
mov
push
ds
xor
push
ss
cli
andb
call
push
inc
adc
cld
orl
and
dec
push
or
incl
sub
in
ret
leave
gs
fimull
test
adc
aas
loopne
sub
inc
jmp
jnp
push
add
cmp
int
add
dec
mov
adc
leave
pop
lret
ror
std
bound
pop
and
lret
clc
jb
sahf
fistpl
jl
and
ja
pusha
movl
push
mov
call
sbb
jne
or
sarb
mov
xor
addl
decb
int
sbb
adc
dec
cmp
mov
add
push
scas
ds
lock
frstor
ret
loop
and
lock
ds
into
negl
scas
scas
cltd
sahf
pop
rol
mov
pop
and
jmp
negb
ds
cmpsl
adc
jae
dec
test
lahf
into
mov
pop
int3
sar
dec
fistpll
mov
outsb
mov
pop
out
or
cmpsl
ss
andb
dec
cli
pop
jg
in
dec
xor
subb
xor
arpl
stc
and
int3
lods
push
scas
dec
cmp
gs
leave
or
jo
adc
sti
jns
mov
xchg
fs
jb
jae
loope
add
xor
mov
notb
into
fs
iret
xchg
mov
jno
or
aaa
call
in
dec
repnz
jne
adc
cmp
dec
jno
std
pushf
ljmp
and
or
add
repnz
add
and
lods
aad
je
jae
mov
jnp
mov
hlt
sbb
cmp
xchg
addr16
das
dec
pop
mov
sub
and
dec
cli
xchg
xor
xor
jae
pop
rolb
movsl
stos
mov
fisttpl
int
movsb
and
mov
xlat
sub
pop
sub
mov
stos
aad
adc
sub
lret
sub
jle
in
sub
mov
xchg
lcall
je
xlat
out
xchg
test
fstpl
pop
dec
inc
out
pop
xor
jp
push
xor
mov
push
jae
xor
add
mov
sarb
in
adc
sbb
pop
pop
jp
loope
mov
dec
inc
add
out
cmc
aas
test
das
mov
data16
adc
jmp
xchg
push
sbb
mov
add
inc
dec
lds
bound
inc
add
add
push
andb
outsl
adc
xchg
je
imul
push
cs
inc
fs
test
cmp
pop
lock
gs
cld
test
int3
pop
arpl
xor
sbb
jne
ret
xchg
add
pop
popa
fisttpll
roll
cltd
xor
dec
inc
mov
dec
scas
clc
cmp
push
out
aaa
sub
cltd
movsb
neg
push
sbb
or
jg
test
je
push
cmp
fistpl
call
je
add
add
stos
frstpm(287
and
fs
jmp
push
xor
sub
fsts
or
scas
daa
xchg
aaa
jb
out
cmpsb
jecxz
jnp
in
sbb
lahf
mov
xchg
jbe
fs
ja
and
mov
pop
jb
mov
outsb
fisttps
aad
cmp
mov
lcall
inc
scas
sbb
rolb
inc
pop
pop
dec
push
pop
je
bnd
mov
sahf
push
subl
dec
jle
push
iret
das
push
adc
popa
pop
and
push
push
mov
adc
push
fsubrl
repnz
sbb
push
xchg
notb
mov
fsubr
stc
push
inc
sahf
popf
adc
push
push
fistps
mov
push
nop
jo
mov
push
cwtl
pop
push
mov
cld
mov
loope
dec
jo
mov
test
icebp
shl
xchg
xor
xor
cmc
call
push
push
movl
call
sub
js
or
cwtl
out
mov
popa
dec
in
or
daa
setg
cmc
jl
jl
dec
xchg
xchg
pop
mov
pop
movsb
in
adc
cmp
mov
or
cmpsl
mov
pop
add
cltd
jns
aaa
scas
dec
or
stos
js
imul
movl
lret
lock
add
and
in
xchg
ret
dec
repz
xchg
pop
adc
in
scas
rclb
addb
outsb
xchg
subl
dec
push
cld
popa
jae
push
xchg
in
into
xor
pop
jp
sbb
mov
lret
jo
mov
sub
lock
sub
or
nop
pop
mov
jb
out
loopne
out
outsl
ja
cmc
lods
pand
push
xchg
subb
test
mov
je
and
jae
mov
imul
or
popa
jnp
aas
repnz
dec
cli
pushf
jl
cld
xchg
push
in
xor
cmp
repz
stc
xor
shll
push
inc
sub
shrb
clc
add
mov
nop
push
push
dec
cltd
popa
jp
dec
daa
iret
aas
addr16
and
into
dec
cmp
mov
push
sarl
repz
std
adc
negb
fisttpll
pop
test
mov
and
sub
and
fisubl
notl
jg
cmp
push
xorl
call
ffreep
lock
or
sub
pop
into
xchg
cmp
fs
jle
pop
or
lock
add
inc
xchg
push
pop
and
inc
xor
lods
aaa
cltd
notb
icebp
cmp
clc
outsb
inc
pop
xchg
in
stos
xchg
push
cs
ss
ljmp
push
dec
lcall
dec
jecxz
xor
pop
jp
mov
addb
fdivrl
mov
and
pop
hlt
xchg
lds
out
jb
xor
push
fcoml
ret
shlb
push
mov
loop
insb
lock
jo
pop
sub
pop
cmp
push
add
sarl
scas
adc
jg
cwtl
lods
dec
loop
sbb
cmpsb
aaa
cltd
pop
lods
inc
enter
testb
mov
test
ja
or
iret
sub
test
and
lods
lahf
pop
xor
dec
mov
outsl
xor
mov
push
lret
jecxz
fiadds
mov
cld
mov
jno
clc
sub
rorb
call
mov
or
cmp
xchg
lds
and
movsl
or
sub
xor
jmp
xor
pushf
xorl
pushl
pushf
pushl
popf
pushf
pushl
ret
movl
mov
lea
jmp
cmp
pushl
popf
mov
movb
pushl
ret
movl
pushf
pusha
lea
jmp
movl
call
push
jmp
pushf
movl
pushf
pusha
pushl
movl
push
push
lea
jmp
pushf
movl
pusha
call
jmp
mov
in
dec
or
fs
fistpl
cmp
lahf
mov
inc
cmpsl
or
iret
xor
and
pop
ror
popf
sub
cmc
inc
push
dec
lahf
shrl
or
adc
test
and
stc
sarb
das
add
fsub
cmpsb
inc
clc
loopne
cwtl
mov
dec
lock
dec
adc
dec
jle
ljmp
lahf
rorl
in
cmp
inc
fsubrl
aad
or
lcall
mov
int3
xchg
inc
gs
mov
mov
push
jae
adc
addr16
pop
bound
test
mov
cmp
cltd
cmp
fdivrs
insb
xchg
cmpsl
cwtl
xor
mov
scas
test
fucom
stos
pop
add
pop
jo
jmp
and
add
in
sbb
call
xorl
pusha
xor
bt
pusha
xor
bt
pushf
xor
mov
pushl
popf
pushl
mov
pushl
ret
call
call
movl
pusha
mov
mov
movw
lea
jmp
xor
push
pushl
popf
pushf
mov
pushl
ret
pushf
popl
cmp
stc
xorl
test
xor
pushf
cmc
xor
call
jmp
push
push
jb
or
fsubp
movsb
pop
jmp
fldcw
ljmp
out
xor
scas
fstpl
inc
icebp
out
stos
pop
pop
fdivrl
xchg
pop
pop
push
loop
jl
movaps
jle
inc
dec
leave
cli
mov
shrl
pop
jne
inc
leave
push
shrb
cmc
sbb
xchg
ret
loope
ficoms
dec
pop
sbb
movsl
pop
and
lods
test
mov
or
addr16
cmp
jno
mov
jle
outsb
pop
mov
repz
add
arpl
push
sub
xchg
sbb
movsb
insl
jnp
cmp
xchg
pushf
mov
mov
out
inc
js
hlt
mov
ret
xor
cmp
cltd
cmp
sub
add
jp
in
mov
cmp
pushf
pushf
popl
pushf
push
xor
pushf
xor
test
xor
call
dec
xor
dec
or
rorb
sbb
bound
lods
fdivs
incl
xor
mov
aas
mov
cmpsl
cmp
into
cld
sub
rorl
mov
lcall
sbb
jbe
je
jle,pn
xchg
stos
cmpsb
mull
pop
push
imul
mov
mov
cmpsl
addr16
filds
mov
adcb
cmc
and
enter
xor
int3
jg
xorb
push
cmp
test
dec
or
dec
test
jb
dec
clc
shrb
sbb
mov
aas
ja
popf
sbb
pop
rcrb
arpl
add
cmc
test
nop
repnz
mov
fsubrl
pop
cmc
insl
mov
sti
fildll
test
rorl
and
mov
add
xchg
adc
lds
movsl
addr16
cmp
adc
stc
aas
sub
mov
mov
adc
xchg
fcmovu
mov
adcl
xlat
ljmp
sbb
xchg
ljmp
cmp
sub
lods
xor
pop
jb
add
sub
dec
xor
jne
cmp
insb
adc
imul
sbbb
arpl
mov
jbe
push
xlat
pmulhuw
stos
cmpl
js
and
lods
into
inc
push
outsb
mov
sahf
inc
gs
mov
jns
adc
andl
jb
jo
push
mov
sub
jecxz
add
icebp
adc
pop
popf
pop
inc
popa
bound
adc
divl
jl
pop
into
push
stos
and
sub
xchg
out
test
jno
insl
jnp
dec
xchg
jnp
rcll
inc
arpl
call
xor
push
mov
int3
xor
cltd
pusha
and
loope
fimuls
sbb
test
insb
pusha
xchg
loope
test
lahf
push
sbb
jl
push
shrb
jmp
dec
mov
push
jecxz
push
mov
inc
loop
jl
in
cli
scas
rorb
dec
cli
push
cmpsb
fld
sbb
adc
ret
popf
add
cmp
mov
rcrl
dec
mulb
insl
out
dec
and
cwtl
mov
add
or
iret
insb
filds
pop
lahf
xchg
mov
scas
out
jb
pop
jmp
dec
xchg
push
sub
outsl
dec
faddl
das
jmp
mov
daa
mov
inc
subb
test
jmp
das
xchg
cmp
sahf
push
ss
jbe
aam
mov
loopne
mov
jl
dec
aaa
sbb
add
and
repz
popf
mov
cmp
js
fcompl
movl
jmp
pushf
pusha
pushf
popl
clc
xorl
jmp
pop
mov
xchg
gs
andb
xor
dec
inc
int
repz
inc
inc
rcll
scas
out
jae
cli
push
pop
out
bound
or
dec
xorb
xchg
cmp
nop
in
and
cld
mov
jbe
mov
fcomip
pusha
int3
mov
ret
imul
decl
fld1
ja
inc
stos
bound
shl
and
xor
cmp
xor
cmp
clc
pushl
popf
push
mov
pushl
ret
movl
pushf
movl
push
push
movb
push
lea
jmp
movsl
xchg
inc
divb
adc
jne
jecxz
fdivrl
stc
or
pop
mov
ror
sub
or
adc
rcll
or
mov
fildl
bound
fisubl
out
shl
push
or
jo
fsubr
fwait
mov
cmp
js
dec
push
out
and
int3
ficoml
pop
mov
ja
sbb
dec
fwait
insl
in
loope
stos
xchg
jl
mov
sub
test
push
and
xchg
lods
test
rorl
cwtl
mov
cmp
jle
or
push
movaps
cli
mov
lret
das
jecxz
in
push
lret
fsubr
lret
js
or
adc
and
aas
cmp
shrb
test
mov
cld
lods
xchg
scas
outsb
xor
movsl
mov
dec
lahf
arpl
xchg
cmpsl
fcompl
xchg
push
pusha
icebp
push
sub
iret
xchg
popf
adc
jnp
cmp
fwait
push
jno
push
cmp
lds
clc
lock
dec
lds
sahf
cli
repz
pop
imul
fcomps
mov
push
sbb
or
idivb
imul
in
shll
jo
xlat
lods
add
and
push
scas
clc
pushf
lea
jmp
xorl
test
bt
pushl
popf
pusha
mov
pushl
ret
call
movl
pusha
pusha
push
movl
mov
pushf
pushl
push
lea
jmp
pushf
xorl
push
xor
test
xor
bt
jmp
pop
inc
jae
or
fstl
xlat
jne
inc
inc
ljmp
or
setae
sub
xor
push
movsl
dec
mov
xchg
sbb
cmp
inc
jb
inc
in
push
cld
adc
lahf
pop
fwait
cmp
in
pop
imul
in
ffree
mov
cmp
mov
mov
pop
inc
add
cld
inc
and
cmp
mov
pop
cli
lret
pop
push
movsl
pop
jb
inc
or
inc
pushf
je
loopne
pop
les
xor
cmp
es
daa
cmp
add
adc
dec
or
mov
jecxz
mov
sarb
push
std
cmp
xor
and
inc
jle
xchg
and
pop
jne
in
sbb
jno
sahf
mov
cs
negl
and
add
mov
movsl
mov
ret
push
jmp
pusha
pushf
popl
pusha
xor
pushf
test
xor
mov
bt
xorl
jmp
inc
sub
or
stc
sub
scas
mov
mov
fimuls
les
mov
enter
jae
and
dec
mov
lret
sub
icebp
xchg
dec
jmp
push
push
fwait
jb
out
leave
xchg
sbb
push
xchg
call
cmp
xor
mov
mov
sbbb
push
cmp
pop
mov
subb
test
lret
dec
cwtl
mov
inc
cmc
lods
imul
es
jae
sbb
fiadds
int3
fdivrp
push
xorl
call
icebp
ret
xchg
cwtl
mov
add
adc
add
xchg
xor
pushf
inc
lods
insb
aad
sti
test
shr
sub
push
jb
mov
inc
int
in
imul
sbb
mov
or
sub
xor
enter
lahf
aam
scas
fwait
outsb
repz
scas
mov
mov
bound
add
jno
lods
mov
mov
xlat
clc
aam
movsl
fsts
je
pop
push
xchg
and
pop
rcrb
or
data16
outsb
aam
repnz
mul
push
xchg
cmp
loopne
lcall
out
shlb
xor
call
xor
pusha
test
xor
test
xor
stc
xor
pushf
xor
test
test
xorl
stc
cmc
pushl
popf
mov
mov
pushl
ret
pusha
pushf
popl
bt
xor
stc
xor
stc
xor
cmc
clc
xor
test
xor
stc
pusha
xorl
test
xor
clc
cmc
xor
movw
pushl
popf
mov
pushl
ret
pushf
popl
clc
xor
cmp
cmc
xor
stc
xor
cmp
xor
cmp
xor
test
xorl
bt
bt
xor
bt
xor
bt
pushl
popf
pushf
pushl
ret
pushf
pushf
movl
push
pushl
mov
pushf
lea
jmp
jle
fadds
arpl
movsb
pusha
add
and
inc
and
dec
or
adc
stos
in
daa
xchg
dec
ja
lods
icebp
js
insb
mov
push
ret
sub
dec
in
clc
jo
leave
xchg
mov
clc
ljmp
xor
xor
add
cmp
popf
sbb
xor
out
fstpl
sbb
sbb
aas
inc
hlt
sbbb
jecxz
jae
inc
mov
dec
mov
or
mov
ret
ljmp
sub
dec
mov
xchg
dec
enter
addr16
pop
pop
jb
or
hlt
aas
mov
adc
fwait
cmp
xor
fnsave
fstps
push
cs
and
mov
notb
adc
dec
out
sub
daa
dec
adc
cld
jmp
into
rorb
dec
lret
pop
mov
sub
push
jmp
inc
add
fiaddl
lods
insb
cli
push
loopne
rorb
or
push
push
sub
je
hlt
cmc
stos
xchg
xchg
repz
movsb
mov
cmp
pop
cmp
push
pop
shlb
or
xchg
nop
ss
push
fdivrs
fdivr
jge
cmp
and
inc
push
mov
push
dec
imul
xor
jb
out
push
dec
test
mov
andb
mov
mov
ret
add
push
and
sbb
inc
aas
mov
stos
cld
cli
jae
shll
ljmp
cmp
scas
jo
test
fsts
test
mov
popa
mov
cmpb
in
stos
and
shlb
jb
stos
sbb
add
pop
rcr
mov
das
sbb
or
fcmovnb
sarb
lods
or
cmp
int3
mov
popf
cmpsb
bnd
xchg
adc
leave
pop
sbb
xchg
es
xor
cmp
xor
inc
sti
enter
cltd
cmp
js
jmp
push
insl
movsb
pop
or
ffree
insl
mov
inc
pop
cld
enter
push
mov
sbb
pop
cmpsl
insl
leave
in
push
jno
mov
in
std
sbb
bound
outsb
dec
int
jno
push
push
jge
or
hlt
fistpll
sbb
sarb
add
mov
test
pushw
push
adc
jb
push
jle
ret
shrb
data16
mov
repz
and
cmp
loop
mov
or
jno
inc
icebp
mov
push
jmp
movl
pushf
lea
jmp
jbe
push
movl
push
movw
movb
movl
pushf
movb
pusha
movl
lea
jmp
push
pusha
pushf
movl
pushf
pushf
lea
jmp
jmp
pusha
pusha
pushf
movl
call
pushf
popl
clc
test
xor
stc
xor
stc
push
xor
call
movw
xor
pushl
xor
test
call
pusha
jmp
pop
aaa
lods
punpckhbw
mov
sbb
xchg
repz
or
sbb
mov
dec
cld
je
cs
stos
std
lret
aam
lea
mov
or
loope
mov
add
sbb
aam
idivb
jae
std
xor
in
xchg
xchg
xor
lret
fcompl
dec
shl
xchg
aam
xchg
das
test
mov
adc
adc
pop
or
pop
sahf
hlt
mov
addr16
das
inc
leave
cmp
mov
xchg
mov
xchg
stos
mov
repnz
cltd
jns
out
jmp
roll
inc
out
inc
mov
jno
jmp
outsl
mov
pushf
aaa
jns
sub
ds
xor
outsb
sbb
stc
lahf
call
popf
shll
mov
bound
xor
jae
iret
mov
popf
mov
push
clts
cld
out
and
mov
fistpl
pop
or
mov
mov
adc
mov
aad
mov
sti
lret
nop
stos
mov
pop
fcomip
mov
sti
add
or
shl
and
arpl
add
inc
mov
int3
xchg
mov
repz
loope
sub
cmp
xchg
imul
add
das
mov
cmp
shlb
or
psubusw
jbe
or
lcall
shlb
inc
sub
cmp
xchg
scas
sbb
mov
sbb
jmp
cld
mov
cmp
add
sarb
ja
and
mov
insb
cs
repnz
push
addb
jnp
mov
enter
int3
jg
pop
inc
jge
mov
push
scas
xchg
inc
push
mov
inc
subb
pusha
or
jno
or
mov
pop
lods
sbb
outsl
add
movsl
testb
jo
xchg
std
cli
push
mov
xor
jle
cmpsb
test
mov
test
sbb
dec
rol
pop
clc
pop
mov
fstpl
fs
and
inc
or
fists
sbb
cld
jno
inc
sbb
enter
in
sbb
dec
rclb
sub
mov
xchg
adc
or
mov
dec
jb
jo
sbb
outsb
pop
or
scas
push
pusha
xor
jne
push
push
pushf
jo
cwtl
push
imul
mov
sub
inc
adc
aas
push
lret
cmpsl
pop
pop
lock
lret
jnp
sbb
add
scas
mov
pop
jb
int3
cmpsl
packsswb
sub
jb
push
mov
cli
mov
mov
dec
add
hlt
pusha
sbb
or
clc
test
adc
lahf
cmp
mov
pop
push
adc
jg
mov
mov
and
dec
int
fnsave
inc
pcmpgtw
adc
or
jp
ljmp
xor
mov
popf
pop
sub
xor
pop
mov
pop
jnp
pop
test
ficomps
jne
pushl
mov
xchg
outsb
sbb
sbb
pop
xor
add
int
jmp
call
mov
rcrb
arpl
and
and
mov
repz
inc
sbb
std
jecxz
and
repnz
mov
mov
in
outsb
xchg
xor
jb
cld
add
clc
mov
test
je
xchg
pop
ja
aam
xor
pop
or
dec
loope
mov
fmuls
gs
out
mov
push
sbbl
add
dec
fiaddl
lods
jne
leave
arpl
cmp
dec
icebp
fstl
and
push
into
add
adc
mulb
popl
jmp
xor
push
clc
xor
call
push
push
pushl
movl
jmp
call
clc
xor
cmc
xor
call
push
pushf
popl
jmp
pusha
movl
pushf
pushl
push
mov
lea
jmp
push
pushf
popl
test
xor
jmp
xchg
dec
aaa
pop
or
sbb
push
lods
cmp
loope
mov
subl
fs
ror
push
scas
jl
push
mov
pusha
inc
dec
inc
cmp
lret
jge
xlat
adc
pop
mov
pushf
lods
ja
int
insb
outsb
in
jmp
aam
jo
in
jp
cs
push
pop
adc
arpl
sarl
psllq
lods
dec
jle
lock
aaa
cmp
or
movl
dec
cwtl
int3
sbb
imul
mov
prefetch
or
jmp
out
xchg
jecxz
test
jle
mov
pop
jp
xor
mov
sub
push
and
xor
std
jmp
push
add
cltd
or
movsl
cld
push
xchg
mov
adc
jbe
dec
cmc
scas
pop
mov
push
mov
ja
adc
dec
addr16
pushf
imul
scas
xorb
int3
loopne
sbb
cmp
or
shl
inc
sub
les
stos
dec
pop
and
sub
les
das
jecxz
push
stos
inc
jecxz
inc
ret
cmc
mov
push
push
movl
mov
pusha
pushf
lea
jmp
pushf
pushf
movl
movb
lea
jmp
pop
outsl
xor
les
insl
mov
inc
lea
inc
pop
xor
repnz
cmp
cmpsl
stos
mov
daa
mov
adc
mov
fisttpll
cwtl
mov
xor
xorb
jns
fistps
dec
inc
ficoms
pop
mov
mov
das
addl
fmul
cmpsb
jmp
bound
sti
xchg
out
xor
or
fldenv
xchg
mov
repz
xchg
add
mov
pop
inc
jne
dec
or
push
mov
or
adc
mov
les
ss
jnp
bound
or
and
call
mov
fwait
movsl
push
push
dec
inc
hlt
mov
mov
es
hlt
movsb
sub
ret
mov
lret
xchg
popf
ljmp
lds
jo
jo
mov
xchg
cltd
jmp
negl
mov
iret
movb
xor
stc
push
xor
jmp
movl
pusha
pusha
jmp
xor
pushl
test
pushl
popf
push
push
pushl
ret
cmp
push
mulb
lret
dec
stos
sub
sub
dec
jecxz
and
push
test
dec
pusha
lahf
lods
push
pop
repz
or
je
ret
dec
in
insb
jmp
popa
cmc
add
inc
test
mov
inc
arpl
scas
je
mov
mov
jns
andl
enter
adc
cs
cs
xlat
mov
out
or
in
mov
imul
test
mov
cmpsb
in
aas
mov
shl
sti
pushf
nop
std
mov
and
inc
push
mov
insb
pop
xor
xor
movb
xor
cwtl
jg
and
dec
lret
sbb
mov
jmp
cmpsb
ficoms
fstpl
sahf
push
pop
jp
mov
lcall
cmp
cmp
clc
mov
jge
ljmp
fistl
cmp
lds
in
jae
test
scas
xchg
popl
idiv
or
cmp
jns
es
mov
bound
int
cltd
fistpll
pop
sbb
mov
scas
sub
mov
mov
adc
test
insl
imul
and
dec
icebp
xchg
das
subb
ljmp
push
jno
mov
fs
mov
xchg
into
xchg
sub
jbe
fs
inc
pop
ret
ds
mov
sub
in
in
jecxz
push
inc
xchg
call
xor
cmp
ret
push
add
clc
xchg
mov
xchg
sbb
fsts
out
jno
shrb
xor
bt
xor
bt
movw
xor
cmc
pusha
xor
bt
xor
jmp
xor
stc
pushl
popf
push
pushl
ret
xor
stc
xor
test
jmp
movl
pushl
mov
lea
jmp
pushf
mov
movl
call
push
pushf
movl
pushf
call
aam
andb
out
sub
add
dec
testb
sbb
or
aas
hlt
push
daa
scas
jp
mov
pop
sub
add
cwtl
fiadds
adc
add
fisubrl
shll
cwtl
out
adc
mov
rolb
cwtl
loop
ret
push
push
cmpsl
aad
jge
lcall
aad
inc
push
ljmp
pusha
aam
xor
xchg
mov
subl
decb
daa
loopne
xor
mov
xchg
ds
ds
js
pop
add
dec
call
add
pop
std
xchg
mov
mov
and
push
fcoms
inc
rcrb
mov
loop
lahf
cld
pinsrw
push
sbb
adc
dec
xor
shlb
repnz
jns
mov
rorb
cmovo
pushf
mov
movl
movb
push
lea
jmp
push
pushf
movl
movb
movl
push
pushl
lea
jmp
xor
cs
pop
dec
xchg
cld
xor
mov
sbb
xlat
addr16
cmpsb
or
mov
pushf
pop
ss
or
cmp
add
dec
fucomip
aad
test
mov
cmc
dec
mov
emms
pushl
rcrl
outsl
testl
cmp
inc
jge
jno
data16
test
mov
mov
lea
jnp
inc
or
ret
cmp
push
in
insl
arpl
lahf
pop
or
int3
mov
mov
push
pop
int3
dec
mov
inc
jmp
cld
and
adc
out
bound
sbbl
mov
test
push
sub
das
add
jl
in
aam
data16
jmp
jo
orl
mov
pusha
cmpsb
jle
out
cmpsl
xlat
fldenv
lcall
cmp
xchg
ja
lock
xchg
cs
sahf
xor
je
callw
rcr
sarl
test
sahf
dec
cmp
subb
mov
add
fimuls
es
dec
push
inc
jbe
xor
jno
clc
loopne
shll
outsb
sbb
iret
push
clc
jns
jno
and
mov
push
sub
arpl
xchg
aas
mov
hlt
pop
je
jp
out
std
mov
fiaddl
scas
mov
push
mov
add
decb
iret
sbbb
inc
push
pop
cli
jb
adc
mov
pop
mov
jp
sarb
inc
rolb
mov
mov
incb
das
into
nop
shll
push
mov
aaa
ret
ret
movsb
mov
add
mov
push
scas
into
out
je
and
insb
js
xor
popa
inc
lcall
andl
std
sar
call
pushf
popl
clc
xor
pusha
xor
clc
xor
clc
xor
stc
xorl
bt
bt
xor
cmp
test
xor
cmp
xor
test
pushl
popf
movb
mov
pushl
ret
in
jo
addr16
or
pushl
sbb
or
add
stos
sub
pop
repz
jno
popf
dec
pop
addr16
js
sbb
cmp
mov
jae
enter
cmpsb
aam
add
jmp
inc
and
jmp
cmc
xor
pushf
xor
push
cmp
xor
mov
stc
xorl
cmc
xor
pushl
jmp
jmp
hlt
insl
lds
cli
movb
aaa
packsswb
rcrl
cmpsl
mov
or
and
mov
ja
xchg
xchg
lahf
ret
and
stos
push
mov
fwait
sti
xor
stos
lret
test
dec
rcrl
adc
insb
mov
ds
in
jmp
out
in
fildll
sahf
sub
cmpsb
nop
lret
gs
fwait
and
nop
xchg
fadds
aas
mov
lret
stos
in
lea
dec
dec
add
adc
js
cmp
addl
inc
shlb
icebp
jmp
push
ljmp
outsb
cli
xchg
cmp
pop
xchg
and
pop
mov
rcl
ja
xchg
xchg
xchg
dec
js
test
faddp
mov
std
add
inc
xor
add
faddp
nop
js
and
mov
push
xor
inc
in
fwait
xor
jge
jle
stos
in
fidivrs
lods
rcll
mov
movsb
call
es
xchg
es
imul
or
hlt
div
aas
mov
mov
add
roll
movsl
in
inc
push
mov
es
aaa
mov
jae
loopne
mov
jmp
add
les
jno
shrb
into
in
int
addr16
jge
aad
cmp
push
add
clc
mull
out
rorl
lret
stc
addl
movl
pusha
jmp
ret
ss
lcall
jnp
dec
push
mov
in
int
xlat
inc
jmp
into
jmp
out
pop
pop
stos
xor
fidivrl
iret
cmpsl
test
loop
cmp
sti
mov
outsb
ret
loop
and
cmc
and
pop
out
mov
jmp
jg
dec
cmpsb
mov
inc
jno
mov
xor
test
aaa
xchg
lds
ss
int3
sarl
sti
mov
mov
mov
js
nop
xchg
xor
xorl
push
fldcw
adc
dec
sbb
add
xor
mov
inc
and
cmpb
adc
je
or
lea
jmp
pushf
movw
jmp
pusha
movl
pushl
pusha
push
mov
lea
jmp
xor
test
stc
xor
pushf
cmc
xor
pushf
xor
stc
pusha
xor
jmp
call
mov
push
push
pop
in
test
jno
inc
jno
pop
imul
cltd
test
test
je
lock
mov
stos
add
cmp
gs
push
sbb
sti
mov
insl
pop
mov
add
pop
xchg
je
popf
adc
cltd
out
or
insb
mov
sub
call
jmp
or
fldt
add
enter
insl
pop
xor
adc
movsl
jne
dec
pushf
jb
ja
ss
ds
and
mov
xchg
addb
xchg
push
pushf
pushf
push
lea
jmp
push
movl
push
pusha
pusha
movl
pushf
lea
jmp
gs
lds
mov
push
jae
or
out
adc
push
pextrw
mov
or
daa
push
stc
push
nop
cwtl
and
dec
cmp
jg
and
popf
int
lret
arpl
pop
fbstp
es
lods
mov
es
inc
xor
inc
dec
xchg
jmp
lods
mov
push
scas
mov
adc
dec
inc
and
push
push
push
hlt
imul
jmp
testb
add
mov
sub
xor
xchg
mov
add
shr
xchg
push
je
pop
add
mov
daa
lahf
jbe
dec
out
rolb
mov
push
and
ljmp
ljmp
add
add
in
mov
add
rcrb
inc
push
or
xchg
repnz
mov
rcr
adc
jnp
sbb
mov
and
pop
add
in
mov
xchg
lcall
add
sub
lods
jno
nop
pop
cmp
xlat
jmp
fisubrs
jae
lds
pop
out
jo
fld1
inc
cwtl
push
mov
in
sub
sub
pop
sbb
push
out
lcall
shlb
fidivs
jmp
cld
xchg
repnz
adc
mov
mov
loop
call
cwtl
jns
sbb
lcall
pop
mov
dec
pusha
movl
movw
pusha
pushf
pushl
lea
jmp
or
imul
jmp
jae
pop
push
jnp
mov
sub
and
pop
icebp
out
inc
adc
out
hlt
xchg
loop
pusha
jo
xchg
dec
fs
leave
inc
mov
mov
ret
fwait
rclb
lods
fimuls
jl
push
adc
cmp
adc
dec
outsb
repz
sbbb
not
pop
xchg
sub
rolb
cmp
jmp
test
int3
push
mov
push
jle
dec
sbb
fs
mov
or
outsb
ljmp
stc
imul
push
dec
sbb
out
jae
das
test
push
rcll
aad
adc
push
call
push
outsb
mov
je
sbb
call
pusha
mov
pushf
popl
push
xor
pushf
xor
call
xor
pushl
xor
cld
pushf
pushl
popf
push
pushf
pushl
ret
movl
pushf
lea
jmp
or
mov
hlt
or
or
mov
pop
push
xlat
sub
cltd
movsl
mov
in
adc
jns
cld
ds
addr16
pusha
icebp
mov
push
sub
adc
cmp
xorb
mov
bnd
imul
bound
or
daa
xor
jbe
push
int3
test
pushf
mov
xor
iret
enter
xchg
iret
pop
enter
test
mov
repnz
fsubrs
jne,pt
push
mov
je
mov
mov
jno
add
cmp
lods
cld
pop
fs
add
ficoml
aaa
faddp
cmp
aam
pop
sbb
das
push
and
fwait
pop
xor
cmp
mov
aad
inc
and
call
pusha
pushf
popl
pusha
xor
cmp
stc
xor
test
xor
clc
stc
xor
cmc
push
xor
pushl
call
xor
pushf
call
mov
mov
movl
pushf
movb
push
movb
lea
jmp
push
icebp
int3
daa
mov
jbe,pt
push
pop
das
out
add
std
push
xchg
xchg
sbb
mov
arpl
cmp
pushf
shrl
lret
into
in
fsts
dec
and
cmpsb
addr16
pusha
lods
dec
fisttps
adc
loope
jb
popf
test
xchg
mov
in
xchg
or
mov
repnz
imul
popa
sub
scas
dec
xchg
addr16
mov
adc
shr
jp
xchg
or
sarb
xchg
int3
inc
push
mov
adc
mov
mov
imul
popa
sbb
mov
and
or
jp
xchg
cmp
xor
dec
fisttps
jecxz
jl
dec
xor
das
push
nop
mov
ret
fdivrl
scas
test
sbb
lahf
mov
fstpl
jmp
mov
clc
das
mov
outsl
sbb
cmpsb
adc
xor
cmp
or
testb
lret
or
fcmovnb
outsb
dec
adc
lcall
mov
pop
cmpsb
in
push
jae
mov
dec
shll
into
cwtl
cmp
sbb
out
jmp
xchg
mov
cltd
dec
push
test
sbb
jae
xchg
and
mov
adc
mov
nop
pop
imul
out
dec
and
mov
jo
jecxz
push
pop
ret
jecxz
test
rorl
cmp
popf
leave
decl
xchg
movl
push
pushl
pusha
pushf
lea
jmp
push
pushl
pushf
popl
movb
pusha
xor
test
bt
xor
cmp
call
in
daa
mov
mov
dec
xchg
mov
and
or
jmp
xchg
dec
push
mov
jp
mov
mov
xchg
lret
mov
xor
out
pushf
and
jno
add
xchg
jbe
xor
sahf
addl
mov
cltd
aam
int3
or
fidivs
add
stc
lods
inc
mov
inc
lahf
das
jbe
mov
ret
mov
nop
jge
mov
cmp
fwait
int3
sub
mov
inc
or
fidivs
add
in
jno
mov
mov
dec
sbb
mov
and
sub
adc
ljmp
dec
arpl
push
ljmp
pop
jp
scas
dec
push
dec
sub
pop
push
in
push
mov
shrb
xchg
rcll
push
stc
or
sub
arpl
into
pop
aaa
jmp
jns
fwait
sub
aam
jae
sti
data16
pop
sub
fidivs
in
gs
inc
mov
lods
cs
divl
jmp
jae
mov
out
mov
push
adc
out
das
pusha
jp
xor
stc
push
jne
xchg
mov
sbb
repz
mov
mov
sti
daa
repnz
dec
push
xor
xchg
pushf
pop
inc
mov
fiadds
call
pop
repnz
push
xor
bound
iret
pop
push
rcrl
jae
decl
movsb
or
popa
xor
cwtl
dec
push
insl
mov
sbb
mov
pop
add
xor
cld
mov
inc
jns
adc
sahf
stos
mov
jmp
in
and
shrb
jns
js
cmpsl
inc
or
stc
push
lcall
fxch
es
mov
fsubrs
cwtl
popf
lds
xor
inc
nop
cmpsb
addr16
outsl
shr
cmpsl
rorb
in
cmp
fwait
cs
jns
in
ret
call
sti
push
xchg
stc
fimull
push
pop
outsb
sub
cmp
or
mov
dec
jmp
rcll
xor
lods
xor
mov
xor
jno
add
cltd
xlat
cltd
mov
repz
pop
push
arpl
je
sahf
movl
movw
lea
jmp
pusha
pushf
popl
stc
cmc
xor
cmp
test
xor
call
rclb
outsb
jae
dec
mov
mov
inc
popf
lds
aad
push
mov
das
mov
and
or
add
stc
aas
push
jne
xor
leave
pop
jecxz
jp
or
imul
mov
push
sub
and
cltd
icebp
rclb
xchg
pusha
mov
lds
pop
inc
lea
fs
push
imul
test
or
xor
je
stos
fnsave
or
mov
int3
cmpsb
jbe
fscale
arpl
rcl
jae
push
addb
jo
cwtl
pop
lret
stos
dec
and
cmp
pop
sbb
insl
dec
bound
xor
push
sti
adc
cmp
push
sbb
xor
pop
out
mov
sbb
cmp
add
lcall
sub
inc
popf
lods
or
sbb
fwait
dec
icebp
les
lcall
push
mov
sub
pop
pop
dec
gs
test
or
sahf
fcompl
ds
mov
or
jmp
inc
mov
cld
scas
jnp
cli
add
jne
push
mov
xchg
pop
sti
cmp
mov
data16
push
push
jge
dec
in
mov
cmp
sub
orb
mov
notb
mov
sarl
pop
adc
and
push
popf
fstpt
cmp
lods
dec
sbb
jle
sbb
xor
jl
mov
scas
movsb
nop
repz
xchg
sub
mov
or
lret
test
imul
fstpt
sbb
and
mov
xor
or
cs
cmp
bound
andl
jnp
ds
xor
cmp
or
push
mov
xor
xor
and
fcompl
sahf
mov
cmp
mov
xchg
sbb
jmp
pop
mov
into
movsl
cli
pop
outsb
inc
pop
mov
movb
movl
movb
pushf
lea
jmp
push
xor
test
xor
movw
bt
xor
stc
xor
bt
push
xor
cmp
cmc
xorl
movb
call
xor
test
stc
pushl
popf
movl
pushl
ret
xor
pushf
xor
jmp
call
inc
idivl
cmp
jmp
adc
dec
sub
mov
jecxz
fbld
scas
out
jecxz
cmpl
mov
out
repz
out
outsl
push
mov
test
fidivl
loopne
dec
movw
movl
pushf
push
push
push
lea
jmp
jmp
pushf
popl
cmp
call
jl
adc
dec
cmp
xchg
push
std
stos
mov
in
push
into
sbb
adc
lods
dec
pop
pop
xchg
hlt
inc
cltd
roll
scas
jp
sti
insl
xchg
ja
fists
inc
or
adc
mov
mov
lock
sub
test
iret
fsubr
jne
dec
adc
sbb
push
push
scas
test
mov
push
sbb
cltd
push
cmp
lcall
pop
push
sbb
scas
mov
sub
dec
adc
fst
test
inc
ljmp
xchg
and
arpl
add
test
ss
push
xor
mov
or
sub
dec
push
mov
xor
adc
pop
inc
dec
or
stos
leave
xchg
pop
sbb
fsubrl
jns
pop
add
out
mov
inc
push
inc
adc
push
es
push
jmp
xor
cmc
cmp
xor
cmp
xor
clc
call
jmp
call
push
lcall
in
test
data16
test
data16
xor
mov
sub
test
xor
in
mov
test
popw
sub
adc
loopne
push
add
test
xor
in
pop
nop
test
xor
in
add
inc
data16
inc
cld
aas
xchg
test
xor
in
cmp
xor
sub
mov
and
sar
test
xor
test
push
movsb
mov
jp
inc
xor
fdivr
in
test
data16
test
data16
cwtl
icebp
xchg
test
xor
in
pop
xchg
test
movsw
cli
lea
jp
inc
mov
nop
test
data16
push
stos
fimuls
addb
add
test
mov
cmpsl
stos
xchg
test
orw
jp
inc
xor
in
in
xchg
test
xor
out
mov
inc
inc
xlat
add
or
inc
xor
orl
nop
test
data16
call
test
xor
jmp
mov
inc
push
stos
sti
and
mov
andb
xchg
test
pushw
or
jp
inc
data16
lea
jp
inc
mov
mov
jp
inc
data16
xor
push
mov
data16
out
pop
jns
test
data16
xchg
mov
outsw
movsl
cmp
arpl
inc
xor
in
push
xchg
test
data16
insb
dec
mov
test
data16
nop
or
test
data16
cmpsb
adc
mov
ljmp
lcall
ja
test
data16
mov
mov
test
data16
aad
test
xor
dec
out
mov
lcall
pusha
nop
test
xchg
nop
cwtl
adc
mov
data16
jle
inc
addr16
data16
out
xchg
adc
ljmp
nop
test
lds
dec
decl
mov
data16
sbb
inc
mov
xchg
shrb
leave
sbb
test
data16
test
lcallw
xchg
test
data16
mov
jnp
mov
xor
in
dec
xchg
test
xor
in
dec
xchg
test
xor
in
adc
mov
pushw
push
cld
sbb
inc
data16
outsl
lea
xor
nop
std
xchg
test
xor
in
fisttpll
inc
data16
fucom
test
mov
outsw
adc
inc
add
jns
stos
inc
dec
adc
sarl
xor
test
leavew
xchg
mov
xor
lcall
int
test
xor
in
lea
xor
adc
mov
xor
nop
add
test
xor
fdivr
js
test
xor
cmp
xchg
test
mov
into
je
test
xor
out
push
push
inc
data16
jmp
sbb
test
xor
sbb
jp
inc
data16
xchg
into
test
inc
cbtw
xchg
mov
xor
test
or
sub
inc
data16
stc
pop
sub
inc
xor
in
repnz
test
data16
jne
sbb
xchg
test
data16
dec
stos
rclb
adc
inc
data16
stc
mov
xchg
test
and
test
inc
sti
outsl
mov
nop
test
pop
repz
xchg
test
ss
bound
inc
inc
pop
scas
popf
clc
mov
data16
test
stos
insl
aaa
or
xchg
test
data16
add
aas
jp
inc
xor
in
xchg
mov
data16
loopne
sub
inc
adc
fbld
xchg
test
xor
out
dec
sub
fsubrl
sbb
ret
cmpl
jp
inc
data16
loop
fidivl
nop
test
data16
jle
mov
mov
data16
lds
nop
test
xor
xchg
cmpsb
xchg
test
data16
test
data16
enter
test
sub
test
xor
nop
add
test
popaw
sbb
sahf
nop
test
data16
test
or
inc
fcompl
test
xchg
adc
pop
jp
inc
xor
in
imul
out
xchg
into
xchg
test
data16
mov
test
sbb
mov
jp
inc
data16
push
mov
jp
inc
data16
mov
jp
inc
xor
in
outsl
nop
test
data16
pop
enter
pop
jp
inc
or
mov
nop
test
data16
movsl
stos
mov
data16
lds
nop
test
mov
push
cwtl
fs
data16
mov
adc
aam
push
and
test
xor
in
xchg
mov
pushw
cld
inc
push
out
mov
data16
jmp
stos
mov
inc
mov
jb
inc
data16
mov
test
lea
inc
xchg
test
xor
out
or
inc
data16
test
xor
in
add
inc
data16
leave
cmp
mov
outsw
pop
out
pusha
nop
test
xor
in
xchg
inc
push
fsubrl
les
xchg
test
xor
in
pop
addb
add
test
pop
aad
out
xchg
test
xor
in
pop
lea
data16
cmpsb
adc
test
data16
adc
sbb
test
data16
push
xchg
sub
test
data16
sub
and
inc
xor
test
data16
test
xor
out
or
stos
inc
data16
scas
sbb
test
data16
out
shll
test
pushw
je
fwait
push
nop
test
xor
out
and
inc
inc
lea
lret
jp
inc
xor
out
mov
inc
xor
out
and
inc
test
repz
inc
xor
out
adc
inc
iretw
outsl
adc
jp
inc
xor
nop
push
stos
inc
xor
popf
nop
mov
data16
iret
xor
mov
data16
ret
test
data16
test
data16
das
push
jp
inc
xor
in
rclb
xor
cmp
push
loop
xchg
cmp
pop
bound
data16
push
insl
cld
xchg
test
shr
lods
outsb
outsb
nop
test
data16
xor
lods
jp
inc
inc
sbb
mov
xchg
test
xor
in
arpl
inc
data16
cmpsb
xchg
mov
test
data16
jecxz
add
test
sub
dec
mov
ret
cs
shlb
xchg
test
xor
in
mov
lcallw
xchg
test
data16
lods
imul
sub
mov
data16
test
test
data16
xchg
or
mov
stos
inc
inc
nop
test
xor
add
or
inc
data16
les
dec
xchg
test
data16
ds
test
popfw
idivb
jp
inc
data16
leave
outsb
inc
xchg
test
dec
into
sbb
jp
inc
xor
out
jno
test
xor
test
data16
sbb
jp
inc
xor
test
xor
in
outsb
loop
xor
xor
jp
inc
xor
test
cmpsw
xchg
sub
jp
inc
data16
push
jmp
xchg
inc
data16
cmp
inc
pushw
sbbb
xor
sbb
sbb
jp
inc
data16
mov
cmp
inc
xor
or
mov
xor
test
xor
in
sub
test
xor
in
pop
xchg
test
pop
and
test
xor
in
js
test
or
popa
lahf
nop
test
data16
mov
push
lds
inc
retw
or
mov
xor
xchg
adcl
xor
in
mov
inc
data16
fs
cwtl
mov
sub
or
nop
test
data16
test
data16
mov
jno
lcall
clc
xchg
test
xor
in
fs
test
xor
in
mov
stos
inc
pushw
in
xor
test
xor
cmp
xchg
test
xor
in
adcb
data16
shll
or
jp
inc
ss
adc
push
ss
jl
xchg
test
shl
into
test
jp
inc
xor
nop
add
test
xor
xchg
pop
nop
test
xor
add
push
cli
inc
data16
mov
cmp
xor
nop
test
xchg
lcall
jp
inc
data16
addb
gs
xchg
rorb
inc
data16
ljmp
jb
pushw
pop
jne
jmp
fiaddl
daa
js
pop
pop
xchg
test
xor
in
pusha
xchg
test
and
pop
fwait
nop
test
data16
mov
push
cmp
inc
xor
nop
mov
outsw
incb
lea
inc
dec
movsb
icebp
xor
jp
inc
xor
in
inc
mov
ss
jmp
nop
test
adc
mov
loop
lea
rcrb
xlat
jp
inc
xor
fdivr
cmc
mov
data16
lcall
lcall
inc
mov
push
pause
push
cltd
nop
test
data16
jbe
add
test
inc
pop
or
and
jmp
push
mov
xchg
test
data16
sub
xor
test
xor
in
xchg
mov
imul
jp
inc
mov
mov
jp
inc
sub
push
inc
test
cmp
aam
mov
xchg
test
adc
lds
test
data16
cmpsb
adc
rolb
dec
repz
xchg
test
data16
push
and
jp
inc
xor
fdivr
pop
xchg
test
and
push
xchg
mov
out
gs
aas
jp
inc
xor
in
aas
lea
xor
adc
test
xor
test
xor
in
or
inc
data16
shr
nop
nop
test
xor
out
push
xchg
test
xor
in
arpl
inc
pop
shl
jae
test
insw
in
js
rcll
inc
push
ret
ljmp
lcall
or
stos
inc
data16
pop
test
xchg
test
data16
sub
jmp
ret
mov
mov
das
jp
inc
xor
in
sub
inc
data16
pop
cmc
xor
lcall
ret
jg
mov
xor
test
xor
nop
clc
mov
data16
test
sub
or
lea
xor
nop
push
lea
add
inc
lcall
mov
sbb
test
xor
xchg
cwtl
nop
test
xor
out
loope
test
lretw
addb
test
data16
lahf
or
test
xor
xchg
xchg
pop
xchg
test
xor
test
cmp
add
inc
data16
test
data16
jmp
xchg
test
out
cmp
jp
inc
data16
loopne
cwtl
nop
test
insw
push
stos
pop
push
addb
gs
xchg
je
test
data16
test
dec
jp
inc
xor
test
jmpw
inc
push
lcall
imul
in
or
inc
test
adc
lcall
lods
xchg
test
data16
mov
in
or
out
lret
jo
jae
rcll
inc
xor
jnp
das
xchg
test
data16
fnstsw
inc
pop
dec
xchg
dec
jge
test
xor
in
fistl
inc
or
test
mov
ljmp
xchg
test
mov
mov
jp
inc
dec
repz
xchg
test
xor
test
xor
in
mov
inc
data16
push
xchg
nop
test
xor
test
data16
or
rorb
data16
jmp
je
nop
test
xor
in
mov
test
data16
cmpsl
loop
nop
test
ss
call
inc
mov
das
rorb
or
int
xchg
test
andw
mov
push
inc
data16
in
push
mov
xor
xchg
nop
jle
test
pushw
in
neg
mov
sbb
push
adc
jp
inc
xor
sbb
jp
inc
data16
push
mov
jmp
test
data16
sbb
cwtl
fsts
inc
xor
pop
xchg
or
xor
in
inc
nop
test
outsw
xchg
scas
jle
test
data16
mov
jp
inc
xor
out
gs
test
pushw
push
test
xor
test
xor
test
pop
pop
cmp
xchg
test
mov
mov
jp
inc
scas
sahf
ror
sub
inc
xor
rep
xchg
test
xor
test
data16
xchg
sbb
inc
dec
scas
jecxz
cmp
mov
mov
popa
jp
inc
lcallw
addr16
bound
test
inc
arpl
icebp
out
test
data16
loope
jl
test
out
mov
jae
test
data16
in
pushf
mov
jp
inc
data16
xlat
ss
test
xor
in
out
mov
inc
mov
jl
push
inc
pushw
out
addr16
lea
sub
call
jp
inc
data16
test
add
test
xor
in
out
test
data16
jns
xor
sbb
nop
sbb
mov
nop
test
xor
out
add
inc
data16
leave
push
icebp
xchg
test
ja
mov
test
data16
jno
clc
xchg
test
xor
in
stc
nop
test
data16
clc
add
jp
inc
data16
loopne
pop
xchg
test
xor
in
xchg
xchg
test
add
in
in
test
sbb
push
fsts
test
jmpw
add
test
data16
fcmovnb
das
dec
inc
data16
xor
fmull
inc
ljmpw
xchg
test
pop
and
bound
inc
xor
ficompl
jp
inc
pop
aad
pop
push
mov
add
fs
xchg
test
xor
test
data16
jbe
insl
xchg
test
data16
ret
je
xchg
test
data16
mov
sub
xchg
test
data16
pop
cmp
mov
xor
nop
add
inc
data16
push
out
in
test
xor
out
xchg
or
mov
nop
test
data16
xchg
inc
nop
test
or
and
jp
inc
data16
ja
adc
inc
data16
jp
xchg
test
shlw
inc
xchg
test
xor
in
cmpsb
fs
out
stos
lock
mov
data16
adcl
jp
inc
data16
jge
nop
test
data16
xchg
cmp
inc
xor
test
data16
loope
loop
xchg
test
xor
fdivr
ja
test
data16
arpl
inc
xchg
test
xor
add
xor
inc
sub
call
jp
inc
data16
mov
movsl
xchg
test
add
sbb
adc
inc
mov
mov
and
nop
insl
lea
ss
jmp
jnp
lcall
fisttpl
inc
data16
out
pop
jo
test
data16
adcb
test
xor
xchg
adc
inc
leavew
xchg
es
test
xchg
hlt
out
lea
sub
call
jp
inc
xor
out
into
dec
inc
inc
mov
test
xor
xchg
rorl
inc
xchg
sbb
movsl
lds
inc
sbb
xor
jp
inc
xor
nop
fcoms
inc
data16
iret
in
test
callw
sti
and
inc
pushw
je
lcall
inc
inc
add
les
lcall
adc
inc
data16
or
dec
xchg
test
push
dec
fisubrs
nop
test
stos
lret
add
inc
xchg
mov
adc
jp
inc
xor
add
pop
rolb
xor
mov
jno
lcall
pusha
xchg
test
xor
in
ja
test
or
xor
dec
xchg
test
data16
dec
cltd
jle
rolb
jmp
mov
xor
test
lretw
adc
fistps
test
xor
in
xchg
mov
xor
test
xor
in
leave
mov
xor
nop
cltd
nop
test
outsw
test
mov
lcall
scas
xchg
test
stos
aad
aam
xchg
test
pop
aad
cmpsl
loope
test
xor
test
data16
test
data16
aaa
rol
adc
test
data16
aam
mov
xor
test
data16
call
cmp
inc
add
popf
add
test
xor
out
fldcw
xchg
jp
inc
push
popf
jle
xchg
test
iretw
aam
out
xchg
test
adcw
mov
inc
data16
jmp
jp
inc
xor
in
scas
nop
test
xor
add
inc
lea
ss
jmp
aaa
jp
inc
xor
in
jno
test
xor
iret
xchg
jl
test
xor
repz
inc
data16
inc
push
sub
test
dec
dec
pusha
xchg
or
inc
data16
xchg
nop
lret
daa
xchg
test
xor
in
pop
lea
data16
call
popf
jp
inc
xor
movsl
sti
xchg
test
xor
test
data16
fmul
pop
addr16
data16
test
xchg
test
xchg
je
les
test
data16
sahf
pop
adc
jp
inc
data16
call
jp
inc
mov
mov
xchg
test
xchg
aas
icebp
xchg
test
xor
in
cmp
xchg
inc
data16
popa
pop
shrb
inc
cmpsw
negb
imulb
stos
inc
dec
add
ficomps
test
xchg
shll
and
inc
sub
test
add
test
gs
pop
aam
xchg
test
data16
cmpsl
jp
inc
pushw
sbb
add
xchg
test
xor
test
xor
in
and
cli
inc
jmpw
inc
or
inc
lretw
bound
repnz
data16
in
fimuls
jp
inc
xor
fdivr
outsl
mov
sbbw
push
inc
data16
cmpsl
outsb
loop
test
sbb
sar
xchg
test
xor
fdivr
add
data16
into
inc
nop
test
xor
sbb
cmp
test
data16
push
jno
test
xor
test
data16
test
data16
test
xor
add
test
add
test
imul
mov
jb
lods
xor
pusha
bound
inc
callw
lahf
pop
nop
test
xor
in
pop
xchg
test
xor
in
sub
inc
in
jecxz
inc
xchg
test
xor
in
push
mov
pushw
xor
jp
inc
data16
xchg
pop
add
inc
data16
shll
pop
mov
pop
repz
jp
inc
push
mov
test
data16
mov
xchg
test
data16
outsb
shrd
data16
adc
inc
mov
xor
test
ss
push
ljmp
push
nop
test
data16
sbb
imul
data16
lret
xchg
test
xor
in
add
inc
sbb
xchg
jge
test
ss
les
jp
inc
data16
test
xor
nop
or
inc
xor
in
addr16
add
mov
jp
inc
data16
pop
dec
xchg
test
xchg
sahf
cmp
fmuls
inc
xor
nop
mov
data16
push
push
xchg
test
or
jmp
fnstsw
inc
data16
mov
push
adc
inc
data16
in
or
test
push
pop
out
sbb
repnz
data16
push
xchg
test
data16
testb
jp
inc
xor
in
jns
test
data16
test
mov
mov
out
mov
jp
inc
xor
in
enter
jp
inc
data16
test
xor
nop
sub
inc
data16
push
pusha
pop
xchg
inc
xor
in
out
mov
xor
nop
setno
data16
les
nop
test
data16
into
rclb
test
xor
xchg
pop
xchg
test
cmp
push
inc
xchg
test
retw
xor
jp
inc
data16
push
ret
popf
jp
inc
data16
adc
nop
test
data16
test
shr
test
das
test
pop
inc
and
adcl
out
pop
cmpsb
shlb
xchg
test
xor
xchg
xor
test
xor
in
fsubl
jae
jb
data16
cwtl
push
enter
jp
inc
scas
mov
test
xor
loope
test
rolb
xor
test
in
test
data16
iret
out
mov
data16
out
jmp
jp
inc
inc
dec
jmp
sbb
inc
xor
in
outsb
xchg
test
data16
or
jp
inc
xor
out
xchg
test
xor
in
adc
data16
lret
mov
repnz
pushw
imul
mov
data16
adc
sti
mov
data16
rcrl
pop
jp
inc
mov
sahf
lea
inc
cwtd
loope
add
xchg
test
xchg
sub
dec
jp
inc
mov
ficoml
test
xor
adc
test
xor
add
jp
inc
data16
sbb
jno
lcall
sbb
push
pop
out
mov
test
xor
test
negw
add
mov
mov
pop
fisubs
rolb
in
in
xchg
test
xor
in
xchg
mov
xor
test
in
adcl
push
xchg
test
lretw
mov
dec
inc
mov
mov
nop
test
pop
mov
ds
nop
test
xchg
jmp
mov
xor
add
movsl
jp
inc
xor
in
cld
mov
data16
pop
in
daa
xchg
test
xor
in
lret
jne
jp
data16
outsb
cli
imul
dec
out
test
rclw
jp
inc
inc
dec
rolb
mov
data16
dec
jp
inc
xor
test
xor
in
sub
inc
popaw
add
in
mov
data16
sub
cmpsl
xchg
test
data16
mov
jp
inc
xor
test
data16
dec
lret
test
data16
mov
test
data16
test
data16
gs
lret
repnz
test
data16
and
mov
data16
pushf
out
test
xor
test
bound
xchg
loope
xchg
test
data16
jns
repnz
out
ret
nop
test
xor
out
mov
data16
inc
shll
test
data16
std
push
sub
arpl
inc
data16
jp
inc
cmp
test
data16
test
xchg
pop
stos
data16
test
data16
and
test
data16
mov
mov
inc
xor
xchg
sbb
inc
data16
ljmp
lcall
icebp
xchg
test
xor
in
loopne
test
pop
jo
sbb
nop
test
xor
in
xchg
nop
test
xor
test
imul
mov
data16
mov
mov
inc
data16
mov
jo
test
ljmpw
xchg
test
popw
icebp
aam
decb
data16
nop
adc
inc
sbb
nop
mov
fiaddl
sbb
sbb
pop
xchg
test
data16
push
mov
jp
inc
mov
test
xor
in
mov
inc
data16
sti
pop
lcall
inc
xor
in
xor
inc
data16
test
data16
or
test
data16
and
test
xor
out
popa
nop
test
data16
xchg
nop
test
data16
push
dec
inc
xchg
test
xor
in
sub
test
xor
sbbl
jp
inc
inc
xchg
shr
testb
jae
pop
sar
nop
test
xor
out
and
inc
xor
in
popa
mov
data16
push
dec
cltd
mov
xor
test
aaa
mov
pop
adc
jnp
add
jmp
loop
test
scas
mov
pmullw
test
data16
pushf
jle
adc
inc
data16
jp
mov
xor
push
jp
inc
mov
aaa
int
test
xor
in
jns
test
data16
das
sub
inc
data16
lea
jp
inc
data16
mov
jnp
lret
xor
lret
cmp
xchg
test
pushw
add
lret
jp
inc
or
test
xor
cmp
jp
inc
xor
add
and
inc
xor
in
adc
xor
in
outsb
nop
test
imul
adc
stos
inc
data16
popf
je
nop
test
xor
in
add
xor
in
add
xor
in
inc
xchg
test
xor
in
sbb
inc
xor
out
mov
data16
ljmp
ret
stos
in
in
xchg
test
data16
lods
and
inc
data16
icebp
xorb
test
inc
jecxz
in
nop
test
divw
push
xchg
test
xor
add
cmpsl
mov
data16
stos
dec
mov
jp
inc
data16
mov
pop
xchg
test
pop
mov
out
xchg
test
xor
xchg
loopne
test
data16
test
xor
in
or
mov
add
mov
data16
test
test
test
data16
cli
int3
cmpsl
xchg
test
data16
mov
jp
inc
xor
test
xor
in
and
inc
ss
mov
test
xor
test
data16
in
dec
jb
test
insw
or
stc
xlat
xchg
test
ljmpw
xchg
test
dec
dec
je
movsb
mov
or
jb
lea
data16
aas
xchg
test
data16
jle
stos
xchg
test
adcw
lret
jp
inc
rcrw
test
sub
call
jp
inc
xor
in
repnz
test
data16
xor
inc
data16
push
mov
ljmp
mov
mov
jp
inc
data16
js
push
xchg
test
add
add
ret
ja
or
pop
lea
data16
jmp
outsb
nop
test
xor
push
gs
xchg
test
xor
in
pop
mov
data16
xchg
out
testl
xchg
mov
jp
inc
data16
test
xchg
test
push
mov
push
lea
data16
test
data16
mov
ds
test
pushw
ret
negl
test
push
sbb
jp
inc
stos
push
jbe
stc
nop
test
data16
gs
ja
adc
fwait
aas
ds
stos
xchg
test
data16
call
test
xor
in
pop
fiaddl
pushf
and
test
data16
jg
add
addb
add
test
xor
test
xor
in
cmpsb
xchg
test
data16
test
push
test
adc
push
inc
xchg
and
pop
xchg
test
popw
in
repnz
add
leave
fldt
inc
xchg
test
data16
scas
dec
lea
data16
cmpsb
adc
addr16
data16
sbb
mov
outsw
inc
jae
pop
mov
xor
test
and
adc
jnp
addb
add
test
mov
or
lea
sub
call
jp
inc
data16
nop
push
mov
data16
leave
mov
jp
inc
xor
nop
xchg
test
les
xlat
jp
inc
data16
and
test
xor
in
aam
test
data16
ret
test
xor
test
popfw
or
add
test
xor
test
xor
test
data16
aas
lret
pop
dec
xchg
test
xor
in
arpl
inc
in
test
pop
gs
push
jp
inc
xor
nop
lods
xchg
test
adcw
stos
addb
mov
xchg
insl
lea
data16
pop
outsb
call
jp
inc
xor
xchg
lea
inc
xor
movsl
inc
lea
xor
nop
inc
xchg
test
xor
in
test
inc
data16
loope
xchg
test
xor
ds
dec
lea
data16
jmp
rorl
data16
sbb
test
data16
addr16
xchg
test
xor
ficompl
jp
inc
cs
adcl
inc
add
nop
test
data16
lods
nopl
inc
adc
loope
push
xchg
test
xor
in
sbb
stos
inc
data16
adc
popf
nop
test
xor
xchg
pop
lea
data16
cmpsb
xchg
ds
test
pushfw
idivb
jp
inc
mov
cmp
cmp
inc
data16
aad
push
movsb
fs
insw
loope
stc
add
inc
xor
in
cmp
inc
or
rorb
inc
xor
out
aam
test
insw
cmp
cwtl
stos
inc
data16
int
in
mov
data16
adcb
sbb
cwtl
fidivs
and
inc
xor
in
and
inc
outsw
test
dec
jp
inc
xor
in
and
test
data16
cwtl
nop
test
data16
shl
nop
test
scas
gs
gs
nop
test
xor
test
xor
out
push
nop
test
testw
jp
inc
xor
in
xlat
mov
data16
movsl
pushf
dec
nop
test
pushw
adc
lcall
inc
in
fimull
fiaddl
movsl
int3
hlt
icebp
pop
nop
test
xor
in
inc
test
or
push
mov
sahf
mov
data16
test
data16
jp
inc
inc
xchg
mov
jp
inc
data16
fsubl
stc
jp
inc
xor
nop
icebp
xchg
test
xor
in
add
inc
data16
mov
jp
inc
data16
jb
jbe
test
data16
xor
xchg
test
data16
es
xchg
test
data16
sahf
jb
test
data16
shrb
lcall
pusha
xchg
test
mov
lret
repz
test
xor
in
hlt
nop
test
xor
xor
jp
inc
dec
dec
fldl2t
int3
nop
test
xor
in
cmp
fiaddl
mov
xchg
test
add
add
mov
data16
ret
xchg
test
data16
or
test
data16
jmp
mov
inc
popaw
out
jns
and
inc
xor
nop
mov
xor
in
push
lcall
push
lea
or
sub
fiaddl
rclb
pop
xchg
test
xchg
stos
stos
std
dec
nop
test
xor
in
cmp
inc
mov
adc
xchg
test
data16
push
loop
mov
data16
jo
test
pop
sbb
test
xor
in
sahf
nop
test
xor
cltd
cwtl
push
xchg
test
adc
cmpsl
div
nop
test
mov
test
xchg
test
xor
in
fists
inc
data16
or
lea
data16
push
jmp
aas
jp
inc
xor
test
xor
in
repnz
test
data16
in
into
imul
xchg
sub
nop
test
data16
icebp
jecxz
test
mov
scas
or
test
cbtw
or
stc
push
lcall
sub
mov
mov
mov
xor
in
mov
test
data16
sarb
inc
xor
in
push
nop
test
xor
test
push
lahf
push
hlt
xchg
test
dec
fisttpll
xchg
test
data16
fwait
out
sub
mov
add
int3
nop
test
insw
or
jae
rolb
dec
mov
test
pop
lock
and
mov
xor
nop
addr16
test
xor
test
adc
aas
jmp
jp
inc
lock
and
stos
jp
inc
xor
in
fisttpl
inc
data16
in
inc
xchg
test
xor
in
fwait
mov
mov
ret
clc
nop
test
xor
cmp
jp
inc
pop
xchg
clc
fs
test
pop
xor
adc
test
data16
loop
pusha
or
xor
fdivr
test
mov
mov
jp
inc
xor
in
mov
test
data16
nop
addr16
data16
push
jle
xchg
test
test
sahf
test
sbb
mov
mov
data16
cltd
cmpb
test
push
push
data16
repnz
data16
lds
mov
test
push
mov
test
leavew
imul
loope
repnz
data16
test
xor
in
xchg
nop
test
ss
pop
lea
xor
nop
js
test
pop
xor
test
data16
jge
mov
nop
test
data16
jle
std
xchg
test
xor
in
out
xchg
test
xor
add
mov
stos
inc
cmp
or
jp
inc
data16
jp
inc
data16
test
xor
test
push
lock
adc
test
xor
in
rorl
imul
fmuls
xor
nop
jae
test
and
mov
mov
adc
inc
pushl
add
xchg
xchg
push
enter
gs
inc
data16
fistpll
xchg
test
xor
in
ds
test
xor
test
jmpw
shr
xchg
test
data16
test
pushw
int
mov
nop
test
data16
nop
mov
test
ljmpw
xchg
test
data16
data16
xchg
test
and
pop
xor
inc
xor
nop
inc
mov
dec
aad
ja
mov
xor
nop
into
dec
inc
data16
test
retw
mov
fs
data16
xchg
mov
sbb
gs
test
xor
pop
inc
pop
xchg
test
data16
sub
jp
inc
inc
dec
in
stos
push
inc
data16
mov
jp
inc
xor
nop
clc
mov
inc
sbb
bound
inc
and
push
aas
xchg
test
data16
push
fisubrl
lcall
mov
xor
test
data16
inc
pop
es
test
data16
nop
pusha
insb
xchg
test
data16
scas
sbb
sub
xor
cli
cli
aas
xchg
test
xor
in
setb
xor
xchg
lret
mov
pushfw
cmp
xor
xor
in
pop
xchg
test
data16
or
add
rolb
mov
jmp
out
jp
inc
data16
xlat
fidivl
test
xor
in
fs
jbe
pop
in
popa
in
test
sbb
push
mov
jp
inc
sbb
loope
gs
test
xor
add
jp
inc
lretw
icebp
lea
xor
nop
out
xchg
test
data16
movsb
xorb
sbb
xor
in
pusha
xchg
test
xor
in
cmp
data16
or
xchg
test
xchg
out
cmp
inc
jp
inc
mov
cltd
push
mov
xor
mov
jge
test
data16
sahf
loopne
xchg
test
xor
in
aad
test
xor
in
scas
fiaddl
xor
cltd
jp
inc
data16
xchg
pusha
pop
nop
test
push
rclb
scas
push
fiaddl
or
xchg
test
mov
cld
jo
test
xor
test
data16
dec
fisubrl
xchg
test
data16
push
xor
xchg
test
data16
fisttpll
xchg
test
xor
mov
fnstsw
inc
mov
cmp
test
sub
push
jp
inc
fs
or
mov
xor
add
push
xchg
test
xor
in
cmpsl
mov
retw
data16
pop
lea
data16
cmpsb
adc
adc
jns
in
popf
add
inc
data16
xchg
sbb
inc
xor
xchg
movsb
xchg
test
pop
stos
jae
nop
test
xor
in
sti
xchg
test
xor
in
ja
test
data16
pop
and
lea
data16
cmpsb
adc
test
data16
out
test
mov
jae
imul
adcb
inc
jp
inc
push
mov
pushf
call
inc
xchg
ror
cmp
nop
test
lods
xchg
add
iret
push
inc
data16
dec
mov
test
data16
sub
push
inc
data16
dec
adc
test
push
adc
iret
jp
inc
xor
rcrb
inc
push
and
std
lret
inc
aam
cwtl
and
inc
data16
sub
pop
jp
inc
data16
test
xor
out
xchg
test
xor
rolb
lds
inc
mov
mov
nop
test
xchg
adc
mov
jbe
cmpsb
adc
inc
xor
test
adc
test
data16
out
mov
in
repz
and
inc
xor
pop
xchg
mov
test
data16
mov
fstl
inc
xor
test
ds
das
aad
xchg
test
sub
mov
ja
sbb
test
add
and
test
xor
test
and
inc
xor
in
mov
lcall
outsl
mov
outsw
pop
out
and
inc
xor
xchg
inc
mov
xor
in
es
test
xor
in
mov
test
cmp
cltd
mov
mov
data16
repnz
mov
test
data16
lock
test
xor
in
aad
test
xor
test
xor
test
sub
addb
test
data16
sarl
cli
inc
sbb
clc
test
test
ljmpw
xchg
test
data16
mov
jp
inc
data16
test
xor
in
orl
or
movsl
jp
inc
xor
test
xor
in
or
cmp
adc
and
xchg
test
data16
lret
mov
test
data16
icebp
xchg
out
test
data16
test
testl
add
jp
inc
data16
mov
arpl
test
mov
stos
inc
hlt
nop
test
xor
in
push
test
data16
jmp
lret
mov
data16
push
pushf
out
nop
test
xor
test
data16
test
data16
leave
ja
xchg
test
xor
in
or
inc
data16
mov
idivl
inc
data16
call
inc
jp
inc
pop
sub
jp
inc
rorw
inc
jp
inc
xor
nop
jge
test
data16
mov
mov
pop
nop
scas
xchg
test
data16
cli
inc
data16
inc
xchg
test
pushw
push
test
data16
xchg
test
data16
jl
out
aad
test
enterw
sub
inc
data16
fs
cmp
inc
xor
nop
xor
test
xchg
xchg
mov
notb
inc
data16
xchg
hlt
orl
sub
test
xor
test
data16
sub
test
xor
test
xor
in
scas
xchg
test
xor
xchg
adc
test
xor
in
push
xchg
test
mov
test
xor
in
jnp
test
data16
mov
inc
xchg
test
mov
lock
mov
sbbb
pop
jp
inc
or
outsb
imul
lcall
pop
nop
test
popw
xchg
out
popa
aas
xchg
test
sub
jle
dec
xchg
test
data16
mov
sahf
addr16
data16
xchg
lds
xchg
test
data16
mov
xchg
jp
inc
pop
xchg
pop
jno
test
data16
arpl
xchg
test
xchg
xor
dec
xchg
test
lods
and
test
xor
test
xor
in
rclb
inc
data16
xchg
sub
inc
xor
add
jp
inc
data16
push
xlat
dec
cmpsb
xchg
test
dec
icebp
fdivp
dec
mov
es
fiadds
jp
inc
data16
jae
adc
mov
xchg
outsb
lds
inc
data16
out
pop
xchg
test
data16
mov
jecxz
rolb
push
xchg
fadd
or
test
data16
jne
adc
inc
data16
outsl
loopne
xchg
test
xor
xchg
test
popaw
sbb
push
push
xchg
test
imul
sub
inc
callw
dec
xor
inc
xor
nop
lea
xor
nop
lret
inc
jp
inc
data16
push
push
jg
test
mov
fsubs
xchg
test
xor
add
idivl
inc
xor
in
xchg
nop
test
data16
testl
xor
test
data16
jg
nop
test
xor
in
push
mov
or
xchg
test
data16
icebp
xchg
and
dec
jp
inc
popw
fucomp
jl
mov
xchg
push
or
lea
data16
jp
xchg
test
data16
push
mov
mov
mov
es
test
data16
or
jmp
aaa
push
jmp
adc
inc
xor
test
data16
jp
sbb
inc
data16
mov
test
xchg
xchg
sbb
cltd
jp
inc
pushfw
testb
xor
cmp
and
test
dec
lds
mov
jge
xor
mov
jb
data16
dec
xchg
test
inc
push
dec
cli
xchg
test
xor
in
adcl
or
jp
inc
ss
mov
test
inc
fisubs
inc
lea
xor
nop
adcl
out
and
inc
xor
test
data16
sbb
lcall
inc
nop
test
xor
sbb
jp
inc
data16
jns
or
pmuludq
arpl
inc
sbb
popf
xchg
test
push
jno
or
nop
test
subw
add
insl
jp
inc
inc
cmp
test
data16
pop
push
xchg
test
xor
in
mov
inc
data16
cmp
dec
jp
inc
dec
push
xor
dec
imul
xor
jp
inc
xor
xchg
jg
test
inc
mov
inc
or
inc
xor
out
les
sub
aam
mov
das
jp
inc
data16
hlt
jmp
xchg
test
outsw
test
jmp
aaa
push
jmp
lds
inc
xor
in
add
stos
inc
mov
mov
xchg
test
data16
iret
pusha
mov
push
inc
data16
cltd
xor
inc
data16
icebp
xor
inc
data16
call
inc
jp
inc
inc
push
mov
inc
jp
inc
xor
stos
ret
fcoml
inc
xor
in
jne
test
data16
imul
inc
pushfw
ret
pushf
nop
test
data16
xchg
inc
add
lcall
dec
xchg
test
data16
idiv
add
jp
inc
data16
cmpsb
adc
xchg
test
xor
pop
jge
lea
ss
jmp
inc
jp
inc
data16
jmp
pop
lea
xor
nop
pop
xchg
test
xchg
das
or
mov
repnz
data16
cmpsb
add
test
push
xchg
adc
daa
addr16
not
repnz
jp
inc
pushw
sub
test
push
pop
js
dec
xchg
test
xor
in
xor
inc
orw
call
inc
xor
in
inc
bound
cmc
icebp
mov
inc
test
hlt
xor
inc
data16
mull
mov
imul
fisubs
repz
addb
push
jmp
mov
ds
out
adc
test
xor
xchg
xchg
rcll
inc
popw
mov
imul
lcall
sub
inc
adcw
loope
test
dec
lods
movsl
stos
in
fs
push
sub
push
xchg
test
xor
in
test
inc
out
xor
test
pushw
push
test
xor
xchg
ret
mov
aas
das
ljmp
inc
xor
out
loop
mov
xor
test
data16
or
jb
test
data16
add
lcall
pop
nop
test
popw
lea
test
jno
cmpsb
adc
xchg
test
pushw
cmp
jp
inc
adc
mov
out
test
data16
stos
mov
jp
inc
dec
pop
push
fildll
test
out
int
mov
lea
sub
call
jp
inc
lea
jl
lea
data16
push
outsb
call
jp
inc
data16
je
mov
test
pushw
add
pop
mov
xor
test
data16
xchg
test
data16
xor
test
pop
inc
or
sahf
cs
test
data16
inc
push
aaa
lea
sub
call
jp
inc
ss
jmp
pop
jp
inc
data16
cmp
jp
inc
data16
ljmp
mov
scas
and
lcall
pop
xchg
test
cmpsw
out
cmp
cmp
xor
test
data16
fisttpll
jecxz
xor
or
clc
sub
test
xor
test
dec
cmpsl
xor
jp
inc
pushw
push
test
xorw
mov
lcall
xor
inc
ss
jmp
push
jp
inc
data16
jmp
jne
test
xor
sbb
cmp
gs
inc
data16
push
xchg
test
xor
in
aad
test
data16
push
sbb
jp
inc
jmpw
loopne
xchg
test
push
in
pop
pusha
fs
data16
xchg
addps
inc
pushw
popa
xchg
test
xchg
test
cmp
test
push
test
mov
test
xor
test
mov
frstor
test
scas
mov
and
addb
and
test
xor
test
xor
in
inc
xchg
test
mov
addr16
data16
cmp
xchg
test
lock
scas
jecxz
nop
test
inc
pop
scas
popf
inc
lea
xor
nop
cld
nop
test
lods
loop
imul
jp
movsl
jp
inc
xor
test
data16
in
jecxz
push
addb
kmovd
xchg
test
xor
in
pushf
nop
test
xor
out
test
inc
rcr
mov
cmpsl
jp
inc
data16
mov
test
xchg
mov
cmpl
data16
jnp
fsts
inc
inc
and
inc
jp
inc
data16
mov
repnz
data16
jae
addr16
mov
xor
in
rclb
inc
xor
add
jl
test
data16
and
arpl
inc
in
or
ficoms
xchg
test
data16
xor
test
xor
test
data16
mov
test
xor
in
dec
mov
testw
jp
inc
jmpw
or
test
xor
xchg
ds
test
xor
out
cld
xchg
test
data16
cmpsl
add
sbb
inc
data16
bsr
jp
inc
sub
test
xor
in
sbb
xor
in
mov
xchg
inc
data16
fisubrs
jno
ljmp
push
xchg
test
data16
test
pushw
aas
pop
repnz
data16
mov
andl
cmpl
data16
xor
nop
test
iretw
pop
outsb
subb
inc
xor
test
push
mov
sub
xchg
test
data16
out
xchg
test
data16
push
adc
test
xor
add
cmp
test
xor
nop
lret
mov
and
sbb
popa
lea
xor
nop
mov
test
data16
lea
jp
inc
xor
in
adc
sub
cmp
dec
mov
jp
inc
outsw
test
in
addb
add
test
xor
test
data16
jbe
add
nop
test
xor
cwtl
leave
push
inc
popaw
add
test
xor
add
jo
test
data16
test
mov
xor
mov
mov
add
mov
aas
pop
push
addr16
callw
adc
test
xor
test
data16
cmc
mov
xchg
test
data16
lea
outsl
xchg
test
data16
sub
repnz
lcallw
test
inc
in
fisttpll
mov
data16
xchg
sete
data16
test
xor
test
data16
call
xchg
test
xor
in
adc
inc
imul
sbb
inc
data16
mov
test
callw
rorl
inc
data16
icebp
pop
setno
xor
test
pop
lods
ret
mov
jp
inc
data16
inc
mov
test
xor
test
xchg
daa
xchg
test
data16
pop
in
xchg
test
in
ss
push
xchg
test
xor
out
outsb
mov
sub
mov
repnz
callw
repz
test
xor
in
test
test
lds
fidivs
nop
test
xor
add
sub
inc
xor
add
jmp
mov
add
or
jp
inc
data16
cli
hlt
xchg
test
xor
in
test
add
cmp
mov
mov
mov
mov
xchg
test
xor
in
inc
mov
xor
fwait
sbb
test
or
jbe
inc
inc
pushw
adc
test
mov
lea
ss
jmp
and
xor
in
arpl
inc
data16
cmpsb
adc
test
xor
sbb
jp
inc
xor
in
dec
xchg
test
dec
jo
xchg
xchg
test
data16
je
popa
out
test
data16
or
nop
test
data16
dec
mov
jp
inc
data16
test
test
out
mov
add
test
pushfw
or
and
loop
data16
shr
mov
data16
push
mov
jp
inc
lcallw
xchg
test
data16
in
test
lea
xor
adc
repnz
pop
mov
jae
xchg
test
data16
jle
addb
mov
xchg
jnp
test
data16
sub
mov
test
popfw
sbb
sub
test
movsw
adcb
pop
inc
xchg
scas
mov
cmp
inc
mov
sahf
in
nop
test
xor
in
aas
xchg
test
data16
jle
pop
mov
scas
outsb
add
xchg
xchg
test
push
leave
hlt
scas
nop
test
data16
sbb
jp
inc
data16
dec
aam
test
repz
movsb
dec
push
xchg
test
xor
test
xor
test
xor
in
pop
nop
test
xor
in
setno
xor
in
pop
ret
or
xchg
test
xor
mov
enter
jp
inc
data16
gs
inc
data16
xchg
xor
nop
test
xor
test
data16
dec
gs
mov
loop
inc
mov
xor
outsl
out
dec
lea
xor
adc
test
data16
cmc
dec
mov
adc
xor
xchg
test
xor
xchg
mov
lcall
mov
mov
fprem1
xchg
test
xor
xchg
xchg
inc
data16
bound
test
data16
mov
aas
insb
rolb
lds
std
rcll
inc
data16
adc
imul
enterw
mov
ret
inc
nopl
lea
xor
nop
mov
test
data16
or
jp
inc
out
cmpsb
sub
jp
inc
pop
pop
cmp
jp
inc
mov
mov
jp
inc
cmp
pushaw
jge
test
data16
arpl
nop
test
mov
mov
jp
inc
data16
cmp
ja
test
push
add
mov
jp
inc
xor
xchg
inc
xchg
test
lds
add
lcall
adc
inc
data16
add
pop
mov
xor
test
xor
in
cmp
jp
inc
popw
sbb
inc
xchg
test
xor
in
push
xchg
test
xor
in
arpl
inc
pop
aad
pop
dec
lea
xor
adc
dec
inc
mov
push
cld
nop
test
xor
in
or
and
ret
xor
jp
inc
data16
pop
and
xchg
push
inc
les
jmp
dec
inc
data16
xchg
xchg
test
xor
test
add
in
sub
lcall
in
test
data16
in
xchg
test
data16
mov
jp
inc
xor
test
data16
in
xchg
test
inc
les
mov
test
data16
mov
jp
inc
and
xor
test
ljmpw
xor
inc
sbb
mov
xchg
test
xor
test
mov
cmc
xchg
addr16
leavew
inc
ss
ret
sub
lock
fildl
cli
inc
and
push
and
mov
ljmp
lret
int
and
mov
xor
xchg
mov
lcall
lea
data16
cmpsb
xchg
nop
nop
test
xor
xchg
and
inc
data16
xlat
jbe
xchg
test
xor
in
lea
data16
jmp
dec
xchg
test
pushw
in
aaa
xchg
test
pushw
ds
repnz
test
xor
in
cli
xchg
test
xor
in
inc
mov
mov
cli
aad
nop
test
xor
in
cmp
pop
inc
popw
insb
inc
test
addb
int
nop
adcl
iret
aam
nop
test
popaw
int
sub
test
xor
in
sub
mov
data16
and
test
xor
adc
rolb
mov
stos
inc
data16
jecxz
sbb
inc
xor
push
jp
inc
data16
fucompp
adc
lcall
pop
lea
data16
jmp
notl
inc
data16
cmp
test
data16
hlt
fisttps
jp
inc
data16
jp
inc
xor
in
and
inc
xor
test
data16
ss
cs
test
data16
mov
xor
xchg
test
xor
in
push
rolb
jbe
cmpsb
adc
xchg
test
xchg
sbb
repz
inc
data16
xchg
cmp
inc
data16
test
jp
inc
data16
imul
inc
xor
out
or
inc
data16
into
mov
xchg
test
adc
in
jns
test
lods
out
imul
int
shrl
test
xor
out
aam
test
data16
mov
jp
inc
data16
pop
ljmp
data16
cmpsl
push
mov
fiaddl
push
pop
xor
jp
inc
data16
sub
adc
pushw
sbb
xchg
test
xor
in
mov
adc
aad
inc
repz
fs
data16
adc
xchg
test
xor
cmp
xchg
test
xor
in
rorl
pushw
jne
and
test
data16
jle
out
nop
test
data16
js
fs
test
xor
add
jp
inc
leavew
ret
or
jp
inc
xor
xchg
cltd
mov
sub
add
xchg
test
pop
adc
leave
jp
inc
data16
push
push
xchg
test
cmp
dec
jo
test
mov
xchg
test
data16
mov
test
mov
mov
jp
inc
xor
xchg
jge
test
mov
jg
xchg
test
data16
or
mov
nop
test
data16
jns
shrb
test
dec
mov
jp
inc
xor
xchg
sub
inc
adc
data16
inc
data16
test
lcallw
repnz
jp
inc
data16
pop
mov
clc
nop
test
xor
clc
movsl
jno
test
xor
out
out
test
bound
push
mov
jp
test
jbe,pt
xchg
test
xadd
out
jp
inc
xor
in
push
xchg
test
data16
popa
arpl
nop
test
xor
in
mov
mov
data16
ljmp
addb
icebp
add
push
inc
inc
dec
rorl
sarl
inc
xor
in
push
xchg
test
data16
sub
jp
inc
push
lea
add
inc
data16
lods
call
mov
xor
nop
jbe
test
popw
out
outsb
pusha
nop
test
xor
in
adc
inc
data16
and
sarl
inc
data16
repz
jp
inc
xor
in
inc
xchg
test
pop
imul
mov
xor
out
sbb
adc
adc
test
mov
cltd
push
xchg
test
xor
cmp
xchg
test
xor
in
pusha
fs
popw
add
lret
call
ljmp
push
lea
data16
cmpsb
xchg
out
nop
test
data16
ret
jmp
nop
test
xor
out
jle
test
inc
sarl
mov
sbb
push
inc
adcb
iretw
mov
test
xor
test
data16
dec
push
cwtl
dec
xchg
test
data16
iret
std
and
inc
pushw
sbbb
test
data16
jns
test
xor
test
pushw
push
leave
pop
jbe
test
data16
mov
test
xor
nop
fcoml
inc
data16
lea
outsb
xchg
test
ror
rolb
test
data16
jle
push
nop
test
data16
mov
das
jp
inc
mov
mov
jp
inc
mov
or
inc
pop
ficoms
dec
std
nop
test
data16
cmp
jp
inc
data16
jns
sub
inc
sub
mov
cli
nop
test
xchg
jno
sbb
test
xor
xchg
aaa
lea
ss
jmp
add
inc
mov
adc
das
jp
inc
popfw
cmp
add
xor
xchg
mov
addb
mov
lcall
nop
test
sbb
pop
fnstsw
mov
cltd
mov
test
data16
mov
test
xor
in
into
push
inc
data16
pusha
push
mov
jp
inc
xor
xchg
mov
data16
imul
xor
in
jns
test
dec
mov
test
jp
inc
xor
in
jb
test
data16
fisttps
int3
xchg
test
inc
dec
push
jnp
lcall
sbb
xor
sbb
orl
or
inc
mov
mov
jp
inc
xor
in
mov
test
lea
test
xchg
test
xor
in
sub
inc
inc
dec
sbb
mov
data16
jnp
and
inc
lretw
das
sub
inc
xchg
test
pushfw
negb
jp
inc
data16
inc
mov
stc
jp
inc
out
ret
mov
addb
dec
cmp
jp
inc
data16
cmpsb
adc
test
data16
insb
sub
mov
data16
sbb
test
and
push
jp
inc
data16
sbb
rorb
test
data16
fistpll
inc
data16
pop
jno
nop
test
pushw
cmp
jp
inc
rorw
and
jp
inc
data16
sbb
outsl
lea
xor
adc
mov
data16
in
test
xchg
test
data16
add
jb
data16
stc
cld
lock
test
data16
in
dec
sub
inc
les
xchg
xchg
test
data16
adc
test
test
ljmpw
nop
test
sbb
cltd
repz
data16
arpl
mov
mov
jp
inc
xor
in
sbb
test
data16
sar
test
xchg
das
fucomp
pop
lea
data16
jmp
inc
lea
xor
nop
jno
test
data16
test
test
xor
in
push
rolb
jmp
nop
test
data16
pop
fisubs
jp
inc
data16
push
mov
inc
data16
lahf
fisttpl
fiaddl
mov
nop
test
pop
sbb
nop
cld
lcall
aas
xchg
test
xor
in
push
xchg
test
xor
fdivr
cld
nop
test
adc
imul
xor
xchg
push
test
push
call
test
data16
cmpsb
xchg
fsts
inc
fnsaves
add
test
data16
dec
pop
xchg
test
data16
in
jecxz
lea
xor
adc
xchg
test
xor
test
data16
test
inc
jp
inc
data16
push
mov
test
and
fidivrs
pop
jp
inc
push
into
adc
jg
test
adc
outsb
or
inc
data16
test
push
adc
xchg
test
fs
jmp
test
mov
mov
jp
inc
data16
mov
jecxz
mov
decl
data16
mov
jp
inc
data16
mov
ret
test
imul
jb
inc
data16
mov
sub
lcall
xor
inc
data16
add
test
shrw
mov
adcb
leavew
sbb
loop
xchg
test
xorw
jp
inc
pop
pop
fnstenv
lea
and
lahf
adc
inc
data16
fstps
jp
inc
xor
out
fstl
inc
xor
ds
pop
nop
test
callw
xlat
lods
mov
outsw
test
lea
xchg
test
data16
daa
cmp
jp
inc
xor
jbe
xchg
test
pushw
je
fwait
cltd
jb
xchg
rcl
inc
enter
jp
inc
sbb
mov
xchg
test
data16
mov
stos
inc
data16
add
lea
inc
data16
pushf
dec
and
data16
inc
out
nop
test
xor
in
sbb
inc
data16
xor
lea
xor
nop
je
test
xor
in
setae
data16
enter
test
pop
mov
sub
xchg
test
xor
in
jne
test
xor
xchg
sti
imul
fidivs
test
pushw
movsl
lock
and
inc
callw
inc
jg
test
data16
mov
jp
inc
xor
in
lahf
nop
test
xor
test
lretw
out
lret
jmp
inc
data16
jmp
pop
imul
mov
mov
data16
push
stc
mov
jp
inc
dec
jmp
xchg
xor
test
data16
aaa
filds
sbb
pop
xchg
adc
pop
xchg
test
xor
in
das
jb
mov
incb
xchg
test
data16
iret
mov
adc
inc
data16
shl
js
test
xor
in
iret
nop
test
xor
in
pop
xchg
test
cmpsw
repz
addr16
lea
ss
jmp
inc
jp
inc
insw
int3
mov
and
inc
pushw
je
fwait
sub
inc
xchg
xchg
lret
jp
inc
xor
in
loop
test
data16
adc
inc
xor
in
dec
mov
data16
icebp
int
add
test
xor
in
dec
mov
sbb
mov
fldt
cwtl
lea
data16
cmp
test
inc
outsb
or
add
xor
in
fmull
sbb
push
and
test
mov
nop
test
xor
sbb
jp
inc
popaw
addr16
lods
nop
test
push
mov
lcall
or
inc
data16
les
xchg
sub
testl
repnz
sti
jg
mov
cmpsw
adc
dec
xchg
test
push
cmc
fldl
test
stos
inc
repnz
setno
data16
adc
push
xchg
test
data16
ss
sub
inc
data16
lea
jp
inc
xor
in
notb
inc
xor
in
fistl
inc
or
clc
into
add
inc
data16
adc
repnz
out
inc
inc
adc
inc
xor
in
and
inc
xor
nop
nop
test
data16
mov
ret
test
data16
adc
pop
in
test
add
add
lcall
icebp
nop
test
data16
mov
pop
nop
test
xor
in
add
xor
in
or
inc
pop
push
push
or
xchg
test
data16
cmp
jns
rolb
jbe
cmpsb
adc
test
data16
push
decb
or
inc
data16
dec
outsb
stos
xchg
test
xorw
jp
inc
data16
outsl
jp
inc
data16
xchg
int
lea
pop
push
call
mov
nop
fstpt
xchg
push
lea
xor
nop
xchg
nop
test
data16
addr16
lea
data16
jmp
adc
mov
ljmp
cli
inc
lods
mov
xchg
pusha
xchg
test
data16
and
xchg
test
xor
test
push
pop
push
xchg
nop
test
data16
xlat
shrb
xchg
test
data16
or
aad
test
xor
test
data16
jmp
and
ds
ds
pop
fiaddl
outsl
movsb
pop
and
adc
test
xor
in
xchg
inc
data16
lea
xchg
test
xor
in
and
inc
data16
stos
pop
or
lcall
jl
test
data16
mov
xchg
jp
inc
xchg
or
mov
lcall
xchg
mov
data16
xchg
xchg
inc
dec
lea
xor
nop
and
data16
shlb
lea
xor
nop
es
test
or
lods
and
inc
mov
lea
jp
inc
xor
in
or
inc
data16
jp
mov
test
or
mov
xchg
cltd
jp
sub
loop
data16
cld
mov
inc
inc
pop
and
or
test
data16
arpl
jp
inc
data16
lahf
rolb
test
data16
movsl
lea
test
data16
ret
mov
sub
test
data16
cmpsb
xchg
lret
pop
inc
data16
dec
pushf
xor
inc
cmpsw
xchg
sub
jp
inc
xor
test
xor
test
data16
cmpsb
adc
xchg
test
xor
in
cwtl
push
inc
push
pushf
iret
push
xor
inc
xor
test
data16
jbe
xchg
test
pushw
je
fwait
xchg
nop
test
pop
aad
pop
add
addb
es
mov
or
sbb
test
xor
in
call
inc
xor
in
fwait
xchg
test
data16
scas
jnp
xchg
test
xor
in
lds
daa
jp
inc
data16
icebp
fnsave
test
scas
in
add
xor
inc
xor
nop
sbb
test
data16
xchg
or
mov
xor
xchg
rcrb
inc
data16
test
data16
fcomi
push
xchg
test
add
or
xchg
test
xor
in
aas
xchg
test
data16
testb
test
sbb
mov
nop
test
data16
sub
test
xchg
gs
movsl
dec
xchg
test
mov
scas
or
test
xor
test
data16
jmp
pop
mov
data16
cwtl
out
out
test
retw
in
mov
imul
xor
in
and
rolb
es
stc
fsin
nop
test
xchg
ror
cmp
addb
add
test
dec
stc
ljmp
ret
mov
fsubp
call
lcall
rcll
inc
push
jno
mov
xchg
test
xor
test
xor
in
xor
inc
mov
mov
jp
inc
sbb
xchg
adcl
inc
repnz
xchg
test
retw
in
sarl
inc
pop
pop
push
ds
xchg
test
xor
in
leave
xchg
test
stos
nop
cmp
nop
test
cbtw
mov
jecxz
lea
xor
nop
loope
test
data16
sbb
out
mov
test
data16
and
push
lea
data16
insb
mov
data16
test
idivw
ror
nop
test
xor
in
mov
addb
push
push
mov
dec
jmp
test
data16
jmp
addb
mov
nop
or
test
gs
inc
cltd
jb
test
data16
xchg
jmp
xchg
test
dec
dec
jne
dec
xchg
test
data16
lds
adc
inc
sub
call
jp
inc
data16
xchg
or
bound
and
test
xchg
nop
pop
cmc
fiaddl
arpl
test
imul
mov
test
bound
test
xor
in
jb
test
xor
test
xor
in
cmp
inc
data16
repz
inc
xchg
test
xor
in
sub
inc
xor
in
pop
xchg
test
xor
in
test
inc
data16
aaa
loopne
nop
test
jmpw
enter
cmp
inc
ljmpw
xchg
test
popw
jae
sahf
out
mov
stos
jmp
test
xor
in
dec
xchg
test
pushw
push
nop
xchg
mov
data16
in
adcb
data16
sarb
cmp
inc
ss
jmp
cmp
inc
data16
xlat
xor
test
data16
jnp
aas
xchg
test
xor
in
icebp
xchg
test
add
sar
test
inc
pop
mov
xchg
nop
test
mov
mov
inc
pop
pop
cmp
xchg
test
dec
in
lds
jb
inc
push
inc
fdivl
jp
inc
data16
jbe
add
nop
test
data16
jb
ror
mov
data16
loopne
test
xor
nop
lock
test
in
adc
or
mov
data16
jp
out
nop
test
data16
cmp
jp
inc
xor
test
xor
in
fs
test
xor
add
adc
test
data16
dec
xchg
inc
pop
stc
daa
jge
nop
test
xor
in
imul
xchg
push
inc
xchg
test
data16
test
and
test
xor
test
sub
sub
sub
inc
data16
aam
nop
add
inc
data16
push
sub
test
test
mov
test
insw
mov
sub
nop
test
xor
out
scas
xchg
test
xor
xchg
jmp
xor
sbb
push
outsb
or
data16
scas
repz
test
data16
mov
nop
test
xor
test
data16
div
xchg
test
xor
in
jo
test
inc
push
mov
jp
inc
xor
test
data16
call
jp
inc
data16
push
jmp
jne
sbb
in
xor
ret
loop
lret
cmc
repnz
test
data16
test
popw
test
or
jp
inc
xor
test
data16
movsb
negl
xchg
test
xor
xchg
pusha
nop
test
xor
in
jg
test
test
dec
inc
adc
sarl
test
xor
rorb
jns
adc
pop
outsb
call
jp
inc
data16
add
mov
jp
inc
data16
mov
sti
jp
inc
data16
or
test
data16
jbe
mov
inc
data16
adc
xchg
notl
inc
callw
sub
inc
data16
mov
dec
jp
inc
data16
mov
test
data16
adc
lea
or
sub
xchg
test
data16
inc
fwait
or
inc
data16
sub
test
push
ret
jne
test
pushaw
test
test
xor
xchg
xchg
aaa
nop
test
data16
test
enterw
and
inc
xor
add
jp
inc
data16
in
add
inc
sbb
nop
int3
nop
test
xor
test
data16
xchg
repnz
add
test
sub
mov
mov
data16
jnp
mov
sbb
sbb
jge
test
xor
cmp
and
fwait
jmp
out
jp
test
bound
test
stos
aad
aam
lea
xor
nop
jl
test
data16
lds
or
inc
data16
and
pop
mov
dec
or
sbb
sub
test
data16
das
loop
test
data16
and
cmp
test
retw
je
xchg
test
data16
icebp
xchg
ljmp
mov
nop
test
dec
sub
int
xchg
test
pop
stos
pop
jae
xchg
test
xor
repz
nop
test
xor
in
push
stos
inc
data16
add
nop
test
repnz
loop
nop
test
data16
je
sub
lea
data16
push
jmp
jp
inc
xor
in
push
xchg
test
adc
fs
xchg
test
data16
sahf
fmuls
xchg
test
data16
mov
jp
inc
xor
test
pushw
or
xchg
adc
inc
pushfw
ja
mov
xchg
test
popw
and
inc
test
inc
data16
sub
nop
test
data16
sub
mov
inc
outsw
cmc
jecxz
mov
test
data16
push
cmp
push
dec
mov
xchg
ljmp
pop
xchg
test
data16
and
insl
mov
pop
test
xchg
push
lret
sti
push
push
pop
daa
xchg
test
xor
test
xor
out
adcb
data16
lahf
fsub
and
pop
pop
daa
arpl
inc
data16
jmp
dec
mov
imul
push
nop
test
lea
test
data16
jmp
push
nop
test
cwtd
mov
test
data16
xchg
inc
lea
sub
call
jp
inc
xor
in
cli
nop
test
xor
xchg
pop
xchg
test
xor
in
fwait
nop
test
mov
fmuls
inc
xor
hlt
lds
adc
insl
in
loopne
pop
push
data16
push
xor
xchg
test
xor
in
push
lcall
add
inc
xor
test
dec
andl
jp
inc
add
or
cltd
jp
inc
xor
in
pop
mov
data16
ficoml
out
mov
data16
jmp
inc
nop
test
data16
cli
pop
cmp
inc
popfw
jne
push
cld
test
cmp
mov
xchg
test
xor
in
and
inc
data16
mov
nop
sbb
xor
test
data16
pop
sbb
lea
xor
nop
fcoms
inc
data16
rorb
xchg
test
xor
in
adcl
push
test
call
or
leave
cmp
push
xchg
test
data16
lret
rclb
inc
data16
push
sbb
jp
inc
data16
and
mov
inc
data16
in
jecxz
add
test
adc
jbe
xchg
test
addr16
inc
adc
xchg
test
data16
dec
jp
mov
sub
test
data16
sbb
mov
mov
lods
orb
xchg
aad
sub
mov
out
dec
mov
popw
jp
dec
lea
xor
nop
out
test
dec
push
mov
push
jp
inc
xor
in
icebp
xchg
test
add
add
mov
data16
mov
cltd
jp
inc
bound
ja
xchg
test
data16
retw
lods
and
cmp
ds
test
pop
das
dec
jae
mov
xchg
fsubr
ja
mov
pushaw
out
and
mov
xor
test
xor
test
xor
shlb
ret
sbb
jle
mov
repz
das
push
mov
data16
sbb
data16
test
xor
jb
mov
data16
and
test
xor
nop
push
nop
test
stos
aad
aam
xchg
test
outsw
test
or
inc
data16
cmp
bound
inc
xor
jae
xchg
test
data16
andb
stc
jp
inc
outsw
test
cmp
mov
test
xor
cmp
xchg
test
xor
push
imul
inc
xor
in
adc
inc
xor
test
pop
jle
or
mov
xor
test
nop
test
data16
jecxz
sbb
inc
push
js
mov
jp
inc
mov
mov
jmpw
xor
test
xor
in
or
inc
ss
fildl
test
xor
movsl
jmp
test
xor
in
dec
nop
test
xor
in
or
test
xor
test
pop
imul
xor
test
mov
xchg
test
xor
in
mov
inc
dec
push
cltd
movsl
notb
inc
add
add
jp
xchg
hlt
sbb
jp
inc
pop
lret
xchg
fmul
mov
data16
mov
xchg
test
data16
xor
fistpll
inc
xor
in
xchg
test
popw
jae
push
add
inc
xor
test
data16
inc
test
nop
test
data16
jno
stos
inc
data16
cli
cltd
push
xchg
test
data16
idivl
lret
jp
inc
data16
dec
jne
nop
test
mov
imul
pop
stos
xchg
test
add
test
xor
test
popw
mov
test
cmp
sbb
fiaddl
mov
xchg
test
mov
inc
cwtl
mov
xor
addr16
pop
xchg
test
xor
in
or
mov
data16
jp
scas
nop
test
popw
jp
stos
add
mov
xor
fdivr
pop
xchg
test
data16
sbb
jp
inc
outsw
xchg
sbb
test
xor
test
cwtd
pop
nop
test
xor
out
lods
nop
test
dec
mov
jns
lea
sub
call
jp
inc
xor
nop
lock
test
data16
cwtl
push
xchg
test
data16
repz
dec
jp
inc
data16
sbb
jp
inc
sar
sub
jbe
test
in
fucomi
sarl
idivl
inc
data16
sub
xlat
mov
inc
jp
inc
xor
in
pop
xchg
test
data16
mov
subl
pop
mov
jmp
test
out
loopne
adc
lret
or
nop
test
data16
jg
add
lahf
jp
inc
mov
fldenv
mov
and
test
dec
push
xor
ret
jp
inc
xchg
and
outsl
cmc
xchg
test
xor
in
bound
inc
xor
in
and
test
xor
in
mov
test
data16
mov
push
int3
mov
data16
aad
pop
inc
pushw
lock
ljmp
add
test
push
xlat
test
mov
sbb
nop
test
mov
mov
push
inc
data16
decb
inc
test
cmpsb
sub
inc
data16
xchg
inc
inc
xchg
test
dec
sar
ja
xchg
test
xor
test
data16
stc
pop
pop
lea
data16
cmpsb
adc
test
xor
in
enter
jp
inc
data16
add
fiaddl
sub
sub
sub
test
xchg
popf
loop
clc
mov
adc
test
pop
icebp
aam
inc
mov
xor
in
mov
test
lretw
imul
loope
xor
sub
lea
data16
jmp
pop
jp
inc
inc
repnz
xchg
test
xor
xchg
mov
test
data16
mov
test
data16
arpl
repz
inc
pop
pop
mov
mov
data16
mov
xchg
test
ja
aad
test
data16
add
test
data16
cmp
nop
test
pop
lods
and
test
data16
test
data16
xchg
xor
loope
lcall
lret
lahf
jp
inc
data16
nop
mov
inc
addw
pop
jp
inc
adc
dec
and
inc
data16
test
cs
fs
xchg
test
imul
jmp
mov
xor
cmp
xchg
test
xor
in
xchg
test
xchg
cmpsl
in
inc
lea
data16
push
jmp
xchg
jp
inc
xor
in
stc
xchg
test
data16
or
inc
xchg
test
data16
xchg
test
data16
in
fs
mov
inc
into
xchg
fwait
dec
and
gs
xchg
shll
ljmp
pop
xchg
test
data16
inc
test
rolb
xchg
pop
xchg
test
mov
mov
mov
xor
adc
test
pop
pop
inc
jg
lea
data16
jmp
lods
xchg
test
data16
mov
outsl
out
ficomps
jp
inc
data16
push
sub
jp
inc
xor
test
data16
jmp
adc
ret
and
lret
in
imul
jp
inc
data16
xor
xchg
test
popw
int
popf
jo
test
data16
pavgw
test
ljmpw
xchg
test
xor
in
jno
test
xor
xchg
mov
inc
xor
out
cld
mov
fs
add
mov
pushw
cmp
jp
inc
xor
in
xchg
nop
test
pop
pop
sub
push
fs
gs
test
data16
fdivrl
daa
jp
inc
push
test
lahf
nop
test
cs
into
rclb
cmpl
xor
test
data16
sbb
imul
data16
cmpsb
adc
inc
cmp
out
mov
data16
outsl
data16
cmpsw
or
in
addb
mov
xchg
int3
pop
inc
data16
pop
iret
jae
test
data16
mov
test
xor
pusha
fstp
nop
test
data16
movsb
out
mov
pop
fnstsw
cmp
test
xor
in
adc
ljmp
iret
lcall
add
addb
add
test
xor
test
xor
in
pushf
nop
test
data16
dec
jne
mov
data16
push
pop
lret
sbb
inc
data16
ret
jmp
notb
inc
xor
in
hlt
xchg
test
xor
in
dec
lea
xor
nop
popf
nop
test
outsw
test
stos
jp
inc
xor
cltd
dec
xchg
test
data16
or
jmp
nop
test
data16
sbb
sub
lret
in
xchg
loope
in
test
data16
mov
and
enter
aas
xchg
test
cwtd
loope
add
xchg
test
data16
imulb
jp
inc
data16
push
lea
data16
jmp
xchg
xchg
test
data16
mov
sarl
inc
xor
pop
xchg
pop
xchg
test
xor
in
inc
xchg
test
xor
in
xchg
xchg
test
inc
cli
sub
sub
test
xor
sbb
jp
inc
outsw
xchg
in
nop
test
data16
pop
inc
push
mov
data16
sbbb
test
pop
popa
leave
es
nop
test
popw
xorb
xchg
inc
data16
xor
xchg
lea
xor
nop
pop
xchg
test
data16
sub
orb
inc
data16
pusha
pop
jecxz
xchg
test
xor
xchg
jp
inc
pop
cld
mov
aas
lea
xor
nop
arpl
inc
xchg
adc
jecxz
test
adc
loop
mov
xor
out
dec
inc
data16
inc
lea
test
insw
mov
test
cmp
mov
test
xor
test
mov
or
inc
data16
sub
lea
xor
nop
pop
lea
xor
nop
stos
xchg
test
pushw
mov
jp
inc
inc
dec
fs
mov
test
data16
fisubrs
jp
inc
pop
test
test
xor
in
notb
inc
data16
push
clc
add
cmp
dec
push
std
outsb
imul
out
arpl
inc
data16
cmp
nop
test
data16
hlt
jnp
sub
inc
data16
dec
arpl
xchg
test
cmpsw
or
and
inc
data16
ficoms
jmp
jp
inc
xor
test
data16
pop
cli
xchg
test
xor
in
push
mov
pushw
mov
leave
nop
test
data16
out
rorb
inc
xor
sub
mov
test
data16
iret
jp
mov
or
push
pop
lahf
jl
test
data16
cltd
cmp
addr16
data16
popa
notb
inc
cbtw
xor
std
loopne
test
adc
mov
mov
data16
dec
pop
pop
xchg
nop
test
xor
pop
xchg
pop
xchg
test
push
test
xchg
mov
lock
mov
xchg
test
lcallw
mov
xor
nop
or
bound
out
mov
pop
lea
data16
jmp
pop
mov
data16
jns
mov
mov
das
in
js
test
xor
in
or
rolb
jno
dec
jecxz
lea
xor
nop
imul
in
xchg
test
data16
addr16
inc
rorw
fisttpll
sbb
out
lret
xchg
test
xchg
xor
sbb
inc
xor
test
data16
aad
pop
je
test
data16
test
test
xor
test
data16
cmp
call
nop
test
pop
jg
into
inc
xchg
test
data16
pop
pop
xchg
test
inc
pop
scas
popf
xchg
mov
data16
sahf
push
adcl
xor
in
dec
xchg
test
data16
dec
sbb
or
inc
data16
cmpsb
adc
test
xor
in
notl
inc
xor
test
xor
out
add
inc
data16
rcrl
xchg
inc
data16
pop
push
add
xor
fdivr
and
inc
mov
mov
jp
inc
fs
pop
mov
nop
test
push
adc
lret
sti
xchg
test
xor
in
sub
lret
sahf
imul
jp
inc
xor
out
lock
test
xor
in
out
test
data16
and
mov
sbb
pop
jecxz
test
lds
or
mov
xlat
xchg
test
retw
out
xchg
test
adc
mov
movsl
push
inc
data16
test
or
test
xorw
shlb
jp
inc
data16
cmp
pop
mov
dec
and
lods
push
mov
dec
dec
ss
push
xchg
test
adc
sbb
push
inc
call
xchg
inc
lock
xchg
adc
inc
data16
adc
mov
jp
inc
data16
adc
test
data16
push
fwait
into
xchg
test
xor
sbb
add
inc
data16
pop
and
xor
lcall
add
stos
inc
push
xchg
in
and
data16
xchg
cli
sti
xchg
test
imulw
in
mov
mov
cltd
outsb
xchg
test
data16
xchg
pop
adc
jp
inc
lock
xchg
test
data16
jns
in
xchg
test
inc
adc
test
xor
test
mov
into
inc
xchg
test
xor
in
bound
inc
mov
and
lea
data16
cmpsb
xchg
adc
inc
or
cs
jp
inc
pushw
sub
test
xor
test
xor
test
xor
in
lock
test
stos
scas
pop
in
mov
data16
adc
jae
test
lds
test
and
push
and
lcall
aam
test
pop
lods
mov
mov
lcall
aam
test
mov
mov
data16
ret
xchg
test
data16
filds
cs
test
data16
mov
divb
lea
inc
xor
test
mov
mov
jp
inc
dec
cmpsb
inc
mov
jp
inc
add
test
data16
sub
jp
inc
bound
outsl
mov
data16
ss
xchg
mov
data16
insb
and
lcall
dec
xchg
test
data16
imul
add
jp
inc
data16
ja
dec
lea
xor
adc
test
out
cmp
xchg
inc
data16
adc
testl
hlt
dec
mov
data16
or
pop
xchg
test
push
pop
out
in
nop
test
adc
shr
notb
inc
data16
jmp
jp
inc
sub
call
jp
inc
xor
out
addr16
test
xor
in
adc
inc
data16
repnz
lahf
lods
nop
test
xor
in
sub
test
mov
test
xchg
inc
data16
mov
test
or
jb
int3
mov
data16
les
nop
test
data16
lea
movsb
push
test
pop
add
test
data16
mov
jp
inc
xor
nop
iret
fs
data16
mov
addr16
xchg
test
rolw
sarb
pop
jp
inc
lods
lea
nop
mov
data16
test
or
sub
inc
data16
sub
leave
nop
test
pushw
push
test
or
leave
movsb
fs
test
data16
mov
xchg
test
xor
in
or
inc
test
xchg
push
xchg
test
data16
mov
mov
sbb
into
test
test
data16
lds
jns
ljmp
xlat
xchg
test
xchg
sarb
lea
inc
xor
in
clc
xchg
test
mov
inc
jg
test
data16
mov
dec
ret
mov
fsubp
std
xchg
test
xor
in
cmpsb
xchg
test
data16
cmpsl
add
arpl
inc
xor
in
adcl
outsw
xchg
out
adc
sbb
es
mov
inc
mov
xchg
test
data16
scas
cwtl
xchg
test
xor
add
jp
inc
data16
and
xchg
test
data16
or
test
mov
mov
jp
inc
and
scas
adcl
sbb
out
jp
inc
xor
in
ja
test
pushw
push
inc
dec
jns
test
xor
add
in
mov
xor
nop
call
inc
xor
in
xchg
cli
inc
data16
rcll
jp
inc
xor
in
xor
mov
xor
nop
les
inc
data16
popa
mov
mov
xor
test
gs
mov
xor
sar
test
data16
nop
pop
lea
data16
jmp
bound
inc
data16
jmp
sub
test
data16
add
sub
inc
mov
imul
mov
lock
loopne
xor
inc
xor
nop
mov
inc
retw
mov
test
xor
in
mov
or
add
shrb
stos
inc
add
lds
rolb
and
test
data16
ficompl
aas
lea
sub
call
jp
inc
add
push
insl
mov
xchg
add
test
dec
ds
jns
lret
cmp
nop
test
sbb
test
pop
mov
fwait
xor
inc
ss
jmp
repz
inc
data16
nop
test
data16
xchg
nop
test
data16
adc
xchg
test
data16
ficoml
insl
mov
data16
sbb
adcl
add
jp
inc
xor
test
data16
mov
test
xor
nop
inc
push
inc
add
loop
xchg
test
xor
in
cli
mov
data16
sbb
mov
jp
inc
callw
and
lea
mov
sbb
inc
cwtd
loope
add
add
ret
push
jmp
xor
sbb
dec
jg
xchg
test
insw
or
gs
test
data16
xchg
sahf
pop
bound
inc
data16
xchg
ret
test
xor
add
jp
inc
xor
in
mov
inc
inc
pop
loope
mov
mov
mov
jp
inc
data16
js
gs
test
leavew
sub
je
xchg
test
data16
inc
data16
ds
out
push
lcall
pause
test
data16
dec
mov
dec
jl
pop
pusha
xchg
test
xor
in
ljmp
xor
in
imull
and
inc
data16
test
xchg
into
mov
data16
repnz
cmp
nop
test
data16
sub
inc
xchg
test
pushfw
imulb
jp
inc
data16
test
lea
test
data16
sbb
dec
mov
leavew
pop
xchg
dec
mov
out
and
inc
xor
sbb
mov
data16
pushl
test
xor
in
inc
lea
ss
jmp
outsl
jp
inc
xor
test
cld
nop
test
xor
in
popa
lea
data16
cmpsb
xchg
adc
fiaddl
cmp
adcb
inc
outsw
test
xchg
jp
inc
data16
test
inc
dec
imul
jp
inc
xor
xchg
out
xchg
test
xchg
xor
cld
aaa
xchg
test
ror
mov
push
mov
daa
bt
inc
pop
test
test
data16
dec
jne
mov
xor
out
notl
inc
xor
in
fstl
inc
pushw
sbb
test
data16
test
data16
mov
lcall
bound
inc
xor
test
shlw
cmp
mov
xor
fdivr
sbb
inc
data16
jmp
mov
into
shll
mov
add
enter
pop
xchg
test
xor
in
outsb
xchg
test
pop
pop
cld
mov
jp
inc
adc
sbb
adc
mov
data16
sbb
into
xchg
test
data16
jle
xchg
test
push
pop
out
xor
inc
xor
nop
and
inc
xor
out
xor
inc
xor
in
int
test
data16
repnz
pop
mov
xor
out
setno
cs
cmc
nop
test
data16
sbb
imul
xchg
xchg
test
xor
in
push
xchg
test
mov
test
xor
in
xor
inc
xor
nop
imul
jmp
sbb
inc
data16
in
push
xchg
test
xor
in
lea
sub
call
jp
inc
cbtw
movsb
inc
sarb
addb
add
test
or
shrb
mov
xor
sbb
add
leavew
dec
leave
test
enterw
jp
test
data16
test
xor
in
mov
rolb
mov
xchg
test
data16
es
fiaddl
pop
mov
sbb
xchg
test
xor
fdivr
mov
pop
icebp
les
cmp
xchg
and
sub
jp
inc
data16
clc
pop
test
test
mov
fimuls
jp
inc
xor
sbb
jp
inc
data16
jmp
dec
jp
inc
data16
sbb
jp
inc
xor
adc
test
data16
loope
inc
nop
test
xor
in
pop
mov
popfw
mov
or
cmp
xchg
xorl
xor
test
data16
in
es
dec
mov
data16
push
hlt
test
test
cmpw
mov
add
and
inc
mov
push
nop
test
xor
sub
jns
lcall
call
inc
pushw
cmp
jp
inc
data16
test
xchg
test
mov
mov
xchg
test
data16
sub
imul
cmpsb
adc
inc
imul
sarl
inc
data16
adc
jp
inc
xor
in
adcb
bound
mov
mov
add
out
lea
inc
xor
out
enter
jp
inc
data16
jb
push
mov
adc
pop
xchg
test
mov
pop
test
jp
inc
sub
call
jp
inc
xor
test
xor
test
data16
test
in
hlt
jmp
jp
inc
xor
js
mov
dec
inc
xlat
adc
mov
data16
add
test
xor
out
dec
mov
data16
daa
daa
faddl
cmp
les
mov
mov
data16
and
repnz
test
pop
pop
sub
push
xchg
test
xor
test
data16
or
xchg
lret
mov
test
data16
cmp
xchg
test
frstors
mov
and
inc
pop
xchg
xor
xchg
test
xor
in
xchg
nop
test
xor
test
dec
bound
mov
inc
lds
fidivs
xchg
test
mov
mov
inc
in
cmp
loop
mov
data16
jbe
loop
test
data16
les
jp
inc
pushw
jnp
lret
aas
jp
inc
inc
into
adcb
test
sub
test
xor
nop
xor
inc
xor
add
inc
mov
popw
mov
ret
test
xchg
mov
jp
inc
xor
in
or
addb
add
test
sub
cmp
jp
inc
mov
lret
rclb
inc
data16
sub
pop
jp
inc
data16
shl
rclb
inc
data16
cwtl
outsl
popa
nop
test
xor
in
fs
test
xor
push
imul
inc
data16
out
enter
or
inc
data16
push
fnstenv
mov
xor
cmp
nop
test
mov
loope
nop
test
data16
mov
push
cltd
xchg
test
data16
addr16
test
xor
in
push
xchg
test
xor
in
xchg
mov
xor
in
mov
test
data16
mov
jp
inc
data16
mov
lcall
inc
xchg
test
xor
in
adc
test
frstors
test
mov
cmp
xchg
test
testw
jb
inc
scas
push
aam
add
xor
in
rclb
inc
xor
in
iret
mov
hlt
xor
xchg
test
data16
test
mov
adc
xchg
test
xor
in
ss
test
repz
nop
test
xchg
lods
ret
jmp
test
xor
add
cli
nop
test
data16
xor
nop
test
xor
sbb
jp
inc
data16
test
data16
xchg
push
xchg
test
dec
adc
nop
test
xor
add
bound
inc
xor
in
cs
lcall
mov
test
data16
test
xor
in
pusha
xchg
test
data16
and
test
xchg
xor
mov
test
inc
pop
scas
popf
pop
xchg
test
data16
and
test
xor
in
scas
nop
test
xor
in
fmuls
inc
data16
pop
fcoms
test
xor
in
icebp
nop
test
xor
in
xchg
lcall
arpl
inc
xor
in
lcall
data16
out
repnz
test
data16
lock
xchg
test
xor
push
jp
inc
ss
jmp
mov
pop
inc
data16
out
jno
test
xor
test
data16
aad
mov
inc
inc
push
roll
jp
inc
sub
call
jp
inc
sub
call
jp
inc
xor
cmp
mov
xor
in
inc
nop
test
sbb
in
and
fs
data16
add
xchg
test
data16
jno
pushf
fs
enterw
add
mov
cmpsb
addr16
xchg
test
xor
in
stos
xchg
test
data16
test
inc
cli
sub
out
nop
test
data16
add
nop
mov
ljmp
and
inc
xor
xchg
in
mov
data16
fs
xchg
test
xor
in
jnp
test
enterw
sti
xchg
test
data16
lods
mov
ds
test
xor
repz
scas
gs
insl
jp
inc
pushw
rcrl
test
data16
jmp
xchg
imul
hlt
dec
lea
xor
nop
mov
inc
xor
movsl
push
xchg
test
xor
in
mov
lret
jl
ret
test
xor
xchg
pop
cmpl
cmpsl
add
in
repnz
push
xchg
js
stos
xchg
test
ljmpw
mov
data16
or
fwait
xor
test
xor
nop
xchg
imul
sub
jp
inc
xor
test
data16
xor
addr16
test
push
mov
test
sub
mov
mov
data16
mov
xor
in
imul
cmp
enter
jp
inc
sbb
test
data16
push
sbb
jp
inc
xchg
jge
and
xchg
test
xor
in
icebp
nop
test
pushw
cmp
jp
inc
data16
nop
test
data16
adc
xchg
test
xor
in
test
test
push
pop
jg
stos
addb
mov
xchg
sub
inc
xor
sbb
jp
inc
outsw
cmc
jecxz
jg
test
xor
test
outsw
in
inc
push
lea
data16
jmp
fisttps
inc
data16
test
xor
nop
test
inc
pop
scas
popf
rolb
les
test
data16
sub
xchg
mov
ljmp
lcall
mov
cli
inc
mov
aas
xchg
test
xor
in
popa
nop
test
xor
in
addr16
test
inc
dec
jmp
aas
jb
inc
pushaw
add
lret
test
data16
das
test
or
mov
cli
test
sub
icebp
leave
sub
in
nop
test
data16
rcrb
imul
in
dec
nop
test
xor
in
fwait
nop
test
xor
test
mov
xchg
add
inc
and
xchg
nop
sub
test
push
les
lds
stos
inc
mov
pop
call
mov
inc
outsb
loopne
test
push
out
or
lcall
std
xchg
test
xor
in
imul
jmp
jmp
outsb
xor
inc
jp
inc
popfw
call
test
data16
jg
repnz
test
data16
loop
cmp
mov
data16
imul
mov
nop
addr16
test
xor
add
inc
mov
popfw
rcrl
nop
test
xor
in
adc
rolb
ja
arpl
or
inc
data16
adc
pop
xchg
test
pushw
int
sub
test
inc
jns
lret
repz
test
xor
in
ss
test
data16
sub
mov
test
data16
test
data16
lahf
jp
inc
xor
test
xor
xchg
repz
data16
aam
or
inc
xor
test
data16
js
or
mov
xor
mov
popa
jp
inc
inc
push
cmp
xchg
test
data16
les
jns
mov
stos
pop
jmp
xchg
mov
data16
xchg
shll
inc
data16
jno
jb
test
xor
test
data16
leave
inc
xchg
inc
callw
jno
test
xor
in
push
mov
data16
out
shll
test
xchg
mov
or
inc
ss
fildl
loop
data16
and
xchg
test
leavew
mov
test
data16
xchg
out
adc
inc
xor
in
mov
pop
inc
mov
mov
and
mov
arpl
inc
data16
lea
add
or
sub
inc
gs
sbb
jp
inc
inc
sbb
mov
data16
test
imul
xchg
test
fs
or
pop
jp
inc
xor
test
data16
jp
inc
xor
in
std
xchg
test
xor
in
push
mov
data16
out
rcll
inc
data16
xchg
pusha
outsb
xchg
test
test
add
xchg
test
xor
in
jp
test
lock
push
outsb
pop
xchg
test
xor
in
fs
test
inc
dec
in
xchg
mov
data16
les
sbb
jp
xchg
sub
repnz
xchg
test
data16
cmp
jp
inc
data16
jmp
mov
adc
lods
roll
shll
jp
inc
xor
nop
int3
nop
test
xor
test
data16
mov
test
test
xor
test
data16
sub
inc
xor
xchg
arpl
inc
xor
in
addr16
test
xor
add
xchg
mov
xor
test
data16
loope
test
inc
mov
mov
jp
inc
fnstenvs
cmp
mov
xor
nop
test
mov
mov
jp
inc
data16
mov
test
mulw
test
lock
jp
inc
data16
scas
cmp
lahf
jp
inc
xor
in
or
inc
xor
test
data16
decb
jp
inc
data16
cmpl
xchg
test
mov
cld
dec
addr16
data16
xchg
jp
inc
xor
xchg
inc
nop
test
xor
in
aam
test
mov
mov
pushw
jecxz
push
jp
inc
pop
inc
sub
push
xchg
test
xor
add
mov
addb
sub
and
cmpsl
jp
inc
xor
in
lcall
data16
test
xor
in
push
xchg
test
mov
scas
lds
imul
enter
test
data16
jmp
fwait
nop
test
xor
out
out
test
data16
inc
iret
mov
dec
push
push
jp
inc
data16
test
call
jp
inc
xor
in
punpckhdq
pushw
daa
xchg
test
xor
in
add
mov
data16
xchg
dec
mov
test
xor
test
xor
out
ficoms
inc
imul
ret
out
ljmp
dec
lea
sub
call
jp
inc
xor
in
addr16
test
xor
in
dec
nop
test
push
leave
hlt
sub
inc
xor
test
data16
test
popaw
stos
loopne
jp
test
data16
lahf
loopne
mov
data16
pop
or
xchg
test
xor
in
adcb
xor
out
int
test
data16
ds
nop
test
pushw
roll
test
xor
in
lock
test
data16
cmp
jp
inc
iretw
xchg
cmp
add
xor
out
jmp
test
xor
in
jb
test
data16
aas
insb
jecxz
test
addr16
cmc
icebp
ds
test
xor
in
or
test
xor
test
xor
out
sub
mov
pushw
ljmp
lcall
fwait
mov
popw
repz
int
xchg
test
add
test
push
xchg
cmp
inc
inc
data16
subb
inc
xor
add
mov
test
data16
mov
jp
inc
outsw
pop
or
add
lret
imul
pop
xchg
test
xor
fdivr
stos
inc
xor
cltd
into
mov
data16
test
test
xor
in
ds
test
data16
dec
ss
add
adc
and
stc
jp
inc
xor
in
ja
test
data16
or
repnz
mov
lahf
or
inc
data16
inc
xor
cmp
inc
data16
mov
popf
jp
inc
imul
jb
test
xor
xchg
add
xor
in
xor
inc
add
rcrb
test
data16
movsl
mov
jp
inc
data16
mov
jp
inc
xor
push
imul
xor
shlb
xchg
jp
inc
data16
ja
aam
test
data16
adc
pop
lea
data16
jmp
xchg
nop
test
outsw
test
mov
rolb
ja
sbb
mov
test
xor
test
xor
xchg
int3
sub
inc
data16
sub
sub
pop
cmp
push
jecxz
xchg
dec
mov
data16
sbb
jp
inc
xor
test
rclw
xchg
test
xor
in
movsb
xchg
test
data16
test
inc
outsb
push
psllw
mov
cli
inc
push
sbbb
test
mov
mov
jp
inc
data16
or
fs
mov
xlat
xor
inc
and
test
data16
jmp
push
push
xchg
test
xor
in
out
test
data16
lret
stos
outsb
pop
xchg
test
data16
inc
ljmp
inc
data16
bound
jp
inc
sub
mov
test
data16
add
jp
inc
data16
jno
xchg
test
data16
mov
data16
push
fmuls
mov
imul
inc
imulw
or
test
sbb
cmpps
test
data16
and
xchg
test
data16
test
push
fistl
xor
inc
dec
into
jnp
pop
mov
loop
add
xor
push
imul
out
out
inc
mov
test
data16
pop
push
icebp
mov
data16
mov
outsb
xchg
test
xor
in
mov
test
data16
mov
jp
inc
xor
nop
mov
test
data16
into
mov
test
data16
cmpsb
xchg
mov
inc
pop
sbb
test
outsw
test
xchg
jp
inc
data16
add
jp
inc
inc
pop
xchg
jbe
test
xor
sbb
jp
inc
ds
inc
xchg
test
data16
or
aas
jp
inc
xchg
mov
test
data16
testl
or
mov
inc
push
rcrl
test
test
dec
pop
mov
xor
test
sbb
outsl
adc
test
xor
test
pop
adc
mov
jp
inc
data16
add
xchg
test
data16
jns
test
data16
or
scas
add
aam
shlb
xchg
test
pushw
int
xchg
cld
lcall
aas
xchg
test
data16
ret
vorps
data16
pop
rolb
jecxz
test
data16
aam
fwait
nop
test
gs
pop
push
mov
stos
inc
data16
xchg
pusha
mov
test
pop
arpl
pop
movsl
mov
xor
test
xor
out
dec
xchg
test
data16
xchg
test
data16
add
or
daa
ljmp
jp
inc
insw
in
loopne
and
inc
data16
xchg
or
test
xor
test
cmpsw
imul
sub
inc
data16
outsl
dec
jp
test
data16
stos
loopne
lea
xor
nop
stos
xchg
test
data16
test
xor
test
xor
nop
and
inc
xor
sbb
jp
inc
data16
ljmp
or
dec
aam
sub
test
cmp
enter
sbb
inc
sbb
push
and
test
data16
mov
imul
out
enter
dec
jp
inc
add
test
xor
test
adc
pop
loop
test
xor
cmp
jp
inc
data16
inc
cmpsb
mov
addb
add
test
data16
outsb
add
xchg
test
test
lfs
inc
pushw
ljmp
addb
add
test
cmpw
jp
inc
xor
xchg
and
pop
or
dec
out
test
popfw
adc
popa
outsl
nop
test
data16
mov
test
data16
jmp
push
xchg
test
test
and
inc
xor
in
jne
test
data16
jmp
jp
inc
xchg
add
cli
xor
add
jnp
push
data16
mov
push
loop
data16
pop
dec
insb
add
inc
xor
nop
ljmp
data16
in
nop
test
data16
popf
nop
and
inc
mov
nop
test
data16
pop
jmp
mov
xor
cmp
xchg
test
mov
mov
inc
push
aad
jno
test
pop
xor
lret
test
data16
pop
xor
test
add
test
data16
xor
jo
test
in
cmp
je
xchg
test
xor
test
data16
xchg
rolb
lea
sbb
lahf
nop
push
test
data16
xchg
push
or
mov
xor
in
std
xchg
test
fs
pop
in
nop
test
pop
xor
sbb
cmp
mov
ret
test
addb
add
test
data16
or
cmp
inc
sub
call
jp
inc
sbb
mov
mov
data16
rcrl
repnz
and
adc
mov
xor
test
pop
or
push
add
test
leavew
fs
test
les
test
data16
inc
jle
nop
test
pop
mov
test
xor
nop
push
xchg
test
xor
xchg
jne
test
data16
addr16
nop
test
xor
test
xor
sbb
jp
inc
xor
test
data16
add
dec
or
pop
sub
and
xor
test
xor
in
pop
nop
test
data16
jg
add
test
data16
adc
jp
inc
data16
cltd
adc
xchg
test
inc
inc
push
incb
test
xor
fdivr
adc
inc
pushw
mov
mov
xor
nop
mov
test
xchg
outsl
add
imul
out
inc
xchg
test
xor
in
pusha
imul
inc
add
inc
data16
adc
lds
inc
lretw
pop
clc
xchg
test
xor
in
outsl
xchg
test
data16
cmp
push
inc
xor
nop
nop
test
pop
pop
mov
lods
jp
inc
data16
sub
jmp
test
xor
in
repnz
test
data16
push
jle
pop
xchg
test
xor
test
adc
test
data16
pushf
xor
test
inc
dec
jmp
stc
jp
inc
ljmpw
sub
push
sbb
inc
xchg
test
dec
push
rcrb
jp
inc
data16
aaa
filds
and
inc
mov
int3
xchg
test
xor
repz
inc
movsw
mov
test
xor
out
jmp
addb
add
test
data16
leave
jo
test
xor
test
data16
cmpsb
xchg
xlat
mov
data16
outsb
loopne
xchg
test
xchg
int
inc
push
lea
data16
jmp
pop
mov
sbb
dec
aas
xchg
test
pushw
mov
nop
test
inc
and
test
data16
or
adc
insl
jo
lahf
fmuls
sbb
inc
fimuls
inc
insw
adc
mov
test
data16
mov
or
test
and
out
test
data16
ja
xchg
test
push
roll
jp
inc
xor
nop
and
addb
and
test
inc
lahf
fstps
xchg
test
xor
in
cmpsb
mov
pushaw
rcll
out
jp
inc
data16
test
xchg
mov
lods
mov
test
data16
ljmp
stos
inc
pop
or
dec
decb
inc
data16
test
data16
testb
test
data16
mov
test
repnz
inc
negb
test
xor
adc
mov
xor
test
dec
sbb
dec
jp
inc
leavew
hlt
call
mov
xor
test
xor
test
cmpw
pop
inc
data16
scas
sarl
inc
nop
test
data16
test
xor
in
adcl
push
inc
data16
inc
mov
xchg
test
data16
mov
test
data16
data16
cmp
push
popw
sbb
sub
test
data16
dec
jne
nop
test
popw
sbb
push
repnz
test
xor
test
xor
in
fs
test
data16
icebp
xchg
jge
test
data16
ret
jb
data16
test
data16
lea
jp
inc
xor
in
jnp
test
data16
fs
jp
inc
retw
push
push
sub
mov
dec
dec
jno
arpl
inc
data16
xchg
rorl
test
xor
test
xchg
jmp
inc
lcall
cmp
bound
xor
jp
inc
xor
in
scas
xchg
test
push
xor
test
outsw
test
sbb
shl
fstl
mov
data16
push
pop
jge
test
xor
in
clc
xchg
test
add
wbinvd
xchg
test
xor
in
arpl
inc
data16
xchg
stos
ret
in
nop
test
pop
mov
pop
pushf
xchg
test
data16
in
jl
test
xor
aam
nop
test
xor
in
push
push
inc
data16
or
inc
nop
test
xor
in
ret
mov
inc
xchg
xchg
sbb
addr16
popfw
dec
gs
iret
mov
mov
lret
adcb
pop
pop
lret
xchg
test
sub
test
data16
cmpsb
xchg
scas
nop
test
data16
jbe
lea
data16
pop
nop
test
data16
nop
xchg
nop
test
data16
adc
mov
xchg
pusha
mov
data16
xor
test
push
xor
dec
outsl
mov
pushaw
cmp
sbb
xchg
test
data16
int3
dec
jmp
stos
inc
xor
add
repnz
data16
mov
inc
jp
inc
data16
xor
sub
inc
pop
lds
ret
addr16
test
data16
icebp
xchg
fs
test
xor
in
or
mov
data16
or
xchg
test
xor
in
push
xchg
test
xor
in
adc
mov
data16
ljmp
mov
xor
fdivr
call
inc
test
pop
xchg
test
xor
in
insl
xchg
test
ljmpw
nop
test
xor
rcrb
test
data16
test
data16
repz
xchg
test
xchg
adc
test
xor
test
pushw
push
test
pop
mov
pop
cmpsb
mov
data16
xchg
mov
jp
inc
xor
jmp
popa
xchg
test
data16
and
mov
fucomp
outsb
sar
test
leavew
inc
leave
lds
xchg
jp
inc
dec
jb
inc
fstl
inc
xor
in
test
test
data16
or
ret
jp
inc
push
out
lahf
jle
xchg
test
xor
cli
cli
sbb
cmpsw
xchg
sub
jp
inc
xor
cmp
mov
shlw
repnz
xchg
test
data16
mov
test
data16
cmpxchg
jp
inc
xor
test
data16
imul
xchg
test
dec
shrb
arpl
inc
xor
nop
pusha
xchg
test
pop
repnz
fstpt
inc
xor
in
inc
mov
xor
test
xor
in
in
nop
test
data16
and
cmp
out
insb
enter
test
xor
adc
inc
xor
xor
xchg
test
xor
in
lcall
data16
push
sub
mov
mov
adc
xchg
test
xchg
cwtl
cmp
mov
pushw
out
inc
fisubs
test
dec
aam
inc
inc
mov
lds
mov
jp
inc
data16
jg
add
mov
data16
cld
cmc
test
data16
cmp
mov
jl
iret
add
test
pushfw
negb
jp
inc
inc
repnz
mov
jp
inc
data16
imul
xor
test
data16
push
add
jp
inc
pushw
jo
lods
sbb
inc
data16
aaa
or
adc
mov
test
mov
xor
push
jp
inc
data16
jmp
push
nop
test
lock
dec
setae
mov
ja
test
data16
pop
xchg
cli
repnz
test
data16
or
test
data16
jbe
add
xchg
test
xor
in
push
nop
test
data16
fisubl
pop
mov
data16
sub
inc
mov
shll
fstpt
inc
data16
adc
stos
ljmp
jb
test
xor
out
xor
pop
jae
gs
test
es
repnz
inc
cmp
cltd
sbb
test
popw
inc
shrl
and
pop
and
jp
inc
xor
in
add
fiaddl
sub
sub
jp
inc
pop
dec
pop
icebp
xlat
addr16
data16
jo
jae
test
dec
adc
lea
data16
cmpsb
adc
xchg
test
data16
push
xchg
inc
popw
int3
insl
nop
sub
test
xor
add
jp
inc
data16
jbe
add
xchg
test
data16
in
dec
xor
mov
scas
nop
test
xor
in
ljmp
data16
xchg
pop
xchg
test
pushw
gs
fdivr
nop
test
inc
push
jno
xor
inc
data16
push
jmp
adc
outsl
add
or
jmp
shlb
nop
test
data16
dec
cmpsb
jge
test
jmpw
or
xchg
test
data16
stc
dec
xor
inc
inc
data16
popf
ja
xchg
test
leavew
lret
iret
mov
data16
fdivrs
test
and
out
nop
test
scas
lahf
mov
xchg
test
data16
xlat
test
xchg
test
xor
in
jno
test
cmp
test
xor
jo
jbe
xchg
test
lock
push
shlb
jp
inc
inc
xchg
hlt
pop
lea
data16
cmpsb
adc
fiaddl
cmpsl
adc
inc
push
xchg
test
xor
in
inc
lea
xor
nop
or
inc
xor
ficompl
jp
inc
pop
aad
pop
cwtl
xchg
test
nopw
popf
jb
test
xor
cmpb
test
data16
mov
test
xchg
lds
scas
xchg
test
data16
mov
inc
test
stos
inc
cmp
test
xchg
inc
repz
scas
mov
stos
inc
data16
insl
into
aad
addb
add
test
xor
in
sbb
test
xor
test
data16
out
ret
pop
dec
lcall
or
inc
dec
test
nop
imul
xor
ds
iret
nop
test
push
aaa
leave
and
mov
xchg
iret
dec
lea
or
sub
test
pushw
push
test
data16
ja
or
test
shlw
rclw
inc
xor
mov
das
jp
inc
data16
rcrb
jp
inc
xor
inc
adc
inc
push
inc
lretw
pop
sti
mov
sbb
popa
fwait
movsb
xchg
test
xchg
test
outsl
nop
test
xor
push
gs
xchg
test
xor
ficompl
jp
inc
xor
fdivr
jo
test
cmp
xor
inc
cmp
sarl
xchg
jl
scas
inc
mov
data16
push
in
addb
add
test
xor
test
data16
mov
mov
mov
nop
test
or
inc
setb
xor
xchg
and
inc
data16
fstpt
nop
test
xor
out
cld
mov
data16
jmp
iret
jp
inc
data16
loopne
test
data16
lods
imul
xor
in
inc
xchg
test
xor
in
sbb
stos
xor
inc
data16
mov
test
leavew
gs
and
jb
inc
iretw
pop
lret
stc
cmp
inc
sub
call
jb
inc
dec
imul
lretw
sbb
test
data16
cmpsb
adc
test
data16
sub
lahf
imul
jle
xchg
test
xor
add
inc
xchg
test
data16
cld
cs
data16
out
out
mov
xor
adc
test
xor
out
ret
xor
mov
fdiv
out
nop
test
xor
test
data16
test
xor
test
xor
in
addb
mov
nop
lcall
xor
jmp
xchg
jp
inc
ljmpw
cli
inc
data16
test
data16
cs
test
data16
cs
jg
test
data16
dec
movsl
pop
mov
mov
xor
nop
stc
xchg
test
xor
in
xchg
nop
test
data16
xchg
inc
adc
fiaddl
push
mov
test
adc
dec
jb
test
xor
test
sbb
xchg
mov
test
data16
insl
xchg
jp
test
data16
lock
cmp
inc
xor
nop
xchg
nop
test
xor
test
data16
insl
lret
nop
test
xor
addr16
add
inc
push
imul
jp
inc
data16
shlb
packuswb
data16
lcall
xor
jecxz
push
lea
sub
call
jp
inc
data16
sbb
push
hlt
addr16
data16
imul
and
out
dec
jns
nop
test
xor
in
push
xchg
test
xor
in
or
inc
ss
jmp
xchg
test
xor
in
push
lea
data16
jmp
leave
jp
inc
xor
nop
mov
xchg
inc
data16
lods
outsb
dec
mov
mov
and
nop
test
inc
pushf
mov
cmpl
data16
mov
mov
mov
xor
nop
inc
nop
test
xor
in
dec
xchg
test
xor
in
adc
test
pushw
and
test
push
test
scas
nop
test
data16
es
test
xor
shlb
mov
mov
jp
inc
xor
nop
add
xor
in
test
test
ljmpw
xchg
test
xor
in
jb
test
pushaw
fcmovbe
mov
jp
inc
ss
jmp
xor
inc
xor
in
and
inc
xor
in
push
lea
data16
cmpsb
adc
xchg
test
pop
sar
pop
lea
xor
adc
pop
inc
push
pop
outsl
lret
orl
and
inc
bound
inc
data16
rolb
nop
test
xor
rcrb
lea
inc
xor
fdivr
aas
xchg
test
xor
out
adcb
data16
jns
or
inc
dec
test
test
data16
push
sbb
lods
in
pop
pop
mov
dec
push
ljmp
lcall
pop
xchg
test
data16
pop
pop
in
test
and
test
data16
adc
xchg
test
data16
aad
rorl
xor
nop
sbb
inc
data16
divb
loop
xchg
test
xor
out
and
inc
data16
xchg
mov
jp
inc
data16
jg
add
or
inc
xor
out
sub
inc
xor
out
sub
lcall
sub
inc
data16
pop
sbb
push
inc
dec
or
xchg
jp
inc
xor
in
pop
mov
insw
mov
test
data16
xchg
nop
sbb
inc
data16
sub
lods
xchg
test
data16
cmpl
inc
add
test
test
mov
test
lds
push
fisttpl
lea
push
mov
addr16
test
pop
add
test
xor
popf
out
or
inc
data16
mov
outsl
jp
inc
xor
test
adc
test
xor
out
fwait
mov
xor
test
popw
push
fisttps
mov
data16
test
ljmp
data16
sbb
push
inc
data16
cmp
and
data16
test
mov
jp
inc
ljmpw
lock
test
xor
in
sbb
inc
data16
sarl
nop
test
xor
test
xor
in
sub
test
data16
arpl
test
mov
xchg
test
pushfw
cmp
dec
nop
test
data16
pop
loop
test
data16
jmp
mov
jp
inc
callw
jle
mov
data16
push
mov
test
adc
mov
out
addr16
pop
les
xchg
jp
inc
mov
lock
nop
test
outsw
test
add
inc
data16
test
data16
out
enter
mov
inc
data16
sub
mov
cmp
mov
sarl
dec
fdivl
stos
mov
data16
cmc
mov
xchg
test
xchg
add
decb
and
nop
nop
jae
test
data16
jecxz
sbb
inc
data16
xor
mov
callw
sub
nop
test
xor
test
data16
test
sub
push
jno
xchg
test
data16
aas
and
inc
xor
in
and
inc
xor
add
jp
inc
data16
lods
inc
pop
pop
nop
test
adc
and
xor
in
test
inc
lcallw
mov
xor
test
or
test
xchg
test
xor
in
lcall
data16
test
jmpw
int3
in
test
inc
pop
push
xorb
lods
jp
inc
data16
cmp
test
inc
adc
jl
xchg
test
xor
in
dec
dec
inc
or
cmpsl
aad
test
push
mov
xchg
dec
xchg
test
data16
push
jp
inc
sub
or
mov
data16
lds
nop
test
data16
jp
xchg
xchg
mov
xor
in
js
test
data16
lret
xchg
mov
xor
test
sbb
lahf
aaa
mov
data16
popf
stc
test
test
inc
pop
jmp
aad
test
data16
xchg
dec
and
lret
lods
or
mov
data16
mov
add
xor
in
jo
test
xor
test
outsw
cmc
jecxz
or
inc
xor
in
dec
lea
data16
cmpsb
xchg
std
nop
test
ljmpw
stos
inc
data16
pop
lret
test
pop
movsl
xchg
out
test
testw
test
mov
xchg
test
cmpsw
xchg
sub
and
jecxz
or
sub
into
stc
mov
data16
ljmp
pop
inc
out
rclb
jp
inc
xor
test
mov
pop
imul
cmp
xchg
test
xor
cmp
jp
inc
xchg
ss
pop
lea
data16
cmpsb
adc
mov
data16
repz
lds
inc
sub
test
xor
in
lods
xchg
test
data16
test
inc
stos
into
aaa
add
xor
in
movsb
xchg
test
data16
mov
aaa
stos
inc
retw
in
add
test
xor
in
cli
xchg
test
pushw
sub
test
dec
std
cwtl
test
test
data16
mov
adc
inc
pop
sub
dec
lea
data16
cmpsb
adc
test
xor
in
je
test
inc
xchg
xchg
dec
fcoml
inc
xor
in
pop
nop
test
xor
in
lahf
mov
lods
call
test
xor
test
data16
notb
jp
inc
iretw
out
orb
inc
xor
test
xchg
and
popa
jl
test
inc
dec
aad
sbb
lcall
inc
lea
xor
nop
inc
xchg
test
xor
test
data16
ljmp
xor
shlb
in
xchg
test
data16
pushf
lahf
lret
mov
inc
xor
nop
jbe
test
xor
xchg
out
xchg
test
data16
mov
test
pushw
ljmp
jp
inc
data16
fistpll
inc
pushfw
into
push
push
mov
test
pop
aad
inc
outsl
fiaddl
jae
mov
jp
inc
data16
test
sub
test
pushw
cmp
jp
inc
data16
test
sbb
mov
sub
xchg
xchg
jno
mov
xor
in
outsb
cmp
mov
test
data16
cmp
xchg
test
add
lods
jp
inc
data16
dec
push
insb
lea
data16
jmp
lcall
data16
mov
and
or
push
push
jns
std
xchg
test
xor
in
dec
xchg
test
xor
in
cli
mov
adc
test
mov
mov
jp
inc
xchg
gs
movsl
or
inc
data16
add
ljmp
inc
data16
ljmp
addb
icebp
add
jp
inc
data16
movsb
prefetch
loope
sbb
cmp
test
mov
loopne
mov
xor
test
pushw
mov
push
mov
outsw
pop
out
pop
nop
test
xor
in
stc
mov
repnz
jl
pop
nop
test
xor
in
mov
xor
test
pushw
sub
test
in
pop
or
mov
call
mov
xchg
adcb
jp
inc
xor
in
clc
ret
xor
xchg
test
xor
in
aad
test
cmp
scas
dec
lcall
push
fs
dec
scas
pop
xchg
add
inc
notw
fnstcw
inc
xor
nop
test
lret
pop
push
fcmovnu
fisttps
inc
outsw
pop
out
int
test
popw
mov
mov
test
data16
xchg
into
xchg
push
xor
test
dec
dec
fsubr
xchg
test
xor
push
jp
inc
xor
in
imul
push
daa
jp
inc
xor
xchg
and
inc
data16
dec
jne
xchg
test
cmp
imul
jmp
sbb
xor
movsl
push
lea
xor
nop
jg
test
mov
fs
rolb
push
je
fwait
adc
inc
xor
in
push
test
loop
push
popa
add
addb
gs
xchg
rorl
inc
data16
dec
fldl
sbb
add
leave
push
jp
inc
data16
test
xor
in
sbb
lcall
lock
test
push
dec
jl
push
pop
inc
pop
push
lods
std
dec
nop
test
data16
insl
xor
js
test
data16
add
test
data16
scas
jecxz
test
sub
push
xchg
data16
jbe
and
mov
mov
mov
test
fs
mov
dec
xchg
test
xchg
mov
test
ljmpw
mov
data16
into
and
mov
test
xor
test
data16
test
data16
push
insl
lea
data16
jmp
mov
xor
nop
ds
test
xor
out
lcall
xor
test
pop
aad
pop
add
sub
and
test
shlw
test
xor
test
test
test
data16
test
data16
sub
dec
jp
inc
sbb
xchg
fs
test
xor
in
mov
test
sub
push
mov
addb
add
test
pushw
or
cs
mov
sub
addb
int
xchg
jae
test
xor
and
mov
xor
test
xor
in
in
test
xor
test
sbb
mov
jp
inc
outsw
cmp
nop
test
pushw
sbb
jp
test
retw
sub
mov
mov
or
xchg
test
xor
fdivr
hlt
nop
test
xor
ret
mov
xor
dec
jp
inc
sbb
inc
out
xchg
test
xor
out
push
ret
inc
dec
lcall
adc
imul
inc
data16
rorb
mov
mov
add
mov
xor
cltd
pop
xchg
test
out
ret
inc
fdiv
xchg
test
xor
in
loop
test
pushaw
xor
test
outsw
xchg
in
xchg
test
push
pop
out
es
rolb
gs
xlat
lea
xor
nop
lods
imul
test
data16
push
jae
test
data16
out
push
xchg
test
xor
in
dec
lea
data16
jmp
nop
test
xor
in
push
xchg
test
inc
mov
test
imul
sbb
mov
mov
jp
inc
data16
cmp
jp
inc
data16
jo
sub
inc
les
sub
xchg
test
xor
in
xchg
xchg
test
data16
insl
xor
outsl
xchg
test
pushw
ss
adcl
xchg
xchg
jbe
test
mov
xchg
test
data16
pavgw
test
pushw
mov
xchg
test
out
gs
cwtl
xchg
test
sbb
sub
jp
inc
data16
stos
clc
cwtl
inc
xchg
test
xor
xchg
nop
nop
test
data16
rcrb
test
xor
in
cltd
mov
data16
sub
xchg
addr16
or
xchg
mov
test
data16
xchg
inc
lcall
xor
test
xor
in
test
mov
mov
jp
inc
data16
add
mov
mov
push
add
test
incw
out
mov
data16
add
add
add
adc
xchg
test
data16
mov
push
repz
inc
xor
test
pop
aam
push
hlt
xchg
test
xor
in
or
inc
popw
push
loop
jmp
test
xor
xchg
dec
xchg
test
xor
in
sub
inc
sub
and
and
lcall
inc
xchg
test
data16
adc
test
data16
out
dec
lea
xor
nop
mov
push
jp
inc
data16
div
push
addr16
cmpsw
popa
add
xchg
jp
inc
data16
aad
xor
inc
jp
inc
data16
outsb
rcl
addr16
data16
mov
callw
xor
xchg
test
xor
cmp
jp
inc
xor
nop
orb
xor
test
xchg
or
inc
jp
inc
pop
mov
mov
sub
and
test
data16
mov
out
mov
ljmp
mov
xor
adc
test
data16
dec
xchg
or
nop
test
xor
out
inc
jp
data16
idiv
nop
test
data16
scas
cltd
jno
test
popaw
cwtl
pop
pop
mov
test
outsw
test
xor
inc
xor
in
mov
test
pop
rclb
jp
inc
xor
jmp
inc
mov
mov
pop
pop
lea
data16
jmp
fisttpll
data16
mov
push
sbb
push
lea
xor
adc
lret
add
or
lcall
pop
xchg
test
xor
in
mov
data16
mov
sahf
mov
data16
ret
repnz
xor
test
xor
in
ja
test
data16
sbb
nop
test
xor
in
inc
test
mov
jmp
xchg
jp
inc
data16
test
xor
in
push
mov
data16
popf
push
sub
test
pushw
add
cld
nop
test
pushw
cmp
jp
inc
xor
test
xor
in
sbb
inc
xor
in
add
xor
push
imul
lcall
aas
xchg
test
xor
in
mov
test
insw
loope
movsl
loope
test
testw
xchg
test
xor
in
bound
inc
data16
cmpsb
adc
add
cmpsb
sahf
dec
inc
pop
mov
xor
pop
xchg
pop
xchg
test
xor
in
out
test
data16
popf
jne
and
inc
data16
push
mov
ret
xchg
test
test
test
dec
adc
cmp
push
out
inc
fisubrs
inc
xor
in
outsb
xchg
test
xor
in
jle
test
xor
lods
setae
data16
sub
nop
test
adc
jle
lock
add
test
data16
clc
inc
sbb
inc
mov
or
xor
and
je
test
cmp
jp
cmp
mulb
test
data16
test
data16
testb
mov
xor
ds
test
data16
xchg
lea
or
inc
xor
test
mov
bound
cltd
jp
inc
xor
nop
hlt
xchg
test
xor
in
cwtl
mov
data16
add
xchg
test
add
test
orw
mov
inc
data16
pop
push
rolb
push
push
test
xorw
pusha
xchg
test
mov
xchg
mov
data16
jb
jns
xchg
test
data16
and
cmpsl
xchg
test
pop
mov
jae
nop
test
pushw
adcl
sbb
adcb
data16
loop
jo
nop
test
mov
iret
xchg
mov
xor
test
data16
jmp
das
lea
sub
call
jp
inc
data16
push
jp
inc
xor
in
gs
test
data16
xchg
inc
es
test
xor
out
je
test
orw
lds
inc
data16
lods
mov
pop
mov
data16
ljmp
adc
ss
jmp
and
inc
data16
jmp
push
mov
data16
adc
nop
test
data16
aam
nop
test
data16
mov
pop
imul
and
jp
inc
xor
test
mov
jle
xchg
test
pushw
cmp
jp
inc
xor
in
or
inc
or
test
data16
mov
jp
inc
xor
in
mov
xchg
inc
xchg
pop
add
xchg
test
data16
test
pushw
jp
xchg
mov
xor
adc
test
data16
repz
mov
stos
sub
test
dec
cmp
or
jp
inc
repnz
arpl
inc
mov
mov
lea
data16
jbe
mov
data16
push
outsl
adc
push
test
xor
iret
hlt
xor
xchg
test
data16
push
jle
test
mov
outsb
add
lcall
and
inc
data16
idiv
jge
test
jmpw
add
nop
test
data16
inc
ficompl
xchg
test
data16
test
xor
in
sub
loop
data16
push
xchg
mov
data16
push
or
rolb
sub
test
pop
jp
inc
data16
cmpsb
adc
xchg
test
data16
mov
int
lcall
jp
test
inc
loope
aas
mov
inc
data16
inc
mov
xor
nop
and
repz
pop
imul
inc
data16
jmp
xchg
fs
mov
sub
mov
xor
test
data16
add
mov
adc
mov
data16
pop
jp
inc
data16
call
or
cwtl
cli
mov
data16
nop
push
addr16
data16
cs
jp
inc
adc
lea
jp
inc
inc
mov
test
mov
fdivr
xchg
test
xor
in
cwtl
mov
enterw
popf
nop
test
data16
jbe
add
xlat
jp
inc
xor
in
push
imul
outsl
adc
inc
xor
mov
mov
mov
jmp
ret
jp
inc
data16
call
lods
stc
xchg
test
xor
shl
xchg
test
data16
cwtl
cmpsl
out
mov
data16
jmp
jmp
mov
xor
out
xchg
test
data16
jg
add
test
push
test
cli
xchg
test
xor
in
inc
xchg
test
xor
out
cmp
inc
xor
nop
dec
xchg
test
xor
fdivr
jge
test
data16
push
cwtl
stc
mov
data16
pop
add
test
scas
gs
mov
stos
inc
data16
aam
notb
inc
xor
cli
cli
push
lea
data16
cmpsb
adc
xchg
test
data16
and
jno
test
lds
test
xchg
test
xor
ficompl
jp
inc
push
loopne
inc
lods
nop
test
data16
inc
xor
or
inc
mov
addl
push
jp
inc
lock
mov
or
inc
xor
xchg
inc
mov
data16
push
dec
sbb
test
outsw
cmp
mov
data16
sarl
inc
data16
je
mov
lea
data16
jmp
mov
fiaddl
mov
test
xor
test
data16
movsb
aad
xchg
test
out
iret
mov
jp
inc
stos
pop
jmp
xor
test
xor
in
out
test
inc
out
cmp
mov
outsw
mov
fsts
inc
data16
or
nop
test
data16
cmp
pause
test
data16
out
xchg
cwtl
cwtl
xchg
test
data16
xor
sbb
test
xor
in
aam
test
data16
cli
pop
push
pop
inc
data16
ret
push
addb
add
test
cmp
cltd
subl
xor
inc
data16
daa
xor
mov
data16
out
inc
xchg
test
xor
in
jl
test
cmp
sub
xchg
jp
inc
xor
add
jp
inc
jmpw
out
mov
mov
cmp
test
dec
push
push
daa
inc
rolb
stos
sub
xor
test
xor
add
pop
mov
xor
out
mov
data16
ljmp
fiaddl
sub
lea
xchg
test
data16
stos
fisubrs
test
data16
pop
cltd
gs
test
xor
leave
push
xchg
test
xor
in
sub
addb
icebp
add
fstl
inc
xor
in
fmull
inc
push
enter
lea
xor
nop
jmp
test
xor
in
test
mov
out
inc
nop
test
mov
mov
jp
inc
data16
fcomps
jp
inc
data16
jo
or
inc
ss
jmp
jno
rolb
mov
jmp
ljmp
data16
jo
xchg
test
or
cmp
inc
xchg
jbe
push
lea
xor
test
pushw
outsl
rcll
repnz
adc
jmp
xlat
jp
inc
xchg
pop
mov
stos
jp
inc
outsw
test
in
jp
inc
xor
test
movsw
mov
jo
xchg
test
data16
loope
jae
test
data16
xor
xchg
test
xor
in
addr16
test
data16
jns
or
test
mov
sbb
xchg
test
data16
inc
mov
mov
mov
jp
inc
xor
test
data16
sarl
mov
adc
inc
data16
mov
imul
cmpsb
xchg
insl
mov
data16
in
andb
ja
mov
mov
jp
inc
popw
in
xchg
pop
xchg
test
in
lea
dec
lea
data16
cmpsb
adc
lcall
and
inc
data16
data16
mov
data16
jmp
nop
test
mov
jbe
xchg
test
testw
mov
xor
movsl
lea
ss
jmp
sarl
xor
nop
std
nop
test
xor
xchg
push
xchg
test
xor
in
rclb
inc
data16
ds
nop
test
inc
cli
sub
testl
pop
dec
mov
data16
out
mov
mov
sbb
mov
jb
inc
dec
adc
pushf
cmp
inc
and
lret
and
ljmp
dec
lea
data16
pop
outsb
call
jp
inc
xchg
pop
xchg
fiaddl
pop
mov
cmp
xchg
test
data16
xor
popa
push
lea
data16
test
xchg
pop
into
xlat
sub
inc
xor
cmp
cmp
inc
sbb
test
xchg
mov
pushw
ljmp
xor
shlb
and
xchg
test
mov
mov
jp
inc
data16
mov
jp
inc
in
push
xchg
xchg
inc
mov
int
lea
inc
in
mov
insb
mov
cli
fs
xchg
test
jmpw
loopne
xchg
test
xor
test
stos
out
xchg
scas
addr16
data16
xor
mov
jp
fs
cwtl
adc
test
add
jnp
int3
xchg
test
xor
add
stos
nop
test
in
cld
xchg
mov
inc
xor
in
fs
test
cmpsw
sub
push
jp
inc
xor
in
xor
lret
cmp
or
jle
test
xor
in
mov
adc
mov
nop
test
xor
out
or
inc
data16
cli
sub
jecxz
test
xchg
pop
mov
stc
jp
inc
xor
in
fists
inc
sbb
popf
jb
test
push
lcall
mov
ffree
stc
jge
lcall
and
inc
data16
sbb
jp
inc
xor
xchg
pop
nop
test
xor
sbb
jp
inc
data16
mov
sub
jmp
cmpsb
cwtl
sbb
xchg
test
xor
in
mov
call
push
jp
inc
add
or
nop
test
xor
in
xchg
inc
adc
test
lretw
test
mov
xchg
out
push
mov
xchg
sahf
enter
jp
inc
data16
in
mov
data16
test
pop
xchg
test
data16
aaa
add
and
mov
xchg
test
dec
leave
dec
je
mov
data16
ljmp
sub
testb
addr16
data16
pop
xchg
test
xor
test
xor
test
data16
test
mov
mov
jp
inc
lretw
xchg
pop
nop
test
xor
test
xor
test
dec
jg
mov
jp
inc
mov
shlb
test
sbb
add
lret
mov
xchg
test
push
xchg
jbe
lcall
xor
cmp
mov
data16
cmpsb
inc
push
fmull
inc
dec
out
fdiv
inc
pushw
mov
aaa
in
test
insw
dec
sbb
fmull
inc
outsw
pop
out
pop
mov
data16
mov
mov
data16
dec
xor
inc
xor
nop
cmp
inc
inc
cmp
cmp
inc
xor
nop
inc
xchg
test
pushw
mov
data16
jmp
icebp
mov
xor
nop
sub
cmp
and
cltd
jp
inc
data16
cmpsb
adc
mov
data16
xchg
or
xchg
test
data16
and
iret
mov
data16
cmp
test
data16
test
data16
jmp
aaa
xchg
test
iretw
dec
sub
addr16
test
xor
add
jp
inc
data16
ret
jp
inc
data16
adc
mov
xor
xchg
pop
xchg
test
data16
into
les
xchg
test
data16
into
mov
jmp
push
rolb
arpl
dec
adc
test
dec
jo
push
push
ret
lcall
adc
xchg
jb
inc
xchg
leave
aas
nop
testb
xor
test
mov
cld
xor
lcall
repnz
xor
mov
nop
test
xor
test
xor
add
jp
inc
xor
in
adc
inc
cwtd
call
test
data16
clc
test
test
xor
cwtl
cmp
inc
inc
fadds
cmp
inc
xor
jmp
jp
inc
data16
stos
sub
adc
insb
in
sti
repz
data16
mov
jecxz
xchg
test
data16
mov
cmp
inc
data16
xchg
pop
lea
xor
nop
sub
test
insw
cmp
jns
addb
add
test
pop
icebp
cld
pop
pop
mov
jp
xor
test
xor
in
mov
stos
inc
data16
lods
shll
test
xor
in
fs
test
mov
mov
xor
test
fs
pop
nop
test
xchg
int
xchg
push
lea
data16
jmp
and
inc
data16
out
inc
pop
xchg
test
data16
add
inc
lret
fimull
sbb
into
call
xchg
test
pushw
loope
imul
sahf
xchg
test
data16
arpl
fnstsw
inc
outsw
test
insb
sub
push
data16
test
inc
cmpsl
mov
jp
inc
xor
in
std
mov
data16
cld
ss
nop
test
data16
adc
xchg
test
data16
ljmp
jp
inc
out
pop
ja
xchg
test
data16
arpl
add
inc
data16
test
test
data16
mov
mov
inc
xor
test
xor
out
sub
lcall
rclb
inc
data16
push
sbb
jp
inc
xor
test
xor
test
sarw
xchg
jp
inc
xor
or
cli
mov
data16
mov
push
test
data16
cmpsb
adc
fs
shl
ret
dec
xchg
test
xor
in
lcall
inc
cli
sub
xchg
inc
xor
test
data16
bound
mov
data16
xchg
test
retw
push
adc
xchg
test
xor
in
jb
test
data16
stos
mov
test
xor
out
orl
jnp
into
xchg
test
xor
in
dec
xchg
test
data16
loopne
xchg
test
or
mul
lods
nop
test
xor
test
data16
inc
push
insl
stos
inc
data16
mov
test
xor
test
xor
xchg
sbb
inc
data16
adc
add
inc
xor
test
data16
jmp
pop
xchg
test
data16
scas
sub
adc
push
jp
inc
data16
test
pop
icebp
push
jae
xchg
test
data16
inc
mov
xchg
test
xor
in
push
xchg
test
xor
in
add
inc
mov
movsl
pop
dec
lea
xor
nop
dec
xchg
test
data16
test
sbb
adcl
gs
inc
xor
xchg
jns
test
xor
add
cli
xchg
test
data16
into
xchg
mov
push
xor
mov
jp
inc
data16
xchg
and
jp
inc
ss
pop
mov
popw
movsl
cmpsl
popa
call
inc
data16
adc
inc
xor
in
popa
bound
wbinvd
and
test
data16
cmpsb
adc
test
data16
test
ds
mov
data16
jg
notb
inc
data16
cmp
sub
inc
data16
push
ret
jp
inc
sbb
out
xchg
test
xor
repz
test
data16
adc
jno
test
data16
inc
xchg
lea
xchg
test
xor
in
movsb
addr16
mov
ss
xchg
test
data16
pop
pop
pop
xchg
test
data16
and
subb
test
inc
test
test
xor
add
lret
mov
data16
decl
xor
scas
cmp
mov
mov
data16
in
xchg
test
data16
cmp
cwtl
sbb
inc
data16
enter
test
and
rorl
adc
inc
data16
imul
lods
xchg
inc
data16
test
inc
push
rorl
lcall
push
add
cmc
lahf
xchg
test
data16
or
test
xor
in
inc
mov
data16
sbb
cmpl
addr16
push
mov
call
xchg
jp
inc
xor
xchg
mov
test
data16
mov
test
xchg
nop
cltd
and
mov
data16
outsl
push
push
nop
test
data16
outsb
pusha
lea
data16
jmp
dec
xchg
test
data16
cmp
add
xchg
test
data16
add
test
pop
or
or
mov
data16
int
cmp
jno
sbbl
lcall
push
adc
je
mov
and
test
data16
and
sbb
dec
inc
data16
or
jp
inc
lretw
push
frstor
push
inc
data16
scas
mov
test
data16
jp
cmp
lcall
and
inc
data16
test
xor
test
xor
nop
or
inc
xor
in
rcll
inc
mov
mov
pop
add
test
data16
mov
cmp
xor
in
test
test
pushw
mov
and
rolb
push
je
lcall
inc
sub
loop
repz
data16
jecxz
jo
test
pop
xor
mov
rolb
inc
sti
outsb
add
mov
push
mov
pushf
sub
inc
data16
jle
lret
push
inc
pushw
push
test
data16
or
nop
mov
sub
test
ss
jmp
out
jp
inc
pop
lds
popf
nop
test
data16
pushf
mov
cmpl
enter
test
sbb
and
lcall
rorl
inc
pushfw
add
in
xchg
test
xor
in
pop
imul
rorb
inc
xor
test
xor
lds
xchg
inc
in
enter
test
mov
jl
test
dec
lods
movsl
stos
int3
nop
test
xor
in
pop
nop
test
xor
in
adcl
mov
mov
jp
inc
lcallw
mov
data16
cli
xor
lcall
cwtl
nop
test
data16
dec
jne
addb
mov
xchg
stc
nop
test
data16
cli
into
mov
test
data16
jp
inc
xor
add
bound
inc
data16
outsb
push
sti
xchg
test
data16
in
dec
imul
outsw
test
xor
inc
xor
in
fcoml
inc
data16
mov
lahf
jae
test
test
bound
inc
xor
xchg
xchg
addr16
adc
inc
int3
xchg
test
data16
and
insl
xchg
test
lcallw
xchg
test
xor
in
nop
test
xor
in
pop
test
xor
and
out
or
or
xor
push
add
jp
inc
data16
jmp
mov
data16
cs
rolb
sub
test
ds
out
sub
test
data16
and
pop
repz
test
xor
in
pop
lea
data16
jmp
mov
data16
xchg
jp
inc
data16
jns
pop
lea
xor
nop
cld
xchg
test
xor
in
rorb
inc
pushw
mov
and
xchg
test
xor
in
xchg
test
xor
cmp
add
sub
loop
aad
test
xor
test
data16
test
data16
sbb
pop
xchg
test
xor
test
rcrw
test
inc
and
arpl
ljmp
push
xchg
test
xor
xchg
add
xor
in
mov
inc
xor
out
adc
inc
data16
jge
xchg
test
data16
jp
test
test
es
xor
and
xor
xchg
or
pop
jp
inc
popw
std
xchg
xchg
add
inc
xor
test
data16
fisubs
pop
jp
inc
outsw
gs
add
nop
test
data16
sub
mov
mov
cmp
jp
inc
data16
mov
dec
pop
xchg
test
pushw
test
jp
inc
data16
adc
xchg
test
xor
sbb
jp
inc
xor
in
je
test
es
notb
inc
push
pusha
inc
inc
into
pop
mov
xchg
test
data16
popa
aam
xchg
test
xor
in
aam
test
xor
sbb
jp
inc
xor
test
cmpsw
imul
jne
addb
movsl
stos
xchg
lea
push
inc
data16
jmp
fimull
sbb
push
and
inc
mov
xchg
test
data16
mov
out
test
data16
bound
data16
leave
icebp
pusha
mov
xor
xor
test
data16
je
mov
nop
test
cmpsw
sub
xchg
xchg
test
xor
in
repz
test
add
or
addb
jns
xchg
inc
lea
xor
nop
jno
test
adc
cmp
xchg
test
xor
in
pop
lea
data16
cmpsb
adc
test
xor
adc
sbb
xchg
arpl
loope
test
data16
nop
test
xor
mov
loop
test
data16
cmpsl
scas
out
lea
data16
cmpsb
adc
loop
xchg
xchg
mov
sarl
sub
call
jp
inc
xchg
aad
sbbl
dec
jp
inc
mov
imul
icebp
pop
jl
xchg
test
mov
mov
jp
inc
bound
xor
and
inc
data16
push
pop
cltd
inc
xchg
test
lcallw
mov
pushw
ljmp
cli
inc
sbb
mov
xchg
test
xor
test
add
adc
aas
xchg
test
xor
movsl
and
inc
pushw
mov
adc
xor
in
push
mov
mov
daa
push
xchg
test
xor
test
xor
test
movsw
mov
test
xor
xchg
test
xor
nop
mov
ljmp
mov
adc
hlt
jl
xlat
cmp
xor
or
test
pushw
cmp
jp
inc
xor
in
pop
sbb
stos
xor
inc
nop
test
mov
mov
jp
inc
data16
jbe
add
lcall
sbb
sub
inc
data16
dec
lods
fdivp
xchg
test
xor
out
jmp
fiaddl
add
insb
jle
test
popaw
movsl
pop
mov
jp
inc
pushw
cmpsb
adc
xchg
test
xor
sbb
jp
inc
mov
mov
jp
inc
add
aad
mov
xor
addr16
inc
xchg
test
xor
in
mov
bound
aad
bnd
xchg
test
xor
in
mov
test
data16
ss
test
xor
sbb
test
jmpw
push
pop
rolb
jmp
sbb
pop
aad
loop
nop
test
xor
test
data16
test
popfw
test
inc
push
xchg
test
data16
stos
popf
out
xchg
test
test
popf
dec
xchg
test
xor
fdivr
pop
mov
dec
mov
jecxz
repnz
data16
test
xor
add
jp
inc
sub
pop
xchg
test
xor
in
jg
test
data16
lods
xchg
imul
out
mov
jp
inc
data16
outsb
sbb
pop
imul
xchg
sbb
inc
data16
xchg
test
xor
test
xor
test
xor
in
add
inc
sbb
stos
xchg
test
dec
neg
test
jp
inc
popw
mov
mov
adc
outsb
mov
out
jp
inc
insw
pop
lea
mov
xor
test
xor
adc
nop
test
test
outsl
call
jp
inc
push
cmp
test
xor
test
data16
cmp
add
test
scas
gs
fstpt
inc
data16
fcoms
inc
mov
data16
icebp
sub
test
mov
mov
orl
outsl
fldlg2
mov
xor
out
mov
xor
test
data16
repnz
sbb
jp
inc
data16
mov
lret
jp
inc
xor
repz
inc
sti
outsb
add
mov
data16
ret
test
xchg
and
outsl
add
test
data16
push
lods
dec
mov
data16
mov
fwait
jp
inc
inc
movsb
mov
jp
inc
xor
test
xor
in
repz
test
data16
sahf
es
jp
inc
xor
in
inc
nop
test
dec
dec
and
jp
inc
outsw
xchg
push
jo
test
xor
xchg
lock
data16
mov
test
data16
jmp
mov
dec
inc
data16
sbb
jp
inc
data16
jge
xchg
nop
test
data16
not
xchg
test
data16
sub
adc
inc
data16
fwait
cmp
pusha
xchg
test
xor
in
cmpsb
mov
sub
xchg
pop
mov
data16
test
dec
rcrb
call
jp
inc
data16
loope
add
inc
data16
add
jp
inc
xor
add
cmpsl
xchg
test
imul
imul
ror
xor
xor
aaa
push
jmp
xor
xor
test
xor
in
jae
test
xor
sbb
mov
data16
cmpsb
sti
repz
inc
data16
test
xor
in
dec
lea
xor
adc
mov
data16
mov
jp
inc
xor
add
jp
inc
data16
call
inc
xor
push
imul
lcall
in
test
data16
mov
movsl
xchg
test
xorw
lcall
clc
nop
test
xor
in
cmpsl
xchg
test
or
fidivrs
int
test
xor
in
push
mov
data16
test
xor
jb
push
dec
xchg
inc
data16
insb
xchg
push
lea
or
sub
test
xor
test
xor
in
test
mov
mov
jp
inc
data16
cmpsb
adc
test
add
aas
gs
xchg
test
pop
push
pop
dec
pop
xchg
test
pushw
in
nop
test
data16
dec
jno
and
inc
xor
out
jno
test
insw
lds
sti
sti
nop
test
popw
movsl
jp
inc
data16
imul
jmp
inc
xchg
test
xor
sub
test
xor
add
jp
inc
data16
xor
xchg
test
xor
in
gs
test
cmpsw
mov
test
data16
add
pop
jp
inc
data16
mov
arpl
inc
data16
inc
jne
mov
data16
sarl
test
push
mov
test
psrlq
mov
rolb
xlat
cs
jp
adc
and
movsl
sub
nop
test
data16
adcb
push
xchg
test
data16
xchg
cmp
test
stos
dec
add
add
inc
xor
in
outsb
nop
test
xor
in
test
mov
mov
jp
inc
scas
push
lret
inc
dec
xchg
test
inc
mov
test
xor
in
inc
xchg
test
data16
inc
loopne
fs
data16
adc
inc
inc
movsw
rcrl
jo
lea
xor
nop
aaa
lea
xor
nop
push
mov
data16
dec
add
test
rclw
test
lcallw
xchg
test
xchg
jg
xchg
test
data16
jp
inc
data16
cmpsb
xchg
dec
nop
test
add
test
popw
imul
inc
xchg
push
mov
lea
data16
cmpsb
xchg
call
lret
jmp
jae
cs
test
pushw
push
push
mov
jp
inc
data16
lock
and
inc
xor
in
dec
adc
jge
pusha
add
jp
inc
data16
cld
aas
jbe
test
dec
jo
xchg
int3
nop
test
data16
sbb
pop
jp
inc
data16
pop
adc
dec
lea
data16
cmpsb
adc
test
data16
in
fs
test
push
int
test
xor
add
jp
inc
xor
pop
xchg
xchg
test
pushw
sbb
ja
mov
lea
mov
test
data16
sbb
aas
jp
inc
data16
into
dec
inc
xchg
test
xor
in
decb
inc
or
movsl
insl
xchg
mov
dec
imul
mov
fiaddl
repnz
cmp
mov
inc
pushw
ljmp
mov
outsw
test
jne
loop
push
mulb
or
inc
data16
test
xor
nop
fmull
data16
dec
stos
or
inc
xor
nop
sbb
pop
inc
cbtw
inc
xchg
inc
nop
test
xor
test
data16
cmpsb
adc
addb
hlt
push
jns
or
inc
mov
dec
jp
inc
xor
in
in
test
lretw
jo
lea
data16
jmp
jae
test
data16
test
adc
data16
or
test
inc
xor
in
out
test
data16
out
mov
mov
jp
inc
xor
in
hlt
nop
test
xor
cmp
mov
scas
cmp
nop
test
data16
into
fidivrs
jp
inc
data16
sub
call
inc
xor
in
es
data16
sahf
cmp
test
mov
add
cmp
test
xchg
inc
data16
mov
test
pop
jae
push
data16
pop
cmp
test
data16
cmpsb
adc
test
push
ja
lock
inc
sbb
outsb
imul
sbb
xchg
test
xor
nop
xchg
push
xchg
test
xor
test
data16
pop
mov
pop
mov
data16
dec
dec
mov
test
data16
jg
add
nop
test
div
dec
mov
jp
inc
popw
push
icebp
jb
lea
sub
call
jp
inc
xor
in
std
xchg
test
xor
in
inc
mov
xor
test
repz
daa
jle
mov
xor
test
xor
test
data16
ficomps
jmp
xlat
fldl
adc
inc
data16
lret
xchg
lcall
xor
inc
sub
call
jp
inc
lretw
or
test
mov
sbb
addb
gs
xchg
inc
nop
test
xor
in
sbb
test
inc
adc
cmpsb
adc
mov
ljmp
mov
data16
xchg
rorb
test
xor
test
pop
repz
pause
test
sbb
xchg
jno
test
push
icebp
addr16
sahf
mov
cmpsw
mov
jb
nop
test
data16
add
mov
dec
xchg
shll
jp
inc
data16
aam
xchg
test
shufpd
jp
inc
data16
pop
add
stc
mov
leavew
mov
test
data16
xchg
or
test
ret
mov
test
data16
test
push
ss
and
xchg
test
test
cmp
xchg
test
xor
test
lcallw
mov
xor
test
data16
sub
cmp
inc
inc
mov
test
sub
call
jp
inc
inc
repnz
sub
inc
xor
in
xchg
mov
xor
lea
jp
inc
data16
dec
mov
nop
test
xor
out
add
inc
data16
cwtl
adc
test
data16
pop
xchg
test
data16
push
push
nop
test
shrw
jp
inc
xor
test
data16
and
dec
jp
inc
data16
cmpsb
xchg
rclb
inc
xor
adc
lahf
mov
pop
add
jecxz
ret
add
imul
push
jmp
test
outsw
xchg
in
lea
data16
cmpsb
xchg
mov
inc
data16
dec
mov
adc
mov
addr16
data16
test
data16
push
mov
xchg
test
xor
test
xor
in
seto
or
gs
test
xor
in
mov
ljmp
adc
inc
data16
xor
xchg
data16
pop
inc
cmpb
lea
inc
data16
xchg
test
xor
sub
inc
movsw
xchg
sarl
inc
pop
inc
or
xchg
jp
inc
xor
in
rclb
data16
cmovs
test
mov
mov
jp
inc
data16
cmc
dec
push
xchg
test
xor
in
jno
test
xor
test
data16
adc
test
xor
in
dec
nop
test
xor
in
inc
xchg
test
xor
test
data16
jae
xchg
test
data16
outsb
dec
lea
data16
cmpsb
adc
nop
test
xor
test
data16
test
data16
repnz
lea
xor
nop
repnz
data16
or
mov
add
jp
inc
data16
ds
nop
test
xor
adcb
add
mov
and
xor
inc
data16
mov
repnz
nop
test
shl
pop
js
test
xor
in
pop
mov
xor
out
dec
xchg
test
dec
push
repnz
test
xor
in
adc
rolb
xor
mov
data16
jnp
inc
lea
sub
call
jp
inc
xor
test
movsw
cmpl
data16
fisubrs
nop
test
data16
test
xor
in
jb
test
xor
out
dec
lea
sub
call
jp
inc
data16
push
jmp
mov
sub
mov
cmp
std
inc
pop
inc
data16
push
dec
pushl
adc
xor
adc
or
std
jns
mov
jp
inc
data16
leave
in
lcall
and
test
data16
clc
into
loop
test
mov
rolb
test
data16
gs
xchg
test
pushw
mov
jp
inc
data16
test
xor
nop
jle
test
jmpw
fdivl
mov
data16
ljmp
rolb
in
scas
pop
mov
jp
inc
outsw
pop
out
dec
nop
test
data16
mov
xchg
test
xor
in
arpl
mov
adcl
inc
data16
cmpsb
adc
test
cmp
test
stos
aad
aam
xchg
test
xor
test
xor
sbb
loope
test
data16
jl
lret
test
xor
in
ja
test
ljmpw
stos
inc
data16
cmc
dec
setb
xor
out
mov
test
stos
aad
aam
nop
test
xor
test
add
negb
test
inc
pop
jmp
int3
mov
data16
test
data16
xchg
lea
mov
test
iret
xchg
test
xor
in
ret
nop
test
data16
xchg
lahf
je
test
and
jns
push
inc
data16
std
leave
je
test
pushw
xchg
sbb
inc
outsw
in
and
jp
inc
inc
pop
scas
popf
push
xchg
test
xor
in
sbb
data16
test
imul
test
data16
psubd
inc
adc
sti
hlt
nop
test
dec
js
mov
xchg
test
popw
int
mov
jp
inc
pushw
fiaddl
sbb
push
inc
pushw
stos
xchg
jg
xchg
test
xor
ds
and
inc
mov
mov
jp
inc
xor
fdivr
in
ret
arpl
loope
addr16
test
inc
dec
imul
jp
inc
pushw
push
loope
add
data16
dec
mov
addb
lds
xchg
stos
xchg
test
data16
dec
fdivrl
loop
pushw
xor
stos
xchg
test
pushw
mov
jp
inc
xor
nop
rcll
inc
pushw
push
add
inc
cmpsw
mov
scas
cmp
inc
sub
call
jp
inc
data16
cmpsb
adc
xchg
test
data16
int
inc
mov
loop
mov
lret
ljmp
xor
in
in
imul
jle
xchg
test
xor
add
jp
inc
data16
pop
or
pop
xchg
test
xor
test
mov
mov
push
inc
mov
std
arpl
inc
xor
nop
jge
test
data16
loopne
insl
lea
xor
nop
xor
inc
xor
nop
sub
test
xor
in
xor
adc
xchg
enter
xchg
test
xor
in
pop
nop
test
repz
test
and
inc
pop
aaa
push
jl
mov
data16
call
jmp
add
aaa
and
loopne
test
xor
sbb
xchg
inc
outsw
cmc
jecxz
sub
inc
data16
xor
stos
inc
dec
jge
out
mov
test
data16
mov
mov
data16
popf
pusha
xchg
inc
data16
test
xor
sbb
jp
inc
xor
nop
xchg
data16
mov
dec
xchg
test
data16
outsb
pause
test
data16
test
notl
test
xor
in
mov
inc
data16
pop
jp
inc
xor
fdivr
cmp
test
cmp
mov
jp
inc
adc
icebp
leave
stos
inc
xor
popf
cltd
or
lcall
dec
mov
data16
cmp
loop
data16
mov
out
mov
data16
jmp
loop
test
data16
xor
cli
test
mov
adc
jp
inc
xor
out
int3
nop
test
xor
in
adcl
sbb
mov
inc
xor
in
inc
xchg
test
xor
in
lcall
xor
gs
push
xchg
test
mov
mov
data16
js
imul
cmpsb
xchg
dec
xchg
test
xor
fdivr
jg
test
cmpw
test
data16
push
mov
sub
inc
xor
out
xchg
test
xor
out
push
rolb
jbe
cmpsb
adc
test
data16
pop
in
or
inc
lcallw
lea
mov
arpl
ret
xchg
fnstsw
inc
lock
or
cs
test
xor
repz
test
xor
xchg
jp
inc
data16
inc
mov
test
mov
nop
test
xor
out
fsts
inc
dec
push
arpl
jp
inc
xor
out
fmuls
inc
dec
sbb
push
lea
data16
jmp
adcl
adc
jp
inc
data16
test
test
xchg
inc
inc
popw
jns
sub
xchg
test
data16
sti
mov
pop
jp
inc
xor
cmp
lea
xor
nop
clc
mov
data16
mull
jp
inc
mov
mov
jp
inc
data16
bound
lcall
xchg
mov
add
test
data16
in
jle
test
data16
and
pop
jp
inc
data16
push
dec
lea
xor
nop
ss
test
sub
jne
mov
lretw
nop
aad
test
data16
pop
ds
test
cwtd
loope
add
test
xor
test
and
jge
pop
xchg
test
xor
in
lret
mov
data16
pushf
arpl
inc
xor
out
fcoms
inc
xor
in
fmuls
inc
data16
inc
arpl
test
data16
jp
imul
out
ds
test
inc
dec
xor
lods
jp
inc
xor
in
add
mov
lds
dec
add
inc
mov
add
test
mov
clc
sbb
jb
data16
lea
loop
data16
xor
bound
inc
data16
ds
pop
xchg
test
xor
fdivr
push
xchg
test
xor
in
adc
inc
data16
movsl
xchg
ja
xchg
test
xor
in
push
lea
data16
jmp
mov
test
data16
mov
mov
data16
ret
inc
jle
test
pop
int
pop
lock
test
xor
in
jl
test
xor
in
inc
xchg
test
data16
test
xor
in
imul
jecxz
test
or
test
data16
test
data16
sbbl
outsl
pop
out
arpl
inc
xor
test
sub
call
jp
inc
inc
mov
mov
xor
add
leave
dec
inc
data16
test
pop
xchg
test
dec
out
lea
jp
inc
push
das
xor
and
xchg
inc
leavew
jb
jae
fiaddl
xlat
cmp
out
ds
test
xor
movsl
xor
test
xor
nop
aam
test
inc
aad
jo
xchg
test
xor
out
hlt
nop
test
xor
test
data16
jp
inc
xor
in
or
addb
test
jmp
lcall
jle
test
data16
sbb
push
and
test
data16
xchg
push
or
jnp,pt
addr16
xchg
test
xor
in
mov
inc
data16
pusha
adcb
inc
data16
jecxz
fldt
pop
jb
inc
data16
cmp
inc
fs
data16
dec
jp
inc
xor
fdivr
pop
xchg
test
data16
test
data16
lret
test
data16
das
mov
pop
jp
inc
data16
inc
lods
out
test
sbb
mov
xchg
test
inc
test
sub
test
xor
test
mov
rcrb
test
sub
stos
jb
inc
pop
pop
dec
ljmp
inc
data16
test
xchg
fisubs
xchg
test
xor
in
push
xchg
test
data16
mov
push
addr16
popaw
loop
pushf
inc
xchg
test
leavew
loop
shrl
mov
add
push
lahf
and
lahf
jp
inc
data16
imul
sub
mov
xor
test
push
push
xor
jp
inc
data16
xchg
dec
lea
xor
nop
jmp
addb
icebp
ds
push
lea
dec
pop
jmp
xor
inc
xor
in
fldcw
scas
jb
inc
data16
push
sub
cmpsb
xchg
test
inc
xchg
mov
pop
nop
test
xor
in
fisttpl
inc
xor
test
data16
inc
ja
imul
testl
movsl
push
arpl
inc
xor
add
add
repnz
xor
rcrl
jb
lods
ljmp
jp
inc
xor
pop
xchg
outsl
lea
xor
nop
or
test
push
decb
jmp
mov
cwtl
pop
mov
inc
cwtd
loope
add
test
data16
popa
cwtl
mov
inc
mov
outsl
fcoml
inc
xor
inc
add
inc
xor
in
mov
lcall
imul
dec
jne
nop
test
data16
jecxz
xchg
mov
data16
shll
xorl
stos
dec
lds
inc
data16
cmp
iret
dec
nop
test
xor
add
jp
inc
cmp
test
data16
ljmp
mov
lea
jp
inc
data16
adc
pop
jp
inc
cwtd
loope
add
xchg
test
xor
sbb
jp
inc
insw
dec
sbb
inc
xchg
test
inc
les
iret
jo
test
data16
mov
jp
inc
jmpw
pop
jge
test
popaw
insl
pop
pop
xchg
test
imul
jae
test
scas
gs
addr16
inc
xor
test
xor
jmp
orl
sahf
mov
test
data16
mov
jp
inc
xor
in
sub
push
inc
test
jle
fs
test
xor
test
data16
test
inc
xor
in
and
test
mov
mov
mov
xor
xchg
ret
and
ljmp
bound
inc
data16
mov
add
inc
data16
xchg
pop
adc
inc
xor
nop
add
test
data16
xor
and
jp
inc
pushw
push
test
and
test
leavew
mov
test
inc
lret
fcoms
inc
data16
inc
hlt
in
test
data16
mov
dec
xchg
test
xchg
sti
nop
loope
nop
test
xor
shl
nop
test
xchg
xor
fnstcw
inc
push
aaa
aas
js
xchg
test
xor
in
pop
mov
xor
out
xchg
cmp
test
xor
in
stos
mov
data16
sbb
repz
repnz
data16
pop
lahf
or
stos
inc
mov
jle
xchg
test
dec
mov
icebp
jp
inc
data16
cmp
pop
jp
inc
pop
xchg
push
rcrl
and
inc
data16
jmp
pop
mov
lcallw
lcall
loop
test
data16
aad
cmp
test
data16
insl
mov
hlt
xchg
test
xor
in
cmp
test
ss
jmp
lret
jp
inc
xor
test
data16
pop
push
push
lea
xor
nop
imul
in
push
lea
data16
jmp
aam
test
xor
nop
pop
lea
data16
xor
xchg
test
push
mov
test
data16
inc
cmp
jp
inc
mov
adc
mov
ljmpw
xchg
test
xor
add
jp
inc
pushw
cmp
jp
inc
adc
popa
inc
nop
test
xor
in
jne
test
data16
imul
mov
call
push
inc
adc
and
lcall
aad
test
data16
shll
and
inc
pushw
je
lcall
inc
data16
pop
stos
pop
xchg
test
xor
in
clc
mov
pop
out
js
es
data16
fisubrl
jp
inc
data16
cs
test
xor
in
int
test
data16
or
inc
xor
in
add
xor
in
fstl
inc
xor
in
addr16
data16
inc
mov
data16
test
data16
lods
ret
lea
ss
jmp
push
jp
inc
xor
test
xor
in
daa
xchg
test
xor
push
imul
inc
xor
xchg
push
rolb
xor
jle
pusha
mov
mov
xchg
test
xor
add
push
lea
data16
cmpsb
xchg
in
test
sbb
mov
test
data16
mov
mov
data16
movsb
sbb
jp
inc
data16
lods
adc
jp
inc
outsw
add
test
cmpsw
mov
test
xor
test
data16
daa
mov
test
jp
xchg
dec
xchg
test
push
or
cmp
lcall
pop
ret
pop
push
sarb
jp
inc
xor
in
cmp
inc
ror
icebp
dec
lea
ss
jmp
loope
push
inc
data16
loopnew
sub
inc
data16
cmp
xchg
inc
xor
add
mov
bound
jge
dec
lret
cmp
data16
jp
into
xchg
test
cmp
scas
nop
test
xor
in
jmp
loop
dec
xor
ja
mov
data16
popa
xchg
mov
test
and
ret
pusha
lea
xor
adc
loop
xor
sbb
xchg
test
data16
je
pusha
mov
test
data16
mov
push
inc
mov
mov
jp
inc
data16
inc
jb
fs
pushw
xchg
push
test
xor
in
enter
jp
inc
jmpw
jp
xchg
test
data16
test
data16
dec
push
aad
test
data16
in
lea
sub
call
jp
inc
pushw
sbb
arpl
inc
sub
and
lock
test
xor
in
stos
mov
mov
stos
xchg
mov
scas
gs
mov
inc
data16
xor
jp
inc
data16
xor
lcall
ret
or
neg
jecxz
loope
test
data16
mov
test
xor
in
mov
inc
xor
test
mov
test
out
push
ret
ja
and
inc
les
mov
ljmp
addr16
test
mov
nop
test
data16
jbe
xchg
test
data16
cmp
daa
jp
inc
data16
and
nop
test
dec
out
test
test
test
xor
test
xor
test
data16
jnp
bound
inc
xor
in
cmp
inc
data16
jns
popa
nop
test
data16
nop
ljmp
xchg
test
xor
in
xchg
mov
xor
test
push
insl
mov
pop
xchg
test
data16
movsb
lret
test
data16
mov
jp
inc
data16
loop
out
adc
inc
xor
in
test
inc
xor
test
pushw
pop
fidivrl
mov
data16
or
mov
cbtw
jno
dec
and
inc
xor
in
gs
test
ss
inc
xchg
test
inc
xor
inc
xchg
test
movsw
lea
daa
xchg
test
data16
sub
mov
xchg
sbb
cs
test
xor
in
push
fs
push
nop
repnz
bound
inc
xor
in
and
add
mov
cmpl
jmp
jmp
rolb
sub
jmp
mov
rolb
or
xchg
test
mulw
sub
sub
sub
xchg
jb
test
xor
test
sub
call
jp
inc
sbb
push
popf
push
nop
test
cmpw
pop
xchg
test
xor
in
addr16
test
data16
outsb
add
xor
xor
test
data16
rclb
stos
inc
data16
test
dec
pushf
in
jbe
test
adc
fstpt
ret
int
mov
mov
jp
out
push
std
adc
test
xor
in
pop
nop
test
xor
in
stos
xchg
test
data16
pop
xchg
enter
fnstcw
inc
data16
test
test
cmc
rorl
inc
data16
pop
leave
mov
test
xor
test
xor
negl
jp
inc
les
cmp
test
xor
ds
jp
inc
xor
sbb
jp
inc
dec
scas
mov
inc
mov
data16
mov
sarl
inc
xor
nop
je
test
stos
jno
mov
jp
inc
xor
test
xor
test
xor
test
and
in
pop
xchg
test
xor
in
iret
nop
test
xor
in
xchg
mov
data16
loopne
daa
xchg
test
data16
cmpsb
cmp
test
xor
in
pop
mov
out
outsb
add
xchg
nop
test
xor
rolb
xchg
test
xor
fdivr
mov
and
call
nop
test
xor
in
icebp
xchg
test
xor
in
stos
nop
test
cmp
sbb
cmp
or
test
inc
lea
xor
nop
out
test
data16
cmp
sbb
lcall
loope
test
or
test
data16
push
pop
mov
nop
test
data16
shlb
test
xor
test
xor
in
inc
lea
xor
nop
inc
mov
adc
scas
into
and
test
data16
mov
test
pushw
dec
stos
pop
mov
mov
mov
jp
inc
data16
cmpb
lret
add
add
xchg
test
xor
in
cmpsb
nop
test
pushw
int
and
test
xor
in
adc
ljmp
dec
xchg
test
xor
in
test
test
dec
cmc
jnp
stos
addr16
stos
vphaddwd
data16
test
xor
add
rclb
inc
xor
add
jp
inc
data16
jae
xor
test
or
lcall
inc
data16
jmp
adc
inc
xor
test
xor
in
add
inc
data16
mov
or
xor
in
add
push
inc
repz
push
ljmp
test
inc
data16
ljmp
mov
mov
jp
inc
xor
in
jmp
fiaddl
mov
test
data16
adcl
inc
dec
or
jp
inc
pop
dec
cwtl
and
mov
data16
mulb
mov
cld
test
mov
shrw
xchg
jp
inc
xor
in
or
addb
icebp
xchg
into
lcall
addr16
cmp
jno
gs
sub
inc
xor
adc
and
inc
xor
add
jb
test
xor
shlb
inc
data16
xchg
or
test
data16
jmp
sbb
addb
add
test
data16
inc
out
push
out
mov
data16
jmp
pop
xchg
test
inc
mov
aaa
xchg
test
sub
test
data16
rclb
and
addb
lods
cmp
dec
xchg
test
xor
in
scas
nop
test
xor
in
pop
xchg
test
add
setns
inc
xor
xchg
pop
lea
xor
nop
sub
inc
data16
jmp
push
lea
data16
test
test
int3
pusha
cmp
test
xor
nop
loope
test
inc
dec
fcmove
aad
test
sbb
push
mov
jp
inc
push
inc
cmp
test
data16
daa
jp
inc
data16
rcrl
jp
inc
data16
scas
jbe
test
jmpw
cmp
test
xor
out
fwait
mov
fs
lea
ss
jmp
push
jp
inc
popw
push
jecxz
pop
lea
data16
jmp
add
xor
in
call
inc
xor
in
jbe
test
inc
xor
inc
jb
test
fs
push
add
inc
pushw
cmp
jp
inc
sub
rcll
lret
popa
ret
lods
mov
nop
test
xor
in
jmp
xor
shlb
adc
inc
push
mov
scas
inc
xchg
test
xor
in
jmp
test
data16
nop
int3
xchg
test
mov
nop
test
data16
mov
xor
lcall
mov
test
xor
xchg
insl
mov
add
xchg
sub
jp
inc
data16
adc
and
xor
test
xor
in
cmc
xchg
test
sbb
test
data16
mov
pop
xchg
test
xor
in
add
xor
in
xor
inc
sub
call
jp
inc
pop
call
test
andw
jp
inc
dec
cmp
push
stc
ret
nop
jbe
pop
cli
xchg
test
xor
in
mov
inc
data16
out
mov
xchg
test
xor
ds
jp
inc
sbb
inc
inc
nop
test
mov
push
adc
inc
xor
xchg
addr16
test
data16
icebp
xchg
xchg
nop
test
cmpsw
xchg
mov
fwait
mov
pushaw
test
test
pop
gs
push
jp
inc
data16
test
lds
test
inc
ret
andb
test
or
sub
xchg
test
xor
in
mov
ljmp
jno
test
xor
movsb
std
bound
inc
xor
adc
xchg
test
data16
fstl
notl
inc
bound
das
inc
hlt
nop
test
mov
adc
xchg
test
mov
mov
jp
inc
data16
jo
cltd
and
inc
xor
in
pop
lea
data16
cmpsb
adc
test
xor
in
jns
test
xor
in
and
ljmp
dec
nop
test
xor
in
adc
repnz
data16
mov
fnstcw
inc
sbb
enter
inc
jp
inc
cmp
test
test
testw
jp
inc
data16
test
inc
xor
and
inc
data16
hlt
imul
push
nop
test
xor
in
inc
lea
xor
nop
lret
mov
xor
xchg
jp
test
push
and
jp
inc
mov
lea
sub
call
jp
inc
xor
in
pop
nop
test
xor
in
adc
inc
data16
int
add
xor
in
adcl
imul
xchg
test
xor
out
inc
mov
sub
test
xor
test
data16
insb
adc
jp
inc
data16
cmpsb
adc
test
pushfw
imulb
jp
inc
data16
movsl
or
rorl
data16
incl
inc
xor
in
pop
mov
pop
addr16
ss
test
data16
call
test
inc
push
pop
out
xor
test
pop
mov
test
add
or
xchg
test
xor
in
mov
fiaddl
addr16
les
jp
inc
mov
xchg
aad
test
xor
sbb
xor
inc
sub
call
jp
inc
xor
in
in
test
data16
cmc
lods
loop
test
mov
add
addb
and
test
data16
gs
jae
test
inc
mov
in
dec
fs
pushw
cltd
ficomps
mov
data16
in
test
inc
mov
mov
jp
inc
xor
in
loopne
test
enterw
in
test
sbb
push
mov
ret
shl
into
xchg
pop
nop
test
data16
mov
push
sti
mov
data16
mov
fsts
inc
xor
test
xor
in
inc
xchg
test
xor
in
push
xchg
test
data16
test
data16
test
call
jp
inc
lods
xor
shlb
leave
jp
inc
push
adc
pop
cmc
nop
test
xor
nop
and
inc
jp
inc
cbtw
cwtl
test
nop
test
xor
push
test
xor
test
data16
es
xchg
mov
data16
cmpsb
add
popf
mov
out
popl
inc
pop
xchg
test
decw
pop
ds
test
xor
in
add
inc
xor
in
mov
data16
addb
adc
xor
in
adc
inc
data16
js
xchg
test
les
test
jmpw
sub
xchg
test
xor
in
gs
test
data16
jg
add
lcall
push
test
data16
cmpsb
adc
mov
data16
mov
inc
ss
jmp
dec
jp
inc
xor
out
pop
xchg
test
xor
in
cmpsb
mov
and
adc
xchg
test
mov
mov
jp
inc
mov
lods
enter
jp
inc
data16
mov
jp
inc
xor
sbb
jp
inc
xor
jp
hlt
xchg
test
data16
test
data16
cmpsb
adc
test
mov
in
mov
test
data16
test
push
and
in
fiaddl
lret
dec
addr16
test
xor
cmp
xchg
test
xor
in
lcall
data16
lods
pusha
test
mov
mov
jp
inc
xor
test
xor
in
lret
mov
data16
rorb
loope
mov
xor
nop
pop
lea
data16
jmp
pop
xchg
test
inc
sub
inc
inc
mov
data16
out
nop
test
xor
in
das
lea
sub
call
jp
inc
xor
xchg
sub
inc
data16
inc
out
jae
test
data16
push
jl
xchg
test
xor
rol
nop
test
data16
mov
jp
inc
xor
in
fs
bound
mov
test
pushw
or
mov
nop
test
xor
mov
test
mov
test
xor
xchg
jle
test
mov
push
xchg
add
xor
in
sub
inc
data16
test
movsw
or
xor
test
adc
cmp
xchg
test
xor
in
inc
lea
sub
call
jp
inc
xor
in
mov
inc
inc
data16
add
pop
pop
nop
test
xor
test
push
stc
sub
pop
xchg
test
xor
in
inc
xchg
test
xor
test
dec
test
jg
lcall
xor
push
push
cmp
sub
dec
inc
data16
imul
lret
aaa
test
imul
test
data16
push
jmp
sarl
inc
xor
in
ret
nop
test
data16
imul
nop
test
data16
mov
cmp
inc
xor
nop
add
xor
fdivr
add
inc
data16
ljmp
xor
adc
test
data16
xchg
push
lea
data16
jmp
pop
imul
ljmp
inc
data16
sub
test
xor
cmp
jb
inc
data16
scas
mov
lcall
add
lcall
sbb
test
data16
push
xchg
inc
xor
in
outsb
xchg
test
data16
adc
iret
nop
test
xor
cmp
nop
test
leavew
xchg
lds
jp
inc
mov
mov
jp
inc
xor
test
xor
in
xor
test
xor
out
pop
xchg
test
data16
lds
jp
inc
xor
in
notb
inc
data16
adc
cmp
xchg
test
xor
in
mov
test
dec
xchg
jle
test
out
push
mov
xchg
test
xor
in
iret
xchg
test
data16
test
data16
pop
fnstsw
test
pushw
pop
nop
test
data16
es
push
mov
inc
pop
jmp
pop
nop
test
xor
in
jp
test
xor
xchg
xchg
test
xor
add
jp
inc
xor
add
std
nop
test
data16
adcl
shlb
and
test
data16
fwait
cmp
xchg
test
xor
out
lock
test
xor
in
ficoms
inc
data16
cmpsb
push
test
mov
xor
in
cli
nop
test
data16
idiv
and
inc
xor
in
jp
test
xor
test
popaw
pop
outsl
loop
mov
data16
mov
test
xor
in
pop
xchg
test
xor
test
data16
stos
imul
mov
arpl
nop
test
xor
in
ds
test
xor
in
lea
xor
adc
test
xor
out
xchg
imul
data16
pop
push
dec
mov
lods
add
popf
jp
inc
data16
push
fnstenv
jp
inc
xchg
notb
gs
lcall
mov
test
outsw
jmp
test
data16
test
data16
test
data16
mov
cmp
mov
data16
xchg
pusha
mov
test
data16
xor
xchg
test
xor
sbb
jp
inc
data16
jmp
loope
test
sbb
sub
mov
data16
lea
xor
nop
mov
addb
jns
xchg
std
xchg
test
xor
test
xor
nop
ja
test
cmp
push
jmp
jmp
pop
inc
adc
aad
nop
test
adc
addr16
jb
inc
data16
rclb
lods
lahf
nop
test
imul
or
and
movsb
fidivrl
fnstcw
inc
data16
loop
mov
test
data16
and
inc
imul
jmp
pop
jp
inc
xor
out
cmp
add
cmc
sbb
das
or
inc
and
adc
mov
data16
in
or
cmp
iret
jp
lds
addb
icebp
sbb
jp
inc
data16
xchg
test
data16
and
xchg
test
xor
in
push
test
xor
xchg
add
inc
data16
xchg
nop
or
ret
jmp
test
gs
out
test
data16
xchg
or
xchg
test
xor
in
notl
inc
data16
nop
test
pop
mov
cli
fmuls
inc
data16
jmp
push
mov
xor
loope
xchg
mov
data16
aam
cmp
jp
inc
in
mov
test
inc
push
je
push
rolb
jbe
cmpsb
adc
mov
sbb
push
negb
test
data16
cld
dec
mov
cli
inc
data16
mov
jp
inc
test
inc
jp
inc
data16
cld
cmp
nop
test
push
insl
xor
xchg
test
xor
in
insb
lea
lds
rclb
inc
xor
test
xor
add
jp
inc
data16
test
data16
loope
je
test
jmpw
jne
push
inc
pop
out
fstps
jp
inc
data16
inc
int3
ds
test
cwtd
loope
add
test
data16
inc
fimuls
inc
data16
dec
test
mov
adc
daa
xchg
ret
xchg
test
popw
cmp
or
imul
pusha
imul
xor
test
xor
nop
mov
addb
add
test
iretw
std
outsb
dec
inc
lea
xor
nop
ficomps
lds
icebp
hlt
pop
jo
test
xchg
jno
ret
test
data16
ret
js
xchg
test
pop
in
aad
lea
retw
lock
inc
data16
js
popa
xchg
mov
data16
fidivs
and
sbb
addb
stos
xlat
push
test
data16
ljmp
sub
xchg
out
mov
xor
in
and
inc
xor
out
inc
mov
data16
mov
test
xor
test
xor
nop
pop
xchg
test
xor
in
ds
test
xor
out
mov
inc
pop
pop
stc
jae
mov
jbe
adc
inc
xor
rolb
cmpsl
jp
inc
xor
in
test
test
divw
lcall
adc
out
mov
leave
mov
call
pop
jp
inc
data16
shrb
test
data16
mov
jp
inc
xor
fmuls
inc
data16
mov
test
mov
xchg
test
xor
in
mov
test
out
add
add
lcall
call
repnz
mov
mov
jp
inc
xor
adc
jp
inc
data16
xchg
push
lahf
jb
callw
adc
jp
inc
ds
out
sbb
stos
inc
pop
aad
pop
add
test
data16
mov
push
xchg
test
data16
mov
lea
retw
jo
xchg
test
xor
in
addr16
data16
push
nop
xchg
pop
lea
data16
jmp
push
lea
data16
test
xor
in
inc
lea
xor
nop
out
test
and
pop
xchg
fldt
jp
inc
mov
jmp
jae
test
pop
test
test
data16
jle
lea
xor
nop
or
test
or
inc
icebp
xchg
fs
dec
mov
mov
jp
inc
cwtd
and
jns
test
xor
in
lds
inc
mov
clc
jl
test
xor
in
outsb
xchg
test
xor
in
lea
rcrl
inc
adc
das
and
iret
mov
cli
inc
mov
cli
xchg
test
xor
in
inc
addr16
ds
xchg
test
xchg
inc
mov
mov
data16
dec
mov
inc
xor
test
outsw
dec
mov
sti
xchg
test
xor
in
push
xchg
test
data16
inc
jbe
xchg
test
xor
in
setae
outsw
lcall
jp
inc
pushw
add
xlat
xchg
test
dec
jp
xlat
imul
outsw
out
add
mov
xor
nop
mov
data16
stc
adc
lea
data16
xor
popa
jp
inc
data16
cltd
jle
lea
sub
call
jp
inc
data16
sti
fs
lea
data16
cmpsb
adc
mov
data16
popf
cmp
lcall
pop
mov
imul
das
jp
inc
data16
cmp
jp
inc
xor
in
pop
xchg
test
xor
in
pusha
lea
xor
nop
lds
inc
data16
mov
mov
es
arpl
inc
xor
out
cltd
xchg
test
inc
mov
test
data16
test
negl
loop
dec
push
into
or
jp
inc
sbb
nop
and
data16
xchg
and
jp
inc
xor
in
mov
dec
inc
data16
js
xchg
test
and
test
xor
test
xor
test
xor
in
in
test
data16
test
pop
ljmp
jp
inc
add
mov
mov
data16
lret
repz
pop
imul
inc
lea
test
out
aad
test
cmp
xchg
fwait
repnz
test
xor
in
scas
nop
test
xor
in
stos
xchg
test
add
xchg
loope
test
data16
mov
dec
jp
inc
xor
in
sub
cli
inc
push
stos
daa
xor
mov
and
ret
cmp
inc
test
inc
jp
xchg
test
data16
out
ja
test
popw
in
orl
jnp
rolb
cltd
add
test
data16
loope
lds
adc
cwtl
mov
cmp
nop
test
inc
orb
xchg
test
ljmpw
mov
data16
xchg
push
out
nop
test
xor
test
xor
test
xor
in
test
data16
and
rcll
pushw
xor
sbb
inc
push
adc
lock
test
lretw
outsb
fcoml
inc
xchg
test
xor
in
das
lea
pushfw
inc
jge
loop
test
data16
out
pop
stos
inc
ljmpw
xchg
test
data16
test
sub
test
data16
icebp
xor
lahf
jp
inc
lretw
nop
jge
test
data16
sub
or
inc
data16
mov
fwait
jp
inc
xor
in
fmuls
inc
xor
test
data16
jp
inc
data16
jbe
test
jp
inc
data16
push
int3
ja
xchg
test
xor
out
mov
test
xor
xchg
stc
nop
test
data16
clc
add
jp
inc
data16
mov
mov
mov
jp
inc
mov
mov
xchg
test
lretw
push
cwtl
outsb
dec
nop
test
data16
leave
scas
ret
imul
data16
loopne
test
test
xor
rclb
xor
out
mov
test
xor
out
push
rolb
push
push
test
or
xor
leave
jp
inc
xor
nop
adc
test
xor
test
data16
and
jecxz
test
add
jmp
test
and
loop
mov
data16
sahf
movsl
fs
data16
mov
cmp
inc
xor
nop
into
mov
xor
nop
cwtl
mov
add
jmp
jp
inc
data16
loop
in
test
dec
add
test
pushw
push
xchg
shlb
xchg
test
sub
sub
mov
mov
mov
jp
inc
xor
xchg
rclb
inc
data16
jnp
fwait
lret
stos
inc
data16
out
and
add
subb
cmc
jp
inc
mov
xchg
add
xor
in
xchg
mov
xor
test
xor
in
pop
nop
test
data16
xchg
test
mov
scas
adcl
add
xchg
test
xor
out
pop
mov
pop
movsl
clc
insb
mov
fiaddl
inc
iret
pop
dec
pop
mov
popw
imul
in
jb
inc
xchg
lock
jp
inc
data16
adc
xchg
test
data16
lods
mov
leave
jp
inc
xor
in
push
lea
data16
jmp
arpl
inc
data16
cmpsb
xchg
sti
nop
test
xor
test
data16
xchg
inc
lea
xor
adc
xchg
test
xor
out
xchg
test
xor
in
mov
sbb
mov
add
jp
inc
data16
push
lock
nop
test
xor
sbb
mov
in
gs
test
xor
cmp
mov
data16
mov
sub
test
data16
ljmp
addb
add
test
xor
add
jp
inc
xor
in
dec
xchg
test
data16
mov
pop
xchg
test
xor
in
repnz
test
xor
in
pop
xchg
test
xor
in
iret
fs
data16
test
data16
jp
xchg
test
xor
cs
in
nop
test
xor
in
or
test
push
pop
out
adc
inc
sbb
xchg
mov
test
data16
sub
mov
xor
test
data16
or
push
xchg
test
xor
in
and
test
xor
xchg
jle
test
data16
jecxz
xor
test
data16
push
xor
adc
adc
xchg
test
pushfw
idiv
popf
jge
test
xor
in
pop
mov
xor
xchg
add
inc
data16
lcall
jp
inc
xor
in
or
data16
xchg
push
push
xchg
test
xor
add
inc
lea
sub
call
jp
inc
data16
testl
mov
xor
nop
push
cli
inc
push
cmp
in
nop
test
xor
in
mov
lcall
jb
test
xor
test
pushw
pop
lea
rolb
jno
cmpsb
xchg
stc
xchg
test
xor
in
jb
test
mov
mov
jp
inc
data16
adc
pop
xchg
test
xor
add
xlat
mov
pop
in
add
test
xor
in
jne
test
data16
cmpl
and
pop
or
dec
ja
test
xor
in
push
nop
test
popw
sbb
jge
test
data16
loop
push
lea
xor
adc
nop
test
xor
xchg
inc
xchg
test
xor
in
lret
mov
xor
jmp
jp
inc
data16
inc
lods
sbb
mov
xchg
mull
test
xor
nop
fwait
mov
xor
xchg
int3
inc
lea
ss
jmp
or
xor
fdivr
adc
ljmp
sub
aas
jp
inc
data16
out
rorl
xor
test
pop
xchg
in
test
data16
jle
xchg
test
xor
in
jnp
test
mov
scas
repz
adc
or
test
fldenvs
inc
adc
xchg
test
xor
in
jne
test
data16
xor
das
nop
test
xor
in
in
test
data16
sbb
lea
sub
call
jp
inc
push
or
jne
nop
test
rolw
inc
arpl
inc
mov
ret
xchg
test
add
inc
aaa
xchg
test
out
stos
push
add
push
inc
data16
pusha
mov
cmp
inc
xor
test
data16
jmp
dec
xchg
test
xor
in
xchg
ret
je
jo
addb
mov
xchg
cwtl
mov
pop
icebp
cmp
iret
jp
inc
insw
push
dec
cmp
test
or
sub
nop
test
xor
test
add
movsb
jb
xchg
test
data16
les
nop
test
xor
out
fwait
adc
bound
pop
jo
test
xor
test
data16
test
imul
test
xor
test
data16
cmp
cmp
test
data16
rorl
data16
loope
and
inc
data16
test
data16
dec
sbb
fiaddl
lret
xchg
aad
nop
test
xor
in
mov
test
data16
sub
sarl
inc
data16
fucom
mov
nop
test
xchg
and
outsl
or
psubsw
into
ds
test
pop
sub
test
dec
mov
test
data16
nop
outsl
nop
test
xor
addr16
mov
lcall
repnz
test
xor
nop
out
test
xchg
or
sbb
xchg
test
xor
in
and
ret
pop
aaa
nop
add
xchg
test
data16
test
add
dec
xchg
test
pop
mov
pushf
inc
nop
test
data16
push
mov
jp
inc
mov
mov
data16
mov
sbb
test
pushfw
scas
sub
jp
inc
xor
sbb
jp
inc
retw
lock
fiaddl
pusha
dec
jge
orb
data16
mov
fisubrs
loop
lds
or
addb
and
test
data16
lret
lea
jp
inc
data16
sub
or
inc
dec
in
lds
test
sub
jg
fs
data16
jmp
lret
mov
ret
stc
inc
lea
xor
nop
pop
xchg
test
xchg
repz
jp
inc
pushw
ds
or
test
cmpsw
sub
test
data16
inc
cld
nop
test
cmpw
mov
sbb
push
xor
test
pop
cmpsl
cmpsb
and
test
xor
in
jp
test
pushw
xchg
or
jl
test
pop
mov
jp
inc
data16
inc
pop
rcll
inc
data16
in
int3
mov
test
data16
jmp
lea
inc
xor
out
push
lea
data16
cmpsb
xchg
std
nop
test
ljmpw
addr16
sbb
test
data16
xchg
adc
inc
mov
mov
xchg
inc
data16
jae
push
xchg
test
xor
in
jmp
test
xchg
and
outsl
inc
mov
xor
test
xor
nop
dec
xchg
test
xor
in
mov
test
mov
fldcw
test
xor
in
fstl
inc
xchg
mov
test
ds
sub
test
data16
pop
pop
cli
imul
mov
jp
inc
ss
pop
push
jmp
inc
stc
mov
push
jp
inc
ss
jmp
mov
addb
icebp
sbb
jp
inc
data16
insl
jbe
sbb
mov
xor
nop
lcall
xor
test
xor
nop
pop
nop
test
data16
dec
jne
xchg
test
data16
xchg
cmp
test
mov
push
jp
inc
inc
lahf
push
adc
jp
inc
data16
fucomi
lds
lea
xor
nop
xchg
test
data16
data16
data16
test
addr16
sbb
test
xor
in
jle
test
data16
xchg
push
das
nop
test
and
stc
jp
inc
xor
dec
sbb
nop
test
data16
or
sub
xchg
test
data16
lods
ret
xchg
test
mov
cmp
mov
cli
dec
repz
mov
data16
repz
inc
xor
out
inc
xchg
test
push
fistl
jecxz
lcall
les
inc
lods
aas
call
sarl
sbbw
fucomp
xchg
test
mov
lea
xor
nop
xchg
test
data16
xchg
or
test
xor
out
repnz
test
xor
in
insb
xchg
test
lcallw
nop
test
data16
adc
pop
mov
es
aad
xchg
test
data16
mov
push
push
mov
cmpw
out
movsl
and
outsl
leave
mov
push
jp
inc
in
pop
mov
sbb
inc
xor
nop
mov
test
push
pop
stos
lahf
push
xchg
test
xor
in
gs
test
inc
push
mov
jno
push
inc
data16
jmp
mov
test
push
fistl
dec
jp
inc
data16
nop
sbb
stos
inc
push
mov
or
jp
inc
jmpw
mov
nop
test
push
hlt
mov
jp
inc
cbtw
push
inc
das
xchg
test
data16
inc
cmp
jp
inc
out
or
xor
inc
data16
or
pop
nop
test
xor
in
fwait
mov
xor
addr16
jp
inc
lea
pop
roll
idivl
inc
data16
jns
dec
lea
xor
nop
pop
mov
and
or
loope
push
inc
data16
jmp
stos
xchg
test
pop
mov
jae
xchg
test
xor
xchg
xchg
mov
insw
in
mov
fs
test
xor
in
ljmp
xor
enter
sub
inc
and
adc
test
xor
in
xchg
mov
insw
pop
leave
test
xchg
test
data16
nop
out
dec
lea
xor
nop
stc
mov
lcallw
xor
sbb
fs
pushw
sahf
outsb
xchg
mov
test
data16
mov
nop
test
data16
mov
nop
test
es
dec
sbb
rolb
mov
mov
sbbw
loope
repnz
push
xor
jp
inc
xor
test
data16
jnp
loopne
nop
test
xor
test
xor
in
pop
addb
xor
mov
lcall
hlt
xchg
test
xor
in
cwtl
mov
lretw
xchg
aad
nop
test
xor
in
fmull
sbb
dec
xor
test
xor
test
data16
outsl
jl
inc
pop
sub
push
xchg
test
xor
in
cmp
lcall
push
xchg
test
data16
fidivrl
fiaddl
add
xor
shll
jb
inc
data16
pop
jl
mov
sar
sbb
xchg
jp
inc
data16
ljmp
mov
roll
mov
xor
scas
out
ljmp
xor
in
xchg
mov
data16
in
imul
add
jp
inc
xor
fdivr
add
lcall
dec
lea
xor
nop
int
test
xor
in
and
inc
data16
jmp
inc
lea
sub
call
jp
inc
xor
in
inc
xchg
test
xor
in
dec
xchg
test
xor
in
mov
adc
xor
dec
enter
jp
inc
data16
push
pop
rolb
jmp
xchg
test
xor
out
icebp
nop
test
data16
cmp
jp
inc
data16
movsb
shrb
xchg
test
xor
in
fisubl
jp
inc
push
aas
pushf
add
jp
inc
xor
test
data16
sbb
mov
and
js
dec
movsl
adc
inc
jmpw
mov
xchg
test
push
pop
xor
jp
inc
pushw
pop
mov
cmp
sub
mov
data16
movsb
xchg
rclb
inc
xchg
arpl
fstpt
inc
xor
push
imul
lret
jb
or
mov
mov
pop
pop
jo
test
pushw
xchg
mov
test
data16
ljmp
push
data16
popf
pop
mov
repnz
pop
test
test
popaw
in
mov
xchg
test
data16
sbb
jp
inc
mov
adc
lea
data16
push
jmp
xchg
inc
data16
fdivrl
jp
inc
insw
push
stos
fimuls
test
xor
in
fs
test
xor
add
jp
inc
xor
jmp
pop
xchg
test
xor
in
aas
xchg
test
xor
movsl
ficoml
inc
test
mov
jp
inc
xor
in
cmp
adc
ss
jmp
in
addb
or
test
xor
test
xor
in
mov
test
xor
pop
xchg
push
lea
inc
pop
jmp
rorl
data16
xchg
jp
inc
xor
xchg
xchg
mov
inc
enterw
imul
loope
mov
data16
std
add
nop
test
xor
test
xor
in
dec
lea
xor
nop
pusha
lea
or
sub
nop
test
data16
out
mov
inc
data16
ljmp
mov
xor
or
dec
nop
test
xor
test
push
mov
pushf
gs
test
xor
out
js
test
sbb
add
jp
inc
lods
not
pushf
icebp
xchg
test
mov
or
test
cmp
cltd
test
lcall
sahf
nop
test
inc
sti
outsb
add
test
xor
in
mov
inc
xor
out
cmpsl
xchg
test
data16
test
sub
call
jp
inc
pop
lock
jp
inc
data16
jmp
xchg
jp
inc
dec
es
sub
test
data16
sti
cmp
test
data16
outsb
subl
push
pop
push
xchg
nop
test
xor
out
pop
nop
test
data16
xchg
inc
push
xchg
test
xor
in
push
lea
xor
nop
jle
test
dec
dec
int
cmp
inc
xor
nop
dec
xchg
test
data16
sbb
push
jp
inc
data16
ljmp
fiaddl
xchg
loop
sbb
test
inc
pop
scas
popf
lret
pop
xchg
es
sete
data16
and
xchg
test
data16
xor
test
inc
pushw
jnp
jnp
dec
inc
data16
pushf
insb
dec
xchg
test
push
pushf
fadds
xchg
test
xor
in
and
or
add
and
rolb
push
mov
or
cmp
xchg
test
stos
inc
xchg
in
inc
xchg
test
xor
in
jae
test
data16
les
xchg
test
xor
test
data16
jmp
shll
jp
inc
data16
lods
sbb
push
mov
inc
adc
push
cli
mov
sar
push
outsb
lret
mov
data16
dec
iret
mov
data16
and
cmp
test
data16
sub
loope
test
data16
cmp
xchg
jp
inc
pop
jb
xchg
or
inc
xchg
and
nop
test
sbb
dec
or
test
xor
in
test
test
data16
cmpsb
sti
repz
mov
pushw
out
xchg
add
inc
data16
xchg
notb
inc
pushw
sub
test
data16
scas
sarl
push
xchg
test
xor
in
sbb
test
xor
test
dec
scas
mov
jp
inc
sbb
push
xor
mov
xor
out
jmp
push
inc
dec
adc
mov
test
mov
outsl
xchg
rolb
sbb
aas
sbbl
mov
stc
lahf
sbb
xor
cmp
sbb
dec
lea
sub
call
jp
inc
iretw
cmp
cltd
jp
inc
data16
mov
or
inc
data16
mov
push
jp
inc
ss
jmp
out
rolb
mulb
test
bound
test
test
xor
in
pop
lea
data16
jmp
mov
cli
inc
lcallw
imul
pop
sbb
pushfw
call
test
data16
rcrl
jp
inc
xor
test
cmpw
cmp
inc
inc
pop
scas
popf
fisttpl
inc
push
jge
leave
aaa
lea
xor
nop
jne
test
adc
test
data16
jmp
test
data16
test
xor
in
clc
xchg
test
data16
jmp
outsb
movsl
xchg
test
add
inc
jp
inc
xor
in
xor
xor
sub
xchg
test
xor
in
out
test
add
test
data16
test
data16
mov
jp
inc
xor
test
cmpsw
shll
aad
test
data16
push
sbb
jp
inc
sub
call
jp
inc
xor
xchg
xchg
mov
test
xor
test
sub
sahf
mov
xchg
test
outsw
test
cmp
inc
xor
test
data16
cmp
sbb
xor
in
pop
xchg
test
xor
in
lcall
pop
and
hlt
add
lcall
cwtl
mov
data16
into
or
test
data16
and
jp
inc
data16
nop
pusha
mov
pop
adc
jp
inc
data16
mov
sbb
xor
in
and
pop
or
dec
mov
test
lretw
in
push
xchg
test
xor
in
dec
lea
data16
cmpsb
xchg
call
addb
add
mov
test
xor
in
dec
xchg
test
data16
add
mov
data16
insb
xchg
mov
data16
adcb
xor
lgs
inc
data16
xchg
push
mov
test
data16
xchg
sub
inc
data16
mov
sub
inc
xor
in
popa
xchg
test
out
ss
test
inc
data16
test
xor
nop
or
inc
data16
cmp
xchg
test
rcr
mov
fistpll
inc
xor
in
jmp
test
xor
in
std
imul
xchg
or
test
cmpsw
xchg
sub
jp
inc
data16
mov
mov
xor
nop
mov
lret
push
sub
jp
inc
pushw
xchg
xchg
jl
test
xchg
dec
mov
pop
jp
inc
sub
pop
out
test
inc
xor
in
add
movsw
pop
cld
out
lea
inc
pop
jmp
jp
test
data16
lea
sub
call
jp
inc
xor
test
data16
dec
loope
mov
inc
xchg
sarl
inc
ss
jmp
mov
sbb
push
xchg
test
data16
gs
xor
inc
push
pop
out
sahf
addr16
inc
outsl
dec
clc
lea
ss
jmp
std
jp
inc
lcallw
xchg
test
xor
add
mov
test
xor
test
inc
mov
out
pop
icebp
xchg
test
xor
in
push
push
inc
data16
jmp
pop
xchg
test
xor
mov
nop
test
stos
ret
call
inc
xor
in
add
xor
in
rorb
data16
xor
inc
xor
in
cwtl
xchg
test
cs
jns
lea
push
inc
data16
jmp
xchg
test
xor
in
pop
lea
data16
jmp
jmp
test
xor
in
nop
addr16
pop
mov
xchg
test
xor
in
and
inc
data16
xchg
inc
ds
test
xor
add
jp
inc
data16
in
xchg
inc
data16
mov
outsl
imul
sub
test
dec
mov
and
inc
xor
in
dec
xchg
test
xor
in
mull
test
daa
fucomp
lock
test
xor
xchg
and
test
data16
test
xchg
cmpsl
mov
out
jp
inc
cmpsw
jmp
inc
dec
xchg
test
xor
in
jae
test
push
test
imul
inc
sub
outsl
jp
inc
xor
in
mov
mov
jmp
cwtl
mov
xor
test
pushw
neg
or
xchg
test
data16
push
jp
inc
lock
inc
pushf
nop
test
data16
xchg
mov
or
test
data16
cmp
lds
inc
pushw
jecxz
aas
xchg
test
xor
in
rcll
inc
cli
sub
jge
test
data16
or
jp
inc
xor
in
repnz
test
pop
test
sbb
xchg
test
push
js
mov
jp
inc
data16
gs
fwait
mov
data16
mov
data16
inc
shrl
cli
inc
mov
test
data16
cmpsb
adc
nop
test
data16
into
out
test
lds
outsb
push
xchg
test
sbb
jae
rcll
inc
data16
aas
sub
inc
mov
mov
jp
inc
insw
mov
test
cmp
ljmp
lcall
loop
test
data16
pop
xchg
test
data16
mov
scas
nop
test
or
test
cmp
xchg
xor
inc
data16
test
data16
mov
xchg
test
data16
test
data16
aaa
in
lea
mov
ja
xchg
test
xor
in
pop
xchg
test
data16
push
cmp
addb
gs
xchg
clc
ljmp
inc
xchg
test
data16
sbb
arpl
inc
stos
pop
jmp
call
inc
xchg
lods
test
adc
inc
data16
sub
ficoml
inc
nop
scas
pop
lea
data16
cmpsb
adc
mov
xor
test
xor
xchg
lret
mov
jmpw
sti
push
xchg
test
xor
in
mov
sub
ss
adc
jp
inc
lcallw
xchg
test
data16
test
data16
mov
cmp
mov
xor
add
test
test
pop
dec
stos
mov
test
pushw
into
mov
mov
jmp
jp
inc
xor
test
leavew
cli
mov
jp
inc
pop
pop
adc
add
jmp
int
push
pusha
ficoml
inc
xor
add
jp
inc
data16
ss
nop
test
data16
jb
mov
xchg
test
xor
fdivr
in
test
data16
ljmp
jp
inc
data16
cmp
jb
inc
sbb
test
xor
out
push
mov
xor
test
inc
add
nop
xchg
test
or
rcrb
test
xor
in
xor
lcall
clc
xchg
test
xor
in
sub
inc
mov
shll
test
xchg
xchg
dec
xchg
push
nop
test
data16
jle
and
cmp
into
mov
add
and
jmp
jp
inc
stos
cmp
jno
inc
inc
mov
xchg
test
xor
rclb
ljmp
pop
xchg
test
xor
in
or
test
data16
mov
and
shl
xchg
test
xchg
adc
outsl
cs
test
xor
in
jns
test
data16
out
enter
jp
inc
sbb
pushf
adc
test
cmpsw
xchg
mov
cmc
xchg
test
xor
in
into
mov
mov
lret
test
xor
xchg
stos
xchg
test
pop
mov
jo
xchg
test
lcallw
xchg
test
data16
scas
push
call
lcall
ljmp
cbtw
lret
pop
xchg
test
data16
lea
push
mov
data16
jp
sub
ret
inc
inc
xlat
fadds
xchg
test
pushw
and
test
retw
outsl
dec
xchg
test
pop
sub
mov
mov
xchg
clc
xchg
test
data16
or
test
xor
test
xor
in
fistl
inc
xor
add
nop
mov
data16
in
ljmp
inc
xchg
fldl
nop
test
pushw
pop
xchg
es
xchg
test
pop
fsubrs
pop
mov
xor
nop
mov
mov
sub
xchg
test
data16
in
xor
jp
inc
data16
pop
xchg
addr16
data16
lcall
stos
inc
pushw
inc
cmp
and
data16
lock
xchg
mov
xchg
cmp
test
inc
data16
pop
adc
or
inc
cmp
jp
inc
data16
enter
in
cmp
jo
inc
lods
jl
test
pop
aad
adc
mov
data16
push
leave
jecxz
test
data16
and
inc
pushw
cmp
jp
inc
data16
adc
test
xor
add
mov
inc
cs
dec
imul
add
test
popaw
sub
test
xor
in
in
xchg
test
repnz
pop
jb
test
data16
jge
sub
inc
data16
cmp
cwtl
mov
data16
sbb
nop
test
xor
test
push
pop
out
test
test
data16
mov
addb
test
dec
push
lods
gs
test
xor
in
dec
lea
xor
nop
or
mov
inc
sbb
xchg
test
adc
test
data16
sbb
jmp
test
xor
in
js
test
xor
in
xchg
lret
mov
push
sbb
xchg
test
in
movsl
jp
xchg
test
data16
pop
idiv
pop
xchg
test
data16
test
push
mov
mov
xchg
test
data16
push
test
xor
in
daa
addr16
pop
scas
jnp
int
test
data16
js
aam
test
dec
dec
je
pop
lea
xor
nop
jne
test
xor
add
and
jb
lds
jle
jo
test
data16
jp
popa
sub
inc
xor
out
inc
mov
in
outsb
xor
xchg
test
push
push
mov
jp
inc
sub
popa
imul
jae
xchg
test
xor
test
data16
test
push
pop
jmp
inc
xchg
test
xor
in
push
lea
xor
nop
xchg
test
data16
jbe
add
mov
xor
out
inc
lea
test
leavew
mov
test
mov
loope
xchg
test
xor
ds
pop
nop
test
xor
in
setno
data16
out
sub
nop
test
data16
outsb
add
nop
test
lcallw
cmp
lcall
xor
inc
data16
pop
mov
lea
xor
nop
or
maskmovdqu
into
fisttpll
inc
data16
mov
dec
loop
test
sbb
push
stos
mov
test
xor
out
popa
xchg
test
xor
in
lahf
mov
sbb
jb
xchg
test
xor
test
data16
cmpsb
xchg
test
test
ljmpw
xchg
test
xor
in
adc
fs
push
test
inc
imul
lcall
dec
xchg
test
xor
in
jne
test
xor
in
adc
inc
jmpw
hlt
rcll
inc
xor
repz
addr16
shlw
test
xor
test
data16
testb
pop
jp
inc
xor
in
rorl
inc
xor
out
add
test
pushw
xchg
enter
add
outsb
fbld
fnstcw
inc
data16
pop
pop
loop
test
data16
mov
push
jb
inc
pop
in
jbe
sbb
inc
data16
dec
push
cld
xchg
test
xor
ficompl
jp
inc
rorw
mov
mov
mov
jp
inc
pop
mov
jae
nop
test
xor
pop
xchg
mov
test
data16
sbb
sub
inc
data16
lods
notl
jp
inc
xor
in
and
inc
xor
add
cmp
inc
data16
test
addr16
sti
add
fwait
jp
inc
xchg
ror
cmp
mov
movsw
jle
lret
test
xor
test
xor
test
data16
test
xor
test
inc
pop
addr16
xchg
test
data16
test
xor
in
push
lea
data16
test
adc
popa
negb
test
data16
jp
or
test
xor
in
jae
test
adc
imul
or
test
cwtd
push
cmpsb
dec
scas
nop
test
xor
test
xor
nop
imul
xchg
inc
add
test
rcr
mov
je
test
dec
dec
lcall
addb
and
test
push
xchg
or
mov
addb
add
test
enterw
pop
mov
loope
push
repnz
push
mov
jl
mov
pop
push
test
xor
add
push
xchg
test
pushw
lahf
fst
sub
inc
push
je
adc
test
xor
jmp
fnstcw
inc
data16
nop
cli
xchg
test
data16
jp
or
jb
data16
test
sub
mov
in
mov
jp
inc
pop
jo
sbb
test
push
leave
mov
mov
lcall
mov
cmp
ds
testb
test
xor
in
outsl
nop
test
xor
jmp
insl
jp
inc
xor
in
js
test
pushw
push
or
pop
xchg
test
data16
cmc
lea
jp
inc
cmp
loop
in
test
adc
test
jp
inc
xor
sbb
jp
inc
data16
or
xchg
nop
test
xor
test
xor
in
mov
lcall
push
ret
xchg
mov
nop
test
data16
subb
aad
test
cwtd
outsb
xlat
mov
xchg
test
outsw
movsl
xchg
out
xchg
test
xor
xchg
or
push
fistl
gs
inc
pushw
sbb
addb
aas
jp
inc
data16
xor
pop
jp
inc
inc
fldt
xor
xchg
adc
and
test
data16
out
and
inc
xor
test
xor
in
ja
test
data16
ljmp
lret
xorl
test
repnz
pop
repz
daa
jp
inc
data16
jle
push
inc
inc
mov
js
mov
xchg
xchg
sub
lea
data16
jmp
jo
test
popw
jo
mov
xchg
test
mov
mov
jp
inc
retw
mov
jp
inc
data16
jne
jp
idiv
imul
fiaddl
repz
test
data16
mov
test
inc
data16
xor
inc
data16
xor
js
test
pushw
sbb
test
data16
jns
jne
test
xor
out
jle
test
pop
in
cmp
nop
test
xor
in
lea
inc
data16
push
out
push
aaa
xchg
test
data16
test
data16
notb
xchg
test
sub
fmull
inc
data16
jecxz
add
mov
xchg
rcl
xchg
test
inc
dec
outsl
mov
jp
inc
xor
adc
xchg
test
mov
scas
call
lcall
sbb
inc
data16
jmp
mov
mov
xchg
push
fisttpll
inc
data16
cli
sarl
int
mov
xor
xchg
xor
inc
xor
nop
push
xchg
test
data16
lods
lret
test
data16
cmpsb
adc
in
jp
inc
data16
leave
cmp
test
ss
jmp
mov
xor
test
data16
sub
test
data16
cmp
inc
data16
sti
and
loopne
test
data16
test
frstor
loop
mov
push
popw
and
sub
test
data16
in
inc
pop
nop
test
mov
or
inc
xor
in
decb
inc
data16
or
xchg
test
xor
cmp
xchg
test
sub
or
add
inc
data16
test
xor
test
data16
mov
aad
test
data16
push
sbb
jp
inc
xor
in
pop
lea
data16
jmp
dec
sbb
rcll
int
lcall
call
cmp
sti
push
fisubrl
jp
inc
in
adc
pop
xchg
test
xor
in
mov
test
data16
pop
pop
stc
xchg
test
xor
in
imul
dec
aas
xchg
test
pop
sub
test
xor
push
imul
xor
sub
xor
jp
out
mov
pushw
mov
repnz
xchg
in
xchg
test
cmp
mov
jp
inc
data16
dec
mov
xchg
test
xor
in
movsl
xchg
test
data16
test
inc
inc
dec
in
mov
xor
nop
scas
xchg
test
insw
ljmp
jp
inc
data16
xlat
jmp
push
xchg
test
push
pop
out
popa
nop
test
xor
sbb
jp
inc
mov
icebp
jp
inc
xor
pop
xchg
push
test
lock
test
xor
test
dec
adc
pop
xchg
mov
data16
daa
cs
nop
test
xor
rcrb
test
data16
ljmp
xor
in
scas
nop
test
data16
inc
xor
out
jp
inc
xor
in
mov
test
pushw
ljmp
lcall
imul
aam
push
lea
data16
cmpsb
adc
mov
data16
xchg
jp
inc
data16
cmp
inc
data16
push
xlat
sub
test
xor
in
hlt
nop
test
xor
xor
jp
inc
mov
mov
data16
or
jp
inc
outsw
addb
xchg
test
inc
dec
push
clc
add
inc
and
lea
lea
inc
cwtd
loope
add
nop
test
data16
sar
xchg
test
in
add
sub
lret
xchg
testl
xor
in
inc
xchg
test
xor
xchg
push
addb
add
test
data16
or
jp
inc
pushw
fadd
jae
mov
xor
test
push
inc
sahf
ret
fs
test
pushw
push
test
leavew
xchg
adc
jp
inc
xor
pop
xchg
nop
nop
test
data16
mov
xor
test
add
cmc
jnp
test
data16
popa
jmp
rclb
data16
sbb
pop
lea
data16
cmpsb
adc
lcall
scas
nop
test
data16
cs
xchg
test
data16
int3
push
mov
xchg
lea
sbb
xchg
test
xor
cmp
xchg
test
data16
daa
movsb
out
mov
data16
push
dec
lahf
nop
test
xor
test
data16
mov
add
inc
and
mov
jp
inc
xor
in
pop
mov
data16
test
mov
mov
add
inc
add
jnp
xchg
inc
xor
test
data16
pop
loope
inc
xchg
test
data16
lds
inc
push
xchg
push
mov
lcall
jge
test
data16
test
cbtw
push
mov
mov
xor
in
aas
xchg
test
xor
in
jae
test
xor
sbb
jp
inc
data16
aas
addb
sti
jp
inc
xor
in
mov
test
outsw
test
sub
inc
out
jo
popa
xchg
test
xor
in
movsb
xchg
test
data16
dec
shlb
cmpl
xor
in
inc
nop
test
xor
in
adc
test
add
test
xchg
push
pop
adc
test
xor
in
or
inc
ss
les
addr16
data16
cmp
addb
and
test
xor
in
mov
ret
shl
into
inc
adc
inc
data16
imul
loop
inc
cmp
push
jp
inc
data16
mov
test
data16
out
pop
pop
loope
test
xor
in
stos
mov
cmp
lock
loop
xor
or
mov
add
push
repz
fsubrl
jp
mov
jo
dec
ja
cmpsb
ja
jg
pop
loop
lahf
mov
xchg
xchg
std
lds
inc
ds
addr16
loope
in
adc
sub
inc
jne
aaa
xchg
dec
push
in
mov
scas
mov
popa
xchg
mov
sbb
fidivrs
mov
and
and
ss
xchg
and
add
outsb
aaa
and
inc
mov
push
and
xchg
jnp
sub
insb
pop
mov
stos
popf
mov
je
mov
rcrb
and
inc
jge
loop
push
rolb
ret
push
iret
xor
notl
ds
push
cli
and
cmp
imul
sbb
lods
inc
xchg
sbb
ds
inc
inc
es
and
sbb
addl
jp
pop
xlat
es
lret
xor
mov
in
sbb
add
rcrl
outsb
xor
adc
adc
sbb
rorl
xchg
fildll
nop
or
sbb
lret
mov
les
jl
movsb
push
xorb
adc
imull
mov
sbb
push
lock
dec
insb
jl
mov
cmp
mov
mov
adc
in
inc
fadds
push
dec
testb
inc
bound
adc
lahf
xchg
jp
and
and
ds
sub
sub
fwait
std
loope
out
inc
push
or
pop
lock
js
xchg
sbb
das
test
pop
out
xor
inc
mov
loopne
pop
sbb
loop
subb
rclb
adc
je
test
sbbb
push
sbb
popw
out
call
int
push
mov
and
mov
mov
fidivs
inc
es
dec
or
add
jne
mov
movsb
mov
cmp
lret
push
negl
mov
mov
sub
adc
xchg
mov
inc
repz
ss
outsl
push
jecxz
xor
sub
into
enter
test
pop
cmp
popf
jl
int
dec
cli
leave
inc
ret
push
out
jne
and
out
adc
incl
sbb
jmp
imul
xor
pop
dec
adc
ja
mov
vpaddd
pop
sti
pusha
aam
in
aam
mov
push
xchg
sbb
fbld
jge
and
cmp
push
or
subb
inc
adc
xchg
and
test
cs
pop
scas
jmp
mov
pushf
add
popa
jbe
cwtl
mov
add
pushf
pop
out
xor
addr16
ds
mov
aad
shll
xor
jb
loope
aas
lret
inc
repz
dec
inc
inc
aaa
insl
pop
insl
js
fistpl
mov
dec
or
and
sbb
cwtl
push
scas
jne
sub
dec
neg
lods
rcrl
inc
mov
mov
mov
inc
lock
sub
mov
sbb
loope
jmp
and
mov
loop
and
jge
bound
ds
or
out
es
cmp
lahf
mov
out
sub
pop
leave
pop
cmpsb
icebp
mov
mov
leave
push
mov
xchg
push
popa
add
ljmp
cmp
leave
mov
inc
mov
xor
test
insb
cltd
jecxz
add
dec
out
setp
push
inc
xor
xchg
lgs
movsl
inc
es
jns
les
xchg
roll
fcomps
movsl
push
aaa
xchg
mov
fiadds
jns
jnp
lock
or
outsb
js
xchg
pop
aad
ficompl
cli
add
divb
mov
gs
pop
inc
lods
jne
dec
push
mov
mov
dec
mov
leave
sbb
in
inc
fnstcw
cs
bound
outsb
out
test
jne
loopne
cmpsl
dec
cmp
mov
filds
jp
lret
int
cmp
dec
jp
lahf
pop
fldl
or
mov
sub
cmpsl
test
xchg
add
jmp
repz
fisttps
arpl
in
mov
call
insb
mov
sahf
and
mov
inc
push
jg
mov
mov
pop
push
cli
sub
inc
mov
pop
cmp
adc
xchg
inc
test
sbb
jb
inc
dec
clc
scas
sahf
leave
aad
push
cmp
xchg
mov
mov
inc
movsl
sbb
or
shrb
jl
hlt
bound
dec
bnd
push
mov
add
repnz
ret
mov
or
add
inc
sub
dec
push
mov
jge
pop
dec
jbe
in
pop
push
inc
andl
xchg
pop
repnz
or
scas
movsl
in
jo
gs
xor
int
jl
data16
into
or
cmp
mov
jge
sub
adc
in
cld
mov
cmpsb
test
push
inc
addr16
xor
pushf
test
enter
mov
inc
and
xchg
movsl
inc
sbb
fistl
dec
cmp
bound
sub
cld
cli
loope
add
push
inc
sbb
das
stos
inc
js
pop
inc
pop
fnstsw
lret
xor
mov
add
mov
sbb
or
bound
das
std
in
adc
xlat
scas
sub
mov
push
jno
dec
lcall
nop
sub
popf
int
outsl
mov
popa
or
and
sub
shrb
jg
push
sbb
test
fiadds
loop
jnp
fidivl
jno
jecxz
mov
fdivrs
scas
cmp
imul
adc
fs
inc
pop
stc
stc
adc
outsl
std
jp
xor
aam
into
stos
loop
or
jl
cmp
scas
sbb
movsb
jl
cli
cld
test
out
xchg
sbb
ret
mov
jmp
pop
adc
push
adc
adc
aam
pop
sbb
fdivl
bound
or
sti
cmovo
in
aas
pop
xor
lret
xlat
push
cmp
cmp
sarl
sbb
fistl
repz
jmp
iret
inc
and
xchg
dec
inc
pop
lahf
nop
xchg
aad
add
push
mov
jmp
pop
mov
adc
xor
fimull
call
fwait
mov
add
je
test
dec
jle
adc
push
movl
push
xor
dec
sub
dec
fstpt
cmc
dec
fldl
sbbb
cs
shll
pop
shl
pop
stos
and
enter
add
mov
xchg
icebp
mov
mov
fbstp
les
in
xchg
adc
cld
or
adc
cmpsl
jl
ss
add
es
xchg
ret
cs
aam
loop
sub
inc
cltd
pop
lds
xor
insb
sbb
lods
cli
fmull
cli
scas
ljmp
pop
clc
call
jne
push
sub
aaa
mov
lds
test
sbbl
push
sti
psubw
xchg
push
cmpsl
shr
or
cmp
rcl
pushf
push
enter
or
push
push
mov
xchg
mov
cmp
mov
pushl
jno
add
cltd
les
fwait
stc
ret
push
arpl
inc
lahf
mov
ja
dec
push
pop
pop
push
mov
or
rcll
pop
lahf
lods
jns
sahf
test
std
std
out
insb
or
mov
aad
jne
nop
jecxz
sbb
loope
mov
jnp
adc
dec
hlt
or
pop
subb
sarl
sbb
xchg
int3
mov
cld
xchg
cmp
loopne
je
gs
push
jnp
decl
and
adc
xor
push
mov
sarl
mov
and
inc
xchg
inc
jne
je
jo
lods
sub
iret
lock
adc
push
dec
push
mov
jo
add
cmp
in
sbb
inc
loop
adc
fisubl
xor
je
or
ret
xchg
cli
sub
leave
mov
jg
mov
sbb
xchg
lds
inc
push
fisubs
int
in
jb
ljmp
or
xchg
aaa
push
sbb
daa
xchg
dec
jge
lret
int3
jbe
inc
cs
int
movsb
sbb
jp
mov
xor
jo
push
lods
push
mov
jp
dec
scas
inc
jl
push
bnd
movsl
push
add
cmp
jl
add
or
paddsw
and
cmpsb
sub
cs
fistps
test
fwait
outsl
sti
lahf
aam
out
cmpsl
repnz
fsubrl
cmp
sub
xor
push
aaa
cwtl
pop
outsb
mov
lea
stos
pop
lea
jmp
test
sbb
filds
sub
push
adc
cmp
xchg
pusha
lahf
nop
fcoml
sti
outsl
lcall
aas
sub
mov
and
jno
mov
mov
push
jg
mov
test
or
sahf
push
sbb
ja
mov
add
test
pop
es
pop
fdivs
fwait
ret
pop
scas
adc
push
fs
dec
arpl
mov
push
loop
cmp
xor
pushf
mov
mov
repnz
mov
and
xchg
sub
xchg
pushl
jnp
mov
das
ret
pop
pusha
dec
mov
pop
lods
mov
ljmp
xor
rcll
mov
mov
cmp
sbb
lods
pushf
dec
imul
mov
mov
cmp
repz
fnstcw
sahf
imulb
les
dec
testb
mov
lcall
stos
mov
add
mov
out
imul
rorl
test
sbb
xchg
inc
xchg
lea
outsb
mov
jecxz
xor
je
loopne
dec
cmc
adc
repnz
aas
or
inc
sub
std
inc
push
dec
mov
psrld
jl
lds
jo
adc
dec
das
mov
outsb
rcrb
jp
loope
pop
pop
xlat
shll
mov
and
mov
fsubs
je
push
lock
push
mov
or
lret
add
sbb
nop
rcll
adc
cmpsl
jnp
or
or
insl
xlat
and
popa
ret
mov
jmp
int3
rolb
loope
in
inc
mov
lret
loop
mov
dec
ljmp
xor
adc
jns
xchg
xchg
lea
clc
and
fstl
pop
scas
push
out
mov
mov
lcall
std
jg
add
addps
repnz
clc
jnp
xchg
popf
std
pop
out
imul
stos
push
lcall
repz
pop
xchg
xchg
adc
shll
dec
cmp
aam
gs
mov
xchg
call
xor
lret
iret
les
add
cmp
lahf
fwait
sub
cmp
fmull
mov
pop
adc
cmpl
push
addr16
ljmp
jns
mov
bound
cmpsb
int3
mov
out
jne
shll
mov
xchg
inc
mov
inc
mov
addr16
cmpsl
or
xchg
sub
lods
jo
addl
push
jmp
cltd
daa
ljmp
in
in
sbb
jle
in
jnp
xchg
xchg
insb
pusha
dec
cmp
push
mov
cmp
aam
mov
add
daa
push
xorb
or
inc
sahf
jg
pop
stos
inc
dec
ret
xchg
iret
dec
mov
in
iret
ret
fs
xor
sbb
into
enter
lock
aam
mov
jg
or
je
arpl
add
clc
insl
cmp
repnz
mov
ss
mov
fiadds
lcall
add
aad
mov
or
cwtl
aaa
int
cltd
sbb
lea
jbe
adc
push
ficomps
movsb
cmpsl
push
sarb
loop
and
push
cwtl
jo
jle
xor
cltd
fidivs
dec
mov
lcall
ss
ror
pop
adc
lret
cmpsb
scas
ss
push
stos
mov
daa
cmp
outsb
jmp
lahf
repz
movsl
dec
sub
and
addr16
cmp
push
ficompl
js
mov
popa
push
mov
add
push
inc
sbb
inc
push
popl
pop
pop
adc
popf
inc
sbb
dec
push
dec
fdivrl
push
xchg
push
pop
popa
add
in
mov
arpl
in
mov
int
mov
cwtl
and
or
mov
sbb
pop
sarl
xchg
push
inc
sahf
or
jb
mov
inc
or
leave
push
adc
pushf
std
sub
lock
divl
icebp
dec
add
adc
push
stc
cmp
loop
xchg
lret
outsl
mov
mov
cmc
push
pop
cmp
jno
cmc
or
mov
cmp
dec
push
in
stos
cli
bound
jnp
xchg
movsb
lret
push
out
push
dec
add
dec
jge
std
inc
jb
lds
pop
pop
stos
nop
loopne
jno
gs
push
dec
inc
fdivr
insl
arpl
in
adc
pop
jo
mov
xchg
pushf
hlt
out
cmp
jb
xchg
movsl
push
xchg
popa
cmpxchg
ret
push
and
mov
arpl
dec
dec
mov
nop
cmp
jecxz
repnz
stos
inc
out
pushf
push
jecxz
adc
sub
pushf
call
imul
pop
jecxz
xchg
jbe
sahf
nop
gs
insb
das
sub
adc
aas
cmpsl
ja
inc
and
pop
push
leave
sbb
stos
outsl
add
fiaddl
data16
xor
aas
ret
and
mulb
cmp
and
iret
pusha
mov
je
sub
push
das
dec
lock
push
pop
mov
xchg
mov
lret
jo
cmp
arpl
addr16
jb
iret
push
xchg
cmpsl
jp
rorl
mov
insl
mov
mov
ret
dec
mov
aam
inc
jp
mov
cmp
pop
add
shll
ror
mov
stc
push
mov
shr
ljmp
dec
or
pop
xchg
fstsw
pushf
inc
push
mov
les
xchg
cltd
xor
mov
movzwl
pop
xchg
in
pop
out
into
and
stos
inc
jecxz
pop
adc
rorl
dec
sbb
shll
test
xor
mov
addr16
xor
mov
sti
xor
pop
ljmp
std
add
mov
add
fistpll
ds
stos
addr16
jb
fimuls
shrb
into
stos
imul
sub
in
push
mov
bound
mov
enter
divl
jp
dec
jecxz
daa
mov
fnstcw
push
fnstcw
stc
xchg
addr16
dec
or
pop
mov
xor
xchg
bound
jmp
insb
dec
xor
ljmp
in
loope
jle
pop
sbb
out
insb
lret
xor
cltd
stos
imul
out
out
popf
sub
push
inc
pop
jae
xor
inc
test
scas
xor
shl
or
scas
cld
and
stos
xchg
hlt
push
push
push
aas
scas
mov
lods
sbb
sub
xchg
rolb
xor
push
sbb
test
ret
inc
dec
xor
cmpsl
sbb
repnz
pop
and
push
jbe
lds
fcmovnu
cmpsl
sub
int3
shl
add
or
push
sbb
pop
push
jbe
push
and
cs
cmp
les
scas
inc
shll
test
loop
jl
sub
bnd
dec
add
imul
mov
add
in
mov
cmp
adc
pop
push
jne
es
inc
fwait
sub
frstor
inc
ds
dec
xchg
cmp
stos
shrl
sbb
push
xor
in
and
js
and
push
adc
push
xor
cltd
mov
xor
fwait
cmpb
out
outsl
rol
daa
or
outsb
add
out
adc
ljmp
loop
jae
mov
push
push
andb
ss
mov
sti
or
jecxz
cmpb
or
test
sti
or
outsl
xor
fwait
and
sarl
xchg
negl
add
stos
fmuls
cmp
xor
out
adc
ret
push
push
inc
add
outsl
lcall
cmc
sbb
ror
mov
cmp
ficompl
sub
pop
cli
xchg
adc
out
orb
mov
stos
add
popf
adc
pop
iret
imul
xchg
loopne
pop
xchg
gs
push
in
das
cmp
sbbb
mov
insb
xlat
fistl
push
sbb
and
repz
mov
fcompp
std
and
dec
pop
pop
and
cmp
jns,pn
int3
jmp
bound
mov
adc
pop
fs
loope
add
mov
dec
dec
mov
je
xchg
mov
jb
add
inc
inc
mov
mov
inc
pusha
in
mov
fcmovnu
fbld
dec
mov
int
inc
jecxz
mov
pushf
mov
adc
cli
pushf
and
enter
in
imul
js
mov
pop
pop
subl
mov
mov
lret
adc
mov
cmp
mov
add
jnp
add
cld
es
std
ret
dec
aam
repz
lcall
pop
and
mov
fstps
and
mov
cmp
imul
or
cltd
pop
inc
frstor
les
xchg
mov
test
lods
sub
subb
push
scas
adc
dec
out
xor
stos
xor
mov
rcrl
scas
stos
xchg
xchg
sub
jge
dec
or
int
mov
lea
rcr
or
push
stos
xor
cmp
add
into
add
subb
fwait
xchg
insl
or
out
or
xor
lcall
mov
sbb
xchg
outsb
mov
mov
push
jns
enter
jecxz
out
or
or
cld
test
dec
jne
mov
mov
mov
push
pop
jp
aam
fnstcw
or
mov
fwait
out
sub
xchg
sub
in
xchg
aas
mov
out
mov
in
in
or
jle
ret
je
mov
ss
stos
fdivl
ret
push
jnp
ret
mov
dec
sbbl
cli
mov
outsl
pop
sbb
mov
out
pop
iret
or
out
daa
push
pop
int
scas
sub
imul
xchg
sbb
pop
xor
pop
imul
push
test
jne
int3
dec
cmp
or
hlt
mov
leave
push
scas
aam
rcrl
shrb
mov
test
push
int3
stos
ds
add
aaa
test
push
loopne
aaa
dec
mov
jge
jnp
jbe
or
movsb
mov
dec
mov
sarl
scas
and
jo
out
xor
pop
mov
jl
pop
lret
jno
push
adc
pushf
pop
movsl
daa
jns
pop
enter
in
cwtl
inc
test
mov
ljmp
adc
dec
lahf
xor
movsl
pop
int3
addr16
xor
sub
lret
imul
push
js
cmp
pop
jns
add
push
mov
add
imul
mov
cmpsl
popl
mov
adc
arpl
cmp
push
int
dec
lcall
fldcw
add
popf
movl
mov
aas
mov
ss
jg
cmp
adc
sbb
push
mov
or
xchg
xor
push
insb
bswap
scas
loope
negl
gs
fsubs
xchg
ja
lods
adc
push
mov
aad
ret
loop
in
xchg
outsl
jns
loopne
pop
sub
cmc
fildll
into
aaa
pop
and
cmp
cmp
xor
in
or
enter
pop
je
pop
inc
aad
jb
and
cmp
out
inc
adc
int
imul
cmpsb
adc
gs
xor
in
lret
xchg
fsubl
xchg
repnz
sbb
inc
sbb
out
push
repz
xor
sbb
cmc
inc
jo
jne
mov
and
fsubl
je
pop
inc
cmp
ret
or
pusha
js
call
aaa
rcrl
dec
sub
jecxz
sub
je
in
arpl
push
mov
lea
in
push
inc
jp
push
inc
out
insb
pop
pushf
sbb
or
dec
mov
push
jle
dec
pop
cwtl
mov
cmpsl
push
cwtl
mov
hlt
std
outsl
mov
loop
and
and
daa
sub
mov
adc
lock
fidivrs
mov
xor
dec
pop
dec
cld
mov
cmpsb
ljmp
sub
dec
sti
inc
mov
mov
pop
es
das
ret
push
push
aam
testb
clc
inc
sarb
insb
pop
inc
repz
loopne
fs
push
movsb
mov
popa
jne
cmp
shlb
xchg
dec
sbb
clc
aam
cmc
fisttpll
adc
pushf
lds
add
cmp
push
mov
dec
xchg
jb
mov
xchg
jg
stos
and
loop
addr16
mov
clc
jnp
sbb
popl
inc
pop
out
jno
sti
xchg
stos
mov
addr16
sub
xor
pop
pop
ljmp
and
and
mov
dec
inc
mov
push
push
ja
adc
inc
cmp
fdivl
xlat
xorl
mov
sbb
out
call
xchg
mov
dec
test
out
int
fs
mov
inc
xchg
jp
arpl
fcoms
fidivl
fs
aaa
imul
scas
mov
adc
pusha
dec
cmp
in
xchg
iret
jle
and
fidivs
and
int3
stos
dec
add
push
mov
pop
jo
jbe
xchg
push
leave
enter
push
pop
inc
mov
jne
ret
mov
insb
lea
adc
das
push
movsb
call
popa
imul
je
mov
sbb
jo
pusha
inc
and
in
or
iret
out
arpl
clc
test
xchg
out
repnz
dec
mov
xchg
sub
fsubrp
les
int3
xchg
imul
or
sub
or
adc
cwtl
jge
jle
jbe
xor
push
lret
sahf
lcall
jae
and
scas
add
push
ret
cmp
outsl
popa
push
inc
lret
xchg
cmp
dec
pop
mov
xorl
daa
js
jl
clc
pop
sub
outsl
sbb
xor
mov
or
push
test
out
push
lahf
push
rcll
and
test
loop
mov
sub
dec
gs
jle
push
std
mov
push
loop
jb
je
mov
sub
xor
ficoml
and
lret
sbb
jl
sbbb
ja
jbe
int3
adc
into
fwait
sub
push
fdivrl
les
imul
pop
loopne
push
sub
les
jo
dec
and
mov
mov
mov
jg
jg
sub
mov
sahf
notb
scas
mov
mov
jmp
xchg
lret
and
fstps
fsubs
decb
lea
ss
adc
jg
fs
cmpsb
jl
mov
loop
out
outsl
pop
scas
sub
jp
or
cmpsb
adc
sbb
loope
inc
int
cmp
jo
xor
and
cli
sti
mov
mov
xchg
lods
pop
test
add
bound
push
imul
stos
add
sbb
test
xor
xor
jp
push
in
push
jp
mov
or
pop
xlat
pop
cmp
and
add
stos
adc
xor
mov
fldcw
out
inc
subl
dec
sbb
adcl
aas
lds
pushf
pop
mov
adc
arpl
pop
lret
ss
sahf
xadd
push
jg
jecxz
pop
jns
jg
add
pop
jb
sbb
test
inc
xchg
mov
jae
aas
scas
lcall
outsb
or
aas
and
jmp
or
std
push
adc
shlw
adc
mov
sub
sub
jo
xlat
mov
cwtl
and
lret
mov
cs
icebp
in
in
mov
ja
xor
arpl
jae
es
adc
aam
dec
mov
rclb
jne
pusha
push
push
pusha
ss
and
sbb
movsl
mov
adc
iret
popa
mov
ljmp
adc
fnsave
inc
sti
mov
xchg
cld
test
push
orl
pop
cli
push
decl
xchg
mov
lcall
adc
push
rorl
aas
sbb
xchg
jo
pop
stos
subb
cmp
jno
mov
xor
add
xor
hlt
mov
dec
ret
movsb
add
add
enter
in
outsb
or
int3
inc
inc
aaa
mov
ja
dec
fcomps
jecxz
mov
pop
dec
xchg
es
mov
adc
jns
outsb
insb
movl
jne
sahf
dec
mov
jl
jns
out
sbb
inc
mov
jp
cmpsl
jecxz
xlat
cs
sub
mov
movsb
test
jmp
in
stos
filds
ds
out
aam
mov
add
jg
insb
or
sub
jb
mov
push
stc
insl
lock
popf
jae
push
mov
jae
dec
mov
lret
pop
xchg
pop
ret
inc
iret
lret
adc
loop
push
jmp
lods
scas
lock
loope
sbb
cmp
cmc
fisubl
add
inc
lahf
imul
push
movsb
fildl
hlt
add
mov
pop
hlt
and
xchg
or
inc
repnz
mov
mov
lret
cmp
nop
aam
pop
rcl
or
push
sti
or
data16
rclb
inc
sub
fs
mov
mov
movsb
shll
ss
stos
and
or
ffreep
pop
jo
mov
xchg
push
and
sahf
push
jl
repz
jno
shl
cmp
inc
jmp
ja
xchg
enter
in
data16
cmpsb
mov
sub
push
xchg
jp
add
or
loop
lahf
outsl
sbb
movsl
push
pop
lods
sbb
sub
test
push
jo
pop
test
and
pop
icebp
repnz
pop
jne
xor
mov
jne
sub
add
xchg
rclb
cmp
outsb
sub
push
sub
dec
push
fsub
xchg
push
push
jnp
lahf
lcall
ljmp
or
push
jae
test
fistl
mov
shll
fcoml
mov
fwait
xor
test
pop
mov
cld
push
dec
mov
roll
mov
cwtl
fmull
cmp
std
jp
adc
mov
dec
repnz
inc
ds
outsl
aaa
pop
xchg
xor
in
cmc
insl
adc
hlt
or
jns
xor
int3
enter
test
inc
mov
add
movsl
loopne
mov
fstpl
xlat
mov
loopne
mov
mov
and
push
mov
sti
sub
cmp
ror
mov
jl
aad
cwtl
xchg
call
sbb
insl
cli
add
lcall
out
fldenv
jecxz
dec
jnp
adcl
dec
insl
mov
dec
rcrl
loope
pop
jge
sub
pop
shl
call
add
inc
out
jecxz
iret
inc
je
cltd
dec
dec
dec
or
xor
inc
mov
mov
pop
loop
inc
aas
dec
ja
mov
or
or
sub
mov
rol
movsl
loope
sbb
mov
shrb
lock
lcall
push
sbb
sub
mov
xor
ret
inc
fwait
mov
jbe
pop
dec
icebp
sbb
pop
cmp
jl
dec
ret
mov
jle
mov
pop
xor
and
mov
out
data16
decb
lods
jl
or
ljmp
inc
clc
dec
cmp
fstp
cwtl
xor
mov
mov
cmp
mov
fnstcw
aas
adc
out
pop
stos
cwtl
stos
add
pop
shll
xchg
jle
sahf
stc
mov
dec
aas
test
je
das
mov
std
push
cmc
or
xor
ljmp
add
imul
fwait
adc
pop
or
sub
into
mov
ja
or
pop
mov
ja
mov
inc
ljmp
mov
adc
sahf
nop
out
cmpsb
not
mov
push
jne
std
lock
outsl
mov
add
idiv
jp
sahf
cmp
dec
aam
rclb
sub
cmp
testl
pushf
mov
cmpsb
fbld
repnz
addb
jle
mov
jnp
in
insb
ja
outsb
and
lds
mov
les
push
dec
lcall
aad
fcompl
lret
scas
ret
cmp
sub
xchg
adc
jp
push
xor
scas
push
sbb
imul
repz
jmp
xchg
sbb
rcr
mov
inc
push
sbb
push
mov
jbe
arpl
addb
addl
mov
mov
sarb
push
fidivs
fcoms
int3
insb
cmp
add
stos
jmp
sub
pop
aaa
mov
jl
xchg
das
push
jbe
loop
push
imul
inc
cmp
mov
and
je
jo
sbb
xor
or
pop
jl
fwait
aad
scas
inc
cmpl
jbe
push
enter
in
dec
insl
repz
cmp
enter
insb
xchg
lea
lahf
mov
and
mov
jno
jecxz
rcrb
daa
sub
mov
scas
js
push
xchg
lret
pop
call
mul
pop
out
js
pop
xor
pop
add
add
pop
add
fmull
sub
dec
adc
mov
shrl
cli
test
xchg
idiv
push
shlb
lcall
jbe
jbe
mov
push
jbe
cmp
mov
add
das
cli
into
jg
adc
andb
test
lea
cmp
xchg
sbb
int
inc
dec
lods
rcrl
lret
decl
fsubp
fcoms
push
jmp
adc
dec
sar
fcom
loop
jne
outsl
push
adc
xor
insb
xlat
cmc
xor
pop
into
loopne
nop
or
mov
cmp
push
lods
xor
sbb
mov
daa
jne
data16
insb
add
das
imul
mov
stos
gs
or
push
sti
fsubs
xor
out
test
cmp
pop
xchg
xor
repz
jns
fidivl
jbe
test
pop
push
nop
or
aad
bound
add
jp
pushf
pop
adc
enter
xor
fldl
call
insb
cmp
push
subl
xchg
dec
mov
lret
jmp
ret
inc
lret
add
jl
cmp
mov
fistl
adc
sbbl
adcl
fs
adc
lock
dec
rcll
stos
xchg
and
lahf
scas
mov
push
fiadds
lock
in
mov
cmp
cmp
mov
icebp
lcall
cmpsl
jne
lods
dec
in
mov
pushl
aam
idiv
sub
icebp
shl
xor
shlb
cmc
inc
sub
popa
cli
dec
mov
out
push
ljmp
jne
test
fldl
xchg
lret
sarb
sub
cltd
inc
mov
add
inc
mov
xchg
scas
dec
push
sbb
cwtl
xchg
inc
aaa
lods
inc
stos
icebp
lret
arpl
or
std
xchg
insl
sbb
int
test
jnp
dec
cmpsb
push
adc
mov
dec
or
mov
sarb
mov
add
outsl
push
push
pop
les
mov
mov
dec
add
int
mov
js
jne
jae
cs
es
stos
je
les
in
dec
loope
mov
jb
test
out
sbb
inc
mov
or
test
jp
dec
push
addr16
sub
lret
pop
out
sub
mov
sbbl
xchg
dec
and
test
mov
jle
out
idivl
xcrypt-ofb
cmpsl
insb
loop
jl
mov
mov
push
ja
dec
mov
jmp
stos
push
adc
outsb
jae
add
pop
cmc
insb
cmp
xor
iret
mov
push
jns
aaa
scas
mov
pop
imul
outsl
sbb
insb
lds
mov
cli
inc
popf
dec
sbb
xor
inc
or
fsubrs
aad
fdiv
mov
fs
or
mov
fadds
jle
mov
iret
call
int3
push
loop
add
dec
or
mov
sbb
jge
faddp
jbe
push
push
jmp
enter
imul
aam
xchg
xor
jmp
pop
dec
push
daa
sbb
les
filds
daa
jne
lods
enter
in
xor
adc
rolb
push
insb
xchg
fsubrl
pusha
push
or
and
add
repz
sbb
stos
xchg
push
jae
pop
daa
in
js
pop
sub
in
loop
shlb
dec
mov
sbbb
outsb
fwait
adc
pop
pop
lcall
jmp
jge
out
ljmp
cmp
mov
lcall
lcall
or
push
jns
mov
mov
xchg
jle
js
pop
mov
adc
jg
bound
cmpb
std
test
sub
lret
imul
shll
xchg
notl
fs
fcoms
addr16
orl
in
fs
fwait
cltd
stc
mov
icebp
loop
or
cmc
leave
xchg
mov
out
cmc
sti
dec
push
into
ret
adc
or
pop
shll
fwait
movsb
cli
xchg
and
out
push
sub
push
inc
add
add
xchg
adc
int3
icebp
imul
iret
mov
gs
sti
xchg
movsl
mov
bound
xlat
push
jle
cmp
std
mov
xchg
repz
dec
repz
sbb
in
stos
fsts
jnp
inc
mov
mov
nop
pop
sub
pushf
fcmovnbe
cs
push
pushf
or
in
adc
dec
dec
pop
jecxz
cmp
pop
cmp
call
shll
mov
jecxz
subl
pusha
xchg
pushf
dec
ss
inc
jb
repz
aas
popa
out
popl
roll
add
fistpl
daa
sbb
mov
dec
dec
movsl
mov
sbb
cmc
cwtl
mov
lret
xor
rcrl
adc
mov
out
movsl
das
lea
lock
mov
cld
gs
mov
je
into
dec
out
fsubrs
loop
xorb
aam
dec
cmp
insl
dec
and
leave
add
pop
mov
das
out
and
test
xchg
mov
push
or
ljmp
xchg
clc
rolb
outsl
jl
inc
divb
enter
jle
adc
psllw
ret
dec
leave
out
and
cmpsl
pop
adc
jle
lock
xchg
add
xchg
add
xchg
cmp
xor
sub
mov
sub
add
add
push
mov
push
jno
xchg
or
bound
dec
cmc
or
jbe
xor
mov
and
movsl
xchg
adc
in
inc
cmpb
and
leave
cmc
out
fs
mov
xchg
test
xor
cmp
mov
cmp
addr16
or
dec
lock
inc
in
jmp
push
inc
xchg
and
aad
mov
pop
pop
jns
movsb
cmp
pusha
mov
mov
jle
sbb
jnp
cld
shrb
and
push
sub
dec
push
out
cmp
aad
aaa
jae
ret
dec
inc
jmp
in
sub
push
iret
call
in
push
sarb
imul
xchg
lret
fidivrl
hlt
inc
sbb
push
xchg
jo
in
pmuludq
sub
repnz
ficompl
mov
repz
pop
lds
insb
fidivrs
sbb
js
int3
inc
pop
xchg
add
lods
mov
adc
aaa
push
out
int3
sbb
lahf
xor
jo
jbe
popa
cmp
mov
movsb
je
sbb
pop
xorb
adc
das
dec
dec
xor
into
pop
push
dec
ret
jl
addr16
pop
pushf
cmp
loope
enter
in
sbb
inc
cmpsb
inc
mov
jmp
aaa
adc
test
xor
xor
int3
add
call
ds
jle
cmp
out
sub
lods
mov
faddl
aam
fadds
xchg
pop
data16
jnp
pop
push
add
movsl
adc
add
sbb
sbb
sub
jne
and
shl
cwtl
or
outsb
push
fmul
sub
inc
mov
call
push
xchg
fsubl
icebp
int
pusha
mov
jl
fbld
or
and
dec
mov
jg
mov
sbbb
test
imul
rorb
push
inc
inc
dec
das
lret
xchg
not
insl
or
or
ss
popa
or
cmp
mov
sub
push
aam
outsl
aam
jmp
out
mov
into
cmpsb
mov
cmpsb
cmp
lea
out
inc
dec
mov
xchg
test
xor
adc
imul
jecxz
loopne
jno
mov
into
pop
sti
ss
in
add
sub
lret
push
cmp
cmp
sub
insb
cmp
insb
std
mov
flds
mov
iret
aaa
icebp
dec
cwtl
or
nop
aad
mov
cli
jmp
push
cmp
xor
pop
xchg
ja
lea
icebp
inc
pop
push
jmp
imul
je
xchg
add
lods
in
mov
aas
add
inc
mov
nop
pop
lret
mov
hlt
xchg
sub
and
or
mov
std
mov
cwtl
divb
pushf
shrl
ds
mov
jns
dec
das
insb
add
leave
mov
fmull
or
jns
and
nop
pop
shl
dec
dec
mov
jae
outsl
dec
loop
movsb
insl
jge
xchg
ret
xor
lock
fs
pop
mov
add
sbb
ret
lods
mov
sbb
adc
xchg
test
xchg
fisttpll
mov
mov
shll
test
adc
xchg
popa
add
dec
xchg
push
adcl
mov
rep
iret
push
fstpl
pop
shrl
iret
xchg
xchg
add
test
jb
dec
je
dec
xchg
shlb
dec
enter
sub
inc
add
add
sub
add
push
lods
lea
xchg
cmp
inc
xchg
imul
pop
jmp
xor
fsubrs
insb
jmp
cmp
xor
imul
inc
and
icebp
jne
stc
in
dec
sbb
mov
fildll
sahf
adc
jp
mov
push
shll
sub
lds
cmp
xchg
xchg
out
push
adc
adcl
ffreep
into
push
push
or
in
xor
jle
cmp
jns
mov
inc
pop
stos
mov
mov
cmp
push
cwtl
mov
jle
notb
dec
pop
arpl
imul
cmpsl
mov
xchg
scas
jl
subb
nop
sbb
in
ljmp
bnd
fwait
inc
in
push
out
dec
cmpsl
inc
fidivs
hlt
push
jo
leave
call
dec
popa
mov
push
into
aaa
aam
sbb
push
pop
mov
jnp
sub
bound
or
pop
mov
jge
out
jbe
into
cmp
movsb
cli
or
adc
int3
and
jmp
pop
movsl
inc
jo
add
xor
mov
sub
jl
mov
cmp
or
daa
jae
in
enter
in
add
xchg
inc
std
cmp
add
pop
test
push
sbb
lahf
jmp
xlat
and
dec
jnp
xchg
ds
adc
lcall
loope
jge
push
inc
fs
movsl
lcall
arpl
push
movsb
lahf
add
xchg
pop
sbb
jb
jg
adc
icebp
sbb
outsb
mov
mov
int
fcoml
fwait
jl
jl
adc
pop
aas
push
int
cltd
cmpsb
push
jg
sub
pop
mov
mov
mov
mov
in
mov
in
jg
push
popf
xorb
test
xchg
xlat
sahf
and
fldt
rcr
stos
lret
xor
sti
pop
fmul
jns
cmp
or
adc
cmp
stc
pop
sbbl
mov
xor
repz
mov
cld
into
mov
popa
cmp
out
xor
dec
fdivrp
cli
dec
ljmp
xor
outsl
popw
lock
inc
mov
xchg
imul
and
loopne
out
gs
inc
loope
adc
in
cld
in
insl
dec
mov
pop
mov
sub
call
xchg
jbe
cmp
pop
sbb
jns
mov
sti
inc
movsb
fnstcw
dec
inc
loop
sub
insl
loopne
adc
push
aad
cli
repz
adc
inc
push
pop
dec
fwait
or
pop
mov
call
mov
out
repz
inc
addr16
loop
dec
and
xchg
jb
fstpl
inc
sbb
insb
inc
adc
pop
outsb
out
popa
lret
inc
or
jnp
mov
add
cwtl
pop
shr
pop
mov
and
std
dec
pop
and
or
mov
or
mov
lock
and
mov
adc
std
lret
call
lods
push
icebp
pop
cmp
cmpsl
jb
orl
mov
mov
ret
les
push
sub
lcall
imul
and
lret
mov
sub
popa
ljmp
in
ljmp
imul
jbe
notb
mov
fsubrp
push
cltd
in
jne
add
sbb
push
stos
and
out
push
stos
mov
push
roll
in
lds
push
mov
inc
test
int3
cmpsb
dec
fldt
xacquire
pop
cmpsb
xor
mov
or
insb
push
sar
xor
add
addb
ret
iret
xor
inc
sub
pop
dec
fcmovnb
stos
ja
xor
cmpsb
rcrl
mov
pushf
mov
in
xor
jns
inc
leave
and
cmp
jne
sarb
movsb
jnp
mov
jne
lds
addl
shl
aaa
or
xor
dec
add
orl
js
js
xchg
add
pop
push
dec
in
sbb
jle
push
scas
jnp
and
insb
and
and
sbb
push
xor
and
mov
inc
push
pop
lods
push
jae
adc
pop
lcall
iret
cmpsb
lahf
adc
shlb
adc
sti
adc
xchg
js
fcmovu
mov
add
push
push
repnz
push
data16
or
fwait
ljmp
push
stc
sarb
dec
ret
lds
fidivrs
adc
int3
sbb
adc
or
add
aaa
test
jne
cmp
inc
clc
jbe
scas
push
push
movsl
push
call
cmp
loope
and
cli
adc
in
pop
xor
xchg
pusha
ret
mov
jl
test
jno
andb
add
daa
jb
mov
ficompl
mov
mov
lret
push
int
outsb
test
fldcw
lahf
or
rep
lret
pop
jnp,pn
dec
jo
sub
aam
loope
sbb
gs
in
sbb
pop
dec
pop
mov
sub
add
adc
and
fidivrs
mov
cwtl
pop
mov
sbb
mov
push
cs
lcall
repnz
mov
push
andb
mov
inc
and
fstpl
jg
imul
push
pop
sbb
out
mov
repz
shll
lret
xor
or
push
cmp
dec
ljmp
lea
xchg
loop
add
outsl
xchg
or
xor
xor
or
movsl
push
cmp
adc
loope
fdivrp
sub
mov
out
ret
add
data16
add
mov
shrl
sub
adc
and
or
mov
adc
sti
xchg
push
scas
mov
mov
cmp
adcl
sbb
cmp
stos
repz
nop
fnstenv
jae
dec
push
sarb
aad
lahf
cmp
xchg
jg
jmp
sar
pushf
or
aas
pop
cld
jb
fnstenv
sub
sti
das
jecxz
paddusw
ret
dec
fwait
or
jb
mov
sbb
mov
inc
cwtl
sbb
pop
adc
fistl
rorb
cli
cmp
jbe
mov
ss
cwtl
sarb
aad
add
rorl
and
sub
adc
sub
out
mov
daa
testb
adc
sbb
mov
jno
clc
dec
fcomps
insl
fisttpll
pop
ret
push
sti
xlat
aam
cmp
rolb
enter
shlb
adc
outsb
mov
xchg
ret
push
pop
adc
negl
add
sti
clc
jno
ret
pop
lahf
push
lea
lds
jmp
arpl
sbb
jmp
push
sub
push
xchg
out
dec
inc
inc
stos
lods
out
pop
adc
cwtl
rcrl
fistpl
or
stc
test
mov
mov
sub
insl
pop
or
lret
add
mov
add
lcall
or
insb
mov
shll
ja
xchg
popa
lock
mov
in
aam
xchg
add
in
sub
bound
out
add
bnd
jmp
dec
ficoms
adc
dec
mov
dec
sub
or
stos
bound
mov
int3
sub
lret
aaa
and
test
jmp
xlat
cmpsl
lods
filds
pop
aas
pusha
mov
out
mov
test
pop
inc
jnp
pop
xchg
push
and
adc
stos
je
rcll
lret
movsb
mov
xchg
jae
mov
dec
pop
rcrl
ret
cmpsb
iret
add
popf
push
push
xchg
xchg
inc
scas
inc
cmpsb
imul
mov
ficoml
inc
cltd
dec
insb
push
mov
int3
xlat
arpl
in
ss
out
cli
leave
pop
sbb
pop
push
or
in
vlddqu
bound
mov
int3
add
or
cmp
or
xlat
jnp
inc
shll
das
mov
aam
and
add
mov
adc
xchg
and
mov
sbb
in
inc
stos
adc
ja
inc
dec
punpckhwd
jl
push
loop
pop
cmp
sahf
daa
jno
ror
aad
insl
in
sarb
cmpsb
int3
lahf
arpl
push
cwtl
add
int
push
lods
in
int
sub
lea
push
ljmp
jg
xchg
cmp
sub
and
aaa
push
jmp
or
mov
mov
xor
jmp
sbb
pop
lret
and
adc
jnp
sub
movsl
daa
or
jmp
adc
loop
pop
pop
pop
push
aam
fldl
int
mov
mov
mov
sub
push
mov
lods
jg
leave
push
stos
add
test
lea
sbb
pop
aam
ficomps
rorl
lret
leave
notl
mov
push
cmp
pop
and
sub
sbb
sbb
lea
loop
imul
cmc
pop
pushfw
into
dec
or
or
insl
cmp
adc
xor
aas
mov
mov
push
lods
stos
fsubs
pop
filds
pop
cld
add
or
imul
adc
adc
aaa
xor
push
or
daa
jl
sti
inc
add
in
inc
add
js,pn
xlat
adc
cmp
fwait
hlt
xchg
push
mov
flds
les
inc
pop
fldlg2
scas
lahf
inc
or
dec
mov
pop
nop
lret
aad
test
cs
dec
mov
pushf
mov
insl
adc
pop
pop
scas
push
pop
cmp
call
outsl
mov
gs
jecxz
sbb
mov
dec
adc
cmp
fstpl
inc
push
lods
inc
pop
mov
fildl
xor
mov
and
mov
std
cmpsl
xor
loop
fwait
mov
xor
xor
xor
or
in
loopne
mov
pushf
mov
lret
lods
mov
adc
icebp
int
add
jo
mov
insl
in
mov
rcl
fsubrl
sub
sbb
adc
sub
mov
sbb
mov
iret
cltd
inc
lods
std
popa
sub
loop
xchg
inc
in
clc
lods
nop
inc
ffree
lret
and
push
insl
loopne
insl
inc
cli
test
xchg
lds
sub
adc
mov
out
lods
or
stos
pushf
fmuls
shll
pop
std
xchg
cmp
dec
test
movsl
nop
mov
mov
movsl
bound
js
fcos
movsb
lcall
mov
int3
les
push
ret
pop
mov
dec
roll
jb
jle
sbb
add
xor
sub
fnsave
jns
fisttps
loopne
push
mov
into
mov
jns
dec
sarl
mov
and
jp
sub
fimull
mov
std
sub
dec
jecxz
andl
mov
data16
xchg
stos
rcl
fbld
test
pop
in
setle
pop
xor
pop
mov
and
xor
stos
out
push
push
mov
sarl
scas
lret
loope
xlat
jae
jb
inc
pop
fwait
dec
pop
or
push
ret
clc
iret
fs
adc
lods
mov
scas
movsl
push
imul
sbb
popa
outsl
xchg
es
fimull
mov
inc
sbb
movsl
push
and
push
inc
out
fldenv
fwait
ds
xor
pop
leave
dec
mov
repnz
out
mov
pop
lea
fiadds
mov
adc
pop
pop
sti
or
pusha
xchg
aaa
add
adc
mov
jns
inc
add
cmp
rcll
cld
pop
add
fwait
pushf
shll
pop
xor
dec
jle
lahf
jl
lock
cmp
loopne
jo
cmp
shl
push
in
mov
dec
cmpsb
dec
sub
inc
stos
adc
push
arpl
test
jg
push
lahf
dec
jp
and
aad
movsl
fwait
jb
mov
or
sub
dec
or
cmp
or
dec
mov
js
or
pop
fcoms
mov
adc
push
adcl
jge
xorb
dec
pushf
or
adc
fisubrs
and
xchg
cli
mov
xchg
stos
scas
push
faddl
jbe
xchg
cmp
std
sub
popf
int
popf
push
push
mov
and
mov
pusha
fimull
and
add
mov
fs
sahf
push
cmpsl
xchg
sbb
jl
leave
pop
xor
mov
aaa
mov
sarl
cmp
rolb
adc
mov
stc
inc
in
sub
inc
add
outsl
push
popf
mov
push
or
cmc
fisubs
mov
or
jmp
aam
xchg
enter
adc
mov
lds
lods
xchg
movsb
jae
nop
les
add
sbbl
bound
adc
pop
dec
loopne
mov
cmp
repz
repnz
in
scas
sbb
adc
mov
dec
mov
sbb
ret
repz
out
les
cmp
dec
adc
pop
nop
movsl
cmp
aad
adc
inc
jmp
xchg
fcompl
inc
sbb
ds
add
push
imul
xlat
lret
stos
dec
mov
lea
jl
or
or
cmpsb
mov
pop
push
stos
pop
in
subl
mov
loope
insl
cwtl
dec
ljmp
sbbb
and
insb
in
xchg
repz
mov
call
fstp
mov
jbe
mov
mov
xor
push
jb
movsb
jmp
mov
outsl
dec
dec
into
dec
subb
pop
adc
ret
jno
dec
rcl
sub
adc
call
or
fwait
and
xor
call
lods
imul
dec
xchg
adcl
fucomp
sbb
push
adc
or
cmp
xchg
test
imul
bswap
add
xchg
icebp
sbbb
mov
xor
sbb
test
xchg
push
dec
adc
bound
dec
repnz
xor
fmull
xchg
xor
push
and
inc
adcb
push
xchg
mov
push
loopne
mov
or
in
dec
inc
out
xchg
ja
mov
pop
mov
jae
ljmp
adc
jns
movsb
shlb
ret
xchg
mov
iret
insb
jne
insb
mov
mov
xchg
insb
mov
cli
fcomps
iret
sahf
nop
or
sti
jmp
roll
movsb
xorl
cltd
jmp
jge
stc
fistpll
dec
out
mov
and
dec
sbb
fisubs
sub
pop
push
into
push
icebp
pop
lcall
aam
push
movsb
cmp
sub
pop
aas
test
ret
add
ret
fisubs
adc
shrl
push
and
scas
or
bound
mov
outsl
xchg
jge
test
mov
pop
sbb
adc
jno
ljmp
hlt
jl
mov
les
pop
mov
jp
pusha
fisubrs
xor
fldcw
fiaddl
cmc
movsb
and
aaa
shll
sbb
stos
cmp
or
push
xchg
mov
icebp
cmp
mov
xor
mulb
rorl
or
dec
in
and
jl
fs
jno
push
shlb
outsl
lret
lret
test
sahf
repz
cmpsb
shlb
inc
cmp
dec
test
push
xchg
das
lahf
loopew
and
pop
dec
ds
cmp
lret
sub
inc
stos
loope
rclb
push
pop
jb
mov
out
pop
lcall
add
je
xlat
xor
fiaddl
mov
rorl
sub
loopne
inc
fildll
adcl
push
xor
pushf
lcall
pop
sub
jb
int
addr16
and
sbb
fidivs
xchg
xchg
hlt
and
incb
mov
std
sbb
mov
add
notl
inc
ljmp
popf
mov
mov
out
stc
sti
add
rcr
outsl
das
insl
movsl
xor
dec
mov
adc
push
pushf
xor
stos
cli
movb
mov
mov
lods
js
call
add
sbb
and
adc
lods
pop
iret
cmpl
mov
sar
pop
ss
mov
or
mov
adc
add
cmp
pop
xchg
test
add
daa
cwtl
dec
fstps
push
dec
jae
nop
subb
inc
out
cs
sbb
sbb
sub
in
adc
aad
call
cmp
xlat
jo
mov
fnsave
pop
dec
add
and
sbb
mov
fmull
fcmovnu
cmp
add
lahf
insb
mov
out
cwtl
add
mov
test
lret
sarl
cmp
and
mov
mov
pop
aam
das
icebp
xchg
lock
mov
mov
lock
cld
addr16
jnp
xchg
mov
outsb
stos
decl
mov
imul
add
inc
sub
js
sarb
idivb
sarl
and
push
jg
lods
aam
call
ljmp
xchg
clc
and
fstl
push
xchg
inc
js
or
and
enter
push
imul
xchg
cmp
popa
out
jb
cmpsl
stos
jp
in
adc
mov
sbb
jmp
xchg
cli
mov
sarl
mov
shlb
insl
cltd
xor
jae
jmp
imul
push
andl
or
ljmp
cmpsl
cltd
mov
pop
xchg
les
mov
mov
repnz
in
cli
repz
mov
xlat
or
bound
push
or
mov
call
mov
inc
mov
shll
loopne
add
fidivs
test
fldcw
push
xchg
sub
out
xchg
jmp
push
les
pop
stc
add
lret
xchg
aaa
jle
das
sarb
xor
mov
inc
fimull
push
xor
out
mov
cld
ret
add
jae
loope
inc
sub
lds
iret
and
adc
or
push
add
imul
sbb
sub
aam
fisubrl
xchg
inc
push
cs
or
in
dec
arpl
ret
in
sbb
cmp
repnz
cmpsb
add
rclb
xchg
fimuls
mov
jno
int3
les
iret
or
mov
xorb
sbb
aas
jge
xchg
or
mov
movsb
mov
cmp
xchg
push
mov
and
mov
stos
push
and
sub
jl
lods
mov
cmp
fstps
enter
in
test
cmpsb
push
xchg
out
inc
enter
stc
loop
test
and
dec
lds
and
test
call
mov
sub
adc
push
and
pop
loopne
cmpl
ret
aaa
xor
repz
add
gs
sbb
sbbb
pop
out
sbb
adc
movsb
mov
jb
push
ljmp
lcall
out
dec
out
int
adc
push
mov
fsubs
bound
push
mov
lret
mov
jl
jg
add
cmp
test
push
sahf
push
je
sbb
pop
adc
shll
lret
xor
dec
jl
fsubrs
cmpsl
cmp
pop
imul
mov
mov
out
push
inc
dec
xor
aaa
push
cmc
insb
aam
into
clc
add
or
adc
cli
stc
negb
dec
nop
xchg
mov
aam
xchg
jmp
add
jb
dec
sub
sbb
cmp
sti
loopne
pop
adc
lret
push
movsl
nop
mov
dec
in
test
dec
mov
xchg
xlat
iret
imul
nop
lgs
inc
call
fcomp
xchg
adc
dec
rorb
aad
sbb
cs
imul
andb
aad
push
call
movsb
jnp
outsb
mov
jecxz
xlat
mov
cmp
jb
mov
aas
mov
stos
or
mov
loope
popf
repnz
fisttpl
ficompl
adcl
and
mov
lahf
xchg
testb
pop
rorl
sti
cmc
mov
jmp
mov
cmpsb
xor
adc
mov
push
mov
mov
lret
adc
mov
xchg
loopne
icebp
push
adc
mov
dec
les
pop
es
pop
dec
ret
in
aam
mov
stos
rorb
jecxz
mov
sub
sub
mov
aas
test
popa
jb
jecxz
ret
stos
addr16
pushl
mov
push
cltd
ficoms
and
test
xchg
data16
jp
aas
or
jg
push
out
aad
out
imul
shll
aas
enter
push
test
aaa
decl
pusha
inc
xchg
add
xor
lcall
jno
mov
adcl
add
andb
mov
mov
mov
ja
cmp
dec
xor
mov
cmp
sub
jle
jns,pt
sbb
in
out
jge
mov
xor
jle
dec
push
lret
mov
jle
mov
test
dec
jp
repz
addr16
je
mov
push
push
out
popf
int3
adcl
xchg
mov
daa
jmp
and
jecxz
cmc
sub
in
outsb
cwtl
jle
or
jnp
in
push
insb
cmp
and
pop
stos
inc
ja
push
outsl
add
mov
and
push
jae
jg
inc
cmp
outsb
pop
lods
xchg
lret
iret
add
into
push
mov
scas
into
outsl
aad
inc
cmp
xchg
sub
ds
xchg
xorb
test
lock
sbb
cmp
and
mov
xlat
repnz
push
mov
shlb
hlt
fsubrp
fsubr
pop
cmpsb
jae
int3
scas
jmp
or
aaa
aas
mov
insl
jge
arpl
jbe
loop
push
xor
lds
xchg
and
jb
jo
jmp
xor
add
xchg
jl
leave
mov
cmp
push
jl
insl
nop
out
in
insb
stc
into
cmpsb
fdivrs
inc
push
dec
dec
push
les
push
push
clc
add
lahf
movsl
mov
movsl
mov
push
cmp
imul
std
sahf
jecxz
pop
push
mov
sti
pop
mov
dec
dec
adc
cli
push
pushf
xor
shll
mov
sbb
fsubrl
rcr
stos
jno
and
outsb
pop
es
pop
fcoml
scas
les
push
les
int
cmpsb
icebp
push
xchg
fcoml
jno
xor
xchg
cmpsb
mov
aaa
cli
jg
outsl
mov
test
das
pop
sahf
test
or
aas
push
lret
ja
push
and
fsubrs
and
mov
lods
mov
fs
lock
imul
jne
arpl
cmc
xor
leave
into
fildl
or
adc
push
popa
sbb
adc
ds
sub
pop
out
push
fwait
mov
push
lods
inc
ret
sbb
nop
adc
mov
imul
jnp
or
inc
dec
gs
sahf
mov
lret
sbb
in
out
fs
mov
cli
loope
xlat
push
rclb
out
mov
or
or
adc
adc
cmp
fxch
and
inc
push
sbb
dec
xor
aad
mov
cs
jmp
jns
pushf
pusha
sub
pop
jnp
adc
push
jle
call
or
sbb
aam
sbb
std
dec
out
maxps
jge
aas
pop
add
inc
mov
cmpsl
pop
pop
inc
add
fstpt
cld
xor
out
xchg
loopne
mov
test
cwtl
jns
out
inc
loopne
testb
rcl
les
mov
jle
adc
test
shll
insl
xchg
lret
xorb
icebp
sub
fidivrs
insb
hlt
dec
mov
sub
ret
push
mov
aam
scas
pop
sub
ret
mov
mov
or
mov
mov
stos
xor
mov
ljmp
out
clc
cwtl
pop
sub
pusha
push
shll
and
lock
ss
imul
jmp
sbb
xchg
jmp
out
cmp
xchg
add
or
sbb
jo
test
or
dec
inc
in
xchg
in
int3
xor
notl
in
mov
out
jmp
dec
jbe
movsl
jno
add
leave
dec
out
fwait
jmp
bound
dec
lea
outsb
pop
or
das
mov
cmp
adc
mov
cmpsl
jns
lret
inc
xchg
cmp
pop
shlb
pop
popf
push
dec
dec
fimull
push
call
dec
addr16
ljmp
mov
sbb
xchg
jl
or
inc
and
xchg
testb
pusha
nop
mov
inc
jle
aad
jnp
cli
mov
and
pop
stos
mov
fistl
pushf
add
dec
dec
cmp
in
loope
jae
popa
fiadds
sub
jmp
ret
inc
iret
loopne
sti
adc
into
scas
xor
imul
sbb
aas
mov
aam
mov
push
mov
jbe
arpl
hlt
pop
lods
call
repnz
xor
mov
lret
stc
in
jle
stos
ficoms
cmp
add
mov
sbb
lods
jge,pt
push
pop
jbe
jnp
push
jg
das
movsb
int3
and
cmp
pusha
pop
and
scas
je
jo
cs
xor
out
sub
jne
jl
mov
out
xor
daa
insb
mov
mov
push
shrb
pop
shlb
out
jp
mov
mov
les
cmc
and
or
mov
pop
ds
fnstsw
arpl
loopne
ljmp
into
pop
pop
push
inc
js
stc
and
mov
sti
xor
add
add
sbb
movsl
sarb
stos
push
outsb
push
xchg
sub
dec
faddl
cmp
xor
pop
aam
sub
inc
mov
push
xchg
inc
xor
sbb
mov
xchg
mov
and
lret
xorb
lds
lcall
mov
pop
sar
jg
push
pop
div
int
cmp
in
jae
popa
jbe
fisubs
adc
xor
stc
and
inc
loop
jno
outsl
int3
hlt
or
mov
adc
or
adc
xor
lahf
pop
cmc
test
dec
and
lods
sub
loop
add
dec
data16
cmp
imul
xchg
or
sub
mov
gs
sbb
sti
scas
mov
mov
insl
sub
dec
lcall
fidivrs
xchg
into
loop
repz
pushf
les
jns
fistl
nop
subb
insb
popa
aad
mov
jecxz,pn
jo
stos
dec
fstpl
xchg
or
inc
cs
rcrl
fsubrp
inc
out
add
je
hlt
jecxz
push
jle
add
dec
gs
xor
jns
aas
clc
mov
movsb
inc
ret
pop
jecxz
push
fldt
dec
nop
add
addl
cmp
xor
insb
std
ljmp
shll
jno
and
fcmovnu
mov
adc
mov
lock
adc
xlat
sbb
icebp
and
call
iret
loope
int3
pop
mov
dec
mov
hlt
mov
sbb
jb
aam
imul
sub
or
xor
inc
pop
aam
cmp
cmp
xor
adc
je
ljmp
mov
sarl
add
outsb
pop
mov
pop
sbb
mov
cmpsb
cmovs
adc
or
out
fwait
cmp
stos
inc
or
pop
push
sbbl
cmp
sahf
test
outsb
scas
dec
lods
dec
mov
mov
ss
enter
stos
mov
cmp
push
insb
adc
or
inc
dec
out
dec
sbbb
sub
int3
pop
mov
jg
xchg
insl
in
mov
cltd
fsubr
cmp
jne
pop
mov
mov
sub
push
loopne
jp
movsl
push
addr16
mov
or
mov
out
or
xorl
xchg
inc
mov
jmp
leave
mov
fistpll
cs
dec
mov
call
int3
adc
movsl
and
mov
push
in
mov
popf
jno
movsl
push
mov
or
xchg
inc
dec
mov
pop
sbb
xor
lock
iret
aas
shlb
aas
xlat
xor
and
mov
xchg
fldcw
adc
xchg
std
push
es
cmp
hlt
arpl
imul
jb
leave
mov
dec
cld
mov
out
jp
add
call
ror
test
xor
push
daa
or
push
test
xchg
jmp
shlb
mov
movsb
push
out
cmp
fisttpll
scas
push
sub
jo
test
push
leave
in
and
ret
mov
dec
jno
xchg
sti
cmp
and
imul
mov
insl
in
cmp
int3
inc
jne
pop
push
pop
cmp
test
sahf
dec
jne
jecxz
inc
and
fwait
pop
movsl
mov
sbb
fwait
sub
jb
loope
data16
jecxz
fwait
pop
popf
adc
js
daa
pop
pop
fwait
sbbb
pusha
jmp
add
shll
adcb
popa
rclb
jb
outsb
int
sub
xchg
and
jmp
cmc
push
std
lcall
lret
sub
je
push
xchg
push
cwtl
and
popa
or
push
fdiv
mov
inc
xchg
pop
cmp
dec
lds
sahf
cmp
inc
lcall
pop
adc
stc
nop
fdiv
mov
xor
cmp
and
mov
stc
xlat
outsl
stos
aam
xor
or
push
into
mov
int
cmp
jg
xor
test
das
out
scas
scas
mov
inc
fildll
pop
mov
mov
inc
lret
imul
dec
push
clc
pop
lds
and
sti
pop
mov
mov
sub
into
out
mov
xchg
and
repnz
xchg
cmp
les
lock
aaa
push
inc
jp
lcall
jmp
push
cs
or
jmp
in
pushf
mov
into
adc
or
push
aaa
sbb
mov
inc
push
ja
fs
imull
dec
fsubl
ljmp
jno
inc
hlt
xor
inc
dec
add
fistpl
fisubrl
sbb
lret
add
mov
or
xchg
or
sbb
jne
sbb
lcall
inc
pop
lcall
xchg
out
mov
push
jnp
adc
push
icebp
xlat
loope
mov
push
xchg
dec
mov
jmp
mov
lahf
cmp
aas
xchg
cmp
adc
rolb
cmp
pop
repz
aas
sub
inc
scas
loop
loop
or
jmp
mov
ljmp
lret
clc
push
mov
arpl
inc
pusha
outsb
test
jp
cltd
movsb
cmpsl
xor
lahf
cmc
insb
xcrypt-cfb
cmpsl
loope
push
orl
mov
out
pop
shrl
mov
jne
xchg
addr16
dec
adc
mov
subl
lcall
adc
repnz
bswap
mov
inc
lods
or
sub
inc
loop
mov
ja
inc
pop
pop
jle
clc
mov
ret
xchg
sub
in
sbb
jns
pop
ja
imul
xor
inc
add
adc
mov
mov
sub
or
addr16
or
pop
out
insb
sub
adc
jo
xor
xchg
leave
andl
jle
jecxz
dec
jle
dec
add
popa
nop
insb
jnp
mov
stos
cltd
pop
and
pop
cmpl
arpl
push
jae
fidivs
icebp
mov
pop
jge
pop
push
mov
js
sahf
inc
pop
adc
xchg
push
xchg
scas
testl
lock
cmpsl
lcall
scas
pop
inc
adc
xchg
or
stc
out
arpl
shl
repz
leave
pop
xor
sahf
xchg
in
mov
add
lds
fistps
adc
jo
or
call
pop
test
jl
aam
dec
mov
mov
or
sbb
mov
cmp
xchg
scas
xor
repz
out
stos
xor
lods
xchg
sbb
xchg
jno,pn
mov
dec
daa
push
cmp
mov
ret
in
and
push
cmpsb
popa
fucomip
inc
add
push
push
and
push
jno
scas
lahf
add
test
movsl
je,pt
and
shll
loope
and
ljmp
jmp
pop
inc
mov
add
cmc
push
inc
out
subb
lods
shlb
adc
clc
sahf
subl
cli
sub
add
fcoml
lahf
cmp
sar
push
sub
jl
int
mov
push
lcall
mov
nop
aam
xchg
jo
mov
sahf
or
subb
test
jle
sbb
daa
mov
faddp
sub
mov
neg
pop
les
scas
stc
cs
adc
sbb
stc
mov
int
mov
push
outsl
mov
das
cmc
mov
inc
into
test
cmp
dec
daa
xor
ret
pop
out
rcrb
sti
jecxz
data16
inc
notl
pushf
in
imul
jae
push
mov
gs
imul
ret
or
pop
in
xor
add
sub
and
lret
fimull
sbb
push
or
les
push
fldcw
int3
inc
lea
nop
jnp
aad
fnstcw
jmp
inc
add
pop
es
xchg
cmpb
xor
lea
mov
jp
pushf
jecxz
loopne
je
jns
dec
push
sub
jb
or
ss
pavgb
pop
sub
rcr
lret
dec
xchg
mov
stc
mov
pop
jecxz
stos
fsubrs
notb
les
sbb
aaa
in
das
and
lock
pop
mov
popf
push
cmp
iret
dec
paddb
icebp
mov
scas
sbb
mov
imul
insl
adc
mov
lret
or
lods
rcr
inc
add
adc
jnp
ficompl
add
mov
cwtl
mov
add
repnz
xchg
sti
cmpsl
and
dec
ret
aad
mov
movsl
int
mov
std
xchg
dec
movl
push
out
push
pop
and
out
popa
cs
and
sub
adc
push
test
cmc
push
dec
jp
cmp
movsl
dec
mov
or
in
xor
xor
or
push
incb
push
mov
add
or
dec
outsb
inc
jns
cmpsl
dec
mov
stos
mov
pop
cmp
add
xchg
js
jno
stos
scas
or
push
push
cld
cmp
out
stc
imul
jnp
jne
push
mov
divb
nop
mov
ret
add
fidivrs
daa
jmp
ficompl
pop
xor
out
inc
jae
jmp
outsl
scas
ret
xchg
pusha
popa
jg
in
mov
jo
fs
jecxz
mov
loop
or
dec
push
imul
js
or
ss
fs
add
repz
push
fs
adc
popa
and
imul
xor
sbb
xchg
jg
inc
xchg
cld
xor
notb
push
or
cld
dec
push
arpl
sti
insb
leave
mov
dec
repnz
adc
rcrb
fidivrs
ret
and
int3
pop
dec
mov
or
neg
sbb
sbb
sub
call
insb
leave
cwtl
movsb
insl
push
cmp
lds
scas
adc
xor
insl
repnz
push
stc
dec
xchg
jno
add
cmp
cmp
imul
or
lock
xchg
add
lock
and
test
mov
inc
pop
pop
lahf
and
frstor
xchg
cmc
outsl
cmp
subl
loope,pn
or
push
xchg
sbb
sbb
loopne
out
repz
jmp
cs
xor
and
add
imul
loope
cmpb
jns
dec
mov
adc
xchg
and
sbb
push
adc
lcall
scas
sub
shll
push
popf
xor
and
adc
mov
sub
addb
mov
mov
int
ss
aaa
rol
jge
fbld
insb
fcoms
int
cmp
cmpsl
cmp
mov
cli
aam
inc
add
loop
out
outsl
imul
addr16
push
cmp
in
in
xor
aas
cli
clc
cmp
mov
mov
and
add
test
adc
dec
les
mov
adc
test
loopne
rolb
aas
in
sti
mov
push
mov
aas
out
pop
sub
mov
xlat
or
cmp
dec
xor
push
dec
add
movsb
fnstenv
mov
or
pop
aad
add
or
ret
popa
loop
or
aad
xor
or
push
add
call
cmpsl
xchg
jge
lret
jecxz
or
je
adc
dec
lret
jb
mov
gs
sub
outsl
pop
int3
sarb
stc
jbe
dec
push
or
jge
mov
mov
xor
cwtl
gs
std
xor
push
gs
adc
ss
pop
mov
lret
das
add
cwtl
lock
mov
pop
aam
sbb
lret
add
cld
imul
lahf
mov
push
shlb
insl
cld
lods
jecxz
cmpsb
stc
test
aad
sbb
add
xlat
pop
xor
sbb
push
xor
mov
push
test
stos
ljmp
test
test
inc
loopne
push
fstl
dec
rcrw
lds
pcmpgtw
ljmp
pushf
test
les
lahf
pop
pop
mov
rcrl
jae
xchg
push
jnp
loope
sbb
mov
adc
or
sub
lcall
adc
push
adc
fwait
movsl
xor
lods
inc
popl
addr16
pop
jne
ja
lods
inc
pop
hlt
or
mov
dec
xor
xchg
ss
lcall
fdivrl
fcoms
mov
or
jne
add
dec
fnstcw
jno
cli
movsl
dec
mov
fistpl
or
xor
or
push
js
data16
incl
test
dec
jmp
inc
jns
fistps
dec
mov
in
xchg
jle
xchg
mov
adc
ja
push
sub
and
xor
stos
jg
mov
mov
out
cmp
stc
adc
jae
nop
jl
outsl
adc
shr
ret
pop
iret
pop
push
leave
adc
cld
push
push
adc
xchg
scas
mov
lcall
ficoms
fisubl
in
push
pop
pop
push
inc
jmp
arpl
mov
repnz
ret
movsb
lock
shlb
adc
lcall
pop
xchg
cli
lods
int3
inc
mov
mov
jbe
loop
cli
sete
ret
adc
jge
enter
push
xchg
movsb
clc
sub
cmp
cs
and
es
inc
xor
jb
xor
jl
shrl
pushl
cmp
push
paddsw
sbb
or
pop
rclb
mov
jl
cli
push
pop
mov
lahf
inc
and
ret
add
movsl
shll
push
cmp
jo
loope
psubsw
xchg
pop
pop
pop
fs
and
scas
pop
adc
leave
inc
insl
xor
daa
and
sbb
adc
shlb
jmp
adc
testb
in
push
rclb
sahf
sbb
rorb
aad
xor
popa
push
mov
rorl
jmp
mov
out
jg
fldenv
sbbb
inc
sahf
es
jnp
and
rcrl
lret
fdivp
leave
sbb
cmp
ljmp
fs
mov
loop
pop
push
outsl
dec
mov
sub
xchg
into
dec
mov
push
cmp
arpl
cli
sub
out
jo
mov
test
data16
sub
push
movsl
adc
dec
ljmp
addr16
adc
lret
or
loopne
adc
gs
jae
cld
repnz
push
icebp
in
push
shrl
inc
sub
js
xlat
dec
sub
shrl
push
xchg
movsl
repz
les
and
dec
or
cmp
aaa
nop
mov
jmp
inc
cmp
sub
pop
cli
mov
iret
stos
fucomi
cs
mov
pop
and
pop
jl
je
jmp
jb
outsb
ss
je
or
inc
jb
inc
fdivrp
sub
outsl
test
fldt
scas
clc
dec
cmp
push
and
lock
mov
lea
and
and
xchg
negb
lret
mov
mov
pop
mov
push
lock
out
arpl
lret
lods
jge
cld
xchg
jno
icebp
pop
repnz
addr16
dec
cmpsb
xor
es
scas
ret
jmp
pop
or
clc
push
sbb
xor
pop
push
mov
and
dec
fsubr
mov
rcrl
cld
add
jne
and
mov
mov
push
sub
cmp
push
fisubl
dec
mov
fadds
sbb
notb
daa
icebp
ds
add
dec
pop
ret
sarl
add
xchg
sub
insl
int3
outsl
dec
dec
rorl
into
sbb
bound
lea
arpl
sbb
cmp
jmp
pusha
arpl
fwait
aam
loope
xchg
or
test
dec
in
ja
sub
pop
scas
out
aas
mov
mov
fwait
xchg
push
test
jns
bound
mov
out
mov
sub
push
stos
pop
jne
adc
mov
xchg
loop
aas
lods
sbb
inc
jp
addr16
push
or
stos
add
jmp
pop
push
xchg
jae
stc
jmp
adc
adc
pusha
xchg
and
in
mov
stc
jnp
mov
or
loop
mov
jmp
stos
inc
popf
or
add
inc
jp
pop
pop
testl
pop
adc
mov
ljmp
pusha
popf
sbb
js
xchg
xor
aas
jg
push
lcall
lret
add
arpl
shll
leave
jl
sub
mov
push
add
faddp
outsb
add
rclb
lods
jmp
jno
mov
mov
mov
mov
inc
or
cmpl
and
mov
scas
iret
iret
mov
xor
push
adc
dec
movsl
ret
lahf
jno
dec
cmp
out
daa
addr16
mov
mov
push
cmpsb
ljmp
push
xchg
jae
sbb
ljmp
and
movsl
fidivrl
cmp
and
sub
fbstp
loope
cmp
pop
cltd
xor
js
test
pop
aaa
inc
inc
mov
xor
mov
and
testb
xor
adc
pop
fiaddl
fcoml
shll
pop
dec
fnstenv
int
ret
mov
movsb
mov
push
mov
mov
fld1
jg
popa
je
mov
fldt
in
fldenv
mov
dec
shl
ror
lds
cmp
cmp
sub
les
xchg
stc
mov
inc
loop
ret
outsl
daa
jl
xor
sbb
or
lods
aas
xor
cmp
inc
push
sbb
mov
mov
sub
pop
adc
mov
insl
adc
or
pop
push
imul
cld
push
mov
sti
sbb
jmp
insl
mov
sub
mov
sbb
popf
es
out
mov
xchg
adc
inc
mov
dec
imul
nop
pop
test
sub
jmp
in
negl
out
pop
lods
pop
out
dec
flds
test
js
movb
enter
pop
dec
mov
insl
popf
aas
adc
pusha
pop
sbb
gs
xchg
fistl
xor
cli
cmpl
mov
cwtl
fistpl
or
fstpl
psrlq
inc
fwait
mov
lock
inc
das
mov
inc
xor
inc
jge
sbb
loope
mov
xchg
adc
lret
inc
test
mov
inc
out
lods
xor
ret
js
mov
imul
xchg
jno
push
cltd
pop
pop
outsl
iret
add
pop
inc
fnstsw
movsl
mov
lods
sub
cmp
mov
stc
xchg
mov
pop
mov
dec
or
push
out
ret
subl
bound
jae
jmp
mov
lahf
push
out
filds
out
mov
stos
repnz
pop
pop
insl
push
fcmovnbe
push
cld
sub
mov
adc
dec
scas
lods
inc
xchg
popa
xor
or
or
and
popa
add
inc
add
fwait
sub
fwait
add
push
or
test
push
dec
aas
or
push
jae
divl
xchg
xchg
gs
sbb
bound
xor
lcall
and
mov
inc
js
push
std
mov
shl
jp
mov
addr16
outsb
je
xorb
out
cmpb
in
adc
or
aad
call
ficoml
pmuludq
decl
jle
test
jnp
pusha
fisubrl
push
stc
sbb
stos
gs
push
sub
fistpll
xor
lock
jg
jno
push
inc
roll
pop
cs
jae
sbb
xchg
push
push
mov
xor
into
ljmp
mov
fiaddl
sub
push
push
sub
or
aaa
mull
add
leave
repz
out
repnz
shrb
lds
mov
pop
out
repnz
sbb
incb
inc
je
or
aaa
js
mov
jge
cli
jns
call
lock
push
movsl
fidivrl
pop
out
std
and
ret
sub
xor
cmp
dec
aam
or
jno
mov
cmp
out
andw
jge
in
mov
imul
push
push
pop
inc
test
mov
xor
pushf
movsl
loope
xor
add
cmp
cmp
dec
pop
loope
mov
fadds
jae
pop
or
xor
pop
add
lds
test
xor
or
fcoml
loopne
mov
push
aad
inc
ret
inc
sub
cli
pop
into
sub
sub
push
ror
loop
jmp
cmpsb
xor
fcmove
xchg
mov
xchg
add
jno
xchg
mov
call
adc
lods
test
leave
jle
sbb
mov
mull
rorl
add
inc
sbb
inc
pop
in
dec
mov
ss
pop
adc
mov
stc
push
dec
loop
cs
outsl
push
jo
xor
add
into
adc
cmp
leave
sub
cmc
mulb
out
xor
mov
cmp
lods
xchg
xor
test
adc
dec
bound
mov
xchg
pop
out
push
loopne
in
shll
mov
test
jo
enter
fdivl
dec
sub
insl
mov
mov
cmp
fwait
sbb
pusha
ret
xor
push
inc
mov
dec
rolb
in
dec
dec
lret
nop
xor
sub
xor
pop
or
leave
sbb
pusha
addr16
mov
and
push
fdivrl
add
je
shlb
dec
das
xchg
and
aas
mov
sbb
push
xchg
inc
in
cmp
mov
pop
fildl
sub
packuswb
mov
dec
mov
iret
stc
cwtl
xchg
pop
dec
std
aam
into
mulb
stos
pop
roll
and
pop
xchg
mov
andl
sahf
std
out
add
mov
je
mov
sub
lret
mov
movsb
cld
ljmp
mov
gs
insl
mov
enter
fs
pop
jp
aam
sbbl
jge
shlb
jae
pop
mov
sub
gs
mov
push
in
push
popa
sub
ficoml
xor
inc
repz
mov
mov
insl
mov
enter
xor
push
lret
xchg
mov
cmc
out
in
addl
loope
cmc
pop
sbb
shrl
mov
insl
xor
repnz
repz
or
mov
clc
mov
or
data16
jns
jle
bound
mov
movsl
mov
or
sbb
inc
aad
ret
loope
ja
lods
mov
mov
adc
or
push
lock
pop
bound
mov
jne
pop
mov
sub
mov
addb
mov
std
mov
pusha
mov
cmp
push
and
jnp
mov
out
sub
or
in
or
dec
jmp
mov
test
pusha
int
and
push
inc
inc
jle
and
and
mov
xchg
xchg
xchg
and
lds
fdivrs
xchg
push
addr16
mov
pop
adcb
cmp
or
or
mov
hlt
iret
jns
notb
mov
add
mov
daa
push
xchg
jecxz
xchg
fidivrl
mov
push
nop
push
loop
or
arpl
popf
ds
push
push
jl
cmp
rclb
rorb
jno
push
ljmp
pop
icebp
adc
dec
or
bound
aaa
jb
sbb
jae
jge
call
pop
push
test
xor
inc
outsl
and
mov
jo
cs
xor
sbb
jb
inc
scas
add
cmpb
testb
gs
ror
cltd
rcr
in
movsb
mov
cmpsb
lock
mov
push
sbb
fwait
test
nop
repz
xchg
sbb
inc
and
inc
cmp
aad
int
push
loope
std
add
pop
pop
pop
cwtl
js
pusha
ficomps
mov
adc
xor
enter
mov
sbb
xchg
mov
push
mov
cmp
pop
popa
test
fsubr
cmp
push
cltd
stos
or
inc
pause
pop
dec
add
mov
inc
sbb
test
xorb
pop
mov
pop
mov
sub
js
xor
sbb
sbb
or
lret
inc
testl
mov
es
popf
adc
outsb
jnp
pushf
inc
adc
and
int3
loop
add
outsl
in
in
cmp
mov
imul
into
rep
xlat
or
add
xor
fsubs
les
insl
mov
testb
jle
mov
or
add
fisttps
adc
dec
ljmp
fcomps
loopne
jp
or
dec
stc
into
sti
ja
xor
inc
call
adc
xchg
jne
xlat
push
add
sbb
and
hlt
repz
inc
xchg
loop
flds
dec
or
sub
nop
push
adcl
cwtl
push
adc
xor
fs
mov
iret
lcall
ret
lahf
mov
lahf
mov
repnz
fs
je
mov
bound
or
push
sbb
xchg
arpl
pop
pop
loope
push
rolb
dec
xor
mov
mov
cwtl
push
add
pusha
mulb
dec
rorl
push
and
mov
mov
push
or
das
jge
or
xor
mov
mov
mov
adc
inc
inc
mov
fs
sub
cwtl
jo
es
data16
push
sbb
fldl
xchg
sar
cmpb
lods
in
or
insb
jmp
mov
add
pop
lods
add
popa
inc
movsb
aam
into
sti
repz
ss
imul
cwtl
popa
repz
je
lret
or
js
addr16
out
xor
add
loopne
psraw
mov
decb
fldcw
ret
inc
push
testb
and
push
xchg
decl
xchg
in
xor
mov
or
sbb
sbb
add
dec
add
loope
scas
fwait
popa
outsl
lods
or
popa
mov
dec
and
mov
pop
loopne
and
inc
add
mov
in
and
popa
mov
std
pop
push
out
push
and
cli
jne
mov
push
mov
inc
lods
mov
xchg
mov
les
jbe
jnp
repnz
enter
filds
aam
push
jmp
mov
pusha
push
movsb
sbb
mov
insb
std
mov
and
xchg
ret
stos
dec
sbb
mov
lahf
cs
popf
orb
add
incb
inc
pop
pushf
and
cmp
fsubs
push
xor
mov
imul
xchg
cmp
push
fisubrl
inc
or
nop
push
divl
inc
or
frstor
jnp
hlt
mov
js
loope
inc
repnz
mov
shlb
fisubrs
sti
test
repnz
ja
jb
std
or
and
negb
jo
dec
mov
es
divl
and
pop
cmp
cmp
scas
insb
mov
jo
adc
xor
sub
dec
mov
xchg
jl
or
cmp
das
lret
daa
fs
into
enter
in
mov
or
pop
ficoml
out
test
arpl
iret
lahf
mov
stc
je
out
xor
inc
rorb
icebp
fsubrl
movsb
mov
push
lcall
push
fwait
jecxz
lods
inc
mov
xor
fildl
sbb
call
rclb
fcoml
outsb
adcb
fcompl
dec
rcrb
int3
pop
cmc
sub
and
lods
lret
popa
and
in
mov
nop
adc
add
adc
xor
test
cmpsb
cmc
sbb
dec
mov
repz
lret
inc
test
movsb
mov
mulb
adc
stos
add
mov
loop
push
shrl
arpl
cmc
xor
adc
out
jns
cmp
jg
xor
push
add
mov
inc
lods
xor
data16
push
add
fwait
xchg
imul
lea
inc
leave
loopne
sbb
out
loopne
sti
es
cmpsl
in
mov
shll
add
cld
fdivrl
mov
int
xchg
out
lods
repz
pop
les
movsl
mov
dec
mov
nop
jmp
lods
mov
sti
dec
arpl
and
pushf
arpl
adc
stc
clc
pop
adc
lret
jl
call
stos
testl
pop
in
je
testl
aas
lock
adc
inc
cli
push
and
xchg
in
orl
fisttpll
aad
je
or
mov
mulb
arpl
and
ja
mov
test
repz
lock
fidivs
out
shll
imul
pop
icebp
mov
cltd
fisubl
xchg
xchg
insl
jg
jle
xor
inc
or
int3
cld
sub
aam
inc
ror
ret
int3
add
and
xlat
mov
mov
insl
pop
jl
pop
int
ljmp
repz
stos
das
daa
fnstsw
int3
pop
mov
cmp
enter
cmp
and
xchg
cmovo
push
adcb
inc
inc
xchg
out
mov
jmp
mov
clc
push
rcrl
stos
xchg
sbb
cmp
xchg
fdivs
pop
push
dec
in
pop
xchg
ss
xor
add
sbb
imul
jnp
add
ffree
push
test
fwait
nop
push
popf
inc
add
dec
sbb
int
fwait
push
add
xchg
jl
xchg
push
popa
add
in
sbb
mov
andl
mov
xor
pusha
mov
mull
jne
inc
sub
mov
xchg
mov
push
scas
dec
jp
vprotq
sub
cmc
aam
sub
rclb
sbb
mov
ds
add
in
xor
lock
jnp
jmp
or
test
push
in
idivl
test
inc
shlb
inc
xchg
inc
cmpsb
dec
popf
pop
rorl
ret
jnp
aaa
inc
pop
adc
mov
scas
lods
pop
cmp
and
mov
sbb
ficompl
cs
inc
mov
out
push
pop
je
inc
push
xor
sbb
add
leave
pop
outsl
mov
mov
mov
mov
mov
jl
pop
int3
fnstsw
faddl
or
std
or
inc
jmp
push
sti
jge
jno
jbe
inc
rclb
arpl
cmp
aas
repnz
dec
mov
jo
pop
add
loope
pop
dec
and
mov
outsb
movsb
jno
stos
clc
cmp
scas
mov
arpl
enter
in
jb
lcall
add
push
mov
jmp
push
ss
lahf
fucomi
mulb
lret
movsl
test
imul
sub
lea
arpl
push
sbb
cmpsl
js
imul
cwtl
mov
add
adc
sbb
xor
subb
inc
shrb
scas
adc
in
pop
sub
mov
mov
dec
aaa
adc
xchg
add
int
push
jnp
scas
inc
jecxz
pop
fsts
mov
mov
mov
stos
scas
jg
test
andb
mov
test
aaa
mov
addr16
lret
and
fdivrs
out
cmp
cmp
xchg
jp
fs
lret
or
loop
dec
adc
xor
mov
cmc
stc
jl
into
mov
pop
sub
sbb
cli
sub
mov
es
dec
or
data16
sub
add
xchg
iret
adc
inc
pop
imul
jbe
pop
inc
popf
cmp
ror
dec
gs
ss
adc
in
sbb
jmp
sub
cmp
test
cmp
mov
in
test
ret
stos
adc
fldz
and
out
fcoms
lcall
jmp
xor
sahf
adc
jbe
dec
mov
outsl
lea
ljmp
push
cmp
js
xchg
and
jb
jae
aas
pop
and
mov
adc
and
fistl
inc
out
dec
shll
adc
mov
cwtl
mov
mov
jmp
jae
and
test
frstor
mov
das
cmp
xor
lret
adc
mov
adc
lret
fsubs
cld
imul
icebp
xchg
jae
cmpsl
bound
dec
into
ljmp
sub
es
xchg
paddq
pop
inc
rcrb
sbb
and
cli
enter
das
sbb
mov
xchg
xchg
mov
dec
clc
out
fucom
inc
or
popa
insl
mov
mov
test
fnstcw
add
into
repz
pop
repz
xchg
mov
out
push
push
push
pop
sbb
rcrb
xchg
xchg
add
dec
add
mov
fldcw
add
add
call
pop
add
ss
push
daa
int
fwait
mov
imul
ja
dec
loopne
push
sbb
out
mov
addb
add
jns
in
int
add
pushf
out
adc
xchg
jne
dec
fisttpl
popa
xchg
push
jne
mov
ljmp
ret
or
sub
js
out
js
and
push
jle
call
jle
sub
sahf
xchg
cli
in
mov
jle
inc
adc
lahf
adc
mov
push
fwait
sub
and
add
shlb
mov
jae
iret
mov
mov
rcrb
sbb
ret
loope
xchg
in
adc
mov
inc
scas
test
sbb
fs
fcmovbe
jmp
inc
or
push
lds
inc
adc
shlb
sub
dec
das
xchg
leave
iret
mov
cmpsl
mov
flds
jle
les
fsubrp
dec
xor
int3
enter
mov
mov
aaa
je
dec
sbb
or
jbe
fs
push
xchg
xchg
jnp
cmp
repz
in
scas
sub
xorl
nop
stc
dec
jl
cmpsl
and
out
mov
xor
push
bound
push
cmpsb
jns
ljmp
hlt
cmp
inc
push
aam
or
push
lahf
cli
mov
movsl
std
lret
mov
cmpl
push
dec
iret
loope
cs
push
push
fcoml
aam
jecxz
test
jge
cli
sqrtps
pop
pop
xchg
xor
mov
clc
test
addb
into
mov
rorb
lahf
adc
dec
rcrl
out
fsubr
xchg
dec
push
sahf
cli
mov
pop
lret
sub
push
lea
mov
mov
mov
ficompl
mov
or
cmpsb
inc
xchg
addb
test
daa
lds
xlat
int
mov
lret
test
testl
xchg
cmp
jl
nop
adc
in
arpl
repz
inc
ja
loop
mov
mov
cmc
shlb
or
cld
sbb
xchg
cli
pop
sbb
scas
mov
pushf
pusha
lods
xor
pop
mov
add
rcrl
sarb
sbb
in
or
push
xchg
jbe
stc
mov
imul
xor
lods
sti
test
lret
in
mov
and
ret
jl
cmp
sub
sbb
insb
mov
cmpsl
les
inc
mov
dec
inc
cmp
lahf
fiaddl
roll
pushf
mov
mov
rol
leave
jge
call
js
mov
xchg
pop
out
jns
test
mov
inc
nop
jb
jbe
aas
mov
add
pop
inc
scas
cli
fildl
ret
mov
mov
and
mov
cwtl
xorb
jo
push
imulb
test
cmp
push
and
out
mov
iret
sub
lock
fiadds
xchg
arpl
inc
jl
cld
xchg
rolb
icebp
data16
lret
cmpsl
popa
imul
insl
dec
fisttpll
cmp
imul
ret
shlb
dec
pop
or
push
and
sbb
js
lods
inc
fnstcw
ljmp
push
fisttpll
imul
mov
test
mov
pop
paddd
add
jns
jle
popf
loopne
fstpl
leave
jl
sbb
adc
xchg
fwait
xor
dec
mov
loopne
mov
andl
mov
push
push
outsl
test
add
push
rolb
lret
fwait
out
cmpsb
mov
inc
xor
cmovp
dec
cmpsl
ja
jecxz
pop
adc
cmp
push
mov
stc
das
xchg
lock
in
xor
jns
stos
sahf
bound
mov
jne
mov
dec
push
adc
mov
cmp
mov
mov
push
mov
or
subl
dec
pop
addl
sbb
cld
jo
pop
mov
fcomip
or
in
adc
jle
mov
fcompl
inc
insb
ds
and
stos
movsb
cld
xor
arpl
lret
mov
mul
pop
push
dec
and
inc
mov
cld
ret
lahf
iret
cmc
mov
or
sub
scas
jb
cmp
sbb
jbe
xchg
aas
add
fiaddl
mov
push
sub
es
adc
test
hlt
xchg
cmp
repnz
mov
hlt
aad
lds
inc
ficoms
inc
mov
add
inc
stos
or
shlb
xor
dec
jge
mov
jbe
stc
nop
push
in
lea
add
cltd
mov
add
das
pop
xor
cmpsl
jl
mov
jno
pop
xchg
cmp
daa
popa
test
test
dec
in
inc
in
jmp
inc
or
adcb
test
fmul
icebp
lahf
sbb
int
add
movsl
add
sbb
scas
jbe
cmp
movsl
shrl
fmul
loope
xor
push
inc
ficoml
adc
fdivrs
shll
dec
call
xor
jbe
pop
in
or
das
ret
sbb
sub
lea
outsb
stos
ficoms
sub
pop
and
pop
xchg
lcall
insb
sub
out
lret
push
mov
enter
mov
mov
ss
jecxz
sbbb
test
inc
sahf
fwait
sbb
push
mov
mov
push
popa
lret
testl
loop
cmp
mov
hlt
and
out
std
test
popa
outsl
in
xor
push
mov
jg
adc
cmp
push
fdivs
sub
cmpsb
cli
nop
xor
inc
xchg
fisttpl
sbb
cmp
add
repz
mov
fisttpl
adc
jecxz
pop
sbbl
gs
sti
xor
push
in
repz
negl
sub
cmp
add
xchg
cmp
cmp
das
lahf
push
repz
pop
loope
rcll
inc
cmp
popf
dec
movsl
loopne
nop
jp
dec
aad
pop
cmpsl
cs
inc
jmp
lock
pushf
fs
jb
jmp
mov
fistps
dec
out
call
fistpll
xchg
sbb
je
movsb
dec
orb
jb
lods
jne
int
adc
push
aaa
pop
in
insb
jmp
addl
mov
mov
jns
cwtl
cmp
pusha
jg
outsl
das
mov
and
pushf
aas
mov
bound
lock
push
out
mov
sbb
lret
mov
dec
cld
rorl
cmp
inc
in
cmpsl
pusha
add
sbbl
insl
xor
jnp
mov
clc
add
sub
shlb
sub
mov
mov
mov
mov
scas
push
pop
popa
popf
and
lcall
clc
pop
xor
fnsave
aam
sub
mov
je
test
hlt
add
add
push
adc
xchg
sbb
pop
stos
mov
sub
jb
and
xchg
repnz
dec
sbb
hlt
mov
outsl
out
adc
subb
xchg
aam
add
cli
mov
adc
and
fwait
sbb
shll
enter
icebp
movsb
shlb
mov
int3
outsb
in
mov
pusha
in
xchg
aas
adc
in
mov
bound
sub
out
shlb
mov
inc
loop
imul
mov
jne
insb
idiv
mov
into
fdivrl
rolb
rolb
sub
jle
push
adcl
sbb
clc
xchg
ficompl
iret
fists
jmp
pusha
aam
xor
sub
inc
jle
lret
bnd
push
in
test
xor
push
mov
dec
ret
dec
in
adc
and
scas
gs
mov
js
call
iret
push
ss
dec
jmp
scas
aad
daa
imul
sbb
pop
mov
fidivrl
addl
or
jns
xchg
int
inc
pop
inc
and
pushf
inc
hlt
loope
ja
mov
pushf
mov
rorb
inc
popa
fidivs
cmp
int3
sahf
fucomip
add
cmpsl
cmp
push
nop
and
repnz
fwait
mov
into
jbe
add
xor
stos
movsb
push
test
cmpsl
mov
sub
add
dec
bound
xor
mov
mov
stos
mov
push
xchg
dec
jno
in
cmp
fstp
enter
in
daa
jne
cmpsb
jg
pusha
inc
lcall
test
scas
ret
cmp
imul
or
sbb
shl
outsl
cmp
inc
mov
test
adc
fildll
push
jbe,pt
cli
dec
ret
push
loope
out
inc
into
xchg
push
sbb
lret
cld
lods
mov
sar
popa
arpl
push
loopne
sub
and
lcall
lea
or
enter
cmpsb
push
mov
dec
push
mov
jne
mov
mov
or
in
mov
jbe
and
aam
jg
rcrl
xor
sti
pop
rcll
scas
lret
and
sarl
test
cli
push
add
adc
sub
push
stc
mov
sbb
jo
xor
jnp
xor
and
cmc
dec
push
and
bound
int
stos
pop
cmp
fcompl
ret
sti
mov
aas
rorb
inc
and
sarb
data16
rcrb
cmc
adc
push
xchg
loopne
gs
sub
add
leave
in
pop
fs
mov
shrl
lods
xlat
inc
or
rcrb
repnz
repz
xchg
add
int3
push
sbb
push
inc
dec
and
dec
add
adc
aad
or
xchg
or
or
pop
xchg
fldcw
call
inc
sbb
cwtl
dec
jecxz
xchg
mov
xchg
mov
jb
sbb
push
inc
inc
push
gs
pop
xchg
push
dec
xchg
aam
sbbl
repz
cwtl
clc
movsl
call
divb
cmp
and
movsl
lds
cmc
inc
adc
lock
inc
ja
and
sub
jnp
out
lret
and
xchg
mov
adc
xchg
mov
pop
sbb
dec
jle
mov
sbb
lock
inc
dec
ret
popa
adc
aam
fists
mov
mov
sbb
scas
pop
dec
jg
mov
pop
sarl
push
sub
ljmp
lahf
clc
xchg
or
fstpl
cmc
push
inc
fildl
scas
dec
loope
add
lea
jo
pop
bsf
test
xchg
popa
add
cmp
sbb
adc
ja
out
sbb
outsb
je
inc
dec
jle
sbbb
cmp
jb
mov
jle
xor
sub
add
loop
cwtl
xchg
jecxz
adc
jecxz
out
sub
pop
orl
ja
xchg
push
pop
xchg
dec
mov
mov
jle
in
popf
in
jns
sete
pushf
ds
scas
inc
hlt
mov
test
jne
mov
sbb
xchg
jbe
mov
jbe
jp
jecxz
addr16
imul
add
outsb
xchg
lret
lcall
lods
mov
sti
pusha
outsl
lds
xor
jle
cld
cmp
insb
adc
cmpsl
and
adc
push
mov
inc
xchg
pop
push
aam
loope
add
push
pop
scas
pop
test
iret
mov
fwait
adc
scas
push
push
xchg
xchg
scas
cmp
imul
sbb
adc
rcr
pop
xchg
inc
xchg
push
cli
pop
xchg
xor
cs
sub
dec
leave
xor
add
das
and
shrb
outsb
lds
cmp
pop
cmp
push
int3
mov
aad
add
fwait
sbb
xor
xchg
xor
jbe
jg
push
add
movsb
fldt
out
and
stos
jo
test
xor
insl
pop
mov
gs
inc
push
jno
xchg
mov
lret
daa
pop
mov
ds
push
loop
cmpsb
add
pop
push
ficomps
sub
sub
lahf
push
jae
and
outsl
cmp
cmc
pop
in
inc
inc
adc
jnp
loope
mov
mov
js
push
pop
outsl
insl
jg
xor
xchg
sbb
inc
out
jmp
xor
adc
jno
push
sub
stos
fsubr
fs
mov
aad
sub
sbb
sbb
inc
dec
jecxz
filds
mov
mov
mov
xchg
mov
test
fistps
fs
fmuls
int
lret
xor
push
xchg
lock
inc
loope
adc
mov
stc
imul
outsl
pop
mov
insl
mov
adc
fwait
pop
or
jg
cmp
lds
cli
idivb
out
mov
mov
jbe
lods
call
cmp
insl
sub
adc
and
adc
and
stos
gs
or
popf
mov
sti
xchg
loop
in
leave
xchg
mov
sub
xlat
sbbb
sbb
mov
addr16
xlat
push
int3
inc
pop
mov
dec
arpl
adc
cs
pushf
mov
jmp
adc
call
lods
fwait
enter
or
cmpsb
pusha
add
ds
jo
push
jb
mov
test
inc
popf
hlt
stos
pop
sub
xchg
fcmovne
sbb
dec
jg
or
mov
scas
cmc
mov
repnz
gs
inc
div
sub
shrl
pop
mov
mov
mov
lock
xchg
xchg
mov
mov
mov
bswap
xchg
push
arpl
pop
mov
icebp
jmp
push
mov
pop
mov
shrb
fsubl
les
or
lock
leave
aam
push
sub
pop
and
mov
xchg
aaa
adc
mov
test
jmp
mov
ljmp
fwait
clc
shlb
fldl
inc
js
sti
inc
lret
test
rorb
bndstx
mov
movl
out
mov
mov
pop
ror
inc
cmp
push
xchg
mov
xchg
popf
dec
out
push
xchg
inc
xor
xchg
or
sbb
dec
fcomp
call
and
add
jg
add
mov
aas
fwait
jnp
addr16
push
orl
mov
pop
inc
adc
out
fsts
mov
mov
or
mov
mov
push
stc
dec
mov
mov
popf
mov
inc
inc
sub
mov
aad
pop
addr16
out
outsb
stos
xorl
jmp
adcb
pusha
or
aaa
push
mov
and
jnp
sbb
xchg
and
das
bound
adc
mov
insb
lds
push
xchg
int3
in
jae
sahf
mov
pop
out
scas
ret
ret
iret
adc
clc
push
fcmove
cmp
inc
lret
adc
mov
inc
push
push
aam
aas
sub
or
sbb
inc
xchg
hlt
ja
movsl
leave
stos
fs
repnz
mov
inc
int
xor
pop
addr16
int3
je
loopne
cld
fdiv
or
cmp
mov
adc
mov
push
roll
lret
movsb
data16
cmp
jle
scas
cmpsb
jmp
fidivs
push
and
imul
iret
popf
jno
push
cmp
mov
jp
jbe
mov
cmc
xor
inc
mov
iret
mov
push
push
dec
ss
jbe
mov
rol
clc
movsl
sbb
cltd
cmp
cmp
hlt
loope
adc
pop
rcrb
pop
xchg
push
jmp
addr16
fnstenv
jecxz
gs
sub
aam
test
shlb
lods
outsb
aam
cmp
bound
adcl
mov
pop
movb
mov
out
push
mov
xchg
cs
pusha
adc
sub
leave
jg
fimull
lods
or
test
cmp
sahf
test
push
sbb
ja
roll
lret
mov
fcomps
push
dec
cmp
mov
test
imul
loop
mov
outsl
sahf
dec
xor
adcb
mov
ret
cmpb
cmc
cmp
stos
sub
cmp
cmp
lods
iret
xchg
fldenv
arpl
add
ja
adc
imul
adc
sbb
loopne
xorb
dec
lcall
xchg
loopne
cmp
popa
sub
lods
or
sbb
js
sbb
flds
and
sub
icebp
and
or
aad
nop
push
cs
addr16
mov
mov
adc
hlt
or
lds
ljmp
adc
jecxz
js
je
inc
cltd
dec
out
xor
aas
stos
cmp
in
and
mov
cld
mov
add
mov
lahf
cwtl
outsb
and
ret
push
push
sarl
adc
mov
mov
sbb
das
xchg
xor
lock
imul
mov
xchg
mov
ret
lret
add
cld
inc
mov
xlat
mov
pop
fst
dec
je
subl
lods
es
mov
rcl
mov
sub
xchg
mov
xchg
mov
popf
ja
mov
int3
inc
push
lods
out
mov
pop
ljmp
sbb
or
sbb
fdivl
lds
cltd
outsl
sub
xchg
das
cmp
jp
jle
mov
mov
cltd
stos
pop
xor
pop
jo
lods
shll
sub
test
scas
imul
and
mov
push
iret
mov
in
mov
pushl
jecxz
cmp
add
push
lret
stos
push
int3
or
jp
inc
lea
dec
lret
ja
pop
test
mov
sub
xchg
sub
pop
in
push
idivl
add
loopne
lret
out
insl
push
mov
inc
pop
jne
dec
test
in
lock
inc
inc
xor
add
or
jg
inc
in
out
pop
mov
addl
xchg
popa
cs
mov
cwtl
pop
fildll
cwtl
pusha
movsl
test
ds
inc
jle
cmp
insb
ljmp
stos
jo
xor
push
mov
push
pop
inc
je
sahf
jl
inc
call
mov
mov
adc
cmp
scas
adc
mov
mov
jp
ficoml
dec
inc
test
push
enter
and
arpl
mov
or
aad
dec
mov
pusha
repnz
ficomps
mull
int3
pop
clc
mov
xchg
cmpsl
sti
or
and
aaa
das
sub
int3
loope
jge
insl
jbe
pop
jmp
and
lret
cmp
add
in
fsubrl
pop
jno
xor
xor
movsb
dec
mov
sub
jno
arpl
xor
daa
pop
add
jno
mov
fsubl
cmpsb
or
inc
inc
cwtl
movsl
push
je
sbb
sub
ret
int
and
movsl
and
mov
sub
push
loope
movsl
stos
push
mulb
setb
pop
mov
xor
add
mov
sbbb
dec
rorb
push
outsb
aaa
pushf
cltd
sub
rcr
mov
pop
lcall
ljmp
jns
js
sbb
pop
and
and
jp
mov
jl
jg
mov
jbe
test
sahf
daa
mov
sbb
in
mov
jae
rcr
fmulp
inc
adc
idiv
popf
fimull
cmp
lret
jno
adc
fs
cwtl
dec
stc
fldcw
aaa
loop
add
outsl
fnsave
mov
lahf
int3
or
test
repnz
xchg
out
xchg
mov
lods
mov
jo
dec
gs
mov
push
adc
pop
push
imul
add
gs
mov
jecxz
nop
sti
out
cmc
jmp
mov
sub
sbb
incb
cmp
daa
sbb
cmp
daa
in
mov
inc
test
dec
and
or
inc
push
cs
push
jmp
cwtl
jge
adc
rcrb
nop
inc
movl
lea
xchg
mov
aam
je
int
dec
pop
xchg
call
outsb
inc
outsb
lods
dec
inc
stos
aas
in
pop
jo
sti
fldt
stos
pusha
sbbl
test
cwtl
sub
sub
mov
mov
jnp
rcl
imul
scas
outsb
xlat
das
jne
aam
or
mov
fcomp
mov
cmp
jb
dec
cld
insl
imul
mov
pop
test
dec
outsl
pushf
scas
insl
shlb
loop
push
repz
pop
jl
sub
aas
mov
movsl
push
mov
and
int3
pop
mov
pop
mov
popa
stc
fcompl
xchg
cs
fst
pop
test
push
gs
jle
cltd
cmpsb
mov
test
cwtl
add
jge
das
xchg
xor
push
jae
pop
sbb
pop
sarl
sbb
or
dec
mov
ds
adc
xor
insb
sbb
pop
into
add
call
subl
push
dec
add
stc
fsubrs
mov
lds
adc
ja
addb
add
mov
insb
push
lret
pop
shl
xor
jns
cmc
in
jae
stos
out
dec
test
jne
test
sbb
sbb
cmp
jp
test
addr16
sbb
out
jno
adc
adc
jae
xchg
shll
mov
xchg
in
pushf
inc
jle
inc
pop
jnp
cmc
jl
push
xchg
stos
jecxz
xchg
inc
nop
mov
mov
cs
insl
sahf
mov
repz
das
pop
push
pop
inc
ret
dec
rolb
mov
push
push
xchg
push
push
ljmp
data16
xchg
repnz
fiaddl
flds
add
push
das
addr16
inc
and
cltd
hlt
or
psllw
ljmp
jnp
inc
mov
rol
pop
lds
add
lcall
out
jo
sbb
pusha
shll
scas
or
push
pop
movsb
jl
std
cmp
add
sbb
jo
repz
push
push
adc
dec
sub
jl
pop
popf
jno
orb
pop
imul
ret
subb
cli
or
push
aas
xor
enter
das
lahf
mov
push
and
cmpsb
and
pop
popa
jg
push
ja
sub
pop
or
add
bound
sbb
dec
or
out
dec
pop
in
aad
in
mov
cs
inc
push
sbb
lret
xorb
out
push
stos
adc
lcall
fdiv
test
push
test
add
les
xor
call
push
outsb
and
mov
rcrb
mov
stos
fistpll
cmp
sti
test
lcall
icebp
pushf
xchg
mov
adc
lret
jp
mov
fisubl
cmp
push
push
aam
jg
cmp
mov
ror
xor
std
cmc
push
ret
into
out
push
pop
or
les
jns
xor
dec
cli
cmp
mov
popf
shlb
data16
add
jecxz
adc
stc
xchg
imul
jbe
loopne
lock
incb
push
sti
sahf
movsl
push
in
or
hlt
mov
popf
gs
cmp
jp
sbb
dec
xchg
repz
inc
clc
cltd
sbb
outsl
outsl
xlat
inc
xchg
test
and
shrl
adc
shr
fwait
lods
jp
mov
pop
out
pop
pop
loopne
mov
xchg
add
movsb
cmpsl
jbe
shll
mov
sahf
dec
aad
fnsave
into
mov
inc
mov
inc
xor
mov
adc
fistpl
dec
inc
lock
xor
jmp
mov
push
inc
cwtl
in
stc
std
pop
outsl
adc
mov
push
stos
and
adc
mov
inc
in
das
push
push
lock
xor
pop
mov
cld
cwtl
add
mov
pop
scas
loope
push
lock
mov
shll
rcrb
popf
sbb
aam
add
mov
fstps
les
xor
push
dec
mull
out
and
lods
lds
into
popa
adc
es
push
clc
andl
jnp
push
dec
sub
test
loop
cltd
ffree
add
xor
xchg
mov
jge
out
lret
xchg
and
insl
stos
rcl
push
or
imul
add
xor
dec
sbb
jg
lds
mov
out
in
shll
mov
ljmp
pop
test
mov
negl
pushf
fcmovnb
fwait
or
testl
fbld
dec
mov
ljmp
fcomps
mov
scas
dec
sub
lret
in
pop
xchg
mov
bound
jae
out
sub
or
insb
sub
pusha
inc
fimull
inc
mov
inc
jp
js
addr16
shll
out
mov
adc
stos
mov
fildll
ja
in
jge
jle
dec
bound
push
pop
insb
rcrb
and
and
xchg
push
fstpl
popf
loope
or
loopne
mov
inc
loopne
pop
mov
mov
das
sbb
das
push
mov
scas
jmp
scas
les
push
xchg
dec
orps
mov
insb
inc
sbbl
or
es
arpl
sbb
pop
ja
leave
adc
add
jnp
fnstcw
xchg
js
lds
outsl
fisubs
pop
hlt
xchg
int3
xor
mov
or
or
lods
cmp
mov
cs
and
cld
xchg
gs
movsb
pop
shr
cmp
or
scas
inc
cmp
mov
mov
cli
pop
dec
cltd
lret
cs
mov
pop
sarl
add
enter
in
stos
jge
cmpsb
push
pop
dec
inc
gs
in
test
into
movsl
lods
lahf
shll
call
movsl
lods
insb
sbbl
mov
push
mov
lea
cmp
stos
scas
pop
or
mov
cmp
push
js
add
push
push
sbb
dec
add
lods
mulb
rolb
jge
and
daa
outsb
std
xor
das
and
fcompl
dec
sbb
inc
mov
sub
ror
dec
sub
outsb
or
jg
enter
mov
or
jg
hlt
mov
test
stos
sahf
insl
mov
push
mov
out
roll
inc
lret
pop
idivl
fcoms
push
cmp
push
shr
adc
mov
fs
fwait
stc
inc
push
fs
mov
fwait
repnz
leave
bound
shll
or
in
cmp
mov
xor
scas
cli
ret
out
scas
gs
push
ljmp
les
adc
aas
js
movsl
jecxz
adc
or
pop
cmp
inc
loopne
inc
sbb
jae
sub
cs
dec
sbb
xchg
sub
adc
xlat
jl
mov
sbb
shll
mov
std
push
fldenv
or
nop
pushf
addr16
rorb
jbe,pn
scas
jmp
test
adc
lret
adc
cmp
inc
aas
sbb
insl
jmp
lea
inc
cmpsl
pop
fsubp
loop
pop
je
fldcw
jb
cmp
filds
inc
movl
cmp
dec
dec
sub
push
orl
push
cwtl
lahf
mov
lret
testb
fcmovnbe
gs
and
shll
xchg
mov
mov
xor
je
add
aaa
lret
push
jnp
cld
ret
jno
icebp
inc
das
ja
das
xchg
test
gs
cli
insl
sahf
mov
rcrb
mov
out
fstl
andl
pop
jecxz
loopne
out
shlb
fidivl
ftst
dec
lods
xor
jecxz
dec
ds
xchg
lods
cmp
clc
mov
subl
aaa
or
cltd
adc
insb
add
cmpsb
inc
seta
stc
push
xor
aas
xchg
les
out
cs
scas
stos
es
cmp
inc
shrl
dec
data16
and
addb
test
lahf
rorb
lds
xchg
xor
mov
xor
repnz
add
or
push
aas
rorb
or
test
inc
push
roll
ja
pop
add
inc
sbb
repnz
sbb
push
jns
ret
int
cltd
ljmp
div
and
adc
mov
stos
mov
popf
fnstcw
addr16
pop
subl
inc
add
lock
das
xchg
ret
jmp
int3
in
mov
in
ret
cmp
fidivrs
faddl
sub
ljmp
jge
mov
or
push
mov
scas
dec
inc
or
xor
xchg
xor
xor
pop
iret
mov
inc
push
idivb
xor
sbb
sbb
and
fisubrl
cmp
shlb
std
mov
inc
sub
shl
mov
dec
xor
into
enter
cmp
shlb
arpl
pop
ss
cld
int3
and
push
or
or
std
push
stos
jge
icebp
mov
fisubs
cmp
pop
mov
insl
xor
xor
jnp
or
enter
stos
cmp
aad
daa
pop
push
bound
dec
cmpsb
xchg
xchg
hlt
testl
test
mov
repnz
cmp
lret
cwtl
movsb
shll
sub
push
ja
xor
cmp
pusha
cmp
int3
mov
pop
lods
lea
jae
movsb
xor
xor
insb
mov
sbb
mov
pop
cmp
shlb
add
adc
pusha
in
cmp
push
iret
mov
inc
cli
enter
sbb
ret
sub
push
or
mov
or
lret
and
and
arpl
sahf
mov
sbbb
stos
test
mov
adc
xor
dec
push
lahf
mov
pop
jp
popf
mull
idivl
outsl
fmuls
mov
cmp
xchg
mov
adc
mov
stc
fdivrl
loop
cltd
xlat
outsl
jp
mov
cmc
clc
mov
into
mov
jae
inc
test
cmp
mov
mov
out
add
mov
sbb
lods
imul
add
pop
xchg
adc
fstps
pushf
nop
rclb
leave
xchg
push
loopne
lods
inc
gs
push
decb
sti
cld
push
out
loopne
push
mov
cmpl
xlat
mov
xor
setbe
les
mov
dec
mov
dec
ds
nop
ja
mov
push
pushf
adc
pushf
adc
pop
les
out
call
mov
mov
jecxz
adc
dec
pop
dec
dec
ret
pop
adc
clc
loopne
aas
sbb
mov
sahf
mov
pop
imul
and
aas
andl
in
dec
mov
test
cwtl
pop
adc
std
test
and
inc
mov
shll
stc
mov
outsb
enter
sub
sbb
mov
add
mov
ds
mov
mov
icebp
push
cmpsb
dec
mov
pop
xchg
mov
pusha
push
jl
test
ret
mov
or
sub
ret
sbbl
and
xor
dec
lods
fwait
in
popa
ds
ljmp
iret
clc
stc
and
xchg
or
test
cmpsb
fstps
loop
int3
psadbw
push
xor
xchg
add
stos
adc
xchg
mov
andl
xchg
inc
movsl
test
insl
and
fdivrl
lret
nop
and
xor
cmp
or
loope
xor
inc
fcos
in
das
add
out
push
loop
mov
inc
out
jno
leave
inc
jmp
fsubrs
pop
jmp
arpl
xor
mov
sbb
lahf
xchg
bound
repnz
jmp
mov
jne
sbb
lcall
aad
mov
pop
test
jnp
addr16
pushl
out
pop
add
lea
jmp
lahf
mov
into
pusha
adc
in
imul
push
jbe
insb
xchg
mov
scas
stos
cmp
mov
loope
mov
das
or
jae
fwait
sahf
inc
adc
jmp
ret
dec
iret
in
dec
adc
in
cld
push
cmp
pop
mov
icebp
xchg
xchg
sbb
shrl
xchg
divl
adc
sbb
imul
je
inc
sub
fisubs
mov
pop
imul
cmc
mov
ror
xchg
lds
fnstsw
int3
or
out
dec
or
arpl
jge
nop
imul
insl
push
pop
dec
xchg
movsb
sbb
inc
lea
xor
sub
enter
mov
pop
dec
ja
sub
jno
scas
jge
cld
pop
cltd
daa
pop
mov
adc
js
push
cmpsb
adc
and
dec
jg
mov
movsl
xor
je
xchg
lahf
adc
movsl
cmp
jle
negl
pusha
mov
sub
aaa
out
dec
pop
cmp
jmp
pop
or
xchg
pop
pop
xor
or
xor
ja
test
out
arpl
and
arpl
scas
push
xor
cltd
inc
sub
pusha
fs
lods
subb
jnp
pop
inc
cmp
sub
test
sbb
add
mov
call
call
jg
jo
xorb
cltd
test
lea
jle
push
mov
stos
adc
xor
push
lret
push
idiv
pop
into
fadd
clc
nop
cmp
xlat
add
adc
mov
int3
loop
filds
xor
xor
dec
sub
xchg
push
push
or
mov
xchg
cli
sub
out
mov
lods
push
pusha
shlb
repz
add
imul
ljmp
pop
lds
outsl
mov
sti
stos
dec
jmp
mov
divb
ja
inc
lock
ret
scas
pop
xchg
inc
cmc
loopne
inc
insb
rol
sbb
xchg
inc
shlb
dec
popf
mov
nop
push
pop
mov
pusha
mov
cs
inc
jmp
adcb
sti
inc
adc
pop
outsl
movl
jge
pop
pop
dec
lods
imul
add
sub
xchg
ss
cmp
jb
mov
jl
fidivl
pop
inc
movl
xchg
dec
add
mov
mov
std
dec
cmc
xchg
xchg
roll
mov
and
sbb
add
sub
das
icebp
fsubrs
lock
mov
xchg
xlat
rorb
cs
cld
sbb
sbb
cmc
inc
js
xchg
movsl
pop
cmpsl
pop
dec
pop
dec
pop
pusha
and
es
xorl
test
add
jbe
and
inc
mov
rclb
mov
push
add
ljmp
xor
adc
insb
aaa
add
daa
divb
cld
push
push
add
movsb
or
push
cmpsb
or
xchg
push
loope
out
hlt
stos
inc
stos
add
and
sub
fsubs
push
xchg
into
mov
xchg
dec
jno
movsb
cmp
xor
sub
xor
push
decl
adc
dec
daa
or
test
mov
inc
andb
dec
mov
xorb
mov
mov
js
cmp
in
jle
xchg
and
bound
adc
mov
jle
jne
or
dec
or
sti
mov
pop
mov
dec
std
add
addr16
jae
sub
xchg
out
orl
mov
daa
movsb
xchg
jb
popa
fisttps
mov
lods
dec
xchg
popa
js
jle
add
jnp
aam
insb
add
push
and
xor
stos
scas
xchg
push
lcall
popf
push
mov
push
sub
jae
int
inc
pop
add
pop
xor
pop
mov
adc
cltd
xchg
xchg
jo
in
ret
or
sbb
pop
scas
xchg
dec
cld
rcr
rolb
cmp
add
or
das
addr16
arpl
and
jne
push
bnd
movsl
mov
out
cmp
or
pop
cmpl
add
daa
dec
aaa
ljmp
jge
adc
test
sub
movsb
test
or
and
jge
scas
loopne
out
and
aaa
xor
mov
or
sahf
jno
pop
data16
lcall
pop
mov
cmpsb
cmpsb
xchg
in
inc
adc
xor
mov
push
inc
shll
jne
and
jae
inc
xor
cmp
sbb
sub
cmp
test
sub
pop
dec
sbb
xorb
stc
popa
jl
mov
jbe
sbb
adc
in
popl
hlt
adc
cmp
fcompl
jle
pop
out
jle
rol
sub
push
test
dec
jecxz
shlb
and
pop
mov
mov
mov
imul
fdivl
cli
orb
test
push
sbb
lret
lret
push
lret
dec
idivl
aad
cmp
sbb
rcll
sub
stos
ja
stc
insb
fimuls
outsl
cmp
xor
lods
pop
cmc
xchg
into
jp
rorb
jnp
cmp
push
xor
mov
cli
pop
xchg
adc
aaa
xor
lods
cmp
cltd
data16
pusha
add
sub
or
imul
outsb
pushf
loopne
mov
xor
xchg
push
cmpsb
sti
pop
or
in
mov
mov
loopne
sub
cmc
xlat
cmp
mov
sbb
or
outsb
repz
in
and
test
dec
mov
inc
jecxz
into
dec
cld
jg
nop
sub
test
jmp
movsb
dec
pushf
addr16
adc
in
in
pop
sub
mov
call
jle
scas
mov
and
fbld
dec
mov
pop
jb
ret
cs
fs
jmp
pop
lahf
mov
in
in
dec
jno
push
mov
repz
pop
in
rolb
push
lret
rcll
shll
shll
lods
das
rolb
or
xchg
les
cld
inc
mov
icebp
int3
pushl
enter
push
or
push
add
es
movsb
inc
ret
fldenv
aam
data16
push
mov
pop
inc
cmp
mov
sub
mov
out
pushf
lods
jno
inc
popa
insb
mov
ljmp
psubb
fstl
mov
lds
scas
int3
add
repnz
repz
sbb
xchg
cltd
inc
inc
out
push
inc
scas
stos
repz
jb
rcl
das
or
sbb
imul
lcall
test
icebp
dec
mov
jle
mov
adc
or
ds
sub
lahf
add
sub
fwait
into
pop
or
dec
sbb
jle
dec
jl
out
sbb
jl
rcr
mov
xchg
aad
push
jns
in
popa
xor
dec
inc
repz
out
cmpsl
inc
cmp
jne
pop
inc
dec
in
jno
mov
mov
mov
lds
addr16
xor
xor
or
sbbl
clc
jmp
inc
add
addr16
inc
push
in
jmp
jecxz
mov
mov
insb
mov
and
jge
and
pop
mov
jge
inc
push
in
push
jae
inc
incl
sub
xor
add
stos
out
adc
nop
mov
iret
fistpll
xchg
movsl
call
rolb
cmp
push
xor
pop
inc
xor
test
out
aad
test
push
leave
in
jo
repnz
pushf
test
xor
stc
rolb
sbb
fdivp
or
pop
mov
mov
add
inc
pop
aaa
test
cld
cmpb
iret
jbe
mov
mov
cmp
push
pop
and
jle
fs
test
pop
dec
push
lods
clc
jl
mov
aad
bound
add
push
sub
in
inc
pop
mov
inc
mov
icebp
aaa
test
sbb
jns
push
cmp
movsl
dec
jge
ds
insb
shrb
cmpsb
loope
or
push
push
add
mov
ljmp
sub
mov
aam
sbb
jl
adc
movsb
jecxz
adc
adc
mov
lahf
sub
addr16
pop
dec
enter
daa
pop
aas
sar
sub
or
jmp
call
and
imul
push
push
cmp
push
jg
sti
mov
imul
mov
mov
leave
lret
scas
idivl
outsl
fdivrs
inc
cmp
pop
add
cs
fs
out
loop
push
jle
pop
lcall
dec
out
test
mov
or
fbld
mov
xor
and
dec
add
adc
adc
sahf
adc
outsl
add
das
cmp
pop
mov
xchg
adc
cltd
gs
cmpsl
mov
mov
outsb
sti
or
int3
mov
fdivrl
fidivrs
mov
sub
int
mov
fists
les
shll
sbb
inc
mulb
jne
or
adc
out
mov
add
inc
mov
pushf
adc
jge
addr16
loope,pt
call
in
cmp
mov
es
xchg
je
jecxz
dec
sub
mov
aas
add
lds
imul
inc
lods
iret
fildl
jmp
xlat
mov
sub
mov
mov
js
cwtl
mov
cmp
shll
mov
xchg
mov
scas
ss
sub
ja
pop
scas
in
mov
sahf
lret
or
aad
outsl
jb
icebp
mov
test
dec
push
cmp
fdivrl
scas
ret
push
xchg
sub
push
rolb
orl
into
daa
cmpsb
mov
xchg
pop
inc
lods
fdivl
lods
ljmp
dec
clc
stos
sbb
mov
mov
imul
jae
movlps
push
lahf
lods
adcl
loop
rcrl
das
roll
jmp
xchg
pop
test
dec
mov
xchg
and
mov
pop
add
or
mov
sbb
add
scas
lods
add
lret
xor
fwait
repz
iret
inc
scas
mov
ja
inc
icebp
pop
sbb
and
push
dec
jne
sti
xor
jns
or
and
xchg
mov
push
shlb
dec
iret
lahf
stos
mov
jnp
mov
stc
mov
jp
les
mov
cwtl
or
pop
test
pushf
pop
cmc
subl
xchg
out
mov
jl
ja
sbb
filds
mov
in
mov
or
fstpt
xlat
insb
cmp
imul
mov
movsb
inc
lcall
std
in
inc
xor
mov
ret
or
push
adc
cli
scas
mov
add
test
jl
cld
clc
dec
fidivl
test
inc
imul
or
xor
test
hlt
iret
cmpb
arpl
repnz
add
rcrb
dec
ficoms
cmc
popf
int3
int3
fdivs
or
cmc
sbb
pop
imul
dec
pop
push
dec
test
lds
int
shlb
ljmp
jo
movsl
jnp
and
push
push
push
cmpb
jno
and
cmp
mov
enter
in
sub
adc
inc
xor
or
dec
test
in
pushf
mov
and
sub
xor
xchg
cmp
push
sub
les
mov
xchg
pop
enter
dec
jle
pop
into
popf
or
jg
divb
pop
cld
add
xchg
andb
popl
adc
test
outsb
in
pop
pop
sub
and
fdiv
mov
push
mov
mov
ret
out
xchg
pop
mov
sub
push
xchg
push
rcr
lret
mov
sub
mov
add
jg
movl
sahf
pushf
jae
sbb
cld
pop
mov
insl
test
aaa
push
xchg
fdiv
dec
sarb
mov
int3
sub
stc
fisubrl
loop
call
push
xor
xlat
mov
or
pop
xchg
cmp
xor
in
roll
mov
repnz
data16
roll
test
push
mov
imul
mov
add
scas
pop
in
gs
pop
fcomps
pop
in
mov
mov
dec
push
xchg
xlat
mov
and
negl
sbb
scas
xor
les
fsubrs
inc
or
aam
mov
dec
adc
xor
ljmp
mov
push
push
pop
nop
andb
aam
call
mov
push
jecxz
leave
js
jne
cmpsb
dec
lahf
int
jb
jbe
aas
mov
cmpsb
clc
inc
pop
xchg
jmp
in
sub
jbe
xchg
dec
ret
cmpl
imul
inc
std
inc
jg
notb
in
lock
and
adc
mov
mov
addr16
mov
lock
movsl
mov
mov
mov
mov
jnp
push
cld
lcall
mov
push
test
insl
and
cmpsl
ret
mull
or
push
std
dec
rclb
push
pop
jle
test
aad
xchg
inc
cwtl
hlt
lods
inc
dec
push
popa
lcall
xchg
out
nop
clc
in
add
push
loope
dec
mov
add
aaa
cltd
daa
cld
xor
sub
lcall
daa
inc
mov
sbb
test
not
fnstsw
xchg
jl
test
imul
xlat
cmp
mov
test
test
popf
repz
xor
or
ljmp
or
adc
in
add
outsb
out
mov
or
fidivrl
inc
movsl
and
add
xchg
or
aad
jg
push
loop
mov
hlt
adc
xchg
jns
jp
bound
sub
mov
pop
loop
clc
xor
mov
xor
mov
rolb
fsubs
mov
or
inc
and
out
inc
cmp
mov
push
push
fbld
push
pusha
jge
mov
jbe
popf
jle
push
xchg
jnp
test
and
ret
push
lcall
lret
js
push
jb
mov
push
sti
cwtl
inc
inc
sbb
pop
aad
pop
ret
push
iret
imul
cs
push
imul
sbb
loop
xchg
push
sub
sbb
push
ret
push
add
out
cmp
arpl
adcl
repnz
sub
jno
outsl
sarb
pop
lds
add
pop
push
pop
mov
mov
dec
add
jae
jg
jle
daa
fidivs
movsb
dec
les
repz
jbe
push
pop
push
cwtl
dec
cmp
mov
dec
scas
jge
sub
xor
dec
push
mov
xor
call
cmp
xchg
daa
push
mov
imul
and
inc
inc
mov
out
scas
test
rcl
lahf
and
adc
ds
sbb
cmp
xlat
sub
inc
jge
movsl
dec
cwtl
push
and
pop
pop
int3
lret
js
fs
pop
cmc
mov
and
add
mov
sbb
cmc
push
xorb
adc
mov
scas
fcoml
dec
xlat
push
sub
mov
lcall
jle
pop
cmp
adc
int
ja
push
fsts
mov
cmp
lret
sahf
lock
xchg
dec
sbbb
pop
sahf
aas
test
sbb
psrlw
movsl
lock
cmpsl
div
pop
sub
mov
mov
ss
cmp
int3
add
fs
in
loopne
xchg
cs
loop
std
fisubrl
add
mov
mov
or
lcall
push
inc
cli
hlt
or
out
push
mov
aas
into
popaw
shl
add
insb
adc
imul
std
pop
cmc
adc
loopne
in
gs
xchg
sti
lret
psubq
push
in
imul
or
ret
xlat
testb
sbb
push
adcb
jge
loope
inc
xor
f2xm1
and
inc
sbb
add
nop
mov
inc
aad
enter
and
pop
pushf
push
push
push
pop
inc
mov
inc
call
mov
add
jae
jecxz
inc
je
fistps
jb
sbb
cmp
cmc
fiaddl
or
pop
mov
fmuls
out
push
shll
mov
inc
lcall
pop
jo
xchg
ds
aas
cmp
and
mov
mov
inc
shrl
insl
movsb
sbb
mov
push
jb
cmp
or
ljmp
icebp
push
adc
mov
push
dec
testl
jmp
ret
xchg
push
sub
scas
shrb
out
popf
pop
ja
xchg
mov
sbb
repz
lods
mov
xor
adc
cmp
and
fisttpll
push
dec
push
movsb
adc
sub
rcrb
inc
adc
push
push
btr
adc
stos
rorb
pop
jae
fcom
xor
mov
push
or
xchg
test
sbb
dec
in
cmp
loopne
scas
xor
es
or
push
xor
or
add
adc
xchg
pusha
movb
or
push
int3
pop
ja
push
pop
pop
nop
out
mov
test
xchg
repz
sbb
insl
mov
or
out
inc
jecxz
mov
jl
jne
scas
mov
xchg
xlat
fisttpl
jo
xorl
iret
cmp
pop
xor
or
out
popf
inc
orl
xchg
test
jmp
mov
mov
or
jge
int
or
bnd
lods
pop
inc
and
in
push
xchg
xchg
mov
repnz
jae
cmp
inc
dec
and
pop
or
jecxz
movsl
sub
adc
mov
mov
fisttpll
sbb
mov
xchg
stos
test
inc
cld
push
fisubrs
or
pop
jle
cmp
arpl
jl
hlt
rcll
push
pop
test
rolb
insl
ffreep
push
les
lds
or
scas
pop
cmp
cli
sub
loop
xchg
or
jnp
out
pop
sbb
inc
jge
add
xchg
cmp
aam
repz
stc
sbb
adc
scas
scas
pop
sub
daa
xor
cs
popf
dec
mov
lods
dec
jno
ja
cmp
xchg
aaa
daa
push
inc
xchg
enter
in
sti
push
shlb
jecxz
push
xchg
jmp
test
xchg
cmp
and
push
adc
jbe,pt
insb
cmp
cld
or
lcall
cmp
lret
outsl
js
ficoms
sbb
inc
add
daa
imul
arpl
orb
popl
and
rolb
aas
adc
mov
aad
mov
into
mov
cmpl
sub
mov
int
dec
lahf
push
push
and
imulb
sbb
data16
insl
mov
pop
push
cmpb
dec
sahf
loop
jne
imul
inc
shll
and
divl
adc
ss
adc
jg
xlat
adc
loop
inc
outsl
mov
imul
rcrb
push
fdivrp
or
push
push
cmp
jb
xor
pop
sar
daa
inc
out
rorb
mov
jno
data16
out
xchg
das
mov
ljmp
adc
cmpsl
fsub
in
add
subl
sti
push
mov
in
bound
mov
xor
shlb
inc
enter
arpl
dec
mov
les
sub
daa
cmp
inc
das
jp
dec
js
adcb
mov
mov
pushf
adc
mov
push
mov
xchg
mov
push
lea
and
mov
add
push
dec
lea
ljmp
inc
popa
pop
in
push
sbb
adcl
cwtl
out
subl
in
mov
mov
movsb
scas
not
icebp
rcl
mov
and
mov
mov
fldl2t
jbe
dec
loope
lock
or
pop
inc
aad
pop
scas
cld
lock
mov
mov
push
xchg
leave
dec
inc
push
aam
out
sub
gs
ret
adc
or
sub
sar
jg
pop
mov
dec
outsb
and
pop
xchg
add
sbb
jle
ljmp
sar
pop
adc
das
xchg
sub
mov
mov
stos
and
fdivrs
wrmsr
push
lds
fidivs
out
jecxz
fsubrs
push
jecxz
rorl
cmpsb
dec
xchg
scas
add
or
dec
push
sub
scas
mov
ds
adc
fbld
clc
add
movl
sbbb
or
mov
call
ja
sbb
pop
dec
pop
arpl
and
xchg
inc
push
pop
in
mov
inc
bound
and
mov
lods
jo
xchg
pop
mov
add
mov
dec
sarl
mov
or
arpl
out
insl
dec
sbb
xor
jb
xchg
xchg
or
mov
pushf
sub
test
xchg
jnp
and
insb
sbb
stos
out
mov
adc
sbb
mov
inc
push
jns
pop
inc
add
daa
dec
fsts
pop
jne
push
out
mov
imul
test
dec
imul
push
into
lcall
rcr
addr16
mov
cmpsl
leave
enter
adc
sbb
outsb
mov
lds
iret
push
pop
insb
push
or
or
xchg
aaa
movsl
xor
data16
jmp
push
ss
lea
repnz
lret
call
add
xor
adc
fdivrl
jnp
adc
lea
cs
arpl
push
dec
push
enter
in
loop
sub
notl
pop
test
data16
lahf
lret
sbbb
jp
dec
movsl
lea
jp
cltd
sub
jmp
shll
xlat
push
hlt
iret
pop
test
into
pop
inc
or
enter
enter
mov
jbe
sbbb
pop
addl
adc
adc
jmp
fdiv
sub
push
mov
mov
fdivl
cmp
inc
pushf
lahf
int
push
xor
fists
dec
mov
pusha
add
mov
jg
inc
mov
test
in
inc
sbb
mov
mov
out
jle
je
sbb
shll
in
das
imul
bound
outsl
xchg
subl
imul
dec
or
mov
xor
lds
out
scas
push
mov
xchg
add
imul
mov
out
imul
lds
aas
cwtl
loopne
mov
mov
inc
push
pop
sti
lds
in
int
mov
test
sub
je
bound
test
xchg
fnstcw
repz
les
rcr
pop
hlt
bound
jle
dec
xlat
mov
xor
mov
add
dec
pop
pop
test
ret
imul
xorl
out
pop
or
sub
dec
add
pop
jb
or
inc
jl
les
es
fildl
daa
fmuls
push
addl
mov
sbb
cwtl
ja
cwtl
std
cmp
test
fstpl
sub
insb
xor
das
sub
aam
xchg
outsl
pushf
mov
push
loopne
add
inc
lret
enter
sbb
into
mov
push
or
insl
cmp
es
jl
aam
test
cmp
ror
xor
inc
mov
ljmp
mov
mov
and
fisttps
enter
adc
xchg
imul
push
mov
les
sub
addr16
jg
roll
out
inc
pushf
jae
sahf
sbb
shl
push
add
mov
addb
cmp
xchg
aas
add
mov
inc
xor
les
inc
dec
mov
add
push
xlat
pop
fwait
scas
sbb
or
out
inc
or
dec
cmp
pop
push
imul
mov
gs
aaa
repz
xchg
jns
cwtl
jbe
xor
int
add
mov
repnz
dec
fldenv
pop
fisttps
mov
mov
je
xchg
addr16
mov
sub
test
jge
push
rcl
jmp
fs
sbb
in
sbb
in
cli
push
jle
aaa
push
insb
adcl
stos
popa
inc
fcoms
pcmpgtw
inc
sub
cld
jae
mov
popa
es
pop
jp
sbb
lret
xor
iret
xchg
mov
loop
cmpsl
push
cs
imul
sbb
fists
fiaddl
addr16
push
xor
xchg
hlt
sti
jae
leave
aas
repnz
mov
mov
in
pop
and
int3
js
lahf
add
sarb
or
stc
aaa
movsb
sub
aad
jo
or
sbb
test
push
movsb
ljmp
and
int
scas
sbb
xor
hlt
cld
or
inc
mov
mov
and
jmp
sub
popa
lods
daa
push
fists
cmp
pop
in
leave
jne
cmpsb
test
cld
mov
test
cmp
and
lret
lret
ds
xchg
mov
aas
and
insb
pop
pop
les
xor
popl
push
mov
iret
xor
xchg
les
push
pop
inc
mov
cmp
adc
js
cwtl
sub
pop
jnp
push
mov
lcall
mov
ret
int
mov
add
push
mov
arpl
or
lock
loopne
mov
aaa
rcll
lret
jne
xor
mov
lods
repnz
adc
push
add
mov
insb
loop
jbe
outsl
jb
aas
xor
pop
and
xor
into
int3
ftst
or
mov
cli
sarb
xor
add
mov
pop
push
add
ja
imul
pop
push
ret
xor
fs
mov
cmp
mov
sbb
push
cmp
ds
xchg
pushf
sub
repz
fsts
mov
dec
ss
mov
dec
cwtl
inc
aad
mov
cs
mov
jmp
in
jl
add
adc
test
sbb
shl
call
mov
jb
mov
jnp
jb
dec
pop
aas
push
in
xchg
pop
sub
js
push
pop
jno
add
dec
outsb
sub
lea
inc
into
lds
loopne
stos
negb
shrl
jmp
mov
or
lock
mov
add
mov
aaa
jecxz
cld
inc
xchg
mov
mov
push
mov
fsubrs
sub
es
ret
xor
aam
push
les
xor
jmp
pop
cli
sub
iret
push
and
dec
aaa
pop
mov
repz
nop
popa
idivb
xchg
jecxz
pop
clc
rcll
fnstsw
inc
push
in
cmpsl
or
test
dec
cltd
add
add
pop
pmaxsw
pop
push
out
or
test
lds
sarl
push
popf
sbb
xchg
repnz
test
test
dec
and
xchg
sub
aam
add
jns
and
test
jmp
lods
inc
add
lods
add
cli
popa
arpl
leave
jmp
cmp
push
sbbl
mov
aad
loopne
imul
cmp
jns
xchg
xor
inc
jnp
loope
adc
adc
out
dec
rcrl
mov
scas
fnstcw
push
in
addr16
cltd
or
iret
int
pop
xor
out
push
jb
in
cmpsb
jmp
aaa
ret
loope
sub
lods
and
ret
mov
rcrb
rol
insb
out
jb
and
xchg
subl
xchg
jne
add
dec
push
jle
stc
jae
lcall
mov
push
fiadds
adc
mov
shrb
repnz
imul
sbb
xor
scas
inc
fidivl
sbb
push
pushf
and
int
arpl
outsb
loopne
inc
ret
mov
push
repnz
cmp
shlb
faddp
push
pop
lret
int3
arpl
nop
add
mov
aaa
and
jge
mov
mov
push
aam
test
jne
cmp
pusha
jle
and
in
scas
stc
dec
es
mov
xor
xlat
imul
out
jbe
jl
adc
out
cmp
fs
in
mov
xor
inc
sti
outsb
dec
push
clc
fld
test
or
dec
lahf
or
adc
mov
adc
je
cmp
fistpll
cmp
jo
sub
xchg
jno
add
mov
js
lds
xchg
sbb
xorl
mov
rcrl
lahf
xchg
addb
pop
rcl
cmp
out
in
fistl
test
fmull
fstl
std
inc
lcall
mov
cmp
and
and
shlb
xor
daa
mov
adc
jg
std
orb
test
add
testb
mov
shr
test
cmpsl
mov
lock
clc
clc
ss
in
adc
mov
fs
or
insl
xchg
mov
or
or
hlt
cmc
idivl
ss
scas
sub
mov
pop
jp
xor
and
add
lods
mov
insw
iret
sbb
aas
scas
daa
adc
add
dec
adc
xchg
mov
loopne
ficomps
gs
lods
push
incb
mov
fisubl
mov
fst
xacquire
push
lcall
pop
dec
repz
out
fxch
push
loop
push
xchg
sub
into
aad
adc
push
mov
pushf
adc
dec
adc
xor
mov
cmp
cmp
lea
cmp
lds
mov
in
enter
and
jecxz
in
mov
stc
lret
rcll
adc
add
dec
pop
mov
xorl
xchg
mov
add
lahf
std
xchg
add
jnp
test
mov
xchg
gs
das
jmp
sub
mov
xchg
mov
enter
cmpsb
sti
test
icebp
lods
daa
mov
sub
nop
test
insl
movsb
add
es
inc
pop
ret
ret
aam
jne
sub
push
jbe
jne
ficompl
sbb
and
jo
aas
mov
pop
stos
mov
xchg
je
lret
xchg
and
neg
movsb
mov
push
mov
aaa
mov
mov
repnz
cmp
xchg
add
andl
out
or
test
jl
mov
adc
sbb
ja
js
in
test
stos
dec
dec
mov
xchg
xchg
test
mov
pop
fs
or
mov
xor
cwtl
inc
incl
cmp
push
popf
loopne
fwait
or
mov
mov
add
ja
xchg
imul
or
mov
dec
dec
xchg
das
mov
cmp
ss
push
ret
shl
mov
mov
in
and
lcall
sub
jp
push
clc
addr16
ret
jecxz
sub
scas
xchg
sbb
mov
add
inc
dec
mov
filds
sub
sbb
jle
cmp
shrb
shll
repz
stos
inc
jbe
push
xchg
fwait
xor
mov
in
inc
xchg
jae
in
ljmp
adc
add
inc
cld
loop
cwtl
call
add
pop
jns
sbb
push
fsts
push
pusha
jle
stc
sub
add
arpl
popf
nop
hlt
xchg
fs
push
sbb
mov
fcmovnb
mov
fwait
neg
cmpsb
and
int3
dec
cs
add
icebp
cltd
or
mov
loope
dec
mov
outsb
jbe
add
mov
movsb
add
dec
and
scas
fcoms
mov
push
mov
jno
jl
ss
cltd
rorb
lret
pop
daa
push
dec
xor
in
xchg
and
inc
mov
fisubrl
fcomps
dec
mov
movsl
jnp
push
add
dec
cmp
cmp
push
ja
pop
inc
repnz
fstps
jl
adc
xor
xchg
inc
sbb
test
jl
sbb
scas
dec
mov
ds
and
je
nop
fdiv
inc
jo
mov
rol
pop
mov
inc
mov
mov
jg
and
dec
mov
mov
mov
scas
lods
jg
loopne
andb
test
sahf
outsb
sti
sbb
and
lcall
lcall
fcomps
push
cmp
xor
adc
icebp
fs
mov
and
stos
loop
jne
outsl
xor
xor
jg
into
xchg
movsl
mov
lcall
xor
leave
cli
repz
das
nop
dec
mov
and
lock
add
mov
adc
out
imul
inc
pop
nop
pop
in
push
cmovae
mov
stos
pop
fwait
sti
rcrb
andb
xchg
lods
xlat
xor
mov
pop
mov
sbb
and
repz
pop
les
flds
adc
jnp
push
dec
hlt
jb
nop
add
cs
add
pushf
mov
shl
pop
ret
mov
push
mov
enter
sbb
enter
xchg
and
sub
jb
outsb
jle
pop
rclb
inc
xchg
mov
nop
mov
out
orl
daa
stos
mov
mov
in
cs
loop
loop
jmp
and
fdivrp
mov
and
cld
push
mov
out
orb
fmuls
cld
pushf
aad
icebp
test
loope
pusha
cmp
loope
cs
insl
mov
cwtl
ret
push
mov
and
and
rorb
imul
icebp
fldenv
sti
movsl
mov
pop
cmpb
and
cmp
clc
lahf
clc
inc
in
adc
mov
mov
cltd
jno
xor
shrd
push
pushf
loope
xchg
rorl
mov
pop
lret
shl
xor
sbb
and
test
aas
lret
xor
xchg
push
cmpsb
mov
push
leave
or
mov
sub
jmp
je
add
stc
push
inc
push
push
fwait
cmp
jl
lahf
imul
dec
adc
shlb
jae
pop
aaa
add
mov
shr
pop
xchg
jle
mov
jns
jnp
ljmp
mov
cmp
jne
add
sbb
inc
or
jp
mov
scas
pop
sub
or
mov
out
xor
adcl
xchg
jmp
fisttpll
fistps
push
adc
pop
cmovno
mov
scas
je
sub
inc
and
mull
mov
daa
mov
mov
push
jae
cmpl
add
repz
mov
mov
push
add
shrb
icebp
sbb
push
je
pop
pop
and
sbb
arpl
movsb
pop
or
dec
mov
arpl
bswap
hlt
fcompl
leave
movsb
pop
fs
pop
xor
fisubrl
pop
fimuls
sbbl
dec
push
add
mov
or
jl
aaa
mov
sub
jge
mov
mov
movsb
mov
push
scas
mov
push
jo
scas
jbe
hlt
xorl
int
jge
xor
loop
jo
test
cli
pop
and
enter
in
jle
js
xor
inc
inc
sbb
xchg
push
mov
pop
test
mov
mov
and
or
movsl
sbb
ds
xchg
push
sub
mov
loope
jne
push
or
js
in
pop
pop
fistpll
add
add
lret
add
xchg
sbb
push
das
clc
rorb
repnz
sub
cwtl
fcompl
add
lcall
repz
mov
cmp
and
sahf
out
mov
xchg
stc
mov
lods
and
jae
jns
inc
js
test
daa
rcrb
push
xchg
xlat
mov
cmp
sbb
icebp
lret
leave
divl
cli
fcoms
lods
cmp
jne
dec
adc
mov
stc
fistpl
shl
ret
dec
outsl
pop
out
or
and
into
jne
inc
or
xchg
adc
aad
cli
es
xor
cs
mov
repz
ret
add
adc
sbb
imul
dec
push
loopne
push
int
movsb
iret
mov
int
sti
sti
cmpl
jnp
je
or
jo
cmp
in
in
movsb
repz
cmpsb
xor
xchg
daa
fnstcw
dec
aam
mov
hlt
nop
loopne
pop
aad
push
mov
sbb
jmp
pop
sbbl
call
out
xor
test
sbb
pop
sbb
je
mov
dec
loopne
jb,pt
dec
pop
aas
sti
cli
mov
inc
or
dec
dec
fstpt
int3
adc
sub
mov
arpl
cwtl
std
aad
in
mulb
andb
sub
mov
cmpsl
dec
cmp
add
loop
push
lods
js
mov
test
cld
xor
icebp
pop
or
mov
dec
lret
sub
subb
xor
hlt
ds
ret
loopne
mov
sub
mul
rcrb
adc
shlb
push
sbb
mov
xor
ljmp
divl
clc
adcb
ss
xchg
test
es
test
inc
add
pusha
aad
ja
mov
shlb
push
pop
jne
test
sbb
xor
inc
dec
push
outsb
ja
in
fwait
mov
mov
push
or
jl
xor
out
inc
fucomp
add
loopne
add
jecxz
push
fwait
imul
inc
data16
dec
pop
pop
mov
rcl
test
pop
xchg
mov
push
xor
push
cwtl
push
jns
arpl
bound
mov
jle
jmp
cmp
lcall
pop
imul
pushf
push
mov
pop
dec
jp
into
out
scas
push
mov
sub
mov
popf
andl
jmp
mov
xchg
fistpll
jge
pusha
mov
jbe
jle
adc
jnp
cwtl
imull
push
and
fstl
push
adc
jb
mov
popfw
fadd
inc
push
cwtl
cmp
pop
faddl
cmp
lods
jnp
pop
mov
iret
add
mov
push
dec
push
aam
lret
fwait
lds
mov
sbb
sbb
add
into
gs
inc
idivb
push
sarl
enter
sub
hlt
daa
movsl
leave
sbb
mov
and
cmc
jle
lds
fisubrs
ja
int3
and
test
insb
mov
inc
aaa
pusha
popl
sbb
sub
jge
sub
jbe
and
mov
push
lret
test
and
aaa
es
dec
sahf
xor
xorb
cmp
mov
jno
fdivrs
sub
dec
into
enter
in
gs
out
mov
pop
inc
test
daa
push
pop
mov
pop
push
test
pop
lahf
data16
and
stos
inc
ds
adcl
enter
ljmp
push
push
xchg
pop
rcl
js
loopne
pop
push
out
xchg
mov
and
lock
sbb
cmpb
shlb
adc
add
hlt
sub
mov
push
push
mov
pop
adc
insb
sub
add
push
out
or
and
dec
mov
hlt
repnz
xchg
jg
mov
sbbb
push
add
sbb
xchg
xor
mov
mov
imull
hlt
adc
iret
inc
jge
repz
and
mov
negb
stc
xchg
push
gs
inc
subb
push
xor
repz
dec
sub
fmull
js
cmp
xor
pop
out
out
adc
test
lods
aas
push
out
data16
incb
in
nop
push
adc
cmpsb
int3
imul
jnp
pop
into
jae
loopne
lods
push
lock
sti
xor
dec
mov
out
and
scas
icebp
push
cmp
and
xchg
test
scas
repz
lcall
sahf
dec
dec
mov
bound
insl
add
fwait
jmp
daa
fistps
xor
sub
imul
testl
into
jae
jecxz
sbb
je
sub
push
imul
aas
lcall
inc
xchg
inc
negb
out
fucomi
pop
mov
xorl
or
aas
ror
push
popa
addr16
jl
aad
push
es
mov
dec
mov
das
xchg
loopne
push
iret
or
repz
cld
repnz
icebp
xor
jmp
cmpsl
dec
sub
cmp
es
rol
outsl
aaa
jbe
ds
subb
cmp
jbe
jbe
adc
or
out
sub
lahf
aad
popa
push
jmp
mov
clc
mov
rcrb
stc
push
xlat
mov
sti
popl
int
add
and
push
push
pop
push
xchg
pop
ret
xor
and
pop
and
js
xchg
cmpsl
fistps
xor
test
test
es
xchg
push
mov
add
or
inc
xor
pop
dec
jmp
lock
add
push
xchg
fwait
lcall
inc
std
loope
dec
cli
ja
mov
pop
lods
dec
pop
mov
pop
xchg
xchg
sbb
into
in
pop
add
outsb
lock
bound
jns
out
pop
call
in
jne
pop
mov
and
mov
add
mov
dec
stos
jp
cltd
sub
bound
add
stos
out
into
insb
xorl
insb
xchg
adc
cmp
sub
adc
pop
stos
push
pusha
push
shl
scas
iret
push
jle
insl
push
jnp
test
stos
mov
int3
aam
in
cmpsb
mov
push
mov
jae
jns
inc
cwtl
jae
pop
in
inc
sub
iret
popa
shll
sub
rcll
jmp
cs
imul
loopne
fiaddl
push
lahf
push
cmp
pop
inc
push
insl
jmp
sub
inc
xchg
leave
xchg
aas
loop
add
filds
adc
fimuls
push
pop
xchg
add
sysret
aad
add
lock
pop
xchg
adc
jl
cmpb
loopne
mov
fists
adc
movsb
mov
jge
and
mov
jo
neg
xor
arpl
repz
mov
cmp
jle
dec
jo
enter
in
dec
jae
cmp
inc
aaa
loope
push
and
pop
test
pop
mov
lret
inc
movsl
nop
imul
cmp
ret
loope
test
pop
incl
inc
pop
sub
xor
mov
sbb
pushf
or
rorl
aas
push
mov
add
icebp
sub
out
cmc
enter
lcall
xor
sbb
push
icebp
jl
and
push
mov
test
mov
mov
rcrl
add
flds
sahf
push
popf
in
sbb
shl
rorl
lret
cmp
out
sbb
fmuls
mov
repnz
movsb
inc
stc
dec
xor
loop
cli
outsl
int
cmp
ret
adc
xchg
into
cmp
lods
or
inc
dec
cmp
fwait
xor
xor
cli
mov
sub
adc
lods
es
insl
add
push
adc
test
movsl
sbb
insl
faddl
in
and
loopne
sbb
gs
out
adc
jo
dec
jb
mov
pop
xor
xlat
out
out
cmp
iret
cld
sbb
imul
cmc
loope
les
lret
mov
dec
adc
nop
xchg
std
nop
aad
push
shrl
loopne
dec
jmp
mov
pushf
rcr
adc
jmp
xor
cmp
daa
ds
jmp
imul
inc
movsl
jecxz
mov
je
repnz
dec
into
jecxz
das
test
aas
cmp
inc
push
ds
sbb
ficomps
js
fistpl
pop
pusha
or
or
incb
cwtl
fnstcw
add
and
mov
and
mov
mov
fidivs
iret
das
gs
out
mov
push
mov
lret
bound
xor
mov
dec
adc
dec
pop
sub
insl
inc
inc
call
ret
pop
xor
or
sub
mov
mov
adc
sbb
imul
or
shlb
mov
xchg
out
adcl
inc
dec
push
push
mov
dec
jp
sbbb
cltd
push
or
fldcw
sub
mov
xchg
cmpsb
je
out
cwtl
fmull
cmp
in
xchg
xchg
sbb
sahf
mov
test
js
dec
and
orl
dec
loope
or
aad
xor
xchg
incl
mov
pushf
add
sub
fwait
leave
sbb
or
pop
mov
dec
in
jnp
ja
push
pushf
pop
push
cwtl
pop
mov
xor
imul
in
jns
jns
and
mov
inc
ss
ss
jne
mov
dec
lods
lcall
jle,pt
pop
mov
loop
lods
sub
cli
subb
leave
test
fcoml
cmpsl
jmp
push
and
pusha
lock
in
mov
aaa
lock
cli
and
lods
stos
adc
push
mov
mov
popf
sub
push
dec
jp
jae
fcmovnb
inc
mov
shrb
iret
ror
adc
fistl
push
mov
xchg
shlb
sbb
xor
jecxz
xor
test
hlt
stos
push
lahf
dec
mov
push
idiv
arpl
movsb
leave
or
dec
mov
sub
lds
and
icebp
sbb
pop
mov
push
int3
cli
mov
or
ficomps
sbb
in
jge
stos
sub
jecxz
push
pop
sbb
movsb
sub
cmp
and
jmp
jmp
dec
jge
push
inc
loop
dec
sbb
popa
jl
mov
cmc
insl
dec
cmp
sbb
sbb
shr
das
mov
cmpsl
fists
xor
sub
pop
lahf
movsb
rcrb
and
jae
mov
sub
push
loope
out
fsubrs
cld
out
ds
push
pop
push
loope
sbb
dec
xor
sbb
and
clc
mov
adc
lret
sub
mov
fsubl
pushf
sbbl
movsb
cmp
pop
or
hlt
arpl
and
stc
mov
scas
mov
xchg
pop
mov
das
push
jg
xchg
repnz
pop
sahf
cli
adc
loope
mov
rcr
cwtl
lret
mov
lods
ret
adc
inc
inc
outsb
cmp
ds
or
xchg
jmp
push
stc
add
mov
lods
mov
xor
ffree
cmc
fisubrl
into
push
lods
out
push
mov
dec
xor
lcall
sub
shrb
cld
sarb
or
inc
mov
imul
jno
pop
or
shl
cltd
xchg
gs
jl
sti
mov
lret
pop
xchg
mov
int
push
xlat
sub
push
jp
mov
mov
sub
test
adc
filds
mov
dec
jo
loop
jno
xlat
aad
fwait
mov
jmp
or
pushf
imul
pop
mov
mov
icebp
call
push
orl
je
push
cltd
dec
inc
cmp
andb
aas
fmuls
inc
mov
daa
fisttpl
dec
lock
andl
pop
mov
rol
cwtl
xchg
mov
std
lret
imul
and
dec
popf
mov
jno
add
inc
pop
cmpsb
lock
fs
ds
lret
shl
lods
cld
dec
inc
push
loopne
imul
sbb
mov
jge
add
aam
pcmpgtb
cld
mov
rclb
xor
sbb
xchg
mov
sbb
lods
jne
shlb
xlat
gs
je
xor
push
push
jg
mov
test
ljmp
sub
pop
push
or
test
sti
out
stos
daa
out
pop
jbe
nop
roll
or
fldt
test
pop
jl
mov
xchg
and
mov
xchg
adc
or
dec
xor
clc
lcall
jge
add
int3
movsl
enter
rorl
mov
dec
loopne
shlb
jge
and
lret
mov
fcomip
cmp
mov
out
jns
cmc
push
bound
dec
adc
sbb
pop
jne
mov
fimull
repz
shlb
stos
jbe
or
repnz
sub
cmp
inc
and
cmpsl
outsb
psubsw
cmp
sub
push
fistps
shr
mov
sti
cmpl
popa
insb
jo
cmc
and
jb
xchg
iret
mov
push
push
push
adc
fdivl
xorl
sti
pop
out
push
ss
iret
pop
int3
cwtl
adc
jecxz
push
pop
add
imul
xlat
sbb
jle
xchg
mov
push
inc
inc
jae
or
push
loope
push
scas
cmp
cmc
test
jg
hlt
or
xorb
mov
inc
ljmp
xchg
sbb
pop
in
sbb
in
xchg
add
cmp
or
ja
aaa
popf
sub
sbb
mov
imul
push
movsb
mov
cmpb
aam
and
mov
cmp
jno
adc
loopne
mov
fnstcw
divb
out
and
daa
dec
inc
sbb
in
sbb
outsl
inc
inc
push
mov
push
mov
cltd
cs
incb
sbb
push
iret
ljmp
and
cmp
add
sub
fisttps
push
pusha
mov
js
cs
pop
jnp
pop
loopne
stos
xor
int
adc
push
sbb
pop
inc
xor
rorl
jecxz
adc
sub
mov
fmull
cmp
rcrl
xchg
pop
xor
ror
mov
mov
and
mov
cmpsb
aaa
mov
shlb
out
mov
lods
dec
addl
adc
xor
shll
lret
imull
fadds
cmpsl
out
cmp
adcl
xor
ds
mov
or
jg
adc
mov
inc
xor
test
mov
push
mov
cmp
in
xor
call
mov
lods
hlt
inc
std
data16
popf
add
cmp
imul
nop
sub
pop
andl
aaa
dec
sti
cmp
sbb
icebp
jge
sub
xlat
insb
add
and
sbb
icebp
xchg
or
xchg
sub
jno
push
fimuls
inc
pop
dec
iret
dec
aam
dec
in
aad
jge
cmpsb
cwtl
gs
and
push
jae
adc
push
xor
call
mov
aas
lret
jecxz
mov
enter
pop
jb
rcrb
aas
ja
cwtl
inc
push
pop
xchg
xor
pop
out
push
fstpt
xchg
dec
dec
cmp
and
cwtl
dec
mov
std
jno
sub
xor
lds
roll
das
and
dec
mov
mov
lret
inc
mov
imul
jl
mov
dec
outsb
mov
insl
push
shlb
jno
aam
sub
shlb
popf
pop
shll
out
mov
and
mov
leave
dec
aas
lods
loopne
mov
test
ljmp
fwait
clc
outsb
std
sub
push
inc
pop
sbb
xchg
mov
inc
add
push
push
ja
cmpsl
dec
xchg
xor
mov
stos
push
lock
pop
and
cmp
lcall
xchg
ret
test
xlat
lret
inc
das
xchg
aaa
add
loope
movsl
or
imulb
cmp
jge
stos
mov
push
outsl
fcompl
daa
xchg
hlt
or
daa
inc
inc
ret
dec
shrl
ja
jns
pop
fimuls
jae
and
or
or
sti
in
stos
and
xchg
outsb
enter
pop
out
cli
add
mov
in
fnstenv
pop
mov
push
lret
test
mov
mov
jp
xor
stos
inc
xchg
or
jle
sub
rcrb
loopne
mov
jb
and
adc
xchg
cld
mov
fistpll
loopne
in
xor
jle
xor
insb
fldt
dec
stos
stc
call
inc
mov
js
out
push
shrl
inc
jae
push
inc
mov
mov
ret
jmp
jle
rclb
mov
adc
scas
push
aad
imul
ret
sbb
pushf
mov
ficompl
out
push
insl
repnz
inc
pop
addr16
inc
sbb
push
push
das
leave
mull
repnz
std
and
popa
mov
lds
fidivs
adc
int3
rclb
add
mov
or
mov
xchg
lods
lock
jge
mov
adcl
xlat
movsb
inc
xor
and
inc
mov
adc
and
or
xchg
dec
clc
arpl
or
jno
xchg
xor
stc
mov
pop
enter
in
add
adc
add
test
adc
shll
lahf
loop
adc
in
mov
movsl
movsl
lret
push
ds
adc
sub
jge
loope
dec
push
push
ja
pop
mov
jno
pop
mov
ret
verw
sbb
out
xor
mov
ss
jo
adc
nop
and
push
sahf
add
test
push
or
daa
or
pop
mov
lcall
lahf
cmc
push
cli
lea
mov
mov
iret
mov
test
jg
mov
or
push
test
pop
sahf
inc
ror
sbb
push
mov
push
and
imull
mov
popa
cmp
les
adc
in
popf
fs
mov
stc
outsb
test
loop
push
mov
je
xor
cmpsl
es
push
call
push
cmp
xor
xor
jnp
and
inc
cmp
data16
ja
fcoms
push
out
into
pop
dec
dec
push
loopne
inc
gs
cli
sar
out
sti
in
jmp
in
nop
lods
in
mov
mov
mov
stos
fstpt
mov
mov
test
bound
xlat
les
pop
push
inc
in
repnz
cs
rclb
mov
or
outsl
pushf
sar
adc
faddp
mov
sub
cwtl
sti
and
fisubrl
jecxz
and
stc
inc
xchg
dec
xor
push
aas
push
add
inc
outsl
and
mov
int3
pop
mov
in
stos
dec
sbb
aaa
adcl
hlt
std
cwtl
or
std
sbb
in
divb
shll
cs
xchg
idivl
das
add
mov
mov
adc
scas
push
push
cld
sahf
jbe
icebp
mov
jecxz
xchg
inc
or
dec
adc
pop
sbbl
ret
stos
popa
loop
push
inc
sub
mov
outsl
pop
repnz
pushf
and
gs
sub
popa
scas
push
stos
ljmp
add
test
sbb
push
add
inc
test
xchg
out
add
jge
shrb
mov
jecxz
out
rcr
stos
add
std
mov
icebp
cmp
sbb
jno
xchg
sahf
daa
test
in
dec
pop
repz
xchg
sar
test
xor
xor
or
push
dec
ret
add
adc
push
fwait
push
jae
or
leave
testl
divl
mov
pop
cltd
int
mov
gs
xchg
xchg
pop
pop
ss
sarl
js
pop
out
push
out
fldenv
mov
out
jne
ljmp
imul
dec
call
push
jp
into
xchg
addr16
sahf
lret
mov
imul
pop
adc
xchg
iret
enter
mov
pusha
rcll
in
sbb
jle
pop
jge
inc
xor
inc
es
xchg
ja
stos
insb
jnp
dec
inc
cld
mov
lahf
dec
sbb
xchg
mov
jae
cwtl
loope
jmp
pop
imul
iret
fst
adc
xchg
pop
test
mov
imul
mov
xchg
addr16
jle
dec
negb
jno
and
cmpsl
fisttpll
pop
dec
fisubs
dec
push
hlt
sahf
add
leave
outsb
mov
repnz
sti
and
jl
popa
adc
cmpsb
pop
inc
stos
fmulp
mov
push
mov
aaa
sbb
loope
push
lcall
dec
ror
movsb
int
add
and
movsl
scas
icebp
adc
js
stos
xor
out
xor
jl
inc
and
pop
jmp
daa
dec
sub
enter
in
call
movb
lock
push
jo
test
movsb
push
or
mov
push
ds
inc
cmp
jmp
loope
stos
movsl
push
inc
cmpsl
pop
sti
add
pop
leave
push
rcl
data16
xor
ds
add
insl
hlt
sbb
outsb
sbbb
jge
adc
adc
adc
repz
sub
dec
mov
mov
js
lcall
call
int
inc
xchg
push
std
sar
and
mov
dec
mov
mov
jg
mov
and
js
cmc
and
sbb
cltd
mov
cmp
lret
inc
imul
fdivs
cmp
pop
test
rorb
stc
and
fmuls
dec
faddl
cmc
das
xor
in
mov
push
xlat
xor
adc
pop
pop
sub
mov
lods
ret
test
sti
adc
inc
xchg
adc
mov
or
loopne
xchg
andl
mov
fwait
daa
and
sti
adc
mov
ficoml
ljmp
sbb
ja
push
repz
repz
cli
dec
lea
nop
add
sti
cs
jns
jmp
lahf
or
cltd
jl
cmpsl
bound
call
xchg
fisttpll
pavgw
int
je
pop
cmpsb
dec
stos
mov
outsl
aas
mov
xchg
inc
mov
incb
push
mov
fcmovnu
cmp
dec
mov
pop
subl
or
cli
dec
xor
mov
lea
repz
icebp
and
adc
jae
sbb
loope
mov
mov
push
xor
lret
push
dec
ret
int3
in
icebp
gs
jne
lds
cmpsl
dec
fcoms
or
mov
es
or
ret
cmp
mov
loope
push
rorb
and
loopne
xor
cmp
daa
gs
lods
mov
shll
dec
hlt
ljmp
cltd
clc
in
jg
fsubrl
or
mov
pop
test
sahf
add
pop
xor
cltd
jmp
pmaxsw
mov
ja
aaa
rorl
sub
mov
movb
xchg
roll
mov
ja
xor
test
sbb
jo
sar
stos
les
jno
sub
mov
rcrb
or
xchg
inc
lock
dec
mov
in
pop
push
mov
jns
test
call
xchg
sub
add
out
push
sub
mov
hlt
int
adc
jae
cmp
jns
ficoml
xchg
mov
mov
sbb
outsb
or
push
lret
xchg
dec
out
aas
mov
or
jmp
mov
int
pusha
pop
pop
stc
in
push
push
jnp
into
dec
insb
mov
shlb
xor
mov
mov
adc
push
pop
lods
in
jae
or
pop
mov
mov
cmp
inc
adc
rclb
gs
scas
sbb
sbb
xchg
mov
cld
aaa
inc
lock
push
cmp
dec
inc
pop
cmpsl
or
popf
scas
hlt
jmp
lods
sbb
movsb
sub
mov
xchg
or
jp
push
fidivrs
rcrl
mov
add
adc
imul
addr16
and
xchg
pop
push
jbe
shrb
in
push
movsb
pop
pop
mov
and
out
scas
sarb
rorl
jbe
shlb
ljmp
dec
mov
pop
std
outsb
daa
dec
in
enter
in
iret
jp
cmpsb
or
inc
add
push
sbb
test
ja
pop
lahf
and
or
and
js
sbb
jmp
sub
xor
shlb
inc
push
ret
cmp
xor
mov
pop
lock
xor
mov
sbb
mov
je
aas
rolb
in
icebp
sbb
in
mov
fs
je
pop
lcall
sub
lds
add
ds
adc
mov
es
icebp
sarl
rolb
jl
cmp
xchg
push
sbb
imul
lret
je
test
inc
xlat
cmp
dec
int
adc
out
fs
pusha
es
fsubrl
jb
cmp
out
xor
xchg
pusha
into
stos
hlt
popf
or
push
or
mov
xor
lcall
daa
lock
test
inc
data16
or
inc
xor
outsb
lds
inc
adc
outsb
loopne
fs
mov
sti
dec
daa
jbe
dec
leave
mov
cltd
inc
rcl
sub
jo
pop
dec
imul
sbb
jb
mov
adc
nop
fstl
aad
jns
cs
push
sub
pushf
pop
xchg
adc
pop
pop
ret
scas
cmp
out
and
pop
push
jecxz
mov
mov
and
pop
aas
push
xchg
inc
mov
pushf
cmpsl
fisttpl
cmc
xchg
dec
pushf
cmp
shll
iret
mov
mov
aas
sbb
push
adc
cli
mov
roll
adc
mov
mov
repz
pop
les
ret
xor
lret
lea
cld
hlt
mulb
cmp
aad
clc
je,pt
inc
push
pop
dec
push
shll
insl
ret
movsb
pop
mov
leave
push
in
aam
jae
sub
push
dec
shl
insl
pop
pop
xor
ret
int3
popf
mov
xchg
xchg
lods
and
inc
ljmp
push
clc
pop
pop
add
sahf
push
mov
mov
fmull
test
rol
add
arpl
shld
push
je
pop
xchg
or
sub
xchg
dec
pop
and
ljmp
mov
int
pop
dec
sub
mov
add
cmp
ret
or
push
xor
arpl
add
leave
push
pop
cmp
fwait
mov
adc
mov
inc
xchg
dec
lods
and
pop
sysret
dec
mov
jmp
adcl
ljmp
andb
xchg
aas
push
mov
adc
mov
sbb
cwtl
mov
and
lahf
rorb
xchg
sarb
mov
or
lcall
dec
jg
orl
dec
jmp
jne
fists
adc
pusha
divl
dec
jle
xchg
jnp
xor
sbb
inc
and
pop
xchg
stos
push
mov
fstpt
in
mov
xchg
jae
rorb
fidivrl
push
pushf
data16
fwait
in
pop
adc
lahf
push
cmp
nop
imul
cmp
mov
flds
and
dec
dec
add
bound
arpl
fstl
pop
dec
repz
cld
shlb
sbb
mov
fmul
xchg
adc
add
mov
aaa
cltd
test
jge
add
jbe
cs
push
ljmp
cmp
pop
inc
scas
scas
jmp
jo
mov
xor
mov
hlt
dec
inc
mov
jl
fwait
mov
sub
cmp
and
enter
in
mov
mov
dec
sub
push
out
xchg
test
dec
cli
jp
aas
into
pop
and
cmp
in
cmp
dec
in
loope
fstpl
pop
jns
cmc
js
scas
je
pop
jmp
xlat
xor
add
push
push
sbb
dec
fwait
addb
shll
popa
sbb
mov
idivb
fdiv
xor
push
lret
mov
test
sub
outsb
outsl
int
das
mov
add
out
mov
mov
lds
imul
test
in
lea
int3
jg
mov
rcl
jecxz
and
shlb
cmp
lea
adc
out
mov
out
xchg
loopne
loop
jg
outsl
pop
mov
add
mov
push
cmp
mov
fidivs
mov
cli
mov
push
int3
mov
mov
mov
xchg
add
in
pop
adc
fwait
es
negl
cwtl
stos
loopne
dec
inc
gs
adc
in
inc
sti
stc
ljmp
dec
jbe
sub
pop
xlat
push
negb
andl
repz
hlt
stos
fbld
adc
dec
dec
jbe
nop
mov
ljmp
sub
adc
icebp
adc
xchg
cs
mov
jecxz
lock
repnz
rep
jb
cwtl
or
repz
aas
inc
sarb
cltd
mov
jno
dec
xchg
add
pop
popf
or
ret
mov
test
xchg
repnz
or
dec
inc
rcll
cmp
mov
lahf
fs
fisttpl
pushf
mov
or
icebp
adc
jae
sub
cmp
add
insl
stos
arpl
pop
lret
insl
aam
fucom
sub
push
mov
fcomps
dec
xor
and
into
cmpb
mov
popa
repz
into
xchg
cwtl
jno
clc
pop
cmpsb
lock
dec
mov
push
test
jecxz
cltd
pusha
out
add
pop
lsl
push
dec
jnp
xchg
push
sub
insb
inc
stos
sarb
push
shl
es
sbb
xchg
jns
outsb
inc
repnz
test
add
shll
or
inc
xor
push
lock
mov
adc
add
sti
cmp
loop
xor
dec
lahf
dec
ja
pusha
mov
mov
cs
xchg
inc
jg
in
cld
or
outsl
mov
cmp
jbe
cmpsb
mov
dec
cli
jne
mov
sub
lret
mov
mov
jp
xlat
adc
scas
inc
or
jbe
sub
int3
xor
xchg
sahf
and
mov
fbstp
pop
es
xchg
and
in
cmpsb
jle
mov
insb
xchg
push
stos
lds
in
mov
popf
adc
sub
or
aaa
mov
das
pop
push
cmpsb
pop
ret
or
incl
shll
scas
jecxz
add
sbb
pop
mov
fisubl
je
out
xchg
xchg
push
or
stc
inc
gs
arpl
and
roll
mov
int
or
mov
faddp
data16
clc
pop
int3
jl
inc
add
pop
or
mov
cltd
idivl
jbe
fists
out
shlb
inc
and
pop
dec
scas
mov
jo
jmp
xor
cwtl
pop
ja
mov
mov
mov
ret
jno
mov
adc
daa
inc
jecxz
enter
in
popf
clc
dec
cmpsb
int
and
jecxz
push
mov
mov
dec
adc
pushf
lahf
pop
flds
movsl
shrl
ds
in
cmp
test
ret
loope
lods
sub
fldl
js
inc
inc
pop
ds
scas
or
add
inc
inc
sbb
scas
push
push
cmp
xor
enter
scas
adc
sbb
or
lret
fsubl
cwtl
ret
cmp
pop
scas
lcall
ret
push
push
push
aam
mov
mov
pushf
mov
or
xorb
test
sbb
leave
mov
pop
shrl
lret
xor
xchg
xor
cmpsl
ss
cmp
shlb
and
ljmp
mov
adc
inc
sub
xchg
jo
dec
or
mov
cmp
scas
mov
cli
icebp
ss
out
mov
mov
adc
push
cwtl
cltd
add
adc
call
xor
pop
fs
pop
inc
sub
mov
xchg
test
adc
cmp
lods
mov
jg
and
cmpsl
adc
sbb
rcrb
ljmp
inc
cmp
mov
mov
nop
xchg
push
pop
aad
mov
mov
pushf
insl
popa
push
adc
push
and
popf
pop
lods
sbb
call
mov
mov
pop
je
pushf
orb
fidivl
dec
test
xchg
sbb
inc
fcomi
outsb
inc
int3
in
fstps
and
fisttps
out
sub
mov
mov
addr16
cwtl
idivb
std
mov
hlt
testb
sub
leave
push
mov
jecxz
es
jle
into
lock
mov
nop
leave
cld
dec
and
mov
inc
aad
dec
cld
push
jno
xchg
push
xor
lea
out
adc
pushf
movaps
jl
rolb
shl
cmpsb
mov
icebp
and
lods
mull
popa
or
mov
mov
test
clc
xchg
subb
test
xorb
jg
cltd
xchg
lahf
inc
add
pop
punpckldq
mov
xchg
xchg
inc
sub
rcrl
rorl
stos
sbb
or
xchg
aam
test
loop
dec
negb
add
pop
push
loopne
or
mov
lcall
cwtl
add
rcll
add
sahf
cmp
or
cwtl
pushf
inc
mov
test
ja
sbbl
bound
jno
lea
arpl
jns
cmp
movsl
fsubr
push
daa
add
push
jg
mov
test
mov
inc
ficomps
movsl
adc
sub
dec
pop
std
subl
mov
jecxz
adc
fists
pusha
sub
cmpsl
pop
jle
xchg
jnp
inc
adc
inc
and
inc
lret
dec
pushf
push
inc
jmp
les
aam
mov
clc
insb
inc
lock
xlat
pop
inc
pop
or
ret
iret
pop
push
icebp
adc
aas
mov
dec
shrb
ss
sbb
pushf
sbb
sbb
inc
insl
xchg
cmp
or
push
pop
into
hlt
lret
leave
dec
imul
popf
clc
sarl
call
pop
loopne
pushw
mov
lcall
mov
mov
pop
dec
push
sbb
jge
std
stos
jbe
inc
inc
push
mov
mov
cmp
lods
in
scas
insl
aad
jo
cmp
xor
jnp
and
jl
aas
cmp
out
cmp
test
lods
enter
in
test
dec
inc
scas
test
jl
push
test
lock
in
lahf
jge
outsb
and
push
clc
movsl
enter
sbbl
cmp
popf
sub
cld
jge
adc
js
pop
idivl
cmpl
add
gs
xor
jb
inc
xor
loop
add
lea
xor
pop
xchg
pop
cmc
rclb
pop
xchg
adc
jg
pop
sub
dec
notb
xchg
xchg
sub
sub
int
scas
jbe
or
and
fsubr
mov
adc
mov
aad
mov
in
jg
mov
orb
test
inc
out
outsl
xchg
fstpl
sub
mov
inc
roll
outsl
lret
mov
fsubs
les
adc
es
xchg
add
add
outsb
loop
imul
outsl
lds
ja
dec
adc
into
push
sub
or
hlt
cmp
and
cli
and
jg
and
orb
ds
xchg
jns
add
nop
adc
inc
xlat
imul
xor
loopne
dec
dec
gs
sti
push
mov
stc
mov
bnd
push
xlat
out
test
sbb
subl
insl
jo
cmc
subl
dec
or
dec
or
pop
aad
clc
jmp
jmp
outsb
pushf
sbb
movsl
pop
jae
out
sub
adc
lea
jbe
jmp
es
jo
sahf
dec
xchg
push
xor
inc
testb
pop
mov
mov
dec
pop
mov
addl
int
cwtl
mov
es
pop
dec
arpl
ret
rclb
shrl
loope
and
scas
es
jbe
mov
lock
sub
mov
xchg
insl
mov
lret
fcmovu
sub
jne
shl
shl
mov
inc
fcoml
div
xchg
insl
js
cmpsl
adc
jbe
sbb
popa
scas
fisubrl
mov
jnp
pop
lea
mov
dec
lods
jno
adc
mov
lods
bound
popa
and
xor
clc
shl
add
js
lea
mov
pop
test
outsl
xchg
cltd
into
sti
jae
jno
pop
xadd
leave
xchg
ficoms
cwtl
out
mov
stos
mov
jle
and
sbbl
xor
xchg
test
aam
dec
pop
mov
icebp
mov
mov
xor
mov
frstor
adc
fwait
inc
push
daa
or
pop
cmpsl
inc
dec
sub
sub
pop
inc
mov
mov
mov
jae
jecxz
int
rcrl
bound
xchg
adc
mov
icebp
fidivs
mov
push
mov
call
test
bound
movsb
cli
mov
ljmp
shl
and
xor
inc
jmp
out
inc
jmp
pusha
enter
in
test
jle
jae
jnp
in
jno
pop
add
pop
xchg
aaa
stos
stos
stos
mov
mov
bound
cmp
and
jae
jns
inc
sti
adc
pop
jl
xchg
ret
push
iret
mov
mov
out
scas
test
enter
mov
xchg
sbb
and
int3
sbb
in
scas
push
xlat
inc
in
imul
hlt
adc
repnz
mov
add
pop
lds
lret
sub
dec
mov
push
mov
mov
repnz
rep
jge
push
jmp
in
pop
push
xlat
sahf
movsb
test
in
inc
mov
jo,pn
pushf
xor
orl
dec
xchg
out
jl
push
lret
fs
sub
push
daa
inc
icebp
xlat
enter
in
imul
cmpsb
shll
dec
inc
ds
adcl
test
ret
push
lahf
lahf
pushf
sti
pop
and
xor
cmpsb
inc
jl
mov
xchg
cmpsl
loope
mov
push
enter
sbb
js
and
push
xor
je
add
daa
push
sbb
stos
cmpb
lock
repnz
jbe
andb
sub
sbb
shlb
pop
pop
lods
leave
loopne
jl
add
nop
ret
std
push
or
shll
pop
sbb
mov
gs
jg
les
test
sti
jmp
mov
fcmovbe
lret
mov
movsl
mov
dec
cmp
push
outsb
adc
or
xchg
sar
mov
sub
movsb
pop
xor
mul
jmp
into
ss
or
daa
pop
cmp
and
sbb
cli
push
jne
out
subb
push
inc
pop
lods
inc
mov
data16
out
add
adc
imul
addr16
pop
add
in
loopne
outsb
gs
js
decb
lods
sti
push
into
in
adc
subl
add
xlat
and
fcom
sbb
inc
xor
repz
test
xchg
int3
outsb
inc
pop
sbb
dec
push
push
ret
xchg
fsubrl
pop
pop
adc
add
mov
ret
mov
test
pop
es
popa
stos
or
call
mov
in
divl
je
shlb
adc
jb
dec
jle
rol
sub
sub
pop
pop
jnp
fcmovnb
jge
dec
dec
pop
sbbl
mov
in
add
adc
push
sbb
jle
xchg
and
call
ljmp
iret
add
in
xchg
inc
mov
pushf
adc
lret
dec
in
cld
mov
jo
mov
inc
addr16
insl
pop
clc
popa
es
jle
ret
add
push
imulb
mov
dec
shrb
xchg
mov
push
adc
mov
xchg
add
lods
int
andl
adc
xchg
push
aaa
aaa
clc
or
or
lahf
mov
xchg
inc
outsl
mov
pop
std
test
mov
cltd
add
lahf
dec
mov
in
push
loopne
iret
xchg
and
xchg
mov
pop
into
int
sar
push
xchg
sbb
adc
test
pop
insb
dec
or
cwtl
inc
xor
insb
cmp
xor
int
call
lea
scas
mov
fwait
jo
outsl
or
clc
add
dec
js
mov
clc
dec
pop
sti
imul
test
stc
in
sub
jns
stos
movsb
into
mov
mov
neg
lret
dec
test
push
mov
xchg
ss
jmp
addr16
or
cmp
mov
add
out
lcall
jmp
rcll
pusha
arpl
icebp
in
lds
jnp
pop
outsl
insb
enter
push
or
stos
push
ret
mov
mov
push
sub
jae
aas
mov
cmp
ret
cmp
pop
dec
pop
adc
mov
scas
or
xchg
push
cmp
pushf
adc
jg
testl
jp
or
outsb
xor
cli
hlt
pusha
jle
leave
cmp
push
repnz
das
inc
mov
push
and
sbb
imul
cmp
or
pop
rcrl
lret
jge
xchg
push
es
lock
jne
aas
and
xchg
fwait
scas
sub
jmp
lcall
push
inc
nop
dec
add
jl
xor
jno
add
out
daa
inc
jge,pt
out
pop
out
push
arpl
int
mov
test
xchg
xor
lahf
mov
sbb
movsl
dec
out
ds
bound
add
cmpsb
loope
repnz
lret
adc
jne
mov
test
pop
and
clc
inc
mov
mov
adc
cld
orb
into
ror
jp
adc
inc
movsb
test
xchg
jp
fsubl
cld
or
sub
in
sub
xor
idivl
and
jp
mov
mov
mov
xor
jg
test
cs
sahf
mov
mov
mov
sbb
out
icebp
cs
fs
xlat
fcomp
jl
cmp
cltd
mov
mov
stc
outsl
and
pop
ds
outsl
sbbl
cmc
fsts
into
sbb
and
cmp
jle
xor
dec
cli
mov
dec
mov
scas
lods
sub
jmp
xchg
cwtl
fwait
add
inc
stos
adc
cmp
imul
shl
pop
and
sti
loopne
mov
inc
jno
lock
mov
hlt
in
jge
mov
sub
lock
xlat
addb
jns
sbb
stos
test
or
cld
les
mov
fxch
in
jb
lret
nop
and
inc
aad
xchg
stos
cs
jb
pushf
outsb
loopne
adc
sub
sub
scas
call
icebp
jbe
out
dec
jecxz
push
je
shll
jb
popf
adc
outsl
sbb
inc
popa
aas
iret
pop
xchg
hlt
fcomi
or
xorl
sbbl
mov
testb
ror
mov
xor
pushf
jge
das
sbb
lock
adc
sub
mov
xor
sbb
inc
jbe
dec
in
in
dec
insl
inc
inc
shlb
sbb
xchg
aam
rclb
sub
xor
mov
pop
loopne
mov
inc
add
insl
popa
dec
std
imul
icebp
inc
xchg
xchg
mov
ffree
sub
push
pop
pop
mov
adc
test
dec
cltd
cmp
repnz
call
pop
xchg
insb
out
out
jbe
jae
mov
je
jns
add
push
lods
push
sbb
mov
sbb
sub
frstor
cmp
and
bound
sar
or
add
mov
add
xchg
loop
lahf
or
or
pushw
cmpsl
ret
dec
imul
les
loope
jae
adc
subl
dec
inc
ret
bound
xor
repnz
sti
jne
gs
dec
mov
mov
mov
lds
out
mov
scas
jecxz
mov
mov
xchg
lret
jmp
xchg
sbb
mov
leave
pusha
movsb
fwait
in
push
jle
sub
insb
xor
in
xchg
mov
push
add
dec
mov
mov
out
push
jmp
mov
inc
adc
popa
ret
mov
jbe
repz
mov
mov
push
rcrl
pop
ljmp
loop
inc
ljmp
or
jno
shlb
add
aaa
leave
scas
in
push
repnz
cwtl
movswl
push
das
lds
out
pop
mov
mov
add
adc
push
rolb
jge
mov
arpl
pop
outsb
movsb
lcall
and
mov
jo
pushf
or
and
sbb
xchg
jl
in
cld
jno
lret
xchg
stos
movsb
daa
inc
jl
in
cmp
inc
pop
add
test
imul
and
lahf
mov
ds
je
cmp
adc
loope
push
iret
push
and
mov
add
push
fwait
pop
fidivl
mov
data16
je
sub
fsubrs
movsl
scas
cmp
test
adc
test
sub
sub
jle
stos
lcall
pop
sub
jecxz
pop
lcall
divb
jl
pop
add
mov
stos
adc
idivl
mov
mov
icebp
sbb
or
adc
in
jle
and
pop
fcoms
pop
aad
fdivl
adc
mov
into
loop
das
pop
outsl
bound
xor
jg
cld
idivl
cmp
imul
push
ss
mov
pusha
mov
adc
sbb
mov
mov
mov
imul
insl
add
loopne
jmp
gs
mov
xchg
scas
ds
cmp
call
push
sub
push
mov
push
or
int3
xchg
or
fisubl
or
push
dec
xor
add
xlat
sbb
es
nop
call
aad
cld
and
cmpsb
pushf
sbb
fcoml
je
cs
mov
out
test
nopl
repnz
je
xor
push
jb
and
push
ja
inc
inc
lods
addr16
call
mov
lock
push
pushf
and
andl
loop
adc
push
inc
jmp
rcrl
enter
enter
bound
cli
aam
lock
fcoml
adc
dec
jge
notb
icebp
inc
cli
jge
sub
dec
cmpsl
inc
or
dec
call
jp
es
aas
in
and
aam
sub
pop
jmp
ljmp
and
jge
in
lock
lods
mov
out
or
xchg
int3
clc
cmpl
pop
mov
dec
and
call
loop
fimuls
and
fld
stos
jge
xor
pop
shrl
out
xchg
dec
cmp
xchg
jle
xchg
pop
cmp
test
hlt
or
or
xor
cmpsb
xchg
add
lcall
sub
or
test
inc
adc
aas
ja
fwait
push
pop
jno
mov
sbb
mov
inc
out
xchg
rcl
adc
bound
jns
subl
shll
addr16
adcl
dec
outsb
adc
jecxz
inc
mov
pushf
test
addr16
or
outsb
lods
sub
pop
subb
out
adc
sbb
xchg
addr16
stc
or
pusha
cltd
ja
in
je
jle
repnz
jnp
mov
insb
sahf
fnstcw
dec
pop
push
stos
add
sbb
mull
popf
xlat
imul
scas
cmp
jae
xchg
faddl
add
hlt
jl
push
sub
aad
adc
insl
mov
push
in
adc
rcrb
sti
sbb
jmp
xchg
pop
int3
ret
rcrl
push
or
add
arpl
das
sbb
testb
es
out
jmp
inc
rclb
sub
fdivp
test
pop
mov
repnz
add
pop
lods
or
xchg
aaa
adc
inc
jge
mov
mov
les
and
sar
cmp
scas
jmp
cmp
xor
pop
cli
pop
dec
pop
jl
js
jno
mov
cmp
adc
enter
in
and
cmpsb
pop
pop
and
jmp
bound
cmp
push
cmp
aad
stc
dec
pop
and
cmp
in
ret
ds
sarl
enter
loope
aam
push
out
sbb
repz
loop
add
in
jle
cmp
push
lds
jg
jmp
cmovp
xorb
out
sub
adc
or
mov
fdivr
jo
push
aad
pop
lcall
sub
in
mov
adc
sub
mov
out
and
leave
mov
sti
in
dec
sbb
push
xchg
test
lret
mov
fmuls
sbb
ss
test
out
sub
cmp
pushf
and
push
and
xor
xchg
gs
sub
into
fbld
iret
or
xchg
add
sub
xor
inc
lahf
cli
lock
and
sub
popfw
xchg
add
pop
mov
imul
popf
xor
dec
cs
jle
mov
sti
adc
aas
mov
mov
or
cmp
in
sub
xchg
idivl
test
cmp
cmp
stc
inc
cwtl
sbbl
sub
nop
ficompl
popa
aad
sahf
test
pushf
les
notl
lret
pop
rcrl
adc
aam
call
mov
pop
dec
jecxz
mov
cmp
clc
ss
fadds
inc
bound
into
pop
inc
movsb
xchg
fistl
mov
or
sti
mov
mov
nop
pop
cwtl
popf
mov
repz
ret
stos
dec
and
lea
sub
push
mov
fstps
lock
push
sbb
cmp
dec
mov
int3
pop
lret
xchg
mov
out
sbb
lret
inc
and
jecxz
loopne
adc
xchg
es
into
enter
pop
aam
inc
or
cltd
push
fwait
shlb
mov
mov
pop
lods
push
add
ljmp
test
mov
mov
adc
add
xchg
mov
aaa
leave
push
jno
rclb
cmp
out
insb
gs
iret
arpl
sbb
xchg
stos
test
dec
stc
xor
push
notb
mov
iret
fsubrs
pusha
mov
leave
pushl
add
fiadds
int
and
or
mov
dec
ja
xor
mov
shrb
in
dec
jno
mov
pop
adc
mov
das
shll
lahf
lcall
out
cmpb
mov
or
mov
or
ret
outsb
and
out
jmp
xorl
xchg
pusha
or
jmp
cmp
jns
xor
sbb
or
sarl
push
jnp
dec
subb
and
cwtl
stos
ja
sub
mov
push
enter
adc
inc
daa
insl
fstpl
mov
ret
pop
iret
xor
mov
push
sub
je
xor
mov
int3
xchg
jbe
xchg
cwtl
jns
inc
call
xor
or
ja
adc
popf
pop
hlt
inc
sub
repnz
mov
jl
mov
outsl
and
ficoms
inc
sti
int3
jl
add
out
pop
aaa
sarb
sti
jge
xor
icebp
push
push
adc
movsb
mov
in
cmp
fwait
mov
jo
in
dec
xor
ljmp
jl
fcomp
jno
shrb
inc
cmp
adc
cmpsb
fbld
jecxz
jae
pop
test
paddw
lahf
sbb
and
loop
movsl
jmp
repz
cmp
push
loope
jnp
push
push
loope
xor
test
cs
inc
mov
xor
xlat
adc
inc
mov
add
or
pop
cmp
pop
outsb
outsb
dec
nop
sub
fsubl
fcomps
test
cmp
push
add
sbb
test
lock
mov
cmpl
pop
adc
inc
test
int
adc
cmp
shl
jg
lret
mull
test
bound
adc
std
fs
push
stc
xchg
iret
loope
shrb
push
xor
nop
cmc
lods
push
into
ret
or
shll
pop
cli
cli
and
out
push
aam
aas
inc
mov
loope
jmp
lods
ljmp
mov
mov
and
sub
loopne
mov
pop
fisubrl
mov
in
mov
xchg
sahf
sub
cli
pusha
xlat
and
lcall
int3
jne
js
hlt
les
pop
fnstenv
jbe
stos
arpl
nop
mov
pop
aad
repz
jmp
mov
pushf
outsl
shr
adc
xchg
adc
repnz
cmpsl
push
fld1
pop
mov
clc
jns
je
stc
fisttpl
loope
jb
ret
les
dec
cmp
inc
jge
outsb
inc
notb
aam
addb
hlt
mov
cmpl
loopne
mov
push
cwtl
pop
sbb
std
notb
sbb
sarl
push
test
push
push
inc
das
mov
push
call
mov
imul
icebp
hlt
adc
nop
inc
sbb
aas
mov
insl
sti
mov
mov
arpl
sub
dec
pop
pop
sub
mov
outsl
pushf
out
mov
dec
stos
sbb
cmp
ljmp
and
test
popf
push
mov
xchg
push
test
or
cltd
loope
addl
pushf
in
push
dec
outsl
sbb
lahf
enter
pop
jp
inc
rcll
add
decl
pop
test
aaa
stos
dec
pusha
leave
jns
sbb
test
xor
cli
orl
or
cmp
adc
pushf
add
add
jo
or
dec
test
inc
aas
je
dec
inc
rep
ja
dec
adc
out
out
mov
add
imul
scas
push
jns
out
bound
dec
dec
out
ds
mov
lock
push
dec
dec
xor
adc
negl
xchg
jp
mov
lahf
cmp
mov
push
test
popa
lret
addl
adc
xchg
or
aad
pusha
iret
pop
dec
in
mov
jle
pusha
int
sbb
pop
insb
je
mov
jp
or
rorl
mov
and
loop
jae
jmp
pop
pop
push
ret
cmp
xchg
lock
adc
push
push
jae
cmp
aaa
push
mov
lds
movsl
fimull
mov
push
fisubrl
aaa
arpl
dec
mov
mov
leave
adc
imul
or
mov
mov
xchg
cmp
pop
sbb
jmp
inc
mov
aaa
xchg
cli
ret
test
jb
in
xor
fcoms
into
push
movsb
cmp
cmp
mov
and
pop
scas
cmpsl
bnd
push
mov
xor
int
pop
dec
mov
or
jno
lock
lcall
out
mov
push
inc
or
andps
je
test
loop
dec
lahf
aaa
xchg
xor
xchg
mov
cmp
cmp
fucomp
sub
call
xchg
push
loope
pop
jno
cli
js
jno
pop
dec
adc
add
enter
stos
add
adc
push
lret
cmp
sarb
cmpsb
sti
adc
rol
ja
push
ds
fmull
push
cmpl
fsubs
test
jecxz
mov
push
sbb
and
out
aas
mov
ljmp
add
adc
xor
and
inc
push
mov
mov
or
rorl
ret
mull
repnz
inc
in
cmp
movsl
imul
fs
stc
dec
cmpsb
popa
loop
cmp
outsl
inc
mov
mov
nop
cwtl
into
movsl
push
sbb
stc
lods
push
cmp
sub
xor
pop
jge
push
mov
mov
negb
enter
mov
fidivl
xchg
sbb
test
jnp
pop
lahf
imul
std
push
dec
sti
jno
xor
sub
mov
movsb
mov
xor
inc
loopne
sbb
adc
inc
mov
aaa
or
fldcw
ja
dec
inc
mov
nop
nop
jecxz
aad
test
dec
or
adc
hlt
addr16
movsl
ret
outsb
es
or
lea
aaa
mov
je
pop
cmpsl
dec
push
outsl
add
loop
aas
jmp
sahf
inc
cwtl
test
and
neg
scas
loop
dec
jmp
adc
mov
and
adc
jb
inc
inc
jne
push
push
xchg
rorl
cmpsl
lret
and
hlt
or
call
jnp
lock
inc
mov
test
cmp
je
sar
ja
pusha
icebp
lret
push
mov
cmpsl
fidivl
dec
aam
loop
outsb
es
enter
icebp
aam
add
sub
adc
pop
inc
or
mov
jbe
outsb
mov
std
mov
test
ljmp
xor
xor
pop
push
cmp
mov
fwait
test
sbb
and
add
jl
psubq
cmpsb
xchg
mov
mov
stos
dec
adc
shrl
in
rolb
mov
int3
xchg
push
mov
outsl
cmc
or
or
pushl
inc
or
adc
pop
fwait
pop
test
or
data16
push
sub
aaa
into
ja
out
xchg
pop
mov
in
inc
loop
xchg
mov
popa
sbb
bound
shl
mov
fldcw
dec
pop
fucom
mov
into
fwait
mov
and
lea
loope
addr16
ds
out
sub
in
add
xchg
fldenv
div
fucomp
movsb
nop
jge
loopne
sbb
aas
mov
in
out
jle
push
cld
jnp
adc
and
mov
jns
popa
mov
inc
push
mull
scas
sbb
cmp
lahf
in
ret
add
repnz
adc
popa
nop
push
mov
add
imul
and
xchg
and
mov
loopne
inc
out
xchg
push
inc
lahf
and
jge
dec
arpl
inc
shl
jmp
repnz
sti
mov
movsl
xor
shlb
fcmovnbe
push
inc
jp
int3
aam
cld
add
imul
push
mov
fistpll
hlt
jge
ja
push
push
mov
fbld
add
and
test
xor
mov
jl
sub
mov
jno
inc
mov
daa
jnp,pt
enter
in
aad
xor
cwtl
xlat
push
or
mov
lahf
push
ret
xor
movsl
stc
stos
adc
js
std
cmp
push
jle
sbb
loope
xor
loop
mov
leave
js
mov
mov
xor
jns
add
cmpsl
inc
sbb
jle
sub
in
rclb
push
adc
xor
mov
fdivr
cmp
push
fidivl
lcall
cmc
sub
push
cli
divl
and
mov
mov
mov
mov
mov
jg
mov
test
lret
in
cld
sbb
dec
mov
je
lret
hlt
negl
xor
fdivrs
inc
cmp
call
dec
mov
leave
cmp
add
jo
idiv
sbb
xor
clc
pop
cmc
mov
pop
mov
push
push
inc
cli
mov
gs
push
test
xor
psubsw
push
xchg
add
test
shrl
xchg
fstl
lret
pop
mov
xor
pop
xor
and
and
in
xchg
and
sub
das
mov
lahf
xor
push
sbb
fcom
mov
push
jg
les
stc
fabs
dec
xchg
mov
mov
aad
jns
lods
jae
jmp
push
dec
pushf
adc
jbe
pop
pop
sub
movsl
aas
callw
ds
hlt
push
inc
rol
jecxz
mov
dec
dec
mov
xor
inc
mov
roll
cltd
xchg
pop
sub
inc
dec
dec
lret
andl
or
mov
in
pop
int3
negb
mov
mov
jnp
stc
das
jbe
or
push
ret
in
mov
adc
jecxz
insl
cld
mov
mov
or
aam
mov
sub
inc
ret
pop
pusha
pusha
aam
bound
rcrb
or
pop
mov
jle
xchg
and
or
mov
dec
in
lret
sbb
xchg
iret
scas
mov
fisttpll
xchg
inc
mov
call
inc
cltd
dec
jno
add
adc
pop
dec
int
add
xchg
iret
mov
stos
cmp
sbb
shrb
roll
add
test
sahf
cli
dec
movsb
rolb
cmp
push
xor
cmp
lds
idiv
push
inc
add
lcall
push
mov
dec
fwait
mov
popf
inc
insl
pop
cltd
dec
sub
popf
ja
adc
pop
pop
mov
mov
xchg
mov
jns
bound
and
dec
sub
scas
xchg
jne
jecxz
dec
cli
mov
push
jb
clc
insb
adc
in
xlat
addr16
ret
mov
jae
and
ljmp
out
jmp
mov
mov
dec
lods
push
pusha
add
add
xor
out
dec
xchg
push
and
or
push
aas
xor
pushf
pop
push
popf
jae
clc
push
mov
jbe
inc
dec
and
pop
std
and
ret
in
push
pop
jb
fldcw
push
add
mov
ss
sbb
xchg
jnp
test
mov
mov
mov
insb
or
subb
sbb
enter
xchg
pop
repnz
jmp
ffree
inc
cwtl
lcall
cmp
int3
mov
mov
lcall
cltd
push
jbe
mov
dec
movsb
push
mov
cltd
and
insb
scas
gs
jo
jl
xor
xchg
cmp
dec
jl
icebp
jo
mov
lea
cmp
sub
in
mov
xor
daa
sub
push
aam
jmp
push
mov
and
pop
shll
fwait
sbb
cmp
lods
loope
dec
pop
push
movsb
jge
out
jns
js
push
pop
popf
in
mov
mov
add
lea
cmp
mov
mov
je
jae
adc
sub
cmp
fsubl
nop
sti
lcall
jle
fnstenv
int
dec
jl
and
and
shlb
dec
and
mov
cli
and
xchg
push
mov
or
lret
sub
fdivrs
movsl
jg
or
ss
cmp
xor
cmp
xchg
stc
mov
repz
outsl
mov
jmp
cmc
addl
or
xlat
mov
jns
xor
cli
mov
xchg
cmp
xchg
mov
xchg
add
mov
imul
inc
cmp
rolb
lods
incb
cli
sti
iret
stos
mov
mov
mov
xlat
fimuls
cmp
jnp
xchg
fwait
add
repz
jae
dec
sub
fstps
pop
stc
inc
in
jge
add
lea
and
sbb
adc
ss
dec
pushf
jo
jecxz
daa
sbb
int3
and
shr
xlat
movsl
jmp
pop
fldenv
add
pop
jecxz
xchg
dec
je
push
jge
jbe,pt
jb
mov
and
into
iret
sbb
pop
shlb
popf
fisttpl
or
sete
out
xchg
xor
xchg
pop
jb
fistpl
shll
stos
aad
pop
jno
mov
push
test
ja
push
rcl
mov
stos
cld
int
es
jns
cmp
cmp
nop
dec
iret
mov
fbld
sub
rcl
mov
out
shl
cmp
test
mov
test
and
pop
xor
cmp
mov
push
xchg
push
mov
inc
sbb
aas
add
pusha
pop
mov
jns
test
shlb
xchg
mov
ud1
push
fldl
pop
xchg
push
mov
add
jnp
mov
pop
lods
js
sbb
mov
cmp
push
xor
dec
xchg
out
xchg
bnd
dec
shrb
push
fwait
or
mov
add
into
outsl
push
pop
in
add
or
pop
xchg
test
ja
mov
pop
mov
int3
out
xchg
pop
enter
ret
xchg
dec
popa
sub
sub
out
mov
lods
movsb
jne
ret
fst
jnp
js
xchg
mov
add
addr16
lret
scas
sub
ljmp
xchg
mov
hlt
jmp
xchg
fildll
pusha
mov
jge
jle
sub
jnp
jmp
insb
mov
ret
push
or
jle
cmp
lcall
jae
sbb
inc
push
or
pop
xor
scas
ret
or
adc
inc
scas
shll
sbb
das
mov
sbb
inc
in
push
xchg
xchg
xor
xorl
arpl
adc
leave
jns
cmp
mov
clc
fistpl
cmc
fisubs
ja
pop
movsl
ret
stos
lock
sub
lock
into
enter
add
jbe
pop
mov
dec
loope
movsb
fsubr
sarb
arpl
dec
scas
inc
mov
jo
jg
xor
jbe
cmc
dec
or
icebp
jl
mov
ss
cmpsl
jmp
cmp
or
int3
xor
jmp
rolb
clc
push
lahf
push
leave
test
pop
in
lahf
xchg
and
and
mov
mov
lea
lock
loope
jg
push
xchg
push
jae,pn
js
les
repz
dec
repz
add
dec
sbb
jmp
jge
call
pop
sbb
cli
fnstcw
and
adc
push
ds
mov
and
icebp
icebp
xchg
pop
movsb
and
bswap
enter
and
inc
and
xchg
pop
xor
inc
icebp
or
shrb
push
sahf
sub
mov
rorl
lret
sahf
negl
mov
cmp
outsb
jo
adc
out
out
stc
jo
stc
loop
sbb
push
xor
repnz
cmc
dec
xchg
and
dec
dec
mov
cmp
pop
mov
cmp
pushf
cli
out
mov
out
pusha
rorb
jge
mov
add
adc
adc
jb
imul
cmp
insl
inc
jge
sub
scas
data16
jle
add
push
push
mov
std
xor
sbb
mov
repz
pop
cmpsl
inc
repz
push
les
pop
dec
inc
imul
cmp
xor
imul
jmp
push
pushf
sbb
adc
and
push
mov
mov
out
ret
movb
jecxz
mov
je
jae
dec
mov
push
jb
js
aas
enter
jmp
lods
addr16
jae
sbb
mov
adc
xor
ret
cwtl
inc
insb
sar
cmp
push
mov
shl
pop
push
and
test
mov
testl
lock
stos
mov
sti
or
rcr
cld
clc
mov
mov
cmp
dec
lret
insl
xchg
pop
mov
lods
bound
jge
cmp
test
rol
fwait
mov
mov
mov
dec
out
mov
and
mov
ljmp
sbb
jecxz
fstp
xlat
loopne
push
scas
mov
inc
test
movsb
cwtl
cltd
mov
fdivrs
ret
mov
pandn
sub
in
pop
push
pop
pop
es
dec
shll
inc
in
xchg
repz
test
push
rorl
mov
mov
inc
das
or
pop
insb
decl
sahf
ret
bound
push
cld
outsl
mov
or
xchg
inc
inc
fwait
shl
dec
adc
dec
ja
in
pop
shr
or
seta
xchg
stos
vpmulhuw
shll
and
adc
sti
mov
xor
mov
fistpll
mov
ds
push
pop
or
int
out
rol
addl
xchg
push
lret
mov
xchg
pop
pop
mov
mov
ds
fsubp
jle
lods
cltd
jnp
jl
insb
and
fisubl
test
stos
mov
mov
mov
shrl
inc
movsl
jae
sbb
das
inc
pop
inc
jp
imul
ret
lods
iret
psrld
adc
adc
scas
and
xchg
imul
or
mov
dec
ficoml
inc
aad
arpl
push
jbe
adc
jne
arpl
sarb
orb
mov
repnz
das
mov
negb
lds
sbb
les
loope
xchg
lahf
test
mov
out
aaa
lea
pop
jge
dec
xchg
jbe
in
push
sahf
outsl
jne
addr16
cmp
shl
and
scas
and
jo
xchg
test
push
pop
pop
lods
dec
jns
cmpsb
jl
and
icebp
cmp
inc
mov
enter
in
mov
cmpsb
outsb
xlat
scas
inc
inc
jnp
push
push
shrl
cs
mov
mov
aaa
and
imul
loope,pt
loop
shrb
push
xor
sti
fcmove
push
aaa
fsts
insl
lock
or
adc
xor
xchg
cmp
rcll
pop
pop
fiadds
inc
and
add
outsb
pop
pop
mov
cmovb
push
fbstp
ret
enter
mov
int
cwtl
xchg
push
daa
cmovle
pop
mov
aaa
mov
dec
mov
xchg
mov
sbbb
test
mov
sbb
mov
test
lret
jbe
pop
in
je
mov
push
cmp
mov
test
fs
xor
daa
imul
jnp
imul
adc
into
xor
lea
mov
push
cmp
pop
inc
xor
loop
cli
and
sbb
mov
scas
xor
add
cmp
imul
xor
loopne
sbb
xor
sti
sub
mov
std
sub
inc
xlat
pop
add
cmp
mov
sbb
and
fs
les
xor
xchg
pop
dec
mov
aad
mov
mov
jmp
ret
dec
adc
aad
pop
jno
in
and
call
sub
lret
pusha
sub
ret
je
and
sub
add
aas
outsl
push
inc
add
pop
inc
cltd
dec
popf
pop
push
mov
fldt
movsb
dec
mov
subl
mov
sub
pop
std
loope
imul
mov
roll
add
in
ret
mov
adc
xchg
lock
call
xor
xor
sar
and
icebp
daa
lret
sbb
cmp
dec
vpsubusb
into
push
ret
or
adc
arpl
adc
pop
ret
fdivr
mov
xchg
push
pop
mov
mov
dec
ret
jbe
ljmp
leave
clc
push
and
and
pop
and
inc
fsubrl
cltd
hlt
rol
add
or
push
xchg
jne
xchg
movsb
leave
stc
out
mov
stos
push
lahf
adc
rorl
ja
sbb
xchg
xchg
push
test
punpckhwd
sbb
sub
xchg
mov
xchg
mov
or
inc
icebp
xor
pop
test
cs
add
cmp
sbb
push
lahf
out
fwait
pop
test
or
movsl
test
inc
mov
ja
xchg
fstps
ficompl
mov
push
mov
inc
in
jae
jns
sbb
stc
sbb
out
ljmp
jne
stos
movsb
dec
mov
mov
pusha
mov
xchg
xor
cmp
adc
or
cmp
lock
pop
adc
adcl
and
fildll
imul
fwait
and
shl
insb
mov
dec
and
pop
lret
stos
sub
fs
cld
les
dec
mov
popf
call
clc
push
jae
daa
dec
inc
imul
ret
cmc
repnz
outsb
adc
adc
jmp
scas
xchg
das
imul
push
sbb
pop
xchg
sbb
fcmove
pop
mov
push
fstpl
inc
mov
mov
hlt
add
leave
addr16
repnz
rclb
dec
jl
addr16
andb
add
jle
or
push
and
jge
xchg
jbe
es
in
inc
adc
cmp
mov
and
sub
scas
add
jg
int
jp
inc
xor
sahf
dec
call
jge
jno
add
cmp
pushf
and
cmp
pop
enter
in
jno
out
cmpsb
icebp
xlat
push
inc
aam
push
xor
cld
notb
adc
rclb
into
movsl
adc
push
jle
xchg
jmp
repz
loope
pop
xchg
push
mov
pop
lods
icebp
sbb
xor
pop
adc
sbb
rcrl
xor
int3
inc
add
aaa
fwait
sbb
push
mov
sbb
adc
rcrb
insb
inc
fsubl
rolb
push
mov
mov
add
xchg
xchg
ret
push
adc
mov
dec
das
mov
data16
mov
fldl
ficomps
sahf
jo
push
sbb
jge
mov
sarl
lret
out
sbb
in
fsubrs
dec
cmp
hlt
mov
les
adc
fidivs
loop
or
outsl
pop
ror
xor
and
adc
or
cmpl
jnp
jmp
sbb
cmp
xor
mov
sbb
inc
imul
pop
cmp
push
loopne
add
aaa
mov
lods
js
sti
faddl
sahf
mov
jecxz
xlat
fwait
cmpsb
cmp
insl
sbb
in
test
push
push
int3
les
mov
mov
call
adc
xlat
mov
aad
ss
cmp
dec
pushf
jno
pop
adc
dec
pop
and
sbb
call
nop
nop
sub
or
dec
jecxz
ret
test
into
jb,pt
mov
aas
push
in
daa
inc
pop
aad
inc
and
pop
mov
imul
jbe
add
sbb
cwtl
mov
mov
not
xchg
shlb
xor
mov
movl
mov
mov
jge
cld
dec
cmp
inc
mov
cmpsl
cmp
stc
dec
shl
insl
gs
es
jp
fwait
mov
sub
xlat
shrb
jae
loop
aad
ljmp
mov
push
adc
popa
push
xchg
xchg
lret
mov
sub
and
xorb
ret
mov
cmp
inc
outsb
test
dec
cwtl
push
outsb
dec
mov
out
icebp
mov
stos
cmc
stos
and
pusha
shll
lea
xor
loope
sub
dec
lret
xchg
icebp
dec
mov
fsubl
mov
dec
mov
dec
and
add
jmp
add
inc
push
out
inc
cmpsb
outsb
or
xchg
inc
leave
dec
notb
divb
leave
scas
pop
dec
pop
out
mov
xchg
push
out
dec
mov
in
leave
xor
jbe
bound
push
mov
sbb
jne
mov
dec
xchg
mov
gs
push
xchg
aas
jp
and
addr16
cli
cmp
lahf
jae,pt
mov
mov
mov
mov
ja
add
leave
pusha
jno
dec
in
int3
mov
jnp
in
mov
testb
pushf
dec
and
test
cld
popf
jge
push
jae
xchg
push
pop
adc
int
adc
inc
and
pop
scas
ljmp
sbb
dec
jnp
xlat
decb
fidivrl
add
xor
push
inc
shrl
dec
push
arpl
xor
dec
mov
fimuls
repnz
shrb
lds
mov
or
xchg
in
aas
int3
imul
iret
pop
or
popf
pop
aaa
or
test
jge
movsl
xchg
jbe
fildl
push
cmp
push
movsb
jge
cwtl
cmp
and
loope
mov
xor
pop
sar
push
inc
hlt
jl
test
jns
pop
movsb
pop
daa
cmp
in
pop
add
inc
arpl
movsl
push
add
and
repz
lahf
icebp
aad
and
les
ds
cld
sbb
inc
and
sub
movsl
shl
sub
ss
lcall
testl
xchg
ret
into
dec
addl
mov
orb
popl
mov
cwtl
outsb
and
adc
push
jbe
push
lea
lcall
dec
sub
sbb
std
jbe
push
sub
xchg
mov
mov
mov
divl
jg
movsb
sub
xchg
push
test
lods
sahf
adc
sbb
cmpsb
mov
aas
rcll
lret
sbb
fsubs
push
jmp
cmpsb
pusha
jmp
aaa
mov
fs
stc
xchg
and
rorl
cmp
xor
andb
and
into
not
mov
xchg
pop
nop
cmp
push
or
shl
cli
mov
jl
sbb
sbb
xor
data16
pop
add
shlb
inc
insl
adc
adc
pop
pop
cs
loopne
std
pop
gs
iret
pop
fdivr
mov
sbb
mov
push
add
cmp
jae
xchg
cmpsl
dec
inc
repz
pushf
fxtract
rol
inc
xor
dec
jge
dec
nop
mov
mov
inc
and
pushf
mov
les
push
das
pop
xlat
mov
add
ret
pop
into
imul
into
or
scas
ss
jg
dec
sbb
jb
loop
aas
movsl
insb
mov
cmp
cmpsl
mov
pop
pop
add
dec
popa
adc
sbbl
sub
das
dec
fcomip
out
or
and
or
mov
shll
lock
hlt
mov
sar
mov
mov
cld
jns
xchg
icebp
aad
xchg
mov
cmp
dec
mov
pop
mov
ss
or
sub
jl
in
jns
push
testb
stc
push
pop
add
mov
mov
push
mov
lods
shll
into
ljmp
fdivr
xchg
dec
sbb
sbb
push
clc
pop
test
test
cltd
bound
add
sub
xor
aaa
addr16
xor
out
push
fadd
stos
in
outsl
pop
daa
mov
push
sbb
hlt
jmp
pusha
fisubrl
xor
int3
xchg
or
daa
adc
or
aas
shll
lock
ljmp
add
scas
push
add
in
mov
jne
pop
or
cmp
mov
ja
xorl
stc
and
mov
pop
cmp
inc
je
jns
ja
bound
test
out
test
dec
mov
push
jne
and
jmp
lret
mov
sub
sti
addr16
adc
or
mov
out
xchg
jp
out
jle
xchg
mov
push
shlb
fucomip
smsw
arpl
jle
call
popa
insb
popa
sbb
nop
stos
mov
push
jp
xchg
mov
ss
push
mov
pop
jae
inc
jb
jg
or
inc
test
iret
sub
add
push
cmp
dec
nop
mov
push
std
sbb
dec
xchg
xchg
cs
fidivl
mul
inc
loopne
pop
push
stos
or
hlt
arpl
loopne
cltd
or
inc
mov
aam
into
mov
inc
cmp
mov
lods
sub
push
push
movsb
mov
or
xchg
sbb
addr16
add
sbb
mov
movsb
or
mov
aas
popa
clc
and
enter
jne
adcl
aad
out
push
add
dec
fwait
insb
jl
stos
add
ss
xchg
or
mov
sub
cmpsb
divl
inc
repnz
test
cmpsl
or
and
pcmpgtd
dec
xchg
sbb
out
das
inc
sub
sub
inc
les
push
pop
movhps
adcb
cmc
rcrl
cwtl
jecxz
pop
lcall
loop
mov
sbbb
fs
shlb
mov
adc
xchg
lcall
ds
mov
xor
inc
pushf
int
cmp
push
xor
sbb
dec
sub
mov
add
dec
jbe
jg
out
subb
dec
sahf
mov
sbbl
xor
mov
stos
sbb
dec
negl
lods
xlat
cmp
jp
jmp
or
stc
dec
jne
loop
lret
xchg
outsl
sbb
cmp
cmp
add
retw
ficoml
xor
xor
sti
push
out
mov
mov
add
lods
sbb
data16
sub
sbb
imul
xor
js
inc
loopne
or
stos
repnz
sti
cmp
in
push
xchg
mov
cmpsb
and
xlat
sbb
cmp
pushw
jmp
xchg
push
pop
repz
les
in
inc
mov
dec
fmull
nop
lea
cs
jmp
bound
adc
js
pop
mov
lahf
add
call
pop
sub
jecxz
fmulp
je
sub
dec
xchg
cmp
mov
inc
push
out
inc
xorb
clc
xchg
pop
dec
dec
sub
xorl
pop
pop
mov
icebp
test
xor
cmc
std
mov
sub
and
xor
mov
in
fsts
das
mov
cmp
xor
nop
mov
mov
lret
jge
inc
cld
movsb
cmp
mov
aaa
and
mov
pop
insl
xor
es
mov
aam
jg
sub
loopne
adc
push
mov
cmpsl
insb
cwtl
mov
mov
lods
rcrl
popa
dec
adc
push
xchg
dec
mov
clc
iret
inc
xchg
jae
push
mov
dec
sahf
test
lds
push
fisttps
xchg
jns
jl
mov
push
pop
rcr
lgs
xchg
inc
cli
xchg
or
jge
mov
cwtl
xchg
cmp
xchg
sbb
inc
or
mov
add
inc
add
mov
inc
fwait
movsb
xor
or
aas
inc
divl
dec
fadd
and
mov
mov
mov
loopne
xchg
out
pop
in
jb
jns
sbb
bound
cmp
xchg
jne
clc
jg
dec
out
mov
dec
gs
mov
add
jp
repz
xchg
scas
push
or
lds
jns
ljmp
xor
gs
sbb
xchg
mov
in
dec
ret
jle
cmp
insb
int3
sbbl
push
mov
inc
stos
popf
pop
jge
push
dec
test
jae
cmp
enter
arpl
int3
cmpsl
xchg
iret
mov
fistl
sti
pop
mov
scas
mov
cmpsl
imul
fs
test
xchg
inc
pop
or
or
xchg
cmc
arpl
pushf
hlt
in
out
int3
pop
int3
repnz
xchg
mov
bound
lds
ficoms
and
nop
fst
int3
inc
mov
dec
or
and
mov
sbb
mov
push
ficoml
movsb
xchg
cli
cmp
cs
and
stc
ljmp
int3
mov
dec
xor
jle
jno
xchg
ret
daa
aaa
adc
in
es
cmpsb
jp
fs
orl
test
jp
daa
lahf
das
pusha
dec
and
mov
insl
and
cmp
test
loope
scas
aad
aas
int
pop
imul
cwtl
sbb
aad
insb
adc
dec
sbb
out
pushf
pop
inc
cmpsl
rclb
mov
cld
outsb
jmp
test
fsubl
xor
lcall
push
sub
in
push
xor
scas
and
adc
mov
lds
pop
das
dec
or
mov
jae
xchg
sahf
pop
pop
mov
mov
and
push
movsb
negl
pop
fcomps
lret
mov
push
add
fs
icebp
es
add
sti
clc
mov
aad
xor
push
into
mov
mov
jmp
outsb
jno
cli
out
cwtl
es
push
in
mov
push
xlat
lods
add
inc
add
pop
adc
xchg
nop
imul
cmp
xchg
cmp
loopne
xor
gs
dec
xlat
adc
inc
imul
and
add
cmp
inc
xlat
pop
movsl
in
sbb
aas
sbb
sub
xchg
dec
les
xchg
inc
push
push
ja
push
push
cs
lock
es
jb
out
xor
pop
cmp
icebp
jb
mov
dec
mov
adc
jecxz,pn
push
ljmp
jmp
jb
sub
mov
inc
mov
push
pop
mov
push
cmpsl
dec
aaa
adc
or
aam
mov
nop
mov
std
jge
dec
imulb
mov
cmpl
mov
mov
xchg
mov
mov
cmpsl
scas
mov
sarl
cld
iret
ja
icebp
cmpl
pop
or
cmpsl
bound
insl
sbb
es
loopne
dec
mov
aam
sub
shl
nop
out
aas
in
mov
scas
call
mov
cmp
mov
ljmp
imul
lcall
mov
jb
test
in
rorb
add
imul
decl
xchg
rcrb
stos
ret
pop
jge
push
shll
push
sbb
xor
test
mov
insb
xchg
inc
mov
mov
enter
push
mov
stos
je
add
mov
aaa
and
mov
or
and
mov
cmpsb
cmp
pop
jp
add
pop
aam
xchg
xor
lds
bound
mov
out
lahf
mov
inc
dec
jne
das
imul
cwtl
mov
fsubrs
imul
jmp
addr16
into
insb
or
mov
ret
orl
xchg
dec
ret
pop
clc
cmpsb
xchg
js
mov
and
in
lahf
je
daa
jg
jnp
rorl
aaa
mov
fldcw
clc
insl
cs
test
push
bswap
or
ja
inc
xchg
dec
sahf
pop
jle
loop
fcomip
push
iret
ljmp
push
repnz
cmc
scas
adc
pop
sbb
aad
xchg
faddl
ficoml
mov
imul
xchg
pop
leave
inc
lahf
cmp
jp
mov
sarb
adc
repz
adc
sti
gs
sub
cmpsl
add
dec
aaa
dec
push
repnz
cmpsb
jge
pop
inc
jbe
mov
push
sub
shld
xchg
cmp
inc
imulb
cmp
and
arpl
push
enter
movsb
pushf
mov
gs
cmp
hlt
ret
daa
adc
or
popa
mov
push
popa
pop
addr16
dec
xlat
lret
lahf
dec
stos
add
or
shll
nop
cmpsb
out
cmp
add
loope
mov
sub
test
repz
add
rcl
movsl
lea
cmp
add
pop
and
insb
xor
and
adc
in
fdecstp
adc
dec
mov
mov
and
lcall
mov
flds
ss
and
push
push
mov
xor
jg
jp
and
add
cld
lcall
jmp
cli
mov
les
lret
push
notl
into
push
fcoms
bound
add
pop
fs
dec
stc
mov
pop
pop
outsl
mov
cmc
hlt
das
into
into
mov
or
cmp
and
cli
and
and
adc
cmp
lods
out
fwait
data16
add
adc
add
imul
nop
pop
mov
stos
loopne
imul
sub
cmp
aad
in
add
add
scas
and
xchg
push
mov
push
sarl
lock
jecxz
mov
ret
les
aad
inc
imul
nop
inc
les
cs
adc
jl
adc
mov
cmpsl
call
sub
rol
push
add
jecxz
or
subb
movsb
and
addb
inc
mov
inc
cmp
sub
inc
sahf
mov
dec
and
scas
sbbl
ret
mov
mov
cwtl
cmpsb
mov
pop
divb
cmp
cs
adc
sbb
outsb
inc
enter
scas
mov
sub
mov
testl
icebp
pop
add
mov
xor
movsb
mov
push
ds
hlt
push
aam
sub
ss
das
shlb
mov
mov
mov
jo
and
push
lods
cmpsl
ja
popa
jp
add
jmp
jns
fdivrs
ffree
pop
lds
mov
mov
test
lahf
cltd
pop
inc
hlt
add
xchg
push
fisubrl
xchg
pop
dec
fucomp
jge
out
mov
inc
pop
sub
pop
sbb
test
test
pop
fisttpl
scas
roll
mov
fidivs
push
vfrczss
decl
sub
jb
push
add
into
adcl
shl
or
push
xchg
inc
and
ds
ja
sarb
xor
inc
mov
cmp
xchg
test
in
imul
fdivr
mov
inc
movsl
fidivl
fmul
mov
ds
mov
pop
jo
movsl
pop
push
mov
sti
adc
xchg
xor
jb
or
cltd
pop
out
jb
sbbl
out
push
xchg
dec
cmp
inc
scas
into
pusha
in
pop
cmpl
add
lock
imul
sub
aaa
bound
je
xchg
popf
stos
std
push
push
shlb
jae
hlt
test
cmp
cmp
iret
dec
pushf
hlt
adc
in
scas
jbe
mov
lea
loopne
xor
stc
fimull
or
out
jns
repnz
dec
pushf
inc
cwtl
insl
sbb
loopne
hlt
jp
or
ret
int
ljmp
into
xchg
lds
sub
pop
out
fstl
int3
pop
sbb
sub
fistpll
aaa
pop
mov
sbb
xchg
jge
pop
imul
out
js
sbb
test
mov
and
or
jl
xchg
mov
push
stos
test
adc
jl
mov
adc
sub
sbb
xor
mov
and
inc
lahf
into
aad
sub
shrl
and
jns
movsb
push
movsl
cmp
sub
cld
repz
mov
loope
icebp
sub
rclb
jecxz
jne
aad
rcl
mov
out
mov
mov
sbb
pop
or
lds
outsb
scas
ret
popf
sub
pop
es
jmp
xchg
fiaddl
sbb
inc
test
push
cmp
push
mov
out
mov
mov
out
jg
lret
lcall
bound
lahf
jl
sbb
mov
mov
fistpll
lret
mov
push
mov
cmp
inc
pop
int3
adc
js
jno
xor
outsl
mov
adc
cmc
mov
mov
dec
and
cmp
shlb
sbb
jno
push
out
jnp
adc
push
mov
mov
lods
into
cmp
shlw
add
jmp
lret
imul
pusha
pop
aad
shl
mov
gs
mov
insl
sti
inc
cltd
ljmp
stos
cli
sub
jmp
xlat
lea
xchg
dec
adc
mov
lods
repz
lea
movsl
aam
fnop
enter
insb
xchg
dec
stc
dec
rclb
pop
lods
bound
sub
out
add
cltd
pushf
enter
fistps
pop
mov
pop
outsl
call
xchg
cmp
sbb
je
sub
dec
divb
xchg
jb
inc
mov
and
mov
pop
call
sbb
dec
or
and
fcomp
popa
js
std
lret
je
div
lods
rcrl
xchg
and
cmpsl
fnstcw
cmpsb
test
dec
add
inc
dec
xchg
mov
bswap
mov
sbb
icebp
xor
xchg
cmpsl
xor
xor
andl
inc
aam
ret
data16
aam
jl
sub
clc
fistpl
jge
pop
mov
mov
jae
mov
adc
popa
xchg
clc
shr
pop
loope
xchg
push
mov
clc
adcb
push
add
add
mov
cmpsb
cltd
fbstp
add
pop
ljmp
pop
cli
out
loopne
sbb
mov
inc
xor
adc
ja
mov
icebp
xchg
test
mov
adc
xchg
stos
shll
push
adc
or
loopne
xor
mov
call
xchg
add
jno
xor
xor
mov
pop
pop
inc
mov
mov
ss
pop
lock
mov
in
dec
xchg
shll
sub
jno
or
loop
bound
mov
and
or
lahf
enter
rol
mov
cmp
outsb
cmc
call
or
pop
enter
jno
sub
mov
xchg
push
xchg
jbe
fs
cmp
in
jne
jle
in
jnp
call
and
daa
stos
push
jbe
mov
popf
rclb
test
lds
push
pop
in
jg
ret
ror
test
push
adc
stos
scas
fldcw
negb
lods
in
xchg
mov
rcr
adc
add
or
fwait
xlat
fldenv
jle
hlt
lds
xor
sarb
mov
xor
push
jle
fidivrs
and
pop
sbb
cwtl
adc
ret
or
xor
sahf
negl
mov
lcall
mov
sbb
sbb
and
sbb
out
popa
push
xor
mov
mov
jno
push
js
pop
pop
sub
xor
mov
in
inc
cs
cmp
test
repz
lahf
mov
and
push
xchg
movsl
aas
mov
ds
xchg
sub
mov
pushf
dec
scas
push
pop
iret
pop
es
js
data16
jl
addl
push
push
or
loopne
popf
shlb
or
adc
mov
push
inc
in
sbbl
sbbl
add
inc
push
cmp
lahf
and
sbb
js
mov
xchg
ja
jg
push
cmp
or
sahf
inc
and
fimuls
mov
lret
ja
xchg
pop
mov
int
outsb
cmp
xchg
adc
sub
fs
jecxz
stc
sub
out
mov
dec
outsl
xchg
std
cli
xor
sub
mov
cmp
push
clc
xor
push
inc
cli
xchg
xlat
mov
les
inc
imul
dec
rol
imul
fstpl
push
loopne
sbb
gs
mov
jle
add
in
ret
mov
xchg
xlat
adc
imul
mov
xchg
jbe
mov
les
pusha
dec
inc
mov
push
nop
stc
inc
movsl
aad
mov
jmp
cltd
mov
adc
dec
inc
pop
push
in
fwait
aam
call
cli
or
jecxz
inc
mov
dec
insl
lret
cmc
jb
mov
cmp
sti
test
pop
mov
adc
lret
jno
mov
test
std
jb
push
divb
lcall
jp
push
jbe
dec
mov
sub
cmp
pushf
cli
xchg
mov
pop
fwait
mov
outsb
lret
cmp
dec
cld
push
sub
icebp
or
mov
xor
xor
notb
iret
sub
lds
ret
cmc
inc
sbb
fsubl
pop
sub
inc
rcrb
pop
pushf
pop
adc
and
addr16
mov
jge
inc
popa
test
push
xchg
inc
or
clc
mov
cli
daa
push
movl
sbb
xchg
xchg
cmpsl
cltd
jne
cmpsb
add
sbb
stc
cli
xchg
xchg
rcrl
stos
or
not
imul
xchg
pop
xor
xor
clc
xchg
leave
fwait
xor
and
xor
bnd
xchg
fildl
test
cmc
add
adc
xchg
fwait
pusha
sbbl
push
dec
loopne
test
bnd
rcl
pop
stos
jne
mov
daa
imul
in
mov
jns
pop
stos
xchg
sub
add
inc
jne
sub
dec
fcomps
mov
aad
mov
pop
xchg
jp
or
addr16
inc
or
std
adc
test
loope
scas
jns
jmp
icebp
and
pusha
adc
iret
in
idivb
nop
push
sarb
sahf
insb
js
std
and
leave
xlat
push
mov
sarb
stc
or
ljmp
fimull
ret
ljmp
xor
push
sahf
inc
scas
cmp
sbb
popf
dec
sbb
outsl
xchg
loope
pop
fisubrl
jecxz
push
scas
out
inc
sahf
mov
arpl
subl
jae
movsl
mov
into
xchg
aad
lea
mov
out
mov
in
out
add
mov
lds
mov
jp
mov
adc
jbe
lahf
inc
push
push
jb
movsb
mov
int
and
cmp
scas
sbb
aad
dec
sbb
push
jno
lea
out
movsl
jno
xor
mov
pusha
enter
in
ret
cmpsb
xchg
xchg
push
ret
test
mov
and
mov
movsl
inc
push
scas
ds
in
cmp
cltd
sub
xor
loope
ret
mov
or
js
hlt
rcrl
pop
sub
dec
add
xchg
sbb
cmpb
lcall
mov
outsb
jne
or
xchg
clc
fcoml
pop
push
xchg
jno
lcall
and
cmpsl
lret
ret
jae
push
aas
aaa
and
lret
nop
mov
or
mov
ret
call
jne
xorb
std
sahf
in
ret
daa
in
mov
xchg
pushf
rcrl
dec
notl
fmuls
and
leave
cld
and
dec
push
scas
stc
fildll
outsl
jae
mov
cmc
dec
ret
dec
sahf
repnz
mov
xor
inc
mov
out
scas
rorb
pushf
test
data16
shrb
adc
aaa
cwtl
imul
andl
mov
gs
mov
sti
movsl
cld
jns
sub
adc
xlat
push
xchg
sbb
cmp
cmp
les
fwait
or
mov
add
push
ljmp
jmp
adc
pushf
push
mov
jnp
or
or
sbb
jns
movsl
cs
lea
sbb
pop
jo
jecxz
lret
push
je
jne
dec
in
mov
aas
pop
inc
fdiv
insb
inc
rcll
pop
cs
push
fninit
in
cmc
dec
jecxz
icebp
andl
mov
xor
xlat
scas
xchg
std
sbb
idivb
cld
sarl
out
mov
int3
sbb
or
lock
aam
bound
jg
jnp
in
icebp
fbstp
mov
xor
dec
insl
mov
js
dec
sub
ds
sbb
adc
das
xor
mov
lret
mov
xor
lods
call
out
xor
inc
push
adc
divb
pushf
push
mov
mov
mov
push
cltd
lods
add
add
loope
movq
pusha
push
imul
stos
cmp
stos
jle
daa
pop
sub
xor
ret
sbb
dec
mov
test
stos
iret
dec
fwait
test
mov
jmp
mov
jmp
ret
jle
ret
jmp
add
mov
mov
or
in
inc
ljmp
ja
mov
jne
jecxz
js
push
lcall
push
aad
mov
sub
out
loop
push
mov
fmulp
jne
repnz
dec
mov
push
pop
mov
xor
iret
out
addr16
jbe
or
sub
or
orl
xchg
jp
xchg
cmp
xchg
in
fbld
cs
imul
jle
sbb
jnp
seta
std
and
shrl
push
mov
and
insb
lcall
push
mov
pop
pop
testb
sub
data16
adc
pop
push
push
adc
scas
lahf
outsb
daa
imul
sbb
aam
xchg
cmp
xchg
bound
inc
fisubl
or
inc
mov
xchg
hlt
pop
std
pop
leave
pop
add
xchg
mov
jmp
std
pusha
fidivrs
cmp
sbb
int3
fmuls
jns
lock
aaa
inc
cld
data16
imul
fwait
cmp
gs
dec
aad
cmp
lahf
mov
cli
lahf
test
loop
xor
push
cltd
pop
dec
pusha
into
lds
test
cmp
lea
xor
xchg
lcall
cmpsb
or
inc
dec
push
rclb
test
cltd
ficomps
lahf
lret
and
movsl
dec
int3
adc
sbb
dec
cmp
pushf
lret
sub
scas
cwtl
loope
bound
pop
movsb
mov
push
mov
mov
xor
data16
sbb
sbb
and
sahf
nop
cmpsl
rcrb
dec
adc
fdivs
sub
mov
hlt
push
push
out
sbb
lcall
mov
and
pop
int
nop
push
push
inc
out
and
ret
push
cltd
repnz
mov
jg
sar
adcb
test
sbbl
sbb
sub
shll
cmp
adc
pop
fadds
jge
aaa
mov
ss
pusha
adc
sub
stc
xchg
loop
call
push
xor
cmc
adc
mov
pushf
add
xor
ss
adc
inc
lods
cmp
dec
dec
xor
nop
sbb
adc
lock
imul
lcall
adc
cmpsl
inc
inc
cmc
sti
push
aam
in
cwtl
xlat
mov
jnp
sbb
xchg
dec
out
cmp
ja
mov
icebp
xchg
cld
add
lret
pop
adc
jne
or
clc
xlat
dec
push
push
nop
scas
adc
aad
jno
cs
cwtl
clc
jmp
dec
pushfw
leave
and
adc
mov
mov
push
pushf
call
enter
and
dec
xchg
pop
je
sbb
dec
pop
ljmp
pusha
rolb
mov
pop
jnp
pop
rcrl
fistl
jge
dec
into
or
cmpl
data16
cwtl
xchg
sub
idivb
jmp
mov
pop
lds
lock
pop
mov
sbb
mov
push
lret
pop
mov
cld
cmpsb
sbb
mov
xor
dec
cwtl
cwtl
cmp
es
xchg
lahf
mov
jb
dec
sub
cld
mov
pop
fimull
dec
mov
shll
repnz
loopne
dec
lods
push
sbb
movsb
ljmp
pop
rcr
pop
sub
dec
and
mov
cmp
cltd
jecxz
cli
add
out
bswap
add
xchg
and
inc
out
or
pop
aam
lcall
rorl
test
cwtl
adc
xchg
xchg
inc
mov
xor
cmp
pop
aam
xor
pop
or
lds
mov
push
pop
testb
sub
inc
adcl
stos
pop
and
dec
mov
lods
gs
rolb
adc
jns
insb
inc
bound
shll
sbb
dec
sahf
dec
add
push
test
mov
mov
lahf
addr16
sub
or
pop
sub
mov
repz
inc
in
fucomip
das
sub
rorl
pusha
dec
inc
outsb
in
and
jle
and
jnp
dec
push
insb
dec
inc
mov
mov
xchg
xchg
push
xor
mov
inc
scas
fcoms
fiadds
xor
pop
xchg
daa
xor
ds
iret
lds
ja
push
jmp
pop
imul
sbb
cmpsb
xchg
xchg
xor
adc
call
pop
or
movsb
int
arpl
lock
hlt
cmpsb
lret
fmul
xchg
mov
enter
mov
add
aad
fwait
rorb
pop
stos
push
mov
add
xchg
pop
aaa
add
sbb
popf
xchg
jge
stos
scas
jbe
aad
push
mov
stos
movsb
aad
popa
cmp
stos
and
cmp
jo
shrl
aaa
mov
jl
fcmovnbe
jno
pusha
push
cmp
xor
pop
enter
in
nop
aaa
js
mov
inc
fildl
mov
test
insb
bound
and
push
js
push
out
scas
ds
jge
cmp
add
loope
and
dec
pop
jecxz
bound
int3
clc
pop
jno
mov
xor
cmp
out
pop
sbb
xor
std
ja
shlb
xchg
rcll
cmp
sub
push
push
inc
call
or
sbb
dec
sub
xchg
pop
push
inc
or
and
std
pushl
push
cmp
jg
xor
subb
test
xlat
and
test
out
ror
cmp
pop
jo,pt
rclb
fidivrs
dec
insl
out
adc
mov
fs
dec
stc
dec
test
loop
dec
mov
xor
pop
pusha
into
jb
adc
fbstp
xor
push
cli
and
out
push
in
hlt
gs
lods
push
mov
aas
sub
pop
pusha
pop
adc
jne
sub
sahf
adc
mov
push
gs
inc
out
lods
sti
add
in
add
js
inc
add
sub
adc
xlat
rorb
xchg
mov
mov
rorl
mov
enter
jne
adc
js
xor
mov
jmp
dec
lret
pushf
je
ja
cmp
xchg
pop
outsl
imul
pop
adc
fwait
rcr
lea
into
popf
and
lahf
add
and
outsl
sub
in
pop
aas
popf
add
inc
adc
mov
je
adc
dec
mov
mov
mov
fwait
cwtl
dec
aaa
ret
filds
rcrl
xor
xchg
fwait
repnz
lods
ja
mov
mov
sti
jecxz
xchg
cld
rcll
icebp
ret
lea
movsb
dec
xchg
aad
test
mull
dec
push
cmpsl
ret
mov
paddw
or
arpl
aad
jmp
mov
fadds
mov
popl
lods
mov
je
ljmp
sub
insb
pop
clc
fldl
pop
mov
sti
xchg
test
mov
cvtps2pi
cmc
push
and
xchg
push
and
insb
arpl
stos
pop
xchg
popf
pop
jg
jo
cltd
sbb
xchg
jmp
ficompl
icebp
dec
imul
pop
xor
dec
xchg
or
ret
cmp
jmp
add
lahf
xchg
add
std
hlt
sbbb
mov
mov
add
fs
and
lock
xchg
wrmsr
dec
in
cwtl
data16
leave
bound
outsb
sub
mov
mov
mov
das
mov
jecxz
fidivrl
jp
addr16
bound
sub
push
inc
incl
adc
and
loopne
leave
pusha
in
sub
jns
xchg
jle
and
jnp
inc
hlt
insb
mov
aaa
shrl
jb
mov
popf
outsb
aam
push
mov
rolw
pop
enter
push
push
loopne
and
push
push
pushf
and
scas
gs
imul
lret
dec
xchg
xchg
out
sub
inc
fdivs
cmp
cmpsl
pop
mov
loopne
repnz
icebp
in
lret
leave
or
mov
mov
pop
push
xchg
lds
or
faddp
pop
add
fld
or
scas
lret
pusha
add
test
or
imul
jge
int
jbe
lahf
pop
push
add
jle
idivl
cmp
jo
mov
xor
sbb
dec
notrack
jno
lods
sub
daa
xchg
lods
daa
xor
ror
nop
mov
in
ja
mov
bswap
add
aaa
outsl
push
and
xor
aas
sbb
lahf
or
repnz
je
bound
iret
sub
and
pop
push
movsl
stos
pop
and
js
pop
les
mov
sbb
add
sbb
xor
or
push
sub
adc
sahf
add
sub
fcoml
push
pushf
fsts
pop
cwtl
addps
sbb
ret
ja
push
dec
mov
add
mov
mov
mov
test
lcall
adc
mov
mov
notl
bound
cmp
xchg
push
cld
adc
mov
idiv
add
mov
outsl
adc
div
sahf
fdivr
into
repnz
or
xor
mov
xor
dec
cli
push
xchg
adc
movups
mov
ret
pop
lods
push
sahf
mov
add
pusha
jecxz
and
adc
pop
jo
xchg
loopne
bound
decb
cmp
sti
mov
pop
in
outsb
cmp
pop
mov
sub
leave
xlat
adc
cmp
mov
pusha
repz
pop
loopne
jecxz
jl
fildl
dec
aam
pop
nop
xor
mov
and
pop
outsb
mov
pop
and
lret
call
xchg
sub
sub
mov
addr16
add
xchg
pop
jmp
jb
sbb
aas
cmp
xor
sub
out
ljmp
jmp
jnp
jmp
mov
fstps
testb
shrl
dec
popa
mov
test
das
test
or
jo
pop
mov
fcomp
lret
cmc
movsl
cld
cld
pop
outsl
icebp
fs
mov
das
mov
insl
imul
rcrl
pop
aam
push
mov
shrb
aad
mov
fistpll
mov
ds
xor
popa
add
xor
popf
clc
lock
inc
mov
push
mov
mov
cltd
push
mov
add
and
cld
cld
dec
xchg
mov
dec
out
iret
push
push
stos
dec
dec
imul
rol
filds
das
divl
xlat
cmc
adc
rcrb
xchg
pop
mov
lret
or
divl
mov
roll
adc
flds
mov
push
cli
or
out
inc
scas
insl
and
xchg
mov
pop
xchg
sbb
mov
xor
in
aaa
xchg
jns
push
mov
dec
sub
mov
cmpsb
iret
jne
sahf
dec
dec
fs
js
cmpsl
cs
mov
dec
fstpt
pop
inc
addr16
push
rorb
insl
lret
lds
xchg
arpl
xor
add
push
aaa
xchg
cmp
push
push
pusha
jg
jno
and
jle
adc
jnp
or
insb
and
cli
and
jns
stos
sbb
outsb
push
mov
lea
xchg
fisubrs
push
outsb
push
jae
jnp
inc
loop
les
jne
ret
mov
xor
adc
inc
push
push
jecxz
shrl
daa
popf
cmp
es
fidivrl
mov
push
std
mov
or
stos
mov
arpl
nop
fdiv
cmp
xchg
leave
test
push
repnz
lcall
test
or
or
sbb
cltd
push
add
pop
call
sbb
xor
loop
cmp
fsubl
push
sarl
xor
and
mov
xchg
add
jo
mov
mov
std
inc
sbb
jl
out
jne
push
push
push
cmp
dec
daa
das
mov
enter
in
pop
lods
xor
xchg
stc
mov
push
out
and
push
adc
adc
inc
cmp
movsl
bound
ds
lcall
pop
ret
loope
sbb
xlat
mov
addr16
cmc
cltd
pop
mov
xchg
add
in
int3
add
xchg
and
in
lods
jge
or
mov
ror
adc
add
mov
push
repz
lds
pop
mov
js
add
push
dec
stos
xchg
and
inc
aam
out
ds
mov
or
jg
cld
push
andb
fstpl
xor
and
sbb
in
fnsave
push
dec
outsb
fdivs
cmp
aad
mov
xchg
int3
stc
mov
mov
outsl
out
in
xor
sub
gs
stos
into
aad
in
jmp
pop
xorl
xchg
jl
push
mov
lods
cmp
mov
jle
add
push
in
sbb
repnz
or
loopne
daa
dec
test
sub
repz
jne
shrb
popa
push
cmpsl
mov
sbb
inc
inc
xchg
repz
loopne
out
dec
fstps
lock
inc
out
pop
test
scas
cli
nop
inc
popa
push
aad
mov
ss
cltd
pushfw
lret
adc
stc
xor
sahf
test
call
std
outsb
add
sub
jecxz
orl
loop
pushw
jmp
dec
lahf
inc
dec
xchg
lahf
inc
in
cmp
xchg
fistpl
sub
mov
push
push
cwtl
ret
push
loopne
mov
loope
test
sar
lret
cmp
insl
mov
mov
xchg
mov
mov
test
lret
fs
xor
daa
cmp
icebp
cmp
cmpsl
cs
push
jns
es
dec
push
ret
shrb
aam
push
inc
sub
jne
sarb
add
aaa
mov
and
out
mov
push
sbb
lods
xchg
dec
cmp
sbb
cmpsb
xchg
orb
fst
sbb
push
xchg
xor
std
test
adc
cltd
mov
xchg
add
cs
push
xlat
scas
fcoms
xor
mov
cmp
ficompl
mov
sbb
xchg
xchg
push
rcr
dec
dec
aaa
sbb
mov
adc
mov
fiadds
mov
add
movsb
and
inc
into
push
fwait
dec
fwait
and
in
inc
inc
mov
addr16
lcall
repz
jg
add
xchg
lods
into
pop
in
sub
fisttpll
fidivs
dec
cmc
sub
pop
dec
mov
add
dec
mov
jp
hlt
popf
mov
or
fisubrl
adc
fiadds
cmpsb
nop
hlt
jmp
adc
mov
pusha
sbb
lock
push
loope
aas
clc
idivl
mov
insb
dec
inc
and
loopne
stos
lea
add
adc
sub
daa
xor
jae
aad
inc
in
add
ret
jb
loop
sub
scas
jg
push
sub
xor
push
pop
or
adc
xchg
xchg
xor
cs
loope
int
push
mov
gs
lods
xlat
loopne
inc
cmp
xchg
fxch
sti
stos
and
adc
mov
push
loop
lds
stos
fimuls
scas
repnz
aaa
jge
int3
test
inc
add
or
sbbl
popa
xchg
jge
mov
inc
push
mov
sti
pusha
cmp
imul
cmp
scas
jbe
cmp
aam
xor
loopne
jg
sbb
xchg
jl
aaa
inc
jno
mov
cmp
stos
add
xchg
inc
mov
lcall
xchg
popa
test
in
ja
inc
xchg
mov
movsl
imul
sub
in
sbb
es
bound
and
mov
sub
or
div
cmp
mov
outsb
add
push
pushf
sbbb
sbb
rol
nop
mov
outsb
fs
inc
sub
sub
fsubrl
sub
lcall
add
push
inc
add
push
imul
and
mov
push
lods
mov
jo
xchg
repz
sahf
adc
inc
sbb
fmull
int
lret
sahf
testl
sbb
sbb
aad
or
stc
jb
push
loop
mov
outsl
into
mov
xor
sub
xlat
into
mov
aaa
cmpb
sub
std
in
mov
nop
bound
pop
into
push
int3
xchg
add
ret
or
sub
andl
push
push
loopne
decl
push
push
sbb
adc
ds
inc
jmp
leave
sub
lods
xlat
jns
cmp
dec
sbb
or
cs
pop
loopne
repnz
inc
add
es
xchg
and
nop
sbb
push
fnstsw
jmp
in
pushf
jne
popf
adc
xchg
inc
inc
xchg
xchg
call
fs
popf
cs
jecxz
pop
pop
je
rep
dec
aaa
fsubrs
aas
jp
adc
arpl
in
je
lcall
gs
adcl
cmpsl
push
pop
pop
mov
jle
inc
std
pop
dec
cmpsl
test
lock
fsubl
ficomps
rolb
data16
lock
inc
jnp
shrl
lret
shrl
mov
mov
sub
int3
imul
stc
xlat
jns
ret
dec
mov
sub
cmp
rorb
cltd
pop
push
stos
fldenv
in
fmuls
mov
incl
mov
ljmp
fdivr
sbb
xor
push
pop
iret
sub
aad
into
cltd
mov
add
cmovp
cli
push
mov
pusha
xchg
aas
lret
xor
xchg
jno
stos
sub
fistpl
mov
jne
inc
sbb
pop
loope
dec
push
and
mov
mov
pusha
insl
inc
or
test
incl
push
add
sbb
push
out
xchg
fwait
jp
sub
aam
dec
pop
dec
in
outsl
outsb
push
pop
or
xchg
inc
mov
into
loopne
cld
addl
dec
movl
mov
in
jne
mov
dec
sub
jns
std
sub
mov
mov
lea
jbe
arpl
lret
mov
out
faddl
jno
sahf
jmp
jecxz
outsb
fistpll
push
pop
in
xor
jnp
fcomps
and
push
stos
add
mov
jecxz
ljmp
jae
inc
clc
aam
pop
insl
push
sbb
mov
inc
iret
inc
fbstp
mov
add
cs
scas
mov
pop
imul
xchg
xchg
jmp
push
pop
mov
push
and
push
sbb
clc
inc
mov
lea
inc
or
rorb
jb
jl
sub
dec
repz
shlb
lds
inc
pop
data16
int3
outsl
and
add
ret
divl
ljmp
sbb
je
jge
lea
ljmp
movsb
add
xchg
sbb
mov
jne
add
insb
add
xor
ret
lret
mov
push
popa
jl
push
pushl
imul
push
daa
sub
sbb
sub
test
cwtl
sbb
push
test
test
mov
add
and
movsl
jo
and
lret
sbb
cmc
sub
mov
lcall
fucomip
lea
insl
and
mov
cmc
mov
mov
sbb
dec
subb
lret
jns
test
lahf
popa
dec
adc
jnp
and
fcoml
lea
test
lcall
subl
dec
adc
push
push
sbb
lea
xor
mov
dec
jg
xlat
push
adc
test
jno
sbb
jecxz
sub
shl
into
adc
fsubr
shlb
jp
aam
pop
mov
cltd
fs
mov
sub
loop
in
shrb
nop
or
and
mov
into
fwait
mov
mov
sub
xor
scas
push
cli
in
push
int
loopne
pop
lods
push
mov
xor
pop
push
cs
jge
imul
ficompl
addr16
sub
gs
and
jae
popf
sti
mov
jg
mov
mov
iret
lcall
fstpl
xchg
lret
scas
pop
repz
add
std
jl
popf
js
icebp
fwait
adc
xchg
xchg
cs
adc
jmp
cmc
pop
pushf
and
int3
pop
cmp
in
call
lret
lahf
ret
test
jecxz
ja
je
cmp
dec
scas
in
clc
jb
shrb
sbb
inc
sti
or
pop
add
pop
leave
cli
dec
gs
subl
pop
sets
ss
add
jecxz
xchg
pop
aam
inc
movsb
xor
ds
inc
push
sbb
sbb
xor
mov
jecxz
inc
push
cmp
jmp
sahf
cli
cmpsl
sub
xor
dec
subb
mov
ret
fisubrs
inc
sub
movsl
pop
shlb
mov
pop
jne
je
leave
jb
and
pop
inc
pop
mov
push
xchg
xor
ljmp
pop
clc
pop
call
xchg
push
sbb
ret
mov
cmpsb
jo
loopne
out
cltd
not
int3
add
or
pop
mov
nop
xchg
xchg
shr
clc
or
pop
sub
or
sbb
pop
xchg
test
out
dec
add
bound
mov
stos
lret
lods
in
xor
jae
gs
jnp
jge
scas
push
mov
fwait
test
pop
es
je
sti
dec
dec
cmp
ja
push
fstps
fs
int
outsb
mov
dec
mov
in
or
jns
js
bound
sti
xor
sbb
test
jne
into
jp
or
jae
mov
aas
pop
cmp
aas
inc
mov
or
push
sub
sbb
andl
xchg
jmp
mov
rcr
pop
popa
cmpsb
pusha
push
lret
xchg
insl
mov
jnp
out
insb
gs
and
sbb
push
outsb
sub
mov
or
push
lods
adc
inc
add
cmp
mov
iret
mov
sub
scas
icebp
pushf
sbb
es
jbe
xchg
xchg
adc
aam
subl
sbb
mov
mov
cmp
sbb
aad
repnz
and
in
fisubrl
ficoms
test
inc
or
add
push
or
mov
mov
sbb
jge
aas
xchg
dec
ss
aas
cmpsb
jp
mov
mov
or
xor
xor
fidivs
inc
sub
push
cmpsb
jle
dec
cli
nop
inc
jl
inc
push
jno
dec
inc
cmp
or
daa
sub
cltd
enter
in
adc
inc
cmpsb
mov
mov
pusha
clc
cmp
add
pop
mov
movsl
ja
insl
ds
daa
push
cmp
cwtl
xchg
sub
add
push
adc
push
sub
js
pop
cmp
push
mov
xor
data16
xchg
in
sti
addb
fdivrs
inc
outsb
adc
sub
add
in
lcall
or
add
pop
int
cmc
push
push
test
and
pop
mov
fdivr
mov
repz
cmp
jg
dec
sub
inc
je
sahf
pop
mov
dec
mov
mov
testl
loopne
ss
je
adc
sub
stc
loopne
jl
dec
push
insl
outsl
mov
jle
xor
ret
imul
ss
cmp
push
repnz
ret
or
cmp
lods
in
aam
pop
ret
xor
ljmp
imul
dec
js
in
fwait
lock
in
jnp
cltd
adc
sti
outsb
idiv
in
sbb
pop
mov
sub
stos
sub
movsl
xor
sbb
movsb
pop
mov
dec
neg
mov
lea
nop
shll
aad
test
mov
leave
ljmp
lods
jb
out
mov
xchg
cmp
lea
mov
xor
mov
mov
xlat
mov
cmpsl
mov
loop
xor
inc
cltd
in
inc
addb
sub
ds
push
mov
out
arpl
mov
push
cwtl
hlt
daa
sbb
stos
scas
mov
dec
test
shl
add
and
mov
mov
and
sbb
je
pop
mov
mov
mov
mov
psllw
add
mov
sub
add
pop
mov
pop
cs
mov
insl
push
iret
aam
sub
sub
mov
shl
pop
rcrb
xchg
xchg
cmp
sti
add
mov
cli
shrb
in
push
popa
pusha
cmp
imul
inc
clc
xchg
int3
jbe
inc
adc
push
fistps
mov
mov
mov
dec
dec
jl
or
sbb
pop
xchg
mov
pop
lds
sub
jbe
sti
mov
xchg
lret
in
test
dec
lcall
addl
inc
loop
xor
jnp
or
pop
data16
test
jg
aaa
add
lret
out
push
sub
test
fcomp
mov
inc
or
xchg
dec
inc
fiaddl
pop
cmp
mov
aas
cmp
in
stc
sub
int3
sub
pop
out
sti
fwait
mov
stos
jae
jne
push
int3
dec
lock
mov
insl
push
stc
mov
push
push
inc
jp
repnz
mov
pop
xor
popa
sub
out
imul
xchg
pop
sub
xchg
mov
neg
jnp
and
push
movsl
in
push
addr16
pop
mov
insb
ror
xchg
and
jbe
out
pop
push
lods
dec
adc
xor
mov
jo
jg
or
xor
jb
fcmovnb
sub
mov
hlt
iret
call
mov
push
ljmp
stos
scas
push
and
add
hlt
outsb
xchg
cltd
mov
pop
inc
push
push
and
or
mov
add
sub
mov
push
popa
shl
or
test
xchg
cmpsb
int
xchg
hlt
push
add
iret
insl
int3
inc
cs
add
dec
loopne
pop
push
mov
jge
pop
sbb
es
mov
push
mov
pop
dec
test
mov
bound
fwait
lsl
and
gs
mov
aaa
jl
or
jno
dec
loopne
es
daa
sub
jecxz
ja
mov
cli
dec
push
cmpsb
sahf
aas
mov
inc
ret
in
shrb
mov
in
mov
push
movsl
jle
xchg
adc
std
cmp
lcall
imul
pop
in
js
sbb
pop
int
inc
lret
loopne
and
lock
pop
sbb
sahf
sbb
push
fwait
xchg
push
aas
les
lea
and
stos
pop
rclb
lods
dec
lcall
mov
jg
mov
lahf
dec
pop
push
push
pop
sbb
mov
mov
mov
jne
mov
pop
xor
orb
xor
lock
loope
and
lahf
lret
adc
dec
jmp
dec
cmp
loope
xor
sbb
stc
xchg
hlt
inc
loop
rep
imul
arpl
into
popa
or
push
cmp
dec
jo
sbbb
out
scas
mov
lods
aam
mov
insb
ret
mov
adc
xor
lock
jb
or
clc
loopne
add
mov
sub
in
test
mov
mov
or
cmp
mov
xchg
push
in
xor
jae
and
adc
fdecstp
test
cmp
fcoml
and
fsubrs
push
and
and
fucomi
pop
mov
push
xor
jge
lods
lea
addb
mov
sbb
add
add
jb
std
inc
aas
push
sbb
inc
mov
inc
inc
or
inc
in
in
pop
fidivs
cmp
call
mov
cmp
scas
lods
repnz
push
mov
notb
cmc
jg
pop
sub
mov
imul
repz
lea
mov
test
mov
pop
lret
and
pop
cld
sar
icebp
xchg
pop
mov
sub
cmpsb
insl
out
faddl
es
mov
ret
cld
inc
int3
aam
ret
lea
shll
rol
rcrl
mov
adc
and
mov
and
lret
addr16
fsubl
jnp
into
inc
push
push
push
mov
adc
test
cld
push
cltd
fs
packuswb
test
adc
lcall
dec
stos
pop
adcl
lcall
dec
arpl
shl
scas
xchg
mov
xor
andl
sub
lcall
and
fwait
pushf
and
iret
lock
xchg
and
inc
mov
cs
ja
mov
pop
ds
sbbb
in
cmp
bound
ss
fidivrl
mov
fnstcw
cmp
rcrl
movsl
mov
repnz
jno
jp
pop
ja
mov
push
sub
and
dec
add
xchg
xchg
rclb
jmp
pop
dec
adc
lcall
in
adc
lret
adc
jnp
dec
out
insb
cmp
and
pop
loopne
stos
pop
ja
push
in
call
enter
inc
push
xor
jno
fnsetpm(287
mov
sbb
pop
adc
ret
cs
pop
pop
pop
adc
daa
fcoms
mov
pushf
imul
cmpsl
sbb
xchg
cld
xchg
lock
lcall
cmp
pop
or
mov
inc
insl
hlt
mov
iret
leave
xlat
nop
scas
repnz
push
and
shr
lds
ficoms
sbb
adc
test
scas
or
scas
aaa
cmp
dec
sbb
push
es
fidivl
movsb
mov
in
scas
and
adc
scas
repnz
or
jge
call
push
insb
rcrb
imul
sub
sub
enter
in
loope
xchg
cmpsb
and
mov
cmpsb
test
xor
mov
dec
retw
movsl
test
add
xor
fstpt
andl
loope
imul
push
cmpsb
popw
pushf
and
jne
adcb
xor
cltd
sbb
clc
std
sbb
cmc
sbb
xchg
cmp
shlb
dec
cli
adc
lock
fcoml
adc
jne
lcall
repnz
fimull
push
mov
pop
scas
sbb
pop
or
data16
mov
xchg
mov
mov
jg
fildl
dec
in
sahf
mov
nop
lahf
mov
mov
cwtl
lret
jl
or
repz
jae
cmp
and
sub
adc
jb
dec
aas
push
loop
lds
xor
insl
cmc
dec
xchg
xor
or
xchg
xor
fwait
cli
test
in
mov
sbb
lods
mov
mov
add
test
scas
imul
adc
pop
sub
mov
push
sub
cmpsl
sbb
sti
int3
and
in
lock
call
lock
mov
aaa
cmp
jo
sbb
adc
ds
repz
push
out
fldcw
or
push
sbb
mov
imul
out
pushf
and
clc
adc
adc
xchg
stc
cs
add
rol
sub
jecxz
arpl
pop
or
dec
adc
dec
jb
pusha
jle
not
sbb
xchg
cmpsl
and
fxch
fisttpl
inc
mov
mov
push
mov
mov
cwtl
push
cmpsb
std
clc
mov
cmp
test
adc
call
jnp
mov
loop
xchg
lock
pop
mov
mov
mov
jl
in
cld
sti
lock
outsb
dec
test
sub
adc
outsl
fs
mov
aam
mov
sub
mov
lods
pop
rolb
andb
lods
sbb
stos
sub
ljmp
repnz
or
fstl
mov
push
test
leave
cmc
cltd
frstor
shufps
xchg
pop
in
mov
stos
in
push
pop
sub
or
shl
pop
sbb
push
test
aam
dec
cmp
mov
mov
mov
mov
xor
mov
mov
mov
add
jb
outsb
ss
or
inc
roll
push
loope
es
and
aam
ret
mov
ja
xchg
cmp
or
push
cmp
sub
bound
mov
popa
push
sub
dec
mov
jae
dec
pop
js
test
mov
jp
je
mov
or
scas
sub
mov
repnz
jmp
das
jecxz
fistpll
cmpsb
aad
stos
jl
jle
mov
sbb
mov
stos
int3
aad
push
sub
lret
iret
mov
test
jae
xchg
xor
xchg
pop
dec
rorl
push
sbb
cmc
ret
lea
mov
sbb
add
xchg
inc
fs
insb
pop
inc
push
pushf
push
push
mov
and
dec
cmp
rcll
decb
xchg
repnz
outsb
mov
fsubl
xor
rorl
pop
pop
and
gs
sbb
sub
aaa
sti
cmpsb
hlt
sbb
mov
int3
scas
xorb
jl
sub
push
movsb
sub
mov
and
dec
cmp
fadds
int
dec
dec
cmp
enter
or
jno
mov
cmp
and
insl
mov
in
enter
movsb
xor
inc
push
and
adc
inc
test
lahf
loope
sub
call
push
sub
push
out
xor
pop
sub
pop
add
push
icebp
add
fucomi
inc
js
dec
sti
pop
test
sahf
and
mov
outsb
rcrb
aaa
out
outsl
cmpb
cmc
inc
pushf
rorb
insl
rclb
cld
cltd
sub
push
faddl
adcl
cmp
xor
jne
push
int
lods
mov
pop
jno
and
scas
mov
data16
mov
dec
or
or
lods
jo
aad
sub
dec
push
jbe
test
roll
test
jnp
cmp
addr16
jmp
pusha
jge
xor
es
lret
jns
sub
push
xor
push
imul
xor
cmp
mov
js
mov
push
push
mov
test
lods
mov
sbb
xchg
or
adc
cmp
cmp
sbb
cmp
push
mov
gs
ss
ljmp
fsubr
pop
and
je
sub
push
xchg
cmp
test
xchg
xlat
stc
popf
repz
pop
les
mov
fldenv
inc
pusha
xchg
push
dec
insl
movsl
aad
bound
arpl
mov
push
cs
add
inc
pushf
int3
or
pop
pop
sbb
adc
add
jae
push
lea
gs
cmp
and
jbe
mov
sbb
inc
ljmp
pop
mov
mov
mov
mov
mov
cwtl
and
je
notb
mov
rcl
mov
pop
mov
mov
ret
loop
lock
mov
and
pushf
cld
sub
or
mov
sub
aad
imul
insl
mov
sbb
aam
cmc
xchg
sub
mov
shrb
lea
icebp
mov
mov
adc
btc
cmp
lods
push
add
popa
movsl
sub
xchg
cli
lcall
push
rclb
xor
or
and
test
or
and
test
out
test
in
stos
aam
cmp
xlat
arpl
shrl
out
sbb
lds
mov
xchg
dec
mov
sahf
andl
mov
xor
aad
lcall
add
nop
xchg
add
adc
push
or
cmp
inc
rorb
sbb
jb
sub
sub
imul
call
in
mov
sub
inc
test
cwtl
dec
mov
repz
mov
sbb
mov
adc
mov
mov
and
es
fdivp
cmpsl
xchg
push
adc
loop
fcoms
pusha
mov
dec
test
pop
pop
jnp
les
insb
adc
mov
cmp
aas
call
sarb
cmpsb
adc
cmp
jns
mov
pop
xorb
iret
sbb
int3
adc
jb
push
aam
pop
scas
jge
mov
mov
or
dec
xchg
sahf
in
fisubl
dec
inc
rolb
or
mov
lahf
push
hlt
dec
sarb
repnz
mov
sbb
shl
sub
pop
call
xchg
pop
push
push
fmul
push
repz
add
test
or
mov
aaa
mov
and
jae
and
cmp
push
jnp
and
sbb
and
scas
mov
inc
jo
push
or
xor
je
mov
mov
mov
and
cmp
inc
stc
enter
in
scas
xlat
and
inc
loop
out
push
jnp
mov
push
xlat
sub
lahf
add
and
mov
jp,pt
push
cmp
cmp
dec
and
mov
das
push
lock
sbb
js
cmp
shrb
popa
xor
cmp
orb
fnop
out
adc
mov
fisubrs
int3
pop
aad
lods
jnp
push
push
je
lcall
aaa
sub
sbb
mov
and
mov
cmp
aad
jns
in
lods
inc
mov
pop
out
sahf
out
mov
mov
cmpsb
push
rcrl
sbb
xchg
xor
testl
jbe
ss
aad
adc
xor
stc
mov
add
outsl
or
cmc
out
mov
or
jmp
cmp
sub
cli
jmp
and
jo
mov
orl
mov
mov
adc
ds
cmpsb
push
push
mov
gs
sti
and
sti
sub
in
push
inc
aas
sub
adc
xlat
or
pop
cmp
mov
lcall
les
add
fwait
outsb
cmp
jae
in
int3
xor
cmp
popa
mov
das
fs
daa
rorl
ja
jb
dec
mov
clc
mov
call
into
das
ret
loopne
jecxz
decl
add
in
jb
ret
dec
aas
xor
ds
add
pop
cld
pop
das
xchg
leave
fucomi
cmp
dec
cld
pop
ret
andl
mov
fs
inc
sub
negb
rcl
pop
imul
dec
push
mov
mov
es
test
rorl
insl
sbb
cld
push
jl
icebp
sbb
mov
daa
repz
jb
insl
mov
cld
mov
test
mov
rolb
cmpsb
pop
adc
out
and
or
mov
xorl
xor
jg
fucom
jg
push
jmp
mov
test
pop
lea
cwtl
inc
int
test
mov
xchg
jmp
dec
mov
ret
sbbb
enter
or
lods
push
xchg
loope
test
stos
out
dec
or
cmpsl
xchg
mov
and
into
xor
scas
mov
sti
and
add
test
add
mov
out
or
push
xchg
inc
addr16
dec
or
dec
ja
cwtl
rcrl
lods
mov
dec
test
xchg
push
jno
cmp
jns
xchg
ja
mov
mov
sub
mov
outsl
jbe
push
dec
mov
popf
dec
jp
into
xchg
inc
ficoml
std
and
subl
xchg
xor
out
jmp
aad
stc
fcomip
pop
inc
pusha
push
inc
push
mov
in
pop
jnp
cmpsb
xor
int3
and
scas
lods
push
test
jns
popf
int
jo
jl
je
dec
mov
xchg
pop
mov
add
cld
call
bound
stos
ss
push
sbb
scas
loopne
mov
lahf
pop
cmpsl
sbb
bound
cmc
cwtl
ficoml
sub
inc
dec
icebp
inc
push
andb
jne
arpl
gs
xchg
out
leave
cmp
dec
repnz
jl
mov
adc
pop
test
pop
andb
add
testl
jns
cmp
punpcklwd
sbb
jl
sbb
push
lods
movsb
inc
mov
cmpsl
and
pop
and
mov
push
adc
shll
ljmp
cmp
jae
daa
daa
add
in
xchg
and
cmpsb
stos
stc
lahf
inc
jno
imul
int3
push
stos
mov
lahf
pop
repnz
push
or
movsl
lcall
cmp
mov
das
push
movsb
mov
js
mov
pop
testl
mov
popf
push
iret
sbb
jmp
mov
jbe
shr
adc
sbb
and
push
dec
sahf
push
stos
test
leave
pop
ud1
sub
lock
pushf
jg
arpl
and
imul
mov
in
lret
jg
leave
xchg
cmpb
test
cld
sahf
mov
sbb
xchg
shll
sub
dec
enter
dec
loop
fs
gs
iret
lcall
sbb
stc
jae
vmovntps
outsl
out
shlb
inc
cltd
xchg
cmc
popf
xor
or
dec
cmp
ja
xor
cs
push
or
out
push
nop
mov
adc
and
jmp
outsl
add
xchg
dec
imul
mov
sti
loopne
sbb
gs
push
int
fldenv
imul
dec
test
mov
popa
sub
xchg
pop
xlat
sbb
scas
cs
aas
inc
sub
inc
xchg
dec
sub
jle
sbb
push
cs
mov
jmp
imul
adc
mov
push
stc
fucomip
imul
jecxz
mov
je
rcl
dec
js
jnp
add
inc
inc
and
push
pop
rcrb
fistl
aaa
stos
dec
out
pop
cmpl
in
mov
pushf
mov
in
shrl
jno
or
sub
mov
jg
lcall
movsb
mov
cmpb
jg
psllw
lret
mov
cmpsl
es
dec
popa
imul
es
push
daa
ret
cmp
fildll
scas
xchg
rclb
mov
pop
das
xchg
inc
mov
push
leave
pop
mov
gs
jge
in
ss
ljmp
cmp
mov
aad
push
scas
mov
mov
pop
add
scas
int3
add
out
push
scas
push
stc
xchg
xor
out
dec
cltd
and
pop
sub
push
mov
xchg
push
test
hlt
dec
outsl
push
xchg
xchg
mov
insl
fiadds
jbe
adc
jbe
dec
lcall
aad
add
pop
push
xor
inc
movsb
jle
stos
mov
ja
cwtl
fistpl
cltd
add
mov
sub
and
mov
adc
sbb
out
push
sub
stos
jne
mov
std
mov
stos
in
dec
dec
idivl
jnp
xchg
sbb
inc
add
sub
push
cmp
jns
pop
pop
jmp
test
fists
loop
pusha
repnz
cmpsl
jle
jno
jnp
dec
cld
insb
out
mov
stos
and
xchg
sti
mov
hlt
dec
lock
aas
xchg
js
pop
xor
inc
inc
mov
dec
ret
pop
iret
fimull
ja
mov
mov
and
push
arpl
sbb
push
jmp
aaa
jbe
jbe
jae
fists
leave
mov
rep
xchg
in
mov
cmp
and
adc
outsl
int3
faddl
add
and
sbb
inc
aaa
cmp
sbb
mov
jbe
addr16
push
sbb
movsb
into
pop
jg
sbb
shrl
jmp
cmp
xchg
jecxz
jl
dec
test
imul
daa
es
ret
cmp
in
jge
lods
cmpsb
sub
cmc
push
adc
test
jge
das
lahf
jge,pt
and
sub
shrb
cmp
sub
push
or
pop
cwtl
push
stos
js
leave
push
push
push
jae
cmovb
xor
sub
pop
sbb
mov
xorb
rcrb
sti
outsb
jl
dec
sub
in
add
add
push
rcll
sub
mov
int
imul
and
call
xor
ljmp
test
push
sahf
sub
mov
mov
jp
lret
testl
push
or
xor
call
rcll
stc
sub
jae
mov
out
xor
fdivrl
rorb
cmp
xchg
insb
xor
popf
test
add
cmp
push
sub
cmpsb
add
adc
ja,pt
enter
xchg
or
pop
cmpsb
sub
gs
fbld
push
test
in
pushf
int3
into
mov
fisttps
pusha
xlat
xchg
fwait
sbb
and
jle
les
jmp
sahf
dec
mov
nop
repz
add
xchg
and
clc
fidivrs
lea
and
inc
fs
stos
jecxz
test
dec
out
jae
jb
cmc
sub
jb
into
inc
cmp
loop
jne
dec
fildl
mov
or
dec
mov
inc
cwtl
push
not
std
xchg
ds
mul
sti
das
rol
mov
pusha
mov
inc
mov
das
pop
mov
lock
fwait
shlb
jmp
pop
cld
stos
dec
push
icebp
lret
mov
and
hlt
xor
mov
es
sbb
adc
cmpsb
jnp
shl
addr16
pop
dec
movsb
lods
mov
and
in
mov
push
mov
ljmp
xchg
mov
push
clc
cmc
dec
cli
fnsave
push
jle
jno
inc
mov
int3
adc
out
add
cld
adc
jge
xchg
ja
popf
out
lods
fdivl
mov
or
xor
sub
test
dec
lds
mov
mov
dec
inc
xor
cli
sbb
cmp
add
adc
dec
push
dec
push
fwait
repnz
pusha
inc
xchg
adc
dec
repnz
imul
je
in
in
pop
push
add
je
cwtl
in
je
jns
cmp
lret
out
xor
out
jne
xchg
mov
cld
sub
push
xor
mov
sbb
addr16
sub
cmp
into
sub
scas
mov
orl
insb
jmp
jnp
je
xor
cmp
in
or
jp
sub
mov
insb
push
sub
test
push
daa
xchg
mov
sbb
push
add
jae
icebp
loopne
push
sub
mov
cmp
cld
adc
loopne
test
pop
jg
jge
insb
sbb
adc
mov
mov
sbb
enter
icebp
dec
inc
enter
test
mov
repnz
loop
mov
dec
rorb
dec
push
mov
fisubs
insl
int3
sub
add
push
lods
sbb
pcmpeqd
sub
repnz
pop
ret
dec
cmp
xor
and
icebp
sub
inc
sub
fistl
test
jl
add
dec
cmp
xor
enter
in
fs
cmpsb
mov
test
push
fdivl
and
lahf
pop
or
and
movsl
test
enter
mov
in
mov
sti
loope
inc
daa
push
daa
or
xlat
daa
jle
xchg
outsl
jp
inc
add
shlb
sbb
mov
sbb
inc
sahf
add
mov
ja
cmp
fistpll
xlat
sub
arpl
push
pop
adcb
or
pop
out
or
arpl
imul
mov
mov
outsb
mov
subb
xor
or
mov
jno
lret
or
iret
dec
fadd
xchg
cmp
jae
les
pushf
ret
pop
out
stc
loope
mov
outsl
movsl
filds
cmc
sub
into
mov
sub
aas
mov
and
mov
mov
out
cmpsl
mov
cmp
data16
jmp
cs
cmp
imul
js
loopne
and
gs
decb
je
in
pop
add
pop
in
push
adc
adc
cmp
pop
sbb
jecxz
daa
repz
stos
pop
les
jle
inc
sbb
inc
lods
int
dec
jmp
ja
aad
popa
aas
cs
aaa
shr
add
pushf
js
inc
adc
inc
pop
ror
mov
or
dec
call
add
xchg
dec
push
mov
je
dec
cwtl
dec
test
daa
pop
xor
adc
xlat
inc
push
stos
dec
inc
xor
adc
lret
jne
popa
dec
mov
dec
xchg
in
cwtl
adc
daa
std
cmp
mov
jmp
mov
jle,pn
cmp
jae
mov
mov
lret
mov
jb
icebp
mov
jg
cmpsl
and
xchg
dec
push
adc
pop
stos
pop
es
loop
push
loop
aam
dec
ljmp
jne
pop
insl
mov
mov
sub
push
mov
ret
xchg
aam
ret
popa
add
ljmp
loopne
xor
loope
pop
sub
mov
mov
or
add
movsb
jg
mov
clc
xor
adc
stos
nop
xchg
ss
sub
roll
testl
cmp
sbb
mov
add
shll
sbb
pop
fmuls
add
mov
fwait
and
mov
sbb
sub
pop
dec
in
adc
and
pop
mov
jmp
mov
jge
xchg
ret
xlat
int3
in
scas
std
jns
or
cs
adc
leave
mov
fstl
jne
aad
dec
and
iret
leave
mov
testl
or
stos
outsb
sub
xor
mov
or
push
adcb
dec
insl
in
gs
push
push
jnp
jecxz
insb
mov
cwtl
cmp
data16
mov
inc
push
cmp
lds
addr16
pop
repnz
pop
pop
repz
iret
cwtl
mov
ficoms
arpl
scas
or
jae
into
cmpsl
push
xchg
cli
jne
fisubrl
roll
fildll
pop
mov
inc
lret
pop
push
arpl
out
mov
fs
mov
arpl
lds
or
imul
int3
mov
inc
add
sbb
or
popa
mov
sbb
xor
jbe
data16
mov
cmp
jae
scas
sub
lds
daa
mov
mov
je
jl
xchg
inc
jno
aas
xchg
cmp
push
icebp
enter
in
dec
arpl
inc
push
jle
push
cmpsl
xor
sbb
in
and
inc
and
pop
outsb
movsl
scas
xor
ds
leave
js
fwait
sbb
or
push
neg
pop
push
cmpl
pop
insb
popl
xor
push
mov
mov
outsb
adc
shlb
and
inc
imul
pop
scas
rcll
pop
lcall
fsubrl
fcoml
pushw
insb
or
and
jecxz
mov
adc
and
or
js
js
add
sbb
lahf
jmp
lea
shll
lret
icebp
testl
dec
lea
mov
pop
adc
std
ja
out
cmp
loop
repnz
fcmovne
xor
shl
pop
repnz
xchg
mov
push
cmp
dec
mov
cli
mov
cmp
add
add
mov
jne
and
mov
dec
adc
aad
mov
fsts
cmp
pop
in
push
loopne
shll
cltd
cmpsl
scas
sub
out
test
jb
scas
mov
xlat
add
lcall
xchg
cmpsb
or
repz
xlat
les
add
inc
mov
mov
nop
test
jg
cs
clc
mov
push
pop
xchg
mov
lea
and
dec
mov
iret
je
mov
jb
clc
mov
mov
dec
inc
jno
sub
jo
pop
mov
ret
mov
mov
mov
inc
sub
int3
test
loop
jg
data16
or
pop
testl
mov
imul
cld
mov
adc
test
sub
fdiv
js
pop
mov
and
cs
push
icebp
insl
aas
xchg
aad
cmc
push
mov
in
push
aam
das
adc
xchg
xor
rorb
pushf
mov
xor
mov
jb
pop
lods
sub
xchg
sub
cmpb
xor
mov
jge
idivl
test
inc
cltd
in
adc
in
rorl
add
dec
push
inc
xchg
xchg
add
aas
push
stos
jg
jns
mov
daa
sbb
aaa
mov
movsb
lock
xchg
jl
mov
test
fldt
xor
outsl
pop
cmp
ja
push
add
stos
add
inc
lahf
clc
fwait
push
xor
or
jbe
inc
ret
dec
adc
sub
ja
scas
loopne
pop
addl
mov
or
add
lods
cmp
push
bound
imul
sbb
mov
into
lds
ja
dec
or
mov
into
and
jp
fcmovnbe
andl
ret
cltd
pop
iret
out
xor
pop
xchg
pop
sbb
mov
mov
and
mov
ret
jns
in
es
jle
mov
xchg
insb
sub
and
mov
stos
jle
push
push
movsl
mov
jns
imul
xor
cmp
pop
xchg
sbb
ret
int3
iret
negl
adc
push
and
mov
scas
insb
mov
sub
adc
fcmovu
sbb
lret
push
push
push
push
and
xor
ljmp
int
repnz
mov
outsl
sbb
sahf
mov
int3
popf
jne
add
adc
or
or
sbb
push
in
mov
mov
push
push
ja
movsb
outsl
ss
cmp
adc
scas
or
ret
jo
sbb
inc
push
mov
loop
jl
stc
divl
pusha
and
daa
and
enter
in
xor
cmpsb
mov
or
sub
push
jb
pop
test
imul
xchg
mov
movsl
mov
sarb
sub
cmp
inc
sub
push
push
push
jp
pop
push
pop
iret
js
js
pop
xchg
add
pop
stc
xor
push
jne
addl
das
ret
push
sub
push
clc
outsb
movsl
nop
subl
add
jns
pop
out
lcall
fsubrs
push
arpl
push
outsl
xchg
sbb
mov
pop
test
xchg
sub
sbb
ret
and
cs
ds
sahf
adc
cli
push
mov
popa
rorl
sbb
push
lods
ret
out
fdivrs
aam
cmp
stc
inc
out
cmp
fs
mov
loop
xor
arpl
in
xor
cs
into
jns
mov
sbb
jecxz
xor
decb
ljmp
mov
add
or
icebp
cmc
xchg
adc
xor
lods
dec
lcall
and
cmp
fmuls
roll
sti
xchg
push
ret
in
fucomp
mov
cmp
sub
cmp
subb
jmp
cmpsb
les
or
scas
outsb
xlat
inc
shlb
mov
sub
nop
test
sbb
push
mov
jmp
mov
pushf
into
xchg
lea
std
pop
pop
pop
cmp
lret
or
call
roll
cmpsl
dec
nop
aaa
jecxz
sub
je
sbb
push
add
jb
imul
mov
inc
inc
jo
pop
pop
or
dec
xchg
sub
adcl
loope
xchg
mov
shrl
addr16
mov
cld
btc
sti
stos
loop
cmpsl
pusha
je
mov
in
xchg
lret
push
lret
cwtl
add
icebp
dec
mov
mov
and
in
es
js
push
ret
je
sub
push
push
sub
sub
add
cmp
daa
mov
cwtl
mov
das
loopne
ljmp
add
frstor
push
xorl
sbb
cmp
notl
nop
push
sbb
lret
xchg
dec
jo
out
pop
dec
stos
outsb
and
cmp
xor
insb
sbb
cmp
dec
xlat
cmp
dec
or
jo
repz
cltd
jnp
or
shlb
ret
call
jge
add
mov
push
out
push
fwait
jg
movsb
or
arpl
dec
lret
sbb
xchg
pop
push
dec
pushf
mov
lcall
in
and
jns
fwait
dec
inc
cltd
out
rcrb
jne
jle
dec
jmp
push
mov
mov
movsl
pusha
imul
stos
adcb
outsb
ljmp
cmp
cmpl
push
xchg
sub
stc
xchg
hlt
mov
fists
mov
lret
jle
or
imulb
mov
stos
icebp
sbb
push
in
mov
popf
nop
outsb
sub
dec
stos
inc
jae
ret
inc
inc
jno
ss
lret
ret
dec
push
std
jg
repnz
popf
scas
iret
aam
imul
sbb
dec
pop
xchg
test
dec
ficoml
lret
leave
push
test
add
mov
mov
dec
hlt
or
leave
sbb
repnz
mov
cltd
xor
test
js
imul
int3
mov
mov
or
outsb
lcall
jne
jge
cmp
xor
push
push
test
int
stc
or
scas
ljmp
xor
test
sbb
adc
sub
movsl
imul
and
enter
in
sbb
mov
inc
cmp
daa
push
cmp
mov
lahf
mov
push
movsl
movsl
mov
stc
and
stc
es
sub
and
xchg
push
mov
pop
xchg
mov
or
pop
mov
xor
pusha
add
fsubr
sbb
dec
push
mov
not
or
ret
stos
add
and
scas
mov
inc
lcall
cmp
rol
loopne
ds
push
jb
ljmp
sub
dec
mov
mov
jg
stos
jnp
add
incl
mov
sbb
mov
ret
xor
testl
call
divb
cmp
mov
mov
fs
nop
and
push
movsl
jge
or
fidivs
or
or
andb
pop
xor
or
mov
adc
sbb
loopne
mov
mov
push
add
sub
inc
adc
inc
fs
and
addr16
std
hlt
rcrl
in
dec
sahf
xchg
mov
stos
arpl
cmp
jns
sbb
sub
xor
les
inc
fxam
lea
inc
in
dec
push
sarb
pop
shll
in
sbbl
push
adc
pop
in
cli
int
mov
testb
faddl
cmp
je
in
dec
lret
and
aas
out
dec
xor
cmpsl
dec
sbb
rcl
pop
add
cs
jle
popa
subl
add
mov
mov
cwtl
inc
gs
std
xor
adc
in
mov
sar
pop
dec
and
leave
cmpl
fidivl
outsb
mov
push
sbb
lret
pop
sbb
es
jmp
dec
call
push
es
iret
addr16
add
push
aam
stc
or
cmpb
xor
pop
pop
lret
mov
inc
push
mov
shlb
aam
add
popa
inc
push
ljmp
inc
clc
loope
add
push
jge
pusha
mov
daa
xor
cltd
push
das
jp
or
movsbl
push
mul
xchg
xchg
xchg
out
sbb
cmp
stos
pop
xchg
xchg
pop
test
int
stc
mov
dec
test
adc
jb
adc
xor
je
or
fwait
and
adc
lcall
dec
xchg
push
push
mov
fwait
scas
jb
or
and
xchg
dec
mov
push
xchg
stos
jg
cli
pmulhw
mov
sub
ret
jns
push
ret
dec
add
mov
and
fs
loop
ret
adc
add
test
orl
addr16
or
mov
mov
xchg
cmc
leave
jp
lahf
cmp
xchg
jmp
stos
pusha
stc
or
jle
push
sub
add
insb
cmpsb
and
ja
fs
push
and
sub
push
push
sbb
xchg
jb
jl
pop
add
ret
mov
mov
push
adc
jno
push
lds
scas
xor
lahf
imul
pop
sbb
pusha
pusha
xchg
call
dec
inc
dec
push
shrb
lcall
aam
jns
shll
leave
push
adc
repnz
and
shlb
ficoms
mov
int3
jae
or
or
subl
fmull
sbb
mov
jbe
lret
movsb
pop
xchg
movsb
test
repnz
popa
sbb
jo
inc
inc
xor
addr16
dec
mov
cmp
aam
and
mov
and
inc
lods
xchg
add
ds
lret
dec
push
push
or
test
pushf
aas
mov
shrb
les
outsl
jg
cmp
mov
loope
ja
push
popf
sub
shll
pop
loope
jae
fimuls
xor
fists
fucomip
sbb
out
rcl
adcb
ss
in
or
mov
aaa
push
sub
sub
imul
mov
cmp
or
sub
aam
movsl
enter
and
into
scas
mov
push
mov
addr16
dec
repz
fwait
test
shr
cld
daa
mov
sarl
lret
fcomi
ret
fsubrs
enter
xor
mov
stc
mov
inc
test
out
xor
xor
add
into
aas
loopne
or
mov
mov
cli
push
incl
mov
repz
neg
add
mov
shrl
pop
cmp
pop
inc
loope
loopne
sbb
pop
xchg
xchg
repz
inc
in
mov
test
push
cmp
xlat
ret
cmp
xchg
jb
dec
xchg
out
dec
clc
repz
inc
les
push
adc
clc
inc
out
dec
gs
nop
cmp
ret
aad
cs
in
mov
sub
data16
lahf
push
or
shr
dec
cmp
lea
pushf
iret
jecxz
adcb
inc
out
jb
add
lea
mov
scas
mov
fwait
cmc
pop
movsb
sbb
dec
imul
and
std
mov
std
xlat
or
imulb
sbbb
lret
jle
mov
and
mov
mov
popf
lcall
sub
lock
cld
adcl
mov
and
dec
inc
push
pop
insl
hlt
lods
cmp
ret
xchg
pushf
ret
aam
fildl
jns
rcl
add
and
or
gs
mov
jg
movsb
lods
outsb
scas
adc
pop
out
ljmp
sub
xchg
ficompl
mov
sub
test
cltd
mov
stos
nopl
inc
xchg
fcmovbe
add
pushf
jns
stos
dec
ret
dec
pop
das
mov
mov
xchg
scas
test
rcrl
xchg
or
das
ret
inc
lret
push
mov
pop
add
sub
mov
or
mov
std
dec
mov
scas
ja
imul
mov
jbe
xchg
jmp
jmp
dec
loope
jns
mov
enter
imul
mov
decl
sub
and
push
inc
and
or
jnp
and
cmp
ds
pop
adcl
xchg
rolb
xchg
cmp
rcr
shl
sbb
in
ror
sub
insb
imul
cs
xlat
lret
xchg
push
bound
dec
popf
ficoms
push
shrl
jae
mov
lea
jo
ret
pushf
iret
adc
xor
test
pop
push
or
subl
jp
cs
push
aas
neg
clc
outsl
roll
and
inc
cmc
or
xlat
inc
iret
arpl
lahf
or
mov
cmpsl
clc
repnz
jno
mov
iret
test
fdivp
mov
pop
leave
inc
fmulp
pop
sbb
or
dec
push
mov
jbe
pop
adc
jge
pop
movsb
jbe
shll
adc
cmp
xchg
and
insl
or
jo
jns
xor
dec
cmp
jl
push
mov
cmp
loop
and
int
out
or
inc
pop
sarb
shrl
hlt
mov
mov
and
xor
xchg
stc
mov
push
inc
cli
sub
sbb
loope
sahf
mov
pop
adc
add
pop
xchg
pop
or
xor
pop
lods
sbb
scas
andb
cmp
mov
addr16
into
mov
pushf
faddl
inc
push
or
jns
test
clc
sub
dec
ds
out
lret
push
js
nop
and
leave
mov
enter
ds
mov
ds
out
sbb
xchg
mov
sahf
jns
sbb
mov
push
rcl
sub
test
subl
cmp
ret
adc
xchg
jecxz
adc
cmp
xor
jo
add
in
xor
js
cmc
push
add
adc
push
add
cmpsl
sbb
mov
enter
iret
imul
fsubl
add
sbb
adc
out
loopne
or
gs
mov
mov
jg
mov
xchg
enter
sbb
mov
jb
into
xchg
mov
mov
les
and
dec
les
nop
adc
fdivl
jmp
jo
pushf
iret
or
add
pop
push
inc
test
xchg
leave
lea
xor
pop
sar
jecxz
adc
inc
ret
dec
dec
mov
insl
in
aas
sub
or
and
inc
out
inc
mov
and
push
incl
xchg
push
cwtl
mov
divb
not
lcall
mov
mov
inc
das
cwtl
cltd
lock
and
mov
inc
adc
cld
lods
popf
add
aam
mov
cmpsl
pop
pop
imul
sub
add
ret
and
mov
jo
int
fadd
fstps
or
mov
dec
mov
fsin
fs
je
xchg
ljmp
mov
fstpl
sbb
push
add
out
mov
insb
mov
outsl
int
cltd
shrl
rclb
lods
mov
out
pushl
cmp
int
aaa
xor
hlt
xchg
int
test
daa
es
inc
notb
jns
or
jp
cmc
or
shlb
cmp
pop
cmp
fwait
or
fimuls
and
sbb
movsb
xor
ja
push
call
mov
arpl
jo
dec
push
xchg
in
mov
or
add
out
outsl
cmp
out
pop
fidivl
ljmp
mov
shll
in
inc
jp
xor
jg
jmp
sub
sar
and
adc
in
xchg
insl
repz
jne
das
in
cmpsl
in
adc
jnp
inc
adc
pop
mov
pop
push
mov
adc
push
xchg
cli
mov
sar
inc
xchg
mov
pop
outsl
sub
jae
cmpsl
adc
fcom
scas
clc
loope
imul
test
or
fisubrl
in
push
mov
xor
inc
hlt
in
push
fs
div
mov
ljmp
ficomps
add
int3
dec
stc
mov
or
leave
xorl
sar
sbb
cmp
jae
xchg
push
addr16
inc
fsubr
movsb
fwait
or
cmp
test
and
fisubrl
mov
inc
pop
addr16
sub
inc
pop
jl
sarb
rorb
mov
daa
pop
jp
enter
in
into
fwait
call
inc
jmp
int
test
inc
arpl
lahf
pop
mov
lea
mov
mov
sub
push
fwait
loope
jmp
out
push
sti
push
js
js
pop
das
mov
lock
xor
push
push
sbb
cmpb
aas
stos
push
mov
outsb
xor
stc
fsubrl
fs
cmp
sub
int
jae
stos
push
jnp
cld
and
xchg
lods
mov
xchg
pop
mov
xchg
mov
shlb
jg
xchg
filds
sbb
stc
sahf
mov
mov
jmp
push
lret
aam
inc
inc
outsb
fsubs
sub
add
and
fs
cs
loop
test
add
xor
imul
or
fisubrl
cmp
nop
int3
xor
inc
xor
decb
mov
test
xor
mov
add
adc
imul
lods
jb
cld
adc
pop
stc
sti
push
dec
fs
mov
sbb
add
push
xlat
inc
stos
ret
cmp
pop
xchg
jne
mov
les
ret
ret
inc
push
cmp
dec
and
add
jbe
jecxz
stos
cltd
dec
jmp
cmp
jp
jge
pop
lcall
movl
mov
lea
test
pop
js
jecxz
in
je
mov
jbe
sbb
mov
inc
pop
push
sbb
imull
fisttpl
pop
sbb
mov
and
jae
loop
and
jp
shr
lock
loope
ret
mov
jae
ja
lret
sub
cmpsl
mov
xor
push
in
push
cld
xlat
mov
mov
and
xcrypt-ctr
cmpsl
push
cli
fwait
dec
cmp
cmp
xchg
ret
mov
sub
sbbl
shrb
jo
mov
push
mov
sub
lods
inc
and
ljmp
xlat
clc
xchg
inc
fldl
in
push
xor
mov
cmc
xchg
test
and
inc
filds
pand
pop
push
xchg
xchg
push
fs
stos
sub
pop
test
stc
sbb
inc
mov
test
adc
xchg
mov
lds
or
adc
call
add
mov
jae
inc
fwait
cmp
cmc
inc
mov
pop
dec
xchg
cmc
sbb
es
add
mov
mov
stos
cld
xchg
popf
add
in
repnz
pop
data16
or
dec
fnsave
mov
fldcw
mov
add
pop
addr16
xchg
sbb
or
sbb
in
out
iret
sub
xchg
push
sub
cltd
xchg
inc
cmc
fisttps
ret
mov
in
mov
jnp
or
insb
aas
je
and
scas
stos
mov
mov
movsb
popf
sub
lock
push
std
xchg
pop
inc
popf
je
pop
cmpsb
xchg
iret
shrb
js
lcall
imul
scas
sbb
lea
xchg
add
add
pop
xlat
mov
cmc
push
or
fstl
sti
hlt
aaa
jae
leave
imul
repnz
mov
mov
add
jecxz
fidivrs
mov
daa
cmpb
xor
add
or
mov
sar
fdivrs
mov
jbe
inc
in
push
xchg
sbb
es
cmp
jns
and
and
jo
sbb
or
mov
adc
dec
or
aaa
jl
pop
jp
xchg
and
mov
fnclex
enter
in
mov
jno
inc
fisubs
js
add
xchg
test
adc
mov
movsl
fldcw
cmp
arpl
loope
pop
mov
pop
nop
insb
aaa
js
sub
push
sahf
and
daa
nop
out
xor
sub
orb
or
adc
xchg
xchg
aad
and
outsl
fcompl
push
push
mov
divb
sub
in
push
jle
and
fmuls
ljmp
mov
xchg
mov
subb
mov
ja
push
xor
daa
ror
mov
cmp
cmp
dec
add
sub
fyl2xp1
loop
jno
push
jo
outsl
mov
and
pushf
xor
or
inc
cmp
dec
arpl
insl
jmp
cli
jmp
iret
mov
lods
mov
add
fsubrs
jb
adc
ret
ds
sahf
sbb
loopne
sub
gs
daa
sub
sbbb
in
hlt
scas
jnp
cld
and
ja
jg
jg
inc
cmp
pop
ret
mov
sbb
idivb
int3
les
jb
inc
xor
jecxz
orb
aad
bound
jmp
les
and
add
pop
mov
iret
mov
mov
sbb
pop
xchg
adc
jne
adc
push
dec
cmpsl
pcmpeqd
loopne
aas
push
dec
inc
adc
in
add
push
jl
mov
cmc
cld
addl
movsl
jo
cs
std
int3
xor
clc
movsl
or
cmp
and
xchg
clc
mov
fistl
das
push
in
add
mov
test
add
ret
adc
add
cmc
mov
sbb
sbb
insl
test
ret
aas
mov
aam
jl
sub
imul
xchg
pop
inc
popf
ret
cmp
and
imul
movsb
lods
scas
sbb
mov
or
int
cmp
imul
xorl
das
mov
inc
sub
bound
out
lds
stos
sbb
pop
pop
xor
shl
daa
sub
vmovaps
sti
fisttpl
shll
sbb
xor
mov
cld
xor
out
pushl
cmp
add
in
add
push
repz
push
sub
dec
xor
mov
ja
lret
mov
push
ja
jmp
clc
shl
js
jns
mov
bound
call
jne
jl
dec
pop
pop
cwtl
mov
pop
mov
fsubs
dec
addr16
inc
or
jbe
sub
push
inc
addl
test
push
push
xchg
adc
xchg
sub
sbb
aad
xchg
add
pop
xchg
sbb
daa
and
sbb
clc
dec
mov
push
loope
push
sbb
pop
jo
inc
test
push
pop
fldl
fmul
xor
adc
sub
push
loope
popa
scas
mov
xor
sbb
out
xchg
xchg
pop
adc
inc
inc
mov
or
loopne
or
std
add
hlt
adc
leave
loop
inc
repnz
popf
mov
cmp
sti
shlb
dec
lds
mov
pop
sbb
ret
pop
xor
add
mov
cmpsl
fisttps
aaa
out
xlat
adc
mov
jge
xchg
jbe
sbb
mull
out
push
movsl
lret
int3
scas
inc
cmp
sbb
cld
xor
repz
ret
lea
jno
sbb
daa
sbb
or
cmpsb
enter
pop
mov
pop
test
call
adc
out
loopne
leave
ds
pop
adc
fs
sub
inc
jmp
lods
jmp
push
push
push
js
jno
pop
jge
in
ljmp
add
xchg
sbb
mov
adc
rorb
xor
divl
adc
faddl
jnp
lcall
or
int
mov
push
sub
mov
sbb
or
pop
addb
mov
sbb
in
pop
rcrl
sub
mov
cld
fistpll
mov
cmp
es
cltd
push
push
loop
in
outsl
popf
jnp,pn
rcll
xor
or
ficoms
cli
sbb
xchg
cld
xchg
jecxz
nop
xchg
out
lods
jbe
cwtl
or
add
call
cli
xlat
imul
repz
mov
push
or
mov
popa
popf
in
pop
xchg
mov
ljmp
cmp
lret
out
xchg
xchg
sti
pop
adc
lds
rol
lods
int
fprem
lds
inc
cmpsl
dec
loope
popf
nop
cmpsb
notb
jo
jmp
pushf
shr
and
pop
sub
movl
ret
inc
popa
and
jecxz
pop
je
pusha
lret
dec
push
gs
mov
ljmp
mov
push
fucomi
sub
dec
adc
bound
mov
stos
jno
jmp
mov
idivb
inc
daa
roll
pushf
jecxz
out
inc
mov
xor
push
add
in
pop
lret
xor
sbb
sub
jecxz
mov
sbb
push
dec
das
fcomi
insl
nop
icebp
jp
mov
fcmovnbe
sbb
in
rclb
fcompl
gs
insl
mov
fs
mov
jns
cmp
mov
popa
mov
aam
xchg
out
lea
fstl
pop
mov
test
mov
add
mov
cltd
jo
push
cmp
inc
leave
out
sub
push
stos
or
jg
fcmovnb
popa
sarl
test
js
mov
test
lahf
push
jne
dec
xchg
mov
insb
or
dec
xor
jl
adc
push
push
push
mov
je
or
pop
cltd
inc
in
or
jge
inc
ja
repnz
mov
sub
daa
xchg
cmp
aaa
in
push
ja
jne
push
bound
xchg
jne
or
imul
cmp
sub
fdivs
aaa
mov
mov
add
jl
or
push
lcall
dec
shlb
xchg
in
push
ficoml
dec
mov
in
pop
xor
adc
jnp
loope
insb
adc
sbb
stos
mov
shl
mov
jp
leave
push
fstpl
jae
xchg
mov
pop
adc
movsl
ret
jmp
nop
pop
les
adc
and
into
jg
and
fistpl
and
out
fcmovb
push
dec
inc
les
jecxz
out
add
mov
arpl
mov
leave
pop
insl
bnd
outsl
aam
cmp
xchg
lds
sub
pop
test
adc
or
out
lcall
sbb
mov
inc
mov
push
das
imul
inc
or
and
test
scas
and
jo,pn
or
push
lds
dec
jmp
ljmp
jno
ss
and
daa
sbb
stos
enter
in
cmpl
cmpsb
dec
fwait
inc
inc
xchg
inc
cmc
push
jmp
icebp
test
mov
enter
or
movsl
out
sub
push
push
cmp
mov
shl
les
mov
push
fisttpl
cmpsb
dec
mov
movsb
sbb
lods
sub
xor
jecxz
push
dec
sbb
lock
xorb
shrb
xor
adc
pop
inc
sub
add
fdivl
cmp
lcall
lea
mov
cmp
test
out
push
test
mov
in
mov
mov
mov
dec
andb
icebp
sahf
mov
mov
mov
mov
shrl
int
notb
xchg
idivl
scas
fcoms
mov
ss
js
adc
shll
lods
stc
push
cltd
mov
outsl
jl
icebp
xor
push
xor
lock
scas
xchg
es
sub
out
inc
add
cli
dec
cmc
stos
out
fildll
mov
int3
shlb
mov
lcall
cwtl
jle
sarb
aad
fdivr
loopne
xchg
mov
and
inc
mov
sti
pop
adc
sub
inc
sub
rcl
std
insl
mov
push
leave
sub
xchg
mov
jl
les
mov
dec
dec
inc
xor
dec
jns
shrl
in
pop
sub
adc
out
push
dec
stc
movl
xchg
pop
sub
jecxz
clc
push
je
cmp
dec
xchg
pop
lock
and
test
jbe
dec
mov
inc
repnz
lods
pop
shr
adc
sbb
or
flds
xchg
sub
mov
ss
cwtl
movsb
jecxz
std
sbb
sub
jle
mov
jmp
xor
add
pushf
das
adc
pop
lock
jbe
cld
jae
mov
inc
ror
cmpsb
gs
pop
push
push
icebp
xor
les
sbb
mov
insl
ja
loopne
or
mov
or
dec
mov
shlb
cmp
test
inc
mov
imul
mov
test
ljmp
repnz
inc
mov
fnsave
sbb
fwait
rcrb
jl
repz
lods
loop
sbb
popa
xchg
cmp
ljmp
xchg
cmp
xchg
stos
loop
sub
or
fdivrl
xchg
aaa
adc
xor
xor
or
stos
lock
xor
xor
sub
je
or
pop
add
fwait
enter
pop
adc
pop
dec
jo
jns
fstpl
dec
mov
outsl
fbld
xchg
mov
pop
jns
cmp
xlat
repz
jmp
push
mov
sub
jne
sahf
leave
dec
and
xchg
mov
xlat
mov
xchg
xor
imul
int
or
sub
int
jp
and
mov
ret
call
xchg
fildll
xchg
sahf
and
or
dec
jle
adc
insb
xorb
stos
push
aam
push
popf
sub
mov
mov
mov
js
mov
jbe
ret
jo
out
adc
jl
push
outsl
cmp
mov
sbb
cs
or
or
push
push
and
out
jb
sbb
hlt
sbb
or
cmp
rclb
lds
jmp
pop
mov
mov
add
lds
aaa
insl
in
sbb
mov
jge
pusha
xchg
jbe
int
push
jle
xor
jno
lret
mov
cld
jo
mov
mov
mov
out
jl
ljmp
push
mov
enter
in
push
andl
lret
test
mov
xchg
lahf
xchg
jg
and
push
movsl
out
scas
addr16
test
cmp
in
sub
cmp
fstpt
push
in
pop
dec
fsubrs
loope
mov
jo
stos
xor
lods
out
and
sbb
loop
addb
push
rolb
test
outsb
mov
pop
into
fcompl
pop
push
mov
pop
add
inc
int
add
pusha
and
inc
aad
lret
or
mov
data16
and
jg
pop
in
cmpb
sub
loopne
pop
mov
popa
xor
fstps
int3
pusha
idivl
fnstcw
adc
xor
fs
stc
pop
adc
xor
push
xor
in
into
xchg
jmp
or
jge
xor
pop
gs
addb
cli
lods
imul
shld
add
fcoml
mov
adc
jne
loopne
jmp
adc
dec
sti
or
scas
and
rclb
push
xlat
cmp
cmp
nop
pop
sbb
xchg
sbbl
mov
fldenv
jp
push
decl
mov
inc
aad
sbb
jmp
jmp
add
mov
ficomps
push
jo
add
call
or
dec
jecxz
fsubl
dec
or
dec
jb
xchg
pop
aas
inc
ret
fldl
lea
inc
jns
dec
pop
jbe
mov
dec
rorl
jmp
xor
xchg
mov
inc
or
shll
rcr
shll
movsb
cltd
mov
xchg
mov
das
repz
push
lock
aas
mov
adcl
adc
xor
cmpl
xor
sbb
pop
insl
pop
jmp
es
mov
pop
aam
adc
sub
test
imull
cmp
mov
dec
dec
and
shlb
mov
lock
ljmp
mov
jle
hlt
fstp
dec
addr16
rclb
mov
rclb
aam
mov
imul
repz
xchg
test
out
out
test
add
or
ljmp
xchg
stc
test
jle
dec
inc
mov
mov
icebp
jne
or
push
inc
xor
iret
decl
fidivrl
add
adc
cli
or
inc
mov
xchg
or
mov
mov
mov
lods
xchg
fnstenv
in
add
jns
jo
bound
repz
lret
mov
into
jo
aad
pop
dec
add
jnp
cs
cmp
insb
lea
cmpsb
jg
add
push
out
movsl
sti
xorl
cmpsb
jmp
mov
jae
mov
jne
adc
jnp
enter
sbb
cmp
mov
dec
mov
enter
arpl
pop
inc
leave
mov
pop
andb
repz
adc
inc
fistl
adc
imul
mov
xchg
pusha
and
pop
inc
ret
push
mov
cmpsl
adc
sub
jge
arpl
sbb
repnz
push
shlb
lds
repz
jecxz
fmul
loopne
sub
sbb
sub
add
aaa
sub
lock
sbb
jbe
mov
push
int
pop
movsb
push
jp
cmp
std
bound
sub
outsb
lds
pushf
push
xchg
dec
enter
sbb
js
repz
daa
sbb
jo
push
sbb
cmpsb
push
sub
mov
xchg
push
xchg
popf
out
test
popa
dec
pop
lahf
mov
lret
aas
int3
movsl
cmc
int3
in
ds
cmp
nop
sub
loope
loope
jl
push
mov
lret
mov
out
xor
ss
mov
mov
xchg
gs
and
enter
or
push
and
lcall
adcb
jbe
or
mov
xchg
and
mov
push
js
mov
mov
mov
mov
fldl
mov
rorl
bt
mov
pop
xchg
fdivrl
idiv
push
jl
lret
pop
out
fistpll
nop
adc
jmp
fs
lds
loop
jle
outsl
cmp
das
cmc
mov
inc
test
add
xor
mov
cli
mov
shl
stc
decl
sub
add
shll
pop
dec
inc
adc
fcompl
repnz
loopne
push
movsb
gs
lods
scas
decb
lods
in
mov
push
sub
pop
xlat
jnp
sub
lret
xorl
and
xchg
inc
and
add
popf
xchg
addr16
jge
repnz
incb
cmp
fstps
aas
cs
mov
push
pushf
rorl
adc
pop
pop
test
mov
call
jo
cmp
jecxz
add
je
icebp
pop
dec
cmpl
aas
out
cmovo
jae
add
gs
sbb
jp
clc
dec
mov
and
sub
mov
fadds
std
push
fcomi
shll
and
movsl
les
daa
xchg
das
shlb
lock
or
imull
lret
jg
je
scas
mov
mov
sbb
dec
dec
and
mov
ret
jnp
jp
or
ror
jne
pop
ret
mov
jns
int
cmc
push
inc
mov
pop
aas
fldenv
jmp
xchg
xchg
stos
dec
mov
mov
xor
push
xchg
cli
test
popf
in
mov
cmpsl
cltd
or
or
mov
stc
push
into
addr16
lret
lock
out
push
pop
mov
pop
fdivrl
dec
sbb
cmpsb
test
dec
sub
ss
mov
mov
cmp
jl
cmp
sub
lods
pop
mov
data16
add
mov
or
or
add
or
push
adc
andl
xor
mov
fwait
call
in
fistpl
in
cli
mov
mov
mov
pushf
dec
mov
mov
iret
dec
mov
xor
mov
mov
or
jge
sub
sarl
xchg
dec
mov
mov
fildll
outsl
jae
sbb
mov
adc
dec
insb
push
pop
test
in
dec
stos
cld
pop
mov
jno
mov
out
adc
jae
popl
aam
int3
pop
mov
sub
adc
inc
je
dec
mov
int
daa
mov
sahf
fcmovu
daa
imul
push
and
mov
arpl
xchg
mov
scas
xchg
out
mov
pop
bound
mov
sahf
fisubrs
and
jae
int3
lret
xchg
push
add
jnp
aaa
jmp
les
js
scas
jge
mov
imul
and
inc
and
jne
scas
sarl
xor
jg
insl
dec
aaa
dec
lret
jl
outsl
jmp
lret
cmp
jl
sbb
frstor
inc
inc
outsb
fcoml
bound
xor
xchg
lahf
sar
and
dec
sub
xchg
test
and
or
push
dec
rclb
pop
fs
push
out
pop
sbb
idivb
xor
outsl
cmp
cmpsl
mov
subb
outsb
sarb
in
outsb
xorl
int
adc
mov
clc
push
insl
pop
pop
lcall
pushf
sub
jecxz
push
lea
and
add
xor
sub
std
xlat
or
repz
mov
jae
lods
sbb
cmpsb
or
add
lret
cmc
idivl
cmpsl
xchg
cmp
xchg
adc
fs
js
jne
mov
xor
mov
xor
sub
cmc
jg
inc
into
push
aaa
or
xor
xor
clc
xor
mov
lods
adc
adc
add
mov
test
pop
cmp
loopne
rcrb
das
add
in
or
cmp
mov
or
mov
aas
loopne
cmpl
xchg
pop
cmpsb
outsl
repz
mov
jp
inc
nop
notb
pop
dec
pusha
nop
adc
sub
and
int3
jmp
cld
test
sub
pop
aaa
je
movl
out
outsb
xlat
ja
insl
in
pop
jecxz
jo
je
leave
fmull
and
or
cld
inc
lcall
pop
mov
gs
shll
jp
pop
mov
mov
out
scas
cwtl
aad
mov
testb
rol
inc
or
sti
fs
mov
nop
xchg
lock
leave
mov
jo
xchg
lret
out
inc
sbb
pop
icebp
mov
inc
mov
sbb
sti
insl
sub
push
es
mov
daa
aam
ret
xor
rcrb
mov
int3
and
sbb
enter
sbb
lahf
out
ljmp
loope
hlt
xchg
cmp
push
pop
sbb
xchg
mov
or
mov
sbb
adc
shr
xchg
adc
push
out
mov
or
pop
xchg
pop
rcrl
dec
push
xchg
arpl
adc
outsl
mov
xchg
sub
xor
mov
pop
add
leave
movsb
push
inc
les
push
jno
or
cmp
inc
push
dec
dec
dec
push
ja
mov
mov
fsts
or
movsl
add
in
jg
xor
mov
push
lods
jne
ds
dec
leave
xor
mov
or
jp
xlat
and
push
insl
or
icebp
stos
sub
push
dec
mov
xchg
sbb
xor
dec
rcll
xchg
test
in
cmp
inc
int
jnp
mov
cmc
and
cmp
outsl
scas
inc
push
pop
pop
xchg
mov
push
cwtl
out
jmp
rcll
or
ret
lods
iret
or
xchg
adc
jecxz
scas
lods
pop
aad
mov
inc
lret
xchg
push
xchg
imul
shrb
loope
imul
addr16
arpl
push
hlt
stc
xchg
push
leave
xor
dec
enter
je
cmpsl
sahf
lahf
xor
or
mov
int3
mov
or
inc
repnz
data16
aaa
stos
imul
lahf
loope
jecxz
fbstp
insl
int
imul
push
fsubrs
test
imul
mov
femms
bound
mov
jno
adc
out
add
sbb
push
sbb
in
pop
xchg
push
test
push
sub
outsb
push
pop
inc
jno
lock
test
add
cmpl
inc
cltd
sub
pop
push
loope
out
push
mov
pop
or
es
jl
pop
inc
mov
inc
xor
jb
inc
jns
sbb
nop
add
inc
and
rclb
sbb
out
sub
jns
les
xchg
pop
andb
int
sub
push
nop
mov
movsl
mov
push
dec
mov
cmpb
fwait
imul
cs
sahf
push
mov
insl
insl
testb
insl
lret
sbb
jns
and
inc
test
fcmovu
loope
lahf
jge
imul
stc
sub
mul
enter
clc
loope
xor
sbb
into
cmp
out
or
sarb
and
ja
push
cli
sbb
out
das
inc
mov
adc
cwtl
sbb
add
dec
out
adc
sti
imul
aam
pop
idiv
loopne
popa
mov
push
push
cli
sti
sbb
in
jbe
or
sub
stc
fwait
cmp
adc
lret
repz
in
lret
add
inc
mov
pop
pop
nop
in
aad
push
cli
cs
ljmp
daa
push
jle
mov
xchg
jns
jg
iret
call
ds
jo
test
iret
and
dec
jno
adc
sbb
aas
and
xchg
inc
mov
mov
push
xor
fcmovnu
fnstsw
dec
lods
push
xor
pop
cld
lcall
jb
std
mov
testb
jns
scas
movsb
sub
dec
in
inc
das
nop
mov
gs
add
lret
pop
add
cld
add
fdiv
mov
xchg
push
inc
popa
insl
adc
hlt
es
sbb
cltd
or
aam
cltd
nop
sub
push
out
shlb
sbb
add
in
mov
xchg
cmpl
dec
sbb
js
ljmp
xor
das
or
push
sbb
xchg
cmp
adc
je
out
push
test
xchg
pop
pop
inc
out
pop
mov
test
xor
out
pop
jecxz
notl
testl
js
testl
sarb
cmp
push
rcrl
jmp
movl
nop
insl
ja
call
lcall
xlat
arpl
dec
cmp
sub
je
pop
pop
sub
mov
jnp
inc
xchg
dec
lret
test
or
mov
adc
fsubr
cmp
cmpsl
jne
xchg
dec
dec
lods
push
mov
inc
mov
loop
jp
lcall
cmc
stc
lcall
inc
pop
sbbl
xchg
jecxz
ds
add
cltd
jmp
in
stos
fistpll
sahf
push
jnp
loope
insb
sub
iret
and
fsubrl
push
cltd
lds
pop
lods
jle
cmp
rclb
cmp
lds
mov
daa
add
sub
lock
imul
adc
cmp
loop
scas
adc
mov
fcmovnbe
sbb
popf
xor
gs
fiaddl
daa
inc
aas
fsqrt
push
repnz
inc
repnz
mull
bnd
inc
jmp
leave
lods
into
imul
repz
inc
lds
push
fidivs
arpl
int3
mov
cwtl
enter
mov
imul
jge
mov
push
push
mov
js
cmp
and
loopne
jg
leave
jo
ret
jl
daa
push
inc
push
sub
enter
inc
xchg
jno
loop
cmp
pop
aas
daa
pop
repnz
adc
sub
push
adc
cmpsb
fisubl
inc
popa
fisttps
push
mulb
adc
adc
je
outsb
movsl
or
ds
in
cmp
or
loope
push
lods
push
jnp
pop
dec
cmc
add
cmp
jl
xor
add
xlat
movsl
sbb
adc
mov
sbb
dec
test
aas
faddl
aad
push
sbb
lret
inc
addr16
pushl
bswap
stos
push
iret
push
xchg
mov
xchg
mov
mov
mov
cld
mov
jg
arpl
subb
xchg
test
int
mov
clc
fimull
rorb
mov
push
fdivr
hlt
xchg
cmp
sbb
sub
testb
jecxz
add
pop
jmp
outsl
xlat
adc
cmc
or
add
or
idivl
in
and
dec
jg
out
or
ret
cmpl
adc
xchg
pusha
imul
bound
jle
loopne
add
mov
jne
jg
leave
sti
ljmp
lcall
cmp
mov
xchg
lea
jp
lahf
lret
pop
out
adc
inc
sub
and
nop
enter
scas
xchg
cs
jmp
or
adc
add
incb
shr
sbb
jae
pop
jecxz
adc
je
jne
dec
call
push
scas
aas
ret
int
inc
shlb
mov
fildl
sbb
xchg
outsl
lret
cltd
mov
mov
test
cwtl
dec
mov
std
pop
insb
lock
jb
popa
sbb
cmp
jb
loopne
outsl
out
jnp
jmp
push
mov
mov
test
cld
das
jge
icebp
arpl
mov
push
andb
cli
mov
es
pop
loop
sub
pop
sub
aad
rolb
sahf
pop
pop
dec
sahf
mov
mov
xchg
pushf
or
lock
xchg
clc
push
push
fnstsw
mov
fisubrs
mov
cltd
mov
mov
psrlq
push
pop
in
xchg
mov
das
test
enter
pop
sbb
mov
test
sub
dec
movsl
xchg
outsl
xor
shll
cmpsb
pop
pop
decl
or
mov
fwait
mov
xchg
or
and
outsb
in
dec
das
gs
pop
lcall
pushf
ret
xchg
adc
push
push
mov
xor
sahf
mov
sub
jne
inc
add
cwtl
push
mov
jge
mov
es
jp
adc
addr16
push
or
xchg
std
sub
pop
mov
sahf
xchg
scas
sti
mov
cmp
xchg
fsubrs
pusha
mov
cmpb
and
outsb
insb
xchg
pop
ret
and
mov
inc
push
fdivs
lds
outsl
arpl
icebp
inc
inc
cmc
sub
pop
pop
adcb
cltd
iret
lret
adc
sub
push
rolb
scas
jae
les
movsl
stos
sbb
lret
add
notb
push
pop
pop
xchg
inc
cmc
divl
arpl
aam
xchg
into
leave
and
dec
repnz
inc
mov
fucomp
ffree
fdivr
insl
ficoms
pop
pop
lahf
add
int3
mov
out
je
data16
aaa
sub
xor
out
xchg
jbe
sbb
or
mov
and
dec
adc
mov
and
sub
insb
dec
test
icebp
jl
imul
xlat
pop
cmp
push
jae
enter
in
in
xorl
lock
fcoms
into
test
lods
adc
lahf
cs
add
imul
push
cmp
sahf
fsub
dec
loope
push
and
or
or
aas
fdivp
xor
cli
pop
add
mov
sbb
and
clc
popl
mov
dec
mov
adc
lods
xor
sub
mov
push
jb
rcrb
inc
scas
sub
pusha
leave
push
xchg
add
mov
rorl
dec
sbb
fisubrl
jbe
inc
xchg
dec
test
aas
sbb
lret
inc
test
add
roll
lret
or
fdivs
je
ss
ret
cmp
mov
sbb
out
int3
outsw
mov
cmp
push
out
push
cmc
aam
mov
add
xchg
or
mov
rdtsc
and
push
loope
cmc
outsl
rorl
jmp
data16
add
add
ret
adc
jnp
imul
jns
pop
xchg
or
xor
cwtl
loope
sti
js
mov
mov
psllw
ja
pop
cmp
int3
inc
xchg
push
loopne
rep
cmpsl
fwait
cli
sbb
jns
cmp
xchg
hlt
dec
jp
fcoms
cmc
sbb
cs
mov
pushf
jge
adc
cmp
out
mov
call
or
fadd
jbe
adc
in
dec
je
dec
push
dec
pop
stos
mov
add
cmp
fiaddl
inc
sbb
cld
pop
movsl
xchg
jmp
dec
subb
inc
sahf
in
mov
dec
mov
std
add
fcomi
adc
shll
repz
call
adc
lock
orl
mov
sarl
cld
pop
bts
cmp
add
adc
inc
jae
loope
add
pop
data16
mov
repz
inc
adc
rclb
movsl
mov
mov
xchg
or
mov
add
lret
lods
pop
movsl
adc
xchg
adc
dec
lcall
movsl
lods
push
frstor
sub
mov
mov
pop
cltd
out
inc
add
in
orl
jb
push
cmp
shr
mov
stos
xchg
gs
pop
mov
rcrl
int
xchg
dec
push
dec
inc
faddl
mov
push
adc
ljmp
ss
add
mov
add
cs
fwait
loop
icebp
or
aam
inc
add
jge
ja
js
pop
xchg
xor
mov
test
in
jge
jns
sub
out
and
xor
out
dec
jb
add
add
ss
jp
cmp
addr16
mov
jmp
subl
mov
cmp
cmpsb
int
stos
push
cmpsb
fbld
add
in
mov
inc
jnp
jo
insb
add
stos
enter
pop
sub
aam
or
xor
jae
out
addb
pop
xchg
mov
fcmove
sub
stos
push
sbb
cmp
sbb
int3
in
adc
lcall
mov
test
clc
insl
pop
arpl
and
ficoml
push
sub
add
clc
mov
lds
hlt
fdivp
insb
mov
int3
ja
outsb
add
push
jae
aas
push
divb
out
sbb
fs
xchg
jbe
and
movsb
or
cmp
and
jg
jo
lret
or
fmuls
push
adc
jno
lock
cmp
js
enter
in
aam
push
cmpsb
loopne
pop
inc
jg
scas
push
mov
test
lahf
dec
push
pushf
and
sbb
adc
cs
mov
loope
xchg
dec
push
jle
pop
fwait
sarl
adc
shlb
xor
or
add
sbb
addl
xor
outsb
popa
push
shlb
sub
cmpxchg
mov
rcr
pop
outsb
add
jne
lcall
mov
int
push
das
push
cltd
aad
and
nop
or
mov
mov
jg
incb
sbbb
test
in
sahf
call
sbb
pop
dec
mov
and
push
or
lret
cmp
mov
pop
fdivs
push
cmp
mov
push
movsl
fs
pop
stc
push
pop
scas
loop
loop
outsl
xchg
jge
xor
aad
into
jecxz
in
das
push
cltd
cmp
cmp
cli
mov
out
push
orb
cmp
add
fwait
mov
imul
cmp
or
sbb
mov
dec
nop
in
mov
ret
outsb
hlt
sub
xchg
mov
repnz
pop
jno
xchg
adc
push
repz
jbe
fnstenv
cs
fsts
aad
push
subb
jge
jmp
and
sub
inc
pop
add
jmp
call
jae
cli
jns
shl
cld
enter
jb
dec
and
aas
add
mov
inc
mov
test
gs
dec
insl
mov
push
mov
std
jp
jno
cwtl
shrl
stos
leave
xchg
notb
xor
dec
inc
and
cltd
cmp
push
clc
stos
das
sub
cltd
cs
or
lret
stos
int
cld
test
icebp
adc
mov
adc
jns
pop
mov
adc
mov
dec
test
jno
jo
or
repnz
mov
pushf
int
mov
mov
sbb
jb
imul
iret
pop
xchg
out
inc
clc
loopne
scas
sbb
mov
test
push
leave
cltd
push
cmpsb
xchg
add
pop
setno
dec
push
adc
in
out
inc
sub
add
pop
xor
lret
sbb
mov
xchg
mov
dec
sti
mov
mov
hlt
mov
mov
push
or
out
stos
xor
dec
xchg
add
dec
clc
add
rol
push
fwait
adc
inc
inc
pushf
push
ret
dec
adc
shlb
jne
adc
inc
loope
xchg
mov
mov
shl
inc
jns
cmp
lret
pusha
or
add
mov
jg
orb
jg
data16
mov
push
jp
sbb
je
stos
or
mov
sub
imul
ja
jmp
jle
sub
pusha
fcomps
in
push
cmpl
fiadds
insb
insl
hlt
mov
push
lcall
push
and
mov
mov
xchg
push
cmc
add
jae
xor
jecxz
pop
int3
mov
gs
iret
mov
imul
jbe
imul
jle
lea
pop
or
inc
mov
mov
sti
push
arpl
adc
adc
out
rclb
push
ficomps
mov
int3
bound
pop
or
nop
loopne
cmpsb
mulb
jg
mov
push
cmpsl
dec
out
movsb
xchg
imul
rcr
push
scas
sbb
pop
jo
in
shlb
out
xor
jl
cmp
jno
sub
cmp
add
enter
in
mov
scas
mov
pop
jg
push
sahf
mov
mov
jp
push
lods
fstpl
lahf
mov
nop
ds
mov
imul
cmp
jl
jae
clc
lea
jle
out
fsubl
lret
pop
cmpsb
add
jmp
mov
pop
jns
rolb
sub
outsb
jb
push
sub
fcmovnu
or
es
and
lcall
pop
sub
jno
pushf
sbb
and
not
mov
orl
cmpb
test
loopne
sahf
mov
xor
shl
ror
xchg
pop
divl
std
fsubrs
daa
pop
ss
xor
fcmovnbe
aas
fs
mov
stc
or
mov
xor
sub
cmc
bound
sbb
sahf
lods
cmc
cmp
cmp
dec
cli
out
leave
out
mov
pusha
lods
xchg
imul
movsb
mov
add
mov
stos
dec
aaa
imul
das
xchg
pop
aam
loopne,pt
imul
inc
stos
mov
fidivrs
xchg
sti
push
movsl
in
and
loop
jnp
cmc
xor
icebp
cmp
stc
add
or
scas
les
and
lock
out
push
dec
cmp
nop
pop
mov
inc
cs
mov
pushf
rcrl
push
aad
pop
mov
add
call
ficoml
xchg
jl
jp
or
fimull
cmp
stos
dec
loop
mov
lahf
mov
pop
jmp
mov
xchg
mov
mov
cld
mov
adc
cwtl
jl
lahf
std
push
dec
notb
fsubl
and
xchg
jbe
push
addl
das
or
mov
mov
rcl
mov
clc
lret
sbb
mov
call
test
lods
dec
add
gs
xchg
rcl
cmp
sbb
add
sarb
sub
mov
sbb
bound
aas
popa
mov
xor
jp
sbb
mov
daa
jns
mov
pop
daa
test
push
xor
add
loop
lock
lock
xchg
jne
pushf
out
mov
jmp
pop
fimuls
cmpsb
sbb
push
sub
leave
inc
push
dec
adc
cmpsl
xchg
sub
xor
mov
xor
add
repz
lods
out
push
je
push
fwait
inc
out
or
mov
inc
xor
dec
or
aad
aad
outsl
pop
or
pop
mov
mov
xchg
add
imul
jne
in
mov
out
jecxz
bound
inc
les
mov
ret
scas
mov
ds
add
sbb
loope
mov
out
int
sbbl
jg
and
clc
fbld
fwait
pusha
jae
push
inc
jle
push
jnp
adc
fsubrs
sbb
outsb
int3
mov
push
xchg
sahf
mov
popf
fsts
ljmp
cmp
pop
add
mov
js
loop
out
icebp
adc
jmp
push
cmpsl
jae
pushf
ficomps
imul
sbb
dec
stos
xchg
rcll
inc
cmp
or
mov
inc
mov
arpl
mov
leave
mov
mov
js,pn
lds
add
cmp
fstpl
je
int3
dec
add
add
fwait
lcall
jecxz
sbb
popa
sarl
es
mov
jnp
movsb
pop
jno
and
pop
scas
sti
clc
mov
stos
and
cwtl
sbb
push
sarl
and
push
jno
lea
out
daa
adc
mov
jmp
in
mov
pop
adc
push
and
lds
es
test
and
jmp
push
ds
jmp
stos
sub
lahf
shl
xchg
data16
push
pop
pop
inc
push
and
sti
add
add
mov
xor
xchg
and
icebp
subl
pop
fnstcw
rcr
add
outsb
aad
in
sub
dec
fdivl
pop
fstpl
sti
push
adc
pop
sti
xor
push
lahf
xlat
dec
and
mov
mov
xchg
jae
dec
test
adcb
call
sbb
in
sub
sarl
lret
jmp
xor
hlt
fsubr
jg
cmp
sub
push
and
sbb
cmpsl
test
push
xor
inc
cmc
sub
push
or
push
add
stos
mov
mov
mov
popa
lods
jl
push
daa
inc
cs
into
repnz
xor
adc
pop
jbe
repz
loopne,pt
pusha
push
dec
pop
incb
push
sti
test
xor
push
mov
cmp
sbb
cltd
cs
repz
pusha
les
sub
inc
add
ds
xchg
push
in
nop
xor
out
aad
xor
cs
dec
ret
jmp
dec
sbb
arpl
imul
and
jg
cmp
sbb
mov
mull
aas
aas
sbb
cmp
gs
mov
pop
pop
mov
fcmovnb
mov
dec
inc
pop
fiadds
push
xlat
push
mov
dec
cwtl
aaa
cmpsl
in
stc
mov
neg
imul
and
loopne
mov
sub
das
jmp
inc
lock
push
mov
call
ret
lret
mov
cmpsb
cld
fstpt
sarb
adc
xchg
jb
es
imul
and
mov
sub
inc
sub
fwait
xchg
popf
mov
stos
cmpl
adc
lods
dec
arpl
lahf
shrl
ljmp
jle
push
cli
fstl
test
push
ljmp
test
lods
dec
cltd
mov
push
add
inc
inc
cmovg
pop
xchg
mov
cmc
sub
mov
shll
mov
xchg
test
sbb
xor
xchg
add
dec
jo
or
cwtl
lahf
xor
pop
inc
incl
aaa
push
add
scas
xor
pop
add
fwait
outsl
in
or
loop
inc
lret
dec
sti
cld
ja
fisttpl
mov
lret
xchg
push
or
out
data16
inc
andl
pop
cmpxchg
or
sbb
test
mov
adc
negb
addr16
cli
or
int
sub
push
cmpsb
dec
xchg
fiaddl
jmp
and
aaa
filds
inc
mov
jle
add
add
push
and
adc
popf
add
push
jnp
inc
jae
orb
cmp
adc
mov
or
inc
inc
int3
adc
mov
ljmp
leave
jmp
sbb
xor
inc
mov
movzbl
add
push
mov
xor
repnz
mov
dec
jns
insl
mov
int3
cmp
xchg
or
push
cmp
and
mov
xchg
adc
jge
add
push
inc
out
push
movsb
stos
push
pop
cmp
ret
and
jno
scas
fidivrl
cmpsb
jo
outsb
jno
pop
jl
push
mov
push
dec
inc
pop
call
jno
adc
and
adc
push
in
mov
sbb
inc
sub
rclb
xor
stc
sbb
and
sub
movsl
sub
mov
xor
jle
in
loope
test
pop
test
mov
popf
sbb
dec
gs
xor
popf
add
cltd
dec
sbb
cmp
xorb
add
jle
dec
sarb
xchg
cmp
or
push
repnz
pop
mov
lcall
outsl
sub
jge
push
mov
in
mov
ret
jge
ja
fwait
mov
incl
notb
repnz
call
sub
mov
imul
div
je
fsubs
imul
insb
add
adc
int
lods
stc
jle
jbe
lret
loop
pop
jle
xor
xlat
cmc
lock
mov
or
cmp
ret
or
orl
out
pop
outsb
mov
outsb
lods
arpl
data16
loop,pt
jo
inc
adc
push
imul
popa
pop
adc
loopne
push
mov
sti
xor
add
clc
fisubl
fisttpl
xlat
jae
xlat
cmp
mov
xchg
pop
fstpt
stos
mov
enter
fadds
cmp
dec
divb
add
adc
cs
mov
xor
adc
iret
jns
sub
addb
movb
int3
je
jecxz
dec
cmp
jb
mov
lods
inc
push
mov
lret
pop
xor
mov
bnd
cs
dec
mov
push
cld
mov
and
mov
add
clc
and
sbbl
xlat
shrb
push
sbb
mov
sub
movsl
out
or
jle
cld
push
mov
pop
mov
adc
push
dec
clc
aaa
repnz
jge
mov
ret
repz
rolb
jmp
bound
pop
mov
mov
and
or
into
and
addb
jg
mov
out
fnstsw
cwtl
push
mov
adc
test
pop
mov
add
leave
scas
lfence
adc
out
jmp
out
imul
pop
xor
xchg
sar
cmpsl
rcrb
sub
pop
test
xchg
loop
xchg
sbb
or
arpl
inc
test
pushf
add
jg
add
mov
movsl
out
mov
rolb
dec
dec
out
in
ja
scas
out
xorl
inc
mov
scas
icebp
xchg
mov
pop
leave
jns
inc
in
test
xorb
mov
dec
dec
mov
mov
and
jp
icebp
and
ljmp
xlat
lods
in
jmp
inc
xorl
imul
div
sbb
mov
aam
in
test
ss
jnp
mov
sbb
pushf
pushf
data16
xchg
mov
inc
mov
daa
xor
push
ds
popa
jae
mov
pop
jno
mov
sahf
or
adc
call
adc
mov
imul
mov
jg
add
jne
mov
cmp
cmp
add
arpl
aad
leave
jbe
jbe
jns
scas
mov
fs
lds
add
adc
pop
mov
add
mov
aaa
jecxz
sbb
jge
mov
lret
push
xchg
movsb
mov
cmp
insb
jb
mov
fdivs
int3
out
xor
xchg
movsb
add
xchg
sbb
push
jno
mov
pop
daa
adc
in
jo
dec
cmpsb
in
adc
inc
mov
mov
push
int3
sbb
lahf
leave
orb
test
lahf
andl
loope
enter
hlt
rcll
sbb
pop
push
addr16
push
jmp
mov
sbb
pop
addb
frstor
stos
adc
fwait
sub
fmull
xchg
sbb
sarl
add
sbb
stc
aad
sub
aad
int
mov
and
lahf
mov
mov
and
idivb
fs
lret
mov
test
inc
sahf
mov
push
mov
push
inc
shrl
divl
mov
repz
cmc
mov
enter
cmp
fdivr
sub
inc
subl
xorl
mov
sbb
outsl
adc
jmp
jns
movl
xor
out
adc
lods
dec
pop
ds
add
adc
imul
inc
mov
add
jbe
jecxz
push
out
add
inc
imul
arpl
mov
dec
arpl
mov
popa
cmp
call
mov
jns
enter
push
test
push
daa
nop
ljmp
cs
das
jmp
mov
aam
hlt
adc
in
mov
and
xbegin
mov
xchg
movb
popa
je
pop
out
dec
mov
std
jb
pop
test
inc
jb
cmc
inc
mov
shl
xchg
sbb
push
xorl
cmpl
std
inc
xor
negb
mov
cmp
addr16
push
mov
das
test
ret
divl
mov
lret
xchg
enter
xchg
icebp
insl
pop
lds
adc
scas
dec
repz
insl
fs
es
data16
add
fisubrs
jmp
xor
pop
fsts
mov
mov
add
mov
push
push
xchg
popa
int
outsb
ljmp
mov
int3
dec
frstor
push
jo
push
mov
push
ja
adc
cmp
add
push
prefetch
push
cmp
inc
out
int3
pop
stos
cmp
mov
rcll
add
fsubl
xchg
cmp
test
mov
dec
dec
xor
mov
fdivl
xor
ss
mov
push
xor
negb
add
pop
or
fwait
int
aaa
or
mov
imul
pop
jo
cmp
sub
push
fiaddl
xchg
out
cltd
mul
std
sub
or
aas
bound
daa
lock
sub
mov
nop
int
fwait
les
loope
push
mov
adc
mov
ret
mov
fisubl
mov
dec
sub
outsb
hlt
mov
inc
sub
fldl2t
push
lea
ffreep
xor
pusha
inc
jnp
in
mov
jle
push
push
jnp
cmp
pop
and
xchg
pop
push
push
sub
popf
dec
fxch
push
add
cmpsl
inc
aaa
aas
arpl
jecxz
ret
mov
add
adc
out
push
jl
push
scas
imul
imul
popf
xchg
in
fisubrl
imul
mov
dec
inc
or
pop
mov
mov
std
leave
in
ds
int3
cmpsl
mov
jg
add
jge
fisubs
lret
push
imul
jnp
aaa
mov
sub
shll
pop
adcl
xor
xor
adc
mov
addr16
dec
push
lea
jno
mov
daa
adc
enter
in
push
fldl
outsl
sbb
push
sbb
test
lahf
push
dec
lahf
call
lock
cmp
ds
cmp
jmp
loope
das
pop
push
rcrl
add
insl
js
sahf
pop
js
ret
shl
cmc
dec
jle
lcall
adcb
cmp
push
shrb
repz
outsb
xchg
sub
jge
mov
loope
jl
jg
mov
aas
pop
js
sbb
int
fs
push
test
xor
in
shll
data16
ret
cmp
dec
jle
out
xchg
movsb
cwtl
sbb
adc
cmp
lahf
divl
inc
fcomps
cmp
gs
ss
push
fs
mov
loop
pop
subl
mov
cmc
jle
test
push
push
or
xchg
cmp
cltd
dec
xor
shll
mov
fsub
out
jge
dec
ret
push
xor
data16
into
add
fnstcw
dec
sbb
mov
sbb
loopne
mov
gs
into
adc
push
xlat
sti
xchg
add
andl
das
mov
icebp
loopne
cmp
fcomps
sbb
loop
xchg
repz
bound
cmp
insl
fld
dec
jae
cmp
dec
mov
out
nop
lds
push
ja,pn
repz
iret
bound
out
pop
and
ja
cmp
lea
insl
mov
or
add
or
jb
ret
sbb
loope
repz
inc
inc
lahf
inc
pop
ja
jecxz
push
das
orb
or
arpl
cwtl
push
dec
movsb
mulb
mov
and
rcll
xor
push
mov
mov
mov
loope
mov
inc
lret
aad
pop
cld
pop
loopne
icebp
inc
cmp
mov
movntps
out
sub
dec
divl
xor
push
ret
adc
aam
pop
stos
sub
push
js
or
mov
mov
xor
mov
mov
sbb
xchg
and
clc
pop
jnp
fisttpll
mov
pop
scas
jbe
xor
cmp
mov
sbb
xchg
xchg
fwait
js
das
lret
into
stos
sub
pop
mov
sub
int
xchg
push
ret
mov
mov
sub
lods
or
in
xor
in
jmp
pop
inc
add
add
add
cld
jae
or
cmp
pusha
cmp
sarb
loop
pop
imull
mov
mov
jp
xchg
ds
adc
mov
jns
sub
bound
cmp
lahf
adc
jne
aaa
jns
les
push
mov
lcall
outsl
fiadds
sub
icebp
xchg
fldl
cmp
jmp
popf
orb
fbstp
test
ja
jnp
jle
insb
test
and
cld
fsubrs
xchg
mov
mov
jne
xchg
les
or
push
pop
push
ret
dec
iret
arpl
xor
push
ret
in
xor
imul
xchg
sbb
cmp
sbb
test
inc
aaa
int
push
sub
push
inc
or
repz
pushf
insl
or
repnz
in
dec
mov
lcall
fmulp
ds
pop
call
xchg
or
cmp
aaa
popa
mov
ret
jge
call
fcoml
frstor
cmp
push
xor
push
lds
push
pop
pop
jg
lea
jl
mov
jno
jns
cmp
push
enter
in
mov
inc
flds
push
dec
jp
test
jb
cmp
cmpsb
outsl
xchg
movsl
inc
fbstp
cmp
mov
inc
loope
mov
mov
inc
out
int3
js
cld
es
lahf
or
xchg
dec
int
cmc
fldl
xor
subb
fwait
jle
rorb
stos
adc
popa
movsb
push
sub
jmp
fcompl
mov
fnstenv
lcall
dec
sub
add
push
stos
dec
xlat
and
loope
mov
call
mov
xchg
xchg
ja
xor
mov
add
test
nop
fistpl
adc
jp
aam
jns
fimull
dec
pop
ljmp
dec
and
or
mov
adc
adc
mov
fwait
dec
sbb
repz
test
iret
and
inc
dec
xor
icebp
mov
sbb
lret
pop
cli
out
xchg
out
lea
dec
xor
mov
add
wbinvd
imul
add
outsl
dec
and
lods
cli
and
adc
lea
sti
inc
test
jecxz
push
dec
xchg
sub
jg
xor
cmp
movsl
cltd
push
repz
sbb
les
fsqrt
xchg
pop
inc
dec
sbb
adc
adc
out
lret
pop
push
jmp
xlat
pop
pushf
sub
inc
adc
add
pop
xor
add
call
out
mov
mov
dec
mov
mov
lods
inc
test
and
outsb
xor
xor
dec
out
xchg
pusha
outsb
mov
mov
cs
cwtl
and
js
xchg
inc
addr16
mov
fsts
sbb
mov
addr16
call
mov
sbb
cld
xchg
sbb
sbb
repz
push
or
jmp
xchg
ja
mov
lret
ret
mov
ljmp
fisttpl
in
pop
pop
and
and
jbe
popf
mov
hlt
clc
frstor
insl
shr
aam
xchg
pusha
mov
clc
inc
and
push
imulb
jb
sub
cltd
push
nop
adc
lret
aaa
xchg
push
aaa
dec
js
fadds
outsb
stos
sbb
outsb
pop
xor
xor
sbb
sbb
test
dec
lahf
dec
pop
enter
pop
add
cli
cld
jp
jne
int
sahf
lcall
add
add
lret
mov
or
inc
add
dec
aam
ja
inc
into
pop
mov
popf
mov
mov
xchg
lea
adc
cltd
bound
mov
mov
cmpsb
and
push
and
cmpsl
push
std
mov
jae
mov
jno
xor
sbb
outsb
sahf
jl
enter
mov
mov
andl
push
lret
hlt
pushf
xchg
jo
jle
incb
in
cmp
jle
fmul
jnp
test
and
loop
stos
in
xchg
mov
mov
pushf
rcrl
jg
mov
pop
push
jp
ret
jmp
ret
adc
mov
and
testb
je
cmc
fimull
sbb
mov
inc
or
enter
mov
leave
fcmovnu
fptan
jb
les
mov
mov
adc
fisubrs
ficomps
subl
jp
add
mov
in
xor
and
adc
sbbl
or
pop
cld
movsb
sub
cmp
das
and
pusha
scas
push
outsl
pop
jo
pop
addr16
inc
test
fwait
jl
jge
jno
mov
cmp
sub
daa
push
or
out
in
and
xchg
push
sbb
test
inc
pusha
cmpsb
lahf
cmp
movsl
dec
lods
or
sub
ficompl
push
push
push
scas
pop
andb
pop
xor
push
sub
xor
jmp
movl
and
adcl
int
sub
mov
or
or
jbe
test
int
fildl
and
imul
pop
shl
mov
fstcw
sbb
sbb
dec
test
and
sahf
je
mov
mov
orb
inc
cmp
fmuls
mov
pop
adc
jae
stc
push
subl
sub
outsl
scas
je
xor
mov
test
mov
sarb
shrb
call
add
in
packsswb
decl
data16
add
lods
hlt
cmp
insb
cltd
fldcw
popa
adc
dec
pop
mov
loopne
push
add
mov
fdivr
lock
in
movsb
jbe
mov
cmpsl
in
xlat
outsl
add
sbb
push
adc
psubusw
xchg
popa
and
dec
jb
jg
jnp
or
sub
xchg
pushf
aad
jmp
pop
call
pop
sbb
insb
jo
lea
mov
ljmp
mov
loopne
pushf
mov
aas
pop
iret
addb
dec
inc
push
mov
xchg
fldt
arpl
imul
inc
mov
inc
inc
mov
lock
cwtl
fimuls
std
cmp
or
sub
pushf
shrl
mov
sub
or
cmp
inc
pop
or
push
je
mov
sarb
dec
lret
mov
or
mov
gs
repnz
mov
or
imul
sbb
mov
ret
das
sub
cmp
scas
ret
mov
ss
scas
mov
int
push
mov
pop
xor
popa
adc
fstl
jge
test
fstps
dec
mov
scas
sti
test
pop
addb
in
cvtpi2ps
add
cmc
sbb
cmpsl
pop
loopne
in
rcll
ss
ret
mov
shrb
out
xchg
bound
hlt
or
repnz
jmp
xor
xchg
add
inc
cmp
ljmp
mov
mov
sbbl
mov
sbb
xchg
xchg
fsubrl
in
addl
out
sbb
push
cli
jne
dec
test
sbb
outsl
dec
or
lds
jp
out
insl
loop
or
adc
cmpsl
out
cs
xchg
sarl
jmp
inc
fcmovbe
fistps
out
in
xchg
je
ret
jnp
dec
pop
insb
pop
dec
and
in
rclb
pop
sub
ret
and
dec
and
dec
insl
stos
inc
pop
les
mov
cmpsb
iret
and
mov
jmp
push
push
scas
out
push
xlat
imul
in
sbb
stos
imul
aam
inc
xor
je
or
adc
arpl
ret
xor
leave
push
popf
cmpsl
repnz
dec
mov
shrb
jp
pop
inc
add
mov
or
into
iret
aaa
filds
sbb
cwtl
jge
mov
aaa
push
shlb
cmpsb
cmp
push
and
hlt
lret
cmc
jo
or
out
push
and
jmp
imul
dec
sbb
cmp
and
mov
in
or
insl
cmpsb
clc
ljmp
in
xchg
test
sbb
lahf
inc
daa
pop
and
stos
nop
movsl
push
sub
or
push
out
sbb
cmp
imul
aad
js
jne
pop
in
cmp
xor
sub
mov
mov
pop
imul
ret
and
outsb
daa
jmp
sub
gs
jo
lcall
sbb
jmp
in
or
mov
inc
and
xor
mov
cli
mov
mov
xchg
jg
or
test
inc
and
jb
jp
stos
dec
and
or
in
xor
aaa
imull
sub
cmp
mov
mov
in
stc
or
loop
fbstp
outsl
int3
out
xor
dec
sti
jne
or
xchg
mov
mov
ss
dec
dec
inc
out
adc
imul
dec
add
enter
ja
imul
xchg
inc
pop
lods
stos
and
loop
mov
sar
mov
in
jge
imul
scas
xlat
push
cmp
sbb
clc
xchg
sub
cmp
mov
in
pop
push
neg
push
pop
or
out
nop
push
hlt
push
mov
xor
adc
rcrl
pop
fadd
hlt
lods
mov
out
or
xchg
les
jecxz
cmp
je
test
dec
mov
popf
jb
cld
nop
aas
stc
call
fiadds
pop
pusha
popa
mov
fisttpll
cmpsl
orl
aaa
pop
cwtl
cltd
sub
stc
imulb
ja
lea
xchg
call
mov
and
sub
mov
inc
mov
adc
ror
mov
icebp
icebp
leave
mov
mov
or
decb
push
insl
add
or
mov
jnp
sub
and
rolb
add
sub
jmp
aam
popf
mov
sub
dec
lods
lret
popa
sub
ljmp
sub
fldl
pop
insl
push
jl
hlt
mov
add
inc
mov
add
es
xchg
data16
stos
clc
pop
arpl
mov
lods
in
negb
test
rolb
es
adc
ljmp
sbb
rorb
mov
hlt
xor
inc
or
add
mov
pop
push
jmp
out
or
pop
loopne
push
mov
dec
lods
clc
outsb
ja
mov
pop
sub
xor
pop
adc
xchg
sub
ds
pushf
imul
sub
sub
jne
out
dec
insl
iret
es
loope
mov
pop
sbb
jp
gs
insb
stos
scas
or
movsl
pushf
out
sub
xchg
pushf
test
jmp
push
push
mov
pusha
mov
inc
in
dec
sub
sbbb
vunpcklps
nop
stos
shll
dec
je
mov
ljmp
jae
iret
movl
xchg
ret
test
and
adc
data16
cwtl
mov
push
imul
sbb
pop
cli
xchg
and
in
hlt
or
inc
mov
cmp
or
adc
jmp
hlt
jge
or
leave
add
repnz
enter
jmp
pop
lds
dec
ret
test
int3
mov
or
aaa
sahf
int3
bound
notl
jge
aam
jbe
mov
push
pop
xor
movsb
in
mov
cmp
adc
jo
sarb
push
push
sbb
push
cmp
jae
inc
jno
and
cmp
xchg
daa
or
ds
in
repz
xor
lret
fsts
test
jmp
rcrb
mov
jne
ds
lods
idivb
add
adc
push
pop
sub
decb
mov
fldl
xor
cmp
mov
sbb
dec
andb
insb
rcr
and
add
icebp
sub
mov
push
fdivs
lcall
xchg
sub
int
loop
push
mov
and
inc
mov
add
mov
inc
sarb
ljmp
push
jge
test
add
sbbb
jnp
mov
push
jl
adc
fadds
xchg
icebp
ss
jl
adc
mov
stc
shl
loop
enter
sub
xor
xor
into
fisubs
mov
sahf
ss
xor
sub
cmp
lods
int
mov
mov
fbld
imul
es
int3
pop
das
loopne
inc
mov
jns
ret
int3
sti
dec
sub
in
jp
insb
mov
lea
xlat
in
xor
add
dec
push
xchg
out
imul
push
push
rolb
and
in
nop
xor
mov
mov
scas
or
dec
xchg
pushf
sub
mov
into
aaa
jle
dec
call
dec
call
adc
int3
jecxz
sbb
and
iret
jb
js
aas
cwtl
xor
inc
stc
xchg
inc
bound
inc
fisttpl
cwtl
dec
mov
andl
add
cwtl
push
lahf
push
mov
imul
into
push
and
das
push
mov
xor
aaa
das
add
sahf
lock
stc
mov
xor
imull
cmp
push
jo
mov
sub
dec
adc
lret
cmp
push
inc
sub
rcrl
je
dec
mov
fildl
mov
ficoml
push
lods
xor
popf
int3
ljmp
and
repz
frstor
js
push
aas
xlat
insl
mov
xchg
aam
dec
inc
insl
cltd
or
sub
push
enter
lods
pushf
mov
mov
jo
add
jae
pop
mov
xchg
cmp
dec
dec
rol
xchg
inc
test
in
or
xchg
or
aaa
iret
add
pop
sbb
add
add
push
mov
push
fwait
mov
push
aad
jmp
inc
dec
mov
jns
pop
jecxz
inc
mov
lahf
addl
jp
mov
jns
mov
sti
out
fistl
jae
jle
sub
jns
mov
jns
mov
into
mov
nop
dec
jp
cwtl
jle
imul
or
jmp
addb
loope
jmp
jmp
sbb
pusha
dec
call
cltd
jle
les
insb
xor
stos
inc
fcmovnb
push
lea
addr16
adc
rorb
jae
je
inc
outsb
aam
pop
mov
cmp
iret
mov
push
fists
scas
mov
sbb
fidivrl
xchg
jns
lret
repz
xor
push
push
movb
push
notb
or
inc
leave
inc
adc
repnz
mov
push
mov
lds
test
movsb
push
ror
movsl
dec
dec
add
pop
adc
aaa
pop
sbb
jmp
jbe
inc
pop
push
outsb
jle
movsb
ja
sbb
and
popa
sbb
andb
push
jmp
in
movsl
jl
int
jno
movsb
sub
xchg
mov
enter
in
fisubl
cmpsl
inc
adc
inc
pushf
test
mov
adc
mov
jno,pt
mov
mov
jmp
loope
dec
imul
push
cmp
cmp
int
mov
cmp
add
xlat
mov
test
mov
sub
mov
lods
adc
in
add
sub
out
cmp
or
lret
ljmp
filds
int
mov
pop
and
xchg
inc
mov
pop
push
mov
out
jg
testb
cmpsl
or
sbb
ss
mov
repz
imull
push
fadd
push
cli
cmp
inc
daa
stos
adc
rorl
ja
or
aas
out
outsl
dec
mov
xor
lar
popa
push
xor
or
scas
inc
xor
sub
out
lods
mov
ss
mov
cmpsl
data16
fnsave
adc
lds
push
or
shr
out
jmp
fsub
sbb
call
sbb
loopne
in
mov
mov
loop
add
jmp
inc
xor
xchg
mov
cs
mov
gs
sub
inc
lcall
nop
or
pushf
aad
dec
jae
data16
jmp
lahf
stc
pushf
fnsave
adc
sub
repnz
fnsave
lea
inc
xchg
rolb
xchg
cmp
jecxz
xchg
daa
xor
aaa
insl
cmpsl
inc
adc
dec
inc
jmp
pusha
jnp
cmp
cmpl
inc
cwtl
shld
std
xor
div
repz
adc
sbb
mov
std
in
das
jecxz
mov
das
fldenv
xor
mov
shlb
cld
xor
xchg
icebp
ja
clc
mov
or
cld
insl
into
stc
fsubl
rol
ret
fcoml
aam
pop
scas
sub
sub
pop
xchg
out
dec
mov
loop
pop
mov
mov
mov
mov
dec
movsl
ljmp
imul
mov
dec
mov
out
out
add
push
ds
cltd
inc
cld
sbb
mov
and
push
xchg
hlt
push
or
push
inc
push
stos
stos
pop
pop
loope
dec
rcrl
sbb
push
jns
xchg
jnp
test
mov
dec
mov
mov
mov
mov
fsub
xor
xchg
sub
sti
pop
pop
add
das
add
hlt
or
and
xor
dec
xchg
in
into
ja
jmp
insb
mov
loop
je
leave
movsl
movsb
in
int
jns
sbb
bound
stc
adc
inc
push
dec
dec
xor
push
mov
and
int
jae
int3
jg
addr16
or
sbb
andl
jp
rclb
or
jp
mov
in
hlt
aaa
jle
stc
jp
push
inc
xor
and
add
add
cmp
push
xchg
pop
jae
mov
and
pop
repnz
push
iret
ds
adc
repnz
es
mov
lcall
dec
aaa
ficompl
mov
push
sub
push
shl
adc
ror
mov
cli
mov
and
lds
fdivp
js
pop
shll
cmp
nop
mov
add
jne
aaa
sbb
sbb
insl
pop
loope
add
inc
mov
mov
xchg
and
and
loop
jo
nop
xor
int3
pop
js
mov
in
jno
dec
ret
inc
dec
daa
or
sub
inc
xchg
cmpsb
adc
loope
inc
mov
xchg
out
lahf
mov
sbb
movsl
gs
ds
pushf
jo
popa
ja
sub
push
daa
loope
mov
push
aam
pop
jl
push
pop
bound
jae
iret
xor
sbb
sti
lcall
out
rclb
stc
out
outsb
push
sti
int
into
fsts
push
xchg
xchg
lcall
pop
sub
add
out
addl
ds
jle
xor
mov
loop
mov
push
sahf
add
pushl
repnz
lcall
xchg
mov
jnp
xchg
cmp
test
adc
aas
iret
fs
out
loop
aaa
outsl
sub
jnp
xchg
incb
movsb
popa
push
or
pop
lods
cmp
cld
inc
xor
enter
notb
out
aas
mov
xor
cmc
lods
fwait
pop
mov
add
fisubl
imul
jmp
pop
or
or
xchg
cmp
sub
lods
push
or
push
enter
or
imul
jnp
push
sbb
je
repz
dec
dec
scas
dec
out
call
rcl
dec
xchg
test
leave
cmpsl
or
sub
pushf
andl
pop
mov
adc
jno
inc
call
loopne
sahf
lcall
je
aad
dec
repz
jb
or
inc
das
lret
jo
or
into
jg
push
pop
dec
xchg
pop
adcl
int
sti
and
lret
std
fdivrs
divb
and
fs
pop
dec
mov
push
sbb
das
ret
lock
iret
mov
das
ljmp
mov
cld
pop
addl
mov
or
rorl
pop
insl
mov
std
es
cmp
ret
imul
sub
mov
pop
mov
push
mov
jmp
jno
mov
or
popa
outsb
sbb
xchg
fwait
lahf
repz
imul
add
mov
mov
test
lods
cltd
jnp
in
add
inc
push
stos
das
push
jle
pushf
xchg
cmp
sbb
stos
lds
pop
mov
pop
sbb
sbb
pop
test
ret
fmull
dec
das
xchg
jb
xor
inc
xchg
or
ljmp
adc
shlb
add
shrb
pop
fwait
push
aas
stc
or
ret
cli
inc
sbb
dec
xchg
dec
fldl
pop
pop
cld
pop
mov
and
jmp
in
jecxz
jns
cmp
push
shr
cltd
pop
jne
sarl
dec
push
test
jmp
mov
in
in
lcall
xor
sbb
sub
add
lea
std
xchg
add
push
push
std
int
cltd
xchg
fsubs
cmp
jle
and
jnp
sbb
and
push
jge
stos
sub
dec
push
or
aad
cwtl
ret
pop
push
lea
push
jecxz
jae
mov
pop
sub
dec
ret
cmp
popf
in
xor
push
jle
push
insl
fdivrl
pop
xor
xchg
add
xchg
daa
das
pushf
fimull
insb
sub
insb
or
sbb
data16
push
pusha
hlt
pop
pop
cs
adc
mov
cmp
push
lds
pusha
fistps
mov
int3
jnp
mov
pop
jns
or
jle
sbb
inc
js
lods
les
jbe
mov
insl
movsb
lea
cmp
test
lcall
or
push
scas
imul
rcl
jno
adc
cmp
or
pop
enter
in
test
outsb
cmpsb
add
loop
xor
add
push
fs
lahf
rorl
and
inc
movsl
insb
nop
ds
pop
cmp
and
inc
leave
call
push
lahf
xor
mov
push
ja
mov
es
inc
xor
outsl
cld
sbb
jbe
sbb
je
aad
inc
shrb
lods
adc
mov
out
sub
xchg
outsl
push
fisttpll
lcall
mov
aad
mov
push
mov
or
mov
nop
jg
icebp
addb
inc
push
sahf
mov
stc
bound
sahf
add
lcall
out
imull
ror
cmp
xlat
cld
adc
and
nop
out
xchg
stc
in
xchg
loop
mov
cmp
out
add
out
out
into
xchg
in
arpl
scas
cmp
push
lcall
in
mov
mov
sbb
mov
adc
ss
imul
sbb
pop
sub
gs
iret
pop
rcl
sti
pop
xchg
test
mov
aaa
jg
out
pop
xlat
stos
pop
xchg
cmp
lcall
icebp
cld
arpl
mov
flds
inc
rclb
dec
icebp
out
nop
ret
aad
cmp
adc
sbb
mov
scas
push
pop
addr16
out
lock
xchg
rcll
lea
aas
popf
mov
je
out
xchg
dec
push
js
cmp
pushf
aas
jne
es
dec
or
idivl
pop
in
das
test
cltd
enter
and
jne
mov
ss
test
jg
xchg
divb
scas
shll
repz
mov
mov
aad
mov
inc
cmpsl
mov
ljmp
and
jne
cmpsl
or
gs
lret
jecxz,pn
pushf
add
es
sub
ret
cli
cmp
cmc
mov
sub
jo
pop
shr
push
mov
lock
mov
out
and
adc
ljmp
lods
clc
movsb
cmp
fstpl
fwait
mov
jmp
test
cltd
mov
lds
in
pop
syscall
xor
push
pop
and
xorb
out
in
and
aaa
mov
mov
je
xchg
xchg
push
outsb
test
sbb
loopne
xchg
out
cwtl
xor
jno
or
xchg
xor
mov
in
xor
jns
test
jne
sbb
int3
cmp
dec
jns
in
ja
push
lds
iret
mov
push
je
in
dec
fwait
jns
stc
inc
bound
leave
push
mov
lret
jae
rorl
dec
stc
cs
mov
mov
adc
push
addr16
ror
sub
xchg
fs
enter
mov
dec
out
mov
orb
jno
fs
mov
scas
and
pop
stos
lahf
jbe
push
dec
std
xlat
mov
xchg
call
jae
dec
inc
mov
pop
pusha
popf
or
dec
xchg
aaa
iret
cld
mulb
xor
xchg
scas
fldl
imul
movsb
xchg
jle
imul
mov
shrl
dec
xchg
pop
test
arpl
mov
ds
movsl
or
add
mov
push
shrb
lds
pop
or
cmp
or
int3
xchg
jmp
mov
lods
or
pop
mov
jge
xchg
push
pop
add
movsb
sbb
and
mov
pop
scas
nop
mov
jo
mov
mov
xchg
outsb
dec
dec
xchg
lock
shll
call
pop
mov
movsl
pusha
enter
in
xor
cmpsb
xchg
adc
test
aaa
arpl
lahf
loopne
mov
jecxz
push
ficompl
mov
push
adc
nop
js
push
pop
push
pop
cli
fwait
aad
inc
shrb
mov
into
jmp
cmc
sbb
mov
sub
xor
adc
jge
adc
push
lret
lods
sti
xchg
fmull
jle
xor
lcall
subl
mov
movb
enter
daa
dec
mov
fmuls
adc
mov
push
cmpb
aad
inc
mov
pop
mov
mov
lret
adc
imul
movsb
ss
mov
push
inc
sbb
idiv
pushf
push
imul
jbe
outsl
call
sbb
into
push
pushf
or
lods
inc
cmp
adc
xor
cli
dec
xchg
cli
out
out
pop
mov
subl
enter
push
out
adc
mov
inc
adc
pop
dec
pop
loopne
jmp
leave
incb
xchg
scas
in
imul
pop
jecxz
xlat
jmp
and
sbb
cli
xchg
repz
fnstcw
xlat
inc
rcll
aad
popf
dec
fst
xlat
dec
int3
cs
jo
jmp
jg
pushf
xlat
lock
adc
leave
test
outsl
pop
mov
dec
cmpsl
sbb
mov
inc
xlat
je
pop
cmp
arpl
jb
insl
adc
adc
out
inc
gs
xchg
inc
jle
mov
fcmovne
cmp
pop
cmc
jb
or
mov
push
lods
cwtl
inc
cs
std
es
pushf
idivb
sub
and
fstpl
ljmp
das
subb
mov
mov
ror
dec
out
cld
mov
test
cld
inc
mov
cmpsl
pop
xchg
lret
adc
sbb
es
icebp
ret
mov
fisubrl
cwtl
push
imul
rcrb
jno
mov
testl
mov
loope
loopne
pushf
sub
ljmp
test
fucomip
sti
ffree
in
push
dec
data16
nop
loope
ja
sbb
clc
daa
mov
shll
xor
sbb
inc
mulb
stos
mov
popf
sahf
rcrl
jl
daa
addl
lea
sub
shr
mov
xor
or
xchg
cmp
fistpl
xchg
dec
in
dec
add
sbb
fwait
je
movsl
or
subl
insb
mov
and
xor
les
mov
addr16
or
jns
pop
cli
bound
sub
mov
in
iret
jne
fldl
fsubrl
fdivrs
fsubs
gs
mov
addr16
call
sub
or
mov
xchg
xchg
cwtl
loope
mov
pop
xchg
xor
sbb
cwtl
fildl
jnp
sbb
insb
fdivl
push
stos
adc
idivb
lods
les
jae
mov
inc
lcall
ret
insl
iret
pop
add
xchg
push
sti
testb
pop
les
arpl
fidivl
incb
shll
or
pop
or
and
arpl
hlt
hlt
out
mov
repnz
mov
jb
inc
pop
fsubp
or
pop
pusha
es
int3
push
dec
pusha
add
mov
aaa
pop
xor
sbb
sub
add
pop
adc
mov
and
scas
outsl
and
jo
jns
in
popa
jae
jne
rorb
iret
cmpb
jno
ucomiss
push
mov
and
ret
pop
test
cmpsb
or
jb
push
test
push
cmpsb
push
dec
test
or
lahf
call
jmp
std
stos
jg
outsb
jecxz
sub
sub
cmpsl
and
iret
push
cmp
js
mov
out
lods
cli
mov
cmp
or
std
push
rcrb
test
addb
pop
xchg
mov
shlb
inc
scas
adc
jns
xchg
fwait
xor
fdivl
xchg
movsb
lcall
das
sub
int3
ror
or
push
ret
repz
mov
cmpsl
adc
lcall
jg
std
aas
sbb
es
or
sbb
mov
xchg
fnstenv
imull
shlb
inc
or
dec
pop
dec
adc
inc
sbb
add
push
push
mov
das
aaa
xor
or
into
dec
loope
or
push
xor
repnz
out
or
xchg
lods
push
add
dec
or
add
imul
and
test
shll
jns
movsl
hlt
and
in
xchg
ja
mov
int3
add
xlat
sub
pop
sbb
mov
push
clc
fnstenv
or
or
cltd
nop
js
adc
cs
adc
mulb
lock
inc
push
out
or
leave
mov
mov
jne
je
sbb
jb
in
dec
aas
mov
push
inc
add
inc
add
iret
push
fcomi
cld
decb
or
addb
mov
mov
cwtl
sti
cmp
int
xchg
idiv
cwtl
adc
and
sbb
mov
adc
popa
lock
and
mov
popf
inc
mov
lret
mov
pushl
shll
mov
push
xchg
loope
rorl
es
arpl
ret
sbb
aam
adc
sub
mov
psubq
mov
decb
jo
inc
and
data16
or
outsb
clc
sbb
loop
push
lods
xchg
mov
jns
test
jne
add
jmp
scas
push
lss
stos
xchg
ja
pop
lea
shll
inc
mov
test
fs
dec
mov
xchg
aam
mov
int
jp
push
pop
jge
test
jp
cmp
add
mov
jp
or
mov
inc
dec
pop
inc
dec
ja
rorb
pop
mov
lds
out
subb
add
pop
fdivrl
addr16
aad
movsl
out
ss
stos
jne
aam
dec
mov
mov
mov
mov
add
jp
and
or
mov
cwtl
mov
mov
pop
xchg
pop
cwtl
pushf
jmp
or
fcomip
gs
pusha
push
dec
sub
lahf
lock
jle
push
pop
jnp
inc
movsl
insb
inc
cs
cltd
and
test
and
aam
dec
push
lahf
das
mov
imull
loope
into
jae
ret
or
mov
dec
fwait
push
inc
lcall
outsb
fs
sbb
inc
jbe
sub
sti
fisubl
adc
inc
scas
xor
xchg
mov
mov
jp
aas
fiaddl
repnz
aam
cmpb
lds
mov
or
pop
popl
int3
cmp
les
in
into
or
aaa
sbb
lret
pop
jge
mov
adcb
xchg
movsb
cmp
std
push
xchg
fiaddl
sub
dec
add
xor
pop
push
push
dec
je
aaa
jl
mov
cmp
mov
xor
cmpsb
lea
inc
loopne
notl
subb
scas
xchg
lahf
push
and
movsl
subl
mov
adcb
push
cmp
pop
js
movsb
js
push
ficomps
jns
outsl
jp
xor
or
dec
sbb
pop
repnz
sar
and
mov
loope
fsubrl
sub
subb
insl
pop
lcall
test
inc
pusha
insb
int
push
cmp
xchg
dec
and
mov
daa
pop
mov
push
leave
jg
or
test
inc
sahf
mov
adc
mov
and
sub
stc
mul
adc
cmp
nop
inc
adc
sub
imul
cmpsb
mov
lods
cmc
inc
xor
inc
or
jns
xor
add
out
scas
push
mov
stos
mov
into
js
add
xchg
mov
imul
in
es
call
dec
dec
jae
sti
push
pop
inc
mov
aas
fsubrs
addr16
cmp
adc
orb
test
les
movq
mov
dec
push
sub
gs
test
push
or
in
xor
imul
insl
cmp
lea
cmpsb
and
jecxz
in
jle
in
xor
loop
jb
mov
inc
inc
fwait
adc
dec
jnp
aad
jnp
es
call
mov
mov
mov
xchg
std
je
lock
shll
lods
mov
mov
ds
int3
lock
mov
mov
pop
lret
sub
cld
or
aam
stos
lods
mov
push
adc
cmpsl
add
xchg
inc
insl
push
inc
mov
ret
cmpsl
outsl
dec
aam
iret
imul
inc
loop
pop
mov
and
mov
cmp
mov
xchg
popa
lret
ljmp
pop
clc
push
adc
fstl
jae
push
shll
mov
movsl
adc
cltd
push
sub
bound
and
jge
ljmp
out
or
push
jne
cmp
dec
rorl
mov
ljmp
repnz
cmp
xchg
or
fsubs
lcall
xor
add
lret
outsb
push
pop
bound
shrb
or
xchg
jae
jne
daa
dec
push
pushf
leave
ja
aam
pop
inc
mov
cs
test
lahf
in
test
jns
adc
bound
mov
adc
imul
mov
add
mov
xorb
jl
gs
or
xor
out
mov
sbb
mov
xchg
fists
lret
mov
jle
dec
push
jnp
sub
insb
mov
xchg
and
gs
push
pop
mov
test
popf
sti
les
jae
jmp
inc
mov
pop
pop
add
mov
pop
adc
mov
push
mov
out
imul
sbb
xchg
xchg
subl
fcmovu
xor
push
xor
pop
inc
sub
arpl
sbb
leave
or
cmp
pop
int
mov
test
repnz
outsb
fisubs
xchg
daa
dec
leave
add
dec
or
xchg
aaa
xlat
stc
adc
adc
mov
jbe
adc
imul
mulb
insl
mov
jo
push
mov
cmp
cld
dec
jecxz
xchg
jl
lret
xchg
popf
xor
mov
call
shr
inc
inc
dec
cmpsb
adc
inc
outsl
test
cli
test
mov
icebp
lahf
cmp
mov
movsl
mov
ds
and
sub
enter
adc
mov
mov
jbe
pop
and
outsb
sub
ficoml
mov
xrelease
push
mov
rcl
adc
adc
aas
es
ljmp
imul
data16
in
iret
jb
roll
push
leave
movsl
xor
mov
mov
gs
mov
clc
bnd
sbb
orb
incl
das
cmp
sbb
lods
xlat
mov
cld
adc
shlb
cmpsb
repz
mov
dec
shrl
lods
fs
addr16
mov
dec
outsl
test
push
pop
xlat
out
cmc
or
push
into
adc
add
ljmp
in
cmpsl
out
aad
mov
jne
lods
push
cmp
pop
lcall
xor
in
pop
movsl
mov
push
gs
sub
sti
pop
sub
mov
mov
adc
cmpsb
sbb
cmp
sar
xchg
inc
fnstsw
sub
push
fldenv
ret
in
or
lock
leave
cmp
jae,pn
aad
lret
mov
inc
mov
fdivs
adc
lock
cld
in
icebp
xchg
call
jecxz
push
test
test
loop
inc
cwtl
lea
xchg
aas
icebp
adc
inc
mov
test
adc
sbb
ds
out
sbb
mov
fdivs
jno
js
sbb
pop
testb
out
call
std
mov
sbb
mov
inc
mov
jno
lcall
icebp
adcl
or
add
in
mov
dec
insl
cmp
movsl
shrb
ss
aam
loop
sub
rcl
jo
pop
dec
sbb
mov
or
mov
mov
and
popa
loope
adc
xchg
imul
nop
adcl
push
xchg
xchg
dec
mov
push
jecxz
cwtl
repnz
xor
jo
addl
jns
jo
hlt
stos
jo
pop
jecxz
outsb
shll
sbb
pop
xchg
popf
test
mov
dec
sbb
cli
xor
arpl
or
xor
mov
sub
add
add
fwait
add
dec
or
pop
jae
or
mov
test
ja
pop
dec
pop
add
in
in
lret
mov
inc
mov
addl
sti
stc
pop
out
hlt
cwtl
push
mov
enter
in
das
dec
test
lret
cmp
pop
mov
mov
addr16
or
mov
out
push
pop
cmp
out
hlt
xchg
pop
jmp
scas
jnp
fbstp
andl
imul
std
cmp
jnp
fsts
and
fwait
iret
stos
imul
push
inc
pop
mov
and
int3
push
and
insl
mov
mov
fcmove
ret
cmp
js
jp
pushf
xor
ss
imul
cs
fwait
xchg
fcmovb
outsb
fimull
push
push
xchg
fisubrl
sub
popf
hlt
aad
xchg
leave
adcl
mov
ret
mov
push
fmulp
xor
in
or
int3
adc
or
mov
sbb
popa
out
jns
jbe
into
cmp
adc
cmp
ja
add
scas
or
insl
jo
mov
xor
push
add
push
add
insl
sbb
jmp
loope
add
sbb
mov
sub
sub
xsha256
cmpsb
xchg
xlat
xor
decb
insl
test
or
lahf
pop
inc
lea
dec
adc
xor
inc
cmp
insl
sub
insb
loopew
cld
or
and
push
js
xor
cmc
aad
xor
sub
sbb
jne
cmpb
ret
mov
cltd
shlb
aaa
pop
outsb
mov
outsl
paddusb
mov
sbb
out
cmp
or
popf
pop
push
int3
sub
and
or
mov
arpl
and
sub
subb
lods
test
int3
sahf
shlb
push
mov
stos
out
push
inc
add
mov
xchg
jl
push
cmp
push
jg
adc
cmpsl
dec
fs
popf
idiv
js
push
loop
gs
outsl
fs
jo
mov
out
shlb
lds
mov
outsl
xor
cmp
inc
or
jecxz
jmp
lods
add
scas
xchg
add
bound
pop
in
imul
nop
popa
loopne
adc
daa
decb
dec
vshufps
in
rcrb
shrb
popf
push
xlat
in
sbb
frstor
mov
xchg
push
loop
repz
xchg
shlb
inc
pop
mov
push
or
aad
xor
ret
mov
pushf
xor
adc
mov
imul
cmp
jmp
lods
js
jecxz
test
dec
dec
mov
mov
jle
shll
inc
lcall
fildl
cmp
fldl
mov
call
pop
std
ret
test
sarl
rorl
pop
push
mov
cld
xchg
lock
sub
mov
mov
or
or
pop
cmpsb
sub
add
jmp
es
lahf
add
in
dec
jp
je
or
in
xor
pop
insb
scas
mov
pushf
sub
and
idiv
adc
out
popa
clc
cmc
and
popa
lock
xchg
adc
test
push
xor
adc
mov
add
pavgb
mov
mov
pop
xor
shr
shrl
js
sarl
mov
iret
test
cmp
dec
test
hlt
mov
scas
aas
sbb
mov
popa
pop
call
dec
add
push
or
movsb
xor
arpl
movb
loop
cmp
ja
sbbb
stc
mov
mov
jecxz
repnz
sbb
or
cmpsl
jns
pop
xchg
bound
push
or
mov
rorl
mov
mov
fdivl
xor
fmull
xchg
add
jns
repnz
xchg
orl
aaa
jmp
or
xchg
or
inc
jle
sbb
les
gs
or
push
test
rcrb
pop
jae
xor
pop
jae
cwtl
ret
sub
xlat
adcw
int3
push
pop
fsubl
scas
int3
add
imul
daa
sbb
xchg
fidivrl
xchg
rolb
fwait
into
push
pop
daa
inc
cs
and
hlt
and
xor
add
mov
fsubrp
ffree
fnsave
insb
shl
pop
sbb
cmpsl
int3
std
xchg
jno
test
in
cld
aaa
push
iret
int3
sbb
mov
jbe
sti
rclb
xor
iret
out
cmp
sarb
ss
scas
jmp
lods
jo
sub
xor
add
xchg
dec
shl
jl
mov
xchg
cmp
andl
scas
imul
adc
xchg
inc
lea
xchg
push
cmpsb
lahf
jnp
or
ljmp
mov
cmp
fsubrs
aad
loope
cmp
pop
xor
jg
pop
jae
pop
mov
jg
add
sbb
sbb
test
pxor
rorb
lahf
add
jge
sub
popf
fsubl
xor
rol
lcall
aam
mov
dec
int
xchg
sub
iret
daa
mov
mov
pop
mov
inc
mov
dec
mov
inc
out
addb
test
dec
hlt
sahf
jne
and
dec
mov
addr16
fcmovne
mov
leave
mull
pop
fcomps
jno
ss
leave
iret
adc
cmpsl
bound
xchg
das
push
mov
outsl
inc
pop
push
xor
mov
push
into
fnstcw
adc
std
loop
cmp
dec
xor
jns
cli
dec
outsl
sub
loop
imul
lcall
jns
add
cmpsl
xchg
adc
sub
pop
adc
fs
jecxz
mov
lock
lods
gs
test
mov
mov
cwtl
lea
and
hlt
cmp
lcall
leave
pop
mov
lret
outsl
pop
lret
clc
sbb
xor
and
ja
nop
in
dec
aad
imul
jmp
out
dec
pushf
cs
jge
pop
cltd
cltd
imul
ljmp
mov
imul
shlb
je
arpl
dec
xor
or
aas
das
ret
in
daa
incl
mov
cmp
mov
loopne
xrelease
xorl
mov
push
dec
cwtl
out
jmp
testb
pusha
rorl
pop
mov
mov
fildl
stos
lock
lods
mov
mov
daa
and
cld
mov
icebp
das
pop
stos
mov
add
into
insl
push
add
ret
push
or
aam
add
sarb
inc
cmp
and
sbb
mov
popa
movnti
aam
adc
push
push
mov
xchg
xor
dec
inc
mov
les
cld
sub
mov
push
jnp
mov
ss
stos
dec
adc
cmp
adc
cmpsb
dec
xchg
xchg
pop
jb
hlt
push
orb
mov
shl
fsubs
stc
fs
xor
mov
roll
adc
add
inc
or
or
popa
push
inc
cmp
ret
testl
mov
cli
flds
inc
inc
inc
in
mov
jns
repnz
bound
jne
out
mov
xchg
mov
mov
fmuls
push
repz
adc
sbb
jp
or
adc
mov
push
cwtl
jmp
test
jp
xchg
push
dec
out
jb
mov
in
sub
jle
bnd
addb
repz
mov
stos
push
test
or
jo
repz
stos
inc
mov
inc
rcrl
pop
stos
shr
ret
inc
iret
mov
push
jno
push
pop
mov
das
mov
xor
inc
xchg
xchg
mov
into
pop
inc
stos
sbb
push
gs
arpl
lret
jo
outsl
dec
pop
repnz
insl
push
mov
stc
sub
fimuls
data16
and
jne
inc
mov
mov
adc
and
inc
lods
sbb
lret
ret
jbe
popf
jp
xor
pop
inc
cmp
xorl
lret
jo
mov
xor
in
out
xor
movsl
jno
sbbb
iret
nop
enter
in
stc
pop
jle
cltd
and
inc
sbb
rcll
test
sub
adc
test
fbld
lods
jge
cmp
cmp
sub
adc
loope
xchg
jmp
push
loopne
pop
je
imul
jle
jnp
shll
lcall
cwtl
mov
ss
outsb
xchg
movsb
shrb
lods
adc
push
roll
cmp
jg
and
push
daa
sub
jbe
int
je
push
rclb
jb
push
push
mov
mov
mov
xchg
data16
sahf
sbb
sbb
arpl
jecxz
lret
test
jecxz
sbb
xchg
cmpsb
ss
xchg
imul
xor
out
mov
outsl
and
mov
pusha
rcrb
jo
or
cmp
ss
icebp
inc
dec
cli
jge
xor
mov
fwait
pusha
lods
sarl
push
add
ficoml
cmpsb
mov
test
xchg
pop
add
loopne
xchg
stc
gs
clc
sar
and
shr
sub
mov
or
push
arpl
cmp
cmp
add
mov
repz
fld
mov
inc
inc
pop
inc
dec
out
sbb
mov
into
dec
loope,pn
mov
pushf
fnstenv
adc
cvtps2pd
imul
inc
mov
mov
sbb
je
enter
nop
shll
jne
aas
into
push
sub
repz
test
and
mov
dec
ficoms
orl
mov
inc
cwtl
mov
out
enter
and
and
cmp
mov
mov
inc
cli
mov
into
mov
aad
and
out
mov
icebp
push
xor
cmpsl
add
dec
test
stos
insl
in
mov
es
pusha
mov
aam
adc
xchg
push
pushf
pop
stos
in
mov
and
xchg
arpl
popa
es
ljmp
xabort
dec
sub
lods
aas
call
aam
mov
add
mov
jbe
add
pop
setle
push
push
cld
push
xchg
jae
cli
out
cltd
push
lret
stos
cmp
pop
dec
shrl
negl
pop
xchg
pop
xchg
dec
dec
push
fadds
mov
inc
fdivrp
or
dec
inc
call
and
ljmp
or
mov
sub
add
ja
or
pop
xor
pushf
mov
cmp
movsl
push
in
push
lods
bound
jmp
jne
and
mov
mov
mov
pop
jp
inc
icebp
addr16
dec
test
xchg
out
sub
sbb
xor
cmpsl
add
xchg
push
subl
add
fists
sahf
in
ret
jle
mov
mov
and
jns
les
dec
push
add
adc
xchg
jne
push
outsb
imul
pop
loope
sub
iret
xchg
scas
cmp
sub
cmpsb
cmpsb
scas
xchg
xor
imul
lret
sbb
ja
fbld
fisubl
and
out
sub
inc
xor
sbb
xor
leave
out
cwtl
repnz
outsb
sbb
adc
test
jmp
push
fidivs
xlat
fwait
int3
shrl
add
jge
or
bound
sbb
xor
outsb
mov
push
test
movsb
in
adc
nop
out
and
adc
jo
push
mov
xchg
pushf
int
xor
dec
lahf
sbb
jno
push
cmp
add
enter
in
loopne
or
stos
fistl
push
adc
push
cld
stc
or
mov
sahf
movsb
movsl
movsb
scas
enter
sarl
mov
sub
and
loope
sbb
push
dec
or
mov
js
xlat
mov
sarl
lds
add
lock
sbb
push
or
jae
int
int
xor
inc
lahf
mov
pop
pushf
push
outsb
lret
mov
mov
mov
enter
jns
pop
jmp
in
aam
test
cmp
lds
mov
cli
mov
fs
mov
cmpb
test
enter
xchg
pop
sbb
mov
rcrl
lret
iret
mull
jmp
imul
mov
mov
stc
popf
lret
std
cmp
xor
in
lock
daa
fisttpll
fucomi
sarl
testl
cli
mov
pop
out
xchg
nop
mov
insl
pop
push
sub
je
imul
std
pop
and
inc
gs
mov
pop
sti
roll
in
adc
sbb
jle
mov
cmp
dec
xchg
xchg
dec
test
repz
mov
inc
pop
or
inc
les
aad
xchg
cmp
jmp
stos
aaa
pushf
test
adc
jl
call
or
mov
es
inc
jbe
pop
adc
and
fdivl
sub
aas
insl
jg
inc
and
jno
das
int3
lods
pop
add
push
fistl
cli
insl
dec
leave
testl
mov
shrb
stos
int3
std
mov
mov
sub
jns
sub
mov
adcb
cltd
adc
push
mov
ds
cld
loope
push
icebp
fs
add
dec
mov
lret
fsubrp
cli
ret
jb
cmp
dec
jne
sub
xchg
shlb
test
leave
test
mov
sub
jno
pusha
mov
pop
lods
into
pop
jmp
ljmp
ret
or
aam
test
mov
orl
push
inc
add
xor
std
push
xchg
push
xor
xchg
mov
movsl
stos
sub
negl
mov
rcrb
or
ja
sub
les
mov
mov
mov
stos
push
or
fnstcw
pushl
out
add
inc
sub
lea
pop
or
mov
cli
dec
adc
fdivl
mov
mov
cmpb
xchg
fisttps
in
jb
jns
psllw
rorb
test
mov
add
pop
dec
adc
int
mov
scas
mov
lcall
lret
addr16
inc
mov
addb
cs
adc
sahf
dec
mov
xchg
and
jmp
cli
out
or
mov
shlb
test
in
mov
jg
sub
call
and
cmp
stos
aaa
pop
rclb
iret
stos
mov
mov
add
jae
sbb
inc
out
lea
push
xlat
ret
mov
hlt
fxch
adc
std
xchg
push
in
mov
imul
loope
fidivrl
loopne
ss
ficompl
pop
inc
test
and
push
sub
aaa
enter
mov
adc
pop
or
mov
das
jmp
mov
pop
test
mov
add
pushf
or
stos
inc
aaa
xchg
insl
insl
sbb
lods
out
mov
lds
arpl
movsb
jo
cmp
mull
dec
inc
dec
scas
mov
pop
xor
stos
aad
dec
push
push
pop
jl
arpl
jno
jne
cmp
std
insb
enter
in
mov
inc
mov
push
xor
test
iret
jno
lahf
fdivs
scas
movsl
stos
cmc
push
bnd
cmp
push
pushf
sub
or
dec
sarl
hlt
push
pop
bnd
js
loop
pop
call
std
push
add
ficoml
addb
scas
rcrb
hlt
jle
pop
xor
outsb
cs
and
fs
push
in
jns
lcall
sub
stc
lock
fidivl
and
scas
sbb
mov
jmp
jg
mov
jno
je
cmp
aad
mov
push
iret
lret
outsb
mull
pusha
fmul
movsl
cmp
xchg
and
adc
cmp
mov
push
std
and
nop
xchg
outsl
loopne
xchg
xor
movsb
mov
into
cmpb
mov
dec
and
jecxz
leave
out
dec
adc
mov
lea
add
outsl
adc
xchg
inc
imul
aam
inc
or
gs
lcall
in
jle
mov
icebp
xchg
cmp
loope
fidivrl
leave
imul
push
movsb
pop
xchg
adc
repz
xor
xor
fs
imul
dec
movsb
lock
aad
lds
cmpsl
mov
jmp
cs
pushf
das
ds
pop
mov
addr16
addr16
out
mov
jecxz
push
hlt
je
mov
dec
cltd
mov
out
or
mov
inc
mov
or
adc
inc
shlb
cmpl
xor
mov
mov
cmp
shrb
sarl
nop
and
stc
lock
adc
mov
mov
mov
pop
or
icebp
mov
jle
push
dec
mov
cli
lods
dec
sahf
stc
or
lds
es
icebp
call
aam
sub
sub
sarb
inc
daa
pop
call
xchg
mov
push
push
and
popa
push
add
ljmp
pusha
clc
mov
cmpsb
jge
push
arpl
int3
inc
push
cltd
mov
loopne
subps
xchg
add
es
pop
and
stos
sbb
mov
sbb
jge
test
push
repnz
and
mov
mov
fcmove
mov
xchg
sub
rcl
xchg
and
addl
inc
jne
in
es
or
mov
jle
add
jmp
pop
cmpsl
cmp
mov
ret
push
insb
xchg
cs
in
shrl
jns
xchg
pushf
fidivl
mov
jne
andl
sbbl
mov
daa
test
fwait
addr16
mov
mov
adc
sub
add
cli
xchg
jmp
push
jmp
int
mov
iret
fmul
pusha
jg
in
jae
jle
sub
insb
xor
shll
adc
sbbl
or
hlt
adc
jae
repnz
inc
repnz
pop
dec
nop
push
ret
pop
iret
push
or
adc
loopne
push
xor
std
scas
pop
fisubrl
sbb
test
xchg
sbb
or
sub
push
lcall
arpl
jb
leave
aam
out
repnz
loope
mov
dec
imul
sub
clc
fsubs
int3
test
addr16
and
inc
sbb
push
jbe
cmp
push
and
cwtl
movsb
sti
mov
data16
add
jo
lret
and
decb
lea
jge
jno
mov
cmpsb
pop
cmp
mov
lcall
enter
in
scas
js
cmpsb
and
cmovae
or
push
es
test
mov
fdivrp
and
scas
movsl
mov
hlt
ds
or
sub
ret
loope
mov
pop
xor
lds
orb
pop
sbb
les
int3
add
sbb
sbbb
or
adc
xchg
lcall
shld
lcall
lock
adc
fistpl
sub
mov
mov
pop
add
lret
mov
push
test
rcrl
add
sub
add
dec
mov
mov
jge
mov
and
cli
fadds
ss
adc
xor
mov
loop
and
outsl
mov
outsl
jbe
mov
ds
gs
or
cmc
fidivs
jbe
push
push
sub
out
lret
mov
hlt
push
lods
mov
and
add
or
imul
dec
pop
pop
icebp
xlat
loopne
in
gs
idiv
mov
add
in
jmp
lods
xor
xlat
and
and
aad
arpl
pop
mov
testl
jle
cli
dec
add
and
push
push
adc
or
push
jmp
jbe
pushf
adc
or
xor
call
dec
inc
cmp
mov
cmpsb
ja
repnz
imul
aaa
repnz
stos
dec
mov
inc
cmp
insb
das
fldt
push
dec
lahf
mov
adc
or
mov
cmp
cwtl
roll
mov
notb
cmp
inc
xlat
lret
mov
test
jmp
lock
pushf
mov
fwait
lds
xor
in
aaa
roll
mov
cmpsl
sbb
dec
cltd
adc
insl
mov
addr16
nop
jecxz
aam
xor
inc
xor
rorb
pop
mov
pop
aam
mov
ss
mov
mov
iret
in
popa
imul
mov
lret
clc
repnz
and
push
es
mov
dec
xchg
pusha
pushl
pushf
popl
stc
xor
cmp
push
xor
cmp
xor
test
pushl
xor
pushf
xorl
clc
mov
xor
mov
mov
xor
cmc
cmc
xor
test
cld
pushl
popf
mov
movb
pushl
ret
push
pushf
popl
test
cmp
xor
call
adc
scas
or
adcb
pop
dec
cs
ds
push
mov
imul
and
fwait
ret
cmp
out
mov
jecxz
or
pop
int3
mov
push
jle
inc
aad
cmc
xorl
call
pusha
pushf
call
movb
movl
push
pusha
pushf
lea
jmp
loop
push
xchg
xorl
jno
fldcw
repz
jle
fsubrs
scas
jns
jle
cmp
cmpsb
lds
rcrl
add
cmc
dec
popa
lea
clc
xor
cld
pushf
pushl
popf
pusha
pushf
pushl
ret
xor
stc
xor
clc
mov
xor
clc
cmc
pushl
popf
pusha
push
pushl
ret
pusha
mov
push
push
movl
mov
movl
pusha
movb
pushf
movl
lea
jmp
call
pushf
clc
bt
xor
push
pusha
xor
cmp
jmp
jmp
movl
call
pushf
xor
jmp
push
pusha
call
push
pusha
jmp
jmp
mov
xchg
mov
xchg
addb
jnp
icebp
aad
xor
inc
dec
dec
stc
out
sti
xchg
int3
jl
push
xchg
lcall
mov
jbe
std
pop
popf
nop
push
fsub
xchg
adc
and
shlb
test
xchg
lcall
fdiv
lret
pop
pop
push
adc
rorl
lcall
lret
hlt
dec
inc
jnp
pop
sub
mov
dec
pop
dec
cmc
ret
pop
lock
loopne
sub
and
lret
sbb
push
push
pop
sub
sbb
cmp
pop
movsb
mov
inc
mov
lea
pusha
clc
scas
stos
movsb
jnp
out
and
or
push
stc
outsb
test
ffree
pop
call
pop
sbb
data16
leave
movb
mov
int
mov
cmp
test
popa
loope
cmp
or
mov
and
orl
cmp
pop
lret
mov
push
or
outsl
outsb
jp
and
rorb
or
cli
cli
fstps
xchg
cltd
sub
mov
hlt
xor
and
out
rolb
and
and
clc
and
inc
stc
outsl
std
aaa
repz
mov
mov
sbb
lret
enter
fwait
mov
xchg
ja
fadds
mov
fadds
jl
mov
xor
into
mov
mov
dec
popf
vshufps
je
mov
call
pushf
bound
lock
pop
inc
fldenv
cmp
repnz
or
ret
push
sbb
movsb
and
loope
je
mov
pop
pop
insl
push
loop
pusha
jg
inc
cmpsb
in
sbb
mov
loope
test
mov
in
push
scas
push
decb
mov
ja
mov
ret
orb
filds
out
xchg
xchg
adc
jne
push
push
add
sub
add
xchg
mov
ljmp
into
inc
inc
push
push
xchg
data16
cmp
dec
dec
call
fmuls
adc
sub
loope
mov
insb
adc
and
cmp
loop
mov
sbb
mov
mov
xchg
int
cwtl
cmp
adcb
xchg
mov
out
scas
jecxz
aad
int3
test
push
or
ljmp
mov
cmp
cmp
dec
inc
or
push
xor
stc
xor
pushf
xorl
movb
xor
clc
xor
pushl
xor
std
clc
pushl
popf
pushf
mov
pushl
ret
mov
mov
adc
ret
cmpsb
xor
adc
fdivrl
movsb
icebp
sti
sbb
int
pause
mov
pop
aaa
sub
push
imul
in
test
sti
shlb
sbb
add
ljmp
pushf
jo
xor
add
lods
aam
ret
ljmp
push
or
jge
std
cmc
mov
roll
pop
dec
andl
roll
adc
sti
shrb
outsb
mov
outsb
pop
or
je
cltd
xchg
movsb
pop
jg
push
pop
js
sbbl
cs
pop
in
std
adc
lret
bound
cmp
xchg
mov
in
or
in
xchg
pop
adc
add
repnz
lock
adc
add
in
push
push
push
adc
fstpl
popf
xchg
mov
out
push
or
cmp
fcmovnb
pop
dec
sbb
jb
sarl
mov
aaa
lock
add
enter
xor
cmpb
mov
mov
xchg
dec
mov
std
addr16
arpl
adc
xchg
iret
dec
orl
out
or
notb
in
pop
mov
adc
mov
mov
dec
jb
mov
or
pop
cmp
mov
addr16
and
add
out
xchg
sahf
adc
sbb
push
das
xor
je
in
and
in
jbe
test
sub
xor
lock
or
xchg
jae
xor
in
cs
scas
fs
popf
das
je
repnz
jae
pop
ds
into
sbb
ja
sahf
js
pop
jb
jmp
jge
imul
inc
and
int
pop
add
inc
and
out
pop
sub
je
adc
jl
add
fs
jmp
pusha
pushf
popl
bt
xorl
test
bt
xor
bt
xor
call
xor
mov
xor
jmp
pusha
push
push
movl
pushf
pushf
movl
movb
movb
lea
jmp
stc
xor
jle
xchg
lret
sbb
sbb
scas
cld
mov
fbld
dec
or
cmp
jge
cltd
mov
lock
loop
adc
jg
add
dec
test
test
mov
test
pop
add
mov
xchg
gs
cmpb
test
sbb
cwtl
adc
xchg
cmp
push
repz
sbb
in
insl
lret
and
ds
nop
insb
pusha
mov
inc
cs
sbb
add
sti
add
mov
cmp
adc
cmp
sbb
jmp
jmp
pop
lock
inc
ja
adc
mov
stos
insl
cld
push
push
push
xlat
lods
jecxz
mov
jmp
and
stc
xor
cmpsl
cli
xchg
ds
jnp
in
mov
or
add
adc
mov
jae
test
movsl
cmpsl
jno
mov
add
jmp
xchg
adc
mov
mov
jmp
jne
cmp
mov
inc
pushf
out
xchg
xchg
out
mov
jp
mov
dec
sbb
ss
adc
movsb
push
les
and
jne
bound
xor
add
jnp
sti
mov
sbb
aaa
xchg
pop
aas
std
sbb
sub
bound
jle
aad
leave
jb
ja
adc
mov
mov
pop
push
xlat
movsl
push
aam
outsb
fld
es
adc
movl
push
push
push
lea
jmp
jmp
jmp
ror
loopne
xchg
je
push
adc
adc
pop
dec
mov
adcl
ss
sub
add
mov
imul
lds
cmpl
mov
mov
push
lcall
jno
cwtl
xchg
jle
jo
cld
jge
fwait
arpl
mov
sub
sbb
int3
mov
mov
stos
mov
push
xor
jg
mov
cmp
mov
aam
jg
cmp
xor
pop
xchg
sbb
lret
andb
mov
mov
movsl
xchg
movsb
push
xchg
daa
jge
and
das
add
stc
lds
imul
cmp
int3
pop
fcomip
je
pop
enter
pop
cli
mov
mov
sti
fs
insb
dec
mov
stos
add
dec
jecxz
and
call
jnp
pop
inc
into
jmp
loope
movsb
stos
sbb
dec
imul
stc
movsb
cmp
aas
imul
mov
scas
jb
outsl
imul
shll
inc
shll
push
popa
push
mov
out
ret
std
adc
sbb
dec
or
mov
pop
pop
jp
mov
mov
xchg
lea
je
inc
jecxz
cld
or
inc
out
add
jge
mov
mov
inc
and
pop
mov
mov
sub
fwait
jnp
ljmp
das
imul
mov
test
cmp
jp
jp
ljmp
lods
xlat
and
jge
ljmp
xor
jnp
push
ud0
fbld
sbb
shll
cmp
repnz
mov
pop
mov
push
sub
xchg
and
hlt
ljmp
xor
sbb
pop
lods
jmp
fdivrs
outsl
daa
cld
cmp
scas
out
lret
out
or
add
xor
adc
stc
cld
fmull
iret
ss
lcall
addb
pop
sbb
dec
es
inc
cmp
mul
xchg
or
cmovg
push
aam
imul
movsl
xchg
or
mov
push
mov
out
push
add
or
xchg
inc
movsl
in
lea
cmp
add
outsb
into
mov
and
mov
mov
mov
dec
out
jge
xchg
adc
jecxz
adc
pop
or
pusha
les
mov
lea
leave
dec
xor
xor
and
inc
push
stc
adc
xchg
mov
xor
mov
add
gs
jg
add
mov
stc
lds
cs
mov
ret
cmp
idivl
sub
fidivrs
sbb
inc
flds
jae
inc
sahf
ret
jmp
lret
daa
aaa
out
cmp
xor
mov
addl
jmp
loope
or
hlt
lahf
push
jae
les
xchg
xor
bt
xor
test
pushl
xorl
test
mov
xor
cmc
test
xor
jmp
pushf
pushf
pushf
popl
stc
cmp
xor
pushf
pushf
xor
pushl
xor
bt
pushf
xor
call
pushf
pushf
popl
push
xor
clc
test
xor
mov
pushf
xor
pusha
xor
jmp
xor
pushf
mov
xor
mov
xor
clc
cmc
xor
stc
test
xor
push
push
xor
pushf
jmp
popf
adc
dec
jno
pop
fiaddl
out
decl
daa
push
sbb
mov
test
and
mov
fwait
jmp
jecxz
mov
mov
xchg
sti
and
mov
orl
repz
pop
fadd
bound
xchg
pop
int3
push
xchg
std
je
sub
xchg
dec
das
mov
data16
sbb
jns
push
pop
fisttpl
addr16
sub
and
push
loopne
push
mov
jge
inc
push
add
ds
inc
jo
int3
cs
jg
addl
jle
and
jge
xchg
mov
shl
mov
jmp
ret
push
pop
xorb
test
ret
fsubr
add
es
iret
xchg
out
jae
sub
je
pop
or
adc
fwait
add
daa
pop
fimull
xor
das
sbbl
push
movl
pusha
jmp
in
mov
push
and
cmp
in
fdivl
mov
lret
pop
jb
mov
cld
cltd
ljmp
xchg
inc
lods
pop
dec
cmp
pop
add
sub
jp
jl
lret
cmc
scas
lahf
sbb
imul
outsl
sbb
mov
add
sub
push
pop
lea
jo
push
pushf
pusha
movb
mov
lea
jmp
movl
movw
push
pusha
pushf
lea
jmp
call
call
pushf
popl
cmc
cmc
xor
cmc
test
xor
test
xorl
test
xor
cmp
xor
cmp
pushf
xor
cmp
bt
xor
pushf
call
lea
jbe
pusha
movl
pushf
push
lea
jmp
call
jmp
stc
pushl
popf
pushf
mov
pushl
ret
xor
bt
xor
pushl
xor
bt
xorl
call
jmp
pushf
popl
call
xor
test
movw
xor
clc
xorl
cmc
xor
cld
pushl
popf
movb
pushl
pushl
ret
pusha
movl
pushf
pushf
push
lea
jmp
xor
pusha
xorl
test
cmc
xor
mov
cmc
xor
cmp
pushl
popf
pushl
mov
pushl
ret
in
mov
in
xchg
rcrl
pop
xchg
ret
xchg
xor
pop
fnsave
sub
pop
pop
jno
fmull
push
and
jae
cld
popa
mov
cmc
xor
ds
imul
icebp
mov
xlat
push
pop
xor
mov
rolb
xor
scas
push
xchg
jns
jmp
xor
fistps
cmc
stc
adc
ficoms
mov
xlat
cltd
jno
test
scas
test
cmp
rolb
mov
std
xorl
loopne
and
fwait
in
dec
fists
add
jecxz
jb
adc
iret
push
cmpsl
nop
dec
add
filds
jo
in
xorb
jb
sub
hlt
mov
dec
div
add
or
mov
aam
fs
js
pop
xchg
repz
es
mov
loopne
sbb
mov
mov
test
testb
add
pushf
pusha
xorl
cmp
xor
stc
xor
push
xor
call
lcall
sub
mov
push
mov
lret
xchg
sarb
pop
inc
and
mov
inc
or
jg
mov
cmp
inc
lahf
xchg
inc
hlt
mov
and
repnz
and
or
movsl
clc
and
mov
les
add
clc
xor
jmp
movb
movl
pusha
push
jmp
movsb
inc
mov
fs
add
push
aam
das
dec
dec
inc
rcrb
js
inc
aaa
lret
inc
aad
sub
adc
pop
inc
jge
add
imul
aad
sub
js
sbb
cltd
leave
cmp
xchg
movsb
fs
fildll
mov
fsubrs
leave
mov
imul
pop
push
test
jecxz
jecxz
ret
loopne
lret
les
mov
fwait
push
sub
stos
cltd
imul
adc
push
test
mov
aas
inc
out
scas
jecxz
ret
inc
out
repnz
mov
mov
in
shlb
outsl
sbb
push
add
test
xor
lods
imulb
call
inc
cmp
or
into
stc
idivl
mov
xchg
test
cmp
cmp
or
cmp
inc
or
push
addl
push
pushf
popl
stc
xor
pusha
xor
cmc
mov
xor
jmp
call
call
clc
xor
cmc
push
xor
call
pusha
pushf
popl
pusha
xor
bt
movw
xorl
pushf
cmc
xor
jmp
movb
push
movl
call
push
movl
jmp
rolb
jb
jp
adc
xchg
ss
das
sub
mov
enter
jmp
jno
xor
xchg
xor
push
xchg
ss
jne
inc
mov
jae
dec
daa
push
sbb
cld
pop
mov
inc
sbb
andb
cld
jne
mov
cld
stos
arpl
icebp
push
xor
push
xchg
ror
adc
jae
mov
jo
inc
sti
mov
lcall
adc
mov
sbb
cmp
pop
adc
xor
pop
cmp
pop
pop
pop
lock
repz
mov
lods
jmp
repnz
jmp
ss
ss
push
cmp
or
lods
arpl
xchg
imul
arpl
cmpl
pop
and
aad
pop
mov
mov
mov
jg
cmp
mov
xchg
xchg
addl
outsb
xchg
push
or
xchg
pop
mov
or
fsubl
sahf
or
in
outsl
int3
iret
cmp
mov
aad
sbb
dec
sub
mov
rorl
pop
xchg
xor
or
sbb
daa
lods
adc
mov
push
hlt
fsubp
sub
std
pop
inc
sbb
or
mov
in
fs
repz
aam
sub
mov
inc
repnz
adc
mov
js
sarl
cmp
sti
inc
mov
add
jnp
jg
fdivs
cs
loope
xor
xor
cmpsl
mov
mov
sbb
lds
imul
pusha
into
jae
pop
adc
add
rorl
dec
in
daa
sub
aas
xor
ss
cld
jns
int3
pop
cmp
aam
repz
stc
xor
clc
test
xor
bt
pushl
xor
movb
xor
pushf
xor
mov
bt
xor
std
pushl
popf
movw
push
pushl
ret
push
pushf
movl
pushf
mov
lea
jmp
pusha
push
mov
mov
movl
movb
push
pusha
movl
mov
lea
jmp
pusha
pusha
pushl
movl
call
pushf
mov
lea
jge
push
movl
pusha
pusha
pushl
pushf
movl
push
push
movw
push
lea
jmp
pusha
pusha
pushf
popl
call
movl
pushf
lea
jmp
pushf
jmp
pushf
pushl
popf
mov
mov
pushl
ret
pushf
pushf
movl
jmp
jmp
jns
pop
mov
add
jl
xchg
sbb
insb
dec
cmpl
es
mov
ja
jp
push
mov
rorl
lds
lock
dec
sahf
dec
das
jp
hlt
mov
fwait
dec
lods
fists
or
addr16
shll
dec
push
test
ja
icebp
scas
andb
push
pop
mov
lret
out
rcl
jmp
mov
out
cmp
movsb
inc
jg
lods
push
jp
cs
data16
sub
inc
test
mov
rcll
fld
ja
dec
lods
lods
test
jp
dec
fdivr
push
jo
jl
out
insb
mov
call
cmp
mov
or
mov
pop
pop
push
gs
stos
inc
fcomps
mov
sub
loope
sbb
jl
xlat
push
mov
inc
and
pushf
stc
cli
jns
dec
loopne
popa
pop
loop
adc
cmc
xor
aas
sahf
mov
push
imul
arpl
jl
xchg
loopne
inc
push
in
inc
jbe
repnz
mov
jmp
jb
push
out
mov
and
adc
test
aam
idiv
je
add
ja
popa
js
movsl
dec
add
call
fisttps
dec
xchg
inc
cmp
mov
rol
mov
jae
jno
add
cmp
dec
outsl
jo
dec
lock
pop
in
jmp
or
xchg
xchg
cld
les
test
and
xor
mov
outsb
mov
js
inc
nop
imul
add
and
mov
cli
lret
inc
enter
gs
cmp
ficoml
idivb
faddl
sub
pop
popa
mov
fisubrl
dec
ja
iret
push
sbb
mov
mov
icebp
mov
xor
mov
mov
inc
cltd
jns
pop
pop
movsl
mov
shrl
cmc
xchg
test
test
xor
into
jnp
insl
cmp
pop
loopne
cwtl
cmp
loop
ja
cmp
cli
mov
push
popa
sub
push
sbb
repnz
dec
mov
push
dec
pause
xlat
ret
jb
pop
inc
out
sub
sub
call
pusha
movb
push
call
movl
jp
push
pushf
pushf
pushf
lea
jmp
mov
pusha
movl
mov
pushl
pushl
lea
jmp
stc
xor
test
xor
cmc
xor
clc
xor
pushf
bt
xor
stc
xorl
cmc
push
xor
clc
pushl
popf
pusha
push
pushl
ret
movl
pusha
movw
movl
mov
push
movb
lea
jmp
pop
in
sbb
inc
dec
mov
mov
mov
adcl
scas
inc
and
stos
cld
shll
cmc
pop
mov
mov
sti
xchg
dec
add
cmp
mov
int3
and
jmp
mov
pop
jge
push
sbb
xor
and
push
rorb
aas
add
fldl
xor
cmpsl
mov
test
xor
xchg
loopne
adc
es
jbe
xchg
shll
rorl
add
adc
fnstenv
rorl
push
ret
sub
insb
push
cli
mov
lea
int3
cld
shll
das
pop
jge
xchg
cmc
pop
mov
lds
fldl
pop
jp
sbb
arpl
inc
div
popa
clc
fwait
sbb
dec
shrl
hlt
add
dec
popl
inc
xor
adc
mov
sub
push
imul
jb
insb
dec
rorb
cmpsl
pop
mov
aaa
push
rcrb
div
sbb
repnz
mov
inc
test
jns
push
fdivs
testb
add
push
push
and
leave
pop
xchg
mov
inc
fwait
pop
mov
cmp
xor
pop
leave
mov
ja
lret
xor
rcrl
lods
mov
cmp
xchg
jge
dec
mov
out
pop
adc
test
imul
stos
je
je
icebp
pop
sbb
xor
movl
pushf
mov
mov
pushf
lea
jmp
xlat
sti
mov
sbb
mov
cmpsl
sbb
mov
cmp
jnp
jne
shll
pop
adc
xor
imul
fs
inc
pop
aaa
call
shl
mov
xor
dec
mov
and
aaa
and
in
sub
shl
movsl
xlat
arpl
lods
daa
sub
mov
push
and
inc
test
in
push
dec
lods
xchg
sbb
fadds
outsb
inc
push
aam
js
insl
jbe
jle
or
mov
pop
sbb
push
inc
lods
push
jge
fdivs
loope
jbe
adc
push
inc
in
movsb
mov
sub
xor
lahf
dec
psubusw
sti
shl
sub
inc
inc
insl
cmp
sub
fwait
cmp
sub
ret
cmp
cmpsb
mov
fildl
or
int
mov
inc
int3
cli
lcall
int3
call
in
test
adc
jmp
dec
xchg
dec
leave
cmp
in
insb
cmp
add
inc
and
xor
push
call
movl
pushf
lea
jmp
bt
pushl
popf
movw
pushl
ret
push
movl
pushf
movl
movl
pushf
movl
lea
jmp
testl
push
xor
adc
fisttpl
inc
add
push
cmpsb
loop
sbb
xchg
sub
stos
jmp
mov
in
cmc
push
in
fwait
pop
pusha
test
mov
arpl
adc
push
in
or
out
stc
mov
lods
mov
xchg
push
cmp
stos
icebp
mov
jae
xor
sbb
jmp
sbb
inc
repnz
or
pusha
xor
shrl
jl
in
nop
push
dec
aaa
hlt
pop
arpl
fwait
xor
dec
jb
push
in
cmpsb
scas
xchg
mov
repnz
out
sarl
mov
xchg
popf
ds
and
test
jne
aad
xchg
and
add
dec
or
pop
sbb
data16
push
dec
call
jb
cmpsl
idivl
push
test
ret
jae
fisttpll
jmp
inc
cmp
mov
ss
cltd
icebp
mov
imul
push
test
sub
sub
push
hlt
das
aam
jmp
lea
clc
int3
ljmp
jnp
imulb
sub
in
clc
mov
cmp
mov
or
xchg
insl
into
or
imul
xchg
dec
ljmp
ret
dec
enter
mov
test
cmp
shlb
xchg
adc
add
imul
and
aaa
jp
mov
test
call
mov
enter
push
hlt
mov
hlt
sub
adc
pop
rolb
cli
pop
into
fmull
lock
pop
cmp
popa
mov
nop
sarl
sub
cmp
sub
repz
repnz
outsl
mov
mov
loope
mov
adc
jmp
inc
int
jb
or
push
in
dec
push
enter
push
or
dec
cmp
ret
add
pop
imul
cmp
push
mov
jnp
mov
or
lods
les
je
or
cli
std
sub
inc
loop
subb
push
rorb
outsb
inc
imul
cmp
jb
ja
rclb
aas
sahf
repnz
lods
jne
mov
jge
sub
pop
jle
dec
pusha
negb
div
cmp
jmp
inc
and
inc
insl
shrb
sub
nop
pop
cli
ljmp
mov
inc
and
pop
push
sbb
lea
jmp
pop
xchg
pop
call
cmpl
sub
jne
xchg
mov
jbe
arpl
mov
xor
insl
sti
jg
jnp
in
mov
leave
dec
jg
dec
data16
pop
inc
jl
sbbb
or
cmp
sarb
push
sub
rolb
out
pop
lret
movsl
sub
lods
cmp
sub
mov
sub
je
cli
iret
ror
scas
fistps
jle
pusha
push
push
loop
emms
push
add
out
in
inc
cltd
pop
xor
xor
shr
ljmp
add
push
add
sbb
inc
jmp
shr
mov
sub
mov
push
dec
cmpsl
cmpsl
dec
arpl
xchg
jnp
orb
xchg
out
or
xor
outsl
and
les
sbb
in
mov
dec
dec
out
push
jo
fisubs
loop
xor
xchg
pop
dec
in
sarl
fstl
shll
jmp
pop
imul
sbb
pop
pushf
sub
mov
in
push
push
xor
adcl
das
repz
sbbl
mov
gs
sub
shll
movsb
rcrl
pushl
xor
fldl
xor
pushf
mov
inc
add
iret
int
test
fs
stos
insb
enter
and
inc
push
dec
out
ds
sub
movsb
cmp
push
sbb
hlt
imul
jmp
hlt
push
inc
dec
je
in
lock
jecxz
cmp
cmp
popa
stos
xchg
xchg
mov
xor
lea
mov
push
out
cwtl
sbb
mov
push
push
pop
shr
mov
xor
stc
loop
jns
xlat
pop
in
in
xchg
pop
xor
in
scas
outsl
jle
aaa
test
sub
push
movl
mov
pushf
pusha
lea
jmp
pusha
lea
jg
push
pusha
movl
jmp
jns
push
ljmp
push
xor
jp
test
rclb
aas
daa
bound
mov
mov
test
xor
cli
xor
jae
imul
fcmovnbe
mov
icebp
mov
aas
daa
imul
es
or
sub
cmp
mov
add
hlt
jecxz
or
mov
jnp
dec
lahf
sbb
mov
test
lock
or
stos
ss
jle
dec
cli
sub
out
pop
xor
or
xchg
cld
mov
loope
inc
jno
arpl
cwtl
leave
or
test
dec
mov
cmp
sahf
xor
test
stos
sub
addr16
xchg
or
outsl
in
xchg
cmp
xor
in
adc
es
jge
pop
gs
inc
xor
adc
jge
push
cwtl
fidivs
cmp
cmp
mov
pop
adc
mov
shrl
and
insb
push
cwtl
fisubs
jge
iret
out
push
fwait
nop
call
mov
std
xchg
dec
cli
fidivl
xchg
sub
mov
enter
sub
dec
inc
aaa
sbb
cmc
sub
mov
xlat
jo
movsl
xlat
mov
lahf
loopne
mov
push
inc
push
pusha
mov
pop
shll
fcoms
call
sbbl
lea
or
xchg
push
sub
fistps
and
insl
test
fmull
xor
jns
lock
popa
xchg
mov
push
jmp
fsubrp
xor
into
ret
aaa
loopne
push
test
popf
daa
jmp
lock
std
std
pop
xchg
pushl
dec
mov
rol
lods
sub
pushf
mov
pop
xchg
ss
fidivrl
or
cmp
push
aam
pop
roll
fisubrl
adc
test
adc
add
sbb
test
mov
aaa
xor
and
jmp
adc
dec
pushl
popf
pushf
push
pushl
ret
pushl
popf
mov
pushf
pushl
ret
pusha
xor
movw
cmc
xorl
test
xor
pusha
jmp
call
adc
in
cmovg
push
mov
jmp
pop
add
mov
inc
jle
aam
stos
sti
jnp
in
add
cwtl
pop
jns
nop
sbb
jnp
rcr
test
xor
dec
inc
sub
dec
in
movsl
decl
sub
pop
sub
pushf
mov
push
cmp
or
das
shrb
arpl
clc
mov
jo
sub
pop
hlt
mov
pop
cmp
out
js
in
ret
inc
cmp
push
je
jmp
lret
pop
insb
mov
mov
cmpsb
subl
and
inc
in
popa
dec
mov
jns
stos
xchg
pop
xor
fnsave
sbb
sbb
pop
test
gs
loope
add
repnz
int3
inc
jo
stos
dec
test
sub
push
fisubs
out
add
inc
add
jbe
les
sub
pushf
popl
stc
pusha
xorl
pushf
call
pushl
movl
movl
pushf
push
pushf
lea
jmp
xor
bt
xor
cmp
cmp
xor
call
mov
dec
inc
roll
sti
push
pop
stos
mov
call
imul
stos
hlt
sub
out
mov
imul
add
push
cmp
fs
xchg
mov
xchg
ja
add
roll
ds
popa
out
or
xchg
push
lock
rcrb
shlb
mov
sbb
int
pushf
jp
rorl
pop
mov
cltd
rorb
jmp
add
scas
and
dec
outsl
enter
stc
and
xor
and
xchg
repnz
mov
xor
cltd
dec
aad
fisubs
mov
cmpsb
jo
xor
dec
push
add
cmp
xchg
mov
rcrb
fdivl
das
repnz
test
mov
or
pop
xor
dec
xchg
mov
adc
ljmp
int3
mov
add
cmp
or
push
int
in
pop
cmp
stos
es
mov
sub
adc
or
loope
xchg
xchg
in
inc
addr16
les
aam
or
pop
adc
cmp
in
repnz
push
int
lret
jl
scas
imul
and
push
push
test
aaa
movsl
sti
jnp
add
arpl
mov
mov
lcall
xor
enter
lods
fwait
adcb
pop
aam
daa
jne
call
add
mov
mov
andb
hlt
jb
arpl
pop
aas
mov
push
or
cmp
pushf
call
inc
or
and
dec
loop
or
cmp
cli
push
mov
jbe
sbb
adc
testb
jl
dec
gs
inc
push
jae
push
je
mov
subl
jg
aad
inc
cmpsb
xor
and
icebp
movhps
xor
push
push
out
or
fdivrl
xor
push
jo
insl
xor
sbb
inc
arpl
test
aaa
shlb
sti
popf
loop
mov
xchg
fs
pop
ljmp
outsb
cmpsl
push
bound
xchg
dec
idiv
div
add
bound
sbb
gs
push
or
out
sbb
mov
incb
jne
sbb
std
xor
pop
inc
mov
dec
and
imul
incl
and
cwtl
fistpl
negl
sti
inc
add
fbld
and
pop
les
lea
jmp
pushf
popl
cmc
xor
jmp
xor
jmp
jne
pushf
movl
pushf
pusha
jmp
push
push
pushf
popl
mov
xorl
cmp
clc
xor
cmp
xor
clc
xor
clc
mov
xor
mov
xor
bt
xor
cmc
xor
mov
pushl
popf
mov
pushl
ret
xor
jmp
outsb
ss
icebp
cmovg
sahf
xor
pop
nop
imull
pop
bound
int
push
jo
xchg
mov
xchg
push
xchg
out
mov
xlat
mov
sbbl
mov
mov
adc
mov
xor
and
or
lret
xor
imul
xor
mov
enter
jae
sub
xchg
adc
push
jecxz
cmp
inc
mov
test
fistpl
fisttpl
fsubrp
test
arpl
and
jp
push
push
and
repnz
bound
incl
das
xchg
cmpsl
xchg
sbb
cld
arpl
sbb
dec
xchg
mov
testl
jl
int3
jns
icebp
adc
decl
jle
add
jg
dec
jb
mov
push
daa
sub
clc
push
shrl
pop
call
adc
test
fmull
sti
call
call
movl
mov
lea
jmp
movl
pusha
lea
jmp
jmp
call
xor
mov
xor
clc
bt
xor
pushl
push
xorl
pushf
xor
clc
clc
xor
jmp
pushf
test
xor
jmp
xor
cmc
test
xor
clc
movb
xorl
movb
cmp
pushl
popf
pushf
pushl
ret
shl
mov
dec
inc
fcoms
push
sbb
inc
sbb
sbb
ret
popa
call
xchg
shll
sub
dec
movsb
xchg
cld
push
jge
bound
repnz
jo
jl
mov
cmpb
fcmovnb
mov
imul
jmp
js
mov
and
jns
inc
addr16
imul
enter
out
mov
cmpsl
and
pusha
jp
cld
pusha
cmp
jbe
loop
or
add
dec
pop
cwtl
sbb
cmp
sbb
mov
mov
subb
sti
test
xchg
js
test
fincstp
fcoml
fldpi
add
cmp
ss
pushl
cmp
mov
fldln2
nop
imul
add
psrlw
arpl
loop
mov
test
inc
fisubrs
jbe
mov
or
inc
inc
pop
cmp
call
je
xchg
pushf
jmp
fistps
ljmp
jle
pushf
movl
push
call
push
call
xor
movb
xor
test
xorl
push
xor
jmp
push
movl
push
call
xor
push
xor
push
xor
clc
xor
pushl
pushl
popf
movb
push
pushl
ret
xor
bt
pushl
popf
movb
pushl
ret
xorl
pushf
xor
bt
pusha
xor
call
xor
pushl
test
xor
pushf
bt
xor
bt
cmp
xor
cmc
clc
xor
pushf
cld
pushl
popf
pushf
movw
pushl
ret
fbld
cmc
cmovg
cmp
aaa
popf
sbb
mov
push
insl
mov
mov
sarb
push
fidivrs
movsl
mov
push
or
sub
cld
dec
or
sahf
in
inc
or
out
lret
gs
daa
xchg
call
mov
scas
ret
int3
jp
jnp
fisttps
xor
push
and
mov
call
adc
lret
add
loopne
cmpsb
outsb
les
out
jno
wrmsr
leave
mov
inc
or
xor
inc
fcmovu
jne
mov
aad
adc
cmp
push
popa
sub
filds
jne
and
in
aad
fs
rolb
jp
mov
add
aad
mov
lahf
or
jmp
adc
cld
lcall
jmp
cmc
xor
pusha
call
xchg
scas
mov
cmp
in
fmuls
loopne
jae
pop
decl
xchg
test
cmp
or
sub
repnz
mov
in
stos
cmp
cmp
fisubs
mov
out
or
xor
aam
movsl
into
xchg
inc
or
sbb
adc
ja
mov
aad
jecxz
cmpsl
lods
xor
or
and
mov
mov
lret
and
enter
cmp
in
sbb
mov
mov
stos
sbb
jmp
push
movsb
movsl
mov
push
push
lcall
js
adc
xchg
adcl
loop
sbb
and
call
add
cmpsl
adcb
inc
sub
or
fucomp
stos
fs
stos
out
ja
insb
push
lea
sub
adc
inc
add
sbb
js
mov
xchg
inc
aas
popa
adc
mov
push
sub
ja
xchg
rorb
scas
and
inc
pop
ljmp
sub
aam
xchg
push
cmp
scas
mov
dec
scas
sub
cmp
fiadds
in
cmovb
sti
xchg
cmp
aad
das
sub
mov
or
or
sub
jo
mov
sbb
or
aaa
cmp
push
mov
ret
sar
leave
push
xlat
lds
push
xor
mov
push
dec
jmp
arpl
arpl
out
cmp
sub
jmp
rcrl
fs
xchg
sub
jns
cwtl
lds
in
dec
or
mov
pushf
add
jg
lahf
sub
pusha
lahf
xchg
sub
xor
pop
push
gs
in
fnsave
rcr
mov
sub
inc
push
movl
push
lea
jmp
pusha
movl
pusha
lea
jl
push
push
push
mov
lea
jmp
cmp
xor
mov
stc
xor
cmp
xor
mov
xor
cmp
xor
cmp
clc
xorl
std
pushl
popf
pushl
push
pushl
ret
pusha
movl
mov
pushf
pushf
lea
jmp
sub
mov
cmovg
or
xor
lea
loop
rcr
in
cmpsb
je
je
xor
mov
mov
lock
ja
gs
mov
gs
dec
cmp
into
push
mov
das
jns
out
aad
push
out
adc
mov
mov
sbb
pop
cmp
mov
lods
mov
add
call
xchg
cwtl
sub
and
add
nop
ds
stc
sub
pop
mov
sbb
sub
push
popa
repnz
iret
jg
mov
mov
jae
stos
aaa
pop
inc
cmp
xlat
cmpsl
jg
pop
call
lahf
add
push
sbb
bound
movsb
sarl
out
and
inc
inc
add
clc
cmp
push
arpl
mov
mov
insb
jge
jae
add
adcb
dec
jns
jmp
call
jl
ljmp
fldenv
std
push
or
loope
icebp
mov
inc
lods
stc
loope
cmp
push
mov
sar
xchg
fcompl
sahf
sahf
out
push
jbe
es
inc
adc
xor
ja
stc
mov
xchg
in
ds
push
xchg
sbb
ljmp
cltd
out
add
das
dec
or
addl
jns
test
into
lods
jno
add
xchg
addl
inc
and
inc
add
adc
out
repz
rcr
xchg
xchg
lahf
xchg
lods
lahf
ret
mov
addl
orb
inc
outsl
pop
jbe
in
rdmsr
or
loope
lret
cmc
pop
push
jl
jp
mov
inc
add
and
mov
mov
fldt
roll
out
push
dec
xor
cmovg
sahf
pop
push
sarl
lret
xchg
dec
movntq
out
inc
mov
in
mov
pop
ret
jecxz
jge
sbb
mov
push
sub
mov
adc
mov
mov
stc
cmp
lock
push
push
sbb
daa
inc
inc
cmp
dec
in
in
insb
inc
inc
sbb
mov
push
notb
sbb
or
xor
dec
mov
sbb
sub
fistpl
scas
filds
push
cmpsl
mov
cmp
pusha
sbb
enter
scas
push
test
cmp
push
lcall
push
repnz
sbb
subb
adc
int
inc
dec
pop
lock
inc
insl
das
add
dec
cmc
lds
sbb
jmp
stos
adc
sub
pusha
adc
mov
ljmp
sti
call
loopne
leave
adc
bound
push
mov
repnz
cmp
cs
pop
adc
adc
dec
lahf
push
test
push
mov
pop
lcall
loop
cmpsb
mov
daa
pop
pop
sbbl
enter
fimuls
sahf
bound
loope
repz
mov
dec
shr
in
xchg
mov
inc
iret
pop
arpl
lret
loopne
mov
xchg
xchg
and
neg
xchg
pop
movsb
cld
push
cmp
or
cmpsl
inc
cmp
test
and
sbb
cmpsl
pushf
inc
or
xor
inc
xchg
push
push
fisubl
jecxz
push
and
cmp
add
or
aad
push
xor
test
sub
nop
fsts
mov
dec
xor
adc
lock
xchg
test
test
inc
mul
jge
jbe
sub
mov
addr16
xchg
addr16
push
testl
sub
sbb
aaa
pop
decl
jecxz
cmp
xchg
cmp
mov
stc
stos
addl
mov
clc
test
xchg
lods
insl
cmpsl
dec
or
xor
mov
mov
jmp
scas
sarb
insb
lock
nop
xor
loop
mov
ret
sub
or
mov
sbb
out
dec
dec
push
pusha
and
and
xor
jbe
and
mov
sbb
lret
div
in
mov
icebp
mov
loope
mov
adc
sbb
pushf
popl
push
clc
xor
pushf
xor
test
clc
xor
cmp
xor
call
mov
call
cwtl
mov
fwait
ret
stos
or
mov
shlb
jg
aad
mov
lods
or
push
outsb
test
jecxz
arpl
or
ljmp
or
mov
jmp
or
jle
hlt
and
inc
mov
push
mov
lret
test
sub
mov
sbb
xlat
dec
cmpsl
das
pop
dec
cli
stos
into
gs
mov
bound
out
pop
mov
fld1
jg
inc
imul
mov
jae
out
pop
lods
push
fdiv
call
pusha
call
push
push
decb
dec
out
es
pushf
jmp
cmp
cmc
test
or
or
cmpsl
pop
and
sbb
mov
push
fcompl
sbb
cmp
mov
inc
cmpsl
push
xorl
xchg
movsl
call
xor
adc
cmpsl
mov
mov
pop
ljmp
stos
orb
fisttps
call
cmp
sbbb
sub
sbb
xchg
jge
dec
dec
test
add
lahf
frstor
lock
adc
and
inc
pop
insl
das
pop
scas
bound
inc
aad
cmp
inc
cmp
dec
roll
iret
xchg
aad
xor
mov
in
sbb
dec
pushf
cmp
pop
icebp
mov
dec
call
icebp
pop
js
xor
mov
xor
bt
stc
pushl
popf
pushf
push
pushl
ret
xor
test
xor
clc
clc
xor
push
xorl
pusha
xor
jmp
or
leave
mov
jne
add
add
xor
sti
arpl
jns
out
push
add
ss
cltd
mov
mov
rclb
dec
sbb
outsl
xor
xor
sub
or
cmp
xchg
inc
fimuls
les
jae
sub
cmp
sub
mov
int
sbb
xchg
push
jecxz
movsb
add
jle
inc
jle
mov
negb
add
std
inc
es
pusha
lea
jmp
pusha
pusha
movl
mov
pushf
movl
mov
mov
push
lea
jmp
jae
addr16
pop
xor
push
inc
testb
scas
rol
xchg
lea
sbb
insl
push
push
es
cmp
rcll
imul
jne
pop
xchg
push
icebp
xchg
mov
adc
jge
add
push
pop
call
push
movb
call
xor
cmp
xor
mov
call
movl
pushf
mov
movl
pushf
pushf
push
push
lea
jmp
cpuid
call
movl
pushf
pusha
movl
movl
lea
jmp
sbb
add
dec
sub
and
mov
xchg
fldenv
mov
addr16
adc
les
jnp
lods
lods
or
sub
adcb
daa
hlt
jne
jecxz
in
adc
xor
aas
scas
xlat
and
xlat
jmp
test
stc
or
pop
pop
es
pop
nop
inc
lahf
jnp
xchg
dec
call
jb
sbb
or
ret
jle
adc
lar
xchg
push
xchg
scas
xchg
bound
repz
xchg
aam
jp
mov
push
call
cmpsb
push
lret
cmp
adcl
mov
jbe
push
cli
pop
mov
jecxz
jno
lahf
lock
mov
pop
add
push
scas
std
push
insl
sahf
cltd
mov
push
jnp
lahf
push
je
addr16
fistpll
mov
xor
iret
ljmp
cmp
sti
cli
imul
mov
mov
insb
sub
subl
push
dec
add
in
inc
ljmp
xor
rcrl
or
fsubs
dec
push
cld
pop
sub
int3
std
push
cmp
jae
enter
push
add
pusha
lods
push
adc
cltd
add
outsb
lods
mov
mov
mov
sahf
ret
sbb
add
sbb
dec
xor
mov
fcompl
rcll
fs
fcoms
outsb
mov
jl
jl
or
pusha
fs
ljmp
int
stos
sub
push
xchg
lcall
js
or
andl
xchg
fistpll
fcmovnbe
popf
mov
loopne
sub
mov
mov
rorl
adc
mov
sbb
add
sbb
push
adcb
kmovw
jb
cwtl
fidivrs
jmp
sub
loope
arpl
ret
stc
pop
add
mov
mov
add
lret
sub
push
or
add
jecxz
push
pop
xlat
test
ja
mov
out
jbe
andl
insl
data16
xor
in
sub
ror
stc
mov
hlt
and
int
fisttpll
adc
xorl
test
xor
cmc
xor
clc
jmp
pusha
movl
movl
pushl
lea
jmp
push
lea
jge
push
movl
call
pusha
movl
pushl
pushf
push
pushl
lea
jmp
push
pushf
movl
movw
movl
pushf
lea
jmp
jmp
pushf
popl
cmp
test
xor
push
clc
xor
pushf
movl
xorl
pushf
mov
xor
test
test
xor
jmp
push
pushf
popl
pushf
cmc
xorl
stc
xor
stc
xor
stc
pushf
xor
bt
pushl
xor
jmp
stos
xchg
in
add
dec
arpl
test
mov
add
xchg
push
pop
sbb
insb
push
mov
ljmp
cltd
subl
rolb
fmull
hlt
ljmp
add
es
mov
outsb
cmp
xchg
arpl
xor
icebp
jle
pop
out
repnz
jecxz
mov
push
ljmp
sbb
mov
gs
in
mov
add
cmp
push
cmpsl
stc
sub
fs
dec
addr16
add
xchg
pop
mov
adc
out
das
adc
adc
clc
stc
xchg
pop
inc
subl
into
clc
ljmp
mov
dec
jnp
jg
add
mov
into
jecxz
rcrl
shr
fcompl
popf
add
dec
jg
mov
aad
sbb
add
icebp
push
jp
call
or
clc
out
sbb
lods
lods
das
cwtl
xor
inc
popa
xchg
cmp
mov
push
mov
cld
xchg
cmp
lcall
push
daa
mov
sarb
mov
mov
and
push
pop
mov
test
inc
push
add
pop
int
mov
popf
cmc
movsb
and
mov
or
mov
aas
sti
xor
rcl
icebp
sbb
and
xlat
or
shl
push
push
xchg
dec
nop
stos
pop
fmulp
pusha
into
nop
xchg
fwait
pop
xor
sti
push
lods
xchg
mov
pop
out
mov
dec
daa
jg
inc
sbb
dec
mov
int
fldenv
es
les
sub
pop
clc
push
movsb
mov
push
stc
imul
sub
fdivl
or
or
out
mov
sub
jns
xchg
mov
leave
in
mov
add
xor
xlat
xor
loopne
lock
fnstsw
ss
lcall
into
test
add
daa
mov
adc
scas
nop
push
scas
lods
mov
or
mov
dec
dec
clc
mov
leave
sub
sbb
push
jae
stos
out
xor
mov
rorl
stos
dec
gs
aaa
ja
xor
and
insb
jno
stos
dec
stos
jmp
iret
adc
std
mov
int
mov
cld
jmp
sbb
arpl
push
ret
mov
cli
cld
cld
push
ds
pushl
lahf
idivl
xchg
aaa
push
mov
test
pop
add
sbb
push
addb
pop
test
xchg
pop
jb
test
cmp
stos
out
in
add
mov
faddl
push
mov
pushf
outsb
or
movb
js
stos
pop
lods
push
adc
fucomi
xchg
cmp
mov
inc
xorb
fcomp
cmpsb
mov
inc
into
push
enter
frstor
xor
ja
lods
and
ja
nop
mov
mov
loop
push
push
sbbb
shr
jmp
leave
cmp
jbe
mov
iret
icebp
xchg
pop
xchg
in
cmp
push
add
and
push
rorl
fsubrl
sub
xchg
mov
in
std
xchg
jp
sbb
mov
ret
inc
dec
mov
loopne
imulb
hlt
mov
es
push
fnstcw
std
inc
jne
mov
or
dec
push
fwait
jp
push
daa
int
add
add
cmp
loope
pop
mov
sbbb
xor
dec
push
pushf
cwtl
pop
mov
mov
or
repz
mov
mov
mov
out
mov
push
cmc
sti
push
int3
xor
cs
and
mov
imul
test
rcrb
imul
xor
push
xor
jg
jmp
adc
jl
add
loop
sub
adc
push
xchg
sub
movsl
lds
pop
cmp
repnz
mov
jo
adc
mov
or
into
xor
out
xchg
mov
lds
popa
push
data16
mov
sbbl
je
imul
cs
sub
mov
ret
fcmovu
cmpsl
pusha
sbb
add
push
or
inc
popa
and
jle
lods
adc
sar
or
mov
inc
addr16
add
xchg
inc
lcall
lret
push
dec
dec
rcrl
pushw
notb
inc
and
mov
and
insl
inc
inc
int3
mov
adc
pop
sub
jmp
movl
pushl
pusha
pushf
push
lea
jmp
lea
jp
push
movl
call
aas
jg
or
dec
sbb
mov
cmpsb
mov
out
push
daa
pop
mov
sub
xor
xchg
nop
mov
cmp
fs
mov
stos
mov
pop
jo
lods
in
pop
and
push
adc
xor
mov
cmp
xor
xor
loop
and
das
adc
dec
repz
roll
testl
jl
push
jno
jle
leave
ljmp
sahf
inc
pop
pusha
adc
mov
push
ret
fucomip
adc
mov
out
xchg
insb
out
cmp
xor
mulb
pop
js
imul
out
mov
mov
mov
pusha
sub
push
out
push
sbb
sti
jl
sub
cli
or
jge
popf
mov
jmp
mov
add
pop
imul
add
fildll
imulb
pop
dec
mov
jg
pusha
movl
push
push
lea
jmp
jp
pushf
movl
jg
push
pusha
pushf
lea
jmp
xor
stc
xor
cmp
call
movl
push
movl
pushf
mov
pushf
pushf
lea
jmp
movl
mov
pushf
movl
pushf
lea
jmp
imul
xor
jl
lods
pop
jmp
std
push
imul
jecxz
arpl
cli
xchg
popa
into
mov
in
pop
insb
leave
xchg
daa
lods
aas
fisubrs
test
pop
inc
cmp
add
and
xchg
data16
push
push
movl
jmp
movl
pusha
pushf
push
movl
pushf
mov
pushf
lea
jmp
cmc
xor
push
xor
mov
xorl
clc
cmc
xor
cmp
pusha
xor
std
pushl
popf
pushf
pushl
ret
movb
movl
jmp
cmp
xor
push
call
call
pushf
push
jmp
movl
pushf
mov
mov
pusha
lea
jmp
push
movl
jmp
pusha
pushf
popl
jmp
pusha
pushf
popl
test
jmp
pushf
movl
pushf
call
pusha
pushf
popl
pusha
pushl
xor
clc
mov
xor
mov
pushl
xor
bt
push
xorl
push
pushf
xor
bt
stc
xor
jmp
sub
mov
fwait
sbb
cmp
dec
mov
loop
pusha
cmpsb
xchg
and
push
enter
sarl
pop
push
cmpsl
xor
mov
push
and
jmp
in
mov
shrb
cmp
ret
and
dec
xchg
cmpsb
out
repnz
push
and
xor
imul
out
dec
out
les
mov
mov
fdivrs
or
sarb
in
xor
or
repz
push
test
ror
lahf
lock
inc
mov
cwtl
call
mov
push
or
iret
daa
pop
imul
add
xchg
xor
fwait
arpl
mov
rclb
es
jecxz
imul
xchg
scas
xchg
pop
out
cmpb
fs
fcompl
push
dec
daa
xchg
pushf
hlt
int
mov
mov
ret
xorl
test
xor
test
cmp
xor
call
push
jmp
jmp
jmp
adc
mov
adc
sti
imul
pop
cmp
and
in
add
dec
inc
mov
lods
xchg
ret
mov
aad
sbb
lock
add
adc
mov
out
inc
cmp
ja
pop
fs
ret
jb
inc
or
or
js
stos
js
cmpsl
xchg
int3
jecxz
inc
mov
dec
ret
sti
ljmp
fistps
cli
jmp
sub
cld
incl
ja
add
movsl
bt
xor
cmp
xor
stc
clc
xorl
mov
xor
pushf
pushl
popf
mov
pushl
ret
push
lock
std
std
test
xchg
insb
sub
daa
ret
jg
push
push
lret
sub
mov
pop
push
ss
sti
fistps
adc
inc
jne
cs
push
iret
add
in
fisubs
adc
test
or
xchg
xchg
subl
inc
push
xor
in
xchg
push
test
cmpsl
xchg
mov
pop
fadds
push
adc
add
lcall
bound
dec
ja
jne
mov
push
inc
xchg
xor
sbb
in
adc
nop
lds
mov
popa
ret
insb
mov
dec
testb
and
pop
aas
mov
dec
jns
sub
lahf
popa
sbb
out
dec
xchg
or
or
rcll
aam
jb
fmul
sbb
push
pop
add
and
leave
pop
or
fldl
pop
pop
iret
sub
or
mov
sbb
xchg
mov
mov
or
pop
aas
cmc
fiadds
sbb
fsubrs
aad
lret
pop
cmp
imul
cmp
mov
ja
or
sub
rcrl
sub
mov
jmp
lods
adc
jp
xor
ljmp
repz
pop
and
mov
sbb
mov
popf
push
push
fnstenv
out
ds
and
xor
bt
pushf
xor
cmc
xor
call
call
xor
mov
pushf
xor
clc
clc
xor
bt
xorl
stc
xor
pushf
movb
xor
clc
xor
push
std
pushl
popf
mov
mov
pushl
ret
pushf
pushf
movl
pusha
pusha
jmp
xor
clc
xor
cmp
xor
cmp
xor
test
xor
cmc
xor
pusha
bt
xorl
cmc
cmp
pushl
popf
push
movb
pushl
ret
movl
pusha
pushf
lea
jmp
push
movl
jmp
pusha
movl
mov
mov
pushf
movl
movw
pusha
pushf
lea
jmp
pushf
push
pushf
popl
cmp
stc
xor
clc
call
pushf
jmp
lret
pop
repnz
xchg
xchg
divl
pop
xor
mov
int3
and
les
jge
jnp
ret
cmp
into
pop
mov
std
pop
jo
mul
data16
xchg
pop
mov
test
es
xor
repnz
add
mov
out
mov
push
stc
psubsb
jmp
sbb
cmp
call
dec
sub
pop
inc
fisttpll
fnsave
mov
jg
inc
sti
xor
dec
into
popa
aaa
jnp
stc
xchg
fldt
mov
pop
mov
test
or
notl
inc
ja
pushl
pushl
xorl
test
xor
stc
cmc
xor
pusha
bt
xor
cmp
clc
xor
pushf
pushf
xor
bt
xor
std
pushl
popf
pushf
push
pushl
ret
call
jmp
jmp
mov
add
adc
mov
scas
movsb
adc
mov
aad
mov
xchg
cltd
leave
mov
mov
jle
lret
pushf
xchg
mov
ja
inc
fsubs
cs
add
clc
adc
in
outsl
xor
fnsave
mov
dec
lcall
xor
sub
push
loopne
mov
sti
push
fistps
stos
andl
mov
or
scas
ret
xchg
pushf
xchg
push
aas
push
push
jae
and
dec
adcb
decl
in
gs
fcmovne
ret
fucomp
outsl
mov
pop
xchg
jae
jbe
dec
test
mov
mov
pop
xchg
mov
mov
mov
loopne
leave
mov
mov
icebp
or
loopne
outsb
mov
push
ret
inc
xchg
xor
movsl
xchg
xchg
jecxz
and
sbb
pop
ja
push
push
call
xorl
stc
xor
bt
pusha
xor
test
movb
xor
cld
pushl
popf
mov
push
pushl
ret
call
pushf
call
xor
test
pusha
xor
call
shrb
mov
inc
movl
int3
mov
fmull
jo
mov
adc
lcall
lock
push
inc
mov
mov
add
mull
test
push
sbbl
lret
xchg
fs
rcl
mov
lock
loope
lock
mov
jle
add
mov
push
arpl
std
adc
es
jp
and
jecxz
pop
sbb
inc
xchg
icebp
test
push
pop
xchg
mov
lock
mov
inc
pop
sbb
sbb
jbe
popf
or
sbb
sub
push
in
test
fisttpll
cmp
adc
cmpsl
inc
cld
insl
lods
jle
sub
ret
xchg
cmp
lock
roll
add
inc
pop
clc
lock
push
aaa
imul
adcb
loop
lds
cmpsb
xchg
dec
inc
push
movsb
scas
jno
push
andb
loopne
pop
mov
fisttps
or
cmp
loopne
iret
repz
add
sbb
or
jno
imul
push
ret
hlt
movsb
mov
lock
mov
adc
add
cli
lcall
movl
movb
movl
pushf
mov
pushf
lea
jmp
push
pusha
movl
push
lea
jo
pushf
pushf
movl
pusha
movb
lea
jmp
movb
movl
push
jmp
pushl
movl
movw
mov
movl
pusha
pushf
push
pushf
lea
jmp
scas
shlb
call
lods
add
and
jbe
mov
repnz
mov
fdivs
xor
and
popa
or
adc
lret
mov
out
js
mov
lods
xor
cmp
jne
cmpb
sub
add
adc
push
pusha
pushf
lea
jmp
jnp
pushf
movl
pushf
pushf
pushf
call
fstl
cs
scas
jle
stos
xlat
sub
push
cmpsl
mov
inc
mov
pushf
lea
xor
xor
jle
lret
push
cmp
push
add
cmp
out
and
in
mov
fldl
ljmp
insb
out
xchg
jl
jl
sub
les
out
jnp
jge
lds
inc
loopne
shl
scas
nop
xor
sarb
loope
sub
mov
push
imul
jg
lahf
mov
sub
cmc
gs
test
pop
dec
sub
mov
cwtl
lret
sti
and
xor
fdiv
out
ret
js
mov
xlat
aas
cld
popa
inc
shl
imul
insl
retw
xor
call
daa
pop
mov
add
jo
rolb
mov
jbe
loopne
mov
in
frstor
jae
in
and
dec
movsb
gs
pop
mov
mov
and
sbb
stos
jae
xor
xchg
sbb
jo
push
fcoms
lcall
pusha
movl
pushf
pushf
pushf
mov
lea
jmp
cpuid
call
movl
jmp
movl
push
lea
jmp
jmp
jmp
pusha
pusha
call
jmp
fisubs
lahf
out
add
insl
in
lds
sbb
pop
jp
les
mov
push
imul
imul
int
xchg
mov
mov
pop
adc
icebp
dec
xor
sahf
aad
xor
inc
stos
movsb
xchg
jno
mov
dec
hlt
xrelease
lcall
mov
sarb
rolb
lock
sbb
or
mov
dec
xor
in
in
push
scas
xchg
ja
ljmp
repnz
xchg
jge
cmc
sti
int
js
cltd
xchg
divps
mov
sub
ret
and
enter
ss
imul
sbb
pop
pop
inc
inc
or
inc
emms
aas
pop
adc
push
push
cwtl
ja
out
fidivrs
inc
jl
mov
rcl
mov
addl
negb
stc
pushl
popf
mov
pushl
ret
std
pushl
popf
movb
mov
pushl
ret
movb
movl
movl
pushl
call
in
adc
sbb
dec
mov
xchg
pop
and
dec
lods
xor
notb
add
xor
sti
pop
scas
sub
out
aaa
test
ss
or
push
jnp
dec
dec
pop
enter
jmp
inc
and
sbb
mov
xchg
movsb
insl
enter
xor
push
loopne
push
popw
and
out
dec
jl
pcmpeqb
push
cmpsl
xor
js
mov
sub
scas
pop
imul
sbb
mov
jp
pop
ja
inc
mov
enter
push
clc
scas
mov
add
pushf
xorl
pushf
pushf
xor
bt
movw
xor
test
mov
xor
stc
jmp
pusha
call
pushl
popf
mov
pushl
ret
xor
stc
xorl
mov
xor
call
jmp
movl
push
mov
pushf
lea
jmp
push
pushf
popl
jmp
xor
clc
xor
pushf
xorl
cmc
pusha
xor
cmp
xor
stc
call
jmp
call
pushf
push
pushf
push
movl
call
push
pusha
lea
jmp
cmp
xor
bt
cmp
xor
movw
pusha
xor
stc
test
xor
clc
clc
xor
stc
pushl
popf
mov
movl
pushl
ret
movl
push
movl
push
push
pushf
lea
jmp
pushf
movb
pushf
popl
cmp
xor
call
mov
pushf
movb
movl
pushf
lea
jmp
call
pushl
jmp
pusha
pushf
popl
cmp
movw
xorl
pushl
pusha
xor
stc
cmc
xor
cmp
pushf
xor
stc
cmp
xor
cmp
xor
cmc
stc
xor
pushf
clc
xor
test
pushl
popf
push
pushl
ret
push
call
cmc
xor
test
jmp
call
movl
pushf
push
movw
movl
mov
lea
jmp
pushf
pushf
jmp
movl
call
pushf
popl
bt
push
xor
jmp
push
pushf
pusha
call
movl
jmp
xor
jmp
sub
jge
xor
cmpsl
shll
addl
push
mov
bound
add
dec
inc
push
xchg
data16
testb
fsts
sbb
mov
stos
sub
std
xrelease
arpl
gs
fs
loope
rcrl
ret
or
testb
and
sbb
cmc
jae
mov
rcrb
inc
push
dec
addr16
push
mov
mov
repz
lods
or
or
and
sub
es
lea
cmpsl
sbbb
jg
jge
mov
in
cwtl
xchg
movsl
rcrb
jmp
das
sbb
jmp
pop
or
hlt
notb
cli
mov
fsts
sbb
lds
out
lcall
subl
test
mov
rorl
orl
push
fstl
jb
sahf
inc
mov
pusha
pop
adc
sbb
test
sbb
adc
inc
fmuls
test
decl
test
cld
lcall
je
aas
and
lahf
mov
mov
xor
sahf
je,pt
or
test
pop
fwait
es
js
mov
iret
xchg
jge
in
xchg
mov
xchg
dec
xchg
test
cmp
xchg
jmp
scas
int
shl
mov
dec
movsl
lods
cmpsl
mov
es
mov
pop
xor
push
cmp
enter
lret
int
movaps
dec
andb
mov
test
and
icebp
jl
scas
enter
js
ret
fiaddl
pusha
movl
call
jmp
jmp
mov
push
mov
movl
mov
push
pushl
lea
jmp
pushl
xorl
jmp
cmpl
mov
cmp
int
mov
mov
sub
pop
add
inc
mov
jno
pop
adc
cmp
aaa
xor
aad
xchg
or
push
aam
jp
test
cmp
add
loopne
or
neg
js
lods
and
add
jl
fs
and
dec
stos
int3
pop
lret
push
mov
sub
lcall
push
fidivrl
out
ret
mov
fstpl
mov
movsb
int
push
pop
and
popf
cld
clc
mov
out
push
mov
pop
add
out
push
adc
test
pop
push
push
aas
push
adc
fdivl
std
loop
and
sub
clc
fcoms
imul
fmull
mov
xlat
mov
push
jno
stc
xchg
push
stos
out
neg
js
jl
in
cmp
ret
xchg
bound
cmp
xor
xchg
pop
stos
cmp
pop
push
cld
push
es
cmp
mov
loop
dec
sbb
and
mov
test
jmp
mov
out
push
test
call
mov
dec
stc
addb
dec
mov
js
push
push
adc
jb
pop
sub
mov
mov
mov
and
repz
xchg
cmp
pop
test
xchg
out
push
adc
xchg
roll
sbb
and
pop
mov
cmp
or
popa
dec
lahf
and
add
mov
pop
idivl
add
push
jmp
jno
and
jo
xlat
ljmp
mov
dec
mov
or
pop
ret
dec
pop
xor
sbb
xor
jge
pop
ja
xchg
xchg
or
mov
insl
adc
enter
dec
xlat
aaa
and
pop
sub
jecxz
sub
push
pushf
pop
pop
stos
adc
movl
push
pop
fwait
mulb
cmpsb
hlt
inc
repz
pop
push
pop
imul
sbb
push
xor
aad
xchg
mov
add
push
xchg
ja
test
xor
clc
xor
clc
xor
pusha
xor
cmp
xor
bt
call
mov
mov
lret
cli
cwtl
cltd
shll
ror
or
and
or
stos
sub
cmp
stc
cmp
sbb
xadd
push
rcll
pop
sub
jl
cmp
or
xchg
adc
fcomps
inc
cmp
and
iret
lods
out
call
inc
add
cmpsl
clc
lods
dec
mov
xor
mov
pop
enter
inc
loopne
pusha
aas
mov
lret
and
sbb
loop
repz
outsb
fwait
mov
push
stos
mov
scas
loop
aaa
popa
sub
out
fwait
mov
lods
test
insl
xor
sarl
adc
test
out
jecxz
adc
dec
inc
and
das
ds
mov
sub
std
and
jb
dec
sub
ret
pushf
jb
lahf
sbb
jmp
xor
xchg
es
add
jb
mov
adc
sbb
pushl
adc
add
jb
or
pushf
pop
mov
call
pushf
or
add
jb
mov
test
xlat
sbb
stc
push
or
sbb
mov
shll
inc
sbb
xchg
aas
dec
dec
das
in
cmp
addr16
mov
or
add
jb
test
cld
xchg
and
lods
gs
sbb
insl
nop
insb
arpl
loopne
dec
mov
lcall
mov
fnsave
sbb
sub
sbb
lahf
divps
mov
jns
and
xchg
cmpsl
mov
out
rcr
scas
int3
dec
call
call
pushf
movb
pusha
movl
movl
push
mov
pushf
pushf
movl
movb
pushf
pushl
lea
jmp
inc
push
pusha
and
dec
lock
push
sub
mov
dec
jae
lea
push
imul
xlat
cli
mov
pop
ljmp
dec
inc
mov
and
pop
shll
ljmp
inc
repz
dec
pop
cmpsl
sti
out
dec
pop
inc
dec
pop
inc
sbb
mov
outsb
fidivrl
out
pusha
xchg
insb
insl
or
leave
cmp
pop
fdivs
pop
mov
stos
mov
ja
in
dec
es
sub
nop
sub
jns
sbb
sbb
fldl
imul
mov
pop
dec
fld
fcomip
sti
jnp
inc
mov
and
cwtl
or
or
push
add
int
mov
or
xchg
mov
jns
adc
cmp
jns
push
xchg
pop
loop
push
pop
subb
lret
fmull
push
mov
or
addl
jmp
dec
mov
sub
mov
test
mov
int3
pop
enter
popa
fistps
and
mov
pop
std
or
lods
or
cmp
cmp
inc
xchg
jno
push
and
mov
cmpsl
mov
mov
roll
jne
pop
sbb
xchg
jb
movsl
adc
cmp
lea
insb
loope
movb
movl
mov
movl
pushf
pushf
push
lea
jmp
pushf
movl
pusha
movl
pusha
push
lea
jmp
movl
pushf
pushf
pushf
movw
lea
jmp
xorl
mov
jmp
pop
pushf
ljmp
in
xor
lret
int
mov
jmp
lea
xchg
mov
pop
xchg
push
arpl
call
cltd
ret
addr16
push
popf
and
adc
lret
lods
or
cli
loope
push
add
jb
hlt
sti
lea
jg
mov
clc
cmc
ficoms
ror
lds
inc
cld
pop
je
ss
pushl
popf
pushf
pushl
ret
movl
pusha
pusha
mov
lea
jmp
xor
call
jmp
xor
cmp
pushf
xorl
test
xor
clc
clc
xor
cmp
xor
cld
pushl
popf
mov
pushl
pushl
ret
xlat
cmp
push
orb
pop
scas
adc
jp
push
nop
cmp
pusha
fucomi
mov
mov
in
and
notb
inc
xchg
pop
pushf
in
lods
dec
mulb
cmp
pop
jecxz,pt
push
xchg
enter
sbb
push
cmpsb
jno
mov
xor
xor
filds
int
jb
mov
sbb
cld
xchg
fnstsw
cmp
sub
mov
imul
and
ror
ret
leave
adc
movsl
add
jb
pop
sub
adc
pop
data16
xor
inc
pop
sub
cld
and
push
in
inc
dec
ret
call
into
sbb
movsl
test
dec
aad
inc
mov
test
add
cmp
or
fs
cmp
adc
jecxz
mov
in
jg
pop
outsb
and
inc
iret
jno
inc
inc
sub
cmp
jg
jno
nop
push
arpl
add
iret
fistps
jmp
sti
lcall
stos
out
loopne
mov
pusha
lea
jmp
pushl
popf
push
push
pushl
ret
pusha
movl
pushf
jmp
pusha
movl
mov
push
lea
jmp
pushf
movl
pusha
pushf
push
push
lea
jmp
testl
pusha
out
mov
xorl
pop
jo
jl
inc
push
leave
mov
stos
pop
pop
sar
lods
das
dec
and
orb
fcomps
push
sub
inc
dec
sahf
das
and
cwtl
jno
sub
repnz
add
in
std
cltd
rcll
add
add
push
xchg
outsb
js
movsb
outsb
pop
add
cmpsb
push
sti
push
jnp
cs
push
repnz
push
incl
xor
cmp
stc
lds
sub
xor
add
hlt
mov
xchg
sub
out
loop
int3
pop
xchg
jnp
roll
es
test
outsb
dec
data16
enter
sbb
ret
push
fildl
mov
mov
sbb
mov
insl
divl
xchg
inc
adc
lret
pop
clc
ss
repz
scas
cmp
sbb
pop
insl
lahf
push
repz
shll
dec
and
xchg
mov
xlat
and
push
push
cmc
jno
inc
push
fdivp
jl
and
push
call
test
xor
stc
xor
jmp
js
fiadds
arpl
dec
in
and
clc
test
sub
mov
push
inc
sbbb
ds
jge
popa
sbb
sub
outsb
js
into
push
inc
cmp
xchg
xchg
mov
cmp
jge
pop
cld
jno
sbb
push
aad
sbb
add
pop
hlt
dec
mov
or
mov
daa
insl
add
or
jp
push
sbb
sbb
pop
or
fnstenv
mov
xor
pop
addr16
outsl
xchg
push
adc
mov
insl
clc
ljmp
push
sub
aas
push
cmp
sub
xchg
jno
into
call
mov
fisttps
jl
dec
movsb
push
popf
mov
mov
aad
imul
mov
jb
adc
stc
lea
sarl
jmp
pop
sbb
lds
lret
cmp
cmp
rolb
jp
mov
cmp
fwait
inc
sbb
push
pop
int
in
adc
inc
xor
add
jp
and
sbb
sahf
mov
std
in
in
add
jp
dec
xchg
jecxz
cmpsl
and
ss
cli
out
sub
xor
mov
add
sarl
enter
pop
imul
and
loope
lcall
add
jnp
pop
cmp
sub
dec
cli
or
scas
es
cmc
lods
cmpsb
xchg
sbb
adc
mov
movsl
sub
push
and
inc
arpl
pop
push
mov
add
adc
in
ss
stos
test
jmp
mov
xchg
xchg
pop
es
aaa
call
mov
mov
loope
mov
sub
in
add
push
and
jmp
jns
ljmp
add
das
clc
cli
inc
push
in
mov
jg
jae
mov
jno
mov
inc
ss
les
adc
psubw
lret
addr16
ljmp
sub
sub
bound
dec
cmp
cs
inc
or
fcoms
mov
jb
mov
mov
lret
and
add
in
popa
cltd
mov
cwtl
hlt
test
js
adc
scas
jecxz
push
adc
imul
sbb
addl
je
add
add
add
jmp
je
clc
xor
movb
push
xor
test
xor
push
stc
pushl
popf
pusha
pushf
pushl
ret
lea
jb
push
movl
push
pushf
lea
jmp
clc
xor
bt
cmc
xorl
test
xor
pusha
movb
xor
test
xor
push
xor
cmc
pushl
popf
mov
push
pushl
ret
xlat
dec
sub
dec
mov
ja
std
or
pop
push
out
pop
add
out
xchg
sbb
sub
adc
movl
add
jp
aad
test
dec
or
mov
lds
add
sti
stos
mov
xchg
fs
mov
fdivs
pop
into
popf
cld
arpl
cs
push
subl
and
test
movsb
sub
cld
sbb
ja
ds
int3
cmp
cli
xlat
icebp
add
sub
les
je
xor
xchg
or
mov
sub
push
add
cmp
scas
adcl
jge
mov
sarb
xchg
cmp
inc
push
test
add
jge
sub
pushf
popl
test
xor
cmc
xor
jmp
pushl
push
sub
dec
rorb
or
pusha
scas
ss
jb
test
int
push
mov
hlt
gs
mov
add
push
fldt
push
adc
dec
lock
stc
outsb
es
sahf
pusha
jno
repz
sub
cmp
lahf
or
aam
cmp
inc
cmp
pusha
mov
xchg
notb
cmp
xchg
add
dec
popf
inc
jecxz
jmp
jp
setne
mov
clc
mov
or
inc
js
in
lock
push
lea
jmp
test
xor
test
pushl
xor
movb
bt
pushl
popf
pushl
pushl
ret
pushl
popf
pushf
push
pushl
ret
push
mov
mov
push
aad
or
mov
push
mov
jne
iret
mov
js
dec
icebp
inc
cmp
dec
clc
mov
outsl
lret
cmc
xchg
lret
fsubrl
xchg
push
xor
pop
mov
dec
push
insl
jnp
and
imul
add
dec
and
sub
out
jecxz
daa
test
cmpsl
faddl
in
testb
fstl
jmp
out
sub
sub
push
aas
pushf
movb
movl
pusha
call
xor
clc
pusha
xor
test
stc
xor
pushf
stc
xor
pusha
movb
xorl
pushf
xor
pushf
xor
bt
mov
xor
clc
pushl
popf
mov
movb
pushl
ret
movb
movl
pushf
call
pusha
pusha
movl
push
lea
js
pushf
pushf
movl
mov
pusha
mov
pusha
lea
jmp
movl
jmp
movl
movb
movb
pusha
lea
jmp
jmp
xor
pusha
movl
xor
cmc
stc
xor
movb
stc
xor
jmp
jmp
fs
mov
js
int
sbb
jl
cwtl
pop
mov
mov
ja,pn
inc
xchg
pop
push
jl
js
dec
dec
add
adc
daa
dec
lds
jl
movsl
sub
ss
or
movsb
mov
rcll
lods
out
mov
out
rorl
aam
dec
aad
les
cmp
add
jmp
add
shlb
jp
call
add
pop
jns
bound
xchg
push
add
out
mov
jmp
data16
mov
out
mov
into
mov
cltd
push
mov
cmpsb
inc
mov
inc
nop
jle
lahf
ja
sbb
pusha
inc
in
mov
mov
dec
in
push
sub
cltd
aaa
mov
dec
hlt
adc
and
xchg
mov
inc
xchg
xchg
outsl
mov
inc
loop
push
in
mov
pusha
or
dec
pop
xchg
icebp
jae
sub
inc
popf
sub
and
xor
xlat
ret
mov
xor
or
push
dec
pop
ror
add
mov
or
lret
repnz
sbb
fwait
dec
jne
and
movsb
xchg
push
lret
ja,pn
loop
add
dec
roll
repz
aaa
mov
test
fcmove
cld
loop
mov
jp
push
testb
xor
repnz
jg
dec
sbb
test
jecxz
sbb
ss
out
xor
aam
scas
stc
adc
inc
cwtl
pop
stos
xor
mov
jns
xorl
xchg
xchg
and
pop
in
mov
dec
rsqrtps
popa
xor
movb
cmc
xor
cmp
jmp
call
jbe
push
ds
leave
lods
sbb
add
sbb
int3
fcoml
aaa
mov
dec
cmpsl
pop
mov
ds
pop
pusha
sbb
dec
push
jmp
fisttps
into
shr
fcompl
xchg
loopne
cmp
sbb
sub
xchg
pop
lret
mov
jne
cmc
orl
dec
ja
mov
adc
sub
jnp
mov
xchg
pop
lret
icebp
cmp
dec
push
sub
mov
cmp
lods
or
jbe
mov
add
sbb
mov
outsl
pop
addr16
dec
aaa
sbb
inc
xchg
mov
push
jbe
mov
push
js
stc
cmp
aaa
xor
xor
jl
sbb
sbbb
ds
mov
arpl
inc
ret
loope
and
lea
fisttpll
fs
in
jecxz
out
fdiv
lahf
adc
jbe
clc
xor
cmc
movb
xor
test
cmp
xor
cmp
clc
xor
movb
std
pushl
popf
push
pushl
ret
pusha
movl
jmp
pushf
movl
call
pushl
movl
pusha
lea
jmp
xor
call
mov
lea
jno
push
push
mov
movb
movl
pusha
lea
jmp
sar
nop
rorb
out
mov
cmpsl
inc
inc
sarb
pop
test
push
insb
shl
push
lahf
xchg
adc
inc
xchg
cmp
cmpsl
xchg
push
lea
lahf
pop
xchg
adc
add
jmp
ret
adc
jecxz
jno
pop
xchg
cmp
mov
negl
imul
push
sbb
pop
cmp
js
ss
sti
out
std
js
add
aas
xchg
jnp
ja
daa
or
inc
dec
or
ja
inc
stc
ds
mov
cmp
xor
hlt
push
cmp
in
scas
stc
pop
test
push
mov
and
mov
push
jmp
sbb
outsb
cltd
incb
and
push
xor
sub
fsubl
inc
xchg
pop
mov
insl
loop
addr16
arpl
xchg
jne
cmp
jnp,pt
jg
push
dec
add
mov
mov
out
rcll
pusha
mov
aas
pop
lea
ja
in
aaa
jnp,pt
mov
adc
outsl
xchg
push
add
push
out
inc
scas
insb
adc
xchg
inc
push
jmp
out
arpl
sarl
mov
ret
or
sub
movsb
xor
or
push
push
mov
xchg
jle
mov
sbb
push
addr16
in
push
aam
inc
push
lcall
cmp
or
jne
push
ss
mov
push
inc
mov
add
loope
std
adc
test
aas
mov
bswap
fwait
or
adc
arpl
dec
pop
ja
shll
call
fwait
mov
lret
adc
adc
push
push
pop
movsl
push
inc
nop
lods
fisttpl
mov
add
ds
rorb
and
fbld
sti
call
call
add
add
and
add
add
pop
sbb
add
add
add
add
add
sbb
add
dec
add
rorb
add
add
add
add
add
cltd
dec
sbb
add
pop
sbb
je
popa
jae
dec
popa
insl
gs
inc
pop
inc
pop
push
inc
inc
inc
pop
add
push
or
cmpl
push
and
aad
inc
jne
add
adc
mov
cmpsl
adc
idivl
sbb
mov
xor
popf
pop
int
ds
mov
mov
int3
pop
mov
sti
xlat
out
mov
add
adc
lock
imul
mov
mov
jmp
lods
das
xchg
int3
decb
xor
cmpsb
rcl
std
dec
orb
push
dec
xchg
dec
movsb
addb
shr
adc
mov
sbb
push
stos
test
out
andl
mov
xacquire
inc
cwtl
ret
inc
xchg
add
negl
sbb
fs
xor
inc
add
mov
cmpsb
dec
aad
pop
scas
faddl
mov
sub
mov
dec
stos
outsb
loop
mov
sti
popa
xchg
jmp
push
cmc
sub
cld
dec
xchg
lcall
pop
mov
les
jge
or
xor
into
fwait
test
push
aaa
xchg
clc
leave
cmpsb
sbb
out
and
push
mov
int3
fchs
insl
cs
sbb
popa
jno,pn
pop
scas
negl
and
lods
xchg
fidivrs
pop
lock
fisttps
repnz
das
in
dec
push
cmp
shr
repnz
mov
mov
imul
in
in
adc
adc
jns
jno
dec
test
xchg
movb
cli
or
jno
je
loop
pop
sbb
test
adc
pop
dec
and
jae,pn
sbb
in
xchg
js
loopne
pop
mov
sub
pop
sti
daa
pop
mov
jo
inc
mov
inc
inc
sub
daa
lods
rolb
push
insl
adc
je
cli
lds
push
aam
mov
enter
sub
push
xor
pop
enter
imul
adc
call
xor
pop
incl
or
pop
mov
cltd
insb
adc
push
test
mov
cmc
jae
cmp
sub
cmp
fsub
jl
push
and
xchg
add
adc
loop
call
or
or
push
pop
hlt
out
xchg
jle,pt
call
lea
sub
fisubrs
pusha
das
sub
sti
mov
inc
mov
aad
xor
adc
hlt
pop
pop
dec
inc
push
push
test
xchg
dec
int3
pop
cmpsb
xchg
imul
icebp
fnstcw
xchg
icebp
pop
out
je
out
pop
movsl
sbb
aaa
pop
fisttps
repz
sbb
adc
jne
fisttpl
push
cmc
into
and
fs
pushf
arpl
ret
pop
xchg
les
in
orl
sahf
lcall
sbb
sub
int
cwtl
lds
push
pop
idivb
stos
and
ja
xlat
repnz
xchg
cmp
cmp
xlat
mov
insb
jp
mov
pop
test
push
je
std
mov
xchg
fcomp
imul
sahf
sbb
sbb
add
flds
push
ret
into
inc
movsb
mov
mov
paddusw
mov
out
cmpsl
ficompl
or
in
cmp
push
jp
dec
je
mov
out
inc
cmc
pop
lret
outsl
dec
and
adc
enter
add
popa
andl
inc
loopne
jne
iret
fnstcw
daa
sub
cmp
orb
mov
adc
pusha
pop
aaa
adc
cmp
ret
adc
fcoml
jle
jno
lds
pop
push
cmc
adc
or
sub
scas
pop
lock
mov
outsl
pusha
dec
push
sar
dec
push
xlat
xor
xchg
jge
and
bound
loop
sahf
cli
cmpsb
adc
add
cmc
sbb
dec
xchg
stos
or
ret
jb
mov
shlb
ljmp
arpl
cmpsb
cmp
icebp
andl
repz
ror
fidivl
int
push
sub
in
fs
push
mov
and
icebp
mov
aam
mov
push
pushf
out
mov
shlb
pop
pushl
pop
dec
imul
les
lods
mov
push
xor
or
xor
dec
cld
xor
cli
lret
shr
push
lret
xor
inc
sti
mov
push
cmpsl
dec
pop
pop
mov
mov
cmp
sub
out
lods
aaa
adc
mov
stos
sub
jg
sub
movsb
ja
xchg
loop
dec
ljmp
add
mov
or
mov
scas
jbe
mov
xor
incb
cltd
sbb
xchg
mov
mov
push
popf
mov
iret
sahf
aad
pop
enter
js,pt
pop
stos
loop
xchg
sub
pop
cmp
cmp
dec
sbb
sub
or
aam
and
icebp
xorl
dec
and
cmp
rorb
sub
adc
mov
int3
xor
xor
lods
pop
shll
fcmovbe
inc
rclb
mov
push
inc
ret
mov
aam
dec
clc
ret
fimull
mov
inc
sub
sub
lret
adc
outsb
cmpsb
inc
es
lea
adc
jnp
mov
es
pop
sub
daa
in
sahf
into
ja
push
jg
in
adc
scas
aas
mov
cld
dec
movsb
arpl
push
mov
test
adc
cmp
inc
inc
xchg
pop
sub
mov
mov
je
jmp
mov
sbb
shrb
and
cmp
ret
out
faddp
or
punpckldq
mov
fstpt
xor
je
cmp
mov
xor
fdivrs
test
push
jns
sahf
test
lcall
jle
mov
adc
fisttps
call
xor
push
pop
enter
scas
sub
or
fsts
sti
inc
ret
lods
popf
pop
cs
and
mov
or
shrb
insb
lahf
out
inc
mov
out
sbb
cmp
push
pop
mov
call
fcomps
in
xchg
iret
sti
repnz
add
in
sub
inc
inc
add
push
mov
dec
inc
push
mov
cmc
cmp
or
mov
aaa
rolb
pop
lret
jl
ja
mov
mov
cmp
fsts
dec
mov
push
pop
mov
inc
addr16
push
cmp
add
and
lret
aaa
xchg
scas
ss
imul
push
test
sub
fdivp
test
cmp
sub
and
dec
hlt
pop
test
nop
mov
cmp
dec
fldt
jbe
xlat
cmp
imul
cmc
adc
and
add
aas
cmpsb
es
ret
push
scas
lcall
in
pop
jl
inc
loope
icebp
mov
cmc
sub
mov
cs
movb
ss
pop
lahf
std
xchg
mov
lods
add
add
in
leave
cld
inc
iret
mov
xlat
and
mov
and
or
daa
clc
ja
lods
ret
dec
popa
mov
and
adc
fidivrs
pop
das
push
pusha
lahf
ror
adc
outsl
mov
subb
sbb
inc
mov
or
pusha
cltd
mov
inc
outsb
fisubs
mov
orl
ja
lea
push
dec
lret
leave
out
notl
or
sbb
jbe
ret
les
mov
add
and
jne
mov
jo
call
dec
outsb
push
mov
shrb
in
js
and
push
lods
adc
xorl
xchg
jl
stos
dec
pop
out
ret
mov
mov
cmp
mov
imul
inc
jle
xchg
mov
or
bound
xor
test
popf
sbb
mov
xchg
std
xchg
cltd
stos
sub
sbb
and
insl
add
mov
pop
inc
inc
dec
lret
dec
mov
outsb
rcrl
stos
imul
sbb
sbb
mov
mov
sub
sbb
outsb
mov
jnp
loop
mov
jge
fwait
out
mov
xchg
xchg
popf
int3
sbb
adc
xchg
pop
pop
lret
lea
xchg
jno
and
push
aas
insl
ds
es
adc
add
pop
pushw
inc
lret
xor
add
cmp
jmp
or
das
mov
imulb
repz
insb
sbb
inc
or
mov
std
loope
gs
xchg
sti
cwtl
bnd
dec
jmp
bound
mov
mov
mov
pop
repnz
nop
dec
or
inc
sbbl
fdivrl
jno
imul
add
cli
xchg
jns
leave
idiv
mov
dec
mov
bound
pop
and
add
mov
pop
leave
or
xchg
outsb
inc
rolb
fildll
dec
jbe
xchg
sub
ljmp
ljmp
xchg
scas
fninit
pop
ljmp
lret
push
dec
adc
fiaddl
xor
mov
inc
out
xchg
push
inc
inc
inc
out
dec
and
lahf
cwtl
or
mov
sub
lods
mov
and
push
cmp
cmc
pop
loopne
out
imul
push
in
and
or
and
jo
jle
xor
push
jge
pushf
and
inc
fsubrs
out
push
jle
jb
push
out
xor
mov
fs
xchg
out
xchg
inc
shlb
pop
fidivs
ja
xchg
lcall
out
mov
or
or
fnstenv
sahf
inc
adc
out
repnz
jecxz
stos
or
xchg
xor
push
loopne
dec
push
cltd
sbbb
push
xor
in
jne
inc
add
mov
pop
push
or
mov
in
inc
enter
out
lea
jecxz
in
into
jp
out
iret
shlb
je
insl
dec
sti
inc
adc
loop
jmp
or
or
mov
push
iret
popf
js
jge
ja
ds
jle
or
aas
cwtd
jae
ret
sub
in
outsb
hlt
std
dec
fisubrl
jo
mov
sti
lods
push
insb
or
sbb
sbb
adc
fs
roll
sbb
arpl
mov
mov
cmpsb
mov
enter
fildll
xchg
jl
in
xchg
push
add
inc
pop
push
xor
enter
aas
add
insb
test
int3
sbb
insb
and
jl
mov
mov
adc
fsubrs
lret
sbb
repz
mov
sub
or
and
jg
xor
lea
xchg
cwtl
dec
dec
push
adc
jge
leave
cmp
ljmp
ja
loopne
jbe
test
repnz
push
sub
sbb
ss
ret
pusha
std
xor
sbb
cmpsb
sub
cs
iret
add
je
outsl
outsl
imul
xor
add
insl
popa
arpl
fs
insb
add
push
gs
popa
outsb
fs
gs
outsl
jne
je
pusha
pushl
mov
cmp
test
call
add
dec
outsl
arpl
gs
jne
arpl
fbld
pop
adc
xchg
inc
mov
dec
or
in
mov
les
mov
sub
adc
out
inc
add
or
xlat
insl
dec
jmp
or
xchg
lods
cmp
xchg
mov
sub
inc
adc
xchg
push
insl
sahf
hlt
out
ss
lcall
mov
sbb
pop
ffreep
cmpsb
addr16
out
std
aam
repz
shlb
mov
aad
push
adc
fmull
inc
dec
push
inc
cmp
or
pusha
test
mov
int3
shrl
test
je
into
arpl
cwtl
adc
test
jne
enter
cmp
pushf
adc
scas
adc
and
and
sbb
fldt
pop
and
stos
ja
popf
aas
cmovg
dec
xor
mov
movsb
sbb
jne
mov
push
or
jp
push
in
sbb
lods
pop
aad
imul
movsl
adc
dec
test
sti
dec
pop
jns
ljmp
or
insl
cmpsb
addr16
jl
or
int3
outsw
and
notb
ja
pusha
pushf
mov
xor
or
lahf
push
adc
scas
gs
mov
add
and
fadds
push
cmp
cmp
mov
mov
mov
test
sahf
and
dec
xor
test
and
mov
and
and
cs
bound
daa
push
push
shlb
enter
scas
call
add
inc
gs
outsl
fs
gs
imul
add
add
fs
arpl
inc
add
pop
adc
mov
mov
dec
add
mov
rolb
jne
xor
mov
inc
or
fisubs
and
xchg
gs
or
decb
pop
outsl
rol
clc
ret
pushf
popa
push
xor
pop
jecxz
push
xchg
les
adc
cmp
je
mov
push
mov
jo
jns
fwait
gs
or
dec
mov
sbb
and
pop
mov
in
mov
in
fdivl
jmp
mov
adc
shlb
jp
dec
lahf
dec
inc
lea
cmpsb
inc
or
movsl
mov
dec
jl
add
cs
mov
cli
int3
push
lea
fnstenv
out
or
xchg
stc
mov
push
jbe
mov
insl
mov
filds
fnstcw
test
push
or
add
ret
fs
jbe
push
pushf
movl
pusha
push
pushf
pushf
lea
jmp
add
dec
gs
jo
imul
or
lea
jne
clc
mov
bt
jmp
add
inc
imul
inc
imul
insb
gs
add
inc
gs
imul
popa
arpl
outsb
je
add
inc
gs
jns
inc
outsl
insb
outsl
jb
jb
jae
add
add
insb
gs
imul
jae
gs
push
imul
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
insl
jo
jb
push
je
imul
sub
bt
repnz
movb
pushl
pushf
pushf
lea
jne
bsr
not
mov
lea
sub
sbb
mov
stc
sub
bt
test
pushl
push
call
add
dec
jne
inc
imul
hlt
not
lea
pushf
movl
pushf
call
call
add
inc
gs
insb
imul
add
outsl
bound
dec
popa
outsb
fs
add
add
imul
inc
add
add
je
outsl
jns
imul
bt
push
clc
stc
movzwl
bsf
xor
mov
stc
stc
add
cmp
cmc
test
test
mov
test
pushf
cmp
test
call
add
inc
gs
arpl
gs
imul
mov
push
pusha
pusha
lea
jmp
push
repnz
movb
push
call
call
add
push
gs
outsb
jne
je
insl
inc
imul
push
popf
pop
adc
adc
mov
push
adc
add
xorb
imul
mov
ds
andl
aam
div
jns
jns
adcl
cmp
mov
call
daa
enter
mov
push
shlb
sbb
jns
pop
aaa
push
push
push
test
iret
fisttpl
lahf
pop
lret
add
inc
gs
dec
inc
imul
inc
clc
add
test
stc
stc
cmp
pushf
pushf
lea
jb
clc
jmp
push
imul
cmc
test
clc
call
movb
lea
mov
pusha
pusha
mov
movzbw
jmp
rcl
mov
call
add
push
je
outsb
push
arpl
add
inc
gs
popa
insb
jne
add
add
dec
jae
popa
fs
jb
je
push
je
add
add
jo
imul
imul
lret
jg
mov
pushl
pushf
pusha
lea
je
pusha
clc
add
pushf
jmp
not
movb
add
cmc
call
movl
pushf
push
pusha
pushf
lea
jmp
pusha
pushf
call
add
inc
gs
popa
jb
outsb
je
add
inc
gs
imul
js
inc
add
inc
and
sahf
les
add
add
push
gs
outsl
jb
addr16
jne
fs
imul
add
je
imul
icebp
movzwl
pushf
not
lea
movl
movsbw
mov
push
movb
pushl
lea
call
pusha
jmp
and
pop
adc
loop
dec
adc
pop
out
adc
or
ss
dec
push
out
add
mov
xchg
inc
loopne
inc
sbb
loopne
into
call
jl
scas
jnp
std
inc
xlat
pusha
and
pop
test
mov
and
shll
mov
pop
pop
pop
dec
xorb
in
sbb
idivb
adc
jae
or
int
mov
ret
mov
fisubrs
and
mov
push
lds
scas
leave
popa
xchg
pop
pop
icebp
mov
movsl
push
xchg
xchg
pop
mov
mov
fcompl
dec
xor
imul
repnz
bound
pop
orb
fcoms
lahf
pop
jo
mov
sbb
ror
into
xor
movsb
push
xchg
int3
xchg
jmp
mov
jl
mov
adc
fcoml
xchg
mov
icebp
push
and
xchg
das
in
push
insb
mov
inc
mov
mov
stos
pop
test
ret
imul
push
popa
test
sbb
pop
mov
add
js
add
push
fisubrs
scas
pop
add
sub
lcall
mov
pop
mov
sbb
gs
stc
push
jbe
push
dec
fldt
mov
loopne
stos
adc
mov
scas
inc
lds
fadds
mov
adcb
jp
adc
mov
dec
or
mov
inc
out
sub
sti
ss
imul
mov
or
sub
pmulhuw
mov
dec
or
xor
sbb
test
adcl
ljmp
or
das
push
mov
out
loopne
jne
sbb
loopne
movsb
mov
xor
lea
mov
mov
inc
cmp
adc
jbe
pop
mov
cmp
cltd
lcall
arpl
or
sub
pop
mov
jnp
mov
mov
test
sbbl
adc
dec
dec
out
lods
add
push
push
add
jno
fdivrs
insl
xchg
push
pop
adc
stc
stos
and
lea
ja
pushf
lea
jne
pushf
call
movb
xor
call
arpl
popa
adc
mov
xor
push
dec
add
adcl
sbb
fcmovne
xor
cmc
dec
loop
call
and
push
xlat
shlb
je
mov
sbb
xchg
xor
jo
cmp
xor
push
out
in
in
jns
push
jb
pop
and
dec
dec
mov
mov
mov
xor
stos
aas
pop
or
and
and
mov
xchg
jns
lods
sub
cltd
push
xlat
dec
pop
ja
pop
imul
push
cmpsl
adc
push
mov
xchg
stos
std
push
dec
adc
or
adc
in
insb
in
cmc
jl
loope
out
popa
adc
ret
pop
cmp
cmpb
push
xchg
stos
and
arpl
bound
lret
push
jno
loopne
push
repnz
fdivs
xor
fisubrs
ss
mov
enter
xchg
and
push
int3
adc
mov
xchg
sub
mov
cli
mov
mov
cmp
jp
pusha
mov
push
lock
cs
out
subl
add
or
aaa
jnp
and
mov
sub
lods
sahf
inc
mov
leave
push
mov
mov
enter
cmp
movsl
into
dec
mov
adc
sbb
adc
jnp
adc
add
add
add
add
adc
add
add
add
sti
rcr
movzbw
lea
movzbw
add
lea
push
mov
pushf
pusha
mov
lea
jmp
hlt
hlt
mov
dec
les
inc
rclb
ss
in
lds
sbbl
add
mov
xor
mov
repnz
loop
vxorps
sub
sahf
sub
pop
jns
mov
mov
adc
sbb
addr16
popa
and
jge
inc
mov
jg
sub
mov
mov
pop
loopne
mov
ja
xor
and
add
xchg
and
xchg
leave
cmpsl
pop
loope
inc
sbb
clc
movsb
mov
or
dec
dec
lret
lahf
cmc
mulb
add
cwtl
loope
aaa
dec
test
mov
test
xor
adc
nop
and
push
mov
icebp
xchg
icebp
fmuls
test
adc
in
xor
fmull
repnz
popl
fiaddl
arpl
dec
and
jmp
and
xchg
je
mov
rcrl
jae
and
xor
rorb
lock
ds
scas
test
cs
pop
pop
dec
xchg
push
gs
dec
int3
dec
adc
call
aad
pop
pop
sub
push
add
not
aaa
and
inc
popfw
jne
cmc
xchg
inc
mov
cmc
or
lahf
ja
sub
cwtl
icebp
gs
mov
movsl
mov
test
jg
push
sbb
pusha
jo
mov
xchg
dec
xchg
loop
or
je
jbe
outsb
je
add
inc
insb
outsl
bound
inc
fs
je
insl
inc
add
pushf
cmc
add
bt
cmc
push
cmp
test
mov
jmp
call
shrd
shl
sub
inc
xor
cmp
mov
shl
clc
mov
mov
adc
shr
add
xadd
shr
sar
mov
pusha
pushf
btr
pushf
add
movzbw
movzbw
pop
lea
mov
jmp
mov
pushf
mov
push
pusha
mov
mov
pushf
push
movb
pushl
pushl
ret
movb
push
lea
je
pusha
pushf
lea
movzbw
xchg
movzbw
movzwl
not
pusha
lea
push
jmp
pushf
lea
ja
jmp
movl
pushf
lea
jmp
add
inc
gs
popa
jo
jne
add
scas
add
mov
mov
xchg
in
pop
enter
fimull
jecxz
adc
faddp
xchg
shlb
sub
push
mulb
in
lcall
sub
repz
insl
cmp
fbstp
out
pop
mov
movsl
or
cltd
cmpsb
xchg
outsb
decb
arpl
outsl
push
and
lret
stos
sub
xor
clc
ljmp
jmp
fdivrl
and
decl
push
loopne
fiaddl
pop
mov
outsl
ss
daa
inc
or
fisubrl
cmp
out
arpl
clc
clc
mov
lahf
inc
sub
clc
xor
mov
mov
adc
fisttpl
ss
jecxz
loopne
cmp
jns
sbb
repnz
cltd
push
mov
or
sub
pop
hlt
mov
cmp
andb
and
mov
jb
xlat
and
xlat
or
imul
adc
xchg
push
sbbb
scas
jmp
xor
sbb
aam
addr16
mov
pop
sub
imul
data16
xor
mov
pusha
in
jmp
push
out
dec
dec
pop
bound
pushf
xchg
xorb
sub
shl
mov
sbb
xchg
mov
and
xor
xchg
mov
cmp
jbe
ret
lret
fldl
loop
repnz
into
jne
dec
push
out
mov
data16
push
in
adcl
pop
and
or
jp
int3
imul
inc
xchg
push
pop
jo
push
pop
aad
jl
inc
dec
xchg
int3
repnz
xchg
insb
loope
mov
std
ss
fwait
dec
sub
cwtl
mov
cmc
lds
push
rcrl
cmp
repnz
cs
mov
dec
daa
ds
cmp
in
stos
mov
data16
jle
and
adc
xor
lds
rcll
fwait
repnz
fisubrl
lock
lods
insb
pop
adc
rclb
mov
adc
inc
ret
rcrl
cmp
popa
lret
fadds
cmp
sub
and
xlat
or
xchg
and
jb
xchg
mov
xor
fucom
pop
out
sbb
xchg
shll
mov
cmp
xchg
and
or
or
jne,pt
adc
sub
test
gs
icebp
push
adc
rol
cmp
repz
sbbb
stos
sbb
es
mov
rol
cmpsb
push
dec
inc
jnp
mov
lods
leave
stc
lock
ss
pop
push
insb
xor
inc
shrb
hlt
jle
push
lret
push
push
test
test
xor
mov
jno
scas
test
sbb
adc
cmpl
fldcw
insl
dec
test
pushf
and
add
push
xchg
imul
adc
call
add
push
gs
jne
jae
jb
add
inc
insb
jne
push
inc
jne
data16
add
aaa
popl
cmp
clc
call
add
dec
outsl
popa
fs
gs
jne
arpl
add
push
gs
insb
imul
je
add
xorb
shr
add
add
push
xor
push
gs
popa
jae
inc
jb
outsl
jb
push
sub
neg
lea
add
movzbw
mov
pushf
pushf
pushl
lea
jmp
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
add
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
clc
test
pushl
popl
clc
cmp
movb
push
jmp
lahf
pushl
popl
pop
lea
mov
mov
setae
movl
pop
cwtl
lea
push
movl
pushl
call
add
dec
outsl
arpl
imul
clc
cmp
lahf
movsbw
lea
pop
lea
cwtl
cwtl
mov
call
add
push
imul
outsb
outsl
ja
gs
popa
addr16
add
sub
adc
movsb
and
sahf
jne
fpatan
decb
pusha
lret
or
sub
test
enter
cmp
mov
jo
pop
pop
cmc
mov
mov
pushf
push
adc
push
sti
sub
add
xchg
inc
xor
jbe
sub
adc
nop
in
imul
loopne
out
hlt
sbb
mov
in
pushf
push
xor
adc
pusha
adc
imul
mov
repz
add
pop
jecxz
icebp
sub
repz
orb
xor
lahf
inc
sbbl
mov
jl
xchg
daa
leave
stos
fiadds
stc
jno
test
push
lea
jno
inc
cmc
and
iret
sbb
stos
gs
sarl
sarb
in
in
movsb
pop
mov
sub
clc
mov
dec
mov
jae
add
jae
dec
gs
popa
addr16
add
add
insb
insb
push
imul
outsl
arpl
add
inc
gs
gs
dec
bound
arpl
add
je
jb
jbe
je
push
jb
imul
inc
add
xchg
jae
add
add
inc
outsb
popa
bound
imul
inc
and
je
sti
inc
pusha
lea
jmp
add
push
gs
gs
jae
inc
inc
add
push
dec
imul
iret
fwait
lcall
shr
push
and
mov
inc
lcall
je
mov
insl
out
fdivl
xlat
mov
sbbl
aas
enter
clc
add
and
rolb
rcrl
lret
push
int
cs
dec
cmp
shll
and
push
pop
cmc
or
inc
nop
add
dec
inc
dec
popa
jo
je
imul
push
gs
imul
outsl
jb
mov
mov
lea
mov
movw
push
mov
jmp
add
dec
imul
add
add
bound
push
gs
dec
jne
inc
add
add
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
bound
imul
jecxz
or
call
fs
out
push
xor
fimull
mov
pop
repnz
outsl
in
adcb
or
or
jb
shrl
sbb
cmp
arpl
add
pop
jne
jmp
shrb
jnp
scas
in
xor
or
adc
adc
inc
mov
mov
add
xchg
adc
das
clc
insl
imul
cli
sub
sbb
ficoml
les
xchg
sub
mov
add
dec
data16
je
imul
dec
jb
inc
js
add
inc
imul
add
dec
xor
cs
insb
add
add
je
outsl
arpl
add
add
gs
je
inc
imul
imul
jb
insl
inc
add
sti
jns
add
add
gs
inc
jb
je
arpl
push
arpl
outsb
add
enter
dec
cwtl
mov
sub
repnz
fcomps
push
cmpps
es
lahf
arpl
adc
in
ds
in
inc
sti
shlb
in
dec
cmpsb
fcomi
add
popf
dec
push
filds
mov
cmc
sub
pop
cmpsl
mov
les
jnp
cmp
pop
pop
xorb
jns
shld
sub
lcall
mov
mov
jg
adc
rcrb
aas
and
dec
lret
add
outsl
bound
inc
gs
je
insl
dec
popa
insl
gs
add
add
fs
je
imul
lea
movb
call
pushl
mov
mov
push
lods
movw
jmp
add
insb
jae
jb
jo
inc
add
add
je
imul
arpl
icebp
xor
test
call
add
inc
push
jo
jb
add
insl
adc
mov
inc
mov
dec
lcall
push
test
xor
mov
mov
and
xchg
add
sbbb
pop
arpl
push
xchg
stos
pushf
orl
shl
std
out
or
ds
ds
rclb
loop
jnp
push
insl
repz
pop
xlat
mov
pop
nop
cmpsb
int
sub
push
adc
scas
push
rolb
xchg
test
sub
xor
inc
aam
mov
xchg
stc
fsts
call
jbe
mov
pop
lods
popf
xchg
ja
iret
mov
sub
pop
xlat
mov
sbb
loopne
testl
out
popa
andl
mov
add
push
outsl
jae
push
jne
je
gs
popa
add
pop
and
dec
das
push
sub
and
pfpnacc
int3
mov
sbb
jecxz
sar
jecxz
movsl
pop
add
in
and
shlb
xlat
nop
insb
push
icebp
aaa
fisttpl
pop
insb
adc
dec
adc
pop
jmp
push
dec
add
jo
fs
jnp
mov
inc
add
adc
xor
mov
adc
jns
mov
ds
fwait
jmp
insb
inc
dec
mov
cmc
adc
ror
xor
mov
jle
divb
sbb
push
cmc
and
outsb
pushf
push
mov
xlat
or
jnp
int3
call
cmp
push
push
pop
push
jae
test
lahf
popa
sbb
mov
cmpb
xchg
mov
mov
cld
in
aad
or
imul
fidivrl
repz
icebp
in
mov
andl
rorl
pop
aaa
adc
lock
clc
rol
popa
lea
ja
shll
mov
push
in
or
jo
in
mov
jle
add
sub
test
incl
pusha
call
call
mov
dec
push
dec
enter
and
sbb
jmp
ss
dec
mov
int3
lahf
jp
aad
cmp
out
or
dec
mov
xor
xchg
rolb
jo
xor
pop
shlb
call
push
das
xchg
or
push
adc
jp
sbb
insb
add
xchg
dec
clc
call
adc
sub
and
in
outsl
adc
mov
mov
stos
fst
push
jl
repnz
inc
mov
sub
mov
adcl
add
fcompl
lods
pop
and
cmp
shl
pop
je
cmp
test
jns
std
pop
or
or
add
add
je
jne
jb
outsb
je
jb
arpl
jae
pushf
lea
jle
push
push
movl
pushf
lea
jmp
into
and
fmulp
cmp
dec
sub
out
outsl
aaa
mov
cs
popf
jbe
movsb
lahf
jbe
push
in
xchg
add
or
jmp
imul
sbb
fistps
push
loopne
in
sbb
add
cwtl
sbb
fstl
inc
sbb
roll
jge
xchg
dec
inc
push
es
push
pop
mov
jp
push
sub
dec
out
add
inc
dec
xchg
mov
xchg
stos
ss
push
lret
leave
adc
sahf
mov
or
xchg
mov
mov
daa
fisttpll
mov
push
mov
sub
mov
jo
lahf
and
and
jmp
mov
xor
adc
sub
out
addr16
sub
sub
lahf
and
xchg
xor
ja
je
mov
orb
scas
mov
push
jg
jge
fisttpll
add
scas
into
es
xchg
hlt
pop
inc
pop
repz
imull
dec
es
dec
push
out
mov
imul
sbb
xchg
lret
pop
stc
mov
mov
pop
mov
jmp
mov
test
and
mov
and
jns
or
in
add
add
add
mov
add
add
fistps
add
cmpsb
sbb
add
scas
sbb
add
xchg
sbb
add
scas
sbb
add
sbb
add
lock
add
mov
sbb
add
add
icebp
sbb
add
sbb
add
clc
sbb
add
sbb
add
out
sbb
add
mov
sbb
add
les
add
movsl
sbb
add
call
sbb
add
xchg
sbb
add
sbb
add
cmpsb
sbb
add
jne
add
xchg
sbb
add
mov
add
adc
add
je
add
or
add
sbb
add
or
add
int3
sbb
add
sbb
add
sbbl
add
mov
add
jae
add
or
add
mov
sbb
add
mov
add
or
sbb
add
jl
add
sbb
add
sbb
add
sbbl
add
rcrb
add
jl
add
repnz
add
sbb
add
rcrb
add
in
add
ficomps
add
cli
sbb
add
mov
push
add
in
sbb
add
add
add
or
add
fistps
add
push
add
sbb
add
lock
add
fwait
sbb
add
jo
add
add
add
xchg
add
sbb
add
jne
add
fistps
add
enter
loope
add
jae
add
sbb
add
mov
sbb
add
jge
add
or
add
sbb
add
rcrb
add
pop
push
add
or
add
or
add
out
sbb
add
sbb
add
sbb
add
jno
add
sbb
add
sbb
add
sbbb
int
sbb
add
sbb
add
test
add
sbb
add
repnz
add
xchg
sbb
add
push
add
xchg
sbb
add
lods
sbb
add
je
add
negl
add
ljmp
outsl
mov
sbb
add
adc
add
sbb
add
lcall
hlt
mov
sbb
add
sbb
add
sbb
add
mov
push
add
jne
add
sbb
add
sbb
add
iret
sbb
add
sbb
add
sbb
add
test
add
sbb
add
hlt
sbb
add
xchg
sbb
add
fistps
add
sbb
add
add
add
mov
sbb
add
push
add
mov
add
sbbl
cwtl
or
add
je
add
cmc
sbb
add
stc
sbb
add
sbb
add
mov
add
add
sbb
add
add
add
mov
add
pop
in
add
repnz
add
les
add
rcrb
add
add
cmpb
push
add
add
add
xchg
sbb
add
mov
add
xchg
add
addb
add
or
add
enter
add
add
pushf
repz
add
sbb
add
jno
add
xchg
sbb
add
mov
test
mov
ror
dec
mov
bt
shl
mov
call
lods
pusha
push
js
dec
std
sbb
add
nop
dec
adc
adc
loopne
or
test
or
dec
out
scas
ljmp
in
xchg
cmp
jo
inc
movsb
jae
out
cld
fadds
popa
jbe
cltd
cmp
jg
inc
notl
adc
mov
xchg
mov
inc
xor
push
push
ret
add
jo
add
adc
push
sbb
js
jmp
adc
js
xor
dec
lods
jle
push
cltd
call
lock
into
cmp
test
inc
fwait
mov
aas
jg
leave
iret
fs
pusha
bt
mov
btc
shrd
mov
bt
cmp
cmp
jmp
add
inc
outsb
fs
imul
add
je
gs
popa
addr16
add
add
je
imul
pushf
lea
jae
bsr
mov
bsf
movzbw
lea
mov
seta
cmc
shl
mov
cmc
test
bt
sub
clc
cmc
test
repnz
push
lea
jne
adc
sar
rcr
mov
rcl
or
rol
sub
cmp
stc
mov
pushf
cmc
sub
call
pop
mov
pusha
jmp
test
cmpsb
ja
out
push
mov
lods
jge
or
jae
test
fimull
or
push
jp
sbb
pushf
cmp
or
loope
es
nop
ss
daa
test
sbb
je
adc
xor
in
in
enter
and
push
add
ret
fucomp
inc
adc
bsr
mov
int
xchg
jle
dec
shr
or
movsb
mov
mov
add
mov
test
aaa
cmp
int3
pushf
in
adc
shrl
cmp
flds
xor
pop
lret
mov
mov
sub
inc
mov
mov
lret
sbb
mov
test
pop
fst
jns
dec
jp
and
pop
ja
into
or
sbb
sbb
scas
adc
mov
in
cmpsb
aam
test
lcall
mov
dec
sahf
jg
push
add
shrb
shl
and
mov
hlt
jmp
jge
cmc
lods
es
repnz
jns
dec
mov
mov
shl
cli
add
mov
fdivrs
int3
cs
cmp
adc
cmpsl
push
int3
jnp
fildl
inc
es
add
mov
mov
push
insl
inc
inc
cltd
popa
mov
loop
cmpsl
cmp
jge
inc
pop
out
mov
in
les
xor
inc
aas
xchg
mov
repnz
cli
mov
xor
fdivrl
loop
xlat
out
push
andl
les
incl
add
popa
insb
gs
imul
je
js
xchg
and
adc
mov
fwait
mov
es
js
pusha
and
pop
neg
mov
push
aam
dec
adc
fwait
lcall
push
sub
outsb
xlat
dec
sbb
loopne
testb
fstps
mov
sti
loop
adc
or
loope
mov
push
into
mov
jecxz
in
lods
lahf
sti
dec
fs
dec
or
dec
imul
inc
add
lods
add
pop
lret
and
ja
mov
call
mov
lods
lods
mov
sub
fadd
int3
mov
dec
jl
ja
push
lcall
add
push
cs
push
jbe
into
cmpsb
scas
shll
imul
pop
xor
sub
stc
xlat
hlt
fst
xor
cmc
lret
sbb
in
jge
push
jp
orl
outsl
dec
std
sbb
mov
test
inc
fildl
and
xorl
lcall
sub
rorb
lds
xor
inc
xchg
in
xchg
xor
fwait
es
jo
jmp
jmp
dec
sbb
cld
xchg
jns
dec
orl
ret
stos
inc
flds
ljmp
xor
flds
and
xchg
push
cmpsl
sbb
cmp
scas
lods
adc
add
imul
jae
lea
jb
bt
cmp
call
push
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
xchg
jl
dec
mov
cmpsb
and
jbe
fstps
inc
xor
cmp
icebp
roll
pop
cmpsb
mov
loopne
and
sub
out
enter
out
repnz
fisttpll
jecxz
dec
popf
repz
sbb
enter
rcr
push
loop
pusha
inc
cltd
mov
mov
out
add
and
push
outsb
sbb
sbb
cltd
aas
insl
jns
in
pop
lret
mov
loope
idivb
xchg
mov
jbe
sub
mov
add
popa
insb
push
gs
insb
insb
outsl
arpl
mov
pusha
call
add
inc
gs
jne
jb
outsb
je
imul
jns
add
add
je
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
insb
jae
jb
insl
jo
inc
add
add
je
imul
js
inc
add
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
dec
jae
arpl
jo
jns
add
inc
gs
jb
jbe
push
jns
gs
add
add
xor
pop
and
pusha
pushf
pushf
lea
call
push
pushf
push
call
jnp
gs
dec
jmp
loope
push
aad
dec
xor
and
shlb
lea
arpl
enter
shll
fcmovu
sub
mov
int
xchg
daa
mov
stc
stos
mov
orl
stos
sbb
lds
inc
jnp
xchg
repz
ret
gs
or
aaa
clc
adc
mov
adc
int
jg
adc
sub
sti
pop
add
test
shll
mov
xchg
mov
jecxz
es
push
or
cltd
sahf
js
push
mov
pop
or
mov
sub
movw
pushf
pushl
popl
pushl
pushl
ret
add
push
arpl
jae
bound
add
inc
gs
imul
js
dec
outsb
addr16
inc
add
add
je
imul
jle
jp
adc
cld
xor
mov
cltd
orl
pop
loope
jecxz
cmp
add
mov
push
sub
cli
ljmp
pop
xor
out
int3
cmp
inc
into
aad
or
adc
fisttpl
jnp
jnp
pop
xchg
test
outsb
aam
outsb
push
sub
push
xchg
inc
roll
pop
sub
rcll
loop
dec
cmp
lea
dec
sbb
sbb
add
sub
out
fsubp
or
mov
loop
cmp
fxtract
bound
push
addr16
or
cmp
out
cmp
or
sti
mov
sbb
inc
add
stos
or
or
popl
add
clc
mov
jmp
dec
bt
test
xor
cmp
clc
clc
cmp
pushf
lea
lea
pop
jmp
str
jmp
add
inc
gs
jns
je
insl
dec
gs
imul
fs
jae
movzbw
bsf
mov
pushf
sets
mov
shl
cmp
mov
jmp
lea
lea
push
lea
not
movzbw
movsbl
mov
mov
pushl
pushf
lea
call
call
pushl
mov
lea
ja
pushf
push
lea
jb
call
add
dec
jae
imul
jae
bound
lea
sbb
jne
inc
push
stc
out
or
mov
dec
bound
push
add
popa
lret
adc
out
int
fwait
push
stos
neg
test
fidivs
popa
push
mov
subl
cwtl
mov
cltd
jno
int
mov
aam
scas
sub
ret
repz
lahf
inc
or
pop
std
xor
mov
cld
mov
bound
jmp
inc
out
mov
push
gs
lods
add
in
sub
cmp
mov
jne
loop
arpl
cli
bound
mov
int
adcb
push
mov
outsl
addb
dec
dec
rcrb
xor
popa
leave
mov
xchg
or
subb
mov
adc
iret
test
cmpsb
icebp
add
or
test
mov
dec
std
push
pop
jo
cltd
pop
lcall
or
sub
jecxz
sbb
fwait
mov
pop
ss
fsts
sub
mov
mov
repnz
cmc
cmc
xchg
daa
lahf
out
sti
sti
stos
hlt
xchg
out
or
pusha
sub
xchg
adc
mov
and
clc
mov
jmp
jg
add
push
gs
imul
outsl
outsl
imul
add
add
gs
inc
inc
add
add
je
imul
jb
popa
fs
jb
arpl
jae
add
int3
out
adc
mov
aaa
cmpsl
adc
gs
dec
xor
cld
mov
push
fiaddl
imul
dec
cmp
cmp
xchg
xchg
sti
xchg
sbb
adc
push
pop
es
mov
gs
imul
outsb
addr16
add
test
add
pusha
push
pushl
ret
mov
movw
pushf
jmp
in
mov
lds
inc
push
out
xor
mov
mov
sub
mov
mov
jb
adc
rcr
mov
xchg
les
xchg
clc
mov
pop
out
bnd
hlt
dec
cs
push
mov
inc
pop
xor
mov
shll
jmp
movl
ljmp
popa
fs
gs
fs
je
add
adcb
movsb
in
imul
sbb
out
mov
sbb
popf
pop
push
dec
pop
push
aaa
jbe
mov
fldcw
out
pop
in
fs
scas
outsb
int
sbbl
add
mov
mulb
pop
mov
lock
call
test
cmp
mov
pusha
pushf
lea
jbe
test
jbe
rcr
cmc
sub
and
mov
call
cmp
pushl
jmp
movzwl
test
test
mov
cmp
clc
add
test
test
jmp
movl
pushl
pushl
popl
mov
pushl
push
pushf
pushl
ret
lea
jne
pusha
pushl
mov
push
lea
jmp
jl
sbb
adc
movsb
mov
inc
out
xor
shrl
cmp
sbb
pop
lock
dec
test
dec
std
xchg
add
adcl
mov
in
pmulhuw
jns
int
movsl
sbb
loop
outsl
lock
jmp
add
adc
mov
push
mov
hlt
dec
inc
hlt
pop
dec
xchg
test
les
cltd
pop
notb
mov
inc
push
imul
add
jbe
inc
inc
add
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
movsb
jmp
add
dec
insb
gs
jne
add
add
je
jne
inc
add
je
add
fs
jne
shl
rcl
sbb
bswap
mov
jmp
lea
jne
call
push
jmp
not
pushf
push
pushf
jmp
pushf
movl
movb
jmp
clc
push
add
clc
cmp
cmp
pusha
lea
jb
pusha
cmp
movb
call
movl
pusha
lea
jmp
cmp
movw
jmp
fbld
xchg
dec
rclb
sbb
or
fwait
jg
flds
xor
pop
fsqrt
iret
fsubs
or
add
mov
inc
filds
mov
shr
sub
fidivrl
aam
xor
push
lods
xor
bound
xlat
cmp
pop
jae
jp
lar
pop
sub
test
inc
jne
cli
mov
jae
mov
mov
clc
test
imul
push
push
pop
ljmp
mov
scas
add
sub
inc
xchg
cld
lods
lcall
sbb
in
sub
fadds
in
jb
inc
pop
push
add
cmpsb
repz
aam
lock
addr16
mov
mov
xchg
rcl
mov
and
bound
call
das
adc
inc
add
lock
int
lds
andb
pushf
jns
adc
xchg
push
ret
push
jno
push
test
into
fisubrs
jbe
mov
lods
pop
lds
xor
adc
xor
popf
mov
stos
imul
scas
xchg
lahf
cmp
mov
scas
mov
shrb
mov
lock
jle
xorl
enter
mov
adc
xchg
ljmp
subl
repnz
ljmp
popa
loop
sbb
dec
lahf
stos
xchg
and
neg
bound
lret
rorl
mov
cmp
dec
add
fbstp
dec
jp,pn
push
or
rcll
roll
in
out
test
loopne
or
xchg
adc
sub
imul
dec
jno
pop
mov
and
mov
cmpsl
imul
sub
add
sbb
add
mov
pop
repz
mov
xchg
in
imul
cmp
add
es
push
scas
scas
push
loopne
cs
loop
pushf
jmp
loopne
xor
pop
cli
idiv
movsl
push
xor
pop
jp
test
cmpb
andb
sbb
jmp
jge
pop
sarb
dec
or
out
sahf
jge
sub
push
xchg
jnp
mov
cltd
push
movsl
push
xor
jp
mov
pop
loopne
cmp
inc
pop
outsb
mov
pop
gs
xchg
jmp
bound
pop
aad
cmp
add
push
gs
insl
gs
push
add
add
fs
jne
jae
jb
add
lea
jp
ja
pusha
stc
imul
cmp
mov
cmp
pushf
add
pushl
push
lea
jmp
add
inc
outsl
push
outsb
imul
imul
incl
add
je
imul
inc
add
add
fs
je
push
imul
jge
pushl
pushf
lea
call
pushf
mov
pushl
lea
jne
mov
jmp
add
inc
gs
outsb
jne
add
dec
gs
jo
jb
add
add
outsb
jae
popa
je
dec
gs
popa
add
mov
dec
push
sub
fwait
jb
lea
cmpl
imul
lret
pop
xor
mov
iret
mov
xor
aad
roll
jnp
loopne
push
roll
mov
repz
bound
adc
sub
jle
lods
jmp
shlb
mov
loopne
test
jp
aam
dec
fcoml
ficomps
sub
sbb
cmc
jle
hlt
aas
mov
and
sarb
pop
xor
clc
ds
dec
aam
in
mov
pop
ficoml
adc
iret
jbe
sbbl
xchg
inc
and
fisttpl
fists
xchg
sub
outsb
gs
mov
add
aam
pop
jle
pop
loopne
mov
ljmp
inc
add
push
xor
lds
int3
and
mov
inc
jge
xorb
cmpsb
jge
inc
enter
dec
outsl
arpl
inc
insb
insb
outsl
arpl
call
pusha
movl
movb
jmp
dec
mov
add
imul
loop
adc
push
data16
or
pop
xchg
dec
or
sbb
sarb
imul
popa
adc
mov
xor
pop
push
cld
adc
mov
or
nop
ljmp
jmp
adc
addr16
mov
sub
cs
adc
icebp
dec
adc
in
cmpsb
nop
fildl
mov
orb
xor
inc
jmp
jae
in
popa
sub
push
adc
std
pop
sub
xchg
adc
cmp
pop
add
pushf
movswl
mov
push
mov
das
call
mov
push
dec
pusha
idivl
push
and
sbb
cmp
lcall
sub
mov
or
or
mov
test
sbb
xor
and
mov
mov
inc
ret
out
cmpsl
mov
dec
int3
add
arpl
lret
lea
push
mov
rorl
dec
pop
and
xchg
mov
pop
push
push
push
es
aam
scas
aam
sbb
xor
pop
cmc
mov
adcb
scas
dec
fs
call
test
clc
cltd
loop
add
into
je
inc
clc
jno
jnp
mov
test
rolb
mov
movsb
mov
xor
xor
jmp
movzbl
mov
movw
call
add
mov
dec
mov
ret
cmpsl
int3
out
and
aam
mov
imul
test
pushf
jge
pop
pusha
mov
cld
pop
mov
loopne
mov
add
rorl
pushf
sbb
test
dec
cmp
bound
adc
cmp
jno
mov
xchg
in
inc
cmp
jl
mov
mov
dec
pop
shll
push
loop
aaa
enter
insb
adc
mov
flds
jnp
add
icebp
popf
loopne
mov
pop
jp
mov
lock
inc
jle
enter
jbe
daa
je
push
and
daa
arpl
adc
lret
int3
into
outsb
dec
inc
js
popa
es
decl
cmpl
out
ficoms
pop
push
sub
mov
dec
int3
fcmovnbe
mov
xchg
int3
lds
movsb
dec
outsl
mov
adc
mov
mov
in
xchg
cmc
or
lods
cmp
notl
push
jbe
add
out
cld
or
xor
and
push
cwtl
sti
adc
dec
adc
mov
fwait
hlt
pop
fsqrt
cmp
stc
in
jp
push
xor
js
push
fistpll
lret
mov
adc
sub
or
and
or
mov
movl
pushf
push
lea
jmp
add
dec
jae
popa
fs
outsl
fs
je
add
inc
and
cmpsl
sbb
pop
add
add
inc
gs
imul
dec
test
test
cmp
xor
test
cmp
lahf
pushl
lea
cwtl
mov
jmp
push
mov
mov
dec
call
or
icebp
fisttpl
push
loope
ret
lcall
loopne
sbb
push
inc
into
cmp
testb
enter
shrl
jecxz
cmp
jbe
out
ror
cs
sahf
push
into
fimull
push
mov
movsl
mov
clc
mov
pushf
in
and
jne
addr16
fildll
shrb
js
outsl
shrl
push
arpl
mov
mov
stc
test
lret
fidivl
stos
cmp
cmpb
push
cmc
cmp
aaa
mov
pop
sub
jl
add
je
imul
dec
outsb
outsw
jb
popa
je
outsl
outsb
add
add
popa
jo
jb
popa
je
add
enter
rol
incl
push
movsbw
setae
movzbl
mov
lahf
mov
pushf
lea
lea
call
add
inc
jb
popa
je
inc
inc
inc
add
mov
and
sbb
sub
adc
push
jno
add
push
pusha
mov
pop
dec
add
xchg
movsl
fisttpl
jae
addb
enter
les
jecxz
stos
sbbb
cmpsb
jne
stos
sbb
lahf
ss
add
adc
sub
cs
lds
lret
cmp
cmp
adc
mov
scas
sahf
xor
movsl
insl
in
fcompl
les
out
pop
in
adc
js
fisubrl
jl
mov
jge
inc
hlt
dec
sub
jmp
cmp
mov
dec
dec
dec
out
mov
movl
pop
mul
push
cmp
test
in
jp
sbb
mov
lods
add
lret
sub
lock
int3
add
push
gs
je
dec
popa
outsb
fs
add
add
add
mov
add
add
fistps
add
cmpsb
sbb
add
scas
sbb
add
xchg
sbb
add
scas
sbb
add
sbb
add
lock
add
mov
sbb
add
add
icebp
sbb
add
sbb
add
clc
sbb
add
sbb
add
out
sbb
add
mov
sbb
add
les
add
movsl
sbb
add
call
sbb
add
xchg
sbb
add
sbb
add
cmpsb
sbb
add
jne
add
xchg
sbb
add
mov
add
adc
add
je
add
or
add
sbb
add
or
add
int3
sbb
add
sbb
add
sbbl
add
mov
add
jae
add
or
add
mov
sbb
add
mov
add
or
sbb
add
jl
add
sbb
add
sbb
add
sbbl
add
rcrb
add
jl
add
repnz
add
sbb
add
rcrb
add
in
add
ficomps
add
cli
sbb
add
mov
push
add
in
sbb
add
add
add
or
add
fistps
add
push
add
sbb
add
lock
add
fwait
sbb
add
jo
add
add
add
xchg
add
sbb
add
jne
add
fistps
add
enter
loope
add
jae
add
sbb
add
mov
sbb
add
jge
add
or
add
sbb
add
rcrb
add
pop
push
add
or
add
or
add
out
sbb
add
sbb
add
sbb
add
jno
add
sbb
add
sbb
add
sbbb
int
sbb
add
sbb
add
test
add
sbb
add
repnz
add
xchg
sbb
add
push
add
xchg
sbb
add
lods
sbb
add
je
add
negl
add
ljmp
outsl
mov
sbb
add
adc
add
sbb
add
lcall
hlt
mov
sbb
add
sbb
add
sbb
add
mov
push
add
jne
add
sbb
add
sbb
add
iret
sbb
add
sbb
add
sbb
add
test
add
sbb
add
hlt
sbb
add
xchg
sbb
add
fistps
add
sbb
add
add
add
mov
sbb
add
push
add
mov
add
sbbl
cwtl
or
add
je
add
cmc
sbb
add
stc
sbb
add
sbb
add
mov
add
add
sbb
add
add
add
mov
add
pop
in
add
repnz
add
les
add
rcrb
add
add
cmpb
push
add
add
add
xchg
sbb
add
mov
add
xchg
add
addb
add
or
add
enter
add
add
pushf
repz
add
sbb
add
jno
add
xchg
sbb
add
add
je
outsb
jne
je
je
add
jb
xchg
adc
sti
or
sahf
sbb
stos
lcall
adc
fists
sarb
pop
in
fucom
pop
jle
adc
cmp
loope
pop
inc
push
and
xchg
xchg
scas
xchg
and
data16
incb
cmpsb
mov
jne
add
into
shlb
mov
fsubrl
xchg
pop
imul
mov
adc
jp
ljmp
cld
mov
mov
mov
ss
sti
ret
mov
movsl
add
xchg
add
imul
add
push
gs
insb
outsl
jae
dec
gs
xor
dec
adc
imull
add
loope
mov
clts
mov
out
ljmp
insl
or
int3
cmp
pop
movsl
aad
xor
sarl
mov
call
arpl
fs
xor
cs
insb
add
call
add
push
gs
imul
outsl
arpl
jae
lea
jne
jmp
add
inc
gs
jns
je
insl
push
imul
shrd
shr
sub
add
bt
shl
mov
pushf
stc
test
movb
sub
stc
pushl
popl
pushf
test
cmp
push
pusha
push
lea
ja
neg
pusha
sub
shl
lea
add
sub
ror
xor
mov
cmp
rol
cmp
and
mov
call
add
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
and
sbb
out
out
pop
pop
je
inc
pop
fwait
mov
pop
shll
or
iret
lret
in
stos
jb
mov
xchg
lods
fdiv
inc
into
or
mov
jb
jg
clc
daa
aaa
sub
cld
and
sti
lahf
mov
sub
mov
pop
scas
jbe
mov
xchg
es
and
mov
xorb
mov
xchg
adc
mov
xchg
and
cmp
dec
mov
push
jb
cli
stos
xchg
cld
mov
xchg
mov
nop
pop
into
jne
inc
sbb
into
gs
in
fwait
inc
xor
mov
mov
out
nop
iret
imul
rol
cltd
sub
int
and
stos
into
test
or
sti
in
addr16
aam
insb
lds
cmp
and
movsb
mov
sub
imul
push
push
popf
cld
ljmp
sbb
xchg
adc
mov
pushf
pop
outsl
lock
mov
cmpsl
mov
pop
xchg
inc
mov
dec
sub
iret
sbb
jp
imul
lods
xchg
push
outsl
mov
sbb
int
sbb
inc
mov
mov
pop
fwait
addr16
xchg
jge
ja
repz
inc
lea
add
popf
xor
push
loope
aas
xchg
add
aam
test
call
clc
cmpsl
dec
dec
outsb
gs
pop
stc
enter
mov
jmp
pop
mov
dec
mov
movzbw
seto
lea
jns
push
setg
lea
lahf
pushf
lea
pushf
jmp
add
inc
gs
inc
add
add
je
insb
imul
je
movb
movl
pushf
pushl
push
movl
pushf
pusha
lea
jmp
push
lea
ja
jmp
adc
lea
xchg
add
mov
mov
jae
jmp
mov
dec
cmp
push
pop
sbb
pusha
cli
das
cmp
in
jle
imul
mov
sbb
adc
cmpsl
ja
jp
dec
fsubs
es
arpl
imul
add
and
pop
out
scas
jp
dec
sahf
adc
and
imul
sarl
mov
test
xor
pop
notl
mov
loopne
sbb
gs
jae
addr16
add
add
je
jb
outsl
arpl
fs
js
push
add
add
gs
je
inc
outsl
insl
jo
je
bound
inc
add
lea
jne
lahf
cwtl
lahf
movb
not
push
not
bswap
lea
jmp
cmp
cmp
pusha
pushf
lea
jae
movsbl
xchg
shld
mov
bts
call
add
push
outsb
jb
imul
popa
jae
inc
add
add
imul
pop
pusha
insl
push
mov
pusha
pushf
pushf
pushl
pushl
ret
add
push
je
push
outsb
ja
outsb
add
add
gs
imul
int3
and
lcall
dec
out
pop
arpl
imul
leave
cwtl
std
mov
shll
sbb
jns
loop
sbb
shl
mov
push
lods
and
testb
push
jbe
pop
add
xor
mov
mov
outsb
push
inc
cmp
or
ja
movsl
sti
mov
aas
rcrb
push
push
out
mov
out
stos
jp
adc
push
stos
cmp
imul
dec
xchg
dec
jns
negb
mov
std
pop
push
inc
sub
adc
pusha
cmp
jne
lea
cmp
lds
jns
pop
add
push
loope
mov
mov
test
adc
call
repz
push
loopne
out
shrb
inc
pop
push
stos
sti
stos
sbb
or
jg
jl
sub
clc
pushf
test
ljmp
mov
dec
cmp
arpl
add
adc
cwtl
push
mov
and
push
cld
mov
jo
loope
fdivrl
jl
adc
cmp
or
outsl
es
inc
sbb
jge
stos
or
inc
scas
xchg
push
repnz
and
js
insl
mov
adc
pcmpgtd
ret
aam
shrl
jl
testb
sahf
mov
push
and
scas
dec
xchg
sub
dec
arpl
out
je
sbb
and
imul
xor
outsl
dec
xchg
fs
xor
sub
stc
bound
cld
movsb
lcall
jle
hlt
add
sti
js
inc
push
loop
jo
and
mov
mov
shlb
pop
iret
cmp
repnz
push
jl
cmpb
mov
push
xor
int3
mov
pusha
imulb
mov
sub
dec
icebp
fisubl
add
mov
push
movsbw
movsbl
mov
cwtl
jmp
add
dec
jae
imul
popa
bound
add
add
outsl
bound
push
gs
insb
insb
outsl
arpl
cmp
neg
and
mov
clc
cmp
pushf
call
add
inc
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
xor
adc
insb
sbb
cmp
mov
mov
mov
sub
or
pop
push
xchg
adcb
dec
pushf
jno
ljmp
push
fmull
ret
out
cmc
in
sbb
bswap
pusha
mov
movw
mov
pushf
jmp
not
mov
pushf
pushf
movb
dec
pushf
cmc
call
add
xor
clc
add
jge
dec
pop
adc
jl
das
sbb
lcall
in
add
push
stc
dec
cmpsb
xor
aam
adc
sbb
adc
das
inc
pop
insl
mov
mov
dec
loope
rorl
call
pop
cmpsb
outsb
inc
std
xchg
sti
mov
mov
and
std
adc
inc
xchg
mulb
scas
dec
dec
sbb
loopne
jne
lods
sarb
mov
and
mov
jb
adc
mov
pop
pop
mov
push
loope
scas
adc
sub
and
adc
sub
int
addr16
dec
mov
cltd
sub
jg
out
mov
je
push
xchg
fisubrs
mov
xchg
push
popa
insb
imul
je
pushl
dec
stc
call
movl
lea
jae
test
add
pushf
lea
jnp
mov
push
mov
pushf
pusha
lea
jmp
inc
and
jne
addr16
push
gs
and
jne
and
outsb
outsb
imul
jns
jne
and
jae
gs
cs
jae
sub
jne
insb
outsl
popa
and
and
outsl
insl
and
insl
outsl
jb
and
and
jae
popa
jb
and
jne
and
outsl
addr16
insl
add
add
je
outsb
jne
je
insl
inc
outsl
jne
je
pusha
push
movl
call
push
pusha
clc
cmp
jmp
add
inc
gs
gs
arpl
popa
jo
add
add
jb
popa
je
add
ja
add
lea
ja
shr
sub
seta
bt
dec
add
or
pusha
mov
call
add
push
gs
outsl
jb
inc
inc
add
dec
sbb
sbb
mov
scas
das
es
icebp
sbb
bnd
int3
int3
push
sbb
and
mov
mov
fcompl
mov
mull
dec
and
xchg
in
scas
shlb
out
je
mov
mov
cmp
scas
lods
pop
push
aad
or
leave
cwtl
push
add
sub
sti
sbb
jno
bt
movl
movb
sub
stc
pushl
popl
push
cmp
jmp
add
push
gs
imul
dec
jb
inc
js
pushf
lea
ja
pushf
pusha
lea
jb
cmc
bt
cmpb
jmp
mov
pushf
mov
pushl
lea
call
push
call
cmp
ror
inc
sub
shl
bt
test
sub
add
rcl
pusha
bt
neg
mov
ror
mov
pushf
stc
repnz
movl
call
add
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
imul
call
add
inc
gs
push
dec
outsb
outsw
add
mov
pusha
cmpb
pushf
movb
pusha
lea
jne
movzbw
and
sub
mov
pusha
mov
pusha
cmc
add
clc
bt
movzwl
movzbw
pop
mov
cmc
clc
cmp
add
call
add
inc
gs
inc
dec
inc
push
add
add
je
imul
inc
js
inc
js
add
inc
gs
gs
je
je
add
mov
bt
shl
pusha
lea
jle
je
call
clc
pusha
sub
pushf
lea
jmp
add
inc
outsl
jo
push
arpl
add
je
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
add
outsl
bound
inc
imul
inc
add
inc
and
mov
fisttpll
add
dec
imul
out
pop
in
cmp
mov
lret
or
dec
or
scas
mov
add
dec
lds
outsl
loopne
xchg
inc
incl
jp
jmp
addr16
sysexit
dec
cmp
lock
inc
test
push
add
cli
leave
pop
cmp
ds
xchg
fimuls
js
popa
push
jmp
add
inc
gs
imul
bound
gs
add
add
push
jae
push
imul
arpl
add
add
je
popa
jae
inc
jb
outsl
jb
mov
lea
ja
pushf
pusha
lea
jb
cmc
jmp
add
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
add
inc
gs
je
dec
popa
outsb
fs
add
add
je
outsl
arpl
add
add
je
jb
jbe
je
push
jb
imul
imul
or
adc
in
sub
js
pushf
fstps
imul
or
imul
bswap
jno
and
mov
je
mov
fisubl
inc
adc
fsubr
icebp
mov
xchg
mov
imul
cmpsb
and
arpl
pushf
aam
inc
repz
das
ljmp
popa
xchg
inc
mov
fcompl
int
test
outsb
push
jl
addr16
inc
ret
aaa
aas
mov
xchg
cltd
sbb
mov
frstor
push
nop
lret
jnp
add
dec
mov
lcall
aaa
cmc
mov
insb
mov
adc
mov
daa
and
test
out
adc
lret
lds
sbb
int3
push
add
push
imul
outsl
outsl
imul
mov
push
pushf
mov
not
not
movsbl
pop
pushf
pushl
ret
add
inc
gs
imul
outsb
addr16
add
fldl
pop
sbb
push
or
fldenv
loope
dec
mov
fidivl
iret
jle
adc
mov
stos
bound
sbb
mov
inc
sbb
mov
scas
adc
dec
cmp
fwait
bound
ficompl
xor
enter
cmp
cs
mov
adc
mov
lods
dec
pop
lcall
mov
cwtl
jb
adc
inc
inc
xchg
icebp
in
pop
sub
sbb
gs
fwait
sarl
gs
jp
arpl
ss
stc
js
jmp
lea
je
test
call
mov
call
insl
xor
rcll
stos
xchg
pop
pusha
sahf
fnstcw
flds
sahf
imul
lahf
mov
push
mov
pop
push
test
in
daa
mov
cmc
xchg
mov
mov
out
outsl
scas
mov
jns
xchg
mov
lods
das
clc
push
iret
out
ja
add
cs
inc
adc
movsb
pop
fistps
mov
stc
sub
jmp
lea
jne
mov
inc
mov
call
or
sbb
fcomps
dec
je
fldenv
mov
fidivrl
and
subb
mov
jecxz
pop
dec
outsl
rcl
push
jp
cmp
or
nop
int3
shll
out
jnp
fnstenv
pop
xorl
and
xor
xchg
push
outsl
dec
sbb
inc
push
popf
mov
movsl
jle
repz
scas
push
push
jle
mov
repnz
out
cmpsb
push
inc
add
cltd
and
jle
ljmp
or
xchg
gs
pop
mov
daa
xchg
repz
add
aad
enter
pop
jl
push
sub
out
mov
sahf
mov
rcll
or
mov
inc
fadds
jg
cmp
xorb
pop
xchg
and
mov
jne
jp
sub
nop
dec
mov
cmp
dec
adc
fisubs
mov
clc
dec
push
es
add
jo
ficoms
fldcw
int3
or
call
push
scas
cmpxchg
add
dec
inc
dec
popa
jo
je
imul
sar
jmp
mov
sarl
outsb
and
add
hlt
fwait
dec
push
sub
jb
or
add
repz
test
inc
dec
adc
in
lret
mov
xor
jnp
cmp
shlb
lret
push
insb
jmp
mov
test
sub
inc
into
xchg
mov
rcrl
nop
mov
mov
inc
imull
test
dec
push
js
mov
fldcw
pop
scas
int
mov
aas
faddp
cwtl
dec
mov
sub
fs
jb
cmc
pushf
pushf
cmp
pushf
push
lea
ja
pushf
add
add
clc
cmp
push
lea
jne
call
lea
ja
jmp
pushl
popl
pushl
mov
pushf
push
pushl
ret
mov
cmpsl
adc
inc
ljmp
mov
in
and
add
call
mov
lock
mov
sub
add
cmpsb
test
mov
xchg
xchg
popa
pop
jbe
decb
jp
jae
push
push
cs
jne
nop
xchg
xor
dec
arpl
fstpt
cmpsl
push
xor
out
add
in
loopne
jns
dec
xchg
sub
cli
rorb
jge
and
jg
pop
pop
xchg
sti
and
sbb
cmpsb
adc
rclb
aam
add
xchg
mov
pop
ficoml
jge
or
mov
jg
rolb
xchg
addr16
in
and
jmp
test
dec
testl
add
out
or
jbe
sub
pop
or
inc
inc
test
ss
insl
jecxz
xchg
sub
pop
push
sub
movsl
mov
sub
jle
and
jns
and
push
xchg
in
push
cmp
sbb
pop
ja
stc
fisubl
adc
movsl
adc
cld
dec
or
xor
mov
in
movsb
xor
repz
es
cmpsb
cmp
popa
testl
into
outsb
cmpsl
pushl
rcrb
mov
cmp
pushl
popl
cmc
cmp
jmp
push
out
cmpsl
adc
pop
push
pushf
xchg
add
imull
push
enter
lods
push
pop
rcll
imul
mov
cmp
rorb
push
pop
jno
je
and
fisubrs
popa
adcl
pushf
pop
lods
aam
push
jl
mov
cmp
clc
out
clc
xor
adc
and
or
fwait
and
fs
enter
in
lds
and
dec
mov
leave
nop
out
mov
movsb
into
jp
loop
push
in
add
push
fistpl
lock
hlt
cmpsb
inc
lods
fisubs
jp
or
dec
cld
mov
cmp
xabort
loop
addb
icebp
mov
decl
mov
or
and
xchg
pop
push
sahf
push
xor
pop
hlt
or
adc
test
sbb
pop
or
jge
sub
inc
jp
cmc
test
dec
sbb
inc
dec
sbb
dec
loopne
fstps
cli
jg
adc
pop
and
or
mov
push
pop
inc
popf
jnp
addr16
or
fldcw
enter
pop
cmp
shll
loop
jns
mov
pop
hlt
repnz
push
inc
and
outsb
add
jno
jne
cmpsl
xor
cmp
or
pop
push
lods
icebp
addl
inc
fmuls
jae
mov
push
fldl
cmp
dec
les
push
daa
inc
cwtl
aaa
xor
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
call
lea
jb
pushf
bt
test
cmp
jmp
jmp
jge
jnp
adc
inc
sub
inc
and
push
xor
lock
in
popa
mov
stc
xchg
dec
test
iret
pop
ret
push
mov
iret
add
frstor
dec
xchg
popf
xchg
sbb
and
scas
movsl
sub
popa
das
sbb
shr
test
stc
dec
loopne
mov
je
mov
fcmovne
dec
shl
fisttpll
xor
js
cmp
rolb
mov
push
xchg
xchg
and
ficoml
inc
dec
imull
and
jne
xchg
and
mov
rol
add
rol
bsf
sub
bswap
sar
mov
call
lret
imul
imul
mov
jnp
leave
pop
or
xchg
jnp
arpl
stc
pusha
pop
out
lds
and
inc
fst
sbb
xor
mov
andl
call
or
add
mov
cltd
jno
enter
sbb
xor
aas
cld
lea
mov
int
clc
mov
hlt
jns
mov
pop
ja
decb
loope
cmp
cs
imul
jbe
push
out
inc
cmp
test
add
add
std
adc
add
inc
and
xchg
pop
jle
pushf
lea
jmp
add
inc
gs
je
arpl
bound
arpl
add
push
gs
js
gs
imul
gs
add
push
gs
jb
popa
je
dec
gs
js
add
ret
fisttps
and
mov
sbb
and
lea
jmp
mov
push
lea
jmp
add
push
gs
outsb
push
gs
js
gs
imul
gs
movzbw
push
lahf
mov
lea
bswap
seto
movzbw
lea
pop
lea
pop
pushf
mov
pusha
mov
push
push
mov
mov
pushl
push
pushf
pushl
ret
adc
lods
adc
sub
pop
loope,pn
or
sub
pushf
and
push
jae
into
sbb
lock
in
jae
imul
lock
cli
and
lock
cmp
pop
rclb
sbbb
pop
mov
pusha
push
xor
inc
or
fidivrl
xor
adc
and
cmp
add
lret
out
mov
in
in
sbb
or
fs
in
xchg
arpl
lret
jp
push
fildl
add
add
dec
sti
iret
fbld
or
mov
cmpsl
ds
cmp
sbb
ficompl
mov
mov
dec
out
dec
inc
push
mov
push
jg
fsubrl
jno
sbb
fs
rorb
push
xor
cltd
fwait
outsb
push
or
mov
jns
in
mov
jcxz
add
js
jmp
outsl
mov
in
adc
cmc
fs
cs
pop
outsl
ss
inc
insl
movsb
sub
inc
xor
scas
xchg
pop
mov
push
int3
pop
push
mov
bound
incb
mov
or
popa
cltd
inc
mov
inc
add
adc
popa
xchg
xchg
jl
mov
xor
cmpsb
mov
cmp
xchg
aam
and
or
fisttpl
sbb
and
jle
sub
les
hlt
lcall
mov
dec
adc
dec
jle
add
sub
xchg
in
push
arpl
mov
and
inc
test
inc
jle
pushf
adc
ficompl
cmc
les
xchg
popa
xchg
scas
push
jo
sahf
lock
push
std
je
mov
xor
add
sbb
lcall
push
sbb
lret
and
ljmp
cmp
pop
or
arpl
mov
mov
cmp
cmp
and
adc
mov
sbb
test
inc
cmp
mov
in
imul
popa
and
inc
adc
mov
and
pop
inc
ds
rcr
sbb
in
pop
daa
stos
sub
pop
leave
fiaddl
or
and
shll
test
or
aam
je
add
add
dec
out
add
ret
push
mov
mov
adc
lods
test
dec
jne
pop
into
add
mov
bt
test
add
cmc
bt
shr
or
mov
clc
btr
add
call
add
push
outsb
fs
gs
popa
addr16
add
mov
nop
lds
push
call
dec
push
push
dec
dec
dec
cs
push
push
add
add
dec
arpl
imul
jae
jb
jns
outsb
jne
cmc
cmp
stc
sub
cmc
or
push
movb
lea
je
call
add
inc
jb
ja
gs
inc
add
add
imul
test
add
jmp
pop
xlat
test
out
aad
jb
daa
pop
cld
push
fmuls
fcmovnb
mov
mov
sahf
inc
or
mov
dec
and
inc
mov
lods
pop
pop
outsl
and
xor
xlat
sub
mov
filds
jno
inc
loop
xchg
jne
lods
add
sub
and
and
pushf
lret
xor
std
sbb
pop
pop
ljmp
and
and
imul
mov
andl
and
movsl
sbb
mov
dec
scas
xor
lret
add
pop
pop
pop
fwait
jo
pop
mov
dec
cmp
out
push
lods
jnp
pop
cmp
jecxz
xchg
pop
push
or
jnp
or
mov
sub
mov
adc
pop
dec
mov
stc
lret
adc
jle
mov
fnstenv
jge
int3
mov
push
nop
pop
jge
sarb
lock
rcrb
clc
andl
sbb
mov
movsb
mov
cltd
movsb
pop
rorb
stos
testb
mov
sub
repnz
and
dec
shl
loope
repnz
insl
jle
add
fldcw
adc
xchg
les
mov
int3
mov
and
ret
movsb
adc
nop
int
testb
fldcw
cmp
xor
pusha
test
insb
or
mov
sbb
mov
movsl
xchg
add
inc
outsl
dec
outsb
imul
add
mov
aaa
imulb
pop
out
mov
add
push
pop
out
push
and
adc
jb
leave
ds
xchg
mov
insb
je
dec
dec
cmp
div
mov
add
repz
out
mov
dec
bound
mov
fwait
jae
daa
lods
leave
das
sbb
popa
cmp
pop
mov
mov
movsl
sub
mov
xlat
xor
stos
push
xchg
sub
sub
out
push
add
add
mov
cwtl
aad
or
jmp
fidivrs
lahf
testl
mov
lods
dec
sbb
add
outsl
bound
inc
jb
gs
xchg
in
mov
dec
fsubrl
inc
insl
lret
icebp
mov
lock
inc
jge
jns
lock
cmc
mov
pop
xlat
mov
ss
and
xchg
and
mov
fcmovnb
jns
xlat
mov
and
aad
hlt
icebp
mov
ret
cmp
push
lock
rorl
fsubs
mov
mov
adc
mov
lret
sub
icebp
pop
sbb
push
lock
mov
aaa
push
sbb
adc
in
xlat
add
sbb
stos
add
pop
or
out
movsl
repz
xor
or
test
loop
or
mov
sub
gs
fcoms
push
pop
addr16
in
dec
loop
aaa
and
call
or
divb
push
inc
mov
dec
data16
stc
inc
int
fcmovnu
jecxz
xchg
icebp
leave
mov
adc
nop
adc
jae
cmp
bound
cmpsl
pop
std
fldt
orl
push
out
aas
xchg
dec
mov
mov
inc
aaa
int
xchg
loopne
push
lret
pop
repz
inc
out
das
int3
aaa
rorb
testl
cld
stos
mov
in
push
ja
pop
cld
test
xchg
enter
rcrb
cmp
ja
adc
das
int3
clc
sbb
and
mov
outsb
jge
shrl
addr16
mov
mov
test
pusha
mov
sahf
mov
std
inc
or
or
bound
mov
inc
fisttps
pop
pop
push
mov
push
xor
xchg
mov
shr
push
in
jne
mov
mov
lods
add
push
push
mov
lret
shll
loopne
sub
jg
dec
das
int3
add
xchg
sub
mov
xlat
in
mov
divb
dec
push
out
cli
mov
sbb
mov
int
and
movsl
xlat
dec
fldcw
adc
add
into
add
jno
pop
fistpll
mov
mov
shrl
movsl
clc
adc
xchg
jmp
add
in
aam
dec
pop
pop
dec
cli
mov
dec
xor
aas
add
xchg
clts
aad
push
pop
jle
std
sub
mov
add
je
outsl
insb
jne
gs
outsb
outsw
jb
popa
je
outsl
outsb
inc
add
test
test
pushf
add
pushf
cmp
push
pushf
lea
jb
call
lea
jae
pusha
pushf
lea
jmp
pop
xor
adc
decb
ja
jl
push
jno
cmp
pop
sub
pop
inc
in
enter
mov
movsb
mov
fwait
and
incl
jae
gs
add
outsb
ret
dec
push
cmp
lea
pop
ja
pop
incl
js
lods
and
stos
push
dec
dec
iret
cmp
push
pushf
jmp
add
inc
jb
popa
je
inc
imul
add
xchg
sub
add
mov
rorb
add
add
add
pusha
lea
jmp
outsl
fwait
sbb
mov
push
pushf
stos
jmp
cmp
push
iret
clc
sub
push
adc
push
push
cmp
push
push
lods
stc
xor
shrl
mov
shlb
cltd
pop
test
bound
ret
loopne
lds
dec
jb
sub
pushl
repnz
cmpsl
xchg
mov
pop
xchg
cmp
add
dec
out
xchg
outsb
lea
imul
stos
loopne
xor
add
aad
psubusw
sahf
mov
sbb
jb
mov
jecxz
sbb
push
imul
mov
imul
int
adc
popa
add
sarl
popa
cmpsb
inc
movsl
es
ret
stos
jns
das
lcall
mov
dec
cmp
jecxz
ja
inc
pusha
cmp
pushf
mov
jl
pop
insb
cs
jecxz
xor
std
lahf
imul
ljmp
pop
or
cli
and
or
imul
jo
push
push
scas
lret
imul
jo
mov
dec
and
sbb
mov
cmp
xor
xlat
xchg
dec
jmp
cmc
addr16
dec
mov
movb
pushf
pushf
pushl
ret
add
dec
jae
imul
cpuid
nop
jmp
and
mov
dec
inc
or
sub
loop
cmpsl
mov
in
adc
cmpl
out
cltd
call
adc
test
out
mov
mov
jae
aam
add
xchg
int
aas
icebp
and
in
adc
jge
inc
or
loopne
push
xchg
pop
sbb
adc
jae
leave
or
inc
sahf
and
pop
xchg
sbb
adc
imul
out
inc
and
mov
mov
adc
mov
jl
fstps
ds
sub
popf
in
cmpsb
imul
in
jmp
movl
pushf
push
movl
movb
pushf
lea
jmp
pusha
push
pushl
popl
pushl
push
pushl
ret
dec
dec
inc
inc
push
push
xor
cs
insb
add
not
jmp
add
push
gs
gs
popa
insb
jne
inc
js
add
add
jb
insl
jo
add
cmp
movzbw
pop
lea
cwtl
pop
cwtl
mov
call
lea
je
pushf
sar
add
btc
or
bts
sets
mov
bt
bt
test
bt
add
jmp
jmp
push
outsl
jb
jns
and
jae
popa
jo
insb
imul
and
outsb
outsb
outsl
je
jb
outsb
and
fs
popa
and
jb
jne
insb
and
arpl
outsb
gs
add
gs
je
inc
jbe
outsb
je
add
xor
neg
sub
cmc
sbb
push
movzbw
sub
aas
push
inc
sbb
aad
lea
push
add
lahf
dec
bt
sub
not
pushf
pushf
lea
pushf
push
pusha
mov
pushl
movb
movb
call
bt
or
push
push
call
add
inc
gs
je
imul
inc
add
add
je
je
imul
push
add
cmp
movb
data16
pop
cmp
mov
icebp
loope
fcoms
add
pop
je
fs
outsl
dec
lret
or
sub
add
icebp
aam
mov
dec
cltd
popa
inc
in
loope
adc
fistpll
mov
lods
add
sbb
or
mov
ds
push
mov
mul
ss
pusha
aam
mov
test
insl
and
aam
add
shll
add
xchg
mov
inc
mov
jmp
push
mov
pushl
pushl
ret
call
add
push
imul
popa
jae
inc
add
add
je
jne
jb
outsb
je
push
add
mov
sub
mov
movl
push
jmp
add
push
gs
arpl
push
arpl
fs
jbe
neg
sub
rcl
add
mov
cmp
mov
clc
sbb
shl
add
sar
stc
dec
rcl
shr
cmc
xchg
stc
bswap
mov
dec
not
btc
add
bswap
mov
mov
push
mov
mov
not
not
not
lods
jge
bt
sub
pusha
not
call
pushf
sub
push
lea
jmp
add
push
gs
push
push
jb
outsl
jb
je
add
mov
pop
ret
mov
mov
mov
fstps
xorb
pushf
insb
mov
dec
aad
jb
rcrb
mov
and
inc
aam
xor
cmp
mov
gs
mov
push
lea
ja
pusha
jmp
mov
dec
jno
movsl
insb
sbbl
xchg
loope
lods
adc
das
ss
mov
call
cmp
pop
jns
rcr
inc
cltd
and
mov
mov
lods
lods
push
mov
mov
xor
sahf
push
push
inc
push
xor
cs
insb
add
and
add
je
insb
popa
jae
dec
outsb
outsw
inc
add
add
je
jb
jo
add
data16
mov
sub
lret
fs
pushf
inc
rcll
insb
es
mov
popa
lds
xchg
push
adc
lods
xlat
lock
pop
shlb
hlt
aad
cli
popf
inc
shrl
hlt
in
mov
popa
es
jecxz
mov
in
xchg
push
sar
or
mov
outsl
lea
and
lods
mov
mov
popf
inc
ror
mov
repnz
popa
sarl
popf
xor
adc
hlt
out
nop
mov
mulb
cli
mov
stos
mov
or
shlb
ja
jnp
test
fimull
imul
pop
test
jno
pop
sbb
dec
add
call
mov
push
mov
mov
push
or
cltd
orb
cmp
sahf
insl
imul
imul
xchg
pop
adc
add
insl
outsl
jbe
push
jb
jo
add
daa
lahf
lcall
pushf
pop
mov
out
inc
pushf
arpl
mov
push
add
push
mov
and
jp
dec
sbb
push
mov
pop
sub
test
jge
cmpsl
ret
inc
ja
int
gs
ja
lds
xlat
inc
cmp
test
lahf
unpcklps
xchg
test
dec
sbb
jns
negb
daa
pop
add
jl,pn
sbb
jecxz
test
mov
push
aaa
rol
shl
sub
bts
daa
mov
neg
cmc
add
shr
rcl
inc
push
mov
movb
bt
test
jmp
add
push
imul
outsl
dec
jne
je
inc
jns
add
add
inc
imul
jae
popa
addr16
add
adc
pop
fstpl
and
out
fnstcw
test
fimull
jp
outsl
push
sub
or
or
stc
xchg
ds
sub
or
mov
leave
cmp
in
mov
push
or
addr16
xor
outsl
incl
test
xchg
sbb
jno
xlat
jns
notb
loopne
mov
aam
push
pop
loop
outsl
dec
je
mov
sub
xchg
add
je
jne
jae
jb
outsl
jae
add
inc
imul
xor
mov
jnp
sbb
test
cmp
mov
inc
add
xor
movsl
insb
cmp
or
or
andl
cmc
sahf
dec
hlt
xchg
add
es
jecxz
enter
sub
xor
mov
outsb
and
dec
mov
xchg
add
iret
sub
sti
rorb
ss
data16
and
rcrb
je
inc
enter
jb
lcall
jecxz
in
pop
fs
lods
jno
add
insb
nop
xchg
int3
xlat
outsb
and
daa
cmp
in
out
lahf
xchg
scas
pop
in
push
shll
iret
xchg
fimull
adc
push
mov
add
lock
mov
cwtl
lea
movl
movsbw
not
movzbw
lea
jmp
add
dec
gs
popa
addr16
outsl
js
add
mov
mov
pushf
movsbw
lea
movb
jmp
add
inc
imul
dec
gs
popa
addr16
add
dec
jno
addr16
in
cmp
fnstenv
sub
xor
sbb
dec
push
sub
testl
cmpsb
push
jge
repz
push
push
inc
sbb
pop
push
insl
add
lods
xchg
mov
fwait
add
mov
xor
add
xchg
jae
mov
mov
cmp
imul
fimull
shlb
add
call
dec
fsts
cltd
inc
fstl
cmp
inc
icebp
popl
push
lock
lret
stc
sub
mov
push
jns
aas
mov
gs
fstpt
push
inc
jge
ja
xor
jle
mov
xor
xchg
and
in
sbb
pop
xor
xor
in
inc
sbb
icebp
std
xlat
popa
out
mov
fwait
add
xor
cltd
and
ficoms
imul
push
push
push
in
sbb
xor
into
pop
loopne
fcompl
xchg
mov
sahf
push
jbe
sub
adc
fbstp
jb
cmpl
sub
mov
push
hlt
inc
pop
jmp
add
push
sbb
icebp
ret
stc
or
push
cli
cmp
into
addl
pop
mov
je
and
adcl
sub
int3
leave
fwait
mov
or
sub
div
mov
outsl
mov
add
test
xor
mov
test
js
push
mov
pop
pop
dec
sub
mov
aas
sbbb
gs
push
adcl
mov
inc
les
popf
loopne
outsl
jnp
lahf
ds
scas
adc
aas
call
cmpsl
or
xchg
fwait
notb
call
cwtl
sub
iret
popf
adc
insb
inc
xor
in
sbb
dec
fadds
fildl
push
cmp
arpl
sbb
mov
mov
pop
and
pushf
lea
ja
ror
sub
bsf
add
cmp
btr
bsf
rol
mov
rcl
mov
pushf
call
add
inc
gs
jns
inc
outsl
insb
outsl
jb
int3
popf
call
push
fs
rcll
add
xlat
add
inc
ja
fildll
pop
and
test
ret
cmp
inc
loopne
popf
inc
inc
aad
les
mov
push
hlt
sbb
cltd
jg
mov
lret
repnz
push
push
aaa
sub
mov
mov
into
jbe
js
inc
outsb
xor
iret
movsb
mov
test
lea
jle
in
arpl
sub
push
pop
ret
mov
out
inc
or
roll
jg
pause
adc
xchg
aaa
lahf
inc
outsb
xor
push
inc
les
sbb
negb
stc
insb
fisubrs
daa
bound
cmp
push
mov
jae
mov
add
mov
cmp
mov
cmp
xlat
mov
in
xchg
and
add
and
mov
inc
lods
lcall
mov
movsl
movsb
xchg
jp
lock
fidivs
mov
adc
sbb
daa
mov
lods
fistpll
adc
inc
dec
repnz
adc
out
sbb
adcl
test
sbb
loopne
mov
movsw
xchg
or
pop
jecxz
test
insl
fmulp
in
push
mov
pop
mov
fwait
gs
cld
jg
jno
xchg
leave
xor
dec
adc
repnz
push
sbb
loope
iret
in
xchg
sub
and
mov
out
dec
add
ljmp
cli
imul
lods
cs
add
btr
xor
mov
test
clc
bt
cmc
cmpb
call
sub
stc
stc
call
imul
dec
sti
fisttpl
cltd
pop
sub
dec
pusha
repnz
push
lds
fsubrl
push
stos
and
pop
mov
shrb
int3
jno
jns
mov
aad
xchg
mov
push
jle
xorl
jo
clc
or
inc
popa
push
ret
fs
ja
fsubrl
sub
mov
into
in
lods
cmp
ret
daa
jge
sbb
sbb
lahf
mov
repnz
push
cmp
adc
xor
jge
jecxz
repnz
fldenv
xchg
xchg
dec
push
cld
and
sbb
mov
pop
mov
mov
xor
add
or
faddl
lock
notb
mov
mov
imul
xchg
dec
mov
xor
gs
ss
and
sbb
sbb
lods
pop
and
out
jl
nop
pop
mov
xchg
inc
pop
mov
pop
pop
pop
and
iret
lds
into
adc
mov
mov
jo
lods
mov
add
mov
jo
mov
xchg
xlat
jbe
mov
iret
in
sub
pop
les
dec
cmp
jl
test
aaa
mov
daa
inc
mov
icebp
ds
jo
ret
sub
loope
xchg
inc
out
cs
cmp
clc
aad
test
shrb
stos
cltd
arpl
std
fwait
mov
jg
pop
pop
sbb
xchg
xchg
sub
rcrl
pop
insb
xchg
jle
jmp
fistpll
push
outsl
sbb
out
lods
adc
mov
jmp
mov
cmpsb
mov
xchg
ret
mov
adc
lahf
test
or
insb
adc
pop
sub
cmp
nop
xor
lahf
popa
cmp
lcall
sub
or
ret
out
mov
push
pop
add
loope
das
inc
dec
loop
insl
orl
mov
arpl
mov
xchg
push
lods
add
inc
jb
popa
je
push
outsl
insb
imul
sub
inc
lds
dec
or
adc
clc
mov
pop
dec
mov
fiaddl
push
jecxz
adc
stos
xor
mov
arpl
lock
js
outsb
mov
loope
cmpsb
mov
in
push
inc
repnz
push
add
cli
mov
inc
pop
jne
jae
mov
sahf
das
jb
popf
add
xor
mov
pop
jp
adc
insb
xor
sbb
in
mov
push
clc
aaa
xchg
int3
fwait
cs
inc
push
inc
push
dec
xor
cs
insb
add
add
outsl
bound
inc
insb
popa
addr16
add
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
clc
call
pushf
movl
jmp
movl
jmp
add
inc
insb
outsl
bound
inc
gs
gs
inc
je
insl
add
rcrb
or
repnz
pusha
pushf
lea
jne
neg
stc
mov
movsbl
test
bts
sub
bsr
lea
mov
call
add
inc
insb
imul
arpl
outsb
add
add
popa
jo
insb
insb
outsl
arpl
add
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
add
jo
inc
imul
gs
outsl
arpl
push
imul
adc
ja
fs
adc
shr
adc
xchg
and
and
and
sub
aaa
pop
and
mov
fcmovbe
or
mov
mov
adc
inc
push
mov
pushf
pushf
or
push
insb
aad
push
movsl
pmaxsw
ljmp
adc
and
inc
or
nop
stos
subb
dec
les
ffreep
sbb
les
mov
arpl
or
sub
repz
out
notb
bnd
and
pusha
lea
jb
pusha
pusha
bt
call
call
pushf
call
add
push
arpl
gs
imul
inc
js
inc
js
in
pop
pop
enter
or
mov
stos
popa
test
mov
xchg
jmp
and
imulb
jne
test
shrl
loop
popf
test
cli
mov
std
in
xchg
icebp
test
outsb
insl
sbb
ljmp
int3
sub
js
lea
xchg
mov
and
add
and
jae
movsbw
adc
mov
or
mov
movsbw
mov
cmp
mov
jmp
imul
adc
sti
stos
pop
out
in
shlb
push
maskmovq
testl
lret
jae
das
inc
or
fimuls
push
ss
popf
repz
mov
stos
dec
fs
js
sub
cmpsl
ja
in
stos
or
loop
into
je
mov
ret
outsb
pop
push
and
loope
cs
push
out
mov
clc
add
inc
jb
jns
je
imul
test
cmpsb
gs
imul
inc
push
cltd
sub
sbb
in
dec
pusha
inc
dec
push
xor
xchg
loopne
add
je
insb
pop
imul
popl
jl
mov
mov
std
iret
cmp
xchg
js
add
dec
rorb
push
mov
scas
movsb
sub
sbb
jbe
jmp
dec
popf
xor
or
push
cmp
cmpl
iret
mov
pop
fnstenv
mov
adc
dec
push
loope
fldenv
and
fadds
or
lds
inc
mov
test
in
rolb
imul
push
push
mov
adc
dec
xor
mov
aam
mov
jno
aaa
out
xchg
enter
into
test
ret
in
pusha
into
mov
and
jo
mov
adc
or
add
pop
mov
in
jge
movsb
movsl
pushf
inc
out
mov
add
insl
and
push
push
loop
mov
pusha
lds
subb
jbe
xchg
jp
add
jl
fsub
pop
add
sbb
test
js
ret
test
iret
sbb
ret
sub
int3
jns
addr16
aam
cmp
adc
mov
ljmp
mov
jmp
sbb
mov
pop
add
movl
pusha
lea
jmp
add
dec
jne
jo
je
bound
push
je
imul
and
add
add
add
adc
add
stos
sbb
add
add
add
lea
add
sbb
add
lods
sbb
add
sbb
add
add
add
sbb
add
sbb
add
add
add
sbb
add
add
add
add
add
clc
sbb
add
add
add
add
add
sbb
add
add
add
add
add
nop
sbb
add
adc
add
sbb
add
movl
setl
lea
movb
pusha
movw
movl
call
lea
jae
clc
rcl
bsf
pusha
mov
test
stc
adc
mov
pushf
mov
bt
xor
movw
pushf
push
repnz
call
call
add
inc
insb
outsl
jae
push
jb
outsb
je
jb
lea
call
jecxz
xor
adc
sub
data16
sbb
xchg
sar
add
out
sti
icebp
imul
rclb
into
mov
mov
outsb
jae
iret
mov
data16
sbb
pop
cmp
mull
or
sbb
cs
in
jbe
mov
cmp
xchg
in
dec
loop
rcr
lret
adc
enter
lret
dec
sbb
xlat
insl
mov
cltd
push
in
jle
pop
into
xchg
or
sbb
lret
pop
jns
out
gs
xorb
popf
rol
dec
sbb
pop
test
cmp
sahf
pop
adc
aas
adc
add
inc
gs
outsl
jo
imul
add
je
arpl
gs
imul
in
lret
adc
nop
pop
pushf
mov
mov
ds
fldenv
sbb
ljmp
lods
fildl
out
pop
xorl
jo
ret
imul
icebp
ss
imul
pop
jns
jmp
cltd
js
adc
inc
add
add
xchg
stos
shll
nop
cltd
push
and
rcll
cmp
inc
mul
out
imul
mov
scas
pop
pop
call
pop
lock
incb
popf
jmp
imul
xchg
popf
insb
push
cmp
mov
xchg
das
daa
popf
inc
movzbw
movsbw
pushl
popl
movsbw
pop
mov
jmp
add
inc
imul
outsl
dec
outsl
arpl
inc
imul
jmp
add
dec
jne
je
inc
jns
gs
outsl
push
imul
test
add
pushf
mov
lea
je
cmp
jmp
sbb
push
repnz
repnz
enter
stos
jmp
jbe
push
repnz
pop
out
xchg
push
repnz
je
sbb
xlat
push
repnz
data16
jmp
adc
mov
sarl
repnz
jl
test
push
bnd
jae
xchg
xchg
jmp
adc
repnz
inc
pop
xchg
pop
ljmp
insb
fbstp
mov
ljmp
pop
xchg
insl
xchg
jmp
adc
repnz
xchg
push
repnz
push
and
shrl
mov
adc
repnz
test
in
jmp
data16
repnz
popa
add
inc
shr
roll
pop
jno
mov
push
cs
push
jmp
out
filds
repnz
add
jmp
adc
bnd
pop
xchg
loop
shrl
fcom
cltd
xchg
jmp
lret
repnz
jmp
repz
repnz
test
rcrl
repnz
xchg
lods
jp
xchg
jmp
test
push
repnz
inc
add
cmp
shrl
aad
push
jmp
scas
fldl
repnz
cmp
in
shl
push
repnz
jmp
js
push
repnz
xchg
jmp
adc
repnz
imul
mov
and
dec
movsl
push
jmp
mov
push
repnz
jmp
rcr
repnz
mov
aad
pop
out
test
push
repnz
and
filds
push
bnd
test
push
repnz
movsb
cmp
jmp
jnp
push
repnz
and
rcll
faddl
mov
push
repnz
mov
xchg
jmp
adc
repnz
std
fs
out
sub
js
push
bnd
pop
add
xchg
jmp
adc
repnz
push
xchg
pop
out
mov
push
repnz
add
sbb
sarl
repnz
lods
lods
adc
imul
rcr
push
repnz
cmp
jae
test
sarl
repnz
jl
mov
loop
repnz
jno
shll
push
bnd
fwait
adc
xchg
push
repnz
push
scas
pop
sbb
push
repnz
and
sub
cmc
cmp
mov
lea
ja
call
pusha
pushf
lea
jbe
btc
sbb
mov
add
lea
adc
test
add
cmc
mov
mov
add
pushf
add
bt
movl
rol
rol
mov
add
jge
cmp
push
push
call
movw
movl
pushf
lea
jmp
add
push
gs
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
jmp
rclb
dec
mov
add
fwait
leave
flds
xchg
xor
and
push
pop
sahf
sbb
popf
jl
and
xchg
addr16
xchg
xchg
xchg
insb
jo
and
mov
stos
cmp
dec
pop
cli
dec
outsb
gs
sbb
mov
mov
rcr
cmpsl
or
add
imul
inc
jb
je
arpl
push
arpl
outsb
add
add
fs
xor
inc
imul
and
into
call
add
push
gs
jb
outsl
jb
outsl
fs
dec
rclw
dec
ljmp
mov
jne
test
rcrb
jge
test
mov
mov
dec
decb
jno
ficomps
mov
sbbb
xchg
mov
sahf
sub
aam
cmc
or
in
pop
dec
push
stc
or
push
push
push
lea
jne
sbb
mov
push
pusha
call
movl
push
pusha
pusha
pushf
movl
push
pushf
pushf
lea
jmp
push
push
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
inc
gs
imul
je
add
inc
gs
jb
arpl
jae
gs
imul
push
outsb
outsl
ja
call
popf
rdtsc
nop
pusha
movl
mov
movl
mov
movw
lea
jmp
add
inc
gs
gs
inc
insb
addr16
popa
bound
gs
add
or
adc
adc
xchg
lods
lret
cli
jg
pushf
rcr
jae
xchg
ljmp
and
loope
fistpl
iret
mov
push
mov
dec
pop
mov
dec
push
pop
lock
fstpl
and
mov
aaa
daa
xor
nop
mov
stos
cwtl
inc
cwtl
mov
push
into
fidivs
ja
nop
outsb
push
cli
mov
out
in
pop
fcoml
dec
cli
push
jns
fbstp
cmp
data16
ficoml
test
adc
loopne
pop
push
repnz
xchg
dec
or
fidivl
pop
jle
std
dec
mov
lods
or
mov
jecxz
mov
sbb
mulb
jnp
cltd
das
icebp
ret
jae
aad
imul
push
or
lret
aaa
dec
mov
jecxz
popa
sub
sub
dec
and
enter
cli
xor
adc
out
mov
dec
fstl
fwait
sahf
cmc
lcall
loopne
out
sub
xchg
mov
pop
xchg
shl
hlt
inc
adc
fcoml
xchg
int3
and
jb
pushf
cmp
push
repz
js
jle
popa
incb
inc
adc
cmp
into
fnstsw
jge
pop
jnp
jge
xchg
pop
sbb
and
inc
out
fadds
mov
sahf
xor
adc
inc
sub
push
cmc
lods
mov
aaa
data16
sub
enter
aam
aaa
add
push
insb
jae
gs
popa
insb
jne
add
xchg
lret
pushf
lea
jb
jmp
xor
cmp
mov
mov
clc
cmp
cmpb
jmp
pusha
call
cmp
clc
or
call
daa
repz
dec
nop
fdivs
shlb
int
fnstenv
xor
dec
cmp
jno
mov
xorb
repnz
push
or
jle
jns
pop
mov
icebp
ljmp
popa
and
pminub
xchg
mov
jp
int3
pop
mov
mov
cwtl
mov
dec
push
inc
fistpl
loopne
imul
movl
js
push
xchg
cmp
inc
iret
call
into
popf
add
sbb
jbe
sub
cmp
inc
cmc
jl
add
inc
outsb
popa
bound
outsb
jne
je
insl
add
add
outsl
bound
push
outsb
insb
outsl
arpl
movl
push
pushf
lea
jmp
sbb
inc
stc
mov
bsf
push
mov
pushf
test
call
cs
aad
dec
dec
dec
movsb
or
inc
stc
jp
cmpsl
add
and
add
addb
adcb
sbb
adc
cli
int3
sub
flds
imul
mov
xchg
ss
and
mov
and
leave
fs
dec
xchg
outsb
jno
xor
xchg
dec
cmp
push
loope
jno
imul
or
cmpsl
jle
push
pop
dec
inc
in
cmc
and
jns
cmp
sbb
dec
xor
mov
jo
dec
out
aam
jno
xchg
shlb
arpl
pop
cmc
sbb
add
inc
gs
gs
popa
addr16
imul
aad
dec
addb
push
adc
iret
aad
push
loop
mov
enter
test
iret
ffreep
fisubs
push
rclb
test
sbb
scas
hlt
xchg
pusha
push
or
or
add
jae
outsb
fs
push
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
enter
dec
gs
mov
ds
jo
sbb
ret
push
jge
mov
inc
test
loop
repz
scas
dec
and
xchg
push
fcmovu
push
decb
mov
hlt
lcall
inc
cmc
iret
js
cmp
push
movl
pusha
pushf
pushf
lea
jmp
jmp
lea
jne
and
dec
shrd
add
mov
pusha
sub
stc
rcl
pushf
lea
test
test
movb
sub
pushf
pushf
pushf
call
mov
dec
pushf
aam
jns
iret
xchg
dec
inc
mov
xor
xor
enter
rol
mov
imul
out
mov
cld
loop
je
xchg
mov
pop
imul
inc
xchg
cmp
scas
adc
lret
popa
pop
pop
into
or
and
cmp
cld
call
mov
add
je
inc
push
add
add
imul
je
push
jb
imul
imul
inc
imul
jne
arpl
add
lea
jmp
cmp
jmp
lea
je
stc
cmp
add
pushf
call
pushf
movl
pusha
movl
pusha
pushf
mov
lea
jmp
sub
call
inc
imul
jne
je
and
and
jae
jo
outsl
addr16
insl
and
jae
bound
outsb
and
outsb
imul
and
and
jns
gs
and
data16
and
and
push
imul
and
popa
arpl
fs
jae
imul
outsb
daa
je
ja
jb
and
jns
outsl
jb
add
add
popa
insb
inc
jb
add
pushl
jns
fwait
pop
movsl
addr16
adc
fldenv
xor
inc
push
sti
in
adc
sarb
and
push
jb
movl
fdiv
lret
push
xor
icebp
mov
push
add
sub
in
sbbb
inc
jecxz
push
push
gs
lret
fucomip
insl
std
mov
mov
mov
pop
in
push
ficoms
in
test
fchs
loopne
fisubrs
xchg
pushf
pop
lcall
call
add
xor
push
push
call
add
inc
jne
insb
imul
outsb
fs
add
add
add
push
imul
insb
insb
outsl
arpl
or
arpl
mov
sbb
loope
mov
or
int3
push
mov
iret
sub
mov
push
jmp
test
sbb
scas
adc
pop
inc
xchg
fcoml
cmp
jmp
aaa
dec
mov
scas
leave
cltd
imul
notb
pushf
mov
pop
sbb
push
and
mov
icebp
outsl
data16
dec
jo
outsb
push
jb
outsb
je
jb
add
add
jo
imul
mov
fsts
dec
inc
fimull
sbb
cmpsl
cmp
repnz
sub
mov
insl
stos
push
push
pop
and
push
lret
add
sahf
mov
dec
psubb
fstp
sbb
or
aam
mov
add
imul
insb
gs
bound
arpl
add
je
imul
jae
jmp
pusha
movl
push
mov
movb
jmp
mov
call
jmp
cmc
cmp
test
or
pusha
lea
jne
movzbw
mov
cmp
pushf
or
jmp
add
inc
outsl
insl
jo
jb
push
je
imul
jmp
add
inc
js
je
push
add
add
insb
outsl
arpl
imul
je
test
mov
bts
cmp
bsf
sar
add
mov
btr
dec
mov
cmc
call
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
popa
jo
gs
jb
jns
ja
and
adc
outsl
into
or
mov
xchg
cmp
sbb
push
ds
mov
jbe
mov
jecxz
icebp
xor
roll
push
push
xchg
je
cmp
addr16
cs
aam
aaa
pop
xor
sub
inc
push
push
sub
push
lods
fwait
adc
setbe
in
std
or
movsl
roll
dec
outsl
jbe
push
imul
cmp
and
xor
pushf
cmc
cmp
pushl
movsbw
push
mov
lea
pop
pushf
cwtl
mov
push
jmp
mov
xor
gs
stc
adcb
loop
mov
sbbl
aaa
or
jb
cmovo
push
xchg
in
pop
enter
out
mov
xchg
inc
mov
xorb
push
adc
add
jne
outsb
je
jb
jo
jb
imul
icebp
fistl
dec
pop
gs
or
flds
movsb
xor
cld
mov
or
mov
aad
or
push
xlat
push
or
push
push
test
ficomps
out
fldenv
pop
les
adcb
jge
repz
add
repnz
pop
fstps
in
mov
jg
das
adc
shll
mov
xor
insl
in
adc
test
cmp
shr
add
sub
lcall
movsl
movsb
dec
mov
ficoms
loopne
inc
lds
dec
jae
imul
inc
jbe
pop
or
xor
jb
mov
push
xchg
push
aaa
test
in
and
outsl
fidivrs
sbb
pop
fcompl
imul
mov
arpl
fcmovnb
jns
xchg
test
and
jmp
sbb
out
push
mov
stos
imul
mov
js
mov
jecxz
push
add
inc
gs
outsl
jb
addr16
jne
fs
imul
add
je
bound
arpl
cmp
fstl
dec
add
lret
push
das
or
lock
adc
lods
mov
rolb
repnz
das
inc
insb
mov
mov
jne
mov
push
jle
xor
cltd
icebp
mov
dec
lcall
mov
cmp
stos
int
xchg
test
or
std
int
popf
or
out
push
or
in
jl
xchg
add
inc
arpl
xchg
jbe
cs
insl
lea
mov
adc
dec
jl
push
sbb
jo
or
pop
popa
jno
push
out
xor
dec
mov
push
sub
lea
jge
pushf
not
pusha
call
pushf
pushl
mov
push
push
lea
jmp
lea
jb
push
bt
push
push
cmp
pushf
pusha
lea
ja
cmp
xor
add
pushf
pusha
shr
sub
mov
test
cmp
push
call
add
inc
jae
popa
jo
add
call
cmpsl
xchg
ficoms
dec
pop
mov
mov
xor
sub
inc
and
inc
adc
pop
repnz
test
sbb
test
ljmp
add
imul
mov
xchg
cmpsb
mov
fisubs
negb
cli
icebp
mov
imull
push
jne
or
sbb
xor
and
ret
fstpl
lahf
jbe
outsb
push
fmuls
ljmp
push
repz
sti
testb
xchg
mov
repz
xchg
roll
inc
clc
stos
inc
inc
xor
lods
jmp
or
repnz
lods
fs
mov
lcall
jmp
add
inc
push
outsb
jne
je
insl
add
test
movl
push
call
add
inc
gs
insb
popa
jae
dec
popa
insl
gs
add
mov
push
add
test
pushf
pushf
pusha
movzwl
sub
shld
push
mov
test
cmp
clc
add
cmp
sub
jae
bt
stc
mov
pusha
test
jmp
pushf
pushf
jmp
add
dec
outsl
popa
fs
imul
pushf
imul
bt
movb
cmc
add
pushf
movb
push
pushf
lea
jmp
shl
sub
jmp
shld
stc
not
push
aaa
aas
setb
btc
mov
shrd
shld
sub
sub
push
rcl
push
cmc
btc
push
call
add
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
dec
inc
push
dec
xor
cs
insb
add
mov
pushf
pushf
pusha
pushf
lea
jmp
call
add
push
gs
arpl
insb
gs
add
rol
and
or
mov
repnz
pushf
jmp
scas
add
out
movsb
dec
mov
lret
pop
out
popa
push
xchg
loope
sahf
psubw
popa
fstpl
mov
bound
loopne
es
dec
int3
pop
xchg
je
hlt
lcall
stos
or
test
add
fstps
jb
data16
push
xchg
call
clc
leave
popa
mov
sub
daa
fdivrp
es
xchg
mov
shl
adc
sbb
push
in
lret
adc
push
xchg
dec
pop
mov
sbb
fptan
mov
and
sbb
xchg
imul
andb
adc
cmp
pop
mov
pop
cwtl
push
push
aam
push
push
test
push
movsl
je
cmpsl
sub
jge
movsb
in
pop
test
xor
int3
mov
mov
xchg
xor
cmpl
adc
nop
mov
ds
lret
jecxz
in
sbb
stc
movsl
adc
ja
mov
test
pop
mov
sub
xchg
cmp
and
adcl
lahf
or
and
jne
jmp
outsl
insb
xor
cs
insb
add
add
gs
je
push
outsl
outsl
insb
push
xor
popa
jo
push
sbb
pushf
lea
je
clc
sub
pushf
cmp
call
das
daa
pop
loop
dec
mov
adc
daa
fdivs
dec
and
jmp
mov
pusha
xor
cmp
ljmp
shll
out
pop
aam
int3
ja
adc
mov
jg
mov
xchg
sbb
or
cmp
cmp
sete
dec
push
cmpsl
mov
rcrb
call
xchg
mov
ret
lods
orl
stc
pop
inc
cmp
push
in
fldl
add
inc
adc
mov
ss
and
pop
ret
clc
jbe
dec
fisubrl
adc
pusha
inc
orl
push
xor
into
subb
dec
dec
jp
xor
shl
test
adc
popa
mov
xchg
cltd
out
adcl
lods
jmp
test
test
lock
mov
outsb
adc
jo
insb
jmp
adc
jnp
push
sbbl
insl
movsb
xor
test
mov
mov
in
jmp
in
stos
and
mov
push
push
or
in
ss
cmp
dec
sbb
ret
sti
adc
cmpb
xchg
inc
pop
or
mov
out
fs
mov
xchg
cltd
cwtl
mov
enter
pop
xchg
inc
adc
xchg
lret
jp
inc
pop
jb
popf
inc
or
iret
ja
jns
and
imul
int
mov
enter
decb
scas
xor
ljmp
lcall
pushf
jmp
inc
and
ret
fisttps
add
shr
jecxz
dec
dec
lock
inc
push
cmp
fstps
xor
iret
and
stc
ret
mov
lcall
sti
cmp
scas
pusha
xchg
sbb
test
cld
mov
clc
movsb
leave
leave
cmp
in
cli
adc
nop
fildl
inc
clc
idiv
imul
sub
les
or
sub
dec
ljmp
out
in
call
jns
adc
test
sbb
jmp
lods
fld
fcmovb
mov
out
xchg
or
pop
cs
or
jmp
popa
clts
and
movsb
popa
sub
outsb
mov
das
and
or
mov
subb
scas
sub
ret
adc
ret
push
sub
fmuls
xlat
sub
push
jae
cmpsb
andl
inc
mov
jecxz
ljmp
out
push
dec
in
dec
push
lods
xchg
icebp
rcll
les
and
je
jns
fbld
jo
jne
adc
adc
inc
adc
stos
test
adc
dec
rcrl
xor
imul
out
inc
into
out
insb
mov
aaa
cmpsb
sbb
icebp
or
jle
pop
sub
xor
dec
cld
ljmp
cmp
shl
insb
cs
out
movups
mov
dec
mov
jae
mov
fdivl
es
les
jmp
sub
and
sahf
cwtl
fbld
aas
je
adc
dec
sub
sbb
add
xchg
xor
add
cmp
xor
maxps
sbb
fistpll
cltd
outsl
pop
push
sbb
js
or
pushf
lods
mov
xchg
iret
mov
sub
mov
jns
add
push
jnp
jae
das
jno
nop
adc
and
add
xorl
lret
in
mov
pushf
shl
popa
cltd
lods
add
aas
sar
sbb
mov
addr16
insl
call
inc
popa
mov
fsubr
push
cmpsl
jmp
or
shll
sub
xchg
aaa
rcr
sub
mov
cmp
pushf
clc
pusha
cmpb
pusha
lea
jne
jmp
add
dec
gs
jo
gs
insb
insb
outsl
arpl
pusha
xchg
cwtl
pushf
movl
pop
not
pushl
movsbw
lea
pushl
movl
pushl
pushl
popl
pusha
pushf
movb
push
pushl
ret
std
leave
ljmp
sti
xchg
mov
cld
repz
cmp
dec
dec
sbb
gs
lods
adc
inc
fnstsw
pop
ss
mov
adc
into
cwtl
insb
pop
icebp
cmpsl
insl
sub
xor
popf
push
or
mov
into
inc
dec
fildll
lods
mov
gs
andl
shl
sub
push
in
je
cmp
push
sub
test
fcoml
add
insb
cmp
push
sar
xlat
mov
hlt
inc
inc
fdivrs
and
adc
cmp
stos
sbb
cmp
movl
call
push
sbb
mov
dec
loope
or
push
xchg
fsts
insb
andb
xor
push
xchg
mov
rorl
pusha
pop
mov
je
cmpb
jnp
mov
ret
add
enter
shll
inc
and
daa
clc
xlat
xlat
push
js
adc
xor
lcall
test
mov
nop
das
sbb
lds
jmp
stos
cmpl
pop
sub
pop
movsl
xchg
xchg
cmp
sub
test
sbb
add
inc
insb
outsl
jae
dec
popa
outsb
fs
add
lea
jb
stc
cmpb
pusha
call
add
dec
outsl
popa
fs
imul
add
add
je
jb
jo
add
test
decl
mov
pusha
mov
cwtl
lea
pusha
xchg
pop
call
lea
jne
movzbw
setl
push
mov
pusha
pusha
pushf
push
lea
jmp
cmpb
pushf
jmp
clc
pushf
bt
cmp
push
pusha
call
and
dec
lods
lods
cmp
pop
push
les
xor
xchg
pop
and
push
push
mov
pop
push
jp
cmp
inc
cld
pop
xor
hlt
mov
pop
lret
in
cltd
pop
ret
fucomp
xchg
xchg
sub
xor
loopne
jle
dec
popf
cmp
push
sub
sbb
into
stos
sub
mov
aad
pop
enter
jo
enter
das
push
xor
adc
imul
sahf
dec
or
scas
outsb
and
sti
imulb
movsb
out
and
push
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
xor
mov
pushf
mov
pushl
ret
lea
je
lea
not
mov
setl
lea
pusha
movw
lea
movb
pushl
pushf
mov
call
clc
add
pushf
mov
pusha
lea
jmp
movb
jmp
add
push
popa
imul
jo
imul
gs
popa
jo
outsl
fs
hlt
mov
pushf
movb
mov
movl
call
pushl
pushl
mov
mov
mov
mov
pushf
pushl
ret
movw
movl
call
xchg
js
ljmp
jge
jp
mov
mov
lahf
cmp
cmp
sti
rcrb
sub
shrb
push
sahf
push
test
dec
inc
add
dec
je
std
lahf
jle
ficomps
jmp
loopne
popa
pop
dec
pop
cmc
jecxz
dec
fnstcw
adc
jo
in
ljmp
stos
xchg
mov
adc
ds
mov
addr16
sub
cmp
xchg
dec
lahf
adc
es
int3
ljmp
testl
push
mov
out
mov
icebp
loop
xchg
jae
inc
imul
cltd
je
mov
push
lock
negb
pop
cmp
mov
call
lret
mov
js
daa
cld
nop
fsubp
sbb
enter
iret
testb
frstor
cld
call
scas
pop
or
movw
xchg
pusha
jmp
pop
push
sub
adc
cmp
dec
sbbb
inc
jmp
fisubrl
push
aaa
pop
int
push
ljmp
popa
sub
outsl
sbb
and
in
mov
aam
outsb
push
or
cltd
bound
mov
xor
fcmovb
insb
pop
and
leave
fiaddl
xor
inc
js
pop
add
mov
cmp
or
xchg
arpl
sbb
test
xchg
inc
xchg
inc
lret
sub
jae
jp
int
sbb
mulb
push
daa
push
inc
jbe
sbb
sub
add
add
inc
js
push
gs
dec
jne
inc
add
call
dec
inc
clc
push
gs
sbb
and
inc
jo
hlt
lods
insl
sub
mov
and
mov
cs
ja
icebp
xchg
inc
pop
sub
pop
dec
xchg
mov
pop
add
xor
adc
mov
dec
out
dec
cwtl
das
add
inc
cmp
adc
cs
aad
jp
mov
fcoms
test
lret
popa
add
push
jge
push
or
mov
mov
nop
scas
pop
decl
insl
je
lret
sbb
push
mov
push
push
jb
adc
es
xchg
stos
inc
pusha
mov
ret
loop
jg
jo
push
subb
in
xor
mov
mov
pusha
push
je
add
push
int3
mov
push
add
pop
inc
push
mul
xchg
int3
push
subl
push
mov
inc
mov
iret
cmc
mov
and
add
mov
leave
mov
and
stos
add
mov
inc
pop
jge
mov
cmp
push
es
sbb
or
mov
mov
adc
or
pop
mov
mov
jmpw
popl
movl
pusha
pushl
ret
pusha
cmp
mov
call
movl
mov
jmp
push
call
dec
mov
in
adc
jns
in
or
bound
xor
in
int3
dec
bound
data16
mov
lret
pusha
and
out
sahf
inc
mov
shrl
sub
push
roll
adc
inc
scas
leave
mov
adc
shrb
inc
jecxz
push
aam
fnstsw
mov
jnp
or
cwtl
aas
fisubs
shrl
xchg
orl
push
popa
clc
jg
cmpsb
lods
insb
or
push
aam
mov
sub
mov
adc
add
je
jb
arpl
fs
jae
add
xor
lea
jne
rol
bt
pushf
mov
pusha
test
movw
call
pushf
inc
jmp
mov
in
adc
pop
hlt
xchg
jb
dec
scas
add
int
mov
arpl
ja
xchg
rclb
push
mov
sub
cltd
mov
scas
and
arpl
pop
pop
xor
mov
nop
xchg
mov
dec
daa
pop
gs
loopne
movsb
int
mov
sbb
inc
lock
int3
sbb
ja
mov
cmp
out
pushf
push
and
fyl2xp1
in
or
out
adc
dec
and
push
xchg
and
mov
jle
jo
mov
es
cli
aam
add
pop
inc
mov
bound
aaa
cs
xor
loop
push
dec
mov
xor
movsb
leave
fisubl
daa
sub
pop
and
paddb
pop
ja
push
mov
out
lahf
pop
aad
mov
mov
aaa
fists
sbb
repnz
andb
hlt
inc
cld
pop
fwait
and
and
sbb
popa
jnp
inc
pop
outsb
das
mov
icebp
mov
cmp
cmp
das
cs
fsubl
jg
xor
dec
call
and
add
je
imul
gs
lea
jne
bswap
not
cwtl
movb
call
add
inc
imul
outsl
ja
add
leave
imul
jmp
jmp
add
inc
gs
jne
dec
outsb
jne
add
inc
insb
outsl
bound
dec
outsl
arpl
jmp
jne
push
btr
bsf
mov
cmc
bt
push
add
push
jmp
add
dec
insl
popa
addr16
imul
je
outsl
jns
cmpb
mov
jmp
push
lea
je
cmp
pushf
cmp
pushf
add
cmp
cmp
mov
movl
jmp
jmp
add
inc
gs
insb
addr16
je
insl
add
add
addr16
jo
outsb
dec
gs
js
add
cs
lock
sbb
and
adcl
pop
jp
lahf
mov
leave
push
jmp
mov
sahf
loopne
insb
xchg
movsb
xlat
dec
outsb
shrl
lret
test
adc
stc
lret
xor
lret
ss
add
push
daa
addb
in
push
stos
or
and
ret
sahf
sahf
mov
push
jno
ret
mov
fiaddl
sbb
fbstp
or
repz
sbb
push
pop
mov
mov
cmc
sbb
data16
pop
and
mov
roll
out
cmp
adcb
sbb
call
pushf
inc
call
lea
jne
rol
dec
ror
sub
inc
or
btc
mov
sub
rcl
test
add
rol
xor
pushf
mov
push
pusha
call
pop
pushf
pushf
mov
pushf
movl
call
xor
icebp
adc
fs
mov
out
pop
add
aad
lahf
mov
fimuls
adc
out
inc
cmpl
mov
aad
add
add
sbb
loop
xor
mov
enter
adcl
adc
jg
and
mov
push
sub
je
jg
insb
inc
and
hlt
test
and
adc
mov
jbe
pop
nop
rcr
out
push
or
lret
loopne
add
or
lds
inc
fiaddl
xchg
not
lea
pop
movzbw
pop
bswap
lea
not
pop
mov
push
jmp
cmp
cmc
call
jmp
add
push
je
imul
pushf
cmc
stc
repnz
pushf
jmp
add
push
insb
jae
insb
insb
outsl
arpl
add
push
gs
gs
inc
outsl
insb
outsl
jb
add
push
gs
fs
imul
je
imul
je
js
add
inc
gs
jne
jb
outsb
je
push
dec
add
add
je
outsb
jne
je
insl
dec
inc
add
inc
and
ret
fisttps
and
add
or
add
sti
movl
push
push
push
lea
jmp
add
insb
jae
jb
outsb
inc
add
add
outsb
fs
imul
gs
add
add
outsb
dec
gs
jo
add
add
imul
add
insb
jae
jb
jo
outsb
inc
add
inc
and
cwtl
mov
cs
pusha
lea
jmp
pushf
lea
jae
inc
dec
pushf
bsf
mov
adc
bsf
dec
rcr
mov
btr
mov
cmc
call
test
repz
pushf
jnp
sbb
das
popa
sbb
and
sbb
hlt
aad
lcall
sbb
pop
dec
outsb
xchg
xor
pop
popf
mov
cmp
mov
pop
sub
add
in
notl
or
pushf
lea
je
pushf
cmp
bt
sub
cmp
sub
jae
cmp
call
add
inc
jb
popa
je
push
imul
inc
add
dec
adc
test
std
mov
rol
xor
add
addb
fildll
int
out
cmp
cmp
stos
push
mov
fwait
out
das
fistpl
out
cld
xlat
sahf
and
adc
mov
scas
mov
in
sbb
sub
cli
data16
sahf
jb
jns
inc
mov
jle
cmp
in
cmpsl
add
repz
dec
cli
mov
js
lods
jle
lret
sbb
sub
sahf
jb
repz
out
fdiv
cmp
insb
push
call
insl
xchg
xchg
shlb
cmp
inc
pop
subb
dec
mov
mov
xchg
sbbb
shlb
mov
in
je
mul
inc
sbb
fdivr
sbb
cwtl
cmpsb
inc
and
sub
jae
std
mov
jb
scas
jb
and
scas
pop
fiadds
xor
les
in
sbb
movsl
imul
out
push
gs
test
bound
outsb
lcall
mov
jg
imul
in
or
inc
in
bound
push
mov
mov
inc
into
mov
into
pop
pop
sub
jno
lock
call
clc
jbe
push
pop
pop
mov
aas
popf
pop
fwait
lods
gs
addr16
mov
mov
das
in
cmp
movsl
xchg
sub
jmp
mov
add
inc
jb
popa
je
push
push
add
inc
and
xor
and
pushf
mov
mov
movb
lea
jmp
add
add
lea
push
ror
sets
or
jmp
add
pusha
pushf
pushf
mov
lea
jmp
add
inc
gs
gs
imul
cmc
adc
shr
dec
mov
stos
jp
test
mov
insb
adc
xchg
add
push
inc
push
pop
xlat
ret
in
pop
test
mov
cli
mov
shr
std
pop
sbb
xor
es
popa
or
inc
mov
sbb
sub
test
or
inc
mov
sarl
jne
or
aad
inc
sti
mov
cs
xor
int
inc
and
or
add
bswap
not
lea
lea
call
add
push
jns
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
add
je
insb
addr16
je
insb
dec
inc
add
in
cmc
adc
ret
jb
push
movsl
rcrl
mov
in
fsubl
jne
jns
xchg
aas
cmp
inc
test
pop
jns
pop
outsl
imul
mov
out
loope
enter
mov
sbb
cmp
popf
pop
aaa
xor
push
pop
mov
jecxz
push
in
mov
adc
pop
dec
lods
sub
loope
sub
jbe
sub
dec
cmp
cmp
mov
sarb
cli
mov
dec
lcall
and
imul
jb
add
push
notl
dec
stc
push
iret
xchg
scas
loope
mov
pop
sti
loop
adc
or
rclb
test
cmp
out
scas
fisttpll
xor
insl
inc
or
mov
inc
arpl
shrl
jl
or
jle
inc
sahf
adc
mov
into
call
inc
sub
mul
inc
pop
and
mov
fldcw
xor
pushf
cs
loop
push
aas
mov
and
subl
dec
bound
notb
sbb
add
adc
jbe
cmp
mov
iret
add
sub
or
push
fwait
shr
jae
ja
in
add
adc
dec
pop
sbb
ds
lods
mov
jg
mov
xchg
mov
ds
into
jae
lcall
test
jbe
popf
in
pminub
shlb
outsb
sub
add
test
imul
add
je
outsb
fs
inc
imul
je
gs
imul
cmp
push
mov
bt
or
mov
movb
pushl
jmp
add
inc
gs
gs
popa
addr16
outsl
jae
dec
inc
push
dec
inc
dec
xor
cs
insb
add
xor
sub
pushf
repnz
pusha
call
add
inc
jb
popa
je
inc
imul
and
lea
je
jmp
add
inc
gs
imul
outsl
arpl
out
clc
adc
cmc
in
mov
imul
les
jmp
rcrl
in
inc
in
cltd
cmp
das
in
mov
jmp
test
pop
inc
rcll
imul
outsb
out
cld
lret
jle
popf
xor
gs
ret
add
xlat
push
xchg
add
mov
push
ss
adc
xor
int
xchg
and
mov
or
out
inc
lret
lcall
jge
xchg
mov
cltd
xor
test
sbb
lret
or
das
and
lahf
adc
xchg
mov
hlt
cmpsl
dec
sub
mov
mov
add
les
mov
lea
movsl
pop
mov
movsb
stc
sbb
stos
imul
test
fisttps
sbb
test
cmp
mov
ds
push
cmpsl
and
test
mov
jp
testl
jb
add
inc
and
ret
fbld
hlt
add
add
dec
das
rcl
cmp
inc
push
ret
inc
les
lahf
mov
cmpsl
jbe
fs
movl
leave
test
call
jp
cwtl
add
nop
decb
int3
loopne
lods
iret
cmp
dec
push
cmp
inc
dec
xor
add
push
sbb
jle
ret
lahf
outsb
insb
and
xlat
cmc
int3
pop
stc
pusha
fldt
jbe
push
inc
jb,pt
inc
cmp
push
mov
jmp
jmp
add
inc
gs
imul
add
insb
insb
dec
gs
dec
outsl
outsl
imul
movzwl
shrd
rcl
bsr
add
mov
pushf
add
test
mov
cmp
test
jmp
movl
pushf
movl
push
lea
jmp
movl
pushl
lea
jmp
lea
je
pushf
pusha
lea
lea
movsbw
jb
movzwl
jmp
iret
lahf
loope
adc
jbe
sbb
push
xchg
into
hlt
pop
add
fldt
dec
inc
sbb
jbe
loopne
test
mov
scas
pushf
cwtl
mov
mov
mov
lret
mov
cwtl
das
mov
pushf
sub
jmp
add
mov
lea
jmp
bts
shrd
shr
mov
and
pusha
and
mov
bt
jmp
add
jle
sub
clc
shr
push
pushf
mov
pusha
pushl
pushf
popl
mov
pushl
popl
pushf
pushf
pushf
pushl
lea
jmp
inc
btr
bswap
not
not
bts
stc
ror
shr
bt
sub
cmc
shld
xor
movzbl
pushl
clc
mov
push
pushf
bt
cmp
or
pushf
call
pushf
mov
push
mov
pusha
mov
mov
pushf
popl
movb
pushl
jmp
mov
pusha
push
jmp
pushl
popl
mov
pushf
mov
lea
jmp
inc
call
clc
sub
pusha
pusha
dec
jmp
pushl
popl
push
lea
jmp
shl
stc
shr
jmp
mov
push
sub
call
call
add
add
mov
movl
mov
push
pusha
mov
call
call
pushf
popl
pusha
jmp
pusha
mov
pushl
jmp
movl
call
pushf
mov
jmp
pushl
popl
push
pushf
pushl
lea
jmp
jmp
stc
btr
cmp
shrd
mov
ror
bt
and
mov
call
movb
jmp
call
jmp
bt
lea
stc
pusha
cwtl
cmc
sub
pushf
jmp
bsf
neg
shld
movsbw
bts
shrd
not
cmc
xor
inc
mov
test
pushf
pushl
add
push
mov
jmp
jmp
sub
mov
and
mov
pushf
movw
mov
jmp
push
pushf
mov
movb
movw
jmp
pushf
mov
pushf
movb
mov
pushf
jmp
mov
mov
call
mov
pushf
mov
push
pushf
call
push
pushl
popl
pushf
movb
mov
lea
jmp
pushf
fmull
pushf
mov
pusha
pushf
lea
jmp
dec
xchg
setno
bswap
movsbw
xchg
movsbl
pop
xchg
pushl
pushl
setl
inc
xchg
inc
mov
call
lea
pushl
call
pushl
popl
pushf
pushl
lea
jmp
mov
call
mov
dec
clc
jmp
mov
movb
pusha
pusha
mov
mov
pushf
call
call
mov
mov
pushf
movl
call
push
jmp
mov
movb
mov
mov
mov
jmp
pushf
popl
movb
push
call
bsf
rcr
bsr
rcr
mov
neg
push
mov
call
mov
mov
push
jmp
pushl
mov
pushl
mov
pusha
jmp
mov
jmp
pusha
movb
mov
jmp
jmp
pusha
pushf
popl
movl
jmp
mov
pushf
pushl
movw
pushf
lea
jmp
jmp
pusha
pusha
movw
mov
push
call
pushf
stc
sub
cmp
stc
call
jmp
pushf
call
shl
mov
push
stc
add
movw
movw
lea
jmp
jmp
call
setne
not
cmc
bswap
rol
bsf
rol
add
test
bt
jmp
mov
movb
lea
jmp
pushf
popl
push
pushl
popl
mov
mov
lea
jmp
movw
mov
pushf
pushl
pushf
jmp
jmp
movb
push
push
pushf
popl
push
pushl
popl
pushf
push
lea
jmp
neg
shl
mov
clc
sar
shrd
add
shrd
shl
xor
bswap
mov
cmc
bt
call
cld
cld
call
jmp
movsbl
lea
jmp
test
stc
cmc
shl
call
push
mov
movw
call
movsbw
mov
jmp
mov
jmp
sub
stc
cmc
cmc
bt
ror
pushf
pusha
xor
pushl
push
bt
add
cmc
stc
mov
clc
pushf
pushf
sub
push
mov
jmp
push
pusha
mov
call
pushf
popl
seto
call
call
pusha
pusha
pushf
mov
call
mov
push
push
push
mov
jmp
mov
movl
pushl
popl
pushf
pushf
mov
movb
lea
jmp
pushf
popl
pushf
pusha
push
call
mov
mov
shr
mov
test
pusha
pusha
sub
call
cmc
cmp
add
push
call
jmp
cmp
inc
shl
mov
rcl
mov
jmp
cltd
mov
mov
sets
mov
pusha
pusha
idivl
call
mov
movb
call
pushl
jmp
pusha
mov
pusha
call
mov
cmc
sub
jmp
mov
movb
mov
pushf
mov
pushf
pushf
mov
call
btc
movzbl
pusha
pushf
sub
not
not
dec
call
pushf
mov
pushf
lea
jmp
jp
clc
clc
mov
shr
add
pusha
mov
pushl
setb
mov
pushf
push
jmp
shld
cmp
mov
cmp
pushf
push
add
pushf
pushf
popl
mov
jmp
movb
call
movb
call
mov
pushf
pushf
lea
jmp
pushf
pusha
mov
push
mov
jmp
inc
shrd
mov
call
jmp
mov
call
pushf
jmp
clc
sub
push
pusha
mov
pushl
pushf
pushf
mov
lea
movb
mov
movb
mov
lea
jmp
mov
mov
pushf
pushl
popl
pushf
movl
mov
lea
jmp
pusha
mov
pushl
push
push
pushl
ret
pushl
pushl
popl
pushf
pushf
push
push
lea
jmp
mov
call
lea
jns
pushf
push
pushl
popl
pushl
lea
jmp
shl
setle
rcl
mov
jmp
shrd
jmp
movb
pushf
popl
movb
pushl
popl
mov
movb
pushl
lea
jmp
cmc
mov
bt
add
call
pushf
mov
mov
mov
push
call
lea
jne
mov
bsf
mov
clc
bt
clc
and
clc
cmp
pusha
pushf
pusha
lea
jne
add
call
push
mov
pushl
pushf
mov
mov
mov
call
call
shr
mov
cmc
jmp
ror
rol
pusha
shr
xor
clc
bswap
add
pushl
setne
call
pushl
popl
push
mov
pushl
movb
lea
jmp
pushf
popl
pushf
pushl
pushf
pushl
pushl
popl
pushf
pushf
pushf
lea
jmp
jmp
sub
jmp
pushf
mov
pushf
pushf
mov
call
shld
daa
ja
cmc
mov
not
add
mov
stc
stc
pusha
add
jmp
shl
shrd
ror
mov
pushf
add
not
and
sub
bswap
btr
call
pusha
fildl
pusha
lea
jmp
ror
setne
mov
cmc
clc
jmp
adc
mov
call
not
lea
cltd
mov
bswap
movzbw
pushf
mov
movb
pusha
pusha
divl
jmp
push
add
jmp
pushf
pusha
fstps
pusha
lea
jmp
mov
pushl
popl
pushf
lea
jmp
mov
pushf
call
pushf
mov
pushf
pusha
mov
call
stc
add
pushf
mov
call
call
shld
mov
rol
shl
inc
rcr
mov
cmp
test
pushf
pushf
sub
pushl
lea
jp
pushf
shr
jmp
aam
mov
push
add
push
mov
pusha
call
push
and
test
cmc
pop
and
mov
pusha
sub
pusha
mov
mov
mov
lea
jmp
jmp
fcompl
pushf
pusha
lea
jmp
pusha
jmp
and
cmc
sar
or
mov
clc
jmp
push
mov
ror
add
or
ror
add
pusha
not
pusha
mov
mov
mov
pushl
pushf
push
mov
lea
jmp
setle
inc
bsf
notl
pusha
lahf
aad
lahf
mov
pusha
cmp
movb
stc
sub
stc
clc
and
jmp
bswap
bswap
mov
cmc
bt
add
pusha
pushf
mov
mov
pusha
push
pushf
lea
jmp
pushf
cmp
or
call
stc
push
not
cmc
call
pushl
popl
push
mov
push
lea
jmp
inc
clc
setne
neg
mov
movzbl
cmp
btc
push
mov
pushl
stc
call
test
sub
push
call
pushl
popl
pushl
push
lea
jmp
jmp
not
shr
xor
mov
mov
mov
cmp
mov
cmp
push
cmc
add
pushf
push
mov
jmp
pushl
lea
jne
jmp
mov
mov
movw
mov
lea
jp
pushf
pusha
pushl
pushf
mov
pusha
jmp
bt
lea
stc
cmc
neg
pushf
movb
pusha
dec
stc
rol
test
test
push
sub
bt
bt
jmp
mov
mov
movw
movw
lea
jmp
jmp
lea
cpuid
jmp
call
mov
mov
movb
pushf
jmp
cmp
movw
lea
jne
rol
push
pop
pusha
xorb
pushl
push
mov
movw
lea
jmp
cmp
fnstsw
push
sub
lea
je
push
pushf
pushl
mov
pushf
mov
lea
jmp
call
pushf
popl
pushf
jmp
movzbw
clc
cmc
mov
cmp
bts
inc
mov
and
stc
push
xor
mov
bt
add
call
mov
pusha
movw
mov
pushf
lea
jmp
call
push
pushl
popl
push
pushf
pushf
push
lea
jmp
shl
call
call
not
bswap
pushl
popl
lea
mov
lea
setns
movsbw
push
call
movl
pushl
mov
pushf
movb
pushf
jmp
pushf
popl
mov
pushl
jmp
pushf
popl
call
pushf
mov
call
mov
push
movb
pushf
lea
jmp
pushf
push
pushf
popl
pusha
pushf
pushf
jmp
push
mov
pusha
push
movb
mov
mov
jmp
mov
call
jmp
mov
mov
call
pushf
jmp
pushf
call
push
mov
jmp
sub
bsf
adc
cmp
mov
clc
cmc
jmp
mov
pushf
mov
lea
jmp
pusha
pusha
mov
push
call
jmp
and
shld
movzbl
clc
cmc
movzbw
shl
xor
jmp
ror
mov
shl
movsbw
mov
bt
cmp
cmp
add
pusha
push
mov
movb
lea
jmp
ror
bsr
jne
neg
bts
not
and
sub
stc
xor
neg
mov
sub
rol
mov
pushf
pushl
call
push
pushf
mov
lea
jl
push
push
movb
pushf
mov
pushf
jmp
movw
push
mov
mov
push
mov
mov
pushf
push
mov
mov
call
jmp
add
pushf
mov
mov
movb
movb
pushl
lea
jmp
mov
pushf
movb
pushf
inc
test
push
add
jmp
jmp
push
pushl
jmp
movb
mov
pushf
pushf
popl
call
pushf
pushf
mov
push
mov
pushf
mov
pushl
popl
mov
movw
pushl
mov
lea
jmp
add
movb
mov
pushf
movb
pushl
lea
jmp
stc
movzbl
test
sub
push
movb
call
pushf
jmp
mov
pushf
mov
mov
mov
lea
jmp
bsf
movzbl
mov
mov
cmp
clc
bsf
mov
pusha
bt
push
cmp
add
pushf
mov
pushf
pushl
mov
push
lea
jmp
movw
mov
pusha
push
jmp
mov
inc
pusha
lea
jmp
pushf
mov
jmp
pusha
pushl
popl
pushf
pushf
pushf
pushf
lea
jmp
mov
mov
call
jmp
push
mov
pusha
jmp
pushl
popl
movw
movw
mov
mov
lea
jmp
call
mov
mov
mov
pushf
mov
movb
lea
jmp
mov
pushf
lea
jmp
pushl
popl
movw
movl
movw
lea
jmp
pusha
pushf
push
lea
jb
mov
pusha
push
pusha
lea
jmp
jmp
pusha
jmp
push
pushf
movb
flds
push
movb
pusha
push
lea
jmp
movb
call
mov
jmp
pushf
call
pusha
pushf
mov
pushl
mov
call
pushl
movl
mov
mov
mov
mov
mov
pushl
pushl
ret
shl
call
pushf
sub
stc
pusha
cmpl
lea
jbe
pusha
pusha
mov
mov
movw
push
mov
mov
call
pusha
cmc
add
mov
movb
push
mov
lea
jmp
sub
movsbw
sub
neg
setg
ror
mov
shrd
shrd
add
add
rcl
movzbl
bsr
test
mov
cmp
call
call
movw
call
xchg
not
mov
rcr
sbb
pusha
rol
mov
jmp
pushl
pushl
popl
pushf
pushf
pusha
pushf
lea
jmp
pushf
jmp
setg
mov
call
neg
pushf
rdtsc
test
stc
sub
push
mov
movb
pushl
call
call
cmp
js
bt
add
jmp
jmp
mov
push
call
lea
mov
pushf
cld
pusha
rep
shr
mov
ror
btc
add
mov
clc
std
cmc
pushl
popf
movb
lea
jmp
pushf
pushf
mov
movw
pushf
push
push
mov
jmp
pushf
pushf
movb
mov
pushf
jmp
pushl
popl
movw
movb
lea
jmp
call
not
pushf
cwtl
mov
jmp
mov
jmp
pushf
jmp
push
not
pushf
mov
jmp
mov
pushf
call
mov
lea
je
pushf
mov
push
lea
jo
push
push
push
pusha
pushl
popl
pusha
pushl
push
lea
jmp
mov
mov
lea
jmp
mov
jmp
pushl
push
jmp
jmp
jmp
inc
push
pushf
mov
movb
lea
jmp
mov
pushl
jmp
pushf
movw
pushf
popl
call
mov
mov
lea
jmp
pushf
pushf
pushf
mov
movb
pusha
pushl
lea
jmp
seto
mov
push
setp
setns
movsbw
pusha
mov
jmp
mov
pushl
pushf
call
pushf
mov
jmp
movl
movb
mov
call
aaa
mov
test
pushf
sub
cmc
clc
sub
call
mov
mov
call
mov
movb
jmp
pushf
mov
call
pushf
mov
pusha
push
pushf
pushf
popl
push
movl
call
pushf
lea
clc
test
jmp
mov
movl
pushf
lea
jmp
mov
mov
pushf
pusha
push
push
lea
jmp
test
cmp
sub
stc
push
cmc
pusha
shr
pushf
jmp
mov
push
mov
pushf
movb
mov
mov
call
mov
pushf
mov
call
mov
pusha
call
mov
jmp
call
pushf
push
movb
pushl
popl
mov
push
lea
jmp
push
pushl
popl
pushf
pushl
pushf
mov
lea
jmp
pushl
popl
pushf
movb
lea
jmp
mov
push
mov
mov
lea
jmp
movb
mov
movw
pushf
pushl
popl
pushf
lea
jmp
jmp
ror
stc
mov
push
add
jmp
mov
pushf
jmp
pushf
setge
setno
mov
pusha
call
pushf
mov
push
mov
pushf
movb
jmp
jmp
pushf
popl
pushf
pushf
mov
lea
jle
push
mov
pusha
call
pushf
popl
pushf
mov
movb
jmp
pusha
push
xchg
pusha
lea
bswap
pop
mov
pushf
mov
movl
pushl
mov
jmp
mov
call
push
xor
call
mov
pusha
mov
pushf
pushf
popl
mov
jmp
jmp
push
jmp
btr
movsbw
shld
test
mov
pushf
push
cmp
cmp
add
mov
pusha
lea
jmp
push
mov
pushl
pushf
lea
jmp
call
bt
movsbw
daa
mov
pusha
cmc
sub
clc
sub
pushf
pusha
pushl
test
xchg
push
pushl
add
mov
inc
mov
sub
stc
clc
test
stc
cwtl
test
mov
movb
sub
movb
movw
lea
jnp
mov
pushf
lea
jmp
stc
not
mov
test
clc
push
pusha
xor
push
ror
bt
neg
cmp
clc
lea
clc
cmp
not
movb
pushf
stc
xor
stc
bt
mov
cmp
cmc
cmc
pushf
sub
movb
push
push
call
pusha
pushf
popl
push
pusha
call
jmp
mov
push
movb
lea
jmp
push
mov
push
pushf
pushl
popl
pushl
push
pushf
movb
lea
jmp
jmp
jnp
add
mov
clc
mov
call
push
pushf
pushf
popl
pushf
movb
push
pushl
popl
mov
mov
mov
lea
jmp
not
movl
mov
pushf
jmp
push
mov
rep
bts
cmp
rol
mov
shl
shr
rcr
lea
mov
clc
test
pushl
popf
pushl
lea
jmp
call
jmp
pushf
neg
cmc
movl
add
mov
mov
push
pushf
pushl
ret
stos
vpxor
fsubp
out
pop
out
movsb
loop
out
push
shl
out
jo
loope
lcall
out
ret
out
out
ret
out
out
sbb
loope
pop
loope
stos
fndisi(8087
out
cli
lret
out
loope
inc
in
loope
imul
out
imul
out
push
shl
out
or
loope
sbb
loop
out
xchg
fucom
out
xchg
lret
loope
ret
out
cmp
loope
push
in
out
push
in
out
inc
in
loope
push
int3
loope
ret
out
cmpps
xchg
loope
cmp
loope
add
loope
sub
loope
xor
loope
in
out
push
loop
out
outsl
aam
out
ret
out
out
ret
out
out
sub
int3
loope
out
loope
sbb
loopne
out
lahf
ljmp
imul
out
pop
out
or
loope
jmp
loope
pop
loop
out
cli
lret
push
int3
loope
mov
loope
stos
fndisi(8087
out
lcall
out
cmp
loope
inc
in
loope
je
loope
xor
loope
movsb
loop
out
pop
out
sub
loope
add
loope
stos
call
loope
inc
out
out
ret
out
out
and
out
pop
loope
mov
fucom
out
pop
loope
jmp
leave
loope
imul
out
pop
enter
fucom
out
xchg
fucom
out
out
out
out
je
loope
stos
vpxor
fsub
out
sub
loope
sbb
loope
jp
loope
and
out
mul
loope
push
shl
out
ret
out
cmp
loope
ret
out
loope,pn
out
push
int3
loope
in
int
out
mov
enter
out
out
ret
out
out
inc
loop
out
xor
loope
mov
int3
loope
dec
loope
in
loope
imul
out
imul
out
daa
enter
fsub
out
jo
loope
movsb
jecxz
out
add
loope
mul
loope
sbb
ret
out
loope
in
out
cmp
loope
test
loope
sbb
int
out
mov
out
out
fs
out
je
loope
jp
loope
inc
loop
out
fwait
int3
loope
cmp
loope
ret
out
out
ret
out
out
xchg
lret
loope
xchg
fucom
out
mov
fucom
out
push
int3
loope
in
out
imul
out
imul
out
sub
loope
xchg
lret
loope
ret
out
inc
loope
sub
loope
mov
in
out
xchg
fucom
out
push
int3
loope
fwait
int3
loope
push
int3
loope
rcr
loope
cmp
loope
sbb
loope
cmp
loope
cltd
loope
out
out
out
in
out
mov
loopne
out
ret
out
out
ret
out
out
pop
enter
jecxz
out
in
loope
movsb
loop
out
jo
loope
dec
loope
imul
out
imul
out
push
shl
out
dec
loope
daa
enter
aam
out
out
out
out
stos
fndisi(8087
out
push
shl
out
pop
out
shl
out
inc
in
loope
stos
fndisi(8087
out
add
loope
cmp
loope
pop
enter
loope
cmp
loope
in
loope
ret
out
in
out
cmp
loope
loope,pn
out
ret
out
out
ret
out
out
in
out
push
loop
out
shl
out
sub
loope
xchg
lret
loope
out
loope
imul
out
imul
out
movsb
loop
out
out
loope
sbb
jecxz
out
jo
loope
cmp
loope
sub
loope
in
out
mov
loope
movsb
loop
out
daa
enter
out
out
cmp
loope
push
loop
out
jmp
out
out
out
out
out
pop
loop
out
or
loope
rcr
loope
cmpps
ret
out
out
ret
out
out
in
loope
push
in
out
cmp
loope
sbb
out
out
loope
imul
out
imul
out
cli
lret
out
out
out
in
out
sub
loope
inc
in
loope
adc
int
out
sbb
loope
out
cmpps
out
loope
sbb
ret
pop
enter
push
and
jmp
inc
pushf
push
pusha
lea
jmp
call
pushf
add
pushf
pushf
push
push
mov
push
movw
push
lea
jmp
cmp
add
push
mov
push
pusha
lea
jmp
sub
inc
rcl
stc
mov
pushf
add
pushl
lea
jmp
pushf
pushl
mov
mov
jmp
call
cmp
cwtl
aaa
aas
mov
rol
lea
stc
mov
stc
cmp
not
push
mov
not
clc
clc
pushl
pushl
and
pusha
movl
mov
movb
pushf
pushf
popl
call
stc
add
push
call
not
cbtw
mov
shl
adc
mov
call
lea
jne
pusha
dec
rcl
cmc
mov
cmc
push
pusha
and
call
inc
pusha
pushf
push
pushl
decl
call
rcr
cwtl
mov
adc
jmp
pushl
popl
movw
movb
lea
jmp
lea
jb
pushf
push
pushl
popl
pushf
lea
jmp
mov
add
add
rol
ror
rcr
pusha
call
jmp
mov
lea
jbe
pushf
pusha
call
shld
sbb
neg
mov
cmp
dec
shl
add
jmp
pushl
popl
mov
mov
lea
jmp
pushf
pushl
popl
mov
mov
lea
jmp
mov
pushf
jmp
call
call
push
mov
movb
pushf
popl
jmp
jle
mov
stc
pusha
jmp
sub
jmp
mov
mov
push
lea
jmp
push
pushf
mov
push
jmp
call
call
pushl
pusha
lea
jne
cmc
bt
clc
sub
pusha
xchg
push
call
pusha
pusha
jmp
pushf
lea
jno
pushl
pusha
pusha
pushf
mov
lea
jmp
bt
pushl
pusha
add
cmp
pushl
popf
pushf
lea
jmp
std
pop
std
cmc
pusha
pushl
popf
pusha
push
lea
jmp
mov
pushl
push
pushl
pushl
lea
jmp
lea
je
stc
cmp
cmp
sub
pushf
pushf
xchg
jmp
stc
mov
cmp
bt
test
jmp
sar
bsr
mov
cmc
stc
call
push
call
bsf
shl
mov
clc
jmp
stc
call
movb
jmp
pushf
call
setle
inc
mov
bswap
dec
inc
rcr
lea
ror
cmc
mov
xor
not
shl
lea
not
sub
or
bts
movsbw
or
mov
bts
movzbw
shld
bswap
mov
btc
or
bswap
add
bsf
call
bt
add
pushf
movw
mov
pusha
movb
movl
mov
lea
jmp
pushl
mov
pushf
pushf
mov
push
push
mov
call
not
call
test
sub
call
movb
mov
movl
pushl
popl
pushf
push
lea
jmp
pusha
push
pusha
pushl
popl
pushf
lea
jmp
pusha
jmp
jmp
pushf
pushf
mov
xchg
call
mov
pushf
movb
lea
jmp
pusha
mov
push
lea
jmp
mov
pushf
mov
pushf
call
jmp
neg
mov
call
mov
pusha
pushf
pushf
lea
jmp
stc
mov
not
movsbw
rcr
pusha
rol
cmp
rcr
bt
add
dec
cmp
bts
clc
and
neg
not
shl
bt
mov
jmp
mov
jmp
pushf
mov
mov
mov
movb
jmp
push
movb
mov
pushf
pushf
mov
jmp
jmp
sub
bt
add
push
movb
jmp
ror
bt
stc
test
pushl
sub
bt
pushf
cmp
movb
cbtw
jmp
movb
mov
jmp
jmp
cmp
sub
cmp
clc
call
mov
mov
push
push
lea
jmp
pushf
mov
movb
pushf
movb
pushl
popl
pushl
movw
lea
jmp
push
mov
bt
add
mov
stc
push
cmp
sub
test
movb
test
shr
pusha
jmp
sub
mov
pusha
sub
pushl
push
movb
add
call
mov
jmp
mov
mov
movb
pushl
pushf
lea
jmp
call
pushf
mov
pusha
lea
jbe
push
movb
mov
pushf
pusha
lea
jmp
bswap
lea
shrd
mov
test
mov
pusha
stc
push
add
call
call
rcr
movsbw
movsbw
mov
call
jmp
pushf
call
cmp
stc
mov
sbb
sets
shl
mov
stc
clc
call
pusha
mov
movb
lea
jmp
pushf
lea
ja
lahf
xor
mov
bts
das
lea
cmp
xchg
cwtl
cmc
sub
pushf
or
lahf
dec
lea
sar
dec
add
movzbw
and
add
add
sub
not
pusha
mov
pusha
push
lea
pushf
popl
lea
xchg
pusha
bswap
not
pop
mov
pushf
push
std
bswap
lea
std
lea
jno
push
movzbw
bswap
jmp
xorb
lea
jmp
bt
add
pushf
pusha
pushf
lea
jmp
test
pushf
stc
mov
not
pop
lea
xchg
pusha
or
mov
aad
btr
shr
mov
sbb
xor
aas
stc
mov
btc
neg
movsbw
mov
btr
test
rcl
bsf
mov
bts
mov
pop
pushl
popf
setnp
mov
movsbw
movzbw
mov
movzbw
lea
jae
pop
pusha
push
pusha
pushl
ret
fwait
push
movw
mov
movl
lea
jmp
mov
mov
call
pusha
movb
pushf
popl
push
call
call
mov
lea
jl
push
pusha
mov
pusha
mov
call
add
and
shl
btr
mov
push
add
pusha
lea
jmp
mov
pushl
pushf
jmp
mov
movb
pushf
mov
pusha
push
pushl
pushf
pushl
popl
movw
pushf
lea
jmp
pusha
mov
mov
mov
push
push
jmp
mov
call
push
mov
movb
jmp
fcomps
mov
pushf
pushf
lea
jmp
inc
mov
clc
ror
movl
cmp
cmp
sub
cmc
cmp
cmc
sub
jmp
clc
sub
je
sub
call
pusha
add
pushf
mov
pushl
lea
jmp
not
mov
bt
pushf
pushf
test
add
pushf
lea
jmp
pushf
pushf
pushf
popl
mov
mov
jmp
mov
jmp
cmc
mov
shl
jmp
pusha
mov
mov
mov
pusha
mov
push
pushl
pushf
mov
lea
jmp
jmp
shld
call
pop
pushf
lea
jmp
btr
push
setno
rol
mov
jmp
mov
jmp
stc
add
pusha
movb
lea
jmp
push
mov
pushf
call
pusha
mov
push
pushf
push
mov
jmp
push
movw
mov
pushf
push
mov
pusha
pusha
pushf
popl
call
xadd
mov
sbb
shr
add
setnp
sete
jmp
shr
jmp
pusha
pushf
pushf
popl
call
pusha
pusha
mov
jmp
jmp
pusha
mov
movb
pushl
push
push
mov
pushl
mov
push
pushf
popl
movb
push
pushl
movw
mov
push
mov
jmp
movw
mov
call
pushl
pushf
popl
movb
mov
pushl
push
push
jmp
bt
pushf
bt
shr
movw
movb
jmp
mov
lea
jne
rep
xchg
pop
movzbw
jmp
call
pushl
call
mov
mov
pusha
movb
jmp
pushf
pushf
mov
call
push
movw
movw
mov
movw
movb
push
push
lea
jmp
push
pusha
mov
pushf
popl
pusha
jmp
mov
push
mov
pushf
call
movl
pushf
call
movb
pushl
popl
pusha
lea
jmp
call
pusha
cmp
movb
call
mov
movb
movb
pushf
pushf
lea
jmp
jmp
mov
mov
call
jmp
call
jmp
rol
neg
sub
mov
push
pusha
add
push
pushl
lea
jmp
