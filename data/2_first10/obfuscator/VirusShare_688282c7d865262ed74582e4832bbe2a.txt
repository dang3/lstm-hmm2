push
call
ret
ret
pusha
mov
mov
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
push
sbb
in
addl
push
push
push
add
xor
cmpl
pop
sbb
jne
int3
pop
lock
call
add
hlt
jae
push
jmp
mov
mov
mov
add
push
stos
mov
int3
dec
adc
mov
sarl
sbb
leave
cmp
je
sbb
mov
shl
or
inc
inc
xchg
cmp
pop
xor
and
sub
jge
sbb
jbe
push
add
xor
ret
sahf
or
add
movl
jae
mov
push
mov
sbb
loope
int
xchg
test
shr
imul
fdivrs
pop
addl
xorb
shr
add
pushl
xchg
add
lea
sub
or
test
fmuls
jl
add
lock
xor
cmp
rcrl
and
xor
jo
xchg
fdivs
mov
sbb
pop
adc
shl
pushf
ficoms
decl
xor
mov
ljmp
add
push
mov
sub
shl
test
decl
sbb
rolb
mov
lea
dec
or
cmp
xor
sub
jae
insb
cli
add
or
nop
les
mov
jp
sub
xchg
pop
xchg
aaa
xchg
jmp
adcb
xor
xchg
mov
pop
sahf
hlt
mov
xor
inc
and
add
adc
or
gs
and
filds
rolb
fwait
adc
sub
push
enter
dec
or
jp
push
shrl
add
sbb
and
add
inc
cmp
inc
fmull
call
and
rcl
jecxz
setge
dec
and
stc
stc
add
enter
jmp
filds
mov
inc
mov
xor
test
xlat
inc
xchg
enter
xorl
shll
sub
andl
jmp
clc
or
jns
enter
and
inc
icebp
add
pop
dec
insb
mov
adc
pop
sbb
inc
mov
add
mov
mov
test
xorb
sbb
and
inc
or
mov
mov
lock
pop
sub
push
mov
mov
xchg
mov
adc
inc
add
mov
adc
jmp
cltd
in
xor
nop
ss
test
adc
jmp
cmpsl
push
pop
ret
shll
pushl
shrb
and
mov
adc
push
and
dec
sbb
inc
dec
mov
push
inc
or
hlt
jb
adc
or
into
or
mov
sbb
lea
or
inc
xor
xchg
adc
or
aam
dec
add
les
mov
mov
sbb
shrl
inc
adc
mov
sti
loop
sarb
push
push
aam
pop
movsl
cmc
inc
push
add
cmp
test
xor
cli
shr
mov
cmp
adc
xlat
mov
fwait
aam
or
cwtl
shl
jmp
sub
xor
adc
xor
mov
bound
adc
pop
mov
pop
cmp
out
mov
pop
loopne
lea
pop
inc
sti
add
inc
jmp
pop
lcall
bound
and
cmc
shr
popf
movsb
sub
lods
lret
xor
xor
inc
adc
out
test
adc
lea
test
cmp
inc
cmp
jl
inc
lods
shll
dec
or
add
lcall
rcrb
mov
push
sbbb
push
dec
ds
add
and
dec
addr16
pop
rorl
cmp
jb
sub
or
push
psllq
add
out
enter
stos
pop
test
xchg
movsb
xor
mov
adc
jmp
popa
shlb
sub
inc
insl
sub
xchg
sub
lea
jge
mov
gs
adc
lea
jmp
cli
pop
inc
mov
je
inc
push
mov
mov
jae
mov
dec
divl
push
enter
xorl
sbb
loope
or
subb
jecxz
mov
adcb
pushf
jne
mov
push
loope
or
mov
pop
pop
leave
ret
addb
xor
add
add
add
adc
add
xchg
sub
into
cmpsb
adc
arpl
add
adc
add
add
add
add
add
sub
add
fsubl
lret
cmc
and
and
outsl
outsl
outsl
outsl
add
add
add
or
pusha
add
cmpb
addb
add
sbb
add
call
add
add
add
addb
add
add
add
push
add
repnz
add
adc
add
mov
add
insb
or
orb
push
add
pop
add
add
inc
add
add
add
add
add
add
add
add
mov
add
add
add
addb
add
lock
addb
add
add
add
add
add
add
add
add
add
mov
mov
add
in
add
add
add
add
add
add
add
loopne
add
mov
add
add
add
add
add
add
add
add
add
or
add
sarb
add
in
add
add
add
add
add
add
add
dec
add
addb
add
jo
add
cwtl
add
addb
add
add
addb
add
add
add
add
add
add
add
add
add
pusha
add
add
add
in
add
add
add
add
add
add
add
mov
add
pop
mov
add
in
add
add
add
add
add
add
add
mov
add
mov
add
in
add
add
add
add
add
add
add
fadds
add
rol
add
add
add
add
add
push
add
add
pop
add
add
add
orb
add
ljmp
add
add
xorb
add
add
xorb
bound
add
mov
add
mov
add
fiaddl
add
add
cmpb
add
add
add
add
push
add
adcb
add
jp
add
mov
jns
add
add
adcb
add
pop
add
add
inc
add
pop
add
push
add
push
add
dec
add
inc
add
inc
add
add
add
add
add
add
add
mov
add
je
add
add
add
add
add
add
add
add
add
fiaddl
add
loopne
add
add
in
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
sub
add
insb
add
add
in
add
add
add
add
add
add
add
push
add
add
add
add
in
add
add
add
add
add
add
add
jp
add
sbb
add
add
in
add
add
add
add
add
add
add
mov
lret
pop
add
add
add
add
add
add
add
add
add
lret
add
lret
add
add
in
add
add
add
add
add
add
add
repnz
add
add
in
add
add
add
add
add
add
add
sbb
add
add
add
in
add
add
add
add
add
add
add
inc
add
add
iret
add
add
in
add
add
add
add
add
add
add
push
add
sub
cs
add
add
add
add
add
add
add
add
xchg
add
add
xlat
add
add
add
add
add
add
add
add
mov
xlat
add
add
add
add
add
add
add
add
add
loop
add
xor
add
add
add
add
add
add
add
add
add
sbb
add
inc
add
add
push
add
add
add
add
add
add
add
add
add
xor
cs
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
jg
add
mov
add
fiaddl
add
add
add
add
add
add
add
add
add
lret
add
add
add
add
in
add
add
add
add
add
add
add
repnz
das
add
add
add
add
add
or
xchg
add
add
add
mov
add
mov
add
fiaddl
add
add
add
sub
add
push
pop
add
jp
add
mov
js
add
pop
add
add
add
add
add
add
add
add
add
jp
add
rolb
add
add
add
add
add
add
add
add
mov
pop
das
add
add
in
add
add
add
add
add
add
add
lret
add
or
add
add
add
add
add
add
add
add
add
add
repnz
add
rorb
das
add
add
add
add
add
add
add
add
add
add
sbb
add
mov
or
add
add
add
add
add
add
add
add
inc
pop
add
insb
adc
add
add
add
add
add
add
add
add
push
add
and
add
add
add
add
add
add
add
add
add
add
xchg
pop
add
in
adc
add
add
add
add
add
add
add
add
mov
adc
add
in
add
add
add
add
add
add
add
loop
add
test
das
add
add
add
add
add
or
add
add
pop
or
addb
add
orb
addb
add
stos
or
adcb
add
rorb
add
cli
or
adcb
add
and
add
dec
or
sbbb
add
jb
add
lcall
add
or
sbbb
add
add
add
add
add
add
add
add
add
jb
add
adc
das
add
add
in
add
add
add
add
add
add
add
lcall
add
add
in
add
add
add
add
add
add
add
ret
add
add
in
add
add
add
add
add
add
add
ljmp
add
add
add
add
add
add
add
add
add
add
adc
add
enter
sub
add
in
add
add
add
add
add
add
add
cmp
add
hlt
sbb
add
add
in
add
add
add
add
add
add
add
bound
add
cmp
das
add
add
in
add
add
add
add
add
add
add
mov
add
jl
das
add
add
add
add
add
add
add
add
add
mov
add
loopne
das
add
add
add
add
add
add
add
add
add
add
fimull
add
mov
add
add
add
add
add
add
add
add
add
add
add
int3
and
add
add
in
add
add
add
add
add
or
add
or
orb
add
bound
add
mov
add
add
add
add
add
add
add
add
add
push
or
add
and
add
add
in
add
add
add
add
add
add
add
jp
add
add
das
add
add
in
add
add
add
add
add
add
add
mov
and
add
add
add
add
add
add
add
add
fimull
add
jg
add
sbb
add
inc
or
orb
add
inc
add
push
add
add
dec
add
dec
add
add
add
add
add
add
add
or
add
push
popa
das
add
add
in
add
add
add
add
add
add
add
xor
add
push
and
add
add
in
add
add
add
add
add
add
add
pop
or
add
add
add
in
add
add
add
add
add
add
add
test
add
add
add
add
add
add
add
add
add
pushf
or
add
das
add
add
in
add
add
add
sub
add
xor
add
pusha
add
add
add
add
add
add
and
add
xor
pop
pop
inc
push
xchg
fwait
adcl
dec
xor
dec
push
cmp
sahf
movsb
mov
xchg
lcall
and
adc
adc
or
and
push
lcall
sub
jmp
jae
add
ud0
adc
ljmp
cmp
incl
adc
lcall
and
daa
jmp
ss
fwait
stos
xchg
ljmp
pop
pushl
decl
adc
call
cs
mov
jl
ret
pushl
mov
incl
jp
sub
lcall
jl
xor
ljmp
inc
cmp
cmp
decl
pop
decl
adc
sub
sub
push
sub
es
mov
xor
sbb
sub
xor
scas
cwtl
filds
cmp
adcb
cs
daa
pushl
inc
and
sub
adc
cmp
ljmp
inc
xor
sbb
ds
call
push
lcall
sub
ljmp
xor
jmp
sub
ljmp
xor
decl
adc
and
pop
and
mov
jae
ljmpw
incl
adc
decl
sbb
ljmp
push
push
jmp
movsb
jg
ret
ljmp
stos
decl
xchg
inc
cmpb
bound
push
xorb
aaa
sub
cmp
inc
pop
dec
call
pop
incl
sbb
and
and
adc
push
repnz
or
adc
and
adc
jo
arpl
jge
ja
jg
jge
dec
push
inc
std
jl
jge
sub
inc
sub
push
gs
call
daa
or
and
and
and
aas
das
lcall
xor
jmp
aas
xor
sub
incl
sub
ljmp
and
lcall
and
jmp
and
incl
shrb
popa
fs
pushl
ds
das
decl
or
jmp
xchg
js
mov
jo
mov
push
stos
decl
decl
jnp
xor
ljmp
cmp
cmp
pushl
push
inc
jmp
incl
add
std
sbb
cld
sbb
sbb
and
sbb
popf
mov
js
lcall
cld
pop
addr16
std
xor
xor
decl
inc
call
and
jmp
ss
dec
arpl
pop
ss
lcall
xor
adc
sbb
adc
pop
call
and
ljmp
cmp
sub
or
or
push
pop
dec
decl
pop
push
cmp
jmp
jg
ljmp
pop
ljmp
push
jmp
push
incl
add
ljmp
dec
inc
lcall
pushl
lods
jmp
stos
call
xchg
decl
jl
inc
jno
jmp
dec
cmp
decl
cs
pushl
push
inc
ljmp
inc
sub
or
incl
add
add
sub
lcall
xor
jg
scas
mov
hlt
jmp
stc
icebp
jmp
inc
xor
decb
inc
incl
decl
push
pop
jmp
addr16
decl
and
incl
adc
incl
adc
call
sbb
sbb
lcall
sub
jmp
cs
decl
adc
and
orb
ljmp
pop
jmp
jns
call
push
or
call
sub
pushl
pop
push
decl
jge
jno
lods
jmp
mov
lcall
xchg
arpl
popa
lcall
ja
adc
and
cmp
dec
xor
push
ss
incl
sbb
call
sub
call
fcmovne
fcomi
imul
sarl
mov
cs
aaa
std
dec
push
inc
incl
call
sbb
add
or
or
decl
adc
lcall
sub
lcall
cs
jmp
xor
lcall
sub
ljmp
cmp
pushl
pop
or
xor
call
sbb
test
push
pop
jmp
dec
pushl
pop
cmp
sub
push
push
push
jmp
xor
decl
xchg
inc
jl
ljmp
mov
jmp
xchg
incl
pushw
pop
dec
jge
xchg
call
lcallw
cmp
jmp
aas
sub
das
dec
xor
cmp
pushl
push
cmp
sbb
sbb
add
add
test
pushf
jbe
jl
push
sub
and
clc
out
scas
and
inc
cmp
dec
pop
dec
pushl
inc
sub
or
push
or
jmp
and
or
sbb
sbb
sbb
sbb
or
and
call
sub
ljmp
ds
lcall
xor
ljmp
sub
add
add
push
insl
pop
lcall
dec
jmp
ljmp
push
lcall
sbb
lcall
es
jmp
inc
xor
mov
ljmp
popf
pushl
call
jge
insb
cltd
mov
xor
dec
jmp
jnp
insb
jnp
je
jnp
push
cmp
call
cs
jmp
cmp
pushl
dec
xor
inc
pop
inc
call
push
add
adc
add
pop
pop
dec
dec
mov
pop
dec
clc
add
adc
inc
arpl
dec
das
incl
sbb
add
add
push
sbb
ljmp
xor
jmp
adc
lcall
es
lcall
sub
decl
push
push
call
and
lcall
ss
call
sub
ljmp
aas
xor
and
xor
push
sub
lcall
pop
lcall
dec
jmp
dec
lcall
dec
call
adc
lcall
sbb
jmp
sub
jmp
xor
lcall
cmp
js
xchg
decl
jne
push
nop
xchg
popa
xchg
test
inc
outsl
pop
call
outsl
jp
mov
data16
sub
pushl
dec
xor
decl
inc
call
and
adc
add
add
add
add
xor
push
dec
movb
dec
incb
and
or
or
jmp
xor
add
jmp
and
adc
sub
jmp
das
pop
call
dec
cmp
das
inc
xor
sub
sub
cs
xor
or
adc
push
sub
pushl
dec
dec
lcall
xor
aaa
dec
inc
jmp
jmp
dec
lcall
inc
ljmp
sbb
ud0
sub
sub
es
xor
bound
push
pop
mov
aaa
arpl
jbe
xchg
jl
mov
pop
jge
jp
jns
mov
jb
dec
arpl
aaa
dec
sub
dec
pusha
inc
incl
add
add
add
or
aas
sub
ljmp
scas
sti
push
jp
std
aaa
push
cmp
xor
ljmp
cmp
lcall
sbb
adc
daa
sbb
pop
adc
sbb
push
pushl
ds
inc
xor
sub
sub
push
xor
decl
and
call
sub
lcall
xor
cmp
push
and
lcall
pop
call
inc
call
inc
jmp
push
decl
or
or
sub
ljmp
cs
inc
push
decl
pop
decl
jmpw
jnp
mov
insl
decl
push
lcall
pop
pushl
imul
ss
incl
ss
ds
sub
pop
push
add
add
add
sbb
add
es
xor
inc
jb
sarb
outsl
push
out
dec
outsb
push
cli
or
push
std
xor
and
and
and
and
sub
test
push
pop
dec
incl
inc
pushl
xor
call
sub
decl
push
adc
or
sub
adc
cmp
pop
cmp
and
incl
cmp
dec
dec
xor
addb
sbb
adc
daa
sub
jmp
and
decl
aas
cmp
cmp
xor
jnp
decl
dec
pushl
je
imul
dec
pushl
and
push
arpl
decl
decl
jmp
xor
add
inc
and
das
dec
xor
pop
inc
jp
das
sbb
pop
sub
icebp
inc
pop
inc
cld
daa
xor
sbb
cmp
sub
imul
push
push
decl
dec
decl
dec
jmp
xor
sbb
sbb
or
sub
sbb
cmp
call
sub
push
xor
decl
nop
jno
lahf
cmpsl
xchg
push
pop
inc
ljmp
xor
lcall
pop
adc
and
sbb
cmp
sub
push
dec
cmp
pop
push
inc
pushl
inc
sub
bound
pushl
insb
incl
pop
inc
decl
aas
decl
cmp
push
gs
jmp
sub
imul
add
add
and
pop
and
and
cmp
pop
and
sbb
push
add
sub
and
inc
dec
ss
xor
and
push
pop
cmp
sub
mov
imul
imul
and
sub
add
and
decl
sub
adc
xor
or
sub
push
and
decl
adc
sub
and
call
cwtl
jnp
and
adc
sbb
or
sbb
adc
xor
and
gs
dec
call
xor
cmp
inc
xor
es
daa
pushl
popa
pushl
pop
lcall
inc
lcall
inc
jmp
pop
jmp
dec
call
xor
add
add
adc
add
mov
lods
test
jp
cmc
cmp
dec
pop
pop
notrack
ljmp
pop
incl
jno
ljmp
cmp
add
and
call
sub
push
and
add
pop
incl
adc
decl
adc
pop
jl
imul
xchg
jnp
lcall
call
adc
ljmp
daa
pop
jmp
dec
incl
and
incl
daa
cmp
pop
cmp
sbb
inc
aas
and
xor
adc
dec
dec
sub
jnp
pop
pushl
popa
incl
andb
add
xor
mov
test
insb
dec
cmc
bound
gs
push
pop
inc
call
mov
xor
push
sbb
incl
adc
incl
pop
push
incl
push
incl
or
adc
pop
or
lcall
push
adc
lcall
push
decl
add
sbb
or
and
adc
inc
inc
sub
inc
cmp
ljmp
or
decl
decl
and
pop
dec
sub
push
inc
and
cmp
or
inc
dec
cmp
addr16
pushl
incl
add
or
and
xor
addr16
rcrb
xor
test
jb
push
cld
inc
dec
ss
scas
ret
mov
push
xor
call
sub
pop
sbb
incl
ud2
incl
or
incl
push
push
incl
or
decl
push
pop
incl
push
add
push
push
dec
ljmp
mov
or
pop
and
lcall
push
incl
sub
aaa
cs
ljmp
and
incl
sbb
dec
ss
pop
cmp
and
pop
inc
push
lcall
daa
aaa
sub
inc
decb
jae
incb
add
add
add
and
add
jne
pop
aas
mov
ja
fsubrs
jo
lock
pop
dec
stc
sbb
inc
inc
jmp
aaa
cmp
sbb
call
and
decl
sbb
incl
adc
add
add
add
add
add
adc
or
mov
movsb
decl
ds
cmp
sub
adc
pop
or
dec
cmp
sbb
cmp
or
jmp
push
ljmp
sbb
jmp
and
pop
inc
es
pop
push
ss
mov
xchg
jae
jns
testl
add
pop
and
add
cmp
sbb
push
ss
outsl
push
sahf
gs
leave
sbb
and
cld
adc
decb
and
incl
adc
pop
or
adc
or
adc
or
sbb
incl
or
decl
cmp
lcall
sbb
incl
sbb
dec
xor
decl
pop
lcall
push
ljmp
and
lahf
jae
decl
inc
sbb
pop
dec
sub
xchg
nop
jae
movsb
mov
jo
test
add
sbb
add
push
push
add
cmp
and
xor
mov
add
pop
decb
sbb
call
and
add
or
incl
or
or
adc
or
adc
add
add
add
add
push
push
add
cmp
xor
inc
dec
cmp
es
or
dec
cmp
call
call
pop
ljmp
and
popf
jb
jmp
aaa
or
jb
sub
jg
dec
in
xchg
jae
cmp
or
push
dec
inc
inc
sbb
and
add
sbb
dec
aas
mov
adc
xor
adc
xor
push
es
or
sbb
add
or
add
add
and
and
lcall
and
or
or
add
add
add
sbb
pushl
cmp
incl
sub
incl
pushl
aaa
ljmp
paddd
js
std
test
cli
jbe
sub
andl
mov
push
add
inc
and
or
add
sbb
add
and
and
cmp
dec
jmp
dec
inc
cld
and
and
incl
pop
ud0
sbb
incl
adc
incl
push
push
call
pop
incl
adc
call
sbb
pop
incl
push
add
and
sbb
cmp
and
cmp
adc
dec
sub
test
push
xchg
popa
xor
test
bound
jbe
and
jne
sub
sub
aas
inc
sub
adc
add
add
add
add
cs
or
dec
inc
push
adc
cmp
xor
dec
dec
std
sbb
xor
mov
call
sbb
decl
sbb
decl
pop
decl
sbb
incl
or
incl
inc
decl
push
push
incl
adc
incl
pop
add
add
push
pushl
sub
incl
adc
std
mov
push
sti
mov
mov
jp
sub
push
xor
push
pusha
cmp
and
add
xor
inc
ja
cmp
fildll
pop
pusha
cld
daa
push
push
incb
and
incl
adc
add
and
decl
pop
push
decl
sbb
decl
push
push
call
sbb
add
add
cmp
push
or
add
add
adc
xor
sbb
cmp
pop
cmp
in
lods
cmpl
inc
sbb
push
sub
push
pop
and
push
add
add
inc
add
add
inc
xor
cmp
dec
push
jmp
and
xchg
adc
incl
sbb
decl
push
or
incl
pop
push
decl
sbb
call
and
decl
push
push
decl
push
push
cmp
cmp
add
add
push
adc
incl
add
es
adc
mulb
dec
and
inc
add
add
add
add
add
sbb
or
cmp
pop
pop
stos
xor
jecxz
sub
stc
pop
test
incl
sbb
incl
adc
incl
pop
push
incl
push
decl
sbb
decl
sbb
decl
adc
add
push
lcall
pop
sbb
pop
sbb
add
or
push
and
sbb
dec
dec
xor
cmp
aaa
aaa
and
push
add
add
push
cmp
or
inc
xor
popa
pop
je
jne
mov
mov
cld
or
sbb
or
adc
incl
sbb
decl
sbb
decl
sbb
decl
adc
add
add
add
pop
push
sbb
add
decb
pop
or
sbb
push
fisttpl
sub
xor
add
add
add
add
add
imul
adc
adc
adc
pop
mov
cmp
cld
adc
sbb
incl
or
incl
pop
decl
sbb
incl
or
or
adc
incl
push
pop
decl
sbb
decl
pop
or
negl
adc
mov
cmp
add
add
add
or
add
pop
bound
sub
cmp
aaa
adc
inc
add
add
add
insl
and
pop
imul
xchg
add
or
add
or
add
add
std
cmp
decl
pop
adc
add
push
incl
ud2
incl
or
incl
adc
incl
or
incl
adc
incl
adc
incl
or
or
add
pop
or
add
add
add
push
je
push
inc
pop
arpl
bound
stos
push
dec
sub
sub
add
inc
sbb
push
dec
and
adc
enter
cmc
adc
sbb
adc
pop
incb
or
push
decl
adc
decl
adc
incl
add
incl
invd
incl
or
decl
adc
incl
or
incl
push
or
add
add
add
add
add
add
sub
or
push
and
pop
push
cs
inc
add
push
sub
push
add
add
sub
add
mov
inc
xchg
mov
push
pop
inc
ljmp
inc
mov
es
xchg
sbb
add
sbb
sti
add
pop
incb
or
incl
or
push
incl
push
incl
push
add
or
add
or
or
add
or
add
adc
or
sbb
decl
or
incb
or
notb
adc
pop
fwait
inc
sub
jae
sbb
add
dec
and
sbb
add
add
add
add
pop
sub
mov
insb
fsubrl
pop
out
jge
jo
inc
dec
cmp
aas
dec
xor
push
push
or
add
pop
add
or
or
or
push
call
adc
decl
push
add
or
add
and
adc
xor
sbb
cmp
push
cmp
push
ljmp
pop
push
ljmp
sub
cmp
sbb
call
adc
add
or
add
push
or
add
ud2
add
pop
or
cltd
es
add
sub
sub
inc
sbb
adc
imul
outsb
mov
mov
cmp
lea
inc
es
cmp
daa
decl
das
lcall
inc
jg
popa
ljmp
dec
incl
and
decl
and
cmp
adc
dec
inc
and
xor
or
dec
inc
and
push
inc
pop
ljmp
incl
sbb
xor
or
std
cs
cld
sub
and
push
jl
es
adc
add
add
inc
and
cmovle
and
jo
imul
int
ret
cmp
es
jno
pop
lcall
mov
cmp
lea
arpl
push
dec
xor
aaa
xor
cmp
sbb
dec
dec
pushl
dec
cmp
adc
cmp
ud0
das
or
decl
mov
xchg
lcall
es
je
aas
sti
push
inc
and
push
inc
and
dec
inc
and
dec
cmp
add
add
add
inc
inc
add
cmp
sub
push
pop
inc
loopne
inc
xor
sub
sbb
inc
inc
xor
xor
and
sub
pushl
xor
adc
es
ud0
das
sbb
xor
sbb
push
push
add
push
push
cmp
inc
inc
sub
cmp
and
incl
push
incl
sbb
jb
lcall
push
and
jnp
ds
mov
out
imul
dec
sub
daa
add
cmp
add
add
add
add
add
pop
xor
inc
inc
daa
bound
dec
leave
and
clc
adc
pop
incb
add
pop
adc
add
adc
decl
push
add
decl
adc
call
sbb
ljmp
sub
lcall
sbb
lcall
sbb
jmp
and
ljmp
sub
inc
xor
ljmp
sub
imul
imulb
das
lds
or
aaa
push
and
add
add
add
add
dec
sub
sbb
aaa
popa
pusha
int3
cmp
stc
cmp
pop
sub
decl
sub
incl
invd
incl
adc
incl
push
or
decl
push
decl
sbb
push
and
call
and
incl
or
decl
add
sbb
or
adc
add
and
add
push
inc
and
push
dec
sub
divl
cmp
pop
push
and
sldt
add
sub
add
jp
test
jge
loopne
jno
sti
dec
jnp
sub
jmp
inc
inc
decl
and
incl
ss
cs
inc
ljmp
dec
inc
ljmp
dec
inc
cmp
ljmp
inc
xor
pop
cs
or
incl
or
lcall
sbb
das
ud0
adc
adc
add
fadds
or
push
xor
adc
add
add
daa
adc
popa
mov
fldt
into
cld
dec
test
and
cmp
adc
ljmp
push
dec
jmp
cmp
and
ljmp
inc
pushl
dec
cmp
aaa
push
cmp
cmp
daa
xor
add
add
or
sbb
or
adc
push
sbb
imulb
xor
push
cs
daa
daa
adc
push
jl
imul
dec
sbbb
sub
jmp
push
pop
ljmp
pop
pop
jmp
push
push
ljmp
dec
push
jmp
inc
inc
pushl
dec
inc
pushl
push
cmp
sub
jmp
xor
incl
or
decl
sbb
decl
pop
or
push
adc
add
add
add
sbb
add
dec
add
pop
aaa
and
push
push
js
push
insl
lods
aam
dec
mov
pushl
outsb
js
sub
arpl
cmp
ljmp
pop
jmp
dec
push
jmp
inc
inc
pushl
push
inc
pushl
push
inc
ljmp
das
jmp
aaa
and
incl
add
call
push
push
incb
push
add
or
add
and
add
xor
add
xor
or
pop
jbe
ja
mov
loope
scas
iret
cld
dec
jg
cmp
pushl
insb
jbe
xor
cmp
imul
sub
ljmp
dec
inc
cmp
aas
pop
inc
ljmp
dec
xor
and
and
incl
adc
call
and
ljmp
xor
call
sbb
adc
or
sbb
xlat
sub
ja
or
add
add
add
add
add
sub
cmp
push
movsl
cltd
mov
mov
inc
outsb
jl
xor
pushl
pushl
push
pop
cmp
ljmp
pop
pop
jmp
push
push
ljmp
dec
dec
pushl
dec
inc
incl
decl
dec
cmp
cmp
xor
ljmp
sub
add
xor
jmp
daa
adc
or
add
push
adc
call
inc
sub
cmp
add
inc
add
add
cs
aaa
pop
pop
or
test
dec
insl
push
cmp
bound
ss
push
pushl
push
push
jmp
dec
dec
jmp
dec
inc
jmp
inc
cmp
decl
push
lcall
pop
decl
cmp
call
add
sub
sbb
xor
pop
sbb
add
push
push
add
dec
cmp
pop
dec
sub
add
inc
daa
or
inc
cmp
insl
sub
sbb
push
fs
call
add
adc
pop
sub
sub
adc
daa
lcall
cmp
call
sub
pop
ljmp
dec
cmp
and
sbb
or
push
incl
or
decl
or
cmp
and
std
cmp
adc
mov
sbb
sub
add
inc
add
add
xor
pop
cmp
dec
fldt
ss
sbb
stc
and
sbb
das
cmp
push
sbb
sbb
adc
sub
ljmp
cmp
xor
sub
and
lcall
adc
pop
jl
pop
std
pop
dec
xor
dec
inc
and
push
inc
and
push
cmp
adc
add
add
inc
add
add
and
adc
inc
inc
and
cmp
sbb
sub
or
sbb
add
and
push
cli
sbb
add
sbb
add
and
pushl
daa
or
pushl
pop
add
aas
sub
jae
xor
sbbl
mov
pop
aas
push
inc
dec
adc
push
inc
add
dec
aaa
add
jae
xor
gs
movsb
mov
into
test
mov
lods
mov
fld
popf
jmp
sahf
jmp
jnp
jge
pushl
adc
fisubrl
pop
int3
cltd
outsb
aas
jno
or
pop
and
push
add
add
add
add
xor
or
adc
pop
xor
inc
insl
inc
sbb
test
jmp
stos
test
xchg
push
dec
mov
fs
xchg
bound
fwait
fs
enter
lret
xchg
pop
mov
push
sub
daa
add
add
add
add
xor
add
add
and
test
add
add
push
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
mov
add
add
xor
cmp
xor
xor
xor
xor
inc
add
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
sub
dec
or
pop
cs
mov
push
pop
xchg
aad
jg
sub
add
add
add
push
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
adc
mov
mov
jp
pop
add
xor
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
pop
dec
add
addr16
bound
and
testl
sub
imul
add
add
add
outsl
add
insl
add
outsb
add
add
add
or
pop
jg
sub
in
mov
mov
jg
push
sub
push
add
cmp
das
add
add
ja
ja
add
jns
jne
jns
popa
add
add
outsl
add
sub
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
loopne
das
add
fs
add
jb
gs
xor
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
arpl
add
arpl
add
fs
add
fs
add
add
add
dec
fs
add
add
jmp
mov
add
pusha
call
pop
sub
mov
add
mov
mov
sub
push
push
mov
lods
lods
add
mov
push
mov
push
push
push
call
pop
pop
mov
push
push
push
push
push
push
mov
lods
lods
add
push
lods
add
call
push
push
lods
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
lods
push
lods
add
push
push
push
mov
call
pop
add
mov
lods
push
lods
push
lods
push
lods
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
pop
test
je
push
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
dec
popf
mov
sub
mov
sbb
call
mov
sub
adc
inc
pop
lret
movsl
push
ret
push
pop
cmp
lret
insl
fsubrl
insl
repnz
inc
xchg
xchg
rol
xor
push
dec
mov
or
inc
fcomip
aam
in
sbbl
fucom
or
sub
inc
popf
mov
fwait
test
inc
push
out
ret
lret
aam
or
and
mov
inc
cld
pinsrw
cs
shll
inc
mov
mov
stc
clc
fsubrp
jae
call
icebp
in
js
inc
das
test
xchg
jae
cmp
cltd
rcr
adc
or
or
inc
sub
ds
cmp
dec
xor
cltd
mov
or
fidivrs
push
in
dec
in
lahf
xchg
and
div
in
inc
mov
call
xor
mov
sbb
xlat
sub
insb
or
xor
push
adc
inc
cltd
subl
xchg
subl
ret
sbb
pushf
loopne
lret
imul
cmpsl
dec
seta
xlat
clc
addr16
or
fwait
jae
in
outsl
ficoms
xor
inc
ja
mov
fucomp
lret
add
fldt
pop
daa
subb
pop
cmc
mov
shll
mov
jecxz
and
adc
rclb
mov
icebp
int
orb
jae
rclb
inc
pop
test
fmul
sub
sbb
repnz
stos
arpl
dec
fcmovb
cmc
and
cmp
mov
mov
mov
outsl
mov
dec
lcall
or
lods
cmp
jp
push
cmp
sub
or
idivl
fsts
stos
xchg
hlt
inc
andl
push
mov
inc
scas
aad
and
pop
insb
mov
inc
mov
xor
mov
imul
adc
mov
repz
jo
ret
jmp
aad
xlat
push
imul
test
and
or
jnp
lahf
repz
in
dec
mov
lods
sbb
repz
sbb
and
in
push
mov
and
incl
pop
cmp
dec
pop
inc
ror
sti
fcmove
jge
jo
loopne
fisttps
daa
jmp
cli
pop
mov
dec
leave
and
mov
and
xchg
and
mov
push
pop
mov
pop
jle
mov
dec
cwtl
fidivs
sarl
icebp
aam
xacquire
sub
or
xchg
add
jle
test
jle
adc
aam
cmp
dec
jecxz
in
adc
ja
cld
xlat
inc
in
jecxz
adc
xchg
insl
mov
xchg
ljmp
mov
push
inc
nop
or
fnstenv
loop
adc
gs
xor
cmp
icebp
pop
xchg
out
in
movsb
jbe
das
inc
iret
movsbl
lods
test
mov
andb
aad
lods
sbb
add
sub
mov
rcll
push
cmc
push
jo
mov
sub
ja
xlat
pop
xchg
push
js
mov
bound
nop
outsb
push
xchg
clc
jmp
roll
daa
in
mov
ret
cmp
xlat
inc
or
ss
lods
enter
in
rclb
lds
mov
push
and
rol
mov
push
push
add
dec
xchg
stos
jp
or
inc
dec
cwtl
repz
outsb
sub
hlt
and
dec
ret
xor
cmpsb
inc
mov
jnp
scas
insl
lds
cmp
not
divl
movsb
inc
insl
mov
cs
mov
adc
mov
daa
push
sub
cmpl
jl
cmc
aam
sub
into
or
jb
add
out
in
xchg
jnp
aaa
push
push
insb
pop
jbe
pushf
cld
lret
dec
leave
inc
push
or
cltd
dec
lcall
xchg
mov
jecxz
mov
repnz
sbb
cmp
push
jb
sbb
rolb
sbb
adc
das
or
ret
sti
sub
sbb
inc
dec
and
xchg
in
lret
ret
xchg
mov
leave
push
fisttpll
in
or
ljmp
call
lahf
cmp
ja
inc
cmp
mov
xchg
push
lea
andb
mov
cmpsb
jl
roll
addr16
shlb
dec
xchg
xor
cld
or
xorl
mov
adc
pop
outsl
sub
add
and
cmp
mov
pop
aas
test
sbb
cmp
jns
data16
movsl
stos
push
dec
push
mov
xor
push
push
sbb
push
mov
mov
iret
imul
jmp
and
fnsave
xor
and
es
je
je
mov
andl
push
outsb
cmp
xor
cli
xchg
push
xchg
adc
push
sti
xchg
lods
loope
lods
cltd
iret
jge
xchg
scas
shlb
inc
jne
shlb
jg
out
divb
mov
sbb
jnp
imul
not
pop
pop
xchg
pop
lods
push
mov
daa
xlat
popa
xor
scas
or
icebp
jns
loopne
fmull
mov
cld
mov
fidivl
push
dec
cld
sub
into
lahf
aas
fsubs
out
xchg
inc
popl
pop
pop
mov
dec
xor
inc
mov
arpl
or
imul
icebp
outsb
cs
and
rcll
sti
xchg
and
push
nop
jne
in
stc
pop
mov
pop
bound
add
adcl
faddp
fisttpl
in
push
mov
in
cli
pop
adc
mov
ja
xor
xor
adc
adcl
mov
adc
jp
rclb
out
call
and
push
sbb
xchg
cmp
fmuls
movsb
xor
aas
loop
int
fiadds
lea
or
sbb
or
jp
hlt
mov
jle
add
pusha
and
pop
pop
arpl
xor
pushf
lock
stos
rcrb
jo
popf
pop
movsl
mov
adc
cltd
jp
ret
fsub
aaa
insl
mov
mov
push
pop
push
or
push
xchg
cmc
sbb
lock
addb
pop
pop
add
cmp
cmp
ljmp
loop
jp
mov
lcall
jp
jl
mov
sbb
push
aam
in
pop
xchg
faddl
stos
adc
push
stos
sbb
inc
sahf
sub
and
cmp
xchg
pop
push
fst
into
push
sti
mov
dec
mov
fcoml
push
insb
dec
pusha
push
push
jno
or
cmp
pop
sub
mov
or
add
jle
xor
push
out
insb
adc
aaa
and
or
sbb
loope
push
jge
insb
inc
and
call
rclb
inc
mov
div
inc
jae
pop
test
pop
jne
pop
or
sbb
sbb
test
pop
xchg
testl
inc
jl
mov
adc
pop
sub
xchg
xchg
lcall
movsl
jl
push
addr16
mov
cmp
xor
jp
aas
jle
repz
jbe
inc
loopne
inc
repz
mov
jle
jg
or
or
xor
lods
stos
add
addr16
pop
mov
adc
inc
mov
scas
or
adc
in
sub
dec
rep
sahf
and
rorb
mov
xor
cmp
std
mov
loop
cmp
ror
int3
cld
xor
sbb
negl
jg
cmpsl
dec
ret
sbb
lock
aam
push
notl
repnz
mov
fldcw
jge
iret
jae
imull
mov
out
in
cmpsl
sub
movsb
cmp
sub
aas
dec
loope
xchg
add
out
xchg
jno,pn
int
lods
iret
mov
or
jnp
mov
orl
pop
cld
jns
out
and
dec
jne
push
addr16
mov
dec
mov
and
jle
dec
out
sbbl
icebp
xor
xchg
cmc
rsm
jae
in
push
je
jne
pushf
dec
das
xchg
imull
push
push
add
imull
rcl
mov
test
cmp
and
das
xlat
nop
cwtl
sub
loop
adc
cmp
pushf
aas
test
dec
dec
subl
jecxz
lahf
dec
mov
jmp
dec
mov
dec
aaa
test
jle
xor
push
fptan
adc
jae
jge
sbb
fwait
aam
pusha
repnz
lret
xchg
cmpl
xchg
sbb
xor
sbb
lret
xchg
leave
outsb
in
jle
xor
lret
je
add
fcompl
mov
int3
ret
and
jp
rolb
sub
push
push
inc
cmc
inc
xchg
outsl
xchg
mov
out
nop
jo
pop
pop
sub
adc
sbb
pop
loop
inc
repnz
repnz
aad
loopne
jle
adc
lret
cwtl
iret
jp
sub
cmp
jmp
js
add
dec
jmp
jg
inc
addr16
sti
jge
mov
mulb
arpl
imul
insb
xor
mov
lcall
dec
mov
jo
imul
jne
pcmpgtw
cs
outsb
sbb
pcmpgtw
adc
popf
or
je
xchg
push
lret
mov
push
inc
outsl
add
xchg
adc
push
or
sarb
adc
dec
and
push
push
mov
mov
cmp
pop
mov
mov
or
and
sarl
call
mulb
imul
cmpsl
push
cmp
add
cld
iret
jmp
fstps
mov
or
pop
mov
das
cltd
push
test
sbb
adc
sbb
jo
mov
and
ds
sbb
pop
xchg
jne
jae
addr16
add
shll
repnz
aas
and
dec
imul
xchg
testl
test
push
push
dec
and
cld
xor
or
jl
insb
xor
xor
lret
xchg
add
push
outsb
xchg
test
xchg
add
mov
sahf
push
xor
fs
mov
mov
jp
test
and
push
cmpsb
pop
dec
movsb
dec
rcrl
ljmp
sbb
xchg
loop
sti
jmp
in
jns
push
push
pop
mov
imulb
popf
adc
inc
lods
xor
xor
mov
stos
push
pop
iret
cmp
insb
jl
and
in
cmc
cmpsl
and
clc
and
and
les
mov
add
imul
aas
pop
jno
movsb
push
movsb
xor
gs
daa
jnp
vxorps
pop
push
divl
jno
iret
call
or
popa
cmp
xor
stc
sarl
fldt
arpl
mov
cmp
push
pop
gs
shrl
in
push
enter
rol
pop
clc
add
or
mov
jmp
jae
sbb
negl
xor
ret
push
mov
xor
dec
lret
dec
xchg
lea
jnp
data16
mov
repnz
sbb
bound
inc
stos
inc
sub
push
je
imul
add
jg
pop
sbb
fcmovnb
or
gs
mov
inc
pop
rorl
sarl
repnz
outsb
pop
sar
xchg
aam
mov
xchg
lock
ffree
ret
mov
gs
inc
imul
movsl
adc
jno
incb
xor
xchg
xchg
ret
xchg
cli
push
and
xchg
dec
mov
test
in
in
mov
mov
xchg
rcr
ret
jbe
test
cmpb
nopl
mov
lcall
or
enter
pop
imul
inc
leave
pop
arpl
inc
loope
in
and
mov
scas
xchg
insl
jg
jp
inc
pop
sub
inc
fmul
xchg
xchg
mov
jg
stos
std
lock
sub
fimuls
jb
imull
push
fwait
inc
jae
cmc
inc
and
rorl
stos
jne
and
inc
enter
out
pop
lods
fcompl
inc
es
xchg
push
out
in
maskmovq
divl
mov
or
sarb
mov
clc
lret
out
xchg
jl
test
movsl
push
pop
out
sbb
aad
xchg
mov
pop
xor
out
fidivs
pusha
inc
pushf
ret
mov
aaa
ret
adc
adc
cmc
xor
cltd
pop
push
loopne
fistpll
sahf
iretw
xchg
cmpsl
pop
add
jl
std
adc
je
daa
cmp
add
mov
pop
idiv
ret
or
out
inc
add
cmp
mov
jne
sti
jp
dec
add
ficoml
xchg
loop
sbb
test
dec
mov
mov
xlat
or
mov
std
lret
gs
insl
dec
ret
mov
in
shl
sub
jecxz
mov
jbe
xchg
adc
shlb
xchg
stc
cmp
mov
in
leave
mov
js
je
mov
mov
cltd
int
sub
cmp
lret
add
push
pop
rclb
add
ja
orl
and
xchg
push
jmp
dec
sahf
cmpsl
mov
mov
ss
sub
repnz
mov
ficompl
ljmp
in
inc
jb
dec
popf
fucom
sarl
testl
pop
gs
aad
call
int3
adc
scas
gs
or
bound
push
cld
mov
push
mov
adcl
pop
int3
repnz
out
sbb
insl
addr16
aaa
fdivs
sbb
mov
insl
out
sbb
or
sti
scas
cmp
aaa
pop
cmp
rorl
imull
dec
shll
sbb
jge
loope
pushf
ja
sahf
sbb
daa
push
popa
push
xchg
lods
pop
filds
pusha
adcb
mov
and
decl
inc
mov
mov
addr16
shll
cmp
aad
arpl
pop
leave
cmp
or
mov
dec
ja
mov
ror
ss
mov
adc
test
jge
ss
xchg
jl
inc
insb
jle
lock
das
popl
push
loope
jmp
in
pop
adc
sahf
and
jae
inc
xlat
out
push
sbb
test
sub
dec
and
lret
fnsave
dec
xor
mov
xchg
xor
inc
or
gs
jbe
adc
xchg
xor
stc
jno
test
aas
lea
dec
mov
mov
xor
repz
jae
mov
xchg
mov
es
push
call
xchg
mov
and
sbb
sbb
xchg
mov
ror
sarl
jmp
xor
add
add
dec
xchg
xlat
mov
pop
sbb
mov
bound
les
mov
pop
je
in
pop
stc
xchg
inc
dec
and
clc
inc
mov
movsb
pop
xchg
inc
mov
xchg
sub
jge
xchg
and
push
call
push
pop
fisttpll
outsl
jo
jmp
shlb
mov
xchg
or
lret
jl
xor
dec
or
add
xchg
and
repz
jb
jb
mov
fcmovu
sub
push
fimuls
mulb
ljmp
ja
dec
sub
pop
rorb
sbb
test
mov
sbb
add
adc
jp
hlt
inc
adc
cmc
hlt
lcall
aad
out
loop
mov
push
inc
cld
ljmp
adc
xchg
daa
imul
arpl
icebp
imul
sahf
xchg
adc
test
or
pop
cmpsb
imul
call
pop
incl
xchg
jge
xor
jge
insb
cmp
add
ret
popf
or
sar
imul
clc
pop
mov
add
mov
mov
repnz
mov
cmp
daa
icebp
xor
xlat
aas
push
dec
or
adc
pop
outsl
icebp
push
jo
adc
jb
stos
push
adc
cmp
mov
sub
adc
popa
pop
xchg
add
dec
mov
sub
cmp
dec
lock
sbb
sub
daa
imul
pop
fwait
mov
ffreep
out
scas
mov
inc
inc
outsb
mov
push
xchg
lea
push
cmp
add
repz
shrb
adc
push
mov
dec
pop
xchg
pop
cmpb
push
xchg
jle
js
jmp
sbbl
push
dec
in
cmp
add
enter
xchg
jecxz
jmp
pop
pop
dec
sub
pop
push
aaa
xlat
mov
out
dec
loope
out
ret
cmc
inc
das
cmp
mov
mov
cli
cmp
test
lds
mov
or
jae
sahf
cld
vmaxpd
cmp
loopne
movsb
cmc
mov
gs
in
in
lea
push
xchg
or
movsb
arpl
xchg
outsl
cmp
rcrl
inc
pop
and
int3
mov
pop
in
add
enter
lcall
shrl
mov
sub
test
adc
xchg
mov
dec
pop
mov
cs
sarl
inc
daa
pop
xor
gs
xor
mov
add
and
and
iret
fsts
xchg
pop
ja
xor
hlt
mov
shl
aad
mov
loopne
cmp
fcoml
mov
fs
lods
add
das
mov
call
decl
pop
stos
subl
lea
rolb
mov
pop
xchg
mov
outsb
rcrb
mov
icebp
sti
sub
jnp
fcomps
repnz
inc
ljmp
xor
ret
adc
sti
lock
sub
in
mov
jecxz
popf
outsl
add
mov
lea
sbb
loope
ficompl
cld
lock
jmp
mov
pusha
adc
cmp
nop
in
lret
sub
mov
jno
xor
add
add
pop
sti
scas
loopne
repz
pusha
fildll
in
das
lea
lret
or
cmp
push
bswap
sub
jecxz
stos
or
out
dec
pop
mov
popf
sahf
fnop
fwait
push
leave
inc
xor
jnp
insb
pop
fisttpl
push
xlat
mov
setge
cmp
dec
inc
mov
sub
fwait
nop
jl
and
in
imul
pop
fs
and
shll
mov
jg
dec
fs
mov
das
js
aaa
fdivrs
test
mov
xchg
out
fldl
xorl
bound
lock
add
xlat
or
xor
adc
sub
add
mov
int
enter
xor
add
outsl
mov
and
cmp
mov
mov
mov
andb
or
in
sub
sbb
and
fnsetpm(287
or
and
mov
sbb
mov
pop
lcall
ficomps
aam
add
jns
and
dec
neg
aaa
lea
adc
inc
jns
into
or
sti
in
jno
add
jmp
and
pop
movsb
xchg
cmp
add
mov
icebp
ljmp
mov
or
push
and
mov
jae
mull
repnz
ss
cmp
or
mov
cmp
inc
imul
mov
sar
outsl
arpl
ja
fdivrp
scas
and
dec
mov
daa
test
xchg
in
sbb
mov
and
sbb
sbb
xlat
xchg
jae
pop
repnz
jmp
repz
shrl
jns
imul
mov
pop
jmp
mov
insl
stos
addb
mov
aas
and
xchg
xchg
int3
cmp
lods
xchg
push
xchg
pop
mov
cmpl
adc
pop
outsb
loope
jns
pusha
dec
fisubl
bound
or
fwait
imul
pop
test
fwait
dec
inc
or
adc
mov
xchg
mov
xor
ret
push
jo
sarb
insl
xchg
loop
repnz
cmp
pop
mov
loop
movsb
les
jmp
test
adc
jg
mov
lods
stc
xchg
inc
repnz
nop
int
jns
dec
in
ljmp
dec
int3
pushf
jmp
cmp
push
jecxz
jle
lds
jg
aad
mov
popa
test
cwtl
push
mov
cs
jnp
mov
add
lods
mov
xor
xor
sub
das
pop
inc
addr16
sub
rcr
in
int
xor
pop
movsb
push
fsubrs
push
add
sub
scas
xchg
into
add
cmp
mov
or
stc
in
dec
lahf
cmp
lret
pop
in
mov
insb
outsb
mov
cmp
xchg
mov
sub
add
ljmp
jl
xor
adc
es
mov
lcall
xchg
sbb
dec
fiadds
cmp
sbb
mov
or
mov
cld
xchg
in
cli
inc
les
das
repnz
mov
push
int
inc
sbb
adc
in
stc
loop
or
lahf
push
insl
mov
fs
add
pop
test
jmp
mov
das
in
pop
and
outsl
jl
js
mov
inc
in
inc
or
jecxz
test
push
mov
aad
pop
adc
leave
call
cmp
loop
pop
and
mov
push
ds
lods
sub
nop
jo
jnp
fwait
and
out
dec
add
enter
xor
je
pop
jecxz
repnz
xchg
pop
push
dec
fldl
outsl
test
scas
enter
xchg
out
addr16
mov
mov
test
out
jne
add
jge
aad
fnstcw
add
daa
insl
mov
add
pop
sub
lret
or
mov
pushf
add
dec
popa
stos
adc
mov
cmpsl
test
jmp
sub
not
sbb
or
dec
or
cmp
cld
fmul
rorb
mov
mov
add
cmc
pop
out
mov
or
xchg
mov
inc
pop
jecxz
xor
outsb
sub
pop
sahf
popf
inc
pop
in
xchg
test
inc
sub
adc
dec
subb
mov
loop
popl
jg
mov
mov
push
sub
cmp
div
xchg
and
jae
clc
jmp
mov
or
popa
cmp
stos
hlt
jns
sti
inc
in
xor
ss
push
fchs
mov
fcmovbe
imul
sub
cld
and
aas
jmp
scas
clc
jno
pop
iret
pop
pop
mov
rclb
xlat
addb
mov
pop
mull
or
cmp
mov
mov
lcall
popf
outsl
cmp
nop
enter
enter
mov
adc
in
mov
mov
rolb
push
push
inc
outsl
gs
jae
xchg
push
sahf
and
inc
sub
cmp
and
test
jg
mov
lret
mov
repz
ss
xlat
out
cltd
add
jmp
cld
outsb
inc
sti
xchg
inc
out
pop
rolb
dec
push
leave
or
adc
sahf
stos
push
out
mov
cmp
or
insl
inc
not
movsb
movsl
call
pop
lds
in
cli
push
imul
inc
movsb
lods
notl
mov
and
sub
mov
inc
push
mov
inc
mov
shrl
in
jnp
outsb
jbe
dec
xchg
pop
xchg
jl
mov
mov
jmp
aas
sbb
xor
xor
inc
sub
ja
fisttps
sbb
jge
adc
xchg
dec
sbbb
or
xchg
pop
adcl
rcll
repnz
xchg
mov
jns
mov
xor
cmp
and
jmp
stos
outsb
sub
subb
push
or
filds
inc
jb
lods
cmpsl
cwtl
xchg
xor
sub
and
cli
fldl
test
mov
push
cmp
imul
adc
pop
out
in
in
push
orl
dec
pushf
sarl
nop
xchg
cmpsb
push
and
push
cld
repz
cld
sbb
cmp
std
dec
add
call
arpl
stc
add
jne
fists
pusha
xchg
insb
clc
movsb
inc
jns
mov
test
jl
mov
shr
fstps
dec
xchg
shrl
dec
sub
inc
pop
sbb
xlat
cmp
sbb
mov
stos
rolb
shl
rcr
lods
inc
repz
adc
xrelease
xchg
popa
ss
pop
stos
loop
jb
psrad
mov
mov
dec
mov
inc
inc
adc
lods
ret
filds
jb
pusha
and
push
ds
cs
mov
jbe
pusha
pop
pop
inc
sti
mov
cmc
fsubrs
movsl
mov
xchg
xchg
cmp
ss
testb
aam
or
aas
xor
sbb
int3
repz
pop
adc
adc
lahf
jp
aad
cmp
stos
out
int
mov
aad
and
mov
in
popa
fstl
jo
inc
mov
mov
push
push
jg
mov
xchg
and
cli
mov
lret
push
ljmp
or
test
xor
lods
pop
sub
jg
and
femms
lods
aas
imul
xchg
push
or
hlt
pop
mov
sahf
movsb
sbb
cmpsb
xchg
push
cmpsl
daa
or
cmp
dec
push
mov
test
dec
je
mov
leave
mov
jge
sub
scas
mov
lret
add
xchg
popa
push
bound
js
inc
fistl
push
add
arpl
and
dec
mov
sbb
sub
mov
loop
ficompl
rcrl
scas
sub
pop
in
mov
or
pop
sub
pop
jne
insl
outsb
sbb
mov
adc
add
pop
loope
jbe
jbe
lds
push
cld
and
and
adc
pop
roll
jecxz
mov
lods
jl
jbe
inc
popa
in
sbb
sub
xor
pop
or
dec
fiaddl
not
push
dec
dec
mov
and
xor
mov
push
fdivrp
data16
decb
or
xorb
add
aaa
imul
xor
jp
jp
xlat
add
adc
stos
adc
xchg
addl
add
jmp
rclb
stc
and
test
adc
xchg
les
push
ja
mov
add
std
int
scas
jl
stos
add
cld
shrl
insb
stc
mulb
xchg
aaa
inc
rcr
cltd
lret
sub
mov
push
sub
or
clc
jb
movsl
jno
mov
in
xchg
jae
lods
sbb
popa
push
imulb
pop
mov
iret
jecxz
xchg
mov
pop
adc
inc
mov
rcll
cltd
inc
push
rcrl
inc
inc
pop
int3
outsl
mov
sub
cld
clc
cs
sarl
mov
ds
jb
inc
movsl
xor
out
cmc
sub
divb
shrb
lret
int
stos
pop
in
push
mov
test
or
push
sub
push
je
loope
insb
mov
pop
sti
mov
test
xlat
add
pavgw
out
dec
inc
lret
push
inc
test
jecxz
xor
movsb
push
test
xchg
mov
test
in
adc
jns
fbstp
sub
dec
iret
push
testb
int
lret
mov
pop
shrb
dec
lods
cmp
cs
test
loop
lea
sbb
in
leave
sub
sar
fcoml
lahf
add
das
cs
mov
cmp
mov
repnz
test
push
stc
push
push
leave
rorl
jne
xchg
add
pop
add
xchg
sub
scas
ja
ret
ja
add
sbb
or
mov
mov
je
or
mov
inc
stos
lods
sahf
mov
into
les
inc
or
mov
cmp
push
xchg
jmp
push
sti
ret
lods
mov
sub
in
mov
mov
pop
sub
pop
imul
jle
ror
fbstp
dec
rcrb
pop
shll
inc
stc
cltd
iret
arpl
adc
das
fcoml
ja
test
and
out
dec
lret
add
push
pop
cmp
scas
add
decb
fwait
std
movsl
sbb
dec
jnp,pt
pop
mov
pop
push
jecxz
sub
pop
add
adc
cli
push
fldl
outsl
add
add
test
or
cltd
stos
xchg
mov
fisubs
imul
and
leave
dec
mov
test
int
mov
mov
xor
fidivrl
mov
or
call
and
stos
jo
rorl
push
mov
mov
push
pushf
xor
xchg
cmpb
pop
fldt
stos
or
cmpsb
pushf
shrb
add
fisttpll
jns
or
inc
and
fdivl
fwait
pop
pop
mov
sub
pop
mov
aam
in
ja
gs
out
mov
mov
iret
rcrl
stos
mov
pop
dec
pop
in
sbb
clc
and
push
sub
repz
cmp
insl
call
lea
roll
jmp
fnstsw
out
int3
fnsave
pop
jmp
ret
loop
dec
out
inc
test
mov
lret
xchg
addl
mov
pusha
je
scas
fmull
push
adc
filds
jle
stc
pop
pop
js
mov
jns
rcll
mov
jns
imul
in
leave
push
ret
lods
jne
mov
insl
lret
sub
rcrb
push
pushf
stc
nop
lcall
je
hlt
nop
jg
inc
rcl
dec
jle
cs
pusha
and
in
subl
pop
push
mov
pop
aas
loop
sbb
xor
and
lret
mov
jmp
pop
fsubs
mov
inc
test
aad
inc
das
jg
insl
in
push
or
lea
or
aad
or
and
mov
clc
rorb
enter
stos
inc
lahf
ret
xchg
addb
jle
lods
xor
daa
mov
movsl
popf
xchg
push
mov
xchg
or
push
aad
lods
pop
pusha
pop
loope
pop
dec
fidivrs
cmp
imul
mov
add
mov
adc
pop
push
add
in
adc
insb
sarb
push
lcall
loope
push
fidivrs
mov
sub
inc
mov
jl
out
inc
cmp
inc
lods
mov
dec
cli
pop
repz
adc
enter
lock
jbe
lea
out
xor
mov
jno
int
fsubrl
and
adc
pop
cmp
xchg
xor
add
data16
cld
loope
lahf
pop
lcall
out
mov
inc
xlat
mov
ja
push
in
loop
fwait
push
decb
out
pop
frstor
xor
xchg
xor
in
add
jl
or
gs
sbb
fnstcw
cmpsl
and
int3
test
mov
insl
cmp
jbe
lahf
repnz
and
outsb
inc
rorb
mov
xlat
dec
or
aas
pop
pop
xchg
into
data16
sbb
imul
mov
imul
xchg
mov
das
pop
mov
xchg
jge
pop
adc
dec
incb
sahf
sbb
sub
and
mov
jae
loop
clc
inc
gs
and
das
push
mov
int3
je
and
sub
add
test
push
bound
sub
sub
sub
outsb
rcrl
pop
xchg
outsl
mov
pop
mov
and
loopne
cmp
push
jo
and
call
ficomps
dec
mov
dec
popa
inc
popa
pop
xchg
aam
bound
int3
add
and
outsl
fs
inc
mov
aaa
scas
fcompl
pop
cltd
mov
xchg
jno
cmp
pop
and
cltd
ficoml
imul
out
fdivs
mov
push
stos
shll
inc
test
scas
push
addr16
dec
js
les
adc
jbe
jb
sub
daa
push
jge
scas
adc
scas
lea
mov
iret
jle
scas
push
mov
add
subl
icebp
inc
sbb
test
loope
jne
dec
into
pop
aam
xorl
es
lods
and
popf
inc
sub
push
notb
cmp
add
int
cmc
add
dec
adc
adc
mov
fistl
cmp
dec
shlb
sbb
sub
xlat
or
pop
push
notb
push
jne
mov
xchg
call
sub
loop
repnz
ds
cmp
ret
dec
ja
pop
xchg
mov
rorb
xor
pop
ja
stos
pushf
inc
insb
or
push
inc
aas
adc
lods
mov
xchg
dec
inc
in
add
stc
inc
fcoml
scas
sbb
jbe
adc
into
sarl
xor
test
sahf
xchg
jae
or
aaa
mov
cmp
popa
and
stos
inc
mull
sbb
mov
scas
insb
int3
cmp
call
mov
xor
sbbl
bound
loopne
outsb
dec
cmp
ds
mov
sbbl
insl
js
cmpsl
xor
fldt
sub
sub
test
sbbl
xchg
xor
lret
pop
test
bswap
hlt
push
fdivrl
sbb
aas
rolb
sub
jecxz
idiv
shr
loope
pop
mov
mov
pop
sbb
xchg
arpl
xorl
je
or
add
leave
cld
pop
sub
push
xchg
outsl
addb
out
push
call
inc
and
roll
xchg
cmp
inc
push
jns
sti
jmp
in
rcrl
adc
jl
mov
ljmp
dec
call
mov
add
xor
into
push
inc
enter
jne
push
push
jp
lods
enter
les
push
adc
xchg
ja
loope
sarl
testl
rcr
mov
aas
rolb
ds
mov
and
rcrb
jbe
dec
xchg
xor
adc
or
dec
roll
cmp
imul
movsb
lods
push
subl
push
xchg
dec
std
pushf
mov
inc
push
int
xchg
mov
mov
sbb
jb
faddl
mov
push
cmc
lods
ss
mov
sbb
or
fldcw
out
fists
xor
mov
adc
inc
ret
testb
inc
mov
mov
inc
repz
mov
mov
jmp
into
aas
fmuls
add
xchg
fdiv
push
in
and
test
sub
lock
addr16
lods
cmpsb
scas
lcall
inc
mov
dec
test
push
imul
pop
cmp
cmp
fs
push
scas
adc
jns
xchg
push
mov
pop
cmp
and
lods
or
add
std
les
sub
ljmp
mov
shl
inc
mov
jo
jmp
sbb
shlb
outsl
mov
in
int
pop
dec
xorb
adc
mov
sub
jne
mov
or
jmp
enter
push
gs
loope
sbb
mov
xor
xchg
fwait
in
adc
leave
push
sbb
push
pop
rorb
outsb
jne
cmp
fucomip
mov
and
jge
cmpsb
pop
repnz
mov
push
ror
pop
ljmp
xchg
or
ret
hlt
fdivr
mov
sub
adc
dec
es
data16
cmpsl
cmp
adcl
inc
int3
pop
cmp
lret
in
hlt
mov
mov
movsl
push
jnp
dec
lods
mov
shl
popa
into
dec
sub
cmp
rcrl
sub
out
jmp
js
cmp
mov
inc
fisubrl
cwtl
sbb
jg
repz
idivb
xor
fsubl
jmp
dec
mov
test
imul
addr16
add
addr16
sub
sub
cmpl
inc
cmp
in
loope
or
scas
xchg
andl
push
aas
jb
js
notl
jne
pop
in
sub
push
je
loopne
cltd
mov
rcl
daa
sub
xor
mov
lret
inc
ss
jnp
ret
setp
adc
cmc
xor
push
add
pop
cld
and
cmovle
xor
xor
jo
rorl
pop
mov
aas
mov
dec
and
out
rcrb
lret
outsl
adcl
or
cli
insl
stc
or
add
xor
jae
loope
push
cli
in
add
sub
xchg
sbb
arpl
add
andl
lahf
sub
int3
pusha
in
movsl
andb
mov
ja
sbb
lcall
je
and
cmp
cmpsl
lahf
xchg
add
pop
mov
cmp
adc
addr16
aas
or
out
and
lods
lcall
inc
dec
insb
xor
lock
mov
loope
fnsave
mov
or
jne
loope
sub
clc
xchg
add
or
sub
neg
hlt
cmp
sub
inc
pop
ljmp
inc
xor
outsb
int3
sbb
or
xchg
scas
sub
xchg
mov
je
xorb
and
out
loopne
in
dec
aam
outsb
add
leave
inc
jmp
popf
sbb
loope
lds
push
add
jae
adc
fucomp
xchg
lret
push
dec
pop
push
jne
or
loop
cmp
jo
dec
xor
dec
popl
stc
pop
and
or
add
add
pop
xor
xor
pop
xchg
ficoml
mov
cmp
mov
int
push
shlb
jge
movsb
sahf
sub
mov
dec
add
adc
jo
lods
into
pop
or
jmp
adc
bnd
xchg
mov
insb
rol
stc
xchg
sub
icebp
das
jge
inc
sbb
pop
stos
cmp
fnstcw
imul
dec
dec
lret
fisubs
inc
or
fyl2x
cmpl
loopne
adc
add
inc
inc
bound
dec
sub
pop
xor
xor
dec
jge
push
fstl
sub
sbb
xchg
and
hlt
xor
and
loope
mov
and
mov
cmp
cli
inc
push
mov
ret
popfw
mov
cmp
or
dec
repz
inc
xchg
and
xor
movsl
hlt
mov
sub
popf
add
push
push
sbb
fldt
cmp
inc
loope
movsb
orb
or
pop
shlb
addr16
aas
sbb
cmp
scas
and
add
sbb
inc
test
aas
xchg
ljmp
pop
push
mov
xlat
or
mov
shr
outsb
sahf
imul
xor
jl
push
xor
adc
push
xchg
or
xor
out
jecxz
push
mov
cmp
imul
shr
enter
or
in
inc
push
sub
call
out
mov
add
fs
add
repz
daa
mov
enter
mov
jp
cltd
xchg
xchg
fs
sub
add
xor
mov
pop
dec
rorl
cli
je
pop
pop
hlt
pop
push
pop
shrb
addr16
scas
out
cmp
dec
fcoms
add
cmp
comiss
pop
mov
push
insl
xor
je
sub
jnp
dec
mov
inc
sub
sub
daa
mov
mov
jmp
icebp
mov
sbb
jp
pushf
dec
jns
test
sub
ja
les
imul
clc
test
paddb
subb
aas
xchg
aad
mov
dec
dec
js
stos
aam
mov
xor
xchg
aaa
lock
fistpll
xchg
pop
movsl
imul
shrb
rorb
sbb
push
adc
insb
push
xchg
mov
in
sub
mov
stc
or
outsb
xchg
push
out
std
mov
repnz
xchg
fstps
xor
aas
out
and
fs
mov
sub
flds
test
enter
and
add
jns
out
adc
jp
jl
lds
push
rorb
out
lret
xchg
pop
scas
pop
or
cmp
cltd
pusha
bnd
jne
xor
nop
push
cld
jp
lret
aad
sbb
bound
aas
jne
cwtl
mov
mov
inc
into
stc
push
jmp
je
dec
leave
decb
sbb
data16
mov
mov
cmpsb
push
mov
mov
mov
xor
in
dec
or
or
dec
rorb
jb
ss
xorb
push
js
out
fcomp
cli
pop
cli
fildll
mov
cmpsw
or
mov
push
mov
xchg
add
in
sbb
out
xor
dec
aad
and
lods
test
inc
mov
ljmp
and
loope
cs
mov
add
mov
push
cli
stos
or
xor
dec
in
mov
lock
test
mov
lret
das
push
cltd
test
fdivs
lret
jle
or
pop
aam
cmp
cmp
pop
das
dec
movsl
cltd
out
add
or
pop
and
sbb
sarb
xchg
jns
mov
imul
jo
add
aam
xor
mov
mov
mov
sbb
cwtl
and
outsb
cmp
ret
stos
sub
pop
andb
in
jl
sbb
rcll
ret
push
and
jg
data16
mov
adc
mov
jl
and
movsl
xchg
xor
roll
jle
addr16
sub
mov
push
jecxz
addr16
jns
mov
push
add
jbe
movsb
cltd
cmp
add
push
daa
adc
lods
inc
loope
cld
mov
cmp
daa
or
and
shlb
add
mov
xchg
cmpsb
add
out
addb
addr16
inc
aaa
iret
sbb
lods
push
dec
popa
ret
and
divb
and
mov
lds
xor
sub
rcrb
cmp
hlt
pop
push
lret
cmpsb
pop
ja
mov
mov
test
fsubrs
lret
xchg
sbb
push
mov
lcall
daa
mov
xchg
or
mov
mov
aaa
dec
jno
pop
cmp
xchg
jns
jbe
pop
mov
inc
inc
std
stc
cmp
pop
inc
mov
out
push
push
das
test
jge
ret
xchg
sbb
in
das
test
jle
mov
lods
mov
in
mov
mov
xchg
xchg
mov
jg
out
jecxz
mov
pop
popa
hlt
outsb
daa
mov
setae
and
push
imul
aas
imul
fwait
popa
fsubrl
popa
push
jbe
stc
inc
jne
and
pop
ret
sub
orl
stc
popf
lret
jl
xchg
adc
pusha
sub
mov
mov
in
fwait
or
pop
cli
imul
imul
lea
xor
xor
dec
lods
outsb
call
std
xor
sahf
push
imul
leave
sub
lret
data16
lock
mov
inc
jo
jns
sub
fldcw
addb
or
mov
jno
sbb
inc
mov
pop
xchg
into
and
les
ss
inc
pop
mov
sbb
lds
add
xchg
cmp
and
std
out
dec
lods
xor
push
or
jl
lahf
lock
push
mov
in
ret
xor
lret
sahf
or
cltd
mov
xchg
arpl
pop
enter
movsb
lea
sbb
mov
xchg
ds
je
jbe
mov
adc
aad
add
mov
push
xlat
nop
add
je
dec
pop
hlt
test
jb
mov
mov
inc
or
lret
dec
and
pop
mov
cmp
jp
add
cmp
cmp
repnz
movsl
popf
aad
ret
cmpsl
mulb
push
push
data16
mov
mov
stos
dec
rorb
xchg
lahf
mov
sbb
xorb
rcll
mov
mov
fwait
mov
xchg
inc
jbe
sub
lret
pop
jmp
add
mov
mov
lret
je
icebp
lret
add
or
pop
sbb
jne
sbbl
and
push
pop
lahf
int
mov
mov
mov
insb
mov
fnstenv
pop
rcrb
push
jbe
adc
stos
ds
js
data16
sarl
pop
bound
and
xchg
out
rcrl
sbb
add
push
inc
imul
and
fnsave
sub
lahf
fldt
push
lds
mov
adcb
pop
dec
jle
push
dec
add
sbb
xor
sarb
sub
jo
or
rcrl
aas
push
outsl
cmp
stos
icebp
or
push
fisubl
cli
call
dec
outsl
mov
hlt
mov
xchg
push
inc
mov
jae
stc
add
mov
cmp
push
fstpt
aam
push
ss
test
mov
inc
mov
adc
ljmp
bound
push
xchg
insl
ljmpw
sbb
icebp
loop
push
data16
xchg
dec
ss
sbb
ret
jmp
push
repz
dec
pushl
inc
cmpsb
out
cmp
nop
into
rcl
lds
in
jmp
jae
xchg
sarl
sub
aam
fiadds
inc
shrb
ja
int
adc
inc
add
ret
sub
ja
inc
add
jns
cmp
cmp
cmp
arpl
dec
aaa
sahf
je
cwtl
mov
xchg
xlat
mov
adc
inc
push
in
sub
adc
ja
lcall
jecxz
jle
mov
xchg
dec
lds
cs
and
mov
sub
dec
dec
and
lret
push
bound
or
mov
sub
mov
xor
movsb
and
insl
je
cmp
dec
cs
mov
mov
mov
out
cld
mov
fwait
adc
jnp
adc
or
cmp
fisttpl
sbb
mov
dec
hlt
push
in
mov
sub
fisubrl
jno
lret
dec
dec
sbb
test
mov
mull
mov
mov
sbb
xchg
xchg
arpl
les
xchg
dec
sbb
sar
out
xchg
mov
pop
int
pop
adc
ret
mov
dec
xlat
fiadds
mov
push
lds
pop
cmp
or
xchg
pop
insb
pop
movsb
push
ret
xor
mov
andl
int
xchg
pop
cmp
jo
nop
sub
loope
mov
cmp
stc
xor
ja
notb
iret
orb
jg
fbld
mov
push
mov
mov
lcall
push
and
dec
push
and
xor
icebp
mov
jo
js
test
or
fists
out
test
in
xlat
xor
push
scas
inc
pop
mull
inc
subl
jge
into
adcb
pop
dec
aad
mov
inc
mov
push
or
push
out
lds
les
in
nop
sub
sbb
cli
rol
sbb
cli
out
pop
insb
testb
subb
inc
push
adc
stc
scas
pop
sub
sbb
xchg
int
cs
cmp
shlb
repz
popf
push
jne
mov
add
in
shrb
dec
mov
sbb
add
mov
int3
lret
inc
cmc
insl
loopne
lds
add
jnp
adc
repz
push
pop
testb
ficompl
in
adc
mov
and
cmpsl
cmc
sub
scas
push
lods
pop
dec
sbb
shl
fs
sbbb
cld
loopne
gs
dec
lock
popf
ja
push
pop
sub
xor
sbb
call
loope
jle
jo
mov
xor
push
fsubs
fnstenv
popa
aam
sbb
ljmp
add
mov
xchg
mov
xor
cwtl
adc
pop
pop
aas
mov
aam
inc
dec
push
roll
mov
in
mov
push
shll
inc
fldl
inc
push
sub
jae
aad
ljmp
mov
movb
cmp
lret
sub
mov
mov
and
mov
cmp
pop
call
jae
mulb
fsincos
fbstp
adc
cmpsb
clc
sbb
mov
dec
ret
dec
push
and
xchg
popa
ror
int
fistpl
xor
hlt
imul
fsubs
sbb
scas
xor
and
je
pop
dec
add
xlat
pop
mov
mov
shll
sbb
stc
jmp
jmp
sbb
bound
mov
push
or
sahf
addr16
mov
test
enter
imul
dec
xchg
push
xchg
jne
imul
mov
push
idiv
and
pop
pop
popa
lock
jo
aad
loopne
fadds
mov
xor
lods
pushf
mov
xchg
imul
mov
lcall
mov
das
pushf
mov
push
mov
insl
jns
lret
push
in
add
sbb
fimuls
repz
cmp
or
or
lcall
dec
or
xlat
xchg
iret
jg
mov
testb
insb
cmc
or
push
les
cld
cltd
mov
gs
jo
into
fmuls
push
or
and
lock
lcall
dec
mov
cmp
push
mov
aad
aaa
and
jecxz
and
test
clc
pop
cmp
sti
mov
mov
clc
mov
push
lods
jmp
int
inc
dec
int3
cmp
hlt
cli
cs
xchg
pop
in
stc
stos
jo
cmp
loope
jo
sbb
es
lds
es
sarb
daa
pushf
and
xchg
popa
ret
xlat
jp
ret
cwtl
aas
push
loopne
jnp
imul
mov
xchg
lcall
and
xchg
pop
cmpsb
jne
dec
imul
lock
aaa
or
stc
jg
xor
mov
out
rcl
int3
lock
lods
cltd
mov
test
mov
fistps
inc
leave
jmp
mov
or
pop
push
adc
nop
cmp
mov
ja
cmp
or
loope
cld
aas
pop
pop
jne
fst
stos
cmp
push
sysenter
add
lods
aas
and
nop
daa
int3
movsb
mov
adc
xchg
scas
pop
add
ja
scas
jns
sbb
in
aam
pop
or
mov
mov
or
pop
pop
lock
mov
sbb
push
xor
mov
lock
incl
out
fstpt
inc
dec
push
adc
ljmp
push
mov
data16
imul
xchg
jnp
jp
sbb
jl
mov
in
je
in
shlb
call
xor
sbb
aad
dec
mov
out
jecxz
shufps
test
shlb
rcrb
mov
movsl
pop
or
and
mov
xchg
sbb
lods
fimuls
out
sub
mov
mov
frstor
inc
in
lods
insl
pop
in
sbb
call
sub
cmc
add
repz
inc
ret
js
push
in
mov
mov
add
popa
outsb
js
shlb
or
cmc
and
adc
mov
jl
call
movsb
mov
sbb
sti
sbb
mov
imul
adcb
imul
orl
fsubr
mov
mov
lea
and
push
lods
add
pop
int
jle
lods
aas
call
gs
outsl
dec
pop
push
jle
pop
mov
add
mov
mov
orb
and
ds
mov
cmp
dec
es
xchg
mov
pop
jb
ret
cmpsl
test
or
push
outsb
add
mov
add
cmp
aaa
inc
aaa
and
push
ljmp
sub
cmp
sbb
int
mov
in
or
dec
aaa
cmpsl
mov
or
test
gs
sub
jne
or
loop
lea
and
push
cmp
test
das
xor
lds
subb
mov
loope
push
pop
mov
pop
dec
fcompl
pusha
cmp
jns
mov
lret
or
or
int
iret
cmp
push
ljmp
fsin
repz
xchg
test
inc
adc
mov
add
add
mov
aas
pop
mov
push
cmp
iret
push
ficompl
aas
js
enter
lods
into
adcb
bound
fsubr
enter
xchg
dec
testl
movsl
cmc
pop
out
cmp
shll
cmp
push
sub
inc
mov
cmpsl
enter
ret
int3
scas
imul
gs
popf
and
jne
sub
mov
enter
mov
push
daa
sbb
add
sbb
das
addl
cltd
ret
lahf
xchg
mov
mov
xchg
xchg
out
fidivrl
out
fimull
sbb
fsubrs
scas
cmp
adcb
les
in
fistl
pop
outsb
sub
xchg
cmpsl
jmp
ljmp
lahf
sbb
or
leave
xchg
sbb
dec
sbb
jle
jge
ret
orb
mulb
adcb
sub
mov
jl
jmp
mov
mov
and
jmp
inc
or
mov
jmp
sub
icebp
dec
jb
pop
adc
out
sbb
xchg
in
mov
leave
mov
mov
into
cmp
lahf
out
pop
push
xor
fwait
adc
adc
aad
daa
je
dec
and
mov
mov
cli
mov
adc
add
jecxz
jno
jmp
nop
enter
inc
shll
fcmovne
icebp
and
sub
lods
push
jb
jo
add
fisttps
jg
sbb
imul
dec
push
pop
or
xchg
aam
int
imul
call
cmpsb
inc
clc
mov
cmp
gs
jg
mov
lret
loope
and
insl
inc
jle
cmpsl
ja
rcll
push
pslld
sub
loop
in
fs
jae
addl
or
jge
mov
and
les
imul
or
gs
mov
sbb
mov
rcrl
test
inc
shlb
pop
mov
push
mov
aam
repnz
mov
inc
and
jge
jo
popa
lea
mov
jmp
cmpl
repz
idiv
lea
in
fxch
gs
sti
jmp
pop
aas
iret
sbb
fwait
cmpsl
lea
fldcw
popa
or
movsb
mov
mov
stc
sub
inc
jge
rep
xchg
shlb
fsubrs
adc
inc
push
push
in
sub
jnp
jne
jmp
enter
push
sub
mov
scas
aam
add
sub
or
mov
xchg
iret
inc
and
mov
std
repnz
push
out
adc
jp
sub
int3
add
ret
mov
mov
rorl
dec
add
in
ficomps
repz
push
fs
out
mov
stc
ror
xchg
ja
adc
fwait
inc
xor
mov
movsb
pop
scas
cmp
int3
cmc
repnz
lret
jo
inc
rol
pop
fadds
mov
sub
and
je
xchg
rcrl
lds
scas
xor
test
and
pushf
sub
jmp
sub
jns
cmp
scas
jp
or
xchg
add
stos
add
inc
scas
mov
fucomip
push
and
enter
movsl
add
mov
fsubr
dec
inc
cmpsb
aas
lock
cmpsb
aad
push
adc
or
stc
inc
imul
inc
cli
push
push
sub
sbb
add
popa
cld
lea
adc
popf
jmp
dec
add
jb
insb
mov
jb
pop
outsb
lock
sti
call
and
popl
sub
cmp
sarl
pop
das
repnz
push
adc
jno
test
test
lret
dec
dec
cld
mov
dec
lcall
mov
out
push
outsb
popf
mov
cmp
sbb
stc
aas
inc
jae
in
popa
add
lea
dec
das
fiadds
adc
stos
ficompl
jo
loope
xor
dec
push
data16
lds
pop
adc
out
push
sysenter
push
out
or
dec
rcll
jg
adc
test
or
dec
jo
loope
and
arpl
push
push
inc
adc
jne
repnz
pop
test
jbe
outsl
andl
inc
mov
xchg
inc
xchg
sbb
cmp
sbb
imul
add
test
add
push
call
adc
sti
sub
popa
aad
xlat
dec
ret
ja
xor
in
ljmp
adc
addr16
xor
pop
test
mov
jbe
fbstp
mov
pop
add
push
int3
sbb
add
jnp
ficompl
xchg
cwtl
inc
fldenv
push
mov
add
adc
push
ds
std
int3
add
jo
adc
mov
push
sbb
sbb
fdiv
pop
pop
aaa
xlat
jge
xor
mov
add
dec
xor
add
fs
shlb
stc
jge
pop
sbb
call
jle
or
mov
out
sti
les
out
test
jnp
mov
lret
fidivs
stos
scas
mov
in
and
ss
or
scas
sub
stos
jmp
sbb
loopne
mov
int3
stc
sahf
lret
iret
cld
mov
jmp
test
sbb
ja
inc
xor
lret
cmp
jne
mov
add
rcrl
mov
xor
cmp
cmpsl
jb
mov
in
mov
xlat
xchg
pop
adcl
add
xor
inc
notl
jno
enter
or
and
or
nop
adc
push
sub
dec
scas
mov
mov
shr
out
adc
sbb
or
jge
sub
push
dec
addr16
sub
pop
lcall
mulb
test
gs
jl
inc
push
adc
jp
mov
clc
xlat
sbb
lret
push
or
mov
inc
xor
pop
and
aam
orb
popa
dec
orl
cmpsl
outsl
add
mov
sbbb
pop
sub
add
fisubrl
icebp
mov
sbbb
push
scas
inc
xchg
push
sub
int3
test
fstp
dec
and
adc
mov
adc
cmp
push
pop
sbb
in
pop
jnp
push
shr
fs
mov
mov
or
xchg
ss
jns
fwait
jmp
or
enter
movnti
xor
add
push
imul
jmp
enter
lods
pop
fmull
cltd
xchg
mov
jns
bound
es
lcall
pop
js
popf
cmpsb
mov
pop
dec
rcrl
ss
arpl
insb
scas
shlb
pushf
adc
in
lcall
loopne
call
imul
jns
xchg
iret
push
or
shll
mov
mov
int
inc
int
jae
dec
stc
test
inc
lds
add
cmp
dec
ss
pop
std
or
jnp
int3
jne
popf
cltd
rorb
xlat
aad
dec
add
adc
push
lret
out
imul
push
fwait
out
jne
mov
add
outsl
ret
ljmp
inc
cli
test
les
adc
push
mov
pop
out
sub
mov
or
xorl
add
and
dec
in
mov
lock
xor
sub
mov
push
dec
cmp
mov
imul
push
mov
add
jecxz
push
cmp
pop
movsl
and
inc
sarb
shll
add
cmc
cmp
test
xor
shl
cld
mov
repz
out
insl
and
call
push
pop
xchg
test
popa
cvttps2pi
xlat
dec
je
jle
fwait
enter
imul
pop
add
les
xor
jle
xchg
cs
jp
data16
adc
cmp
outsl
pop
mov
push
lock
jle
fs
movsl
xlat
into
pop
mov
mov
and
cmp
ss
rcrb
mov
dec
inc
insb
fildll
inc
pop
aas
nop
movsl
rol
imul
xchg
cld
popa
das
dec
neg
dec
mov
push
sahf
lret
push
clc
push
cmp
xchg
cwtl
adc
xor
push
adc
leave
lret
inc
xor
mov
add
nop
and
das
mov
adc
test
pop
adc
mov
jbe
xchg
lahf
lcall
inc
sar
pop
in
mov
mov
out
mov
jno
cli
xchg
fbstp
inc
lods
inc
xor
cmpsb
ss
mov
aam
hlt
pushf
mov
pop
es
push
hlt
or
or
movsb
cld
loopne
out
imul
or
leave
xor
push
xor
xchg
and
or
and
push
gs
mov
sbb
insl
ljmp
fisubrs
in
mov
xchg
mov
pushf
mov
bound
enter
cmp
adc
dec
out
dec
push
int
dec
clc
dec
cmp
adc
jp
dec
popa
mov
das
leave
jns
sub
rorl
lcall
and
scas
leave
fidivrl
add
orl
inc
mov
cmp
repnz
ds
gs
inc
add
mov
sbb
xlat
test
add
mov
and
mov
adc
mov
pop
mov
aam
adc
nop
fwait
shll
sbb
lcall
xchg
xchg
push
movsb
jne
pop
push
dec
lret
xor
and
and
jge
cmpsl
rclb
jne
jl
shlb
sub
repnz
lods
les
mov
push
mov
jmp
hlt
pop
ss
mov
add
fldt
loopne
mov
sub
push
lods
push
pop
ss
test
xchg
inc
clc
jno
cli
mov
arpl
jmp
dec
mov
pop
inc
xorb
sub
test
popa
ja
cmp
aad
or
jl
bound
imul
cmc
pop
add
call
add
outsb
jae
dec
jne
mov
js
sub
cltd
mov
imul
xor
ds
pop
pop
mov
cmp
shrb
fdivl
xor
and
ljmp
mov
xor
sub
inc
mov
jno
lahf
jb
scas
pushf
rorl
adc
mov
icebp
scas
cli
iret
outsb
stc
jmp
int
xchg
push
xchg
sbbb
or
and
ret
fcomp
je
icebp
mulb
pop
xchg
xor
adc
push
out
test
sbb
aas
in
fisttps
ret
stc
sbb
lds
jbe
mov
shl
add
pop
data16
cmp
push
fstl
movsb
mov
mov
or
andl
fisttps
mov
mov
mov
mov
stos
xchg
js
jecxz
mov
nop
cmp
pop
mov
rcll
jle
mov
dec
neg
or
mov
mov
popa
insb
mov
dec
or
into
leave
and
jo
ds
sbbb
jmp
sub
inc
adc
movsl
sub
repnz
mov
jns
lods
cmp
mov
aaa
repnz
lock
xchg
fcomi
and
cmp
or
jae
sbb
sbb
and
mov
mov
cld
xchg
cwtl
or
in
pop
jno
jge
fwait
mov
iret
pop
imul
stos
jge
repz
and
xchg
out
je
adc
rcll
and
sub
aam
rorb
fcmovnb
aas
xchg
push
or
push
loope
out
jnp
inc
cmp
jl
adc
dec
inc
faddl
test
aad
cmp
lods
out
mov
pop
sbb
push
aam
nop
dec
mov
mov
rcrl
dec
adc
repz
push
insb
or
cmp
sbb
jae
cmp
shrb
aas
ja
int
cmp
jle
ss
mov
lods
inc
xor
shrb
jge
or
dec
push
fldl
jbe
xchg
adc
sbb
pop
scas
into
mov
inc
push
xchg
inc
ljmp
ja
fxch
and
mov
xor
jb
sub
jmp
test
add
mov
int
cmp
mov
bound
ret
cwtl
push
xlat
movsl
xchg
gs
push
fsub
mov
loop
fcoms
hlt
aaa
imul
cltd
xor
lods
ss
pop
cmp
fnstsw
jns
bound
mov
cwtl
dec
cmp
outsb
lahf
jmp
push
jge
or
sbb
lcall
push
push
mov
jne
fwait
dec
push
aaa
movsl
stos
xchg
xor
sbb
das
push
mov
int3
lds
adc
stos
sbbl
scas
insl
inc
xor
sbb
int
pop
js
movsb
cld
aad
pop
push
mov
add
cli
dec
cmpsb
ja
popf
adc
pop
mov
data16
jmp
mov
out
mov
push
cmp
sti
pusha
add
leave
mov
out
inc
jb
movsb
sti
les
mov
xchg
and
pop
sub
xor
inc
sub
cmpsl
lret
push
mov
sub
jle
push
add
cmc
inc
aam
mov
or
stos
jl
jne
cmp
xchg
leave
mov
jo
push
test
shll
lcall
xchg
xchg
xor
es
cltd
fsubr
jbe
sbb
pop
add
addb
out
repnz
and
es
adc
stos
add
scas
je
sti
scas
sub
push
mov
pop
push
cs
sub
dec
dec
jl
sbb
push
enter
mov
sti
and
xchg
or
daa
leave
mov
push
add
or
jo
leave
test
testl
pmaddwd
xchg
mov
lahf
repnz
mov
inc
incl
test
sbbb
push
inc
je
push
stc
mov
stc
in
roll
sbb
mov
jnp
or
xchg
xchg
imul
lock
and
es
jae
sub
add
imul
subl
pusha
and
sbb
int
jp
jl
mov
add
mov
out
js
push
jbe
xchg
push
insb
lret
adc
add
jle
cltd
lds
stos
xchg
cmp
mov
adc
test
inc
in
mov
shl
sub
dec
mov
xor
ror
mov
mov
and
and
stos
mov
sarb
mov
adc
add
or
mov
loopne
push
in
mov
and
or
notb
rclb
and
push
stos
loopne
arpl
inc
scas
sub
adc
test
sub
jns
fwait
xchg
xchg
shll
add
cmp
and
add
jo
jns
jp
add
mov
les
pop
dec
cli
xchg
or
push
jns
add
popa
jbe
mov
aaa
repnz
mov
stos
pop
or
xor
flds
sub
push
adc
jg
push
fs
insb
rorb
faddl
dec
adc
xchg
lret
ror
loopne
jnp
mov
mov
add
inc
sub
movsl
in
adc
inc
out
out
push
movsb
jmp
sbb
mov
cmpsb
ds
std
loop
jns
lahf
int3
inc
outsl
cmc
scas
sbb
sub
push
push
das
jl
pusha
cli
ja
pop
xchg
mov
cmp
cli
int3
fsub
das
movsb
loopne
pushf
push
enter
arpl
sti
popf
imul
sbb
testb
addr16
popa
push
push
mov
cld
aaa
lahf
xchg
movsl
xor
xchg
fs
and
test
inc
jl
roll
scas
adc
aam
repz
mov
repnz
enter
dec
xor
hlt
add
out
jecxz
mov
test
lret
in
daa
and
sub
popa
push
rcl
into
gs
add
in
addr16
aaa
ds
push
ds
pop
pop
pop
or
and
pop
jbe
int3
lcall
mov
fs
enter
push
es
xorb
xchg
imul
pop
or
push
mov
mov
dec
cld
cs
mov
mov
push
or
mov
jecxz
adc
and
popf
mov
jle
and
mov
pop
dec
xchg
jp
stos
stos
push
aas
pushl
xor
shll
sbb
mov
push
sub
inc
orl
mov
clc
stos
fdivrs
jnp
in
insb
pop
mov
adc
sub
cli
imul
imul
dec
std
sbb
or
movsb
ret
cmp
xor
jle
mov
not
sub
sbb
outsl
push
pop
lock
insl
push
sub
fldt
jecxz
add
mov
cmpsl
mov
mov
cmp
scas
or
mov
sub
jecxz
ja
and
xchg
imull
mov
insb
cmp
xchg
sahf
or
pop
icebp
adc
mov
mov
out
jmp
xor
jb
xor
mov
cltd
into
mull
add
testl
out
pop
scas
lret
push
shlb
out
adc
or
popf
push
xor
mov
xchg
mov
mov
cmpsb
inc
bound
scas
jo
faddl
pop
mov
mov
rclb
clc
and
outsb
jb
cld
adcb
cmpsb
flds
pop
out
insl
ret
mov
insl
aam
jne
jge
mov
or
imul
icebp
pop
jge
subb
sub
add
bnd
pop
jl,pt
sbb
push
xchg
cmpsl
jno
sbb
jb
cld
loope
mov
xor
fdivrs
imul
jnp
subb
scas
test
dec
mov
add
push
fnstenv
cs
dec
mov
stos
scas
ja
mov
cmp
aas
jbe
lods
jae
pusha
xor
and
sahf
push
dec
hlt
cmp
inc
roll
cmp
push
pop
dec
xor
movsl
ja
pop
pop
rorl
sarl
adc
rcll
jle
imul
push
std
test
arpl
sarb
dec
adc
mul
clc
int3
pop
cmp
loope
cmpsb
sbbb
jb
pop
popa
stc
movsl
stc
movsl
hlt
loope
xchg
sub
loop
mov
sub
and
adc
sub
xchg
mov
sub
mov
xchg
mov
cwtl
fs
dec
insb
jo
or
hlt
repnz
insl
repz
push
fstp
filds
ret
sub
adc
adc
into
lret
jb
push
jecxz
fdivs
adc
jo
ljmp
js
mov
aam
ret
jno
sbb
adc
sbb
cmp
push
fsub
push
fisubrs
cmc
loopne
sbb
push
dec
dec
fdiv
pop
inc
pop
inc
cmpsb
dec
in
or
push
daa
or
imul
and
inc
repz
xor
loop
pusha
inc
fs
cmpsl
cltd
jno
inc
dec
pushf
int
cmp
inc
dec
jno
sbb
and
ret
push
pop
sub
in
aad
sub
xchg
aad
nop
das
rclb
or
sub
stc
dec
adc
int3
sub
sahf
jge
adc
call
push
int3
pop
or
sbb
pop
adc
sar
mov
jmp
clc
push
cld
mov
outsl
adc
mov
lea
jo
cmp
xor
dec
int
jecxz
cmpsb
ds
mov
jecxz
in
lea
ljmp
fcomp
clc
dec
mov
sub
and
and
addl
ds
loop
jl
inc
out
add
out
jle
sahf
out
adc
jno
lahf
xabort
inc
adc
mov
mov
jge
and
adc
sub
lea
xor
lcall
shll
imul
neg
gs
aaa
mov
sbb
dec
aas
leave
xrelease
stos
xchg
push
jbe
sub
mov
fdivs
fsubrp
xor
nop
loope
shll
xchg
imul
loop
cmp
cltd
daa
pop
mov
dec
cmovbe
not
xchg
cwtl
sub
sbb
push
xchg
iret
lret
cltd
mov
lret
sub
mov
inc
jns
push
dec
inc
jge
jb
stc
out
push
in
int3
adc
add
mov
xchg
cmp
dec
cmc
xchg
ja
mov
xlat
insb
cltd
or
aam
mov
mov
cmc
lods
shl
les
repz
and
mov
cwtl
or
sub
rcrl
test
ss
or
dec
shlb
lods
pushf
movsl
cmp
loope
test
lahf
cmp
pop
xchg
imul
lea
mov
push
loopne
jno
and
or
mov
mov
sub
test
icebp
cmp
pusha
xchg
in
xchg
sub
or
mov
xlat
adc
push
xchg
int
mov
fisubs
shrb
fs
inc
lret
movsb
sub
dec
mov
sbb
das
xor
cld
addb
mov
insb
inc
fisubs
sbb
xor
rorb
inc
dec
mov
sub
adc
or
push
sbb
dec
or
xor
push
out
scas
icebp
popa
cld
cmp
sub
enter
mov
xchg
xchg
ret
jl
in
rcrb
xchg
fmuls
ljmp
xchg
sub
pusha
cmpl
inc
or
in
xor
mul
adc
sub
and
sbb
cmpsl
inc
add
jle
scas
sub
mov
push
stos
mov
pop
popa
xor
mov
or
pushf
sub
mov
xor
test
add
fistps
sbb
adc
iret
je
mov
aaa
lcall
pop
and
add
inc
sbb
fcmovb
int
ds
in
test
fistpll
jp
pop
movsb
sub
xor
adcb
jne
ficoml
in
cli
out
mov
setg
out
lcall
add
add
insl
mov
test
sbb
cmp
xor
push
jge
clc
add
mov
fsubl
loop
mov
in
repnz
inc
cld
sub
je
enter
mov
inc
pop
pop
sti
mov
addl
jo
imul
stos
js
sub
imulb
aam
mov
add
sub
loope
aas
in
mov
ss
gs
aas
cwtl
imul
jnp
insl
shll
xchg
push
adc
out
cmpsb
out
pusha
cwtl
in
shr
nop
frstor
sti
bts
lds
fstpl
popa
fmull
rcrb
adc
addr16
push
jge
test
mov
test
cmp
dec
push
dec
mov
push
pop
xchg
xchg
pusha
push
or
rorl
mov
daa
pop
or
pop
call
pop
mov
loop
fwait
popl
push
daa
out
in
inc
std
nop
clc
mov
and
lods
jb
adc
push
cmpsl
mov
dec
psrlq
clc
test
add
pop
mov
adc
push
cmpsl
popf
cltd
and
repz
adc
ret
add
inc
add
pop
icebp
insb
push
or
std
es
push
adc
pop
repz
xor
and
outsl
jbe
pop
inc
cld
imul
add
icebp
in
lret
lcall
inc
mov
test
fwait
add
dec
mov
inc
jmp
pop
cld
push
jno
xchg
and
shrl
mov
pop
or
pop
mov
aad
das
outsl
jns
negb
jge
adc
fldl
test
ret
roll
or
dec
mov
aam
shrb
imul
cmp
lods
pop
ljmp
xchg
sbb
hlt
imul
and
sahf
fsubp
xor
sub
push
pop
outsb
sbb
cmpsb
data16
test
push
or
stc
lret
fwait
cmp
ds
dec
xchg
adc
adc
jae
lds
dec
out
pop
sub
shrb
sbbl
in
add
stos
test
xchg
add
loopne
sbb
imul
mov
jno
or
mov
or
call
or
js
data16
cwtl
clc
push
jp
out
ljmp
loop
std
ret
mov
clc
adc
repz
outsl
fistpll
jecxz
xchg
mov
in
add
jno
je
sub
addr16
inc
stos
push
push
add
adc
cmpsl
sub
jns
push
push
xor
repz
sub
jmp
push
in
loope
jecxz
pushf
pop
out
cmp
daa
mov
xchg
in
xor
pop
sbb
inc
or
xlat
sub
imul
jo
and
xchg
cmp
xor
dec
and
std
jp
fldl
sbb
push
inc
ss
or
outsb
shll
mov
mov
call
bound
fwait
movsl
mov
push
mov
mov
clc
clc
sbb
in
sbb
jo
dec
cmpsb
aad
sbb
cmp
call
repz
out
movb
rcrl
test
inc
ss
pop
mov
mov
cltd
dec
push
fsts
repnz
rolb
fnsave
loop
mov
cmp
ss
cmp
pop
mov
sbb
mov
dec
gs
dec
jmp
hlt
adc
cltd
cltd
pop
test
push
dec
xor
sub
dec
imulb
dec
inc
dec
daa
scas
gs
cld
inc
scas
or
mov
ret
fwait
lds
sbb
mov
movsl
xor
in
sarl
adc
fisubrl
int3
scas
adc
test
lahf
adc
mov
ds
mov
inc
gs
mov
addps
pop
sub
repnz
pop
imull
es
push
and
dec
cmp
mov
orl
das
xchg
sub
lcall
ss
push
adc
mov
xchg
or
xor
lods
sbb
dec
push
pushf
out
cmp
sbb
data16
out
lea
mov
repz
mov
jne
loope
fdivp
push
mov
enter
xchg
mov
lahf
test
xor
push
scas
jo
addb
lock
and
leave
adc
pop
mov
pop
fstpt
adc
jnp
clc
inc
outsl
xor
mov
jbe
sub
jns
int3
dec
mov
test
ror
divl
sbb
in
nop
std
loop
cli
loope
xchg
xor
ds
mov
jae
sbb
cmp
aaa
in
daa
cmpsb
imul
push
outsb
jo
mov
push
int3
mov
addb
mov
inc
inc
jp
fimull
push
iret
adc
xor
mov
adc
push
cmp
mov
and
or
xor
and
cmc
push
inc
je
push
dec
jnp
jo
xor
and
int
cld
add
pop
mov
mull
mov
push
mov
aas
xor
push
in
xor
es
fwait
jg
nop
mov
nop
mov
cmp
push
cltd
data16
jge
lret
xor
cmpsl
clc
xchg
leave
lret
dec
stc
jo
fsubrs
and
inc
jp
andb
fs
and
or
aas
aas
fldenv
inc
pop
adc
popf
xor
pop
dec
pop
call
aad
cmp
lods
mov
sbb
cmc
sub
adc
jae
insb
inc
push
outsb
ljmp
sti
pop
mov
xor
mov
dec
scas
push
aam
pop
push
sub
xchg
nop
adc
in
mov
stc
mov
push
jecxz
and
jns
mov
pop
scas
xor
sti
movsl
sub
out
cmp
movsb
data16
xchg
cmp
push
aaa
pop
jecxz
inc
insb
pop
or
lds
cmc
dec
jo
push
sbb
repnz
mov
dec
and
int3
add
dec
cld
insl
jle
rclb
mov
fsts
xor
mov
out
aad
and
xchg
in
cs
adc
jns
daa
pop
ss
orl
leave
add
daa
adc
mov
insl
in
mov
add
pop
icebp
jno
xor
ss
xor
push
iret
jmp
xor
gs
jle
mov
cli
sbb
outsl
aad
ret
shl
in
xchg
xchg
cld
sbb
add
mov
cmc
icebp
icebp
sets
pusha
in
loopne
dec
xor
cld
lods
shlb
call
insb
dec
sbb
adc
lret
jns
cmc
popa
adc
repz
cmpsb
xor
adc
lret
mov
outsl
je
push
or
cmpsl
data16
mov
ljmp
add
jg
jmp
cmpsl
orb
mov
adc
insl
mov
push
sub
aam
lock
cld
mov
ret
mov
jbe
ds
cli
sbb
stc
arpl
inc
fidivs
mov
push
out
enter
mov
ja
or
movsb
xchg
pop
jnp
fsub
int
ljmp
imul
icebp
sbb
dec
cmpsl
inc
jnp
es
mov
cmp
inc
pusha
js
and
pop
stos
addb
and
dec
fbld
adc
adc
inc
ffreep
pop
movsb
test
lret
movl
sarl
xor
pop
test
aad
cwtl
mov
xchg
sub
mov
je
rcrl
cmp
test
mov
lods
out
add
hlt
sub
sub
mov
pusha
mov
ljmp
mov
movd
and
call
mov
cmp
icebp
aad
aaa
pop
push
or
dec
in
loopne
push
out
cmpsl
adc
and
mov
ret
push
and
add
out
sub
or
cld
or
clc
int3
test
mov
xor
sub
icebp
call
test
test
or
mov
out
std
mov
imul
xchg
mov
or
mov
cli
push
insl
xchg
enter
loop
sbb
push
imull
push
repnz
or
insl
inc
cmp
adc
push
push
xchg
loopne
jle
shlb
and
mov
mov
jmp
fldt
stc
and
rcll
inc
push
pop
xchg
cmp
das
mov
or
mov
or
mov
movsl
jp
fldl
cmpb
cmpsl
sbb
out
xor
add
jno
and
in
inc
jns
es
pop
inc
fwait
aad
std
inc
mov
andb
dec
xlat
add
cmpl
push
or
out
add
je
jne
scas
scas
add
int
inc
adc
cmp
mov
inc
mov
mov
pop
fsubrs
cld
pop
sar
out
les
xchg
in
xchg
shrb
insl
es
lea
fcoms
push
lahf
cwtl
xchg
inc
dec
mov
pop
mov
and
mov
xor
jp
lock
iret
jae
icebp
mov
jno
inc
call
jae
add
adc
add
add
ja
mov
subl
repz
call
lcall
scas
lds
mov
sub
cmpb
and
cwtl
pop
adc
push
adc
add
insl
pop
lock
cmp
fwait
test
adc
popa
sbb
mov
push
sub
mov
movsb
xlat
hlt
cmp
movsl
push
push
sub
add
jmp
cmp
out
pop
cmp
sbb
je
int
sbb
sahf
in
cwtl
fwait
mov
rclb
filds
addr16
xor
in
pop
mov
movl
add
or
sub
mov
iret
jns
subl
adc
out
mov
sbb
push
iret
mov
clc
mov
lcall
cmc
fs
xor
adcb
stos
dec
call
add
xor
push
cwtl
mov
inc
sahf
cmc
mov
pop
dec
or
cmp
lea
jg
pop
cmp
mov
adc
add
jg
or
out
imulb
test
push
push
add
in
lea
jne
mov
pop
hlt
cmp
lret
and
insb
push
push
push
mul
int
add
cmp
xor
mov
data16
mov
add
jg
and
pop
xchg
scas
je
pop
loope,pn
add
mov
inc
mulb
adc
sub
ret
mov
bound
rolb
jle
fstps
mov
sarb
jle
inc
push
push
add
xlat
mov
pop
pushf
cltd
pop
loop
aaa
or
adc
imul
add
mov
inc
fisttpll
cmpsl
lret
movsl
sub
aaa
int3
lahf
out
sub
in
xchg
xor
and
xchg
pusha
mov
adc
sub
cmpsb
adc
add
mov
in
pavgb
ret
jbe
lock
into
iret
xor
cmp
add
dec
jnp
pop
insb
scas
xor
pop
jne
fidivl
push
inc
test
adc
std
pop
in
add
inc
imul
lret
cld
inc
fwait
sbb
add
popa
data16
inc
mov
xor
push
adc
pop
insl
xchg
fisubrl
nop
or
inc
div
jnp
mov
negl
push
fwait
jns
mov
add
xor
ss
xchg
aas
dec
or
and
mov
loop
adc
cwtl
shll
insl
sub
xor
js
stc
sub
fldcw
das
out
in
push
ds
cmc
testl
inc
inc
nop
ss
cmp
adc
cmp
fidivs
push
and
pop
mov
hlt
and
inc
pop
push
ficoms
mov
popa
mov
cmp
pop
in
sub
movsb
mov
adc
mov
jmp
add
dec
sbb
jbe
cmp
adc
cmp
mov
sub
nop
jmp
push
pop
inc
fs
hlt
cmpsl
sbbl
repnz
mov
dec
push
testl
stos
and
iret
enter
fdivrp
xor
outsb
outsl
cli
mov
pop
bound
pusha
pop
shr
test
jbe
lods
je
imul
and
imul
or
pop
pop
xchg
popf
repnz
xchg
in
das
mov
add
push
popf
out
test
mov
add
xchg
fwait
out
pop
js
imul
and
insl
xchg
dec
mov
or
pusha
lds
int
mulb
and
inc
in
adc
jg
push
lods
insl
and
test
mov
adc
mov
push
mov
movsb
inc
lock
test
pop
aad
pop
dec
cwtl
mov
or
xchg
add
sar
push
in
cmc
add
aas
push
cmp
outsl
sub
outsb
mov
xor
sbb
mov
jne
push
cmpsl
pop
pop
cs
ja
stos
loope
sub
das
xchg
daa
into
xchg
push
push
inc
les
mov
in
enter
or
daa
pop
sub
bound
shll
dec
mov
int3
jbe
lods
das
in
jmp
popa
push
sub
sbb
jb
add
adc
addr16
mov
mov
aad
push
lcall
inc
jb
dec
sub
fisubs
daa
orb
repz
mov
fisubrl
das
aas
fcomp
mov
es
kmovb
push
mov
inc
loope
xor
sbb
shl
or
xchg
daa
lock
icebp
pop
or
fs
test
loopne,pn
or
stc
int
pop
out
jmp
js
adc
into
ja
rcrb
push
les
repz
in
push
mov
sarb
cwtl
inc
enter
movsb
push
jp
cmpb
pop
pop
cmp
shrl
or
ret
add
lahf
dec
push
popa
loop
dec
xchg
out
adc
sti
sbb
jno
adc
subb
repz
leave
int3
cs
fiaddl
inc
test
xchg
fwait
xor
std
notl
dec
je
dec
sbb
mov
out
xchg
ja
cmp
test
sub
mov
stos
push
xor
cmpsl
sub
sub
jns
cmp
and
xchg
pop
xor
pop
inc
xchg
adc
push
subw
fcomps
xor
out
dec
mov
in
cltd
mov
fwait
test
mov
pop
icebp
xor
pop
rcrl
pop
mov
int
add
test
inc
fcoms
loope
add
scas
and
jne
add
ret
das
test
fcoml
daa
arpl
aaa
sti
sub
test
xor
ret
gs
scas
frstor
pushf
faddl
mov
dec
fdiv
jle
pop
push
movsl
fildl
xchg
inc
aas
push
fsubs
jmp
fiadds
sub
push
mov
mov
inc
and
pop
sar
cmc
notb
test
mov
mov
jb
sbb
cmpsb
adc
or
es
je
pushf
rolb
pop
sbb
leave
mov
jnp
rcrb
sub
push
sub
cmp
and
mov
leave
inc
leave
xchg
mul
mov
dec
out
sub
mov
in
add
hlt
sti
cmp
pushf
and
gs
push
imul
jb
lahf
lret
int
dec
arpl
adc
movsl
lcall
leave
sbb
xor
cld
nop
enter
pop
clc
inc
xor
pop
and
cmp
inc
cld
test
nop
mov
out
jb
mov
sbb
mov
addr16
test
ret
push
or
in
xor
shll
sbb
inc
movsl
jp
out
jns
cmp
fst
xchg
iret
icebp
jge
les
add
xchg
push
push
dec
sub
pop
test
sub
cli
ret
rorl
mov
cmp
add
jae
hlt
fucomp
out
mov
pop
rol
xchg
out
sub
insl
sub
leave
mov
repnz
int
dec
nop
mov
cmpsb
sbb
stc
pop
inc
notl
jo
fwait
cmpsb
push
sub
es
lods
fstl
dec
xor
xchg
loope
adc
mov
and
cltd
pop
out
sti
dec
aaa
sti
and
icebp
shll
subb
popa
mov
push
call
out
lahf
add
jb
clc
mov
sbb
jecxz
dec
sahf
mov
jecxz
mov
repz
jl
fcmovb
fwait
insl
movsl
push
xchg
loope
mull
pop
adc
push
add
jo
push
jmp
mov
push
or
mov
pop
jnp
xor
mov
pop
sub
mov
pop
jl
dec
in
sub
jp
xchg
lods
adc
cmp
lret
jae
adc
sub
jo
lock
sub
cmp
lods
jnp
je
dec
sub
mov
lret
and
lods
mov
fnstsw
sbb
and
add
stos
not
scas
dec
sbb
jns
mov
xchg
cmpsb
mov
call
mov
mov
xchg
jne
or
xor
orb
movsl
mov
dec
fisubrl
and
je
mov
adc
inc
inc
insb
jmp
decl
loope
or
and
lret
dec
fwait
sbb
mov
xchg
movsl
inc
int3
data16
dec
adc
in
call
leave
outsb
andb
add
in
shlb
or
test
jecxz
shl
cs
cs
inc
pop
push
pop
aas
sarl
stos
xchg
and
cld
int3
pop
fwait
jle
jno
xchg
ja
push
or
ds
mov
adc
or
jbe
push
decl
lcall
mov
and
xchg
sub
pushf
sbb
aad
sbb
test
push
js
add
push
call
outsb
js
fadds
jg
xchg
bound
test
orps
pop
xor
mov
and
or
stos
mov
push
int
out
lret
adc
es
adc
pusha
or
lds
mov
push
cmp
cwtl
inc
inc
jle
imul
int
dec
xlat
xchg
sub
xchg
scas
lcall
mov
in
adc
out
push
hlt
dec
mov
fadds
std
adc
push
test
mov
mov
sbb
pusha
lret
inc
xchg
decl
pop
mov
lret
pusha
mov
sub
in
mov
ja
xchg
hlt
mov
pop
leave
dec
add
into
outsl
orps
aad
jne
cmpl
scas
mov
cmpsb
shr
and
rclb
add
mov
sub
fwait
cmp
scas
iret
dec
lods
push
push
aad
hlt
test
or
add
sub
in
cmp
lea
int
adc
push
test
and
loop
add
inc
mov
and
fstpl
pop
push
int
jg
fcmovu
in
das
leave
fdivrp
sub
pushf
mov
dec
pop
push
xchg
loopne
jns
xor
adc
lahf
mov
xor
dec
das
inc
or
mov
mov
cmp
dec
jno
roll
daa
mov
std
push
fildll
icebp
cmp
mov
dec
movsl
jmp
cmp
test
jno
jnp
outsl
aaa
les
cltd
jbe
mov
or
mov
push
mov
mov
popa
les
and
ficomps
jl
fldt
sub
pop
push
xlat
ds
pop
pop
add
shl
pushf
inc
daa
sbb
adc
lahf
sub
sahf
or
mov
scas
cmpsb
push
jmp
and
sbb
sbb
test
insl
outsl
scas
lock
jp
ljmp
repnz
inc
mov
inc
jecxz
aaa
jb
insl
xor
inc
ret
xchg
jge
fwait
shld
movsb
sbb
dec
enter
std
jecxz
test
int3
jg
jmp
ret
xchg
ja
xchg
mov
cltd
jae
lds
out
cs
lods
addr16
imul
xchg
lods
notl
and
mov
rclb
int3
dec
mov
test
jge
dec
test
cmpsb
cmpsb
idivb
cmovl
adc
jo
and
addr16
cmp
mov
lods
stos
stc
mov
jg
adc
cmp
hlt
or
outsb
les
cmp
or
gs
mov
ja
push
in
call
movsb
cmp
mov
mov
add
or
ret
es
repz
push
cmc
sbb
cmpsb
sub
mov
andl
mov
mov
xchg
mov
xor
adc
mov
or
in
fcmovnbe
js
cmp
jae
aad
jae
sahf
xor
mov
push
nop
lcall
movlps
adc
xchg
pop
shrb
adcb
cmp
loop
daa
add
mov
sub
das
mov
xchg
cli
shlb
movsb
push
jge
mov
pop
insb
inc
jae
loop
mov
and
test
xchg
add
nop
dec
push
call
es
fdivrl
enter
jmp
int
or
movsb
in
inc
scas
adc
sbb
push
test
sub
mov
push
dec
stos
int3
mov
fcom
inc
idivl
in
or
push
je
std
iret
mov
out
mov
aad
or
adcl
fsubl
sub
stc
add
fdiv
fisubl
sbb
fnstsw
cmpsb
jge
fildl
js
jne
sbb
in
jae
adc
dec
out
cmpsb
lds
in
xor
dec
mov
cmp
inc
shl
imulb
or
insl
testb
js
sti
fldenv
xchg
push
jb
push
xchg
lahf
add
sbb
xchg
xor
sbb
sbb
bound
jmp
call
stos
outsl
push
push
or
outsb
xor
push
std
mov
test
inc
shll
es
cmp
inc
sti
cmpsb
ffree
mov
mov
dec
mov
add
fstl
or
push
mov
das
testl
nop
sbb
mov
xchg
dec
lea
push
lds
lea
in
cmpsb
push
int3
push
sbb
cmc
popl
xchg
lcall
or
in
push
je
pop
hlt
dec
ja
inc
testl
dec
out
sbb
movsb
or
stc
xor
pop
push
xchg
sbbl
jg
jge
mov
dec
xchg
add
ret
add
mov
hlt
jmp
test
dec
int3
dec
xor
mov
std
dec
or
adc
mov
cmpb
fildll
sbb
push
fdivr
add
lods
pop
push
jmp
popl
inc
enter
lea
dec
push
iret
pop
cmpsb
sbb
pusha
popa
insl
xchg
xchg
movsb
cmp
jo
jae
fucompp
rcrb
or
dec
leave
pop
mov
rol
inc
rcrl
dec
repz
inc
outsl
notb
mov
ja
into
dec
pusha
lods
movsb
vunpcklpd
out
and
pop
adc
ljmp
jb
push
lahf
adc
cmp
or
pushf
out
inc
loope
aaa
xchg
xor
lock
xchg
repnz
arpl
bound
add
add
inc
mov
std
xor
mov
or
repnz
shlb
mov
sub
stos
stos
out
movsb
mov
mov
push
mov
push
dec
and
loopne
dec
lahf
and
outsl
mov
sbb
dec
fistps
mov
and
aam
stos
xchg
vcvtps2dq
daa
aad
add
pop
jb
xchg
stc
cmp
jmp
push
testb
repnz
fistps
pop
or
pop
and
xor
mov
aam
and
adc
icebp
sub
int
push
insl
pop
loope
jae
xorl
dec
inc
roll
and
jne
and
cmp
cltd
inc
pop
out
cmp
cli
or
xchg
xchg
test
push
xor
cmpl
stos
cmpb
lahf
pop
and
aas
mov
push
cmp
and
gs
push
int3
mov
lods
cltd
int3
xchg
ret
loop
inc
mov
jns
fsub
mov
cmp
dec
les
sbb
ds
sub
xchg
xor
cmp
fwait
ret
lea
sub
cbtw
dec
test
xchg
sbb
dec
out
xor
in
hlt
fsts
dec
lods
popf
jmp
fwait
jno
jle
and
xlat
cmpsb
xor
test
jns
xlat
xor
adc
inc
fimull
push
xchg
movsb
leave
cmpsl
incl
icebp
les
test
jecxz
cs
sbb
jno
loop
xor
push
sub
add
sbb
xchg
xor
sbb
jo
ja
xor
test
jge
out
clc
rorl
loopne
lods
jo
inc
jecxz
pop
adc
pushf
mov
jmp
inc
notb
dec
pop
jno
mov
mov
movsl
leave
pop
out
int
test
xchg
or
inc
jns
test
arpl
cmp
mov
ret
or
mov
dec
adc
js
or
out
pop
inc
test
icebp
mov
jl
mov
xor
popf
jle
sbb
je
rorl
in
push
std
pusha
lahf
sub
ja
mov
mov
into
adc
rorb
aam
sbb
xchg
fyl2xp1
push
mov
push
mov
loope
aad
sbb
xchg
lods
add
push
adc
pop
cmpsb
mov
movsl
and
test
xlat
ret
insb
fwait
or
xor
xor
pop
xor
or
scas
sub
ret
out
sbb
xchg
lahf
jbe
add
and
xor
lret
push
ja
add
mov
int
mov
push
push
arpl
repnz
std
or
mov
shll
dec
daa
mov
movsb
call
mov
out
sbb
ljmp
mov
push
pop
iret
cmpsb
mov
decl
stos
and
jnp
adc
or
push
xchg
mov
push
mov
mov
outsl
mov
cmpsb
cltd
xor
push
imul
and
mov
push
cltd
lods
mov
push
icebp
mov
enter
bound
pop
out
or
fldt
scas
stos
pop
xorb
dec
in
dec
lcall
cli
aas
pop
cwtl
mov
add
sahf
dec
shlb
out
push
rorl
cs
cs
test
push
mov
push
lds
repnz
fnsetpm(287
insb
jo
rorl
dec
enter
pop
insl
mov
mov
out
jle
mov
ljmp
outsl
jge
cmp
add
scas
dec
jmp
pusha
vextracti128
cltd
lods
test
lret
dec
and
in
roll
sub
ret
jl
aaa
test
enter
loop
pop
popa
cmp
or
mov
aad
cli
daa
pop
arpl
repnz
ljmp
mov
cmpsb
add
xchg
pop
daa
stos
loope
idivl
pop
in
pop
cmp
into
cmp
jbe
les
lods
jnp,pn
popf
and
mov
iret
aam
xor
stos
iret
mov
cli
xor
std
outsb
dec
xchg
mov
int3
add
push
xlat
push
fwait
jl
add
cmp
jne
cmp
imul
sub
mov
xchg
stos
cmp
in
ficoml
or
push
cmp
jmp
div
mov
lock
jns
add
shll
loop
rclb
out
pop
test
xor
popa
sbb
and
insl
pusha
mov
jo
cmc
adc
dec
dec
dec
mov
push
fs
aad
add
cmp
sti
xchg
int3
mov
hlt
outsb
les
leave
xchg
and
fcoml
mov
jmp
dec
jge
shlb
pop
lahf
std
leavew
pop
dec
ss
imul
cli
cmp
pop
push
lret
js
stos
lods
cwtl
insl
insl
ficoml
fldenv
iret
outsl
push
mov
sahf
stc
xchg
xor
nop
mov
xor
imul
or
movsl
cmp
fsubp
jno
and
xchg
sbbb
hlt
mov
subl
aam
mov
pop
movsl
mov
jbe
arpl
xor
push
outsb
and
dec
sbb
or
mov
mov
int
scas
xor
cwtl
add
lret
out
fs
aaa
sub
jae
stos
outsb
cwtl
and
sub
arpl
and
inc
push
pop
xor
and
pop
and
dec
pop
pop
iret
pop
mov
adc
xchg
in
sbb
xchg
scas
jb
ljmp
rolb
sub
in
pop
fstps
mov
mov
xchg
xchg
leave
push
dec
add
sub
push
jae
fwait
cmp
push
movsb
pop
pop
in
cmp
pop
jl
jp
movsl
pop
sbb
pop
and
js
pop
in
and
jl
rorb
fnsave
mov
out
cmpsl
movsb
inc
cltd
jo
lock
xchg
fwait
jnp
push
jnp
push
cli
sbb
addl
dec
or
mov
lcall
sbb
xchg
movl
pusha
call
mov
mov
pop
rcll
mov
sub
pop
cmp
push
loop
data16
aaa
jae
bound
mov
mov
int3
popa
fld
push
xor
repz
filds
jmp
stos
clc
rol
hlt
aas
insb
cmpsb
mov
dec
add
loope
mov
cltd
adc
jnp
inc
je
in
add
stc
int
mov
movsb
jmp
psllq
and
or
lods
into
or
pop
mov
dec
jne
sub
loope
sbb
in
std
aam
stc
daa
insl
inc
jo
and
out
jecxz
xor
pushf
daa
test
cmp
add
push
cwtl
inc
insl
push
imul
adc
sbb
jb
orb
pop
mov
sub
mov
mov
ss
or
jle
jnp
dec
les
adc
cmp
mov
addb
sbb
in
cwtl
add
mov
out
pop
rorb
xor
adc
out
jle
xchg
mov
out
movsl
iret
test
lea
mov
in
or
popf
aad
inc
faddl
and
sbb
sbb
inc
sub
xor
inc
dec
popf
insl
ret
pop
or
pop
mov
sti
movsb
xchg
sbb
andl
es
movswl
adc
sub
add
in
ret
lea
sub
jle
aas
subb
mov
push
xchg
cmp
add
inc
push
xor
lea
xor
es
push
fs
hlt
pop
cwtl
mov
xchg
cmp
and
movsb
and
std
mov
adc
jcxz
shll
sub
xorb
subb
fdivrp
dec
shll
popf
stc
dec
cmp
mov
xchg
jno
cmp
jns
nop
inc
repz
enter
aaa
rolb
lods
mov
push
dec
lret
mov
aam
loopne
jbe
xchg
test
sbb
push
pop
xor
stc
adc
and
cwtl
gs
ret
and
or
sbb
int3
or
cmp
pop
sbb
adc
add
fisttps
gs
ljmp
clc
enter
imul
dec
or
mov
mov
dec
imul
jle
mov
dec
lock
les
sub
pop
jae
xchg
das
ds
ja
test
outsb
fisubs
cld
push
jne
repz
or
shlb
jo
cmpsb
test
leave
aas
xchg
mov
xlat
sub
jecxz
fstpt
or
out
adc
fimuls
jbe
aaa
cwtl
pop
xor
fsubl
fwait
push
imul
out
into
inc
je
inc
clc
or
test
loope
xorb
rclb
repz
xchg
mov
push
jge
xchg
mov
pop
pusha
cmp
out
jmp
adc
xchg
xorl
push
pusha
sub
enter
jae
ss
into
pop
shll
outsl
dec
mov
clc
les
ret
push
mov
lret
inc
jno
scas
mov
lea
ret
movsl
in
decl
jmp
pop
cmovp
popa
outsb
or
push
jne
jmp
mov
loope
dec
fsubr
je
mov
std
cmp
jle
repz
dec
movsb
jbe
repnz
call
mov
test
mov
or
push
mov
add
ror
lds
add
add
jge
pusha
mov
imul
inc
outsb
sub
cwtl
add
leave
jl
fstps
mov
push
sub
mov
mov
std
stos
lods
gs
cmpsl
ljmp
rorl
aam
or
icebp
cmpsb
idivb
mov
or
inc
mov
popa
filds
dec
in
int3
dec
mov
or
adc
inc
and
push
pop
dec
arpl
js
pop
add
les
pop
inc
sbb
leave
push
cli
ret
call
std
shlb
loope
push
lahf
imul
inc
in
fisubrl
out
pop
and
cs
and
mov
ss
gs
jno
fildl
sub
stc
jo
loope
call
outsb
xchg
xor
cmp
push
xchg
push
int
jnp
mov
xchg
pop
add
dec
bound
cltd
fwait
sbb
xchg
add
pop
cs
test
jmp
add
mov
inc
outsb
push
fdiv
out
negl
std
icebp
inc
xchg
pop
pop
adc
push
sub
dec
add
das
gs
mov
loopne
dec
lock
mov
jp
push
xchg
sub
sbbl
aam
lcall
lret
adc
mov
jg
mov
cwtl
in
inc
mov
nop
mov
insl
xorl
out
mov
inc
or
pop
add
jo
ja
push
cmp
mov
and
data16
js
cwtl
repz
popa
mov
cld
fwait
jmp
aam
jb
pushl
jns
loope
sbb
cltd
std
mov
andl
xchg
adc
jecxz
xchg
mov
inc
fstpl
jmp
xchg
fiaddl
xchg
fdivs
mov
push
and
mov
push
mov
fdivs
xchg
xor
sbb
mov
cmp
call
repz
lahf
mov
ljmp
sbb
sbb
cmc
xor
sbb
out
in
stc
pop
pop
cld
repz
aam
sbb
rcll
aaa
inc
in
push
pop
inc
mov
jb
mov
mov
mov
xchg
cmp
stc
sub
fdivs
sbb
dec
fiaddl
xchg
mov
ljmp
popf
mov
icebp
mov
dec
inc
pop
mov
dec
lods
mov
mov
push
rcrb
sbb
adc
lds
cmpl
inc
in
mov
xor
mov
js
inc
pop
repz
lret
sub
test
es
outsl
scas
in
jle
push
in
mov
add
adc
jnp
stos
mov
xchg
cmc
sbb
bound
inc
addl
ret
ja
mov
xor
push
inc
cs
xor
aas
xor
mov
cmp
std
mov
xchg
cmp
sbb
fmuls
repnz
mov
rorb
sbb
sar
push
in
sub
arpl
cmpsb
sub
sbb
pop
pop
lcall
mov
mov
rorb
or
or
push
inc
cld
fsubrp
xorb
fnsave
or
sbb
icebp
fisubrl
and
decl
or
dec
xchg
and
test
int
dec
sub
or
pop
hlt
cs
out
subb
das
imul
mov
cmp
mov
adc
mov
push
iret
rorl
mov
cltd
mov
dec
scas
mov
sbbl
cmc
dec
rolb
or
out
adc
test
jle
adc
and
mov
aad
xorb
push
push
lret
cmp
sub
mov
sbbl
stos
leave
jg
sbb
adc
test
loop
inc
int3
aaa
je
jbe
in
mov
sub
out
or
loope
aaa
ret
mov
stos
jp
test
in
movsb
mov
mov
in
int3
ret
int3
cmp
adc
or
push
mov
mov
insl
cltd
xchg
mov
mov
and
push
es
negb
xor
xchg
in
mov
mov
jb
push
or
arpl
icebp
sub
mov
shrl
or
mov
hlt
gs
outsb
inc
movd
xor
jno
jp
stos
sbb
subb
outsb
int
int
stos
inc
xchg
sahf
pop
loope
mov
lret
pop
imul
dec
sbb
pop
xor
movsb
repnz
fucomp
fstp
sub
mov
and
pop
leave
sub
movsl
andl
int
cs
hlt
mov
les
in
pop
adc
cld
ja
sbb
adc
sahf
or
adc
icebp
sbb
cltd
insl
aam
addr16
mov
jae
mov
sbb
testb
xchg
aam
repz
push
je
sbb
jg
dec
add
rcr
xchg
or
xor
and
repz
das
mov
push
cmp
push
xchg
jge
test
jecxz
imul
jmp
mov
lods
mov
fnstcw
xor
pop
mov
scas
aad
arpl
push
xchg
mov
punpckhbw
je
cli
lret
and
cmp
inc
fs
imul
or
lock
xorl
nop
mov
lea
in
push
out
mov
nop
xchg
daa
bound
push
ret
test
adc
xlat
sbb
mov
push
cmp
fstpl
mov
je
leave
inc
inc
cld
es
icebp
push
out
inc
mov
icebp
xor
in
cltd
clc
popa
mov
inc
cmp
cltd
sub
pop
jno
mov
pushf
cli
cmpsl
mov
xor
mov
push
xorl
popf
into
adc
jae
xchg
test
pop
pop
fldenv
mov
jp
aad
scas
inc
stc
cmpsb
push
jmp
lods
jo
cmp
cmp
push
insb
mov
inc
daa
orb
mov
sub
sti
sub
mov
pushf
jmp
push
mov
jp
inc
leave
xchg
je
dec
sahf
jg
push
adcb
sub
in
mov
std
sub
cltd
inc
xchg
or
mov
repz
loopne
push
gs
inc
cmpsb
lret
adc
movsl
push
out
or
sbb
subl
ret
mov
shlb
addl
iret
adc
shll
stos
or
out
test
cwtl
and
xchg
sub
xor
test
inc
push
or
lods
aas
mov
mov
push
andb
mov
xor
rcrb
aam
pop
jae
add
das
xchg
scas
sub
pop
sbb
popa
jge
ret
and
xchg
xchg
negb
push
jbe
adc
stos
in
into
mov
jg
mov
mov
sbb
pop
nop
inc
sbb
cltd
pushf
icebp
inc
cltd
sub
cmova
arpl
or
pop
insb
and
daa
movsb
inc
jb
push
push
dec
daa
pop
clc
add
adc
or
cwtl
fildll
sub
shlb
jne
das
test
lret
sbb
mov
xchg
xchg
jo
pushf
mov
out
jns
jge
dec
cld
icebp
mov
xor
les
add
jmp
mov
lock
mov
inc
mov
and
ljmp
inc
bound
and
outsb
jnp
push
adc
adc
pushf
lods
dec
add
sbb
movsl
in
xchg
aad
jnp
xchg
mull
and
sbb
jo
jno
shlb
xlat
sti
xchg
lahf
push
movsb
push
cmp
add
mov
lret
inc
cmp
jecxz
xchg
test
pop
lret
lret
xchg
aas
test
push
xor
sbb
jae
mov
int
popl
cwtl
fs
jbe
or
out
outsl
xor
cmpsb
sub
subl
in
sbb
jns
add
inc
fdivr
dec
addr16
and
sbb
bound
add
pop
mov
jnp
cmp
test
mov
loopne
mov
xchg
mov
pop
push
jnp
sar
push
sbb
leave
insb
lock
loop
or
pop
cli
lahf
inc
adc
in
xchg
dec
pop
push
xlat
jae
sbb
rcpps
push
mov
push
push
fcmovbe
mov
or
ljmp
in
cmp
sti
int3
int
sbb
in
dec
cwtl
in
cmp
int
jo
in
sahf
push
mov
fs
fildll
ds
jecxz
jg
cli
lret
inc
jno
ret
xchg
in
push
out
in
imull
hlt
push
push
cmp
sbb
dec
mov
out
jg
rep
jae
xchg
outsl
fwait
xchg
add
jl
lods
lods
pop
inc
jnp
shll
push
xchg
xor
pop
sbb
dec
xchg
mov
add
shll
lret
lahf
xor
cmp
pop
mov
ret
xor
mov
sub
lds
pusha
push
adc
nop
mov
jae
test
mov
mov
fwait
adc
rcrl
inc
hlt
push
push
xor
mov
push
testl
fcmovu
jo
fldpi
dec
sar
scas
enter
mov
mov
cmp
xchg
mov
lahf
mov
jmp
or
dec
or
xor
mov
loop
xor
mov
cmpsb
inc
dec
iret
inc
idivl
jle
xchg
out
subb
and
dec
pushf
and
aam
smsw
xchg
pushf
scas
repnz
lret
add
lods
pop
push
mov
shll
mov
xchg
dec
dec
divl
cmp
imul
inc
mov
push
pop
adcb
pop
das
xchg
pop
aad
lahf
mov
inc
hlt
jg
scas
test
pop
adc
outsl
cmp
fwait
xchg
pop
lods
xor
iret
jno
enter
jnp
arpl
adc
aas
ficomps
mov
fxam
fwait
mov
jae
or
push
or
mov
adc
pop
xor
icebp
dec
ja
mov
aaa
adc
dec
cltd
push
insb
mov
inc
push
mov
iret
sbb
lock
mov
cltd
sbb
aam
pushf
lea
and
movsb
and
lock
bound
adc
orb
push
lods
les
stos
test
test
mov
jl
xchg
out
mov
xchg
ret
or
repz
fcoms
lods
aad
je
cmpl
addl
mov
enter
xor
xchg
fwait
cli
mov
add
das
cmpsl
gs
mov
xor
mov
pushf
outsl
out
and
stos
jae
ret
stos
xchg
scas
jle
rorb
aaa
mov
out
jg
add
mov
jne
mov
fcmovbe
popf
out
jle
or
mov
mov
cmc
faddl
aam
cmp
jle,pn
xchg
clc
lret
shrl
and
hlt
xchg
add
mov
add
jl
es
xchg
lret
loope
jge
or
pop
push
fildl
lods
shl
jno
add
pop
movsl
inc
fnstcw
nop
fucomip
sbb
cltd
mov
insl
pop
jns
jecxz
out
push
gs
outsb
jb
cmp
gs
and
jne
mov
dec
aam
mov
sti
imulb
scas
adc
xor
pop
clc
dec
icebp
lock
push
popa
mov
sub
scas
add
lahf
call
pop
inc
ret
xsha1
cmpsb
lret
inc
scas
mov
mov
add
pop
adc
fstpt
in
cmp
jno
stc
fs
lock
mov
mov
and
fwait
sahf
pop
sub
das
or
jg
out
xchg
inc
stc
sub
mov
not
lret
shll
adc
cmp
pop
lock
mov
add
mov
push
jp
out
inc
loope
xor
dec
push
cmp
lcall
nop
jbe
push
inc
adc
mov
rcl
fwait
or
sbb
inc
adc
cmp
inc
lock
fldenv
lret
mov
add
adc
dec
in
xchg
and
rcr
pushf
lret
divb
sbb
ret
mov
inc
loop
out
adcl
inc
or
loope
scas
adc
or
mov
push
addb
dec
mov
pop
sbb
mov
or
sub
addb
mov
stc
xlat
lods
pop
pop
bound
in
sub
pusha
xchg
mov
fwait
cmp
xchg
jae
jl
addr16
testb
or
push
xchg
jge
lds
fsubl
ficompl
pop
scas
sbb
push
mov
lock
ja
dec
lcall
cmc
sub
fisttpl
push
mov
scas
and
cmp
lods
jecxz
xor
fldl
adc
mov
sub
adc
cmc
pushf
imul
std
pop
and
push
pop
bound
xchg
pushf
or
sub
xorl
cmp
out
mov
mov
sbbb
inc
je
ret
shrb
mull
pop
mov
enter
or
pop
stos
stos
mov
sbb
sub
mov
nop
or
lds
repnz
pushf
test
mov
jle
iret
xor
roll
nop
cmp
jne
sbb
test
mov
jns
sub
jno
push
mov
cltd
ja
jg
sbb
push
js
cmpsl
je
dec
test
sahf
push
ret
movsl
jnp
sub
out
cmc
lahf
mov
stos
fdivs
insb
pushf
jp
mov
sar
sbb
or
fwait
pop
push
int
sbb
cmp
out
inc
and
and
mov
lods
dec
pop
sahf
stos
push
rcll
sbb
jno
gs
movsb
das
std
mov
test
sub
mov
jns
fsubr
pushf
push
in
andb
ret
in
adc
outsb
xchg
outsb
or
je
xor
pop
clc
sahf
in
shll
jne
cld
pop
mov
popf
insb
rclb
push
mov
decb
insb
jne
jne
fistpl
imul
add
push
pop
repz
and
push
lods
jecxz
inc
mov
ja
push
incl
loop
loop
and
hlt
mov
jl
xchg
mov
mov
outsl
jnp
or
cmp
inc
mov
push
icebp
incl
aam
add
push
pop
or
xlat
imul
iret
out
push
fucomi
xchg
insb
and
in
inc
hlt
jecxz
rorl
mov
movl
loope
add
aam
pop
push
lock
mov
lcall
faddl
data16
mov
adc
scas
xchg
imul
fisttpll
mov
and
jno
frstor
sarl
jne
mov
stos
jge
pop
aad
cmpsl
leave
ret
inc
ret
fmul
jae
out
xor
sub
cs
xchg
xor
push
insl
mov
mov
push
ds
icebp
dec
dec
adc
hlt
pop
out
aas
mov
lock
jmp
mov
push
fldcw
aaa
out
mov
scas
adc
dec
pusha
dec
push
mov
std
lock
repnz
pushf
inc
or
cld
daa
sub
push
hlt
cmc
enterw
es
pushf
jecxz
lret
mov
mov
dec
subl
dec
push
in
jbe
ret
pop
stos
mov
inc
dec
fwait
mov
test
fnstenv
push
stos
push
iret
mov
xchg
loopne
add
xor
jae
mov
pop
rcr
das
fmul
fyl2xp1
in
add
xlat
cmp
mov
cli
mov
pop
es
mov
out
sbb
inc
and
in
bound
ljmp
mov
mov
push
mov
adc
gs
leave
cmp
lock
push
xchg
xchg
int
pop
pop
loope
cmp
adc
scas
mov
or
aam
and
and
daa
and
push
imul
or
mov
daa
cmp
iret
xchg
inc
xchg
fmull
inc
cmc
lock
dec
fadds
jb
std
push
pop
jmp
cmp
into
xchg
xchg
pop
and
inc
incl
xchg
adcb
push
hlt
mov
aaa
aaa
add
mov
aas
dec
xor
mov
inc
mov
pop
inc
pop
aam
out
push
cmpsl
cmp
mov
xor
mov
enter
outsb
scas
xchg
dec
movsl
jge
inc
mov
cmp
out
out
cmp
test
cmpsb
mov
dec
outsl
sub
adc
adc
xor
test
fcmovnbe
xor
loop
dec
daa
mov
pusha
ficomps
mov
shlb
xor
sti
aad
mov
loop
pop
fs
sbb
movsl
push
mov
pop
xchg
pop
dec
daa
adc
subl
mov
jb
push
shll
inc
pop
icebp
mov
loopne
sbb
ljmp
mov
push
jmp
adcl
addr16
jno
sbb
cli
jmp
les
in
add
iret
push
dec
sbb
hlt
mov
and
sti
cmp
mov
jecxz
jl
loopne
mov
adc
sub
imul
aaa
pop
pop
movsb
jmp
adc
dec
fstpt
cmc
mov
sub
and
push
xchg
xchg
jo
shll
inc
test
shl
mov
mov
pop
les
mov
xchg
and
add
fists
xor
rep
addb
ds
fildl
cmpsb
imul
jge
push
sbb
arpl
repnz
xor
or
xor
sarl
fmuls
push
sti
and
pusha
pop
xor
shl
imul
adc
std
cwtl
out
jne
and
mov
mov
dec
call
inc
sbb
mov
cmpl
add
push
add
mov
popa
push
cmp
or
sbb
cmp
jb
fists
icebp
lret
bound
cwtl
out
les
xchg
dec
popa
sbb
mov
loopne
dec
and
cwtl
mov
rcrb
imul
data16
push
lahf
adc
dec
dec
push
sbb
fstpl
in
pop
cs
and
sbb
mov
adc
adc
sub
xchg
pop
xor
shlb
xchg
lahf
and
test
stos
dec
push
jo
pop
in
fsin
pop
test
push
jnp
insb
mov
fildl
iret
push
ss
mov
cmp
ror
adc
mov
jae
sbb
cmp
pop
cmp
imul
sahf
aaa
andb
inc
jg
adc
cmpsb
fstps
jl
imul
daa
dec
mov
sahf
mov
xor
mov
mov
or
push
inc
cmpsl
adc
jb
adc
mov
loope
jb
sti
or
ss
in
mov
inc
lods
jmp
lcall
or
xchg
fs
les
xchg
into
cli
divb
mov
aaa
adc
inc
imul
call
xchg
gs
sub
out
mov
ja
ds
shlb
dec
and
iret
add
cli
stc
scas
cmp
push
dec
pop
lods
or
dec
int
adc
adc
test
lock
mov
xchg
pop
sti
push
imul
push
test
mov
bound
in
jnp
and
or
jo
xor
adc
dec
sub
sahf
shll
inc
jge
sub
sbb
insl
adc
mov
add
rorl
sub
ds
fucomi
adc
jg
pop
out
ja
jl
fwait
lret
fdiv
es
cmc
cwtl
loop
js
pop
ljmp
mov
mov
cmpb
mov
pop
cli
mov
mov
lock
sbb
pop
sbb
jle
dec
test
push
mov
cmpsl
lret
xorl
cmpsb
pop
pop
jo
mov
daa
lret
aad
insl
mov
inc
xchg
pusha
xor
mov
mov
pop
lock
in
in
and
cmp
mov
and
mov
mov
cmovno
lret
nop
jle
pop
lahf
cmpsl
push
cmp
push
cli
setg
aad
scas
lret
or
mov
cmp
mov
cmpsl
mov
mov
xchg
fdiv
mov
scas
mov
dec
test
pop
aaa
lea
push
xadd
ja
jmp
leave
out
jno
aaa
lds
and
movsb
push
iret
push
mov
jp
cmp
mov
add
lret
mov
xchg
cmp
xchg
lods
adc
mov
lcall
rolb
fcmovu
notl
pop
or
leave
aam
mov
inc
outsl
dec
out
fstpl
push
push
xor
mov
fidivl
mov
leave
adc
mov
mov
fs
jns
push
adc
inc
js
or
lahf
push
iret
push
or
push
imul
cs
imul
shlb
mov
mov
in
xchg
hlt
or
jbe
call
out
lock
roll
mov
bound
mov
test
int
dec
je
mov
push
pusha
cmp
cmp
test
sbbb
mov
lods
outsb
push
orb
roll
arpl
sbb
jl
xchg
test
insl
lds
aas
enter
arpl
cmp
sub
stos
sysret
sahf
cli
jno
ds
pop
xor
dec
outsb
fisubrl
or
push
xor
out
lret
cmp
and
ret
mov
lods
dec
and
bnd
mov
mov
fbld
rcll
in
ds
out
std
and
jnp
popf
inc
pop
and
xor
pushf
sti
and
xchg
in
dec
outsb
mov
or
arpl
inc
push
cmc
in
imul
sarb
ljmp
shl
call
popf
test
xor
pushf
lcall
cli
pop
rclb
pop
sub
outsb
jae
gs
mov
test
push
dec
das
out
jne
jo
outsb
push
mov
jo
mov
and
mov
push
sub
ret
ds
mov
sbb
push
outsb
rclb
fists
xchg
pushf
lods
shrl
or
or
rclb
or
pop
dec
cmc
aas
adc
out
hlt
jl
enter
jnp
push
out
enter
push
mov
js
test
mov
xchg
or
popf
ljmp
popl
test
pop
pop
mov
fists
cmp
push
xchg
test
sub
lahf
call
fsts
or
aam
ss
push
mov
imul
mov
shll
imul
movl
imul
cmp
lods
mov
stos
notb
lods
in
fcoms
mov
xor
cmp
jmp
sub
stc
jg
lods
out
xlat
lea
addb
mov
mov
xchg
cmpsb
cmp
insb
or
jg
fists
lods
out
jbe
and
adc
cld
mov
ret
push
popf
shrb
psrlw
enter
jmp
mov
jns
je
xor
mov
inc
test
ss
in
cmp
insl
or
imulb
mov
adc
dec
adc
sti
pusha
mov
mov
stc
scas
push
fwait
xchg
xor
cmp
adc
cmp
cmc
ljmp
testb
and
js
sbb
pushf
push
movsl
fisubrl
inc
cwtl
push
xor
clc
sbb
adc
ficoms
pop
popa
test
outsb
ret
cmp
pushf
jecxz
stos
lds
jno
add
lods
mov
sub
das
adc
jne
or
popf
fsubl
lret
pop
or
jp
fdivl
inc
cmp
xchg
mov
jae
daa
daa
xadd
sub
sbb
cmp
stos
jl
push
mov
add
fwait
icebp
push
sub
adc
das
sbb
or
sub
int
cmpsb
push
and
ret
hlt
jl
and
dec
hlt
sub
mov
cmp
cmp
dec
test
adc
mov
jnp
fsubs
adc
jl
pop
fwait
cmp
jb
sub
cmp
hlt
cmp
out
imul
and
inc
or
nop
mov
mov
lds
int3
je
xlat
shlb
sub
sbb
jbe
fisttpll
int
cli
sti
lods
es
jne
nop
insb
in
add
and
dec
divl
iret
out
cmp
insb
es
mov
int
inc
pop
clc
push
adc
xchg
aas
mov
aaa
ja
and
pop
repnz
push
sub
jmp
aad
lds
cmc
pop
xchg
and
roll
repnz
inc
push
xor
test
push
mov
sbb
scas
scas
loopne
xor
mov
inc
jne
cmpsb
test
add
clc
les
fwait
rol
xchg
mov
sub
stos
ds
ljmp
dec
add
pop
push
loop
aam
xor
in
rolb
push
inc
xchg
push
por
fistpll
cld
mov
roll
xlat
mov
push
iret
jns
and
cmpl
push
in
cmp
sub
test
push
sbb
pop
icebp
pushf
jbe
in
cmp
sub
push
mov
pop
push
idiv
orl
mov
inc
xchg
jbe
loopne
ret
aas
xor
lret
dec
aaa
ds
ret
jo
mov
dec
lock
aas
scas
mov
lods
loope
jle
dec
leave
mov
push
xor
sbb
push
inc
std
mulb
push
mov
adc
push
lahf
mov
adc
and
in
ja
test
fndisi(8087
and
out
adc
inc
push
jecxz
bound
or
test
adc
test
mov
int
xor
call
adc
gs
clc
clc
adc
sub
imul
add
les
push
shrb
lds
sbb
addr16
and
jo
aad
add
pop
push
mov
and
pop
daa
loopne
jecxz
cwtl
cmpsl
ja
into
xlat
jp
sub
cmc
adc
xchg
andl
inc
icebp
icebp
xchg
dec
mov
imul
fsubrp
jecxz
or
or
cmp
mov
mov
push
cmc
or
xchg
and
xor
fwait
stos
inc
lgs
adc
xor
adc
aas
jnp
jns
daa
insl
lea
shl
int3
xor
fbld
xor
in
ds
int
dec
jecxz
mov
sub
addl
fwait
mov
cmc
adc
or
fbstp
test
pop
and
push
adc
movsl
in
fcmovb
fcomip
jnp
arpl
sub
test
push
mov
sub
mov
pop
lret
popa
orl
jle
jp
fistpll
test
push
jnp
inc
stos
inc
sbb
jns
adc
push
pop
push
leave
sub
mov
or
lods
out
out
or
mov
popf
scas
xchg
ret
pusha
shrb
scas
and
add
mov
in
lret
loope
es
push
jno
cmp
cmp
mov
pop
je
imul
cmp
pop
jno
pop
adc
aaa
xor
xchg
ret
fnstsw
xor
mov
inc
aaa
mov
aaa
in
scas
mov
test
mov
mov
pop
std
pushf
sbb
sub
sub
xchg
icebp
lods
shll
xchg
pop
pop
cltd
std
jno
aas
mov
and
xor
jecxz
cmp
inc
push
sub
push
dec
ss
iret
cmpsl
daa
dec
stos
inc
fwait
mov
pushf
or
push
lock
sbb
mov
adc
push
mov
ret
stos
out
shr
das
mov
pop
push
push
fiadds
add
xor
inc
xchg
imul
dec
sbb
mov
push
fidivs
cmp
fs
jne
scas
xor
nop
mov
jns
jge
outsb
popf
and
lods
loope
in
dec
ljmp
mov
or
scas
gs
add
push
fs
xchg
mov
aad
adc
hlt
add
jg
sbb
fisubl
mov
sbb
sbb
mov
out
sarl
mov
push
test
fldenv
inc
shll
movsl
dec
repz
and
ret
and
cmp
insl
add
mov
push
int3
movsl
inc
mov
fistpll
aam
int
lea
xchg
dec
sub
push
sbb
in
inc
adcl
je
ljmp
cmpsb
daa
into
jecxz
cli
xor
and
push
dec
loop
mov
fisubrl
push
mov
aad
pop
lock
roll
cmp
sarb
cwtl
ss
pop
xchg
insb
push
sahf
shlb
std
pop
push
add
mov
cmc
cmp
lahf
xor
add
sahf
testb
sti
fnstenv
jne
inc
xchg
mov
orb
push
sbb
jo
add
jge
pushf
mov
movsl
push
mov
into
mov
divb
cmc
mov
push
shl
sbb
insl
ljmp
xor
stc
rorb
pop
mov
pop
push
add
cmp
jg
fadd
push
test
sbb
and
or
cmp
ret
add
xor
push
inc
mulb
out
and
jmp
push
mov
sub
jg
sub
pop
dec
jbe
or
cmpsl
sub
push
sub
data16
lret
scas
sub
fdivrs
testl
or
andl
cli
cmpl
int3
lret
incb
outsl
adc
push
pop
fistps
cmpsl
add
std
or
sub
sub
push
dec
je
ret
jae
mov
stos
cmc
pop
daa
test
mov
or
daa
xor
adc
or
xchg
xor
mov
jge
jl
clc
ret
cmpsb
push
adc
xchg
aad
es
cltd
scas
mov
xor
cmc
ds
push
cmp
loop
ds
mov
xor
xor
dec
std
push
sbb
mov
loop
iret
sarb
mov
fisttpll
or
cld
std
das
out
mov
jnp
aad
push
not
mov
jle
cld
and
mov
inc
popa
push
test
pop
pusha
lds
pop
in
jecxz
jns
jmp
cmc
insb
xlat
xor
pop
aam
and
and
inc
pop
or
push
mov
ret
popa
jbe
add
rolb
int3
mov
mov
insb
test
inc
aam
pop
mov
sub
lods
xchg
js
negl
in
mov
ds
arpl
es
imul
adc
push
ljmp
lock
mov
adc
xor
inc
aam
cmp
mov
ja
data16
jmp
cmc
stc
xchg
sbb
mov
in
sbb
in
fsubrl
mov
popf
sbb
hlt
movsb
cmp
int
out
popf
mov
xchg
sub
add
sbbl
ret
lahf
repz
fs
add
popf
xlat
inc
jo
sbb
cmp
mov
rcr
inc
mov
cld
mov
int
hlt
cmp
js
je
hlt
or
push
add
fmull
cmp
adc
pop
movsb
and
scas
call
ret
pop
jle
roll
imul
test
xor
das
cmp
mov
pusha
push
mov
push
jle
stos
loope
lret
dec
jne
pop
push
mov
bnd
in
push
std
mov
xor
jmp
sbb
inc
sbb
adc
mov
sub
fs
mov
lahf
std
in
enter
fcmove
mov
pusha
cmp
lret
lret
xchg
and
les
inc
add
mov
cmp
dec
aad
sub
add
xor
xchg
insb
std
adc
sub
push
fwait
cwtl
fisubrl
test
push
pop
lret
mov
jmp
fwait
and
xlat
addr16
sub
sub
pop
lret
jno
inc
jge
jns
xor
jae
jp
orl
es
lods
enter
cli
sub
inc
fstps
adc
mov
push
push
aam
add
mov
testl
sbb
or
mov
inc
xlat
and
push
adc
pop
adc
int
sahf
nop
popf
ja
adc
insb
es
test
mov
fdiv
sub
dec
ss
cmp
push
lea
loop
jae
out
sarl
clc
scas
add
fsubrp
mov
imul
mov
ljmp
add
subb
jne
jno
add
inc
inc
push
pop
add
pop
popa
push
inc
pop
sbb
data16
mov
mov
sbb
pop
xlat
xor
fldl
xchg
jle
out
fildl
xchg
jp
int
mov
pusha
lret
dec
jns
or
add
push
ds
addr16
orb
je
insl
mov
inc
scas
in
and
loope
call
pop
aaa
xchg
icebp
aas
mov
repz
outsb
test
xchg
rol
jle
aam
sub
fs
out
pop
outsb
add
xchg
dec
or
imul
sbb
aaa
ud0
push
frstor
add
pop
lcall
in
popa
ss
sbb
cltd
dec
sub
das
xor
or
fadds
adc
out
jecxz
daa
fs
mov
xchg
mov
mov
ja
gs
movsl
adc
fwait
cmp
jmp
mov
dec
mov
fistpll
popa
out
mov
xchg
js
dec
or
adc
sub
in
dec
adc
filds
push
cwtl
sub
add
pop
mov
bnd
sub
push
sarb
inc
shll
add
mov
dec
fadds
filds
cld
cmpsl
inc
aad
cli
add
hlt
mov
jmp
lret
xchg
jbe
cmp
repnz
sarb
xor
and
subb
ds
hlt
mov
int3
divl
cwtl
out
or
scas
loopne
sbb
mov
mov
cwtl
adc
orb
cmpsb
sahf
scas
mov
inc
lods
inc
lret
in
shlb
fnstsw
dec
outsb
mov
xor
push
fwait
nop
cmp
lods
mov
push
test
inc
lock
lods
push
out
inc
adc
icebp
mov
scas
loopne
jl
aam
add
aaa
mov
pop
sbb
jno
jecxz
clc
mov
push
rorl
mov
fcomi
arpl
jp
jmp
aaa
out
or
xchg
and
loope
hlt
ret
stos
push
stos
mov
out
dec
mov
jae
jns
inc
mov
or
decl
fisubl
ffreep
clc
ljmp
jge
sbb
inc
int3
lret
push
cmp
leave
cmp
pop
incl
in
xchg
sbb
out
or
inc
gs
outsl
mov
pusha
cmc
lock
pop
fwait
rcrl
sahf
xor
sbb
xchg
sbb
mov
mov
add
mov
push
fildll
xchg
jle,pn
inc
and
jmp
mov
scas
rorl
negb
mov
aad
mov
rcr
mov
push
in
mov
xchg
or
shlb
push
mov
adc
add
arpl
and
dec
fcomip
into
inc
imul
in
cmp
lea
lds
xor
or
push
push
jae
pop
lret
gs
inc
and
movsl
inc
adc
xchg
pop
adc
int3
insb
cmp
enter
cmc
mov
push
jl
pushf
or
mov
cmp
xchg
mov
fsubp
icebp
int
bound
gs
shll
outsb
pop
xor
fcoms
push
add
mov
mov
xor
in
sub
mov
sub
push
add
jb
jp
adc
outsb
test
ja
ret
arpl
dec
inc
xchg
pop
jbe
inc
push
andb
daa
dec
test
loopne
mov
clc
insb
add
outsl
xlat
jmp
mov
ds
dec
popl
xchg
movsl
fwait
or
mov
inc
lock
loope
fistpl
in
cmpsb
sahf
inc
sub
ds
inc
dec
das
test
mov
ds
sub
mov
xchg
cmc
xchg
push
xor
popf
inc
sub
or
scas
jne
fs
xchg
pop
shll
sbb
test
xor
lret
daa
call
dec
add
loop
cmp
add
rol
hlt
call
dec
das
in
or
es
xor
rolb
or
lcall
jg
pop
dec
push
stos
and
mov
lcall
lea
pop
incl
sarb
movsb
aas
add
shl
or
adc
ja
dec
cmc
scas
jle
xor
xchg
mov
ja
xchg
outsl
jmp
and
cmp
push
pop
or
or
lret
fldenv
call
lret
sbb
lods
fisubrl
and
sbb
or
mov
push
ret
lea
xor
lahf
xor
inc
pop
push
inc
sub
xchg
iret
dec
out
in
adc
mov
cli
stc
movsl
jmp
jns
mov
cmpsl
and
xor
in
jmp
dec
push
adc
lods
out
ficomps
hlt
dec
movsb
cmp
and
and
mov
jae
out
xchg
test
lock
xchg
loop,pn
cs
cmp
ja
adc
insl
jecxz
sub
sbb
dec
add
shll
mov
adc
lret
mov
mov
dec
imul
mov
cltd
fdiv
jbe
lret
add
adc
outsl
push
mov
fmul
inc
dec
push
fsubrl
sub
jge
push
fs
xchg
sbb
cmpsl
add
test
fidivrs
cltd
jbe
andl
push
xor
cmp
xchg
cmc
mov
push
hlt
push
stos
cltd
dec
push
leave
fdivr
je
ljmp
bound
jecxz
jl
lret
lods
lods
pop
test
fs
mov
rcll
sub
iret
or
mov
mov
shl
inc
icebp
inc
pop
cmpsl
out
xor
sub
jecxz
sub
ret
repnz
test
xor
cltd
cmp
jmp
dec
add
addl
sbb
xchg
push
aaa
push
repz
inc
fiaddl
jae
sub
pusha
lahf
sub
sub
cmc
addr16
cs
fstp
cmp
sub
inc
pop
jae
dec
push
and
mov
repnz
dec
mov
aad
flds
cmp
and
addb
outsb
or
icebp
mov
pop
pop
rolb
jge
repz
int3
jno
std
push
xchg
dec
mov
cmp
enter
in
fisubs
lahf
pop
push
xor
addb
inc
das
xor
movsl
arpl
aas
aas
stc
and
inc
jmp
sarl
mov
les
pop
pop
sbb
cmp
test
or
mov
test
rol
daa
mov
cmp
or
and
lds
fnstenv
sti
out
cmpsl
test
xor
mov
jge
mov
ret
push
aam
and
adc
ret
repz
js
arpl
push
cld
idivb
inc
shlb
xchg
pop
sarb
mov
xlat
push
inc
mov
sarb
dec
insb
shrb
out
mov
in
push
cmp
xchg
int
mov
cmp
add
or
in
push
bound
fcom
dec
mov
cli
mov
cli
fbld
cltd
mov
sub
fisttpll
lods
lahf
add
nop
mov
sub
sbb
fiaddl
bound
xchg
mov
push
out
cmpsb
or
imull
notb
mov
sub
push
nop
mov
inc
xchg
stos
lods
xor
jo
insb
and
xchg
popa
pushf
jns
mov
push
jns
add
push
jge
and
jmp
test
test
addr16
sahf
xor
pop
subl
push
fcoms
cmc
and
push
adc
imul
loope
sti
cmpl
sub
mov
scas
adc
cwtl
out
popa
mov
and
sti
add
cmpsb
inc
mov
movsb
sarl
shll
cmc
cmp
adc
jne
push
jge
fmuls
push
dec
ljmp
push
sbb
lods
sbb
jecxz
imull
sti
jle
push
stos
mov
loope
push
inc
shl
leave
mov
icebp
test
xchg
outsb
cltd
xchg
cli
arpl
push
jns
sub
notb
xchg
pop
scas
jecxz
stc
lret
xorl
or
je
int
push
out
gs
ret
pop
push
cmc
jecxz
push
push
sbb
insl
xchg
inc
imul
adc
cmp
jl
outsb
fisubrl
hlt
push
insb
sbb
push
ret
mov
push
js
mov
lock
fbld
int3
pushf
sbb
inc
inc
lahf
jge
add
inc
popl
sbb
mov
xor
lahf
pop
jl
cmp
rcl
dec
ljmp
adc
sarl
jmp
mov
clc
ljmp
rolb
cmpsb
xchg
orb
inc
adc
mov
or
stos
add
lret
jmp
orl
and
adc
dec
push
es
popa
mov
test
jmp
mov
add
and
sahf
dec
pop
cmpl
and
jb
ret
lret
stc
push
popl
int3
rorl
imulb
xchg
pop
dec
rorb
dec
push
sub
mov
in
rcrb
cmp
add
sti
rclb
test
xchg
dec
mov
jecxz
adc
enter
inc
out
fidivs
in
repnz
stos
fmulp
insb
pop
or
out
pop
dec
fsubrl
rorl
popa
xchg
daa
pop
sub
and
lods
aaa
mov
lret
cmp
jmp
lock
inc
ja
arpl
test
adc
xchg
jno,pt
hlt
jle
xor
mov
lds
sub
and
xor
movswl
daa
dec
or
inc
ja
jnp
sahf
outsl
jns
push
in
xor
xchg
data16
fdivrs
outsl
in
cmp
push
mov
xchg
cmpsb
cs
add
repz
shll
repz
jne
ljmp
xchg
jecxz
push
test
xor
sbb
xchg
xlat
les
loop
or
int
jno
dec
pop
adc
cmpsb
pushf
sarl
leave
xchg
int
inc
lret
pop
gs
lds
xchg
add
mov
fisttpl
fisttpll
push
fwait
cltd
cmpl
mov
cmpb
out
aam
outsl
loope
cld
stos
aam
repz
iret
adc
pop
daa
mov
ret
xchg
idivb
adc
negl
cmp
adc
xchg
orb
add
push
lds
stos
add
and
xchg
mov
and
inc
xor
add
cwtl
xor
int3
push
adc
and
in
push
fimull
aaa
sbb
cmp
add
xchg
lods
call
pop
insl
test
mov
mov
add
cmovle
dec
shr
dec
and
mov
sbb
mov
dec
add
icebp
mov
xor
popf
add
fs
ret
out
sub
imul
add
dec
dec
out
push
fs
test
adc
aam
fwait
testl
push
iret
jp
inc
add
pop
ds
shlb
sbb
mov
lcall
cmp
xor
int3
sub
push
pop
inc
and
mov
fs
inc
pushf
cs
fcomip
adc
xchg
jl
mov
add
mov
mov
mov
add
aas
movsb
jae
jl
xchg
mov
scas
push
pop
lahf
sub
add
js,pn
dec
xchg
and
jae
mov
xchg
jmp
sbb
popl
daa
xor
jae
lret
test
lods
jl
and
xlat
xlat
pop
enter
fidivrs
cmp
fsubp
push
loopne
js
pop
pop
test
inc
mov
insl
fiadds
add
das
push
pop
imul
xor
sub
or
cli
jnp
or
cmc
mov
add
cli
dec
js
into
out
pop
inc
fwait
push
lods
dec
mov
sub
int3
arpl
fimuls
add
data16
inc
inc
movsl
sub
test
mov
inc
jnp
dec
inc
push
stc
push
lahf
into
stos
dec
push
mov
fmul
push
sub
fdivs
out
push
ficoml
mov
ficoml
sub
cmp
mov
and
sbb
sbb
ds
or
jle
movl
iret
test
decb
pop
loopne
and
cmp
imul
sub
outsb
in
mov
jae
les
mov
mov
cmp
jmp
add
lahf
icebp
in
out
inc
hlt
push
xor
jo
xchg
popa
scas
mov
and
jmp
mov
in
aad
xor
js
cmpl
mov
xor
iret
rorb
push
je
dec
les
je
inc
xor
mov
sub
adc
rclb
mov
lret
mov
cmp
insl
fcompl
ja
es
pop
scas
pop
testb
out
add
jg
adc
jle
scas
mov
cld
xor
jae
cld
aam
jmp
jecxz
or
pop
xchg
add
mov
pop
jae
sub
dec
mov
arpl
add
and
xor
push
add
adc
shll
sbb
mov
call
in
dec
dec
jmp
cli
mov
jno
mov
or
pop
cmpsb
mov
mov
ds
dec
or
dec
or
inc
inc
mov
adc
pop
cmp
mov
outsl
mov
adc
cmp
and
xor
pop
cwtl
xchg
jecxz
enter
xchg
sub
sub
lock
jp
mov
sbb
arpl
push
scas
add
adc
js
ljmp
sbb
cltd
mov
push
add
mov
add
icebp
testb
ret
cmpsl
sub
and
adc
mov
fidivrs
out
push
adc
aaa
pop
dec
cmp
cli
ret
out
call
repz
xor
mov
mov
sbb
pop
and
insl
mov
cmpsl
pop
xchg
add
sub
imul
stc
popa
jmp
pop
addr16
and
je
cmp
or
dec
inc
push
sbb
ljmp
outsb
sbb
jl
cmpsl
xor
lock
test
xchg
xchg
cmp
jge
cwtl
push
pop
mov
jnp
mov
vpmacsww
jne
lret
pop
jno
mov
push
cli
sti
inc
arpl
repnz
scas
bound
outsl
outsb
test
or
pop
loopne
xlat
sub
aas
out
mov
std
jae
shrb
shll
cs
push
pop
orb
and
shlb
out
jle
into
imul
xor
insl
mov
ret
inc
inc
scas
sbb
sti
and
cmp
fimuls
jp
enter
frstor
add
sti
add
je
mov
push
xchg
xor
push
orb
cmc
mov
fisubl
aas
jp
mov
and
orb
sarl
call
sub
push
fdivrl
inc
iret
and
inc
in
push
mov
in
fistpl
out
insl
out
testl
loopne
jnp
xchg
jl
in
into
mov
test
mov
loopne
in
outsb
pop
fwait
xchg
mov
inc
movsl
sarl
mov
xor
mov
jb,pn
dec
mov
ss
les
xor
pop
or
add
mov
cmc
pop
xor
je
ret
ds
lock
or
mov
dec
xchg
in
adc
les
or
xchg
dec
jb
or
test
dec
popa
jle
pusha
inc
mov
bound
gs
jns
inc
add
push
sub
cld
sbbb
jmp
pop
dec
push
dec
fmuls
jno
jnp
xchg
push
out
repnz
mov
popf
jb
cli
sbb
je
pop
add
xchg
les
lods
int
sbb
outsl
mov
imul
cmp
and
adc
and
sbb
push
scas
je
xor
and
push
movsl
leave
cmp
sbb
and
jl
rcrb
into
sbb
xor
je
sbb
hlt
lds
aad
mov
call
popa
cmp
lea
adcb
jnp
or
inc
jge
xchg
dec
out
jns
mov
dec
pop
push
pop
push
outsb
aaa
cmpsl
mov
dec
sub
cltd
and
jmp
in
les
scas
js
bswap
adc
int
ss
leave
out
movsb
subb
mov
dec
aam
jge
push
pop
push
mov
inc
int3
xchg
xor
nop
fisttpl
pop
mov
mov
mov
mov
mov
testl
js
cmp
fimuls
arpl
cmpb
mov
xor
and
dec
test
fsubs
rolb
jo
mov
push
test
push
test
add
test
mov
add
iret
lea
cs
push
and
sbb
xlat
jmp
jmp
jmp
cmpl
scas
mov
ret
mov
mov
jecxz
ror
shl
xchg
aaa
or
sbb
pusha
lret
arpl
pusha
push
jecxz
fistpl
xlat
mov
repnz
mov
mull
movsl
sub
sbb
hlt
fs
les
and
pop
push
ss
jae
loop
imul
add
out
fs
lock
test
bound
jle
aas
aad
insl
insb
lcall
pop
or
xchg
jb
mov
fwait
and
loope
and
xor
mov
test
push
sub
sbb
pop
cltd
adc
arpl
jo
jle
xor
inc
fisubrl
xor
cmpsl
xor
push
pop
mov
fldcw
pushf
insl
es
cwtl
pop
mov
lret
jp
push
cmpsb
dec
popf
adc
adc
outsb
pop
fmull
popa
cltd
mov
lds
out
out
cs
in
mov
test
stos
jns
add
daa
negl
pop
xor
mov
ljmp
sbb
lret
pop
mov
ffree
repz
rcll
xor
outsl
push
std
insl
mov
test
inc
andl
notb
xchg
ljmp
lods
xchg
dec
lds
pop
ror
cmp
push
icebp
mov
lea
iret
in
mov
ljmp
ret
inc
gs
cs
mov
pop
call
fldl
sub
pushf
push
das
sub
push
push
cmp
jbe
pop
pop
cltd
push
fimull
movsl
outsb
jg
leave
pusha
push
xor
test
popa
shl
jbe
fs
sarb
sti
iret
sbb
or
rcrb
xchg
push
fucomp
movsb
jns
cmpsl
addl
or
inc
jmp
je
mov
xor
xchg
push
jecxz
jle
dec
rolb
lahf
jge
cli
mov
cltd
jo
inc
stc
mov
and
xor
sub
test
mov
popa
out
dec
repnz
movsb
outsl
push
and
daa
mov
inc
dec
out
mov
fildll
add
out
mov
lds
pop
lcall
push
pop
lcall
cmp
arpl
xor
in
push
inc
repz
mov
inc
push
movsl
shl
dec
xchg
in
movsb
scas
das
int3
sarl
jg
adc
mov
push
and
aam
insb
dec
add
inc
aad
cmp
xchg
push
jno
les
lret
call
fcompl
add
sub
leave
sub
mov
dec
adc
sbbl
mov
sub
xchg
movsl
scas
dec
ret
cld
insl
push
push
aaa
js
push
nop
xchg
shr
xchg
pop
push
sbb
out
pushf
and
fcmovbe
cmp
push
push
xor
into
xchg
xchg
xor
jge
mov
pop
xor
mov
push
xchg
cmp
ret
mov
adc
nop
pop
stos
shll
out
add
dec
mov
pop
subl
push
repz
in
mov
out
mov
addr16
cmp
in
mov
clc
out
sarl
imul
and
lret
sub
jle
inc
cmp
add
sub
or
mov
out
in
fdivrl
inc
daa
push
aaa
gs
adc
mov
xchg
cmpsl
rclb
fs
dec
mov
nop
cli
xorb
pop
or
loopne
repnz
fcmovb
cmp
fsubr
xorl
in
sub
push
adcb
xchg
lods
dec
iret
cmc
mov
mov
sbb
cs
shlb
pop
mov
or
outsb
loop
cmpsl
pop
push
pusha
xchg
mov
imull
mov
aad
lods
adc
mov
jge
push
insb
mov
fwait
dec
xor
lods
pop
shll
xor
mov
xorb
or
and
jecxz
ret
inc
test
inc
mul
adc
dec
inc
and
dec
daa
js
and
fwait
lret
outsl
ja,pt
cwtl
xor
bound
or
inc
out
pop
mov
add
push
fcoml
stos
xchg
data16
pop
mov
cmp
popf
ret
repz
xor
lods
xor
mov
pop
sti
cmp
into
testb
jecxz
xor
mov
xchg
icebp
pslld
ss
cmpsl
mov
jmp
jl
jbe
mov
and
jge
jge
fcomip
out
jle
bound
in
outsb
xchg
jle,pt
fnstsw
xor
jno
mov
clc
sbbl
fmull
js
xchg
mov
adc
adcb
rcr
lock
push
les
je
insb
inc
xor
dec
mov
push
sub
aam
into
test
scas
movb
lea
lret
out
cmp
jno
shlb
scas
sub
cltd
dec
xchg
addr16
xor
pop
inc
lea
dec
lret
movsb
cmpsl
loope
into
mov
mov
ds
and
xchg
ja
insb
adc
adc
inc
hlt
imul
stos
push
or
out
mov
inc
mov
packsswb
popa
push
in
push
stc
mov
test
jmp
cmp
cld
out
sbb
pop
pop
sub
es
lds
shl
jnp
cld
cmpsb
xchg
movsl
jp
cltd
jns
xchg
loope
jo
enter
in
xor
inc
cmp
mov
inc
test
inc
xchg
and
iret
sbb
pusha
std
jmp
jle
movsl
mov
jnp
jl
loop
stc
fldt
sub
dec
mov
mov
test
fsubr
mov
pop
push
cltd
gs
pop
inc
imul
jns
ds
sbb
and
icebp
int
pop
stos
shrl
sub
mov
dec
dec
rcrb
movsb
arpl
insl
pop
test
and
in
in
mov
lds
or
insl
jnp
jecxz
cmp
add
cld
xorb
inc
sarb
add
mov
test
stos
jbe
sbb
mov
fidivrl
or
call
insl
es
fisttpll
jne
inc
outsb
int
pusha
add
orb
pop
mov
insb
mov
scas
scas
neg
shlb
call
lods
xor
data16
pop
push
mov
dec
pop
add
xchg
or
push
inc
xchg
add
inc
mov
pop
jmp
mov
jp
mov
ja
dec
sub
cmc
dec
lret
dec
inc
jnp
pop
int
outsb
sarl
and
pop
jl
shrl
fsubrs
dec
ss
pop
bound
test
hlt
sub
js
dec
out
sbb
shrl
in
mov
lret
insl
test
test
fnstenv
sub
lods
loop
adc
adc
dec
push
xchg
sub
inc
pushf
mov
icebp
sbb
aas
xchg
xchg
into
aad
inc
lods
cs
je
cs
cmp
inc
cltd
mov
ds
jmp
cmp
movsl
lea
add
lret
stc
ja
xor
add
xor
in
jge
ds
cmpsb
scas
into
push
sbb
inc
imul
ret
ret
aas
in
cs
stc
enter
inc
xchg
mov
sti
cmp
dec
add
fiaddl
ret
repz
mov
lock
fnsave
adc
out
cmp
xchg
xor
push
outsb
pusha
lea
into
xor
shlb
in
mov
cmpsb
int3
fcomps
pop
mov
movsb
xlat
jg
nop
add
iret
sbb
pop
mov
xlat
repz
repz
mov
inc
ljmp
xchg
enter
ret
mov
bound
fidivrs
pop
call
xchg
push
sub
scas
dec
pop
xlat
ljmp
in
in
mov
jg
sub
mov
outsb
push
imul
out
das
ljmp
dec
fstl
sbb
mov
inc
pop
jecxz
shrl
sub
push
ss
jg
jne
xor
dec
mov
inc
insl
cwtl
shlb
std
jns
mov
jmp
cmp
das
jbe
cld
leave
shlb
roll
cltd
sarb
pop
mov
xchg
test
jno
pop
xor
test
pop
xchg
xchg
push
cmp
mov
cmp
shlb
testb
sbb
mov
test
mov
and
popf
and
push
cmpsl
sub
dec
fcomip
sbb
inc
iret
xor
scas
inc
repnz
nop
mov
out
add
jecxz
inc
sub
divb
push
xlat
sub
pop
mov
les
pop
mov
xor
cmpsb
ret
loop
xchg
cmp
mov
adc
sub
pushl
cmp
data16
sub
mov
and
add
xor
lods
jle
add
jbe
ror
insl
sbb
lcall
adc
mov
pop
jae
and
cltd
addr16
pop
fcompl
imul
sti
loopne
das
fnsave
lds
push
subl
neg
adc
mov
cmp
adc
dec
in
pop
outsb
inc
lods
bound
ss
imul
mov
gs
mov
xchg
cs
xchg
out
inc
pop
sahf
xchg
aas
stc
sti
sub
in
mov
xor
mov
mov
push
mov
notl
cmp
nop
or
out
xor
dec
mov
mov
jp
popf
dec
lret
and
inc
push
mov
insl
out
das
or
sbb
fstpt
out
js
and
pop
data16
mov
hlt
aad
push
cmp
shl
fists
add
xor
cmp
push
dec
inc
add
lret
nop
pop
bound
and
pop
push
xchg
in
insl
jb
adc
mov
mov
in
jge
repnz
sub
pop
inc
xchg
push
mov
and
in
mov
pushf
or
scas
add
shlb
orl
jb
mov
cmc
je
pop
pushf
iret
inc
push
pusha
mov
jl
dec
and
or
lds
mov
leave
or
pop
jg
add
pushf
in
call
xchg
adc
dec
add
addr16
add
xor
es
sub
insl
gs
and
cmp
xor
std
aas
cltd
inc
outsl
mov
inc
lret
xchg
mov
clc
push
mov
xchg
jle
jp
inc
scas
xchg
ret
call
movsb
xchg
iret
cwtl
daa
sub
popf
jne
adc
arpl
mov
lea
inc
mov
push
jecxz
xchg
and
ret
gs
test
sub
push
pop
int
aas
xorl
push
popa
hlt
stos
sti
adc
or
das
xchg
js
push
shll
je
push
leave
fdivs
or
pop
push
in
push
hlt
pop
outsb
pop
sbbl
and
add
and
sub
or
sbb
dec
cltd
mov
imul
out
mov
sahf
stc
cli
lret
in
ss
jmp
outsl
xchg
lret
mov
pop
mov
cmc
inc
lcall
cwtl
jno
push
fistpll
and
shl
mov
push
call
pop
fisttpll
fsubp
cli
cld
ret
int
or
dec
js
test
or
mov
push
test
push
xchg
jle
mov
jbe
scas
imul
aam
mov
negb
in
scas
fwait
roll
cmp
push
call
enter
cmpsl
jns
xrelease
hlt
jae
and
xchg
fs
int3
jns
jnp
pushf
test
leave
pop
add
in
pop
jae
mov
sub
data16
inc
aam
pop
jp
inc
mov
loopne
dec
int3
push
sahf
inc
mov
and
fbld
out
sahf
scas
cmp
insl
sbb
sti
es
and
aad
or
mov
cmp
pop
xor
test
into
shll
stos
xchg
test
in
gs
call
sbb
sbb
addr16
int
or
aas
mov
in
mov
out
loop
dec
dec
cli
pop
aam
movsb
movsl
lods
stos
ret
cmp
inc
adc
cmp
shll
in
jnp
sub
cmp
lahf
cmp
mov
sub
sub
dec
mov
lods
jnp
in
xor
mov
xor
add
aaa
idiv
cmp
inc
getsec
mov
add
mov
pop
jmp
sub
sbb
rolb
jnp
outsl
ljmp
or
pop
lds
xchg
sbb
jbe
mov
mov
mov
push
lods
and
cli
lcall
insb
lock
daa
lods
pop
sbb
push
push
int3
push
mov
popf
jmp
sub
fs
imul
and
ljmp
cli
pop
xchg
hlt
fistpl
and
cli
rcrb
mov
push
and
sarl
das
roll
inc
push
xor
adc
xchg
add
in
repz
outsl
test
fadds
ret
adc
pop
jge
sub
or
add
das
in
and
cmp
pop
vmovd
test
sub
sub
scas
push
pop
gs
pusha
push
sbb
int
or
dec
and
jo
test
cmc
cmp
sar
fistpll
sub
test
in
inc
daa
and
bound
popa
sbb
ret
sbb
adc
jle
imul
mov
cwtl
mov
fldcw
add
jge
mov
or
push
movsl
rcl
movsl
pop
cltd
in
arpl
arpl
and
dec
push
cmc
inc
xor
jmp
adc
jb
sarl
stc
jmp
dec
rolb
addb
sti
mov
adc
dec
fnsave
mov
cmp
xacquire
jno
dec
rorl
fs
call
popf
xor
fstps
xchg
mov
xchg
std
or
mov
jmp
mov
insl
pop
mov
lods
and
adc
push
xor
mov
cmp
rcr
aas
add
aaa
mov
cmp
pop
out
out
inc
ret
jp
mov
xor
add
jp
mov
nop
test
fstl
inc
dec
adc
jecxz
add
pop
or
xor
int
mov
imull
xor
jecxz
repz
adc
mov
sbb
out
adc
das
shlb
out
sbb
or
cmp
xchg
add
xadd
dec
pusha
mov
mov
cmp
push
jne
push
int
insl
mov
mov
lock
repnz
scas
xor
sbb
fsubrs
xor
pushf
repnz
repnz
or
das
xchg
out
xlat
pop
aaa
xor
cltd
push
jg
test
pop
inc
inc
sub
or
push
cwtl
dec
ja
mov
jno
adc
scas
mov
cmp
lock
iret
and
and
imul
cmpb
push
sub
pusha
test
add
cli
aaa
lods
inc
call
sbbb
ret
adc
push
pop
sbb
sahf
scas
mov
in
mov
xchg
in
push
lods
das
rolb
movsb
cmpsb
cs
xor
or
enter
movsb
jae
cltd
out
or
leave
xchg
out
loope
dec
fcmovnu
mov
or
lea
push
aaa
mov
xchg
adc
scas
add
push
xor
cmp
or
jb
add
jno
dec
hlt
sub
andl
xchg
add
ret
cli
stos
mov
ja
inc
push
fisubrl
dec
mov
xchg
orb
jmp
push
mov
dec
insl
aam
jns
push
lock
rcrb
mov
lods
jno
push
sahf
mov
jbe
repnz
dec
inc
loope
inc
movsb
mov
jnp
xor
fsubrs
xchg
jg
enter
cmp
inc
adc
rclb
lock
lret
or
xchg
cmpsb
xor
fnsave
inc
in
jb
push
mov
adc
icebp
pusha
out
xor
shlb
or
mov
pop
inc
mov
mov
mov
mov
jmp
cmp
ja
ds
cmp
cltd
pushf
ljmp
sti
pop
xor
inc
adcl
jge
xchg
or
mov
or
adc
mov
mov
fwait
xchg
dec
cmp
call
sti
mov
out
mov
mov
or
es
popa
sarl
mov
cmp
dec
xchg
mov
out
inc
mov
xor
andl
cmp
aad
mov
push
aad
dec
out
adc
in
cs
into
scas
stos
adc
pop
ds
inc
negb
aaa
pop
daa
xor
cmp
lahf
sti
sbb
std
sbb
ret
jg
or
gs
dec
xor
cmp
or
clc
add
gs
jl
jo
or
fsubrl
dec
lea
lahf
in
inc
cmp
inc
sbb
gs
jbe
jno
jae
gs
stos
imul
icebp
dec
das
cltd
loopne
add
xor
inc
xchg
sub
xlat
movsl
sub
fidivrs
pminub
sbb
push
jo
loopne
idiv
add
xchg
aam
cmp
xor
aas
decl
fs
mov
test
mov
mov
or
aam
jl
ss
test
nop
adc
fwait
aas
test
fstpl
mov
adc
jbe
stos
cmp
push
push
jne
or
xchg
mov
cli
mov
xlat
sbb
mov
lret
inc
addr16
imul
call
loopne
cmpsb
ja
xchg
or
sbb
mov
cmp
divb
imul
push
add
pushf
mov
pushf
add
data16
cmp
bound
imul
mov
repnz
pop
jns
dec
inc
jno
mov
pop
ljmp
loopne
mov
fcoms
repnz
imul
xchg
int3
jno
fbstp
ja
xor
test
sbb
ljmp
jnp
bound
int3
in
cmp
daa
test
cmp
in
mov
mov
rolb
js
mov
ds
test
cmpb
test
xchg
pushf
or
icebp
ds
jnp
cmp
sbb
xchg
insb
inc
add
test
dec
cmp
mov
sub
in
inc
jbe
push
mov
loopne
dec
xor
cmpsl
add
xchg
data16
cs
lret
or
ja
pop
pop
xchg
dec
xor
push
inc
inc
fstpl
or
call
shlb
cld
adc
das
cmc
nop
lds
lcall
sbb
lds
mov
inc
pop
jecxz
or
iret
sbb
call
mov
mov
xchg
mov
fiadds
pop
mov
sub
addr16
shrl
mov
enter
adc
test
pop
mov
lock
pop
sub
dec
int
cmpsb
cmp
jecxz
mov
and
fwait
dec
lcall
lea
push
sahf
hlt
add
pusha
js
loopne
stos
cmp
stos
fdivs
jmp
fldt
sarb
push
out
out
mov
arpl
mov
aad
mov
mov
jle
dec
push
pop
dec
sbb
inc
mov
jmp
mov
arpl
cwtl
mov
mov
pop
adc
mov
sub
mov
js
emms
daa
pushf
push
dec
mov
pushf
mov
call
iret
loope
push
adc
inc
sbb
add
and
xchg
out
pop
ja
mov
inc
test
cmp
in
lods
icebp
pop
cmp
sbb
xchg
xor
pop
push
and
fldenv
and
je
cmp
enter
add
adcb
pop
arpl
push
jne
in
js
jo
rcrb
cmp
adc
sub
xchg
in
ja
xchg
xchg
std
pushf
push
out
popf
xchg
pop
out
scas
inc
dec
add
lock
mov
jp
xor
sbb
daa
bound
sbb
rorb
cmp
add
dec
lea
stos
pusha
and
sbb
xchg
lea
sbb
sub
addr16
test
fwait
movsb
rcrl
sbbl
mov
es
in
mov
loop
jbe
cltd
enter
inc
add
cmp
mov
pusha
aas
iret
mov
xlat
ret
jnp
and
iret
cli
push
int
shrb
pop
jae
popf
inc
icebp
shll
pop
into
push
dec
mov
mov
xchg
lret
jne
or
clc
cmp
mov
loope
outsb
xor
push
cmpsb
hlt
jns
adc
jns
pop
mov
jo
sub
add
sahf
sub
mov
cld
imul
loope
das
xor
pop
adcb
and
jmp
inc
mov
sub
das
leave
and
mov
mov
cs
sahf
mov
jne
fildl
je
cmp
xor
add
lods
bswap
pusha
adc
adc
nop
mov
and
lcall
sub
fadds
daa
jmp
loop
aas
push
jns
sti
movsb
das
sub
fstl
sarl
test
push
aad
rcrl
leave
enter
out
jmp
les
cmpb
mov
jle
jnp
js
mov
fdivrs
sbb
cmp
js
jge
mov
adc
or
sarl
fadds
add
xor
fnstsw
adcl
xor
mov
jb
sub
mov
adc
rorl
fiaddl
cwtl
jns
pop
push
mov
mov
xchg
inc
insb
jl
std
movsl
xchg
mov
repz
jle
shrl
gs
pop
push
aad
dec
add
inc
popf
iret
inc
sbb
or
and
add
inc
jp
xchg
mov
stos
pop
and
daa
or
fisubrs
aas
or
xor
lock
es
pop
lcall
into
sbb
sbb
pop
push
xchg
pop
push
xchg
dec
es
addr16
adc
mov
into
inc
jbe
or
dec
cwtl
cmp
sti
sti
insb
cmpsb
xor
shrb
lret
test
in
in
mov
adc
je
mov
jle
push
xlat
pop
rorl
lods
lods
xchg
mov
or
jl
pushf
add
pop
jp
inc
in
xor
jmp
inc
enter
and
mov
sbb
or
inc
popf
push
fidivl
in
push
pop
inc
js
push
mov
out
or
dec
dec
sub
cmp
dec
push
sub
add
pop
cmp
mov
add
lods
sub
add
pop
cs
psubusb
jecxz
ds
pushf
mov
mov
repnz
fildl
push
sahf
cwtl
je
jmp
cld
push
movsl
mov
iret
loope
xchg
ds
add
adc
lds
in
xor
lret
cltd
movsl
push
daa
xchg
cmc
movsl
or
outsl
mov
test
iret
jbe
scas
rol
loope
insl
pop
ficompl
push
insb
push
xchg
xchg
and
popa
fdivl
push
xchg
dec
pop
inc
ljmp
mov
pop
stc
lret
mov
pop
cmpsb
xor
inc
and
pcmpgtd
lahf
add
repz
es
xor
xchg
fcoml
das
add
into
dec
push
push
pushf
rorl
jmp
mov
add
mov
add
mov
movl
push
int3
dec
push
jo
cmpsb
adc
jmp
sbb
test
mov
arpl
lret
mov
inc
xchg
pop
andb
test
cmpsl
xchg
ljmp
decl
add
jge
cwtl
loop
and
jge
push
push
test
ljmp
or
xor
xor
sub
adc
pop
pxor
mov
aam
pop
arpl
jnp
movsl
or
lods
mov
dec
loope
lret
les
cld
ret
push
testl
rclb
out
jmp
idivl
jecxz
jno
pop
add
out
ret
aas
inc
push
gs
enter
enter
movsb
in
fmuls
mov
cmp
test
cmp
ss
add
jno
fiadds
sub
adc
int3
enter
and
push
cmc
mov
xchg
popf
lret
dec
fisttpl
pop
add
inc
pop
fs
icebp
mov
mov
pop
dec
cmp
jno
sub
push
lahf
mov
fisttps
lret
in
push
arpl
dec
xchg
xchg
push
int3
sbb
push
call
sbb
xchg
inc
lods
jbe
fiadds
xchg
dec
loope
popf
loopne
push
mov
dec
mov
lock
and
js
sbb
and
pop
loope
or
xchg
lds
mov
out
addr16
cli
stos
jle
mov
ss
or
mov
or
stc
mov
xor
in
insb
and
adc
jge
mov
sarl
in
ds
mov
pop
movsl
mov
jne
and
cmpb
xor
addb
mov
mov
dec
les
popa
add
aad
sbb
jle
xchg
push
push
cmp
mov
hlt
fidivl
pop
rcll
leave
cwtl
sub
pop
out
lock
gs
jmp
push
insl
in
pop
or
mov
mov
movl
lods
xchg
stos
jae
pop
shlb
outsl
aad
inc
add
loope
into
pop
gs
jg
jge
adc
fcomip
outsb
call
mov
pop
and
cltd
mov
das
inc
cltd
pop
push
mov
test
loope
cs
inc
repz
xchg
jp
xchg
dec
call
lods
int3
out
pop
cmpsb
lahf
dec
popa
mov
or
cmp
xor
dec
sub
cmp
fmuls
pop
jmp
mov
repz
pushf
push
push
xchg
aam
aad
imul
xor
mov
or
sbb
fisubrs
movsl
pop
aaa
scas
jg,pn
int3
adc
in
inc
dec
jo
lret
and
xchg
push
cwtl
fstl
mov
pop
mov
cmpsb
popf
xchg
jp
cmovno
std
and
sbb
xor
jg
fsubrl
dec
call
inc
or
jo
add
inc
daa
out
push
test
sub
shl
mov
or
into
nop
mov
mov
dec
loopne
jnp
mov
in
adc
stc
arpl
cmpsb
sti
mov
mov
cmpsl
fptan
addb
dec
sbb
movsb
addb
cli
mov
ffreep
push
das
lods
pop
mov
push
push
xchg
ds
or
jmp
pop
jo
add
movsl
pushf
cltd
out
inc
and
xor
dec
add
jne
mov
jp
fwait
sbb
orl
add
mov
insl
xchg
xor
adc
fisubrs
push
je
lds
cmp
insl
and
mov
sbb
xchg
gs
cld
leave
xchg
mov
mov
mov
xchg
push
hlt
jg
inc
xchg
dec
aad
pusha
jp
test
push
mov
lock
jne
lret
pop
sbb
mov
mov
fnstsw
ficoms
push
mov
pop
shlb
stc
sbb
and
dec
ret
aaa
pop
xorl
or
pop
xchg
pusha
dec
lahf
and
push
in
push
fwait
push
push
mov
in
xchg
jo
push
cmp
adc
es
test
cmp
cmp
pop
lds
les
in
lods
or
test
xor
mov
lret
daa
cwtl
dec
jp
push
dec
lahf
pop
mov
int3
mov
sbb
xor
neg
rcrl
nop
cmp
aam
jmp
mov
jb
xor
aaa
pop
adc
bound
mov
daa
mov
xchg
add
mov
lods
outsl
call
adc
es
call
cmpsl
filds
jp
xor
in
sub
adcl
pushf
sti
imulb
cmp
or
sub
mov
jle
sbb
mov
xchg
push
add
sbb
inc
dec
orb
cmp
lcall
ljmp
or
mov
push
mov
out
movsb
xchg
fucompp
in
mov
pusha
pop
dec
xor
hlt
push
rcrb
fnstcw
sbb
or
lock
std
insl
out
mov
mov
dec
jb
dec
sbb
es
xchg
sbb
mov
pushf
mov
outsb
out
loopne
movsl
fbstp
je
push
in
scas
mov
ja
dec
mov
mov
ss
or
push
adc
pop
or
lcall
std
xchg
pop
cwtl
or
clc
test
jns
or
or
insb
iret
aas
cmpsb
jne
sarb
pop
gs
cmp
into
pop
xlat
sub
add
or
test
sbb
dec
iret
mov
scas
and
pop
repz
into
cmpsb
push
std
rcrb
sub
jne
out
and
in
mov
in
cmp
dec
sarb
adc
fdivrs
lea
mov
dec
inc
xlat
test
xor
aaa
adc
cwtl
repnz
dec
mov
mov
fwait
daa
cmc
sbb
shlb
sub
mov
xchg
lret
jns
fs
push
pusha
xor
and
push
andb
loopne
mov
lea
mov
or
push
daa
loopne
sti
data16
and
fwait
cmp
mov
cmp
jmp
in
mov
add
mov
sbb
xchg
inc
dec
push
aaa
stc
dec
xlat
inc
sahf
mov
mov
or
lock
lahf
clc
pop
mov
xlat
sub
push
xchg
out
out
mov
not
pop
mov
cmc
testl
aam
in
in
pusha
xor
out
dec
dec
pop
pop
add
inc
mov
lods
cmp
fwait
imulb
sbb
push
aam
xchg
and
mov
add
ret
stos
inc
xor
adc
inc
or
xchg
mov
pop
lcall
push
negb
clc
popf
mov
pushf
lods
xor
xor
pop
or
cmpsb
xchg
icebp
adc
push
xor
sub
out
xchg
add
cmc
cmpsl
push
fdivrl
inc
cwtl
cld
call
and
mov
fnstcw
xor
fnstsw
or
mov
mov
jbe
jbe
push
mov
test
jg
sti
push
inc
aas
cmp
out
dec
mov
ret
push
cltd
addr16
mov
xor
sbb
dec
popa
pop
ret
das
lea
loop
jbe
das
mov
pusha
jmp
add
inc
sub
add
ss
lcall
add
pusha
inc
lret
andl
push
mov
or
cmp
push
daa
ret
jp
dec
clc
xchg
icebp
mov
sti
mov
dec
jo
fisttpl
cmp
pop
ds
xchg
pusha
and
mov
mov
xor
jg
jne
cmc
push
cmp
and
mov
test
sbb
pop
in
jle
push
ret
mov
es
mov
add
sbbl
lods
scas
mov
add
add
aam
jmp
fwait
xchg
les
pop
mov
stc
mov
fnstcw
inc
dec
fists
lret
sub
ret
ret
jnp
ret
mov
jno
push
sahf
fdivl
cmp
pop
cli
xchg
and
ja
dec
xchg
adc
cmp
xchg
shrl
fisttps
adc
hlt
mov
repnz
cmc
xor
push
aad
dec
xchg
or
int
mov
or
push
les
xchg
mov
xchg
mov
cs
dec
adc
insl
xchg
mov
movsl
sub
cli
adc
in
xor
dec
out
inc
mov
sub
fwait
push
dec
sub
xchg
push
jmp
sub
mov
loopne
cmc
pop
outsb
mov
lahf
cltd
pop
cli
jge
mov
lods
sbb
cmpb
dec
dec
pusha
adc
fldcw
push
mov
push
add
iret
imul
js
pop
stos
addr16
bound
stos
push
push
xchg
fcomi
inc
mov
mov
mov
cli
xor
roll
xlat
xchg
aas
bound
and
insl
lock
pop
pop
sbb
mov
inc
ljmp
int3
movsb
data16
xor
adc
out
sbb
ret
add
cmp
lea
dec
fcmove
jbe
ljmp
jne
shlb
addr16
push
jle
lock
mov
push
sbb
adc
jnp
incb
popf
aam
aam
jb
sub
test
push
push
das
ds
dec
les
cmpsl
subb
or
dec
popa
lods
cwtl
popf
loopne,pt
cmp
or
in
xlat
mov
xchg
adcl
dec
lods
or
frstpm(287
dec
jns
mov
andl
scas
cli
arpl
pop
bound
lahf
sbb
inc
outsb
incb
mov
js
bound
aam
out
add
pop
jb
lret
insb
outsb
xchg
pop
adc
sub
int3
cmp
mov
scas
movd
ret
inc
repz
stos
sbb
mov
test
in
popf
jmp
jecxz
lods
dec
jbe
push
inc
cld
jmp
ss
cs
fisubrs
cmp
jecxz
mov
jmp
push
stos
inc
and
ret
std
fnstcw
pushf
loop
test
clc
ret
outsb
sub
aam
add
pop
fsubrp
clc
sub
adc
sahf
or
hlt
inc
insb
mov
cmp
leave
mov
jo
in
xchg
dec
aam
cmpsl
les
nop
mulb
dec
push
dec
aad
dec
cli
or
hlt
mov
sbb
and
mov
outsb
inc
in
scas
iret
cmpsb
mov
arpl
out
jae
mov
imul
dec
sbb
mov
add
cs
repnz
and
cmp
xorl
mov
adc
pushf
aaa
xlat
sbbb
je
sub
cmp
sahf
jge
cmpsb
divb
fucom
sub
mov
arpl
cmpsb
inc
add
sub
sub
jecxz
rcl
jmp
jae
leave
xchg
in
dec
cmc
jg
mov
xchg
jne
sti
push
push
pop
cmp
cmc
sbb
insb
lds
sbb
loope
clc
jbe
fwait
push
jns
cmp
or
and
add
and
jno
sub
push
stc
xchg
jl
xchg
sub
lret
popa
jge
dec
aad
dec
mov
mov
aaa
lcall
push
and
pop
lret
loope
add
mov
xchg
fdivs
stos
orb
js
stc
and
or
js
sbb
add
out
out
es
dec
xor
cmp
mov
test
cmp
je
jecxz
repnz
add
mov
incb
sahf
xchg
loop
push
sahf
insl
outsb
pop
bound
fmuls
scas
sahf
into
xor
pop
pop
insb
pop
push
sarb
cmp
add
cmp
lea
imul
pushf
sbb
or
pop
cltd
shl
add
bound
jmp
jmp
cmp
mov
lea
xchg
mov
fwait
mov
stos
das
in
test
jns
pop
push
cld
sbb
cmc
cmp
lods
dec
push
sbb
xor
daa
sbb
and
pop
mov
sub
aas
dec
sbb
sahf
ljmp
lahf
nop
fidivrl
inc
loop
xor
ret
js
jp
mov
lcall
push
push
aam
aaa
pop
orl
xlat
and
in
push
enter
aam
or
inc
adc
sub
mov
lret
add
add
das
iret
xor
stc
les
sbb
xor
aas
add
imul
ficompl
pop
andl
xchg
jo
in
aas
xchg
mov
xor
push
push
movb
imul
mov
sub
or
cwtl
jae
push
ret
cmp
mov
addr16
inc
inc
mov
sub
sbb
mov
mov
add
es
je
ss
ds
divl
jecxz
fcoms
shrl
imul
pop
push
adc
cld
iret
jl
fwait
stos
sarl
les
stos
sti
out
xlat
adc
adc
or
sahf
pop
xor
xchg
enter
outsb
hlt
sub
cmc
fisubrl
ret
outsb
xchg
and
or
js
xor
mov
fnsave
mov
or
es
push
xor
sbb
and
pop
adc
push
dec
outsb
push
mov
clc
lret
inc
in
push
ror
mov
xor
mov
xor
fiaddl
push
dec
notl
mov
xchg
jge
xlat
add
sbb
clc
cld
scas
mov
cmpsb
fstpt
pusha
outsb
loope
push
cli
mov
jl
inc
pop
fnstcw
xchg
inc
adc
xchg
push
xchg
outsb
mov
lahf
lahf
cmp
adc
in
sbb
push
inc
sbb
sub
push
cli
iret
insl
push
pop
xchg
popa
xor
addr16
dec
cmp
arpl
mov
js
sbb
or
out
ss
jge
mov
jg
out
xor
mov
in
test
mov
cmp
mov
test
add
dec
jmp
cmp
mov
shlb
adc
inc
in
das
pop
jae
dec
fidivrl
pop
pop
xlat
aaa
adc
push
sub
xor
iret
test
xchg
dec
roll
mov
aas
pop
or
cltd
adc
jle
mov
test
xor
sub
add
xchg
rcrl
mov
jbe
repz
call
loope
mov
mov
movsb
push
mov
lods
ror
sarl
iret
pop
xchg
sub
leave
call
repz
jmp
mov
out
inc
push
popf
fsubrl
cmp
pop
dec
dec
pushf
insl
xchg
repz
cmpsb
scas
mov
xchg
push
pop
push
flds
lea
adc
mov
push
pop
adc
das
mov
out
popa
pushf
ja
sub
data16
jmp
mov
pop
cmpsl
xchg
icebp
sbb
bound
movsb
orb
repnz
cwtl
cmp
jo
es
pop
lds
mov
lock
jne
dec
mov
in
adc
pop
xor
rorb
repnz
call
lret
and
sarb
push
add
outsb
or
fisubs
rep
repz
sarb
pusha
sahf
jmp
xor
pmuludq
xchg
add
ret
movsb
inc
ss
mov
sbbl
pusha
mov
sub
mov
sarl
add
add
nop
adc
mov
cs
cwtl
fwait
push
push
pop
in
add
enter
sbb
mov
dec
out
fisubrs
xlat
jne
lret
xor
popa
bound
xchg
lods
cld
push
mov
lcall
mov
push
mov
bswap
arpl
dec
and
jp
subb
sub
xor
mov
dec
inc
pop
inc
cmpsl
xchg
pop
sbb
adc
mov
aaa
sbb
sarl
test
outsb
jne
xchg
js
out
shlb
mov
pop
arpl
push
add
idiv
mov
mov
adc
ret
fisttpl
or
mov
in
adc
dec
in
sbb
pusha
and
dec
pop
lds
xchg
lahf
aas
pushf
call
stos
pop
adc
pop
popa
push
rorl
bound
enter
inc
adc
xchg
xor
mov
adc
xor
and
ja
roll
xor
xchg
inc
jecxz
push
or
mov
cmp
sub
push
ds
enter
jno
push
dec
lcall
dec
cmp
adc
pusha
sbb
fs
inc
jne
push
test
cmpsb
pop
sti
pop
ds
movsl
push
dec
mull
sbb
lds
mov
dec
outsb
or
or
jo
stos
inc
movsl
push
pop
lods
xchg
fsubrl
int
cs
xchg
sti
or
dec
ficoms
or
in
call
pop
lcall
pop
push
in
inc
cmc
push
je
and
xor
jnp
inc
es
insb
in
pop
cld
movsl
sub
popf
mov
jg
inc
pop
aas
and
aam
and
jb
push
shll
in
int3
fscale
xlat
adc
mov
fwait
pop
sbb
sub
es
frstor
mov
add
leave
inc
js
mov
jl
add
mov
or
mov
mov
mul
fidivrs
int
jno
pop
pusha
sbb
push
dec
sub
mov
pop
clc
fisubs
imul
add
pop
sbb
mov
out
enter
pop
out
cmp
shlb
push
in
or
add
pop
jnp
and
sahf
mov
or
push
sbb
dec
gs
jb
out
inc
pop
call
mov
push
add
push
ljmp
in
cltd
stc
popf
dec
or
enter
cltd
call
mov
xor
xchg
loopne
dec
outsl
out
push
push
mov
cli
cmp
rclb
jle
mov
dec
inc
jne
sub
shr
mov
das
pop
add
roll
aas
in
imul
cmpsb
gs
fnsave
icebp
aas
enter
sti
or
mov
ljmp
jp
js
faddp
cmp
and
fiadds
sub
test
pop
dec
mov
jbe
and
inc
dec
out
aad
xchg
dec
dec
in
and
ss
icebp
out
fisttpl
js
mov
mov
into
mov
jecxz
andl
insb
cmp
sbb
mov
inc
or
cli
ret
add
jp
jns
addb
inc
imul
inc
inc
sub
rol
subl
push
orl
cs
mov
roll
shr
test
cmp
xchg
push
jne
adc
loopne
in
lret
inc
inc
into
fs
cltd
and
out
rorl
jbe
mov
adc
mov
leave
add
dec
mov
mov
adc
repnz
enter
hlt
push
cmp
ret
dec
sub
int3
pop
outsb
stc
cmpsl
in
adc
sbb
mov
inc
push
leave
pop
loopne
test
enter
and
xor
in
imul
into
andb
pop
cmp
out
pop
mov
in
pop
lods
cli
int
xorb
xchg
repnz
jecxz
in
cld
fmul
cwtl
mov
mov
jnp
push
shrl
or
jo
add
xchg
movb
adc
mov
roll
cmp
cmc
cmp
loope
ds
pop
insl
fnstenv
aas
std
imul
es
mov
test
push
in
and
fsubp
pop
jb
sbb
inc
cltd
lods
repnz
sub
popf
mov
mov
repnz
or
sbb
scas
or
aaa
xchg
out
push
les
cmp
sbb
out
insb
fcmovbe
inc
jb
fbld
cmp
and
xchg
sbb
insb
sbb
mov
test
loope
dec
fwait
jle
cmpsb
das
fstps
pop
mov
inc
sbb
jp
jle
sub
mov
mov
push
xchg
gs
int3
sbb
out
hlt
push
pop
or
outsb
add
sub
xor
cmp
out
icebp
lods
jl
sub
sti
or
movb
movb
pusha
jo
mov
and
popa
lods
out
push
jae
jae
call
lahf
push
push
iret
lahf
inc
fmulp
inc
fs
dec
das
shr
das
pop
inc
add
xchg
loopne
addl
xor
lea
les
rcrl
iret
loope
jle
inc
mov
out
es
mov
ffree
in
mov
int3
scas
outsl
out
hlt
xchg
std
movsl
add
cmp
sbb
push
ja
lahf
add
out
scas
jle,pt
je
in
popf
jge
jne
xchg
mov
push
push
sub
cmp
or
dec
imul
dec
adc
add
adc
out
xchg
mov
jmp
scas
jp
lret
call
xor
imul
inc
cmpb
mov
mov
hlt
sbb
jmp
sbb
inc
xchg
push
fs
sbb
stos
xorl
push
popf
cmpsb
push
jne
pop
fidivrs
cmp
jno
adc
jp
lahf
rorl
dec
add
aam
js
push
dec
cmpsb
jmp
lret
inc
cld
into
mov
aas
pop
leave
mov
mov
xor
cli
pop
fiaddl
add
sbb
mov
add
and
bound
in
aas
addr16
mov
jle
push
mov
scas
cli
cmp
cmc
fldz
vshufps
push
sbb
aam
sbb
rorl
pop
xchg
inc
cmp
inc
mov
inc
ljmp
mov
imul
lahf
push
sbb
jne
sbb
loopne
in
call
lahf
cmp
lods
jae
out
pop
aam
js
lods
jmp
shrl
pop
popf
cmpsl
inc
aam
jne
mov
orb
add
push
and
cli
mov
ds
push
icebp
cmp
add
cwtl
int
ret
fiaddl
iret
fidivrl
sbb
psadbw
jg
pop
cmc
sahf
les
imul
mov
pop
popf
ds
pushf
and
pop
xchg
test
sti
jno
stos
dec
jae
push
mov
call
scas
jmp
shlb
sub
mov
push
xchg
pop
stos
dec
and
bound
pushf
out
mov
nop
fbstp
pop
out
loop
icebp
add
aam
cmp
mov
push
jmp
jecxz
xor
loop
iret
push
push
fistpll
imul
lods
es
adc
jecxz
ret
and
out
repnz
xor
push
sbb
and
mov
vprotw
fnstcw
xor
lcall
sbbl
xchg
cmc
mov
xchg
push
scas
mov
in
mov
inc
jg
enter
mov
add
popf
fnsave
nop
in
into
rcll
inc
mov
cmp
sub
es
sti
inc
ss
lret
sbbl
jne
fsubrs
call
mulb
inc
inc
jnp
xchg
in
sub
or
xor
mov
dec
sub
mov
adc
outsb
jmp
bound
mov
mov
mov
outsb
std
popa
pop
mov
adc
mov
sub
sbb
arpl
mov
pop
lret
xor
pop
and
xor
cltd
in
stc
mov
xor
mov
pop
lods
push
inc
repz
xor
out
cmp
mov
inc
aad
iret
stc
ljmp
data16
sub
inc
shll
xchg
mov
mov
std
xchg
or
xchg
scas
rclb
add
out
mov
mov
push
cmpsb
inc
subl
test
xor
jl
push
mov
mov
sub
and
xchg
rcr
mov
dec
mov
outsl
xor
mov
popl
loopne
js
add
adc
pop
out
in
pusha
adc
mov
fs
xchg
addb
nop
push
rep
stc
xlat
cmpsl
push
jo
scas
bound
add
pop
adc
pop
ud2
pop
repz
xor
mov
mov
or
jmp
xchg
popl
fisubl
popf
ret
fnstsw
mov
inc
dec
mov
imul
sbb
and
inc
pop
mov
jl
pop
loop
mov
push
dec
push
outsl
movsb
imul
imul
jge
cmpl
decl
leave
popa
mov
dec
jge
mov
into
or
lock
and
add
dec
incl
loop,pt
mov
cmp
insb
cmp
pushf
idiv
jns
push
movsb
push
repnz
mov
xor
repz
sub
jecxz
and
fwait
scas
adc
inc
dec
mov
lods
pop
xchg
cmpsb
or
daa
push
mov
jne
add
jae
pusha
mov
and
stos
push
stos
xor
fildll
int3
add
cli
and
mov
adc
and
push
out
jecxz
imul
mov
dec
jno
cs
sub
mov
inc
lret
xchg
mov
into
int3
mov
dec
push
popa
pop
sub
iret
cmp
dec
jecxz
adc
dec
mov
or
cmp
mov
or
push
adc
inc
lds
outsb
dec
sub
fcoms
sbb
or
cmovs
cmp
adc
repz
in
push
xor
xchg
push
sub
mov
mov
xchg
jp
cmc
movl
xor
ljmp
icebp
and
cmp
dec
add
or
imul
jl
insb
sti
cld
push
cltd
jne
sbb
into
mov
xor
xor
adcl
fstpt
push
rep
sbb
gs
scas
in
imul
repnz
loope
or
mov
sarb
mov
inc
sti
fnsave
sbb
push
inc
or
dec
mov
xor
fisubrl
int3
and
cmp
jg
insl
adc
and
repz
arpl
cmp
xchg
iret
add
cmp
lock
pushf
mov
call
movsl
test
faddp
aad
nop
adc
adc
je
push
hlt
pop
mov
mov
lods
stc
xchg
jb
inc
aam
add
dec
subb
bound
sbb
test
jb
sub
xchg
sub
jbe
push
mov
fwait
outsl
loop
jns
jge
scas
jmp
inc
add
mov
xor
push
je
enter
and
mov
xor
andb
mov
inc
fisttpl
pop
ljmp
jbe
pop
dec
push
popa
add
inc
insl
lods
adc
and
cmp
mov
xchg
call
mov
or
into
xchg
cmp
cmp
sbb
push
push
add
or
inc
push
pop
adc
negb
popa
les
jno
adc
dec
and
int
or
cltd
cmp
lods
inc
fdivs
push
cltd
sahf
test
sbb
add
rolb
mov
icebp
cmp
sbb
sub
jns
mov
test
push
mov
repnz
sahf
cmp
cmpb
lock
and
lods
pop
je
fwait
jns
pop
adc
test
push
dec
mov
in
jae
and
stc
cmp
cmp
imul
adc
pop
iret
sub
mov
jno
repz
ret
into
sbb
test
cli
sbb
movsb
ret
dec
test
mov
push
stos
add
jp
mov
sbb
sub
sti
bound
ret
dec
fdivrl
ss
adc
nop
xchg
dec
mov
rcrb
and
es
fistpl
dec
stos
daa
mov
xchg
int
mov
or
popa
aad
les
pop
subb
sub
ss
sbb
pop
insb
gs
nop
and
in
cmpsl
shr
lds
mov
sbb
das
pop
sahf
inc
scas
dec
mov
xchg
cmp
xchg
ret
ret
jb
test
dec
jne
xchg
imul
adc
push
in
push
adcb
pop
mov
lsl
ret
rclb
pop
mov
daa
aaa
shlb
lods
jp
hlt
sbb
mov
fdivs
orb
std
sub
add
outsl
shlb
sbb
cli
lods
faddl
sub
into
cmp
loope
jo
mov
xchg
xchg
loopne
sbb
imul
inc
or
lahf
jmp
mov
mov
int
ljmp
add
sbbl
ret
cli
xchg
push
adc
xchg
cmp
add
adcb
push
ficoms
and
jecxz
mov
movsl
ds
mov
fmul
sbb
adc
fs
aam
stos
fs
repz
cmpsl
ret
or
vfmsubss
jecxz
mov
and
stc
test
ret
lcallw
lods
mov
mov
fstl
inc
fnsave
jno
cmpsl
sbb
xchg
mov
cmp
aas
lret
pop
push
sub
adc
pop
loopne
mov
sub
pop
jne
fdivs
pop
pop
pop
push
sub
xchg
jle
mov
push
inc
xchg
inc
imul
fs
call
stc
push
pop
arpl
xor
pop
sub
addl
inc
dec
inc
xor
lret
stos
inc
push
jne
lret
mov
stc
lods
lock
adc
cmpsl
and
out
fidivrl
pop
or
sub
dec
cmp
push
sbb
xchg
les
push
mov
push
test
clc
adc
data16
pop
enter
push
movsb
xchg
fiadds
pop
lds
mov
xor
aad
test
or
fisttps
stos
pop
imul
repnz
jecxz
xchg
cmp
jmp
imull
jne
int3
dec
xor
dec
xor
lret
jge
mov
fstps
rcll
jle
sub
mov
cmp
popa
shrb
pop
sub
aad
std
roll
test
or
push
sub
fsubr
jns
lods
or
push
popf
aaa
add
aam
sbb
int3
pop
push
outsl
mov
mov
aad
xchg
sahf
xchg
shlb
scas
jge
in
add
shlb
and
icebp
pop
pop
shll
jnp
fisttpll
inc
sub
lock
push
hlt
loopne
out
lret
cmp
mov
jmp
cmc
cmp
das
in
aaa
ljmp
jae
push
dec
jmp
jns
or
adc
sub
adc
inc
mov
push
dec
rolb
push
jo
popa
jecxz
fwait
pop
mov
outsl
cmp
jne
add
mov
shl
ja
fwait
inc
xor
add
jmp
lahf
push
or
xchg
mov
push
movb
dec
dec
dec
push
sbb
fcmovnb
aam
cmp
xlat
clc
mov
fiadds
cmp
or
subl
jo
movsl
mov
in
ffreep
xor
test
jnp
addr16
mov
pusha
pushf
adc
push
std
dec
lods
stos
sti
push
int
dec
sahf
mov
cs
sub
test
pop
in
sarb
movsl
jbe
imul
test
push
pop
add
sub
cmp
rdmsr
loopne
push
inc
pop
mov
push
scas
outsl
inc
mov
push
ret
or
cmpsb
je
push
cltd
dec
pop
aas
lods
mov
cmpsb
add
add
outsb
xchg
add
lahf
js
jae
mov
xor
in
or
pop
lods
mov
fsubs
loop
cmp
aas
pop
jecxz
mov
mov
pop
lea
cmp
xorl
jno
out
sub
mov
adc
jne
data16
jns
mov
adc
mov
je
jne
dec
inc
push
ret
jmp
jge
jle
jb
dec
ljmp
adc
add
in
sahf
aaa
fisubrl
jge
sbb
lahf
sub
popf
imul
ret
ss
sub
adc
je
jmp
and
ja
pushf
icebp
les
aas
testb
icebp
jo
xchg
lods
sbb
pop
and
fdivrp
ret
pop
lds
pop
incb
adc
pop
fimull
lret
stos
xchg
sub
sbb
leave
pop
sbb
sbb
mov
sub
sahf
cmc
dec
xchg
jo
fisubrl
cmp
cmp
pushf
pop
xor
adc
sbb
lds
mov
mov
sti
mov
cmp
rclb
je
popf
push
jge
xchg
pop
adc
aad
fstl
pop
pop
mov
ret
pusha
cmpsl
pop
cmp
and
or
push
mov
insb
xchg
add
fldcw
push
addl
or
adc
or
icebp
mov
jb
push
out
inc
in
pop
add
test
pop
mov
xchg
push
ljmp
cmpsl
sbb
xchg
fbld
and
repnz
jnp
addr16
xchg
dec
into
loopne
shr
mov
dec
rcrb
lock
xorb
mov
jecxz
inc
xchg
jp
insb
stc
mov
fimuls
dec
pop
scas
int
in
xor
xchg
imul
dec
fsubl
add
inc
sub
cmc
and
mull
pop
dec
stc
xchg
cmc
cli
shrb
xchg
jne
test
xor
dec
mov
xchg
stc
and
pusha
ds
pushl
popa
std
aam
out
sub
shl
or
inc
ret
and
jmp
pop
addr16
mov
addr16
push
je
scas
adc
push
xor
jp
mov
adc
xor
push
or
jecxz
divb
xor
dec
enter
jle
cmpsb
sbb
cli
add
andl
xchg
push
sub
cwtl
inc
cmp
cli
sti
hlt
sub
aam
fldenv
inc
ss
sbb
lds
fisttpll
test
jecxz
mov
pop
in
jg
outsl
dec
hlt
mov
sahf
and
push
rclb
scas
mov
ret
add
push
fincstp
imul
pushf
cmp
dec
shrl
cmp
mov
dec
jg
xor
inc
jmp
cmpsl
inc
fdivl
jbe
sbb
cmp
call
imul
pop
cwtl
cmp
loop
jns
or
jno
jg
mov
cmp
inc
or
cmp
int3
aad
sbb
das
pop
mov
dec
in
inc
jmp
faddl
ret
lcall
shlb
xor
push
jge
dec
xor
xor
inc
fisttpl
xlat
stc
stc
and
xchg
in
lods
and
push
testb
int
sarl
shrb
filds
mov
loopne
add
push
xchg
and
test
dec
jle
jle
roll
sub
sbb
aad
cld
hlt
mov
sub
jne
and
movsb
lcall
daa
mov
sbb
testl
push
sbb
xor
sar
sbb
in
sbb
fs
shrl
popa
cwtl
movsb
hlt
test
test
xor
jp
sbb
fdivl
pop
je
jns
pop
add
inc
roll
ljmp
mov
in
shr
imul
popf
das
pop
pop
mov
fldt
daa
and
xor
popf
lret
es
push
jmp
aam
mov
inc
mov
repnz
mov
popf
sub
in
xchg
rcll
scas
mov
jl
data16
lret
inc
inc
rcrb
cld
ret
dec
mov
popa
lds
dec
push
icebp
pop
xor
xor
mov
das
ja,pt
mov
push
jecxz
das
icebp
jge
jle
mov
cmp
xorb
in
outsb
sar
pushf
push
xchg
leave
mov
adc
push
fsubl
cmpsb
mov
fprem1
push
imul
test
xchg
mov
jns
dec
dec
shrl
sub
sarb
cmpsb
scas
mov
xor
mov
add
std
xor
jp
das
mov
shlb
test
mov
push
negl
into
jbe
rcr
inc
rcll
aam
add
mov
or
arpl
adcb
out
xchg
xorb
sub
push
xchg
es
jl
jne
push
imul
xchg
lret
inc
jno
pop
push
leave
xchg
dec
xchg
inc
sub
ret
aas
lcall
or
and
pop
inc
jge
adc
js
repnz
roll
aam
out
bound
decl
fistl
lods
rcl
adc
nop
adc
mov
in
cltd
cmp
mov
jecxz
leave
in
imul
mov
mov
lods
dec
stos
dec
pop
ss
inc
mov
or
aas
xchg
ss
xchg
xchg
out
imul
pop
pop
insb
push
clc
mov
in
add
clc
andb
or
lods
pop
xor
cmp
inc
mov
mov
cmp
fistpll
mov
nop
jne
into
stos
inc
shrl
cli
push
add
xchg
popf
icebp
ljmp
hlt
cmp
xchg
inc
pop
mov
mov
push
nop
movsl
loopne
sbb
push
repnz
pop
add
les
insb
mov
jl
sub
sub
rolb
test
repnz
test
test
mov
lods
dec
fwait
push
stc
mov
inc
adc
mov
je
outsb
sub
sub
jge
xchg
adc
mov
mov
iret
lock
les
jbe
lods
inc
pop
in
arpl
call
test
push
lock
gs
iret
sub
cmp
pop
xchg
sbb
push
in
cmpsb
push
add
xor
push
add
xor
leave
adc
or
dec
xor
outsl
cs
arpl
pop
lods
out
cmp
pop
dec
bound
or
stc
mov
xchg
les
mov
loop
in
in
or
gs
mov
xor
dec
frstor
enter
mov
rcrb
xor
shrl
or
add
ret
imul
out
dec
mov
dec
push
push
xchg
mov
lods
mov
adc
sub
jle
add
or
push
and
lds
adc
es
hlt
lods
push
insl
lds
sbb
and
cmpsb
pop
les
in
jbe
adc
std
hlt
push
add
jno
scas
sub
mov
scas
jb
xor
lods
inc
cmp
mov
ljmp
cmp
pushl
sub
std
test
cmp
lods
mov
pop
rol
inc
das
xchg
lcall
add
int
push
hlt
mov
test
cmp
in
or
leave
xchg
fists
xchg
fsts
pop
jg
sub
ljmp
pop
mov
add
sub
arpl
rorl
add
mov
je
pop
adc
outsb
adc
cmp
mov
mov
fiadds
call
int
jp
std
lds
mov
mov
cmp
shlb
mov
xchg
pop
fiadds
inc
or
pop
js
test
shr
fcomps
pop
jmp
xor
fidivrl
cmp
push
sub
test
push
jle
sarb
dec
or
inc
ds
lods
xchg
stc
jo
repz
or
push
loopne
fdivl
aaa
mov
fnstenv
xlat
cmp
lods
setge
sbb
scas
mov
loopne
mov
mov
inc
decb
cmp
test
fs
mov
sub
sbb
sub
movsl
xor
sbb
cmp
ret
mov
inc
imul
pop
loope
into
xor
js
xor
add
xor
clc
xchg
push
call
mov
out
push
aad
cmp
add
pop
lods
sahf
mov
xchg
jmp
push
jae
xchg
mov
bound
lea
add
fs
mov
cmpsl
jnp
shrb
or
divb
jo
push
mov
ss
mov
pop
adc
push
xchg
mov
pop
add
aam
xchg
ja
data16
adc
cmp
pop
sub
cmpsl
inc
mov
in
in
dec
cld
lcall
xor
leave
inc
inc
xor
push
rcrl
xlat
xchg
shll
jmp
popf
loop
jge
push
loopne
mov
jbe
dec
push
push
mov
pop
sub
pop
clc
out
jmp
adc
fisubrs
popa
sbb
es
adc
scas
sub
jge
mov
jl
popf
or
aas
push
aam
cs
pop
repnz
sub
fdivrs
cmpsl
sub
inc
bound
lahf
dec
push
push
push
sti
pop
cmp
fisttpll
mov
daa
bound
sbb
push
inc
and
or
fs
insl
inc
nop
adc
fidivrs
dec
aam
jp
hlt
in
call
push
cmpsb
inc
std
or
lahf
dec
cmp
out
push
mov
and
jbe
cmpsl
pusha
and
lahf
or
rcll
lret
test
in
xchg
lods
movsb
mov
bound
pusha
cmp
jg
pop
sbb
or
push
into
sub
jns
push
scas
leave
cs
push
sbb
into
loop
add
mov
hlt
subl
orb
jbe
xor
leave
jb
jge
rcr
dec
cli
xor
cmp
cltd
fdivr
push
adc
sbb
push
mov
cmp
call
stc
dec
dec
inc
movsl
aam
mov
das
test
mov
arpl
xlat
fisttps
out
dec
mov
data16
sahf
into
mov
mov
dec
or
sbb
inc
cli
pop
and
jno
sbb
inc
stc
in
adc
adc
push
push
ljmp
inc
ljmp
sbb
sub
fcomps
fidivrl
mov
lcall
push
jne
movsb
xlat
ffreep
mov
lds
es
push
cmc
popf
xchg
mov
inc
fdiv
into
frstor
mov
movsl
sbb
movsb
setnp
aas
and
dec
push
loop
adc
cwtl
out
roll
mov
fstl
sarb
mov
sub
jns
mov
or
cmpsl
lock
xor
mov
sarl
jle
sbb
ficompl
dec
adc
test
ret
out
adc
pop
stos
inc
out
push
daa
test
mov
pop
lods
repz
push
xor
jb
or
push
sub
jb
in
loopne
dec
lods
cmpsb
push
push
mov
mov
in
cmpb
adc
shll
mov
bound
or
lods
adc
lret
xor
sti
xor
add
and
pop
or
in
iret
insb
jb
std
fidivrs
es
in
in
popa
xchg
movsb
mov
lods
push
inc
jb
pop
repz
test
dec
jno
icebp
pop
sti
mov
cmp
push
inc
jns
mov
movsb
jns
adc
dec
clc
mov
ja
xchg
cmp
fnstsw
pop
loop
arpl
stc
arpl
hlt
sbbb
xchg
cmp
sub
mov
aas
lds
cmp
insl
mov
add
test
dec
xchg
and
test
js
notb
push
insb
sbb
mov
cs
movsb
xchg
and
inc
in
jns
push
pop
cld
mov
jae
test
cmp
jmp
or
lods
mov
xchg
dec
cmp
loop
mov
pop
jmp
mov
inc
ret
lret
outsl
cmc
push
mov
xchg
sub
enter
mov
stc
daa
loope
or
add
jbe
jo
mov
repz
jb
mov
mov
cmp
lcall
sub
dec
or
mov
cmp
sub
adc
dec
xchg
cli
push
nop
lock
jo
push
cmc
lods
jmp
icebp
nop
push
or
shlb
jnp
inc
or
add
js
cmp
in
aas
inc
jnp
call
in
mov
fisubrs
shlb
xchg
cltd
jle
ljmp
std
dec
pop
int3
mov
lea
sti
adc
mov
mov
sbb
fcmovb
sub
sbb
xchg
in
sarl
insb
iret
sub
mov
ljmp
shlb
mov
adc
popf
sbb
mov
xchg
xor
or
jne
pop
or
dec
push
fsubrs
sti
lea
out
push
add
jp
jle
adc
jo
add
fbstp
ja
mov
jp
pop
add
aad
inc
inc
mov
je
push
jle
pop
aad
push
aaa
and
call
jmp
lret
sbb
inc
cmp
ret
push
xor
xchg
or
xchg
dec
jecxz
std
push
shrl
stc
xor
sbb
xor
arpl
in
pop
dec
aaa
and
adc
arpl
inc
mov
inc
inc
mov
icebp
mov
jne
rcrb
and
xchg
xchg
test
mov
mov
hlt
mov
testb
sub
jge
in
pusha
dec
mov
mov
push
inc
sub
or
xor
push
mov
sbb
scas
int3
push
insl
mov
nop
push
lds
jl
inc
sbb
and
scas
jne
hlt
jno
adc
inc
jle
outsb
and
sbb
push
sbb
dec
dec
jle
add
jb
loopne
addl
or
in
outsb
psubq
pop
xor
sub
adc
mov
cli
popa
pop
out
sahf
jb
popa
add
xor
jne
cs
outsb
adc
mov
shl
cld
sub
mov
fs
jnp
fiaddl
xchg
scas
jno
insl
ficomps
push
sub
mov
pop
xchg
mov
addl
sbb
push
subb
int3
jecxz
pop
les
fildll
push
les
ret
outsl
hlt
movsl
and
jne
sub
lods
test
dec
pop
mov
mov
jbe
xchg
mov
or
cmp
and
mov
outsb
xchg
sarb
aas
jmp
cwtl
add
stos
lcall
lock
out
addr16
push
or
dec
pop
sti
fs
pop
lods
mov
or
insl
add
mov
out
inc
mov
cli
test
dec
insb
addr16
sub
mov
xchg
mov
mov
leave
lds
add
cmp
jge
pop
rorb
inc
sarb
mov
ret
xorl
pop
push
sbb
cmp
aas
mov
shl
push
dec
cmp
aaa
dec
or
push
sub
cmc
bound
and
inc
aaa
into
inc
mov
mov
rcll
pop
xor
sub
push
mov
pop
xor
push
imul
insb
hlt
popa
iret
sub
jns
insb
dec
mov
xchg
sub
mov
mov
mov
xchg
int3
inc
adc
ret
nop
popf
call
ss
jecxz
sub
imul
sbb
fnstenv
pop
push
orb
or
fincstp
fdivl
das
imul
dec
shlb
das
rol
stos
jmp
cmp
aas
mov
jge
jne
cwtl
mov
or
mov
or
mov
pushf
add
sbbl
inc
inc
xchg
pop
fcmovnb
and
icebp
clc
lods
int
fyl2xp1
roll
inc
ljmp
js
pop
iret
adc
inc
or
or
mov
and
jge
inc
push
jge
addr16
sarb
sub
insl
outsl
add
lcall
sub
call
in
sti
shrb
mov
jle
and
nop
in
and
cmp
add
add
lods
pop
fstpt
or
jle
pop
cmpsl
mov
pop
iret
dec
lret
das
cmpsb
and
jp
or
loop
leave
xchg
sbb
cltd
stos
dec
sub
movsb
inc
outsl
dec
dec
pop
cmp
sbb
fsubl
xor
mov
mov
test
insl
mov
mov
mov
xchg
cli
push
test
stc
mov
mov
xor
dec
push
inc
loopne
popf
cmp
xchg
insl
push
lret
loop
jno
pop
push
xchg
mov
pop
dec
cld
pushf
lea
inc
pop
inc
sbb
and
sarb
mov
fsubrl
pop
lcall
pop
mov
icebp
jge
shl
sub
mov
lds
xchg
orl
mov
hlt
les
sbb
call
ja
sbb
dec
sub
xchg
xchg
mov
aaa
pop
aas
cwtl
add
inc
jg
push
mov
pop
mov
xor
mov
test
push
mov
mov
pop
pop
fdivl
clc
or
xor
fwait
push
ret
push
repnz
cwtl
and
push
push
add
aad
push
xor
fidivrl
mov
imul
push
cmp
mov
push
int3
incb
or
xchg
and
insb
mov
inc
lods
repnz
push
jge
cmpsb
and
cmc
nop
pop
dec
dec
addr16
lods
cwtl
arpl
cmpl
inc
div
xchg
js
mov
fwait
outsb
ss
cmp
inc
jecxz
pop
add
inc
dec
insb
popa
xlat
stc
mov
into
jnp
sar
jecxz
or
sbbb
mov
loop
enter
leave
jno
arpl
push
lods
mov
andl
imul
leave
ss
pop
pop
test
rolb
mov
mov
or
fwait
sub
pop
jnp
xchg
call
loop
daa
int
sahf
inc
jl
fcomp
sbb
sbb
imul
sti
add
mov
aas
cmp
out
or
mov
jbe
xor
sarl
out
xchg
stos
xor
push
push
sbb
mov
popf
xchg
fstps
addr16
fwait
adc
ret
mov
xchg
call
mov
arpl
add
push
in
cmp
sti
fsubl
std
jl
orl
lcall
xchg
mov
jae
add
add
mov
jae
dec
in
cwtl
inc
mov
bound
js
or
jp
jmp
clc
lods
adc
js
fs
outsl
inc
in
nop
pop
mov
dec
push
xchg
xchg
and
jnp
loope
pop
adc
add
pop
mov
inc
es
add
xor
mov
inc
mov
inc
dec
lods
negl
in
adc
jge
push
aaa
and
jmp
inc
adc
cmp
jmp
imul
and
stos
inc
or
fbld
je
sbb
das
test
les
orb
or
pop
das
cmpsl
popf
sahf
movsl
aaa
jbe
rclb
sbb
lcall
mov
dec
mov
cmpsl
shrb
sti
cmp
es
dec
add
lcall
inc
push
lods
ret
decb
xchg
and
popf
mov
imul
data16
push
cmpsl
dec
mov
std
pop
xor
jo
inc
repnz
mov
mov
or
sbb
shl
movsb
dec
lods
cmp
dec
sbb
mov
loope
idiv
mov
ss
adc
mov
call
or
push
movsb
stos
lods
mov
repnz
pop
mov
push
inc
jle
push
jmp
ljmp
jnp
fidivrs
rcrl
addb
aam
lret
cmp
cli
lcall
sbb
pop
in
sbb
jbe
cs
mov
inc
mov
daa
loopne
mov
adc
int
sarb
sarl
lods
stos
add
in
xchg
push
sub
ret
addr16
fimuls
or
mov
movsl
push
insl
jl
mov
shrb
or
mov
pop
imul
repnz
jp
ret
insl
sub
jb
sub
xchg
movsl
adc
stc
adc
inc
loope
adc
push
cmp
cmpsl
or
nop
mov
mov
js
jns
jns
in
prefetcht2
pop
fcmovb
jb
data16
inc
aad
ret
pushf
inc
xchg
adc
push
jg
sar
pushl
ljmp
mov
mov
gs
insl
loopne
lea
dec
out
inc
test
shlb
mov
shll
mov
sbb
add
mov
out
cmp
test
mov
mov
test
in
bnd
inc
pop
repnz
cld
jecxz
add
sbb
sbb
or
xchg
les
fdivs
daa
data16
push
push
lret
out
sti
mov
xchg
xchg
mov
popf
ss
sbb
or
hlt
push
mov
lcall
bound
and
pop
adc
in
ds
out
adcl
adc
mov
arpl
jl
cmp
and
push
mov
mov
mov
hlt
and
cld
mov
insb
or
sti
imul
pop
jo
cli
rolb
dec
push
sbb
xchg
call
frstor
xor
xchg
orb
fcmovne
push
pusha
leave
flds
mov
inc
lock
stos
inc
pop
aad
iret
aas
sbb
repnz
and
jnp
sbbl
mov
push
push
push
addr16
dec
push
sbb
mov
or
mov
stc
lods
pop
mov
mov
jmp
mov
xor
arpl
mov
stos
inc
lret
lahf
lock
sbb
xchg
cmp
xchg
adc
xchg
mov
and
push
or
shll
adcl
rcl
in
cmp
mov
push
pusha
add
call
sub
adc
xlat
mov
ss
repz
enter
adc
inc
xlat
sbb
xchg
pop
sub
mov
and
stc
mov
ss
hlt
lret
int
pop
mov
lods
or
inc
adc
sub
pusha
xchg
adc
or
cltd
inc
jae
adc
add
jo
push
cmp
stos
nop
stos
rcll
xor
lret
test
push
inc
add
sbb
cs
out
shlb
scas
jae
pop
imul
jge
sti
arpl
sub
mov
fldenv
inc
xor
push
and
rorl
or
out
sbb
cmpsl
xchg
cltd
test
push
xor
dec
ss
lret
pop
inc
aad
xchg
lods
addr16
aas
cmp
in
sti
mov
test
fcoms
sbb
or
into
scas
lret
leave
jo
in
jg
rorl
rcrb
jb
sbb
jo
cmp
and
push
mov
jmp
xchg
into
dec
inc
mov
mov
inc
fst
jae
pop
test
add
sub
lcall
sub
cmpsb
pop
test
mov
mov
lcall
int3
push
sub
dec
andb
push
cld
in
or
adc
imul
in
sub
or
inc
mov
test
ss
aam
xchg
scas
fwait
lahf
mov
lock
fdivs
dec
addr16
orb
sbb
cmpl
lret
xchg
sub
add
shll
inc
div
movsb
inc
xchg
fsub
mov
popa
lea
movsb
mov
mov
push
dec
test
push
jmp
pusha
xchg
push
arpl
inc
int3
pop
dec
hlt
mov
mov
insb
stos
hlt
add
aam
xorb
inc
and
pop
push
jnp
cli
sbb
ja
adc
rcll
imul
or
push
mov
cmpl
sahf
out
xchg
test
dec
jge
pop
sahf
add
mov
outsl
adc
xchg
lsl
jge
mov
push
and
in
call
movsb
adc
leave
mov
xchg
inc
and
dec
pop
jg
jp
sub
fcomps
fnop
jmp
cwtl
sbb
sahf
xchg
sub
add
aam
cltd
cmp
inc
loope
xchg
push
inc
stos
mov
lahf
adc
outsb
mov
sbb
stc
lea
xchg
mov
cli
iret
mov
pushf
adc
sbb
data16
xchg
nop
sub
xor
bound
icebp
and
pop
pop
fdivrs
push
xor
pop
fsubrs
or
mov
xchg
dec
cmp
aam
rcpps
outsl
mov
loop
fucomi
jbe
movups
cmpsb
xor
push
xchg
jae
xchg
sub
aas
aaa
iret
int
xchg
es
mov
lahf
rcll
push
pop
mov
shl
mov
cmp
jecxz
hlt
push
arpl
xor
push
jbe
sub
in
xchg
inc
repnz
pop
sbb
mov
xchg
mov
scas
aam
jle
sub
xor
cmpsl
roll
cld
cli
cmp
js
pusha
adc
stos
fs
push
jne
fldenv
lret
repz
shrl
lret
test
lods
jno
das
lods
sbb
push
mov
mov
je
mov
or
fistps
jp
es
adc
into
insl
mov
pop
pop
mov
das
and
xchg
adc
mov
sub
mov
adcb
dec
dec
lahf
lret
adc
pop
xchg
lock
xchg
push
addb
push
lds
dec
mov
scas
mov
and
out
cmpl
jl
ss
ja
add
faddp
out
sbb
pop
ficoms
xor
xor
arpl
mov
lods
iret
pop
ret
lods
add
push
jecxz
lock
sarb
mov
inc
orl
push
loop
int
clc
gs
xorl
pop
add
jb
push
add
jmp
mov
out
enter
loopne
shlb
xchg
dec
mov
mov
mov
lret
lock
adc
gs
call
lock
pusha
xchg
push
fdivr
insl
fmull
movl
dec
push
pop
xchg
clc
faddl
jns
mov
out
cmp
and
cmc
dec
mov
ret
fistps
jmp
jo
push
pop
push
mov
rclb
popf
jg
xlat
scas
xorb
in
inc
out
push
push
sub
rcrl
mov
mov
fcmovne
in
cmp
push
lret
push
stos
or
cmp
fs
cmp
aaa
out
dec
hlt
adc
mov
or
andl
jbe
jp
jne
loopne
scas
sbb
cltd
cmpsl
incb
loope
daa
and
test
in
ljmp
xorb
data16
sub
test
adc
add
ficoms
ret
mov
imul
mov
inc
inc
inc
ficompl
add
and
roll
adc
cmpsl
wbinvd
xor
xlat
xchg
sub
movsb
sbb
enter
lea
mov
mov
cmp
jb
sbb
mov
scas
mov
sahf
aaa
arpl
sub
pop
adc
jmp
mov
add
jle
mov
mov
orl
shll
xchg
dec
pop
cmc
shll
sbb
mov
mov
outsl
inc
push
fmuls
int
pop
ds
shll
gs
mov
mov
push
ss
cmpb
adc
cmp
mov
fs
outsb
jne
mov
inc
mov
and
mov
or
xchg
inc
sub
ficoms
adc
jb
push
pop
cmp
insl
popf
rcll
mov
subl
mov
jl
iret
xlat
scas
in
mov
xor
mov
jmp
push
mov
mov
mov
int
ss
dec
jl
mov
inc
call
mov
cmp
cmc
shll
test
lods
pop
cld
ljmp
mov
mov
pusha
insb
xlat
inc
enter
imul
dec
fstpt
pushf
lods
loop
js
push
cld
lea
arpl
int
aam
xor
or
xor
scas
cli
mov
pop
mov
loop
dec
movsw
mov
mov
into
test
and
mov
mov
imul
jmp
rorb
orl
outsb
add
or
xchg
pop
insb
lret
inc
arpl
das
inc
inc
ret
pop
xchg
rol
adc
pop
xchg
or
imul
mov
push
sahf
mov
push
fsts
jle
and
shrb
fiaddl
or
and
dec
scas
out
adc
js
testb
fnstcw
mov
insb
mov
cmovne
push
bound
xchg
push
lds
out
mov
mov
mov
sub
xchg
add
test
pushw
mov
popa
xchg
mov
aas
pop
cmp
sahf
rorb
pop
icebp
and
imul
adc
mov
cmp
or
push
loop
inc
push
out
sbb
pushf
js
lret
xchg
add
js
inc
cmpsl
push
or
pop
fstps
and
cli
and
or
fadd
stos
fidivrl
insb
xchg
cmp
test
mov
xchg
mov
loope
push
add
je
or
sarl
xchg
cmp
jnp
sbb
lods
ret
sub
sti
mov
add
mov
mov
ja
int3
test
shl
jnp
outsl
repz
mov
pop
es
inc
pop
iret
cmp
out
mov
mov
push
ljmp
fstl
insb
ja
fnstenv
fs
mov
insb
aad
aas
mov
icebp
mov
call
sbb
outsl
int
dec
mov
or
insl
aam
inc
inc
lds
loope
aaa
add
adc
push
mov
test
out
inc
outsl
movsl
xchg
mov
test
cmpsb
dec
xlat
dec
xchg
out
enter
pop
in
data16
jae
inc
fistl
sub
sbb
es
lods
inc
popf
jle
mov
xor
jle
sahf
push
mov
dec
pop
loope
sbb
jbe
test
test
jo
push
cmpsb
mov
shr
inc
xor
cmp
xor
insl
push
xor
mov
fstpt
mov
mov
push
arpl
push
mov
push
jno
cs
lcall
cmp
les
cwtl
loopne
push
push
stc
add
adc
dec
out
mov
xor
jns
adc
mov
add
ja
pop
mov
inc
das
in
nop
sbb
pop
pusha
incl
hlt
xbegin
cmp
mov
leave
jmp
adc
daa
sahf
jp
mov
adc
mov
in
test
xor
shr
inc
pop
sbb
imul
cmp
xor
loopne
out
int3
jnp
cmp
inc
rorl
and
pop
push
ret
pop
out
inc
xchg
dec
adc
xor
daa
mov
inc
mov
dec
ficoms
jmp
mov
adc
lds
and
dec
jecxz
fnstsw
loop
mul
leave
dec
rclb
lds
jle
pop
mov
pop
lret
pop
adc
repnz
mov
ret
idivb
jg
in
ret
adcb
fsts
lods
or
cmpsl
imul
or
inc
sarb
lret
xchg
daa
lods
xchg
sub
mov
pop
dec
sbb
loope
push
or
add
lcallw
shrb
inc
ret
testl
or
sbbb
sub
push
out
outsl
loopne
fisubrs
and
imul
test
mov
mov
fwait
mov
int
test
jle
dec
test
cld
lahf
lds
mulb
aad
insb
std
add
dec
lods
aam
adc
inc
loopne
je
imul
repnz
jbe
cld
mov
dec
mov
or
push
xor
leave
cmc
retw
fists
dec
rclb
mov
fstl
sbb
push
mov
push
lea
jnp
mov
mov
inc
loopne
push
jp
add
rcr
adc
sbb
and
ret
mov
mov
mov
lret
lock
xor
push
or
push
jg
outsb
cmp
rcrb
ret
jbe
pop
inc
popf
scas
mulb
andb
push
fldenv
pop
mov
cmp
mov
jecxz
mov
dec
ja
mov
and
xchg
aaa
mov
cmp
xor
add
mov
mov
sbb
mov
mov
pop
and
insl
aam
inc
fadd
push
pushf
cmpsl
jns
ret
fdivs
xlat
sbb
stc
jg
add
in
sbbb
scas
stos
cs
ret
sbb
and
into
mov
es
std
jmp
ficoms
test
sahf
jbe
jbe
cmpsb
sbb
lods
aaa
pop
jmp
stos
cltd
hlt
sub
movsb
and
les
xor
ret
mov
in
cmp
pop
sub
push
push
and
or
stos
movsb
repz
fistps
inc
jge
dec
gs
push
mov
push
inc
daa
stos
mov
lds
rcrl
and
and
mull
pop
push
int3
lock
mov
ret
adc
push
push
jl
outsl
repz
les
xchg
out
scas
mov
jecxz
mov
rclb
es
scas
in
iret
mov
andl
nop
adc
and
push
mov
or
ljmp
mov
jmp
push
je
pop
mov
out
ljmp
xchg
jp
aas
cmp
loop
psubb
xchg
hlt
add
push
out
xchg
fsubrl
push
insb
stos
cmc
setp
loop
out
movsl
mov
lret
jge
push
jo
pop
dec
ficoms
pop
dec
jbe
out
adc
sub
xorl
mov
and
or
les
dec
in
call
xchg
sub
lock
inc
out
mov
mov
sub
jle
lods
lahf
adc
pop
fsubl
cltd
js,pt
in
or
xchg
sbb
mov
ret
xchg
and
pushf
lock
sub
xor
in
ljmp
arpl
and
syscall
jo
jl
mov
into
add
jge
in
mov
sti
push
gs
repz
xor
imul
in
loop
mov
jp
mov
movsl
add
dec
test
sub
xor
mov
pop
inc
adc
jae
pop
fsubrl
scas
andb
cmp
shr
mov
rcll
pop
jp
shll
inc
xor
push
pop
mov
cmc
dec
pop
insl
das
push
and
mov
cmp
push
add
stos
push
jl
sbb
mov
lods
jl
pop
push
jo
pop
mov
adc
ret
movl
imull
daa
in
inc
cli
inc
sbb
adc
scas
mov
les
sbb
xchg
daa
jl
sbb
jne
enter
inc
inc
and
xor
ds
out
and
add
add
shll
rolb
xchg
xor
push
dec
and
push
movsb
jg
jae
sbb
push
inc
hlt
ja
push
shr
ret
insb
mov
into
js
pop
popa
pop
scas
dec
pop
xchg
roll
dec
pop
sbb
push
fldcw
in
dec
int3
in
movsl
xchg
aad
shr
mov
cs
or
popa
mov
popl
daa
test
push
lret
fiaddl
pop
or
lods
jnp
push
nop
in
sahf
push
and
sub
inc
addr16
negl
or
outsb
lret
push
pop
xor
dec
inc
jb
test
pop
jne
add
fwait
xlat
jecxz
ja
lahf
rcrb
sti
movsl
adc
push
out
cld
test
inc
testb
sub
call
ret
mov
jle
push
in
je
js
hlt
mov
sarl
adcl
mov
mov
fnstsw
stos
jmp
jnp
cmc
xchg
pop
out
fwait
sahf
fidivl
nop
pop
pop
sub
mov
sub
fmul
test
shl
into
push
push
push
aas
mov
adc
push
loop
fwait
mov
daa
imul
mov
jmp
jbe
and
divl
subl
or
cld
es
jle
mov
leave
sbb
cli
popa
pop
add
mov
mov
xor
test
add
lods
dec
loopne
push
leave
cmp
mov
mov
addl
inc
aas
movsb
das
in
and
or
mov
faddl
sub
cmpsl
inc
cmpsb
mov
pushf
inc
ret
cmp
andb
xlat
aaa
fsubs
mov
call
xor
lds
mov
inc
arpl
lods
es
mov
cmp
insb
mov
cmpsl
cmp
int
aam
dec
pop
adc
fsts
xor
jns
pop
mov
mov
adc
dec
ret
mov
sbbb
add
xchg
adc
clc
dec
arpl
sub
fidivrs
inc
mov
sub
imul
je
mov
jp
sbb
inc
xor
addr16
pop
add
mov
xor
mov
mov
xchg
je
std
inc
inc
decl
stos
lcall
sub
cmpsl
mov
fbstp
push
int
and
mov
mov
mov
dec
mov
pushf
push
and
cmpsl
push
jmp
sub
pop
jmp
lods
inc
loope
inc
mov
jbe
cmpsb
lock
sub
inc
stc
mov
sub
dec
add
sub
dec
stc
mov
test
cmpl
ljmp
inc
and
sbb
cwtl
pushf
in
and
jmp
loope
inc
outsb
cld
shll
rolb
out
mov
jecxz
test
imul
mov
fwait
dec
inc
insl
pop
pushf
fnstsw
aaa
mul
ja
and
cwtl
jmp
inc
mov
cmp
mov
and
ret
scas
or
cli
cld
push
rclb
in
stc
lcall
xchg
push
xchg
fisubrs
in
inc
lea
loop
jbe
mov
sahf
inc
dec
mov
sub
loopne
insl
in
daa
cmp
negl
mov
ret
cli
pop
add
xlat
sub
mov
scas
sub
push
mov
movsl
insl
test
lcall
shrl
bound
lods
push
jno
jge
int3
repnz
push
pop
outsl
aaa
aaa
or
mov
rcll
loopne
mov
test
mov
rcrl
sub
and
or
test
rcl
and
pop
push
imul
mov
shl
ret
mov
dec
mov
sarb
mov
push
aad
push
mov
lret
inc
xor
stc
cmpsb
jno
sbb
pop
ret
ret
xchg
cmpsb
adc
insl
push
lock
sbb
pop
lcall
xor
jg
and
imul
int3
mov
add
in
dec
push
sbb
addr16
mov
xchg
jg
cmp
and
xchg
inc
test
adc
loopne
mov
inc
mull
div
and
repnz
leavew
pop
adc
xor
in
inc
repnz
sbb
dec
fidivs
push
daa
mov
push
xor
push
fcmovu
mov
pusha
inc
jbe
mov
mov
mov
push
aam
or
xor
xor
aad
in
push
or
jno
dec
cmpsb
pop
lret
loopne
xchg
loope
notb
mov
inc
jae
ret
nop
mov
jp
push
shll
and
push
js
cwtl
cmp
push
stc
xor
pusha
mov
pusha
bound
addl
fcoms
cmpsl
nop
dec
cmpsb
xor
rolb
mov
data16
jge
pop
cld
fs
scas
inc
fcmovne
cmp
test
add
adc
test
inc
sub
scas
into
nop
push
daa
sbb
lret
pop
ret
pop
bound
push
mov
pop
mov
fidivl
frstor
lcall
and
test
mov
loop
sub
mov
mov
cmp
repz
jb
out
imulb
sahf
shr
mov
mov
pop
daa
ffree
sti
sub
mov
adc
int3
cwtl
fsubl
inc
or
pop
ss
test
dec
push
adc
fwait
xchg
popf
adc
out
ret
daa
outsl
or
repz
mov
outsb
mov
push
mov
mov
jle
cwtl
sbb
mov
inc
icebp
cmp
dec
fistl
stos
xchg
push
add
fdivrs
jg
ljmp
icebp
int
bound
push
aaa
mov
jb
pop
daa
test
adc
jecxz
jne
push
sbb
insb
pop
fstl
xchg
add
cwtl
icebp
sbb
loope
leave
bound
add
xor
testb
mov
scas
cli
adc
adc
loop
push
or
or
ret
inc
sbb
test
jo
insb
xchg
cmp
xor
pushf
mov
insb
fwait
outsl
adc
out
es
mov
mov
divb
aaa
daa
adc
shll
mov
cs
jb
mov
push
inc
inc
out
sub
lods
cmp
inc
fisttpll
sbb
and
fcomps
jp
mov
movsb
lds
test
dec
add
popf
adc
cmpsb
addr16
cs
aad
push
and
or
or
jl
xor
out
sub
mov
xor
inc
sbb
add
pop
mov
cmc
add
dec
cmc
lret
sub
rcr
imul
mov
mov
pop
inc
mov
stos
lds
mov
out
popa
lods
jecxz
mov
and
lods
call
inc
lds
in
in
outsb
sbb
inc
jo
lods
je
dec
jne
mov
in
add
ds
leave
fimuls
push
loopne
or
arpl
into
jne
rclb
loopne
dec
and
push
movsl
pop
cmpsb
cmp
shrl
add
sbb
imul
fsubs
out
dec
mov
jns
cwtl
inc
adc
pop
mov
xchg
fwait
cmp
in
cmpsb
mov
loop
cmp
jecxz
in
mov
mov
mov
xor
jno
xlat
stos
jns
jp
rorl
iret
ljmp
aaa
xor
cmpsb
imul
add
add
stc
inc
mov
pop
or
aas
dec
mov
aam
sub
adc
cmp
cmc
and
jle
inc
mov
lds
mov
pop
scas
in
les
std
cmpsl
xchg
add
xchg
xor
in
imul
jg
mov
mov
fsts
mov
and
test
pop
and
aam
push
ficoml
insb
les
dec
sarb
int
test
dec
or
pusha
pop
das
ja
pop
cmp
mov
popf
xchg
loopne
jg
cli
cmpsl
or
mov
ja
jg,pn
std
mov
sahf
mov
adc
lds
leave
mov
mov
ftst
push
cmc
cmp
xlat
mov
and
sub
xor
cmp
outsl
xor
pop
pop
pop
mov
inc
es
mov
jle
and
and
push
adc
fdivl
sub
add
ja
int
mov
pop
or
mov
mov
cmp
sub
sub
inc
pop
fdivs
jnp
push
adc
xor
addr16
in
cmc
call
adc
arpl
ss
mov
ret
jnp
mov
cmp
ds
popa
aas
and
xor
je
iret
ficomps
mov
cmpsb
mov
push
mov
jg
xchg
outsl
sbb
int3
push
jle
add
push
or
xor
push
addr16
mov
push
adc
test
inc
dec
add
lret
mov
lret
inc
faddl
data16
xchg
adc
dec
sti
pop
pop
in
pop
out
in
jle
aas
in
xchg
repz
loopne
js
cmpsl
ret
pop
or
xchg
mov
orb
lret
orb
or
pushf
inc
js
inc
fcomip
lea
rcrl
mov
pushw
clc
insb
ret
inc
lods
pop
jne
mov
leave
cmpsl
jg
ret
sub
pusha
sbb
sbb
divl
xlat
jae
inc
outsl
out
fcomps
mov
or
sbb
mov
fstpt
fmuls
imul
jle
out
push
cli
push
inc
push
jb
dec
sbb
adc
in
mov
sti
xchg
out
xchg
mov
mov
scas
adc
frstor
insb
jmp
subl
mov
lahf
std
sahf
fs
hlt
or
jg
sub
jno
out
add
adc
scas
mov
fs
ret
les
fld
inc
xchg
repz
lock
dec
pop
sbb
repz
cwtl
xorl
mov
lods
cmp
and
mov
xor
rol
lods
push
popa
fucom
rcll
sub
lods
insb
outsl
lret
cmp
sbb
rol
lret
and
pop
and
loope
lock
pop
mov
imul
xor
or
xor
lock
rcl
push
push
or
repnz
incb
lahf
out
bound
out
jmp
lret
xchg
mov
repnz
add
pop
mulb
xchg
cmp
cmpsb
cmp
xchg
sub
int3
je
js
mov
dec
leave
xlat
inc
adc
mov
ret
xor
rcrb
pop
xor
adc
cmpsl
stos
dec
or
fwait
lret
test
outsl
inc
movd
pop
pop
aaa
mov
jbe
loopne
popf
imul
adc
sbb
inc
xchg
push
inc
sbb
fdivrl
mov
adc
fnstsw
mov
xchg
std
sub
pusha
jnp
xchg
cltd
pop
inc
push
loope
movsl
sbb
jp
mov
sbbb
jae
lods
or
jmp
mov
jecxz
out
out
jge
loop
xor
push
add
mov
icebp
lret
lods
lret
pop
lcall
adc
sti
fistpll
jb
sub
jo
repz
adc
xchg
jle
mov
cmp
int3
popf
or
adcb
xor
popl
jle
xor
cmpsl
and
lahf
sub
adc
cli
out
jle
xorl
inc
adc
mov
jecxz
in
mov
mov
push
mov
adc
cmp
fidivrs
jo
mov
ss
jge
in
mov
jae
push
dec
mov
dec
cs
push
xchg
test
xchg
xor
adc
out
loop
fsubs
inc
scas
adcb
jg
out
sti
testb
jbe
xor
jmp
or
adc
test
jp
xor
xor
test
xchg
pop
xor
sbb
aad
adc
lds
ss
pop
arpl
arpl
leave
push
subl
xchg
cli
xchg
js
bswap
ret
arpl
sbb
or
fprem1
xor
xchg
popf
nop
pop
push
and
imul
pop
xor
je
jg
fldcw
fisubrl
mov
es
jmp
sub
mov
stc
ret
roll
imull
mov
push
addr16
out
adc
insb
fcoml
test
clc
scas
pushf
adc
rcrb
mov
add
jecxz
xchg
jecxz
dec
vpmacswd
rolb
int
imul
jnp
xchg
jle
adc
sti
xchg
dec
jns
mov
dec
cs
lret
xchg
test
sbb
push
jp
adc
test
movsb
cmpsb
or
cmp
sub
mov
cmpsb
mov
xchg
insb
mov
adc
or
push
in
scas
sti
jbe
into
test
cmp
in
add
sbb
fldenv
mov
pop
sub
pusha
push
pop
adc
mov
iret
pop
jo
inc
or
inc
scas
movsl
lods
int3
popa
aaa
xor
into
fs
push
jns
xchg
or
cs
test
test
or
loope
daa
push
sub
lods
mov
out
mov
test
mov
sbbl
mov
das
enter
pop
mov
in
imul
sbb
cwtl
negl
mov
jg
pop
repz
lahf
push
out
push
xchg
xor
adc
mov
xchg
mov
lods
jg
fisubrs
cmp
outsb
jns
or
xchg
adc
lea
dec
test
das
cmp
loop
loope
lock
push
cmp
std
or
mov
and
inc
inc
dec
xor
pop
std
test
lea
pusha
fildl
add
aad
push
mov
cmpsb
shll
clc
and
pushf
scas
jnp
aas
push
or
jae
and
mov
jecxz
jae
fsubrl
mov
mov
subb
mov
sbb
and
je
and
in
sub
or
out
inc
cltd
mov
adc
cmc
inc
mov
stc
mov
pushf
or
leave
push
in
xchg
cwtl
dec
cmp
dec
call
fs
lea
mov
sub
jmp
jmp
xor
dec
add
mov
pop
and
jle
stc
dec
and
jnp
insb
stos
mov
jo
out
mul
mov
out
jns
repnz
icebp
cmpsl
adc
dec
add
xchg
lock
js
add
jnp
aam
sub
addr16
stos
movsb
andl
add
fwait
mov
adc
pop
out
sahf
icebp
jbe
jne
popa
mov
movsl
bound
cmp
popf
pusha
cwtl
xlat
jno
push
ret
push
xlat
jmp
pushf
les
testb
scas
or
lahf
int3
xor
cmp
mov
sbb
push
imul
fdivrl
sub
imul
in
addr16
je
sub
dec
push
out
push
daa
ss
cmpsl
sbb
repnz
cmp
jo
arpl
fs
pop
inc
mov
rclb
inc
into
les
mov
xchg
lods
cmp
adc
pop
sti
imul
push
imul
adc
mov
mov
test
fucom
das
cmpsl
cmpsb
lods
cmpsb
int3
adc
stos
lds
or
dec
cmp
cmc
in
stc
mov
enterw
movsl
jge
xchg
jns
adc
sbb
imul
loop
sub
xor
xor
aaa
pop
add
and
add
fnstcw
cwtl
cs
stos
fisubl
test
hlt
aam
inc
into
sub
subb
std
cmp
fstl
sti
push
push
xchg
negb
out
push
and
cld
movsb
adcl
pop
mov
sub
mov
push
pushf
push
in
loope
mov
push
dec
xchg
sbb
in
push
xchg
dec
push
in
or
shlb
and
mov
negl
gs
dec
mov
cmpsb
sub
or
adc
and
adc
rcl
or
pop
add
push
mov
jmp
jbe
in
cli
jecxz
std
cmpsl
testb
add
inc
inc
sub
dec
dec
dec
cmp
jnp
pop
aam
in
dec
ljmp
push
scas
mov
add
movsb
shll
mov
fwait
adc
int
add
jge
sti
sub
xor
test
and
dec
fbstp
xchg
xchg
pop
xlat
insb
or
orl
mov
push
jle
outsb
xor
inc
sbb
popa
pop
inc
notb
test
ret
sbb
mov
dec
mov
sbbb
ret
add
subl
xchg
in
sub
jecxz
imul
int3
insb
and
push
jo
sub
xbegin
ret
mov
in
fldcw
mov
jmp
sbb
adc
mov
xchg
xor
cmpsl
inc
adcl
jmp
addr16
in
fistpl
mov
xchg
xchg
das
jmp
mov
in
in
ficompl
in
pop
inc
inc
or
xlat
push
pop
repz
pop
push
ss
sbb
loope
cmp
int
cmp
xchg
nop
mov
mov
push
jp
or
leave
in
and
aas
jecxz
sahf
mov
imul
out
sub
ss
jmp
test
cmp
loopne
leave
adc
call
lret
daa
inc
mov
or
add
sub
push
clc
lods
fmul
push
xchg
fwait
dec
jnp
and
cwtl
je
inc
stos
or
mov
pop
mov
and
adc
out
lock
rcrb
sub
add
fcmovb
in
in
adc
jl
cwtl
push
int3
iret
mov
mov
pop
fsubs
rcrb
cwtl
movsl
mov
pop
push
push
je
push
cwtl
iret
dec
arpl
push
pop
push
mov
gs
pop
stos
jp
cld
imul
ret
test
iret
aaa
stc
jge
or
pushf
stc
or
scas
iret
inc
and
xchg
js
fsubrl
cwtl
mov
jno
dec
lret
jo
mov
pusha
outsb
int
push
sub
add
sahf
bound
mov
popa
call
mov
lock
push
jecxz
dec
dec
sub
dec
shr
inc
lahf
mov
push
lds
fdivrl
daa
inc
pusha
leave
mov
lea
sti
add
xchg
jmp
das
mov
mov
fisubs
int3
lock
mov
rol
jo
mov
popf
jne
in
sub
outsb
pop
shlb
and
shr
inc
sub
nop
lret
xchg
roll
and
es
fstl
mov
fstpl
std
shll
pop
je
inc
mov
ja
subb
sbb
iret
mov
and
sbb
add
insb
push
in
jl
scas
mov
lods
xchg
cmc
mov
out
in
add
es
jle
cmp
ljmp
push
jbe
cltd
inc
imul
mov
cmpsb
or
fbld
push
mov
cwtl
dec
cmpsb
sbb
sti
icebp
or
lcall
adc
mov
lods
add
mov
mov
and
das
push
push
es
pop
sub
ds
cld
push
xor
lock
sub
mov
repz
jmp
pop
punpckldq
pop
fadds
sub
jne
push
push
pop
xor
and
das
sub
cltd
xchg
fidivrl
jno
mov
cmp
mov
adc
pop
xor
in
stos
lahf
fsubrl
sub
add
leave
test
test
sahf
in
sti
test
xchg
icebp
jae
shll
mov
xor
push
dec
imul
xchg
and
jmp
bound
pop
sbb
xchg
ja
add
xchg
sub
push
int3
jmp
jle
mov
xlat
pushf
pushf
rcr
xor
pop
xor
in
les
and
sti
js
mov
pop
add
std
pop
mov
mov
add
and
clc
enter
sub
pop
sarb
jo
push
dec
data16
aas
iret
jnp
push
push
xlat
jmp
scas
decb
mov
xchg
add
and
rorl
mov
in
jbe
aam
xchg
jbe
pop
sarl
cs
mov
cli
mov
icebp
cmp
add
fcompl
in
or
inc
jbe
addl
das
lret
cmp
sub
push
mov
mov
lea
out
int
pusha
and
xor
test
jg
or
pop
std
or
in
mov
lock
adc
or
data16
int
movsb
sub
or
ljmpw
dec
bound
stos
mov
push
fidivs
sub
cmp
test
inc
jb
xchg
inc
pushf
pop
pop
inc
pop
sub
fistl
test
mov
test
pop
push
test
xchg
sbb
dec
jb
cld
into
xor
mov
stos
add
mov
cmp
mov
push
scas
add
dec
inc
call
out
das
das
mov
cmp
pop
lea
add
sub
mov
push
jecxz
cmpsl
push
aaa
cmp
pop
dec
mov
add
imul
out
jo
repnz
mul
cltd
mov
and
or
pusha
sti
pop
sub
sbb
push
and
inc
addr16
or
or
sbb
lret
daa
in
out
fdivrs
adc
mov
lods
popa
xchg
sub
mov
mov
mov
ret
sti
mov
jnp
test
lahf
dec
mov
js
inc
add
into
insl
pop
lret
out
lods
push
dec
sbbl
mov
pop
imul
jl
jo
jno
loopne
pop
mov
das
inc
adc
mov
leave
cmp
jno
lahf
pop
adc
pop
mov
xor
jbe
mov
mov
ljmp
pop
loopne
clc
pop
cld
cmp
inc
xor
outsl
int3
jg
cmp
mov
mov
cmp
push
and
pop
push
jl
incl
xor
xchg
icebp
xchg
and
add
cli
lcall
pop
mov
ja
and
in
sub
mov
lock
cltd
enter
cmc
xor
in
inc
push
popa
xor
mov
lock
lods
mov
sbb
loop
xorb
aaa
daa
sbb
jne
aam
jns
popf
fwait
lods
and
insb
xchg
aaa
inc
inc
xchg
jp
pop
jo
sub
mov
loope
xor
pop
xchg
ret
cmpsl
test
iret
stos
cs
or
sbb
cmp
cs
pop
mov
pop
push
testb
movsb
nop
sub
das
push
out
jae
sbb
inc
inc
xchg
movsl
inc
push
pop
ficoml
pop
or
call
test
jg
jne
ds
test
push
imul
popa
dec
dec
adc
xchg
dec
pop
xor
sbb
mov
jo
sub
mov
pop
mov
mov
outsb
lahf
push
push
mov
int
cwtl
ret
lcall
push
dec
shl
sub
fnstenv
pushf
mov
bound
jg
scas
adc
sbb
js
jle
dec
jns
nop
std
push
mov
xorl
push
in
add
lret
insb
jmp
push
ds
push
cmp
jb
mov
adc
lock
cs
or
popa
out
mov
xchg
sub
in
aad
fwait
sub
nop
pop
inc
inc
cwtl
ss
dec
sbb
jno
rorl
out
sub
popa
insb
test
daa
mov
adc
fwait
xlat
add
or
add
push
sub
arpl
xchg
nop
cmpsl
movsb
adc
stos
movsb
cs
dec
pop
mov
mov
enter
pop
xor
adc
add
jnp
ret
aaa
test
stos
push
add
xor
adc
dec
icebp
pop
push
movsb
mov
jo
bound
cmp
add
jle
xchg
mov
test
jg
mov
or
fnstcw
fsubr
shll
imul
xor
sbb
push
test
push
sti
mov
pop
push
xchg
inc
push
jno
pop
push
xorl
mov
mov
mov
inc
test
lcall
inc
dec
xchg
jmp
int
push
rcr
dec
inc
inc
ja
push
arpl
mov
pop
xchg
fsubl
inc
mov
imul
push
cmp
push
movsb
xor
push
leave
shrb
sub
push
daa
ret
cmc
stos
push
aad
adc
or
sbb
hlt
add
ret
inc
imul
fwait
mov
lahf
mov
pop
jae
xor
test
jle
fbstp
into
in
leave
jmp
xor
or
mov
clc
addl
fisubrl
jecxz
data16
mov
fldt
mov
push
dec
inc
and
sub
js
loopne
mov
dec
insb
ds
lret
popf
xchg
pusha
inc
inc
aad
add
lret
into
add
loopne
shll
subl
out
push
in
push
aaa
or
cmp
jle
cli
mov
push
push
push
inc
lret
mov
pop
movsb
inc
pop
pop
xchg
pop
data16
gs
mov
test
mov
or
int
jbe
jmp
test
xchg
popa
repnz
inc
jb
cli
in
cmp
idivb
in
mov
jo
bound
inc
push
pop
int
loop
shrb
and
rolb
in
sub
cmp
xchg
add
jne
out
test
popa
add
lods
sbb
dec
xor
jg
cmp
imul
mov
xchg
loop
and
addr16
insl
mov
xor
mov
mov
inc
dec
mov
push
scas
push
stos
nop
pop
sarb
movsl
nop
imul
sbb
scas
fisttps
pop
popf
arpl
inc
pop
inc
mov
dec
mov
pop
push
mov
push
mov
jmp
scas
cmpsl
hlt
pop
jae
sub
mov
jb
mov
xchg
add
lds
mov
cmp
push
or
sbbl
pop
xor
lret
cmc
jp
sub
xchg
add
pop
push
sbb
ja
mov
xlat
jne
jl
lods
mov
inc
push
sbb
mov
into
mov
sub
insb
dec
cltd
test
popf
mov
adc
xchg
inc
pop
data16
mov
cld
shrb
push
dec
inc
pop
or
aad
mov
jb
jg
cltd
pusha
iret
fstpl
ljmp
pushf
and
mov
adc
jns
push
jae
jecxz
iret
sbb
and
sbb
xchg
push
fabs
mov
pop
and
xchg
repnz
sbb
cmp
jno
idivl
ja
and
data16
cld
jnp
xlat
cmp
call
jnp
idivb
pushl
mov
mov
adc
mov
adc
cmp
push
lahf
loopne,pn
push
pop
fimuls
and
shrb
stos
out
cmpsl
popf
jecxz
dec
imul
lock
dec
and
mov
or
xchg
enter
fists
add
pusha
push
iret
or
iret
mov
and
pop
cmp
cmp
and
test
inc
fistpll
pop
mov
inc
out
cs
jo
xchg
out
add
das
sub
xlat
dec
cmp
cmp
mov
in
clc
pop
xchg
add
lods
stos
cmpsb
nop
mov
fnsave
lea
cwtl
xchg
and
adcb
pop
xchg
mov
xchg
out
and
push
pop
add
cmc
inc
mov
out
mov
lcall
in
fmuls
mov
and
dec
cmc
jb
adc
stos
es
push
ret
pop
test
fnstenv
push
mov
xchg
dec
lahf
mov
sub
inc
add
mov
ret
insl
add
sbb
int3
pop
xlat
repnz
scas
dec
insb
jno
dec
push
adc
inc
cmpsl
xchg
and
mov
cwtl
hlt
ljmp
push
jns
aas
ja
mov
aas
mov
roll
addl
test
pop
subb
pop
stc
sub
les
push
mov
repz
mov
mov
shr
add
nop
into
fmull
dec
cwtl
inc
adc
or
pop
dec
mull
lahf
mov
pop
mov
cs
out
lds
lret
push
lret
push
or
fmull
mov
movsl
ret
fnstenv
in
or
fisubrl
cli
jle
fnstcw
cs
out
enter
stos
imul
mov
lcall
in
ret
flds
mov
and
leave
xorb
sbb
xchg
daa
sub
aas
or
cmpl
rcl
js
xor
ds
push
jl
ja
and
push
or
std
jne
repz
adc
or
cmpsb
mov
stos
mov
mov
lret
sti
cmpsl
lret
ret
xchg
jg
mov
push
nop
dec
out
sub
inc
scas
mov
outsb
mov
cmp
or
lods
sbb
ret
movb
jmp
cltd
into
pop
jge
push
and
pusha
mov
out
lock
inc
jno
pop
cld
rcll
negb
pop
es
imul
and
cmp
leave
cmp
add
frstor
pop
pop
lock
mov
jns
xchg
cmp
fisubs
jp
add
imul
mov
rcrl
cs
xchg
pop
mov
add
shrl
pusha
mov
shr
pop
sbb
nop
je
in
xchg
xchg
in
lods
mov
xchg
aad
add
inc
or
notl
add
movups
inc
ljmp
push
lcall
mov
pushf
push
popf
repz
xor
pop
hlt
push
sarl
repnz
sub
repz
arpl
in
cmp
cmp
xchg
call
cmp
xor
jne
das
mov
cmc
jge
lcall
in
mov
iret
andb
pop
sbb
sbb
bound
addl
in
imul
fldl
pop
repz
enter
nop
jl
rorb
and
clc
xchg
int3
outsb
dec
xor
leave
shrb
out
inc
mov
movsl
cmpsl
dec
inc
mov
out
jbe
xchg
inc
scas
fwait
dec
xchg
mov
xchg
movsl
popf
test
push
mov
cmp
mov
mov
lret
addb
push
incb
arpl
inc
repnz
das
rcr
stc
into
dec
outsl
and
mov
and
cmp
lcall
inc
in
jmp
cmpl
scas
mov
xchg
outsb
aam
jmp
mov
pusha
imul
loope
inc
pop
adc
mov
lock
mov
or
push
inc
xchg
or
or
roll
inc
pop
add
sub
adc
mov
cwtl
xchg
cmp
xor
jo
cltd
pop
shll
or
sub
aam
xor
jg
std
mov
addr16
mov
jns
dec
in
xor
cmp
sub
mov
in
fbld
test
sub
arpl
add
lds
das
jg
sar
xchg
pmullw
outsb
push
pop
in
into
pop
std
or
xor
scas
aam
mov
incl
pop
mov
mov
ret
mov
push
repnz
nop
out
inc
xchg
push
sbb
dec
lods
cli
cmpl
imul
ret
jnp
sahf
mov
inc
pushf
shrb
pusha
pshufw
in
aad
mov
fidivrl
lahf
adc
and
xchg
ret
jnp
push
das
cmp
mov
lret
enter
test
sub
add
test
hlt
or
aad
pop
pop
incb
mov
in
popl
rclb
jp
outsw
mov
int3
sub
in
neg
or
icebp
jno
insb
jbe
and
in
ret
loope
jbe
aam
xor
and
jg
ja
jecxz
mov
cltd
lods
dec
inc
ffreep
imul
xchg
into
out
inc
std
and
inc
outsl
xlat
lret
shll
mov
stos
pop
jg
rolb
cmp
push
dec
cmpsl
daa
loopne
dec
sbb
outsl
lods
dec
popa
dec
in
scas
cmp
dec
clc
jns
int
ret
cmp
lods
lahf
loopne
mov
gs
sub
cmp
data16
mov
pop
cli
movsl
repnz
arpl
repnz
xchg
mov
mov
pushf
adc
addr16
aam
mov
sub
call
pop
repnz
mov
repnz
inc
pop
mov
stos
ds
push
jno
xchg
cmp
cwtl
jb
lret
inc
rcl
scas
hlt
and
push
pusha
dec
movsl
add
cmp
lahf
xor
pop
pop
inc
and
or
mov
jo
popf
mov
mov
stos
dec
sub
cmc
shlb
in
sbb
xor
out
ds
push
enter
das
fstp
in
dec
xchg
out
in
ret
cwtl
out
adc
mov
pop
scas
pop
std
ret
test
cmp
lds
loopne
fdivrp
sbb
jae
jo
or
cld
ret
sub
push
andl
iret
jmp
or
jmp
in
pop
pop
std
push
jle
jecxz
std
jb
xchg
cld
pop
push
adc
push
cmp
push
inc
cmp
out
push
jbe
scas
jl
mov
aam
cltd
out
dec
lahf
xlat
dec
lods
clc
insb
adc
cmpb
lea
jnp
js
test
incb
jmp
loop
and
and
add
mov
add
mov
andb
add
test
sqrtps
sahf
pop
addr16
push
inc
shr
fistps
movsl
fcoml
loop
dec
pusha
lea
ret
movsb
aaa
push
pop
inc
xchg
fistpll
mov
adc
sbb
loopne
dec
cmp
and
mov
js
and
faddl
addb
mov
or
mov
xlat
rolb
xlat
or
mov
xor
aam
mov
cld
xlat
or
mov
aaa
lods
mov
cld
push
sahf
sbb
lds
pop
add
test
and
ljmp
push
sahf
inc
cwtl
or
dec
repz
mov
out
mov
add
mov
jae
out
out
ja
pop
jecxz
lea
call
xchg
in
push
dec
and
push
push
or
lea
add
es
mov
push
das
repnz
test
dec
fsts
dec
adc
outsl
pop
shrl
hlt
and
movsl
push
dec
stos
shll
sbb
cmp
push
mov
test
mov
mov
dec
ret
dec
aam
mov
lea
mov
or
mov
and
aad
xor
popl
ret
adc
xchg
jbe
inc
push
pushf
or
sbbb
push
mov
test
adc
jnp
mov
out
inc
add
outsl
adc
mov
imul
inc
dec
xchg
arpl
dec
and
fs
ss
cmp
jo
or
sub
aam
adc
sub
addr16
test
gs
pop
push
sub
add
and
jne
mov
stos
xlat
mov
xchg
fcmovne
cmp
add
dec
insl
pushf
fildll
mov
bswap
iret
sahf
mov
pop
dec
repnz
nop
xorl
jl
aam
sti
and
int
outsb
lahf
lock
jb
xlat
push
xor
xchg
popf
in
xchg
fs
push
lahf
sbb
stc
or
xchg
xor
ss
lcall
sbbb
or
push
fisubs
js
pop
in
sahf
mov
jmp
sbb
aad
and
adc
mov
push
rorb
xlat
push
xor
in
push
inc
pop
ja
int
mov
pop
div
lods
jmp
jo
cmp
xchg
or
mov
mov
icebp
sub
and
test
shrb
fdivl
loopne
xchg
shll
cwtl
push
cmp
test
lcall
addr16
sub
fsubrl
pop
dec
fnstsw
jmp
mov
pusha
lret
sbb
ljmp
jl
and
inc
fisubl
jbe
pusha
sbb
scas
repz
pop
cmp
and
pop
icebp
mov
xchg
das
gs
pop
stos
fisubrs
jp
inc
sbb
cmc
xor
inc
aaa
dec
mov
aas
adc
mov
outsl
div
in
test
ljmp
sti
push
sbb
sbb
out
xor
cmpb
sub
rclb
cmp
jns
xchg
mov
popf
pop
mov
imul
ret
dec
fnstsw
xor
lea
ljmp
sbb
jae
and
xchg
mov
bound
sbb
adc
sub
push
enter
dec
dec
push
and
sbb
mov
jg
bound
and
push
aaa
cmp
inc
xorb
iret
loopne
push
test
or
aad
xchg
bound
lret
and
popa
mov
out
repnz
sub
into
gs
ret
mov
cltd
mov
xchg
fmuls
and
jae
cmp
mov
orl
and
inc
xchg
mov
xor
mov
ss
gs
inc
mov
jne
adc
fs
add
pop
jp
xchg
xchg
xor
cltd
sti
cmp
xchg
xchg
inc
cwtl
jno
and
pop
xchg
add
leave
push
pop
inc
jo
mov
sbb
fxtract
cmp
push
push
pop
iret
add
mov
cmp
aas
rcl
aad
inc
xor
mov
test
fisubs
in
dec
fists
loope
ret
data16
addr16
jecxz
mov
dec
or
insb
outsb
outsb
inc
xchg
ljmp
fists
aad
cmp
insb
divb
in
jl
out
cmp
jo
fistl
xor
arpl
lock
cmp
stos
sub
test
sub
mov
mov
rorl
mov
subb
push
adc
xlat
inc
and
cmpsb
ja
inc
jecxz
pop
mov
sbb
sbb
push
outsl
inc
rorb
fdivrl
dec
sub
iret
test
adc
mov
aam
aas
push
add
in
mov
adc
sub
jle
sbb
cli
enter
aad
fisttpll
sbb
sub
enter
loop
mov
fsubrs
les
mov
lds
pop
mov
imul
xchg
jno
lods
push
dec
and
lret
inc
js,pt
bound
scas
xchg
mov
stos
push
cli
cs
cmc
mov
dec
pop
mov
xchg
push
xor
push
aam
mov
adc
mov
pop
push
imul
pop
mov
mov
bound
inc
mov
lahf
mov
insl
mov
iret
test
sbb
mov
dec
adc
dec
mov
mov
loope
ss
test
repz
pop
mov
testl
pop
mov
jmp
aas
cli
fdivrl
outsl
fwait
sub
loope
leave
lods
sets
jp
jns
pop
daa
mov
push
aam
cmp
loope
leave
movsb
in
flds
mov
stc
dec
imul
sub
or
or
icebp
pop
das
sbb
cmpl
mov
fildll
xlat
xorb
fsubl
or
cmp
lret
icebp
dec
xor
jge
pop
adc
push
popa
jecxz
inc
out
imul
xchg
fisttps
jl
mov
test
push
scas
jae
pop
fwait
lds
push
aaa
mov
inc
popa
cmc
xor
ja
cwtl
push
xor
xchg
add
jg
sub
cld
pop
pop
ficompl
fldt
sti
sbb
push
xchg
jbe
stos
jle
lahf
fnsave
lahf
push
xor
lods
push
sbb
adc
pop
jecxz
xor
std
repz
stc
cmpsl
aam
xor
movsl
fstp
pop
lods
jb
mov
jns
mov
pushf
xchg
jg
inc
adc
cmp
cs
cwtl
loop
movsb
sbb
pop
sti
fs
xlat
repnz
inc
sahf
pop
lods
lret
mov
jae,pn
adc
mov
mov
mov
fdivrs
jle
push
pop
adc
lods
data16
fnsave
stos
sbb
add
mov
push
es
aaa
pop
jae
dec
movsb
dec
loopne
push
fldl
mov
jge
pop
cli
das
adc
mov
shlb
loope
cvtps2pd
sbb
xor
cmpsl
ss
rcll
repz
cmc
push
jmp
fcomi
gs
push
repnz
pop
dec
stos
adc
repz
xchg
cmp
ss
movsb
stos
or
data16
cmc
xchg
movsl
jns
ret
jno
add
push
push
test
inc
mov
dec
cltd
pusha
push
lds
fstpl
std
mov
jae
ffreep
lahf
sti
jg
pop
xor
sar
fildll
or
in
hlt
fsubs
adc
mov
pop
pop
aas
std
imull
int
xchg
jbe
daa
inc
js
dec
add
sbb
test
aaa
test
dec
and
dec
repz
xchg
clc
push
and
testb
add
inc
andb
scas
cmpl
cmpsb
lods
shl
ds
and
cmp
pop
dec
sub
xchg
in
mov
sti
mov
mov
mov
or
cwtl
aaa
mov
xchg
fsubrs
dec
dec
cmp
add
adcl
cmpsl
dec
xchg
ja
pop
add
movzwl
sbb
xor
lods
int
mov
push
cmpsb
cmp
pusha
rcll
fnsave
xchg
add
push
stc
mov
xchg
xchg
shll
fistps
adc
pop
jecxz
inc
add
sub
pop
and
ds
out
cmp
fisubs
or
movsl
imul
das
inc
sbb
adc
daa
mov
insb
call
sbb
ja
cmp
popf
and
push
jmp
add
outsl
mov
jecxz
xchg
enter
test
mov
jnp
cmpsb
mov
cmp
jmp
mov
ret
or
incb
push
dec
rol
jnp
jae
dec
jl
push
add
lret
mov
dec
roll
add
fwait
js
out
inc
push
or
sub
pusha
mov
lcall
subl
adc
fwait
stos
fnstsw
call
cli
sbb
mov
sbb
inc
popa
popa
jmp
enter
cld
pushf
pop
and
sbb
stc
lea
mov
add
jns
pop
and
aaa
in
imulb
push
adc
inc
ret
sbb
xor
mov
mov
icebp
inc
or
pop
cmp
cmc
pop
jnp
icebp
rcl
stos
xchg
sub
mov
mov
outsb
testl
sbb
imul
adc
je
imul
aam
daa
xchg
lock
mov
push
dec
sahf
mov
pop
xchg
and
idiv
movsl
inc
adc
add
jmp
lahf
sbb
sbb
jnp
push
adc
ss
mov
aam
dec
xor
jb
and
clc
mov
out
lret
pop
push
into
es
call
ret
adc
jns
mov
sub
pusha
cwtl
and
scas
jp
dec
add
shr
filds
and
outsl
outsb
jg
imul
xchg
mov
sub
mov
rorb
cmp
lret
push
lods
scas
push
jmp
andb
scas
or
insb
xor
fstl
sahf
xchg
dec
mov
stos
cmp
pop
pop
cltd
pushf
loope
inc
push
add
inc
push
lods
paddusw
js
xchg
lds
jns
mov
stos
or
in
addr16
fistps
sub
xchg
andb
mov
rcl
inc
dec
std
fimuls
shr
and
pop
push
pop
cwtl
sub
out
or
gs
test
out
in
sbb
add
pop
mov
jae
in
push
and
and
mov
sbb
xorb
arpl
mov
stos
pop
xlat
and
and
stos
rcll
lods
xchg
adc
popf
cmp
iret
or
add
mov
mov
lret
test
pop
jne
fsubs
fptan
nop
lret
xchg
xchg
hlt
bnd
popa
subl
aad
or
jb
aaa
cltd
mov
and
aaa
xor
xchg
jns
mov
mov
sbb
fistpll
pop
pop
icebp
pop
inc
push
push
std
lret
imul
xor
lods
enter
mov
mov
cmp
mov
sahf
adc
repz
fnstsw
cmc
jecxz
mov
sub
lret
xor
xor
xchg
mov
sbb
push
cld
in
insl
test
sbb
pop
cmpsb
add
add
pushf
pop
sub
enter
int
in
or
or
mov
sti
insb
stc
pop
cmp
mov
sub
mov
push
in
dec
adcb
xor
je
es
fimull
cs
iret
push
std
out
loope
jl
dec
mov
pop
addr16
and
jge
fwait
fs
cmp
shll
into
mov
dec
push
adc
inc
inc
test
popf
xlat
cmp
lcall
popf
pop
imul
xlat
push
mov
adc
ljmp
fcoml
mov
aad
adcl
mov
cmp
movsb
inc
sti
jo
fadds
pop
je
orl
dec
clc
mov
pop
dec
clc
std
mov
xchg
test
subl
jl
jl
add
cmp
into
stos
ret
sbb
dec
xchg
cmpsl
cmp
enter
int3
andb
xchg
mov
mov
iret
fwait
cli
dec
mov
sub
imul
mov
dec
adc
imul
cwtl
sarl
dec
sti
xor
pop
stos
inc
nop
idiv
lods
pop
enter
xor
fs
lock
xor
inc
push
adc
mov
jno
cmpsl
dec
dec
mov
mov
and
xchg
push
inc
inc
das
xchg
ja
mov
cmove
scas
sub
pop
repz
dec
cmp
insb
add
fcoml
shll
pop
mov
movl
dec
mov
push
pop
inc
push
mov
sahf
mov
stos
in
or
loopne
sbb
in
push
pop
dec
push
call
inc
fcoms
xchg
cmpsb
pop
jmp
pop
pop
hlt
icebp
xorl
int
fwait
aas
dec
jbe
insl
pushf
movsb
pop
fdivrs
stos
imul
in
jnp
cmpsl
repz
mov
mov
das
adc
mov
cmp
and
out
push
mov
ficomps
adc
int3
cmp
icebp
stos
xchg
jg
push
cmp
rcrl
pop
dec
arpl
push
sar
dec
bt
xchg
sub
fcompl
out
inc
mov
add
mov
mov
arpl
mov
popf
idivl
mov
xchg
jl
enter
arpl
cmp
icebp
cld
pop
fldt
setle
nop
arpl
cmp
mov
pop
or
inc
sub
repnz
pop
cltd
pop
and
push
xor
jmp
push
push
aaa
or
jae
jbe
push
adc
and
pop
bound
jp
leave
pop
test
pop
sub
sub
test
and
cmc
sub
cmp
adc
loop
lcall
mov
jmp
and
inc
pop
dec
ret
or
mov
or
or
dec
pop
clc
mov
push
jp
gs
fdivs
and
pushf
rclb
push
int3
cwtl
lods
rcr
testb
cmp
mov
or
in
cmp
out
push
mov
outsl
mov
push
xchg
scas
inc
xor
jg
xrelease
jg
outsl
or
je
lret
push
data16
jbe
jle
movsl
insl
jecxz
xchg
inc
pop
mov
mov
pop
jmp
push
add
test
ja
adc
dec
sbb
sbbb
repnz
push
adc
inc
pop
js
dec
mov
mov
or
and
pop
shr
data16
mov
adc
mov
clc
or
pop
cmpsb
push
movsl
push
inc
popf
add
pop
dec
cli
cmp
fistl
shll
sti
test
aaa
int3
lods
in
xchg
pusha
cmp
out
stos
ss
push
or
cli
jne
iret
cmp
fisttps
pop
out
jecxz
jmp
push
pop
jns
sub
sub
sahf
adc
loop
pop
sti
cmp
dec
adc
mov
xlat
pop
insl
repnz
fsqrt
inc
jmp
xchg
popa
fnstenv
sub
mov
into
jo
add
into
xor
jge
sarl
dec
mov
arpl
aam
or
pop
cmp
lahf
test
inc
je
xchg
scas
stc
std
std
push
adc
pop
xor
inc
loopne
jge
push
jns
fbld
lret
in
cli
add
movsl
imul
xchg
sub
mov
shlb
sub
mov
and
ret
movsl
call
add
cpuid
sub
xchg
pop
mov
leave
sti
cmp
mov
mov
ror
mov
sbb
outsl
jo
mov
xor
dec
dec
int
xchg
lock
and
or
jno
repz
adc
mov
mov
loop
jmp
adcb
or
inc
ja
out
loopne
cmp
insb
mov
mov
outsl
xor
fs
jmp
call
mov
inc
cmpb
dec
pop
push
das
pop
jnp
pusha
push
add
adc
in
pop
popa
mov
popa
mov
les
lock
and
into
or
imul
pop
adc
lock
add
sahf
popf
es
add
subl
and
daa
pop
in
stc
add
push
dec
fwait
aam
sub
loope
inc
and
adc
js
mov
mov
enter
mov
mov
cli
push
pop
lahf
mov
mov
les
nop
fnstcw
movsb
mov
clc
rcll
add
in
outsb
hlt
sub
movsb
sub
sbb
and
sub
or
inc
lock
xchg
cmp
fistpll
push
cmp
stos
aaa
inc
xor
into
sbb
jp
cmpsb
push
xor
in
pop
std
push
cs
sub
loope
int
popf
jecxz
lods
sbb
jmp
add
mov
xor
aam
pusha
mov
jge
mov
mov
in
mov
out
pop
mov
inc
pop
lods
fldenv
aas
popf
inc
mov
jecxz
cmp
pop
jecxz
adc
sub
into
adc
adc
xchg
and
cmp
mov
roll
xor
mov
mov
scas
jp
lcall
xor
sbb
aad
dec
push
ss
push
add
movb
icebp
mov
jno
mov
lcall
adc
push
jo
sub
sarb
mov
mov
nop
pop
aad
mov
adc
aad
subl
ds
arpl
push
adc
imul
out
insb
pop
loope
cmpsb
or
jne
scas
shrl
inc
inc
aaa
cmp
repnz
inc
aaa
lret
mov
loope
ja
aas
adc
fs
sub
xchg
sti
mov
pop
popf
fldcw
pusha
es
out
push
ljmp
int3
aas
fwait
and
bound
dec
aad
sub
jp
pop
inc
notl
mov
add
imul
dec
or
xchg
mov
mov
popf
add
bound
push
jl
xchg
pop
mov
sarb
jnp
mov
push
jl
mov
jae
fidivrs
dec
ffree
and
movsl
in
jp
mov
jns
sarl
dec
ja
clc
cwtl
cmc
adc
ret
or
xchg
loop
inc
mov
icebp
cmp
or
or
mov
push
iret
sub
div
stc
lcall
inc
les
int
ret
mov
cmp
shr
xorl
mov
repz
lret
je
xchg
cmp
pop
cli
pop
and
mov
fisubrs
and
nop
inc
and
js
ret
adc
dec
and
pop
movsl
push
mov
fldenv
fst
xchg
fcomps
xchg
call
add
cmp
adc
add
sahf
sub
outsb
pop
sub
or
popf
pop
je
cmp
movsl
dec
add
pop
xchg
pop
bound
neg
and
lahf
pop
pop
lods
adc
cltd
dec
rolb
pop
xor
dec
push
repnz
add
lock
sbb
cli
xchg
packsswb
pop
lock
std
jns
push
shll
fs
mov
hlt
mov
je
fidivs
fwait
and
mov
mov
mov
rcrl
adc
sahf
mov
lret
cmpsb
sti
mov
push
fisubs
xchg
mov
add
pop
and
or
fwait
dec
call
sub
xchg
mov
sti
inc
and
add
dec
pop
lret
add
sub
add
push
jp
dec
push
mov
lret
mov
dec
cmpsl
ljmp
shlb
clc
xchg
shl
add
cld
iret
pop
pop
inc
sub
dec
jl
cli
cmpsl
push
add
lea
or
or
aam
add
dec
xor
sarl
fidivrl
and
std
std
sahf
arpl
insl
pop
ror
mov
sbb
fcomi
sbb
test
push
pop
fstl
fidivs
aaa
mov
sub
sbb
or
mov
push
inc
movsb
pop
insb
add
inc
xor
push
inc
ficompl
fcoms
aam
je
pusha
insl
jle
out
in
mov
jnp
popl
lds
cwtl
nop
movsl
out
roll
xor
into
imul
repz
lcall
push
icebp
jne
aaa
leave
clc
mov
and
jge
and
add
mov
imul
test
cmp
mov
int3
dec
mov
popf
lret
cmc
cmp
fs
ja
jnp
test
mov
ja
fdivrp
push
repnz
jecxz
mov
movsb
call
jge
cmp
cmp
push
or
mov
sub
out
out
sahf
jg
inc
shrb
int3
adc
cmpsb
inc
jmp
adc
fcmovnu
inc
stos
arpl
fs
push
sbb
ds
add
aam
mov
loopne
ja
add
adc
hlt
cmp
insl
push
jg
and
adc
xchg
lret
sbb
fwait
mov
mov
mov
xchg
jne
ljmp
pop
cltd
xchg
leave
outsl
fdivrs
cld
mov
loop
in
jp
push
pop
aas
repz
push
in
sbb
and
cmc
iret
lcall
jle
icebp
jg
mov
fildl
scas
and
fwait
cwtl
cmpsl
dec
push
jno
rcl
mov
nop
jg
dec
jne
push
adc
and
push
fidivl
dec
cmpsb
push
jecxz
rorl
sbb
fmulp
loope
push
fldcw
xor
lock
dec
inc
or
imul
scas
inc
add
mov
shl
aas
jle
adcl
pop
inc
repnz
out
in
mov
lods
cs
jl
inc
stc
movsb
xor
fwait
xor
fwait
mov
pop
xor
adc
adc
pusha
in
pop
jb
int3
mov
mov
dec
jae
dec
ss
jp
sar
cmpsb
mov
lret
out
push
fildl
les
mov
stos
rcrb
ss
sub
cmc
push
pushf
jmp
movsl
mov
xchg
jne
cmp
add
jo
lahf
jno
fwait
adc
stos
jg
mov
push
out
jnp
inc
push
sbbl
or
adc
sti
fwait
pusha
adc
scas
jmp
xchg
insl
pop
lretw
lods
mov
hlt
in
les
subb
aad
push
cmpb
add
adc
out
push
jl
sub
and
push
inc
cmp
mul
loopne
mov
call
mov
ds
xor
in
pop
inc
push
sbb
in
scas
imul
xchg
es
mov
cs
dec
imul
mov
test
subb
push
xor
dec
sub
xchg
jb
pusha
jns
shrb
cli
leave
mov
or
movl
dec
pop
addl
fistps
mov
pop
shll
bound
jmp
or
inc
mov
roll
jb
iret
jnp
mov
jb
scas
movsl
rcl
pusha
or
cmp
mov
or
divb
test
addb
jnp
xor
mov
mov
ds
aaa
lahf
hlt
lods
inc
sbb
inc
xchg
in
test
mov
cmp
scas
xor
inc
aaa
push
fwait
push
xchg
pop
dec
call
in
pop
mov
pop
inc
inc
mov
enter
fucomp
popa
fiaddl
jl
popa
and
gs
loopnew
in
xor
repz
lret
adc
shlb
adc
cld
xlat
data16
mov
xlat
push
das
ja
pop
cmp
xchg
cmp
mov
mov
mov
lret
push
sbb
mov
add
mov
leave
sti
decl
int
clc
xchg
sub
xchg
jbe
ds
adc
aaa
cmp
bound
scas
repz
xor
sbb
shlb
add
push
ss
push
mov
push
repnz
inc
sub
inc
fidivl
mov
push
ret
hlt
add
rclb
push
jg
sti
outsb
add
lcall
xor
adc
out
add
mov
mov
mov
dec
cwtl
in
xchg
sbb
repnz
sbb
mov
inc
daa
negb
push
mov
ret
outsb
out
adc
imul
add
lahf
push
mov
push
pop
scas
clc
mov
xor
add
sbb
add
jne
xchg
loope
inc
repz
test
outsb
rcl
icebp
fs
mov
xchg
nop
inc
jbe
or
lds
mov
inc
in
sti
mov
fldenv
mov
push
sub
push
data16
dec
lahf
pop
in
pop
sub
dec
add
push
testl
lock
mov
popa
pop
jl
pop
rol
jmp
add
jl
ds
cmp
and
test
cmp
repnz
mov
adc
add
or
fwait
cmp
mov
imul
push
dec
mov
jb
adc
das
jecxz
push
das
mov
mov
inc
sub
sbb
jg
push
jb
fs
int3
mov
stc
cmp
pop
nop
add
out
sbb
pop
push
mov
jge
icebp
das
and
cltd
push
pop
push
ret
pop
inc
out
outsl
aad
pusha
mov
jmp
aas
lock
inc
or
inc
inc
mov
add
stc
add
pusha
nop
add
ljmp
xor
lcall
cmpsl
je
jg
mov
insl
pop
mov
insb
cmp
cltd
dec
jle
push
fcoms
cmp
jmp
add
popf
or
rcl
test
in
into
push
jecxz
rcrb
fdivl
push
je
in
insb
cmpsl
inc
mov
mov
mov
loopne
lret
mov
sub
pop
xor
cmp
xchg
xchg
fimuls
into
jns
adc
sbb
mov
mov
mov
in
pop
in
fsubl
je
lods
and
sbb
aaa
add
jae
scas
outsb
fucomip
cltd
int3
jne
mov
ret
ds
push
bound
fucom
push
sahf
daa
dec
xchg
pop
loop
add
icebp
jmp
pusha
xchg
add
push
mov
adc
cmp
add
mov
out
xor
in
lods
shrb
imul
lods
push
adcb
pusha
sub
pop
pop
inc
icebp
mov
jge
inc
pushf
lret
leave
test
inc
pop
popf
sbb
inc
mov
cmp
and
cmp
adc
xor
jp
adc
sbb
test
mov
add
inc
dec
mov
call
das
shrb
addr16
pop
mov
das
jns
aaa
jne
cmp
mov
mov
lahf
mov
fwait
mov
push
cmp
push
push
mov
test
mov
xchg
jnp
in
dec
das
dec
call
mov
push
or
sti
push
and
pushf
adc
roll
mov
push
jle
lock
lret
lds
pushf
bound
adc
data16
ljmp
sbb
ret
mov
xor
stos
or
xor
ret
lea
mov
int3
mov
xchg
in
mov
std
jno
mov
cmc
cs
repnz
or
push
jmp
sbb
fdivrl
ja
jnp
pop
sbbb
inc
inc
pusha
lcall
pushf
mov
pop
mov
pop
repz
adc
fsts
sub
sbb
call
xchg
xor
inc
or
mov
inc
lret
add
imul
jnp
popf
leave
sub
mov
dec
mov
stc
pop
cs
fs
ficompl
dec
xchg
cmp
and
cmpsb
push
loope
test
clc
ja
mov
and
xlat
dec
mov
int
adc
xchg
push
icebp
stos
sbb
adc
mov
mov
cmc
inc
ja
pop
push
inc
fcompl
mov
enter
jl
xor
xchg
cmp
push
push
lret
rcl
pop
dec
pop
test
nop
pop
push
xchg
pushf
sahf
test
cmp
ds
stos
mov
mov
push
or
jno
jl
adc
mov
cli
repz
dec
mov
jmp
pop
out
shl
aam
loope
roll
mov
inc
push
ficomps
or
or
lret
jg
jmp
imul
cmp
xor
fildl
lea
loopne
lcall
es
cs
jmp
fcmovbe
in
popa
xchg
stc
dec
pop
lods
insl
sbb
movsl
ds
outsl
ja
jmp
repnz
dec
jge
adc
fdivs
cmpsl
jg
stos
out
dec
push
xchg
rolb
xor
mov
fiadds
pop
jb
sbb
int3
xor
mov
sub
jns
test
rorl
xchg
xor
int
xchg
sub
test
xor
mov
jne
jecxz
repnz
push
lea
std
addb
or
mov
push
or
push
int
pop
adc
leave
mov
cwtl
outsb
cmc
data16
shlb
jle
cs
inc
sub
bound
inc
fsubr
out
dec
inc
inc
repz
daa
jae
inc
rcl
pop
adcl
scas
xor
push
int
and
fstpl
xor
aas
out
inc
dec
push
and
xchg
pop
pop
ret
fstl
testl
fidivs
fs
mov
sub
adc
dec
in
das
lock
mov
xchg
pop
and
in
aam
push
cmp
in
jns
ficompl
xor
push
rclb
icebp
sahf
jmp
mov
add
mov
push
scas
sbb
fidivrl
push
enter
pop
pop
sub
xor
test
sbb
push
xor
inc
repnz
repz
outsl
shl
mov
add
stc
scas
loope
push
mov
push
dec
jle
jmp
push
ret
cmp
mov
push
imul
lods
out
in
adcb
out
mov
testb
lods
sti
cmp
pop
dec
imul
xor
inc
xchg
test
sub
insl
mov
or
call
mov
outsl
xor
pop
xchg
pop
xchg
cmp
xchg
dec
into
fs
mov
in
mov
les
out
mov
sbb
ljmp
xchg
call
jge
cld
xchg
cwtl
roll
ds
scas
icebp
pusha
stc
inc
shlb
jnp
mov
push
inc
xor
cld
lcall
shlb
je
push
bound
inc
in
adc
inc
dec
push
sti
dec
push
push
inc
xchg
test
inc
xchg
and
push
push
repz
ljmp
cld
jmp
lcall
out
push
mov
stos
into
jbe
push
mov
fmul
sub
push
dec
jge
sub
in
push
mov
mov
fidivl
mov
pop
js
loop
sub
mov
pushf
xchg
mov
dec
jp
pop
jb
ljmp
into
xchg
lcall
sbb
decb
cmpsl
fs
dec
fwait
add
xchg
clc
rcrl
add
jle
rclb
jno
in
xlat
popa
pop
scas
push
sarl
fdivrl
adc
xor
mov
ljmp
in
xor
inc
inc
out
jb
jnp
jecxz
incl
les
dec
pusha
rcl
popa
and
ja
pop
jb
pop
std
stos
sti
scas
aad
push
cmp
in
scas
mov
mov
jecxz
stos
adc
mov
sub
imul
xchg
mov
cld
test
out
stc
int
shlb
mov
iret
pop
out
push
fwait
xlat
dec
in
and
mov
mov
bound
ret
mov
xchg
shr
xor
lret
pop
dec
xchg
pop
push
jae
and
jne
hlt
push
and
sub
out
scas
pushf
push
pop
popf
add
pop
rcrb
fadds
loope
add
and
popf
dec
in
aam
sahf
xchg
sbb
xchg
movsb
rorl
imul
stc
mov
xchg
ret
jo
or
testl
gs
ret
lds
xchg
scas
mov
sbb
popf
cld
lods
std
rclb
sub
iret
xor
jp
loope
dec
xor
je
je
and
into
inc
rcll
iret
push
rcll
mov
cli
pop
insb
jno
outsb
shr
pop
push
pop
stos
adc
test
inc
cmp
pop
push
fwait
xchg
out
sbb
sbb
movsb
int3
mov
aam
push
lock
and
out
cltd
pop
dec
jecxz
pushf
loopne
xchg
cmp
clc
sub
subb
add
dec
clc
cmpsl
in
and
movsb
dec
add
sbb
cli
and
jle
aad
mov
stos
inc
adc
dec
insb
push
ret
inc
or
cmp
stos
stos
push
add
and
sbb
inc
pop
arpl
jne
cmpsl
and
mov
int
loopne
jg
mov
imul
out
std
or
fistpll
lea
cmp
js
pop
scas
loope
add
ret
sti
mov
fnop
enter
inc
pop
imul
xor
insl
push
mov
jecxz
inc
daa
aad
pop
mov
mov
shlb
scas
rcl
js
push
cmc
lret
mov
dec
in
pop
divb
outsb
clc
loopne
into
stos
pushf
ret
mov
leave
dec
xor
mov
int3
ja
pop
in
mov
repz
inc
pusha
jge
cmc
adc
pusha
cmp
dec
xchg
cmp
mov
push
dec
add
jle
inc
xor
inc
add
or
aaa
inc
mov
xchg
ljmp
jl
inc
push
cmp
outsl
fucom
xchg
imul
shlb
mov
scas
pop
test
daa
dec
inc
mov
jmp
and
pop
mov
out
push
iret
jmp
mov
sub
test
out
addr16
stc
dec
les
or
dec
test
aam
test
loope
and
xor
lahf
js
push
adc
stos
add
jecxz
les
push
dec
adc
in
dec
dec
fldt
or
push
in
ljmp
sub
pop
jb
sahf
push
xor
adc
into
mov
sub
mov
lea
sbb
mov
sub
aaa
cmp
mov
movb
repz
data16
les
pop
ja,pn
pushf
fcmovu
test
pop
cmp
shl
call
jbe
mov
push
mov
sub
push
shll
inc
cmp
negl
iret
pop
aaa
pop
outsb
lods
mov
push
mov
dec
testl
popf
aas
hlt
test
sahf
adc
je
sahf
in
std
xchg
ds
add
es
inc
pop
lcall
stos
pushf
xor
int3
pop
mov
adc
ret
in
daa
stc
sbb
add
jb
inc
lock
push
in
mov
inc
in
ss
stos
lret
xlat
in
mov
cli
jo
stos
xor
pop
xchg
mov
jo
cli
xlat
or
test
jno
test
aas
cmc
cmpsl
xchg
and
or
arpl
in
xor
xor
push
mov
lock
repz
stc
scas
mov
mov
pop
sahf
push
clc
movsl
in
stos
stc
cmp
rorb
out
jge
enter
fmull
in
jmp
inc
std
sarl
jmp
push
inc
rclb
cmpsb
in
cmp
mov
jae
add
hlt
sbb
fstpt
lret
mov
icebp
hlt
call
fmul
mov
jns
pop
xlat
popa
loop
shll
mov
adc
aaa
pop
ja
in
adc
test
test
adc
rol
xor
shl
dec
and
xlat
mov
pop
lock
pop
and
xor
sub
adc
pop
push
push
in
lock
push
arpl
cmp
in
rclb
xchg
imul
adc
mov
xor
mov
leave
and
mov
out
xchg
stos
xchg
ljmp
sar
dec
pop
in
jmp
js
cmpsl
inc
push
cmp
inc
jnp
scas
test
or
inc
lcall
imul
jnp
jl
mov
out
in
add
cmp
fstl
into
inc
xor
lock
pop
cmp
inc
dec
shr
inc
adc
mov
cli
mov
popa
clc
clc
insl
cmpsb
push
ss
cs
pop
cmc
push
dec
mov
lahf
cmp
add
push
lahf
jno
pushf
call
mov
insl
cmc
cmp
xchg
jae
and
mov
into
das
into
cmp
jb
stos
adc
mov
mov
aaa
popa
jns
xor
andb
add
imul
cmp
cmp
outsl
xor
loope
in
adc
mov
lds
xchg
jns
sahf
insb
call
pushf
adc
mov
outsl
int
xlat
and
mov
popf
les
push
movsb
lcall
enter
add
gs
repnz
sub
add
sub
fwait
pop
call
dec
in
lret
dec
sub
fwait
pushf
sbb
push
cmp
cmpb
enter
sbb
xchg
dec
mov
push
stc
jo
clc
push
mov
jns
jl
aas
cmp
dec
nop
and
out
fs
jb
hlt
xor
lahf
push
enter
lds
fsubrs
icebp
data16
shrb
bound
stos
push
adc
loop
add
pop
shll
insb
mov
mov
dec
loope
clc
mov
sti
icebp
mov
out
or
ss
or
xchg
negb
stc
jb
aas
push
ljmp
sub
sub
push
adc
dec
testb
pop
ucomiss
inc
mov
push
pop
imul
les
loopne
add
repz
adc
and
test
stos
inc
xchg
sub
cmp
jnp
pushf
dec
mov
cmpsb
xlat
lods
data16
cwtl
xor
shrb
stc
xchg
jnp
js
push
adc
lds
xchg
push
lds
inc
sub
sbb
enter
cmp
jo
rcpps
add
and
sub
jge
sahf
ss
jl
mov
fmuls
je
or
idivb
inc
in
mov
mov
xor
push
push
fsubrl
arpl
and
cmpsl
xchg
ret
or
pop
sbb
push
iret
or
test
jecxz
cmc
xchg
mov
jns
add
mov
adc
mov
or
and
out
jecxz
push
cli
jg
insb
xor
inc
in
cmp
and
inc
test
out
or
std
es
add
pop
xchg
ret
inc
mov
and
das
inc
ljmp
mov
or
mov
jge
pop
xchg
and
mov
sub
loopne
loopne
cltd
daa
jp
xor
adc
cmpl
add
insb
popa
mov
mov
add
repz
aad
inc
adc
jb
xchg
rorb
loop,pt
in
cmp
add
mul
xor
pop
inc
jl
cwtl
mov
inc
or
and
dec
aad
sub
pusha
outsl
xchg
test
mov
rolb
dec
mov
pop
fwait
mov
loope
sbb
mov
ljmp
mov
mov
or
jbe
out
mov
das
mov
mov
leave
fsubs
cltd
fildll
clc
mov
popa
in
push
shl
pop
and
add
add
ret
ret
test
jmp
adc
stc
dec
dec
mov
jbe
out
fs
add
sub
pop
cltd
push
clc
or
inc
mov
xor
mov
sub
mov
arpl
xchg
das
add
arpl
push
cmp
adc
enter
mov
mov
insl
fcmovb
sub
xchg
outsb
es
loope
dec
cmpsb
push
pushf
pop
mov
and
pop
jecxz
jnp
bsr
test
bound
sbb
into
push
loop
hlt
or
pop
adc
ret
daa
mov
mov
aaa
fildl
or
pop
jl
xor
or
cmp
loopne
pop
mov
sarb
dec
mov
xor
popf
lret
add
popf
test
adc
dec
and
mov
aam
lds
lds
lea
pop
rcrl
or
decb
enter
pop
push
loop
pusha
lea
cmp
adc
outsl
or
xchg
pop
ja
add
daa
js
fidivrs
ret
push
sbb
scas
loop
and
mov
mov
mov
aaa
andb
nop
aas
aam
xchg
data16
std
dec
shl
mov
ds
jecxz
add
add
jb
rolb
out
adc
push
enter
sub
js
mov
xchg
dec
sbb
dec
sub
adc
stc
inc
sub
js
repnz
mov
inc
push
sahf
sarl
ljmp
pop
in
mov
loopne
jo
aas
pop
mov
rcl
stos
push
xor
rcrb
or
jmp
pop
or
gs
pop
testb
cmp
xlat
dec
adc
lock
outsl
rcrb
lcall
dec
jns
dec
repnz
ljmp
inc
int3
pop
in
mov
into
adc
lods
adc
jnp
jo
push
mov
and
stos
out
cwtl
icebp
lock
pop
mov
scas
aad
stos
addl
fcoms
pop
gs
testb
jno
dec
push
icebp
dec
popa
cld
xor
call
repz
xlat
dec
ret
mov
xorb
jb
stos
or
aas
insb
and
sarl
mov
test
pushf
xchg
repz
scas
push
push
int
movsb
jo
lods
add
sbb
jo
xor
or
stos
ljmp
jmp
push
popf
add
or
fmuls
mov
lds
cmp
push
mov
testb
pop
xor
test
add
les
int3
xchg
xchg
dec
outsb
jne
mov
fs
mov
mov
mov
add
mov
cmpsb
ja,pn
addr16
repz
mov
adc
mov
inc
inc
cmp
jno
cmp
ret
adc
ss
je
mov
add
or
adc
push
push
std
push
xlat
test
gs
arpl
mov
xchg
aam
iret
cltd
adc
push
in
jge
adc
in
mov
xor
jns
imul
jmp
mov
scas
fisttpl
out
jno
push
pop
aas
or
nop
and
xor
jb
lea
push
in
lret
call
mov
mov
sbb
stos
sbb
mov
js
xchg
jp
subb
nop
mov
xchg
push
jo
loope
jecxz
xchg
rclb
sub
cmp
push
ret
pop
movsl
dec
or
mov
sbb
lock
mov
cmp
mov
insl
dec
lods
frstor
xchg
mov
fcompl
cltd
ljmp
jbe
test
xchg
inc
es
xchg
dec
jb
cmpsb
rclb
sarl
out
int
pushf
cmpsb
inc
xchg
mov
int
stos
jo
sub
push
xor
or
cmc
xor
or
popa
in
xlat
or
insl
dec
into
xchg
cltd
fmul
ljmp
sbb
xchg
enter
xchg
mov
mov
in
leave
inc
aam
fldcw
in
jb
sbb
dec
scas
jge
test
cmovo
push
cmp
xor
inc
cmpsb
pop
and
inc
pop
mov
push
mov
and
sbb
test
ds
xor
add
lret
xchg
jns
cmp
movsb
cmc
std
inc
popa
ljmp
jae
sahf
xor
jne
js
cmp
std
lret
xor
mov
inc
inc
subl
lock
imul
fnstcw
cltd
push
call
cwtl
in
imul
outsl
jb
in
adc
repnz
sti
dec
bsf
loopne
mov
out
cmpsl
clc
rclb
dec
mov
inc
or
and
ljmp
sbb
std
cli
jnp
leave
aas
sbb
or
dec
test
into
pop
je
mov
add
ja
sub
push
fildll
push
add
repz
das
in
scas
js
lods
stc
adcl
mov
cmp
xor
in
and
push
es
cmp
adc
iret
ss
push
stc
cmp
sub
loop
sbb
loopne
ret
and
cwtl
jecxz
out
xchg
inc
repnz
js
push
cltd
shr
or
js
adc
sbbl
sti
shll
out
clc
test
lods
sub
xchg
dec
lret
cltd
xchg
lret
mov
mov
mov
aaa
mov
imul
push
lds
cmc
jp
cmpsl
repz
push
add
movsl
gs
insb
in
lret
test
fadd
inc
lret
das
cmc
pop
in
jb
and
pushf
out
fmul
adc
int
scas
cmpsb
inc
jno
insl
jmp
popf
in
sti
rcl
iret
and
mull
andl
adc
insl
enter
mov
idiv
mov
mov
cmpsb
fs
shrl
cli
loopne
scas
pop
pop
mov
sti
das
pop
scas
sbb
xchg
pop
dec
jo
push
int
jecxz
sbb
cmpsl
int3
mov
arpl
rclb
xlat
test
adc
fld
addb
in
sbb
ja
mov
push
lods
and
mov
lds
pop
out
fs
cmpsb
mov
sbb
sbb
mov
dec
adc
mov
cmpsb
imul
pop
pop
adc
imul
xlat
xor
mov
push
mov
mov
test
in
popf
scas
xchg
lcallw
data16
cmp
mov
or
jno
push
inc
sub
jb
repnz
add
cmp
movsb
xor
inc
or
enter
push
pop
mov
iret
scas
lcall
mov
sub
bound
out
sbb
test
mov
xor
das
xchg
pop
pop
fcomi
test
mov
cli
xorl
sub
cmp
outsb
xchg
inc
mov
mov
gs
stc
pop
insl
sbb
lea
iret
jo
insb
xchg
and
mov
adc
mov
or
icebp
push
imul
pop
mov
outsb
and
scas
sub
xchg
pop
push
fsts
sub
dec
ja
stc
jle
out
xchg
push
out
pushf
pop
and
mov
mov
mov
dec
adc
xchg
push
out
jb
imul
fistpll
add
ret
xlat
lock
insb
mov
iret
call
and
mov
sbb
sub
push
sub
or
shrl
push
and
mov
or
popf
inc
xchg
pop
push
adc
out
int3
jg
cmp
jl
inc
popa
iret
xchg
add
enter
rclb
lods
mov
aaa
daa
or
jbe
imul
sbb
aam
sub
mov
push
add
pop
pop
scas
ret
stos
xchg
in
jmp
mov
sub
movb
cmp
pop
hlt
je
xor
push
xchg
call
sub
js
jecxz
xchg
fsubrs
sub
sub
ljmp
add
bsr
or
xor
shl
rorb
mov
loope
cmc
call
inc
pop
stos
push
xor
mov
sbb
adc
cwtl
fcoms
ljmp
in
bound
inc
xchg
pushf
ret
and
inc
pop
lret
iret
inc
shll
dec
jo
xor
xchg
call
cwtl
dec
fildll
aad
inc
rolb
arpl
lret
jp
cmpsl
bound
xchg
call
cld
push
jno
mov
in
inc
mov
ljmp
inc
ss
xchg
pop
out
and
sbb
or
imul
mov
nop
xchg
dec
cmp
cmpsl
jbe
push
inc
and
jg
aaa
xor
cmp
out
add
call
pop
dec
cmpsl
repz
addl
or
cltd
repz
push
push
pop
fistps
adc
mov
rcr
pop
pushf
cmp
cmpl
push
xchg
adc
or
jae
mov
data16
dec
call
jecxz
fsubs
and
and
push
std
add
adc
hlt
or
popf
outsl
imul
cwtl
dec
flds
adc
cmpsb
xchg
mov
sub
xchg
outsl
and
adc
dec
or
in
aaa
adc
stos
sahf
inc
cmpsb
jecxz
jbe
mov
clc
sahf
in
adc
notb
or
aas
adc
in
add
insl
sbb
cmp
mov
cmp
inc
sub
aam
jnp
sbb
cs
dec
sbb
out
xchg
or
cmp
mov
hlt
std
iret
sbb
sbb
jbe
sbb
push
insl
nop
test
jp
dec
stc
mov
jmp
mov
pusha
pop
dec
lods
adc
stc
mov
call
pop
fstpl
jne
aad
int
xlat
mov
mov
cmp
push
push
sbbl
adc
orb
cmp
push
sbb
cmp
jb
clc
or
sub
repnz
lret
test
movsl
outsl
enter
gs
sti
xor
pop
jecxz
jb
rcrb
sub
adc
ret
mov
cmp
xchg
jp
repz
push
xchg
bound
out
adc
imul
mov
mov
jbe
mov
mov
jle
jle
push
sbb
cmp
and
subl
stc
cld
adcl
push
dec
movsl
clc
mov
push
inc
loopne
or
xchg
or
or
lods
mov
pop
xlat
mov
pop
adc
ret
jecxz
dec
loopne
enter
cwtl
rol
push
in
test
mov
sbb
jecxz
divb
jnp
lcall
cld
stos
mov
xor
xor
pushf
out
sbb
jne
push
fnstsw
cmp
aad
xor
mov
mov
enter
orb
subl
xchg
out
mov
pop
mov
jecxz
pushf
inc
lahf
add
shl
pop
push
incl
dec
adc
mov
jo
mulb
mov
sbb
scas
jne
jge
pop
adc
mov
enter
js
insb
mov
hlt
xchg
xchg
ficoms
mov
mov
and
ja
mov
mov
xorb
test
test
xor
dec
mov
cmp
pop
xorl
loop
xchg
jbe
shlb
notrack
aaa
nop
cwtl
mov
inc
push
neg
inc
cmp
int3
push
jmp
lods
lcall
out
push
pusha
std
sub
push
dec
lock
pop
lcall
repz
fdiv
add
push
stos
push
movsb
mov
or
mov
cmc
outsb
push
frstor
push
xor
lret
and
or
out
cwtl
icebp
and
lret
aad
push
mov
aaa
jae
adc
fucomp
ja
dec
jns
mov
loopne
adc
popa
outsl
jmp
cmp
out
sub
add
test
sbb
ljmp
ficoms
mov
movsb
xchg
ja
jl
adc
dec
push
sbbb
mov
sbb
xchg
push
mov
push
push
lahf
lret
cltd
mov
mov
push
and
out
jns
add
loop
and
xchg
movsl
push
lea
xchg
jge
hlt
ja
sub
movsb
hlt
out
pop
pop
or
popa
insl
and
push
dec
sbb
and
adcl
in
push
flds
enter
fidivl
cmp
cld
cmp
sub
mov
or
push
nop
ljmp
xchg
dec
sahf
mov
mov
inc
popf
push
popa
xor
inc
xor
subl
dec
xor
repz
mov
jb
cwtl
cmp
sti
inc
xor
xchg
inc
lock
popf
and
test
je
jle
add
xor
adc
dec
push
jmp
call
out
movsl
subb
jmp
and
inc
cwtl
out
mov
inc
cltd
cwtl
inc
cmp
cmpsb
dec
mov
sbb
mov
sub
jne
jp
daa
mov
pop
cli
or
pop
push
inc
push
pusha
sbb
loop
mov
lods
dec
dec
out
fs
imul
popa
ss
lahf
test
int3
leave
sarl
mov
sbb
fimull
mov
into
out
jno
lahf
add
mov
sbb
add
inc
sub
cmc
cmc
push
cld
fsubs
andb
jo
adc
add
arpl
adc
test
clc
fwait
push
jge
je
mov
push
add
lods
lcall
fs
lret
jecxz
sbb
fs
dec
divb
ljmp
stc
repz
push
dec
jbe
push
test
cmp
repz
push
sar
dec
mov
xor
rclb
mov
cs
es
out
mov
das
push
inc
or
mov
mov
dec
push
ret
and
shrb
mov
jle
cld
jmp
cltd
jo
xchg
push
rcr
and
fisttpll
scas
nop
dec
addl
cs
out
xor
mov
cmc
mov
mov
inc
sbb
pop
mov
test
ss
sbb
in
sti
adc
cmp
fs
mov
enter
push
stc
cmp
in
repz
or
and
dec
dec
mov
adc
mov
sub
xchg
pop
incb
jbe
mov
mov
jnp
rorl
incl
mov
dec
push
dec
sub
adc
cmp
fadds
fisubrs
mov
enter
dec
ficoml
cmp
movsb
hlt
mov
popf
xor
aaa
ret
stos
fisttpl
fbstp
sbb
xchg
mov
lret
and
cwtl
fiadds
inc
or
inc
pop
xchg
and
add
shrl
popf
lahf
mov
sub
sbb
pushf
adc
mov
pop
lret
scas
sub
inc
or
add
lds
xchg
xchg
sbb
lods
fisttps
dec
test
and
jle
pop
jge
std
adc
enter
inc
sbb
xor
sbb
inc
scas
or
pop
fiaddl
neg
movsb
lock
iret
rcrb
loop
sub
push
pop
push
mov
inc
xor
adc
adcb
sarb
popf
jo
out
sahf
mov
inc
xchg
dec
out
sub
jge
inc
jo
sub
leave
mov
mov
fstpt
in
test
ffreep
iret
rcrl
shr
iret
sub
inc
movsl
shlb
sarb
out
es
adc
out
leave
jge
bound
cmp
aam
pop
mov
lcall
xor
clc
into
pop
cmp
cltd
pop
insl
xchg
dec
pop
and
sar
adc
mov
cld
xchg
adc
aad
ds
mov
movsb
add
mov
sbb
sbb
mov
test
pop
xchg
cwtl
xor
ljmp
jg
es
jmp
dec
inc
icebp
je
out
or
adc
sbb
ds
xor
fbstp
push
mov
or
jo
lret
pop
shr
into
mov
es
cmpsb
xchg
jge
mov
pop
popf
insl
lods
inc
cli
repz
mov
insl
mov
and
xor
out
sub
push
mov
stos
mov
xchg
pop
into
or
ret
pop
add
xor
inc
mov
gs
pop
lret
mov
cld
xor
inc
bnd
cmc
or
adc
xor
sbb
divb
xchg
sbb
xchg
imul
lret
pop
js
jp
jns
fwait
cwtl
sbb
inc
sahf
xchg
out
incb
outsl
shll
cs
push
jnp
imul
add
pop
jns
cltd
jle
pop
outsl
daa
lret
repnz
jl
nop
xlat
inc
outsb
pop
mov
enter
jnp
loopne
lahf
pop
mov
popa
rcr
sub
rcll
jmp
and
sub
inc
adc
dec
shrb
movsb
out
mov
iret
cmp
lcall
push
testb
sbb
icebp
repnz
lock
leave
or
and
mov
lock
pop
aaa
jmp
xor
cmc
xor
aad
cmp
mov
push
jb
sub
out
push
addb
in
pop
mov
ja
ss
jmp
ret
pop
adcl
ds
sub
cli
out
push
jecxz
lods
adc
int3
clc
inc
jae
ds
mov
add
fistpl
popf
mov
jg
push
mov
es
int
in
add
cmp
dec
out
cmpsb
test
mov
sbb
mov
repnz
fdivrs
pop
call
enter
stos
pushf
push
dec
sub
pop
sub
mov
adc
arpl
push
in
cmpsb
js
out
mov
or
inc
or
lea
imul
jl
repnz
stos
fnstcw
test
outsl
lret
in
push
mov
inc
shrl
ss
ret
divb
xorl
js
repz
aaa
mov
pop
stc
fisubrl
inc
jp
orl
jo
mov
dec
mov
out
jnp
out
lods
enter
andl
loope
ret
adc
xor
cmp
sbbl
xchg
mov
ljmp
ja
int3
pop
xchg
mov
stos
scas
mov
jb
and
jmp
pushf
sub
inc
cmp
xchg
aaa
or
lret
push
cmp
mov
movsb
mov
aad
adc
xchg
mov
fwait
iret
pushf
and
push
repz
ret
xorb
sub
push
iret
pop
jle
push
lret
push
popf
pusha
in
pop
fcmovne
and
cmpl
push
divl
cmp
mov
push
adc
sub
push
xor
sbb
and
out
mov
subl
fistpl
sub
js
cltd
sahf
in
or
ret
push
sti
cmpl
or
incb
leave
movsb
pop
in
cs
sbb
adc
aad
sbb
ja
out
fsubr
sub
adc
jge
not
mov
mov
push
dec
push
push
aaa
pop
inc
and
inc
sub
mov
xor
mov
xor
filds
sarl
inc
pop
nop
mov
addl
dec
pop
popa
jae
stos
cmp
lahf
stos
pop
pop
xchg
sti
aam
rcll
sub
push
pop
lock
shl
inc
lods
lock
xchg
cmpsb
xor
inc
outsb
mov
stos
and
sbb
mov
adc
mov
mov
mov
out
mov
repnz
adc
mov
int
xchg
ud1
mov
lock
add
push
cmp
into
sub
pop
jne
inc
pusha
and
test
mov
mov
mov
push
scas
adc
test
sbb
nop
out
mov
or
sub
mov
stc
push
and
xchg
jg
mov
fbstp
jno
repz
and
jns
dec
sub
clc
pop
push
int
test
mov
inc
xlat
pop
add
filds
xor
inc
pop
pusha
dec
inc
popa
cld
or
faddl
nop
mov
push
stos
fdivl
test
cmpb
mov
inc
shrl
in
bts
jmp
xor
stos
inc
push
es
pop
fsubl
ret
pushf
ljmp
loopne
xchg
aaa
popa
and
outsb
andb
sbb
incb
aaa
mov
iret
in
sub
shlb
sub
jae
mov
pop
and
xor
mov
jge
push
xor
loope
xchg
and
daa
imul
aad
xor
lods
pop
adc
push
push
jnp
test
addr16
sar
and
xchg
add
sub
stc
inc
xchg
lods
imul
jg
ror
sarl
mov
ljmp
pop
cmp
push
dec
mov
adc
inc
fsubr
push
in
mov
sti
or
push
sub
test
lcall
lar
mov
jle
dec
pusha
shrb
inc
mov
adc
mov
stos
sbb
js
xor
sbb
pop
pop
test
iret
xor
aaa
adc
icebp
jl
movlps
cmp
or
fdivl
mov
jo
call
fsubrl
ja
repnz
jb
fidivrs
lods
jmp
sbb
xor
xchg
mov
mov
aaa
or
inc
adc
scas
pop
inc
sbb
push
xchg
hlt
jnp
mov
cmp
sbb
jle
call
pop
and
js
lock
dec
orps
mov
movsb
cmc
pusha
cli
cmp
xor
insb
adc
mov
sbb
iret
and
xchg
jae
and
mov
sub
movsb
mov
sbb
int3
popf
jns
int
repnz
mov
mov
jle
outsl
cmp
imul
xor
xchg
rorb
jae
into
arpl
out
dec
sti
and
push
xchg
test
je
outsb
scas
int3
adc
xor
ljmp
and
call
adc
mov
adc
jbe
mov
add
cmc
add
cmp
and
push
cmp
cmpl
sti
js
fdiv
sub
mov
mov
test
mov
and
xlat
in
cmp
fcomip
or
dec
push
push
popa
mov
pop
adc
sbb
adc
push
scas
push
pop
push
jl
mov
enter
sub
sbb
pusha
outsb
jp
ret
jne
cld
xchg
loop
ret
pusha
sub
cmp
pop
fwait
cld
jmp
xor
mov
clc
out
aam
lods
mov
xchg
mov
xchg
call
mov
fcmovne
or
inc
mov
or
sbb
fs
add
sarl
inc
out
les
dec
jge
mov
rcr
inc
jbe
cmp
inc
testl
mov
cli
fsubr
mov
inc
push
cli
test
repnz
and
or
mov
xor
mov
jp
cltd
mov
dec
loop
test
orl
cmp
jo
adc
pop
pop
addr16
out
cmpl
imulb
insl
aaa
ret
jno
or
icebp
sbb
add
jmp
loopne
xor
inc
xchg
bnd
loopnew
cmpsl
dec
or
mov
add
add
adc
sbb
imul
xor
ljmp
mov
outsb
shr
mov
fcomps
push
cmp
fstl
in
dec
and
scas
or
stos
adc
jno
and
push
jbe
xchg
fwait
call
mov
popa
sbb
lret
dec
insb
ds
dec
inc
es
out
sbb
stos
jl
lea
in
mov
sub
inc
addr16
mov
out
je
adc
mov
dec
mov
addb
sbb
mov
xor
popa
mov
jo
mov
jg
stos
xchg
test
jge
jno
sbb
mov
jo
inc
fstpt
sbb
dec
pop
leave
sahf
lcall
and
sub
inc
mov
jle
or
syscall
adc
push
pop
xchg
push
ret
in
insb
pop
xor
lods
mov
cltd
lea
mov
pop
mov
sbb
incl
add
jl
das
jnp
lcall
mov
jne
cmpsb
int
aas
mov
pop
mov
ss
je
mov
mov
adc
lods
adc
or
push
mov
mov
xchg
xchg
adc
movsb
and
xor
inc
mov
dec
insb
adc
or
adc
pusha
test
mov
pop
mov
ret
je
sbb
xor
dec
inc
dec
mov
jg
imul
adcb
cmpb
cwtl
rcll
push
lods
and
stos
pusha
ret
movl
idivl
adc
add
push
sbb
cld
sbb
clc
pop
xor
xchg
mov
mov
out
jp
dec
sar
xchg
jne
pop
lds
jle
cmp
fscale
add
outsl
mov
test
je
arpl
fcmovne
lcall
sbb
pop
or
mov
loope
cmp
ret
pop
aas
scas
sbb
lea
sub
dec
cs
data16
fisttps
pop
lret
gs
mov
enter
mov
jp
icebp
adc
mov
loop
sbb
fidivrl
push
pop
addr16
rol
xchg
mov
pop
push
xchg
test
and
cmc
sbb
mov
push
fldt
rcll
dec
or
push
sbb
jo
xchg
mov
loopne
das
gs
mov
push
lods
xchg
ljmp
push
pushf
sub
iret
push
das
test
inc
or
xor
jp
aas
aam
lds
cmpsl
inc
pop
aas
imul
mov
dec
shrb
sub
xchg
add
in
nop
dec
adc
jle
jle
enter
fs
cs
outsb
negb
hlt
mov
cmp
dec
faddl
clc
mov
cwtl
jne
lahf
stc
mov
or
mov
pop
lret
mov
cmp
xor
push
mov
mov
aaa
mov
cmpsl
xchg
add
pop
mov
out
icebp
out
jecxz
lret
xchg
shll
mov
push
lods
add
inc
xchg
sbb
scas
and
xchg
cs
out
xor
out
mov
repnz
lahf
jbe
dec
imul
and
ljmp
pusha
out
aas
sbb
or
stos
data16
sbb
pop
jle
lret
in
bound
and
arpl
outsb
lret
pop
sub
mov
mov
cmp
mov
add
shll
mov
rorb
ljmp
xor
cwtl
aaa
and
sub
mov
imul
dec
jmp
mov
sub
xorl
iret
negb
mov
lahf
lret
xchg
push
xor
inc
lds
stc
or
and
push
test
or
fdivl
mov
lcall
aam
pop
shrl
fst
leave
inc
pop
sbb
mov
fdivs
in
and
mov
sub
cmp
pop
mul
nop
mull
dec
adc
push
shlb
xchg
and
mov
sbb
addl
pop
lahf
pushf
divb
cltd
sbb
sarl
add
popl
mov
pop
inc
je
popf
or
insl
mov
icebp
insb
shll
jbe
sti
dec
aad
cs
inc
rep
lahf
in
fisubs
push
out
adc
and
test
addr16
push
push
mov
fistps
jp
fwait
daa
xchg
mov
popf
xchg
pop
ss
mov
idivb
add
mov
sbb
mull
xchg
cmpsb
push
cs
fcoms
mov
adc
rcll
mov
shrb
fcoms
push
pop
stos
jns
lret
push
int3
jg
nop
adc
jg
pusha
in
jo
cmp
jecxz
lret
fisubrl
adc
les
bts
ss
int3
or
movsb
cmpsl
or
aad
or
push
push
jecxz
sbb
test
mov
sbb
cmc
and
xchg
fcmovne
jg
xchg
push
int
or
push
sub
in
sti
or
stos
pop
imul
out
fisttps
dec
dec
mov
addr16
push
enter
ret
lock
or
mov
shlb
mov
enter
cmp
dec
pop
hlt
xor
add
jbe
mov
movb
push
and
add
mov
and
div
sarb
mov
push
mov
jnp
sbb
cmp
mov
xor
je
jle
jmp
mov
fcoms
inc
cmpl
icebp
jb
mov
jbe
dec
inc
fidivs
scas
mov
adc
add
lcall
push
add
dec
cmc
sbb
mov
int
inc
push
cld
sbb
fldl
or
add
test
cmpsl
inc
sar
jae
sti
push
fcompl
loopne
or
lea
out
jb
sub
mov
test
jmp
in
push
adc
mov
outsb
lret
and
mov
pop
inc
mov
jg
int
jg
leave
adc
cmp
nop
enter
adc
add
fstpt
daa
scas
and
out
and
les
add
inc
mov
sbb
push
sar
or
sub
pop
orb
mov
mov
and
fidivs
lock
cli
xor
inc
jae
movsb
mov
mov
rorb
aam
jne
loope
test
inc
out
inc
out
pop
push
xchg
dec
mov
cmc
cmpsl
loopne
inc
push
sahf
add
add
add
xchg
mov
add
adc
sub
addr16
sub
sub
rorl
dec
subb
test
jmp
pop
cwtl
test
fmull
pop
mov
adc
jp
cmp
inc
js
fisubl
test
pop
jae
fcompl
mov
js
jl
inc
jo
data16
push
in
add
push
and
mov
ret
inc
and
sub
sbb
dec
sar
ret
pop
mov
adc
jmp
pop
cltd
lret
fnsave
sti
jle
sub
mov
sub
xchg
sub
xor
add
or
mov
mov
out
jno
mov
adc
int
movsl
sub
mov
dec
cwtl
add
stos
aaa
dec
es
lahf
mov
xor
mov
mov
xchg
dec
pushf
xchg
mov
xchg
insl
pop
cmp
ret
shll
sbb
add
inc
lock
pop
std
addr16
xchg
sub
inc
js
fstpt
cmc
adc
lods
sbb
insb
pusha
add
repnz
call
loop
mov
push
jecxz
inc
jl
adc
imul
pop
cli
fidivs
in
adc
dec
sbb
add
js
mov
jb
inc
and
fmul
inc
out
ss
jmp
cmc
ficomps
xchg
cli
adc
cmc
outsl
out
fsubrl
inc
aas
mov
and
pop
pop
sub
push
push
clc
dec
test
mov
loop
inc
das
scas
into
leave
jecxz
andb
pop
fwait
jne
cld
test
lds
jbe
mov
rcrl
imull
adcl
jecxz
hlt
adc
ss
repnz
sub
mov
pop
cmc
sbb
in
lahf
loope
in
xor
out
out
fstps
ljmp
sbb
loopne
mov
idivl
jecxz
lea
push
rorb
cmp
hlt
clc
inc
sbb
inc
add
mov
inc
lds
mov
add
pop
add
jl
popf
or
js
lret
or
xchg
loope
sub
test
jne
inc
pushf
shr
ret
push
push
push
movsb
arpl
arpl
insb
pop
add
add
cmp
sbb
inc
adc
aas
fsubs
int
cmp
inc
pusha
inc
fildll
in
pop
shl
sarl
xchg
je
das
add
and
arpl
pop
dec
dec
sbbb
lret
mov
pop
mov
cwtl
dec
lcall
test
jg
mov
lock
adc
cwtl
sub
adc
jle
in
xchg
sbbb
fmul
loopne
dec
mov
clc
and
jmp
inc
xorl
or
test
lcall
jecxz
push
sti
outsb
push
loop
sub
cmc
ret
rcr
inc
lcall
sub
jbe
sahf
lahf
test
fsubrs
scas
pop
popf
aam
sbb
shrb
mov
sti
lds
out
and
lds
inc
or
cwtl
pop
in
inc
sub
je
test
jbe
out
roll
xor
bound
ljmp
inc
pop
repz
mov
mov
shlb
scas
or
push
sub
mov
dec
jle
adc
inc
sbb
aas
outsl
pop
outsl
mov
bound
jnp
popf
jbe
jbe
gs
push
iret
xor
lds
pop
fdiv
aas
pop
jno
in
jne
and
inc
lcall
sbb
and
sbb
fsubl
inc
sbb
shrl
cmp
jecxz
add
pusha
fisttps
lret
cmp
push
lcall
gs
push
ficompl
push
test
sub
add
stos
cmp
sub
inc
loope
movb
mov
lahf
adc
cmpsb
and
pusha
daa
cmp
xchg
xor
gs
xor
adc
fistl
daa
int3
mov
fs
push
push
dec
sub
cmp
mov
out
out
cmp
out
out
ss
shll
dec
sahf
rcll
adc
and
lahf
fimull
mov
xor
xchg
mov
pop
xchg
fisttpl
cmp
mov
mov
xlat
pop
jbe
jle
mov
hlt
cmp
pop
pop
shr
add
add
xchg
dec
shlb
rcrl
std
pop
fcomp
lret
cmp
push
adc
and
cmp
mov
mov
out
jg
ss
repnz
add
inc
js
push
mov
in
fs
mov
jecxz
cmpsb
ja
aas
xchg
shrb
sub
pop
inc
fsubs
lea
aam
lcall
pop
lods
pop
mov
mov
je
sbb
pop
sub
fsubl
cmpsl
jbe
push
lds
das
aaa
inc
je
clc
fisubl
enter
adc
xor
inc
sti
repnz
daa
psrad
xchg
in
bound
popa
ret
cltd
mov
in
sahf
mov
mov
pop
mov
xchg
dec
fs
dec
pop
popa
mov
sar
add
shlb
pop
mov
and
jne
mov
iret
push
xchg
inc
or
or
leave
sbb
pop
or
fnstcw
and
adc
lea
or
and
dec
xchg
sti
jg
push
int
mov
jbe
out
add
test
and
dec
stos
mov
push
and
cmp
test
pop
scas
sti
pop
lret
les
pop
adc
aas
cmp
mov
daa
lcall
mov
sub
hlt
popa
das
mov
add
dec
push
into
adc
push
push
and
sub
mov
dec
addr16
mov
mov
sahf
lahf
cmp
sti
push
aad
pop
daa
sub
dec
sbbb
mov
stos
jg
out
cmp
fadds
dec
pushf
movsl
dec
push
pushf
sbb
sbb
sbb
adc
jp
push
jne
stos
out
addr16
sub
test
sub
dec
sub
xor
popa
pop
push
aad
popf
fwait
sub
or
cmp
scas
lds
cmp
push
insl
dec
add
inc
inc
out
lds
and
jmp
dec
pop
xchg
jecxz
sbb
icebp
mov
mov
ret
jno
cli
movsl
shll
mov
sbb
push
lcall
ret
js
jnp
cmp
cmp
shrl
jle
into
push
adc
inc
sub
and
or
jle
scas
pop
in
cmpsb
jbe
jle
pop
push
or
imul
inc
jge
imul
jmp
scas
je
repz
inc
sub
mov
aaa
aas
aaa
push
add
add
sub
addr16
and
scas
fcmove
imull
mov
mov
ljmp
cmp
sub
fstpl
jmp
in
insl
test
sub
fstl
out
jmp
aaa
dec
mov
pop
add
cld
or
jg
adc
in
xchg
jno
cmp
xchg
adc
mov
dec
int
mov
hlt
arpl
lea
push
xor
jle
fmulp
lcall
jl
push
test
adc
cwtl
lcall
dec
mov
inc
sub
or
call
inc
push
cltd
jecxz
push
jmp
nop
pop
in
mov
pop
adc
adc
daa
mov
pop
mulb
inc
mov
imul
notl
pop
notl
add
mov
xor
jns
rorl
bound
hlt
mov
fcompl
dec
cmpsb
ljmp
or
test
cmpsb
imul
out
les
sub
mov
int3
cli
mov
jbe
add
mov
mov
mov
fsubs
and
je
push
test
nop
mov
and
imul
xor
mov
stos
mov
popf
cmp
mov
xchg
js
xor
dec
mov
sbb
rcll
xor
les
mov
mov
in
js
dec
pushf
jb
mov
scas
imul
mov
push
jp
adc
movsb
test
data16
adc
sbb
jnp
sub
das
cltd
pusha
sti
lds
sbb
mov
lret
lcall
mov
sbb
pop
dec
jo
clc
loopne
push
inc
mov
fwait
scas
dec
ds
lods
sbb
imull
adc
daa
dec
imul
jo
sbb
push
push
push
je
out
divb
mov
lds
nop
cli
mov
cmpl
push
mov
add
xchg
js
jbe
inc
jnp
mov
test
sti
mov
loop
add
leave
sbb
and
sbb
test
pushl
add
imul
stos
cmp
push
pop
xchg
cmpxchg
aas
daa
jle
fcmove
int
imul
dec
mov
fidivrs
test
xchg
push
push
jp
out
rcll
mov
fcoms
jnp
mov
sbb
inc
lock
inc
repz
pop
cs
notb
shlb
pop
imul
jnp
push
aaa
push
inc
shr
and
xor
lock
outsb
test
cs
int
imul
lea
movsl
mov
mov
out
add
pop
mov
into
jecxz
lods
jge
mov
into
xchg
adc
decl
mov
mov
jno
js
enter
arpl
pop
mov
xor
loop
inc
cmp
pop
mov
loopne
ljmp
push
add
sahf
scas
cltd
dec
and
push
add
adc
mov
daa
fistpll
pop
cmpsb
gs
cmp
movsb
sbb
add
scas
lods
lcall
daa
mov
jns
cmp
cwtl
ds
sub
mov
loope
rorb
test
push
xchg
mov
aaa
lret
in
sbbl
cmp
jbe
xor
dec
lds
pusha
cli
xor
int3
push
leave
call
movsb
mov
push
lcall
inc
jae
inc
inc
repz
push
adc
hlt
gs
adc
push
nop
push
leave
inc
out
pop
xchg
xchg
xchg
stos
push
out
inc
adc
movsl
xchg
xchg
sbb
in
xchg
mov
in
jp
ret
andb
pop
mov
ja
cmpsl
jne
jne
mov
jbe
xor
jbe
cmp
jno
add
jbe
pop
int3
test
mov
dec
ret
jae
in
outsb
std
inc
rclb
lea
mov
addr16
mov
mov
arpl
addr16
test
push
or
pop
jl,pn
inc
jmp
cli
xlat
hlt
mov
cmp
insb
pop
and
test
aad
mov
mov
xor
pop
std
and
dec
popf
cs
and
or
mov
fyl2x
cld
inc
or
pop
shll
push
mov
popa
shrw
dec
test
xor
dec
cmpsl
cwtl
or
jnp
push
mov
popa
hlt
outsb
in
lret
xchg
pop
pop
or
sub
mov
rorl
and
adc
cmp
aam
add
and
xor
xor
shll
sbbl
pop
sub
jo
jmp
stos
xlat
out
push
push
mov
sbb
sarl
test
inc
sub
insl
mov
sub
xorl
imul
add
cmpsl
push
inc
lea
sarb
jns
dec
out
jge
lret
jmp
testl
jno
and
push
fsubl
push
or
fwait
jecxz
sarl
pop
add
aam
andb
xchg
ja
cmp
jmp
cmp
pop
xor
cmp
add
lods
push
roll
xor
lods
in
sub
sbb
sbb
lcall
xor
mov
decl
mov
out
mov
add
rcrb
xor
jmp
test
or
dec
call
jno
iret
and
and
test
add
shll
mov
xor
sbb
bound
sub
scas
scas
les
ficoms
gs
push
lods
mov
shlb
dec
pop
shl
jp
adc
pop
fimuls
enter
mov
test
in
cltd
mov
xchg
mov
dec
sbb
lret
push
imul
sub
cmp
dec
xchg
outsb
add
clc
inc
shr
lret
aad
inc
jo
pop
cmp
mov
xor
ds
fldenv
pop
adc
xchg
jnp
mov
mov
es
sub
dec
je
je
lret
hlt
sub
je
inc
push
jb
mov
pop
popl
rcrl
std
subl
shll
sub
cld
push
lds
cmp
or
les
cmp
inc
fadd
movsb
insb
cmp
adc
shrl
dec
icebp
dec
outsb
fadds
popf
roll
lcall
test
aaa
cmp
je
or
sbb
cmpl
adc
or
adc
iret
pop
pushf
insl
in
push
mov
inc
stos
push
inc
stc
mov
push
jae
jo
jnp
push
sbb
and
pushf
or
filds
inc
es
xchg
repnz
dec
test
ja
incb
mov
subb
adc
sbb
mov
adc
push
divl
push
adc
mov
out
adc
ficoms
mov
mul
xchg
lret
dec
pushl
mov
sarb
lahf
xlat
outsb
and
in
insb
sub
and
adc
inc
clc
and
add
jb
pusha
pop
jp
cmpsb
icebp
add
push
aam
in
dec
iret
leave
sti
sub
adc
inc
add
and
push
jp
enter
std
les
add
clc
xor
out
sub
rcll
lods
lock
ret
cmpl
pop
test
cmp
adc
adc
cmc
pop
pop
fnsave
js
and
ret
call
cmp
aam
or
loop
xor
inc
cmp
push
cmpsb
jmp
xchg
push
xor
mov
add
inc
dec
adc
jl
icebp
out
push
push
add
test
repz
ret
das
mov
aam
push
pop
stos
sub
sbb
xchg
cmpsl
fcompl
xor
mov
pop
dec
into
lret
xchg
stc
push
mov
xor
insl
jo
mov
xor
pushf
mov
xchg
dec
push
sbb
sbb
std
mov
pushf
es
ret
cs
jnp
cmp
cmpsl
cmpb
push
lea
pushf
repnz
xor
fs
mov
jmp
jo
lds
pushl
mov
sbb
jnp
or
xor
lahf
cmpb
sub
ljmp
les
in
fcomps
ret
or
jecxz
pop
mov
imul
aas
sbb
lods
fdivrs
test
xchg
call
inc
adc
clc
lods
mov
inc
cwtl
pop
mov
in
aam
sbb
push
pop
sub
cmp
mov
push
or
dec
xor
aaa
ja
out
bound
lahf
pop
adc
push
mov
fs
cli
push
mov
test
test
mov
cwtl
adc
iret
mov
pop
shlb
std
scas
test
popl
xor
cmp
xchg
push
mov
scas
or
jp
cmp
rorb
imul
lcall
push
lds
cs
or
jns
ss
aaa
std
std
jmp
out
in
jp
push
jle
cmpsb
bound
jle
pop
shl
int3
pop
push
cmp
jmp
popf
ljmp
repnz
pop
push
orps
scas
dec
sbb
and
fcoml
sbb
shl
or
jne
lahf
pop
cmc
imul
xor
and
setb
lcall
jb
sahf
imul
out
push
cmp
and
xchg
icebp
pop
or
es
test
outsb
jne
mov
test
scas
inc
test
cld
or
arpl
sub
imul
mov
loopne
or
pop
outsl
dec
lahf
mov
scas
or
jge
pop
add
sub
movsb
enter
popa
pop
test
lods
movsb
mov
outsl
xor
and
jne
ss
fwait
cltd
cmp
inc
mov
add
ja
push
adc
cmp
cld
addr16
push
lea
mov
mov
das
out
fxch
pop
inc
mov
pop
xchg
cmp
dec
popa
mov
cmp
dec
rcr
sbb
and
sarb
pushf
movsb
lret
push
fucom
adc
jecxz
add
dec
stc
sbb
push
daa
int
iret
or
cltd
xor
fcompl
lods
aad
imul
in
or
push
sub
icebp
movsl
xor
nop
jle
out
or
int3
aam
xor
adc
int
dec
and
xchg
jge
add
mov
sahf
adc
xor
jmp
mov
xchg
jae
dec
subl
and
enter
addb
fwait
sub
add
mov
cmc
xor
inc
mov
negb
out
inc
jg
dec
sbb
push
jecxz
push
jns
aam
mov
nop
push
andb
mov
cmpsl
mov
cmp
jne
jbe
leave
push
cmpsb
mov
jns
add
xlat
push
int3
pop
fdivrp
dec
fdivl
in
in
sub
xchg
ret
jmp
sub
inc
jae
mov
inc
fstl
mov
sub
movsb
pop
mov
addr16
xchg
pop
mov
xlat
pop
mov
dec
repnz
lods
push
xchg
push
clc
mov
in
xor
jmp
and
mov
mov
lock
jmp
pop
lret
shll
out
cwtl
inc
inc
repz
push
rcll
leave
inc
mov
jae
xchg
xor
insl
into
movsl
sub
lcall
int
mov
lods
sub
scas
gs
jmp
cmp
sbb
push
mov
enter
adc
pop
mov
rclb
int3
push
sub
ja
aad
pop
std
out
pop
xchg
xchg
lret
outsl
mov
xor
inc
sub
inc
cmpsb
cmp
pop
loopne
inc
xor
notl
push
cmp
push
pop
lods
out
cltd
mov
xor
jl
mov
clc
mov
lock
mov
mov
jns
int
mov
pop
mov
pop
push
mov
test
gs
flds
inc
rolb
gs
das
jnp
inc
pop
xchg
fimull
orl
pop
inc
call
fdivs
inc
lds
and
hlt
xlat
cwtl
cltd
das
jg
mov
mov
push
shl
and
cmpsl
dec
out
int
push
sbb
pop
stos
out
xlat
loope
push
cmpsb
in
or
gs
hlt
faddl
cmp
lahf
test
push
mov
cs
call
scas
xor
xor
xor
cmpsb
jae
out
and
test
fistpll
jle
out
jle
enter
rolb
xor
ds
sbb
in
movl
aaa
scas
enter
into
cmp
std
lods
inc
sarl
nop
rorb
out
aam
aad
inc
inc
repz
mov
gs
and
dec
cmp
jle
push
in
sbb
loop
mov
mov
pop
clc
mov
test
aad
mov
out
ds
xor
pop
add
rcrb
mov
push
push
addr16
jmp
aaa
fstps
adc
int3
inc
cli
push
ds
mov
outsl
hlt
jmp
sbb
pop
aas
push
mov
cs
and
loope
jno
dec
lock
mov
xor
icebp
add
jge,pn
sub
mov
mov
js
fstp
push
es
popf
xchg
and
mov
outsb
ja
subb
sarl
sbb
pop
xor
fwait
lcall
xor
aam
pop
mov
jae
lahf
in
cmpsb
js
in
inc
fcom
inc
sub
cld
and
out
je
popa
pop
push
xor
adc
pop
pop
les
xor
pop
or
cmp
leave
inc
aas
xor
mov
es
dec
jne
xchg
mov
xchg
xor
imul
cld
mov
orl
fldt
mov
test
or
jno
inc
add
call
scas
mov
mov
idivl
fnstsw
in
cmpsb
mov
mov
adc
sub
mov
aaa
push
mov
mov
loope
shlb
mov
inc
fidivrs
mov
sub
push
push
sub
pop
push
nop
pop
int3
pushf
adc
mov
jbe
jne
movl
mov
loopne
mov
mov
ja
mov
mov
pop
or
jge
sbb
lret
xor
dec
pusha
mov
les
cmp
and
shlb
dec
push
pop
fsubrs
clc
jl
xlat
push
dec
jae
xor
mov
out
popf
enter
cltd
dec
cmp
sub
dec
inc
sbb
mov
shl
add
lock
sbb
pop
sbb
mov
roll
jo
push
cmp
lcall
push
adc
mov
and
lods
out
jle
aam
mov
xchg
and
ja
clc
mov
aas
outsb
in
xchg
adc
popf
sarb
roll
hlt
push
pop
ss
xor
push
adc
shlb
pop
loopne
test
int3
dec
inc
popa
inc
stos
imul
call
add
daa
mov
mov
adc
push
fidivrs
dec
xchg
test
imul
push
inc
fs
fbld
je
adc
and
xor
imull
fiaddl
gs
daa
icebp
pushf
and
in
sbb
test
aad
js
dec
popa
lds
xchg
sbb
jge
mov
xlat
sub
xor
push
sti
jnp
or
outsl
adc
jmp
repz
in
sub
and
jno
repnz
mov
sub
mov
jns
arpl
imul
leave
dec
outsl
lcall
andl
pop
dec
mov
cmpsb
pop
push
inc
mov
inc
add
imul
xchg
dec
lea
sub
push
imul
xor
rorl
icebp
imul
cmpsl
call
mov
xchg
jle
cld
insb
subl
sub
mov
rcll
jl
adc
insl
into
inc
enter
pop
sub
jae
lock
popa
shlb
and
addr16
test
and
pop
fwait
cmpsl
add
inc
dec
push
mov
out
adc
mov
xor
loope
mov
mov
push
popf
mov
lea
scas
jns
in
pop
sahf
mov
std
in
fidivrl
push
dec
fdiv
jbe
ss
ljmp
xlat
cmp
adc
hlt
add
inc
push
out
or
sbb
adc
cmpsb
icebp
pop
xor
sub
push
ffreep
jle
mov
cmp
lcall
loope
mov
xchg
add
jne
mov
scas
std
repz
ficompl
xchg
cli
jmp
in
xchg
mov
or
outsl
sbb
xchg
outsb
iret
je
fcoml
lods
and
pushf
add
cmc
jns
xchg
cmp
sti
xchg
adcb
mov
dec
jmp
mov
dec
dec
mov
lods
mov
ret
push
cli
ljmp
cmpsl
xchg
negl
dec
sub
dec
inc
stos
aas
outsl
inc
dec
sahf
jge
test
daa
pushf
aam
in
push
and
je
sub
jnp
arpl
push
pop
or
push
lahf
push
pop
movsl
mov
lods
and
movsl
std
push
add
enter
scas
mov
add
cmp
and
jmp
sbb
jne
inc
xchg
arpl
jb
or
dec
sub
je
add
cld
ss
or
mov
pop
scas
push
std
lds
or
dec
les
dec
ret
adcl
pop
mov
dec
into
sub
imul
outsl
adc
mov
iret
in
and
testb
nop
xchg
pop
outsb
movsl
rol
pop
dec
leave
pop
int
call
fsub
movsb
lea
xor
insl
mov
shl
mov
and
roll
xchg
or
jbe
repnz
jg
adc
push
addb
scas
sarl
cmpsl
or
mov
fcomps
fwait
js
inc
outsl
push
add
arpl
outsl
push
clc
xchg
mov
es
clc
aad
jmp
adc
push
testb
and
shll
cmp
imul
std
outsb
cmp
xlat
mov
div
add
lret
aaa
lea
shll
push
out
or
push
rcl
insb
jne
movsb
iret
mov
xor
add
adc
jg
cmp
pop
lahf
pop
jmp
fistpll
mov
jp
dec
adc
insl
mov
lret
ja
rcrl
push
adc
and
jb
lock
sub
adc
arpl
js
leave
mov
ret
gs
popf
cmc
rcr
xchg
bound
jmp
add
adc
cmpsl
push
out
outsl
jl
mov
lods
mov
hlt
mov
les
cmp
jns
push
mov
repz
jmp
pop
pop
or
ljmp
push
pop
sub
fwait
lret
or
inc
mov
pop
addl
adc
sarl
stc
ljmp
enter
les
das
mov
mov
divb
jne
repnz
xor
imul
jge
jbe
mov
in
scas
arpl
jb
sbb
fadds
inc
mov
xor
add
adc
pop
jae
out
jmp
xor
jp
pop
mov
lcall
repnz
cwtl
inc
push
fcomip
jbe
xchg
xor
pusha
pushf
add
nop
mov
xor
inc
or
lret
mov
lcall
leave
cmp
bnd
gs
inc
push
outsl
cmp
dec
push
shlb
mov
push
xor
jge
and
cmp
daa
dec
mov
insl
adc
sbb
jns
sub
andb
add
arpl
out
pushf
adc
popa
lea
pushf
icebp
arpl
adc
inc
addb
adc
jbe
and
clc
aam
test
in
ds
std
shll
inc
and
test
sub
cmc
ljmp
loope
cltd
xchg
pop
or
pop
out
mov
jno
mov
cs
pop
icebp
cwtl
mov
mov
xchg
inc
imulb
pop
leave
dec
roll
cmp
ret
sbb
jecxz
stos
jecxz
data16
hlt
mov
xchg
sbb
xchg
aad
lcall
clc
xor
outsb
pop
nop
push
cmp
sbb
idivl
test
mov
and
jp
inc
cmpsl
add
jbe
mov
pop
pop
mov
lret
cmp
test
int3
push
jns
mov
jns
enter
mov
sub
aad
out
sti
in
std
jge
rolb
cld
sub
mov
cmp
and
pop
cmp
push
dec
push
sbb
movsb
mov
jp
mov
jge
mov
or
fldt
jnp
sub
lea
xor
and
jp
add
sub
jmp
js
data16
cmp
xchg
push
shrb
aaa
push
sti
push
cld
iret
jge
jbe
shlb
push
cwtl
fwait
xchg
enter
xor
out
imul
movsb
or
mov
mull
incb
in
and
fdivrs
mov
outsl
mov
ja
xlat
sbb
add
inc
adc
les
push
xor
scas
mov
dec
frstor
push
push
pop
adc
repz
testb
pop
mov
xchg
les
lods
shll
aas
jae
daa
gs
stos
xchg
sahf
outsl
or
xchg
mov
mov
rclb
and
fdivr
cmp
lock
and
ja
push
xchg
loope
xchg
hlt
cld
mov
je
xlat
lock
int3
and
mov
mov
or
sub
adc
mov
jbe
imul
pop
xlat
inc
rcrb
cld
mov
lods
add
std
in
fidivl
jno
shll
in
push
xlat
xchg
jg
call
mov
les
repz
mov
ficompl
cmpsb
sbb
mov
sti
inc
imul
in
int
in
in
aad
lret
inc
mov
outsl
push
add
add
cmp
dec
clc
shl
fisttps
adc
sub
mov
icebp
cmp
sub
xor
xorb
inc
rol
add
int
icebp
and
sbb
jne
push
dec
cmpsb
xchg
in
roll
push
mov
lds
sub
push
daa
lock
lods
xchg
inc
mov
jbe
movsl
test
subb
add
in
and
loopne
jne
test
sbbl
dec
adc
inc
stc
fdivs
pop
dec
xchg
mov
cmpsb
test
orl
inc
insb
push
stos
cltd
in
push
test
iret
and
fistpl
jg
sbb
je
add
mov
jg
fdivl
inc
sbb
popf
add
test
sahf
ja
lahf
dec
xchg
imul
fbld
popf
add
loop
pop
fdivs
daa
adc
push
mov
mov
aas
mov
gs
xlat
shll
cmc
or
out
mov
es
cmp
mov
sti
and
gs
mov
aad
je
pop
push
xor
push
test
mov
mov
xchg
fwait
lahf
dec
pop
xchg
and
sbb
loop
out
cmp
mov
sbb
jbe
dec
lcall
sbb
shll
popa
ss
sbbb
inc
fdivrl
popa
dec
xchg
aam
or
push
adc
mov
add
insl
pop
xchg
test
int3
aas
mov
push
cmp
daa
clc
sub
das
mov
aaa
mov
push
sub
dec
lods
add
dec
scas
inc
pushf
push
mov
mov
or
outsb
lahf
cs
jecxz
jecxz
xchg
mov
cmpsl
jmp
fyl2xp1
test
jmp
xor
sub
xchg
xor
mov
addr16
jp
pop
mov
leave
jmp
dec
pop
and
cmp
sbb
pop
test
dec
leave
in
int
test
or
sub
jo
xor
stos
pop
jno
sub
scas
bound
pop
pop
xchg
and
ret
cmpsl
xchg
pop
hlt
fcoms
dec
push
in
inc
pop
js
mov
pop
fs
cltd
ficoml
lahf
mov
mov
and
pop
out
outsl
mov
sar
ljmp
inc
mov
nop
push
cmp
add
sub
mov
push
call
int
stc
fcoms
add
mov
andl
xlat
pop
xchg
cli
mov
jnp
jo
adc
test
aas
push
lret
adc
or
xor
mov
ljmp
sahf
cs
adc
push
sub
dec
mov
cltd
pushf
sbb
mov
dec
jae
xchg
xchg
mov
repnz
out
adc
or
pop
cld
test
pop
pop
jmp
jmp
jae
inc
pop
insb
iret
js
sbb
incl
inc
fdivr
adc
xor
out
mov
cs
inc
bound
fwait
jno
pop
loope
cmc
outsb
shll
jg
pop
xchg
cld
es
mov
add
std
sbb
or
not
mov
xor
or
fs
es
inc
sbbl
add
xchg
ret
jno
daa
inc
push
jg
aas
dec
xor
add
adcl
sbb
xchg
push
fnsave
pop
push
ds
mov
dec
gs
mov
stc
pop
or
sti
inc
addr16
les
test
mov
unpcklps
decl
popf
mov
jne
leave
loope
aam
aad
push
xchg
jne
mov
pusha
lods
cwtl
xchg
xchg
out
mov
iret
mov
in
leave
shrl
inc
xor
adc
ret
mov
shlb
push
lock
jmp
adc
push
sub
mov
mov
and
jb
int
add
mov
out
fstps
jle
sarl
out
pop
inc
inc
popf
push
out
jne
gs
cli
xor
mov
sbb
push
lds
cmp
and
ja
xchg
jne
sti
jo
jnp
xor
push
jae
cvtdq2ps
test
daa
and
fcoms
add
xor
or
mov
mov
xor
stc
popf
ret
mov
sub
loop
fsubrp
dec
arpl
lahf
pop
cmpsl
jecxz
and
sbb
lahf
sbb
shll
unpckhps
out
add
mov
lock
fwait
jge
hlt
mov
push
sbb
mov
in
pusha
pop
sbb
gs
dec
in
sti
mov
cmp
jle
lahf
jae
jbe
in
in
adc
fwait
mov
cmp
inc
or
xchg
cmp
add
xchg
cmp
mov
mov
add
jae
les
inc
outsb
inc
sbb
cmpsb
dec
mov
inc
dec
lds
imul
inc
packssdw
xchg
div
mov
xor
insl
sub
or
insb
jle
xchg
je
xchg
pop
and
out
cltd
inc
jg
sub
sub
sub
push
jp
xchg
xchg
mov
inc
setbe
cmp
cmp
pop
push
mov
inc
adc
in
jbe
dec
pop
add
in
jno
mov
mov
iret
shlb
adc
cs
addb
mov
lock
mov
je
ret
loopne
data16
cwtl
inc
negb
and
out
push
daa
and
pop
into
test
mov
movsb
mov
lock
shlb
leave
mov
data16
push
rcll
mov
hlt
sub
cmpsl
aad
add
xor
loope
push
adc
push
fsts
add
sub
mov
out
inc
sahf
outsl
add
push
sbb
xchg
das
cmc
mov
iret
mov
sahf
mov
mov
push
aaa
icebp
lods
adc
popa
xchg
or
dec
call
fwait
js
pop
les
mov
push
xor
and
sbb
lds
add
sbb
jl
jl
loopne
mov
sub
push
movb
inc
fsubl
inc
add
xchg
push
aas
xchg
shlb
adc
and
pop
stos
fildll
fwait
test
movl
push
clc
mov
sub
popa
cwtl
mov
testl
out
xchg
pop
push
xor
jecxz
test
xchg
cmp
pop
imull
or
cld
sbb
xchg
clc
mov
add
dec
jns
ret
dec
pop
xchg
and
test
movsl
mov
sub
xorl
xor
setp
cwtl
inc
ss
sets
in
stos
test
jae
dec
subl
cltd
or
xchg
adc
mov
pop
cmpsb
addl
in
mov
fdivrl
add
int3
push
lret
andb
xor
pop
or
and
clc
push
stos
pop
dec
jle
add
mov
inc
mov
push
sbb
cmc
repnz
and
out
loop
lds
fdivs
loopne
int
jne
pushf
pop
jo
push
push
aas
es
negb
gs
insl
cli
cmp
int
sahf
inc
adc
cmp
jnp
or
mov
dec
dec
addr16
es
mov
xor
hlt
add
subb
out
movsb
das
push
xor
clc
fwait
in
xor
mov
imul
popf
into
jns
push
lock
mov
dec
jae
test
out
mov
std
cwtl
pop
fwait
adc
add
fldl
mov
ret
mov
rorl
subb
popf
fistl
ret
push
cwtl
sub
xchg
cmpsl
xchg
jnp
push
inc
es
lods
add
sbb
sub
rorl
or
and
xorl
fsubl
cmp
xorl
jge
mov
mov
dec
xor
pop
xchg
cli
dec
pop
aaa
push
into
mov
ficompl
ret
cmpsl
hlt
push
mov
fs
pop
insl
mov
jl
mov
or
and
adc
push
jge
jle
sbb
xchg
xor
je
xor
sarl
icebp
mov
jge
inc
scas
ja
adc
dec
cmp
hlt
je
add
mov
cwtl
sub
adc
inc
or
jb
rcll
inc
pushf
movsb
rcll
cmpsb
into
out
cld
insl
movsl
jo
mov
xchg
mov
xor
outsl
sub
add
fdivp
jg
cld
mov
or
jns
add
pop
pop
dec
imul
cmp
inc
fucom
dec
bnd
cmc
push
imul
dec
popa
pop
push
mov
test
sbb
fnstsw
popf
dec
push
adc
arpl
fistpll
pop
rorl
jl
or
adc
cmpsb
add
adc
mov
pop
mov
js
adc
pop
cmp
ja
jge
sub
cwtl
fmull
push
outsl
sbb
enter
xchg
lcall
lret
jae
xchg
inc
cmp
pop
pop
push
push
in
les
jns
call
cmp
in
ds
mov
and
xor
sahf
subl
cmp
int
mov
mov
and
pop
arpl
pop
movsb
push
out
jle
push
adc
pop
cs
shrb
sbb
xor
loop
std
stc
xor
or
fsubrp
jo
loopne
gs
pop
lret
mov
aaa
cld
outsl
push
sub
fs
iret
fwait
jp
xchg
jmp
test
jecxz
or
mov
imul
fcoms
fucomp
mov
out
push
jne
adc
mov
stc
cld
outsl
push
jmp
orb
sti
adc
sbb
loop
loopne
mov
shl
sti
imul
cltd
xchg
jns
daa
out
repz
test
and
js
in
je
jecxz
jno
incb
sub
sub
into
push
fnstcw
adc
repz
xor
dec
int3
xchg
mov
xor
in
add
xchg
inc
xor
sub
sbb
ja
das
sub
mov
gs
dec
mov
mov
repz
js
pushf
push
in
cmpsl
fdivrl
mov
mov
dec
push
loope
popf
cmpsb
aad
add
mov
insl
xor
push
jae
xor
movsl
out
jbe
xchg
xchg
dec
mov
aad
mov
cmp
inc
insl
cmp
cmp
iret
pop
and
xlat
ret
cltd
repz
insl
in
adc
sahf
int3
or
sahf
aam
adc
addr16
or
xchg
cmp
xor
jns
leave
movl
jns
or
or
mov
jecxz
fsub
push
jp
aaa
repz
push
inc
mov
scas
push
fs
pop
or
dec
lcall
lahf
repnz
push
xor
sbb
xchg
fcoms
mov
dec
movsb
cli
or
pop
rcrl
sahf
jp
sub
js
sbbl
mov
orb
lods
jmp
fucom
leave
daa
push
int3
loope
aaa
adc
or
idivb
jnp
and
pusha
mov
pop
push
aad
loopne
movsl
loop
add
cmp
rolb
cmp
xchg
in
test
por
mov
cmp
sarl
enter
push
lret
dec
mov
mov
int
xor
inc
in
das
cmp
jo
stos
je
cmc
int3
push
mov
popf
popf
adc
sub
xor
lods
insl
gs
mov
insb
dec
cmp
jl
jmp
iret
daa
pop
adc
dec
int
pop
dec
in
lds
jae
ret
outsb
cmp
pop
ss
bound
push
jne
scas
mov
mov
repnz
xor
mov
cs
mov
jns
inc
and
sbb
test
and
and
inc
movsb
out
frstor
aas
sub
bound
dec
jge
rclb
or
pusha
repz
pop
sbb
test
and
ret
fists
mov
adc
shl
popf
repz
push
push
xchg
lods
data16
inc
xchg
adc
mov
mov
stos
int
rcrl
es
enter
mov
jle
popf
stos
out
inc
or
push
dec
add
out
add
sbb
inc
pop
std
jle
mov
pop
lahf
cmp
cmp
pop
cmp
cwtl
out
fwait
mov
push
nop
cmc
xchg
test
ret
adc
cltd
stos
mov
or
aas
ret
lds
push
sbb
jle
and
lahf
jns
xchg
xchg
inc
ret
dec
jecxz
jecxz
push
jecxz
fistpll
mov
lret
jge
xlat
mov
imul
das
and
and
and
in
cmp
dec
mov
sbb
and
inc
adc
pop
clc
mov
stos
lret
adc
and
mov
fimuls
lds
lods
push
cld
push
cmc
jl
ret
jbe
push
inc
fdivrl
adc
repz
int3
mov
dec
jno
repnz
stos
iret
popa
lahf
jp
shll
jne
ss
dec
lcall
repnz
ja
or
rclb
stos
rcrb
and
fistpll
and
add
into
ficoml
push
sbb
les
or
dec
cmp
lods
mov
xorl
std
or
push
xor
sahf
je
sbb
js
fnstcw
fistpl
lahf
out
clc
mov
and
loop
test
pop
pop
sub
sbb
xor
adc
aad
subb
adc
mov
mov
nop
mov
pop
mov
xchg
pop
or
mov
imul
rcrb
mov
pop
scas
mov
cmp
pop
xor
sbb
dec
mov
mov
ss
cmp
js
mov
xchg
sbb
adc
mov
mov
cli
mov
mov
jno
inc
mov
dec
jg
sbbl
xchg
icebp
cli
or
nop
jmp
icebp
lds
cmp
adc
lods
pushf
xlat
stos
jne
jmp
xor
outsb
xchg
push
fistpl
gs
sub
xor
faddl
add
cltd
add
xlat
aad
js
xchg
mov
jmp
pop
xchg
push
mov
sti
mov
sbb
ljmp
in
test
fists
scas
push
orl
in
aam
in
repz
loope
lcall
inc
rolb
mov
clc
mov
outsb
daa
sti
lret
mov
fildl
out
int3
and
adc
inc
pop
and
lea
xor
fcomps
cmp
pop
rcll
out
outsl
inc
inc
insl
dec
inc
adc
pusha
jl
out
push
mov
stos
enter
mov
and
push
ja
jbe
aad
mov
je
movsl
lcall
loopne
out
int3
mov
mov
dec
ficoms
mov
cs
addr16
inc
inc
movsl
fisttpl
ss
push
data16
add
mov
inc
fadds
es
pop
cli
push
jo
ja
adcl
push
mov
mov
out
add
daa
ret
pop
cmpsl
jge
dec
cmp
or
mov
out
sahf
add
jg
sbb
add
mov
xorl
or
mov
fsubrl
call
sahf
xchg
call
cmp
lods
adc
or
inc
and
fadds
ljmp
int
mov
fildl
mov
or
push
push
push
xor
push
xrelease
xor
stos
ds
xor
jb
xor
inc
bound
and
and
inc
cmp
cli
xor
adc
fstl
adc
jno
jae
inc
fstpl
xor
dec
pop
sbb
ja
ds
jmp
jo
je
shlb
add
xor
add
fdivs
sbb
jg
mov
pop
sbb
ret
or
and
int
test
mov
dec
sbbb
and
nop
imul
notb
jnp
cmpsb
das
and
mov
mov
mov
push
push
mov
push
inc
stos
sbb
mov
fsubrs
outsl
push
xlat
aad
popa
packuswb
jbe
inc
hlt
gs
and
add
andb
addr16
dec
mov
and
mov
dec
scas
cltd
lcall
fmuls
les
cli
dec
and
inc
fmull
xor
sub
jmp
and
mov
fdivl
nop
xchg
inc
and
sbb
add
pop
subb
xchg
call
outsb
es
lds
addr16
hlt
push
je
es
outsl
into
out
sarb
sbb
outsb
jp
pop
and
sub
aam
mov
mov
mov
mov
xchg
mov
lock
movsb
nop
and
sbb
inc
out
and
lcall
outsl
push
outsb
in
data16
sbb
and
popf
xchg
arpl
call
stos
pop
outsb
es
sub
outsb
xor
std
movsb
sub
js
cli
andb
imul
out
lds
or
mov
push
push
add
jp
jle
jns
clc
inc
xor
je
lods
jmp
push
cld
lea
test
sub
inc
and
insl
scas
jne
imul
leave
pop
dec
jg
or
cs
bound
ret
shrl
das
sbb
mov
sub
add
fistpl
cmpl
add
bound
pushf
sbb
insl
movsb
add
inc
test
xor
push
dec
test
adc
push
notl
lock
lods
negb
sbb
in
and
push
mov
or
inc
cwtl
sub
cmp
lock
repz
push
pop
xlat
push
je
scas
pushf
sbb
jnp
dec
es
jo
shrb
or
jns
sahf
adc
mov
loope
inc
clc
cmp
jne
inc
cs
push
inc
jg,pt
xchg
dec
ljmp
fmull
jecxz
scas
lret
dec
jmp
inc
or
or
jle
jno
sub
lret
sub
lds
dec
cmc
push
repnz
cli
dec
add
movsb
adc
push
pop
sbb
mov
sub
push
push
popa
call
push
mov
jle
jecxz
aaa
jle
les
xor
je
loopne
int
loope
test
inc
jg
sub
fisubl
mov
pop
movsl
in
fwait
mov
mov
mov
and
test
push
aaa
pop
leave
insl
cld
lret
and
lea
mov
mov
fistpl
loope
lret
test
rcr
cmpsb
inc
cmp
out
stos
lock
ficoms
ja
jge
lea
jg
pusha
lds
fst
int3
xlat
mov
mov
mov
in
ljmp
dec
into
outsb
sbb
jns
enter
xchg
push
lcall
test
subb
outsb
inc
mov
or
sub
push
cmc
arpl
xorb
mov
jmp
jmp
in
out
inc
bswap
sbb
pop
rcrb
dec
leave
or
insb
movsl
lock
clc
sahf
scas
ja,pt
leave
mov
cli
mov
clc
mov
xchg
ret
lds
out
jnp
loopne
pop
roll
jle
clc
mov
ret
adc
xchg
or
cli
cmp
fisubs
cmp
xchg
inc
xor
cld
cmc
sbb
inc
repz
adc
sub
rcrl
not
call
ja
loope
push
sbbl
xchg
cmpsl
add
xchg
cli
sbb
push
stos
iret
adcl
mov
mov
adc
dec
mov
leave
jg
dec
les
into
adc
je
add
sti
and
mov
cld
jnp
jge
pop
xchg
clc
imul
and
xchg
xchg
imul
in
cwtl
cld
mov
jge
movsb
test
ljmp
jo
or
cli
adc
scas
jae
xchg
fldenv
packssdw
lret
scas
mov
in
mov
sub
pop
add
std
and
fidivl
stos
popa
inc
movsl
enter
nop
fiadds
mul
ljmp
lahf
cmp
xor
sbb
push
add
out
add
mov
out
mov
sarl
and
hlt
jnp
rcrb
mov
movsl
dec
arpl
scas
addr16
sti
cmpsl
mov
ja
sti
lahf
add
iret
cmp
or
js
jbe
dec
xor
jp
adc
pop
or
mov
xor
mov
pop
je
aad
fldl
mov
xor
inc
xchg
dec
xchg
inc
scas
mov
test
int3
dec
jne
cs
inc
jl
sbb
mov
cli
outsb
dec
bound
hlt
pop
outsb
in
vsqrtps
mov
sub
lret
fwait
andl
cli
adc
jbe
xor
mov
pop
mov
sahf
cwtl
cli
shll
sbb
inc
cmpsl
cmp
sbbl
inc
and
andl
das
movsl
dec
adc
scas
popa
add
pusha
mov
push
cmp
stc
testl
je
xor
fstpt
mov
out
jbe,pt
scas
lock
nop
arpl
leave
push
fwait
popa
rclb
in
lahf
jge
sub
jmp
enter
movsb
mov
std
lea
pop
jecxz
pop
ljmp
lock
push
mov
or
pop
cmp
lods
rol
jge
arpl
dec
or
pop
leave
jge
mov
xchg
mov
adc
cmp
daa
sbb
insl
add
xchg
sub
cltd
and
fcomp
cmp
adc
fwait
and
xchg
cmpsb
xchg
jecxz
lcall
sbb
gs
mov
sbbl
jno
xchg
pop
pop
dec
push
test
and
clc
in
das
xlat
jae
mov
xor
in
push
mov
data16
push
rolb
mov
outsb
lds
and
shlb
in
repnz
sub
pop
sbb
in
gs
cwtl
mov
out
sbb
mov
mov
push
mov
in
sbb
arpl
test
mov
test
cmpl
rcll
loope
and
jns
loope
in
xchg
fbld
push
out
test
lock
sub
orl
xor
repz
addr16
xchg
mov
mov
add
shl
inc
ja
push
cmp
stc
js
icebp
xchg
and
test
mov
adc
shrb
mov
sub
xchg
pop
and
xor
xor
loopne
jns
push
popa
iret
xlat
add
arpl
lea
jo
scas
mov
test
cmpb
lea
cltd
imul
cmp
jge
xor
aas
insb
jecxz
sbbb
sbb
ficomps
scas
xor
push
idiv
sbb
or
push
mov
pop
jnp
fisttpl
scas
or
push
mov
push
jbe
pushf
pop
imul
xchg
popf
sub
fcomps
rcrb
fucomi
add
fwait
push
jecxz
lock
stos
cmp
stc
sub
sub
div
int
mov
cld
mov
add
pop
jnp
test
inc
sub
jp
add
cmp
stc
sbb
jge
fimuls
push
xor
add
in
sarl
sub
fs
lea
cmpb
and
ja
out
and
ljmp
and
sbb
into
enter
dec
sti
stos
jbe
cmp
mov
popa
xor
aam
call
push
sub
sub
outsb
inc
adc
add
in
and
or
jmp
mov
roll
or
mov
inc
add
adc
fwait
lret
adc
daa
fs
mov
xor
jmp
push
sbb
mov
xor
clc
push
inc
jmp
mov
dec
sub
cmp
push
insl
pop
cs
pop
pop
adc
mov
cmpsl
mov
sbb
in
ret
rcll
repz
push
fisubrs
cmp
out
into
mov
in
xor
mov
rcll
lahf
adc
push
and
xchg
xor
mov
lahf
repz
sahf
inc
xchg
sar
fwait
pop
dec
hlt
fs
jns
xor
and
into
insb
imul
sbb
pop
xchg
mov
mov
hlt
inc
mov
sbb
pop
in
gs
cwtl
xchg
out
icebp
pop
push
imul
jbe
and
mov
cmc
lods
push
std
mov
ljmp
test
xor
push
movb
sbbl
push
or
add
loope
pop
push
push
hlt
repnz
pop
jmp
mov
mov
rclb
movd
jbe
rorb
mov
mov
scas
imul
in
mov
cltd
mov
cs
xor
mov
sbb
pushf
das
pushf
mov
mov
mov
fadds
xchg
adc
movsb
out
jae
stos
dec
ss
sbb
in
cmc
mov
inc
or
aas
fnstcw
sub
adc
cmp
cmp
jg
in
cmp
cltd
pop
popf
cmp
pusha
pop
adc
push
mov
mov
in
cld
dec
sar
mov
daa
shll
insb
mov
or
stos
or
mov
testb
in
adc
jmp
mov
shrl
ljmp
adc
xor
mov
jb
xchg
cmpsl
shlb
rcll
xchg
rcrb
gs
xchg
out
int3
pop
idivb
xor
xchg
repz
ljmp
mov
mov
andb
mov
xchg
or
sbb
iret
push
jle
inc
push
std
cwtl
enter
cltd
rolb
hlt
sbb
cltd
mov
out
jno
or
mov
std
or
aaa
les
bound
popa
xlat
xor
enter
gs
adc
movb
sbb
xchg
xor
sarl
sbb
jbe
test
leave
fistl
stos
fmul
mov
ja
mov
cld
push
int3
sbb
fs
inc
cmp
out
sub
push
lcall
sbb
jb
xor
pop
pop
popa
xchg
push
xlat
daa
popf
iret
or
cltd
xor
cmp
adc
cwtl
aas
or
xchg
push
fwait
roll
or
jp
arpl
cltd
out
cmp
mov
mul
dec
sti
sub
push
xchg
dec
hlt
pop
lahf
js
push
mov
loopne
sbb
pop
dec
jne
adc
dec
add
das
popf
xchg
pop
jo
ret
xchg
pop
lret
aas
sbb
fs
jns
xchg
cmp
repz
out
xorl
cmp
fwait
push
push
sahf
and
sbb
outsb
push
pop
mov
cwtl
inc
insl
xchg
jbe
lea
sub
fistpll
mov
and
scas
mov
jb
or
sbb
sarl
adc
mov
in
pop
clc
dec
xchg
cmpsl
in
adc
pcmpeqw
ds
rorl
pop
mov
pop
mov
push
loope
out
cli
cmpsb
sub
pushf
std
data16
jp
pop
jnp
pop
or
dec
ficoms
or
mov
pop
sub
fucom
cli
and
jae
jmp
xchg
push
cmp
icebp
sub
xchg
mov
jle
cmp
or
out
fdivp
ss
enter
xor
mov
mov
sbb
add
jo
pop
cmp
sbb
xor
lcall
jne
in
mov
wbinvd
mov
xchg
xchg
jns
jle
movsl
gs
pop
std
inc
or
imul
adc
shll
jns
test
add
lock
pop
cld
iret
std
xor
mov
xor
push
ret
ret
push
lcall
ret
out
sub
js
xchg
fs
lcall
adc
dec
sub
mov
jae
stos
mov
ss
lret
dec
inc
out
jecxz
push
es
inc
mov
or
push
and
decl
clc
js
mov
sbb
adc
cmp
xchg
fcoms
or
inc
sub
das
jb
int3
push
pop
lods
add
or
shlb
or
sbb
cmp
ja
inc
sbb
ljmp
mov
orl
inc
dec
mov
mov
rorl
push
lods
or
cli
sub
lcall
adc
data16
rcr
jne
nop
out
xchg
push
test
sbb
or
jg
push
mov
pop
xchg
stos
pop
adc
scas
jae
scas
roll
mov
pop
into
mov
add
cmp
sbb
jge
dec
mov
andl
ss
rol
call
rcll
sbbl
cmc
add
pop
dec
sbb
dec
in
movsl
insl
fldenv
mov
pop
das
loope
fcomps
fimull
pushf
xchg
jbe
subl
je
arpl
jp
out
mov
xchg
xor
cmp
pushf
dec
cmpsl
and
lds
xchg
xchg
into
mov
dec
lods
xchg
pop
mov
mov
not
xchg
xchg
xchg
addr16
test
jno
out
jae
sub
test
sub
sbb
scas
inc
cmp
mov
pop
sbb
out
mov
cld
jecxz
andb
cmpsl
cwtl
enter
add
pop
xor
or
cmp
cld
sbbb
and
mov
xchg
daa
dec
sub
or
sbb
into
in
inc
mov
daa
rcrb
aaa
pushf
dec
pushf
pop
mov
out
add
fldenv
test
scas
push
adc
movsl
sbbb
or
int
mov
jae
aaa
js
cmpsl
sbb
leave
add
scas
insl
lret
sbb
cmp
sub
add
xchg
fnstsw
ret
fwait
jno
or
stos
cli
test
sti
mov
fsts
inc
mov
mov
xor
shr
stos
or
sarb
aas
leave
push
xor
ja
ljmp
hlt
les
xchg
and
sbb
lds
and
pop
or
cmp
push
shlb
int3
mov
push
or
aam
dec
dec
sbb
das
sarb
pop
adc
push
xor
lds
mov
jbe
lods
cs
dec
cmpsb
fistps
pop
cmp
inc
sbb
and
lea
ja
push
lock
mov
je
pop
xchg
popf
or
sub
ss
push
outsl
add
jnp
pop
test
fcoms
cltd
ret
fnstenv
mov
add
push
ss
pop
dec
gs
in
pop
and
push
popf
fdiv
sub
add
mov
mov
mov
cmpsb
test
inc
and
mov
push
mov
jecxz
mov
jg
in
fdivl
sbb
in
xchg
and
dec
jg
jnp
divl
dec
roll
ret
inc
test
mov
movsl
adcb
scas
in
in
adc
loope
loop
mov
scas
sbb
add
inc
ret
icebp
or
or
shrl
pop
cmpsl
aad
adc
iret
sbb
ret
lock
imul
int
bound
fists
inc
cwtl
insb
fidivrs
aam
fidivrl
lcall
aad
or
out
arpl
loopw
fdivrs
xor
or
lods
push
sbb
dec
fscale
mov
adc
popf
sub
fistpl
aam
jne
bound
stc
fldl
cmc
xor
add
sub
arpl
call
dec
fistpll
insl
and
inc
popa
xchg
cmp
cmp
aad
cmp
xor
scas
shr
xor
cltd
cmpsl
xlat
push
or
mov
cmpsl
and
dec
dec
mov
nop
shll
or
mov
cmpsl
cmp
cmp
pop
fsubrp
inc
fadd
cs
inc
bswap
and
or
cld
xor
sub
xchg
mov
test
scas
mov
mov
lea
sub
cwtl
aam
insb
cs
jle
push
cmp
xchg
xchg
cmp
lea
sub
mov
and
adc
xchg
insl
cmp
addr16
in
sub
aad
sbb
mov
ds
fcoml
orl
add
les
pop
bnd
push
mov
xor
scas
xchg
and
fwait
js
cmp
les
aam
fstpl
push
adc
dec
sti
push
inc
mov
xchg
dec
push
inc
call
pushw
push
in
mov
enter
ds
loopne
mov
jo
int3
or
jbe
out
fwait
test
sub
sub
cmp
mov
cmp
dec
jg
sbb
cmpsb
adc
jge
add
push
jb
cmp
out
hlt
jg
addr16
sub
mov
push
mov
mov
fiadds
mov
xor
imul
lret
adc
clc
nopl
out
pusha
inc
jmp
adc
test
pop
stos
mov
cmpsl
sarl
push
or
shll
dec
test
mov
sar
push
data16
aad
pop
ja
jns
stos
rolb
mov
testb
in
stos
mov
xor
les
cmpsb
loop
popa
gs
mov
pushf
aad
lcall
mov
mov
sbb
into
mov
lock
lret
ljmp
cli
mov
adc
test
cmp
jne
imul
adc
adc
add
mov
xchg
or
arpl
mov
jnp
xchg
xchg
xor
sahf
test
ret
jns
mov
mov
cmp
and
pop
pop
adc
sar
lea
loope
nop
push
xor
and
stos
cmpb
jno
inc
loope
in
inc
rclb
cmp
adc
scas
jb
lds
push
ds
shll
addr16
sub
out
adc
jmp
bound
sub
fnstcw
mov
dec
sahf
cld
mov
or
in
push
into
out
pop
scas
cmp
imul
je
data16
sbb
test
test
inc
jb
arpl
lds
in
xor
out
xchg
push
pop
dec
mov
out
lcall
push
push
adc
pushf
cltd
scas
lret
adc
test
add
in
mov
and
hlt
jg
repz
jmp
ret
cmp
pop
rorl
xor
jae
mov
xchg
sub
shll
or
mov
adc
icebp
pop
xlat
in
mov
movsl
test
mov
testb
dec
and
add
mov
das
aas
imul
mov
adc
push
and
dec
cmp
out
push
xor
int
cmpsl
imulb
sub
xor
pop
fcmovne
aaa
lcall
inc
scas
pushf
imul
cmp
or
arpl
cs
cld
pop
push
cmpsl
or
andl
sbb
loope
xchg
or
stos
push
lahf
cmp
push
dec
mov
mov
xlat
notb
icebp
ror
call
jo
lcall
mov
jge
xchg
rcrl
xor
inc
ja
add
lods
mov
inc
cmp
cwtl
mov
mov
push
arpl
sub
xchg
sar
shlb
adc
out
clc
push
mov
or
cli
inc
lock
fsubrp
jo
and
in
dec
ljmp
xchg
mov
pushf
fimull
fcoms
cmp
es
mov
dec
xor
add
adc
mov
sbb
out
jbe
or
mov
popf
xchg
cmp
sahf
adc
ficoms
sahf
xchg
xchg
sub
loop
cs
aas
fists
jae
push
call
aaa
push
loopne
inc
dec
jns
clc
and
mov
mov
cld
ljmp
nop
mov
pop
jns
or
sub
idivl
add
push
dec
repz
add
test
repz
movsl
cmc
add
add
lods
add
dec
mov
sti
cmp
xor
imulb
xchg
jg
cmpsl
out
xchg
int3
mov
xlat
mov
imul
pop
lods
jbe
xor
jle
dec
sti
popf
imul
sbb
pop
mov
enter
mov
xor
or
pop
xchg
out
mov
into
sub
mov
andl
sti
and
rorb
mov
cmp
fnsave
pop
dec
adc
mov
cmp
jbe
sbb
std
rorl
sub
jae
ds
iret
sbb
xor
mov
aaa
dec
push
adc
sti
ja
inc
ret
stc
mov
or
adc
xchg
inc
andb
scas
lds
xchg
shll
or
frstor
jmp
gs
fwait
cwtl
sub
dec
pop
sbb
subb
mov
adc
gs
mov
cmp
adc
adc
or
cld
or
sbb
divl
mov
inc
icebp
pop
sub
aaa
adc
sbbl
sub
mov
jae
pop
repnz
loope
dec
loopne
mov
jmp
shlb
mov
mov
pushf
inc
cmp
and
lods
outsl
and
hlt
jmp
aas
loop
xlat
jnp
les
aas
dec
mov
add
xor
xchg
sbb
cmc
jbe
inc
fwait
imull
sub
sahf
popa
xchg
or
mov
fs
add
js
shll
addr16
fisubrl
adcl
inc
addr16
flds
imul
inc
imul
xchg
inc
xor
enter
in
cmpsb
aas
int3
subl
fbstp
call
dec
xor
jl
leave
cmpsl
adc
mov
jbe
test
cltd
xor
push
cmp
mov
cmp
jle
sub
ja
add
psrld
insl
dec
lea
jp
xor
fs
hlt
push
and
add
std
push
into
adc
or
pop
arpl
adc
pop
mov
xchg
mov
fisubrs
pop
ret
jnp
mov
dec
inc
sbb
js
sub
dec
add
jp
jno
or
mov
push
xor
ret
mov
decb
lock
push
jb
aad
push
pop
fidivs
js
inc
pop
pusha
adc
xchg
mov
call
sbb
mov
adc
leave
jb
push
mov
imul
in
pop
int
popa
pop
mov
jae
pop
pop
mov
mov
out
sti
mov
mov
fnsave
or
lods
lcall
jno
stc
add
andl
sbb
pop
es
lods
outsl
fimull
adc
leave
outsb
loop
ds
inc
mov
decl
mov
push
pop
inc
call
scas
cmp
mov
add
fcoml
xchg
add
lret
leave
sbb
sub
push
pop
int
adc
dec
movsb
addr16
cmpsl
leave
xor
pushf
mov
stos
jle
add
add
in
add
mov
scas
shrd
lahf
or
adc
xchg
stos
mov
pop
lcall
outsl
call
jmp
inc
cmc
cld
arpl
imulb
aas
jo
fdivs
mov
dec
aam
sub
adc
aaa
je
ja
and
jae
inc
arpl
cmp
mov
xchg
cmp
jo
adc
aaa
fsubrs
dec
rorl
sahf
cmpsb
jo
movsl
mov
out
or
jle
cmpsb
and
push
jae
or
pop
xchg
clc
fimull
rcrl
lods
mull
clc
add
sarl
add
out
out
addr16
lret
outsl
loopne
push
xchg
insb
mov
ret
je
and
das
add
jo
or
nop
sub
es
ret
cli
and
scas
es
sahf
xchg
fnsave
adc
mov
jle
fstpl
jmp
stc
push
sub
ret
out
test
inc
pop
out
imul
insb
inc
sub
xchg
shll
imull
cmp
xchg
pop
cmp
push
or
rorb
mov
lret
clc
xor
lock
push
xchg
dec
popf
arpl
icebp
popa
movsl
or
addl
lea
mov
cmpsl
leave
rolb
movsl
xor
xor
test
movaps
iret
xor
mov
imul
ja
jl
cmpsl
mov
sub
adc
outsl
scas
sub
dec
loopne
mov
out
mov
jne
fimuls
jle
loop
out
push
shrb
data16
mov
cmp
xor
and
push
adc
and
in
xchg
popf
xor
outsl
enter
call
idiv
add
add
cmp
inc
sub
xor
mov
sbbl
rcll
lock
call
mov
in
add
xchg
test
in
rorl
push
mov
movsl
mov
movsb
sub
int
adc
mov
out
jne
sbb
push
push
xor
out
mov
sbb
cmpsb
mov
shrl
lcall
cmp
pop
cmp
adc
sub
push
leave
daa
stos
sbb
xor
mov
fstpt
jo
fcomip
xchg
xchg
inc
mov
jmp
lcall
pop
adc
inc
xchg
divb
xor
mov
cmp
test
inc
adc
jbe
scas
jle
xlat
ret
mov
call
xchg
arpl
jge
xchg
divl
fisubrs
dec
xchg
pop
sbb
cmpb
mov
rolb
addr16
xchg
jg
mov
fistpl
jb
jnp
dec
ret
jne
out
lds
jns
jo
es
aas
leave
mov
repnz
jle
cmp
mov
dec
leave
aam
out
dec
movsl
loope
or
jne
aas
and
adcl
cli
xchg
rclb
pop
iret
popa
add
jno
pop
shlb
mov
xchg
adc
pop
repz
xchg
jecxz
orl
cmpsl
outsb
adc
inc
pop
insb
scas
xchg
mov
movsl
sub
add
push
xlat
xchg
rol
mov
mov
test
dec
lds
scas
mov
fadds
mov
sub
lods
mov
sbb
push
call
out
insb
and
lcall
dec
lea
leave
lods
push
ror
inc
xchg
mov
dec
in
in
imul
loopne,pt
in
movsl
out
adc
insb
mov
sub
push
lret
sub
xchg
testb
jns
std
lret
daa
sbb
push
xchg
sbb
jno
and
add
notl
inc
lcall
nop
and
test
pop
lahf
fwait
xchg
addr16
aaa
fldenv
in
push
mov
int
add
std
push
push
mov
popa
mov
leave
arpl
xchg
sbb
pop
mov
movsb
lahf
sbb
xchg
js
push
aaa
rcl
decl
ds
cwtl
and
cmp
dec
mov
popa
xor
inc
xor
cmp
and
imul
loopne
adcl
dec
pusha
push
xchg
dec
mov
stos
mov
ljmp
xchg
sbb
push
add
inc
call
add
mov
scas
fsub
mov
or
mov
lock
sub
ljmp
addr16
shrl
xor
pop
pop
stc
push
mov
ja
call
xor
int3
dec
cmp
xchg
std
pop
push
dec
int3
lcall
xor
pop
adc
jae
cli
jg
subb
jge
pop
mov
push
aaa
jmp
jle
mov
insb
arpl
jle
jl
xchg
jns
adc
stos
jmp
sahf
pop
sti
cmp
cltd
mov
inc
xor
mov
push
sbb
cmp
push
add
sbb
fwait
pushf
scas
std
repnz
fmul
sub
mov
mov
vrsqrtss
mov
dec
pop
fsubl
push
icebp
mov
out
imul
dec
dec
mov
test
arpl
inc
test
xor
sub
aas
arpl
mov
lea
enter
push
inc
mov
idivl
pop
xor
jge
add
int3
dec
xchg
push
sahf
push
repnz
pushf
outsl
fcmovnb
sbb
leave
or
gs
dec
xchg
mov
mov
fidivrl
data16
xor
les
cmpsb
mov
pop
sbb
sbb
inc
testb
repnz
cwtl
cmc
jne
inc
gs
clc
cmc
inc
jns
sbbl
subl
lock
ds
mov
int3
iret
inc
jmp
xchg
je
mov
rol
loopne
pop
test
imul
nop
mov
mov
push
insb
inc
mov
dec
sbb
clc
jo
fsubrs
cmpsl
add
mov
or
xchg
sub
out
xchg
rcl
cmp
and
fisubs
and
rcr
mov
lock
outsl
ss
xlat
mov
fiaddl
lcall
pop
scas
ja
loop
dec
and
sbb
fcmovb
dec
sub
dec
je
gs
mov
push
pop
sub
inc
daa
loope
pop
fs
leave
pop
adc
jo
push
fiaddl
add
daa
pushf
cmp
push
mov
add
cmp
pusha
repz
sbb
pop
rcrl
push
enter
dec
add
xor
aas
dec
jb
out
flds
cwtl
stos
aam
leave
cmp
pop
mov
and
and
and
or
sti
xchg
inc
sahf
dec
xlat
pop
sbb
mov
std
pushf
cmc
add
add
test
jp
jae
inc
push
cltd
in
sub
sub
mov
aad
sub
aas
sbb
sahf
mov
pushf
cwtl
outsl
pop
sti
dec
ds
xlat
movsl
adc
js
xchg
mov
test
or
enter
or
lahf
adc
push
rol
adc
jno
les
sub
mov
mov
mov
dec
pushf
pop
and
std
loop
leave
pushf
dec
xor
je
stc
lods
icebp
aam
mov
sbb
pop
test
and
mov
lahf
pop
jnp
in
je
clc
dec
leave
call
repnz
loopne
mov
inc
pop
inc
and
mov
sub
and
pop
mov
dec
push
adc
sbbl
dec
iret
test
ss
inc
add
shll
int
pop
and
aas
pop
xor
or
fsubs
test
mov
fwait
jg
jo
bound
xchg
pop
js
in
sub
stos
mov
je
or
xlat
xchg
xchg
xchg
and
pop
movsl
adcl
mov
aad
js
or
jo
inc
cli
sub
iret
call
xchg
rolb
dec
call
sbb
mov
adc
out
add
add
mov
inc
push
mov
dec
mulb
cmc
dec
iret
hlt
andb
mov
fadd
shl
cmpsb
push
bound
aaa
lahf
fbld
shll
out
ja
push
pop
movsb
rcll
adc
popa
mov
jg
ja
adc
in
pop
sub
jbe
pusha
push
mov
mov
scas
xchg
jle
mov
ljmp
or
cmp
xchg
sbb
sarb
dec
fidivs
push
stos
dec
mov
fstpl
movsl
aam
clc
imul
fwait
icebp
nop
dec
push
out
cmp
fnstsw
mov
adc
mov
popa
and
dec
add
sti
pop
or
hlt
xor
or
fs
lock
xor
lret
mov
add
xchg
add
ds
shll
stc
or
push
or
popa
jg
or
shll
dec
pop
loope
adc
inc
stos
loopne
cs
pop
ja
in
or
xor
jno
push
stc
add
test
xchg
outsb
push
pop
ja
push
cltd
push
dec
sub
scas
cmp
pop
stos
xchg
fidivs
fistpll
add
cld
mov
std
pop
popa
aas
xchg
gs
pusha
push
jnp
stos
sbb
shrl
sbb
fwait
push
jb
test
scas
outsl
mov
sub
lods
fnstcw
inc
aas
sbb
add
push
pop
adc
lods
cmp
lods
mov
mov
sbb
imul
andl
stc
cmp
pop
mov
or
push
adc
xchg
xor
shll
jmp
cli
clc
or
mov
dec
clc
inc
sbb
push
pop
rorl
inc
out
mov
inc
sub
out
fldl
jb
les
jae
lea
mov
inc
mov
push
fwait
rcr
movsl
cli
mov
fisubs
out
or
lfs
and
xor
cs
addb
xor
push
add
les
jg
jmp
xchg
inc
push
in
adc
cs
jne
cmp
ljmp
dec
lcall
pop
sub
notl
cld
sub
cli
test
loop
pushf
xchg
adc
pop
cmp
inc
dec
loop
jo
stos
test
cltd
addr16
mov
andps
cmp
mov
adc
stc
cmpsl
mov
bound
lahf
xchg
stos
dec
stos
cmc
push
cmpsb
push
fisubs
jmp
addr16
out
cmp
adc
loope
pop
loope
outsl
jne
xor
push
and
inc
mov
add
sbb
insl
and
and
loopne
out
icebp
sti
xchg
add
lods
fdivl
pop
sub
push
idivb
xchg
push
adc
adc
dec
ret
ret
flds
mov
scas
inc
jno
lods
xlat
cltd
xor
jp
mov
sub
scas
adc
pusha
xchg
mov
das
flds
add
xchg
repnz
aad
push
call
adc
movzwl
fmull
sbb
and
dec
inc
test
icebp
cmp
xchg
xor
pop
dec
ds
mov
jmp
inc
cmp
orl
incb
push
out
popa
jb
inc
push
mov
ja
es
cmp
mov
sarb
outsb
sub
inc
add
xlat
aad
stc
mov
mov
imul
cmp
in
orl
and
xor
imul
and
dec
adc
jne
push
ds
fnstcw
mov
sub
repz
das
ljmp
fnstsw
cmpsl
or
fmuls
push
mov
je
xor
call
int
push
mov
aad
xchg
jno
fwait
shrl
pop
stc
dec
xor
in
pop
test
dec
cmp
shr
xor
mov
add
xor
insl
xor
cmpsb
add
jmp
sbb
jne
jmp
push
mov
jp
cli
xchg
add
js
and
aaa
enterw
fdivr
or
and
test
insw
mov
inc
sbb
mov
push
hlt
dec
adc
xor
xor
loop
or
pop
movsb
movsb
sbb
xchg
lods
xchg
pop
in
cmpsl
and
imul
fisttpll
push
fwait
cmpsl
in
cmp
mov
mov
jl
aaa
xchg
or
divb
cs
fstpt
cli
sbbb
jae
mov
push
fistpl
sub
add
add
sub
pop
inc
add
mov
aad
add
iret
outsb
insl
ror
add
movb
dec
pop
pop
cwtl
int3
push
sbb
sbb
cmc
xor
sub
das
fisttpl
or
inc
cs
push
mov
loop
push
adc
lea
mov
je
cltd
test
or
add
sbb
pushf
sub
bound
xor
movsb
in
push
fldenv
xchg
lea
cmp
adc
cmp
inc
add
mov
lcall
andl
inc
das
out
pop
or
inc
out
mov
movb
dec
jne
cltd
push
gs
mov
test
fcoms
jl
aam
push
lahf
mov
addr16
jle
fdivrs
popf
jge
sti
iret
push
int
and
sbb
push
mov
or
testb
sub
dec
push
fcompl
xor
subb
cmp
repnz
scas
int3
outsl
xchg
dec
nop
push
fbld
fwait
adc
shrb
dec
push
jmp
lock
clc
ljmp
testb
js
in
cs
in
rcrl
mov
cld
int
pop
add
dec
push
xor
add
ds
repz
mov
and
in
lock
add
push
fisttpll
xor
inc
xlat
sub
dec
fildl
outsb
xor
mov
cmpsl
dec
ds
sbb
aaa
nop
or
stc
or
aaa
mov
cwtl
mov
add
mov
pop
xor
outsb
xchg
push
sbb
or
xor
add
jo
jge
cmp
in
xchg
jnp
dec
sbb
xchg
je
mov
aas
aam
repnz
cmovl
lock
addr16
adc
push
mov
jnp
les
jb
push
stos
les
call
stc
rcr
sub
dec
sbb
push
xor
inc
pop
push
std
adc
push
loope
mov
inc
mov
lcall
das
cmp
adc
lret
inc
mov
movsl
cli
in
or
mov
stos
nop
or
add
ss
and
icebp
add
and
aad
lock
mov
xchg
dec
add
mov
fnstsw
inc
fs
xlat
and
sarb
adc
push
stc
pop
or
sub
or
aas
mov
xchg
add
inc
xor
int
lret
or
imull
mov
pop
test
mov
orb
js
mov
popf
mov
pop
sahf
insl
xchg
loop
clflush
push
mov
mov
mov
pop
fldcw
sub
mov
and
cmp
dec
test
mov
mov
dec
push
movsb
test
scas
dec
in
stos
lahf
adc
rcrb
out
stc
mov
lret
mov
mov
pop
mov
cmp
xor
hlt
mov
jmp
pop
stos
mov
push
je
scas
movsb
lea
loope
shrl
pop
mov
push
cmc
mov
push
adc
cmc
xlat
sub
inc
mov
loopne
mov
mov
dec
call
adc
mov
sub
aam
mov
and
lock
inc
xchg
ret
cmp
std
lds
sub
add
cmpsb
mov
outsb
xchg
das
in
add
adc
sbb
mov
arpl
fs
adc
scas
out
xchg
and
loop
pop
fidivrs
mov
xor
lods
addr16
test
aad
dec
or
mov
or
mov
and
xchg
adc
ret
addr16
pusha
jbe
call
jns
nop
cmpsl
and
in
pop
nop
xchg
or
lahf
xchg
xor
out
movsb
clc
leave
sbb
ss
fs
aaa
lcall
pop
xor
push
mov
int3
sub
jns
sbb
aad
pop
adc
dec
fldenv
xchg
jecxz
cmp
clc
sbb
and
psrad
ret
in
mov
mov
lds
test
sbb
inc
fisttps
or
enter
push
mov
mov
jae
das
popf
xor
cltd
jbe
and
shll
call
inc
fidivrl
ljmp
and
cmpb
mov
int
pop
cmpsb
push
pop
or
pushf
mov
arpl
or
cs
or
in
add
mov
add
dec
push
sub
dec
stc
mov
xchg
jae
ret
sub
mov
out
and
imul
add
lret
jne
lds
push
scas
pop
adc
cmp
ret
aad
aam
xchg
fneni(8087
negl
adc
aaa
testb
dec
xchg
dec
push
outsb
das
loopne
dec
ret
les
call
in
mov
shr
jge
mov
imul
cmp
xchg
out
leave
mov
cmp
cmp
dec
pop
pop
lods
repnz
xchg
adc
push
clc
cmp
outsl
ljmp
xlat
push
cmc
clc
in
mov
test
aas
outsl
xchg
cmp
aad
outsl
cmp
mov
lods
dec
lcall
leave
into
movsb
loope
mov
test
iret
orl
outsl
movsl
mov
repz
mov
adc
mov
jae
adc
mov
jecxz
mov
push
mov
cmpsl
push
popf
pop
fadds
cmpsb
std
push
test
cmp
add
lret
xchg
sbb
mov
xor
imul
inc
adc
push
jns
sti
lahf
adc
mov
pop
cmpb
inc
push
xchg
jecxz
cli
rcrl
jg
mov
jmp
std
jmp
jnp
iret
jno
ja
into
inc
dec
sti
sub
add
push
push
shll
xchg
testl
adc
mov
insl
je
add
and
add
jl
mov
sub
cmp
icebp
hlt
mov
inc
push
jbe
nop
adc
xchg
jg
jne
mov
mov
mov
notb
fstpt
or
push
das
xor
and
test
cmc
inc
inc
push
xorb
xor
push
jmp
das
loop
cmp
sub
in
loopne
arpl
cld
xchg
outsb
out
fstpl
xchg
aaa
out
xchg
sbb
loope
out
flds
fsubrs
mov
xchg
cmp
xchg
cmp
xchg
fwait
pop
pop
repnz
leave
pop
dec
add
jne
adc
dec
pushf
add
jl
and
mov
test
int3
fwait
ja
add
or
sti
cmp
test
mov
inc
lahf
pop
ret
test
sub
and
mov
cs
pop
and
push
loope
xchg
shll
jo
jmp
leave
adc
jmp
iret
test
jbe
subl
repnz
mov
xor
xchg
ss
mov
xchg
jmp
iret
xlat
icebp
mov
jo
bound
adc
sbb
or
xchg
insl
int
imul
mov
xchg
insl
mov
and
das
inc
repz
mov
cwtl
pop
mov
inc
hlt
out
xchg
fs
xor
sbb
mov
mov
rorl
pop
push
cmp
xor
mov
fidivs
bound
cmpsl
mov
mov
mov
xchg
mov
into
orb
mov
mov
shrb
push
dec
pop
fistpll
inc
xorb
shrl
out
dec
dec
movsb
push
inc
xor
ja
add
es
xor
adc
js
jns
adc
imul
movsb
pusha
sbb
and
lods
mov
mov
lahf
inc
pop
sbb
xor
stos
out
bound
xor
jo
mov
movsb
ret
xchg
mov
jl
mov
jno
clc
andb
stos
inc
jp
mov
fdivs
clc
cmp
xchg
bound
mov
mov
cmp
jle
sarb
fdivs
pushl
xor
jmp
add
pop
and
inc
sbb
cld
and
push
lea
or
xor
xchg
dec
scas
adc
inc
push
shll
push
push
mov
pop
mov
lahf
cmpsb
cmpl
inc
repnz
sarb
dec
adc
pop
fs
sbb
pushf
xchg
orb
pop
aam
out
fidivrs
cmp
cs
repz
insb
fdivrs
adc
mov
push
jae
sahf
insl
xchg
movsb
std
cmp
cmp
enter
loope
dec
data16
jle
outsl
mov
sbb
fdivl
je
test
mov
stos
iret
mov
es
fldt
fnstenv
jbe
xor
push
mov
jb
insl
mov
xchg
sub
xor
div
mov
mov
dec
mov
inc
sbbb
mov
cmp
out
sub
ljmp
cld
insb
fmuls
or
mov
and
xor
inc
and
push
scas
mov
pop
sbb
out
jns
sbb
sbb
lret
lret
fstpl
cmpsl
or
cmp
ret
xchg
ret
shrl
mov
addr16
jle
cmpsb
sub
jp
adc
mov
sarb
push
rol
cli
pavgb
lock
inc
dec
pushf
adc
jl
add
loope
pop
or
dec
je
xor
test
pop
sbb
loope
jle
dec
enter
ss
xor
pop
addr16
stc
dec
imul
xlat
and
sahf
or
cmc
mov
sbbl
cmp
dec
xchg
out
mov
mov
test
stc
mov
jl
pusha
cmp
push
ds
cmpsb
pop
stc
in
mov
push
adc
and
cmp
les
stos
dec
scas
inc
into
les
loopne
out
sub
mov
push
sbb
ret
pop
pop
xor
cmc
iret
test
mov
lcall
jg
les
lods
inc
or
push
mov
ss
lods
repnz
stc
dec
shlb
les
push
push
insb
mov
xor
and
jl
iret
mov
add
stos
jnp
mov
fnsave
fcmovne
pop
aas
insb
loope
nop
push
scas
andps
add
and
cmp
data16
cltd
test
cwtl
adc
stos
xchg
adcb
adc
lods
pop
aam
aas
lahf
cmp
pop
ret
cmp
or
mov
xor
aad
imul
jmp
das
mov
or
mov
push
bound
cmp
jp
jns
jno
jp
aas
cmc
mov
jae
sub
sbb
lea
jb
xchg
inc
cmp
cs
cmpsb
push
iret
enter
or
dec
sub
jnp
mov
inc
cwtl
and
mov
mov
mov
add
adc
imul
inc
push
ss
adc
pop
or
pop
lods
mov
adc
mov
add
adc
and
lahf
test
sub
out
inc
aaa
sbb
lret
sbb
movsl
insb
sub
or
daa
xchg
mov
das
inc
add
hlt
sbb
push
fadds
mov
mov
jne
int3
inc
or
bound
mov
jns
mov
ja
fcmove
xor
aad
inc
cmp
shr
out
cli
jns
orl
pop
mov
inc
test
rcrb
shrb
hlt
pop
cmp
and
mov
pop
pop
jnp
leave
xchg
pop
pop
lea
fcmovnb
push
add
pop
cmpb
mov
sub
xchg
xchg
outsb
loopne
adcl
push
inc
mov
mov
mov
dec
inc
outsl
insb
aaa
cmc
dec
or
popa
cmp
sbb
shll
mov
fisubrl
and
aad
aaa
xchg
mov
rcll
pop
pop
mov
push
or
xor
setge
stc
enter
adc
mov
mov
mov
test
pop
movsb
nop
and
push
sahf
xchg
pusha
dec
mov
xchg
adc
out
mov
std
std
mov
push
ja
sbb
jmp
pop
jle
scas
or
out
sbb
xchg
xchg
arpl
std
pop
ret
mov
pop
pop
loope
out
mov
lcall
das
cli
pop
lea
call
mov
jle
push
int
mov
mov
lea
lea
out
cmc
dec
sub
push
cld
scas
mov
push
add
mov
je
cmp
hlt
popa
out
pop
and
push
stos
idivb
mov
mov
rorb
push
mov
dec
xchg
mov
push
add
stos
mov
negb
outsl
insl
pop
lret
jmp
outsb
in
filds
and
or
ficoms
out
sub
inc
push
imul
cmpb
imul
sarb
adc
test
mov
inc
and
cmp
inc
icebp
mov
push
stc
mov
sub
inc
ret
add
dec
out
add
sub
mov
mull
sub
int3
shll
jle
dec
int3
pop
dec
out
out
movb
adc
inc
scas
dec
inc
fstpl
xchg
jne
out
fisubrs
fs
sbb
in
dec
imul
stos
jg
fs
sbb
out
daa
fcmovu
mov
add
mov
imul
adc
sub
dec
sbb
test
cmp
test
sbb
push
iret
dec
sar
ret
sub
mov
outsb
xchg
adc
cld
repz
inc
cmp
iret
lret
sahf
add
push
cltd
pop
inc
adc
xchg
jb
or
ja
out
push
push
iret
dec
fsubrl
xor
in
and
bound
pop
push
push
cmp
push
pop
inc
jecxz
ret
xor
jae
and
xchg
not
xchg
push
pop
mov
imul
rcr
imul
pop
push
lods
in
fwait
testl
std
sub
inc
pop
inc
not
dec
push
loope
push
negb
out
call
inc
fisttps
inc
es
adc
insb
dec
jp
jge
mov
cli
fcom
movsl
stc
sti
pop
popa
and
loope
xor
out
enter
mov
mov
push
jle
xor
or
adc
push
push
dec
and
imul
pop
add
sub
idivl
or
js
imul
fsubrl
adc
out
or
test
mov
loop
jp
add
pop
and
xlat
mov
xchg
icebp
outsl
stos
pop
sub
push
lea
xor
fisttpl
sbb
sub
popa
dec
into
je
cmp
ljmp
jg
inc
outsb
mov
or
adc
les
or
mov
lds
jp
pop
mov
outsl
movsl
popf
arpl
daa
xor
add
cmp
daa
in
test
ldmxcsr
mov
mov
xchg
addr16
std
push
adcl
xchg
into
sbb
repz
inc
xchg
lret
or
add
ljmp
add
aas
notb
sbb
popa
fildl
cwtl
fcmovnbe
sub
inc
or
lods
lods
jnp
cmp
jle
fdivl
in
bound
cmpl
fisttps
or
xchg
mov
adc
xor
xlat
xchg
into
inc
pop
dec
loopne
sub
jmp
hlt
test
dec
dec
dec
dec
adc
add
jb
push
xor
out
arpl
pop
inc
dec
mov
lret
and
inc
imul
addr16
es
jg
push
es
inc
test
lds
sub
jg
roll
movsb
sbb
sub
ds
mov
jnp
stos
subl
aam
cld
aam
loopne
pop
sbb
mov
mov
push
not
adc
sub
cmpsl
xor
push
lods
cmp
mov
popf
ficompl
nop
add
and
adc
leave
inc
cmpsb
lret
sub
xchg
ds
sbb
shlb
jo
inc
stos
adc
mov
jmp
into
mov
mov
test
lret
or
pop
add
sbbb
fwait
fs
adcl
lock
fsubr
mov
and
test
add
xor
add
out
cmpsb
sarl
dec
ficoml
imul
in
xchg
pop
push
ja
xchg
and
frstor
mov
push
out
nop
push
cs
bound
sub
sub
xor
bound
mov
int
jns
pop
ljmp
xchg
outsb
pop
xor
lcall
addb
loop
lret
call
mov
imul
jmp
xor
data16
mov
mov
aas
cld
and
jne
ja
sub
xor
mov
fldenv
mov
push
fwait
mov
sbb
jg
dec
scas
jbe
or
or
ja
cmp
mov
adc
xchg
xchg
or
inc
cmp
pop
pop
hlt
and
lret
fstl
push
adc
mov
xor
data16
test
mov
aad
aaa
dec
cmp
push
jg
cmp
adc
xchg
js
and
lea
jmp
faddl
in
adc
adc
cmc
dec
aad
pop
add
loope
out
adc
pop
repz
lret
pop
mov
cli
leave
es
inc
jb
insb
nop
faddl
push
adc
mov
xchg
pop
xchg
or
mov
add
out
sub
add
mov
mov
jns
cmc
icebp
pop
fchs
jp
insl
fucomip
or
sbb
pop
decl
sbb
bnd
in
movsb
mov
or
dec
mov
mov
popf
std
add
imul
sar
xchg
fs
loope
pop
mov
xchg
dec
inc
ss
mov
popl
shrl
lret
cmpsb
ss
pusha
mov
add
mov
xorl
das
outsb
xchg
push
inc
fs
add
repz
cmpsl
mov
shr
sarb
cmp
out
mov
ds
cld
imul
into
or
xchg
mov
mov
xchg
imul
mov
in
scas
or
mov
xchg
pop
mov
imul
mov
dec
cmp
cs
fbstp
outsl
jmp
dec
xor
pop
mov
int
fadds
push
cmpsl
mov
and
sub
dec
xor
imul
cmp
push
cld
in
add
cltd
test
jmp
cmp
in
mov
mov
lret
jmp
inc
mov
pushf
in
and
mov
in
xor
mov
pop
mov
loop
mov
inc
inc
inc
addl
mov
sub
ret
xchg
push
arpl
sbb
push
and
mov
fimuls
mov
ljmp
idivb
dec
jg
mov
andl
ja
les
in
mov
test
fidivrs
lods
push
icebp
inc
mov
out
jl,pt
lea
add
sub
dec
xchg
sti
push
adc
sbb
add
aad
imul
add
adcb
sbb
mov
mulb
lds
jbe
mov
daa
fmuls
js
sub
icebp
dec
adc
shll
push
rcrl
int
pop
mov
jb
movb
mov
ja
insl
xorl
cmp
sub
pushf
push
or
fcom
push
push
orl
add
popf
shll
in
jp
loopne
push
and
jae
pop
mov
sti
mov
loop
lods
sub
push
sub
and
add
mov
xlat
pop
jmp
jge
push
mov
sarb
sub
xchg
and
adc
mov
shlb
dec
inc
pop
add
test
jle
int3
pushf
add
fmull
call
pop
xchg
fsubrs
sub
xorb
in
subb
add
test
int
subl
int
mov
xchg
push
lds
loopne
sub
data16
pop
cmp
adc
mov
jno
aam
repnz
stos
inc
movsl
loopne
gs
and
push
lcall
cmp
xchg
push
push
push
dec
cmpsb
cmpsl
jae
lock
adc
sbb
cmp
sub
xchg
scas
jl
jno
xor
jne
adc
push
out
aam
sub
lock
dec
idiv
or
dec
roll
xor
test
icebp
aad
aaa
sarb
jbe
pop
dec
loopne
testl
std
out
and
sbb
hlt
sub
out
xchg
outsl
cmp
dec
mov
jne
and
push
sub
sbbl
and
leave
mov
mov
addr16
ret
ficompl
test
test
cmc
fcomi
int
jbe
loopne
popf
mov
jecxz
out
and
jns
daa
je
xchg
dec
jns
clc
mov
fdivp
bound
sbb
mov
je
inc
or
divl
fwait
repnz
fstpl
lret
mov
dec
rorb
jge
xchg
mov
pop
cmp
lret
and
mov
cmp
pop
nop
mov
shlb
mov
insl
clts
lds
mov
lret
js
sub
fisubl
or
sbb
jg
push
mov
dec
push
xor
mov
adc
leave
pop
xchg
cmp
gs
divl
or
je
jp
enter
shrb
inc
mov
xchg
xchg
and
int3
fwait
ljmp
dec
stos
add
add
pop
mov
jle
jae
mov
and
cwtl
sub
adc
pop
push
push
mov
psllw
mov
lea
sub
movsl
fsubr
and
cli
outsl
mov
mov
push
pop
xlat
aam
jb
add
xchg
aaa
das
add
add
imul
xchg
test
test
call
sub
clc
dec
in
mov
data16
mov
jecxz
inc
stos
out
pop
dec
lea
jns
test
mov
outsl
add
xor
jmp
ja
flds
ljmp
lret
push
das
sbb
push
xchg
mulb
mov
lahf
mov
int3
dec
adc
add
lock
sbb
adc
inc
lods
pusha
sbb
xor
xchg
push
icebp
lods
fnsave
sbb
and
outsb
scas
in
ret
push
mov
pop
repz
inc
pop
daa
call
jl
sub
scas
ret
in
adc
mov
pop
xor
sub
sub
out
add
sub
negl
loop
lock
dec
push
out
pmulhuw
vpsubw
dec
jl
and
sbb
jl
dec
xor
mov
lret
push
andb
push
or
cld
sbb
mov
adc
cld
add
jp
rolb
leave
sub
lock
mov
and
loopne
xor
out
dec
dec
negl
bound
jns
mov
cmpsb
mov
cmp
mov
popl
ljmp
sbb
popl
out
aam
test
cmpsl
pop
xor
shlb
cwtl
push
jmp
xchg
sbbb
repnz
aas
dec
sti
outsb
movsl
clc
push
sbb
shrl
js
pop
dec
and
lcall
addb
xor
fstl
aas
push
popf
fs
or
lret
scas
adc
idiv
popa
aad
add
adc
add
adc
add
inc
popa
inc
xor
xor
mov
sub
xchg
cwtl
les
jbe
dec
and
out
daa
dec
dec
adc
and
sbb
popa
icebp
leave
xor
xlat
pop
push
mov
xchg
dec
inc
mov
cld
push
out
lods
jmp
xchg
inc
cli
ja
mov
pushf
scas
mov
xchg
jp
pusha
aam
pop
dec
into
cmp
cmp
mov
xchg
jne
movsb
das
jbe
loope
inc
aad
mov
and
lea
pop
mul
jl
arpl
leave
xlat
loop
sahf
add
std
adc
adc
out
int
jae
jbe
push
into
xchg
fs
xchg
adc
or
popa
lcall
aas
ss
mov
mov
cli
mov
mov
push
out
xorb
sub
shlb
cmpl
pop
ss
add
iret
nop
sub
push
jb
and
push
test
cwtl
cld
push
or
das
xchg
mov
insl
fsubr
inc
xchg
push
addb
loop
sbb
lods
cmp
mov
mov
xchg
xlat
sub
or
mov
pusha
adc
shl
pop
dec
adc
jg
adc
xchg
mov
pop
xlat
push
in
ss
xchg
mov
pop
cmc
inc
mov
adcl
setle
cmp
stos
movsl
les
js
or
push
dec
mov
mov
lock
icebp
data16
xchg
jae
repnz
jb
ret
add
inc
jbe
jbe
mov
jae
mov
and
sub
mov
cwtl
jns
lds
in
jge
jae
fstps
dec
pop
gs
and
xor
inc
cmpsb
into
test
inc
xchg
xchg
imul
imul
test
lods
scas
cli
popa
daa
aaa
sub
pusha
aas
or
movsl
cmpsb
mov
cmp
xchg
fdivp
movsb
fcompl
push
xor
test
or
lea
pop
push
fucomip
push
out
aaa
or
mov
push
rorl
lahf
and
inc
add
xchg
sbb
fwait
mov
repz
sbb
rcll
xor
push
pop
fwait
pushf
xlat
pop
fldl
rolb
jp
nop
mov
scas
rcrl
lds
sbb
ss
bound
inc
fisubrs
shrl
adc
mov
add
xchg
xchg
into
xchg
dec
int
adc
psllq
sbb
int3
pop
cmp
or
lods
xchg
cmpsb
scas
loopne
push
xchg
adc
inc
aaa
sbb
mov
adc
adc
pop
mov
inc
dec
xor
lock
sub
fdivs
inc
pop
sbb
mov
dec
xchg
fsubrp
sahf
or
in
shlb
or
jb
cmp
scas
xlat
dec
fcom
or
iret
mov
xchg
enter
out
les
mov
sbb
jg
xor
mov
xlat
lahf
sbb
add
push
jp
xchg
call
dec
add
aas
fidivrl
icebp
lahf
xchg
imul
movsl
scas
push
mov
lea
lcall
rorb
inc
sub
mov
leave
pop
adc
adc
ret
mov
xor
lods
mov
mov
pop
sub
adc
aaa
pop
lret
sbb
idiv
mov
cmp
xchg
mov
xor
sarl
and
dec
jg
or
out
aas
sbb
sbb
mov
push
notl
lods
cmpsl
xor
sbb
icebp
ja,pn
mov
sub
jmp
xorl
cltd
or
lahf
xchg
jge
cmp
dec
inc
mov
js
push
cmp
jmp
arpl
je
pop
lcall
pop
std
jns
mov
jp
xchg
push
lods
mov
call
lret
cmp
test
jmp
ss
sbb
rcrl
data16
cmp
js
xchg
lcall
mov
movsl
fmull
mov
adc
cmp
sbb
jns
pop
divl
test
call
stos
jmp
pop
jnp
stc
and
mov
jge
addr16
or
push
pop
or
clc
mov
jne
xor
inc
sarb
lds
testl
xlat
shrb
clc
sbb
clc
loopne
and
xchg
test
fcmovbe
xchg
lahf
mov
stos
push
fistpl
sub
jmp
call
adc
dec
mov
aam
dec
xchg
cmovs
pop
jmp
adc
xchg
jb
cmp
lea
mov
jmp
movsl
inc
add
int3
push
add
hlt
xchg
inc
fcomps
adc
insb
pop
mov
gs
jmp
mov
daa
out
orl
and
pushf
push
jg
in
jle
testl
hlt
lods
jne
adc
lahf
dec
addr16
mov
sub
lea
in
loop
out
jmp
xor
test
pop
push
pop
insl
out
xor
cmp
mov
add
test
rorl
sbb
cltd
je
popf
jo
jmp
aad
lcall
inc
hlt
pop
out
test
cmpl
and
enter
jmp
mov
or
jbe
fnstenv
fstl
aas
stc
xor
stos
into
test
xor
fbstp
or
sahf
add
fbstp
stc
jecxz
pop
movsl
mov
out
jg
cmp
in
aas
fwait
mov
shll
test
popa
pushf
xchg
pop
stos
aad
inc
cmp
stos
out
cmp
push
jb
bound
ds
or
cli
sbb
cmp
fsts
mov
iret
and
dec
notl
jno
loopne
std
jle
or
mov
dec
pop
or
jae
pop
loop
pop
aas
arpl
movd
in
cmp
xor
aam
fsubrl
pop
xadd
sti
mov
jmp
call
sbb
cs
push
adc
cmp
sbb
fs
lret
cmp
test
push
inc
inc
loope
inc
loop
sub
jecxz
sub
and
and
std
inc
add
add
insb
stc
test
ja
sbb
and
fsubs
sub
enter
jae
lret
mov
pop
in
imul
sbb
aam
xor
xor
movsl
pop
fistl
leave
enter
cmpsb
push
hlt
push
mov
mov
lods
fisubs
sbb
in
test
lcall
enter
mov
and
mov
xchg
mov
adcb
lahf
cli
mov
outsb
mov
pop
ljmp
das
push
pop
mul
push
into
xorl
dec
gs
pusha
out
stos
push
imul
int
cli
sub
and
pop
mov
imulb
sbb
jae
mov
pop
sbb
dec
std
mov
add
das
inc
ds
iret
fwait
mov
or
mov
or
mov
jge
cmp
enter
lock
mov
jns
test
inc
jnp
clc
fs
clc
inc
sbbl
jo
addr16
popa
aam
sub
xchg
sub
mov
shr
lods
cmc
sbb
jnp
addb
sub
cmp
cltd
cwtl
mov
sbbl
loopne
daa
xchg
test
stc
andb
jns
stos
add
jge
pusha
push
stc
popa
xor
xor
scas
shll
mov
jae
push
dec
and
fadds
jae
aaa
mov
xchg
push
lret
mov
inc
push
pop
inc
mov
push
cld
push
cld
add
fidivrl
into
das
dec
call
fnstcw
push
mov
out
or
sub
jne
cli
mov
cmp
adc
fwait
push
bound
shrl
jp
or
push
addr16
nop
sub
mov
pop
lahf
cmc
andb
inc
inc
subl
xlat
ret
xchg
push
jb
lods
mov
lret
mov
pop
jge
and
inc
sbb
loopne
pop
out
dec
mov
out
into
lock
ss
xchg
push
test
ficoms
mov
jp
das
xchg
push
ficompl
and
fnstenv
popa
push
cmp
popf
hlt
push
cld
das
aas
inc
push
iret
jne
or
lahf
je
jns
push
movsl
inc
out
mov
pop
loope
pop
push
aas
xchg
sbb
arpl
sub
dec
jb
and
nop
imul
popf
xor
dec
int
aad
je
in
mov
mov
or
cwtl
jb
or
pop
ljmp
call
jmp
outsb
gs
jmp
adc
inc
repz
or
push
pop
call
sub
faddl
insl
into
enter
cltd
int
adc
adc
imul
nop
test
cmpsb
icebp
sub
adcl
mov
jno
adc
adcl
pop
mov
shl
lods
pusha
fsts
leave
pop
or
mov
mov
push
mov
mov
call
jmp
data16
or
cmc
jmp
pop
and
fsubs
cld
jecxz
loope
dec
or
pop
sub
in
hlt
mov
mov
lahf
mov
shll
mov
cmp
xchg
mov
sub
fwait
mov
sbb
rcll
popf
or
sub
das
roll
cmp
cli
ret
pop
and
bound
xor
adc
jo
adc
das
lahf
sub
sbb
rol
mov
ret
cli
gs
and
repnz
sbb
mov
adc
jne
cmp
xor
jb
and
and
fnstcw
pop
add
ret
inc
mov
push
cs
stc
adc
ret
jle
push
push
call
and
xlat
addr16
dec
das
push
testl
jmp
cmovnp
or
mov
leave
pop
cwtl
cmp
out
cmp
icebp
es
out
mov
cs
sahf
mov
mov
add
add
add
jbe
test
fstpl
mov
jge
or
adc
ret
add
daa
pop
shl
add
add
or
int3
dec
sub
out
mov
jecxz
call
imulb
sbb
dec
ficomps
imul
inc
inc
jbe
mov
aam
fistps
xlat
movb
int3
mov
fdivrl
out
decl
sub
and
out
fwait
inc
fwait
push
arpl
xor
sbb
adc
mov
fsubrp
cmp
in
xchg
addr16
aad
mov
jg
int
xor
jnp
les
dec
movsb
mov
mov
sub
out
out
inc
pushf
mov
sbb
aas
mov
out
shlb
in
mov
and
clc
in
hlt
push
mov
ficoms
ret
enter
adc
sahf
mov
mov
ljmp
xor
dec
or
test
inc
icebp
aam
sbb
outsl
sub
sub
jp
mov
xor
into
out
push
popa
or
inc
pop
jmp
lret
mov
or
and
push
mov
dec
es
ret
rclb
xchg
rcll
popf
fwait
test
jns
mov
cltd
lods
test
in
mov
adcl
inc
mov
xchg
jmp
mov
ror
cwtl
push
ja
mov
dec
add
push
push
test
or
xchg
mov
pop
xor
icebp
int3
mov
cmp
xchg
xor
nop
push
insb
xchg
cmp
jg
mov
inc
sarl
or
pusha
es
sbb
xor
cwtl
loop
jb
lahf
in
push
test
sbb
sub
out
pop
dec
sbb
and
stos
inc
mov
jo
mull
into
sbb
mull
add
in
push
and
rcll
outsb
fs
or
xlat
jo
daa
insl
sarb
mov
xlat
jo
rclb
cwtl
and
mov
xchg
jmp
pushf
lea
xor
cmp
add
pop
stos
shrl
push
hlt
xchg
mov
and
jg
xchg
xor
jp
adcb
icebp
pop
imul
loop
add
sub
ja
jne
mov
and
and
jae
das
inc
mov
popf
addr16
repz
push
mov
inc
push
mov
frstor
add
rcrl
pop
call
scas
jne,pt
push
cmpsl
addr16
cmp
sub
insl
adc
fildl
add
inc
xor
int
mov
mov
arpl
or
mov
lret
cld
gs
dec
notb
sbb
and
push
or
out
push
and
xlat
fsubrl
movsl
inc
fidivrl
mov
cmp
mov
cmc
mov
jp
popa
pop
es
fistpll
xor
mov
sar
push
inc
mov
in
loop
cli
lds
jecxz
fimuls
outsb
jo
lods
movsl
adc
fidivrs
rol
stos
mov
add
aam
rclb
lret
jmp
loope
insl
fwait
inc
mov
adc
inc
mov
ja
jmp
arpl
mov
dec
cmp
jbe
xor
out
fwait
imul
lds
arpl
mov
cmpsl
mov
cmc
pop
cmp
adc
in
in
popf
movsl
lahf
sbb
popf
jmp
aad
pop
xchg
mov
rorb
ds
aam
dec
out
sub
fistps
add
add
ds
fs
call
mov
or
mov
rcr
jo
mov
inc
aam
jb
cmp
outsb
pushf
outsb
or
mov
dec
inc
dec
jg
cmp
pop
jnp
xchg
adc
mov
mov
fdivl
stos
pop
adc
push
pop
pushf
inc
sbb
pop
push
cwtl
xlat
dec
sarl
pushl
scas
sub
mov
inc
cltd
dec
pusha
mov
or
cmpsl
mov
cmp
mull
popa
es
ret
inc
mov
inc
sti
cwtl
sbb
fwait
ror
or
fsubrl
jl
add
pop
mov
cwtl
and
adc
test
fs
rolb
pop
cmp
sub
mov
inc
dec
aaa
les
out
cmp
and
and
add
push
icebp
sub
jmp
add
sbb
lahf
xor
mov
push
mov
inc
daa
movb
out
mov
jo
jle
pusha
fisttpl
adc
lahf
mov
push
pop
repz
imul
push
xor
call
in
sbb
mov
std
push
jnp
jp
jl
ret
cli
xlat
cs
shl
adcb
sahf
fcoms
or
lret
pop
mov
aam
xchg
test
add
repnz
add
adc
lcall
mov
adc
dec
insb
jnp
bt
push
sbb
dec
push
shl
push
scas
sbb
mov
fldenv
mov
fidivs
mov
or
mov
clc
cmp
xor
out
mov
inc
loop
ja
les
icebp
in
mov
jo
insl
dec
dec
and
shll
aaa
imul
in
inc
in
or
inc
add
jl
or
stos
push
sbb
cld
or
mov
cmp
or
decl
popf
dec
pop
jle
sub
shrb
xor
dec
andb
imulb
pop
negb
scas
int3
push
mov
clts
jbe
sbb
stos
sub
movsb
jbe
dec
dec
arpl
push
mov
and
stos
bound
or
inc
hlt
out
adc
mov
sahf
adcb
gs
ficompl
data16
and
mov
or
push
arpl
push
lods
and
or
ret
push
pop
jo
push
scas
dec
mov
mov
mov
sahf
xchg
sub
fcoms
stos
inc
fucompp
pop
xorb
movsl
lret
cmp
lods
js
into
mov
sbb
mov
pop
movsb
mov
out
xchg
dec
cli
rcrb
dec
or
in
aam
jb
lcall
mov
mov
fsubrl
cmp
dec
insb
lea
dec
arpl
mov
push
mov
fsubs
and
leave
pop
mov
pop
ja
adc
out
cmp
mov
jg
dec
aaa
stos
inc
imul
sahf
cltd
out
lea
shl
daa
mov
pop
stos
inc
insb
push
sub
test
sub
jl
std
adc
jae
push
pop
inc
or
or
mov
icebp
in
mov
pop
in
arpl
xor
add
aaa
cmp
dec
push
adc
adc
popa
or
jnp,pt
loop
xchg
jns
push
cmp
mov
mov
dec
mov
sbb
rcll
push
jge
leave
mov
dec
in
pusha
icebp
dec
mov
or
pop
arpl
mov
pop
cmp
lcall
call
out
imul
jo
pop
adc
sbb
lahf
pop
jnp
xchg
adc
jb
mov
daa
loop
adc
int
pop
sbb
dec
pusha
jle
push
sub
les
mov
push
pop
enter
int3
xor
arpl
push
cmp
jbe
dec
pop
fisttps
add
push
sub
mov
jns
mov
mov
cmp
xor
les
imul
and
inc
test
sub
jno
out
rcr
mov
sub
and
sub
push
daa
or
cwtl
dec
test
icebp
shr
ja,pn
jmp
sub
push
adc
cwtl
sbb
fs
int3
je
addr16
adc
mov
fldenv
xor
sub
into
icebp
imul
shlb
adc
jae
inc
or
cmp
dec
cmp
add
repz
das
pusha
imul
sbb
xor
repnz
jae
mov
pop
and
dec
push
fisttpll
xchg
adc
in
add
xchg
mov
jmp
out
push
mov
out
outsb
xchg
cmp
fists
sbb
push
pop
ss
nop
cmp
jae
jne
js
or
std
dec
scas
lds
flds
cmp
pusha
test
lds
jnp
adc
pop
loopne
fisubrs
cmpsb
lds
push
out
add
mov
jnp
push
ss
sbb
add
fwait
cmp
sub
mov
test
outsb
push
mov
lods
push
mov
mov
test
imul
jge
inc
or
out
out
neg
jae
push
mov
ror
adc
imul
out
add
lret
arpl
adc
leave
shlb
dec
fsubrp
lret
addr16
pop
mov
or
repz
in
out
ret
sbb
inc
test
repnz
mov
insl
lods
or
mov
pop
lret
movsl
xor
push
frstor
lret
push
scas
rolb
movsl
hlt
cmp
jae
or
movsb
jle
bound
js
mov
imul
push
mov
ds
pushf
js
inc
rolb
mov
rolb
cmp
stc
cwtl
and
push
test
inc
into
sarb
out
aam
pop
pop
mov
dec
sbb
fcmovne
je
mov
shlb
clc
ja
cltd
aad
jo
loop
inc
das
dec
mov
adcb
jmp
inc
mov
into
fnop
je
out
inc
pop
push
mov
cmp
mov
in
jmp
popf
mov
xchg
jns
and
sub
mov
lret
rclb
int
dec
adc
test
xor
add
inc
jne
sbb
movsb
push
sub
mov
leave
inc
jnp
sahf
mov
adc
pop
sub
nop
cwtl
adc
movb
adc
dec
jmp
flds
pop
cmp
pop
mov
ret
fs
hlt
ficoml
or
mov
jecxz
outsb
adc
data16
mov
jae
push
or
xchg
sbb
and
pop
stc
mov
shrb
aad
xchg
andl
mov
mov
lds
out
and
lahf
cwtl
in
lods
pop
adc
testb
mov
mov
bound
pop
mov
gs
mov
cmp
add
dec
loope
inc
in
scas
dec
js
movsl
add
sub
jl
dec
je
mov
lds
repz
bound
xchg
jnp
mov
and
pop
pop
mov
jne
scas
xor
adc
rol
stos
int
pop
ss
fs
push
mov
mov
jnp
jl
sbb
pop
xchg
dec
fwait
cmpsb
sbb
mov
fcomps
sub
jp
inc
sbb
lcall
sahf
pop
add
sahf
adc
cltd
leave
out
xchg
and
ljmp
push
jg
adc
ret
dec
jnp
dec
push
inc
addr16
mov
or
pop
stc
sub
add
inc
fs
in
mov
aas
adc
mov
mov
pop
and
sub
cmp
lock
push
into
or
mov
lahf
dec
xor
shl
sbb
xor
xchg
mov
add
aas
pushf
insb
addb
jp
xor
inc
sub
xlat
fsts
mov
je
push
lods
adc
lahf
dec
fistpl
push
js
mov
fisubrs
and
and
inc
mov
xor
push
stos
popf
push
cltd
xchg
arpl
dec
add
add
dec
loopne
mov
dec
loope
ret
scas
pop
loope
mov
lret
mov
xchg
cmp
int3
xor
mulb
stos
jecxz
and
adc
lcall
stos
in
dec
lahf
pop
mov
pop
dec
dec
stc
mov
push
xchg
mov
repz
xchg
and
mov
jle
cltd
cwtl
pop
mov
je
bound
fucom
or
mov
jnp
ret
mov
jl
cmpsl
xlat
movsl
or
fwait
jno
stos
icebp
jge
fistpll
push
test
gs
aad
lods
in
orl
cmp
xor
das
fsubrl
bound
jne
inc
pop
adc
inc
adc
mov
nop
icebp
leave
or
lcall
cmp
pushf
aam
fcoml
push
mov
sbb
xchg
adc
mov
sbb
lock
fmull
loope
sub
mov
push
in
cmp
jb
mov
psubusw
push
es
loope
pushf
push
add
fcompl
movsl
imul
or
lock
in
fs
add
into
bound
stc
mov
or
addb
clc
jg
xor
push
and
scas
or
lcall
mov
ss
imul
movsl
ja
loopne
in
je
xor
mov
jmp
out
pop
cmp
iret
scas
outsb
std
cs
repnz
loope
add
mov
xor
mov
mov
gs
in
testl
dec
fildl
int3
cld
sbbl
nop
shlb
stos
fldt
dec
push
mov
fadd
adc
add
xchg
dec
aad
test
out
cmp
ds
sbbb
push
incl
push
inc
jge
inc
test
jg
cmpsl
xchg
cmp
adc
pusha
adc
or
fstps
xchg
jmp
mov
jge
sbb
fucom
jmp
sbb
ljmp
mov
outsb
cmc
mov
cmp
mov
movsb
mov
fsubrs
mov
mov
daa
stos
arpl
fisubl
and
mov
cs
out
push
mov
push
push
sahf
out
and
push
test
mov
push
adc
jae
pop
pop
gs
add
popf
push
out
or
call
lcall
xchg
push
cmp
sbb
sub
adc
mov
js
push
push
or
push
aam
xchg
or
mov
push
nop
lods
hlt
jo
test
daa
pop
pop
pushl
sub
inc
fdivrs
jbe
pop
mov
in
sub
sub
push
js
add
insb
sti
int3
cmp
inc
loope
cmpsb
icebp
call
cmpsl
mov
ret
or
lods
push
int3
jns
add
addl
dec
shl
push
inc
or
insb
jp
xor
fcoml
addb
sub
iret
add
movb
xor
push
cmp
in
cmpsb
ds
out
outsl
ficoms
pop
push
add
aas
pop
mov
mov
int3
iret
sahf
stos
sub
stos
jle
or
jp
aaa
pop
adc
push
lret
stos
pushf
out
jl
pop
test
lods
loop
fstl
loopne
or
nop
call
push
xchg
add
hlt
mov
pop
arpl
imul
enter
ret
adc
imul
cmc
enter
push
cmp
inc
dec
test
outsl
xchg
mov
test
and
sbb
fnstenv
gs
lods
fnsave
shl
mov
inc
pop
lds
addr16
sub
inc
and
and
imul
sbb
xchg
aas
xchg
mov
imul
cmp
lods
xor
and
xchg
enter
pusha
scas
stos
pushf
jmp
shrl
lea
addr16
movsb
shl
aaa
pusha
lret
outsl
rorl
mov
add
cmp
push
adc
dec
je
xlat
inc
call
ret
fsubrs
or
in
stc
sub
mov
in
lods
cmp
int
mov
xor
movsb
adcb
pop
int
mov
dec
imul
mov
jbe
jg
xchg
aaa
das
rorl
sbb
mov
jbe
in
pop
pushf
jg
xchg
in
or
push
ss
jl
sub
decl
mov
pushf
repnz
jge
dec
dec
aad
mov
cmovl
jecxz
mov
repnz
sbb
ret
push
inc
xorb
xchg
mov
mov
lretw
ficomps
dec
ljmp
pop
inc
mov
sarb
jp
cmpsl
in
mov
xchg
xchg
cltd
ss
dec
call
push
notl
enter
in
loop
mov
inc
stos
fwait
mov
stc
xlat
call
xchg
pop
in
movb
js
in
jns
push
sub
mov
xchg
pop
ja
and
fadds
push
xor
adc
in
sbbb
pusha
push
es
jl
sahf
sbb
pusha
lea
adc
inc
mov
rorl
call
loop
lock
shrl
addb
jns
xor
sub
xor
cmp
lds
mov
aas
adcb
fcmove
and
test
pop
ljmp
add
jmp
push
scas
dec
mov
adc
ja
inc
sub
mov
psubsb
pop
sub
jecxz
adcb
jmp
out
lods
adc
or
scas
pop
enter
repz
sarb
push
add
dec
xchg
push
add
lods
stos
in
push
and
cmp
inc
in
sbb
inc
fildll
nop
sub
pop
jb
dec
dec
mov
arpl
orb
push
negb
inc
daa
sbb
ficoms
ret
jo
adcb
fldenv
repz
xchg
outsb
lods
cltd
daa
mov
int
xchg
test
push
inc
loope
xchg
adc
jp
insl
stos
fyl2x
push
sarl
data16
into
mov
cltd
push
ljmp
adc
jns
movsl
pop
dec
xor
pop
in
clc
push
sbb
adc
cmp
pop
cmpsb
andb
dec
mov
fucomip
push
fdivl
test
cltd
inc
mov
ret
push
cmp
imul
int3
lds
adc
scas
mov
sub
inc
or
pop
cmpl
clc
fisubrs
data16
mov
out
outsb
dec
xor
xchg
rcll
push
imul
ljmp
lds
imul
sub
addr16
adc
mov
cmp
aad
xchg
lock
mov
sub
xchg
or
lret
aam
andl
in
neg
lea
xor
mov
leave
sub
dec
pushf
inc
xchg
jge
mov
ret
and
into
stos
in
fldenv
xor
out
mov
das
fnstsw
xchg
stos
dec
sbb
cwtl
cld
dec
jbe
leave
push
jmp
aad
test
dec
fwait
push
out
loop
xchg
pop
sarl
and
fadds
stc
aam
inc
mov
and
push
dec
lret
inc
std
jnp
and
xchg
adc
push
leave
sti
pop
lds
dec
int3
call
xchg
sub
loope
movsl
push
mov
dec
in
jbe
fisubs
inc
and
mov
pop
out
lods
loop
sbb
stos
dec
add
dec
cs
add
mov
ret
add
in
ja
sub
aaa
jle
fstpt
mov
scas
cli
add
jle
push
mov
push
shll
out
call
xchg
jl
rcrl
std
cmp
sarb
int3
sub
std
xchg
jae
pop
and
and
inc
jg
mov
loop
pop
repz
lret
and
dec
dec
and
sub
pop
push
in
scas
fstl
and
jecxz,pn
pop
push
and
in
xor
test
pop
xchg
cwtl
dec
dec
in
ret
or
jae
dec
xchg
hlt
repz
adc
loopnew
les
insb
lock
and
movsl
mov
pop
add
mov
repnz
jno
or
popa
int3
cmc
or
inc
outsb
xchg
repnz
mov
xchg
add
mov
rorl
and
cli
xchg
in
dec
xor
xchg
xchg
pop
mov
aad
mov
sub
xchg
xlat
pop
dec
sub
mov
push
pop
fldenv
movsl
imul
inc
mov
adc
stos
mov
push
cltd
or
mov
mov
and
iret
inc
jmp
gs
cs
sub
cmp
cmp
out
inc
repz
adc
scas
or
insl
sbb
cwtl
lock
cmpsb
cmpb
shrl
lock
push
dec
insb
and
pusha
loopne
test
xor
test
jge
clc
loope
mov
mov
insb
sub
mov
sbb
movsb
mov
loop
xchg
mov
xor
or
mov
cs
pop
cmp
addr16
xchg
dec
cmp
cmp
lret
in
push
pop
outsb
ss
mov
inc
out
js
dec
push
testb
das
xor
imul
xor
pop
mov
rcrl
gs
cmp
ret
lods
mov
mov
pop
xchg
jle
sub
or
push
push
mov
mov
rcr
in
mov
inc
adc
pop
jbe
or
shlb
push
xor
cmc
dec
sub
fdivr
aad
outsl
sti
pop
xchg
pushf
mov
lods
mov
call
adc
outsb
dec
in
inc
adc
imul
sbb
mov
mov
mov
dec
adc
push
pop
push
push
mov
ds
mov
jae
xchg
cmp
aaa
xchg
cwtl
jno
imul
leave
out
and
cmp
xor
push
aam
addr16
mov
sahf
xchg
mov
push
cs
clc
xchg
movsb
sbb
cmp
sbb
push
inc
sbb
pop
or
pop
jae
mov
int3
sub
sub
xabort
mov
dec
lcall
inc
loopne
jp
and
xor
pop
rorl
stc
xchg
sbb
or
pop
ret
insb
xchg
fiaddl
pop
hlt
xor
lds
mov
jns
mov
push
dec
adc
adc
cmp
testl
fwait
xchg
cmp
sub
pop
aas
ret
inc
in
mov
adc
jb
mov
bound
test
hlt
lret
aas
sbb
xchg
dec
loop
cmp
lock
stc
es
xchg
xchg
sub
adc
ljmp
aaa
addr16
adc
push
xchg
jb
inc
sbb
add
mov
dec
icebp
or
dec
push
xor
jnp
roll
test
js
mov
iret
shll
xor
addl
mov
movsl
dec
ret
ljmp
cli
pop
jecxz
inc
jb
ja
orb
sahf
iret
xchg
add
stc
adc
sub
or
and
inc
push
test
push
pop
sbb
cmpsb
in
outsl
and
lahf
pop
jmp
iret
popa
mov
imul
lahf
cmp
das
arpl
dec
or
fcoms
pop
cmc
imulb
pop
sysexit
jno
and
jne
inc
out
outsb
fbld
into
mov
push
int
cltd
cmp
icebp
cmp
or
sbb
dec
lods
pop
xchg
push
cmc
das
gs
jg
inc
mov
push
push
adc
lret
rorb
rcrl
push
nop
scas
mov
adc
aaa
push
arpl
dec
sti
dec
jle
lcall
ret
fmul
mov
add
cmp
inc
xor
mov
fwait
cmp
mov
push
cmp
cmp
adc
test
pop
fs
pop
push
dec
xchg
repnz
out
pop
fnstcw
xchg
jg
ret
cltd
lods
js
mov
imul
mov
mov
addb
ret
push
lds
aas
xor
jne
pushw
push
aas
mov
out
rol
add
jmp
xor
sbb
mov
cmp
iret
inc
mov
jmp
cli
or
cli
mov
cmpsb
in
or
mov
outsl
mov
cmp
add
mov
cmp
leave
xchg
sbb
pop
sahf
cmp
sub
repnz
out
pop
push
and
cmc
xchg
pop
loope
insl
mov
testb
xchg
inc
inc
cmp
xchg
fstpl
cltd
pushf
scas
call
sbb
sub
xor
lds
loope
mov
shll
push
push
ljmp
outsl
int
or
lcall
insl
mov
cmpsb
adc
adc
sub
xchg
sbb
xchg
push
cmp
jge
sar
dec
les
cltd
ret
imul
pop
mov
mov
sub
and
sbb
daa
add
jmp
inc
ljmp
inc
fsubrl
jecxz
enter
loope
jae
jle
inc
push
jbe
shll
test
xor
push
mov
mov
xlat
xchg
lods
and
in
push
sbb
jmp
jae
mov
sub
jle
xorl
cmp
cld
cmc
lcall
dec
jnp
push
mov
mov
shrl
scas
inc
cltd
popf
and
adc
mov
mov
sahf
or
flds
inc
or
fidivs
add
lcall
jo
jle
sbb
test
xor
jo
jp
arpl
dec
mov
and
dec
dec
ret
vpunpckhwd
jae
iret
inc
ds
add
xchg
into
loop
popf
test
mov
mov
pop
sub
mov
jns
cmp
popa
jg
sub
xor
sbb
loope
xor
adc
hlt
data16
enter
sti
lret
dec
add
jl
data16
cmp
push
in
push
jecxz
xchg
outsl
imul
out
mov
test
pop
pop
xor
pop
and
pop
cmp
outsl
call
aam
iret
mov
icebp
out
rcll
or
jae
test
sbb
jne
sub
push
lret
dec
les
in
or
mov
and
sub
popl
mov
mov
lahf
int
mov
js
mull
pop
and
cmp
insb
sbb
add
psraw
outsl
jg
fcmovnb
lods
add
push
inc
in
and
adc
jbe
testl
loop
lret
scas
std
outsl
lahf
aam
push
aas
into
jo,pn
push
adcb
lret
cmp
sarl
pop
and
or
in
cmp
xorl
or
xlat
fst
in
lea
dec
lea
and
cld
sub
xlat
mov
pop
pusha
movsl
mov
fisttps
sub
sub
cwtl
add
mov
cld
mov
jle
les
adc
and
cmpl
mov
mov
adc
loope
jge
mov
stos
cmp
inc
daa
sub
loop
loop
push
imul
clc
and
xlat
daa
loop
pop
sub
loopne
pusha
popa
jns
and
xchg
cmp
adcb
inc
mov
aad
daa
ss
xlat
popf
and
data16
jbe
sbb
mov
call
movl
sbbl
mov
add
jg
je
lds
cwtl
shl
pop
call
mov
dec
test
out
xor
push
jp
mov
adc
rolb
cmpsl
cmpsl
and
xchg
out
test
stos
sub
test
scas
mov
loope
adcl
sahf
cmp
popa
cmp
xchg
out
sub
cltd
clc
setg
adcl
outsl
jl
imul
xchg
ss
in
mov
cmp
fistl
fdivl
lods
rcrl
jb
loope
push
pop
xchg
xor
int3
or
filds
mov
xor
pop
inc
mov
or
sbb
out
loop
cmp
mov
fisttpl
mov
mov
lret
aas
subb
mov
gs
mov
mov
aas
lahf
inc
pushf
stos
mov
push
popf
xchg
and
or
push
ret
xchg
fistps
lods
xchg
xchg
repz
mov
or
test
loop
dec
xchg
cmp
orl
pop
scas
dec
mov
mov
pop
or
push
cmp
scas
dec
xchg
iret
inc
xchg
jbe
or
stc
sub
nop
clc
dec
je
icebp
xchg
adcl
jmp
dec
mov
sbb
xor
mov
pop
jb
adc
pop
out
sub
adc
stos
push
ficoml
in
sub
leave
mov
mov
push
xchg
std
addb
clc
popf
mov
dec
data16
inc
sbb
mov
mov
arpl
mov
fstp
sbb
mov
mov
xchg
or
enter
lock
mov
mov
hlt
cmp
inc
mov
jo
fisubrl
arpl
cmc
adc
out
fwait
xor
cmc
bound
pop
mov
mov
pushf
add
in
mov
mov
or
sbb
jns
in
xchg
cld
and
or
ds
cmp
dec
mov
fcmovnu
dec
mov
push
cwtl
push
adc
jbe
pushf
lock
push
xchg
inc
fstpt
mov
stc
repz
cmp
cmp
xor
xor
vandnps
pop
xchg
push
in
enter
jno
inc
outsb
out
das
scas
jle
mov
out
xchg
adc
mov
loop
or
mov
sub
adc
cmp
mov
adc
jb
arpl
in
fwait
jno
inc
adc
jle
pop
sub
ljmp
rcr
iret
clc
into
daa
sbb
vpshlw
imul
mov
mov
jl
and
push
int
lock
loopne
popf
insb
test
jbe
xchg
sub
imul
mov
in
xor
pop
dec
xor
ljmp
cltd
push
int
push
and
jns
pop
pop
add
in
mov
mov
adc
aad
push
sbb
push
cs
gs
aas
mov
popl
fwait
inc
in
test
and
fwait
cmpsl
sbb
mov
xchg
repz
xor
icebp
jno
out
pop
rorb
jno
mov
aaa
in
push
fwait
mov
xlat
cmp
xchg
inc
cwtl
xchg
pop
test
push
repnz
mov
js
mov
cwtl
and
jne
ja
fcomps
int
lahf
dec
repnz
sub
stos
dec
daa
imul
push
xor
shrl
arpl
jne
push
in
das
js
cltd
sarb
ficoms
aaa
cmp
icebp
lea
fisttpll
jmp
out
addr16
fists
dec
cmp
mov
pop
sbb
rcr
in
insb
jne
xlat
push
and
dec
push
sub
outsb
movsb
or
pop
or
fsubrl
scas
jns
int3
push
icebp
jns
leave
out
jecxz
insl
or
into
daa
xor
dec
sbb
xor
pop
push
sub
xor
dec
and
fbld
lcall
pop
mov
dec
jmp
dec
sbb
push
clc
faddp
cmpsb
cmp
or
pop
inc
dec
rolb
inc
fistpll
pusha
mov
test
bnd
mov
add
sbb
shl
mov
add
sbb
xorb
fwait
icebp
sub
adc
lds
cltd
ss
inc
clc
sbb
pop
fldcw
fldenv
add
stc
std
dec
mov
scas
sbb
lock
fs
push
pxor
repnz
addb
cmpsb
lods
and
orl
pop
and
push
sub
xor
je
lret
in
mov
cmp
ds
xor
pop
push
inc
aas
ds
pop
pop
dec
dec
inc
sub
leave
push
mov
dec
lods
imull
pop
jmp
fisttpl
scas
xchg
pop
mov
fwait
mov
icebp
ret
loopne
pop
mov
pop
loop
xchg
mov
sbb
test
xchg
cs
or
jno
sbb
ffreep
ret
cwtl
mov
sarb
dec
lea
mov
fistl
fsts
ja
gs
xchg
loop
dec
mov
mov
test
lock
hlt
ljmp
xor
mov
out
mov
inc
cmp
or
or
dec
cwtl
ret
add
imul
dec
aas
mov
xor
adc
xchg
sub
pushf
es
int
data16
into
testb
and
mov
add
stc
jp
push
dec
les
lds
mov
lea
les
popl
jno
and
inc
xor
popf
imul
ss
fsubl
xchg
mov
or
movsl
sbb
cld
lods
insb
faddl
pop
adc
inc
mov
adc
dec
ror
in
lods
cmp
subl
push
aas
xchg
hlt
sub
push
rcrb
push
xchg
movsl
insl
sub
in
xchg
je
sub
nop
xchg
dec
es
pusha
mov
push
imul
cmp
gs
shl
insl
aaa
lock
sti
mov
fcom
call
xor
sbb
jmp
jmp
leave
add
mov
es
test
jecxz
mov
fidivl
fildll
mov
call
subl
xor
xor
clc
xor
jns
popf
subb
sub
push
sbb
in
pop
aaa
mov
jle
xchg
sub
xchg
xor
cmp
ffreep
fidivrl
int
sbb
mov
fldcw
add
dec
mov
stos
lds
sarb
push
lcall
jnp
cmpsl
aaa
xor
adc
add
xor
or
push
popa
dec
xlat
sub
loope
cmpsl
and
fmuls
add
jle
jp
sbb
test
jle
jle
ja
cli
bound
sbb
insl
pop
cmp
inc
mov
mov
in
push
sub
lds
mov
popf
fwait
dec
xchg
or
mov
cmpsb
xchg
filds
mov
rcl
xchg
add
xor
cmp
or
cld
mov
xchg
xchg
out
and
mov
and
xor
imul
xor
fwait
mov
xchg
jne
sub
pop
dec
cmpsl
or
andl
xchg
mov
or
mov
push
ljmp
jl
loop
mov
lds
into
pop
les
and
out
and
imul
push
lret
add
les
int
icebp
cmp
inc
das
push
pop
into
mov
test
out
sbbb
push
cmpb
sbb
push
enter
rolb
in
sbb
cmp
shlb
rcrb
jnp
mov
push
hlt
and
dec
or
dec
or
imul
test
and
and
mov
mov
mov
pop
mov
cwtl
sub
sbb
cmpsl
mov
mov
push
loop
sahf
push
pop
and
add
data16
mov
dec
aad
addb
incl
leave
mov
pop
fwait
scas
dec
out
insl
cmc
call
xchg
out
cmp
or
lcall
pop
outsl
xor
mov
lock
jge
lock
cmp
cwtl
je
stos
jmp
xchg
cmp
pop
jge
mov
jmp
fadds
push
mov
fisubs
pop
cmpsl
dec
inc
sbb
mov
mov
mov
int
pushf
mov
mov
adc
lea
mov
ret
mov
mov
xchg
out
imul
jo
lods
fildll
cmp
ret
pop
dec
xchg
jne
or
ss
ljmp
sti
pop
xchg
mov
sub
mov
movl
hlt
xor
jmp
sbb
ja
loope
sbb
bound
cwtl
pop
dec
sub
xchg
daa
inc
frstor
in
inc
aam
cmp
mov
lcall
xor
fdivl
and
ljmp
das
xchg
mov
jmp
pop
out
pop
jge
ljmp
sbb
lret
jg
jg
sub
cmp
and
mov
pop
pusha
popa
xor
out
push
push
outsb
je
aad
imul
and
leave
gs
lock
cmp
xchg
xchg
imul
mov
fwait
addr16
jge
lahf
pop
es
and
cs
jmp
cli
mov
add
imul
push
push
ret
in
out
and
sub
pop
stos
mov
in
in
std
outsl
pop
jns
lods
movsb
add
cld
daa
push
sub
insb
fisubrl
lods
xor
dec
sub
push
xchg
cmp
cmc
and
lret
cmc
popf
fmull
ss
cmp
xchg
pushf
insb
shll
push
cmpb
and
icebp
xchg
pop
adc
int
ljmp
popf
fsincos
xor
in
pop
or
aad
mov
outsb
add
and
std
xchg
mov
rcll
sbb
outsb
jecxz
mov
loopne
mov
stos
lcall
inc
sbb
fdivl
pop
push
stos
sbb
lea
repnz
gs
outsl
rcr
sti
and
jb
loopne
lret
add
lods
inc
xchg
push
out
pop
push
mov
popf
cmpl
jno
dec
cmpsb
dec
les
mov
mov
idiv
test
or
pop
stos
or
cmp
pop
cwtl
ja
lods
imul
jle
aas
fldt
jp
pop
iret
mov
cmp
adc
adc
sub
addr16
jge
pop
fstpt
pop
xchg
test
jns
and
dec
xlat
jb
lods
ja
xchg
enter
jg
add
mov
sahf
jae
mov
sbbb
jge
hlt
frstpm(287
xchg
bndldx
xchg
inc
and
rcll
pop
mov
xor
push
pop
addb
lds
mov
or
jbe
sbbl
mov
insl
dec
pop
nop
es
imul
adc
xor
stc
fwait
aam
sar
mov
bound
rclb
fbld
ljmp
loopne
jo
pushf
push
testl
idiv
adc
out
std
out
jl
inc
pop
pop
and
push
pop
cmp
decl
pop
mov
push
jge
fisubs
ljmp
xor
mov
shrl
ja
ljmp
ret
fmul
ljmp
jecxz
cmc
mov
pop
ss
int3
and
push
pop
fisttpll
fcomps
sarb
push
push
test
enter
loop
fs
mov
sub
cmpsb
mov
sub
mul
mov
pop
shr
pop
push
icebp
mov
mov
lahf
cmp
dec
lods
sti
insb
xchg
aas
cmpsl
sbb
dec
shll
and
cmpsl
fstps
lret
mov
cmp
xchg
inc
lods
sub
adc
ljmp
cmpsl
mov
pop
repnz
jbe
jns
and
cmc
sub
dec
je
push
aas
inc
xchg
sti
shl
outsb
jno
lods
daa
xchg
dec
mov
call
inc
ljmp
cmp
cmp
sbb
cmp
frstor
repz
add
int3
push
pop
xchg
rolb
push
sub
ljmp
and
add
mov
push
insb
inc
jg
ret
out
in
mov
adc
in
out
jbe
mov
cmpl
movsl
mov
cmpsb
movsb
sbb
test
fbld
xchg
insb
add
adc
loop
xchg
subl
mov
dec
push
je
sub
loope
pop
mov
push
inc
push
xchg
shrl
xchg
dec
push
xlat
je
pop
or
xorl
lea
xor
add
rorl
fs
cmovge
in
mov
and
or
inc
pop
cmp
test
stc
pushf
mov
and
add
sub
in
jne
push
xor
mov
cwtl
jae
nop
loopne
mov
xchg
jmp
xor
sbb
stos
sub
sbb
mov
test
movsb
jnp
cmpsl
scas
xor
fxch
aas
pop
and
jecxz
bound
aaa
adc
fnstenv
lds
mov
das
cmp
das
mov
sbb
xchg
int3
cli
add
sub
das
jo
les
shlb
xchg
mov
jns
mov
adc
xchg
jae
aam
out
int3
mov
xor
jmp
pusha
mov
lock
mov
adc
in
jno
pop
ret
xchg
call
fwait
jbe
popf
mov
int3
jbe
sti
shll
inc
dec
xchg
pop
push
xchg
sbb
inc
mov
cmpsl
pop
out
loop
cmpb
sub
push
push
or
or
jne
jne
movsl
mov
lds
mov
xchg
dec
cld
into
push
add
lds
repz
inc
ds
mov
cmp
fmuls
icebp
out
jmp
cmpsb
mov
jb
xor
adc
in
mov
add
sti
mov
nop
xor
rol
jns
cmp
cwtl
cltd
mov
loopne
lahf
es
add
repz
adcb
xor
rclb
jns
sub
fs
and
or
clc
mov
repnz
cmp
xor
push
je
cmpsl
push
xchg
inc
int
jno
inc
jbe
inc
je
xorb
test
xchg
xchg
faddl
add
inc
cwtl
pop
nop
aas
aaa
in
jge
pusha
sbb
call
test
push
xor
jp
cmp
loop
sub
ret
sahf
jno
fadd
fnstcw
into
xchg
orb
lret
jns
add
lcall
repnz
daa
push
repz
jmp
jo
sahf
dec
cmp
inc
lea
cltd
andl
xchg
fistpl
clc
int3
loopne
inc
in
lods
mov
lods
leave
mov
jp
cmp
sub
pop
mov
mov
sbb
fldenv
xchg
cmp
mov
xor
enter
insl
xchg
in
sub
xchg
xchg
mov
gs
sbb
rcr
insl
ficomps
mov
cmp
xchg
pop
mov
lock
imul
hlt
xor
xor
dec
fsubrs
call
pop
cwtl
xlat
cwtl
sub
adc
divb
int
fistps
nop
stos
nop
stos
sub
add
mov
jno
insb
int3
lret
push
push
jge
cli
mov
jae
testb
pop
adc
inc
loope
xchg
dec
idiv
jl
jne
lcall
in
push
unpcklps
js
pusha
stc
mov
add
and
das
andl
push
mov
cmp
cmp
fldt
es
popa
push
mov
cld
js
push
imul
mov
fistpl
pop
imul
filds
cmp
jne
and
roll
or
pop
mov
pushf
aaa
popa
cmc
idivb
mov
fwait
popf
inc
push
push
push
push
adc
psrad
je
mov
fisttpl
dec
cmpsl
sbb
ss
mov
xchg
ds
cld
into
sbb
or
and
fdiv
js
dec
inc
imul
jecxz
fimuls
stos
lea
xchg
lods
inc
leave
sahf
daa
in
push
nop
shll
push
test
or
shrb
push
push
ss
mov
aas
push
pop
out
add
and
or
mov
push
shlb
adc
insl
cltd
imul
movb
fwait
shlb
push
push
in
jnp
daa
jp
int
sti
test
and
movsb
shrb
fisubrl
pop
aad
les
test
add
xor
shl
sub
loope
jle
push
push
sarl
inc
lahf
push
pop
push
xor
roll
fistps
js
pop
mov
stc
lods
adcb
dec
aas
lahf
mov
hlt
cmpsb
or
mov
popa
imul
sub
lea
and
rclb
lods
stos
xchg
repnz
popa
cmp
es
pop
jp
test
mov
mov
sub
dec
pop
movsb
dec
mov
lret
jb
arpl
cmp
into
jnp
or
nop
rolb
jbe
fiaddl
fdivrl
fistps
cmp
pushf
popa
xchg
ret
test
mov
xor
jbe
shrb
shrb
mov
adc
fstpt
push
xor
outsb
gs
jno
push
mov
xchg
xchg
fldenv
and
push
scas
les
or
sbb
lods
sahf
xchg
push
rcll
test
push
lods
lret
and
loopne
mov
cld
push
mov
mov
in
xlat
and
imul
lds
mov
cmc
movsb
bound
dec
mov
dec
push
inc
insb
loop
sti
push
xor
fsubr
test
ja
aaa
andl
sarl
leave
rclb
cltd
dec
pop
and
fmul
fstps
xchg
push
xchg
xchg
lcall
pop
stos
addr16
imul
idivl
mov
ja
cwtl
push
pop
adc
outsb
es
xchg
lea
inc
sub
lahf
cmp
xchg
adc
mov
xchg
lods
ja
pop
shll
mov
movsb
add
push
insl
pop
xchg
int
and
inc
mov
pop
aas
jmp
idiv
xor
mov
lods
push
push
int
and
inc
mov
dec
or
mov
in
jns
fnstsw
iret
mov
add
enter
dec
jmp
shrb
fbld
insl
xchg
call
imul
test
add
popa
out
hlt
shrb
out
dec
inc
inc
scas
mov
shrl
dec
sbb
or
xor
mov
inc
dec
repnz
mov
aad
jae
adc
aas
clc
sbb
mov
mov
int3
xchg
jno
loop
inc
cmp
mov
iret
xor
ja
sub
sbb
fxtract
js
pop
dec
popf
ss
stc
jbe
cmp
aaa
lcall
fldenv
lea
aad
pushf
or
xchg
fbstp
std
enter
fcomi
scas
inc
leave
insl
int
mov
push
mov
push
mov
mov
sbb
sbb
lods
jge
pop
inc
std
pop
xchg
pop
or
fs
sbb
jg
nop
in
clc
hlt
push
adc
mov
sarl
jle
stos
xchg
int3
pop
mov
cmp
nop
mov
rcrl
gs
fisttpll
movsl
pop
faddl
test
loop
lods
sub
jl
pushf
sti
mov
and
dec
inc
push
and
mov
mov
sub
push
sbb
mov
xor
mov
mov
repnz
jnp
xor
and
pop
jno
inc
shll
dec
cmpl
dec
push
aam
adc
push
aaa
mov
jne
or
out
leave
mov
sbb
push
fimuls
mov
mov
jno
lock
lea
xchg
and
mov
pop
xchg
and
gs
xchg
mov
dec
rolb
mov
cwtl
xchg
add
xchg
cld
and
pusha
mov
in
iret
sbb
test
idivb
inc
xchg
xor
out
cmp
mov
aas
ret
and
cli
xchg
je
mov
add
sub
enter
push
or
bound
adc
mov
add
mov
mov
mov
dec
flds
and
mov
rorb
gs
shll
add
fisttpl
inc
inc
out
in
nop
pop
mov
mov
aaa
add
cwtl
add
mov
pop
sub
push
sbb
sti
mov
std
ds
fisttpl
mov
add
xor
adc
mov
loop
aam
inc
sub
sbb
dec
dec
inc
sub
fdivl
mov
xchg
mov
xchg
adc
je
ret
push
ss
cmp
cmp
jp
cmpsl
dec
push
pop
rep
arpl
pop
jg
das
mov
inc
stos
dec
into
loope
and
pop
jge
loop
xor
negb
sbb
rep
mov
push
test
out
pop
repnz
dec
cmc
pandn
dec
or
clc
push
into
dec
cltd
aas
pop
ret
push
sahf
ret
aaa
mov
scas
push
push
inc
iret
mov
jle
push
push
cmp
jl
leave
rol
mov
xor
cmpsb
pop
xor
push
jnp
pop
mov
jp
sbb
insl
lret
int
in
mov
or
arpl
pop
loope
inc
adc
jno
setl
mov
push
inc
ljmp
pusha
mov
ror
jecxz
dec
pop
mov
in
push
int3
test
jne
outsb
outsl
lret
jle
fwait
push
lea
leave
repz
mov
pop
mov
mov
cmp
mov
jae
ret
inc
stos
cltd
add
stos
in
lock
ret
stc
movsb
jge
jle
pop
xchg
pop
es
mov
loopne
jno
jnp
ss
in
xchg
leave
das
and
stos
cli
jmp
jno
lods
fwait
shrl
jle
lahf
sahf
push
out
cmp
xor
out
shrb
movsl
lock
test
mov
mov
xchg
adc
imul
lcall
int3
sub
mov
fcmove
sub
outsb
mov
pop
mov
cmp
fidivrs
push
xchg
std
int3
xchg
xchg
in
pop
adc
jnp
jl
mov
dec
test
into
jb
mov
jae
movsb
out
mov
xchg
rcrb
jno
add
mov
dec
repz
push
lret
add
sbb
adc
push
mov
cwtl
and
push
xor
cmp
pop
pusha
lods
das
adc
call
jp
lods
lret
insb
inc
and
shrl
movsb
movsb
stc
adc
mov
sahf
mov
out
jbe
dec
movsb
fwait
mov
cmpsb
jl
push
pop
push
xor
mov
sub
mov
cli
fs
sbb
jb
outsb
sahf
in
sbb
mov
je
jp
mov
push
xchg
mov
ljmp
mov
int
push
pop
add
dec
dec
cmpsb
aam
pop
into
lret
cmova
jle
and
fdiv
xchg
int3
int3
aad
push
mov
fistps
orl
outsl
movsb
adcl
pop
mov
xchg
push
push
jge
pop
pop
pop
addr16
dec
sub
or
enter
dec
ret
lcall
push
adc
sub
out
xchg
sub
pop
movsl
sub
rcll
push
cmpsl
xor
cmpsl
mov
and
push
daa
mov
jns
daa
fdivs
mov
mov
aad
add
sub
fxch
iret
jmp
xchg
les
cltd
lds
hlt
pop
outsb
pushf
push
je
jns
aas
sbb
adc
fdivrl
dec
inc
clc
jmp
push
add
add
stos
lea
inc
dec
int3
jl
rorb
push
fcmovu
xchg
outsl
cmp
roll
adc
rcl
imul
fwait
dec
mov
aad
in
jbe
ja
imul
cmp
xor
inc
mov
pop
lahf
jns
roll
dec
out
mov
cltd
mov
ss
arpl
jle
imul
pop
sub
outsb
mov
push
xchg
push
lcall
mov
inc
xor
in
loope
or
aam
test
and
aaa
sbb
xor
data16
test
in
jo
pop
jbe
push
or
in
mov
pop
ret
xchg
sbb
add
iret
sarb
adc
inc
arpl
cmp
mov
mov
and
lret
sbb
shll
pop
jle
mov
lahf
mov
push
js
or
and
adc
mov
jle
jle
mov
adc
outsl
mov
repz
in
cmpsl
roll
jl
mov
ja
xchg
dec
sbb
pop
pushf
test
xchg
sbb
mull
ss
rolb
stos
test
int3
ds
loop
and
pusha
bound
mov
insb
pop
mov
pop
outsb
jae
pop
sub
push
mov
pop
bound
popl
enter
inc
adc
push
mov
add
movsl
add
aaa
sahf
lods
nop
pop
stos
dec
fs
mov
scas
testl
mov
mov
dec
dec
cmp
push
jmp
jl
pop
leave
mov
mov
add
or
jno
pop
inc
pop
outsl
mov
xchg
sahf
div
push
mov
aas
loop
or
adc
mov
jbe
insb
mov
lods
call
adc
std
nop
cli
add
push
inc
mov
popf
out
pop
pushf
jle
cmp
lods
mov
add
add
sub
sub
dec
dec
sbb
pop
sub
fldcw
rcrb
dec
pslld
sub
mov
xchg
sub
and
dec
ds
sub
mov
xchg
mov
cld
dec
jmp
cmp
mull
inc
pop
ljmp
push
sub
popf
adc
mov
add
in
dec
mov
xchg
in
xchg
mov
add
ret
call
fisubs
test
mov
jne
sub
loop
test
dec
loop
jno
push
adc
lds
test
xchg
pop
jge
inc
cmp
fxch
repz
scas
stc
pusha
cld
mov
ss
jge
es
jmp
adc
leave
popl
push
push
enter
loop
addr16
mov
popa
pushf
lahf
call
jnp
ja
mov
imul
xchg
cmp
push
mov
repnz
inc
jg
mov
pop
lret
lret
push
in
scas
push
bound
int3
loop
lea
enter
or
sbbb
incb
out
stc
ljmp
push
adc
push
ja
sub
lret
sbb
fisubrs
add
iret
mov
dec
out
mov
lahf
cmpsl
cmp
test
push
mov
ss
adc
sbb
test
mov
add
icebp
stos
inc
push
lcall
dec
xchg
push
repnz
sub
clc
sbb
or
inc
lahf
dec
shll
pop
dec
or
xlat
cmpb
stc
fiaddl
mov
fmull
xchg
mov
dec
dec
loop
dec
mov
sub
mov
data16
xchg
mov
mov
andb
sub
test
sbb
mov
lea
dec
ficompl
shll
or
icebp
cmp
dec
and
cmp
xchg
rorb
call
pop
arpl
or
sbb
mov
xchg
pop
pop
inc
xchg
or
and
cwtl
shll
xchg
mov
pop
mov
push
popf
gs
jl
fcompl
xor
xchg
jecxz
pop
stos
mov
push
out
mov
data16
xchg
dec
sub
insl
mov
inc
pushf
cmp
xchg
inc
rolb
mov
sbb
fldcw
sbb
stos
subb
mov
cmp
iret
lods
dec
shl
pop
or
sbb
insb
push
pop
mov
sbb
into
pop
xor
cmc
call
mov
cmp
mov
mov
sbb
mov
icebp
jg
nop
in
sbb
icebp
mov
aad
pusha
loope
lods
sbb
movb
mov
mov
mov
lea
xchg
adc
cmp
shrb
mov
mov
in
xor
loopne
xchg
jecxz
pushf
cmp
addb
stos
inc
addr16
push
or
pop
inc
mov
loope
push
lods
or
ret
mov
push
add
into
jg
imull
ss
pop
pop
pop
ret
int3
out
dec
cmpsl
negl
xor
mov
sub
dec
je
fstps
add
enter
push
out
cwtl
cmp
push
or
arpl
jl
clc
pop
ret
orl
mov
cmp
imul
jne
pop
cmp
sbb
fidivrl
imul
repnz
popa
fimull
mov
sti
popf
xor
push
jl
nop
clc
outsb
or
mov
jmp
test
bound
ret
subb
cmp
repz
mov
push
aam
xor
mov
data16
out
mov
push
adcl
mov
cmc
push
insb
data16
dec
mov
shrl
fnstsw
sub
scas
insb
dec
or
or
aad
outsb
and
call
pop
lret
int3
sub
cmp
pop
xor
into
push
pop
add
nop
sub
fst
sub
push
jbe
cltd
inc
mov
xor
int3
rol
testl
xchg
cwtl
iret
lret
inc
inc
adc
dec
in
out
rolb
mov
outsb
mov
fdivl
jne
stos
jmp
stos
jno
orl
push
inc
gs
insb
jmp
pop
jno
pop
cmp
out
dec
add
jno
mov
dec
ficoms
jmp
pusha
stos
addr16
xchg
fidivrl
sub
xor
sub
mov
jns
repnz
xchg
mov
xchg
xchg
push
shrl
dec
mulb
xor
dec
and
push
mov
test
arpl
movsb
cmpsb
out
test
mov
mov
sbb
or
and
into
push
cmp
subl
jl
es
dec
lods
test
gs
xchg
mov
adc
push
mov
pop
xchg
and
test
lret
pop
loopne
mov
and
and
xor
mov
sbb
lods
mov
dec
arpl
or
fcmovnu
adc
outsl
mov
push
out
jl
incl
lea
mov
jno
test
aam
dec
mov
cmpsb
inc
push
inc
add
mov
mov
or
add
add
shrl
xchg
pop
rcrb
cld
hlt
mov
in
roll
xor
push
push
lret
leave
inc
mov
stos
xor
mov
shrb
dec
sbb
jg
loope
pop
add
or
push
pop
jmp
ret
push
xchg
in
mov
cmp
push
leave
jmp
sbb
cs
es
and
cmpl
in
dec
inc
outsb
jns
cmp
jg
test
or
push
mov
sbb
add
lahf
dec
inc
test
rol
xor
push
xchg
outsb
imul
dec
cs
lret
js
mov
test
push
add
cmpsl
pusha
sub
dec
in
lds
cmp
scas
and
repz
lcall
and
inc
sub
pop
out
dec
das
push
std
icebp
jle
test
pop
pop
mov
sub
outsb
sbb
jecxz
pop
outsb
dec
mov
push
in
hlt
fisubl
loope
mov
mov
mov
into
xor
cli
cmp
enter
lds
sbb
adc
add
dec
divb
test
int
xchg
pop
jnp
add
sarb
loopne
inc
test
xlat
in
lret
pop
ror
xchg
and
cmc
jmp
bound
insl
sbb
mov
sub
mov
jp
dec
std
pop
mov
iretw
inc
std
mov
push
xlat
dec
mov
jle
lahf
cmp
dec
out
jb
js
mov
pop
ficoms
jmp
scas
in
pop
test
and
adc
xchg
jne
xor
adc
andl
pop
out
movsl
add
cmp
sub
xchg
pop
rcrb
ret
sub
or
sbb
hlt
fcoml
jecxz
dec
push
scas
xor
jg
outsb
xor
and
adc
test
mov
aas
clc
xor
xchg
cmpb
cld
xor
cmc
inc
dec
fs
data16
std
and
adc
fs
fisubl
scas
jno
sub
dec
cmpsb
je
lcall
cmp
jmp
sub
lds
mov
sbb
std
dec
mov
out
mov
push
fwait
test
inc
jg
push
stos
push
addl
repz
lret
mov
jo
inc
jb
in
xchg
outsb
mov
jmp
sub
dec
cmp
sahf
xor
cmp
add
lahf
mov
lods
sbb
cmpsl
sbb
incl
or
push
xlat
andl
inc
dec
dec
cmp
test
and
imul
mov
sbb
clc
pushf
mov
fcomp
loopne
sub
arpl
mov
scas
rep
insl
sbb
pop
pop
dec
je
xchg
xor
data16
pop
mov
xchg
mov
cs
imul
sub
or
xchg
xor
mov
push
cmpb
sub
xor
lods
aad
xchg
stc
jo
fucomip
add
imul
fs
mov
mov
xchg
imul
mov
or
push
cmp
mov
or
mov
das
rcrb
movsl
mov
insl
ret
xchg
ficoml
call
dec
jp
loope
ficoml
rorb
sahf
xor
sbb
xchg
js
icebp
cld
loop
inc
mov
out
xchg
mov
xchg
dec
sub
jecxz
xor
mov
add
leave
xchg
pop
mov
or
lret
scas
stos
sbb
cmpsl
int
cs
aam
dec
je
mov
es
fxch
cmp
push
negl
mov
push
sbb
push
mov
frstor
dec
nop
popa
hlt
outsb
aaa
lds
inc
dec
push
add
mov
or
cld
inc
sar
adc
add
add
sbb
xor
jecxz
xchg
cmp
sbb
test
lods
lods
pushf
hlt
fimull
sub
dec
leave
std
out
dec
sub
cmpsb
or
xchg
and
aad
movsb
cmp
push
fisttpl
scas
int3
mov
or
cli
outsl
icebp
inc
add
ss
jae
mov
add
bound
test
aad
xchg
xchg
jae
xor
sbb
jecxz
lahf
test
lret
add
cltd
and
es
lret
cmp
mov
aad
fdivr
mov
cmp
push
fidivs
xor
dec
les
popf
repnz
int3
orl
inc
jae
sti
lret
mov
popa
adc
dec
mov
add
fstps
jle
dec
inc
das
shrb
sarb
adc
loop
mov
mov
cmp
adc
fldz
and
pop
or
gs
out
xlat
imul
xor
or
or
jae
and
outsb
push
mov
inc
add
jb
sbb
sub
adc
xchg
sarw
cmp
xchg
and
gs
into
stos
int3
arpl
mov
push
out
mov
push
sti
les
in
xor
inc
jmp
notb
cmp
stc
sti
aam
mov
jne
mov
sbb
in
imul
mov
mov
inc
out
mov
xor
cmp
mov
mov
push
shll
and
mov
pop
subb
mov
fbstp
mov
scas
mov
lar
or
icebp
xchg
je
in
cwtl
scas
rorl
and
out
mov
stc
repz
or
ret
sbb
movsl
xchg
mov
outsl
dec
addr16
fwait
add
inc
mov
and
hlt
cmp
ds
sub
jge
fbstp
das
mov
repz
add
je
xor
mov
pop
icebp
jbe
and
cmp
push
repz
jmp
iret
leave
push
inc
dec
dec
sub
sahf
hlt
push
loopne
sub
fnsave
dec
inc
insl
xor
or
sbbb
stos
dec
cld
dec
movsl
push
push
cs
sbb
or
mov
cmp
dec
xchg
lea
bound
cwtl
xchg
test
or
xchg
rcl
in
mov
jg
pop
pop
mov
dec
out
xlat
scas
lret
shl
dec
dec
push
dec
outsl
adc
es
pop
and
mov
adcb
jp
jb
popf
xor
mov
cmp
leave
movsb
cmp
iret
dec
and
fsubrs
js,pn
jbe
je
mov
xor
je
leave
xor
ds
pop
add
lds
mov
mov
fbld
rcrb
jnp
in
cmp
pop
pop
frstor
stc
out
mov
faddl
sub
in
mov
mov
sub
inc
sub
cmp
repnz
fnstenv
dec
movq
in
dec
and
dec
push
cmp
xchg
add
jle
cs
pop
sub
adc
dec
js
mov
mov
push
lds
xor
xchg
dec
sbb
add
sub
jno
sbb
ss
add
stos
fdivrl
pop
cs
xchg
fstps
pop
int
adc
jne
pop
ja
push
and
ljmp
sub
cmp
in
mov
push
xlat
repz
out
cmp
xor
lock
push
stc
dec
cmpsl
iret
insb
sub
jno
or
test
cld
and
rorb
sub
fwait
sbb
hlt
cmpsb
and
jo
xchg
dec
ret
lds
jno
mov
mov
mov
aaa
mov
and
mov
sub
int
xchg
sub
xchg
mov
push
lcall
fwait
push
aas
fmull
mov
dec
jo
mov
adc
jnp
jo
mov
push
sub
push
or
imul
mov
push
sbb
loopw
or
cmp
sbb
pop
call
mov
out
lods
inc
fwait
mov
adc
sub
fcomip
mov
lods
out
pop
and
fdivl
or
push
icebp
test
xor
loopne
jl
divb
jecxz
inc
dec
es
in
or
dec
push
out
xchg
test
mov
push
cwtl
sbb
loopne
pushf
insb
inc
push
inc
decb
repz
repz
push
repz
out
stos
cmpsb
roll
jno
or
add
sbb
je
jnp
jl
int3
test
daa
xchg
fstpl
push
test
cmp
sti
xchg
jmp
addl
mov
fists
add
nop
mov
loope
sub
sti
jg
test
out
lahf
lock
aas
pop
dec
mov
mov
hlt
aad
stc
xlat
nop
ret
xor
stos
fs
cmp
mov
pop
loope
xchg
jle
add
ret
das
adc
insb
mov
imul
rolb
out
test
arpl
popa
daa
cmpsb
push
mov
fucom
cmpsb
aas
push
cld
mov
orb
out
ss
pop
div
hlt
js
mul
push
in
add
arpl
push
insb
add
xchg
add
fmull
push
sbb
jmp
shl
jecxz
push
std
or
cltd
push
mov
test
cmp
out
adc
sbb
int3
fdivl
popf
int
mov
pop
cmp
and
mov
leave
push
cmp
mov
add
sbb
sbb
sti
mov
xchg
imul
mov
or
lret
out
aad
ja
out
xor
fdivrl
cmp
cmp
movsl
push
jl
pop
or
and
xorb
mov
dec
or
cmp
jmp
jmp
into
push
icebp
faddp
mov
punpckldq
jg
lret
push
ficomps
icebp
inc
dec
mov
mov
outsl
mov
dec
xor
mulb
mov
or
add
lret
cmp
mov
xchg
sarl
push
add
js
fisubrs
xlat
mov
inc
lods
add
roll
inc
push
mov
jbe
cmpsl
mov
dec
enter
pop
mov
xlat
cmp
pop
ss
mov
mov
xchg
das
and
movsb
sti
scas
test
ljmp
scas
out
and
jmp
pop
ss
fidivs
out
xor
push
sub
pop
adc
insb
iret
jnp
sub
rorl
std
imul
jg
ja
leave
push
scas
gs
xchg
fistps
push
dec
sub
fcmovb
pop
push
mov
and
xchg
call
sbbl
aaa
lcall
xor
pop
push
lods
sbb
dec
cmpsl
sahf
inc
cmp
in
push
push
cld
in
xchg
sub
daa
or
xchg
imul
inc
into
pop
xchg
jns
in
sub
cmpsb
ret
or
mov
cmp
fs
jle
push
or
jmp
mov
in
jecxz
outsl
jnp
test
out
mov
inc
cmpsb
mov
repz
inc
cld
jle
fcompl
cmovge
mov
xchg
push
scas
jmp
mov
mov
movb
mov
jmp
fiadds
lea
ljmp
pop
fmull
xchg
or
or
call
out
or
out
mov
movsb
mov
insb
dec
mov
ret
add
lret
shll
lods
add
inc
xlat
js
push
subl
pop
std
mov
mov
push
and
and
xchg
or
stc
test
stos
inc
push
mov
cld
push
or
fmuls
clc
jnp
sub
mov
rorl
out
outsl
lds
sbb
jb
pusha
std
bound
mov
loop
add
repz
in
mov
cld
subb
xor
dec
dec
adc
jno,pt
inc
outsb
mov
xor
jns
sahf
lea
shlb
pushf
mov
push
adc
add
out
push
sbb
cmpsl
inc
push
outsb
push
cmp
jg
aad
cli
lret
lahf
ss
enter
out
xchg
fdivrs
mov
icebp
add
negl
insl
cmp
mov
inc
cld
jmp
mov
jno
sbb
cwtl
loopne
lods
push
push
int3
and
inc
xchg
lods
cmpsb
push
repnz
and
subl
push
sbb
jns
inc
sti
icebp
inc
outsl
sbb
push
adc
jbe
idivl
cmpsb
lock
rclb
out
lahf
hlt
mov
lods
negb
push
sbb
push
mov
sub
int
out
pop
ljmp
or
dec
push
shll
jno
jecxz
cmc
cmpsl
and
leave
clc
data16
fcmovnbe
pop
outsl
nop
jl
sti
pop
add
shr
mov
push
push
shll
outsb
fstl
shlb
mov
nop
xchg
cs
scas
int3
leave
push
cmp
add
xchg
jo
adcl
mull
loop
stos
jae
push
movsl
xor
cmc
jno
xchg
push
pop
arpl
jo
mov
push
mov
or
mov
xchg
push
aaa
sub
cmp
mov
pop
cwtl
xlat
daa
cmp
jmp
aas
pop
push
mov
push
and
cmp
adc
jge
cli
and
push
jae
jbe
repz
pop
cmp
dec
sub
dec
out
in
out
cs
out
stos
inc
movsl
inc
sbb
sbb
aas
mov
xchg
fildll
jl
test
xor
jb
xlat
call
mov
sbb
jo
mov
int
and
psubsb
shl
or
push
push
inc
jmp
sub
popa
pop
mov
sbb
sub
movl
mov
jge
aaa
aas
fcomp
cltd
push
inc
ljmp
inc
loop
loop
push
sahf
fldt
aaa
jns
fildl
cmpsl
lods
in
and
xor
bound
push
push
cmp
ds
push
cmovg
jecxz
push
xchg
jle
cmp
adc
xchg
mov
lods
push
inc
push
sarb
push
adc
popa
filds
xor
xor
pop
push
xchg
sbb
add
or
mov
pop
repnz
outsl
xchg
cld
sub
cmp
lahf
mov
test
adc
hlt
and
push
pop
cwtl
jno
mov
push
jnp
mov
adc
ja
aaa
mov
dec
jb
fsubrl
cmp
jnp
mov
or
push
add
int
xor
popl
jae
out
dec
push
pop
adc
into
jno
dec
push
repz
stos
shl
cmpb
adc
addl
mov
test
mov
sub
lea
enter
fiaddl
add
movsl
sbb
push
jne
dec
jmp
cmpsb
movsl
dec
cmp
mov
pop
adc
int
jb
fiaddl
add
ret
pop
push
dec
fcoml
hlt
test
femms
aas
out
mov
mov
repnz
xor
cld
cmpsb
cmpsl
cmp
sub
xor
dec
ljmp
in
lods
or
jg
fidivrl
jecxz
aaa
mov
mov
movsb
stos
clc
in
sbbb
fildl
insb
clc
xchg
leave
aaa
icebp
push
fisttps
jo
mov
fisubrl
mov
xor
add
fidivs
jp
call
adc
lea
adc
or
iret
stc
sbb
hlt
or
cmp
mov
std
xchg
jae
rcrl
out
dec
xor
push
je
enter
bound
fisttps
clc
cwtl
sub
push
sarb
sbb
jb
sbb
xor
movsb
rcll
sub
lret
mov
inc
iret
aas
sub
lcall
jge
xor
xchg
push
fbstp
cmc
push
push
inc
out
in
gs
or
sub
out
push
orl
sub
ja
mov
inc
hlt
sub
shl
pop
push
rclb
ljmp
pop
shrl
hlt
and
xlat
call
cmpsb
sub
push
mov
cmpsl
popa
cmc
lcall
cmc
adc
dec
sub
icebp
mov
out
jae
es
cmp
sbb
push
je
inc
pop
fidivrl
jl
out
lret
fwait
xor
jbe
aaa
lcall
stos
icebp
add
dec
sbb
cmp
icebp
sub
push
pop
int
in
js
sti
iret
jno
in
pop
sti
mov
cmp
pop
sbb
cli
mov
in
call
out
push
std
xchg
iret
call
ja
lret
ret
orl
aam
mov
stc
cs
mov
idiv
scas
cwtl
lds
ret
stos
call
loope
out
gs
pushf
jnp
sar
or
jle
popf
ljmp
and
or
push
cld
pop
mov
inc
arpl
sub
outsb
xchg
shll
xorl
mov
in
jp
jae
aad
fstl
fmuls
pop
call
loope,pt
imul
ds
jp
fdivrl
and
subb
das
dec
jae
mov
xchg
inc
inc
sub
leave
sbb
popa
mov
das
xchg
adcl
xor
mov
jg
dec
jbe
gs
insl
popf
in
ret
jp
sbb
sbb
lcall
aas
or
dec
push
sahf
fwait
ss
inc
adc
cmp
lcall
mov
gs
test
add
xchg
and
inc
adc
ljmp
cmpsb
les
jno
pushf
test
daa
jno
xlat
jnp
xor
mov
fcomp
aad
mov
mov
mov
push
loopne
lods
bound
repnz
xchg
pushf
pop
test
cli
test
inc
adc
pop
cmpl
mov
xor
sahf
insl
mov
cmp
sti
iret
xor
imul
or
outsb
pop
inc
insl
mov
pop
fs
push
push
cmpsl
andb
loop
mov
xor
movsl
mov
shll
iret
inc
faddl
pop
ret
xchg
push
cld
lahf
hlt
cwtl
js
movb
int
sub
fwait
out
jmp
xchg
jns
rcrl
stos
aas
insl
mov
and
std
mov
push
fnstenv
jecxz
movsb
test
and
add
xor
inc
vpaddb
cwtl
call
cli
les
mov
pop
xchg
icebp
lods
ret
cmc
mov
xchg
jno
cmp
test
sbb
sub
sbb
push
sbb
popf
sbb
iret
mov
add
cmp
das
push
xchg
jmp
adc
jle
neg
jo
xchg
jne
leave
sbb
and
sub
fwait
icebp
enter
shrl
adc
push
xor
aaa
push
push
or
cmpsl
mov
into
es
lods
into
loop
dec
loopne
and
inc
xchg
xchg
popa
int
jne
rorb
rcr
shlb
jg
lods
add
add
add
popf
jge
cmc
mov
scas
xchg
dec
sarb
mov
dec
mov
cmp
hlt
mov
pop
push
cmpsl
add
daa
or
jl
imulb
pop
jae
shrb
pusha
lods
adc
pop
xor
push
mov
sub
push
add
sbb
jae
pusha
xchg
push
sarb
inc
in
dec
cwtl
and
add
fidivs
popl
lock
mov
pop
and
inc
inc
sub
mov
mov
or
mov
divl
cmpsb
repz
insl
call
ja
nop
cmp
mov
mov
cmp
mov
adc
xor
add
adc
jge
or
push
cmp
fdivs
mov
insl
roll
lock
add
in
xor
pop
xchg
push
mov
clc
xchg
mov
adc
add
sti
lds
mov
lahf
ss
pushf
dec
lods
hlt
sbb
hlt
cmp
aam
jb
rcll
in
and
cld
ds
mov
adc
xor
pshufw
inc
fists
outsl
into
sti
scas
leave
clc
mov
scas
dec
out
jne
adc
cmpsl
or
add
xchg
xchg
inc
jg
dec
insb
mov
adc
sub
mov
sbbl
out
leave
adc
mov
filds
mov
mov
out
mov
mov
dec
outsl
mov
add
cmp
xor
sahf
stos
cmp
fwait
hlt
lods
dec
aas
adc
xchg
mov
jge
sahf
jbe
or
cmc
jg
pop
sub
rorb
xchg
pop
pop
add
push
mov
mov
repz
push
cmp
jae
js
cli
or
repnz
dec
jmp
mov
add
in
xchg
clc
pop
pop
jo
add
aaa
les
test
inc
adc
lret
cltd
imul
ret
dec
lds
jmp
shlb
pop
mov
xchg
adc
lret
in
push
sti
dec
stc
xor
fisttps
addl
jecxz
mov
filds
push
cwtl
and
and
xlat
push
mov
pop
rorl
and
pop
jl
std
das
or
test
cmpb
inc
jne
insb
add
fildl
mov
cmp
xchg
repz
fbstp
sbb
adcl
ss
outsl
pop
repnz
aam
push
pop
xchg
mov
lcallw
sarb
mov
cld
pop
and
cltd
movsb
ss
in
xor
lds
mov
ja
inc
mov
push
push
frstor
push
lret
or
aad
sarb
bound
testl
mov
pop
movsb
xchg
xor
inc
add
daa
jg
sbb
xchg
test
ds
sbb
lret
xor
bsr
sti
popf
dec
icebp
jecxz
mov
xchg
sbb
mov
and
or
std
mov
and
add
insl
icebp
out
shlb
lods
xor
mov
loope
gs
mov
fisttps
sub
mov
push
dec
or
cmp
call
mov
dec
cmpsb
aaa
scas
or
fdivrs
cmp
dec
int
fs
mov
cmpsb
arpl
dec
into
pop
xor
cmp
dec
ffreep
adc
int
into
add
xor
and
push
sbb
add
cmp
cmpsl
adc
stos
or
mov
push
repz
push
sbbl
sbb
or
out
popa
call
test
call
push
sbb
sbb
js
sarl
icebp
xor
inc
push
outsb
lds
cmp
inc
aaa
in
rolb
insb
stos
popa
popa
xchg
xor
mov
jl
push
or
fs
cmp
lea
js
fidivs
fdivrs
aad
inc
pop
or
xlat
mov
jnp
xchg
mul
mov
js
enter
xchg
out
stos
jnp
jmp
in
push
jg
scas
push
xor
jecxz
mov
and
in
rorl
cwtl
dec
out
bound
jmp
push
jno
std
pop
xlat
cmp
loope
adc
mov
xlat
dec
add
mov
jl
fcoms
movsb
aam
movb
je
mov
pop
add
xor
mov
arpl
mov
xor
xchg
cwtl
mov
cwtl
pop
fsubr
cmpsb
neg
leave
insb
mov
ud2
xchg
lods
inc
cltd
movsb
jmp
adc
cmp
movsl
mov
and
or
in
in
out
mov
fs
pop
or
aad
rcrl
fdivs
insl
pusha
sbb
and
int
out
pop
les
xchg
dec
jb
je
test
jg
jbe
cltd
push
rol
insb
dec
dec
and
jp
fldenv
pop
mov
dec
bound
rcl
inc
jns
data16
nop
in
sub
cli
xlat
or
mov
xor
push
mov
das
jno
mov
fdivl
orl
mov
outsl
mov
lods
sub
jecxz
jbe
inc
adc
sbb
cwtl
sub
enter
aas
into
mov
adc
or
mov
lods
mov
xchg
loopne
jl
xchg
add
dec
xchg
out
jle
aas
nop
mov
sub
ret
test
outsb
jge
sbbb
xchg
push
mov
mov
pop
out
call
add
shrb
out
inc
lods
pop
fildll
push
or
adc
cmp
xor
sub
cmp
sbb
lock
lahf
xor
pop
or
mov
mov
mov
mov
hlt
jle
pop
push
ret
out
jmp
push
dec
jo
xchg
cld
push
add
popa
fwait
cmpsl
inc
div
and
and
mov
dec
sub
insb
sbb
movsb
sti
dec
sub
mov
cmp
sub
lods
rorl
scas
adc
int
push
clc
movsl
mov
into
repnz
fmul
arpl
jno
ss
push
fcomp
mov
pusha
ret
adc
clc
pop
mov
and
sub
pushf
pop
repnz
pop
std
sti
fldt
xchg
and
mov
push
sub
mov
loop
aam
rcrl
add
pop
rorb
lods
stos
add
sar
cmp
dec
sbb
lret
inc
fwait
negl
mov
push
jne
mov
lock
dec
jecxz
jg
push
xchg
xor
mov
mov
call
xor
xchg
or
lods
push
xorb
xor
icebp
mov
mov
pop
adc
sub
pop
or
adc
xor
data16
push
xchg
xchg
and
adc
sub
jecxz
inc
and
mov
int3
cmp
in
xchg
icebp
imul
mov
jnp
sub
or
or
imul
ret
aaa
add
scas
pop
or
repz
sub
xchg
add
cmp
sbb
pop
dec
jb
dec
sub
xchg
mov
mov
decb
in
mov
pop
int3
sbb
repnz
add
mov
es
loope
pusha
gs
inc
iret
mov
and
es
aad
dec
bound
xlat
outsb
push
ljmp
add
sub
pop
cmpsb
les
mov
call
inc
push
inc
add
loop
mov
ffreep
in
pusha
push
dec
cwtl
test
sbb
jl
xchg
and
pushl
sahf
jg
fldt
sub
lds
xchg
add
in
sarl
in
cmp
pop
and
insb
subb
rorl
test
insl
sub
xchg
jg
inc
and
xchg
mov
es
sub
lcall
gs
cmp
adcb
adc
leave
sub
rorl
test
cli
fucom
sti
add
test
pop
sti
mov
jbe
adc
mov
ja
or
into
sbb
adc
test
orl
lock
push
dec
jecxz
mov
loopne
stos
sbb
bound
outsb
mov
mov
dec
call
mov
inc
iret
lods
and
outsl
test
push
in
es
enter
jle
xchg
in
repnz
aaa
and
add
cmp
lea
hlt
xchg
call
mov
lcall
jmp
imul
sub
aad
mov
je
hlt
xlat
add
nop
adc
and
out
dec
shrl
cmc
std
ds
popf
xchg
dec
vphaddwd
mov
into
loope
sti
movsl
inc
test
fnstcw
pop
lahf
push
mov
rorl
test
pop
xchg
int
pop
lahf
jl
push
jno
add
cltd
repnz
jecxz
rcll
push
imul
ret
or
push
sbb
mov
sbb
jb
outsb
inc
xchg
test
js
mov
ljmp
jns
fwait
movsb
shll
dec
pop
adcl
or
in
fs
roll
and
push
jbe
pop
daa
addr16
aaa
jmp
push
jo
roll
ljmp
jns
add
dec
jecxz
pop
inc
add
sar
outsb
test
mov
imul
ficomps
sbb
mov
rclb
jb
addr16
les
fistl
jg
inc
inc
xor
pop
stc
and
in
jo
aaa
lods
stos
lods
ret
pop
mov
or
pushf
xchg
mov
repnz
popa
js
cmp
push
cmp
add
add
push
cmpsb
mov
insl
inc
mov
sbb
lock
pop
mov
clc
sub
sub
and
lock
lcall
das
or
out
push
and
mov
inc
push
fisubs
jbe
sbb
mov
push
les
and
in
inc
adc
cmp
je
sub
xchg
mov
mov
xchg
cmpl
clc
ret
in
xchg
mov
cs
out
pop
and
dec
leave
or
pop
sub
hlt
dec
in
jge
dec
lds
lea
or
push
ja
inc
daa
inc
shll
sub
fistpll
or
xor
lea
jecxz
int3
sbb
out
mov
push
icebp
faddl
mov
xor
dec
mov
comiss
pop
xchg
push
mov
ds
and
fstpt
lret
shll
icebp
repz
ljmp
inc
aas
stos
std
loopne
push
cld
mov
clc
dec
movsl
rep
popf
sbbl
andl
mov
andl
jae
sbb
xor
ljmp
push
int3
adc
cmp
ss
sbb
jg
xchg
enter
dec
ljmp
cmp
adcl
mov
mov
pop
mov
inc
repz
scas
clc
lods
adc
in
lret
mul
clc
test
cmp
dec
dec
es
invlpg
movsl
cmp
movsl
pop
jp
push
xchg
cmp
or
sub
xchg
fnsave
lods
call
ret
xchg
clc
andl
or
jle
mov
xlat
fwait
push
pushf
ss
fstl
jbe
push
dec
shrb
aaa
xchg
adc
lret
fwait
mov
ret
sbb
jmp
movsb
leave
ljmp
int
jbe
dec
out
sub
mov
test
es
lret
stc
test
mov
lods
mov
xor
outsb
lock
test
sti
jle
mov
fmull
popa
clc
push
pop
mov
aad
cmp
sbbb
xor
and
shlb
push
cmpsl
xor
push
or
test
mov
mov
adc
push
ret
xor
push
mov
xor
subl
sbb
test
xor
mov
stos
sarl
jp
fwait
in
in
and
jmp
sbb
pop
test
xchg
repnz
push
jge
pop
mov
popa
fwait
sbb
sbb
push
clc
hlt
cs
dec
int3
outsl
mov
out
jg
nop
xor
fucomip
adc
addb
mov
jg
test
sbb
dec
lods
cmp
pop
movsl
mov
sbb
in
sub
std
lahf
xor
sub
hlt
inc
jns
fdivrl
lods
push
aas
dec
mov
adc
or
and
pop
lret
jnp
dec
mov
je
pop
fstpt
and
jne
repnz
pop
sti
xchg
in
dec
or
push
adc
std
sub
pop
cmpsb
sub
push
outsb
das
pushf
fdiv
incl
sub
mov
xchg
mulb
rcrl
push
cmp
push
or
mov
lret
in
pop
push
and
push
cld
mov
cltd
shlb
stos
push
je
idiv
stos
mov
jno
dec
aas
les
in
cli
lahf
sub
mov
mov
divb
push
pop
stos
addb
imul
xor
insb
int
push
leave
push
pop
sub
jbe
fsubs
jmp
jae
mov
loop
outsb
aaa
bound
mov
lret
and
mov
adc
fistps
mov
ja
inc
dec
stc
in
jp
outsb
cli
ljmp
mov
mov
vxorps
out
aaa
push
dec
or
out
repz
les
adc
shlb
jmp
lahf
ljmp
jge
adc
pop
inc
pop
mov
sbb
sbb
add
lret
aad
and
jo
imul
inc
lds
inc
stos
cmp
or
enter
or
xor
leave
mov
sub
xchg
or
ljmp
cmp
push
iret
xchg
mov
or
cmp
add
push
test
pushf
arpl
cmp
popa
pushw
cld
and
inc
cmp
rorb
dec
dec
aaa
sub
lret
lea
in
fadds
xchg
add
xchg
push
faddl
nop
ss
les
loop
outsb
imul
movsl
int
or
mov
mov
and
add
icebp
jne
lret
lahf
or
adc
in
dec
lret
mov
inc
call
xor
and
dec
mov
and
shl
mov
ret
and
adc
jno
aad
ret
popl
nop
pop
clc
adc
cwtl
std
ljmp
cmp
push
stos
xor
jp
ficoms
lea
sub
jle
repz
cwtl
adc
loop
outsb
dec
enter
ds
jno
insb
mov
dec
cmp
dec
leave
mov
xorl
aaa
js
test
jne
arpl
jne
mov
pop
mov
pop
sarl
mov
xchg
std
mov
add
bound
iret
xchg
mov
out
lret
mov
jge
ja
inc
addr16
out
sub
in
loop
jge
inc
mov
push
mov
lods
sahf
aaa
sbb
insb
push
fsubrl
test
bound
jo
js
cmp
loop
popf
scas
arpl
jp
call
orb
xor
ljmp
xor
and
xlat
pop
cmc
add
sub
aad
xlat
cli
push
leave
push
add
mov
bsr
sahf
outsl
int3
imul
jg
clc
addl
mov
adc
or
negl
sbb
nop
vpaddb
std
fcompl
test
add
pop
addb
and
mov
in
ss
test
jae
jle
pop
jnp
jno
ljmp
scas
imul
cli
pop
lret
dec
sti
push
popf
jns
in
shrb
int3
das
inc
pop
mov
subb
push
mov
inc
inc
jbe
dec
jnp
test
cmp
loope
insb
roll
mov
lods
movl
pop
or
movsl
lahf
bound
cltd
aaa
mov
pop
push
or
push
loope
dec
push
xchg
jl
jnp
mov
lcall
repz
mov
mov
jbe
pop
sub
inc
adcb
test
pop
sbb
pop
repz
cwtl
divb
xor
cmp
mov
sbb
xor
popf
sub
out
in
mov
aas
lds
gs
and
mov
jg
push
xchg
jge
sub
cmp
pop
jnp
fdivrs
int
in
dec
mov
sti
daa
xchg
inc
mov
lods
jae
pusha
add
inc
enter
sub
enter
fbstp
push
daa
stos
pop
mov
out
pop
lret
xor
jbe
mov
jne
mov
inc
mov
pushf
jnp
daa
or
pop
sub
sub
out
push
call
test
and
jae
lret
xchg
testb
xor
jns
and
jmp
stc
mov
push
test
fs
adc
popf
out
cmp
sub
aam
roll
in
jnp
push
inc
hlt
std
xchg
mov
inc
or
lock
xchg
out
mov
lret
cld
popa
push
push
jmp
xor
test
orb
gs
in
mov
xchg
std
push
lds
pop
popl
dec
fidivl
pop
cmpsl
xchg
imul
in
repnz
ss
or
sub
push
arpl
mov
pop
sti
inc
fistpl
lea
push
les
add
sbb
outsb
cld
loop
xchg
mov
cmovge
fucompp
std
pop
jl
rclb
es
adc
leave
fcomps
sbb
js
arpl
mov
aam
emms
mov
scas
leave
push
mov
sarb
mov
push
mov
mov
iret
sub
and
dec
or
jge
pop
add
outsl
sub
imul
mov
pop
into
mov
dec
jmp
and
js
cmpsl
cmp
into
imul
jnp
cmp
sbb
push
sub
xor
jns
into
xchg
jo
jo
test
dec
je
gs
xchg
rorl
cmp
adc
ret
icebp
lret
jp
enter
adc
jmp
dec
mov
popa
out
lret
or
pop
movsl
push
in
mov
jmp
in
lret
push
je
data16
sub
in
xchg
sti
lods
fimuls
xchg
cmp
rolb
or
jne
sub
shl
jnp
in
stos
insb
negb
and
loop
push
mov
mov
or
sbb
adc
push
cmp
jmp
add
mov
pop
and
push
ljmp
ljmp
mov
jnp
push
imul
sbb
sbb
dec
sbb
xchg
xchg
lock
add
icebp
push
cmc
lahf
and
jg
decb
inc
nop
imul
shl
sub
enter
aaa
repnz
mov
xor
jecxz
push
mov
inc
mov
push
ljmp
dec
add
or
movsb
adc
push
jno
xchg
movb
andl
push
nop
cld
and
sbb
adc
in
add
orb
hlt
pop
roll
pop
movsb
sarl
mov
daa
icebp
cli
adc
cwtl
pop
cmp
ljmp
mov
iret
out
lcall
inc
lret
mov
aad
and
jg
push
pop
jp
out
mov
mov
sbb
repnz
jl
mov
mov
popa
add
mov
sub
sti
or
dec
and
xor
mov
or
xchg
mov
jmp
jne
mov
enter
xor
pop
push
mov
xor
dec
add
in
shl
out
loope
mov
std
add
pop
idiv
adc
fnstenv
or
pop
mov
adc
inc
cmp
ret
xchg
into
pop
mov
jl
add
scas
mull
mov
xchg
jo
dec
call
adcl
rolb
lcall
ja
mov
inc
aam
xor
ret
movsl
fwait
in
cmp
jge
lret
aad
push
jbe
sahf
jo
ficomps
dec
adc
jno
inc
lods
or
sub
push
jb
jmp
mov
sbb
cmpsb
outsb
mov
aam
int3
stos
xchg
jecxz
mov
sti
not
pop
push
ljmp
notb
ret
inc
mov
inc
mov
nop
mov
mov
adc
pushf
stc
mov
sti
mov
xchg
push
rcrb
pusha
leave
pop
cli
sti
xchg
lcall
cltd
test
je
pop
and
xchg
push
jge
aas
cld
and
sbb
test
add
add
jae
inc
mov
clc
lock
call
add
sbb
fwait
sub
jp
mov
lea
mov
loope
imul
into
mov
mov
inc
lret
push
jns
jle
das
repz
dec
push
pop
jle
stos
out
cmp
les
pusha
mov
add
adc
mov
mov
cmp
lcall
adc
cwtl
pop
andb
adc
mov
inc
dec
and
lea
lods
ljmp
les
das
mov
sub
stos
lret
jo
les
into
loop
stos
shll
insb
scas
and
pmaxub
sbb
cli
inc
call
adc
lock
rol
mov
jl
sbb
out
push
xchg
lret
mov
or
imul
xchg
mov
jmp
push
pop
test
xor
jmp
adc
cmc
pop
jae
xor
jmp
mov
adc
fsubrs
and
movsl
loope
jb
mov
push
mov
inc
data16
in
dec
push
hlt
jbe
rcrl
aam
pop
cmp
pop
mov
add
testl
fwait
and
pop
inc
or
dec
sub
mov
fnstcw
xor
mov
or
dec
pop
mov
imul
call
inc
cmp
jns
leave
call
sbb
adc
or
mov
je
movsl
fs
lods
jae
dec
cwtl
cli
jns
aam
insl
jne
mov
adc
clc
jns
out
xchg
rorl
in
aam
sub
sti
repz
into
mov
add
stc
inc
xchg
mov
imull
push
sbb
xor
jo
daa
mov
push
add
mov
cli
shrl
mov
xchg
xor
xor
lds
out
xchg
and
imul
and
adc
sub
adc
adc
sbb
jo
jmp
cmp
dec
sbb
in
adc
push
movsb
hlt
addr16
cli
jnp
adc
jns
push
cs
xchg
scas
sbb
imul
jae
movsl
add
int
shll
jp
pop
je
xchg
add
mov
lds
sbb
mov
dec
add
popa
cwtl
test
sbb
sub
pop
jns
outsb
dec
jmp
and
mov
jmp
imul
loopne
or
and
lcall
lea
push
test
or
mov
loope
adc
fs
jle
push
js
scas
xchg
andl
push
test
pop
dec
or
stos
fsts
inc
cmp
xchg
xor
fsubs
fwait
test
mov
sbb
mov
cmpsb
adc
or
pusha
loope
mov
ret
push
jg
lcall
xor
fsts
jbe
jp
pop
loope
ja
aam
or
push
and
mov
stos
mov
popa
lahf
lahf
stos
es
sbb
xor
and
loopne
inc
sub
js
mov
ror
or
scas
insl
ljmp
rclb
das
dec
inc
dec
mov
subb
xlat
xor
outsb
aad
je
je
roll
jle
lods
sarl
sarl
shl
jbe
roll
sub
addr16
jl
lock
sbb
jnp
mov
dec
or
enter
fmulp
jbe
in
push
and
pop
push
shrl
aad
cmp
imul
mov
scas
adc
movsb
jp
dec
loop
pop
push
cli
cmpsb
jae
mov
test
mov
adc
inc
sub
fnstcw
dec
xadd
test
or
xchg
xor
dec
or
mov
cmp
xchg
popf
jnp
cmp
insl
pop
xor
ja
jecxz
das
out
push
mov
sbb
sub
jb
std
dec
lea
sub
movsl
xchg
sub
jecxz
hlt
in
cli
inc
mov
dec
addr16
cmpb
fmuls
adc
scas
xchg
dec
ds
jle
adc
xor
jnp
ljmp
sub
cmp
mov
fcomps
test
xor
mov
test
jnp
jg
mov
fsubrs
jecxz
test
test
in
inc
aad
out
xor
fldenv
or
mov
fidivl
imul
xchg
notl
es
imul
cmpsl
inc
cmp
mov
jmp
jns
push
sub
cltd
jg
out
mov
pop
subl
jge
jne
jbe
mov
add
movsl
and
loope
or
push
clc
sbb
aaa
cli
jo
xor
les
stos
xor
mov
lods
jmp
mov
out
xor
std
xchg
inc
cmc
repz
in
adc
push
shll
cmp
mov
adc
xor
xlat
mov
push
fnstenv
mov
lea
lret
push
push
xchg
jbe
imul
jecxz
sub
jl
ficoms
mov
test
push
sbb
shrl
xchg
xchg
xor
xrelease
adc
sbb
call
push
cmp
enter
imul
pop
inc
sub
shlb
in
sbb
fs
les
lods
xchg
popf
or
insl
mov
cs
sarl
sahf
add
test
push
ds
adc
jle,pt
rol
sub
jmp
ss
int
inc
xchg
mov
lock
ret
rcl
inc
in
mov
jo
ret
and
mov
ss
bound
jbe
cltd
adc
fbld
fistps
xor
cmp
jecxz
fcompl
dec
pop
out
adc
mov
pop
dec
shlb
jge
mov
pop
lret
cmc
jo
mov
jae
add
test
std
stc
or
iret
push
ljmp
xchg
adc
inc
push
ret
jo
sub
pop
fldln2
lods
ds
ret
xchg
sub
pop
bound
pop
adc
jge
mov
jmp
idivl
jecxz
cmp
enter
lret
dec
and
mov
subb
ljmp
dec
push
inc
mov
sarb
stc
cmpsb
aas
testl
sub
ljmp
xchg
or
aam
dec
jecxz
push
repz
pop
in
dec
xor
pusha
test
fidivl
outsl
sbb
nop
jmp
cld
and
ss
mov
add
es
mov
sbb
into
stos
lret
jns
mov
dec
inc
jecxz
push
xchg
pop
aad
mov
xchg
out
lret
xor
push
roll
pop
out
bound
out
xor
ret
sti
mov
jns
xlat
in
je
or
cmp
pop
or
cmp
adc
movsb
pusha
jp
cwtl
inc
xchg
xor
aad
mov
int3
cmc
pop
dec
in
fisttps
pop
cmp
cld
iret
mov
movsl
shl
sti
addr16
mov
mov
jno
jnp
cmp
ds
mov
sbbl
mov
push
scas
or
js
jge
adc
cs
jge
xchg
lods
dec
mov
imul
test
mov
push
or
test
mov
push
xchg
or
mov
mov
test
inc
popf
cmc
sbb
mov
dec
mov
mov
std
test
fcompl
clc
pusha
mov
mov
cwtl
sti
test
inc
aad
jnp
gs
lret
cmp
mov
pop
lods
addl
cmp
mov
mov
movsl
xchg
cmp
mov
inc
pop
mov
les
dec
sbb
data16
pop
das
dec
inc
mov
pop
mov
inc
stos
cmp
outsb
dec
lods
cmp
sbb
das
inc
sbb
or
pop
adc
sub
cwtl
push
or
aaa
mov
xor
sti
add
cmp
stc
repnz
cmpsl
push
sbb
and
pusha
adc
and
cli
pop
inc
or
fstpt
scas
js
sbb
pop
mov
cmp
mov
pop
sbb
lcall
lret
xor
jb
bound
mov
and
int
cmp
push
xlat
cwtl
ljmp
roll
add
movsb
lock
callw
iret
adc
push
addr16
hlt
dec
lret
repnz
cmp
lcall
pop
xchg
andl
push
or
xor
dec
sti
test
ds
sar
mov
push
lds
cmpb
inc
inc
sbb
xor
jbe
out
xlat
call
stos
stos
fsubs
sub
test
outsl
daa
or
mov
add
cmp
xchg
adc
jge
adc
test
dec
mov
mov
mov
sbb
enter
cmp
test
lock
xor
mov
adc
xchg
rolb
fs
dec
jae
popl
rcll
insb
scas
filds
mov
xlat
sbb
jecxz
xor
push
mov
mov
dec
gs
jae
add
enter
scas
jmp
and
inc
hlt
scas
stos
mov
mov
aas
and
icebp
cmp
imul
mov
xlat
sbb
inc
xor
sub
loopne
add
outsl
cs
data16
mov
xchg
mov
mov
in
and
add
in
decb
dec
dec
out
push
sub
sbb
fisubl
push
mov
test
mov
inc
sub
pop
push
push
lea
cmpsl
push
insl
jbe
in
stos
fsubs
or
and
outsl
jno
lds
popf
rcrb
movsb
iret
fmulp
cmpsb
mov
inc
popf
mov
xchg
cld
mov
xor
push
push
ret
mov
push
push
or
cmpsl
popa
sbb
addr16
pop
jbe
sbb
dec
pop
aas
mov
xor
movsl
inc
es
jno
or
jge
mov
push
pop
push
mov
loopne
sahf
in
sub
ret
jo
les
and
jmp
cwtl
fxam
jle
cmp
and
jnp
mov
xor
jmp
test
or
or
add
fstpt
dec
aad
outsb
incb
jae
lcall
sub
and
ja
pusha
test
les
add
jge
xchg
je
mov
aas
or
aaa
inc
fs
repnz
mov
xchg
dec
out
mov
or
cmp
pop
in
test
gs
mov
fs
push
xchg
pop
jge
inc
add
cli
lock
jno
mov
inc
test
pop
in
pop
pushw
jae
cwtl
xor
insl
pusha
nop
pop
iret
inc
aas
stos
arpl
jno
xor
sub
jnp
sub
imul
sbb
jmp
or
sub
xchg
pop
icebp
jns
mov
in
movsl
aaa
add
xchg
adc
nop
adc
add
popl
push
mov
sbb
js
push
mov
test
lock
xchg
dec
cld
shll
pop
mov
lcall
pop
or
mov
notl
cmp
xchg
cmp
push
lds
inc
dec
xor
pop
jns
add
imul
or
outsl
bound
pop
ret
inc
outsl
dec
test
out
sub
mov
jns
push
scas
push
and
les
inc
iret
mov
mov
xchg
pusha
pop
pop
icebp
fstpt
xor
jo
sub
hlt
jb
mov
sahf
repz
into
or
jge
mov
into
sub
bound
sub
mov
push
mov
cmc
js
pusha
cli
in
add
movsl
rcl
cmp
mov
inc
sbb
aam
out
adc
jmp
shll
out
aaa
push
test
xor
out
sub
add
xchg
dec
mov
leave
inc
dec
mov
leave
sub
cld
enter
arpl
inc
insl
leave
mov
fdivrs
sti
mov
xor
fisubl
in
xorb
mov
lret
aaa
adc
mov
test
fadds
xor
in
inc
sbb
adc
push
sbb
andb
sbb
es
jno
lret
jmp
jb
mov
mov
dec
ret
rorl
lods
scas
cltd
sbb
or
push
mov
loopne
aad
adc
aas
fs
adc
test
mov
cmp
mov
out
add
call
insb
mov
fs
cltd
add
iret
sbb
mov
push
or
outsb
mov
pusha
arpl
paddb
pop
cltd
jecxz
call
sub
mov
cmp
xchg
add
aam
insb
add
mov
pop
mov
mov
jg
lods
subl
mov
lods
or
lret
mov
pop
lcall
or
or
cmp
js
gs
ljmp
sub
mov
int3
leave
sbb
lcall
jo
sbb
xor
loop
push
pop
cmp
cmp
icebp
and
adc
mov
xor
loop
sahf
dec
add
jae
cmp
sub
popf
cmp
cli
inc
in
ficompl
jg
faddl
sbb
aad
push
cmpsl
jo
pop
les
minps
int
fs
rclb
aam
call
xchg
push
stos
scas
push
test
mov
or
aas
add
mov
mov
xchg
imull
mov
ljmp
cmp
out
repnz
adc
pop
dec
pop
sbb
jns
ds
jge
sub
popa
pop
lock
and
shll
stos
inc
ja
les
or
popf
sbb
mov
sbb
pushf
js
test
sub
mov
push
dec
fisttpll
pop
enter
mov
imul
mov
push
or
sahf
shlb
aas
jecxz
test
aam
and
inc
insb
cmc
and
fldenv
andl
movsl
push
push
xchg
daa
imul
sbb
test
cs
push
push
insb
in
dec
sub
pop
mov
xchg
adc
adc
dec
icebp
push
mov
in
fwait
push
ficompl
adc
popf
lret
pop
inc
das
mov
dec
adc
xor
fisttpl
lcall
mov
cli
lea
cmp
push
test
push
fisubrs
sbb
xchg
gs
push
or
sub
dec
mov
flds
jmp
fcmove
sarb
cmpsb
adc
outsb
dec
fisubrs
lock
addr16
cld
adc
call
fldenv
pop
in
loopne
push
daa
in
stc
mov
ret
add
scas
sbbb
mov
movsb
int3
inc
jg
dec
ds
pop
stos
jno
mov
dec
inc
mov
mov
popf
pop
jno
aaa
pushf
jo
jb
mov
adc
mov
out
add
lret
das
stos
negl
dec
leave
cltd
xchg
ja
es
xchg
pop
push
xchg
pop
cmpsb
dec
out
adc
mov
jns
xor
xchg
mov
mov
int3
push
inc
dec
stc
stos
pop
imul
insb
cmp
xchg
add
add
ret
mov
or
and
dec
adc
cmpsl
jbe
fwait
adc
loopne
jge
adc
xchg
mov
push
bswap
pop
and
stc
in
mov
roll
out
and
adc
and
int
je
mov
in
dec
out
loop,pt
push
mov
jns
mov
adc
rcrb
pop
push
xor
xor
outsb
add
xlat
lods
rol
in
int3
out
inc
out
xchg
shll
leave
movsl
push
push
loopne
sub
mov
sbb
aas
sub
nop
nop
dec
pop
fsubrl
aas
jl
push
pusha
mov
pusha
or
mov
in
xlat
in
aas
movsl
push
mov
inc
into
lahf
clc
jne
sub
pop
fnstenv
pushf
mov
sub
fsubr
ljmp
add
popf
in
fmulp
add
test
daa
cmp
mov
and
int
idivl
mov
pop
dec
lea
sarb
in
mov
or
xor
mov
pop
xor
fildl
pop
pop
pushf
call
in
dec
adc
sbb
shlb
leave
mov
insl
sahf
or
aam
mov
lods
push
and
rcr
xor
stos
mov
aaa
cli
mov
adc
and
fiaddl
cmp
pop
inc
jmp
aam
aad
sub
cmp
pop
mov
sarb
lret
inc
pop
das
mov
je
add
and
cmp
in
mov
sub
inc
fnstenv
clc
pop
in
and
xor
ljmp
and
lds
lret
push
imulb
adc
loop
sahf
lds
rorb
pop
jbe
or
pusha
jge
add
xor
flds
sbb
ret
js
fbstp
push
leave
arpl
dec
cmpsl
aam
mov
aad
mov
mov
fidivs
or
lret
jno
rsqrtps
shl
inc
outsl
imul
rcrb
xlat
test
fisubrs
adc
scas
push
ss
or
sbb
sbb
inc
icebp
pop
xchg
ljmp
push
xor
mov
arpl
push
or
int3
adc
jp
std
jge
movsl
das
and
push
and
push
adc
pop
and
gs
xor
jle
mov
mov
cld
push
xchg
pusha
xor
in
movsl
jmp
pusha
iret
nop
test
clc
cmc
jle
mov
or
mov
ret
jae
or
cmpsb
fisubrl
cmc
js
call
cli
xor
mov
push
sbb
loopne
add
or
mov
xchg
dec
cmp
dec
cli
lcall
cmpsb
ret
into
cmp
bound
sbb
fdivrs
rorl
sub
scas
inc
movsl
out
mov
mov
mov
aad
pop
lods
cmpb
lcall
js
mov
sbb
xor
jb
call
push
xchg
gs
ss
sub
das
mov
aam
adcb
stos
mov
push
cltd
pushf
push
lret
cmp
pop
outsl
push
jno
popf
push
je
rcl
rcll
sbbl
xchg
sub
and
fimull
in
push
sub
subb
out
cmp
xchg
flds
shll
mov
sbb
inc
ljmp
test
mov
enter
sbbb
jno
xchg
inc
in
es
imul
je
mov
cltd
icebp
andl
out
movsb
nop
aaa
in
daa
sub
mov
and
dec
adcl
mov
mov
pop
pop
jg
test
out
fisttpl
into
daa
cmp
mov
fcoms
sahf
loop
mov
cmp
daa
and
dec
mov
mov
data16
cmp
or
or
xor
cmp
xor
mov
cmpsb
incl
mov
adc
pop
mov
cmp
aam
mov
dec
insb
out
mov
ficoml
leave
in
pop
mov
in
hlt
xor
fwait
add
mov
mov
in
icebp
jns
je
push
rcrl
xchg
add
mov
sbb
fmul
popf
and
and
pop
dec
xchg
add
cmp
fnstsw
cmp
sub
int
inc
fs
mov
out
xorl
jno
ficoml
mov
push
test
mov
mov
mov
pop
push
adc
cmp
mov
add
sbbb
and
aad
add
add
movsl
mov
out
orl
das
iret
sti
push
outsb
ret
roll
xlat
scas
loope,pt
pop
sub
dec
adc
in
mov
out
fisubl
dec
add
sub
jnp
pusha
in
or
push
ret
imul
inc
mov
repnz
xchg
xor
add
scas
dec
pop
fldcw
out
pusha
test
mov
sbb
mov
stos
int
sbb
dec
cli
pop
adc
pop
adc
sbb
mov
push
mov
mov
test
push
inc
loop
adcl
add
pop
fwait
shll
data16
cmp
sub
sbb
push
xchg
xchg
scas
inc
mov
add
pop
or
push
and
mov
popa
loope
popf
dec
in
or
enter
repnz
mov
jnp
movsb
cwtl
push
testb
jmp
mov
rolb
push
push
lahf
cmp
mov
clc
mov
xor
add
int
ret
daa
push
push
mov
shll
sbb
adc
or
or
stos
jmp
ljmp
xor
xchg
std
cmc
lock
js
or
xlat
or
xchg
cmpsl
lods
insl
push
dec
lds
mov
arpl
and
in
loope
adc
cwtl
out
mov
repnz
sbb
push
stos
outsb
out
jno,pn
in
mov
ljmp
aad
cmpb
sbb
xor
inc
mov
ret
dec
mov
out
jb
mov
icebp
sbb
xor
repz
sbb
arpl
not
mov
mov
rcrl
push
or
decb
mov
adc
pusha
cmpl
or
mov
xchg
scas
int3
jmp
adc
sbb
sarb
sub
push
outsl
pop
or
shlb
pop
aam
ret
adc
fists
push
cmpsb
sub
jnp
test
mov
or
xor
mov
test
aad
xor
pop
xchg
test
mov
push
dec
in
add
mov
xchg
mov
sub
mov
sub
imul
pop
bound
imull
notl
or
mov
push
sbb
dec
in
sar
cltd
sahf
xchg
inc
movsl
mov
push
jne
mov
lcall
jmp
in
nop
adc
mov
pop
adc
jns
insb
fwait
mov
insb
dec
push
xchg
xchg
mov
and
fs
fs
xchg
lret
popa
sub
and
cld
mov
and
out
out
rclb
cld
mov
and
in
push
inc
mov
mov
gs
out
iret
mov
push
test
lods
mov
mov
rep
cmc
bound
dec
cli
pop
hlt
negb
add
in
outsl
xchg
add
push
jns
jbe
mov
idivb
pop
stos
pop
jb
and
inc
and
mov
lds
inc
sub
or
xor
shll
or
adc
jmp
jge
lods
pop
enter
mov
push
in
pop
jp
scas
mov
add
mov
mov
mov
in
in
mov
pop
dec
pop
pushf
iret
jb
jb
mov
dec
or
or
dec
dec
lds
jecxz
sub
jne
sbb
in
inc
or
dec
andl
lods
popa
xchg
dec
adc
fisubs
xchg
lds
xchg
and
das
sbb
loopne
adc
dec
sbb
pushf
sbb
setnp
in
test
popa
mov
out
xor
push
or
repz
cmp
sbb
jp
adc
add
std
xor
jne
inc
push
cltd
inc
adc
fwait
stos
push
je
jp
fs
pop
gs
pop
movsb
popa
mov
cmp
test
in
in
push
lods
inc
clc
mov
xor
ljmp
jns
mov
fidivrs
ja
mov
movsl
cmp
pop
movswl
dec
mov
std
push
shrb
lahf
ja
mul
push
jne
xor
test
cmp
mov
dec
cli
sbb
aas
inc
filds
adc
pop
inc
mov
aam
and
test
and
imul
inc
adc
add
inc
or
cs
scas
push
iret
mov
scas
into
fildl
cmp
mov
cmpl
shl
push
mov
cli
xor
jae,pt
sbb
adc
imulb
sbb
inc
arpl
add
nop
xchg
mov
mov
lock
lea
icebp
dec
mov
shl
loop
inc
into
lcall
out
mov
pop
add
dec
scas
stos
xchg
add
mov
test
cwtl
and
sub
insl
push
pop
jl
mov
and
mov
add
ja
add
inc
mov
mov
fwait
daa
lcall
es
pop
rorl
pushf
fisubs
jmp
mov
ret
dec
loopne
js
repz
hlt
stos
fcom
mov
cli
jno
push
push
inc
or
mov
pop
mull
imul
fdivr
movsl
not
sbb
and
lahf
adc
mov
or
mov
es
lock
cmpsl
lret
sub
add
mov
xchg
jp
out
xchg
xor
lret
imul
cwtl
gs
adc
call
negl
adc
and
xor
cmp
insl
cmpsl
cmp
jne
sbb
push
mov
lods
dec
sub
push
adc
ret
sub
out
xorl
inc
jecxz
scas
push
push
inc
cli
push
cld
in
mov
add
pushf
fidivs
pop
mov
movsl
dec
xchg
inc
cmp
push
movsl
jae
cmpsb
into
ficoml
scas
mov
mov
fs
mov
xor
rol
mov
testb
or
fstps
sbbl
cltd
call
mov
mov
mov
leave
lods
adc
dec
push
addr16
and
jno
adc
or
jecxz
xlat
idiv
les
in
cmp
ja
cmp
ljmp
cs
mov
into
ja
inc
jecxz
stos
mov
dec
scas
int3
xchg
lcall
add
ljmp
add
and
movsb
inc
in
cmp
cmp
pusha
push
push
xchg
aam
sbb
jmp
lods
push
inc
scas
xchg
jmp
jo
ret
mov
pop
mov
cmp
inc
fstps
or
in
lea
test
sti
inc
sub
testl
cwtl
xchg
mov
stos
pop
fisttps
adc
icebp
xchg
out
xchg
adc
popa
fnstcw
xchg
test
loop,pt
orb
dec
sti
jecxz
cmp
pop
pushf
mov
dec
cmpsb
test
mov
cmp
jae
jge
add
cmpsb
mov
insb
xchg
lock
outsl
imul
js
xor
rcrl
mov
sub
loope
std
cld
and
jg
sbb
xchg
mov
lret
mov
icebp
fildl
bound
lcall
or
lret
inc
repnz
jnp
imul
int
dec
repz
push
sub
cwtl
int
dec
movsl
mov
dec
lea
mov
xorl
push
into
mov
inc
dec
inc
xchg
mov
cmp
outsb
pop
cli
nop
fidivs
ss
int3
jb
mov
jbe
push
or
insb
lcall
cmp
add
jno
jns
cmp
push
call
loop
xchg
movsl
bound
sbb
xchg
in
mov
dec
cmpsb
pop
daa
sbb
xchg
out
fistl
push
aaa
cli
add
test
lcall
movsb
jnp
xchg
leave
mov
jae
fdivp
push
or
aaa
fldl
loopne
out
repz
cmp
cmp
iret
or
lea
dec
fisttpl
rcll
inc
nop
xorb
mov
sbb
aam
mov
xchg
dec
nop
pop
and
fs
test
or
sub
sti
addb
fidivs
enter
fmuls
test
or
lret
sub
xchg
inc
mov
and
pop
push
xor
das
mov
pushf
jae
je
sub
jecxz
sub
jnp
data16
pop
or
or
fisubrl
cmp
pop
mov
arpl
or
inc
fwait
test
or
mov
pop
cmp
shl
inc
cmp
jg
inc
mov
imul
sub
in
mov
lret
push
mov
cmpsb
clc
cmpl
ret
hlt
insl
add
push
jmp
pop
jmp
outsb
mov
mov
jg
rcll
add
mov
pop
dec
cltd
popa
movsb
jno
sbb
outsl
fadds
push
enter
ljmp
xor
stos
lcall
jg
push
xor
pop
cmpsb
cmp
or
cmp
push
inc
outsb
or
mov
jge
icebp
cmpsb
adc
sbb
push
jle
inc
mov
jo
adcb
push
xor
jns
nop
xchg
push
icebp
fwait
pop
es
add
fidivs
mov
jne
dec
mov
fwait
mov
or
xchg
xlat
in
icebp
push
shl
ss
xchg
pop
addr16
and
lods
aam
pop
in
and
lret
test
add
push
add
test
mov
jl
jbe
jne
std
jp
push
movsb
pop
and
add
cmp
lret
sub
ss
cmp
cltd
and
clc
cld
imul
mov
jge
aas
fnstcw
or
adcb
xor
pop
jns
sub
xor
outsb
mov
push
and
dec
arpl
ljmp
sub
test
out
outsb
xlat
push
adc
gs
xlat
out
push
fstpt
dec
or
xor
cs
pusha
js
fistpl
repnz
lahf
xor
loop
mov
call
repnz
shrb
pop
cmp
js
call
adc
and
jno
aaa
loopne
gs
inc
repnz
pop
and
mov
push
jmp
dec
inc
add
das
dec
xchg
dec
xlat
push
sti
mov
pop
call
imul
xor
cmp
addr16
aaa
lds
movb
int
xor
gs
lock
imul
shl
adc
push
test
outsb
int3
pop
dec
inc
cld
push
lahf
stc
adc
fwait
push
fldenv
cmpsb
les
fsqrt
test
push
pusha
adcb
shl
jae
fbld
inc
jp
sub
lds
ret
int3
dec
mov
fisubrs
ficomps
sub
gs
in
imul
mov
fnstsw
or
add
pop
mov
inc
mov
mov
outsb
std
mov
jns
push
adc
adc
cmp
aam
rclb
iret
out
pop
jle
jbe
xchg
cmp
ljmp
out
repnz
fsub
shr
dec
push
ret
mov
iret
add
pop
xchg
stc
call
scas
adc
adc
test
aaa
mov
fcompl
out
test
int
xchg
mov
lock
fnstsw
sti
push
mov
fsubl
xchg
pop
gs
aad
mov
inc
and
jne
mov
mov
inc
cmp
out
outsl
xchg
dec
pop
loopne
mov
test
out
dec
add
enter
int
movsl
adc
ds
pop
jecxz
adc
iret
xchg
jb
das
mov
imul
xchg
jbe
lds
aas
pop
into
outsb
jg
pop
pop
pushf
dec
inc
add
movsl
or
mov
aad
int
sahf
mov
jge
lock
fldt
int3
sti
mov
aaa
test
dec
les
pop
in
add
and
imul
lret
or
int3
or
xchg
mov
insl
inc
mov
rorb
fistpll
call
mov
and
hlt
and
lcall
iret
adc
into
movsb
mov
xor
and
push
hlt
cld
jmp
jle
jmp
push
sahf
shrb
fs
inc
ja
popa
out
jle
lahf
cmpsl
sub
orl
repz
mov
or
aad
rcr
xchg
jmp
rol
mov
mov
sub
mov
mov
push
ret
jae
clc
and
mov
mov
aam
sub
push
xor
cmpsb
test
jae
insb
fsubrs
cmp
rorl
mov
jb
mov
sub
cmp
add
test
add
and
inc
jl
add
repz
movsb
jno
xor
aas
rolb
cltd
and
sub
pop
aas
mov
rcll
in
mov
test
ret
add
comiss
fidivrl
cmp
xor
jbe
xorb
jno
hlt
mov
pop
pop
fcompl
adc
les
arpl
lds
adc
adc
movsb
xchg
and
xchg
mov
mov
negl
std
dec
int3
jge
fstpt
pop
repz
or
cmc
jne
inc
and
fcmovnb
stos
jp
mov
pop
pop
es
mov
xor
xor
dec
adcb
scas
enter
repnz
cmp
xlat
push
fisttps
out
cmp
popf
roll
sbb
mov
outsl
lods
mov
fistpl
rcrl
pop
mov
or
fistpll
stos
mov
sbb
repnz
jns
xchg
loopne
rcll
inc
out
mov
aaa
sub
jne
inc
xchg
test
js
hlt
out
inc
out
repnz
std
jle
jns
push
xor
sub
jmp
fbld
push
in
imul
lcall
call
mov
adcl
jns
sbb
imul
rorl
jmp
and
inc
add
xchg
out
in
aam
ret
push
inc
test
jns
stos
pop
sub
xchg
fcomps
pop
fdivrl
xchg
out
sbb
ficoms
fwait
mov
pop
push
dec
lds
aam
stc
insb
outsl
out
and
inc
test
mov
and
xorb
sub
and
sbb
sbb
push
mov
xchg
mov
mov
nop
inc
sub
clc
jb
outsb
cmp
call
inc
icebp
cmc
lahf
push
xchg
data16
xchg
je
pop
jno
test
movsl
out
jne
cmp
push
pop
lods
pop
cs
lods
mov
mov
cs
xor
das
lock
adc
cmp
out
push
mov
in
jae
or
jae
sahf
icebp
mov
arpl
pop
leave
lods
insb
cmpsb
add
repnz
cmpsl
xchg
fucomp
rolb
incl
out
repz
cltd
push
pop
cmp
loop
cmp
cmpsl
pop
mov
std
mov
mov
xor
data16
loopne
shlb
ds
cmpsl
jecxz
push
add
push
scas
or
inc
jns
and
std
out
fcomip
aaa
mov
or
lret
fwait
sub
xchg
sub
cmp
andl
inc
mov
icebp
fsubl
sub
or
jge
and
in
aam
or
pop
jge
xor
jmp
lds
mov
push
jns
mov
out
leave
decl
xor
mov
adc
inc
jp
lea
cmp
mov
jmp
movsl
fcom
adcb
mov
arpl
icebp
in
sahf
aam
dec
in
rclb
push
pop
mov
wrmsr
hlt
or
mov
mov
inc
popa
xchg
pusha
xchg
lret
inc
daa
out
call
and
mov
rolb
sbb
dec
mov
jnp
arpl
aaa
adc
pop
push
test
nop
stc
out
cmpsb
sbb
mov
enter
jecxz
cmpps
push
aad
fiaddl
mov
faddl
adc
adc
pop
shl
jle
add
cmp
jns
ret
mov
lods
mov
add
ss
ret
jmp
push
or
sti
fsubrs
inc
fcmovne
out
cmc
mov
loope
in
jno
out
jmp
subl
fs
and
out
hlt
xchg
xor
aam
popf
mov
in
jns
pop
mov
jmp
lea
scas
test
xchg
pop
scas
lea
imul
push
mov
fldl
roll
js
xchg
int
fcom
shlb
rdpmc
pop
dec
xor
fldl
cltd
rorl
fisttpll
scas
cmpsb
dec
inc
test
mov
sub
int3
xchg
push
mov
insb
pop
pop
fwait
inc
test
jg
nop
ret
mov
xchg
rcrb
test
mov
bound
sub
and
push
mov
imul
int3
mov
xor
push
sub
xchg
xchg
leave
out
and
in
inc
mov
xlat
in
std
pop
dec
enter
imul
and
lea
lods
and
xor
test
mov
add
sbb
pop
out
and
lods
xchg
scas
stc
in
fwait
loope
pop
mov
mov
push
add
pop
xor
dec
mov
jge
popf
add
xchg
push
push
xor
popf
jne
sub
cmp
sar
adc
leave
lds
cwtl
xchg
inc
mov
mov
outsb
jmp
out
mov
insl
testl
cmpsl
repnz
rclb
data16
insb
or
mov
movsl
jne
push
in
pusha
sub
aad
pop
jle
or
mov
pmulhuw
rorb
loope
or
loop
lahf
mov
in
ret
cmp
jne
add
lahf
jbe
push
xchg
adc
and
mov
jmp
jae
xchg
xorl
add
sub
xchg
mov
sub
test
cs
stos
mov
xlat
cmp
rorl
jnp
xor
xchg
test
aad
cli
pop
xor
lcall
cmp
cmpsl
cmp
stos
shll
nop
push
je
push
mov
int
jmp
fs
inc
mov
push
sub
jb
aam
ss
or
fsubrl
or
adc
es
sbbl
dec
push
rorl
addr16
push
scas
in
and
and
call
lea
dec
loope
sub
and
sub
stc
lds
test
mov
xchg
adc
xor
sahf
movsb
push
sbbb
mov
cmp
imul
xor
mov
in
add
push
jno
test
dec
test
inc
call
dec
mov
adc
push
jmp
inc
imul
dec
pusha
mov
addr16
lret
mov
js
xlat
mov
cwtl
cmp
hlt
repnz
aas
pop
sbbl
or
fwait
out
mov
or
jo
ljmp
nop
sub
roll
and
scas
cs
push
jo
pop
int3
inc
sbb
and
sub
stos
lea
jecxz
movsl
mov
dec
sbb
pop
sti
scas
test
gs
stos
testl
mov
jne
cmp
fistps
mov
jle
pop
nop
test
rorl
sti
sub
lods
sub
and
cmp
cmp
cmpsb
in
inc
and
sbb
mov
sub
mov
push
push
sub
lahf
dec
or
icebp
int3
cmp
ss
test
adc
push
sbb
pop
mov
or
cmp
xor
cmpsl
daa
mov
andb
cmp
push
add
es
lods
lds
cmpl
fmull
testl
stc
jno
push
inc
xchg
cmp
stos
test
xchg
jnp
cmpsl
mull
ss
jne
pop
lret
or
sbb
mov
mov
jno
cmp
imul
loopne
mov
or
sbb
add
les
in
cmc
out
and
orl
mov
or
mov
divl
cmpsb
imul
lcall
push
dec
sti
inc
jge
jns
push
jbe
add
sahf
dec
or
xlat
xchg
jno
xlat
pop
in
add
leave
xchg
out
cld
xchg
dec
or
sbb
imul
and
jmp
mov
cli
aad
and
fists
ret
xlat
out
xor
lcall
and
pop
not
mov
or
imul
cmp
sti
test
jb
je
out
pop
enter
leave
inc
xor
sbb
xor
ja
and
cmp
insb
dec
dec
inc
push
ret
out
sbb
cld
mov
mov
in
dec
inc
aas
jae
mov
inc
cs
xor
xchg
es
mov
call
sub
mov
pop
test
xor
into
push
loop
and
js
loope
cmpsl
mov
adc
mov
lcall
mov
test
in
loopne
lds
shll
in
mov
in
loope
xor
out
and
frstor
fwait
push
orl
adc
cmp
stos
cmpsb
jg
out
mov
cli
loope
add
jbe
push
sub
pop
mov
cmc
mov
int
movsl
outsb
jne
xchg
andl
pop
fidivs
addr16
mov
pushl
cltd
das
shlb
mov
pop
movsl
fwait
dec
sub
pushf
lcall
fwait
push
adc
xor
lret
inc
inc
push
dec
jmp
cmp
jns
xlat
mov
xchg
cmp
xchg
sub
add
pop
std
lret
fnstsw
xor
fsubl
and
jae
in
fbstp
and
cmp
shlb
lret
push
call
cmp
sahf
into
popf
adc
or
nop
hlt
push
aas
dec
and
call
push
adc
xchg
xchg
gs
fcomps
test
lret
xor
loop
pop
fistps
lods
aaa
mov
lret
jmp
lahf
xchg
add
mov
xor
daa
mov
inc
icebp
push
mov
addr16
enter
xchg
jmp
xchg
pop
insb
jns
aam
push
sub
xor
sbb
jg
sbb
addl
mov
add
insb
das
add
imul
or
aas
xor
push
adcl
push
loop
stc
mov
pop
mov
add
jns
fs
sbb
dec
enter
lock
mov
outsl
pop
and
rorl
fiadds
rclb
scas
and
add
pop
cmp
and
xchg
pop
movsl
sub
insb
push
mov
sbb
cmp
xchg
push
adc
gs
add
dec
clc
xlat
sti
sbb
xorb
test
loope
stos
push
icebp
idiv
xchg
mov
inc
or
mov
xor
inc
cmpsb
sub
leave
les
adc
push
test
dec
dec
jns
or
test
mov
pop
inc
repz
aaa
mov
pop
xchg
add
into
jge
push
out
sbb
push
shr
mov
lea
dec
addr16
into
int3
push
push
scas
test
cmp
stos
sbb
sbb
into
mov
ret
in
or
pusha
loopne
in
fidivs
pop
mov
mov
clc
and
lret
lock
push
xchg
test
pop
jl
or
xor
mov
xor
hlt
ret
jmp
loope
aad
xchg
cmp
lea
ds
ljmp
fcoms
push
adc
push
pop
lret
dec
xchg
add
outsl
rcrl
add
jg
jecxz
jbe
test
gs
imul
xorl
sub
inc
mov
cmp
push
sbb
add
cltd
std
dec
pop
not
xor
mov
mov
popa
jle
inc
jge
leave
fwait
movsl
lock
movsb
mov
int3
xchg
inc
rcrl
or
int
rcrb
jne
and
xchg
mov
cmpsb
ficompl
push
lock
xorb
iret
dec
jnp
bound
faddp
mov
mov
stc
xchg
imul
jmp
jae
or
mov
mov
pop
or
inc
cmp
dec
fidivs
mov
push
pop
les
pusha
pop
jl
cmpsl
aaa
fildl
mov
dec
or
loop
jae
or
lods
dec
mov
jns
in
sub
cmpsb
jae
push
scas
dec
mov
or
adc
mov
not
imul
cmpsl
std
push
push
lret
mov
pop
das
call
aaa
outsb
inc
das
cli
and
inc
aaa
imul
adc
cli
mov
pusha
fildl
cli
scas
add
sub
sub
rorb
mov
loop
dec
push
lret
icebp
push
incb
push
mov
ja
flds
mov
sbb
pop
cmp
fwait
xchg
cmp
sub
xlat
orb
pop
push
mov
xlat
loop
adc
ret
insb
sbb
fbld
pop
in
sbb
lods
push
in
xlat
test
fwait
push
xor
or
add
cmp
jnp
cmp
insl
jmp
addb
rolb
pop
sub
and
mov
cmpsb
pop
aam
or
jae
or
push
imul
rorl
fcoms
mov
arpl
sbb
dec
pop
push
rclb
imul
xorl
fsubs
aad
sbb
dec
imul
sub
dec
mov
insl
cmp
pop
in
aad
cmp
cltd
adcl
ds
pushf
das
lods
inc
dec
loop
pop
sahf
fisubrl
push
scas
decl
fbld
stos
pusha
jg
clc
jno
movsl
inc
icebp
test
mov
mov
lock
mov
mov
scas
insl
aad
fcomi
mov
jl
shrb
push
mov
mov
jmp
imul
mov
ljmp
or
pop
ljmp
lret
cmp
mov
add
push
aam
sbbl
and
xchg
ljmp
jg
subb
jae
and
xchg
cmp
xor
sub
mov
js
in
lcall
les
cmp
mov
add
lahf
jbe
fsubrs
inc
push
mov
push
mov
gs
cld
push
les
int3
mov
push
adc
fwait
adc
xchg
std
dec
jnp
cli
sbb
sub
stos
mov
jnp
mov
add
sub
sub
and
mov
pusha
inc
aam
inc
jb
divl
test
xor
cmp
xchg
inc
pushf
xchg
and
jns
cmc
arpl
mov
sub
imul
sub
test
enter
sub
push
dec
stos
popa
sub
push
inc
mov
popf
aam
ja
xlat
out
jbe
sub
in
sub
xor
fnsave
in
stc
fistpl
insl
push
test
es
mov
test
xchg
jecxz
jecxz
sbb
pop
cld
idivl
add
and
fdivr
outsl
xor
inc
ret
stos
push
cmp
pop
add
xchg
int
scas
shrb
fdivrs
fnstsw
lcall
out
xchg
sub
pop
inc
cs
sbb
addr16
test
jns
mov
and
add
into
icebp
je
mov
pop
mov
pusha
xchg
stos
or
and
cmpsb
enter
or
repz
dec
enter
in
mov
adc
cmp
lods
push
xchg
sarl
xchg
and
in
adc
mov
loop
push
imul
cmp
xchg
pop
inc
dec
dec
push
lret
mov
mov
or
lock
inc
cwtl
push
lret
inc
or
or
aaa
cmp
fistpll
jge
xchg
xor
mov
rcrb
xchg
xchg
push
test
fs
divl
test
sub
sbb
mov
dec
aad
pop
fstpl
in
jmp
and
mov
mov
mov
add
rcl
rep
xor
les
xchg
push
icebp
adc
fstps
sbb
dec
hlt
sbb
adc
pop
pop
outsl
test
push
jno
movsl
dec
cmp
lcall
mov
mov
sub
push
inc
iret
aam
adc
or
add
or
dec
inc
add
pop
xchg
sbb
inc
push
mov
pop
dec
sar
fadds
sbb
lods
pop
pop
fwait
sub
inc
mov
and
mov
lret
lret
adc
pop
pop
cmc
mov
jne
cwtl
jmp
jmp
lods
int3
dec
pop
cmp
lahf
jmp
jnp
loopne
jb
mov
roll
rolb
lea
and
pop
jmp
jnp
pop
aaa
pop
test
dec
lret
cmp
push
pop
fcomi
ja
inc
adc
test
movl
adc
pop
mov
call
or
ds
dec
iret
shlb
call
and
sahf
ja
cmp
gs
jo
sub
pop
dec
fistl
xor
je
sub
mov
or
mov
sbb
mov
nop
js
mov
mov
and
inc
jne
pop
es
iret
out
clc
test
pop
xchg
fwait
into
and
xor
sbb
int3
lea
mov
fisubrl
call
push
ret
stos
xlat
lods
cld
inc
adc
sbb
in
or
or
sub
cltd
lret
loop
and
mov
sbb
xchg
stc
jbe
push
or
sbb
mov
lret
push
addr16
push
setle
flds
jo
pop
cmpsb
je
jmp
sbb
sub
outsb
or
int3
mov
jmp
into
sbb
call
push
lock
lcall
jmp
and
call
mov
push
push
inc
shl
lret
stc
or
subl
jno
cmp
pop
insb
and
jle
jp
push
rcll
ja
pop
mov
shll
jg
push
pop
cli
or
je
xchg
fsubp
xchg
jge
imulb
mov
inc
mov
add
push
push
aad
or
imul
jle
or
add
fisubl
aad
push
ficomps
push
dec
jbe
nop
xor
push
dec
unpcklps
inc
ss
push
arpl
pop
push
inc
push
mov
int
push
adc
mov
sbb
daa
sbb
imul
sarl
pop
insb
in
xchg
fistps
sbb
push
inc
adc
loope
fildl
loopne
and
dec
dec
inc
xchg
push
fists
pop
dec
je
nop
adc
cwtl
imul
pop
sti
cmpsb
xchg
adc
sub
mov
adc
daa
aad
dec
lock
sub
les
jle
ja
rorb
shll
aas
mov
inc
insl
mov
or
ja
les
xchg
insb
int
mov
insb
dec
int3
and
call
nop
ja
jns
xor
mov
sub
pop
outsl
or
and
gs
test
aad
inc
adc
jae
jbe
jge
xor
lods
adc
xchg
lcall
mov
fwait
test
jne
jo
jbe
icebp
cmp
shll
aad
mov
inc
push
push
ds
imul
cmp
mov
iret
out
movsb
insb
and
xchg
dec
aad
pop
cwtl
cltd
mov
pop
or
mov
inc
mov
insb
sbb
leave
enter
add
int
fwait
sbb
adc
aad
sti
xor
mov
push
mov
call
shrb
add
push
sti
mov
mov
mov
push
enter
jo
fnstcw
int
or
mov
lods
push
jmp
notb
lods
daa
sar
roll
or
int3
xor
jecxz
lret
test
mov
dec
bound
sbbl
mov
popf
cmpsb
mov
sub
lcall
mov
mov
jmp
inc
outsb
push
jb
xor
xchg
sub
add
or
sahf
inc
cmp
pusha
xor
cmp
mov
icebp
mov
in
lahf
sti
fsubr
ret
xor
jecxz
mov
stos
push
out
mov
jmp
insl
and
imul
add
cs
adc
sub
pop
lods
mov
mov
lods
inc
rclb
cmp
mov
unpckhps
rclb
xchg
test
jo
mov
or
adc
sti
or
lods
pop
sub
dec
mov
jg
pop
pop
call
aam
mov
push
mov
adc
mov
or
xlat
adc
pop
inc
add
adc
clc
or
mov
cmpsl
std
rcrb
pop
xchg
mov
ror
inc
lahf
xchg
fmuls
fcomps
roll
sbb
lock
aam
std
mov
pop
jge
xor
stos
fld
pop
or
test
icebp
ret
inc
arpl
xchg
call
dec
aaa
subb
or
push
leave
or
xchg
fs
jge
jns
ror
cmp
push
addr16
cmp
mov
xor
enter
ljmp
inc
dec
psubsw
mov
push
test
in
ror
mov
in
mov
mov
sub
das
xchg
dec
jbe
push
insl
adc
call
add
dec
sub
aas
iret
dec
or
stos
push
test
push
rcrb
pop
loop
imul
mov
push
xor
jne
push
push
mov
rorl
adc
xchg
adc
xchg
and
mov
mov
ss
xchg
lcall
mov
xor
add
mov
push
adc
mov
hlt
je
jle
cmp
in
jns
jg
in
jg
cmpsl
cmp
out
fwait
xchg
lcall
dec
enter
jae
inc
mov
test
xor
lods
pop
pusha
mov
mov
jmp
shl
stos
cmp
inc
loop
cmc
jnp
jbe
out
repnz
ds
mov
jnp
sarb
mov
inc
jle
std
mov
xor
mov
xchg
add
test
stos
stc
add
scas
xchg
sbb
add
jg
std
dec
xchg
lcall
pop
xchg
int3
jecxz
repz
cmpsb
outsb
cmpsl
pop
subl
ljmp
mov
sbbl
add
push
xor
cld
dec
adc
mov
cmpsb
mov
or
cltd
ficoms
pop
mov
cmp
repz
push
adc
pop
das
ret
mov
repnz
mov
subb
or
sub
popf
mov
inc
xchg
nop
push
cmc
and
adc
cmp
push
xor
inc
in
out
sahf
cmpsl
cli
or
mov
addr16
lcall
push
aam
and
jecxz
test
jns
mov
insb
lret
adc
jg
push
push
js
insb
lcall
into
push
push
or
cmpsl
sub
out
push
mov
ret
pop
pop
or
shlb
lret
insl
vmwrite
and
mov
fisubs
mov
cli
enter
je
popa
jno
jmp
cwtl
push
notl
jne
ljmp
jne
jo
xchg
insl
loop
xchg
mov
pop
mov
pop
mov
sub
mov
sub
jl
mov
ret
mov
pop
xor
dec
mov
arpl
xor
inc
movsb
dec
test
imul
mov
les
add
jl
rcrl
sub
or
push
sub
xchg
rorl
popf
jp
cwtl
mov
mov
fstps
mov
mov
xchg
popa
push
movsb
in
add
sbb
or
xchg
mov
imul
int
add
test
jle
sub
in
sub
loope
push
sahf
add
nop
nop
lea
cltd
mov
jae
popf
jl
js
dec
mov
sub
add
cmpb
dec
aad
xchg
rclb
js
fwait
rcrb
xor
sub
leave
mov
mov
fisttps
jae
in
jmp
push
fildll
les
in
stc
scas
lods
add
loopne
gs
mov
outsl
cwtl
sub
cmp
je
jne
insl
rcll
clc
pop
in
lcall
jns
jecxz
jno
xchg
clc
add
loopne
in
jecxz
shll
jg
mov
mov
sub
iret
repz
es
pop
push
outsl
mov
dec
cmc
mov
out
scas
icebp
pop
push
test
pop
fiaddl
mov
xchg
lods
xchg
or
cs
sbb
and
sub
ds
mov
repnz
jl
shl
adc
mov
mov
dec
cmp
cmp
cld
test
outsl
pusha
jl
jns
or
pop
fwait
stos
leave
lret
cwtl
sbb
cmc
fisttpl
and
aas
pop
mov
loop
pop
or
add
push
mov
insb
push
xor
pop
cmp
cs
pop
ret
mov
into
ljmp
and
sub
push
sub
mov
aaa
cmp
xchg
roll
pminub
mov
pop
movl
sub
mov
cli
cwtl
insl
clc
ret
and
push
daa
cmpsb
jmp
mov
pop
mov
sti
inc
aas
test
and
jge
subl
std
jb
out
jnp
stos
repz
ret
icebp
push
mov
cmp
and
xor
add
cmp
sub
xor
add
jbe
push
push
mov
xchg
sub
xor
push
cltd
out
enter
inc
sub
dec
fwait
push
pop
inc
sti
gs
aam
pop
dec
aaa
mov
and
xchg
push
sahf
arpl
mov
mov
lods
or
lcall
ret
psubsb
jb
cltd
mov
mov
inc
mov
out
jmp
ret
sti
mov
xor
imul
rcrb
inc
imul
lods
jge
inc
add
ret
push
rcrb
cmp
add
mov
mov
rol
aad
jne
fnop
dec
jp
push
mov
adc
xchg
xchg
sbb
xchg
out
pop
or
mov
iret
push
mov
imul
cmp
mov
xchg
mov
pushfw
or
and
xorb
pop
sarb
mov
scas
adc
or
out
outsl
push
push
mov
adc
jno
rcr
add
out
push
or
xor
test
push
fidivs
jno
fidivl
loop
jle
in
ficompl
fsubr
testl
push
les
sbb
add
xchg
xchg
mov
xor
xchg
mov
jo
xchg
pop
ljmp
xchg
and
inc
cmpsb
ljmp
and
sub
and
std
ljmp
jne
ret
xor
movsb
push
mov
mov
pop
push
add
inc
pop
cmpsl
das
pop
pop
sbb
sarl
imul
push
data16
dec
fisubrs
mov
popf
sub
push
sub
mov
cmp
and
sbb
ss
push
mov
xchg
sar
outsb
leave
push
mov
inc
inc
dec
pop
scas
sti
sub
sbb
fsts
inc
inc
div
adc
mov
mov
cmp
mov
pusha
dec
icebp
sti
sub
jnp
test
ret
stc
inc
adc
and
mov
call
stos
xor
cmp
in
mov
xchg
xor
popf
sbb
jmp
add
cwtl
ret
inc
out
stc
faddp
aaa
popf
cmp
or
cmpsb
mov
mov
mov
jns
xchg
lds
gs
sub
mull
jmp
aas
pop
or
test
sub
sub
jns
fwait
into
dec
idiv
cmp
jns
loope
sub
mov
lret
stos
loopne
popa
mov
addb
pusha
insl
pop
imul
pop
sbb
leave
mov
sarb
inc
shll
dec
stc
jo
mov
push
cmc
xchg
inc
aas
cmpsl
les
lods
adc
push
cmpsl
iret
or
or
add
aaa
xchg
shrl
loop
add
rcl
fisubs
div
mov
mov
int
je
push
pop
xchg
and
pop
fnstcw
sub
cmpsb
pop
test
loop
in
adc
aam
pop
mov
mov
mov
mov
adc
loop
scas
and
into
ljmp
aam
cmp
mov
inc
popl
push
rolb
jle
fs
stos
adc
pop
iret
mov
stos
pusha
inc
mov
insl
xchg
mov
ret
adc
ret
stos
pusha
pop
xlat
mov
push
push
int
ss
xor
enter
sti
repz
leave
sbb
pop
lods
jp
rolb
cmp
xor
pop
inc
nop
arpl
jnp
xchg
adc
pop
notl
cmp
scas
xor
mov
push
stos
out
js
into
popa
test
pop
mov
test
repnz
out
adc
push
scas
adc
sub
sub
inc
xor
push
push
ja
xchg
xchg
cld
fs
push
or
pop
dec
cs
xchg
sub
sbb
call
xor
mov
or
addr16
fidivs
test
aas
dec
xor
inc
pop
and
jae
xchg
insl
out
pusha
rcll
js
jg
mov
out
cmpsl
cld
xchg
stos
fisubs
add
cmp
inc
cltd
jl
pop
test
dec
mov
cmp
sbb
or
cmp
lods
bound
xchg
stc
fsub
scas
push
out
and
dec
jp
jns
aas
and
lcall
xchg
jne
ja
cmpsl
mov
or
cmpsb
dec
imul
aam
mov
add
movsl
push
push
movl
test
mov
icebp
jne
je
loopne
hlt
fwait
jb
push
dec
loop
test
mov
pop
sub
push
and
xor
cld
popa
ret
clc
mov
int
loope
ret
sub
mov
mov
orb
jmp
adc
loopne
cli
push
cwtl
jo
gs
lret
fsubrp
scas
test
mov
pop
in
push
cmpsl
fstpl
ljmp
inc
ja
and
xchg
jge
shl
dec
sti
or
repz
ss
mov
xchg
pop
lcall
sub
leave
mov
xor
and
sti
push
ret
push
jg
add
and
mov
ljmp
mov
push
stc
or
mov
test
sub
jne
jle
shlb
jle
xchg
pop
das
inc
pop
push
xchg
insb
test
jae
jnp
mov
xor
bound
pop
mov
mov
add
out
sti
add
sbb
lds
cld
out
jecxz
mov
jmp
icebp
push
rol
fisttpl
pop
mov
adc
adc
cmc
xor
xchg
jae
cs
jp
jle
mov
dec
push
roll
add
addr16
pop
pop
rorb
shll
fcomip
sub
rcrl
aad
push
cmp
clc
pop
and
in
sub
sbbl
cmp
xor
dec
pop
nop
fsubl
jb
gs
imul
add
sahf
sub
pop
lcall
nop
dec
je
jbe
int3
xchg
pusha
push
pop
xor
push
push
call
ret
xchg
mov
mov
js
test
ja
lret
fwait
lods
sub
xchg
pop
lret
jo
hlt
adcb
out
imul
pop
es
pop
mov
int3
insl
fldcw
jge
cmp
movsl
xchg
or
lret
in
sbb
call
inc
dec
dec
dec
int3
add
push
std
push
out
hlt
aaa
push
jnp
add
mov
jne
or
mov
andl
pop
cmpsb
inc
push
cmpsb
xchg
sahf
test
mov
xor
jp
in
js
lock
js
scas
push
insb
test
hlt
cltd
mov
popa
push
or
in
shlb
pop
cwtl
pop
stos
mov
sbb
dec
ret
inc
add
mov
xor
ret
pop
push
push
movsb
and
insb
ret
out
icebp
and
test
cs
icebp
cmp
std
inc
fst
pop
in
and
dec
inc
xchg
lods
jmp
inc
nop
loope
adc
imul
fcmovb
and
dec
add
repnz
notb
dec
cli
or
mov
repz
add
ljmp
dec
dec
pop
call
gs
lods
outsl
jne
push
lret
or
inc
and
gs
xrelease
mov
sar
shll
orb
repnz
fstps
sbbw
test
das
dec
sbb
gs
mov
lods
mov
filds
adc
out
cmp
or
inc
mov
mov
jne
fnstenv
arpl
mov
xor
cmp
pop
sti
jbe
ja
ret
cmp
dec
idivb
loop
and
mov
into
out
adc
scas
mov
outsl
and
dec
jecxz
lods
push
ds
clc
push
aad
push
rcrl
daa
push
dec
test
out
dec
js
jns
in
pop
ficompl
mov
adc
loope
iret
xor
cmp
push
cs
adc
mov
adc
gs
sub
cmp
out
push
xchg
imul
xlat
mov
mov
daa
lahf
jg
jne
les
or
cli
icebp
mov
sbb
cmpsl
mov
pop
sbb
jno
or
lret
push
movl
adc
mov
cmp
shrb
inc
xchg
mov
push
aam
loope
inc
push
mov
in
pop
mov
decb
ret
test
adc
jo
stos
adcb
divl
out
cwtl
mov
insl
push
leave
pop
push
rol
imul
outsb
test
push
js
sub
xor
mov
jnp
mov
int
and
adc
fwait
cmpsb
push
arpl
pop
adc
and
adc
cmp
test
xchg
or
hlt
push
mov
loopne
mov
int3
jecxz
bound
jmp
lds
je
aas
sbb
xchg
imul
cmp
movsl
ret
or
jnp
add
and
fstl
add
inc
xchg
mov
push
cmpb
pop
std
dec
mov
xchg
je
shll
push
cmp
decb
inc
mov
jl
sub
add
xchg
repnz
sub
sub
ret
and
iret
mov
mov
out
and
sbb
fmuls
jnp
jbe
addr16
lahf
gs
lret
jge
in
outsl
out
mov
icebp
adc
xchg
test
mov
or
mov
push
cmc
shrb
sbb
cmp
inc
ret
jo
iret
arpl
cmp
xchg
fsubp
push
mov
lods
jo
jo
add
sub
dec
test
pop
not
icebp
pop
sti
and
mov
xchg
jmp
cli
loopne
inc
lea
insl
jo
mov
flds
sbb
aaa
mov
jo
lock
mov
imul
js
ja
adc
xchg
adc
xlat
cli
rclb
adc
movsb
inc
cmp
jne
mov
in
sub
mov
push
pop
inc
xchg
lods
push
inc
xor
sbb
fdivr
icebp
leave
pop
cmp
sar
pop
dec
adc
cmpsb
outsb
stc
push
lret
sub
mov
jns
cli
xchg
sub
loopne
movl
lods
inc
rcrl
out
cmpsl
push
ljmp
icebp
fisubrs
or
mov
inc
mov
nop
mov
inc
ficoms
or
pop
mov
fcomi
out
sub
or
bnd
and
mov
jns
repnz
cmp
adc
jge
outsb
jg
insb
dec
mov
bound
jl
into
mov
icebp
hlt
push
mov
movsb
inc
rcrl
ljmp
call
sbb
push
sbb
push
sub
popf
pushf
fwait
test
push
sbb
and
mov
xor
arpl
cmp
fiadds
andb
xor
xor
imul
jecxz
fcoms
mov
mov
clc
add
dec
lods
or
xchg
xor
add
stc
mov
out
sbb
daa
repz
xchg
je
mov
test
sbb
rclb
and
bound
push
stos
lahf
in
or
imul
push
fnstcw
dec
leave
or
cmp
adc
push
jne
rorb
pop
and
mov
mov
add
mov
test
mov
push
lds
bound
js
add
mov
push
insb
sub
arpl
jo
jae
mov
cmpsl
nop
lret
mov
ss
jle
mov
adc
pop
fadd
push
mov
leave
mov
stc
icebp
rol
cld
mov
sbb
popf
bound
mov
sbb
lret
mov
es
xchg
lahf
add
sbb
jmp
pop
xchg
and
mov
pop
xor
ljmp
test
jl
bound
jnp
add
sar
ljmp
push
jl
ret
mov
divl
mov
jbe
jg
and
movsb
cs
pop
mov
dec
sbb
xchg
into
mov
jbe
gs
jae
movsb
fsubs
xor
cmp
jmp
out
xor
int
mov
shlb
cwtl
and
cmc
dec
fwait
daa
js
and
cmp
inc
loopne
xor
fmul
std
xlat
das
inc
in
aas
pushf
mov
ret
test
xor
xor
testl
into
popf
iret
in
jae
mov
jbe
call
mov
xchg
push
testb
pop
iret
sbb
mov
fstps
lods
inc
leave
js
test
filds
loopne
sub
jb
movsl
mov
fadds
mov
push
dec
xlat
xchg
stc
jmp
outsb
outsb
xchg
or
adc
aas
lea
addr16
mov
shlb
filds
or
sub
dec
rcll
xchg
sbb
jecxz
aam
mov
or
inc
sti
or
aad
dec
xchg
insb
loope
out
push
push
out
repnz
in
jg
cli
pop
sahf
xchg
jg
pop
lods
shl
sub
xor
sarl
call
mov
cmp
and
fdivl
fildll
outsl
sti
inc
sbb
sub
out
mov
inc
loop
cmp
aas
cmp
mov
fldt
and
or
gs
sub
iret
jmp
push
cmp
mov
mov
int3
sahf
call
ja
stc
mov
iret
popa
add
jle
xor
pop
mov
arpl
push
cwtl
xor
fnstenv
sbb
xchg
test
push
pop
sub
fdiv
pusha
cmp
arpl
xorl
mov
ficompl
fisubrs
push
sbb
sub
in
dec
pop
std
and
lock
mov
cmp
lock
and
je
adc
mov
jecxz
mov
or
xor
push
clc
xchg
inc
into
mov
or
test
mov
rcl
mov
mov
dec
xchg
mov
or
mov
push
lock
xchg
cmp
cmpsb
or
or
ret
sbb
cs
iret
lret
jp
nop
popf
loop
cmpsb
push
sbb
repz
dec
sub
gs
push
sub
stc
loop
xor
inc
xor
cmpsl
aam
loopne
push
add
jmp
cld
mov
add
and
add
inc
stc
repnz
in
or
xchg
call
aad
mov
popa
fildl
jno
fadds
loope
scas
rorb
in
in
sbb
ror
jae
cmp
lock
in
mov
xchg
cmpb
pop
insb
or
pushf
out
into
dec
std
cmc
fidivrs
cli
aaa
xchg
cmpsl
cld
int
lods
imul
adc
xchg
push
add
test
imul
lret
xor
mov
and
push
cmc
outsl
scas
aaa
or
sub
pop
loop
loop
xchg
push
xchg
aas
or
mov
dec
mov
push
mov
cmovne
mov
dec
inc
fsts
repz
hlt
xchg
mov
aas
mov
or
rorb
jb
mov
dec
out
loopne
inc
xor
lahf
sbb
cmpsl
sub
cmp
pop
addb
push
xchg
lea
push
or
cld
setge
aas
lods
cmp
push
mov
xchg
cmp
js
lds
jns
mov
sti
into
das
out
or
out
dec
cwtl
pop
aam
push
in
mov
sub
mov
js
mov
jo
dec
jae
movsb
and
ret
imul
sarb
scas
aam
bswap
push
andl
xchg
sub
inc
data16
js
les
sti
mov
sub
pop
jae
ss
dec
test
or
or
ja
jnp
dec
scas
in
test
test
push
clc
ljmp
mov
lods
scas
jno
loopne
es
cmp
or
test
fstpt
push
mov
pop
sarl
cmp
push
mov
arpl
imul
or
xchg
cld
cmpsb
and
aas
or
sbb
mov
pop
sahf
add
lock
stos
sub
das
ljmp
add
lret
test
das
fistpl
fimuls
fisubl
add
mov
push
sbb
mov
jbe
imul
call
pop
outsb
stos
adc
cld
cmpsb
fcmovb
popf
push
mov
sar
mov
js
lret
hlt
clc
cltd
mov
stos
mov
ret
fs
push
cmc
jo
adc
fidivrl
jecxz
push
push
push
out
scas
aam
xor
repz
cwtl
sbb
xchg
jo
int
sbb
push
fnsave
and
ret
imull
shlb
xchg
clc
je
int3
and
call
mov
sbb
outsb
add
shll
fnsave
ret
inc
test
pop
xchg
or
fimull
out
sbb
rcrb
inc
outsl
ret
int
into
ficoml
fnstcw
and
aas
xor
insl
iret
mov
sub
fimull
jmp
stos
dec
shrb
adc
sub
in
mov
insl
jl
inc
filds
jmp
add
cmp
ret
leave
push
xchg
sub
rol
fcmovbe
pop
or
addr16
in
movb
cmpsl
adc
sub
push
test
pop
enter
pop
push
repnz
scas
xchg
and
mov
or
add
ds
aad
lahf
cmp
lret
imul
push
cmc
cmp
lock
iret
int3
adc
or
in
rorl
les
mov
sbb
bound
cli
mov
out
loop
sbb
adcl
andb
hlt
adc
pushf
test
or
imul
mov
inc
jno
pop
fxch
popf
movsb
pop
inc
jmp
push
mov
sbb
mov
dec
adc
int
or
loopne
ret
enter
fiaddl
or
js
xchg
xor
inc
mov
loope
jmp
jns
or
ljmp
repz
addb
leave
js
sub
push
in
rclb
jo
mov
idivl
push
xor
jnp
mov
and
dec
add
push
cmpsb
lock
pop
push
pop
pop
pusha
imul
aas
gs
sub
xchg
pop
sub
pop
cltd
icebp
lcall
lods
jge
dec
mov
xor
shrb
mov
rorb
sbb
pop
lods
jle
mov
test
jle
negl
hlt
push
gs
stc
pop
scas
cmp
outsb
call
insl
arpl
or
mov
jge
adc
xor
and
mov
mov
and
push
inc
sbb
cs
insl
out
sbb
divl
sub
aam
adc
mov
fisttpll
fldcw
test
pop
pop
data16
stc
jnp
shll
fisubrs
jno
xor
sbb
sbb
repz
enter
repnz
lret
or
push
aaa
mov
pop
ud0
add
mov
clc
xlat
push
stc
jbe
in
mov
jge
and
xchg
sbb
push
sbb
mov
mov
popf
stos
mov
jmp
mov
sub
test
sarb
in
or
lods
hlt
loopne
mov
jmp
xor
adc
pushf
aaa
adc
xor
or
xor
mov
fldenv
nop
mov
cmpb
sbb
cmp
dec
add
jne
pop
lods
or
pop
pushf
sahf
mov
adc
sbb
into
popf
push
xchg
aas
sub
lods
outsl
sub
je
cwtl
jnp
aas
stc
ja
mov
inc
enter
mov
push
push
sub
cs
cmp
xorl
and
lods
xchg
mov
jbe
mov
shll
xor
xchg
xchg
shl
imul
repz
lods
out
jb
ja
pushf
or
leave
sub
or
xchg
bound
mov
fwait
rcrb
adc
sbb
lds
outsl
and
xchg
jge
xchg
cmp
and
fcmovnbe
roll
adc
sbb
mov
cmp
int
pop
cmp
add
hlt
lret
mov
frstor
push
add
adc
cld
jb
fwait
popa
add
inc
cmp
jno
mov
add
push
xor
mov
push
and
sub
shr
sbb
movsl
add
mov
dec
inc
ret
push
cmp
or
jb
iret
adc
cmp
pusha
xor
aad
mov
push
or
rclb
adcb
xor
mov
repnz
aaa
ret
mov
pop
pop
cwtl
inc
aam
aam
cmpsb
xor
dec
mov
imul
or
ljmp
adc
mov
subl
adc
data16
jne
bound
or
faddl
cmp
enter
les
cmpsl
bound
adc
xor
ss
mov
jmp
fidivrs
repnz
testl
push
loop
jle
mov
out
test
aaa
ja
inc
push
cmp
out
into
lods
cmpsl
xchg
hlt
sbb
loopne
jno
push
xor
mov
push
xlat
push
sbbb
dec
adc
mov
aad
xchg
adcl
ljmp
push
add
sbb
push
cmpsb
sbb
cmc
in
int
gs
add
fwait
push
add
sub
cmp
mov
popf
rcrl
cltd
aad
mov
jmp
mov
sar
mov
push
filds
iret
adc
ret
mov
aaa
jecxz
cmpsb
in
jns
pop
inc
das
mov
adc
addr16
jecxz
js
aas
sti
mov
add
bound
xchg
mov
fdivr
ret
push
dec
fmuls
clc
cmp
mov
sbb
inc
push
jg
stos
push
or
test
movsb
addr16
shll
mov
mov
into
jle
pop
cltd
sahf
mov
add
mov
xor
inc
mov
cmc
pop
sub
pusha
cmp
leave
mov
push
dec
mul
std
mov
cltd
ja
les
pop
ljmp
mov
je
xor
scas
dec
fdivrl
into
clc
pop
xchg
inc
cmp
in
test
gs
inc
sub
sahf
xlat
mov
shll
cli
dec
rcll
push
rcll
sub
sbb
das
insl
or
sbb
or
in
aaa
stos
add
out
fidivrs
pop
and
lock
xor
loop
xor
scas
sub
shr
ss
inc
aas
mov
ds
nop
enter
mov
icebp
mov
pop
clc
push
sub
pop
push
sahf
lods
hlt
fdivs
lea
daa
je
xor
out
adc
in
aam
stos
dec
or
xchg
sub
cmp
adc
pushf
mov
das
sub
repz
in
sbb
push
repnz
into
xlat
rclb
adc
jge
dec
add
js
inc
pop
or
in
cs
mov
jp
mov
mov
pop
mov
popw
jl
push
jne
jae
adc
inc
jnp
jge
cmp
pop
mov
pop
xchg
hlt
xchg
cld
les
cli
and
cmp
ds
mov
jnp
mov
fstp
gs
lret
add
dec
test
pop
mov
cltd
sub
loopne
aaa
push
dec
insl
push
jbe
in
mov
rclb
sub
adc
or
movl
adc
test
iret
jbe
orl
inc
in
or
filds
jae
sbb
andl
movsb
jo
leave
ljmp
movsb
jmp
dec
into
jg
in
fmull
stc
xchg
out
pop
lret
stos
test
in
sbb
test
into
sub
adc
data16
sbb
pop
dec
jo
cmp
fistpll
test
add
jnp
insb
cmpsb
or
or
ss
cmp
imul
cld
ds
inc
cmp
xchg
cmc
into
addl
xchg
fadd
add
cmp
mov
insb
or
and
icebp
sbb
xorb
mov
call
clc
fstpt
lock
insl
pop
pop
fisttpl
mov
push
ret
pop
cmp
xor
inc
mov
daa
cmp
jecxz
aaa
pop
fsubrl
push
loope
xor
das
jno
xchg
inc
xchg
aad
in
mov
rclb
cmpsl
xor
sbb
lcall
stc
push
cld
dec
dec
loop
pop
cmp
xchg
inc
pop
push
js
les
aad
jb
loope
mov
pusha
mov
jle
fsubs
dec
cwtl
and
xchg
and
ds
movsl
daa
push
out
jp
inc
push
adc
mov
push
jae
mov
fxch
cltd
into
das
into
adc
push
add
sub
add
in
lock
push
in
mov
push
imul
rcll
push
in
icebp
sahf
push
mov
mov
inc
cmp
ja
jecxz
jg
jno
pop
mov
mov
push
les
cmp
popf
jnp
cmp
nop
xor
push
call
jl
ficoml
ds
insl
and
les
mov
jbe,pn
enter
insl
shll
mov
push
jl
pop
outsl
xchg
and
mov
dec
lcall
adc
lcall
jge
stos
pop
mov
dec
aad
and
adc
add
mov
and
xor
test
mov
push
xchg
xchg
imul
fstpl
pop
pop
jp
std
mov
insb
xchg
shl
fisubrl
out
pop
xchg
sbbb
dec
fldenv
repz
add
add
stc
sub
ljmp
stos
xchg
mov
fsubr
mov
add
sahf
mov
test
jae
and
ret
psadbw
xchg
jb
ficoms
and
in
je
movb
loopne
in
das
xor
lock
push
jbe
add
dec
push
mov
cmp
inc
pop
jmp
add
push
adc
mov
jp
mov
inc
mov
mov
sbb
adc
sub
int3
out
ja
ret
pop
sub
pop
push
mov
inc
and
adc
fnstcw
jle
jne
dec
adc
cltd
sub
aaa
xchg
sbb
imul
adc
in
in
xchg
roll
mov
pop
xor
jno
gs
sub
aam
bound
jbe
push
xchg
push
scas
sub
xorb
popa
push
es
inc
mov
repz
cmpsb
idiv
and
mov
inc
sub
gs
es
dec
ret
std
xchg
push
adc
loopne
movsl
sub
xor
cld
inc
sbb
sbb
dec
into
loope
cmp
add
cmp
sbb
sbb
sub
pop
mov
mov
idivl
inc
mov
cmp
pop
jae
xchg
pop
nop
pop
push
lahf
out
out
xchg
shrb
mov
mov
hlt
push
pushf
mov
aam
dec
push
nop
clc
ret
popa
push
movsl
daa
lcall
push
sub
cmp
cmpb
je
and
rcrl
loopne
xchg
jno
ljmp
lds
ss
xor
adcl
inc
imul
mov
and
sahf
mov
cmp
mov
cmp
mov
loope
push
push
aam
sub
adc
call
and
inc
push
pop
fisubl
daa
jmp
cmpsb
dec
sbb
test
mov
aam
js
xchg
mov
loope
inc
mov
pop
mov
mov
in
dec
and
jnp
mov
dec
mov
mov
iret
test
dec
add
cmc
cmp
fwait
mov
inc
adc
dec
lret
outsb
or
and
mov
pop
dec
dec
sbb
push
and
push
adc
ds
xchg
daa
insb
mul
dec
jb
mov
jmp
dec
pop
mov
push
push
cwtl
mov
daa
sbb
movsb
sub
pusha
sarb
enter
or
xor
scas
clc
fisubl
pushf
sbb
mov
wrmsr
cmp
dec
and
stc
adc
mov
pop
das
stc
jle
sub
std
cmp
sbb
out
hlt
xor
inc
jl
inc
mov
add
lret
sbb
xchg
xor
popa
fldenv
dec
shlb
cmp
push
in
jp
cmc
push
les
sub
daa
add
out
mov
add
dec
dec
push
adc
jge
inc
insl
mov
and
dec
cmp
mov
divl
sub
cmp
pop
xchg
lods
mov
aad
or
inc
call
dec
aad
out
scas
mov
xchg
test
push
inc
cmpsb
or
je
inc
mov
ret
or
add
scas
out
cmp
mov
movsl
dec
outsl
je
push
inc
incb
mov
sbb
jle
sub
pop
push
in
insl
xor
and
leave
xchg
fiadds
push
jge
fisubrs
xchg
rorl
cmp
push
call
dec
sub
or
xchg
mov
add
sub
mov
mov
dec
jecxz
cmc
jle
ds
and
or
test
ret
dec
fbstp
lock
iret
bound
add
sbb
xchg
imul
inc
bound
sahf
lret
push
imull
xchg
fs
cltd
pusha
sti
jmp
testl
sti
insb
jg
push
mov
hlt
inc
pop
pop
push
adcl
in
push
fwait
cmp
ror
arpl
clc
adc
ror
adc
mov
clc
inc
push
addr16
fcmovu
jmp
sbb
xor
outsl
into
mov
idivl
scas
or
push
dec
jb
stc
mov
jp
cmp
dec
inc
das
shrb
mov
retw
lcall
pop
andb
pop
sbb
stos
nop
pop
adc
fiaddl
add
dec
out
aad
push
adc
fmuls
jno
mov
repz
xchg
cld
mov
mov
shl
repnz
pop
int
mov
push
mov
xor
adc
movsb
scas
sti
mov
or
subl
cmp
inc
mov
nop
je
or
ret
or
push
sub
jmp
out
mov
jne
lcall
sbb
pop
cmc
or
push
mov
js
aam
sti
bnd
imul
push
mov
adc
nop
call
je
pop
cmp
jbe
fldt
test
jmp
xlat
das
arpl
rcr
push
lret
gs
mov
mov
pushf
dec
adc
adc
xchg
movsb
loope
mov
jae
in
xor
lods
mov
cmpsb
lret
xchg
gs
daa
jne
inc
mov
cmpsb
and
add
call
or
lods
pop
mov
and
sub
mov
es
aas
jo
cmp
push
and
jge
xor
rorl
dec
mov
into
xchg
fidivrl
dec
adc
sahf
enter
out
stos
ja
shlb
pop
data16
dec
lea
aas
sub
outsl
push
jb
sbb
ds
mov
leave
cld
ss
mov
xor
test
xor
pop
jge
mov
mov
inc
repz
adc
mov
jge
inc
mov
sbb
xlat
test
icebp
add
test
lret
in
add
movsb
mov
sbb
test
xchg
xlat
pop
cmp
mov
in
xchg
jno
les
mov
xor
insl
mov
gs
add
push
mov
lret
out
sub
rorl
ret
mov
out
add
sbb
xchg
mov
xchg
arpl
clc
je
adc
pushf
mov
aaa
xor
imull
pop
negl
xor
and
sub
jle
mov
mov
adc
ds
repz
xor
add
rcrl
or
dec
cmp
das
stos
loop
addr16
mov
mov
movsl
outsb
mov
pop
inc
rcr
jl
push
test
nop
nop
lock
mov
rclb
pop
jp
lcall
nop
repnz
sbbb
iret
or
in
enter
icebp
pop
jne
push
add
or
mov
mov
loop
xchg
jmp
jge
out
jo
shr
dec
sbb
in
push
sahf
and
mov
stos
pop
lret
push
in
push
andl
pop
adc
je
cmpsb
imul
test
addr16
pop
ljmp
push
jecxz
fstenv
add
mov
jge
mov
inc
and
into
or
out
adc
out
cmp
xor
cmpsb
aad
pusha
lock
mov
in
jmp
mov
sar
pop
aaa
lret
adc
je
add
dec
sahf
hlt
xchg
imul
adcl
test
pop
divb
cmp
pop
dec
cld
test
loopne
push
inc
jae
imul
iret
add
mov
jp
aaa
add
push
sbb
sub
jns
push
xor
or
xchg
xor
mov
push
xchg
adc
fisttpl
mov
mov
cmp
iret
xor
jb
fidivl
mov
sti
push
push
add
sub
sahf
sub
lods
xchg
xchg
mov
or
mov
cli
and
cmp
mov
ret
or
ror
mov
fcoml
hlt
add
mov
and
into
test
mov
xor
push
pusha
and
jo
loope
xor
sbb
enter
fistps
cmp
inc
push
push
movsb
imul
xchg
jle
pop
mov
xlat
and
sub
mov
mov
mov
push
pop
data16
sbb
cli
das
jne
xor
mov
sbb
dec
xchg
xor
out
xchg
jecxz
pop
arpl
mov
or
inc
sbb
jmp
into
sub
inc
imul
add
adc
dec
addr16
out
cmp
fldcw
push
idivb
shll
jns
or
jp
xchg
fstl
xchg
cmp
mov
jle
or
aas
xor
dec
inc
in
add
pusha
jp
lcall
xchg
adcb
int3
inc
ss
xchg
jno
mov
push
lock
leave
xor
je
xlat
jb
lock
sbb
stos
lret
sar
mov
and
lods
mov
mov
fwait
push
sbb
pushf
iret
fsubs
leave
sub
inc
fidivl
adc
or
loope
les
adc
lods
cmp
push
xor
fsubl
inc
jle
xchg
int
in
js
jnp
enter
ljmp
mov
out
aad
sub
cld
dec
pusha
call
ret
rcrb
sbb
sti
mov
repnz
dec
test
inc
call
rol
ret
leave
lock
and
mov
inc
ds
xchg
inc
jae
xchg
lock
pop
add
mov
mov
sbb
call
out
mov
xorl
fbstp
jl
lock
mov
add
movsb
push
xchg
test
pop
roll
xlat
out
lock
xor
fs
push
ficoml
xchg
cli
push
leave
frstor
out
inc
rcll
inc
shlb
mov
out
or
ljmp
sbbl
sti
push
mov
sahf
mov
lcall
lock
and
lea
repz
stos
or
sub
sub
mov
adc
lea
add
jp
sbb
cmp
je
rcl
insb
push
ret
adc
popf
cmp
inc
cmpsl
jbe
adc
add
jae
cmp
xlat
loopne
sub
jne
ja
pop
mov
mov
ss
dec
hlt
lods
sar
std
and
fnstsw
ja
xchg
and
push
and
mov
out
add
jb
pop
inc
or
push
sbb
and
and
and
les
sti
jmp
aam
stc
mov
mov
popa
xchg
xor
jnp
jmp
fs
xor
icebp
push
ljmp
inc
and
xchg
mov
push
js
daa
add
or
sub
inc
popa
mov
or
adc
xchg
insl
cs
fmulp
jecxz
loopne
jnp
pusha
daa
mov
push
jp
sti
inc
inc
gs
cmp
inc
insl
cs
inc
stc
pop
test
aaa
mov
test
lods
call
adc
xchg
in
imul
push
add
or
lahf
xchg
or
push
adc
iret
shll
cltd
mov
sar
xchg
sub
cmp
push
std
jg
lods
movsb
int
xchg
cltd
and
add
mov
rorb
pop
pop
mov
jnp
xor
xchg
mov
push
sbb
mov
pop
push
cli
add
aaa
je
jb
insl
in
cmc
add
mov
dec
adc
fisttps
data16
mov
testl
fs
jg
jecxz
insb
mov
daa
and
scas
ficoml
nop
mov
dec
dec
fmuls
sti
xchg
dec
call
and
xchg
inc
loop
lcall
fdivrs
push
in
rclb
or
push
mov
push
stos
or
or
jl
add
int3
aam
push
sbb
adc
jg
in
cmpsb
faddp
adc
push
sub
lret
fisttps
call
imul
cwtl
scas
mov
xchg
out
push
test
int
mov
push
push
mov
add
push
or
add
nopl
dec
les
filds
fdivrs
stos
mov
sbb
push
out
sbb
ds
test
add
jae
inc
push
dec
jo
inc
sub
push
jp
and
cmp
xchg
push
add
sbb
std
xor
popa
add
int3
adc
out
repnz
cmp
xor
mov
clc
adc
xchg
dec
push
mov
lret
frstpm(287
jo
and
dec
in
xchg
scas
stc
fists
iret
gs
sbb
les
repz
jns
cmp
jmp
orl
pop
inc
cmp
stos
dec
mov
pop
xchg
cmp
lahf
dec
adcl
mov
popf
xor
orl
cmpsl
repz
mov
les
cwtl
test
and
sbb
scas
jle
xchg
or
test
in
sbb
adc
cli
movsl
mov
rcrl
dec
jbe
cltd
pop
outsb
nop
imul
add
stc
inc
icebp
aaa
jnp
xchg
dec
std
in
push
repz
sub
test
xchg
out
jg
pop
enter
mov
pop
or
addr16
and
xchg
lods
inc
xor
xchg
in
pop
jb
hlt
mov
inc
xchg
sub
add
lahf
cmp
mov
cwtl
inc
cmp
popa
lea
fdivr
xlat
imul
mov
rol
sbb
int3
cmp
jp
dec
clc
cmp
rcrl
xor
cwtl
sarl
pop
jecxz
inc
repnz
xor
push
and
push
mov
repnz
jne
mov
movl
xchg
push
sbb
fwait
sbb
mov
and
jns
sub
fadds
xchg
jb
dec
in
cltd
mov
inc
push
jge
mov
imul
add
cmpl
add
pop
repz
xchg
dec
xlat
jo
cmpsb
jp
aad
add
in
out
ljmp
mov
xchg
jo
add
mov
pop
loopne
mov
loopne
mov
cmp
gs
add
decb
lods
orl
mov
jl
fsts
add
out
mov
call
test
mov
cld
nop
shlb
enter
pop
mov
mov
js
fdivl
mov
fisttpl
pop
mov
aas
pop
mov
push
xor
shll
mov
repnz
cmpsw
jg
ror
and
xchg
push
in
je
lds
repz
xchg
sub
sbb
inc
push
or
xor
test
jne
mov
out
arpl
xchg
jo
outsb
push
out
jge
nop
fnstcw
or
push
add
xchg
mov
pop
out
pop
test
jb
jb
cmp
shll
stc
dec
mov
xor
popf
test
mov
aaa
or
and
dec
repnz
loop
sahf
sbb
icebp
xchg
cmp
stos
mov
test
aaa
movsb
cmp
cmp
testb
mov
mov
mov
out
xor
push
jae
dec
push
nop
cmp
jb
les
cld
fidivrs
cli
pusha
adc
in
adc
xchg
in
xor
addb
mov
mov
fstpl
push
jl
sbb
pusha
cmpsl
insb
jecxz
ss
pop
xor
loopne
xor
fucom
mov
int
into
mov
cmp
sbb
stos
mov
push
sub
ljmp
pop
add
lods
adc
nop
call
cmp
mov
pop
in
sub
mov
push
mov
mov
or
jno
rorb
fiadds
inc
cmp
mov
ljmp
fisubs
lods
pop
add
data16
xchg
addl
xchg
mov
fldt
movb
sbb
add
mul
adc
xchg
xorl
mov
insl
lods
mov
shlb
popf
loop
gs
jmp
scas
aad
cmp
mov
sub
xor
outsb
and
sub
out
gs
adc
mov
dec
push
push
sbb
push
xlat
mov
jle
xchg
sbb
xlat
xchg
mov
out
out
add
fnstsw
in
xchg
jg
pop
push
fs
and
jge
ficoms
cmpsl
inc
adc
cs
sub
jmp
jo
loope
test
xlat
jmp
das
ror
push
push
inc
push
aaa
fadds
mov
iret
jge
pop
arpl
clc
sub
out
aam
cwtl
dec
sub
mov
lahf
xlat
sbb
aam
mov
pop
and
test
test
je
call
push
rolb
cmp
ss
mov
insl
jl
daa
jno
aam
loop
or
fistpl
add
dec
pop
repz
pop
pop
insl
mov
in
xchg
cmovnp
in
mov
je
in
repz
jb
cmc
imulb
adc
lea
adc
stos
cmc
mov
icebp
shrl
xor
imul
sbb
hlt
daa
inc
adc
push
pop
mov
sahf
add
jno
inc
insl
or
jmp
dec
enter
cld
push
adc
decb
lret
andl
xchg
cs
fdivrs
jecxz
fcoms
jno
adc
pop
iret
into
aas
imul
iret
mov
shrb
pusha
icebp
inc
scas
xchg
dec
out
ret
mov
add
jno
test
movl
inc
push
inc
inc
xlat
and
add
dec
mov
ss
int
jo
jle
sbb
xor
mov
xchg
or
ss
stc
stos
divl
aam
and
andl
sbb
xor
xor
sub
cld
test
xchg
xor
pop
js
push
clc
pop
or
ret
mov
push
ss
and
add
pusha
lahf
repnz
mov
je
add
cs
daa
sub
aam
out
mov
jl
aam
inc
add
shll
insl
arpl
popf
push
mov
xchg
lahf
dec
into
inc
dec
sahf
outsl
in
sub
fcmovb
pop
adc
testl
jns
dec
stc
mov
sti
adc
adc
xor
das
insb
sbbb
imul
imul
loope
ljmp
push
stos
andl
sub
mov
mov
xor
fwait
ret
stc
xchg
or
nop
fs
orb
mov
sub
arpl
cmp
push
lahf
xchg
stos
dec
xor
xchg
pop
jnp
je
sar
test
dec
inc
iret
sub
cltd
ja
lret
jmp
sti
lock
pusha
insl
cmpsb
pop
int3
xchg
mov
into
aam
add
push
popf
cmpsb
negl
fists
or
iret
adc
pop
xchg
mov
insb
dec
test
lcall
xor
jmp
rorb
into
outsb
jge
jl
popf
sbb
push
sub
mov
push
nop
outsb
pop
jl
xchg
cmpsb
rclb
fsub
cltd
sbb
gs
pop
dec
in
std
sub
gs
inc
iret
lret
xchg
lret
xlat
cmp
cmp
add
jne
xchg
outsl
or
cld
roll
out
inc
xchg
test
dec
rcr
lcall
adc
mov
js
mov
adc
imul
pop
jne
mov
lret
insl
xchg
xchg
mov
test
mov
lods
dec
jb
xor
outsb
repnz
mov
xor
adc
out
fwait
aas
jp
push
xchg
push
add
icebp
add
les
jg
jnp
fdivs
imulb
fsubr
jno
add
add
fs
pop
in
or
mov
pop
xor
cmc
loopne
or
ror
cmpsl
out
xor
in
insb
xchg
push
rolb
mov
cmpsb
or
pop
out
or
call
add
aam
cmp
jecxz
jbe
jno
jle
mov
nop
in
pop
lods
scas
data16
mov
insl
rclb
addr16
shrl
push
andb
xchg
pop
aas
idiv
shl
xchg
imul
hlt
sbb
mov
std
fistpl
inc
mov
cmp
mov
sarb
addr16
sub
gs
sbb
imul
rorl
stc
cld
inc
jmp
loop
add
shlb
xchg
add
pop
jbe
out
pusha
xchg
inc
std
pop
sbb
sbb
iret
sbb
xor
pop
leave
mov
push
sbbb
loope
stos
ficompl
int3
xchg
stos
sbb
jge
pop
ret
mov
es
mov
popa
daa
jbe
dec
and
mov
push
fsubrs
in
cld
rcl
scas
out
mov
repnz
iret
outsb
dec
adc
mov
loop
mov
rcll
jo
test
cmp
xchg
repnz
aad
insl
sbb
mov
out
cmp
stc
inc
daa
fildl
repz
sbb
icebp
ret
bound
jle
and
loopne
pop
lret
and
popa
cli
mov
fdivs
or
and
out
mov
repnz
bound
mov
jg
push
xchg
sub
or
sub
loop
adc
fcmovnb
add
std
into
insb
cmp
aam
mov
mov
ds
je
fcomp
pop
shl
aam
xor
and
adc
and
fnstsw
inc
add
dec
out
je
cmpsl
sbb
test
xchg
cmc
pop
mov
popf
inc
jne
repz
insb
cmp
stos
push
orl
rcll
fsubrs
jo
or
fld
xchg
xor
jle
shl
xor
xchg
jne
stc
mov
jp
sub
pop
xchg
repnz
test
das
out
xchg
dec
or
and
mov
lea
sub
out
and
test
push
mov
push
stos
std
mov
mov
push
loopne
outsb
std
or
dec
mov
xor
cmp
das
arpl
pop
inc
inc
std
lret
xor
lods
pop
add
lock
pushf
mov
jmp
fadds
jecxz
sub
into
jne
ja
jo
adc
xchg
sub
add
pop
add
mov
scas
sarb
clc
sbb
lret
fistl
cmpsb
mov
cmp
movsl
out
pushf
loop
int3
data16
lods
xchg
es
and
dec
divb
js
jle
aad
add
mov
cmp
repz
lods
imul
inc
shrl
sbb
cwtl
mov
gs
xor
loopne
xor
ljmp
test
xchg
ss
cmp
fnstenv
sti
jo
xchg
pop
cmp
mov
pop
js
inc
call
mov
jae
and
mov
std
push
scas
mov
or
inc
xor
mov
fwait
sbb
filds
scas
jnp
repnz
insb
fs
outsl
sbb
icebp
xchg
pop
ficoml
loop
mov
movsb
xlat
popa
insl
cmp
movsl
scas
and
es
es
ret
dec
inc
lock
das
pop
testb
test
xor
adc
andl
push
add
imul
pop
or
stos
push
inc
xchg
sub
push
inc
sub
jg
xchg
or
mov
in
shll
pusha
fisubrl
inc
fadd
mov
and
shr
mov
fcmovnb
xchg
push
and
cmpsb
in
push
mov
in
push
int
iret
int3
add
cmpsb
mov
pop
js
xor
inc
fsubr
shrb
mov
scas
cs
popa
adc
mov
decl
fucomi
adc
sbb
push
std
notb
adc
sub
mov
mov
scas
mov
lods
dec
shll
cmpsl
jnp
pop
imul
nop
cmp
rdmsr
sbb
loop
out
cmp
cmp
mov
outsb
cmp
ljmp
push
push
sub
ljmp
mov
mov
inc
test
jae
mov
xchg
add
jge
push
movsb
mov
movsl
mov
dec
sbb
mov
in
xor
shlb
xchg
std
fwait
movsb
mov
mov
mov
cli
adc
mov
mov
fimuls
mov
ficompl
jp
stc
or
aaa
mov
inc
sub
nop
xchg
push
xchg
push
leave
mov
cltd
dec
jnp
mulb
roll
fdivr
pop
or
xchg
out
adc
in
lahf
clc
bound
ds
inc
mov
jb
xchg
mov
dec
mov
movsb
aad
lea
rcr
fisttpll
inc
jnp
xchg
pop
out
sub
subl
leave
movsb
das
and
mov
sbb
outsl
negl
sub
ja
popa
adc
mov
cltd
ud0
mov
aad
sbb
inc
pusha
dec
xor
push
xchg
sbb
push
xlat
cs
stc
xor
pop
mov
aaa
fistps
adc
and
in
mov
inc
negb
fcmovu
insb
lret
aad
sahf
movsl
imul
jp
xor
daa
int
out
insl
or
mov
notb
stos
cmp
add
lods
and
pop
mov
bnd
into
enter
and
xor
imulb
cmp
cltd
inc
add
fbld
push
dec
add
scas
jg
pop
dec
popf
fsincos
push
inc
in
rolb
push
push
mov
push
xor
push
jns
adc
dec
ja
fdivrl
xor
or
out
mov
sbb
mov
cmp
enter
insl
push
mov
daa
adc
mov
cmp
add
mov
or
push
jns
shl
push
mov
sbb
push
sbb
sbb
adcl
ret
incb
das
sbb
xor
add
rol
sahf
push
cwtl
movsl
lock
sarl
pop
pop
sbb
fsubl
clc
int
adc
xchg
movsb
xchg
push
bound
jbe
and
shlb
into
sahf
outsb
in
je
aad
es
xchg
imul
mov
scas
xchg
xchg
fcmovnu
jbe
lea
pushf
mov
sar
adc
cmpsb
and
clc
push
cmp
inc
jmp
mov
mov
outsb
xor
mov
add
clc
xchg
jl
push
lret
cwtl
push
imul
pop
sbb
in
inc
jle
adc
cmpsb
mov
es
jg
inc
and
jo
lods
cmpsl
or
fldt
test
cmp
fs
outsb
jo
mov
sub
cs
jb
cmp
push
ror
rcll
adc
mov
jecxz
jbe
jne
mov
xchg
cmpsl
cmp
mov
scas
cmp
cltd
cmpsb
bound
push
insb
arpl
into
out
adc
sub
dec
pusha
addr16
das
sub
mov
inc
dec
add
dec
sub
outsb
pop
lahf
in
imul
sbb
lods
fucompp
jno
mov
pop
inc
dec
jbe
rorl
or
pop
ja
bound
insb
xchg
xor
hlt
xor
pop
or
jmp
mov
movsl
shr
cltd
push
mov
mov
sahf
loope
or
int3
addr16
xor
adc
push
cmp
rorb
fs
imulb
in
sbb
mov
add
into
leave
out
jbe
mov
daa
xchg
stos
fdivrs
cmp
sbb
mov
dec
rcrl
mov
inc
or
movsl
lahf
jo
daa
cs
rol
repnz
leave
fisttpl
ss
mov
shrb
and
jl
jne
jbe
das
mov
fmuls
loope
into
mov
mov
out
inc
out
sbb
mov
mov
cmp
cmp
iret
cld
sub
popf
out
sbb
mov
xor
mov
fnstenv
fwait
enter
movsb
xor
adc
mov
repz
out
mov
mov
xchg
ss
leave
flds
into
js
bound
jno
movl
push
andb
mov
sbb
popf
cmp
mov
cltd
add
push
pushf
sub
push
add
mov
in
pcmpeqw
lret
mov
fsubrl
dec
push
mov
dec
pop
add
cmpsl
lret
enter
sub
mov
clc
sub
insb
dec
fdiv
enter
sbb
mov
sbb
add
ljmp
out
mov
adc
mov
das
adc
xor
mov
adc
jecxz
cmp
push
inc
inc
data16
sbb
cwtl
jmp
cmp
rcll
dec
push
nop
mov
inc
dec
or
mov
pop
in
cwtl
jp
icebp
mov
and
dec
cmp
mov
add
ret
and
mov
sub
inc
xor
xchg
dec
ret
or
aas
.byte
mov
.byte
.byte
add
add
add
or
pusha
add
cmpb
addb
add
sbb
add
call
add
add
add
addb
add
add
add
push
add
repnz
add
adc
add
mov
add
insb
or
orb
push
add
pop
add
add
inc
add
add
add
add
add
add
add
add
mov
add
add
add
addb
add
lock
addb
add
add
add
add
add
add
add
add
add
mov
mov
add
in
add
add
add
add
add
add
add
loopne
add
mov
add
add
add
add
add
add
add
add
add
or
add
sarb
add
in
add
add
add
add
add
add
add
dec
add
addb
add
jo
add
cwtl
add
addb
add
add
addb
add
add
add
add
add
add
add
add
add
pusha
add
add
add
in
add
add
add
add
add
add
add
mov
add
pop
mov
add
in
add
add
add
add
add
add
add
mov
add
mov
add
in
add
add
add
add
add
add
add
fadds
add
rol
add
add
add
add
add
push
add
add
pop
add
add
add
orb
add
ljmp
add
add
xorb
add
add
xorb
bound
add
mov
add
mov
add
fiaddl
add
add
cmpb
add
add
add
add
push
add
adcb
add
jp
add
mov
jns
add
add
adcb
add
pop
add
add
inc
add
pop
add
push
add
push
add
dec
add
inc
add
inc
add
add
add
add
add
add
add
mov
add
je
add
add
add
add
add
add
add
add
add
fiaddl
add
loopne
add
add
in
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
sub
add
insb
add
add
in
add
add
add
add
add
add
add
push
add
add
add
add
in
add
add
add
add
add
add
add
jp
add
sbb
add
add
in
add
add
add
add
add
add
add
mov
lret
pop
add
add
add
add
add
add
add
add
add
lret
add
lret
add
add
in
add
add
add
add
add
add
add
repnz
add
add
in
add
add
add
add
add
add
add
sbb
add
add
add
in
add
add
add
add
add
add
add
inc
add
add
iret
add
add
in
add
add
add
add
add
add
add
push
add
sub
cs
add
add
add
add
add
add
add
add
xchg
add
add
xlat
add
add
add
add
add
add
add
add
mov
xlat
add
add
add
add
add
add
add
add
add
loop
add
xor
add
add
add
add
add
add
add
add
add
sbb
add
inc
add
add
push
add
add
add
add
add
add
add
add
add
xor
cs
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
jg
add
mov
add
fiaddl
add
add
add
add
add
add
add
add
add
lret
add
add
add
add
in
add
add
add
add
add
add
add
repnz
das
add
add
add
add
add
or
xchg
add
add
add
mov
add
mov
add
fiaddl
add
add
add
sub
add
push
pop
add
jp
add
mov
js
add
pop
add
add
add
add
add
add
add
add
add
jp
add
rolb
add
add
add
add
add
add
add
add
mov
pop
das
add
add
in
add
add
add
add
add
add
add
lret
add
or
add
add
add
add
add
add
add
add
add
add
repnz
add
rorb
das
add
add
add
add
add
add
add
add
add
add
sbb
add
mov
or
add
add
add
add
add
add
add
add
inc
pop
add
insb
adc
add
add
add
add
add
add
add
add
push
add
and
add
add
add
add
add
add
add
add
add
add
xchg
pop
add
in
adc
add
add
add
add
add
add
add
add
mov
adc
add
in
add
add
add
add
add
add
add
loop
add
test
das
add
add
add
add
add
or
add
add
pop
or
addb
add
orb
addb
add
stos
or
adcb
add
rorb
add
cli
or
adcb
add
and
add
dec
or
sbbb
add
jb
add
lcall
add
or
sbbb
add
add
add
add
add
add
add
add
add
jb
add
adc
das
add
add
in
add
add
add
add
add
add
add
lcall
add
add
in
add
add
add
add
add
add
add
ret
add
add
in
add
add
add
add
add
add
add
ljmp
add
add
add
add
add
add
add
add
add
add
adc
add
enter
sub
add
in
add
add
add
add
add
add
add
cmp
add
hlt
sbb
add
add
in
add
add
add
add
add
add
add
bound
add
cmp
das
add
add
in
add
add
add
add
add
add
add
mov
add
jl
das
add
add
add
add
add
add
add
add
add
mov
add
loopne
das
add
add
add
add
add
add
add
add
add
add
fimull
add
mov
add
add
add
add
add
add
add
add
add
add
add
int3
and
add
add
in
add
add
add
add
add
or
add
or
orb
add
bound
add
mov
add
add
add
add
add
add
add
add
add
push
or
add
and
add
add
in
add
add
add
add
add
add
add
jp
add
add
das
add
add
in
add
add
add
add
add
add
add
mov
and
add
add
add
add
add
add
add
add
fimull
add
jg
add
sbb
add
inc
or
orb
add
inc
add
push
add
add
dec
add
dec
add
add
add
add
add
add
add
or
add
push
popa
das
add
add
in
add
add
add
add
add
add
add
xor
add
push
and
add
add
in
add
add
add
add
add
add
add
pop
or
add
add
add
in
add
add
add
add
add
add
add
test
add
add
add
add
add
add
add
add
add
pushf
or
add
das
add
add
in
add
add
add
sub
add
xor
add
pusha
add
add
add
add
add
add
and
add
xor
pop
pop
inc
push
xchg
fwait
adcl
dec
xor
dec
push
cmp
sahf
movsb
mov
xchg
lcall
and
adc
adc
or
and
push
lcall
sub
jmp
jae
add
ud0
adc
ljmp
cmp
incl
adc
lcall
and
daa
jmp
ss
fwait
stos
xchg
ljmp
pop
pushl
decl
adc
call
cs
mov
jl
ret
pushl
mov
incl
jp
sub
lcall
jl
xor
ljmp
inc
cmp
cmp
decl
pop
decl
adc
sub
sub
push
sub
es
mov
xor
sbb
sub
xor
scas
cwtl
filds
cmp
adcb
cs
daa
pushl
inc
and
sub
adc
cmp
ljmp
inc
xor
sbb
ds
call
push
lcall
sub
ljmp
xor
jmp
sub
ljmp
xor
decl
adc
and
pop
and
mov
jae
ljmpw
incl
adc
decl
sbb
ljmp
push
push
jmp
movsb
jg
ret
ljmp
stos
decl
xchg
inc
cmpb
bound
push
xorb
aaa
sub
cmp
inc
pop
dec
call
pop
incl
sbb
and
and
adc
push
repnz
or
adc
and
adc
jo
arpl
jge
ja
jg
jge
dec
push
inc
std
jl
jge
sub
inc
sub
push
gs
call
daa
or
and
and
and
aas
das
lcall
xor
jmp
aas
xor
sub
incl
sub
ljmp
and
lcall
and
jmp
and
incl
shrb
popa
fs
pushl
ds
das
decl
or
jmp
xchg
js
mov
jo
mov
push
stos
decl
decl
jnp
xor
ljmp
cmp
cmp
pushl
push
inc
jmp
incl
add
std
sbb
cld
sbb
sbb
and
sbb
popf
mov
js
lcall
cld
pop
addr16
std
xor
xor
decl
inc
call
and
jmp
ss
dec
arpl
pop
ss
lcall
xor
adc
sbb
adc
pop
call
and
ljmp
cmp
sub
or
or
push
pop
dec
decl
pop
push
cmp
jmp
jg
ljmp
pop
ljmp
push
jmp
push
incl
add
ljmp
dec
inc
lcall
pushl
lods
jmp
stos
call
xchg
decl
jl
inc
jno
jmp
dec
cmp
decl
cs
pushl
push
inc
ljmp
inc
sub
or
incl
add
add
sub
lcall
xor
jg
scas
mov
hlt
jmp
stc
icebp
jmp
inc
xor
decb
inc
incl
decl
push
pop
jmp
addr16
decl
and
incl
adc
incl
adc
call
sbb
sbb
lcall
sub
jmp
cs
decl
adc
and
orb
ljmp
pop
jmp
jns
call
push
or
call
sub
pushl
pop
push
decl
jge
jno
lods
jmp
mov
lcall
xchg
arpl
popa
lcall
ja
adc
and
cmp
dec
xor
push
ss
incl
sbb
call
sub
call
fcmovne
fcomi
imul
sarl
mov
cs
aaa
std
dec
push
inc
incl
call
sbb
add
or
or
decl
adc
lcall
sub
lcall
cs
jmp
xor
lcall
sub
ljmp
cmp
pushl
pop
or
xor
call
sbb
test
push
pop
jmp
dec
pushl
pop
cmp
sub
push
push
push
jmp
xor
decl
xchg
inc
jl
ljmp
mov
jmp
xchg
incl
pushw
pop
dec
jge
xchg
call
lcallw
cmp
jmp
aas
sub
das
dec
xor
cmp
pushl
push
cmp
sbb
sbb
add
add
test
pushf
jbe
jl
push
sub
and
clc
out
scas
and
inc
cmp
dec
pop
dec
pushl
inc
sub
or
push
or
jmp
and
or
sbb
sbb
sbb
sbb
or
and
call
sub
ljmp
ds
lcall
xor
ljmp
sub
add
add
push
insl
pop
lcall
dec
jmp
ljmp
push
lcall
sbb
lcall
es
jmp
inc
xor
mov
ljmp
popf
pushl
call
jge
insb
cltd
mov
xor
dec
jmp
jnp
insb
jnp
je
jnp
push
cmp
call
cs
jmp
cmp
pushl
dec
xor
inc
pop
inc
call
push
add
adc
add
pop
pop
dec
dec
mov
pop
dec
clc
add
adc
inc
arpl
dec
das
incl
sbb
add
add
push
sbb
ljmp
xor
jmp
adc
lcall
es
lcall
sub
decl
push
push
call
and
lcall
ss
call
sub
ljmp
aas
xor
and
xor
push
sub
lcall
pop
lcall
dec
jmp
dec
lcall
dec
call
adc
lcall
sbb
jmp
sub
jmp
xor
lcall
cmp
js
xchg
decl
jne
push
nop
xchg
popa
xchg
test
inc
outsl
pop
call
outsl
jp
mov
data16
sub
pushl
dec
xor
decl
inc
call
and
adc
add
add
add
add
xor
push
dec
movb
dec
incb
and
or
or
jmp
xor
add
jmp
and
adc
sub
jmp
das
pop
call
dec
cmp
das
inc
xor
sub
sub
cs
xor
or
adc
push
sub
pushl
dec
dec
lcall
xor
aaa
dec
inc
jmp
jmp
dec
lcall
inc
ljmp
sbb
ud0
sub
sub
es
xor
bound
push
pop
mov
aaa
arpl
jbe
xchg
jl
mov
pop
jge
jp
jns
mov
jb
dec
arpl
aaa
dec
sub
dec
pusha
inc
incl
add
add
add
or
aas
sub
ljmp
scas
sti
push
jp
std
aaa
push
cmp
xor
ljmp
cmp
lcall
sbb
adc
daa
sbb
pop
adc
sbb
push
pushl
ds
inc
xor
sub
sub
push
xor
decl
and
call
sub
lcall
xor
cmp
push
and
lcall
pop
call
inc
call
inc
jmp
push
decl
or
or
sub
ljmp
cs
inc
push
decl
pop
decl
jmpw
jnp
mov
insl
decl
push
lcall
pop
pushl
imul
ss
incl
ss
ds
sub
pop
push
add
add
add
sbb
add
es
xor
inc
jb
sarb
outsl
push
out
dec
outsb
push
cli
or
push
std
xor
and
and
and
and
sub
test
push
pop
dec
incl
inc
pushl
xor
call
sub
decl
push
adc
or
sub
adc
cmp
pop
cmp
and
incl
cmp
dec
dec
xor
addb
sbb
adc
daa
sub
jmp
and
decl
aas
cmp
cmp
xor
jnp
decl
dec
pushl
je
imul
dec
pushl
and
push
arpl
decl
decl
jmp
xor
add
inc
and
das
dec
xor
pop
inc
jp
das
sbb
pop
sub
icebp
inc
pop
inc
cld
daa
xor
sbb
cmp
sub
imul
push
push
decl
dec
decl
dec
jmp
xor
sbb
sbb
or
sub
sbb
cmp
call
sub
push
xor
decl
nop
jno
lahf
cmpsl
xchg
push
pop
inc
ljmp
xor
lcall
pop
adc
and
sbb
cmp
sub
push
dec
cmp
pop
push
inc
pushl
inc
sub
bound
pushl
insb
incl
pop
inc
decl
aas
decl
cmp
push
gs
jmp
sub
imul
add
add
and
pop
and
and
cmp
pop
and
sbb
push
add
sub
and
inc
dec
ss
xor
and
push
pop
cmp
sub
mov
imul
imul
and
sub
add
and
decl
sub
adc
xor
or
sub
push
and
decl
adc
sub
and
call
cwtl
jnp
and
adc
sbb
or
sbb
adc
xor
and
gs
dec
call
xor
cmp
inc
xor
es
daa
pushl
popa
pushl
pop
lcall
inc
lcall
inc
jmp
pop
jmp
dec
call
xor
add
add
adc
add
mov
lods
test
jp
cmc
cmp
dec
pop
pop
notrack
ljmp
pop
incl
jno
ljmp
cmp
add
and
call
sub
push
and
add
pop
incl
adc
decl
adc
pop
jl
imul
xchg
jnp
lcall
call
adc
ljmp
daa
pop
jmp
dec
incl
and
incl
daa
cmp
pop
cmp
sbb
inc
aas
and
xor
adc
dec
dec
sub
jnp
pop
pushl
popa
incl
andb
add
xor
mov
test
insb
dec
cmc
bound
gs
push
pop
inc
call
mov
xor
push
sbb
incl
adc
incl
pop
push
incl
push
incl
or
adc
pop
or
lcall
push
adc
lcall
push
decl
add
sbb
or
and
adc
inc
inc
sub
inc
cmp
ljmp
or
decl
decl
and
pop
dec
sub
push
inc
and
cmp
or
inc
dec
cmp
addr16
pushl
incl
add
or
and
xor
addr16
rcrb
xor
test
jb
push
cld
inc
dec
ss
scas
ret
mov
push
xor
call
sub
pop
sbb
incl
ud2
incl
or
incl
push
push
incl
or
decl
push
pop
incl
push
add
push
push
dec
ljmp
mov
or
pop
and
lcall
push
incl
sub
aaa
cs
ljmp
and
incl
sbb
dec
ss
pop
cmp
and
pop
inc
push
lcall
daa
aaa
sub
inc
decb
jae
incb
add
add
add
and
add
jne
pop
aas
mov
ja
fsubrs
jo
lock
pop
dec
stc
sbb
inc
inc
jmp
aaa
cmp
sbb
call
and
decl
sbb
incl
adc
add
add
add
add
add
adc
or
mov
movsb
decl
ds
cmp
sub
adc
pop
or
dec
cmp
sbb
cmp
or
jmp
push
ljmp
sbb
jmp
and
pop
inc
es
pop
push
ss
mov
xchg
jae
jns
testl
add
pop
and
add
cmp
sbb
push
ss
outsl
push
sahf
gs
leave
sbb
and
cld
adc
decb
and
incl
adc
pop
or
adc
or
adc
or
sbb
incl
or
decl
cmp
lcall
sbb
incl
sbb
dec
xor
decl
pop
lcall
push
ljmp
and
lahf
jae
decl
inc
sbb
pop
dec
sub
xchg
nop
jae
movsb
mov
jo
test
add
sbb
add
push
push
add
cmp
and
xor
mov
add
pop
decb
sbb
call
and
add
or
incl
or
or
adc
or
adc
add
add
add
add
push
push
add
cmp
xor
inc
dec
cmp
es
or
dec
cmp
call
call
pop
ljmp
and
popf
jb
jmp
aaa
or
jb
sub
jg
dec
in
xchg
jae
cmp
or
push
dec
inc
inc
sbb
and
add
sbb
dec
aas
mov
adc
xor
adc
xor
push
es
or
sbb
add
or
add
add
and
and
lcall
and
or
or
add
add
add
sbb
pushl
cmp
incl
sub
incl
pushl
aaa
ljmp
paddd
js
std
test
cli
jbe
sub
andl
mov
push
add
inc
and
or
add
sbb
add
and
and
cmp
dec
jmp
dec
inc
cld
and
and
incl
pop
ud0
sbb
incl
adc
incl
push
push
call
pop
incl
adc
call
sbb
pop
incl
push
add
and
sbb
cmp
and
cmp
adc
dec
sub
test
push
xchg
popa
xor
test
bound
jbe
and
jne
sub
sub
aas
inc
sub
adc
add
add
add
add
cs
or
dec
inc
push
adc
cmp
xor
dec
dec
std
sbb
xor
mov
call
sbb
decl
sbb
decl
pop
decl
sbb
incl
or
incl
inc
decl
push
push
incl
adc
incl
pop
add
add
push
pushl
sub
incl
adc
std
mov
push
sti
mov
mov
jp
sub
push
xor
push
pusha
cmp
and
add
xor
inc
ja
cmp
fildll
pop
pusha
cld
daa
push
push
incb
and
incl
adc
add
and
decl
pop
push
decl
sbb
decl
push
push
call
sbb
add
add
cmp
push
or
add
add
adc
xor
sbb
cmp
pop
cmp
in
lods
cmpl
inc
sbb
push
sub
push
pop
and
push
add
add
inc
add
add
inc
xor
cmp
dec
push
jmp
and
xchg
adc
incl
sbb
decl
push
or
incl
pop
push
decl
sbb
call
and
decl
push
push
decl
push
push
cmp
cmp
add
add
push
adc
incl
add
es
adc
mulb
dec
and
inc
add
add
add
add
add
sbb
or
cmp
pop
pop
stos
xor
jecxz
sub
stc
pop
test
incl
sbb
incl
adc
incl
pop
push
incl
push
decl
sbb
decl
sbb
decl
adc
add
push
lcall
pop
sbb
pop
sbb
add
or
push
and
sbb
dec
dec
xor
cmp
aaa
aaa
and
push
add
add
push
cmp
or
inc
xor
popa
pop
je
jne
mov
mov
cld
or
sbb
or
adc
incl
sbb
decl
sbb
decl
sbb
decl
adc
add
add
add
pop
push
sbb
add
decb
pop
or
sbb
push
fisttpl
sub
xor
add
add
add
add
add
imul
adc
adc
adc
pop
mov
cmp
cld
adc
sbb
incl
or
incl
pop
decl
sbb
incl
or
or
adc
incl
push
pop
decl
sbb
decl
pop
or
negl
adc
mov
cmp
add
add
add
or
add
pop
bound
sub
cmp
aaa
adc
inc
add
add
add
insl
and
pop
imul
xchg
add
or
add
or
add
add
std
cmp
decl
pop
adc
add
push
incl
ud2
incl
or
incl
adc
incl
or
incl
adc
incl
adc
incl
or
or
add
pop
or
add
add
add
push
je
push
inc
pop
arpl
bound
stos
push
dec
sub
sub
add
inc
sbb
push
dec
and
adc
enter
cmc
adc
sbb
adc
pop
incb
or
push
decl
adc
decl
adc
incl
add
incl
invd
incl
or
decl
adc
incl
or
incl
push
or
add
add
add
add
add
add
sub
or
push
and
pop
push
cs
inc
add
push
sub
push
add
add
sub
add
mov
inc
xchg
mov
push
pop
inc
ljmp
inc
mov
es
xchg
sbb
add
sbb
sti
add
pop
incb
or
incl
or
push
incl
push
incl
push
add
or
add
or
or
add
or
add
adc
or
sbb
decl
or
incb
or
notb
adc
pop
fwait
inc
sub
jae
sbb
add
dec
and
sbb
add
add
add
add
pop
sub
mov
insb
fsubrl
pop
out
jge
jo
inc
dec
cmp
aas
dec
xor
push
push
or
add
pop
add
or
or
or
push
call
adc
decl
push
add
or
add
and
adc
xor
sbb
cmp
push
cmp
push
ljmp
pop
push
ljmp
sub
cmp
sbb
call
adc
add
or
add
push
or
add
ud2
add
pop
or
cltd
es
add
sub
sub
inc
sbb
adc
imul
outsb
mov
mov
cmp
lea
inc
es
cmp
daa
decl
das
lcall
inc
jg
popa
ljmp
dec
incl
and
decl
and
cmp
adc
dec
inc
and
xor
or
dec
inc
and
push
inc
pop
ljmp
incl
sbb
xor
or
std
cs
cld
sub
and
push
jl
es
adc
add
add
inc
and
cmovle
and
jo
imul
int
ret
cmp
es
jno
pop
lcall
mov
cmp
lea
arpl
push
dec
xor
aaa
xor
cmp
sbb
dec
dec
pushl
dec
cmp
adc
cmp
ud0
das
or
decl
mov
xchg
lcall
es
je
aas
sti
push
inc
and
push
inc
and
dec
inc
and
dec
cmp
add
add
add
inc
inc
add
cmp
sub
push
pop
inc
loopne
inc
xor
sub
sbb
inc
inc
xor
xor
and
sub
pushl
xor
adc
es
ud0
das
sbb
xor
sbb
push
push
add
push
push
cmp
inc
inc
sub
cmp
and
incl
push
incl
sbb
jb
lcall
push
and
jnp
ds
mov
out
imul
dec
sub
daa
add
cmp
add
add
add
add
add
pop
xor
inc
inc
daa
bound
dec
leave
and
clc
adc
pop
incb
add
pop
adc
add
adc
decl
push
add
decl
adc
call
sbb
ljmp
sub
lcall
sbb
lcall
sbb
jmp
and
ljmp
sub
inc
xor
ljmp
sub
imul
imulb
das
lds
or
aaa
push
and
add
add
add
add
dec
sub
sbb
aaa
popa
pusha
int3
cmp
stc
cmp
pop
sub
decl
sub
incl
invd
incl
adc
incl
push
or
decl
push
decl
sbb
push
and
call
and
incl
or
decl
add
sbb
or
adc
add
and
add
push
inc
and
push
dec
sub
divl
cmp
pop
push
and
sldt
add
sub
add
jp
test
jge
loopne
jno
sti
dec
jnp
sub
jmp
inc
inc
decl
and
incl
ss
cs
inc
ljmp
dec
inc
ljmp
dec
inc
cmp
ljmp
inc
xor
pop
cs
or
incl
or
lcall
sbb
das
ud0
adc
adc
add
fadds
or
push
xor
adc
add
add
daa
adc
popa
mov
fldt
into
cld
dec
test
and
cmp
adc
ljmp
push
dec
jmp
cmp
and
ljmp
inc
pushl
dec
cmp
aaa
push
cmp
cmp
daa
xor
add
add
or
sbb
or
adc
push
sbb
imulb
xor
push
cs
daa
daa
adc
push
jl
imul
dec
sbbb
sub
jmp
push
pop
ljmp
pop
pop
jmp
push
push
ljmp
dec
push
jmp
inc
inc
pushl
dec
inc
pushl
push
cmp
sub
jmp
xor
incl
or
decl
sbb
decl
pop
or
push
adc
add
add
add
sbb
add
dec
add
pop
aaa
and
push
push
js
push
insl
lods
aam
dec
mov
pushl
outsb
js
sub
arpl
cmp
ljmp
pop
jmp
dec
push
jmp
inc
inc
pushl
push
inc
pushl
push
inc
ljmp
das
jmp
aaa
and
incl
add
call
push
push
incb
push
add
or
add
and
add
xor
add
xor
or
pop
jbe
ja
mov
loope
scas
iret
cld
dec
jg
cmp
pushl
insb
jbe
xor
cmp
imul
sub
ljmp
dec
inc
cmp
aas
pop
inc
ljmp
dec
xor
and
and
incl
adc
call
and
ljmp
xor
call
sbb
adc
or
sbb
xlat
sub
ja
or
add
add
add
add
add
sub
cmp
push
movsl
cltd
mov
mov
inc
outsb
jl
xor
pushl
pushl
push
pop
cmp
ljmp
pop
pop
jmp
push
push
ljmp
dec
dec
pushl
dec
inc
incl
decl
dec
cmp
cmp
xor
ljmp
sub
add
xor
jmp
daa
adc
or
add
push
adc
call
inc
sub
cmp
add
inc
add
add
cs
aaa
pop
pop
or
test
dec
insl
push
cmp
bound
ss
push
pushl
push
push
jmp
dec
dec
jmp
dec
inc
jmp
inc
cmp
decl
push
lcall
pop
decl
cmp
call
add
sub
sbb
xor
pop
sbb
add
push
push
add
dec
cmp
pop
dec
sub
add
inc
daa
or
inc
cmp
insl
sub
sbb
push
fs
call
add
adc
pop
sub
sub
adc
daa
lcall
cmp
call
sub
pop
ljmp
dec
cmp
and
sbb
or
push
incl
or
decl
or
cmp
and
std
cmp
adc
mov
sbb
sub
add
inc
add
add
xor
pop
cmp
dec
fldt
ss
sbb
stc
and
sbb
das
cmp
push
sbb
sbb
adc
sub
ljmp
cmp
xor
sub
and
lcall
adc
pop
jl
pop
std
pop
dec
xor
dec
inc
and
push
inc
and
push
cmp
adc
add
add
inc
add
add
and
adc
inc
inc
and
cmp
sbb
sub
or
sbb
add
and
push
cli
sbb
add
sbb
add
and
pushl
daa
or
pushl
pop
add
aas
sub
jae
xor
sbbl
mov
pop
aas
push
inc
dec
adc
push
inc
add
dec
aaa
add
jae
xor
gs
movsb
mov
into
test
mov
lods
mov
fld
popf
jmp
sahf
jmp
jnp
jge
pushl
adc
fisubrl
pop
int3
cltd
outsb
aas
jno
or
pop
and
push
add
add
add
add
xor
or
adc
pop
xor
inc
insl
inc
sbb
test
jmp
stos
test
xchg
push
dec
mov
fs
xchg
bound
fwait
fs
enter
lret
xchg
pop
mov
push
sub
daa
add
add
add
add
xor
add
add
and
test
add
add
push
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
mov
add
add
xor
cmp
xor
xor
xor
xor
inc
add
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
sub
dec
or
pop
cs
mov
push
pop
xchg
aad
jg
sub
add
add
add
push
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
adc
mov
mov
jp
pop
add
xor
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
pop
dec
add
addr16
bound
and
testl
sub
imul
add
add
add
outsl
add
insl
add
outsb
add
add
add
or
pop
jg
sub
in
mov
mov
jg
push
sub
push
add
cmp
das
add
add
ja
ja
add
jns
jne
jns
popa
add
add
outsl
add
sub
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
loopne
das
add
fs
add
jb
gs
xor
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
arpl
add
arpl
add
fs
add
fs
add
add
add
dec
fs
add
add
jmp
mov
add
pusha
call
pop
sub
mov
add
mov
mov
sub
push
push
mov
lods
lods
add
mov
push
mov
push
push
push
call
pop
pop
mov
push
push
push
push
push
push
mov
lods
lods
add
push
lods
add
call
push
push
lods
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
lods
push
lods
add
push
push
push
mov
call
pop
add
mov
lods
push
lods
push
lods
push
lods
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
pop
test
je
push
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
dec
popf
mov
sub
mov
sbb
call
mov
sub
adc
inc
pop
lret
movsl
push
ret
push
pop
cmp
lret
insl
fsubrl
insl
repnz
inc
xchg
xchg
rol
xor
push
dec
mov
or
inc
fcomip
aam
in
sbbl
fucom
or
sub
inc
popf
mov
fwait
test
inc
push
out
ret
lret
aam
or
and
mov
inc
cld
pinsrw
cs
shll
inc
mov
mov
stc
clc
fsubrp
jae
call
icebp
in
js
inc
das
test
xchg
jae
cmp
cltd
rcr
adc
or
or
inc
sub
ds
cmp
dec
xor
cltd
mov
or
fidivrs
push
in
dec
in
lahf
xchg
and
div
in
inc
mov
call
xor
mov
sbb
xlat
sub
insb
or
xor
push
adc
inc
cltd
subl
xchg
subl
ret
sbb
pushf
loopne
lret
imul
cmpsl
dec
seta
xlat
clc
addr16
or
fwait
jae
in
outsl
ficoms
xor
inc
ja
mov
fucomp
lret
add
fldt
pop
daa
subb
pop
cmc
mov
shll
mov
jecxz
and
adc
rclb
mov
icebp
int
orb
jae
rclb
inc
pop
test
fmul
sub
sbb
repnz
stos
arpl
dec
fcmovb
cmc
and
cmp
mov
mov
mov
outsl
mov
dec
lcall
or
lods
cmp
jp
push
cmp
sub
or
idivl
fsts
stos
xchg
hlt
inc
andl
push
mov
inc
scas
aad
and
pop
insb
mov
inc
mov
xor
mov
imul
adc
mov
repz
jo
ret
jmp
aad
xlat
push
imul
test
and
or
jnp
lahf
repz
in
dec
mov
lods
sbb
repz
sbb
and
in
push
mov
and
incl
pop
cmp
dec
pop
inc
ror
sti
fcmove
jge
jo
loopne
fisttps
daa
jmp
cli
pop
mov
dec
leave
and
mov
and
xchg
and
mov
push
pop
mov
pop
jle
mov
dec
cwtl
fidivs
sarl
icebp
aam
xacquire
sub
or
xchg
add
jle
test
jle
adc
aam
cmp
dec
jecxz
in
adc
ja
cld
xlat
inc
in
jecxz
adc
xchg
insl
mov
xchg
ljmp
mov
push
inc
nop
or
fnstenv
loop
adc
gs
xor
cmp
icebp
pop
xchg
out
in
movsb
jbe
das
inc
iret
movsbl
lods
test
mov
andb
aad
lods
sbb
add
sub
mov
rcll
push
cmc
push
jo
mov
sub
ja
xlat
pop
xchg
push
js
mov
bound
nop
outsb
push
xchg
clc
jmp
roll
daa
in
mov
ret
cmp
xlat
inc
or
ss
lods
enter
in
rclb
lds
mov
push
and
rol
mov
push
push
add
dec
xchg
stos
jp
or
inc
dec
cwtl
repz
outsb
sub
hlt
and
dec
ret
xor
cmpsb
inc
mov
jnp
scas
insl
lds
cmp
not
divl
movsb
inc
insl
mov
cs
mov
adc
mov
daa
push
sub
cmpl
jl
cmc
aam
sub
into
or
jb
add
out
in
xchg
jnp
aaa
push
push
insb
pop
jbe
pushf
cld
lret
dec
leave
inc
push
or
cltd
dec
lcall
xchg
mov
jecxz
mov
repnz
sbb
cmp
push
jb
sbb
rolb
sbb
adc
das
or
ret
sti
sub
sbb
inc
dec
and
xchg
in
lret
ret
xchg
mov
leave
push
fisttpll
in
or
ljmp
call
lahf
cmp
ja
inc
cmp
mov
xchg
push
lea
andb
mov
cmpsb
jl
roll
addr16
shlb
dec
xchg
xor
cld
or
xorl
mov
adc
pop
outsl
sub
add
and
cmp
mov
pop
aas
test
sbb
cmp
jns
data16
movsl
stos
push
dec
push
mov
xor
push
push
sbb
push
mov
mov
iret
imul
jmp
and
fnsave
xor
and
es
je
je
mov
andl
push
outsb
cmp
xor
cli
xchg
push
xchg
adc
push
sti
xchg
lods
loope
lods
cltd
iret
jge
xchg
scas
shlb
inc
jne
shlb
jg
out
divb
mov
sbb
jnp
imul
not
pop
pop
xchg
pop
lods
push
mov
daa
xlat
popa
xor
scas
or
icebp
jns
loopne
fmull
mov
cld
mov
fidivl
push
dec
cld
sub
into
lahf
aas
fsubs
out
xchg
inc
popl
pop
pop
mov
dec
xor
inc
mov
arpl
or
imul
icebp
outsb
cs
and
rcll
sti
xchg
and
push
nop
jne
in
stc
pop
mov
pop
bound
add
adcl
faddp
fisttpl
in
push
mov
in
cli
pop
adc
mov
ja
xor
xor
adc
adcl
mov
adc
jp
rclb
out
call
and
push
sbb
xchg
cmp
fmuls
movsb
xor
aas
loop
int
fiadds
lea
or
sbb
or
jp
hlt
mov
jle
add
pusha
and
pop
pop
arpl
xor
pushf
lock
stos
rcrb
jo
popf
pop
movsl
mov
adc
cltd
jp
ret
fsub
aaa
insl
mov
mov
push
pop
push
or
push
xchg
cmc
sbb
lock
addb
pop
pop
add
cmp
cmp
ljmp
loop
jp
mov
lcall
jp
jl
mov
sbb
push
aam
in
pop
xchg
faddl
stos
adc
push
stos
sbb
inc
sahf
sub
and
cmp
xchg
pop
push
fst
into
push
sti
mov
dec
mov
fcoml
push
insb
dec
pusha
push
push
jno
or
cmp
pop
sub
mov
or
add
jle
xor
push
out
insb
adc
aaa
and
or
sbb
loope
push
jge
insb
inc
and
call
rclb
inc
mov
div
inc
jae
pop
test
pop
jne
pop
or
sbb
sbb
test
pop
xchg
testl
inc
jl
mov
adc
pop
sub
xchg
xchg
lcall
movsl
jl
push
addr16
mov
cmp
xor
jp
aas
jle
repz
jbe
inc
loopne
inc
repz
mov
jle
jg
or
or
xor
lods
stos
add
addr16
pop
mov
adc
inc
mov
scas
or
adc
in
sub
dec
rep
sahf
and
rorb
mov
xor
cmp
std
mov
loop
cmp
ror
int3
cld
xor
sbb
negl
jg
cmpsl
dec
ret
sbb
lock
aam
push
notl
repnz
mov
fldcw
jge
iret
jae
imull
mov
out
in
cmpsl
sub
movsb
cmp
sub
aas
dec
loope
xchg
add
out
xchg
jno,pn
int
lods
iret
mov
or
jnp
mov
orl
pop
cld
jns
out
and
dec
jne
push
addr16
mov
dec
mov
and
jle
dec
out
sbbl
icebp
xor
xchg
cmc
rsm
jae
in
push
je
jne
pushf
dec
das
xchg
imull
push
push
add
imull
rcl
mov
test
cmp
and
das
xlat
nop
cwtl
sub
loop
adc
cmp
pushf
aas
test
dec
dec
subl
jecxz
lahf
dec
mov
jmp
dec
mov
dec
aaa
test
jle
xor
push
fptan
adc
jae
jge
sbb
fwait
aam
pusha
repnz
lret
xchg
cmpl
xchg
sbb
xor
sbb
lret
xchg
leave
outsb
in
jle
xor
lret
je
add
fcompl
mov
int3
ret
and
jp
rolb
sub
push
push
inc
cmc
inc
xchg
outsl
xchg
mov
out
nop
jo
pop
pop
sub
adc
sbb
pop
loop
inc
repnz
repnz
aad
loopne
jle
adc
lret
cwtl
iret
jp
sub
cmp
jmp
js
add
dec
jmp
jg
inc
addr16
sti
jge
mov
mulb
arpl
imul
insb
xor
mov
lcall
dec
mov
jo
imul
jne
pcmpgtw
cs
outsb
sbb
pcmpgtw
adc
popf
or
je
xchg
push
lret
mov
push
inc
outsl
add
xchg
adc
push
or
sarb
adc
dec
and
push
push
mov
mov
cmp
pop
mov
mov
or
and
sarl
call
mulb
imul
cmpsl
push
cmp
add
cld
iret
jmp
fstps
mov
or
pop
mov
das
cltd
push
test
sbb
adc
sbb
jo
mov
and
ds
sbb
pop
xchg
jne
jae
addr16
add
shll
repnz
aas
and
dec
imul
xchg
testl
test
push
push
dec
and
cld
xor
or
jl
insb
xor
xor
lret
xchg
add
push
outsb
xchg
test
xchg
add
mov
sahf
push
xor
fs
mov
mov
jp
test
and
push
cmpsb
pop
dec
movsb
dec
rcrl
ljmp
sbb
xchg
loop
sti
jmp
in
jns
push
push
pop
mov
imulb
popf
adc
inc
lods
xor
xor
mov
stos
push
pop
iret
cmp
insb
jl
and
in
cmc
cmpsl
and
clc
and
and
les
mov
add
imul
aas
pop
jno
movsb
push
movsb
xor
gs
daa
jnp
vxorps
pop
push
divl
jno
iret
call
or
popa
cmp
xor
stc
sarl
fldt
arpl
mov
cmp
push
pop
gs
shrl
in
push
enter
rol
pop
clc
add
or
mov
jmp
jae
sbb
negl
xor
ret
push
mov
xor
dec
lret
dec
xchg
lea
jnp
data16
mov
repnz
sbb
bound
inc
stos
inc
sub
push
je
imul
add
jg
pop
sbb
fcmovnb
or
gs
mov
inc
pop
rorl
sarl
repnz
outsb
pop
sar
xchg
aam
mov
xchg
lock
ffree
ret
mov
gs
inc
imul
movsl
adc
jno
incb
xor
xchg
xchg
ret
xchg
cli
push
and
xchg
dec
mov
test
in
in
mov
mov
xchg
rcr
ret
jbe
test
cmpb
nopl
mov
lcall
or
enter
pop
imul
inc
leave
pop
arpl
inc
loope
in
and
mov
scas
xchg
insl
jg
jp
inc
pop
sub
inc
fmul
xchg
xchg
mov
jg
stos
std
lock
sub
fimuls
jb
imull
push
fwait
inc
jae
cmc
inc
and
rorl
stos
jne
and
inc
enter
out
pop
lods
fcompl
inc
es
xchg
push
out
in
maskmovq
divl
mov
or
sarb
mov
clc
lret
out
xchg
jl
test
movsl
push
pop
out
sbb
aad
xchg
mov
pop
xor
out
fidivs
pusha
inc
pushf
ret
mov
aaa
ret
adc
adc
cmc
xor
cltd
pop
push
loopne
fistpll
sahf
iretw
xchg
cmpsl
pop
add
jl
std
adc
je
daa
cmp
add
mov
pop
idiv
ret
or
out
inc
add
cmp
mov
jne
sti
jp
dec
add
ficoml
xchg
loop
sbb
test
dec
mov
mov
xlat
or
mov
std
lret
gs
insl
dec
ret
mov
in
shl
sub
jecxz
mov
jbe
xchg
adc
shlb
xchg
stc
cmp
mov
in
leave
mov
js
je
mov
mov
cltd
int
sub
cmp
lret
add
push
pop
rclb
add
ja
orl
and
xchg
push
jmp
dec
sahf
cmpsl
mov
mov
ss
sub
repnz
mov
ficompl
ljmp
in
inc
jb
dec
popf
fucom
sarl
testl
pop
gs
aad
call
int3
adc
scas
gs
or
bound
push
cld
mov
push
mov
adcl
pop
int3
repnz
out
sbb
insl
addr16
aaa
fdivs
sbb
mov
insl
out
sbb
or
sti
scas
cmp
aaa
pop
cmp
rorl
imull
dec
shll
sbb
jge
loope
pushf
ja
sahf
sbb
daa
push
popa
push
xchg
lods
pop
filds
pusha
adcb
mov
and
decl
inc
mov
mov
addr16
shll
cmp
aad
arpl
pop
leave
cmp
or
mov
dec
ja
mov
ror
ss
mov
adc
test
jge
ss
xchg
jl
inc
insb
jle
lock
das
popl
push
loope
jmp
in
pop
adc
sahf
and
jae
inc
xlat
out
push
sbb
test
sub
dec
and
lret
fnsave
dec
xor
mov
xchg
xor
inc
or
gs
jbe
adc
xchg
xor
stc
jno
test
aas
lea
dec
mov
mov
xor
repz
jae
mov
xchg
mov
es
push
call
xchg
mov
and
sbb
sbb
xchg
mov
ror
sarl
jmp
xor
add
add
dec
xchg
xlat
mov
pop
sbb
mov
bound
les
mov
pop
je
in
pop
stc
xchg
inc
dec
and
clc
inc
mov
movsb
pop
xchg
inc
mov
xchg
sub
jge
xchg
and
push
call
push
pop
fisttpll
outsl
jo
jmp
shlb
mov
xchg
or
lret
jl
xor
dec
or
add
xchg
and
repz
jb
jb
mov
fcmovu
sub
push
fimuls
mulb
ljmp
ja
dec
sub
pop
rorb
sbb
test
mov
sbb
add
adc
jp
hlt
inc
adc
cmc
hlt
lcall
aad
out
loop
mov
push
inc
cld
ljmp
adc
xchg
daa
imul
arpl
icebp
imul
sahf
xchg
adc
test
or
pop
cmpsb
imul
call
pop
incl
xchg
jge
xor
jge
insb
cmp
add
ret
popf
or
sar
imul
clc
pop
mov
add
mov
mov
repnz
mov
cmp
daa
icebp
xor
xlat
aas
push
dec
or
adc
pop
outsl
icebp
push
jo
adc
jb
stos
push
adc
cmp
mov
sub
adc
popa
pop
xchg
add
dec
mov
sub
cmp
dec
lock
sbb
sub
daa
imul
pop
fwait
mov
ffreep
out
scas
mov
inc
inc
outsb
mov
push
xchg
lea
push
cmp
add
repz
shrb
adc
push
mov
dec
pop
xchg
pop
cmpb
push
xchg
jle
js
jmp
sbbl
push
dec
in
cmp
add
enter
xchg
jecxz
jmp
pop
pop
dec
sub
pop
push
aaa
xlat
mov
out
dec
loope
out
ret
cmc
inc
das
cmp
mov
mov
cli
cmp
test
lds
mov
or
jae
sahf
cld
vmaxpd
cmp
loopne
movsb
cmc
mov
gs
in
in
lea
push
xchg
or
movsb
arpl
xchg
outsl
cmp
rcrl
inc
pop
and
int3
mov
pop
in
add
enter
lcall
shrl
mov
sub
test
adc
xchg
mov
dec
pop
mov
cs
sarl
inc
daa
pop
xor
gs
xor
mov
add
and
and
iret
fsts
xchg
pop
ja
xor
hlt
mov
shl
aad
mov
loopne
cmp
fcoml
mov
fs
lods
add
das
mov
call
decl
pop
stos
subl
lea
rolb
mov
pop
xchg
mov
outsb
rcrb
mov
icebp
sti
sub
jnp
fcomps
repnz
inc
ljmp
xor
ret
adc
sti
lock
sub
in
mov
jecxz
popf
outsl
add
mov
lea
sbb
loope
ficompl
cld
lock
jmp
mov
pusha
adc
cmp
nop
in
lret
sub
mov
jno
xor
add
add
pop
sti
scas
loopne
repz
pusha
fildll
in
das
lea
lret
or
cmp
push
bswap
sub
jecxz
stos
or
out
dec
pop
mov
popf
sahf
fnop
fwait
push
leave
inc
xor
jnp
insb
pop
fisttpl
push
xlat
mov
setge
cmp
dec
inc
mov
sub
fwait
nop
jl
and
in
imul
pop
fs
and
shll
mov
jg
dec
fs
mov
das
js
aaa
fdivrs
test
mov
xchg
out
fldl
xorl
bound
lock
add
xlat
or
xor
adc
sub
add
mov
int
enter
xor
add
outsl
mov
and
cmp
mov
mov
mov
andb
or
in
sub
sbb
and
fnsetpm(287
or
and
mov
sbb
mov
pop
lcall
ficomps
aam
add
jns
and
dec
neg
aaa
lea
adc
inc
jns
into
or
sti
in
jno
add
jmp
and
pop
movsb
xchg
cmp
add
mov
icebp
ljmp
mov
or
push
and
mov
jae
mull
repnz
ss
cmp
or
mov
cmp
inc
imul
mov
sar
outsl
arpl
ja
fdivrp
scas
and
dec
mov
daa
test
xchg
in
sbb
mov
and
sbb
sbb
xlat
xchg
jae
pop
repnz
jmp
repz
shrl
jns
imul
mov
pop
jmp
mov
insl
stos
addb
mov
aas
and
xchg
xchg
int3
cmp
lods
xchg
push
xchg
pop
mov
cmpl
adc
pop
outsb
loope
jns
pusha
dec
fisubl
bound
or
fwait
imul
pop
test
fwait
dec
inc
or
adc
mov
xchg
mov
xor
ret
push
jo
sarb
insl
xchg
loop
repnz
cmp
pop
mov
loop
movsb
les
jmp
test
adc
jg
mov
lods
stc
xchg
inc
repnz
nop
int
jns
dec
in
ljmp
dec
int3
pushf
jmp
cmp
push
jecxz
jle
lds
jg
aad
mov
popa
test
cwtl
push
mov
cs
jnp
mov
add
lods
mov
xor
xor
sub
das
pop
inc
addr16
sub
rcr
in
int
xor
pop
movsb
push
fsubrs
push
add
sub
scas
xchg
into
add
cmp
mov
or
stc
in
dec
lahf
cmp
lret
pop
in
mov
insb
outsb
mov
cmp
xchg
mov
sub
add
ljmp
jl
xor
adc
es
mov
lcall
xchg
sbb
dec
fiadds
cmp
sbb
mov
or
mov
cld
xchg
in
cli
inc
les
das
repnz
mov
push
int
inc
sbb
adc
in
stc
loop
or
lahf
push
insl
mov
fs
add
pop
test
jmp
mov
das
in
pop
and
outsl
jl
js
mov
inc
in
inc
or
jecxz
test
push
mov
aad
pop
adc
leave
call
cmp
loop
pop
and
mov
push
ds
lods
sub
nop
jo
jnp
fwait
and
out
dec
add
enter
xor
je
pop
jecxz
repnz
xchg
pop
push
dec
fldl
outsl
test
scas
enter
xchg
out
addr16
mov
mov
test
out
jne
add
jge
aad
fnstcw
add
daa
insl
mov
add
pop
sub
lret
or
mov
pushf
add
dec
popa
stos
adc
mov
cmpsl
test
jmp
sub
not
sbb
or
dec
or
cmp
cld
fmul
rorb
mov
mov
add
cmc
pop
out
mov
or
xchg
mov
inc
pop
jecxz
xor
outsb
sub
pop
sahf
popf
inc
pop
in
xchg
test
inc
sub
adc
dec
subb
mov
loop
popl
jg
mov
mov
push
sub
cmp
div
xchg
and
jae
clc
jmp
mov
or
popa
cmp
stos
hlt
jns
sti
inc
in
xor
ss
push
fchs
mov
fcmovbe
imul
sub
cld
and
aas
jmp
scas
clc
jno
pop
iret
pop
pop
mov
rclb
xlat
addb
mov
pop
mull
or
cmp
mov
mov
lcall
popf
outsl
cmp
nop
enter
enter
mov
adc
in
mov
mov
rolb
push
push
inc
outsl
gs
jae
xchg
push
sahf
and
inc
sub
cmp
and
test
jg
mov
lret
mov
repz
ss
xlat
out
cltd
add
jmp
cld
outsb
inc
sti
xchg
inc
out
pop
rolb
dec
push
leave
or
adc
sahf
stos
push
out
mov
cmp
or
insl
inc
not
movsb
movsl
call
pop
lds
in
cli
push
imul
inc
movsb
lods
notl
mov
and
sub
mov
inc
push
mov
inc
mov
shrl
in
jnp
outsb
jbe
dec
xchg
pop
xchg
jl
mov
mov
jmp
aas
sbb
xor
xor
inc
sub
ja
fisttps
sbb
jge
adc
xchg
dec
sbbb
or
xchg
pop
adcl
rcll
repnz
xchg
mov
jns
mov
xor
cmp
and
jmp
stos
outsb
sub
subb
push
or
filds
inc
jb
lods
cmpsl
cwtl
xchg
xor
sub
and
cli
fldl
test
mov
push
cmp
imul
adc
pop
out
in
in
push
orl
dec
pushf
sarl
nop
xchg
cmpsb
push
and
push
cld
repz
cld
sbb
cmp
std
dec
add
call
arpl
stc
add
jne
fists
pusha
xchg
insb
clc
movsb
inc
jns
mov
test
jl
mov
shr
fstps
dec
xchg
shrl
dec
sub
inc
pop
sbb
xlat
cmp
sbb
mov
stos
rolb
shl
rcr
lods
inc
repz
adc
xrelease
xchg
popa
ss
pop
stos
loop
jb
psrad
mov
mov
dec
mov
inc
inc
adc
lods
ret
filds
jb
pusha
and
push
ds
cs
mov
jbe
pusha
pop
pop
inc
sti
mov
cmc
fsubrs
movsl
mov
xchg
xchg
cmp
ss
testb
aam
or
aas
xor
sbb
int3
repz
pop
adc
adc
lahf
jp
aad
cmp
stos
out
int
mov
aad
and
mov
in
popa
fstl
jo
inc
mov
mov
push
push
jg
mov
xchg
and
cli
mov
lret
push
ljmp
or
test
xor
lods
pop
sub
jg
and
femms
lods
aas
imul
xchg
push
or
hlt
pop
mov
sahf
movsb
sbb
cmpsb
xchg
push
cmpsl
daa
or
cmp
dec
push
mov
test
dec
je
mov
leave
mov
jge
sub
scas
mov
lret
add
xchg
popa
push
bound
js
inc
fistl
push
add
arpl
and
dec
mov
sbb
sub
mov
loop
ficompl
rcrl
scas
sub
pop
in
mov
or
pop
sub
pop
jne
insl
outsb
sbb
mov
adc
add
pop
loope
jbe
jbe
lds
push
cld
and
and
adc
pop
roll
jecxz
mov
lods
jl
jbe
inc
popa
in
sbb
sub
xor
pop
or
dec
fiaddl
not
push
dec
dec
mov
and
xor
mov
push
fdivrp
data16
decb
or
xorb
add
aaa
imul
xor
jp
jp
xlat
add
adc
stos
adc
xchg
addl
add
jmp
rclb
stc
and
test
adc
xchg
les
push
ja
mov
add
std
int
scas
jl
stos
add
cld
shrl
insb
stc
mulb
xchg
aaa
inc
rcr
cltd
lret
sub
mov
push
sub
or
clc
jb
movsl
jno
mov
in
xchg
jae
lods
sbb
popa
push
imulb
pop
mov
iret
jecxz
xchg
mov
pop
adc
inc
mov
rcll
cltd
inc
push
rcrl
inc
inc
pop
int3
outsl
mov
sub
cld
clc
cs
sarl
mov
ds
jb
inc
movsl
xor
out
cmc
sub
divb
shrb
lret
int
stos
pop
in
push
mov
test
or
push
sub
push
je
loope
insb
mov
pop
sti
mov
test
xlat
add
pavgw
out
dec
inc
lret
push
inc
test
jecxz
xor
movsb
push
test
xchg
mov
test
in
adc
jns
fbstp
sub
dec
iret
push
testb
int
lret
mov
pop
shrb
dec
lods
cmp
cs
test
loop
lea
sbb
in
leave
sub
sar
fcoml
lahf
add
das
cs
mov
cmp
mov
repnz
test
push
stc
push
push
leave
rorl
jne
xchg
add
pop
add
xchg
sub
scas
ja
ret
ja
add
sbb
or
mov
mov
je
or
mov
inc
stos
lods
sahf
mov
into
les
inc
or
mov
cmp
push
xchg
jmp
push
sti
ret
lods
mov
sub
in
mov
mov
pop
sub
pop
imul
jle
ror
fbstp
dec
rcrb
pop
shll
inc
stc
cltd
iret
arpl
adc
das
fcoml
ja
test
and
out
dec
lret
add
push
pop
cmp
scas
add
decb
fwait
std
movsl
sbb
dec
jnp,pt
pop
mov
pop
push
jecxz
sub
pop
add
adc
cli
push
fldl
outsl
add
add
test
or
cltd
stos
xchg
mov
fisubs
imul
and
leave
dec
mov
test
int
mov
mov
xor
fidivrl
mov
or
call
and
stos
jo
rorl
push
mov
mov
push
pushf
xor
xchg
cmpb
pop
fldt
stos
or
cmpsb
pushf
shrb
add
fisttpll
jns
or
inc
and
fdivl
fwait
pop
pop
mov
sub
pop
mov
aam
in
ja
gs
out
mov
mov
iret
rcrl
stos
mov
pop
dec
pop
in
sbb
clc
and
push
sub
repz
cmp
insl
call
lea
roll
jmp
fnstsw
out
int3
fnsave
pop
jmp
ret
loop
dec
out
inc
test
mov
lret
xchg
addl
mov
pusha
je
scas
fmull
push
adc
filds
jle
stc
pop
pop
js
mov
jns
rcll
mov
jns
imul
in
leave
push
ret
lods
jne
mov
insl
lret
sub
rcrb
push
pushf
stc
nop
lcall
je
hlt
nop
jg
inc
rcl
dec
jle
cs
pusha
and
in
subl
pop
push
mov
pop
aas
loop
sbb
xor
and
lret
mov
jmp
pop
fsubs
mov
inc
test
aad
inc
das
jg
insl
in
push
or
lea
or
aad
or
and
mov
clc
rorb
enter
stos
inc
lahf
ret
xchg
addb
jle
lods
xor
daa
mov
movsl
popf
xchg
push
mov
xchg
or
push
aad
lods
pop
pusha
pop
loope
pop
dec
fidivrs
cmp
imul
mov
add
mov
adc
pop
push
add
in
adc
insb
sarb
push
lcall
loope
push
fidivrs
mov
sub
inc
mov
jl
out
inc
cmp
inc
lods
mov
dec
cli
pop
repz
adc
enter
lock
jbe
lea
out
xor
mov
jno
int
fsubrl
and
adc
pop
cmp
xchg
xor
add
data16
cld
loope
lahf
pop
lcall
out
mov
inc
xlat
mov
ja
push
in
loop
fwait
push
decb
out
pop
frstor
xor
xchg
xor
in
add
jl
or
gs
sbb
fnstcw
cmpsl
and
int3
test
mov
insl
cmp
jbe
lahf
repnz
and
outsb
inc
rorb
mov
xlat
dec
or
aas
pop
pop
xchg
into
data16
sbb
imul
mov
imul
xchg
mov
das
pop
mov
xchg
jge
pop
adc
dec
incb
sahf
sbb
sub
and
mov
jae
loop
clc
inc
gs
and
das
push
mov
int3
je
and
sub
add
test
push
bound
sub
sub
sub
outsb
rcrl
pop
xchg
outsl
mov
pop
mov
and
loopne
cmp
push
jo
and
call
ficomps
dec
mov
dec
popa
inc
popa
pop
xchg
aam
bound
int3
add
and
outsl
fs
inc
mov
aaa
scas
fcompl
pop
cltd
mov
xchg
jno
cmp
pop
and
cltd
ficoml
imul
out
fdivs
mov
push
stos
shll
inc
test
scas
push
addr16
dec
js
les
adc
jbe
jb
sub
daa
push
jge
scas
adc
scas
lea
mov
iret
jle
scas
push
mov
add
subl
icebp
inc
sbb
test
loope
jne
dec
into
pop
aam
xorl
es
lods
and
popf
inc
sub
push
notb
cmp
add
int
cmc
add
dec
adc
adc
mov
fistl
cmp
dec
shlb
sbb
sub
xlat
or
pop
push
notb
push
jne
mov
xchg
call
sub
loop
repnz
ds
cmp
ret
dec
ja
pop
xchg
mov
rorb
xor
pop
ja
stos
pushf
inc
insb
or
push
inc
aas
adc
lods
mov
xchg
dec
inc
in
add
stc
inc
fcoml
scas
sbb
jbe
adc
into
sarl
xor
test
sahf
xchg
jae
or
aaa
mov
cmp
popa
and
stos
inc
mull
sbb
mov
scas
insb
int3
cmp
call
mov
xor
sbbl
bound
loopne
outsb
dec
cmp
ds
mov
sbbl
insl
js
cmpsl
xor
fldt
sub
sub
test
sbbl
xchg
xor
lret
pop
test
bswap
hlt
push
fdivrl
sbb
aas
rolb
sub
jecxz
idiv
shr
loope
pop
mov
mov
pop
sbb
xchg
arpl
xorl
je
or
add
leave
cld
pop
sub
push
xchg
outsl
addb
out
push
call
inc
and
roll
xchg
cmp
inc
push
jns
sti
jmp
in
rcrl
adc
jl
mov
ljmp
dec
call
mov
add
xor
into
push
inc
enter
jne
push
push
jp
lods
enter
les
push
adc
xchg
ja
loope
sarl
testl
rcr
mov
aas
rolb
ds
mov
and
rcrb
jbe
dec
xchg
xor
adc
or
dec
roll
cmp
imul
movsb
lods
push
subl
push
xchg
dec
std
pushf
mov
inc
push
int
xchg
mov
mov
sbb
jb
faddl
mov
push
cmc
lods
ss
mov
sbb
or
fldcw
out
fists
xor
mov
adc
inc
ret
testb
inc
mov
mov
inc
repz
mov
mov
jmp
into
aas
fmuls
add
xchg
fdiv
push
in
and
test
sub
lock
addr16
lods
cmpsb
scas
lcall
inc
mov
dec
test
push
imul
pop
cmp
cmp
fs
push
scas
adc
jns
xchg
push
mov
pop
cmp
and
lods
or
add
std
les
sub
ljmp
mov
shl
inc
mov
jo
jmp
sbb
shlb
outsl
mov
in
int
pop
dec
xorb
adc
mov
sub
jne
mov
or
jmp
enter
push
gs
loope
sbb
mov
xor
xchg
fwait
in
adc
leave
push
sbb
push
pop
rorb
outsb
jne
cmp
fucomip
mov
and
jge
cmpsb
pop
repnz
mov
push
ror
pop
ljmp
xchg
or
ret
hlt
fdivr
mov
sub
adc
dec
es
data16
cmpsl
cmp
adcl
inc
int3
pop
cmp
lret
in
hlt
mov
mov
movsl
push
jnp
dec
lods
mov
shl
popa
into
dec
sub
cmp
rcrl
sub
out
jmp
js
cmp
mov
inc
fisubrl
cwtl
sbb
jg
repz
idivb
xor
fsubl
jmp
dec
mov
test
imul
addr16
add
addr16
sub
sub
cmpl
inc
cmp
in
loope
or
scas
xchg
andl
push
aas
jb
js
notl
jne
pop
in
sub
push
je
loopne
cltd
mov
rcl
daa
sub
xor
mov
lret
inc
ss
jnp
ret
setp
adc
cmc
xor
push
add
pop
cld
and
cmovle
xor
xor
jo
rorl
pop
mov
aas
mov
dec
and
out
rcrb
lret
outsl
adcl
or
cli
insl
stc
or
add
xor
jae
loope
push
cli
in
add
sub
xchg
sbb
arpl
add
andl
lahf
sub
int3
pusha
in
movsl
andb
mov
ja
sbb
lcall
je
and
cmp
cmpsl
lahf
xchg
add
pop
mov
cmp
adc
addr16
aas
or
out
and
lods
lcall
inc
dec
insb
xor
lock
mov
loope
fnsave
mov
or
jne
loope
sub
clc
xchg
add
or
sub
neg
hlt
cmp
sub
inc
pop
ljmp
inc
xor
outsb
int3
sbb
or
xchg
scas
sub
xchg
mov
je
xorb
and
out
loopne
in
dec
aam
outsb
add
leave
inc
jmp
popf
sbb
loope
lds
push
add
jae
adc
fucomp
xchg
lret
push
dec
pop
push
jne
or
loop
cmp
jo
dec
xor
dec
popl
stc
pop
and
or
add
add
pop
xor
xor
pop
xchg
ficoml
mov
cmp
mov
int
push
shlb
jge
movsb
sahf
sub
mov
dec
add
adc
jo
lods
into
pop
or
jmp
adc
bnd
xchg
mov
insb
rol
stc
xchg
sub
icebp
das
jge
inc
sbb
pop
stos
cmp
fnstcw
imul
dec
dec
lret
fisubs
inc
or
fyl2x
cmpl
loopne
adc
add
inc
inc
bound
dec
sub
pop
xor
xor
dec
jge
push
fstl
sub
sbb
xchg
and
hlt
xor
and
loope
mov
and
mov
cmp
cli
inc
push
mov
ret
popfw
mov
cmp
or
dec
repz
inc
xchg
and
xor
movsl
hlt
mov
sub
popf
add
push
push
sbb
fldt
cmp
inc
loope
movsb
orb
or
pop
shlb
addr16
aas
sbb
cmp
scas
and
add
sbb
inc
test
aas
xchg
ljmp
pop
push
mov
xlat
or
mov
shr
outsb
sahf
imul
xor
jl
push
xor
adc
push
xchg
or
xor
out
jecxz
push
mov
cmp
imul
shr
enter
or
in
inc
push
sub
call
out
mov
add
fs
add
repz
daa
mov
enter
mov
jp
cltd
xchg
xchg
fs
sub
add
xor
mov
pop
dec
rorl
cli
je
pop
pop
hlt
pop
push
pop
shrb
addr16
scas
out
cmp
dec
fcoms
add
cmp
comiss
pop
mov
push
insl
xor
je
sub
jnp
dec
mov
inc
sub
sub
daa
mov
mov
jmp
icebp
mov
sbb
jp
pushf
dec
jns
test
sub
ja
les
imul
clc
test
paddb
subb
aas
xchg
aad
mov
dec
dec
js
stos
aam
mov
xor
xchg
aaa
lock
fistpll
xchg
pop
movsl
imul
shrb
rorb
sbb
push
adc
insb
push
xchg
mov
in
sub
mov
stc
or
outsb
xchg
push
out
std
mov
repnz
xchg
fstps
xor
aas
out
and
fs
mov
sub
flds
test
enter
and
add
jns
out
adc
jp
jl
lds
push
rorb
out
lret
xchg
pop
scas
pop
or
cmp
cltd
pusha
bnd
jne
xor
nop
push
cld
jp
lret
aad
sbb
bound
aas
jne
cwtl
mov
mov
inc
into
stc
push
jmp
je
dec
leave
decb
sbb
data16
mov
mov
cmpsb
push
mov
mov
mov
xor
in
dec
or
or
dec
rorb
jb
ss
xorb
push
js
out
fcomp
cli
pop
cli
fildll
mov
cmpsw
or
mov
push
mov
xchg
add
in
sbb
out
xor
dec
aad
and
lods
test
inc
mov
ljmp
and
loope
cs
mov
add
mov
push
cli
stos
or
xor
dec
in
mov
lock
test
mov
lret
das
push
cltd
test
fdivs
lret
jle
or
pop
aam
cmp
cmp
pop
das
dec
movsl
cltd
out
add
or
pop
and
sbb
sarb
xchg
jns
mov
imul
jo
add
aam
xor
mov
mov
mov
sbb
cwtl
and
outsb
cmp
ret
stos
sub
pop
andb
in
jl
sbb
rcll
ret
push
and
jg
data16
mov
adc
mov
jl
and
movsl
xchg
xor
roll
jle
addr16
sub
mov
push
jecxz
addr16
jns
mov
push
add
jbe
movsb
cltd
cmp
add
push
daa
adc
lods
inc
loope
cld
mov
cmp
daa
or
and
shlb
add
mov
xchg
cmpsb
add
out
addb
addr16
inc
aaa
iret
sbb
lods
push
dec
popa
ret
and
divb
and
mov
lds
xor
sub
rcrb
cmp
hlt
pop
push
lret
cmpsb
pop
ja
mov
mov
test
fsubrs
lret
xchg
sbb
push
mov
lcall
daa
mov
xchg
or
mov
mov
aaa
dec
jno
pop
cmp
xchg
jns
jbe
pop
mov
inc
inc
std
stc
cmp
pop
inc
mov
out
push
push
das
test
jge
ret
xchg
sbb
in
das
test
jle
mov
lods
mov
in
mov
mov
xchg
xchg
mov
jg
out
jecxz
mov
pop
popa
hlt
outsb
daa
mov
setae
and
push
imul
aas
imul
fwait
popa
fsubrl
popa
push
jbe
stc
inc
jne
and
pop
ret
sub
orl
stc
popf
lret
jl
xchg
adc
pusha
sub
mov
mov
in
fwait
or
pop
cli
imul
imul
lea
xor
xor
dec
lods
outsb
call
std
xor
sahf
push
imul
leave
sub
lret
data16
lock
mov
inc
jo
jns
sub
fldcw
addb
or
mov
jno
sbb
inc
mov
pop
xchg
into
and
les
ss
inc
pop
mov
sbb
lds
add
xchg
cmp
and
std
out
dec
lods
xor
push
or
jl
lahf
lock
push
mov
in
ret
xor
lret
sahf
or
cltd
mov
xchg
arpl
pop
enter
movsb
lea
sbb
mov
xchg
ds
je
jbe
mov
adc
aad
add
mov
push
xlat
nop
add
je
dec
pop
hlt
test
jb
mov
mov
inc
or
lret
dec
and
pop
mov
cmp
jp
add
cmp
cmp
repnz
movsl
popf
aad
ret
cmpsl
mulb
push
push
data16
mov
mov
stos
dec
rorb
xchg
lahf
mov
sbb
xorb
rcll
mov
mov
fwait
mov
xchg
inc
jbe
sub
lret
pop
jmp
add
mov
mov
lret
je
icebp
lret
add
or
pop
sbb
jne
sbbl
and
push
pop
lahf
int
mov
mov
mov
insb
mov
fnstenv
pop
rcrb
push
jbe
adc
stos
ds
js
data16
sarl
pop
bound
and
xchg
out
rcrl
sbb
add
push
inc
imul
and
fnsave
sub
lahf
fldt
push
lds
mov
adcb
pop
dec
jle
push
dec
add
sbb
xor
sarb
sub
jo
or
rcrl
aas
push
outsl
cmp
stos
icebp
or
push
fisubl
cli
call
dec
outsl
mov
hlt
mov
xchg
push
inc
mov
jae
stc
add
mov
cmp
push
fstpt
aam
push
ss
test
mov
inc
mov
adc
ljmp
bound
push
xchg
insl
ljmpw
sbb
icebp
loop
push
data16
xchg
dec
ss
sbb
ret
jmp
push
repz
dec
pushl
inc
cmpsb
out
cmp
nop
into
rcl
lds
in
jmp
jae
xchg
sarl
sub
aam
fiadds
inc
shrb
ja
int
adc
inc
add
ret
sub
ja
inc
add
jns
cmp
cmp
cmp
arpl
dec
aaa
sahf
je
cwtl
mov
xchg
xlat
mov
adc
inc
push
in
sub
adc
ja
lcall
jecxz
jle
mov
xchg
dec
lds
cs
and
mov
sub
dec
dec
and
lret
push
bound
or
mov
sub
mov
xor
movsb
and
insl
je
cmp
dec
cs
mov
mov
mov
out
cld
mov
fwait
adc
jnp
adc
or
cmp
fisttpl
sbb
mov
dec
hlt
push
in
mov
sub
fisubrl
jno
lret
dec
dec
sbb
test
mov
mull
mov
mov
sbb
xchg
xchg
arpl
les
xchg
dec
sbb
sar
out
xchg
mov
pop
int
pop
adc
ret
mov
dec
xlat
fiadds
mov
push
lds
pop
cmp
or
xchg
pop
insb
pop
movsb
push
ret
xor
mov
andl
int
xchg
pop
cmp
jo
nop
sub
loope
mov
cmp
stc
xor
ja
notb
iret
orb
jg
fbld
mov
push
mov
mov
lcall
push
and
dec
push
and
xor
icebp
mov
jo
js
test
or
fists
out
test
in
xlat
xor
push
scas
inc
pop
mull
inc
subl
jge
into
adcb
pop
dec
aad
mov
inc
mov
push
or
push
out
lds
les
in
nop
sub
sbb
cli
rol
sbb
cli
out
pop
insb
testb
subb
inc
push
adc
stc
scas
pop
sub
sbb
xchg
int
cs
cmp
shlb
repz
popf
push
jne
mov
add
in
shrb
dec
mov
sbb
add
mov
int3
lret
inc
cmc
insl
loopne
lds
add
jnp
adc
repz
push
pop
testb
ficompl
in
adc
mov
and
cmpsl
cmc
sub
scas
push
lods
pop
dec
sbb
shl
fs
sbbb
cld
loopne
gs
dec
lock
popf
ja
push
pop
sub
xor
sbb
call
loope
jle
jo
mov
xor
push
fsubs
fnstenv
popa
aam
sbb
ljmp
add
mov
xchg
mov
xor
cwtl
adc
pop
pop
aas
mov
aam
inc
dec
push
roll
mov
in
mov
push
shll
inc
fldl
inc
push
sub
jae
aad
ljmp
mov
movb
cmp
lret
sub
mov
mov
and
mov
cmp
pop
call
jae
mulb
fsincos
fbstp
adc
cmpsb
clc
sbb
mov
dec
ret
dec
push
and
xchg
popa
ror
int
fistpl
xor
hlt
imul
fsubs
sbb
scas
xor
and
je
pop
dec
add
xlat
pop
mov
mov
shll
sbb
stc
jmp
jmp
sbb
bound
mov
push
or
sahf
addr16
mov
test
enter
imul
dec
xchg
push
xchg
jne
imul
mov
push
idiv
and
pop
pop
popa
lock
jo
aad
loopne
fadds
mov
xor
lods
pushf
mov
xchg
imul
mov
lcall
mov
das
pushf
mov
push
mov
insl
jns
lret
push
in
add
sbb
fimuls
repz
cmp
or
or
lcall
dec
or
xlat
xchg
iret
jg
mov
testb
insb
cmc
or
push
les
cld
cltd
mov
gs
jo
into
fmuls
push
or
and
lock
lcall
dec
mov
cmp
push
mov
aad
aaa
and
jecxz
and
test
clc
pop
cmp
sti
mov
mov
clc
mov
push
lods
jmp
int
inc
dec
int3
cmp
hlt
cli
cs
xchg
pop
in
stc
stos
jo
cmp
loope
jo
sbb
es
lds
es
sarb
daa
pushf
and
xchg
popa
ret
xlat
jp
ret
cwtl
aas
push
loopne
jnp
imul
mov
xchg
lcall
and
xchg
pop
cmpsb
jne
dec
imul
lock
aaa
or
stc
jg
xor
mov
out
rcl
int3
lock
lods
cltd
mov
test
mov
fistps
inc
leave
jmp
mov
or
pop
push
adc
nop
cmp
mov
ja
cmp
or
loope
cld
aas
pop
pop
jne
fst
stos
cmp
push
sysenter
add
lods
aas
and
nop
daa
int3
movsb
mov
adc
xchg
scas
pop
add
ja
scas
jns
sbb
in
aam
pop
or
mov
mov
or
pop
pop
lock
mov
sbb
push
xor
mov
lock
incl
out
fstpt
inc
dec
push
adc
ljmp
push
mov
data16
imul
xchg
jnp
jp
sbb
jl
mov
in
je
in
shlb
call
xor
sbb
aad
dec
mov
out
jecxz
shufps
test
shlb
rcrb
mov
movsl
pop
or
and
mov
xchg
sbb
lods
fimuls
out
sub
mov
mov
frstor
inc
in
lods
insl
pop
in
sbb
call
sub
cmc
add
repz
inc
ret
js
push
in
mov
mov
add
popa
outsb
js
shlb
or
cmc
and
adc
mov
jl
call
movsb
mov
sbb
sti
sbb
mov
imul
adcb
imul
orl
fsubr
mov
mov
lea
and
push
lods
add
pop
int
jle
lods
aas
call
gs
outsl
dec
pop
push
jle
pop
mov
add
mov
mov
orb
and
ds
mov
cmp
dec
es
xchg
mov
pop
jb
ret
cmpsl
test
or
push
outsb
add
mov
add
cmp
aaa
inc
aaa
and
push
ljmp
sub
cmp
sbb
int
mov
in
or
dec
aaa
cmpsl
mov
or
test
gs
sub
jne
or
loop
lea
and
push
cmp
test
das
xor
lds
subb
mov
loope
push
pop
mov
pop
dec
fcompl
pusha
cmp
jns
mov
lret
or
or
int
iret
cmp
push
ljmp
fsin
repz
xchg
test
inc
adc
mov
add
add
mov
aas
pop
mov
push
cmp
iret
push
ficompl
aas
js
enter
lods
into
adcb
bound
fsubr
enter
xchg
dec
testl
movsl
cmc
pop
out
cmp
shll
cmp
push
sub
inc
mov
cmpsl
enter
ret
int3
scas
imul
gs
popf
and
jne
sub
mov
enter
mov
push
daa
sbb
add
sbb
das
addl
cltd
ret
lahf
xchg
mov
mov
xchg
xchg
out
fidivrl
out
fimull
sbb
fsubrs
scas
cmp
adcb
les
in
fistl
pop
outsb
sub
xchg
cmpsl
jmp
ljmp
lahf
sbb
or
leave
xchg
sbb
dec
sbb
jle
jge
ret
orb
mulb
adcb
sub
mov
jl
jmp
mov
mov
and
jmp
inc
or
mov
jmp
sub
icebp
dec
jb
pop
adc
out
sbb
xchg
in
mov
leave
mov
mov
into
cmp
lahf
out
pop
push
xor
fwait
adc
adc
aad
daa
je
dec
and
mov
mov
cli
mov
adc
add
jecxz
jno
jmp
nop
enter
inc
shll
fcmovne
icebp
and
sub
lods
push
jb
jo
add
fisttps
jg
sbb
imul
dec
push
pop
or
xchg
aam
int
imul
call
cmpsb
inc
clc
mov
cmp
gs
jg
mov
lret
loope
and
insl
inc
jle
cmpsl
ja
.byte
xchg
std
.byte
add
add
add
or
pusha
add
cmpb
addb
add
sbb
add
call
add
add
add
addb
add
add
add
push
add
repnz
add
adc
add
mov
add
insb
or
orb
push
add
pop
add
add
inc
add
add
add
add
add
add
add
add
mov
add
add
add
addb
add
lock
addb
add
add
add
add
add
add
add
add
add
mov
mov
add
in
add
add
add
add
add
add
add
loopne
add
mov
add
add
add
add
add
add
add
add
add
or
add
sarb
add
in
add
add
add
add
add
add
add
dec
add
addb
add
jo
add
cwtl
add
addb
add
add
addb
add
add
add
add
add
add
add
add
add
pusha
add
add
add
in
add
add
add
add
add
add
add
mov
add
pop
mov
add
in
add
add
add
add
add
add
add
mov
add
mov
add
in
add
add
add
add
add
add
add
fadds
add
rol
add
add
add
add
add
push
add
add
pop
add
add
add
orb
add
ljmp
add
add
xorb
add
add
xorb
bound
add
mov
add
mov
add
fiaddl
add
add
cmpb
add
add
add
add
push
add
adcb
add
jp
add
mov
jns
add
add
adcb
add
pop
add
add
inc
add
pop
add
push
add
push
add
dec
add
inc
add
inc
add
add
add
add
add
add
add
mov
add
je
add
add
add
add
add
add
add
add
add
fiaddl
add
loopne
add
add
in
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
sub
add
insb
add
add
in
add
add
add
add
add
add
add
push
add
add
add
add
in
add
add
add
add
add
add
add
jp
add
sbb
add
add
in
add
add
add
add
add
add
add
mov
lret
pop
add
add
add
add
add
add
add
add
add
lret
add
lret
add
add
in
add
add
add
add
add
add
add
repnz
add
add
in
add
add
add
add
add
add
add
sbb
add
add
add
in
add
add
add
add
add
add
add
inc
add
add
iret
add
add
in
add
add
add
add
add
add
add
push
add
sub
cs
add
add
add
add
add
add
add
add
xchg
add
add
xlat
add
add
add
add
add
add
add
add
mov
xlat
add
add
add
add
add
add
add
add
add
loop
add
xor
add
add
add
add
add
add
add
add
add
sbb
add
inc
add
add
push
add
add
add
add
add
add
add
add
add
xor
cs
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
jg
add
mov
add
fiaddl
add
add
add
add
add
add
add
add
add
lret
add
add
add
add
in
add
add
add
add
add
add
add
repnz
das
add
add
add
add
add
or
xchg
add
add
add
mov
add
mov
add
fiaddl
add
add
add
sub
add
push
pop
add
jp
add
mov
js
add
pop
add
add
add
add
add
add
add
add
add
jp
add
rolb
add
add
add
add
add
add
add
add
mov
pop
das
add
add
in
add
add
add
add
add
add
add
lret
add
or
add
add
add
add
add
add
add
add
add
add
repnz
add
rorb
das
add
add
add
add
add
add
add
add
add
add
sbb
add
mov
or
add
add
add
add
add
add
add
add
inc
pop
add
insb
adc
add
add
add
add
add
add
add
add
push
add
and
add
add
add
add
add
add
add
add
add
add
xchg
pop
add
in
adc
add
add
add
add
add
add
add
add
mov
adc
add
in
add
add
add
add
add
add
add
loop
add
test
das
add
add
add
add
add
or
add
add
pop
or
addb
add
orb
addb
add
stos
or
adcb
add
rorb
add
cli
or
adcb
add
and
add
dec
or
sbbb
add
jb
add
lcall
add
or
sbbb
add
add
add
add
add
add
add
add
add
jb
add
adc
das
add
add
in
add
add
add
add
add
add
add
lcall
add
add
in
add
add
add
add
add
add
add
ret
add
add
in
add
add
add
add
add
add
add
ljmp
add
add
add
add
add
add
add
add
add
add
adc
add
enter
sub
add
in
add
add
add
add
add
add
add
cmp
add
hlt
sbb
add
add
in
add
add
add
add
add
add
add
bound
add
cmp
das
add
add
in
add
add
add
add
add
add
add
mov
add
jl
das
add
add
add
add
add
add
add
add
add
mov
add
loopne
das
add
add
add
add
add
add
add
add
add
add
fimull
add
mov
add
add
add
add
add
add
add
add
add
add
add
int3
and
add
add
in
add
add
add
add
add
or
add
or
orb
add
bound
add
mov
add
add
add
add
add
add
add
add
add
push
or
add
and
add
add
in
add
add
add
add
add
add
add
jp
add
add
das
add
add
in
add
add
add
add
add
add
add
mov
and
add
add
add
add
add
add
add
add
fimull
add
jg
add
sbb
add
inc
or
orb
add
inc
add
push
add
add
dec
add
dec
add
add
add
add
add
add
add
or
add
push
popa
das
add
add
in
add
add
add
add
add
add
add
xor
add
push
and
add
add
in
add
add
add
add
add
add
add
pop
or
add
add
add
in
add
add
add
add
add
add
add
test
add
add
add
add
add
add
add
add
add
pushf
or
add
das
add
add
in
add
add
add
sub
add
xor
add
pusha
add
add
add
add
add
add
and
add
xor
pop
pop
inc
push
xchg
fwait
adcl
dec
xor
dec
push
cmp
sahf
movsb
mov
xchg
lcall
and
adc
adc
or
and
push
lcall
sub
jmp
jae
add
ud0
adc
ljmp
cmp
incl
adc
lcall
and
daa
jmp
ss
fwait
stos
xchg
ljmp
pop
pushl
decl
adc
call
cs
mov
jl
ret
pushl
mov
incl
jp
sub
lcall
jl
xor
ljmp
inc
cmp
cmp
decl
pop
decl
adc
sub
sub
push
sub
es
mov
xor
sbb
sub
xor
scas
cwtl
filds
cmp
adcb
cs
daa
pushl
inc
and
sub
adc
cmp
ljmp
inc
xor
sbb
ds
call
push
lcall
sub
ljmp
xor
jmp
sub
ljmp
xor
decl
adc
and
pop
and
mov
jae
ljmpw
incl
adc
decl
sbb
ljmp
push
push
jmp
movsb
jg
ret
ljmp
stos
decl
xchg
inc
cmpb
bound
push
xorb
aaa
sub
cmp
inc
pop
dec
call
pop
incl
sbb
and
and
adc
push
repnz
or
adc
and
adc
jo
arpl
jge
ja
jg
jge
dec
push
inc
std
jl
jge
sub
inc
sub
push
gs
call
daa
or
and
and
and
aas
das
lcall
xor
jmp
aas
xor
sub
incl
sub
ljmp
and
lcall
and
jmp
and
incl
shrb
popa
fs
pushl
ds
das
decl
or
jmp
xchg
js
mov
jo
mov
push
stos
decl
decl
jnp
xor
ljmp
cmp
cmp
pushl
push
inc
jmp
incl
add
std
sbb
cld
sbb
sbb
and
sbb
popf
mov
js
lcall
cld
pop
addr16
std
xor
xor
decl
inc
call
and
jmp
ss
dec
arpl
pop
ss
lcall
xor
adc
sbb
adc
pop
call
and
ljmp
cmp
sub
or
or
push
pop
dec
decl
pop
push
cmp
jmp
jg
ljmp
pop
ljmp
push
jmp
push
incl
add
ljmp
dec
inc
lcall
pushl
lods
jmp
stos
call
xchg
decl
jl
inc
jno
jmp
dec
cmp
decl
cs
pushl
push
inc
ljmp
inc
sub
or
incl
add
add
sub
lcall
xor
jg
scas
mov
hlt
jmp
stc
icebp
jmp
inc
xor
decb
inc
incl
decl
push
pop
jmp
addr16
decl
and
incl
adc
incl
adc
call
sbb
sbb
lcall
sub
jmp
cs
decl
adc
and
orb
ljmp
pop
jmp
jns
call
push
or
call
sub
pushl
pop
push
decl
jge
jno
lods
jmp
mov
lcall
xchg
arpl
popa
lcall
ja
adc
and
cmp
dec
xor
push
ss
incl
sbb
call
sub
call
fcmovne
fcomi
imul
sarl
mov
cs
aaa
std
dec
push
inc
incl
call
sbb
add
or
or
decl
adc
lcall
sub
lcall
cs
jmp
xor
lcall
sub
ljmp
cmp
pushl
pop
or
xor
call
sbb
test
push
pop
jmp
dec
pushl
pop
cmp
sub
push
push
push
jmp
xor
decl
xchg
inc
jl
ljmp
mov
jmp
xchg
incl
pushw
pop
dec
jge
xchg
call
lcallw
cmp
jmp
aas
sub
das
dec
xor
cmp
pushl
push
cmp
sbb
sbb
add
add
test
pushf
jbe
jl
push
sub
and
clc
out
scas
and
inc
cmp
dec
pop
dec
pushl
inc
sub
or
push
or
jmp
and
or
sbb
sbb
sbb
sbb
or
and
call
sub
ljmp
ds
lcall
xor
ljmp
sub
add
add
push
insl
pop
lcall
dec
jmp
ljmp
push
lcall
sbb
lcall
es
jmp
inc
xor
mov
ljmp
popf
pushl
call
jge
insb
cltd
mov
xor
dec
jmp
jnp
insb
jnp
je
jnp
push
cmp
call
cs
jmp
cmp
pushl
dec
xor
inc
pop
inc
call
push
add
adc
add
pop
pop
dec
dec
mov
pop
dec
clc
add
adc
inc
arpl
dec
das
incl
sbb
add
add
push
sbb
ljmp
xor
jmp
adc
lcall
es
lcall
sub
decl
push
push
call
and
lcall
ss
call
sub
ljmp
aas
xor
and
xor
push
sub
lcall
pop
lcall
dec
jmp
dec
lcall
dec
call
adc
lcall
sbb
jmp
sub
jmp
xor
lcall
cmp
js
xchg
decl
jne
push
nop
xchg
popa
xchg
test
inc
outsl
pop
call
outsl
jp
mov
data16
sub
pushl
dec
xor
decl
inc
call
and
adc
add
add
add
add
xor
push
dec
movb
dec
incb
and
or
or
jmp
xor
add
jmp
and
adc
sub
jmp
das
pop
call
dec
cmp
das
inc
xor
sub
sub
cs
xor
or
adc
push
sub
pushl
dec
dec
lcall
xor
aaa
dec
inc
jmp
jmp
dec
lcall
inc
ljmp
sbb
ud0
sub
sub
es
xor
bound
push
pop
mov
aaa
arpl
jbe
xchg
jl
mov
pop
jge
jp
jns
mov
jb
dec
arpl
aaa
dec
sub
dec
pusha
inc
incl
add
add
add
or
aas
sub
ljmp
scas
sti
push
jp
std
aaa
push
cmp
xor
ljmp
cmp
lcall
sbb
adc
daa
sbb
pop
adc
sbb
push
pushl
ds
inc
xor
sub
sub
push
xor
decl
and
call
sub
lcall
xor
cmp
push
and
lcall
pop
call
inc
call
inc
jmp
push
decl
or
or
sub
ljmp
cs
inc
push
decl
pop
decl
jmpw
jnp
mov
insl
decl
push
lcall
pop
pushl
imul
ss
incl
ss
ds
sub
pop
push
add
add
add
sbb
add
es
xor
inc
jb
sarb
outsl
push
out
dec
outsb
push
cli
or
push
std
xor
and
and
and
and
sub
test
push
pop
dec
incl
inc
pushl
xor
call
sub
decl
push
adc
or
sub
adc
cmp
pop
cmp
and
incl
cmp
dec
dec
xor
addb
sbb
adc
daa
sub
jmp
and
decl
aas
cmp
cmp
xor
jnp
decl
dec
pushl
je
imul
dec
pushl
and
push
arpl
decl
decl
jmp
xor
add
inc
and
das
dec
xor
pop
inc
jp
das
sbb
pop
sub
icebp
inc
pop
inc
cld
daa
xor
sbb
cmp
sub
imul
push
push
decl
dec
decl
dec
jmp
xor
sbb
sbb
or
sub
sbb
cmp
call
sub
push
xor
decl
nop
jno
lahf
cmpsl
xchg
push
pop
inc
ljmp
xor
lcall
pop
adc
and
sbb
cmp
sub
push
dec
cmp
pop
push
inc
pushl
inc
sub
bound
pushl
insb
incl
pop
inc
decl
aas
decl
cmp
push
gs
jmp
sub
imul
add
add
and
pop
and
and
cmp
pop
and
sbb
push
add
sub
and
inc
dec
ss
xor
and
push
pop
cmp
sub
mov
imul
imul
and
sub
add
and
decl
sub
adc
xor
or
sub
push
and
decl
adc
sub
and
call
cwtl
jnp
and
adc
sbb
or
sbb
adc
xor
and
gs
dec
call
xor
cmp
inc
xor
es
daa
pushl
popa
pushl
pop
lcall
inc
lcall
inc
jmp
pop
jmp
dec
call
xor
add
add
adc
add
mov
lods
test
jp
cmc
cmp
dec
pop
pop
notrack
ljmp
pop
incl
jno
ljmp
cmp
add
and
call
sub
push
and
add
pop
incl
adc
decl
adc
pop
jl
imul
xchg
jnp
lcall
call
adc
ljmp
daa
pop
jmp
dec
incl
and
incl
daa
cmp
pop
cmp
sbb
inc
aas
and
xor
adc
dec
dec
sub
jnp
pop
pushl
popa
incl
andb
add
xor
mov
test
insb
dec
cmc
bound
gs
push
pop
inc
call
mov
xor
push
sbb
incl
adc
incl
pop
push
incl
push
incl
or
adc
pop
or
lcall
push
adc
lcall
push
decl
add
sbb
or
and
adc
inc
inc
sub
inc
cmp
ljmp
or
decl
decl
and
pop
dec
sub
push
inc
and
cmp
or
inc
dec
cmp
addr16
pushl
incl
add
or
and
xor
addr16
rcrb
xor
test
jb
push
cld
inc
dec
ss
scas
ret
mov
push
xor
call
sub
pop
sbb
incl
ud2
incl
or
incl
push
push
incl
or
decl
push
pop
incl
push
add
push
push
dec
ljmp
mov
or
pop
and
lcall
push
incl
sub
aaa
cs
ljmp
and
incl
sbb
dec
ss
pop
cmp
and
pop
inc
push
lcall
daa
aaa
sub
inc
decb
jae
incb
add
add
add
and
add
jne
pop
aas
mov
ja
fsubrs
jo
lock
pop
dec
stc
sbb
inc
inc
jmp
aaa
cmp
sbb
call
and
decl
sbb
incl
adc
add
add
add
add
add
adc
or
mov
movsb
decl
ds
cmp
sub
adc
pop
or
dec
cmp
sbb
cmp
or
jmp
push
ljmp
sbb
jmp
and
pop
inc
es
pop
push
ss
mov
xchg
jae
jns
testl
add
pop
and
add
cmp
sbb
push
ss
outsl
push
sahf
gs
leave
sbb
and
cld
adc
decb
and
incl
adc
pop
or
adc
or
adc
or
sbb
incl
or
decl
cmp
lcall
sbb
incl
sbb
dec
xor
decl
pop
lcall
push
ljmp
and
lahf
jae
decl
inc
sbb
pop
dec
sub
xchg
nop
jae
movsb
mov
jo
test
add
sbb
add
push
push
add
cmp
and
xor
mov
add
pop
decb
sbb
call
and
add
or
incl
or
or
adc
or
adc
add
add
add
add
push
push
add
cmp
xor
inc
dec
cmp
es
or
dec
cmp
call
call
pop
ljmp
and
popf
jb
jmp
aaa
or
jb
sub
jg
dec
in
xchg
jae
cmp
or
push
dec
inc
inc
sbb
and
add
sbb
dec
aas
mov
adc
xor
adc
xor
push
es
or
sbb
add
or
add
add
and
and
lcall
and
or
or
add
add
add
sbb
pushl
cmp
incl
sub
incl
pushl
aaa
ljmp
paddd
js
std
test
cli
jbe
sub
andl
mov
push
add
inc
and
or
add
sbb
add
and
and
cmp
dec
jmp
dec
inc
cld
and
and
incl
pop
ud0
sbb
incl
adc
incl
push
push
call
pop
incl
adc
call
sbb
pop
incl
push
add
and
sbb
cmp
and
cmp
adc
dec
sub
test
push
xchg
popa
xor
test
bound
jbe
and
jne
sub
sub
aas
inc
sub
adc
add
add
add
add
cs
or
dec
inc
push
adc
cmp
xor
dec
dec
std
sbb
xor
mov
call
sbb
decl
sbb
decl
pop
decl
sbb
incl
or
incl
inc
decl
push
push
incl
adc
incl
pop
add
add
push
pushl
sub
incl
adc
std
mov
push
sti
mov
mov
jp
sub
push
xor
push
pusha
cmp
and
add
xor
inc
ja
cmp
fildll
pop
pusha
cld
daa
push
push
incb
and
incl
adc
add
and
decl
pop
push
decl
sbb
decl
push
push
call
sbb
add
add
cmp
push
or
add
add
adc
xor
sbb
cmp
pop
cmp
in
lods
cmpl
inc
sbb
push
sub
push
pop
and
push
add
add
inc
add
add
inc
xor
cmp
dec
push
jmp
and
xchg
adc
incl
sbb
decl
push
or
incl
pop
push
decl
sbb
call
and
decl
push
push
decl
push
push
cmp
cmp
add
add
push
adc
incl
add
es
adc
mulb
dec
and
inc
add
add
add
add
add
sbb
or
cmp
pop
pop
stos
xor
jecxz
sub
stc
pop
test
incl
sbb
incl
adc
incl
pop
push
incl
push
decl
sbb
decl
sbb
decl
adc
add
push
lcall
pop
sbb
pop
sbb
add
or
push
and
sbb
dec
dec
xor
cmp
aaa
aaa
and
push
add
add
push
cmp
or
inc
xor
popa
pop
je
jne
mov
mov
cld
or
sbb
or
adc
incl
sbb
decl
sbb
decl
sbb
decl
adc
add
add
add
pop
push
sbb
add
decb
pop
or
sbb
push
fisttpl
sub
xor
add
add
add
add
add
imul
adc
adc
adc
pop
mov
cmp
cld
adc
sbb
incl
or
incl
pop
decl
sbb
incl
or
or
adc
incl
push
pop
decl
sbb
decl
pop
or
negl
adc
mov
cmp
add
add
add
or
add
pop
bound
sub
cmp
aaa
adc
inc
add
add
add
insl
and
pop
imul
xchg
add
or
add
or
add
add
std
cmp
decl
pop
adc
add
push
incl
ud2
incl
or
incl
adc
incl
or
incl
adc
incl
adc
incl
or
or
add
pop
or
add
add
add
push
je
push
inc
pop
arpl
bound
stos
push
dec
sub
sub
add
inc
sbb
push
dec
and
adc
enter
cmc
adc
sbb
adc
pop
incb
or
push
decl
adc
decl
adc
incl
add
incl
invd
incl
or
decl
adc
incl
or
incl
push
or
add
add
add
add
add
add
sub
or
push
and
pop
push
cs
inc
add
push
sub
push
add
add
sub
add
mov
inc
xchg
mov
push
pop
inc
ljmp
inc
mov
es
xchg
sbb
add
sbb
sti
add
pop
incb
or
incl
or
push
incl
push
incl
push
add
or
add
or
or
add
or
add
adc
or
sbb
decl
or
incb
or
notb
adc
pop
fwait
inc
sub
jae
sbb
add
dec
and
sbb
add
add
add
add
pop
sub
mov
insb
fsubrl
pop
out
jge
jo
inc
dec
cmp
aas
dec
xor
push
push
or
add
pop
add
or
or
or
push
call
adc
decl
push
add
or
add
and
adc
xor
sbb
cmp
push
cmp
push
ljmp
pop
push
ljmp
sub
cmp
sbb
call
adc
add
or
add
push
or
add
ud2
add
pop
or
cltd
es
add
sub
sub
inc
sbb
adc
imul
outsb
mov
mov
cmp
lea
inc
es
cmp
daa
decl
das
lcall
inc
jg
popa
ljmp
dec
incl
and
decl
and
cmp
adc
dec
inc
and
xor
or
dec
inc
and
push
inc
pop
ljmp
incl
sbb
xor
or
std
cs
cld
sub
and
push
jl
es
adc
add
add
inc
and
cmovle
and
jo
imul
int
ret
cmp
es
jno
pop
lcall
mov
cmp
lea
arpl
push
dec
xor
aaa
xor
cmp
sbb
dec
dec
pushl
dec
cmp
adc
cmp
ud0
das
or
decl
mov
xchg
lcall
es
je
aas
sti
push
inc
and
push
inc
and
dec
inc
and
dec
cmp
add
add
add
inc
inc
add
cmp
sub
push
pop
inc
loopne
inc
xor
sub
sbb
inc
inc
xor
xor
and
sub
pushl
xor
adc
es
ud0
das
sbb
xor
sbb
push
push
add
push
push
cmp
inc
inc
sub
cmp
and
incl
push
incl
sbb
jb
lcall
push
and
jnp
ds
mov
out
imul
dec
sub
daa
add
cmp
add
add
add
add
add
pop
xor
inc
inc
daa
bound
dec
leave
and
clc
adc
pop
incb
add
pop
adc
add
adc
decl
push
add
decl
adc
call
sbb
ljmp
sub
lcall
sbb
lcall
sbb
jmp
and
ljmp
sub
inc
xor
ljmp
sub
imul
imulb
das
lds
or
aaa
push
and
add
add
add
add
dec
sub
sbb
aaa
popa
pusha
int3
cmp
stc
cmp
pop
sub
decl
sub
incl
invd
incl
adc
incl
push
or
decl
push
decl
sbb
push
and
call
and
incl
or
decl
add
sbb
or
adc
add
and
add
push
inc
and
push
dec
sub
divl
cmp
pop
push
and
sldt
add
sub
add
jp
test
jge
loopne
jno
sti
dec
jnp
sub
jmp
inc
inc
decl
and
incl
ss
cs
inc
ljmp
dec
inc
ljmp
dec
inc
cmp
ljmp
inc
xor
pop
cs
or
incl
or
lcall
sbb
das
ud0
adc
adc
add
fadds
or
push
xor
adc
add
add
daa
adc
popa
mov
fldt
into
cld
dec
test
and
cmp
adc
ljmp
push
dec
jmp
cmp
and
ljmp
inc
pushl
dec
cmp
aaa
push
cmp
cmp
daa
xor
add
add
or
sbb
or
adc
push
sbb
imulb
xor
push
cs
daa
daa
adc
push
jl
imul
dec
sbbb
sub
jmp
push
pop
ljmp
pop
pop
jmp
push
push
ljmp
dec
push
jmp
inc
inc
pushl
dec
inc
pushl
push
cmp
sub
jmp
xor
incl
or
decl
sbb
decl
pop
or
push
adc
add
add
add
sbb
add
dec
add
pop
aaa
and
push
push
js
push
insl
lods
aam
dec
mov
pushl
outsb
js
sub
arpl
cmp
ljmp
pop
jmp
dec
push
jmp
inc
inc
pushl
push
inc
pushl
push
inc
ljmp
das
jmp
aaa
and
incl
add
call
push
push
incb
push
add
or
add
and
add
xor
add
xor
or
pop
jbe
ja
mov
loope
scas
iret
cld
dec
jg
cmp
pushl
insb
jbe
xor
cmp
imul
sub
ljmp
dec
inc
cmp
aas
pop
inc
ljmp
dec
xor
and
and
incl
adc
call
and
ljmp
xor
call
sbb
adc
or
sbb
xlat
sub
ja
or
add
add
add
add
add
sub
cmp
push
movsl
cltd
mov
mov
inc
outsb
jl
xor
pushl
pushl
push
pop
cmp
ljmp
pop
pop
jmp
push
push
ljmp
dec
dec
pushl
dec
inc
incl
decl
dec
cmp
cmp
xor
ljmp
sub
add
xor
jmp
daa
adc
or
add
push
adc
call
inc
sub
cmp
add
inc
add
add
cs
aaa
pop
pop
or
test
dec
insl
push
cmp
bound
ss
push
pushl
push
push
jmp
dec
dec
jmp
dec
inc
jmp
inc
cmp
decl
push
lcall
pop
decl
cmp
call
add
sub
sbb
xor
pop
sbb
add
push
push
add
dec
cmp
pop
dec
sub
add
inc
daa
or
inc
cmp
insl
sub
sbb
push
fs
call
add
adc
pop
sub
sub
adc
daa
lcall
cmp
call
sub
pop
ljmp
dec
cmp
and
sbb
or
push
incl
or
decl
or
cmp
and
std
cmp
adc
mov
sbb
sub
add
inc
add
add
xor
pop
cmp
dec
fldt
ss
sbb
stc
and
sbb
das
cmp
push
sbb
sbb
adc
sub
ljmp
cmp
xor
sub
and
lcall
adc
pop
jl
pop
std
pop
dec
xor
dec
inc
and
push
inc
and
push
cmp
adc
add
add
inc
add
add
and
adc
inc
inc
and
cmp
sbb
sub
or
sbb
add
and
push
cli
sbb
add
sbb
add
and
pushl
daa
or
pushl
pop
add
aas
sub
jae
xor
sbbl
mov
pop
aas
push
inc
dec
adc
push
inc
add
dec
aaa
add
jae
xor
gs
movsb
mov
into
test
mov
lods
mov
fld
popf
jmp
sahf
jmp
jnp
jge
pushl
adc
fisubrl
pop
int3
cltd
outsb
aas
jno
or
pop
and
push
add
add
add
add
xor
or
adc
pop
xor
inc
insl
inc
sbb
test
jmp
stos
test
xchg
push
dec
mov
fs
xchg
bound
fwait
fs
enter
lret
xchg
pop
mov
push
sub
daa
add
add
add
add
xor
add
add
and
test
add
add
push
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
mov
add
add
xor
cmp
xor
xor
xor
xor
inc
add
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
sub
dec
or
pop
cs
mov
push
pop
xchg
aad
jg
sub
add
add
add
push
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
adc
mov
mov
jp
pop
add
xor
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
pop
dec
add
addr16
bound
and
testl
sub
imul
add
add
add
outsl
add
insl
add
outsb
add
add
add
or
pop
jg
sub
in
mov
mov
jg
push
sub
push
add
cmp
das
add
add
ja
ja
add
jns
jne
jns
popa
add
add
outsl
add
sub
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
loopne
das
add
fs
add
jb
gs
xor
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
arpl
add
arpl
add
fs
add
fs
add
add
add
dec
fs
add
add
jmp
mov
add
pusha
call
pop
sub
mov
add
mov
mov
sub
push
push
mov
lods
lods
add
mov
push
mov
push
push
push
call
pop
pop
mov
push
push
push
push
push
push
mov
lods
lods
add
push
lods
add
call
push
push
lods
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
lods
push
lods
add
push
push
push
mov
call
pop
add
mov
lods
push
lods
push
lods
push
lods
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
pop
test
je
push
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
dec
popf
mov
sub
mov
sbb
call
mov
sub
adc
inc
pop
lret
movsl
push
ret
push
pop
cmp
lret
insl
fsubrl
insl
repnz
inc
xchg
xchg
rol
xor
push
dec
mov
or
inc
fcomip
aam
in
sbbl
fucom
or
sub
inc
popf
mov
fwait
test
inc
push
out
ret
lret
aam
or
and
mov
inc
cld
pinsrw
cs
shll
inc
mov
mov
stc
clc
fsubrp
jae
call
icebp
in
js
inc
das
test
xchg
jae
cmp
cltd
rcr
adc
or
or
inc
sub
ds
cmp
dec
xor
cltd
mov
or
fidivrs
push
in
dec
in
lahf
xchg
and
div
in
inc
mov
call
xor
mov
sbb
xlat
sub
insb
or
xor
push
adc
inc
cltd
subl
xchg
subl
ret
sbb
pushf
loopne
lret
imul
cmpsl
dec
seta
xlat
clc
addr16
or
fwait
jae
in
outsl
ficoms
xor
inc
ja
mov
fucomp
lret
add
fldt
pop
daa
subb
pop
cmc
mov
shll
mov
jecxz
and
adc
rclb
mov
icebp
int
orb
jae
rclb
inc
pop
test
fmul
sub
sbb
repnz
stos
arpl
dec
fcmovb
cmc
and
cmp
mov
mov
mov
outsl
mov
dec
lcall
or
lods
cmp
jp
push
cmp
sub
or
idivl
fsts
stos
xchg
hlt
inc
andl
push
mov
inc
scas
aad
and
pop
insb
mov
inc
mov
xor
mov
imul
adc
mov
repz
jo
ret
jmp
aad
xlat
push
imul
test
and
or
jnp
lahf
repz
in
dec
mov
lods
sbb
repz
sbb
and
in
push
mov
and
incl
pop
cmp
dec
pop
inc
ror
sti
fcmove
jge
jo
loopne
fisttps
daa
jmp
cli
pop
mov
dec
leave
and
mov
and
xchg
and
mov
push
pop
mov
pop
jle
mov
dec
cwtl
fidivs
sarl
icebp
aam
xacquire
sub
or
xchg
add
jle
test
jle
adc
aam
cmp
dec
jecxz
in
adc
ja
cld
xlat
inc
in
jecxz
adc
xchg
insl
mov
xchg
ljmp
mov
push
inc
nop
or
fnstenv
loop
adc
gs
xor
cmp
icebp
pop
xchg
out
in
movsb
jbe
das
inc
iret
movsbl
lods
test
mov
andb
aad
lods
sbb
add
sub
mov
rcll
push
cmc
push
jo
mov
sub
ja
xlat
pop
xchg
push
js
mov
bound
nop
outsb
push
xchg
clc
jmp
roll
daa
in
mov
ret
cmp
xlat
inc
or
ss
lods
enter
in
rclb
lds
mov
push
and
rol
mov
push
push
add
dec
xchg
stos
jp
or
inc
dec
cwtl
repz
outsb
sub
hlt
and
dec
ret
xor
cmpsb
inc
mov
jnp
scas
insl
lds
cmp
not
divl
movsb
inc
insl
mov
cs
mov
adc
mov
daa
push
sub
cmpl
jl
cmc
aam
sub
into
or
jb
add
out
in
xchg
jnp
aaa
push
push
insb
pop
jbe
pushf
cld
lret
dec
leave
inc
push
or
cltd
dec
lcall
xchg
mov
jecxz
mov
repnz
sbb
cmp
push
jb
sbb
rolb
sbb
adc
das
or
ret
sti
sub
sbb
inc
dec
and
xchg
in
lret
ret
xchg
mov
leave
push
fisttpll
in
or
ljmp
call
lahf
cmp
ja
inc
cmp
mov
xchg
push
lea
andb
mov
cmpsb
jl
roll
addr16
shlb
dec
xchg
xor
cld
or
xorl
mov
adc
pop
outsl
sub
add
and
cmp
mov
pop
aas
test
sbb
cmp
jns
data16
movsl
stos
push
dec
push
mov
xor
push
push
sbb
push
mov
mov
iret
imul
jmp
and
fnsave
xor
and
es
je
je
mov
andl
push
outsb
cmp
xor
cli
xchg
push
xchg
adc
push
sti
xchg
lods
loope
lods
cltd
iret
jge
xchg
scas
shlb
inc
jne
shlb
jg
out
divb
mov
sbb
jnp
imul
not
pop
pop
xchg
pop
lods
push
mov
daa
xlat
popa
xor
scas
or
icebp
jns
loopne
fmull
mov
cld
mov
fidivl
push
dec
cld
sub
into
lahf
aas
fsubs
out
xchg
inc
popl
pop
pop
mov
dec
xor
inc
mov
arpl
or
imul
icebp
outsb
cs
and
rcll
sti
xchg
and
push
nop
jne
in
stc
pop
mov
pop
bound
add
adcl
faddp
fisttpl
in
push
mov
in
cli
pop
adc
mov
ja
xor
xor
adc
adcl
mov
adc
jp
rclb
out
call
and
push
sbb
xchg
cmp
fmuls
movsb
xor
aas
loop
int
fiadds
lea
or
sbb
or
jp
hlt
mov
jle
add
pusha
and
pop
pop
arpl
xor
pushf
lock
stos
rcrb
jo
popf
pop
movsl
mov
adc
cltd
jp
ret
fsub
aaa
insl
mov
mov
push
pop
push
or
push
xchg
cmc
sbb
lock
addb
pop
pop
add
cmp
cmp
ljmp
loop
jp
mov
lcall
jp
jl
mov
sbb
push
aam
in
pop
xchg
faddl
stos
adc
push
stos
sbb
inc
sahf
sub
and
cmp
xchg
pop
push
fst
into
push
sti
mov
dec
mov
fcoml
push
insb
dec
pusha
push
push
jno
or
cmp
pop
sub
mov
or
add
jle
xor
push
out
insb
adc
aaa
and
or
sbb
loope
push
jge
insb
inc
and
call
rclb
inc
mov
div
inc
jae
pop
test
pop
jne
pop
or
sbb
sbb
test
pop
xchg
testl
inc
jl
mov
adc
pop
sub
xchg
xchg
lcall
movsl
jl
push
addr16
mov
cmp
xor
jp
aas
jle
repz
jbe
inc
loopne
inc
repz
mov
jle
jg
or
or
xor
lods
stos
add
addr16
pop
mov
adc
inc
mov
scas
or
adc
in
sub
dec
rep
sahf
and
rorb
mov
xor
cmp
std
mov
loop
cmp
ror
int3
cld
xor
sbb
negl
jg
cmpsl
dec
ret
sbb
lock
aam
push
notl
repnz
mov
fldcw
jge
iret
jae
imull
mov
out
in
cmpsl
sub
movsb
cmp
sub
aas
dec
loope
xchg
add
out
xchg
jno,pn
int
lods
iret
mov
or
jnp
mov
orl
pop
cld
jns
out
and
dec
jne
push
addr16
mov
dec
mov
and
jle
dec
out
sbbl
icebp
xor
xchg
cmc
rsm
jae
in
push
je
jne
pushf
dec
das
xchg
imull
push
push
add
imull
rcl
mov
test
cmp
and
das
xlat
nop
cwtl
sub
loop
adc
cmp
pushf
aas
test
dec
dec
subl
jecxz
lahf
dec
mov
jmp
dec
mov
dec
aaa
test
jle
xor
push
fptan
adc
jae
jge
sbb
fwait
aam
pusha
repnz
lret
xchg
cmpl
xchg
sbb
xor
sbb
lret
xchg
leave
outsb
in
jle
xor
lret
je
add
fcompl
mov
int3
ret
and
jp
rolb
sub
push
push
inc
cmc
inc
xchg
outsl
xchg
mov
out
nop
jo
pop
pop
sub
adc
sbb
pop
loop
inc
repnz
repnz
aad
loopne
jle
adc
lret
cwtl
iret
jp
sub
cmp
jmp
js
add
dec
jmp
jg
inc
addr16
sti
jge
mov
mulb
arpl
imul
insb
xor
mov
lcall
dec
mov
jo
imul
jne
pcmpgtw
cs
outsb
sbb
pcmpgtw
adc
popf
or
je
xchg
push
lret
mov
push
inc
outsl
add
xchg
adc
push
or
sarb
adc
dec
and
push
push
mov
mov
cmp
pop
mov
mov
or
and
sarl
call
mulb
imul
cmpsl
push
cmp
add
cld
iret
jmp
fstps
mov
or
pop
mov
das
cltd
push
test
sbb
adc
sbb
jo
mov
and
ds
sbb
pop
xchg
jne
jae
addr16
add
shll
repnz
aas
and
dec
imul
xchg
testl
test
push
push
dec
and
cld
xor
or
jl
insb
xor
xor
lret
xchg
add
push
outsb
xchg
test
xchg
add
mov
sahf
push
xor
fs
mov
mov
jp
test
and
push
cmpsb
pop
dec
movsb
dec
rcrl
ljmp
sbb
xchg
loop
sti
jmp
in
jns
push
push
pop
mov
imulb
popf
adc
inc
lods
xor
xor
mov
stos
push
pop
iret
cmp
insb
jl
and
in
cmc
cmpsl
and
clc
and
and
les
mov
add
imul
aas
pop
jno
movsb
push
movsb
xor
gs
daa
jnp
vxorps
pop
push
divl
jno
iret
call
or
popa
cmp
xor
stc
sarl
fldt
arpl
mov
cmp
push
pop
gs
shrl
in
push
enter
rol
pop
clc
add
or
mov
jmp
jae
sbb
negl
xor
ret
push
mov
xor
dec
lret
dec
xchg
lea
jnp
data16
mov
repnz
sbb
bound
inc
stos
inc
sub
push
je
imul
add
jg
pop
sbb
fcmovnb
or
gs
mov
inc
pop
rorl
sarl
repnz
outsb
pop
sar
xchg
aam
mov
xchg
lock
ffree
ret
mov
gs
inc
imul
movsl
adc
jno
incb
xor
xchg
xchg
ret
xchg
cli
push
and
xchg
dec
mov
test
in
in
mov
mov
xchg
rcr
ret
jbe
test
cmpb
nopl
mov
lcall
or
enter
pop
imul
inc
leave
pop
arpl
inc
loope
in
and
mov
scas
xchg
insl
jg
jp
inc
pop
sub
inc
fmul
xchg
xchg
mov
jg
stos
std
lock
sub
fimuls
jb
imull
push
fwait
inc
jae
cmc
inc
and
rorl
stos
jne
and
inc
enter
out
pop
lods
fcompl
inc
es
xchg
push
out
in
maskmovq
divl
mov
or
sarb
mov
clc
lret
out
xchg
jl
test
movsl
push
pop
out
sbb
aad
xchg
mov
pop
xor
out
fidivs
pusha
inc
pushf
ret
mov
aaa
ret
adc
adc
cmc
xor
cltd
pop
push
loopne
fistpll
sahf
iretw
xchg
cmpsl
pop
add
jl
std
adc
je
daa
cmp
add
mov
pop
idiv
ret
or
out
inc
add
cmp
mov
jne
sti
jp
dec
add
ficoml
xchg
loop
sbb
test
dec
mov
mov
xlat
or
mov
std
lret
gs
insl
dec
ret
mov
in
shl
sub
jecxz
mov
jbe
xchg
adc
shlb
xchg
stc
cmp
mov
in
leave
mov
js
je
mov
mov
cltd
int
sub
cmp
lret
add
push
pop
rclb
add
ja
orl
and
xchg
push
jmp
dec
sahf
cmpsl
mov
mov
ss
sub
repnz
mov
ficompl
ljmp
in
inc
jb
dec
popf
fucom
sarl
testl
pop
gs
aad
call
int3
adc
scas
gs
or
bound
push
cld
mov
push
mov
adcl
pop
int3
repnz
out
sbb
insl
addr16
aaa
fdivs
sbb
mov
insl
out
sbb
or
sti
scas
cmp
aaa
pop
cmp
rorl
imull
dec
shll
sbb
jge
loope
pushf
ja
sahf
sbb
daa
push
popa
push
xchg
lods
pop
filds
pusha
adcb
mov
and
decl
inc
mov
mov
addr16
shll
cmp
aad
arpl
pop
leave
cmp
or
mov
dec
ja
mov
ror
ss
mov
adc
test
jge
ss
xchg
jl
inc
insb
jle
lock
das
popl
push
loope
jmp
in
pop
adc
sahf
and
jae
inc
xlat
out
push
sbb
test
sub
dec
and
lret
fnsave
dec
xor
mov
xchg
xor
inc
or
gs
jbe
adc
xchg
xor
stc
jno
test
aas
lea
dec
mov
mov
xor
repz
jae
mov
xchg
mov
es
push
call
xchg
mov
and
sbb
sbb
xchg
mov
ror
sarl
jmp
xor
add
add
dec
xchg
xlat
mov
pop
sbb
mov
bound
les
mov
pop
je
in
pop
stc
xchg
inc
dec
and
clc
inc
mov
movsb
pop
xchg
inc
mov
xchg
sub
jge
xchg
and
push
call
push
pop
fisttpll
outsl
jo
jmp
shlb
mov
xchg
or
lret
jl
xor
dec
or
add
xchg
and
repz
jb
jb
mov
fcmovu
sub
push
fimuls
mulb
ljmp
ja
dec
sub
pop
rorb
sbb
test
mov
sbb
add
adc
jp
hlt
inc
adc
cmc
hlt
lcall
aad
out
loop
mov
push
inc
cld
ljmp
adc
xchg
daa
imul
arpl
icebp
imul
sahf
xchg
adc
test
or
pop
cmpsb
imul
call
pop
incl
xchg
jge
xor
jge
insb
cmp
add
ret
popf
or
sar
imul
clc
pop
mov
add
mov
mov
repnz
mov
cmp
daa
icebp
xor
xlat
aas
push
dec
or
adc
pop
outsl
icebp
push
jo
adc
jb
stos
push
adc
cmp
mov
sub
adc
popa
pop
xchg
add
dec
mov
sub
cmp
dec
lock
sbb
sub
daa
imul
pop
fwait
mov
ffreep
out
scas
mov
inc
inc
outsb
mov
push
xchg
lea
push
cmp
add
repz
shrb
adc
push
mov
dec
pop
xchg
pop
cmpb
push
xchg
jle
js
jmp
sbbl
push
dec
in
cmp
add
enter
xchg
jecxz
jmp
pop
pop
dec
sub
pop
push
aaa
xlat
mov
out
dec
loope
out
ret
cmc
inc
das
cmp
mov
mov
cli
cmp
test
lds
mov
or
jae
sahf
cld
vmaxpd
cmp
loopne
movsb
cmc
mov
gs
in
in
lea
push
xchg
or
movsb
arpl
xchg
outsl
cmp
rcrl
inc
pop
and
int3
mov
pop
in
add
enter
lcall
shrl
mov
sub
test
adc
xchg
mov
dec
pop
mov
cs
sarl
inc
daa
pop
xor
gs
xor
mov
add
and
and
iret
fsts
xchg
pop
ja
xor
hlt
mov
shl
aad
mov
loopne
cmp
fcoml
mov
fs
lods
add
das
mov
call
decl
pop
stos
subl
lea
rolb
mov
pop
xchg
mov
outsb
rcrb
mov
icebp
sti
sub
jnp
fcomps
repnz
inc
ljmp
xor
ret
adc
sti
lock
sub
in
mov
jecxz
popf
outsl
add
mov
lea
sbb
loope
ficompl
cld
lock
jmp
mov
pusha
adc
cmp
nop
in
lret
sub
mov
jno
xor
add
add
pop
sti
scas
loopne
repz
pusha
fildll
in
das
lea
lret
or
cmp
push
bswap
sub
jecxz
stos
or
out
dec
pop
mov
popf
sahf
fnop
fwait
push
leave
inc
xor
jnp
insb
pop
fisttpl
push
xlat
mov
setge
cmp
dec
inc
mov
sub
fwait
nop
jl
and
in
imul
pop
fs
and
shll
mov
jg
dec
fs
mov
das
js
aaa
fdivrs
test
mov
xchg
out
fldl
xorl
bound
lock
add
xlat
or
xor
adc
sub
add
mov
int
enter
xor
add
outsl
mov
and
cmp
mov
mov
mov
andb
or
in
sub
sbb
and
fnsetpm(287
or
and
mov
sbb
mov
pop
lcall
ficomps
aam
add
jns
and
dec
neg
aaa
lea
adc
inc
jns
into
or
sti
in
jno
add
jmp
and
pop
movsb
xchg
cmp
add
mov
icebp
ljmp
mov
or
push
and
mov
jae
mull
repnz
ss
cmp
or
mov
cmp
inc
imul
mov
sar
outsl
arpl
ja
fdivrp
scas
and
dec
mov
daa
test
xchg
in
sbb
mov
and
sbb
sbb
xlat
xchg
jae
pop
repnz
jmp
repz
shrl
jns
imul
mov
pop
jmp
mov
insl
stos
addb
mov
aas
and
xchg
xchg
int3
cmp
lods
xchg
push
xchg
pop
mov
cmpl
adc
pop
outsb
loope
jns
pusha
dec
fisubl
bound
or
fwait
imul
pop
test
fwait
dec
inc
or
adc
mov
xchg
mov
xor
ret
push
jo
sarb
insl
xchg
loop
repnz
cmp
pop
mov
loop
movsb
les
jmp
test
adc
jg
mov
lods
stc
xchg
inc
repnz
nop
int
jns
dec
in
ljmp
dec
int3
pushf
jmp
cmp
push
jecxz
jle
lds
jg
aad
mov
popa
test
cwtl
push
mov
cs
jnp
mov
add
lods
mov
xor
xor
sub
das
pop
inc
addr16
sub
rcr
in
int
xor
pop
movsb
push
fsubrs
push
add
sub
scas
xchg
into
add
cmp
mov
or
stc
in
dec
lahf
cmp
lret
pop
in
mov
insb
outsb
mov
cmp
xchg
mov
sub
add
ljmp
jl
xor
adc
es
mov
lcall
xchg
sbb
dec
fiadds
cmp
sbb
mov
or
mov
cld
xchg
in
cli
inc
les
das
repnz
mov
push
int
inc
sbb
adc
in
stc
loop
or
lahf
push
insl
mov
fs
add
pop
test
jmp
mov
das
in
pop
and
outsl
jl
js
mov
inc
in
inc
or
jecxz
test
push
mov
aad
pop
adc
leave
call
cmp
loop
pop
and
mov
push
ds
lods
sub
nop
jo
jnp
fwait
and
out
dec
add
enter
xor
je
pop
jecxz
repnz
xchg
pop
push
dec
fldl
outsl
test
scas
enter
xchg
out
addr16
mov
mov
test
out
jne
add
jge
aad
fnstcw
add
daa
insl
mov
add
pop
sub
lret
or
mov
pushf
add
dec
popa
stos
adc
mov
cmpsl
test
jmp
sub
not
sbb
or
dec
or
cmp
cld
fmul
rorb
mov
mov
add
cmc
pop
out
mov
or
xchg
mov
inc
pop
jecxz
xor
outsb
sub
pop
sahf
popf
inc
pop
in
xchg
test
inc
sub
adc
dec
subb
mov
loop
popl
jg
mov
mov
push
sub
cmp
div
xchg
and
jae
clc
jmp
mov
or
popa
cmp
stos
hlt
jns
sti
inc
in
xor
ss
push
fchs
mov
fcmovbe
imul
sub
cld
and
aas
jmp
scas
clc
jno
pop
iret
pop
pop
mov
rclb
xlat
addb
mov
pop
mull
or
cmp
mov
mov
lcall
popf
outsl
cmp
nop
enter
enter
mov
adc
in
mov
mov
rolb
push
push
inc
outsl
gs
jae
xchg
push
sahf
and
inc
sub
cmp
and
test
jg
mov
lret
mov
repz
ss
xlat
out
cltd
add
jmp
cld
outsb
inc
sti
xchg
inc
out
pop
rolb
dec
push
leave
or
adc
sahf
stos
push
out
mov
cmp
or
insl
inc
not
movsb
movsl
call
pop
lds
in
cli
push
imul
inc
movsb
lods
notl
mov
and
sub
mov
inc
push
mov
inc
mov
shrl
in
jnp
outsb
jbe
dec
xchg
pop
xchg
jl
mov
mov
jmp
aas
sbb
xor
xor
inc
sub
ja
fisttps
sbb
jge
adc
xchg
dec
sbbb
or
xchg
pop
adcl
rcll
repnz
xchg
mov
jns
mov
xor
cmp
and
jmp
stos
outsb
sub
subb
push
or
filds
inc
jb
lods
cmpsl
cwtl
xchg
xor
sub
and
cli
fldl
test
mov
push
cmp
imul
adc
pop
out
in
in
push
orl
dec
pushf
sarl
nop
xchg
cmpsb
push
and
push
cld
repz
cld
sbb
cmp
std
dec
add
call
arpl
stc
add
jne
fists
pusha
xchg
insb
clc
movsb
inc
jns
mov
test
jl
mov
shr
fstps
dec
xchg
shrl
dec
sub
inc
pop
sbb
xlat
cmp
sbb
mov
stos
rolb
shl
rcr
lods
inc
repz
adc
xrelease
xchg
popa
ss
pop
stos
loop
jb
psrad
mov
mov
dec
mov
inc
inc
adc
lods
ret
filds
jb
pusha
and
push
ds
cs
mov
jbe
pusha
pop
pop
inc
sti
mov
cmc
fsubrs
movsl
mov
xchg
xchg
cmp
ss
testb
aam
or
aas
xor
sbb
int3
repz
pop
adc
adc
lahf
jp
aad
cmp
stos
out
int
mov
aad
and
mov
in
popa
fstl
jo
inc
mov
mov
push
push
jg
mov
xchg
and
cli
mov
lret
push
ljmp
or
test
xor
lods
pop
sub
jg
and
femms
lods
aas
imul
xchg
push
or
hlt
pop
mov
sahf
movsb
sbb
cmpsb
xchg
push
cmpsl
daa
or
cmp
dec
push
mov
test
dec
je
mov
leave
mov
jge
sub
scas
mov
lret
add
xchg
popa
push
bound
js
inc
fistl
push
add
arpl
and
dec
mov
sbb
sub
mov
loop
ficompl
rcrl
scas
sub
pop
in
mov
or
pop
sub
pop
jne
insl
outsb
sbb
mov
adc
add
pop
loope
jbe
jbe
lds
push
cld
and
and
adc
pop
roll
jecxz
mov
lods
jl
jbe
inc
popa
in
sbb
sub
xor
pop
or
dec
fiaddl
not
push
dec
dec
mov
and
xor
mov
push
fdivrp
data16
decb
or
xorb
add
aaa
imul
xor
jp
jp
xlat
add
adc
stos
adc
xchg
addl
add
jmp
rclb
stc
and
test
adc
xchg
les
push
ja
mov
add
std
int
scas
jl
stos
add
cld
shrl
insb
stc
mulb
xchg
aaa
inc
rcr
cltd
lret
sub
mov
push
sub
or
clc
jb
movsl
jno
mov
in
xchg
jae
lods
sbb
popa
push
imulb
pop
mov
iret
jecxz
xchg
mov
pop
adc
inc
mov
rcll
cltd
inc
push
rcrl
inc
inc
pop
int3
outsl
mov
sub
cld
clc
cs
sarl
mov
ds
jb
inc
movsl
xor
out
cmc
sub
divb
shrb
lret
int
stos
pop
in
push
mov
test
or
push
sub
push
je
loope
insb
mov
pop
sti
mov
test
xlat
add
pavgw
out
dec
inc
lret
push
inc
test
jecxz
xor
movsb
push
test
xchg
mov
test
in
adc
jns
fbstp
sub
dec
iret
push
testb
int
lret
mov
pop
shrb
dec
lods
cmp
cs
test
loop
lea
sbb
in
leave
sub
sar
fcoml
lahf
add
das
cs
mov
cmp
mov
repnz
test
push
stc
push
push
leave
rorl
jne
xchg
add
pop
add
xchg
sub
scas
ja
ret
ja
add
sbb
or
mov
mov
je
or
mov
inc
stos
lods
sahf
mov
into
les
inc
or
mov
cmp
push
xchg
jmp
push
sti
ret
lods
mov
sub
in
mov
mov
pop
sub
pop
imul
jle
ror
fbstp
dec
rcrb
pop
shll
inc
stc
cltd
iret
arpl
adc
das
fcoml
ja
test
and
out
dec
lret
add
push
pop
cmp
scas
add
decb
fwait
std
movsl
sbb
dec
jnp,pt
pop
mov
pop
push
jecxz
sub
pop
add
adc
cli
push
fldl
outsl
add
add
test
or
cltd
stos
xchg
mov
fisubs
imul
and
leave
dec
mov
test
int
mov
mov
xor
fidivrl
mov
or
call
and
stos
jo
rorl
push
mov
mov
push
pushf
xor
xchg
cmpb
pop
fldt
stos
or
cmpsb
pushf
shrb
add
fisttpll
jns
or
inc
and
fdivl
fwait
pop
pop
mov
sub
pop
mov
aam
in
ja
gs
out
mov
mov
iret
rcrl
stos
mov
pop
dec
pop
in
sbb
clc
and
push
sub
repz
cmp
insl
call
lea
roll
jmp
fnstsw
out
int3
fnsave
pop
jmp
ret
loop
dec
out
inc
test
mov
lret
xchg
addl
mov
pusha
je
scas
fmull
push
adc
filds
jle
stc
pop
pop
js
mov
jns
rcll
mov
jns
imul
in
leave
push
ret
lods
jne
mov
insl
lret
sub
rcrb
push
pushf
stc
nop
lcall
je
hlt
nop
jg
inc
rcl
dec
jle
cs
pusha
and
in
subl
pop
push
mov
pop
aas
loop
sbb
xor
and
lret
mov
jmp
pop
fsubs
mov
inc
test
aad
inc
das
jg
insl
in
push
or
lea
or
aad
or
and
mov
clc
rorb
enter
stos
inc
lahf
ret
xchg
addb
jle
lods
xor
daa
mov
movsl
popf
xchg
push
mov
xchg
or
push
aad
lods
pop
pusha
pop
loope
pop
dec
fidivrs
cmp
imul
mov
add
mov
adc
pop
push
add
in
adc
insb
sarb
push
lcall
loope
push
fidivrs
mov
sub
inc
mov
jl
out
inc
cmp
inc
lods
mov
dec
cli
pop
repz
adc
enter
lock
jbe
lea
out
xor
mov
jno
int
fsubrl
and
adc
pop
cmp
xchg
xor
add
data16
cld
loope
lahf
pop
lcall
out
mov
inc
xlat
mov
ja
push
in
loop
fwait
push
decb
out
pop
frstor
xor
xchg
xor
in
add
jl
or
gs
sbb
fnstcw
cmpsl
and
int3
test
mov
insl
cmp
jbe
lahf
repnz
and
outsb
inc
rorb
mov
xlat
dec
or
aas
pop
pop
xchg
into
data16
sbb
imul
mov
imul
xchg
mov
das
pop
mov
xchg
jge
pop
adc
dec
incb
sahf
sbb
sub
and
mov
jae
loop
clc
inc
gs
and
das
push
mov
int3
je
and
sub
add
test
push
bound
sub
sub
sub
outsb
rcrl
pop
xchg
outsl
mov
pop
mov
and
loopne
cmp
push
jo
and
call
ficomps
dec
mov
dec
popa
inc
popa
pop
xchg
aam
bound
int3
add
and
outsl
fs
inc
mov
aaa
scas
fcompl
pop
cltd
mov
xchg
jno
cmp
pop
and
cltd
ficoml
imul
out
fdivs
mov
push
stos
shll
inc
test
scas
push
addr16
dec
js
les
adc
jbe
jb
sub
daa
push
jge
scas
adc
scas
lea
mov
iret
jle
scas
push
mov
add
subl
icebp
inc
sbb
test
loope
jne
dec
into
pop
aam
xorl
es
lods
and
popf
inc
sub
push
notb
cmp
add
int
cmc
add
dec
adc
adc
mov
fistl
cmp
dec
shlb
sbb
sub
xlat
or
pop
push
notb
push
jne
mov
xchg
call
sub
loop
repnz
ds
cmp
ret
dec
ja
pop
xchg
mov
rorb
xor
pop
ja
stos
pushf
inc
insb
or
push
inc
aas
adc
lods
mov
xchg
dec
inc
in
add
stc
inc
fcoml
scas
sbb
jbe
adc
into
sarl
xor
test
sahf
xchg
jae
or
aaa
mov
cmp
popa
and
stos
inc
mull
sbb
mov
scas
insb
int3
cmp
call
mov
xor
sbbl
bound
loopne
outsb
dec
cmp
ds
mov
sbbl
insl
js
cmpsl
xor
fldt
sub
sub
test
sbbl
xchg
xor
lret
pop
test
bswap
hlt
push
fdivrl
sbb
aas
rolb
sub
jecxz
idiv
shr
loope
pop
mov
mov
pop
sbb
xchg
arpl
xorl
je
or
add
leave
cld
pop
sub
push
xchg
outsl
addb
out
push
call
inc
and
roll
xchg
cmp
inc
push
jns
sti
jmp
in
rcrl
adc
jl
mov
ljmp
dec
call
mov
add
xor
into
push
inc
enter
jne
push
push
jp
lods
enter
les
push
adc
xchg
ja
loope
sarl
testl
rcr
mov
aas
rolb
ds
mov
and
rcrb
jbe
dec
xchg
xor
adc
or
dec
roll
cmp
imul
movsb
lods
push
subl
push
xchg
dec
std
pushf
mov
inc
push
int
xchg
mov
mov
sbb
jb
faddl
mov
push
cmc
lods
ss
mov
sbb
or
fldcw
out
fists
xor
mov
adc
inc
ret
testb
inc
mov
mov
inc
repz
mov
mov
jmp
into
aas
fmuls
add
xchg
fdiv
push
in
and
test
sub
lock
addr16
lods
cmpsb
scas
lcall
inc
mov
dec
test
push
imul
pop
cmp
cmp
fs
push
scas
adc
jns
xchg
push
mov
pop
cmp
and
lods
or
add
std
les
sub
ljmp
mov
shl
inc
mov
jo
jmp
sbb
shlb
outsl
mov
in
int
pop
dec
xorb
adc
mov
sub
jne
mov
or
jmp
enter
push
gs
loope
sbb
mov
xor
xchg
fwait
in
adc
leave
push
sbb
push
pop
rorb
outsb
jne
cmp
fucomip
mov
and
jge
cmpsb
pop
repnz
mov
push
ror
pop
ljmp
xchg
or
ret
hlt
fdivr
mov
sub
adc
dec
es
data16
cmpsl
cmp
adcl
inc
int3
pop
cmp
lret
in
hlt
mov
mov
movsl
push
jnp
dec
lods
mov
shl
popa
into
dec
sub
cmp
rcrl
sub
out
jmp
js
cmp
mov
inc
fisubrl
cwtl
sbb
jg
repz
idivb
xor
fsubl
jmp
dec
mov
test
imul
addr16
add
addr16
sub
sub
cmpl
inc
cmp
in
loope
or
scas
xchg
andl
push
aas
jb
js
notl
jne
pop
in
sub
push
je
loopne
cltd
mov
rcl
daa
sub
xor
mov
lret
inc
ss
jnp
ret
setp
adc
cmc
xor
push
add
pop
cld
and
cmovle
xor
xor
jo
rorl
pop
mov
aas
mov
dec
and
out
rcrb
lret
outsl
adcl
or
cli
insl
stc
or
add
xor
jae
loope
push
cli
in
add
sub
xchg
sbb
arpl
add
andl
lahf
sub
int3
pusha
in
movsl
andb
mov
ja
sbb
lcall
je
and
cmp
cmpsl
lahf
xchg
add
pop
mov
cmp
adc
addr16
aas
or
out
and
lods
lcall
inc
dec
insb
xor
lock
mov
loope
fnsave
mov
or
jne
loope
sub
clc
xchg
add
or
sub
neg
hlt
cmp
sub
inc
pop
ljmp
inc
xor
outsb
int3
sbb
or
xchg
scas
sub
xchg
mov
je
xorb
and
out
loopne
in
dec
aam
outsb
add
leave
inc
jmp
popf
sbb
loope
lds
push
add
jae
adc
fucomp
xchg
lret
push
dec
pop
push
jne
or
loop
cmp
jo
dec
xor
dec
popl
stc
pop
and
or
add
add
pop
xor
xor
pop
xchg
ficoml
mov
cmp
mov
int
push
shlb
jge
movsb
sahf
sub
mov
dec
add
adc
jo
lods
into
pop
or
jmp
adc
bnd
xchg
mov
insb
rol
stc
xchg
sub
icebp
das
jge
inc
sbb
pop
stos
cmp
fnstcw
imul
dec
dec
lret
fisubs
inc
or
fyl2x
cmpl
loopne
adc
add
inc
inc
bound
dec
sub
pop
xor
xor
dec
jge
push
fstl
sub
sbb
xchg
and
hlt
xor
and
loope
mov
and
mov
cmp
cli
inc
push
mov
ret
popfw
mov
cmp
or
dec
repz
inc
xchg
and
xor
movsl
hlt
mov
sub
popf
add
push
push
sbb
fldt
cmp
inc
loope
movsb
orb
or
pop
shlb
addr16
aas
sbb
cmp
scas
and
add
sbb
inc
test
aas
xchg
ljmp
pop
push
mov
xlat
or
mov
shr
outsb
sahf
imul
xor
jl
push
xor
adc
push
xchg
or
xor
out
jecxz
push
mov
cmp
imul
shr
enter
or
in
inc
push
sub
call
out
mov
add
fs
add
repz
daa
mov
enter
mov
jp
cltd
xchg
xchg
fs
sub
add
xor
mov
pop
dec
rorl
cli
je
pop
pop
hlt
pop
push
pop
shrb
addr16
scas
out
cmp
dec
fcoms
add
cmp
comiss
pop
mov
push
insl
xor
je
sub
jnp
dec
mov
inc
sub
sub
daa
mov
mov
jmp
icebp
mov
sbb
jp
pushf
dec
jns
test
sub
ja
les
imul
clc
test
paddb
subb
aas
xchg
aad
mov
dec
dec
js
stos
aam
mov
xor
xchg
aaa
lock
fistpll
xchg
pop
movsl
imul
shrb
rorb
sbb
push
adc
insb
push
xchg
mov
in
sub
mov
stc
or
outsb
xchg
push
out
std
mov
repnz
xchg
fstps
xor
aas
out
and
fs
mov
sub
flds
test
enter
and
add
jns
out
adc
jp
jl
lds
push
rorb
out
lret
xchg
pop
scas
pop
or
cmp
cltd
pusha
bnd
jne
xor
nop
push
cld
jp
lret
aad
sbb
bound
aas
jne
cwtl
mov
mov
inc
into
stc
push
jmp
je
dec
leave
decb
sbb
data16
mov
mov
cmpsb
push
mov
mov
mov
xor
in
dec
or
or
dec
rorb
jb
ss
xorb
push
js
out
fcomp
cli
pop
cli
fildll
mov
cmpsw
or
mov
push
mov
xchg
add
in
sbb
out
xor
dec
aad
and
lods
test
inc
mov
ljmp
and
loope
cs
mov
add
mov
push
cli
stos
or
xor
dec
in
mov
lock
test
mov
lret
das
push
cltd
test
fdivs
lret
jle
or
pop
aam
cmp
cmp
pop
das
dec
movsl
cltd
out
add
or
pop
and
sbb
sarb
xchg
jns
mov
imul
jo
add
aam
xor
mov
mov
mov
sbb
cwtl
and
outsb
cmp
ret
stos
sub
pop
andb
in
jl
sbb
rcll
ret
push
and
jg
data16
mov
adc
mov
jl
and
movsl
xchg
xor
roll
jle
addr16
sub
mov
push
jecxz
addr16
jns
mov
push
add
jbe
movsb
cltd
cmp
add
push
daa
adc
lods
inc
loope
cld
mov
cmp
daa
or
and
shlb
add
mov
xchg
cmpsb
add
out
addb
addr16
inc
aaa
iret
sbb
lods
push
dec
popa
ret
and
divb
and
mov
lds
xor
sub
rcrb
cmp
hlt
pop
push
lret
cmpsb
pop
ja
mov
mov
test
fsubrs
lret
xchg
sbb
push
mov
lcall
daa
mov
xchg
or
mov
mov
aaa
dec
jno
pop
cmp
xchg
jns
jbe
pop
mov
inc
inc
std
stc
cmp
pop
inc
mov
out
push
push
das
test
jge
ret
xchg
sbb
in
das
test
jle
mov
lods
mov
in
mov
mov
xchg
xchg
mov
jg
out
jecxz
mov
pop
popa
hlt
outsb
daa
mov
setae
and
push
imul
aas
imul
fwait
popa
fsubrl
popa
push
jbe
stc
inc
jne
and
pop
ret
sub
orl
stc
popf
lret
jl
xchg
adc
pusha
sub
mov
mov
in
fwait
or
pop
cli
imul
imul
lea
xor
xor
dec
lods
outsb
call
std
xor
sahf
push
imul
leave
sub
lret
data16
lock
mov
inc
jo
jns
sub
fldcw
addb
or
mov
jno
sbb
inc
mov
pop
xchg
into
and
les
ss
inc
pop
mov
sbb
lds
add
xchg
cmp
and
std
out
dec
lods
xor
push
or
jl
lahf
lock
push
mov
in
ret
xor
lret
sahf
or
cltd
mov
xchg
arpl
pop
enter
movsb
lea
sbb
mov
xchg
ds
je
jbe
mov
adc
aad
add
mov
push
xlat
nop
add
je
dec
pop
hlt
test
jb
mov
mov
inc
or
lret
dec
and
pop
mov
cmp
jp
add
cmp
cmp
repnz
movsl
popf
aad
ret
cmpsl
mulb
push
push
data16
mov
mov
stos
dec
rorb
xchg
lahf
mov
sbb
xorb
rcll
mov
mov
fwait
mov
xchg
inc
jbe
sub
lret
pop
jmp
add
mov
mov
lret
je
icebp
lret
add
or
pop
sbb
jne
sbbl
and
push
pop
lahf
int
mov
mov
mov
insb
mov
fnstenv
pop
rcrb
push
jbe
adc
stos
ds
js
data16
sarl
pop
bound
and
xchg
out
rcrl
sbb
add
push
inc
imul
and
fnsave
sub
lahf
fldt
push
lds
mov
adcb
pop
dec
jle
push
dec
add
sbb
xor
sarb
sub
jo
or
rcrl
aas
push
outsl
cmp
stos
icebp
or
push
fisubl
cli
call
dec
outsl
mov
hlt
mov
xchg
push
inc
mov
jae
stc
add
mov
cmp
push
fstpt
aam
push
ss
test
mov
inc
mov
adc
ljmp
bound
push
xchg
insl
ljmpw
sbb
icebp
loop
push
data16
xchg
dec
ss
sbb
ret
jmp
push
repz
dec
pushl
inc
cmpsb
out
cmp
nop
into
rcl
lds
in
jmp
jae
xchg
sarl
sub
aam
fiadds
inc
shrb
ja
int
adc
inc
add
ret
sub
ja
inc
add
jns
cmp
cmp
cmp
arpl
dec
aaa
sahf
je
cwtl
mov
xchg
xlat
mov
adc
inc
push
in
sub
adc
ja
lcall
jecxz
jle
mov
xchg
dec
lds
cs
and
mov
sub
dec
dec
and
lret
push
bound
or
mov
sub
mov
xor
movsb
and
insl
je
cmp
dec
cs
mov
mov
mov
out
cld
mov
fwait
adc
jnp
adc
or
cmp
fisttpl
sbb
mov
dec
hlt
push
in
mov
sub
fisubrl
jno
lret
dec
dec
sbb
test
mov
mull
mov
mov
sbb
xchg
xchg
arpl
les
xchg
dec
sbb
sar
out
xchg
mov
pop
int
pop
adc
ret
mov
dec
xlat
fiadds
mov
push
lds
pop
cmp
or
xchg
pop
insb
pop
movsb
push
ret
xor
mov
andl
int
xchg
pop
cmp
jo
nop
sub
loope
mov
cmp
stc
xor
ja
notb
iret
orb
jg
fbld
mov
push
mov
mov
lcall
push
and
dec
push
and
xor
icebp
mov
jo
js
test
or
fists
out
test
in
xlat
xor
push
scas
inc
pop
mull
inc
subl
jge
into
adcb
pop
dec
aad
mov
inc
mov
push
or
push
out
lds
les
in
nop
sub
sbb
cli
rol
sbb
cli
out
pop
insb
testb
subb
inc
push
adc
stc
scas
pop
sub
sbb
xchg
int
cs
cmp
shlb
repz
popf
push
jne
mov
add
in
shrb
dec
mov
sbb
add
mov
int3
lret
inc
cmc
insl
loopne
lds
add
jnp
adc
repz
push
pop
testb
ficompl
in
adc
mov
and
cmpsl
cmc
sub
scas
push
lods
pop
dec
sbb
shl
fs
sbbb
cld
loopne
gs
dec
lock
popf
ja
push
pop
sub
xor
sbb
call
loope
jle
jo
mov
xor
push
fsubs
fnstenv
popa
aam
sbb
ljmp
add
mov
xchg
mov
xor
cwtl
adc
pop
pop
aas
mov
aam
inc
dec
push
roll
mov
in
mov
push
shll
inc
fldl
inc
push
sub
jae
aad
ljmp
mov
movb
cmp
lret
sub
mov
mov
and
mov
cmp
pop
call
jae
mulb
fsincos
fbstp
adc
cmpsb
clc
sbb
mov
dec
ret
dec
push
and
xchg
popa
ror
int
fistpl
xor
hlt
imul
fsubs
sbb
scas
xor
and
je
pop
dec
add
xlat
pop
mov
mov
shll
sbb
stc
jmp
jmp
sbb
bound
mov
push
or
sahf
addr16
mov
test
enter
imul
dec
xchg
push
xchg
jne
imul
mov
push
idiv
and
pop
pop
popa
lock
jo
aad
loopne
fadds
mov
xor
lods
pushf
mov
xchg
imul
mov
lcall
mov
das
pushf
mov
push
mov
insl
jns
lret
push
in
add
sbb
fimuls
repz
cmp
or
or
lcall
dec
or
xlat
xchg
iret
jg
mov
testb
insb
cmc
or
push
les
cld
cltd
mov
gs
jo
into
fmuls
push
or
and
lock
lcall
dec
mov
cmp
push
mov
aad
aaa
and
jecxz
and
test
clc
pop
cmp
sti
mov
mov
clc
mov
push
lods
jmp
int
inc
dec
int3
cmp
hlt
cli
cs
xchg
pop
in
stc
stos
jo
cmp
loope
jo
sbb
es
lds
es
sarb
daa
pushf
and
xchg
popa
ret
xlat
jp
ret
cwtl
aas
push
loopne
jnp
imul
mov
xchg
lcall
and
xchg
pop
cmpsb
jne
dec
imul
lock
aaa
or
stc
jg
xor
mov
out
rcl
int3
lock
lods
cltd
mov
test
mov
fistps
inc
leave
jmp
mov
or
pop
push
adc
nop
cmp
mov
ja
cmp
or
loope
cld
aas
pop
pop
jne
fst
stos
cmp
push
sysenter
add
lods
aas
and
nop
daa
int3
movsb
mov
adc
xchg
scas
pop
add
ja
scas
jns
sbb
in
aam
pop
or
mov
mov
or
pop
pop
lock
mov
sbb
push
xor
mov
lock
incl
out
fstpt
inc
dec
push
adc
ljmp
push
mov
data16
imul
xchg
jnp
jp
sbb
jl
mov
in
je
in
shlb
call
xor
sbb
aad
dec
mov
out
jecxz
shufps
test
shlb
rcrb
mov
movsl
pop
or
and
mov
xchg
sbb
lods
fimuls
out
sub
mov
mov
frstor
inc
in
lods
insl
pop
in
sbb
call
sub
cmc
add
repz
inc
ret
js
push
in
mov
mov
add
popa
outsb
js
shlb
or
cmc
and
adc
mov
jl
call
movsb
mov
sbb
sti
sbb
mov
imul
adcb
imul
orl
fsubr
mov
mov
lea
and
push
lods
add
pop
int
jle
lods
aas
call
gs
outsl
dec
pop
push
jle
pop
mov
add
mov
mov
orb
and
ds
mov
cmp
dec
es
xchg
mov
pop
jb
ret
cmpsl
test
or
push
outsb
add
mov
add
cmp
aaa
inc
aaa
and
push
ljmp
sub
cmp
sbb
int
mov
in
or
dec
aaa
cmpsl
mov
or
test
gs
sub
jne
or
loop
lea
and
push
cmp
test
das
xor
lds
subb
mov
loope
push
pop
mov
pop
dec
fcompl
pusha
cmp
jns
mov
lret
or
or
int
iret
cmp
push
ljmp
fsin
repz
xchg
test
inc
adc
mov
add
add
mov
aas
pop
mov
push
cmp
iret
push
ficompl
aas
js
enter
lods
into
adcb
bound
fsubr
enter
xchg
dec
testl
movsl
cmc
pop
out
cmp
shll
cmp
push
sub
inc
mov
cmpsl
enter
ret
int3
scas
imul
gs
popf
and
jne
sub
mov
enter
mov
push
daa
sbb
add
sbb
das
addl
cltd
ret
lahf
xchg
mov
mov
xchg
xchg
out
fidivrl
out
fimull
sbb
fsubrs
scas
cmp
adcb
les
in
fistl
pop
outsb
sub
xchg
cmpsl
jmp
ljmp
lahf
sbb
or
leave
xchg
sbb
dec
sbb
jle
jge
ret
orb
mulb
adcb
sub
mov
jl
jmp
mov
mov
and
jmp
inc
or
mov
jmp
sub
icebp
dec
jb
pop
adc
out
sbb
xchg
in
mov
leave
mov
mov
into
cmp
lahf
out
pop
push
xor
fwait
adc
adc
aad
daa
je
dec
and
mov
mov
cli
mov
adc
add
jecxz
jno
jmp
nop
enter
inc
shll
fcmovne
icebp
and
sub
lods
push
jb
jo
add
fisttps
jg
sbb
imul
dec
push
pop
or
xchg
aam
int
imul
call
cmpsb
inc
clc
mov
cmp
gs
jg
mov
lret
loope
and
insl
inc
jle
cmpsl
ja
rcll
push
pslld
sub
loop
in
fs
jae
addl
or
jge
mov
and
les
imul
or
gs
mov
sbb
mov
rcrl
test
inc
shlb
pop
mov
push
mov
aam
repnz
mov
inc
and
jge
jo
popa
lea
mov
jmp
cmpl
repz
idiv
lea
in
fxch
gs
sti
jmp
pop
aas
iret
sbb
fwait
cmpsl
lea
fldcw
popa
or
movsb
mov
mov
stc
sub
inc
jge
rep
xchg
shlb
fsubrs
adc
inc
push
push
in
sub
jnp
jne
jmp
enter
push
sub
mov
scas
aam
add
sub
or
mov
xchg
iret
inc
and
mov
std
repnz
push
out
adc
jp
sub
int3
add
ret
mov
mov
rorl
dec
add
in
ficomps
repz
push
fs
out
mov
stc
ror
xchg
ja
adc
fwait
inc
xor
mov
movsb
pop
scas
cmp
int3
cmc
repnz
lret
jo
inc
rol
pop
fadds
mov
sub
and
je
xchg
rcrl
lds
scas
xor
test
and
pushf
sub
jmp
sub
jns
cmp
scas
jp
or
xchg
add
stos
add
inc
scas
mov
fucomip
push
and
enter
movsl
add
mov
fsubr
dec
inc
cmpsb
aas
lock
cmpsb
aad
push
adc
or
stc
inc
imul
inc
cli
push
push
sub
sbb
add
popa
cld
lea
adc
popf
jmp
dec
add
jb
insb
mov
jb
pop
outsb
lock
sti
call
and
popl
sub
cmp
sarl
pop
das
repnz
push
adc
jno
test
test
lret
dec
dec
cld
mov
dec
lcall
mov
out
push
outsb
popf
mov
cmp
sbb
stc
aas
inc
jae
in
popa
add
lea
dec
das
fiadds
adc
stos
ficompl
jo
loope
xor
dec
push
data16
lds
pop
adc
out
push
sysenter
push
out
or
dec
rcll
jg
adc
test
or
dec
jo
loope
and
arpl
push
push
inc
adc
jne
repnz
pop
test
jbe
outsl
andl
inc
mov
xchg
inc
xchg
sbb
cmp
sbb
imul
add
test
add
push
call
adc
sti
sub
popa
aad
xlat
dec
ret
ja
xor
in
ljmp
adc
addr16
xor
pop
test
mov
jbe
fbstp
mov
pop
add
push
int3
sbb
add
jnp
ficompl
xchg
cwtl
inc
fldenv
push
mov
add
adc
push
ds
std
int3
add
jo
adc
mov
push
sbb
sbb
fdiv
pop
pop
aaa
xlat
jge
xor
mov
add
dec
xor
add
fs
shlb
stc
jge
pop
sbb
call
jle
or
mov
out
sti
les
out
test
jnp
mov
lret
fidivs
stos
scas
mov
in
and
ss
or
scas
sub
stos
jmp
sbb
loopne
mov
int3
stc
sahf
lret
iret
cld
mov
jmp
test
sbb
ja
inc
xor
lret
cmp
jne
mov
add
rcrl
mov
xor
cmp
cmpsl
jb
mov
in
mov
xlat
xchg
pop
adcl
add
xor
inc
notl
jno
enter
or
and
or
nop
adc
push
sub
dec
scas
mov
mov
shr
out
adc
sbb
or
jge
sub
push
dec
addr16
sub
pop
lcall
mulb
test
gs
jl
inc
push
adc
jp
mov
clc
xlat
sbb
lret
push
or
mov
inc
xor
pop
and
aam
orb
popa
dec
orl
cmpsl
outsl
add
mov
sbbb
pop
sub
add
fisubrl
icebp
mov
sbbb
push
scas
inc
xchg
push
sub
int3
test
fstp
dec
and
adc
mov
adc
cmp
push
pop
sbb
in
pop
jnp
push
shr
fs
mov
mov
or
xchg
ss
jns
fwait
jmp
or
enter
movnti
xor
add
push
imul
jmp
enter
lods
pop
fmull
cltd
xchg
mov
jns
bound
es
lcall
pop
js
popf
cmpsb
mov
pop
dec
rcrl
ss
arpl
insb
scas
shlb
pushf
adc
in
lcall
loopne
call
imul
jns
xchg
iret
push
or
shll
mov
mov
int
inc
int
jae
dec
stc
test
inc
lds
add
cmp
dec
ss
pop
std
or
jnp
int3
jne
popf
cltd
rorb
xlat
aad
dec
add
adc
push
lret
out
imul
push
fwait
out
jne
mov
add
outsl
ret
ljmp
inc
cli
test
les
adc
push
mov
pop
out
sub
mov
or
xorl
add
and
dec
in
mov
lock
xor
sub
mov
push
dec
cmp
mov
imul
push
mov
add
jecxz
push
cmp
pop
movsl
and
inc
sarb
shll
add
cmc
cmp
test
xor
shl
cld
mov
repz
out
insl
and
call
push
pop
xchg
test
popa
cvttps2pi
xlat
dec
je
jle
fwait
enter
imul
pop
add
les
xor
jle
xchg
cs
jp
data16
adc
cmp
outsl
pop
mov
push
lock
jle
fs
movsl
xlat
into
pop
mov
mov
and
cmp
ss
rcrb
mov
dec
inc
insb
fildll
inc
pop
aas
nop
movsl
rol
imul
xchg
cld
popa
das
dec
neg
dec
mov
push
sahf
lret
push
clc
push
cmp
xchg
cwtl
adc
xor
push
adc
leave
lret
inc
xor
mov
add
nop
and
das
mov
adc
test
pop
adc
mov
jbe
xchg
lahf
lcall
inc
sar
pop
in
mov
mov
out
mov
jno
cli
xchg
fbstp
inc
lods
inc
xor
cmpsb
ss
mov
aam
hlt
pushf
mov
pop
es
push
hlt
or
or
movsb
cld
loopne
out
imul
or
leave
xor
push
xor
xchg
and
or
and
push
gs
mov
sbb
insl
ljmp
fisubrs
in
mov
xchg
mov
pushf
mov
bound
enter
cmp
adc
dec
out
dec
push
int
dec
clc
dec
cmp
adc
jp
dec
popa
mov
das
leave
jns
sub
rorl
lcall
and
scas
leave
fidivrl
add
orl
inc
mov
cmp
repnz
ds
gs
inc
add
mov
sbb
xlat
test
add
mov
and
mov
adc
mov
pop
mov
aam
adc
nop
fwait
shll
sbb
lcall
xchg
xchg
push
movsb
jne
pop
push
dec
lret
xor
and
and
jge
cmpsl
rclb
jne
jl
shlb
sub
repnz
lods
les
mov
push
mov
jmp
hlt
pop
ss
mov
add
fldt
loopne
mov
sub
push
lods
push
pop
ss
test
xchg
inc
clc
jno
cli
mov
arpl
jmp
dec
mov
pop
inc
xorb
sub
test
popa
ja
cmp
aad
or
jl
bound
imul
cmc
pop
add
call
add
outsb
jae
dec
jne
mov
js
sub
cltd
mov
imul
xor
ds
pop
pop
mov
cmp
shrb
fdivl
xor
and
ljmp
mov
xor
sub
inc
mov
jno
lahf
jb
scas
pushf
rorl
adc
mov
icebp
scas
cli
iret
outsb
stc
jmp
int
xchg
push
xchg
sbbb
or
and
ret
fcomp
je
icebp
mulb
pop
xchg
xor
adc
push
out
test
sbb
aas
in
fisttps
ret
stc
sbb
lds
jbe
mov
shl
add
pop
data16
cmp
push
fstl
movsb
mov
mov
or
andl
fisttps
mov
mov
mov
mov
stos
xchg
js
jecxz
mov
nop
cmp
pop
mov
rcll
jle
mov
dec
neg
or
mov
mov
popa
insb
mov
dec
or
into
leave
and
jo
ds
sbbb
jmp
sub
inc
adc
movsl
sub
repnz
mov
jns
lods
cmp
mov
aaa
repnz
lock
xchg
fcomi
and
cmp
or
jae
sbb
sbb
and
mov
mov
cld
xchg
cwtl
or
in
pop
jno
jge
fwait
mov
iret
pop
imul
stos
jge
repz
and
xchg
out
je
adc
rcll
and
sub
aam
rorb
fcmovnb
aas
xchg
push
or
push
loope
out
jnp
inc
cmp
jl
adc
dec
inc
faddl
test
aad
cmp
lods
out
mov
pop
sbb
push
aam
nop
dec
mov
mov
rcrl
dec
adc
repz
push
insb
or
cmp
sbb
jae
cmp
shrb
aas
ja
int
cmp
jle
ss
mov
lods
inc
xor
shrb
jge
or
dec
push
fldl
jbe
xchg
adc
sbb
pop
scas
into
mov
inc
push
xchg
inc
ljmp
ja
fxch
and
mov
xor
jb
sub
jmp
test
add
mov
int
cmp
mov
bound
ret
cwtl
push
xlat
movsl
xchg
gs
push
fsub
mov
loop
fcoms
hlt
aaa
imul
cltd
xor
lods
ss
pop
cmp
fnstsw
jns
bound
mov
cwtl
dec
cmp
outsb
lahf
jmp
push
jge
or
sbb
lcall
push
push
mov
jne
fwait
dec
push
aaa
movsl
stos
xchg
xor
sbb
das
push
mov
int3
lds
adc
stos
sbbl
scas
insl
inc
xor
sbb
int
pop
js
movsb
cld
aad
pop
push
mov
add
cli
dec
cmpsb
ja
popf
adc
pop
mov
data16
jmp
mov
out
mov
push
cmp
sti
pusha
add
leave
mov
out
inc
jb
movsb
sti
les
mov
xchg
and
pop
sub
xor
inc
sub
cmpsl
lret
push
mov
sub
jle
push
add
cmc
inc
aam
mov
or
stos
jl
jne
cmp
xchg
leave
mov
jo
push
test
shll
lcall
xchg
xchg
xor
es
cltd
fsubr
jbe
sbb
pop
add
addb
out
repnz
and
es
adc
stos
add
scas
je
sti
scas
sub
push
mov
pop
push
cs
sub
dec
dec
jl
sbb
push
enter
mov
sti
and
xchg
or
daa
leave
mov
push
add
or
jo
leave
test
testl
pmaddwd
xchg
mov
lahf
repnz
mov
inc
incl
test
sbbb
push
inc
je
push
stc
mov
stc
in
roll
sbb
mov
jnp
or
xchg
xchg
imul
lock
and
es
jae
sub
add
imul
subl
pusha
and
sbb
int
jp
jl
mov
add
mov
out
js
push
jbe
xchg
push
insb
lret
adc
add
jle
cltd
lds
stos
xchg
cmp
mov
adc
test
inc
in
mov
shl
sub
dec
mov
xor
ror
mov
mov
and
and
stos
mov
sarb
mov
adc
add
or
mov
loopne
push
in
mov
and
or
notb
rclb
and
push
stos
loopne
arpl
inc
scas
sub
adc
test
sub
jns
fwait
xchg
xchg
shll
add
cmp
and
add
jo
jns
jp
add
mov
les
pop
dec
cli
xchg
or
push
jns
add
popa
jbe
mov
aaa
repnz
mov
stos
pop
or
xor
flds
sub
push
adc
jg
push
fs
insb
rorb
faddl
dec
adc
xchg
lret
ror
loopne
jnp
mov
mov
add
inc
sub
movsl
in
adc
inc
out
out
push
movsb
jmp
sbb
mov
cmpsb
ds
std
loop
jns
lahf
int3
inc
outsl
cmc
scas
sbb
sub
push
push
das
jl
pusha
cli
ja
pop
xchg
mov
cmp
cli
int3
fsub
das
movsb
loopne
pushf
push
enter
arpl
sti
popf
imul
sbb
testb
addr16
popa
push
push
mov
cld
aaa
lahf
xchg
movsl
xor
xchg
fs
and
test
inc
jl
roll
scas
adc
aam
repz
mov
repnz
enter
dec
xor
hlt
add
out
jecxz
mov
test
lret
in
daa
and
sub
popa
push
rcl
into
gs
add
in
addr16
aaa
ds
push
ds
pop
pop
pop
or
and
pop
jbe
int3
lcall
mov
fs
enter
push
es
xorb
xchg
imul
pop
or
push
mov
mov
dec
cld
cs
mov
mov
push
or
mov
jecxz
adc
and
popf
mov
jle
and
mov
pop
dec
xchg
jp
stos
stos
push
aas
pushl
xor
shll
sbb
mov
push
sub
inc
orl
mov
clc
stos
fdivrs
jnp
in
insb
pop
mov
adc
sub
cli
imul
imul
dec
std
sbb
or
movsb
ret
cmp
xor
jle
mov
not
sub
sbb
outsl
push
pop
lock
insl
push
sub
fldt
jecxz
add
mov
cmpsl
mov
mov
cmp
scas
or
mov
sub
jecxz
ja
and
xchg
imull
mov
insb
cmp
xchg
sahf
or
pop
icebp
adc
mov
mov
out
jmp
xor
jb
xor
mov
cltd
into
mull
add
testl
out
pop
scas
lret
push
shlb
out
adc
or
popf
push
xor
mov
xchg
mov
mov
cmpsb
inc
bound
scas
jo
faddl
pop
mov
mov
rclb
clc
and
outsb
jb
cld
adcb
cmpsb
flds
pop
out
insl
ret
mov
insl
aam
jne
jge
mov
or
imul
icebp
pop
jge
subb
sub
add
bnd
pop
jl,pt
sbb
push
xchg
cmpsl
jno
sbb
jb
cld
loope
mov
xor
fdivrs
imul
jnp
subb
scas
test
dec
mov
add
push
fnstenv
cs
dec
mov
stos
scas
ja
mov
cmp
aas
jbe
lods
jae
pusha
xor
and
sahf
push
dec
hlt
cmp
inc
roll
cmp
push
pop
dec
xor
movsl
ja
pop
pop
rorl
sarl
adc
rcll
jle
imul
push
std
test
arpl
sarb
dec
adc
mul
clc
int3
pop
cmp
loope
cmpsb
sbbb
jb
pop
popa
stc
movsl
stc
movsl
hlt
loope
xchg
sub
loop
mov
sub
and
adc
sub
xchg
mov
sub
mov
xchg
mov
cwtl
fs
dec
insb
jo
or
hlt
repnz
insl
repz
push
fstp
filds
ret
sub
adc
adc
into
lret
jb
push
jecxz
fdivs
adc
jo
ljmp
js
mov
aam
ret
jno
sbb
adc
sbb
cmp
push
fsub
push
fisubrs
cmc
loopne
sbb
push
dec
dec
fdiv
pop
inc
pop
inc
cmpsb
dec
in
or
push
daa
or
imul
and
inc
repz
xor
loop
pusha
inc
fs
cmpsl
cltd
jno
inc
dec
pushf
int
cmp
inc
dec
jno
sbb
and
ret
push
pop
sub
in
aad
sub
xchg
aad
nop
das
rclb
or
sub
stc
dec
adc
int3
sub
sahf
jge
adc
call
push
int3
pop
or
sbb
pop
adc
sar
mov
jmp
clc
push
cld
mov
outsl
adc
mov
lea
jo
cmp
xor
dec
int
jecxz
cmpsb
ds
mov
jecxz
in
lea
ljmp
fcomp
clc
dec
mov
sub
and
and
addl
ds
loop
jl
inc
out
add
out
jle
sahf
out
adc
jno
lahf
xabort
inc
adc
mov
mov
jge
and
adc
sub
lea
xor
lcall
shll
imul
neg
gs
aaa
mov
sbb
dec
aas
leave
xrelease
stos
xchg
push
jbe
sub
mov
fdivs
fsubrp
xor
nop
loope
shll
xchg
imul
loop
cmp
cltd
daa
pop
mov
dec
cmovbe
not
xchg
cwtl
sub
sbb
push
xchg
iret
lret
cltd
mov
lret
sub
mov
inc
jns
push
dec
inc
jge
jb
stc
out
push
in
int3
adc
add
mov
xchg
cmp
dec
cmc
xchg
ja
mov
xlat
insb
cltd
or
aam
mov
mov
cmc
lods
shl
les
repz
and
mov
cwtl
or
sub
rcrl
test
ss
or
dec
shlb
lods
pushf
movsl
cmp
loope
test
lahf
cmp
pop
xchg
imul
lea
mov
push
loopne
jno
and
or
mov
mov
sub
test
icebp
cmp
pusha
xchg
in
xchg
sub
or
mov
xlat
adc
push
xchg
int
mov
fisubs
shrb
fs
inc
lret
movsb
sub
dec
mov
sbb
das
xor
cld
addb
mov
insb
inc
fisubs
sbb
xor
rorb
inc
dec
mov
sub
adc
or
push
sbb
dec
or
xor
push
out
scas
icebp
popa
cld
cmp
sub
enter
mov
xchg
xchg
ret
jl
in
rcrb
xchg
fmuls
ljmp
xchg
sub
pusha
cmpl
inc
or
in
xor
mul
adc
sub
and
sbb
cmpsl
inc
add
jle
scas
sub
mov
push
stos
mov
pop
popa
xor
mov
or
pushf
sub
mov
xor
test
add
fistps
sbb
adc
iret
je
mov
aaa
lcall
pop
and
add
inc
sbb
fcmovb
int
ds
in
test
fistpll
jp
pop
movsb
sub
xor
adcb
jne
ficoml
in
cli
out
mov
setg
out
lcall
add
add
insl
mov
test
sbb
cmp
xor
push
jge
clc
add
mov
fsubl
loop
mov
in
repnz
inc
cld
sub
je
enter
mov
inc
pop
pop
sti
mov
addl
jo
imul
stos
js
sub
imulb
aam
mov
add
sub
loope
aas
in
mov
ss
gs
aas
cwtl
imul
jnp
insl
shll
xchg
push
adc
out
cmpsb
out
pusha
cwtl
in
shr
nop
frstor
sti
bts
lds
fstpl
popa
fmull
rcrb
adc
addr16
push
jge
test
mov
test
cmp
dec
push
dec
mov
push
pop
xchg
xchg
pusha
push
or
rorl
mov
daa
pop
or
pop
call
pop
mov
loop
fwait
popl
push
daa
out
in
inc
std
nop
clc
mov
and
lods
jb
adc
push
cmpsl
mov
dec
psrlq
clc
test
add
pop
mov
adc
push
cmpsl
popf
cltd
and
repz
adc
ret
add
inc
add
pop
icebp
insb
push
or
std
es
push
adc
pop
repz
xor
and
outsl
jbe
pop
inc
cld
imul
add
icebp
in
lret
lcall
inc
mov
test
fwait
add
dec
mov
inc
jmp
pop
cld
push
jno
xchg
and
shrl
mov
pop
or
pop
mov
aad
das
outsl
jns
negb
jge
adc
fldl
test
ret
roll
or
dec
mov
aam
shrb
imul
cmp
lods
pop
ljmp
xchg
sbb
hlt
imul
and
sahf
fsubp
xor
sub
push
pop
outsb
sbb
cmpsb
data16
test
push
or
stc
lret
fwait
cmp
ds
dec
xchg
adc
adc
jae
lds
dec
out
pop
sub
shrb
sbbl
in
add
stos
test
xchg
add
loopne
sbb
imul
mov
jno
or
mov
or
call
or
js
data16
cwtl
clc
push
jp
out
ljmp
loop
std
ret
mov
clc
adc
repz
outsl
fistpll
jecxz
xchg
mov
in
add
jno
je
sub
addr16
inc
stos
push
push
add
adc
cmpsl
sub
jns
push
push
xor
repz
sub
jmp
push
in
loope
jecxz
pushf
pop
out
cmp
daa
mov
xchg
in
xor
pop
sbb
inc
or
xlat
sub
imul
jo
and
xchg
cmp
xor
dec
and
std
jp
fldl
sbb
push
inc
ss
or
outsb
shll
mov
mov
call
bound
fwait
movsl
mov
push
mov
mov
clc
clc
sbb
in
sbb
jo
dec
cmpsb
aad
sbb
cmp
call
repz
out
movb
rcrl
test
inc
ss
pop
mov
mov
cltd
dec
push
fsts
repnz
rolb
fnsave
loop
mov
cmp
ss
cmp
pop
mov
sbb
mov
dec
gs
dec
jmp
hlt
adc
cltd
cltd
pop
test
push
dec
xor
sub
dec
imulb
dec
inc
dec
daa
scas
gs
cld
inc
scas
or
mov
ret
fwait
lds
sbb
mov
movsl
xor
in
sarl
adc
fisubrl
int3
scas
adc
test
lahf
adc
mov
ds
mov
inc
gs
mov
addps
pop
sub
repnz
pop
imull
es
push
and
dec
cmp
mov
orl
das
xchg
sub
lcall
ss
push
adc
mov
xchg
or
xor
lods
sbb
dec
push
pushf
out
cmp
sbb
data16
out
lea
mov
repz
mov
jne
loope
fdivp
push
mov
enter
xchg
mov
lahf
test
xor
push
scas
jo
addb
lock
and
leave
adc
pop
mov
pop
fstpt
adc
jnp
clc
inc
outsl
xor
mov
jbe
sub
jns
int3
dec
mov
test
ror
divl
sbb
in
nop
std
loop
cli
loope
xchg
xor
ds
mov
jae
sbb
cmp
aaa
in
daa
cmpsb
imul
push
outsb
jo
mov
push
int3
mov
addb
mov
inc
inc
jp
fimull
push
iret
adc
xor
mov
adc
push
cmp
mov
and
or
xor
and
cmc
push
inc
je
push
dec
jnp
jo
xor
and
int
cld
add
pop
mov
mull
mov
push
mov
aas
xor
push
in
xor
es
fwait
jg
nop
mov
nop
mov
cmp
push
cltd
data16
jge
lret
xor
cmpsl
clc
xchg
leave
lret
dec
stc
jo
fsubrs
and
inc
jp
andb
fs
and
or
aas
aas
fldenv
inc
pop
adc
popf
xor
pop
dec
pop
call
aad
cmp
lods
mov
sbb
cmc
sub
adc
jae
insb
inc
push
outsb
ljmp
sti
pop
mov
xor
mov
dec
scas
push
aam
pop
push
sub
xchg
nop
adc
in
mov
stc
mov
push
jecxz
and
jns
mov
pop
scas
xor
sti
movsl
sub
out
cmp
movsb
data16
xchg
cmp
push
aaa
pop
jecxz
inc
insb
pop
or
lds
cmc
dec
jo
push
sbb
repnz
mov
dec
and
int3
add
dec
cld
insl
jle
rclb
mov
fsts
xor
mov
out
aad
and
xchg
in
cs
adc
jns
daa
pop
ss
orl
leave
add
daa
adc
mov
insl
in
mov
add
pop
icebp
jno
xor
ss
xor
push
iret
jmp
xor
gs
jle
mov
cli
sbb
outsl
aad
ret
shl
in
xchg
xchg
cld
sbb
add
mov
cmc
icebp
icebp
sets
pusha
in
loopne
dec
xor
cld
lods
shlb
call
insb
dec
sbb
adc
lret
jns
cmc
popa
adc
repz
cmpsb
xor
adc
lret
mov
outsl
je
push
or
cmpsl
data16
mov
ljmp
add
jg
jmp
cmpsl
orb
mov
adc
insl
mov
push
sub
aam
lock
cld
mov
ret
mov
jbe
ds
cli
sbb
stc
arpl
inc
fidivs
mov
push
out
enter
mov
ja
or
movsb
xchg
pop
jnp
fsub
int
ljmp
imul
icebp
sbb
dec
cmpsl
inc
jnp
es
mov
cmp
inc
pusha
js
and
pop
stos
addb
and
dec
fbld
adc
adc
inc
ffreep
pop
movsb
test
lret
movl
sarl
xor
pop
test
aad
cwtl
mov
xchg
sub
mov
je
rcrl
cmp
test
mov
lods
out
add
hlt
sub
sub
mov
pusha
mov
ljmp
mov
movd
and
call
mov
cmp
icebp
aad
aaa
pop
push
or
dec
in
loopne
push
out
cmpsl
adc
and
mov
ret
push
and
add
out
sub
or
cld
or
clc
int3
test
mov
xor
sub
icebp
call
test
test
or
mov
out
std
mov
imul
xchg
mov
or
mov
cli
push
insl
xchg
enter
loop
sbb
push
imull
push
repnz
or
insl
inc
cmp
adc
push
push
xchg
loopne
jle
shlb
and
mov
mov
jmp
fldt
stc
and
rcll
inc
push
pop
xchg
cmp
das
mov
or
mov
or
mov
movsl
jp
fldl
cmpb
cmpsl
sbb
out
xor
add
jno
and
in
inc
jns
es
pop
inc
fwait
aad
std
inc
mov
andb
dec
xlat
add
cmpl
push
or
out
add
je
jne
scas
scas
add
int
inc
adc
cmp
mov
inc
mov
mov
pop
fsubrs
cld
pop
sar
out
les
xchg
in
xchg
shrb
insl
es
lea
fcoms
push
lahf
cwtl
xchg
inc
dec
mov
pop
mov
and
mov
xor
jp
lock
iret
jae
icebp
mov
jno
inc
call
jae
add
adc
add
add
ja
mov
subl
repz
call
lcall
scas
lds
mov
sub
cmpb
and
cwtl
pop
adc
push
adc
add
insl
pop
lock
cmp
fwait
test
adc
popa
sbb
mov
push
sub
mov
movsb
xlat
hlt
cmp
movsl
push
push
sub
add
jmp
cmp
out
pop
cmp
sbb
je
int
sbb
sahf
in
cwtl
fwait
mov
rclb
filds
addr16
xor
in
pop
mov
movl
add
or
sub
mov
iret
jns
subl
adc
out
mov
sbb
push
iret
mov
clc
mov
lcall
cmc
fs
xor
adcb
stos
dec
call
add
xor
push
cwtl
mov
inc
sahf
cmc
mov
pop
dec
or
cmp
lea
jg
pop
cmp
mov
adc
add
jg
or
out
imulb
test
push
push
add
in
lea
jne
mov
pop
hlt
cmp
lret
and
insb
push
push
push
mul
int
add
cmp
xor
mov
data16
mov
add
jg
and
pop
xchg
scas
je
pop
loope,pn
add
mov
inc
mulb
adc
sub
ret
mov
bound
rolb
jle
fstps
mov
sarb
jle
inc
push
push
add
xlat
mov
pop
pushf
cltd
pop
loop
aaa
or
adc
imul
add
mov
inc
fisttpll
cmpsl
lret
movsl
sub
aaa
int3
lahf
out
sub
in
xchg
xor
and
xchg
pusha
mov
adc
sub
cmpsb
adc
add
mov
in
pavgb
ret
jbe
lock
into
iret
xor
cmp
add
dec
jnp
pop
insb
scas
xor
pop
jne
fidivl
push
inc
test
adc
std
pop
in
add
inc
imul
lret
cld
inc
fwait
sbb
add
popa
data16
inc
mov
xor
push
adc
pop
insl
xchg
fisubrl
nop
or
inc
div
jnp
mov
negl
push
fwait
jns
mov
add
xor
ss
xchg
aas
dec
or
and
mov
loop
adc
cwtl
shll
insl
sub
xor
js
stc
sub
fldcw
das
out
in
push
ds
cmc
testl
inc
inc
nop
ss
cmp
adc
cmp
fidivs
push
and
pop
mov
hlt
and
inc
pop
push
ficoms
mov
popa
mov
cmp
pop
in
sub
movsb
mov
adc
mov
jmp
add
dec
sbb
jbe
cmp
adc
cmp
mov
sub
nop
jmp
push
pop
inc
fs
hlt
cmpsl
sbbl
repnz
mov
dec
push
testl
stos
and
iret
enter
fdivrp
xor
outsb
outsl
cli
mov
pop
bound
pusha
pop
shr
test
jbe
lods
je
imul
and
imul
or
pop
pop
xchg
popf
repnz
xchg
in
das
mov
add
push
popf
out
test
mov
add
xchg
fwait
out
pop
js
imul
and
insl
xchg
dec
mov
or
pusha
lds
int
mulb
and
inc
in
adc
jg
push
lods
insl
and
test
mov
adc
mov
push
mov
movsb
inc
lock
test
pop
aad
pop
dec
cwtl
mov
or
xchg
add
sar
push
in
cmc
add
aas
push
cmp
outsl
sub
outsb
mov
xor
sbb
mov
jne
push
cmpsl
pop
pop
cs
ja
stos
loope
sub
das
xchg
daa
into
xchg
push
push
inc
les
mov
in
enter
or
daa
pop
sub
bound
shll
dec
mov
int3
jbe
lods
das
in
jmp
popa
push
sub
sbb
jb
add
adc
addr16
mov
mov
aad
push
lcall
inc
jb
dec
sub
fisubs
daa
orb
repz
mov
fisubrl
das
aas
fcomp
mov
es
kmovb
push
mov
inc
loope
xor
sbb
shl
or
xchg
daa
lock
icebp
pop
or
fs
test
loopne,pn
or
stc
int
pop
out
jmp
js
adc
into
ja
rcrb
push
les
repz
in
push
mov
sarb
cwtl
inc
enter
movsb
push
jp
cmpb
pop
pop
cmp
shrl
or
ret
add
lahf
dec
push
popa
loop
dec
xchg
out
adc
sti
sbb
jno
adc
subb
repz
leave
int3
cs
fiaddl
inc
test
xchg
fwait
xor
std
notl
dec
je
dec
sbb
mov
out
xchg
ja
cmp
test
sub
mov
stos
push
xor
cmpsl
sub
sub
jns
cmp
and
xchg
pop
xor
pop
inc
xchg
adc
push
subw
fcomps
xor
out
dec
mov
in
cltd
mov
fwait
test
mov
pop
icebp
xor
pop
rcrl
pop
mov
int
add
test
inc
fcoms
loope
add
scas
and
jne
add
ret
das
test
fcoml
daa
arpl
aaa
sti
sub
test
xor
ret
gs
scas
frstor
pushf
faddl
mov
dec
fdiv
jle
pop
push
movsl
fildl
xchg
inc
aas
push
fsubs
jmp
fiadds
sub
push
mov
mov
inc
and
pop
sar
cmc
notb
test
mov
mov
jb
sbb
cmpsb
adc
or
es
je
pushf
rolb
pop
sbb
leave
mov
jnp
rcrb
sub
push
sub
cmp
and
mov
leave
inc
leave
xchg
mul
mov
dec
out
sub
mov
in
add
hlt
sti
cmp
pushf
and
gs
push
imul
jb
lahf
lret
int
dec
arpl
adc
movsl
lcall
leave
sbb
xor
cld
nop
enter
pop
clc
inc
xor
pop
and
cmp
inc
cld
test
nop
mov
out
jb
mov
sbb
mov
addr16
test
ret
push
or
in
xor
shll
sbb
inc
movsl
jp
out
jns
cmp
fst
xchg
iret
icebp
jge
les
add
xchg
push
push
dec
sub
pop
test
sub
cli
ret
rorl
mov
cmp
add
jae
hlt
fucomp
out
mov
pop
rol
xchg
out
sub
insl
sub
leave
mov
repnz
int
dec
nop
mov
cmpsb
sbb
stc
pop
inc
notl
jo
fwait
cmpsb
push
sub
es
lods
fstl
dec
xor
xchg
loope
adc
mov
and
cltd
pop
out
sti
dec
aaa
sti
and
icebp
shll
subb
popa
mov
push
call
out
lahf
add
jb
clc
mov
sbb
jecxz
dec
sahf
mov
jecxz
mov
repz
jl
fcmovb
fwait
insl
movsl
push
xchg
loope
mull
pop
adc
push
add
jo
push
jmp
mov
push
or
mov
pop
jnp
xor
mov
pop
sub
mov
pop
jl
dec
in
sub
jp
xchg
lods
adc
cmp
lret
jae
adc
sub
jo
lock
sub
cmp
lods
jnp
je
dec
sub
mov
lret
and
lods
mov
fnstsw
sbb
and
add
stos
not
scas
dec
sbb
jns
mov
xchg
cmpsb
mov
call
mov
mov
xchg
jne
or
xor
orb
movsl
mov
dec
fisubrl
and
je
mov
adc
inc
inc
insb
jmp
decl
loope
or
and
lret
dec
fwait
sbb
mov
xchg
movsl
inc
int3
data16
dec
adc
in
call
leave
outsb
andb
add
in
shlb
or
test
jecxz
shl
cs
cs
inc
pop
push
pop
aas
sarl
stos
xchg
and
cld
int3
pop
fwait
jle
jno
xchg
ja
push
or
ds
mov
adc
or
jbe
push
decl
lcall
mov
and
xchg
sub
pushf
sbb
aad
sbb
test
push
js
add
push
call
outsb
js
fadds
jg
xchg
bound
test
orps
pop
xor
mov
and
or
stos
mov
push
int
out
lret
adc
es
adc
pusha
or
lds
mov
push
cmp
cwtl
inc
inc
jle
imul
int
dec
xlat
xchg
sub
xchg
scas
lcall
mov
in
adc
out
push
hlt
dec
mov
fadds
std
adc
push
test
mov
mov
sbb
pusha
lret
inc
xchg
decl
pop
mov
lret
pusha
mov
sub
in
mov
ja
xchg
hlt
mov
pop
leave
dec
add
into
outsl
orps
aad
jne
cmpl
scas
mov
cmpsb
shr
and
rclb
add
mov
sub
fwait
cmp
scas
iret
dec
lods
push
push
aad
hlt
test
or
add
sub
in
cmp
lea
int
adc
push
test
and
loop
add
inc
mov
and
fstpl
pop
push
int
jg
fcmovu
in
das
leave
fdivrp
sub
pushf
mov
dec
pop
push
xchg
loopne
jns
xor
adc
lahf
mov
xor
dec
das
inc
or
mov
mov
cmp
dec
jno
roll
daa
mov
std
push
fildll
icebp
cmp
mov
dec
movsl
jmp
cmp
test
jno
jnp
outsl
aaa
les
cltd
jbe
mov
or
mov
push
mov
mov
popa
les
and
ficomps
jl
fldt
sub
pop
push
xlat
ds
pop
pop
add
shl
pushf
inc
daa
sbb
adc
lahf
sub
sahf
or
mov
scas
cmpsb
push
jmp
and
sbb
sbb
test
insl
outsl
scas
lock
jp
ljmp
repnz
inc
mov
inc
jecxz
aaa
jb
insl
xor
inc
ret
xchg
jge
fwait
shld
movsb
sbb
dec
enter
std
jecxz
test
int3
jg
jmp
ret
xchg
ja
xchg
mov
cltd
jae
lds
out
cs
lods
addr16
imul
xchg
lods
notl
and
mov
rclb
int3
dec
mov
test
jge
dec
test
cmpsb
cmpsb
idivb
cmovl
adc
jo
and
addr16
cmp
mov
lods
stos
stc
mov
jg
adc
cmp
hlt
or
outsb
les
cmp
or
gs
mov
ja
push
in
call
movsb
cmp
mov
mov
add
or
ret
es
repz
push
cmc
sbb
cmpsb
sub
mov
andl
mov
mov
xchg
mov
xor
adc
mov
or
in
fcmovnbe
js
cmp
jae
aad
jae
sahf
xor
mov
push
nop
lcall
movlps
adc
xchg
pop
shrb
adcb
cmp
loop
daa
add
mov
sub
das
mov
xchg
cli
shlb
movsb
push
jge
mov
pop
insb
inc
jae
loop
mov
and
test
xchg
add
nop
dec
push
call
es
fdivrl
enter
jmp
int
or
movsb
in
inc
scas
adc
sbb
push
test
sub
mov
push
dec
stos
int3
mov
fcom
inc
idivl
in
or
push
je
std
iret
mov
out
mov
aad
or
adcl
fsubl
sub
stc
add
fdiv
fisubl
sbb
fnstsw
cmpsb
jge
fildl
js
jne
sbb
in
jae
adc
dec
out
cmpsb
lds
in
xor
dec
mov
cmp
inc
shl
imulb
or
insl
testb
js
sti
fldenv
xchg
push
jb
push
xchg
lahf
add
sbb
xchg
xor
sbb
sbb
bound
jmp
call
stos
outsl
push
push
or
outsb
xor
push
std
mov
test
inc
shll
es
cmp
inc
sti
cmpsb
ffree
mov
mov
dec
mov
add
fstl
or
push
mov
das
testl
nop
sbb
mov
xchg
dec
lea
push
lds
lea
in
cmpsb
push
int3
push
sbb
cmc
popl
xchg
lcall
or
in
push
je
pop
hlt
dec
ja
inc
testl
dec
out
sbb
movsb
or
stc
xor
pop
push
xchg
sbbl
jg
jge
mov
dec
xchg
add
ret
add
mov
hlt
jmp
test
dec
int3
dec
xor
mov
std
dec
or
adc
mov
cmpb
fildll
sbb
push
fdivr
add
lods
pop
push
jmp
popl
inc
enter
lea
dec
push
iret
pop
cmpsb
sbb
pusha
popa
insl
xchg
xchg
movsb
cmp
jo
jae
fucompp
rcrb
or
dec
leave
pop
mov
rol
inc
rcrl
dec
repz
inc
outsl
notb
mov
ja
into
dec
pusha
lods
movsb
vunpcklpd
out
and
pop
adc
ljmp
jb
push
lahf
adc
cmp
or
pushf
out
inc
loope
aaa
xchg
xor
lock
xchg
repnz
arpl
bound
add
add
inc
mov
std
xor
mov
or
repnz
shlb
mov
sub
stos
stos
out
movsb
mov
mov
push
mov
push
dec
and
loopne
dec
lahf
and
outsl
mov
sbb
dec
fistps
mov
and
aam
stos
xchg
vcvtps2dq
daa
aad
add
pop
jb
xchg
stc
cmp
jmp
push
testb
repnz
fistps
pop
or
pop
and
xor
mov
aam
and
adc
icebp
sub
int
push
insl
pop
loope
jae
xorl
dec
inc
roll
and
jne
and
cmp
cltd
inc
pop
out
cmp
cli
or
xchg
xchg
test
push
xor
cmpl
stos
cmpb
lahf
pop
and
aas
mov
push
cmp
and
gs
push
int3
mov
lods
cltd
int3
xchg
ret
loop
inc
mov
jns
fsub
mov
cmp
dec
les
sbb
ds
sub
xchg
xor
cmp
fwait
ret
lea
sub
cbtw
dec
test
xchg
sbb
dec
out
xor
in
hlt
fsts
dec
lods
popf
jmp
fwait
jno
jle
and
xlat
cmpsb
xor
test
jns
xlat
xor
adc
inc
fimull
push
xchg
movsb
leave
cmpsl
incl
icebp
les
test
jecxz
cs
sbb
jno
loop
xor
push
sub
add
sbb
xchg
xor
sbb
jo
ja
xor
test
jge
out
clc
rorl
loopne
lods
jo
inc
jecxz
pop
adc
pushf
mov
jmp
inc
notb
dec
pop
jno
mov
mov
movsl
leave
pop
out
int
test
xchg
or
inc
jns
test
arpl
cmp
mov
ret
or
mov
dec
adc
js
or
out
pop
inc
test
icebp
mov
jl
mov
xor
popf
jle
sbb
je
rorl
in
push
std
pusha
lahf
sub
ja
mov
mov
into
adc
rorb
aam
sbb
xchg
fyl2xp1
push
mov
push
mov
loope
aad
sbb
xchg
lods
add
push
adc
pop
cmpsb
mov
movsl
and
test
xlat
ret
insb
fwait
or
xor
xor
pop
xor
or
scas
sub
ret
out
sbb
xchg
lahf
jbe
add
and
xor
lret
push
ja
add
mov
int
mov
push
push
arpl
repnz
std
or
mov
shll
dec
daa
mov
movsb
call
mov
out
sbb
ljmp
mov
push
pop
iret
cmpsb
mov
decl
stos
and
jnp
adc
or
push
xchg
mov
push
mov
mov
outsl
mov
cmpsb
cltd
xor
push
imul
and
mov
push
cltd
lods
mov
push
icebp
mov
enter
bound
pop
out
or
fldt
scas
stos
pop
xorb
dec
in
dec
lcall
cli
aas
pop
cwtl
mov
add
sahf
dec
shlb
out
push
rorl
cs
cs
test
push
mov
push
lds
repnz
fnsetpm(287
insb
jo
rorl
dec
enter
pop
insl
mov
mov
out
jle
mov
ljmp
outsl
jge
cmp
add
scas
dec
jmp
pusha
vextracti128
cltd
lods
test
lret
dec
and
in
roll
sub
ret
jl
aaa
test
enter
loop
pop
popa
cmp
or
mov
aad
cli
daa
pop
arpl
repnz
ljmp
mov
cmpsb
add
xchg
pop
daa
stos
loope
idivl
pop
in
pop
cmp
into
cmp
jbe
les
lods
jnp,pn
popf
and
mov
iret
aam
xor
stos
iret
mov
cli
xor
std
outsb
dec
xchg
mov
int3
add
push
xlat
push
fwait
jl
add
cmp
jne
cmp
imul
sub
mov
xchg
stos
cmp
in
ficoml
or
push
cmp
jmp
div
mov
lock
jns
add
shll
loop
rclb
out
pop
test
xor
popa
sbb
and
insl
pusha
mov
jo
cmc
adc
dec
dec
dec
mov
push
fs
aad
add
cmp
sti
xchg
int3
mov
hlt
outsb
les
leave
xchg
and
fcoml
mov
jmp
dec
jge
shlb
pop
lahf
std
leavew
pop
dec
ss
imul
cli
cmp
pop
push
lret
js
stos
lods
cwtl
insl
insl
ficoml
fldenv
iret
outsl
push
mov
sahf
stc
xchg
xor
nop
mov
xor
imul
or
movsl
cmp
fsubp
jno
and
xchg
sbbb
hlt
mov
subl
aam
mov
pop
movsl
mov
jbe
arpl
xor
push
outsb
and
dec
sbb
or
mov
mov
int
scas
xor
cwtl
add
lret
out
fs
aaa
sub
jae
stos
outsb
cwtl
and
sub
arpl
and
inc
push
pop
xor
and
pop
and
dec
pop
pop
iret
pop
mov
adc
xchg
in
sbb
xchg
scas
jb
ljmp
rolb
sub
in
pop
fstps
mov
mov
xchg
xchg
leave
push
dec
add
sub
push
jae
fwait
cmp
push
movsb
pop
pop
in
cmp
pop
jl
jp
movsl
pop
sbb
pop
and
js
pop
in
and
jl
rorb
fnsave
mov
out
cmpsl
movsb
inc
cltd
jo
lock
xchg
fwait
jnp
push
jnp
push
cli
sbb
addl
dec
or
mov
lcall
sbb
xchg
movl
pusha
call
mov
mov
pop
rcll
mov
sub
pop
cmp
push
loop
data16
aaa
jae
bound
mov
mov
int3
popa
fld
push
xor
repz
filds
jmp
stos
clc
rol
hlt
aas
insb
cmpsb
mov
dec
add
loope
mov
cltd
adc
jnp
inc
je
in
add
stc
int
mov
movsb
jmp
psllq
and
or
lods
into
or
pop
mov
dec
jne
sub
loope
sbb
in
std
aam
stc
daa
insl
inc
jo
and
out
jecxz
xor
pushf
daa
test
cmp
add
push
cwtl
inc
insl
push
imul
adc
sbb
jb
orb
pop
mov
sub
mov
mov
ss
or
jle
jnp
dec
les
adc
cmp
mov
addb
sbb
in
cwtl
add
mov
out
pop
rorb
xor
adc
out
jle
xchg
mov
out
movsl
iret
test
lea
mov
in
or
popf
aad
inc
faddl
and
sbb
sbb
inc
sub
xor
inc
dec
popf
insl
ret
pop
or
pop
mov
sti
movsb
xchg
sbb
andl
es
movswl
adc
sub
add
in
ret
lea
sub
jle
aas
subb
mov
push
xchg
cmp
add
inc
push
xor
lea
xor
es
push
fs
hlt
pop
cwtl
mov
xchg
cmp
and
movsb
and
std
mov
adc
jcxz
shll
sub
xorb
subb
fdivrp
dec
shll
popf
stc
dec
cmp
mov
xchg
jno
cmp
jns
nop
inc
repz
enter
aaa
rolb
lods
mov
push
dec
lret
mov
aam
loopne
jbe
xchg
test
sbb
push
pop
xor
stc
adc
and
cwtl
gs
ret
and
or
sbb
int3
or
cmp
pop
sbb
adc
add
fisttps
gs
ljmp
clc
enter
imul
dec
or
mov
mov
dec
imul
jle
mov
dec
lock
les
sub
pop
jae
xchg
das
ds
ja
test
outsb
fisubs
cld
push
jne
repz
or
shlb
jo
cmpsb
test
leave
aas
xchg
mov
xlat
sub
jecxz
fstpt
or
out
adc
fimuls
jbe
aaa
cwtl
pop
xor
fsubl
fwait
push
imul
out
into
inc
je
inc
clc
or
test
loope
xorb
rclb
repz
xchg
mov
push
jge
xchg
mov
pop
pusha
cmp
out
jmp
adc
xchg
xorl
push
pusha
sub
enter
jae
ss
into
pop
shll
outsl
dec
mov
clc
les
ret
push
mov
lret
inc
jno
scas
mov
lea
ret
movsl
in
decl
jmp
pop
cmovp
popa
outsb
or
push
jne
jmp
mov
loope
dec
fsubr
je
mov
std
cmp
jle
repz
dec
movsb
jbe
repnz
call
mov
test
mov
or
push
mov
add
ror
lds
add
add
jge
pusha
mov
imul
inc
outsb
sub
cwtl
add
leave
jl
fstps
mov
push
sub
mov
mov
std
stos
lods
gs
cmpsl
ljmp
rorl
aam
or
icebp
cmpsb
idivb
mov
or
inc
mov
popa
filds
dec
in
int3
dec
mov
or
adc
inc
and
push
pop
dec
arpl
js
pop
add
les
pop
inc
sbb
leave
push
cli
ret
call
std
shlb
loope
push
lahf
imul
inc
in
fisubrl
out
pop
and
cs
and
mov
ss
gs
jno
fildl
sub
stc
jo
loope
call
outsb
xchg
xor
cmp
push
xchg
push
int
jnp
mov
xchg
pop
add
dec
bound
cltd
fwait
sbb
xchg
add
pop
cs
test
jmp
add
mov
inc
outsb
push
fdiv
out
negl
std
icebp
inc
xchg
pop
pop
adc
push
sub
dec
add
das
gs
mov
loopne
dec
lock
mov
jp
push
xchg
sub
sbbl
aam
lcall
lret
adc
mov
jg
mov
cwtl
in
inc
mov
nop
mov
insl
xorl
out
mov
inc
or
pop
add
jo
ja
push
cmp
mov
and
data16
js
cwtl
repz
popa
mov
cld
fwait
jmp
aam
jb
pushl
jns
loope
sbb
cltd
std
mov
andl
xchg
adc
jecxz
xchg
mov
inc
fstpl
jmp
xchg
fiaddl
xchg
fdivs
mov
push
and
mov
push
mov
fdivs
xchg
xor
sbb
mov
cmp
call
repz
lahf
mov
ljmp
sbb
sbb
cmc
xor
sbb
out
in
stc
pop
pop
cld
repz
aam
sbb
rcll
aaa
inc
in
push
pop
inc
mov
jb
mov
mov
mov
xchg
cmp
stc
sub
fdivs
sbb
dec
fiaddl
xchg
mov
ljmp
popf
mov
icebp
mov
dec
inc
pop
mov
dec
lods
mov
mov
push
rcrb
sbb
adc
lds
cmpl
inc
in
mov
xor
mov
js
inc
pop
repz
lret
sub
test
es
outsl
scas
in
jle
push
in
mov
add
adc
jnp
stos
mov
xchg
cmc
sbb
bound
inc
addl
ret
ja
mov
xor
push
inc
cs
xor
aas
xor
mov
cmp
std
mov
xchg
cmp
sbb
fmuls
repnz
mov
rorb
sbb
sar
push
in
sub
arpl
cmpsb
sub
sbb
pop
pop
lcall
mov
mov
rorb
or
or
push
inc
cld
fsubrp
xorb
fnsave
or
sbb
icebp
fisubrl
and
decl
or
dec
xchg
and
test
int
dec
sub
or
pop
hlt
cs
out
subb
das
imul
mov
cmp
mov
adc
mov
push
iret
rorl
mov
cltd
mov
dec
scas
mov
sbbl
cmc
dec
rolb
or
out
adc
test
jle
adc
and
mov
aad
xorb
push
push
lret
cmp
sub
mov
sbbl
stos
leave
jg
sbb
adc
test
loop
inc
int3
aaa
je
jbe
in
mov
sub
out
or
loope
aaa
ret
mov
stos
jp
test
in
movsb
mov
mov
in
int3
ret
int3
cmp
adc
or
push
mov
mov
insl
cltd
xchg
mov
mov
and
push
es
negb
xor
xchg
in
mov
mov
jb
push
or
arpl
icebp
sub
mov
shrl
or
mov
hlt
gs
outsb
inc
movd
xor
jno
jp
stos
sbb
subb
outsb
int
int
stos
inc
xchg
sahf
pop
loope
mov
lret
pop
imul
dec
sbb
pop
xor
movsb
repnz
fucomp
fstp
sub
mov
and
pop
leave
sub
movsl
andl
int
cs
hlt
mov
les
in
pop
adc
cld
ja
sbb
adc
sahf
or
adc
icebp
sbb
cltd
insl
aam
addr16
mov
jae
mov
sbb
testb
xchg
aam
repz
push
je
sbb
jg
dec
add
rcr
xchg
or
xor
and
repz
das
mov
push
cmp
push
xchg
jge
test
jecxz
imul
jmp
mov
lods
mov
fnstcw
xor
pop
mov
scas
aad
arpl
push
xchg
mov
punpckhbw
je
cli
lret
and
cmp
inc
fs
imul
or
lock
xorl
nop
mov
lea
in
push
out
mov
nop
xchg
daa
bound
push
ret
test
adc
xlat
sbb
mov
push
cmp
fstpl
mov
je
leave
inc
inc
cld
es
icebp
push
out
inc
mov
icebp
xor
in
cltd
clc
popa
mov
inc
cmp
cltd
sub
pop
jno
mov
pushf
cli
cmpsl
mov
xor
mov
push
xorl
popf
into
adc
jae
xchg
test
pop
pop
fldenv
mov
jp
aad
scas
inc
stc
cmpsb
push
jmp
lods
jo
cmp
cmp
push
insb
mov
inc
daa
orb
mov
sub
sti
sub
mov
pushf
jmp
push
mov
jp
inc
leave
xchg
je
dec
sahf
jg
push
adcb
sub
in
mov
std
sub
cltd
inc
xchg
or
mov
repz
loopne
push
gs
inc
cmpsb
lret
adc
movsl
push
out
or
sbb
subl
ret
mov
shlb
addl
iret
adc
shll
stos
or
out
test
cwtl
and
xchg
sub
xor
test
inc
push
or
lods
aas
mov
mov
push
andb
mov
xor
rcrb
aam
pop
jae
add
das
xchg
scas
sub
pop
sbb
popa
jge
ret
and
xchg
xchg
negb
push
jbe
adc
stos
in
into
mov
jg
mov
mov
sbb
pop
nop
inc
sbb
cltd
pushf
icebp
inc
cltd
sub
cmova
arpl
or
pop
insb
and
daa
movsb
inc
jb
push
push
dec
daa
pop
clc
add
adc
or
cwtl
fildll
sub
shlb
jne
das
test
lret
sbb
mov
xchg
xchg
jo
pushf
mov
out
jns
jge
dec
cld
icebp
mov
xor
les
add
jmp
mov
lock
mov
inc
mov
and
ljmp
inc
bound
and
outsb
jnp
push
adc
adc
pushf
lods
dec
add
sbb
movsl
in
xchg
aad
jnp
xchg
mull
and
sbb
jo
jno
shlb
xlat
sti
xchg
lahf
push
movsb
push
cmp
add
mov
lret
inc
cmp
jecxz
xchg
test
pop
lret
lret
xchg
aas
test
push
xor
sbb
jae
mov
int
popl
cwtl
fs
jbe
or
out
outsl
xor
cmpsb
sub
subl
in
sbb
jns
add
inc
fdivr
dec
addr16
and
sbb
bound
add
pop
mov
jnp
cmp
test
mov
loopne
mov
xchg
mov
pop
push
jnp
sar
push
sbb
leave
insb
lock
loop
or
pop
cli
lahf
inc
adc
in
xchg
dec
pop
push
xlat
jae
sbb
rcpps
push
mov
push
push
fcmovbe
mov
or
ljmp
in
cmp
sti
int3
int
sbb
in
dec
cwtl
in
cmp
int
jo
in
sahf
push
mov
fs
fildll
ds
jecxz
jg
cli
lret
inc
jno
ret
xchg
in
push
out
in
imull
hlt
push
push
cmp
sbb
dec
mov
out
jg
rep
jae
xchg
outsl
fwait
xchg
add
jl
lods
lods
pop
inc
jnp
shll
push
xchg
xor
pop
sbb
dec
xchg
mov
add
shll
lret
lahf
xor
cmp
pop
mov
ret
xor
mov
sub
lds
pusha
push
adc
nop
mov
jae
test
mov
mov
fwait
adc
rcrl
inc
hlt
push
push
xor
mov
push
testl
fcmovu
jo
fldpi
dec
sar
scas
enter
mov
mov
cmp
xchg
mov
lahf
mov
jmp
or
dec
or
xor
mov
loop
xor
mov
cmpsb
inc
dec
iret
inc
idivl
jle
xchg
out
subb
and
dec
pushf
and
aam
smsw
xchg
pushf
scas
repnz
lret
add
lods
pop
push
mov
shll
mov
xchg
dec
dec
divl
cmp
imul
inc
mov
push
pop
adcb
pop
das
xchg
pop
aad
lahf
mov
inc
hlt
jg
scas
test
pop
adc
outsl
cmp
fwait
xchg
pop
lods
xor
iret
jno
enter
jnp
arpl
adc
aas
ficomps
mov
fxam
fwait
mov
jae
or
push
or
mov
adc
pop
xor
icebp
dec
ja
mov
aaa
adc
dec
cltd
push
insb
mov
inc
push
mov
iret
sbb
lock
mov
cltd
sbb
aam
pushf
lea
and
movsb
and
lock
bound
adc
orb
push
lods
les
stos
test
test
mov
jl
xchg
out
mov
xchg
ret
or
repz
fcoms
lods
aad
je
cmpl
addl
mov
enter
xor
xchg
fwait
cli
mov
add
das
cmpsl
gs
mov
xor
mov
pushf
outsl
out
and
stos
jae
ret
stos
xchg
scas
jle
rorb
aaa
mov
out
jg
add
mov
jne
mov
fcmovbe
popf
out
jle
or
mov
mov
cmc
faddl
aam
cmp
jle,pn
xchg
clc
lret
shrl
and
hlt
xchg
add
mov
add
jl
es
xchg
lret
loope
jge
or
pop
push
fildl
lods
shl
jno
add
pop
movsl
inc
fnstcw
nop
fucomip
sbb
cltd
mov
insl
pop
jns
jecxz
out
push
gs
outsb
jb
cmp
gs
and
jne
mov
dec
aam
mov
sti
imulb
scas
adc
xor
pop
clc
dec
icebp
lock
push
popa
mov
sub
scas
add
lahf
call
pop
inc
ret
xsha1
cmpsb
lret
inc
scas
mov
mov
add
pop
adc
fstpt
in
cmp
jno
stc
fs
lock
mov
mov
and
fwait
sahf
pop
sub
das
or
jg
out
xchg
inc
stc
sub
mov
not
lret
shll
adc
cmp
pop
lock
mov
add
mov
push
jp
out
inc
loope
xor
dec
push
cmp
lcall
nop
jbe
push
inc
adc
mov
rcl
fwait
or
sbb
inc
adc
cmp
inc
lock
fldenv
lret
mov
add
adc
dec
in
xchg
and
rcr
pushf
lret
divb
sbb
ret
mov
inc
loop
out
adcl
inc
or
loope
scas
adc
or
mov
push
addb
dec
mov
pop
sbb
mov
or
sub
addb
mov
stc
xlat
lods
pop
pop
bound
in
sub
pusha
xchg
mov
fwait
cmp
xchg
jae
jl
addr16
testb
or
push
xchg
jge
lds
fsubl
ficompl
pop
scas
sbb
push
mov
lock
ja
dec
lcall
cmc
sub
fisttpl
push
mov
scas
and
cmp
lods
jecxz
xor
fldl
adc
mov
sub
adc
cmc
pushf
imul
std
pop
and
push
pop
bound
xchg
pushf
or
sub
xorl
cmp
out
mov
mov
sbbb
inc
je
ret
shrb
mull
pop
mov
enter
or
pop
stos
stos
mov
sbb
sub
mov
nop
or
lds
repnz
pushf
test
mov
jle
iret
xor
roll
nop
cmp
jne
sbb
test
mov
jns
sub
jno
push
mov
cltd
ja
jg
sbb
push
js
cmpsl
je
dec
test
sahf
push
ret
movsl
jnp
sub
out
cmc
lahf
mov
stos
fdivs
insb
pushf
jp
mov
sar
sbb
or
fwait
pop
push
int
sbb
cmp
out
inc
and
and
mov
lods
dec
pop
sahf
stos
push
rcll
sbb
jno
gs
movsb
das
std
mov
test
sub
mov
jns
fsubr
pushf
push
in
andb
ret
in
adc
outsb
xchg
outsb
or
je
xor
pop
clc
sahf
in
shll
jne
cld
pop
mov
popf
insb
rclb
push
mov
decb
insb
jne
jne
fistpl
imul
add
push
pop
repz
and
push
lods
jecxz
inc
mov
ja
push
incl
loop
loop
and
hlt
mov
jl
xchg
mov
mov
outsl
jnp
or
cmp
inc
mov
push
icebp
incl
aam
add
push
pop
or
xlat
imul
iret
out
push
fucomi
xchg
insb
and
in
inc
hlt
jecxz
rorl
mov
movl
loope
add
aam
pop
push
lock
mov
lcall
faddl
data16
mov
adc
scas
xchg
imul
fisttpll
mov
and
jno
frstor
sarl
jne
mov
stos
jge
pop
aad
cmpsl
leave
ret
inc
ret
fmul
jae
out
xor
sub
cs
xchg
xor
push
insl
mov
mov
push
ds
icebp
dec
dec
adc
hlt
pop
out
aas
mov
lock
jmp
mov
push
fldcw
aaa
out
mov
scas
adc
dec
pusha
dec
push
mov
std
lock
repnz
pushf
inc
or
cld
daa
sub
push
hlt
cmc
enterw
es
pushf
jecxz
lret
mov
mov
dec
subl
dec
push
in
jbe
ret
pop
stos
mov
inc
dec
fwait
mov
test
fnstenv
push
stos
push
iret
mov
xchg
loopne
add
xor
jae
mov
pop
rcr
das
fmul
fyl2xp1
in
add
xlat
cmp
mov
cli
mov
pop
es
mov
out
sbb
inc
and
in
bound
ljmp
mov
mov
push
mov
adc
gs
leave
cmp
lock
push
xchg
xchg
int
pop
pop
loope
cmp
adc
scas
mov
or
aam
and
and
daa
and
push
imul
or
mov
daa
cmp
iret
xchg
inc
xchg
fmull
inc
cmc
lock
dec
fadds
jb
std
push
pop
jmp
cmp
into
xchg
xchg
pop
and
inc
incl
xchg
adcb
push
hlt
mov
aaa
aaa
add
mov
aas
dec
xor
mov
inc
mov
pop
inc
pop
aam
out
push
cmpsl
cmp
mov
xor
mov
enter
outsb
scas
xchg
dec
movsl
jge
inc
mov
cmp
out
out
cmp
test
cmpsb
mov
dec
outsl
sub
adc
adc
xor
test
fcmovnbe
xor
loop
dec
daa
mov
pusha
ficomps
mov
shlb
xor
sti
aad
mov
loop
pop
fs
sbb
movsl
push
mov
pop
xchg
pop
dec
daa
adc
subl
mov
jb
push
shll
inc
pop
icebp
mov
loopne
sbb
ljmp
mov
push
jmp
adcl
addr16
jno
sbb
cli
jmp
les
in
add
iret
push
dec
sbb
hlt
mov
and
sti
cmp
mov
jecxz
jl
loopne
mov
adc
sub
imul
aaa
pop
pop
movsb
jmp
adc
dec
fstpt
cmc
mov
sub
and
push
xchg
xchg
jo
shll
inc
test
shl
mov
mov
pop
les
mov
xchg
and
add
fists
xor
rep
addb
ds
fildl
cmpsb
imul
jge
push
sbb
arpl
repnz
xor
or
xor
sarl
fmuls
push
sti
and
pusha
pop
xor
shl
imul
adc
std
cwtl
out
jne
and
mov
mov
dec
call
inc
sbb
mov
cmpl
add
push
add
mov
popa
push
cmp
or
sbb
cmp
jb
fists
icebp
lret
bound
cwtl
out
les
xchg
dec
popa
sbb
mov
loopne
dec
and
cwtl
mov
rcrb
imul
data16
push
lahf
adc
dec
dec
push
sbb
fstpl
in
pop
cs
and
sbb
mov
adc
adc
sub
xchg
pop
xor
shlb
xchg
lahf
and
test
stos
dec
push
jo
pop
in
fsin
pop
test
push
jnp
insb
mov
fildl
iret
push
ss
mov
cmp
ror
adc
mov
jae
sbb
cmp
pop
cmp
imul
sahf
aaa
andb
inc
jg
adc
cmpsb
fstps
jl
imul
daa
dec
mov
sahf
mov
xor
mov
mov
or
push
inc
cmpsl
adc
jb
adc
mov
loope
jb
sti
or
ss
in
mov
inc
lods
jmp
lcall
or
xchg
fs
les
xchg
into
cli
divb
mov
aaa
adc
inc
imul
call
xchg
gs
sub
out
mov
ja
ds
shlb
dec
and
iret
add
cli
stc
scas
cmp
push
dec
pop
lods
or
dec
int
adc
adc
test
lock
mov
xchg
pop
sti
push
imul
push
test
mov
bound
in
jnp
and
or
jo
xor
adc
dec
sub
sahf
shll
inc
jge
sub
sbb
insl
adc
mov
add
rorl
sub
ds
fucomi
adc
jg
pop
out
ja
jl
fwait
lret
fdiv
es
cmc
cwtl
loop
js
pop
ljmp
mov
mov
cmpb
mov
pop
cli
mov
mov
lock
sbb
pop
sbb
jle
dec
test
push
mov
cmpsl
lret
xorl
cmpsb
pop
pop
jo
mov
daa
lret
aad
insl
mov
inc
xchg
pusha
xor
mov
mov
pop
lock
in
in
and
cmp
mov
and
mov
mov
cmovno
lret
nop
jle
pop
lahf
cmpsl
push
cmp
push
cli
setg
aad
scas
lret
or
mov
cmp
mov
cmpsl
mov
mov
xchg
fdiv
mov
scas
mov
dec
test
pop
aaa
lea
push
xadd
ja
jmp
leave
out
jno
aaa
lds
and
movsb
push
iret
push
mov
jp
cmp
mov
add
lret
mov
xchg
cmp
xchg
lods
adc
mov
lcall
rolb
fcmovu
notl
pop
or
leave
aam
mov
inc
outsl
dec
out
fstpl
push
push
xor
mov
fidivl
mov
leave
adc
mov
mov
fs
jns
push
adc
inc
js
or
lahf
push
iret
push
or
push
imul
cs
imul
shlb
mov
mov
in
xchg
hlt
or
jbe
call
out
lock
roll
mov
bound
mov
test
int
dec
je
mov
push
pusha
cmp
cmp
test
sbbb
mov
lods
outsb
push
orb
roll
arpl
sbb
jl
xchg
test
insl
lds
aas
enter
arpl
cmp
sub
stos
sysret
sahf
cli
jno
ds
pop
xor
dec
outsb
fisubrl
or
push
xor
out
lret
cmp
and
ret
mov
lods
dec
and
bnd
mov
mov
fbld
rcll
in
ds
out
std
and
jnp
popf
inc
pop
and
xor
pushf
sti
and
xchg
in
dec
outsb
mov
or
arpl
inc
push
cmc
in
imul
sarb
ljmp
shl
call
popf
test
xor
pushf
lcall
cli
pop
rclb
pop
sub
outsb
jae
gs
mov
test
push
dec
das
out
jne
jo
outsb
push
mov
jo
mov
and
mov
push
sub
ret
ds
mov
sbb
push
outsb
rclb
fists
xchg
pushf
lods
shrl
or
or
rclb
or
pop
dec
cmc
aas
adc
out
hlt
jl
enter
jnp
push
out
enter
push
mov
js
test
mov
xchg
or
popf
ljmp
popl
test
pop
pop
mov
fists
cmp
push
xchg
test
sub
lahf
call
fsts
or
aam
ss
push
mov
imul
mov
shll
imul
movl
imul
cmp
lods
mov
stos
notb
lods
in
fcoms
mov
xor
cmp
jmp
sub
stc
jg
lods
out
xlat
lea
addb
mov
mov
xchg
cmpsb
cmp
insb
or
jg
fists
lods
out
jbe
and
adc
cld
mov
ret
push
popf
shrb
psrlw
enter
jmp
mov
jns
je
xor
mov
inc
test
ss
in
cmp
insl
or
imulb
mov
adc
dec
adc
sti
pusha
mov
mov
stc
scas
push
fwait
xchg
xor
cmp
adc
cmp
cmc
ljmp
testb
and
js
sbb
pushf
push
movsl
fisubrl
inc
cwtl
push
xor
clc
sbb
adc
ficoms
pop
popa
test
outsb
ret
cmp
pushf
jecxz
stos
lds
jno
add
lods
mov
sub
das
adc
jne
or
popf
fsubl
lret
pop
or
jp
fdivl
inc
cmp
xchg
mov
jae
daa
daa
xadd
sub
sbb
cmp
stos
jl
push
mov
add
fwait
icebp
push
sub
adc
das
sbb
or
sub
int
cmpsb
push
and
ret
hlt
jl
and
dec
hlt
sub
mov
cmp
cmp
dec
test
adc
mov
jnp
fsubs
adc
jl
pop
fwait
cmp
jb
sub
cmp
hlt
cmp
out
imul
and
inc
or
nop
mov
mov
lds
int3
je
xlat
shlb
sub
sbb
jbe
fisttpll
int
cli
sti
lods
es
jne
nop
insb
in
add
and
dec
divl
iret
out
cmp
insb
es
mov
int
inc
pop
clc
push
adc
xchg
aas
mov
aaa
ja
and
pop
repnz
push
sub
jmp
aad
lds
cmc
pop
xchg
and
roll
repnz
inc
push
xor
test
push
mov
sbb
scas
scas
loopne
xor
mov
inc
jne
cmpsb
test
add
clc
les
fwait
rol
xchg
mov
sub
stos
ds
ljmp
dec
add
pop
push
loop
aam
xor
in
rolb
push
inc
xchg
push
por
fistpll
cld
mov
roll
xlat
mov
push
iret
jns
and
cmpl
push
in
cmp
sub
test
push
sbb
pop
icebp
pushf
jbe
in
cmp
sub
push
mov
pop
push
idiv
orl
mov
inc
xchg
jbe
loopne
ret
aas
xor
lret
dec
aaa
ds
ret
jo
mov
dec
lock
aas
scas
mov
lods
loope
jle
dec
leave
mov
push
xor
sbb
push
inc
std
mulb
push
mov
adc
push
lahf
mov
adc
and
in
ja
test
fndisi(8087
and
out
adc
inc
push
jecxz
bound
or
test
adc
test
mov
int
xor
call
adc
gs
clc
clc
adc
sub
imul
add
les
push
shrb
lds
sbb
addr16
and
jo
aad
add
pop
push
mov
and
pop
daa
loopne
jecxz
cwtl
cmpsl
ja
into
xlat
jp
sub
cmc
adc
xchg
andl
inc
icebp
icebp
xchg
dec
mov
imul
fsubrp
jecxz
or
or
cmp
mov
mov
push
cmc
or
xchg
and
xor
fwait
stos
inc
lgs
adc
xor
adc
aas
jnp
jns
daa
insl
lea
shl
int3
xor
fbld
xor
in
ds
int
dec
jecxz
mov
sub
addl
fwait
mov
cmc
adc
or
fbstp
test
pop
and
push
adc
movsl
in
fcmovb
fcomip
jnp
arpl
sub
test
push
mov
sub
mov
pop
lret
popa
orl
jle
jp
fistpll
test
push
jnp
inc
stos
inc
sbb
jns
adc
push
pop
push
leave
sub
mov
or
lods
out
out
or
mov
popf
scas
xchg
ret
pusha
shrb
scas
and
add
mov
in
lret
loope
es
push
jno
cmp
cmp
mov
pop
je
imul
cmp
pop
jno
pop
adc
aaa
xor
xchg
ret
fnstsw
xor
mov
inc
aaa
mov
aaa
in
scas
mov
test
mov
mov
pop
std
pushf
sbb
sub
sub
xchg
icebp
lods
shll
xchg
pop
pop
cltd
std
jno
aas
mov
and
xor
jecxz
cmp
inc
push
sub
push
dec
ss
iret
cmpsl
daa
dec
stos
inc
fwait
mov
pushf
or
push
lock
sbb
mov
adc
push
mov
ret
stos
out
shr
das
mov
pop
push
push
fiadds
add
xor
inc
xchg
imul
dec
sbb
mov
push
fidivs
cmp
fs
jne
scas
xor
nop
mov
jns
jge
outsb
popf
and
lods
loope
in
dec
ljmp
mov
or
scas
gs
add
push
fs
xchg
mov
aad
adc
hlt
add
jg
sbb
fisubl
mov
sbb
sbb
mov
out
sarl
mov
push
test
fldenv
inc
shll
movsl
dec
repz
and
ret
and
cmp
insl
add
mov
push
int3
movsl
inc
mov
fistpll
aam
int
lea
xchg
dec
sub
push
sbb
in
inc
adcl
je
ljmp
cmpsb
daa
into
jecxz
cli
xor
and
push
dec
loop
mov
fisubrl
push
mov
aad
pop
lock
roll
cmp
sarb
cwtl
ss
pop
xchg
insb
push
sahf
shlb
std
pop
push
add
mov
cmc
cmp
lahf
xor
add
sahf
testb
sti
fnstenv
jne
inc
xchg
mov
orb
push
sbb
jo
add
jge
pushf
mov
movsl
push
mov
into
mov
divb
cmc
mov
push
shl
sbb
insl
ljmp
xor
stc
rorb
pop
mov
pop
push
add
cmp
jg
fadd
push
test
sbb
and
or
cmp
ret
add
xor
push
inc
mulb
out
and
jmp
push
mov
sub
jg
sub
pop
dec
jbe
or
cmpsl
sub
push
sub
data16
lret
scas
sub
fdivrs
testl
or
andl
cli
cmpl
int3
lret
incb
outsl
adc
push
pop
fistps
cmpsl
add
std
or
sub
sub
push
dec
je
ret
jae
mov
stos
cmc
pop
daa
test
mov
or
daa
xor
adc
or
xchg
xor
mov
jge
jl
clc
ret
cmpsb
push
adc
xchg
aad
es
cltd
scas
mov
xor
cmc
ds
push
cmp
loop
ds
mov
xor
xor
dec
std
push
sbb
mov
loop
iret
sarb
mov
fisttpll
or
cld
std
das
out
mov
jnp
aad
push
not
mov
jle
cld
and
mov
inc
popa
push
test
pop
pusha
lds
pop
in
jecxz
jns
jmp
cmc
insb
xlat
xor
pop
aam
and
and
inc
pop
or
push
mov
ret
popa
jbe
add
rolb
int3
mov
mov
insb
test
inc
aam
pop
mov
sub
lods
xchg
js
negl
in
mov
ds
arpl
es
imul
adc
push
ljmp
lock
mov
adc
xor
inc
aam
cmp
mov
ja
data16
jmp
cmc
stc
xchg
sbb
mov
in
sbb
in
fsubrl
mov
popf
sbb
hlt
movsb
cmp
int
out
popf
mov
xchg
sub
add
sbbl
ret
lahf
repz
fs
add
popf
xlat
inc
jo
sbb
cmp
mov
rcr
inc
mov
cld
mov
int
hlt
cmp
js
je
hlt
or
push
add
fmull
cmp
adc
pop
movsb
and
scas
call
ret
pop
jle
roll
imul
test
xor
das
cmp
mov
pusha
push
mov
push
jle
stos
loope
lret
dec
jne
pop
push
mov
bnd
in
push
std
mov
xor
jmp
sbb
inc
sbb
adc
mov
sub
fs
mov
lahf
std
in
enter
fcmove
mov
pusha
cmp
lret
lret
xchg
and
les
inc
add
mov
cmp
dec
aad
sub
add
xor
xchg
insb
std
adc
sub
push
fwait
cwtl
fisubrl
test
push
pop
lret
mov
jmp
fwait
and
xlat
addr16
sub
sub
pop
lret
jno
inc
jge
jns
xor
jae
jp
orl
es
lods
enter
cli
sub
inc
fstps
adc
mov
push
push
aam
add
mov
testl
sbb
or
mov
inc
xlat
and
push
adc
pop
adc
int
sahf
nop
popf
ja
adc
insb
es
test
mov
fdiv
sub
dec
ss
cmp
push
lea
loop
jae
out
sarl
clc
scas
add
fsubrp
mov
imul
mov
ljmp
add
subb
jne
jno
add
inc
inc
push
pop
add
pop
popa
push
inc
pop
sbb
data16
mov
mov
sbb
pop
xlat
xor
fldl
xchg
jle
out
fildl
xchg
jp
int
mov
pusha
lret
dec
jns
or
add
push
ds
addr16
orb
je
insl
mov
inc
scas
in
and
loope
call
pop
aaa
xchg
icebp
aas
mov
repz
outsb
test
xchg
rol
jle
aam
sub
fs
out
pop
outsb
add
xchg
dec
or
imul
sbb
aaa
ud0
push
frstor
add
pop
lcall
in
popa
ss
sbb
cltd
dec
sub
das
xor
or
fadds
adc
out
jecxz
daa
fs
mov
xchg
mov
mov
ja
gs
movsl
adc
fwait
cmp
jmp
mov
dec
mov
fistpll
popa
out
mov
xchg
js
dec
or
adc
sub
in
dec
adc
filds
push
cwtl
sub
add
pop
mov
bnd
sub
push
sarb
inc
shll
add
mov
dec
fadds
filds
cld
cmpsl
inc
aad
cli
add
hlt
mov
jmp
lret
xchg
jbe
cmp
repnz
sarb
xor
and
subb
ds
hlt
mov
int3
divl
cwtl
out
or
scas
loopne
sbb
mov
mov
cwtl
adc
orb
cmpsb
sahf
scas
mov
inc
lods
inc
lret
in
shlb
fnstsw
dec
outsb
mov
xor
push
fwait
nop
cmp
lods
mov
push
test
inc
lock
lods
push
out
inc
adc
icebp
mov
scas
loopne
jl
aam
add
aaa
mov
pop
sbb
jno
jecxz
clc
mov
push
rorl
mov
fcomi
arpl
jp
jmp
aaa
out
or
xchg
and
loope
hlt
ret
stos
push
stos
mov
out
dec
mov
jae
jns
inc
mov
or
decl
fisubl
ffreep
clc
ljmp
jge
sbb
inc
int3
lret
push
cmp
leave
cmp
pop
incl
in
xchg
sbb
out
or
inc
gs
outsl
mov
pusha
cmc
lock
pop
fwait
rcrl
sahf
xor
sbb
xchg
sbb
mov
mov
add
mov
push
fildll
xchg
jle,pn
inc
and
jmp
mov
scas
rorl
negb
mov
aad
mov
rcr
mov
push
in
mov
xchg
or
shlb
push
mov
adc
add
arpl
and
dec
fcomip
into
inc
imul
in
cmp
lea
lds
xor
or
push
push
jae
pop
lret
gs
inc
and
movsl
inc
adc
xchg
pop
adc
int3
insb
cmp
enter
cmc
mov
push
jl
pushf
or
mov
cmp
xchg
mov
fsubp
icebp
int
bound
gs
shll
outsb
pop
xor
fcoms
push
add
mov
mov
xor
in
sub
mov
sub
push
add
jb
jp
adc
outsb
test
ja
ret
arpl
dec
inc
xchg
pop
jbe
inc
push
andb
daa
dec
test
loopne
mov
clc
insb
add
outsl
xlat
jmp
mov
ds
dec
popl
xchg
movsl
fwait
or
mov
inc
lock
loope
fistpl
in
cmpsb
sahf
inc
sub
ds
inc
dec
das
test
mov
ds
sub
mov
xchg
cmc
xchg
push
xor
popf
inc
sub
or
scas
jne
fs
xchg
pop
shll
sbb
test
xor
lret
daa
call
dec
add
loop
cmp
add
rol
hlt
call
dec
das
in
or
es
xor
rolb
or
lcall
jg
pop
dec
push
stos
and
mov
lcall
lea
pop
incl
sarb
movsb
aas
add
shl
or
adc
ja
dec
cmc
scas
jle
xor
xchg
mov
ja
xchg
outsl
jmp
and
cmp
push
pop
or
or
lret
fldenv
call
lret
sbb
lods
fisubrl
and
sbb
or
mov
push
ret
lea
xor
lahf
xor
inc
pop
push
inc
sub
xchg
iret
dec
out
in
adc
mov
cli
stc
movsl
jmp
jns
mov
cmpsl
and
xor
in
jmp
dec
push
adc
lods
out
ficomps
hlt
dec
movsb
cmp
and
and
mov
jae
out
xchg
test
lock
xchg
loop,pn
cs
cmp
ja
adc
insl
jecxz
sub
sbb
dec
add
shll
mov
adc
lret
mov
mov
dec
imul
mov
cltd
fdiv
jbe
lret
add
adc
outsl
push
mov
fmul
inc
dec
push
fsubrl
sub
jge
push
fs
xchg
sbb
cmpsl
add
test
fidivrs
cltd
jbe
andl
push
xor
cmp
xchg
cmc
mov
push
hlt
push
stos
cltd
dec
push
leave
fdivr
je
ljmp
bound
jecxz
jl
lret
lods
lods
pop
test
fs
mov
rcll
sub
iret
or
mov
mov
shl
inc
icebp
inc
pop
cmpsl
out
xor
sub
jecxz
sub
ret
repnz
test
xor
cltd
cmp
jmp
dec
add
addl
sbb
xchg
push
aaa
push
repz
inc
fiaddl
jae
sub
pusha
lahf
sub
sub
cmc
addr16
cs
fstp
cmp
sub
inc
pop
jae
dec
push
and
mov
repnz
dec
mov
aad
flds
cmp
and
addb
outsb
or
icebp
mov
pop
pop
rolb
jge
repz
int3
jno
std
push
xchg
dec
mov
cmp
enter
in
fisubs
lahf
pop
push
xor
addb
inc
das
xor
movsl
arpl
aas
aas
stc
and
inc
jmp
sarl
mov
les
pop
pop
sbb
cmp
test
or
mov
test
rol
daa
mov
cmp
or
and
lds
fnstenv
sti
out
cmpsl
test
xor
mov
jge
mov
ret
push
aam
and
adc
ret
repz
js
arpl
push
cld
idivb
inc
shlb
xchg
pop
sarb
mov
xlat
push
inc
mov
sarb
dec
insb
shrb
out
mov
in
push
cmp
xchg
int
mov
cmp
add
or
in
push
bound
fcom
dec
mov
cli
mov
cli
fbld
cltd
mov
sub
fisttpll
lods
lahf
add
nop
mov
sub
sbb
fiaddl
bound
xchg
mov
push
out
cmpsb
or
imull
notb
mov
sub
push
nop
mov
inc
xchg
stos
lods
xor
jo
insb
and
xchg
popa
pushf
jns
mov
push
jns
add
push
jge
and
jmp
test
test
addr16
sahf
xor
pop
subl
push
fcoms
cmc
and
push
adc
imul
loope
sti
cmpl
sub
mov
scas
adc
cwtl
out
popa
mov
and
sti
add
cmpsb
inc
mov
movsb
sarl
shll
cmc
cmp
adc
jne
push
jge
fmuls
push
dec
ljmp
push
sbb
lods
sbb
jecxz
imull
sti
jle
push
stos
mov
loope
push
inc
shl
leave
mov
icebp
test
xchg
outsb
cltd
xchg
cli
arpl
push
jns
sub
notb
xchg
pop
scas
jecxz
stc
lret
xorl
or
je
int
push
out
gs
ret
pop
push
cmc
jecxz
push
push
sbb
insl
xchg
inc
imul
adc
cmp
jl
outsb
fisubrl
hlt
push
insb
sbb
push
ret
mov
push
js
mov
lock
fbld
int3
pushf
sbb
inc
inc
lahf
jge
add
inc
popl
sbb
mov
xor
lahf
pop
jl
cmp
rcl
dec
ljmp
adc
sarl
jmp
mov
clc
ljmp
rolb
cmpsb
xchg
orb
inc
adc
mov
or
stos
add
lret
jmp
orl
and
adc
dec
push
es
popa
mov
test
jmp
mov
add
and
sahf
dec
pop
cmpl
and
jb
ret
lret
stc
push
popl
int3
rorl
imulb
xchg
pop
dec
rorb
dec
push
sub
mov
in
rcrb
cmp
add
sti
rclb
test
xchg
dec
mov
jecxz
adc
enter
inc
out
fidivs
in
repnz
stos
fmulp
insb
pop
or
out
pop
dec
fsubrl
rorl
popa
xchg
daa
pop
sub
and
lods
aaa
mov
lret
cmp
jmp
lock
inc
ja
arpl
test
adc
xchg
jno,pt
hlt
jle
xor
mov
lds
sub
and
xor
movswl
daa
dec
or
inc
ja
jnp
sahf
outsl
jns
push
in
xor
xchg
data16
fdivrs
outsl
in
cmp
push
mov
xchg
cmpsb
cs
add
repz
shll
repz
jne
ljmp
xchg
jecxz
push
test
xor
sbb
xchg
xlat
les
loop
or
int
jno
dec
pop
adc
cmpsb
pushf
sarl
leave
xchg
int
inc
lret
pop
gs
lds
xchg
add
mov
fisttpl
fisttpll
push
fwait
cltd
cmpl
mov
cmpb
out
aam
outsl
loope
cld
stos
aam
repz
iret
adc
pop
daa
mov
ret
xchg
idivb
adc
negl
cmp
adc
xchg
orb
add
push
lds
stos
add
and
xchg
mov
and
inc
xor
add
cwtl
xor
int3
push
adc
and
in
push
fimull
aaa
sbb
cmp
add
xchg
lods
call
pop
insl
test
mov
mov
add
cmovle
dec
shr
dec
and
mov
sbb
mov
dec
add
icebp
mov
xor
popf
add
fs
ret
out
sub
imul
add
dec
dec
out
push
fs
test
adc
aam
fwait
testl
push
iret
jp
inc
add
pop
ds
shlb
sbb
mov
lcall
cmp
xor
int3
sub
push
pop
inc
and
mov
fs
inc
pushf
cs
fcomip
adc
xchg
jl
mov
add
mov
mov
mov
add
aas
movsb
jae
jl
xchg
mov
scas
push
pop
lahf
sub
add
js,pn
dec
xchg
and
jae
mov
xchg
jmp
sbb
popl
daa
xor
jae
lret
test
lods
jl
and
xlat
xlat
pop
enter
fidivrs
cmp
fsubp
push
loopne
js
pop
pop
test
inc
mov
insl
fiadds
add
das
push
pop
imul
xor
sub
or
cli
jnp
or
cmc
mov
add
cli
dec
js
into
out
pop
inc
fwait
push
lods
dec
mov
sub
int3
arpl
fimuls
add
data16
inc
inc
movsl
sub
test
mov
inc
jnp
dec
inc
push
stc
push
lahf
into
stos
dec
push
mov
fmul
push
sub
fdivs
out
push
ficoml
mov
ficoml
sub
cmp
mov
and
sbb
sbb
ds
or
jle
movl
iret
test
decb
pop
loopne
and
cmp
imul
sub
outsb
in
mov
jae
les
mov
mov
cmp
jmp
add
lahf
icebp
in
out
inc
hlt
push
xor
jo
xchg
popa
scas
mov
and
jmp
mov
in
aad
xor
js
cmpl
mov
xor
iret
rorb
push
je
dec
les
je
inc
xor
mov
sub
adc
rclb
mov
lret
mov
cmp
insl
fcompl
ja
es
pop
scas
pop
testb
out
add
jg
adc
jle
scas
mov
cld
xor
jae
cld
aam
jmp
jecxz
or
pop
xchg
add
mov
pop
jae
sub
dec
mov
arpl
add
and
xor
push
add
adc
shll
sbb
mov
call
in
dec
dec
jmp
cli
mov
jno
mov
or
pop
cmpsb
mov
mov
ds
dec
or
dec
or
inc
inc
mov
adc
pop
cmp
mov
outsl
mov
adc
cmp
and
xor
pop
cwtl
xchg
jecxz
enter
xchg
sub
sub
lock
jp
mov
sbb
arpl
push
scas
add
adc
js
ljmp
sbb
cltd
mov
push
add
mov
add
icebp
testb
ret
cmpsl
sub
and
adc
mov
fidivrs
out
push
adc
aaa
pop
dec
cmp
cli
ret
out
call
repz
xor
mov
mov
sbb
pop
and
insl
mov
cmpsl
pop
xchg
add
sub
imul
stc
popa
jmp
pop
addr16
and
je
cmp
or
dec
inc
push
sbb
ljmp
outsb
sbb
jl
cmpsl
xor
lock
test
xchg
xchg
cmp
jge
cwtl
push
pop
mov
jnp
mov
vpmacsww
jne
lret
pop
jno
mov
push
cli
sti
inc
arpl
repnz
scas
bound
outsl
outsb
test
or
pop
loopne
xlat
sub
aas
out
mov
std
jae
shrb
shll
cs
push
pop
orb
and
shlb
out
jle
into
imul
xor
insl
mov
ret
inc
inc
scas
sbb
sti
and
cmp
fimuls
jp
enter
frstor
add
sti
add
je
mov
push
xchg
xor
push
orb
cmc
mov
fisubl
aas
jp
mov
and
orb
sarl
call
sub
push
fdivrl
inc
iret
and
inc
in
push
mov
in
fistpl
out
insl
out
testl
loopne
jnp
xchg
jl
in
into
mov
test
mov
loopne
in
outsb
pop
fwait
xchg
mov
inc
movsl
sarl
mov
xor
mov
jb,pn
dec
mov
ss
les
xor
pop
or
add
mov
cmc
pop
xor
je
ret
ds
lock
or
mov
dec
xchg
in
adc
les
or
xchg
dec
jb
or
test
dec
popa
jle
pusha
inc
mov
bound
gs
jns
inc
add
push
sub
cld
sbbb
jmp
pop
dec
push
dec
fmuls
jno
jnp
xchg
push
out
repnz
mov
popf
jb
cli
sbb
je
pop
add
xchg
les
lods
int
sbb
outsl
mov
imul
cmp
and
adc
and
sbb
push
scas
je
xor
and
push
movsl
leave
cmp
sbb
and
jl
rcrb
into
sbb
xor
je
sbb
hlt
lds
aad
mov
call
popa
cmp
lea
adcb
jnp
or
inc
jge
xchg
dec
out
jns
mov
dec
pop
push
pop
push
outsb
aaa
cmpsl
mov
dec
sub
cltd
and
jmp
in
les
scas
js
bswap
adc
int
ss
leave
out
movsb
subb
mov
dec
aam
jge
push
pop
push
mov
inc
int3
xchg
xor
nop
fisttpl
pop
mov
mov
mov
mov
mov
testl
js
cmp
fimuls
arpl
cmpb
mov
xor
and
dec
test
fsubs
rolb
jo
mov
push
test
push
test
add
test
mov
add
iret
lea
cs
push
and
sbb
xlat
jmp
jmp
jmp
cmpl
scas
mov
ret
mov
mov
jecxz
ror
shl
xchg
aaa
or
sbb
pusha
lret
arpl
pusha
push
jecxz
fistpl
xlat
mov
repnz
mov
mull
movsl
sub
sbb
hlt
fs
les
and
pop
push
ss
jae
loop
imul
add
out
fs
lock
test
bound
jle
aas
aad
insl
insb
lcall
pop
or
xchg
jb
mov
fwait
and
loope
and
xor
mov
test
push
sub
sbb
pop
cltd
adc
arpl
jo
jle
xor
inc
fisubrl
xor
cmpsl
xor
push
pop
mov
fldcw
pushf
insl
es
cwtl
pop
mov
lret
jp
push
cmpsb
dec
popf
adc
adc
outsb
pop
fmull
popa
cltd
mov
lds
out
out
cs
in
mov
test
stos
jns
add
daa
negl
pop
xor
mov
ljmp
sbb
lret
pop
mov
ffree
repz
rcll
xor
outsl
push
std
insl
mov
test
inc
andl
notb
xchg
ljmp
lods
xchg
dec
lds
pop
ror
cmp
push
icebp
mov
lea
iret
in
mov
ljmp
ret
inc
gs
cs
mov
pop
call
fldl
sub
pushf
push
das
sub
push
push
cmp
jbe
pop
pop
cltd
push
fimull
movsl
outsb
jg
leave
pusha
push
xor
test
popa
shl
jbe
fs
sarb
sti
iret
sbb
or
rcrb
xchg
push
fucomp
movsb
jns
cmpsl
addl
or
inc
jmp
je
mov
xor
xchg
push
jecxz
jle
dec
rolb
lahf
jge
cli
mov
cltd
jo
inc
stc
mov
and
xor
sub
test
mov
popa
out
dec
repnz
movsb
outsl
push
and
daa
mov
inc
dec
out
mov
fildll
add
out
mov
lds
pop
lcall
push
pop
lcall
cmp
arpl
xor
in
push
inc
repz
mov
inc
push
movsl
shl
dec
xchg
in
movsb
scas
das
int3
sarl
jg
adc
mov
push
and
aam
insb
dec
add
inc
aad
cmp
xchg
push
jno
les
lret
call
fcompl
add
sub
leave
sub
mov
dec
adc
sbbl
mov
sub
xchg
movsl
scas
dec
ret
cld
insl
push
push
aaa
js
push
nop
xchg
shr
xchg
pop
push
sbb
out
pushf
and
fcmovbe
cmp
push
push
xor
into
xchg
xchg
xor
jge
mov
pop
xor
mov
push
xchg
cmp
ret
mov
adc
nop
pop
stos
shll
out
add
dec
mov
pop
subl
push
repz
in
mov
out
mov
addr16
cmp
in
mov
clc
out
sarl
imul
and
lret
sub
jle
inc
cmp
add
sub
or
mov
out
in
fdivrl
inc
daa
push
aaa
gs
adc
mov
xchg
cmpsl
rclb
fs
dec
mov
nop
cli
xorb
pop
or
loopne
repnz
fcmovb
cmp
fsubr
xorl
in
sub
push
adcb
xchg
lods
dec
iret
cmc
mov
mov
sbb
cs
shlb
pop
mov
or
outsb
loop
cmpsl
pop
push
pusha
xchg
mov
imull
mov
aad
lods
adc
mov
jge
push
insb
mov
fwait
dec
xor
lods
pop
shll
xor
mov
xorb
or
and
jecxz
ret
inc
test
inc
mul
adc
dec
inc
and
dec
daa
js
and
fwait
lret
outsl
ja,pt
cwtl
xor
bound
or
inc
out
pop
mov
add
push
fcoml
stos
xchg
data16
pop
mov
cmp
popf
ret
repz
xor
lods
xor
mov
pop
sti
cmp
into
testb
jecxz
xor
mov
xchg
icebp
pslld
ss
cmpsl
mov
jmp
jl
jbe
mov
and
jge
jge
fcomip
out
jle
bound
in
outsb
xchg
jle,pt
fnstsw
xor
jno
mov
clc
sbbl
fmull
js
xchg
mov
adc
adcb
rcr
lock
push
les
je
insb
inc
xor
dec
mov
push
sub
aam
into
test
scas
movb
lea
lret
out
cmp
jno
shlb
scas
sub
cltd
dec
xchg
addr16
xor
pop
inc
lea
dec
lret
movsb
cmpsl
loope
into
mov
mov
ds
and
xchg
ja
insb
adc
adc
inc
hlt
imul
stos
push
or
out
mov
inc
mov
packsswb
popa
push
in
push
stc
mov
test
jmp
cmp
cld
out
sbb
pop
pop
sub
es
lds
shl
jnp
cld
cmpsb
xchg
movsl
jp
cltd
jns
xchg
loope
jo
enter
in
xor
inc
cmp
mov
inc
test
inc
xchg
and
iret
sbb
pusha
std
jmp
jle
movsl
mov
jnp
jl
loop
stc
fldt
sub
dec
mov
mov
test
fsubr
mov
pop
push
cltd
gs
pop
inc
imul
jns
ds
sbb
and
icebp
int
pop
stos
shrl
sub
mov
dec
dec
rcrb
movsb
arpl
insl
pop
test
and
in
in
mov
lds
or
insl
jnp
jecxz
cmp
add
cld
xorb
inc
sarb
add
mov
test
stos
jbe
sbb
mov
fidivrl
or
call
insl
es
fisttpll
jne
inc
outsb
int
pusha
add
orb
pop
mov
insb
mov
scas
scas
neg
shlb
call
lods
xor
data16
pop
push
mov
dec
pop
add
xchg
or
push
inc
xchg
add
inc
mov
pop
jmp
mov
jp
mov
ja
dec
sub
cmc
dec
lret
dec
inc
jnp
pop
int
outsb
sarl
and
pop
jl
shrl
fsubrs
dec
ss
pop
bound
test
hlt
sub
js
dec
out
sbb
shrl
in
mov
lret
insl
test
test
fnstenv
sub
lods
loop
adc
adc
dec
push
xchg
sub
inc
pushf
mov
icebp
sbb
aas
xchg
xchg
into
aad
inc
lods
cs
je
cs
cmp
inc
cltd
mov
ds
jmp
cmp
movsl
lea
add
lret
stc
ja
xor
add
xor
in
jge
ds
cmpsb
scas
into
push
sbb
inc
imul
ret
ret
aas
in
cs
stc
enter
inc
xchg
mov
sti
cmp
dec
add
fiaddl
ret
repz
mov
lock
fnsave
adc
out
cmp
xchg
xor
push
outsb
pusha
lea
into
xor
shlb
in
mov
cmpsb
int3
fcomps
pop
mov
movsb
xlat
jg
nop
add
iret
sbb
pop
mov
xlat
repz
repz
mov
inc
ljmp
xchg
enter
ret
mov
bound
fidivrs
pop
call
xchg
push
sub
scas
dec
pop
xlat
ljmp
in
in
mov
jg
sub
mov
outsb
push
imul
out
das
ljmp
dec
fstl
sbb
mov
inc
pop
jecxz
shrl
sub
push
ss
jg
jne
xor
dec
mov
inc
insl
cwtl
shlb
std
jns
mov
jmp
cmp
das
jbe
cld
leave
shlb
roll
cltd
sarb
pop
mov
xchg
test
jno
pop
xor
test
pop
xchg
xchg
push
cmp
mov
cmp
shlb
testb
sbb
mov
test
mov
and
popf
and
push
cmpsl
sub
dec
fcomip
sbb
inc
iret
xor
scas
inc
repnz
nop
mov
out
add
jecxz
inc
sub
divb
push
xlat
sub
pop
mov
les
pop
mov
xor
cmpsb
ret
loop
xchg
cmp
mov
adc
sub
pushl
cmp
data16
sub
mov
and
add
xor
lods
jle
add
jbe
ror
insl
sbb
lcall
adc
mov
pop
jae
and
cltd
addr16
pop
fcompl
imul
sti
loopne
das
fnsave
lds
push
subl
neg
adc
mov
cmp
adc
dec
in
pop
outsb
inc
lods
bound
ss
imul
mov
gs
mov
xchg
cs
xchg
out
inc
pop
sahf
xchg
aas
stc
sti
sub
in
mov
xor
mov
mov
push
mov
notl
cmp
nop
or
out
xor
dec
mov
mov
jp
popf
dec
lret
and
inc
push
mov
insl
out
das
or
sbb
fstpt
out
js
and
pop
data16
mov
hlt
aad
push
cmp
shl
fists
add
xor
cmp
push
dec
inc
add
lret
nop
pop
bound
and
pop
push
xchg
in
insl
jb
adc
mov
mov
in
jge
repnz
sub
pop
inc
xchg
push
mov
and
in
mov
pushf
or
scas
add
shlb
orl
jb
mov
cmc
je
pop
pushf
iret
inc
push
pusha
mov
jl
dec
and
or
lds
mov
leave
or
pop
jg
add
pushf
in
call
xchg
adc
dec
add
addr16
add
xor
es
sub
insl
gs
and
cmp
xor
std
aas
cltd
inc
outsl
mov
inc
lret
xchg
mov
clc
push
mov
xchg
jle
jp
inc
scas
xchg
ret
call
movsb
xchg
iret
cwtl
daa
sub
popf
jne
adc
arpl
mov
lea
inc
mov
push
jecxz
xchg
and
ret
gs
test
sub
push
pop
int
aas
xorl
push
popa
hlt
stos
sti
adc
or
das
xchg
js
push
shll
je
push
leave
fdivs
or
pop
push
in
push
hlt
pop
outsb
pop
sbbl
and
add
and
sub
or
sbb
dec
cltd
mov
imul
out
mov
sahf
stc
cli
lret
in
ss
jmp
outsl
xchg
lret
mov
pop
mov
cmc
inc
lcall
cwtl
jno
push
fistpll
and
shl
mov
push
call
pop
fisttpll
fsubp
cli
cld
ret
int
or
dec
js
test
or
mov
push
test
push
xchg
jle
mov
jbe
scas
imul
aam
mov
negb
in
scas
fwait
roll
cmp
push
call
enter
cmpsl
jns
xrelease
hlt
jae
and
xchg
fs
int3
jns
jnp
pushf
test
leave
pop
add
in
pop
jae
mov
sub
data16
inc
aam
pop
jp
inc
mov
loopne
dec
int3
push
sahf
inc
mov
and
fbld
out
sahf
scas
cmp
insl
sbb
sti
es
and
aad
or
mov
cmp
pop
xor
test
into
shll
stos
xchg
test
in
gs
call
sbb
sbb
addr16
int
or
aas
mov
in
mov
out
loop
dec
dec
cli
pop
aam
movsb
movsl
lods
stos
ret
cmp
inc
adc
cmp
shll
in
jnp
sub
cmp
lahf
cmp
mov
sub
sub
dec
mov
lods
jnp
in
xor
mov
xor
add
aaa
idiv
cmp
inc
getsec
mov
add
mov
pop
jmp
sub
sbb
rolb
jnp
outsl
ljmp
or
pop
lds
xchg
sbb
jbe
mov
mov
mov
push
lods
and
cli
lcall
insb
lock
daa
lods
pop
sbb
push
push
int3
push
mov
popf
jmp
sub
fs
imul
and
ljmp
cli
pop
xchg
hlt
fistpl
and
cli
rcrb
mov
push
and
sarl
das
roll
inc
push
xor
adc
xchg
add
in
repz
outsl
test
fadds
ret
adc
pop
jge
sub
or
add
das
in
and
cmp
pop
vmovd
test
sub
sub
scas
push
pop
gs
pusha
push
sbb
int
or
dec
and
jo
test
cmc
cmp
sar
fistpll
sub
test
in
inc
daa
and
bound
popa
sbb
ret
sbb
adc
jle
imul
mov
cwtl
mov
fldcw
add
jge
mov
or
push
movsl
rcl
movsl
pop
cltd
in
arpl
arpl
and
dec
push
cmc
inc
xor
jmp
adc
jb
sarl
stc
jmp
dec
rolb
addb
sti
mov
adc
dec
fnsave
mov
cmp
xacquire
jno
dec
rorl
fs
call
popf
xor
fstps
xchg
mov
xchg
std
or
mov
jmp
mov
insl
pop
mov
lods
and
adc
push
xor
mov
cmp
rcr
aas
add
aaa
mov
cmp
pop
out
out
inc
ret
jp
mov
xor
add
jp
mov
nop
test
fstl
inc
dec
adc
jecxz
add
pop
or
xor
int
mov
imull
xor
jecxz
repz
adc
mov
sbb
out
adc
das
shlb
out
sbb
or
cmp
xchg
add
xadd
dec
pusha
mov
mov
cmp
push
jne
push
int
insl
mov
mov
lock
repnz
scas
xor
sbb
fsubrs
xor
pushf
repnz
repnz
or
das
xchg
out
xlat
pop
aaa
xor
cltd
push
jg
test
pop
inc
inc
sub
or
push
cwtl
dec
ja
mov
jno
adc
scas
mov
cmp
lock
iret
and
and
imul
cmpb
push
sub
pusha
test
add
cli
aaa
lods
inc
call
sbbb
ret
adc
push
pop
sbb
sahf
scas
mov
in
mov
xchg
in
push
lods
das
rolb
movsb
cmpsb
cs
xor
or
enter
movsb
jae
cltd
out
or
leave
xchg
out
loope
dec
fcmovnu
mov
or
lea
push
aaa
mov
xchg
adc
scas
add
push
xor
cmp
or
jb
add
jno
dec
hlt
sub
andl
xchg
add
ret
cli
stos
mov
ja
inc
push
fisubrl
dec
mov
xchg
orb
jmp
push
mov
dec
insl
aam
jns
push
lock
rcrb
mov
lods
jno
push
sahf
mov
jbe
repnz
dec
inc
loope
inc
movsb
mov
jnp
xor
fsubrs
xchg
jg
enter
cmp
inc
adc
rclb
lock
lret
or
xchg
cmpsb
xor
fnsave
inc
in
jb
push
mov
adc
icebp
pusha
out
xor
shlb
or
mov
pop
inc
mov
mov
mov
mov
jmp
cmp
ja
ds
cmp
cltd
pushf
ljmp
sti
pop
xor
inc
adcl
jge
xchg
or
mov
or
adc
mov
mov
fwait
xchg
dec
cmp
call
sti
mov
out
mov
mov
or
es
popa
sarl
mov
cmp
dec
xchg
mov
out
inc
mov
xor
andl
cmp
aad
mov
push
aad
dec
out
adc
in
cs
into
scas
stos
adc
pop
ds
inc
negb
aaa
pop
daa
xor
cmp
lahf
sti
sbb
std
sbb
ret
jg
or
gs
dec
xor
cmp
or
clc
add
gs
jl
jo
or
fsubrl
dec
lea
lahf
in
inc
cmp
inc
sbb
gs
jbe
jno
jae
gs
stos
imul
icebp
dec
das
cltd
loopne
add
xor
inc
xchg
sub
xlat
movsl
sub
fidivrs
pminub
sbb
push
jo
loopne
idiv
add
xchg
aam
cmp
xor
aas
decl
fs
mov
test
mov
mov
or
aam
jl
ss
test
nop
adc
fwait
aas
test
fstpl
mov
adc
jbe
stos
cmp
push
push
jne
or
xchg
mov
cli
mov
xlat
sbb
mov
lret
inc
addr16
imul
call
loopne
cmpsb
ja
xchg
or
sbb
mov
cmp
divb
imul
push
add
pushf
mov
pushf
add
data16
cmp
bound
imul
mov
repnz
pop
jns
dec
inc
jno
mov
pop
ljmp
loopne
mov
fcoms
repnz
imul
xchg
int3
jno
fbstp
ja
xor
test
sbb
ljmp
jnp
bound
int3
in
cmp
daa
test
cmp
in
mov
mov
rolb
js
mov
ds
test
cmpb
test
xchg
pushf
or
icebp
ds
jnp
cmp
sbb
xchg
insb
inc
add
test
dec
cmp
mov
sub
in
inc
jbe
push
mov
loopne
dec
xor
cmpsl
add
xchg
data16
cs
lret
or
ja
pop
pop
xchg
dec
xor
push
inc
inc
fstpl
or
call
shlb
cld
adc
das
cmc
nop
lds
lcall
sbb
lds
mov
inc
pop
jecxz
or
iret
sbb
call
mov
mov
xchg
mov
fiadds
pop
mov
sub
addr16
shrl
mov
enter
adc
test
pop
mov
lock
pop
sub
dec
int
cmpsb
cmp
jecxz
mov
and
fwait
dec
lcall
lea
push
sahf
hlt
add
pusha
js
loopne
stos
cmp
stos
fdivs
jmp
fldt
sarb
push
out
out
mov
arpl
mov
aad
mov
mov
jle
dec
push
pop
dec
sbb
inc
mov
jmp
mov
arpl
cwtl
mov
mov
pop
adc
mov
sub
mov
js
emms
daa
pushf
push
dec
mov
pushf
mov
call
iret
loope
push
adc
inc
sbb
add
and
xchg
out
pop
ja
mov
inc
test
cmp
in
lods
icebp
pop
cmp
sbb
xchg
xor
pop
push
and
fldenv
and
je
cmp
enter
add
adcb
pop
arpl
push
jne
in
js
jo
rcrb
cmp
adc
sub
xchg
in
ja
xchg
xchg
std
pushf
push
out
popf
xchg
pop
out
scas
inc
dec
add
lock
mov
jp
xor
sbb
daa
bound
sbb
rorb
cmp
add
dec
lea
stos
pusha
and
sbb
xchg
lea
sbb
sub
addr16
test
fwait
movsb
rcrl
sbbl
mov
es
in
mov
loop
jbe
cltd
enter
inc
add
cmp
mov
pusha
aas
iret
mov
xlat
ret
jnp
and
iret
cli
push
int
shrb
pop
jae
popf
inc
icebp
shll
pop
into
push
dec
mov
mov
xchg
lret
jne
or
clc
cmp
mov
loope
outsb
xor
push
cmpsb
hlt
jns
adc
jns
pop
mov
jo
sub
add
sahf
sub
mov
cld
imul
loope
das
xor
pop
adcb
and
jmp
inc
mov
sub
das
leave
and
mov
mov
cs
sahf
mov
jne
fildl
je
cmp
xor
add
lods
bswap
pusha
adc
adc
nop
mov
and
lcall
sub
fadds
daa
jmp
loop
aas
push
jns
sti
movsb
das
sub
fstl
sarl
test
push
aad
rcrl
leave
enter
out
jmp
les
cmpb
mov
jle
jnp
js
mov
fdivrs
sbb
cmp
js
jge
mov
adc
or
sarl
fadds
add
xor
fnstsw
adcl
xor
mov
jb
sub
mov
adc
rorl
fiaddl
cwtl
jns
pop
push
mov
mov
xchg
inc
insb
jl
std
movsl
xchg
mov
repz
jle
shrl
gs
pop
push
aad
dec
add
inc
popf
iret
inc
sbb
or
and
add
inc
jp
xchg
mov
stos
pop
and
daa
or
fisubrs
aas
or
xor
lock
es
pop
lcall
into
sbb
sbb
pop
push
xchg
pop
push
xchg
dec
es
addr16
adc
mov
into
inc
jbe
or
dec
cwtl
cmp
sti
sti
insb
cmpsb
xor
shrb
lret
test
in
in
mov
adc
je
mov
jle
push
xlat
pop
rorl
lods
lods
xchg
mov
or
jl
pushf
add
pop
jp
inc
in
xor
jmp
inc
enter
and
mov
sbb
or
inc
popf
push
fidivl
in
push
pop
inc
js
push
mov
out
or
dec
dec
sub
cmp
dec
push
sub
add
pop
cmp
mov
add
lods
sub
add
pop
cs
psubusb
jecxz
ds
pushf
mov
mov
repnz
fildl
push
sahf
cwtl
je
jmp
cld
push
movsl
mov
iret
loope
xchg
ds
add
adc
lds
in
xor
lret
cltd
movsl
push
daa
xchg
cmc
movsl
or
outsl
mov
test
iret
jbe
scas
rol
loope
insl
pop
ficompl
push
insb
push
xchg
xchg
and
popa
fdivl
push
xchg
dec
pop
inc
ljmp
mov
pop
stc
lret
mov
pop
cmpsb
xor
inc
and
pcmpgtd
lahf
add
repz
es
xor
xchg
fcoml
das
add
into
dec
push
push
pushf
rorl
jmp
mov
add
mov
add
mov
movl
push
int3
dec
push
jo
cmpsb
adc
jmp
sbb
test
mov
arpl
lret
mov
inc
xchg
pop
andb
test
cmpsl
xchg
ljmp
decl
add
jge
cwtl
loop
and
jge
push
push
test
ljmp
or
xor
xor
sub
adc
pop
pxor
mov
aam
pop
arpl
jnp
movsl
or
lods
mov
dec
loope
lret
les
cld
ret
push
testl
rclb
out
jmp
idivl
jecxz
jno
pop
add
out
ret
aas
inc
push
gs
enter
enter
movsb
in
fmuls
mov
cmp
test
cmp
ss
add
jno
fiadds
sub
adc
int3
enter
and
push
cmc
mov
xchg
popf
lret
dec
fisttpl
pop
add
inc
pop
fs
icebp
mov
mov
pop
dec
cmp
jno
sub
push
lahf
mov
fisttps
lret
in
push
arpl
dec
xchg
xchg
push
int3
sbb
push
call
sbb
xchg
inc
lods
jbe
fiadds
xchg
dec
loope
popf
loopne
push
mov
dec
mov
lock
and
js
sbb
and
pop
loope
or
xchg
lds
mov
out
addr16
cli
stos
jle
mov
ss
or
mov
or
stc
mov
xor
in
insb
and
adc
jge
mov
sarl
in
ds
mov
pop
movsl
mov
jne
and
cmpb
xor
addb
mov
mov
dec
les
popa
add
aad
sbb
jle
xchg
push
push
cmp
mov
hlt
fidivl
pop
rcll
leave
cwtl
sub
pop
out
lock
gs
jmp
push
insl
in
pop
or
mov
mov
movl
lods
xchg
stos
jae
pop
shlb
outsl
aad
inc
add
loope
into
pop
gs
jg
jge
adc
fcomip
outsb
call
mov
pop
and
cltd
mov
das
inc
cltd
pop
push
mov
test
loope
cs
inc
repz
xchg
jp
xchg
dec
call
lods
int3
out
pop
cmpsb
lahf
dec
popa
mov
or
cmp
xor
dec
sub
cmp
fmuls
pop
jmp
mov
repz
pushf
push
push
xchg
aam
aad
imul
xor
mov
or
sbb
fisubrs
movsl
pop
aaa
scas
jg,pn
int3
adc
in
inc
dec
jo
lret
and
xchg
push
cwtl
fstl
mov
pop
mov
cmpsb
popf
xchg
jp
cmovno
std
and
sbb
xor
jg
fsubrl
dec
call
inc
or
jo
add
inc
daa
out
push
test
sub
shl
mov
or
into
nop
mov
mov
dec
loopne
jnp
mov
in
adc
stc
arpl
cmpsb
sti
mov
mov
cmpsl
fptan
addb
dec
sbb
movsb
addb
cli
mov
ffreep
push
das
lods
pop
mov
push
push
xchg
ds
or
jmp
pop
jo
add
movsl
pushf
cltd
out
inc
and
xor
dec
add
jne
mov
jp
fwait
sbb
orl
add
mov
insl
xchg
xor
adc
fisubrs
push
je
lds
cmp
insl
and
mov
sbb
xchg
gs
cld
leave
xchg
mov
mov
mov
xchg
push
hlt
jg
inc
xchg
dec
aad
pusha
jp
test
push
mov
lock
jne
lret
pop
sbb
mov
mov
fnstsw
ficoms
push
mov
pop
shlb
stc
sbb
and
dec
ret
aaa
pop
xorl
or
pop
xchg
pusha
dec
lahf
and
push
in
push
fwait
push
push
mov
in
xchg
jo
push
cmp
adc
es
test
cmp
cmp
pop
lds
les
in
lods
or
test
xor
mov
lret
daa
cwtl
dec
jp
push
dec
lahf
pop
mov
int3
mov
sbb
xor
neg
rcrl
nop
cmp
aam
jmp
mov
jb
xor
aaa
pop
adc
bound
mov
daa
mov
xchg
add
mov
lods
outsl
call
adc
es
call
cmpsl
filds
jp
xor
in
sub
adcl
pushf
sti
imulb
cmp
or
sub
mov
jle
sbb
mov
xchg
push
add
sbb
inc
dec
orb
cmp
lcall
ljmp
or
mov
push
mov
out
movsb
xchg
fucompp
in
mov
pusha
pop
dec
xor
hlt
push
rcrb
fnstcw
sbb
or
lock
std
insl
out
mov
mov
dec
jb
dec
sbb
es
xchg
sbb
mov
pushf
mov
outsb
out
loopne
movsl
fbstp
je
push
in
scas
mov
ja
dec
mov
mov
ss
or
push
adc
pop
or
lcall
std
xchg
pop
cwtl
or
clc
test
jns
or
or
insb
iret
aas
cmpsb
jne
sarb
pop
gs
cmp
into
pop
xlat
sub
add
or
test
sbb
dec
iret
mov
scas
and
pop
repz
into
cmpsb
push
std
rcrb
sub
jne
out
and
in
mov
in
cmp
dec
sarb
adc
fdivrs
lea
mov
dec
inc
xlat
test
xor
aaa
adc
cwtl
repnz
dec
mov
mov
fwait
daa
cmc
sbb
shlb
sub
mov
xchg
lret
jns
fs
push
pusha
xor
and
push
andb
loopne
mov
lea
mov
or
push
daa
loopne
sti
data16
and
fwait
cmp
mov
cmp
jmp
in
mov
add
mov
sbb
xchg
inc
dec
push
aaa
stc
dec
xlat
inc
sahf
mov
mov
or
lock
lahf
clc
pop
mov
xlat
sub
push
xchg
out
out
mov
not
pop
mov
cmc
testl
aam
in
in
pusha
xor
out
dec
dec
pop
pop
add
inc
mov
lods
cmp
fwait
imulb
sbb
push
aam
xchg
and
mov
add
ret
stos
inc
xor
adc
inc
or
xchg
mov
pop
lcall
push
negb
clc
popf
mov
pushf
lods
xor
xor
pop
or
cmpsb
xchg
icebp
adc
push
xor
sub
out
xchg
add
cmc
cmpsl
push
fdivrl
inc
cwtl
cld
call
and
mov
fnstcw
xor
fnstsw
or
mov
mov
jbe
jbe
push
mov
test
jg
sti
push
inc
aas
cmp
out
dec
mov
ret
push
cltd
addr16
mov
xor
sbb
dec
popa
pop
ret
das
lea
loop
jbe
das
mov
pusha
jmp
add
inc
sub
add
ss
lcall
add
pusha
inc
lret
andl
push
mov
or
cmp
push
daa
ret
jp
dec
clc
xchg
icebp
mov
sti
mov
dec
jo
fisttpl
cmp
pop
ds
xchg
pusha
and
mov
mov
xor
jg
jne
cmc
push
cmp
and
mov
test
sbb
pop
in
jle
push
ret
mov
es
mov
add
sbbl
lods
scas
mov
add
add
aam
jmp
fwait
xchg
les
pop
mov
stc
mov
fnstcw
inc
dec
fists
lret
sub
ret
ret
jnp
ret
mov
jno
push
sahf
fdivl
cmp
pop
cli
xchg
and
ja
dec
xchg
adc
cmp
xchg
shrl
fisttps
adc
hlt
mov
repnz
cmc
xor
push
aad
dec
xchg
or
int
mov
or
push
les
xchg
mov
xchg
mov
cs
dec
adc
insl
xchg
mov
movsl
sub
cli
adc
in
xor
dec
out
inc
mov
sub
fwait
push
dec
sub
xchg
push
jmp
sub
mov
loopne
cmc
pop
outsb
mov
lahf
cltd
pop
cli
jge
mov
lods
sbb
cmpb
dec
dec
pusha
adc
fldcw
push
mov
push
add
iret
imul
js
pop
stos
addr16
bound
stos
push
push
xchg
fcomi
inc
mov
mov
mov
cli
xor
roll
xlat
xchg
aas
bound
and
insl
lock
pop
pop
sbb
mov
inc
ljmp
int3
movsb
data16
xor
adc
out
sbb
ret
add
cmp
lea
dec
fcmove
jbe
ljmp
jne
shlb
addr16
push
jle
lock
mov
push
sbb
adc
jnp
incb
popf
aam
aam
jb
sub
test
push
push
das
ds
dec
les
cmpsl
subb
or
dec
popa
lods
cwtl
popf
loopne,pt
cmp
or
in
xlat
mov
xchg
adcl
dec
lods
or
frstpm(287
dec
jns
mov
andl
scas
cli
arpl
pop
bound
lahf
sbb
inc
outsb
incb
mov
js
bound
aam
out
add
pop
jb
lret
insb
outsb
xchg
pop
adc
sub
int3
cmp
mov
scas
movd
ret
inc
repz
stos
sbb
mov
test
in
popf
jmp
jecxz
lods
dec
jbe
push
inc
cld
jmp
ss
cs
fisubrs
cmp
jecxz
mov
jmp
push
stos
inc
and
ret
std
fnstcw
pushf
loop
test
clc
ret
outsb
sub
aam
add
pop
fsubrp
clc
sub
adc
sahf
or
hlt
inc
insb
mov
cmp
leave
mov
jo
in
xchg
dec
aam
cmpsl
les
nop
mulb
dec
push
dec
aad
dec
cli
or
hlt
mov
sbb
and
mov
outsb
inc
in
scas
iret
cmpsb
mov
arpl
out
jae
mov
imul
dec
sbb
mov
add
cs
repnz
and
cmp
xorl
mov
adc
pushf
aaa
xlat
sbbb
je
sub
cmp
sahf
jge
cmpsb
divb
fucom
sub
mov
arpl
cmpsb
inc
add
sub
sub
jecxz
rcl
jmp
jae
leave
xchg
in
dec
cmc
jg
mov
xchg
jne
sti
push
push
pop
cmp
cmc
sbb
insb
lds
sbb
loope
clc
jbe
fwait
push
jns
cmp
or
and
add
and
jno
sub
push
stc
xchg
jl
xchg
sub
lret
popa
jge
dec
aad
dec
mov
mov
aaa
lcall
push
and
pop
lret
loope
add
mov
xchg
fdivs
stos
orb
js
stc
and
or
js
sbb
add
out
out
es
dec
xor
cmp
mov
test
cmp
je
jecxz
repnz
add
mov
incb
sahf
xchg
loop
push
sahf
insl
outsb
pop
bound
fmuls
scas
sahf
into
xor
pop
pop
insb
pop
push
sarb
cmp
add
cmp
lea
imul
pushf
sbb
or
pop
cltd
shl
add
bound
jmp
jmp
cmp
mov
lea
xchg
mov
fwait
mov
stos
das
in
test
jns
pop
push
cld
sbb
cmc
cmp
lods
dec
push
sbb
xor
daa
sbb
and
pop
mov
sub
aas
dec
sbb
sahf
ljmp
lahf
nop
fidivrl
inc
loop
xor
ret
js
jp
mov
lcall
push
push
aam
aaa
pop
orl
xlat
and
in
push
enter
aam
or
inc
adc
sub
mov
lret
add
add
das
iret
xor
stc
les
sbb
xor
aas
add
imul
ficompl
pop
andl
xchg
jo
in
aas
xchg
mov
xor
push
push
movb
imul
mov
sub
or
cwtl
jae
push
ret
cmp
mov
addr16
inc
inc
mov
sub
sbb
mov
mov
add
es
je
ss
ds
divl
jecxz
fcoms
shrl
imul
pop
push
adc
cld
iret
jl
fwait
stos
sarl
les
stos
sti
out
xlat
adc
adc
or
sahf
pop
xor
xchg
enter
outsb
hlt
sub
cmc
fisubrl
ret
outsb
xchg
and
or
js
xor
mov
fnsave
mov
or
es
push
xor
sbb
and
pop
adc
push
dec
outsb
push
mov
clc
lret
inc
in
push
ror
mov
xor
mov
xor
fiaddl
push
dec
notl
mov
xchg
jge
xlat
add
sbb
clc
cld
scas
mov
cmpsb
fstpt
pusha
outsb
loope
push
cli
mov
jl
inc
pop
fnstcw
xchg
inc
adc
xchg
push
xchg
outsb
mov
lahf
lahf
cmp
adc
in
sbb
push
inc
sbb
sub
push
cli
iret
insl
push
pop
xchg
popa
xor
addr16
dec
cmp
arpl
mov
js
sbb
or
out
ss
jge
mov
jg
out
xor
mov
in
test
mov
cmp
mov
test
add
dec
jmp
cmp
mov
shlb
adc
inc
in
das
pop
jae
dec
fidivrl
pop
pop
xlat
aaa
adc
push
sub
xor
iret
test
xchg
dec
roll
mov
aas
pop
or
cltd
adc
jle
mov
test
xor
sub
add
xchg
rcrl
mov
jbe
repz
call
loope
mov
mov
movsb
push
mov
lods
ror
sarl
iret
pop
xchg
sub
leave
call
repz
jmp
mov
out
inc
push
popf
fsubrl
cmp
pop
dec
dec
pushf
insl
xchg
repz
cmpsb
scas
mov
xchg
push
pop
push
flds
lea
adc
mov
push
pop
adc
das
mov
out
popa
pushf
ja
sub
data16
jmp
mov
pop
cmpsl
xchg
icebp
sbb
bound
movsb
orb
repnz
cwtl
cmp
jo
es
pop
lds
mov
lock
jne
dec
mov
in
adc
pop
xor
rorb
repnz
call
lret
and
sarb
push
add
outsb
or
fisubs
rep
repz
sarb
pusha
sahf
jmp
xor
pmuludq
xchg
add
ret
movsb
inc
ss
mov
sbbl
pusha
mov
sub
mov
sarl
add
add
nop
adc
mov
cs
cwtl
fwait
push
push
pop
in
add
enter
sbb
mov
dec
out
fisubrs
xlat
jne
lret
xor
popa
bound
xchg
lods
cld
push
mov
lcall
mov
push
mov
bswap
arpl
dec
and
jp
subb
sub
xor
mov
dec
inc
pop
inc
cmpsl
xchg
pop
sbb
adc
mov
aaa
sbb
sarl
test
outsb
jne
xchg
js
out
shlb
mov
pop
arpl
push
add
idiv
mov
mov
adc
ret
fisttpl
or
mov
in
adc
dec
in
sbb
pusha
and
dec
pop
lds
xchg
lahf
aas
pushf
call
stos
pop
adc
pop
popa
push
rorl
bound
enter
inc
adc
xchg
xor
mov
adc
xor
and
ja
roll
xor
xchg
inc
jecxz
push
or
mov
cmp
sub
push
ds
enter
jno
push
dec
lcall
dec
cmp
adc
pusha
sbb
fs
inc
jne
push
test
cmpsb
pop
sti
pop
ds
movsl
push
dec
mull
sbb
lds
mov
dec
outsb
or
or
jo
stos
inc
movsl
push
pop
lods
xchg
fsubrl
int
cs
xchg
sti
or
dec
ficoms
or
in
call
pop
lcall
pop
push
in
inc
cmc
push
je
and
xor
jnp
inc
es
insb
in
pop
cld
movsl
sub
popf
mov
jg
inc
pop
aas
and
aam
and
jb
push
shll
in
int3
fscale
xlat
adc
mov
fwait
pop
sbb
sub
es
frstor
mov
add
leave
inc
js
mov
jl
add
mov
or
mov
mov
mul
fidivrs
int
jno
pop
pusha
sbb
push
dec
sub
mov
pop
clc
fisubs
imul
add
pop
sbb
mov
out
enter
pop
out
cmp
shlb
push
in
or
add
pop
jnp
and
sahf
mov
or
push
sbb
dec
gs
jb
out
inc
pop
call
mov
push
add
push
ljmp
in
cltd
stc
popf
dec
or
enter
cltd
call
mov
xor
xchg
loopne
dec
outsl
out
push
push
mov
cli
cmp
rclb
jle
mov
dec
inc
jne
sub
shr
mov
das
pop
add
roll
aas
in
imul
cmpsb
gs
fnsave
icebp
aas
enter
sti
or
mov
ljmp
jp
js
faddp
cmp
and
fiadds
sub
test
pop
dec
mov
jbe
and
inc
dec
out
aad
xchg
dec
dec
in
and
ss
icebp
out
fisttpl
js
mov
mov
into
mov
jecxz
andl
insb
cmp
sbb
mov
inc
or
cli
ret
add
jp
jns
addb
inc
imul
inc
inc
sub
rol
subl
push
orl
cs
mov
roll
shr
test
cmp
xchg
push
jne
adc
loopne
in
lret
inc
inc
into
fs
cltd
and
out
rorl
jbe
mov
adc
mov
leave
add
dec
mov
mov
adc
repnz
enter
hlt
push
cmp
ret
dec
sub
int3
pop
outsb
stc
cmpsl
in
adc
sbb
mov
inc
push
leave
pop
loopne
test
enter
and
xor
in
imul
into
andb
pop
cmp
out
pop
mov
in
pop
lods
cli
int
xorb
xchg
repnz
jecxz
in
cld
fmul
cwtl
mov
mov
jnp
push
shrl
or
jo
add
xchg
movb
adc
mov
roll
cmp
cmc
cmp
loope
ds
pop
insl
fnstenv
aas
std
imul
es
mov
test
push
in
and
fsubp
pop
jb
sbb
inc
cltd
lods
repnz
sub
popf
mov
mov
repnz
or
sbb
scas
or
aaa
xchg
out
push
les
cmp
sbb
out
insb
fcmovbe
inc
jb
fbld
cmp
and
xchg
sbb
insb
sbb
mov
test
loope
dec
fwait
jle
cmpsb
das
fstps
pop
mov
inc
sbb
jp
jle
sub
mov
mov
push
xchg
gs
int3
sbb
out
hlt
push
pop
or
outsb
add
sub
xor
cmp
out
icebp
lods
jl
sub
sti
or
movb
movb
pusha
jo
mov
and
popa
lods
out
push
jae
jae
call
lahf
push
push
iret
lahf
inc
fmulp
inc
fs
dec
das
shr
das
pop
inc
add
xchg
loopne
addl
xor
lea
les
rcrl
iret
loope
jle
inc
mov
out
es
mov
ffree
in
mov
int3
scas
outsl
out
hlt
xchg
std
movsl
add
cmp
sbb
push
ja
lahf
add
out
scas
jle,pt
je
in
popf
jge
jne
xchg
mov
push
push
sub
cmp
or
dec
imul
dec
adc
add
adc
out
xchg
mov
jmp
scas
jp
lret
call
xor
imul
inc
cmpb
mov
mov
hlt
sbb
jmp
sbb
inc
xchg
push
fs
sbb
stos
xorl
push
popf
cmpsb
push
jne
pop
fidivrs
cmp
jno
adc
jp
lahf
rorl
dec
add
aam
js
push
dec
cmpsb
jmp
lret
inc
cld
into
mov
aas
pop
leave
mov
mov
xor
cli
pop
fiaddl
add
sbb
mov
add
and
bound
in
aas
addr16
mov
jle
push
mov
scas
cli
cmp
cmc
fldz
vshufps
push
sbb
aam
sbb
rorl
pop
xchg
inc
cmp
inc
mov
inc
ljmp
mov
imul
lahf
push
sbb
jne
sbb
loopne
in
call
lahf
cmp
lods
jae
out
pop
aam
js
lods
jmp
shrl
pop
popf
cmpsl
inc
aam
jne
mov
orb
add
push
and
cli
mov
ds
push
icebp
cmp
add
cwtl
int
ret
fiaddl
iret
fidivrl
sbb
psadbw
jg
pop
cmc
sahf
les
imul
mov
pop
popf
ds
pushf
and
pop
xchg
test
sti
jno
stos
dec
jae
push
mov
call
scas
jmp
shlb
sub
mov
push
xchg
pop
stos
dec
and
bound
pushf
out
mov
nop
fbstp
pop
out
loop
icebp
add
aam
cmp
mov
push
jmp
jecxz
xor
loop
iret
push
push
fistpll
imul
lods
es
adc
jecxz
ret
and
out
repnz
xor
push
sbb
and
mov
vprotw
fnstcw
xor
lcall
sbbl
xchg
cmc
mov
xchg
push
scas
mov
in
mov
inc
jg
enter
mov
add
popf
fnsave
nop
in
into
rcll
inc
mov
cmp
sub
es
sti
inc
ss
lret
sbbl
jne
fsubrs
call
mulb
inc
inc
jnp
xchg
in
sub
or
xor
mov
dec
sub
mov
adc
outsb
jmp
bound
mov
mov
mov
outsb
std
popa
pop
mov
adc
mov
sub
sbb
arpl
mov
pop
lret
xor
pop
and
xor
cltd
in
stc
mov
xor
mov
pop
lods
push
inc
repz
xor
out
cmp
mov
inc
aad
iret
stc
ljmp
data16
sub
inc
shll
xchg
mov
mov
std
xchg
or
xchg
scas
rclb
add
out
mov
mov
push
cmpsb
inc
subl
test
xor
jl
push
mov
mov
sub
and
xchg
rcr
mov
dec
mov
outsl
xor
mov
popl
loopne
js
add
adc
pop
out
in
pusha
adc
mov
fs
xchg
addb
nop
push
rep
stc
xlat
cmpsl
push
jo
scas
bound
add
pop
adc
pop
ud2
pop
repz
xor
mov
mov
or
jmp
xchg
popl
fisubl
popf
ret
fnstsw
mov
inc
dec
mov
imul
sbb
and
inc
pop
mov
jl
pop
loop
mov
push
dec
push
outsl
movsb
imul
imul
jge
cmpl
decl
leave
popa
mov
dec
jge
mov
into
or
lock
and
add
dec
incl
loop,pt
mov
cmp
insb
cmp
pushf
idiv
jns
push
movsb
push
repnz
mov
xor
repz
sub
jecxz
and
fwait
scas
adc
inc
dec
mov
lods
pop
xchg
cmpsb
or
daa
push
mov
jne
add
jae
pusha
mov
and
stos
push
stos
xor
fildll
int3
add
cli
and
mov
adc
and
push
out
jecxz
imul
mov
dec
jno
cs
sub
mov
inc
lret
xchg
mov
into
int3
mov
dec
push
popa
pop
sub
iret
cmp
dec
jecxz
adc
dec
mov
or
cmp
mov
or
push
adc
inc
lds
outsb
dec
sub
fcoms
sbb
or
cmovs
cmp
adc
repz
in
push
xor
xchg
push
sub
mov
mov
xchg
jp
cmc
movl
xor
ljmp
icebp
and
cmp
dec
add
or
imul
jl
insb
sti
cld
push
cltd
jne
sbb
into
mov
xor
xor
adcl
fstpt
push
rep
sbb
gs
scas
in
imul
repnz
loope
or
mov
sarb
mov
inc
sti
fnsave
sbb
push
inc
or
dec
mov
xor
fisubrl
int3
and
cmp
jg
insl
adc
and
repz
arpl
cmp
xchg
iret
add
cmp
lock
pushf
mov
call
movsl
test
faddp
aad
nop
adc
adc
je
push
hlt
pop
mov
mov
lods
stc
xchg
jb
inc
aam
add
dec
subb
bound
sbb
test
jb
sub
xchg
sub
jbe
push
mov
fwait
outsl
loop
jns
jge
scas
jmp
inc
add
mov
xor
push
je
enter
and
mov
xor
andb
mov
inc
fisttpl
pop
ljmp
jbe
pop
dec
push
popa
add
inc
insl
lods
adc
and
cmp
mov
xchg
call
mov
or
into
xchg
cmp
cmp
sbb
push
push
add
or
inc
push
pop
adc
negb
popa
les
jno
adc
dec
and
int
or
cltd
cmp
lods
inc
fdivs
push
cltd
sahf
test
sbb
add
rolb
mov
icebp
cmp
sbb
sub
jns
mov
test
push
mov
repnz
sahf
cmp
cmpb
lock
and
lods
pop
je
fwait
jns
pop
adc
test
push
dec
mov
in
jae
and
stc
cmp
cmp
imul
adc
pop
iret
sub
mov
jno
repz
ret
into
sbb
test
cli
sbb
movsb
ret
dec
test
mov
push
stos
add
jp
mov
sbb
sub
sti
bound
ret
dec
fdivrl
ss
adc
nop
xchg
dec
mov
rcrb
and
es
fistpl
dec
stos
daa
mov
xchg
int
mov
or
popa
aad
les
pop
subb
sub
ss
sbb
pop
insb
gs
nop
and
in
cmpsl
shr
lds
mov
sbb
das
pop
sahf
inc
scas
dec
mov
xchg
cmp
xchg
ret
ret
jb
test
dec
jne
xchg
imul
adc
push
in
push
adcb
pop
mov
lsl
ret
rclb
pop
mov
daa
aaa
shlb
lods
jp
hlt
sbb
mov
fdivs
orb
std
sub
add
outsl
shlb
sbb
cli
lods
faddl
sub
into
cmp
loope
jo
mov
xchg
xchg
loopne
sbb
imul
inc
or
lahf
jmp
mov
mov
int
ljmp
add
sbbl
ret
cli
xchg
push
adc
xchg
cmp
add
adcb
push
ficoms
and
jecxz
mov
movsl
ds
mov
fmul
sbb
adc
fs
aam
stos
fs
repz
cmpsl
ret
or
vfmsubss
jecxz
mov
and
stc
test
ret
lcallw
lods
mov
mov
fstl
inc
fnsave
jno
cmpsl
sbb
xchg
mov
cmp
aas
lret
pop
push
sub
adc
pop
loopne
mov
sub
pop
jne
fdivs
pop
pop
pop
push
sub
xchg
jle
mov
push
inc
xchg
inc
imul
fs
call
stc
push
pop
arpl
xor
pop
sub
addl
inc
dec
inc
xor
lret
stos
inc
push
jne
lret
mov
stc
lods
lock
adc
cmpsl
and
out
fidivrl
pop
or
sub
dec
cmp
push
sbb
xchg
les
push
mov
push
test
clc
adc
data16
pop
enter
push
movsb
xchg
fiadds
pop
lds
mov
xor
aad
test
or
fisttps
stos
pop
imul
repnz
jecxz
xchg
cmp
jmp
imull
jne
int3
dec
xor
dec
xor
lret
jge
mov
fstps
rcll
jle
sub
mov
cmp
popa
shrb
pop
sub
aad
std
roll
test
or
push
sub
fsubr
jns
lods
or
push
popf
aaa
add
aam
sbb
int3
pop
push
outsl
mov
mov
aad
xchg
sahf
xchg
shlb
scas
jge
in
add
shlb
and
icebp
pop
pop
shll
jnp
fisttpll
inc
sub
lock
push
hlt
loopne
out
lret
cmp
mov
jmp
cmc
cmp
das
in
aaa
ljmp
jae
push
dec
jmp
jns
or
adc
sub
adc
inc
mov
push
dec
rolb
push
jo
popa
jecxz
fwait
pop
mov
outsl
cmp
jne
add
mov
shl
ja
fwait
inc
xor
add
jmp
lahf
push
or
xchg
mov
push
movb
dec
dec
dec
push
sbb
fcmovnb
aam
cmp
xlat
clc
mov
fiadds
cmp
or
subl
jo
movsl
mov
in
ffreep
xor
test
jnp
addr16
mov
pusha
pushf
adc
push
std
dec
lods
stos
sti
push
int
dec
sahf
mov
cs
sub
test
pop
in
sarb
movsl
jbe
imul
test
push
pop
add
sub
cmp
rdmsr
loopne
push
inc
pop
mov
push
scas
outsl
inc
mov
push
ret
or
cmpsb
je
push
cltd
dec
pop
aas
lods
mov
cmpsb
add
add
outsb
xchg
add
lahf
js
jae
mov
xor
in
or
pop
lods
mov
fsubs
loop
cmp
aas
pop
jecxz
mov
mov
pop
lea
cmp
xorl
jno
out
sub
mov
adc
jne
data16
jns
mov
adc
mov
je
jne
dec
inc
push
ret
jmp
jge
jle
jb
dec
ljmp
adc
add
in
sahf
aaa
fisubrl
jge
sbb
lahf
sub
popf
imul
ret
ss
sub
adc
je
jmp
and
ja
pushf
icebp
les
aas
testb
icebp
jo
xchg
lods
sbb
pop
and
fdivrp
ret
pop
lds
pop
incb
adc
pop
fimull
lret
stos
xchg
sub
sbb
leave
pop
sbb
sbb
mov
sub
sahf
cmc
dec
xchg
jo
fisubrl
cmp
cmp
pushf
pop
xor
adc
sbb
lds
mov
mov
sti
mov
cmp
rclb
je
popf
push
jge
xchg
pop
adc
aad
fstl
pop
pop
mov
ret
pusha
cmpsl
pop
cmp
and
or
push
mov
insb
xchg
add
fldcw
push
addl
or
adc
or
icebp
mov
jb
push
out
inc
in
pop
add
test
pop
mov
xchg
push
ljmp
cmpsl
sbb
xchg
fbld
and
repnz
jnp
addr16
xchg
dec
into
loopne
shr
mov
dec
rcrb
lock
xorb
mov
jecxz
inc
xchg
jp
insb
stc
mov
fimuls
dec
pop
scas
int
in
xor
xchg
imul
dec
fsubl
add
inc
sub
cmc
and
mull
pop
dec
stc
xchg
cmc
cli
shrb
xchg
jne
test
xor
dec
mov
xchg
stc
and
pusha
ds
pushl
popa
std
aam
out
sub
shl
or
inc
ret
and
jmp
pop
addr16
mov
addr16
push
je
scas
adc
push
xor
jp
mov
adc
xor
push
or
jecxz
divb
xor
dec
enter
jle
cmpsb
sbb
cli
add
andl
xchg
push
sub
cwtl
inc
cmp
cli
sti
hlt
sub
aam
fldenv
inc
ss
sbb
lds
fisttpll
test
jecxz
mov
pop
in
jg
outsl
dec
hlt
mov
sahf
and
push
rclb
scas
mov
ret
add
push
fincstp
imul
pushf
cmp
dec
shrl
cmp
mov
dec
jg
xor
inc
jmp
cmpsl
inc
fdivl
jbe
sbb
cmp
call
imul
pop
cwtl
cmp
loop
jns
or
jno
jg
mov
cmp
inc
or
cmp
int3
aad
sbb
das
pop
mov
dec
in
inc
jmp
faddl
ret
lcall
shlb
xor
push
jge
dec
xor
xor
inc
fisttpl
xlat
stc
stc
and
xchg
in
lods
and
push
testb
int
sarl
shrb
filds
mov
loopne
add
push
xchg
and
test
dec
jle
jle
roll
sub
sbb
aad
cld
hlt
mov
sub
jne
and
movsb
lcall
daa
mov
sbb
testl
push
sbb
xor
sar
sbb
in
sbb
fs
shrl
popa
cwtl
movsb
hlt
test
test
xor
jp
sbb
fdivl
pop
je
jns
pop
add
inc
roll
ljmp
mov
in
shr
imul
popf
das
pop
pop
mov
fldt
daa
and
xor
popf
lret
es
push
jmp
aam
mov
inc
mov
repnz
mov
popf
sub
in
xchg
rcll
scas
mov
jl
data16
lret
inc
inc
rcrb
cld
ret
dec
mov
popa
lds
dec
push
icebp
pop
xor
xor
mov
das
ja,pt
mov
push
jecxz
das
icebp
jge
jle
mov
cmp
xorb
in
outsb
sar
pushf
push
xchg
leave
mov
adc
push
fsubl
cmpsb
mov
fprem1
push
imul
test
xchg
mov
jns
dec
dec
shrl
sub
sarb
cmpsb
scas
mov
xor
mov
add
std
xor
jp
das
mov
shlb
test
mov
push
negl
into
jbe
rcr
inc
rcll
aam
add
mov
or
arpl
adcb
out
xchg
xorb
sub
push
xchg
es
jl
jne
push
imul
xchg
lret
inc
jno
pop
push
leave
xchg
dec
xchg
inc
sub
ret
aas
lcall
or
and
pop
inc
jge
adc
js
repnz
roll
aam
out
bound
decl
fistl
lods
rcl
adc
nop
adc
mov
in
cltd
cmp
mov
jecxz
leave
in
imul
mov
mov
lods
dec
stos
dec
pop
ss
inc
mov
or
aas
xchg
ss
xchg
xchg
out
imul
pop
pop
insb
push
clc
mov
in
add
clc
andb
or
lods
pop
xor
cmp
inc
mov
mov
cmp
fistpll
mov
nop
jne
into
stos
inc
shrl
cli
push
add
xchg
popf
icebp
ljmp
hlt
cmp
xchg
inc
pop
mov
mov
push
nop
movsl
loopne
sbb
push
repnz
pop
add
les
insb
mov
jl
sub
sub
rolb
test
repnz
test
test
mov
lods
dec
fwait
push
stc
mov
inc
adc
mov
je
outsb
sub
sub
jge
xchg
adc
mov
mov
iret
lock
les
jbe
lods
inc
pop
in
arpl
call
test
push
lock
gs
iret
sub
cmp
pop
xchg
sbb
push
in
cmpsb
push
add
xor
push
add
xor
leave
adc
or
dec
xor
outsl
cs
arpl
pop
lods
out
cmp
pop
dec
bound
or
stc
mov
xchg
les
mov
loop
in
in
or
gs
mov
xor
dec
frstor
enter
mov
rcrb
xor
shrl
or
add
ret
imul
out
dec
mov
dec
push
push
xchg
mov
lods
mov
adc
sub
jle
add
or
push
and
lds
adc
es
hlt
lods
push
insl
lds
sbb
and
cmpsb
pop
les
in
jbe
adc
std
hlt
push
add
jno
scas
sub
mov
scas
jb
xor
lods
inc
cmp
mov
ljmp
cmp
pushl
sub
std
test
cmp
lods
mov
pop
rol
inc
das
xchg
lcall
add
int
push
hlt
mov
test
cmp
in
or
leave
xchg
fists
xchg
fsts
pop
jg
sub
ljmp
pop
mov
add
sub
arpl
rorl
add
mov
je
pop
adc
outsb
adc
cmp
mov
mov
fiadds
call
int
jp
std
lds
mov
mov
cmp
shlb
mov
xchg
pop
fiadds
inc
or
pop
js
test
shr
fcomps
pop
jmp
xor
fidivrl
cmp
push
sub
test
push
jle
sarb
dec
or
inc
ds
lods
xchg
stc
jo
repz
or
push
loopne
fdivl
aaa
mov
fnstenv
xlat
cmp
lods
setge
sbb
scas
mov
loopne
mov
mov
inc
decb
cmp
test
fs
mov
sub
sbb
sub
movsl
xor
sbb
cmp
ret
mov
inc
imul
pop
loope
into
xor
js
xor
add
xor
clc
xchg
push
call
mov
out
push
aad
cmp
add
pop
lods
sahf
mov
xchg
jmp
push
jae
xchg
mov
bound
lea
add
fs
mov
cmpsl
jnp
shrb
or
divb
jo
push
mov
ss
mov
pop
adc
push
xchg
mov
pop
add
aam
xchg
ja
data16
adc
cmp
pop
sub
cmpsl
inc
mov
in
in
dec
cld
lcall
xor
leave
inc
inc
xor
push
rcrl
xlat
xchg
shll
jmp
popf
loop
jge
push
loopne
mov
jbe
dec
push
push
mov
pop
sub
pop
clc
out
jmp
adc
fisubrs
popa
sbb
es
adc
scas
sub
jge
mov
jl
popf
or
aas
push
aam
cs
pop
repnz
sub
fdivrs
cmpsl
sub
inc
bound
lahf
dec
push
push
push
sti
pop
cmp
fisttpll
mov
daa
bound
sbb
push
inc
and
or
fs
insl
inc
nop
adc
fidivrs
dec
aam
jp
hlt
in
call
push
cmpsb
inc
std
or
lahf
dec
cmp
out
push
mov
and
jbe
cmpsl
pusha
and
lahf
or
rcll
lret
test
in
xchg
lods
movsb
mov
bound
pusha
cmp
jg
pop
sbb
or
push
into
sub
jns
push
scas
leave
cs
push
sbb
into
loop
add
mov
hlt
subl
orb
jbe
xor
leave
jb
jge
rcr
dec
cli
xor
cmp
cltd
fdivr
push
adc
sbb
push
mov
cmp
call
stc
dec
dec
inc
movsl
aam
mov
das
test
mov
arpl
xlat
fisttps
out
dec
mov
data16
sahf
into
mov
mov
dec
or
sbb
inc
cli
pop
and
jno
sbb
inc
stc
in
adc
adc
push
push
ljmp
inc
ljmp
sbb
sub
fcomps
fidivrl
mov
lcall
push
jne
movsb
xlat
ffreep
mov
lds
es
push
cmc
popf
xchg
mov
inc
fdiv
into
frstor
mov
movsl
sbb
movsb
setnp
aas
and
dec
push
loop
adc
cwtl
out
roll
mov
fstl
sarb
mov
sub
jns
mov
or
cmpsl
lock
xor
mov
sarl
jle
sbb
ficompl
dec
adc
test
ret
out
adc
pop
stos
inc
out
push
daa
test
mov
pop
lods
repz
push
xor
jb
or
push
sub
jb
in
loopne
dec
lods
cmpsb
push
push
mov
mov
in
cmpb
adc
shll
mov
bound
or
lods
adc
lret
xor
sti
xor
add
and
pop
or
in
iret
insb
jb
std
fidivrs
es
in
in
popa
xchg
movsb
mov
lods
push
inc
jb
pop
repz
test
dec
jno
icebp
pop
sti
mov
cmp
push
inc
jns
mov
movsb
jns
adc
dec
clc
mov
ja
xchg
cmp
fnstsw
pop
loop
arpl
stc
arpl
hlt
sbbb
xchg
cmp
sub
mov
aas
lds
cmp
insl
mov
add
test
dec
xchg
and
test
js
notb
push
insb
sbb
mov
cs
movsb
xchg
and
inc
in
jns
push
pop
cld
mov
jae
test
cmp
jmp
or
lods
mov
xchg
dec
cmp
loop
mov
pop
jmp
mov
inc
ret
lret
outsl
cmc
push
mov
xchg
sub
enter
mov
stc
daa
loope
or
add
jbe
jo
mov
repz
jb
mov
mov
cmp
lcall
sub
dec
or
mov
cmp
sub
adc
dec
xchg
cli
push
nop
lock
jo
push
cmc
lods
jmp
icebp
nop
push
or
shlb
jnp
inc
or
add
js
cmp
in
aas
inc
jnp
call
in
mov
fisubrs
shlb
xchg
cltd
jle
ljmp
std
dec
pop
int3
mov
lea
sti
adc
mov
mov
sbb
fcmovb
sub
sbb
xchg
in
sarl
insb
iret
sub
mov
ljmp
shlb
mov
adc
popf
sbb
mov
xchg
xor
or
jne
pop
or
dec
push
fsubrs
sti
lea
out
push
add
jp
jle
adc
jo
add
fbstp
ja
mov
jp
pop
add
aad
inc
inc
mov
je
push
jle
pop
aad
push
aaa
and
call
jmp
lret
sbb
inc
cmp
ret
push
xor
xchg
or
xchg
dec
jecxz
std
push
shrl
stc
xor
sbb
xor
arpl
in
pop
dec
aaa
and
adc
arpl
inc
mov
inc
inc
mov
icebp
mov
jne
rcrb
and
xchg
xchg
test
mov
mov
hlt
mov
testb
sub
jge
in
pusha
dec
mov
mov
push
inc
sub
or
xor
push
mov
sbb
scas
int3
push
insl
mov
nop
push
lds
jl
inc
sbb
and
scas
jne
hlt
jno
adc
inc
jle
outsb
and
sbb
push
sbb
dec
dec
jle
add
jb
loopne
addl
or
in
outsb
psubq
pop
xor
sub
adc
mov
cli
popa
pop
out
sahf
jb
popa
add
xor
jne
cs
outsb
adc
mov
shl
cld
sub
mov
fs
jnp
fiaddl
xchg
scas
jno
insl
ficomps
push
sub
mov
pop
xchg
mov
addl
sbb
push
subb
int3
jecxz
pop
les
fildll
push
les
ret
outsl
hlt
movsl
and
jne
sub
lods
test
dec
pop
mov
mov
jbe
xchg
mov
or
cmp
and
mov
outsb
xchg
sarb
aas
jmp
cwtl
add
stos
lcall
lock
out
addr16
push
or
dec
pop
sti
fs
pop
lods
mov
or
insl
add
mov
out
inc
mov
cli
test
dec
insb
addr16
sub
mov
xchg
mov
mov
leave
lds
add
cmp
jge
pop
rorb
inc
sarb
mov
ret
xorl
pop
push
sbb
cmp
aas
mov
shl
push
dec
cmp
aaa
dec
or
push
sub
cmc
bound
and
inc
aaa
into
inc
mov
mov
rcll
pop
xor
sub
push
mov
pop
xor
push
imul
insb
hlt
popa
iret
sub
jns
insb
dec
mov
xchg
sub
mov
mov
mov
xchg
int3
inc
adc
ret
nop
popf
call
ss
jecxz
sub
imul
sbb
fnstenv
pop
push
orb
or
fincstp
fdivl
das
imul
dec
shlb
das
rol
stos
jmp
cmp
aas
mov
jge
jne
cwtl
mov
or
mov
or
mov
pushf
add
sbbl
inc
inc
xchg
pop
fcmovnb
and
icebp
clc
lods
int
fyl2xp1
roll
inc
ljmp
js
pop
iret
adc
inc
or
or
mov
and
jge
inc
push
jge
addr16
sarb
sub
insl
outsl
add
lcall
sub
call
in
sti
shrb
mov
jle
and
nop
in
and
cmp
add
add
lods
pop
fstpt
or
jle
pop
cmpsl
mov
pop
iret
dec
lret
das
cmpsb
and
jp
or
loop
leave
xchg
sbb
cltd
stos
dec
sub
movsb
inc
outsl
dec
dec
pop
cmp
sbb
fsubl
xor
mov
mov
test
insl
mov
mov
mov
xchg
cli
push
test
stc
mov
mov
xor
dec
push
inc
loopne
popf
cmp
xchg
insl
push
lret
loop
jno
pop
push
xchg
mov
pop
dec
cld
pushf
lea
inc
pop
inc
sbb
and
sarb
mov
fsubrl
pop
lcall
pop
mov
icebp
jge
shl
sub
mov
lds
xchg
orl
mov
hlt
les
sbb
call
ja
sbb
dec
sub
xchg
xchg
mov
aaa
pop
aas
cwtl
add
inc
jg
push
mov
pop
mov
xor
mov
test
push
mov
mov
pop
pop
fdivl
clc
or
xor
fwait
push
ret
push
repnz
cwtl
and
push
push
add
aad
push
xor
fidivrl
mov
imul
push
cmp
mov
push
int3
incb
or
xchg
and
insb
mov
inc
lods
repnz
push
jge
cmpsb
and
cmc
nop
pop
dec
dec
addr16
lods
cwtl
arpl
cmpl
inc
div
xchg
js
mov
fwait
outsb
ss
cmp
inc
jecxz
pop
add
inc
dec
insb
popa
xlat
stc
mov
into
jnp
sar
jecxz
or
sbbb
mov
loop
enter
leave
jno
arpl
push
lods
mov
andl
imul
leave
ss
pop
pop
test
rolb
mov
mov
or
fwait
sub
pop
jnp
xchg
call
loop
daa
int
sahf
inc
jl
fcomp
sbb
sbb
imul
sti
add
mov
aas
cmp
out
or
mov
jbe
xor
sarl
out
xchg
stos
xor
push
push
sbb
mov
popf
xchg
fstps
addr16
fwait
adc
ret
mov
xchg
call
mov
arpl
add
push
in
cmp
sti
fsubl
std
jl
orl
lcall
xchg
mov
jae
add
add
mov
jae
dec
in
cwtl
inc
mov
bound
js
or
jp
jmp
clc
lods
adc
js
fs
outsl
inc
in
nop
pop
mov
dec
push
xchg
xchg
and
jnp
loope
pop
adc
add
pop
mov
inc
es
add
xor
mov
inc
mov
inc
dec
lods
negl
in
adc
jge
push
aaa
and
jmp
inc
adc
cmp
jmp
imul
and
stos
inc
or
fbld
je
sbb
das
test
les
orb
or
pop
das
cmpsl
popf
sahf
movsl
aaa
jbe
rclb
sbb
lcall
mov
dec
mov
cmpsl
shrb
sti
cmp
es
dec
add
lcall
inc
push
lods
ret
decb
xchg
and
popf
mov
imul
data16
push
cmpsl
dec
mov
std
pop
xor
jo
inc
repnz
mov
mov
or
sbb
shl
movsb
dec
lods
cmp
dec
sbb
mov
loope
idiv
mov
ss
adc
mov
call
or
push
movsb
stos
lods
mov
repnz
pop
mov
push
inc
jle
push
jmp
ljmp
jnp
fidivrs
rcrl
addb
aam
lret
cmp
cli
lcall
sbb
pop
in
sbb
jbe
cs
mov
inc
mov
daa
loopne
mov
adc
int
sarb
sarl
lods
stos
add
in
xchg
push
sub
ret
addr16
fimuls
or
mov
movsl
push
insl
jl
mov
shrb
or
mov
pop
imul
repnz
jp
ret
insl
sub
jb
sub
xchg
movsl
adc
stc
adc
inc
loope
adc
push
cmp
cmpsl
or
nop
mov
mov
js
jns
jns
in
prefetcht2
pop
fcmovb
jb
data16
inc
aad
ret
pushf
inc
xchg
adc
push
jg
sar
pushl
ljmp
mov
mov
gs
insl
loopne
lea
dec
out
inc
test
shlb
mov
shll
mov
sbb
add
mov
out
cmp
test
mov
mov
test
in
bnd
inc
pop
repnz
cld
jecxz
add
sbb
sbb
or
xchg
les
fdivs
daa
data16
push
push
lret
out
sti
mov
xchg
xchg
mov
popf
ss
sbb
or
hlt
push
mov
lcall
bound
and
pop
adc
in
ds
out
adcl
adc
mov
arpl
jl
cmp
and
push
mov
mov
mov
hlt
and
cld
mov
insb
or
sti
imul
pop
jo
cli
rolb
dec
push
sbb
xchg
call
frstor
xor
xchg
orb
fcmovne
push
pusha
leave
flds
mov
inc
lock
stos
inc
pop
aad
iret
aas
sbb
repnz
and
jnp
sbbl
mov
push
push
push
addr16
dec
push
sbb
mov
or
mov
stc
lods
pop
mov
mov
jmp
mov
xor
arpl
mov
stos
inc
lret
lahf
lock
sbb
xchg
cmp
xchg
adc
xchg
mov
and
push
or
shll
adcl
rcl
in
cmp
mov
push
pusha
add
call
sub
adc
xlat
mov
ss
repz
enter
adc
inc
xlat
sbb
xchg
pop
sub
mov
and
stc
mov
ss
hlt
lret
int
pop
mov
lods
or
inc
adc
sub
pusha
xchg
adc
or
cltd
inc
jae
adc
add
jo
push
cmp
stos
nop
stos
rcll
xor
lret
test
push
inc
add
sbb
cs
out
shlb
scas
jae
pop
imul
jge
sti
arpl
sub
mov
fldenv
inc
xor
push
and
rorl
or
out
sbb
cmpsl
xchg
cltd
test
push
xor
dec
ss
lret
pop
inc
aad
xchg
lods
addr16
aas
cmp
in
sti
mov
test
fcoms
sbb
or
into
scas
lret
leave
jo
in
jg
rorl
rcrb
jb
sbb
jo
cmp
and
push
mov
jmp
xchg
into
dec
inc
mov
mov
inc
fst
jae
pop
test
add
sub
lcall
sub
cmpsb
pop
test
mov
mov
lcall
int3
push
sub
dec
andb
push
cld
in
or
adc
imul
in
sub
or
inc
mov
test
ss
aam
xchg
scas
fwait
lahf
mov
lock
fdivs
dec
addr16
orb
sbb
cmpl
lret
xchg
sub
add
shll
inc
div
movsb
inc
xchg
fsub
mov
popa
lea
movsb
mov
mov
push
dec
test
push
jmp
pusha
xchg
push
arpl
inc
int3
pop
dec
hlt
mov
mov
insb
stos
hlt
add
aam
xorb
inc
and
pop
push
jnp
cli
sbb
ja
adc
rcll
imul
or
push
mov
cmpl
sahf
out
xchg
test
dec
jge
pop
sahf
add
mov
outsl
adc
xchg
lsl
jge
mov
push
and
in
call
movsb
adc
leave
mov
xchg
inc
and
dec
pop
jg
jp
sub
fcomps
fnop
jmp
cwtl
sbb
sahf
xchg
sub
add
aam
cltd
cmp
inc
loope
xchg
push
inc
stos
mov
lahf
adc
outsb
mov
sbb
stc
lea
xchg
mov
cli
iret
mov
pushf
adc
sbb
data16
xchg
nop
sub
xor
bound
icebp
and
pop
pop
fdivrs
push
xor
pop
fsubrs
or
mov
xchg
dec
cmp
aam
rcpps
outsl
mov
loop
fucomi
jbe
movups
cmpsb
xor
push
xchg
jae
xchg
sub
aas
aaa
iret
int
xchg
es
mov
lahf
rcll
push
pop
mov
shl
mov
cmp
jecxz
hlt
push
arpl
xor
push
jbe
sub
in
xchg
inc
repnz
pop
sbb
mov
xchg
mov
scas
aam
jle
sub
xor
cmpsl
roll
cld
cli
cmp
js
pusha
adc
stos
fs
push
jne
fldenv
lret
repz
shrl
lret
test
lods
jno
das
lods
sbb
push
mov
mov
je
mov
or
fistps
jp
es
adc
into
insl
mov
pop
pop
mov
das
and
xchg
adc
mov
sub
mov
adcb
dec
dec
lahf
lret
adc
pop
xchg
lock
xchg
push
addb
push
lds
dec
mov
scas
mov
and
out
cmpl
jl
ss
ja
add
faddp
out
sbb
pop
ficoms
xor
xor
arpl
mov
lods
iret
pop
ret
lods
add
push
jecxz
lock
sarb
mov
inc
orl
push
loop
int
clc
gs
xorl
pop
add
jb
push
add
jmp
mov
out
enter
loopne
shlb
xchg
dec
mov
mov
mov
lret
lock
adc
gs
call
lock
pusha
xchg
push
fdivr
insl
fmull
movl
dec
push
pop
xchg
clc
faddl
jns
mov
out
cmp
and
cmc
dec
mov
ret
fistps
jmp
jo
push
pop
push
mov
rclb
popf
jg
xlat
scas
xorb
in
inc
out
push
push
sub
rcrl
mov
mov
fcmovne
in
cmp
push
lret
push
stos
or
cmp
fs
cmp
aaa
out
dec
hlt
adc
mov
or
andl
jbe
jp
jne
loopne
scas
sbb
cltd
cmpsl
incb
loope
daa
and
test
in
ljmp
xorb
data16
sub
test
adc
add
ficoms
ret
mov
imul
mov
inc
inc
inc
ficompl
add
and
roll
adc
cmpsl
wbinvd
xor
xlat
xchg
sub
movsb
sbb
enter
lea
mov
mov
cmp
jb
sbb
mov
scas
mov
sahf
aaa
arpl
sub
pop
adc
jmp
mov
add
jle
mov
mov
orl
shll
xchg
dec
pop
cmc
shll
sbb
mov
mov
outsl
inc
push
fmuls
int
pop
ds
shll
gs
mov
mov
push
ss
cmpb
adc
cmp
mov
fs
outsb
jne
mov
inc
mov
and
mov
or
xchg
inc
sub
ficoms
adc
jb
push
pop
cmp
insl
popf
rcll
mov
subl
mov
jl
iret
xlat
scas
in
mov
xor
mov
jmp
push
mov
mov
mov
int
ss
dec
jl
mov
inc
call
mov
cmp
cmc
shll
test
lods
pop
cld
ljmp
mov
mov
pusha
insb
xlat
inc
enter
imul
dec
fstpt
pushf
lods
loop
js
push
cld
lea
arpl
int
aam
xor
or
xor
scas
cli
mov
pop
mov
loop
dec
movsw
mov
mov
into
test
and
mov
mov
imul
jmp
rorb
orl
outsb
add
or
xchg
pop
insb
lret
inc
arpl
das
inc
inc
ret
pop
xchg
rol
adc
pop
xchg
or
imul
mov
push
sahf
mov
push
fsts
jle
and
shrb
fiaddl
or
and
dec
scas
out
adc
js
testb
fnstcw
mov
insb
mov
cmovne
push
bound
xchg
push
lds
out
mov
mov
mov
sub
xchg
add
test
pushw
mov
popa
xchg
mov
aas
pop
cmp
sahf
rorb
pop
icebp
and
imul
adc
mov
cmp
or
push
loop
inc
push
out
sbb
pushf
js
lret
xchg
add
js
inc
cmpsl
push
or
pop
fstps
and
cli
and
or
fadd
stos
fidivrl
insb
xchg
cmp
test
mov
xchg
mov
loope
push
add
je
or
sarl
xchg
cmp
jnp
sbb
lods
ret
sub
sti
mov
add
mov
mov
ja
int3
test
shl
jnp
outsl
repz
mov
pop
es
inc
pop
iret
cmp
out
mov
mov
push
ljmp
fstl
insb
ja
fnstenv
fs
mov
insb
aad
aas
mov
icebp
mov
call
sbb
outsl
int
dec
mov
or
insl
aam
inc
inc
lds
loope
aaa
add
adc
push
mov
test
out
inc
outsl
movsl
xchg
mov
test
cmpsb
dec
xlat
dec
xchg
out
enter
pop
in
data16
jae
inc
fistl
sub
sbb
es
lods
inc
popf
jle
mov
xor
jle
sahf
push
mov
dec
pop
loope
sbb
jbe
test
test
jo
push
cmpsb
mov
shr
inc
xor
cmp
xor
insl
push
xor
mov
fstpt
mov
mov
push
arpl
push
mov
push
jno
cs
lcall
cmp
les
cwtl
loopne
push
push
stc
add
adc
dec
out
mov
xor
jns
adc
mov
add
ja
pop
mov
inc
das
in
nop
sbb
pop
pusha
incl
hlt
xbegin
cmp
mov
leave
jmp
adc
daa
sahf
jp
mov
adc
mov
in
test
xor
shr
inc
pop
sbb
imul
cmp
xor
loopne
out
int3
jnp
cmp
inc
rorl
and
pop
push
ret
pop
out
inc
xchg
dec
adc
xor
daa
mov
inc
mov
dec
ficoms
jmp
mov
adc
lds
and
dec
jecxz
fnstsw
loop
mul
leave
dec
rclb
lds
jle
pop
mov
pop
lret
pop
adc
repnz
mov
ret
idivb
jg
in
ret
adcb
fsts
lods
or
cmpsl
imul
or
inc
sarb
lret
xchg
daa
lods
xchg
sub
mov
pop
dec
sbb
loope
push
or
add
lcallw
shrb
inc
ret
testl
or
sbbb
sub
push
out
outsl
loopne
fisubrs
and
imul
test
mov
mov
fwait
mov
int
test
jle
dec
test
cld
lahf
lds
mulb
aad
insb
std
add
dec
lods
aam
adc
inc
loopne
je
imul
repnz
jbe
cld
mov
dec
mov
or
push
xor
leave
cmc
retw
fists
dec
rclb
mov
fstl
sbb
push
mov
push
lea
jnp
mov
mov
inc
loopne
push
jp
add
rcr
adc
sbb
and
ret
mov
mov
mov
lret
lock
xor
push
or
push
jg
outsb
cmp
rcrb
ret
jbe
pop
inc
popf
scas
mulb
andb
push
fldenv
pop
mov
cmp
mov
jecxz
mov
dec
ja
mov
and
xchg
aaa
mov
cmp
xor
add
mov
mov
sbb
mov
mov
pop
and
insl
aam
inc
fadd
push
pushf
cmpsl
jns
ret
fdivs
xlat
sbb
stc
jg
add
in
sbbb
scas
stos
cs
ret
sbb
and
into
mov
es
std
jmp
ficoms
test
sahf
jbe
jbe
cmpsb
sbb
lods
aaa
pop
jmp
stos
cltd
hlt
sub
movsb
and
les
xor
ret
mov
in
cmp
pop
sub
push
push
and
or
stos
movsb
repz
fistps
inc
jge
dec
gs
push
mov
push
inc
daa
stos
mov
lds
rcrl
and
and
mull
pop
push
int3
lock
mov
ret
adc
push
push
jl
outsl
repz
les
xchg
out
scas
mov
jecxz
mov
rclb
es
scas
in
iret
mov
andl
nop
adc
and
push
mov
or
ljmp
mov
jmp
push
je
pop
mov
out
ljmp
xchg
jp
aas
cmp
loop
psubb
xchg
hlt
add
push
out
xchg
fsubrl
push
insb
stos
cmc
setp
loop
out
movsl
mov
lret
jge
push
jo
pop
dec
ficoms
pop
dec
jbe
out
adc
sub
xorl
mov
and
or
les
dec
in
call
xchg
sub
lock
inc
out
mov
mov
sub
jle
lods
lahf
adc
pop
fsubl
cltd
js,pt
in
or
xchg
sbb
mov
ret
xchg
and
pushf
lock
sub
xor
in
ljmp
arpl
and
syscall
jo
jl
mov
into
add
jge
in
mov
sti
push
gs
repz
xor
imul
in
loop
mov
jp
mov
movsl
add
dec
test
sub
xor
mov
pop
inc
adc
jae
pop
fsubrl
scas
andb
cmp
shr
mov
rcll
pop
jp
shll
inc
xor
push
pop
mov
cmc
dec
pop
insl
das
push
and
mov
cmp
push
add
stos
push
jl
sbb
mov
lods
jl
pop
push
jo
pop
mov
adc
ret
movl
imull
daa
in
inc
cli
inc
sbb
adc
scas
mov
les
sbb
xchg
daa
jl
sbb
jne
enter
inc
inc
and
xor
ds
out
and
add
add
shll
rolb
xchg
xor
push
dec
and
push
movsb
jg
jae
sbb
push
inc
hlt
ja
push
shr
ret
insb
mov
into
js
pop
popa
pop
scas
dec
pop
xchg
roll
dec
pop
sbb
push
fldcw
in
dec
int3
in
movsl
xchg
aad
shr
mov
cs
or
popa
mov
popl
daa
test
push
lret
fiaddl
pop
or
lods
jnp
push
nop
in
sahf
push
and
sub
inc
addr16
negl
or
outsb
lret
push
pop
xor
dec
inc
jb
test
pop
jne
add
fwait
xlat
jecxz
ja
lahf
rcrb
sti
movsl
adc
push
out
cld
test
inc
testb
sub
call
ret
mov
jle
push
in
je
js
hlt
mov
sarl
adcl
mov
mov
fnstsw
stos
jmp
jnp
cmc
xchg
pop
out
fwait
sahf
fidivl
nop
pop
pop
sub
mov
sub
fmul
test
shl
into
push
push
push
aas
mov
adc
push
loop
fwait
mov
daa
imul
mov
jmp
jbe
and
divl
subl
or
cld
es
jle
mov
leave
sbb
cli
popa
pop
add
mov
mov
xor
test
add
lods
dec
loopne
push
leave
cmp
mov
mov
addl
inc
aas
movsb
das
in
and
or
mov
faddl
sub
cmpsl
inc
cmpsb
mov
pushf
inc
ret
cmp
andb
xlat
aaa
fsubs
mov
call
xor
lds
mov
inc
arpl
lods
es
mov
cmp
insb
mov
cmpsl
cmp
int
aam
dec
pop
adc
fsts
xor
jns
pop
mov
mov
adc
dec
ret
mov
sbbb
add
xchg
adc
clc
dec
arpl
sub
fidivrs
inc
mov
sub
imul
je
mov
jp
sbb
inc
xor
addr16
pop
add
mov
xor
mov
mov
xchg
je
std
inc
inc
decl
stos
lcall
sub
cmpsl
mov
fbstp
push
int
and
mov
mov
mov
dec
mov
pushf
push
and
cmpsl
push
jmp
sub
pop
jmp
lods
inc
loope
inc
mov
jbe
cmpsb
lock
sub
inc
stc
mov
sub
dec
add
sub
dec
stc
mov
test
cmpl
ljmp
inc
and
sbb
cwtl
pushf
in
and
jmp
loope
inc
outsb
cld
shll
rolb
out
mov
jecxz
test
imul
mov
fwait
dec
inc
insl
pop
pushf
fnstsw
aaa
mul
ja
and
cwtl
jmp
inc
mov
cmp
mov
and
ret
scas
or
cli
cld
push
rclb
in
stc
lcall
xchg
push
xchg
fisubrs
in
inc
lea
loop
jbe
mov
sahf
inc
dec
mov
sub
loopne
insl
in
daa
cmp
negl
mov
ret
cli
pop
add
xlat
sub
mov
scas
sub
push
mov
movsl
insl
test
lcall
shrl
bound
lods
push
jno
jge
int3
repnz
push
pop
outsl
aaa
aaa
or
mov
rcll
loopne
mov
test
mov
rcrl
sub
and
or
test
rcl
and
pop
push
imul
mov
shl
ret
mov
dec
mov
sarb
mov
push
aad
push
mov
lret
inc
xor
stc
cmpsb
jno
sbb
pop
ret
ret
xchg
cmpsb
adc
insl
push
lock
sbb
pop
lcall
xor
jg
and
imul
int3
mov
add
in
dec
push
sbb
addr16
mov
xchg
jg
cmp
and
xchg
inc
test
adc
loopne
mov
inc
mull
div
and
repnz
leavew
pop
adc
xor
in
inc
repnz
sbb
dec
fidivs
push
daa
mov
push
xor
push
fcmovu
mov
pusha
inc
jbe
mov
mov
mov
push
aam
or
xor
xor
aad
in
push
or
jno
dec
cmpsb
pop
lret
loopne
xchg
loope
notb
mov
inc
jae
ret
nop
mov
jp
push
shll
and
push
js
cwtl
cmp
push
stc
xor
pusha
mov
pusha
bound
addl
fcoms
cmpsl
nop
dec
cmpsb
xor
rolb
mov
data16
jge
pop
cld
fs
scas
inc
fcmovne
cmp
test
add
adc
test
inc
sub
scas
into
nop
push
daa
sbb
lret
pop
ret
pop
bound
push
mov
pop
mov
fidivl
frstor
lcall
and
test
mov
loop
sub
mov
mov
cmp
repz
jb
out
imulb
sahf
shr
mov
mov
pop
daa
ffree
sti
sub
mov
adc
int3
cwtl
fsubl
inc
or
pop
ss
test
dec
push
adc
fwait
xchg
popf
adc
out
ret
daa
outsl
or
repz
mov
outsb
mov
push
mov
mov
jle
cwtl
sbb
mov
inc
icebp
cmp
dec
fistl
stos
xchg
push
add
fdivrs
jg
ljmp
icebp
int
bound
push
aaa
mov
jb
pop
daa
test
adc
jecxz
jne
push
sbb
insb
pop
fstl
xchg
add
cwtl
icebp
sbb
loope
leave
bound
add
xor
testb
mov
scas
cli
adc
adc
loop
push
or
or
ret
inc
sbb
test
jo
insb
xchg
cmp
xor
pushf
mov
insb
fwait
outsl
adc
out
es
mov
mov
divb
aaa
daa
adc
shll
mov
cs
jb
mov
push
inc
inc
out
sub
lods
cmp
inc
fisttpll
sbb
and
fcomps
jp
mov
movsb
lds
test
dec
add
popf
adc
cmpsb
addr16
cs
aad
push
and
or
or
jl
xor
out
sub
mov
xor
inc
sbb
add
pop
mov
cmc
add
dec
cmc
lret
sub
rcr
imul
mov
mov
pop
inc
mov
stos
lds
mov
out
popa
lods
jecxz
mov
and
lods
call
inc
lds
in
in
outsb
sbb
inc
jo
lods
je
dec
jne
mov
in
add
ds
leave
fimuls
push
loopne
or
arpl
into
jne
rclb
loopne
dec
and
push
movsl
pop
cmpsb
cmp
shrl
add
sbb
imul
fsubs
out
dec
mov
jns
cwtl
inc
adc
pop
mov
xchg
fwait
cmp
in
cmpsb
mov
loop
cmp
jecxz
in
mov
mov
mov
xor
jno
xlat
stos
jns
jp
rorl
iret
ljmp
aaa
xor
cmpsb
imul
add
add
stc
inc
mov
pop
or
aas
dec
mov
aam
sub
adc
cmp
cmc
and
jle
inc
mov
lds
mov
pop
scas
in
les
std
cmpsl
xchg
add
xchg
xor
in
imul
jg
mov
mov
fsts
mov
and
test
pop
and
aam
push
ficoml
insb
les
dec
sarb
int
test
dec
or
pusha
pop
das
ja
pop
cmp
mov
popf
xchg
loopne
jg
cli
cmpsl
or
mov
ja
jg,pn
std
mov
sahf
mov
adc
lds
leave
mov
mov
ftst
push
cmc
cmp
xlat
mov
and
sub
xor
cmp
outsl
xor
pop
pop
pop
mov
inc
es
mov
jle
and
and
push
adc
fdivl
sub
add
ja
int
mov
pop
or
mov
mov
cmp
sub
sub
inc
pop
fdivs
jnp
push
adc
xor
addr16
in
cmc
call
adc
arpl
ss
mov
ret
jnp
mov
cmp
ds
popa
aas
and
xor
je
iret
ficomps
mov
cmpsb
mov
push
mov
jg
xchg
outsl
sbb
int3
push
jle
add
push
or
xor
push
addr16
mov
push
adc
test
inc
dec
add
lret
mov
lret
inc
faddl
data16
xchg
adc
dec
sti
pop
pop
in
pop
out
in
jle
aas
in
xchg
repz
loopne
js
cmpsl
ret
pop
or
xchg
mov
orb
lret
orb
or
pushf
inc
js
inc
fcomip
lea
rcrl
mov
pushw
clc
insb
ret
inc
lods
pop
jne
mov
leave
cmpsl
jg
ret
sub
pusha
sbb
sbb
divl
xlat
jae
inc
outsl
out
fcomps
mov
or
sbb
mov
fstpt
fmuls
imul
jle
out
push
cli
push
inc
push
jb
dec
sbb
adc
in
mov
sti
xchg
out
xchg
mov
mov
scas
adc
frstor
insb
jmp
subl
mov
lahf
std
sahf
fs
hlt
or
jg
sub
jno
out
add
adc
scas
mov
fs
ret
les
fld
inc
xchg
repz
lock
dec
pop
sbb
repz
cwtl
xorl
mov
lods
cmp
and
mov
xor
rol
lods
push
popa
fucom
rcll
sub
lods
insb
outsl
lret
cmp
sbb
rol
lret
and
pop
and
loope
lock
pop
mov
imul
xor
or
xor
lock
rcl
push
push
or
repnz
incb
lahf
out
bound
out
jmp
lret
xchg
mov
repnz
add
pop
mulb
xchg
cmp
cmpsb
cmp
xchg
sub
int3
je
js
mov
dec
leave
xlat
inc
adc
mov
ret
xor
rcrb
pop
xor
adc
cmpsl
stos
dec
or
fwait
lret
test
outsl
inc
movd
pop
pop
aaa
mov
jbe
loopne
popf
imul
adc
sbb
inc
xchg
push
inc
sbb
fdivrl
mov
adc
fnstsw
mov
xchg
std
sub
pusha
jnp
xchg
cltd
pop
inc
push
loope
movsl
sbb
jp
mov
sbbb
jae
lods
or
jmp
mov
jecxz
out
out
jge
loop
xor
push
add
mov
icebp
lret
lods
lret
pop
lcall
adc
sti
fistpll
jb
sub
jo
repz
adc
xchg
jle
mov
cmp
int3
popf
or
adcb
xor
popl
jle
xor
cmpsl
and
lahf
sub
adc
cli
out
jle
xorl
inc
adc
mov
jecxz
in
mov
mov
push
mov
adc
cmp
fidivrs
jo
mov
ss
jge
in
mov
jae
push
dec
mov
dec
cs
push
xchg
test
xchg
xor
adc
out
loop
fsubs
inc
scas
adcb
jg
out
sti
testb
jbe
xor
jmp
or
adc
test
jp
xor
xor
test
xchg
pop
xor
sbb
aad
adc
lds
ss
pop
arpl
arpl
leave
push
subl
xchg
cli
xchg
js
bswap
ret
arpl
sbb
or
fprem1
xor
xchg
popf
nop
pop
push
and
imul
pop
xor
je
jg
fldcw
fisubrl
mov
es
jmp
sub
mov
stc
ret
roll
imull
mov
push
addr16
out
adc
insb
fcoml
test
clc
scas
pushf
adc
rcrb
mov
add
jecxz
xchg
jecxz
dec
vpmacswd
rolb
int
imul
jnp
xchg
jle
adc
sti
xchg
dec
jns
mov
dec
cs
lret
xchg
test
sbb
push
jp
adc
test
movsb
cmpsb
or
cmp
sub
mov
cmpsb
mov
xchg
insb
mov
adc
or
push
in
scas
sti
jbe
into
test
cmp
in
add
sbb
fldenv
mov
pop
sub
pusha
push
pop
adc
mov
iret
pop
jo
inc
or
inc
scas
movsl
lods
int3
popa
aaa
xor
into
fs
push
jns
xchg
or
cs
test
test
or
loope
daa
push
sub
lods
mov
out
mov
test
mov
sbbl
mov
das
enter
pop
mov
in
imul
sbb
cwtl
negl
mov
jg
pop
repz
lahf
push
out
push
xchg
xor
adc
mov
xchg
mov
lods
jg
fisubrs
cmp
outsb
jns
or
xchg
adc
lea
dec
test
das
cmp
loop
loope
lock
push
cmp
std
or
mov
and
inc
inc
dec
xor
pop
std
test
lea
pusha
fildl
add
aad
push
mov
cmpsb
shll
clc
and
pushf
scas
jnp
aas
push
or
jae
and
mov
jecxz
jae
fsubrl
mov
mov
subb
mov
sbb
and
je
and
in
sub
or
out
inc
cltd
mov
adc
cmc
inc
mov
stc
mov
pushf
or
leave
push
in
xchg
cwtl
dec
cmp
dec
call
fs
lea
mov
sub
jmp
jmp
xor
dec
add
mov
pop
and
jle
stc
dec
and
jnp
insb
stos
mov
jo
out
mul
mov
out
jns
repnz
icebp
cmpsl
adc
dec
add
xchg
lock
js
add
jnp
aam
sub
addr16
stos
movsb
andl
add
fwait
mov
adc
pop
out
sahf
icebp
jbe
jne
popa
mov
movsl
bound
cmp
popf
pusha
cwtl
xlat
jno
push
ret
push
xlat
jmp
pushf
les
testb
scas
or
lahf
int3
xor
cmp
mov
sbb
push
imul
fdivrl
sub
imul
in
addr16
je
sub
dec
push
out
push
daa
ss
cmpsl
sbb
repnz
cmp
jo
arpl
fs
pop
inc
mov
rclb
inc
into
les
mov
xchg
lods
cmp
adc
pop
sti
imul
push
imul
adc
mov
mov
test
fucom
das
cmpsl
cmpsb
lods
cmpsb
int3
adc
stos
lds
or
dec
cmp
cmc
in
stc
mov
enterw
movsl
jge
xchg
jns
adc
sbb
imul
loop
sub
xor
xor
aaa
pop
add
and
add
fnstcw
cwtl
cs
stos
fisubl
test
hlt
aam
inc
into
sub
subb
std
cmp
fstl
sti
push
push
xchg
negb
out
push
and
cld
movsb
adcl
pop
mov
sub
mov
push
pushf
push
in
loope
mov
push
dec
xchg
sbb
in
push
xchg
dec
push
in
or
shlb
and
mov
negl
gs
dec
mov
cmpsb
sub
or
adc
and
adc
rcl
or
pop
add
push
mov
jmp
jbe
in
cli
jecxz
std
cmpsl
testb
add
inc
inc
sub
dec
dec
dec
cmp
jnp
pop
aam
in
dec
ljmp
push
scas
mov
add
movsb
shll
mov
fwait
adc
int
add
jge
sti
sub
xor
test
and
dec
fbstp
xchg
xchg
pop
xlat
insb
or
orl
mov
push
jle
outsb
xor
inc
sbb
popa
pop
inc
notb
test
ret
sbb
mov
dec
mov
sbbb
ret
add
subl
xchg
in
sub
jecxz
imul
int3
insb
and
push
jo
sub
xbegin
ret
mov
in
fldcw
mov
jmp
sbb
adc
mov
xchg
xor
cmpsl
inc
adcl
jmp
addr16
in
fistpl
mov
xchg
xchg
das
jmp
mov
in
in
ficompl
in
pop
inc
inc
or
xlat
push
pop
repz
pop
push
ss
sbb
loope
cmp
int
cmp
xchg
nop
mov
mov
push
jp
or
leave
in
and
aas
jecxz
sahf
mov
imul
out
sub
ss
jmp
test
cmp
loopne
leave
adc
call
lret
daa
inc
mov
or
add
sub
push
clc
lods
fmul
push
xchg
fwait
dec
jnp
and
cwtl
je
inc
stos
or
mov
pop
mov
and
adc
out
lock
rcrb
sub
add
fcmovb
in
in
adc
jl
cwtl
push
int3
iret
mov
mov
pop
fsubs
rcrb
cwtl
movsl
mov
pop
push
push
je
push
cwtl
iret
dec
arpl
push
pop
push
mov
gs
pop
stos
jp
cld
imul
ret
test
iret
aaa
stc
jge
or
pushf
stc
or
scas
iret
inc
and
xchg
js
fsubrl
cwtl
mov
jno
dec
lret
jo
mov
pusha
outsb
int
push
sub
add
sahf
bound
mov
popa
call
mov
lock
push
jecxz
dec
dec
sub
dec
shr
inc
lahf
mov
push
lds
fdivrl
daa
inc
pusha
leave
mov
lea
sti
add
xchg
jmp
das
mov
mov
fisubs
int3
lock
mov
rol
jo
mov
popf
jne
in
sub
outsb
pop
shlb
and
shr
inc
sub
nop
lret
xchg
roll
and
es
fstl
mov
fstpl
std
shll
pop
je
inc
mov
ja
subb
sbb
iret
mov
and
sbb
add
insb
push
in
jl
scas
mov
lods
xchg
cmc
mov
out
in
add
es
jle
cmp
ljmp
push
jbe
cltd
inc
imul
mov
cmpsb
or
fbld
push
mov
cwtl
dec
cmpsb
sbb
sti
icebp
or
lcall
adc
mov
lods
add
mov
mov
and
das
push
push
es
pop
sub
ds
cld
push
xor
lock
sub
mov
repz
jmp
pop
punpckldq
pop
fadds
sub
jne
push
push
pop
xor
and
das
sub
cltd
xchg
fidivrl
jno
mov
cmp
mov
adc
pop
xor
in
stos
lahf
fsubrl
sub
add
leave
test
test
sahf
in
sti
test
xchg
icebp
jae
shll
mov
xor
push
dec
imul
xchg
and
jmp
bound
pop
sbb
xchg
ja
add
xchg
sub
push
int3
jmp
jle
mov
xlat
pushf
pushf
rcr
xor
pop
xor
in
les
and
sti
js
mov
pop
add
std
pop
mov
mov
add
and
clc
enter
sub
pop
sarb
jo
push
dec
data16
aas
iret
jnp
push
push
xlat
jmp
scas
decb
mov
xchg
add
and
rorl
mov
in
jbe
aam
xchg
jbe
pop
sarl
cs
mov
cli
mov
icebp
cmp
add
fcompl
in
or
inc
jbe
addl
das
lret
cmp
sub
push
mov
mov
lea
out
int
pusha
and
xor
test
jg
or
pop
std
or
in
mov
lock
adc
or
data16
int
movsb
sub
or
ljmpw
dec
bound
stos
mov
push
fidivs
sub
cmp
test
inc
jb
xchg
inc
pushf
pop
pop
inc
pop
sub
fistl
test
mov
test
pop
push
test
xchg
sbb
dec
jb
cld
into
xor
mov
stos
add
mov
cmp
mov
push
scas
add
dec
inc
call
out
das
das
mov
cmp
pop
lea
add
sub
mov
push
jecxz
cmpsl
push
aaa
cmp
pop
dec
mov
add
imul
out
jo
repnz
mul
cltd
mov
and
or
pusha
sti
pop
sub
sbb
push
and
inc
addr16
or
or
sbb
lret
daa
in
out
fdivrs
adc
mov
lods
popa
xchg
sub
mov
mov
mov
ret
sti
mov
jnp
test
lahf
dec
mov
js
inc
add
into
insl
pop
lret
out
lods
push
dec
sbbl
mov
pop
imul
jl
jo
jno
loopne
pop
mov
das
inc
adc
mov
leave
cmp
jno
lahf
pop
adc
pop
mov
xor
jbe
mov
mov
ljmp
pop
loopne
clc
pop
cld
cmp
inc
xor
outsl
int3
jg
cmp
mov
mov
cmp
push
and
pop
push
jl
incl
xor
xchg
icebp
xchg
and
add
cli
lcall
pop
mov
ja
and
in
sub
mov
lock
cltd
enter
cmc
xor
in
inc
push
popa
xor
mov
lock
lods
mov
sbb
loop
xorb
aaa
daa
sbb
jne
aam
jns
popf
fwait
lods
and
insb
xchg
aaa
inc
inc
xchg
jp
pop
jo
sub
mov
loope
xor
pop
xchg
ret
cmpsl
test
iret
stos
cs
or
sbb
cmp
cs
pop
mov
pop
push
testb
movsb
nop
sub
das
push
out
jae
sbb
inc
inc
xchg
movsl
inc
push
pop
ficoml
pop
or
call
test
jg
jne
ds
test
push
imul
popa
dec
dec
adc
xchg
dec
pop
xor
sbb
mov
jo
sub
mov
pop
mov
mov
outsb
lahf
push
push
mov
int
cwtl
ret
lcall
push
dec
shl
sub
fnstenv
pushf
mov
bound
jg
scas
adc
sbb
js
jle
dec
jns
nop
std
push
mov
xorl
push
in
add
lret
insb
jmp
push
ds
push
cmp
jb
mov
adc
lock
cs
or
popa
out
mov
xchg
sub
in
aad
fwait
sub
nop
pop
inc
inc
cwtl
ss
dec
sbb
jno
rorl
out
sub
popa
insb
test
daa
mov
adc
fwait
xlat
add
or
add
push
sub
arpl
xchg
nop
cmpsl
movsb
adc
stos
movsb
cs
dec
pop
mov
mov
enter
pop
xor
adc
add
jnp
ret
aaa
test
stos
push
add
xor
adc
dec
icebp
pop
push
movsb
mov
jo
bound
cmp
add
jle
xchg
mov
test
jg
mov
or
fnstcw
fsubr
shll
imul
xor
sbb
push
test
push
sti
mov
pop
push
xchg
inc
push
jno
pop
push
xorl
mov
mov
mov
inc
test
lcall
inc
dec
xchg
jmp
int
push
rcr
dec
inc
inc
ja
push
arpl
mov
pop
xchg
fsubl
inc
mov
imul
push
cmp
push
movsb
xor
push
leave
shrb
sub
push
daa
ret
cmc
stos
push
aad
adc
or
sbb
hlt
add
ret
inc
imul
fwait
mov
lahf
mov
pop
jae
xor
test
jle
fbstp
into
in
leave
jmp
xor
or
mov
clc
addl
fisubrl
jecxz
data16
mov
fldt
mov
push
dec
inc
and
sub
js
loopne
mov
dec
insb
ds
lret
popf
xchg
pusha
inc
inc
aad
add
lret
into
add
loopne
shll
subl
out
push
in
push
aaa
or
cmp
jle
cli
mov
push
push
push
inc
lret
mov
pop
movsb
inc
pop
pop
xchg
pop
data16
gs
mov
test
mov
or
int
jbe
jmp
test
xchg
popa
repnz
inc
jb
cli
in
cmp
idivb
in
mov
jo
bound
inc
push
pop
int
loop
shrb
and
rolb
in
sub
cmp
xchg
add
jne
out
test
popa
add
lods
sbb
dec
xor
jg
cmp
imul
mov
xchg
loop
and
addr16
insl
mov
xor
mov
mov
inc
dec
mov
push
scas
push
stos
nop
pop
sarb
movsl
nop
imul
sbb
scas
fisttps
pop
popf
arpl
inc
pop
inc
mov
dec
mov
pop
push
mov
push
mov
jmp
scas
cmpsl
hlt
pop
jae
sub
mov
jb
mov
xchg
add
lds
mov
cmp
push
or
sbbl
pop
xor
lret
cmc
jp
sub
xchg
add
pop
push
sbb
ja
mov
xlat
jne
jl
lods
mov
inc
push
sbb
mov
into
mov
sub
insb
dec
cltd
test
popf
mov
adc
xchg
inc
pop
data16
mov
cld
shrb
push
dec
inc
pop
or
aad
mov
jb
jg
cltd
pusha
iret
fstpl
ljmp
pushf
and
mov
adc
jns
push
jae
jecxz
iret
sbb
and
sbb
xchg
push
fabs
mov
pop
and
xchg
repnz
sbb
cmp
jno
idivl
ja
and
data16
cld
jnp
xlat
cmp
call
jnp
idivb
pushl
mov
mov
adc
mov
adc
cmp
push
lahf
loopne,pn
push
pop
fimuls
and
shrb
stos
out
cmpsl
popf
jecxz
dec
imul
lock
dec
and
mov
or
xchg
enter
fists
add
pusha
push
iret
or
iret
mov
and
pop
cmp
cmp
and
test
inc
fistpll
pop
mov
inc
out
cs
jo
xchg
out
add
das
sub
xlat
dec
cmp
cmp
mov
in
clc
pop
xchg
add
lods
stos
cmpsb
nop
mov
fnsave
lea
cwtl
xchg
and
adcb
pop
xchg
mov
xchg
out
and
push
pop
add
cmc
inc
mov
out
mov
lcall
in
fmuls
mov
and
dec
cmc
jb
adc
stos
es
push
ret
pop
test
fnstenv
push
mov
xchg
dec
lahf
mov
sub
inc
add
mov
ret
insl
add
sbb
int3
pop
xlat
repnz
scas
dec
insb
jno
dec
push
adc
inc
cmpsl
xchg
and
mov
cwtl
hlt
ljmp
push
jns
aas
ja
mov
aas
mov
roll
addl
test
pop
subb
pop
stc
sub
les
push
mov
repz
mov
mov
shr
add
nop
into
fmull
dec
cwtl
inc
adc
or
pop
dec
mull
lahf
mov
pop
mov
cs
out
lds
lret
push
lret
push
or
fmull
mov
movsl
ret
fnstenv
in
or
fisubrl
cli
jle
fnstcw
cs
out
enter
stos
imul
mov
lcall
in
ret
flds
mov
and
leave
xorb
sbb
xchg
daa
sub
aas
or
cmpl
rcl
js
xor
ds
push
jl
ja
and
push
or
std
jne
repz
adc
or
cmpsb
mov
stos
mov
mov
lret
sti
cmpsl
lret
ret
xchg
jg
mov
push
nop
dec
out
sub
inc
scas
mov
outsb
mov
cmp
or
lods
sbb
ret
movb
jmp
cltd
into
pop
jge
push
and
pusha
mov
out
lock
inc
jno
pop
cld
rcll
negb
pop
es
imul
and
cmp
leave
cmp
add
frstor
pop
pop
lock
mov
jns
xchg
cmp
fisubs
jp
add
imul
mov
rcrl
cs
xchg
pop
mov
add
shrl
pusha
mov
shr
pop
sbb
nop
je
in
xchg
xchg
in
lods
mov
xchg
aad
add
inc
or
notl
add
movups
inc
ljmp
push
lcall
mov
pushf
push
popf
repz
xor
pop
hlt
push
sarl
repnz
sub
repz
arpl
in
cmp
cmp
xchg
call
cmp
xor
jne
das
mov
cmc
jge
lcall
in
mov
iret
andb
pop
sbb
sbb
bound
addl
in
imul
fldl
pop
repz
enter
nop
jl
rorb
and
clc
xchg
int3
outsb
dec
xor
leave
shrb
out
inc
mov
movsl
cmpsl
dec
inc
mov
out
jbe
xchg
inc
scas
fwait
dec
xchg
mov
xchg
movsl
popf
test
push
mov
cmp
mov
mov
lret
addb
push
incb
arpl
inc
repnz
das
rcr
stc
into
dec
outsl
and
mov
and
cmp
lcall
inc
in
jmp
cmpl
scas
mov
xchg
outsb
aam
jmp
mov
pusha
imul
loope
inc
pop
adc
mov
lock
mov
or
push
inc
xchg
or
or
roll
inc
pop
add
sub
adc
mov
cwtl
xchg
cmp
xor
jo
cltd
pop
shll
or
sub
aam
xor
jg
std
mov
addr16
mov
jns
dec
in
xor
cmp
sub
mov
in
fbld
test
sub
arpl
add
lds
das
jg
sar
xchg
pmullw
outsb
push
pop
in
into
pop
std
or
xor
scas
aam
mov
incl
pop
mov
mov
ret
mov
push
repnz
nop
out
inc
xchg
push
sbb
dec
lods
cli
cmpl
imul
ret
jnp
sahf
mov
inc
pushf
shrb
pusha
pshufw
in
aad
mov
fidivrl
lahf
adc
and
xchg
ret
jnp
push
das
cmp
mov
lret
enter
test
sub
add
test
hlt
or
aad
pop
pop
incb
mov
in
popl
rclb
jp
outsw
mov
int3
sub
in
neg
or
icebp
jno
insb
jbe
and
in
ret
loope
jbe
aam
xor
and
jg
ja
jecxz
mov
cltd
lods
dec
inc
ffreep
imul
xchg
into
out
inc
std
and
inc
outsl
xlat
lret
shll
mov
stos
pop
jg
rolb
cmp
push
dec
cmpsl
daa
loopne
dec
sbb
outsl
lods
dec
popa
dec
in
scas
cmp
dec
clc
jns
int
ret
cmp
lods
lahf
loopne
mov
gs
sub
cmp
data16
mov
pop
cli
movsl
repnz
arpl
repnz
xchg
mov
mov
pushf
adc
addr16
aam
mov
sub
call
pop
repnz
mov
repnz
inc
pop
mov
stos
ds
push
jno
xchg
cmp
cwtl
jb
lret
inc
rcl
scas
hlt
and
push
pusha
dec
movsl
add
cmp
lahf
xor
pop
pop
inc
and
or
mov
jo
popf
mov
mov
stos
dec
sub
cmc
shlb
in
sbb
xor
out
ds
push
enter
das
fstp
in
dec
xchg
out
in
ret
cwtl
out
adc
mov
pop
scas
pop
std
ret
test
cmp
lds
loopne
fdivrp
sbb
jae
jo
or
cld
ret
sub
push
andl
iret
jmp
or
jmp
in
pop
pop
std
push
jle
jecxz
std
jb
xchg
cld
pop
push
adc
push
cmp
push
inc
cmp
out
push
jbe
scas
jl
mov
aam
cltd
out
dec
lahf
xlat
dec
lods
clc
insb
adc
cmpb
lea
jnp
js
test
incb
jmp
loop
and
and
add
mov
add
mov
andb
add
test
sqrtps
sahf
pop
addr16
push
inc
shr
fistps
movsl
fcoml
loop
dec
pusha
lea
ret
movsb
aaa
push
pop
inc
xchg
fistpll
mov
adc
sbb
loopne
dec
cmp
and
mov
js
and
faddl
addb
mov
or
mov
xlat
rolb
xlat
or
mov
xor
aam
mov
cld
xlat
or
mov
aaa
lods
mov
cld
push
sahf
sbb
lds
pop
add
test
and
ljmp
push
sahf
inc
cwtl
or
dec
repz
mov
out
mov
add
mov
jae
out
out
ja
pop
jecxz
lea
call
xchg
in
push
dec
and
push
push
or
lea
add
es
mov
push
das
repnz
test
dec
fsts
dec
adc
outsl
pop
shrl
hlt
and
movsl
push
dec
stos
shll
sbb
cmp
push
mov
test
mov
mov
dec
ret
dec
aam
mov
lea
mov
or
mov
and
aad
xor
popl
ret
adc
xchg
jbe
inc
push
pushf
or
sbbb
push
mov
test
adc
jnp
mov
out
inc
add
outsl
adc
mov
imul
inc
dec
xchg
arpl
dec
and
fs
ss
cmp
jo
or
sub
aam
adc
sub
addr16
test
gs
pop
push
sub
add
and
jne
mov
stos
xlat
mov
xchg
fcmovne
cmp
add
dec
insl
pushf
fildll
mov
bswap
iret
sahf
mov
pop
dec
repnz
nop
xorl
jl
aam
sti
and
int
outsb
lahf
lock
jb
xlat
push
xor
xchg
popf
in
xchg
fs
push
lahf
sbb
stc
or
xchg
xor
ss
lcall
sbbb
or
push
fisubs
js
pop
in
sahf
mov
jmp
sbb
aad
and
adc
mov
push
rorb
xlat
push
xor
in
push
inc
pop
ja
int
mov
pop
div
lods
jmp
jo
cmp
xchg
or
mov
mov
icebp
sub
and
test
shrb
fdivl
loopne
xchg
shll
cwtl
push
cmp
test
lcall
addr16
sub
fsubrl
pop
dec
fnstsw
jmp
mov
pusha
lret
sbb
ljmp
jl
and
inc
fisubl
jbe
pusha
sbb
scas
repz
pop
cmp
and
pop
icebp
mov
xchg
das
gs
pop
stos
fisubrs
jp
inc
sbb
cmc
xor
inc
aaa
dec
mov
aas
adc
mov
outsl
div
in
test
ljmp
sti
push
sbb
sbb
out
xor
cmpb
sub
rclb
cmp
jns
xchg
mov
popf
pop
mov
imul
ret
dec
fnstsw
xor
lea
ljmp
sbb
jae
and
xchg
mov
bound
sbb
adc
sub
push
enter
dec
dec
push
and
sbb
mov
jg
bound
and
push
aaa
cmp
inc
xorb
iret
loopne
push
test
or
aad
xchg
bound
lret
and
popa
mov
out
repnz
sub
into
gs
ret
mov
cltd
mov
xchg
fmuls
and
jae
cmp
mov
orl
and
inc
xchg
mov
xor
mov
ss
gs
inc
mov
jne
adc
fs
add
pop
jp
xchg
xchg
xor
cltd
sti
cmp
xchg
xchg
inc
cwtl
jno
and
pop
xchg
add
leave
push
pop
inc
jo
mov
sbb
fxtract
cmp
push
push
pop
iret
add
mov
cmp
aas
rcl
aad
inc
xor
mov
test
fisubs
in
dec
fists
loope
ret
data16
addr16
jecxz
mov
dec
or
insb
outsb
outsb
inc
xchg
ljmp
fists
aad
cmp
insb
divb
in
jl
out
cmp
jo
fistl
xor
arpl
lock
cmp
stos
sub
test
sub
mov
mov
rorl
mov
subb
push
adc
xlat
inc
and
cmpsb
ja
inc
jecxz
pop
mov
sbb
sbb
push
outsl
inc
rorb
fdivrl
dec
sub
iret
test
adc
mov
aam
aas
push
add
in
mov
adc
sub
jle
sbb
cli
enter
aad
fisttpll
sbb
sub
enter
loop
mov
fsubrs
les
mov
lds
pop
mov
imul
xchg
jno
lods
push
dec
and
lret
inc
js,pt
bound
scas
xchg
mov
stos
push
cli
cs
cmc
mov
dec
pop
mov
xchg
push
xor
push
aam
mov
adc
mov
pop
push
imul
pop
mov
mov
bound
inc
mov
lahf
mov
insl
mov
iret
test
sbb
mov
dec
adc
dec
mov
mov
loope
ss
test
repz
pop
mov
testl
pop
mov
jmp
aas
cli
fdivrl
outsl
fwait
sub
loope
leave
lods
sets
jp
jns
pop
daa
mov
push
aam
cmp
loope
leave
movsb
in
flds
mov
stc
dec
imul
sub
or
or
icebp
pop
das
sbb
cmpl
mov
fildll
xlat
xorb
fsubl
or
cmp
lret
icebp
dec
xor
jge
pop
adc
push
popa
jecxz
inc
out
imul
xchg
fisttps
jl
mov
test
push
scas
jae
pop
fwait
lds
push
aaa
mov
inc
popa
cmc
xor
ja
cwtl
push
xor
xchg
add
jg
sub
cld
pop
pop
ficompl
fldt
sti
sbb
push
xchg
jbe
stos
jle
lahf
fnsave
lahf
push
xor
lods
push
sbb
adc
pop
jecxz
xor
std
repz
stc
cmpsl
aam
xor
movsl
fstp
pop
lods
jb
mov
jns
mov
pushf
xchg
jg
inc
adc
cmp
cs
cwtl
loop
movsb
sbb
pop
sti
fs
xlat
repnz
inc
sahf
pop
lods
lret
mov
jae,pn
adc
mov
mov
mov
fdivrs
jle
push
pop
adc
lods
data16
fnsave
stos
sbb
add
mov
push
es
aaa
pop
jae
dec
movsb
dec
loopne
push
fldl
mov
jge
pop
cli
das
adc
mov
shlb
loope
cvtps2pd
sbb
xor
cmpsl
ss
rcll
repz
cmc
push
jmp
fcomi
gs
push
repnz
pop
dec
stos
adc
repz
xchg
cmp
ss
movsb
stos
or
data16
cmc
xchg
movsl
jns
ret
jno
add
push
push
test
inc
mov
dec
cltd
pusha
push
lds
fstpl
std
mov
jae
ffreep
lahf
sti
jg
pop
xor
sar
fildll
or
in
hlt
fsubs
adc
mov
pop
pop
aas
std
imull
int
xchg
jbe
daa
inc
js
dec
add
sbb
test
aaa
test
dec
and
dec
repz
xchg
clc
push
and
testb
add
inc
andb
scas
cmpl
cmpsb
lods
shl
ds
and
cmp
pop
dec
sub
xchg
in
mov
sti
mov
mov
mov
or
cwtl
aaa
mov
xchg
fsubrs
dec
dec
cmp
add
adcl
cmpsl
dec
xchg
ja
pop
add
movzwl
sbb
xor
lods
int
mov
push
cmpsb
cmp
pusha
rcll
fnsave
xchg
add
push
stc
mov
xchg
xchg
shll
fistps
adc
pop
jecxz
inc
add
sub
pop
and
ds
out
cmp
fisubs
or
movsl
imul
das
inc
sbb
adc
daa
mov
insb
call
sbb
ja
cmp
popf
and
push
jmp
add
outsl
mov
jecxz
xchg
enter
test
mov
jnp
cmpsb
mov
cmp
jmp
mov
ret
or
incb
push
dec
rol
jnp
jae
dec
jl
push
add
lret
mov
dec
roll
add
fwait
js
out
inc
push
or
sub
pusha
mov
lcall
subl
adc
fwait
stos
fnstsw
call
cli
sbb
mov
sbb
inc
popa
popa
jmp
enter
cld
pushf
pop
and
sbb
stc
lea
mov
add
jns
pop
and
aaa
in
imulb
push
adc
inc
ret
sbb
xor
mov
mov
icebp
inc
or
pop
cmp
cmc
pop
jnp
icebp
rcl
stos
xchg
sub
mov
mov
outsb
testl
sbb
imul
adc
je
imul
aam
daa
xchg
lock
mov
push
dec
sahf
mov
pop
xchg
and
idiv
movsl
inc
adc
add
jmp
lahf
sbb
sbb
jnp
push
adc
ss
mov
aam
dec
xor
jb
and
clc
mov
out
lret
pop
push
into
es
call
ret
adc
jns
mov
sub
pusha
cwtl
and
scas
jp
dec
add
shr
filds
and
outsl
outsb
jg
imul
xchg
mov
sub
mov
rorb
cmp
lret
push
lods
scas
push
jmp
andb
scas
or
insb
xor
fstl
sahf
xchg
dec
mov
stos
cmp
pop
pop
cltd
pushf
loope
inc
push
add
inc
push
lods
paddusw
js
xchg
lds
jns
mov
stos
or
in
addr16
fistps
sub
xchg
andb
mov
rcl
inc
dec
std
fimuls
shr
and
pop
push
pop
cwtl
sub
out
or
gs
test
out
in
sbb
add
pop
mov
jae
in
push
and
and
mov
sbb
xorb
arpl
mov
stos
pop
xlat
and
and
stos
rcll
lods
xchg
adc
popf
cmp
iret
or
add
mov
mov
lret
test
pop
jne
fsubs
fptan
nop
lret
xchg
xchg
hlt
bnd
popa
subl
aad
or
jb
aaa
cltd
mov
and
aaa
xor
xchg
jns
mov
mov
sbb
fistpll
pop
pop
icebp
pop
inc
push
push
std
lret
imul
xor
lods
enter
mov
mov
cmp
mov
sahf
adc
repz
fnstsw
cmc
jecxz
mov
sub
lret
xor
xor
xchg
mov
sbb
push
cld
in
insl
test
sbb
pop
cmpsb
add
add
pushf
pop
sub
enter
int
in
or
or
mov
sti
insb
stc
pop
cmp
mov
sub
mov
push
in
dec
adcb
xor
je
es
fimull
cs
iret
push
std
out
loope
jl
dec
mov
pop
addr16
and
jge
fwait
fs
cmp
shll
into
mov
dec
push
adc
inc
inc
test
popf
xlat
cmp
lcall
popf
pop
imul
xlat
push
mov
adc
ljmp
fcoml
mov
aad
adcl
mov
cmp
movsb
inc
sti
jo
fadds
pop
je
orl
dec
clc
mov
pop
dec
clc
std
mov
xchg
test
subl
jl
jl
add
cmp
into
stos
ret
sbb
dec
xchg
cmpsl
cmp
enter
int3
andb
xchg
mov
mov
iret
fwait
cli
dec
mov
sub
imul
mov
dec
adc
imul
cwtl
sarl
dec
sti
xor
pop
stos
inc
nop
idiv
lods
pop
enter
xor
fs
lock
xor
inc
push
adc
mov
jno
cmpsl
dec
dec
mov
mov
and
xchg
push
inc
inc
das
xchg
ja
mov
cmove
scas
sub
pop
repz
dec
cmp
insb
add
fcoml
shll
pop
mov
movl
dec
mov
push
pop
inc
push
mov
sahf
mov
stos
in
or
loopne
sbb
in
push
pop
dec
push
call
inc
fcoms
xchg
cmpsb
pop
jmp
pop
pop
hlt
icebp
xorl
int
fwait
aas
dec
jbe
insl
pushf
movsb
pop
fdivrs
stos
imul
in
jnp
cmpsl
repz
mov
mov
das
adc
mov
cmp
and
out
push
mov
ficomps
adc
int3
cmp
icebp
stos
xchg
jg
push
cmp
rcrl
pop
dec
arpl
push
sar
dec
bt
xchg
sub
fcompl
out
inc
mov
add
mov
mov
arpl
mov
popf
idivl
mov
xchg
jl
enter
arpl
cmp
icebp
cld
pop
fldt
setle
nop
arpl
cmp
mov
pop
or
inc
sub
repnz
pop
cltd
pop
and
push
xor
jmp
push
push
aaa
or
jae
jbe
push
adc
and
pop
bound
jp
leave
pop
test
pop
sub
sub
test
and
cmc
sub
cmp
adc
loop
lcall
mov
jmp
and
inc
pop
dec
ret
or
mov
or
or
dec
pop
clc
mov
push
jp
gs
fdivs
and
pushf
rclb
push
int3
cwtl
lods
rcr
testb
cmp
mov
or
in
cmp
out
push
mov
outsl
mov
push
xchg
scas
inc
xor
jg
xrelease
jg
outsl
or
je
lret
push
data16
jbe
jle
movsl
insl
jecxz
xchg
inc
pop
mov
mov
pop
jmp
push
add
test
ja
adc
dec
sbb
sbbb
repnz
push
adc
inc
pop
js
dec
mov
mov
or
and
pop
shr
data16
mov
adc
mov
clc
or
pop
cmpsb
push
movsl
push
inc
popf
add
pop
dec
cli
cmp
fistl
shll
sti
test
aaa
int3
lods
in
xchg
pusha
cmp
out
stos
ss
push
or
cli
jne
iret
cmp
fisttps
pop
out
jecxz
jmp
push
pop
jns
sub
sub
sahf
adc
loop
pop
sti
cmp
dec
adc
mov
xlat
pop
insl
repnz
fsqrt
inc
jmp
xchg
popa
fnstenv
sub
mov
into
jo
add
into
xor
jge
sarl
dec
mov
arpl
aam
or
pop
cmp
lahf
test
inc
je
xchg
scas
stc
std
std
push
adc
pop
xor
inc
loopne
jge
push
jns
fbld
lret
in
cli
add
movsl
imul
xchg
sub
mov
shlb
sub
mov
and
ret
movsl
call
add
cpuid
sub
xchg
pop
mov
leave
sti
cmp
mov
mov
ror
mov
sbb
outsl
jo
mov
xor
dec
dec
int
xchg
lock
and
or
jno
repz
adc
mov
mov
loop
jmp
adcb
or
inc
ja
out
loopne
cmp
insb
mov
mov
outsl
xor
fs
jmp
call
mov
inc
cmpb
dec
pop
push
das
pop
jnp
pusha
push
add
adc
in
pop
popa
mov
popa
mov
les
lock
and
into
or
imul
pop
adc
lock
add
sahf
popf
es
add
subl
and
daa
pop
in
stc
add
push
dec
fwait
aam
sub
loope
inc
and
adc
js
mov
mov
enter
mov
mov
cli
push
pop
lahf
mov
mov
les
nop
fnstcw
movsb
mov
clc
rcll
add
in
outsb
hlt
sub
movsb
sub
sbb
and
sub
or
inc
lock
xchg
cmp
fistpll
push
cmp
stos
aaa
inc
xor
into
sbb
jp
cmpsb
push
xor
in
pop
std
push
cs
sub
loope
int
popf
jecxz
lods
sbb
jmp
add
mov
xor
aam
pusha
mov
jge
mov
mov
in
mov
out
pop
mov
inc
pop
lods
fldenv
aas
popf
inc
mov
jecxz
cmp
pop
jecxz
adc
sub
into
adc
adc
xchg
and
cmp
mov
roll
xor
mov
mov
scas
jp
lcall
xor
sbb
aad
dec
push
ss
push
add
movb
icebp
mov
jno
mov
lcall
adc
push
jo
sub
sarb
mov
mov
nop
pop
aad
mov
adc
aad
subl
ds
arpl
push
adc
imul
out
insb
pop
loope
cmpsb
or
jne
scas
shrl
inc
inc
aaa
cmp
repnz
inc
aaa
lret
mov
loope
ja
aas
adc
fs
sub
xchg
sti
mov
pop
popf
fldcw
pusha
es
out
push
ljmp
int3
aas
fwait
and
bound
dec
aad
sub
jp
pop
inc
notl
mov
add
imul
dec
or
xchg
mov
mov
popf
add
bound
push
jl
xchg
pop
mov
sarb
jnp
mov
push
jl
mov
jae
fidivrs
dec
ffree
and
movsl
in
jp
mov
jns
sarl
dec
ja
clc
cwtl
cmc
adc
ret
or
xchg
loop
inc
mov
icebp
cmp
or
or
mov
push
iret
sub
div
stc
lcall
inc
les
int
ret
mov
cmp
shr
xorl
mov
repz
lret
je
xchg
cmp
pop
cli
pop
and
mov
fisubrs
and
nop
inc
and
js
ret
adc
dec
and
pop
movsl
push
mov
fldenv
fst
xchg
fcomps
xchg
call
add
cmp
adc
add
sahf
sub
outsb
pop
sub
or
popf
pop
je
cmp
movsl
dec
add
pop
xchg
pop
bound
neg
and
lahf
pop
pop
lods
adc
cltd
dec
rolb
pop
xor
dec
push
repnz
add
lock
sbb
cli
xchg
packsswb
pop
lock
std
jns
push
shll
fs
mov
hlt
mov
je
fidivs
fwait
and
mov
mov
mov
rcrl
adc
sahf
mov
lret
cmpsb
sti
mov
push
fisubs
xchg
mov
add
pop
and
or
fwait
dec
call
sub
xchg
mov
sti
inc
and
add
dec
pop
lret
add
sub
add
push
jp
dec
push
mov
lret
mov
dec
cmpsl
ljmp
shlb
clc
xchg
shl
add
cld
iret
pop
pop
inc
sub
dec
jl
cli
cmpsl
push
add
lea
or
or
aam
add
dec
xor
sarl
fidivrl
and
std
std
sahf
arpl
insl
pop
ror
mov
sbb
fcomi
sbb
test
push
pop
fstl
fidivs
aaa
mov
sub
sbb
or
mov
push
inc
movsb
pop
insb
add
inc
xor
push
inc
ficompl
fcoms
aam
je
pusha
insl
jle
out
in
mov
jnp
popl
lds
cwtl
nop
movsl
out
roll
xor
into
imul
repz
lcall
push
icebp
jne
aaa
leave
clc
mov
and
jge
and
add
mov
imul
test
cmp
mov
int3
dec
mov
popf
lret
cmc
cmp
fs
ja
jnp
test
mov
ja
fdivrp
push
repnz
jecxz
mov
movsb
call
jge
cmp
cmp
push
or
mov
sub
out
out
sahf
jg
inc
shrb
int3
adc
cmpsb
inc
jmp
adc
fcmovnu
inc
stos
arpl
fs
push
sbb
ds
add
aam
mov
loopne
ja
add
adc
hlt
cmp
insl
push
jg
and
adc
xchg
lret
sbb
fwait
mov
mov
mov
xchg
jne
ljmp
pop
cltd
xchg
leave
outsl
fdivrs
cld
mov
loop
in
jp
push
pop
aas
repz
push
in
sbb
and
cmc
iret
lcall
jle
icebp
jg
mov
fildl
scas
and
fwait
cwtl
cmpsl
dec
push
jno
rcl
mov
nop
jg
dec
jne
push
adc
and
push
fidivl
dec
cmpsb
push
jecxz
rorl
sbb
fmulp
loope
push
fldcw
xor
lock
dec
inc
or
imul
scas
inc
add
mov
shl
aas
jle
adcl
pop
inc
repnz
out
in
mov
lods
cs
jl
inc
stc
movsb
xor
fwait
xor
fwait
mov
pop
xor
adc
adc
pusha
in
pop
jb
int3
mov
mov
dec
jae
dec
ss
jp
sar
cmpsb
mov
lret
out
push
fildl
les
mov
stos
rcrb
ss
sub
cmc
push
pushf
jmp
movsl
mov
xchg
jne
cmp
add
jo
lahf
jno
fwait
adc
stos
jg
mov
push
out
jnp
inc
push
sbbl
or
adc
sti
fwait
pusha
adc
scas
jmp
xchg
insl
pop
lretw
lods
mov
hlt
in
les
subb
aad
push
cmpb
add
adc
out
push
jl
sub
and
push
inc
cmp
mul
loopne
mov
call
mov
ds
xor
in
pop
inc
push
sbb
in
scas
imul
xchg
es
mov
cs
dec
imul
mov
test
subb
push
xor
dec
sub
xchg
jb
pusha
jns
shrb
cli
leave
mov
or
movl
dec
pop
addl
fistps
mov
pop
shll
bound
jmp
or
inc
mov
roll
jb
iret
jnp
mov
jb
scas
movsl
rcl
pusha
or
cmp
mov
or
divb
test
addb
jnp
xor
mov
mov
ds
aaa
lahf
hlt
lods
inc
sbb
inc
xchg
in
test
mov
cmp
scas
xor
inc
aaa
push
fwait
push
xchg
pop
dec
call
in
pop
mov
pop
inc
inc
mov
enter
fucomp
popa
fiaddl
jl
popa
and
gs
loopnew
in
xor
repz
lret
adc
shlb
adc
cld
xlat
data16
mov
xlat
push
das
ja
pop
cmp
xchg
cmp
mov
mov
mov
lret
push
sbb
mov
add
mov
leave
sti
decl
int
clc
xchg
sub
xchg
jbe
ds
adc
aaa
cmp
bound
scas
repz
xor
sbb
shlb
add
push
ss
push
mov
push
repnz
inc
sub
inc
fidivl
mov
push
ret
hlt
add
rclb
push
jg
sti
outsb
add
lcall
xor
adc
out
add
mov
mov
mov
dec
cwtl
in
xchg
sbb
repnz
sbb
mov
inc
daa
negb
push
mov
ret
outsb
out
adc
imul
add
lahf
push
mov
push
pop
scas
clc
mov
xor
add
sbb
add
jne
xchg
loope
inc
repz
test
outsb
rcl
icebp
fs
mov
xchg
nop
inc
jbe
or
lds
mov
inc
in
sti
mov
fldenv
mov
push
sub
push
data16
dec
lahf
pop
in
pop
sub
dec
add
push
testl
lock
mov
popa
pop
jl
pop
rol
jmp
add
jl
ds
cmp
and
test
cmp
repnz
mov
adc
add
or
fwait
cmp
mov
imul
push
dec
mov
jb
adc
das
jecxz
push
das
mov
mov
inc
sub
sbb
jg
push
jb
fs
int3
mov
stc
cmp
pop
nop
add
out
sbb
pop
push
mov
jge
icebp
das
and
cltd
push
pop
push
ret
pop
inc
out
outsl
aad
pusha
mov
jmp
aas
lock
inc
or
inc
inc
mov
add
stc
add
pusha
nop
add
ljmp
xor
lcall
cmpsl
je
jg
mov
insl
pop
mov
insb
cmp
cltd
dec
jle
push
fcoms
cmp
jmp
add
popf
or
rcl
test
in
into
push
jecxz
rcrb
fdivl
push
je
in
insb
cmpsl
inc
mov
mov
mov
loopne
lret
mov
sub
pop
xor
cmp
xchg
xchg
fimuls
into
jns
adc
sbb
mov
mov
mov
in
pop
in
fsubl
je
lods
and
sbb
aaa
add
jae
scas
outsb
fucomip
cltd
int3
jne
mov
ret
ds
push
bound
fucom
push
sahf
daa
dec
xchg
pop
loop
add
icebp
jmp
pusha
xchg
add
push
mov
adc
cmp
add
mov
out
xor
in
lods
shrb
imul
lods
push
adcb
pusha
sub
pop
pop
inc
icebp
mov
jge
inc
pushf
lret
leave
test
inc
pop
popf
sbb
inc
mov
cmp
and
cmp
adc
xor
jp
adc
sbb
test
mov
add
inc
dec
mov
call
das
shrb
addr16
pop
mov
das
jns
aaa
jne
cmp
mov
mov
lahf
mov
fwait
mov
push
cmp
push
push
mov
test
mov
xchg
jnp
in
dec
das
dec
call
mov
push
or
sti
push
and
pushf
adc
roll
mov
push
jle
lock
lret
lds
pushf
bound
adc
data16
ljmp
sbb
ret
mov
xor
stos
or
xor
ret
lea
mov
int3
mov
xchg
in
mov
std
jno
mov
cmc
cs
repnz
or
push
jmp
sbb
fdivrl
ja
jnp
pop
sbbb
inc
inc
pusha
lcall
pushf
mov
pop
mov
pop
repz
adc
fsts
sub
sbb
call
xchg
xor
inc
or
mov
inc
lret
add
imul
jnp
popf
leave
sub
mov
dec
mov
stc
pop
cs
fs
ficompl
dec
xchg
cmp
and
cmpsb
push
loope
test
clc
ja
mov
and
xlat
dec
mov
int
adc
xchg
push
icebp
stos
sbb
adc
mov
mov
cmc
inc
ja
pop
push
inc
fcompl
mov
enter
jl
xor
xchg
cmp
push
push
lret
rcl
pop
dec
pop
test
nop
pop
push
xchg
pushf
sahf
test
cmp
ds
stos
mov
mov
push
or
jno
jl
adc
mov
cli
repz
dec
mov
jmp
pop
out
shl
aam
loope
roll
mov
inc
push
ficomps
or
or
lret
jg
jmp
imul
cmp
xor
fildl
lea
loopne
lcall
es
cs
jmp
fcmovbe
in
popa
xchg
stc
dec
pop
lods
insl
sbb
movsl
ds
outsl
ja
jmp
repnz
dec
jge
adc
fdivs
cmpsl
jg
stos
out
dec
push
xchg
rolb
xor
mov
fiadds
pop
jb
sbb
int3
xor
mov
sub
jns
test
rorl
xchg
xor
int
xchg
sub
test
xor
mov
jne
jecxz
repnz
push
lea
std
addb
or
mov
push
or
push
int
pop
adc
leave
mov
cwtl
outsb
cmc
data16
shlb
jle
cs
inc
sub
bound
inc
fsubr
out
dec
inc
inc
repz
daa
jae
inc
rcl
pop
adcl
scas
xor
push
int
and
fstpl
xor
aas
out
inc
dec
push
and
xchg
pop
pop
ret
fstl
testl
fidivs
fs
mov
sub
adc
dec
in
das
lock
mov
xchg
pop
and
in
aam
push
cmp
in
jns
ficompl
xor
push
rclb
icebp
sahf
jmp
mov
add
mov
push
scas
sbb
fidivrl
push
enter
pop
pop
sub
xor
test
sbb
push
xor
inc
repnz
repz
outsl
shl
mov
add
stc
scas
loope
push
mov
push
dec
jle
jmp
push
ret
cmp
mov
push
imul
lods
out
in
adcb
out
mov
testb
lods
sti
cmp
pop
dec
imul
xor
inc
xchg
test
sub
insl
mov
or
call
mov
outsl
xor
pop
xchg
pop
xchg
cmp
xchg
dec
into
fs
mov
in
mov
les
out
mov
sbb
ljmp
xchg
call
jge
cld
xchg
cwtl
roll
ds
scas
icebp
pusha
stc
inc
shlb
jnp
mov
push
inc
xor
cld
lcall
shlb
je
push
bound
inc
in
adc
inc
dec
push
sti
dec
push
push
inc
xchg
test
inc
xchg
and
push
push
repz
ljmp
cld
jmp
lcall
out
push
mov
stos
into
jbe
push
mov
fmul
sub
push
dec
jge
sub
in
push
mov
mov
fidivl
mov
pop
js
loop
sub
mov
pushf
xchg
mov
dec
jp
pop
jb
ljmp
into
xchg
lcall
sbb
decb
cmpsl
fs
dec
fwait
add
xchg
clc
rcrl
add
jle
rclb
jno
in
xlat
popa
pop
scas
push
sarl
fdivrl
adc
xor
mov
ljmp
in
xor
inc
inc
out
jb
jnp
jecxz
incl
les
dec
pusha
rcl
popa
and
ja
pop
jb
pop
std
stos
sti
scas
aad
push
cmp
in
scas
mov
mov
jecxz
stos
adc
mov
sub
imul
xchg
mov
cld
test
out
stc
int
shlb
mov
iret
pop
out
push
fwait
xlat
dec
in
and
mov
mov
bound
ret
mov
xchg
shr
xor
lret
pop
dec
xchg
pop
push
jae
and
jne
hlt
push
and
sub
out
scas
pushf
push
pop
popf
add
pop
rcrb
fadds
loope
add
and
popf
dec
in
aam
sahf
xchg
sbb
xchg
movsb
rorl
imul
stc
mov
xchg
ret
jo
or
testl
gs
ret
lds
xchg
scas
mov
sbb
popf
cld
lods
std
rclb
sub
iret
xor
jp
loope
dec
xor
je
je
and
into
inc
rcll
iret
push
rcll
mov
cli
pop
insb
jno
outsb
shr
pop
push
pop
stos
adc
test
inc
cmp
pop
push
fwait
xchg
out
sbb
sbb
movsb
int3
mov
aam
push
lock
and
out
cltd
pop
dec
jecxz
pushf
loopne
xchg
cmp
clc
sub
subb
add
dec
clc
cmpsl
in
and
movsb
dec
add
sbb
cli
and
jle
aad
mov
stos
inc
adc
dec
insb
push
ret
inc
or
cmp
stos
stos
push
add
and
sbb
inc
pop
arpl
jne
cmpsl
and
mov
int
loopne
jg
mov
imul
out
std
or
fistpll
lea
cmp
js
pop
scas
loope
add
ret
sti
mov
fnop
enter
inc
pop
imul
xor
insl
push
mov
jecxz
inc
daa
aad
pop
mov
mov
shlb
scas
rcl
js
push
cmc
lret
mov
dec
in
pop
divb
outsb
clc
loopne
into
stos
pushf
ret
mov
leave
dec
xor
mov
int3
ja
pop
in
mov
repz
inc
pusha
jge
cmc
adc
pusha
cmp
dec
xchg
cmp
mov
push
dec
add
jle
inc
xor
inc
add
or
aaa
inc
mov
xchg
ljmp
jl
inc
push
cmp
outsl
fucom
xchg
imul
shlb
mov
scas
pop
test
daa
dec
inc
mov
jmp
and
pop
mov
out
push
iret
jmp
mov
sub
test
out
addr16
stc
dec
les
or
dec
test
aam
test
loope
and
xor
lahf
js
push
adc
stos
add
jecxz
les
push
dec
adc
in
dec
dec
fldt
or
push
in
ljmp
sub
pop
jb
sahf
push
xor
adc
into
mov
sub
mov
lea
sbb
mov
sub
aaa
cmp
mov
movb
repz
data16
les
pop
ja,pn
pushf
fcmovu
test
pop
cmp
shl
call
jbe
mov
push
mov
sub
push
shll
inc
cmp
negl
iret
pop
aaa
pop
outsb
lods
mov
push
mov
dec
testl
popf
aas
hlt
test
sahf
adc
je
sahf
in
std
xchg
ds
add
es
inc
pop
lcall
stos
pushf
xor
int3
pop
mov
adc
ret
in
daa
stc
sbb
add
jb
inc
lock
push
in
mov
inc
in
ss
stos
lret
xlat
in
mov
cli
jo
stos
xor
pop
xchg
mov
jo
cli
xlat
or
test
jno
test
aas
cmc
cmpsl
xchg
and
or
arpl
in
xor
xor
push
mov
lock
repz
stc
scas
mov
mov
pop
sahf
push
clc
movsl
in
stos
stc
cmp
rorb
out
jge
enter
fmull
in
jmp
inc
std
sarl
jmp
push
inc
rclb
cmpsb
in
cmp
mov
jae
add
hlt
sbb
fstpt
lret
mov
icebp
hlt
call
fmul
mov
jns
pop
xlat
popa
loop
shll
mov
adc
aaa
pop
ja
in
adc
test
test
adc
rol
xor
shl
dec
and
xlat
mov
pop
lock
pop
and
xor
sub
adc
pop
push
push
in
lock
push
arpl
cmp
in
rclb
xchg
imul
adc
mov
xor
mov
leave
and
mov
out
xchg
stos
xchg
ljmp
sar
dec
pop
in
jmp
js
cmpsl
inc
push
cmp
inc
jnp
scas
test
or
inc
lcall
imul
jnp
jl
mov
out
in
add
cmp
fstl
into
inc
xor
lock
pop
cmp
inc
dec
shr
inc
adc
mov
cli
mov
popa
clc
clc
insl
cmpsb
push
ss
cs
pop
cmc
push
dec
mov
lahf
cmp
add
push
lahf
jno
pushf
call
mov
insl
cmc
cmp
xchg
jae
and
mov
into
das
into
cmp
jb
stos
adc
mov
mov
aaa
popa
jns
xor
andb
add
imul
cmp
cmp
outsl
xor
loope
in
adc
mov
lds
xchg
jns
sahf
insb
call
pushf
adc
mov
outsl
int
xlat
and
mov
popf
les
push
movsb
lcall
enter
add
gs
repnz
sub
add
sub
fwait
pop
call
dec
in
lret
dec
sub
fwait
pushf
sbb
push
cmp
cmpb
enter
sbb
xchg
dec
mov
push
stc
jo
clc
push
mov
jns
jl
aas
cmp
dec
nop
and
out
fs
jb
hlt
xor
lahf
push
enter
lds
fsubrs
icebp
data16
shrb
bound
stos
push
adc
loop
add
pop
shll
insb
mov
mov
dec
loope
clc
mov
sti
icebp
mov
out
or
ss
or
xchg
negb
stc
jb
aas
push
ljmp
sub
sub
push
adc
dec
testb
pop
ucomiss
inc
mov
push
pop
imul
les
loopne
add
repz
adc
and
test
stos
inc
xchg
sub
cmp
jnp
pushf
dec
mov
cmpsb
xlat
lods
data16
cwtl
xor
shrb
stc
xchg
jnp
js
push
adc
lds
xchg
push
lds
inc
sub
sbb
enter
cmp
jo
rcpps
add
and
sub
jge
sahf
ss
jl
mov
fmuls
je
or
idivb
inc
in
mov
mov
xor
push
push
fsubrl
arpl
and
cmpsl
xchg
ret
or
pop
sbb
push
iret
or
test
jecxz
cmc
xchg
mov
jns
add
mov
adc
mov
or
and
out
jecxz
push
cli
jg
insb
xor
inc
in
cmp
and
inc
test
out
or
std
es
add
pop
xchg
ret
inc
mov
and
das
inc
ljmp
mov
or
mov
jge
pop
xchg
and
mov
sub
loopne
loopne
cltd
daa
jp
xor
adc
cmpl
add
insb
popa
mov
mov
add
repz
aad
inc
adc
jb
xchg
rorb
loop,pt
in
cmp
add
mul
xor
pop
inc
jl
cwtl
mov
inc
or
and
dec
aad
sub
pusha
outsl
xchg
test
mov
rolb
dec
mov
pop
fwait
mov
loope
sbb
mov
ljmp
mov
mov
or
jbe
out
mov
das
mov
mov
leave
fsubs
cltd
fildll
clc
mov
popa
in
push
shl
pop
and
add
add
ret
ret
test
jmp
adc
stc
dec
dec
mov
jbe
out
fs
add
sub
pop
cltd
push
clc
or
inc
mov
xor
mov
sub
mov
arpl
xchg
das
add
arpl
push
cmp
adc
enter
mov
mov
insl
fcmovb
sub
xchg
outsb
es
loope
dec
cmpsb
push
pushf
pop
mov
and
pop
jecxz
jnp
bsr
test
bound
sbb
into
push
loop
hlt
or
pop
adc
ret
daa
mov
mov
aaa
fildl
or
pop
jl
xor
or
cmp
loopne
pop
mov
sarb
dec
mov
xor
popf
lret
add
popf
test
adc
dec
and
mov
aam
lds
lds
lea
pop
rcrl
or
decb
enter
pop
push
loop
pusha
lea
cmp
adc
outsl
or
xchg
pop
ja
add
daa
js
fidivrs
ret
push
sbb
scas
loop
and
mov
mov
mov
aaa
andb
nop
aas
aam
xchg
data16
std
dec
shl
mov
ds
jecxz
add
add
jb
rolb
out
adc
push
enter
sub
js
mov
xchg
dec
sbb
dec
sub
adc
stc
inc
sub
js
repnz
mov
inc
push
sahf
sarl
ljmp
pop
in
mov
loopne
jo
aas
pop
mov
rcl
stos
push
xor
rcrb
or
jmp
pop
or
gs
pop
testb
cmp
xlat
dec
adc
lock
outsl
rcrb
lcall
dec
jns
dec
repnz
ljmp
inc
int3
pop
in
mov
into
adc
lods
adc
jnp
jo
push
mov
and
stos
out
cwtl
icebp
lock
pop
mov
scas
aad
stos
addl
fcoms
pop
gs
testb
jno
dec
push
icebp
dec
popa
cld
xor
call
repz
xlat
dec
ret
mov
xorb
jb
stos
or
aas
insb
and
sarl
mov
test
pushf
xchg
repz
scas
push
push
int
movsb
jo
lods
add
sbb
jo
xor
or
stos
ljmp
jmp
push
popf
add
or
fmuls
mov
lds
cmp
push
mov
testb
pop
xor
test
add
les
int3
xchg
xchg
dec
outsb
jne
mov
fs
mov
mov
mov
add
mov
cmpsb
ja,pn
addr16
repz
mov
adc
mov
inc
inc
cmp
jno
cmp
ret
adc
ss
je
mov
add
or
adc
push
push
std
push
xlat
test
gs
arpl
mov
xchg
aam
iret
cltd
adc
push
in
jge
adc
in
mov
xor
jns
imul
jmp
mov
scas
fisttpl
out
jno
push
pop
aas
or
nop
and
xor
jb
lea
push
in
lret
call
mov
mov
sbb
stos
sbb
mov
js
xchg
jp
subb
nop
mov
xchg
push
jo
loope
jecxz
xchg
rclb
sub
cmp
push
ret
pop
movsl
dec
or
mov
sbb
lock
mov
cmp
mov
insl
dec
lods
frstor
xchg
mov
fcompl
cltd
ljmp
jbe
test
xchg
inc
es
xchg
dec
jb
cmpsb
rclb
sarl
out
int
pushf
cmpsb
inc
xchg
mov
int
stos
jo
sub
push
xor
or
cmc
xor
or
popa
in
xlat
or
insl
dec
into
xchg
cltd
fmul
ljmp
sbb
xchg
enter
xchg
mov
mov
in
leave
inc
aam
fldcw
in
jb
sbb
dec
scas
jge
test
cmovo
push
cmp
xor
inc
cmpsb
pop
and
inc
pop
mov
push
mov
and
sbb
test
ds
xor
add
lret
xchg
jns
cmp
movsb
cmc
std
inc
popa
ljmp
jae
sahf
xor
jne
js
cmp
std
lret
xor
mov
inc
inc
subl
lock
imul
fnstcw
cltd
push
call
cwtl
in
imul
outsl
jb
in
adc
repnz
sti
dec
bsf
loopne
mov
out
cmpsl
clc
rclb
dec
mov
inc
or
and
ljmp
sbb
std
cli
jnp
leave
aas
sbb
or
dec
test
into
pop
je
mov
add
ja
sub
push
fildll
push
add
repz
das
in
scas
js
lods
stc
adcl
mov
cmp
xor
in
and
push
es
cmp
adc
iret
ss
push
stc
cmp
sub
loop
sbb
loopne
ret
and
cwtl
jecxz
out
xchg
inc
repnz
js
push
cltd
shr
or
js
adc
sbbl
sti
shll
out
clc
test
lods
sub
xchg
dec
lret
cltd
xchg
lret
mov
mov
mov
aaa
mov
imul
push
lds
cmc
jp
cmpsl
repz
push
add
movsl
gs
insb
in
lret
test
fadd
inc
lret
das
cmc
pop
in
jb
and
pushf
out
fmul
adc
int
scas
cmpsb
inc
jno
insl
jmp
popf
in
sti
rcl
iret
and
mull
andl
adc
insl
enter
mov
idiv
mov
mov
cmpsb
fs
shrl
cli
loopne
scas
pop
pop
mov
sti
das
pop
scas
sbb
xchg
pop
dec
jo
push
int
jecxz
sbb
cmpsl
int3
mov
arpl
rclb
xlat
test
adc
fld
addb
in
sbb
ja
mov
push
lods
and
mov
lds
pop
out
fs
cmpsb
mov
sbb
sbb
mov
dec
adc
mov
cmpsb
imul
pop
pop
adc
imul
xlat
xor
mov
push
mov
mov
test
in
popf
scas
xchg
lcallw
data16
cmp
mov
or
jno
push
inc
sub
jb
repnz
add
cmp
movsb
xor
inc
or
enter
push
pop
mov
iret
scas
lcall
mov
sub
bound
out
sbb
test
mov
xor
das
xchg
pop
pop
fcomi
test
mov
cli
xorl
sub
cmp
outsb
xchg
inc
mov
mov
gs
stc
pop
insl
sbb
lea
iret
jo
insb
xchg
and
mov
adc
mov
or
icebp
push
imul
pop
mov
outsb
and
scas
sub
xchg
pop
push
fsts
sub
dec
ja
stc
jle
out
xchg
push
out
pushf
pop
and
mov
mov
mov
dec
adc
xchg
push
out
jb
imul
fistpll
add
ret
xlat
lock
insb
mov
iret
call
and
mov
sbb
sub
push
sub
or
shrl
push
and
mov
or
popf
inc
xchg
pop
push
adc
out
int3
jg
cmp
jl
inc
popa
iret
xchg
add
enter
rclb
lods
mov
aaa
daa
or
jbe
imul
sbb
aam
sub
mov
push
add
pop
pop
scas
ret
stos
xchg
in
jmp
mov
sub
movb
cmp
pop
hlt
je
xor
push
xchg
call
sub
js
jecxz
xchg
fsubrs
sub
sub
ljmp
add
bsr
or
xor
shl
rorb
mov
loope
cmc
call
inc
pop
stos
push
xor
mov
sbb
adc
cwtl
fcoms
ljmp
in
bound
inc
xchg
pushf
ret
and
inc
pop
lret
iret
inc
shll
dec
jo
xor
xchg
call
cwtl
dec
fildll
aad
inc
rolb
arpl
lret
jp
cmpsl
bound
xchg
call
cld
push
jno
mov
in
inc
mov
ljmp
inc
ss
xchg
pop
out
and
sbb
or
imul
mov
nop
xchg
dec
cmp
cmpsl
jbe
push
inc
and
jg
aaa
xor
cmp
out
add
call
pop
dec
cmpsl
repz
addl
or
cltd
repz
push
push
pop
fistps
adc
mov
rcr
pop
pushf
cmp
cmpl
push
xchg
adc
or
jae
mov
data16
dec
call
jecxz
fsubs
and
and
push
std
add
adc
hlt
or
popf
outsl
imul
cwtl
dec
flds
adc
cmpsb
xchg
mov
sub
xchg
outsl
and
adc
dec
or
in
aaa
adc
stos
sahf
inc
cmpsb
jecxz
jbe
mov
clc
sahf
in
adc
notb
or
aas
adc
in
add
insl
sbb
cmp
mov
cmp
inc
sub
aam
jnp
sbb
cs
dec
sbb
out
xchg
or
cmp
mov
hlt
std
iret
sbb
sbb
jbe
sbb
push
insl
nop
test
jp
dec
stc
mov
jmp
mov
pusha
pop
dec
lods
adc
stc
mov
call
pop
fstpl
jne
aad
int
xlat
mov
mov
cmp
push
push
sbbl
adc
orb
cmp
push
sbb
cmp
jb
clc
or
sub
repnz
lret
test
movsl
outsl
enter
gs
sti
xor
pop
jecxz
jb
rcrb
sub
adc
ret
mov
cmp
xchg
jp
repz
push
xchg
bound
out
adc
imul
mov
mov
jbe
mov
mov
jle
jle
push
sbb
cmp
and
subl
stc
cld
adcl
push
dec
movsl
clc
mov
push
inc
loopne
or
xchg
or
or
lods
mov
pop
xlat
mov
pop
adc
ret
jecxz
dec
loopne
enter
cwtl
rol
push
in
test
mov
sbb
jecxz
divb
jnp
lcall
cld
stos
mov
xor
xor
pushf
out
sbb
jne
push
fnstsw
cmp
aad
xor
mov
mov
enter
orb
subl
xchg
out
mov
pop
mov
jecxz
pushf
inc
lahf
add
shl
pop
push
incl
dec
adc
mov
jo
mulb
mov
sbb
scas
jne
jge
pop
adc
mov
enter
js
insb
mov
hlt
xchg
xchg
ficoms
mov
mov
and
ja
mov
mov
xorb
test
test
xor
dec
mov
cmp
pop
xorl
loop
xchg
jbe
shlb
notrack
aaa
nop
cwtl
mov
inc
push
neg
inc
cmp
int3
push
jmp
lods
lcall
out
push
pusha
std
sub
push
dec
lock
pop
lcall
repz
fdiv
add
push
stos
push
movsb
mov
or
mov
cmc
outsb
push
frstor
push
xor
lret
and
or
out
cwtl
icebp
and
lret
aad
push
mov
aaa
jae
adc
fucomp
ja
dec
jns
mov
loopne
adc
popa
outsl
jmp
cmp
out
sub
add
test
sbb
ljmp
ficoms
mov
movsb
xchg
ja
jl
adc
dec
push
sbbb
mov
sbb
xchg
push
mov
push
push
lahf
lret
cltd
mov
mov
push
and
out
jns
add
loop
and
xchg
movsl
push
lea
xchg
jge
hlt
ja
sub
movsb
hlt
out
pop
pop
or
popa
insl
and
push
dec
sbb
and
adcl
in
push
flds
enter
fidivl
cmp
cld
cmp
sub
mov
or
push
nop
ljmp
xchg
dec
sahf
mov
mov
inc
popf
push
popa
xor
inc
xor
subl
dec
xor
repz
mov
jb
cwtl
cmp
sti
inc
xor
xchg
inc
lock
popf
and
test
je
jle
add
xor
adc
dec
push
jmp
call
out
movsl
subb
jmp
and
inc
cwtl
out
mov
inc
cltd
cwtl
inc
cmp
cmpsb
dec
mov
sbb
mov
sub
jne
jp
daa
mov
pop
cli
or
pop
push
inc
push
pusha
sbb
loop
mov
lods
dec
dec
out
fs
imul
popa
ss
lahf
test
int3
leave
sarl
mov
sbb
fimull
mov
into
out
jno
lahf
add
mov
sbb
add
inc
sub
cmc
cmc
push
cld
fsubs
andb
jo
adc
add
arpl
adc
test
clc
fwait
push
jge
je
mov
push
add
lods
lcall
fs
lret
jecxz
sbb
fs
dec
divb
ljmp
stc
repz
push
dec
jbe
push
test
cmp
repz
push
sar
dec
mov
xor
rclb
mov
cs
es
out
mov
das
push
inc
or
mov
mov
dec
push
ret
and
shrb
mov
jle
cld
jmp
cltd
jo
xchg
push
rcr
and
fisttpll
scas
nop
dec
addl
cs
out
xor
mov
cmc
mov
mov
inc
sbb
pop
mov
test
ss
sbb
in
sti
adc
cmp
fs
mov
enter
push
stc
cmp
in
repz
or
and
dec
dec
mov
adc
mov
sub
xchg
pop
incb
jbe
mov
mov
jnp
rorl
incl
mov
dec
push
dec
sub
adc
cmp
fadds
fisubrs
mov
enter
dec
ficoml
cmp
movsb
hlt
mov
popf
xor
aaa
ret
stos
fisttpl
fbstp
sbb
xchg
mov
lret
and
cwtl
fiadds
inc
or
inc
pop
xchg
and
add
shrl
popf
lahf
mov
sub
sbb
pushf
adc
mov
pop
lret
scas
sub
inc
or
add
lds
xchg
xchg
sbb
lods
fisttps
dec
test
and
jle
pop
jge
std
adc
enter
inc
sbb
xor
sbb
inc
scas
or
pop
fiaddl
neg
movsb
lock
iret
rcrb
loop
sub
push
pop
push
mov
inc
xor
adc
adcb
sarb
popf
jo
out
sahf
mov
inc
xchg
dec
out
sub
jge
inc
jo
sub
leave
mov
mov
fstpt
in
test
ffreep
iret
rcrl
shr
iret
sub
inc
movsl
shlb
sarb
out
es
adc
out
leave
jge
bound
cmp
aam
pop
mov
lcall
xor
clc
into
pop
cmp
cltd
pop
insl
xchg
dec
pop
and
sar
adc
mov
cld
xchg
adc
aad
ds
mov
movsb
add
mov
sbb
sbb
mov
test
pop
xchg
cwtl
xor
ljmp
jg
es
jmp
dec
inc
icebp
je
out
or
adc
sbb
ds
xor
fbstp
push
mov
or
jo
lret
pop
shr
into
mov
es
cmpsb
xchg
jge
mov
pop
popf
insl
lods
inc
cli
repz
mov
insl
mov
and
xor
out
sub
push
mov
stos
mov
xchg
pop
into
or
ret
pop
add
xor
inc
mov
gs
pop
lret
mov
cld
xor
inc
bnd
cmc
or
adc
xor
sbb
divb
xchg
sbb
xchg
imul
lret
pop
js
jp
jns
fwait
cwtl
sbb
inc
sahf
xchg
out
incb
outsl
shll
cs
push
jnp
imul
add
pop
jns
cltd
jle
pop
outsl
daa
lret
repnz
jl
nop
xlat
inc
outsb
pop
mov
enter
jnp
loopne
lahf
pop
mov
popa
rcr
sub
rcll
jmp
and
sub
inc
adc
dec
shrb
movsb
out
mov
iret
cmp
lcall
push
testb
sbb
icebp
repnz
lock
leave
or
and
mov
lock
pop
aaa
jmp
xor
cmc
xor
aad
cmp
mov
push
jb
sub
out
push
addb
in
pop
mov
ja
ss
jmp
ret
pop
adcl
ds
sub
cli
out
push
jecxz
lods
adc
int3
clc
inc
jae
ds
mov
add
fistpl
popf
mov
jg
push
mov
es
int
in
add
cmp
dec
out
cmpsb
test
mov
sbb
mov
repnz
fdivrs
pop
call
enter
stos
pushf
push
dec
sub
pop
sub
mov
adc
arpl
push
in
cmpsb
js
out
mov
or
inc
or
lea
imul
jl
repnz
stos
fnstcw
test
outsl
lret
in
push
mov
inc
shrl
ss
ret
divb
xorl
js
repz
aaa
mov
pop
stc
fisubrl
inc
jp
orl
jo
mov
dec
mov
out
jnp
out
lods
enter
andl
loope
ret
adc
xor
cmp
sbbl
xchg
mov
ljmp
ja
int3
pop
xchg
mov
stos
scas
mov
jb
and
jmp
pushf
sub
inc
cmp
xchg
aaa
or
lret
push
cmp
mov
movsb
mov
aad
adc
xchg
mov
fwait
iret
pushf
and
push
repz
ret
xorb
sub
push
iret
pop
jle
push
lret
push
popf
pusha
in
pop
fcmovne
and
cmpl
push
divl
cmp
mov
push
adc
sub
push
xor
sbb
and
out
mov
subl
fistpl
sub
js
cltd
sahf
in
or
ret
push
sti
cmpl
or
incb
leave
movsb
pop
in
cs
sbb
adc
aad
sbb
ja
out
fsubr
sub
adc
jge
not
mov
mov
push
dec
push
push
aaa
pop
inc
and
inc
sub
mov
xor
mov
xor
filds
sarl
inc
pop
nop
mov
addl
dec
pop
popa
jae
stos
cmp
lahf
stos
pop
pop
xchg
sti
aam
rcll
sub
push
pop
lock
shl
inc
lods
lock
xchg
cmpsb
xor
inc
outsb
mov
stos
and
sbb
mov
adc
mov
mov
mov
out
mov
repnz
adc
mov
int
xchg
ud1
mov
lock
add
push
cmp
into
sub
pop
jne
inc
pusha
and
test
mov
mov
mov
push
scas
adc
test
sbb
nop
out
mov
or
sub
mov
stc
push
and
xchg
jg
mov
fbstp
jno
repz
and
jns
dec
sub
clc
pop
push
int
test
mov
inc
xlat
pop
add
filds
xor
inc
pop
pusha
dec
inc
popa
cld
or
faddl
nop
mov
push
stos
fdivl
test
cmpb
mov
inc
shrl
in
bts
jmp
xor
stos
inc
push
es
pop
fsubl
ret
pushf
ljmp
loopne
xchg
aaa
popa
and
outsb
andb
sbb
incb
aaa
mov
iret
in
sub
shlb
sub
jae
mov
pop
and
xor
mov
jge
push
xor
loope
xchg
and
daa
imul
aad
xor
lods
pop
adc
push
push
jnp
test
addr16
sar
and
xchg
add
sub
stc
inc
xchg
lods
imul
jg
ror
sarl
mov
ljmp
pop
cmp
push
dec
mov
adc
inc
fsubr
push
in
mov
sti
or
push
sub
test
lcall
lar
mov
jle
dec
pusha
shrb
inc
mov
adc
mov
stos
sbb
js
xor
sbb
pop
pop
test
iret
xor
aaa
adc
icebp
jl
movlps
cmp
or
fdivl
mov
jo
call
fsubrl
ja
repnz
jb
fidivrs
lods
jmp
sbb
xor
xchg
mov
mov
aaa
or
inc
adc
scas
pop
inc
sbb
push
xchg
hlt
jnp
mov
cmp
sbb
jle
call
pop
and
js
lock
dec
orps
mov
movsb
cmc
pusha
cli
cmp
xor
insb
adc
mov
sbb
iret
and
xchg
jae
and
mov
sub
movsb
mov
sbb
int3
popf
jns
int
repnz
mov
mov
jle
outsl
cmp
imul
xor
xchg
rorb
jae
into
arpl
out
dec
sti
and
push
xchg
test
je
outsb
scas
int3
adc
xor
ljmp
and
call
adc
mov
adc
jbe
mov
add
cmc
add
cmp
and
push
cmp
cmpl
sti
js
fdiv
sub
mov
mov
test
mov
and
xlat
in
cmp
fcomip
or
dec
push
push
popa
mov
pop
adc
sbb
adc
push
scas
push
pop
push
jl
mov
enter
sub
sbb
pusha
outsb
jp
ret
jne
cld
xchg
loop
ret
pusha
sub
cmp
pop
fwait
cld
jmp
xor
mov
clc
out
aam
lods
mov
xchg
mov
xchg
call
mov
fcmovne
or
inc
mov
or
sbb
fs
add
sarl
inc
out
les
dec
jge
mov
rcr
inc
jbe
cmp
inc
testl
mov
cli
fsubr
mov
inc
push
cli
test
repnz
and
or
mov
xor
mov
jp
cltd
mov
dec
loop
test
orl
cmp
jo
adc
pop
pop
addr16
out
cmpl
imulb
insl
aaa
ret
jno
or
icebp
sbb
add
jmp
loopne
xor
inc
xchg
bnd
loopnew
cmpsl
dec
or
mov
add
add
adc
sbb
imul
xor
ljmp
mov
outsb
shr
mov
fcomps
push
cmp
fstl
in
dec
and
scas
or
stos
adc
jno
and
push
jbe
xchg
fwait
call
mov
popa
sbb
lret
dec
insb
ds
dec
inc
es
out
sbb
stos
jl
lea
in
mov
sub
inc
addr16
mov
out
je
adc
mov
dec
mov
addb
sbb
mov
xor
popa
mov
jo
mov
jg
stos
xchg
test
jge
jno
sbb
mov
jo
inc
fstpt
sbb
dec
pop
leave
sahf
lcall
and
sub
inc
mov
jle
or
syscall
adc
push
pop
xchg
push
ret
in
insb
pop
xor
lods
mov
cltd
lea
mov
pop
mov
sbb
incl
add
jl
das
jnp
lcall
mov
jne
cmpsb
int
aas
mov
pop
mov
ss
je
mov
mov
adc
lods
adc
or
push
mov
mov
xchg
xchg
adc
movsb
and
xor
inc
mov
dec
insb
adc
or
adc
pusha
test
mov
pop
mov
ret
je
sbb
xor
dec
inc
dec
mov
jg
imul
adcb
cmpb
cwtl
rcll
push
lods
and
stos
pusha
ret
movl
idivl
adc
add
push
sbb
cld
sbb
clc
pop
xor
xchg
mov
mov
out
jp
dec
sar
xchg
jne
pop
lds
jle
cmp
fscale
add
outsl
mov
test
je
arpl
fcmovne
lcall
sbb
pop
or
mov
loope
cmp
ret
pop
aas
scas
sbb
lea
sub
dec
cs
data16
fisttps
pop
lret
gs
mov
enter
mov
jp
icebp
adc
mov
loop
sbb
fidivrl
push
pop
addr16
rol
xchg
mov
pop
push
xchg
test
and
cmc
sbb
mov
push
fldt
rcll
dec
or
push
sbb
jo
xchg
mov
loopne
das
gs
mov
push
lods
xchg
ljmp
push
pushf
sub
iret
push
das
test
inc
or
xor
jp
aas
aam
lds
cmpsl
inc
pop
aas
imul
mov
dec
shrb
sub
xchg
add
in
nop
dec
adc
jle
jle
enter
fs
cs
outsb
negb
hlt
mov
cmp
dec
faddl
clc
mov
cwtl
jne
lahf
stc
mov
or
mov
pop
lret
mov
cmp
xor
push
mov
mov
aaa
mov
cmpsl
xchg
add
pop
mov
out
icebp
out
jecxz
lret
xchg
shll
mov
push
lods
add
inc
xchg
sbb
scas
and
xchg
cs
out
xor
out
mov
repnz
lahf
jbe
dec
imul
and
ljmp
pusha
out
aas
sbb
or
stos
data16
sbb
pop
jle
lret
in
bound
and
arpl
outsb
lret
pop
sub
mov
mov
cmp
mov
add
shll
mov
rorb
ljmp
xor
cwtl
aaa
and
sub
mov
imul
dec
jmp
mov
sub
xorl
iret
negb
mov
lahf
lret
xchg
push
xor
inc
lds
stc
or
and
push
test
or
fdivl
mov
lcall
aam
pop
shrl
fst
leave
inc
pop
sbb
mov
fdivs
in
and
mov
sub
cmp
pop
mul
nop
mull
dec
adc
push
shlb
xchg
and
mov
sbb
addl
pop
lahf
pushf
divb
cltd
sbb
sarl
add
popl
mov
pop
inc
je
popf
or
insl
mov
icebp
insb
shll
jbe
sti
dec
aad
cs
inc
rep
lahf
in
fisubs
push
out
adc
and
test
addr16
push
push
mov
fistps
jp
fwait
daa
xchg
mov
popf
xchg
pop
ss
mov
idivb
add
mov
sbb
mull
xchg
cmpsb
push
cs
fcoms
mov
adc
rcll
mov
shrb
fcoms
push
pop
stos
jns
lret
push
int3
jg
nop
adc
jg
pusha
in
jo
cmp
jecxz
lret
fisubrl
adc
les
bts
ss
int3
or
movsb
cmpsl
or
aad
or
push
push
jecxz
sbb
test
mov
sbb
cmc
and
xchg
fcmovne
jg
xchg
push
int
or
push
sub
in
sti
or
stos
pop
imul
out
fisttps
dec
dec
mov
addr16
push
enter
ret
lock
or
mov
shlb
mov
enter
cmp
dec
pop
hlt
xor
add
jbe
mov
movb
push
and
add
mov
and
div
sarb
mov
push
mov
jnp
sbb
cmp
mov
xor
je
jle
jmp
mov
fcoms
inc
cmpl
icebp
jb
mov
jbe
dec
inc
fidivs
scas
mov
adc
add
lcall
push
add
dec
cmc
sbb
mov
int
inc
push
cld
sbb
fldl
or
add
test
cmpsl
inc
sar
jae
sti
push
fcompl
loopne
or
lea
out
jb
sub
mov
test
jmp
in
push
adc
mov
outsb
lret
and
mov
pop
inc
mov
jg
int
jg
leave
adc
cmp
nop
enter
adc
add
fstpt
daa
scas
and
out
and
les
add
inc
mov
sbb
push
sar
or
sub
pop
orb
mov
mov
and
fidivs
lock
cli
xor
inc
jae
movsb
mov
mov
rorb
aam
jne
loope
test
inc
out
inc
out
pop
push
xchg
dec
mov
cmc
cmpsl
loopne
inc
push
sahf
add
add
add
xchg
mov
add
adc
sub
addr16
sub
sub
rorl
dec
subb
test
jmp
pop
cwtl
test
fmull
pop
mov
adc
jp
cmp
inc
js
fisubl
test
pop
jae
fcompl
mov
js
jl
inc
jo
data16
push
in
add
push
and
mov
ret
inc
and
sub
sbb
dec
sar
ret
pop
mov
adc
jmp
pop
cltd
lret
fnsave
sti
jle
sub
mov
sub
xchg
sub
xor
add
or
mov
mov
out
jno
mov
adc
int
movsl
sub
mov
dec
cwtl
add
stos
aaa
dec
es
lahf
mov
xor
mov
mov
xchg
dec
pushf
xchg
mov
xchg
insl
pop
cmp
ret
shll
sbb
add
inc
lock
pop
std
addr16
xchg
sub
inc
js
fstpt
cmc
adc
lods
sbb
insb
pusha
add
repnz
call
loop
mov
push
jecxz
inc
jl
adc
imul
pop
cli
fidivs
in
adc
dec
sbb
add
js
mov
jb
inc
and
fmul
inc
out
ss
jmp
cmc
ficomps
xchg
cli
adc
cmc
outsl
out
fsubrl
inc
aas
mov
and
pop
pop
sub
push
push
clc
dec
test
mov
loop
inc
das
scas
into
leave
jecxz
andb
pop
fwait
jne
cld
test
lds
jbe
mov
rcrl
imull
adcl
jecxz
hlt
adc
ss
repnz
sub
mov
pop
cmc
sbb
in
lahf
loope
in
xor
out
out
fstps
ljmp
sbb
loopne
mov
idivl
jecxz
lea
push
rorb
cmp
hlt
clc
inc
sbb
inc
add
mov
inc
lds
mov
add
pop
add
jl
popf
or
js
lret
or
xchg
loope
sub
test
jne
inc
pushf
shr
ret
push
push
push
movsb
arpl
arpl
insb
pop
add
add
cmp
sbb
inc
adc
aas
fsubs
int
cmp
inc
pusha
inc
fildll
in
pop
shl
sarl
xchg
je
das
add
and
arpl
pop
dec
dec
sbbb
lret
mov
pop
mov
cwtl
dec
lcall
test
jg
mov
lock
adc
cwtl
sub
adc
jle
in
xchg
sbbb
fmul
loopne
dec
mov
clc
and
jmp
inc
xorl
or
test
lcall
jecxz
push
sti
outsb
push
loop
sub
cmc
ret
rcr
inc
lcall
sub
jbe
sahf
lahf
test
fsubrs
scas
pop
popf
aam
sbb
shrb
mov
sti
lds
out
and
lds
inc
or
cwtl
pop
in
inc
sub
je
test
jbe
out
roll
xor
bound
ljmp
inc
pop
repz
mov
mov
shlb
scas
or
push
sub
mov
dec
jle
adc
inc
sbb
aas
outsl
pop
outsl
mov
bound
jnp
popf
jbe
jbe
gs
push
iret
xor
lds
pop
fdiv
aas
pop
jno
in
jne
and
inc
lcall
sbb
and
sbb
fsubl
inc
sbb
shrl
cmp
jecxz
add
pusha
fisttps
lret
cmp
push
lcall
gs
push
ficompl
push
test
sub
add
stos
cmp
sub
inc
loope
movb
mov
lahf
adc
cmpsb
and
pusha
daa
cmp
xchg
xor
gs
xor
adc
fistl
daa
int3
mov
fs
push
push
dec
sub
cmp
mov
out
out
cmp
out
out
ss
shll
dec
sahf
rcll
adc
and
lahf
fimull
mov
xor
xchg
mov
pop
xchg
fisttpl
cmp
mov
mov
xlat
pop
jbe
jle
mov
hlt
cmp
pop
pop
shr
add
add
xchg
dec
shlb
rcrl
std
pop
fcomp
lret
cmp
push
adc
and
cmp
mov
mov
out
jg
ss
repnz
add
inc
js
push
mov
in
fs
mov
jecxz
cmpsb
ja
aas
xchg
shrb
sub
pop
inc
fsubs
lea
aam
lcall
pop
lods
pop
mov
mov
je
sbb
pop
sub
fsubl
cmpsl
jbe
push
lds
das
aaa
inc
je
clc
fisubl
enter
adc
xor
inc
sti
repnz
daa
psrad
xchg
in
bound
popa
ret
cltd
mov
in
sahf
mov
mov
pop
mov
xchg
dec
fs
dec
pop
popa
mov
sar
add
shlb
pop
mov
and
jne
mov
iret
push
xchg
inc
or
or
leave
sbb
pop
or
fnstcw
and
adc
lea
or
and
dec
xchg
sti
jg
push
int
mov
jbe
out
add
test
and
dec
stos
mov
push
and
cmp
test
pop
scas
sti
pop
lret
les
pop
adc
aas
cmp
mov
daa
lcall
mov
sub
hlt
popa
das
mov
add
dec
push
into
adc
push
push
and
sub
mov
dec
addr16
mov
mov
sahf
lahf
cmp
sti
push
aad
pop
daa
sub
dec
sbbb
mov
stos
jg
out
cmp
fadds
dec
pushf
movsl
dec
push
pushf
sbb
sbb
sbb
adc
jp
push
jne
stos
out
addr16
sub
test
sub
dec
sub
xor
popa
pop
push
aad
popf
fwait
sub
or
cmp
scas
lds
cmp
push
insl
dec
add
inc
inc
out
lds
and
jmp
dec
pop
xchg
jecxz
sbb
icebp
mov
mov
ret
jno
cli
movsl
shll
mov
sbb
push
lcall
ret
js
jnp
cmp
cmp
shrl
jle
into
push
adc
inc
sub
and
or
jle
scas
pop
in
cmpsb
jbe
jle
pop
push
or
imul
inc
jge
imul
jmp
scas
je
repz
inc
sub
mov
aaa
aas
aaa
push
add
add
sub
addr16
and
scas
fcmove
imull
mov
mov
ljmp
cmp
sub
fstpl
jmp
in
insl
test
sub
fstl
out
jmp
aaa
dec
mov
pop
add
cld
or
jg
adc
in
xchg
jno
cmp
xchg
adc
mov
dec
int
mov
hlt
arpl
lea
push
xor
jle
fmulp
lcall
jl
push
test
adc
cwtl
lcall
dec
mov
inc
sub
or
call
inc
push
cltd
jecxz
push
jmp
nop
pop
in
mov
pop
adc
adc
daa
mov
pop
mulb
inc
mov
imul
notl
pop
notl
add
mov
xor
jns
rorl
bound
hlt
mov
fcompl
dec
cmpsb
ljmp
or
test
cmpsb
imul
out
les
sub
mov
int3
cli
mov
jbe
add
mov
mov
mov
fsubs
and
je
push
test
nop
mov
and
imul
xor
mov
stos
mov
popf
cmp
mov
xchg
js
xor
dec
mov
sbb
rcll
xor
les
mov
mov
in
js
dec
pushf
jb
mov
scas
imul
mov
push
jp
adc
movsb
test
data16
adc
sbb
jnp
sub
das
cltd
pusha
sti
lds
sbb
mov
lret
lcall
mov
sbb
pop
dec
jo
clc
loopne
push
inc
mov
fwait
scas
dec
ds
lods
sbb
imull
adc
daa
dec
imul
jo
sbb
push
push
push
je
out
divb
mov
lds
nop
cli
mov
cmpl
push
mov
add
xchg
js
jbe
inc
jnp
mov
test
sti
mov
loop
add
leave
sbb
and
sbb
test
pushl
add
imul
stos
cmp
push
pop
xchg
cmpxchg
aas
daa
jle
fcmove
int
imul
dec
mov
fidivrs
test
xchg
push
push
jp
out
rcll
mov
fcoms
jnp
mov
sbb
inc
lock
inc
repz
pop
cs
notb
shlb
pop
imul
jnp
push
aaa
push
inc
shr
and
xor
lock
outsb
test
cs
int
imul
lea
movsl
mov
mov
out
add
pop
mov
into
jecxz
lods
jge
mov
into
xchg
adc
decl
mov
mov
jno
js
enter
arpl
pop
mov
xor
loop
inc
cmp
pop
mov
loopne
ljmp
push
add
sahf
scas
cltd
dec
and
push
add
adc
mov
daa
fistpll
pop
cmpsb
gs
cmp
movsb
sbb
add
scas
lods
lcall
daa
mov
jns
cmp
cwtl
ds
sub
mov
loope
rorb
test
push
xchg
mov
aaa
lret
in
sbbl
cmp
jbe
xor
dec
lds
pusha
cli
xor
int3
push
leave
call
movsb
mov
push
lcall
inc
jae
inc
inc
repz
push
adc
hlt
gs
adc
push
nop
push
leave
inc
out
pop
xchg
xchg
xchg
stos
push
out
inc
adc
movsl
xchg
xchg
sbb
in
xchg
mov
in
jp
ret
andb
pop
mov
ja
cmpsl
jne
jne
mov
jbe
xor
jbe
cmp
jno
add
jbe
pop
int3
test
mov
dec
ret
jae
in
outsb
std
inc
rclb
lea
mov
addr16
mov
mov
arpl
addr16
test
push
or
pop
jl,pn
inc
jmp
cli
xlat
hlt
mov
cmp
insb
pop
and
test
aad
mov
mov
xor
pop
std
and
dec
popf
cs
and
or
mov
fyl2x
cld
inc
or
pop
shll
push
mov
popa
shrw
dec
test
xor
dec
cmpsl
cwtl
or
jnp
push
mov
popa
hlt
outsb
in
lret
xchg
pop
pop
or
sub
mov
rorl
and
adc
cmp
aam
add
and
xor
xor
shll
sbbl
pop
sub
jo
jmp
stos
xlat
out
push
push
mov
sbb
sarl
test
inc
sub
insl
mov
sub
xorl
imul
add
cmpsl
push
inc
lea
sarb
jns
dec
out
jge
lret
jmp
testl
jno
and
push
fsubl
push
or
fwait
jecxz
sarl
pop
add
aam
andb
xchg
ja
cmp
jmp
cmp
pop
xor
cmp
add
lods
push
roll
xor
lods
in
sub
sbb
sbb
lcall
xor
mov
decl
mov
out
mov
add
rcrb
xor
jmp
test
or
dec
call
jno
iret
and
and
test
add
shll
mov
xor
sbb
bound
sub
scas
scas
les
ficoms
gs
push
lods
mov
shlb
dec
pop
shl
jp
adc
pop
fimuls
enter
mov
test
in
cltd
mov
xchg
mov
dec
sbb
lret
push
imul
sub
cmp
dec
xchg
outsb
add
clc
inc
shr
lret
aad
inc
jo
pop
cmp
mov
xor
ds
fldenv
pop
adc
xchg
jnp
mov
mov
es
sub
dec
je
je
lret
hlt
sub
je
inc
push
jb
mov
pop
popl
rcrl
std
subl
shll
sub
cld
push
lds
cmp
or
les
cmp
inc
fadd
movsb
insb
cmp
adc
shrl
dec
icebp
dec
outsb
fadds
popf
roll
lcall
test
aaa
cmp
je
or
sbb
cmpl
adc
or
adc
iret
pop
pushf
insl
in
push
mov
inc
stos
push
inc
stc
mov
push
jae
jo
jnp
push
sbb
and
pushf
or
filds
inc
es
xchg
repnz
dec
test
ja
incb
mov
subb
adc
sbb
mov
adc
push
divl
push
adc
mov
out
adc
ficoms
mov
mul
xchg
lret
dec
pushl
mov
sarb
lahf
xlat
outsb
and
in
insb
sub
and
adc
inc
clc
and
add
jb
pusha
pop
jp
cmpsb
icebp
add
push
aam
in
dec
iret
leave
sti
sub
adc
inc
add
and
push
jp
enter
std
les
add
clc
xor
out
sub
rcll
lods
lock
ret
cmpl
pop
test
cmp
adc
adc
cmc
pop
pop
fnsave
js
and
ret
call
cmp
aam
or
loop
xor
inc
cmp
push
cmpsb
jmp
xchg
push
xor
mov
add
inc
dec
adc
jl
icebp
out
push
push
add
test
repz
ret
das
mov
aam
push
pop
stos
sub
sbb
xchg
cmpsl
fcompl
xor
mov
pop
dec
into
lret
xchg
stc
push
mov
xor
insl
jo
mov
xor
pushf
mov
xchg
dec
push
sbb
sbb
std
mov
pushf
es
ret
cs
jnp
cmp
cmpsl
cmpb
push
lea
pushf
repnz
xor
fs
mov
jmp
jo
lds
pushl
mov
sbb
jnp
or
xor
lahf
cmpb
sub
ljmp
les
in
fcomps
ret
or
jecxz
pop
mov
imul
aas
sbb
lods
fdivrs
test
xchg
call
inc
adc
clc
lods
mov
inc
cwtl
pop
mov
in
aam
sbb
push
pop
sub
cmp
mov
push
or
dec
xor
aaa
ja
out
bound
lahf
pop
adc
push
mov
fs
cli
push
mov
test
test
mov
cwtl
adc
iret
mov
pop
shlb
std
scas
test
popl
xor
cmp
xchg
push
mov
scas
or
jp
cmp
rorb
imul
lcall
push
lds
cs
or
jns
ss
aaa
std
std
jmp
out
in
jp
push
jle
cmpsb
bound
jle
pop
shl
int3
pop
push
cmp
jmp
popf
ljmp
repnz
pop
push
orps
scas
dec
sbb
and
fcoml
sbb
shl
or
jne
lahf
pop
cmc
imul
xor
and
setb
lcall
jb
sahf
imul
out
push
cmp
and
xchg
icebp
pop
or
es
test
outsb
jne
mov
test
scas
inc
test
cld
or
arpl
sub
imul
mov
loopne
or
pop
outsl
dec
lahf
mov
scas
or
jge
pop
add
sub
movsb
enter
popa
pop
test
lods
movsb
mov
outsl
xor
and
jne
ss
fwait
cltd
cmp
inc
mov
add
ja
push
adc
cmp
cld
addr16
push
lea
mov
mov
das
out
fxch
pop
inc
mov
pop
xchg
cmp
dec
popa
mov
cmp
dec
rcr
sbb
and
sarb
pushf
movsb
lret
push
fucom
adc
jecxz
add
dec
stc
sbb
push
daa
int
iret
or
cltd
xor
fcompl
lods
aad
imul
in
or
push
sub
icebp
movsl
xor
nop
jle
out
or
int3
aam
xor
adc
int
dec
and
xchg
jge
add
mov
sahf
adc
xor
jmp
mov
xchg
jae
dec
subl
and
enter
addb
fwait
sub
add
mov
cmc
xor
inc
mov
negb
out
inc
jg
dec
sbb
push
jecxz
push
jns
aam
mov
nop
push
andb
mov
cmpsl
mov
cmp
jne
jbe
leave
push
cmpsb
mov
jns
add
xlat
push
int3
pop
fdivrp
dec
fdivl
in
in
sub
xchg
ret
jmp
sub
inc
jae
mov
inc
fstl
mov
sub
movsb
pop
mov
addr16
xchg
pop
mov
xlat
pop
mov
dec
repnz
lods
push
xchg
push
clc
mov
in
xor
jmp
and
mov
mov
lock
jmp
pop
lret
shll
out
cwtl
inc
inc
repz
push
rcll
leave
inc
mov
jae
xchg
xor
insl
into
movsl
sub
lcall
int
mov
lods
sub
scas
gs
jmp
cmp
sbb
push
mov
enter
adc
pop
mov
rclb
int3
push
sub
ja
aad
pop
std
out
pop
xchg
xchg
lret
outsl
mov
xor
inc
sub
inc
cmpsb
cmp
pop
loopne
inc
xor
notl
push
cmp
push
pop
lods
out
cltd
mov
xor
jl
mov
clc
mov
lock
mov
mov
jns
int
mov
pop
mov
pop
push
mov
test
gs
flds
inc
rolb
gs
das
jnp
inc
pop
xchg
fimull
orl
pop
inc
call
fdivs
inc
lds
and
hlt
xlat
cwtl
cltd
das
jg
mov
mov
push
shl
and
cmpsl
dec
out
int
push
sbb
pop
stos
out
xlat
loope
push
cmpsb
in
or
gs
hlt
faddl
cmp
lahf
test
push
mov
cs
call
scas
xor
xor
xor
cmpsb
jae
out
and
test
fistpll
jle
out
jle
enter
rolb
xor
ds
sbb
in
movl
aaa
scas
enter
into
cmp
std
lods
inc
sarl
nop
rorb
out
aam
aad
inc
inc
repz
mov
gs
and
dec
cmp
jle
push
in
sbb
loop
mov
mov
pop
clc
mov
test
aad
mov
out
ds
xor
pop
add
rcrb
mov
push
push
addr16
jmp
aaa
fstps
adc
int3
inc
cli
push
ds
mov
outsl
hlt
jmp
sbb
pop
aas
push
mov
cs
and
loope
jno
dec
lock
mov
xor
icebp
add
jge,pn
sub
mov
mov
js
fstp
push
es
popf
xchg
and
mov
outsb
ja
subb
sarl
sbb
pop
xor
fwait
lcall
xor
aam
pop
mov
jae
lahf
in
cmpsb
js
in
inc
fcom
inc
sub
cld
and
out
je
popa
pop
push
xor
adc
pop
pop
les
xor
pop
or
cmp
leave
inc
aas
xor
mov
es
dec
jne
xchg
mov
xchg
xor
imul
cld
mov
orl
fldt
mov
test
or
jno
inc
add
call
scas
mov
mov
idivl
fnstsw
in
cmpsb
mov
mov
adc
sub
mov
aaa
push
mov
mov
loope
shlb
mov
inc
fidivrs
mov
sub
push
push
sub
pop
push
nop
pop
int3
pushf
adc
mov
jbe
jne
movl
mov
loopne
mov
mov
ja
mov
mov
pop
or
jge
sbb
lret
xor
dec
pusha
mov
les
cmp
and
shlb
dec
push
pop
fsubrs
clc
jl
xlat
push
dec
jae
xor
mov
out
popf
enter
cltd
dec
cmp
sub
dec
inc
sbb
mov
shl
add
lock
sbb
pop
sbb
mov
roll
jo
push
cmp
lcall
push
adc
mov
and
lods
out
jle
aam
mov
xchg
and
ja
clc
mov
aas
outsb
in
xchg
adc
popf
sarb
roll
hlt
push
pop
ss
xor
push
adc
shlb
pop
loopne
test
int3
dec
inc
popa
inc
stos
imul
call
add
daa
mov
mov
adc
push
fidivrs
dec
xchg
test
imul
push
inc
fs
fbld
je
adc
and
xor
imull
fiaddl
gs
daa
icebp
pushf
and
in
sbb
test
aad
js
dec
popa
lds
xchg
sbb
jge
mov
xlat
sub
xor
push
sti
jnp
or
outsl
adc
jmp
repz
in
sub
and
jno
repnz
mov
sub
mov
jns
arpl
imul
leave
dec
outsl
lcall
andl
pop
dec
mov
cmpsb
pop
push
inc
mov
inc
add
imul
xchg
dec
lea
sub
push
imul
xor
rorl
icebp
imul
cmpsl
call
mov
xchg
jle
cld
insb
subl
sub
mov
rcll
jl
adc
insl
into
inc
enter
pop
sub
jae
lock
popa
shlb
and
addr16
test
and
pop
fwait
cmpsl
add
inc
dec
push
mov
out
adc
mov
xor
loope
mov
mov
push
popf
mov
lea
scas
jns
in
pop
sahf
mov
std
in
fidivrl
push
dec
fdiv
jbe
ss
ljmp
xlat
cmp
adc
hlt
add
inc
push
out
or
sbb
adc
cmpsb
icebp
pop
xor
sub
push
ffreep
jle
mov
cmp
lcall
loope
mov
xchg
add
jne
mov
scas
std
repz
ficompl
xchg
cli
jmp
in
xchg
mov
or
outsl
sbb
xchg
outsb
iret
je
fcoml
lods
and
pushf
add
cmc
jns
xchg
cmp
sti
xchg
adcb
mov
dec
jmp
mov
dec
dec
mov
lods
mov
ret
push
cli
ljmp
cmpsl
xchg
negl
dec
sub
dec
inc
stos
aas
outsl
inc
dec
sahf
jge
test
daa
pushf
aam
in
push
and
je
sub
jnp
arpl
push
pop
or
push
lahf
push
pop
movsl
mov
lods
and
movsl
std
push
add
enter
scas
mov
add
cmp
and
jmp
sbb
jne
inc
xchg
arpl
jb
or
dec
sub
je
add
cld
ss
or
mov
pop
scas
push
std
lds
or
dec
les
dec
ret
adcl
pop
mov
dec
into
sub
imul
outsl
adc
mov
iret
in
and
testb
nop
xchg
pop
outsb
movsl
rol
pop
dec
leave
pop
int
call
fsub
movsb
lea
xor
insl
mov
shl
mov
and
roll
xchg
or
jbe
repnz
jg
adc
push
addb
scas
sarl
cmpsl
or
mov
fcomps
fwait
js
inc
outsl
push
add
arpl
outsl
push
clc
xchg
mov
es
clc
aad
jmp
adc
push
testb
and
shll
cmp
imul
std
outsb
cmp
xlat
mov
div
add
lret
aaa
lea
shll
push
out
or
push
rcl
insb
jne
movsb
iret
mov
xor
add
adc
jg
cmp
pop
lahf
pop
jmp
fistpll
mov
jp
dec
adc
insl
mov
lret
ja
rcrl
push
adc
and
jb
lock
sub
adc
arpl
js
leave
mov
ret
gs
popf
cmc
rcr
xchg
bound
jmp
add
adc
cmpsl
push
out
outsl
jl
mov
lods
mov
hlt
mov
les
cmp
jns
push
mov
repz
jmp
pop
pop
or
ljmp
push
pop
sub
fwait
lret
or
inc
mov
pop
addl
adc
sarl
stc
ljmp
enter
les
das
mov
mov
divb
jne
repnz
xor
imul
jge
jbe
mov
in
scas
arpl
jb
sbb
fadds
inc
mov
xor
add
adc
pop
jae
out
jmp
xor
jp
pop
mov
lcall
repnz
cwtl
inc
push
fcomip
jbe
xchg
xor
pusha
pushf
add
nop
mov
xor
inc
or
lret
mov
lcall
leave
cmp
bnd
gs
inc
push
outsl
cmp
dec
push
shlb
mov
push
xor
jge
and
cmp
daa
dec
mov
insl
adc
sbb
jns
sub
andb
add
arpl
out
pushf
adc
popa
lea
pushf
icebp
arpl
adc
inc
addb
adc
jbe
and
clc
aam
test
in
ds
std
shll
inc
and
test
sub
cmc
ljmp
loope
cltd
xchg
pop
or
pop
out
mov
jno
mov
cs
pop
icebp
cwtl
mov
mov
xchg
inc
imulb
pop
leave
dec
roll
cmp
ret
sbb
jecxz
stos
jecxz
data16
hlt
mov
xchg
sbb
xchg
aad
lcall
clc
xor
outsb
pop
nop
push
cmp
sbb
idivl
test
mov
and
jp
inc
cmpsl
add
jbe
mov
pop
pop
mov
lret
cmp
test
int3
push
jns
mov
jns
enter
mov
sub
aad
out
sti
in
std
jge
rolb
cld
sub
mov
cmp
and
pop
cmp
push
dec
push
sbb
movsb
mov
jp
mov
jge
mov
or
fldt
jnp
sub
lea
xor
and
jp
add
sub
jmp
js
data16
cmp
xchg
push
shrb
aaa
push
sti
push
cld
iret
jge
jbe
shlb
push
cwtl
fwait
xchg
enter
xor
out
imul
movsb
or
mov
mull
incb
in
and
fdivrs
mov
outsl
mov
ja
xlat
sbb
add
inc
adc
les
push
xor
scas
mov
dec
frstor
push
push
pop
adc
repz
testb
pop
mov
xchg
les
lods
shll
aas
jae
daa
gs
stos
xchg
sahf
outsl
or
xchg
mov
mov
rclb
and
fdivr
cmp
lock
and
ja
push
xchg
loope
xchg
hlt
cld
mov
je
xlat
lock
int3
and
mov
mov
or
sub
adc
mov
jbe
imul
pop
xlat
inc
rcrb
cld
mov
lods
add
std
in
fidivl
jno
shll
in
push
xlat
xchg
jg
call
mov
les
repz
mov
ficompl
cmpsb
sbb
mov
sti
inc
imul
in
int
in
in
aad
lret
inc
mov
outsl
push
add
add
cmp
dec
clc
shl
fisttps
adc
sub
mov
icebp
cmp
sub
xor
xorb
inc
rol
add
int
icebp
and
sbb
jne
push
dec
cmpsb
xchg
in
roll
push
mov
lds
sub
push
daa
lock
lods
xchg
inc
mov
jbe
movsl
test
subb
add
in
and
loopne
jne
test
sbbl
dec
adc
inc
stc
fdivs
pop
dec
xchg
mov
cmpsb
test
orl
inc
insb
push
stos
cltd
in
push
test
iret
and
fistpl
jg
sbb
je
add
mov
jg
fdivl
inc
sbb
popf
add
test
sahf
ja
lahf
dec
xchg
imul
fbld
popf
add
loop
pop
fdivs
daa
adc
push
mov
mov
aas
mov
gs
xlat
shll
cmc
or
out
mov
es
cmp
mov
sti
and
gs
mov
aad
je
pop
push
xor
push
test
mov
mov
xchg
fwait
lahf
dec
pop
xchg
and
sbb
loop
out
cmp
mov
sbb
jbe
dec
lcall
sbb
shll
popa
ss
sbbb
inc
fdivrl
popa
dec
xchg
aam
or
push
adc
mov
add
insl
pop
xchg
test
int3
aas
mov
push
cmp
daa
clc
sub
das
mov
aaa
mov
push
sub
dec
lods
add
dec
scas
inc
pushf
push
mov
mov
or
outsb
lahf
cs
jecxz
jecxz
xchg
mov
cmpsl
jmp
fyl2xp1
test
jmp
xor
sub
xchg
xor
mov
addr16
jp
pop
mov
leave
jmp
dec
pop
and
cmp
sbb
pop
test
dec
leave
in
int
test
or
sub
jo
xor
stos
pop
jno
sub
scas
bound
pop
pop
xchg
and
ret
cmpsl
xchg
pop
hlt
fcoms
dec
push
in
inc
pop
js
mov
pop
fs
cltd
ficoml
lahf
mov
mov
and
pop
out
outsl
mov
sar
ljmp
inc
mov
nop
push
cmp
add
sub
mov
push
call
int
stc
fcoms
add
mov
andl
xlat
pop
xchg
cli
mov
jnp
jo
adc
test
aas
push
lret
adc
or
xor
mov
ljmp
sahf
cs
adc
push
sub
dec
mov
cltd
pushf
sbb
mov
dec
jae
xchg
xchg
mov
repnz
out
adc
or
pop
cld
test
pop
pop
jmp
jmp
jae
inc
pop
insb
iret
js
sbb
incl
inc
fdivr
adc
xor
out
mov
cs
inc
bound
fwait
jno
pop
loope
cmc
outsb
shll
jg
pop
xchg
cld
es
mov
add
std
sbb
or
not
mov
xor
or
fs
es
inc
sbbl
add
xchg
ret
jno
daa
inc
push
jg
aas
dec
xor
add
adcl
sbb
xchg
push
fnsave
pop
push
ds
mov
dec
gs
mov
stc
pop
or
sti
inc
addr16
les
test
mov
unpcklps
decl
popf
mov
jne
leave
loope
aam
aad
push
xchg
jne
mov
pusha
lods
cwtl
xchg
xchg
out
mov
iret
mov
in
leave
shrl
inc
xor
adc
ret
mov
shlb
push
lock
jmp
adc
push
sub
mov
mov
and
jb
int
add
mov
out
fstps
jle
sarl
out
pop
inc
inc
popf
push
out
jne
gs
cli
xor
mov
sbb
push
lds
cmp
and
ja
xchg
jne
sti
jo
jnp
xor
push
jae
cvtdq2ps
test
daa
and
fcoms
add
xor
or
mov
mov
xor
stc
popf
ret
mov
sub
loop
fsubrp
dec
arpl
lahf
pop
cmpsl
jecxz
and
sbb
lahf
sbb
shll
unpckhps
out
add
mov
lock
fwait
jge
hlt
mov
push
sbb
mov
in
pusha
pop
sbb
gs
dec
in
sti
mov
cmp
jle
lahf
jae
jbe
in
in
adc
fwait
mov
cmp
inc
or
xchg
cmp
add
xchg
cmp
mov
mov
add
jae
les
inc
outsb
inc
sbb
cmpsb
dec
mov
inc
dec
lds
imul
inc
packssdw
xchg
div
mov
xor
insl
sub
or
insb
jle
xchg
je
xchg
pop
and
out
cltd
inc
jg
sub
sub
sub
push
jp
xchg
xchg
mov
inc
setbe
cmp
cmp
pop
push
mov
inc
adc
in
jbe
dec
pop
add
in
jno
mov
mov
iret
shlb
adc
cs
addb
mov
lock
mov
je
ret
loopne
data16
cwtl
inc
negb
and
out
push
daa
and
pop
into
test
mov
movsb
mov
lock
shlb
leave
mov
data16
push
rcll
mov
hlt
sub
cmpsl
aad
add
xor
loope
push
adc
push
fsts
add
sub
mov
out
inc
sahf
outsl
add
push
sbb
xchg
das
cmc
mov
iret
mov
sahf
mov
mov
push
aaa
icebp
lods
adc
popa
xchg
or
dec
call
fwait
js
pop
les
mov
push
xor
and
sbb
lds
add
sbb
jl
jl
loopne
mov
sub
push
movb
inc
fsubl
inc
add
xchg
push
aas
xchg
shlb
adc
and
pop
stos
fildll
fwait
test
movl
push
clc
mov
sub
popa
cwtl
mov
testl
out
xchg
pop
push
xor
jecxz
test
xchg
cmp
pop
imull
or
cld
sbb
xchg
clc
mov
add
dec
jns
ret
dec
pop
xchg
and
test
movsl
mov
sub
xorl
xor
setp
cwtl
inc
ss
sets
in
stos
test
jae
dec
subl
cltd
or
xchg
adc
mov
pop
cmpsb
addl
in
mov
fdivrl
add
int3
push
lret
andb
xor
pop
or
and
clc
push
stos
pop
dec
jle
add
mov
inc
mov
push
sbb
cmc
repnz
and
out
loop
lds
fdivs
loopne
int
jne
pushf
pop
jo
push
push
aas
es
negb
gs
insl
cli
cmp
int
sahf
inc
adc
cmp
jnp
or
mov
dec
dec
addr16
es
mov
xor
hlt
add
subb
out
movsb
das
push
xor
clc
fwait
in
xor
mov
imul
popf
into
jns
push
lock
mov
dec
jae
test
out
mov
std
cwtl
pop
fwait
adc
add
fldl
mov
ret
mov
rorl
subb
popf
fistl
ret
push
cwtl
sub
xchg
cmpsl
xchg
jnp
push
inc
es
lods
add
sbb
sub
rorl
or
and
xorl
fsubl
cmp
xorl
jge
mov
mov
dec
xor
pop
xchg
cli
dec
pop
aaa
push
into
mov
ficompl
ret
cmpsl
hlt
push
mov
fs
pop
insl
mov
jl
mov
or
and
adc
push
jge
jle
sbb
xchg
xor
je
xor
sarl
icebp
mov
jge
inc
scas
ja
adc
dec
cmp
hlt
je
add
mov
cwtl
sub
adc
inc
or
jb
rcll
inc
pushf
movsb
rcll
cmpsb
into
out
cld
insl
movsl
jo
mov
xchg
mov
xor
outsl
sub
add
fdivp
jg
cld
mov
or
jns
add
pop
pop
dec
imul
cmp
inc
fucom
dec
bnd
cmc
push
imul
dec
popa
pop
push
mov
test
sbb
fnstsw
popf
dec
push
adc
arpl
fistpll
pop
rorl
jl
or
adc
cmpsb
add
adc
mov
pop
mov
js
adc
pop
cmp
ja
jge
sub
cwtl
fmull
push
outsl
sbb
enter
xchg
lcall
lret
jae
xchg
inc
cmp
pop
pop
push
push
in
les
jns
call
cmp
in
ds
mov
and
xor
sahf
subl
cmp
int
mov
mov
and
pop
arpl
pop
movsb
push
out
jle
push
adc
pop
cs
shrb
sbb
xor
loop
std
stc
xor
or
fsubrp
jo
loopne
gs
pop
lret
mov
aaa
cld
outsl
push
sub
fs
iret
fwait
jp
xchg
jmp
test
jecxz
or
mov
imul
fcoms
fucomp
mov
out
push
jne
adc
mov
stc
cld
outsl
push
jmp
orb
sti
adc
sbb
loop
loopne
mov
shl
sti
imul
cltd
xchg
jns
daa
out
repz
test
and
js
in
je
jecxz
jno
incb
sub
sub
into
push
fnstcw
adc
repz
xor
dec
int3
xchg
mov
xor
in
add
xchg
inc
xor
sub
sbb
ja
das
sub
mov
gs
dec
mov
mov
repz
js
pushf
push
in
cmpsl
fdivrl
mov
mov
dec
push
loope
popf
cmpsb
aad
add
mov
insl
xor
push
jae
xor
movsl
out
jbe
xchg
xchg
dec
mov
aad
mov
cmp
inc
insl
cmp
cmp
iret
pop
and
xlat
ret
cltd
repz
insl
in
adc
sahf
int3
or
sahf
aam
adc
addr16
or
xchg
cmp
xor
jns
leave
movl
jns
or
or
mov
jecxz
fsub
push
jp
aaa
repz
push
inc
mov
scas
push
fs
pop
or
dec
lcall
lahf
repnz
push
xor
sbb
xchg
fcoms
mov
dec
movsb
cli
or
pop
rcrl
sahf
jp
sub
js
sbbl
mov
orb
lods
jmp
fucom
leave
daa
push
int3
loope
aaa
adc
or
idivb
jnp
and
pusha
mov
pop
push
aad
loopne
movsl
loop
add
cmp
rolb
cmp
xchg
in
test
por
mov
cmp
sarl
enter
push
lret
dec
mov
mov
int
xor
inc
in
das
cmp
jo
stos
je
cmc
int3
push
mov
popf
popf
adc
sub
xor
lods
insl
gs
mov
insb
dec
cmp
jl
jmp
iret
daa
pop
adc
dec
int
pop
dec
in
lds
jae
ret
outsb
cmp
pop
ss
bound
push
jne
scas
mov
mov
repnz
xor
mov
cs
mov
jns
inc
and
sbb
test
and
and
inc
movsb
out
frstor
aas
sub
bound
dec
jge
rclb
or
pusha
repz
pop
sbb
test
and
ret
fists
mov
adc
shl
popf
repz
push
push
xchg
lods
data16
inc
xchg
adc
mov
mov
stos
int
rcrl
es
enter
mov
jle
popf
stos
out
inc
or
push
dec
add
out
add
sbb
inc
pop
std
jle
mov
pop
lahf
cmp
cmp
pop
cmp
cwtl
out
fwait
mov
push
nop
cmc
xchg
test
ret
adc
cltd
stos
mov
or
aas
ret
lds
push
sbb
jle
and
lahf
jns
xchg
xchg
inc
ret
dec
jecxz
jecxz
push
jecxz
fistpll
mov
lret
jge
xlat
mov
imul
das
and
and
and
in
cmp
dec
mov
sbb
and
inc
adc
pop
clc
mov
stos
lret
adc
and
mov
fimuls
lds
lods
push
cld
push
cmc
jl
ret
jbe
push
inc
fdivrl
adc
repz
int3
mov
dec
jno
repnz
stos
iret
popa
lahf
jp
shll
jne
ss
dec
lcall
repnz
ja
or
rclb
stos
rcrb
and
fistpll
and
add
into
ficoml
push
sbb
les
or
dec
cmp
lods
mov
xorl
std
or
push
xor
sahf
je
sbb
js
fnstcw
fistpl
lahf
out
clc
mov
and
loop
test
pop
pop
sub
sbb
xor
adc
aad
subb
adc
mov
mov
nop
mov
pop
mov
xchg
pop
or
mov
imul
rcrb
mov
pop
scas
mov
cmp
pop
xor
sbb
dec
mov
mov
ss
cmp
js
mov
xchg
sbb
adc
mov
mov
cli
mov
mov
jno
inc
mov
dec
jg
sbbl
xchg
icebp
cli
or
nop
jmp
icebp
lds
cmp
adc
lods
pushf
xlat
stos
jne
jmp
xor
outsb
xchg
push
fistpl
gs
sub
xor
faddl
add
cltd
add
xlat
aad
js
xchg
mov
jmp
pop
xchg
push
mov
sti
mov
sbb
ljmp
in
test
fists
scas
push
orl
in
aam
in
repz
loope
lcall
inc
rolb
mov
clc
mov
outsb
daa
sti
lret
mov
fildl
out
int3
and
adc
inc
pop
and
lea
xor
fcomps
cmp
pop
rcll
out
outsl
inc
inc
insl
dec
inc
adc
pusha
jl
out
push
mov
stos
enter
mov
and
push
ja
jbe
aad
mov
je
movsl
lcall
loopne
out
int3
mov
mov
dec
ficoms
mov
cs
addr16
inc
inc
movsl
fisttpl
ss
push
data16
add
mov
inc
fadds
es
pop
cli
push
jo
ja
adcl
push
mov
mov
out
add
daa
ret
pop
cmpsl
jge
dec
cmp
or
mov
out
sahf
add
jg
sbb
add
mov
xorl
or
mov
fsubrl
call
sahf
xchg
call
cmp
lods
adc
or
inc
and
fadds
ljmp
int
mov
fildl
mov
or
push
push
push
xor
push
xrelease
xor
stos
ds
xor
jb
xor
inc
bound
and
and
inc
cmp
cli
xor
adc
fstl
adc
jno
jae
inc
fstpl
xor
dec
pop
sbb
ja
ds
jmp
jo
je
shlb
add
xor
add
fdivs
sbb
jg
mov
pop
sbb
ret
or
and
int
test
mov
dec
sbbb
and
nop
imul
notb
jnp
cmpsb
das
and
mov
mov
mov
push
push
mov
push
inc
stos
sbb
mov
fsubrs
outsl
push
xlat
aad
popa
packuswb
jbe
inc
hlt
gs
and
add
andb
addr16
dec
mov
and
mov
dec
scas
cltd
lcall
fmuls
les
cli
dec
and
inc
fmull
xor
sub
jmp
and
mov
fdivl
nop
xchg
inc
and
sbb
add
pop
subb
xchg
call
outsb
es
lds
addr16
hlt
push
je
es
outsl
into
out
sarb
sbb
outsb
jp
pop
and
sub
aam
mov
mov
mov
mov
xchg
mov
lock
movsb
nop
and
sbb
inc
out
and
lcall
outsl
push
outsb
in
data16
sbb
and
popf
xchg
arpl
call
stos
pop
outsb
es
sub
outsb
xor
std
movsb
sub
js
cli
andb
imul
out
lds
or
mov
push
push
add
jp
jle
jns
clc
inc
xor
je
lods
jmp
push
cld
lea
test
sub
inc
and
insl
scas
jne
imul
leave
pop
dec
jg
or
cs
bound
ret
shrl
das
sbb
mov
sub
add
fistpl
cmpl
add
bound
pushf
sbb
insl
movsb
add
inc
test
xor
push
dec
test
adc
push
notl
lock
lods
negb
sbb
in
and
push
mov
or
inc
cwtl
sub
cmp
lock
repz
push
pop
xlat
push
je
scas
pushf
sbb
jnp
dec
es
jo
shrb
or
jns
sahf
adc
mov
loope
inc
clc
cmp
jne
inc
cs
push
inc
jg,pt
xchg
dec
ljmp
fmull
jecxz
scas
lret
dec
jmp
inc
or
or
jle
jno
sub
lret
sub
lds
dec
cmc
push
repnz
cli
dec
add
movsb
adc
push
pop
sbb
mov
sub
push
push
popa
call
push
mov
jle
jecxz
aaa
jle
les
xor
je
loopne
int
loope
test
inc
jg
sub
fisubl
mov
pop
movsl
in
fwait
mov
mov
mov
and
test
push
aaa
pop
leave
insl
cld
lret
and
lea
mov
mov
fistpl
loope
lret
test
rcr
cmpsb
inc
cmp
out
stos
lock
ficoms
ja
jge
lea
jg
pusha
lds
fst
int3
xlat
mov
mov
mov
in
ljmp
dec
into
outsb
sbb
jns
enter
xchg
push
lcall
test
subb
outsb
inc
mov
or
sub
push
cmc
arpl
xorb
mov
jmp
jmp
in
out
inc
bswap
sbb
pop
rcrb
dec
leave
or
insb
movsl
lock
clc
sahf
scas
ja,pt
leave
mov
cli
mov
clc
mov
xchg
ret
lds
out
jnp
loopne
pop
roll
jle
clc
mov
ret
adc
xchg
or
cli
cmp
fisubs
cmp
xchg
inc
xor
cld
cmc
sbb
inc
repz
adc
sub
rcrl
not
call
ja
loope
push
sbbl
xchg
cmpsl
add
xchg
cli
sbb
push
stos
iret
adcl
mov
mov
adc
dec
mov
leave
jg
dec
les
into
adc
je
add
sti
and
mov
cld
jnp
jge
pop
xchg
clc
imul
and
xchg
xchg
imul
in
cwtl
cld
mov
jge
movsb
test
ljmp
jo
or
cli
adc
scas
jae
xchg
fldenv
packssdw
lret
scas
mov
in
mov
sub
pop
add
std
and
fidivl
stos
popa
inc
movsl
enter
nop
fiadds
mul
ljmp
lahf
cmp
xor
sbb
push
add
out
add
mov
out
mov
sarl
and
hlt
jnp
rcrb
mov
movsl
dec
arpl
scas
addr16
sti
cmpsl
mov
ja
sti
lahf
add
iret
cmp
or
js
jbe
dec
xor
jp
adc
pop
or
mov
xor
mov
pop
je
aad
fldl
mov
xor
inc
xchg
dec
xchg
inc
scas
mov
test
int3
dec
jne
cs
inc
jl
sbb
mov
cli
outsb
dec
bound
hlt
pop
outsb
in
vsqrtps
mov
sub
lret
fwait
andl
cli
adc
jbe
xor
mov
pop
mov
sahf
cwtl
cli
shll
sbb
inc
cmpsl
cmp
sbbl
inc
and
andl
das
movsl
dec
adc
scas
popa
add
pusha
mov
push
cmp
stc
testl
je
xor
fstpt
mov
out
jbe,pt
scas
lock
nop
arpl
leave
push
fwait
popa
rclb
in
lahf
jge
sub
jmp
enter
movsb
mov
std
lea
pop
jecxz
pop
ljmp
lock
push
mov
or
pop
cmp
lods
rol
jge
arpl
dec
or
pop
leave
jge
mov
xchg
mov
adc
cmp
daa
sbb
insl
add
xchg
sub
cltd
and
fcomp
cmp
adc
fwait
and
xchg
cmpsb
xchg
jecxz
lcall
sbb
gs
mov
sbbl
jno
xchg
pop
pop
dec
push
test
and
clc
in
das
xlat
jae
mov
xor
in
push
mov
data16
push
rolb
mov
outsb
lds
and
shlb
in
repnz
sub
pop
sbb
in
gs
cwtl
mov
out
sbb
mov
mov
push
mov
in
sbb
arpl
test
mov
test
cmpl
rcll
loope
and
jns
loope
in
xchg
fbld
push
out
test
lock
sub
orl
xor
repz
addr16
xchg
mov
mov
add
shl
inc
ja
push
cmp
stc
js
icebp
xchg
and
test
mov
adc
shrb
mov
sub
xchg
pop
and
xor
xor
loopne
jns
push
popa
iret
xlat
add
arpl
lea
jo
scas
mov
test
cmpb
lea
cltd
imul
cmp
jge
xor
aas
insb
jecxz
sbbb
sbb
ficomps
scas
xor
push
idiv
sbb
or
push
mov
pop
jnp
fisttpl
scas
or
push
mov
push
jbe
pushf
pop
imul
xchg
popf
sub
fcomps
rcrb
fucomi
add
fwait
push
jecxz
lock
stos
cmp
stc
sub
sub
div
int
mov
cld
mov
add
pop
jnp
test
inc
sub
jp
add
cmp
stc
sbb
jge
fimuls
push
xor
add
in
sarl
sub
fs
lea
cmpb
and
ja
out
and
ljmp
and
sbb
into
enter
dec
sti
stos
jbe
cmp
mov
popa
xor
aam
call
push
sub
sub
outsb
inc
adc
add
in
and
or
jmp
mov
roll
or
mov
inc
add
adc
fwait
lret
adc
daa
fs
mov
xor
jmp
push
sbb
mov
xor
clc
push
inc
jmp
mov
dec
sub
cmp
push
insl
pop
cs
pop
pop
adc
mov
cmpsl
mov
sbb
in
ret
rcll
repz
push
fisubrs
cmp
out
into
mov
in
xor
mov
rcll
lahf
adc
push
and
xchg
xor
mov
lahf
repz
sahf
inc
xchg
sar
fwait
pop
dec
hlt
fs
jns
xor
and
into
insb
imul
sbb
pop
xchg
mov
mov
hlt
inc
mov
sbb
pop
in
gs
cwtl
xchg
out
icebp
pop
push
imul
jbe
and
mov
cmc
lods
push
std
mov
ljmp
test
xor
push
movb
sbbl
push
or
add
loope
pop
push
push
hlt
repnz
pop
jmp
mov
mov
rclb
movd
jbe
rorb
mov
mov
scas
imul
in
mov
cltd
mov
cs
xor
mov
sbb
pushf
das
pushf
mov
mov
mov
fadds
xchg
adc
movsb
out
jae
stos
dec
ss
sbb
in
cmc
mov
inc
or
aas
fnstcw
sub
adc
cmp
cmp
jg
in
cmp
cltd
pop
popf
cmp
pusha
pop
adc
push
mov
mov
in
cld
dec
sar
mov
daa
shll
insb
mov
or
stos
or
mov
testb
in
adc
jmp
mov
shrl
ljmp
adc
xor
mov
jb
xchg
cmpsl
shlb
rcll
xchg
rcrb
gs
xchg
out
int3
pop
idivb
xor
xchg
repz
ljmp
mov
mov
andb
mov
xchg
or
sbb
iret
push
jle
inc
push
std
cwtl
enter
cltd
rolb
hlt
sbb
cltd
mov
out
jno
or
mov
std
or
aaa
les
bound
popa
xlat
xor
enter
gs
adc
movb
sbb
xchg
xor
sarl
sbb
jbe
test
leave
fistl
stos
fmul
mov
ja
mov
cld
push
int3
sbb
fs
inc
cmp
out
sub
push
lcall
sbb
jb
xor
pop
pop
popa
xchg
push
xlat
daa
popf
iret
or
cltd
xor
cmp
adc
cwtl
aas
or
xchg
push
fwait
roll
or
jp
arpl
cltd
out
cmp
mov
mul
dec
sti
sub
push
xchg
dec
hlt
pop
lahf
js
push
mov
loopne
sbb
pop
dec
jne
adc
dec
add
das
popf
xchg
pop
jo
ret
xchg
pop
lret
aas
sbb
fs
jns
xchg
cmp
repz
out
xorl
cmp
fwait
push
push
sahf
and
sbb
outsb
push
pop
mov
cwtl
inc
insl
xchg
jbe
lea
sub
fistpll
mov
and
scas
mov
jb
or
sbb
sarl
adc
mov
in
pop
clc
dec
xchg
cmpsl
in
adc
pcmpeqw
ds
rorl
pop
mov
pop
mov
push
loope
out
cli
cmpsb
sub
pushf
std
data16
jp
pop
jnp
pop
or
dec
ficoms
or
mov
pop
sub
fucom
cli
and
jae
jmp
xchg
push
cmp
icebp
sub
xchg
mov
jle
cmp
or
out
fdivp
ss
enter
xor
mov
mov
sbb
add
jo
pop
cmp
sbb
xor
lcall
jne
in
mov
wbinvd
mov
xchg
xchg
jns
jle
movsl
gs
pop
std
inc
or
imul
adc
shll
jns
test
add
lock
pop
cld
iret
std
xor
mov
xor
push
ret
ret
push
lcall
ret
out
sub
js
xchg
fs
lcall
adc
dec
sub
mov
jae
stos
mov
ss
lret
dec
inc
out
jecxz
push
es
inc
mov
or
push
and
decl
clc
js
mov
sbb
adc
cmp
xchg
fcoms
or
inc
sub
das
jb
int3
push
pop
lods
add
or
shlb
or
sbb
cmp
ja
inc
sbb
ljmp
mov
orl
inc
dec
mov
mov
rorl
push
lods
or
cli
sub
lcall
adc
data16
rcr
jne
nop
out
xchg
push
test
sbb
or
jg
push
mov
pop
xchg
stos
pop
adc
scas
jae
scas
roll
mov
pop
into
mov
add
cmp
sbb
jge
dec
mov
andl
ss
rol
call
rcll
sbbl
cmc
add
pop
dec
sbb
dec
in
movsl
insl
fldenv
mov
pop
das
loope
fcomps
fimull
pushf
xchg
jbe
subl
je
arpl
jp
out
mov
xchg
xor
cmp
pushf
dec
cmpsl
and
lds
xchg
xchg
into
mov
dec
lods
xchg
pop
mov
mov
not
xchg
xchg
xchg
addr16
test
jno
out
jae
sub
test
sub
sbb
scas
inc
cmp
mov
pop
sbb
out
mov
cld
jecxz
andb
cmpsl
cwtl
enter
add
pop
xor
or
cmp
cld
sbbb
and
mov
xchg
daa
dec
sub
or
sbb
into
in
inc
mov
daa
rcrb
aaa
pushf
dec
pushf
pop
mov
out
add
fldenv
test
scas
push
adc
movsl
sbbb
or
int
mov
jae
aaa
js
cmpsl
sbb
leave
add
scas
insl
lret
sbb
cmp
sub
add
xchg
fnstsw
ret
fwait
jno
or
stos
cli
test
sti
mov
fsts
inc
mov
mov
xor
shr
stos
or
sarb
aas
leave
push
xor
ja
ljmp
hlt
les
xchg
and
sbb
lds
and
pop
or
cmp
push
shlb
int3
mov
push
or
aam
dec
dec
sbb
das
sarb
pop
adc
push
xor
lds
mov
jbe
lods
cs
dec
cmpsb
fistps
pop
cmp
inc
sbb
and
lea
ja
push
lock
mov
je
pop
xchg
popf
or
sub
ss
push
outsl
add
jnp
pop
test
fcoms
cltd
ret
fnstenv
mov
add
push
ss
pop
dec
gs
in
pop
and
push
popf
fdiv
sub
add
mov
mov
mov
cmpsb
test
inc
and
mov
push
mov
jecxz
mov
jg
in
fdivl
sbb
in
xchg
and
dec
jg
jnp
divl
dec
roll
ret
inc
test
mov
movsl
adcb
scas
in
in
adc
loope
loop
mov
scas
sbb
add
inc
ret
icebp
or
or
shrl
pop
cmpsl
aad
adc
iret
sbb
ret
lock
imul
int
bound
fists
inc
cwtl
insb
fidivrs
aam
fidivrl
lcall
aad
or
out
arpl
loopw
fdivrs
xor
or
lods
push
sbb
dec
fscale
mov
adc
popf
sub
fistpl
aam
jne
bound
stc
fldl
cmc
xor
add
sub
arpl
call
dec
fistpll
insl
and
inc
popa
xchg
cmp
cmp
aad
cmp
xor
scas
shr
xor
cltd
cmpsl
xlat
push
or
mov
cmpsl
and
dec
dec
mov
nop
shll
or
mov
cmpsl
cmp
cmp
pop
fsubrp
inc
fadd
cs
inc
bswap
and
or
cld
xor
sub
xchg
mov
test
scas
mov
mov
lea
sub
cwtl
aam
insb
cs
jle
push
cmp
xchg
xchg
cmp
lea
sub
mov
and
adc
xchg
insl
cmp
addr16
in
sub
aad
sbb
mov
ds
fcoml
orl
add
les
pop
bnd
push
mov
xor
scas
xchg
and
fwait
js
cmp
les
aam
fstpl
push
adc
dec
sti
push
inc
mov
xchg
dec
push
inc
call
pushw
push
in
mov
enter
ds
loopne
mov
jo
int3
or
jbe
out
fwait
test
sub
sub
cmp
mov
cmp
dec
jg
sbb
cmpsb
adc
jge
add
push
jb
cmp
out
hlt
jg
addr16
sub
mov
push
mov
mov
fiadds
mov
xor
imul
lret
adc
clc
nopl
out
pusha
inc
jmp
adc
test
pop
stos
mov
cmpsl
sarl
push
or
shll
dec
test
mov
sar
push
data16
aad
pop
ja
jns
stos
rolb
mov
testb
in
stos
mov
xor
les
cmpsb
loop
popa
gs
mov
pushf
aad
lcall
mov
mov
sbb
into
mov
lock
lret
ljmp
cli
mov
adc
test
cmp
jne
imul
adc
adc
add
mov
xchg
or
arpl
mov
jnp
xchg
xchg
xor
sahf
test
ret
jns
mov
mov
cmp
and
pop
pop
adc
sar
lea
loope
nop
push
xor
and
stos
cmpb
jno
inc
loope
in
inc
rclb
cmp
adc
scas
jb
lds
push
ds
shll
addr16
sub
out
adc
jmp
bound
sub
fnstcw
mov
dec
sahf
cld
mov
or
in
push
into
out
pop
scas
cmp
imul
je
data16
sbb
test
test
inc
jb
arpl
lds
in
xor
out
xchg
push
pop
dec
mov
out
lcall
push
push
adc
pushf
cltd
scas
lret
adc
test
add
in
mov
and
hlt
jg
repz
jmp
ret
cmp
pop
rorl
xor
jae
mov
xchg
sub
shll
or
mov
adc
icebp
pop
xlat
in
mov
movsl
test
mov
testb
dec
and
add
mov
das
aas
imul
mov
adc
push
and
dec
cmp
out
push
xor
int
cmpsl
imulb
sub
xor
pop
fcmovne
aaa
lcall
inc
scas
pushf
imul
cmp
or
arpl
cs
cld
pop
push
cmpsl
or
andl
sbb
loope
xchg
or
stos
push
lahf
cmp
push
dec
mov
mov
xlat
notb
icebp
ror
call
jo
lcall
mov
jge
xchg
rcrl
xor
inc
ja
add
lods
mov
inc
cmp
cwtl
mov
mov
push
arpl
sub
xchg
sar
shlb
adc
out
clc
push
mov
or
cli
inc
lock
fsubrp
jo
and
in
dec
ljmp
xchg
mov
pushf
fimull
fcoms
cmp
es
mov
dec
xor
add
adc
mov
sbb
out
jbe
or
mov
popf
xchg
cmp
sahf
adc
ficoms
sahf
xchg
xchg
sub
loop
cs
aas
fists
jae
push
call
aaa
push
loopne
inc
dec
jns
clc
and
mov
mov
cld
ljmp
nop
mov
pop
jns
or
sub
idivl
add
push
dec
repz
add
test
repz
movsl
cmc
add
add
lods
add
dec
mov
sti
cmp
xor
imulb
xchg
jg
cmpsl
out
xchg
int3
mov
xlat
mov
imul
pop
lods
jbe
xor
jle
dec
sti
popf
imul
sbb
pop
mov
enter
mov
xor
or
pop
xchg
out
mov
into
sub
mov
andl
sti
and
rorb
mov
cmp
fnsave
pop
dec
adc
mov
cmp
jbe
sbb
std
rorl
sub
jae
ds
iret
sbb
xor
mov
aaa
dec
push
adc
sti
ja
inc
ret
stc
mov
or
adc
xchg
inc
andb
scas
lds
xchg
shll
or
frstor
jmp
gs
fwait
cwtl
sub
dec
pop
sbb
subb
mov
adc
gs
mov
cmp
adc
adc
or
cld
or
sbb
divl
mov
inc
icebp
pop
sub
aaa
adc
sbbl
sub
mov
jae
pop
repnz
loope
dec
loopne
mov
jmp
shlb
mov
mov
pushf
inc
cmp
and
lods
outsl
and
hlt
jmp
aas
loop
xlat
jnp
les
aas
dec
mov
add
xor
xchg
sbb
cmc
jbe
inc
fwait
imull
sub
sahf
popa
xchg
or
mov
fs
add
js
shll
addr16
fisubrl
adcl
inc
addr16
flds
imul
inc
imul
xchg
inc
xor
enter
in
cmpsb
aas
int3
subl
fbstp
call
dec
xor
jl
leave
cmpsl
adc
mov
jbe
test
cltd
xor
push
cmp
mov
cmp
jle
sub
ja
add
psrld
insl
dec
lea
jp
xor
fs
hlt
push
and
add
std
push
into
adc
or
pop
arpl
adc
pop
mov
xchg
mov
fisubrs
pop
ret
jnp
mov
dec
inc
sbb
js
sub
dec
add
jp
jno
or
mov
push
xor
ret
mov
decb
lock
push
jb
aad
push
pop
fidivs
js
inc
pop
pusha
adc
xchg
mov
call
sbb
mov
adc
leave
jb
push
mov
imul
in
pop
int
popa
pop
mov
jae
pop
pop
mov
mov
out
sti
mov
mov
fnsave
or
lods
lcall
jno
stc
add
andl
sbb
pop
es
lods
outsl
fimull
adc
leave
outsb
loop
ds
inc
mov
decl
mov
push
pop
inc
call
scas
cmp
mov
add
fcoml
xchg
add
lret
leave
sbb
sub
push
pop
int
adc
dec
movsb
addr16
cmpsl
leave
xor
pushf
mov
stos
jle
add
add
in
add
mov
scas
shrd
lahf
or
adc
xchg
stos
mov
pop
lcall
outsl
call
jmp
inc
cmc
cld
arpl
imulb
aas
jo
fdivs
mov
dec
aam
sub
adc
aaa
je
ja
and
jae
inc
arpl
cmp
mov
xchg
cmp
jo
adc
aaa
fsubrs
dec
rorl
sahf
cmpsb
jo
movsl
mov
out
or
jle
cmpsb
and
push
jae
or
pop
xchg
clc
fimull
rcrl
lods
mull
clc
add
sarl
add
out
out
addr16
lret
outsl
loopne
push
xchg
insb
mov
ret
je
and
das
add
jo
or
nop
sub
es
ret
cli
and
scas
es
sahf
xchg
fnsave
adc
mov
jle
fstpl
jmp
stc
push
sub
ret
out
test
inc
pop
out
imul
insb
inc
sub
xchg
shll
imull
cmp
xchg
pop
cmp
push
or
rorb
mov
lret
clc
xor
lock
push
xchg
dec
popf
arpl
icebp
popa
movsl
or
addl
lea
mov
cmpsl
leave
rolb
movsl
xor
xor
test
movaps
iret
xor
mov
imul
ja
jl
cmpsl
mov
sub
adc
outsl
scas
sub
dec
loopne
mov
out
mov
jne
fimuls
jle
loop
out
push
shrb
data16
mov
cmp
xor
and
push
adc
and
in
xchg
popf
xor
outsl
enter
call
idiv
add
add
cmp
inc
sub
xor
mov
sbbl
rcll
lock
call
mov
in
add
xchg
test
in
rorl
push
mov
movsl
mov
movsb
sub
int
adc
mov
out
jne
sbb
push
push
xor
out
mov
sbb
cmpsb
mov
shrl
lcall
cmp
pop
cmp
adc
sub
push
leave
daa
stos
sbb
xor
mov
fstpt
jo
fcomip
xchg
xchg
inc
mov
jmp
lcall
pop
adc
inc
xchg
divb
xor
mov
cmp
test
inc
adc
jbe
scas
jle
xlat
ret
mov
call
xchg
arpl
jge
xchg
divl
fisubrs
dec
xchg
pop
sbb
cmpb
mov
rolb
addr16
xchg
jg
mov
fistpl
jb
jnp
dec
ret
jne
out
lds
jns
jo
es
aas
leave
mov
repnz
jle
cmp
mov
dec
leave
aam
out
dec
movsl
loope
or
jne
aas
and
adcl
cli
xchg
rclb
pop
iret
popa
add
jno
pop
shlb
mov
xchg
adc
pop
repz
xchg
jecxz
orl
cmpsl
outsb
adc
inc
pop
insb
scas
xchg
mov
movsl
sub
add
push
xlat
xchg
rol
mov
mov
test
dec
lds
scas
mov
fadds
mov
sub
lods
mov
sbb
push
call
out
insb
and
lcall
dec
lea
leave
lods
push
ror
inc
xchg
mov
dec
in
in
imul
loopne,pt
in
movsl
out
adc
insb
mov
sub
push
lret
sub
xchg
testb
jns
std
lret
daa
sbb
push
xchg
sbb
jno
and
add
notl
inc
lcall
nop
and
test
pop
lahf
fwait
xchg
addr16
aaa
fldenv
in
push
mov
int
add
std
push
push
mov
popa
mov
leave
arpl
xchg
sbb
pop
mov
movsb
lahf
sbb
xchg
js
push
aaa
rcl
decl
ds
cwtl
and
cmp
dec
mov
popa
xor
inc
xor
cmp
and
imul
loopne
adcl
dec
pusha
push
xchg
dec
mov
stos
mov
ljmp
xchg
sbb
push
add
inc
call
add
mov
scas
fsub
mov
or
mov
lock
sub
ljmp
addr16
shrl
xor
pop
pop
stc
push
mov
ja
call
xor
int3
dec
cmp
xchg
std
pop
push
dec
int3
lcall
xor
pop
adc
jae
cli
jg
subb
jge
pop
mov
push
aaa
jmp
jle
mov
insb
arpl
jle
jl
xchg
jns
adc
stos
jmp
sahf
pop
sti
cmp
cltd
mov
inc
xor
mov
push
sbb
cmp
push
add
sbb
fwait
pushf
scas
std
repnz
fmul
sub
mov
mov
vrsqrtss
mov
dec
pop
fsubl
push
icebp
mov
out
imul
dec
dec
mov
test
arpl
inc
test
xor
sub
aas
arpl
mov
lea
enter
push
inc
mov
idivl
pop
xor
jge
add
int3
dec
xchg
push
sahf
push
repnz
pushf
outsl
fcmovnb
sbb
leave
or
gs
dec
xchg
mov
mov
fidivrl
data16
xor
les
cmpsb
mov
pop
sbb
sbb
inc
testb
repnz
cwtl
cmc
jne
inc
gs
clc
cmc
inc
jns
sbbl
subl
lock
ds
mov
int3
iret
inc
jmp
xchg
je
mov
rol
loopne
pop
test
imul
nop
mov
mov
push
insb
inc
mov
dec
sbb
clc
jo
fsubrs
cmpsl
add
mov
or
xchg
sub
out
xchg
rcl
cmp
and
fisubs
and
rcr
mov
lock
outsl
ss
xlat
mov
fiaddl
lcall
pop
scas
ja
loop
dec
and
sbb
fcmovb
dec
sub
dec
je
gs
mov
push
pop
sub
inc
daa
loope
pop
fs
leave
pop
adc
jo
push
fiaddl
add
daa
pushf
cmp
push
mov
add
cmp
pusha
repz
sbb
pop
rcrl
push
enter
dec
add
xor
aas
dec
jb
out
flds
cwtl
stos
aam
leave
cmp
pop
mov
and
and
and
or
sti
xchg
inc
sahf
dec
xlat
pop
sbb
mov
std
pushf
cmc
add
add
test
jp
jae
inc
push
cltd
in
sub
sub
mov
aad
sub
aas
sbb
sahf
mov
pushf
cwtl
outsl
pop
sti
dec
ds
xlat
movsl
adc
js
xchg
mov
test
or
enter
or
lahf
adc
push
rol
adc
jno
les
sub
mov
mov
mov
dec
pushf
pop
and
std
loop
leave
pushf
dec
xor
je
stc
lods
icebp
aam
mov
sbb
pop
test
and
mov
lahf
pop
jnp
in
je
clc
dec
leave
call
repnz
loopne
mov
inc
pop
inc
and
mov
sub
and
pop
mov
dec
push
adc
sbbl
dec
iret
test
ss
inc
add
shll
int
pop
and
aas
pop
xor
or
fsubs
test
mov
fwait
jg
jo
bound
xchg
pop
js
in
sub
stos
mov
je
or
xlat
xchg
xchg
xchg
and
pop
movsl
adcl
mov
aad
js
or
jo
inc
cli
sub
iret
call
xchg
rolb
dec
call
sbb
mov
adc
out
add
add
mov
inc
push
mov
dec
mulb
cmc
dec
iret
hlt
andb
mov
fadd
shl
cmpsb
push
bound
aaa
lahf
fbld
shll
out
ja
push
pop
movsb
rcll
adc
popa
mov
jg
ja
adc
in
pop
sub
jbe
pusha
push
mov
mov
scas
xchg
jle
mov
ljmp
or
cmp
xchg
sbb
sarb
dec
fidivs
push
stos
dec
mov
fstpl
movsl
aam
clc
imul
fwait
icebp
nop
dec
push
out
cmp
fnstsw
mov
adc
mov
popa
and
dec
add
sti
pop
or
hlt
xor
or
fs
lock
xor
lret
mov
add
xchg
add
ds
shll
stc
or
push
or
popa
jg
or
shll
dec
pop
loope
adc
inc
stos
loopne
cs
pop
ja
in
or
xor
jno
push
stc
add
test
xchg
outsb
push
pop
ja
push
cltd
push
dec
sub
scas
cmp
pop
stos
xchg
fidivs
fistpll
add
cld
mov
std
pop
popa
aas
xchg
gs
pusha
push
jnp
stos
sbb
shrl
sbb
fwait
push
jb
test
scas
outsl
mov
sub
lods
fnstcw
inc
aas
sbb
add
push
pop
adc
lods
cmp
lods
mov
mov
sbb
imul
andl
stc
cmp
pop
mov
or
push
adc
xchg
xor
shll
jmp
cli
clc
or
mov
dec
clc
inc
sbb
push
pop
rorl
inc
out
mov
inc
sub
out
fldl
jb
les
jae
lea
mov
inc
mov
push
fwait
rcr
movsl
cli
mov
fisubs
out
or
lfs
and
xor
cs
addb
xor
push
add
les
jg
jmp
xchg
inc
push
in
adc
cs
jne
cmp
ljmp
dec
lcall
pop
sub
notl
cld
sub
cli
test
loop
pushf
xchg
adc
pop
cmp
inc
dec
loop
jo
stos
test
cltd
addr16
mov
andps
cmp
mov
adc
stc
cmpsl
mov
bound
lahf
xchg
stos
dec
stos
cmc
push
cmpsb
push
fisubs
jmp
addr16
out
cmp
adc
loope
pop
loope
outsl
jne
xor
push
and
inc
mov
add
sbb
insl
and
and
loopne
out
icebp
sti
xchg
add
lods
fdivl
pop
sub
push
idivb
xchg
push
adc
adc
dec
ret
ret
flds
mov
scas
inc
jno
lods
xlat
cltd
xor
jp
mov
sub
scas
adc
pusha
xchg
mov
das
flds
add
xchg
repnz
aad
push
call
adc
movzwl
fmull
sbb
and
dec
inc
test
icebp
cmp
xchg
xor
pop
dec
ds
mov
jmp
inc
cmp
orl
incb
push
out
popa
jb
inc
push
mov
ja
es
cmp
mov
sarb
outsb
sub
inc
add
xlat
aad
stc
mov
mov
imul
cmp
in
orl
and
xor
imul
and
dec
adc
jne
push
ds
fnstcw
mov
sub
repz
das
ljmp
fnstsw
cmpsl
or
fmuls
push
mov
je
xor
call
int
push
mov
aad
xchg
jno
fwait
shrl
pop
stc
dec
xor
in
pop
test
dec
cmp
shr
xor
mov
add
xor
insl
xor
cmpsb
add
jmp
sbb
jne
jmp
push
mov
jp
cli
xchg
add
js
and
aaa
enterw
fdivr
or
and
test
insw
mov
inc
sbb
mov
push
hlt
dec
adc
xor
xor
loop
or
pop
movsb
movsb
sbb
xchg
lods
xchg
pop
in
cmpsl
and
imul
fisttpll
push
fwait
cmpsl
in
cmp
mov
mov
jl
aaa
xchg
or
divb
cs
fstpt
cli
sbbb
jae
mov
push
fistpl
sub
add
add
sub
pop
inc
add
mov
aad
add
iret
outsb
insl
ror
add
movb
dec
pop
pop
cwtl
int3
push
sbb
sbb
cmc
xor
sub
das
fisttpl
or
inc
cs
push
mov
loop
push
adc
lea
mov
je
cltd
test
or
add
sbb
pushf
sub
bound
xor
movsb
in
push
fldenv
xchg
lea
cmp
adc
cmp
inc
add
mov
lcall
andl
inc
das
out
pop
or
inc
out
mov
movb
dec
jne
cltd
push
gs
mov
test
fcoms
jl
aam
push
lahf
mov
addr16
jle
fdivrs
popf
jge
sti
iret
push
int
and
sbb
push
mov
or
testb
sub
dec
push
fcompl
xor
subb
cmp
repnz
scas
int3
outsl
xchg
dec
nop
push
fbld
fwait
adc
shrb
dec
push
jmp
lock
clc
ljmp
testb
js
in
cs
in
rcrl
mov
cld
int
pop
add
dec
push
xor
add
ds
repz
mov
and
in
lock
add
push
fisttpll
xor
inc
xlat
sub
dec
fildl
outsb
xor
mov
cmpsl
dec
ds
sbb
aaa
nop
or
stc
or
aaa
mov
cwtl
mov
add
mov
pop
xor
outsb
xchg
push
sbb
or
xor
add
jo
jge
cmp
in
xchg
jnp
dec
sbb
xchg
je
mov
aas
aam
repnz
cmovl
lock
addr16
adc
push
mov
jnp
les
jb
push
stos
les
call
stc
rcr
sub
dec
sbb
push
xor
inc
pop
push
std
adc
push
loope
mov
inc
mov
lcall
das
cmp
adc
lret
inc
mov
movsl
cli
in
or
mov
stos
nop
or
add
ss
and
icebp
add
and
aad
lock
mov
xchg
dec
add
mov
fnstsw
inc
fs
xlat
and
sarb
adc
push
stc
pop
or
sub
or
aas
mov
xchg
add
inc
xor
int
lret
or
imull
mov
pop
test
mov
orb
js
mov
popf
mov
pop
sahf
insl
xchg
loop
clflush
push
mov
mov
mov
pop
fldcw
sub
mov
and
cmp
dec
test
mov
mov
dec
push
movsb
test
scas
dec
in
stos
lahf
adc
rcrb
out
stc
mov
lret
mov
mov
pop
mov
cmp
xor
hlt
mov
jmp
pop
stos
mov
push
je
scas
movsb
lea
loope
shrl
pop
mov
push
cmc
mov
push
adc
cmc
xlat
sub
inc
mov
loopne
mov
mov
dec
call
adc
mov
sub
aam
mov
and
lock
inc
xchg
ret
cmp
std
lds
sub
add
cmpsb
mov
outsb
xchg
das
in
add
adc
sbb
mov
arpl
fs
adc
scas
out
xchg
and
loop
pop
fidivrs
mov
xor
lods
addr16
test
aad
dec
or
mov
or
mov
and
xchg
adc
ret
addr16
pusha
jbe
call
jns
nop
cmpsl
and
in
pop
nop
xchg
or
lahf
xchg
xor
out
movsb
clc
leave
sbb
ss
fs
aaa
lcall
pop
xor
push
mov
int3
sub
jns
sbb
aad
pop
adc
dec
fldenv
xchg
jecxz
cmp
clc
sbb
and
psrad
ret
in
mov
mov
lds
test
sbb
inc
fisttps
or
enter
push
mov
mov
jae
das
popf
xor
cltd
jbe
and
shll
call
inc
fidivrl
ljmp
and
cmpb
mov
int
pop
cmpsb
push
pop
or
pushf
mov
arpl
or
cs
or
in
add
mov
add
dec
push
sub
dec
stc
mov
xchg
jae
ret
sub
mov
out
and
imul
add
lret
jne
lds
push
scas
pop
adc
cmp
ret
aad
aam
xchg
fneni(8087
negl
adc
aaa
testb
dec
xchg
dec
push
outsb
das
loopne
dec
ret
les
call
in
mov
shr
jge
mov
imul
cmp
xchg
out
leave
mov
cmp
cmp
dec
pop
pop
lods
repnz
xchg
adc
push
clc
cmp
outsl
ljmp
xlat
push
cmc
clc
in
mov
test
aas
outsl
xchg
cmp
aad
outsl
cmp
mov
lods
dec
lcall
leave
into
movsb
loope
mov
test
iret
orl
outsl
movsl
mov
repz
mov
adc
mov
jae
adc
mov
jecxz
mov
push
mov
cmpsl
push
popf
pop
fadds
cmpsb
std
push
test
cmp
add
lret
xchg
sbb
mov
xor
imul
inc
adc
push
jns
sti
lahf
adc
mov
pop
cmpb
inc
push
xchg
jecxz
cli
rcrl
jg
mov
jmp
std
jmp
jnp
iret
jno
ja
into
inc
dec
sti
sub
add
push
push
shll
xchg
testl
adc
mov
insl
je
add
and
add
jl
mov
sub
cmp
icebp
hlt
mov
inc
push
jbe
nop
adc
xchg
jg
jne
mov
mov
mov
notb
fstpt
or
push
das
xor
and
test
cmc
inc
inc
push
xorb
xor
push
jmp
das
loop
cmp
sub
in
loopne
arpl
cld
xchg
outsb
out
fstpl
xchg
aaa
out
xchg
sbb
loope
out
flds
fsubrs
mov
xchg
cmp
xchg
cmp
xchg
fwait
pop
pop
repnz
leave
pop
dec
add
jne
adc
dec
pushf
add
jl
and
mov
test
int3
fwait
ja
add
or
sti
cmp
test
mov
inc
lahf
pop
ret
test
sub
and
mov
cs
pop
and
push
loope
xchg
shll
jo
jmp
leave
adc
jmp
iret
test
jbe
subl
repnz
mov
xor
xchg
ss
mov
xchg
jmp
iret
xlat
icebp
mov
jo
bound
adc
sbb
or
xchg
insl
int
imul
mov
xchg
insl
mov
and
das
inc
repz
mov
cwtl
pop
mov
inc
hlt
out
xchg
fs
xor
sbb
mov
mov
rorl
pop
push
cmp
xor
mov
fidivs
bound
cmpsl
mov
mov
mov
xchg
mov
into
orb
mov
mov
shrb
push
dec
pop
fistpll
inc
xorb
shrl
out
dec
dec
movsb
push
inc
xor
ja
add
es
xor
adc
js
jns
adc
imul
movsb
pusha
sbb
and
lods
mov
mov
lahf
inc
pop
sbb
xor
stos
out
bound
xor
jo
mov
movsb
ret
xchg
mov
jl
mov
jno
clc
andb
stos
inc
jp
mov
fdivs
clc
cmp
xchg
bound
mov
mov
cmp
jle
sarb
fdivs
pushl
xor
jmp
add
pop
and
inc
sbb
cld
and
push
lea
or
xor
xchg
dec
scas
adc
inc
push
shll
push
push
mov
pop
mov
lahf
cmpsb
cmpl
inc
repnz
sarb
dec
adc
pop
fs
sbb
pushf
xchg
orb
pop
aam
out
fidivrs
cmp
cs
repz
insb
fdivrs
adc
mov
push
jae
sahf
insl
xchg
movsb
std
cmp
cmp
enter
loope
dec
data16
jle
outsl
mov
sbb
fdivl
je
test
mov
stos
iret
mov
es
fldt
fnstenv
jbe
xor
push
mov
jb
insl
mov
xchg
sub
xor
div
mov
mov
dec
mov
inc
sbbb
mov
cmp
out
sub
ljmp
cld
insb
fmuls
or
mov
and
xor
inc
and
push
scas
mov
pop
sbb
out
jns
sbb
sbb
lret
lret
fstpl
cmpsl
or
cmp
ret
xchg
ret
shrl
mov
addr16
jle
cmpsb
sub
jp
adc
mov
sarb
push
rol
cli
pavgb
lock
inc
dec
pushf
adc
jl
add
loope
pop
or
dec
je
xor
test
pop
sbb
loope
jle
dec
enter
ss
xor
pop
addr16
stc
dec
imul
xlat
and
sahf
or
cmc
mov
sbbl
cmp
dec
xchg
out
mov
mov
test
stc
mov
jl
pusha
cmp
push
ds
cmpsb
pop
stc
in
mov
push
adc
and
cmp
les
stos
dec
scas
inc
into
les
loopne
out
sub
mov
push
sbb
ret
pop
pop
xor
cmc
iret
test
mov
lcall
jg
les
lods
inc
or
push
mov
ss
lods
repnz
stc
dec
shlb
les
push
push
insb
mov
xor
and
jl
iret
mov
add
stos
jnp
mov
fnsave
fcmovne
pop
aas
insb
loope
nop
push
scas
andps
add
and
cmp
data16
cltd
test
cwtl
adc
stos
xchg
adcb
adc
lods
pop
aam
aas
lahf
cmp
pop
ret
cmp
or
mov
xor
aad
imul
jmp
das
mov
or
mov
push
bound
cmp
jp
jns
jno
jp
aas
cmc
mov
jae
sub
sbb
lea
jb
xchg
inc
cmp
cs
cmpsb
push
iret
enter
or
dec
sub
jnp
mov
inc
cwtl
and
mov
mov
mov
add
adc
imul
inc
push
ss
adc
pop
or
pop
lods
mov
adc
mov
add
adc
and
lahf
test
sub
out
inc
aaa
sbb
lret
sbb
movsl
insb
sub
or
daa
xchg
mov
das
inc
add
hlt
sbb
push
fadds
mov
mov
jne
int3
inc
or
bound
mov
jns
mov
ja
fcmove
xor
aad
inc
cmp
shr
out
cli
jns
orl
pop
mov
inc
test
rcrb
shrb
hlt
pop
cmp
and
mov
pop
pop
jnp
leave
xchg
pop
pop
lea
fcmovnb
push
add
pop
cmpb
mov
sub
xchg
xchg
outsb
loopne
adcl
push
inc
mov
mov
mov
dec
inc
outsl
insb
aaa
cmc
dec
or
popa
cmp
sbb
shll
mov
fisubrl
and
aad
aaa
xchg
mov
rcll
pop
pop
mov
push
or
xor
setge
stc
enter
adc
mov
mov
mov
test
pop
movsb
nop
and
push
sahf
xchg
pusha
dec
mov
xchg
adc
out
mov
std
std
mov
push
ja
sbb
jmp
pop
jle
scas
or
out
sbb
xchg
xchg
arpl
std
pop
ret
mov
pop
pop
loope
out
mov
lcall
das
cli
pop
lea
call
mov
jle
push
int
mov
mov
lea
lea
out
cmc
dec
sub
push
cld
scas
mov
push
add
mov
je
cmp
hlt
popa
out
pop
and
push
stos
idivb
mov
mov
rorb
push
mov
dec
xchg
mov
push
add
stos
mov
negb
outsl
insl
pop
lret
jmp
outsb
in
filds
and
or
ficoms
out
sub
inc
push
imul
cmpb
imul
sarb
adc
test
mov
inc
and
cmp
inc
icebp
mov
push
stc
mov
sub
inc
ret
add
dec
out
add
sub
mov
mull
sub
int3
shll
jle
dec
int3
pop
dec
out
out
movb
adc
inc
scas
dec
inc
fstpl
xchg
jne
out
fisubrs
fs
sbb
in
dec
imul
stos
jg
fs
sbb
out
daa
fcmovu
mov
add
mov
imul
adc
sub
dec
sbb
test
cmp
test
sbb
push
iret
dec
sar
ret
sub
mov
outsb
xchg
adc
cld
repz
inc
cmp
iret
lret
sahf
add
push
cltd
pop
inc
adc
xchg
jb
or
ja
out
push
push
iret
dec
fsubrl
xor
in
and
bound
pop
push
push
cmp
push
pop
inc
jecxz
ret
xor
jae
and
xchg
not
xchg
push
pop
mov
imul
rcr
imul
pop
push
lods
in
fwait
testl
std
sub
inc
pop
inc
not
dec
push
loope
push
negb
out
call
inc
fisttps
inc
es
adc
insb
dec
jp
jge
mov
cli
fcom
movsl
stc
sti
pop
popa
and
loope
xor
out
enter
mov
mov
push
jle
xor
or
adc
push
push
dec
and
imul
pop
add
sub
idivl
or
js
imul
fsubrl
adc
out
or
test
mov
loop
jp
add
pop
and
xlat
mov
xchg
icebp
outsl
stos
pop
sub
push
lea
xor
fisttpl
sbb
sub
popa
dec
into
je
cmp
ljmp
jg
inc
outsb
mov
or
adc
les
or
mov
lds
jp
pop
mov
outsl
movsl
popf
arpl
daa
xor
add
cmp
daa
in
test
ldmxcsr
mov
mov
xchg
addr16
std
push
adcl
xchg
into
sbb
repz
inc
xchg
lret
or
add
ljmp
add
aas
notb
sbb
popa
fildl
cwtl
fcmovnbe
sub
inc
or
lods
lods
jnp
cmp
jle
fdivl
in
bound
cmpl
fisttps
or
xchg
mov
adc
xor
xlat
xchg
into
inc
pop
dec
loopne
sub
jmp
hlt
test
dec
dec
dec
dec
adc
add
jb
push
xor
out
arpl
pop
inc
dec
mov
lret
and
inc
imul
addr16
es
jg
push
es
inc
test
lds
sub
jg
roll
movsb
sbb
sub
ds
mov
jnp
stos
subl
aam
cld
aam
loopne
pop
sbb
mov
mov
push
not
adc
sub
cmpsl
xor
push
lods
cmp
mov
popf
ficompl
nop
add
and
adc
leave
inc
cmpsb
lret
sub
xchg
ds
sbb
shlb
jo
inc
stos
adc
mov
jmp
into
mov
mov
test
lret
or
pop
add
sbbb
fwait
fs
adcl
lock
fsubr
mov
and
test
add
xor
add
out
cmpsb
sarl
dec
ficoml
imul
in
xchg
pop
push
ja
xchg
and
frstor
mov
push
out
nop
push
cs
bound
sub
sub
xor
bound
mov
int
jns
pop
ljmp
xchg
outsb
pop
xor
lcall
addb
loop
lret
call
mov
imul
jmp
xor
data16
mov
mov
aas
cld
and
jne
ja
sub
xor
mov
fldenv
mov
push
fwait
mov
sbb
jg
dec
scas
jbe
or
or
ja
cmp
mov
adc
xchg
xchg
or
inc
cmp
pop
pop
hlt
and
lret
fstl
push
adc
mov
xor
data16
test
mov
aad
aaa
dec
cmp
push
jg
cmp
adc
xchg
js
and
lea
jmp
faddl
in
adc
adc
cmc
dec
aad
pop
add
loope
out
adc
pop
repz
lret
pop
mov
cli
leave
es
inc
jb
insb
nop
faddl
push
adc
mov
xchg
pop
xchg
or
mov
add
out
sub
add
mov
mov
jns
cmc
icebp
pop
fchs
jp
insl
fucomip
or
sbb
pop
decl
sbb
bnd
in
movsb
mov
or
dec
mov
mov
popf
std
add
imul
sar
xchg
fs
loope
pop
mov
xchg
dec
inc
ss
mov
popl
shrl
lret
cmpsb
ss
pusha
mov
add
mov
xorl
das
outsb
xchg
push
inc
fs
add
repz
cmpsl
mov
shr
sarb
cmp
out
mov
ds
cld
imul
into
or
xchg
mov
mov
xchg
imul
mov
in
scas
or
mov
xchg
pop
mov
imul
mov
dec
cmp
cs
fbstp
outsl
jmp
dec
xor
pop
mov
int
fadds
push
cmpsl
mov
and
sub
dec
xor
imul
cmp
push
cld
in
add
cltd
test
jmp
cmp
in
mov
mov
lret
jmp
inc
mov
pushf
in
and
mov
in
xor
mov
pop
mov
loop
mov
inc
inc
inc
addl
mov
sub
ret
xchg
push
arpl
sbb
push
and
mov
fimuls
mov
ljmp
idivb
dec
jg
mov
andl
ja
les
in
mov
test
fidivrs
lods
push
icebp
inc
mov
out
jl,pt
lea
add
sub
dec
xchg
sti
push
adc
sbb
add
aad
imul
add
adcb
sbb
mov
mulb
lds
jbe
mov
daa
fmuls
js
sub
icebp
dec
adc
shll
push
rcrl
int
pop
mov
jb
movb
mov
ja
insl
xorl
cmp
sub
pushf
push
or
fcom
push
push
orl
add
popf
shll
in
jp
loopne
push
and
jae
pop
mov
sti
mov
loop
lods
sub
push
sub
and
add
mov
xlat
pop
jmp
jge
push
mov
sarb
sub
xchg
and
adc
mov
shlb
dec
inc
pop
add
test
jle
int3
pushf
add
fmull
call
pop
xchg
fsubrs
sub
xorb
in
subb
add
test
int
subl
int
mov
xchg
push
lds
loopne
sub
data16
pop
cmp
adc
mov
jno
aam
repnz
stos
inc
movsl
loopne
gs
and
push
lcall
cmp
xchg
push
push
push
dec
cmpsb
cmpsl
jae
lock
adc
sbb
cmp
sub
xchg
scas
jl
jno
xor
jne
adc
push
out
aam
sub
lock
dec
idiv
or
dec
roll
xor
test
icebp
aad
aaa
sarb
jbe
pop
dec
loopne
testl
std
out
and
sbb
hlt
sub
out
xchg
outsl
cmp
dec
mov
jne
and
push
sub
sbbl
and
leave
mov
mov
addr16
ret
ficompl
test
test
cmc
fcomi
int
jbe
loopne
popf
mov
jecxz
out
and
jns
daa
je
xchg
dec
jns
clc
mov
fdivp
bound
sbb
mov
je
inc
or
divl
fwait
repnz
fstpl
lret
mov
dec
rorb
jge
xchg
mov
pop
cmp
lret
and
mov
cmp
pop
nop
mov
shlb
mov
insl
clts
lds
mov
lret
js
sub
fisubl
or
sbb
jg
push
mov
dec
push
xor
mov
adc
leave
pop
xchg
cmp
gs
divl
or
je
jp
enter
shrb
inc
mov
xchg
xchg
and
int3
fwait
ljmp
dec
stos
add
add
pop
mov
jle
jae
mov
and
cwtl
sub
adc
pop
push
push
mov
psllw
mov
lea
sub
movsl
fsubr
and
cli
outsl
mov
mov
push
pop
xlat
aam
jb
add
xchg
aaa
das
add
add
imul
xchg
test
test
call
sub
clc
dec
in
mov
data16
mov
jecxz
inc
stos
out
pop
dec
lea
jns
test
mov
outsl
add
xor
jmp
ja
flds
ljmp
lret
push
das
sbb
push
xchg
mulb
mov
lahf
mov
int3
dec
adc
add
lock
sbb
adc
inc
lods
pusha
sbb
xor
xchg
push
icebp
lods
fnsave
sbb
and
outsb
scas
in
ret
push
mov
pop
repz
inc
pop
daa
call
jl
sub
scas
ret
in
adc
mov
pop
xor
sub
sub
out
add
sub
negl
loop
lock
dec
push
out
pmulhuw
vpsubw
dec
jl
and
sbb
jl
dec
xor
mov
lret
push
andb
push
or
cld
sbb
mov
adc
cld
add
jp
rolb
leave
sub
lock
mov
and
loopne
xor
out
dec
dec
negl
bound
jns
mov
cmpsb
mov
cmp
mov
popl
ljmp
sbb
popl
out
aam
test
cmpsl
pop
xor
shlb
cwtl
push
jmp
xchg
sbbb
repnz
aas
dec
sti
outsb
movsl
clc
push
sbb
shrl
js
pop
dec
and
lcall
addb
xor
fstl
aas
push
popf
fs
or
lret
scas
adc
idiv
popa
aad
add
adc
add
adc
add
inc
popa
inc
xor
xor
mov
sub
xchg
cwtl
les
jbe
dec
and
out
daa
dec
dec
adc
and
sbb
popa
icebp
leave
xor
xlat
pop
push
mov
xchg
dec
inc
mov
cld
push
out
lods
jmp
xchg
inc
cli
ja
mov
pushf
scas
mov
xchg
jp
pusha
aam
pop
dec
into
cmp
cmp
mov
xchg
jne
movsb
das
jbe
loope
inc
aad
mov
and
lea
pop
mul
jl
arpl
leave
xlat
loop
sahf
add
std
adc
adc
out
int
jae
jbe
push
into
xchg
fs
xchg
adc
or
popa
lcall
aas
ss
mov
mov
cli
mov
mov
push
out
xorb
sub
shlb
cmpl
pop
ss
add
iret
nop
sub
push
jb
and
push
test
cwtl
cld
push
or
das
xchg
mov
insl
fsubr
inc
xchg
push
addb
loop
sbb
lods
cmp
mov
mov
xchg
xlat
sub
or
mov
pusha
adc
shl
pop
dec
adc
jg
adc
xchg
mov
pop
xlat
push
in
ss
xchg
mov
pop
cmc
inc
mov
adcl
setle
cmp
stos
movsl
les
js
or
push
dec
mov
mov
lock
icebp
data16
xchg
jae
repnz
jb
ret
add
inc
jbe
jbe
mov
jae
mov
and
sub
mov
cwtl
jns
lds
in
jge
jae
fstps
dec
pop
gs
and
xor
inc
cmpsb
into
test
inc
xchg
xchg
imul
imul
test
lods
scas
cli
popa
daa
aaa
sub
pusha
aas
or
movsl
cmpsb
mov
cmp
xchg
fdivp
movsb
fcompl
push
xor
test
or
lea
pop
push
fucomip
push
out
aaa
or
mov
push
rorl
lahf
and
inc
add
xchg
sbb
fwait
mov
repz
sbb
rcll
xor
push
pop
fwait
pushf
xlat
pop
fldl
rolb
jp
nop
mov
scas
rcrl
lds
sbb
ss
bound
inc
fisubrs
shrl
adc
mov
add
xchg
xchg
into
xchg
dec
int
adc
psllq
sbb
int3
pop
cmp
or
lods
xchg
cmpsb
scas
loopne
push
xchg
adc
inc
aaa
sbb
mov
adc
adc
pop
mov
inc
dec
xor
lock
sub
fdivs
inc
pop
sbb
mov
dec
xchg
fsubrp
sahf
or
in
shlb
or
jb
cmp
scas
xlat
dec
fcom
or
iret
mov
xchg
enter
out
les
mov
sbb
jg
xor
mov
xlat
lahf
sbb
add
push
jp
xchg
call
dec
add
aas
fidivrl
icebp
lahf
xchg
imul
movsl
scas
push
mov
lea
lcall
rorb
inc
sub
mov
leave
pop
adc
adc
ret
mov
xor
lods
mov
mov
pop
sub
adc
aaa
pop
lret
sbb
idiv
mov
cmp
xchg
mov
xor
sarl
and
dec
jg
or
out
aas
sbb
sbb
mov
push
notl
lods
cmpsl
xor
sbb
icebp
ja,pn
mov
sub
jmp
xorl
cltd
or
lahf
xchg
jge
cmp
dec
inc
mov
js
push
cmp
jmp
arpl
je
pop
lcall
pop
std
jns
mov
jp
xchg
push
lods
mov
call
lret
cmp
test
jmp
ss
sbb
rcrl
data16
cmp
js
xchg
lcall
mov
movsl
fmull
mov
adc
cmp
sbb
jns
pop
divl
test
call
stos
jmp
pop
jnp
stc
and
mov
jge
addr16
or
push
pop
or
clc
mov
jne
xor
inc
sarb
lds
testl
xlat
shrb
clc
sbb
clc
loopne
and
xchg
test
fcmovbe
xchg
lahf
mov
stos
push
fistpl
sub
jmp
call
adc
dec
mov
aam
dec
xchg
cmovs
pop
jmp
adc
xchg
jb
cmp
lea
mov
jmp
movsl
inc
add
int3
push
add
hlt
xchg
inc
fcomps
adc
insb
pop
mov
gs
jmp
mov
daa
out
orl
and
pushf
push
jg
in
jle
testl
hlt
lods
jne
adc
lahf
dec
addr16
mov
sub
lea
in
loop
out
jmp
xor
test
pop
push
pop
insl
out
xor
cmp
mov
add
test
rorl
sbb
cltd
je
popf
jo
jmp
aad
lcall
inc
hlt
pop
out
test
cmpl
and
enter
jmp
mov
or
jbe
fnstenv
fstl
aas
stc
xor
stos
into
test
xor
fbstp
or
sahf
add
fbstp
stc
jecxz
pop
movsl
mov
out
jg
cmp
in
aas
fwait
mov
shll
test
popa
pushf
xchg
pop
stos
aad
inc
cmp
stos
out
cmp
push
jb
bound
ds
or
cli
sbb
cmp
fsts
mov
iret
and
dec
notl
jno
loopne
std
jle
or
mov
dec
pop
or
jae
pop
loop
pop
aas
arpl
movd
in
cmp
xor
aam
fsubrl
pop
xadd
sti
mov
jmp
call
sbb
cs
push
adc
cmp
sbb
fs
lret
cmp
test
push
inc
inc
loope
inc
loop
sub
jecxz
sub
and
and
std
inc
add
add
insb
stc
test
ja
sbb
and
fsubs
sub
enter
jae
lret
mov
pop
in
imul
sbb
aam
xor
xor
movsl
pop
fistl
leave
enter
cmpsb
push
hlt
push
mov
mov
lods
fisubs
sbb
in
test
lcall
enter
mov
and
mov
xchg
mov
adcb
lahf
cli
mov
outsb
mov
pop
ljmp
das
push
pop
mul
push
into
xorl
dec
gs
pusha
out
stos
push
imul
int
cli
sub
and
pop
mov
imulb
sbb
jae
mov
pop
sbb
dec
std
mov
add
das
inc
ds
iret
fwait
mov
or
mov
or
mov
jge
cmp
enter
lock
mov
jns
test
inc
jnp
clc
fs
clc
inc
sbbl
jo
addr16
popa
aam
sub
xchg
sub
mov
shr
lods
cmc
sbb
jnp
addb
sub
cmp
cltd
cwtl
mov
sbbl
loopne
daa
xchg
test
stc
andb
jns
stos
add
jge
pusha
push
stc
popa
xor
xor
scas
shll
mov
jae
push
dec
and
fadds
jae
aaa
mov
xchg
push
lret
mov
inc
push
pop
inc
mov
push
cld
push
cld
add
fidivrl
into
das
dec
call
fnstcw
push
mov
out
or
sub
jne
cli
mov
cmp
adc
fwait
push
bound
shrl
jp
or
push
addr16
nop
sub
mov
pop
lahf
cmc
andb
inc
inc
subl
xlat
ret
xchg
push
jb
lods
mov
lret
mov
pop
jge
and
inc
sbb
loopne
pop
out
dec
mov
out
into
lock
ss
xchg
push
test
ficoms
mov
jp
das
xchg
push
ficompl
and
fnstenv
popa
push
cmp
popf
hlt
push
cld
das
aas
inc
push
iret
jne
or
lahf
je
jns
push
movsl
inc
out
mov
pop
loope
pop
push
aas
xchg
sbb
arpl
sub
dec
jb
and
nop
imul
popf
xor
dec
int
aad
je
in
mov
mov
or
cwtl
jb
or
pop
ljmp
call
jmp
outsb
gs
jmp
adc
inc
repz
or
push
pop
call
sub
faddl
insl
into
enter
cltd
int
adc
adc
imul
nop
test
cmpsb
icebp
sub
adcl
mov
jno
adc
adcl
pop
mov
shl
lods
pusha
fsts
leave
pop
or
mov
mov
push
mov
mov
call
jmp
data16
or
cmc
jmp
pop
and
fsubs
cld
jecxz
loope
dec
or
pop
sub
in
hlt
mov
mov
lahf
mov
shll
mov
cmp
xchg
mov
sub
fwait
mov
sbb
rcll
popf
or
sub
das
roll
cmp
cli
ret
pop
and
bound
xor
adc
jo
adc
das
lahf
sub
sbb
rol
mov
ret
cli
gs
and
repnz
sbb
mov
adc
jne
cmp
xor
jb
and
and
fnstcw
pop
add
ret
inc
mov
push
cs
stc
adc
ret
jle
push
push
call
and
xlat
addr16
dec
das
push
testl
jmp
cmovnp
or
mov
leave
pop
cwtl
cmp
out
cmp
icebp
es
out
mov
cs
sahf
mov
mov
add
add
add
jbe
test
fstpl
mov
jge
or
adc
ret
add
daa
pop
shl
add
add
or
int3
dec
sub
out
mov
jecxz
call
imulb
sbb
dec
ficomps
imul
inc
inc
jbe
mov
aam
fistps
xlat
movb
int3
mov
fdivrl
out
decl
sub
and
out
fwait
inc
fwait
push
arpl
xor
sbb
adc
mov
fsubrp
cmp
in
xchg
addr16
aad
mov
jg
int
xor
jnp
les
dec
movsb
mov
mov
sub
out
out
inc
pushf
mov
sbb
aas
mov
out
shlb
in
mov
and
clc
in
hlt
push
mov
ficoms
ret
enter
adc
sahf
mov
mov
ljmp
xor
dec
or
test
inc
icebp
aam
sbb
outsl
sub
sub
jp
mov
xor
into
out
push
popa
or
inc
pop
jmp
lret
mov
or
and
push
mov
dec
es
ret
rclb
xchg
rcll
popf
fwait
test
jns
mov
cltd
lods
test
in
mov
adcl
inc
mov
xchg
jmp
mov
ror
cwtl
push
ja
mov
dec
add
push
push
test
or
xchg
mov
pop
xor
icebp
int3
mov
cmp
xchg
xor
nop
push
insb
xchg
cmp
jg
mov
inc
sarl
or
pusha
es
sbb
xor
cwtl
loop
jb
lahf
in
push
test
sbb
sub
out
pop
dec
sbb
and
stos
inc
mov
jo
mull
into
sbb
mull
add
in
push
and
rcll
outsb
fs
or
xlat
jo
daa
insl
sarb
mov
xlat
jo
rclb
cwtl
and
mov
xchg
jmp
pushf
lea
xor
cmp
add
pop
stos
shrl
push
hlt
xchg
mov
and
jg
xchg
xor
jp
adcb
icebp
pop
imul
loop
add
sub
ja
jne
mov
and
and
jae
das
inc
mov
popf
addr16
repz
push
mov
inc
push
mov
frstor
add
rcrl
pop
call
scas
jne,pt
push
cmpsl
addr16
cmp
sub
insl
adc
fildl
add
inc
xor
int
mov
mov
arpl
or
mov
lret
cld
gs
dec
notb
sbb
and
push
or
out
push
and
xlat
fsubrl
movsl
inc
fidivrl
mov
cmp
mov
cmc
mov
jp
popa
pop
es
fistpll
xor
mov
sar
push
inc
mov
in
loop
cli
lds
jecxz
fimuls
outsb
jo
lods
movsl
adc
fidivrs
rol
stos
mov
add
aam
rclb
lret
jmp
loope
insl
fwait
inc
mov
adc
inc
mov
ja
jmp
arpl
mov
dec
cmp
jbe
xor
out
fwait
imul
lds
arpl
mov
cmpsl
mov
cmc
pop
cmp
adc
in
in
popf
movsl
lahf
sbb
popf
jmp
aad
pop
xchg
mov
rorb
ds
aam
dec
out
sub
fistps
add
add
ds
fs
call
mov
or
mov
rcr
jo
mov
inc
aam
jb
cmp
outsb
pushf
outsb
or
mov
dec
inc
dec
jg
cmp
pop
jnp
xchg
adc
mov
mov
fdivl
stos
pop
adc
push
pop
pushf
inc
sbb
pop
push
cwtl
xlat
dec
sarl
pushl
scas
sub
mov
inc
cltd
dec
pusha
mov
or
cmpsl
mov
cmp
mull
popa
es
ret
inc
mov
inc
sti
cwtl
sbb
fwait
ror
or
fsubrl
jl
add
pop
mov
cwtl
and
adc
test
fs
rolb
pop
cmp
sub
mov
inc
dec
aaa
les
out
cmp
and
and
add
push
icebp
sub
jmp
add
sbb
lahf
xor
mov
push
mov
inc
daa
movb
out
mov
jo
jle
pusha
fisttpl
adc
lahf
mov
push
pop
repz
imul
push
xor
call
in
sbb
mov
std
push
jnp
jp
jl
ret
cli
xlat
cs
shl
adcb
sahf
fcoms
or
lret
pop
mov
aam
xchg
test
add
repnz
add
adc
lcall
mov
adc
dec
insb
jnp
bt
push
sbb
dec
push
shl
push
scas
sbb
mov
fldenv
mov
fidivs
mov
or
mov
clc
cmp
xor
out
mov
inc
loop
ja
les
icebp
in
mov
jo
insl
dec
dec
and
shll
aaa
imul
in
inc
in
or
inc
add
jl
or
stos
push
sbb
cld
or
mov
cmp
or
decl
popf
dec
pop
jle
sub
shrb
xor
dec
andb
imulb
pop
negb
scas
int3
push
mov
clts
jbe
sbb
stos
sub
movsb
jbe
dec
dec
arpl
push
mov
and
stos
bound
or
inc
hlt
out
adc
mov
sahf
adcb
gs
ficompl
data16
and
mov
or
push
arpl
push
lods
and
or
ret
push
pop
jo
push
scas
dec
mov
mov
mov
sahf
xchg
sub
fcoms
stos
inc
fucompp
pop
xorb
movsl
lret
cmp
lods
js
into
mov
sbb
mov
pop
movsb
mov
out
xchg
dec
cli
rcrb
dec
or
in
aam
jb
lcall
mov
mov
fsubrl
cmp
dec
insb
lea
dec
arpl
mov
push
mov
fsubs
and
leave
pop
mov
pop
ja
adc
out
cmp
mov
jg
dec
aaa
stos
inc
imul
sahf
cltd
out
lea
shl
daa
mov
pop
stos
inc
insb
push
sub
test
sub
jl
std
adc
jae
push
pop
inc
or
or
mov
icebp
in
mov
pop
in
arpl
xor
add
aaa
cmp
dec
push
adc
adc
popa
or
jnp,pt
loop
xchg
jns
push
cmp
mov
mov
dec
mov
sbb
rcll
push
jge
leave
mov
dec
in
pusha
icebp
dec
mov
or
pop
arpl
mov
pop
cmp
lcall
call
out
imul
jo
pop
adc
sbb
lahf
pop
jnp
xchg
adc
jb
mov
daa
loop
adc
int
pop
sbb
dec
pusha
jle
push
sub
les
mov
push
pop
enter
int3
xor
arpl
push
cmp
jbe
dec
pop
fisttps
add
push
sub
mov
jns
mov
mov
cmp
xor
les
imul
and
inc
test
sub
jno
out
rcr
mov
sub
and
sub
push
daa
or
cwtl
dec
test
icebp
shr
ja,pn
jmp
sub
push
adc
cwtl
sbb
fs
int3
je
addr16
adc
mov
fldenv
xor
sub
into
icebp
imul
shlb
adc
jae
inc
or
cmp
dec
cmp
add
repz
das
pusha
imul
sbb
xor
repnz
jae
mov
pop
and
dec
push
fisttpll
xchg
adc
in
add
xchg
mov
jmp
out
push
mov
out
outsb
xchg
cmp
fists
sbb
push
pop
ss
nop
cmp
jae
jne
js
or
std
dec
scas
lds
flds
cmp
pusha
test
lds
jnp
adc
pop
loopne
fisubrs
cmpsb
lds
push
out
add
mov
jnp
push
ss
sbb
add
fwait
cmp
sub
mov
test
outsb
push
mov
lods
push
mov
mov
test
imul
jge
inc
or
out
out
neg
jae
push
mov
ror
adc
imul
out
add
lret
arpl
adc
leave
shlb
dec
fsubrp
lret
addr16
pop
mov
or
repz
in
out
ret
sbb
inc
test
repnz
mov
insl
lods
or
mov
pop
lret
movsl
xor
push
frstor
lret
push
scas
rolb
movsl
hlt
cmp
jae
or
movsb
jle
bound
js
mov
imul
push
mov
ds
pushf
js
inc
rolb
mov
rolb
cmp
stc
cwtl
and
push
test
inc
into
sarb
out
aam
pop
pop
mov
dec
sbb
fcmovne
je
mov
shlb
clc
ja
cltd
aad
jo
loop
inc
das
dec
mov
adcb
jmp
inc
mov
into
fnop
je
out
inc
pop
push
mov
cmp
mov
in
jmp
popf
mov
xchg
jns
and
sub
mov
lret
rclb
int
dec
adc
test
xor
add
inc
jne
sbb
movsb
push
sub
mov
leave
inc
jnp
sahf
mov
adc
pop
sub
nop
cwtl
adc
movb
adc
dec
jmp
flds
pop
cmp
pop
mov
ret
fs
hlt
ficoml
or
mov
jecxz
outsb
adc
data16
mov
jae
push
or
xchg
sbb
and
pop
stc
mov
shrb
aad
xchg
andl
mov
mov
lds
out
and
lahf
cwtl
in
lods
pop
adc
testb
mov
mov
bound
pop
mov
gs
mov
cmp
add
dec
loope
inc
in
scas
dec
js
movsl
add
sub
jl
dec
je
mov
lds
repz
bound
xchg
jnp
mov
and
pop
pop
mov
jne
scas
xor
adc
rol
stos
int
pop
ss
fs
push
mov
mov
jnp
jl
sbb
pop
xchg
dec
fwait
cmpsb
sbb
mov
fcomps
sub
jp
inc
sbb
lcall
sahf
pop
add
sahf
adc
cltd
leave
out
xchg
and
ljmp
push
jg
adc
ret
dec
jnp
dec
push
inc
addr16
mov
or
pop
stc
sub
add
inc
fs
in
mov
aas
adc
mov
mov
pop
and
sub
cmp
lock
push
into
or
mov
lahf
dec
xor
shl
sbb
xor
xchg
mov
add
aas
pushf
insb
addb
jp
xor
inc
sub
xlat
fsts
mov
je
push
lods
adc
lahf
dec
fistpl
push
js
mov
fisubrs
and
and
inc
mov
xor
push
stos
popf
push
cltd
xchg
arpl
dec
add
add
dec
loopne
mov
dec
loope
ret
scas
pop
loope
mov
lret
mov
xchg
cmp
int3
xor
mulb
stos
jecxz
and
adc
lcall
stos
in
dec
lahf
pop
mov
pop
dec
dec
stc
mov
push
xchg
mov
repz
xchg
and
mov
jle
cltd
cwtl
pop
mov
je
bound
fucom
or
mov
jnp
ret
mov
jl
cmpsl
xlat
movsl
or
fwait
jno
stos
icebp
jge
fistpll
push
test
gs
aad
lods
in
orl
cmp
xor
das
fsubrl
bound
jne
inc
pop
adc
inc
adc
mov
nop
icebp
leave
or
lcall
cmp
pushf
aam
fcoml
push
mov
sbb
xchg
adc
mov
sbb
lock
fmull
loope
sub
mov
push
in
cmp
jb
mov
psubusw
push
es
loope
pushf
push
add
fcompl
movsl
imul
or
lock
in
fs
add
into
bound
stc
mov
or
addb
clc
jg
xor
push
and
scas
or
lcall
mov
ss
imul
movsl
ja
loopne
in
je
xor
mov
jmp
out
pop
cmp
iret
scas
outsb
std
cs
repnz
loope
add
mov
xor
mov
mov
gs
in
testl
dec
fildl
int3
cld
sbbl
nop
shlb
stos
fldt
dec
push
mov
fadd
adc
add
xchg
dec
aad
test
out
cmp
ds
sbbb
push
incl
push
inc
jge
inc
test
jg
cmpsl
xchg
cmp
adc
pusha
adc
or
fstps
xchg
jmp
mov
jge
sbb
fucom
jmp
sbb
ljmp
mov
outsb
cmc
mov
cmp
mov
movsb
mov
fsubrs
mov
mov
daa
stos
arpl
fisubl
and
mov
cs
out
push
mov
push
push
sahf
out
and
push
test
mov
push
adc
jae
pop
pop
gs
add
popf
push
out
or
call
lcall
xchg
push
cmp
sbb
sub
adc
mov
js
push
push
or
push
aam
xchg
or
mov
push
nop
lods
hlt
jo
test
daa
pop
pop
pushl
sub
inc
fdivrs
jbe
pop
mov
in
sub
sub
push
js
add
insb
sti
int3
cmp
inc
loope
cmpsb
icebp
call
cmpsl
mov
ret
or
lods
push
int3
jns
add
addl
dec
shl
push
inc
or
insb
jp
xor
fcoml
addb
sub
iret
add
movb
xor
push
cmp
in
cmpsb
ds
out
outsl
ficoms
pop
push
add
aas
pop
mov
mov
int3
iret
sahf
stos
sub
stos
jle
or
jp
aaa
pop
adc
push
lret
stos
pushf
out
jl
pop
test
lods
loop
fstl
loopne
or
nop
call
push
xchg
add
hlt
mov
pop
arpl
imul
enter
ret
adc
imul
cmc
enter
push
cmp
inc
dec
test
outsl
xchg
mov
test
and
sbb
fnstenv
gs
lods
fnsave
shl
mov
inc
pop
lds
addr16
sub
inc
and
and
imul
sbb
xchg
aas
xchg
mov
imul
cmp
lods
xor
and
xchg
enter
pusha
scas
stos
pushf
jmp
shrl
lea
addr16
movsb
shl
aaa
pusha
lret
outsl
rorl
mov
add
cmp
push
adc
dec
je
xlat
inc
call
ret
fsubrs
or
in
stc
sub
mov
in
lods
cmp
int
mov
xor
movsb
adcb
pop
int
mov
dec
imul
mov
jbe
jg
xchg
aaa
das
rorl
sbb
mov
jbe
in
pop
pushf
jg
xchg
in
or
push
ss
jl
sub
decl
mov
pushf
repnz
jge
dec
dec
aad
mov
cmovl
jecxz
mov
repnz
sbb
ret
push
inc
xorb
xchg
mov
mov
lretw
ficomps
dec
ljmp
pop
inc
mov
sarb
jp
cmpsl
in
mov
xchg
xchg
cltd
ss
dec
call
push
notl
enter
in
loop
mov
inc
stos
fwait
mov
stc
xlat
call
xchg
pop
in
movb
js
in
jns
push
sub
mov
xchg
pop
ja
and
fadds
push
xor
adc
in
sbbb
pusha
push
es
jl
sahf
sbb
pusha
lea
adc
inc
mov
rorl
call
loop
lock
shrl
addb
jns
xor
sub
xor
cmp
lds
mov
aas
adcb
fcmove
and
test
pop
ljmp
add
jmp
push
scas
dec
mov
adc
ja
inc
sub
mov
psubsb
pop
sub
jecxz
adcb
jmp
out
lods
adc
or
scas
pop
enter
repz
sarb
push
add
dec
xchg
push
add
lods
stos
in
push
and
cmp
inc
in
sbb
inc
fildll
nop
sub
pop
jb
dec
dec
mov
arpl
orb
push
negb
inc
daa
sbb
ficoms
ret
jo
adcb
fldenv
repz
xchg
outsb
lods
cltd
daa
mov
int
xchg
test
push
inc
loope
xchg
adc
jp
insl
stos
fyl2x
push
sarl
data16
into
mov
cltd
push
ljmp
adc
jns
movsl
pop
dec
xor
pop
in
clc
push
sbb
adc
cmp
pop
cmpsb
andb
dec
mov
fucomip
push
fdivl
test
cltd
inc
mov
ret
push
cmp
imul
int3
lds
adc
scas
mov
sub
inc
or
pop
cmpl
clc
fisubrs
data16
mov
out
outsb
dec
xor
xchg
rcll
push
imul
ljmp
lds
imul
sub
addr16
adc
mov
cmp
aad
xchg
lock
mov
sub
xchg
or
lret
aam
andl
in
neg
lea
xor
mov
leave
sub
dec
pushf
inc
xchg
jge
mov
ret
and
into
stos
in
fldenv
xor
out
mov
das
fnstsw
xchg
stos
dec
sbb
cwtl
cld
dec
jbe
leave
push
jmp
aad
test
dec
fwait
push
out
loop
xchg
pop
sarl
and
fadds
stc
aam
inc
mov
and
push
dec
lret
inc
std
jnp
and
xchg
adc
push
leave
sti
pop
lds
dec
int3
call
xchg
sub
loope
movsl
push
mov
dec
in
jbe
fisubs
inc
and
mov
pop
out
lods
loop
sbb
stos
dec
add
dec
cs
add
mov
ret
add
in
ja
sub
aaa
jle
fstpt
mov
scas
cli
add
jle
push
mov
push
shll
out
call
xchg
jl
rcrl
std
cmp
sarb
int3
sub
std
xchg
jae
pop
and
and
inc
jg
mov
loop
pop
repz
lret
and
dec
dec
and
sub
pop
push
in
scas
fstl
and
jecxz,pn
pop
push
and
in
xor
test
pop
xchg
cwtl
dec
dec
in
ret
or
jae
dec
xchg
hlt
repz
adc
loopnew
les
insb
lock
and
movsl
mov
pop
add
mov
repnz
jno
or
popa
int3
cmc
or
inc
outsb
xchg
repnz
mov
xchg
add
mov
rorl
and
cli
xchg
in
dec
xor
xchg
xchg
pop
mov
aad
mov
sub
xchg
xlat
pop
dec
sub
mov
push
pop
fldenv
movsl
imul
inc
mov
adc
stos
mov
push
cltd
or
mov
mov
and
iret
inc
jmp
gs
cs
sub
cmp
cmp
out
inc
repz
adc
scas
or
insl
sbb
cwtl
lock
cmpsb
cmpb
shrl
lock
push
dec
insb
and
pusha
loopne
test
xor
test
jge
clc
loope
mov
mov
insb
sub
mov
sbb
movsb
mov
loop
xchg
mov
xor
or
mov
cs
pop
cmp
addr16
xchg
dec
cmp
cmp
lret
in
push
pop
outsb
ss
mov
inc
out
js
dec
push
testb
das
xor
imul
xor
pop
mov
rcrl
gs
cmp
ret
lods
mov
mov
pop
xchg
jle
sub
or
push
push
mov
mov
rcr
in
mov
inc
adc
pop
jbe
or
shlb
push
xor
cmc
dec
sub
fdivr
aad
outsl
sti
pop
xchg
pushf
mov
lods
mov
call
adc
outsb
dec
in
inc
adc
imul
sbb
mov
mov
mov
dec
adc
push
pop
push
push
mov
ds
mov
jae
xchg
cmp
aaa
xchg
cwtl
jno
imul
leave
out
and
cmp
xor
push
aam
addr16
mov
sahf
xchg
mov
push
cs
clc
xchg
movsb
sbb
cmp
sbb
push
inc
sbb
pop
or
pop
jae
mov
int3
sub
sub
xabort
mov
dec
lcall
inc
loopne
jp
and
xor
pop
rorl
stc
xchg
sbb
or
pop
ret
insb
xchg
fiaddl
pop
hlt
xor
lds
mov
jns
mov
push
dec
adc
adc
cmp
testl
fwait
xchg
cmp
sub
pop
aas
ret
inc
in
mov
adc
jb
mov
bound
test
hlt
lret
aas
sbb
xchg
dec
loop
cmp
lock
stc
es
xchg
xchg
sub
adc
ljmp
aaa
addr16
adc
push
xchg
jb
inc
sbb
add
mov
dec
icebp
or
dec
push
xor
jnp
roll
test
js
mov
iret
shll
xor
addl
mov
movsl
dec
ret
ljmp
cli
pop
jecxz
inc
jb
ja
orb
sahf
iret
xchg
add
stc
adc
sub
or
and
inc
push
test
push
pop
sbb
cmpsb
in
outsl
and
lahf
pop
jmp
iret
popa
mov
imul
lahf
cmp
das
arpl
dec
or
fcoms
pop
cmc
imulb
pop
sysexit
jno
and
jne
inc
out
outsb
fbld
into
mov
push
int
cltd
cmp
icebp
cmp
or
sbb
dec
lods
pop
xchg
push
cmc
das
gs
jg
inc
mov
push
push
adc
lret
rorb
rcrl
push
nop
scas
mov
adc
aaa
push
arpl
dec
sti
dec
jle
lcall
ret
fmul
mov
add
cmp
inc
xor
mov
fwait
cmp
mov
push
cmp
cmp
adc
test
pop
fs
pop
push
dec
xchg
repnz
out
pop
fnstcw
xchg
jg
ret
cltd
lods
js
mov
imul
mov
mov
addb
ret
push
lds
aas
xor
jne
pushw
push
aas
mov
out
rol
add
jmp
xor
sbb
mov
cmp
iret
inc
mov
jmp
cli
or
cli
mov
cmpsb
in
or
mov
outsl
mov
cmp
add
mov
cmp
leave
xchg
sbb
pop
sahf
cmp
sub
repnz
out
pop
push
and
cmc
xchg
pop
loope
insl
mov
testb
xchg
inc
inc
cmp
xchg
fstpl
cltd
pushf
scas
call
sbb
sub
xor
lds
loope
mov
shll
push
push
ljmp
outsl
int
or
lcall
insl
mov
cmpsb
adc
adc
sub
xchg
sbb
xchg
push
cmp
jge
sar
dec
les
cltd
ret
imul
pop
mov
mov
sub
and
sbb
daa
add
jmp
inc
ljmp
inc
fsubrl
jecxz
enter
loope
jae
jle
inc
push
jbe
shll
test
xor
push
mov
mov
xlat
xchg
lods
and
in
push
sbb
jmp
jae
mov
sub
jle
xorl
cmp
cld
cmc
lcall
dec
jnp
push
mov
mov
shrl
scas
inc
cltd
popf
and
adc
mov
mov
sahf
or
flds
inc
or
fidivs
add
lcall
jo
jle
sbb
test
xor
jo
jp
arpl
dec
mov
and
dec
dec
ret
vpunpckhwd
jae
iret
inc
ds
add
xchg
into
loop
popf
test
mov
mov
pop
sub
mov
jns
cmp
popa
jg
sub
xor
sbb
loope
xor
adc
hlt
data16
enter
sti
lret
dec
add
jl
data16
cmp
push
in
push
jecxz
xchg
outsl
imul
out
mov
test
pop
pop
xor
pop
and
pop
cmp
outsl
call
aam
iret
mov
icebp
out
rcll
or
jae
test
sbb
jne
sub
push
lret
dec
les
in
or
mov
and
sub
popl
mov
mov
lahf
int
mov
js
mull
pop
and
cmp
insb
sbb
add
psraw
outsl
jg
fcmovnb
lods
add
push
inc
in
and
adc
jbe
testl
loop
lret
scas
std
outsl
lahf
aam
push
aas
into
jo,pn
push
adcb
lret
cmp
sarl
pop
and
or
in
cmp
xorl
or
xlat
fst
in
lea
dec
lea
and
cld
sub
xlat
mov
pop
pusha
movsl
mov
fisttps
sub
sub
cwtl
add
mov
cld
mov
jle
les
adc
and
cmpl
mov
mov
adc
loope
jge
mov
stos
cmp
inc
daa
sub
loop
loop
push
imul
clc
and
xlat
daa
loop
pop
sub
loopne
pusha
popa
jns
and
xchg
cmp
adcb
inc
mov
aad
daa
ss
xlat
popf
and
data16
jbe
sbb
mov
call
movl
sbbl
mov
add
jg
je
lds
cwtl
shl
pop
call
mov
dec
test
out
xor
push
jp
mov
adc
rolb
cmpsl
cmpsl
and
xchg
out
test
stos
sub
test
scas
mov
loope
adcl
sahf
cmp
popa
cmp
xchg
out
sub
cltd
clc
setg
adcl
outsl
jl
imul
xchg
ss
in
mov
cmp
fistl
fdivl
lods
rcrl
jb
loope
push
pop
xchg
xor
int3
or
filds
mov
xor
pop
inc
mov
or
sbb
out
loop
cmp
mov
fisttpl
mov
mov
lret
aas
subb
mov
gs
mov
mov
aas
lahf
inc
pushf
stos
mov
push
popf
xchg
and
or
push
ret
xchg
fistps
lods
xchg
xchg
repz
mov
or
test
loop
dec
xchg
cmp
orl
pop
scas
dec
mov
mov
pop
or
push
cmp
scas
dec
xchg
iret
inc
xchg
jbe
or
stc
sub
nop
clc
dec
je
icebp
xchg
adcl
jmp
dec
mov
sbb
xor
mov
pop
jb
adc
pop
out
sub
adc
stos
push
ficoml
in
sub
leave
mov
mov
push
xchg
std
addb
clc
popf
mov
dec
data16
inc
sbb
mov
mov
arpl
mov
fstp
sbb
mov
mov
xchg
or
enter
lock
mov
mov
hlt
cmp
inc
mov
jo
fisubrl
arpl
cmc
adc
out
fwait
xor
cmc
bound
pop
mov
mov
pushf
add
in
mov
mov
or
sbb
jns
in
xchg
cld
and
or
ds
cmp
dec
mov
fcmovnu
dec
mov
push
cwtl
push
adc
jbe
pushf
lock
push
xchg
inc
fstpt
mov
stc
repz
cmp
cmp
xor
xor
vandnps
pop
xchg
push
in
enter
jno
inc
outsb
out
das
scas
jle
mov
out
xchg
adc
mov
loop
or
mov
sub
adc
cmp
mov
adc
jb
arpl
in
fwait
jno
inc
adc
jle
pop
sub
ljmp
rcr
iret
clc
into
daa
sbb
vpshlw
imul
mov
mov
jl
and
push
int
lock
loopne
popf
insb
test
jbe
xchg
sub
imul
mov
in
xor
pop
dec
xor
ljmp
cltd
push
int
push
and
jns
pop
pop
add
in
mov
mov
adc
aad
push
sbb
push
cs
gs
aas
mov
popl
fwait
inc
in
test
and
fwait
cmpsl
sbb
mov
xchg
repz
xor
icebp
jno
out
pop
rorb
jno
mov
aaa
in
push
fwait
mov
xlat
cmp
xchg
inc
cwtl
xchg
pop
test
push
repnz
mov
js
mov
cwtl
and
jne
ja
fcomps
int
lahf
dec
repnz
sub
stos
dec
daa
imul
push
xor
shrl
arpl
jne
push
in
das
js
cltd
sarb
ficoms
aaa
cmp
icebp
lea
fisttpll
jmp
out
addr16
fists
dec
cmp
mov
pop
sbb
rcr
in
insb
jne
xlat
push
and
dec
push
sub
outsb
movsb
or
pop
or
fsubrl
scas
jns
int3
push
icebp
jns
leave
out
jecxz
insl
or
into
daa
xor
dec
sbb
xor
pop
push
sub
xor
dec
and
fbld
lcall
pop
mov
dec
jmp
dec
sbb
push
clc
faddp
cmpsb
cmp
or
pop
inc
dec
rolb
inc
fistpll
pusha
mov
test
bnd
mov
add
sbb
shl
mov
add
sbb
xorb
fwait
icebp
sub
adc
lds
cltd
ss
inc
clc
sbb
pop
fldcw
fldenv
add
stc
std
dec
mov
scas
sbb
lock
fs
push
pxor
repnz
addb
cmpsb
lods
and
orl
pop
and
push
sub
xor
je
lret
in
mov
cmp
ds
xor
pop
push
inc
aas
ds
pop
pop
dec
dec
inc
sub
leave
push
mov
dec
lods
imull
pop
jmp
fisttpl
scas
xchg
pop
mov
fwait
mov
icebp
ret
loopne
pop
mov
pop
loop
xchg
mov
sbb
test
xchg
cs
or
jno
sbb
ffreep
ret
cwtl
mov
sarb
dec
lea
mov
fistl
fsts
ja
gs
xchg
loop
dec
mov
mov
test
lock
hlt
ljmp
xor
mov
out
mov
inc
cmp
or
or
dec
cwtl
ret
add
imul
dec
aas
mov
xor
adc
xchg
sub
pushf
es
int
data16
into
testb
and
mov
add
stc
jp
push
dec
les
lds
mov
lea
les
popl
jno
and
inc
xor
popf
imul
ss
fsubl
xchg
mov
or
movsl
sbb
cld
lods
insb
faddl
pop
adc
inc
mov
adc
dec
ror
in
lods
cmp
subl
push
aas
xchg
hlt
sub
push
rcrb
push
xchg
movsl
insl
sub
in
xchg
je
sub
nop
xchg
dec
es
pusha
mov
push
imul
cmp
gs
shl
insl
aaa
lock
sti
mov
fcom
call
xor
sbb
jmp
jmp
leave
add
mov
es
test
jecxz
mov
fidivl
fildll
mov
call
subl
xor
xor
clc
xor
jns
popf
subb
sub
push
sbb
in
pop
aaa
mov
jle
xchg
sub
xchg
xor
cmp
ffreep
fidivrl
int
sbb
mov
fldcw
add
dec
mov
stos
lds
sarb
push
lcall
jnp
cmpsl
aaa
xor
adc
add
xor
or
push
popa
dec
xlat
sub
loope
cmpsl
and
fmuls
add
jle
jp
sbb
test
jle
jle
ja
cli
bound
sbb
insl
pop
cmp
inc
mov
mov
in
push
sub
lds
mov
popf
fwait
dec
xchg
or
mov
cmpsb
xchg
filds
mov
rcl
xchg
add
xor
cmp
or
cld
mov
xchg
xchg
out
and
mov
and
xor
imul
xor
fwait
mov
xchg
jne
sub
pop
dec
cmpsl
or
andl
xchg
mov
or
mov
push
ljmp
jl
loop
mov
lds
into
pop
les
and
out
and
imul
push
lret
add
les
int
icebp
cmp
inc
das
push
pop
into
mov
test
out
sbbb
push
cmpb
sbb
push
enter
rolb
in
sbb
cmp
shlb
rcrb
jnp
mov
push
hlt
and
dec
or
dec
or
imul
test
and
and
mov
mov
mov
pop
mov
cwtl
sub
sbb
cmpsl
mov
mov
push
loop
sahf
push
pop
and
add
data16
mov
dec
aad
addb
incl
leave
mov
pop
fwait
scas
dec
out
insl
cmc
call
xchg
out
cmp
or
lcall
pop
outsl
xor
mov
lock
jge
lock
cmp
cwtl
je
stos
jmp
xchg
cmp
pop
jge
mov
jmp
fadds
push
mov
fisubs
pop
cmpsl
dec
inc
sbb
mov
mov
mov
int
pushf
mov
mov
adc
lea
mov
ret
mov
mov
xchg
out
imul
jo
lods
fildll
cmp
ret
pop
dec
xchg
jne
or
ss
ljmp
sti
pop
xchg
mov
sub
mov
movl
hlt
xor
jmp
sbb
ja
loope
sbb
bound
cwtl
pop
dec
sub
xchg
daa
inc
frstor
in
inc
aam
cmp
mov
lcall
xor
fdivl
and
ljmp
das
xchg
mov
jmp
pop
out
pop
jge
ljmp
sbb
lret
jg
jg
sub
cmp
and
mov
pop
pusha
popa
xor
out
push
push
outsb
je
aad
imul
and
leave
gs
lock
cmp
xchg
xchg
imul
mov
fwait
addr16
jge
lahf
pop
es
and
cs
jmp
cli
mov
add
imul
push
push
ret
in
out
and
sub
pop
stos
mov
in
in
std
outsl
pop
jns
lods
movsb
add
cld
daa
push
sub
insb
fisubrl
lods
xor
dec
sub
push
xchg
cmp
cmc
and
lret
cmc
popf
fmull
ss
cmp
xchg
pushf
insb
shll
push
cmpb
and
icebp
xchg
pop
adc
int
ljmp
popf
fsincos
xor
in
pop
or
aad
mov
outsb
add
and
std
xchg
mov
rcll
sbb
outsb
jecxz
mov
loopne
mov
stos
lcall
inc
sbb
fdivl
pop
push
stos
sbb
lea
repnz
gs
outsl
rcr
sti
and
jb
loopne
lret
add
lods
inc
xchg
push
out
pop
push
mov
popf
cmpl
jno
dec
cmpsb
dec
les
mov
mov
idiv
test
or
pop
stos
or
cmp
pop
cwtl
ja
lods
imul
jle
aas
fldt
jp
pop
iret
mov
cmp
adc
adc
sub
addr16
jge
pop
fstpt
pop
xchg
test
jns
and
dec
xlat
jb
lods
ja
xchg
enter
jg
add
mov
sahf
jae
mov
sbbb
jge
hlt
frstpm(287
xchg
bndldx
xchg
inc
and
rcll
pop
mov
xor
push
pop
addb
lds
mov
or
jbe
sbbl
mov
insl
dec
pop
nop
es
imul
adc
xor
stc
fwait
aam
sar
mov
bound
rclb
fbld
ljmp
loopne
jo
pushf
push
testl
idiv
adc
out
std
out
jl
inc
pop
pop
and
push
pop
cmp
decl
pop
mov
push
jge
fisubs
ljmp
xor
mov
shrl
ja
ljmp
ret
fmul
ljmp
jecxz
cmc
mov
pop
ss
int3
and
push
pop
fisttpll
fcomps
sarb
push
push
test
enter
loop
fs
mov
sub
cmpsb
mov
sub
mul
mov
pop
shr
pop
push
icebp
mov
mov
lahf
cmp
dec
lods
sti
insb
xchg
aas
cmpsl
sbb
dec
shll
and
cmpsl
fstps
lret
mov
cmp
xchg
inc
lods
sub
adc
ljmp
cmpsl
mov
pop
repnz
jbe
jns
and
cmc
sub
dec
je
push
aas
inc
xchg
sti
shl
outsb
jno
lods
daa
xchg
dec
mov
call
inc
ljmp
cmp
cmp
sbb
cmp
frstor
repz
add
int3
push
pop
xchg
rolb
push
sub
ljmp
and
add
mov
push
insb
inc
jg
ret
out
in
mov
adc
in
out
jbe
mov
cmpl
movsl
mov
cmpsb
movsb
sbb
test
fbld
xchg
insb
add
adc
loop
xchg
subl
mov
dec
push
je
sub
loope
pop
mov
push
inc
push
xchg
shrl
xchg
dec
push
xlat
je
pop
or
xorl
lea
xor
add
rorl
fs
cmovge
in
mov
and
or
inc
pop
cmp
test
stc
pushf
mov
and
add
sub
in
jne
push
xor
mov
cwtl
jae
nop
loopne
mov
xchg
jmp
xor
sbb
stos
sub
sbb
mov
test
movsb
jnp
cmpsl
scas
xor
fxch
aas
pop
and
jecxz
bound
aaa
adc
fnstenv
lds
mov
das
cmp
das
mov
sbb
xchg
int3
cli
add
sub
das
jo
les
shlb
xchg
mov
jns
mov
adc
xchg
jae
aam
out
int3
mov
xor
jmp
pusha
mov
lock
mov
adc
in
jno
pop
ret
xchg
call
fwait
jbe
popf
mov
int3
jbe
sti
shll
inc
dec
xchg
pop
push
xchg
sbb
inc
mov
cmpsl
pop
out
loop
cmpb
sub
push
push
or
or
jne
jne
movsl
mov
lds
mov
xchg
dec
cld
into
push
add
lds
repz
inc
ds
mov
cmp
fmuls
icebp
out
jmp
cmpsb
mov
jb
xor
adc
in
mov
add
sti
mov
nop
xor
rol
jns
cmp
cwtl
cltd
mov
loopne
lahf
es
add
repz
adcb
xor
rclb
jns
sub
fs
and
or
clc
mov
repnz
cmp
xor
push
je
cmpsl
push
xchg
inc
int
jno
inc
jbe
inc
je
xorb
test
xchg
xchg
faddl
add
inc
cwtl
pop
nop
aas
aaa
in
jge
pusha
sbb
call
test
push
xor
jp
cmp
loop
sub
ret
sahf
jno
fadd
fnstcw
into
xchg
orb
lret
jns
add
lcall
repnz
daa
push
repz
jmp
jo
sahf
dec
cmp
inc
lea
cltd
andl
xchg
fistpl
clc
int3
loopne
inc
in
lods
mov
lods
leave
mov
jp
cmp
sub
pop
mov
mov
sbb
fldenv
xchg
cmp
mov
xor
enter
insl
xchg
in
sub
xchg
xchg
mov
gs
sbb
rcr
insl
ficomps
mov
cmp
xchg
pop
mov
lock
imul
hlt
xor
xor
dec
fsubrs
call
pop
cwtl
xlat
cwtl
sub
adc
divb
int
fistps
nop
stos
nop
stos
sub
add
mov
jno
insb
int3
lret
push
push
jge
cli
mov
jae
testb
pop
adc
inc
loope
xchg
dec
idiv
jl
jne
lcall
in
push
unpcklps
js
pusha
stc
mov
add
and
das
andl
push
mov
cmp
cmp
fldt
es
popa
push
mov
cld
js
push
imul
mov
fistpl
pop
imul
filds
cmp
jne
and
roll
or
pop
mov
pushf
aaa
popa
cmc
idivb
mov
fwait
popf
inc
push
push
push
push
adc
psrad
je
mov
fisttpl
dec
cmpsl
sbb
ss
mov
xchg
ds
cld
into
sbb
or
and
fdiv
js
dec
inc
imul
jecxz
fimuls
stos
lea
xchg
lods
inc
leave
sahf
daa
in
push
nop
shll
push
test
or
shrb
push
push
ss
mov
aas
push
pop
out
add
and
or
mov
push
shlb
adc
insl
cltd
imul
movb
fwait
shlb
push
push
in
jnp
daa
jp
int
sti
test
and
movsb
shrb
fisubrl
pop
aad
les
test
add
xor
shl
sub
loope
jle
push
push
sarl
inc
lahf
push
pop
push
xor
roll
fistps
js
pop
mov
stc
lods
adcb
dec
aas
lahf
mov
hlt
cmpsb
or
mov
popa
imul
sub
lea
and
rclb
lods
stos
xchg
repnz
popa
cmp
es
pop
jp
test
mov
mov
sub
dec
pop
movsb
dec
mov
lret
jb
arpl
cmp
into
jnp
or
nop
rolb
jbe
fiaddl
fdivrl
fistps
cmp
pushf
popa
xchg
ret
test
mov
xor
jbe
shrb
shrb
mov
adc
fstpt
push
xor
outsb
gs
jno
push
mov
xchg
xchg
fldenv
and
push
scas
les
or
sbb
lods
sahf
xchg
push
rcll
test
push
lods
lret
and
loopne
mov
cld
push
mov
mov
in
xlat
and
imul
lds
mov
cmc
movsb
bound
dec
mov
dec
push
inc
insb
loop
sti
push
xor
fsubr
test
ja
aaa
andl
sarl
leave
rclb
cltd
dec
pop
and
fmul
fstps
xchg
push
xchg
xchg
lcall
pop
stos
addr16
imul
idivl
mov
ja
cwtl
push
pop
adc
outsb
es
xchg
lea
inc
sub
lahf
cmp
xchg
adc
mov
xchg
lods
ja
pop
shll
mov
movsb
add
push
insl
pop
xchg
int
and
inc
mov
pop
aas
jmp
idiv
xor
mov
lods
push
push
int
and
inc
mov
dec
or
mov
in
jns
fnstsw
iret
mov
add
enter
dec
jmp
shrb
fbld
insl
xchg
call
imul
test
add
popa
out
hlt
shrb
out
dec
inc
inc
scas
mov
shrl
dec
sbb
or
xor
mov
inc
dec
repnz
mov
aad
jae
adc
aas
clc
sbb
mov
mov
int3
xchg
jno
loop
inc
cmp
mov
iret
xor
ja
sub
sbb
fxtract
js
pop
dec
popf
ss
stc
jbe
cmp
aaa
lcall
fldenv
lea
aad
pushf
or
xchg
fbstp
std
enter
fcomi
scas
inc
leave
insl
int
mov
push
mov
push
mov
mov
sbb
sbb
lods
jge
pop
inc
std
pop
xchg
pop
or
fs
sbb
jg
nop
in
clc
hlt
push
adc
mov
sarl
jle
stos
xchg
int3
pop
mov
cmp
nop
mov
rcrl
gs
fisttpll
movsl
pop
faddl
test
loop
lods
sub
jl
pushf
sti
mov
and
dec
inc
push
and
mov
mov
sub
push
sbb
mov
xor
mov
mov
repnz
jnp
xor
and
pop
jno
inc
shll
dec
cmpl
dec
push
aam
adc
push
aaa
mov
jne
or
out
leave
mov
sbb
push
fimuls
mov
mov
jno
lock
lea
xchg
and
mov
pop
xchg
and
gs
xchg
mov
dec
rolb
mov
cwtl
xchg
add
xchg
cld
and
pusha
mov
in
iret
sbb
test
idivb
inc
xchg
xor
out
cmp
mov
aas
ret
and
cli
xchg
je
mov
add
sub
enter
push
or
bound
adc
mov
add
mov
mov
mov
dec
flds
and
mov
rorb
gs
shll
add
fisttpl
inc
inc
out
in
nop
pop
mov
mov
aaa
add
cwtl
add
mov
pop
sub
push
sbb
sti
mov
std
ds
fisttpl
mov
add
xor
adc
mov
loop
aam
inc
sub
sbb
dec
dec
inc
sub
fdivl
mov
xchg
mov
xchg
adc
je
ret
push
ss
cmp
cmp
jp
cmpsl
dec
push
pop
rep
arpl
pop
jg
das
mov
inc
stos
dec
into
loope
and
pop
jge
loop
xor
negb
sbb
rep
mov
push
test
out
pop
repnz
dec
cmc
pandn
dec
or
clc
push
into
dec
cltd
aas
pop
ret
push
sahf
ret
aaa
mov
scas
push
push
inc
iret
mov
jle
push
push
cmp
jl
leave
rol
mov
xor
cmpsb
pop
xor
push
jnp
pop
mov
jp
sbb
insl
lret
int
in
mov
or
arpl
pop
loope
inc
adc
jno
setl
mov
push
inc
ljmp
pusha
mov
ror
jecxz
dec
pop
mov
in
push
int3
test
jne
outsb
outsl
lret
jle
fwait
push
lea
leave
repz
mov
pop
mov
mov
cmp
mov
jae
ret
inc
stos
cltd
add
stos
in
lock
ret
stc
movsb
jge
jle
pop
xchg
pop
es
mov
loopne
jno
jnp
ss
in
xchg
leave
das
and
stos
cli
jmp
jno
lods
fwait
shrl
jle
lahf
sahf
push
out
cmp
xor
out
shrb
movsl
lock
test
mov
mov
xchg
adc
imul
lcall
int3
sub
mov
fcmove
sub
outsb
mov
pop
mov
cmp
fidivrs
push
xchg
std
int3
xchg
xchg
in
pop
adc
jnp
jl
mov
dec
test
into
jb
mov
jae
movsb
out
mov
xchg
rcrb
jno
add
mov
dec
repz
push
lret
add
sbb
adc
push
mov
cwtl
and
push
xor
cmp
pop
pusha
lods
das
adc
call
jp
lods
lret
insb
inc
and
shrl
movsb
movsb
stc
adc
mov
sahf
mov
out
jbe
dec
movsb
fwait
mov
cmpsb
jl
push
pop
push
xor
mov
sub
mov
cli
fs
sbb
jb
outsb
sahf
in
sbb
mov
je
jp
mov
push
xchg
mov
ljmp
mov
int
push
pop
add
dec
dec
cmpsb
aam
pop
into
lret
cmova
jle
and
fdiv
xchg
int3
int3
aad
push
mov
fistps
orl
outsl
movsb
adcl
pop
mov
xchg
push
push
jge
pop
pop
pop
addr16
dec
sub
or
enter
dec
ret
lcall
push
adc
sub
out
xchg
sub
pop
movsl
sub
rcll
push
cmpsl
xor
cmpsl
mov
and
push
daa
mov
jns
daa
fdivs
mov
mov
aad
add
sub
fxch
iret
jmp
xchg
les
cltd
lds
hlt
pop
outsb
pushf
push
je
jns
aas
sbb
adc
fdivrl
dec
inc
clc
jmp
push
add
add
stos
lea
inc
dec
int3
jl
rorb
push
fcmovu
xchg
outsl
cmp
roll
adc
rcl
imul
fwait
dec
mov
aad
in
jbe
ja
imul
cmp
xor
inc
mov
pop
lahf
jns
roll
dec
out
mov
cltd
mov
ss
arpl
jle
imul
pop
sub
outsb
mov
push
xchg
push
lcall
mov
inc
xor
in
loope
or
aam
test
and
aaa
sbb
xor
data16
test
in
jo
pop
jbe
push
or
in
mov
pop
ret
xchg
sbb
add
iret
sarb
adc
inc
arpl
cmp
mov
mov
and
lret
sbb
shll
pop
jle
mov
lahf
mov
push
js
or
and
adc
mov
jle
jle
mov
adc
outsl
mov
repz
in
cmpsl
roll
jl
mov
ja
xchg
dec
sbb
pop
pushf
test
xchg
sbb
mull
ss
rolb
stos
test
int3
ds
loop
and
pusha
bound
mov
insb
pop
mov
pop
outsb
jae
pop
sub
push
mov
pop
bound
popl
enter
inc
adc
push
mov
add
movsl
add
aaa
sahf
lods
nop
pop
stos
dec
fs
mov
scas
testl
mov
mov
dec
dec
cmp
push
jmp
jl
pop
leave
mov
mov
add
or
jno
pop
inc
pop
outsl
mov
xchg
sahf
div
push
mov
aas
loop
or
adc
mov
jbe
insb
mov
lods
call
adc
std
nop
cli
add
push
inc
mov
popf
out
pop
pushf
jle
cmp
lods
mov
add
add
sub
sub
dec
dec
sbb
pop
sub
fldcw
rcrb
dec
pslld
sub
mov
xchg
sub
and
dec
ds
sub
mov
xchg
mov
cld
dec
jmp
cmp
mull
inc
pop
ljmp
push
sub
popf
adc
mov
add
in
dec
mov
xchg
in
xchg
mov
add
ret
call
fisubs
test
mov
jne
sub
loop
test
dec
loop
jno
push
adc
lds
test
xchg
pop
jge
inc
cmp
fxch
repz
scas
stc
pusha
cld
mov
ss
jge
es
jmp
adc
leave
popl
push
push
enter
loop
addr16
mov
popa
pushf
lahf
call
jnp
ja
mov
imul
xchg
cmp
push
mov
repnz
inc
jg
mov
pop
lret
lret
push
in
scas
push
bound
int3
loop
lea
enter
or
sbbb
incb
out
stc
ljmp
push
adc
push
ja
sub
lret
sbb
fisubrs
add
iret
mov
dec
out
mov
lahf
cmpsl
cmp
test
push
mov
ss
adc
sbb
test
mov
add
icebp
stos
inc
push
lcall
dec
xchg
push
repnz
sub
clc
sbb
or
inc
lahf
dec
shll
pop
dec
or
xlat
cmpb
stc
fiaddl
mov
fmull
xchg
mov
dec
dec
loop
dec
mov
sub
mov
data16
xchg
mov
mov
andb
sub
test
sbb
mov
lea
dec
ficompl
shll
or
icebp
cmp
dec
and
cmp
xchg
rorb
call
pop
arpl
or
sbb
mov
xchg
pop
pop
inc
xchg
or
and
cwtl
shll
xchg
mov
pop
mov
push
popf
gs
jl
fcompl
xor
xchg
jecxz
pop
stos
mov
push
out
mov
data16
xchg
dec
sub
insl
mov
inc
pushf
cmp
xchg
inc
rolb
mov
sbb
fldcw
sbb
stos
subb
mov
cmp
iret
lods
dec
shl
pop
or
sbb
insb
push
pop
mov
sbb
into
pop
xor
cmc
call
mov
cmp
mov
mov
sbb
mov
icebp
jg
nop
in
sbb
icebp
mov
aad
pusha
loope
lods
sbb
movb
mov
mov
mov
lea
xchg
adc
cmp
shrb
mov
mov
in
xor
loopne
xchg
jecxz
pushf
cmp
addb
stos
inc
addr16
push
or
pop
inc
mov
loope
push
lods
or
ret
mov
push
add
into
jg
imull
ss
pop
pop
pop
ret
int3
out
dec
cmpsl
negl
xor
mov
sub
dec
je
fstps
add
enter
push
out
cwtl
cmp
push
or
arpl
jl
clc
pop
ret
orl
mov
cmp
imul
jne
pop
cmp
sbb
fidivrl
imul
repnz
popa
fimull
mov
sti
popf
xor
push
jl
nop
clc
outsb
or
mov
jmp
test
bound
ret
subb
cmp
repz
mov
push
aam
xor
mov
data16
out
mov
push
adcl
mov
cmc
push
insb
data16
dec
mov
shrl
fnstsw
sub
scas
insb
dec
or
or
aad
outsb
and
call
pop
lret
int3
sub
cmp
pop
xor
into
push
pop
add
nop
sub
fst
sub
push
jbe
cltd
inc
mov
xor
int3
rol
testl
xchg
cwtl
iret
lret
inc
inc
adc
dec
in
out
rolb
mov
outsb
mov
fdivl
jne
stos
jmp
stos
jno
orl
push
inc
gs
insb
jmp
pop
jno
pop
cmp
out
dec
add
jno
mov
dec
ficoms
jmp
pusha
stos
addr16
xchg
fidivrl
sub
xor
sub
mov
jns
repnz
xchg
mov
xchg
xchg
push
shrl
dec
mulb
xor
dec
and
push
mov
test
arpl
movsb
cmpsb
out
test
mov
mov
sbb
or
and
into
push
cmp
subl
jl
es
dec
lods
test
gs
xchg
mov
adc
push
mov
pop
xchg
and
test
lret
pop
loopne
mov
and
and
xor
mov
sbb
lods
mov
dec
arpl
or
fcmovnu
adc
outsl
mov
push
out
jl
incl
lea
mov
jno
test
aam
dec
mov
cmpsb
inc
push
inc
add
mov
mov
or
add
add
shrl
xchg
pop
rcrb
cld
hlt
mov
in
roll
xor
push
push
lret
leave
inc
mov
stos
xor
mov
shrb
dec
sbb
jg
loope
pop
add
or
push
pop
jmp
ret
push
xchg
in
mov
cmp
push
leave
jmp
sbb
cs
es
and
cmpl
in
dec
inc
outsb
jns
cmp
jg
test
or
push
mov
sbb
add
lahf
dec
inc
test
rol
xor
push
xchg
outsb
imul
dec
cs
lret
js
mov
test
push
add
cmpsl
pusha
sub
dec
in
lds
cmp
scas
and
repz
lcall
and
inc
sub
pop
out
dec
das
push
std
icebp
jle
test
pop
pop
mov
sub
outsb
sbb
jecxz
pop
outsb
dec
mov
push
in
hlt
fisubl
loope
mov
mov
mov
into
xor
cli
cmp
enter
lds
sbb
adc
add
dec
divb
test
int
xchg
pop
jnp
add
sarb
loopne
inc
test
xlat
in
lret
pop
ror
xchg
and
cmc
jmp
bound
insl
sbb
mov
sub
mov
jp
dec
std
pop
mov
iretw
inc
std
mov
push
xlat
dec
mov
jle
lahf
cmp
dec
out
jb
js
mov
pop
ficoms
jmp
scas
in
pop
test
and
adc
xchg
jne
xor
adc
andl
pop
out
movsl
add
cmp
sub
xchg
pop
rcrb
ret
sub
or
sbb
hlt
fcoml
jecxz
dec
push
scas
xor
jg
outsb
xor
and
adc
test
mov
aas
clc
xor
xchg
cmpb
cld
xor
cmc
inc
dec
fs
data16
std
and
adc
fs
fisubl
scas
jno
sub
dec
cmpsb
je
lcall
cmp
jmp
sub
lds
mov
sbb
std
dec
mov
out
mov
push
fwait
test
inc
jg
push
stos
push
addl
repz
lret
mov
jo
inc
jb
in
xchg
outsb
mov
jmp
sub
dec
cmp
sahf
xor
cmp
add
lahf
mov
lods
sbb
cmpsl
sbb
incl
or
push
xlat
andl
inc
dec
dec
cmp
test
and
imul
mov
sbb
clc
pushf
mov
fcomp
loopne
sub
arpl
mov
scas
rep
insl
sbb
pop
pop
dec
je
xchg
xor
data16
pop
mov
xchg
mov
cs
imul
sub
or
xchg
xor
mov
push
cmpb
sub
xor
lods
aad
xchg
stc
jo
fucomip
add
imul
fs
mov
mov
xchg
imul
mov
or
push
cmp
mov
or
mov
das
rcrb
movsl
mov
insl
ret
xchg
ficoml
call
dec
jp
loope
ficoml
rorb
sahf
xor
sbb
xchg
js
icebp
cld
loop
inc
mov
out
xchg
mov
xchg
dec
sub
jecxz
xor
mov
add
leave
xchg
pop
mov
or
lret
scas
stos
sbb
cmpsl
int
cs
aam
dec
je
mov
es
fxch
cmp
push
negl
mov
push
sbb
push
mov
frstor
dec
nop
popa
hlt
outsb
aaa
lds
inc
dec
push
add
mov
or
cld
inc
sar
adc
add
add
sbb
xor
jecxz
xchg
cmp
sbb
test
lods
lods
pushf
hlt
fimull
sub
dec
leave
std
out
dec
sub
cmpsb
or
xchg
and
aad
movsb
cmp
push
fisttpl
scas
int3
mov
or
cli
outsl
icebp
inc
add
ss
jae
mov
add
bound
test
aad
xchg
xchg
jae
xor
sbb
jecxz
lahf
test
lret
add
cltd
and
es
lret
cmp
mov
aad
fdivr
mov
cmp
push
fidivs
xor
dec
les
popf
repnz
int3
orl
inc
jae
sti
lret
mov
popa
adc
dec
mov
add
fstps
jle
dec
inc
das
shrb
sarb
adc
loop
mov
mov
cmp
adc
fldz
and
pop
or
gs
out
xlat
imul
xor
or
or
jae
and
outsb
push
mov
inc
add
jb
sbb
sub
adc
xchg
sarw
cmp
xchg
and
gs
into
stos
int3
arpl
mov
push
out
mov
push
sti
les
in
xor
inc
jmp
notb
cmp
stc
sti
aam
mov
jne
mov
sbb
in
imul
mov
mov
inc
out
mov
xor
cmp
mov
mov
push
shll
and
mov
pop
subb
mov
fbstp
mov
scas
mov
lar
or
icebp
xchg
je
in
cwtl
scas
rorl
and
out
mov
stc
repz
or
ret
sbb
movsl
xchg
mov
outsl
dec
addr16
fwait
add
inc
mov
and
hlt
cmp
ds
sub
jge
fbstp
das
mov
repz
add
je
xor
mov
pop
icebp
jbe
and
cmp
push
repz
jmp
iret
leave
push
inc
dec
dec
sub
sahf
hlt
push
loopne
sub
fnsave
dec
inc
insl
xor
or
sbbb
stos
dec
cld
dec
movsl
push
push
cs
sbb
or
mov
cmp
dec
xchg
lea
bound
cwtl
xchg
test
or
xchg
rcl
in
mov
jg
pop
pop
mov
dec
out
xlat
scas
lret
shl
dec
dec
push
dec
outsl
adc
es
pop
and
mov
adcb
jp
jb
popf
xor
mov
cmp
leave
movsb
cmp
iret
dec
and
fsubrs
js,pn
jbe
je
mov
xor
je
leave
xor
ds
pop
add
lds
mov
mov
fbld
rcrb
jnp
in
cmp
pop
pop
frstor
stc
out
mov
faddl
sub
in
mov
mov
sub
inc
sub
cmp
repnz
fnstenv
dec
movq
in
dec
and
dec
push
cmp
xchg
add
jle
cs
pop
sub
adc
dec
js
mov
mov
push
lds
xor
xchg
dec
sbb
add
sub
jno
sbb
ss
add
stos
fdivrl
pop
cs
xchg
fstps
pop
int
adc
jne
pop
ja
push
and
ljmp
sub
cmp
in
mov
push
xlat
repz
out
cmp
xor
lock
push
stc
dec
cmpsl
iret
insb
sub
jno
or
test
cld
and
rorb
sub
fwait
sbb
hlt
cmpsb
and
jo
xchg
dec
ret
lds
jno
mov
mov
mov
aaa
mov
and
mov
sub
int
xchg
sub
xchg
mov
push
lcall
fwait
push
aas
fmull
mov
dec
jo
mov
adc
jnp
jo
mov
push
sub
push
or
imul
mov
push
sbb
loopw
or
cmp
sbb
pop
call
mov
out
lods
inc
fwait
mov
adc
sub
fcomip
mov
lods
out
pop
and
fdivl
or
push
icebp
test
xor
loopne
jl
divb
jecxz
inc
dec
es
in
or
dec
push
out
xchg
test
mov
push
cwtl
sbb
loopne
pushf
insb
inc
push
inc
decb
repz
repz
push
repz
out
stos
cmpsb
roll
jno
or
add
sbb
je
jnp
jl
int3
test
daa
xchg
fstpl
push
test
cmp
sti
xchg
jmp
addl
mov
fists
add
nop
mov
loope
sub
sti
jg
test
out
lahf
lock
aas
pop
dec
mov
mov
hlt
aad
stc
xlat
nop
ret
xor
stos
fs
cmp
mov
pop
loope
xchg
jle
add
ret
das
adc
insb
mov
imul
rolb
out
test
arpl
popa
daa
cmpsb
push
mov
fucom
cmpsb
aas
push
cld
mov
orb
out
ss
pop
div
hlt
js
mul
push
in
add
arpl
push
insb
add
xchg
add
fmull
push
sbb
jmp
shl
jecxz
push
std
or
cltd
push
mov
test
cmp
out
adc
sbb
int3
fdivl
popf
int
mov
pop
cmp
and
mov
leave
push
cmp
mov
add
sbb
sbb
sti
mov
xchg
imul
mov
or
lret
out
aad
ja
out
xor
fdivrl
cmp
cmp
movsl
push
jl
pop
or
and
xorb
mov
dec
or
cmp
jmp
jmp
into
push
icebp
faddp
mov
punpckldq
jg
lret
push
ficomps
icebp
inc
dec
mov
mov
outsl
mov
dec
xor
mulb
mov
or
add
lret
cmp
mov
xchg
sarl
push
add
js
fisubrs
xlat
mov
inc
lods
add
roll
inc
push
mov
jbe
cmpsl
mov
dec
enter
pop
mov
xlat
cmp
pop
ss
mov
mov
xchg
das
and
movsb
sti
scas
test
ljmp
scas
out
and
jmp
pop
ss
fidivs
out
xor
push
sub
pop
adc
insb
iret
jnp
sub
rorl
std
imul
jg
ja
leave
push
scas
gs
xchg
fistps
push
dec
sub
fcmovb
pop
push
mov
and
xchg
call
sbbl
aaa
lcall
xor
pop
push
lods
sbb
dec
cmpsl
sahf
inc
cmp
in
push
push
cld
in
xchg
sub
daa
or
xchg
imul
inc
into
pop
xchg
jns
in
sub
cmpsb
ret
or
mov
cmp
fs
jle
push
or
jmp
mov
in
jecxz
outsl
jnp
test
out
mov
inc
cmpsb
mov
repz
inc
cld
jle
fcompl
cmovge
mov
xchg
push
scas
jmp
mov
mov
movb
mov
jmp
fiadds
lea
ljmp
pop
fmull
xchg
or
or
call
out
or
out
mov
movsb
mov
insb
dec
mov
ret
add
lret
shll
lods
add
inc
xlat
js
push
subl
pop
std
mov
mov
push
and
and
xchg
or
stc
test
stos
inc
push
mov
cld
push
or
fmuls
clc
jnp
sub
mov
rorl
out
outsl
lds
sbb
jb
pusha
std
bound
mov
loop
add
repz
in
mov
cld
subb
xor
dec
dec
adc
jno,pt
inc
outsb
mov
xor
jns
sahf
lea
shlb
pushf
mov
push
adc
add
out
push
sbb
cmpsl
inc
push
outsb
push
cmp
jg
aad
cli
lret
lahf
ss
enter
out
xchg
fdivrs
mov
icebp
add
negl
insl
cmp
mov
inc
cld
jmp
mov
jno
sbb
cwtl
loopne
lods
push
push
int3
and
inc
xchg
lods
cmpsb
push
repnz
and
subl
push
sbb
jns
inc
sti
icebp
inc
outsl
sbb
push
adc
jbe
idivl
cmpsb
lock
rclb
out
lahf
hlt
mov
lods
negb
push
sbb
push
mov
sub
int
out
pop
ljmp
or
dec
push
shll
jno
jecxz
cmc
cmpsl
and
leave
clc
data16
fcmovnbe
pop
outsl
nop
jl
sti
pop
add
shr
mov
push
push
shll
outsb
fstl
shlb
mov
nop
xchg
cs
scas
int3
leave
push
cmp
add
xchg
jo
adcl
mull
loop
stos
jae
push
movsl
xor
cmc
jno
xchg
push
pop
arpl
jo
mov
push
mov
or
mov
xchg
push
aaa
sub
cmp
mov
pop
cwtl
xlat
daa
cmp
jmp
aas
pop
push
mov
push
and
cmp
adc
jge
cli
and
push
jae
jbe
repz
pop
cmp
dec
sub
dec
out
in
out
cs
out
stos
inc
movsl
inc
sbb
sbb
aas
mov
xchg
fildll
jl
test
xor
jb
xlat
call
mov
sbb
jo
mov
int
and
psubsb
shl
or
push
push
inc
jmp
sub
popa
pop
mov
sbb
sub
movl
mov
jge
aaa
aas
fcomp
cltd
push
inc
ljmp
inc
loop
loop
push
sahf
fldt
aaa
jns
fildl
cmpsl
lods
in
and
xor
bound
push
push
cmp
ds
push
cmovg
jecxz
push
xchg
jle
cmp
adc
xchg
mov
lods
push
inc
push
sarb
push
adc
popa
filds
xor
xor
pop
push
xchg
sbb
add
or
mov
pop
repnz
outsl
xchg
cld
sub
cmp
lahf
mov
test
adc
hlt
and
push
pop
cwtl
jno
mov
push
jnp
mov
adc
ja
aaa
mov
dec
jb
fsubrl
cmp
jnp
mov
or
push
add
int
xor
popl
jae
out
dec
push
pop
adc
into
jno
dec
push
repz
stos
shl
cmpb
adc
addl
mov
test
mov
sub
lea
enter
fiaddl
add
movsl
sbb
push
jne
dec
jmp
cmpsb
movsl
dec
cmp
mov
pop
adc
int
jb
fiaddl
add
ret
pop
push
dec
fcoml
hlt
test
femms
aas
out
mov
mov
repnz
xor
cld
cmpsb
cmpsl
cmp
sub
xor
dec
ljmp
in
lods
or
jg
fidivrl
jecxz
aaa
mov
mov
movsb
stos
clc
in
sbbb
fildl
insb
clc
xchg
leave
aaa
icebp
push
fisttps
jo
mov
fisubrl
mov
xor
add
fidivs
jp
call
adc
lea
adc
or
iret
stc
sbb
hlt
or
cmp
mov
std
xchg
jae
rcrl
out
dec
xor
push
je
enter
bound
fisttps
clc
cwtl
sub
push
sarb
sbb
jb
sbb
xor
movsb
rcll
sub
lret
mov
inc
iret
aas
sub
lcall
jge
xor
xchg
push
fbstp
cmc
push
push
inc
out
in
gs
or
sub
out
push
orl
sub
ja
mov
inc
hlt
sub
shl
pop
push
rclb
ljmp
pop
shrl
hlt
and
xlat
call
cmpsb
sub
push
mov
cmpsl
popa
cmc
lcall
cmc
adc
dec
sub
icebp
mov
out
jae
es
cmp
sbb
push
je
inc
pop
fidivrl
jl
out
lret
fwait
xor
jbe
aaa
lcall
stos
icebp
add
dec
sbb
cmp
icebp
sub
push
pop
int
in
js
sti
iret
jno
in
pop
sti
mov
cmp
pop
sbb
cli
mov
in
call
out
push
std
xchg
iret
call
ja
lret
ret
orl
aam
mov
stc
cs
mov
idiv
scas
cwtl
lds
ret
stos
call
loope
out
gs
pushf
jnp
sar
or
jle
popf
ljmp
and
or
push
cld
pop
mov
inc
arpl
sub
outsb
xchg
shll
xorl
mov
in
jp
jae
aad
fstl
fmuls
pop
call
loope,pt
imul
ds
jp
fdivrl
and
subb
das
dec
jae
mov
xchg
inc
inc
sub
leave
sbb
popa
mov
das
xchg
adcl
xor
mov
jg
dec
jbe
gs
insl
popf
in
ret
jp
sbb
sbb
lcall
aas
or
dec
push
sahf
fwait
ss
inc
adc
cmp
lcall
mov
gs
test
add
xchg
and
inc
adc
ljmp
cmpsb
les
jno
pushf
test
daa
jno
xlat
jnp
xor
mov
fcomp
aad
mov
mov
mov
push
loopne
lods
bound
repnz
xchg
pushf
pop
test
cli
test
inc
adc
pop
cmpl
mov
xor
sahf
insl
mov
cmp
sti
iret
xor
imul
or
outsb
pop
inc
insl
mov
pop
fs
push
push
cmpsl
andb
loop
mov
xor
movsl
mov
shll
iret
inc
faddl
pop
ret
xchg
push
cld
lahf
hlt
cwtl
js
movb
int
sub
fwait
out
jmp
xchg
jns
rcrl
stos
aas
insl
mov
and
std
mov
push
fnstenv
jecxz
movsb
test
and
add
xor
inc
vpaddb
cwtl
call
cli
les
mov
pop
xchg
icebp
lods
ret
cmc
mov
xchg
jno
cmp
test
sbb
sub
sbb
push
sbb
popf
sbb
iret
mov
add
cmp
das
push
xchg
jmp
adc
jle
neg
jo
xchg
jne
leave
sbb
and
sub
fwait
icebp
enter
shrl
adc
push
xor
aaa
push
push
or
cmpsl
mov
into
es
lods
into
loop
dec
loopne
and
inc
xchg
xchg
popa
int
jne
rorb
rcr
shlb
jg
lods
add
add
add
popf
jge
cmc
mov
scas
xchg
dec
sarb
mov
dec
mov
cmp
hlt
mov
pop
push
cmpsl
add
daa
or
jl
imulb
pop
jae
shrb
pusha
lods
adc
pop
xor
push
mov
sub
push
add
sbb
jae
pusha
xchg
push
sarb
inc
in
dec
cwtl
and
add
fidivs
popl
lock
mov
pop
and
inc
inc
sub
mov
mov
or
mov
divl
cmpsb
repz
insl
call
ja
nop
cmp
mov
mov
cmp
mov
adc
xor
add
adc
jge
or
push
cmp
fdivs
mov
insl
roll
lock
add
in
xor
pop
xchg
push
mov
clc
xchg
mov
adc
add
sti
lds
mov
lahf
ss
pushf
dec
lods
hlt
sbb
hlt
cmp
aam
jb
rcll
in
and
cld
ds
mov
adc
xor
pshufw
inc
fists
outsl
into
sti
scas
leave
clc
mov
scas
dec
out
jne
adc
cmpsl
or
add
xchg
xchg
inc
jg
dec
insb
mov
adc
sub
mov
sbbl
out
leave
adc
mov
filds
mov
mov
out
mov
mov
dec
outsl
mov
add
cmp
xor
sahf
stos
cmp
fwait
hlt
lods
dec
aas
adc
xchg
mov
jge
sahf
jbe
or
cmc
jg
pop
sub
rorb
xchg
pop
pop
add
push
mov
mov
repz
push
cmp
jae
js
cli
or
repnz
dec
jmp
mov
add
in
xchg
clc
pop
pop
jo
add
aaa
les
test
inc
adc
lret
cltd
imul
ret
dec
lds
jmp
shlb
pop
mov
xchg
adc
lret
in
push
sti
dec
stc
xor
fisttps
addl
jecxz
mov
filds
push
cwtl
and
and
xlat
push
mov
pop
rorl
and
pop
jl
std
das
or
test
cmpb
inc
jne
insb
add
fildl
mov
cmp
xchg
repz
fbstp
sbb
adcl
ss
outsl
pop
repnz
aam
push
pop
xchg
mov
lcallw
sarb
mov
cld
pop
and
cltd
movsb
ss
in
xor
lds
mov
ja
inc
mov
push
push
frstor
push
lret
or
aad
sarb
bound
testl
mov
pop
movsb
xchg
xor
inc
add
daa
jg
sbb
xchg
test
ds
sbb
lret
xor
bsr
sti
popf
dec
icebp
jecxz
mov
xchg
sbb
mov
and
or
std
mov
and
add
insl
icebp
out
shlb
lods
xor
mov
loope
gs
mov
fisttps
sub
mov
push
dec
or
cmp
call
mov
dec
cmpsb
aaa
scas
or
fdivrs
cmp
dec
int
fs
mov
cmpsb
arpl
dec
into
pop
xor
cmp
dec
ffreep
adc
int
into
add
xor
and
push
sbb
add
cmp
cmpsl
adc
stos
or
mov
push
repz
push
sbbl
sbb
or
out
popa
call
test
call
push
sbb
sbb
js
sarl
icebp
xor
inc
push
outsb
lds
cmp
inc
aaa
in
rolb
insb
stos
popa
popa
xchg
xor
mov
jl
push
or
fs
cmp
lea
js
fidivs
fdivrs
aad
inc
pop
or
xlat
mov
jnp
xchg
mul
mov
js
enter
xchg
out
stos
jnp
jmp
in
push
jg
scas
push
xor
jecxz
mov
and
in
rorl
cwtl
dec
out
bound
jmp
push
jno
std
pop
xlat
cmp
loope
adc
mov
xlat
dec
add
mov
jl
fcoms
movsb
aam
movb
je
mov
pop
add
xor
mov
arpl
mov
xor
xchg
cwtl
mov
cwtl
pop
fsubr
cmpsb
neg
leave
insb
mov
ud2
xchg
lods
inc
cltd
movsb
jmp
adc
cmp
movsl
mov
and
or
in
in
out
mov
fs
pop
or
aad
rcrl
fdivs
insl
pusha
sbb
and
int
out
pop
les
xchg
dec
jb
je
test
jg
jbe
cltd
push
rol
insb
dec
dec
and
jp
fldenv
pop
mov
dec
bound
rcl
inc
jns
data16
nop
in
sub
cli
xlat
or
mov
xor
push
mov
das
jno
mov
fdivl
orl
mov
outsl
mov
lods
sub
jecxz
jbe
inc
adc
sbb
cwtl
sub
enter
aas
into
mov
adc
or
mov
lods
mov
xchg
loopne
jl
xchg
add
dec
xchg
out
jle
aas
nop
mov
sub
ret
test
outsb
jge
sbbb
xchg
push
mov
mov
pop
out
call
add
shrb
out
inc
lods
pop
fildll
push
or
adc
cmp
xor
sub
cmp
sbb
lock
lahf
xor
pop
or
mov
mov
mov
mov
hlt
jle
pop
push
ret
out
jmp
push
dec
jo
xchg
cld
push
add
popa
fwait
cmpsl
inc
div
and
and
mov
dec
sub
insb
sbb
movsb
sti
dec
sub
mov
cmp
sub
lods
rorl
scas
adc
int
push
clc
movsl
mov
into
repnz
fmul
arpl
jno
ss
push
fcomp
mov
pusha
ret
adc
clc
pop
mov
and
sub
pushf
pop
repnz
pop
std
sti
fldt
xchg
and
mov
push
sub
mov
loop
aam
rcrl
add
pop
rorb
lods
stos
add
sar
cmp
dec
sbb
lret
inc
fwait
negl
mov
push
jne
mov
lock
dec
jecxz
jg
push
xchg
xor
mov
mov
call
xor
xchg
or
lods
push
xorb
xor
icebp
mov
mov
pop
adc
sub
pop
or
adc
xor
data16
push
xchg
xchg
and
adc
sub
jecxz
inc
and
mov
int3
cmp
in
xchg
icebp
imul
mov
jnp
sub
or
or
imul
ret
aaa
add
scas
pop
or
repz
sub
xchg
add
cmp
sbb
pop
dec
jb
dec
sub
xchg
mov
mov
decb
in
mov
pop
int3
sbb
repnz
add
mov
es
loope
pusha
gs
inc
iret
mov
and
es
aad
dec
bound
xlat
outsb
push
ljmp
add
sub
pop
cmpsb
les
mov
call
inc
push
inc
add
loop
mov
ffreep
in
pusha
push
dec
cwtl
test
sbb
jl
xchg
and
pushl
sahf
jg
fldt
sub
lds
xchg
add
in
sarl
in
cmp
pop
and
insb
subb
rorl
test
insl
sub
xchg
jg
inc
and
xchg
mov
es
sub
lcall
gs
cmp
adcb
adc
leave
sub
rorl
test
cli
fucom
sti
add
test
pop
sti
mov
jbe
adc
mov
ja
or
into
sbb
adc
test
orl
lock
push
dec
jecxz
mov
loopne
stos
sbb
bound
outsb
mov
mov
dec
call
mov
inc
iret
lods
and
outsl
test
push
in
es
enter
jle
xchg
in
repnz
aaa
and
add
cmp
lea
hlt
xchg
call
mov
lcall
jmp
imul
sub
aad
mov
je
hlt
xlat
add
nop
adc
and
out
dec
shrl
cmc
std
ds
popf
xchg
dec
vphaddwd
mov
into
loope
sti
movsl
inc
test
fnstcw
pop
lahf
push
mov
rorl
test
pop
xchg
int
pop
lahf
jl
push
jno
add
cltd
repnz
jecxz
rcll
push
imul
ret
or
push
sbb
mov
sbb
jb
outsb
inc
xchg
test
js
mov
ljmp
jns
fwait
movsb
shll
dec
pop
adcl
or
in
fs
roll
and
push
jbe
pop
daa
addr16
aaa
jmp
push
jo
roll
ljmp
jns
add
dec
jecxz
pop
inc
add
sar
outsb
test
mov
imul
ficomps
sbb
mov
rclb
jb
addr16
les
fistl
jg
inc
inc
xor
pop
stc
and
in
jo
aaa
lods
stos
lods
ret
pop
mov
or
pushf
xchg
mov
repnz
popa
js
cmp
push
cmp
add
add
push
cmpsb
mov
insl
inc
mov
sbb
lock
pop
mov
clc
sub
sub
and
lock
lcall
das
or
out
push
and
mov
inc
push
fisubs
jbe
sbb
mov
push
les
and
in
inc
adc
cmp
je
sub
xchg
mov
mov
xchg
cmpl
clc
ret
in
xchg
mov
cs
out
pop
and
dec
leave
or
pop
sub
hlt
dec
in
jge
dec
lds
lea
or
push
ja
inc
daa
inc
shll
sub
fistpll
or
xor
lea
jecxz
int3
sbb
out
mov
push
icebp
faddl
mov
xor
dec
mov
comiss
pop
xchg
push
mov
ds
and
fstpt
lret
shll
icebp
repz
ljmp
inc
aas
stos
std
loopne
push
cld
mov
clc
dec
movsl
rep
popf
sbbl
andl
mov
andl
jae
sbb
xor
ljmp
push
int3
adc
cmp
ss
sbb
jg
xchg
enter
dec
ljmp
cmp
adcl
mov
mov
pop
mov
inc
repz
scas
clc
lods
adc
in
lret
mul
clc
test
cmp
dec
dec
es
invlpg
movsl
cmp
movsl
pop
jp
push
xchg
cmp
or
sub
xchg
fnsave
lods
call
ret
xchg
clc
andl
or
jle
mov
xlat
fwait
push
pushf
ss
fstl
jbe
push
dec
shrb
aaa
xchg
adc
lret
fwait
mov
ret
sbb
jmp
movsb
leave
ljmp
int
jbe
dec
out
sub
mov
test
es
lret
stc
test
mov
lods
mov
xor
outsb
lock
test
sti
jle
mov
fmull
popa
clc
push
pop
mov
aad
cmp
sbbb
xor
and
shlb
push
cmpsl
xor
push
or
test
mov
mov
adc
push
ret
xor
push
mov
xor
subl
sbb
test
xor
mov
stos
sarl
jp
fwait
in
in
and
jmp
sbb
pop
test
xchg
repnz
push
jge
pop
mov
popa
fwait
sbb
sbb
push
clc
hlt
cs
dec
int3
outsl
mov
out
jg
nop
xor
fucomip
adc
addb
mov
jg
test
sbb
dec
lods
cmp
pop
movsl
mov
sbb
in
sub
std
lahf
xor
sub
hlt
inc
jns
fdivrl
lods
push
aas
dec
mov
adc
or
and
pop
lret
jnp
dec
mov
je
pop
fstpt
and
jne
repnz
pop
sti
xchg
in
dec
or
push
adc
std
sub
pop
cmpsb
sub
push
outsb
das
pushf
fdiv
incl
sub
mov
xchg
mulb
rcrl
push
cmp
push
or
mov
lret
in
pop
push
and
push
cld
mov
cltd
shlb
stos
push
je
idiv
stos
mov
jno
dec
aas
les
in
cli
lahf
sub
mov
mov
divb
push
pop
stos
addb
imul
xor
insb
int
push
leave
push
pop
sub
jbe
fsubs
jmp
jae
mov
loop
outsb
aaa
bound
mov
lret
and
mov
adc
fistps
mov
ja
inc
dec
stc
in
jp
outsb
cli
ljmp
mov
mov
vxorps
out
aaa
push
dec
or
out
repz
les
adc
shlb
jmp
lahf
ljmp
jge
adc
pop
inc
pop
mov
sbb
sbb
add
lret
aad
and
jo
imul
inc
lds
inc
stos
cmp
or
enter
or
xor
leave
mov
sub
xchg
or
ljmp
cmp
push
iret
xchg
mov
or
cmp
add
push
test
pushf
arpl
cmp
popa
pushw
cld
and
inc
cmp
rorb
dec
dec
aaa
sub
lret
lea
in
fadds
xchg
add
xchg
push
faddl
nop
ss
les
loop
outsb
imul
movsl
int
or
mov
mov
and
add
icebp
jne
lret
lahf
or
adc
in
dec
lret
mov
inc
call
xor
and
dec
mov
and
shl
mov
ret
and
adc
jno
aad
ret
popl
nop
pop
clc
adc
cwtl
std
ljmp
cmp
push
stos
xor
jp
ficoms
lea
sub
jle
repz
cwtl
adc
loop
outsb
dec
enter
ds
jno
insb
mov
dec
cmp
dec
leave
mov
xorl
aaa
js
test
jne
arpl
jne
mov
pop
mov
pop
sarl
mov
xchg
std
mov
add
bound
iret
xchg
mov
out
lret
mov
jge
ja
inc
addr16
out
sub
in
loop
jge
inc
mov
push
mov
lods
sahf
aaa
sbb
insb
push
fsubrl
test
bound
jo
js
cmp
loop
popf
scas
arpl
jp
call
orb
xor
ljmp
xor
and
xlat
pop
cmc
add
sub
aad
xlat
cli
push
leave
push
add
mov
bsr
sahf
outsl
int3
imul
jg
clc
addl
mov
adc
or
negl
sbb
nop
vpaddb
std
fcompl
test
add
pop
addb
and
mov
in
ss
test
jae
jle
pop
jnp
jno
ljmp
scas
imul
cli
pop
lret
dec
sti
push
popf
jns
in
shrb
int3
das
inc
pop
mov
subb
push
mov
inc
inc
jbe
dec
jnp
test
cmp
loope
insb
roll
mov
lods
movl
pop
or
movsl
lahf
bound
cltd
aaa
mov
pop
push
or
push
loope
dec
push
xchg
jl
jnp
mov
lcall
repz
mov
mov
jbe
pop
sub
inc
adcb
test
pop
sbb
pop
repz
cwtl
divb
xor
cmp
mov
sbb
xor
popf
sub
out
in
mov
aas
lds
gs
and
mov
jg
push
xchg
jge
sub
cmp
pop
jnp
fdivrs
int
in
dec
mov
sti
daa
xchg
inc
mov
lods
jae
pusha
add
inc
enter
sub
enter
fbstp
push
daa
stos
pop
mov
out
pop
lret
xor
jbe
mov
jne
mov
inc
mov
pushf
jnp
daa
or
pop
sub
sub
out
push
call
test
and
jae
lret
xchg
testb
xor
jns
and
jmp
stc
mov
push
test
fs
adc
popf
out
cmp
sub
aam
roll
in
jnp
push
inc
hlt
std
xchg
mov
inc
or
lock
xchg
out
mov
lret
cld
popa
push
push
jmp
xor
test
orb
gs
in
mov
xchg
std
push
lds
pop
popl
dec
fidivl
pop
cmpsl
xchg
imul
in
repnz
ss
or
sub
push
arpl
mov
pop
sti
inc
fistpl
lea
push
les
add
sbb
outsb
cld
loop
xchg
mov
cmovge
fucompp
std
pop
jl
rclb
es
adc
leave
fcomps
sbb
js
arpl
mov
aam
emms
mov
scas
leave
push
mov
sarb
mov
push
mov
mov
iret
sub
and
dec
or
jge
pop
add
outsl
sub
imul
mov
pop
into
mov
dec
jmp
and
js
cmpsl
cmp
into
imul
jnp
cmp
sbb
push
sub
xor
jns
into
xchg
jo
jo
test
dec
je
gs
xchg
rorl
cmp
adc
ret
icebp
lret
jp
enter
adc
jmp
dec
mov
popa
out
lret
or
pop
movsl
push
in
mov
jmp
in
lret
push
je
data16
sub
in
xchg
sti
lods
fimuls
xchg
cmp
rolb
or
jne
sub
shl
jnp
in
stos
insb
negb
and
loop
push
mov
mov
or
sbb
adc
push
cmp
jmp
add
mov
pop
and
push
ljmp
ljmp
mov
jnp
push
imul
sbb
sbb
dec
sbb
xchg
xchg
lock
add
icebp
push
cmc
lahf
and
jg
decb
inc
nop
imul
shl
sub
enter
aaa
repnz
mov
xor
jecxz
push
mov
inc
mov
push
ljmp
dec
add
or
movsb
adc
push
jno
xchg
movb
andl
push
nop
cld
and
sbb
adc
in
add
orb
hlt
pop
roll
pop
movsb
sarl
mov
daa
icebp
cli
adc
cwtl
pop
cmp
ljmp
mov
iret
out
lcall
inc
lret
mov
aad
and
jg
push
pop
jp
out
mov
mov
sbb
repnz
jl
mov
mov
popa
add
mov
sub
sti
or
dec
and
xor
mov
or
xchg
mov
jmp
jne
mov
enter
xor
pop
push
mov
xor
dec
add
in
shl
out
loope
mov
std
add
pop
idiv
adc
fnstenv
or
pop
mov
adc
inc
cmp
ret
xchg
into
pop
mov
jl
add
scas
mull
mov
xchg
jo
dec
call
adcl
rolb
lcall
ja
mov
inc
aam
xor
ret
movsl
fwait
in
cmp
jge
lret
aad
push
jbe
sahf
jo
ficomps
dec
adc
jno
inc
lods
or
sub
push
jb
jmp
mov
sbb
cmpsb
outsb
mov
aam
int3
stos
xchg
jecxz
mov
sti
not
pop
push
ljmp
notb
ret
inc
mov
inc
mov
nop
mov
mov
adc
pushf
stc
mov
sti
mov
xchg
push
rcrb
pusha
leave
pop
cli
sti
xchg
lcall
cltd
test
je
pop
and
xchg
push
jge
aas
cld
and
sbb
test
add
add
jae
inc
mov
clc
lock
call
add
sbb
fwait
sub
jp
mov
lea
mov
loope
imul
into
mov
mov
inc
lret
push
jns
jle
das
repz
dec
push
pop
jle
stos
out
cmp
les
pusha
mov
add
adc
mov
mov
cmp
lcall
adc
cwtl
pop
andb
adc
mov
inc
dec
and
lea
lods
ljmp
les
das
mov
sub
stos
lret
jo
les
into
loop
stos
shll
insb
scas
and
pmaxub
sbb
cli
inc
call
adc
lock
rol
mov
jl
sbb
out
push
xchg
lret
mov
or
imul
xchg
mov
jmp
push
pop
test
xor
jmp
adc
cmc
pop
jae
xor
jmp
mov
adc
fsubrs
and
movsl
loope
jb
mov
push
mov
inc
data16
in
dec
push
hlt
jbe
rcrl
aam
pop
cmp
pop
mov
add
testl
fwait
and
pop
inc
or
dec
sub
mov
fnstcw
xor
mov
or
dec
pop
mov
imul
call
inc
cmp
jns
leave
call
sbb
adc
or
mov
je
movsl
fs
lods
jae
dec
cwtl
cli
jns
aam
insl
jne
mov
adc
clc
jns
out
xchg
rorl
in
aam
sub
sti
repz
into
mov
add
stc
inc
xchg
mov
imull
push
sbb
xor
jo
daa
mov
push
add
mov
cli
shrl
mov
xchg
xor
xor
lds
out
xchg
and
imul
and
adc
sub
adc
adc
sbb
jo
jmp
cmp
dec
sbb
in
adc
push
movsb
hlt
addr16
cli
jnp
adc
jns
push
cs
xchg
scas
sbb
imul
jae
movsl
add
int
shll
jp
pop
je
xchg
add
mov
lds
sbb
mov
dec
add
popa
cwtl
test
sbb
sub
pop
jns
outsb
dec
jmp
and
mov
jmp
imul
loopne
or
and
lcall
lea
push
test
or
mov
loope
adc
fs
jle
push
js
scas
xchg
andl
push
test
pop
dec
or
stos
fsts
inc
cmp
xchg
xor
fsubs
fwait
test
mov
sbb
mov
cmpsb
adc
or
pusha
loope
mov
ret
push
jg
lcall
xor
fsts
jbe
jp
pop
loope
ja
aam
or
push
and
mov
stos
mov
popa
lahf
lahf
stos
es
sbb
xor
and
loopne
inc
sub
js
mov
ror
or
scas
insl
ljmp
rclb
das
dec
inc
dec
mov
subb
xlat
xor
outsb
aad
je
je
roll
jle
lods
sarl
sarl
shl
jbe
roll
sub
addr16
jl
lock
sbb
jnp
mov
dec
or
enter
fmulp
jbe
in
push
and
pop
push
shrl
aad
cmp
imul
mov
scas
adc
movsb
jp
dec
loop
pop
push
cli
cmpsb
jae
mov
test
mov
adc
inc
sub
fnstcw
dec
xadd
test
or
xchg
xor
dec
or
mov
cmp
xchg
popf
jnp
cmp
insl
pop
xor
ja
jecxz
das
out
push
mov
sbb
sub
jb
std
dec
lea
sub
movsl
xchg
sub
jecxz
hlt
in
cli
inc
mov
dec
addr16
cmpb
fmuls
adc
scas
xchg
dec
ds
jle
adc
xor
jnp
ljmp
sub
cmp
mov
fcomps
test
xor
mov
test
jnp
jg
mov
fsubrs
jecxz
test
test
in
inc
aad
out
xor
fldenv
or
mov
fidivl
imul
xchg
notl
es
imul
cmpsl
inc
cmp
mov
jmp
jns
push
sub
cltd
jg
out
mov
pop
subl
jge
jne
jbe
mov
add
movsl
and
loope
or
push
clc
sbb
aaa
cli
jo
xor
les
stos
xor
mov
lods
jmp
mov
out
xor
std
xchg
inc
cmc
repz
in
adc
push
shll
cmp
mov
adc
xor
xlat
mov
push
fnstenv
mov
lea
lret
push
push
xchg
jbe
imul
jecxz
sub
jl
ficoms
mov
test
push
sbb
shrl
xchg
xchg
xor
xrelease
adc
sbb
call
push
cmp
enter
imul
pop
inc
sub
shlb
in
sbb
fs
les
lods
xchg
popf
or
insl
mov
cs
sarl
sahf
add
test
push
ds
adc
jle,pt
rol
sub
jmp
ss
int
inc
xchg
mov
lock
ret
rcl
inc
in
mov
jo
ret
and
mov
ss
bound
jbe
cltd
adc
fbld
fistps
xor
cmp
jecxz
fcompl
dec
pop
out
adc
mov
pop
dec
shlb
jge
mov
pop
lret
cmc
jo
mov
jae
add
test
std
stc
or
iret
push
ljmp
xchg
adc
inc
push
ret
jo
sub
pop
fldln2
lods
ds
ret
xchg
sub
pop
bound
pop
adc
jge
mov
jmp
idivl
jecxz
cmp
enter
lret
dec
and
mov
subb
ljmp
dec
push
inc
mov
sarb
stc
cmpsb
aas
testl
sub
ljmp
xchg
or
aam
dec
jecxz
push
repz
pop
in
dec
xor
pusha
test
fidivl
outsl
sbb
nop
jmp
cld
and
ss
mov
add
es
mov
sbb
into
stos
lret
jns
mov
dec
inc
jecxz
push
xchg
pop
aad
mov
xchg
out
lret
xor
push
roll
pop
out
bound
out
xor
ret
sti
mov
jns
xlat
in
je
or
cmp
pop
or
cmp
adc
movsb
pusha
jp
cwtl
inc
xchg
xor
aad
mov
int3
cmc
pop
dec
in
fisttps
pop
cmp
cld
iret
mov
movsl
shl
sti
addr16
mov
mov
jno
jnp
cmp
ds
mov
sbbl
mov
push
scas
or
js
jge
adc
cs
jge
xchg
lods
dec
mov
imul
test
mov
push
or
test
mov
push
xchg
or
mov
mov
test
inc
popf
cmc
sbb
mov
dec
mov
mov
std
test
fcompl
clc
pusha
mov
mov
cwtl
sti
test
inc
aad
jnp
gs
lret
cmp
mov
pop
lods
addl
cmp
mov
mov
movsl
xchg
cmp
mov
inc
pop
mov
les
dec
sbb
data16
pop
das
dec
inc
mov
pop
mov
inc
stos
cmp
outsb
dec
lods
cmp
sbb
das
inc
sbb
or
pop
adc
sub
cwtl
push
or
aaa
mov
xor
sti
add
cmp
stc
repnz
cmpsl
push
sbb
and
pusha
adc
and
cli
pop
inc
or
fstpt
scas
js
sbb
pop
mov
cmp
mov
pop
sbb
lcall
lret
xor
jb
bound
mov
and
int
cmp
push
xlat
cwtl
ljmp
roll
add
movsb
lock
callw
iret
adc
push
addr16
hlt
dec
lret
repnz
cmp
lcall
pop
xchg
andl
push
or
xor
dec
sti
test
ds
sar
mov
push
lds
cmpb
inc
inc
sbb
xor
jbe
out
xlat
call
stos
stos
fsubs
sub
test
outsl
daa
or
mov
add
cmp
xchg
adc
jge
adc
test
dec
mov
mov
mov
sbb
enter
cmp
test
lock
xor
mov
adc
xchg
rolb
fs
dec
jae
popl
rcll
insb
scas
filds
mov
xlat
sbb
jecxz
xor
push
mov
mov
dec
gs
jae
add
enter
scas
jmp
and
inc
hlt
scas
stos
mov
mov
aas
and
icebp
cmp
imul
mov
xlat
sbb
inc
xor
sub
loopne
add
outsl
cs
data16
mov
xchg
mov
mov
in
and
add
in
decb
dec
dec
out
push
sub
sbb
fisubl
push
mov
test
mov
inc
sub
pop
push
push
lea
cmpsl
push
insl
jbe
in
stos
fsubs
or
and
outsl
jno
lds
popf
rcrb
movsb
iret
fmulp
cmpsb
mov
inc
popf
mov
xchg
cld
mov
xor
push
push
ret
mov
push
push
or
cmpsl
popa
sbb
addr16
pop
jbe
sbb
dec
pop
aas
mov
xor
movsl
inc
es
jno
or
jge
mov
push
pop
push
mov
loopne
sahf
in
sub
ret
jo
les
and
jmp
cwtl
fxam
jle
cmp
and
jnp
mov
xor
jmp
test
or
or
add
fstpt
dec
aad
outsb
incb
jae
lcall
sub
and
ja
pusha
test
les
add
jge
xchg
je
mov
aas
or
aaa
inc
fs
repnz
mov
xchg
dec
out
mov
or
cmp
pop
in
test
gs
mov
fs
push
xchg
pop
jge
inc
add
cli
lock
jno
mov
inc
test
pop
in
pop
pushw
jae
cwtl
xor
insl
pusha
nop
pop
iret
inc
aas
stos
arpl
jno
xor
sub
jnp
sub
imul
sbb
jmp
or
sub
xchg
pop
icebp
jns
mov
in
movsl
aaa
add
xchg
adc
nop
adc
add
popl
push
mov
sbb
js
push
mov
test
lock
xchg
dec
cld
shll
pop
mov
lcall
pop
or
mov
notl
cmp
xchg
cmp
push
lds
inc
dec
xor
pop
jns
add
imul
or
outsl
bound
pop
ret
inc
outsl
dec
test
out
sub
mov
jns
push
scas
push
and
les
inc
iret
mov
mov
xchg
pusha
pop
pop
icebp
fstpt
xor
jo
sub
hlt
jb
mov
sahf
repz
into
or
jge
mov
into
sub
bound
sub
mov
push
mov
cmc
js
pusha
cli
in
add
movsl
rcl
cmp
mov
inc
sbb
aam
out
adc
jmp
shll
out
aaa
push
test
xor
out
sub
add
xchg
dec
mov
leave
inc
dec
mov
leave
sub
cld
enter
arpl
inc
insl
leave
mov
fdivrs
sti
mov
xor
fisubl
in
xorb
mov
lret
aaa
adc
mov
test
fadds
xor
in
inc
sbb
adc
push
sbb
andb
sbb
es
jno
lret
jmp
jb
mov
mov
dec
ret
rorl
lods
scas
cltd
sbb
or
push
mov
loopne
aad
adc
aas
fs
adc
test
mov
cmp
mov
out
add
call
insb
mov
fs
cltd
add
iret
sbb
mov
push
or
outsb
mov
pusha
arpl
paddb
pop
cltd
jecxz
call
sub
mov
cmp
xchg
add
aam
insb
add
mov
pop
mov
mov
jg
lods
subl
mov
lods
or
lret
mov
pop
lcall
or
or
cmp
js
gs
ljmp
sub
mov
int3
leave
sbb
lcall
jo
sbb
xor
loop
push
pop
cmp
cmp
icebp
and
adc
mov
xor
loop
sahf
dec
add
jae
cmp
sub
popf
cmp
cli
inc
in
ficompl
jg
faddl
sbb
aad
push
cmpsl
jo
pop
les
minps
int
fs
rclb
aam
call
xchg
push
stos
scas
push
test
mov
or
aas
add
mov
mov
xchg
imull
mov
ljmp
cmp
out
repnz
adc
pop
dec
pop
sbb
jns
ds
jge
sub
popa
pop
lock
and
shll
stos
inc
ja
les
or
popf
sbb
mov
sbb
pushf
js
test
sub
mov
push
dec
fisttpll
pop
enter
mov
imul
mov
push
or
sahf
shlb
aas
jecxz
test
aam
and
inc
insb
cmc
and
fldenv
andl
movsl
push
push
xchg
daa
imul
sbb
test
cs
push
push
insb
in
dec
sub
pop
mov
xchg
adc
adc
dec
icebp
push
mov
in
fwait
push
ficompl
adc
popf
lret
pop
inc
das
mov
dec
adc
xor
fisttpl
lcall
mov
cli
lea
cmp
push
test
push
fisubrs
sbb
xchg
gs
push
or
sub
dec
mov
flds
jmp
fcmove
sarb
cmpsb
adc
outsb
dec
fisubrs
lock
addr16
cld
adc
call
fldenv
pop
in
loopne
push
daa
in
stc
mov
ret
add
scas
sbbb
mov
movsb
int3
inc
jg
dec
ds
pop
stos
jno
mov
dec
inc
mov
mov
popf
pop
jno
aaa
pushf
jo
jb
mov
adc
mov
out
add
lret
das
stos
negl
dec
leave
cltd
xchg
ja
es
xchg
pop
push
xchg
pop
cmpsb
dec
out
adc
mov
jns
xor
xchg
mov
mov
int3
push
inc
dec
stc
stos
pop
imul
insb
cmp
xchg
add
add
ret
mov
or
and
dec
adc
cmpsl
jbe
fwait
adc
loopne
jge
adc
xchg
mov
push
bswap
pop
and
stc
in
mov
roll
out
and
adc
and
int
je
mov
in
dec
out
loop,pt
push
mov
jns
mov
adc
rcrb
pop
push
xor
xor
outsb
add
xlat
lods
rol
in
int3
out
inc
out
xchg
shll
leave
movsl
push
push
loopne
sub
mov
sbb
aas
sub
nop
nop
dec
pop
fsubrl
aas
jl
push
pusha
mov
pusha
or
mov
in
xlat
in
aas
movsl
push
mov
inc
into
lahf
clc
jne
sub
pop
fnstenv
pushf
mov
sub
fsubr
ljmp
add
popf
in
fmulp
add
test
daa
cmp
mov
and
int
idivl
mov
pop
dec
lea
sarb
in
mov
or
xor
mov
pop
xor
fildl
pop
pop
pushf
call
in
dec
adc
sbb
shlb
leave
mov
insl
sahf
or
aam
mov
lods
push
and
rcr
xor
stos
mov
aaa
cli
mov
adc
and
fiaddl
cmp
pop
inc
jmp
aam
aad
sub
cmp
pop
mov
sarb
lret
inc
pop
das
mov
je
add
and
cmp
in
mov
sub
inc
fnstenv
clc
pop
in
and
xor
ljmp
and
lds
lret
push
imulb
adc
loop
sahf
lds
rorb
pop
jbe
or
pusha
jge
add
xor
flds
sbb
ret
js
fbstp
push
leave
arpl
dec
cmpsl
aam
mov
aad
mov
mov
fidivs
or
lret
jno
rsqrtps
shl
inc
outsl
imul
rcrb
xlat
test
fisubrs
adc
scas
push
ss
or
sbb
sbb
inc
icebp
pop
xchg
ljmp
push
xor
mov
arpl
push
or
int3
adc
jp
std
jge
movsl
das
and
push
and
push
adc
pop
and
gs
xor
jle
mov
mov
cld
push
xchg
pusha
xor
in
movsl
jmp
pusha
iret
nop
test
clc
cmc
jle
mov
or
mov
ret
jae
or
cmpsb
fisubrl
cmc
js
call
cli
xor
mov
push
sbb
loopne
add
or
mov
xchg
dec
cmp
dec
cli
lcall
cmpsb
ret
into
cmp
bound
sbb
fdivrs
rorl
sub
scas
inc
movsl
out
mov
mov
mov
aad
pop
lods
cmpb
lcall
js
mov
sbb
xor
jb
call
push
xchg
gs
ss
sub
das
mov
aam
adcb
stos
mov
push
cltd
pushf
push
lret
cmp
pop
outsl
push
jno
popf
push
je
rcl
rcll
sbbl
xchg
sub
and
fimull
in
push
sub
subb
out
cmp
xchg
flds
shll
mov
sbb
inc
ljmp
test
mov
enter
sbbb
jno
xchg
inc
in
es
imul
je
mov
cltd
icebp
andl
out
movsb
nop
aaa
in
daa
sub
mov
and
dec
adcl
mov
mov
pop
pop
jg
test
out
fisttpl
into
daa
cmp
mov
fcoms
sahf
loop
mov
cmp
daa
and
dec
mov
mov
data16
cmp
or
or
xor
cmp
xor
mov
cmpsb
incl
mov
adc
pop
mov
cmp
aam
mov
dec
insb
out
mov
ficoml
leave
in
pop
mov
in
hlt
xor
fwait
add
mov
mov
in
icebp
jns
je
push
rcrl
xchg
add
mov
sbb
fmul
popf
and
and
pop
dec
xchg
add
cmp
fnstsw
cmp
sub
int
inc
fs
mov
out
xorl
jno
ficoml
mov
push
test
mov
mov
mov
pop
push
adc
cmp
mov
add
sbbb
and
aad
add
add
movsl
mov
out
orl
das
iret
sti
push
outsb
ret
roll
xlat
scas
loope,pt
pop
sub
dec
adc
in
mov
out
fisubl
dec
add
sub
jnp
pusha
in
or
push
ret
imul
inc
mov
repnz
xchg
xor
add
scas
dec
pop
fldcw
out
pusha
test
mov
sbb
mov
stos
int
sbb
dec
cli
pop
adc
pop
adc
sbb
mov
push
mov
mov
test
push
inc
loop
adcl
add
pop
fwait
shll
data16
cmp
sub
sbb
push
xchg
xchg
scas
inc
mov
add
pop
or
push
and
mov
popa
loope
popf
dec
in
or
enter
repnz
mov
jnp
movsb
cwtl
push
testb
jmp
mov
rolb
push
push
lahf
cmp
mov
clc
mov
xor
add
int
ret
daa
push
push
mov
shll
sbb
adc
or
or
stos
jmp
ljmp
xor
xchg
std
cmc
lock
js
or
xlat
or
xchg
cmpsl
lods
insl
push
dec
lds
mov
arpl
and
in
loope
adc
cwtl
out
mov
repnz
sbb
push
stos
outsb
out
jno,pn
in
mov
ljmp
aad
cmpb
sbb
xor
inc
mov
ret
dec
mov
out
jb
mov
icebp
sbb
xor
repz
sbb
arpl
not
mov
mov
rcrl
push
or
decb
mov
adc
pusha
cmpl
or
mov
xchg
scas
int3
jmp
adc
sbb
sarb
sub
push
outsl
pop
or
shlb
pop
aam
ret
adc
fists
push
cmpsb
sub
jnp
test
mov
or
xor
mov
test
aad
xor
pop
xchg
test
mov
push
dec
in
add
mov
xchg
mov
sub
mov
sub
imul
pop
bound
imull
notl
or
mov
push
sbb
dec
in
sar
cltd
sahf
xchg
inc
movsl
mov
push
jne
mov
lcall
jmp
in
nop
adc
mov
pop
adc
jns
insb
fwait
mov
insb
dec
push
xchg
xchg
mov
and
fs
fs
xchg
lret
popa
sub
and
cld
mov
and
out
out
rclb
cld
mov
and
in
push
inc
mov
mov
gs
out
iret
mov
push
test
lods
mov
mov
rep
cmc
bound
dec
cli
pop
hlt
negb
add
in
outsl
xchg
add
push
jns
jbe
mov
idivb
pop
stos
pop
jb
and
inc
and
mov
lds
inc
sub
or
xor
shll
or
adc
jmp
jge
lods
pop
enter
mov
push
in
pop
jp
scas
mov
add
mov
mov
mov
in
in
mov
pop
dec
pop
pushf
iret
jb
jb
mov
dec
or
or
dec
dec
lds
jecxz
sub
jne
sbb
in
inc
or
dec
andl
lods
popa
xchg
dec
adc
fisubs
xchg
lds
xchg
and
das
sbb
loopne
adc
dec
sbb
pushf
sbb
setnp
in
test
popa
mov
out
xor
push
or
repz
cmp
sbb
jp
adc
add
std
xor
jne
inc
push
cltd
inc
adc
fwait
stos
push
je
jp
fs
pop
gs
pop
movsb
popa
mov
cmp
test
in
in
push
lods
inc
clc
mov
xor
ljmp
jns
mov
fidivrs
ja
mov
movsl
cmp
pop
movswl
dec
mov
std
push
shrb
lahf
ja
mul
push
jne
xor
test
cmp
mov
dec
cli
sbb
aas
inc
filds
adc
pop
inc
mov
aam
and
test
and
imul
inc
adc
add
inc
or
cs
scas
push
iret
mov
scas
into
fildl
cmp
mov
cmpl
shl
push
mov
cli
xor
jae,pt
sbb
adc
imulb
sbb
inc
arpl
add
nop
xchg
mov
mov
lock
lea
icebp
dec
mov
shl
loop
inc
into
lcall
out
mov
pop
add
dec
scas
stos
xchg
add
mov
test
cwtl
and
sub
insl
push
pop
jl
mov
and
mov
add
ja
add
inc
mov
mov
fwait
daa
lcall
es
pop
rorl
pushf
fisubs
jmp
mov
ret
dec
loopne
js
repz
hlt
stos
fcom
mov
cli
jno
push
push
inc
or
mov
pop
mull
imul
fdivr
movsl
not
sbb
and
lahf
adc
mov
or
mov
es
lock
cmpsl
lret
sub
add
mov
xchg
jp
out
xchg
xor
lret
imul
cwtl
gs
adc
call
negl
adc
and
xor
cmp
insl
cmpsl
cmp
jne
sbb
push
mov
lods
dec
sub
push
adc
ret
sub
out
xorl
inc
jecxz
scas
push
push
inc
cli
push
cld
in
mov
add
pushf
fidivs
pop
mov
movsl
dec
xchg
inc
cmp
push
movsl
jae
cmpsb
into
ficoml
scas
mov
mov
fs
mov
xor
rol
mov
testb
or
fstps
sbbl
cltd
call
mov
mov
mov
leave
lods
adc
dec
push
addr16
and
jno
adc
or
jecxz
xlat
idiv
les
in
cmp
ja
cmp
ljmp
cs
mov
into
ja
inc
jecxz
stos
mov
dec
scas
int3
xchg
lcall
add
ljmp
add
and
movsb
inc
in
cmp
cmp
pusha
push
push
xchg
aam
sbb
jmp
lods
push
inc
scas
xchg
jmp
jo
ret
mov
pop
mov
cmp
inc
fstps
or
in
lea
test
sti
inc
sub
testl
cwtl
xchg
mov
stos
pop
fisttps
adc
icebp
xchg
out
xchg
adc
popa
fnstcw
xchg
test
loop,pt
orb
dec
sti
jecxz
cmp
pop
pushf
mov
dec
cmpsb
test
mov
cmp
jae
jge
add
cmpsb
mov
insb
xchg
lock
outsl
imul
js
xor
rcrl
mov
sub
loope
std
cld
and
jg
sbb
xchg
mov
lret
mov
icebp
fildl
bound
lcall
or
lret
inc
repnz
jnp
imul
int
dec
repz
push
sub
cwtl
int
dec
movsl
mov
dec
lea
mov
xorl
push
into
mov
inc
dec
inc
xchg
mov
cmp
outsb
pop
cli
nop
fidivs
ss
int3
jb
mov
jbe
push
or
insb
lcall
cmp
add
jno
jns
cmp
push
call
loop
xchg
movsl
bound
sbb
xchg
in
mov
dec
cmpsb
pop
daa
sbb
xchg
out
fistl
push
aaa
cli
add
test
lcall
movsb
jnp
xchg
leave
mov
jae
fdivp
push
or
aaa
fldl
loopne
out
repz
cmp
cmp
iret
or
lea
dec
fisttpl
rcll
inc
nop
xorb
mov
sbb
aam
mov
xchg
dec
nop
pop
and
fs
test
or
sub
sti
addb
fidivs
enter
fmuls
test
or
lret
sub
xchg
inc
mov
and
pop
push
xor
das
mov
pushf
jae
je
sub
jecxz
sub
jnp
data16
pop
or
or
fisubrl
cmp
pop
mov
arpl
or
inc
fwait
test
or
mov
pop
cmp
shl
inc
cmp
jg
inc
mov
imul
sub
in
mov
lret
push
mov
cmpsb
clc
cmpl
ret
hlt
insl
add
push
jmp
pop
jmp
outsb
mov
mov
jg
rcll
add
mov
pop
dec
cltd
popa
movsb
jno
sbb
outsl
fadds
push
enter
ljmp
xor
stos
lcall
jg
push
xor
pop
cmpsb
cmp
or
cmp
push
inc
outsb
or
mov
jge
icebp
cmpsb
adc
sbb
push
jle
inc
mov
jo
adcb
push
xor
jns
nop
xchg
push
icebp
fwait
pop
es
add
fidivs
mov
jne
dec
mov
fwait
mov
or
xchg
xlat
in
icebp
push
shl
ss
xchg
pop
addr16
and
lods
aam
pop
in
and
lret
test
add
push
add
test
mov
jl
jbe
jne
std
jp
push
movsb
pop
and
add
cmp
lret
sub
ss
cmp
cltd
and
clc
cld
imul
mov
jge
aas
fnstcw
or
adcb
xor
pop
jns
sub
xor
outsb
mov
push
and
dec
arpl
ljmp
sub
test
out
outsb
xlat
push
adc
gs
xlat
out
push
fstpt
dec
or
xor
cs
pusha
js
fistpl
repnz
lahf
xor
loop
mov
call
repnz
shrb
pop
cmp
js
call
adc
and
jno
aaa
loopne
gs
inc
repnz
pop
and
mov
push
jmp
dec
inc
add
das
dec
xchg
dec
xlat
push
sti
mov
pop
call
imul
xor
cmp
addr16
aaa
lds
movb
int
xor
gs
lock
imul
shl
adc
push
test
outsb
int3
pop
dec
inc
cld
push
lahf
stc
adc
fwait
push
fldenv
cmpsb
les
fsqrt
test
push
pusha
adcb
shl
jae
fbld
inc
jp
sub
lds
ret
int3
dec
mov
fisubrs
ficomps
sub
gs
in
imul
mov
fnstsw
or
add
pop
mov
inc
mov
mov
outsb
std
mov
jns
push
adc
adc
cmp
aam
rclb
iret
out
pop
jle
jbe
xchg
cmp
ljmp
out
repnz
fsub
shr
dec
push
ret
mov
iret
add
pop
xchg
stc
call
scas
adc
adc
test
aaa
mov
fcompl
out
test
int
xchg
mov
lock
fnstsw
sti
push
mov
fsubl
xchg
pop
gs
aad
mov
inc
and
jne
mov
mov
inc
cmp
out
outsl
xchg
dec
pop
loopne
mov
test
out
dec
add
enter
int
movsl
adc
ds
pop
jecxz
adc
iret
xchg
jb
das
mov
imul
xchg
jbe
lds
aas
pop
into
outsb
jg
pop
pop
pushf
dec
inc
add
movsl
or
mov
aad
int
sahf
mov
jge
lock
fldt
int3
sti
mov
aaa
test
dec
les
pop
in
add
and
imul
lret
or
int3
or
xchg
mov
insl
inc
mov
rorb
fistpll
call
mov
and
hlt
and
lcall
iret
adc
into
movsb
mov
xor
and
push
hlt
cld
jmp
jle
jmp
push
sahf
shrb
fs
inc
ja
popa
out
jle
lahf
cmpsl
sub
orl
repz
mov
or
aad
rcr
xchg
jmp
rol
mov
mov
sub
mov
mov
push
ret
jae
clc
and
mov
mov
aam
sub
push
xor
cmpsb
test
jae
insb
fsubrs
cmp
rorl
mov
jb
mov
sub
cmp
add
test
add
and
inc
jl
add
repz
movsb
jno
xor
aas
rolb
cltd
and
sub
pop
aas
mov
rcll
in
mov
test
ret
add
comiss
fidivrl
cmp
xor
jbe
xorb
jno
hlt
mov
pop
pop
fcompl
adc
les
arpl
lds
adc
adc
movsb
xchg
and
xchg
mov
mov
negl
std
dec
int3
jge
fstpt
pop
repz
or
cmc
jne
inc
and
fcmovnb
stos
jp
mov
pop
pop
es
mov
xor
xor
dec
adcb
scas
enter
repnz
cmp
xlat
push
fisttps
out
cmp
popf
roll
sbb
mov
outsl
lods
mov
fistpl
rcrl
pop
mov
or
fistpll
stos
mov
sbb
repnz
jns
xchg
loopne
rcll
inc
out
mov
aaa
sub
jne
inc
xchg
test
js
hlt
out
inc
out
repnz
std
jle
jns
push
xor
sub
jmp
fbld
push
in
imul
lcall
call
mov
adcl
jns
sbb
imul
rorl
jmp
and
inc
add
xchg
out
in
aam
ret
push
inc
test
jns
stos
pop
sub
xchg
fcomps
pop
fdivrl
xchg
out
sbb
ficoms
fwait
mov
pop
push
dec
lds
aam
stc
insb
outsl
out
and
inc
test
mov
and
xorb
sub
and
sbb
sbb
push
mov
xchg
mov
mov
nop
inc
sub
clc
jb
outsb
cmp
call
inc
icebp
cmc
lahf
push
xchg
data16
xchg
je
pop
jno
test
movsl
out
jne
cmp
push
pop
lods
pop
cs
lods
mov
mov
cs
xor
das
lock
adc
cmp
out
push
mov
in
jae
or
jae
sahf
icebp
mov
arpl
pop
leave
lods
insb
cmpsb
add
repnz
cmpsl
xchg
fucomp
rolb
incl
out
repz
cltd
push
pop
cmp
loop
cmp
cmpsl
pop
mov
std
mov
mov
xor
data16
loopne
shlb
ds
cmpsl
jecxz
push
add
push
scas
or
inc
jns
and
std
out
fcomip
aaa
mov
or
lret
fwait
sub
xchg
sub
cmp
andl
inc
mov
icebp
fsubl
sub
or
jge
and
in
aam
or
pop
jge
xor
jmp
lds
mov
push
jns
mov
out
leave
decl
xor
mov
adc
inc
jp
lea
cmp
mov
jmp
movsl
fcom
adcb
mov
arpl
icebp
in
sahf
aam
dec
in
rclb
push
pop
mov
wrmsr
hlt
or
mov
mov
inc
popa
xchg
pusha
xchg
lret
inc
daa
out
call
and
mov
rolb
sbb
dec
mov
jnp
arpl
aaa
adc
pop
push
test
nop
stc
out
cmpsb
sbb
mov
enter
jecxz
cmpps
push
aad
fiaddl
mov
faddl
adc
adc
pop
shl
jle
add
cmp
jns
ret
mov
lods
mov
add
ss
ret
jmp
push
or
sti
fsubrs
inc
fcmovne
out
cmc
mov
loope
in
jno
out
jmp
subl
fs
and
out
hlt
xchg
xor
aam
popf
mov
in
jns
pop
mov
jmp
lea
scas
test
xchg
pop
scas
lea
imul
push
mov
fldl
roll
js
xchg
int
fcom
shlb
rdpmc
pop
dec
xor
fldl
cltd
rorl
fisttpll
scas
cmpsb
dec
inc
test
mov
sub
int3
xchg
push
mov
insb
pop
pop
fwait
inc
test
jg
nop
ret
mov
xchg
rcrb
test
mov
bound
sub
and
push
mov
imul
int3
mov
xor
push
sub
xchg
xchg
leave
out
and
in
inc
mov
xlat
in
std
pop
dec
enter
imul
and
lea
lods
and
xor
test
mov
add
sbb
pop
out
and
lods
xchg
scas
stc
in
fwait
loope
pop
mov
mov
push
add
pop
xor
dec
mov
jge
popf
add
xchg
push
push
xor
popf
jne
sub
cmp
sar
adc
leave
lds
cwtl
xchg
inc
mov
mov
outsb
jmp
out
mov
insl
testl
cmpsl
repnz
rclb
data16
insb
or
mov
movsl
jne
push
in
pusha
sub
aad
pop
jle
or
mov
pmulhuw
rorb
loope
or
loop
lahf
mov
in
ret
cmp
jne
add
lahf
jbe
push
xchg
adc
and
mov
jmp
jae
xchg
xorl
add
sub
xchg
mov
sub
test
cs
stos
mov
xlat
cmp
rorl
jnp
xor
xchg
test
aad
cli
pop
xor
lcall
cmp
cmpsl
cmp
stos
shll
nop
push
je
push
mov
int
jmp
fs
inc
mov
push
sub
jb
aam
ss
or
fsubrl
or
adc
es
sbbl
dec
push
rorl
addr16
push
scas
in
and
and
call
lea
dec
loope
sub
and
sub
stc
lds
test
mov
xchg
adc
xor
sahf
movsb
push
sbbb
mov
cmp
imul
xor
mov
in
add
push
jno
test
dec
test
inc
call
dec
mov
adc
push
jmp
inc
imul
dec
pusha
mov
addr16
lret
mov
js
xlat
mov
cwtl
cmp
hlt
repnz
aas
pop
sbbl
or
fwait
out
mov
or
jo
ljmp
nop
sub
roll
and
scas
cs
push
jo
pop
int3
inc
sbb
and
sub
stos
lea
jecxz
movsl
mov
dec
sbb
pop
sti
scas
test
gs
stos
testl
mov
jne
cmp
fistps
mov
jle
pop
nop
test
rorl
sti
sub
lods
sub
and
cmp
cmp
cmpsb
in
inc
and
sbb
mov
sub
mov
push
push
sub
lahf
dec
or
icebp
int3
cmp
ss
test
adc
push
sbb
pop
mov
or
cmp
xor
cmpsl
daa
mov
andb
cmp
push
add
es
lods
lds
cmpl
fmull
testl
stc
jno
push
inc
xchg
cmp
stos
test
xchg
jnp
cmpsl
mull
ss
jne
pop
lret
or
sbb
mov
mov
jno
cmp
imul
loopne
mov
or
sbb
add
les
in
cmc
out
and
orl
mov
or
mov
divl
cmpsb
imul
lcall
push
dec
sti
inc
jge
jns
push
jbe
add
sahf
dec
or
xlat
xchg
jno
xlat
pop
in
add
leave
xchg
out
cld
xchg
dec
or
sbb
imul
and
jmp
mov
cli
aad
and
fists
ret
xlat
out
xor
lcall
and
pop
not
mov
or
imul
cmp
sti
test
jb
je
out
pop
enter
leave
inc
xor
sbb
xor
ja
and
cmp
insb
dec
dec
inc
push
ret
out
sbb
cld
mov
mov
in
dec
inc
aas
jae
mov
inc
cs
xor
xchg
es
mov
call
sub
mov
pop
test
xor
into
push
loop
and
js
loope
cmpsl
mov
adc
mov
lcall
mov
test
in
loopne
lds
shll
in
mov
in
loope
xor
out
and
frstor
fwait
push
orl
adc
cmp
stos
cmpsb
jg
out
mov
cli
loope
add
jbe
push
sub
pop
mov
cmc
mov
int
movsl
outsb
jne
xchg
andl
pop
fidivs
addr16
mov
pushl
cltd
das
shlb
mov
pop
movsl
fwait
dec
sub
pushf
lcall
fwait
push
adc
xor
lret
inc
inc
push
dec
jmp
cmp
jns
xlat
mov
xchg
cmp
xchg
sub
add
pop
std
lret
fnstsw
xor
fsubl
and
jae
in
fbstp
and
cmp
shlb
lret
push
call
cmp
sahf
into
popf
adc
or
nop
hlt
push
aas
dec
and
call
push
adc
xchg
xchg
gs
fcomps
test
lret
xor
loop
pop
fistps
lods
aaa
mov
lret
jmp
lahf
xchg
add
mov
xor
daa
mov
inc
icebp
push
mov
addr16
enter
xchg
jmp
xchg
pop
insb
jns
aam
push
sub
xor
sbb
jg
sbb
addl
mov
add
insb
das
add
imul
or
aas
xor
push
adcl
push
loop
stc
mov
pop
mov
add
jns
fs
sbb
dec
enter
lock
mov
outsl
pop
and
rorl
fiadds
rclb
scas
and
add
pop
cmp
and
xchg
pop
movsl
sub
insb
push
mov
sbb
cmp
xchg
push
adc
gs
add
dec
clc
xlat
sti
sbb
xorb
test
loope
stos
push
icebp
idiv
xchg
mov
inc
or
mov
xor
inc
cmpsb
sub
leave
les
adc
push
test
dec
dec
jns
or
test
mov
pop
inc
repz
aaa
mov
pop
xchg
add
into
jge
push
out
sbb
push
shr
mov
lea
dec
addr16
into
int3
push
push
scas
test
cmp
stos
sbb
sbb
into
mov
ret
in
or
pusha
loopne
in
fidivs
pop
mov
mov
clc
and
lret
lock
push
xchg
test
pop
jl
or
xor
mov
xor
hlt
ret
jmp
loope
aad
xchg
cmp
lea
ds
ljmp
fcoms
push
adc
push
pop
lret
dec
xchg
add
outsl
rcrl
add
jg
jecxz
jbe
test
gs
imul
xorl
sub
inc
mov
cmp
push
sbb
add
cltd
std
dec
pop
not
xor
mov
mov
popa
jle
inc
jge
leave
fwait
movsl
lock
movsb
mov
int3
xchg
inc
rcrl
or
int
rcrb
jne
and
xchg
mov
cmpsb
ficompl
push
lock
xorb
iret
dec
jnp
bound
faddp
mov
mov
stc
xchg
imul
jmp
jae
or
mov
mov
pop
or
inc
cmp
dec
fidivs
mov
push
pop
les
pusha
pop
jl
cmpsl
aaa
fildl
mov
dec
or
loop
jae
or
lods
dec
mov
jns
in
sub
cmpsb
jae
push
scas
dec
mov
or
adc
mov
not
imul
cmpsl
std
push
push
lret
mov
pop
das
call
aaa
outsb
inc
das
cli
and
inc
aaa
imul
adc
cli
mov
pusha
fildl
cli
scas
add
sub
sub
rorb
mov
loop
dec
push
lret
icebp
push
incb
push
mov
ja
flds
mov
sbb
pop
cmp
fwait
xchg
cmp
sub
xlat
orb
pop
push
mov
xlat
loop
adc
ret
insb
sbb
fbld
pop
in
sbb
lods
push
in
xlat
test
fwait
push
xor
or
add
cmp
jnp
cmp
insl
jmp
addb
rolb
pop
sub
and
mov
cmpsb
pop
aam
or
jae
or
push
imul
rorl
fcoms
mov
arpl
sbb
dec
pop
push
rclb
imul
xorl
fsubs
aad
sbb
dec
imul
sub
dec
mov
insl
cmp
pop
in
aad
cmp
cltd
adcl
ds
pushf
das
lods
inc
dec
loop
pop
sahf
fisubrl
push
scas
decl
fbld
stos
pusha
jg
clc
jno
movsl
inc
icebp
test
mov
mov
lock
mov
mov
scas
insl
aad
fcomi
mov
jl
shrb
push
mov
mov
jmp
imul
mov
ljmp
or
pop
ljmp
lret
cmp
mov
add
push
aam
sbbl
and
xchg
ljmp
jg
subb
jae
and
xchg
cmp
xor
sub
mov
js
in
lcall
les
cmp
mov
add
lahf
jbe
fsubrs
inc
push
mov
push
mov
gs
cld
push
les
int3
mov
push
adc
fwait
adc
xchg
std
dec
jnp
cli
sbb
sub
stos
mov
jnp
mov
add
sub
sub
and
mov
pusha
inc
aam
inc
jb
divl
test
xor
cmp
xchg
inc
pushf
xchg
and
jns
cmc
arpl
mov
sub
imul
sub
test
enter
sub
push
dec
stos
popa
sub
push
inc
mov
popf
aam
ja
xlat
out
jbe
sub
in
sub
xor
fnsave
in
stc
fistpl
insl
push
test
es
mov
test
xchg
jecxz
jecxz
sbb
pop
cld
idivl
add
and
fdivr
outsl
xor
inc
ret
stos
push
cmp
pop
add
xchg
int
scas
shrb
fdivrs
fnstsw
lcall
out
xchg
sub
pop
inc
cs
sbb
addr16
test
jns
mov
and
add
into
icebp
je
mov
pop
mov
pusha
xchg
stos
or
and
cmpsb
enter
or
repz
dec
enter
in
mov
adc
cmp
lods
push
xchg
sarl
xchg
and
in
adc
mov
loop
push
imul
cmp
xchg
pop
inc
dec
dec
push
lret
mov
mov
or
lock
inc
cwtl
push
lret
inc
or
or
aaa
cmp
fistpll
jge
xchg
xor
mov
rcrb
xchg
xchg
push
test
fs
divl
test
sub
sbb
mov
dec
aad
pop
fstpl
in
jmp
and
mov
mov
mov
add
rcl
rep
xor
les
xchg
push
icebp
adc
fstps
sbb
dec
hlt
sbb
adc
pop
pop
outsl
test
push
jno
movsl
dec
cmp
lcall
mov
mov
sub
push
inc
iret
aam
adc
or
add
or
dec
inc
add
pop
xchg
sbb
inc
push
mov
pop
dec
sar
fadds
sbb
lods
pop
pop
fwait
sub
inc
mov
and
mov
lret
lret
adc
pop
pop
cmc
mov
jne
cwtl
jmp
jmp
lods
int3
dec
pop
cmp
lahf
jmp
jnp
loopne
jb
mov
roll
rolb
lea
and
pop
jmp
jnp
pop
aaa
pop
test
dec
lret
cmp
push
pop
fcomi
ja
inc
adc
test
movl
adc
pop
mov
call
or
ds
dec
iret
shlb
call
and
sahf
ja
cmp
gs
jo
sub
pop
dec
fistl
xor
je
sub
mov
or
mov
sbb
mov
nop
js
mov
mov
and
inc
jne
pop
es
iret
out
clc
test
pop
xchg
fwait
into
and
xor
sbb
int3
lea
mov
fisubrl
call
push
ret
stos
xlat
lods
cld
inc
adc
sbb
in
or
or
sub
cltd
lret
loop
and
mov
sbb
xchg
stc
jbe
push
or
sbb
mov
lret
push
addr16
push
setle
flds
jo
pop
cmpsb
je
jmp
sbb
sub
outsb
or
int3
mov
jmp
into
sbb
call
push
lock
lcall
jmp
and
call
mov
push
push
inc
shl
lret
stc
or
subl
jno
cmp
pop
insb
and
jle
jp
push
rcll
ja
pop
mov
shll
jg
push
pop
cli
or
je
xchg
fsubp
xchg
jge
imulb
mov
inc
mov
add
push
push
aad
or
imul
jle
or
add
fisubl
aad
push
ficomps
push
dec
jbe
nop
xor
push
dec
unpcklps
inc
ss
push
arpl
pop
push
inc
push
mov
int
push
adc
mov
sbb
daa
sbb
imul
sarl
pop
insb
in
xchg
fistps
sbb
push
inc
adc
loope
fildl
loopne
and
dec
dec
inc
xchg
push
fists
pop
dec
je
nop
adc
cwtl
imul
pop
sti
cmpsb
xchg
adc
sub
mov
adc
daa
aad
dec
lock
sub
les
jle
ja
rorb
shll
aas
mov
inc
insl
mov
or
ja
les
xchg
insb
int
mov
insb
dec
int3
and
call
nop
ja
jns
xor
mov
sub
pop
outsl
or
and
gs
test
aad
inc
adc
jae
jbe
jge
xor
lods
adc
xchg
lcall
mov
fwait
test
jne
jo
jbe
icebp
cmp
shll
aad
mov
inc
push
push
ds
imul
cmp
mov
iret
out
movsb
insb
and
xchg
dec
aad
pop
cwtl
cltd
mov
pop
or
mov
inc
mov
insb
sbb
leave
enter
add
int
fwait
sbb
adc
aad
sti
xor
mov
push
mov
call
shrb
add
push
sti
mov
mov
mov
push
enter
jo
fnstcw
int
or
mov
lods
push
jmp
notb
lods
daa
sar
roll
or
int3
xor
jecxz
lret
test
mov
dec
bound
sbbl
mov
popf
cmpsb
mov
sub
lcall
mov
mov
jmp
inc
outsb
push
jb
xor
xchg
sub
add
or
sahf
inc
cmp
pusha
xor
cmp
mov
icebp
mov
in
lahf
sti
fsubr
ret
xor
jecxz
mov
stos
push
out
mov
jmp
insl
and
imul
add
cs
adc
sub
pop
lods
mov
mov
lods
inc
rclb
cmp
mov
unpckhps
rclb
xchg
test
jo
mov
or
adc
sti
or
lods
pop
sub
dec
mov
jg
pop
pop
call
aam
mov
push
mov
adc
mov
or
xlat
adc
pop
inc
add
adc
clc
or
mov
cmpsl
std
rcrb
pop
xchg
mov
ror
inc
lahf
xchg
fmuls
fcomps
roll
sbb
lock
aam
std
mov
pop
jge
xor
stos
fld
pop
or
test
icebp
ret
inc
arpl
xchg
call
dec
aaa
subb
or
push
leave
or
xchg
fs
jge
jns
ror
cmp
push
addr16
cmp
mov
xor
enter
ljmp
inc
dec
psubsw
mov
push
test
in
ror
mov
in
mov
mov
sub
das
xchg
dec
jbe
push
insl
adc
call
add
dec
sub
aas
iret
dec
or
stos
push
test
push
rcrb
pop
loop
imul
mov
push
xor
jne
push
push
mov
rorl
adc
xchg
adc
xchg
and
mov
mov
ss
xchg
lcall
mov
xor
add
mov
push
adc
mov
hlt
je
jle
cmp
in
jns
jg
in
jg
cmpsl
cmp
out
fwait
xchg
lcall
dec
enter
jae
inc
mov
test
xor
lods
pop
pusha
mov
mov
jmp
shl
stos
cmp
inc
loop
cmc
jnp
jbe
out
repnz
ds
mov
jnp
sarb
mov
inc
jle
std
mov
xor
mov
xchg
add
test
stos
stc
add
scas
xchg
sbb
add
jg
std
dec
xchg
lcall
pop
xchg
int3
jecxz
repz
cmpsb
outsb
cmpsl
pop
subl
ljmp
mov
sbbl
add
push
xor
cld
dec
adc
mov
cmpsb
mov
or
cltd
ficoms
pop
mov
cmp
repz
push
adc
pop
das
ret
mov
repnz
mov
subb
or
sub
popf
mov
inc
xchg
nop
push
cmc
and
adc
cmp
push
xor
inc
in
out
sahf
cmpsl
cli
or
mov
addr16
lcall
push
aam
and
jecxz
test
jns
mov
insb
lret
adc
jg
push
push
js
insb
lcall
into
push
push
or
cmpsl
sub
out
push
mov
ret
pop
pop
or
shlb
lret
insl
vmwrite
and
mov
fisubs
mov
cli
enter
je
popa
jno
jmp
cwtl
push
notl
jne
ljmp
jne
jo
xchg
insl
loop
xchg
mov
pop
mov
pop
mov
sub
mov
sub
jl
mov
ret
mov
pop
xor
dec
mov
arpl
xor
inc
movsb
dec
test
imul
mov
les
add
jl
rcrl
sub
or
push
sub
xchg
rorl
popf
jp
cwtl
mov
mov
fstps
mov
mov
xchg
popa
push
movsb
in
add
sbb
or
xchg
mov
imul
int
add
test
jle
sub
in
sub
loope
push
sahf
add
nop
nop
lea
cltd
mov
jae
popf
jl
js
dec
mov
sub
add
cmpb
dec
aad
xchg
rclb
js
fwait
rcrb
xor
sub
leave
mov
mov
fisttps
jae
in
jmp
push
fildll
les
in
stc
scas
lods
add
loopne
gs
mov
outsl
cwtl
sub
cmp
je
jne
insl
rcll
clc
pop
in
lcall
jns
jecxz
jno
xchg
clc
add
loopne
in
jecxz
shll
jg
mov
mov
sub
iret
repz
es
pop
push
outsl
mov
dec
cmc
mov
out
scas
icebp
pop
push
test
pop
fiaddl
mov
xchg
lods
xchg
or
cs
sbb
and
sub
ds
mov
repnz
jl
shl
adc
mov
mov
dec
cmp
cmp
cld
test
outsl
pusha
jl
jns
or
pop
fwait
stos
leave
lret
cwtl
sbb
cmc
fisttpl
and
aas
pop
mov
loop
pop
or
add
push
mov
insb
push
xor
pop
cmp
cs
pop
ret
mov
into
ljmp
and
sub
push
sub
mov
aaa
cmp
xchg
roll
pminub
mov
pop
movl
sub
mov
cli
cwtl
insl
clc
ret
and
push
daa
cmpsb
jmp
mov
pop
mov
sti
inc
aas
test
and
jge
subl
std
jb
out
jnp
stos
repz
ret
icebp
push
mov
cmp
and
xor
add
cmp
sub
xor
add
jbe
push
push
mov
xchg
sub
xor
push
cltd
out
enter
inc
sub
dec
fwait
push
pop
inc
sti
gs
aam
pop
dec
aaa
mov
and
xchg
push
sahf
arpl
mov
mov
lods
or
lcall
ret
psubsb
jb
cltd
mov
mov
inc
mov
out
jmp
ret
sti
mov
xor
imul
rcrb
inc
imul
lods
jge
inc
add
ret
push
rcrb
cmp
add
mov
mov
rol
aad
jne
fnop
dec
jp
push
mov
adc
xchg
xchg
sbb
xchg
out
pop
or
mov
iret
push
mov
imul
cmp
mov
xchg
mov
pushfw
or
and
xorb
pop
sarb
mov
scas
adc
or
out
outsl
push
push
mov
adc
jno
rcr
add
out
push
or
xor
test
push
fidivs
jno
fidivl
loop
jle
in
ficompl
fsubr
testl
push
les
sbb
add
xchg
xchg
mov
xor
xchg
mov
jo
xchg
pop
ljmp
xchg
and
inc
cmpsb
ljmp
and
sub
and
std
ljmp
jne
ret
xor
movsb
push
mov
mov
pop
push
add
inc
pop
cmpsl
das
pop
pop
sbb
sarl
imul
push
data16
dec
fisubrs
mov
popf
sub
push
sub
mov
cmp
and
sbb
ss
push
mov
xchg
sar
outsb
leave
push
mov
inc
inc
dec
pop
scas
sti
sub
sbb
fsts
inc
inc
div
adc
mov
mov
cmp
mov
pusha
dec
icebp
sti
sub
jnp
test
ret
stc
inc
adc
and
mov
call
stos
xor
cmp
in
mov
xchg
xor
popf
sbb
jmp
add
cwtl
ret
inc
out
stc
faddp
aaa
popf
cmp
or
cmpsb
mov
mov
mov
jns
xchg
lds
gs
sub
mull
jmp
aas
pop
or
test
sub
sub
jns
fwait
into
dec
idiv
cmp
jns
loope
sub
mov
lret
stos
loopne
popa
mov
addb
pusha
insl
pop
imul
pop
sbb
leave
mov
sarb
inc
shll
dec
stc
jo
mov
push
cmc
xchg
inc
aas
cmpsl
les
lods
adc
push
cmpsl
iret
or
or
add
aaa
xchg
shrl
loop
add
rcl
fisubs
div
mov
mov
int
je
push
pop
xchg
and
pop
fnstcw
sub
cmpsb
pop
test
loop
in
adc
aam
pop
mov
mov
mov
mov
adc
loop
scas
and
into
ljmp
aam
cmp
mov
inc
popl
push
rolb
jle
fs
stos
adc
pop
iret
mov
stos
pusha
inc
mov
insl
xchg
mov
ret
adc
ret
stos
pusha
pop
xlat
mov
push
push
int
ss
xor
enter
sti
repz
leave
sbb
pop
lods
jp
rolb
cmp
xor
pop
inc
nop
arpl
jnp
xchg
adc
pop
notl
cmp
scas
xor
mov
push
stos
out
js
into
popa
test
pop
mov
test
repnz
out
adc
push
scas
adc
sub
sub
inc
xor
push
push
ja
xchg
xchg
cld
fs
push
or
pop
dec
cs
xchg
sub
sbb
call
xor
mov
or
addr16
fidivs
test
aas
dec
xor
inc
pop
and
jae
xchg
insl
out
pusha
rcll
js
jg
mov
out
cmpsl
cld
xchg
stos
fisubs
add
cmp
inc
cltd
jl
pop
test
dec
mov
cmp
sbb
or
cmp
lods
bound
xchg
stc
fsub
scas
push
out
and
dec
jp
jns
aas
and
lcall
xchg
jne
ja
cmpsl
mov
or
cmpsb
dec
imul
aam
mov
add
movsl
push
push
movl
test
mov
icebp
jne
je
loopne
hlt
fwait
jb
push
dec
loop
test
mov
pop
sub
push
and
xor
cld
popa
ret
clc
mov
int
loope
ret
sub
mov
mov
orb
jmp
adc
loopne
cli
push
cwtl
jo
gs
lret
fsubrp
scas
test
mov
pop
in
push
cmpsl
fstpl
ljmp
inc
ja
and
xchg
jge
shl
dec
sti
or
repz
ss
mov
xchg
pop
lcall
sub
leave
mov
xor
and
sti
push
ret
push
jg
add
and
mov
ljmp
mov
push
stc
or
mov
test
sub
jne
jle
shlb
jle
xchg
pop
das
inc
pop
push
xchg
insb
test
jae
jnp
mov
xor
bound
pop
mov
mov
add
out
sti
add
sbb
lds
cld
out
jecxz
mov
jmp
icebp
push
rol
fisttpl
pop
mov
adc
adc
cmc
xor
xchg
jae
cs
jp
jle
mov
dec
push
roll
add
addr16
pop
pop
rorb
shll
fcomip
sub
rcrl
aad
push
cmp
clc
pop
and
in
sub
sbbl
cmp
xor
dec
pop
nop
fsubl
jb
gs
imul
add
sahf
sub
pop
lcall
nop
dec
je
jbe
int3
xchg
pusha
push
pop
xor
push
push
call
ret
xchg
mov
mov
js
test
ja
lret
fwait
lods
sub
xchg
pop
lret
jo
hlt
adcb
out
imul
pop
es
pop
mov
int3
insl
fldcw
jge
cmp
movsl
xchg
or
lret
in
sbb
call
inc
dec
dec
dec
int3
add
push
std
push
out
hlt
aaa
push
jnp
add
mov
jne
or
mov
andl
pop
cmpsb
inc
push
cmpsb
xchg
sahf
test
mov
xor
jp
in
js
lock
js
scas
push
insb
test
hlt
cltd
mov
popa
push
or
in
shlb
pop
cwtl
pop
stos
mov
sbb
dec
ret
inc
add
mov
xor
ret
pop
push
push
movsb
and
insb
ret
out
icebp
and
test
cs
icebp
cmp
std
inc
fst
pop
in
and
dec
inc
xchg
lods
jmp
inc
nop
loope
adc
imul
fcmovb
and
dec
add
repnz
notb
dec
cli
or
mov
repz
add
ljmp
dec
dec
pop
call
gs
lods
outsl
jne
push
lret
or
inc
and
gs
xrelease
mov
sar
shll
orb
repnz
fstps
sbbw
test
das
dec
sbb
gs
mov
lods
mov
filds
adc
out
cmp
or
inc
mov
mov
jne
fnstenv
arpl
mov
xor
cmp
pop
sti
jbe
ja
ret
cmp
dec
idivb
loop
and
mov
into
out
adc
scas
mov
outsl
and
dec
jecxz
lods
push
ds
clc
push
aad
push
rcrl
daa
push
dec
test
out
dec
js
jns
in
pop
ficompl
mov
adc
loope
iret
xor
cmp
push
cs
adc
mov
adc
gs
sub
cmp
out
push
xchg
imul
xlat
mov
mov
daa
lahf
jg
jne
les
or
cli
icebp
mov
sbb
cmpsl
mov
pop
sbb
jno
or
lret
push
movl
adc
mov
cmp
shrb
inc
xchg
mov
push
aam
loope
inc
push
mov
in
pop
mov
decb
ret
test
adc
jo
stos
adcb
divl
out
cwtl
mov
insl
push
leave
pop
push
rol
imul
outsb
test
push
js
sub
xor
mov
jnp
mov
int
and
adc
fwait
cmpsb
push
arpl
pop
adc
and
adc
cmp
test
xchg
or
hlt
push
mov
loopne
mov
int3
jecxz
bound
jmp
lds
je
aas
sbb
xchg
imul
cmp
movsl
ret
or
jnp
add
and
fstl
add
inc
xchg
mov
push
cmpb
pop
std
dec
mov
xchg
je
shll
push
cmp
decb
inc
mov
jl
sub
add
xchg
repnz
sub
sub
ret
and
iret
mov
mov
out
and
sbb
fmuls
jnp
jbe
addr16
lahf
gs
lret
jge
in
outsl
out
mov
icebp
adc
xchg
test
mov
or
mov
push
cmc
shrb
sbb
cmp
inc
ret
jo
iret
arpl
cmp
xchg
fsubp
push
mov
lods
jo
jo
add
sub
dec
test
pop
not
icebp
pop
sti
and
mov
xchg
jmp
cli
loopne
inc
lea
insl
jo
mov
flds
sbb
aaa
mov
jo
lock
mov
imul
js
ja
adc
xchg
adc
xlat
cli
rclb
adc
movsb
inc
cmp
jne
mov
in
sub
mov
push
pop
inc
xchg
lods
push
inc
xor
sbb
fdivr
icebp
leave
pop
cmp
sar
pop
dec
adc
cmpsb
outsb
stc
push
lret
sub
mov
jns
cli
xchg
sub
loopne
movl
lods
inc
rcrl
out
cmpsl
push
ljmp
icebp
fisubrs
or
mov
inc
mov
nop
mov
inc
ficoms
or
pop
mov
fcomi
out
sub
or
bnd
and
mov
jns
repnz
cmp
adc
jge
outsb
jg
insb
dec
mov
bound
jl
into
mov
icebp
hlt
push
mov
movsb
inc
rcrl
ljmp
call
sbb
push
sbb
push
sub
popf
pushf
fwait
test
push
sbb
and
mov
xor
arpl
cmp
fiadds
andb
xor
xor
imul
jecxz
fcoms
mov
mov
clc
add
dec
lods
or
xchg
xor
add
stc
mov
out
sbb
daa
repz
xchg
je
mov
test
sbb
rclb
and
bound
push
stos
lahf
in
or
imul
push
fnstcw
dec
leave
or
cmp
adc
push
jne
rorb
pop
and
mov
mov
add
mov
test
mov
push
lds
bound
js
add
mov
push
insb
sub
arpl
jo
jae
mov
cmpsl
nop
lret
mov
ss
jle
mov
adc
pop
fadd
push
mov
leave
mov
stc
icebp
rol
cld
mov
sbb
popf
bound
mov
sbb
lret
mov
es
xchg
lahf
add
sbb
jmp
pop
xchg
and
mov
pop
xor
ljmp
test
jl
bound
jnp
add
sar
ljmp
push
jl
ret
mov
divl
mov
jbe
jg
and
movsb
cs
pop
mov
dec
sbb
xchg
into
mov
jbe
gs
jae
movsb
fsubs
xor
cmp
jmp
out
xor
int
mov
shlb
cwtl
and
cmc
dec
fwait
daa
js
and
cmp
inc
loopne
xor
fmul
std
xlat
das
inc
in
aas
pushf
mov
ret
test
xor
xor
testl
into
popf
iret
in
jae
mov
jbe
call
mov
xchg
push
testb
pop
iret
sbb
mov
fstps
lods
inc
leave
js
test
filds
loopne
sub
jb
movsl
mov
fadds
mov
push
dec
xlat
xchg
stc
jmp
outsb
outsb
xchg
or
adc
aas
lea
addr16
mov
shlb
filds
or
sub
dec
rcll
xchg
sbb
jecxz
aam
mov
or
inc
sti
or
aad
dec
xchg
insb
loope
out
push
push
out
repnz
in
jg
cli
pop
sahf
xchg
jg
pop
lods
shl
sub
xor
sarl
call
mov
cmp
and
fdivl
fildll
outsl
sti
inc
sbb
sub
out
mov
inc
loop
cmp
aas
cmp
mov
fldt
and
or
gs
sub
iret
jmp
push
cmp
mov
mov
int3
sahf
call
ja
stc
mov
iret
popa
add
jle
xor
pop
mov
arpl
push
cwtl
xor
fnstenv
sbb
xchg
test
push
pop
sub
fdiv
pusha
cmp
arpl
xorl
mov
ficompl
fisubrs
push
sbb
sub
in
dec
pop
std
and
lock
mov
cmp
lock
and
je
adc
mov
jecxz
mov
or
xor
push
clc
xchg
inc
into
mov
or
test
mov
rcl
mov
mov
dec
xchg
mov
or
mov
push
lock
xchg
cmp
cmpsb
or
or
ret
sbb
cs
iret
lret
jp
nop
popf
loop
cmpsb
push
sbb
repz
dec
sub
gs
push
sub
stc
loop
xor
inc
xor
cmpsl
aam
loopne
push
add
jmp
cld
mov
add
and
add
inc
stc
repnz
in
or
xchg
call
aad
mov
popa
fildl
jno
fadds
loope
scas
rorb
in
in
sbb
ror
jae
cmp
lock
in
mov
xchg
cmpb
pop
insb
or
pushf
out
into
dec
std
cmc
fidivrs
cli
aaa
xchg
cmpsl
cld
int
lods
imul
adc
xchg
push
add
test
imul
lret
xor
mov
and
push
cmc
outsl
scas
aaa
or
sub
pop
loop
loop
xchg
push
xchg
aas
or
mov
dec
mov
push
mov
cmovne
mov
dec
inc
fsts
repz
hlt
xchg
mov
aas
mov
or
rorb
jb
mov
dec
out
loopne
inc
xor
lahf
sbb
cmpsl
sub
cmp
pop
addb
push
xchg
lea
push
or
cld
setge
aas
lods
cmp
push
mov
xchg
cmp
js
lds
jns
mov
sti
into
das
out
or
out
dec
cwtl
pop
aam
push
in
mov
sub
mov
js
mov
jo
dec
jae
movsb
and
ret
imul
sarb
scas
aam
bswap
push
andl
xchg
sub
inc
data16
js
les
sti
mov
sub
pop
jae
ss
dec
test
or
or
ja
jnp
dec
scas
in
test
test
push
clc
ljmp
mov
lods
scas
jno
loopne
es
cmp
or
test
fstpt
push
mov
pop
sarl
cmp
push
mov
arpl
imul
or
xchg
cld
cmpsb
and
aas
or
sbb
mov
pop
sahf
add
lock
stos
sub
das
ljmp
add
lret
test
das
fistpl
fimuls
fisubl
add
mov
push
sbb
mov
jbe
imul
call
pop
outsb
stos
adc
cld
cmpsb
fcmovb
popf
push
mov
sar
mov
js
lret
hlt
clc
cltd
mov
stos
mov
ret
fs
push
cmc
jo
adc
fidivrl
jecxz
push
push
push
out
scas
aam
xor
repz
cwtl
sbb
xchg
jo
int
sbb
push
fnsave
and
ret
imull
shlb
xchg
clc
je
int3
and
call
mov
sbb
outsb
add
shll
fnsave
ret
inc
test
pop
xchg
or
fimull
out
sbb
rcrb
inc
outsl
ret
int
into
ficoml
fnstcw
and
aas
xor
insl
iret
mov
sub
fimull
jmp
stos
dec
shrb
adc
sub
in
mov
insl
jl
inc
filds
jmp
add
cmp
ret
leave
push
xchg
sub
rol
fcmovbe
pop
or
addr16
in
movb
cmpsl
adc
sub
push
test
pop
enter
pop
push
repnz
scas
xchg
and
mov
or
add
ds
aad
lahf
cmp
lret
imul
push
cmc
cmp
lock
iret
int3
adc
or
in
rorl
les
mov
sbb
bound
cli
mov
out
loop
sbb
adcl
andb
hlt
adc
pushf
test
or
imul
mov
inc
jno
pop
fxch
popf
movsb
pop
inc
jmp
push
mov
sbb
mov
dec
adc
int
or
loopne
ret
enter
fiaddl
or
js
xchg
xor
inc
mov
loope
jmp
jns
or
ljmp
repz
addb
leave
js
sub
push
in
rclb
jo
mov
idivl
push
xor
jnp
mov
and
dec
add
push
cmpsb
lock
pop
push
pop
pop
pusha
imul
aas
gs
sub
xchg
pop
sub
pop
cltd
icebp
lcall
lods
jge
dec
mov
xor
shrb
mov
rorb
sbb
pop
lods
jle
mov
test
jle
negl
hlt
push
gs
stc
pop
scas
cmp
outsb
call
insl
arpl
or
mov
jge
adc
xor
and
mov
mov
and
push
inc
sbb
cs
insl
out
sbb
divl
sub
aam
adc
mov
fisttpll
fldcw
test
pop
pop
data16
stc
jnp
shll
fisubrs
jno
xor
sbb
sbb
repz
enter
repnz
lret
or
push
aaa
mov
pop
ud0
add
mov
clc
xlat
push
stc
jbe
in
mov
jge
and
xchg
sbb
push
sbb
mov
mov
popf
stos
mov
jmp
mov
sub
test
sarb
in
or
lods
hlt
loopne
mov
jmp
xor
adc
pushf
aaa
adc
xor
or
xor
mov
fldenv
nop
mov
cmpb
sbb
cmp
dec
add
jne
pop
lods
or
pop
pushf
sahf
mov
adc
sbb
into
popf
push
xchg
aas
sub
lods
outsl
sub
je
cwtl
jnp
aas
stc
ja
mov
inc
enter
mov
push
push
sub
cs
cmp
xorl
and
lods
xchg
mov
jbe
mov
shll
xor
xchg
xchg
shl
imul
repz
lods
out
jb
ja
pushf
or
leave
sub
or
xchg
bound
mov
fwait
rcrb
adc
sbb
lds
outsl
and
xchg
jge
xchg
cmp
and
fcmovnbe
roll
adc
sbb
mov
cmp
int
pop
cmp
add
hlt
lret
mov
frstor
push
add
adc
cld
jb
fwait
popa
add
inc
cmp
jno
mov
add
push
xor
mov
push
and
sub
shr
sbb
movsl
add
mov
dec
inc
ret
push
cmp
or
jb
iret
adc
cmp
pusha
xor
aad
mov
push
or
rclb
adcb
xor
mov
repnz
aaa
ret
mov
pop
pop
cwtl
inc
aam
aam
cmpsb
xor
dec
mov
imul
or
ljmp
adc
mov
subl
adc
data16
jne
bound
or
faddl
cmp
enter
les
cmpsl
bound
adc
xor
ss
mov
jmp
fidivrs
repnz
testl
push
loop
jle
mov
out
test
aaa
ja
inc
push
cmp
out
into
lods
cmpsl
xchg
hlt
sbb
loopne
jno
push
xor
mov
push
xlat
push
sbbb
dec
adc
mov
aad
xchg
adcl
ljmp
push
add
sbb
push
cmpsb
sbb
cmc
in
int
gs
add
fwait
push
add
sub
cmp
mov
popf
rcrl
cltd
aad
mov
jmp
mov
sar
mov
push
filds
iret
adc
ret
mov
aaa
jecxz
cmpsb
in
jns
pop
inc
das
mov
adc
addr16
jecxz
js
aas
sti
mov
add
bound
xchg
mov
fdivr
ret
push
dec
fmuls
clc
cmp
mov
sbb
inc
push
jg
stos
push
or
test
movsb
addr16
shll
mov
mov
into
jle
pop
cltd
sahf
mov
add
mov
xor
inc
mov
cmc
pop
sub
pusha
cmp
leave
mov
push
dec
mul
std
mov
cltd
ja
les
pop
ljmp
mov
je
xor
scas
dec
fdivrl
into
clc
pop
xchg
inc
cmp
in
test
gs
inc
sub
sahf
xlat
mov
shll
cli
dec
rcll
push
rcll
sub
sbb
das
insl
or
sbb
or
in
aaa
stos
add
out
fidivrs
pop
and
lock
xor
loop
xor
scas
sub
shr
ss
inc
aas
mov
ds
nop
enter
mov
icebp
mov
pop
clc
push
sub
pop
push
sahf
lods
hlt
fdivs
lea
daa
je
xor
out
adc
in
aam
stos
dec
or
xchg
sub
cmp
adc
pushf
mov
das
sub
repz
in
sbb
push
repnz
into
xlat
rclb
adc
jge
dec
add
js
inc
pop
or
in
cs
mov
jp
mov
mov
pop
mov
popw
jl
push
jne
jae
adc
inc
jnp
jge
cmp
pop
mov
pop
xchg
hlt
xchg
cld
les
cli
and
cmp
ds
mov
jnp
mov
fstp
gs
lret
add
dec
test
pop
mov
cltd
sub
loopne
aaa
push
dec
insl
push
jbe
in
mov
rclb
sub
adc
or
movl
adc
test
iret
jbe
orl
inc
in
or
filds
jae
sbb
andl
movsb
jo
leave
ljmp
movsb
jmp
dec
into
jg
in
fmull
stc
xchg
out
pop
lret
stos
test
in
sbb
test
into
sub
adc
data16
sbb
pop
dec
jo
cmp
fistpll
test
add
jnp
insb
cmpsb
or
or
ss
cmp
imul
cld
ds
inc
cmp
xchg
cmc
into
addl
xchg
fadd
add
cmp
mov
insb
or
and
icebp
sbb
xorb
mov
call
clc
fstpt
lock
insl
pop
pop
fisttpl
mov
push
ret
pop
cmp
xor
inc
mov
daa
cmp
jecxz
aaa
pop
fsubrl
push
loope
xor
das
jno
xchg
inc
xchg
aad
in
mov
rclb
cmpsl
xor
sbb
lcall
stc
push
cld
dec
dec
loop
pop
cmp
xchg
inc
pop
push
js
les
aad
jb
loope
mov
pusha
mov
jle
fsubs
dec
cwtl
and
xchg
and
ds
movsl
daa
push
out
jp
inc
push
adc
mov
push
jae
mov
fxch
cltd
into
das
into
adc
push
add
sub
add
in
lock
push
in
mov
push
imul
rcll
push
in
icebp
sahf
push
mov
mov
inc
cmp
ja
jecxz
jg
jno
pop
mov
mov
push
les
cmp
popf
jnp
cmp
nop
xor
push
call
jl
ficoml
ds
insl
and
les
mov
jbe,pn
enter
insl
shll
mov
push
jl
pop
outsl
xchg
and
mov
dec
lcall
adc
lcall
jge
stos
pop
mov
dec
aad
and
adc
add
mov
and
xor
test
mov
push
xchg
xchg
imul
fstpl
pop
pop
jp
std
mov
insb
xchg
shl
fisubrl
out
pop
xchg
sbbb
dec
fldenv
repz
add
add
stc
sub
ljmp
stos
xchg
mov
fsubr
mov
add
sahf
mov
test
jae
and
ret
psadbw
xchg
jb
ficoms
and
in
je
movb
loopne
in
das
xor
lock
push
jbe
add
dec
push
mov
cmp
inc
pop
jmp
add
push
adc
mov
jp
mov
inc
mov
mov
sbb
adc
sub
int3
out
ja
ret
pop
sub
pop
push
mov
inc
and
adc
fnstcw
jle
jne
dec
adc
cltd
sub
aaa
xchg
sbb
imul
adc
in
in
xchg
roll
mov
pop
xor
jno
gs
sub
aam
bound
jbe
push
xchg
push
scas
sub
xorb
popa
push
es
inc
mov
repz
cmpsb
idiv
and
mov
inc
sub
gs
es
dec
ret
std
xchg
push
adc
loopne
movsl
sub
xor
cld
inc
sbb
sbb
dec
into
loope
cmp
add
cmp
sbb
sbb
sub
pop
mov
mov
idivl
inc
mov
cmp
pop
jae
xchg
pop
nop
pop
push
lahf
out
out
xchg
shrb
mov
mov
hlt
push
pushf
mov
aam
dec
push
nop
clc
ret
popa
push
movsl
daa
lcall
push
sub
cmp
cmpb
je
and
rcrl
loopne
xchg
jno
ljmp
lds
ss
xor
adcl
inc
imul
mov
and
sahf
mov
cmp
mov
cmp
mov
loope
push
push
aam
sub
adc
call
and
inc
push
pop
fisubl
daa
jmp
cmpsb
dec
sbb
test
mov
aam
js
xchg
mov
loope
inc
mov
pop
mov
mov
in
dec
and
jnp
mov
dec
mov
mov
iret
test
dec
add
cmc
cmp
fwait
mov
inc
adc
dec
lret
outsb
or
and
mov
pop
dec
dec
sbb
push
and
push
adc
ds
xchg
daa
insb
mul
dec
jb
mov
jmp
dec
pop
mov
push
push
cwtl
mov
daa
sbb
movsb
sub
pusha
sarb
enter
or
xor
scas
clc
fisubl
pushf
sbb
mov
wrmsr
cmp
dec
and
stc
adc
mov
pop
das
stc
jle
sub
std
cmp
sbb
out
hlt
xor
inc
jl
inc
mov
add
lret
sbb
xchg
xor
popa
fldenv
dec
shlb
cmp
push
in
jp
cmc
push
les
sub
daa
add
out
mov
add
dec
dec
push
adc
jge
inc
insl
mov
and
dec
cmp
mov
divl
sub
cmp
pop
xchg
lods
mov
aad
or
inc
call
dec
aad
out
scas
mov
xchg
test
push
inc
cmpsb
or
je
inc
mov
ret
or
add
scas
out
cmp
mov
movsl
dec
outsl
je
push
inc
incb
mov
sbb
jle
sub
pop
push
in
insl
xor
and
leave
xchg
fiadds
push
jge
fisubrs
xchg
rorl
cmp
push
call
dec
sub
or
xchg
mov
add
sub
mov
mov
dec
jecxz
cmc
jle
ds
and
or
test
ret
dec
fbstp
lock
iret
bound
add
sbb
xchg
imul
inc
bound
sahf
lret
push
imull
xchg
fs
cltd
pusha
sti
jmp
testl
sti
insb
jg
push
mov
hlt
inc
pop
pop
push
adcl
in
push
fwait
cmp
ror
arpl
clc
adc
ror
adc
mov
clc
inc
push
addr16
fcmovu
jmp
sbb
xor
outsl
into
mov
idivl
scas
or
push
dec
jb
stc
mov
jp
cmp
dec
inc
das
shrb
mov
retw
lcall
pop
andb
pop
sbb
stos
nop
pop
adc
fiaddl
add
dec
out
aad
push
adc
fmuls
jno
mov
repz
xchg
cld
mov
mov
shl
repnz
pop
int
mov
push
mov
xor
adc
movsb
scas
sti
mov
or
subl
cmp
inc
mov
nop
je
or
ret
or
push
sub
jmp
out
mov
jne
lcall
sbb
pop
cmc
or
push
mov
js
aam
sti
bnd
imul
push
mov
adc
nop
call
je
pop
cmp
jbe
fldt
test
jmp
xlat
das
arpl
rcr
push
lret
gs
mov
mov
pushf
dec
adc
adc
xchg
movsb
loope
mov
jae
in
xor
lods
mov
cmpsb
lret
xchg
gs
daa
jne
inc
mov
cmpsb
and
add
call
or
lods
pop
mov
and
sub
mov
es
aas
jo
cmp
push
and
jge
xor
rorl
dec
mov
into
xchg
fidivrl
dec
adc
sahf
enter
out
stos
ja
shlb
pop
data16
dec
lea
aas
sub
outsl
push
jb
sbb
ds
mov
leave
cld
ss
mov
xor
test
xor
pop
jge
mov
mov
inc
repz
adc
mov
jge
inc
mov
sbb
xlat
test
icebp
add
test
lret
in
add
movsb
mov
sbb
test
xchg
xlat
pop
cmp
mov
in
xchg
jno
les
mov
xor
insl
mov
gs
add
push
mov
lret
out
sub
rorl
ret
mov
out
add
sbb
xchg
mov
xchg
arpl
clc
je
adc
pushf
mov
aaa
xor
imull
pop
negl
xor
and
sub
jle
mov
mov
adc
ds
repz
xor
add
rcrl
or
dec
cmp
das
stos
loop
addr16
mov
mov
movsl
outsb
mov
pop
inc
rcr
jl
push
test
nop
nop
lock
mov
rclb
pop
jp
lcall
nop
repnz
sbbb
iret
or
in
enter
icebp
pop
jne
push
add
or
mov
mov
loop
xchg
jmp
jge
out
jo
shr
dec
sbb
in
push
sahf
and
mov
stos
pop
lret
push
in
push
andl
pop
adc
je
cmpsb
imul
test
addr16
pop
ljmp
push
jecxz
fstenv
add
mov
jge
mov
inc
and
into
or
out
adc
out
cmp
xor
cmpsb
aad
pusha
lock
mov
in
jmp
mov
sar
pop
aaa
lret
adc
je
add
dec
sahf
hlt
xchg
imul
adcl
test
pop
divb
cmp
pop
dec
cld
test
loopne
push
inc
jae
imul
iret
add
mov
jp
aaa
add
push
sbb
sub
jns
push
xor
or
xchg
xor
mov
push
xchg
adc
fisttpl
mov
mov
cmp
iret
xor
jb
fidivl
mov
sti
push
push
add
sub
sahf
sub
lods
xchg
xchg
mov
or
mov
cli
and
cmp
mov
ret
or
ror
mov
fcoml
hlt
add
mov
and
into
test
mov
xor
push
pusha
and
jo
loope
xor
sbb
enter
fistps
cmp
inc
push
push
movsb
imul
xchg
jle
pop
mov
xlat
and
sub
mov
mov
mov
push
pop
data16
sbb
cli
das
jne
xor
mov
sbb
dec
xchg
xor
out
xchg
jecxz
pop
arpl
mov
or
inc
sbb
jmp
into
sub
inc
imul
add
adc
dec
addr16
out
cmp
fldcw
push
idivb
shll
jns
or
jp
xchg
fstl
xchg
cmp
mov
jle
or
aas
xor
dec
inc
in
add
pusha
jp
lcall
xchg
adcb
int3
inc
ss
xchg
jno
mov
push
lock
leave
xor
je
xlat
jb
lock
sbb
stos
lret
sar
mov
and
lods
mov
mov
fwait
push
sbb
pushf
iret
fsubs
leave
sub
inc
fidivl
adc
or
loope
les
adc
lods
cmp
push
xor
fsubl
inc
jle
xchg
int
in
js
jnp
enter
ljmp
mov
out
aad
sub
cld
dec
pusha
call
ret
rcrb
sbb
sti
mov
repnz
dec
test
inc
call
rol
ret
leave
lock
and
mov
inc
ds
xchg
inc
jae
xchg
lock
pop
add
mov
mov
sbb
call
out
mov
xorl
fbstp
jl
lock
mov
add
movsb
push
xchg
test
pop
roll
xlat
out
lock
xor
fs
push
ficoml
xchg
cli
push
leave
frstor
out
inc
rcll
inc
shlb
mov
out
or
ljmp
sbbl
sti
push
mov
sahf
mov
lcall
lock
and
lea
repz
stos
or
sub
sub
mov
adc
lea
add
jp
sbb
cmp
je
rcl
insb
push
ret
adc
popf
cmp
inc
cmpsl
jbe
adc
add
jae
cmp
xlat
loopne
sub
jne
ja
pop
mov
mov
ss
dec
hlt
lods
sar
std
and
fnstsw
ja
xchg
and
push
and
mov
out
add
jb
pop
inc
or
push
sbb
and
and
and
les
sti
jmp
aam
stc
mov
mov
popa
xchg
xor
jnp
jmp
fs
xor
icebp
push
ljmp
inc
and
xchg
mov
push
js
daa
add
or
sub
inc
popa
mov
or
adc
xchg
insl
cs
fmulp
jecxz
loopne
jnp
pusha
daa
mov
push
jp
sti
inc
inc
gs
cmp
inc
insl
cs
inc
stc
pop
test
aaa
mov
test
lods
call
adc
xchg
in
imul
push
add
or
lahf
xchg
or
push
adc
iret
shll
cltd
mov
sar
xchg
sub
cmp
push
std
jg
lods
movsb
int
xchg
cltd
and
add
mov
rorb
pop
pop
mov
jnp
xor
xchg
mov
push
sbb
mov
pop
push
cli
add
aaa
je
jb
insl
in
cmc
add
mov
dec
adc
fisttps
data16
mov
testl
fs
jg
jecxz
insb
mov
daa
and
scas
ficoml
nop
mov
dec
dec
fmuls
sti
xchg
dec
call
and
xchg
inc
loop
lcall
fdivrs
push
in
rclb
or
push
mov
push
stos
or
or
jl
add
int3
aam
push
sbb
adc
jg
in
cmpsb
faddp
adc
push
sub
lret
fisttps
call
imul
cwtl
scas
mov
xchg
out
push
test
int
mov
push
push
mov
add
push
or
add
nopl
dec
les
filds
fdivrs
stos
mov
sbb
push
out
sbb
ds
test
add
jae
inc
push
dec
jo
inc
sub
push
jp
and
cmp
xchg
push
add
sbb
std
xor
popa
add
int3
adc
out
repnz
cmp
xor
mov
clc
adc
xchg
dec
push
mov
lret
frstpm(287
jo
and
dec
in
xchg
scas
stc
fists
iret
gs
sbb
les
repz
jns
cmp
jmp
orl
pop
inc
cmp
stos
dec
mov
pop
xchg
cmp
lahf
dec
adcl
mov
popf
xor
orl
cmpsl
repz
mov
les
cwtl
test
and
sbb
scas
jle
xchg
or
test
in
sbb
adc
cli
movsl
mov
rcrl
dec
jbe
cltd
pop
outsb
nop
imul
add
stc
inc
icebp
aaa
jnp
xchg
dec
std
in
push
repz
sub
test
xchg
out
jg
pop
enter
mov
pop
or
addr16
and
xchg
lods
inc
xor
xchg
in
pop
jb
hlt
mov
inc
xchg
sub
add
lahf
cmp
mov
cwtl
inc
cmp
popa
lea
fdivr
xlat
imul
mov
rol
sbb
int3
cmp
jp
dec
clc
cmp
rcrl
xor
cwtl
sarl
pop
jecxz
inc
repnz
xor
push
and
push
mov
repnz
jne
mov
movl
xchg
push
sbb
fwait
sbb
mov
and
jns
sub
fadds
xchg
jb
dec
in
cltd
mov
inc
push
jge
mov
imul
add
cmpl
add
pop
repz
xchg
dec
xlat
jo
cmpsb
jp
aad
add
in
out
ljmp
mov
xchg
jo
add
mov
pop
loopne
mov
loopne
mov
cmp
gs
add
decb
lods
orl
mov
jl
fsts
add
out
mov
call
test
mov
cld
nop
shlb
enter
pop
mov
mov
js
fdivl
mov
fisttpl
pop
mov
aas
pop
mov
push
xor
shll
mov
repnz
cmpsw
jg
ror
and
xchg
push
in
je
lds
repz
xchg
sub
sbb
inc
push
or
xor
test
jne
mov
out
arpl
xchg
jo
outsb
push
out
jge
nop
fnstcw
or
push
add
xchg
mov
pop
out
pop
test
jb
jb
cmp
shll
stc
dec
mov
xor
popf
test
mov
aaa
or
and
dec
repnz
loop
sahf
sbb
icebp
xchg
cmp
stos
mov
test
aaa
movsb
cmp
cmp
testb
mov
mov
mov
out
xor
push
jae
dec
push
nop
cmp
jb
les
cld
fidivrs
cli
pusha
adc
in
adc
xchg
in
xor
addb
mov
mov
fstpl
push
jl
sbb
pusha
cmpsl
insb
jecxz
ss
pop
xor
loopne
xor
fucom
mov
int
into
mov
cmp
sbb
stos
mov
push
sub
ljmp
pop
add
lods
adc
nop
call
cmp
mov
pop
in
sub
mov
push
mov
mov
or
jno
rorb
fiadds
inc
cmp
mov
ljmp
fisubs
lods
pop
add
data16
xchg
addl
xchg
mov
fldt
movb
sbb
add
mul
adc
xchg
xorl
mov
insl
lods
mov
shlb
popf
loop
gs
jmp
scas
aad
cmp
mov
sub
xor
outsb
and
sub
out
gs
adc
mov
dec
push
push
sbb
push
xlat
mov
jle
xchg
sbb
xlat
xchg
mov
out
out
add
fnstsw
in
xchg
jg
pop
push
fs
and
jge
ficoms
cmpsl
inc
adc
cs
sub
jmp
jo
loope
test
xlat
jmp
das
ror
push
push
inc
push
aaa
fadds
mov
iret
jge
pop
arpl
clc
sub
out
aam
cwtl
dec
sub
mov
lahf
xlat
sbb
aam
mov
pop
and
test
test
je
call
push
rolb
cmp
ss
mov
insl
jl
daa
jno
aam
loop
or
fistpl
add
dec
pop
repz
pop
pop
insl
mov
in
xchg
cmovnp
in
mov
je
in
repz
jb
cmc
imulb
adc
lea
adc
stos
cmc
mov
icebp
shrl
xor
imul
sbb
hlt
daa
inc
adc
push
pop
mov
sahf
add
jno
inc
insl
or
jmp
dec
enter
cld
push
adc
decb
lret
andl
xchg
cs
fdivrs
jecxz
fcoms
jno
adc
pop
iret
into
aas
imul
iret
mov
shrb
pusha
icebp
inc
scas
xchg
dec
out
ret
mov
add
jno
test
movl
inc
push
inc
inc
xlat
and
add
dec
mov
ss
int
jo
jle
sbb
xor
mov
xchg
or
ss
stc
stos
divl
aam
and
andl
sbb
xor
xor
sub
cld
test
xchg
xor
pop
js
push
clc
pop
or
ret
mov
push
ss
and
add
pusha
lahf
repnz
mov
je
add
cs
daa
sub
aam
out
mov
jl
aam
inc
add
shll
insl
arpl
popf
push
mov
xchg
lahf
dec
into
inc
dec
sahf
outsl
in
sub
fcmovb
pop
adc
testl
jns
dec
stc
mov
sti
adc
adc
xor
das
insb
sbbb
imul
imul
loope
ljmp
push
stos
andl
sub
mov
mov
xor
fwait
ret
stc
xchg
or
nop
fs
orb
mov
sub
arpl
cmp
push
lahf
xchg
stos
dec
xor
xchg
pop
jnp
je
sar
test
dec
inc
iret
sub
cltd
ja
lret
jmp
sti
lock
pusha
insl
cmpsb
pop
int3
xchg
mov
into
aam
add
push
popf
cmpsb
negl
fists
or
iret
adc
pop
xchg
mov
insb
dec
test
lcall
xor
jmp
rorb
into
outsb
jge
jl
popf
sbb
push
sub
mov
push
nop
outsb
pop
jl
xchg
cmpsb
rclb
fsub
cltd
sbb
gs
pop
dec
in
std
sub
gs
inc
iret
lret
xchg
lret
xlat
cmp
cmp
add
jne
xchg
outsl
or
cld
roll
out
inc
xchg
test
dec
rcr
lcall
adc
mov
js
mov
adc
imul
pop
jne
mov
lret
insl
xchg
xchg
mov
test
mov
lods
dec
jb
xor
outsb
repnz
mov
xor
adc
out
fwait
aas
jp
push
xchg
push
add
icebp
add
les
jg
jnp
fdivs
imulb
fsubr
jno
add
add
fs
pop
in
or
mov
pop
xor
cmc
loopne
or
ror
cmpsl
out
xor
in
insb
xchg
push
rolb
mov
cmpsb
or
pop
out
or
call
add
aam
cmp
jecxz
jbe
jno
jle
mov
nop
in
pop
lods
scas
data16
mov
insl
rclb
addr16
shrl
push
andb
xchg
pop
aas
idiv
shl
xchg
imul
hlt
sbb
mov
std
fistpl
inc
mov
cmp
mov
sarb
addr16
sub
gs
sbb
imul
rorl
stc
cld
inc
jmp
loop
add
shlb
xchg
add
pop
jbe
out
pusha
xchg
inc
std
pop
sbb
sbb
iret
sbb
xor
pop
leave
mov
push
sbbb
loope
stos
ficompl
int3
xchg
stos
sbb
jge
pop
ret
mov
es
mov
popa
daa
jbe
dec
and
mov
push
fsubrs
in
cld
rcl
scas
out
mov
repnz
iret
outsb
dec
adc
mov
loop
mov
rcll
jo
test
cmp
xchg
repnz
aad
insl
sbb
mov
out
cmp
stc
inc
daa
fildl
repz
sbb
icebp
ret
bound
jle
and
loopne
pop
lret
and
popa
cli
mov
fdivs
or
and
out
mov
repnz
bound
mov
jg
push
xchg
sub
or
sub
loop
adc
fcmovnb
add
std
into
insb
cmp
aam
mov
mov
ds
je
fcomp
pop
shl
aam
xor
and
adc
and
fnstsw
inc
add
dec
out
je
cmpsl
sbb
test
xchg
cmc
pop
mov
popf
inc
jne
repz
insb
cmp
stos
push
orl
rcll
fsubrs
jo
or
fld
xchg
xor
jle
shl
xor
xchg
jne
stc
mov
jp
sub
pop
xchg
repnz
test
das
out
xchg
dec
or
and
mov
lea
sub
out
and
test
push
mov
push
stos
std
mov
mov
push
loopne
outsb
std
or
dec
mov
xor
cmp
das
arpl
pop
inc
inc
std
lret
xor
lods
pop
add
lock
pushf
mov
jmp
fadds
jecxz
sub
into
jne
ja
jo
adc
xchg
sub
add
pop
add
mov
scas
sarb
clc
sbb
lret
fistl
cmpsb
mov
cmp
movsl
out
pushf
loop
int3
data16
lods
xchg
es
and
dec
divb
js
jle
aad
add
mov
cmp
repz
lods
imul
inc
shrl
sbb
cwtl
mov
gs
xor
loopne
xor
ljmp
test
xchg
ss
cmp
fnstenv
sti
jo
xchg
pop
cmp
mov
pop
js
inc
call
mov
jae
and
mov
std
push
scas
mov
or
inc
xor
mov
fwait
sbb
filds
scas
jnp
repnz
insb
fs
outsl
sbb
icebp
xchg
pop
ficoml
loop
mov
movsb
xlat
popa
insl
cmp
movsl
scas
and
es
es
ret
dec
inc
lock
das
pop
testb
test
xor
adc
andl
push
add
imul
pop
or
stos
push
inc
xchg
sub
push
inc
sub
jg
xchg
or
mov
in
shll
pusha
fisubrl
inc
fadd
mov
and
shr
mov
fcmovnb
xchg
push
and
cmpsb
in
push
mov
in
push
int
iret
int3
add
cmpsb
mov
pop
js
xor
inc
fsubr
shrb
mov
scas
cs
popa
adc
mov
decl
fucomi
adc
sbb
push
std
notb
adc
sub
mov
mov
scas
mov
lods
dec
shll
cmpsl
jnp
pop
imul
nop
cmp
rdmsr
sbb
loop
out
cmp
cmp
mov
outsb
cmp
ljmp
push
push
sub
ljmp
mov
mov
inc
test
jae
mov
xchg
add
jge
push
movsb
mov
movsl
mov
dec
sbb
mov
in
xor
shlb
xchg
std
fwait
movsb
mov
mov
mov
cli
adc
mov
mov
fimuls
mov
ficompl
jp
stc
or
aaa
mov
inc
sub
nop
xchg
push
xchg
push
leave
mov
cltd
dec
jnp
mulb
roll
fdivr
pop
or
xchg
out
adc
in
lahf
clc
bound
ds
inc
mov
jb
xchg
mov
dec
mov
movsb
aad
lea
rcr
fisttpll
inc
jnp
xchg
pop
out
sub
subl
leave
movsb
das
and
mov
sbb
outsl
negl
sub
ja
popa
adc
mov
cltd
ud0
mov
aad
sbb
inc
pusha
dec
xor
push
xchg
sbb
push
xlat
cs
stc
xor
pop
mov
aaa
fistps
adc
and
in
mov
inc
negb
fcmovu
insb
lret
aad
sahf
movsl
imul
jp
xor
daa
int
out
insl
or
mov
notb
stos
cmp
add
lods
and
pop
mov
bnd
into
enter
and
xor
imulb
cmp
cltd
inc
add
fbld
push
dec
add
scas
jg
pop
dec
popf
fsincos
push
inc
in
rolb
push
push
mov
push
xor
push
jns
adc
dec
ja
fdivrl
xor
or
out
mov
sbb
mov
cmp
enter
insl
push
mov
daa
adc
mov
cmp
add
mov
or
push
jns
shl
push
mov
sbb
push
sbb
sbb
adcl
ret
incb
das
sbb
xor
add
rol
sahf
push
cwtl
movsl
lock
sarl
pop
pop
sbb
fsubl
clc
int
adc
xchg
movsb
xchg
push
bound
jbe
and
shlb
into
sahf
outsb
in
je
aad
es
xchg
imul
mov
scas
xchg
xchg
fcmovnu
jbe
lea
pushf
mov
sar
adc
cmpsb
and
clc
push
cmp
inc
jmp
mov
mov
outsb
xor
mov
add
clc
xchg
jl
push
lret
cwtl
push
imul
pop
sbb
in
inc
jle
adc
cmpsb
mov
es
jg
inc
and
jo
lods
cmpsl
or
fldt
test
cmp
fs
outsb
jo
mov
sub
cs
jb
cmp
push
ror
rcll
adc
mov
jecxz
jbe
jne
mov
xchg
cmpsl
cmp
mov
scas
cmp
cltd
cmpsb
bound
push
insb
arpl
into
out
adc
sub
dec
pusha
addr16
das
sub
mov
inc
dec
add
dec
sub
outsb
pop
lahf
in
imul
sbb
lods
fucompp
jno
mov
pop
inc
dec
jbe
rorl
or
pop
ja
bound
insb
xchg
xor
hlt
xor
pop
or
jmp
mov
movsl
shr
cltd
push
mov
mov
sahf
loope
or
int3
addr16
xor
adc
push
cmp
rorb
fs
imulb
in
sbb
mov
add
into
leave
out
jbe
mov
daa
xchg
stos
fdivrs
cmp
sbb
mov
dec
rcrl
mov
inc
or
movsl
lahf
jo
daa
cs
rol
repnz
leave
fisttpl
ss
mov
shrb
and
jl
jne
jbe
das
mov
fmuls
loope
into
mov
mov
out
inc
out
sbb
mov
mov
cmp
cmp
iret
cld
sub
popf
out
sbb
mov
xor
mov
fnstenv
fwait
enter
movsb
xor
adc
mov
repz
out
mov
mov
xchg
ss
leave
flds
into
js
bound
jno
movl
push
andb
mov
sbb
popf
cmp
mov
cltd
add
push
pushf
sub
push
add
mov
in
pcmpeqw
lret
mov
fsubrl
dec
push
mov
dec
pop
add
cmpsl
lret
enter
sub
mov
clc
sub
insb
dec
fdiv
enter
sbb
mov
sbb
add
ljmp
out
mov
adc
mov
das
adc
xor
mov
adc
jecxz
cmp
push
inc
inc
data16
sbb
cwtl
jmp
cmp
rcll
dec
push
nop
mov
inc
dec
or
mov
pop
in
cwtl
jp
icebp
mov
and
dec
cmp
mov
add
ret
and
mov
sub
inc
xor
xchg
dec
ret
or
aas
xchg
in
movsb
jnp
out
mov
sub
jno
cmp
cmp
pop
sub
inc
or
dec
daa
aaa
test
aam
jne
call
fdivrl
mov
fsubr
stos
inc
and
loopne
rorl
test
inc
mov
faddl
xchg
pop
gs
out
sbb
push
xor
mov
xor
add
ss
daa
ror
mov
in
inc
daa
mov
ljmp
xor
add
or
sub
in
fcmovb
lds
jg
mov
push
and
sbb
sub
or
push
push
in
in
stos
fxch
or
push
repnz
dec
xchg
xchg
inc
push
adc
popa
cld
cmp
mov
add
nop
aaa
aam
popf
loopne
adc
rclb
adc
dec
adc
xchg
test
push
mov
inc
addl
lcall
adc
lcall
mov
mov
sub
sti
sti
rolb
mov
xor
sub
je
xor
jno
bound
lods
pop
mov
scas
mov
mov
xor
lret
or
cmc
and
mov
in
inc
rcrb
mov
sub
icebp
push
je
stos
jmp
jb
movsl
or
lods
ret
scas
dec
test
into
jmp
sub
lods
cld
fmuls
int
insl
in
or
push
mov
xor
add
ljmp
stc
fnstsw
jns
sti
mov
push
inc
test
cli
xchg
int
mov
adc
cmp
mov
pop
xchg
in
mov
lret
pop
xchg
out
movsl
pop
sub
adcb
call
and
das
xorl
cmp
sub
mov
push
push
inc
orl
cmovb
push
mov
insb
cli
push
pop
jae
imull
sub
sbb
xchg
mulb
sbb
or
push
xchg
lret
push
sahf
mov
stos
mov
out
push
sbb
jae
sbb
pop
lahf
test
push
sub
mov
add
je
mov
cmp
cs
lds
cmp
mov
and
cld
mov
movsl
icebp
aaa
and
testb
ja
xchg
adc
jno
cmpsl
fldenv
xorb
jb
fdivrs
popf
xchg
repnz
hlt
or
fimull
icebp
mov
mov
or
sbb
xchg
sub
cmp
inc
insb
test
adc
pop
adc
and
mov
push
enter
inc
mov
jb
ljmp
add
int3
add
fidivrl
test
leave
and
movsb
inc
mov
cmc
jecxz
jl
dec
pop
sbb
aaa
sahf
sub
pop
mull
out
scas
popf
fsubrs
lcall
push
adc
cmp
and
push
icebp
test
movsl
jge
repz
push
push
pop
outsl
rcl
sbb
mov
jb
inc
dec
pslld
mov
js
and
repnz
cltd
lahf
inc
pop
cmc
roll
lock
arpl
out
out
pop
cwtl
jp
xchg
add
lods
sahf
pushf
mov
and
adc
dec
stos
adc
push
push
jb
shrl
xchg
jb
pop
and
sbb
and
push
dec
xchg
mov
sub
ljmp
xor
call
push
pop
lahf
imul
aas
fwait
popa
decl
cmp
and
and
mov
out
aaa
je
les
mov
xor
sbb
stos
sti
leave
sbb
lret
pop
sti
inc
lret
scas
cmp
jecxz
pop
mov
in
outsl
dec
fsubp
jmp
in
sub
mov
leave
inc
dec
xor
sbb
mov
cmp
cmp
mov
outsl
out
mov
pop
fsubs
cmpsl
mov
pop
fistpl
sub
sti
pop
repz
stc
jge
lea
jl
jnp
in
fs
and
adc
imul
push
xor
push
rorl
pop
imul
cs
mov
cld
mov
and
dec
lret
inc
fldt
adc
lcall
loop
out
lcall
jns
dec
add
mov
ljmp
outsl
xchg
es
notb
xor
ret
in
push
dec
pop
out
ret
lods
je
pop
xor
mov
js
mov
sarl
aad
scas
iret
cmp
lret
xor
das
mov
pop
leave
add
lods
adc
gs
dec
shll
mov
jle
add
hlt
ret
cmp
rcl
jne
jp
add
adc
pop
cmp
pop
dec
mov
adc
push
fistps
into
aaa
and
call
push
add
xor
pop
cltd
loope
das
ljmp
pop
mov
or
mov
gs
push
xchg
fs
out
jmp
cmc
jl
xchg
cmp
sarb
cmp
xor
push
cmovle
dec
mov
stos
jno
adc
mov
cwtl
mov
ds
dec
xchg
add
inc
dec
lahf
cs
je
sbb
cmp
mov
and
mov
scas
into
sub
xchg
bound
mov
mov
and
sbbb
jge
in
mov
test
xchg
out
mov
orb
jno
imul
mov
roll
push
int
jb
clc
stc
jle
jmp
push
sub
dec
sub
xchg
dec
cmp
lods
adc
mov
push
popf
mov
aad
mov
xchg
cwtl
iret
popa
out
outsl
push
add
dec
sahf
int
loope
loop
dec
arpl
inc
push
inc
int
in
imull
sub
push
pop
lods
xchg
jnp
inc
adc
movb
cmp
pop
mov
inc
lds
jp
shl
jecxz
pop
ret
ja
mov
fmulp
cmc
scas
negl
nop
pop
aas
inc
jae
les
int
js
into
icebp
fdivr
push
and
repz
movsl
jmp
fwait
arpl
lret
sub
scas
loopne
rcll
add
cmp
imul
mov
xor
lret
jno
js
push
rclb
adcl
mov
dec
inc
enter
cmp
xor
sbbl
pop
mov
in
mov
test
fisttpll
out
cwtl
int
pop
pushl
xchg
ret
out
adc
cmp
mov
les
push
xor
push
arpl
pop
xor
push
gs
aad
stos
icebp
mov
jns
mov
call
mov
mov
push
fidivrl
xchg
and
xor
aaa
dec
mul
mov
fidivrl
cmpl
popf
hlt
imul
dec
or
repnz
push
aas
in
out
push
lahf
sbb
out
outsl
dec
jecxz
xor
jmp
xchg
pop
fxsave
or
sub
movsl
xchg
xlat
scas
fisubrs
nop
stc
push
loop
sbb
xchg
or
sub
pop
sti
mov
imul
add
sub
out
sub
xchg
mov
cmp
or
mov
or
add
or
push
mov
fistl
loop
loope
bound
dec
loopne
sahf
jle
mov
rol
mov
jg
pop
adc
jg
inc
xlat
xor
mov
lock
mov
jge
test
mov
pop
int3
out
dec
icebp
dec
jns
popf
in
imul
pop
cmpsl
call
mov
rcr
mov
xor
popa
or
add
addr16
lahf
test
mov
push
or
test
lods
or
imul
fsubrl
mov
fsubs
add
xchg
xor
cwtl
xor
push
pop
add
mov
popf
dec
sahf
mov
addb
xchg
inc
insl
imul
xor
mull
adcb
mov
insl
mov
push
aam
out
dec
bound
add
jl
test
pop
inc
cmpsb
xor
iret
loope
lods
mov
mov
in
xchg
xlat
cmc
mov
in
mov
sbb
inc
sahf
sub
outsb
aam
xchg
dec
mov
push
es
push
push
sti
fistl
and
shlb
sbb
mov
lcall
ljmp
pop
adc
fidivs
repnz
pop
mov
insb
jne
inc
adc
scas
mov
mov
push
outsl
and
in
push
dec
dec
lret
ljmp
out
inc
fmuls
xor
fnsave
les
nop
mov
push
test
or
adc
out
fbstp
xor
js
aam
mull
aad
xor
dec
fcompp
pop
arpl
aam
dec
cmp
out
cmp
enter
adc
mov
or
pop
jmp
popf
hlt
shrl
adc
imul
out
arpl
hlt
dec
into
xchg
and
mov
fsubrl
in
insl
jno
push
int3
push
mov
dec
test
mov
icebp
xchg
out
push
cmpl
push
adc
fidivrs
loop
cmp
sub
xor
aaa
sahf
xor
sahf
cltd
clc
iret
dec
das
addr16
lret
sbb
add
inc
lock
test
cmp
push
addb
cmp
add
pop
pusha
out
outsb
sarl
mov
std
clc
in
hlt
jmp
loop
loopne
out
loope
shl
or
xor
out
subb
sti
sbb
push
xor
test
adc
xchg
mov
lret
in
in
or
and
movsl
and
popa
hlt
pop
xor
xchg
loop
inc
aaa
or
shl
sub
pop
xchg
jmp
psllw
or
clc
arpl
cmp
xchg
pushf
addr16
scas
outsb
jmp
add
add
iret
mov
sti
outsb
mov
iret
adcl
jne
imul
xor
jecxz
fstpl
pop
and
adc
or
sub
loopne
pop
rorb
cmpsl
addr16
pusha
movsb
jg
cs
xchg
rcrl
daa
inc
sbb
popa
pop
lock
xchg
xor
and
nop
sub
call
inc
jnp
loop
lret
adc
mov
dec
dec
dec
push
xchg
xchg
cmc
test
jbe
mov
nop
lret
aaa
push
out
sub
sbb
mov
add
xchg
mov
cmp
and
lock
jnp
pop
add
fnsave
ret
or
hlt
test
scas
movb
jbe
dec
jp
stos
mov
xor
ss
inc
or
mov
shll
pop
sbb
ss
fadd
in
popa
imul
xlat
loopne
rorb
sub
push
aad
inc
xor
mov
in
jb
mov
out
sarl
test
mov
stos
xorl
in
das
fisubrl
out
fisttpll
lahf
push
dec
mov
mov
push
adc
outsb
in
sar
adc
xlat
jmp
sahf
jmp
xchg
mov
imulb
jge
cmc
out
cltd
lods
test
arpl
pushf
dec
push
mov
mov
sbb
lcall
or
fists
lods
push
stos
xor
lock
sbb
in
add
push
mov
fwait
pop
in
and
xchg
into
out
mov
popf
stos
in
shll
data16
xor
jmp
push
pop
or
lret
xchg
mov
fs
aad
jns
pop
adc
push
sahf
mov
call
mov
adc
jle
cli
or
inc
fwait
xchg
push
test
in
push
popa
imulb
adc
out
icebp
push
lods
mov
fcompl
inc
sbbl
adc
jmp
dec
mov
pop
in
pop
rcl
pop
jg
xor
int
imul
sub
pop
nop
idivl
add
adc
or
data16
dec
and
jno
sbb
mov
xchg
fstps
rolb
push
ficompl
and
sbbl
call
cmpsb
lock
in
jo
mov
hlt
add
repnz
push
leave
pop
scas
out
xor
push
pop
sarb
popf
push
nop
es
jle
ret
addr16
and
cltd
dec
dec
scas
mov
sub
or
pop
adc
iret
in
pop
mov
in
xlat
call
fists
cli
aas
push
add
ret
dec
cmp
ficompl
push
pop
mov
aam
jge
lret
jg
mov
stc
mov
pop
nop
jno
xchg
lahf
fsubs
xchg
cmp
push
pop
xchg
xorl
sub
jg
call
int
pop
leave
in
inc
imul
fwait
outsl
ja
call
out
pop
call
push
ds
adc
insl
repz
out
jo
outsl
test
add
xor
push
or
inc
mov
sti
lods
mov
xor
cmp
pop
mov
out
insb
addr16
xor
bound
lods
or
stos
lcall
jns
test
xchg
inc
xor
lock
sbb
stos
mov
stos
sub
jno
add
push
or
test
lahf
leave
cmp
sbb
inc
ficoms
iret
jle
sub
inc
dec
jmp
jae
out
cmpsb
xchg
dec
dec
and
imul
scas
jmp
sub
pop
or
dec
xchg
cmp
test
sub
js
and
xlat
ret
push
push
rcrb
pop
xor
push
ret
jge
pop
mov
mov
in
clc
dec
movsl
fimull
cltd
roll
lea
mov
testb
push
test
incl
inc
ret
into
les
jge
enter
scas
cmp
mov
lret
push
xor
cmp
loope
jno
icebp
pop
jo
mov
add
rcl
and
inc
lret
and
mov
sahf
mov
sbb
dec
xadd
addr16
lea
mov
push
xor
cmpsl
lret
lods
mov
dec
fdivl
cltd
mov
push
out
fdivl
jns
je
pop
popl
sub
pop
sub
cmp
xchg
into
fistl
gs
jp
or
sahf
dec
inc
loopne
cmpsb
lcall
jmp
pcmpeqd
xchg
xchg
aaa
aam
jb
mov
cwtl
mov
testb
adc
push
insb
add
adc
jmp
sarl
pop
inc
sub
aam
stos
ss
inc
nop
loop
stos
js
pop
and
jmp
push
or
cmpsl
mov
or
clc
addr16
mov
test
addr16
inc
aam
or
lock
out
mov
insb
add
out
test
hlt
fadd
sub
test
add
movsb
sbb
outsl
or
mov
insb
push
sub
xchg
mov
cwtl
cmp
xchg
sbb
xlat
jb
sub
je
adc
lret
pop
lcall
adc
mov
repz
pop
pop
test
sbb
testb
jmp
jnp
push
movsl
fldenv
icebp
lock
inc
sbb
jns
and
lret
mov
ss
or
lods
movsl
xchg
xchg
lcall
lret
dec
fnstcw
jle
int3
in
aaa
pop
je
popf
sahf
pop
pop
cwtl
cmp
mov
xor
mov
xor
dec
adc
push
ret
out
xor
pop
das
mov
xchg
fcomip
into
mov
mov
sub
rcrl
test
ret
mov
repnz
inc
out
rol
out
xchg
fcompl
pop
and
movsl
adcb
sahf
leave
xlat
and
ret
pop
mulb
outsb
fdivs
daa
xchg
dec
ss
inc
push
bound
pop
add
test
inc
jmp
dec
sbb
lods
aas
dec
or
das
xchg
xchg
xor
sub
and
mov
mov
push
jecxz
xor
adc
fisttpl
clc
in
jmp
cmpsl
jb
sbb
fwait
mov
and
mov
enter
pop
stc
addr16
mov
lds
rcrb
sbbl
daa
mov
fmulp
sub
xor
pusha
xchg
push
sub
mov
pop
ljmp
jge
push
pop
mov
xor
insl
lret
sbb
sbb
sbb
cmp
cs
inc
sbbb
inc
xchg
jmp
icebp
shrl
adc
lods
sahf
dec
xlat
jmp
cmp
ja
cmp
sbb
pop
pushf
dec
and
inc
gs
adc
pop
jg
lds
push
fstl
test
push
aam
daa
mov
and
sti
sub
lret
and
loope
mov
std
push
pop
jnp
movsl
xor
daa
ret
cli
cmc
inc
mov
cs
xor
aad
mov
stos
test
lock
push
orb
xor
adcl
xor
adcl
ret
aas
jb
mov
mov
or
lods
pop
sahf
ret
mov
gs
int
xchg
xor
jno
sub
push
cmp
dec
inc
movb
pop
sahf
test
push
outsl
xor
inc
lock
xor
pushw
mov
loop
sti
xchg
cmpsb
xorl
mov
sbb
add
inc
push
mov
je
fwait
mov
mov
cmpsb
test
addr16
cld
out
fsubl
cmpsl
dec
mov
mov
and
in
cwtl
jle
pop
pushf
mov
inc
dec
sbb
addl
pop
xchg
cmp
daa
xchg
divl
push
push
les
iret
test
arpl
cmp
stc
jge
add
rclb
or
adc
incb
xchg
jge
stos
pop
dec
xchg
add
mov
add
sub
mov
je
outsl
jo
cmpsb
addr16
mov
sub
lds
add
shlb
imul
cmp
loop
incb
insb
je
pushf
bound
testb
jmp
mov
out
or
out
leave
pushf
ja
xor
pop
jle
cli
fs
jae
call
sub
add
dec
negl
pusha
das
jecxz
lock
xchg
mov
and
imul
sbb
nop
lahf
fisubrl
aaa
add
push
mov
subb
inc
fwait
es
out
cmp
ss
movsb
movsb
mov
xchg
jns
cltd
mov
mov
loopne
addr16
cltd
nopl
aad
adc
jp,pn
jno,pt
dec
push
shrl
pop
inc
sub
pop
in
test
mov
scas
sub
xor
and
pushf
rcr
out
and
leave
nop
lahf
out
sub
or
xor
ret
movsb
mov
xor
cmpsl
in
jle
mov
aaa
test
jo
gs
cmpsb
mov
mov
jg
push
jl
xchg
hlt
jnp
xor
loop
int3
aaa
jmp
daa
lods
rcl
pop
repz
xor
cmp
sbb
or
xchg
fmuls
je
xchg
or
mov
popf
add
je
ret
push
scas
scas
ljmp
ret
inc
es
insb
jg
icebp
mov
fldenv
adc
or
lret
push
push
push
or
and
scas
add
add
sub
sti
les
lods
call
pop
mov
mov
xchg
inc
mov
inc
comiss
jp
cwtl
push
insl
adc
paddusw
xlat
shrb
sbb
les
inc
shlb
sbb
adc
jl
and
in
sbb
push
mov
inc
adcl
cli
mov
mov
xacquire
gs
call
loop
sti
sub
or
mov
xchg
jnp
jle
outsb
or
xor
adc
dec
adc
and
xchg
sub
in
mov
adc
pop
iret
mov
and
jb
ror
jmp
push
loopne
popa
or
mov
shl
jnp
cld
adc
push
jnp
out
pop
movsb
movsl
jmp
fs
cli
ds
call
outsl
mov
outsb
lret
cmp
vmptrst
in
fldl
mov
push
xchg
push
es
sub
inc
mov
push
test
gs
into
sbb
sbb
or
push
xchg
out
mov
iret
mov
add
in
mov
xor
mov
jp
push
ljmp
daa
push
jmp
jae
gs
xchg
lods
lock
repz
add
lods
mov
addb
pop
fstl
scas
movl
adc
enter
inc
sub
in
lcall
dec
push
sbb
lods
pop
pop
dec
clc
ret
mov
push
fildl
std
mov
push
mov
cli
lahf
nop
or
aaa
mov
mov
int
jno
jnp
mov
das
xor
push
mov
push
out
mov
mov
out
aad
and
adc
adc
sub
pextrw
dec
addb
mov
sub
enter
pop
mov
out
push
cmpsl
xlat
mov
sbb
sahf
xchg
xor
aam
pop
loopne
pop
push
pop
sub
inc
mov
pusha
inc
mov
xor
sub
fstpl
jns
loop
fnstcw
add
add
gs
adc
cltd
sub
xor
jmp
add
jns
and
leave
cmp
mov
sub
test
test
add
mov
mov
aaa
out
adc
sbbb
or
inc
cmp
movsb
ss
adc
mov
ja
push
cmp
dec
cli
adc
scas
rolb
adc
mov
mov
clc
in
vpsubusw
mov
test
push
out
mov
pop
lret
data16
xor
cltd
testl
bswap
loop
pop
push
cmove
push
cmpsb
sahf
mov
fcomps
xor
aas
movsl
sbb
mov
sub
push
sbb
in
test
icebp
inc
mov
dec
sub
lahf
fisttps
in
or
icebp
push
psubb
movsb
enter
push
push
mov
jne
sub
cmp
fs
sbb
jo
mov
lods
mov
mov
jecxz
cli
push
mov
call
insb
inc
xchg
pop
xor
sub
test
cltd
cld
out
stos
add
movsl
test
mov
pop
push
push
gs
mull
mov
mov
cs
outsb
mov
lock
push
lret
sarb
out
pop
xchg
add
out
fwait
jle
sub
sarb
jae
sub
push
fstpl
pop
adc
lods
jns
ljmp
sub
xchg
out
imul
mov
push
popf
xchg
lods
test
mov
pop
inc
hlt
repz
mov
cli
sarl
add
mov
push
inc
add
sti
rclb
jl
mov
push
xlat
mov
pmulhw
lods
and
push
int
add
jno
pop
xchg
mov
adc
dec
adcb
mov
adc
shll
stos
ljmp
popa
mov
push
inc
push
pop
sbb
adc
pushf
or
push
repnz
or
in
push
pop
or
xor
xchg
xor
dec
adc
ds
cmp
cmp
pop
sbb
push
movsl
rcrl
xor
fiaddl
dec
sbb
mov
xchg
xor
movsl
inc
cmp
cmp
jne
pop
or
pop
je
pop
sub
xchg
movsb
lock
les
lahf
jg
outsl
xchg
or
aas
jl
dec
mov
repz
daa
xchg
ss
jp
push
imul
pusha
ds
arpl
fdivl
es
and
mov
dec
ss
in
insb
push
ljmp
mov
lea
mov
mov
cmp
outsb
mov
push
mov
mov
xlat
pop
lcall
mov
xlat
hlt
mov
mov
outsl
jbe
adc
mull
out
cmpsl
outsb
inc
jg
jo
lcall
je
dec
and
sbb
icebp
cmpsl
dec
imul
pushf
mov
nop
sub
fwait
mov
sbb
xchg
dec
ljmp
pop
out
dec
push
or
xchg
jmp
sbb
jne
idiv
stc
neg
sbb
push
mov
mov
mov
push
sub
std
adc
jmp
push
mov
int
jbe
data16
nop
stos
push
shrl
popf
pop
sahf
and
mov
sbb
sub
notl
jno
lahf
loope
lret
pop
in
mov
mov
je
push
add
ret
dec
jb
push
adc
inc
fs
inc
inc
mov
mov
mov
sbbl
xchg
add
push
pusha
dec
adc
arpl
mov
popa
dec
into
fisubs
cs
push
xor
sbb
xchg
sub
mov
xchg
jb
mov
fwait
adc
scas
sbbb
dec
test
push
push
push
xchg
gs
das
add
or
movsl
lock
add
in
push
mov
test
call
adc
cmp
movsb
mov
jg
aam
dec
lret
dec
cmp
lret
addl
ja
cld
fsubrs
aaa
sub
pop
loope
xor
jbe
cmpsb
cmp
std
xchg
stos
sahf
dec
fistpll
mov
jle
xchg
inc
cmpsl
sbb
jnp
dec
jnp
mov
mov
stc
mov
and
loopw
xlat
stos
popa
pop
mov
cmpsl
mov
aas
xor
repnz
inc
dec
inc
ret
cmp
xor
inc
das
stos
aam
loope
xor
mov
dec
mov
and
mov
bound
push
sub
cwtl
adc
aam
sbb
fnsave
cli
sub
push
cmpsb
pop
pop
inc
ljmp
dec
pusha
pop
mov
roll
jecxz
stc
testb
into
scas
jp
incl
lret
aas
cli
data16
mov
inc
insl
pushf
jmp
inc
cmp
dec
insl
jbe
addr16
dec
dec
jns
inc
push
mov
lods
xchg
shrl
das
lea
pop
test
jns
sub
int3
mov
mov
ljmp
jle
orl
les
push
adc
cmp
jmp
pop
imul
xchg
stos
mov
cmpl
arpl
hlt
jecxz
lret
mov
mov
fildl
out
pop
not
jmp
in
pop
xchg
pop
sbb
mov
mov
cmpsl
mov
adc
cmp
out
dec
adc
jmp
mov
push
push
es
add
push
mov
movsl
in
fildl
pop
lds
es
fisttps
jo
cmpl
fcmovb
push
lods
int
xchg
je
or
sarb
mov
push
andl
adc
aas
loopne
and
aam
mov
jge
or
xor
push
rclb
jecxz
pop
sbb
pushf
jb
movsb
push
jecxz
push
or
sbb
mov
sbb
inc
in
inc
je
sbb
mov
aaa
and
sub
ljmp
out
cmp
into
mov
popa
jno
mov
xor
add
repnz
inc
or
insb
dec
inc
pop
shrb
or
movsb
mov
ret
mov
stos
xchg
nop
sbb
lods
das
adc
movsl
fisubrl
in
jmp
and
xor
or
pushf
scas
mov
jae
push
cmp
loope
ret
cmp
test
pop
cmpl
mov
das
or
call
ret
pusha
repz
add
sbbb
test
jne
btr
dec
inc
sbb
pop
ret
jmp
fwait
mov
dec
sub
inc
lea
shufps
mov
dec
push
ficoms
pop
stos
in
cli
inc
mov
dec
xchg
stos
repnz
dec
sbb
xchg
gs
lea
decl
daa
es
idivl
shll
inc
xlat
push
test
xor
xchg
repnz
sub
adc
fsubrs
adc
sahf
aam
rorb
sub
jnp
ja
arpl
insb
testl
add
test
jecxz
inc
jge
jecxz
inc
and
movsb
imull
jmp
cli
inc
mov
jl
jno
scas
mov
clc
jns
imul
mov
dec
pop
testb
ds
mov
mov
add
icebp
rcrl
xchg
es
repnz
push
inc
adc
jo
imul
outsl
adcl
push
inc
cltd
xchg
scas
idiv
test
dec
mov
lcall
sub
cmp
lret
pop
add
ret
loopne
push
rorb
sub
pushf
cmp
int3
pop
sub
sbb
xor
xor
in
jmp
jbe
jg
mov
test
imul
xchg
in
lods
test
mov
test
adc
push
jle
jb
xchg
leave
movsb
mov
push
cmp
mov
pop
mov
and
adc
pop
int
xchg
sbb
adc
stc
lock
pop
test
or
xchg
xchg
in
or
pusha
fisttpll
xchg
cmpsl
cmp
and
push
lret
add
inc
rolb
sub
andb
cmp
push
lods
inc
add
cmp
mov
arpl
push
vmovups
ljmp
jge
pop
push
dec
dec
push
repz
fnstenv
cmpb
cli
popf
mov
or
in
nop
out
inc
mov
stos
xlat
mov
mov
mov
sahf
mov
jp
pop
jge
pop
mov
fst
jg
lret
mov
mov
test
push
movsl
lock
ret
dec
jle
outsb
ja
dec
sti
loope
fcmovnbe
hlt
dec
outsl
push
iret
pusha
outsb
xchg
mov
cmc
int3
mov
jmp
pop
sarl
popf
mov
pop
lcall
ret
test
jle
cmpsl
in
lods
or
xor
lcall
add
add
clc
mov
inc
clc
fadds
inc
rcr
pop
clc
mov
jmp
mov
loope
aaa
pusha
jb
mov
lret
cmpsb
jl
add
js
pop
push
scas
jecxz
fiaddl
pop
xchg
jle
scas
call
sbb
aaa
mov
ret
push
sub
inc
fmull
lods
shl
sub
stos
mov
int
std
dec
es
rorl
dec
in
mov
ja
pop
and
mov
push
rep
jno
outsb
dec
and
sub
xchg
stos
inc
in
sti
lcall
jno
mov
mov
mov
sub
repz
sahf
jmp
pusha
lds
mov
test
and
mov
les
sbb
out
xlat
fcomps
add
dec
mov
je
xchg
es
or
dec
jmp
xchg
cmc
push
rcrl
imul
fmull
clc
inc
lret
lret
rolb
pop
hlt
ffreep
fidivs
int
jae
sbb
out
push
out
js
in
jecxz
push
jg
out
inc
mov
push
inc
test
lahf
adc
inc
push
push
ret
pop
pop
pop
add
cmp
add
jecxz
xor
mov
stos
out
shll
mov
fsubs
push
fs
sub
sbb
test
out
cmpb
scas
xor
call
and
lret
fcomps
negb
or
outsb
stc
shrb
loopne
mov
stos
sub
xor
and
inc
mov
repz
pushf
xchg
push
setp
popa
jae
xor
mov
pushf
jl
pop
scas
pop
fldt
lret
sarb
iret
dec
subl
rclb
mov
lcall
cs
lahf
mov
int
outsl
ja
inc
xchg
sbb
pop
mov
loop
xchg
data16
push
sbb
mov
dec
xchg
lahf
cmpsb
pop
pop
mov
fsubrl
jmp
ljmp
sub
xchg
test
fadd
mov
xchg
out
jns
and
icebp
gs
xor
fistpll
sbb
mov
decl
or
and
pop
adc
gs
and
pop
xchg
lahf
ljmp
fs
cmc
insl
fwait
loopne
les
jbe
mov
mov
lahf
lds
add
aaa
fwait
cmp
je
popa
pop
cmpsl
cwtl
out
in
out
add
push
xchg
add
mov
loop
jmp
xorb
jl
lods
dec
sbb
and
xchg
lret
xor
pop
mov
or
insb
sub
gs
lea
test
test
jl
xlat
jns
repz
inc
pop
or
mov
sub
shlb
out
inc
push
sbb
sub
lret
or
pop
hlt
dec
mov
dec
sarl
subl
xor
jbe
imul
loop
sub
sub
push
push
repnz
inc
int
push
test
stc
out
or
push
and
test
aad
mov
push
push
xor
jae
or
repz
rclb
jle
add
mov
xchg
push
shrl
jge
push
fdivrp
loopne
adc
shrl
stos
loop
or
stc
or
push
mov
cltd
shlb
jecxz
clc
inc
dec
lret
and
dec
mov
lcall
add
dec
cmp
push
in
shll
fcmovu
push
fcoml
jg
out
aas
dec
xlat
inc
mov
outsl
cmp
cwtl
or
cmpsb
mov
dec
xchg
pop
cmp
lods
ds
shl
and
push
cmp
imul
arpl
xchg
xor
jl
out
inc
mov
nop
shlb
lock
ret
scas
mov
push
repnz
aaa
stos
jo
inc
xor
jne
push
arpl
loopne
cmp
emms
and
mov
fcomp
mov
or
mov
fisttpll
faddl
sub
mov
push
stos
push
cmp
andb
pop
xchg
jg
fldt
mov
incl
adc
xor
iret
int3
push
stos
mov
push
rcll
jl
cli
ret
cmc
mov
jae
xor
add
mov
mov
sarl
jmp
mov
sbb
aam
mov
inc
mov
loopne
push
inc
pop
cmp
ljmp
into
ljmp
bound
jmp
pusha
jge
add
leave
push
es
in
mov
dec
jle
aas
mov
inc
cmp
push
mov
jecxz,pt
sub
push
ret
jb
add
mov
xchg
test
xchg
mov
das
jbe
js
aad
adc
sub
and
stos
ja
gs
and
pop
int
subb
or
into
push
test
movsb
mov
popf
mov
or
mov
and
sbb
out
add
mov
jmp
inc
das
fmulp
cmp
jae
lea
lcall
xor
sbb
add
mov
ret
jo
add
add
or
stos
nop
lcall
inc
iret
mov
mulb
mov
mov
xchg
rclb
call
insb
pop
mov
jbe
stos
out
jb
add
test
lcall
rorb
inc
add
push
and
call
sbb
loope
pop
add
mov
sub
inc
jecxz
jge
sub
les
cmp
in
lret
cmc
sbb
into
add
repz
mov
sbb
push
adc
push
cmp
mov
cld
and
and
icebp
inc
push
orl
fsubrs
fsubl
xchg
jno
jne
test
daa
es
rol
adc
xor
loop
test
ss
cli
jl
cmpsb
in
movsl
pop
push
cmc
sarb
add
nop
test
mov
sbb
pop
loop
pusha
dec
or
mov
pop
sub
sub
or
mov
and
sub
popl
sub
pop
mov
xor
testb
xchg
fisttpll
mov
mov
outsb
loopne
in
data16
frstor
es
arpl
repnz
sahf
jge
xchg
fwait
dec
xlat
mov
aaa
xor
lea
push
xlat
sub
inc
pop
imul
pop
scas
sub
lods
xchg
fistpl
in
shr
mov
push
push
and
adc
or
rcrl
shrl
push
mov
mov
jp
cmpsl
sub
cltd
movsl
cmp
in
sbb
xchg
mov
mov
sub
cmp
xchg
dec
push
mov
fsts
mov
aaa
cmp
int
cld
xchg
jmp
mov
hlt
aaa
orl
aaa
mov
xchg
sub
xchg
and
pslld
dec
mov
sub
stos
pushf
sub
xchg
addb
movsb
nop
fwait
dec
into
xchg
imul
adc
jl
cwtl
mov
hlt
add
inc
les
dec
xchg
adc
addb
pop
sub
fwait
mov
or
sub
in
push
lods
sub
jmp
ljmp
cmp
add
mov
insl
add
and
pushw
aaa
sub
xlat
sbb
ds
repz
jl
dec
daa
imul
roll
add
sub
leave
addr16
fwait
lea
cmpsb
in
xchg
xor
fildl
aad
xor
test
into
mov
or
fs
inc
dec
cmp
jne
dec
jp
xchg
adc
ds
push
daa
sti
imul
stc
pop
imul
sub
jne
mov
loopne
and
or
push
inc
pop
push
xchg
fdiv
cmp
add
mov
cs
in
mov
ss
rcrb
bnd
add
popa
fldenv
xor
adc
stc
adc
mov
std
lret
lock
jg
xchg
mov
pop
push
in
lahf
pop
shll
lock
xchg
inc
cltd
out
xchg
push
push
dec
inc
add
mov
push
jmp
xchg
dec
xor
push
push
or
adc
sbb
xor
push
enter
mov
lahf
lret
xchg
jnp
mov
jmp
sbb
loope
push
sub
jno
xlat
rcrl
pop
adc
jae
xchg
or
or
adc
das
imul
fs
sub
rcrb
jno
fndisi(8087
pop
lds
or
jno
daa
inc
es
in
xor
gs
cwtl
out
or
pop
pop
jae
insl
sbb
lock
and
xchg
sbb
cmpsl
jne
out
adc
popa
jge
jne
mov
loope
inc
mov
je
enter
pop
xchg
cltd
xchg
test
xchg
and
fs
insb
lea
out
sarb
inc
insb
inc
sub
xchg
in
fistps
and
outsb
jb
xchg
rol
roll
ss
imul
shrb
aaa
fsubl
daa
or
insb
pop
aaa
out
adc
std
jecxz
push
sub
shlb
stos
push
push
mov
testl
jecxz
dec
inc
or
or
jb
sub
das
xor
cmp
xchg
test
enter
mov
sub
fsubrl
hlt
pop
push
jp
jbe
pop
adc
das
dec
fcomps
cmp
and
pop
leave
mov
mov
out
mov
and
sbb
lods
scas
leave
jp
andl
push
scas
jecxz
call
or
and
daa
daa
jo
xchg
es
xchg
sbb
push
fld
popf
and
cwtl
shl
loop
lret
cmpsb
mov
jg
fxam
rorl
jl
hlt
sbb
adc
mov
lds
sahf
imul
js
sub
pop
pop
mov
push
mov
dec
jl
mov
adc
push
push
push
xchg
loopne
or
mov
fwait
sti
push
xorl
mov
test
jo
and
mov
popf
or
jbe
icebp
stc
sbb
pop
mov
pushf
lock
dec
jnp
mov
push
xchg
jno
push
mov
loope
sarb
popa
inc
fs
insl
stc
cmp
pushf
hlt
mov
mov
jb
push
mov
arpl
add
cmpsl
sub
sub
rcr
jbe
lods
fcompl
decb
aaa
push
jne
pmullw
outsb
jbe
mov
jmp
and
push
sbb
fwait
ljmp
in
mov
dec
cmpsl
or
sub
jl
repz
sub
pop
push
ret
or
cmp
jbe
mull
mov
inc
nop
fsubr
mov
call
or
iret
mov
les
adc
fstpl
fdivl
sbbb
leave
ja
xor
sub
repz
push
xchg
in
mov
out
stos
cmc
jl
mov
xchg
xor
sbb
push
insb
xchg
stos
pop
bound
mov
mov
je
movsl
das
inc
icebp
push
xor
xor
add
push
xor
lret
jle
mov
ret
cmpsb
sti
cmpsb
rorl
jge
pop
xchg
scas
sub
mov
inc
jge
sub
cmp
imul
mov
rolb
jmp
cli
cmp
pusha
loop,pt
int
mov
inc
pop
leave
mov
adc
std
std
imul
sub
xchg
enter
cmp
push
mov
pop
sarb
lods
imull
out
cmp
pop
or
jle
xchg
test
ficompl
insb
enter
ret
fwait
inc
sub
incl
shl
lcall
adc
call
adc
sti
cmpsb
jl
movsb
or
add
stos
insb
jo
xchg
nop
jl
adc
jge
adc
mov
sbb
mov
sti
addr16
out
xchg
pop
dec
mov
jecxz
gs
ficoml
movsl
jl
add
loopne
xchg
mov
fisubs
xchg
and
sti
in
out
jmp
add
or
lahf
push
push
je
fcmovu
pop
push
and
cmp
cmc
add
aad
test
pop
add
xor
jecxz
xor
jns
hlt
mov
cmp
xchg
xchg
fbstp
pop
cmp
jecxz
or
push
je
mov
scas
insl
mov
shl
xchg
pop
sbb
mov
sbb
jp
mov
sti
jo
test
icebp
jl
jl
cs
arpl
js
xor
movsb
sub
fisubrl
or
stos
testb
pop
xchg
nop
sbb
push
mov
cmpsb
mov
pop
and
jno
xor
mov
movsl
lret
inc
jae
mov
lock
ss
sbb
jnp
dec
dec
mov
xor
adc
dec
push
xchg
xlat
clc
mov
mov
mov
xor
inc
sub
xchg
rolb
inc
mov
mov
in
add
shrb
in
dec
mov
aas
aad
jl
int3
addl
jmp
stos
xorb
bound
sbb
mov
pop
cld
sbb
rcrb
inc
pop
push
lcall
push
inc
out
add
push
inc
insb
fsubr
add
cmpsb
mov
rcll
mov
bound
shr
imul
add
movsb
sbb
xchg
adc
pop
lods
xchg
pop
loope
mov
mov
mov
jg
hlt
fidivrl
inc
xchg
int3
movsl
into
jnp
call
mov
lods
sub
sbb
rcll
cmpsl
out
add
or
pushf
or
arpl
sub
iret
fwait
xchg
aam
std
shlb
imul
mov
lock
lahf
cmp
cmp
mov
sbb
sub
xor
shr
clc
cmp
push
cmp
inc
push
pop
test
sbb
add
sbb
jp
rol
nop
mov
sbb
xor
mov
mov
fwait
ss
mov
pop
adc
je
shr
repnz
fstps
xor
pop
popa
xor
dec
sbb
fs
leave
xchg
fsubp
pop
mov
enter
leave
jge
xchg
out
je
inc
ds
call
cmp
insb
adc
addr16
add
pop
sub
sti
jl
notl
or
fwait
int3
aas
xor
jo
push
mov
sbb
jns
push
loope
and
and
sub
mov
sbb
xchg
rolb
mov
repnz
repz
xor
dec
rclb
test
loopne
in
out
cmp
xchg
cmpsb
push
ficompl
scas
arpl
fs
cmp
pop
cmpsl
fcom
pop
sbb
cmpb
imul
or
lahf
in
cmp
outsl
pop
adc
cmp
scas
dec
leave
dec
push
dec
mov
popf
int3
es
mov
leave
enter
inc
pusha
cmp
mov
addl
or
lea
rclb
jmp
xor
test
jecxz
aad
cmc
addl
mov
xor
push
sbb
xchg
fistpl
fstl
sbb
adcl
pusha
imul
mov
test
add
mov
push
sbb
in
fldl
in
icebp
mov
xchg
fnstenv
or
mov
push
lds
xchg
jmp
arpl
pop
add
add
mov
ljmp
dec
cwtl
mov
sub
arpl
mov
fcmovb
add
sbb
mov
sahf
inc
xor
sub
pop
mov
or
movsl
pop
add
push
cltd
lret
shrl
jo
repz
xchg
fdivs
xchg
push
pop
sbb
aaa
movsl
arpl
or
cmpsb
xchg
pop
ret
mov
adc
mov
pop
inc
iret
mov
into
je
xchg
decl
hlt
dec
std
rolb
test
sub
jmp
sub
call
or
or
push
daa
sub
mov
mov
mov
insb
xchg
dec
sbb
xchg
dec
pop
jecxz
ds
sub
das
cli
dec
data16
dec
clc
xchg
sbb
xlat
sti
cs
push
dec
cmpsl
xchg
cmpsb
dec
add
pop
das
adc
adc
loope
rcll
pop
adc
jecxz
cli
nop
xor
sub
ret
add
bound
cld
inc
jmp
mov
in
push
sbb
lods
movsb
rcrl
cmp
in
rcll
inc
lea
cmp
out
add
or
xchg
in
lcall
dec
push
imulb
pop
in
push
add
jge
std
mov
xchg
xchg
lock
add
clc
and
cwtd
pop
in
push
pop
imul
icebp
add
stos
jnp
rorl
ds
js
fwait
mov
and
ss
aas
pushf
push
xor
push
pop
cmpsb
xorb
xor
ret
mov
outsb
es
jge
scas
push
and
xor
test
aad
cmpsl
mov
dec
lret
pop
pop
fwait
sub
jecxz
push
pop
ret
add
adc
cltd
gs
or
xor
pushf
cmp
insb
xor
adc
cmpb
pop
lods
jo
cli
mov
call
iret
mov
sbb
xchg
cs
repz
push
sub
push
push
rcrl
xchg
imul
push
repnz
fs
adc
lods
mov
push
fisttps
fs
jns
inc
lock
sbb
loope
fimuls
add
ja
out
in
pop
pushf
jg
push
dec
xor
jmp
std
push
aad
insb
hlt
stos
imul
jg
mov
mov
enter
icebp
jno
cld
vphaddwd
and
scas
sub
into
nop
sub
in
out
bnd
inc
and
push
in
lods
js
inc
inc
lret
xlat
sti
das
mov
or
xorl
mov
fstpl
lahf
mov
jb
scas
dec
mov
pop
dec
and
pop
insb
nop
push
push
cltd
mov
inc
loopne
mov
xchg
aas
sbb
cwtl
imul
pop
jae
xor
inc
into
lret
imul
aas
leave
aam
and
lret
mov
and
xor
xor
adc
sub
sub
aaa
lcall
xchg
mov
xor
stos
rol
adc
je
mov
cmpsl
mov
lcall
gs
repnz
mov
ja
cs
push
mov
faddl
and
test
pop
pop
sub
hlt
es
js
dec
adc
divb
mov
mov
das
add
shl
nop
jmp
cmp
in
decl
jecxz
adc
sub
mov
jg
cmp
and
insl
or
pop
pop
adc
cmp
xchg
jmp
and
mov
pop
fsubrl
pop
xlat
in
or
sahf
push
ror
hlt
mov
push
shll
mov
fidivrs
movsl
xor
roll
jns
add
icebp
sti
xor
cmp
pusha
incl
sbb
pop
jp,pn
push
add
mov
pusha
pop
ffree
mov
inc
sub
loop
sahf
sti
pushf
adc
add
pop
sub
dec
in
sbb
push
jmp
and
fcomp
fdiv
push
fldl
dec
insl
sbb
sub
cli
bound
or
stc
ds
cld
ret
gs
mov
leave
and
std
sub
lods
inc
jno
lea
push
cs
inc
xchg
jae
cmp
imul
ss
mov
data16
insl
ret
pop
mov
xor
mov
sbb
inc
mov
je
gs
or
push
roll
aas
jg
cli
stc
xlat
int3
mov
cmp
jbe
repnz
das
or
fimull
or
cmp
add
inc
cmp
xor
outsb
cwtl
xchg
push
popa
sahf
pop
leave
cmc
jge
xchg
inc
push
cmp
ss
push
sub
adc
mov
out
or
inc
pop
mov
shl
cmp
mov
dec
negl
insl
lea
shrb
scas
stc
jbe
ret
xorb
mov
shll
jle
xchg
sub
cltd
mov
pop
jbe
stc
or
mov
adcb
shrl
inc
jno
xchg
xlat
scas
out
call
negl
dec
mov
mov
aad
mov
sbb
loope
lods
jbe
mov
mov
stos
add
dec
or
test
xchg
sbb
push
stos
pop
xchg
push
push
scas
pop
in
into
xchg
push
xchg
or
xchg
aam
xchg
and
cmpb
sub
pop
mov
jne
popa
nop
std
fisubrs
inc
mov
test
pop
movsb
ret
fdivl
jne
jae
cmp
pop
xor
es
stc
mov
lock
shlb
rcrb
lods
cs
imulb
jmp
jmp
fs
mov
add
or
xchg
xlat
repz
push
mov
ret
fcomps
pop
loopne
xor
vpmaxub
xchg
pushf
adc
int3
pop
xor
lods
pusha
cmp
cmp
mov
jecxz
mov
add
inc
cmp
shlb
sbb
in
cmp
fildll
fnsave
loope
out
fsubl
cmpsl
nop
and
mov
dec
mov
aas
imul
testb
repz
mov
mov
dec
push
testl
dec
out
cltd
jbe
in
test
adc
das
daa
imul
icebp
testb
sbb
xchg
enter
mov
out
pop
cmp
cmp
popf
pop
test
jb
xchg
outsb
dec
idivb
flds
in
pop
out
ret
cwtl
aad
call
cmp
test
push
aad
mov
mov
fistpll
jbe
jmp
cmp
cltd
cmp
adc
xor
mov
in
mov
insb
js
in
pop
aas
jb
cmp
mov
outsb
inc
str
jmp
out
xor
jbe
xor
hlt
xor
jno
mov
or
pop
cmp
jne
cmp
out
cmpsb
cmp
pop
xchg
or
push
adc
pop
push
pop
fs
imul
mov
add
ss
xor
dec
xchg
lret
adc
add
das
push
arpl
xchg
ljmp
jns
gs
psllw
mov
ljmp
xchg
int3
sarb
sbb
into
addr16
cmpsl
sub
push
test
lea
rcr
notl
cwtl
fdivrl
or
cmp
mov
aam
rcl
lret
fcomip
les
mov
out
bound
daa
popa
lret
xchg
in
in
jo
xchg
mov
test
pop
lahf
pop
test
jne
imul
xchg
dec
into
jae
sbb
mov
mov
mov
and
sti
cmpsb
dec
sbb
insl
push
popf
or
pop
fxch
cmp
pop
mov
stc
dec
out
adc
ds
pop
pusha
sbb
jmp
cmpl
fistpl
aam
sti
jp
pop
cmp
mov
mov
sti
imul
sub
mov
lock
inc
adc
loopne
add
adc
inc
sti
xchg
mov
leave
fmuls
sti
ljmp
xchg
or
dec
mov
xchg
xor
out
call
mov
mov
inc
and
iret
lcall
pop
sti
and
mov
and
popf
ja
cmpb
lods
inc
xchg
adc
adc
push
test
loope
dec
gs
mov
pop
adc
pusha
inc
outsl
out
int3
xchg
movsl
ja
ja
shll
insb
aaa
scas
mov
fwait
enter
inc
inc
popa
fnsave
xchg
push
test
xchg
mov
add
shl
inc
enter
orl
inc
dec
mov
pusha
dec
cmp
sub
mov
fwait
pop
xchg
scas
pusha
aas
mov
flds
nop
dec
pop
into
rcrl
jg
lods
and
xchg
insb
adc
loopne
cltd
mov
pop
mov
in
dec
icebp
adc
mov
sub
sbb
aam
lcall
gs
jno
add
in
jg
nop
xchg
mov
cmp
fidivl
mov
repz
adc
out
xor
movsb
cld
xchg
mov
cmpb
adc
stos
js
push
pop
xchg
or
cmp
aad
lret
xor
dec
imul
mov
sbb
sub
mov
mov
pop
cmp
popf
dec
jo
xlat
jo
dec
xchg
sbb
ljmp
inc
scas
xchg
push
ficoms
stc
popf
cmpsl
and
mov
imul
fnstsw
sbbl
pop
bound
push
xchg
sahf
loop
in
sbb
xchg
sub
sub
xor
imul
push
nop
outsb
rcr
lahf
outsb
and
pop
rcr
ja
outsb
cmp
and
adc
stc
pop
jle
fs
mov
push
mov
mov
lods
outsl
clc
dec
outsb
ret
cmp
mov
adc
cmp
and
inc
mov
mov
cltd
pop
sbb
xchg
ja
lods
loopne
adc
xchg
hlt
mov
mov
dec
jbe
jae
lahf
cli
push
push
jge
negb
outsl
pushf
cld
ret
in
fdivs
or
cs
lahf
or
stc
stc
repnz
push
jno
adc
into
add
repnz
cmp
imul
shr
cmp
and
ret
pushf
test
mov
int3
popf
jne
cmp
or
or
mov
int
into
popf
loope
push
lret
inc
fadds
cwtl
ficoms
les
fbld
jne
ljmp
dec
lods
mov
rol
lock
add
fdivrl
js
xchg
xchg
in
int3
test
and
add
popf
test
xor
cmp
push
dec
bound
sbb
call
data16
lret
pop
addr16
dec
mov
shlb
xor
daa
sub
inc
dec
sbb
in
outsl
xor
jp
rcll
dec
jbe
add
inc
cmp
or
ds
and
add
aam
rorb
mov
sahf
insl
ja
inc
jecxz
mov
sub
cmpsb
enter
ljmp
dec
ds
xchg
ja
pusha
adc
in
xor
inc
addb
sub
pushf
testb
pushf
or
inc
out
push
fwait
xlat
out
jns
inc
xor
shrl
cs
or
push
mov
repnz
mov
jb
xor
dec
xchg
icebp
mov
push
inc
inc
xor
lret
popa
xchg
loop
adc
push
aad
xor
mov
inc
xor
pop
pop
mov
or
pop
aad
movsl
ss
add
int3
xor
popf
lret
loopne
mov
daa
scas
jns
mov
rclb
popa
sub
mov
lock
in
insl
xor
call
sbb
push
in
lret
jb
jmp
inc
out
movsb
outsl
push
fistps
aas
or
push
out
dec
jl
sbb
mov
adc
mov
mov
xchg
adc
arpl
xchg
mov
sub
sub
roll
mov
sbb
into
orb
xor
pop
fcoml
nop
scas
push
pop
stc
sbb
mov
in
inc
mov
repz
ret
lock
ja
or
inc
dec
into
cmp
xor
icebp
mov
leave
insb
into
inc
jle
mov
sub
hlt
mov
inc
inc
adc
lock
cltd
xor
iret
bound
push
xchg
push
arpl
push
loopne
pusha
jo
aas
sbbb
pop
pop
call
cmp
rep
pop
and
jge
xchg
mov
mov
insb
inc
into
imul
mov
imul
aaa
sbb
call
jp
mov
mov
in
in
inc
sti
sub
sub
xchg
jg
insb
jo
stos
jge
cmc
addr16
inc
inc
adc
xchg
lcall
push
adc
mov
ja
or
cmc
mov
jne
add
daa
push
into
jae
stos
add
jg
sbb
rorl
adc
push
lea
sbb
lahf
xchg
sub
mov
ret
loope
add
or
adc
push
push
lods
movsl
iret
mov
sbb
aaa
ret
pop
out
scas
sahf
pop
fidivl
mov
aad
icebp
adc
cmp
dec
mov
sbbb
lret
dec
pop
sbb
add
cmp
and
in
and
dec
movsl
xor
scas
jle
mov
pushf
fcomi
inc
or
and
push
rcr
pop
xchg
push
in
fldenv
cmpsl
sub
pop
test
fnstenv
mov
add
jmp
and
xor
repz
pop
xor
or
mov
mov
push
test
pop
xor
ljmp
iret
insb
jo
rol
lea
popa
aaa
ret
pop
mov
es
sti
cmp
or
push
lds
pop
adcb
jmp
lock
push
insb
cmp
add
pop
pop
sbb
mov
mov
sub
hlt
cmc
xor
sbb
add
pop
inc
adc
push
push
cli
xor
mov
and
inc
or
int
je
popa
pop
jecxz
scas
decl
xchg
movsb
jg
xor
mov
jge
pop
xchg
xchg
sub
xorb
mov
add
into
stc
cmp
cltd
pop
cltd
outsl
mov
xchg
idivl
dec
hlt
adc
fisttpll
xchg
push
pop
cmp
loope
sbb
mov
sahf
lahf
icebp
jne
dec
mov
aas
test
mov
insb
aam
push
dec
fidivrs
pop
cmp
ljmp
sbb
sarl
call
cmp
mov
mov
outsl
fidivrl
mov
inc
and
mov
imul
ss
lods
ret
xchg
pop
repnz
pop
inc
and
jno
mov
das
scas
jno
outsl
sbb
lea
mov
test
inc
push
movsl
aam
repnz
fwait
cmp
push
aad
fwait
cmp
js
sbb
jecxz
mov
dec
and
mov
movsl
mov
inc
or
int3
add
int
sbb
leave
fiadds
push
mov
loopne
mov
lea
dec
dec
push
mov
gs
sbb
iret
dec
pop
ja
adc
jns
lret
cmp
xor
pop
fmul
into
push
jl
xor
push
pushf
dec
pusha
dec
testb
and
dec
push
outsl
mov
adc
dec
pop
outsb
mov
xchg
push
in
sub
adc
adc
push
inc
inc
xchg
mov
movsb
gs
ss
in
imul
mov
jns
mov
and
fdivrs
nop
xchg
lods
or
cmp
std
inc
add
add
repz
movb
xchg
pop
int
mov
test
repz
ret
xchg
dec
clc
les
jns
fcoml
in
testb
pop
mov
loopne
insl
mov
outsl
xchg
fwait
dec
mov
hlt
in
js
lret
ss
cmp
jns
in
dec
inc
jg
dec
cli
dec
mov
dec
lock
pop
push
fisttpll
sarb
or
mov
clc
inc
jne
push
in
pop
pop
icebp
add
lahf
push
sti
xchg
xlat
and
xchg
imul
es
cmpsl
add
pop
pop
mov
cltd
xor
jno
insb
cmpsb
and
fisttpll
add
jnp
mov
cmp
hlt
cmp
and
cs
inc
test
or
into
jbe
movl
aam
ss
jne
or
les
pop
pop
pop
lods
and
test
push
mov
sbb
jae
pop
add
mov
jg
xor
sub
imul
push
imul
inc
jg
push
fmul
imul
fsubrp
mov
jns
insl
cli
fnstenv
xchg
mov
xor
negl
lret
mov
loopnew
jle
push
repz
in
push
repz
xchg
mov
test
int3
stos
push
jo
shrb
push
or
cs
push
scas
pushf
and
stos
bswap
stc
insl
lds
jge
inc
and
das
nop
and
mov
jne
and
adc
push
mov
imul
loopne
adc
xchg
test
repz
js
rorl
or
xchg
xchg
and
out
stos
xchg
icebp
xchg
xchg
mov
ljmp
push
xor
mov
rorb
jl
push
lcall
nop
in
pop
mov
daa
es
jp
enter
imul
pop
add
mov
push
and
into
mov
and
scas
push
mov
cmc
add
aad
daa
loop
jl
in
xchg
insb
pop
vorps
cwtl
mov
lret
adc
je
nop
or
in
ja
cmpsb
shrl
sub
scas
andb
out
push
fs
sbb
mov
xor
jo
jge
in
xchg
and
jecxz
and
popl
jno
jnp
mov
jne
lahf
int3
fwait
sub
add
in
add
pop
inc
aad
xchg
nop
add
mov
cmpsb
jp
leave
cmp
push
xor
dec
push
mov
lock
or
lret
and
xchg
imul
fs
cmp
sbbb
pop
jmp
push
jmp
and
pop
xchg
push
push
mov
and
jle
aam
jge
test
not
int3
ljmp
pop
jbe
mov
fnstsw
or
mov
out
sub
xchg
out
xchg
sub
inc
jbe
shrb
add
pop
mov
popf
cli
pop
xor
jnp
add
les
inc
mov
aaa
mov
popf
es
sti
mov
rep
loop
lahf
icebp
xor
and
jns
dec
data16
add
fidivs
mov
iret
mov
jae
jnp
mov
add
jl
add
movb
shrb
enter
push
dec
pop
loopne
jmp
repz
mov
cmp
sbb
in
inc
idiv
jbe
scas
inc
sub
push
into
jl
cmc
inc
inc
xchg
dec
xor
push
add
aam
mov
aam
xorl
pop
les
mov
decb
and
dec
cli
pop
mov
jo
or
mov
add
or
imul
iret
in
cmp
out
insl
mov
cmpsb
pop
test
das
je
push
mov
pop
insl
jae
push
jmp
push
and
fldt
sbbb
xor
int
or
mov
je
mov
insl
nop
or
and
mov
sub
mov
popf
lds
push
sbb
cmp
popf
call
dec
out
dec
xchg
imul
mov
inc
daa
aad
inc
sub
das
mov
inc
cmp
pusha
loopne
fisttps
cmp
leave
repz
pop
add
test
stc
es
dec
cmp
out
add
fldcw
repz
xchg
inc
fimuls
sub
cwtl
iret
jmp
pop
add
or
dec
sbb
mull
mov
stos
das
pop
and
pop
pop
xor
addl
pusha
scas
lods
cmp
add
add
xchg
sub
and
jl
or
imul
or
cmp
lahf
pop
pop
lds
dec
imul
mov
mov
icebp
out
int3
add
dec
mov
mov
popf
cli
ret
add
mov
mov
cmp
jle
icebp
jge
mov
and
ljmp
mov
jbe
mov
out
cs
das
and
and
xchg
int
mov
cmp
pop
xor
mov
int3
add
rorl
ss
inc
or
lods
test
lods
mov
dec
ss
mov
add
movsb
xchg
push
fs
out
pop
jle
fld
in
push
in
xchg
ret
add
fs
cld
jbe
stos
mov
nopl
adc
xor
aad
pop
aaa
mov
loop
lret
pop
pop
xor
sub
out
imul
inc
xchg
in
add
xor
scas
ss
pop
jns
jb
mov
pop
aaa
push
and
iret
and
outsl
lret
sbb
stc
cmp
ljmp
cli
mov
repz
xor
sti
subl
adc
add
inc
xchg
mov
rolb
push
inc
add
testb
lods
rol
push
push
pop
fistl
cmp
dec
call
stos
push
push
xchg
pop
mov
xor
fwait
mov
pop
xchg
xchg
lret
scas
and
les
mov
mov
out
mov
call
arpl
ljmp
push
imul
pop
dec
dec
jo
or
xor
add
lods
pop
pop
shll
sbb
fbstp
pop
daa
lret
shlb
sbb
sti
jns
mov
pusha
repnz
mov
cmp
mov
loop
push
sub
icebp
aad
fcomp
push
mov
hlt
cmp
daa
sbb
xlat
sahf
bound
sub
sub
sub
jmp
aaa
mov
btc
mov
lret
test
sbb
push
cmp
pop
loopne
scas
push
mov
insb
data16
push
lret
or
lret
mov
jns
outsb
jbe
rclb
dec
dec
insb
cmp
into
bound
lcallw
jae
scas
addr16
mov
sub
je
fisubl
aaa
jo
add
repz
inc
shrl
insl
or
les
dec
push
mov
xor
sbb
lret
stos
push
mov
mov
repnz
iret
pop
test
inc
jnp
loopne
jge
fiadds
dec
pop
mov
fcoms
popa
ficoml
cmpsl
outsb
iret
popf
jg
imul
test
pop
dec
std
jbe
push
pop
xor
aas
dec
sbb
daa
mov
xchg
in
xchg
cli
pop
and
imul
orl
mov
sub
fldt
sub
xchg
nop
sub
push
out
arpl
out
insl
jge
xchg
xlat
adc
stc
dec
inc
in
add
mov
data16
aad
mov
in
imul
std
cmp
in
mov
scas
sbb
pop
lcall
xor
inc
aam
into
cmp
push
test
insb
jne
dec
sti
cs
vmovddup
in
push
aaa
ficoms
movsb
fwait
or
fwait
popf
gs
insl
dec
mov
push
js
xchg
adc
fdivr
lock
jae
mov
idivb
in
adc
sahf
inc
loope
repnz
sbb
inc
cmp
cltd
fisubl
stos
add
mov
adc
jnp
lret
add
sti
std
or
jb
aam
jecxz
mov
add
sub
cmp
jecxz
pop
mul
jle
jns
scas
cmp
mov
mov
fs
jl
sub
xlat
pop
sub
stc
shl
push
mov
or
push
fs
stos
decl
mov
mov
jne
scas
mov
push
pop
fstpl
cmp
pusha
inc
mov
loopne
sahf
fstps
mov
aaa
subb
and
cmp
inc
sub
mov
sub
cli
mov
xlat
mov
adc
ljmp
cmp
xchg
lock
fs
mov
and
loop
sub
sti
insb
push
aad
call
xchg
add
and
and
mov
test
pop
sub
mov
hlt
ror
mov
xchg
out
flds
adc
out
pusha
dec
mov
jmp
in
loop
into
jp
cmp
dec
dec
mov
popl
mov
cmc
sbb
cld
sbb
outsl
and
test
out
aam
sub
call
xchg
xchg
jns
adc
mov
push
cmp
push
lods
xchg
pop
test
in
jp
std
fistpl
dec
loop
cmp
mov
sbb
push
repz
xor
push
push
jne
adc
adc
mov
push
add
jl
jbe
inc
cmpsb
fisttps
out
lds
or
cmp
inc
mov
inc
cmpsl
xchg
call
shll
xchg
mov
fcomps
outsb
rolb
sub
sub
popa
cmpsb
cwtl
insl
mov
fisttpll
adc
fisttps
xchg
lcall
fsubr
fdivs
mov
xor
xchg
xchg
cwtl
int
cld
fildll
or
imul
push
test
flds
nop
xor
xchg
sub
pop
je
mov
loope
mov
xor
sub
fisubl
out
fisttpll
mov
push
fdivl
fwait
adc
add
iret
sarb
sbb
push
rcll
dec
xor
cmp
lods
mov
sbb
dec
jecxz
push
mov
and
jp
xchg
ljmp
mov
cltd
xchg
inc
add
test
mov
fwait
sarb
out
jae
mov
add
dec
push
into
leave
mov
divb
sub
movsl
insb
pusha
mov
sub
inc
push
dec
xlat
cmp
jbe
mov
mov
and
popa
ja
clc
cmp
fstl
loopne
cmpb
es
popf
fsubs
rcrl
jb
or
nop
dec
test
cmp
ret
mov
pop
lods
ret
and
fstpt
out
clc
arpl
mov
out
pop
pushf
pop
ret
mov
xchg
lds
mov
arpl
hlt
jbe
xor
les
ret
pop
push
scas
mov
les
filds
pop
adc
pop
push
test
in
pop
stc
fs
fcmovbe
jb
sub
lods
lock
cmp
add
cld
adc
ret
ds
notb
ret
push
fcomp
cmpsl
aad
sub
add
pop
mov
xchg
cmpsb
xchg
push
push
testb
inc
arpl
push
mov
cmc
mov
sti
insb
negb
test
rcll
xchg
imul
jns
sti
pop
sarb
cmc
jmp
and
jnp
jp
stos
sbb
cwtl
xlat
mov
cmp
enter
add
out
lea
adc
sub
movsb
pop
out
sub
notl
sub
in
dec
cmp
push
out
push
adc
mov
push
lods
test
push
fimull
out
xorl
scas
xchg
add
dec
loopne
shrl
hlt
jbe
das
xor
dec
inc
lock
hlt
bound
pop
mov
push
inc
ror
das
xor
mov
add
xchg
jl
mov
push
mov
xchg
pop
sub
imulb
mov
dec
lcall
test
adc
push
xlat
jns
mov
mov
subb
cwtl
movsb
xchg
pop
lods
into
repnz
add
ds
jp
mov
lret
mov
imul
mov
cwtl
fiadds
xchg
pop
xchg
pop
rcrb
pop
dec
testb
fsubl
jo
adc
leave
pusha
mov
aaa
mov
xchg
sbb
icebp
in
inc
cmpb
sbb
data16
push
cmpsl
and
fisttpl
gs
jp
sbb
loop
xchg
aas
loop
push
cmp
adc
repnz
mov
es
rorl
adc
int3
decb
negb
pop
aaa
mov
outsl
mov
add
mov
inc
popa
xlat
ret
xchg
jne
jmp
push
ret
lret
xor
sbb
adc
sub
xchg
mov
cwtl
add
xchg
movsl
aaa
frstor
mov
adcl
add
ss
hlt
inc
and
push
lock
push
push
sbb
dec
sub
int3
fimuls
into
movb
jns
xchg
xchg
int3
mov
adc
iret
test
lret
lcall
fsubrl
xchg
inc
fsubr
scas
out
cli
pop
out
ror
adc
cmp
add
std
and
pop
imul
cmpb
push
xchg
pop
mov
popf
aad
outsl
addr16
lods
cmp
xchg
hlt
testb
lods
xchg
jge
scas
jl
ss
fiadds
mov
movsl
popf
mov
jo
add
aad
lock
pop
mov
fmull
cli
out
lret
leave
or
xchg
in
rol
jp
mov
push
mov
repz
xor
aas
or
mov
jl
out
jecxz
jb
flds
out
clc
lods
xchg
scas
xchg
sbb
gs
mov
pop
lret
das
filds
jae
mov
cmp
push
ficoml
mov
jnp
shr
aaa
lods
ficoml
or
mov
dec
rcrl
cli
mov
cmp
lock
inc
xlat
sub
into
out
lods
popa
stc
bound
mov
jbe
arpl
cmp
lds
out
ljmp
leave
test
push
mov
rcrb
in
notl
xlat
icebp
add
inc
xor
push
loope
sub
add
add
daa
xchg
filds
out
jno
mov
cld
inc
aam
jns
mov
lods
xor
cmpsl
cmpl
xchg
sbb
inc
dec
nop
and
xor
push
cwtl
scas
ret
cmc
lret
cld
test
jae
xor
out
cmp
mov
xlat
cld
jge
ss
into
dec
lret
cmp
pop
dec
ljmp
imul
and
mov
insl
ja
jno
mov
pop
sbb
xor
sub
stc
and
cmc
xchg
xchg
mov
mov
ret
sub
cmp
and
lods
cs
mov
dec
push
rol
aam
inc
ljmp
push
cmpsl
cmc
mov
jmp
pop
fisubl
aam
arpl
mov
xor
aam
adc
push
mov
pop
xlat
mov
mov
or
sub
rcl
jg
inc
pop
ffree
push
repnz
xchg
nopl
test
scas
cmp
out
fildl
dec
pop
and
repz
push
rclb
and
movsl
inc
mov
mov
movsb
lods
adc
fs
mov
sbb
or
incl
jmp
int3
add
add
jl
mov
aad
sub
mov
int
dec
ss
inc
aas
scas
sbbl
iret
mov
xor
mov
and
fisubrs
jae
inc
insb
mov
hlt
in
sub
fsubl
dec
std
fdiv
nop
push
lock
xchg
push
out
mov
leave
adc
fidivs
scas
xor
pop
inc
shr
cmp
dec
addl
xchg
cmp
sub
popl
pop
mov
mov
sahf
jb
fs
sub
mov
adc
sti
inc
push
int
jmp
lret
lods
mov
push
scas
pop
popl
or
adc
inc
dec
inc
jl
pushf
jnp
xchg
popf
jg
mov
sbb
test
data16
nop
mov
lds
sbb
mov
xchg
xor
mov
pushf
sbb
cltd
mov
dec
pop
add
mov
mov
pop
aam
mov
fstps
push
mov
out
lods
inc
mov
push
ret
cmc
loopne
sbb
sbb
sbb
and
pop
pop
test
add
add
mov
sbb
movsl
in
push
jecxz
push
adc
rcll
jbe
mov
lahf
je
sarl
pop
je
jp
ret
push
or
push
push
shl
inc
mov
add
sub
xor
or
sbb
icebp
shrl
mov
bound
in
mov
dec
lea
add
dec
mov
mov
inc
xchg
pop
jo
fwait
dec
push
inc
push
fdivrl
inc
gs
mov
mov
ror
pop
cli
jne
out
mov
cmp
outsb
mov
cmp
mov
std
xlat
cld
xor
and
dec
mov
dec
mov
roll
sub
fs
xor
je
sbb
in
enter
movsw
or
and
ret
pop
mov
out
push
loop
xor
push
out
mov
inc
daa
test
stos
fsubr
lea
push
xchg
fucomp
dec
fisubrl
or
inc
and
lahf
xor
out
inc
add
ja
insl
loope
sbb
pop
pusha
insl
or
cmp
fidivrl
adc
pushf
aam
aaa
leave
dec
xor
ljmp
xor
fisttps
in
out
add
hlt
lods
adc
jo,pt
pushf
and
iret
add
sub
aas
movsb
xchg
lret
jp
jae
dec
sub
dec
shl
mov
cmpsl
dec
and
or
shlb
or
mov
push
mov
xlat
fsubp
pop
lret
cmp
adc
xchg
mov
push
cmc
inc
sbb
cmp
cwtl
sbb
adc
ret
inc
testb
ss
inc
shlb
fcmovnu
scas
sub
mov
push
mov
movsl
jns
test
shll
cli
add
loop
dec
and
add
dec
add
mov
push
sub
jbe
mov
out
xchg
shr
addr16
bts
cltd
sbb
frstor
mov
aam
pop
add
push
ds
iretw
dec
das
js
ds
ja
out
jle
leave
loopne
push
lods
gs
data16
addr16
xchg
bound
mov
xchg
cmc
push
sbb
jbe
stos
outsb
jge
mov
or
push
ds
add
xor
dec
mov
xchg
mov
test
sarl
push
adc
cmp
cmpsl
fistl
test
add
mov
popa
sbb
filds
mov
dec
mov
add
inc
pop
pop
cmp
mov
push
push
outsb
and
loope
and
ljmp
and
in
jno
adc
sbb
leave
mov
dec
dec
sub
or
cmp
sub
je
out
enter
or
insb
add
push
xchg
mov
jmp
stc
sub
adc
fsub
mov
mov
and
and
sub
mov
cmp
stos
data16
icebp
mov
pushf
xrelease
in
mov
dec
add
cmp
divl
adc
push
push
ret
mov
outsb
js
mov
dec
or
stos
push
cmp
xchg
sti
dec
stc
les
xchg
add
mov
popl
std
xchg
inc
in
into
jne
ljmpw
jbe
mov
or
mov
mov
mov
mov
xchg
pop
int3
sub
into
lock
out
cmp
sbb
mov
lret
in
scas
xchg
inc
call
xor
mov
les
fisubl
pop
cmc
mov
lods
inc
mov
or
lock
dec
mov
mov
dec
sbb
push
pushl
adc
loop
scas
cmpsl
inc
pop
sbb
jp
cmpsb
adc
xchg
push
xchg
or
cmpsl
std
xor
pop
lahf
mov
or
mov
in
pop
ret
add
mov
repnz
or
icebp
ftst
in
sub
jb
rorl
push
cmc
add
cmp
in
popa
pop
lea
loope
mov
out
inc
test
cld
adc
or
dec
adc
cmp
xorb
lahf
push
sub
cs
inc
inc
push
pop
insb
cli
stos
notb
pusha
sbb
ja
or
jg
mov
mov
movsb
test
xor
rorb
aad
inc
outsb
movsb
add
pop
and
mov
shl
pop
jnp
insb
in
xchg
or
je
jnp
jp
push
lret
les
sbb
addl
adc
xor
cs
cltd
sub
push
pop
push
insb
pusha
dec
push
mov
sub
mov
arpl
pop
mov
inc
add
and
fs
jae
and
push
jnp
dec
inc
les
notl
int3
jnp
push
stos
shll
mov
ja
xor
or
push
ret
iret
mov
pop
out
aam
or
mov
out
hlt
jmp
jecxz
fdivrs
pop
out
cmpl
jge
or
ret
mov
out
xor
decb
or
dec
pop
out
xor
xchg
sbb
mov
in
roll
dec
jmp
and
in
notl
inc
int3
mov
push
lds
imul
sub
jmp
icebp
gs
mov
sub
xchg
ja
popa
out
gs
ja
clc
vcvtsi2sdl
mov
hlt
cmp
aas
repnz
fistl
lock
pop
fisttps
adc
xchg
shlb
les
scas
inc
out
add
fldenv
or
cmp
pop
cmc
or
test
pop
cmpsb
sbb
cmpsl
jae
or
cmc
sub
pop
jmp
popa
lret
lods
shll
and
sub
mov
cmc
mov
stos
mov
fsubrp
cmpb
jnp
lea
mov
xchg
outsl
push
sbb
jmp
dec
pop
repnz
xchg
shll
dec
adc
cli
stos
xchg
loop
pop
pop
dec
mov
movsl
jmp
clc
fnstenv
orl
dec
repnz
xchg
jns
ds
xchg
sub
ss
sub
aaa
mov
mov
cmp
xchg
out
cltd
push
push
es
xchg
push
das
lret
jg
lahf
cmp
orb
xchg
loopne
cltd
cmp
jbe
mov
inc
bound
scas
dec
pop
jle
jge
movsl
notb
mov
out
xor
cmp
rol
movzbl
mov
ficoms
sbb
js
out
test
pop
test
int
in
into
ret
jnp
lahf
sub
scas
rorb
ja
lock
repz
or
adc
test
ficoms
inc
push
out
ror
add
or
jle
or
push
stos
adc
xchg
push
mov
push
jge
das
cmp
or
xlat
pusha
inc
adcb
insb
sub
cld
xor
mov
inc
jp,pt
stos
mov
subl
jecxz
and
cld
adc
mov
aas
mov
out
cld
rolb
movaps
or
pop
jmp
movsl
bswap
adc
mov
lret
ljmp
data16
pop
or
pop
adc
xchg
ss
inc
in
and
mov
repz
pop
jecxz
xchg
mov
orb
sbb
mov
out
orl
xchg
cmc
cmp
in
push
lret
mov
cmp
adc
cs
mov
mov
push
xchg
pop
xchg
sarb
sti
mov
jge
jl
je
dec
aad
mov
test
mov
lds
fmuls
add
gs
hlt
jne
addr16
xor
aas
pop
enter
rorl
bound
pusha
jmp
bound
pop
cmc
out
das
test
rorb
insb
push
jp
lods
jnp
jp
mov
xchg
leave
or
push
cmp
insb
pop
mov
fstl
mov
push
dec
hlt
or
pop
inc
pop
icebp
inc
loop
inc
setbe
jne
mov
outsb
xchg
sub
dec
jge
xlat
popa
insb
inc
push
dec
lea
mov
lret
fimuls
ds
repz
sbbl
jns
loopne
lcall
sbb
fidivrl
add
adc
xor
aaa
out
test
fwait
mov
mov
and
jae
movsb
and
in
pop
insl
inc
ret
shl
push
sahf
xchg
arpl
xor
jae
icebp
into
jns
jb
jae
cld
inc
sub
push
aad
sub
andb
push
cld
or
arpl
adc
push
into
aad
pop
cld
cmp
inc
fisttps
mov
in
mov
leave
mov
js
inc
pop
mov
sub
pusha
xchg
mov
aad
mov
cmp
xor
and
aam
dec
pop
or
push
mov
shll
ljmp
sbb
scas
jl
andl
repnz
lcall
mov
mov
mov
push
gs
mov
or
daa
jg
clc
and
sbb
cmp
js
mov
int
dec
imul
test
cwtl
out
pop
cmc
cmpsb
in
repz
mov
pop
dec
cli
xor
cmp
jecxz
cmp
mov
fcomi
imul
and
cmp
insb
add
dec
push
lods
dec
test
inc
inc
sbb
adc
jns
dec
out
aad
fwait
ja
fistpll
test
ja
sub
fst
pop
ja
ljmp
add
int3
fildll
lret
dec
dec
fs
pop
cmpsb
xlat
xlat
imul
outsb
or
rcrb
sti
movsb
rcrl
sub
xchg
sbb
adc
xchg
imul
inc
push
in
ret
lahf
adc
in
cmp
dec
aam
xor
inc
xor
jne
out
inc
hlt
dec
cmp
lret
cmp
shrb
lods
lock
mov
or
push
sahf
int3
int
dec
call
push
adc
out
scas
push
mov
fimuls
aaa
push
lock
mov
and
push
or
sub
in
into
jl
sub
lds
mov
cmp
jge
xor
popa
xor
and
lret
inc
enter
loop
inc
lods
or
pop
insb
repz
and
ds
adcl
daa
int
fwait
ja
mov
rcrb
ja
inc
loope
paddusw
adc
lods
iret
in
ret
mov
sub
xor
lods
inc
push
add
pop
je
mov
dec
lods
ficoml
adc
iret
loop
js
or
rorl
xchg
mov
fcoml
js
mov
in
fmull
mov
xchg
movsb
ret
fistpll
gs
data16
xchg
mov
mov
cli
dec
stos
jns
cmc
leave
mov
sub
movb
fisubrs
jnp
push
shlb
sbb
jb
dec
jp
xchg
ret
pop
adc
or
xor
sbb
lcall
xor
lret
enter
dec
inc
mov
loop
push
fwait
push
push
jp
pop
jnp
ficoml
xchg
enter
pushf
pop
cmp
adcl
and
int
jns
xor
mov
xor
add
mov
mov
and
arpl
fsubrs
xchg
xchg
cmpsb
lea
and
popf
jge
popa
or
out
cwtl
into
divb
leave
sbb
push
addb
fstp
lods
ret
subl
push
add
clc
rorl
cmpsb
testb
xchg
repnz
ss
popa
sbb
cmpsl
testl
dec
jmp
stos
and
sub
sbb
popa
sbb
cmpsb
xor
mov
jnp
or
jle
shrl
andb
dec
mov
and
cli
cld
jne
dec
xchg
leave
push
jmp
jns
lods
in
adc
mov
xchg
into
call
mov
movaps
test
inc
test
mov
lcall
aam
outsb
push
add
cmp
loopne
mull
xlat
in
ja
adc
jo
aam
push
pop
push
push
jge
fisubrl
out
xchg
scas
int
jb
cmp
xlat
clc
jg
rorl
mov
aam
clc
sub
data16
inc
mov
popf
or
insl
lock
jge
jp
movsb
jbe
std
ljmp
cwtl
push
jae
pop
clc
stc
nop
cmc
pop
and
cli
mov
dec
ss
sahf
and
out
xorl
sbbl
mov
cmpsl
pop
aad
adc
stos
lcall
out
inc
icebp
aas
cmpsl
xor
insb
mov
ljmp
js
adc
in
sbb
testl
pop
mov
dec
testl
pop
dec
cmp
push
into
cmp
mov
sub
xchg
insl
mov
div
nop
ja
in
test
push
and
out
aas
pop
stc
in
push
subl
add
xchg
testb
xor
xchg
pop
lret
daa
sub
cmp
fs
loopne
in
add
test
test
inc
sbb
shr
imul
je
xchg
mov
cmpsb
cmp
orl
xchg
pop
push
aam
adc
fiaddl
movsb
pop
inc
cmpsl
inc
jbe
mov
sub
ret
ds
scas
out
cmp
inc
lea
inc
movsb
inc
outsb
sbb
jns
pusha
fwait
enter
in
inc
ret
arpl
or
es
cltd
xchg
push
addr16
bound
xor
cltd
xor
and
sbb
icebp
pusha
add
mov
movsb
jb
outsl
jae
mov
mov
mov
insl
pop
add
int3
mov
pop
cmpsb
stos
sahf
lods
sarb
jae
or
out
cmp
data16
out
mov
dec
jo
or
push
xchg
popa
inc
sbb
sbb
in
and
pop
dec
jmp
cmp
mov
movl
outsb
outsl
cltd
div
mov
adc
dec
fstpl
pushl
jle
mov
pop
mov
filds
lret
in
pop
fidivrl
iret
loope
rcrl
pop
sub
movsb
pmaddwd
sub
in
ljmp
test
je
popf
aas
xlat
cwtl
cmp
xchg
rcll
addb
pop
sbb
shlb
mov
mov
mov
loopne
push
xor
mov
les
jb
sub
xlat
int3
lret
lods
cmpsl
cli
ret
mov
in
jb
mov
int
push
push
push
daa
add
xchg
aad
mov
out
sub
xchg
sbb
ljmp
loopne
xlat
inc
sti
pop
push
aas
jp
push
mov
outsb
test
shrb
mov
jae
add
cmpsb
xchg
insl
jns
jecxz
orl
ljmp
inc
leave
mov
inc
jne
rcl
xchg
lret
mov
xchg
pop
stos
imull
shr
sub
sbb
fst
sbb
mov
fsubrp
std
sbb
push
adc
cmpsl
mov
mov
in
mov
cmp
pminub
insl
insl
jns
data16
idivb
pop
cmp
pop
mov
mov
cmc
sbb
mov
cmp
and
leave
or
gs
mov
xchg
jecxz
and
mov
pop
jnp
or
push
sarb
mov
cmp
in
incb
and
cmc
cmp
sahf
fimull
push
sbb
dec
add
jno
aad
mov
inc
or
clc
out
pusha
lock
popa
mov
bound
lods
pop
leave
sahf
and
ja
push
xlat
lret
fistpll
cwtl
xor
mov
int
pop
lds
ja
mov
jo
lea
xchg
sub
pop
call
sub
in
adc
fcomp
dec
pop
xchg
rorl
decl
jb
aaa
mov
push
ret
mov
imul
mov
jle
dec
mov
push
xchg
rorb
push
sbb
add
cmp
mov
xchg
rcrb
outsl
mov
popf
xchg
cmp
into
jl
into
decl
mov
jg
dec
inc
inc
xchg
mov
nop
int
roll
test
mov
xchg
adc
mov
inc
inc
cld
or
and
mov
pusha
dec
sti
ljmp
in
jp
mov
pop
dec
das
sub
dec
xorl
push
rolb
adc
in
add
sbb
and
pop
push
aaa
test
mov
iret
jo
imul
repz
or
ret
push
cmp
fsts
sbb
push
popf
hlt
jns
cltd
sub
test
stc
mov
xor
jbe
out
lds
ficoms
imul
lods
mov
add
xor
dec
inc
mov
sahf
add
lahf
adc
in
in
or
pop
mov
movsl
outsb
jnp
jg
test
xor
push
nop
lea
adcl
or
dec
ret
int3
notl
cmp
aas
mov
cmp
jg
adc
aaa
dec
in
xchg
mov
jo
xchg
lea
jl
sarb
and
adc
inc
mov
add
xchg
mov
fdivrl
jge
sub
cmp
test
clc
test
stos
and
sarb
xchg
bound
xorb
sub
inc
stc
pushf
dec
imul
cmp
dec
push
inc
adc
sub
and
inc
add
repz
sbbl
js
pop
out
mov
test
fidivs
mov
dec
loopne
cmp
scas
test
dec
adc
sbb
jecxz
aam
inc
pop
fwait
sbb
mov
cli
addr16
mov
push
leave
sub
call
je
sbb
add
sti
pop
movsb
or
or
inc
push
dec
or
fistps
mov
push
push
pop
jmp
adc
fwait
int
cmc
dec
mov
bound
mov
stc
pop
xchg
jmp
repnz
sbb
fs
arpl
cmp
xchg
jl
sub
stc
sbb
adc
adcl
xchg
shlb
in
cmc
sub
int
and
pop
out
inc
mov
inc
or
sahf
ret
inc
push
jcxz
loop
cli
lret
in
mov
das
pop
rorl
das
jb
and
jns
cmp
lret
jmp
adc
adc
or
push
dec
pop
repz
pop
scas
arpl
dec
mov
mov
push
pushf
inc
mov
insb
pop
mov
loope
sub
ret
ror
stc
popa
xchg
out
jmp
inc
jno
cmp
out
roll
adc
cmp
int
add
pop
sub
test
dec
loope
int3
cmp
pusha
xchg
nop
and
or
jns
add
enter
dec
data16
ret
clc
mov
push
sti
push
and
add
ja
sbbl
inc
add
add
xchg
xchg
sub
pop
test
push
mov
lods
and
cltd
cmp
dec
xchg
lods
arpl
pop
les
or
mov
icebp
pop
inc
movl
ret
cmp
adc
cmp
pop
sbb
fisubrl
out
or
push
stos
lret
ret
cmp
pop
jbe
lock
negl
lods
inc
popf
shr
jae
pop
sahf
ljmp
cltd
push
jb
aam
pusha
les
pop
nop
or
sarl
or
pusha
push
mov
cmp
xor
shl
iret
pop
and
sahf
aam
push
or
lcall
pop
adcl
fnstsw
mov
pusha
cmpl
cmp
dec
pop
pop
xor
add
jmp
in
lret
out
into
or
ja
and
mov
ds
or
inc
pop
sub
pop
inc
sbb
mov
or
push
jnp
inc
mov
loopne
mov
ja
out
mov
jno
aas
sti
xchg
int
mov
sbb
jg
sti
inc
jp
pop
jb
push
loope
into
neg
xchg
push
xchg
imul
lods
ds
lahf
xor
shll
dec
xor
nop
sub
ret
jmp
aam
test
out
into
jae
add
mov
mov
mov
cli
xchg
fs
int3
xor
cmc
nop
dec
cld
and
mov
in
test
inc
xor
lahf
add
mov
das
cmp
push
mov
adc
notb
dec
fwait
mov
mov
cmp
push
dec
mov
ss
adc
push
leave
dec
dec
push
fbstp
cmp
mov
pop
pop
push
sti
dec
mov
or
pusha
xchg
pop
shlb
dec
or
push
xchg
bnd
xchg
mov
xor
mov
outsl
add
or
test
pop
cld
push
daa
sbb
lret
mov
cwtl
jle
push
out
popw
sbb
jnp
jecxz
je
xor
xor
lock
out
jae
sbb
rol
push
xor
jo
jmp
cli
or
and
inc
cmpsb
adc
test
ret
and
sbb
inc
sbbb
mov
push
insb
push
fwait
xchg
mov
adc
dec
xor
add
inc
fistpll
out
dec
ja
pop
ror
in
in
mov
fnstcw
sbb
ljmp
orl
jp
mov
xor
outsb
inc
incb
stc
stc
jno
xor
out
outsb
jb
pop
icebp
rcll
adc
pushl
shlb
jns
or
push
add
xlat
into
push
mulb
sub
pop
orl
int3
rcrb
mov
shl
int
mov
lods
pop
fdivs
or
movsb
out
sub
aam
in
icebp
in
push
into
mov
xchg
aam
inc
sahf
jo
jno
xorl
lods
lret
sbb
xor
pop
loope,pn
add
and
pop
loopne
or
lahf
mov
jno
outsl
dec
ret
pop
sti
mov
or
rcrb
cmpsb
push
lods
ss
sub
aas
jae
mov
adc
call
xchg
add
cmpsl
cmp
push
sub
scas
scas
fwait
in
adc
add
push
sub
sub
sub
inc
and
push
int
filds
fildll
loop
and
sbb
insl
cmp
into
xorl
sbb
xor
push
out
jg
adc
dec
inc
sbb
in
call
pop
cmc
jnp
inc
shl
inc
xchg
mov
addl
rolb
notb
push
mov
push
pop
adc
inc
outsl
gs
shrb
jl
je
pop
js
and
jmp
lods
adc
pop
add
cli
rep
aaa
fnstenv
mov
add
clc
je
gs
sub
outsb
xor
mov
xchg
push
out
cs
aas
push
sub
dec
imul
std
pop
es
pop
ret
xor
mov
adc
jg
aad
sbb
cmp
jb
fisttps
xlat
cmp
pop
push
xchg
xor
addr16
dec
repnz
xchg
mov
inc
cmp
push
insl
pop
mov
je
in
inc
cs
add
movd
xchg
lock
cwtl
stos
push
aaa
test
adc
jg
cmp
sub
jmp
daa
xchg
adc
xor
sub
jae
push
push
cmp
pushf
mov
clc
das
mov
or
and
pop
pop
dec
outsl
int
nop
lods
pop
aas
adc
inc
mov
mov
mov
and
push
popa
jp
pop
xor
push
mov
mov
inc
shrl
arpl
xlat
stos
add
push
pushf
and
sbb
sbb
mov
mov
xchg
pop
imul
test
daa
and
nop
divb
loopne
es
dec
cld
notb
ret
lods
std
into
cwtl
xor
addr16
jle
mov
pop
dec
cmpsl
and
mov
mov
bound
xor
sbb
in
cmp
sub
push
cmpsb
sbb
lock
sbb
inc
cmp
mov
dec
jecxz
sbb
mov
push
sub
sub
pop
jbe
sbb
stc
inc
mov
es
pop
imul
or
sbb
das
adc
nop
dec
dec
scas
jnp
dec
fdivrp
add
cld
mov
pop
rcrl
enter
sbb
adc
pop
lcall
push
sub
arpl
ss
jo
ss
mov
and
rcl
jge
mov
fisttpll
mov
mov
and
out
div
xor
data16
cmp
int3
jl
inc
test
sahf
cli
dec
sub
shll
xchg
loopnew
mov
mov
loopne
push
xchg
inc
adc
sbb
imul
pop
push
fdivp
fadd
cli
mov
xchg
shrb
mov
stos
fsub
push
pop
dec
cmp
int3
jno
inc
shlb
hlt
lahf
outsb
das
adc
repz
in
add
pop
sbb
fmulp
sub
mov
sbb
ret
lcall
mov
push
pop
or
call
je
fiaddl
inc
jne
xlat
push
lret
orb
ror
push
lods
outsb
divl
mov
mov
adc
dec
pop
dec
add
outsl
mov
add
fidivrl
std
ds
outsl
arpl
sti
addr16
push
cmp
cld
out
mov
mov
jle
andb
mov
mov
mov
jge
shr
or
orl
outsb
stc
shll
hlt
mov
sbb
lcall
sti
mov
pop
sbb
aas
lock
and
or
pop
lods
sbb
xor
neg
push
rcrl
pop
or
add
cmp
mov
fcmovbe
loopne
xor
aad
into
pop
xchg
nop
sub
cld
shlb
jo
cmpb
push
movsb
xor
idivl
cwtl
popf
out
inc
in
pop
inc
xchg
divb
xchg
inc
jbe
cmp
jae
popa
dec
shrl
in
mov
cmpb
push
bound
add
and
push
push
sbb
and
add
imul
mov
loope
sub
in
in
or
cmpsb
xlat
ljmp
rorl
adc
sbb
xchg
push
ret
mov
leave
fldl
mov
lret
mov
pusha
jns
out
xchg
sbb
out
sub
sub
mov
adc
add
jge
jns
push
mov
ljmp
add
mov
pop
shll
or
incl
pop
jb
in
std
scas
popa
shrb
imul
scas
pop
mov
mov
lret
jne
lret
pop
add
mov
jle
mov
sub
xchg
aaa
cmp
cld
mov
orb
mov
and
xor
outsb
adc
fstpt
dec
cmc
xchg
emms
shll
das
movsl
adc
mov
adc
jle
stos
jb
mov
outsl
ret
or
jnp
and
mov
xchg
jnp
lahf
je
cli
pop
jbe
aam
sbb
lods
push
aam
imul
push
mov
or
and
aaa
xor
ret
mov
inc
mov
insb
je
cltd
pop
bound
mov
fldlg2
aaa
dec
fidivrs
xor
xchg
mov
sub
mov
je
addr16
inc
fistl
outsb
lods
push
jb
or
ss
shll
fisttps
cli
mov
pop
cmp
xor
jmp
pop
sti
int3
push
or
jae
roll
movl
lock
push
outsb
pop
ljmp
sbb
mov
jae
cmp
push
xor
adc
lods
sbb
test
js
hlt
scas
aaa
mov
dec
scas
aaa
pop
ljmp
pop
in
sub
jns
pop
jp
out
adc
sbb
daa
adc
lcall
dec
lods
loope
pop
sbb
mov
and
dec
mov
jb
jg
gs
adc
scas
add
ljmp
roll
xlat
inc
imul
add
in
mov
out
xor
stos
out
add
sbb
mov
aam
push
mov
dec
xor
cld
lods
push
mulb
addb
nop
js
mov
fistl
std
rcr
ret
adc
add
int
adc
in
dec
lds
outsb
xchg
mov
lahf
push
fidivrl
outsl
push
mov
push
scas
cmpsl
mov
sbb
or
jp
xchg
insb
pusha
sbb
loop
movsb
cmpsb
int
jae
aaa
fstpt
cmc
sub
nop
push
dec
rcrl
cwtl
and
pusha
lret
push
out
pop
mov
cmp
xchg
popa
push
push
nop
rorb
mov
rcrl
pop
jo
and
cwtl
sbb
inc
ljmp
push
mov
pop
lahf
lahf
test
inc
or
addr16
jns
test
stos
lcall
and
jae
aam
pop
cmpsl
pop
gs
xor
add
lcall
jae
popa
fs
into
adc
lods
add
gs
adc
inc
test
popa
adc
out
popf
inc
sbb
sub
push
and
dec
push
js
leave
mov
pop
pop
inc
mov
verw
xor
pusha
cmp
sbb
jbe
push
and
fstl
fcoms
addb
dec
setno
leave
sbb
inc
aaa
popf
cltd
push
cmp
roll
xlat
adc
scas
lods
fsubr
jge
or
mov
call
stos
push
out
cmpsb
and
test
pcmpgtw
inc
into
in
inc
jl
outsb
sbb
lds
push
xor
push
loope
push
jecxz
add
lret
decl
es
cli
ss
scas
xor
xchg
xor
push
outsb
frstor
xor
std
add
push
lods
sbb
mov
or
adc
dec
push
sub
scas
leave
test
test
cwtl
push
cmc
jae
test
push
rcl
out
pop
aaa
push
mov
jbe
jle,pn
repnz
aad
adc
mov
sbb
cli
fincstp
into
fbstp
adc
sbb
inc
jo
aaa
out
push
xchg
push
aaa
jbe
mov
sub
sbb
addr16
enter
je
push
xor
ljmp
cmp
stos
inc
lds
and
lea
ret
pushf
xchg
push
push
popa
aad
outsl
push
bnd
xor
jne
clc
add
push
cmp
push
stos
or
ret
rorl
add
shll
in
jo
ret
push
in
jmp
fsub
test
lret
pop
jb
ret
and
add
sbb
adc
clc
leave
cmpsl
in
mov
repz
push
fwait
test
jp
movsb
movsb
push
pushf
pop
scas
popa
std
frstor
dec
icebp
sti
sub
mov
mov
inc
pop
sarl
cmp
lret
pushf
lock
sti
mov
aas
xchg
inc
insb
test
xchg
or
pop
lcall
sbb
dec
imul
outsl
add
fsubl
leave
push
js
sbbb
jo
jmp
es
js
aad
mov
pop
pop
mov
push
fs
ja
pop
push
push
out
hlt
push
adc
iret
lret
jb
cmp
mov
cmc
orl
pop
das
jle
ret
pop
mov
pop
cs
les
popf
adc
mov
push
inc
inc
test
movsl
ljmp
and
orl
inc
in
jne
jle
or
lret
mov
mov
sbbb
xchg
lret
test
and
fidivrl
in
stos
rcl
outsl
cld
push
pop
in
inc
mov
mov
rorb
jne
mov
out
dec
jp
loopne
aaa
enter
or
sub
cmpl
gs
adc
or
stos
clc
pushf
addl
js
mov
popa
test
out
xchg
mov
sub
cltd
iret
push
incb
lods
or
sbb
sbb
dec
dec
les
inc
mov
cmpsl
sahf
and
mov
cli
mov
sbb
xor
xchg
cltd
push
xor
jno
push
test
icebp
scas
insl
repz
inc
stos
lock
sub
aam
cmc
ret
pop
lods
mov
pop
jl
jne
jg
or
movsb
out
negb
cmp
lahf
adc
xor
fmulp
daa
data16
jnp
push
dec
jae
xchg
jg
lcall
repz
je
add
inc
scas
test
ss
and
add
inc
sbbl
sahf
ss
jmp
test
mov
xor
jno
push
js
or
push
push
push
dec
or
addl
push
lahf
jle
outsl
lcall
js
inc
xor
call
lock
xchg
pop
sahf
sub
imul
scas
lcall
mov
shrb
loop
sub
push
out
sbb
fs
mov
inc
mov
cmp
clc
mov
xchg
and
xchg
in
mov
stos
leave
mov
cli
out
in
negb
bnd
inc
xchg
mov
or
xchg
lds
inc
subl
xchg
and
fisubrs
xor
sub
pop
mov
jne
push
gs
addl
mov
pusha
es
push
mov
scas
add
cmc
jns
or
jl
sbb
test
shll
pop
std
inc
repnz
adc
dec
cwtl
fwait
divl
cmp
into
adc
popa
into
test
testb
popf
rcrl
jp
iret
xor
push
cli
cmp
test
fdivs
mov
mulps
sti
add
xor
call
cli
iret
sbb
test
push
aad
mov
dec
loope
push
adc
ds
mov
adc
into
repnz
or
xchg
adc
negb
insl
nop
addb
xor
cwtl
andl
hlt
push
push
push
mov
test
fs
jbe
imul
aaa
inc
ja
pop
sub
das
ret
mov
mov
es
repz
insl
cwtl
sbb
pop
sub
xor
push
es
jno
jns
mov
pop
lret
fwait
cmpsl
leave
fwait
in
and
and
jp
inc
pop
and
mov
insb
push
inc
dec
stos
unpckhps
jg
mov
lret
gs
shrl
scas
push
or
fcmovnu
aad
shl
addr16
push
mov
sbb
xor
loope
inc
and
stos
cli
mov
lcall
nop
std
jmp
fdivr
push
frstor
pop
icebp
ret
sub
mov
fxch
xor
xchg
out
dec
mov
pushf
mov
xor
mov
dec
inc
xchg
dec
aaa
cli
mov
mov
gs
pop
push
into
xchg
shll
arpl
pop
stos
push
xorb
inc
add
dec
je
add
adc
dec
cmp
xor
adc
adc
icebp
mov
pop
out
scas
sub
jle
shll
shrl
push
and
mov
jbe
jmp
mov
pop
shlb
in
insl
mov
lods
jnp
scas
jge
aam
ss
cmp
sub
fsubl
mov
push
cs
mov
inc
rorl
das
push
add
dec
out
add
add
cmp
pop
ret
or
mov
pcmpgtd
jnp
jbe
xor
adc
sub
repz
and
outsl
fnstenv
xorl
test
jno
push
push
fists
lods
mov
int
cmp
and
hlt
and
fistpll
movsb
mov
les
and
daa
ret
and
js
fcmovnb
lret
xchg
leave
jb
gs
xchg
cmpl
or
popa
pop
shr
add
jo
sbbb
daa
lret
inc
mov
scas
sahf
nop
popa
mov
dec
lahf
cmc
movsb
or
add
ja
nop
out
cmp
sub
inc
xor
pop
pop
ds
mov
lods
push
push
ljmp
cmpsl
stc
mov
orb
into
mov
and
inc
or
push
xchg
fucomip
pushf
and
cmp
enter
jae
mov
push
sub
mov
sbb
cmc
push
add
cmpsl
lret
or
data16
xchg
and
mov
xor
lea
xchg
or
or
mov
in
dec
popf
fstpl
dec
fcoms
stos
xorl
push
outsb
jle
stc
pop
aaa
and
xlat
push
jnp
mov
lock
cmp
cmp
jle
push
inc
push
pop
xchg
loop
in
and
adc
sub
inc
jl
lock
push
orl
sub
mov
jne
add
pop
sub
aad
roll
enter
in
pop
mov
ret
sahf
rcl
fidivl
jae
inc
in
push
test
dec
jne
out
in
jle
iret
movsb
in
loop
insb
add
sbb
mov
ret
movsb
out
das
and
mov
test
iret
movsb
xchg
sahf
lret
pop
ds
pop
fimuls
adc
cmc
nop
fidivs
movsb
mov
pop
or
dec
jp
mov
out
test
sti
xor
cmpsl
lcall
push
or
movsb
cmp
mov
or
adc
or
push
fwait
jno
mov
lods
mov
or
mov
sar
repz
cwtl
mov
mov
cmp
jae
shl
in
scas
push
dec
mov
xchg
adc
sub
ficompl
and
in
cld
mov
mov
in
cmpsl
aad
loop
dec
insb
call
cli
scas
cmpsl
sbb
movb
and
lret
and
sbb
fstps
sbbl
xor
jo
ret
and
and
pop
cmp
lock
sub
scas
repz
pop
mov
mov
andb
inc
les
adc
mov
xchg
ja
or
cwtl
sti
mov
mov
cmp
pop
lcall
pop
ljmp
fdivrl
loope
mov
cli
push
sub
push
out
nop
dec
lock
cmpsb
lea
or
scas
imul
popl
loop
fwait
imul
inc
mov
loopne
repnz
aaa
and
das
bsr
xor
jae
xor
lods
jle
in
enter
pop
add
mov
sbb
dec
test
cmp
jbe
in
xchg
es
push
icebp
dec
add
jp,pn
and
insl
movsb
pusha
sar
jg
les
jnp
sbb
divl
mov
pop
mov
imul
inc
xlat
sub
nop
popf
mov
shrb
ss
cltd
dec
sahf
int
inc
fldenv
dec
adc
lds
push
cltd
jge
mov
pop
aad
jae
ret
jno
xchg
mov
xchg
es
ficompl
das
or
mov
int
outsb
stc
clc
les
or
jb
jmp
out
jge
jle
add
inc
add
lods
mov
subl
in
std
shr
push
ret
push
jae
std
adc
add
push
je
adc
ffree
fsubrp
sbb
sub
imul
cltd
xchg
pop
jne
ss
adcl
fs
fsubl
in
ja
add
fnstenv
movsl
add
cltd
into
cmp
test
aaa
xor
or
sti
xchg
mov
or
rolb
dec
and
rorb
dec
call
dec
jb
shlb
sub
jno
jo
gs
movsb
aad
cmp
test
movsl
push
jno
out
cmp
jae
mov
pop
fadds
or
push
dec
inc
inc
sub
repnz
lcall
ds
fwait
adc
imul
xor
cmpsb
sahf
pop
subb
test
jmp
cltd
aaa
imul
xor
movsb
adc
fimuls
jg
adc
or
xlat
pop
test
dec
iret
call
pushf
clc
sarl
pop
test
mov
mov
jno
adc
cld
addr16
cltd
jecxz
adc
in
pusha
xchg
push
sbb
test
mov
fwait
and
imul
ss
push
cmpsb
roll
inc
ret
mov
jb
das
dec
mov
test
jle
fldenv
push
lcall
aam
mov
jmp
lcall
ss
cmp
pusha
sub
mov
mov
test
xor
test
popf
xchg
sbb
xchg
mov
daa
add
hlt
push
clc
pop
sbbl
hlt
xchg
fnsave
pop
imul
sarl
fisubs
gs
les
add
aaa
xor
int3
inc
sub
pop
rolb
iret
je
cltd
loope
mov
sbb
loopne
lds
sti
xchg
shlb
cmpsl
rclb
mov
jno
enter
bound
pop
mov
sub
cmp
adc
adc
dec
out
hlt
movsb
or
rorl
insl
cld
mov
or
inc
loopne
mov
lods
add
ss
lcall
sbb
jmp
pop
jg
and
popa
sbb
lahf
nop
outsl
add
popf
cmp
sbbl
pop
dec
int
subb
xor
cmp
mov
sbb
mov
push
fsubrl
push
dec
mov
add
fsub
jle
and
loope
scas
mov
add
fs
sub
xchg
ficoms
pusha
call
jp
sub
or
add
inc
pop
add
loope
or
loope
add
sbb
mov
push
cmp
jle
sub
pop
cvtps2pi
dec
fstps
out
mov
js
inc
lea
fcmovu
jl
fs
loop
adc
rorl
cmp
in
imul
arpl
andb
add
cmp
cmpsl
pusha
clc
jne
sahf
popf
les
es
addr16
and
xor
jmp
daa
lea
scas
cmp
insl
mov
mov
jg
jae
nop
outsb
stos
jge
fadd
scas
aas
jb
xorb
xchg
and
mov
push
mov
cmpb
and
out
mov
arpl
sbb
jbe
mov
adc
pop
pop
adc
sbb
lds
fistl
adc
sub
and
cmc
push
or
fcoml
mov
js
xchg
pop
imull
adc
sub
dec
and
aam
push
xor
adc
scas
fs
mov
mov
out
and
mov
inc
decb
push
inc
mov
cmp
jo
sbb
xchg
lock
fisttpll
inc
inc
int3
mov
inc
enter
test
fucomp
and
lods
xchg
push
gs
cmp
stos
ret
std
addr16
xchg
dec
divl
outsb
mov
leave
cltd
in
push
out
inc
lret
pop
fs
repnz
dec
or
dec
jmp
lock
inc
add
add
pop
jge
fistpll
fmuls
pop
pop
or
mov
add
in
xchg
push
mov
mov
outsb
cld
jno
dec
cld
out
cmc
dec
jne
or
sbb
cmp
scas
out
imul
mov
mov
dec
xchg
and
inc
hlt
adc
xor
jg
mov
lret
pop
or
add
or
aad
add
mov
das
je
xchg
sbb
jecxz
sarb
iret
xor
test
lods
repz
ficompl
mov
inc
inc
jle
fdivl
fcmove
sbb
cmpsb
mov
cmp
mul
sti
jle
fucomi
testb
push
xor
popa
fidivrl
sub
and
repz
repz
push
push
mov
stos
popf
fimull
lret
roll
rorl
mov
add
sub
push
cmpsb
fcom
insl
aaa
int3
lods
xchg
rcr
scas
sub
cmc
pop
mov
aam
push
fdivrl
or
outsl
push
sbb
push
in
outsl
mov
aam
or
jl
test
clc
sub
and
fmuls
sbb
jle
idiv
jb
cmp
cld
push
ja
stc
inc
mov
add
add
add
push
enter
sbb
sub
pop
xchg
or
lret
adc
push
dec
xor
jno
mov
call
mov
insl
out
iret
outsb
fidivs
add
pop
out
mov
jnp
jp
adc
cmp
cmpsl
jne
aam
add
insl
push
fwait
push
push
jb
and
jnp
lcall
outsl
ret
xchg
fdiv
daa
in
xchg
insb
push
mov
mov
cmp
inc
mov
xchg
jbe
fcoms
fdiv
scas
xchg
and
adc
arpl
je
mov
outsl
ret
stos
mov
aad
pop
push
dec
call
lods
test
psubsw
mov
ret
xchg
push
ljmp
aaa
adcb
mov
and
into
movlps
or
mov
inc
sub
jg
mov
xchg
dec
call
adc
subl
ret
and
and
sub
cmp
mov
cmp
mov
insl
mov
dec
lods
mov
and
nop
cmc
jl
cmpsb
test
mov
callw
and
aas
inc
xchg
add
sti
mov
stos
repz
dec
sti
xchg
push
jge
pop
pop
pop
and
cs
push
imul
repz
xchg
sbb
xchg
mov
push
ffree
sub
loopne
mov
sub
jns
add
movsl
inc
push
adc
test
mov
jae
sbb
jl
mov
cli
mov
xchg
pop
push
movsb
or
cmp
out
loop
imul
pop
xor
test
fs
inc
xor
lods
je
push
out
xor
xchg
shl
outsl
mov
leave
mov
push
dec
mov
iret
testb
pop
arpl
inc
ficomps
stos
loope
mov
xchg
in
push
das
out
push
dec
jle
in
mov
rcl
fistl
adc
adc
dec
sbb
enter
rcrb
push
mov
in
repz
inc
test
mov
dec
enter
or
icebp
push
jno
cwtl
mov
push
out
sub
sub
add
pop
test
fidivrl
cmpsb
lds
cmp
pop
sti
xor
push
adc
dec
clc
xchg
outsb
popl
sbb
and
cmp
pop
daa
loop
push
std
pop
cmp
leave
adc
mov
adc
test
inc
mov
in
jmp
push
stos
mov
xchg
scas
leave
hlt
add
ds
inc
cmp
xacquire
lret
sub
adc
and
push
pop
mov
popf
lods
cli
lock
addl
mov
lea
pop
xor
and
pushf
lea
xchg
sub
sbb
popa
aam
imul
mov
add
inc
or
xor
jno
and
jmp
imul
sbb
or
mov
insb
into
shlb
imul
xchg
sbb
fs
scas
fsubrs
dec
enter
stc
or
mov
mov
dec
jae
jbe
iret
and
mov
movsl
and
mov
dec
sbb
inc
test
lret
sahf
out
xchg
xlat
iret
in
mov
mov
mov
shrb
mov
dec
fcomps
push
popf
test
mov
jns
aas
jge
sbb
mov
and
rcl
aam
and
lock
xchg
cmpsb
insl
cmpsl
jns
xor
cmp
addr16
mov
aas
loope
mov
push
pop
dec
pop
push
push
dec
adc
push
popa
inc
insb
add
mov
loopne
icebp
push
mov
inc
outsb
sti
push
inc
xchg
rclb
adc
mov
adcl
jo
dec
jmp
outsb
aam
in
jae
clc
mov
out
and
popf
std
icebp
push
fsubrs
popf
dec
mov
push
stc
cmpsl
sbb
cmp
xchg
and
inc
bound
pop
lret
rolb
ret
pushf
mov
pushf
xchg
adc
cwtl
push
jg
sub
fisttps
jb
sbb
shr
std
fildll
aad
in
add
es
rorb
imul
ror
cmp
sar
or
ja
insb
loopne
jp
fistpll
popf
inc
add
sbbb
addl
cmc
xchg
push
jbe
jp
push
pop
mov
js
cmpsl
rcll
lcall
or
std
mov
lret
ret
xor
inc
pop
es
lods
pop
inc
repz
dec
cmp
popa
inc
add
mov
out
popf
dec
repz
in
vpcmpgtw
fimull
aad
and
cmpsl
sub
cmp
ds
repnz
dec
aaa
lods
testl
xorl
inc
or
dec
test
in
and
jle
jl
pop
mov
adc
pusha
arpl
add
xchg
mov
push
mov
inc
jbe
add
loope
push
cwtl
lahf
test
test
lcall
dec
sub
sbb
popf
test
push
leave
pop
sbb
sti
and
lret
clc
cmp
push
sbb
aaa
jne
test
add
outsl
in
jecxz
nop
or
sub
call
rol
mov
cmpsl
lahf
into
push
adc
stos
push
aas
pop
cld
outsb
inc
xor
orl
mov
daa
jp
add
jge
mov
outsl
or
adc
dec
insb
lock
ds
inc
es
lea
sub
inc
mov
enter
cmpsb
cmp
hlt
xchg
mov
rorb
mov
pop
dec
loop
mov
jns
sub
xchg
daa
jecxz
xor
int
mov
clc
in
inc
loopne
pop
push
enter
pop
loopne
leave
sbb
shlb
lods
and
jmp
push
sbb
inc
xchg
lea
movsb
jb,pt
push
fildl
xchg
loop
rcrl
xchg
movsb
mov
sub
sbb
adc
adcb
mov
aam
pop
cld
mov
out
lret
and
das
test
pop
mov
rol
cmp
jmp
test
sbb
sub
idivl
pop
call
fildll
add
loope
test
cmp
or
mov
andb
das
cmc
mov
subl
inc
popa
jbe
cmp
ss
aas
push
std
mov
repz
dec
add
in
testb
ret
mov
icebp
in
je
sbb
mov
sbb
imul
jno
jns
pop
sbb
inc
sbb
pushf
aad
or
in
mov
lea
insl
add
loop
jno
popa
mov
mov
sbb
pop
out
xchg
sub
fxch
push
cmc
push
inc
push
movsl
pop
mov
sbb
ret
test
sarl
dec
cmpsl
lcall
ja
mov
inc
sbb
jae
fcomps
cld
jae
dec
imul
jb,pn
hlt
shll
adcl
cmp
or
jl
arpl
or
xchg
scas
cmp
jecxz
lds
fwait
pushf
loop
sub
popf
sub
or
std
ret
lcall
jae
jnp
mov
sub
hlt
cmp
sub
ret
fwait
sbb
mov
inc
je
dec
movsl
fstpl
je
fistpll
lods
dec
xor
mov
adc
stos
adc
lret
addr16
iret
mov
loope
cmc
addr16
mov
push
cld
mov
loope
or
fisttpl
mov
mov
mov
inc
push
inc
and
mov
daa
push
cwtl
repnz
repz
jno
pushf
dec
lods
por
push
pop
ret
adc
mov
stc
add
sbb
xor
fcmovbe
fistpll
mov
enter
cmp
jmp
jp
xor
ret
dec
cmc
adc
mov
fldl
jle
mov
in
and
es
pop
adc
vorpd
enter
ror
in
ja
dec
in
xor
add
out
and
adc
xchg
mov
push
imul
js
mov
and
jno
mov
push
mov
shlb
outsb
hlt
int3
mov
popf
inc
mov
adc
aad
and
adc
mov
outsl
aas
loopne,pn
ret
lcall
pop
jo
mov
mov
inc
into
mov
inc
mov
mov
mov
mov
rcl
xor
inc
and
mov
movsb
xor
adc
push
and
xor
addr16
sar
cmp
mov
push
mov
imul
sbb
bound
sub
test
jno
push
inc
mov
mov
cld
fnstenv
cmp
mov
ja
push
movsb
dec
mov
xor
js
frstor
movsl
xor
mov
cwtl
enter
sub
bound
add
push
jnp
mov
cmpsb
leave
leave
xor
sub
sub
fimull
pushf
stos
sub
mov
lods
dec
jmp
dec
sbb
adc
popf
ret
call
and
out
pop
pop
je
movsb
or
insb
jae
xor
sbb
xor
fs
call
scas
loope
pop
hlt
pop
imul
xchg
fldcw
je
add
and
xchg
shll
fs
aad
mov
sub
mov
mov
inc
cmp
mov
push
loop
adc
add
cmp
pop
cmpl
sbb
cltd
imul
fdivrl
inc
repz
add
mov
inc
outsl
icebp
sub
test
imul
add
cmpsb
push
pop
repnz
inc
mov
and
xor
sub
jnp
pusha
ret
lods
mov
and
in
sbb
outsl
jns
mov
pop
cmp
scas
lret
movsb
cmp
decb
cmp
lret
outsb
imul
icebp
imul
inc
scas
aad
popa
mov
adc
cltd
shrl
xchg
or
popa
and
mov
sub
ffreep
xchg
jl
cmpsb
bound
scas
cmpsb
cmp
mov
fisttps
push
stc
cmp
jle
dec
push
insb
dec
stos
movsl
aam
pop
xor
cmp
fstpl
xor
std
int3
cmp
or
sti
pusha
push
loope
testl
cld
mov
test
pop
mov
pop
lods
add
lods
mov
ret
add
repnz
mov
idiv
inc
mov
mov
xchg
mov
int
pop
mov
jp
push
cltd
std
es
push
sbb
dec
leave
xchg
mov
dec
pop
mov
jmp
pop
fwait
sub
pushf
lods
pop
dec
or
arpl
fbstp
les
cs
jge
pushf
inc
lcall
pop
cld
cmpl
stos
dec
jne
jge
push
inc
mov
ret
ror
inc
sub
pop
jp
cld
pop
imul
dec
aas
cmpsb
mov
mov
lods
outsl
or
in
xor
enter
in
jg
and
mov
movntps
std
pop
ret
test
notb
jge
mov
pop
xchg
jbe
iret
jno
inc
mov
fildll
pop
lds
filds
mov
fisubl
jae
pop
lcall
mov
add
js
call
cwtl
je
pop
subl
shrl
data16
sbb
dec
push
mov
stc
icebp
daa
pop
jmp
xlat
fistps
repnz
pop
je
sbb
adc
jp
ret
inc
push
sub
xchg
out
imul
or
insl
jg
push
jb
xchg
cld
dec
or
lods
jmp
sbb
mov
sub
dec
mov
aam
stos
in
mov
and
pop
cltd
fwait
cmp
adc
dec
rorb
jmp
testb
rorl
mov
cmpsb
int3
stos
xchg
outsl
sti
scas
xorb
iret
jl
sbb
fldenv
cmp
add
xchg
or
aad
scas
dec
add
out
das
and
lahf
mov
mov
ja
inc
push
dec
adc
sbb
movsl
sub
dec
lret
inc
scas
mov
ret
cs
in
and
adc
jno
jb
imul
inc
or
mov
iret
add
fcmovbe
subb
push
add
inc
mov
repz
add
mov
test
fsub
loope
jmp
add
jnp
loope
icebp
push
sahf
imul
dec
sbb
cmpsb
xor
fcompl
dec
mov
call
mov
push
inc
cwtl
mov
test
in
dec
push
cli
inc
pop
cmp
mov
cs
jp
adc
dec
xchg
js
add
sti
xlat
mov
outsb
xchg
push
mov
stos
fwait
push
repnz
inc
xor
dec
lods
iret
push
repnz
ja
mov
xor
or
adc
inc
mov
adc
lahf
out
fistpl
push
test
and
leave
in
scas
adc
adc
mov
aaa
mov
jl
movsl
mov
and
jno
or
lods
adc
ret
and
inc
repnz
insb
mov
jne
lcall
pop
pop
movsb
scas
mov
subb
jns
fisttpl
out
into
add
mul
xlat
das
leave
push
mov
pop
push
push
jecxz
shlb
adc
incb
dec
push
xchg
jmp
pop
inc
lcall
and
pop
sar
aad
sbb
cmc
dec
push
nop
lret
xor
lods
in
push
inc
pop
xchg
ret
xor
repnz
lahf
mov
out
fists
aad
jg
std
mov
xchg
sub
outsl
push
or
out
sbb
out
dec
sahf
leave
xor
pop
jo
cmp
cld
in
movsl
movsb
cwtl
sub
or
mov
sbb
fmuls
add
sbb
mov
fisubrl
lret
adc
pop
fimull
add
jno
comiss
fldl
mov
xchg
data16
push
popf
ficompl
jae
and
sbb
ss
jne
pop
pop
cmp
mov
out
mov
les
movsb
and
xchg
add
mov
stos
xor
cmpsl
xchg
mov
aas
push
mov
mov
xchg
lea
shr
packssdw
pop
loop
iret
or
mov
jns
push
xchg
sbb
mov
bound
jmp
jnp
getsec
pop
scas
popf
dec
outsb
sbb
loopne
pop
mov
inc
sbb
cmp
dec
xchg
push
pop
jle
cmp
hlt
scas
cmpsb
pop
push
arpl
dec
fwait
and
stos
pop
sub
jnp
repz
cmp
and
imul
mov
insb
jp
loopne
ljmp
cmp
lock
sbb
daa
lret
mov
jmp
ja
inc
mov
aaa
lds
push
xchg
sbb
call
jno
mov
add
pop
dec
aad
aaa
jp
or
movsl
jbe
cmp
jb
jae
aam
mov
xchg
clc
xor
inc
arpl
mov
inc
outsl
ljmp
cmpsb
out
test
mov
sbb
jno
fdivrs
lds
and
or
sbb
frstor
popf
jo
test
arpl
add
cld
mov
in
sub
mov
dec
das
mov
mov
inc
jl
imul
arpl
movsb
pop
out
jns
fiaddl
dec
pushf
inc
xchg
scas
rorb
int3
xchg
in
push
mov
inc
ffreep
data16
cmp
clc
pusha
pop
lahf
repnz
icebp
or
inc
jae
bound
sbb
pop
mov
mov
xchg
testb
mov
fcomi
pop
pop
icebp
fisubl
xor
mov
jl
imul
jecxz
cmp
adc
xchg
sbb
sti
or
or
popf
mov
stc
jo
jmp
mov
lods
and
call
dec
cmp
call
inc
xor
dec
xchg
add
pop
int3
iret
mov
xchg
jmp
fistl
es
loop
mov
out
int
lds
and
lret
pop
xor
gs
xor
lock
sbb
fs
sub
enter
out
push
mov
cmc
mov
bound
pop
add
hlt
repnz
orl
data16
gs
xchg
pushf
pop
scas
sub
inc
lret
adc
scas
jb
mov
mov
mov
lea
mov
sbb
mov
cmp
sub
pop
mov
lret
mov
stc
mov
inc
xchg
adc
test
out
pop
fimull
sbb
aaa
js
or
sti
je
ds
setnp
add
mov
push
cltd
adc
les
mov
ja
adc
adc
cs
hlt
popa
cli
rorl
push
mov
xchg
adc
mov
clc
xchg
ret
rorl
inc
push
pop
push
jae
pop
notb
aas
jns
or
shll
int3
data16
dec
scas
mov
sti
jnp
xchg
xchg
ds
es
or
in
int
and
pcmpgtd
insb
sti
aam
xchg
push
fbld
iret
xchg
jmp
lcall
je
int
adc
xlat
xorl
shrb
xor
pop
in
xor
mov
jge
test
sub
fdivrl
scas
aam
in
mov
xchg
dec
stc
mov
pop
sub
add
jo
sbb
outsl
bound
lret
cmp
mov
add
cmp
mov
inc
push
inc
dec
xor
int3
xlat
and
inc
scas
mov
cmc
in
mov
dec
add
xor
les
aaa
jg
push
sbb
call
inc
bound
pop
or
fldenv
xchg
mov
mov
int
fldenv
mov
out
pop
push
mov
movsb
mov
inc
jb
out
jp
rcrl
ds
cs
dec
nop
rclb
sbb
push
inc
dec
or
out
leave
stos
cwtl
mov
adc
insl
orb
pop
enter
aas
jmp
ss
jb
vaddss
popa
loope
arpl
pop
pop
xchg
cmc
out
push
fisubl
pop
mov
mov
mov
add
repnz
into
mov
mov
mov
fstl
jmp
outsl
loop
imul
cmpsb
sbbb
gs
in
scas
mov
dec
or
and
test
insb
rolb
lret
fmull
mov
out
add
push
xchg
inc
je
mov
mov
sarb
inc
ljmp
cmp
add
sbb
cmpsb
add
lods
out
mov
dec
stos
push
stos
and
int
sbb
xchg
xor
test
xchg
stos
adc
scas
jge
mov
xlat
or
sbb
push
pop
inc
cmp
inc
andb
pop
loopne
out
stc
adc
sub
aam
jnp
int
mov
adc
cmpsl
ficomps
leave
clc
sbb
cmp
das
aad
test
leave
bound
pop
xchg
xor
dec
cmp
int
repz
or
test
jb
sbb
pusha
lock
jg
xor
mov
sti
repnz
sub
stc
cmc
les
rcr
xor
push
jle
xlat
xchg
or
jae
lds
aad
and
push
pop
mov
and
adc
scas
dec
pop
in
fidivs
testb
push
insb
add
insl
or
cld
shr
dec
jae
aaa
adcb
addr16
int3
fcmovne
orl
dec
out
and
jp
pop
int3
mov
jl
test
out
sbb
xchg
mov
popf
or
jno
fcmovb
or
add
or
sbb
ret
push
sbb
iret
inc
loopne
daa
outsl
sub
mov
je
fldcw
dec
jp
sub
jo
xchg
push
inc
xor
jl
mov
fsubs
jmp
test
fisubs
or
xor
jns
sbb
pop
mov
lds
cltd
mov
jnp
fsts
ret
pop
hlt
roll
jnp
mov
mov
addr16
test
lods
xchg
push
pop
cld
inc
stos
negb
cltd
fildl
and
fcompl
dec
stos
cmp
int3
dec
sar
in
jecxz
sbb
sbb
clc
mov
hlt
ret
mov
bound
repnz
sub
add
rolb
insb
sub
std
jecxz
dec
outsl
repnz
fisttpl
ret
ljmp
mov
cmpl
sbb
xlat
or
push
stos
mov
stos
sbb
repz
icebp
outsb
icebp
mov
jo
and
mov
and
clc
xchg
jl
mov
lods
cmp
popa
jno
ud0
dec
add
xchg
hlt
mov
incb
pop
pop
push
scas
xor
sar
xchg
push
jae
add
fisubrl
fadds
cwtl
dec
rcll
add
mov
xchg
or
out
push
push
mov
mov
xor
xchg
cmpsl
xor
inc
mov
sub
aas
movsl
stc
test
popf
xor
and
scas
xlat
or
push
xor
pop
push
sub
xchg
pop
bound
ret
dec
lcall
xchg
repz
jo
mov
adc
adc
jo
popf
mov
icebp
sub
dec
or
jge
sub
dec
sub
xor
test
push
sbb
inc
mov
xchg
sub
add
inc
dec
mov
cmp
adc
mov
iret
mov
out
mov
xlat
xchg
jno
inc
popa
scas
inc
lods
sbb
clc
pop
loope
inc
mov
sti
fcmovbe
adc
cld
push
popa
push
mov
mov
or
inc
cmpsl
mov
lret
mov
pop
cli
inc
push
nop
cmp
cltd
mov
movsl
in
stc
xor
cwtl
rol
in
int3
dec
fwait
push
adc
dec
inc
adc
jle
fisttps
push
in
ret
cmc
or
aam
xchg
mov
inc
push
int3
cmp
sub
xlat
cmc
mov
sbb
lods
inc
ror
popf
data16
dec
push
sbb
sbb
into
add
or
jbe
jno
cmpsb
pop
das
mov
dec
sbb
hlt
js
filds
insl
sbb
mov
flds
mov
repnz
sbb
mov
jns
push
adc
out
adc
pusha
sub
in
xor
mov
std
inc
add
sbb
xchg
movsl
cmp
mov
cmp
ficoml
adc
iret
or
into
hlt
sub
pop
test
mov
dec
sub
pop
je
cmpsl
push
and
js
xor
pop
xchg
jl
sub
imul
aaa
andl
push
das
movsl
jb
cmp
out
insb
leave
or
jnp
or
xchg
js
aas
outsb
in
mov
dec
gs
jg
lods
sarb
cmp
mov
imul
dec
scas
push
mov
and
arpl
repz
mov
int
in
cs
sbb
or
jg
scas
aas
and
pop
addr16
cltd
xchg
add
out
pop
xor
push
xor
sbb
je
test
sbb
cli
pop
callw
and
test
sahf
jbe
loope
aaa
jbe
dec
lods
andb
push
mov
xor
push
xchg
aam
addl
pop
adcb
xor
insb
fistl
sub
inc
pop
ficoml
fwait
test
adc
fs
push
add
jo
pop
shll
fsts
push
arpl
mov
sbb
push
jmp
adc
into
cmp
aas
adc
cmp
push
sarb
sbb
push
filds
lahf
xchg
and
sub
sub
arpl
hlt
pop
push
inc
jecxz
out
addb
add
insl
xchg
jmp
cmp
dec
cmpsl
cmpsb
fcoms
mov
add
pushf
repnz
jle
into
mov
fdivrl
fisttpl
ds
and
mov
mov
adc
inc
jle
jbe
shl
cmp
enter
push
iret
pop
adc
test
subb
mov
xchg
jo
sub
and
pop
out
subb
filds
pop
shl
rolb
int
lea
cmp
stc
jecxz
aad
mov
pop
sub
pop
push
xor
sub
sub
xchg
jle
imul
push
add
mov
aas
or
test
test
sub
stos
pop
mov
aaa
test
cmp
aad
mov
xor
addr16
mov
xchg
in
xchg
cli
mov
dec
in
stc
lock
in
fiaddl
imul
cld
out
loope
inc
and
push
sub
divl
xor
pop
mov
mov
add
out
out
xchg
cwtl
pop
scas
add
xor
sub
addb
pop
add
fists
ret
jmp
mov
mov
mov
adc
data16
mov
xor
sbb
push
mov
pop
cmpsl
or
mov
rcll
cltd
pop
test
jge
and
fdivrl
fcomps
xchg
sub
outsb
jne
sbb
pop
inc
ret
iret
jns
xchg
in
inc
fidivrs
sub
cmp
jmp
das
xor
outsb
cmpl
jl
dec
cmp
pop
pop
das
dec
mov
add
cltd
popf
pop
xlat
mull
xchg
aam
push
daa
or
xchg
mov
in
mov
fdivl
cs
fisttps
push
push
adc
or
mov
xor
cli
scas
int
decl
rclb
sub
pop
rorl
cmp
cld
push
push
mov
cltd
pusha
xchg
insl
sbb
pop
pusha
shld
flds
pusha
insb
sbb
iret
sbbb
jo
mov
sbb
call
or
dec
push
fistpl
xor
ss
daa
daa
add
jg
or
adc
lahf
mov
jnp
hlt
cmpsl
xchg
in
cmp
imul
mov
dec
test
and
mov
test
movsl
xchg
insb
cmp
bound
dec
test
pop
aaa
cmp
sbb
push
loop
adc
xor
xchg
loope
ret
mov
jg
iret
cmpsb
fdivrs
xor
int
mov
scas
out
pop
in
in
out
add
bound
in
add
cli
in
cmpsb
cmpsl
dec
out
call
pop
iret
or
push
mov
into
mov
mov
shufps
mov
pop
loopne
push
ja
in
cmp
repnz
cmp
cmp
into
push
subb
das
jnp
sub
mov
jb
fdivp
jg
punpckhwd
jnp
xchg
mov
mov
pop
sti
mov
mov
xchg
movsl
jecxz
cmp
cld
lret
inc
fldenv
cmp
stc
rolb
test
mov
cs
or
rol
push
cwtl
in
int3
andb
or
dec
outsl
mov
sub
push
stos
xor
xor
xor
mov
mov
or
add
inc
ljmp
push
aam
test
adc
dec
inc
mov
push
into
adc
or
dec
dec
stos
mov
outsl
or
pop
jo
push
inc
sbb
sbb
lea
movsb
xor
mov
cmp
pop
lods
dec
xchg
andl
mov
jg
lret
repnz
jg
lahf
lds
aaa
cmc
nop
xor
int3
xchg
mov
pop
rcl
mov
pushf
bound
movsb
int
xor
push
cmpsb
int3
or
ret
dec
mov
test
arpl
aam
xchg
cs
mov
fildl
cs
bound
xor
ror
pop
push
jnp
ja
adc
cmp
jnp
call
bound
mov
rcl
inc
inc
scas
mov
lods
ds
ret
aam
mov
dec
sub
pop
test
sarb
add
subb
in
jns
rcll
mov
push
aaa
hlt
xor
ud0
mov
leave
or
arpl
sti
sbb
scas
lods
cmp
inc
and
pushl
xor
mov
inc
addr16
sbb
jb
or
mov
scas
xchg
lret
in
and
jae
stos
aad
cmpsl
sahf
int
xor
mov
mov
sub
mov
aam
mov
xor
sar
mov
sti
and
add
adc
out
sub
cmp
and
push
jp
or
jle
sbb
mov
movsb
aaa
mov
adc
aas
pop
dec
fnstcw
mov
mov
stc
fcomps
sbb
fcomps
dec
in
sbb
hlt
clc
adc
sti
adc
fdivrl
mov
dec
add
push
popf
inc
xor
in
inc
ss
or
push
mov
outsb
dec
fcoms
cmpsb
push
and
mov
xchg
push
xchg
pop
inc
adc
mov
jbe
push
and
and
arpl
jns
repz
addr16
dec
notl
loop
scas
adc
lds
fsubs
sarb
pop
popa
adc
jbe
ret
push
jg
cld
out
ret
inc
sub
rcrl
outsb
cmpsb
dec
sahf
hlt
sbb
imull
dec
arpl
shrb
mov
dec
pop
std
jge
add
pushf
mov
outsl
add
call
jb
mov
add
mov
jmp
popf
insl
and
pop
cli
pop
mov
aam
inc
call
sub
inc
sub
xchg
adc
ret
xor
int
sti
daa
ljmp
dec
adc
cli
mov
jne
sahf
movsl
cmp
hlt
jle
mov
dec
sarl
cmp
mov
add
bound
mov
cmp
add
and
push
cmpsl
dec
dec
or
faddl
inc
addr16
jnp
cld
test
push
shl
loopne
dec
enter
nop
mov
xchg
into
shrl
jnp
cwtl
jbe
sub
negb
xor
in
rol
ljmp
xchg
or
xor
fadds
cmp
ret
add
lcall
push
jo
iret
dec
cmpsl
jae
mov
xchg
mov
push
mov
push
and
rorl
sbb
mov
dec
cmp
aaa
lret
inc
xor
notl
ret
testb
dec
iret
lods
or
cltd
sub
imul
jl
or
sub
fiaddl
ljmp
cltd
add
mov
push
daa
es
inc
mov
mov
mov
or
or
dec
subl
add
dec
push
fnstenv
scas
jb
jae
sub
or
test
add
or
jg
lods
and
inc
mov
push
xchg
mov
fmull
int
mov
mov
xor
push
sub
lcall
cltd
xlat
dec
add
and
cmp
push
cmp
test
add
mov
xor
dec
cmc
xchg
cmp
movsb
inc
stc
jp
inc
bound
scas
jl
sarb
dec
or
icebp
or
mov
jne
in
or
cmpsb
es
and
lds
xor
add
aam
gs
test
clc
mov
mov
sti
inc
mov
push
fidivl
and
lret
fs
idivl
in
adc
jl
jno
cs
or
push
xchg
mov
jmp
mov
pop
mov
daa
int3
out
mov
lea
out
gs
jbe
cli
pop
push
xorb
ja
in
push
cmp
pusha
pop
scas
call
cmp
sub
popaw
sub
dec
stos
push
push
pop
jno
xor
rolb
ja
subl
lcall
or
out
lods
gs
int3
leave
or
outsl
sub
add
xchg
sbb
cld
xor
out
pop
jmp
rolb
aam
adc
xchg
insl
add
jb
pop
jae
jo
fadd
mov
mov
xchg
outsl
cmp
mov
and
shll
addl
repnz
addr16
sbb
mov
or
clc
sbb
imul
sbb
fwait
mov
mov
push
mov
test
and
xchg
mov
inc
cmp
ret
cli
mov
pop
xor
daa
cmp
das
insb
adc
and
push
movsl
adc
add
insl
jg
add
bound
mov
pushf
mov
push
adc
mov
adc
sbb
and
cld
test
popf
loop
add
jmp
fsts
pushf
bound
xchg
adc
inc
and
jne
inc
test
mov
xchg
mov
dec
ret
mov
cltd
stc
loopne
mov
add
js
cmpsl
leave
test
mov
scas
pop
push
std
add
pop
pushf
or
das
lods
cltd
xor
in
stc
ss
call
in
mov
mov
loope
je
mov
cmp
pusha
xchg
xor
pop
enter
imul
popf
lods
sbb
int
imul
lret
andl
jne
and
mov
jle
movsl
add
dec
imul
sbb
popf
mov
movsl
jbe
pop
test
jnp
popa
fcomip
outsb
ror
ljmp
rorl
cmpsl
adc
mov
cmpl
scas
jecxz
push
jp
test
mov
and
lret
shl
lock
test
sub
push
push
mov
hlt
into
push
in
mov
daa
ret
jo
add
ret
xchg
sbb
jbe
push
push
jl
cmp
mov
mov
outsb
pop
pop
cmpl
mov
cmp
jne
lock
xchg
addl
or
mov
out
loopne
cmc
dec
lds
rcrb
das
mov
inc
les
popa
adc
lcall
push
sub
jge
inc
push
dec
xchg
cmp
or
fisubrl
jno
jecxz
and
jmp
adc
fwait
inc
or
loope
add
adc
sarb
insb
scas
dec
mov
cs
inc
push
xor
aad
lahf
mov
fs
leave
or
out
sahf
adc
dec
mov
pop
ds
pop
les
push
xor
stos
pop
cltd
mov
or
push
and
fs
stc
sbbl
push
mov
dec
into
inc
int3
mov
imul
push
jg
stc
jne
xor
mov
or
stc
repz
popf
push
inc
xor
sub
dec
lock
sbb
int
mov
pop
xor
leave
mov
das
movsl
mov
inc
sbb
fisubs
xchg
xor
aam
lcall
fldpi
movsl
loopne
mov
pop
add
fbstp
or
in
mov
lods
pop
test
or
xor
ds
cmp
movsb
mov
pop
ljmp
jbe
idivb
lret
test
shl
inc
sbb
in
add
incl
imul
pop
int3
rcrb
addr16
cmpsl
cmp
jae
outsl
sbb
sub
add
mov
lahf
mov
out
dec
mov
orb
test
lods
mov
cmp
xor
dec
jl
jecxz
or
xor
fxch
inc
lods
inc
add
test
test
pop
or
mov
adc
jge
imul
sbb
add
ds
lock
test
mov
je
enter
scas
orb
sbb
iret
xchg
and
inc
mov
lahf
cmp
in
inc
mov
inc
notb
std
and
add
pushf
pop
dec
sub
mov
pushf
dec
in
or
test
mov
ljmp
sub
push
pop
xchg
pop
fwait
adc
jg
or
or
enter
jae
mov
in
test
in
rcll
cmc
aas
rcrb
mov
int
jbe
xchg
cmc
xor
flds
pusha
and
rcll
xor
pop
adc
sub
lea
pop
push
mov
push
sbb
dec
cmp
sbb
jecxz
out
imul
je
test
adc
out
in
paddw
jg
lock
rcrb
mov
jb
fs
jecxz
imul
in
mov
rorl
or
call
shl
sbb
mov
ret
repnz
mov
adc
mov
jl
or
xor
cmpsl
pop
mov
mov
jecxz
les
filds
or
dec
cmp
add
inc
mov
lods
adc
dec
jb
flds
ss
scas
outsl
sub
xor
sub
stos
addr16
pop
dec
mov
mov
jns
jb
mov
mov
mov
mov
xchg
pusha
sbb
inc
jecxz
and
mov
dec
in
mov
or
icebp
lods
popl
fists
lea
xchg
push
xorb
leave
push
out
je
outsb
mov
stos
int
mov
ss
cmp
and
xor
mov
add
dec
lock
jns
lds
cmp
ds
xchg
pop
inc
and
outsl
mov
enter
cmp
icebp
or
inc
popa
nop
push
mov
in
vsubps
push
push
sti
daa
adc
xor
popf
add
lret
mov
mov
dec
push
out
insl
mov
sbb
or
lret
push
and
jmp
sahf
xlat
enter
test
mov
and
jge
icebp
sub
cmp
push
sti
inc
call
add
addl
fstps
shlb
int
and
add
repnz
cmp
orl
jo
jp
or
push
pop
nop
nop
jl
pop
add
push
lock
shll
mov
inc
js
ret
js
int3
movsl
loope
das
das
popf
enter
adc
dec
clc
push
inc
mov
sub
loop
lcall
push
dec
int
lock
loope
mov
xor
mov
adcl
cmpl
push
pushf
dec
mov
jns
or
add
sub
cmpsl
addl
in
mov
jge
inc
jge
test
xor
xor
lock
inc
add
push
loop
sub
mov
sub
aam
fadds
movsb
pop
mov
subb
outsb
dec
aad
std
xor
lahf
add
xchg
clc
add
push
cmp
aam
dec
mov
xchg
arpl
or
pop
call
in
adc
je
int
es
ficomps
hlt
cmp
xor
mov
pusha
ret
lock
test
imul
out
jecxz
imul
sub
out
cmp
scas
xchg
cmp
lods
push
ja
in
mov
call
in
cmc
ljmp
mov
push
out
ficomps
jg
lret
push
sub
mov
mov
sub
sbb
das
aaa
lret
icebp
lahf
push
shlb
inc
push
inc
aas
lods
inc
xchg
popl
outsl
fsubl
dec
sbb
add
imul
into
aas
cmp
push
and
fidivrl
rorb
jmp
xchg
adc
fwait
xchg
inc
sub
hlt
negb
jge
lea
mov
dec
mov
dec
mov
cmpsb
sbb
fstps
fisubrs
and
sbb
inc
cli
popa
mov
xor
cmp
xor
jae
or
pusha
rorl
and
jmp
sahf
leave
into
push
sar
inc
mov
mov
inc
int3
pop
and
je
ds
mov
pop
pop
scas
ret
out
ja
repnz
or
std
testl
pop
mov
in
fbstp
stc
in
cmp
decb
jg
test
lret
into
mov
jns
in
repnz
push
out
ljmp
rcll
mov
dec
mov
iret
out
loope
ja
popf
mov
mov
loopne
cwtl
sahf
scas
xchg
mov
inc
xchg
or
arpl
pushf
mov
cli
push
mov
mov
cmp
jno
mov
sub
das
adc
mov
enter
es
adc
xchg
int3
and
stc
loope
movsl
and
inc
dec
aad
push
out
dec
fst
push
sti
lret
sub
es
or
aas
sub
das
fidivrs
add
js
or
out
roll
hlt
stos
sub
shll
lods
push
mov
adc
jecxz
mov
jp
addl
adcl
ret
cmp
in
lahf
outsb
inc
fmul
cs
ficomps
repz
faddp
cltd
add
popa
sahf
daa
xor
lock
push
mov
xor
lds
dec
in
cli
or
cmpsb
pop
dec
lss
rorb
xor
xchg
and
or
pop
adc
push
sbb
jge
mov
scas
std
lods
xor
loop
movsb
shlb
mov
sub
popf
rorb
stos
mov
adc
ljmp
dec
xchg
aad
in
pop
arpl
mov
es
mov
xorl
int3
jmp
or
and
mov
ds
xchg
add
ret
gs
mov
fisubrl
adc
xor
mov
bound
pop
dec
sbb
fs
mov
lods
jo
xor
loope
sahf
jne
sub
lret
inc
insl
ret
subl
sub
insb
or
adc
cld
and
adc
mov
xor
aas
test
out
adc
mov
mov
adc
addr16
jno
out
xchg
and
or
enter
mov
roll
cmp
fsubrl
or
mov
mov
jne
nop
add
cmp
or
inc
fwait
mov
dec
xor
iret
lret
or
repnz
stc
cmp
sub
daa
inc
adc
xchg
int
lret
push
insl
leave
dec
js
push
cli
dec
addr16
test
cmp
mov
bound
out
jl
jne
inc
aas
repnz
xchg
std
cld
adc
cmpl
daa
add
inc
mov
out
cmc
xchg
dec
jp
jmp
and
inc
pop
fdivs
mov
orl
mov
repz
mov
testl
cmp
add
movsb
sub
sbb
mov
call
push
fistl
in
enter
in
cmp
pop
ljmp
jp
jne
fwait
dec
xor
popa
pop
aas
out
aas
int
cli
lods
xchg
clc
pop
iret
cmpsl
push
stos
hlt
stc
jne
jg
sbbb
pop
jge
mov
in
mov
loope
ja
mov
in
jnp
push
xor
inc
ja
dec
xchg
mov
pushf
sub
testb
and
adc
in
sub
inc
out
mov
insl
jp
xor
lcall
adc
jl
mov
jecxz
in
push
xor
in
sahf
out
pop
pop
gs
test
dec
js
cmp
cltd
ljmp
repz
adc
add
sbb
and
cmp
mov
mov
stc
into
ljmp
mov
xchg
mov
sti
sub
dec
cltd
test
loopne
je
sub
push
movsl
shrb
dec
sub
xor
dec
pop
repz
jnp
xor
xchg
fisttpll
mov
xchg
jge
sbb
fwait
cltd
les
lock
ja
add
ljmp
test
or
ret
mov
jno
and
mov
std
fs
bound
int3
icebp
stos
adc
xchg
xor
sub
movsb
add
and
int3
repnz
andb
or
and
inc
jb
out
push
das
add
rclb
sti
jns
mov
jb
jnp
jmp
dec
clc
pop
mov
or
stc
adc
dec
nop
sbb
je
pop
push
add
fildll
sbb
mov
cmp
loopne
lret
sub
sub
call
dec
adc
aad
sbb
in
inc
or
out
in
add
or
fwait
test
test
mov
lea
sti
pop
inc
jl
rolb
cmp
insl
lret
loopne
sub
out
icebp
mov
xchg
hlt
push
mov
test
in
enter
cmpsl
test
mov
sahf
mov
adc
add
cmpsb
testb
jmp
fwait
movsb
in
cmp
sub
push
repz
andl
es
and
mov
add
jns
mov
in
jns
push
mov
fsubrs
push
sbb
aam
mov
mov
and
cltd
xchg
add
jp
inc
mov
test
xchg
xchg
and
pop
xor
jmp
fmuls
xor
lret
jecxz
add
mov
cmc
mov
out
dec
jg
lahf
aad
mov
subl
jmp
sub
std
xor
inc
rol
mov
pop
mov
mov
test
xor
cmp
xorl
mov
jne
pop
pop
push
xor
dec
push
sub
cmpsb
stos
cmp
imul
adc
rcl
lods
jne
adc
mov
or
not
fldenv
or
xor
mov
mov
mov
imul
or
jecxz
push
ret
cmp
scas
dec
subb
cmp
pop
jne
insb
insb
fmuls
sbb
cmp
cmp
jae
test
xchg
jne
cmc
test
fsubl
lods
and
imul
test
sahf
out
clc
cmp
decl
rcrl
sbb
push
cli
inc
mov
in
pop
xor
jns
cmpsl
jne
lea
shlb
jmp
loope
addr16
loopne
mov
aaa
mov
mov
test
lcall
in
adc
gs
jb
aam
cmp
inc
das
and
dec
sarb
call
jne
lea
jl
mov
lea
mov
or
aam
mov
pop
into
sbb
adc
sub
and
push
mov
xchg
orl
arpl
imul
mov
adc
cmpsl
decl
add
daa
or
ret
das
jmp
hlt
jle
cli
rcrb
lods
incb
test
movsl
mov
into
roll
push
fcoml
dec
hlt
add
sbb
mov
je
push
pushf
insb
lea
aas
cwtl
cmpsb
repnz
addr16
int3
je
dec
and
cmp
xchg
sti
or
inc
jb
imul
fdivl
lcall
iret
mov
cmp
imul
scas
pop
cmp
pop
or
neg
adc
jno
lahf
int3
sub
and
fisubrl
sbb
mov
out
pop
push
movsl
pop
add
or
testb
sub
cmp
adc
popa
add
js
and
in
cmp
mov
adcb
test
data16
imul
dec
imul
dec
jge
insb
pusha
mov
out
xor
cmp
push
sub
dec
test
pop
loop
jnp
aad
pushl
pop
shrb
loop
mov
scas
xchg
xchg
push
push
jne
outsl
jno
in
cld
add
xchg
push
mov
pop
in
lcall
sbb
pop
xor
das
loopne
jecxz
and
mov
into
fidivl
sbb
push
or
mov
pop
cld
cmpsl
push
int3
xchg
inc
gs
mov
push
or
popf
push
adc
cli
mov
xor
push
fists
cmp
lret
dec
loop
mov
xchg
jbe
cmpsb
int
iret
or
stos
add
and
dec
stc
xchg
add
sbb
jl
xchg
lcall
loope
mov
addr16
aas
shll
mov
jo
loop
ficompl
jbe
mov
cmp
insb
clc
lret
test
imulb
icebp
notl
cwtl
mov
jns
out
leave
xor
push
icebp
iret
pusha
xchg
and
push
add
add
cmp
lret
xor
das
mov
mov
mov
mov
xchg
jno
out
fadd
mov
mov
jge
out
add
pop
iret
mov
cwtl
movsb
adc
in
shll
rcr
leave
mov
sub
xchg
arpl
in
cmc
aaa
xor
push
andb
and
pusha
andl
add
or
imul
imul
add
xchg
jb
mov
cmp
mov
cs
or
adc
nop
shr
in
insb
punpcklwd
push
scas
sub
shll
mov
or
jle
cld
sbb
xor
jl
call
cltd
mov
inc
cld
jb
adc
cmp
sbb
rorl
jnp
jnp
xchg
scas
inc
cmp
lods
les
cmc
test
dec
sub
outsb
in
xorl
ja
cmp
inc
or
add
or
movsb
jge
fistpll
mov
adc
adc
mov
shll
xor
addl
test
mov
sbb
into
cmp
or
adc
add
mov
mulb
cmpsb
add
jle
cmp
loopne
pop
xchg
push
pop
in
cmp
or
jmp
iret
sub
arpl
clc
in
shl
rclb
xorl
enter
repz
nop
and
mul
add
lret
ss
fnstsw
pop
inc
inc
lods
pop
adc
insb
bound
xor
adc
aam
push
xlat
xchg
jnp
out
sbb
push
mov
test
les
add
fs
push
aam
jnp
test
stos
mov
push
jl
xor
lcall
inc
mov
cli
je
sbb
adc
lock
fwait
aaa
insb
mov
je
mull
popa
insb
mov
or
sbb
push
lods
jns
pop
fcmovu
push
jle
push
andb
xchg
add
clc
push
hlt
xor
xchg
mov
shrl
xchg
lea
xchg
pusha
jnp
lret
shr
in
mov
xchg
lods
data16
pop
jge
fsub
push
pop
or
stos
mov
dec
shrl
dec
in
data16
enter
iret
pop
lds
cwtl
cmp
mov
fisttpl
sub
dec
loopne
lret
push
cmp
lcall
sbb
repnz
stos
in
inc
dec
mov
in
popa
ret
add
outsb
dec
iret
pushf
icebp
sub
pop
jp
test
xchg
aam
xacquire
mov
and
les
xchg
push
mov
xlat
cmpsl
icebp
pop
lcall
dec
aam
outsl
shrb
xor
ret
int
inc
dec
repnz
test
jmp
dec
lock
push
jno
inc
inc
in
or
add
nop
sbb
cmpsl
inc
mov
inc
rol
mov
xor
cmpsb
clc
jmp
repnz
xor
jge
fcmovne
outsb
sub
xor
push
stc
add
mov
cmc
push
cmp
inc
jno
cbtw
inc
sbb
imul
pop
push
in
dec
pop
cwtl
push
lahf
enter
sub
pop
and
inc
hlt
mov
pop
shl
dec
shrl
jae
push
aas
outsl
jo
hlt
mov
dec
loop
add
or
pushf
lds
cmc
scas
out
mov
inc
fbstp
sahf
lea
mov
sbb
dec
repnz
xchg
repz
xchg
test
lcall
xchg
decl
mov
inc
negb
jbe
xchg
xchg
fsubs
out
je
hlt
or
lods
mov
int
adc
dec
jbe
pusha
insl
mov
mov
mov
jl
decb
movsb
pop
in
mov
out
dec
xchg
mov
out
scas
les
cli
dec
cld
push
lahf
or
lret
repz
in
test
icebp
cmp
inc
movl
mov
pop
loope
or
mov
sarl
xchg
aad
xor
push
push
mov
jp
lock
or
nop
jp
cs
xchg
xchg
popf
das
das
test
sbb
push
pop
ja
fsubl
pop
sbb
dec
jmp
xchg
xor
mov
xchg
in
cmp
imul
jnp
fnstsw
cmpsb
jbe
imul
add
adc
sti
scas
pop
rorl
cwtl
insl
jno
int3
xor
mov
or
shr
mov
or
ljmp
cli
jmp
adc
dec
xchg
pcmpeqb
jne
pop
xlat
sti
insb
test
fs
fidivrs
add
inc
mov
mov
xor
daa
lock
mov
jg
and
lret
sub
sub
add
mov
push
movsb
int
pop
sub
imul
or
xchg
mov
add
fistps
push
mov
aam
and
arpl
icebp
cli
test
cmp
orl
push
add
xchg
mov
lods
pop
lret
mov
dec
pop
mov
fsubs
std
cmpsb
leave
push
orb
or
and
pop
add
cmp
push
jnp
jmp
fiaddl
add
mov
or
ljmp
movsb
shlb
data16
jnp
xchg
push
add
nop
pop
mov
insb
call
mov
cmpb
sbb
pop
mov
aad
stos
shrb
fcomip
pop
in
lret
and
xlat
fldenv
nop
inc
pop
testl
addl
mov
pop
add
xor
xor
cmpsb
sbb
fadd
jle
addr16
adc
es
mov
in
icebp
out
repnz
sahf
mov
addb
mov
jl
sub
xchg
dec
call
adc
aas
jmp
test
add
jns
insl
mov
xchg
add
mov
stos
sbb
rclb
cmc
mov
daa
push
imul
pop
mov
and
mov
sub
aas
mov
pop
cmp
sub
sub
dec
inc
sub
adc
and
mov
inc
cmp
leave
and
ret
jge
or
in
and
test
push
push
inc
mov
leave
ja
pusha
mov
clc
xchg
fldt
gs
fimuls
popa
out
jne
loop
push
jb
mov
mov
or
sub
jg
push
and
lret
jmp
scas
push
pushf
int
arpl
shlb
add
je
pusha
pop
sub
dec
dec
mov
or
fucomip
pop
add
leave
fistpl
jbe
xor
mov
sahf
push
scas
xchg
fsubs
sub
cs
ds
mov
adc
mov
fistps
test
leave
aaa
jne
stos
jne
pop
and
pop
push
and
outsb
dec
movl
push
je
jbe
inc
add
push
add
add
pushf
bound
and
lods
dec
dec
call
negl
inc
gs
or
sub
arpl
in
cmp
sbb
and
aam
pop
sbb
out
lods
insl
inc
sbb
mov
mov
loop
stc
or
adcl
ja
cmp
sbb
jp
sarl
mov
loope
shlb
out
das
jae
adc
jle
test
add
and
cmpsb
inc
mov
jmp
sub
and
shll
sub
mov
loop
clc
sub
push
and
sahf
movsb
popa
loope
jmp
xchg
sbb
mov
pop
mov
push
fisubrl
sbb
jecxz
pop
pop
and
sbb
sbb
ja
pop
xchg
pop
cmp
inc
fistpll
add
mov
xchg
add
sub
push
int3
mov
push
divl
xchg
mov
lock
xor
ja
xchg
rorl
or
fimuls
rep
lods
lock
xor
daa
pop
pop
push
scas
cli
mov
mov
data16
pop
jae
in
adc
push
add
inc
mov
test
imulb
push
insl
mov
fildl
jae
fs
add
fmuls
inc
adc
dec
icebp
idiv
shll
outsb
push
outsb
sbb
mov
lret
loopne
mov
xchg
add
data16
mov
push
cmpb
dec
mov
jno
cmp
sahf
adc
cltd
aad
push
mov
xor
inc
insl
adc
inc
and
inc
fwait
fwait
insb
mov
enter
sbb
lea
mov
in
add
test
push
pop
pop
cmc
roll
sub
jmp
scas
cmpsb
jns
ficoml
pop
out
addl
xor
xchg
mov
add
sbb
es
lret
into
mov
out
in
loopne
xor
push
aad
mov
imul
cmove
sub
ljmp
call
or
es
sbb
pop
data16
nop
in
sbb
lock
jg
mov
sbb
jo
orl
cmp
fnsetpm(287
mov
lds
idiv
cmp
cmpl
sub
jl
les
inc
jl
clc
sbb
lret
mov
jge
mov
je
xchg
in
dec
xlat
jne
and
out
adc
cmp
mov
mov
cmc
stos
and
xlat
fldl
or
dec
ds
mov
shll
jmp
cld
cmp
jp
imul
dec
add
insb
stc
pushf
xlat
mov
cmpsb
es
aaa
inc
arpl
gs
push
add
stos
xor
dec
into
fmuls
lahf
xor
xor
test
sbbb
pop
lret
mov
inc
jnp
cmp
jns
push
sarl
out
loope
fwait
jp
ret
xor
leave
ljmp
mov
ret
sub
fs
ljmp
push
sub
clc
jecxz
and
pop
mov
mov
pop
ret
inc
lret
mov
movsl
mov
push
xchg
xchg
adc
ss
shl
pusha
test
in
aas
jmp
imul
call
and
sbb
fnstcw
test
jnp
fdivrp
jne
shlb
add
jns
lock
in
idiv
mov
cmc
scas
pop
adc
sbb
sbb
adc
out
loope
push
movsb
lcall
js
sbb
inc
and
ds
inc
push
push
sbb
dec
xor
out
fcomps
cmc
sbb
mov
cli
adc
and
pushf
lods
cmpsb
les
fisttps
push
fistl
mov
adc
pop
jns
cltd
push
call
push
adc
dec
mov
lods
inc
loope
stos
lahf
imul
sbb
and
sbbb
out
dec
mov
fs
mov
or
loop
or
sahf
shl
roll
cwtl
sti
imul
inc
in
movsl
xor
imul
inc
xor
arpl
std
hlt
enter
ficomps
ljmp
adc
xlat
js
rclb
xchg
cld
cs
xor
mov
mov
js
test
scas
push
cmc
adc
ds
movsl
adc
inc
pop
adcl
add
into
add
sub
xor
push
lahf
dec
imul
sbb
out
mov
pop
mov
cwtl
xor
popf
aam
push
lods
sarb
jecxz
loopne
mov
adc
xchg
imul
push
cs
lahf
xor
lea
fiaddl
and
loope
fisubrs
sbb
mov
js
mov
mov
loopne
pop
cmp
lcall
ss
push
push
and
add
and
fdivr
jno
push
push
int
adc
or
insl
add
cli
mov
mov
test
scas
or
mov
lds
pop
pop
pop
shll
jns
popf
and
mov
das
mov
and
jmp
scas
xchg
call
jbe
idivl
push
push
sub
or
hlt
lahf
pop
out
stos
mov
ds
pop
push
add
push
notl
mov
jl
push
pushf
and
mov
jo
stos
stos
outsb
loop
push
push
enter
cmp
inc
ret
cmp
sbb
cltd
das
sti
add
xor
jo
sbbb
in
scas
adc
scas
mov
stos
inc
cmc
inc
fstl
pop
lcall
or
adc
adc
mov
and
test
add
dec
and
std
orps
xor
xor
repnz
lods
into
jmp
xlat
das
mov
in
shlb
jp
jb
sbb
sti
jne
sub
pop
and
popa
and
xchg
jb
lods
out
js
les
mov
cmp
adc
or
cmp
mov
lahf
ss
push
fistps
stos
adc
dec
pshufw
scas
jnp
icebp
mov
inc
sti
mov
or
rorl
jno
outsb
int3
push
jg
movsl
aad
adc
mov
outsl
sti
scas
lret
pop
add
push
xchg
mov
pushf
into
sub
rcrb
mov
int3
cmpsl
stos
into
push
daa
ret
push
fcompl
iret
es
clc
xchg
cmp
add
add
jle
test
icebp
add
mov
dec
adc
das
cmp
lock
mov
sbb
es
movsl
mov
inc
cmp
mov
stos
es
inc
stos
test
adc
cmpsl
mov
inc
mov
roll
test
std
push
push
dec
jnp
fwait
test
rcrb
or
add
xchg
jb
jne
in
es
mov
ljmp
out
in
out
cmc
andl
mov
sub
xor
jmp
popa
sahf
cli
popf
testl
mov
dec
mov
loopne
pop
xchg
xor
popa
sti
mov
imul
pop
pop
mov
incl
movsl
data16
jno
ret
inc
and
add
mov
push
dec
jb
pop
adc
das
sub
or
push
sub
icebp
push
int3
mulb
aaa
push
xchg
xor
mov
push
pusha
cmp
mov
dec
rclb
shr
mov
mov
mov
xor
insb
or
cld
and
scas
jmp
jae
sbb
add
mov
addr16
mov
fidivl
xlat
addr16
mov
mov
jo
divb
push
ja
cltd
push
mov
jge
pop
cmp
adc
ret
outsl
xchg
pop
sbb
addb
jp
and
addr16
sbb
test
jmp
cmp
lods
jg
or
scas
popa
mov
pop
icebp
jecxz
mov
mov
adc
fsubs
push
xor
mov
mov
into
mov
add
and
fmul
pusha
pop
jae
clc
shl
pop
cli
push
dec
dec
fwait
jp
pop
mov
jns
mov
test
cmp
insb
bound
adc
pop
lea
stc
pop
cmp
fisubl
adc
xchg
shr
push
inc
or
lds
test
mov
stos
add
dec
adc
fistps
adc
push
or
jle
jne
dec
lods
adc
push
shrl
sbb
std
nop
or
sbb
sar
nop
xorb
imul
fwait
mov
or
movsl
nop
cmp
mov
cmp
xchg
jo
scas
cmp
loop
test
fidivrs
push
nop
out
sbb
jno,pn
jae
stc
lods
call
mov
xchg
xchg
mov
popa
and
ss
push
and
in
cmp
aaa
outsb
or
mov
into
into
out
cmc
push
rclb
sti
mov
in
sub
dec
or
int
gs
cli
mov
fldcw
inc
cltd
shlb
and
pop
call
sub
mov
loop
xor
jbe
scas
cmp
mov
dec
xorb
mov
sbb
dec
ljmp
insl
loope
cmpsb
out
mov
xor
pop
icebp
xor
ret
ret
sub
js
ret
fldt
lcall
xor
ds
ficomps
out
in
mov
test
xor
int3
mov
push
repz
fwait
push
lods
and
jo
mov
add
stc
cmp
lea
jp
arpl
das
mov
sahf
pop
adcl
xorb
roll
cmp
cmp
in
mov
fsubrl
aas
dec
and
adc
jno
jno
jmp
outsb
or
in
xor
lds
js
jb
sub
iret
dec
push
inc
dec
pusha
mov
mov
loop
stc
add
lret
mov
into
sbb
insl
xor
pop
cmpsb
cmpsb
fisttpll
iret
add
ljmp
cs
aam
sub
nop
fisttpll
cld
xor
popf
loopne
pop
xchg
arpl
ficoml
pusha
adc
sarl
jo
cwtl
cmp
cmp
insl
push
jns
arpl
sbb
in
outsl
dec
repz
test
outsl
imul
mov
push
out
jge
pop
and
pop
add
lret
mov
enter
dec
sahf
xchg
outsb
test
mov
pop
adcb
mov
sbb
repnz
fisubrl
push
imul
sub
lahf
mov
mov
sub
mov
lock
mov
and
push
popa
or
popa
aam
test
leave
jno
sub
aad
jbe
je
mov
adc
mov
and
fisubrl
cs
and
push
dec
ficomps
xlat
mov
mov
ja
stos
or
inc
adcb
add
aad
mov
pop
ret
sub
jmp
arpl
shrb
pop
push
sbb
jae
pop
adc
push
push
scas
dec
ret
push
xor
test
sbb
mov
testl
inc
lods
aad
cmpb
repz
in
jbe
cmpb
dec
inc
add
mov
testb
lods
jae
loopne
ljmp
inc
insl
ss
cmpsl
roll
je
sarb
negl
and
xor
adc
push
jnp
imul
sahf
fwait
aam
fmulp
inc
or
lea
push
and
jp
mov
addb
sbbl
fs
sbb
lcall
dec
idiv
test
addl
mov
ret
cld
cmp
daa
xchg
adc
test
dec
iret
ret
sub
rclb
and
es
xor
add
pop
or
sbbl
jmp
push
xchg
jnp
cwtl
in
sub
mov
enter
jg
add
pop
addb
mov
jo
inc
adc
jne
aas
adc
cmpsb
stos
or
iret
mov
pop
mov
xchg
ljmp
or
dec
sub
or
pop
xchg
pop
int
cmp
arpl
sbb
push
adc
xchg
or
daa
fsubrl
int
sbb
pop
test
in
outsb
mov
stos
sahf
add
stos
out
int3
dec
jecxz
rorb
xor
xor
out
dec
int3
loopne
mov
xchg
outsl
inc
xor
repnz
inc
sti
jp
sbb
pop
dec
push
xor
push
mov
or
xchg
pop
jae
adc
or
cmpsl
movsl
dec
inc
pop
cwtl
arpl
inc
add
sti
ret
ja
bound
cli
out
sti
inc
hlt
mov
mov
push
adc
mov
popf
es
lret
daa
add
cmc
jns
rorl
inc
adc
orb
jmp
icebp
sbb
mov
ds
push
clc
ja
inc
orb
adc
pop
add
enter
pop
dec
ds
les
cwtl
sub
scas
movsb
scas
xchg
stc
cli
pop
popf
mov
repz
nop
fnstsw
push
hlt
jmp
ds
dec
sbb
das
xchg
loopne
lods
in
jmp
inc
ret
cmp
ret
pushf
xchg
fdivrl
mov
ret
mov
call
or
mov
js
mov
lret
jne
lods
das
pop
push
rclb
pushf
push
mov
xor
sub
int3
xchg
loop
lahf
push
test
clc
sbb
scas
es
xchg
dec
inc
xchg
mov
inc
repnz
mov
out
jmp
add
mov
inc
cmp
nop
fdivrl
lock
pop
xorl
cmp
push
xor
in
movsb
xlat
jbe
js
push
bound
lds
add
mov
adc
and
jmp
inc
jmp
xchg
cmp
arpl
loop
add
outsb
out
xlat
and
jmp
sub
aas
aad
outsl
std
fdivrs
pusha
push
int3
aas
cltd
sahf
push
pusha
mov
and
inc
push
stc
sub
sarb
lret
lahf
and
jg
int3
jb
movsb
jmp
xor
pop
adc
jae
out
lret
dec
cmp
push
xor
jp
decb
stc
fs
rorl
inc
xchg
mov
into
out
push
jbe
add
adc
scas
add
xor
jae
cmp
mov
sahf
popa
vphaddubq
clc
hlt
loope
dec
fistpl
push
inc
out
mov
sbbl
mov
dec
loop
es
pop
out
pop
out
mov
xor
or
inc
xorb
xor
insb
movsl
movsl
les
sub
mov
out
imul
or
inc
and
insl
or
mov
dec
xchg
xor
cwtl
xor
mov
cmp
or
dec
les
cmp
xchg
fwait
cmp
push
push
adc
jb
pop
cmc
xchg
mov
repnz
insl
xchg
xor
inc
adc
shll
mov
cld
leave
mov
icebp
mov
push
repnz
sub
orb
xchg
adc
push
mov
cmp
or
inc
jle
jb
into
mov
jmp
sub
inc
mov
shlb
and
and
lret
into
xchg
xor
fyl2x
cld
shrl
in
hlt
into
out
nop
fisttps
imul
mov
push
cmpsb
daa
adc
cmp
shll
stos
adc
mov
mov
orb
test
sahf
mov
mov
xchg
push
fs
gs
mov
leave
adc
xor
cmp
jne
mov
rcll
or
loope
out
push
nop
mov
and
mov
ljmp
lcall
and
je
push
xchg
and
inc
sub
sub
mov
dec
sub
sub
mov
add
and
push
push
in
aad
pusha
jne
xchg
mov
sbb
popf
push
cs
pop
mov
cmp
dec
jp
inc
loope
xchg
inc
popa
out
adc
nop
pop
cmpsb
std
test
in
imull
not
iret
movsl
fstl
adc
test
xchg
xchg
das
xorl
int3
lret
rcrb
out
push
mov
push
add
xor
outsl
arpl
test
push
unpckhps
push
insb
push
aas
and
sub
cmpsb
lea
adc
fisubs
out
mov
pop
loope
lret
mov
sub
int
ficomps
fidivrl
jle
into
ds
sarl
repnz
stos
mov
or
loopne
clc
ds
xor
adc
ss
sub
shl
jle
xchg
jae
mov
add
adc
mov
push
mov
in
std
mov
dec
inc
nop
out
jge
stos
mov
rcl
xchg
stos
mov
outsl
mov
sub
add
dec
test
cmp
add
pop
nop
add
adc
fstpt
cmp
inc
ret
add
cs
loopne
pop
adc
jbe
lcall
outsl
data16
sbb
push
lods
mov
cmp
fwait
in
fwait
add
push
fsubrs
mov
cld
mov
xchg
pop
sbb
fidivrs
in
das
dec
and
jp
and
ljmp
cmp
incb
fadds
rcll
dec
iret
push
es
cmc
push
out
pop
xchg
fnstenv
roll
jmp
push
mov
incb
iret
pop
repnz
push
imul
add
nop
cmpsb
les
mov
and
and
push
mov
fbstp
lahf
lea
jno
outsl
test
mov
inc
sub
jl
fdiv
adc
mov
shll
fisttpl
pop
sub
pusha
ljmp
mov
scas
lock
push
bnd
mov
add
jae
mov
add
clc
add
iret
popf
or
sbb
bound
in
fimuls
adc
xchg
mov
sar
fldenv
int
repnz
lcall
push
inc
jp
jbe
pop
mov
ret
push
mov
inc
je
jbe
adc
imul
sub
cli
hlt
jae
inc
aam
ljmp
in
gs
push
iret
mov
mov
scas
mov
xchg
rcl
ret
pop
jg
out
pop
popfw
mov
test
or
dec
lcall
bound
mov
loop
cmpl
xor
das
pop
mov
push
adc
mov
jae
ret
adc
cmp
std
inc
xor
cmp
inc
dec
xchg
push
cmp
or
mov
lods
xor
jge
inc
mov
cmp
push
lcall
sub
call
leave
stos
aaa
jge
push
les
mov
sub
push
loopne
imul
adc
insb
fists
mov
arpl
dec
mov
xchg
or
jg
pop
mov
pop
pop
jg
jl
mov
mov
addb
mov
cli
outsb
es
jg
inc
xor
stc
hlt
cmc
pop
stos
aam
xor
mov
sbb
push
or
loopne
push
xchg
or
lret
jecxz
lea
push
and
data16
push
push
je
ficoms
int3
sbb
mov
insl
repnz
fdivr
inc
movsb
push
sti
orl
dec
mov
mov
mov
movsb
adcl
lods
call
jmp
jns
adc
xor
and
sarb
xor
cs
xchg
lcall
andl
in
aas
push
push
jne
out
lret
nop
sbb
push
loope
mov
loopne
push
imul
xlat
call
xor
dec
xchg
dec
or
cli
inc
mov
or
xor
xor
movsl
sarl
cmovns
mov
leave
mov
add
push
dec
stc
or
xchg
and
mov
in
movsl
stc
xchg
dec
mov
popf
mov
aam
push
mov
movsb
repz
add
sub
xchg
les
sub
loopne
adc
rolb
sub
jecxz
cmp
sub
mov
fs
mov
xor
ss
cmc
push
push
inc
fisubrs
and
sbb
xchg
pop
sbb
xchg
sub
scas
ret
jge
lret
xor
les
mov
and
xor
fcoml
xchg
out
jmp
test
adc
clc
mov
sub
popf
movsb
mov
push
cmp
rcrb
ljmp
add
jecxz
dec
push
int
ret
lea
xor
pushf
test
enter
adc
in
out
dec
and
push
dec
jg
adc
ljmp
jne
arpl
or
js
insl
push
cmpb
push
in
pop
xlat
lret
test
jo
shlb
nop
cwtl
sbb
ret
xlat
scas
mov
bound
lock
jne
cmp
lock
out
nop
popa
ljmp
imul
dec
test
and
jecxz
int
call
dec
sbb
push
sbbl
pop
adc
subb
sarb
jge
and
mov
push
sub
iret
rcl
lea
orb
insb
rclb
lds
jb
nop
jle
fldcw
jne
inc
loop
dec
sar
enter
push
int3
push
or
jge
mov
add
mov
jae
outsb
mov
ljmp
fnstsw
test
fnsave
in
jae
jecxz
out
arpl
popa
dec
popf
je
fsubl
cltd
pop
xchg
mov
outsl
xor
dec
xchg
push
sahf
dec
dec
cmp
sub
mov
mov
and
add
std
mov
jp
xor
imul
fwait
scas
sub
and
outsl
inc
or
int3
loop
mov
mov
add
mov
lcall
mov
outsl
cmp
fstps
insb
sub
jo
daa
insl
jb
stc
orb
cmpl
pop
stos
hlt
lea
pop
add
es
iret
fisubrl
fst
out
mulb
rcl
cs
in
jae
or
nop
daa
fldenv
dec
push
roll
jns
test
es
pop
and
jp
and
dec
mov
sub
addr16
and
lods
inc
outsb
jns
arpl
cli
xchg
push
orl
sbb
push
dec
mov
jbe
rolw
out
cmpsl
shl
je
bound
or
dec
pushf
loop
add
pushf
pop
in
mov
subl
out
xchg
inc
out
cwtl
mov
xchg
loopne
cmpsb
cld
fidivrs
cmp
or
pop
pop
xor
sbb
packssdw
fdivrs
iret
xchg
jecxz
push
outsl
inc
jecxz
imul
jecxz
push
test
xchg
push
mov
cltd
or
dec
out
and
adcl
sarl
push
and
xor
insb
loopne
loop
int
enterw
xchg
pop
sbb
push
faddl
cmc
out
dec
jle
mov
shlb
aam
roll
movsl
pushf
sub
ss
enter
or
icebp
mov
mov
je
mov
add
scas
sbb
mov
xchg
test
repz
dec
ja
add
jnp
scas
mov
add
aad
int3
fwait
push
and
mov
insb
scas
xor
cwtl
sahf
lret
cmp
fmull
dec
scas
dec
push
int3
mov
jbe
ja
sub
das
mov
adc
dec
push
shrb
mov
repz
lods
pop
dec
pusha
rolb
inc
xchg
nop
push
inc
mov
or
xchg
add
orl
cltd
lds
and
leave
fists
push
jle,pt
aas
iret
das
jno
inc
jae
loopne
daa
icebp
xor
adc
popa
mov
mov
mov
imul
inc
ret
pushf
iret
fidivrs
mov
dec
push
and
pop
ljmp
cmc
jg
fisttpl
dec
jne
dec
sub
rcrb
cld
gs
add
rcrl
inc
leave
scas
jge
test
mov
es
sbb
xchg
lret
pop
data16
cmc
pop
je
xor
pop
mov
les
stc
cltd
sub
mov
call
out
call
xorb
adc
mov
das
jmp
mov
mov
adc
xor
pop
cmpsl
loope
sbb
mov
mov
sub
nop
cmp
sarl
mov
ds
shrb
push
pusha
rcr
mov
filds
cli
fdivs
lock
xor
test
test
lea
in
pop
xchg
gs
push
mov
mov
xorl
pop
mov
and
pop
adc
aas
xchg
test
jne
mov
xor
cltd
add
sub
and
mov
pop
inc
mov
mov
inc
sub
push
sub
mov
scas
dec
pop
pop
pushf
shrl
inc
aaa
mov
subb
in
xchg
or
inc
fsubrp
sbb
repz
fisttps
lods
loopne
mov
and
pop
cmpsb
cld
mov
push
sbb
mov
sub
sbb
sbb
dec
sub
lea
icebp
int
test
mov
push
fists
sub
lods
xchg
mov
cwtl
xchg
mov
fs
fsubp
dec
mov
dec
jecxz
cwtl
push
repz
movsl
aam
mov
xchg
daa
xor
mov
aas
test
or
ss
into
in
jecxz
fiaddl
aad
sub
xlat
fstps
jnp
fwait
sub
sbb
push
lahf
pop
imul
mov
pushf
js
bound
gs
in
mov
jns
dec
test
lret
jo
mov
in
pop
stos
mov
xchg
push
stos
xor
test
clc
loop
sub
mov
jmp
or
rorl
and
sbb
mov
cs
mov
jle
in
enter
inc
or
mov
adc
bound
jg
push
sarb
sbb
fwait
andl
jecxz
mov
sbb
ficoms
fwait
pop
pop
jp
pop
and
cld
xor
inc
sbb
sbb
fstpl
xor
jmp
ja
outsl
push
inc
mov
pop
jae
fcomip
mov
or
sti
aad
out
xor
sbb
std
fstp
cmp
movsl
jb
ss
xor
or
inc
out
mov
bound
mov
setnp
inc
test
mov
leave
push
inc
jno
or
arpl
cltd
add
mov
pop
jo
pop
dec
fcomps
inc
testb
call
scas
jle
xchg
sub
push
inc
bound
ljmp
or
push
pop
adc
inc
inc
scas
jne
addr16
sti
jle
leave
cmpsb
ror
sbbb
lock
pop
pop
add
fstps
pop
dec
and
push
aas
dec
xchg
push
mov
push
js
jnp
sarb
jle
das
sbb
scas
jb
aaa
jnp
sahf
cmpsl
ljmp
or
lcall
test
bnd
sahf
fisttps
and
mov
and
sar
push
cmpl
push
int3
jg
dec
pop
dec
inc
push
out
mov
lcall
dec
mov
xor
repnz
int3
lahf
pop
jle
add
cmpsb
loopne
in
lahf
and
xor
outsb
outsl
icebp
ss
push
les
lea
popf
loopne
push
or
jno
int3
repz
ret
xchg
pushf
pop
fwait
push
mov
xor
mov
pop
adc
popa
push
mov
push
les
imul
lcall
and
xor
push
jbe
fistps
jno
ljmp
sbb
cmp
je
aad
sbb
lea
jno
mov
fsubrs
or
sub
sbb
popa
push
xchg
fistl
pop
xchg
pop
testl
pop
inc
pop
cmc
in
mov
and
or
xchg
fwait
mov
mov
inc
es
test
pop
jb
cltd
ja
push
sahf
cld
inc
aad
testl
imul
adc
mov
fisubs
jne
sbb
and
mov
inc
pop
mov
pop
aaa
mov
adc
cmp
cmc
enter
pop
and
out
shl
ljmp
mov
scas
push
stc
nop
or
out
inc
lahf
cs
cli
out
cli
xor
out
dec
mov
cmp
mov
add
enter
aad
add
xor
lods
mov
sub
mov
cwtl
arpl
lahf
fsubrl
test
push
jae
lret
pop
movsl
ljmp
cmp
ljmp
pop
inc
mov
hlt
cltd
push
jns
mov
adc
sub
mov
xor
dec
sti
pop
mov
or
mov
cmp
pop
cmpsb
xor
mov
idivb
jg
sahf
gs
andl
or
dec
add
cltd
sub
mov
ja
ds
xlat
dec
xchg
js
cmp
push
cs
xchg
test
pusha
inc
mov
cmpsb
cs
sbb
push
fistpll
mov
adc
mov
gs
testb
jecxz
shl
cmp
mov
push
mov
fwait
and
xchg
loopne
sbb
jns
and
lret
mov
fildll
pop
or
in
mov
mov
aaa
out
std
mov
fisttps
pop
int3
mov
mov
enter
dec
je
test
mov
xchg
lods
xor
lea
adc
shl
mov
movsl
cmpsl
into
mov
add
movsb
enter
add
in
idivl
jl
pushf
sbb
dec
addr16
xchg
daa
cmp
outsl
ja
mov
rclb
jo
enter
divl
scas
fcoms
aas
mov
insl
aad
gs
xchg
sub
aad
inc
enter
add
insl
popf
dec
fwait
cmp
aaa
push
xor
push
bound
gs
imul
sarb
mov
divl
test
cmp
dec
fimull
lea
jns
sub
loop
push
lret
and
sbb
mov
cmpsb
pop
dec
add
dec
repnz
pmovmskb
dec
jae
jae
cmp
push
fmuls
in
push
in
sbb
mov
mov
or
inc
mov
dec
jl
arpl
cmp
mov
jnp
insb
in
ret
mov
aaa
add
test
cwtl
xorl
mov
jb
aaa
and
subl
sbb
xchg
sub
xor
cmp
sbb
jb
inc
fwait
test
cmp
pop
sbb
out
addb
enter
xor
sbbb
xchg
test
dec
lret
push
inc
pop
push
movsb
xlat
out
into
xlat
sbb
sbb
mov
lret
shl
add
mov
loop
lock
push
sahf
mov
inc
fimull
subl
mov
push
mov
jb
out
popf
enter
outsb
cltd
jle
push
xorb
cmc
dec
mov
scas
stos
lahf
movsl
dec
sub
imul
xor
mov
mov
dec
dec
push
sub
pop
sbb
dec
inc
jecxz
cmpsb
xor
outsl
sahf
inc
mov
pop
cmp
mov
pushf
loopne
inc
jbe
stos
inc
dec
fiaddl
jo
jmp
inc
pop
sbb
adc
outsl
scas
cmp
outsb
add
frstor
scas
xor
gs
and
lret
mov
cs
fdivl
iret
out
lret
insl
imul
sbb
cmp
mov
push
cmp
sbb
and
repnz
repnz
dec
mov
push
dec
mov
subb
inc
cmp
or
pop
dec
out
test
push
and
lret
shrb
jnp
xlat
leave
data16
loopne
js
lods
push
cltd
lock
sub
mov
gs
and
int
pusha
ljmp
fisubrs
cmp
mov
jmp
push
and
mov
add
lret
jecxz
sbb
mov
adc
pop
test
jle
xchg
std
pop
mov
mov
pusha
or
pop
dec
push
xorb
test
repz
jns
inc
pop
dec
xchg
loopne
cwtl
pop
xlat
movsl
out
xor
mov
pop
scas
movsb
fsubs
xchg
xchg
sbb
pusha
aaa
and
xchg
push
pusha
clc
add
adc
sarb
push
andb
push
lcall
mov
in
push
ret
inc
lcall
jl
xlat
inc
push
insb
je
push
aas
stc
xchg
test
xchg
in
lock
in
fistpll
pushf
jg
loope
sarl
fldcw
shrb
add
jno
pop
jo
sbb
and
aam
roll
in
push
mov
fisubs
out
mov
push
test
gs
mov
cmp
fldt
dec
adc
loopne
cwtl
mov
sub
dec
fsubrl
incb
test
call
pop
jmp
sbb
lret
sub
sarl
popa
outsl
popf
insb
js
push
out
clc
cli
lods
mov
jl
and
fisttpl
clc
fcmovnu
repz
adc
push
popf
and
jecxz
sti
sub
notl
lret
fdivrp
das
sub
mov
roll
lahf
fwait
sub
adc
xor
repnz
or
out
lret
mov
adc
mov
jge
pusha
inc
add
adc
cwtl
loopne
ljmp
pushf
and
or
push
or
testb
push
mov
cli
loope
mov
pushf
shrb
aad
filds
adc
sub
push
or
jp
adc
testb
add
mov
subl
ret
lods
pop
sbb
push
inc
aam
scas
in
adc
pop
push
cmp
aas
fstps
dec
out
adc
xor
cs
and
aad
pushw
mov
lcall
push
xor
insb
pusha
or
xor
xor
mov
jnp
scas
cltd
jge
push
test
iret
clc
leave
cmp
scas
fiadds
test
pop
pop
fxch
sbb
push
pop
mov
mov
pop
inc
loope
cmp
sarb
test
sti
iret
aaa
inc
mov
je
pop
fcmovnb
pop
push
pop
fldl
or
test
jae
jg
jb
iret
sbb
xor
fwait
xchg
cmp
mov
pop
jmp
in
mov
mov
lret
jge
stos
xchg
xor
inc
fcmovb
out
imull
fnsave
pop
sbb
fs
fidivrl
and
sub
adc
aaa
data16
xchg
inc
test
mov
mov
sub
popa
aas
sbb
lock
fadds
jae
aaa
hlt
cmpsl
lahf
subb
addb
repnz
inc
mov
scas
add
pusha
adc
mov
fidivrs
xchg
inc
int3
lret
adc
and
xchg
adc
adc
push
out
xlat
scas
mov
stos
mov
adc
lret
sbb
mov
iret
jle
sti
cmp
dec
adc
mov
pmullw
je
push
mov
xchg
imul
imul
ljmp
dec
adc
pop
dec
mov
jmp
jbe
mov
xor
jl
sarl
push
out
jbe
aaa
fnsave
mov
mov
inc
mov
pop
mov
lcall
push
loop
and
push
mov
ss
sub
leave
imul
adc
mov
mov
jmp
popf
mov
pop
test
dec
movsl
or
mov
fisttpl
inc
cltd
pop
insb
dec
sub
sbb
xchg
xor
and
lret
mov
adc
nop
cli
sub
and
inc
repnz
mov
loope
jns
adcb
add
test
mov
adcl
aad
jmp
popf
sahf
int3
jle
xor
inc
in
aas
and
xor
loop
xchg
push
mov
push
jae
jnp
testl
sar
icebp
mov
addr16
popa
movsb
into
ss
pushf
xchg
sub
mov
xor
mov
iret
add
imul
mov
push
je
xchg
aad
arpl
or
cmp
addl
adc
outsl
movsl
pop
push
in
pop
xchg
dec
or
fidivrl
or
sbb
fisttpl
std
cmpsl
jns
dec
popf
ror
ljmp
aas
and
push
insb
xchg
sti
add
sub
add
inc
xchg
dec
xor
push
mov
movsl
cmp
stc
push
js
cs
mov
dec
xor
fldt
imul
mov
leave
stos
ljmp
popa
scas
mov
ret
es
fldcw
inc
dec
or
test
out
mov
and
push
std
pop
hlt
and
lock
mov
xor
in
lods
lret
and
inc
jmp
cmpsl
pop
loopne
or
dec
pop
js
lret
mov
add
push
cmpsl
and
mov
jl,pt
add
lds
lret
jmp
clc
or
mov
adc
mov
or
and
dec
lret
mov
inc
xchg
xchg
test
xlat
repz
lds
push
sbb
repnz
cltd
rorb
xchg
xchg
fs
shrl
pop
lret
push
inc
in
push
mov
ficoms
fwait
mov
add
sbb
insl
or
sub
xor
pop
jg
into
in
add
pop
leave
mov
xchg
mov
andb
bound
dec
data16
sbb
adc
daa
cmp
push
int
das
clc
mov
xchg
jnp
out
fsubrs
pop
jle
mov
cld
daa
fmul
jl
mov
push
inc
loope
movswl
stc
dec
iret
push
insb
stc
cmp
mov
ds
fiadds
inc
lcall
adc
aad
mov
mov
fxam
adc
mov
lea
or
call
add
adc
inc
lahf
xor
je
push
jle
mov
xor
mov
sub
or
dec
jb
sbb
sbb
xlat
xor
js
ds
sbb
ja
jb
lods
sub
out
insb
rolb
lret
and
rolb
and
iret
pop
xchg
fnsave
lcall
cltd
imul
scas
xchg
jb
cmp
fnstcw
scas
xor
sbb
mov
pop
mov
dec
push
dec
leave
sbb
lds
ja
icebp
jl
adc
imul
out
adc
xor
jae
aas
popf
mov
and
les
cmp
insl
bound
sub
and
push
push
push
mov
jle
cmp
inc
lds
mov
dec
inc
dec
or
movsl
pop
and
add
pop
xor
push
mov
outsl
popf
fwait
xchg
test
and
inc
test
add
xchg
inc
mov
jo,pn
mov
pop
iret
bound
jne
xor
bound
and
fisttpll
and
cs
call
orb
es
test
or
test
test
and
xorl
mov
fdivrl
mov
loop
scas
jbe
adc
mov
mov
or
nop
push
or
add
lea
aad
frstor
inc
add
push
xchg
jl
sbb
out
and
stc
mov
movsb
test
mov
andb
adc
sbb
sbb
add
cmp
xchg
hlt
data16
pushf
mov
pop
mov
add
inc
sti
dec
pop
cltd
inc
icebp
and
sub
dec
int
fwait
out
xchg
test
les
adc
les
add
push
test
inc
mov
dec
pusha
mov
int3
out
jmp
repz
or
jo
pushf
sub
or
out
xor
lds
and
sahf
ljmp
mov
mov
lret
in
movsb
mov
or
jp
xchg
clc
mov
cmp
arpl
cmpsl
movsb
mov
mov
or
cmp
cmpl
lods
add
testb
dec
jbe
nop
push
fwait
jo
sub
pop
push
in
adc
stos
rcrb
xchg
xor
dec
loope
ljmp
cmp
fidivrs
repz
sbb
cld
adc
pop
sbb
push
add
aam
lods
inc
roll
in
sub
ror
mov
aas
dec
adc
pop
fcoms
lret
or
jmp
popa
pop
adc
daa
or
jbe
insb
gs
dec
ficoms
test
push
mov
cmp
stos
xchg
lret
loope
sub
push
test
cwtl
in
fcoms
or
cmp
lahf
pop
push
fistl
mov
movq
cmp
in
pop
xor
or
push
inc
cli
adc
mov
leave
aas
scas
test
lret
in
sub
fwait
and
push
jge
mov
lods
push
cs
movsb
dec
icebp
mov
mov
mov
inc
and
adc
lds
cmp
arpl
xor
ror
test
int
shl
shrb
pop
xchg
jo
clc
imull
add
inc
sub
and
add
repnz
out
fs
pushf
inc
pop
push
jae
mov
push
dec
mov
adc
das
fs
or
inc
push
fdivrl
jo
or
aas
aam
clc
rcl
stos
js
cmp
lea
mov
mov
sbb
push
add
pop
cmc
xor
fsubl
rcl
xchg
enter
dec
push
xchg
fisubs
mov
hlt
and
jnp
lcall
mov
jno
add
repz
sti
aas
inc
adc
dec
jmp
push
push
jns
xlat
sbb
imulb
dec
and
dec
xchg
jle
push
outsl
mov
xor
mov
push
ret
movsb
mov
jmp
or
ljmp
sbb
dec
iret
pop
adcl
mov
ljmp
push
sti
cmpsl
cmp
test
or
sbb
fcom
fisttpll
push
lea
lods
mov
cltd
push
jmp
dec
add
int3
dec
movsb
clc
je
dec
mov
mov
pop
test
lea
push
jnp
popf
jl
jl
ja
pop
mov
icebp
loope
imul
or
jp
stos
scas
or
into
add
test
pop
cmc
jecxz
cmpsl
add
or
mov
call
pop
test
pop
es
dec
sbb
mov
cmp
sub
jno
cli
sub
jmp
pushf
shlb
arpl
loopne
dec
cmp
fists
jnp
push
cmc
push
fiaddl
xor
sub
sti
into
fsub
lock
or
dec
xor
clc
or
adc
adc
xor
ret
movsl
cmp
mov
push
cs
mov
divb
movsl
ret
dec
dec
push
or
xchg
mov
cli
popa
std
jns
addl
inc
and
shlb
inc
adc
mov
std
leave
mov
push
add
mov
add
pop
pop
mov
jecxz
insl
pop
push
jmp
inc
jb
es
adc
pusha
jle
outsl
xchg
sbb
pop
incl
out
sub
cwtl
jecxz
push
jno
scas
mov
imul
and
out
mov
lods
daa
inc
or
xchg
mov
xchg
aad
mov
cmp
or
or
test
inc
hlt
pop
adc
cli
cmp
pop
sub
daa
mov
dec
dec
mov
mov
and
fldt
in
or
mov
fnstsw
sub
clc
imul
ret
fistps
scas
mov
sub
mov
push
in
movb
push
scas
lahf
iret
mov
mov
push
jne
in
mov
in
lahf
xchg
sti
lret
leave
ret
out
stc
adc
xor
push
fs
mov
test
fstpt
mov
sbb
xchg
iret
dec
ret
gs
aam
insl
dec
icebp
addr16
in
and
mov
addl
out
push
imul
out
jecxz
and
jg
clc
in
stc
insb
movb
cmp
sub
sbb
addb
mov
out
rol
dec
pop
stos
cmpsl
mov
fcoml
ret
add
sarb
pop
mov
popa
mov
inc
add
pop
lcall
clc
inc
mov
jo
pop
out
adc
imul
pop
lret
negl
repnz
inc
inc
mov
xor
bound
sbb
xchg
rorb
cmpsl
sub
mov
or
mov
cmp
cli
jb
into
movsb
push
out
lcall
shll
int
mov
or
sti
repnz
adc
xlat
mov
lock
into
out
or
mulb
fs
subl
cmpsb
xchg
jl
es
and
cld
dec
js
push
mov
pop
push
imul
subl
out
test
loop
mov
dec
loopne
out
dec
repz
leave
dec
ljmp
arpl
sub
popa
cli
or
adc
hlt
arpl
test
movsl
sub
cmpsl
mov
mov
int3
clc
push
cmp
into
jb
test
dec
pop
pop
inc
mov
aaa
sbb
push
xchg
lea
xor
sbb
shl
dec
rcrb
jecxz
mov
ljmp
and
jge
pop
movsb
mov
mov
xcrypt-ofb
cmpsl
scas
insb
cwtl
enter
ja
sub
gs
das
aad
pushl
inc
ficoms
loop
xor
pushl
pop
js
in
bound
adc
adc
xor
push
fsubrs
roll
xor
mov
pop
mov
dec
mov
shrb
mov
jb
icebp
xchg
imull
xor
sub
jbe
cmp
mov
xchg
push
jo
int
push
repnz
test
dec
jno
pop
movsb
stc
mov
mov
cs
enter
out
push
fdivs
mov
sub
inc
add
cld
dec
xchg
pop
aad
xchg
push
addr16
rcl
in
cmpsl
insl
in
dec
pop
in
or
imul
cwtl
mov
mov
mov
fwait
jmp
shr
mov
fdivs
test
adc
data16
aas
orb
jbe
pop
add
sbb
addr16
mov
or
inc
sahf
mov
fsts
das
mov
cwtl
cmc
mov
xor
imul
ja
pop
push
inc
cmpsl
cs
sub
xchg
xlat
add
dec
std
hlt
sbb
jno
int
xlat
pop
sub
lret
and
bound
rclb
sbbb
xchg
fmull
push
jg
and
jo
sub
xorb
pop
mov
clc
add
dec
add
fimuls
aam
adc
mov
cltd
stc
out
mov
add
sub
xchg
call
jg
push
add
push
and
dec
fcomip
outsb
lods
lods
cmc
xchg
sti
and
imul
mov
mov
adc
adc
pop
jmp
scas
int
div
lret
push
add
lods
mov
push
in
dec
mov
in
xchg
push
icebp
jbe
cmp
and
std
add
dec
fists
repz
or
sbb
fdiv
mov
mov
pop
push
push
sar
pop
cmp
icebp
movsb
call
jg
cli
mul
mov
hlt
lea
jmp
in
roll
cli
fs
inc
push
sbb
mov
or
mov
cs
dec
ss
pop
adc
cmc
inc
push
ficoml
dec
out
mov
add
cmc
pop
nop
mov
push
jmp
jns
xchg
mov
dec
fxch
fcomps
in
jno
sti
je
gs
dec
xchg
xchg
scas
imulb
xor
cmp
push
mov
and
mov
or
incb
aad
stos
rcrl
inc
or
sub
xor
mov
sub
gs
hlt
mov
mov
push
xchg
mov
leave
aam
mov
sahf
cltd
call
cmpsb
mov
push
ret
xchg
adc
xor
or
add
lcall
inc
gs
shrl
cmp
jno
ss
negb
js
add
mov
in
xchg
inc
xor
stc
sbb
in
fwait
sbb
sahf
ss
cmpsl
or
cmp
jne
mov
sub
mov
arpl
pop
outsb
xor
pusha
xor
jle
rcrl
sbb
repz
mov
and
sub
mov
sbb
faddl
lahf
adc
xchg
lea
addr16
ret
out
xchg
loope
loope
mov
cld
jo
scas
pushf
mov
jmp
adc
stc
loope
dec
ljmp
cmp
add
les
cld
cmp
jns
or
movsb
sbb
xor
push
push
mov
jg
mov
add
sub
mov
repnz
dec
inc
sbb
mov
sbb
dec
shll
cmp
push
vfnmadd231ps
int3
stos
and
fistpl
mov
inc
jmp
jo
hlt
in
ljmp
mov
data16
jbe
mov
or
dec
fs
lods
stos
aaa
mov
nop
pusha
mov
in
imul
pop
cmc
and
sarb
pop
loop
scas
jno
dec
insb
dec
and
add
mov
dec
cwtl
inc
push
mov
mov
fld
int
push
push
mov
jno
push
mov
aas
jg
cmpsb
sbb
xchg
lret
xor
jne
mov
dec
push
cmp
mov
rorb
or
sbb
movsl
in
lahf
test
jns
xor
cmp
adc
loopne
imul
dec
xchg
repnz
sbb
mov
rcrb
and
loopw
or
aad
int
fst
aam
cmpsb
mov
sarb
mov
das
push
fldl
jmp
jp
sbb
cmpb
ss
cmc
aam
cmp
nop
js
push
sub
ret
pop
sti
mov
mov
jmp
mov
xor
mov
xlat
je
addl
pop
jmp
test
xchg
ret
mov
xchg
fildl
nop
lahf
xor
mov
out
push
js
and
shrl
pop
or
inc
xor
cs
mov
filds
inc
adc
dec
push
stos
add
mov
add
push
dec
sbb
cwtl
pop
xor
dec
test
adc
mov
or
jg
rolb
cmp
cmpsl
mov
mov
clc
sbb
push
xchg
inc
out
xor
inc
in
into
jbe
xchg
clc
repnz
add
dec
jmp
inc
leave
dec
adc
cld
cmpsl
cli
add
pusha
sbb
and
incb
ret
rcr
pop
cmc
pop
and
jmp
popa
jmp
xchg
jnp
stos
push
int
test
bound
dec
ja
sub
stos
jb
jbe
cmp
inc
add
cmp
mov
scas
test
mov
inc
sbb
iret
inc
mov
int
mov
cmp
inc
xchg
dec
lcall
cmp
push
in
jbe
fmul
jl
fimull
jmp
stc
cmp
pop
jge
push
out
mov
outsb
ret
gs
dec
das
pop
insl
pop
scas
mov
mov
pop
jge
fstps
repz
or
pop
leave
sbb
jg
nop
mov
jle
sbb
pop
mov
xchg
cld
pop
add
pop
mov
jb
arpl
scas
lds
nop
adc
pop
jmp
fs
fs
popa
jp
and
mov
in
push
and
xor
sub
mov
dec
lahf
cmovnp
xor
es
push
test
mov
icebp
jl
mov
mov
mov
lods
loopne
lods
insb
sarb
je
ds
pop
mov
adc
lods
sbb
or
sub
mov
mov
xchg
xchg
lds
pop
mov
mov
nop
mov
mov
cmp
loopne
repz
add
jbe
into
jmp
shr
push
sahf
jnp
jle
cmpsl
sub
dec
push
popa
in
add
das
faddp
jne
inc
ds
scas
loope
in
outsl
clc
push
mov
push
push
roll
incb
sahf
add
jbe
jg
cmpsl
pop
inc
out
insl
lret
data16
jle
mov
cmp
sub
sub
pop
and
repz
shll
pusha
pop
pop
aam
gs
loopne
jnp
ss
jb
jb
cltd
jl
push
negb
adc
inc
xchg
int3
mov
sahf
ret
mov
pop
inc
ja
bound
push
cmp
call
bound
fldcw
fcmovne
stc
lret
in
cltd
pushf
xor
les
fwait
push
inc
test
cmp
test
xchg
mov
inc
pop
mov
mov
ljmp
jo
dec
lds
fs
sahf
xchg
mov
gs
fnstenv
sbb
xor
or
and
mov
jne
in
mov
idivb
mov
cmc
popa
push
push
mov
pop
popa
or
call
sahf
mov
mov
fwait
dec
cltd
rcll
adc
shlb
xor
popa
xchg
jne
xchg
mov
push
or
fs
push
in
shlb
test
xlat
lods
fsubrl
mov
nop
das
imul
popa
dec
xor
insb
mov
ror
stos
xchg
rorb
adc
repz
insb
xor
stos
mov
xor
adc
mov
push
stos
pop
aad
mov
xchg
enter
or
mov
push
cmpsb
inc
pop
push
inc
lea
jmp
mov
out
sub
ljmp
aad
aas
pop
and
mov
in
lds
jb
in
dec
and
add
adc
inc
jg
and
sub
stc
popa
add
jge
cwtl
movsl
loop
das
jbe
cld
xor
push
add
out
jp
out
sti
rcll
repz
movsl
jl
rorl
icebp
stos
out
inc
mov
loopne
clc
test
jmp
in
mov
cs
mov
into
cmp
mov
push
and
hlt
shrl
push
ds
dec
mov
adc
cs
mov
pop
jne
xchg
cmp
rcrl
cmpsl
fildll
jmp
mov
inc
push
dec
je
pop
push
rcr
xor
xor
rcrb
sub
add
jmp
or
lahf
push
cmp
add
mov
out
push
xchg
iret
adc
ret
adc
push
mov
pop
lods
cmp
stos
andl
and
and
aaa
pusha
fsts
test
lock
xchg
xchg
int3
lahf
loopne
inc
sbb
add
fidivs
jae
jmp
and
loope
jno
jnp
pop
rol
mov
stos
adc
jo
push
cmp
nop
pop
or
add
pusha
pusha
push
scas
aam
test
mov
xor
jno
mov
adc
scas
inc
sub
pusha
or
adc
adc
jmp
dec
cwtl
push
dec
or
ret
mov
sub
das
mov
or
daa
loop
mov
jae
movsl
out
enter
out
bound
aas
sub
mov
cli
sbb
push
xchg
loope
sub
mov
sub
stos
inc
inc
push
incb
outsb
add
xor
int
stc
dec
leave
scas
shrb
xchg
movsl
fwait
cmp
imul
mov
adc
movsb
push
sbb
shrl
mov
push
cmp
iret
jno
sbb
inc
out
shr
call
pushf
sbb
xchg
in
out
sub
outsb
push
push
int
enter
mov
mov
mov
dec
bound
mov
aad
mov
sbb
push
cmp
cs
mov
mov
dec
ret
xchg
inc
xor
jo,pn
or
out
xchg
add
pop
test
pop
mov
lsl
call
rcrl
pop
jo
jmp
fisubrl
in
adc
jb
je
sub
lock
fdivs
inc
and
adc
imul
imul
cmpsb
cmp
stc
iret
mov
cli
popf
dec
lcall
call
sbb
mov
mov
push
sbb
lret
pop
in
loope
aas
sub
test
push
fwait
mov
inc
fsubrl
add
loopne
js
sahf
cld
loopne
movsb
mov
lock
pusha
jo
mov
dec
cmc
add
sub
mov
xchg
sub
jne
sub
cmp
or
pop
mov
test
pop
mov
cmp
cmp
lret
fcmovb
leave
and
scas
mov
outsb
pusha
pop
xchg
jno
sarl
fildl
lock
filds
jns
pop
les
or
sarl
pop
inc
stos
dec
ljmp
mov
in
ret
adc
lds
and
cmp
flds
xor
lret
cmp
in
ret
cli
inc
mov
pusha
xchg
faddl
sub
scas
lods
adc
gs
pop
and
gs
pop
into
cwtl
out
push
aam
mov
jno
cmpb
data16
push
push
lods
mov
mov
rorb
mov
into
adcb
leave
leave
jg
jmp
and
jmp
xor
dec
push
sbb
push
cmp
inc
sub
out
mov
jno
push
jmp
cmc
icebp
mov
inc
mov
test
xor
pop
aaa
jo
cmp
aaa
cmpsl
jecxz
repz
inc
pop
in
xchg
mov
repz
dec
jg
in
add
jne
add
and
cmp
push
or
mov
jp
push
mov
lcall
aas
jg
call
mov
pop
inc
push
test
mov
mov
xor
hlt
jnp
icebp
adc
sbb
nop
filds
xchg
dec
andl
je
gs
xor
jmp
jns
sbb
mulb
repz
repnz
mov
adc
sbbl
mov
outsl
clc
aaa
jmp
push
pop
loopne
rorb
lcall
mov
inc
pushf
pop
and
loopne
faddl
cmpsl
xor
jmp
popa
packssdw
adc
jnp
xor
pushf
jnp
xlat
sub
enter
clc
fnstenv
xchg
mov
xchg
pop
and
in
pop
xchg
push
add
ficomps
pop
mov
test
enter
iret
mov
pop
mov
adc
mov
jle
xor
data16
push
adc
je
adc
push
rcr
pop
inc
mov
aam
xchg
sub
mov
orl
xchg
fmull
ja
lcall
mov
add
and
stos
insb
xchg
cs
xor
mov
jmp
dec
xchg
loopne
jae
add
enter
pop
pop
stc
adc
test
dec
mov
lds
leave
xorb
jne
scas
int
gs
dec
push
dec
in
cltd
jae
lea
xlat
aas
mov
mov
shlb
push
xorl
add
scas
hlt
outsb
cmp
mov
mov
popa
sub
in
jne
and
sub
shll
mov
daa
jns
mov
xor
push
test
loop
das
xchg
aas
imul
pop
xor
lahf
sbb
or
not
scas
fidivrl
push
fiaddl
mov
jo
ds
lds
popf
or
jmp
clc
inc
cmpsl
pushf
pop
ficomps
push
push
mov
sbb
cmp
mov
stos
movsb
sub
mov
add
mov
mov
mov
cmp
movsb
fcoml
pop
movzbl
je
pop
int
xor
bt
dec
or
pop
fsts
xor
leave
xor
mov
add
mov
mov
in
xor
fadds
loopne
push
sar
push
hlt
inc
mov
adc
xor
bound
je
xchg
mov
and
je
mov
lahf
cwtl
out
icebp
push
mov
push
sbb
sub
setle
mov
xor
test
andl
mov
cmp
mov
enter
xor
or
test
sbb
out
jg
leave
icebp
inc
sub
sbb
or
cmp
hlt
cltd
out
inc
lods
jge
xchg
push
cmc
and
out
dec
int3
sub
push
mov
out
jp
and
add
mov
add
les
das
pop
shlb
in
push
std
mov
stc
shll
stos
pop
adc
jecxz
add
pusha
add
out
ret
inc
mov
sbb
js
push
test
sbb
outsb
fildl
pusha
hlt
movb
fdivl
push
int3
std
adc
int
fistpl
xchg
pop
or
arpl
adc
hlt
pop
test
in
mov
stos
pop
aas
mov
aaa
xor
xor
jmp
lods
ja
das
in
repz
adc
pop
jmp
rclb
aas
pop
lahf
pop
and
mov
add
mov
jmp
push
cmpsb
or
out
jmp
ret
aas
push
push
pop
push
sub
push
lock
in
cwtl
insl
cwtl
pop
push
or
lret
inc
cld
mov
lock
testb
imul
cli
in
lcall
inc
cli
cli
pop
mov
xchg
call
inc
fistpl
daa
nop
stos
and
daa
add
in
add
sahf
xchg
ret
sbb
loope
inc
cmpb
sbb
xor
ja
sbb
aam
push
insb
fwait
push
bound
sub
fadd
enter
adc
cmc
xchg
mov
cwtl
cli
cmp
add
stos
adc
sub
lret
roll
stos
or
cmp
outsb
imul
into
stc
pop
out
into
bound
jno
sahf
sub
mov
adc
cmp
scas
pop
ljmp
es
push
pop
push
add
pop
push
aas
jb
out
shrl
les
js
dec
stc
xchg
cmpsl
add
fistpll
inc
loopne
test
pop
inc
aam
loopne
inc
cmpsb
bswap
stos
push
push
xchg
mov
das
leave
mov
lret
movsb
sub
in
push
mov
jle
filds
mov
movsl
mov
sbb
loop
out
add
add
push
popa
xlat
jmp
sub
jbe
or
mov
inc
js
jnp
fsubrs
xor
xchg
negb
xchg
loope
sbb
mov
push
adc
clc
scas
nop
mov
mov
cwtl
movsl
pusha
stos
xchg
mov
pop
test
bound
push
aad
and
and
pop
enter
das
fnop
jmp
cmp
ret
mov
out
shrb
int3
xchg
and
into
cmpsl
nop
xchg
in
cmp
cli
xor
mov
test
push
mov
jno
pop
xchg
xchg
int3
sti
inc
lods
pop
jne
aaa
push
addr16
jno
mov
xlat
lock
sahf
xor
repnz
cld
sub
adc
lahf
sbb
stos
icebp
gs
pop
inc
loopne
xor
popf
popf
pop
mov
scas
jne
das
xor
jg
adc
xor
lret
test
mov
in
test
xor
adc
popa
cmpsb
adc
cmpsl
xor
pushf
sarl
aas
insl
and
mov
or
pushf
jne
mov
jb
insl
enter
loopne
mov
fcompl
jg
lret
outsl
fists
push
nop
test
pop
mov
scas
lret
push
add
int
mov
sti
dec
adc
xor
mov
xor
enter
add
popa
jg
jmp
xor
mov
push
push
jno
loop
pop
clc
lds
push
mov
insl
pop
jnp
les
or
lret
aaa
cmp
jns
fistps
aam
xchg
jmp
xor
add
cmp
pop
jo
pusha
and
cmp
insl
xor
and
adc
mov
push
lods
fcmovu
mov
in
jl
xchg
cli
jmp
and
imul
repnz
pushf
push
mov
enter
aas
in
imul
inc
xchg
addl
in
cmc
insl
mov
notb
mov
clc
pop
adc
roll
mov
add
sbb
adc
popf
inc
fcoms
daa
lcall
or
pusha
loopne
mov
lgs
sahf
imul
jg
jl
mov
mov
gs
pop
inc
dec
pop
lock
cmp
dec
push
mov
leave
in
push
iret
add
je
sbb
jge
nop
lcall
or
xor
adc
dec
jns
aas
mov
sahf
push
fisttpl
iret
dec
mov
shlb
dec
arpl
xor
add
push
adc
insb
push
adc
cwtl
adc
jmp
mov
aas
enter
sysenter
pop
leave
push
test
js
pop
and
xrelease
ljmp
gs
stos
add
mov
lods
lret
xchg
testb
gs
les
inc
insl
or
jb
cli
int
jns
add
add
mov
cltd
adcb
sbb
addr16
or
imul
fwait
sub
fisttpll
insl
lret
or
lret
or
mov
out
iret
pop
or
call
or
inc
ret
dec
xorl
xor
clc
fcmovu
sbb
data16
mov
jnp
lret
inc
cld
adc
ds
mov
decl
pop
and
push
mov
fnstcw
rol
push
mov
inc
adc
push
fdivrs
and
notl
sbb
mov
inc
fisubl
mov
clc
cmp
into
cmp
jmp
mov
cmc
lds
cmpl
outsb
jno
dec
push
sbbl
movsb
pop
fdivrs
pop
xor
stos
xor
sbb
dec
movsb
stos
mov
and
xchg
stc
test
sbbb
xchg
jecxz
lcall
stc
aaa
xor
or
ljmp
sbb
jp
push
popa
rorl
push
xchg
sbb
insb
inc
das
xchg
rolb
cmp
fs
js
call
mov
test
stc
iret
imul
ret
outsl
jp
insl
test
ds
shlb
repz
sub
rcrl
xchg
and
cmc
mov
addr16
add
pop
dec
jecxz
add
add
dec
xchg
rol
in
sbb
movsb
cmp
jmp
arpl
xlat
insb
mov
adc
push
inc
ja
mov
jecxz
testl
mov
loop
enter
sarb
inc
xlat
push
mov
and
ja
outsl
addb
add
mov
push
popf
adc
push
push
mov
fsts
and
sub
add
inc
mov
test
cld
adcb
pop
or
cld
enter
cmpsl
je
fucomp
add
inc
mov
or
lret
iret
scas
lahf
push
lods
xchg
lahf
cmp
lds
nop
lds
addr16
movsl
cs
ss
lcall
xor
nop
out
add
rclb
mov
sarl
stos
cmp
add
sar
bound
push
ss
pop
mov
mov
inc
mov
int3
rolb
stos
cmp
subb
outsb
or
sbb
sub
sub
xchg
hlt
insb
or
push
mov
sahf
mov
xchg
ret
sbbl
stos
orb
inc
shrb
cmp
inc
lods
lods
dec
xchg
ret
sub
and
xchg
popf
dec
sbb
lds
outsl
push
push
mov
pop
popf
dec
sub
data16
sbb
outsl
sub
enter
sbb
ds
movsl
dec
testb
push
subl
xorb
stos
das
lods
cmp
and
mov
scas
mov
sub
iret
cld
xchg
rolb
cmp
or
cwtl
or
iret
ja
out
orb
sbb
add
xor
and
inc
lea
xchg
push
loop
stc
test
push
stos
mov
popf
push
js
lds
or
cld
or
pop
push
push
imul
dec
cmp
and
mov
xor
sbb
repz
xor
cmp
inc
repz
mov
fdiv
cmpsl
and
dec
stos
jb
pop
or
sahf
into
out
loopne
adc
add
negb
stos
shll
iret
cwtl
adc
jmp
xchg
clc
outsb
shrb
les
js
loope
cmpsl
les
and
mov
ja
inc
ljmp
or
pop
idivb
fsts
jle
and
push
std
fdivl
shl
in
push
jns
fs
sub
lcall
and
repnz
andl
out
inc
cmc
inc
stc
mov
ja
test
cmp
push
fiaddl
pop
fldcw
ss
push
shr
mulb
negb
inc
or
and
sub
sti
cld
popf
mov
push
dec
fs
pop
or
mov
adc
add
and
ds
pop
push
mov
xchg
push
out
push
xchg
xor
xchg
fisttpl
or
ret
push
sbb
xlat
int3
out
in
test
jns
jae
push
jl
cmc
jno
daa
cmp
mov
dec
jp
sarb
xor
jp
xchg
fsubs
mov
imul
sbb
cmp
test
aaa
mulb
arpl
repz
jmp
sbb
aam
addr16
ljmp
mov
inc
lret
and
add
cmpsb
int3
xlat
cli
or
pop
aad
fldcw
xchg
and
lret
shrl
xor
xor
jb
scas
es
pop
sub
cmpb
shlb
jle
out
dec
mov
mov
or
std
insl
jne
jno
pop
mov
jle
jbe
mov
fdivl
in
ss
ret
div
push
and
cmc
cmp
shr
lcall
sbb
mov
int3
sub
mov
xor
aas
xor
push
pusha
aaa
cmp
or
xchg
pushaw
pop
xchg
inc
stc
sti
jl
scas
inc
aad
pop
cmp
test
outsb
jb
inc
push
push
imul
sbb
iret
pop
pop
shll
lahf
cmp
xor
or
sub
scas
mov
lahf
test
stos
jne
pusha
sub
or
idivl
scas
or
pop
mov
push
outsb
push
pop
clc
or
push
fdiv
jnp
jae
int3
sbb
ljmp
mov
pop
and
inc
sahf
sub
dec
push
mov
add
push
push
call
std
inc
xchg
ds
inc
push
xchg
add
sbb
jmp
movsl
mov
add
cmp
dec
outsb
imul
push
pop
popf
adc
lahf
das
sub
int
daa
adc
mov
je
cmpb
jno
mov
ljmp
inc
jecxz
insl
gs
sub
cmpsl
ficompl
adc
test
loope
lret
insl
lods
repnz
adc
lcall
mov
in
jl
xchg
adc
aad
and
sbb
pop
fs
inc
gs
in
shr
addl
add
repz
fcomi
loop
mov
and
fiadds
outsl
mov
jb
mov
fwait
shll
imul
iret
xor
pop
aam
push
and
xchg
fcmovne
ss
das
sub
adc
mov
inc
adc
cltd
rcll
pop
test
pop
push
mov
ljmp
cmpl
imul
mov
loopne
ss
in
movsl
sbb
xlat
jnp
sub
ja
and
idivl
add
in
mov
lds
adc
enter
lcall
aaa
ret
xor
jb
test
out
std
data16
pop
pop
test
ss
push
push
cmp
mov
scas
ficoms
xor
les
pop
fnstcw
dec
xchg
out
pop
out
inc
sbb
enter
sub
mov
mov
lahf
test
test
cld
pop
test
orl
xchg
xchg
sar
or
adc
inc
mov
std
add
adc
xlat
cmp
lds
mov
insb
sbb
or
or
dec
enter
or
leave
mov
push
test
adc
mov
test
mov
stc
inc
xlat
mov
fndisi(8087
add
pop
shrl
jecxz
inc
je
xor
fnstcw
mov
push
cmc
pop
sahf
push
test
dec
pop
adc
sbb
sbb
data16
fwait
pushf
push
stos
test
das
int
cltd
mov
test
xlat
push
xchg
loop
test
jg
mov
dec
jecxz
and
or
stos
jmp
inc
xor
loope
add
jge
push
pushf
packssdw
push
dec
sub
adc
pop
out
xchg
dec
mov
xor
push
fwait
adc
cmpsb
cmp
stos
test
outsl
add
mov
pop
into
sub
inc
std
push
mov
in
push
cli
mov
cmp
popa
adc
icebp
fidivs
dec
dec
mov
jnp
test
xchg
or
and
pop
dec
movl
loop
mov
pop
inc
cmpsl
daa
xor
and
xlat
mov
adc
cmp
jp
out
pop
pop
sbb
and
fwait
xchg
push
inc
insb
clc
cmp
fwait
cwtl
mov
fisttpl
xor
lret
out
scas
add
int
je
lcall
adc
pushaw
flds
cmpsl
bound
fstps
cmp
or
mov
lea
test
xor
jno
inc
and
fimuls
xchg
je
mov
in
mov
lock
ljmp
icebp
jle
fsts
push
pop
cmp
mov
aam
rcrb
push
aas
xchg
cmpsl
mov
push
aaa
bound
ja
push
cmp
imul
loopne
sub
es
mov
aam
sbb
jg
pop
mov
insl
adc
or
add
gs
xor
shl
pusha
jecxz
shrl
inc
fwait
mov
stos
adc
negb
popf
fisubrl
sub
aam
pop
sbb
imul
xor
mov
je
nop
mov
inc
mov
inc
mov
repz
shll
mov
out
fcoms
call
push
jns
and
pop
fistps
adcl
sbb
mov
dec
inc
shl
xchg
dec
jo
adc
cwtl
pop
test
fs
jae
ljmp
lods
sbb
pop
movsl
pop
ds
jne
mov
xchg
pop
rcrl
jmp
je
dec
mov
loop
loop
xor
or
adc
cmp
stc
nop
fcom
clc
sub
push
ss
xchg
repnz
push
add
clc
sti
test
outsl
insb
add
aad
mov
fld
xor
loopne
aas
scas
fmulp
jge
xchg
jecxz
loop
fldl
lods
xor
dec
pop
fwait
aad
jbe
ss
aad
jmp
mov
lea
inc
push
rcll
test
es
fistl
add
mov
or
out
int
mov
pushf
inc
loop
sub
inc
decl
mov
jecxz
imul
loop
in
xor
into
fadds
enter
mov
sbb
std
test
push
int
mov
rorb
pop
sahf
or
cmpsl
mov
aas
and
jbe
mov
outsl
push
loope
and
sarl
push
adc
sbb
mov
push
arpl
in
pop
int
imul
loope
xchg
test
jae
mov
sub
cmp
jg
jmp
data16
pop
out
xchg
pop
xor
nop
addr16
inc
cmp
pop
adc
test
imul
fnstsw
push
lods
nop
lahf
cmc
fbstp
cmp
sub
arpl
cmp
jmp
js
pop
fwait
scas
mov
xchg
inc
pushf
insl
mov
test
insb
sub
cmp
ret
nop
jecxz
xchg
out
aaa
add
jo
in
flds
ja
pop
cmp
and
push
pop
cmp
pushf
pop
adcb
movsb
push
ja
or
mov
or
push
les
fisubs
and
and
in
jmp
push
push
jecxz
repz
add
cmpsb
xorb
in
mov
add
out
add
mov
aaa
out
cmp
cmpsb
push
mov
push
mov
lds
divl
jae
or
aaa
les
fimull
lods
popf
xchg
sub
std
dec
push
je
mov
fcoml
inc
dec
scas
fdivl
mov
ficomps
cmc
xchg
daa
popw
movsl
es
pop
jbe
and
xlat
xchg
mov
inc
inc
xchg
in
int3
test
fdivrs
aam
cmp
mov
insb
push
sbb
leave
xor
insb
adc
mov
mov
lods
ja
imul
fwait
inc
mov
movsb
insl
in
cmp
xchg
shrb
mov
add
cmp
sar
mov
test
pop
fs
xlat
xchg
stos
jecxz
movsl
push
mov
nop
mov
pop
cld
sbb
loop
in
test
sub
lds
pop
loope
outsb
data16
ret
push
cli
jo
decl
pop
cmp
push
fsubrs
push
inc
cmc
push
and
pop
fiaddl
and
dec
lcall
setp
dec
mov
cwtl
in
shl
jbe
sahf
cmp
gs
pop
xchg
push
push
shld
pop
xor
rcll
outsl
lea
adc
loopne
dec
or
pop
bound
div
lock
add
scas
sub
insb
fadd
arpl
pop
fcmovb
or
mov
mov
jb
push
mov
fsqrt
xlat
inc
mov
xchg
rcrl
out
jg
lock
or
inc
cmp
lret
js
jle
dec
mov
out
pop
subb
jmp
xor
add
xchg
xchg
into
add
int
mov
push
pusha
xor
das
repnz
pop
xchg
mov
gs
push
sbbb
lea
aaa
xorl
test
aad
stos
test
jge
clc
adc
test
cli
ficoms
jo
pop
lcall
pop
or
std
rclb
stos
in
sbb
btr
xor
cli
in
dec
ret
pop
inc
stc
outsb
sbb
cltd
ret
aad
dec
lret
mov
push
adc
fbld
sbb
sarb
inc
lgs
ret
outsb
cwtl
lahf
fs
roll
xor
addr16
jns
hlt
xor
push
inc
fucomip
fbstp
pop
push
add
test
pop
dec
stos
jne
mov
and
adc
ficoml
je
jae
pop
mov
push
icebp
mov
nop
mov
or
mov
xchg
dec
jo
enter
cmp
stos
mov
fcomp
inc
mov
lea
mov
push
lret
loopne
rcll
ljmp
add
cmp
pop
jle
inc
mov
mov
fimuls
aas
clc
dec
aaa
fcomi
lcall
aad
iret
cmp
pop
in
sbbb
xchg
add
sub
outsb
ffreep
mov
popa
in
jg
jp
cmp
cltd
xor
adc
mov
sbb
mov
xlat
and
jge
aam
push
jb
cmp
mov
jge
or
jnp
mov
sub
cmp
dec
rcrl
sub
cmp
or
imul
push
and
shr
into
lcall
js
dec
dec
cmc
jmp
mov
xor
mov
loope
mov
insl
shl
xor
cmpsb
adc
pop
add
test
gs
cmpsl
or
int
mov
divl
dec
mov
gs
jnp
xchg
lcall
push
and
sub
pop
movsb
inc
test
jnp
inc
and
call
pop
pop
cmp
fs
xchg
lds
lcall
mov
out
popa
adc
inc
inc
inc
adc
ss
fildll
fadd
movsb
push
icebp
sbb
lret
sti
jnp
addr16
mov
add
jge
int3
repnz
mov
add
xchg
jmp
ret
mov
mov
push
dec
cmpsl
mov
push
js
jmp
inc
lock
xor
movsl
sbb
scas
arpl
aas
ljmp
outsb
add
imul
fcmovb
test
pop
sub
in
mov
fbld
out
push
lcall
add
pop
enter
cltd
call
sti
mov
cli
cmp
std
nop
loope
into
mov
addl
lahf
pop
cs
xchg
mov
pop
push
xchg
push
mov
mov
insl
iret
jns
fdiv
cmp
fs
pop
leave
and
push
push
jno
lods
int
sbb
jecxz
mov
rorb
add
subl
jg
cwtl
add
mov
xor
push
push
out
mov
int
repz
insb
push
or
jne
mov
add
pop
iret
ret
loope
jp
mov
push
cmp
idivb
xchg
xchg
lret
arpl
add
sub
xchg
aas
mov
jmp
cs
xchg
pop
sub
repz
sub
std
cmpsb
push
jns
fwait
loope
push
jne
add
mov
mov
lods
fs
jmp
inc
mov
out
xor
imul
sub
fwait
imul
lock
or
mov
cmc
ss
out
sub
mov
xchg
xchg
inc
out
loope
mov
fdivs
jnp
callw
mov
add
or
gs
add
inc
mov
stos
aas
sub
aas
jge
sub
xchg
rorl
scas
in
sbb
sub
xlat
scas
mov
repz
xor
adc
cwtl
pop
add
iret
xor
cs
pusha
adc
jmp
rorb
in
fldenv
mov
jo
into
dec
mov
push
jns
je
mov
dec
sbb
jg
push
int3
pop
jp
sub
pop
bound
sti
movsl
addr16
sub
aaa
xor
mov
cmpsl
xchg
mov
cmp
xchg
mov
fcomi
jo
nop
ja
aad
jo
mov
int
aas
fsubl
adc
test
adc
push
xlat
cmp
mov
mov
movsb
insl
inc
inc
clc
neg
adcb
sbbb
ds
out
sub
loop
les
jno
jne
popf
lea
add
mov
adc
adc
jp
mov
mov
mov
adc
xorl
pop
sub
sub
xorb
xlat
les
aas
in
test
pop
fldl
lods
push
shl
stos
jne
out
add
or
dec
mov
xchg
and
and
inc
xchg
add
repz
dec
adc
push
cmp
sub
fildll
call
jne
mov
fbld
dec
jmp
sbb
das
scas
call
push
pop
mov
mov
lahf
mov
flds
ljmp
out
stos
mov
jmp
xchg
out
mov
in
fisubl
push
scas
sub
mov
out
outsb
add
icebp
fucompp
out
stc
xlat
pusha
adc
mov
ss
dec
lret
imul
xchg
push
test
rcrb
scas
xchg
push
pop
jp
repz
xor
lea
mov
and
ja
and
ficomps
push
mov
mov
mov
dec
in
or
sahf
mov
or
movsb
sbb
fs
popf
pop
icebp
ljmp
lcall
leave
roll
sbb
jae
add
push
fs
adc
mov
pop
movsl
sub
mov
pop
and
div
xchg
push
loopne
sbb
mov
pop
push
sbb
popa
or
cmpsl
insl
xchg
pop
cmp
lods
add
fwait
cmc
push
sbbb
xchg
cmp
mov
call
je
adc
push
jp
in
xor
into
jg
add
or
sub
das
lods
cld
xlat
mov
sbb
add
add
aad
outsb
je
push
xor
test
out
sti
or
outsl
inc
sub
mov
lock
mov
sub
push
jbe
push
testl
inc
in
cmp
insl
add
mov
mov
cmp
aaa
mov
inc
mov
add
inc
pop
pusha
popa
mov
xor
shrb
pop
cmp
cli
xlat
jae
cltd
loopne
xor
cmp
sub
jbe
ret
push
fists
sarb
dec
jo
and
jmp
xchg
loope
mov
pop
lret
ja
divb
insl
fidivrl
jbe
lods
cmp
xchg
sub
hlt
in
jno
mov
adc
pop
mov
push
je
outsl
sbb
and
xor
jns
fs
pop
xor
int3
rorb
outsb
fsubr
enter
in
cs
mov
dec
xchg
fldenv
inc
push
jecxz
das
cmp
aas
inc
cmp
or
mov
adc
insl
cmpl
xor
push
mov
mov
or
dec
repnz
outsb
into
test
jns
add
dec
jb
push
test
xchg
add
xchg
subl
icebp
xor
subb
outsl
lea
fisubs
test
insl
or
test
sbb
jo
adc
mov
ret
adc
mov
sbb
mov
mov
nop
xor
ss
adc
mov
ja
pop
and
enter
and
mov
or
stc
lret
lds
sbb
add
push
jmp
push
insl
push
mov
cmpb
or
xor
scas
sub
movb
sub
sbb
js
and
mov
popa
jp
call
xchg
mov
cmp
shrl
inc
push
jecxz
aam
pop
notb
lret
mov
es
lea
xor
and
in
fcoml
xor
icebp
inc
arpl
cmpsb
add
stos
popf
insb
clc
sub
mov
imul
and
push
pushf
sbb
lret
cmp
enter
hlt
repz
add
in
xlat
pop
push
fs
out
movsl
lock
outsl
sbb
aas
aad
call
mov
mov
xor
les
cmp
lahf
je
mov
jo
inc
lahf
cmpsb
dec
sub
inc
xor
xchg
pop
pop
inc
sbbl
jg
mov
lret
je
setg
pop
ljmp
rol
sbb
std
adc
mov
or
std
pop
xchg
mov
xchg
cmpsb
pop
inc
or
and
lods
xor
into
sbb
adc
aad
cmp
jp
sahf
inc
push
mov
inc
adc
inc
fimull
mov
loop
mov
jecxz
sub
out
dec
dec
pop
imul
mov
adc
hlt
test
push
das
xchg
sbb
mov
and
cli
sub
fnstenv
mov
cmp
cmp
rcr
cmp
mov
dec
lds
pop
int
mov
jns
cmp
pop
imul
pop
pop
fisttpll
aas
mov
jns
imul
mov
shrl
sbb
mov
mov
fiaddl
stos
imul
imul
pop
sti
je
ror
aad
and
mov
xchg
andb
stos
push
dec
mov
daa
jge
pushf
jne
or
push
out
sub
and
push
rcrb
mov
sbb
scas
inc
cmp
frstor
dec
pop
les
sahf
inc
scas
dec
cmpb
jo
mov
cmp
or
or
inc
push
loopne
stos
mov
dec
mov
and
or
imul
pop
push
bound
ljmp
add
sbb
mov
jns
ja
sti
pop
xchg
inc
iret
popf
jbe
push
push
xor
xlat
mov
sbb
je
add
stc
mov
push
fs
lds
sbb
out
add
sti
out
or
aas
aam
xor
cmc
inc
add
hlt
int3
daa
lods
inc
popa
std
sub
icebp
cmpsb
sahf
loopne
imul
inc
and
xchg
scas
aas
xchg
dec
ret
adc
and
sbb
jns
fistps
adc
test
out
mov
adc
mov
int
or
ja
mov
sbb
cmp
hlt
jo
mov
ss
pusha
fcomps
imul
mov
push
add
xor
add
push
vaddpd
jg
xchg
test
fs
out
pop
jp
aas
and
cmp
stos
hlt
icebp
inc
popf
mov
in
arpl
dec
sahf
hlt
enter
add
dec
mov
mov
inc
xchg
in
rorb
lea
lret
les
shl
add
mov
idivl
fwait
mov
jnp
loope
ret
aam
push
adc
xor
repnz
aas
or
mov
shlb
int3
sarb
enter
int
int
psraw
in
cmp
mov
xorb
mov
mov
adc
adc
jecxz
push
addr16
cmpsl
mov
movsb
ret
mov
push
ljmp
xchg
and
fidivs
call
add
bound
sub
push
push
les
std
mov
gs
pop
xchg
jnp
mov
push
in
xor
adc
sub
and
mov
aas
mov
imul
inc
inc
fstpl
shll
loope
pop
arpl
test
adc
shlb
jno
js
inc
out
or
movsb
pop
test
jae
addr16
mov
ds
dec
or
fstps
jae
xchg
test
sub
lret
or
jl
or
xor
sbb
clc
pop
jns
out
ljmp
es
jmpw
es
pop
mov
cmp
push
xchg
mov
cmc
fsubrl
mov
es
inc
dec
pminub
add
xor
sub
xchg
mov
cmpb
fs
test
addl
fwait
cli
mov
in
jno
push
imul
pop
sub
movsb
dec
push
xor
mov
dec
outsb
dec
mov
testl
push
mov
shrl
fs
pop
aaa
pop
mov
mov
xchg
pop
pushl
inc
ss
outsl
push
test
pusha
scas
cmpsb
jns
push
icebp
out
test
xchg
sbb
add
aam
sub
ja
cltd
mov
cmp
test
dec
cld
dec
cmp
push
mov
cmp
loope
scas
jbe
sti
add
push
mov
inc
insl
jle
dec
call
stc
orl
mov
inc
mov
and
lods
fs
jg
jecxz
cwtl
mov
in
pushf
mov
pop
out
pop
jle
repnz
in
loopne
sbb
hlt
pop
inc
sbb
cmp
stos
jp
jecxz
sub
insl
int
pushf
aaa
ja
xchg
insb
out
hlt
inc
inc
jmp
int
repz
lahf
fdiv
sbbl
lcall
fldcw
out
leave
add
les
sbbb
test
push
mov
mov
xor
sbb
repnz
insb
adc
xchg
jl
lret
cmc
stc
mov
inc
pop
fs
int3
jno
into
out
adc
jno
xor
sbb
insb
shll
addr16
add
mul
in
pop
adc
dec
outsb
addb
cmpsb
prefetchw
movsb
mov
test
shl
pop
fnstsw
fmuls
lods
test
and
lods
and
cmpsl
mov
data16
xor
cmc
in
pop
fistpll
xor
dec
cmpsl
cmp
scas
lods
std
es
pop
xor
add
imul
hlt
gs
in
push
inc
cmpsb
push
dec
das
cmp
pop
adc
aam
mov
lret
jle
daa
mov
jl
pop
cltd
mov
and
repnz
outsl
sub
push
hlt
and
push
neg
jp
sub
sbb
push
cmp
sub
push
mov
sub
xchg
push
xor
pushf
mov
xchg
call
cmpsb
pop
das
cmp
mov
pusha
sbb
xor
inc
sbb
cld
sub
out
push
stc
add
adc
in
jg
roll
mov
cmpsb
xor
xchg
dec
adc
xor
insb
push
fistl
popf
in
xchg
outsb
loopne
mov
sub
sahf
in
jge
adc
adc
bound
push
out
sahf
fdivl
mov
or
jo
scas
mov
pop
popf
pushf
mov
dec
test
pop
xor
mov
hlt
cmp
mov
shrb
fwait
inc
sbb
mov
push
xchg
inc
jmp
add
xor
cmp
int3
add
and
push
icebp
or
sub
dec
test
je
mov
sub
mov
push
iret
stos
push
add
cltd
lcall
xchg
pop
push
cmp
testb
lret
mov
mov
cmp
mov
nop
out
int
les
dec
mov
mov
imul
out
popf
jb,pt
hlt
test
mov
jmp
repnz
rolb
fadd
arpl
shrl
cli
cs
ja
fnstsw
mov
and
fidivl
hlt
push
scas
mov
repz
mov
bound
ljmp
push
sub
clc
sbb
hlt
pop
push
std
gs
adc
mov
loope
int
adc
mov
divb
or
aas
inc
dec
mov
stc
sub
fidivrs
fsubrl
pushf
or
push
jae
add
push
dec
dec
jb
ljmp
mov
stos
scas
inc
ljmp
inc
dec
cld
cmc
pop
push
mov
sahf
push
shlb
xlat
gs
mov
fbstp
dec
adc
inc
pop
and
mov
imulb
jae
push
pusha
ret
xchg
inc
rcrl
adc
push
xlat
xor
aam
cmpsl
mov
add
hlt
mov
push
xor
std
iret
popf
or
mov
xchg
dec
je
jg
jnp,pn
lds
loop
jne
jnp
xchg
adc
push
cmpsb
scas
bound
mov
inc
and
and
push
and
mov
repnz
popf
test
insl
scas
push
mov
repnz
jae
andb
dec
lock
ja
hlt
out
mov
addr16
out
add
in
fnstcw
mov
pusha
imul
xchg
and
bound
dec
stc
and
outsl
fnsave
dec
icebp
pop
mov
push
sti
cmpb
inc
mov
xchg
and
jb
mov
push
fidivrs
arpl
pop
cmp
push
adc
rol
adc
test
jl
inc
jae
sub
push
repnz
pusha
inc
cmp
mov
fadds
pop
add
pop
lea
fistpl
xlat
aaa
sbb
aad
mov
clc
mov
lret
jne
js
push
push
mov
out
cmp
cmp
stos
pop
ss
mov
jns
and
cs
out
cmp
outsl
cltd
shlb
jmp
adc
lods
pushf
loop
pop
add
mov
loope
in
orb
int3
out
mov
sbb
add
inc
jb
mov
bound
jne
addl
and
mov
shrl
jno
pushf
jne
sbb
sbb
ret
out
mov
out
jo
aaa
mov
jmp
cmpsl
dec
jmp
add
push
dec
outsl
xor
cmpsl
into
lret
mov
sub
out
cmc
mov
in
mov
xchg
mov
xchg
lds
icebp
push
sub
mov
mov
dec
pushf
and
cmp
xchg
xlat
ss
cmp
adc
dec
punpcklwd
aaa
cmpsb
out
push
bnd
or
cmpsb
cmp
sub
pop
xchg
idivl
pop
rcrb
lock
lcall
or
cmp
sub
or
test
inc
pushf
xorb
push
pop
jne
adc
int3
lods
xchg
push
cmp
cmpsb
gs
adc
out
jae
aam
cs
sbb
xor
xchg
gs
adc
fsub
sarl
adc
mov
mov
and
sbb
cmc
xchg
bound
jnp
xchg
jne
push
xor
jnp
clc
rolb
test
movsl
pop
pop
jle
nop
pop
sub
int3
push
les
mov
in
lahf
xchg
cltd
icebp
repnz
mov
xchg
enter
roll
jbe
fucomi
adc
cmpsl
xchg
xlat
stos
nop
stos
into
cmpsl
bound
in
cmp
nop
in
mov
adc
dec
xor
sub
xor
sbb
xchg
leave
orl
mov
ljmp
adc
push
stc
clc
aad
rolb
and
leave
jmp
pop
or
outsb
popf
test
cmp
cli
lods
sbb
lock
xchg
cmpsl
pop
iret
jns
adc
dec
or
mov
mov
lahf
pop
in
xchg
mov
dec
leave
add
inc
inc
xchg
xchg
pop
rorb
mov
dec
mov
xchg
int
sub
addr16
inc
push
movsb
sbb
mov
mov
mov
les
repnz
pop
mov
in
loop
sti
cmp
fidivrs
cmc
ja
stos
and
into
rorb
dec
mov
in
test
adc
sub
movsl
inc
cmp
in
jb
pop
inc
lods
mov
push
inc
sbb
in
pop
gs
xor
push
xchg
mov
mov
and
lock
pop
mov
call
stos
fsincos
dec
push
int3
xor
insl
push
out
mov
movsb
push
ffree
push
out
mov
dec
jae
aas
sbbl
sub
and
sbb
lods
adc
dec
jp
addr16
out
daa
sbb
cmc
je
aaa
push
je
leave
or
jo
xor
mov
cltd
sub
repnz
pop
mov
mov
call
xchg
bt
idivb
mov
negl
les
mov
xor
iret
js
push
mov
loope
in
xor
fdivrs
cmpsb
out
jle
cmpb
repnz
lock
lods
sahf
scas
rcrb
mov
dec
pushf
cs
pop
and
xor
mov
fisttpl
call
jmp
push
mov
adc
jns
inc
movsl
jl
mov
popa
jp
adc
mov
push
mov
lahf
lahf
inc
ficomps
dec
dec
jnp
arpl
add
sub
or
je
push
xor
cmc
sub
push
xchg
test
pop
test
jmp
cli
scas
xchg
or
pop
adc
sub
mov
push
pusha
cs
sub
pop
fbld
xor
les
jmp
loop
les
es
add
sbb
outsl
add
les
inc
mov
xchg
repnz
push
pop
xchg
movsb
xchg
sahf
cmp
movsl
cmp
jno
cmpb
push
inc
and
sub
lods
mov
int3
mov
push
mov
mov
stos
int
mov
push
test
roll
adc
fadds
jecxz
or
cmpsl
xchg
jmp
jns
iret
sahf
or
jb
push
push
rcll
xor
int
or
pop
xchg
inc
cld
sbb
mov
sub
xchg
ret
jae
mov
fdivr
daa
test
test
inc
lret
fiadds
mov
jle
inc
fidivl
popa
es
push
scas
pushf
sub
dec
jecxz
mov
or
dec
cmpsb
push
rcl
or
aad
or
pop
int
dec
ret
addr16
pop
push
daa
xor
adc
insb
xchg
bound
into
nop
xor
cltd
pop
cmc
pop
notl
push
pop
mov
and
nop
mov
mov
fldenv
xlat
xchg
call
je
cmp
inc
inc
stc
fisubrl
movsb
add
jg
je
xor
jb
dec
out
cmp
cli
jle
jmp
add
js
rol
add
or
sub
test
cld
push
cmp
xlat
mov
out
cbtw
movsl
fwait
push
sbb
push
xchg
cmpsl
or
inc
cmpsl
insl
aas
test
cs
mov
mov
xchg
std
icebp
es
mov
dec
movsl
fcompp
mov
and
inc
pop
movsl
and
icebp
dec
popf
cs
inc
mov
data16
adc
pop
pop
sub
test
movsl
faddl
es
cmpsb
inc
xor
out
mov
push
sbb
out
out
in
push
and
clc
xor
adcl
push
jae
mov
das
mov
incl
add
xor
xchg
mov
xor
icebp
cmp
dec
aam
push
test
xchg
jl
pushf
daa
fs
push
pusha
push
movsl
jnp
fistpll
test
jae
push
sub
xor
xchg
adc
sub
enter
cmpl
lods
inc
outsl
jo
jne
mov
jb
jne
jne
fs
fnstsw
mov
mov
iret
jnp
shrb
pop
das
adc
ds
adc
popf
mov
inc
test
pop
mov
sbb
and
push
add
sub
js
add
jo
lret
addr16
shrb
subb
cmc
mov
xor
jecxz
mov
jg
int3
mov
adc
sti
je
push
cmp
pop
push
add
das
addr16
jecxz
lods
mov
mov
fimull
popf
inc
cmp
mov
mov
cmp
stos
adc
adc
dec
int3
movsb
sub
imul
scas
inc
int3
movsb
insl
jns
jg
pop
push
data16
fstps
and
cmp
aas
pmaddwd
out
shlb
push
rclb
stos
push
mov
cli
sub
jecxz
xchg
mulb
test
test
or
sub
dec
push
movsb
push
lret
jne
test
mov
ret
outsl
mov
lods
or
mov
imul
jl
in
into
pop
test
aad
mov
sarl
mov
pop
out
pusha
jnp
fsub
inc
cld
dec
inc
roll
and
push
xchg
or
pushf
xor
dec
sbb
mov
cli
inc
mov
stos
ljmp
adc
leave
bound
call
rcrl
jge
mov
jle
fsubrs
movsl
dec
lahf
aad
dec
imull
dec
push
insb
push
sti
movsb
and
insl
mov
sahf
or
inc
leave
lock
incl
lods
pop
inc
xchg
sub
sti
mov
add
mov
mov
jbe
gs
sbb
ret
pop
orl
sub
mov
loop
sbb
xchg
add
inc
ds
pop
mov
jb
xchg
fcmove
test
jns
dec
xor
cmp
sbb
aaa
mov
rcl
add
imul
pop
sub
lock
or
inc
scas
xchg
call
gs
push
adc
out
stos
push
ret
sub
test
sbb
push
test
in
addr16
xchg
add
lods
cli
lods
test
test
repnz
js
mov
or
cwtl
and
test
fcomps
mov
inc
pop
jmp
mov
adc
fsubl
push
cmp
pusha
cs
icebp
mov
and
pushl
lahf
add
fcom
sbb
mov
fcom
fldl
insb
add
adc
lock
mov
shrl
ds
xor
sbb
icebp
jno
xor
into
mov
lahf
mov
sub
xchg
test
and
mov
add
mov
gs
or
jne
sub
lahf
sbb
pusha
or
fxch
jmp
mov
xor
iret
adc
iret
mov
sbb
and
stos
stos
mov
cmp
jae
into
out
movsl
jae
or
xchg
or
adc
adc
jbe
cmp
pop
mov
ret
in
jae
push
adc
leave
movsl
xlat
mov
sub
jl
outsl
lods
xor
ret
mov
xchg
iret
stos
aad
popf
js
insl
mov
jae
enter
push
movsb
xchg
pop
mov
call
bound
sti
lods
xchg
imul
repnz
inc
jle
stc
stc
stos
mov
cmp
sub
mov
or
negl
sbb
rorb
repnz
sub
cltd
das
pusha
cs
ljmp
xchg
cwtl
lods
inc
inc
jo
cmp
into
stos
xor
sbb
bound
dec
add
leave
and
push
in
cmc
repnz
xchg
jmp
cwtl
lret
lret
test
jbe
pop
aad
pusha
and
or
sbb
lock
cmp
jb
mull
lahf
fnsave
sub
jmp
fstpt
or
into
fldenv
pop
push
jle
jmp
pop
sbb
fnstcw
pop
jmp
inc
push
in
repz
fdivrl
imul
jbe
cmc
ss
lods
xor
jno
add
in
xchg
loope
subl
pop
xor
stc
adc
out
loope
into
xchg
cmp
inc
mov
ss
inc
je
pop
popa
outsb
shll
xchg
mov
fwait
and
or
xchg
fbstp
mov
or
cmovnp
cmp
mov
fdivrl
mov
pop
or
loopne
mov
out
mov
or
test
mov
xchg
jecxz
or
rclb
sahf
jns
aas
jge
mov
add
decl
aad
mov
sbb
rol
leave
test
push
xor
jp
push
test
jno
jae
add
loopne
cmp
pusha
inc
lcall
inc
pop
popfw
or
scas
popa
out
jo
aas
popa
call
loopne
mov
sti
and
les
fcompl
push
pop
or
adc
xor
pop
iret
outsb
call
sub
push
out
mov
sbb
test
cwtl
fs
jge
xor
sbb
aam
addps
xor
jl
pop
mov
mov
repz
in
imul
and
cs
std
and
lea
aad
sbb
cs
insb
int
sbb
shll
outsb
add
pop
in
and
mov
cmpb
mov
pop
mov
push
push
fiadds
hlt
pop
pop
repnz
sbb
pop
and
mov
imul
leave
mov
outsl
inc
push
mov
mov
push
loop
dec
inc
dec
jl
int3
sti
push
add
fnstcw
lds
jo
leave
mov
jo
repz
jge
movsl
or
dec
outsl
cmp
jnp
push
inc
divb
cmc
jo
push
push
pop
pop
push
lahf
divl
cwtl
movsl
shlb
fld
sti
mov
daa
pop
mov
sub
aas
jp
push
imul
xor
lds
or
and
pop
pop
jg
mov
ds
pop
inc
ror
xor
pop
dec
mov
clc
xor
sarb
dec
or
or
subb
mov
cmp
xchg
xor
xor
inc
arpl
call
into
jns
gs
dec
mov
pop
in
fs
add
xchg
mov
bound
or
ss
pop
dec
inc
or
orl
xchg
fcomp
ret
mov
std
mov
fprem1
inc
mov
aas
testl
mov
cs
dec
sbb
rol
mov
mov
imul
lds
shlb
inc
cld
imul
arpl
sbb
out
add
add
jno
and
mov
mov
mov
es
push
mov
inc
push
ret
ret
adc
test
outsl
mov
adc
push
out
and
xor
adc
shrb
mov
and
ds
test
and
jo,pt
negl
inc
mov
sbb
or
js
dec
imul
lods
xchg
push
xor
scas
pop
mov
or
and
addb
dec
mov
sar
out
popf
shlb
int
dec
popa
andb
scas
ja
xor
mov
adc
cmp
je
outsl
outsl
mov
stos
mov
or
clc
dec
push
test
cmp
rcrb
enter
jno
mov
push
pop
icebp
out
in
jle
mov
sub
pop
scas
mov
out
sbb
adc
scas
pop
mov
andl
aad
pop
cmpl
push
add
ja
stc
in
inc
dec
add
pop
clc
add
insl
sbb
shlb
inc
mov
mov
mov
inc
mov
test
inc
xchg
iret
aas
add
int
rcll
or
ss
fwait
lcall
insb
ds
mov
dec
jbe
hlt
scas
ja
cmp
push
push
iret
lcall
out
xchg
js
lods
jge
loopne
xlat
jp
in
inc
test
push
sub
push
mov
cmp
shll
sbb
pop
pop
dec
insl
jno
inc
push
lea
xchg
sbb
jge
jb
leave
shlb
cld
imul
or
sub
aaa
sub
movsb
sbb
into
cmpb
sub
sahf
pop
insl
icebp
orb
inc
dec
into
hlt
adc
js
rcrb
outsb
mov
test
es
dec
out
repz
test
mov
out
add
push
outsb
stc
fsubrs
ds
add
arpl
inc
sub
sbb
popa
test
fs
pop
popa
in
mov
inc
mov
xlat
cld
adc
rol
int3
in
mov
and
out
mov
loop
in
jp
clc
aas
nop
movsb
mov
xchg
or
mov
inc
js
pop
and
and
push
inc
lods
xor
sub
and
mov
cmp
sarb
push
dec
lcall
cli
ret
jno
push
xchg
mov
nop
notrack
test
lds
outsl
outsl
fsubr
cmp
jae
dec
enter
ja
push
outsl
mov
cmpsl
movsb
mov
test
mov
cmp
js
xchg
pop
rcrl
test
push
cli
adc
sbb
int
lcall
mov
dec
jno
jg
mov
adc
ret
xchg
mov
push
cli
imul
jno
mov
insb
jge
push
mov
scas
jno
xchg
inc
lods
rclb
mov
dec
pop
scas
enter
cmp
fsubs
nop
sbb
cmp
pop
pop
pop
push
scas
ret
mov
adcl
xchg
and
jnp
jmp
stos
add
mov
jle,pt
sbbb
mov
es
pusha
roll
jbe,pt
sbb
jmp
imul
mov
xchg
insb
stos
aad
idivb
push
jne
sub
mov
in
pop
xor
push
sbb
das
mov
sub
aaa
fcompl
jmp
pop
stos
lds
or
bound
xor
jb
call
dec
clc
xchg
movsl
lods
iret
fisttpl
rolb
fdivrs
mov
ss
cmpsl
popl
add
loopne
scas
cld
ficoms
pushf
push
testb
jmp
test
cmp
popf
and
andb
sbb
xorl
das
jg
cmp
dec
andl
or
ret
loope
insl
jmp
cmpsl
pop
bound
mov
fs
inc
mov
in
adc
sbb
add
lret
inc
sub
mov
mov
cmp
sub
push
bnd
ret
sub
lea
ss
add
inc
sbb
jg
mov
dec
lods
add
fildll
adc
jp
fiadds
pop
mov
jnp
cmp
mov
xchg
outsb
add
xchg
mov
jmp
mov
test
stos
bound
icebp
leave
out
add
push
roll
gs
inc
sbb
js
pop
fdivrl
shlb
push
es
push
or
mulb
mov
mov
jns
mov
dec
imul
cs
pusha
rcll
lcall
mov
movsl
std
jg
mov
shll
ret
sbb
aam
imul
pop
les
aaa
pop
out
mov
xchg
fcmovu
sbb
fmuls
leave
inc
inc
mov
mov
sarb
out
insl
test
jge
dec
fldenv
movsb
sbb
lds
in
xor
out
lahf
mov
into
adc
lret
xor
lods
and
fildl
or
rolb
sub
xchg
rcll
inc
push
imul
outsl
ja
scas
pop
repnz
inc
jmp
inc
jmp
lcall
fimull
mov
xchg
xor
push
mov
push
push
pop
mov
inc
jb
inc
jno
lret
or
insb
add
leave
fimuls
adc
fwait
pusha
test
dec
sahf
scas
fiaddl
sbb
ljmp
lock
sti
fsubr
std
jecxz
cltd
les
in
sbb
jge
xchg
shrb
jp
cli
and
cmp
repz
ds
mov
and
sbb
xchg
sbb
adc
push
aas
xchg
or
dec
std
test
add
pop
cmc
jo
dec
inc
xchg
add
out
mov
std
out
fidivrs
cmp
pop
int3
mov
mov
arpl
mov
push
dec
xor
inc
dec
outsb
add
sub
popf
shrl
mov
add
int3
add
cmp
cmp
dec
popf
push
and
sbb
push
fadds
std
sbb
xor
pop
movsb
cmp
in
ret
scas
add
or
mov
nop
aad
ret
pop
outsl
fiadds
add
out
hlt
inc
sbb
gs
rol
cmp
in
sub
adc
aam
insl
cli
nop
test
xlat
test
inc
mov
cmp
mulb
icebp
add
daa
std
sbb
push
push
mov
neg
sarb
jbe
insb
cwtl
inc
pop
or
daa
mov
sbb
cwtl
lods
aaa
xchg
idiv
push
js
jl
jp
dec
leave
sbb
sbb
out
xor
or
fisttpll
test
mov
mulb
pop
jae
adc
lock
pop
outsl
and
shll
or
outsl
into
std
stos
mov
sbb
mov
push
js
movsb
cmp
shlb
jp
xchg
sbb
int
push
inc
lret
mov
cmpsl
fwait
and
mov
lret
stos
and
add
aam
cmpsb
xor
fistps
push
jns
push
addl
mov
cmp
xorb
sub
fs
clc
out
cmp
mov
adc
jno
mov
shrb
mov
hlt
xchg
loop
mov
int
cmp
and
jno
idivl
iret
xor
mov
xchg
aaa
mov
mov
inc
xchg
sbbl
cmp
add
push
pop
repnz
mov
or
shr
add
in
shrb
xchg
push
sahf
pop
sub
push
fsubl
repnz
sub
sahf
std
push
icebp
lcall
nop
dec
mov
xchg
xchg
std
mov
dec
cmp
in
lcall
sbb
inc
sub
xor
and
imul
xor
jecxz
push
es
push
dec
dec
add
mov
mov
push
jbe
int3
jbe
nop
mov
stc
and
dec
xor
pop
xor
mov
lock
shlb
xor
add
pop
cmp
lcall
iret
aaa
clc
push
jmp
loopne
repz
push
shrl
pop
mov
push
adc
sub
add
dec
mov
in
ffree
aad
std
div
fwait
dec
lods
push
cli
and
imul
ds
movsl
movsl
xchg
lret
insl
mov
xchg
sbb
fimuls
testb
insl
xor
test
stc
jno
sub
jecxz
insl
or
pop
push
adc
mov
push
loope
fnsave
stos
mov
or
xchg
cs
fwait
sub
cmpsl
cld
test
push
les
cli
or
xor
pop
add
mov
xchg
cwtl
fisttpl
ret
mov
lret
les
stos
in
cwtl
pop
sbb
lods
sbb
int
or
sub
test
mov
dec
out
sub
push
dec
mov
int
subl
jne
mov
mul
data16
xchg
test
cwtl
mov
xor
movups
mov
loop
sbb
jp
sub
mov
sti
arpl
jne
out
out
mov
or
roll
adcl
dec
je
dec
outsb
cmp
push
sbb
pop
lds
jae
mov
mov
and
fcoml
pop
roll
pop
sbb
loopne
test
lds
push
or
cwtl
inc
fcomps
sarl
push
testb
sbb
push
lret
iret
imul
mov
xor
cmpsl
roll
xchg
cs
inc
mov
or
inc
popf
movsl
push
in
out
cmp
mov
xchg
mov
mov
lret
dec
orl
jmp
mov
fld
mov
stc
stos
cwtl
mov
or
push
dec
cmpsb
jnp
out
in
mov
mov
cmpsb
sbb
and
mov
jns
sub
inc
scas
cmp
xor
rcrb
push
test
pusha
int3
cmp
sbb
nop
xlat
popa
jg
mov
inc
je
jmp
out
cltd
je
add
sti
lods
pop
xor
or
or
sbb
sarb
lcall
leave
mov
inc
xchg
dec
mov
imul
gs
das
fsubrs
out
sub
repz
sarl
arpl
vhaddpd
mov
mov
andb
ret
in
add
cmpl
cmpsb
mov
lea
or
mov
cmc
les
int3
xor
mov
dec
cmp
sbb
popa
mov
push
sub
or
jmp
jbe
sahf
subb
jne
sub
test
adc
daa
cmpsl
cmc
pop
mov
popf
sub
adc
cltd
push
pop
aaa
scas
cmc
test
jecxz
push
data16
mov
mov
hlt
add
sbb
xchg
pushf
out
mov
lock
mov
adc
test
cmp
cmpsl
jne
adc
stos
xchg
mov
jmp
int3
mov
in
bound
into
aaa
orl
or
add
ljmp
mov
mov
shll
fidivs
and
rolb
movsb
xor
mov
outsl
jnp
cli
adc
lods
sti
sub
xorl
and
out
xlat
movsl
mov
jae
and
cltd
adc
loope
jge
rcr
jne
lods
ret
push
inc
cmpl
jae
xlat
xlat
and
dec
push
jae
or
mov
inc
fdivl
jae
sar
push
pop
arpl
mov
xor
pop
cmpsl
cs
push
scas
dec
sub
dec
pop
adc
cmpsl
icebp
xlat
rorb
push
lret
test
or
es
and
sbb
inc
jmp
insb
les
iret
cwtl
pop
pop
jle
sbb
in
dec
filds
lods
adc
scas
push
in
sub
insl
repnz
daa
loope
or
lock
inc
bound
out
rol
push
mov
jle
call
sub
fisubs
loop
repnz
cli
inc
cwtl
pusha
cltd
sbb
bound
sahf
mov
mov
jno
mov
int
out
dec
in
xchg
aas
mov
ret
add
pop
pop
cltd
ret
jmp
push
test
sub
push
cmpsb
lahf
or
outsl
stos
test
add
sbb
repnz
pusha
aad
push
dec
pop
sbb
pop
push
fs
push
cli
dec
ljmp
sarl
inc
jne
stos
int
adc
subb
imul
sub
dec
scas
cmp
xlat
cmp
addr16
mov
test
aam
loop
icebp
stc
ret
popf
divb
test
cs
cmpsb
int3
roll
push
jmp
cmp
pop
jns
loop
push
sub
sub
aaa
sub
pop
and
clc
ja
out
fimuls
lods
lods
loopnew
ss
push
dec
in
aam
fists
xchg
dec
lret
cwtl
movsb
mov
addr16
mov
adc
aam
cmp
ud0
cmp
add
dec
loope
inc
ja
sbb
cmp
and
xchg
scas
push
rcll
and
dec
test
jnp
sbb
pop
mov
je
mov
negb
dec
jo
mov
mov
push
ss
test
mov
arpl
sbb
push
movsl
add
cwtl
push
std
xchg
icebp
inc
outsl
xchg
adc
mov
cmpl
cli
fs
ss
daa
cld
mov
cmpsl
add
adc
mov
cmp
ficomps
cmp
call
in
add
push
mov
jecxz
js
rcll
adc
lock
loop
mov
int
jb
loope
jle
push
cltd
stos
mov
or
cmp
add
pop
sub
push
lods
or
sbb
push
push
shll
test
push
pop
xchg
xor
adc
scas
shrl
test
lret
cmpsb
into
enter
in
xchg
ror
addr16
out
in
data16
movsb
enter
xchg
dec
cmp
out
fistl
imul
pop
mov
dec
and
mov
andl
mov
push
sbb
hlt
push
movsb
inc
inc
pushl
inc
push
mov
jo
je
push
mov
fcomps
pop
setbe
pop
jle
mov
push
nop
dec
orb
or
shlb
lods
mov
fimull
xor
cmp
sub
in
lcall
mov
jns
sbb
imul
rolb
shrb
mov
cmp
inc
mov
inc
pop
dec
push
testl
push
arpl
subl
fdivrl
addr16
cmp
jo
out
adc
lahf
mov
xor
inc
xchg
mulb
push
sbb
repnz
rcrl
sub
mov
mov
call
imul
sahf
jne
fadd
adcl
fstl
lea
jns
lcall
in
jns
ja
or
jecxz
sbbl
fcoms
mov
popf
xchg
push
push
pop
xchg
imul
mov
and
add
aas
add
pop
sbb
aam
mov
aaa
adc
push
fcomi
dec
gs
pop
xchg
fstps
xor
sbb
cmpsl
jecxz
int3
jecxz
jecxz
mov
ss
jbe
adc
in
jne
sub
xor
mov
inc
jbe
add
les
pop
in
mov
ficomps
jle
mov
fildll
xchg
sub
loope
inc
lret
add
pop
push
sbb
pushf
push
add
adc
mov
pop
fwait
xchg
mov
mov
and
jmp
test
imul
jp
std
inc
ljmp
and
or
adc
pop
mov
test
gs
popa
mov
mov
pop
inc
into
jp
in
pop
ret
and
loop
jae
call
or
sub
ret
push
adc
adc
inc
fidivs
dec
cmp
jg
pop
lahf
mov
cmp
icebp
cmp
pop
sub
cli
push
pop
inc
sbb
sub
pop
xor
aas
dec
cmpsb
dec
push
dec
inc
not
or
movsl
cmp
add
int3
or
outsb
iret
inc
sub
and
cmp
out
test
jns
lcall
dec
dec
mov
add
inc
jle
xchg
test
or
nop
push
mov
adc
push
mov
outsl
lds
pop
mov
sub
mov
gs
test
mov
cmp
jp
cmpsl
cmpsb
adc
sbb
dec
sahf
iret
stc
jne
mov
mov
dec
add
pop
mov
adc
cmp
pop
addr16
push
inc
or
inc
ds
outsb
dec
pop
and
add
xor
out
sbb
daa
into
imul
loopne
and
mov
scas
cld
shll
movsl
hlt
fldenv
out
int
push
jecxz
or
pushf
loope
lret
cmp
addr16
cld
xor
fyl2xp1
xchg
sahf
adc
inc
jmp
popa
mov
push
div
addb
das
xchg
cmp
inc
imul
dec
repnz
mov
lods
sbbl
dec
stos
sahf
push
test
pop
dec
repnz
shll
jae
test
bound
xor
cld
dec
les
jbe
push
pop
rorl
adc
xchg
jle
jbe,pn
cld
xor
adcl
loop
sbb
rcrl
jae
xor
adc
insl
mov
mov
sbb
fistps
roll
lret
dec
xchg
mov
sarl
jb
das
mov
push
inc
in
inc
xor
sti
outsb
and
jge
cli
test
sbb
popa
sub
ds
ror
rol
inc
orl
pop
dec
icebp
das
lret
sub
cs
sub
js
int3
sbbl
inc
aam
insl
inc
cld
xor
call
add
imul
xchg
pop
out
dec
inc
mov
shrl
pop
out
shlb
jp
sub
xchg
jle
ljmp
and
mov
bound
pop
test
push
lret
fisttpll
cmp
fcomi
rol
mov
mov
inc
std
scas
out
out
sbb
xchg
or
pop
dec
cmp
sbb
pop
jg
inc
cli
daa
out
jl
aam
mov
sbb
sub
mov
mov
push
and
into
scas
xor
adc
sbb
jb
addb
repnz
aaa
inc
jb
lret
mov
iret
fchs
inc
repnz
dec
sbb
incb
pop
es
bound
xorl
shrl
or
mov
dec
sub
pop
cmc
push
out
les
cmp
cmp
mov
cmpsb
xchg
sub
mov
rcl
andb
jae
pushfw
fsubs
in
pop
mov
je
xchg
mov
mov
loop
pop
data16
stc
xchg
add
stc
insl
dec
lret
cld
rcrb
mov
inc
not
jge
push
push
dec
or
bound
enter
mov
cld
inc
add
in
pop
or
mov
fwait
pop
aad
mov
ret
ljmp
cmp
push
test
or
inc
adc
mov
imul
fcoml
daa
add
fisubs
pop
mov
fisubrl
and
push
fisttpl
push
rclb
mov
adc
shl
sti
addr16
push
ja
testl
mov
mov
add
jb
test
data16
push
adc
inc
lods
mov
mov
sub
arpl
dec
aaa
inc
xor
enter
daa
inc
pop
mov
mov
outsb
add
push
lcall
xor
call
hlt
push
pop
dec
mov
loopne
shl
inc
xchg
add
xor
jecxz
cli
outsb
adc
pop
sbb
mov
in
movsb
jle
fwait
aaa
mov
inc
orb
shrb
xchg
or
ljmp
lahf
outsl
int
sahf
stc
int3
or
mov
and
out
cld
lahf
fs
add
iret
cld
cmp
pop
scas
or
push
es
xchg
fwait
add
movsl
xchg
xchg
xor
in
jbe
pushf
daa
sti
or
xchg
inc
jecxz
orl
shrb
mov
dec
out
mov
jecxz
xchg
scas
xor
out
dec
cmpsb
lea
sar
and
or
pop
jne
sub
and
push
add
lcall
cmp
pop
pop
fucom
pusha
push
inc
scas
mov
je
jecxz
push
push
pop
lret
add
sahf
jl
dec
or
mov
lods
jne
ljmp
lahf
cld
jae
popf
adc
addr16
xchg
push
lahf
push
or
adc
sti
mov
addr16
mov
pushf
lea
fstps
add
or
fs
xor
insl
push
hlt
lret
inc
iret
sahf
in
andb
cs
fstps
pushl
pop
test
adc
ret
sbb
mov
xor
jecxz
adc
inc
repnz
aam
inc
das
xchg
popa
aas
or
jae
xor
mov
lret
mov
fimuls
pop
aam
inc
jo
insb
movsb
sbb
loop
sbb
cs
cmp
dec
aaa
jns
cmp
adc
mov
add
xchg
inc
fiaddl
lea
cltd
pop
orb
mov
pop
pusha
dec
sti
or
scas
xor
xor
pop
into
sub
pop
adcb
movlps
andl
xchg
daa
mov
jp
jge
mov
leave
faddp
dec
mov
and
ds
ret
push
repz
xorl
out
nop
xlat
hlt
cmp
int
shlb
stos
mov
add
sti
es
fwait
mov
add
jge
ret
fildl
fnstenv
les
sbb
mov
sar
movl
hlt
lret
fisubrl
push
xor
aad
jo
pop
inc
adc
dec
dec
test
dec
jo
and
roll
inc
cwtl
addr16
cmp
jle
mov
xorb
and
dec
movsb
push
divl
outsl
scas
jae
ret
add
subl
ja
rclb
scas
sahf
push
push
js
or
jno
addr16
inc
out
jl
addb
adc
sbb
int3
cltd
or
stos
and
dec
sbbl
ret
ficoml
lea
mov
into
testl
xchg
lea
mov
and
in
jbe
add
or
int
call
mov
orb
clc
gs
jo
shll
sarl
mov
mov
push
lock
nop
in
sbb
mov
std
add
in
outsl
dec
das
das
add
lock
pop
inc
adc
inc
mov
test
jl
inc
pop
hlt
rolb
cmp
push
cmp
mov
popa
arpl
in
ror
movsb
sbb
je
push
adc
iret
popa
insl
int3
jecxz
sbb
imul
mov
nop
pop
lahf
lods
clc
jnp
je
push
pop
loop
outsb
cmp
xchg
and
mov
sti
or
mov
lea
mov
int3
mov
into
cs
sbb
xchg
cli
adcl
push
mov
cmp
pop
add
popf
jnp
cmpsb
cld
jg
xchg
popf
sub
xor
jnp
out
rolb
xor
les
or
push
push
mov
insb
insl
je
gs
add
dec
dec
jns
iret
cmp
out
xchg
adc
out
cli
int3
and
pop
pop
and
mov
pop
xchg
lea
fsubr
jb
ljmp
loopne
mov
jmp
call
outsb
mov
add
sbb
or
lea
push
call
shl
add
sub
jle
fidivrl
push
push
mov
pop
fldl2t
adc
ss
out
das
je
roll
add
cli
jae
pop
cwtl
lcall
repnz
out
cmp
cmp
adc
cmpsl
pusha
cmpsl
insb
jo
shll
cmp
dec
stc
cmp
or
mov
cmp
rcll
xchg
stc
sbbb
shl
orl
xchg
nop
or
lret
leave
icebp
fcompl
cmpl
in
call
lds
mov
mov
fistpl
ljmp
push
xor
lret
sti
movsb
and
outsl
jp
ljmp
fnstenv
mov
pop
inc
test
pop
sbb
pop
sbb
mov
inc
adc
or
adc
dec
loope
xor
mov
mov
ss
mov
or
jae
cmpsl
andb
aaa
xor
fimuls
push
dec
es
xchg
jae
xchg
jnp
sahf
dec
push
incl
fisttpll
add
pop
jnp
inc
adc
push
ret
mov
sub
and
jecxz
ss
jg
push
movsl
xor
sub
jae
push
add
clc
pop
push
aad
pop
bnd
xchg
imul
stos
mov
pusha
cltd
and
adc
call
icebp
mov
lret
std
shr
mov
cs
inc
divb
in
popf
ret
into
sbb
outsb
sbb
xchg
adc
push
in
sahf
or
jge
sbb
mov
add
lret
sahf
push
pminub
bound
outsl
jge
xor
lahf
fsubrs
mov
pop
nop
mull
scas
lret
insb
xor
mov
test
xor
cltd
data16
dec
out
test
mov
pop
mov
jle
call
js
lds
mov
into
or
jno
jl
sbb
dec
jnp
iret
lods
out
pop
and
jle
std
xchg
int
inc
push
and
divl
or
lea
ret
mov
call
popf
push
addl
mov
jle
aaa
ret
mov
mov
xor
call
or
cld
pusha
xchg
sti
scas
xor
in
test
dec
nop
add
je
mov
les
mov
stos
iret
mov
lcall
mov
repz
mov
daa
inc
xor
lahf
jl
xchg
pop
cmp
dec
push
ss
pushf
shll
push
add
idivl
shll
pop
stos
jmp
dec
jge
cltd
pop
sub
outsl
or
add
shr
int3
scas
insb
xor
dec
data16
pop
add
or
pop
fs
or
daa
sbb
adc
mov
mov
jno
test
inc
adc
in
or
sbb
fcmovb
mov
jg
xor
fiadds
sti
stos
or
xchg
int3
jl
sub
sub
addb
sbb
movsl
into
add
iret
call
cwtl
dec
or
sbb
xchg
xlat
pop
mov
mov
loop
mov
lahf
popf
inc
fnsave
and
xor
cwtl
pop
ss
cli
into
adc
push
or
xchg
clc
lahf
inc
jno
ror
ljmp
pop
jo
xchg
rcr
or
adc
test
shrb
pop
std
lea
dec
mov
push
stos
push
xchg
movsb
inc
test
sbbl
mov
or
loop
sub
aas
roll
xor
jle
out
div
add
out
push
mov
dec
dec
sbb
ret
ror
lock
xor
xchg
mov
mov
adc
idivb
cs
mov
push
cmc
test
jmp
mov
and
push
lods
mov
into
xorl
data16
push
sub
mov
mov
mov
inc
cld
pop
leave
dec
mov
ret
pop
inc
cmpsb
mul
sbbl
stc
and
sub
or
fistpll
cmpl
mov
dec
lock
pushf
stos
test
mov
mov
imul
fdivrl
or
push
shll
push
and
fcmove
mov
cwtl
pop
addr16
push
or
mov
mov
mov
cmp
clc
flds
jb
daa
pop
cmc
and
xchg
cltd
or
sub
cmp
or
nop
ja
adc
push
mov
xor
xchg
mov
lock
mov
stos
in
cmp
adc
aam
divl
add
loopne
ret
imul
rclb
jnp
out
mov
dec
sbb
mov
jo
pop
test
jnp
scas
cmp
popf
push
push
sub
dec
adc
jnp
mov
cmpsl
lods
lods
enter
cli
inc
and
adc
and
shrl
xor
sbb
push
cmpb
out
ljmp
dec
add
clc
ljmp
sbb
and
jp
push
mov
fs
leave
bound
mov
xchg
ss
dec
outsl
pop
das
xorb
pop
pop
fcom
rcll
pushf
mov
adc
inc
mov
inc
cmp
in
enter
mov
dec
aaa
bound
lods
filds
pop
push
out
add
enter
and
pop
fistpll
push
jne
jo
lcall
jns
or
mov
mov
mov
push
sbb
push
std
iret
je
incb
add
push
leave
bound
inc
push
arpl
adc
es
mov
cmovo
jp
fistpll
mov
popf
and
add
jb
hlt
mov
and
xlat
xor
outsb
mul
in
xor
fs
inc
test
clc
cmpsl
daa
push
add
add
mov
cmp
cmp
aad
gs
sub
shrb
rorb
aas
add
mov
xor
sarl
stc
stos
and
jge
push
ss
lods
fcmovnu
jns
ja
cli
push
jbe
data16
mov
xor
fincstp
push
xchg
lds
sub
cmp
loop
pop
lea
add
sub
inc
iret
loope
mov
jae
jne
insl
add
push
repz
and
jo
fs
mov
cmp
repnz
jae
push
xchg
test
ret
and
outsl
aaa
cld
pop
mov
mov
mov
or
mov
sbb
and
add
mov
outsb
iret
mov
pop
stos
xlat
lods
mov
mov
shr
aam
pop
dec
mov
aam
out
push
add
fisttpl
push
adc
fsubp
jg
jne
pop
aam
push
mov
sub
xchg
mov
rorb
rcrb
mov
cmp
xor
jne
and
addr16
ror
mov
mov
fistpll
loope
popf
and
cli
sub
lret
xchg
js
lods
push
ret
daa
cltd
bound
stos
data16
out
out
inc
cmp
dec
int
jne
sbb
dec
lret
movsb
loopne
cmp
addr16
out
aaa
aas
pop
cmp
popa
sbb
mov
data16
xor
mov
js
popa
and
mov
cmpsb
pop
imul
xor
jle
push
fdivp
js
cmpsb
pop
pusha
repnz
mov
mov
iret
or
or
loop
xor
sub
cltd
sahf
add
xor
movsb
jg
adc
leave
sub
outsb
test
mov
mov
orb
jp
out
rclb
loop
cmpsb
xor
mov
movsb
dec
int
fisttpll
lret
sbbl
out
pop
movsl
sbb
mov
divl
add
sbb
mov
and
in
je
in
cmp
pushf
xor
add
jmp
out
pop
cmpsl
add
mov
les
in
out
mov
push
mov
xchg
lods
pop
mov
add
call
and
loope
push
addr16
xor
add
inc
test
test
xchg
jo
cld
or
ja
fsubs
push
inc
and
push
dec
cwtl
ljmp
sti
sti
sub
mov
dec
call
add
loop
bound
dec
sbb
fsubp
pop
lods
adc
dec
push
inc
sub
int3
and
orb
push
lret
jae
std
rcl
sti
movsl
inc
pop
aas
testl
jg
push
and
aam
stos
xlat
arpl
push
dec
enter
lret
inc
lods
sub
and
js
or
pop
jno
bnd
pushf
jo
mov
cmpsb
in
repnz
in
cmp
int3
subb
mov
test
subb
mov
inc
out
mov
pop
cmpsl
fwait
and
add
or
and
jb
xlat
xchg
andb
clc
je
push
dec
pop
or
cmc
xchg
or
push
dec
adc
mov
shrb
xor
xchg
test
mov
xchg
sub
mov
dec
mov
inc
sbb
mov
enter
jg
fcomp
loop
repnz
xchg
dec
lcall
mov
adc
test
mov
mov
int
jb
lds
sar
or
jp
clc
outsb
pop
shlb
scas
scas
ret
push
mov
lahf
and
ss
pop
pushf
aaa
ja
shlb
inc
out
and
into
push
andl
clc
in
push
mov
jecxz
lret
push
stos
and
jecxz
jb
loop
xchg
xchg
in
jno
pop
out
in
cmp
cs
pop
dec
fwait
jecxz
and
or
cwtl
mov
loop
xlat
mov
mov
xlat
cltd
pop
hlt
and
mov
rcrl
xchg
jl
xor
xchg
or
cmp
test
xor
mov
or
push
in
out
mov
repz
cmpsb
mov
mov
jg,pn
es
cmp
pop
jecxz
inc
int3
jns
push
loope
stos
mov
xor
dec
pop
pop
add
add
shll
jo
xor
iret
lret
xchg
lock
popa
jle
pop
call
inc
push
pop
xchg
test
sub
ss
add
pop
and
or
jo
roll
arpl
sbb
out
hlt
add
es
out
or
inc
rcrl
cmc
aam
mov
fnop
xchg
scas
aaa
lcall
movsl
adc
aaa
insb
mov
in
inc
mov
mov
pop
in
aas
mov
pop
adcb
frstor
inc
sbb
hlt
inc
and
fsubs
imul
push
jge
xchg
cmp
sbb
mov
lret
dec
movsl
cmc
shl
pop
dec
inc
ret
pop
movsl
test
pmulhw
xor
movsb
repz
fistpl
sti
jl
and
or
lods
rcrb
lock
sub
mov
dec
fildl
xorb
xchg
imull
pmuludq
push
sub
mov
push
roll
mov
sub
or
mov
enter
dec
jnp
ret
outsb
enter
push
add
mov
repz
pop
mov
scas
mov
movsb
std
enter
loop
xchg
dec
fimull
outsl
pop
sub
test
jecxz
xchg
cmp
xchg
push
cmp
jno
push
and
mov
and
mov
fildll
xor
add
fs
push
push
fucomip
arpl
sbb
jmp
in
or
xchg
pop
gs
fcoml
mov
std
lret
xchg
jle
mov
pop
mov
pop
cmc
sub
negb
sbb
bound
lock
jl
stc
sarl
adc
jp
mov
pusha
pop
mov
sbb
call
shlb
cltd
loopne
lret
popf
sub
shr
sbb
sub
mov
es
enter
out
cmp
psraw
mov
or
adc
pop
imul
adc
es
mov
adc
or
clc
mov
inc
cli
push
aam
push
imul
lea
ljmp
shrl
scas
negl
jb
insl
xor
add
push
mov
js
xor
pop
nop
incl
push
loop
popa
sub
mov
hlt
or
in
pop
std
test
dec
je
inc
inc
stos
sti
adc
pop
adc
xor
clc
and
mov
sahf
cld
inc
cmp
addr16
out
pop
xchg
rorl
and
jmp
or
idivw
je
out
add
adcl
adc
imul
sub
push
inc
stc
out
push
pop
stos
jns
mov
jbe
jl
mov
inc
jecxz
dec
outsb
xor
data16
lods
and
ljmp
pop
xchg
pop
popf
xchg
mov
aas
shll
mov
insl
jb
repnz
call
in
clc
push
cmpsl
ret
mov
movsb
test
mov
ljmp
and
mov
in
lea
loop
ds
dec
xchg
mov
xchg
scas
mov
rcll
xor
push
jns
int3
fwait
bound
mov
sbb
insb
adc
rcrl
dec
rolb
and
mov
mov
push
popf
out
lock
adc
cmp
in
enter
xchg
or
int3
xchg
pop
shll
daa
dec
leave
push
mov
mov
loop
jne
add
jns
lea
incb
sub
movsb
dec
fadd
paddusw
or
das
dec
inc
xchg
pop
lcall
mov
jno
in
into
or
test
loope
cmp
clc
mov
leave
jmp
movsb
test
add
test
jp
push
fistl
popa
andl
and
dec
fisttps
into
cs
mov
push
or
stc
push
cwtl
jb
ret
mov
sahf
movsb
std
xchg
push
std
and
pusha
jp
mov
movl
xlat
js
aam
cmp
test
or
inc
cmc
sbb
frstor
ficompl
ret
xchg
out
fstpl
inc
cmp
adcl
jnp
lret
mov
mov
mov
mov
mov
addr16
jae
xchg
ret
sub
push
xor
add
xchg
sti
or
pop
mov
mov
pop
xlat
cmp
cs
loopne
jb
scas
dec
das
incl
lret
sub
rclb
rorl
test
push
xchg
les
xchg
cwtl
inc
rorb
aam
xchg
mov
into
rclb
jo
sarb
rep
sub
out
int3
sub
leave
stos
jmp
inc
test
outsb
sti
mov
pop
mov
jbe
loopne
out
js
mov
roll
aad
test
jmp
and
lea
lahf
cltd
jb
stc
mov
or
inc
jge
outsl
push
mov
mov
mov
test
test
or
sbb
pushf
lahf
in
sub
lcall
push
and
add
aas
cli
out
test
es
dec
push
adc
jecxz
frstor
pop
mov
fwait
aaa
add
lret
add
out
test
mov
fbld
sbb
lods
dec
or
jns
sahf
sub
daa
pop
mov
in
insb
jne
out
into
aas
jecxz
test
les
xchg
cmp
sti
sbb
js
or
sbb
ja
test
aam
sub
fwait
sahf
into
hlt
push
lcall
cli
xchg
push
dec
aaa
xor
lahf
gs
push
fndisi(8087
insb
mov
gs
mov
jae
loopne
xchg
les
push
shlb
xorl
and
mov
sub
jg
xchg
mov
sub
nop
xchg
jmp
fsubs
pusha
aam
inc
sub
xchg
add
cs
push
div
ss
neg
mov
rcr
shlb
mov
pop
dec
sbb
sbb
mov
mov
fs
xchg
in
movsb
xchg
sub
cmpb
lahf
nop
cli
mov
pusha
stc
out
or
push
jo
stos
je
mov
mov
jb
mov
cs
fiadds
cmpsl
jp
xchg
mov
sbb
pop
cmp
mov
push
dec
arpl
ret
gs
sti
les
push
mov
arpl
outsb
push
aam
mov
jae
adc
pop
and
loope
inc
pop
outsl
loope
add
xchg
adc
adc
mov
call
mov
xchg
fcmovnu
adc
into
fld
jbe
shlb
in
ja
and
cli
pushf
in
pop
test
cmpsb
into
or
fdivl
addr16
add
pop
mov
jae
lret
hlt
addb
pop
add
sbb
popa
lock
mov
test
in
jecxz
scas
jecxz
ja
inc
lcall
gs
or
xor
add
pop
arpl
repnz
cmp
bswap
xchg
and
pop
repz
sub
sub
push
fisttps
in
mov
push
mov
sahf
xchg
push
out
pushf
test
shr
and
mov
into
push
inc
mov
test
nop
jg
lret
fimuls
xor
movsb
dec
ds
dec
out
xchg
bnd
cmp
imul
jg
xchg
pop
cmpsl
mov
push
nop
cmp
dec
ja
xchg
dec
and
in
xorl
cld
notb
lret
mov
jne
jle
inc
sub
fistl
shlb
cs
mov
inc
lahf
js
mov
inc
mov
enter
loopne
movsl
mov
pop
push
test
mov
stc
or
pop
cmp
push
mov
movsb
xor
repz
and
cmpl
aas
aam
jb
mov
sbb
xor
es
adc
push
mov
xchg
mov
push
rorl
add
movsl
mull
insb
xchg
xor
jnp
pop
test
int
push
outsb
stos
psubd
jp
adc
inc
push
arpl
in
out
push
push
xor
cltd
add
loope
insl
sub
sti
cmp
dec
in
sbb
or
xor
mov
aad
adc
or
jmp
outsb
mov
call
sub
cmc
add
int
cwtl
out
xor
roll
xchg
jge
cli
push
mov
test
movups
clc
pushf
sbb
jl
jne
lcall
dec
jbe
xchg
xchg
or
loop
fstpt
sahf
adc
xlat
push
and
pop
test
add
in
mov
mov
outsb
mov
or
fldcw
pushf
inc
test
imul
dec
outsb
cmp
fwait
mov
sub
mov
mov
mov
and
jno
fs
inc
scas
fisubrs
lock
inc
subl
fldenv
scas
mov
sbb
dec
into
and
hlt
bound
sub
xchg
negb
xchg
xor
fisubs
push
std
gs
mov
dec
lret
fstp
sub
cli
js
lea
jnp
add
aad
ret
insb
mov
cmc
sub
popf
jge
mov
push
out
das
lods
cmp
sub
push
std
push
adc
int
mov
mov
xor
insl
test
pop
mov
cmp
mov
jmp
stos
adc
pop
adc
aaa
add
mov
xchg
push
mov
sahf
mov
xchg
pop
outsb
es
xor
ja
push
lock
mov
mov
fldcw
adc
in
lret
inc
sbb
dec
adc
js
in
pop
adc
rcl
loopne
stos
mov
mov
sbb
shll
mov
dec
rolb
pushf
movsl
les
lcall
out
mov
aaa
mov
fstp
es
mov
sahf
ret
aas
dec
in
ljmp
outsl
call
xchg
mov
jecxz
pushl
imull
xchg
cmp
je
jne
mov
push
movsl
ja
sbb
fstpt
in
sbb
jge
out
xchg
add
xor
cld
imul
mov
cmp
sbb
or
add
fisubl
inc
test
dec
repnz
xchg
lea
jb
xlat
xorl
aas
push
pop
jbe
push
int3
stos
inc
xchg
mov
int3
lahf
lods
hlt
fldenv
mov
in
add
pop
outsb
jnp
cmp
pop
pop
adc
mov
mov
shrl
cwtl
pop
inc
push
cmc
xchg
push
jno
je
insb
cwtl
xchg
repnz
mov
mov
test
cmp
xor
and
lea
lds
jl
xor
int
and
push
cld
ret
push
addr16
dec
push
test
movsl
push
inc
pop
aad
test
lret
and
and
fcomp
nop
int
inc
cmp
scas
andb
mov
xchg
scas
popl
jo
ss
inc
in
mov
arpl
adc
pop
nop
ror
insl
int3
in
popa
pop
stos
dec
sbb
sub
enter
push
pop
jmp
popf
dec
lea
mov
xchg
add
fisubrs
clc
sub
inc
mov
jnp
lcall
mov
cmpsl
mov
mov
lahf
inc
in
push
sbb
mov
mov
ret
icebp
and
adc
xchg
push
js
push
pop
loopne
sahf
lret
push
rcrb
adc
push
xor
adc
xchg
out
out
xchg
int3
sub
jmp
dec
icebp
inc
cmp
stc
dec
addb
insl
in
pop
pmaddwd
xchg
cmpsl
lds
xchg
in
in
or
icebp
add
adcl
stos
pop
jne
cld
call
push
shll
clc
cmp
pushf
cwtl
push
or
jae
sti
ja
mov
push
sbb
data16
push
sub
int3
pop
popa
xchg
or
sub
mov
notb
leave
push
add
or
inc
stos
sarb
sub
sub
mov
stos
add
lock
lock
jmp
decb
ds
subl
sbb
frndint
ja
mov
lea
lret
adc
xchg
outsl
fwait
mov
ss
test
cli
and
mov
xlat
or
sahf
adc
das
ds
popf
popf
cmp
fnsave
sahf
movsl
dec
inc
pop
dec
add
jge
std
fstps
lock
loopne
or
jo
arpl
pop
adc
cmp
cmpsb
sbb
pop
icebp
push
and
mov
pop
jo
outsl
push
roll
es
repz
adc
adc
pop
ljmp
mov
scas
out
int3
mov
xchg
add
aam
imul
fwait
scas
xor
xor
mov
mov
fstp
mov
test
lods
and
adc
inc
push
push
jge
fs
xchg
test
pop
sarl
ret
jmp
mov
xchg
gs
xchg
pusha
imul
or
jno
jae
mov
loop
fstpl
sbb
test
cmp
jge
push
jne
mov
xor
scas
adc
xor
inc
cwtl
add
loopne
jl
in
push
cmp
test
rcrl
push
push
cmpsb
aam
pop
xorl
imull
filds
sbb
cmp
out
xor
ficoms
mov
loopne
sbb
xchg
rclb
movsl
dec
jbe
jae
mov
mov
shlb
lods
in
mov
sub
ret
pop
ja
int
aam
addr16
imul
inc
cmp
jmp
xchg
add
adc
mov
pop
int
or
outsl
out
sbb
dec
cmc
cs
mov
std
mov
sbb
inc
mov
aaa
cmp
sbb
outsl
das
sub
std
mov
hlt
dec
dec
jnp
shl
pop
shrb
inc
lods
cltd
inc
pushf
popa
pusha
repnz
and
jns
mov
lret
add
xchg
arpl
cld
or
add
dec
dec
pop
push
daa
pop
sahf
and
std
sub
inc
dec
pushf
mov
mov
rol
inc
cli
bound
imul
mov
loop,pt
bnd
pop
pop
xor
fimuls
lahf
call
loopne
inc
mul
and
aam
mov
fs
sub
pop
aam
mov
mov
mov
rclb
divb
out
adc
adc
mov
pop
cmp
fiaddl
sub
mov
iret
imul
test
shrb
jnp
push
jo
mov
imul
dec
jecxz
or
lds
add
lcall
xor
fs
negl
test
sbb
mov
cmpsl
mov
cli
aam
and
xor
mov
inc
inc
or
pop
sbb
lahf
pop
out
jo
mov
repnz
nop
ret
or
inc
idivl
int3
int
je
rorb
adc
mull
or
add
xorb
or
xor
add
push
cmp
xchg
gs
aad
xchg
int
or
ret
push
fidivl
mov
sbb
jg
outsl
insb
out
jb
mov
and
jae
aas
mov
ficoml
or
jns
cmpl
loope
ror
sub
mov
cs
sti
cmp
jne
mov
xor
mov
lock
jp
fidivs
cmp
dec
ret
mov
mov
or
fcoms
xor
stc
or
mov
jbe
scas
xchg
imul
sti
pop
pop
adc
daa
add
ja
and
rclb
inc
dec
adc
insb
cli
jmp
push
leave
lea
jno
sub
test
mov
ret
pushw
insb
vmread
sub
aad
jp
loope
xchg
xchg
fs
popf
repnz
dec
inc
imul
mov
out
dec
jno
inc
int3
mov
fwait
sub
and
cmp
xchg
gs
clc
in
aam
xor
out
aas
dec
addr16
push
adc
call
mov
xlat
cmc
push
adc
dec
es
jmp
mov
or
fisttpll
inc
xor
pop
dec
call
jle
arpl
pop
or
adc
sbb
repnz
pop
cwtl
das
loope
ss
cld
inc
xor
xor
mov
dec
xor
mov
sti
lret
fistl
shll
lock
push
mov
or
leave
cmpsl
dec
pop
ficoms
rcrl
pop
dec
add
pop
or
cli
stos
mulb
loope
outsb
cltd
in
negl
push
lds
data16
and
pop
outsb
push
sub
push
cmp
push
mov
mov
loope
outsb
or
mov
pop
jae
dec
mov
cmpsb
fmull
sbb
fcomps
xlat
xchg
xchg
add
movsb
mov
sbb
xchg
mov
fiadds
sbb
push
rorb
punpckhwd
inc
int
mov
sbb
sbb
aad
fstpl
rol
jecxz
jge
lret
ds
imul
aas
movsb
xor
cmp
mov
ja
icebp
jae
loop
call
sbb
jnp
sub
pusha
dec
mov
push
test
in
lahf
push
or
sahf
inc
and
pop
sub
fsub
add
push
pop
nop
xor
pushf
mov
aaa
push
std
inc
les
and
iret
xchg
arpl
rorl
and
insl
jg
in
mov
adc
jl
mov
jns
pop
lea
push
pop
cmp
dec
fdivrp
aaa
icebp
jae
ss
or
or
add
pop
enter
inc
xchg
xchg
xchg
jmp
frstor
push
sub
int
jne
push
hlt
cmpsb
mov
and
or
popf
sbb
and
repz
call
jle
ss
mov
sub
aas
arpl
jo
addb
pop
subb
stos
jns
mov
sub
or
sbb
icebp
int3
jle
jle
call
mov
dec
call
mov
mov
nop
jno
sbb
or
sub
add
push
mov
jecxz
jae
sbbb
cmp
movsl
sbb
cmp
mov
int3
xchg
popf
pop
push
aad
sub
in
pop
stos
xchg
test
sub
in
cmp
in
xlat
imul
cmp
clc
xchg
cs
jecxz
fisubrl
pop
loope
lock
or
out
push
mov
sbb
arpl
mov
imul
test
mov
shr
push
dec
xchg
iret
mov
fisttpll
sbb
push
cmc
lds
mov
leave
lock
stos
xchg
xchg
loop
adc
lock
mov
test
ljmp
shl
imul
mov
insb
in
dec
mov
xchg
loopne
jle
in
arpl
idivb
mov
jns
push
int
out
cmp
addl
fsubl
icebp
sti
mov
std
add
dec
sub
add
loope
insb
xor
jle
sbb
lahf
or
and
fldl
repz
mov
add
pop
xchg
mov
push
ficomps
lcall
dec
adc
nop
dec
cwtl
jb
in
jns
into
mov
aaa
daa
cmpsb
sbbl
pop
loop
adc
repnz
out
in
pop
out
es
and
push
and
sti
faddl
jbe
divl
stos
dec
out
pop
cltd
setbe
lcall
dec
dec
add
test
xchg
dec
ja
in
nop
xchg
stos
push
sbb
jecxz
mov
leavew
cs
stos
std
lea
mov
jecxz
mov
repz
add
inc
xchg
pusha
jne
push
repnz
or
lret
aad
pop
test
pop
pusha
mov
dec
add
cmpsw
pusha
es
scas
xchg
dec
ss
repz
lcall
jmp
pop
pop
sti
mov
dec
or
push
mov
rcrl
xor
add
js
jge
xor
paddusb
in
fwait
push
js
inc
and
dec
cld
mov
test
stos
subl
out
lea
jb
fdivr
and
or
inc
xor
adc
faddl
stc
sub
sub
int3
push
push
in
jecxz
add
pusha
sub
cs
mov
int
leave
cmp
dec
push
mov
dec
int3
mov
xor
scas
jo
adc
mov
adc
sbb
sti
adc
mov
dec
jle
jnp
lods
gs
fcoms
cmp
imul
loopne
xlat
sbb
orb
movsb
sub
xchg
or
hlt
rcll
in
nop
cmp
mov
pextrw
cmp
out
lds
loopne
lret
mov
mov
mov
dec
and
roll
mov
hlt
ret
fistps
arpl
mov
andl
add
add
push
xor
mov
sub
mov
add
lret
out
addr16
adc
popw
pop
pop
hlt
leave
inc
mov
sarb
push
xchg
aaa
jae
mov
push
cmp
leave
cmpl
xchg
pusha
push
jo
add
out
pop
and
add
adc
mov
push
cld
or
ja
aas
aam
jle
fwait
test
pextrw
mov
pop
mov
and
cmp
mov
xchg
lret
and
addr16
xchg
mov
xor
mov
icebp
scas
mov
insb
add
inc
and
push
lods
xchg
int
add
mov
sub
xlat
add
or
xchg
pusha
outsb
pop
xorb
or
leave
jl
clc
xorl
popa
mov
xchg
mov
and
xchg
push
out
lds
loop
fwait
out
scas
push
repnz
scas
and
pop
push
jp
fcomp
cmp
push
imul
push
sbb
xor
popf
mov
inc
xchg
lcall
mov
repz
sub
jp
xor
or
pusha
mov
insb
xchg
xchg
rorl
mov
sarl
mov
fcomps
mov
xor
dec
fnstenv
mov
cli
mov
sbb
repz
popa
rcrl
and
mov
cli
and
adc
mov
fildll
push
mov
mov
push
orb
movsb
xchg
int
insb
adc
mov
cltd
mov
lret
or
loopne
jg
lods
jecxz
hlt
das
inc
aas
adc
and
addr16
mull
jb
sub
pop
scas
add
in
mov
adc
mov
lcall
cli
or
cmp
rolb
add
xor
sub
data16
arpl
in
in
inc
xorl
xchg
fisubrs
push
lcall
push
ja
lea
divl
sti
inc
push
mov
push
mov
add
inc
xchg
cmp
cli
mov
sbb
mov
push
stos
es
adc
insl
nop
and
cld
cmpsb
jnp
jns
mov
loope
movsl
test
sbb
pop
cmp
cwtl
je
int3
aad
sysenter
sbb
insb
sub
cld
or
test
or
cli
sbb
cmp
stos
loope
adcl
mov
in
and
inc
and
ret
jmp
mov
mov
and
add
fdivrl
fs
iret
xor
dec
repnz
pop
and
icebp
cmpsl
lcall
add
dec
scas
repz
push
push
movsb
xor
jae
or
lret
aad
loopne
sbb
enter
outsb
mov
xchg
jecxz
mov
jg
add
inc
movsl
hlt
add
es
pop
cmp
pop
cmpsb
cmc
or
je
push
and
jp
xor
fxch
pop
push
or
mov
lods
lods
jae
sub
data16
dec
test
fstl
lds
sbb
adc
push
out
mov
sub
repz
xchg
xchg
cwtl
ret
jae
ja
and
jle
push
es
xor
jo
fcmovnu
or
lahf
stos
xchg
xchg
in
cmpsb
xchg
inc
mov
sahf
jmp
mov
out
cld
pop
mov
inc
cli
cmpl
stc
mov
shll
mov
mov
push
push
outsl
cmp
daa
inc
xlat
rorl
or
movsb
das
popf
sbbb
dec
mov
inc
fldcw
push
lods
ss
stos
outsl
cltd
or
or
xchg
je
sub
adc
mov
out
mov
dec
sub
pushf
sbb
popf
and
pop
xor
add
dec
das
push
jae
jne
outsb
add
pop
adc
or
in
cmpb
js
lock
lcall
cs
adcb
cld
inc
mov
insb
or
mov
arpl
sub
sbb
sbb
sub
push
and
in
loope
ljmp
lock
out
imul
cs
shll
sub
in
loopne
or
push
lret
xchg
add
push
fucomi
lret
lcall
outsl
movsb
movsb
add
add
sbb
das
decb
jne
popf
lock
clc
scas
pop
jmp
jecxz
mov
mov
xor
mov
sbb
cld
dec
test
sub
jp,pt
sub
and
inc
fs
test
add
or
xchg
ja
jae
pop
andl
in
adc
pop
dec
fildll
popf
adc
dec
in
daa
in
jbe
pop
mov
or
xchg
sbb
pop
stos
mov
xlat
shr
cmp
mov
mov
stos
push
mov
and
xor
xchg
xchg
dec
aas
in
add
ss
cmp
sbb
jo
jp
mov
xor
and
into
dec
fildl
jnp
js
mov
in
xchg
inc
andl
pop
test
scas
repz
in
xor
test
dec
les
sbb
mov
adc
xor
mov
test
movsb
xor
clc
inc
jnp
pop
dec
movsb
add
pop
sub
inc
fwait
inc
adc
fsubr
sbb
out
dec
or
scas
mov
cwtl
mov
or
enter
pop
in
dec
or
mov
es
sub
repnz
in
les
pop
rcrl
and
push
inc
sub
jecxz
sbb
push
ret
addr16
decb
js
and
sti
es
pop
push
mov
adc
dec
rcr
mov
movsl
pop
dec
and
outsl
xor
cwtl
fdivl
sub
fdivl
xchg
stc
std
pop
and
out
mov
flds
jno
call
ljmp
sbb
and
mov
jmp
jno
mov
scas
jae
xor
ljmp
pop
add
mov
mov
sub
int3
or
mov
jp
mov
xorb
lock
jmp
push
mov
outsb
cmp
push
out
repz
pop
dec
jns
stos
jge
and
or
pop
sub
mov
jmp
dec
mov
and
int3
sub
xchg
out
arpl
stos
shrb
push
cli
stos
std
fs
jmp
cmp
insl
test
mov
imul
test
cwtl
lahf
stos
mov
test
in
or
fucomip
rorw
shrl
add
mov
jmp
loop
cmc
mov
lahf
or
pop
cltd
mov
movsl
data16
sub
pop
push
sub
xlat
or
imul
insb
jno
nop
xor
mov
push
jo
and
mov
andb
xor
dec
mov
pop
mov
xor
mov
jle
xchg
pop
cmc
popf
out
xor
into
ds
std
popf
push
adcl
testl
ja
ret
sti
jne
cmp
lea
pop
mov
cs
lret
or
out
in
data16
outsb
outsb
pop
lcall
in
cmovl
add
sbb
repz
cld
cltd
test
xor
inc
leave
test
push
cmp
out
testb
mov
cmp
mov
sub
lock
daa
popf
push
mov
push
sbb
or
lcall
cmpsw
xchg
stc
daa
fimull
add
mov
test
dec
lds
and
mov
push
bound
popf
dec
repz
test
incb
jg
mov
das
push
loop
and
pop
push
xchg
xchg
loop
xorb
arpl
lods
mov
and
addb
dec
mov
jno
outsb
and
sti
test
dec
jmp
add
cwtl
mov
xchg
lcall
imul
stos
push
pop
filds
test
mov
lcall
xor
shrl
jae
push
mov
sub
xchg
push
lahf
xor
jo
nop
mov
pop
sub
jl
push
hlt
mov
cmp
cwtl
pop
popf
into
pusha
dec
cmp
leave
in
sti
pop
xchg
es
ret
dec
aaa
pop
into
mov
fwait
call
test
fsts
ljmp
lods
add
mov
sbbb
cltd
inc
test
popl
insl
xchg
or
je
rorb
inc
xchg
cmpsb
adc
add
loop
inc
xor
add
pushf
push
lahf
popf
cld
adc
fcmovne
arpl
dec
and
jge
dec
fdivs
mov
push
or
or
scas
sub
mov
push
pop
and
cld
xchg
lods
ljmp
dec
pop
sbb
xchg
cli
fldcw
pop
test
and
push
aam
mov
daa
mov
adc
stos
sub
pop
sub
lods
sub
inc
mov
sahf
sbb
sbb
mov
sub
dec
mov
jne
push
fdivl
stc
or
aam
in
sub
cwtl
xor
and
jecxz
orl
xchg
clc
sbb
dec
dec
jmp
inc
cwtl
mov
and
pop
cmp
rcll
aaa
scas
add
cmp
push
loopne
in
add
jg
data16
jne
ss
adc
lods
out
ljmp
stc
pop
and
call
jne
xchg
add
sub
sub
sbb
mov
xchg
fs
mov
ficoms
jge
mov
nop
sarl
ret
cmp
imull
pop
lahf
mov
daa
adc
cld
mov
mov
inc
lea
push
sbb
mov
addr16
jne
cmp
and
insb
roll
imul
pop
testl
test
add
aas
std
sbb
sbb
jns
xchg
cwtl
stos
bound
or
nop
push
cmp
pop
jl
into
jl
fistpll
cmc
mov
mov
repnz
leave
sti
dec
sbb
ret
fwait
cmp
int
in
fnstsw
jge
mov
outsl
stc
sbbl
xchg
jae
add
cmpsl
sbb
pop
divps
rclb
mov
add
pushf
lret
and
movsl
data16
out
sbb
mov
mov
fildl
pop
lock
test
fs
loop
cmp
jge
xor
shlb
imul
add
cli
gs
mov
mov
push
and
jle
jl
int3
push
add
loopne
mov
xchg
repnz
pop
jmp
les
cltd
mov
push
clc
push
xchg
jne
out
xor
mov
push
shrb
popf
fwait
in
dec
insb
add
or
add
adc
pop
or
ret
xor
mov
icebp
xor
daa
pop
clc
test
push
xchg
rcll
iret
shll
jno
inc
inc
outsl
inc
std
pushf
cmp
mov
jmp
out
sti
mov
test
sbb
or
inc
pop
mov
sub
in
daa
rclb
jbe
stc
pop
add
and
push
je
mov
lods
aas
xchg
or
pop
je
ds
xchg
test
insb
lea
or
loope
data16
sahf
cmp
test
inc
adcb
xchg
mov
jmp
mov
mov
mov
aaa
push
push
or
push
pop
add
or
push
divb
lcall
cmp
sbb
pushf
movsl
test
cltd
dec
push
dec
aad
aas
popf
inc
add
xor
push
loop
test
ljmp
inc
test
divb
push
sub
jecxz
fimuls
mov
add
icebp
mov
jg
push
imul
lds
lods
mov
gs
fs
mov
dec
movsl
mov
mov
orb
sbbb
jge
push
jecxz
and
movsb
into
xlat
cmp
xlat
adc
fisttpl
cmpsl
sbb
in
cmp
mov
sub
ret
in
shll
int
repz
or
push
js
and
adc
jno
jg
fsub
dec
pop
adc
imul
sub
mov
mov
mov
adcl
sub
imul
sub
outsb
or
jae
mov
mov
sbb
ljmp
and
mov
pushl
es
outsb
cmpsb
lahf
mov
divl
cmc
inc
lock
insb
dec
hlt
xor
mov
test
rclb
mov
in
gs
loopne
cmp
fs
lds
loop
xchg
test
rorl
sub
mov
std
sahf
icebp
insb
dec
mov
rcll
xchg
mov
mov
inc
lea
insb
push
jnp
clc
movsb
pop
mov
mov
loop
inc
ds
test
push
pushf
fldcw
out
mov
ret
rorb
aam
vpsubq
dec
inc
or
add
shrl
mov
cs
cmp
or
test
pop
jg
inc
mov
fwait
ja
lret
pop
fnstenv
or
adc
and
movsb
lds
cmpsl
mul
movsb
jno
inc
xorl
mov
mov
sti
roll
adc
fadd
sub
incb
das
inc
sti
stos
lds
repz
out
add
or
imul
sub
mov
fwait
mov
nop
leave
inc
je
jne,pn
repnz
push
loop
add
movsb
mov
and
jp,pn
loopne
sbb
insb
jne
arpl
rcrl
scas
xchg
hlt
fldcw
sub
inc
inc
andl
mov
push
pop
shrb
or
ljmp
ss
mov
dec
stos
mov
cld
xchg
ja
cli
repnz
dec
cmp
mov
and
xchg
out
mov
fs
xchg
mov
fstpt
pop
add
sbb
ja
lods
jle
rcl
xchg
imul
jge
jnp
test
mov
sarl
scas
mov
mov
cmpsb
or
and
jno
jo
fdivs
movsbl
mov
scas
out
jb
ljmp
sbb
in
inc
or
fldcw
inc
scas
rep
jno
mov
mov
data16
xchg
test
out
sbb
cltd
orl
call
jo
clc
pop
push
or
clc
jecxz
mov
jmp
hlt
rcrl
jge
call
std
or
shrb
idiv
jge
and
das
fsubl
outsl
sub
mov
repnz
iret
cmp
cmp
rcrb
pop
in
mov
adc
jg,pn
add
aad
or
and
or
sub
push
mov
or
enter
lds
pushf
push
cmp
cmp
imul
push
sub
popf
mov
insl
not
mov
mov
scas
out
orb
subl
das
loope
fldcw
pop
xor
fdivl
sbb
adc
fwait
sub
pop
test
xor
repnz
push
andb
stos
test
insb
mov
or
les
push
imull
push
add
mov
nop
out
cwtl
mov
ljmp
mov
imul
stos
pushf
rorl
adc
andb
push
pop
pusha
sub
aad
ss
pop
repz
xorl
adcb
ljmp
pop
mov
inc
cmp
add
loopne
loope
dec
inc
push
push
mov
add
inc
or
and
or
xchg
mov
iret
inc
mov
mov
xor
jge
test
jns
jb
mov
push
fs
mov
or
fmul
cmpsl
insb
scas
popa
jno
loop
test
hlt
ds
fdivrs
bswap
clc
nop
rcrl
out
out
rorl
gs
or
lea
push
lea
inc
int
mov
fwait
stc
and
cmp
jge
cmp
mov
mov
inc
mov
sub
add
fdivs
adc
ret
cs
ret
mov
adc
add
adc
xchg
daa
or
popf
jp
inc
sti
cmp
js
out
pusha
xchg
sub
pop
lahf
loop
ret
lock
mov
jmp
pop
push
inc
dec
cmpsl
es
mov
bound
bswap
jns
insb
scas
pop
mov
ret
dec
out
pushf
mov
ret
xor
andl
add
pop
testb
je
inc
jl
int3
cmp
add
xor
lds
jae
jo
mov
popa
pop
lea
aam
data16
sahf
sbb
cmp
fistps
and
inc
mov
ja
insb
mov
es
xor
jnp
push
xchg
mov
gs
xchg
hlt
xchg
lock
sub
fcmove
lret
and
jge
jecxz
and
mov
sub
adc
sub
in
xor
jl
xor
out
sbb
mov
add
pop
adc
mov
dec
sbb
ret
adc
pop
sub
hlt
xchg
pop
ds
inc
cmpsb
jle
divl
test
add
xor
out
lret
or
push
test
pop
and
mov
mov
shl
or
dec
xor
cli
fimull
jno
cmovbe
add
add
push
fwait
arpl
iret
or
jle
adc
outsl
fstl
push
inc
add
sbb
dec
test
dec
enter
lea
pop
xchg
inc
sub
iret
jb
addr16
and
ss
mov
in
adc
adc
test
xor
test
xchg
push
sub
clc
lea
scas
jae
nop
xor
and
popa
push
adc
pushf
push
mov
mov
sar
or
inc
jg
cmp
xor
cmp
movsb
iret
mov
lcall
jp
or
test
jge
adc
pop
jg
rclb
mov
cmc
mov
mov
pop
rcrb
pushf
mov
outsb
aad
adc
int
and
mov
mov
xchg
addb
mov
dec
and
aam
mov
jl
icebp
jmp
xor
jp
pop
divl
mov
push
mov
sub
imul
or
mov
sub
jl
data16
sbb
test
or
push
xchg
rcrl
sub
mov
mov
mov
add
xchg
sub
xor
and
aam
xor
jbe
xchg
jae
push
test
sub
pop
aaa
popf
push
push
jle
push
add
push
lods
dec
repnz
jp
mov
popa
mov
test
scas
add
mov
fldt
adc
popf
rcll
movb
lock
and
cli
repnz
xor
fbld
pop
mov
xchg
mov
jp
jmp
dec
adc
shll
mov
outsl
pop
outsb
or
push
aam
mov
stos
stos
or
ss
and
and
lret
mov
lods
enter
loop
sub
add
dec
cltd
cltd
pop
aam
outsl
mov
inc
xchg
adc
leave
cmpb
test
mov
data16
mov
stos
inc
add
int3
add
sub
xchg
or
stos
sbb
dec
xor
popa
fsubrl
outsl
aam
jge,pn
iret
lahf
push
rorb
or
push
ljmp
mov
push
repnz
frstor
mov
inc
fildl
pop
addr16
lahf
sti
cltd
clc
cmc
or
xor
and
jmp
icebp
pusha
jl
aad
pop
push
in
sbb
jae
inc
push
insl
cmp
iret
ret
stos
out
sbb
fimuls
or
xor
divb
call
xchg
std
fcomps
imul
cmp
or
or
sbb
add
lret
test
pop
pop
inc
repz
adc
and
xchg
loope
mov
xchg
cwtl
arpl
mov
int
xor
mov
mov
sub
push
add
and
icebp
lock
or
lods
jl
jle
dec
out
jle
jmp
jns
pop
pop
jp
movsb
or
dec
aad
and
addr16
ljmp
stos
mov
int3
shll
pop
js
cld
lds
jbe
not
filds
mov
mov
mov
jae
mov
leave
cmp
into
sbb
jb
neg
inc
subb
pop
pushf
call
shlb
out
mov
stos
mov
cmp
loopnew
int3
push
pop
mov
sub
push
pop
lret
in
cmpsl
bswap
cmp
mov
incb
sub
inc
jno
push
mov
idivl
mov
rclb
and
out
cmc
sbb
jns
xchg
inc
pop
add
xchg
pop
cmpsl
sbb
out
std
aam
insb
dec
sbb
in
dec
inc
out
dec
ret
add
dec
mov
mov
fisttpll
pop
sub
mov
dec
das
jns
jp
mov
adc
sahf
add
cmp
aaa
jecxz
pop
es
xor
ja
loop
test
xor
ret
scas
sahf
cmpsb
aam
stos
scas
mov
mov
xor
imul
mov
cs
int3
ficompl
xor
push
test
push
cld
pop
inc
ret
sub
pop
cmp
mov
push
mov
in
push
inc
test
xor
inc
inc
orl
add
out
lahf
or
push
push
push
xchg
and
fdivrl
orb
add
dec
or
repnz
repz
cmpsl
ljmp
inc
rclb
xor
ss
sahf
bound
outsl
fisubl
lahf
push
test
or
dec
jb
push
pop
fwait
std
adc
and
xor
jae
lcall
outsl
dec
je
inc
jmp
xor
imul
pop
cmp
xlat
dec
inc
mov
push
outsb
lahf
imul
aad
lret
mov
in
lret
fnstcw
mov
dec
xchg
dec
xchg
push
mov
pop
cmp
xor
arpl
inc
jecxz
push
adc
push
in
xchg
mov
test
mov
loopne
and
and
das
jo
adc
call
adc
add
aaa
sbb
push
lods
sbb
fcoms
push
cmpsb
hlt
sbb
lret
fcomip
push
add
popa
hlt
cs
push
fdivrs
mov
jmp
mov
ljmp
push
addr16
and
sbb
push
add
adc
and
adc
or
mov
fldt
inc
stos
mov
rcrl
adc
das
cmp
mov
xor
and
mov
push
addr16
add
xor
adcl
mov
arpl
inc
adc
repnz
cmp
sbb
cltd
scas
pushf
sahf
inc
int3
inc
jo
adcl
push
xor
or
js
mov
dec
int3
aas
mov
sbb
shrb
jbe
mov
adc
fs
sub
rcrl
ljmp
and
std
inc
movsb
adc
jb
mov
aas
out
scas
pop
push
jne
stos
lret
scas
in
jmp
ds
pusha
test
sbb
add
cmp
or
mov
cmp
adc
xor
int
mov
cmp
imul
aas
fldl
in
dec
cmpl
dec
adc
mov
aas
jne
mov
rorb
push
xchg
xor
jmp
and
inc
jb
jae
xchg
std
nop
jmp
pop
mov
test
lock
stos
mov
push
jp
sbb
push
test
shl
cmc
aaa
das
push
cmp
xchg
dec
movsb
fcomps
and
les
or
insl
aaa
cld
loope
movsb
gs
cmp
stos
out
xchg
mov
call
shlb
adc
pop
push
rcrl
int
lods
xchg
adc
movsb
icebp
out
movsb
into
out
dec
inc
fs
sahf
sub
bnd
push
rcrb
fldl
lock
mov
inc
jno
loopne
loopne
sti
scas
sbb
movb
mov
xor
add
adc
mov
outsl
and
addr16
fldt
movsl
in
jne
jmp
aad
aas
cmp
loop
jns
cltd
arpl
ret
stos
imul
call
fcoml
push
shrl
sub
mov
rcll
icebp
adc
mov
sarl
add
pushf
push
xor
adc
call
mov
in
es
pop
cmp
dec
pop
push
fldcw
cmpsb
in
sti
movsb
data16
and
sarb
mov
push
mov
cli
bound
dec
mov
inc
leave
add
adc
xchg
push
cltd
push
xchg
movsbl
push
test
sbb
push
sbb
dec
mov
mov
ds
jg
sbbb
jbe
into
adc
hlt
jmp
dec
insb
and
inc
push
sti
inc
das
test
inc
mov
in
je
sub
mov
add
aad
enter
aad
cld
test
xchg
mov
outsl
inc
mov
push
and
roll
insl
aam
cmpl
xchg
and
jle
rclb
xchg
subl
hlt
pop
insb
pop
scas
xchg
pop
add
int
daa
scas
xor
sub
mov
mov
push
push
mov
cmp
lods
jp
std
xchg
jnp
insl
cmpsl
daa
test
jg
icebp
mov
movsb
sub
mov
lret
jl
push
insb
sbb
push
push
sbb
jp
stc
out
pop
pop
cs
ret
or
lods
scas
sub
lgs
sbb
xor
lcall
stos
dec
and
cltd
add
sbb
outsl
lret
mov
imul
jp
in
dec
mov
mov
ret
movsb
hlt
rorb
jp
mov
pop
inc
das
lcall
insb
lds
imul
mov
ja
nop
or
mov
ss
inc
pop
push
xchg
cwtl
insb
push
insl
lret
out
or
stc
mov
insb
cmp
ret
push
jg
push
jp
mov
imul
lea
jo
sti
mov
test
mov
dec
rclb
popa
lret
out
mov
icebp
ficoms
jnp
jne
sbb
sub
xor
add
jp
in
cld
in
and
adc
insb
ja
jae
and
fdivr
pop
stc
cmp
sub
push
jg
xor
xchg
pop
jmp
cs
push
adc
sub
data16
stos
xchg
push
aam
mov
xchg
adc
adc
arpl
mov
es
lret
mov
cmpsl
insb
movsb
pop
xchg
dec
lods
pop
stc
and
fs
cmp
fsubrs
cmpsb
push
sahf
pusha
jbe
xor
test
cwtl
mov
pop
stos
push
pushf
cmpsl
cmc
mov
xchg
sub
sbb
lock
dec
das
ds
in
addr16
out
popf
mov
add
mov
nop
xlat
pop
adc
jg
std
mov
xchg
cmc
hlt
jns
mov
and
mov
adc
pusha
loopne
mov
popa
test
jno
push
jno
cltd
mov
xchg
lods
xchg
scas
scas
stos
flds
jne
sbb
jge
pop
sti
lods
inc
add
testb
push
jae
cmpsb
mov
arpl
test
ror
pop
in
or
or
jb
fidivrs
and
repz
shll
cmp
cmp
ret
pop
pusha
das
mov
nop
push
xchg
lahf
pop
nop
add
inc
hlt
clc
pop
xor
jae
xchg
mov
adc
push
sub
xchg
test
cmp
mov
adc
pusha
lods
loopne
sub
andb
mov
add
pop
imul
lods
pop
aad
jno
enter
outsb
out
mov
xlat
sub
je
mov
xchg
jl
stos
push
je
movsl
cmp
test
push
in
mov
test
sbb
dec
mov
clc
add
inc
jp
xor
rcrb
mov
test
jmp
ljmp
inc
loopne
push
cld
sbb
xor
inc
cld
xor
imul
mov
out
lds
hlt
pusha
stc
mov
mov
lret
cld
mov
outsb
jp
add
or
sub
fistpl
out
out
cmc
and
jns
jle
mov
jge
in
clc
mov
sbb
test
es
add
imul
mov
sbb
jbe
mov
xchg
fldenv
call
jg
mov
fsin
cld
gs
sbb
mov
gs
iret
popa
pop
sbb
out
sub
jp
shlb
cmc
inc
xor
mov
in
shl
jne
sti
sub
pop
fs
pop
jnp
xor
stos
pop
das
mov
cmp
dec
mov
and
xor
inc
lock
jl
mov
icebp
jecxz
sub
cmp
mov
jbe
mov
inc
pop
ljmp
lahf
stos
nop
mov
mov
sbbl
xchg
movsb
in
pop
pop
rcrb
push
std
sbbb
stos
lds
sar
pop
sbb
sub
inc
fnsave
adc
jno
js
sbb
imul
ds
fnstcw
addb
mov
sbb
outsb
ss
arpl
add
sub
jp
ljmp
cmp
jo
mov
xchg
scas
and
mov
xchg
xchg
in
lret
into
inc
test
xlat
aam
movsb
imul
add
mov
push
fnstsw
mov
xchg
cltd
leave
orb
lahf
and
das
out
mov
rcl
mov
insl
mov
repnz
stos
mov
cmp
outsl
movsl
aad
push
cmc
push
fucomi
sahf
or
enter
mov
xor
xor
fstpl
sub
lock
dec
pop
or
jb
movsl
sbb
imul
cmp
sti
jno
lahf
jnp
lods
stos
lahf
outsb
std
add
dec
sub
jle
stos
cli
popa
mov
popa
add
cmpsl
loop
fistl
mov
dec
lahf
or
int
daa
jne
aad
lret
cs
enter
test
inc
add
or
outsb
test
andl
addr16
int
mov
mov
sbb
push
stc
idivb
or
repnz
mov
aam
cli
cmp
out
lock
aad
adc
mov
int
add
lcall
xor
xlat
adc
jg
imul
mov
xchg
sbb
sub
mov
cmp
and
xor
jmp
sahf
push
pop
or
ret
and
pop
fstpl
xlat
and
outsb
cmp
lock
push
and
pop
lods
stos
test
jbe
aaa
mov
mov
repz
lea
cmpsb
mov
adc
jp
add
xchg
pop
xorb
sbb
or
mov
clc
ds
sbb
dec
outsl
hlt
in
lock
adc
je
outsl
and
cmp
xor
push
or
test
fdivrl
adc
dec
jae
jnp
popf
cmp
decb
mov
sahf
negb
stc
addb
or
cltd
lea
sarl
js
xchg
js
icebp
mov
mov
xchg
movsb
mov
or
cltd
cltd
mov
mov
mov
hlt
inc
lcall
orb
ret
xor
int
and
and
call
push
jmp
add
push
data16
sbb
jns
clc
mov
xor
or
mov
lods
mov
inc
int
jno
mov
ds
mov
mov
mov
inc
lahf
decb
cs
push
ret
mov
cwtl
pop
inc
into
nop
mov
xchg
fisubrs
lods
fistpl
dec
in
jecxz
cmp
std
push
cmpsb
rcl
and
cmp
cmc
leave
mov
jmp
ljmp
fwait
dec
mov
xor
xor
jge
shll
loope
frstor
das
icebp
push
add
inc
adc
xor
mov
or
testl
fs
lods
jne
mov
cs
out
sub
das
dec
shrl
stc
or
orb
or
add
mov
loop
and
jecxz
test
jle
imul
add
in
popf
ljmp
imull
mov
sbb
and
adc
int
loop
out
mov
nop
sbb
mov
cmp
or
stos
out
dec
popf
dec
xchg
cltd
filds
data16
scas
xchg
jns
lahf
ja
scas
in
imul
stos
mov
pop
push
push
invd
sbb
insb
es
xchg
pop
dec
out
sub
pushf
xor
inc
or
mov
test
outsl
and
cmp
push
nop
sub
gs
out
fisttpll
jae
stos
adc
mov
jmp
mov
xorb
in
out
pop
lods
pop
stos
leave
jns
test
sbb
inc
push
add
add
cmpsb
mov
xchg
sbb
pop
jecxz
dec
in
jl
mov
mov
mov
mov
jecxz
xchg
ljmp
dec
ja
icebp
in
sub
push
jmp
fsub
into
add
hlt
pop
mov
test
in
cmp
loop
in
sbbb
ret
sbb
test
loopne
sbb
out
outsb
jg
add
das
aas
negl
add
mov
and
mov
dec
jecxz
xchg
fs
aam
pushf
and
repnz
sub
mov
inc
sbb
push
and
add
in
fnstsw
lock
inc
popa
cwtl
adc
imul
adc
shrb
insb
xchg
bound
nop
clc
je
sbbl
pop
mov
jmp
add
ret
in
imul
xor
ljmp
cmpsl
fstps
sahf
lret
xor
mov
insb
bound
shlb
mov
movsl
lods
inc
sbb
sub
repnz
pusha
insl
dec
sub
pop
mov
lock
scas
shlb
imul
out
int3
les
in
xchg
fcomp
dec
fldcw
leave
aas
les
jecxz
addr16
sbb
jb
push
lock
mov
and
mov
and
mov
data16
iret
mov
insb
xchg
mov
stos
insb
out
xor
sub
xchg
adc
mov
jbe
call
int
jbe
das
js
inc
sbb
mov
ds
jns
insb
mov
popa
mov
push
jne
inc
fidivl
stos
fnstenv
in
mov
test
gs
fwait
or
inc
mov
dec
or
sub
push
xchg
mov
aas
push
out
cmpsb
jae
jo
inc
es
and
inc
mov
jnp
sti
std
lret
add
push
addr16
add
mov
add
in
xor
enter
fistpll
call
or
mov
mov
sbb
fildll
stos
mov
mov
ret
dec
push
ja
mov
mov
or
xor
mov
mov
repz
adc
aam
sbb
loop
push
imul
rorl
mov
repz
pop
es
sub
pop
mov
dec
out
xor
inc
addr16
xchg
roll
xchg
add
sahf
fbld
mov
xchg
cmp
daa
lret
subl
andl
jmp
mov
pop
clc
sti
call
sbb
fdivrl
inc
xlat
mov
and
cwtl
in
mov
mov
aas
adc
cwtl
pusha
fstps
cli
inc
lret
mov
pop
dec
mov
sarb
std
call
inc
xchg
iret
mov
jns
mov
test
dec
sbb
pop
pushf
dec
movsb
repz
les
gs
or
in
lea
out
mov
cli
subl
add
inc
in
mov
roll
cmp
fmull
mov
inc
imul
jmp
jle
and
ss
jb
cmpl
fimull
adc
dec
lock
cs
into
scas
imul
pushf
insb
mov
mov
nop
lods
cwtl
sahf
dec
mov
xchg
inc
stos
push
fistpll
in
insb
addl
loope
outsb
addr16
daa
daa
mov
mov
cmp
push
push
shl
lock
inc
sub
jnp
xchg
sti
push
enter
pop
pop
xor
dec
ja
cmp
arpl
jl
imul
outsl
xchg
test
xchg
aad
jne
mov
mov
mov
mov
shl
or
jb
mov
mov
sub
scas
addr16
popl
push
dec
jmp
sub
in
adc
mov
mov
mov
loope
pop
outsb
loope
subl
pop
mov
mov
cmp
aam
pop
jle
inc
dec
clc
lcall
lds
mov
xchg
sbb
cli
pop
xchg
cmpsb
mov
mov
jne
inc
mov
add
popa
les
aam
sbb
test
xchg
mov
incb
jbe
mov
pop
push
fidivrl
into
cmp
scas
mov
xor
xchg
movsl
cmp
das
repz
xchg
mov
cmp
lcall
fdivl
xchg
mov
jae
pop
rcll
inc
popa
in
inc
stos
fcompl
into
jg
pop
dec
add
ffree
pusha
sbb
adc
lea
jecxz
icebp
cmp
mov
push
cltd
loop
outsb
jbe
dec
call
add
pop
mov
les
ljmp
stos
out
jle
push
mov
push
imul
loope
ljmp
xor
in
adc
sbb
xchg
add
stc
push
mov
jno
sub
add
jno
pop
pushf
jno
imul
int3
lods
cmp
movsl
lret
gs
and
sbb
stos
xlat
adc
pop
push
int3
sahf
gs
loop
movsl
jecxz
mov
rcll
cltd
inc
das
pop
xchg
cmc
imul
jmp
daa
xor
out
adc
lds
je
scas
stos
push
mov
sbb
jae
inc
cltd
add
mov
mov
dec
dec
mov
insb
and
xchg
pop
sbb
or
mov
pop
fnstenv
sub
cmp
mov
dec
loope
gs
in
arpl
pop
loope
arpl
sbb
inc
outsb
xor
pop
xchg
les
add
xor
pusha
sub
popf
mov
gs
push
cltd
fists
sub
dec
adc
xchg
sub
jge
sbb
mov
iret
mov
ljmp
mov
xchg
sarl
addr16
int3
pop
pop
movsl
enter
inc
sub
cmc
add
jne
iret
mov
push
addr16
xor
jb
fcmovu
js
or
test
stos
insl
pop
or
aad
push
jge
mov
add
fisubs
subb
les
jecxz
lahf
sahf
mov
cmp
aam
subb
das
xor
icebp
push
or
ror
xchg
sub
fstl
mov
pop
push
arpl
inc
and
fwait
testl
pop
or
sbb
jno
repnz
test
ljmp
mov
loopne
ljmp
sbb
fnstcw
addr16
sbb
or
or
andb
mov
or
inc
scas
mov
sub
dec
sbb
push
lods
xchg
fidivl
je
mov
jle
loopne
mov
jno
fistpll
orb
daa
add
aaa
or
mov
push
or
cmp
pop
jmp
fnstcw
fistpl
jo
iret
daa
outsb
dec
sbb
je
sbb
ss
sub
dec
xchg
enter
dec
test
movsl
int3
ds
cmp
jge
sub
inc
jg
pusha
cmp
jae
sbb
dec
dec
imul
roll
lea
arpl
sbb
leave
outsl
sub
dec
jmp
mov
pop
je
push
stc
or
orb
or
loop
xor
cmc
xor
jge
mull
push
std
repnz
sti
call
inc
sti
dec
fsubs
sbb
test
test
jle
jne
push
fmull
dec
and
repnz
int3
add
mov
in
insl
or
emms
testb
inc
rolb
cmp
lds
call
jl
jnp
lea
or
add
test
xchg
dec
in
inc
and
add
scas
cmp
lds
jmp
adc
pushf
mov
push
jl
popa
ret
test
push
ljmp
mov
pop
add
mov
shll
push
fwait
scas
data16
cli
ja
setns
insb
or
in
inc
and
ss
arpl
fstps
jle
pop
rorb
push
xchg
mov
xchg
dec
roll
inc
nop
sbb
repz
inc
xchg
cli
insl
lret
sbb
lcall
in
aaa
sbb
mov
sub
xchg
fcmovnb
pop
pop
mov
addl
jmp
movsb
and
std
or
mov
adc
aad
jae
ss
dec
pop
xchg
inc
add
cmp
inc
mov
dec
cmp
mov
mov
mov
sbb
jecxz
sub
pop
cmp
ds
stos
es
push
cwtl
add
test
push
mov
sub
negl
add
dec
fsub
js
subl
jmp
nop
adc
les
mov
pop
sti
jbe
mov
mov
push
fs
inc
sub
std
add
shll
dec
pop
mov
sub
ja
adc
sahf
lahf
incb
cmpsb
mov
outsl
sub
mov
pop
ja
lock
outsl
cmp
push
repnz
es
lock
hlt
mov
cs
rorl
out
pop
imul
jmp
fstps
xchg
std
mov
jg
in
int
sub
test
rcll
stos
xor
cwtl
sbb
movsl
loopne
stos
or
loopne
jmp
shll
jbe
cmp
cmc
add
test
xchg
adc
lcall
cltd
push
inc
sahf
loop
xchg
dec
lcall
dec
push
pop
jecxz
jp
pop
lds
jbe
loope
xchg
fidivs
jmp
int3
push
lods
fs
repnz
pushf
in
mov
in
cmc
dec
xor
stos
imull
cmp
lock
in
shll
lret
negl
loopne
or
jbe
scas
cmp
inc
pop
xchg
pop
inc
cwtl
outsb
mov
inc
xchg
adc
sbb
pop
cmpsl
frstor
sahf
dec
adc
shlb
adc
add
xor
and
repnz
stc
jae
push
mov
sub
add
lret
mov
pusha
imul
or
out
pmullw
fwait
sub
scas
or
ret
lcall
pop
add
shrl
mov
hlt
mov
xlat
in
sbb
and
or
call
adc
adc
and
dec
lods
divb
and
ja
lock
test
js
cs
bnd
cwtl
xchg
out
inc
repz
ss
rcrb
cmp
push
decb
xchg
inc
cmpl
xchg
outsb
iret
mov
mov
jl
test
lcall
xor
imul
add
and
mov
inc
inc
cmp
mov
inc
lds
adc
sub
jo
and
xchg
or
aaa
xor
mov
mov
in
jle
mov
shll
ss
sbb
cld
adc
mov
ds
je
lcall
pusha
and
lods
add
adc
adc
hlt
inc
cmp
bound
enter
jb
sub
jle
mov
xor
mov
das
daa
lock
lods
fs
js
add
and
add
sarb
mov
ja
push
pop
mov
pmulhw
lods
repz
aaa
xchg
mov
cld
add
xor
cld
popa
shll
jbe
roll
sti
enter
cli
xor
push
jnp
and
filds
jp
loopne
aaa
sub
add
ljmp
movsb
icebp
sarl
repz
push
sbb
popa
in
jns
jg
cmp
jne
push
jl
mov
jo
clc
sbbb
inc
fcompl
push
sub
das
add
arpl
mov
or
push
pop
push
aam
ljmp
push
mov
or
enter
rcr
mov
roll
sbb
repnz
mov
add
fldenv
into
add
mov
inc
or
cmpsl
stc
or
call
fiadds
idivb
xor
call
rcrl
cmp
lret
loop
adc
ds
or
outsb
xlat
stos
mov
movsl
cmp
cltd
loop
into
and
jmp
out
orps
outsl
lcall
data16
or
mov
sub
int
cmp
cmp
cmpsb
pop
push
sarb
out
jae
lods
push
jns
lea
xor
push
scas
cmpsl
cltd
aaa
prefetchwt1
sub
cwtl
leave
cmp
xchg
jno
sub
movsb
std
repnz
lret
out
shrb
adc
lods
pop
add
aas
jmp
add
lea
or
lcallw
orl
xor
jae
fbstp
in
sub
test
dec
cmp
cli
rorl
cmp
jmp
jl
mull
push
pushf
into
pop
xor
lret
jns
loopne
insb
mov
add
mov
shlb
jmp
testb
out
dec
xchg
addl
mov
xchg
scas
jl
mov
push
cli
jns
cmp
pop
jge
insb
in
pop
stos
mov
sbb
xchg
pushf
pop
js
mov
push
dec
xchg
inc
cs
ret
enter
or
add
dec
testl
xor
flds
jmp
dec
rcll
test
fimuls
xor
and
jl
sub
cmpsl
xchg
scas
movsl
mov
dec
xor
xor
pop
roll
dec
mov
je
call
ret
in
out
and
push
lds
sbb
and
pop
dec
in
mov
or
jmp
xchg
sti
jg
sbb
dec
mov
cmp
call
aas
sub
dec
sarb
jne
popf
sub
out
out
xchg
test
addr16
data16
insl
mov
ret
adc
jnp
mov
pop
movsb
je
or
jmp
call
xor
cmp
pop
push
ret
adc
imul
pop
imul
and
mov
adc
and
pop
mov
shrl
inc
jp
xor
mov
int
sbbl
cli
rclb
xchg
scas
pop
cwtl
rclb
cwtl
test
rcrb
xchg
ja
cmp
mov
inc
push
xorl
push
movsb
pop
lahf
rcrl
mov
or
sub
ds
fstpl
and
mov
inc
loope
in
xor
inc
jnp
mov
rclb
mov
mov
cmpsl
xchg
stos
cmpsl
in
call
mov
mov
arpl
out
out
xor
jecxz
lock
cmp
dec
out
outsb
fdivrl
adc
int
pop
mov
push
pop
out
push
push
or
imul
add
push
mov
sbb
std
leave
xor
daa
lds
loope
mov
xchg
popf
imul
dec
test
cwtl
cwtl
push
pusha
push
push
adcb
stc
cs
jge
add
pop
rcrl
and
test
cltd
fildl
jg
mov
loop
enter
jle
out
xchg
mov
aam
jmp
sub
inc
ret
mov
nop
dec
stos
mov
iret
fnstcw
jmp
pop
pop
push
fstpt
lcall
xor
es
int3
jb
outsb
js
rcll
fisubrl
push
lcall
popa
into
adc
pushf
xchg
inc
rorl
jae
stc
jbe
cmp
xchg
in
movl
adc
sub
imul
push
cli
mov
dec
daa
mov
sbb
insb
xor
lods
aam
mov
and
fcomps
lods
lea
repz
shl
jns
add
and
and
cwtl
nop
call
and
inc
jmp
push
testl
arpl
call
push
imul
jmp
and
sahf
loopne
imulb
pop
mov
mov
insb
sub
and
sti
jge
mov
loopne
in
les
out
es
lods
xchg
hlt
push
pushf
add
lret
mov
and
xor
mov
je
iret
mov
loopne
mov
push
lahf
insl
stc
stos
int3
fcmovb
clc
movsb
jl
stos
das
mov
pop
imul
pop
stos
mov
push
rorb
lds
lds
call
push
outsl
push
pusha
pop
jno
mov
mov
push
rcrb
dec
sbb
jns
dec
fadd
pop
add
inc
es
dec
rclb
and
and
popf
inc
jge
xchg
fwait
xchg
push
mov
push
jg
xor
xor
ds
sub
iret
inc
add
push
inc
stos
fdivs
sar
les
dec
shll
adc
adc
insb
mov
addl
push
push
addr16
das
xchg
out
popf
hlt
push
sub
add
popf
fiaddl
sub
jb
inc
push
sbb
lea
xchg
das
adc
jmp
fiadds
sub
sti
mov
inc
and
xor
out
loop
add
sub
scas
xchg
mov
mov
inc
add
mov
pop
adc
adc
mov
mov
xchg
mov
and
into
stos
push
inc
inc
ret
xchg
xchg
cwtl
xchg
fadd
rcrb
leave
inc
jmp
mov
incb
sub
inc
cltd
test
enter
adc
fcomps
ja,pt
sbb
pop
dec
xchg
shrb
rorl
jle
and
jne
push
pop
cmp
sub
ss
stc
push
add
mov
mov
aad
cli
xor
rorb
push
sub
mov
push
leave
out
ja
xchg
xor
popf
rcl
ret
mov
dec
inc
stos
loope
jno
aam
jmp
dec
add
xor
pop
popf
pop
aaa
sbb
xchg
aad
dec
cmpb
sbb
into
lods
mov
aam
addr16
mov
cmp
inc
xlat
ret
cmp
jmp
push
dec
daa
fyl2xp1
mov
push
ja
lock
in
divl
rcl
xor
or
cmp
inc
add
test
fs
lahf
lahf
sbb
fiadds
shll
dec
add
mov
xchg
jg
mov
sbb
mov
or
stc
xor
leave
and
xorb
aad
andl
repz
xchg
mov
scas
cmp
sbb
movsb
xor
mov
lods
dec
inc
test
dec
aam
push
leave
into
mov
fsts
test
xchg
pop
loope
lds
pop
imul
iret
dec
push
adc
dec
inc
int3
cmpl
xor
jno
movsb
leave
pop
xchg
stos
lods
scas
jp
cmp
testl
ja
mov
add
in
push
lahf
fildl
sbb
jmp
push
jecxz
dec
ja
ljmp
lods
into
movsb
push
leave
fstl
pop
icebp
lock
mov
pop
sbbl
sub
out
stc
xlat
jbe
lret
ret
lcall
out
push
mov
inc
mov
xchg
test
mov
jecxz
fnstsw
insl
adc
imul
shll
dec
mov
cmc
test
aaa
mov
in
cld
mov
sbbb
movsb
push
andb
mov
fwait
jmp
mov
fstl
cmpsl
sub
xchg
sub
daa
in
xchg
aaa
shll
inc
mov
lret
mov
lea
fisubl
shlb
adc
adc
clc
dec
addb
inc
mov
pop
fwait
jmp
inc
mov
add
adc
cmp
push
and
lret
push
movups
push
aad
inc
jbe
cltd
sbb
sub
lcall
add
loop
mov
movsb
jle
int3
ss
pop
bound
mov
scas
scas
mov
pop
jb
jns
mov
xor
mov
sahf
or
aam
inc
call
cmp
inc
pop
fnstenv
xchg
mov
cmp
mov
mov
mov
pop
pop
adc
call
or
fs
rorb
addr16
repz
cmp
loope
sahf
mov
sti
xchg
jg
pop
cli
leave
int3
data16
mov
lret
mov
add
and
frstor
inc
sub
add
mov
xlat
jo
and
push
inc
xor
push
mov
xchg
adcl
popa
add
hlt
xchg
lea
dec
pushf
cmp
and
push
das
mov
test
cli
cmpsl
adc
push
sub
sbbl
cltd
lods
daa
dec
mov
lahf
mov
cmp
dec
out
inc
xor
fimuls
push
mov
pushf
fnsave
lret
mov
adc
cli
mov
shlb
mov
ret
adc
mov
or
mov
push
sbb
shr
fisubrs
inc
xor
xchg
pop
inc
test
test
inc
sub
gs
jnp
aaa
or
adcb
test
outsl
dec
lock
and
dec
test
add
add
leave
testb
mov
cmc
daa
add
mov
inc
xor
insb
sub
insb
sub
xlat
repz
lea
daa
popl
imul
inc
or
das
iret
xor
andl
pop
sbb
les
into
stos
add
stos
adc
addb
fisttpll
xchg
pushf
mov
cmp
lods
xor
xlat
xor
jg
fistps
pop
loopne
mov
lret
ficoms
lods
test
cli
adc
dec
add
lret
into
push
mov
cmp
dec
add
jae
xchg
inc
sti
nop
out
mov
aad
xchg
test
jnp
aaa
jae
jns
insl
cmp
mov
add
jo
mov
dec
mov
stos
sub
inc
outsb
jbe
out
fnsave
ret
dec
and
lds
mov
dec
mov
pop
fwait
or
xchg
jo
adc
or
jmp
pop
insb
xor
mov
mov
mov
inc
aam
or
pusha
mov
shll
pop
rcrb
aam
and
jns
lods
into
inc
mov
pop
xchg
push
inc
xchg
and
inc
insl
mov
fwait
push
inc
add
push
daa
jb
gs
pop
adc
bound
loopne
incb
scas
and
mov
lds
movsl
pushf
ror
arpl
lahf
subb
fwait
inc
mov
add
mov
sbb
or
mov
cmp
idivl
fildll
adc
and
xchg
xor
and
lret
sub
int
jne
out
cli
jg
hlt
cmp
inc
jne
das
pop
and
xlat
sub
je
cmp
les
pushf
hlt
mov
mov
mov
out
cmp
in
shll
push
call
dec
loop
stos
sbb
movsl
imul
mov
jmp
pop
add
xor
adc
push
add
lahf
dec
insl
add
mov
pop
pop
sahf
fistpll
sbb
sti
push
clc
mov
les
xchg
xor
ljmp
pop
pop
aas
in
inc
movsb
pop
mov
dec
adc
in
xor
sbb
insb
addr16
sbb
adc
cltd
sbb
jge
pop
cmp
aam
xchg
dec
out
inc
mov
sub
stos
repz
fstl
das
pushf
sbb
and
add
cli
mov
neg
cmc
cwtl
inc
sub
aas
insb
xor
mov
insb
fnstsw
shll
push
scas
sub
cmpsl
or
popf
bound
aas
in
imul
mov
cs
lods
cmpsb
adc
mov
push
sub
insl
setb
pushf
dec
lods
call
sub
lahf
pop
mov
dec
mov
shr
push
andl
test
scas
loopne
xor
shrl
mov
dec
and
and
mov
jbe
pusha
fstpl
fistpl
or
outsl
ja
pusha
in
xchg
gs
jmp
push
sbb
in
movsl
cmp
es
sub
clc
adc
mov
fcoms
jmp
es
out
nop
enter
jns
dec
cmc
mov
mov
aam
dec
cmpsb
inc
shlb
xlat
xor
ss
popa
lcall
xchg
nop
xchg
mov
fsubs
jge
mov
loope
xchg
jnp
divb
shlb
cmp
in
test
or
sbb
test
repz
in
in
testl
bound
jge
jle
mov
push
cmp
imul
das
mov
lea
ja
std
enter
fldcw
into
dec
cmc
xchg
dec
cmp
pusha
loope
xor
mov
xchg
loopne
or
out
mov
inc
mov
outsb
jge
sar
mov
data16
je
adc
xchg
hlt
dec
dec
and
clc
fcmovb
outsb
icebp
and
push
iret
test
orl
sub
ficoms
lahf
loopne
fildl
mov
jbe
std
data16
dec
clc
test
or
sti
dec
jb
repnz
out
pop
inc
sbb
push
lds
xor
idivb
inc
das
lret
inc
sbb
cmp
mov
scas
or
jg
add
mov
cmpsl
out
xchg
dec
xor
cwtl
xchg
repz
lods
inc
mov
repnz
or
sahf
dec
cmp
xor
jecxz
ret
loopne
repnz
push
dec
and
div
shlb
movsb
jno
pushf
inc
or
sub
xlat
mov
mov
stos
xchg
mov
inc
insw
cwtl
test
push
dec
mov
cltd
dec
and
dec
scas
pop
les
sub
xchg
jo
xchg
inc
mov
dec
cmp
pop
sbb
inc
divl
sti
or
mov
mov
inc
loopne
lods
lahf
sbb
push
cmp
mov
pop
andl
push
in
pop
sbb
sub
dec
jle
in
dec
inc
lahf
push
xchg
xor
inc
lret
lahf
inc
in
leave
dec
testl
sbb
rolb
repz
shlb
adc
jle
mov
fsubrl
sub
pop
fistl
xchg
xchg
fisttpl
mov
sub
stos
in
cld
pop
lret
adc
jbe
dec
or
cmp
jge
lds
jge
add
je
ret
test
cmp
jmp
sbb
jle
xor
inc
sub
cwtl
and
or
sbb
push
gs
adc
stc
int3
adc
aaa
xchg
jbe
loopne
jae
addb
push
repnz
ss
inc
dec
ljmp
gs
inc
pop
dec
lock
addl
in
notl
loopne
mov
scas
popa
push
movsl
mov
mov
loope
inc
add
call
in
mov
cmp
sbb
in
insb
mov
sub
lea
xor
xchg
xchg
scas
add
testl
and
push
cmp
addl
shl
fldenv
xor
sub
insb
scas
xchg
jbe
pop
pop
in
dec
jnp
pop
fildll
ror
fisubl
pop
test
xchg
dec
cmp
lods
out
and
add
dec
add
xor
test
adc
xor
aaa
dec
sbb
push
mov
aad
mov
enter
shll
iret
xchg
xchg
push
inc
rolb
cmp
orl
or
mov
mov
pusha
cmpl
jne
es
inc
xlat
jne
into
iret
fadd
enter
add
loop
rcll
sbb
pop
push
scas
outsb
lods
or
cmp
clc
loopne
js
scas
add
mov
mov
movsb
cmp
ret
fsubl
mov
mov
sub
testl
xor
cmp
mov
dec
insl
push
sub
push
pop
stos
or
mov
outsl
adc
mov
dec
aad
fcoms
push
xlat
jne
jg
std
or
mov
ffree
jmp
pop
loopne
ljmp
cmp
push
pop
sub
fnstenv
adc
adc
cld
inc
mov
mov
pop
inc
mov
push
pop
mov
mov
daa
sub
out
sbb
xchg
sub
ljmp
pushf
cmp
sub
pop
call
in
enter
lahf
fwait
pusha
mov
lds
cmpsb
rclb
mov
mov
xchg
cltd
jnp
xor
jno
jge
xchg
fisttpll
push
sti
sbb
xchg
mov
xor
into
pushf
imul
rolb
jnp
adc
add
jnp
push
imul
fst
je
iret
movsl
or
adc
xor
es
and
shl
sti
dec
mov
roll
in
cmp
add
lahf
cli
pop
push
push
rorb
scas
xor
fsubs
cld
sub
sub
pop
mov
jl
sbb
push
jl
ret
outsb
pop
sub
xor
std
add
out
adc
xchg
cmp
sbb
sub
push
xchg
jne
test
movsb
cmp
insl
mov
out
ja
scas
js
pusha
and
out
and
inc
lcall
cmp
jns
push
fisubrs
iret
push
test
icebp
push
stos
imul
adc
loop
int
xor
mov
inc
push
loope
fwait
cmpsb
or
les
xchg
subb
int3
nop
adc
adc
lea
lods
arpl
push
dec
aam
stos
nop
cli
gs
in
jge
ljmp
dec
xchg
test
and
es
add
jns
lods
sbb
mov
xchg
inc
mov
cmpsb
in
rcrb
movsl
mov
inc
sub
sbb
jmp
cmp
rorb
aas
pop
xchg
sub
mov
dec
sbb
cmp
dec
out
or
mov
mov
sarb
shll
add
testb
ja
xor
ja
sub
adc
dec
or
fists
test
gs
xchg
adc
add
subl
mov
lahf
push
push
imul
iret
add
xor
pop
mov
jnp
mov
dec
push
enter
push
leave
divl
mov
dec
pop
iret
fdivl
lock
addl
arpl
stos
pop
push
hlt
mov
lods
nop
aad
adcl
mov
xlat
fwait
add
and
in
rcrl
aam
pop
ja
sub
mov
loopne
cmp
mov
pop
dec
lcall
rol
scas
rclb
enter
sbb
xor
dec
xor
sbb
mov
shrb
adc
jp
and
pop
lret
fildl
insl
lds
fs
stos
cmpsb
jg
jle
add
sub
add
fcomps
jno
cli
lods
out
and
mov
mov
mov
mov
push
aam
movsb
sub
cmpsl
mov
outsb
repz
int
or
mov
jbe
mov
cmc
inc
mov
inc
push
dec
loopne
push
call
clc
xchg
push
outsb
adc
pop
jp
mov
mov
xchg
dec
add
xor
and
mov
les
test
rolb
mov
xchg
mov
les
inc
dec
loope
lods
rol
loop
cmpl
outsb
sahf
les
lods
jge
adc
outsb
xchg
xchg
cs
test
out
test
adc
xchg
frstor
mov
roll
bsr
cmp
sbb
outsb
iret
push
xor
xor
test
mov
pop
add
or
push
jge
pop
fnstenv
sahf
xchg
insl
pop
aad
fdivs
outsb
out
imul
arpl
rcr
jg
jmp
out
popf
dec
aad
pop
mov
int3
lock
in
icebp
lret
and
loopne
les
xlat
test
xchg
add
leave
jecxz
fistpl
mov
jbe
mov
pop
jle
call
or
pop
sub
xor
jl
ret
push
hlt
fs
lret
xchg
mov
and
cmp
mov
push
add
jnp
mov
xlat
mov
or
in
shll
aad
repz
mov
scas
cmp
push
cmp
sarl
les
dec
dec
or
inc
test
scas
add
lahf
pop
js
sub
insb
fisubs
and
leave
icebp
and
mov
and
xor
inc
xchg
cmp
fnsave
push
ljmp
and
xor
mov
mov
sub
outsl
jge
gs
push
adc
mov
in
out
jl
cmp
xchg
fs
enter
sub
xor
testb
subl
lcall
cli
add
mov
insb
in
dec
aam
stc
mov
aaa
test
mov
cmpsb
ljmp
aad
dec
sub
sub
or
and
icebp
inc
dec
and
les
mov
aas
aam
push
mov
fldenv
lock
lds
dec
out
outsb
mov
fdivs
out
cltd
mov
aam
sbb
stos
cld
adc
xchg
push
cs
pop
cltd
jmp
jl
cld
xchg
xchg
cmp
fadds
cwtl
mov
out
push
aam
jno
or
jb
mov
cmp
jno
ret
ffree
cs
push
mov
add
aaa
jb
xor
jnp
cmpsb
push
adc
mov
ds
mov
mov
xlat
in
sub
repnz
xchg
repz
cli
pop
pop
mov
mov
cmp
rcll
test
pop
lods
test
mov
inc
jne
imul
cmp
in
les
dec
add
xchg
nop
xchg
ss
in
jecxz
cmc
in
mov
or
or
dec
mov
out
and
inc
push
jle
add
inc
aaa
add
into
jg
xor
xchg
gs
jae
data16
inc
fcoml
mov
mov
fwait
aas
xor
mov
and
lsl
cmc
sti
and
and
pop
std
xchg
jl
fucom
into
sti
push
sub
nop
fisttpl
push
jae
jg
adc
mov
xchg
icebp
fs
mull
fiadds
inc
movsb
and
cmpsb
xor
cmp
pop
jnp
cmpb
lret
inc
call
mov
mov
mov
dec
sbb
iret
pusha
mov
repnz
lahf
cmpsl
sub
call
and
push
push
mov
xor
add
lods
and
loop
lds
les
in
dec
sbb
cmp
jle
bound
mov
ret
sahf
cmp
mov
cmpsb
lds
mov
mov
inc
shlb
mov
push
xchg
lods
cmpb
mov
cltd
or
xchg
leave
adc
insb
sub
pop
out
jge
jno
lock
sti
in
icebp
push
lret
cmp
sahf
and
outsb
std
std
and
cmc
ljmp
scas
mov
enter
fsts
fnsave
in
cmp
mov
adc
gs
dec
fdiv
vpunpcklbw
loope
jno
call
scas
repnz
xchg
push
xor
cld
push
das
addr16
mov
test
rol
sub
insl
adc
inc
mov
cwtl
idivl
loop
push
loopne
clc
or
sbb
in
sbb
inc
and
lock
mov
imul
dec
iret
lock
es
pop
inc
in
jno
cmp
pop
data16
lods
faddl
div
int3
jae
imul
cmpsb
adc
cmp
nop
push
and
push
cmp
push
or
loop
adc
push
cli
std
mov
repz
pop
add
mov
jae
enter
inc
test
push
sahf
in
mov
dec
add
pop
ljmp
dec
in
sub
pop
adc
push
push
fldenv
dec
mov
ljmp
popa
mov
add
sbb
mov
rcrl
xor
popa
in
mov
push
loope
or
int
sbbl
xlat
rorb
sbb
data16
mov
dec
xorb
push
sub
dec
sbb
mov
and
cmpsl
dec
push
ja
repnz
push
pop
out
in
jne
pop
das
push
sub
imul
mov
mov
dec
shlb
dec
mov
int
call
aas
xchg
mov
mov
out
nop
scas
add
jb
inc
xlat
or
repz
cmp
push
cltd
testl
outsl
inc
cmp
xchg
pop
push
xor
jmp
fnstcw
aam
ss
repz
adc
mov
xor
fcomps
ss
je
scas
pop
sub
shlb
jg
mov
repz
sub
dec
lea
popa
mov
out
mov
sbb
mov
je
pusha
dec
xor
xchg
pop
lret
es
sub
jns
out
cmpsl
test
xor
add
cmp
cmp
stos
xor
fdiv
or
jmp
dec
cmc
inc
test
sbb
popa
ja
cmp
push
cmpsl
dec
ror
cmp
pop
jge
in
imul
ds
cltd
js
lds
roll
sahf
mov
lds
sub
in
and
cwtl
icebp
negb
adc
inc
daa
scas
pusha
mov
cmc
fdivl
xor
cld
mov
ret
jle
pushl
fwait
loope
and
jmp
movsb
jecxz
sbb
adc
and
jno
into
loopne
mov
aad
mov
dec
lret
mov
push
inc
push
les
dec
adc
and
in
popf
scas
shrl
pop
xchg
and
xor
inc
xchg
sbbb
mov
cmp
jo
xchg
lock
rorb
iret
ret
cli
cmpsb
sub
ds
andb
dec
push
sbb
enter
into
mov
pop
adc
fwait
xor
fwait
cmp
lods
mov
ljmp
xchg
fsubl
xlat
jmp
mov
rcrb
aad
ret
pop
mov
cmp
stos
mov
jne
pop
pop
cld
mov
sub
jg
pop
adc
subl
dec
stos
push
pop
sbb
lcall
data16
popa
popa
dec
mov
aaa
daa
aas
aam
mov
mov
lcall
cli
jbe
jl
inc
sbb
mov
or
pushf
es
dec
out
push
imul
jl
movsb
scas
add
xchg
mov
xlat
orb
jnp
dec
lcall
jecxz
jno
push
iret
popf
daa
aad
adc
das
and
enter
daa
mov
adc
mov
in
repz
add
nop
test
sbb
or
and
push
adc
or
add
mov
mov
js
push
cwtl
adc
jg
mov
lcall
jl
adc
add
or
mov
inc
push
addr16
movsl
xor
or
in
imul
clc
cli
pop
push
dec
mov
push
dec
imul
addl
les
dec
addr16
nop
add
dec
or
cmp
cmp
adc
pop
test
das
arpl
ret
shrb
or
pop
in
mov
cltd
loope
and
movsl
cmp
or
mov
dec
push
fstps
hlt
mov
dec
sbb
lds
jp
paddsw
xchg
mov
aad
mov
fucom
xor
or
repnz
aas
sbb
into
xchg
inc
bound
fsts
jo
add
push
ss
popf
add
mov
pusha
incb
mov
enter
outsb
dec
mov
push
mov
loopne
in
bnd
jae
cltd
push
mov
jno
push
cmp
cwtl
push
or
add
pop
sub
shl
or
push
mov
add
pop
test
call
out
test
rolb
shl
scas
das
js
jg
lock
adc
xlat
pop
add
or
fs
cli
inc
sbb
inc
lds
push
mov
scas
test
imul
cmp
and
rcl
aas
js
push
mov
pop
call
clc
push
push
dec
push
sbb
call
mov
cmp
jg
cwtl
sahf
push
popl
enter
in
fwait
sub
adc
data16
pop
clc
loop
je
adc
das
sbb
push
pop
mov
push
push
sahf
cmp
sbbl
leave
insl
add
fcmovne
ss
hlt
pop
push
pop
push
adc
pop
mov
inc
or
pop
mov
data16
sbb
movsb
mov
mov
inc
xor
xlat
add
adc
ja
jnp
pop
adc
mov
fcomps
fcos
jecxz
loopne
add
xchg
mov
inc
pushf
xchg
push
lock
in
push
lea
cmpsb
add
xchg
xchg
xchg
fcoms
pop
icebp
aas
mov
inc
int
out
ds
pop
jnp
mov
sub
out
jl
and
lds
pop
pop
insb
ja
inc
rclb
in
shrl
jo
jae
pop
mov
pop
jne
push
lret
cmp
xchg
mov
jo
mov
out
lahf
mov
inc
fwait
mov
jne
mov
cmp
sahf
adc
shll
xor
push
lret
outsl
push
pop
sbb
xchg
ljmp
insl
ljmp
insl
js
mov
jg
xor
aam
stos
mov
cmpsl
xchg
inc
cmp
xchg
dec
jne
cmp
fnstsw
fiaddl
cmp
test
xchg
cli
lea
mov
pop
loop
xchg
pop
push
xchg
adc
mov
xchg
out
mov
sbb
les
cltd
sub
lods
mov
mov
in
test
clc
inc
xor
es
ficompl
test
inc
inc
pop
popf
mov
sbb
fstpl
dec
lea
enter
and
movsl
cmp
xor
movsb
push
dec
mov
push
push
icebp
das
sub
sbb
mov
lahf
dec
cmpsl
out
dec
mov
jnp
outsb
xchg
push
mov
addr16
pop
or
mov
incb
inc
mulb
gs
pop
data16
xchg
dec
faddl
orl
fdivrp
mov
sarl
adc
iret
test
sbb
repz
sub
rcrb
or
fwait
lods
out
mov
pop
std
pop
dec
xor
lock
stc
addb
jmp
inc
jb
mov
ret
push
js
sbb
mov
pushf
fldcw
pop
sahf
cmp
dec
mov
xlat
repnz
xchg
mov
inc
xor
in
sahf
xor
or
lea
xor
push
rol
jmp
mov
xor
dec
bnd
into
pop
push
xchg
std
and
mov
fwait
das
imul
add
push
test
jae
add
mov
mov
repnz
insb
stos
packuswb
sub
out
mov
mul
push
in
lcall
scas
cmp
fisubrl
adc
in
test
add
push
les
sub
ja
pop
sbbl
pop
and
mov
sub
sub
push
ds
adc
mov
xchg
fisttps
ljmp
mov
adc
sbb
stos
pushf
adc
push
fwait
nop
out
shrb
add
xor
jo
inc
xor
sbb
loope
into
push
es
mov
jnp
imul
mov
sti
fldenv
inc
xchg
add
movsb
ja
mov
push
lea
inc
inc
loope
and
cmp
sbb
je
push
out
scas
jbe
shr
xor
mov
sarl
es
js
lret
cmp
pop
lret
dec
mov
jbe
scas
and
in
dec
dec
gs
cmp
cmp
mov
sub
inc
jle
sbb
out
jl
outsb
cmp
add
loope
lock
jb
push
adc
push
xlat
test
in
jno
mov
int
and
icebp
jecxz
test
aaa
inc
or
inc
cmpsb
mov
push
or
jb
adc
push
add
cmp
mov
mov
imul
leave
into
pop
sub
and
sbb
popf
addr16
push
pop
add
aam
mov
roll
dec
xchg
dec
jne
out
push
mov
xor
insb
xchg
inc
lods
punpckldq
clc
cli
xchg
repz
shrl
push
pop
inc
mov
dec
int3
mov
sub
mov
cmp
repz
cmc
mov
xor
dec
out
iret
lock
std
mov
adc
mov
icebp
imull
sub
lahf
sub
jle
and
ljmp
repnz
fadds
cmc
xor
mov
mov
outsl
jecxz
iret
push
and
aas
jb
jge
inc
mov
mov
adc
push
in
popf
imul
std
mov
bound
mov
outsb
bound
sbb
pop
gs
jge
int3
lock
pushf
add
cmp
cmp
iret
xor
roll
and
aam
mov
cmpsl
mov
jo
ja
jecxz
adc
xor
sbb
pop
xor
and
xor
or
jg
inc
and
and
or
in
xchg
push
pop
cmp
fwait
das
incl
je
das
ret
push
adc
dec
and
fcompl
insl
cmp
in
xchg
loope
jp
or
nop
icebp
xor
jns
pop
xchg
loop
mov
cmc
shll
clc
in
popf
ja
nop
inc
shlb
pop
jle
push
movsb
mov
add
cwtl
and
fsubr
stos
roll
mov
mov
lcall
and
push
push
scas
pop
out
lds
mov
mov
or
test
push
or
xchg
add
shll
adc
and
arpl
adc
fsubs
jmp
cld
pop
aam
movsb
adc
sbb
faddl
add
sub
or
and
sbb
test
loop
loop
int3
lcall
neg
push
push
shl
xchg
cwtl
movsb
cmpsl
push
je
fmull
cmp
jns
jmp
in
fldcw
mov
aad
lds
push
es
rolb
jg
repnz
shrl
out
dec
add
mov
stc
push
dec
mov
pop
outsb
bound
fdivl
fbld
sub
lods
sub
xor
out
pop
mov
add
xor
mov
inc
xchg
adc
cld
push
or
mov
inc
xchg
dec
jp
sbb
negb
mov
ret
negb
test
stc
cmp
cmp
jo
xchg
sbbb
outsl
int3
mov
mov
add
jo
xor
imul
push
sub
sbb
into
and
jg
mov
out
das
jbe
std
xchg
lods
mov
andb
inc
xlat
orl
or
add
push
cmp
add
jne
ret
dec
ret
sbb
xor
aad
lahf
jp
lods
std
add
jmp
int3
pop
mov
inc
xchg
jbe
cmc
push
ret
movsb
push
iret
ret
add
int3
adc
mov
aas
add
mov
cmp
das
or
lahf
loope
jne
sub
dec
xchg
dec
fnstsw
call
sub
and
jbe
or
sub
out
imul
mov
fmulp
and
xor
mov
hlt
out
dec
mov
mov
arpl
or
cs
add
push
xor
adc
mov
jle
add
rorl
jge
inc
daa
add
cmp
arpl
js
inc
fcmovnbe
mov
pop
mov
mov
pop
nop
scas
inc
xlat
sbb
xchg
lret
xchg
add
xchg
mov
xchg
sahf
in
or
xchg
fucomi
sarl
add
cmp
mov
sbb
out
je
sbb
loope
push
lds
testb
jp
mov
stc
push
mov
call
push
pop
idivb
idivl
cmp
sarl
test
fisttpll
xor
jge
push
sbb
jl
stos
push
popl
lock
loope
fldl
leave
jmp
mov
mov
dec
roll
and
ror
xor
lahf
mov
aas
stos
mov
fs
adc
pushf
jnp
xchg
nop
dec
add
incb
xchg
insb
add
and
movb
call
mov
sbbb
mov
test
cld
push
movsl
adc
imul
pop
aam
xchg
hlt
es
push
jbe
imul
mov
negl
push
lods
mov
and
mov
jge
mov
mov
mov
test
pop
outsb
push
bnd
jl
xor
data16
shll
inc
or
sub
subl
push
sub
and
mov
scas
sarl
in
sbb
in
std
or
xchg
mov
sti
cmp
adc
test
push
and
out
arpl
enter
dec
and
pop
dec
cli
push
stc
cmc
lahf
inc
movsl
iret
push
insb
mov
addr16
mov
jge
push
jecxz
ret
test
or
add
movzwl
or
adc
cmc
or
dec
out
dec
sarb
mov
fnstsw
mov
sbb
aaa
popa
cs
les
and
mov
adc
outsl
out
or
sub
rclb
aaa
inc
cmpsb
sub
cmp
cld
dec
test
xor
xchg
iret
ret
add
inc
mov
mov
cmp
daa
mov
mov
xchg
aas
xor
insl
sub
fsubp
loop
inc
imul
xor
xchg
movsb
push
jg
ficoml
cmp
jb
lods
movsl
in
adc
adc
ret
mov
jae
jecxz
scas
xchg
lahf
arpl
cld
les
dec
jp
push
bnd
xor
nop
in
mov
cmpsb
add
enter
pop
fldt
pop
xor
mov
xchg
mov
push
lcall
cltd
mov
push
push
dec
lock
popf
std
leave
xlat
inc
subps
dec
repz
jmp
cli
push
stc
mov
jp
and
cmp
out
pushl
rclb
mov
xchg
cmpl
test
adc
mov
inc
sbb
dec
fnstsw
pop
cmp
lds
mov
insl
push
mov
mov
lods
xor
dec
sub
add
jae
sbb
js
or
or
sbb
pop
jo
arpl
lods
and
jle
das
sbb
test
stos
rclb
idivl
test
sbb
sub
inc
inc
pop
mulb
cmpsl
adc
xchg
jl
sti
rcrb
sarb
lods
adc
ja
idiv
stos
dec
mov
sub
iret
nop
xchg
xor
mov
xchg
pop
outsb
js
test
pushf
xor
sub
pop
loop
movsb
scas
popa
jle
negb
les
xchg
xor
jge
out
movsb
pop
cmp
imul
ret
lock
pop
sti
pop
aaa
aas
cmp
xchg
jnp
inc
mov
pop
inc
xor
mov
xlat
push
pop
fwait
lret
fwait
lds
pusha
stos
push
inc
fwait
jne
mov
mov
mov
mov
std
loopne
leave
insl
cmp
mov
sbb
fldt
dec
lret
xor
jp
in
cmc
insb
loop
aaa
imul
adc
fstpt
mov
jno
ja
and
cs
fildl
pusha
mov
out
test
xchg
loop
fimuls
cmc
inc
push
idivb
sahf
or
dec
dec
aaa
repnz
aad
push
out
lea
clc
pop
inc
pushf
push
xchg
inc
and
test
add
push
xorl
movsl
jg
fdivrs
stos
pop
enter
add
sbb
fisubrs
in
push
and
mov
and
aam
or
adc
cmp
dec
sbb
leave
sbb
add
hlt
adc
and
xor
xor
jmp
sub
cld
adc
jecxz
xchg
sub
jmp
xor
mov
repz
fwait
add
mov
arpl
out
addr16
cmp
lea
leave
dec
mov
cltd
xor
push
or
xchg
fs
xchg
fs
sahf
fisubrl
and
int
dec
adc
sub
xor
and
cmp
and
pop
jno
adc
xorl
test
cmp
xchg
daa
aaa
gs
rcll
leave
sbb
inc
xchg
sbb
mov
scas
out
lods
pop
or
outsl
test
rolb
ja
aaa
jg
jp
or
push
mov
int
push
adc
std
das
cmp
popf
adc
pop
cmp
dec
test
pop
pop
push
lcall
xlat
mov
fimull
js
xchg
sbb
cli
lret
filds
xlat
mov
call
mov
push
in
push
jns
push
mov
into
or
jne
xchg
push
xchg
popf
ljmp
pop
mov
cmc
and
addr16
lret
jbe
lea
and
inc
sbb
out
mov
pusha
jae,pn
pop
pop
cmp
leave
leave
mov
and
xchg
das
cmp
mov
cmpsb
inc
das
ljmp
mov
xor
mov
in
shlb
rclb
mov
dec
sub
les
pop
imul
jle
dec
out
jae
push
fisubrl
scas
sbb
mov
sub
or
mov
or
cmpsb
int
ss
sbb
inc
jmp
add
pop
mov
mov
xchg
push
sub
cltd
push
sti
inc
adc
jne
dec
mov
pop
pushf
hlt
fisubrs
dec
mov
cs
mov
sti
dec
and
cld
and
incl
lods
dec
sti
adc
out
aam
inc
shrb
cld
push
push
xlat
aas
sahf
pop
xor
push
pop
xchg
xor
jne
xchg
lock
mov
mov
sbb
test
dec
orl
ret
sub
dec
mov
pop
lahf
jp
cmpsl
insb
test
ret
cltd
or
cmp
imul
cld
pushf
fidivl
fdivl
not
sbb
xchg
xchg
pop
jno
cld
pop
push
push
jle
push
ds
cmp
je
test
stos
dec
jo
flds
xor
inc
icebp
mov
lret
mov
aas
sub
scas
mov
stos
out
mov
out
inc
cmp
mov
mov
sbb
and
dec
mov
cld
mov
mov
enter
icebp
jl
jge
inc
ss
adc
jg
mov
jp
outsb
or
and
dec
iret
movsl
sti
lret
loopne
int3
or
and
jno
mov
js
imul
sub
ljmp
es
xor
nop
and
out
adc
sbb
cmp
cmpsb
mov
push
call
and
testb
bound
mov
xor
jo
jp
mov
ret
inc
push
popa
cmpsb
fwait
loopne
jp
jns
mov
push
out
push
xchg
mov
nop
in
inc
mov
mov
mov
sub
jecxz
fdivrl
gs
inc
std
cli
nop
and
pop
adc
cltd
sbb
popa
push
lds
mov
jle
add
filds
pop
jp
mov
gs
enter
sarb
movsb
sub
movsl
dec
fstps
pop
push
inc
or
stos
mov
adc
in
push
jg
dec
xchg
cmpsl
fidivrs
xor
in
aam
dec
mov
inc
das
movsl
mov
inc
loop
adc
jnp
les
cmp
mov
xchg
std
inc
pop
jb
sbb
test
cmc
mov
push
cli
sub
xor
stc
in
test
sbb
push
inc
sar
dec
sbb
dec
mov
xor
imul
pop
xchg
push
outsb
add
push
dec
clc
xchg
cmp
je
jo
adc
lock
ret
adc
cmp
andl
mov
and
xor
sub
in
imulb
xor
iret
xchg
inc
out
leave
les
mov
lds
mov
adc
push
adc
scas
leave
jno
rcrl
imul
hlt
and
mov
pop
lea
mov
stc
sbb
and
xchg
ret
test
dec
psubusb
push
or
jmp
push
stos
pop
push
shr
repz
ret
dec
cmp
js
inc
test
aaa
push
xchg
cmp
jbe
fwait
pusha
push
sbb
clc
jmp
xchg
stos
adc
add
dec
sar
inc
add
int
pop
lret
ss
add
sbb
loop
mov
dec
mov
mov
inc
pop
jle
lcall
fbld
test
pop
xor
jne
stos
fwait
jne
xchg
jne
rorl
nop
loope
push
js
dec
or
mov
push
aaa
jecxz
or
adc
dec
repz
jp
or
add
sub
xor
in
rcrb
cwtl
ret
jmp
call
xchg
xchg
xchg
movsb
popa
cmc
aaa
push
clc
or
dec
out
push
add
roll
aam
and
roll
dec
aaa
mov
sub
mov
adc
dec
mov
pop
push
sub
jns
cmpb
mov
cmp
test
jbe
aad
mov
cmp
cmp
dec
mov
or
mov
pop
or
shl
or
movnti
mov
or
cmp
insl
aaa
cltd
nop
push
js
out
or
bound
xchg
iret
mov
js
dec
mul
xlat
mov
jno
je
idiv
and
fistl
int
cs
fisubrl
shr
loopne
stc
iret
adc
inc
mov
pusha
iret
dec
and
dec
leave
xlat
cmp
jmp
or
movl
xor
xchg
test
ljmp
cltd
sbb
jg
adc
clc
enter
cltd
fdivrp
inc
and
or
sub
sti
stos
pop
mov
std
and
mov
push
push
js
adc
add
push
xchg
jne
mov
ret
or
sbb
addl
pop
mov
fnstsw
mov
xchg
cwtl
mov
push
and
mov
sub
popf
inc
or
jnp
xchg
sub
dec
in
pop
add
mov
mov
movsb
fists
and
sub
adc
in
pop
inc
fwait
lret
push
or
je
inc
lret
jne
mov
rcl
in
jp
and
and
dec
aad
into
in
adc
enter
scas
dec
pop
push
sahf
lahf
mov
mov
orb
into
aam
xchg
out
nop
fucomip
shll
push
xor
pusha
mov
sub
pop
and
xchg
and
aaa
stc
jnp
sbb
jge
arpl
mov
mov
inc
dec
inc
jo
xchg
mov
out
icebp
sub
repz
fwait
js
or
and
push
adc
mov
mov
in
fucomi
test
fnsave
testl
push
pop
mov
xlat
jae
aas
push
negb
cltd
jnp
testb
mov
js
sub
push
add
divl
push
inc
mov
rcr
mov
addr16
es
jnp
lcall
add
dec
xchg
out
sub
sub
mov
jg
fbld
mov
jne
or
fmul
icebp
pop
mov
fdivrs
test
fnstcw
stos
jmp
pop
dec
das
pop
lret
mov
jne
sahf
inc
je
dec
mov
decb
push
sahf
sbb
gs
cwtl
mov
lea
adc
inc
xorl
mov
add
xchg
and
rcll
popa
movsb
scas
stc
ffree
mov
add
shrb
fstpl
and
scas
push
dec
mov
insb
or
cli
lcall
dec
add
sub
add
call
or
imul
ljmp
cmpsb
sub
leave
cltd
cmp
mov
into
fsubrl
mov
inc
es
mov
xor
or
test
ljmp
insl
xchg
sub
sbb
jge
pop
test
or
add
rolb
cvtdq2ps
sbb
outsl
push
push
push
push
sbb
mov
aas
push
imul
mov
fs
out
in
sahf
xor
notb
imul
or
aas
pop
xor
xchg
xchg
cltd
mov
shl
push
je
mov
mov
insw
mov
int
addr16
mov
mov
cmpsb
mov
cmpsl
imul
cli
mov
gs
nop
push
in
jo
daa
push
push
jbe
jle
and
loop
add
dec
aam
mov
adc
push
gs
in
addr16
je
add
sub
inc
push
push
add
outsl
jns
inc
popf
clc
or
adc
adc
andb
les
jno
push
dec
outsl
dec
std
fsubr
mov
cmp
pusha
add
jne
stos
mov
clc
ficoml
repnz
push
or
lods
push
pusha
test
sub
or
cmpsl
dec
aam
xchg
iret
jbe
or
movl
xor
fsubr
fsubrs
pop
iret
adc
mov
sub
push
cmc
xchg
mov
push
add
pop
les
test
roll
jecxz
jmp
pop
repnz
mov
test
sbb
jne
pop
in
sbb
out
adc
mov
inc
mov
movsl
cmp
push
scas
cmp
rcrb
lret
push
fwait
mov
sub
jmp
mov
aaa
into
xor
aaa
jns
push
push
aam
in
pop
pop
jae
mov
push
mov
movsl
pop
jo
das
rolb
xchg
and
jae
or
inc
daa
sub
sbb
shll
jne
push
inc
push
in
xor
aad
add
bound
cmpxchg
or
gs
mov
mov
inc
notb
insb
mov
ljmp
xchg
pop
xchg
fwait
inc
add
negb
jno
add
jp
push
push
pop
bnd
sub
js
mov
cmp
ret
stc
jo
xlat
pop
mov
lea
add
pop
fcoms
out
enter
dec
aaa
fcoml
testl
xor
inc
sub
xchg
xchg
dec
xchg
xor
xchg
jne
sbb
push
outsb
repz
or
outsl
cld
and
xchg
push
lahf
js
sub
sub
cs
dec
jmp
iret
cmp
dec
ljmp
pop
into
xchg
out
pop
sbb
and
push
inc
xlat
arpl
xbegin
lahf
mov
inc
enter
dec
shlb
and
jnp
lahf
ja
push
mov
mov
sub
rcr
sar
pop
dec
sub
cs
lahf
arpl
int3
pop
adc
pushf
jnp
lea
jl
test
test
push
hlt
mov
or
hlt
adc
sub
fucom
clc
mov
cmp
push
sub
into
mov
add
stos
jmp
call
insl
dec
pop
in
and
ficoml
xchg
fmull
fsubrl
fsubrs
sbb
icebp
fidivl
mov
add
and
ja
mov
jecxz
lds
jnp
fwait
cld
aad
in
jb
icebp
in
in
cmp
adc
or
scas
lock
and
daa
mov
cli
xchg
enter
push
ljmp
scas
mov
and
cld
xor
mov
out
jmp
dec
jno
push
imul
frstor
movsb
adc
rcrl
aaa
movsb
insb
mov
cwtl
out
repnz
push
xchg
adc
hlt
pop
push
adc
sbbl
sub
push
aam
jo
orb
sub
cmp
push
scas
sub
ret
push
cwtl
stos
add
or
loop
lcall
xlat
adc
ret
and
sub
push
mov
inc
hlt
fsubrs
les
and
aaa
push
push
dec
into
icebp
mov
add
call
movsl
sub
mov
ficoml
cmp
sahf
xchg
push
in
stc
adc
je
pop
mov
hlt
sub
or
xchg
or
pop
and
sub
es
pop
jnp
push
jo
ds
mov
pop
in
jg
mov
rcl
dec
ret
mov
imul
pop
flds
inc
push
incb
xor
sub
sahf
ljmp
jno
or
or
mov
push
jnp
ljmp
rcr
xor
sub
or
inc
dec
sbb
mov
sub
clc
clc
lods
ficoms
cmpb
mov
andb
sbb
push
or
rorb
js
jae
fcomps
sbb
mov
ficomps
ret
das
dec
imul
pop
gs
dec
adc
or
push
fs
cmp
cmc
sbb
rclb
shll
lahf
inc
fsubr
loope
ret
cmp
ffreep
mov
fsubrl
push
add
dec
and
jcxz
and
pop
scas
adc
out
or
jge
inc
mov
scas
mov
loopne
icebp
bound
mov
or
popf
xor
imul
lods
ljmp
ss
add
mov
jg
mov
inc
cltd
je
lods
xchg
inc
icebp
inc
aaa
repnz
aas
push
jp
lds
flds
push
aaa
jg
sub
sbb
cmpsb
mov
lcall
rcrl
popf
sub
test
es
dec
lcall
adc
mov
std
in
mov
fwait
jecxz
je
cs
lods
outsl
mov
in
xchg
mov
icebp
rcrl
mov
lea
adc
aaa
popf
push
std
stos
cmp
and
fwait
std
pop
pop
stc
sahf
popf
lret
pop
mov
clc
xor
aaa
ljmp
mov
arpl
cmpsb
adc
push
les
scas
mov
aas
push
dec
cmp
test
in
jle,pn
out
lahf
int3
mov
jg
pop
sti
pop
add
mull
sbb
jae
sub
int
nop
mov
in
repz
dec
pop
sbb
jae
fst
scas
sub
mov
cmpsb
xor
jge
insl
popf
push
mov
push
out
pushf
sarb
mov
pop
cmpsl
xor
pop
push
lea
pop
je
movsl
daa
push
sbb
push
cmp
jecxz
mul
add
jle
dec
fwait
jl
std
mov
stos
arpl
inc
dec
sti
and
inc
jge
aam
iret
jno
mov
push
imul
mov
pop
je
cmp
xrelease
mov
loope
xor
nop
cmc
or
mov
out
mov
clc
mov
jge
mov
stos
into
mov
jbe
cmp
nop
cmp
icebp
add
pop
xor
add
mov
add
dec
and
and
cwtl
sbb
daa
data16
scas
inc
xchg
xchg
lcall
jbe
pop
xchg
test
sbb
mov
xchg
cmp
repz
mov
mov
test
subl
ss
ret
xor
or
push
and
sub
shrb
cld
mov
cli
mov
scas
dec
aam
and
jno
in
pop
jecxz
mov
xchg
dec
in
leave
cmp
inc
sub
mov
in
dec
push
js
sub
out
xor
rcrb
clc
pusha
loope
es
lds
je
dec
into
or
inc
jp
pusha
test
fisubl
mov
cmp
inc
inc
inc
or
inc
jg
inc
in
negl
jmp
test
loope
shlb
lods
cmp
xor
hlt
int
mov
shlb
loope
stos
pop
adcl
jmp
mov
repnz
xor
cmpsl
addb
popf
popa
in
lahf
pop
daa
imul
lcall
call
dec
addr16
xor
push
pop
lret
adc
inc
mov
push
dec
mov
inc
jecxz
lods
sti
hlt
jbe
rcll
out
inc
mov
adc
pushl
xchg
pop
aas
push
mov
inc
jns
call
cmp
add
fmul
jecxz
aaa
lret
outsl
xchg
rcr
out
xchg
jb
sub
add
fwait
arpl
repnz
mov
sbb
mov
inc
nop
fcomip
shll
inc
sbbb
mov
rolb
xlat
fdivp
aas
cltd
rcll
mov
cmp
sub
pop
xor
xchg
adc
cmp
rcr
jmp
jbe
sarl
out
js
jmp
mov
mov
test
out
xchg
jnp
push
hlt
jns
jnp
cmp
mov
and
movsb
imul
adc
mov
push
push
js
add
dec
dec
dec
xchg
mov
hlt
test
js
inc
mov
and
fisubrl
add
mov
and
cmp
jmp
xchg
ss
clc
inc
out
ret
pop
mov
pop
lds
clc
sahf
scas
data16
repnz
in
mov
pop
mull
lret
sbb
rorl
mov
pusha
aas
sahf
dec
or
mov
add
cmp
sub
push
das
mov
std
xchg
ljmp
pushf
push
sbb
outsl
mov
adc
mov
cmc
fsubr
int3
enter
fisttps
push
outsl
xchg
push
dec
jae
subl
add
inc
jmp
xlat
js
xor
mov
loopne
cmpsl
hlt
adc
int3
sarl
xchg
idiv
decl
ds
mov
pop
pop
inc
rol
mov
sbb
sub
inc
cli
jns
negb
lods
adc
cmpsl
or
pushl
jg
stc
pop
xor
daa
push
fsubrs
add
int3
cmp
fnstsw
sarl
test
notl
testl
sbb
daa
or
adcb
call
and
sahf
clc
push
mov
push
cmpsb
scas
pop
xchg
xchg
xchg
outsl
xchg
fisubl
loope
imul
loopne
cld
push
push
repnz
movsb
aad
pop
decb
xchg
push
or
mov
enter
ja
cmc
mov
sub
popa
sbb
mov
inc
ja
xor
cltd
pop
sub
xor
out
aam
inc
xchg
or
xchg
clc
ret
dec
mov
int
mov
sbb
test
push
lods
int
mov
minps
stos
test
das
xchg
daa
lods
xor
pop
or
sub
jne
dec
movsb
or
mov
jo
cmpsl
xchg
fsincos
insl
mov
movb
leave
inc
shll
int
inc
add
adc
mov
inc
xchg
mov
aad
mov
xor
xchg
sbb
dec
or
cmp
adc
lods
sbb
sub
dec
sbb
and
arpl
cmp
aam
je
jecxz
in
and
addb
mov
push
ds
sahf
stc
lds
mov
and
popf
mov
lods
scas
lock
pop
fnsave
mov
fdivr
push
dec
arpl
sbb
xchg
cpuid
add
dec
icebp
inc
mov
cli
mov
es
xchg
pop
into
add
loop
push
fidivl
dec
adc
mov
int3
rorl
pop
rcrl
xchg
push
ret
xchg
cmp
jge
sbbb
add
int
mov
test
clc
out
fwait
xorl
pop
fcomps
mov
xor
mov
push
sub
mov
push
pop
insl
fwait
dec
movsl
inc
add
pop
dec
pop
ret
xor
dec
out
jnp
add
dec
cmp
xor
pop
sub
outsb
inc
adc
sub
aas
pop
mov
js
and
adc
mov
or
iret
daa
and
fdivr
cmp
inc
jo
cld
das
aaa
xchg
das
xchg
aaa
test
add
mov
mov
dec
lods
lods
inc
mov
xchg
ret
mov
push
cltd
test
cmp
jb
cltd
test
cmp
insb
fs
xor
push
sbb
gs
or
inc
and
adc
xor
seta
sarb
insb
adc
mov
inc
pop
mov
jnp
mov
xchg
es
jl
jge
jg
mov
jle
lahf
adc
xchg
bound
jge
jbe
icebp
stos
xor
push
add
cmp
xlat
mov
push
mov
repnz
bnd
pop
mov
icebp
lods
pop
movsb
xchg
push
push
mov
incl
cmp
notl
adc
inc
sub
mov
cmpsl
adc
test
aas
push
out
mov
push
aas
mov
jnp
add
outsl
addb
adc
in
adc
outsb
mov
sub
lock
jl
pushl
out
pop
adc
ds
fcmove
in
jg
xor
inc
xchg
mov
aad
fistl
pop
jg
cmp
pop
add
mov
iret
scas
add
inc
insl
das
and
iret
outsl
pop
sub
pop
mov
aas
scas
jle
and
das
add
out
andb
pop
jmp
inc
mov
push
mov
das
out
push
cmp
jne
mov
push
add
idivl
int3
fidivrs
inc
test
push
aam
sub
hlt
sub
cli
lock
sbb
fs
test
jl
mov
mov
gs
dec
shll
popa
add
outsl
push
out
mov
xchg
lea
adc
push
xor
ds
and
mov
notl
test
sarl
lods
sbb
inc
test
mov
loop
cmovnp
sarb
loopne
orb
popa
addr16
sahf
lret
lcall
adc
lds
das
mov
xchg
pop
sbb
push
inc
and
js
loop
adcb
mov
loop
lret
adc
mov
stos
xchg
push
das
loopne
mov
fildl
pop
cmp
sub
rcl
inc
jne
out
aas
sub
sub
repz
fwait
lods
pusha
push
lfs
dec
das
pop
cmp
mov
sub
stc
pop
add
mov
mov
mov
cmp
push
pop
jbe
mov
cmp
mov
inc
mov
stos
sbb
mov
xor
iret
rcrb
push
ljmp
pop
lahf
insb
ss
sub
jge
mov
inc
daa
sbb
xchg
outsb
lret
lods
repz
sahf
sbbb
pop
insb
insl
insl
in
cmc
inc
xchg
inc
int
stos
popa
int3
xor
std
das
pushf
add
sbb
int3
pop
push
sbb
push
mov
sub
push
stos
push
adc
push
das
pop
adc
addr16
and
pushf
jno
gs
or
xchg
sub
lret
fidivrl
xor
scas
ss
cmp
adc
sbb
hlt
sub
or
rcrl
lods
div
or
cmc
icebp
add
or
cmpsl
int3
arpl
das
leave
aam
loop
lret
adc
push
mov
jae
sti
or
push
mov
jns
fistps
rol
clc
sub
pop
in
xchg
mov
pop
add
shll
or
negb
dec
insb
sbb
jne
sub
pop
mov
push
outsb
inc
subb
sub
lods
movb
adc
popa
jno
adc
add
mov
mov
fldt
addr16
loopne
jo
dec
stos
push
jp
insl
pop
cs
pop
lea
ss
mov
adc
loop
xchg
hlt
mov
test
popa
sti
add
pop
imul
repnz
jns
cltd
jmp
sub
jnp
flds
pushf
sti
cmp
push
pavgb
jns
pop
rcl
dec
adc
shlb
shrb
pop
test
sbb
and
sbb
mov
or
lds
fninit
mov
cmp
inc
mov
out
cmp
push
test
pop
sbb
ret
ret
dec
xor
das
stos
inc
and
aam
mov
adc
pusha
sub
data16
outsl
out
pop
enter
dec
out
movsl
pop
scas
mov
mov
pop
xchg
or
xor
popf
xchg
adc
xlat
flds
push
ljmp
subb
push
pop
daa
or
fdivrs
pop
lret
xor
gs
sar
sbb
push
push
out
test
stc
scas
mov
hlt
arpl
fcoml
stos
cli
lret
scas
std
and
jg
sbb
insb
push
push
jno
lods
es
std
lcall
jae
cli
add
push
xchg
scas
xchg
inc
rcrb
in
xor
pop
imul
mov
sbbl
insl
or
push
out
xor
pusha
jmp
xchg
jp
add
fildll
push
add
sub
cmpb
dec
sub
mov
xor
xchg
ret
into
vpandn
cld
inc
add
ret
imul
aam
xchg
xchg
xchg
cld
xchg
mov
call
pop
test
xchg
out
arpl
and
mov
cli
negb
insw
cmp
dec
dec
cmp
cmc
or
cmc
hlt
fisttps
mov
fwait
in
loope
push
sub
lods
stc
push
cltd
or
pop
mov
test
lea
enter
lahf
add
xor
scas
dec
outsl
pop
incb
jns
das
jecxz
jbe
mov
cmp
xor
data16
enter
fsin
mov
rorl
or
dec
es
push
testb
movl
jge
cmp
xchg
sub
mov
ret
jl
push
or
mov
xor
inc
mov
dec
cmpsb
sbb
jecxz
mov
mov
arpl
stos
adc
sub
ficomps
and
negb
out
sbb
arpl
clc
cld
jecxz
addr16
fcmove
arpl
orps
lcall
dec
mov
outsl
sbb
xchg
jg
leave
jmp
dec
or
fists
jg
bound
push
aas
cmc
outsl
or
repz
bound
fmuls
mov
les
dec
out
popa
cltd
mov
data16
xchg
xchg
scas
inc
les
fldl
scas
and
clc
xchg
or
mov
lahf
pop
and
int3
jno
add
dec
loopne
mov
inc
adc
jb
popa
sbb
or
mov
xchg
daa
repnz
aam
mov
cmc
pop
insl
ljmp
stos
mov
mov
mov
mov
pop
and
adc
iret
adc
mov
mov
movsl
xchg
cs
loope
cmp
push
sub
jecxz
xchg
test
pop
xchg
cmp
inc
push
add
mov
mov
mov
dec
inc
mov
sbb
jle
xchg
in
sahf
test
dec
in
adc
stos
sbb
lea
push
mov
or
adc
pop
pop
lahf
negl
icebp
push
test
aam
ret
add
in
imul
and
fsubs
sbb
sub
fdivrl
jb
cmp
jl
or
xor
lret
into
sti
decl
sti
ret
mov
repnz
jmp
inc
out
lock
xchg
sub
mov
pushf
mov
cmpsl
and
xchg
or
imul
cltd
xchg
push
xor
out
cmp
mov
leave
mov
icebp
fld1
mov
ja
insl
aaa
mov
pushf
mov
je
lock
xchg
dec
sahf
xlat
inc
aaa
fucomi
pop
and
adc
insl
fldl
jmp
ja
cmpsb
inc
ret
roll
jmp
lahf
push
sbbb
mov
insl
mov
fs
popl
mov
movsl
cld
stc
nop
call
inc
add
xchg
push
dec
sbb
loopne
push
outsb
outsb
adc
ljmp
imul
jmp
jne
nop
fnop
mov
dec
push
xor
int
int
insb
faddl
iret
mov
push
mov
popf
cwtl
daa
lea
inc
roll
cwtl
shrl
sbb
imul
bound
mov
ljmp
xchg
mov
sarl
std
fs
call
mov
xchg
jge
int3
orb
loopne
sbb
test
mov
test
lcall
rclb
sbb
xchg
jno
js
fcmove
rol
dec
dec
negb
xchg
jns
subl
pop
push
mov
pop
insl
movsb
ret
lret
das
dec
add
test
shll
sbb
and
les
add
push
lock
jmp
mov
lds
scas
xchg
sub
aam
inc
repz
xchg
jp
jmp
add
jl
inc
outsl
dec
test
xor
and
mov
jge
lret
jnp
xchg
fistpll
pop
cmp
lds
mov
pushf
dec
push
mov
push
bound
inc
stc
fwait
push
mov
dec
xchg
mov
add
loopne
imul
sahf
pop
and
fldt
shlb
imul
xor
add
sbb
subb
frstor
test
ds
lcall
sub
sub
xchg
mov
addr16
jecxz
sub
addr16
dec
mov
xchg
es
into
int3
jle
cmp
rcl
xchg
jp
fs
dec
stos
pushf
fisubrl
cmp
jne
jecxz
push
jecxz
shl
pop
dec
sbbl
ffreep
mov
pop
sub
sub
mov
icebp
outsb
xchg
into
mov
jnp
sbb
push
mov
ret
out
movsb
lea
test
cld
ret
push
ret
inc
pop
stos
idivb
inc
sbb
cmpsb
xchg
sbb
out
movl
cmp
xchg
sahf
sub
divl
insb
cmp
inc
int
sub
adc
xor
jmp
cmp
adc
call
cmpsl
mov
test
inc
and
adc
pop
pcmpeqb
fld
xor
sti
mov
cli
lock
cltd
scas
lds
push
push
push
jae
mov
dec
mov
xlat
mov
jns
pop
pop
mov
lret
mov
mov
inc
idiv
fdivp
repnz
fs
xlat
js
jmp
mov
stc
jp
addr16
mov
cltd
xchg
out
jg
pop
jp
mov
jmp
test
sub
outsb
add
shlb
and
ljmp
dec
xchg
ret
cltd
adc
mov
mov
jb
inc
scas
inc
pop
push
jnp
mov
int3
jle
je
inc
inc
inc
cmpsl
jmp
js
cmpsb
or
idiv
loopne
cltd
out
adc
sub
sub
mov
in
inc
sti
fsubrs
cs
xor
sbb
sbb
aad
inc
xor
xlat
jne
mov
push
ret
adc
out
and
push
sub
dec
pop
fisubs
mov
or
or
je
dec
inc
repz
sub
rorl
dec
mov
cmp
xchg
push
orl
out
cld
add
inc
dec
call
inc
pop
insl
stos
mov
bnd
enter
jmp
sub
mov
push
subb
in
loop
int
fstpt
cli
or
mov
xchg
push
leave
xlat
mov
adc
outsb
idivb
outsl
or
jge
movsl
lea
jge
dec
push
call
fnstenv
repnz
push
rcrl
mov
fs
xchg
ret
lcall
mov
iret
sarb
shll
std
aas
inc
outsb
std
shlb
sub
loope
out
xchg
sub
adc
xor
call
cmp
lret
sub
inc
jno
lods
or
add
inc
test
pusha
fsubp
mov
push
test
popf
repnz
cld
cld
xchg
pop
push
sub
xchg
hlt
mov
add
aad
stc
outsb
sbb
xor
xchg
inc
pop
or
jle
pushl
fdiv
sub
xchg
cli
jae
je
sub
hlt
cmp
mov
popa
ja
testl
xchg
adc
jmp
pop
cld
imul
filds
push
push
fstpl
sub
loop
int3
mov
gs
out
mov
gs
push
adc
cs
test
push
movsl
arpl
or
lock
pop
out
ds
sub
out
stos
es
leave
xchg
dec
pop
xchg
sbb
mov
jnp
fsts
clc
jle
outsl
out
mov
mov
xor
mov
xchg
nop
jb
xchg
xor
xchg
lds
outsl
push
dec
repnz
pop
popa
inc
or
data16
dec
cmp
or
pop
add
push
push
sbb
rcrb
mov
imul
cwtl
dec
push
xor
stos
popa
outsb
mov
sti
mov
in
insl
ja
jg
sbbb
push
test
cmpsb
jmp
dec
or
ret
push
daa
fistps
addb
and
aaa
jmp
add
mov
cmp
dec
js
insb
mov
xlat
cwtl
pop
push
or
xor
sub
insb
inc
mov
outsb
inc
or
sbb
push
es
cmpsl
mov
dec
or
jne
sahf
inc
test
inc
dec
es
cmpsl
inc
xchg
enter
cmc
orb
cmp
mov
les
xor
fcomi
xchg
shlb
sub
repnz
cmp
leave
and
push
imul
inc
mov
int
xchg
jbe
je
lret
stc
add
dec
mov
shrb
out
aaa
inc
pop
mov
pop
jmp
add
dec
and
js
push
jno
and
inc
push
cmp
mov
add
jmp
xorl
nop
daa
mov
dec
mov
outsb
push
and
dec
aad
jne
loope
xor
pop
adc
or
js
ljmp
and
movsl
rolb
icebp
push
int3
lret
lock
cmpsb
cld
orb
inc
add
lods
sbb
mov
dec
push
sbb
xchg
jg
fstpl
add
sti
shll
es
inc
aam
jle
xor
push
jecxz
xor
popf
shrl
jnp
in
movsb
add
sbbl
addl
add
or
fsubrs
bound
dec
and
movb
fucomp
fildll
xchg
out
cltd
mov
fnsave
pusha
cmp
mov
in
jg
daa
jno
inc
and
mov
jbe
mov
pop
add
sbb
sbb
int3
in
fisubrl
mov
icebp
fidivl
mov
repz
ja
xchg
nop
bound
dec
sub
imul
pop
mov
xchg
or
fyl2x
jnp
mov
jae
mov
sar
outsl
or
cltd
test
cmp
push
mov
into
popf
mov
push
or
jmp
push
and
fildll
frstor
pop
xchg
mov
push
pop
mov
shrl
dec
nop
jp
jmp
imul
jmp
out
push
xor
jae
push
mov
inc
ds
stos
gs
xchg
xor
out
fld1
call
lret
mov
pop
addl
cmp
fisttpll
add
push
mov
xor
jae
cwtl
rcll
out
cmp
dec
cmpsb
sub
sahf
imul
popf
cli
pop
outsl
cmp
add
xlat
icebp
pop
cmp
xchg
fsubp
ret
pop
or
mov
das
dec
cmp
imul
mov
fsubrs
orb
mov
cli
das
lds
and
lret
stos
es
daa
lods
mov
and
jno
mov
push
push
out
lods
js
fwait
shr
add
xchg
push
pushf
notl
or
lcall
jo
xchg
xchg
pop
or
xchg
inc
aam
xchg
hlt
mov
dec
fldcw
or
mov
arpl
fs
rorb
xor
int
push
sub
sub
add
push
push
and
mov
mov
sarl
das
movsb
pop
mov
lahf
fucomip
scas
fwait
enter
mov
mov
or
aaa
outsl
xor
mov
imulb
and
push
inc
aas
cmp
push
test
inc
ja
cmp
ljmp
jle
popf
or
or
lcall
fcomip
daa
movsb
push
loope
fdivl
sbb
add
dec
int3
mov
push
cltd
stos
leave
jmp
push
xor
pop
popa
pop
in
dec
fbld
cmp
les
ds
aam
ja
xchg
loop
dec
mov
sbb
jnp
jle
lret
iret
icebp
jne
das
je
adc
in
and
movsl
lret
inc
mov
jns
ret
popf
fwait
imul
and
test
and
movsb
shlb
mov
stc
loope
or
xlat
mov
mov
and
mov
add
scas
lcall
lret
inc
lock
in
lret
sbb
jl
sub
jne
sub
and
mov
movsl
lods
xchg
daa
xor
mov
aas
ja
aam
aam
sub
mov
pop
sub
es
jno
pop
cmp
sbb
cmc
mov
push
mov
adc
mov
xor
out
push
mulb
out
stos
daa
movsb
mov
fnstcw
mov
out
fistl
mov
sar
icebp
inc
sbbl
ficomps
jnp
cmp
repz
rcr
add
imull
lds
xor
jp
cmp
jno
push
out
push
shll
sub
rolb
jp
add
and
mov
test
stc
sbb
icebp
pop
mov
xor
loop
in
inc
mov
mov
xor
push
lret
aas
stos
push
in
jp
dec
cmp
sub
mov
dec
pop
pop
push
fsubrl
and
push
js
xlat
xor
mov
xchg
aas
scas
leave
sub
and
mov
lea
sub
sbb
and
mov
cmp
sbb
pop
push
add
jns
jno
aas
jp
out
sub
sbbb
mov
iret
sbb
dec
jb
shrb
mov
and
push
int
and
xor
lret
pop
addb
imul
in
dec
xchg
or
xor
or
sub
cld
or
cmp
push
daa
int3
lahf
imul
enter
or
adc
nop
xchg
fnstsw
inc
mov
mul
dec
xchg
add
mov
mov
mov
popa
pop
ret
insb
xor
xchg
out
data16
fsubs
push
mov
lods
ljmp
sbb
mov
iret
imul
lds
and
nop
es
cld
mov
shll
mov
outsb
icebp
push
lock
repz
mov
cld
enter
scas
mov
xchg
int
cmp
pushf
dec
popf
aad
sbb
mov
aam
mov
fbstp
scas
ja
cs
cmp
in
jnp
insl
adc
and
mov
inc
mov
pop
aas
mov
dec
sub
in
jb
mov
jbe
int3
xchg
int3
ja
mov
mov
xor
sbb
add
inc
xor
arpl
adc
out
or
outsl
dec
je
push
std
xchg
lret
pusha
adc
lcall
inc
jge
cs
out
push
jmp
dec
xchg
pop
cli
aaa
xchg
aam
clc
shl
dec
aad
cld
jmp
xchg
push
mov
fs
mov
xchg
mov
and
cmpsb
jae
jle
xor
packuswb
inc
xchg
aas
cs
dec
cmp
xchg
mov
gs
sbbb
hlt
xchg
hlt
in
inc
jp
loopne
fimull
cmp
sbb
dec
in
adc
jnp
mov
dec
fsub
ja
lcall
xlat
xchg
xchg
xchg
sbb
ljmp
mov
jae
stos
push
sbb
mov
hlt
sbb
frstor
ds
lods
test
xchg
mov
xor
xchg
out
xchg
dec
and
adc
fnstenv
popa
jo
test
jecxz
ljmp
mov
adc
testb
xchg
dec
xchg
inc
sub
add
mov
out
cmp
stc
cmpsl
cmp
mov
push
std
and
jmp
mov
mov
test
lods
push
mov
mov
push
jne
adc
cmpsb
mov
mov
jp
test
dec
ret
loope
cmpsl
mov
into
call
add
sub
dec
pop
xor
stc
je
cmp
sahf
decb
adc
push
jmp
test
mov
mov
nop
and
xchg
stos
sub
sbb
or
bound
adc
fistps
add
repz
mov
test
and
and
mov
cmp
inc
sti
or
and
dec
inc
icebp
mov
pushf
aam
shlb
scas
bound
dec
mov
and
loopne
sub
unpcklps
addr16
lock
add
fidivrl
mov
dec
sub
movsl
cmpsb
jae
sub
and
mov
fists
push
pop
cmc
hlt
ds
sbb
jbe
push
stos
enter
xchg
rorb
cmpsb
dec
xorb
shrl
xchg
dec
xor
cwtl
cmp
jae
push
sub
test
fstpt
rcll
and
cmp
mov
and
xor
addr16
pop
rcrb
inc
imul
mov
inc
mov
stc
inc
fstps
xchg
das
sub
cmc
in
mov
push
sarl
sub
test
mov
push
loope
insb
jne
ss
xchg
or
sub
shlb
into
out
adc
xchg
fwait
cli
cmpsl
mov
loop
jo
movsb
or
test
je
mov
or
sub
fs
push
xchg
sub
es
out
ss
adc
adc
movsl
push
ret
or
mov
push
pop
pop
add
packuswb
shl
mov
mov
roll
cmp
loope
cwtl
dec
daa
repz
mov
mov
push
adc
or
jbe
in
add
fdivrl
mov
mov
push
mov
dec
pop
sbb
xacquire
out
and
call
ds
fdivrl
push
mov
lods
adc
in
fistpll
sub
mov
insb
dec
aam
xor
mov
cmp
call
dec
or
popl
add
jo
mov
les
mov
int3
sbb
gs
int3
aam
ret
jecxz
outsb
test
mov
inc
scas
jge
lods
cld
xor
sub
lret
adc
mov
mov
xor
les
movsb
sbb
dec
xlat
mov
mov
lret
es
pop
or
and
add
out
sub
xchg
leave
shll
dec
pop
mov
test
sub
xchg
jle
cmpsl
mov
adc
sahf
lret
int3
push
sub
mov
mov
ds
in
sbb
hlt
cmp
aas
sub
xor
xchg
dec
add
sub
cmp
pop
lret
fisttpll
adc
stos
int3
mov
out
or
shl
cli
lods
out
pop
jg
test
dec
cmp
popf
loope
outsl
mov
mov
xor
add
bound
or
dec
mov
lods
jae
lock
cmp
fidivrs
mov
cmc
mov
int
xchg
sub
movsl
ds
mov
jo
int
sbb
loope
jge
sbb
mov
xlat
and
jno
xchg
cmc
fldl
mov
pop
push
pop
inc
ret
push
popf
pushf
pop
mov
mov
add
jp
xchg
mov
shll
inc
and
sub
mov
jle
sub
and
je
mov
out
ret
pop
mov
xor
mov
inc
push
mov
dec
stc
jmp
dec
adc
push
mov
xor
ret
dec
xor
inc
gs
jmp
mov
jno,pt
sub
outsb
aaa
inc
and
pop
mov
sub
sub
jge
arpl
xchg
idivb
sahf
cld
subb
push
inc
jg
lahf
repnz
mov
je
jp
loope
fdivrs
pop
jecxz
fcmovnbe
in
sti
mov
push
dec
int
mov
mov
pop
aas
cmpsl
push
in
jg
insb
xadd
jae
dec
jmp
out
mov
mov
es
fildll
repnz
icebp
push
imul
outsb
icebp
sbb
sbb
jns
push
cmc
pushl
aas
or
and
pop
insl
sar
adc
stc
push
addr16
out
dec
or
cmp
pop
addr16
cmp
sti
sbb
aam
cmp
out
andb
xchg
xchg
adc
into
cmp
sub
lret
push
loope
mov
imul
inc
lods
sub
cmp
xor
dec
xchg
push
rorl
mov
sar
push
loope
mov
dec
cwtl
dec
bound
movsb
cmp
cmp
addr16
mov
adc
mov
loop
mov
xor
mov
mov
hlt
cmc
add
pushf
outsl
jne
mov
repz
cmp
lock
stos
mov
xor
push
pop
inc
outsl
cwtl
jg
sbb
cli
add
inc
xor
test
sahf
lret
pop
add
aaa
idiv
es
into
push
ficoml
lds
and
sti
mov
hlt
cs
push
and
call
add
jae
add
dec
dec
inc
and
rcrb
ljmp
add
sti
stc
fisubrs
cmp
mov
sarl
fidivl
push
pop
movsl
xor
orl
les
sub
jl
in
and
sub
in
cmpsl
add
call
testb
sbb
push
lret
mov
mov
out
ret
lret
jnp
cmp
scas
push
add
jb
nop
dec
hlt
aaa
inc
or
stos
xchg
jo
cmpsl
inc
adc
xchg
push
fnstenv
adc
jo
xor
jmp
push
mov
mov
mov
test
sub
out
push
aad
dec
mov
popl
cli
js
and
movsb
xor
add
movsb
pop
mov
test
xchg
shl
aas
insb
insb
dec
jp
jp,pt
dec
mov
addb
bound
aam
add
in
jmp
and
mov
in
mov
dec
mov
outsb
call
imul
sub
push
inc
addr16
pop
push
cltd
xchg
sarl
lahf
lret
cmc
sub
jg
push
adcb
adc
mov
pop
lods
pop
pxor
mov
jnp
insl
repnz
lcall
ret
mov
shr
in
mov
sbb
js
pop
mov
pushf
push
jnp
mov
icebp
and
repnz
inc
adc
push
cmp
mov
sarl
or
add
add
cld
pop
or
and
jnp
iret
mov
clc
cmp
xchg
addl
xchg
outsb
stos
imul
dec
out
inc
arpl
movsl
xchg
mov
mov
xor
test
stos
iret
rcrl
pop
ficoms
rorb
sub
fimull
add
push
or
imul
mov
cltd
shl
xorb
mov
or
cltd
sub
cwtl
rol
cmpl
xor
ss
popa
dec
jne
cmp
cld
dec
addl
push
sub
inc
mov
inc
mov
test
or
cli
add
jb
push
jnp
fistl
stc
xor
push
add
cmp
jecxz
push
xchg
in
mov
jns
xchg
in
or
setbe
scas
roll
xor
push
jo
call
imul
and
xchg
pop
jb
add
sbb
pop
clc
push
sbb
jmp
aad
imul
cmp
mov
test
aas
aam
fidivl
ljmp
cmp
jns
popa
inc
jg
cmp
arpl
icebp
div
das
mov
xchg
xor
repnz
lcall
loope
jb
xchg
add
xchg
pop
loopne
cmpsl
push
push
rolb
sub
stos
ret
add
repz
insl
sub
movsl
pop
push
push
pop
stos
add
pop
dec
movsb
repz
sub
mov
or
and
lds
push
push
in
sub
test
lods
sub
and
mov
inc
scas
jnp
xchg
cltd
sub
rol
icebp
hlt
mov
fnsave
mov
push
and
jo
pop
jl
cmpsb
mov
inc
xchg
cmp
add
cmc
push
movsl
into
cmp
pop
mov
add
mov
dec
pop
cmpsb
jae
inc
cmp
mov
js
imul
push
add
add
rclb
xchg
inc
mov
push
fstl
pushf
into
inc
xchg
pop
pop
push
scas
pushf
push
inc
adc
lret
jno
int
test
xchg
js
mov
shl
jno
mov
or
pop
out
push
xchg
iret
fneni(8087
adc
lock
pop
pop
ret
insl
inc
jge
loopne
outsl
xchg
rcr
and
fisubrs
cltd
add
jmp
stc
mov
sti
push
jl
and
movsb
add
and
mov
dec
lahf
das
or
int3
adc
adc
dec
aad
push
jmp
xchg
mov
sbb
push
imul
sbb
or
mov
mov
ljmp
and
adc
cmp
mov
sub
sbb
push
push
cmpsl
push
test
cwtl
sbb
xchg
sbb
shr
dec
repz
sbb
aam
xchg
sbb
add
cli
push
mov
sub
in
testl
sub
mov
leave
repnz
or
aaa
cmpsb
subl
or
je
into
inc
mov
out
or
inc
lds
push
mov
fwait
int
xlat
lahf
adc
push
cmpsl
pop
jo
movsb
sbb
sbbb
arpl
pop
xchg
mov
or
clc
rcr
sub
pusha
xchg
mov
xchg
or
push
clc
andl
insl
call
addr16
js
mov
mov
icebp
mov
pushf
pop
mov
loop
popf
pop
push
xchg
clc
jnp
xor
push
ds
test
bound
fwait
dec
add
ret
pmulhuw
out
sbb
icebp
insb
adc
mov
loope
pop
lods
enter
in
xchg
add
call
cmpsb
decb
out
mov
and
cmp
cmp
popf
stos
sbb
cmpsb
sbb
ss
mov
insb
rcl
or
dec
and
popf
in
lret
dec
or
fwait
mov
lods
inc
xor
push
movsl
jno
test
push
shl
and
mov
adc
cli
dec
mov
aaa
push
mov
cmpsl
mov
ja
add
cmp
mov
mov
adc
loope
lds
dec
pop
pop
mov
out
mov
mov
and
imul
xchg
cmp
push
and
push
lret
pop
js
inc
adc
push
pop
mov
orb
sbb
pop
mov
mov
jmp
pop
shlb
jg
arpl
inc
mov
jb
adc
inc
push
pushf
pop
daa
pop
add
or
push
out
and
lcall
jno
mov
mov
xor
js
outsb
jl
push
out
or
adc
testl
ret
fcom
dec
nop
jmp
mov
jmp
sbb
ret
in
aad
scas
add
push
cmp
sbbb
test
xchg
adc
sbb
mov
movsl
jg
popl
add
dec
loop
pop
or
cltd
outsb
sub
mov
sarb
jb
adc
loopne
pop
sbb
lock
mov
or
leave
ljmp
iret
sahf
pop
push
inc
lret
testb
mov
aad
xor
int3
popf
xchg
lods
xchg
scas
lods
dec
sbb
insb
jmp
mov
cmp
cmc
mov
pop
imul
enter
sub
adc
cmp
into
fnstcw
out
mov
jmp
idiv
out
aam
es
jo
jg
inc
mov
out
xor
jmp
imul
or
cmp
xchg
lods
cmp
test
pop
sbb
inc
mov
pop
sub
cmpsb
jmp
mov
sub
stos
xchg
pop
pushf
arpl
in
call
mov
repz
push
aaa
cmp
mov
jl
pop
xchg
rcl
mov
imul
sub
call
push
cmp
and
sub
jge
push
shrl
or
fwait
mov
ret
pop
notb
xor
insl
nop
mov
push
mov
data16
lds
test
xor
push
shll
dec
lock
lret
fldl
out
mov
and
faddl
sbb
and
jmp
jp
jle
sub
mov
aam
in
das
out
orb
inc
inc
imul
lcall
pop
mov
jge
je
sbb
xchg
clc
dec
rcrl
daa
pop
xor
daa
or
mov
loop
dec
out
mov
push
cld
call
lret
mov
stos
loop
dec
push
rclb
aas
fiadds
jne
sbb
add
cmp
add
data16
fildll
mov
movsl
mov
mov
lea
push
pop
decl
sahf
pushl
imul
sub
push
push
fisubrl
pusha
pusha
cmp
mov
stc
cmp
pop
std
sbb
pop
or
enter
in
fbld
pushf
shlb
jo
xor
outsb
push
dec
into
dec
stc
iret
pop
incl
daa
mov
push
cmp
sbb
mov
sbb
push
xor
inc
push
cmpsl
adc
sti
out
test
or
add
int
sub
mov
roll
out
aad
jae
cmp
dec
xchg
into
sub
add
lret
jge
incb
cmp
fildll
js
inc
sbbb
inc
cmpsl
and
int3
cmp
mov
cmp
push
ljmp
sti
xchg
mov
pop
jp
xchg
sbb
xchg
ss
sub
pop
push
mov
add
pop
scas
in
arpl
out
adcb
push
lods
sub
jecxz
xlat
test
shl
pop
repz
movsl
ja
in
mov
cs
loope
sub
sbb
stos
jg
mov
nop
sub
mov
es
or
rcr
add
xor
mov
gs
jo
out
inc
sarb
loope
push
pop
in
xorl
push
dec
xor
ja
pop
dec
lods
or
push
sti
les
dec
addr16
data16
jl
xchg
push
insl
dec
or
and
fwait
js
jb
sti
cmc
or
xor
outsl
js
movsl
jmp
shl
and
xchg
test
sub
lock
sbb
ss
push
or
sbb
or
mov
repnz
incl
xchg
std
and
insb
addb
jnp
pop
cmp
dec
pop
pop
int
ss
stos
dec
popf
xchg
shrb
sbb
xor
mov
add
add
xchg
mov
imul
gs
pop
push
xchg
adc
aad
addl
daa
aaa
xchg
clc
outsb
std
fildll
xor
dec
mov
imul
fldt
scas
mov
fsts
sbb
add
loopne
sub
or
imul
and
sti
cmp
or
xor
jp
scas
or
pop
dec
and
pusha
in
shll
inc
insl
sahf
nop
push
sbb
inc
test
xchg
or
or
ljmp
pop
push
pop
pop
cs
mov
js
jo
aam
xor
fnstenv
cmpsb
or
test
sbb
shlb
and
cli
rolb
outsb
pop
enter
adc
stos
sub
mov
mov
xor
add
add
xchg
mov
mov
pop
insl
pop
inc
mov
imul
lds
mov
subl
repnz
gs
adc
mov
xchg
mov
inc
sbbl
rcll
cltd
inc
inc
jl
mov
loope
cwtl
loopne
shl
leave
sub
jns
inc
push
xchg
test
std
dec
sbb
inc
mov
mov
jo
adc
push
movsb
xchg
mov
cmp
cli
jg
dec
out
pop
adc
jmp
xlat
pandn
sbbl
popf
sub
int3
cmp
outsb
xchg
stos
sub
inc
mov
xchg
xchg
leave
sub
ud2
inc
movsl
push
arpl
jecxz
outsl
stos
hlt
mov
xchg
mov
add
push
or
dec
xchg
jnp
jne
sub
cmp
jae
movsl
cmp
push
cmp
dec
lds
adc
or
xchg
jp
sbb
jge
cmp
xor
jmp
leave
adc
movsl
xchg
xor
push
push
cmp
cmpsb
mov
adc
test
loop
ret
sub
push
dec
or
lcallw
and
push
out
cmp
gs
repnz
lret
mov
add
enter
push
fbstp
mov
and
pushl
jb
and
test
push
lahf
jno
mov
mov
lea
xchg
mov
lcall
push
push
inc
loop
ret
ror
lods
fcmovnu
jecxz
xor
adc
jg
or
fsub
lock
cmc
es
in
loope
pop
mov
sub
ficomps
fiadds
sahf
xor
aaa
out
enter
xchg
lods
and
lods
mov
in
loop
xor
cmp
cmp
imul
in
xor
or
xchg
sahf
dec
outsl
jmp
and
das
cmp
cli
sub
fwait
pop
es
sub
dec
aam
dec
int3
mov
fdivrs
lods
incb
push
jle
es
arpl
jge
xor
add
out
comiss
xchg
daa
mov
imul
cltd
or
aad
leave
fwait
int
testl
aas
rcr
sarl
cmp
movzbl
repnz
mov
and
pop
loope
jp
sub
pop
sub
ja
mov
sahf
adc
fidivs
inc
ja
mov
sbb
sbb
or
xlat
xlat
or
xchg
cmp
inc
fwait
rclb
or
jmp
mov
xor
mov
daa
sbb
sti
lods
les
pop
rorb
outsb
daa
pop
outsb
mov
rcrl
cmp
enter
sbb
and
pop
sar
dec
add
xchg
and
push
add
std
sahf
stc
in
lahf
mov
in
stc
push
add
mov
mov
fsts
cs
in
stc
and
sbb
leave
out
ficoms
sti
sbb
mov
mov
mov
test
mov
add
add
jnp
and
cwtl
cmpsl
jp
or
arpl
popa
cmp
lahf
inc
cmpb
cmp
xchg
negb
mov
rorb
push
inc
xchg
mov
mov
mov
out
pop
popa
mov
imul
and
sbb
and
lock
pusha
fwait
repz
adc
inc
push
mov
pop
out
sub
xchg
mov
add
out
into
xor
fmul
mov
jecxz
rorb
mov
cld
sub
add
icebp
sbb
jmp
test
mov
sahf
lret
loope
nop
pop
adc
mov
lret
not
cmp
jmp
call
xor
dec
push
jmp
adc
and
mov
add
loop
pop
inc
cld
lea
xchg
push
ja
dec
inc
cld
xor
inc
dec
ror
mov
hlt
stos
hlt
inc
jb
sbb
jge
clc
mulps
imul
xchg
push
icebp
push
ja
cli
xlat
dec
icebp
cmp
xchg
add
push
jo
sub
lcall
inc
nop
roll
mov
into
das
sub
push
je
jns
imul
mov
lods
pusha
xchg
mov
enter
xor
cmpsl
pop
int
jb
fucomi
idivl
cwtl
ror
lock
lahf
daa
cmp
mov
lret
filds
imul
pop
adc
mov
xor
xor
lea
mov
fs
add
pop
adc
arpl
aas
mov
fsts
adc
dec
addl
add
cmpl
js
mov
rcll
rcr
shll
dec
daa
test
insl
xchg
aas
ljmp
movsl
and
or
stos
adc
adc
jb
in
lds
dec
lock
inc
cld
sbb
jbe
ljmp
outsb
and
repnz
mov
xchg
xor
movsl
jecxz
jne
scas
push
popf
ja
shl
or
push
and
imul
fidivrs
push
pusha
xchg
ds
sbb
xor
add
inc
push
sub
sub
outsl
dec
icebp
xchg
scas
or
imul
out
movsb
ret
popf
and
fisttpl
fldenv
or
inc
sub
outsl
js
pop
les
fildll
mov
mov
mov
pop
ja
jl
lcall
xchg
shrl
xor
xor
xchg
cwtl
repz
out
in
repnz
push
push
push
mov
pop
jnp
add
nop
jo
pop
rolb
push
xor
xor
jae
shr
repnz
repnz
cmp
popa
dec
xor
dec
inc
insl
push
movaps
cs
ficoml
loop
or
popa
shl
push
lods
imul
cmp
jl
jg
jns
mov
movsl
inc
mov
mov
pusha
dec
cmpsb
mov
xor
pop
repnz
push
movsb
cmpsl
xchg
inc
std
dec
mov
add
out
xor
adc
iret
iret
sub
add
stc
lret
jns
adc
mov
ret
xor
add
add
movsb
cmp
repz
add
daa
mov
sbb
call
das
mov
in
mov
sbb
out
rol
sbb
ret
mov
mov
scas
shlb
sahf
jae
pop
push
sub
cmpsl
pop
cs
add
xorl
and
in
or
popa
int
fs
sbb
add
rorb
jae
jmp
loopne
stos
dec
dec
into
sbb
dec
aam
in
xor
xchg
sub
pop
cmpsb
shrb
jb
sti
notl
mov
int
and
jp
and
lret
movsl
inc
push
jg
cmovne
sbb
mov
dec
lahf
stos
repz
mov
movq
lret
xchg
sbb
hlt
or
xchg
xchg
imul
xor
dec
arpl
xor
adcb
cmp
xchg
loopne
pop
jnp
xor
stos
push
lods
mov
and
mov
lret
jge
cmpb
xchg
shlb
inc
xchg
fists
mov
push
inc
ja
lahf
stc
addr16
fs
adc
and
sub
addr16
out
lea
pop
lret
insl
sbb
repnz
jno
xchg
std
mov
sub
dec
stos
int
mov
imul
fsubrp
mov
sbb
and
test
jge
dec
lret
iret
and
mov
xchg
or
out
or
push
in
adc
push
nop
cmp
and
and
scas
lods
xchg
arpl
and
stos
sub
outsb
int3
icebp
in
sub
push
ds
outsl
aad
and
stos
and
adc
jne
adc
inc
jns
push
addr16
push
sarl
std
jb
xor
jp
pop
cmp
mov
mov
push
scas
lret
xchg
dec
push
sbb
sti
loope
or
mov
mov
cmp
cmpsb
or
mov
mov
ja
push
xchg
pop
bound
add
sub
aad
rorb
dec
mov
mov
sub
mov
mov
sbb
and
pop
jp
mov
jnp
mov
pop
aad
popf
jae
aad
mov
pushf
ret
loop
jge
insb
ret
jle
std
test
inc
push
and
inc
insl
test
ret
test
dec
jns
sub
dec
push
jbe
dec
stc
push
mov
sbb
mov
and
aas
inc
inc
jecxz
dec
das
mov
aaa
and
outsb
movsb
mov
ljmp
mov
gs
xchg
orb
mov
iret
add
mov
lods
pop
mov
mov
xchg
ret
pop
sbb
and
call
sbb
mov
push
sti
pushaw
xchg
cmp
cmpsb
push
and
out
add
mov
jnp
push
push
xchg
jb
std
dec
push
add
pusha
rclb
xor
lret
mov
aam
mov
out
in
aad
mov
cmp
bound
insb
adc
pop
out
in
pop
xchg
roll
and
adc
adc
lock
mov
xchg
jno
sbb
cli
mov
mov
inc
mov
xor
pushf
lret
jmp
cmpsl
adc
ret
inc
add
enter
insl
pop
push
imul
cmpsl
pminub
jo
fcompl
add
jne
xchg
dec
pop
fcomp
pusha
test
jae
mov
mov
xor
testb
ss
ja
test
popf
mov
repnz
mov
mov
sub
cmp
mov
mov
adcb
in
pop
popl
mov
sub
out
mov
cmp
dec
flds
lea
stos
sub
or
mov
push
out
repnz
adc
mov
fsubl
movb
stos
ret
mov
outsb
cmp
push
adc
push
insb
push
cwtd
idivb
loopne
adc
aad
leave
push
mov
pop
cld
addr16
mov
mov
xor
icebp
mov
push
pop
dec
jl
pushf
pop
push
push
pop
enter
leave
daa
mov
jmp
push
sti
sbb
ret
dec
repnz
lock
push
in
adc
mov
in
mov
xchg
mov
inc
popf
out
lds
movsb
cli
xlat
mov
lds
hlt
adc
push
out
add
pop
sbb
gs
push
lahf
pop
insb
or
lret
lods
mov
mov
rol
pusha
daa
iret
sub
icebp
mov
lret
push
fcoms
aam
dec
out
push
in
cs
pop
mov
mov
imull
fmuls
dec
cmc
add
jecxz
jo
out
cmp
movsl
movsb
push
sbb
push
cmp
int
insb
aas
dec
stc
cmp
imul
ret
dec
popa
scas
push
mov
call
rolb
sbb
and
mov
je
repnz
jne
cltd
subb
rorb
jmp
andnps
insl
rcrl
in
not
fcomip
mov
test
mov
ret
int3
dec
shrb
adc
dec
pop
xchg
mov
sahf
cmp
mov
enter
mov
cmc
push
lods
cmpsl
mov
rcrb
out
loop
add
xchg
ljmp
sbbb
enter
xor
jns
movsl
push
push
mov
xor
push
sbb
and
sbbl
mov
inc
jae
stos
ja
mov
cmp
es
int
mov
mov
jp
jmp
sbb
sub
cltd
cli
clc
xorl
cmp
sub
mov
sar
stos
lock
lea
test
add
jmp
cmp
fdivs
mov
das
sti
push
inc
les
cltd
push
push
outsb
mov
jb
cmp
jg
adc
out
pop
repnz
or
pusha
hlt
add
xor
dec
dec
add
push
mov
inc
repz
int3
mov
loope
jno
scas
pop
pop
pop
out
or
sub
pop
std
aam
fwait
jno
or
push
inc
fs
mov
imul
insl
jne
push
rcll
lret
roll
loope
testl
mov
in
sbb
xchg
out
sbb
pop
iret
cmp
scas
pushf
out
outsb
lds
scas
lock
out
jp
test
lret
ficoms
dec
mov
cmpsb
scas
xlat
lods
jl
push
jb
jne
pop
mov
lods
xchg
pop
cmp
stos
lea
mov
xchg
ss
or
test
cmpsb
pop
dec
and
inc
mov
push
xor
in
push
and
xchg
lret
ficompl
pop
mov
mov
test
push
or
sbb
pop
xor
mov
rdtsc
pop
imul
push
dec
dec
inc
xchg
dec
push
gs
mov
xchg
and
imul
fdivs
cmp
cwtl
shl
add
sahf
xorl
dec
jge
dec
je
cmp
outsb
mov
jl
jae
sbb
shll
push
imul
scas
scas
xchg
lcall
xchg
shll
repnz
sbb
lcall
test
insl
les
mov
inc
mov
stos
mov
xor
in
mov
xchg
jge
mov
inc
mov
add
pop
ljmp
mov
mov
pop
fsts
jne
insb
stos
and
fmuls
lock
mov
jle
sbb
jg
mov
sbb
cld
insb
cmp
loop
pop
shll
shll
enter
inc
lcall
push
into
iret
movsl
ds
shll
xchg
pop
adc
mov
fmull
xchg
fcomp
repz
inc
mov
push
jl
je
popa
or
cmp
dec
pop
cli
xor
inc
xchg
cli
and
fnstsw
insb
mov
push
das
cltd
addr16
mov
push
aad
lret
dec
mov
test
int
popf
jae
or
sti
fsts
cli
pop
ret
xchg
insl
hlt
jnp
pop
mov
cmc
add
push
mov
push
dec
add
shrl
xor
sbb
push
int
jp
push
jg
or
dec
xor
scas
add
inc
es
or
jbe
dec
xor
jo
push
imul
pop
roll
push
pop
lods
bound
or
ffree
ljmp
int
sbb
jecxz
outsb
xor
fcompl
cmp
jle
mov
lods
pusha
ja
lods
loop
cmp
inc
mov
adc
lret
dec
aam
fwait
pop
add
mov
idiv
ljmp
aas
mov
call
setg
xchg
sub
pusha
cld
cwtl
cmp
leave
test
lret
jbe
bound
into
adc
jae
sub
test
clc
sub
mov
xchg
iret
rcl
xchg
pop
enter
aam
dec
inc
test
mov
int3
pusha
test
xor
rorb
out
jge
arpl
xlat
mov
arpl
sbb
cmp
loope
dec
adc
fdivs
inc
cmp
sbbl
sub
movd
out
push
or
mov
out
push
jae
aad
or
add
cmc
cmp
lods
adc
push
jge
dec
fldl
leave
int
add
and
add
cmp
arpl
in
sbb
icebp
push
imul
outsb
or
cld
cli
pop
jo
addr16
cmc
adc
fadds
xor
lock
dec
push
cmp
popl
mov
jmp
lret
sbb
mov
sbb
pop
and
in
pushf
add
popf
sub
movsl
popa
pop
jbe
shll
das
cmp
cltd
lret
sbb
push
and
shll
cmp
inc
mov
scas
ljmp
pop
jno
addr16
idivb
mov
xchg
out
mov
clc
adc
aam
fisttpl
mov
and
fildl
mov
cmp
arpl
cmovne
add
sub
insb
mov
daa
xchg
pop
add
mov
daa
add
aad
je
push
aam
into
mov
mov
and
xor
in
ss
sbb
jne
push
jp
rorl
stc
and
aas
inc
jge
sbb
xor
std
data16
jbe
das
jecxz
lods
pop
sub
adc
fwait
sub
push
cmp
mov
repnz
addb
xchg
stos
mulb
sub
lods
jno
pop
jno
push
out
rcr
loopne
lods
inc
push
add
rcrb
xor
dec
das
fnstcw
jmp
aam
loope
addr16
in
jae
pushf
push
cmpsb
adc
sti
cwtl
push
mov
mov
mov
push
mov
aas
aaa
insl
roll
scas
sbb
ret
sbb
xor
fs
imul
aad
jb
pop
pop
out
fucompp
xchg
rcrl
mov
push
test
fnsave
roll
cmp
adc
push
mov
or
push
jmp
cmp
ljmp
ret
sub
add
push
jb
jo
out
xchg
mov
fisttpl
push
pop
pop
mov
dec
pop
ss
mov
std
popf
je
inc
ja
stos
popa
sub
adc
test
sub
xchg
jecxz
rorb
xchg
xchg
clc
mov
mov
cmc
test
sti
adc
sub
sarl
or
popf
adc
ss
lods
imull
mov
push
pop
frstor
or
adc
mov
push
adc
xor
xor
ss
adc
cmpsl
jns
andl
in
pop
lods
or
xor
pop
and
xchg
or
das
cmp
out
sbb
in
pusha
inc
xchg
xlat
pop
xchg
jns
add
orw
iret
add
aaa
push
outsl
cmpsl
push
add
inc
lret
jae
ljmp
fidivrl
mov
gs
imul
mov
pop
clc
xchg
xor
daa
sub
or
mov
or
pusha
in
mov
gs
ljmp
out
aam
push
insb
insl
mov
jp
ficoms
ret
mov
or
adc
pop
std
les
xor
out
pusha
test
sub
ret
dec
sub
mov
mov
jmp
push
push
and
push
mov
insb
push
push
xchg
sbb
iret
and
dec
cld
jmp
xchg
inc
mov
cmp
clc
mov
or
popa
add
xchg
testb
lods
add
mov
xlat
ss
mov
aas
hlt
or
pop
mov
imul
leave
sbb
lods
mov
mov
icebp
insl
xchg
inc
sub
fnsetpm(287
mov
fildl
jnp
pusha
imull
outsl
xchg
lock
xchg
add
fstps
add
lcall
dec
adc
cmp
shl
pop
mov
mov
fimull
mov
or
outsl
addr16
or
std
loope
iret
pusha
mov
inc
or
jp
pusha
adc
inc
inc
push
scas
xor
xchg
xchg
int3
stos
xlat
mov
jae
mov
in
inc
cltd
sub
jbe
cmp
ds
pop
mov
inc
push
pop
or
sub
xlat
test
cs
outsb
push
xlat
es
rcll
testl
jp
shl
inc
mov
fimuls
xchg
lcall
cmp
int3
mov
subb
lock
je
dec
test
popf
mov
sbb
std
xchg
arpl
call
and
testb
loop
sti
mov
in
jnp
pop
xchg
movsl
rcrl
js
mov
hlt
mov
sub
pop
outsl
push
mov
movsl
test
cmc
add
call
shrb
ss
insl
fists
dec
movsb
fidivrl
jle
jno
ret
jno
lock
insb
ss
mov
mov
xor
xchg
shlb
in
clc
test
fsubl
dec
sbb
mov
or
jl
mov
sub
xchg
addr16
xor
cmp
sbbb
inc
popa
jge
lahf
mov
je
lret
push
pop
les
mov
xchg
rcll
adc
bound
cmp
jp
insb
pop
mov
jle
push
fmuls
sub
int
sub
push
inc
mov
fimuls
jb
sarl
nop
sub
out
xor
movsb
icebp
das
ror
ss
imul
out
lret
lret
pop
adcl
lds
stos
xchg
pop
xor
outsl
adc
xchg
mov
or
lcall
enter
and
pop
mov
xchg
xchg
add
adc
dec
or
lea
pop
pop
add
sub
mov
outsb
add
xchg
mov
or
std
dec
clc
iret
lods
cmp
xchg
lods
repz
adc
cmp
jnp
sub
in
mov
sub
jp
mov
push
inc
movsl
mov
lods
mov
sub
mov
lea
xor
push
popf
mov
scas
stos
push
ds
fcmovnu
lret
push
sahf
cmpsl
leave
pop
or
dec
fmul
jo
call
xor
mov
mov
lahf
push
stc
xchg
fcmovu
div
call
jecxz
lcall
bound
adc
ja
cmpsl
cmp
popa
mov
push
lret
xor
add
aaa
sbb
inc
xor
test
aas
pop
mov
mov
sub
loope
jp
mov
pop
cmpsb
add
and
scas
mov
aaa
inc
add
out
mov
or
lea
cmc
fld
cmp
mov
addr16
orl
xchg
mov
xor
andb
pop
sete
adc
aam
cwtl
sbb
mov
xchg
call
or
scas
js
sbb
hlt
mull
fnstcw
test
stos
or
pop
scas
daa
ret
pushf
mov
inc
movsl
mov
aad
in
lock
sbb
std
xchg
jmp
mov
mov
xor
popa
push
adc
push
ret
idivb
and
fwait
fwait
cld
sub
jmp
and
adc
fcmovnb
mov
pop
mov
int
mov
cld
inc
mov
xor
push
or
std
inc
fadd
mov
sub
ljmp
inc
inc
out
fdivrl
inc
iret
dec
pop
pop
ljmp
call
xchg
mov
push
mov
stc
inc
cmp
scas
add
fcomp
sbb
iret
notl
mov
sub
inc
out
push
jno
mov
aaa
mov
add
push
sub
loope
or
aas
std
movsb
cmp
imul
aam
popa
jae
sub
or
inc
pushf
loop
stc
mov
fsubs
push
dec
mov
testl
dec
sub
enter
mov
pusha
adc
inc
mov
and
dec
ja
mov
shrb
adc
int
push
pop
or
mov
add
mov
push
push
or
sub
push
cmp
ret
push
or
dec
mov
add
push
adc
jle
ficomps
imul
movsl
mov
cwtl
mov
into
hlt
andl
lret
subb
repnz
pushf
in
pushf
shl
dec
push
lret
notl
cltd
lds
xlat
test
icebp
xor
adc
addr16
fstps
imul
jmp
adc
dec
or
insb
push
lds
mov
lret
and
mov
xchg
mov
cmp
cmp
push
ja
and
js
scas
jne
js
popf
lock
cmp
repz
xchg
or
fcom
lea
pop
cmp
ja
cmp
push
mov
xor
xchg
sbb
pop
mov
test
sub
fmulp
cmpsl
cltd
mov
aaa
sarl
push
aas
cmp
pop
lea
clc
ss
mov
call
scas
cmp
das
daa
insb
sbb
out
rcrb
add
in
shlb
cmp
bound
adc
mov
push
decb
movsl
push
mov
enter
xchg
xchg
push
mov
fs
xor
mov
push
je
lock
std
sub
rcl
mov
daa
xchg
add
ja
cld
in
inc
lods
mov
sahf
fsubrp
int
ret
or
imul
ds
cmp
and
xrelease
mov
push
sbbb
mov
mov
out
bound
dec
jg
fcmovnu
imul
out
aaa
imulb
setns
mov
mov
jo
push
leave
add
test
loopne
mov
sbb
aaa
bound
mov
lret
mov
mov
out
pop
pop
push
daa
test
icebp
stos
inc
movsl
inc
fnstcw
sbb
nop
das
or
sbb
test
repz
jns
fcmovnb
xchg
sbb
dec
push
out
loope
inc
mov
outsb
xor
in
mov
shl
sarl
adc
mov
cmp
push
mov
fdivrs
sbb
sub
es
add
sbb
mov
ljmp
xchg
imul
mov
jg
out
outsb
and
cwtl
cmp
stos
add
jae
xchg
add
mov
pop
data16
cmp
inc
jmp
outsl
mov
jge
cmc
fstpt
mov
push
clc
filds
sub
gs
jp
xchg
stos
mov
and
pop
lds
lock
lcall
and
pop
cltd
popl
lret
sub
pushf
ja
xchg
aad
ds
or
aas
xor
add
stc
sbbb
jnp
or
jae
test
inc
addb
inc
das
add
mov
inc
es
insb
jmp
sarl
pop
bound
pop
imul
lods
ds
pop
xlat
sub
arpl
or
js
insl
mov
addr16
jecxz
or
fiaddl
jg
jb
inc
xchg
pop
je
leave
mov
cmp
xchg
popf
enter
in
loope
xor
push
inc
addr16
adc
lods
cmc
aad
pop
mov
mov
jmp
aad
pop
imul
subb
dec
xchg
mov
bound
xchg
mov
lods
jge
je
in
adc
imul
pop
ret
imul
repz
iret
inc
shl
data16
les
add
xchg
mov
into
push
outsl
ror
loop
aam
sbb
cmp
shlb
mov
adc
es
inc
pusha
popa
mov
in
push
adc
sub
adc
dec
jb
sbb
xor
sub
movsb
addr16
mov
ds
mov
aaa
lret
adc
adc
mov
in
jle
int
enter
mov
clc
xor
xchg
test
mov
mov
pop
adc
xor
sbb
movsb
mov
or
movsb
ds
nop
mov
add
adc
rcrl
imul
push
data16
movsb
fldcw
sub
pop
loop
jecxz
jmp
pop
shll
dec
addr16
inc
mov
imul
mov
push
shll
mov
int
pop
cmpsl
jns
xchg
add
pushl
sbb
lods
sub
jge
into
fucom
inc
push
inc
imul
inc
ret
mov
std
jmp
and
scas
or
iret
mov
les
pop
lcall
mov
add
jae
mov
out
out
xor
mov
dec
fst
mov
add
mov
xchg
add
or
sar
xor
adc
pop
aas
fs
and
mov
jl
adc
fidivs
shlb
and
fildll
fdivr
iret
xchg
ljmp
and
jo
cmc
fidivrl
inc
pop
lahf
pusha
sub
or
push
jl
aam
add
into
pop
push
les
mov
in
rcll
pushf
repnz
mov
inc
sbb
push
pop
mov
fistpl
or
lahf
xor
xchg
shll
push
flds
cwtl
jmp
mov
out
int3
test
call
aad
inc
xor
sub
ds
in
stc
shll
push
in
push
mov
add
out
sub
clc
call
scas
and
sub
icebp
mov
xor
movsb
hlt
and
inc
xchg
pop
mov
roll
mov
sub
imul
fisubrs
inc
mov
add
lret
mov
loopne
addr16
or
stos
popa
or
adc
mov
xchg
les
jle
rclb
lret
dec
ljmp
rol
and
xchg
pop
xor
push
mov
leave
xor
cmp
pop
adc
inc
adc
xlat
sub
ret
ror
imul
in
adc
cmpsb
cmp
cld
lcall
sbb
sbb
into
dec
xchg
sbb
sbb
lcallw
mov
lret
jno
les
add
mov
test
jb
push
std
rcrl
cld
push
mov
cmp
and
data16
push
and
arpl
add
add
lds
xchg
mov
mov
jmp
scas
inc
cli
ljmp
add
jp
push
loop
aas
inc
pop
js
leave
xor
fisubs
jb
add
inc
arpl
jl
pop
mov
add
push
jo
std
leave
out
jp
nop
jnp
std
cmp
aas
pop
shll
xchg
mov
cli
mov
clc
or
cmp
call
xchg
xchg
pcmpgtb
js
push
mov
xor
frstor
cmc
into
add
in
sub
shl
mov
xchg
mov
popl
repz
loopne
xor
dec
pop
or
shrl
xor
inc
pop
jo
push
jae
dec
aas
mov
cld
outsl
mov
sbb
negl
ss
mov
jno
cmc
cltd
sbb
inc
jmp
jnp,pn
pop
test
pop
xchg
push
dec
push
lock
mov
stos
inc
jo
lds
mov
sbb
mov
lock
aam
or
push
shll
pop
sbb
pop
testb
arpl
cmp
push
push
xor
loopne
pop
cmp
fwait
std
sub
inc
andb
xchg
mov
jecxz
imul
mov
cmp
test
sbb
sti
push
dec
repnz
outsb
jne
and
jno
cld
sbb
icebp
adc
xchg
scas
clc
mov
xor
inc
sbb
jge
jnp
aad
repz
push
sti
add
outsb
cmp
dec
nop
mov
adc
js
adc
or
imul
sbb
lret
rcrl
adc
leave
mov
mov
ss
cmp
popf
in
frstor
pop
lea
das
or
mov
sub
cmpsl
les
fsts
sbb
dec
push
push
jg
sti
mov
or
fnsave
testb
xchg
out
jg
mov
and
push
call
mov
loope
stos
xor
xor
shlb
inc
cwtl
sub
pusha
sbb
pop
addr16
and
pop
and
dec
das
adc
aaa
xchg
sub
in
mov
enter
leave
or
stos
cmp
sbb
ds
bound
in
add
xor
cwtl
jns
jecxz
insl
movsl
mov
mov
js
add
pop
outsb
mov
pop
jne
pop
sahf
xchg
aad
cmpsb
les
mov
insl
scas
loope
cmp
rep
lods
outsb
fldenv
jl
mov
add
mov
push
rcll
sub
sbb
mov
pop
dec
shll
push
and
mov
mov
sbbb
inc
daa
jg
cmp
mov
push
xor
or
js
or
cmp
hlt
mov
inc
push
push
sub
or
bound
ja
push
xchg
pop
xchg
daa
sbb
fwait
push
push
push
addr16
scas
xor
out
repz
fsubrl
pop
dec
push
lock
cmp
stc
adc
outsl
lea
lods
aam
xchg
mov
jp
mov
xor
adc
dec
push
in
dec
int3
sbb
xchg
pop
dec
mov
test
mov
pusha
cmpsl
jmp
sbb
xorl
in
jmp
in
inc
lds
xor
adc
outsl
dec
inc
pop
sub
sarb
movsb
and
mov
or
or
mov
movntps
in
mov
jmp
mov
mov
out
clc
outsb
test
into
nop
push
cmp
mov
mov
cmp
repz
dec
dec
fcoml
pop
add
rclb
xor
cwtl
jnp
adc
test
adc
xchg
push
and
repnz
or
or
mov
lcall
jmp
jmp
adc
pusha
xchg
idivb
ljmp
xchg
xchg
cli
dec
jge
mov
sbb
sub
js
test
mov
inc
cli
nop
cmp
roll
cmpsb
sub
xchg
ljmp
in
sahf
sub
ljmp
add
or
ljmp
dec
mov
insl
test
dec
jmp
sbb
mov
lea
in
fcmovne
sub
inc
aam
mov
out
popa
xor
fsts
xchg
stos
sub
aad
shll
mov
test
out
or
push
xchg
fildll
rcrl
or
stc
jno
aam
pop
shll
cmp
add
mov
sbb
xor
sbb
dec
in
je
int3
movsl
sbb
xor
pushl
sbb
inc
jne
mov
sbb
push
dec
mov
mov
mov
push
adc
inc
xchg
and
xchg
dec
test
adc
loop
loope
mov
push
xchg
or
sub
ljmp
sahf
call
dec
pop
das
push
aam
into
push
add
push
dec
pushf
test
stos
xchg
out
sbb
dec
imul
lods
mov
mov
lods
cmp
add
mov
lret
dec
xchg
cmpsl
jnp
aam
jns
add
out
pop
shrb
push
std
xor
push
jno
or
or
dec
dec
inc
call
or
sub
les
pop
dec
sub
push
mov
xor
jnp
cli
mov
test
mov
loope
xchg
sarb
in
cmp
pop
rclb
repnz
adc
inc
adc
push
aas
cld
daa
jbe
sbb
sub
push
int
push
xchg
jne
inc
mov
mov
vcvtps2dq
xor
lahf
inc
inc
mov
je,pn
lret
mov
das
sub
out
jb
data16
add
xchg
and
mov
xor
in
arpl
adc
push
push
lahf
or
div
mov
insb
into
repnz
mov
shr
mov
bnd
cwtl
cmp
test
sub
ja
xchg
lcall
addr16
fstpt
inc
ds
xor
les
les
int3
dec
fs
mov
jbe
push
pop
add
idiv
fnsave
sbbl
ret
or
loop
arpl
pop
int
jb
sub
push
enter
pop
dec
insb
push
dec
test
mov
shlb
inc
dec
mov
pop
adc
jnp
ror
mov
cmc
cs
push
push
fnstcw
dec
mov
hlt
fs
stos
sub
sahf
test
in
test
mov
xlat
or
add
clc
adc
orb
mov
movb
jp
xchg
pusha
test
sahf
dec
xor
sbb
lock
int
pop
pop
imul
out
sahf
sbb
xchg
push
inc
jge
mov
lods
pop
sbb
in
repnz
sub
lds
xchg
test
pop
cmpsb
call
or
cmp
cmp
andl
ror
mov
pop
sub
mov
sub
movsb
mov
es
adc
aas
xchg
jo
or
sub
sub
xor
mov
popf
cmp
movsl
lods
hlt
or
daa
je
sti
pop
idivb
into
lods
test
aam
std
cmp
bound
inc
pop
gs
test
xor
ror
into
cmp
sub
rol
ret
js
pop
idivb
mov
jmp
pop
add
cmpb
bound
or
loopne
xor
add
sub
out
or
and
push
sub
lahf
pop
mov
adc
es
sub
mov
das
pop
mov
mov
ret
jp
adc
pop
sub
pop
js
pop
movb
mov
faddp
filds
xor
imul
loopne
sub
in
fldz
sub
call
dec
enter
sbbl
xor
sub
mov
rcr
pusha
test
lret
push
lea
test
adc
das
js
xchg
pushf
cmp
pop
push
push
mov
shr
out
mov
mov
mov
idiv
addr16
xor
sbb
and
adc
push
lds
adc
cmpsb
mov
xchg
and
cmp
cmp
sub
rclb
insb
jno
jp
cmp
mov
jecxz
pop
ja
and
clc
ficompl
sbb
inc
popa
xor
ret
shll
iret
ljmp
fstpl
jno
mov
es
jnp
cs
nop
push
mov
mulb
mov
popa
je
jg
fbld
addl
lahf
sbb
cmpsb
rol
ljmp
add
movsl
mov
jl
pushl
test
sbb
jmp
xchg
mov
pusha
mov
xor
insb
cld
jecxz
aas
fists
and
mov
cmp
adc
push
hlt
inc
subl
std
cmp
nop
icebp
stc
pop
idivb
add
imul
or
sbb
mov
push
sub
popf
nop
mov
outsl
and
mov
cmpsl
xchg
mov
cmpsb
bound
lahf
outsl
adc
or
cltd
push
jl
dec
dec
cmp
add
test
mov
les
fsubs
jae
dec
mov
arpl
cmp
xor
add
fistpl
pop
push
inc
xor
xchg
and
sub
scas
stc
pop
add
je
psubw
shll
jp
je
mov
push
sub
fcomip
ds
and
ret
push
adc
and
push
popa
xchg
jns
mov
mov
and
loop
jge
and
insb
push
xchg
push
out
fists
shr
daa
lods
or
pop
call
pop
jne
stc
pop
pop
push
adc
mov
sub
insb
sub
pop
int
or
mov
mov
push
dec
aaa
dec
sbb
dec
dec
fs
mov
and
fistpl
mov
xor
dec
jg
scas
add
ds
fildll
push
es
sbb
add
clc
push
outsb
jl
nop
adc
mov
fldcw
jns
pop
jg
jns
arpl
les
mov
subl
add
inc
mov
fists
stos
pushw
jl
sbb
cld
jae
pop
shlb
xchg
enter
movsl
adc
test
cmc
sti
movsl
out
loope
push
sub
lcall
adc
mov
fnclex
mov
jns
mov
adc
cwtl
test
gs
sbb
scas
fstpt
xor
in
aaa
outsb
into
cmp
or
insl
outsb
stos
sti
jecxz
std
mov
cmc
inc
imul
mov
sub
mov
mov
clc
call
sub
and
mov
filds
ficoml
jge
out
cmpsl
sahf
lea
addr16
cltd
sub
dec
inc
stos
mov
jae
insb
push
mov
mov
add
or
sub
popf
mov
push
cld
popa
mov
dec
pop
jmp
iret
add
add
ja
test
mov
dec
jns
inc
and
insb
mov
mov
fdivrs
hlt
push
mov
test
rclb
xor
sbb
sti
ljmp
inc
mov
or
mov
fiaddl
dec
data16
repnz
imul
lret
xor
hlt
rorb
mov
jne
es
loope
inc
hlt
push
sti
cltd
out
mov
mov
es
jnp
out
dec
fimuls
rcrb
pop
mov
ja
jne
mov
arpl
xor
es
bound
js
ja
and
repnz
push
sbb
fadd
popl
movsb
xor
push
andl
cmp
mov
arpl
sub
fdivr
sbb
insl
mov
test
push
mov
mov
test
rcll
ficoml
movl
loope
rcrl
dec
sbb
xor
fimuls
frstor
mov
sbb
dec
addr16
jecxz
push
int
test
pusha
mov
mov
scas
out
daa
jno
rcr
cmpsl
sbb
jo
inc
adc
adc
push
es
sbb
xchg
mov
pop
jne
shll
or
mov
and
fimuls
mov
icebp
push
stc
and
add
xchg
clc
mov
or
add
mov
in
fadds
test
mov
in
push
and
adc
lods
nop
jne
and
cld
xor
cli
ljmp
adc
repz
add
mov
xchg
dec
jp,pt
xor
cmp
mov
lock
xor
mov
das
divl
xor
popf
pop
int
sub
adc
cld
sub
rcll
sub
jne
mov
jnp
pop
mov
xor
jno
cmp
cmpb
jecxz
mov
dec
push
jmpw
jno
cwtl
jge
cli
enter
test
xchg
pop
xor
sub
fcoms
fcoml
loopne
xor
xor
ja
and
cmc
jne
pushf
pop
inc
jbe
mov
pop
fs
mov
or
pop
mov
jp
ja
ja
sub
decl
ljmp
gs
add
icebp
int3
ljmp
xchg
nop
or
insb
xor
sub
mov
aaa
outsb
out
std
rcll
repz
rolb
test
pop
jp
test
mov
jbe
mov
test
push
dec
xor
notl
xor
push
decl
out
mov
stc
jo
test
loope
add
sahf
repnz
cs
or
or
xorl
add
in
add
cwtl
in
cmp
lods
int3
aad
cmp
and
cs
inc
jbe
xchg
subb
mov
aad
dec
mov
sbb
ret
mov
jb
mov
adc
imul
mov
repz
sub
inc
sbb
xor
lods
push
mov
loopne
jge
aas
cmpsb
mov
sbb
icebp
add
js
aas
jle
fcoml
fs
icebp
fs
lahf
xor
lods
push
outsb
inc
or
mov
imul
mov
dec
imul
test
popf
data16
xor
xor
or
leave
push
movsl
pop
lret
lods
or
mov
pop
stos
cmc
and
inc
out
int3
insl
daa
pop
mov
jb
fwait
rcll
or
int3
cli
pop
jne
sub
xlat
sbb
fbstp
xchg
lcall
add
neg
pop
xlat
jne
mov
scas
mov
jb
jnp
fdivrl
mov
mov
xchg
xchg
sysret
fcompl
out
adc
push
push
imul
mov
sbb
cmp
ja
call
shrb
int3
sbb
repz
jmp
clc
inc
jne
mov
dec
xorl
lcall
xchg
pop
leave
cmp
cli
add
adc
adc
pop
mov
add
test
das
repnz
pop
and
jmp
and
fisubrs
jo
mov
mov
dec
data16
shlb
ror
lock
mov
jo
mov
je
pop
add
or
data16
or
imul
out
push
mov
dec
jne
jb
sbb
dec
mov
aad
mov
shlb
mov
jb
sbb
aaa
mov
popf
push
std
xor
movsl
sbb
fsubp
lcall
add
mov
jnp
cmc
cmp
push
imul
xor
dec
pop
ss
lret
mull
jge
pop
ljmp
pop
dec
sahf
mov
mov
xchg
xchg
and
cmp
je
inc
enter
xchg
ja
pop
mov
data16
andb
xchg
adc
cmp
cmp
repz
pop
loope
xchg
frstor
mov
pop
pop
lock
cmp
stc
bnd
test
push
out
xor
or
inc
mov
dec
mov
in
cmpsb
or
pop
mov
xchg
sub
push
mov
jl
mov
mov
movl
stos
ja
jp
cmpsl
push
fstp
push
cmp
inc
pop
push
xor
sub
mov
sub
pop
pop
xor
sti
and
fs
mov
aaa
lret
fdivs
jg
js
call
mov
repnz
stc
jle
or
mov
cld
icebp
mov
sbb
cmp
test
fwait
push
iret
mov
outsb
mov
sub
add
sbb
push
cltd
pop
pop
cmp
jns
xchg
shlb
inc
mov
insb
xchg
adc
xor
inc
ss
cmc
pop
xor
insb
ljmp
pop
daa
rolb
push
mov
sub
jb
pop
add
outsl
scas
mov
or
xchg
mov
mov
ret
mov
ja
stos
lock
xor
out
pop
mov
aas
sbb
mov
pop
fwait
mov
hlt
insl
cld
popa
mov
add
add
repz
add
xchg
sbb
pop
mov
data16
outsb
mov
shll
push
cli
aas
cmp
fldl
push
call
pop
and
lcall
int3
bound
adc
mov
adc
enter
push
inc
sbb
cmp
xor
push
cmp
jmp
iret
or
jg
mov
or
les
in
aam
in
nop
call
jge
sbb
fwait
push
dec
mov
insl
ror
fistl
and
push
imul
and
dec
jmp
sti
out
cs
push
loopne
popa
lahf
in
lods
mov
mov
jg
lods
loop
stc
ss
xor
mov
fsubs
mov
cltd
sahf
icebp
adc
mov
mov
inc
mov
in
cld
iret
out
mov
je
call
in
enter
push
push
repz
add
repz
lahf
sti
test
mov
or
jnp
jno
push
xor
and
sbb
add
pusha
add
dec
js
out
inc
arpl
lahf
sbb
cmp
inc
fxam
fadd
xchg
aad
jg
add
lock
mov
not
pop
mov
inc
lods
ud1
data16
adc
sbb
imul
jge
mov
pop
mov
dec
mov
leave
sbb
mov
ds
testb
pop
jge
sbb
mov
dec
imul
push
ds
jmp
push
pop
dec
js
mov
jnp
add
sub
das
sahf
lret
pop
mov
cmp
jns
fistpll
xor
mov
and
movsl
jbe
mov
xchg
lcall
push
or
mov
fxch
daa
push
lock
cmp
stc
orl
jmp
push
jge
sub
loopne
iret
mov
inc
jo
inc
das
ljmp
cld
cmpsb
or
inc
cmc
fs
inc
sub
xor
sti
movsl
xchg
add
in
push
jo
mov
push
cmp
jl
mov
push
or
sti
call
dec
sub
xchg
and
jmp
jl
outsl
insl
hlt
mov
fwait
je
mov
inc
cmp
popf
cmpsl
mov
hlt
mov
push
ret
movsb
out
jmp
sub
popa
popf
jo
dec
xor
push
pop
loop
xchg
mov
inc
ja
adc
xor
push
jno
push
loope
push
adc
dec
loopne
xor
cwtl
xorb
shll
sub
leave
fildl
push
mov
jmp
inc
cmp
das
pcmpgtb
push
pop
test
bound
cli
cmp
cli
mov
xor
in
gs
jl
jecxz
inc
sti
pop
xchg
iret
cwtl
cmp
out
cltd
lock
jge
ss
cmp
sbb
cmc
scas
out
xlat
inc
jb
rclb
lahf
pop
push
testl
popf
aam
sbb
jo
call
addr16
pop
and
shll
cmp
lcall
push
mov
xchg
jo
ret
ja
xor
pop
cmp
adc
les
aad
push
rcll
mov
cmp
sbb
lret
scas
mov
sbbb
addl
push
cmp
psadbw
stos
shrl
xlat
sub
aad
sub
fs
sti
addb
inc
je
in
dec
add
push
bound
sbb
adc
add
or
fdiv
xor
in
test
dec
jns
repnz
in
sbb
lret
mov
jl
pop
and
addr16
imull
adc
imul
or
inc
lcall
inc
and
push
lock
out
cmp
push
mov
xchg
cmpsb
cli
fmull
outsb
cmp
sahf
pop
cmc
int3
aam
in
jbe
lock
or
mov
je
iret
mov
aas
insb
xor
xorb
xchg
je
adc
jl
sahf
mov
push
or
lahf
aas
jae
adc
imul
mov
sbb
add
pop
xor
fs
cmp
mov
cmp
repz
ds
xchg
fisttpl
dec
mov
repz
pop
pop
cs
mov
push
push
dec
push
push
jle
sbb
adc
testb
lock
sti
or
jl
mov
in
mov
cltd
das
mov
lds
pop
fsubl
fistpll
jns
mov
fucom
in
adc
mov
jl
lret
fsub
subb
xchg
mov
mov
jl
stc
jecxz
outsb
inc
out
aas
scas
lcall
or
insb
mov
repnz
push
lds
xor
jb,pn
icebp
in
add
push
call
mov
idivb
jp
inc
mov
sub
xchg
cmp
cmpsb
mov
lea
pushf
mov
cmp
test
inc
jl
int3
sbb
jp
jge
and
bound
ds
adc
push
jmp
fcompl
push
adc
sbb
dec
jg
xchg
je
fcoms
cmp
pop
je
pop
jae
lcall
cmpsl
push
enterw
inc
jmp
xchg
cltd
sbbb
test
test
jne
jno
mov
stos
inc
sti
out
jno
aas
mov
sub
scas
jnp
and
sbb
loope
lea
dec
add
or
mov
ljmp
insl
cld
sub
push
push
xor
addl
jno
jns
mov
jl
ret
mov
cld
rcrl
sbb
jns
mov
outsb
adc
gs
fistpll
sbb
cltd
lcall
fidivrl
cld
xor
stos
push
jp
xchg
pushl
hlt
push
inc
xchg
xlat
inc
test
mov
gs
pop
mov
inc
lods
sbb
in
mov
fists
fcoms
nop
loope
pop
ss
mov
dec
lcall
mov
out
adc
mov
sbb
inc
std
mov
out
dec
adc
sub
mov
push
push
lea
popl
xor
movsl
lock
les
pop
xchg
lods
lds
push
je
orl
xor
inc
pushf
int3
jp
fildl
sub
ret
push
int3
les
out
dec
sbb
mov
push
loop
and
fbstp
or
enter
shr
sbb
or
add
push
popa
movsl
mov
testb
mov
pop
out
mov
sub
aad
aam
out
lock
inc
jg
insb
add
fistl
notl
push
jnp
push
repz
jno
mov
scas
in
into
push
jo
xchg
or
mov
mov
divl
and
jo
bound
sub
sbb
stos
push
or
leave
jnp
sbb
mov
push
sarb
sarl
scas
jle
adc
and
sarl
test
jmp
insb
push
and
ret
orb
es
or
fwait
test
push
fsts
pop
fisubl
mov
out
adc
cmpsb
xor
in
aad
xchg
arpl
sub
ret
sub
into
imul
adc
shll
rol
inc
shll
add
ret
adc
jle
out
mov
inc
ss
sarl
push
pop
mov
push
fidivrl
cmpb
loop
addr16
movsb
xor
std
pusha
jo
fldl2e
ja
shlb
jecxz
pop
jb
jns
pop
int3
icebp
inc
cmpsl
loop
clc
cli
ret
mov
cmp
test
pop
fcompl
mov
jp
roll
stos
ljmp
incb
xchg
cli
add
mov
imul
jo
imull
or
or
inc
call
or
cmp
dec
push
test
repz
sub
scas
xor
mov
cs
jne
lods
pop
insb
adc
dec
add
sub
outsb
loop
outsb
sub
jg
cmp
ljmp
cmc
mov
cld
mov
mov
rcrl
std
cwtl
jmp
mov
jg
mov
mov
repnz
in
dec
sub
js
inc
mov
dec
jbe
into
mov
int
xchg
insl
or
jp
icebp
jecxz
inc
sahf
pop
mov
sub
or
sub
shlb
fsubr
test
mov
addl
sahf
push
and
mov
sti
and
shll
mov
jno
xor
push
fadd
test
mov
inc
mov
aam
add
out
hlt
mov
cli
or
sbb
cmpsb
loopne
inc
xchg
jg
xor
rcl
sti
fstps
es
mulb
repnz
jae
fdivrp
xor
sbb
mov
add
enter
mov
pop
icebp
std
out
icebp
add
imul
fcmove
lods
inc
jnp
repnz
mov
cmpb
xchg
and
or
hlt
mov
sub
and
rorb
mov
in
stc
xor
in
fwait
mov
inc
fnstenv
push
cmp
or
pop
fistps
or
js
xorb
or
inc
cmc
in
push
lods
andl
cmp
and
fsts
and
sub
and
push
lea
mov
cmp
add
and
outsb
out
xor
addr16
cmp
frstor
cmpsl
cs
insl
nop
imul
adc
and
mulb
ljmp
int
lret
ja
jno
cmpb
push
adc
scas
ficomps
xchg
int3
cmp
mov
and
inc
in
ret
jbe
shrb
inc
jmp
cmc
icebp
lret
mov
xor
iret
lods
jb
adc
sub
jle
push
mov
cmp
aas
ljmp
sbb
dec
push
repz
test
sub
push
arpl
xchg
movsl
dec
mov
rcl
jbe
inc
xor
xor
icebp
pop
cmp
or
sbb
hlt
xchg
pusha
filds
icebp
inc
sbb
pushf
xchg
cmp
xchg
rcrb
jnp
ja
xor
lods
mov
or
sub
in
mov
cmp
fimull
xchg
insb
xchg
inc
mov
hlt
ss
xor
in
cltd
adc
cwtl
and
cmp
sbb
pusha
fstps
add
or
sub
dec
fwait
dec
xchg
daa
mov
cmp
add
repz
mov
repnz
xchg
xor
repnz
jno
inc
jae
adc
lret
mov
ret
push
pop
sbb
lahf
test
or
xchg
fldl
sbb
fwait
cmp
ret
jno
add
insl
sti
dec
pop
popf
inc
in
jb
syscall
pop
hlt
aam
sbb
repnz
pop
pop
mov
jb
add
mov
push
scas
in
icebp
lods
aaa
inc
jecxz
fwait
orl
mov
jbe
insl
jbe
aaa
vorps
mov
mov
xchg
or
data16
popf
popf
mov
pusha
dec
sub
cmpsl
addr16
mov
jo
lcall
roll
jecxz
pop
addr16
lret
cltd
and
push
sub
arpl
xchg
pushf
mov
or
add
jl
ss
or
pop
popa
jbe
pop
pusha
mov
bound
or
loope,pn
inc
scas
or
icebp
jne
cmp
repnz
movsl
mov
xchg
sub
and
scas
andb
repnz
je
lock
and
mov
push
mov
sbb
cmpsb
fcomip
movsb
lret
iret
scas
addr16
in
jae
mov
sub
adc
cmp
jl
sub
mov
and
arpl
sub
fiaddl
aaa
mov
mov
std
cs
push
jg
jbe
and
jge
xor
ss
push
mov
cmp
mov
cmp
inc
rolb
and
mov
pushf
repz
insb
cwtl
in
out
ja
sub
xchg
xchg
loop
je
push
orl
mov
outsl
inc
jg
adc
sbbl
dec
stos
mov
test
and
sti
pop
mov
lcall
rorl
nop
jmp
inc
fs
outsb
lret
notl
adc
pusha
push
push
dec
rorb
ret
loope
jecxz
outsl
pushf
push
imul
sarb
fdivs
cmpsb
mov
lds
cmpsb
arpl
ds
dec
push
sti
mov
jp
dec
lret
iret
push
rolb
dec
sub
push
int
jle
sarb
gs
stos
mov
subb
or
ja
mov
jg
or
in
dec
xor
adc
iret
out
ss
mov
xchg
popf
dec
xchg
jp
dec
mov
int
aam
push
push
testl
ror
adc
lret
and
xchg
ja
lret
sub
push
mov
sub
into
dec
pop
mov
pop
pop
stos
repz
repz
out
sbb
sbb
adc
jg
fsubrs
lock
dec
gs
out
scas
mov
pop
jae
sbb
sub
xor
mov
cwtl
into
mov
clc
scas
cmp
jle
je
mov
lock
mov
pop
ret
lock
insb
mov
jb
insb
add
mov
leave
les
sbb
add
jnp
arpl
pop
imul
xlat
push
add
insb
xchg
orb
cmc
call
cmp
xchg
or
mov
xor
xchg
cmp
ret
in
xor
mov
repz
mov
cs
jo
mov
mov
leave
sti
hlt
loopne
sub
sbb
fldt
mov
mov
in
sub
popa
and
mov
lret
fs
sub
js
roll
fcomip
imul
popf
fwait
mov
shr
and
stos
mov
push
fnstenv
ljmp
jg
fwait
cmp
inc
pop
mov
mov
insl
aad
lea
in
jbe
adc
scas
data16
lods
int
dec
jb
outsb
adcl
ja
cs
push
or
xorb
daa
lret
notb
shlb
and
adc
mov
or
adc
or
push
jp
jle
pop
notl
push
fs
push
pop
lds
aam
and
gs
daa
mov
jle
cmc
bswap
stc
push
icebp
popf
sbb
or
sub
jns
or
in
mov
lock
xor
jmp
pop
sbb
xchg
lahf
mov
int
imul
sbb
int
add
iret
cmc
add
rorl
xchg
call
lret
dec
pop
push
fwait
idivb
mov
shlb
cmp
mov
arpl
adc
movhps
lret
dec
ss
ja
lock
fcoml
push
jp
outsl
mov
push
out
andl
out
pop
ss
sbb
je
add
shl
or
popa
fdivp
push
cmp
and
push
pusha
push
sub
mov
gs
sti
mov
adc
push
rolb
dec
sbb
mov
orl
cmp
dec
dec
jg
jae
jb
pop
cmp
lret
pop
sub
pop
mov
pop
les
test
lea
inc
das
xchg
dec
cmpsb
mov
cmp
iret
dec
and
jmp
setne
dec
daa
in
or
aaa
and
jb
pusha
pop
cld
call
es
sub
shr
lock
ljmp
jmp
loopne
mov
fidivrl
jle
nop
fcoms
jecxz
aam
mov
and
das
cld
orl
pushf
sahf
aaa
shll
mov
push
mov
ja
mov
jbe
sbb
roll
xor
sub
mov
in
cli
andl
pop
inc
rcrb
scas
sub
hlt
sub
aam
push
sub
mov
mov
jb
inc
inc
repz
rclb
aad
dec
mov
fdivrs
and
and
and
inc
cmp
cwtl
xor
cmp
jno,pt
icebp
cmp
cmp
inc
sub
push
jmp
mov
ljmp
cld
inc
fstl
rclb
cltd
sbb
inc
sbb
xchg
popf
enter
push
add
mov
mov
mov
ja
stos
ljmp
ficoms
mov
add
jecxz
and
xchg
xchg
test
add
jne
sbb
insl
ret
inc
repz
jns
rcr
outsb
fildl
push
or
mov
inc
testb
push
jo
dec
xor
xchg
out
jnp
mov
mov
repnz
out
roll
adc
add
sub
xchg
pop
ficompl
adc
or
cmpsl
fwait
rcl
pop
out
jo
in
push
es
xchg
loope
movsl
and
sti
sbb
insb
lds
adc
shl
xchg
lods
xor
lock
adc
clc
popa
jo
outsl
lods
pop
pop
sbb
jmp
sbb
cmp
mov
dec
sbb
iret
icebp
mov
dec
insb
and
adc
xor
insb
pop
mov
call
rorb
jb
mov
pusha
mov
lret
gs
xor
clc
iret
jge
push
outsb
lcall
test
lret
jae
dec
xchg
pop
mov
jg
or
fwait
dec
fcoms
push
mov
push
sbb
jne
bound
ljmp
inc
je
ss
mov
or
rcrb
popa
mov
aaa
jo
pushf
xor
cmp
js
push
dec
lock
mov
inc
jg
scas
out
cmp
int3
ret
cmp
test
mov
add
movsl
test
dec
test
into
jno
inc
dec
dec
filds
jne
and
fmuls
test
fmull
cmp
xchg
loop,pt
rcll
repnz
push
sub
popf
mov
ja
movsb
pop
dec
jge
subl
test
ret
jg
lods
test
mov
xchg
in
add
adc
sbb
jno
and
xorl
lock
mov
ja
nop
repz
fldenv
mov
xchg
inc
fdiv
push
ja
inc
sbb
or
push
bound
sbb
sub
outsl
lcall
frstor
push
xchg
ds
cmp
out
in
adc
xor
pushf
mov
add
sub
sbb
in
out
test
or
sub
sbb
movsb
inc
lcall
mov
icebp
dec
rcrb
push
int3
dec
hlt
cmp
add
js
mov
outsb
fidivrl
out
xchg
push
jb
les
push
mov
adc
popf
fists
repnz
pushf
jnp
bound
inc
mov
repnz
xor
pop
jl
mov
xchg
ret
pusha
mov
and
pop
test
scas
or
xchg
cmpl
xor
scas
and
jns
sti
pop
xlat
shlb
sub
or
scas
ja
in
or
mov
xchg
pop
movsb
into
js
iret
xchg
dec
mov
and
jp
lea
push
es
or
and
int
fldcw
dec
aad
jmp
dec
movsl
shll
pop
outsl
push
inc
aas
mov
adc
inc
jae
push
adc
xchg
shll
mov
adc
pop
cmp
inc
lock
mov
push
std
inc
cmc
xchg
aad
mov
and
pop
jo
adc
leave
les
jl
xlat
shrl
adc
ljmp
sbb
out
cmp
push
pop
and
mov
test
cmp
xchg
push
ret
cmpsl
adc
push
frstor
in
out
jo
subl
repnz
pop
and
ret
jne,pn
xor
xchg
imul
dec
jne
push
push
lods
sbb
stos
ret
inc
jge
testl
sahf
dec
add
jnp
fists
out
jbe
mov
adc
rcr
dec
pop
xchg
inc
xor
fcmove
insl
mov
jno
dec
mov
ret
clc
out
cld
insl
sarb
out
sahf
punpckhwd
bound
or
repz
cmp
xlat
fcmovnbe
cmp
xchg
aad
jo
gs
mov
test
adc
add
pop
xchg
and
loop
aaa
pop
insb
pusha
cs
shll
ds
mov
and
xchg
lcall
adc
add
xchg
xor
mov
clc
lahf
cmpsb
xchg
push
sub
add
roll
adc
and
popa
pop
mov
daa
push
xchg
mov
pop
lret
adcb
xchg
adc
adcb
xor
and
push
lock
std
mov
js
pop
fs
jnp
or
and
in
scas
add
inc
jae
lret
sti
bswap
sub
jmp
clc
enter
test
jb
pop
leave
fstpl
clc
and
xchg
mov
cmpsl
sub
std
jno
aam
jbe
out
push
stc
lcall
jg
lret
arpl
jp
or
in
sub
jl
pusha
or
lock
fnstcw
insb
push
popa
jge
in
clc
roll
mov
push
rcrb
jmp
mov
leave
inc
sbb
xchg
dec
mov
mov
decl
sbb
dec
rclb
pop
lea
fstpl
mov
cmp
subl
daa
popf
lcall
jecxz
jge
sar
pop
addb
pop
mov
repnz
ffree
aad
je
mov
adc
mov
aas
sahf
bound
pop
sub
aad
mov
mov
jle
jo
jmp
test
lea
flds
inc
adc
pop
aas
mov
cmp
mov
in
lahf
xchg
pop
iretw
adc
jmp
jl
dec
or
test
sbb
mov
lods
test
shlb
mov
mov
mov
stos
or
rclb
dec
xlat
repz
push
rcl
sbb
fmuls
iret
ljmp
and
jnp
bound
shrl
or
cmp
mov
imul
dec
std
dec
rcrl
sub
mov
jge
mov
mov
xor
stos
sub
mov
dec
pop
cmp
cmp
js
lods
mov
in
je
push
shl
mov
sub
and
sbb
adc
mov
arpl
fwait
mov
mov
rcll
add
das
add
or
popf
dec
adc
shrb
sub
rorb
xor
fdiv
arpl
xor
sahf
xchg
dec
imul
xchg
aad
and
inc
test
dec
cmpsb
adc
fwait
jle
out
push
and
aaa
pop
sub
jle
movsb
daa
sub
lods
or
xchg
out
cmp
inc
in
pop
mov
push
out
int
and
aam
mov
cmpsb
in
mov
fxch
outsb
pop
ja
sub
sbb
cmp
lret
sub
or
ja
sub
jg
fcomip
shr
fadds
jmp
adc
shrl
popf
enter
mov
cmp
adc
loopne
jg
lcall
ficompl
cmp
outsl
mov
bound
adc
pop
sub
and
pop
shll
ret
mov
mov
xchg
mov
sub
fdivrl
or
jmp
sub
dec
xchg
inc
cwtl
stos
lea
adc
loope
inc
push
ret
mov
xchg
dec
mov
pusha
dec
mov
aam
loopne
addl
jl
lods
enter
ja
xchg
inc
inc
jno
mov
dec
nop
cmp
cs
ja
and
outsl
ror
add
mov
push
xchg
adc
add
cltd
xchg
mov
jg
loope
cwtl
pop
fildll
test
add
out
out
je
adc
adc
js
push
icebp
pop
int3
lahf
andl
push
negb
inc
and
rep
push
stc
push
out
mov
cmc
push
add
sub
aad
hlt
adc
roll
int3
out
or
in
add
push
or
lahf
pop
cmp
add
enter
dec
mov
sahf
mov
mov
shrb
out
cmp
push
mov
in
ja
inc
sbb
dec
push
dec
out
lods
or
push
xor
adc
push
push
mov
mov
scas
rorb
outsl
fwait
cltd
loop
mov
insl
mov
adc
pusha
cmp
shr
or
jo
and
push
aad
call
mov
lds
push
out
jns
fwait
sub
int
mov
add
mov
and
sub
test
mov
nop
lea
push
inc
sbb
push
or
insl
ja
inc
repnz
or
jecxz
jb
pop
enter
neg
iret
ljmp
cs
aam
xchg
mov
sahf
aas
imul
jb
addr16
lret
outsb
stos
scas
hlt
xchg
sbb
inc
adc
xchg
sub
adc
icebp
xchg
mov
xchg
cwtl
into
sbb
or
movsl
xchg
xor
xchg
cmp
clc
lds
fsubr
fiadds
adc
and
cld
shrb
pop
cmp
test
ja
in
jne
scas
dec
xor
inc
sbb
xor
cld
mov
ret
mov
mov
imul
dec
add
jge
inc
mov
aaa
adc
das
jmp
xchg
xor
mov
inc
fmull
je
cmpsl
idivl
sar
sub
add
mov
lret
flds
dec
fdivr
or
jp
push
mov
repnz
call
or
adc
stos
out
or
jecxz
xor
inc
pop
mov
lret
shrl
sbb
inc
push
jb
in
xor
inc
and
push
mov
mov
xor
xchg
dec
cmc
cmp
scas
jae
aaa
dec
jmp
jmp
roll
test
sbb
movsl
add
addr16
push
pop
inc
sub
xor
dec
repnz
leave
jecxz
inc
mov
mov
movsb
cmpsb
jp
das
cltd
push
add
pop
sbbl
pusha
push
mov
fs
mov
pop
fs
lcall
icebp
adc
jne
jbe
aaa
insb
adc
loopne
imul
pop
cmp
rcrb
movsb
stos
xchg
pop
add
xor
inc
sbb
lahf
xor
bts
movsl
adc
rcrb
rcll
data16
jns
cwtl
mov
add
cld
or
mov
jbe
fwait
lock
or
test
or
mov
push
mov
xchg
rcrl
loopne
bnd
testb
nop
cmpsb
sub
test
subl
les
or
jmp
arpl
ficoml
adc
add
push
sub
push
ljmp
mov
lcall
into
or
repz
push
loop,pt
push
pushf
add
push
cltd
xor
insb
inc
aad
mov
xor
add
or
jecxz
repz
nop
mov
push
and
shrl
and
pushf
mov
xchg
adc
hlt
push
shrb
fistpl
mov
push
adc
es
push
out
mov
mov
cmp
bt
cltd
iret
or
jp
mov
push
shll
add
lret
inc
sub
in
icebp
push
pop
gs
push
push
xchg
lret
push
mov
mov
and
jg
pop
sbb
adc
cwtl
pop
mov
push
inc
lretw
popf
pop
adc
insl
inc
loopne
jne
insl
mov
stos
rcrb
test
sub
test
sti
test
pop
mov
add
jecxz
xlat
and
pushf
jmp
add
cmp
lret
dec
fs
loopne
jge
xchg
sbb
movsl
dec
mov
mov
add
loope
std
cltd
inc
jge
sarl
int
mov
fistpl
in
ja
sbb
add
push
inc
xchg
shlb
inc
icebp
mov
cmp
jmp
clc
daa
jb
arpl
jne
pop
lods
and
ret
scas
jo,pn
push
mov
mov
mov
stos
lock
iret
mov
cmp
sub
pop
pop
ljmp
imul
cmc
loope
lock
xchg
mov
mov
add
xchg
jp
cmpsb
stos
inc
dec
ljmp
mov
mov
mov
fnstenv
fnstenv
daa
sbb
sbb
mov
lock
repz
shll
push
add
pop
pop
xorb
xchg
out
adc
xchg
cmc
leave
pop
test
mov
mov
cli
lock
jle
ds
movaps
cli
inc
clc
and
cmpsb
push
test
or
pop
xchg
xor
cli
mov
movsb
pop
lcall
pusha
adcl
loop
jmp
push
aam
mov
pop
or
sub
lret
or
pop
inc
lock
aam
mov
jle
test
mov
mov
data16
sbbl
mov
je
push
and
sbb
stos
mov
mov
inc
pop
jae
ja,pt
mov
cld
test
nop
lret
push
jo
insb
in
xchg
ja
dec
sub
clc
into
dec
in
pop
mov
je
pop
pop
or
adc
mov
jo
pop
cltd
pop
and
scas
and
es
push
enter
iret
pop
mov
push
xchg
cmpsl
imul
sbb
mov
pop
out
insl
hlt
loop
xor
bound
xchg
push
xor
mov
adc
push
mov
mov
je
pop
xor
add
loope
adc
jmp
in
push
push
jl
ja
adc
imulb
orl
add
xchg
out
int3
in
stos
insb
or
cmc
cmp
in
lea
aad
or
pop
jb
add
rclb
cli
mov
sbb
out
cs
imul
jno
repnz
repz
xchg
test
in
sti
enter
and
repz
mov
push
add
mov
inc
push
inc
test
fidivs
xchg
mov
dec
dec
outsl
imul
out
icebp
clc
or
iret
xchg
fistpll
aad
push
mov
es
test
movsl
jp
add
adc
loopne
mov
scas
xchg
mov
mov
add
push
leave
lret
mov
gs
jno
icebp
push
cmp
mov
mov
cli
fldl
and
dec
cmp
jne
fsubl
and
inc
adc
pusha
pushf
clc
mov
inc
ss
jg
mov
lods
lds
sbb
cmp
dec
in
lcall
arpl
pop
addr16
ficomps
jno,pt
decl
outsb
in
lds
mov
cmpl
inc
in
xchg
and
dec
stc
aaa
repz
mov
daa
jge
insl
jl
jp
cmpb
lea
push
sub
xor
fstl
push
shrb
scas
insb
inc
inc
mov
or
xor
mov
pop
insb
add
scas
je
xlat
pop
jbe
xchg
pop
aas
mov
add
jge
mov
ja
inc
mov
pop
push
mov
or
in
and
fdivrl
dec
mov
sbb
fsubrl
lea
leave
xor
push
mov
jno
jmp
and
fdivrl
rolb
add
xchg
and
push
jb
push
scas
or
cmc
iret
push
push
cmp
xor
aaa
jg
lds
aad
movsl
cmc
or
jl
test
pop
inc
push
xchg
lock
xlat
loopne
push
mov
ss
lret
pop
mov
sub
pop
test
pop
mov
out
dec
jo
push
adc
sahf
jl
mov
in
ja
in
mov
xor
xchg
faddl
dec
imul
outsb
stos
pop
inc
pop
push
bound
xchg
out
cli
cmc
stos
fmull
stos
and
in
movsl
mov
jg
movsb
loope
ljmp
dec
mov
add
lock
in
in
punpckhwd
jmp
adc
push
imul
mov
popf
pushf
repz
daa
jb
andl
adc
ret
test
cmp
pop
das
mov
jp
lret
mov
gs
outsl
mov
pop
push
fcompl
adc
outsl
repz
iret
imul
jae
loop
sbb
mov
lahf
dec
mov
fnstcw
cmp
mov
out
enter
fnstenv
jecxz
clc
jae
xchg
rcr
scas
adc
dec
pushf
cwtl
and
fimull
xor
pop
mov
and
call
mov
and
cld
in
insb
fs
mov
fldt
pop
jge
dec
lds
jge
mov
jge
in
lret
pop
aam
xor
sahf
mov
mov
mov
mov
pop
imull
out
pop
icebp
test
test
xchg
xchg
repz
mov
in
rolb
js
jecxz
aad
sbb
adc
ljmp
mov
scas
xchg
shlb
movsl
sbb
inc
nop
pop
mov
xlat
pop
mov
adc
sbb
mov
push
xchg
and
cmpsb
out
or
ja
sbb
inc
push
mov
jecxz
lahf
pop
leave
inc
mov
jp
call
and
push
cli
mov
cmpsb
clc
sbb
and
pop
popa
push
xchg
mov
jle
rol
scas
jmp
pusha
sub
add
sar
pushf
les
sub
cmp
int3
lret
jecxz
sahf
push
and
stc
lahf
or
loop
dec
sti
or
pop
inc
and
pop
notb
mov
stos
mov
add
enter
push
push
cmp
add
xchg
jmp
aad
insl
jl
loope
insl
enter
xor
pop
cmp
or
cli
mulb
inc
icebp
cmp
lret
aas
mov
cmp
xchg
loopne
xchg
shl
xchg
sbb
push
ret
scas
cmp
scas
scas
fstpl
ja
add
pop
dec
lods
loope
in
sbb
mov
or
in
mov
aaa
nop
xchg
fwait
dec
inc
out
inc
cmc
inc
cmp
pop
icebp
imul
lret
push
sub
mov
xchg
dec
imul
aad
or
dec
cs
jge
enter
insb
mov
mov
xor
sarl
shll
push
test
sub
add
jns
mov
sbb
push
lret
inc
vpermi2q
fadds
jno
add
mov
xchg
movsb
or
push
imul
stos
push
mov
add
mov
scas
test
stos
and
mov
ljmp
sbb
repz
hlt
fstps
cmp
and
jno
jg
push
rcrl
xor
and
mov
jp
lods
in
xor
repnz
sbb
mov
pop
sbb
jp
dec
inc
jno
lcall
jno
imul
jl
aad
cmp
notb
pop
push
aad
fisubs
adc
sub
xchg
sbb
xchg
arpl
test
fwait
fwait
xchg
sbb
pop
or
mov
popf
sub
stos
mov
add
push
push
mov
mov
int3
mov
inc
call
mov
adc
std
fstpt
pop
xchg
shlb
stos
enter
test
dec
orl
call
mov
idivb
mov
out
sahf
fisttps
push
inc
jns
jp
push
loope
push
cli
dec
mov
int3
dec
xor
jnp
std
sbb
in
stos
and
lock
mov
test
pushf
mov
cwtl
aas
lea
push
jo
sbb
push
sub
and
add
aaa
test
xchg
cmp
bound
pusha
push
cmp
clc
add
mov
lods
xor
out
pop
jge
sub
out
pop
mov
xor
add
xor
mov
fadds
adc
cmpsl
and
call
xchg
adc
xchg
out
je
and
xchg
lret
and
call
add
mov
stos
mov
fxch
push
xchg
add
jae
jmp
cmc
incl
mov
ja
jns
std
daa
jmp
stc
out
inc
aam
pop
xchg
mov
call
jae
pop
enter
sub
mov
push
es
and
and
pop
jecxz
aas
push
in
sub
inc
sub
shr
clc
ficoml
pop
jnp
mov
cmpb
and
mov
mov
push
jae
pop
scas
dec
mov
ljmp
push
xchg
int3
jp
imul
fdivrs
jl
and
inc
ljmp
stos
push
test
in
jp
cld
inc
in
mov
and
sub
scas
or
sbb
mov
dec
test
push
iret
inc
dec
addr16
lods
adc
xor
cld
js
js
decl
iret
mov
cmp
sub
lret
fdivs
and
loop
push
jmp
sbb
cmp
pop
sbb
jb
cmp
sub
dec
ss
push
inc
dec
mov
sub
cmp
xor
loop
push
test
das
dec
cwtl
shll
inc
lock
pop
nop
mov
pusha
inc
mov
push
jmp
rcll
and
test
adc
loop
icebp
test
mov
and
iret
montmul
cmpsb
xor
mov
fs
xor
daa
add
sub
dec
or
movsb
sbb
repz
sub
dec
sti
dec
bound
or
pop
lret
ds
or
bound
push
fistpll
mov
or
cmc
outsl
repz
cmc
lahf
jl
imul
int
cmp
aad
hlt
cmp
mov
idivb
inc
pop
jbe
insb
mov
movsb
mov
adc
mov
dec
mov
adc
jnp
cmp
iret
adc
test
lcall
mov
loopne
test
sub
jl
sub
out
pop
ss
xchg
mov
fst
mov
adc
inc
lret
mov
inc
stc
scas
pop
scas
pop
cmp
push
shlb
les
popf
je
shll
fucomp
mov
movsl
or
mov
and
xchg
stc
lock
cmc
sbb
add
xchg
cmpsl
push
jno
mov
imul
sub
sub
pop
add
adc
xor
pushf
sub
mov
subl
imul
ss
dec
jmp
hlt
sub
andl
cmpsl
lcall
sbb
inc
lahf
or
imul
rclb
xchg
cmpsl
add
fcompl
pop
incl
mov
loop
iret
movsl
jns
fldl
shll
pop
insl
mov
mov
fs
pop
push
stos
in
xchg
ds
add
jecxz
inc
movsb
pop
and
push
inc
rcrl
ds
add
mov
pop
cmp
mov
mov
imul
fstps
cwtl
mov
mov
push
mov
pushf
mov
addr16
enter
or
mov
scas
fs
push
mov
adc
daa
pop
dec
in
jbe
adc
add
xchg
je
jbe
repnz
or
lea
sub
mov
sbb
lret
divb
mov
lret
fsts
loop
mov
mov
add
loope
push
sbb
clc
adc
fdivrs
int
pop
adc
daa
push
and
jb
and
mov
leave
aas
scas
add
sub
aad
sbb
dec
in
cmc
dec
adc
bound
mov
cli
stos
adcl
xor
cmp
scas
inc
mov
jge
and
lods
jae
and
adc
dec
repnz
mov
xchg
and
fisttps
pop
and
cmp
push
pop
xchg
jb
loopne
pop
scas
sbb
repz
insb
xor
push
pop
inc
mov
lea
movsl
inc
lods
jnp
lret
cli
push
push
inc
stos
sub
testb
or
push
push
cs
aaa
cwtl
inc
pop
movb
ss
sti
into
es
addl
cld
jl
xchg
movsb
add
mov
mov
mov
lds
or
sub
test
and
orl
lret
push
jl
or
xchg
out
xchg
dec
mov
pushf
dec
in
jge
or
push
fistps
aam
mov
add
ja
imul
xor
out
push
add
and
pop
leave
or
mov
insb
dec
jecxz
mov
lods
pop
adc
icebp
push
aas
mov
push
repnz
mov
pop
jl
aas
push
loopne
pop
neg
cmc
push
sbbl
inc
push
shl
inc
jle
lods
or
sarl
test
inc
aaa
mov
sbb
sub
out
addl
add
sbb
pop
sub
cld
inc
arpl
xchg
xor
add
cmp
or
push
popa
and
or
xor
or
xchg
testb
popa
sbb
and
mov
add
pusha
loope
and
sti
or
xchg
jbe
inc
test
lret
fdivrl
repz
imul
push
insl
dec
movsl
lods
sub
in
add
push
es
insb
inc
dec
arpl
hlt
pop
mov
fildl
sbb
mov
and
adcb
jne
sub
imull
rorb
enter
fs
xor
ja
jne
pop
stos
inc
or
rcrl
sub
jle
push
xchg
jge
mov
pop
xor
insb
fimull
push
push
lea
mov
mov
mov
mov
pmulhuw
cmp
scas
or
push
inc
aad
cwtl
xchg
test
and
push
xor
rorl
pushl
push
and
and
call
sti
scas
decl
jmp
xor
cmpsb
xchg
xor
test
push
sarb
mov
orb
cmpsl
push
and
dec
mov
std
inc
cmp
push
es
stos
sti
sub
and
loopne
jl
push
int
xor
mov
pushf
cltd
shrl
push
movsb
rcll
fadds
pcmpgtb
sub
dec
mov
mov
rcr
ret
scas
and
jnp
push
and
in
in
leave
stc
incl
mov
mov
jle
jp
and
roll
sahf
lea
push
jge
cmp
dec
mov
fimuls
xchg
rolb
and
push
and
lea
dec
add
mov
je
std
lcall
out
or
xlat
mov
inc
mov
pushf
and
mov
sub
jbe
leave
outsl
lds
inc
testl
add
je
and
dec
aaa
pop
ds
test
jge
adc
pop
insl
lods
enter
xor
xchg
nop
jp
lret
insb
dec
aad
or
test
add
dec
add
stos
adc
scas
dec
pop
es
in
sbb
into
into
cmp
imul
pop
clc
push
ljmp
sub
test
jnp
xchg
jge
jnp
in
dec
add
push
jmp
aaa
ljmp
scas
lea
cltd
xor
pop
mov
cmp
clc
ds
mov
and
sbb
cmpsb
ds
or
dec
cmp
mov
inc
lcall
ret
fidivrl
inc
cmp
push
inc
out
ss
mov
or
ficoml
cmp
xchg
sub
lahf
ret
sub
jnp
jb
test
psubd
jne
xor
outsl
jl
lock
add
mov
add
mov
mov
arpl
xchg
mov
iret
movb
flds
fldenv
fsubr
inc
rdpmc
mov
jnp
addr16
popf
pop
inc
mov
das
cmp
jbe
aas
push
mov
mov
call
pop
jl
sub
and
push
push
pop
xor
dec
push
mov
push
lea
out
mov
and
lods
dec
add
jmp
pushf
mov
movsb
fsubs
mov
test
mov
dec
xor
popa
sahf
mov
jle
cmp
mov
xchg
mov
ljmp
insl
push
mov
or
repz
push
pop
inc
fimull
ja
sub
and
or
cmpsl
push
adc
gs
out
into
insl
xchg
inc
or
sbb
xor
inc
push
jae
int3
pop
cmpsb
je
cmpsb
xchg
aaa
hlt
cmpsb
adc
divb
js
movsl
xor
int3
sbb
shrb
or
insl
mov
loopne
sti
filds
or
lret
cwtl
cmp
not
sbb
xorl
push
inc
and
push
add
rorl
cld
inc
mov
stos
imul
test
fnsave
push
repz
push
lahf
fwait
repnz
pusha
pusha
ljmp
push
les
popl
movsl
lahf
push
dec
push
nop
xor
lahf
leave
jo
dec
dec
fcmovne
jp
mov
cmp
push
lret
jne
mov
orb
pop
roll
testl
loop
xchg
pop
dec
sub
and
icebp
pop
iret
mov
sub
add
int
into
repz
test
addr16
ja
mov
test
sub
repnz
push
outsl
jle
das
nop
inc
movsl
mov
cmp
out
cmp
loop
test
sbb
sub
push
out
cmp
push
push
pop
hlt
mov
xchg
add
adcl
ret
leave
call
mov
cld
sub
sbb
jle
or
fisttpl
das
xor
inc
loopne
dec
je
and
push
daa
in
adc
frndint
mov
mov
or
mov
push
and
sets
xor
fadds
lds
xchg
mov
orb
cmpsl
in
push
sbb
dec
out
ja
jne
mov
dec
cmp
das
add
loope
mov
cmpl
xor
loope
test
test
xchg
xor
mov
inc
lock
daa
mov
jmp
dec
push
pop
jb
nop
xchg
gs
push
push
pop
lods
imul
pop
cltd
lcall
or
insl
cmp
imulb
mov
dec
sbb
aam
sub
lock
call
cs
rolb
out
push
dec
loopne
repnz
sbb
xchg
pop
out
enter
push
lret
sbb
lods
leave
arpl
popa
imul
lea
pop
push
or
sub
out
sbb
inc
xlat
insb
and
inc
xor
test
lret
fcmovnb
rorl
les
sahf
sub
out
sub
sub
aam
xchg
js
xchg
popf
jle
push
jb
out
ss
sbb
out
xlat
xlat
mov
and
push
jae
fldl
xchg
in
jle
into
into
xchg
lods
push
add
test
adc
rol
repz
jmp
add
fdivrl
xor
pushf
out
fs
adc
loope
cwtl
scas
pushf
jns
mov
nop
adc
xchg
dec
loop
mov
jl
fmuls
and
pop
inc
test
or
outsb
inc
ret
fisubl
dec
mov
push
outsb
inc
inc
cmp
lcall
js
sbb
fs
xor
inc
add
fwait
mov
iret
in
sub
aad
cli
jmp
sbb
mov
mov
fisttpll
mov
scas
cmpsl
xlat
idiv
or
insb
test
clc
mov
rclb
cmp
xchg
and
push
cli
jbe
enter
imul
insl
outsl
sahf
pop
movsb
lods
xor
mov
inc
test
das
push
fildll
adc
loop
xchg
aas
dec
mov
mov
pop
xchg
lret
dec
push
loope
clc
lea
pop
out
int3
inc
shlb
rorl
mov
push
cmp
push
dec
iret
add
adc
nop
in
fs
adc
ds
es
dec
jb
pop
push
lret
mov
jo
xor
xor
arpl
cmc
push
int3
pop
filds
and
addl
cmp
js
std
es
or
mov
hlt
sub
pop
xor
cmpsl
xchg
std
int3
inc
test
call
xchg
push
or
mov
add
insb
adc
es
addr16
sub
aaa
pop
jle
cwtl
or
cmp
das
imul
rol
push
iret
out
jp
and
rclb
jecxz
test
jge
pusha
cmc
mov
xor
push
cmp
aas
sbb
dec
jnp
nop
xor
add
push
mov
xor
inc
mov
sbb
sub
ret
rep
mov
or
ds
and
dec
jns
xchg
adc
imul
es
negl
outsb
push
addl
mov
aas
jo
xlat
xchg
push
mov
test
pop
cmp
sub
je
int3
aas
lods
aas
mov
cmc
jbe
sub
inc
inc
xchg
or
cs
out
shl
push
les
scas
fbld
aam
outsb
push
out
mov
cmp
push
sarl
adc
dec
call
pop
loope
jb
stos
xor
aam
dec
cmp
cmp
add
in
fs
in
scas
jmp
addl
icebp
adc
aam
stos
xor
rorl
cwtl
and
xor
mov
call
test
je
adc
adc
fwait
insb
iret
fistpll
aas
outsl
or
hlt
push
insb
xchg
inc
out
lods
mov
ss
jg
adc
hlt
sbb
insb
cmpsb
jge
jecxz
mov
mov
pop
lock
daa
mov
push
in
inc
and
flds
sub
aaa
ret
fs
cmpsl
mov
xchg
jl
jle
adc
xor
xchg
stos
mov
insb
nop
pop
and
cmp
xchg
sahf
dec
jmp
jae
pop
fistl
xchg
pop
daa
pusha
sbb
or
mov
cld
stc
mov
add
loop
xor
test
les
sub
out
andb
xchg
test
fsubr
fiaddl
test
dec
loopne
and
inc
hlt
int3
ljmp
xchg
mov
cmp
lods
cltd
sbb
fidivrl
lods
adc
jecxz
sar
jns
daa
insl
nop
sub
mov
sub
or
xchg
fcomps
jmp
dec
inc
xor
pop
adc
pop
xchg
cmp
out
xor
fbld
in
pop
lods
lret
and
test
jbe
fwait
scas
int
or
cmpsl
jle
ss
test
mov
mov
iret
jmp
add
mov
sti
fwait
ret
sti
lds
or
lods
mov
aas
int
lds
pop
stos
pop
ss
pop
xchg
aam
clc
mov
jle
push
jb
sub
movsl
loopne
push
cmp
and
and
push
insl
adc
mov
mov
leave
push
jecxz
push
push
movsb
fimuls
xchg
bnd
mov
cwtl
cmc
ret
xchg
add
mov
lahf
std
punpckhbw
jbe
pop
push
xor
xor
jg
add
mov
les
adc
fmuls
clc
fwait
daa
xchg
push
mov
call
loop
sub
cmpsl
call
pop
sub
adc
test
mov
mov
adc
xchg
mov
mov
sbb
fisubl
lahf
add
roll
push
adc
xor
fwait
out
or
cmp
dec
inc
imul
sbb
stos
add
lock
lock
outsb
push
es
cmp
loopne
arpl
pop
push
inc
mov
es
out
mov
loop
inc
lret
sub
add
iret
jecxz
push
sub
xor
adc
jle
mov
inc
into
neg
mov
jmp
xor
sub
fstps
hlt
jmp
int
mov
lods
dec
mov
xchg
xchg
test
fmuls
insb
push
xlat
jmp
pusha
testl
sbb
je
mov
fsub
cmp
cmpb
movsl
int
push
cmp
mov
and
sti
arpl
push
pop
push
shrb
fmul
cmp
pop
loope
cmc
xchg
ret
clc
cmp
push
loopne
or
adc
pop
pop
js
xchg
jb
pop
inc
push
ja
sub
xor
outsb
xor
adc
les
fisubrl
xchg
lahf
and
xor
pop
outsl
dec
std
inc
mov
mov
icebp
mov
jmp
and
adc
test
and
xchg
mov
mov
mov
fidivrs
pop
xor
fwait
roll
loopne
fisubrl
rorl
adc
cmpsl
je
pop
mov
fisttpll
adc
add
dec
js
push
in
xlat
jge
sbbl
mov
in
or
mov
xchg
mov
sbb
insl
mov
push
push
leave
mov
push
inc
jne
cmp
xchg
xchg
and
movsb
scas
in
in
mov
aas
int3
cmpsb
cmp
or
faddp
mov
or
cmp
add
fisttpl
cmpsl
gs
lcall
loopne
and
test
in
add
dec
mov
cmp
pop
jae
fildl
xor
xchg
or
xchg
push
xchg
mov
sbb
xchg
dec
xchg
push
mov
mov
test
iret
call
push
jbe
ret
jle
std
lds
xchg
dec
clc
mov
xchg
xchg
sbb
pop
jo
add
test
stc
arpl
xchg
mov
stos
decb
push
add
push
arpl
xchg
cmpl
loope
pop
outsl
xchg
inc
xchg
cmp
adc
inc
aam
mov
je
jne
sub
in
sub
aaa
sbb
stos
sarb
mov
jmp
sbb
je
push
push
cmp
pop
xchg
adc
mov
mov
pop
mov
call
filds
push
xchg
scas
and
jmp
push
xor
arpl
lret
rcr
pop
mov
pop
jo
repnz
cmc
ret
pop
mov
lock
and
cli
in
pop
mov
dec
pop
call
xor
mov
ss
inc
push
ds
dec
adc
sbb
or
enter
int3
xor
test
sub
dec
add
xor
mov
cmpsb
repz
popf
fcomip
addr16
cmp
imul
push
mov
push
inc
fwait
mov
ret
pop
ficomps
ror
in
bound
xor
sarl
repz
pop
or
js
fistpl
test
mov
add
in
je
mov
negb
dec
fstps
cmp
and
or
xor
lret
sub
cmp
lea
fs
in
mov
fidivl
aad
daa
sub
addl
or
jmp
dec
mov
inc
xor
mov
mov
dec
nop
mov
popf
jns
ljmp
decl
adc
test
or
jo
mov
mov
add
xor
push
test
add
pusha
xor
mov
ljmp
pushf
pop
je
push
test
test
adc
dec
jge
sbb
jecxz
rolb
neg
pop
imul
cmc
in
xchg
aam
nop
sub
mov
xchg
fisubrs
mov
addb
pop
scas
dec
inc
mov
pop
ja
add
xor
adc
add
int
inc
in
and
insb
inc
dec
jns
sub
in
je
addr16
xor
insl
int3
rcrb
lds
loopne
repnz
mov
fs
jmp
ss
and
jecxz
jno
stos
mov
nop
in
das
aas
lcall
ljmp
arpl
push
daa
outsb
and
add
fldenv
pop
mov
pop
add
push
push
orl
je
jbe
and
rol
into
cmpsl
rolb
cltd
sahf
adc
out
stc
jne
add
mov
inc
sti
stos
in
push
cmp
xor
push
cmp
daa
cmp
out
lods
pushf
gs
mov
jae
inc
fdivr
or
dec
xchg
and
sti
mov
stc
cmpsl
lods
adc
pop
xorb
and
mov
jbe
mov
aas
mov
out
lret
in
test
cli
adc
stos
sbb
dec
rorb
popa
push
out
in
mov
aam
mov
dec
shl
jmp
xor
mov
sbb
out
fstpt
repz
inc
xor
cmc
pop
push
in
add
jmp
scas
daa
xchg
loopne
lret
cmpsb
add
pop
jbe
add
pop
sti
movsl
mov
fs
dec
rclb
pushf
cmpsb
mov
push
les
pop
jb
ljmp
adc
add
dec
loopne
jns
scas
fildll
push
or
mov
sahf
jb
xchg
mov
dec
loope
rorb
cmp
jne
pop
clc
adc
cmc
cmp
pop
aam
xchg
pop
mov
hlt
cmp
pop
sbb
cmp
daa
xchg
xchg
imul
sbb
scas
faddl
pop
shr
add
ds
push
lds
inc
aad
movsl
jl
int
int3
aaa
adc
fistl
dec
sub
test
test
fimuls
mov
scas
jne
arpl
inc
cmp
sub
mov
mov
icebp
cmpsb
inc
jbe
xor
pop
loop
repnz
jo
push
rcrb
jbe
scas
cmpl
push
sub
cwtl
lahf
test
adc
andb
cwtl
jmp
add
and
and
sub
dec
add
test
popf
pop
inc
test
into
push
lea
popa
test
in
sbb
mov
stc
int
dec
cmpsl
je
rcrb
imull
pop
decl
mov
adc
fs
jmp
mov
aad
sbb
mov
es
dec
cmp
add
andl
cmp
add
jns
test
testb
cmp
aad
adc
mov
sbb
push
jnp
mov
fcmovne
movsl
adc
andb
push
es
push
xor
test
add
popf
divl
fidivrl
movsb
mov
inc
jae
mov
mov
lret
aad
shrl
fildll
jle
jno
push
test
clc
adc
add
fbstp
outsb
js
cwtl
inc
testb
cmp
sti
add
sbb
cmp
pop
or
push
fistps
jno
sbb
cmp
int3
add
lods
fnstsw
ds
add
cmp
ret
add
popf
inc
pushf
mov
dec
movsl
in
jno
mov
jl
roll
daa
test
cmc
dec
or
push
sbb
movsl
repz
stos
shlb
mov
call
dec
jo
popf
and
push
pop
sarl
test
je
popf
call
movsb
mov
lods
clc
mov
and
outsl
repz
popa
mov
cmp
movsb
pushl
sub
cltd
jecxz
addr16
mov
mov
sub
stos
jecxz
mov
fistps
xlat
xor
and
inc
or
dec
add
inc
cmp
push
add
fs
add
std
cmp
in
clc
mov
jmp
adc
or
lods
lea
sub
pusha
pop
mov
scas
dec
das
in
push
sbb
cwtl
scas
test
hlt
or
popf
dec
imul
cmp
jg
add
cmc
and
sub
xchg
scas
or
fisttpl
push
cltd
sbbl
imul
negb
ja
dec
and
mov
arpl
arpl
movsb
mov
call
xchg
jne
and
orl
clc
cltd
bound
call
rorb
mov
in
xchg
jmp
decb
icebp
jb
sbbl
cmp
insl
push
lods
or
fbstp
insl
push
hlt
cmp
xchg
cmpsb
aad
xor
mov
std
dec
mov
mov
mov
xor
lret
cmp
mov
mov
into
xor
arpl
and
mov
in
inc
stos
mov
push
jb
cmp
mov
mov
dec
add
popa
jne
jg
lods
xor
or
cwtl
ret
pop
cwtl
iret
push
jae
ljmp
out
xor
xorb
les
add
imul
mov
pusha
sub
jge
add
mov
jns
fidivrs
out
lret
dec
mov
and
add
push
jae
push
js
dec
shrb
cmpsb
dec
push
test
mov
push
mov
adc
mov
andl
lahf
jnp
push
pop
loope
ret
xchg
xor
push
in
xchg
int
inc
js
lahf
outsl
dec
lea
jns
mov
sbb
data16
sti
ds
jl
add
ja
fadds
pop
and
sbb
and
test
data16
xlat
out
fimull
or
in
outsl
insb
lahf
std
xlat
aas
push
mov
lock
mov
stc
cld
in
add
loop
rorb
push
adc
out
add
dec
out
pop
in
or
lea
mov
cmp
and
or
mov
into
mov
movsb
int3
rcrl
mov
int3
dec
sahf
jecxz
pmaxub
mov
inc
or
pop
push
add
sbb
mov
inc
cmp
repz
jge
push
inc
aad
jbe
mov
mov
jmpw
push
cltd
scas
or
fsubl
pop
ds
or
mov
jmp
push
and
push
cmp
in
fimull
out
adc
push
and
adc
jmp
or
inc
dec
mov
xchg
dec
imul
mov
nop
cmp
in
pop
mov
in
adc
push
and
rorb
mov
sbb
mov
outsl
fucomi
push
mov
clc
out
test
lret
pop
sbb
push
mov
jo
lcall
inc
mov
insl
cmp
mov
mov
enter
movsb
rcrl
test
test
xchg
add
cmp
call
loope
sbb
jge
daa
je
jno
pop
sbb
mov
ret
andps
notl
aad
and
ficomps
ret
int
jmp
xchg
popf
fdivrl
xor
push
mov
and
cs
pop
cmp
jle
lret
add
rcll
add
cmp
adc
mov
mov
dec
push
inc
sub
mov
sarb
mov
cli
mov
pop
pop
adc
cld
sub
mov
ret
aaa
sti
sbb
push
mov
lods
std
scas
insl
stc
xchg
or
fdivrs
cmp
sbb
dec
mov
sarb
mov
arpl
jl
icebp
cmpl
and
add
pop
dec
dec
push
jle
jnp
jnp
das
adc
and
push
jge
sbb
mov
jb
cli
insl
mov
in
pop
and
stc
jg
add
xlat
push
ss
cwtl
push
leave
xchg
cmpsl
setle
movsl
or
xchg
push
mov
push
fsts
dec
aas
adc
push
rclb
adc
mov
in
jg
test
add
outsb
lods
iret
dec
mov
inc
inc
mov
in
ja
sbb
cmc
add
xchg
jb
inc
dec
and
cmp
pop
and
fisttps
adc
and
popf
rcrl
decb
inc
cmpsb
fistps
and
xchg
enter
or
xchg
popa
mov
pusha
roll
inc
jecxz
repnz
xor
int
cld
mov
fptan
jg
add
repz
mov
lret
mov
push
cmp
push
mov
push
pop
push
ret
push
rorl
ficomps
ljmp
cmp
fs
and
out
cmpsl
lahf
rcrl
movsl
movsb
mov
nop
sub
jns
cmp
lds
js
jnp
sbb
sub
mov
xor
or
in
icebp
popf
dec
rorb
mov
inc
js
jno
jnp
mov
aas
mov
add
cmpl
stos
dec
push
lcall
nop
js
or
mov
pop
mov
stos
ja
mov
or
leave
insl
out
jbe
cmp
add
mov
lock
sahf
outsb
adc
dec
inc
fwait
test
cmp
mov
push
mov
inc
push
loop
mov
callw
insb
mov
jns
les
inc
jmp
aas
pusha
xchg
add
lods
mov
nop
cwtl
mov
xor
dec
call
movsl
insl
dec
mov
push
cmpsb
bound
movsl
out
ljmp
pop
xorl
xchg
xchg
addr16
pop
notl
xchg
and
inc
ja
sub
add
std
mov
inc
or
fidivrl
mov
fistpl
popf
aam
add
mov
lcall
inc
xlat
or
push
ds
fisttpl
mov
repz
lahf
and
test
movsb
loopne
sub
pop
mov
adc
push
dec
jp
mov
lds
loopne
in
add
dec
test
ficomps
nop
xchg
stc
lods
cmp
xchg
cmpsl
cltd
and
mov
adc
out
dec
and
lret
xchg
cmpsl
jbe
and
je
daa
dec
jmp
xchg
and
dec
push
les
pop
push
jp
add
pushf
push
popa
add
stc
testb
inc
popf
lahf
ds
fwait
mov
xor
movsb
xchg
pop
das
mov
mov
mov
push
les
pop
in
mov
jae
test
xor
jnp
clc
pop
les
xchg
int
inc
loope
pop
mov
shlb
add
test
fldt
movsl
jmp
jbe
dec
rorb
cltd
or
js
push
rcrb
lods
sbb
fcom
jo
sahf
or
es
or
sbb
leave
jbe
inc
mov
stc
push
mov
adc
mov
push
cmp
or
movsl
aaa
cld
daa
sub
sbb
mov
int3
inc
fcoms
mov
push
aad
mov
jnp
lcall
mov
gs
pusha
jg
pop
aas
and
or
negl
loopne
fucom
or
stos
insl
and
es
aad
ffreep
arpl
pushf
adc
jns
jbe
jns
cli
or
push
xor
scas
dec
xchg
adc
aaa
jge
test
vphadddq
cmpsl
subb
push
loope
lods
lret
dec
and
hlt
jne
mov
push
out
cmp
jnp
jge
pop
sub
push
negb
mov
or
add
pop
cltd
mov
into
sbb
jnp
shlb
nop
jl
inc
mov
mov
hlt
dec
fwait
sbb
scas
imul
cltd
call
bound
dec
stos
cs
push
push
mov
mov
aas
insb
mov
cmpsl
or
mov
sub
cli
cmp
clc
neg
ret
repnz
cld
mov
orl
xchg
aad
push
sub
pop
arpl
pop
dec
addr16
cmp
mov
xor
arpl
scas
sbb
adc
imul
mov
test
fsubs
mov
aam
shlb
sbb
int
addr16
out
adc
testl
sbb
cmpb
xchg
loop
ss
or
mov
push
sahf
push
pop
movsb
mov
jns
andb
iret
jp
push
push
xchg
and
cmp
out
lret
sbb
mov
and
scas
int3
adcl
mov
loopne
rorb
mov
lock
lahf
aad
pop
insb
sbb
and
aam
clc
iret
pop
addr16
les
mov
ret
roll
sbb
jg
bound
add
hlt
jne
scas
sub
loop
mov
je
push
mov
rcll
lods
enter
out
xchg
inc
in
mov
lock
rclw
es
int3
insl
and
and
clc
or
xor
enter
mov
clc
notb
xchg
add
dec
push
jne
mov
icebp
cs
aam
int3
mov
dec
adc
cli
dec
es
in
mov
imul
xchg
faddl
fwait
mov
mov
sub
fldcw
and
or
call
mov
shlb
mov
push
pusha
out
sbb
xor
xchg
push
xor
mull
insb
out
xchg
cli
xor
ljmp
and
adc
dec
ds
nop
inc
rclb
ljmp
adc
push
mov
and
pop
cmpsb
cld
lret
sbb
xor
mov
push
ret
adc
scas
outsb
popa
push
shl
leave
xor
lret
sti
test
jb
or
fnstsw
push
push
aas
push
and
mov
fwait
add
rcl
pop
call
out
pop
test
sbb
pop
adc
outsb
mov
popf
xor
dec
inc
les
mov
xor
add
daa
mov
cmp
and
mov
loop
cli
jb
out
enter
inc
pop
xor
cmp
hlt
pop
iret
loopne
shl
inc
dec
movntps
dec
cmp
xor
sbb
mov
inc
lds
inc
xor
and
cld
mov
xchg
push
pop
test
fs
mov
or
dec
jne
inc
adc
xchg
ja
lcall
dec
pop
lcall
cs
jb
pop
push
mov
dec
jmp
loope
pop
jmp
into
scas
inc
adc
fimuls
jge
mov
addr16
jg
pop
repz
mov
roll
cmp
mov
gs
es
or
test
adc
pop
mov
jbe
pusha
stos
dec
fnclex
sbb
pop
aas
imul
add
push
adc
lret
mov
lahf
test
stc
imul
js
push
arpl
push
pop
arpl
fnstcw
stos
loopne
dec
jmp
enter
cli
cmpsb
mov
pop
insb
pop
xlat
imul
jne
ljmp
loope
jg
mov
jnp
sar
and
inc
jmp
flds
xor
cmpsb
push
push
js
lcall
xor
xor
daa
dec
xor
pop
xchg
fs
inc
add
or
jle
pop
mov
push
or
mov
lcall
aad
fcoms
mov
leave
testb
xchg
lods
sub
push
test
dec
jl
dec
addr16
xchg
orb
faddl
das
rcr
jg
mov
fwait
int3
xchg
mov
lods
jecxz
pusha
adc
lds
repz
xchg
sbb
sbb
aad
loopne
testl
sbb
imul
dec
dec
mov
cmp
adc
mov
pop
push
flds
jne
imul
push
mov
clc
loope
pushf
ljmp
pop
stos
pop
paddusb
sbbb
out
and
mov
psubd
out
add
repnz
in
fucomi
lahf
mov
jl
dec
cmp
shlb
lret
push
aaa
xor
inc
mov
xor
xchg
lahf
sbb
adc
fwait
sbb
cltd
pop
pop
daa
out
lea
lods
push
mov
inc
in
inc
lahf
fs
sub
cmp
adc
fnstcw
and
jmp
repnz
sub
imull
mov
mov
int
in
add
lock
push
push
ljmp
lock
ds
dec
xchg
jae
dec
xchg
ret
stc
test
stc
add
lcall
and
aad
mov
inc
test
jno
mov
jl
clc
out
adc
fisttpl
push
jecxz
sbb
mov
jmp
gs
adc
mov
popf
lods
push
push
es
mov
adc
cmpsb
test
ss
dec
inc
mov
ljmp
mov
dec
push
inc
adc
jb
add
fsubs
jne
cld
lds
jo
xchg
add
das
addr16
sarb
pop
inc
aam
fdivrl
shl
pop
stc
push
clc
rcrl
movsb
cmp
std
mov
popf
inc
pop
je
pop
adc
pop
fidivrl
cmpsb
add
cmp
push
cli
cli
mov
pop
fldl
push
xchg
outsl
push
jae
out
unpckhps
mov
das
repz
jae
xor
bound
js
mov
adc
dec
jge
cmpsb
sub
pop
dec
xchg
movsl
cltd
xor
imulb
arpl
xchg
jp
ljmp
adc
rcll
out
add
mov
mov
push
lock
sub
sub
dec
shlb
fs
test
clc
inc
dec
aas
adc
mov
inc
mov
scas
loopne
push
rcr
mov
std
mov
adc
aas
and
nop
and
in
add
pop
std
iret
das
pop
sbb
xchg
push
mov
stos
adc
inc
lret
fisubs
or
popa
ljmp
mov
and
jl
adc
sar
sub
jb
dec
test
aam
xor
rorl
mov
push
mov
movsb
cmp
pushf
imul
ret
cltd
push
push
add
mov
dec
dec
lods
cmp
sub
and
cmp
mov
cwtl
scas
test
test
pusha
sbb
pop
add
mov
aaa
insb
add
pop
mov
mov
xor
push
in
fcomip
imul
fildl
push
jecxz
sub
cvtps2pd
and
lea
mov
out
mov
test
mov
push
or
adc
into
arpl
ljmp
in
test
and
mov
sub
push
and
ret
aas
leave
outsl
xchg
mov
rcll
movsb
dec
lods
sbb
xor
cs
mov
sbb
ljmp
shll
lcall
mov
and
push
mov
repnz
stos
xor
clc
scas
push
xchg
movsb
call
xor
jmp
mov
cmp
sti
pop
cli
or
cli
mov
add
int
pop
pusha
sbb
pop
mov
js
or
scas
xchg
std
push
xor
sub
xchg
popa
adc
jbe
movsb
cld
repnz
mov
jb
and
mov
lea
xchg
jge
mov
lret
inc
in
es
jle
adc
jecxz
and
clc
icebp
out
sbb
insb
cmpsb
xchg
ss
sar
pushf
in
add
mov
inc
sub
xor
mov
stos
jge
xor
negl
in
roll
into
mov
xchg
mov
mov
xor
xchg
out
and
mov
or
int
and
addb
addr16
mov
sub
inc
jbe
out
jo
mov
lret
lea
insb
fbld
inc
js
add
in
mov
cmp
leave
or
clc
movsb
adc
and
or
or
fisubl
js
fwait
inc
scas
sub
out
loop
sub
leave
or
in
repz
xor
mov
arpl
test
fidivl
jge
dec
sahf
aam
loope
lcall
icebp
stc
sub
inc
push
pusha
jns
xor
push
cmp
xor
lock
clc
rol
loope
pop
add
push
rclb
sbb
cld
fs
push
in
xlat
enter
jg
in
fidivrs
movsl
or
dec
loop
jns
andb
jle
inc
xchg
cmp
mov
test
aad
add
pushf
mov
or
daa
inc
sti
mov
mov
push
ficompl
mov
sbb
adc
ljmp
or
adc
and
jno
inc
pushf
out
in
dec
pop
jbe
xchg
insb
dec
cmp
adc
insl
jmp
cmpsl
hlt
fs
cmp
inc
repz
inc
jbe
leave
push
movsb
loope
add
mov
push
cmpsb
xor
jnp
out
fisttpll
je
push
testl
mov
inc
lds
jl
inc
mov
ret
fidivs
arpl
lea
add
xchg
enter
cmp
out
and
ds
fs
xor
mov
pop
icebp
xor
jns
push
lock
lret
mov
loope
adc
jns
dec
out
xlat
es
cmp
loope
adc
test
cli
pushf
shrl
xor
lcall
fsub
xchg
mov
adc
aam
xchg
clc
cmpsl
push
jnp
scas
jae
imul
mov
mov
stos
imul
xchg
sbb
mov
dec
cmp
and
xchg
les
add
pop
frstor
rcrl
jle
fistpl
jo
inc
incw
std
or
mov
adc
or
xor
popf
in
push
dec
add
imul
xor
mov
mulb
sbb
xor
sub
mov
pop
mov
movsl
adc
dec
mov
idiv
fdivrl
in
cmpb
mov
xchg
mov
mov
push
lods
ret
jecxz
addr16
mov
shlb
popa
in
ja
push
mov
cld
jg
gs
xor
xor
in
adc
aaa
sub
cmp
or
push
ficompl
jne
leave
sub
mov
and
mov
mov
sub
aam
jl
cmp
xor
cmpsl
and
cmpsl
jns
fs
xchg
push
mov
xor
pop
xchg
cmpsb
push
mov
jne
std
pop
enter
jl
divl
imul
sub
std
inc
inc
or
daa
aam
sahf
jo
mov
mov
dec
push
enter
sub
mov
cmp
jmp
push
cltd
iret
xor
pop
xchg
xchg
dec
addb
in
add
sbb
cmpl
push
cs
mov
loop
sub
xor
int3
and
cmp
inc
pop
std
pop
cmp
mov
cmc
jb
inc
fldenv
mov
xchg
jo
xchg
push
and
xor
std
mov
mov
scas
pushf
dec
xchg
sbb
add
pop
lcall
lret
int
popa
cmp
vxorps
rep
xchg
in
xorb
outsb
scas
movsb
push
ret
jg
push
dec
movsl
ja
jecxz
fadd
cmp
jnp
push
ds
ffreep
mov
and
inc
cli
imul
sbb
inc
stos
jecxz
in
dec
data16
imul
pop
push
pop
les
std
fwait
sbbl
xor
mov
inc
dec
aam
lock
sub
pop
jmp
pushf
push
in
cmpsb
sub
jbe
int
xchg
jbe
movsl
cmpsb
sub
pop
jo
jns
and
out
dec
mov
jg
add
sbb
loopne
adc
or
pop
mov
daa
imul
repnz
enter
add
mov
inc
pushf
and
insb
add
cmp
imul
push
cmp
lret
lock
std
and
xor
std
fidivrl
mov
inc
dec
test
outsl
mov
fsubrs
inc
xor
mov
sbb
mov
sti
pop
cli
out
movb
mov
pop
mov
xchg
repnz
inc
mov
jecxz
dec
inc
repnz
cmp
adcb
add
mov
mov
dec
inc
les
outsb
jg
pop
mov
arpl
addr16
test
xor
xchg
and
repnz
mov
pop
and
add
pop
mov
std
cltd
loopne
pop
push
dec
mov
xor
jnp
imul
lcall
cmpsl
out
pop
push
aam
lcall
ljmp
or
aam
mov
cmp
jbe
popa
inc
adc
push
dec
mov
mov
cs
lcall
out
jle
pop
dec
inc
mov
lcall
movsl
lods
mov
inc
push
int
mov
pop
bound
jle
es
xchg
rcrl
pushl
cli
shll
inc
cmpsb
inc
jns
sbb
xor
scas
mov
xchg
hlt
or
jp
or
call
rolb
rorb
xor
xchg
jecxz
push
dec
test
enter
filds
rcr
pushf
inc
mov
jg
xlat
mov
pop
pop
lds
mov
fistpll
sbb
daa
inc
push
mov
jne
push
popa
rcrb
jp
out
inc
jae
rcrl
aas
test
lret
insb
daa
sub
lds
sbb
jo
sbb
cld
out
xlat
mov
cmp
inc
in
scas
repz
mov
mov
testb
fcoms
mov
sti
mov
mov
jns
add
add
sarl
xchg
xor
push
cmp
rclb
or
jne
dec
and
inc
xchg
arpl
jle
ret
andnps
ret
sbb
and
fwait
call
mov
loope
dec
push
sbbl
aas
ljmp
push
add
in
test
or
test
mov
pop
inc
and
mov
fidivrs
frstor
pop
insb
je
cmp
inc
lds
test
inc
adc
inc
add
cmpsb
pop
test
movsl
mov
mov
je
in
daa
lea
icebp
sbb
sub
stos
sub
and
jg
pop
mov
loop
mov
dec
or
push
or
icebp
test
test
enter
pop
xor
dec
cmp
inc
and
imul
mov
mov
ljmp
xor
adc
inc
inc
jne
cmp
mov
jg
push
jmp
pop
in
push
sbb
xor
inc
test
ljmp
push
push
pop
lods
icebp
mov
fldenv
jecxz
sbb
ja
scas
mov
inc
push
lea
mov
inc
add
std
xchg
test
cmp
ficoms
fistps
xchg
jmp
in
cmp
mov
inc
lahf
or
inc
jnp
orb
pop
shll
insb
dec
fwait
cmp
push
mov
dec
fisubs
ja
outsb
aaa
pop
add
push
mov
mov
add
push
push
and
gs
inc
pushf
ss
or
add
add
cmpsb
push
mov
lahf
icebp
imul
repnz
push
loope
scas
in
test
pop
push
jne
mov
add
aas
sti
shll
inc
fsts
dec
sbb
movsb
xchg
sub
adc
adc
test
pop
lods
or
inc
or
out
lcall
loopne
out
xchg
xor
pop
jmp
jne
mov
push
rolb
pop
mov
mov
xchg
jg
in
imul
cmp
movl
jnp
mov
pop
jno
inc
jg
cmp
jle
les
les
stc
out
aam
dec
xchg
add
dec
sbb
aam
lods
push
lret
pop
lds
pop
cmpsb
lock
mov
xchg
in
out
push
pop
push
and
add
inc
inc
addr16
push
test
mov
jge
or
in
cmpsb
push
mov
mov
pop
xchg
sub
rclb
pop
lock
pushf
push
lret
lcall
stos
or
addb
jl
cltd
iret
orb
dec
repnz
test
fwait
xchg
int
ja
loope
mov
sub
bnd
movsb
mov
loop
imul
or
cmpsw
ja
decl
sahf
ljmp
inc
sub
or
dec
inc
pop
jmp
cmp
mov
pop
loop
mov
clc
pop
cmp
or
std
dec
push
push
sub
pop
xor
imul
push
testl
ret
cli
mov
repnz
aas
jnp
jne
data16
in
sub
dec
mov
xchg
cmp
jl
or
add
loop
pop
shlb
popf
test
mov
call
rol
icebp
sub
cmp
scas
pop
mov
sbb
mov
fs
inc
cmpsl
icebp
mov
and
push
mov
inc
jno
hlt
int3
pop
or
mov
and
stc
test
xchg
xor
ficoml
cmp
mov
sub
icebp
rclb
mov
ss
adc
pop
push
cld
outsl
dec
sbb
daa
xor
adc
add
xor
aad
sub
mov
or
cmpsl
and
xchg
jae
dec
repnz
push
int3
sbb
jns
rcll
mov
inc
ja
or
add
out
pushf
push
mov
imul
sti
push
and
pop
mov
add
xchg
cmpsb
or
dec
icebp
jle
xchg
js
icebp
scas
inc
xchg
pop
aaa
mov
mull
xchg
xor
popa
cmp
push
pop
es
add
negb
insb
das
sti
jge
jmp
jns
mulb
or
mov
and
adc
sub
ret
lcall
or
scas
mov
cmp
xor
sbb
adc
mov
call
add
sbb
mov
pop
mov
icebp
mov
cltd
imul
add
sbb
adc
fidivs
push
in
insl
jg
andl
xchg
pop
in
xor
sti
sub
ljmp
xchg
or
cmpsl
testl
add
mov
lds
in
mov
mov
xchg
arpl
xchg
mov
or
clc
pop
stc
mov
adc
pop
imulb
bound
cmpsb
lret
or
and
jl
jl
dec
cmp
xchg
arpl
jl
xchg
push
nop
insl
mov
adc
dec
enter
xchg
dec
lock
adc
jmp
sbb
je
jne,pt
and
imul
jb
inc
dec
or
add
fcomps
test
jne,pn
aam
sub
movsb
adc
test
inc
out
add
je
cwtl
idivl
jl
sbb
xchg
push
es
xchg
jp
add
ja
mov
jo
mov
ds
pop
cmpsb
or
cmp
and
lock
fs
xadd
add
xor
jnp
or
mov
inc
mov
dec
andl
mov
mov
sti
fwait
and
adcb
ja
cmpsb
push
pop
or
and
sub
fdecstp
mov
xchg
xor
dec
test
mov
push
jg
push
xlat
jb
mov
repnz
lahf
mov
je
js
inc
mov
mulb
test
mov
ret
in
stos
xchg
dec
mov
lods
fdivrp
mov
sahf
jge,pt
xchg
outsl
mov
add
rcr
jecxz
das
and
das
out
imul
xchg
adc
roll
cmpsb
jbe
mov
movsb
stos
mov
jb
push
pop
sbb
pop
push
mov
pop
lret
outsb
dec
adc
pop
dec
cmp
and
add
out
mov
xchg
fs
out
cwtl
daa
jp
xchg
cli
cmp
xchg
test
mov
popf
mov
cltd
sub
xor
ja
movl
lcall
adc
arpl
pop
clc
cmp
xchg
sti
inc
pop
dec
ljmp
arpl
jo
sub
fdivs
ret
push
pop
xchg
das
decl
add
dec
cmpsl
mov
xor
cmc
inc
push
inc
jno
ret
in
stc
hlt
sbb
es
popa
iret
jo
push
movsl
dec
adc
lock
xchg
js
mov
push
outsb
dec
pushf
adc
xor
leave
jno
push
and
sbb
xadd
cmp
sbb
and
mov
jl
jp
ficompl
jecxz
cmp
sahf
sti
adc
leave
mov
cmp
fldcw
inc
jno
pop
xchg
mov
push
mov
push
into
shr
enter
add
scas
lahf
sbb
pop
pop
test
jno
sbb
repnz
stc
push
inc
push
add
mov
inc
jnp
inc
in
inc
pop
ucomiss
fs
cltd
cmp
icebp
out
pushf
call
outsl
and
or
and
jmp
popf
cld
jno
push
and
bound
int
mov
push
mov
add
in
aas
addr16
flds
push
movsl
pushf
stos
cwtl
in
sbb
lcall
mov
adc
lea
loope
andl
loop
loop
aaa
sbb
push
scas
push
out
cmp
cld
cmova
cwtl
cmp
loopne
fsts
push
dec
inc
mov
add
pop
cmp
jge
mov
adc
bound
dec
mov
imul
mov
mov
lods
dec
pusha
into
lret
xchg
je
rcrl
pop
dec
sub
pop
dec
adc
inc
nop
test
in
jae
arpl
inc
inc
sub
scas
sub
jae
push
xor
ficompl
loopne
les
cltd
or
fdivrs
adc
nop
lea
inc
dec
mov
fcom
les
pop
push
sbb
inc
sbb
stos
sub
or
sahf
push
jns
loop
mov
stos
jnp
stos
xor
jo
xor
mov
outsl
push
sub
jo
jne
cltd
adc
xlat
or
int
dec
mov
sarb
mov
and
jge
fcompl
in
call
scas
test
sbb
and
push
sub
inc
lods
jge
insb
adc
xor
pushf
out
and
xor
and
cs
ja
sahf
jmp
adc
and
cmp
jecxz
dec
enter
push
jmp
add
cmp
rcrl
sti
adc
sub
imul
xor
aas
push
jb
push
bound
sub
ds
xor
cmp
or
push
gs
adc
mov
lods
rcrl
roll
movsb
pusha
pop
in
loopne
jl
fldl
sub
and
iret
dec
test
xor
insb
stc
imul
repz
add
pop
xchg
icebp
int
notb
xchg
mov
xchg
add
imul
sbb
dec
dec
adc
jae
ja
ds
cmpsb
xchg
test
stc
xchg
inc
sub
jns
mov
xlat
xchg
fistps
enter
rcrl
jo
iret
xor
in
mov
outsb
push
je
shl
jb
es
sbb
inc
loopne
imul
sti
fstp
les
test
pop
movsl
mov
loopne
push
in
jmp
dec
dec
xchg
mov
mov
loopne
sbb
movsl
dec
shlb
cltd
or
and
inc
sbb
out
and
xor
or
rcrl
mov
mov
dec
dec
sahf
push
mov
mov
xchg
cmp
scas
push
adc
xorb
sub
popl
cmovno
or
addr16
xlat
adc
xchg
cli
sub
jle
arpl
insb
out
jg
insb
mov
cmpsb
adc
push
push
inc
popl
ret
ss
ret
push
fildll
jbe
stc
stc
aas
icebp
cmpsl
mov
and
mov
mov
sub
sub
adcl
fwait
stos
or
cwtl
pop
sbb
movsl
xchg
in
mov
leave
mov
dec
dec
mov
enter
push
enter
xchg
inc
adc
cmpb
sbb
adc
pushf
shrb
xchg
btrl
inc
mov
mov
call
mov
lock
pop
das
in
dec
jecxz
mov
pop
mov
xor
jo
and
icebp
fnstcw
xlat
fs
add
mov
mov
adc
fdivl
adc
adc
cwtl
mov
in
mov
mov
inc
lret
xor
loop
shlb
push
sbb
mov
popa
repnz
loope
mov
insl
and
xchg
mov
dec
cs
mov
lods
push
orb
pusha
outsl
push
dec
mov
popa
or
bound
jo
cmp
in
pop
cmpsb
xchg
mov
sbb
pop
pop
sbb
pop
cld
arpl
jno
mov
ja
push
mov
out
cmp
pop
add
mov
roll
lcall
or
jp
dec
or
cli
sbb
mov
in
and
mov
inc
es
lods
cmp
mov
cmpsb
les
mov
test
scas
sbb
rorb
xchg
jmp
sub
cmp
push
shlb
popf
call
cmpsl
mov
fcmovne
pop
mov
jecxz
add
adc
xor
outsl
sub
leave
int3
xchg
push
ss
pop
push
test
pop
imul
xor
test
mov
add
add
cs
add
mov
repz
test
xchg
cmp
mov
fldt
mov
fwait
xor
fcoml
stc
adc
adc
fistpl
fisttps
int3
mov
subb
dec
lret
mov
repnz
mov
scas
push
lds
jb
rep
or
call
and
sahf
lahf
stc
cmpsl
lods
es
test
or
inc
push
outsb
dec
pop
cld
push
xor
pop
insb
mov
in
or
ret
repnz
adc
sti
mov
pop
inc
pop
mov
add
icebp
xchg
add
repnz
sub
cltd
das
lret
in
jbe
push
dec
mov
xchg
out
sbb
fldenv
xor
push
mov
hlt
xor
mov
movsl
cmpsb
sbb
int3
push
cmpsl
adc
imul
cmpsb
pop
lret
call
dec
add
or
xor
mov
sub
inc
push
add
or
enter
jnp
out
or
xchg
sbb
and
sub
xorb
fadds
and
inc
mov
xor
sub
sub
mov
repz
jg
and
fcmovnb
inc
test
mov
cmpsb
inc
or
int
inc
and
jbe
loop
adc
mov
in
stc
ret
ficoml
mov
dec
dec
aad
add
or
sahf
fwait
or
insl
mov
xor
movsl
jg
fsubl
test
push
dec
icebp
push
jge
push
stos
jle
pop
cltd
and
int3
push
mov
inc
icebp
ljmp
mov
or
into
xlat
fs
pop
punpckhdq
mov
jo
mov
cmpb
jmp
shlb
mov
es
sbb
movsb
sbb
cmp
fwait
int3
mov
ljmp
cmp
sub
inc
inc
test
or
jnp
xor
shll
ret
icebp
dec
enter
loopne
cwtl
sti
cld
jae
iret
and
and
mov
cltd
sbb
dec
and
inc
xchg
test
push
sbb
mov
imul
cmc
in
bound
addb
cli
ss
xchg
fucompp
add
pop
sarb
test
add
insl
xchg
jo
cli
arpl
push
or
lret
mov
test
mov
xchg
lahf
sarl
push
mov
or
pop
mov
movsb
xor
in
inc
mov
loopne
test
outsb
dec
fildll
cmp
mov
push
lds
cmp
lods
sub
pop
fxch
add
jns
pop
test
iret
les
jno
loope
xchg
xor
mov
inc
inc
mov
add
fisubs
das
out
loope
push
xor
mov
sub
cmpsb
call
repnz
and
mov
in
add
cmp
shr
xchg
pop
insb
xchg
adc
std
jno
dec
pop
adc
jbe
lret
shlb
sub
cwtl
add
dec
cmp
push
xchg
lods
push
push
pop
out
sbb
daa
dec
push
mov
or
inc
jbe
scas
mov
insl
inc
test
movsb
or
adc
xchg
test
add
iret
test
pop
movsb
stos
cmp
sub
sub
cmpb
and
shl
cltd
sbb
mov
pop
test
push
or
sub
addb
xchg
test
iret
mov
push
and
dec
add
movsb
mov
les
jns
jmp
loop
shll
aaa
jae
jl
sbb
sbb
clc
and
outsl
sub
mov
outsb
mov
jno
fsub
pop
xchg
nop
push
mov
test
aad
adc
inc
sti
fsub
xchg
pop
cmp
aam
add
ja
mov
gs
addl
pop
sub
cmp
cmp
fdivrl
adc
or
fstl
or
xor
sahf
jge
sub
mov
jl
pop
sub
cmp
aaa
jecxz
orb
jns
xchg
lret
pop
push
mov
jae
xor
xchg
movsb
fcom
ret
xchg
out
push
lods
xchg
jns
dec
and
and
mov
lods
or
das
xor
and
flds
inc
ret
xchg
and
mov
sub
and
and
aas
aam
cmpb
bound
rclb
out
movsb
call
jecxz
mov
ret
xor
mov
add
cmp
das
je
aas
mov
stos
cltd
popf
pop
dec
out
rolb
repnz
ljmp
jge
and
leave
inc
mov
jb
repz
jmp
mov
enter
sbb
insb
xor
sbb
fiaddl
ret
insl
in
push
scas
loop
insb
add
fmul
pop
int
sbb
cmp
pushf
bound
mov
cwtl
popf
fwait
shl
arpl
sbb
mov
gs
nop
mov
je
lcall
je
movsb
xchg
xor
sbb
arpl
iret
pop
movsl
and
and
jp
xchg
mov
pop
fdiv
stos
test
bound
inc
roll
xorl
xorl
mov
mov
sbb
jp
push
leave
mov
lret
out
mov
out
inc
mov
sub
and
xchg
ljmp
xchg
jge
fcoms
cmc
jbe
sahf
cmp
sub
sub
std
je
ret
xor
les
mov
adc
pusha
fisttpll
cmp
fbld
ss
mov
ficoms
jmp
push
sub
outsb
jmp
std
cwtl
xchg
lods
test
mov
aas
inc
or
ret
inc
cltd
sti
dec
stc
sub
fdivl
xchg
dec
xchg
lret
jnp
xchg
sub
popf
pop
sbb
loope
lret
fsubrl
pop
cvtpi2ps
pop
fiaddl
in
loope
mov
cld
dec
scas
into
mov
out
cs
or
repz
mov
inc
sub
imul
and
arpl
int
sbb
sahf
pop
fistps
add
sub
dec
repz
sub
lahf
sub
out
or
sahf
mov
mov
mov
inc
lea
jp
cltd
dec
cwtl
or
fisubrl
push
stos
jno
add
cli
repnz
into
jnp
inc
push
push
mov
repnz
and
or
mov
std
jmp
push
push
sub
mov
push
dec
stos
call
roll
pop
lcall
insb
ss
mov
jo
aam
adc
cmp
xchg
lahf
lods
inc
cmp
shl
stos
loopne
cmpsl
jp
rclb
stos
xchg
mov
jp
jns
or
add
dec
mov
adc
and
jp
pushf
jle
mov
inc
aas
xchg
shlb
add
in
or
ss
mov
adc
pop
fwait
lods
pop
icebp
and
scas
jecxz
cld
cmp
rol
rorb
sti
fsubr
sahf
stc
test
add
dec
das
jp
jmp
rcrb
jns
push
popa
add
xchg
jge
pop
orl
cmp
pop
sbb
xor
das
aas
mov
dec
test
xor
pop
sub
inc
sub
in
out
jne
xchg
adc
pop
test
mov
and
sub
mov
mov
xor
pop
in
repnz
pop
pop
decb
ja
fcoml
jmp
sub
jl
das
and
adc
ficomps
inc
aad
sbb
pop
cwtl
das
aaa
cwtl
or
xchg
and
clc
es
ss
daa
mov
je
cwtl
pop
xchg
sbb
pop
outsb
cld
addr16
cmp
les
mov
mov
bound
pop
pop
mov
int
lahf
jmp
or
fists
pushf
dec
inc
les
mull
inc
mov
dec
dec
push
ja
daa
sub
sahf
push
pop
in
stc
inc
mov
mov
and
mov
cmc
out
mov
and
mov
add
add
not
andb
rcr
jbe
fcomps
push
stos
mov
mov
pop
scas
xchg
add
mov
and
mov
int3
insb
shlb
dec
jnp
mov
and
pop
es
cltd
adc
bound
mov
mov
lods
icebp
mov
or
xor
sti
fsubs
imull
sahf
icebp
push
xchg
cltd
cmc
insl
outsb
xchg
or
dec
out
adc
fucom
mov
clc
sbb
pop
mov
push
popa
sbb
fs
push
jae
cld
montmul
cmpsb
pop
adc
xchg
stc
les
loopne
cld
xor
mov
xor
push
xor
cli
ds
imul
out
add
scas
mov
mov
pop
lds
fs
out
dec
ljmp
je
and
and
je
dec
adc
mov
dec
sub
jo
mov
xchg
stc
pop
data16
mov
out
mov
dec
pop
push
icebp
pop
push
dec
push
jo
leave
dec
es
mov
mov
fcoml
dec
xchg
add
mov
jo
mov
pushw
push
stos
mov
pop
fwait
movsl
add
out
cmp
or
movb
sti
and
js
sti
shl
fisttpl
mov
dec
addr16
pop
addr16
and
sti
cld
in
or
jmp
popa
cmp
enter
sbb
pusha
inc
mov
mov
dec
cwtl
xchg
mov
push
push
sbb
sahf
or
ja
jle
shrb
mov
and
jl
es
push
out
jnp
in
aas
push
mov
jle
call
or
hlt
or
cmpsl
imul
inc
es
repnz
sbb
pop
divl
ret
push
inc
sub
jecxz
sbb
int
mov
adc
in
xchg
fnstenv
or
outsb
inc
std
stc
rcrb
mov
mov
adc
movsl
push
mov
sub
pop
repnz
inc
inc
mov
les
test
adc
push
mov
je
mull
push
cmc
leave
ljmp
cmp
jl
sub
sbb
or
lret
and
sub
cmpsl
rcrl
shlb
xor
jecxz
xor
aam
cld
jg
scas
xor
mov
sbb
mov
shll
mov
stos
push
and
adc
lods
in
xchg
mov
pop
loope
xor
sbb
push
repz
jmp
push
push
mov
push
mov
inc
sbb
push
add
test
ret
aas
mov
fists
daa
xchg
or
and
push
pop
mov
mov
vshufps
cli
das
push
push
dec
mov
mov
xchg
push
popf
xchg
cltd
lret
out
icebp
jnp
ja
mov
rcrb
inc
popf
in
sub
pop
in
mov
out
xchg
sbb
mov
add
into
mov
fstl
pushf
jmp
cltd
sub
xchg
jp
scas
adc
nop
add
xlat
call
xlat
xor
push
mov
xor
ret
ja
loopne
into
mov
popf
movsb
fadd
pop
icebp
xchg
arpl
dec
int3
pop
push
in
dec
jl
add
pop
dec
push
mov
ja
dec
icebp
out
adc
sub
dec
lret
lret
loop
es
xlat
cmp
scas
dec
in
in
inc
mov
mov
ret
fisubrl
aam
and
cmp
pop
dec
bound
sbb
jmp
test
ss
repnz
push
sub
push
and
xor
cmp
jecxz
mov
add
lods
fisttps
mov
xchg
scas
push
dec
bound
loop
jge
adc
cmp
test
cmp
push
aam
in
adc
jno
mov
dec
or
jecxz
popf
in
pop
ret
xchg
sbb
popf
dec
push
xchg
and
pop
fldl
xchg
or
xor
dec
clc
inc
dec
fwait
xchg
in
ds
push
inc
lret
sbbl
mov
push
jle
xlat
cmp
pop
cli
sub
or
je
jg
loope
mov
xchg
adc
lret
iret
cld
pushf
cltd
or
int3
call
into
add
jo
or
pop
cld
mov
mov
jmp
fiaddl
fists
or
xchg
stc
aam
push
scas
and
xchg
jae
adc
jp
cmp
xor
and
xor
int
cmc
icebp
je
jb
xor
mov
ds
popa
ret
xchg
movsb
sub
push
or
pop
or
push
jns
into
aam
xchg
or
aaa
into
lods
pop
pop
push
nop
daa
and
mov
dec
xchg
scas
pop
push
repnz
inc
mov
rol
xchg
lret
push
mov
test
push
sbb
fwait
sbb
loope
inc
push
jmp
cwtl
fidivl
sti
clc
pop
cmpsl
mov
das
or
repz
inc
pop
insb
or
jne
and
sysret
jecxz
hlt
mov
daa
mov
push
subb
dec
or
ss
inc
and
xlat
xchg
iret
xchg
data16
xchg
inc
lds
push
cmp
jnp
adc
jecxz
xor
mov
mov
mov
dec
pop
add
jo
jp
sub
mov
lds
add
cmp
jnp
incl
test
mov
cmp
nop
les
dec
inc
pop
sarb
jae
cmp
jno
cmp
nop
js
push
dec
jnp
xor
mov
cwtl
out
inc
stos
call
mov
mov
ja
dec
ds
cmp
stos
pop
adc
jle
test
push
pop
cmpsb
outsb
or
fld
mov
dec
jg
aam
and
addb
fildll
sub
add
fwait
inc
inc
jmp
rcl
xchg
std
mov
xor
cmpsb
pop
js
adc
shlb
and
mov
lret
pop
es
lds
repz
inc
fbstp
gs
sub
loop
das
mov
or
xchg
and
mov
popf
repnz
jmp
mov
mov
in
push
test
lock
push
mov
shrl
and
nop
in
imul
mov
cli
cmp
ljmp
outsb
and
cmp
xor
iret
repz
adc
and
daa
sti
cli
jb
imul
sub
mov
ret
sarl
push
push
or
in
pop
cld
fsts
roll
cwtl
outsl
rorb
cmp
sbb
adc
arpl
xchg
sub
sub
cmpsl
cltd
xor
mov
or
mov
inc
xor
and
jmp
pop
or
pop
xor
xchg
mov
lret
or
in
test
in
int3
leave
mov
adc
inc
movsb
lret
push
pop
sbb
frstor
iret
stos
pop
in
xchg
jecxz
out
arpl
inc
movb
pop
xor
aad
insb
mov
mov
xor
pop
sbb
cmp
es
cmc
mov
xor
pop
neg
dec
push
out
mov
test
cmp
jae
rcl
loop
fwait
push
cmp
out
das
mov
jne
dec
pop
lahf
jmp
mov
mov
addr16
mov
fwait
test
sti
jbe
push
sbb
fisttpll
sub
or
pop
dec
jl
mov
push
jbe
jno
xor
xchg
pop
outsb
bound
lcall
out
cmc
xchg
stc
xor
push
outsl
lock
idivl
mov
sub
sbb
fsubs
inc
or
add
outsl
jl
sub
mov
shl
add
iret
sub
adc
inc
pop
lods
outsl
loop
pop
jae
lods
xorl
mov
mov
inc
and
adc
xor
push
enter
das
rclb
jns
mov
movsb
push
loop
push
inc
adc
jg
ret
pop
scas
lea
push
xchg
lods
ret
cmp
sub
decb
jmp
mov
mov
aad
sbb
sbb
xor
fldl
dec
lcall
jns
dec
pusha
call
sahf
scas
jae
test
push
adc
cmc
adc
adc
mov
pop
test
std
fucomp
cmpsl
jmp
jae
adc
dec
or
cmc
push
cmpsb
ja
jo
cmp
jmp
jne
xchg
out
rcl
cmp
cs
mov
jmp
sub
mull
call
fisubrs
dec
cwtl
push
pusha
inc
repnz
int3
xchg
mov
add
push
je,pn
mov
jno
adc
shrd
mov
enter
jecxz
pop
xchg
ljmp
daa
mov
xor
mov
fcomp
sbb
fs
iret
cld
cmp
and
add
jae
cwtl
loopne
in
xchg
sbb
push
sbb
stc
das
mov
mov
pop
xchg
lret
push
jp
mov
js
pop
lods
cli
adc
hlt
cmc
mov
fidivs
testb
pushl
sbbl
dec
push
pop
in
into
push
push
or
xchg
cmp
dec
xchg
insl
inc
push
ret
test
mov
and
xchg
mov
mov
sbb
cld
cmp
inc
rolb
push
leave
mov
out
lea
jb
pop
add
pop
adc
pushl
adc
in
mov
push
push
mov
xor
cmp
and
arpl
pop
mov
jle
pop
mov
sti
sbb
mov
mov
es
ss
adc
add
rcr
push
insb
mov
sbb
fists
push
push
int
pop
sbbl
mov
pop
sub
int
pop
adc
inc
into
les
into
ja
jecxz
shlb
andb
cli
dec
pop
out
das
leave
xorb
js
lea
ss
enter
and
stc
mov
fisubs
or
xchg
push
imul
jp
or
leave
inc
leave
push
leave
jge
ljmp
shl
fnstenv
mov
sub
sbb
out
jno
mov
stc
and
push
bound
xor
in
or
inc
lds
mov
lahf
pop
or
shrb
jo
sub
stos
mov
xlat
xor
out
push
in
push
subb
gs
xor
sbb
inc
ja
xchg
xor
insl
icebp
outsb
mov
xchg
call
dec
pop
adc
mov
mov
das
fldl
xchg
fiaddl
jecxz
dec
cwtl
adc
dec
and
aam
pop
fdivrs
outsl
jg
jge
test
sub
bound
fsubp
adc
enter
pop
aam
jnp
cmpsb
js
cmpsl
ja
adc
out
lods
sahf
cs
add
ficompl
fmul
das
push
lahf
xchg
js
shll
insl
push
jo
stc
jge
adc
xchg
push
fnstsw
lods
sbb
mov
popa
and
orb
ljmp
and
scas
mov
or
mov
stos
and
jno
adc
push
pushf
add
xchg
sbb
into
aad
loopne
int3
cltd
popa
or
or
jno
mov
lret
mov
lock
icebp
dec
adc
or
in
and
pop
dec
in
sbb
xacquire
les
ds
xor
iret
cld
repnz
lcall
lods
xchg
pop
mov
cwtl
pop
dec
or
dec
jbe
jb
and
xor
mov
xchg
or
push
jb
mov
test
aas
or
negb
dec
mov
and
cmp
sbb
inc
fisttpl
cmpsb
jns
jae
adc
sub
inc
inc
iret
mov
push
stos
or
fcoms
mov
adc
cltd
insb
cmc
xor
test
ds
movsl
xchg
jmp
sbb
or
sbb
iret
sti
arpl
jae
fs
push
loope
push
sbb
mov
sbb
outsb
setnp
cmpb
test
lock
mov
ret
sub
cli
popa
das
mov
sub
lahf
mov
adc
fldt
xor
or
push
inc
fucomi
push
pop
data16
mov
inc
ds
push
push
aas
add
call
imul
cltd
ds
xor
jl
scas
adc
mov
stos
imul
xchg
mov
call
jl
pushf
data16
mov
jno
jmp
jbe
out
mov
rcrl
push
mov
ja
push
lds
inc
pop
iret
aam
inc
and
mov
or
in
in
leave
stos
mov
mov
xlat
hlt
mov
loopne
stos
dec
jge
push
mov
pusha
das
in
repz
in
sti
mov
cmp
icebp
mov
subb
mov
lock
mov
aaa
add
cmpsb
into
inc
mov
mov
dec
data16
push
iret
iret
testl
push
add
pop
push
sub
push
push
and
and
test
das
ja
lea
inc
popf
decb
movsl
sti
ret
jo
cmp
data16
jae
mov
dec
dec
mov
fmuls
out
adc
add
ljmp
cmpsb
push
arpl
pop
iret
pusha
and
push
jns
mov
repnz
xchg
xchg
sbb
les
or
cmc
je
dec
jb
rcr
add
push
push
mov
out
push
stos
cld
xor
jbe
in
and
add
ds
ret
push
xchg
jb
repz
popa
mov
add
cmp
arpl
es
xor
xchg
mov
xor
enter
xchg
movsb
aam
and
inc
xchg
sub
std
bound
mov
insl
xor
dec
and
mov
out
adc
rcll
mov
pop
std
xor
jbe
push
or
insl
scas
mov
inc
xchg
cmp
loop
jbe
outsb
mov
je
inc
and
sub
loop
int3
cmpl
cvtdq2ps
jmp
test
fsubs
enter
int
jnp
cmp
lea
data16
addr16
lcall
push
das
pop
repz
xor
adcb
adc
xchg
shrb
lods
ficompl
insb
cwtl
push
out
push
js
xchg
sub
dec
mov
cmp
jbe
test
into
xchg
mov
push
mov
loopne
loopne
in
xchg
clc
xlat
mov
loop
pop
jmp
sub
add
jbe
mov
mov
sti
testb
push
cmpsb
mov
mov
jbe
repz
aaa
mov
mov
lret
dec
testb
jp
jg
push
movsl
imul
sub
repnz
cmpsb
cmpsl
test
jnp
pop
push
sbb
cmc
xchg
arpl
fldcw
push
iret
sbb
sbb
dec
aam
jmp
or
fs
cmp
cli
pop
cli
xchg
cltd
sub
int3
mov
out
fidivrs
aas
cwtl
cmp
sub
sub
jp
xchg
and
insl
pop
jno
aaa
sahf
mov
in
sub
pop
jb
dec
cmp
cmp
sub
lret
pop
cmc
fistpll
cs
leave
mov
imull
lret
mov
and
push
lods
push
cmp
mov
sbb
mov
xor
cmpsb
sbb
sbb
das
mov
call
cmp
cwtl
pop
pop
cltd
test
das
pop
lods
mov
xchg
sahf
imul
lods
lods
ljmp
mov
stos
call
inc
mov
add
push
mov
lods
jb
pop
and
ret
mov
in
cmp
inc
lods
add
add
sbb
pop
aas
dec
xchg
lock
scas
cmpsb
movsl
inc
pop
aam
repz
pop
outsl
inc
xchg
iret
jbe
fwait
pop
xorb
and
xchg
dec
outsl
jmp
dec
inc
jns
into
jne
adc
dec
sbb
dec
into
cmp
adc
aam
adc
scas
xor
ret
push
pop
mov
pop
jge
nop
pcmpgtd
mov
mov
inc
and
xchg
adc
pop
xchg
scas
addr16
inc
and
mov
aas
insb
pop
int
dec
fldl
lret
push
push
push
imul
stos
or
ja
pusha
imul
or
jg
cmp
jmp
mov
ja
inc
cmp
fcmovnu
mov
sbb
ja
adc
sub
daa
dec
inc
pop
xor
pop
inc
aad
add
fiaddl
push
xchg
rcll
test
fldcw
lds
fsubrp
or
push
add
add
cmp
addl
lods
dec
mov
cmp
jp
xor
mov
jns
mov
dec
clc
cltd
fcompl
pusha
cmc
push
out
nop
std
pop
fdivrs
fdivl
icebp
andb
xor
pop
sub
stos
adc
and
and
mov
mov
mov
sub
mov
sub
xchg
or
incb
xchg
xor
arpl
jnp
mov
or
xor
insl
mov
jno
fstpt
sub
xchg
and
out
cmp
rcrb
push
rcl
xchg
sbb
push
lea
or
push
test
mov
ss
jle
cmpsb
mov
or
inc
dec
ret
xchg
imul
xchg
out
out
mov
lahf
mov
test
mov
push
movsl
xchg
je
int3
and
cld
sbb
or
cmp
es
call
repnz
or
loope
cwtl
xchg
iret
xchg
les
mov
mov
addr16
std
test
cmc
mov
sbbl
jns
or
mov
jl
das
rcrl
xchg
in
sti
mull
dec
cltd
cwtl
or
pop
push
add
mov
add
in
or
jmp
popl
insb
aad
aad
sub
shrb
leave
es
jne
fbld
inc
test
adc
stc
push
or
rcl
mov
mov
jmp
sub
cmpsl
mov
mov
xor
sub
and
sub
ret
insb
sbb
imul
ljmp
es
mov
push
mov
lahf
xchg
inc
push
neg
test
imul
cmp
mov
daa
xchg
xchg
pop
xor
cmc
xchg
addr16
sbb
cmc
sub
js
test
insb
pop
ss
in
and
dec
dec
xchg
into
add
lahf
nop
in
aas
outsl
jns
dec
or
push
aad
jnp
aad
test
and
icebp
leave
and
test
xchg
adc
jns
mov
fildl
and
add
xor
ret
dec
mov
stc
sub
push
test
ror
daa
int
mov
cwtl
pop
jae,pt
mov
and
push
aam
ret
sub
jmp
add
and
push
xchg
jbe
cmp
int3
mov
stos
aad
or
gs
popa
inc
push
lock
in
sub
in
divb
hlt
rcrb
fisttpll
lods
mov
pop
cmp
mov
enter
lahf
push
mov
push
clc
cmp
call
movl
mov
sub
cmp
leave
out
xchg
xor
cmp
mov
xor
jae
ret
mov
popa
fwait
imul
or
lret
push
mov
add
sbb
jno
push
mov
loop
ljmp
test
add
push
cli
add
imul
jl
jae
adcb
inc
out
lahf
and
orl
dec
push
insl
scas
or
sub
js
ret
cmp
inc
sahf
jno
pushf
repz
stos
jno
inc
gs
inc
pop
rcll
sbb
es
push
shlb
rolb
jl
leave
push
scas
cmp
and
mov
inc
sub
pop
xchg
pop
xor
sti
into
push
pop
jne
ret
mov
ss
andl
and
pminsw
xor
imul
sub
and
aad
jb
and
jecxz
cmc
xchg
or
call
jl
call
lret
test
pop
int3
inc
xchg
sbb
xor
mov
faddl
dec
xor
je
mov
imul
in
push
rolb
adc
in
inc
cltd
mov
pusha
or
xchg
add
mov
inc
sti
call
mov
repz
popa
mov
ret
shrl
lods
push
inc
insl
mov
test
mov
scas
jge
xor
cwtl
addb
sub
fcoms
pop
negb
repz
lods
clc
jmp
inc
movsb
cmp
or
push
mov
jno
fistl
mov
add
sbbl
inc
xor
sub
in
test
sbb
fcomps
dec
sbb
test
jg
mov
enter
push
imul
mov
ljmp
xchg
mov
xchg
xor
es
mov
add
addr16
xor
jb
hlt
insl
sub
in
aam
out
lcall
or
push
cmp
xchg
incl
and
push
fs
lods
push
popf
aam
std
jae
add
sub
mov
mov
out
test
push
in
and
daa
mov
push
mov
iret
call
mov
pop
icebp
push
and
or
dec
sbbb
add
sub
fisttpll
dec
jle
movsl
imul
fnstenv
out
in
xchg
sub
out
ss
and
dec
mov
push
rclb
pop
pop
repnz
add
pop
mov
cmp
testl
insb
adc
inc
jbe
lcallw
or
dec
push
je
rcll
adc
xor
jge
dec
dec
xor
mov
dec
jp
mov
daa
or
rclb
je
sub
ss
sub
mov
and
adc
xchg
bound
xchg
inc
in
adc
xchg
sub
inc
jg
subb
out
mov
or
or
pop
rol
adcb
or
xor
pop
flds
mov
outsb
outsb
mov
pop
dec
les
repz
dec
mov
jb
add
push
ret
push
addr16
cli
adc
test
outsb
xor
adc
std
cmp
sbb
inc
pop
and
add
fsubr
push
add
cmpsb
mov
das
jnp
sbb
or
pusha
mov
ja
pushf
mov
jg
loop
cmp
mov
cmp
and
popa
stc
dec
lret
test
cmp
iret
xorb
mov
mov
pop
in
fadd
addl
mov
mov
mov
negl
stos
mov
sub
mov
nop
add
push
inc
out
inc
addr16
movsb
paddusw
lds
outsb
cs
or
mov
mov
movsl
std
dec
push
cmp
rcr
je
rclb
aad
fdivrl
jbe
aam
sahf
fwait
add
fidivl
lahf
jmp
shrb
push
mov
lcall
cmp
test
inc
push
pushf
arpl
ficoml
movsl
test
in
sbb
push
sbb
sti
call
push
push
faddl
stc
rcll
xor
adc
test
cmc
add
pop
popa
fnstenv
daa
lds
adcb
mov
frstor
xlat
scas
push
mov
fsubrl
popf
pusha
jl
rcr
jno
rcrb
aaa
mov
test
les
scas
and
testl
pop
imul
jo
out
fldt
insb
cltd
shll
xchg
xchg
inc
sub
xchg
call
mov
push
or
outsl
adc
xor
dec
xchg
or
mov
arpl
dec
push
add
lret
cwtl
push
test
aas
lds
out
mov
test
mov
sbb
jbe
sbb
jne,pt
mov
daa
add
js,pt
in
mov
lock
mov
push
mov
inc
pop
pop
out
mov
sub
icebp
xor
ss
mov
xor
stc
gs
cltd
iret
cmp
jmp
rcrl
pop
or
clc
jecxz
aad
hlt
xchg
test
mov
in
iret
lock
pop
sbb
pop
cmpsl
movsb
jae
sbb
pop
jne
push
fldl
sub
repz
mov
mov
push
in
repnz
in
xchg
add
pop
push
or
inc
mov
shrl
aas
in
add
cmc
pop
pop
ds
jl
or
push
pop
inc
xor
mov
out
mov
pop
and
add
test
js
ret
orl
xchg
mov
lods
pusha
adc
loope
inc
fidivl
jl
idivb
pop
pop
and
mov
lcall
int3
pushf
xor
xor
dec
pop
shrb
scas
mov
loopne
adc
add
out
and
jae
outsl
out
xor
aad
insl
add
jmp
adc
aam
out
jmp
jmp
inc
test
and
les
mov
sahf
jbe
icebp
dec
lods
out
fwait
aaa
and
xor
cmp
in
adc
fsubrs
les
dec
sbb
lmsw
mov
adc
pop
mov
cmp
cmp
dec
gs
xchg
xchg
push
dec
rcl
mov
hlt
mov
mov
pop
aas
mov
mov
pop
outsl
push
lock
repz
xor
sub
pop
push
cli
lds
jp
test
jl
inc
add
shl
push
mov
lods
sti
mov
pop
or
xor
jbe
in
fldenv
adc
sub
push
data16
in
pop
inc
loopne
mov
and
dec
pop
in
pushf
mov
repnz
xor
mov
inc
add
lret
outsl
xor
add
mov
jae
add
and
icebp
or
pop
cmc
sub
xchg
jge
pop
push
mov
into
cli
jmp
insb
jl
xchg
or
shll
test
sub
test
jb
mov
mov
incb
inc
insb
add
mov
loope
mov
int
adc
push
jbe
loop
mov
mov
fcomps
ret
jae
sti
lods
and
leave
je
insl
movsl
scas
ja
jne
stc
fildl
jb
loopne
cmp
outsl
jmp
clc
testb
and
sub
dec
movsl
lock
add
mov
cwtl
xchg
xchg
adc
jl
push
aad
jbe
cmpsl
dec
inc
add
hlt
jg
cmpsl
add
or
xor
jb
mov
ret
xor
int
shr
out
dec
xchg
andb
push
into
test
notl
mov
loopne
adc
aam
loopne
mov
bound
adc
adc
xor
cmp
pop
and
push
in
lods
in
mov
mov
or
shrb
jnp
das
addr16
stos
mov
dec
dec
push
nop
insb
test
sub
xchg
inc
push
mov
sbb
jnp
lds
clc
pop
jae
mov
je
ss
cmpb
xorl
xchg
les
add
jae
xchg
inc
dec
sub
add
cwtl
xchg
repz
jo
mull
and
inc
gs
lahf
or
cmpsl
mov
loope
mov
xor
inc
pop
and
cmp
jbe
cld
aam
scas
outsb
jmp
add
mov
adc
aas
adc
xchg
push
movsb
xor
mov
xchg
out
outsl
dec
push
and
jg
sub
or
or
lret
cld
adc
mov
mov
shlb
mov
sahf
cmc
scas
and
cltd
sub
imul
sbb
xchg
sub
outsl
aam
lds
add
push
and
cmc
push
mov
mov
pop
pop
pop
cmp
mov
xchg
shll
xchg
enter
aam
xlat
mov
stos
xchg
insl
insl
addl
loopne
mov
dec
inc
idivb
xor
mov
popa
dec
dec
add
cltd
lret
mov
cmp
pushf
xor
ficoms
fst
in
inc
or
imul
cmp
add
mov
mov
add
or
sub
aad
mov
mov
sbb
mov
mov
aas
popf
add
fwait
mov
and
stos
insb
xchg
jle
push
pop
popa
test
inc
insl
adc
xchg
inc
fdivr
pop
push
jp
pop
sub
dec
push
std
dec
cld
sbb
stos
xor
push
pop
jge
into
mov
or
xor
jns
sub
jo
arpl
fnstenv
mov
call
fcompl
aaa
jae
sar
rorb
mov
cs
fdivs
cltd
adc
inc
jno
mov
and
mov
bound
pushf
sahf
mov
js
pop
pop
pop
aaa
push
jmp
lret
gs
lret
cmp
push
lret
and
test
mov
cmp
fprem1
push
enter
cli
lcall
icebp
imul
dec
xchg
push
or
outsl
mov
jmp
rcll
jmp
or
add
fidivrl
and
sar
xchg
shl
scas
sub
xchg
add
jp
andb
mov
jnp
ss
je
pushf
dec
lods
mov
adc
sbb
pusha
pusha
push
popa
ret
and
jne
stc
notl
fildll
aas
adc
mov
cltd
add
cmp
scas
ja
jecxz
add
and
repz
mov
jne
sub
int
shl
or
mov
cmpsb
es
sarl
fldt
mov
jp
cld
jnp
push
jg
rol
xlat
mov
or
loop
gs
adc
je
daa
or
push
inc
fbstp
movsb
aam
dec
pop
faddp
cli
add
push
cmp
int
xor
and
out
movsb
or
xor
cwtl
les
lods
loop
loop
sbb
es
outsb
xchg
idiv
dec
or
adc
call
idivb
movsb
into
dec
pop
pop
insb
out
leave
mov
xchg
test
ds
shll
lcall
jbe
int
and
mov
jae
dec
rol
push
xchg
jg
imul
lods
xor
push
dec
movsl
out
xchg
pop
stc
xor
cmc
jb
pop
xchg
dec
lods
xor
xor
out
push
cwtl
dec
mov
mov
in
push
sahf
sub
push
test
loope
or
int3
xlat
scas
jae
sbb
cmp
inc
icebp
adc
push
addr16
or
popl
pusha
cltd
cmpsb
jge
hlt
or
pusha
jp
sub
inc
jae
dec
lcall
pushf
mov
cmp
jg
into
inc
sub
lock
mov
jge
xor
scas
mov
lods
lods
das
mov
mov
call
es
ja,pn
in
mov
cltd
addr16
sub
pushf
and
test
fwait
mov
add
pop
sarl
push
jmp
jbe
out
add
mov
lcall
lods
push
enter
jp
subb
cmp
cmp
imul
mov
or
rcrl
xchg
mov
mov
adc
pop
repz
movsb
jo
shlb
aas
jo
int3
cmp
xchg
ficompl
jp
pop
xlat
aaa
outsb
dec
push
jo
jbe
out
inc
push
lock
repnz
aas
sbb
pop
or
xchg
xchg
inc
or
int3
outsb
ja
jb
fcmovbe
xor
loop
in
test
jg
cli
sub
pushf
fwait
pop
ds
sar
in
push
data16
xchg
sbb
in
callw
adc
test
jns
jl
push
cmp
xchg
shl
bndldx
add
lock
or
test
add
outsb
mov
shl
push
dec
in
push
jmp
jbe
mov
mov
mov
sbb
popf
dec
mov
mov
fldt
call
push
ss
scas
jle
fistps
jnp
ficomps
bound
jge
loopne
cmc
loope
xor
cmp
mov
mov
and
ret
xchg
ds
push
inc
fists
cmpsl
adc
xor
ds
arpl
jge
inc
aad
mov
sbb
lahf
lcall
xor
shll
sbb
add
pop
sbb
shrl
mov
addb
icebp
mov
frstor
dec
decb
icebp
ror
scas
sub
sub
dec
pop
jo
xchg
sbbl
lea
dec
dec
inc
push
mov
sub
fs
pushf
lcall
hlt
pop
in
sbb
push
pop
dec
aad
mov
mov
ja
xor
mov
cmp
pop
push
loope
xor
mov
mov
ss
flds
sub
pop
int3
dec
cmpsl
ljmp
sub
sbb
jns
sbb
jb
mul
in
push
push
mov
sbb
arpl
push
and
ss
cmpsl
cmp
popf
push
mov
mov
xor
sbb
xchg
pop
sub
mov
inc
jp
fs
aad
in
out
cwtl
lret
bound
cld
lods
pop
loop
aam
push
jbe
loope
in
inc
sbb
addr16
jne
adc
lea
jb
cli
jns
sub
push
je
mov
shll
and
pop
movsb
dec
cmp
clc
repnz
subl
cmp
sbb
in
dec
jo
pusha
shr
xor
push
xor
aaa
pop
sub
outsb
ja
pop
push
pop
or
sbb
pop
jbe
scas
push
adc
daa
mov
mov
fsub
adc
iret
cld
in
mov
inc
mov
test
bound
mov
add
mov
inc
fistpll
cmpsb
cwtl
pop
push
inc
outsl
jle
push
in
les
lret
xchg
mov
fs
xchg
in
push
arpl
ret
fcomp
cltd
jecxz
xchg
sub
pop
fsubl
fildl
pusha
ds
jb
out
cmp
ljmp
xchg
cmp
add
dec
loope
mov
sahf
movsl
fbstp
stos
lods
xor
dec
push
or
stos
jle
mov
ljmp
addr16
aam
stos
cld
push
inc
inc
ficoml
adc
inc
dec
push
sbb
int3
nop
rcrb
jmp
jp
icebp
fwait
push
sbb
fcmovbe
sub
mov
push
pop
aam
and
in
call
xor
in
xchg
arpl
rclb
rcrb
and
and
pushf
xor
jnp
pop
shlb
cli
out
pop
mov
ret
mov
imul
adc
mov
and
daa
daa
adc
xchg
stos
sarl
push
ss
fldl
fsubrs
sbbb
pop
jb
ret
push
jge
sahf
mov
bound
std
ret
inc
push
jecxz
pop
bound
out
xchg
mov
lret
int3
sbb
leave
xorb
popf
jmp
mov
fldenv
fcmovb
loop
test
dec
ret
pop
sbb
movsb
aam
enter
loopne
sbb
in
lcall
mov
ret
lods
pop
pop
cmp
fistpl
mov
push
ja
test
lret
mov
xor
or
or
sbbb
jmp
dec
adc
dec
jno
movsb
xchg
sbb
jae
test
and
je
lahf
mov
pop
xchg
dec
js
inc
test
loop
push
rol
mov
mov
notb
dec
notl
push
mov
dec
mov
shr
mov
ficomps
mov
cmp
pushaw
pop
andb
lock
jp
cmp
gs
dec
insl
dec
jb
adc
mov
sub
out
inc
fmul
cmc
sbb
ja
jae
pop
cmovne
mov
xor
xchg
add
jns
daa
insl
pop
int
sti
les
mov
and
sbb
xor
xchg
mov
ret
mov
inc
cmp
js
inc
jne
mov
pop
and
pop
movsl
and
ret
sbb
hlt
cmpl
pushl
test
dec
and
push
iret
dec
mov
push
push
aam
push
sbb
xor
cld
rolb
push
jmp
lods
ja
lods
or
sub
push
mov
fsubrl
call
pop
fnsave
sbb
nop
into
sbb
in
mov
jo
push
test
mov
dec
jbe
pop
sbb
repnz
popf
loopne
pusha
int
jl
daa
and
add
int3
scas
dec
pop
daa
in
inc
sbb
fwait
or
scas
cwtl
mov
xchg
aad
jnp
or
jle
je
cld
js
repz
shll
mov
cmp
push
cmp
xchg
sarl
mov
or
stc
fwait
icebp
jbe
jp
hlt
dec
inc
ja
xchg
cltd
test
test
lods
push
or
in
push
or
out
inc
test
sub
inc
push
test
aad
popa
out
push
sub
mov
jo
sbb
lods
clc
lods
sarl
scas
xorb
sbb
and
stos
lret
sbb
push
stos
lcall
out
sbb
out
ja
cmp
xchg
outsl
jbe
or
imul
arpl
mov
movsl
shlb
fcmovu
sti
xchg
das
sbb
ljmp
cltd
mov
mov
dec
std
stc
fdivrs
pop
xchg
sbbl
or
add
rcrl
aaa
in
inc
ss
and
movl
or
addl
in
jbe
xor
lcall
inc
cs
xchg
or
test
jge
sbb
jmp
pop
push
addr16
add
sub
ds
movsl
or
push
hlt
jns
ficoml
push
adc
mov
mov
mov
mov
xchg
jnp
aam
adc
dec
mov
or
mov
or
sub
mov
dec
xor
cs
repnz
es
xchg
inc
push
lea
mov
and
push
sarl
sbb
inc
sarl
les
pop
les
or
cs
or
out
loope
sub
ror
push
sub
and
dec
popa
cli
push
es
sub
fs
jge
mov
and
push
cwtl
aam
test
xchg
leave
rsqrtps
or
pop
adc
std
repnz
push
sti
aam
inc
jbe
sarl
inc
les
cmp
scas
mov
andl
dec
push
out
movsb
jge
jnp
cmp
or
in
cltd
cmp
push
js
roll
negb
lods
xor
pop
test
cltd
jp
test
scas
mov
dec
add
int
inc
imul
es
cmp
scas
cmp
cmp
and
bound
in
or
xchg
xor
mov
inc
imul
subl
pusha
pop
iret
gs
loope
jno
sub
mov
inc
push
sub
jmp
xchg
mov
mov
mov
lahf
lahf
rcrl
jb
jno
mov
out
push
jns
jno
xchg
and
scas
pop
xchg
or
push
jae
inc
push
fdivs
insb
das
mov
daa
mov
jno
imul
sar
jae
nop
mov
mov
or
mov
aas
xchg
cli
mov
inc
mov
inc
push
out
ss
jno
mov
lcall
insb
cmp
ljmp
andb
cmpb
scas
add
xchg
dec
mov
out
orb
mov
lea
ror
popf
or
cmp
loop
or
adc
sub
fadds
or
test
sbb
dec
sub
dec
mov
popf
arpl
jecxz
sbb
sub
xor
out
jo
push
jecxz
sbb
shr
leave
icebp
or
xlat
sub
xchg
pop
fsts
ret
inc
mov
clc
and
pusha
movsb
push
cwtl
out
inc
and
js
daa
sub
mov
sub
mov
push
imul
or
data16
jnp
in
in
push
jmp
push
roll
cmp
mov
sbb
call
seta
mov
lods
adc
xor
jle
std
test
jae
shlb
out
into
fwait
movsb
add
lret
adc
mov
out
jnp
hlt
add
ss
add
popa
adc
stc
jo
dec
inc
pop
cwtl
fisubl
int3
dec
push
pop
jl
rol
in
loop
lahf
jl
xor
jo
add
mov
sub
repnz
sub
pop
and
cwtl
adc
in
dec
sarl
jg
cmp
dec
loope
mov
scas
mov
xchg
call
push
mov
adc
dec
sub
mov
sbbb
or
aam
cmp
push
mov
cmpsl
ret
int
xchg
aam
fcoms
lds
pop
outsb
psubb
fwait
jg
imul
jo
mov
lret
xorb
jb
mov
pop
pop
pusha
test
mov
pop
pushf
int3
sub
mov
hlt
dec
enter
inc
lods
lret
ret
popf
imul
jle
cs
mov
ror
ret
rcrl
cmp
xchg
movsl
add
xchg
inc
mov
iret
pop
outsb
mov
js
mov
jecxz
dec
stos
or
int
push
outsb
or
cmpsl
in
or
or
aam
repz
xchg
shld
lcall
mov
inc
mov
loop
sbb
lret
repz
scas
popa
inc
inc
add
xor
into
mov
sbb
push
inc
pop
push
fdivrp
sbb
adc
lcall
mov
xor
and
cmp
mov
sbb
jmp
int3
jge
dec
pop
xchg
xchg
mov
add
pop
cltd
imul
icebp
cli
dec
mov
bound
add
cmpsl
cmp
pop
jl
mov
mov
pop
addr16
xor
jmp
loop
mov
aas
adc
daa
cmp
pushf
add
jl
xchg
ficomps
lret
ss
hlt
xlat
or
fadds
and
sub
mov
loop
jb
sbb
les
xchg
shl
or
ss
pop
popa
lcall
add
dec
ja
dec
pop
lods
repz
pushf
jns
lret
xchg
inc
arpl
push
push
stos
and
sub
pop
or
out
pop
inc
stos
and
sbb
push
ss
ss
push
dec
jne
inc
lods
int
pushf
jecxz
or
cmp
dec
pop
imul
inc
cmpsl
inc
dec
test
dec
jg
fwait
iret
insl
lods
add
dec
sbb
mov
xor
sbb
ficompl
inc
add
sub
mov
adc
shll
pop
int
cmp
stc
inc
mov
and
shrb
jbe
sub
sub
sarl
pusha
mov
ja
mov
in
push
jp
jle
inc
pop
push
sub
mov
test
mov
mov
mov
cs
sbb
mov
in
push
movsb
cmp
xchg
cmp
pop
gs
fstpt
sub
xchg
or
clc
pop
loope
mov
stc
mov
push
inc
push
jne
cld
pop
mov
subb
sbb
jbe
adc
add
loope
icebp
imul
fistl
mov
insl
stos
dec
fst
cld
adc
pop
jl
pop
mov
int
lods
lods
bound
ret
sarb
inc
in
faddl
jecxz
test
jp
call
cs
loop
fidivrl
aaa
test
cwtl
pop
jae
fisubrl
jnp
nop
aaa
xor
in
jmp
mov
cmc
cs
push
ret
jb
cmc
scas
xor
cmp
repnz
sbb
aaa
sub
push
test
jno
dec
test
ss
ret
loope
repnz
cmp
pop
lock
mov
xchg
jp
std
mov
mov
push
lods
outsl
lock
push
test
mov
cwtl
fucomi
scas
mov
fdivl
add
outsb
xchg
xchg
or
push
popf
repnz
es
push
add
sbb
sbb
mov
add
fstps
fst
push
leave
and
movsl
adc
add
stos
add
xlat
mov
call
mov
push
adc
data16
adc
mov
mov
jnp
lret
add
lret
push
fistpll
in
dec
shlb
loope
je
xor
sti
push
adc
inc
test
in
hlt
leave
xchg
ja
pop
xchg
pop
pop
adc
movsl
mov
clc
and
out
xchg
jl
fmuls
orb
out
mov
outsl
xlat
xlat
pushf
push
or
cmp
add
test
add
in
ljmp
leave
mov
jns
jecxz
and
pop
std
cmpsl
rcr
mov
insb
lea
cmp
sbb
jnp
popa
inc
popa
xlat
stos
mov
shrl
mov
xchg
push
shrl
mov
pop
pop
push
outsl
jae
test
sub
add
cld
popf
or
and
movsb
imul
or
ret
sbb
loope
out
add
stc
add
add
jae
ret
psrld
and
mov
inc
lret
jbe
ljmp
shrl
sub
or
push
xor
gs
dec
lock
cmp
push
jbe
or
lods
ds
vpaddq
xor
leave
inc
movsb
jge
sahf
lcall
mov
mov
imul
inc
mov
sbb
mov
fidivrl
cmpsb
adc
mov
outsl
dec
pop
fiaddl
mov
in
lods
jl
sbb
push
xchg
out
rol
xor
xor
aas
cwtl
rorl
mov
movsl
inc
pop
jne
jno
mov
sbb
mov
lahf
sar
cmp
and
push
in
or
insl
nop
push
hlt
push
scas
cmp
xchg
cmp
jae
in
jl
aaa
lds
cmp
andb
ret
sbb
sbb
pushf
scas
dec
sub
jb
and
imul
push
jb
cmp
insb
inc
lea
sub
shrb
stos
xchg
sbb
test
jl
jle
add
in
into
jecxz
jge
ja
inc
repnz
cmp
adc
jle
inc
out
ds
setl
jo
push
sub
push
lret
cmc
out
enter
mov
sbb
dec
or
mov
inc
roll
scas
outsb
mov
push
xchg
jl
mov
mov
cltd
push
add
sub
mov
jnp
or
or
jb
jg
jns
sub
adc
sub
sub
jo
cmp
jmp
add
push
imul
and
out
adc
sub
dec
mov
dec
adc
in
aas
lcall
movsb
mov
pop
pop
and
mov
xchg
sub
ficomps
mov
rcrb
or
js
cmp
mov
decl
aam
fldt
pushf
daa
mov
pop
push
add
xchg
out
inc
js
adc
inc
inc
xor
jno
fiadds
enter
inc
and
pop
dec
not
adc
cld
outsl
jg
jnp
jmp
add
cltd
scas
imull
pop
fcomps
cmpsb
push
xchg
mov
jo
insl
out
nop
mov
ljmp
icebp
out
loopne
fstps
xor
mov
mov
cld
imul
aaa
push
add
push
mov
pop
lds
or
pop
adcb
push
mov
or
pop
fcmovu
lret
push
cmp
imul
mov
push
ljmp
je
mul
mov
add
adc
je
mov
push
andb
das
cwtl
mov
out
adc
cli
insb
and
aaa
xchg
je
out
push
jge
jge
aaa
cmp
rorl
cld
push
cmpb
inc
xchg
sub
mov
jecxz
scas
xchg
fidivrs
inc
push
int
ret
movsb
clc
mov
test
lods
mov
push
iret
push
mov
xchg
cwtl
sbb
movsl
out
and
shrb
scas
outsb
inc
test
pop
dec
les
xchg
mov
stos
sub
out
and
adc
mov
xchg
mov
mov
xchg
xor
ror
cli
sbb
xchg
lahf
xchg
pop
fcmove
adc
add
push
stos
fisubrs
cmp
pushf
xchg
test
push
xchg
xchg
dec
scas
int
repz
sbb
pop
fnsetpm(287
lods
or
dec
jg
addb
pop
lret
mov
popf
cli
fwait
out
pop
movsl
dec
xchg
sub
ret
or
cmpsl
idivb
jle
js
shlb
ja
scas
test
sbb
scas
add
lret
pop
pop
repnz
aaa
outsl
cmp
out
push
aaa
jae
or
xchg
int
inc
cmc
xchg
aaa
js
out
fisttpll
pop
in
out
push
gs
addr16
lcall
pop
jmp
mov
pop
or
inc
in
xchg
popa
xor
js
imul
pop
scas
mov
shlb
pop
mov
aad
mov
dec
jne
pop
les
pop
lods
push
jnp
adc
test
ret
insl
cmpb
push
jb
test
mov
push
sub
xchg
mov
cmpps
int
test
pop
xchg
mov
push
sarb
add
cmc
out
ret
popf
notb
dec
mov
mov
into
in
mov
lea
fistps
mov
rorl
jnp
jb
jno
cltd
or
jo
in
add
jb
jmp
xchg
insb
pushf
ret
por
push
mov
adc
mov
test
and
add
loop
xor
mov
shrb
jg
mov
dec
lods
bound
aas
adc
xor
pop
movsb
adc
cmp
push
push
xchg
sub
fstpl
pop
leave
fcmovnbe
push
adc
xor
add
les
xchg
stos
hlt
aaa
sbb
inc
lock
repnz
addr16
cltd
xor
test
repnz
push
dec
or
mov
lret
testl
xor
cmp
sub
lret
adc
aaa
cmp
lea
cmp
and
dec
and
scas
shr
dec
jmp
mov
mov
pushf
ja
ret
xchg
fisubrl
mov
sbb
imull
js
xchg
xor
add
std
loop
adc
dec
mov
ljmp
ljmp
cmp
jbe
mov
push
and
imul
sarl
sbbl
leave
mov
mov
lret
xchg
movsl
cmp
fs
in
jns
mov
out
fistps
jg
xor
or
shr
adc
mov
outsl
push
push
movl
lock
int
stc
hlt
or
packssdw
fisubs
sbb
push
jno
les
xlat
ljmp
in
lret
inc
lret
imul
add
test
push
sbb
inc
mov
sbb
lret
outsl
aaa
mov
sahf
jg
jl
xor
add
nop
jne
jge
mov
xchg
scas
in
pop
sub
dec
sbb
mov
loope
cli
mov
sub
push
push
push
mov
and
scas
jnp
rclb
ss
shlb
cmp
push
icebp
test
inc
faddl
jp
xchg
sub
jmp
cmp
jo
cmpsb
mov
xor
pop
jp
scas
lret
icebp
xor
adc
inc
subb
scas
out
push
daa
inc
and
ja
or
movsl
adc
clc
std
fsubp
add
push
pop
xor
sub
test
sub
xchg
and
cmpsl
test
iret
scas
decl
and
pushf
fldenv
xor
jae
ja
mov
jo
xchg
addr16
mov
popf
mov
jne
lock
cmpsl
jmp
call
xor
imul
movsl
insl
dec
inc
sbb
imul
jl
loop
mov
lock
sub
mov
xor
push
sbb
out
push
add
cwtl
stos
mov
adc
cs
in
push
push
jbe
sar
xor
xchg
dec
dec
jb
cmp
cwtl
call
sbb
cmp
mov
inc
pushf
xor
pop
lahf
mov
fisubs
mov
xlat
testb
push
mov
lret
mov
adc
mov
jne
fldt
out
aad
daa
aad
adc
xorb
dec
imul
fs
or
int3
scas
add
pop
scas
lahf
xchg
ss
adcb
push
shrl
cmp
adc
mov
dec
mov
es
pop
outsl
sbb
and
push
cmp
push
cli
in
enter
leave
push
sbb
mov
jle
dec
mov
xor
sbb
movsb
adc
jmp
jmp
mov
pop
les
xchg
pop
push
icebp
bound
repnz
jno
imul
lock
sarb
pop
dec
adc
in
mull
movsb
test
add
movsb
rcr
mov
adcl
dec
movsl
outsb
cli
mov
add
and
push
push
pop
pusha
fxrstor
daa
movsl
pushf
pop
mov
repz
cmp
insb
fsubs
lret
fistl
mov
push
pop
adc
out
mov
xchg
ficoml
mov
stc
imul
shlb
pop
in
jno
push
mov
jle
pushw
out
sub
fisubl
xchg
ja
jle
or
or
ljmp
test
js
add
cmc
aad
push
js
pop
out
lcall
sbb
mov
fldl
enter
or
inc
mov
lcall
cmpsb
cltd
insl
test
dec
push
sub
mov
dec
ljmp
pushf
jl
pop
jg
inc
sar
aas
test
leave
sarb
cmp
pop
pop
repz
mov
jo
lret
mov
imul
pop
ljmp
lahf
mov
std
mov
test
pop
sub
test
pop
movd
xor
adcl
int
ds
fmulp
lcall
scas
inc
add
js
or
or
and
imul
es
xor
inc
fildl
aaa
jbe
movsb
add
leave
cmp
lods
aam
loope
sbb
inc
sub
xchg
ss
mov
cmp
fwait
cmp
repz
push
lods
leave
sbb
mov
inc
sbb
push
imul
sbb
test
ret
arpl
cmp
add
addl
mov
insl
inc
mov
dec
popa
inc
xor
adc
push
push
sub
cmp
das
or
iret
movl
aas
cmp
leave
push
jp
and
or
push
xchg
shll
mov
push
or
adc
es
dec
lret
in
sbb
into
divl
lcall
sbb
negl
popa
ret
pop
loopne
iret
fs
sbb
std
lods
int
jae
ljmp
lret
jle,pn
clc
jge
inc
pop
mov
aas
inc
pop
mov
inc
lods
pop
cli
add
fisubs
fld
sbb
out
and
inc
mov
pop
lret
leave
pop
mov
mov
dec
cli
sub
addr16
mov
push
xchg
fldln2
outsl
push
cmp
jg
mov
adc
and
jne
test
jno
cli
loop
jbe
ficompl
mov
fists
fnstcw
inc
icebp
xchg
out
pop
add
lea
push
xor
pop
mov
lock
outsb
sub
lock
inc
pop
sbb
sbbl
pop
inc
ss
push
mov
aas
mov
in
mov
xchg
in
cmp
cmp
idivl
je
cmpl
add
repz
sbb
shrb
repz
sti
xchg
sbb
sbb
imul
nop
mov
cmp
lods
stos
jg
call
in
mov
mov
pop
in
repz
repnz
sti
push
mov
mov
mov
mov
cld
push
pop
push
inc
rcll
lcall
jnp
or
sbbl
cwtl
inc
jb
pop
in
xor
rorl
dec
cwtl
adc
add
cmpsl
repnz
jnp
cmp
movl
fildl
push
xchg
iret
push
repz
loopne
and
pop
stos
sti
xchg
lahf
orl
cmp
add
push
cmp
bound
int3
xchg
and
mov
jle
mov
loopne
mov
xor
jo
cmpsl
dec
push
les
sarb
shlb
jne
xchg
inc
push
xor
fwait
jbe
push
inc
xchg
es
jecxz
mov
sahf
or
dec
or
fisubs
aaa
rolb
jmp
xor
push
adc
push
sbb
out
cmp
nop
test
nop
in
push
sarb
dec
daa
gs
jnp
aam
pop
xchg
sub
call
cmpsl
and
sub
dec
xchg
and
dec
mov
cmp
mov
mov
je
add
orb
cli
popl
inc
mov
adc
add
fs
mov
jb
dec
test
or
jbe
repnz
decl
rolb
or
andb
mov
pop
ret
push
ljmp
test
inc
dec
mov
push
shld
testb
sbb
push
movl
or
incb
lds
test
pop
ljmp
add
les
push
lcall
out
cld
inc
cmp
dec
rcr
xor
xchg
sbb
push
add
sbb
cltd
xchg
xchg
testb
cld
xorb
je
ret
pop
jne
into
mov
mov
push
mov
mov
in
aaa
sub
xchg
pop
sub
inc
ds
in
push
into
pop
pop
push
push
int3
cmp
cmp
pop
push
or
lock
aaa
je
fwait
xchg
xchg
mov
lock
jmp
jg
mov
jnp
in
testb
jae
xchg
cmpsl
es
mov
scas
adc
addr16
pushf
push
sub
and
or
das
adc
mov
fidivrs
insl
daa
mov
mov
movups
mov
cli
clc
mov
lds
or
mov
push
mov
popa
and
subl
ja
sbb
adcb
dec
add
push
loopne
pop
cmp
pop
imul
add
cmp
rol
jl
push
dec
jo
adc
lds
push
fisubs
repnz
cld
xor
addr16
adc
in
das
mov
mov
int3
orb
in
push
sbb
daa
outsl
jecxz
xchg
fstpt
mov
xchg
mov
fldenv
push
xchg
rcll
dec
repz
xor
je
dec
push
popa
xor
inc
mov
push
pop
test
jns
xchg
mov
push
clc
jns
inc
int
bound
test
aad
cmc
xor
lcall
and
enter
test
cwtl
arpl
or
lret
push
mov
mov
lahf
cmp
xor
or
jp
iret
movsl
mull
mov
adc
add
addr16
mov
repz
sub
xchg
jbe
sub
hlt
xchg
das
imul
xor
mov
lahf
sbb
ss
mov
or
cmp
xorb
inc
add
lcall
jbe
dec
xor
fsubl
sub
sbb
test
cwtl
icebp
and
stos
and
repnz
iret
pop
push
out
lds
xchg
scas
imul
xchg
les
mov
sub
mov
js
xchg
cs
imull
mov
adc
scas
push
sub
repnz
dec
pusha
pusha
push
pushf
bound
test
jae
loopne
push
lret
cmpb
and
inc
dec
insb
ficomps
inc
js
jno
call
cltd
ret
sbb
sbb
adc
test
inc
cmp
pop
imul
in
scas
ds
scas
scas
inc
mov
lcall
mov
xorb
push
pop
cmp
addb
mov
cmc
leave
push
xor
in
push
xchg
mov
mov
inc
repz
mov
pop
rcll
sub
outsl
movl
enter
push
sub
rcrb
xchg
push
stc
lods
call
movsl
jne
sbb
fsub
rorl
pop
pop
mov
cs
fiaddl
sub
push
push
sbb
push
lds
idivb
fcomps
push
leave
gs
pop
jl
add
ds
aam
hlt
test
jmp
les
into
jmp
stos
rcr
ja
mov
pop
scas
sub
negl
push
xor
cli
inc
dec
xchg
push
shll
inc
dec
bound
cmpsb
mov
fwait
inc
mov
xchg
mov
dec
push
lods
jp
jle
cmp
xor
jns
xchg
fstpt
xchg
stos
lcall
dec
xor
loop
xlat
jnp
xor
pop
mov
fadds
inc
shl
loop
pop
sbbl
jle
iret
cmp
dec
xchg
cmpsl
add
and
in
inc
cmovnp
mov
lods
je
test
xchg
loope
sub
sbb
insl
xchg
mov
dec
fldlg2
je
iret
or
cmp
cmpsl
mov
ret
loop
sbb
and
xchg
inc
cld
lahf
lcall
add
sbb
sbb
mov
inc
fnstcw
xlat
icebp
stos
cli
lods
sahf
add
std
xchg
movb
push
and
imul
ja
cmp
pop
iret
mov
mov
sub
orb
jle
jp
lock
sbb
push
lret
test
jecxz
xor
push
sbb
mov
and
push
add
xchg
and
call
pusha
push
xchg
call
mov
dec
mov
jno
cmovne
mov
repnz
push
xchg
test
out
jns
loope
adc
and
mov
xchg
imul
dec
add
dec
sub
imul
xchg
jae
test
jecxz
stos
mov
add
fcomi
lea
orb
in
adc
cli
adc
lret
test
or
and
addr16
enter
adc
push
add
adc
xchg
pop
hlt
out
jne
rcrl
je
add
xchg
add
or
or
dec
pop
xchg
addr16
jo
scas
lods
adc
mov
dec
push
or
rcrl
rep
cmp
out
mov
rcrb
mov
mov
adc
mov
pushf
sahf
das
lea
inc
add
lret
fs
int
ja
pop
loopne
lds
xchg
nop
push
test
jecxz
xor
into
xchg
insb
ds
std
adc
push
popf
lock
loop
xchg
inc
jns
jnp
xlat
test
add
lahf
mov
cwtl
sbbl
repz
roll
dec
xchg
in
cli
pop
std
mov
pop
xor
push
fsubs
cmp
sub
lock
sub
mov
or
or
repz
or
iret
jae
dec
in
pop
pop
mov
ss
push
mov
dec
mov
jmp
xor
mov
pop
xchg
jne
in
mov
or
shrb
sbb
mov
js
lret
and
jg
pop
lahf
cmp
sub
imul
hlt
jge
mov
and
or
mov
adc
into
inc
mov
dec
sahf
sbb
out
dec
ds
push
sub
mov
cld
add
jge
or
lcall
sub
loop
xchg
lcall
jae
movl
xor
cmpsl
push
arpl
inc
jle
lds
add
andl
pop
mov
mov
test
aad
jns
hlt
and
and
and
int3
dec
pop
shlb
adc
xor
or
rcrb
stos
xorl
sub
and
test
adc
cs
dec
cltd
fwait
mov
adc
add
aam
add
adc
mov
xchg
outsb
std
xor
lcall
sub
and
lret
xor
ljmp
adc
inc
jle
mov
mov
sbb
lcall
push
jecxz
js
dec
mov
cmpsl
sub
jb
loopne
lahf
fdivrs
mov
data16
adc
xchg
clc
or
lods
test
test
mov
adc
adc
out
repz
adc
leave
cmp
mov
ret
stos
mov
mov
xor
outsb
sbb
gs
jp
cwtl
lods
stc
sub
pcmpeqb
or
pop
jecxz
push
cmp
or
idiv
lret
movsl
loope
rorl
add
adc
mov
out
psllq
pop
push
sbb
or
add
cmp
cmpsl
jp
or
xchg
fwait
cmp
cltd
repnz
int
sbb
cmp
xor
shlb
in
jbe,pt
xorb
add
mov
bound
movsb
jo
test
push
mov
jnp
jae
mov
std
xor
je
into
push
jg
lret
popf
xor
in
divl
adcl
xchg
pop
fists
mov
mov
push
fnsave
xchg
or
cmc
popf
or
das
das
ret
loop
rcll
loope
ja
out
mov
bound
add
js
arpl
xor
push
fdivrs
enter
mov
xchg
cmpsb
and
dec
xchg
std
adc
push
dec
int
inc
add
call
jns
jp
fimuls
lret
movsl
adc
test
pop
mov
fdivrl
mov
adc
mov
cltd
mov
int
in
mov
gs
adc
xor
das
push
fwait
rol
stos
test
push
mov
repnz
cwtl
inc
lods
fnstsw
mov
adc
inc
fldt
xchg
iret
pop
lret
inc
loope
mov
xchg
push
sbb
mov
push
and
ljmp
popa
and
pop
and
repz
mov
into
ljmp
dec
je
orb
or
cmp
cmp
fisubrl
dec
mov
mov
push
jbe
xchg
daa
arpl
sub
mov
jmp
icebp
mov
call
int
adc
adc
xchg
cmp
lds
in
pop
andl
into
pop
sbb
fsubrs
or
pop
push
aas
ds
jp
adc
adc
push
shll
dec
pop
push
xchg
and
or
hlt
pop
fs
or
mov
mov
inc
push
std
cmpsl
xlat
cmp
adc
scas
je
jae
and
push
push
stc
outsb
mov
call
pop
or
pushf
lea
das
xchg
xor
repnz
movsl
adc
es
inc
inc
mov
sbb
pop
sub
add
dec
out
push
xchg
cld
lret
xor
repz
loop
dec
addr16
stos
sub
dec
lods
xchg
lahf
arpl
je
and
scas
xchg
and
sub
or
or
jge
sub
fisttps
icebp
ffree
jge
mov
fbld
xor
adc
enter
inc
jmp
fcmovu
es
xchg
fs
push
and
loop
fidivrl
adcl
xor
loop
aad
call
add
mov
dec
and
mov
push
xor
dec
push
aaa
push
adc
sar
pop
in
xchg
and
add
outsb
imul
fldl
imul
mov
add
add
decb
stos
repnz
aas
je
fdivp
and
pop
addl
stc
loop
or
push
push
xchg
imul
cwtl
je
xor
enter
xchg
adc
addr16
ljmp
jmp
mov
into
test
push
sbb
sbb
insb
jae
mov
loope
out
inc
fsubl
xchg
or
mov
mov
jle
adc
aas
xlat
idivl
dec
inc
inc
repnz
lret
sarb
jecxz
insl
lock
shlb
jmp
xchg
mov
lahf
and
jp
xlat
lock
xor
inc
iret
pop
dec
fsubp
and
sub
xor
in
and
cmpsb
in
movsb
xor
stos
outsl
mov
call
rcll
ficoms
shll
adc
sti
sarb
adc
test
icebp
xchg
inc
loopne
push
sub
outsb
outsl
pop
pop
push
aas
sub
adc
push
into
imul
pop
or
lcall
push
mov
pop
das
out
ret
scas
xchg
pusha
push
mov
or
repz
subb
xchg
push
sahf
dec
dec
sub
cld
cmp
fwait
jl
icebp
inc
xor
ljmp
push
inc
or
push
test
adc
dec
mov
rcrl
xchg
push
mov
push
fimull
lret
movsl
hlt
cli
aad
test
jno
pop
clc
mov
inc
out
mov
lds
jle
insl
jmp
jnp
ret
pop
lea
push
fs
adc
mov
inc
pop
push
scas
das
xchg
mov
pushf
inc
out
inc
push
lds
inc
dec
fdivs
mov
xor
mov
repz
xor
aaa
dec
and
add
sar
lahf
in
cmp
out
mov
xlat
cmp
mov
lods
mov
cmp
pop
inc
out
jge
aam
outsl
and
jmp
xor
je
pop
loop
aad
in
push
sub
mov
insb
xchg
adc
xor
testl
mov
xor
popa
inc
pop
mov
cmc
insl
xchg
stos
push
xchg
icebp
fists
shl
test
stc
je
sub
lea
out
jmp
mov
loopne
mov
arpl
mov
js
mov
sbb
dec
adc
movsb
add
movsl
jge
mov
sbb
cmp
pop
xor
mov
jg
inc
push
in
add
jecxz
sbb
stos
xor
pusha
fisttps
nop
push
cli
call
call
in
jl
jle
cltd
mov
jge
arpl
test
mov
jl
cld
sub
jno
idivb
and
mov
pop
sub
das
loopne
fwait
jne
pop
push
jae
mov
lds
and
lcall
leave
or
dec
sahf
cmp
xchg
jle,pn
mov
pop
pop
cld
add
xchg
ljmp
gs
and
cmp
js
xchg
dec
cmpsb
movsb
leave
sub
rclb
es
pop
loopne
test
subl
jb
leave
out
rcl
xor
int
mov
mov
imul
out
lahf
ror
mov
cmc
inc
push
mov
enter
insb
ds
popf
ret
jg
fdivrs
adc
mov
fcompl
popf
rcrb
jmp
adc
push
jno
movsb
sub
lret
aam
add
cwtl
repnz
cmp
out
inc
cmp
dec
dec
lea
jp
mov
hlt
imul
and
pop
inc
adc
popf
daa
push
popf
push
ja
sbb
or
or
andl
mov
sbb
mov
jl
mull
pop
insb
in
mov
ret
pop
xor
fdivrs
mov
scas
out
shlb
in
or
sbb
scas
push
xchg
adc
mov
insb
popl
fistpll
mov
in
imul
ljmp
dec
aam
fsubp
loopne
pop
push
pop
loopne
dec
shrl
inc
sbb
jae
push
cmp
cmp
mov
xor
filds
sarl
in
cli
mov
call
sbb
cmp
shl
mov
test
mov
cmp
or
out
sub
fidivl
mov
les
xchg
arpl
lock
popf
cmpsl
cmp
jbe
ljmp
in
movsb
cmp
out
inc
dec
fsubp
clc
mov
sub
sbb
push
mov
aaa
cmpsb
sbb
push
out
pop
hlt
add
adc
sbb
jno
pop
stos
jns
sbb
mov
mov
jmp
mov
mov
jl
sbb
ret
shl
dec
int3
lahf
xchg
and
sbb
mov
aad
les
mov
pop
push
sub
stc
pop
pop
cmp
sbb
gs
jmp
testb
xchg
pusha
outsl
insb
fcoml
je
ss
pop
jle
leave
outsl
mov
aam
mov
outsl
js
add
add
push
inc
or
dec
out
out
rcl
sar
sbb
idiv
mov
gs
adc
in
add
into
lret
lcall
rcrb
mov
inc
push
and
and
nop
dec
push
jg
jno
push
jb
iret
in
ss
in
fwait
jp
enter
pop
inc
push
sbb
cmpb
jle
mov
inc
add
push
insb
loop
cmc
push
push
ds
pop
int
daa
pop
in
js
jmp
dec
cmpsb
ret
inc
loopne
test
add
add
in
mov
fcomps
loop
fld
addr16
cwtl
and
dec
add
icebp
rcr
push
cmp
jge
repnz
inc
gs
push
pop
inc
flds
jg
dec
xchg
and
pusha
aas
push
out
jmp
bound
mov
push
sbb
adc
pop
pop
xchg
movsl
sbb
jo
adc
inc
xchg
daa
inc
jle
sbb
ret
mov
jecxz
push
mov
jecxz
xchg
mov
sbb
mov
lods
dec
movl
movsb
sbbl
int
or
pop
call
xchg
and
mov
in
leave
int
push
cs
adc
xor
mov
jno
inc
jbe
aam
inc
das
sbb
fldenv
dec
test
dec
sub
mov
mov
push
loope
les
jg
push
mov
pop
movsb
mov
pop
daa
or
adc
pushf
es
in
ja
xor
lahf
pop
nop
mov
loopne
loope
jnp
loope
lret
xor
lods
lret
lcall
repz
xor
cmp
cmp
lock
out
inc
lahf
rclb
cmp
stc
enter
in
pop
loopne
movsb
push
xchg
out
push
jno
int
hlt
push
sub
or
test
sub
add
add
cmc
fstps
nop
xchg
xchg
push
add
cli
lods
adc
stos
addr16
pop
sti
popa
stos
adc
pop
mov
cmp
in
stc
pop
ficomps
gs
imul
outsb
mov
lret
ja
jns
int
icebp
jmp
or
jne
jb
dec
push
mov
ja
stos
or
cmp
int3
cmp
das
lock
push
lret
or
mov
or
xchg
pop
in
aam
iret
jecxz
pop
insl
ljmp
jae
xor
sub
je
xor
sub
rolb
adc
das
and
ss
cld
in
ret
scas
insl
in
pusha
jns
push
andb
mov
mov
addl
cmp
xlat
push
arpl
les
shl
xor
push
mov
ret
mov
mov
and
out
imul
mov
xor
je
mov
cltd
repz
sbb
lahf
or
adc
fcomi
repnz
mov
lcall
xchg
ds
cwtl
dec
jecxz
fimull
and
xchg
inc
push
outsb
js
inc
lret
iret
shr
push
cltd
stos
in
fwait
mov
mov
sbb
mov
push
push
mov
and
sub
pushf
xchg
arpl
out
sbbb
cwtl
fisubrl
mov
xlat
in
test
jge
dec
mov
xor
xchg
stos
stos
ja
aaa
cmp
in
loopne
push
or
cmp
ljmp
testb
les
cs
xor
push
nop
icebp
inc
insw
int3
dec
add
and
mov
push
lea
jecxz
mov
push
jmp
cltd
dec
iret
jns
fidivs
outsl
dec
add
ret
rolb
jle
jb
cpuid
fidivl
icebp
mov
out
mov
mov
adc
xchg
add
fdivrs
out
lcall
sbb
pop
adc
ljmp
mov
mov
jnp
jl
test
and
mov
outsl
std
dec
lods
sti
push
mov
in
cwtl
iret
cmpb
into
xor
xchg
nop
ds
pushf
out
movsb
into
insb
out
stc
sub
testb
dec
inc
xor
shrl
pop
mov
mov
int
repnz
into
outsl
ss
adc
sub
hlt
imul
mov
std
lahf
jns
iret
shll
cmp
adc
or
mov
scas
pop
pop
inc
lea
pop
fmul
repz
stc
idiv
cmp
lds
dec
dec
mov
sub
push
ficoml
xchg
es
xchg
sub
fstl
jnp
cmpsl
mov
or
in
push
pusha
fisttpll
dec
dec
sub
insl
mov
jno
dec
shrb
clc
inc
pop
and
add
icebp
jnp
lock
js
cli
popf
loop
xchg
dec
mov
pop
pop
jbe
fcoml
dec
sqrtps
scas
clc
sbb
pop
push
sarb
jns
stos
push
fldcw
dec
inc
fisubrs
jg
pop
fs
sub
mov
sbbb
lret
dec
sarb
in
js
mov
add
shll
add
mov
mov
dec
fs
dec
mov
or
test
mov
iret
xchg
rcrb
pusha
mov
dec
sub
pop
test
or
dec
pop
aam
xlat
insl
cmp
and
cli
ja
pop
mov
push
adc
jb
and
roll
in
or
sub
sti
ficoml
mov
cmpb
cmp
stos
adc
sti
aas
lret
sarl
insl
das
mov
adc
ret
push
es
push
xor
sub
lret
cmp
push
ret
xor
mov
sti
sub
scas
stos
imul
movsl
cmpsl
loop
add
lock
stc
mov
cmp
pop
sarb
aaa
and
inc
mov
pop
xchg
mov
lods
iret
push
mov
out
adc
add
xchg
rcr
stos
pushf
icebp
lgs
repz
cli
repz
inc
jle
enter
mov
push
jbe
adc
js
or
int3
dec
dec
push
mov
jnp
loop
lret
icebp
inc
pop
pop
jnp
mov
out
add
push
into
mov
and
and
add
cmp
iret
pop
addr16
dec
insl
insb
aas
push
xchg
out
mov
push
mov
test
dec
cmp
jmp
jno
xchg
dec
ljmp
inc
ljmp
pop
cmp
cltd
adc
xor
ljmp
jno
jl
aam
pusha
sub
jecxz
xlat
test
mov
mov
es
and
es
add
imul
popa
add
cmp
cmp
pop
adc
mov
pushf
hlt
pop
shll
subb
dec
fnstenv
pusha
dec
push
fucomp
push
mov
or
in
push
out
inc
cmp
aad
insl
cmp
int3
mov
push
test
or
scas
sbb
jg
addr16
ret
sar
daa
cmp
jns
clc
jl
cmp
cltd
jp
xchg
movb
imul
fucomp
ds
imul
nop
mov
sub
push
jl
lret
in
inc
and
pop
lret
xor
mov
addr16
sub
cmp
cmp
stos
icebp
xor
sub
hlt
cmpsl
inc
lods
cltd
ja
mov
dec
sbb
xor
xor
mov
cli
fs
fyl2xp1
adc
cmp
jo
mov
xlat
jl
mov
fwait
arpl
xor
jo
stos
sbb
in
or
pop
loope
movsb
xor
jae
pushf
mov
xor
dec
daa
sarb
pop
sub
cwtl
out
outsb
out
push
outsb
cmp
roll
xchg
loope
fadds
add
add
inc
negb
inc
addb
cmp
test
push
dec
nop
mov
push
into
imul
jmp
movsb
pop
stos
jg
sbb
daa
shrl
push
in
push
mov
pop
push
and
add
jl
scas
or
insb
mov
stos
jg
lret
call
lods
hlt
in
or
fs
rorb
popf
pop
lods
ss
pusha
fdiv
xlat
sbb
add
xchg
pop
jecxz
gs
arpl
xor
insl
pusha
adc
inc
add
test
sub
pop
sub
xor
xchg
pop
xor
jle
xchg
fldl
call
ds
scas
cmc
add
jp
dec
or
mov
push
mov
scas
movsl
scas
std
xor
push
shrl
cld
pop
ja
fwait
and
fldenv
xchg
or
adc
insl
fdivrs
int3
loope
daa
sbb
pop
mov
loopne
lcall
push
or
adc
push
sahf
xchg
dec
sub
xchg
add
dec
pusha
xor
nop
push
add
mov
icebp
xchg
cmpsl
fldt
cmp
inc
xor
leave
pusha
push
ja
fcomp
out
in
push
dec
and
dec
mov
test
jp
mov
inc
jge
or
andb
mov
push
testl
daa
pop
xor
jle
enter
outsl
sub
pop
xlat
pop
scas
jne
jbe
push
jl
outsl
lds
or
inc
and
sahf
repz
mov
js
cmp
or
stc
cmp
push
cmp
cmp
jb
int
fwait
rcll
dec
mov
daa
mov
je
dec
and
lods
inc
scas
jmp
std
xchg
loop
or
jecxz
fisubrs
cli
jnp
sbb
jno
adc
fs
or
pop
jae
jmp
mov
aaa
adc
or
dec
sub
outsl
push
test
stos
popf
fcmovu
jnp
and
lods
es
lods
sbb
imul
push
xchg
mov
push
jp
xchg
stos
add
pop
xor
scas
adc
mov
mov
xor
mov
mov
mov
rcr
jnp
xor
test
data16
or
aaa
dec
sub
mov
lret
cmp
adc
pop
mov
mov
daa
pop
dec
xor
add
sti
push
mov
or
testb
push
push
xchg
cmc
lret
jae
je
stc
and
loope
pop
test
lret
jl
cmp
and
and
jl
mov
inc
icebp
xorb
xchg
idivb
in
push
pop
inc
ret
fistpll
sbb
add
xchg
mov
pushf
mov
xchg
lret
filds
loop
push
out
lret
sub
aaa
mov
andb
rcr
imul
xchg
jmp
or
sbb
adc
arpl
or
ret
adc
shrl
pop
lods
cmp
iret
pusha
push
sbb
jnp
cmp
mov
jb
dec
enter
hlt
cld
ret
jae
test
xchg
sbb
mov
and
push
enter
or
cmpb
lret
sub
pop
mov
lods
les
fbstp
cmc
xlat
cltd
sub
push
push
jg
mov
pop
mov
or
inc
sahf
aad
sub
xchg
ret
daa
cmpsl
lret
jg
daa
lret
pop
xchg
std
xor
xchg
xchg
test
xor
mov
sahf
pusha
gs
gs
outsb
popf
aad
arpl
lods
mov
pop
shl
xchg
jecxz
inc
mov
jmp
or
insb
and
int
out
scas
call
js
lock
inc
leave
dec
push
out
xor
out
jno
cmp
dec
adc
pop
popf
out
ds
mov
jb
rol
cmp
scas
imul
in
subb
movsl
inc
push
fs
inc
gs
out
pop
iret
or
sub
mov
stc
icebp
push
cmpsb
add
mov
mov
sbb
lods
jg
jbe
sahf
mov
jo
inc
shl
inc
stc
aaa
arpl
cmp
inc
sub
lahf
out
movsl
out
outsl
add
xchg
add
adc
xchg
loop
lret
ficompl
clc
cs
xchg
xchg
bound
out
jl
lahf
xor
ret
mov
dec
mov
pop
lods
fdivrl
sarl
rcll
xchg
cwtl
cmp
jg
loop
sbb
fidivs
jne
fcomi
std
cmpsb
je
sar
lods
call
imul
repnz
rcrb
fisubrs
push
push
push
ljmp
or
int3
adc
rcll
lret
mov
xchg
imul
cmpsl
sub
jge
xchg
mov
loopne
sbb
or
pop
inc
mov
add
std
fsubrl
repnz
mov
cmpb
std
add
adc
in
push
outsl
mov
sbb
lods
xchg
pop
dec
loope
pop
jmp
clc
xchg
xor
call
mov
xchg
push
cmpsb
lcall
sub
cli
outsl
call
pushf
jp
fsts
shrb
mov
push
fbld
pop
jg
mov
lea
mov
pop
ret
cltd
aaa
pushf
inc
jp
sub
push
out
cmp
inc
and
sub
cmp
fcomps
cmp
pop
out
cmp
jno
test
mov
daa
pop
mov
cmp
ret
outsb
xchg
cmpsl
dec
jge
xchg
pop
test
or
dec
pop
pop
fidivrl
and
mov
lock
xchg
bound
mov
sub
test
mov
jno
and
clc
pop
dec
inc
mov
pop
mov
push
jecxz
movsbl
sub
addl
outsb
pop
mov
pop
xor
xchg
cmp
inc
scas
sbb
xor
push
jecxz
sub
pop
jno
mov
dec
inc
ss
es
int3
adcl
jae
mov
rorl
jne
push
sub
push
test
and
lds
push
adc
setge
add
loop
inc
xor
and
popf
dec
in
je
ljmp
pop
out
cmp
ficoms
out
xor
adc
mov
or
mov
movsw
lret
or
inc
movl
adc
nop
ds
andl
adc
inc
les
lods
arpl
xlat
sub
add
mov
popa
cmp
arpl
out
pop
invd
pop
psignd
out
inc
vcvtsi2ss
mov
icebp
mov
push
jp
pop
dec
das
adc
jl
outsb
dec
adc
xchg
inc
sub
jge
insl
aas
ret
lea
xor
js
imul
in
dec
sub
adc
pop
cmp
lods
mov
push
adc
imul
xchg
pop
insl
mov
cld
frstor
test
push
sub
mov
leave
aam
xor
jnp
fnstenv
lret
add
rcrl
cmp
dec
daa
mov
or
addb
sahf
mov
pop
and
xlat
ss
test
sub
dec
fsubr
popf
and
mov
adc
gs
mov
call
int
imul
jmp
flds
popa
add
cmp
sbb
lret
xchg
out
aas
pop
outsl
cmpsl
pop
aas
sbb
pop
ret
ret
cmp
mov
mov
pop
rol
ret
and
arpl
push
fstpt
outsb
insb
cwtl
pushf
outsb
std
sbb
rol
pop
pop
cli
mov
xchg
xor
adcb
pop
scas
pop
mov
xor
or
xor
sub
jno
subl
jbe
cmp
pop
loopne
cli
ja
ss
add
inc
shrb
sbb
pop
jge
and
mov
das
adc
xor
mov
jo
mov
shlb
xchg
inc
cmp
and
insb
xchg
fbld
or
pop
adcl
cwtl
ja
xchg
inc
pop
pop
push
sbb
adc
push
cmp
or
rcrl
lds
inc
or
pusha
jmp
out
or
mov
xor
xor
imul
rorl
fsubrs
push
pusha
insl
insb
dec
or
xchg
and
sub
xchg
js
push
jp
cmpsl
shll
add
popa
mov
call
fdivrl
xchg
test
or
xchg
sub
jnp
aas
xchg
icebp
mov
inc
cmpsb
adc
imul
push
adc
xrelease
cli
adc
stos
cmp
inc
call
xor
hlt
jb
rcrb
mov
mov
fldt
and
loope
jp
sahf
xchg
dec
divl
ja
jp
pop
popa
mov
cli
fsubrs
pop
cmp
cmpsb
xor
orb
jno
mov
push
sub
rorl
ja
cmp
cmp
pop
roll
adc
cli
sub
out
jp
push
mov
sti
fst
jb
fsubrs
xor
fdivrs
iret
adc
or
dec
and
fdivl
cld
pop
jnp
in
daa
jnp
xor
hlt
cld
inc
out
scas
xlat
std
mov
jne
mov
push
cmpsl
hlt
pop
adc
cmp
stos
mov
xor
lea
mov
ret
push
mov
adc
outsb
jl
fwait
dec
ret
sbb
sub
fimull
lret
inc
jecxz
jge
fldcw
push
jmp
fsubs
lods
inc
ljmp
sub
in
xchg
and
jmp
pop
cmc
sbb
cmp
in
mov
adc
in
push
aam
faddl
rclb
std
jnp
and
loope
nop
test
mov
push
and
xorl
mov
mov
iret
sbb
xlat
mov
lods
jmp
ret
lea
movsl
dec
in
add
jb
dec
int3
aam
mov
add
adc
jmp
dec
jnp
andl
jl
xchg
jmp
mov
xchg
imul
dec
mov
mov
lcall
testb
xchg
test
sbb
shll
cmp
sub
adc
les
inc
and
add
int
aas
push
xor
pop
pop
in
fsubl
adc
std
pushf
sbb
sub
stos
shrl
stc
lsl
xchg
jmp
mov
nop
jp
lock
xor
cmp
fwait
dec
icebp
xorl
rorb
push
mov
add
add
pop
hlt
cli
inc
ljmp
jno
cmc
cmp
push
jae
lahf
push
pop
and
and
int
sub
stos
jns
and
faddl
dec
push
pusha
dec
cmpsb
lcall
add
dec
into
mov
mov
lret
jmp
jmp
mov
fsubl
xchg
sub
jp
pmuludq
push
test
sub
mov
mov
lock
mov
push
addr16
sub
push
loop
movsl
mov
insl
jnp
inc
repnz
sahf
inc
mov
int
add
mov
add
inc
pop
jp
sbb
out
xor
outsb
sub
mov
jo
lcall
nop
ljmp
sarb
xor
enter
inc
aam
test
inc
mov
ss
rorl
leave
ret
pop
push
dec
sbb
adc
sub
stos
add
or
arpl
out
mov
jge
or
div
add
inc
xor
inc
push
in
sahf
sub
xor
mov
pop
ds
xchg
rcrl
xlat
repz
aad
sub
lock
add
cmp
js,pn
cmp
lds
lea
xlat
test
dec
jmp
gs
add
mov
xor
mov
out
mov
call
imul
push
das
or
inc
mov
mov
scas
pop
jae
out
cmp
cmp
mov
fcoms
loopne
iret
adc
cltd
loop
fdivrl
insb
lea
xchg
jns
add
out
test
insl
lods
rcrl
inc
jmp
add
mov
jb
test
pop
ss
mull
pop
sbb
mov
adc
mov
movhps
test
ret
xchg
xchg
sahf
xor
jecxz
outsl
ds
lods
loop
cmpsb
pushf
cmp
iret
jmp
and
in
mov
mov
sub
jns
into
xlat
adc
rol
in
int
inc
jo
insl
xchg
and
cmpl
lds
sub
jmp
xchg
movsl
and
and
decl
push
cmp
add
fcompl
sbb
insl
sub
push
pop
dec
bound
fcoms
add
cmpl
jmp
xor
rclb
xchg
lret
and
xor
fists
adc
sbb
mov
pop
fsubs
arpl
pop
hlt
in
leave
fnsave
fsubr
das
and
mov
adc
adc
mov
jg
xlat
out
xchg
ret
fs
bound
mov
rol
jnp
outsb
mov
repz
shll
repnz
enter
cwtl
push
dec
sub
sbb
data16
ret
fiaddl
loope
rolb
and
inc
cli
or
and
push
in
pusha
sbb
jno
lods
pop
sub
push
dec
fcmove
mov
ds
clc
jno
fdivrs
mov
inc
push
pop
mov
mov
enter
sub
mov
stc
decl
test
adc
pop
push
push
jg
out
test
cmp
stc
inc
dec
jb
rcr
cmc
sahf
leave
dec
in
into
inc
out
cld
pop
aam
push
dec
xchg
repz
inc
xchg
adc
pop
cmp
or
fisubrl
mov
fists
out
mov
pop
sub
mov
repz
mov
and
lahf
popf
cld
in
sbb
cli
outsb
ja
daa
mov
out
lods
int3
scas
jecxz
cs
dec
xchg
push
jge
lods
mov
push
pop
xchg
leave
icebp
and
cmp
sub
nop
add
test
fwait
test
push
call
bnd
imul
dec
pop
bound
in
arpl
ret
cmp
jb
jns
insb
sub
sbb
dec
leave
fdivl
mov
ds
pop
mov
inc
mov
sti
xchg
xor
in
and
sub
outsb
dec
dec
pop
loope
movsl
push
mov
cwtl
popa
pusha
dec
cmpsl
cmpsl
mov
imull
sarb
mov
int3
inc
cmp
xchg
cmpsb
add
sub
jno
cmp
cmc
lds
iret
mov
dec
imul
subb
lods
xchg
lds
sub
scas
xor
cltd
out
je
cmc
inc
cmp
ja
ficoml
ret
clc
sub
shll
imul
fisubrl
sub
and
xchg
test
repz
adc
xor
add
push
stos
lahf
popa
sub
enter
mov
addl
xchg
pusha
xor
mov
push
or
movsb
jbe
aam
xchg
sbb
mov
pop
stos
pop
sbb
adc
mov
sti
mov
shr
ja
jbe
mov
pop
fsub
in
push
sbb
sbb
xchg
or
xchg
dec
es
adc
out
out
std
sub
fmulp
jp
imul
cmp
mov
jns
cmpsb
shll
nop
jl
xor
popf
fwait
imul
and
stos
int3
add
inc
out
dec
in
pop
test
imul
in
xchg
jo
lahf
or
pop
cmpsb
jnp
idivl
gs
ret
flds
dec
and
pop
std
and
arpl
adc
ljmp
int
cmpsb
or
ds
cmp
dec
fists
enter
dec
push
adc
add
mov
out
int3
mov
call
cld
int3
ja
fnstenv
jb
push
mov
nop
adc
mov
add
fists
jg
cwtl
add
adc
inc
repnz
dec
xchg
leave
cwtl
sub
pop
and
in
scas
sarb
fmuls
xchg
add
xor
subb
xchg
rcrl
sbb
push
mov
adc
push
ret
orb
jle
inc
jg
mov
insb
enter
lcall
jbe
sub
or
repz
push
out
icebp
cwtl
inc
lock
jae
test
push
fsts
cld
mov
jno
mov
xchg
mov
popa
aam
fistpl
mov
add
lret
repnz
fcmovu
bound
pop
popf
in
es
enter
or
cwtl
mov
popa
xor
jmp
fdivr
mov
and
movsl
fldl
mov
popfw
cmp
iret
cmp
das
fstpt
jp
sbb
out
mov
mov
dec
and
js
pop
hlt
jb
mov
and
adc
add
cwtl
call
dec
and
add
and
mov
inc
decb
pop
add
sbb
fwait
sbb
pop
xchg
data16
clc
jb
imulb
dec
mov
out
cmp
push
addr16
adc
in
and
dec
or
repnz
jb
repz
popa
mov
inc
clc
lods
xchg
in
xchg
jecxz
inc
mov
repz
xor
lock
mov
insl
ds
mov
popa
jno
test
out
das
mov
rcrl
js
add
mov
or
dec
jg
cmpsl
fs
push
and
aad
les
divl
nop
fcoms
or
dec
dec
mov
lret
add
jge
filds
fldenv
mov
pop
push
inc
repz
fsubs
pop
mov
inc
cwtl
mov
pop
mov
xchg
pop
jae
dec
mov
pushf
arpl
imul
xor
sti
filds
mov
pop
roll
clc
ret
mov
fcoms
imul
push
mov
fwait
push
adc
pop
xor
mov
mov
adc
and
pushf
push
sti
xor
dec
std
sarl
xchg
and
shll
in
rcr
sub
js
adc
pop
jnp
mov
insl
mov
addr16
std
jae
and
popa
push
cmpsb
fnstsw
test
iret
xorb
dec
and
mov
aam
or
jb
dec
mov
jmp
xchg
push
lods
mov
xor
ja
adc
jecxz
outsl
jns
inc
aaa
and
mov
ret
xchg
pop
gs
stos
fmull
daa
or
dec
pop
sbb
stos
mov
sahf
or
hlt
sbb
push
lcall
pusha
lea
mov
popa
xor
cmc
mov
push
stc
add
lret
imulb
icebp
inc
lcall
cli
and
mov
xchg
pop
xchg
aam
dec
pop
cld
sti
adc
popa
imul
lahf
rcrb
nop
in
inc
jmp
int3
call
pop
xchg
push
xchg
lret
mov
and
sub
jmp
cmp
push
mov
repz
stos
xchg
les
lahf
xor
out
inc
lret
mov
xchg
shll
cmc
mov
in
leave
cmp
cwtl
sub
fcmovnb
dec
lcall
in
loope
les
mov
ss
ja
xchg
insb
xchg
hlt
outsl
ret
pop
fsubrs
xchg
pop
sbb
xor
push
xlat
insb
and
fisttpll
sub
ljmp
lea
mov
push
sti
sbb
movsl
sti
bound
jp
jmp
pop
imul
and
pop
loope
in
int3
mov
jne
test
shr
pop
push
add
lcall
xchg
xchg
push
imul
jg
jo
mov
ret
fildll
sbb
insb
cmpsl
das
mov
xchg
add
stos
mov
ret
jbe
pop
cs
js
cmp
dec
inc
ret
sub
std
mov
sbb
push
cmc
dec
pusha
pop
push
lock
out
dec
lods
add
aad
or
mov
pop
xchg
or
ret
lcall
cld
in
adcb
add
pusha
stc
lds
jns
mov
aas
pop
scas
idivl
xor
mov
xor
xor
xor
lock
lret
pop
adc
sbb
je
addr16
jno
fldenv
xchg
inc
lds
pusha
mov
pop
imull
inc
pop
rol
adc
stc
pop
inc
adc
je
lcall
xchg
sbb
jmp
outsb
inc
mov
icebp
cmp
jnp
sbbb
outsb
inc
mov
cmp
add
or
lods
fwait
jnp
push
aad
and
shll
mov
adc
fnsave
test
rol
sbb
ljmp
mov
imul
sar
jg
xchg
xchg
xchg
dec
sbb
mov
int
stos
jmp
xor
fidivrs
call
fdiv
xchg
inc
sbb
dec
cwtl
mov
mov
jl
add
pop
insb
lret
test
cmpsb
sbb
xor
outsb
sbb
int
mov
cmc
lock
xor
pop
pop
fiaddl
sbb
push
push
fldcw
cmp
enter
xchg
lret
mov
nop
mov
dec
andb
jae
add
xchg
fadds
lret
pop
stos
jae
les
jb
mov
sub
sub
pop
testb
xchg
xchg
repz
inc
dec
push
and
jb
rol
mov
stc
cs
fwait
push
movsl
out
mov
cs
in
psrlq
icebp
nop
insb
inc
xor
out
fiadds
lds
jo
inc
pusha
cmp
pop
pop
out
jmp
shrb
cmc
push
leave
int
push
orl
gs
xlat
push
or
lret
iret
xchg
push
mov
push
sbbb
lods
sahf
movsl
mov
icebp
pushf
repz
int
mov
mov
mov
sbb
cmp
rcll
xorl
int
inc
das
lea
ds
mov
xchg
jbe
mov
pushf
inc
arpl
push
xor
sbb
mov
mov
daa
push
fsubrs
ljmp
xchg
mov
and
push
js
data16
fstl
mov
mov
push
sbb
rolb
jle
lcall
inc
mov
mov
int3
pop
cltd
mov
std
popf
out
pop
negl
adc
inc
aad
ss
add
push
cmpb
pop
ret
fiaddl
jge
subb
cmpsb
out
xchg
xchg
jg
shrb
cld
inc
movsl
or
insl
sub
xor
rep
js
lods
add
cwtl
aam
icebp
ss
rol
mov
mov
lahf
mov
popa
xor
sbb
test
push
add
insb
addr16
inc
sbb
sbb
jl
adc
push
push
push
syscall
movsl
cwtl
mov
sub
jp
or
arpl
int
pop
jne
in
ret
xchg
mov
add
leave
or
mov
inc
and
mov
dec
ss
dec
mov
lods
leave
xlat
pop
testl
ds
cld
mov
xchg
push
add
push
or
pop
not
cmp
push
sub
inc
iret
xchg
mov
out
enter
mov
aad
xchg
lret
jmp
out
pushf
in
pop
imul
ret
int
push
mov
sbb
ret
mov
xchg
inc
add
fistpl
std
fs
mov
cwtl
mov
push
jne
and
test
ret
sub
push
mov
cmp
out
enter
and
int
and
clc
and
test
add
mov
fisubrs
push
scas
mov
sub
out
xor
idivl
cltd
cs
cmp
push
mov
or
and
repz
test
xor
or
dec
push
mov
xor
repz
cmp
xchg
sbb
mov
pushl
add
jmp
lcall
in
scas
ss
mov
jne
sbb
testb
pop
cmp
xchg
fldz
cmp
cmp
add
shll
xchg
repz
mov
and
rcrb
jne
cmp
adc
jne
mov
fs
lods
add
pop
or
cmp
int
shlb
ror
ficoms
cwtl
sbb
test
add
loop
lds
mov
mov
lods
or
xor
ror
fdivr
fldt
roll
out
fadds
icebp
xchg
xor
xchg
lret
data16
lret
ds
jge
or
mov
stc
sub
or
aad
stc
nop
jb
push
xor
pop
mov
inc
inc
test
pushf
mov
shll
insb
les
mov
pop
sub
and
notb
lahf
adc
cs
dec
mov
mov
movsb
dec
in
cwtl
pop
push
dec
dec
push
adc
fs
imul
pop
sub
jge
mov
scas
loope
fnstenv
leave
and
in
movsl
sarl
scas
push
xor
stos
orb
inc
sub
pop
mov
mov
test
out
cmp
iret
imul
sti
enter
or
pop
aad
repz
cmpsb
ss
push
push
movsb
inc
rcrl
movsb
sbbl
sub
xor
push
add
push
add
shl
daa
and
push
jle
fs
imul
add
shl
int3
clc
scas
cmc
xlat
sarl
sbb
push
lods
pop
push
and
mov
inc
add
fwait
jbe
cli
lods
gs
stos
fwait
adc
imul
add
gs
xor
xor
rol
pop
cwtl
imul
sbb
pop
pop
out
imul
scas
repz
xchg
pop
jae
pop
ret
sahf
lcall
add
push
inc
addl
sbb
mov
pop
mov
sbb
push
add
lods
or
pop
sub
sub
bndstx
sbb
add
js
push
popf
and
cld
xor
push
or
rcl
xchg
xchg
xchg
push
mov
cmpsl
gs
insb
bound
fisubrs
aad
test
das
pop
lods
popf
add
cmp
jle
and
sub
adc
xor
gs
mov
jl
pushf
sarb
pop
mov
and
cmp
cmpsl
push
or
fiaddl
in
jmp
loope
xchg
lock
imul
in
mov
fbld
sub
repz
push
ljmp
xlat
cmp
and
std
ficoml
cwtl
jle
test
and
jbe
xor
nop
scas
call
out
mov
mov
xlat
pcmpgtw
out
lret
aam
shrb
push
pop
cli
mov
pop
in
nop
cmp
sub
sub
pop
arpl
lret
mov
or
pop
pop
rorb
nop
out
int3
pop
mov
out
dec
shrb
inc
or
pop
fs
sub
xor
clc
xchg
xchg
adc
mov
data16
and
jne
jg
mov
sarl
cmp
push
test
stos
jl
push
subl
movq
ja
cwtl
add
sbb
cmp
mov
sub
jg
das
cmpl
rolb
pop
and
loopne
cmp
push
jb
adc
jmp
shl
inc
adc
and
dec
mov
loopne
cmp
mov
and
pop
out
dec
adc
add
jno
jnp
push
or
jae
fcompl
popf
call
mov
cmp
int3
push
in
mov
inc
dec
push
out
in
pop
test
sbb
pop
xlat
add
and
lcall
outsb
sub
jmp
push
imul
cmp
dec
loopne
movsb
cli
adc
iret
sbb
adc
jo
xchg
popf
mov
push
ds
push
cmp
ds
xlat
mov
add
push
push
sub
ja
int3
jb
outsb
sbb
adc
sbb
pusha
and
outsb
pop
xor
cld
xchg
js
rcll
push
sbb
hlt
cmp
cmp
pop
mov
inc
int3
mov
mov
pop
or
dec
push
dec
cmp
pop
cwtl
movsl
sub
add
pop
loop
xor
fcmovne
dec
push
mov
loop
daa
cs
or
das
adc
scas
roll
adc
xchg
mov
loope
xchg
cltd
nop
int
popf
ret
sub
jmp
mov
out
enter
push
add
sbb
jo
jl
mov
orl
sub
adc
sbb
xchg
xor
sub
mov
outsl
jle
hlt
inc
lds
xchg
or
fbstp
popa
add
pusha
pop
mov
jg
xor
lods
jb
retw
jo
ret
imul
lds
testb
dec
pop
test
ds
lahf
mov
in
arpl
add
cld
cld
inc
imull
imul
jp
pop
xchg
xchg
sbb
nop
pop
adc
filds
lea
mov
mov
pop
out
inc
jmp
jns,pt
and
inc
xchg
pop
add
and
jno
sti
insl
push
ret
or
mov
mov
jle
lods
testl
xchg
lock
int
and
pop
sahf
pop
jo
push
lret
insb
jnp
xchg
dec
mov
jg
mov
movb
jmp
scas
fistpl
loopne
out
adc
pop
push
hlt
dec
sub
cmp
dec
orl
out
es
bound
mov
inc
and
jnp
fwait
daa
adc
sahf
imul
pop
add
adc
pop
int3
xchg
jnp
incl
mov
mov
lock
rclb
aad
pusha
fstpt
jb
xchg
icebp
xor
sbb
add
xor
mov
sub
dec
jge
loopne
push
mov
cltd
test
add
adc
repnz
insl
xchg
aam
fstpl
and
xchg
mov
in
scas
mov
mov
test
xor
rclb
adc
mov
mov
movsb
cltd
sub
adc
push
pop
pop
cltd
bnd
dec
outsl
inc
imul
pop
outsl
stos
jnp
mov
sti
push
out
mov
or
or
xor
mulb
inc
dec
mov
test
test
dec
jge
into
sub
add
pop
int3
stos
fisubrl
xor
fdivrl
out
or
cwtl
cmpsb
or
jmp
xlat
ss
enter
cmpb
repnz
stc
aas
dec
fisttpl
dec
popl
lcall
jo
in
or
pop
bound
mov
sbb
cmp
cmp
jnp
iret
xchg
pop
les
inc
pop
push
shrl
test
push
xchg
mov
fmuls
jnp
sub
sbb
and
pop
lcall
fidivrl
jp
xlat
dec
cmpb
les
or
mov
jl
mov
pop
ret
shlb
inc
in
xchg
pop
xchg
in
in
pop
sub
mov
jnp
cmp
jno
mov
xchg
mov
jno
jo
fstps
mov
outsl
push
imul
mov
push
xor
dec
sbb
mov
push
jns
adcb
dec
ficompl
push
cmpsl
dec
nop
stos
cmp
cwtl
add
cmp
out
cmpsb
mov
out
lret
jns
mov
adc
je
lods
xlat
xchg
pushf
inc
push
xor
fbld
add
in
xor
jbe
or
add
iret
mov
hlt
sub
inc
insb
adc
mov
sbb
out
lahf
mov
jp
test
or
mov
aad
jge
mov
pop
addr16
shrb
lcall
lcall
frstor
data16
push
mov
mov
lock
lret
adc
add
mov
ss
jl
sbb
push
adc
xlat
push
out
stos
aam
lock
in
lock
pop
adc
shll
mov
and
call
pop
into
mov
sbb
addb
mov
sub
push
test
nop
jo
shrb
inc
and
push
dec
adc
push
jo
add
and
sbb
xorl
sub
js
bound
mov
push
iret
and
dec
mov
xorl
imul
cld
cli
sub
pop
lods
cmp
jns
pop
pop
rorb
punpcklbw
jg
jne
lahf
pop
sbb
jns
in
mov
scas
push
subb
jae
xor
sub
gs
imul
dec
sbbb
jo
mov
push
cmc
sub
inc
mov
mov
gs
adc
xchg
inc
mov
ja
pushf
jns
leave
adc
push
pop
mov
gs
push
sub
add
mov
shl
test
out
cmpsb
jge
mov
cmp
xor
pop
pop
fbld
mov
fildl
jnp
adc
stc
pop
loope
in
xor
fbld
xlat
rol
rcl
inc
push
dec
aad
in
ss
mov
movb
add
xchg
mov
leave
pop
dec
fisubl
inc
pop
push
push
aaa
mov
movsl
push
mov
aaa
push
loopne
push
adc
lret
or
or
lahf
dec
pusha
aas
das
sub
dec
stc
xor
adc
pusha
gs
lods
clc
push
jg
inc
mov
jnp
push
and
sub
mov
pop
iret
add
xlat
rcrl
loope
sub
cmp
icebp
xor
jnp
arpl
sbb
in
jbe
aam
pop
push
ljmp
sbb
dec
jns
lods
ret
xor
repnz
mov
sbb
cmpl
into
or
js
ds
cmp
pop
push
lods
inc
push
mov
lods
fdivl
pop
in
ss
movsb
fisttpl
xchg
add
and
sub
mov
sbb
inc
testb
sbb
outsl
sbb
xor
and
ficoms
addr16
in
push
daa
add
js
jmp
lret
push
inc
mov
sbb
or
jno
adc
jne
cmc
movsb
in
mov
or
out
lds
jb
cmpsl
rorb
pusha
cmpsb
inc
xchg
sbbb
inc
stos
pushf
mov
mov
loopne
arpl
mov
idiv
out
inc
sub
popf
push
mov
and
pop
push
jl
or
ficoml
push
jl
mov
xor
sub
lret
int3
inc
inc
daa
call
cmp
xchg
mov
and
sbbl
sbb
xor
pusha
sbb
es
xchg
xchg
inc
aas
sti
or
add
sub
stos
dec
jmp
stos
add
pop
or
mov
mov
stc
cmp
aad
fisttpl
and
push
test
movsb
jmp
shlb
lret
and
inc
adc
nop
or
rcll
movsb
into
imul
inc
mov
int3
lods
sub
or
out
pop
andps
mov
push
and
cmc
ljmp
push
jecxz
adc
jge
mov
pop
dec
lea
mov
loopne
aam
dec
cmp
push
mov
push
adc
sar
mov
das
popa
xor
nop
ficoms
test
sbb
pop
adc
aad
inc
fidivs
sarb
mov
sbb
push
imul
lcall
fidivs
jns
int3
add
jbe
mov
cli
mov
xor
xor
push
rclb
test
stos
cmp
loopne
mov
jae
loope
xor
mov
xlat
lret
sub
inc
dec
stc
dec
call
rcr
pop
jp
xor
movsb
lock
movsb
jl
ja
push
nop
fmul
or
mov
push
mov
push
insb
fnstenv
out
xor
negl
test
xchg
adc
idivl
ja
pusha
add
jmp
in
stos
xor
in
pop
xchg
in
movsl
scas
push
xlat
mov
dec
movsb
jae
jnp
pcmpgtd
daa
stos
ds
jge
hlt
xor
cmp
jmp
cmp
jge
pusha
adc
mov
cld
pusha
mov
je
jns
ss
xchg
adc
mov
sti
jno
adc
dec
xor
inc
das
nop
xchg
jecxz
in
xchg
mov
negb
cmpl
negb
xor
stc
in
add
dec
adc
daa
sub
push
lods
leave
movaps
cltd
inc
fs
mov
sbb
stc
mov
fisubl
lods
data16
sbb
dec
stos
loop
adc
xchg
mov
mov
pop
push
mov
dec
and
cmc
xorl
cmp
ljmp
jmp
jbe
out
call
add
mov
int3
fsubrs
dec
pop
popa
daa
mov
or
scas
in
sub
cmc
push
mov
xlat
or
xchg
or
pop
repz
in
add
or
cmp
xor
xchg
cmc
and
lret
adc
lahf
or
dec
jmp
insl
pop
adc
loopne
outsl
xchg
inc
xchg
js
xchg
mov
mov
and
push
ljmp
ret
xor
jg
push
lcall
mov
punpckhdq
mov
pop
fildll
int
sbb
mov
sbb
mov
lods
mov
dec
sbb
ljmp
add
leave
fmull
pop
insl
jecxz
rcrb
test
cltd
mov
out
sbb
cmp
lret
inc
call
xor
pop
push
mov
push
mov
pusha
push
and
and
test
add
sbb
mov
repnz
arpl
stc
or
addr16
and
lea
xor
push
faddl
sub
pop
enter
mov
hlt
or
xor
xchg
inc
test
in
subb
mov
dec
xchg
enter
xor
xchg
rcll
aam
push
sti
leave
xchg
imul
test
loopne
outsl
ljmp
in
xchg
shrb
push
sbb
cmp
xchg
xchg
mov
data16
or
cwtl
xchg
mov
add
sub
push
dec
repnz
or
or
xor
jmp
dec
movsb
sub
push
popl
loop
lahf
int
insl
shll
jnp
and
ja
std
and
mov
push
pusha
test
mov
hlt
mov
cmp
xor
sahf
lret
fs
insl
lret
sub
loop
mov
inc
jg
mov
or
jge
add
cmp
mov
xor
in
out
mov
jno
xor
insb
push
fists
mov
scas
adc
nop
pop
imul
js
fdivp
and
je
je
addr16
pusha
and
sti
aas
xchg
ja
aaa
punpckhdq
cltd
pushf
aas
aaa
fiadds
sub
inc
movsl
jg
sbb
pop
or
cmpsl
mov
xchg
push
push
xorl
daa
imul
mov
push
call
mov
lock
mov
arpl
in
cmp
inc
mov
incl
or
in
mov
mov
mov
add
or
popf
push
loope
cld
loop
movsl
dec
adc
out
mov
pop
jne
push
add
test
dec
mov
loopne
or
xor
popf
lcall
xor
pop
lret
mov
ret
aad
adcl
sbb
xor
inc
test
je
push
xchg
fs
adcb
pushaw
imul
insl
fistpl
pcmpgtb
push
mov
in
ds
or
sub
fldl
dec
lock
mov
cltd
sbb
cmc
xlat
ret
cs
adc
les
fldl
imul
cli
sarb
cwtl
cmpsl
dec
dec
daa
fstl
shlb
gs
jge
xchg
movsb
mov
cmpsl
sbb
out
fildll
lds
stos
pop
pop
pop
ja
and
push
jb
in
xor
imul
dec
xchg
and
jl
push
imulb
das
loopne
inc
lahf
adc
push
call
mov
add
fcmovnb
mov
rclb
pushf
inc
xchg
push
es
popf
scas
xchg
inc
jae
cmp
data16
imul
sub
arpl
out
cs
jb
and
aam
mov
lea
aaa
push
push
cmp
pushf
or
mov
in
push
add
fwait
pushl
inc
mov
jp
add
aas
sub
dec
adc
ja
lfs
int
dec
insl
adc
pop
sbb
popf
mov
xchg
call
jb,pn
xor
jecxz
jb
or
dec
cmp
lods
cmp
and
jbe
rorb
fisubrl
jp
sub
movsb
mov
sbb
push
fidivl
add
inc
call
scas
scas
xor
nop
mull
mov
mov
push
ljmp
push
dec
stos
cmp
sub
xor
mov
mov
std
or
jle
jne
fsubrs
xchg
fwait
imul
leave
push
fucomp
cltd
jno
fld
test
cmpsl
fstpl
jp
cmpsb
pop
jmp
not
imul
sarb
adc
inc
push
jne
mov
adc
mov
incb
repnz
in
jns
jg,pn
and
mov
jno
cli
in
stos
dec
mov
mov
mov
xorl
sbb
jns
cmp
xor
mov
inc
sub
pop
mov
out
or
sahf
xchg
hlt
mov
inc
push
add
mov
cmpsb
inc
add
xor
into
push
jne
cmp
cmp
jae
gs
mov
int
add
sbb
push
popa
cmp
nop
gs
into
inc
pop
in
pop
sub
pop
sahf
mov
fld
and
hlt
sti
pop
mov
lods
jno
sub
mov
xor
push
mov
shll
out
pop
rcr
fildll
xor
ds
jne
std
sub
dec
pop
aaa
xchg
lock
mov
jns
sbb
push
test
lds
mov
mov
out
mov
fdivrl
out
stc
les
or
mov
mov
aas
mov
in
adc
or
ror
sub
dec
scas
loopne
xchg
imul
dec
cmp
in
ljmp
lret
and
scas
mov
add
leave
scas
aaa
mov
test
lea
dec
xor
push
mov
mov
dec
mov
sub
fs
mov
int3
or
adc
fisttpl
dec
icebp
dec
pop
das
scas
xchg
cli
pop
mov
flds
insl
dec
int3
inc
lods
scas
jb
mov
hlt
fwait
sti
clc
or
lret
fsubrl
mov
dec
ret
aas
mov
add
push
pop
cmp
jne
popa
mov
xor
jg
push
and
lock
cmp
ljmp
les
sbb
mov
ret
arpl
or
dec
mov
cmp
mov
movb
xchg
and
mov
inc
fs
push
mov
jge
xor
fsubs
pop
mov
adc
and
bound
jno
adc
inc
bound
cmpsl
fisubs
data16
bound
or
push
lods
inc
lds
int3
and
je
ret
xorb
dec
push
daa
mov
ret
sbb
cmpsb
sbb
loopne
addb
mov
mov
mov
push
dec
stc
out
inc
jg
xchg
adc
das
add
les
les
add
dec
enter
sbb
mov
outsb
inc
loop
mov
and
jecxz
test
push
enter
bound
sarb
mov
xchg
imul
lods
jp
jno
adcl
jmp
or
leave
arpl
ljmp
pop
insb
push
inc
jno
mov
dec
jo
jmp
jl
stos
popf
and
fwait
cmpsb
lahf
sub
aas
sub
cli
lock
xor
cltd
push
mov
cmc
push
popa
sbb
or
cmp
fdivl
sbb
mov
jno
inc
dec
es
inc
orl
stos
dec
sbb
mov
or
cmp
mov
xor
add
xor
in
std
setg
jnp
into
mov
test
inc
push
mov
push
sub
xchg
insb
pop
adc
imulb
imul
lods
cmp
push
hlt
out
adc
or
adc
imul
mov
cli
mov
pcmpeqb
mov
inc
outsb
mov
mov
test
mov
adc
xorl
push
and
jne
inc
push
cmpsl
lahf
mov
xchg
daa
into
mov
pop
ljmp
sbb
push
push
or
inc
lock
inc
sub
stc
mov
mov
imul
inc
jbe
mov
mov
ja
cs
lcall
and
fs
mov
lret
imul
stos
stc
pop
push
sahf
xchg
inc
sub
cmp
into
push
ljmp
or
repnz
dec
fists
mov
lods
js
xchg
xchg
dec
or
js
mull
ficompl
adc
inc
sarl
out
insb
or
mov
jnp
jp
pop
mov
stc
das
cmp
adc
icebp
stc
jge
fadd
cld
push
fstpt
stos
cmp
in
push
and
outsl
jecxz
andb
repnz
cmp
movl
rolb
jg
push
or
inc
inc
rolb
cltd
jo
jne
pusha
or
xor
push
xchg
adc
cmp
sbbb
movsb
inc
outsb
lds
push
add
mov
cmp
sbb
in
pop
lock
aas
aaa
mov
repnz
cmp
jne
in
xchg
loop
ja
sbb
icebp
xor
ss
jns
dec
cmp
arpl
xor
push
je
bound
cmc
and
imul
add
aad
sub
xchg
lock
sti
sbb
xor
insb
aaa
mov
jle
rolb
adc
xchg
sbb
push
mov
fcomi
inc
std
push
jns
test
jbe
cwtl
push
insb
int
xchg
add
xchg
inc
into
sbb
xchg
inc
sub
in
ds
lock
cld
in
mov
out
or
cwtl
arpl
cmpsl
scas
mov
sarl
sbb
aas
divl
cld
pop
data16
ffreep
jo
cmp
jp
add
in
dec
les
ja
mov
mov
mov
mov
int3
xchg
jge
outsl
adc
movsb
cmp
cmp
hlt
cltd
xor
inc
mov
xor
hlt
je
out
jge
inc
xchg
pop
mov
sub
jo
dec
inc
or
and
stos
dec
ljmp
pop
sub
stos
loopne
xchg
xchg
dec
ret
imul
lods
into
in
push
rorb
xor
or
rolb
loopne
lcall
push
js
lds
sub
jl
jno
pop
gs
sub
adc
lret
aas
dec
and
test
sahf
push
add
or
jae
add
rolb
mov
arpl
push
mov
scas
inc
cmp
fs
data16
xchg
add
fld
loopne
les
or
andb
outsl
dec
dec
and
cmp
in
cmp
notl
js
xchg
jns
dec
ljmp
aas
mov
xchg
lahf
cmp
incb
sub
and
not
pop
pusha
adc
lods
aad
jb
push
pop
push
aaa
data16
sbb
xor
cwtl
pushl
cwtl
ljmp
lret
push
jne
cmpsb
adc
push
lret
sti
pop
dec
sti
cmp
aad
test
mov
jge
and
subb
dec
xchg
push
shll
cmp
in
es
add
inc
and
sbb
mov
jb
mov
cmp
xor
add
cmp
or
cwtl
lea
dec
bound
icebp
add
lods
test
loope
sub
jecxz
pop
add
inc
dec
vprotq
dec
fs
pusha
push
push
jmp
out
jae
aaa
data16
mov
sahf
lea
add
hlt
sub
mov
inc
mov
push
or
jg
stc
mov
es
cmp
adc
negb
cli
loopne
nop
push
cmp
mov
mov
xchg
add
and
or
nop
pop
xor
sub
sub
rorl
sahf
fcomp
cmp
js
fwait
pop
dec
sbb
sarb
sub
and
mov
pop
mov
inc
outsl
test
and
dec
sti
inc
mov
shlb
sti
out
cmc
gs
les
push
mov
pop
rcl
ss
or
aaa
fs
add
xor
inc
pop
mov
dec
or
int
cltd
adcl
inc
add
mov
dec
inc
out
dec
dec
test
xor
pop
out
lods
fistpl
jb
pop
dec
lock
out
jecxz
add
and
enter
out
dec
xlat
negb
mov
dec
out
or
imul
mov
cmpsl
push
gs
jmp
popa
and
aaa
sub
sbb
cli
adc
sar
cwtl
aaa
xlat
jo
imul
fcmovnu
fs
js
stos
sbb
imul
adc
outsb
or
dec
xchg
push
lock
cmp
stos
stc
push
and
test
mov
inc
xchg
jl
or
pop
push
ret
mov
test
dec
dec
aaa
pop
mov
repz
ss
mov
mov
sbb
cmp
pop
scas
stc
in
dec
lahf
leave
sub
mov
pop
int
push
sbb
bound
pop
cmpb
and
dec
push
ja
lret
jge
pop
push
push
sub
mov
jb
shlb
test
push
rcrl
inc
or
jns
dec
adc
pop
xchg
enter
cld
popa
pushf
fdivrs
daa
imul
push
fdivrl
movsb
scas
ja
jbe
pop
jns
sarl
rcr
jnp
fdivrl
and
cmpsb
mov
stos
imul
stc
sbb
fsubrs
add
jge
cwtl
pop
fidivs
stos
lods
iret
sahf
loopne
loopne
cmp
int
sahf
push
movsl
rolb
dec
test
dec
cmc
nop
popf
sarl
je
sub
insl
out
testl
lret
adc
xor
out
sub
mov
cmp
cmp
jecxz
mov
sbb
xchg
clc
lods
int
shrl
mov
cmp
sbb
mov
orl
lods
lret
roll
xchg
mov
rolb
test
daa
cltd
xchg
in
add
scas
add
fisubrs
inc
jnp
in
iret
sti
in
test
notb
sti
call
scas
out
int3
pop
add
inc
ljmp
sbb
xlat
sub
test
or
ja
lahf
ljmp
sub
push
pop
int3
sbb
inc
inc
cltd
xor
cmpsl
fadds
mov
lds
pop
or
test
pop
lret
pop
xor
cmp
add
lret
jo
sub
cmp
call
add
fisttps
sub
inc
sahf
add
jg
lret
repz
pop
rorl
add
rcr
xchg
pushf
jp
mov
cmc
adc
sub
bound
and
pop
jl
outsl
push
sbb
inc
or
adc
scas
outsl
xchg
hlt
mov
xorl
jge
or
push
push
push
sti
popa
jbe
and
lret
fs
mov
cmp
gs
dec
dec
sbb
stos
addl
mov
fwait
sti
lahf
jmp
inc
jb
jle
stos
test
loopne
inc
js
jge
ljmp
push
jns
or
pop
inc
pushf
jae
ror
addl
jge
inc
push
sbb
xchg
xor
xchg
cmp
cmp
push
cltd
inc
sub
fildl
test
mov
lret
fstpt
mov
push
sbb
add
arpl
lcall
lods
je
dec
adc
jmp
ficomps
xchg
lea
sbbb
mov
cmpsl
enter
sub
ja
insb
jae
sub
scas
pop
cmp
popf
fdivrl
inc
lahf
mov
fstpl
imull
cmpl
insl
mov
or
fstps
in
ljmp
xor
mov
aaa
sbb
popf
push
mov
inc
test
test
inc
or
sbb
sub
jnp
jmp
rorl
and
xchg
inc
dec
and
jecxz
mov
mov
mov
add
mov
shlb
xchg
xchg
sarl
test
icebp
dec
ret
sbb
jg
dec
loope
ror
adc
rorl
mov
sub
sbb
add
sbb
cltd
je
data16
push
js
sub
jb
jp
inc
jle
jge
cmp
jae
inc
dec
pop
pushf
xchg
pop
into
adc
iret
sub
dec
cmp
into
push
lds
lcall
test
push
dec
push
inc
inc
add
pusha
add
int
pop
stc
push
sub
jb
jg
push
pushf
lcall
sub
psubd
pop
in
mov
aad
inc
aas
add
sub
das
cmp
push
bound
sti
test
test
fisubrs
lcall
popa
push
lods
push
mov
xchg
add
jg
sbb
mov
dec
pop
adc
scas
fistpll
add
add
push
add
int
loopne
aam
int
subb
cwtl
clc
fsubrl
shrb
mov
stos
scas
xor
aad
push
mov
pop
mov
outsl
xchg
jle
test
xor
dec
xor
or
mov
fsubrs
xchg
sub
ss
pop
sub
lret
jne
xlat
xor
int3
xchg
xor
or
inc
add
adc
pop
popf
sbb
out
pop
or
cs
push
stos
jns
pop
sbb
dec
sub
leave
mov
sar
addl
mov
cli
mov
shrb
cmpsb
xor
rclb
sub
cmp
mov
repnz
flds
mov
fstl
sub
sbb
dec
add
mov
shll
dec
rcrl
fistpl
or
add
cmp
popa
das
add
mov
lea
add
pop
push
dec
inc
rorl
loop
out
lahf
mov
xchg
loope
adc
aad
add
dec
ljmp
jb
inc
sar
xor
lret
xor
push
orb
call
xchg
mov
int
cs
push
mov
dec
hlt
aaa
and
add
rcll
int3
add
xlat
xor
aaa
in
cmpsb
xchg
sbb
sub
mov
sub
cmp
jl
jno
jne
adc
sbb
xchg
jb
popa
pop
push
add
dec
lods
push
pusha
inc
in
sbb
mov
sti
test
xor
pop
mov
sub
mov
das
pop
mov
ret
sti
leave
adc
jbe
mov
push
or
sbb
clc
rcrl
sbb
imul
sarb
int
les
pop
jb
inc
dec
xchg
in
mov
pushf
xchg
test
inc
in
mov
lea
out
cmc
shlb
mov
jo
jb
orl
sbb
xchg
adc
pop
cmp
and
dec
jmp
aam
mov
imul
pop
mov
outsl
leave
outsb
dec
add
jno
lds
add
fldl
out
movsl
jmp
aam
pop
sbb
addr16
xchg
cmp
fidivl
jge
or
in
dec
adc
in
lock
mov
push
stos
data16
aam
dec
mov
ljmp
push
mov
pop
sbb
enter
fwait
mov
pop
gs
jmp
data16
and
idivl
xlat
jns
adc
jno
and
xor
pop
andb
dec
and
mov
in
orb
pop
outsl
mov
imul
mov
mov
push
mov
mov
xchg
sbb
rorl
aaa
out
test
xor
orb
out
sar
subl
mov
inc
mov
cwtl
movsb
lret
bound
inc
pop
push
enter
jp
out
xchg
xor
je
insl
aad
mov
pusha
shlb
adc
cmp
mov
loopne
jae
ds
test
and
adc
jle
lods
out
int3
dec
jns
imul
sarb
jmp
fsubrl
cmpsb
fistl
mov
leave
mov
in
je
inc
push
adc
adc
clc
mov
push
loope
push
lds
in
rcll
and
mov
xchg
push
xorl
cltd
or
loop
lahf
sbb
js
and
xor
daa
mov
cmp
or
sub
xor
aam
shrb
aas
inc
ljmp
mov
test
jp
in
push
cwtl
outsl
jns
gs
loopne
push
push
mov
jecxz
mov
ret
xchg
mov
xor
daa
fnstenv
xchg
sbb
push
xchg
sbb
cmp
xor
loopne
lahf
popf
das
dec
push
sti
mov
loopne
lds
jns
inc
into
sub
and
pop
jl
fidivrs
fmuls
test
enter
mov
stc
inc
mov
pop
test
in
hlt
pop
lret
lcall
mov
popf
nop
lods
insl
test
test
loop
jns
imul
push
add
scas
outsb
loopne
outsb
imul
mov
add
sahf
rcrl
out
inc
jl
movsb
inc
mov
pusha
adc
add
sbbl
xchg
iret
xchg
popa
mov
pop
mov
jge
cmp
or
mov
xor
and
fisttpll
pop
xchg
daa
or
aad
mov
xlat
mov
adc
outsl
pop
add
outsl
shr
movsl
shlb
fdivrl
jo
sbb
xchg
xchg
or
sub
sub
cltd
iretw
pusha
out
pop
js
dec
pop
dec
mov
pop
cmp
in
pop
les
jnp
in
xor
pop
mov
add
sahf
mov
js
lret
int
sbb
popf
ret
dec
xchg
pop
pop
fwait
and
stos
inc
js
fdivr
sbb
das
outsl
fwait
out
mov
sub
and
xlat
mov
fisubrl
lock
call
cmp
and
jmp
in
xchg
cs
xchg
and
xor
pop
js
inc
sub
aas
das
jg
mov
xor
dec
adc
fbld
sbb
daa
lret
out
add
xchg
in
xchg
xchg
into
outsl
popf
push
stc
jnp
sbb
or
push
xchg
js
imul
or
dec
xchg
js
jecxz
pop
push
or
movsl
outsl
nop
fnstsw
inc
and
ret
data16
push
sahf
daa
inc
add
push
mov
mov
mov
lret
and
sarl
outsb
testl
fsts
dec
aam
mov
push
loopne
icebp
inc
push
jmp
and
xor
orb
icebp
push
ficoml
cmp
dec
aaa
int3
sub
repnz
dec
xchg
pusha
add
and
cmp
cmpsb
push
out
cmp
bound
inc
inc
cltd
add
pushf
dec
outsb
push
mov
push
sti
bound
xor
mov
cmp
inc
mov
sahf
out
jno
mov
lret
loopne
es
imul
outsl
lods
jne
mov
repnz
mov
cltd
decl
insl
pop
fcomi
movlps
decl
xchg
mov
sub
in
and
dec
add
dec
and
mov
out
ljmp
pop
cs
xor
jne
es
ja
leave
lret
aam
loopne
loope
subb
test
mov
push
dec
xor
enter
jns
inc
xchg
std
inc
mov
aaa
jge
pusha
pop
lea
iret
jnp
les
cli
arpl
jno
fcmovu
fidivs
dec
pop
push
cltd
mov
jmp
inc
pop
fwait
adc
leave
addr16
pop
pop
movsl
xchg
dec
cmp
mov
dec
cmp
imul
inc
xchg
jp
rcr
fucomp
shlb
add
sub
insl
mov
das
mov
xchg
idiv
popa
decl
push
sbb
and
nop
or
pop
sbb
mov
fadds
add
in
shll
imull
add
or
test
lock
fidivrl
lock
test
es
loopne
push
mov
jge
dec
mov
pop
insb
into
jle
jmp
jae
add
cmp
pop
loop
test
xchg
cmp
lahf
mov
push
aad
nop
shll
mov
loope
loopne
mov
xchg
int
add
or
in
gs
ljmp
vcvtss2si
push
sub
test
aas
mov
iret
mov
test
je
xor
xchg
bound
lret
dec
mov
xor
dec
or
fidivs
leave
adc
push
push
ficomps
gs
jg
test
lea
push
push
leave
mov
jge
xor
jae
test
pop
or
popf
adc
int
cltd
push
out
icebp
push
push
loope
mul
in
mov
xchg
into
into
repnz
lret
mov
mov
cwtl
inc
idiv
jmp
push
sbb
inc
in
pop
xchg
arpl
mov
mov
imul
pop
aam
outsl
in
out
popa
dec
dec
or
inc
push
lret
in
adc
xorl
jb
cwtl
popa
jp
movsb
xchg
and
mov
in
shlb
sub
xchg
push
add
in
shll
add
test
inc
aam
push
mov
push
xor
cmp
cmp
xchg
xchg
xchg
leave
dec
lock
dec
push
push
das
cmp
loope
test
add
cmc
add
and
adc
cwtl
lcall
test
or
fsubrp
int
sbb
sub
lods
or
pop
xchg
dec
in
addr16
pop
pop
daa
and
xor
ficoml
imulb
fcomps
lods
and
cmp
fwait
inc
ret
or
es
and
inc
sbb
dec
jmp
jns
sahf
xchg
sub
pop
adc
cmp
into
dec
test
jp
cwtl
pop
stos
pop
jecxz
push
pop
fisubl
mov
or
cmpsb
popa
pop
xchg
jo
sbb
sti
sbb
cmpsl
call
push
js
xor
sbb
std
shll
lds
mov
cmp
inc
jb
add
push
jg
xor
mov
lods
dec
dec
and
and
dec
lcall
sahf
mov
lcall
sbb
add
xor
xchg
dec
movsb
es
sbb
add
in
mov
imul
push
or
les
mov
and
sub
xchg
push
pop
arpl
xchg
lret
mov
lods
mov
or
mov
mov
mov
jmp
pop
cmp
outsl
dec
add
shrl
mov
cltd
mov
or
call
xor
dec
or
lcall
lea
inc
push
fidivl
add
mov
pop
inc
pop
cwtl
js
in
sub
insb
adc
mov
in
popf
sub
insl
sbb
shl
adc
adc
addl
mov
out
xchg
and
sbb
repz
out
mov
test
pushf
movsb
cmp
jp
push
filds
jns
js
hlt
or
test
enter
or
into
mov
loope
popf
and
loopne
sbb
pop
mov
pop
ljmp
jge
add
xchg
std
outsl
mov
mov
ficompl
mov
push
inc
cld
or
xchg
fstl
negb
jmp
in
sub
lret
inc
fs
mov
icebp
popa
ret
cwtl
pop
adc
cmp
in
fmull
flds
mov
push
push
jne
mov
add
push
ror
cmp
xor
and
dec
es
clc
adc
add
push
pop
or
stos
pop
aad
idivl
jnp
lea
push
int3
adc
jmp
in
and
mov
in
xchg
test
add
inc
ljmp
cs
xchg
cmp
shrb
outsb
sbb
and
popa
inc
mov
adc
out
adc
ds
cmp
stos
sub
dec
loop
hlt
dec
or
pop
fldenv
shrd
cmpsb
pop
mov
mov
ret
sar
repnz
mov
je
jg
enter
xor
push
add
dec
jle
imul
adc
add
pop
and
pop
pop
mov
lds
pop
or
ret
imul
ja
arpl
mov
sbb
int3
jle
xchg
xchg
lock
and
and
sarl
incl
ja
gs
sbb
sti
scas
cs
scas
iret
pop
testb
sbb
in
sub
xor
loop
mov
fisttpl
pop
aam
mov
add
sub
lock
push
xchg
pop
mov
enter
jp
push
insl
out
stc
xchg
push
xor
cmp
mov
adc
or
add
jne
mov
pop
mov
push
mov
or
imul
push
fistpll
mov
dec
add
loope
or
scas
in
stc
fbld
adc
add
pop
xchg
push
sub
mov
clc
lods
cltd
jns
cli
jne
lea
xchg
outsl
inc
test
dec
clc
test
pop
mov
cmp
test
das
sbb
das
pop
pop
int3
mov
mov
cmc
test
mov
dec
adc
loop
lcall
inc
int
flds
out
aam
push
xchg
sub
movb
les
cmp
jbe
jb
inc
sbb
push
and
or
xchg
sbbl
cmpsl
xlat
add
cld
aaa
or
lcall
test
mov
lock
cmp
cmc
dec
scas
dec
mov
mov
ret
addb
lock
arpl
int3
nop
mov
xchg
fcmovnu
xor
dec
mov
es
add
test
cmp
data16
pusha
pop
gs
xchg
mov
lds
repnz
lret
add
push
divl
mov
push
stos
ret
sub
mov
aas
sbb
daa
pop
imul
xor
shl
lahf
xor
out
daa
cmc
mov
fists
in
xor
push
cmp
fidivrl
or
adc
enter
arpl
or
sti
ror
pop
and
sub
negb
loopne
xchg
sub
popaw
mov
push
mov
stos
imul
sbb
ret
dec
xchg
pop
ljmp
sub
push
pop
pop
test
or
arpl
aaa
pop
inc
jne
aam
lahf
andl
xchg
cld
jg
push
push
outsl
mov
repnz
mov
clc
subb
jp
jo
inc
mov
sbbl
pusha
mov
add
mov
repnz
mov
imul
push
pop
add
sbb
pusha
sub
imul
loope
gs
cmpsl
mov
gs
imul
push
mov
dec
jbe
push
outsl
push
dec
push
jp
aaa
ss
jae
jg
fidivs
add
fstl
push
jp
leave
lret
test
jl
cmp
mov
cmp
and
int
popa
pushf
xor
or
je
stos
rcrl
cltd
sbb
in
call
xchg
aam
mov
or
movsb
xor
inc
sub
cli
mov
in
or
andb
icebp
fbld
mov
jg
push
mov
imul
clc
ds
pop
jne
popf
movsb
das
mov
xchg
lock
pop
mov
mov
cltd
jp
popf
add
fisttpl
pop
jmp
adc
mov
dec
shll
sbb
mov
aaa
aas
adc
fwait
lods
idiv
aaa
push
mov
adc
adc
xchg
cmc
push
in
stos
jmp
sbb
jecxz,pt
mov
stc
or
adc
fisubs
or
xor
mov
hlt
fsubr
cwtl
or
jo
repnz
inc
lret
adc
jmp
adc
loopnew
into
push
push
xor
addl
sbb
cmp
xor
cltd
ja
cltd
sbb
jp
sbb
outsb
dec
gs
mov
mov
push
icebp
loop
je
adc
sbb
inc
ffreep
mov
sub
cmp
mov
push
leave
or
shl
xor
out
jp
daa
dec
dec
rorb
out
pop
lock
push
pusha
fidivl
xor
sub
mov
lcall
aad
mov
sub
xor
notb
insl
hlt
aad
jae
popa
bound
mov
bound
fnstcw
ss
dec
jno
mov
adc
cmpl
cwtl
mov
in
cmp
icebp
cmp
ja
jno
inc
mov
lods
dec
pop
fsubl
icebp
imull
ds
and
shrb
pop
dec
dec
aad
or
lahf
xor
test
aam
xchg
clc
mov
push
cmp
arpl
scas
loop
rolb
in
addr16
push
test
in
pop
adc
pop
outsl
jmp
roll
sbb
pop
outsb
mov
hlt
orl
jbe
cmp
movsb
sbb
popf
push
rolb
xchg
inc
mov
or
mov
decl
mov
sbb
push
in
fsubrs
jno
inc
xor
fisttps
mov
ret
xor
xor
icebp
rorb
mov
cmp
xor
mov
or
adc
aad
outsb
sahf
xabort
in
iretw
dec
mov
ret
jge
mov
stos
enter
ror
call
aas
pop
pop
addr16
pop
mov
pop
test
test
aas
pop
pop
pushf
dec
fbstp
sbb
sbb
jg
mov
jno
int
jae
test
xor
xchg
pop
fdivs
jmp
ja
inc
testb
daa
sbb
xchg
pop
insb
imul
popa
or
movntq
sub
lods
repz
andl
cmpsl
aad
les
xchg
push
xchg
andb
call
push
cmp
cld
jbe
mov
std
cli
clc
imul
add
adc
ficoms
shlb
movsl
btc
repnz
add
inc
mov
dec
sbb
jnp
pop
dec
inc
add
lods
jp
jnp
shll
mov
sub
jo
xchg
ljmp
fsubl
sbb
cmp
mov
call
cmpsl
test
and
mov
into
dec
int
mov
dec
and
xor
add
mov
sub
call
cltd
fucomp
shl
push
and
mov
nop
out
mov
mov
movsl
sub
add
shl
les
stos
jo
sbb
decb
xor
xchg
adc
cmp
aad
das
dec
add
cmp
push
cltd
and
imul
cmp
and
and
fnstsw
mov
adc
movsb
mov
mov
jb
into
cmp
jge
xlat
pushl
lret
icebp
jl
or
sbb
push
mov
mov
cmc
inc
bound
ja
stos
test
ja
cli
fldcw
sar
nop
sahf
cmp
mov
cmp
jmp
scas
ficoms
mov
cltd
mov
dec
xor
data16
out
lods
xorb
les
mov
rcll
add
jmp
mov
push
pushf
insb
inc
divl
push
loopne
out
push
push
sti
lcall
mov
test
cmc
imul
sbb
popa
push
dec
inc
mov
mov
and
dec
pop
addr16
out
aad
adc
cmc
negl
xlat
lods
mov
ret
orb
mov
sub
lock
shlb
leave
lret
divl
outsl
pop
lret
js
xchg
cs
jmp
mov
jp
xor
jg
pushf
and
dec
out
cmc
and
and
jne
inc
mov
cwtl
adc
scas
nop
pop
mov
add
cmp
mov
and
jmp
jae
addr16
mov
lret
call
in
in
scas
mov
sub
adc
cltd
sarl
jmp
nopl
imul
pop
test
aad
dec
imul
pusha
popf
insb
mov
push
jge
jne
ss
stc
push
int
xor
cmp
xchg
pop
mov
xlat
mov
jb
lds
cmpl
inc
out
push
and
pop
jno
inc
movsb
jns
add
sub
mov
cli
popa
push
dec
cmp
fcomps
mov
cmp
dec
pop
das
shll
xchg
sbb
lock
inc
mov
mov
call
mov
lds
je
jmp
cmp
cltd
cmp
test
in
icebp
jl
mov
loop
aas
mulb
adc
scas
cmpxchg
or
xlat
mov
or
or
fisubrs
pop
in
lods
dec
sbbb
loop
iret
std
aam
cmc
sbb
mov
adc
sub
add
cltd
xor
imulb
aas
ja
pop
pmulhuw
stos
and
leave
sbbb
movsb
call
jmp
fcomps
mov
sub
cmc
enter
sbb
popa
push
lahf
adc
mov
rorl
das
negb
push
cs
pop
push
sar
mov
lods
push
sub
mov
lcall
insl
adc
push
test
daa
test
sbb
imul
scas
jg
outsl
inc
xor
mov
pop
add
inc
pusha
push
daa
icebp
mov
aas
sbb
inc
add
sbb
cmc
xchg
xorl
cwtl
sub
js
cmp
loopne
mov
jne
inc
test
mov
xor
add
fwait
je
in
cmp
mov
and
mov
mov
push
lret
push
sbb
mov
xchg
pop
mov
pop
loope
fnstsw
sbb
arpl
sti
je
push
lahf
add
fwait
jne
bound
je
xor
jb
jecxz
mov
adc
and
pop
pop
pushf
sahf
mov
mov
cmp
sbb
jg
les
mov
inc
lock
lds
ja
push
cmp
rclb
inc
push
xor
and
sub
mov
pop
dec
ljmp
cltd
sbb
imul
lods
in
setne
xchg
and
inc
jae
mov
stos
loope
sarb
adc
push
xchg
jecxz
sar
dec
xlat
out
push
add
xor
xor
stc
sbb
mov
je
fsubl
push
sbbl
push
bound
mov
std
mov
out
add
sbb
cmpsl
aad
sub
and
dec
lahf
mov
lods
mov
jnp
imull
pop
mov
mov
lea
or
mov
inc
in
pmovmskb
cmc
rep
popa
push
lods
ret
les
fstps
dec
mov
psrad
mov
leave
jno
icebp
test
rcrl
inc
sahf
jl
popa
mov
repnz
xor
push
loope
sarl
push
xor
inc
adc
outsl
adc
jnp
aaa
rcr
cwtl
stos
push
lds
out
push
cmp
mov
and
adc
mov
pop
jne
xchg
xor
aam
mov
stos
lods
ret
in
mov
xor
fmulp
orl
popf
cld
test
js
rolb
push
sub
pop
call
lods
data16
cmc
into
scas
fwait
out
into
scas
adcl
xchg
or
jns
les
and
lret
cwtl
je
cmpsl
or
sbb
and
std
pop
popa
stos
xchg
sahf
cmp
leave
xor
enter
popf
push
jno
mov
cmp
cmp
lea
xchg
out
in
sbb
xor
dec
bound
outsl
fimull
in
cli
cltd
sub
or
xchg
jmp
mov
cmp
loopne
or
mov
sub
adc
scas
jmp
push
outsb
cmp
inc
dec
andl
outsl
mov
enter
test
jbe
sbb
stos
fcomp
sarl
lahf
mov
lret
push
mov
sub
adc
cmp
pop
lcall
push
pop
nop
or
jbe
hlt
cmp
adc
mov
mov
mov
lds
shlb
and
jp
jb
xchg
dec
sbb
add
jge
pmaxub
mov
mov
sub
push
and
inc
subb
mov
and
push
adc
lds
fidivrs
mov
aam
imul
ljmp
pop
cmpsl
or
mov
pop
int
dec
xchg
outsl
xchg
adc
cmp
mov
cltd
mov
loop
add
mov
data16
add
sub
or
aaa
insl
xor
mov
clc
push
xlat
push
leave
xchg
out
shlb
xchg
xor
das
out
test
lcall
jmp
mov
xlat
je
sbb
andb
jecxz
outsl
cli
jl
add
shlb
dec
add
call
lock
jg
pop
mov
cmp
scas
jo
jnp
push
rcrl
fmulp
outsl
jb
xor
push
sbb
in
jl
xor
data16
cmc
ret
movsl
or
sbb
dec
das
jns
int3
sarb
pop
scas
int3
pop
cld
xchg
das
jle
mov
jne
insl
in
push
sbb
and
inc
sub
bound
lods
call
stos
push
dec
mov
inc
inc
mov
or
fsts
test
mov
inc
dec
jg
arpl
sub
or
ret
jl
inc
push
pusha
xchg
xor
int
lcall
fwait
mov
test
add
loopne
cs
test
xor
cmp
mov
add
ds
ret
sub
xor
cmp
mov
lret
pusha
dec
loopne
stos
xor
mov
mov
loopne
cmpsb
pop
lock
aam
mov
testl
mov
adc
faddl
sub
out
add
hlt
or
mov
mov
pop
push
dec
or
sbb
in
ret
in
and
mov
cld
dec
sub
imul
mov
cmp
mov
inc
xchg
andl
imul
mov
jge
scas
dec
fwait
mov
push
inc
mov
xchg
popf
cmp
test
pop
mov
jmp
bound
mov
pop
lret
pusha
loopne
inc
adc
xor
pop
or
bound
push
pop
mov
loope
les
jne
ja
xor
cltd
stos
or
inc
push
leave
mov
push
sub
ja
cmp
inc
in
enter
jno
push
jbe
fcompl
fs
lock
or
jae
jbe
xor
hlt
fimull
sub
mov
aas
jmp
and
iret
xchg
adcb
test
cmp
ljmp
popa
stc
data16
scas
xchg
shll
cmp
jmp
pop
sbb
inc
and
je
dec
mov
push
dec
scas
and
jae
push
in
cmp
push
adc
xchg
and
and
pop
pop
sbb
inc
test
fs
rclb
icebp
cmp
cmp
xor
inc
xchg
ret
lret
fmull
sbb
add
lcall
cs
add
dec
or
shll
xchg
aam
inc
or
lods
push
rorl
inc
mov
sub
fimuls
aas
fptan
pop
mov
sub
jae
dec
lods
int3
add
leave
ror
shlb
cmpsb
aas
sub
in
repnz
mov
mov
add
sbb
add
sub
adc
shrl
xchg
ds
leave
mov
mov
incb
mov
imul
sub
leave
adc
pop
stos
pop
mull
test
push
dec
gs
adc
rcll
adc
movsb
insl
adcl
xchg
hlt
dec
xor
adc
pop
xacquire
push
inc
and
sbb
cmpsb
fisttps
adc
in
mov
into
sub
test
push
mov
inc
sbb
int3
mov
repnz
das
addr16
movsl
test
cs
mov
mov
add
sbb
dec
adc
sub
popf
nop
cmp
mov
push
pop
mov
push
dec
dec
mov
mov
xorb
dec
xchg
inc
mov
jecxz
int3
addr16
jbe
mov
cwtl
and
xor
pop
inc
push
and
mov
sbb
sub
xchg
xchg
mov
ret
push
mov
xlat
dec
pop
nop
aad
mov
or
cli
fdivrs
adc
hlt
cs
mov
repz
je
mov
dec
jb
mov
push
dec
cwtl
jle
inc
lods
std
xor
sbb
rcrl
clc
mov
sbb
inc
stos
xchg
sbb
outsb
int3
add
mov
or
pushf
js
into
loop
scas
jno
scas
fldt
stc
jmp
rcrl
cmpsl
add
inc
cmp
imul
add
push
fldcw
inc
sub
cmpsb
jns
test
inc
dec
jnp
mov
and
add
cmp
add
repnz
or
popf
jmp
imull
push
mov
popa
lcall
push
insb
fmuls
sahf
sub
subb
adc
gs
xchg
jne
lods
mov
push
lock
test
outsb
movl
dec
fldl
mov
mov
bound
mov
aad
js
pop
or
icebp
je
into
icebp
movsl
repnz
inc
gs
sbb
or
dec
xor
jg
loope
mov
pop
or
mov
mov
lea
aam
test
lds
push
pop
mov
pop
mov
jge
mov
mov
sub
nop
shr
pop
or
repnz
cmp
mov
xchg
mov
pop
inc
out
pop
inc
loopnew
sbb
xor
add
mov
je
xor
inc
pop
popf
aaa
or
sub
jne
in
xor
pop
scas
sar
js
int
inc
lea
shlb
cmp
xchg
sbb
fmuls
lcall
cltd
in
and
sub
loope
xlat
pop
rclb
fwait
inc
lods
stos
cmp
pop
jmp
shlb
adc
jno
les
jg
out
mov
addr16
jnp
pop
xor
mov
imul
ljmp
sarl
hlt
push
cwtl
mov
sbb
mov
add
pop
ret
stc
lds
and
sbb
xchg
xchg
sub
xchg
cwtl
and
jae
and
sarb
pop
dec
repnz
lret
lea
stc
movsb
pusha
enter
xchg
repz
pop
or
jg
into
mov
loop
aas
test
mov
dec
sar
dec
frstor
push
ja
dec
sbb
push
xchg
cmp
push
rcrl
and
std
sbb
enter
lds
push
rcrl
jo
addr16
xchg
xlat
imul
lea
loope
mov
pop
shrl
cwtl
mov
adc
scas
adc
sti
sbb
xor
std
repnz
lods
push
pop
jge
mov
lds
cmp
pop
lret
ret
loope
mov
hlt
addr16
clc
cmp
js
adc
sbb
mov
add
scas
pusha
add
jns
jecxz
fcmovnbe
loopne
stos
dec
je
push
fidivs
sbb
repnz
push
jns
orb
add
pop
push
imul
pop
xchg
inc
mov
test
push
cmp
and
xchg
int3
mov
popa
ret
jne
rorl
dec
stc
aad
divl
cmp
xchg
inc
pop
mov
push
cmc
or
scas
push
rorb
notl
xchg
or
jae
jge
testb
push
in
pop
cmc
adc
xor
lea
or
stos
mov
loop
stos
enter
repnz
sub
scas
cmp
dec
sbb
xchg
xlat
dec
cmp
inc
roll
or
test
movsb
sbb
adc
bound
test
fsubs
xor
data16
push
ficompl
pop
xor
aas
movsl
xchg
jmp
popf
out
push
cltd
pop
repnz
es
and
sahf
push
or
shl
shlb
sub
xor
pop
add
call
cmp
or
es
jns
xchg
or
pop
sbb
cmpsb
pop
scas
test
add
outsb
fildl
push
insb
jae
mov
loop
or
mov
jno
gs
xchg
lcall
push
pop
ja
add
decl
push
mov
test
add
in
lcall
and
mov
mov
xchg
movsb
adc
xor
mov
push
out
in
sbb
adc
sbb
mov
cmpsb
jne
pop
xchg
and
or
adc
aam
flds
inc
fcomi
push
into
scas
dec
or
xor
sbb
jge
ficoms
jg
movb
adc
fucomi
jne
cmpl
outsb
adc
stc
jmp
pop
std
jl
push
es
jmp
inc
lret
cmp
mov
xchg
fadds
roll
mov
jecxz
sub
in
pop
cmpsb
in
push
stos
aam
or
adc
popf
data16
int
dec
ret
test
xor
arpl
call
mov
gs
fimuls
mov
inc
xor
dec
popa
sub
push
sub
push
mov
je
push
pop
iret
xor
or
sti
aaa
xlat
and
test
out
std
xlat
adc
adc
test
or
mov
cmp
push
out
jecxz
fdivrl
mov
movsl
dec
mov
xchg
popa
xchg
inc
loope
add
jbe
jg
pop
enter
sbb
mov
pop
stos
xchg
js
aam
xchg
adc
xor
xor
or
popa
sbb
cmp
fmul
jnp
ret
lds
xor
stos
sarb
mov
insb
scas
add
sub
push
xor
and
and
dec
test
cmpsl
mov
outsl
jne
inc
push
roll
add
dec
mov
xchg
lods
shlb
push
mov
popf
iret
or
lock
les
outsb
movsl
mov
subl
add
sbb
jl
cmp
xor
aam
jnp
add
jecxz,pn
push
xchg
dec
mov
aad
xor
lret
xchg
and
stc
fildll
lods
jp
xchg
out
loopne
fisubs
js
cltd
xor
dec
lea
jnp
xchg
cmp
mov
cmp
xchg
lcall
insl
mov
push
enter
sahf
cmpsb
enter
cli
and
in
leave
and
inc
xor
fwait
aam
jo
data16
test
jle
push
insb
fildll
xor
rol
jnp
pusha
leave
fidivrs
fs
xlat
fidivs
mov
scas
xor
sub
inc
mov
je
gs
pop
data16
rcll
mov
sbbb
dec
int
mov
add
popf
mov
sub
popf
lcall
es
into
leave
jne
ret
jno
pop
inc
or
and
and
push
xor
sbb
jne
dec
pusha
out
jle
inc
cs
mov
into
pop
inc
pusha
scas
push
orl
aad
sahf
mov
iret
cld
lods
inc
testb
scas
outsl
lds
push
cltd
sbb
fwait
xor
jmp
fcoms
ret
insb
inc
imul
test
clc
xor
jecxz
scas
in
rol
mov
or
add
pusha
and
and
lahf
pop
and
xchg
pop
out
jnp
std
roll
arpl
stos
push
lods
inc
movsl
dec
leave
push
and
fisubl
xor
imul
xor
push
arpl
inc
insl
insl
gs
push
les
lea
int
stos
std
fnstsw
shrb
shrb
xchg
ret
imul
mov
es
pop
es
lahf
pop
mov
test
add
add
cmp
loop
push
pop
lods
cwtl
cmc
mov
and
mov
iret
or
cli
add
or
icebp
push
pushf
and
mov
nop
jecxz
and
add
lods
sbb
sbb
fisttpll
ljmp
xor
out
popa
jge
cmc
arpl
loop
mov
add
int
jle
lock
xchg
aas
int3
mov
sbb
cmp
push
inc
pop
push
pop
std
sbb
cld
dec
mov
test
sbb
scas
push
pop
sarl
enter
sbb
sbb
hlt
jmp
xchg
jmp
or
cmp
and
mov
ja
scas
sub
aad
pop
xchg
or
jns
int
cs
movsl
cltd
hlt
xchg
cld
leave
fnstcw
scas
sti
psrad
mov
inc
mov
int
lds
add
inc
push
xor
stos
cmp
dec
mov
lcall
outsb
sub
or
sbb
loopne
sub
leave
inc
dec
inc
cli
mov
call
push
jl
test
in
inc
clc
jnp
dec
ja
jg
popf
push
xor
push
adc
xor
repz
and
outsl
push
jge
ds
cmp
mov
lcall
add
dec
push
inc
mov
add
icebp
sarb
mov
cmpsb
stos
mov
gs
aam
rcrl
fbstp
dec
xchg
ljmp
repz
inc
stos
push
add
ficoms
insl
lods
and
leave
pusha
dec
mov
xchg
mov
xor
outsl
jge
sbb
pop
loopne
mov
inc
xor
mov
outsb
mov
fs
sub
sbb
lods
js
mov
outsb
fstl
inc
dec
loopne
inc
mov
or
iret
xchg
pop
sbb
or
mov
push
pop
adc
iret
sbb
fnstsw
dec
mov
int3
push
movsb
pop
and
test
push
jmp
aas
push
sbb
xchg
xor
rol
push
sub
push
jbe
mov
ret
ja
pop
jbe
nop
add
sbb
push
xchg
adcb
pop
movsb
sub
cmp
lods
mov
jbe
dec
test
jmp
add
sub
mov
mov
popa
cmp
add
dec
add
mov
jg
enter
push
mov
cmp
mov
in
cmp
adc
cltd
cmp
rolb
insb
jnp
or
or
pushf
js
and
lret
lds
ret
sbb
les
fidivrs
ljmp
out
fsubrs
xlat
cmc
sbb
jg
adc
data16
or
flds
dec
jb
shll
les
testb
or
mov
jmp
mov
push
pop
fdivrs
mov
sub
mov
sbb
into
clc
push
mov
mov
cltd
cmp
lds
lods
loope
jns
sbb
fwait
in
dec
or
popf
push
push
sub
push
or
mov
addb
popa
fcmovnb
adc
cmpsl
adc
cmp
outsl
xchg
mov
out
xor
push
xchg
or
sub
cmp
mov
dec
lret
xchg
xlat
or
lret
push
sub
jecxz
ja
mov
sub
outsl
mov
jge
or
popf
push
push
mov
jno
sub
sub
jl
gs
loopne
mov
mov
pop
sbbb
and
dec
xchg
int3
into
fucomi
jbe
jmp
jl
jbe
hlt
hlt
push
pop
mov
subl
jl
imull
int3
stos
inc
test
cmp
shl
ljmp
push
lods
arpl
add
mov
push
fnstenv
sub
or
xchg
push
lods
mov
mov
sub
jp
lahf
mov
sub
add
jns
mov
xchg
mov
repz
xor
subb
sti
repz
stc
inc
out
jae
or
mov
adc
cmp
leave
lret
mov
xchg
and
jmp
aad
shr
xor
leave
lock
outsl
test
jae
movsl
insb
outsl
push
mov
jge
aas
rol
and
imul
mov
adcl
xchg
mov
add
pop
vcmpsd
repnz
std
scas
imulb
daa
clc
xor
push
jg
inc
movsb
dec
insb
push
mov
nop
pop
loop
mov
je
or
dec
sbb
jecxz
mov
xor
adc
nop
dec
adc
push
cwtl
call
jecxz
jns
les
xchg
push
adc
call
push
daa
or
shrb
jl
incl
es
jae
fistpl
fwait
jp
push
cltd
loopne
movsb
and
xorl
mov
stos
ja
call
loop
iret
mov
lret
pop
mov
dec
loope
xchg
insb
shrl
roll
popf
fiadds
lahf
mov
mov
test
pop
jl
pop
xor
cltd
xor
popa
cmpsl
out
mov
pop
lret
lods
das
hlt
xchg
add
aaa
or
pop
outsl
daa
mov
xchg
mov
mov
aaa
movsb
repz
mov
and
or
ffreep
aas
mov
fbstp
xor
adc
xchg
mov
jbe
adc
sub
push
add
out
rolb
fs
sub
enter
dec
dec
fwait
sarl
jb
jbe
xchg
inc
jmp
stos
mov
lods
adc
mov
jle
pop
mov
test
adc
stos
test
inc
mov
cmp
ljmp
mov
sti
sahf
and
insl
xchg
sub
subl
pusha
mov
sbb
ljmp
push
mov
mov
movsl
dec
aad
or
mov
fdivr
xchg
inc
fimuls
fs
and
loopne
lods
outsl
inc
xor
sbb
lret
cmpsl
xchg
cmp
js
repz
mov
shlb
stos
out
mov
ds
ss
jne
out
sahf
add
mov
mov
cwtl
fimuls
sbb
ror
roll
int
sarl
data16
fidivs
ficompl
push
sbb
add
xchg
sbb
pop
stc
dec
sti
adc
sti
pop
movsl
jns
stos
jbe
stc
mov
pop
insb
inc
outsl
and
lds
dec
inc
cmp
mov
idivb
sbb
mov
lock
lcall
lret
jbe
leave
push
and
jecxz
scas
and
fimuls
add
imulb
inc
adc
fdivrl
xchg
rolb
out
push
aas
mov
int
out
ds
jmp
hlt
push
je
in
jnp
mov
pop
pop
sub
sti
adc
push
add
or
mov
fldenv
dec
inc
fsubrl
dec
sbb
aaa
pusha
leave
shlb
cs
mov
scas
cmp
adc
and
cmp
cs
shl
jge
cltd
je
dec
cmc
pop
mov
mov
sub
pop
fisubrl
jmp
enter
cs
xlat
popa
gs
addr16
cli
mov
or
jnp
movsb
cwtl
int
icebp
lods
xchg
jecxz
addr16
or
addr16
cmp
sbb
sahf
dec
scas
call
xchg
sbb
loopne
cmp
jnp
mov
jg
add
dec
jne
mov
das
jbe
popf
data16
sbb
enter
icebp
sbb
fld
lcall
fbld
pop
add
pop
aaa
stos
mov
xor
test
dec
xchg
das
or
pop
dec
stos
adc
xor
repnz
pop
fcmovbe
iret
jb
sahf
inc
or
mov
and
insl
loope
inc
ret
imul
popf
loope
cli
pop
test
mov
mov
adc
in
push
icebp
aaa
into
adc
pop
xor
push
jbe
jae
lods
int3
je
add
add
dec
and
mov
or
adc
out
mov
push
and
or
push
lcall
cli
adc
sub
call
in
or
sub
lahf
or
mov
pushf
cltd
jle
jecxz
mov
icebp
dec
jnp
sub
xor
lret
xchg
sarb
cltd
dec
xchg
cmpl
xchg
xchg
enter
adc
in
dec
pop
outsb
lahf
and
fs
fcmovbe
cmp
daa
add
subl
adc
incl
push
mov
add
push
mov
into
stos
dec
add
dec
xchg
xchg
inc
add
xchg
sub
rcrb
call
aad
adc
mul
cs
in
rclb
in
nopl
je
sub
cli
pop
int3
lahf
cmp
clc
in
xchg
inc
ret
lock
cmp
hlt
or
xchg
into
or
pop
ljmp
mov
test
dec
repz
jns
xchg
out
rorl
das
add
vpackuswb
pop
data16
scas
cmpsl
sub
pop
rclb
mov
out
inc
je
push
fstps
mov
rorl
xor
int
enter
mov
xchg
cmp
loope
rcrb
dec
stos
push
inc
cld
jae
imul
les
sub
aam
jnp
jmp
jmp
pop
in
sbb
cmc
mov
stos
loope
inc
xorb
aaa
je
cmp
mov
or
iret
mov
aaa
mov
cmp
mov
popf
lock
out
jno
inc
test
sbb
pop
int
in
pop
or
cld
sbb
push
jl
mov
and
hlt
aam
cli
shll
mov
mov
and
insb
cltd
dec
push
mov
adc
push
sbb
das
adc
repz
push
hlt
loop
std
popf
fbld
imul
push
push
push
mov
shrb
push
mov
or
aad
nop
lcall
loop
imul
dec
shr
arpl
add
repz
insb
imul
movsl
dec
addr16
loope
mov
adc
mov
xchg
xchg
mov
ror
mov
movsl
mov
inc
sub
add
not
pop
mov
dec
and
lods
rclb
dec
push
cwtd
pusha
adc
push
fcoml
ljmp
mov
adc
in
xor
push
push
test
lock
or
xor
sbb
in
out
sahf
stos
dec
inc
outsl
rcr
sti
adc
mov
push
sub
xchg
cmp
mov
ret
dec
mov
or
jge
adc
or
lods
imul
pop
movq
scas
lret
movsb
sbb
mov
cmp
leave
scas
ja
cmp
iret
pop
xor
dec
mov
cmc
stc
xor
sbb
sub
bound
or
test
sub
push
fidivrs
mov
std
mov
dec
adc
mov
jo
out
xor
loop
adc
fnstsw
fistpll
mov
mov
jl
pop
push
aad
fs
fcomi
lock
or
daa
or
call
shrb
and
dec
mov
mov
insb
fdivs
mov
sbb
mov
push
leave
xor
and
pop
mov
test
mov
stos
stc
cmpsl
sub
rcll
jno
into
pop
ljmp
cmc
pop
data16
xchg
mov
sub
lods
shll
cs
rorl
sub
inc
mov
ljmp
add
int
cwtl
leave
test
jne
pop
test
in
push
test
sbb
cmp
mov
in
movsl
xor
sub
jg
jecxz
out
dec
mov
out
lock
sub
imul
dec
pop
xchg
je
add
xchg
inc
sarl
das
lods
mov
jmp
cmp
in
inc
jge
push
xchg
rclb
js
dec
push
jnp
aas
sub
jns
call
jecxz
sub
lret
mov
mov
mov
outsl
xor
mov
int3
test
sbb
lds
leave
repz
cwtl
lods
cmpsl
icebp
fadds
dec
mov
int3
das
mov
mov
jle,pn
enter
fisttpl
xchg
sbb
or
push
bound
cmp
dec
xor
test
jmp
nop
inc
sbb
xchg
fisttpll
and
in
mov
insl
lcall
lea
cmpsb
cs
into
xor
add
mov
mov
out
cmpsb
xchg
xor
out
push
out
sbb
xchg
fisttpll
dec
repz
add
xchg
mov
sbb
insl
and
scas
push
outsb
add
insb
xchg
dec
icebp
pop
push
loopne
sbb
cmpsb
xchg
mov
xchg
sub
loop
addr16
dec
pushf
xor
jmp
sbb
lock
push
sbb
jb
loopne
adc
out
or
pop
cmp
fdivl
fs
mov
bnd
adc
add
mov
imul
mov
int3
test
loop
leave
inc
cmp
mov
mov
jle
pop
jnp
in
js
dec
out
insl
xchg
cmpsl
cmp
cwtl
push
xor
jmp
mov
out
inc
stc
cmp
loope
xor
imul
mov
cmc
ret
andl
mov
jp
sub
aaa
cld
jg
daa
or
mov
rorb
push
mov
ja
jo
fildll
mov
sub
mov
and
jle
adc
dec
mov
stc
jmp
inc
mov
cwtl
mov
xchg
rorb
mov
in
lea
add
adc
inc
in
mov
jb
das
push
push
adc
mov
loope
or
or
out
out
arpl
jae
jns
subb
adc
gs
stc
movsb
stos
daa
adc
test
sarb
fs
mov
out
jno
imul
outsl
fimull
jg
lods
push
ret
mov
sbb
insb
dec
int3
cld
jge
in
outsl
mov
xchg
out
mov
mov
fisubl
push
stos
nop
nop
es
pop
sbbl
lret
icebp
xor
pop
les
or
mov
cltd
inc
stos
push
inc
xchg
movb
test
test
fsubp
mov
mov
cmp
xchg
fwait
hlt
sbb
incb
add
int3
mov
imul
xchg
push
clc
bnd
push
or
mov
jae
adc
jns
xchg
inc
call
or
xor
add
mov
jnp
nop
outsb
hlt
pop
and
pop
adc
jecxz
mov
nop
cmp
and
fildl
cmpb
fiadds
into
inc
xlat
clc
rolb
and
in
push
jp
mov
cmp
mov
mov
xchg
daa
cli
fiadds
clc
lret
fdiv
repnz
mov
mov
sub
popa
loopne
out
mov
or
popf
aas
movsl
mov
lret
xor
or
jmp
push
outsb
das
mov
lret
sub
dec
jle
or
mov
movsb
scas
dec
jge
mov
or
movb
xor
cs
shrb
xchg
sub
xchg
test
xor
xor
addr16
pop
cmp
dec
cld
pop
cmpsl
xchg
pusha
ljmp
adc
and
fistpl
aam
arpl
mov
dec
pop
out
data16
outsl
cs
and
imul
push
dec
aaa
mov
add
jnp
and
fiaddl
rcr
pop
imul
or
mov
dec
stc
cli
shl
adcl
inc
in
loope
add
imul
out
int
pop
pop
dec
fcomps
popf
xchg
jecxz
mov
cmpsb
mov
inc
fs
out
inc
jno
mov
sbb
mov
fdivl
xchg
bound
inc
loop
push
jno
insl
sbb
rcll
push
andps
fs
cmpsl
inc
or
mov
movsl
and
adc
cli
stos
repz
lret
imul
jnp
pop
xchg
inc
pop
xorb
inc
pop
dec
pop
pushl
ret
push
stos
in
add
dec
loope
inc
out
ss
insl
test
sbb
mov
jecxz
test
outsl
sub
sub
out
dec
jb
and
test
add
jmp
sub
lcall
xor
ror
xchg
jae
popf
dec
jns
push
fsubs
stos
xor
add
cmc
dec
ljmp
push
in
xchg
cmp
add
in
inc
stc
cld
jae
cltd
repz
gs
imul
bnd
popa
aas
stos
loop
pop
mov
pop
push
gs
mov
xor
adc
roll
movsl
ret
clc
inc
or
dec
loop,pt
mov
cmp
and
loopne
inc
std
sub
jns
daa
repnz
dec
pop
test
ret
mov
enter
mov
enter
fcmovne
ss
iret
loopne
and
ljmp
mov
mov
pop
insb
jnp
imul
pop
or
inc
dec
enter
push
daa
stos
jno
xlat
fcom
cmp
add
or
movsb
pop
sbb
push
jno
ss
pop
mov
das
inc
push
sar
cmpsb
push
clc
and
pop
inc
jno
mov
add
lret
test
push
dec
in
mov
int
sub
mov
fisttps
leave
inc
sub
lods
icebp
or
push
cmpsb
xchg
pop
add
push
mov
cmp
sbb
mov
insb
popa
cmp
dec
push
pop
les
fistpll
xchg
inc
mov
jne
xchg
push
mov
jg
subl
shlb
lock
dec
push
pop
jle
outsb
rorb
and
and
mov
mov
repnz
insl
cltd
dec
lcall
sbb
in
push
push
push
in
dec
stc
fcoml
fcoml
add
inc
lds
mov
adcb
cmp
xchg
lret
lods
loope
jle
push
ret
xor
lods
daa
je
fildll
push
sub
push
xlat
push
roll
adc
rorb
jne
gs
aaa
sbb
and
stc
adc
sbb
sub
push
jl
lahf
inc
xor
push
sbb
in
aas
test
cmp
push
popf
dec
mov
enter
jge
mov
jbe
movsl
in
loope
sbb
cmp
sbb
xchg
inc
das
shl
in
and
sbb
lret
dec
mov
adc
push
movsl
cmc
mov
sub
ds
es
stos
leave
cmp
push
push
iret
pop
adc
push
ret
lock
pushf
dec
mov
jmp
push
hlt
jg
dec
mov
or
cmp
popa
sti
or
das
push
jae
add
sub
rorl
jl
neg
fcompl
stc
adc
out
ss
leave
cli
add
stos
mov
cmpsl
sarl
outsl
lock
mov
mov
sahf
xor
xchg
mov
mov
insl
lcall
sub
inc
mov
and
pop
test
gs
xchg
xchg
and
inc
adc
int3
or
mov
ret
out
or
push
in
mov
ja
loopne
mov
es
pop
test
sub
inc
sti
dec
addl
mov
adc
in
sbb
pusha
shll
test
enter
or
adc
mov
je
pop
xor
sbb
add
dec
lods
cs
out
and
es
push
or
adc
add
movsb
lods
popf
mov
out
inc
f2xm1
sub
fs
add
cmp
inc
je
jbe
aad
sub
adc
adc
sub
add
lahf
cld
inc
out
dec
jbe
rcrl
into
repnz
lea
repnz
in
andl
mov
fsubl
adc
cmp
cltd
push
adc
loopne
into
pop
xchg
out
mov
mov
mov
fcmovne
jne
movsb
cmpsl
push
or
je
aas
aam
sbb
adc
aad
andb
mov
in
xorb
cmpsl
rcrb
iret
xchg
xor
xor
lea
xor
dec
jae
aad
loopne
mov
jbe
mov
mov
adc
cmp
loope
cmp
cwtl
mov
stc
jbe
dec
arpl
fstpt
or
fbld
sub
xchg
idivl
dec
or
inc
adc
aad
mov
push
mov
icebp
mov
xor
popa
mov
rorl
in
in
mov
jp
pop
jmp
cmp
sbb
mov
sbbl
sbb
pop
cmp
mov
inc
das
out
mov
test
div
cltd
into
mov
mov
xchg
xchg
sub
push
xor
sbbb
stos
insl
and
inc
icebp
dec
xchg
lds
mov
cs
add
mov
add
cmpxchg
insl
outsb
lret
aam
jno
add
pop
sahf
xor
outsb
mov
jo
xlat
lods
popf
pop
leave
es
into
int
repnz
pop
push
addb
nop
and
push
xor
xor
fnstenv
stos
push
setns
xlat
outsl
mov
popa
cs
ja
icebp
xor
daa
pop
xor
lods
adc
addl
mov
jecxz
inc
inc
pop
aas
stos
push
shrl
mov
clc
fxch
cmpsb
dec
mov
and
out
xchg
out
in
iret
add
add
stos
daa
sub
push
repz
lea
adc
or
sub
cmp
inc
pushf
push
js
push
imul
repnz
filds
jp
imul
mov
mov
inc
addl
jle
movsb
pop
jne
inc
mov
or
and
jmp
insb
dec
insl
stos
arpl
push
xchg
xor
mov
mov
sub
mov
arpl
sub
outsb
mov
sbb
sbb
pop
or
mov
pop
sbb
in
xorl
setae
fdivs
lock
dec
mov
or
jge
sub
mov
inc
out
pop
xchg
fst
cmp
sbb
inc
xchg
test
sub
aam
cld
sbb
mov
out
push
mov
cmpsl
mov
and
jne
jno
pop
xor
sub
mov
xor
mov
fsubrs
bound
push
jae
push
hlt
mov
or
in
sub
fcmovbe
imul
sarb
arpl
push
sti
cwtl
add
outsb
push
lret
and
nop
aaa
and
push
cmp
jmp
cmp
insb
out
in
or
xchg
xor
loop
and
clc
adc
shrl
mov
adc
xlat
andl
jl
mov
inc
pop
add
mov
jmp
push
inc
enter
mov
fistl
rolb
or
insb
jge
inc
call
xchg
iret
mov
sbb
imull
mov
add
repz
fsubr
mov
pop
jge
aad
xor
insl
daa
mov
push
sub
test
mov
lret
mov
aad
jno
push
sbb
je
outsl
adc
mov
jno
jne
xor
xchg
jmp
or
or
mov
inc
jns
push
loop
xor
jno
stos
mov
xor
cld
stos
mov
push
mov
int
xchg
sub
mov
sti
or
fdivrs
ss
js
jnp
inc
xor
or
out
in
add
cmp
aam
or
pop
jns
addr16
mov
pop
int3
lahf
lods
inc
add
xchg
loop
jb
cmp
xor
js
movsl
pop
std
jae
jp
push
sbbl
shll
in
ficoms
mov
scas
rcrb
negl
dec
in
js
dec
push
shrl
jle
and
int
ud1
sub
and
daa
xchg
pop
push
push
or
outsl
cmp
lcall
inc
mov
mov
push
pop
outsb
pushf
or
cmp
jnp
fucom
in
sub
movsb
cmpsb
test
out
or
leave
stos
dec
cwtl
into
jae
mov
dec
enter
inc
mov
imul
mov
cmp
ret
jg
dec
fbstp
sub
jmp
repnz
pushf
in
fs
shlb
lock
bnd
or
ret
mov
sub
sub
fwait
mov
sbb
loope
cmpsb
idivl
sbb
add
in
jno
fsubs
pop
lea
insl
aam
sbb
and
test
clc
push
add
cmp
and
push
enter
clc
jo
add
lock
cmp
pop
shlb
cmp
push
pushl
mov
loop
or
xchg
cltd
fadds
fldenv
mov
jmp
lds
sbb
shlb
mov
fldenv
push
lret
mov
adc
jl
jecxz
fisubs
cmp
inc
rorb
xchg
mov
sbb
inc
mov
xor
push
ss
sub
adc
mov
inc
roll
out
cmp
pop
clc
pop
jb
cltd
inc
fldenv
sbbb
icebp
mov
mov
jg
outsb
movsb
mov
inc
jmp
fucomp
sub
pop
inc
dec
outsb
out
test
sub
jg
sbb
push
sbb
cmp
xchg
mov
fucomp
clc
inc
inc
mov
int3
or
adc
bound
sbb
lahf
nop
xchg
add
movsb
mov
in
or
movsl
dec
sub
hlt
data16
xchg
jbe
add
stc
xchg
aaa
push
xchg
repnz
mov
lds
jmp
xchg
adc
dec
out
dec
pop
lret
stos
andb
sbb
in
sub
push
push
and
aaa
clc
add
inc
rorl
pop
imul
inc
add
testl
lods
bound
aaa
test
jae
mov
out
lea
jbe
insl
jmp
test
and
jg,pt
cmp
imul
mov
dec
inc
jae
cwtl
icebp
pop
inc
pop
sub
pop
lds
dec
roll
movb
gs
push
mov
rorl
psrad
or
lods
sub
repnz
push
jmp
cmc
cld
pushf
jl
or
jb
ds
jbe
iret
data16
add
fwait
mov
cmp
mov
outsb
adc
mov
xor
sub
push
dec
push
inc
addr16
ja
xor
mov
sbb
in
xor
sahf
sahf
hlt
mov
xlat
or
in
xchg
xor
sbb
xchg
icebp
push
es
cmpsb
mov
mov
std
cmp
lcall
ret
shrl
cmp
dec
add
mov
imull
out
in
scas
and
add
in
push
lock
test
out
cmp
pop
jp
mov
stos
jl
in
mov
dec
aas
out
xor
cld
mov
ljmp
enter
jnp
jl
jmp
lock
in
inc
xchg
aam
and
into
stc
sbb
inc
mov
pushf
pop
sbb
rclb
lea
mov
lods
and
hlt
scas
test
pop
call
ror
xor
mov
inc
push
mov
mov
xchg
repz
sbb
out
int
push
push
imul
stos
rol
in
xchg
cmp
adc
pop
add
adc
fs
in
jno
push
fildl
flds
pop
pop
and
push
es
les
insl
pusha
imul
ret
cwtl
pop
or
js
lret
les
or
out
fs
std
push
mov
push
mov
xchg
rcl
std
pushf
jmp
lods
dec
jae
or
leave
fdivrp
and
or
loop
sbb
add
insb
test
movsl
leave
push
dec
mov
mov
inc
aam
mov
out
es
je
mov
pop
cmp
pop
inc
jmp
add
jbe
or
jne
push
push
xchg
cmp
mov
inc
push
dec
das
lods
xchg
and
nop
pop
cmp
mov
sbb
jns
imul
leave
dec
fiadds
out
fmulp
cwtl
push
xlat
pop
insl
cmpl
pop
sub
inc
push
and
cli
rcll
ja
jecxz
mov
inc
cmp
fsts
and
xchg
sub
pop
aad
or
test
ror
outsl
shrb
and
testl
pushf
add
add
addr16
rcr
sahf
cmp
cmpsl
shlb
sarl
mov
push
leave
or
notl
fildll
jg
mov
ds
outsb
bound
mov
mov
adcl
add
mov
aam
lret
push
xchg
ss
pop
mov
ffree
daa
out
int3
pop
ret
mov
nop
xor
stos
test
jg
xchg
les
mov
mov
push
sub
ror
sbb
adc
adc
out
xor
mov
jae
icebp
jmp
mov
xchg
jne
sub
and
imul
imul
hlt
stos
jb
mov
sbb
adcl
test
jo
inc
je
xchg
repz
stos
jo
ret
xchg
mov
mov
cli
push
xlat
pop
mov
cmp
push
pop
cmpsl
loopne
out
ret
and
sbb
sbbb
subl
push
jnp
pop
fwait
push
mov
inc
dec
xchg
jns
popf
adc
inc
cltd
mov
cld
stos
xchg
mov
add
cmc
test
xor
or
fmull
push
and
jns
aad
ret
clc
jp
mov
push
and
push
nop
cs
fisubrl
xchg
in
inc
or
jg
lods
mov
mov
ss
out
mov
addr16
cmp
adc
mov
je
xchg
or
jb
mov
cli
dec
xlat
dec
mov
inc
push
add
mov
scas
fiaddl
lret
data16
or
or
inc
add
test
lds
push
std
mov
aaa
in
or
pop
jne
adc
jno
adc
movsl
jle
in
cmpsl
pop
push
inc
fs
mov
xchg
adc
add
fldl
sbb
and
test
in
pop
jne
push
adc
mov
inc
fxch
mov
jp
out
sub
jmp
jo
fnstenv
in
addb
jns
aam
jns
xor
or
push
fisubs
pop
add
mov
ret
jle
fwait
cmpsl
leave
xlat
and
xchg
js
pusha
mov
nop
dec
lds
add
popf
vpavgw
pop
pop
stos
cmp
cltd
addr16
nopl
pop
push
das
pop
adc
adc
mov
sbb
adcb
push
push
add
je
and
push
inc
push
mov
mov
jp
jle
aad
dec
and
dec
push
cmc
dec
ljmp
cltd
dec
fmuls
push
movsl
adc
rol
ja
cltd
push
push
cltd
fnstcw
nop
hlt
xchg
lcall
xchg
sub
inc
or
mov
repz
in
cmc
int
jle
loope
jecxz
sahf
pop
aaa
push
xchg
enter
jno
jg
adc
mov
outsl
orb
cld
ret
into
out
hlt
mov
pop
sub
pop
js
mov
in
jns
mov
popl
mov
das
mov
lret
in
scas
and
lods
shlb
cltd
xor
lea
je
repnz
loopne
andl
and
pop
inc
gs
and
aam
out
aam
adcl
daa
js
mov
pop
xlat
sbb
cmp
xor
cmp
in
add
in
inc
sahf
cmpl
rcrl
dec
les
inc
test
adc
sub
dec
popf
fndisi(8087
inc
add
add
mov
mov
inc
xchg
ss
mov
inc
xlat
add
and
int
mov
push
inc
movsb
push
out
mov
mov
and
pop
movsb
cmp
aad
cld
and
pop
mov
xchg
mov
inc
pop
mov
cmpsb
ficoml
daa
push
inc
mov
jp
iret
out
je
xor
iret
lret
test
mov
mov
pop
dec
xchg
cmp
add
clts
dec
lods
pop
lock
adc
insl
movsl
sarl
clc
cmpsb
fldl
cmp
cli
test
aad
adc
pop
ds
js
pop
xor
inc
mov
push
outsl
cmp
lea
ljmp
xchg
cltd
xor
push
lea
insb
cmp
xchg
push
scas
mov
lods
mov
push
js
imul
mov
inc
fisubs
movsl
in
jmp
daa
scas
arpl
jge
in
pop
pop
cmp
dec
jge
pop
pop
mov
lret
or
mov
repz
jbe
mov
xchg
outsb
mov
xor
filds
outsl
testb
dec
out
test
and
in
dec
mov
fisubs
xchg
fsubr
xchg
and
jecxz
ljmp
push
adcl
in
mov
aaa
test
push
add
xchg
add
test
add
xor
or
outsb
sbb
inc
xor
dec
mov
int3
pusha
and
mov
jno
loopne
sub
mov
or
test
negb
int3
adc
sti
test
mov
mov
cmpsl
int3
mov
fisubrl
and
sbb
mov
or
mov
lds
test
and
jnp
xor
mov
push
cwtl
loop
and
mov
mov
addr16
mov
movsb
aam
jmp
dec
and
adc
scas
addr16
inc
sub
mov
hlt
sbb
lret
mov
jg
mov
sub
adc
lahf
push
outsl
pop
mov
pop
jne
and
int
xor
scas
pop
cld
jo
shll
xchg
jge
pop
pop
pop
fistpll
jae
lahf
mov
mov
cltd
pop
cltd
xor
mov
dec
das
cld
orb
jno
lock
lea
xchg
cmpsl
and
sbb
lcall
daa
sub
inc
lcall
and
mov
jmp
cmp
leave
dec
jnp
into
sahf
push
ret
ret
fcmovne
ljmp
push
push
iret
pop
dec
pushf
mov
call
test
icebp
fisubl
icebp
dec
jecxz
xor
adc
jne
in
cmp
iret
pop
movsb
push
or
out
ljmp
insb
clc
ljmp
repz
mov
or
jl
jg
ss
jmp
icebp
sbb
pop
mov
sbbl
mov
fwait
inc
call
mov
icebp
or
adc
imul
std
not
cltd
les
mov
sub
pop
fdivs
mov
js
dec
inc
pop
ljmp
loope
inc
stos
adc
jae
aas
mov
mov
je
mov
jns
cmp
or
dec
xor
nop
lahf
and
adc
or
push
cmp
loopne
cmc
aaa
xchg
loope
pop
inc
cmp
bound
ja
cmovb
shrl
pop
jbe
enter
add
stc
mov
in
sub
mov
push
pop
xchg
pop
clc
inc
jo
push
mov
jns
nop
dec
pop
call
push
pop
jge
jg
push
add
cmp
sub
or
jmp
jg
gs
jp
xchg
sbb
mov
xchg
mov
outsb
push
and
mov
aaa
dec
push
data16
popf
out
push
fldl
out
mov
fwait
cmp
pushf
lret
inc
movsb
popf
clc
movl
cmp
jne
cltd
push
shl
adc
xor
frstors
pop
xchg
call
mov
dec
cmp
mov
jb
addb
inc
cmpsl
cmpsb
and
push
mov
out
ret
cld
popf
xor
icebp
loope
aam
sbb
xchg
iret
and
clc
xor
mov
sbb
jl
and
xchg
jbe
adc
push
xlat
pop
mov
push
int3
pop
push
push
stc
hlt
mov
pop
adc
testl
mov
jg
stos
mov
jbe
mov
dec
push
pop
mov
aad
nop
xlat
inc
pop
inc
jp
scas
xchg
gs
lcall
pop
mov
daa
pop
hlt
outsl
sub
in
out
roll
mov
scas
test
xor
mov
gs
sti
cmp
xchg
or
bound
out
jl
int
rcrb
inc
push
jmp
loopne
movsl
push
jne
cmp
addr16
fldenv
out
xchg
dec
adc
out
mov
mov
int
mov
sbb
push
and
lea
mov
cli
sbbl
inc
dec
fistpll
xchg
lea
cmp
inc
jl
xchg
ss
mov
sbb
movsb
lds
pushl
repz
add
out
add
test
insl
and
adcb
push
pop
scas
mov
imul
sub
outsb
ja
push
orl
mov
popf
add
inc
hlt
stos
xchg
xchg
lret
inc
ret
popa
mov
in
mov
or
pop
sti
xor
mov
xor
repz
ljmp
inc
cmp
dec
lcall
int3
mov
test
mov
jae
dec
aaa
insb
iret
ret
fisubrl
add
nop
addl
pop
jb
adc
xlat
outsb
push
es
mov
and
pop
sub
push
movsb
pop
inc
mov
inc
dec
js
adc
mov
pop
push
adc
out
cmp
pushl
out
outsb
ja
pushf
xor
xchg
imul
sbb
in
out
mov
mov
in
xchg
test
lock
xchg
cs
fidivrs
cmp
popa
mov
xlat
orb
push
fbstp
pop
loopne
test
inc
mov
pop
cmp
popa
fstps
pop
pop
movsl
lahf
aas
testb
xchg
outsl
adc
mov
dec
pop
mov
mov
xchg
testl
andl
xor
cld
inc
loopne
mov
pushf
or
pop
imul
xchg
sbb
pop
cmp
enter
mov
clc
cmp
subl
repz
outsl
pop
push
pop
cld
fnsave
xor
lret
and
loope
loopne
lret
fsubl
jecxz
push
test
ret
xchg
adc
scas
mov
xor
or
sti
mov
mov
pop
mov
push
lret
mov
push
push
cltd
loope
and
cld
hlt
les
stos
inc
cs
scas
cmp
xchg
adc
jne
xchg
lahf
and
cmp
sub
mov
clc
sbb
in
inc
add
pop
cmp
cmp
fistl
mov
or
xor
mov
in
int3
lock
fsubrl
cwtl
xchg
fcoml
sub
cmpsb
lods
xor
jl
and
or
inc
or
aaa
jg
dec
xchg
mov
push
pop
out
nop
mov
push
lcall
sub
adc
adc
scas
test
dec
pusha
and
or
adc
jo
push
or
cmp
add
stos
pop
int3
push
scas
in
inc
adc
pop
mov
ja
shl
sbb
adc
cmp
xor
gs
sbb
mov
mov
out
fcmovne
pushl
pop
lret
sub
fistpl
mov
loopne
mov
mov
cltd
pop
ss
jne
push
xchg
jno
push
add
inc
insb
xchg
inc
adc
cmpsl
sub
repnz
call
xlat
pop
nop
inc
stos
pop
or
or
nop
push
cmp
pop
jne
sbb
jmp
sbb
and
bound
dec
imulb
movsl
lret
aad
fnsave
sub
pop
dec
cld
roll
shll
sub
into
xchg
xchg
shll
or
dec
inc
and
cmp
arpl
pop
cmpsl
mov
in
mov
out
movsl
ljmp
test
xor
dec
mov
ret
mov
xor
lods
gs
stos
jmp
nop
scas
dec
dec
inc
cmp
add
inc
add
mov
outsl
out
adc
movsb
dec
lahf
push
call
push
out
adcl
mov
test
arpl
rorb
adc
xor
mov
mov
cmp
xchg
call
aam
sbb
mov
lahf
push
sub
insb
je
inc
int
inc
or
test
rcll
jg
xchg
jbe
mov
loop
dec
jmp
outsl
push
mov
jb
dec
or
mov
movsb
je
xchg
pop
lock
xchg
stos
leave
orb
lods
paddb
mov
mov
push
clc
int3
ret
loopne
mov
xlat
cmp
in
popf
enter
out
pop
int
aad
inc
mov
mov
sub
xchg
mov
pusha
mov
xchg
arpl
push
mov
cmpl
movb
mov
clc
sbb
pop
mov
push
lea
movsb
sub
repz
divl
mov
icebp
jle
out
bound
insl
mov
idivl
fsubrs
out
pop
stos
outsl
popa
stc
setg
pop
and
mov
movb
cli
adc
rol
ret
mov
mov
lcall
je
mov
scas
ss
insb
stos
mov
jg
loop
mov
or
fldenv
adc
repnz
lret
jb
jnp
inc
and
mov
jge
or
cmp
pop
faddp
stc
dec
test
or
scas
xchg
je
xchg
ljmp
add
xchg
loop
lock
ja
sbb
mov
je
pop
xchg
mov
fcoml
jg
dec
push
xor
sub
and
nop
or
insl
js
loopne
scas
adc
jecxz
and
pop
dec
push
mov
add
adc
cmpsb
xchg
insb
popa
rcll
sbb
enter
inc
pop
movsb
mov
fld
inc
inc
je
orl
pop
scas
bound
or
adc
jp
into
pop
pop
pop
and
xchg
jg
ret
mov
cwtl
les
mov
int3
enter
out
and
cmp
and
fistpll
add
or
pushf
int
xchg
neg
scas
hlt
lahf
xor
fninit
notb
dec
push
ret
jb
or
jb
cld
push
leave
mov
push
jnp
in
shlb
call
lcall
aaa
jle
add
cli
stos
pop
lahf
adc
jns
iret
scas
mov
ljmp
add
add
mov
dec
xchg
popa
and
dec
push
jbe
cmpsl
or
mov
jns
repnz
xor
pop
mov
mov
xorb
fdivr
push
mov
jns
jno
add
gs
sub
xor
in
inc
das
dec
outsl
int
out
sub
mov
leave
sahf
inc
subl
xor
mov
sub
insb
xor
jno
push
inc
dec
scas
out
lahf
aas
data16
out
cmp
adc
out
push
mov
pop
and
add
pushf
outsl
jmp
scas
cmc
movsl
mov
int
ficompl
sub
iret
and
inc
mov
mov
lods
inc
loope
jns
mov
pop
arpl
das
and
and
mov
aas
outsl
sbb
cld
pop
xor
shrl
call
add
aad
xor
sbb
sbb
dec
dec
inc
fmull
add
inc
pop
mov
in
push
push
pop
add
jno
int3
loop
adc
sub
dec
inc
dec
and
out
stc
nop
push
nop
data16
aas
inc
dec
add
pop
mov
xor
addl
fs
pop
stos
insl
es
mov
sub
sbb
cmp
out
movsb
and
xor
ret
dec
cmp
mov
cmp
std
testl
mov
xor
aad
inc
je
es
add
stos
mov
cmpsb
repnz
stc
lds
fucomi
xchg
mov
insl
jne
mov
bound
imul
test
fmull
push
movsl
rol
pop
xlat
add
cmp
mov
mov
pop
mov
lret
ds
cwtl
xchg
fistpl
hlt
pop
adc
and
mov
pop
jmp
popa
or
div
es
movsb
mov
mov
mov
xchg
sub
cld
add
mov
sbb
in
rolb
dec
adc
ja
sub
jmp
negl
push
push
push
cmpsb
pop
add
mov
pop
imul
or
inc
adc
mov
cld
xchg
pop
pop
pop
outsb
lds
sub
shl
data16
clc
dec
scas
negb
mov
jmp
and
add
lock
cmp
nop
inc
into
aad
mov
scas
pop
jns
inc
jecxz
sbb
stc
xor
pop
cmp
push
xlat
mov
lea
push
rcrb
stos
cmpsb
sbb
in
jg,pn
ss
popa
pop
push
xchg
aad
shrl
mov
and
or
idivl
push
or
adc
or
jmp
jbe
jb
mov
insl
mov
in
cmp
lahf
push
es
sbb
or
pop
inc
mov
mov
adc
shll
pand
jp
adc
cmpsl
mov
imul
repz
cmp
stos
mov
inc
fs
leave
fisubs
lcall
mov
cmp
repz
xor
push
sti
mov
aam
jne
cwtl
push
ljmp
xchg
and
dec
clc
rcrb
or
push
jp
inc
arpl
rcr
xchg
and
sti
mov
lret
sbb
into
lea
clc
adc
mov
xor
push
ret
lcall
cmp
and
jmp
mov
pop
fwait
imul
xor
push
ret
push
cmp
arpl
push
mov
xchg
adc
ucomiss
push
adc
sub
inc
lods
aaa
push
mov
jp
shlb
mov
xor
pop
leave
sbb
sub
jmp
wrmsr
in
mov
xchg
add
jo
outsl
aam
and
pop
lea
fdivr
jl
dec
movsb
and
and
aas
inc
nop
sub
sub
mov
in
push
lret
pop
lods
lods
dec
pop
mov
add
cmp
sub
jecxz
mov
data16
add
pop
jg
rcrb
sti
pop
lods
loopne
dec
clc
sbb
rcrb
pop
jb
jo
jp
rclb
push
int
push
mov
sub
into
outsl
mov
mov
push
or
sbb
cs
push
and
addr16
xor
mov
mov
shrb
or
pop
imul
aas
inc
push
inc
pop
xchg
test
jg
jno
popf
addr16
adc
das
add
mov
out
pop
hlt
mov
inc
fadds
mov
and
rcrb
xchg
into
lods
pop
fsubp
ret
aad
jnp
fisubrs
jmp
mov
imull
xchg
mov
pop
push
sbb
nop
mov
dec
roll
fidivl
fbld
outsl
xchg
sub
mov
sbb
add
or
pop
mov
dec
push
adc
inc
movsl
movsb
mov
xchg
dec
pop
imul
mov
inc
xchg
ljmp
dec
int3
sbb
or
cmp
mov
movsb
aam
sahf
xor
mov
cli
or
lods
mov
insl
loop
inc
mov
dec
jge
pop
adcl
fadds
inc
in
shll
xchg
jp
mov
mov
cmpsl
mov
adc
imul
clc
mov
shlb
add
inc
cld
pop
and
stc
adc
push
or
and
into
loop
and
lods
xor
and
and
sub
lahf
ss
inc
mov
add
out
aad
test
rcll
mov
mov
jg
pushf
or
pop
mov
xor
xchg
or
sbb
sbb
sub
xlat
aam
add
mov
in
sarl
mov
mov
test
or
dec
mov
xlat
xchg
dec
outsb
mov
les
data16
shrl
dec
cmp
inc
in
loopne
jp
mov
test
ficoms
cmp
jecxz
sbb
jne
inc
out
aaa
xlat
mov
movsl
pop
fstpt
pop
jp
push
sbb
rclb
insl
add
movsb
cmp
cwtl
jo
xlat
ja
mov
decl
pop
outsb
popf
mov
xchg
xor
icebp
fsubr
push
into
inc
xchg
sbb
xor
fstpl
in
inc
lret
icebp
mov
add
mov
ficompl
mov
jmp
xor
std
push
xchg
out
sarb
mov
rcrb
sbb
jne
pop
pop
in
rol
mov
out
rcr
pop
sub
mov
xchg
dec
xchg
subl
int3
cli
mov
lock
pop
push
scas
mov
jge
cmpsl
push
adc
add
enter
out
cmp
inc
xchg
call
mov
adc
sbb
push
rcrl
and
js
popf
test
repnz
sbb
push
rcrl
xchg
jle
call
xchg
lea
ja
nop
xchg
jae
loop
xchg
jle
push
jmp
fldt
pushf
lret
ja
aad
inc
cld
jmp
adc
popa
cwtl
sahf
cmp
cwtl
xor
es
dec
mulb
subb
bound
daa
xchg
push
scas
and
in
out
loopne
pop
push
or
jae
loop
mov
cmpsb
lds
dec
adc
loop
add
dec
out
repz
in
ret
inc
cmp
aad
inc
rorb
jmp
fdivrp
mov
fyl2xp1
ret
mov
fwait
dec
aaa
insl
xchg
mov
mov
ljmp
inc
sbb
out
leave
jns
icebp
xchg
xor
in
jo
add
sub
push
in
sbb
mov
out
xlat
sahf
jge
es
sbb
in
cmc
pop
pop
les
cmp
or
insb
lds
lods
lret
push
mov
xchg
fisubs
nop
pop
pusha
xchg
call
orb
fmull
cmp
cmp
mov
shr
or
scas
xchg
push
adc
sbb
cmp
inc
movb
loope
sbb
orl
lock
push
int
or
fmuls
je
xor
or
push
sub
dec
int3
cmp
add
lds
cmp
data16
mov
lcall
and
jo
push
ss
push
pop
sub
test
mov
lcall
sub
aad
mov
stos
push
jb
adc
inc
mov
arpl
mov
push
and
dec
push
jmp
aas
mov
sbb
pusha
in
and
incb
mov
pop
loop
add
add
jno
cld
jno
sbb
lods
adc
cmpb
jmp
pushf
push
stos
insl
popa
mov
and
in
mov
dec
pop
ljmp
sub
cmp
cmp
dec
and
bnd
lret
jle
sbb
pop
stos
mov
loope
sub
loopne
mov
scas
sbb
in
and
adc
arpl
sub
dec
pop
test
sbb
test
mov
xchg
inc
push
push
fcomp
sub
cmpsl
jle
mov
sub
mov
popf
mov
imul
aas
das
faddl
lock
xorl
repnz
arpl
and
adc
dec
out
hlt
lret
or
cmpsl
or
jo
popa
lds
out
pop
cmp
insl
inc
xchg
dec
and
or
and
clc
cmpl
xor
scas
pop
pop
sub
pop
mov
jecxz
mov
push
loop
ja
call
inc
jecxz
pop
jae
inc
pushf
pop
rolb
inc
js
xchg
aam
cwtl
nop
in
pop
int
push
add
cs
sbbb
jnp
add
mov
push
pop
add
sbb
sub
jne
subb
mov
dec
mov
or
daa
sbbl
testb
cwtl
xchg
pusha
inc
lock
int3
add
in
das
or
cli
jo
lret
mov
dec
jne
cltd
xor
add
xchg
movsb
cltd
xor
mov
mov
fcomps
popa
in
fists
fwait
and
adc
insl
jb
inc
and
lret
or
xlat
push
mov
inc
mov
out
aaa
popa
push
iret
mov
gs
or
pop
adc
pop
test
and
cmp
cs
mov
into
add
xchg
jmp
or
call
add
xor
pop
insl
into
add
dec
cmpl
jecxz
cmovo
mov
out
lods
outsb
or
imul
lds
push
mov
jo
repz
and
dec
repnz
testb
push
std
sbb
mov
repz
jb
ficomps
adc
mov
inc
or
fistpll
xor
cmp
imul
out
xchg
add
movsb
jbe
test
imul
je
jl
aas
jecxz
pop
adc
inc
cmc
call
test
mov
cli
in
sub
jne
jmp
mov
in
repz
in
mov
inc
sub
stos
push
and
or
stc
lret
loope
ds
pop
add
or
and
xchg
pop
outsb
sub
mov
jnp
cwtl
push
orb
in
int3
xlat
sub
cmp
mov
iret
int
cld
sbb
shll
loopne
jae
aaa
and
cmc
shll
es
mov
lret
dec
adc
divl
clc
test
jns
xchg
js
pop
fnstenv
and
cmp
xbegin
adc
mov
cmpl
imul
clc
and
add
ljmp
inc
stos
aam
sub
or
mov
ret
test
repnz
fstps
or
aas
dec
jns
je
mov
pop
sbb
daa
cltd
mov
adc
cmp
jmp
aam
dec
jecxz
cs
and
imul
sbb
pop
and
sub
add
mov
js
les
leave
fwait
adc
push
cs
in
fwait
pop
push
repnz
xchg
loopne
lock
push
jmp
or
sti
and
imul
dec
inc
dec
int
data16
fildll
rolb
and
test
in
or
inc
jnp
push
inc
repz
xor
inc
bound
cmp
xchg
ret
sub
mov
cld
cmp
add
mov
sbb
cld
and
push
fisttpll
cwtl
pop
shll
pop
clc
pop
xchg
aam
xchg
mov
jno
cltd
add
xchg
cwtl
sbb
pop
test
test
scas
cli
test
lcall
push
test
xor
add
xlat
out
dec
stc
seto
pop
cmp
cmp
xor
mov
popf
mov
mov
repz
test
and
mov
je
fisubrl
xor
mov
push
push
xor
repz
mov
mov
push
into
repz
dec
pop
pop
enter
dec
cld
sti
sub
xor
fistps
mov
jmp
iret
stc
les
faddl
andb
inc
or
mov
and
icebp
call
das
out
popf
ret
jno
fisttpll
loopne
xchg
cmp
lahf
cmp
jmp
shl
test
dec
xchg
ret
iret
bound
pop
xchg
in
lock
fstpl
jb
iret
int
or
jno
or
out
add
push
cmpsb
nop
sbb
mov
mov
and
dec
js
insl
or
sbb
inc
inc
adc
je
pop
sbb
xor
mov
mov
jl
ja
or
sub
fwait
xchg
mov
and
jae
xlat
in
pop
and
jp
movsl
movsb
imul
xor
daa
int
dec
es
aad
pop
adcb
gs
dec
js
es
sub
and
push
out
addb
sbb
sbb
mov
int
inc
mov
in
jg
dec
mov
test
mov
push
into
icebp
repnz
mov
flds
es
mov
add
dec
xlat
aam
add
jp
adc
sub
push
xchg
push
jbe
mov
mov
sarb
adc
loopne
je
mov
sbb
in
dec
lods
xor
pushf
and
pop
ja
mov
test
dec
pop
dec
mov
scas
pop
push
aas
mov
jo
es
jae
out
lods
sub
adc
outsl
cltd
imul
mov
jecxz
pop
adc
stos
push
rcl
test
or
jnp
ror
out
mov
mov
jo
sbb
paddusb
mov
sahf
or
mov
js
adc
xor
and
rcrl
outsl
testl
inc
and
aaa
xchg
lret
mov
aad
pop
mov
adc
inc
xor
mov
repz
andb
lea
pop
lods
xor
or
cli
inc
jp
cmpsb
inc
or
hlt
xor
cli
mov
les
jne
mov
vmulsd
and
jl
pop
sahf
stos
cmp
in
ret
add
imulb
stos
push
fsubr
inc
gs
stos
repnz
gs
shrl
les
sti
xchg
outsl
mov
mov
jbe
sub
mov
out
call
cmp
aam
adc
or
fsubl
mov
es
xchg
pushf
mov
out
inc
pop
push
mov
stc
loop
sbb
push
cvtps2pi
dec
mov
fildl
jno
cli
mov
push
insb
das
inc
inc
jg
xor
xlat
repnz
inc
mov
push
xchg
repz
mov
xor
mov
push
inc
or
push
sub
aas
sbb
insb
daa
sbb
jo
negb
std
dec
roll
and
push
shrl
sub
push
pop
out
jo
or
mov
or
pop
pop
jecxz
cmp
insb
into
jb
add
mov
jnp
adc
sub
fmuls
fcompl
stc
nopl
jl
or
dec
jp
inc
inc
lret
dec
lret
ret
int3
out
pusha
pusha
mov
out
mov
xchg
cmp
dec
sbb
lahf
sbb
in
cmp
cmp
fcoms
aam
arpl
sti
jle
xor
pop
lds
jle
fldt
sbb
add
mov
arpl
sbb
jae
mov
lea
ss
pop
push
out
add
cmc
movsl
imull
pop
fs
adc
mov
push
jmp
jnp
pushf
out
xchg
jb
and
mov
cltd
pop
ret
mov
push
cmp
or
movsl
or
mov
adc
cmp
addb
insb
xchg
loopne
xchg
dec
into
adc
int
fsubs
fwait
and
mov
push
xor
mov
mov
inc
rclb
mov
xor
xor
popf
xchg
mov
cmp
das
pop
stos
jne
or
add
shlb
inc
mov
lock
sbb
jp
add
jg
stos
in
loopne
shrb
mov
test
dec
pop
dec
loop
stos
imul
mov
dec
arpl
bound
jle
test
es
rclb
into
aam
pushf
js
sub
and
xor
orl
fildll
adc
xchg
add
push
cmp
jmp
inc
stos
sub
and
ljmp
dec
and
mov
jno
dec
ds
test
add
stc
test
ss
inc
fldenv
cld
push
in
sub
add
cs
shll
add
movsl
adc
lret
outsb
subl
in
jge
in
and
in
jns
push
je
movsl
pop
mov
mov
xor
xor
pushf
push
lds
add
repnz
insl
das
pop
cmp
fcoms
loop
imul
aas
enter
sbb
mov
fwait
aaa
xchg
mov
std
xlat
insb
jmp
mov
addl
adc
sbb
dec
lock
push
jmp
fldl2e
mov
or
adc
jecxz
pusha
push
and
jle
stos
push
fisubl
shlb
test
lods
xchg
lret
xor
xchg
notl
sub
aam
mov
ficompl
lea
adc
test
dec
fimull
popa
jne
sbb
rclb
jge
std
rcll
nop
push
scas
loop
popfw
fwait
mov
push
xor
scas
out
lret
xchg
rcr
lahf
sub
cmp
test
push
sbbb
test
inc
lea
repnz
jg
mov
mov
rorl
enter
xorl
stos
xchg
ds
rcr
gs
mov
shrb
mov
cmpsl
imul
adc
aas
mov
pop
xor
sti
stos
inc
sarl
repz
lock
leave
cmp
lods
scas
jno
fisubrl
push
pushf
jb
int3
cmp
cmpsl
das
and
mov
mov
fwait
aaa
sbb
sbb
lea
outsl
cmpsb
xchg
ret
xor
mov
pop
outsb
iret
aas
test
or
mov
adc
outsb
mov
js
iret
out
push
pushf
inc
cmp
sbb
xor
sbb
popf
mov
sbb
sub
jp
push
add
mov
rclb
aaa
lods
int3
cmc
pop
fnstsw
ret
mov
pop
cmpsb
add
gs
jp
cmpsb
test
movsb
sbb
mov
les
adc
test
pop
jb
xchg
lea
ret
mov
dec
cld
sbb
mov
push
js
sub
das
sub
sub
jmp
mov
add
pushf
mov
push
mov
je
jl
xor
nop
or
jg
lds
push
in
ja
aam
cmp
sbb
cmp
pushf
pop
adc
mov
cltd
xchg
repz
add
xor
imul
jnp
jnp
xor
stos
jo
fcmovb
pop
and
xchg
repz
subb
add
lods
jmp
rcll
mov
movsl
and
int
pop
mov
cmpl
xchg
rorl
repz
inc
dec
push
cld
pop
daa
xor
push
mov
ficoms
add
clc
andb
inc
pop
jge
pop
xchg
jo
jecxz
jecxz
aas
push
lds
mov
mov
in
sub
mov
jns
or
xchg
insb
in
cld
ljmp
cmp
je
jb
or
mov
cmp
push
cmp
shl
jmp
lret
loopne
aad
pop
stos
loop
xor
fimull
ss
insl
repz
mov
repnz
jp
jbe
scas
cld
cmpsb
cmp
adc
dec
and
mov
pop
cltd
in
jae
loope
mov
call
sbb
negb
das
scas
dec
adc
out
repnz
mov
test
adc
xor
pushf
push
push
jne
xor
int
stc
incl
xchg
jge
sub
cmc
ret
cmp
jg
pusha
jle
cld
outsb
lods
and
mov
dec
movsl
cmpb
les
sub
adc
jp
pop
jne
mov
aam
inc
mov
stos
icebp
daa
mov
cli
xor
sahf
push
push
push
jl
insb
lret
sbb
sub
insb
jp
out
pop
cmp
cmp
xor
mov
dec
negl
cmp
rcrb
sahf
stc
xchg
sub
ss
lret
pop
cmp
cltd
or
push
hlt
ret
sbb
mov
push
lret
add
pusha
inc
in
lret
mov
jmp
lds
pop
sub
syscall
std
xor
mov
leave
mov
ja
mov
out
mov
add
mov
and
sbb
iret
shll
lcall
jnp
adc
iret
pop
and
arpl
nop
ret
stos
aad
lds
adc
push
mov
in
cltd
sbb
ds
bound
jmp
jp
dec
adc
popa
or
jg
mov
add
inc
and
push
les
pop
subb
pop
mov
iret
jbe
fsubs
call
dec
loop
aad
imul
bound
imul
fs
jg
inc
xor
mov
mov
sbb
aas
mov
mov
mov
or
aaa
xor
xchg
nop
fmulp
mov
lea
int
cli
push
inc
je
scas
sahf
or
sbb
rolb
repz
push
mov
jge
inc
and
jp
fadds
sub
cmpsl
in
je
pop
nop
dec
sub
scas
in
mov
cmp
sti
mov
das
lock
inc
xor
pop
sbb
in
shll
iret
scas
jg
cmpb
orb
xchg
cmp
imul
add
out
sub
jl
addr16
mov
mov
xor
leave
daa
out
pop
xchg
xchg
sub
push
or
data16
add
or
enter
and
int3
add
add
mov
leave
fidivrl
fldcw
test
int3
pusha
sub
out
subl
movsl
stos
mov
mov
jge
pushf
inc
stc
push
pusha
jbe
mov
jecxz
xor
push
push
notb
sub
icebp
sbbl
add
jne
insl
xchg
or
fcomps
les
sub
popf
mov
leave
std
push
lret
leave
jmp
sbb
les
sbb
scas
dec
pop
pop
bound
scas
inc
scas
or
aam
push
xor
clc
lds
cmp
ret
jns
fstpt
push
stc
in
and
ffreep
adc
mov
jne
xor
leave
sbb
mov
orl
cld
stc
loopne
mov
mov
sbb
shlb
fisubs
mov
popa
jge
repz
push
rorl
adc
ja
imul
test
inc
inc
aad
or
add
fsubrs
aas
shl
lahf
add
fcmovne
and
xchg
adc
push
sbb
and
gs
add
lahf
repz
iret
inc
and
or
xchg
xchg
push
in
or
repz
out
xchg
loop
and
ljmp
xchg
add
xchg
sub
or
enter
shr
push
xor
out
ljmp
xor
pop
insb
aad
pop
or
sbb
mov
test
fcmovb
mov
fxch
fwait
in
pop
stos
push
outsb
enter
imul
and
or
es
andl
rclb
inc
out
sbb
inc
push
fdiv
mov
mov
adc
sbbl
paddsw
inc
pop
imul
xchg
insb
scas
loope
divl
push
jg
aaa
stos
sti
mov
add
jo
js
aad
cmp
scas
xor
mov
fidivrs
loope
xor
push
add
aad
and
xor
and
das
pop
shlb
mov
adc
or
jmp
cmp
mov
mov
xchg
cld
fcoms
adc
out
inc
subb
ficompl
sbb
stc
loop
mov
push
loop
adc
mov
loope
pop
mov
inc
rorb
cmp
stc
andl
cmpsb
lahf
mov
mov
jne
popa
shl
aad
fdivrs
sbb
xchg
push
clc
fidivrl
mov
or
popa
sbb
push
xchg
xchg
or
test
inc
add
out
dec
dec
nop
mov
xor
test
xor
or
scas
movsb
lahf
sbb
pop
ror
inc
sbb
cld
out
divl
pop
cwtl
aaa
xchg
xchg
outsl
mov
push
movsl
fs
notl
xor
rorb
xor
cmpb
xchg
and
jp
push
cmc
jp
test
jno
add
ret
add
cmp
cmpsl
adc
aam
imul
outsl
dec
repz
add
inc
cmp
cli
cwtl
into
insb
call
xchg
xor
ja
mov
xchg
mov
int
add
in
je
mov
cwtl
subb
cli
fstl
fsts
mov
fbstp
and
xor
mov
mov
rorl
push
xchg
jb
add
icebp
xor
pop
hlt
stos
jmp
add
sbb
das
call
aad
and
daa
xor
test
enter
clc
cmp
lock
pop
xchg
popf
xchg
inc
jge
cmp
fs
dec
add
pop
pop
and
ja
ret
shll
cmpsl
fs
or
fbstp
jnp
mov
or
mov
shlb
pop
inc
shrl
cmp
fdivl
cmp
mov
add
dec
data16
ds
or
pop
in
fstps
sbb
stos
mov
pop
sub
dec
fisubrs
inc
mov
cmp
jbe
stos
or
pushl
outsb
sbb
cmp
xchg
outsl
mov
stc
imul
pusha
jp
iret
mov
mov
add
pushl
pop
and
fisttpl
mov
mov
aas
xchg
addb
movsb
popf
hlt
mov
mov
fwait
in
sbb
fwait
sub
js
or
jno
mov
mov
or
arpl
mov
jae
or
sti
sub
or
mov
test
imul
imul
cmpsb
pop
fbld
in
stos
inc
sbb
das
xchg
mov
and
mov
in
mov
xor
and
add
jg
aaa
stos
fiadds
or
icebp
mov
inc
pop
lahf
mov
xor
int3
push
lods
jmp
mov
add
xchg
mulb
push
or
mov
add
in
jle
popa
pusha
adc
adc
inc
ret
fcoms
jns
cwtl
and
add
das
adc
cwtl
lret
hlt
inc
mov
pushf
mov
iret
xor
mov
jae
or
adcb
test
subb
shll
testl
jnp
movb
mov
add
or
stc
dec
or
es
test
aad
sbb
je
hlt
jne
sbb
mov
js
mov
push
and
pop
repnz
fcomi
add
pop
inc
jnp
out
negl
or
mov
loopne
pop
sbb
jge
repz
enter
inc
iret
pushf
mov
mov
mov
pop
add
stos
dec
pushf
xchg
inc
cltd
sar
jns
adc
sbb
mov
cmp
push
test
adc
adc
loopne
cli
sbb
stc
mov
sub
aas
sub
daa
xchg
int
popa
lods
andb
push
cmp
pop
jp
and
and
call
sbb
mov
push
push
repz
add
pop
adc
lods
popa
xlat
shrb
jnp
mov
dec
or
mov
xor
clc
xchg
push
xlat
jecxz
sub
mov
xlat
imul
push
mov
cmp
sbb
mov
mov
dec
iret
ja
inc
mov
iret
movsb
addr16
push
dec
cld
sub
dec
mov
testb
enter
ljmp
stos
sbb
aad
dec
inc
ficompl
sbb
cmp
repnz
clc
jb
sub
cmpsb
sub
jb
jl
dec
add
or
mov
jmp
add
pop
in
add
jl
mov
push
test
mov
jg
sub
arpl
dec
push
sub
push
mov
jb
icebp
sub
or
lcall
sub
mov
jo
fs
add
repz
xchg
or
idiv
pushf
aaa
push
lods
subl
gs
test
cmp
mov
rorb
dec
inc
xchg
imul
xchg
outsb
adc
cli
mov
in
xchg
cld
into
push
cs
test
mov
push
jmp
inc
pop
sbb
or
rolb
adc
popa
xchg
cmp
xor
pop
fsubrs
cmp
into
pushl
inc
add
push
inc
ret
js
cld
adc
mov
mov
lods
mov
clc
in
xor
ret
pop
pop
sub
cmp
enter
addr16
incl
mov
stos
popa
ds
jle
inc
imul
jl
lea
aam
jmp
test
decb
and
cmc
test
xchg
sti
xchg
push
cld
add
xchg
dec
mov
inc
push
addr16
push
scas
sbb
sub
ljmp
jle
aaa
les
adcl
cmpsl
aas
jb
xor
xor
sbb
or
sti
popf
aaa
rolb
jecxz
inc
adc
mov
mov
xchg
xchg
xor
enter
add
jl
jbe
imul
push
or
test
xchg
sarw
in
pop
push
and
mov
mov
bnd
mov
mov
int3
inc
jno
shlb
sub
pop
sub
icebp
fldenv
and
push
pop
loop
jg
dec
subl
inc
pop
xor
inc
ljmp
mov
fisubrl
cmpsb
aad
push
xchg
pop
je
sub
mov
mov
jge
sub
jns
sbb
push
add
lahf
pop
add
lret
sub
mov
lock
adc
or
fstps
jbe
xchg
and
movsb
sbb
sar
movsl
sbb
in
lahf
add
lret
stos
inc
stc
jae
pop
mov
lea
xor
push
movsb
movsl
mov
add
xchg
in
fs
rolb
aaa
cmp
fwait
test
pop
lds
push
adc
pop
xchg
sbb
sub
outsb
ret
and
std
sbb
inc
add
mov
std
stos
jp
push
jle
cwtl
ds
jle
xor
jmp
dec
sbb
shll
or
xlat
inc
inc
les
movl
cmp
adc
mov
call
sti
dec
pop
fldl
lret
pusha
sub
movsb
notl
push
xor
shll
in
xchg
out
aaa
cmp
cmp
lret
rcrl
psllw
cmc
in
mov
addr16
mov
and
sbb
sbb
movsl
lods
sahf
enter
fnsave
test
mov
or
fstpt
mov
mov
mov
movsl
movsl
push
nop
mov
sbb
psubsb
roll
jbe
movl
pop
loope
xchg
inc
aam
jg
cmpsl
std
lahf
push
mov
jle
cmp
push
cmpsb
sbb
xor
out
mov
cmc
aas
fwait
push
and
mov
fisubrs
pop
inc
daa
push
xorb
pop
add
add
leave
lock
cli
ja
sbb
ror
roll
sahf
mov
cmp
xchg
xchg
rcrb
sbb
sti
mov
push
add
imul
loopne
inc
imul
jo
in
js
and
mov
adc
daa
add
sub
aas
dec
gs
push
push
adcb
and
mov
xchg
cmpl
fnstsw
lret
inc
outsl
mov
popf
xchg
mov
clc
mov
mov
jge
pop
fdivp
das
and
cmp
cmpsb
add
orb
cmc
add
mov
cmp
rolb
cs
xchg
jno
pushf
mov
xchg
push
insb
mov
mov
mov
add
xchg
mov
xchg
push
cs
aaa
in
subb
push
cli
out
jmp
fneni(8087
adcl
mov
mov
push
mov
mov
mov
jg
adc
sbb
sbb
and
roll
cmpsb
call
jo
jb
movsl
shlb
inc
mov
and
stos
xchg
jns
inc
popf
ds
xchg
out
mov
mov
push
push
xor
sbbb
outsl
mov
scas
mov
fwait
xchg
orb
sbb
cmpsb
jne
mov
mov
jmp
jb
repz
je
or
std
adcl
or
sbb
ficoms
ret
push
ja
dec
cwtl
into
arpl
mov
xchg
aam
xorb
mov
roll
or
cs
rcrb
fnstcw
jmp
addr16
mov
arpl
sbb
inc
fdivrl
xchg
adc
fmull
js
mov
aam
imul
pop
xor
dec
add
cmc
dec
inc
ret
sbb
fldenv
and
inc
and
sar
or
ret
pop
jg
ret
or
pop
fs
xor
aad
mov
mov
in
add
mov
arpl
push
add
xchg
push
cs
rcll
clc
mov
std
dec
push
dec
mov
test
orl
xchg
jecxz
pop
cmp
movl
and
add
movb
imul
cmp
inc
insl
jae
sub
fistps
aam
lds
imul
push
add
push
jl
inc
jmp
push
push
roll
jb
int
mov
mov
jmp
and
dec
andb
jecxz
outsl
cmpb
call
movsb
adcl
sahf
lret
xor
fs
dec
push
fwait
std
outsl
pushf
mov
push
std
mov
jmp
adc
mov
movsb
sbb
and
cmp
lods
je
outsl
mov
or
jo
mov
ljmp
add
outsb
rorb
mov
xchg
mov
xchg
xor
fstpt
lods
mov
ret
mov
pop
jge
lahf
sbb
xor
arpl
gs
rcrl
mov
fiadds
in
test
push
dec
xorl
or
pop
sbb
cmp
xor
in
jno
jb
or
mov
mov
fcoml
mov
jnp
adc
pop
mov
sahf
dec
sbb
jl
mov
cmp
adc
jns
sbbb
int3
call
dec
nop
lret
sbb
clc
mov
dec
call
pop
enter
jnp
or
xor
insl
outsb
lea
aad
sti
inc
sub
js
mov
dec
and
and
xchg
adc
daa
leave
repz
mov
push
push
pop
sbb
jl
lret
loope
lods
pop
in
cmp
loop
cltd
clc
cmpsl
sbb
rorb
repz
push
sub
sahf
das
sbb
jb
inc
adc
enter
jge
lods
out
cmp
xchg
and
mov
clc
or
in
icebp
nop
jo
aam
push
sub
cmp
fnstsw
bound
or
insl
xchg
in
arpl
cmp
cmp
in
sub
jnp
cld
dec
loop
add
testb
jno
in
call
jns
inc
mov
and
mov
outsl
adc
outsb
je
push
jecxz
cmpsb
or
fsubrl
ljmp
jg
repnz
fs
cli
mov
rorl
adc
dec
or
cmpsb
imull
and
jle
es
add
data16
test
xchg
fisubrs
add
add
insb
jo
push
jnp
loop
xorb
and
mov
mov
call
push
iret
push
insb
lock
xchg
mov
test
enter
dec
mov
xchg
imul
sub
sbb
adc
repz
inc
push
push
loop
jl
or
inc
fldl
xor
pop
inc
mov
in
sbb
cmp
cmpsl
aam
lods
ret
loope
jb
mov
mov
mov
cmp
lcall
push
out
lret
mov
hlt
lods
add
and
ret
ret
push
addb
push
mov
loope
ficoms
pop
xchg
and
sub
or
sahf
xchg
orl
pusha
xchg
dec
mov
pushf
movq
jge
cwtl
aad
mov
mov
data16
ss
mov
mov
ja
dec
or
jne
sbb
fwait
or
pushf
jecxz
adc
adc
cmc
cmp
out
aaa
xchg
stos
mov
and
pop
ficomps
aam
sub
xchg
mov
jns
enter
repnz
adc
sub
or
stos
push
ficomps
or
repnz
or
or
mov
into
fistl
jbe
loope
push
inc
mov
and
mov
ret
and
imul
out
and
pop
cltd
daa
sbb
inc
mov
scas
mov
lcall
imul
or
addl
mov
push
cmc
mov
fidivrl
shlb
pop
and
test
vfmsub213sd
ret
stos
cmpsl
mov
jmp
add
mov
adc
sub
cld
call
sbb
fisttpl
jnp
js
push
movsb
fadds
out
mov
movsl
mov
scas
push
jmp
sbb
add
pop
ljmp
iret
and
std
inc
jle
sbb
dec
pop
or
push
cld
sub
clc
iret
mov
pop
ret
cwtl
enter
or
fwait
sbb
push
out
fdivrs
cmp
stc
mov
sub
mov
je
rcl
test
inc
rolb
clc
dec
push
sbb
sbb
jge
push
scas
fcomps
jle
jg
hlt
ds
sahf
adc
inc
mov
xor
mov
outsl
fwait
ret
cmpsb
mov
mov
daa
lock
in
xor
out
leave
hlt
sbb
sub
mov
xchg
cmp
enter
jnp
push
cmpsl
xor
pop
xchg
cli
jbe
adc
ja
jg
ret
mov
mov
pcmpeqd
iret
jb
pop
fistpll
packssdw
mov
mov
xlat
daa
int
pop
mov
outsl
dec
add
and
mov
mov
je
adc
mov
inc
sub
sbb
fs
or
xchg
or
add
jne
sub
xchg
xchg
or
cmp
dec
xor
pushl
adc
jmp
outsl
sahf
psadbw
fmuls
xchg
xchg
mov
scas
fstl
pop
in
negb
jg
std
push
in
mov
jecxz
dec
inc
or
clc
or
out
mov
es
iret
std
and
in
out
inc
add
test
jno
andl
movsb
lret
pop
jge
xlat
jns
addl
sub
test
xor
sbb
ja
repz
daa
xor
xor
scas
pop
and
push
xlat
xchg
inc
cmpsl
adc
add
push
in
movb
shlb
mov
adc
fstpl
jmp
sbb
lret
rclb
aam
add
jbe
cmp
test
sub
stc
xor
mov
das
arpl
scas
mov
cs
xchg
cli
xor
out
inc
push
addr16
aaa
mov
cld
into
daa
mov
xor
adc
mov
mov
inc
mov
pop
shll
push
mov
outsl
loopne
mov
mov
out
xor
add
xchg
cmpsl
sahf
test
push
add
fcmovnb
mov
push
sub
pop
icebp
cmp
outsl
xor
jge
sbb
mov
lods
ljmp
cmp
and
sbb
aaa
stos
mov
cmp
sub
inc
fwait
or
xchg
rorl
into
popa
jne
movsl
or
rol
aas
xorl
in
jnp
xchg
clc
cmp
xchg
in
cmp
divl
repz
mov
ja
arpl
and
data16
cltd
int
xchg
xor
call
xor
and
cs
aam
jmp
xor
rcr
arpl
stc
mov
mov
adc
and
cmp
mov
pop
inc
pop
aas
js
aas
scas
adc
jmp
mov
aaa
or
ret
add
mov
jo
mov
sti
jg
jmp
push
mov
mov
pop
push
sub
sbb
gs
addb
sbb
push
add
sub
pushl
outsl
inc
paddsb
xlat
inc
mov
movsb
push
frstor
adc
pop
sub
int3
push
add
rcll
outsb
idivl
mov
push
mov
add
pop
mov
cmp
ljmp
mov
pop
shl
in
pop
ljmp
sbb
or
ja
loopne
push
out
iret
test
lcall
fldl
ss
outsl
jne
divl
push
loope
pop
xchg
lcall
or
fs
dec
adc
addr16
je
pop
push
sbb
sbb
push
lahf
jns
lahf
and
pushf
into
xchg
cmp
inc
sub
psubw
es
fs
cmpsl
pop
push
lock
sbb
cmp
cmp
push
es
or
out
faddl
repz
aam
sub
frstor
xchg
sub
mov
popa
pop
adc
push
ret
stos
pusha
div
xor
sub
gs
push
js
stos
cli
mov
pop
pop
xor
clc
ret
arpl
jnp
aaa
sti
aam
xchg
xor
push
push
arpl
cmpsb
sub
imulb
lods
lcall
jge
pop
sbb
push
dec
rcrl
lcall
mov
jg
cmp
leave
fcomps
sub
mov
icebp
call
outsl
lds
fisttpll
push
insb
mov
test
cltd
clc
repnz
sbb
or
cwtl
cmpl
sub
or
ret
mov
ss
push
xor
daa
or
mov
clc
push
add
lret
pop
pop
dec
sahf
outsl
xor
or
jle
jne
cmp
adc
movsb
lods
adc
sbb
js
daa
pop
mov
push
and
mov
dec
mov
push
mov
aaa
ret
repnz
icebp
xor
testl
xchg
ror
xchg
xor
stos
and
ljmp
std
aam
popa
xchg
inc
cmpsl
inc
jns
xchg
pop
jmp
movsb
mov
and
pop
aam
fwait
sbb
cli
fmuls
fs
mov
sub
jecxz
push
xchg
sub
mov
in
addb
and
jl
push
ljmp
fimull
jge
jmp
shlb
jae
and
fimull
dec
or
sti
adc
xchg
jg
loop
pop
and
xchg
adc
iret
imul
out
jno
pop
add
add
dec
das
or
xor
xchg
inc
and
cmp
push
sub
mov
shrl
je
arpl
jnp
movsb
xlat
nop
pop
cld
mov
mov
push
nop
jo
inc
add
mov
cmp
lock
stc
sbb
out
ljmp
push
xor
popa
cmp
adc
or
xor
xor
aas
in
cltd
cmp
in
int
jo
movsl
aad
cld
mov
mov
xchg
sbb
inc
insl
stos
ja
push
pusha
popa
cmp
push
int
push
daa
xor
in
cltd
dec
stc
mov
xlat
popa
addr16
outsb
hlt
lret
movsb
jge
or
adc
mov
bswap
in
inc
cmp
sbb
int3
addr16
in
mov
sbb
rolb
jecxz
pop
xchg
push
call
js
jge
or
push
xlat
push
mov
jg
dec
lret
mov
xor
mov
push
jl
dec
outsb
cmp
mov
sahf
adc
mov
cwtl
in
jle
arpl
icebp
lahf
mov
out
pop
jge
movsb
movsl
pusha
int
mov
xchg
pop
into
cmpsb
lock
test
dec
sbb
lds
push
ret
in
inc
mov
jnp
xchg
push
cmpsl
lds
inc
mov
xor
xchg
fndisi(8087
ja
cmp
loope
jns
xlat
or
in
xchg
pusha
cltd
push
imul
subl
pop
cld
jne
mov
fsubp
dec
inc
push
xchg
sub
inc
mov
subb
jg
out
add
pop
sbb
mov
dec
push
inc
jno
js
sub
push
pop
rcll
daa
ret
mov
dec
and
mov
aam
pop
pop
cld
das
jg
push
lret
mov
dec
push
pop
or
xchg
mov
push
cmc
jg
sbb
jmp
insb
mov
xchg
and
pop
js
or
inc
ja
mov
jecxz
in
or
dec
xchg
data16
push
insb
repnz
cld
test
adcb
add
fs
or
arpl
sbb
lret
push
sub
xchg
jne
jno
mov
ret
sbb
inc
not
mov
outsl
std
cmc
je
mov
mov
xor
xor
movsl
mov
movsl
call
add
jp
sbb
jbe
mov
mov
pop
outsb
loop
int
fsubr
mov
orb
sub
ds
gs
cltd
icebp
jo
orl
ss
das
icebp
sbb
cmpsb
mov
pop
mov
scas
pop
jnp
or
mov
rorb
fs
cmp
xchg
aas
pushf
movsb
cmp
rclb
in
xchg
data16
iret
sub
adcl
xchg
rcrb
inc
dec
push
cwtl
or
jg
cmovnp
sbb
jle
roll
lea
xchg
das
hlt
hlt
adc
lret
jbe
out
push
mov
inc
jmp
xchg
pop
xor
out
sbb
and
les
sbb
xor
mov
or
imul
sub
jecxz
and
fcmovu
push
adc
and
mov
nop
adc
bound
fwait
decb
mov
sbb
ss
mov
call
inc
dec
inc
xor
mov
jnp
cmpsb
jae
sbb
pop
adc
mov
inc
mov
adc
cmp
dec
push
xchg
fldpi
in
mov
add
ret
mov
dec
inc
inc
pop
xor
or
stos
ret
xchg
push
inc
xchg
cmp
push
jp
pop
xor
rol
xorl
sub
cmpsl
sbb
test
stc
push
cmp
fs
lds
aad
mov
outsb
push
ret
push
imul
pushf
xchg
jmp
mov
or
add
sti
incb
adc
mov
dec
jae
iret
mov
cmovbe
jb
fsts
lods
jns
add
xchg
jo
cs
xor
cmp
nop
jmp
lcall
testl
push
add
mov
lret
insl
addb
pushf
sub
cmpb
adc
adc
adc
movsl
dec
push
and
and
inc
mov
pop
lods
stos
push
movsb
lods
add
mov
mov
daa
das
adc
mov
pusha
cmp
jne
sahf
sbb
xchg
add
dec
ret
into
in
mov
adc
sbb
jecxz
sarl
adc
sahf
mov
mov
test
mov
jne
push
pop
xchg
mov
out
jae
lds
pop
lods
jnp
sub
mov
popf
pusha
nop
mov
dec
shl
sub
push
repz
cwtl
stos
fwait
scas
lds
and
addr16
xor
pusha
ds
xchg
ds
jecxz
outsl
xchg
frstor
lea
int
cmp
rcrl
sti
pop
or
sub
int
dec
pop
popa
dec
inc
repnz
pop
push
or
or
clc
nop
lahf
sti
je
cmc
fsubr
addr16
fwait
inc
popa
sub
xchg
std
pop
ss
cmp
aas
sbb
arpl
push
jns
inc
jp
shll
rep
das
cmpsb
loopne
jnp
inc
lcall
jb
xchg
mov
push
cltd
leave
lods
js
pop
lea
mov
xchg
or
hlt
test
jp
aam
push
icebp
cmpsb
lahf
add
lock
shll
lret
pushf
sub
out
outsb
pop
lahf
loop
push
idiv
xchg
sub
or
mov
mov
pop
ret
jge
xchg
lret
ss
push
sbb
insl
shlb
sarl
aam
popa
inc
insb
or
inc
loop
rcrl
mov
xor
lds
adc
daa
adc
pop
dec
jmp
jecxz
pusha
mov
mov
adc
andl
or
cs
add
jle
sbbl
cmp
movsb
jge
xchg
xchg
jbe
xor
add
or
popf
push
aad
popa
mov
pop
dec
aad
mov
fwait
and
cmp
and
out
cmc
loopne
nop
xlat
test
fdivp
or
mov
dec
xlat
jne
adc
and
int
imul
cmp
sbb
add
aas
pop
xlat
xorl
out
stc
ret
sub
mov
dec
fdivr
add
cli
pop
dec
jle
shr
jge
pop
adc
scas
outsl
push
mov
and
pop
mov
out
lods
pop
jecxz
in
dec
mov
icebp
mov
xchg
stc
push
mov
in
ffreep
inc
push
cmovbe
jnp
xor
pusha
push
lret
cmpsl
dec
inc
icebp
fsub
mov
jae
push
cmp
in
enter
push
ret
jo
popf
dec
mov
xchg
iret
iret
lret
mov
hlt
cmp
movsl
xor
pop
lods
mov
and
cmp
jne
sub
jecxz
push
and
sub
pop
mov
inc
iret
adc
xchg
inc
roll
adc
lock
sbb
xchg
and
cmp
aas
mov
jecxz
and
popa
pop
jnp
iret
or
rorb
lret
fidivl
scas
incl
out
push
ds
icebp
insl
out
iret
mov
jmp
xchg
and
fldt
push
test
jge
loopne
loope
out
push
das
jne
pop
xchg
bound
mov
add
pushl
mov
pop
lods
or
test
sub
and
aam
call
jno
div
xchg
mov
sub
movsb
ret
add
push
pop
xchg
test
test
hlt
out
out
mov
jb
and
mov
add
scas
xlat
mov
lret
jmp
cmp
jecxz
stc
ja
test
xor
ja
lods
xchg
int
imul
sbb
sub
push
lahf
loope
pop
sbb
sub
xchg
sbb
aam
xchg
cmp
xchg
pop
adc
push
maskmovq
adc
in
pop
pop
clc
xchg
jne
bound
in
xchg
icebp
addb
jbe
pushf
arpl
fwait
daa
ret
sub
test
or
mov
add
sbb
add
sbb
push
xor
aam
push
test
jecxz
jecxz
jecxz
add
push
jae,pn
mov
jl
cmp
jg
cwtl
xor
sbb
pop
clc
jno
outsb
dec
or
sahf
lods
aaa
outsb
inc
ds
out
lods
pop
jecxz
mov
ret
mov
hlt
shll
dec
fsubrl
or
inc
bound
mov
pop
pop
cmp
cmp
xorl
jecxz
les
loopne
cmp
mov
into
mov
out
outsb
xchg
ds
jp
push
mov
pop
cmp
das
xchg
out
inc
mov
popf
mov
xor
mov
das
lock
call
mov
insl
sti
and
addr16
or
mov
dec
aam
fsubs
mov
push
clc
xchg
popa
sbb
aaa
aad
xchg
mov
pop
jg
xchg
mov
mov
fnstcw
aam
in
add
bnd
inc
out
mov
shr
movsb
aad
xchg
push
xor
mov
lds
push
fistpl
js
fdivs
sbb
push
cs
cmp
insb
test
iret
mov
adc
std
mov
xor
add
push
xor
or
in
dec
push
mov
mov
xor
add
pop
adc
stc
in
and
xchg
scas
stos
rcl
or
dec
addb
mov
push
test
cmp
in
cltd
pop
es
test
jnp
enter
or
movsb
cmp
sbbl
es
fucom
push
cli
daa
xor
push
push
mov
outsl
xchg
adc
cmp
push
add
sahf
adc
out
mov
jns,pn
dec
cmpsb
cwtl
iret
mov
je
fbld
dec
ja
adc
es
inc
scas
les
xchg
cwtl
out
sahf
adc
sbb
jle
int
imul
ds
pop
mov
test
fadd
into
and
mov
jmp
out
cs
pop
push
inc
test
in
sbb
adc
fs
out
and
mov
rorb
xchg
mov
cld
xchg
mov
pop
sub
shlw
insl
insl
sub
jle
dec
out
xor
notb
fwait
adc
daa
sub
dec
cmp
push
scas
popf
lea
adc
xchg
sti
jg
call
push
mov
add
mov
lds
mov
inc
xchg
jns
lret
jno
outsb
les
rcll
cli
jbe
xor
popa
xchg
and
shlb
out
jecxz
sbb
mov
mov
inc
or
xchg
mov
and
xor
out
xor
dec
or
xchg
sti
inc
jae
and
fst
ss
cmp
insl
dec
sbb
insb
and
add
add
pop
insl
mov
ficompl
jge
mov
test
insl
insb
lret
dec
test
jmp
pop
add
es
ss
dec
jb
sub
les
jl
mov
jmp
sbb
movsb
jl
jg
es
sbb
test
repz
inc
iret
nop
mov
in
push
data16
mov
push
mov
mov
fsubs
movsl
dec
cmp
ret
jge
shrb
out
lods
lock
repz
pop
aas
std
or
loopne
call
pop
or
rorb
and
fwait
mov
int3
out
lcall
ljmp
dec
pop
aam
xor
popa
dec
sub
imulb
xor
inc
mov
subb
fisttps
or
pop
rcrb
in
sbbl
sub
pop
cs
lret
mov
and
jo
aad
jnp
pop
mov
ss
int3
movsl
lcall
test
cmp
inc
cmp
out
and
pop
cltd
mov
lret
mov
ljmp
cld
das
xchg
jb
mov
mov
sbb
xor
cmpsb
mov
cmp
mov
sub
xchg
movsl
stos
cs
movsb
mov
cmpsb
je
dec
push
mov
mov
or
mov
testb
dec
sbb
out
mov
cmp
ja
push
sbb
popa
cmpsb
dec
ret
jne
lret
mov
int
jmp
xor
adc
daa
xor
sub
es
inc
xchg
push
add
ret
push
rcrl
push
jo
aam
sub
not
dec
jbe
fcoml
ljmp
call
imul
pop
popa
xchg
mov
dec
out
in
test
pop
jmp
xchg
imul
addr16
int3
xor
jge
pop
or
jle
mov
adc
hlt
in
inc
pop
push
dec
or
xchg
xchg
mulb
data16
xor
scas
xchg
xor
pop
mov
and
in
cmp
jecxz
hlt
jns
mov
jbe
mov
mov
jecxz
or
jecxz
movsl
arpl
jo
xlat
fucom
in
fiaddl
mov
fdivrl
adc
out
mov
test
imul
stos
clc
sub
xor
pop
into
cwtl
push
popa
in
jecxz
xor
jo
in
int3
inc
sub
ficomps
inc
sbb
pop
stos
cmpsl
add
es
in
out
shlb
clc
out
pop
add
add
cli
addr16
test
insl
icebp
popa
push
mov
insb
sub
inc
outsl
into
mov
sub
mov
add
rolb
push
or
xor
cmp
lret
adc
xor
mov
sub
adc
fdivrs
fstpl
in
fldt
mov
popa
pop
pop
mov
xor
stos
and
ret
loop
add
push
jne
das
add
in
sbb
mov
adc
inc
add
cmc
sti
rcll
xchg
jb
add
dec
inc
loope
xor
testb
ja
rclb
mov
jmp
xchg
test
test
call
sar
mov
movmskps
outsl
xor
jle
scas
stos
scas
mov
jg
pop
add
and
xor
pop
iret
or
push
jb
pop
mov
ljmp
das
imul
loopne
jge
or
mov
lcall
push
leave
pop
dec
jl
sub
pop
inc
jl
mov
fdivs
rorb
pop
enter
or
je
pop
lcall
xchg
push
outsl
push
add
mul
inc
ljmp
mov
jns
icebp
lods
xor
adc
push
test
cmpsb
jne
mov
mov
ljmp
pop
les
movsl
sbb
cli
mov
icebp
es
adc
xchg
in
mov
cmp
outsb
call
cmc
inc
data16
sub
xchg
push
pop
cmc
jb
jle
shl
and
rcrb
add
aas
dec
add
sti
jge
sub
div
pop
sub
nop
lret
fyl2xp1
jns
mov
pop
out
insb
push
fisubrl
jle
in
push
sub
js
jge
popa
mov
fs
or
cmp
mov
data16
sbb
aaa
stc
mov
shrb
jle
fldt
stos
add
pushf
test
lds
xchg
lods
jns
xchg
push
test
dec
fistpll
xchg
and
les
js
fisttpl
js
cmp
xor
insb
shlb
pop
mov
mov
rcll
loopne
push
loope
and
cmp
fsubr
and
jg
outsl
repnz
jge
int3
lods
jmp
enter
les
dec
mov
sti
nop
ret
sbb
mov
and
mov
ficoml
push
xor
sti
cltd
shrl
movsl
sub
jp
xlat
add
es
rcl
test
hlt
jecxz
fimull
mov
jp
lcall
les
push
cmp
repz
jbe
fcmove
xor
leave
pushf
sub
ja
add
je
dec
add
cld
mov
icebp
lds
jbe
adc
mov
jne
cmp
add
mov
mov
flds
adc
jbe
lahf
popf
dec
les
push
mov
aaa
adc
mov
pop
jnp
divl
rcrl
mov
or
and
scas
cmc
sbb
pop
push
cli
pop
icebp
mov
dec
adc
movsb
jl
pop
dec
sbbl
out
sub
add
pop
dec
lock
push
push
lods
and
mov
ss
mov
xor
sub
mov
neg
mov
xor
jb
scas
test
jo
imul
add
pusha
xor
push
jmp
jp
xor
dec
stos
and
inc
ljmp
in
sub
cwtl
or
stos
fwait
lcall
bnd
xchg
in
pop
leave
shrl
lret
lods
xlat
cld
add
inc
sbbb
add
mov
adc
ja
pop
and
popa
lcall
push
stos
rclb
shr
pushf
jno
push
sbb
mov
dec
dec
dec
lods
fs
scas
daa
fs
dec
inc
mov
mov
or
mov
jno
mov
scas
stc
and
dec
call
std
inc
sahf
dec
scas
divl
pusha
cmp
nop
or
sub
push
jp
sarb
adc
repnz
jmp
sbb
mov
mov
and
test
xchg
loopne
fmul
fwait
or
mov
add
xor
lea
pop
mov
shl
pop
mov
stos
movsb
outsb
mov
mov
mov
rcll
les
mov
mov
in
mov
mov
out
or
push
dec
ds
jnp
push
pop
test
pop
call
mov
mov
dec
out
xor
inc
js
mov
nop
adc
mov
xchg
push
ja
or
rolb
and
cli
or
dec
adc
cmpsl
lods
out
fisttpl
fistpl
pop
inc
je
shrl
pop
mov
push
iret
jbe
push
adc
mov
das
sbb
addb
fwait
xor
or
jle
jno
aam
sub
cs
ds
mov
je
sub
mov
or
hlt
adc
scas
mov
jnp
inc
movl
mov
mov
xor
xchg
and
push
fcmovne
push
js
pop
pop
jecxz
jae
cmp
xor
in
jge
mov
push
stc
cli
dec
xchg
jl
in
cli
mov
outsl
xchg
mov
out
mov
dec
int3
sbb
test
out
mov
repnz
mov
in
enter
and
orb
cmp
scas
mov
xchg
dec
inc
es
cmp
sub
jle
jae
jns
dec
add
and
mov
rclb
hlt
stos
pop
push
mov
cmp
add
mov
sub
shl
adc
movsl
fwait
xor
js
xchg
push
andb
push
jp
cmp
ja
push
aad
dec
stos
outsl
jg
mov
jne
jbe
outsl
dec
hlt
insl
cwtl
pop
out
sub
outsb
jns
repz
sar
rorb
and
dec
ret
cmp
cli
das
decb
es
push
add
addr16
push
loopne
add
sub
inc
inc
mov
cs
adc
sbb
into
mov
cwtl
fdivp
aad
insb
mov
sub
sarl
mov
cmp
int3
cmpsl
cs
push
int3
jge
push
mov
xor
ss
pushf
add
mov
lods
das
loop
xlat
cs
ljmp
mov
je
dec
fxtract
pop
popf
xchg
test
fwait
popf
cmp
pop
xor
or
xor
test
outsb
jge
jge
addr16
mov
and
lds
and
jmp
push
or
sahf
push
rcll
arpl
xchg
in
arpl
xchg
in
inc
lret
bound
sbb
jl
dec
jns
lret
inc
mov
xlat
mov
push
cmp
sbb
add
lahf
sbbb
mov
mov
cltd
pop
mov
adc
insl
inc
addr16
pusha
jae
sub
loope
mov
rclb
cmp
icebp
mov
push
outsb
shrb
loop
mov
ds
xor
sti
push
pop
push
or
add
add
push
jae
mov
fcmove
rcrb
addl
pop
lea
int
push
aam
sub
xchg
pop
bound
pop
and
push
ds
mov
push
cmp
push
dec
mov
or
sub
aas
cmp
popa
cmp
lcall
cmp
or
icebp
jmp
in
mov
xor
add
sbb
cwtl
movsl
mov
xor
into
cmp
mov
pop
fdivrl
pop
repz
dec
pop
adc
dec
insb
imul
xchg
cltd
ja
mov
movsb
cs
mov
mov
and
clc
lods
push
push
jle
xor
jbe
add
lret
sahf
lods
adc
cmpsb
mov
inc
inc
cmp
inc
jae
mov
mov
pushf
shl
push
sar
jne
nop
inc
fistpll
fxch
sub
ret
lahf
lea
jne
add
xchg
sub
cs
push
pop
pop
xor
shl
and
inc
mov
add
leave
mov
cmp
cmp
divb
jp
xchg
add
out
xchg
mov
sahf
cmp
shll
das
fnstsw
cmp
jecxz
mov
add
repz
adc
std
add
icebp
jl
cli
push
sub
movsl
xor
repnz
inc
fdivl
jge
cmpl
jl
xlat
dec
loope
mov
test
add
jns
fwait
iret
enter
imul
in
lcall
insb
fcoml
inc
mov
adc
adc
xchg
pop
cmp
push
cmp
pop
dec
dec
mov
dec
cwtl
cwtl
inc
fistpl
pop
inc
dec
cmp
lds
stos
add
fsubrs
pop
outsb
sbb
push
push
sbb
aad
xchg
lea
dec
rcr
pop
xchg
jg
aas
js
cmp
scas
lahf
sbb
adcl
stos
add
dec
xchg
je
add
addl
stos
sbb
sub
sti
xchg
in
jp
xchg
push
cmpsl
inc
cli
or
push
ret
mov
inc
lret
ds
imul
stos
insb
push
inc
push
inc
push
int3
movsl
push
int3
mov
ret
mov
inc
stos
dec
add
push
pop
add
fistps
push
cmc
mov
or
and
push
insb
in
push
pop
mov
push
xchg
cwtl
pop
lds
mov
push
scas
push
mov
insb
insl
int
cld
aam
mov
fisubs
jg
cmpsl
xor
aam
xchg
out
fbstp
stc
aad
loop
mov
xchg
or
dec
addb
call
or
dec
sti
mov
dec
sub
insb
mov
push
xor
les
xchg
out
dec
popa
cwtl
and
pop
pop
dec
push
shrl
and
cmp
pushf
repnz
inc
adc
push
shrb
push
stos
jle
pop
sub
pop
mov
fldcw
xchg
inc
fs
ljmp
outsl
loop,pn
jp
outsb
dec
je
xor
into
lcall
out
xor
mov
aam
lea
outsb
fdivs
jecxz
sub
mov
jmp
idivb
lods
inc
sar
inc
mov
shrb
jecxz
lret
out
jns
jecxz
adc
stos
fs
aam
cmpl
dec
shll
xor
fsubl
int3
leave
mov
test
insb
sti
cmp
stc
out
fimuls
js
popa
jge
cmp
jne
and
mov
pop
sbb
bound
and
cmp
nop
xor
or
mov
fidivl
test
pop
or
xchg
mov
dec
adc
into
in
int
inc
inc
movsb
fiadds
popf
inc
sbb
mov
ljmp
stc
pop
add
in
in
jg
pop
inc
rol
ljmp
jno
jns
mov
or
cli
lcall
int3
in
add
jbe
adc
outsl
in
jns
mov
sbb
in
and
push
cmp
int
dec
inc
inc
ficompl
dec
mov
out
push
xchg
or
ret
push
and
mulb
xor
mov
sti
repnz
sub
mov
loope
jp
shlb
sarb
adc
or
pop
daa
aas
push
push
cmpsb
aam
jge
in
cmc
ret
and
lds
sub
and
push
push
or
jne
mov
add
test
scas
inc
pusha
sub
iret
ss
repnz
les
mov
nop
mov
jae
lahf
sub
out
je
jns
scas
jmp
sub
xor
and
lret
sub
repz
mov
lods
mov
push
cmp
xchg
ret
movl
aam
icebp
je
les
subb
pop
and
jnp
jle
fcomi
stos
cmpsl
lds
dec
iret
daa
mov
out
sbb
adc
lock
pushf
gs
and
enter
imul
ss
sub
jmp
fsubrl
mov
loop
or
add
or
adcl
scas
xchg
aas
mov
xchg
jmp
inc
or
inc
sahf
test
dec
dec
out
and
movsl
and
in
xchg
jp
icebp
xchg
popa
sbb
mov
jnp
mov
jns
and
int
roll
popa
xchg
mov
mov
xor
add
dec
incb
and
add
nop
or
dec
cmpsb
jg
xor
pop
push
nop
lret
sahf
jmp
pop
adc
fcomp
jl
and
mov
subl
push
mov
jnp
ret
test
stos
lahf
pop
sub
cld
out
and
mov
or
add
pop
decl
pop
or
cmp
jns
aam
adc
aaa
dec
inc
insl
mov
cmpsb
imulb
sbb
push
sub
pop
jnp
jecxz
add
fs
daa
mov
sbb
enter
outsb
rorb
addb
in
jns
and
ds
push
jnp
cmp
push
or
lahf
pusha
in
lcall
jae
adc
pop
sti
ret
aaa
jbe
adc
push
gs
mov
lods
aad
inc
xlat
add
roll
fadds
stc
cmc
jns
dec
outsb
add
add
add
inc
cmp
sub
mov
sub
or
mov
xchg
xlat
dec
inc
ss
in
ljmp
xor
push
jbe
int
adc
adc
add
in
adc
or
dec
fisubrl
aas
cmc
iret
je
lods
jns
out
sub
adc
push
adc
int3
jecxz
mov
sbb
rcl
sub
iret
movsb
mov
mov
pop
sbb
or
sahf
aas
dec
push
data16
xchg
les
mov
xor
add
mov
pop
loopne
fldcw
decl
stos
and
adc
push
adc
add
dec
jecxz
cltd
out
xor
mov
out
pop
cmpsb
stc
ret
mov
lret
xchg
inc
push
cs
std
jl
xchg
mov
nop
mov
inc
dec
mov
mov
xlat
pop
jmp
fcompl
stc
pop
test
loop
xchg
xchg
jp
rcrl
inc
es
xchg
in
adc
ds
sti
hlt
pusha
mov
jne
mov
xchg
jp
in
and
mov
cmp
out
into
push
dec
mov
sub
ret
stos
leave
xchg
loop
sti
mov
xchg
mov
fcomps
ss
xor
adc
lahf
ds
add
pop
xor
push
es
bound
xchg
out
lahf
pushf
pop
dec
add
cmc
mov
insl
imul
insl
cmp
pusha
insl
inc
xchg
cmp
dec
dec
test
dec
xchg
cmp
sub
mov
lds
mov
icebp
add
and
jo
inc
sbb
pop
rorb
or
pop
or
lcall
cmp
aas
xchg
jne
ds
call
dec
in
push
fldl
repz
mov
pop
fstpt
mov
mov
add
push
clc
cmovl
movsb
mov
andb
mov
out
xchg
xchg
outsb
xchg
mov
ret
or
cmp
jecxz
sub
dec
iret
xchg
roll
dec
inc
dec
cmp
test
xchg
lcall
sub
jno
inc
add
lret
push
clc
iret
dec
jle
fsubrl
cmp
xchg
mov
cli
jbe
bound
xor
pop
cmp
add
adc
bound
cmp
enter
jo
loop
sub
pop
push
mov
jb
fidivrs
clc
shll
dec
mov
or
cmp
cmp
sbb
mov
jl
stos
fwait
cmp
inc
test
sbbb
and
shrl
adc
pop
gs
and
pop
sbb
in
incb
clc
repz
stos
jmp
fdivl
fwait
mov
js
arpl
sti
pop
popa
pop
mov
mov
cmp
aaa
aaa
mov
xchg
jg
repnz
sbb
and
lods
mov
jge
mov
bnd
fisubl
jge
or
loope
flds
adc
addr16
cmp
add
test
imulb
cmp
xchg
lahf
jo
mov
xor
mov
fisubrs
pop
test
jb
mov
shrl
ret
jg
mov
fmull
in
mov
pop
loopne
stos
xorb
in
dec
aaa
test
mov
lds
test
adc
addr16
dec
lods
mov
cltd
xchg
popf
push
leave
pop
addr16
out
addr16
into
sbb
xor
pop
jne
mov
ja
inc
das
lods
in
xchg
jg
pop
mov
dec
lods
pop
cld
dec
mov
mov
ljmp
pushf
cltd
leave
pop
mov
js
lds
in
pop
mov
mov
out
push
popa
popf
push
xchg
sub
cmp
in
or
or
cmp
mov
inc
jg
movsl
lock
sbb
popf
arpl
dec
js
int
cmpb
into
stos
lret
mov
pop
loope
cmp
mov
pop
and
pop
rcrl
fisubrs
lret
pop
mov
es
stos
in
arpl
mov
jmp
lcall
outsl
inc
push
fdivrl
cwtl
aam
and
mov
push
mov
jge
inc
pusha
seta
cmp
sub
mov
lret
cmp
push
mov
into
movsb
mov
imul
or
in
test
enter
push
sbb
pushf
fs
lock
adc
cmp
cmpsl
or
ds
mov
fwait
add
popf
aam
shrb
loop
jl
push
mov
push
jle
mov
pop
stc
mov
mov
and
mov
xchg
arpl
sarb
mov
mov
mov
in
push
aas
mov
add
push
mov
out
icebp
mov
or
pushl
pushf
jmp
loop
pop
xor
mov
lret
mov
jns
push
and
push
stos
inc
cmpsb
mov
xor
adc
lret
sub
out
pop
sahf
jae
pop
rcll
xlat
jge
fstpt
cmp
stos
les
push
add
xchg
cmc
out
ret
ret
xchg
aad
adc
ss
lds
jmp
push
cltd
faddp
and
sbb
add
mov
sbb
jnp
xlat
add
cmc
dec
adc
popf
mov
or
cmp
insb
push
jbe
mov
or
jb
fcomi
popf
bound
addr16
sub
notb
jmp
ficomps
add
nop
int
add
and
fwait
lcall
sbb
ja
clc
aaa
test
sti
cmp
sbb
or
imul
in
mov
fsubr
sbb
push
push
fsubl
test
adc
adc
mov
ret
mov
jno
subl
pop
dec
les
fisttps
adc
mov
sub
xchg
imul
push
inc
xchg
xor
or
or
mov
cli
jbe
push
xor
mov
loopne
ja
repz
push
push
jno
jmp
icebp
fwait
adc
popf
std
mov
xchg
xor
insl
inc
add
test
or
loope
jmp
jl
and
push
sub
shrl
notl
stos
sbb
mov
fiadds
scas
in
shlb
sub
sub
mov
add
or
push
pop
cmp
push
fdivr
xor
or
in
mov
jbe
xchg
popf
dec
xchg
sbb
adc
js
adc
sub
and
das
sarl
sbbl
jns
adc
test
pop
arpl
cmpsb
adc
int3
aaa
mov
push
ret
adcb
xor
bound
xchg
mov
aam
add
dec
sbb
xor
sbb
lods
mov
or
jne
mov
inc
cmpsb
sub
or
cld
bound
adc
lcall
xchg
sti
and
xlat
cmp
push
sub
sub
hlt
mov
jne
push
add
lcall
cld
push
es
lret
push
sti
nop
mov
mov
subl
inc
icebp
dec
push
pop
sub
out
mov
lahf
fcmovb
pop
stc
inc
div
scas
ss
andl
or
cs
mov
xchg
adcb
push
cld
jecxz
inc
in
mov
adc
mov
and
jl
js
push
fsts
xchg
mov
cs
push
popa
int3
sbb
leave
icebp
cmp
movsb
adc
lods
push
or
fxch
add
pop
aad
mov
mov
adc
mov
hlt
jge
jg
pushf
lock
mov
ss
dec
push
test
sub
jmp
cwtl
and
mov
test
in
int3
sub
inc
les
es
jae
sub
push
xor
in
sub
mov
getsec
out
adc
dec
roll
jne
dec
shrl
scas
enter
lret
roll
mov
jbe
jmp
xchg
cwtl
xchg
jmp
push
in
or
push
bound
inc
mov
adc
js,pn
cmp
add
add
loopne
pop
sub
mov
aad
fwait
es
shlb
mov
jo
decb
mov
subl
ljmp
mov
adc
aas
mov
xor
lock
cs
mov
xor
mov
inc
ljmp
cmp
jae
imul
lods
mov
push
aam
adc
lea
mov
fwait
mov
mov
ret
push
adc
jecxz
fisttps
sahf
and
insl
insl
fs
add
cwtl
lock
lret
xor
mov
rclb
pop
mov
or
adc
out
addl
into
imull
pop
lea
inc
push
test
adc
xor
cmp
push
out
repnz
sub
sbbl
sub
fisttps
sub
dec
adc
lret
push
xor
dec
cmp
call
pop
sbb
je
lock
xlat
aad
push
dec
outsl
xchg
inc
pop
xor
cmp
add
or
pop
adc
je
jg
repnz
ljmp
pop
call
mov
jp
pop
jg
xor
and
sbb
pop
adc
ljmp
cmp
sbb
in
lcall
mov
push
loope
ret
subl
and
mul
push
inc
shlb
cmpsb
pop
sub
add
cld
test
sti
dec
in
or
mov
xchg
cmp
sub
bound
mulb
out
push
mov
or
xchg
sti
sbb
xchg
add
loopne
inc
test
cltd
xchg
add
frstor
out
jae
fcoms
dec
add
dec
fists
mov
popa
mov
je
sbb
push
push
outsl
dec
pop
pushf
and
push
xchg
push
sbb
hlt
aad
and
dec
out
ja
fcomip
out
xchg
fcmovu
testl
push
repnz
iret
inc
aad
repnz
addb
or
shll
dec
xchg
lcall
in
xchg
mov
aas
sbb
enter
insb
lea
icebp
and
ds
aam
or
shll
fsub
in
aaa
fnstcw
in
dec
sbb
std
push
in
or
es
push
sub
ficoms
rep
pop
push
cld
push
jo
pop
xor
jmp
and
inc
rcl
aas
jb
mov
cmp
adc
add
loop
cmp
leave
fistps
push
faddp
mov
js
fisubl
fisubs
xchg
imul
push
js,pt
cwtl
aaa
lahf
mov
sbb
fists
scas
xor
imul
test
inc
pop
pusha
mov
fadds
or
and
cmp
roll
lret
lds
lods
in
adc
int
rol
sub
jecxz
mov
in
xchg
mov
arpl
mov
sbb
ret
ret
insb
sub
push
mov
jbe
popf
adc
sub
popf
cli
js
xchg
cmp
cmpl
xor
sbb
sbb
cmp
loop
jmp
adc
jns
call
mov
cmp
sbb
test
lock
mov
and
or
dec
fsubl
or
fimuls
in
aad
loopne
mov
adc
lods
mov
in
sahf
jno
hlt
mov
in
pop
add
aam
add
push
jmp
jge
std
push
les
mov
pop
pop
xlat
sbb
loop
inc
sub
sbb
hlt
inc
test
div
inc
mov
rcrb
fidivl
mov
lock
jo
mov
xchg
mov
ss
insb
ffreep
sub
sti
pop
in
je
stc
adc
add
int
sub
cmp
mov
outsl
and
cmp
mov
adc
lds
fst
mov
push
push
and
cmp
add
sbb
mov
mov
sti
push
mov
jle
jp
mov
inc
ljmp
pop
xchg
sbb
and
pop
aaa
rolb
jb
inc
movsl
mov
test
cli
dec
dec
mov
cmp
inc
dec
inc
inc
mov
je
outsb
repnz
ficoml
jo
jne
xor
jb
pop
ja
cltd
mov
es
and
idivb
insb
jle
push
sbb
jb
inc
mov
sub
cmp
repz
sub
test
movsl
pop
jo
idivb
call
sbb
and
mov
jge
ljmp
push
cltd
jle
inc
pop
lahf
adc
sub
scas
or
fistps
lock
xor
das
pop
mov
jg
inc
cltd
sub
ds
pop
loopne
fstpt
or
pusha
aas
enter
or
notl
push
icebp
mov
test
out
mov
push
popa
xchg
pop
scas
stos
sbb
sub
roll
add
test
pop
cmp
lcall
adc
lods
sbb
adc
mov
and
insl
mov
sarl
or
jae
sbbl
int3
xor
test
sbb
lods
dec
pushw
xchg
fcomps
mov
not
inc
iret
sbb
cltd
fstl
insl
push
ret
mov
popf
pushf
pop
aas
and
cs
cmp
cmp
out
outsb
jecxz
pushf
sahf
test
sub
imul
stos
je
cmc
idivb
sub
mov
xor
xor
and
push
cmp
jo
mov
leave
push
lock
mov
icebp
push
rcrb
je
jg
hlt
hlt
push
dec
into
ret
ds
mov
add
add
xor
pop
loopne
mov
fildll
dec
lret
push
stos
xchg
sub
adc
pop
fiadds
push
or
adc
pop
ja
imul
mov
sbbl
mov
outsl
dec
pop
in
je
pop
cmp
inc
dec
cmp
scas
and
ljmp
mov
pushf
flds
cltd
mov
inc
push
lcall
iret
adc
icebp
jne
push
pop
movb
mov
adc
lcall
je
mov
cmpsl
inc
or
add
aas
flds
inc
xor
fildl
out
loope
adc
bound
mov
mov
dec
jnp
sbb
adc
lret
es
sub
fsub
fwait
or
sti
or
pusha
roll
sbb
or
call
dec
test
adc
sbb
xchg
aaa
fs
stc
leave
mov
pushf
push
dec
and
pushf
pusha
sub
andb
dec
mov
test
imul
mov
dec
enter
fwait
pop
jl
aaa
mov
inc
pushf
cmp
mov
leave
dec
adc
mov
sbb
int3
or
inc
xchg
stos
clc
and
test
pop
adc
int
in
ds
pop
xor
cmc
dec
mov
shll
cltd
cmpsl
adc
fwait
push
inc
ds
enter
xchg
jne
jmp
int3
gs
fsubrl
push
or
xor
std
sub
jnp
push
jno
and
jne
sbb
and
daa
adc
insl
and
pushf
les
pop
scas
mov
sahf
and
inc
loope
xor
cs
jns
mov
in
enter
sbb
add
push
jnp
pop
dec
xor
mov
dec
dec
insl
shlb
shlb
outsl
insl
add
mov
dec
mov
rorb
mov
push
lret
sbb
insl
pop
test
xlat
mov
nop
adc
test
ja
or
mov
lds
and
js
pop
dec
or
mov
insl
pop
fs
loopne
jl
jb
push
aaa
test
pop
push
sbb
unpckhps
mov
push
sub
in
cmpsb
xchg
fdivl
push
jmp
jno
out
ja
in
sbb
pop
mov
mov
mov
pop
cs
test
out
adcb
cmp
out
xor
push
mov
lods
push
jge
cmp
dec
adc
mov
pop
adc
pop
aad
mov
add
js
dec
imul
jle
xchg
fwait
pop
adc
imul
das
cmp
mov
jo
mov
aaa
mov
mov
cs
cli
lds
xchg
test
pop
mov
nop
inc
sbb
cli
xchg
test
add
push
pop
inc
push
movsl
pop
mov
fwait
inc
cs
xor
scas
lods
cmp
push
mov
sbb
cmp
mov
adc
push
repnz
push
pop
in
cmpsl
mov
ja
push
pop
shll
into
jge
cld
xor
rcr
lock
iret
inc
ds
xlat
dec
js
aaa
xchg
xchg
add
jno
mov
jecxz
orl
shr
xchg
mov
add
jae
dec
mov
jp
aaa
popf
in
outsb
push
push
mov
dec
adc
or
sub
mov
shlb
lds
or
mov
inc
cli
sti
add
inc
or
add
fs
sub
je
mov
lea
bound
mov
insl
push
add
and
push
inc
into
xor
jmp
ror
dec
jno
jecxz
mov
lock
pop
ret
lock
sbb
in
jle
pop
cltd
jecxz
or
test
stos
sbb
mov
mov
add
outsb
mov
cmp
mov
push
nop
xchg
repz
scas
les
add
xor
ret
add
es
and
ljmp
loope
sbb
in
pop
xor
sahf
jmp
fistpl
popa
rcrl
les
js
cmpsb
dec
add
push
mov
aas
insl
out
lea
push
xor
inc
push
and
inc
ss
in
add
cmpb
lret
iret
add
push
or
mov
inc
sub
sti
in
fbld
into
mov
scas
xchg
adc
sahf
inc
inc
loopne
push
and
push
lcall
mull
lea
push
fidivrs
out
cld
fs
lret
into
inc
pop
ss
lret
imul
cwtl
leave
mov
jmp
jp
jecxz
das
jecxz
cmpsb
or
rcl
push
mov
jl
jg
xchg
dec
dec
aam
pop
xchg
push
loopne
fst
dec
rorb
aam
ss
mov
divl
push
inc
popf
jp
test
notb
std
push
jecxz
xor
mov
adc
stos
out
fisttpll
xorb
mov
lahf
es
cmp
push
out
inc
mov
jns
gs
xor
flds
cs
notb
sbb
fsubrs
jno
pop
pop
sbb
sub
mov
or
ss
mov
adc
fst
ja
test
sarb
dec
movsl
mov
in
or
mov
jne
add
ret
inc
push
dec
fidivrs
mov
inc
xor
sbb
mov
lds
pop
int
mov
xlat
jle
outsb
pop
das
mov
pop
mov
push
cli
dec
sub
push
xchg
test
in
scas
jnp
shrl
aaa
cs
loop
and
in
xchg
gs
or
sub
sbbb
and
add
push
cmpsb
push
jge
insb
pop
lret
pusha
insl
fwait
push
sbb
xchg
fdivrl
fidivrl
cltd
pushl
xchg
icebp
push
push
insb
lods
sbb
test
and
mov
jns
imul
cli
add
clc
or
mov
lock
enter
cmp
pop
add
lretw
pop
add
das
int3
hlt
mov
cmpb
cld
push
cmp
pop
call
out
pop
cwtl
js
or
test
pop
xor
add
sub
sarb
mov
inc
je
sub
sub
frstor
aaa
pop
inc
in
test
out
mov
dec
icebp
rorl
notb
shrl
and
xor
and
dec
fstpt
cmp
arpl
mov
fadds
imul
jmp
pop
sti
sahf
sub
ret
adc
mov
imul
pop
inc
mov
sub
repnz
mov
and
pop
push
int
mov
xlat
adc
cmpsl
sub
xor
pop
sub
int3
lds
adc
push
lea
and
sbb
adc
test
js
inc
jbe
pop
xchg
orb
sub
dec
sub
in
das
push
mov
push
jnp
lcall
mov
mov
insl
push
outsl
jle
arpl
sbb
leave
js
imull
mov
mov
out
test
fisttpl
outsb
mov
mov
lret
movsb
push
xchg
aad
adcl
sub
inc
test
jnp
push
push
add
inc
notb
and
ljmp
push
jno
fnstcw
pop
jo
and
push
inc
data16
jb
sub
mov
arpl
shr
test
and
insl
push
popf
dec
mov
add
loopne
sbb
adc
cmp
xor
mov
pop
int
jne
in
xor
test
mov
inc
xlat
cmp
lds
repnz
lea
lea
push
std
bound
mov
jae
pop
stos
cmp
push
jb
loopne
push
lcall
xchg
popf
mov
xlat
pop
out
mov
cld
inc
sbb
mov
mov
dec
inc
xor
cvttps2pi
rcll
sti
mov
repz
sbb
stos
xor
pop
dec
loope
push
sub
mov
stos
xchg
xchg
orl
mov
fidivl
ss
adc
fwait
shlb
les
fwait
adc
scas
jae
xorb
cmp
dec
jle
dec
ds
sub
loop
test
in
mov
mov
adc
mov
jne
cmp
jbe
dec
and
int
lods
adc
jno
jb
int
dec
lds
clc
and
xor
add
lret
jl
ss
ret
jmp
xor
data16
in
jno
push
mov
jmp
shr
push
pop
nop
inc
int
lods
jo
xchg
mov
jecxz
jle
mov
aas
adc
xchg
push
jnp
lret
jl
mov
clc
sbb
sbb
inc
xchg
cmp
ja
mov
iret
mov
outsl
or
jmp
dec
push
mov
inc
dec
add
pop
enter
xchg
xchg
insl
outsb
insb
shll
int3
jno
popa
add
push
iret
jne
iret
dec
js
mov
ret
ljmp
sbb
jge
imul
xlat
pop
loop
jecxz
arpl
inc
push
lods
push
rcr
mov
in
stc
insb
cmp
ds
je
add
or
gs
enter
inc
aam
outsl
js
gs
mov
in
inc
out
mov
jo
clc
aaa
add
jle
mov
out
adc
in
testb
in
les
mov
lret
data16
iret
inc
out
jns
push
pushf
and
scas
sbb
add
jne
cmpsb
repz
mov
testl
and
scas
xlat
mov
mov
repnz
jg
jl
inc
jae
fldenv
out
xor
pop
inc
es
sub
sarb
pop
lods
in
daa
fidivrl
stos
fs
stc
inc
xor
popl
out
mov
inc
aaa
adc
xor
adc
adc
adc
xlat
xor
mov
sub
add
and
dec
ret
push
inc
lock
aam
add
adc
sarl
inc
push
xchg
loop
cmpl
mulb
add
loope
pop
in
clc
mov
sub
pop
ficomps
push
cmp
mov
mov
push
pop
dec
xor
pop
mov
inc
int
push
fs
pop
and
lret
imul
les
sbb
or
cwtl
xor
aas
dec
outsl
out
loop
movsb
repz
lret
xor
scas
notl
sbb
mov
or
dec
cmpsl
xchg
movb
xor
cmp
jb
daa
imul
in
xor
push
pop
pop
popf
cmp
xlat
inc
cmp
data16
mov
cs
popf
xchg
sub
cwtl
loop
sbb
mov
shlb
popf
negl
mov
jp
cmc
or
pop
push
aad
repz
test
jne
xor
divps
mov
or
inc
repnz
pop
stc
addr16
mov
dec
movsb
hlt
dec
mov
in
adc
loop
ds
jo
test
lret
add
jae
in
mov
lahf
aad
xchg
loop
ljmp
cmpsb
imul
pop
movsb
out
mov
in
loope
scas
popa
lret
shlb
cmpsl
jo
cmp
ud0
and
mov
sub
add
mov
repz
push
cmpb
pop
repnz
mov
adc
out
es
rcrl
mov
out
cmp
stos
lcall
aad
adcl
ret
push
insl
push
or
mov
test
repz
lcall
sub
popf
ret
call
fcompl
sub
cmp
inc
sbb
mov
mov
sub
mov
cli
push
and
mov
push
test
out
inc
stos
in
mov
dec
cmpl
jnp
stos
cltd
sbb
add
mov
aas
mov
rep
adc
fs
push
pop
test
lret
add
aam
pop
mov
les
pop
jb
sub
xor
pop
lock
sbb
cld
jg
mov
icebp
sub
or
sar
insl
push
pop
mov
pop
mulb
fyl2xp1
bound
lahf
mov
clc
shll
addr16
ja
jne
aad
or
or
movsb
sahf
pop
mov
pop
repnz
xchg
loop
and
cmc
push
shll
insb
mov
rorl
decb
cltd
test
ret
in
movsb
sbb
mov
lock
xchg
cmp
jg
sarl
xor
stos
sub
mov
cmpsb
in
cmpl
das
sub
dec
jnp
inc
jge
push
repnz
xlat
int3
enter
mov
mov
rorl
das
dec
dec
adc
idivb
pop
pop
mov
add
mov
shr
xor
xor
or
sub
mov
movsb
jb
ljmp
add
pop
filds
fwait
data16
add
das
cmp
nop
fidivrl
lret
insl
adcb
or
imul
inc
add
jnp
dec
adc
xor
or
mov
push
das
dec
jno
inc
loopne
lcall
cltd
inc
dec
or
mov
jns
jl
pop
adc
pop
or
push
or
adc
aaa
and
gs
pop
test
or
aad
cmp
mov
fld
out
outsl
insb
mov
and
fmuls
xor
scas
js
imul
pushf
scas
loop
inc
cmp
dec
outsb
rcll
push
out
push
dec
out
in
dec
adc
imul
xchg
rclb
ds
dec
dec
icebp
add
mov
jmp
mov
lcall
into
test
ret
jo
pushf
and
or
lcall
jo
adc
rcrb
pop
jo
mov
add
daa
sub
in
cld
fldcw
das
rol
xchg
or
std
ss
cmpsl
dec
orl
fwait
imul
inc
sub
add
mov
xchg
data16
inc
lahf
push
iret
sub
cmp
push
sahf
inc
fbld
mov
insl
pusha
adcl
adcb
jge
or
add
out
cmpsl
dec
icebp
mov
cs
int
mov
aaa
or
inc
mov
jp
movsb
add
mov
mov
push
and
dec
orb
sbb
add
push
mov
std
inc
ds
sub
cwtl
mov
sub
pop
or
dec
mov
jge
sub
inc
inc
fistl
pop
pop
insl
inc
cwtl
jns
shrl
test
sti
fcom
mov
mov
rolb
daa
jne
jns
mov
je
scas
test
push
fs
mov
mov
frstor
cmc
outsb
mov
push
cwtl
in
sub
mov
addr16
fxch
mov
mov
in
xor
pop
sub
pop
mov
add
mov
xor
data16
push
lret
sub
cmpsl
decl
push
fs
aaa
dec
xchg
adc
adcb
cmp
mov
aad
enter
xchg
mov
push
sbb
arpl
dec
add
adc
popf
negb
iret
stos
add
xchg
addr16
repz
out
mov
std
pop
pusha
popf
js
inc
lds
cmpsb
push
jmp
mov
and
sbb
or
push
nop
jno
sbb
popf
test
lods
lds
cmpsl
xor
mov
and
shrl
pusha
xor
fstl
mov
rcl
shrb
pushf
cld
push
lods
outsb
dec
dec
fisttpll
scas
xchg
mov
aam
inc
fistps
push
xchg
sbb
fldt
and
and
adc
in
imul
xcrypt-cbc
cmpsl
push
test
pop
testl
lds
pop
cltd
loope
stos
xlat
sbb
out
push
mov
xorl
xor
jg
dec
lcall
stc
cld
pushf
ljmp
sub
ja
jns
mov
mov
mov
mov
daa
pop
jbe
nop
pop
fst
jo
je
icebp
xor
outsl
push
push
or
mov
sub
mov
iret
and
popa
call
cli
dec
leave
fwait
mov
fisttpl
sub
lahf
add
sub
pop
cmp
enter
incl
daa
push
loopne
int3
imulb
pop
bts
in
adcb
cmp
sub
nop
mov
mov
jne
call
arpl
hlt
hlt
cs
xchg
lods
repz
shlb
ret
aas
cmp
movsl
stc
sub
inc
stos
les
mov
mov
addb
push
pop
mov
rorl
aam
repnz
cmp
dec
or
mov
mov
lcall
hlt
shlb
and
mov
sbb
mov
mov
rolb
pop
in
and
push
or
movsb
push
out
lea
mov
jbe
xor
mov
les
jmp
sbb
cld
stc
add
in
cmp
mov
pusha
sbb
jno
inc
and
mov
push
push
or
push
imul
pop
scas
cmpsl
in
shll
dec
mov
push
inc
push
jae
inc
out
xchg
scas
pushf
enter
xchg
inc
mov
fs
mov
in
test
mov
sub
cmpl
push
nop
jmp
and
dec
cmpsb
cmp
sub
scas
pop
push
fnstenv
dec
scas
mov
adc
sub
mov
into
jo
ja
mov
inc
out
pop
aas
dec
and
mov
mov
mov
sub
jecxz
arpl
inc
sbb
fdivl
cmp
dec
js
xor
jbe
fst
mov
rolb
sub
dec
mov
sbb
add
mov
je
in
jmp
out
fld
cmp
test
repnz
add
xor
es
mov
xorb
fisubrl
sbb
jno
xchg
xchg
enter
shll
mov
or
fstl
dec
outsl
lret
js
add
hlt
les
mov
cmp
push
jg
inc
cmp
pop
out
ret
je
lods
sbbl
icebp
push
ss
outsl
cltd
je
mov
mov
loopne
fisttpll
dec
loop
adc
rorl
add
and
inc
test
clc
inc
movsb
inc
mov
shlb
sbb
ds
in
inc
sub
xchg
sbb
lock
mov
jl
jge
jae
pop
jnp
test
cli
or
xor
mov
and
dec
cli
sbb
cltd
mov
jno
mov
scas
lea
jle
dec
ret
test
sub
pop
mov
jmp
loopne
jg
jmp
in
popa
insl
sub
jb
push
cmpsb
arpl
loop
ss
into
pop
stos
rcrl
testb
jg
mov
mov
sbb
mov
fwait
xchg
mov
push
jno
popa
insb
inc
out
xchg
mov
icebp
enter
inc
push
repz
fistps
add
pop
inc
mov
andl
pop
rcl
adc
jmp
pop
mov
mov
cli
daa
in
pusha
sbb
add
jo
insb
fwait
ljmp
clc
mov
test
lret
insl
cmp
fucom
push
xchg
push
cltd
int
cwtl
adc
fdivrp
xor
mov
das
loop
pop
pop
add
sub
sbbl
and
mov
pop
out
jo
xor
mov
mov
xchg
and
xor
imul
mov
subb
pushf
jle
pop
inc
mov
lock
scas
push
fcompl
sub
ja
jmp
jmp
push
aaa
in
jo
ret
ja
fnsave
xchg
insl
xchg
aam
je
pushf
add
fidivl
pop
test
out
sub
clc
dec
add
xor
and
je
daa
inc
ds
incl
jns
push
popa
push
jb
clc
roll
mov
and
rsm
xor
movsb
jl
cltd
aas
in
jae
mov
pop
std
sub
xchg
lock
arpl
push
cmpsl
push
roll
mov
xchg
jmp
jbe
test
adc
cmc
mov
adc
cmp
mov
sbb
sbb
cmp
test
mov
bound
mov
loopne
mov
std
mov
cltd
mov
rcl
outsl
fadd
cmp
push
or
xor
cmpsb
aas
mov
adc
rol
andl
xor
adcb
mov
mov
ret
dec
mov
push
sub
mov
push
iret
pop
cwtl
cmp
mov
dec
cmp
jecxz
test
in
and
pop
xchg
add
ljmp
and
mov
lahf
and
xchg
hlt
pop
push
fdivl
push
cmp
ss
sahf
shlb
jns
cltd
xchg
shlb
ret
cmpsb
mov
mov
jno
dec
imul
cmp
or
lods
dec
addr16
add
rorl
push
xchg
mov
adc
pop
push
scas
les
push
stos
mov
out
lret
dec
outsl
jns
mov
mov
fdivrs
sti
xchg
shrl
or
xchg
int
pusha
dec
int
push
lods
cmpsb
aas
and
les
sub
loope
mov
or
ret
out
or
out
je
sub
cltd
ss
popl
mov
mov
rorb
sbb
lcall
inc
pop
push
lea
scas
sarl
mov
mov
roll
xor
iret
xchg
es
call
pop
mov
shr
sti
xor
negl
mov
add
pop
sti
out
cmp
ret
in
imul
in
fxch
repz
je
push
mov
and
inc
ds
fs
add
lahf
faddl
ret
stos
mov
jne
imul
jecxz
add
dec
or
cmp
mov
stos
adc
xor
test
imull
sarb
jl
xchg
leave
fcompl
cltd
ss
rol
jmp
inc
inc
imul
xchg
mov
inc
mov
and
xlat
roll
sub
or
xchg
addr16
popa
push
sub
sbb
ds
inc
pop
sub
inc
out
mov
xchg
inc
sub
inc
daa
int
push
lea
in
scas
and
vmwrite
mov
mov
test
mov
add
scas
push
add
pop
mov
mov
subl
xlat
int3
jg
jge
xchg
pop
scas
repnz
xchg
xchg
imul
shl
aaa
xchg
push
sub
cmpsl
sub
andb
sub
mov
and
aam
xor
dec
adc
sarb
push
add
adc
mov
lret
xchg
mov
mov
ljmp
stos
adc
xor
adc
adcl
mov
jo
cmp
adc
inc
pop
pop
mov
or
addr16
xor
imul
aaa
inc
add
pop
negb
movsb
and
or
and
std
fmull
arpl
mov
pop
cmp
orl
in
int
adc
movsb
jmp
mov
dec
mov
enter
mov
add
push
or
mov
cmp
or
or
loop
sub
adc
and
sahf
xchg
or
out
mov
stc
jge
sub
outsb
fs
pop
sub
inc
idivl
push
xor
add
mov
or
mov
mov
mov
adc
fldl
mov
add
cwtl
inc
scas
mov
sbb
sbb
out
jb
xchg
ja
push
fimuls
rorb
xor
xchg
xor
pop
cmp
pusha
mov
jo
shrl
fimuls
jge
pop
aaa
imul
sbb
imul
xchg
leave
in
jle
and
xchg
pop
fsubs
jnp
mov
pop
add
or
shlb
mov
pop
and
aam
aad
push
imul
xor
ficoms
dec
xor
int3
mov
scas
xchg
repz
outsl
sbb
out
scas
push
and
jmp
repz
fwait
sub
push
imul
fimull
leave
jo
sub
xchg
aas
in
and
add
xchg
js
scas
movsl
rol
btc
push
jmp
std
dec
dec
popf
xor
das
testl
nop
aam
cmp
jp
rdtsc
mov
shll
or
jo
sbb
and
or
mov
xor
ja
jge
push
in
ss
inc
call
dec
in
es
in
mov
mov
ljmp
les
pop
repz
or
xchg
out
or
xor
sarl
repz
icebp
jne
jb
xchg
andl
adc
mov
dec
icebp
scas
add
outsb
cld
clc
in
dec
lds
push
lahf
movsb
clc
ret
out
sub
std
and
mov
out
std
sbb
mov
mov
add
in
aam
cli
mov
pusha
rorl
cmp
and
in
iret
sbbb
outsl
mov
sbb
push
cld
sub
jno
gs
xor
xor
lds
xlat
ret
cmp
xchg
loop
cs
inc
mov
out
cmpsb
pusha
mov
sub
xor
mov
movsl
jno
xchg
sub
stc
inc
push
enter
mov
fimull
sahf
fnstsw
mov
cmp
adc
aas
or
cmpsl
rorb
sbb
fnstenv
push
leave
fnstcw
adc
movsl
mov
ljmp
push
fdecstp
mov
cmpsb
sub
xchg
pop
add
fstpl
sub
mov
adc
and
pop
out
dec
jae
xchg
mov
int
call
mov
notb
jl
stos
js
dec
loopne
jg
pop
out
mov
div
push
xchg
ljmp
orb
je
jno
jne
xchg
sub
fdivl
loop
aam
push
mov
setge
jbe
inc
push
cmp
imulb
jne
adc
outsb
inc
mov
and
mov
scas
movsl
lock
mov
mov
push
out
sti
in
cmpsb
cmp
mov
mov
inc
jg
fwait
iret
test
dec
sub
mov
cmpsb
add
loopne
dec
jmp
es
push
stos
xor
add
or
pusha
andb
push
in
mov
xchg
repnz
xor
lea
cld
cld
push
fdivr
dec
jbe
jno
inc
jp
push
mov
inc
repnz
fsubs
test
sbb
out
or
cwtl
and
dec
das
adc
mov
std
stc
lahf
sbb
mov
or
push
sbb
mov
add
hlt
mov
dec
jg
aam
cmovg
sub
stos
pop
jb
movsb
rol
cmc
loop
fs
mov
jl
test
push
or
ret
fwait
or
sub
cmp
jle
push
mov
insb
dec
imul
add
cmp
push
jo
xor
lods
add
sbb
outsl
mov
popf
mov
stos
les
push
pop
cmp
movsl
aaa
xor
mov
mov
jle
clc
and
adc
sbb
push
jle
addr16
mov
pop
xchg
push
je
sub
mov
jnp
in
push
xor
es
or
jo
or
cmpsl
outsl
stos
push
cltd
jmp
mov
cwtl
imul
lahf
mov
lret
outsb
imul
sahf
xor
fdivl
scas
inc
aaa
xor
test
xor
adc
ja
adc
jb
rcrb
cs
out
xor
add
mov
fwait
xor
mov
xor
jae
in
call
jecxz
xor
fucomi
rclb
mov
movsl
inc
xchg
in
mov
fwait
popf
push
inc
sbb
mov
sub
jbe
mov
jecxz
loop
mov
jge
cmc
sub
mov
sbb
or
mov
stos
js
sbb
aam
or
adc
ja
es
adcb
call
jle
dec
mov
push
pop
hlt
mov
push
sbb
fists
pop
dec
pop
push
gs
lods
ss
idivl
idiv
cmpl
sbb
mov
aad
pop
mov
ret
mov
out
aas
or
fistps
xor
cmc
popf
fldenv
out
push
cs
mov
inc
sub
mov
mov
jbe
das
and
fcomi
and
mov
movsl
sub
sub
mov
push
aaa
jl
xchg
jp
ret
xchg
push
mov
aam
imul
in
xchg
mov
lret
test
mov
aad
test
std
mov
cmp
sbb
or
jb
sbb
dec
pop
pop
das
adc
jne
dec
pop
inc
mov
lods
sbb
fdiv
test
daa
sub
popf
cmp
xor
adc
mov
add
and
pop
adc
aaa
mov
mov
scas
sub
sbb
setg
sub
pop
mov
push
iret
mov
push
or
add
cmp
icebp
lods
cmpsb
xchg
push
out
jecxz
loopne
jecxz
clc
add
pop
lret
call
add
push
movsb
inc
dec
jb
and
mov
and
push
xor
inc
or
daa
adc
pop
loopne
popf
addr16
sub
push
popf
xchg
dec
xchg
add
dec
sbb
mov
data16
int3
aas
jae
movsb
jnp
dec
add
mov
mov
stos
test
lock
mov
call
jns
ljmp
add
js
cltd
stos
mov
push
imul
cs
mov
jae
cmpsl
sub
cli
add
mov
stos
stos
push
pop
cmp
adc
xlat
push
xchg
mov
fwait
cmp
push
fildll
adc
aam
push
add
or
cmpsl
ds
sub
adc
cltd
test
mov
jmp
dec
pop
add
cmp
pop
push
int
mov
push
ljmp
test
mov
fsubrp
rorl
jle
in
inc
mov
fcoml
pop
rorl
adc
std
lods
scas
mov
out
mov
xor
daa
outsl
xor
aas
icebp
pop
std
mov
cmp
test
add
sti
fimull
pop
sub
sbb
mov
cwtl
mov
lds
push
fwait
xor
fadd
cmp
xor
xor
push
push
and
stos
jo
call
inc
dec
aaa
xlat
bound
xor
stos
push
leave
or
les
rcr
pop
push
push
push
stos
testb
das
sbb
add
add
or
in
push
insb
in
std
jle
jb
adc
jno
lret
xchg
jecxz
aaa
shrb
xor
xchg
repnz
int
lds
jb
or
inc
pop
or
andb
jbe
jb
movsb
sub
jl
es
jmp
mov
fmuls
cmp
push
test
outsb
int
outsl
in
or
and
ja
push
mov
push
int
mov
xlat
dec
mov
jns
test
shll
xchg
ljmp
aad
ja
outsb
xor
or
xor
jb
mov
push
dec
and
xchg
xor
imul
out
cmp
mov
dec
jge
mov
jl
neg
out
add
mov
jmp
inc
dec
mov
dec
cmp
pop
push
sub
sbb
mov
sarl
mov
inc
sbb
xchg
in
mov
rcl
mov
xor
mov
mov
repz
push
cmc
sbb
fsubl
cmp
mov
push
pop
pop
test
or
lds
pop
data16
mov
and
or
lods
loopne
add
in
cwtl
ficoms
sub
arpl
xor
mov
inc
push
cmpsb
les
lcall
out
and
les
gs
loope
cmp
insl
push
mov
cltd
ret
cmc
cmpsb
test
inc
cmpl
cmpb
pop
sbb
adc
aad
pop
mulb
notb
sub
inc
mov
fcmovnbe
xchg
mov
hlt
mov
cmp
jl
add
inc
dec
insb
push
adc
adc
lret
repnz
imul
das
testb
ljmp
xchg
sub
enter
sbb
add
ret
dec
int
sbb
add
push
leave
outsl
mov
lcall
ret
lret
mov
es
mov
push
out
jle
vmwrite
inc
add
fs
daa
daa
mov
dec
cld
mov
pushf
fmul
adc
mov
pop
xchg
mov
sub
adc
or
js
shlb
adc
das
adc
or
bnd
mov
test
and
add
pop
int
fs
inc
in
xor
and
mov
outsl
mov
pop
je
dec
ds
xor
mov
cltd
jle
xlat
ljmp
push
mov
cwtl
or
jle
out
stc
jp
mov
movsl
or
cs
add
push
in
daa
ja
imul
xchg
jle
adc
cmpsl
mov
push
sahf
aad
fdivrs
dec
sbbb
push
in
dec
sbb
xchg
scas
leave
and
aad
adc
xchg
scas
mov
pop
mov
xor
jl
ljmp
ror
pushf
out
loopne
mov
jnp
jns
inc
std
dec
adc
xchg
jmp
jnp
xchg
push
cmp
data16
imul
lret
out
mov
cld
lods
and
scas
push
xlat
mov
push
cwtl
jg
pop
loop
jecxz
lods
sbb
mov
imul
adc
sub
or
mov
mov
int3
lcall
xor
xchg
jbe
adc
jle
arpl
xchg
aaa
adc
cmpsb
xor
xor
mov
rclb
mov
test
pop
push
insb
add
leave
cmp
and
pop
mov
push
outsl
jge
mov
push
out
test
xchg
in
and
lds
ja
lret
xor
push
pop
lret
mov
sub
lds
call
sbb
bnd
xor
mov
stc
push
adc
push
shrb
push
or
test
push
inc
mov
sub
inc
stos
cld
mov
orl
pop
push
and
jb
mov
cmpl
subps
jnp
mov
and
lcall
xchg
lods
outsl
adc
mov
pop
mov
ds
mov
decl
je
stos
xor
out
mov
xor
jmp
jns
rclb
cmovnp
xor
pop
cld
ret
mov
sahf
mov
cli
adcb
sub
gs
cmpsl
das
andl
cmp
fs
pop
jmp
cmp
jecxz
jae
aad
das
imul
push
mov
lret
call
aaa
jbe
pop
rcl
iret
insl
shlb
sbb
push
jge
aaa
or
stos
cwtl
push
sub
icebp
xor
mov
add
mov
jbe
and
hlt
daa
inc
in
orl
test
xchg
mov
cmp
mov
jne,pt
xchg
addr16
cmpsl
jae
push
jo
xor
mov
mov
roll
testl
push
add
es
out
adc
scas
jns
sub
pop
mov
dec
in
or
jle
lods
xor
cmpb
into
cmp
mov
orl
jecxz
adc
enter
aas
xchg
popa
and
movsb
ds
lret
or
ljmp
movsl
or
ret
pop
xor
and
rclb
mov
ds
or
push
inc
sahf
fsubl
es
xor
sub
push
fistpl
pop
stc
in
movsb
mov
xchg
xchg
stos
in
xchg
add
push
movsl
in
movsb
sarb
or
cwtl
dec
and
add
push
adc
jle
imul
add
add
jns
push
mov
dec
lods
sti
mov
and
aas
xor
xor
cmc
aad
mov
dec
jnp
shrl
out
add
inc
or
jmp
or
or
fucomip
jae
or
fidivs
inc
inc
int3
mov
bound
jecxz
sub
push
orb
dec
shll
mov
mov
lods
call
ficompl
mov
or
jle
std
push
adc
adc
es
xlat
fnstsw
lahf
push
sub
cwtl
push
dec
enter
aas
mov
pop
cmpsl
cmpsb
or
scas
mov
inc
jp
cmp
and
mov
cwtl
sbb
stc
dec
cltd
or
xchg
shlb
imull
out
stos
imul
cmp
fs
sbbl
xorb
push
fsubs
in
inc
and
cltd
shrb
jecxz
shrl
mov
loop
es
push
enter
jne
pop
adc
je
mov
out
mov
ret
ss
bound
mov
aas
mov
push
sub
pusha
dec
mov
adc
hlt
in
shll
popa
lret
sbb
or
inc
shlb
jno
add
sbb
pop
jae
mov
cli
push
xchg
dec
sub
pop
call
fmuls
scas
sub
and
sbb
mov
std
pop
into
mov
and
cmp
fstpt
push
out
jno
insl
movsl
leave
pushf
shlb
inc
shrb
test
xchg
add
mov
push
clc
fildl
sbb
in
xchg
sub
pushf
mov
xor
jp
jbe
aad
rcrb
and
mov
adcb
je
fiaddl
mov
imul
cli
ret
adc
cmpsl
inc
pop
and
mov
push
arpl
mov
cs
jmp
mov
sbb
mov
xlat
fnstcw
and
jmp
xchg
fdivl
ret
cmpsb
sbb
fsubr
ret
add
pop
cmp
incl
popf
inc
rol
xchg
adc
aaa
sub
lcall
out
jp
mov
int3
pop
and
dec
cmpsl
mov
ret
mov
fs
divb
and
pop
das
scas
in
out
gs
or
insl
ficoms
inc
push
pop
lret
cmc
sub
adc
add
or
sahf
inc
pushl
jno
daa
jecxz
call
imul
add
mov
in
decb
xchg
jns
in
aas
jge
cld
lock
sub
test
and
ror
ljmp
jno
fsubs
fldl
and
mov
dec
in
getsec
ficompl
test
sbb
jmp
mov
mov
out
loopne
insb
and
mov
shll
pop
and
xor
inc
int
push
repnz
aas
sarl
fcomps
orb
dec
adc
inc
adc
cmp
xchg
mov
out
dec
imull
and
jae
jmp
int3
bound
outsb
cmp
jge
cld
push
sub
ss
dec
sbb
movsl
adc
cmp
ret
outsl
or
outsb
fidivrs
jmp
stc
mov
jge
in
shlb
inc
adc
fstl
les
mov
adc
inc
shll
inc
cmp
push
sub
imul
xchg
idivb
cmc
jp
jne
int
out
cmc
adc
lret
out
cs
lcall
cmp
push
fmulp
sub
arpl
imul
and
sbb
lods
ret
daa
push
add
xor
push
shrl
das
push
cmp
cmpb
xlat
movsl
cmp
jbe
pop
nop
push
jmp
and
scas
mov
sbb
adc
fsubrs
push
aam
push
mov
mov
nop
addl
or
sti
cmp
scas
icebp
cmp
cli
ja
adc
ret
hlt
clc
add
in
push
sub
mov
mov
ljmp
dec
or
clc
cs
mov
js
sti
push
sub
sbb
icebp
ror
inc
mov
adc
push
push
pop
fdivrl
loope
sbb
sbb
xchg
and
dec
xchg
dec
es
xchg
and
mov
insl
and
fwait
daa
out
das
lret
ljmp
hlt
add
mov
adc
int
cltd
inc
jmp
cli
fwait
inc
mov
xor
inc
adc
mov
popa
pop
cmp
call
mov
addr16
or
mov
push
aam
inc
lret
rcl
xor
aam
mov
pop
push
cmpsl
xor
and
mov
mov
pop
sub
popf
inc
dec
arpl
mov
enter
addl
sahf
or
orb
push
xchg
sub
mov
mov
pop
push
ret
or
add
addr16
sub
fmulp
mov
pop
cmpsb
jne
loope
mov
mov
sarb
push
cmp
mov
mov
push
lods
cmp
xor
add
xor
arpl
adc
imul
jns
add
push
test
jb
into
jg
sub
dec
or
pop
pushf
roll
xchg
cld
add
mov
ljmp
jle
scas
lret
call
mov
add
mov
js
in
adc
and
pop
cli
and
inc
mov
adc
lock
fdivrl
int3
mov
mov
stc
push
xchg
mov
les
xor
mov
mov
or
dec
and
pop
inc
or
loopne
cltd
cli
adc
andl
aaa
aas
movsl
xorb
or
bound
dec
loop
inc
sub
test
xchg
test
pop
push
mov
xorl
add
imul
fisubrs
adc
mov
xchg
mov
ja
jo
inc
or
xor
dec
and
repz
loope
out
push
xchg
inc
pop
cmp
stc
jl
mov
sub
dec
fildll
dec
stc
adc
mov
xchg
push
adc
push
into
int3
imul
jbe
mov
mov
mov
mov
and
fimull
jnp
sub
jb
in
lsl
lods
popa
out
fistl
inc
adc
sub
int3
xchg
bt
inc
ljmp
and
decb
insb
int
xor
movsl
outsb
mov
dec
pop
mov
daa
cmp
sub
or
push
ja
negl
inc
ds
mov
push
add
lock
push
and
lret
std
outsl
fs
or
mov
push
and
aas
ss
cwtl
push
in
inc
loopne
jge
xlat
test
iret
insl
push
xchg
sbb
jnp
jbe
push
test
mov
add
loopne
jno
arpl
rclb
pop
mul
scas
fcoml
pop
mov
test
xchg
xchg
aad
xor
gs
sahf
data16
outsb
js
pop
sub
int3
into
in
xor
shlb
aaa
mov
mov
lock
and
add
mov
ja
cmp
and
scas
xor
cli
mov
push
shlb
xchg
ror
enter
cltd
adc
shrb
stos
xor
cmp
sbb
popf
inc
in
dec
xchg
in
cmpsb
std
mov
sti
sub
push
inc
cltd
nop
cmp
inc
sbb
je
dec
pop
out
mov
push
push
dec
cmp
add
call
test
sub
and
and
mov
test
jle
jbe
mov
xchg
imul
jp
lods
enter
js
cmp
inc
jns
les
movsb
sbb
subl
cld
loope
mov
mov
fmuls
adcb
rclb
cmc
test
mov
add
insb
mov
xchg
insl
fwait
cmpsb
frstor
popa
sbb
jge
sub
ror
or
mov
push
idivw
scas
dec
sub
xchg
cmpsl
sar
hlt
pop
notb
test
lds
in
xor
mov
fldl
add
or
sbb
std
cmc
icebp
xor
and
dec
mov
adc
pop
xchg
mov
stc
push
mov
out
ljmp
ret
adc
jnp
test
mov
inc
shrl
jno
cmova
jmp
jge
dec
sbb
fcoms
dec
push
or
add
push
pop
mov
fdivrs
pop
pop
stc
xor
mov
out
inc
sub
xchg
mov
roll
ja
adc
xchg
xor
fisubrs
pusha
cmp
aam
mov
cli
in
repz
jg
or
sub
xchg
mov
mov
sub
push
ljmp
dec
fnstcw
xor
add
fsubs
cmp
add
push
sub
jmp
notb
adc
arpl
jmp
mov
loope
outsb
ret
fsubrs
xchg
ret
lods
rolb
jno
aam
push
jecxz
or
mov
push
jl
ja
xchg
lret
xor
mov
jl
cmp
push
cs
xorb
decl
fbstp
push
stc
aad
inc
in
mov
fldcw
add
int3
sbb
push
xor
leave
xchg
mov
int
ljmp
jmp
stc
inc
sar
ljmp
stos
mov
mov
or
aad
stos
test
push
popa
sbb
popf
jns
adc
cmp
dec
cmpsb
jns
push
xchg
shll
adc
mov
movsl
mov
xchg
clc
mov
inc
push
push
pop
int
into
fsubrs
xchg
ss
push
js
hlt
adc
xor
adc
ljmp
adc
xchg
es
repnz
jno
pushf
dec
ror
negl
sbb
ljmp
mov
mov
xor
cmp
push
fwait
jne
call
shl
adc
sub
and
dec
push
fsubrs
jb
add
dec
xchg
lock
xchg
mov
lea
rcrb
mov
push
push
aam
adcl
das
xor
stos
lret
cmp
sarl
jle
sub
add
pop
inc
and
loop
subl
ds
push
mov
setg
jbe
imul
pop
icebp
leave
jmp
test
ljmp
cs
dec
or
push
inc
mov
enter
adc
into
mov
clc
movsl
jne
in
mov
fisttpll
adc
lods
sbb
flds
dec
or
and
inc
pop
ret
pop
mov
pushf
jbe
roll
sub
pushf
outsl
xchg
data16
inc
sub
movsl
pop
test
rcrb
fcompl
push
or
push
rclb
pop
push
popa
mov
sbb
lahf
xchg
enter
xchg
lret
pop
into
mov
add
lods
jle
inc
add
inc
in
in
cmp
aad
or
jge
adc
sbb
loopne
lock
jb,pn
jae
adc
cld
ljmp
mov
mov
and
pusha
adc
sub
xchg
mov
pop
outsb
jl
jge
push
pop
fcmovnbe
push
inc
mov
and
cli
push
lahf
sbb
mov
lret
push
sub
push
lock
jno
or
push
inc
ja
adc
pop
scas
fstps
lods
adc
dec
in
add
pop
arpl
scas
stos
testl
fistpl
cmpsl
out
scas
out
or
lcall
add
sbbl
push
rcrb
call
add
cmp
and
fdivrs
pop
push
mov
insb
jl
inc
jmp
icebp
add
or
dec
or
jo
ljmp
jns
test
roll
add
push
push
cmpl
fisubs
lea
pop
stos
shll
or
xor
pop
jecxz
cmpsl
xchg
in
xchg
scas
mov
movsl
cmp
test
movsl
mov
js
mov
aaa
loop
jae
shrl
pop
push
fwait
jno
repz
cmpl
outsb
sti
sbb
data16
jne
jle
dec
adc
pop
or
sbbb
add
test
movsl
dec
pop
incb
aad
xchg
jne
test
int3
push
frstor
xor
push
mov
push
dec
adc
mov
adc
int3
fimull
pop
cmp
adc
out
dec
loope
cli
push
loop
sbb
mov
sbb
inc
push
jmp
xchg
dec
mov
or
and
mov
xlat
mov
xchg
adc
aam
stc
pop
int
orb
insb
push
sbb
mov
dec
ret
je
sub
and
jnp
xchg
push
stos
xchg
inc
int3
adc
or
sub
stc
mov
inc
in
aam
push
aas
icebp
shl
into
dec
sahf
adc
mov
jl
xchg
movsb
pop
and
testl
push
sbb
xchg
pop
popa
nop
xor
in
lods
out
cmc
test
mov
dec
shlb
stc
les
inc
repnz
xchg
dec
lods
je
jbe
icebp
pop
aam
loope
inc
mov
mov
jl
xchg
andb
cltd
pop
clc
sbb
xchg
lock
loope
or
pop
jnp
pushf
fsts
icebp
push
cwtl
std
cli
out
push
sbb
sbb
inc
mov
or
nop
sti
push
push
cmp
fistpl
sub
inc
pop
push
lret
repnz
int3
fsts
pop
repnz
shll
push
xchg
out
stos
sub
mov
sub
xchg
cmp
into
inc
std
and
aaa
push
lock
aad
sub
xchg
inc
cmpsl
ds
ret
sbb
pop
cmp
add
dec
jge
shrb
push
scas
xlat
add
mov
dec
loope
inc
out
inc
pop
sub
mov
jecxz
mov
xchg
push
pop
loopne
push
insb
xlat
xchg
sub
test
sub
mov
push
call
es
inc
ljmp
jmp
cmp
enter
call
movsb
lea
xchg
push
or
ret
add
pop
and
lods
pop
fbld
gs
xchg
jnp
faddl
sub
imul
stos
andb
lds
and
sbb
jmp
ss
sbb
insl
xorl
decl
ret
mov
mov
js
nop
ret
inc
test
mov
cwtl
jle
sbb
cmpsl
insb
dec
testb
cmp
push
xchg
xor
dec
push
fadds
pop
das
je
sbb
popf
mov
mov
lea
aam
scas
imul
jl
sti
jnp
or
mov
cmc
popa
jne
push
bound
xchg
push
fdiv
mov
jne
or
jl
les
sbb
jno
jmp
movsl
and
loop
jp
mov
insl
fs
add
adc
aas
shlb
fidivrs
jnp
or
jmp
add
aam
mov
push
push
cmp
test
lods
mov
lods
aaa
jge
repnz
pop
pusha
or
ds
mov
dec
adc
mov
cmp
mov
xlat
mov
popf
inc
add
inc
fst
sti
sub
std
or
xchg
testl
lea
test
mov
xchg
jns
or
sbb
xor
out
shll
push
and
cmp
xor
pop
call
mull
mov
push
jge
sbb
sbb
add
jmp
insl
fdiv
or
rcr
push
xor
enter
aam
cmpsl
loope
xor
mov
inc
lock
jnp
dec
push
movsl
sbb
inc
fidivrs
xchg
test
inc
mov
adc
cmpl
cmp
inc
jno
cltd
add
enter
adcl
movsb
mov
ljmp
push
push
lret
mov
pop
pop
aad
divl
rorb
jnp
hlt
aaa
cmp
arpl
push
dec
movsl
mov
cmpsl
inc
repz
dec
lahf
cli
mov
stos
in
xchg
loopne
sti
popa
push
inc
outsb
aad
sbbb
pushf
pop
push
cmpsl
dec
orl
xchg
mov
scas
out
sub
inc
icebp
adc
mov
cmpsl
sbb
push
lret
negb
test
or
push
pop
mov
add
mov
push
jmp
divl
scas
repnz
enter
js
out
push
dec
lahf
insb
in
lock
nop
xchg
iret
mov
dec
xor
std
mov
in
push
adcb
fwait
movsb
cmpsl
fs
lods
mov
pop
gs
push
mov
or
jecxz
fadd
ds
xchg
ljmp
iret
leave
xor
jge
loopne
inc
arpl
xchg
push
shll
inc
cmc
jl
out
ret
cmpsb
inc
cmp
insb
xor
cmp
jnp
les
xchg
cmpsl
lret
adc
out
push
sti
stos
jge
sub
xor
push
mov
popa
loop
shr
jne
xor
or
orl
and
es
xchg
test
mov
jnp
div
inc
psllq
ret
leave
or
sahf
cmp
fidivl
add
or
dec
lock
bound
push
mov
mov
cli
pusha
and
jmp
xchg
push
sar
cmp
jno
std
lods
inc
xchg
out
cltd
mov
push
lea
hlt
sub
push
mov
negb
out
fdivs
or
push
in
or
pop
mov
imul
mov
inc
push
mov
pop
mov
mov
nop
cli
push
out
jg
xchg
outsb
ficompl
popf
push
push
adc
jnp
sbb
adc
dec
pop
push
out
cmpb
loopne
add
sbbw
or
sub
jbe
add
and
fldenv
mov
cmpl
lret
in
lea
mov
cmpsl
xchg
lret
cmp
leave
fnstenv
pop
fwait
ja
and
idivb
js
loopne
push
push
subb
dec
movsb
xchg
sub
add
shlb
push
jg
aaa
mov
repz
sbb
sub
das
loope
or
lods
push
mov
rcr
into
jmp
inc
aam
hlt
gs
out
das
adc
cld
sbb
mov
add
cmp
dec
nop
arpl
sub
sub
and
mov
mov
mov
xor
mov
addr16
dec
arpl
mov
std
rcr
jmp
in
xor
in
fistpll
int3
inc
in
pop
aad
imul
inc
add
jne
aam
dec
mov
lea
rcrb
jg
sbb
imul
cmp
movsb
lods
dec
int3
push
cwtl
xor
sub
push
dec
mov
mov
sti
jmp
ljmp
adc
mov
shlb
pusha
ret
enter
jl
daa
dec
mov
sub
leave
test
rcll
andb
movups
xlat
repnz
popw
cmc
xchg
repz
jl
adc
in
mov
in
push
ficoml
xchg
hlt
test
mov
mov
mov
cmp
adc
jle
sub
dec
int
sbb
fiaddl
bound
mov
mov
push
out
xor
pop
cwtl
pop
scas
or
jmp
mov
xor
or
lcall
or
fwait
sub
ret
push
and
clc
notl
xchg
jbe
add
xchg
das
lock
rorb
movsb
adc
or
fwait
repz
or
test
fwait
cld
cmp
xor
loopne
iret
push
cmp
loopne
mov
lods
cmp
in
rorb
jge
adc
sub
enter
mov
sbb
pop
mov
cld
push
bnd
addr16
lods
sbb
pop
mov
add
loope
ficoms
dec
pop
mov
fdivrs
push
test
ret
movsb
and
jmp
ja
mov
imul
or
mov
and
in
sbb
xchg
rcll
add
pop
adc
inc
repz
fcmovu
dec
loop
inc
and
loop
cmp
push
push
cmpsl
cmp
fbld
mov
add
and
lds
imul
push
mulps
sbb
dec
mov
movb
bound
and
fistpl
movsl
cmpsb
sbb
inc
ds
mov
mov
mov
shlb
sbb
sbb
clc
cmp
and
popf
inc
and
pop
negl
inc
call
out
aaa
push
push
push
pushf
mov
lock
iret
sub
jns
mov
xchg
push
stc
dec
cmpsl
fwait
jbe
clc
je
and
daa
lcall
cli
push
out
cmp
addr16
loop
insl
daa
movsl
inc
dec
push
mov
jle
pop
int3
add
or
fsubrl
pop
clc
pop
das
insl
outsl
adc
in
repz
or
pop
xchg
test
sbb
and
sti
or
xorl
into
mov
cs
mov
adc
push
pop
int3
jbe
xor
iret
cmp
out
cmpsl
jo
sub
mov
sub
mov
int3
jp
jno
shl
into
pop
add
ss
cltd
imul
cwtl
and
mov
cmp
sub
xchg
cwtl
int
push
lock
jecxz
dec
rclb
fisttps
and
push
clc
adc
mov
push
mov
push
xlat
mull
int
mov
push
sahf
pop
pop
pop
push
jmp
cld
add
ret
in
imul
cli
jg
xchg
dec
mov
jmp
hlt
lods
int
adc
aam
insb
aas
or
pop
imul
fcmovbe
inc
xchg
or
jl
pop
ret
lds
jle
rolb
cld
aaa
sbb
lds
mov
loope
mov
sub
or
push
or
scas
adc
out
sbb
test
dec
lret
iret
add
jg
fwait
dec
lahf
sahf
fists
sahf
rcrb
test
cmp
add
xor
pop
fldcw
jmp
mov
insl
pop
lret
jo
test
jp
sub
lahf
mov
add
and
push
addb
push
push
addb
popa
push
mov
in
mov
sub
push
in
imul
mulb
dec
scas
dec
cmp
xchg
mov
sub
dec
mov
dec
jle
dec
mov
aad
cmc
movsb
sbb
inc
pop
or
xchg
xor
xlat
inc
out
xchg
jbe
push
mov
mov
fistpll
rcrl
push
xor
add
fbstp
fists
call
jb
inc
jbe
or
cld
inc
jno
fildl
or
or
add
push
test
cmp
pop
in
lods
inc
or
mov
adc
sub
mov
mov
sahf
in
insl
lods
add
pusha
or
ja
xchg
bound
shl
add
dec
enter
lret
clc
cmpsl
leave
andb
inc
imul
aas
fstpt
das
loop
jp
outsb
nop
mov
jae
cmp
inc
lock
insl
sub
pop
mov
and
repz
idivb
jb
outsl
fistpll
cwtl
xchg
insb
mov
fisttpll
aas
lahf
fnstenv
aas
mov
shl
jg
dec
sub
mov
sbb
cmp
jge
pop
aas
jno
push
loopne
pusha
lock
imul
test
or
loop
leave
lahf
mov
push
aad
scas
mov
rclb
sbb
out
xlat
jl
nop
pop
mov
insb
int3
movsb
xlat
sbb
push
sbb
sbb
nop
and
outsb
adc
pop
pop
out
mov
dec
mov
xor
inc
mov
stc
fdivr
lds
out
pop
push
scas
jge
loope
push
loop
cmp
cmc
add
dec
loopne,pn
out
xchg
xor
out
test
sub
enter
cmp
test
rorl
fyl2xp1
adc
int
in
iret
mov
addl
pop
sbb
das
test
inc
arpl
lret
divl
inc
aam
jo
and
jmp
push
shrb
icebp
xor
dec
xor
or
mov
sub
sbb
stc
hlt
and
pop
in
dec
mov
rcrb
fdivl
cld
sbb
js
or
pop
fsubrl
dec
xchg
sbbl
fidivl
movsb
aas
cmp
cli
shrb
xchg
add
fidivrs
sbb
repz
loopne
scas
jp
add
arpl
mov
imul
jge
push
push
mov
pop
cltd
lds
sub
scas
push
shll
insl
mov
xor
aam
dec
call
mov
inc
lret
loopne
sub
aad
mov
cmp
aam
popa
inc
cwtl
iret
adc
in
pop
add
cmp
xchg
mov
add
iret
test
sub
out
bound
fistl
jl
out
movswl
bound
push
fisttpll
jns
or
lret
test
andl
cmp
push
mov
dec
out
sub
outsl
insl
fcmovbe
adc
jl
and
push
faddl
jo
fsubrp
out
pop
mov
mov
push
or
shr
jecxz
push
adc
stos
inc
push
mov
adc
inc
in
dec
jne
int3
arpl
cmp
xchg
in
repz
lret
pop
insl
fldenv
adc
pop
lods
outsb
and
incl
es
stos
cli
mov
sbb
and
arpl
xor
add
mov
jge
adc
int3
mov
sub
in
or
fisubl
les
nop
in
xlat
jecxz
pop
scas
mov
cmp
dec
fs
mov
inc
push
mov
and
jecxz
repz
imul
xchg
pop
fisubrs
add
inc
or
leave
mov
stos
mov
loope
and
movsl
imul
xor
add
push
cmp
pop
sbb
in
loop
pop
adc
sub
lcall
imul
jno
loopne
stc
add
fsubrp
js
adc
jecxz
jle
mov
mov
les
inc
lods
ss
lcall
fsubrl
aad
jbe
sub
cs
popa
test
xchg
mov
aaa
gs
dec
fsubrl
cmp
stc
in
inc
mov
push
add
mov
dec
dec
sbb
mov
negl
sbbl
fldl
mov
jo
add
add
mov
pop
test
dec
xchg
xor
inc
inc
add
call
outsl
in
or
or
es
adc
mov
sbb
jle
scas
repnz
rcrb
les
stos
ror
sbb
fnstcw
ret
repnz
xchg
sub
insb
add
arpl
into
rolb
ljmp
jb
iret
mov
insb
fwait
sbb
xlat
out
fnstsw
sub
jno
push
xchg
sbb
and
mov
mov
fmuls
add
aad
push
adc
sub
pop
and
push
add
push
orb
call
in
in
lahf
add
lods
cmpsl
xchg
in
mov
orb
xor
insl
xchg
mov
ss
mov
jle
outsb
cmp
popf
mov
xor
fstl
xchg
jle
imul
aaa
dec
jl
shrb
fs
out
imul
rorl
push
push
mov
xchg
int
cli
notl
and
popf
sbb
mov
cmp
aaa
add
ret
inc
jae
scas
mov
adc
inc
das
shlb
cmp
mov
jmp
or
mov
or
scas
add
aam
cld
pushf
jl
bnd
loop
or
or
mov
js
pop
mov
jo
lea
pop
popa
lret
inc
int
pushf
shll
mov
pop
jp
and
stos
rorb
pop
arpl
out
mov
dec
testl
icebp
cmp
lock
jp
xchg
mov
pop
faddl
mov
pop
loop
xchg
and
lret
cmp
pop
popa
lret
mov
pop
scas
das
and
adc
int3
add
stc
imul
in
loopne
cmp
lock
ret
mov
cmpl
lods
call
arpl
movsb
sbb
inc
nop
aad
notb
dec
fcomps
sub
test
jmp
repz
jae
mov
push
inc
ret
pop
mov
lret
int3
movsl
je
int3
pop
mov
push
loopne
cmc
pop
dec
adc
adc
add
pop
movswl
enter
or
adc
ds
outsb
int3
fsts
imul
fsubs
mov
clc
shr
sbb
fldt
add
sbb
push
cmp
out
mov
xchg
add
mov
test
dec
mov
and
fs
in
sub
lahf
inc
lret
repz
mov
xor
inc
rclb
rorb
jno
stos
mov
jecxz
or
push
mov
jmp
outsl
dec
aaa
dec
inc
ret
daa
ret
mov
js
push
jecxz
pop
mov
popf
repnz
repz
xor
mov
cmp
xchg
cmp
and
cmc
lds
dec
sub
or
adc
adc
adcb
cltd
arpl
mov
insb
push
xor
push
push
cmpsb
sub
inc
ljmp
and
dec
movlps
sbb
std
movb
xor
sub
in
xor
imul
dec
push
pop
fadd
arpl
sbb
add
mov
adc
push
pop
and
adc
ds
jcxz
or
dec
gs
adc
mov
addr16
pop
push
add
and
clc
inc
lock
arpl
xchg
and
sub
pavgb
xchg
inc
insl
adc
in
and
and
or
test
in
jle
gs
sahf
out
iret
adc
lea
gs
cmp
daa
inc
mov
cmpsl
inc
dec
add
cltd
rolb
out
lock
mov
mov
ucomiss
mov
jns
sbb
int3
pop
xor
push
cli
mov
xor
cmp
subb
adc
or
push
mov
push
stos
ljmp
adc
cmp
rcll
push
xor
hlt
mov
push
stos
pop
cwtl
aad
xor
xor
lds
xor
mov
fistl
out
mov
andl
lcall
sub
sahf
sti
mov
mov
dec
cmp
sub
jns
and
pop
and
inc
jbe
std
test
xchg
fadds
sti
lods
mov
mov
sub
sub
imul
mov
stos
cmp
cmp
cmpb
ss
pmaxub
imul
xor
sbb
push
repz
push
adc
es
mov
cltd
cmp
cmp
rorb
jp
cmp
add
cmp
xorb
sbb
sbb
mov
jns
mov
push
in
rcrb
data16
push
or
and
ja
dec
ror
jg
orl
cwtl
adc
jae
lods
repz
lock
out
add
das
inc
stos
negb
jp
stos
mov
lcall
iret
push
lret
popf
stc
xchg
xor
push
test
pop
or
mov
mov
popa
fldcw
insb
push
dec
and
cwtl
xchg
subb
xor
lahf
xchg
imul
scas
mov
push
test
xorl
mov
xchg
mov
xchg
iret
xchg
jnp
push
sarb
call
mov
add
lret
cmpsb
movb
adcl
mov
icebp
mov
shrl
mov
mov
pop
fbstp
mov
xor
stos
jp
in
sarb
dec
and
cmp
add
push
arpl
xor
add
xor
loopne
mov
adc
lods
xchg
xchg
mov
mov
call
or
jb
jmp
outsb
pop
xchg
inc
out
mov
add
aam
in
pop
inc
jmp
jns
cltd
test
rclb
test
xchg
sub
aam
add
and
adc
enter
mov
cmp
ror
das
and
out
mov
aad
inc
jb
push
inc
pop
sbb
or
dec
lea
mov
mov
inc
std
lcall
push
push
inc
jmp
xor
mov
popf
sub
loopne
mov
cmp
in
xor
es
rorb
ss
dec
pop
dec
xlat
cmp
adc
xchg
bound
and
fmul
sbb
xchg
fnstsw
leave
fisubs
fistl
or
jns
outsl
jnp
fldl
inc
dec
pop
cmpsb
sahf
cmc
add
jbe
inc
add
std
outsl
rorl
pop
in
fimull
sbb
call
fldcw
cmp
pop
mulb
dec
test
sbb
dec
mov
jle
test
push
lods
dec
test
lock
test
adc
dec
inc
adc
mov
out
cmp
mov
rclb
nop
xchg
sbb
mov
add
lahf
lcall
inc
xchg
das
xor
push
movq
and
mov
aad
xor
dec
jb
xchg
xchg
fisubs
xchg
mov
mov
sub
pop
sbb
bound
lods
fildll
push
daa
mov
xchg
sbb
cwtl
xlat
jp
mov
cwtl
mov
call
mov
push
imul
jno
das
andl
xchg
inc
push
inc
sarl
ja
out
push
outsl
les
aaa
mov
cmp
js
imul
or
adc
iret
cwtl
mov
dec
jecxz
stos
gs
xchg
rclb
push
mov
in
push
sbb
scas
adc
adc
in
jae
scas
aas
jo
call
push
popa
mov
mov
cmp
ret
popa
ss
sbb
stos
pushf
shrb
xor
pop
pop
mov
ror
scas
or
in
lret
jno
adc
leave
cltd
cmpl
sahf
sub
adc
cmp
cld
mov
out
das
jae
hlt
stos
orb
mov
int3
aas
xchg
dec
int3
arpl
sbb
sbbl
push
cmpsb
push
xchg
pop
lcall
or
repz
negl
xchg
movsl
adc
and
adc
ss
out
fimuls
sbb
jmp
sub
xlat
in
pop
xchg
xchg
mov
das
jns
repnz
or
adc
faddl
mov
sbb
fsubr
mov
int
or
push
inc
mov
xchg
repz
aaa
jmp
jecxz
push
pop
popl
imul
outsl
or
dec
mov
cld
or
jbe
xor
push
into
mull
add
repnz
inc
fwait
xor
das
pusha
xor
mov
stos
jl
sub
jmp
pop
data16
arpl
testb
or
loope
daa
cmc
and
cli
scas
lods
mov
les
into
add
push
aam
and
mov
xchg
in
or
jge
jp
cmp
ret
adc
cmp
jbe
push
inc
sbb
add
inc
ror
jno
lds
lcall
test
sub
xchg
ds
xchg
adc
xor
or
mov
cmp
mov
lret
into
repz
cltd
in
mov
pop
sub
cmp
jne
aam
xabort
mov
sub
push
stc
ja
sbb
adc
xchg
popa
or
inc
enter
mov
push
cltd
mov
cmp
push
xor
scas
fistl
and
fadd
in
into
or
iret
adc
jne
xor
push
push
mov
or
cltd
mov
or
adc
pop
jge
in
sub
imul
lret
sbb
shll
jp
mov
inc
xchg
push
push
mov
cld
incb
and
mov
xor
jnp
sti
add
hlt
and
and
sub
push
mov
push
enter
jp
mov
dec
out
out
push
mov
sbb
jno
in
int
adc
mov
pushf
arpl
in
in
sbb
push
popf
jle
pusha
sbb
popf
fmul
sbb
ret
sub
pop
cmpsb
pop
inc
sar
mov
stos
pushf
or
adc
sbb
xchg
lea
outsb
fldl
in
jge
xchg
bound
pop
popf
inc
mov
or
lods
cmp
mov
or
adc
dec
sub
in
shrb
or
in
pop
idivl
cli
inc
loope
add
jne
pop
ss
leave
push
popf
ror
jae
jns
roll
pop
into
popf
jbe
bound
divb
int3
in
fistpl
sahf
jge
ret
pop
into
aad
and
arpl
loopne
ljmp
pop
mov
or
jmp
mov
xorl
cwtl
je
out
cmp
out
inc
pop
push
aam
sub
movsl
movsl
cmp
cmc
lcall
pop
jp
jp
arpl
xchg
cmp
faddl
mov
loopne
mov
mov
sti
cmp
outsl
and
add
les
sbb
sbb
loope
inc
imul
dec
pop
jo
popf
mov
cmc
inc
imul
aam
xchg
mov
inc
push
pop
dec
fadds
mov
xor
ficomps
arpl
fstpl
sbb
add
mov
in
dec
sbbb
sub
xchg
loopne
inc
in
push
rol
sub
gs
jae
xchg
repnz
jns
test
add
mov
mov
jo
ljmp
add
xor
popa
mov
jmp
out
adc
jg
jne
cmp
mov
enter
add
test
ficoml
sbb
xchg
adc
cld
imul
xorb
ja
gs
sarl
mov
xchg
inc
pop
mov
inc
xchg
clc
add
jecxz
mov
cmpsl
cmpsl
mov
jp
inc
js
ret
sub
shlb
or
xchg
mov
arpl
adc
in
sti
or
fs
out
xor
push
mov
xchg
ja
and
lret
add
repz
into
sub
sbb
and
inc
stc
lret
xlat
cs
stos
add
dec
fs
stc
js
xor
or
add
iret
sarl
jmp
aad
in
aas
xor
xchg
xchg
xor
jbe
xchg
xchg
mov
mov
ljmp
xchg
test
andb
test
sub
sbb
insl
movsb
pop
pop
insl
mov
push
mov
popf
cld
mov
xor
xlat
mov
adc
imul
and
js
adc
push
out
andb
sbb
in
imul
shrb
sti
sub
or
lds
cltd
mov
in
inc
pop
mov
lds
xchg
cmp
jmp
sub
arpl
sbb
lods
or
aaa
daa
pop
adc
sahf
push
lret
dec
imull
stos
pop
les
icebp
aaa
push
jo
insl
add
les
int3
rorb
scas
cwtl
pusha
stos
outsl
fbstp
jge
mov
sub
out
or
cld
hlt
push
in
mov
push
int3
leave
mov
xchg
sbb
cmp
pop
out
fldenv
xchg
repz
mov
inc
xor
xor
pop
and
mov
jno
cmp
push
pop
jl
cmp
rclb
dec
inc
incb
out
add
jnp
fsubl
lret
jb
fisubrl
sbb
sbb
or
cmp
sbb
dec
int3
nop
push
out
or
xchg
push
adc
mov
outsb
in
jb
repnz
mov
push
cwtl
pop
das
pusha
jbe
sbb
lods
xlat
push
cmp
fidivl
adc
js
roll
sub
sbb
jge
jmp
mov
mov
add
lret
ds
test
xchg
xor
pop
repnz
fcoml
jb
xchg
lods
xor
in
or
cmpsl
testl
jl
clc
mov
enter
in
cmc
mov
das
ds
jnp
push
lds
push
and
out
add
dec
ret
aas
test
mov
cmp
jmp
push
pop
cmp
inc
push
clc
imul
mov
daa
mov
daa
xor
pop
cmp
jmp
rcrl
fcompl
ljmp
dec
xor
ljmp
call
mov
movlps
subl
aam
xchg
pop
inc
or
pop
jp
jbe
xchg
scas
out
xchg
out
test
into
jae
inc
das
mov
xchg
frstor
push
loop
clc
xor
jecxz
jns
pop
inc
aas
or
cmc
call
jp
mov
cmpsb
cmp
enter
push
stc
cmpsl
ret
fadd
sarl
testl
cli
decl
test
aaa
hlt
sbb
jo
aas
rcr
pop
insl
cmpsl
lret
stos
mov
inc
insl
cli
mov
mov
sahf
fbstp
loopw
pop
ret
mov
test
fbld
xor
lods
push
fnstcw
push
pop
popf
icebp
sub
xchg
pop
idivl
mov
test
add
and
orb
sbb
loop
es
add
insl
xor
fimuls
test
shl
arpl
mov
cli
imul
push
mov
xorb
in
test
ret
cmp
mov
orb
xor
sbb
fisttpl
lds
add
pop
inc
adc
rclb
mov
push
cld
xchg
adc
out
pushf
ja
repnz
fwait
inc
call
dec
dec
inc
in
push
sub
lods
rorb
pop
pop
pop
mov
mov
or
in
jo
adc
int
xor
mov
mov
leave
repz
ficoml
aas
and
pop
les
fs
enter
jmp
pop
pusha
cmpsl
jae
sub
out
pop
int3
jl
sub
movsb
push
sub
sbb
jbe
or
sub
leave
arpl
push
lock
sub
std
or
xchg
cmp
lcall
mov
ret
mov
fcmovnb
mov
add
xchg
or
xor
and
sub
scas
insl
mov
ss
fs
sub
lret
lock
test
into
mov
dec
sub
sbb
sbb
clc
icebp
aas
mov
sub
or
je
push
out
popa
pushf
xchg
dec
pushf
aas
popa
mov
dec
cmp
lock
dec
push
movsl
popf
xchg
sahf
jnp
enter
mov
loop
dec
iret
mov
xchg
and
fmuls
and
int3
rcr
push
test
cmp
repz
pop
mov
aad
push
call
adc
jnp
mov
pushf
mov
jb
mov
push
jb
frstor
fildll
dec
out
sbb
shl
mov
mov
rolb
cmc
fnstenv
mov
imul
mov
imul
cmp
push
mov
cmovb
or
or
xor
les
push
or
dec
jnp
xchg
shll
jle
aad
ja
cmp
je
js
scas
cmpsl
xchg
imul
loope
add
hlt
mov
in
jge
push
push
xlat
sbb
cmp
add
insb
xchg
dec
xchg
int
add
mov
xchg
mov
cvtps2pd
xchg
ret
adc
sub
add
aam
sti
pop
pop
inc
movsb
test
mov
call
jno
rclb
jecxz
out
aad
and
std
loope,pt
mov
call
xchg
idiv
pusha
insl
nop
std
mov
pushf
adc
add
mov
imul
jno
push
ss
out
mov
mov
dec
fdivs
mov
subl
arpl
pop
out
in
mov
dec
andl
ret
daa
outsb
js
mov
xor
sbb
test
dec
cmp
jo
mov
mov
test
push
fbld
adc
mov
mov
fwait
mov
std
jle
cmc
mov
jbe
inc
imull
mov
out
out
adc
test
or
pushf
sbb
jno
int3
add
fwait
jle
mov
xor
adc
xor
push
loop
pop
jbe
mull
sub
cmpsb
xor
mov
fadds
cmp
push
cmp
inc
arpl
je
lock
mov
nop
lret
fiaddl
xchg
scas
std
testb
shrb
mov
ds
rolb
push
jmp
add
dec
and
sbb
pop
divl
bound
mov
inc
mov
mov
and
cmp
cmp
adc
mov
cmp
xchg
adc
fildl
mov
fs
add
push
ja
pop
jl
int3
stos
pop
cltd
loope
sub
add
adc
pop
sbb
cld
jb
out
lea
pop
sbb
rcr
out
cmpsl
into
mov
and
cmovno
mov
cmp
arpl
das
popa
jb
popf
sub
icebp
sti
scas
pop
add
jae
sub
cmp
jecxz
loop
test
mov
in
loopne
sbb
outsl
dec
jbe
stos
or
mov
or
mov
sbb
dec
or
cld
cld
xchg
pop
vcmppd
test
clc
pop
loopne
dec
xor
fcoms
lock
in
lcall
daa
mov
mov
push
xchg
pop
jmp
sub
loope
jmp
test
sbb
repz
lods
pop
lar
std
dec
sbb
fstpl
xchg
das
xor
lea
xchg
iret
inc
outsb
xchg
int
add
ficompl
mov
push
inc
sub
xchg
out
rol
and
cmp
xchg
mov
int
nop
sbb
push
test
push
sbb
sbb
mov
out
mov
rcr
xor
int3
dec
inc
test
out
add
into
pop
mov
in
in
imul
cmc
stc
nop
insb
jb
out
insb
pop
aam
into
mov
rol
cmp
iret
xchg
jle
pusha
lcall
out
sub
add
dec
rcrb
mov
sarb
xor
inc
dec
xchg
xchg
sarl
mov
push
push
lods
loope
or
inc
fcoml
push
push
ffreep
lcall
stc
test
pop
insl
in
push
xchg
inc
test
shl
push
daa
lret
jl
ret
int3
sub
or
sbb
dec
lods
ss
stos
lahf
mov
cmp
shrl
sub
xchg
jb
iret
ret
fwait
out
hlt
mov
ss
push
xchg
mov
pop
xlat
pop
call
push
sbb
cwtl
aaa
xchg
xor
push
xor
mov
fs
xor
pusha
adc
push
mov
and
mov
aam
mov
or
inc
jae
pop
arpl
data16
imul
sub
and
and
aas
adc
push
lea
ret
pop
lea
dec
cmp
jge
fcmovnbe
out
mov
mov
or
mov
and
jnp
mov
popf
gs
std
in
cmp
clc
mov
dec
dec
push
or
sti
leave
scas
push
dec
jge
xor
iret
mov
push
mov
sbb
insl
inc
sub
cmp
je
cmp
jbe
mov
xor
imul
push
inc
ds
mov
mov
call
cs
lea
test
jp
mov
fmul
icebp
arpl
ror
fwait
xchg
inc
incb
jg
out
jno
sbb
ret
shlb
and
lea
scas
mov
cmp
idivb
insb
subb
xchg
push
mov
mov
sub
pop
bound
nop
push
in
or
aam
mov
add
in
fidivrs
cmp
hlt
mov
adc
loopne
mov
sbb
jp
add
jae
rorb
and
mov
add
mov
adc
jge
cmp
pop
sti
divb
arpl
rcl
mulb
mov
je
sbb
out
fisubrs
mov
int3
pop
into
adc
mov
sti
int
out
sub
jne
xchg
add
adc
pop
ret
stos
and
jmp
jp
movsl
lods
sbb
icebp
cmpl
pop
jns
popf
sbb
mov
orl
lods
jle
jns
sbb
cltd
and
pop
out
lret
inc
addb
repz
std
iret
addb
leave
sub
sub
bound
cld
xor
pop
bnd
into
stc
xchg
mov
aaa
int3
dec
add
add
es
xlat
data16
pop
jl
dec
ds
scas
and
inc
cmpsb
xchg
hlt
adc
mov
add
les
mov
push
mov
sarb
outsl
mov
mov
fs
call
lcall
insl
push
dec
mov
imul
data16
and
lock
push
test
pop
and
out
dec
cmpsl
mov
fstpt
push
lcall
in
outsl
jp
test
xchg
ret
daa
pop
dec
xchg
out
lock
arpl
adc
lods
xor
dec
out
fnstenv
push
adc
cmp
outsl
and
mov
out
out
sbb
int
cmp
jne
push
cmp
cltd
in
vcvtsi2ssl
subl
jmp
stos
loopne
or
out
pop
mov
ja
cmp
out
inc
test
lods
in
mov
fsubr
cmp
out
icebp
xor
into
push
je
negl
push
xor
in
call
add
sub
mov
popa
popl
into
std
daa
dec
mov
sti
cltd
repz
in
mov
add
imulb
cmpsb
sbb
repz
fcmovne
popa
cld
jb
in
push
lock
clc
cmpsb
stos
pop
pop
test
ret
enter
pop
push
pop
cwtl
dec
pop
xchg
scas
or
mov
mov
jae
scas
test
add
pop
xchg
data16
cmp
cld
adc
loope
jbe
cmpsb
stc
iret
aam
arpl
sbb
push
jbe
xor
mov
jmp
pop
push
push
ss
push
and
repz
out
mov
adc
icebp
mov
mov
pop
movsb
cs
push
mov
cmp
add
push
and
je
in
add
push
fisubrs
lahf
pop
aaa
daa
adc
outsb
pop
lcall
loope
loop
inc
push
sbb
in
shlb
mov
iret
out
dec
in
sub
dec
add
out
push
mov
mov
inc
or
xchg
adc
push
pop
xlat
nop
push
xchg
out
jecxz
insb
adc
mov
sbb
fdivrs
mov
in
addl
push
push
testb
mov
nop
dec
xchg
cmp
or
sub
in
shll
dec
sub
jbe
jns
mov
std
daa
fdivs
or
mov
lret
test
in
dec
inc
pop
mov
adc
xor
pop
cmp
inc
and
mov
mov
mov
dec
std
mov
add
sub
das
jge
ja
cmpsl
clc
dec
sar
stos
and
mov
adc
jno
out
push
mov
and
fs
test
and
mov
in
pop
sbb
push
and
pusha
or
pminub
jne
add
push
add
rcll
lds
xchg
bound
push
lock
mov
jo
scas
es
sub
mov
or
cmp
pushf
data16
and
lea
jl
or
stc
xor
movsl
pcmpeqw
lods
scas
xor
jcxz
add
movsl
cmpsb
xchg
inc
mov
xor
enter
jae,pt
and
nopl
outsl
dec
lods
xor
or
dec
jno
mov
shll
xchg
int3
sbb
in
repz
scas
dec
mov
test
mov
iret
ljmp
in
outsb
pop
pop
sub
lret
push
enter
and
jbe
daa
push
xlat
repz
daa
daa
cmpsl
shrb
loop
movsb
xlat
test
mov
sbb
repnz
clc
leave
jnp
sub
push
add
mov
mov
insb
pop
test
jae
adc
cmp
cld
stos
in
test
rol
out
imul
adc
push
mov
xchg
addr16
jg
add
movsl
ds
pop
cmpsb
outsb
sbb
jbe
sbb
inc
in
jmp
pop
mov
incb
mov
fbld
inc
or
fcmovne
out
jnp
and
add
subl
sbb
cmp
cwtl
jns
lret
loopne
cmp
mov
pop
filds
inc
dec
or
stos
fmuls
bound
movsb
jbe
inc
pop
pusha
xchg
cltd
dec
dec
ja
rcll
out
out
popf
inc
aam
jg
sub
ljmp
push
xchg
outsb
aaa
push
mov
leave
dec
int3
outsb
cltd
jp
lds
and
shll
ja
mov
outsb
cmc
clc
cmp
dec
inc
popl
pop
xor
sarb
sub
adc
dec
adc
int
aad
lret
sub
push
fisubrl
xchg
mov
cmpsl
mov
sbb
stos
xchg
xor
iret
in
fildl
mov
xor
std
push
adc
and
int3
arpl
lcall
mov
pop
mov
mov
add
mov
mov
lsl
dec
andb
mov
sbb
lods
push
push
adc
test
adc
lahf
xor
stc
and
xor
pop
repnz
cltd
inc
adc
mov
aas
cmpsl
adc
outsb
cltd
cmp
push
xor
inc
aas
jb
or
cmp
les
adc
int
mov
cmp
xlat
cmp
into
or
pushl
push
test
or
sbb
adc
or
mov
mov
mov
sub
add
xor
mov
jae
mov
data16
push
push
or
xor
out
mov
in
insb
lods
testb
and
jno
inc
mov
push
scas
mov
pop
data16
mov
enter
mov
xchg
ss
push
mov
adc
popa
sub
call
xor
adc
pop
repnz
mov
popf
stos
idivl
loop
daa
jle
test
pop
mov
std
xor
add
std
outsb
lahf
in
and
mov
rcr
hlt
and
jg
xchg
mov
jbe
sbb
loopne
jmp
pop
xchg
mov
push
int
sahf
fwait
push
cmc
shlb
and
popf
in
push
test
pop
xor
test
testb
push
les
inc
pusha
jge
xchg
lods
shll
sets
ror
out
lds
mov
jo
cwtl
fimuls
mov
sbb
sub
call
imul
sub
xchg
mov
mov
fnstsw
rcr
push
add
pop
adc
bound
rorb
pop
pop
ret
push
lea
sbb
test
fldt
aaa
ss
call
or
ret
ja
outsl
mov
out
mov
sub
data16
imul
push
xor
mov
gs
cmc
js
xchg
push
inc
jne
dec
add
aas
leave
arpl
jp
js
and
mov
jmp
inc
jnp
dec
int3
xor
cmp
ret
shll
lret
cmpsb
loop
adcl
push
lock
sbb
add
daa
movsl
out
and
cmc
loope
jp
mov
fidivs
loopne
adc
xchg
xchg
sub
insb
xorb
addr16
cmpsl
insl
push
sarl
outsb
pop
dec
xchg
shll
in
mov
aam
fidivl
sbb
faddp
daa
in
les
repz
ret
es
dec
stc
sbbl
mov
mov
ja
adc
dec
cmp
sub
xchg
fmuls
and
test
sbb
loopne
lret
mov
sub
xchg
add
ljmp
std
cmc
push
ljmp
lahf
add
je
sahf
addr16
rcrb
adc
pop
mov
push
cmc
add
mov
outsl
sbb
pop
xchg
ds
jno
test
push
test
in
pop
repnz
inc
in
add
cmp
das
cmc
push
popf
xor
jo
comiss
push
fistpl
cwtl
repnz
pusha
sub
add
mov
das
in
out
xor
sti
pop
std
lds
cmpsl
movsl
pop
cld
popl
push
xor
cmp
out
pop
dec
inc
icebp
mov
jae
in
mov
es
leave
sahf
dec
sub
mov
cmpsl
std
ss
scas
xchg
mov
sbb
arpl
xchg
inc
inc
out
pop
xor
scas
mov
cmp
add
and
xchg
fisttpll
cmc
in
daa
lods
xchg
aam
pop
lret
inc
push
sbb
in
mov
outsl
and
dec
dec
gs
fwait
add
xor
movsb
cmpsb
imul
or
inc
inc
arpl
movsl
popf
mov
rorb
arpl
rorb
adc
sti
sbb
les
mov
jmp
or
adc
sbb
fs
mov
testb
pushf
cwtl
xchg
dec
ficoms
call
push
test
add
lret
mov
push
inc
jo
mov
pop
stc
pop
fs
hlt
rolb
std
fldcw
andl
cmp
lods
lods
and
loopne
cmp
outsb
fisttpll
mov
push
sub
je
pop
leave
pop
fstps
pop
push
mov
jecxz
dec
sub
loope
ret
pop
add
push
lret
xor
adc
jae
inc
outsb
pcmpeqd
popf
inc
mov
aaa
loope
sbb
add
fisubrl
mov
addr16
lea
xor
popf
popa
or
pusha
gs
and
mov
test
or
and
ret
fwait
pop
fcmovnbe
pop
lahf
adc
push
add
jb
dec
or
in
sbb
adc
xor
popa
test
sti
adc
repnz
test
xor
jbe
mov
ljmp
roll
jecxz
test
lods
ja
jecxz
adc
sbb
loope
ror
mov
mov
int
bound
gs
dec
loope
push
sbb
xor
in
and
jge
insb
mov
outsb
mull
lcall
sarb
inc
xor
dec
fidivrs
pop
push
stc
jl
in
test
out
dec
xor
sbb
pop
xchg
or
jne
mov
ljmp
in
inc
jecxz
mov
leave
push
test
add
cmp
stos
dec
add
push
push
cltd
cmp
mov
fiaddl
or
push
jb
mov
mov
popf
mov
mov
outsb
dec
mov
hlt
pop
add
fisubrs
push
pop
mov
adc
jp
dec
stc
xchg
pushf
sbb
pop
pop
fisubrs
xor
orl
insl
sub
xor
adc
insb
xor
ljmp
imul
cld
enter
add
data16
jmp
pop
nop
push
repnz
int3
xor
mov
adc
and
stos
sbb
mov
inc
sub
jmp
rorb
xchg
and
test
loopne
mov
and
sub
ss
test
mov
popf
xor
mov
jns
repz
imulb
sbb
add
rolb
mov
movl
xor
fdivr
imul
sahf
inc
add
outsl
dec
sub
rcl
ret
sahf
sub
pop
andl
jno
loop
xor
and
jns
push
mov
xchg
push
add
add
add
push
sbb
cmp
pop
je
xor
and
or
xchg
cli
subl
arpl
in
pop
sbb
imul
mov
xchg
std
cmp
add
hlt
pusha
xchg
and
sub
repz
mov
sub
aas
cmpl
clc
add
cwtl
cld
out
call
cmpw
scas
aam
sub
loope
hlt
mov
enter
xor
add
sahf
adc
mov
out
insb
jg
divb
cmpsb
les
sbb
loope
dec
ljmp
jge
or
add
es
mulb
out
cmpsl
xchg
cli
out
xchg
xchg
hlt
push
leave
ja
cmc
out
push
clc
movsl
and
outsl
ss
aad
call
xchg
daa
cs
mov
xchg
push
xchg
cmp
fstpt
push
mov
imul
inc
cmpsl
je
lods
dec
mov
xchg
js
lods
jecxz
out
adc
mov
xor
inc
pop
call
ja
rclb
sbb
stc
shlb
roll
jne
icebp
jle
and
out
sub
adc
test
das
insl
lds
and
jo
mov
mov
out
leave
inc
mov
jo
repz
test
ss
pop
add
sbb
mov
mov
inc
push
xchg
pop
aaa
add
pop
stos
and
imul
push
push
mov
test
leave
aam
mov
sahf
jo
xchg
and
enter
cltd
xor
in
xchg
adc
add
push
jb
xchg
push
xor
outsb
cwtl
sbb
adc
add
adc
pop
clc
mov
outsb
nop
mov
adc
mov
dec
pushf
shll
pop
cmp
pop
jno
popa
dec
pop
mov
cmc
bound
mov
jno
decl
shll
ficompl
lock
xchg
mov
fmull
pusha
and
or
xor
inc
jecxz
fdiv
lds
xchg
std
mov
int3
mov
xor
andl
xor
pop
call
xchg
cmp
push
pop
stos
xor
pushf
inc
movsl
mov
cmp
ret
adc
dec
cmpl
sarb
xchg
mov
ljmp
arpl
scas
or
mov
sbb
jo
sub
rclb
pop
dec
add
jl
xor
ss
and
push
ds
adc
ret
jnp
mov
insl
cmp
xchg
mov
inc
jno
imul
sahf
shr
aaa
jnp
sbb
xchg
lds
scas
mov
aad
adc
jge
cmpb
int3
mov
fwait
cld
cmc
dec
push
jno
sbb
in
mov
mov
ljmp
jae
push
int
cmp
push
jp
dec
in
sti
cmp
jnp
imul
cmpsl
sub
clc
int
or
mov
out
mov
jmp
or
arpl
sub
dec
sahf
nop
lcall
jno
out
in
in
hlt
sbb
lea
fwait
or
das
xor
mov
xchg
dec
inc
incl
cld
push
jg
push
outsb
jmp
loopne
movsb
ja
inc
xor
mov
jnp
fiadds
lods
loopne
mov
and
fwait
xchg
lock
iret
out
pop
pop
lds
repz
jo
bound
dec
mov
pop
mov
pop
push
lret
je
and
mov
repz
pop
repz
jmp
sub
dec
add
fmul
lds
scas
sahf
cmpsl
pop
shll
in
aaa
loop
lcall
and
imul
mov
push
jo
adc
or
xchg
test
je
xor
test
mov
or
leave
dec
sub
mov
mov
cmp
mov
loopne
cs
test
push
int
inc
iret
cli
dec
push
mov
dec
dec
sbb
shll
dec
and
daa
jno
dec
fucomi
leave
shlb
add
pop
or
and
repnz
iret
xor
jecxz
fs
push
dec
or
jmp
pop
loopne
xor
jb
addr16
push
je
iret
sbb
rcl
pop
or
ret
das
sbb
or
dec
pop
jo
pop
xor
std
repnz
repz
lret
stos
cmpsl
fcmove
or
sti
adc
mov
sub
shrb
mov
outsb
outsl
out
and
sbb
pop
sbb
popf
mov
sub
hlt
push
add
out
decl
push
ja
in
insb
jg
out
jmp
inc
incl
xor
mov
mov
pop
pusha
xor
inc
sbb
add
jl
sbb
xchg
mov
jb
mov
out
sti
shlb
xchg
push
mov
pushf
aad
pop
ret
stos
sbb
push
xor
mov
dec
fs
std
dec
xor
cwtl
or
push
xchg
shll
lds
push
fnstsw
mov
daa
mov
scas
loope
jl
mov
push
fnstcw
push
cmp
adc
pop
gs
lods
pushf
inc
xchg
adc
psubusw
inc
mov
nop
es
xor
arpl
stos
dec
sbb
and
insb
add
ret
push
mov
push
rcll
cmc
jl
mov
sub
push
jne
xchg
imul
inc
testl
dec
cmp
mov
adcl
es
lahf
adc
fnstcw
push
adc
jl
sub
cld
jnp
in
and
pop
mov
jmp
jo
repnz
cmp
lahf
test
mov
pop
push
jnp
mov
icebp
dec
pop
movsl
out
dec
jecxz
xchg
aaa
stc
mov
push
cmpsb
bswap
inc
shlb
xchg
add
mulb
sub
adc
mov
inc
inc
push
es
xchg
and
add
shlb
mov
incb
xlat
jle
mov
add
mov
adc
add
fnsave
aaa
in
in
mov
pop
sbb
lahf
cwtl
loope
out
aas
psrlq
push
add
mov
jg
inc
jbe
push
adc
adcl
mov
mov
jp
jmp
jle
mov
out
mov
mov
std
push
pop
test
pop
idivl
jp
fsub
adc
jb
sub
hlt
push
mov
gs
xor
jp
addr16
ret
test
inc
add
rcrl
cmpsb
arpl
ficomps
cmp
adc
mov
pop
sbb
mov
dec
jecxz
in
push
aas
sub
push
mov
or
xchg
jmp
xor
mov
outsl
mov
jb
mov
push
test
pushf
mov
std
clc
pop
mov
adc
cmp
cmpsl
push
push
add
cmp
aas
sub
pop
pop
ret
int3
mov
xchg
lcall
push
jnp
add
dec
mov
xchg
les
push
das
addr16
cmp
lock
cwtl
sub
stc
adc
arpl
inc
notb
dec
pop
fwait
aam
aaa
pop
stos
mov
jp
in
out
shlb
sub
mov
ds
test
mov
mov
adc
dec
adc
mov
das
ss
lea
sbb
sahf
jp
adc
cs
imul
movsl
inc
and
icebp
mov
fiadds
inc
push
paddusw
xchg
fs
loop
xor
cmp
mov
cs
loop
push
icebp
filds
in
jl
or
xor
or
cmp
sti
aas
dec
subl
mov
add
pop
mov
adc
mov
roll
mov
movsb
mov
pop
pop
outsl
cmp
scas
push
out
dec
mov
add
fldln2
aam
fcoms
mov
adc
sbb
sub
test
dec
adc
add
cmp
div
roll
insb
push
add
out
lods
imul
or
movsb
push
fwait
jge
arpl
pop
adc
cltd
push
push
mov
unpckhps
not
repz
jne
clc
sbb
dec
dec
inc
pop
dec
cmc
popa
xchg
into
lods
in
push
dec
mov
or
jmp
imul
ffreep
popf
inc
int3
hlt
mov
ss
lret
mov
popa
dec
mov
xchg
sarl
stos
xor
rcrl
jno
jl
fistpll
arpl
push
pop
insb
mov
mov
out
fmul
insb
cmpb
mov
pushl
je
adc
shll
add
push
cwtl
xchg
idivl
ds
cmpsl
out
ret
pop
push
leave
add
mov
rorl
sub
cmp
and
pop
jns
jno
aam
push
sbb
or
insb
cs
mov
idivb
jns
push
aam
or
into
jne
sbb
jns
cmp
repnz
ds
push
jbe
dec
cmp
jbe
les
and
push
lds
movsl
cltd
testb
into
add
xchg
mov
outsb
mov
push
inc
int
movsl
das
pop
repnz
push
inc
add
push
test
push
not
push
adc
and
dec
jns
lcall
mov
jecxz
cmp
enter
jge
pop
or
add
pop
imul
inc
or
gs
xchg
dec
lods
or
jo
das
repz
sbb
jo
jb
mov
and
outsl
stos
jnp
xlat
mov
sbb
or
cli
out
mov
ss
in
push
aam
dec
xor
outsb
sub
lahf
out
inc
ss
notb
outsb
adc
stos
pop
iret
gs
fwait
int3
lret
xchg
and
gs
or
inc
nop
and
sub
das
ds
notl
std
mov
and
ret
add
clc
adc
xor
out
or
add
push
popf
testb
adc
push
les
mov
push
or
pop
clc
sbb
mov
push
cmp
xlat
ds
rorb
shr
cmp
sbb
xlat
ret
imul
xor
mov
out
add
std
push
je
sarl
xor
add
jecxz
inc
rcrb
mov
fwait
push
outsb
xchg
test
mov
adc
sub
jge
push
sub
leave
ds
fidivl
test
aaa
adc
sub
daa
xchg
pop
daa
inc
testb
imul
clc
roll
jno
rcl
mov
aaa
enter
in
divl
add
mov
sub
xor
and
aas
sub
mov
inc
or
fnstcw
aad
sbb
dec
notl
cs
mov
in
push
jp
ret
mov
test
mov
mov
mov
mov
add
clc
rolb
out
nop
push
loop
je
stos
sub
mov
ja
loope
push
dec
jecxz
dec
add
daa
lods
roll
xchg
stos
sbb
popa
cmp
push
and
mov
inc
mov
movsl
sub
xor
cmp
adc
xor
and
mov
clc
in
xor
cmc
add
popf
sub
pop
stos
add
orb
scas
mov
pop
jcxz
test
xchg
fmuls
ficoms
xchg
inc
das
neg
cld
jbe
popf
mov
mov
or
mov
arpl
pop
sbb
loop
sub
mov
ret
xor
lcall
sbb
ss
inc
sbb
mov
sub
jne
jns
jo
mov
mov
rcrb
addr16
xchg
xor
je
xchg
mov
lea
popf
ljmp
push
pop
lahf
mov
mov
jg
sti
or
inc
sti
ficompl
mov
xorl
xchg
fisubrl
sbb
xorb
ss
enter
mov
inc
adc
mov
cmp
aam
vmovupd
mov
push
add
clc
sub
rcll
pop
mov
lret
ret
mov
bound
sub
push
mov
ds
mov
in
ret
cmp
popf
fs
mov
adc
add
ret
std
xor
fidivl
add
jge
jb
xor
popa
dec
sub
or
mov
ljmp
dec
dec
mov
rorb
cmpsl
xor
push
cmp
cmp
xchg
scas
mov
jge
inc
popf
mov
xlat
subb
jecxz
lds
ljmp
rolb
xlat
dec
jnp
popl
inc
in
adc
or
mov
imul
stos
test
ja
inc
test
das
and
jle
shlb
jge
jbe
into
in
sub
or
test
jle
idivb
and
out
cmp
xchg
repnz
mov
push
jmp
pop
std
push
adc
or
cwtl
and
push
xor
mov
ljmp
scas
xchg
das
add
jno
daa
fsubrs
push
movsl
xchg
jae
stos
pop
push
mov
stc
enter
or
pushf
adc
stos
pushf
push
scas
divb
push
daa
xchg
data16
jno
cmpsb
out
adc
adcb
pop
dec
and
insl
push
cmp
pop
jl
or
inc
sub
mov
sbb
sub
lret
xchg
cmp
cmp
ja
fldl
lods
sbb
adc
bound
mov
lret
dec
out
cvtpi2ps
mov
fsubrl
pop
andb
in
aas
sbb
jno
mov
js
push
outsb
repz
cmp
lahf
andl
cmp
cmp
aad
movsb
sub
es
or
ror
push
arpl
mov
mov
dec
cmp
adc
sub
mov
jbe
fs
mov
push
subl
xchg
mov
push
push
jo
cwtl
sub
divl
iret
in
mov
dec
data16
icebp
jo
in
dec
testl
cmc
and
push
int3
jecxz
icebp
add
mov
jne
mov
popf
jp
shrl
cmp
adc
or
mov
and
mov
dec
out
pop
xchg
fwait
mov
lods
int
mov
mov
sbb
int3
call
sbb
mov
mov
cs
lret
inc
pop
or
cwtl
rcrl
pop
sbb
sbbb
stc
shll
inc
pushf
dec
cmp
cmp
xchg
xchg
jbe
les
shrb
pop
push
sub
fs
in
mov
push
into
mov
add
sub
push
lcall
mov
xlat
sbbb
sar
mov
mov
pop
jnp
pop
and
cmc
in
xchg
jae
into
lods
adc
pop
push
dec
jo
add
push
imul
das
add
mov
adc
dec
cli
ret
scas
repnz
testl
xor
xchg
lock
imul
cmc
pop
cmp
leave
jo
mov
sub
popf
imul
js
lret
mov
shll
or
rolb
lds
push
pop
rcll
icebp
mov
push
leave
stc
ds
dec
sti
addr16
divb
jne
jns
addl
int
or
mov
inc
cmc
inc
and
icebp
scas
add
aaa
lahf
jge
std
mov
negb
clc
pop
adc
nop
mov
adc
scas
test
lret
aad
sub
xor
fdivs
inc
mov
cmpsl
jb
loopne
push
mov
xchg
es
scas
push
jl
mov
sahf
pusha
ss
aam
out
stos
std
mov
or
test
sub
mov
mov
idivl
test
loopne
imul
dec
add
loop
cmp
out
mov
repnz
jne
js
and
push
in
dec
dec
adc
xor
xor
incl
jg
cmp
stos
lret
fcomps
imul
cmp
push
pop
pop
pushl
std
imul
inc
sti
mov
jnp
shrl
popa
sub
stos
xchg
mov
mov
in
out
push
xchg
add
add
xchg
pop
sub
jg
cmp
xchg
call
loope
daa
fldt
mov
sbb
cmp
sub
cmc
scas
pop
gs
dec
ss
push
dec
test
and
mov
mov
jge
stos
cld
push
andb
ljmp
xchg
mov
or
lock
loopne
pop
mov
push
cmp
mov
xchg
imul
pop
sahf
lea
push
mov
mov
sbbb
adcb
js
and
mov
mov
lock
mov
push
and
das
push
add
sub
inc
add
xchg
arpl
jno
adc
rolb
jg
stos
cmp
mov
outsl
fwait
xadd
loopne
push
or
sub
lret
pop
vmread
xchg
push
scas
sbb
in
mov
dec
sarl
and
dec
dec
add
ds
int3
or
jo
std
dec
mov
test
pop
outsl
jp
cmp
jbe
movsl
mov
push
dec
icebp
fsub
sbb
push
cli
ja
leave
fisttpll
pop
insl
sbb
push
push
inc
lret
cli
push
call
out
insb
sub
push
push
pop
addr16
pop
dec
inc
cmpsl
adc
popf
adc
mov
add
cmpsb
xchg
xlat
imul
divl
mov
pop
add
push
pushf
push
sub
lret
clc
pop
gs
cld
mov
xchg
or
xor
and
jl
push
sarb
call
inc
das
test
lock
inc
sub
fucomip
dec
pushf
fdivrs
fcoml
mov
adc
lret
sbb
lcall
sub
sub
sbb
mov
call
jg
and
scas
and
pop
or
dec
mov
je
jb
jecxz
fisttpll
mov
out
mov
lcall
xchg
mov
dec
or
shll
js
in
pop
push
cwtl
pop
ret
in
loop
mov
je
aad
and
push
xchg
jno
iret
cli
jae
mov
jo
dec
sub
mov
xchg
mov
lods
adc
sub
dec
mov
enter
jno
orb
xlat
pop
loopne
mov
add
cli
or
push
cmpsl
or
mov
fldt
sub
int
mov
mov
insb
fdivrs
popa
daa
inc
xchg
mov
add
inc
in
push
ljmp
add
scas
mov
out
notb
or
mov
jae
push
xor
loopne
int
mov
int
dec
idiv
cmp
cs
cld
cli
jae
pop
mov
push
adc
mov
fnsetpm(287
dec
std
subl
sub
test
sahf
stos
xchg
shll
stos
sbb
in
mov
mov
stos
mov
xchg
dec
fisttpl
pushf
stc
outsl
cld
stc
xor
dec
jl
in
js
fistpl
xlat
dec
cmc
lods
jbe
mov
dec
add
loopne
shrb
stos
push
xchg
push
daa
fistpll
adcb
int3
out
and
cmp
jle
scas
inc
test
icebp
cmpsl
add
jle
ljmp
shll
lock
jg
xchg
leave
mov
mov
frstor
lahf
fs
jne
lcall
js
cmp
mov
sub
rclb
xchg
jne
std
add
adc
stos
pop
pop
fiaddl
mov
xor
inc
adc
dec
mov
push
cli
es
push
fistpll
or
mov
or
jle
or
scas
adc
add
xchg
es
mov
lods
arpl
add
xchg
xchg
lret
dec
notl
jg
fisubrs
mov
bound
addr16
xchg
mov
mov
push
mov
jmp
fwait
push
mov
cmp
nop
mov
test
fcoml
sbb
inc
fwait
push
mov
ljmp
adc
add
push
inc
jge
aad
cld
mov
pushf
dec
sahf
out
cmp
xlat
outsb
mov
bound
dec
fdivrs
xchg
bound
inc
sbbb
pop
mov
lcall
jne
xor
sbb
dec
ljmp
shlb
mov
sbb
xchg
sbb
scas
adc
shll
sub
adc
lods
test
push
jle
in
mov
xchg
ret
push
sub
jmp
and
insl
push
arpl
fsubl
mov
pusha
test
test
sub
pop
je
dec
inc
fcoml
push
jmp
out
inc
add
notl
xlat
mov
fnstsw
popf
sub
sbbb
roll
mov
sub
xlat
jmp
push
push
xchg
mov
sub
fwait
cld
push
idiv
test
cmpb
cmpl
push
dec
clc
adc
jmp
xor
cmp
pop
std
stos
dec
lock
cmp
ljmp
aaa
in
jp
xor
es
rolb
fwait
xchg
dec
mov
xor
sbb
adc
and
mov
in
push
shrl
in
loopne
dec
aad
xlat
es
divl
cmp
mov
andb
leave
adc
popf
out
adc
mov
cs
mov
rclb
stc
mulb
pushf
push
popw
add
dec
cmpb
loopne
jo
mov
jno
dec
xchg
int
pop
jecxz
adc
lods
ret
icebp
and
sbb
push
sbb
das
cmpsl
xor
lock
jns
mov
jne
pushf
out
data16
xor
jl
push
pop
and
fisubrl
outsb
inc
add
outsb
test
das
cltd
xchg
mov
pop
ja
call
jg
mov
pop
mov
pop
insb
mov
ficoml
cmp
ja
and
add
dec
mov
or
stos
add
test
jo
push
ret
imulb
sbb
movsl
addr16
js
cmp
std
fldt
dec
sbb
in
lock
sbb
ret
sub
adc
in
inc
pop
mov
mov
fs
stos
jbe
jns
fimuls
sbb
xor
sbb
in
nop
adc
sbbb
cwtl
nop
sub
sti
dec
cmp
pop
sub
lcall
add
test
lods
pop
mov
xor
int
jp
and
ja
loopne
inc
xchg
jmp
pop
fs
scas
jbe
psllw
pop
addr16
mov
jae
push
fsubrl
fildll
xchg
pop
push
add
popf
pop
dec
jle
mov
sti
and
jo
pop
xor
andl
dec
ror
mov
cmpb
mov
into
mov
mov
mov
out
dec
scas
xlat
jg
adc
in
dec
mov
ljmp
sbb
mov
jl
lret
fistl
inc
jae
mov
dec
mov
jns
xchg
jge
aaa
push
cmp
mov
xlat
pop
xchg
xlat
jbe
cld
jns
xchg
xor
cmp
fwait
dec
ret
dec
cmc
sub
pop
imul
dec
in
cli
xchg
push
sbb
sub
cmp
insl
leave
ja
add
lds
jle
rol
xchg
out
cmp
cld
dec
loop
adc
or
jge
mov
pushf
aad
sub
xor
adc
pop
cmp
ja
cmpsl
pop
pop
test
jno
xchg
xlat
rclb
push
sub
pop
mov
mov
out
or
cmc
ret
sar
cmp
xlat
aam
xchg
xchg
shlb
jg
pop
dec
mov
adc
pop
jge
or
in
and
lods
lahf
in
add
lds
xchg
inc
adc
ret
aam
jge
dec
dec
stos
adc
or
sbb
stc
lock
mov
adc
std
lods
jecxz
aam
xor
call
repnz
in
or
xchg
add
jno
loop
sbb
pop
and
lea
xor
clc
add
hlt
ljmp
cmp
jne
mov
fisttps
jns
xor
movsb
stos
subb
pop
push
or
stc
pop
pop
mov
jno
and
ret
or
push
adc
jg
sub
dec
xor
mov
inc
fadds
aad
je
pushf
in
imul
cmp
out
inc
xlat
adc
xchg
xchg
add
inc
leave
jne
nop
add
fsubl
gs
stc
or
add
testb
adc
cld
or
jle
sub
nop
test
push
call
inc
loopne
fisttpll
jnp
mov
std
test
adc
sub
aas
inc
sub
jbe
jmp
xor
cmp
dec
pop
outsb
cmp
int
call
fldcw
or
jo
pop
push
icebp
fmull
nop
and
xchg
nop
aas
repz
cmp
or
sub
cs
shll
dec
imull
xlat
pop
dec
jns
imul
sbb
adc
pop
popf
dec
shll
xchg
xor
xchg
stos
fcmove
js
loop
cmc
fsubl
int3
in
xor
sbb
hlt
xorl
dec
dec
jno
rclb
or
bound
or
dec
icebp
add
sarb
insb
or
lahf
and
arpl
jl
mulb
mov
cmp
mov
xchg
mov
mov
push
adc
sti
lret
push
add
pop
dec
push
ljmp
bound
aad
outsb
stos
insl
mov
pusha
adc
out
in
xchg
sbb
add
in
pop
cmp
pop
push
xchg
inc
push
cmp
jge
and
cli
ljmp
fdiv
dec
push
icebp
sub
mov
xchg
gs
mov
pop
daa
cltd
imul
lock
fwait
and
or
shll
push
icebp
sahf
pushf
inc
mov
or
cmp
mov
cmp
push
ss
or
scas
loope
inc
sub
cmpsb
or
or
cmp
pop
push
xor
jbe
repz
bnd
loop
fnstcw
andl
or
enter
cmp
adc
dec
push
arpl
inc
and
adc
dec
adc
dec
push
jp
mov
ljmp
xchg
mov
test
xchg
inc
pop
sbb
xchg
xchg
push
adc
sarl
loope
mov
lret
pop
stc
imul
hlt
je
out
cltd
testl
lods
push
bound
add
jge
jg
mov
xor
sbb
xor
mov
sbb
sbb
repz
mov
loop
cld
inc
scas
mov
fsub
xor
pushf
sub
mov
pop
adc
xchg
int
push
mov
roll
loope
cmpsl
add
das
pop
idiv
fs
test
sbbl
push
add
pop
enter
mov
subb
test
mov
or
inc
sub
mov
mov
or
lahf
add
loopne
addr16
mov
fldt
xchg
bnd
das
loop
bound
sbb
or
lret
mov
outsb
inc
in
or
xor
shlb
int3
idivb
xor
inc
scas
pop
lret
pop
in
dec
in
pop
xor
mov
mov
and
xor
mov
insl
mov
push
pop
push
mov
jne
cmp
dec
imul
jle
mov
mov
jge
push
std
stos
pop
into
xor
xchg
adc
outsl
mov
out
call
or
orl
mov
adc
mov
pop
andl
dec
js
lea
push
pop
pop
insl
mov
sub
fdivrl
call
jne
push
mov
fbstp
push
and
jne
adc
jnp
cmp
adcb
mov
push
adc
sub
repnz
stos
outsl
sub
add
cmp
pop
jle
mov
popf
imul
cmc
les
xchg
mov
push
jle
out
sahf
out
inc
and
jmp
aas
int3
or
out
jp
std
push
loop
adc
test
xor
xchg
syscall
outsl
aam
dec
xor
insl
sti
repnz
leave
xchg
mov
inc
in
lret
gs
andb
lret
pop
nop
sti
push
ljmp
inc
cmp
cmp
xchg
adc
fwait
mov
movsb
or
out
add
cwtl
sti
movsl
xchg
jne
iret
xchg
gs
scas
jp
mov
mov
mov
push
sbb
fisubl
rcrl
or
adc
xchg
sbb
imul
cmp
jmp
pmaxsw
xor
pop
movsl
dec
lods
xlat
stos
out
fisubrs
mov
mov
out
jmp
pushf
lahf
or
outsl
push
and
pop
push
push
jl
aaa
sarb
jno
into
jl
mov
or
mov
pushf
jmp
inc
push
pop
imul
mov
xor
jbe
mov
push
xor
jnp
in
incb
scas
adc
nop
fwait
push
jecxz
fsubrp
adc
fwait
inc
inc
call
mov
stos
cmp
inc
pop
push
daa
lds
data16
test
cwtl
mov
adc
jl
cwtl
mov
pusha
sub
mov
test
or
shrb
xchg
cs
dec
jge
inc
mov
out
in
scas
daa
data16
sbb
mov
ret
fists
xchg
jbe
testb
outsb
mov
pop
mov
lods
jge
adc
sbb
loope
cmc
jno
clc
cmpsb
jnp
cld
test
xchg
pop
std
jne
inc
mov
test
pushf
into
pop
and
sbb
es
xchg
aad
sbb
aad
sbb
test
mov
in
loope
mov
sti
jmp
inc
sbb
popf
mov
scas
je
inc
sahf
xchg
aas
into
sbb
nop
mov
sbb
mov
push
lret
ret
fs
push
jp
rcrb
mov
add
test
mov
in
dec
push
mov
mov
xor
push
jl
dec
cmpsb
xor
adc
xor
inc
lret
int3
xor
fsubs
icebp
mov
lods
idivb
es
sub
sti
xchg
sti
xor
insl
sti
inc
lock
jb
cmpsl
jnp
in
jg
push
mov
dec
xchg
stc
cmp
jge
inc
inc
cli
add
notb
dec
sbb
sahf
xchg
leave
sahf
pop
lret
pop
repnz
xor
pop
adc
pop
scas
lock
js
gs
push
stos
cmp
jmp
out
mov
xchg
stos
push
jl
jbe
mov
add
loope
xor
pop
int
popf
pop
loope
mov
nop
sub
inc
mov
cmpsb
bound
jecxz
arpl
icebp
jp
lret
pop
lret
cld
sbb
mov
testl
loope
fld
mov
arpl
jb
dec
mov
data16
cmpsb
jb
jbe
xor
or
mov
jp
test
xor
inc
or
lods
mulb
xor
sub
call
cmp
mov
fbstp
push
dec
cltd
sub
jecxz
mov
sbb
cli
fwait
popa
arpl
push
cmp
push
xor
in
push
testb
test
dec
mov
add
ljmp
mov
gs
or
xor
jae
ffreep
shlb
inc
mov
icebp
cli
jl
test
movsb
imul
push
lds
pushf
push
data16
mov
shll
movsl
sub
inc
pusha
das
inc
cmp
lret
hlt
adc
int3
sub
push
repz
jmp
and
jne
loopne
in
jp
cmp
sahf
push
mov
aas
sbb
aas
adc
mov
sti
fnstenv
ljmp
movsl
sbb
aam
mov
out
in
mov
sbb
lahf
fdivrs
repz
jl
lds
xchg
jo
mov
xor
rcrb
loope
movsl
loope
pop
in
inc
and
xchg
in
sub
push
lods
xchg
inc
test
loope
add
sbb
pop
inc
xchg
mov
or
ja
dec
int
dec
icebp
enter
roll
adc
cmc
std
ret
and
pop
jp
andl
cmp
jmp
xlat
aad
test
fdivs
xchg
addr16
repnz
pusha
sbb
dec
fnstcw
mov
lock
jo
or
push
mov
outsb
inc
shr
mov
or
pop
mov
sub
pop
mov
les
cmc
insb
shll
addr16
dec
push
mov
shll
scas
and
pop
cmp
cmc
inc
jae
in
aam
cbtw
inc
xlat
fnstenv
mov
test
sub
push
add
dec
movsb
mov
int3
fadd
pop
jp
lods
gs
fwait
add
sahf
mov
cs
addr16
mov
xchg
jg
sbb
orb
in
popf
and
aam
fcoml
dec
pop
push
aam
push
dec
fmul
movsl
dec
jo
adc
push
cmp
jge
in
movsb
in
arpl
mov
popf
or
jo
out
cmpsb
pop
mov
cmp
sub
push
pop
fs
sbbl
or
idivb
and
je
insb
pop
sbb
in
and
mov
adc
ror
xorl
or
sarl
sti
fdivrl
jg
push
movsl
push
cs
repnz
mov
sub
imul
dec
out
jg
sbb
inc
inc
and
sbb
add
aad
cmpsl
std
mov
aam
jmp
addl
dec
mov
lahf
cmovg
ret
call
cmpsl
dec
push
push
inc
aas
in
lahf
ficompl
xchg
mov
xlat
shr
hlt
sbb
je
hlt
popa
dec
aas
mov
gs
ret
xchg
jg
subl
mov
lcall
xchg
mov
push
push
dec
jae
mov
sub
aaa
or
and
or
mov
jbe
mov
mov
daa
out
sub
pop
adc
outsl
aam
push
fsubs
fwait
sbb
pushf
sub
jo
push
int
push
cld
add
out
pop
sub
lcall
xor
mov
in
pop
push
imul
int
int
dec
push
in
add
icebp
cwtl
xchg
or
add
sub
ret
addr16
jbe
das
inc
imul
xchg
dec
xchg
ret
add
sbb
dec
sar
jb
sarl
inc
cmp
shlb
data16
fadds
ds
jmp
ret
dec
xchg
mov
lret
andl
push
adc
push
scas
aam
lahf
stos
mov
dec
out
sub
out
xlat
test
sbb
sbb
fidivs
jbe
fs
cmc
lahf
or
inc
adc
push
xlat
hlt
jb
xchg
mov
xor
mov
shrl
or
insl
inc
sbb
lods
repz
add
imul
pop
pop
fcmovnb
leave
popf
add
xor
cltd
or
mov
or
pop
jp
and
or
and
inc
movsb
xorb
add
imul
out
stos
mov
pop
adc
inc
push
adc
int3
sbb
sub
mov
pop
outsb
mov
clc
stc
or
sbb
adc
aas
push
fisttpll
xchg
icebp
dec
adc
das
and
dec
xor
mov
or
mov
cmp
sub
xor
ljmp
cs
jmp
jle
ffree
imul
rorb
xchg
rcl
push
roll
sub
push
sarl
or
add
test
pop
aaa
out
lock
add
sbb
cli
roll
fbld
sarl
pop
adc
fcompl
scas
mov
inc
mov
jbe
std
inc
push
inc
cmpsl
movb
pop
out
mov
jne
int
repz
lcall
push
xchg
xor
in
xchg
fs
pop
dec
sti
push
pop
add
mov
shlb
or
adc
push
dec
cmp
cmp
xor
jns
stc
adc
push
stc
nop
xor
jae
mov
in
das
rcll
add
test
loop
cmc
loopne
dec
xchg
cmp
mov
xchg
ficompl
daa
scas
popa
jecxz
xor
test
jae
das
mov
mov
hlt
ss
lock
xchg
adc
pop
test
mov
out
mov
push
xchg
dec
adc
insl
adc
adc
xchg
fimull
ret
xchg
inc
imul
psrad
jae
in
pop
adc
add
sbb
dec
xchg
lahf
ds
cmpsb
lret
lods
dec
xchg
je
sbb
ja
mov
sbbl
push
jge
jo
sub
mov
shlb
sahf
jp
mov
cwtl
insb
jb
sbb
sar
lcall
mov
sub
adc
nop
loopne
adc
into
mov
jns
cmpsl
and
mov
jmp
lret
stos
rdpmc
sbb
and
or
and
cwtl
inc
pop
mov
andl
lods
push
in
push
xchg
and
adc
mov
stc
mov
adc
das
sub
out
jns,pt
fwait
mov
xchg
cmovns
cmp
sbb
int3
or
mov
je
out
mov
inc
and
mov
and
sahf
outsl
dec
cs
lods
xor
test
fs
mov
scas
pop
or
out
mov
adc
jp
les
xchg
sub
xor
xchg
inc
xor
xchg
mov
sbb
mov
jl
jae
mov
cmp
mov
or
aas
pusha
repnz
les
cmp
insb
insb
lods
jl
adc
xchg
jg
popf
xchg
xchg
in
jae
sbb
cmp
push
xchg
pop
in
jecxz
mov
xor
xor
ret
int
mov
xchg
scas
lahf
cmp
add
xchg
push
fcoms
pop
xor
xchg
cwtl
adc
frndint
jne
fld
adc
out
test
adc
xchg
int
loope
push
cmp
mov
mov
cmp
push
aad
and
in
mov
push
icebp
sti
std
push
enter
and
rcll
mov
pop
lods
cltd
std
cld
xchg
and
mov
jge
pushf
fs
jle
xchg
adc
popa
inc
imull
push
lcall
sub
ljmp
sub
js
nop
insb
mov
pusha
fadd
imul
or
xchg
bnd
mov
aam
int3
mov
imul
mov
mov
xor
dec
xchg
aas
or
mov
jmp
jnp
iret
cmp
es
pop
ds
bound
int
movsl
arpl
mov
or
mov
test
cmp
or
bnd
push
xchg
mov
sbb
loope
out
movl
fildl
nop
in
js
cmp
push
out
mov
inc
jg
xor
repnz
mov
mov
test
testb
xchg
push
or
cwtl
arpl
push
mov
pop
xchg
ss
testl
mov
dec
mov
inc
ss
inc
dec
stos
mov
sbb
mov
pop
outsb
mov
inc
sbb
sahf
xchg
out
inc
int
lds
and
and
ficoml
scas
or
inc
xor
test
int3
fsub
scas
push
jnp
gs
xchg
insb
sbbl
mov
cmp
rol
iret
sub
dec
dec
jecxz
mov
ljmp
push
jns
aas
xor
mov
jecxz
gs
insb
scas
mov
sbb
inc
and
loope
sti
mov
aaa
sbb
cmp
adc
push
mov
push
enter
in
cmpsb
dec
add
jnp
ret
jmp
shrl
insb
add
in
or
mull
push
rorb
sbb
push
mov
adc
sub
cmc
pop
aaa
mov
jnp
and
hlt
pop
mov
mov
movsb
sti
pop
inc
je
mov
mov
jbe
xchg
fmuls
shll
iret
lretw
loop
test
mov
rolb
pop
mov
push
pop
pop
aad
fldcw
test
add
pop
push
add
ret
add
ror
je
push
or
test
and
sbb
and
mov
sub
stos
pop
lret
mov
or
fildl
cs
add
jle
ret
in
shrb
jmp
xchg
out
pop
ss
popa
xchg
mov
and
dec
sub
push
aas
das
incb
xor
jb
mov
mov
inc
jne
pop
iret
cwtl
jecxz
jge
adc
push
lcall
jg
lods
repnz
push
sbb
das
test
lahf
repnz
hlt
xchg
loop
std
cs
add
jge
cmp
sub
jb
outsb
mov
xchg
and
or
sbb
push
jb
leave
pushf
push
add
mov
cmp
arpl
scas
negb
sbb
push
mov
cmp
and
lret
mov
xchg
mov
sarb
out
mov
push
and
sub
cmpsl
loope
sub
push
mov
in
test
mov
mov
mov
push
ret
cmp
add
push
lret
jbe
jge
addr16
sub
or
fst
xor
sarb
roll
cmc
mov
jg
inc
je
jmp
imul
push
fs
lcall
repz
xchg
stos
mov
rcrb
pop
hlt
jle
add
push
pop
fnsave
fildll
scas
mov
iret
adc
stos
pop
scas
push
sub
notl
sub
int3
adc
push
xor
popf
cmp
fists
stos
push
mov
mov
in
clc
test
and
dec
pop
testl
pop
or
xchg
and
scas
loope
sahf
ret
js
gs
movsl
jp
xchg
adc
sub
jl
bound
add
sbb
adc
sbb
jle
cmp
insl
and
faddl
adc
mov
xor
pop
and
push
or
jbe
pop
inc
pop
xchg
rcrl
sub
lods
insb
lcall
jecxz
subb
push
xchg
adcb
pop
je
cld
xchg
push
daa
dec
out
call
push
sbb
test
fcoms
ret
mov
subb
shr
in
bound
addr16
loopne
add
repz
add
into
dec
movsb
or
mov
xchg
fstpt
jb
fldcw
cmp
rol
sti
popa
and
icebp
fidivl
imul
data16
push
jmp
inc
inc
imul
add
mov
repnz
movsb
jnp
pushf
popa
rcrb
xchg
in
dec
mov
mov
jmp
pop
adc
or
daa
seta
mov
cmp
xor
fwait
rolb
push
fld
imul
mov
add
call
jmp
rcrl
clc
mov
dec
cmpsl
ljmp
fcmovbe
or
push
les
sub
push
xlat
repnz
arpl
xchg
stos
xchg
movb
mov
sbb
sub
sti
or
cwtl
aam
xchg
dec
inc
jl
popf
push
mov
push
ficoms
shll
test
or
fs
pushf
push
sub
fs
dec
xor
ljmp
int3
stc
imul
loope
xchg
jns
jb
mov
jb
sahf
aad
xor
rorb
push
scas
test
scas
xor
pop
inc
jg
in
lds
test
and
jmp
dec
dec
ss
dec
jecxz
adcl
xor
cmpsb
cmpsl
roll
arpl
jbe
xor
fucomp
inc
aam
cmp
popf
test
or
fildll
mov
pcmpgtw
sub
stc
xchg
mov
inc
mov
ss
or
cmp
loop
pop
fcmovnbe
outsb
mov
aad
aad
xor
cmpsb
or
jge
xor
call
in
inc
sub
push
or
ret
dec
rcr
xchg
rcrl
xchg
xchg
cld
aaa
loop
dec
pop
fptan
mov
or
pop
push
out
mov
jp
cmp
test
mov
imul
xor
sub
cmp
mov
mov
scas
hlt
out
sbbl
fcomip
xor
xlat
inc
dec
mov
add
or
push
mov
arpl
xor
iret
cmp
push
mov
dec
jno
mov
add
insl
xchg
aam
sbb
push
jae
lret
sbb
int
inc
inc
std
mov
jmp
dec
icebp
jb
ret
in
mov
lahf
adc
cmp
pop
int3
add
xchg
test
daa
pushf
mov
pop
inc
mov
cmc
mov
incl
std
mov
pop
xchg
cmp
xchg
xorb
stc
sbb
adc
stos
cmp
std
jl
mov
aam
fbld
nop
xorb
into
inc
mov
push
fs
and
adcl
mov
daa
js
sub
jl
icebp
or
adc
scas
pop
bndstx
inc
popa
out
xor
dec
mov
mov
iret
pop
idiv
lock
jae
outsb
ja
mov
js
fsubrs
jg
ljmp
stos
in
or
inc
and
xor
pushf
lahf
sbb
cmc
fnsave
push
es
add
test
and
ss
push
jge
push
stc
adc
jecxz
dec
loopne
std
stos
rorb
inc
arpl
test
data16
or
aas
or
or
in
loop
lcall
js
lods
xorl
out
stos
iret
inc
and
push
push
ds
sub
repnz
jb
hlt
push
pop
nop
mov
cmc
leave
pop
rcll
xchg
ficomps
dec
out
and
movsb
xor
dec
adc
sti
cmp
mov
push
lock
inc
hlt
mov
jp
mov
mov
inc
adc
sarb
add
jbe
mov
xor
negl
push
and
push
out
rcl
mov
pop
sti
push
add
sbb
outsb
repnz
inc
mov
cmpl
arpl
xor
sbb
enter
mov
lods
fidivrs
add
pop
mov
dec
jmp
sub
iret
dec
mov
ljmp
ret
loopne
pushf
and
mov
pusha
fwait
jbe
jp
gs
pop
push
cmp
inc
mov
xchg
decl
pop
push
repz
aas
cmp
jno
xor
sarl
xchg
inc
fisubrs
jne
jb
sbb
gs
dec
mov
stos
mov
in
fwait
mov
sub
jo
xor
sub
popa
out
or
push
xor
sub
push
sub
sbb
fs
xorl
xchg
inc
ror
push
mov
mov
ret
jne
push
push
aaa
sbb
mov
mov
xor
in
aaa
xchg
arpl
dec
sub
xor
sbb
jno
or
test
dec
cltd
and
cmp
cltd
hlt
testl
imul
movsb
jl
mov
shrl
lods
js
ja
pop
fnstenv
sahf
imul
std
jl
cwtl
sahf
jecxz
dec
pop
xlat
lahf
loop
mov
cmpsl
push
fstl
cltd
cmp
push
mov
out
jb
cmc
jg
xor
js
leave
xor
icebp
pop
testl
mov
sub
jno
psubd
xchg
pop
xor
cmpsl
sbb
stos
push
mov
insb
inc
jae
loop
sub
jl
push
mov
mov
xchg
mov
and
add
sbb
cmc
mov
nop
xlat
test
icebp
dec
push
mov
mov
mov
ucomiss
jnp
test
inc
push
jae
loop
jae
test
push
jbe
dec
pop
sbb
repnz
mov
push
xchg
fiaddl
mov
int3
mov
fisubl
or
xor
lea
or
sub
sbb
mov
mov
or
shlb
jl
jo
push
cmpb
or
sub
outsb
pusha
mov
cmpsl
push
mov
dec
inc
rclb
jne
out
mov
mov
adc
data16
loop
in
or
add
dec
rep
mov
and
jl
push
sbb
lods
cs
mov
test
push
rcrb
push
cwtl
mov
and
rcl
nop
pop
cltd
cmpsl
xorl
pop
mov
into
addr16
sbb
test
jge
dec
movsl
arpl
push
jno
rorb
daa
rorb
imul
fmul
and
jp
shll
sub
pop
jl
xlat
pop
push
aam
ljmp
and
fadds
test
cld
jg
push
mov
add
push
data16
xchg
jbe
loope
mov
outsl
insl
dec
sub
sbb
js
aad
fwait
cmp
inc
aam
inc
sbb
mov
dec
inc
aaa
mov
out
inc
cmc
pop
loop
pushf
enter
ret
mov
cmc
and
cmc
cmp
xor
cmp
fsubrl
roll
cli
stc
pop
mov
xchg
mov
mov
jmp
jnp,pt
inc
test
outsl
or
inc
movsl
sarb
mov
push
in
pop
xor
ss
loop
inc
mov
add
icebp
xlat
inc
outsb
jle
test
sub
lea
sbb
bound
dec
push
sub
dec
and
cmpl
pop
data16
and
jno
cwtl
mov
mov
push
movsb
xor
cmpsl
ja
xchg
jmp
adc
push
adc
test
cli
out
or
pop
gs
dec
pushl
shr
and
out
test
sub
dec
cmp
push
pop
inc
cld
pop
outsb
fsubrl
or
movsb
imul
xchg
mov
mov
cwtl
cmp
mov
iret
stc
repz
pop
ss
ret
xor
adc
pop
call
jbe
mov
mov
es
sub
loope
mov
insl
xchg
fwait
test
dec
adc
cmp
jp
negb
jb
jae
mov
rcl
je
jns
xor
divl
sbb
lods
xor
mov
jno
mov
cmpl
cmp
inc
stos
push
xor
mov
jecxz
xchg
lret
mov
out
sbb
clc
jecxz
in
add
icebp
cmp
adc
xor
pop
ljmp
and
cwtl
imul
iret
lods
mov
ja
mov
mov
repnz
in
push
iret
nop
push
test
dec
inc
cmpsl
xchg
dec
test
int
stc
fsubrs
push
sub
in
mov
or
stc
pop
lret
fsubl
mov
jmp
andnpd
cmp
mov
pop
pop
stc
arpl
divl
add
mov
cmpsb
stos
outsb
mov
xor
mov
and
and
fistl
scas
pop
sbb
jnp
test
fimuls
pop
outsb
or
aas
js
daa
jne
rolb
insb
clc
push
ret
cmp
mov
ret
add
xchg
pop
xchg
mov
inc
aam
int3
test
rdpmc
lret
sub
jl
ss
loope
adc
or
and
xchg
lock
jno
pop
adc
jnp
movsl
push
mov
je
push
icebp
cmp
vdivsd
mov
pusha
mov
out
scas
inc
mov
mov
arpl
jno
adc
scas
cmp
movsl
sbb
push
scas
lods
and
arpl
jnp
std
add
imul
xchg
pop
mov
not
mov
jbe
mov
inc
cmp
ss
rol
cmpl
sbb
imul
sbb
cmp
outsb
mov
jb
cmp
cmp
in
cltd
mov
push
xor
dec
mov
sbb
mov
ds
outsb
inc
adc
push
aad
daa
ljmp
hlt
dec
mov
jmp
in
cmp
in
dec
and
rcrl
cmp
fidivrl
cmp
fadds
or
xchg
inc
inc
arpl
testl
jecxz
cwtl
pushf
mov
loopne
sub
movsb
in
or
mov
and
sbb
pop
imul
dec
add
fsub
rcrl
arpl
out
ds
jo
adc
push
mov
lret
adc
adc
fsts
sarl
cmp
add
xchg
pop
mov
mov
filds
cs
addb
shl
ret
pusha
pop
lcall
data16
fldcw
ds
bound
movsb
jae
pop
add
pop
data16
imul
scas
mov
push
fadds
nop
jmp
stos
cld
sbb
je
je
mov
push
and
inc
jno
mov
xchg
add
adc
stc
push
sbb
sbb
jp
push
int
jno
repnz
ja
xor
insb
jae
push
fcom
add
lods
mov
mov
imul
in
mov
mov
push
fcmove
cwtl
mov
stc
mov
dec
leave
popl
inc
xchg
loopne
test
insb
call
mov
xchg
call
fistpll
je
fnstenv
jbe
loopne
sbb
rcl
sub
fdiv
sub
fcmovne
jae
loope
jb
clc
inc
fcoml
ds
xchg
pop
or
int
loop
pop
pop
test
xchg
jne
out
dec
fstps
cld
cmpsl
lds
mov
lcall
insb
loope
jge
in
pop
mov
in
popf
mov
dec
jae
add
cmp
mov
pop
js
sbb
and
pop
shlb
ja
xchg
push
test
imul
fcmovnbe
bswap
mov
ljmp
rcl
xchg
rclb
add
mov
add
or
divb
lcall
clc
push
lcall
mov
lahf
or
cmp
mov
mov
sbb
or
hlt
sub
mov
push
cmp
iret
push
sahf
imul
call
jmp
mov
lods
or
gs
xchg
ss
and
and
fxtract
ljmp
into
arpl
mov
ss
mov
mov
repnz
pop
les
pop
pop
loope
lock
mov
mov
or
not
jmp
inc
jns
mov
in
imul
aas
les
adc
je
push
mov
popf
lods
adcb
lret
in
std
shrb
mov
sarb
lret
mov
mov
lret
cli
lock
ds
test
jb
sbb
fwait
mov
push
push
sbb
je
in
js
sbb
or
inc
xchg
cwtl
mov
and
add
outsb
cmc
or
inc
jmp
add
mov
cwtl
out
xchg
or
and
movsb
stc
in
and
je
daa
out
jp
mov
hlt
or
sub
repz
xor
aas
xor
lahf
outsb
push
xchg
sbb
and
addb
test
sbb
data16
cmp
ljmp
or
xchg
and
sub
hlt
adc
add
std
dec
cmc
imull
das
jp
orl
dec
sub
cmc
sahf
cld
les
sbb
lret
ret
lret
mov
ds
sbb
inc
dec
mov
pop
push
jns
dec
jge
outsl
adc
jo
add
and
fs
xlat
or
adc
push
dec
xorl
ret
movsl
jle
push
add
aaa
je
dec
mov
push
fsubl
push
ds
sub
in
stos
cmp
mov
pusha
sbb
or
jecxz
addl
push
xor
insl
jno
pop
imul
cmp
je
sub
test
std
or
sub
xor
mov
xchg
cmp
jl
mov
pop
add
inc
insb
aam
data16
ud1
iret
and
jae
sub
cld
xchg
dec
and
movsb
dec
in
add
in
insl
out
in
mov
test
roll
pop
pop
adc
arpl
mov
add
xor
aas
xchg
inc
test
lret
cwtl
mov
mov
aam
movsl
push
js
fcom
or
call
mov
pop
xchg
loopne
inc
cmc
scas
push
inc
and
xchg
cmp
ja
sahf
or
dec
mov
adc
out
pop
adc
mov
cmpsb
push
mov
fadd
leave
push
mov
iret
mov
imul
aaa
mov
jmp
push
adc
sub
lods
push
push
push
sub
fidivrl
sub
cwtl
add
sbb
inc
hlt
add
hlt
pop
jge
adc
cltd
and
cmp
data16
or
das
mov
cmpsb
in
ss
shll
jmp
add
mov
popf
mov
add
jo
dec
mov
lret
lds
push
test
icebp
add
mov
xchg
push
pop
mov
call
mulb
sti
dec
mov
pop
lods
mov
pop
dec
ja
xchg
jmp
dec
mov
hlt
lods
lret
sahf
rcl
scas
pop
xchg
aam
out
xchg
gs
mov
shll
test
inc
dec
lret
outsl
aas
push
ror
push
out
decb
jle
nop
int3
cmc
fists
outsl
fisubs
movsb
push
test
lea
xchg
cmp
fsubrl
into
adc
or
lea
cmpsb
ret
out
lret
jbe
ficomps
xchg
jmp
inc
out
sar
jge
daa
xchg
sub
loopne
mov
mov
orb
jne
sbb
mov
fwait
sub
jp
out
loop
fbld
jbe
out
inc
adcl
jne
icebp
adc
ds
in
xchg
idiv
in
fsubrs
sub
pusha
test
mov
cwtl
mov
sub
popa
cmp
inc
stc
cmp
ret
inc
into
dec
test
ror
and
sti
es
inc
shlb
fdivrl
jno
cli
in
pusha
mov
nop
idiv
pop
xor
iret
jnp
je
mov
data16
mov
adc
icebp
and
data16
stos
hlt
push
inc
test
xchg
inc
push
cmpsb
mov
jl
cmp
and
xchg
and
or
xchg
out
sbb
sbb
push
lahf
mov
xor
and
cmpsb
dec
or
sbbb
sub
cmp
xor
movsl
sbbb
dec
cmp
inc
pop
das
ret
adc
int
add
sub
push
es
insb
sti
cmpsb
mov
mov
clc
push
inc
popf
popa
andw
call
pop
push
mov
push
movsl
sub
shlb
sub
rorl
popa
push
push
loopne
cmp
fisttpl
fadd
hlt
aas
lahf
mov
push
mov
imul
test
mov
and
sbb
jnp
divb
iret
or
cmpb
inc
xchg
adc
ljmp
or
pop
mov
pop
inc
dec
movsl
fyl2xp1
and
addb
add
jle
push
movsb
push
icebp
or
and
frstor
mov
cmpsb
inc
lods
push
in
push
inc
lods
adc
aad
out
push
cmp
mov
in
xchg
jle
or
lea
mov
mov
dec
pushf
icebp
flds
test
ret
pop
dec
pop
clc
mov
sub
imull
or
ret
cmpsb
jne
sbb
vmwrite
xor
loopne
repz
rorl
popf
mov
pop
sbb
leave
outsb
mov
sub
xor
mov
mov
pop
lahf
cwtl
scas
jge
js
push
xchg
lcall
cmp
dec
and
int
dec
or
out
and
fstpt
test
and
testl
arpl
gs
or
fistps
shr
dec
push
xchg
ja
mov
cmp
pop
movsl
sbb
xlat
xorb
addb
or
iret
push
ja
or
xchg
sbbb
or
into
sub
test
inc
xlat
cmp
push
mov
shll
inc
test
xchg
xchg
dec
or
insl
fbld
cmp
popa
aam
push
call
adc
add
or
mov
rorl
lock
dec
xchg
jb
mov
std
outsb
dec
andl
lds
cmp
ret
popf
ds
js
outsl
inc
cs
adc
jecxz
stc
insl
lret
cmpsl
xlat
por
pop
jle
pusha
sub
ror
mov
inc
mov
adc
aas
xchg
imul
pop
sbb
insb
aad
lea
nop
inc
loope
xor
cltd
int
ss
push
or
xor
fwait
add
jmp
xor
test
push
repz
sub
call
mov
imul
or
mulb
out
xor
bound
mov
rclb
push
les
adc
leave
sahf
rolb
das
sti
fucomi
lods
sub
sbb
and
jbe
xor
sub
sub
test
xchg
imul
icebp
jmp
repnz
and
xchg
add
orb
lahf
out
movsb
rol
dec
fisttpl
jl
inc
les
mov
aas
cwtl
cld
decb
fs
pop
test
jne
loop
test
xchg
and
ja
adc
in
scas
cltd
das
cmp
xchg
jbe
or
push
sbb
or
mov
ss
aas
mov
gs
jecxz
push
mov
add
inc
stos
and
mov
ljmp
sub
and
nop
push
mov
xchg
mov
and
lea
mov
sbb
jno
sub
test
je
ja
imul
scas
mov
or
out
stos
lahf
sbb
iret
mov
fwait
popa
dec
mov
pop
add
jns
iret
cmpsl
cld
repnz
push
mov
and
xchg
repz
stos
in
mov
jnp
sub
mov
xor
cmp
adc
jbe
repz
xor
sbb
ds
ffreep
hlt
jo
mov
jecxz
ljmp
inc
jle,pt
stos
pop
out
cmp
cmp
inc
inc
call
or
mov
add
sub
xor
shll
mov
cmp
stos
bnd
in
adc
mov
push
mov
lock
out
iret
sub
shlb
je
jl
gs
lea
add
cmc
fwait
xchg
icebp
pop
movsb
or
push
jecxz
sbb
icebp
and
push
enter
cmp
scas
outsl
ja
dec
sub
pop
cmp
mov
xchg
out
pushf
adcl
and
push
imul
inc
and
mov
js
xor
stos
outsl
subb
cld
fisubrl
jae
jl
sub
fsubr
sub
out
lcall
or
popf
push
sub
push
fnstenv
rcrb
arpl
sbb
mov
pop
xchg
pop
and
dec
push
call
dec
fst
push
jnp
mov
jmp
clc
mov
int3
mov
in
scas
out
nop
addr16
mov
cmc
mov
gs
outsb
jb
pop
jbe
add
in
rcrb
and
setle
orl
inc
dec
push
dec
jne
lock
popf
call
xor
aas
loop
xchg
add
orl
mov
adc
popf
insl
sahf
or
test
xchg
call
loop
jns
scas
das
hlt
add
neg
cld
adc
xor
sbb
or
dec
bound
pusha
scas
sbb
dec
pop
into
push
ret
nop
in
popa
jne
insb
scas
xchg
dec
xchg
and
xor
idivb
into
pop
sbb
fistpll
pop
mov
and
aas
dec
rep
aaa
mov
sbb
lods
pop
mov
lea
add
jnp
jnp
mov
mov
aaa
adc
xlat
cs
and
fdivl
sbb
fcomp
cli
mov
cmpl
cltd
filds
mov
adc
lret
loopne
dec
repz
adcl
push
jb
sbb
dec
cmc
xchg
icebp
jns
jmp
sub
xor
cmpsl
pop
sub
inc
adc
sub
or
push
ss
push
out
lds
iret
lcall
jb
pop
outsb
dec
or
or
adc
pop
outsl
adc
jbe
sarl
iret
rcl
mulb
xor
js
fadd
pusha
mov
imul
xor
mov
jno
mov
xchg
stc
xchg
in
dec
sbb
and
ja
mov
dec
sti
jns
loope
in
gs
imull
mov
out
out
jnp
cmp
xchg
mov
mov
daa
jg
popf
scas
mov
sbb
adc
xor
jmp
mov
bound
and
jae
mov
call
pop
movsb
fsubr
popf
mov
ret
xlat
decb
popf
add
and
push
lea
adc
push
repz
ss
cmpb
sub
adc
sub
sub
push
test
enter
nop
inc
sbb
jno
enter
lahf
mov
fcmovu
xor
sbb
push
mov
jbe
cmp
out
and
aas
mov
xchg
mov
arpl
pusha
lret
and
push
fwait
inc
mov
lcall
mov
xor
les
mov
call
mov
xchg
pop
mov
in
fadds
sub
pop
mov
imul
divb
and
add
sti
jle
pop
mov
push
dec
aad
jno
pcmpeqw
popa
pop
add
int3
cmp
fmuls
call
push
fiaddl
repnz
xor
nop
jnp
and
gs
mov
in
shrb
int
and
cmp
mov
mov
std
or
addb
sub
cmp
pop
cmpsb
pop
loope
fldenv
int
into
mov
std
jle
push
mov
mov
mov
xchg
push
add
inc
imul
jne
cs
xchg
cmc
sqrtps
push
sbb
adc
xchg
jmp
push
cwtl
inc
dec
add
outsl
lods
mov
aas
adc
push
js
cmpsl
das
jle
shll
pop
jecxz
lret
fcmovnb
jo
fwait
mov
xchg
cmc
push
ds
mov
testl
sub
sti
pop
jo
mov
js,pt
jnp
push
insb
lock
fsubrs
cmpsl
fists
iret
js
inc
mov
dec
lods
pop
jl
cmpsl
test
rcr
scas
or
arpl
xchg
add
inc
test
push
mov
mov
jo
pop
aam
and
sbb
mov
outsl
pop
stc
sub
frstpm(287
scas
jns
add
out
out
adc
movb
push
mov
adc
pop
lods
jbe
pop
lds
stc
add
jp
sti
lea
lea
and
and
scas
jno
pusha
shll
jp
test
fisubl
sub
and
lret
xchg
dec
mov
push
aas
stc
mov
popa
add
roll
jb
adc
xor
or
inc
push
pop
push
push
xor
aas
sahf
pop
and
jmp
mov
fcompl
pop
mov
imul
mov
addl
insl
mov
push
jns
addr16
dec
xor
pop
popa
adc
dec
mov
mov
jl
xor
notb
and
outsb
pop
adc
int3
sbb
pop
mov
jg
mov
mov
push
jne
icebp
sti
jb
jp
lret
xchg
add
adcl
out
decb
ljmp
stc
pushf
xchg
mov
ljmp
or
mov
popf
test
out
xchg
xor
mov
cmp
in
out
ds
add
jns
inc
lcall
xchg
stos
ja
xor
mov
xchg
imul
jne
shld
sbb
in
push
and
sbb
in
sub
enter
adc
pushf
loopne
push
in
cmp
mov
and
pop
insl
inc
test
mov
adc
lret
shlb
out
mov
das
jecxz
mov
jne
jmp
ss
std
stc
scas
fdivs
cld
and
jae
sub
jbe
add
inc
xor
out
test
adc
ror
aam
hlt
test
cmc
inc
xchg
ss
cmc
mov
push
cs
mov
mov
loop
out
das
xor
shrb
fmull
repz
mov
sub
fdiv
movsl
ret
mov
sbb
test
mov
loope
es
loope
loope
xchg
jecxz
inc
and
xchg
jge
jnp
stos
inc
push
dec
dec
mov
sbb
dec
popf
xlat
push
mov
sbbb
jb
xchg
out
mov
test
pop
in
push
jecxz
and
xchg
sub
push
shll
jge
in
cmpsl
lret
xchg
repz
repz
mov
sub
imul
cmp
cwtl
mov
push
cltd
dec
pusha
and
jmp
fs
in
sahf
jge
cmp
mov
ficoml
xor
adc
cmp
xor
adc
inc
fcompl
xor
lret
pcmpgtd
or
inc
inc
mov
in
loop
cmpsl
mov
rcrl
call
xchg
int3
ret
jne
or
add
call
bound
into
mov
lods
jp
hlt
jne
pop
xor
test
cmp
in
into
ljmp
dec
sub
jb
mov
ret
inc
dec
aas
dec
xchg
push
sub
pop
icebp
dec
jno
imul
das
pop
sbb
imul
jno
dec
imul
movsl
ss
add
cmp
jne
mov
adcl
mov
lock
aaa
sub
test
in
xlat
sbb
mov
mov
jne
push
outsb
popf
pushl
adc
xor
dec
movsb
adc
in
jbe
add
int
pop
orl
imul
xor
xchg
jle
lahf
mov
imul
jge
cmp
sub
cltd
mov
push
call
repnz
mov
fmul
dec
sbb
roll
sbb
xchg
aad
mov
jmp
sti
mov
dec
xor
adc
jle,pt
sbbl
cs
lret
cmp
jbe
int
add
push
or
dec
arpl
mov
fnsave
int
fcoml
test
pop
cmc
dec
int
cmpsb
mov
mov
not
cmp
or
adc
outsb
negl
adc
mov
mov
or
xchg
dec
es
xor
sub
leave
dec
stos
negb
inc
jp
out
xchg
jne
push
adc
ret
fcmove
int
pop
out
repnz
xchg
add
leave
jae
es
add
in
test
mov
cmp
jge
lret
aaa
xchg
les
shr
cmp
xchg
jbe
jecxz
cli
mov
pop
jnp
imul
cs
or
inc
mov
mov
andb
sub
cwtl
sub
jbe
aas
mov
je
pop
dec
push
icebp
sub
and
sub
js
xchg
imul
xchg
in
scas
pop
fnstsw
sbb
mov
in
sbb
jo
pop
xchg
cltd
aas
cmp
cmp
adc
les
les
aam
test
cltd
and
lods
mov
pop
imul
addr16
idivb
mov
pop
inc
sbb
add
shlb
nop
sub
pop
insl
loopne
shlb
out
mov
iret
aam
adc
ds
xchg
mov
repnz
lds
jle
mov
out
scas
loope
push
dec
dec
xchg
jmp
mov
ja
pop
pop
sub
cmp
das
lahf
movsl
loop
mov
jle
jecxz
scas
add
inc
add
ss
add
mov
mov
cmc
cld
mov
insb
xor
fs
out
cmpsb
cmp
ja
es
fadds
mov
cmp
mov
and
xchg
test
pop
mov
jl
push
test
aaa
pop
jecxz
testl
stc
cli
out
imul
dec
lahf
xchg
xor
lea
loopne
std
cmp
add
fistps
push
dec
aaa
mov
in
inc
scas
jb
pop
and
flds
or
add
mov
sbb
push
inc
mov
jne
inc
test
and
xor
mov
jo
test
loope
xchg
jg
scas
imul
or
faddl
pop
sbb
push
shll
enter
inc
and
add
push
push
testb
cmp
sbb
test
sti
in
jbe
sub
lahf
sub
mov
xchg
sbbl
inc
and
sarb
daa
sub
sub
lcall
rclb
mov
rcrl
stc
icebp
fcmovb
mov
xlat
mov
adc
sub
test
inc
fidivrs
pop
mov
aas
imul
mov
xchg
inc
scas
popf
fstpt
push
sub
ss
enter
out
jno
push
fsubrs
iret
adc
test
lahf
sbb
push
jp
mov
add
push
outsl
mov
scas
xor
add
or
insl
out
add
shll
push
in
jns
mov
cmp
dec
pop
sub
xchg
subl
pop
add
sbb
pop
push
popa
enter
std
fs
into
outsb
cwtl
cltd
and
lods
lea
adc
or
icebp
fisttpll
in
add
jns
mov
dec
dec
cmp
stos
es
xchg
in
out
adc
test
dec
add
mov
fisubrl
movsb
mov
fnop
popa
mov
divl
push
inc
test
and
call
sti
aam
cmpsb
lahf
xor
cmp
outsb
xor
dec
and
inc
inc
xchg
xchg
add
into
ficompl
pop
inc
jmp
cs
scas
jnp
lret
ret
stc
mov
scas
andb
lret
addl
add
lock
or
or
cmp
inc
inc
xchg
or
stc
cmp
cs
pop
imul
test
mov
dec
add
nop
push
pop
das
xorb
loopne
out
xor
jo
mov
js
or
das
sti
sbb
int
in
inc
in
mov
or
mov
ja
ss
mov
sbb
mov
jp
daa
xchg
sbb
imul
mov
pop
outsl
pop
adc
jg
inc
xchg
xchg
inc
add
xchg
in
push
addr16
jo
push
enter
lret
push
scas
or
or
cmp
mov
pop
xchg
mov
mov
add
es
jne
mov
fs
lret
aaa
sbb
cmpsb
mov
iret
sbb
add
or
shlb
call
imul
int3
jns
out
jmp
lahf
stos
jns
setp
shrl
mov
addr16
pop
out
cmpsb
xor
repnz
cmp
mov
stc
daa
xchg
xchg
loop
mov
sub
imul
sbb
pop
je
ljmp
popa
cvtps2pi
scas
fistps
and
add
dec
xor
inc
andb
lahf
movsl
add
imul
aaa
loope
add
int
pushf
mov
inc
shlb
sbb
or
mov
sbb
shlb
lods
cli
and
mov
insb
jge
in
xor
test
xchg
popl
std
mov
push
xchg
loopne
movzbl
ret
ja
pop
fsubs
jb
inc
add
inc
subl
in
xor
aaa
mov
pop
xor
ja
lahf
pop
jp
xchg
or
dec
mov
es
js
jecxz
push
insl
push
inc
cmp
and
cmc
or
jno
aad
xor
mov
or
mov
inc
inc
pushf
and
add
or
test
push
mov
cmp
pop
cld
aad
fildl
push
leave
or
shl
dec
add
lock
lret
xor
std
lods
mov
push
mov
sub
mov
test
inc
aas
ds
sbb
ret
lds
pop
mov
scas
dec
pop
test
andb
clc
scas
int
scas
inc
dec
adc
mov
sub
mov
dec
out
jo
jno
push
push
fistps
int3
xlat
ret
jb
mov
push
adc
sub
aad
je
adc
in
or
mov
repz
pop
mov
rcrl
adc
sbb
repz
xor
mov
add
int
fucomip
je
out
xchg
mov
lret
fwait
dec
fsubl
lods
mov
and
cmp
pop
clc
jge
movsl
adc
fxch
enter
in
fnstsw
scas
iret
aaa
dec
jle,pn
cmpsl
aas
adc
dec
enter
subb
pushf
rclb
aas
inc
jne
aam
lret
insl
cmova
pop
rcll
and
adc
mov
fimull
lahf
mov
jae
push
scas
notl
pop
push
rcrb
frstor
inc
sub
jnp
or
iret
pop
mov
mov
and
inc
jnp
jge
mov
ror
aad
xchg
mov
dec
pop
das
sub
scas
sahf
xchg
cld
mov
inc
mov
cmp
cld
mov
in
out
mov
ljmp
xchg
test
in
outsb
jl
push
pushf
sbb
mov
push
sti
mov
push
into
cli
shr
add
call
sbb
out
xor
adc
dec
sbb
int
push
sbb
xchg
ficoml
mov
mov
mov
mov
push
jne
ret
ret
call
repz
iret
cmc
and
dec
js
ret
inc
leave
rcrb
lahf
mov
fstpt
and
xchg
sbb
call
sbb
jae
addb
cwtl
xchg
push
mov
mov
add
pop
jae
insb
sbb
mov
add
inc
int3
add
cmc
dec
dec
fs
and
jbe
add
outsl
fsubrp
fcmovnb
or
push
arpl
rorl
mov
xchg
inc
orb
dec
pop
push
imul
push
or
inc
and
push
lret
pop
push
jg
jmp
jmp
push
test
add
les
mov
mov
popa
lret
scas
push
push
mov
lcall
imul
hlt
into
cmp
ret
xchg
insl
pusha
ds
popf
clc
adc
test
xor
les
lret
rcll
cmp
pop
jno
mov
and
lods
mov
cmpsb
mov
push
outsl
mov
into
sub
push
mov
pushf
xlat
arpl
inc
jl
popa
loop
lds
js
mov
push
mov
insl
or
xor
cld
mov
movsl
test
or
mov
push
add
add
cltd
rcr
lret
loope
sbb
or
fdivl
mov
sub
jg
xlat
sub
xor
mov
mov
fstps
push
jmp
xor
pop
jnp
xchg
ror
cmc
scas
test
les
sar
rcl
imul
xor
cli
loopne
adc
sbb
sahf
test
sub
mov
cmc
push
xchg
aad
or
push
mov
and
inc
push
mov
jmp
and
mov
jbe
cmp
and
outsb
cmp
dec
fistps
cs
xchg
ja
fldenv
fiadds
ljmp
adc
adc
mov
shlb
aas
push
mov
inc
mov
in
pop
je
pop
xchg
clc
jo
pop
adc
push
and
cmp
add
and
mov
lahf
cmc
and
jns
jmp
orl
adc
cmpsb
xor
sahf
sarb
hlt
cltd
hlt
mov
or
insl
xchg
lods
mov
xchg
inc
pop
and
sub
aad
scas
fldcw
mov
mov
nop
xchg
sbb
hlt
ja
xchg
fcmovnu
pop
loope
mov
insb
shlb
dec
pushf
pop
and
and
pop
xlat
hlt
lds
inc
stos
dec
or
or
jge
lret
popf
adc
ss
mov
fwait
jb
repz
dec
push
pusha
fisttps
xor
sub
insb
mov
imul
nop
icebp
inc
into
xchg
xchg
sti
jl
jns
std
sbb
sahf
mov
mov
pop
lods
in
adc
jns
add
popf
xchg
or
out
rolb
and
pop
add
mov
das
cwtl
lock
shlb
cmp
andl
dec
jmp
gs
mov
lds
and
jnp
das
and
jne
mov
aam
les
dec
pop
add
lock
sbb
or
fwait
sbb
add
cwtl
cmpb
dec
jns
andb
mov
cmp
addb
sbb
out
jge
aas
push
xor
sub
mov
arpl
jbe
mov
mov
cmpsb
mov
sbb
ror
imul
mov
cmc
xchg
sub
xorl
pop
sub
into
popf
fcomps
lret
xchg
cld
shl
cld
sarl
xchg
push
fmull
loopne
ja
mov
addl
mov
inc
xchg
xor
xchg
ja
or
int3
mov
xchg
pop
inc
daa
jecxz
sbb
nop
into
adc
lock
aam
aad
jmp
inc
add
cltd
jl
ja
mov
outsl
popa
mov
pop
mov
mov
dec
xor
cmp
rcrb
jl
sbb
add
mov
aaa
test
mov
decl
mov
sbb
or
pop
dec
lods
mov
mov
aam
sbb
mov
mov
cmp
adc
out
add
pop
aad
test
jo
lods
roll
xchg
cltd
sbbb
out
sbb
xchg
jns
loop
js
pop
add
adc
adc
fcomps
xchg
jl
push
test
xor
cmp
clc
into
insb
add
xchg
shl
sar
push
mov
push
dec
mov
loope
ljmp
test
and
movsl
dec
xchg
ficoms
fwait
xor
std
ja
xor
je
xorb
les
std
popa
inc
enter
xlat
mov
int3
test
out
add
out
pop
out
dec
test
adc
xor
iret
addb
mov
jno
or
in
dec
stc
inc
fwait
sarl
stos
or
ffreep
inc
xchg
pop
int
mov
mov
or
andb
jb
ljmp
ds
push
popf
vmwrite
pop
ficompl
test
jbe
dec
cltd
add
ss
mov
jo
mov
push
pop
fs
movsb
inc
mov
push
loope
call
xchg
inc
xor
xchg
inc
fildll
incl
xor
xchg
stos
aaa
les
sub
sub
enter
inc
inc
add
lods
in
out
mov
add
mov
int3
adc
into
outsb
jno
loope
aad
inc
mov
mov
hlt
cmp
dec
jbe
inc
arpl
sub
mov
adc
stc
push
xchg
shlb
pushl
addr16
mov
outsb
sub
pop
fisubl
mov
fldt
cltd
pop
in
pop
jns
or
dec
cmp
int3
adc
push
inc
adc
pusha
push
mov
add
test
lcall
sub
cmpsl
mov
dec
cmp
test
pop
inc
xchg
mov
mov
xor
mov
arpl
ret
arpl
out
call
push
jb
int
and
mov
and
mov
lcall
cmp
fstpl
ljmp
xchg
pop
out
lret
push
ficomps
lcall
or
jb
lret
xchg
fmul
subb
cmp
jo
sbb
rolb
mov
mov
cmp
leave
jne
jns
and
sub
repnz
int3
shll
mov
add
lret
add
lea
xor
mov
out
aaa
dec
daa
dec
mov
inc
lods
pop
in
mov
adc
mov
stos
dec
mov
bound
popa
stos
xlat
ds
jl
test
dec
sbb
imul
and
popf
xchg
xchg
adc
jle
les
push
push
repnz
push
stc
add
bound
add
mov
mov
jmp
into
jge
mov
xchg
add
test
inc
add
mov
gs
lcall
inc
pop
scas
jb
or
je
jo
mov
mov
and
dec
popa
push
mov
ret
in
insb
dec
inc
push
pop
mov
mov
sbb
mov
sub
into
jecxz
mov
cmp
addl
jge
stos
or
or
push
mov
arpl
push
jo
xchg
insb
push
dec
ljmp
test
lcall
imul
clc
daa
andb
subl
pop
fisttpl
loop
or
mov
push
andb
fdivrs
add
loopne
push
dec
mov
int3
mov
in
test
fiadds
insb
xor
aam
mov
add
or
xchg
jo
ss
insl
mov
inc
fldl
xor
mov
ja
mov
jbe
or
and
clc
mov
insb
cmp
xor
mov
mov
add
sub
cmpsl
dec
sub
pusha
xchg
nop
cmpsl
mov
sbb
mov
inc
jnp
fcmovb
cld
add
lahf
and
mov
fs
sub
mov
mov
xlat
flds
xchg
xor
das
pop
xor
dec
ret
test
out
xchg
mov
aas
jnp
lock
inc
push
out
mov
mov
lods
push
decb
std
pop
stos
cmp
xchg
push
xlat
es
dec
add
sub
pop
shll
and
push
lret
xchg
dec
notl
dec
inc
xchg
xchg
pop
pop
inc
inc
jne
rcl
iret
call
push
sbb
lods
xor
stos
sub
or
xchg
movsl
pop
cmp
push
fcmovu
incb
cltd
sbb
and
leave
repz
xor
out
mov
push
aas
inc
xchg
sarl
lret
cli
push
mov
shl
bnd
es
cli
inc
inc
mov
daa
push
imul
in
leave
mov
leave
lds
or
adc
shrl
iret
lods
add
sbb
in
sahf
out
ds
inc
sbb
push
inc
or
xor
lock
pushf
inc
out
rcrb
repnz
test
inc
ss
xor
mov
push
aam
iret
mov
fistps
jecxz
bnd
sbb
mov
addr16
lock
xchg
and
mov
daa
lret
pop
cmp
lret
adcl
inc
mov
add
sbb
xchg
add
jle
mov
xchg
push
jp
es
push
jmp
xor
or
int
xor
jbe
popf
adc
or
mov
adc
dec
mov
popa
loop
sbb
push
cmp
mov
ljmp
imul
daa
mov
enter
xor
lcall
adc
or
push
sub
addl
cld
xor
fldcw
sbb
das
enter
out
xor
sahf
rcrb
jae
jo
scas
and
orb
aam
mov
dec
and
ret
stc
pop
shlb
adc
add
sub
fwait
stc
shl
nop
xor
insl
mov
push
pop
cwtl
mov
out
addr16
fsubrl
xor
sbb
xor
cwtl
imul
xchg
adc
adc
sbb
sub
and
out
adc
pop
push
xor
mov
aam
mov
hlt
jb
popa
cmp
jmp
and
xchg
jo
inc
push
push
xchg
xor
lods
sub
rclb
xchg
inc
addr16
jle
fcmove
orl
sbb
mov
and
arpl
test
imul
jo
jecxz
dec
cmp
ret
decl
xor
cs
jbe
leave
sub
int3
and
in
xchg
xchg
xor
fidivs
jle
stos
das
into
cs
popa
loop
scas
sbb
sbb
sbb
addr16
adc
inc
mov
add
pusha
mov
mov
dec
lock
sbbl
pushf
sbb
mov
mov
dec
mov
not
scas
mov
dec
xchg
mulb
and
out
sbb
sub
inc
mov
out
mov
sbb
sbb
jge
jmp
das
jae
in
or
add
mov
or
int3
xchg
scas
rolb
pop
das
mov
sahf
push
mov
dec
int3
xchg
jnp
mov
out
fisubrl
test
lahf
repz
dec
pop
dec
push
xor
add
xchg
and
in
iret
mov
and
mov
lods
addr16
ss
cmp
call
cmp
nop
into
jns
xchg
xor
lock
insl
mov
pop
push
add
and
dec
shlb
pusha
mov
scas
push
push
lds
js
bswap
push
stos
mov
adc
dec
xchg
hlt
mov
jno
call
jecxz
sbb
add
xor
negl
mov
icebp
and
jle
pop
fldenv
dec
adc
cmp
ret
sbb
cmp
rolb
and
xchg
repnz
sti
cld
dec
popf
in
xor
fucomi
fstl
jge
jne
fisubl
xor
push
loopne
adc
cmpsb
dec
push
xor
cmp
dec
inc
or
cmc
dec
xchg
sahf
flds
lret
push
lahf
div
rclb
adc
testl
dec
mov
imul
sbb
mov
jns
icebp
fwait
cmc
insl
mov
bound
hlt
sahf
mov
jns
add
xchg
xchg
jg
mov
xchg
and
in
idivb
in
mov
sarl
pop
fldl
adc
imul
pop
icebp
sbbb
aam
sbb
pop
sti
mov
cltd
push
pop
cwtl
loop
add
xchg
cmc
cmp
ja
xchg
pop
or
add
or
mov
sbb
mov
arpl
adc
lret
out
jle
popf
jg
lahf
loope
inc
inc
in
or
sbb
lea
mov
retw
dec
es
push
jecxz
sub
cmc
pop
xchg
imul
das
xor
shlb
inc
ljmp
das
cli
call
sti
imul
and
mov
mov
xchg
or
xchg
and
mov
into
dec
lock
cmp
push
sbb
out
xchg
and
and
in
inc
mov
movsb
dec
pop
in
data16
fadds
cs
cmpsb
or
sub
iret
neg
cmp
push
dec
jo
pop
adc
pop
clc
push
pop
aam
sbb
sar
or
push
adc
dec
lea
rol
xchg
aas
mov
push
sub
out
fs
xor
push
and
lods
xchg
ja
fcoml
in
xor
in
xchg
push
lahf
jne
clc
cmc
xchg
arpl
out
std
daa
es
sbb
stos
or
in
ret
mov
lea
inc
jmp
lret
pushf
mov
sub
jmp
xchg
scas
mov
xchg
jl
frstor
inc
popa
adc
pop
mov
xchg
pop
pop
dec
sbb
dec
ja
call
cmovs
insb
test
cld
loopne
add
filds
jne
fcomi
adc
jecxz
dec
into
xor
rcr
mov
push
xchg
fistpl
mov
inc
arpl
or
lds
ret
and
inc
ja
pusha
adc
and
xchg
inc
aad
mov
jg
ljmp
jle
ret
lods
cmpsl
and
pop
in
mov
xor
inc
jmp
jle
stos
mov
outsl
add
push
lods
ljmp
dec
push
aas
iret
iret
xchg
cwtl
ljmp
sbb
add
xor
in
daa
outsb
xor
int3
ror
sbb
dec
faddl
cmpsb
shrb
fsin
sarl
sar
fstl
xchg
and
in
cmp
mov
cmpsb
or
roll
dec
or
jbe
dec
lds
daa
cmc
icebp
daa
inc
push
test
adc
mov
push
and
xchg
cli
adc
dec
sbb
in
mov
inc
leave
es
aas
ficoms
mov
mull
jb
test
xchg
and
or
jne
push
sbb
ret
lea
fwait
movsl
inc
adc
not
cmp
cltd
pop
dec
inc
test
enter
shlb
ret
sti
stos
ljmp
enter
push
jmp
pop
cmp
inc
lret
pop
xorb
cmp
mov
loope
rolb
popf
jmp
hlt
iret
inc
popa
pop
flds
in
test
or
lcallw
add
test
cmp
sar
lods
and
cli
push
mov
sbb
pop
push
push
mov
pusha
mov
nop
xchg
lret
cld
jbe
mov
out
rcrb
cs
loopne
idivb
test
test
out
xchg
pusha
mov
cmc
jmp
loope
lahf
shr
lea
out
and
stc
out
jae
push
fistps
pop
pop
add
inc
add
push
pop
adc
js
roll
xorb
hlt
ja
cmpsl
int3
dec
repnz
cmp
push
out
fldl
add
rclb
scas
xor
push
mov
sbb
popl
nop
arpl
rcl
push
sbb
mov
je
xchg
insb
cmpl
cmp
adc
cs
daa
ret
repz
sarb
inc
cld
dec
xchg
or
push
repnz
mov
loop
pusha
mov
loopne
sbb
ror
aam
push
add
push
jmp
pop
dec
xor
cmpsb
scas
inc
es
dec
dec
ret
popf
or
or
test
test
add
out
cmp
sbb
jl
rcll
push
addl
jbe
mov
mov
jmp
loop
and
or
sub
mov
jne
push
in
imul
push
lret
mov
insl
and
dec
pushf
xchg
xchg
cmp
mov
xlat
adc
xchg
jmp
add
outsl
xchg
sub
dec
sbb
fildll
mov
sbbb
jmp
dec
or
das
loop
lret
dec
inc
int3
test
sti
or
or
mov
cmp
sub
xor
cmp
mov
lcall
lock
mov
or
test
add
lcall
xor
fwait
jne
lret
xchg
xchg
ror
les
xchg
sbb
push
lea
mov
xchg
int3
push
idivb
aad
fildll
pop
and
sbb
dec
outsl
sbb
mov
ja
mov
lds
leave
mov
fucomip
divl
mov
pop
mov
lahf
sub
inc
ljmp
adc
popf
mov
outsl
pop
into
adc
push
xor
mov
pop
adc
fdivrl
xchg
xor
xchg
lcall
es
mov
add
sub
xlat
pop
stc
inc
mov
jle
fdivrs
sub
cs
sbb
fimull
sbb
jle
and
movsb
mov
xor
adc
rorl
fwait
popf
mov
movsb
sbb
add
xor
cwtl
rolb
mov
sub
jle
cmp
xlat
fsub
push
mov
xchg
enter
fisubrl
int3
pusha
pop
repz
shlb
jnp
add
cmpsb
subl
nop
jae
dec
iret
ss
and
push
into
jnp
cwtl
das
xor
sub
hlt
aad
shlb
pop
gs
push
and
popa
and
mov
cli
out
mov
dec
ret
scas
loope
sub
mov
pop
fs
sub
hlt
dec
loop
imul
adc
or
jmp
outsb
jp
cmpsl
push
and
hlt
and
ficomps
xchg
push
fiaddl
add
jmp
es
push
rcrl
xchg
lret
aad
lds
ljmp
outsb
sub
ja
les
cmpsl
jns
nop
in
inc
sahf
add
sti
or
sub
lret
daa
mov
inc
mov
loopne
test
js,pt
pop
std
mov
cld
jb
insl
mov
out
mov
jnp
test
xchg
mov
lcall
divb
mov
or
shlb
or
fisubrl
pop
inc
rcl
sbb
mov
push
aas
ret
sahf
push
push
rcr
mov
add
ret
shlb
test
pop
xchg
enter
dec
aad
int3
sbb
adcb
inc
dec
mov
dec
mov
in
loop
in
sub
jno
icebp
cmp
mov
adcl
ret
dec
cli
loop
enter
lods
mov
or
push
sub
adc
les
addr16
jbe
in
jns
insb
sub
pop
cld
ret
repnz
in
hlt
icebp
pop
adc
pop
lods
jb
xor
jg
call
mov
cs
push
jecxz
xor
fdivs
dec
inc
jecxz
mov
clc
out
clc
cmp
out
mov
je
jne
fcmovne
and
cmc
sahf
es
fdivrp
iret
xor
jl
dec
and
mov
inc
dec
addr16
sti
mov
jp
ficomps
mov
mov
int3
jae
test
and
iret
jo
js
popa
lahf
dec
pop
jp
clc
mov
mov
mov
lds
fidivrl
cmp
cld
push
cmp
xchg
fs
cwtl
test
and
aas
xchg
mov
adc
adc
js
enter
xchg
push
cltd
pop
and
jmp
pusha
mov
and
shr
jl
ja
and
lret
ss
push
pop
lea
mov
dec
pop
adc
add
mov
orl
or
xchg
das
dec
bnd
bound
mov
lock
stc
insb
push
fdivl
mov
fstpl
mov
pop
sub
loop
cmp
out
lcall
jge
mov
sub
adcl
mov
dec
insl
rcr
mov
xor
jg
pusha
push
push
mov
out
push
add
popa
and
add
mov
sti
push
out
and
cmp
iret
jg
add
fstpl
test
out
mov
gs
jmp
shll
subb
pop
testl
mov
iret
outsl
ret
in
lcall
outsb
xor
cmp
int3
insb
dec
or
mov
sub
sbb
and
jno
lock
jb
push
aas
push
cmc
in
cmp
add
jae
shll
loope
gs
or
int3
or
pavgb
sbb
lods
lds
shrl
pop
jmp
dec
jle
dec
jb
push
int3
dec
inc
or
fsub
push
dec
popf
sub
and
xor
sbb
sub
cwtl
cmpsl
push
rclb
or
xor
push
lret
pop
pop
lock
adc
je
adc
sub
dec
or
movsl
or
pop
xchg
insb
or
nop
push
or
xor
mov
int3
rcrl
movsb
push
sub
ret
mov
mov
push
or
xor
mov
adc
push
enter
lahf
ret
das
sbb
pop
test
jg
out
inc
outsl
popf
mov
iret
fwait
lods
stos
bswap
mov
int
das
xlat
push
loopne
arpl
scas
cmpsb
or
ds
ret
and
add
test
lds
pop
fst
jne
and
ret
fisttpll
push
repz
inc
pop
xor
adc
lds
mov
negb
leave
iret
mov
sub
popf
push
pop
pop
shrb
xor
jl
jecxz
repz
jo
mov
sub
xor
aad
pop
xor
sub
xchg
sbb
scas
xor
jae
sbb
jl
popf
rorl
mov
std
rcll
int3
and
push
pushf
sub
sbb
jno
ret
mov
test
inc
jge
in
arpl
ficoml
and
test
sub
sub
adc
repz
sti
inc
leave
lret
ljmp
arpl
cli
mov
mov
mov
leave
repz
mov
mov
or
cmpsl
adc
popf
or
ss
std
idivb
jnp
outsb
popa
xchg
int
popa
test
add
dec
jp
lods
pop
test
or
sbb
push
orb
jns
stc
std
add
mov
mov
clc
notl
lcall
and
ss
jecxz
test
adc
pop
shll
adc
loop
xchg
lahf
rclb
mov
add
cmp
push
lea
add
sub
mov
sbb
push
sub
shrb
mov
int3
mov
or
and
inc
aad
mov
leavew
mov
negl
sbb
jmp
lahf
sbb
sbb
xor
mov
popa
cmp
pusha
mov
or
adc
out
fisubrs
pop
scas
fcmovu
and
lret
xchg
cmpsb
in
xchg
std
dec
jne
fbstp
xchg
imul
add
jo
fwait
hlt
fcmovu
jmp
test
mov
lahf
and
xlat
add
jne
jl
out
mov
loop
jne
inc
pop
ss
push
fnstcw
inc
inc
mov
lret
mov
push
dec
mov
aad
add
jle
cmp
cs
mov
jno
bound
add
cwtl
pop
gs
jo
out
roll
ret
xchg
pop
lret
lahf
lret
add
lret
les
pop
push
adc
shll
lock
stos
pop
mov
adc
lret
mov
sbb
pop
add
xor
icebp
mov
fcmovbe
jnp
insl
iret
mov
inc
nop
push
ror
mov
push
cwtl
jge
adc
loope
ja
mov
jae
pop
adc
fs
mov
lock
inc
jl
and
push
popa
mov
int
or
sbb
inc
push
jp
fbstp
fcomip
mov
push
bound
mov
mov
jnp
mov
fnstenv
lcall
popa
mov
outsl
mov
mov
jno
adc
int3
and
test
sub
cmp
xor
add
inc
js
test
sbb
mov
cmpsl
dec
das
fwait
imul
push
pop
xlat
and
sahf
ss
jbe
cmp
test
mov
pop
cmp
pop
dec
mov
mov
xor
ror
cmp
and
fwait
jb
inc
or
hlt
sbb
and
mov
stc
mov
push
popa
out
icebp
dec
mov
sbb
test
ret
lahf
or
pop
adc
cmp
fwait
push
outsb
pusha
or
imul
inc
stos
add
gs
xchg
aad
pop
mov
sub
shrl
jmp
dec
mov
mov
aam
mov
push
jae
cli
ret
adc
ljmp
pusha
je
push
test
xor
ret
mov
sti
mov
mov
push
imul
jecxz
inc
dec
cmp
pop
popf
aaa
dec
mov
inc
or
sahf
mov
jl
mov
mov
leave
lret
int3
cs
pushf
mov
xchg
fcomps
xchg
xchg
and
xchg
mov
mov
data16
repz
out
int
insb
mov
es
loop
push
in
movsl
xchg
test
inc
jp
bnd
jne
pop
jb
mov
repz
jmp
mov
out
and
and
mov
or
rolb
mov
out
push
es
sub
lret
jl
push
rcl
cmp
insl
in
xchg
sub
mov
rorl
popa
mov
mulb
inc
je
mov
pop
pop
or
in
inc
jecxz
loop
movlps
mov
hlt
mov
shl
arpl
in
daa
js
sbb
fnstcw
ss
push
notl
mov
or
sub
push
inc
scas
xor
nop
mov
dec
in
mov
fisubl
mov
popa
sub
xor
sti
xchg
out
lahf
or
mov
push
popf
adc
xchg
inc
adc
aaa
or
aas
push
adc
pop
std
pushf
daa
cmp
jb
jne
and
cmpsb
cmp
rorl
mov
cmp
jno
lret
mov
dec
lods
out
int3
xor
xor
cmp
sub
lahf
shrl
call
addr16
cmp
lahf
insb
adc
dec
xchg
ficoml
cmp
push
mov
push
ljmp
push
in
pusha
dec
mov
out
sub
and
dec
les
cs
mov
mov
push
or
or
dec
pop
inc
pop
int3
in
sub
cmc
mov
movsb
sbb
iret
bound
fldenv
jb
fdivs
in
lahf
loope
add
xchg
xchg
adcl
call
or
xchg
xchg
xlat
ret
inc
ret
flds
cmp
jg
dec
in
std
jnp
jmp
enter
in
push
std
lret
cwtl
les
and
mov
repnz
cld
jecxz
cwtl
and
xchg
and
push
cmp
or
aam
orl
icebp
and
dec
mov
into
sti
jge
jp
lock
lods
mov
arpl
sub
mov
loopne
pop
mov
loopne
push
push
pop
push
jae
out
cmp
push
push
pushf
lret
or
aaa
push
pop
mov
lret
int
mov
mov
add
push
sub
or
inc
in
loop
repz
ret
pop
push
in
sbb
ret
mov
sbb
std
dec
out
lahf
cmpsl
fdivr
sub
adc
sub
ud1
dec
aas
leave
mov
cld
sub
xchg
sbb
dec
lods
hlt
mov
jle
mov
nop
mov
arpl
xor
lods
scas
dec
xor
cmp
dec
xchg
xchg
mov
jl
or
andl
mov
repz
and
or
sbb
in
es
popf
gs
cmp
call
jb
mov
and
xchg
sbb
push
push
repnz
out
mov
add
js
out
xchg
inc
inc
lcall
mov
jbe
stos
jns
in
sahf
push
pop
enter
ljmp
jno
leave
pop
flds
mov
xchg
mov
fwait
jno
lret
cld
jae
cmp
rcrl
fcoml
fstl
sbb
mov
in
dec
sahf
add
add
xor
inc
dec
push
mov
mov
push
fcomps
and
shrb
sbb
pusha
popf
mov
bound
mov
mov
lods
aas
addr16
outsl
jae
sub
mov
mov
jge
je
scas
and
inc
mov
in
icebp
into
testb
std
push
imul
mov
inc
pop
cmp
add
hlt
shlb
sub
fiadds
lret
rcrl
icebp
enter
popa
cli
add
or
les
out
xchg
es
push
pop
mov
dec
fsubrs
or
dec
sahf
aam
jnp
repz
in
jo
push
fdivp
push
fidivs
std
adc
lahf
cmc
jge
cmpsb
sbb
lods
in
push
mov
fs
stc
cmp
int
insl
aam
rolb
xlat
scas
push
fists
pop
dec
push
sbb
or
fnstcw
pop
enter
aam
inc
stc
sub
mov
movsb
push
dec
sahf
adc
xchg
sbb
mov
jb
inc
mov
inc
sti
or
fsubrs
std
mov
inc
mov
pushf
or
lock
push
jns
jbe
jo
int
dec
test
loopne
or
and
enter
lock
fistpl
mov
or
ret
inc
gs
fnstsw
adc
and
and
adc
mov
mov
lcall
test
pop
lods
adc
xor
into
and
jns
cmp
test
dec
jmp
push
push
sub
js
add
shl
pop
mov
cmp
push
pushf
cmp
jge
sbb
jb
cmp
cltd
in
push
dec
dec
mov
mov
cmpsb
shlb
push
jl
inc
or
or
adc
mov
ret
insl
cs
mov
mov
pushf
movsb
js
xor
cbtw
xchg
outsl
fstl
mov
test
mov
insl
stos
pop
iret
movsl
lret
pusha
sub
xor
jle
cmp
stc
jmp
loope
int3
shll
dec
test
repnz
les
push
xor
pop
xor
inc
ds
leave
mov
xor
jmp
inc
roll
and
icebp
adc
fs
push
mov
jecxz
rcrb
jnp
cmp
clc
sub
jg
int3
mov
fisubs
leave
cmp
mov
std
add
sbb
cmp
sub
mov
fs
inc
sbb
pop
ja
or
push
in
add
clc
dec
std
sub
fistl
pop
jmp
in
mov
adc
mov
jge
cmp
xor
push
sbb
and
in
sub
ret
lret
lret
cld
pop
orb
push
int3
outsb
ret
shrb
xor
xlat
popf
cmp
inc
xor
pop
lods
dec
mov
mov
adc
pop
cwtl
jb
sbb
xor
mov
outsb
insb
fcmovnbe
pop
orb
add
shll
cmc
fbstp
xchg
bound
or
outsl
js
lods
jp
jns
call
imul
add
xor
xor
cmp
jle
xor
adc
enter
mov
fcom
push
pop
and
inc
xor
daa
xchg
lahf
xor
xchg
dec
sub
arpl
sbb
push
mov
ficoml
mov
and
sub
es
fisttps
inc
dec
popf
popf
call
hlt
sar
xor
push
ss
push
outsb
or
sahf
fmull
jecxz
stos
jb
pop
cmp
loop
inc
jle
testl
push
ja
outsb
jp
test
ret
inc
loope
adc
ds
in
mov
add
rol
jo
jo
adc
sbb
push
cmp
clc
scas
and
xor
adc
xor
divb
mov
stos
mov
movsb
xchg
cmp
xor
mul
and
popf
iret
in
imul
sbb
dec
mov
and
aam
icebp
sbb
das
imull
or
mov
out
xchg
cld
lds
dec
cs
hlt
insl
push
cmp
out
mov
addr16
dec
xchg
popf
fbld
pop
xor
daa
out
cmp
add
adc
aam
push
popf
jmp
mov
es
outsl
aas
push
sbb
push
lock
xor
loop
pushf
scas
je
inc
xor
andl
pop
inc
arpl
movsb
lds
aad
fisttps
loope
insb
popa
scas
enter
xchg
or
int3
push
push
mov
and
cmpsl
sub
jno
mov
icebp
add
sbb
cmp
and
test
cmpsl
mov
outsb
lret
aad
jne
jns
push
cmp
push
pop
sbb
int3
push
cmpsb
cld
lret
hlt
jae
add
inc
dec
fidivs
icebp
test
test
sbb
sbb
add
sub
addr16
test
mov
das
fs
into
pop
adc
mov
adc
or
or
xor
inc
or
out
pop
inc
mov
test
es
or
mov
lea
je
or
outsb
addb
pop
gs
aas
flds
fwait
jo
and
lret
ret
and
cs
test
fisubs
scas
mov
repz
mov
mov
andb
mov
ficoms
mov
dec
subb
clc
pusha
fcoml
ljmp
push
inc
ficomps
push
push
movsl
pop
cs
lods
pop
push
sbb
jl
push
stos
xchg
iret
dec
inc
sbb
insb
mov
out
pushf
ret
mov
xor
mov
bnd
out
insl
mov
lods
insl
push
jg
es
cmp
leave
mov
out
pop
mov
insl
scas
mov
clc
xlat
jo
pushl
jnp
pop
cwtd
cs
lea
sbbl
pop
jbe
push
insb
cwtl
leave
jo
jp
add
inc
js
jae
cld
stos
stc
cmpsb
dec
in
or
pop
jb
inc
enter
shll
stos
pop
inc
fsub
addr16
stc
test
loopne
xchg
sub
rolb
notl
mov
out
xlat
shl
imul
in
cmp
xor
sbb
mov
mov
pop
push
cltd
cmc
cltd
std
cmp
shlb
pop
leave
mov
jno
insb
push
inc
and
inc
je
sub
lods
int
ja
imul
ret
test
xchg
jl
cmp
je
cmpsl
icebp
mov
mov
movsl
inc
idivb
mov
sub
fldcw
aas
stos
adc
push
movsb
sub
int
repz
jmp
test
cmc
cmp
and
xor
sub
js
mov
xchg
push
call
inc
mov
jne
push
and
or
jmp
add
mov
in
xchg
inc
pop
adc
sub
jns
adc
lods
sti
pop
jle
add
je
cmpl
aam
test
fldpi
iret
stos
pop
lcall
repnz
cwtl
repnz
cmp
mov
dec
iret
sti
mov
aas
xchg
jae
or
mov
scas
sbb
test
mov
adc
fdivl
cmpsl
pop
mov
and
pop
lods
mov
xchg
out
add
outsl
mov
push
jne
jp
dec
or
push
subl
inc
pop
inc
sub
and
or
aas
clc
cmp
enter
or
dec
pop
add
xor
mov
or
mov
or
mov
shll
add
mov
insb
inc
idivb
inc
andnps
dec
mov
adc
push
insb
movsl
sbb
jo
sbb
mulb
int3
shlb
cmp
xor
mov
pop
jnp
push
sub
lret
jno
pop
xlat
mov
mov
sub
imul
mov
call
hlt
sub
jl
sbb
sub
cmp
cs
lods
scas
int3
add
mov
bound
or
mov
sarl
cmp
xor
out
push
nop
aas
jmp
and
std
hlt
icebp
loop
mov
jp
and
mov
jnp
add
xchg
sarb
and
sahf
xchg
mov
sti
dec
push
and
add
repnz
insl
repz
outsb
scas
bnd
jmp
mov
rcrl
sub
lret
cmc
imulb
cmc
dec
pushf
movb
pop
ds
inc
and
mov
mov
add
movb
pop
xor
movsbl
cmc
aas
clc
xchg
mov
mov
jae
enter
ja
int3
adc
cmc
insl
inc
lea
xor
mov
test
mov
out
and
andb
jnp
lret
mov
lock
cld
test
pop
fs
lret
adc
mov
mov
xchg
out
enter
rorl
lret
adc
sbb
fmuls
sbb
out
pushl
insl
and
inc
shlb
jl
iret
pop
out
fiadds
in
add
adc
jo
and
inc
enter
out
mov
cltd
sbb
bound
mov
rsqrtps
in
pop
hlt
mov
cltd
push
jbe
sub
rclb
jp
xchg
mov
sbb
adc
std
insb
call
add
mov
adc
test
scas
xor
pop
scas
lock
mov
imul
cmp
push
bound
dec
mov
shll
sbb
mov
inc
pop
fdivrl
adc
movsl
pop
or
cmp
sbb
daa
push
out
lock
aas
adc
imul
daa
jo
push
cmpsl
aad
cmpsb
int
js
mov
roll
sbb
stos
jl
mov
adc
movsl
dec
mov
icebp
xchg
out
aad
loope
sysexit
mov
ret
popf
dec
mov
and
xchg
inc
cmp
and
lahf
icebp
in
adc
jg
out
outsb
cmp
mov
sbb
mov
xchg
mov
mov
cmpb
jbe
push
sti
test
les
jae
dec
jne
dec
dec
std
push
lret
lret
in
aas
arpl
daa
mov
iret
outsl
popa
mov
les
xchg
jbe
sbb
xor
sti
jg
push
mov
in
dec
cmp
gs
jmp
mov
adc
daa
arpl
add
cmp
jae
mov
nop
es
insl
jle
loop
inc
adc
and
add
inc
pop
dec
imul
mov
lods
out
jno
dec
or
xor
mov
pusha
xchg
cmp
sub
test
pop
sub
and
pop
inc
push
sbb
aad
mov
pop
mov
out
jecxz
repz
outsb
fbstp
ja
fnstcw
mov
pop
sub
sahf
leave
or
push
dec
negl
push
mov
push
mov
sar
cmp
out
mov
or
and
cwtl
loopne
int3
sub
insb
mov
push
aas
mov
sbb
aaa
push
mov
cld
jb
dec
inc
or
mov
aas
iret
jo
mov
mov
push
add
sahf
adc
jns
stos
push
and
repz
test
int3
mov
pop
push
sbb
int3
or
sbb
adc
pop
pop
xchg
cmp
xor
test
push
out
jbe
shlb
into
mov
sbb
lods
sbb
adc
adc
add
pop
pop
mov
cmp
jcxz
or
js
ja
out
fldt
data16
push
cmpsl
in
clc
mov
addr16
pusha
and
cld
mov
pop
mov
sub
int3
stc
mov
dec
lock
sahf
rolb
cmp
cld
fstps
and
adc
clc
pop
or
pushf
dec
jmp
mov
and
dec
cs
cmp
add
bound
js
addr16
sub
sub
jl
hlt
jle
dec
rorl
lock
dec
pop
mov
dec
jno
push
loop
pavgw
jge
repz
mov
popa
push
sub
pushf
xchg
inc
mov
stos
mov
nop
es
mov
xor
jp
jae
adc
repnz
jnp
and
and
subl
mov
icebp
jle
lea
pop
lock
add
sbb
dec
push
imul
int3
lods
loop
push
xchg
mov
mov
xor
popf
cwtl
lods
lock
mov
fidivl
jb
lcall
dec
lds
fisubrs
pop
shrl
into
stc
lods
add
ret
push
mov
xor
lock
xchg
in
xor
or
scas
rorl
jl
loope
xchg
mov
test
sbb
mov
cmp
sub
mov
jecxz
in
icebp
sbb
xchg
mov
and
pop
cmp
es
push
mov
aam
and
jbe
es
adc
rclb
adc
ljmp
and
sub
cmpsb
std
pop
cmp
fists
shlb
sbb
sbbl
popa
in
aaa
int
and
std
and
loop
sub
adc
outsl
adc
ret
sahf
push
jae
pop
and
and
int
stc
jg
dec
rol
andl
daa
in
sbb
sub
scas
xchg
mov
stos
ret
test
aas
mov
ljmp
daa
loop
dec
and
hlt
mov
addr16
dec
stos
fmull
rorl
cld
mov
cmp
nop
push
inc
movsl
jmp
adc
jecxz
pop
jnp
ds
xor
mov
das
pop
and
movsl
ret
fsin
jmp
sub
mov
sahf
jg
sbb
lahf
aaa
lea
xchg
es
in
pop
insb
out
sbb
cmpsl
sahf
std
hlt
add
xchg
addr16
loopne
pushf
sarb
xchg
push
cltd
repz
push
jno
incl
cli
mov
cld
leave
out
adc
jmp
push
mov
sub
decl
stos
fbld
lods
xchg
inc
aad
inc
cmp
inc
adc
loop
std
pop
cmp
add
dec
sbb
in
xchg
sbb
inc
mov
inc
lea
jne
push
rclb
sub
das
cmp
pop
inc
push
inc
pop
test
shrl
adc
cli
mov
add
ss
jp
test
cmpsl
or
hlt
mov
xor
out
push
pop
sbb
cmp
mov
cmp
out
jmp
inc
mov
add
in
hlt
adc
out
mov
add
aaa
or
lcall
jno
adc
add
sahf
mov
lods
nop
jle
dec
adc
in
mov
inc
jg
bound
mov
lret
mov
leave
dec
lahf
dec
out
ret
lods
xchg
repnz
cmpsb
fsts
rolb
fwait
js
push
shll
mov
fwait
push
fldt
pusha
nop
sub
bound
cmp
sarb
aaa
jbe
xor
outsl
dec
add
enter
lret
pop
fiaddl
dec
in
push
dec
jne
pop
jae
xchg
sbbb
push
sahf
mov
jp
push
ja
je
dec
push
pop
rcl
mov
adc
enter
sub
sub
leave
xor
adc
adc
sbb
jb
push
shll
or
push
mov
push
inc
mov
sbbl
rclb
lret
adc
dec
loope
cmpsl
xor
inc
dec
adc
mulb
mov
loope
jb
lret
dec
pop
and
mov
lds
jnp
sub
mov
inc
cmp
xor
mov
roll
adc
cmp
test
lds
insl
pop
push
ljmp
mov
xchg
mov
lods
in
dec
lds
ret
or
addr16
popa
psllq
pop
or
mov
cmp
mov
stc
xchg
mov
push
aaa
lock
xchg
sarl
aad
negb
push
aam
sub
out
hlt
bound
cld
ffree
jnp
inc
dec
push
ds
stos
sahf
iret
cli
lahf
and
stc
xchg
jmp
ja
repz
xor
sar
lea
js
pop
ja
or
stos
aam
outsb
xchg
out
pop
test
lods
inc
mov
cmpb
xlat
je
pusha
mov
push
test
inc
cltd
or
outsb
and
sub
sbb
lds
adc
mov
ss
cmp
fs
and
pop
adc
std
jg
das
out
pcmpgtb
rclb
nop
cmpsb
push
dec
cmc
jge
inc
loope
arpl
sbb
in
ljmp
mov
xchg
cld
jle
pop
jge
jno
popl
mov
aad
shrl
or
inc
mov
test
push
and
xchg
adc
mov
cmp
jmp
push
int
dec
bound
xor
loope
ljmp
repnz
pop
xor
fnstsw
int3
or
xor
cmp
popa
mov
test
sbb
xor
inc
push
and
lock
in
mov
outsl
sbb
fistps
lret
cmp
pop
sti
inc
fmuls
ljmp
stos
rol
jno
pop
icebp
lock
andb
jne
out
movsb
lods
repnz
dec
push
dec
das
push
mov
std
fs
pop
jne
adc
sbb
and
cmp
jb
lock
inc
mov
das
and
fdivl
cmp
sbb
adcb
idivb
jecxz
std
mov
lret
mov
xor
aas
push
movb
stos
imul
pop
outsl
stc
test
xor
shrb
jecxz
mov
out
andb
xchg
jne
cmp
xor
pop
and
mov
mov
ret
in
out
xchg
mov
popa
pop
add
ret
jb
mov
inc
jno
push
aaa
push
lahf
xchg
mov
mov
mov
mov
dec
cmp
lock
mov
outsb
fcoml
push
xor
mov
mulb
xchg
xlat
dec
sarl
nop
das
outsb
pop
sub
call
ret
adc
icebp
adcl
nop
cmpsb
ljmp
fistpl
xchg
aaa
sub
iret
sbb
leave
cmp
push
or
jp
cvtdq2ps
scas
xlat
mov
mov
jmp
push
and
cmpsb
adc
fs
outsl
jge
rclb
sub
add
sbb
sub
aam
push
mov
push
push
pop
or
lcall
mov
stc
mov
sub
mov
and
and
mov
pop
adc
inc
xor
dec
add
in
sarb
adc
lock
stos
jmp
sahf
adc
pop
lock
inc
mov
addb
cwtl
mov
aam
mov
ficomps
add
or
xchg
pop
cld
add
rcll
mov
push
cs
inc
stos
ficoms
mov
push
push
mov
inc
test
out
push
sub
and
lcall
loopne
xchg
es
leave
aas
mov
mov
insb
mov
nop
push
and
repz
jge
mov
orl
fidivl
nop
cmp
xchg
jp
rcr
mov
mov
inc
mov
test
pushf
stos
pop
push
sbb
mov
aaa
test
ret
rcll
into
lahf
or
dec
push
std
jmp
push
inc
test
imul
js
and
lods
inc
lret
iret
cmc
xchg
dec
pop
push
add
push
add
dec
movsb
jnp
and
scas
test
mov
dec
mov
stos
ja
push
mov
lock
inc
jae
sub
xchg
rcr
pusha
adc
pusha
push
jge
lods
adc
and
stos
enter
cwtl
cmp
sub
cmp
das
stos
cmp
mov
test
js
jg
mov
fcmovbe
out
js
inc
test
cmpsb
xchg
jmp
ret
mov
ljmp
mov
mov
mov
add
pop
imull
push
sbb
mov
pop
cltd
xchg
aas
arpl
lods
or
inc
jle
adc
rol
sti
popf
dec
cmpsb
mov
fidivrs
pushf
int
dec
je
fistl
mov
shrl
push
sub
or
in
in
jg
jecxz
scas
pop
mov
push
jbe
mov
stc
adc
into
sub
mov
cmp
dec
iret
or
cmp
or
add
rcll
int3
adc
into
inc
mov
mov
out
bound
insb
xchg
jo
daa
fdivrs
mov
cwtl
popf
inc
aam
les
repz
and
adc
out
push
loopne
dec
cmpsl
in
sbb
shr
repnz
or
sub
int
jbe
mov
dec
push
sbb
loopne
pop
dec
loopne
mov
sbb
adc
xchg
std
xor
cmp
and
pop
mov
cli
ret
enter
cmc
rcrb
ret
mov
inc
mov
mov
pop
enter
mov
adc
mov
scas
insl
dec
xlat
testl
inc
shrb
inc
mov
xor
inc
pop
add
aam
pusha
xchg
pushf
xlat
and
jns
mov
xchg
xchg
pop
je
daa
clc
jnp
fcmovb
sarl
lds
xchg
jmp
je
push
clc
add
push
fldenv
orl
xchg
cli
jbe
gs
xor
out
test
test
test
or
dec
jge
mov
sbb
sbb
xchg
push
fisttpll
out
repnz
push
jle
cltd
loopne
jmp
fdivrp
add
into
add
dec
adc
xor
adc
testl
xlat
in
fmull
cli
fidivl
mov
push
ror
push
xor
adc
stos
leave
pop
lcall
dec
and
sti
out
cmpsl
out
out
ss
push
arpl
lret
aaa
int
loop
sub
jno
cld
mov
sub
mov
jb
mov
std
shl
roll
movsb
sbbb
das
test
ja
loopne
sbb
cmp
daa
clc
push
add
enter
outsb
pushf
adc
pop
mov
sbb
in
sbb
jecxz
add
push
insb
or
fwait
xor
add
sub
pop
mov
jae
fwait
mov
dec
fwait
push
push
jb
clc
inc
loope
das
pop
sbb
fsubrl
scas
xchg
leave
in
mov
mov
add
lods
insb
icebp
cmp
lds
xor
clc
call
movsb
or
mov
roll
nop
mov
mov
testl
jno
or
fimull
cmp
aaa
mov
jg
movsl
fsubrs
mov
arpl
insb
mov
mov
adc
mov
mov
js
outsb
inc
cmc
sub
pop
inc
ret
inc
in
mov
jecxz
pop
loopne
daa
jnp
leave
add
and
jno
movsb
push
hlt
test
outsl
or
cmp
sub
adc
mov
std
femms
es
inc
jp
adc
jns
mov
push
je
fsubl
mov
int3
mov
xchg
jbe
sbb
mov
cli
dec
or
sbb
pop
stos
clc
sub
gs
dec
data16
add
cld
and
loope
roll
pop
lret
push
xlat
enter
cs
leave
mov
push
xlat
pop
inc
aad
or
lcall
mov
pushf
loop
or
jmp
inc
in
roll
repnz
ror
jg
cmp
xchg
xor
push
lahf
pusha
aaa
in
icebp
cmp
xor
loope
pop
pop
les
arpl
jecxz
or
jne
icebp
mov
daa
cmp
jg
inc
pop
mov
or
out
inc
cmc
insl
inc
shl
or
lcall
push
mov
out
lds
outsl
push
rcr
push
xchg
imul
cmp
stos
mov
cltd
or
xor
aam
in
xlat
arpl
mov
xor
cmp
push
ret
mov
cmc
cli
cld
cwtl
add
jecxz
sahf
roll
jae
in
jle
out
adc
cmp
imul
jb
mov
iret
lea
lret
repz
jecxz
gs
aaa
fcompl
fwait
mov
cmp
mov
xlat
cmp
sbb
add
sub
jl
xchg
dec
add
mov
dec
lea
je
inc
inc
aad
mov
fdivrl
mov
sbb
mov
xor
mov
mov
int
adc
and
stos
int3
pusha
add
adc
xchg
xor
sub
loop
pushf
mov
xchg
mov
hlt
push
pop
das
lcall
inc
lret
out
push
jo
fwait
push
adc
cmp
fcmovu
xchg
jg
inc
push
mov
inc
pop
loop
arpl
mov
sub
cmpsl
in
sahf
int
sub
adc
add
test
jg
pusha
xchg
add
je
sbb
in
pop
inc
jecxz
jbe
inc
in
mov
sub
xchg
push
fiadds
or
or
add
adc
scas
cmc
mov
fiaddl
fisttpll
lods
push
cmpb
inc
fstps
ret
cmp
push
mov
cld
int3
and
cwtl
mov
mov
lahf
fistps
rcll
scas
inc
imul
pop
xor
pop
fdivs
mov
sub
rcrb
rolb
je
add
mov
int3
test
push
ja
cmp
mov
sbb
add
sti
ljmp
or
push
cmpsb
jle
pop
adc
mov
out
mov
adc
in
mov
xor
jbe
sub
test
and
and
fsubl
stos
sub
test
xor
mov
pop
dec
push
dec
test
cmovs
push
mov
in
leave
xchg
jmp
and
push
test
ret
arpl
in
mov
cmp
mov
repz
adc
jnp
sub
lcall
xchg
in
mov
or
push
push
ss
loope
cmpsl
dec
cmp
jmp
movsl
cmp
and
lea
mov
imul
outsl
out
popf
ret
test
addr16
fdivr
cmp
add
mov
mov
push
std
roll
xor
sarl
mov
sahf
notl
and
push
push
mov
jnp
es
or
sahf
lret
lods
inc
scas
adc
mov
sub
dec
sbb
dec
cmp
cmp
pop
ljmp
xor
fldl
fmuls
mov
aas
sbb
mov
stos
iret
into
xchg
mov
jmp
lock
ret
jmp
imul
adc
and
jg
iret
and
rorb
xor
xor
sbb
push
sbb
dec
push
fadds
fidivrl
and
in
pop
sbb
push
jle
adc
mov
jb
pop
mov
jbe
movsb
push
in
mov
icebp
in
mov
out
test
test
mov
jmp
mov
jae
sub
jne
jge
sbb
popa
or
sub
lret
dec
and
ss
and
andl
scas
sbb
movsb
sub
aaa
inc
sbb
sub
cmp
add
sub
movsb
jle
or
dec
push
std
mov
jb
or
hlt
mov
pushf
mov
add
mov
push
lea
js
jp
or
js
pop
movsl
jl
and
aaa
xcrypt-cbc
cmpsl
sar
xchg
jp
mov
loope
cwtl
add
jmp
mov
push
add
loop
and
and
adc
iret
inc
mov
sti
xor
sub
popa
or
and
xlat
mov
push
sbb
mov
je
adc
cmc
mov
cmp
lahf
jge
jno
adc
push
stc
xor
and
shrb
negl
repz
in
repnz
jb
imul
in
testl
dec
into
push
xchg
mov
ror
jne
imull
add
je
jbe
out
repnz
arpl
lea
stc
pop
arpl
bound
inc
adc
mov
imul
push
into
push
jge
pop
cmp
pop
arpl
mov
sub
mov
push
or
mov
sti
or
push
fldl
pop
mov
sbb
or
mov
pop
pushf
xor
jmp
outsl
ja
dec
mov
lret
dec
xchg
hlt
fwait
or
pop
lock
add
mov
fsub
lock
repz
addl
adc
rol
pop
call
mov
sarl
jg
js
mov
in
fsubl
imul
test
lock
jmp
loopne
or
cmp
rolb
mov
cltd
mov
adc
mov
adc
sub
jle
jge
cmc
inc
adc
insl
push
pop
daa
loope
pop
test
inc
mov
addr16
pop
ret
jbe
add
out
jl
add
sub
mov
pop
in
pop
dec
icebp
sub
addr16
mov
jmp
pop
fdivrl
cltd
ljmp
cmp
out
mov
in
fisubrl
es
icebp
outsl
je
jle
or
jmp
fistpll
sub
scas
adc
in
ss
leave
push
mov
lcall
lcall
cwtl
inc
imul
and
data16
insl
jp
sti
int3
push
inc
jge
fnstcw
cli
cli
cmp
loop
mov
pop
test
scas
and
js
sbb
ret
mov
fcomps
fucomip
movsb
lods
popf
xlat
dec
inc
outsl
jp
mov
fcoms
push
clc
call
mov
fs
nop
mov
stos
mov
in
into
loopne
pop
mov
pusha
inc
cmpsb
jg
pop
and
jge
call
iret
jg
les
dec
inc
pushf
or
or
movsl
pop
jbe
xor
xor
cwtl
push
mov
mov
add
xor
loop
xchg
stos
loope
mov
out
cmp
xchg
scas
push
cmp
jp
xor
stos
inc
mov
sub
adcl
mov
mov
bound
push
xchg
pop
xchg
gs
pop
aaa
cmpsl
fs
jle
lret
icebp
nop
cmp
std
shll
xor
fdivl
imul
inc
inc
pop
rcll
cli
mov
cmp
pop
sbb
mov
fisttpl
add
push
out
pushf
push
push
add
inc
out
mov
push
jecxz
fmul
cmp
std
stos
xor
sub
loope
fucom
sarb
jl
or
sahf
stos
mov
lret
repz
rcrb
aaa
mov
fwait
les
push
movb
sbb
int
in
cmp
inc
das
cmpsl
lcall
call
enter
mov
incl
pop
test
and
stos
daa
jnp
lahf
test
jnp
pop
pop
pop
fcompl
dec
or
mov
outsb
in
popa
int3
push
jno
or
xchg
aas
pop
adc
mov
add
fidivrs
loope
push
test
shlb
lret
fwait
mov
mov
push
xor
add
jmp
pushf
dec
xchg
mov
adc
mov
pop
rorb
jmp
adc
jbe
sti
pop
in
js
jle
in
rorb
and
mov
bswap
cmp
div
push
pop
sub
cltd
hlt
int3
in
mov
gs
cld
dec
sub
test
inc
xchg
xchg
jb
cwtl
mov
xchg
xor
inc
xlat
pusha
pop
lea
push
lock
sub
pop
fwait
lcall
fnstsw
ficompl
xor
push
pop
popf
movsl
and
les
cwtl
data16
or
mov
divl
sbb
outsl
pop
iretw
jb
insb
in
imul
mov
fwait
call
sub
cmp
jbe
mov
inc
xchg
mov
adc
into
mov
das
xor
xchg
movsl
sarl
fidivl
pop
das
std
jmp
lea
cli
fdivrl
cmpsl
es
xor
data16
jno
mov
push
test
dec
and
mov
push
add
inc
sbb
fwait
and
bsf
adc
aaa
icebp
in
mov
pop
mov
imul
inc
sub
and
test
fcoms
lea
dec
lcall
and
adc
push
add
cltd
adc
push
add
outsb
cmp
ret
mov
ja
or
sub
cmp
mov
daa
js
enter
loope
cmp
arpl
jbe
push
push
fldl
je
inc
repz
jnp
xchg
push
fbld
or
xor
data16
nop
nop
xchg
bound
clc
or
out
jnp
repnz
xchg
jo
and
test
and
jg
mov
xlat
sbb
dec
push
repnz
popf
ret
lds
movsl
xchg
js
pop
sub
pop
cmp
bound
fs
push
or
pop
or
add
imul
mov
and
sti
out
dec
frstor
jge
pop
and
mov
push
xlat
add
push
out
in
es
repz
mov
test
cmp
mov
inc
incl
inc
xchg
pop
fisttpl
mov
fists
data16
mov
loop
and
mov
or
lahf
mov
sbb
add
xlat
leave
es
fcmovne
out
lods
mov
pop
and
fwait
xchg
xor
loop
fwait
dec
cltd
jge
ja
pop
or
pop
xchg
dec
mov
je
adc
sbb
inc
test
dec
fstpl
rorl
jg
jmp
mov
bound
adc
cmp
push
fiadds
adc
xor
clc
cmp
mov
loopne
fisttps
cs
cmp
jmp
push
pop
idiv
pop
or
mov
adc
das
outsb
pop
into
decl
mov
loopne
fxch
sti
ja
mov
push
roll
shrb
or
vpxor
inc
pushf
decb
xchg
popf
sti
arpl
xor
push
sub
fnsave
or
adc
xchg
pop
xchg
fdivl
jg
or
xchg
fdivrp
rorb
into
subl
xchg
pop
hlt
addb
je
les
in
ret
inc
xor
mov
stos
mov
xor
xor
and
gs
outsb
jne
pop
ret
loopne
jae
aad
inc
push
cmp
mov
add
inc
push
mov
fs
std
sti
lea
negl
aas
ds
gs
out
fidivl
dec
mov
imul
add
mov
addr16
xor
adcl
loopne
insb
push
cmp
mov
sub
lds
mov
es
and
aas
adc
arpl
and
call
lcall
or
test
sbb
arpl
push
jmp
ja
push
lods
es
aaa
adc
cmp
sub
xor
push
out
cmp
aad
mov
pusha
cmp
mov
pop
aaa
xor
scas
dec
inc
arpl
push
or
fdivrl
add
rcrl
cmp
in
sub
jmp
popa
mov
jp
adc
testl
loop
fidivs
jne
push
fcoms
hlt
fcoml
push
add
lahf
stos
mov
pop
pop
dec
icebp
dec
cmp
sbb
sub
cmpsb
jg
cmp
mov
xor
sub
negl
les
ret
nop
subl
hlt
sbb
lret
or
inc
lcall
mov
aaa
pop
push
pop
sub
fcompl
fstp
mov
and
cvtps2pd
orl
sbb
cwtl
inc
jecxz
dec
je
scas
add
jge
in
push
and
pusha
icebp
mov
xor
ret
es
jp
jb
arpl
or
mov
ret
mov
stos
cwtl
cmp
push
in
fisubs
xor
cld
das
xor
mov
jg
sbb
imul
in
pop
fisubs
jmp
cltd
mov
push
xchg
jecxz
out
fldt
jbe
loopne
mov
xlat
and
les
xor
sbb
out
mov
mov
push
shll
fdivrs
adc
mov
repz
adc
add
sbb
cmp
add
xchg
jnp
je
push
pop
cmc
lea
and
scas
cwtl
and
sub
out
mov
push
mov
and
cli
lea
cmp
movsb
gs
push
ret
inc
jg
xchg
pop
pop
sub
push
inc
enter
pop
dec
rorb
sbb
jp
cmp
lds
sub
pop
in
dec
xchg
mov
es
or
fimuls
inc
ret
inc
testl
lret
xlat
inc
or
sub
and
or
filds
lret
rcr
les
mov
fdivrp
jg
sbb
dec
lahf
pusha
sbb
jge
pushf
inc
repnz
or
cmp
ja
xlat
cmp
mov
xor
fidivrl
nop
push
adc
mov
sbb
push
mov
jns
nop
pop
or
test
roll
pop
fwait
mov
int3
inc
and
adc
or
sub
ss
out
mov
jp
nop
sub
mov
mov
add
jb
xlat
push
enter
das
bound
insl
lret
fdivr
jg
fmuls
clc
push
push
pushf
cli
in
pop
out
push
out
mov
push
jae
inc
ret
popf
je
mov
dec
call
pop
add
and
das
push
mov
ljmp
in
pop
stc
test
lea
in
mov
mov
cmp
or
mov
cltd
jb
ja
cmp
shll
or
inc
icebp
sbb
sbb
mov
mov
cmpsl
push
push
mov
xor
fcompl
leave
insl
mov
xor
jne
fcompl
push
clc
popa
repz
aam
xor
imul
sub
xor
or
sbb
movsb
cs
dec
test
push
sub
jo
mov
call
jbe
xchg
dec
cmpsl
out
div
mov
repnz
xchg
fsubr
xlat
cltd
mov
jo
sbb
sbb
sub
xor
sbb
popa
daa
lret
cmpb
xchg
pushf
or
lret
xor
jl
inc
fwait
xchg
inc
cmp
mov
ret
push
jb
sbb
jb
dec
int3
xlat
lea
in
xor
push
addr16
ss
cmpsl
imul
outsb
fsub
mov
xchg
lea
aas
jp
push
dec
imul
xchg
add
mov
aad
push
sahf
es
stos
xchg
popa
jl
mov
xchg
mov
cmp
pop
aad
and
mov
movsl
push
int
clc
mov
adc
dec
xor
insb
mov
jecxz
fistps
jae
xchg
xchg
inc
loope
mov
push
orb
mov
add
mov
aam
or
add
lret
ret
push
add
push
repz
rcr
xor
pop
test
xorb
mov
pop
and
adc
pop
xchg
lods
mov
popa
loopne
push
fisttpl
daa
cli
lahf
mov
incl
addb
add
cltd
xor
mov
mov
shll
aad
imull
mov
push
sbb
stos
into
xchg
push
pop
loope,pn
sub
inc
mov
aad
xchg
mov
test
enter
mov
repnz
clc
jle
cld
or
mov
call
xchg
jae
push
cli
jno
mov
jno
mov
jnp
popa
jle
out
adc
push
ret
sbb
and
cmpsb
imul
jae
inc
add
inc
dec
orl
xchg
out
jne
adc
ret
lea
push
imul
pusha
push
dec
imul
adcb
push
fidivrs
pop
in
jns
jge
popf
or
push
fstps
push
into
xor
frstor
aad
sti
lcall
mov
movsl
push
mov
cld
loopne
pushf
in
inc
lods
push
clc
and
decb
xchg
jns
push
mov
pushf
add
fdivrl
push
les
push
jns
xchg
mov
repnz
sub
pushf
push
mov
into
out
push
and
dec
cmp
pushf
movsb
outsb
mov
jae
sbb
add
call
jge
lahf
inc
push
or
daa
in
inc
stc
adcl
mov
cmp
sub
push
enter
test
in
pop
dec
mov
cs
or
mov
mov
iret
cmpsb
gs
pushf
aad
sub
sub
ss
mov
pop
sub
jb
ja,pn
fst
pop
dec
push
out
dec
mov
enter
xor
sbbb
insl
push
mov
sti
mov
mov
sahf
arpl
push
and
cmp
push
sub
xchg
jle
xchg
out
xchg
movsl
lret
out
inc
inc
ljmp
shlb
shlb
add
dec
and
lcall
aas
mov
push
out
push
subl
mov
icebp
cmpb
bound
rorl
shlb
sub
adc
xchg
mov
aaa
or
test
mov
cmp
popf
xchg
inc
mov
es
xchg
mov
cmpsl
inc
loop
inc
mov
mov
jmp
insb
add
inc
das
es
xchg
xchg
out
je
lds
and
stos
xor
adc
std
pop
lret
int3
lods
xchg
add
sbb
xchg
in
push
pop
and
or
dec
in
xchg
push
push
xchg
and
add
push
jbe
and
scas
jae
roll
adc
lea
pop
sub
push
test
jg
in
push
out
xchg
adc
or
dec
push
in
test
push
mov
or
in
jmp
pop
lea
jp
or
jecxz
call
mov
out
sti
jns
flds
imul
dec
out
dec
fbld
nop
sbbb
lret
push
cmp
cs
and
push
xchg
xchg
sbb
sbb
test
xchg
sahf
sti
cmp
push
or
inc
fwait
enter
int3
lock
scas
sti
inc
idivb
mov
incl
es
or
imul
mov
inc
push
bound
imul
test
popa
dec
mov
jae
adc
inc
out
sbb
mov
aam
aad
scas
mov
lock
mov
lds
mov
fcmove
mov
in
ja
jmp
into
push
rol
mov
xor
and
mov
adc
lock
sub
xor
movq
adc
dec
dec
lods
add
pushf
bnd
insl
sub
movsb
and
ljmp
cmp
fs
das
pop
mov
xor
pushl
shlb
mov
fbld
lret
jo
mov
clc
sti
xchg
and
stc
mov
pushaw
jg
dec
std
insl
fldenv
inc
mov
sub
js
and
push
mov
add
xchg
push
xchg
cmp
orb
ja
push
and
fildl
mov
xchg
mov
jbe
mov
inc
xor
lds
xchg
and
cmp
fstpt
mov
call
xor
xor
inc
sub
sub
imul
js
aam
lea
mov
leave
xor
int
daa
mov
jns
imul
loopne
mov
or
icebp
xchg
ds
dec
repnz
cvttps2pi
pop
js
add
cmpsb
xor
int
hlt
or
mov
bound
adc
inc
fstl
or
insl
adc
inc
adc
mov
test
push
cmpsl
xchg
mov
mov
jmp
int3
pop
pop
mov
push
inc
mov
sbb
dec
xorl
loope
push
movsl
xchg
or
cmp
dec
bound
pop
mov
dec
lea
mov
data16
ret
outsl
jno
sbbb
cmp
adcb
xor
outsb
jge
popf
push
pop
pop
sub
loope
in
fbld
and
cmpsb
pop
sub
popa
in
sbb
sub
add
mov
shll
add
push
push
sub
dec
aam
mov
jb
aam
or
jo
and
cwtl
cmpsb
cmpsl
je
scas
inc
dec
int
inc
xchg
insb
jle
hlt
sti
dec
je
mov
out
loop
imul
cld
mov
sarb
pushf
fnstenv
pop
push
loope
int3
out
movb
mov
add
fs
test
ja
loopne
sub
xchg
out
mov
hlt
jne
cmp
lret
int
xchg
shlb
mov
jns
fwait
pop
push
aad
and
ja
scas
inc
inc
repnz
repz
int3
pop
fistps
mov
mov
sbb
mov
lds
mov
enter
sbb
lods
bound
dec
xchg
jbe
fimuls
push
leave
xor
mov
inc
and
cmp
in
xchg
dec
scas
movsl
inc
bound
ss
movb
push
leave
repnz
cmc
lcall
dec
add
and
sahf
push
push
add
cs
jecxz
idivb
ret
xchg
iret
test
ds
add
popa
sbb
rcrb
popa
jp
cmp
fnstenv
loopne
fiadds
and
aam
sbb
xor
outsl
push
lods
insl
test
movsb
jns
fwait
mov
dec
fnstcw
je
jae
pusha
outsl
jno
add
filds
cwtl
pop
andb
mov
xorl
in
mov
leave
fldcw
xor
sub
mov
adc
sbb
and
cltd
pop
pop
add
xchg
push
inc
pop
mov
divl
sbb
in
add
dec
popa
das
adc
repz
hlt
shll
into
sbb
icebp
shr
sub
push
leave
fisttpl
add
in
push
mov
rorl
ja
dec
xchg
inc
push
test
jns
and
mov
fcmovnbe
fistpl
lods
cwtl
inc
cli
add
inc
cmp
sbb
lcall
jne
xor
faddl
fcomi
fidivrl
xchg
imulb
test
scas
cli
inc
adc
or
pop
jnp
lock
popf
pop
insl
arpl
imul
inc
mov
inc
pop
push
push
scas
xchg
out
pop
push
mov
dec
dec
in
xchg
imul
cmp
test
fstps
add
mov
std
fldcw
lods
cltd
sub
pop
push
add
fisttps
push
add
push
lods
lock
rclb
mov
xchg
call
sahf
pop
test
inc
aam
push
imul
fcoml
jb
sbb
cwtl
outsl
jp
sub
xor
movsl
or
push
pushf
mov
mov
xchg
mov
arpl
aas
push
clc
inc
fstpt
inc
sbb
jne
rclb
jle
dec
sub
push
mov
andb
jmp
pop
roll
testl
fcomip
iret
push
jge
push
test
and
lcall
aas
mov
cmc
pop
sbb
xchg
mov
sub
inc
fcmove
sbb
repnz
pop
sti
stos
mov
push
test
cwtl
jg
inc
dec
add
fadds
aas
jno
jne
push
sub
insl
sub
mov
jne
dec
pop
push
mov
sub
testl
push
mov
insl
aad
mov
hlt
sub
scas
ja
and
aaa
add
pop
sbb
jle
or
mov
lock
and
pop
sub
in
clc
movsb
push
xor
out
shrl
inc
rorl
inc
push
pop
js
rorb
pop
mov
pop
repnz
cwtl
adc
push
jbe
push
outsl
mov
repnz
fstpt
adc
add
or
pop
in
icebp
cmp
cmc
inc
lea
aam
cmpsb
imul
shlb
xor
inc
call
dec
data16
or
fistpll
imul
push
jns
imul
outsl
mov
dec
mov
mov
lds
or
outsb
sub
out
icebp
add
mov
sub
mov
jl
dec
rolb
push
pushf
dec
loopne
repnz
mov
cltd
add
iret
fs
mull
out
inc
push
jnp
das
scas
popl
clc
mov
push
pop
pop
sbb
sub
adc
jnp
inc
pushf
int
push
push
loop
mov
jo
imul
imul
arpl
push
dec
pop
testl
mov
add
cmp
dec
arpl
and
in
pushf
jnp
cmp
mov
adc
pop
mov
pusha
mov
punpcklwd
aam
pop
lahf
push
mov
fwait
icebp
add
clc
enter
ss
xchg
mov
push
dec
or
sbb
imul
inc
mov
je
ret
dec
or
inc
aam
test
mov
adc
xor
ficomps
shl
leave
nop
cmp
mov
mov
outsb
mov
scas
inc
xchg
push
lcall
std
insb
pop
sub
mov
int3
test
jmp
add
and
je
out
mov
jecxz
sub
xchg
imul
movsb
push
adc
incb
dec
es
cmp
mov
xor
mov
xlat
sbb
jbe
pop
lcall
xchg
add
int3
push
push
outsb
movl
jmp
in
aas
adc
adc
add
loopne
adc
iret
ljmp
jne
sbb
outsl
popa
mov
addr16
cld
xchg
scas
rorb
inc
hlt
insb
sub
ret
sub
add
repz
push
and
lahf
mov
xchg
icebp
test
std
jmp
sub
push
addr16
cmc
sub
push
mov
test
inc
and
push
loop
cltd
ds
xchg
insb
xchg
int3
mov
adc
sbb
jl
ficomps
add
nop
mov
cli
stos
lret
pusha
jne
movsl
xchg
mov
inc
insb
pop
rclb
pop
bound
or
adc
and
adc
xor
aam
lea
out
xor
div
mov
lcall
cmp
mov
or
jo
push
pop
and
mov
testb
popl
jb
sbb
in
inc
je
jnp
sub
ljmp
stc
repnz
cmpl
add
mov
imul
rcll
out
xor
test
cmpsb
xchg
movsb
test
mov
adc
fs
out
inc
mov
in
mov
popa
pusha
dec
lds
aam
dec
int
and
outsb
inc
push
cmpsl
pop
sub
pop
sti
sbb
paddsw
stos
mulb
lcall
in
jnp
push
lcall
negl
pop
es
sbb
int
cmp
push
inc
pusha
cmp
cltd
jns
ret
pushf
jge
cld
jns
mov
mov
hlt
dec
shll
cmpsl
push
jbe
sub
shlb
fnstenv
or
fnstenv
mov
jne
dec
rorb
loop
add
subl
test
enter
leave
or
cwtl
inc
mov
mov
iret
adc
test
jno
scas
cld
ficoms
jne
or
stos
xchg
pop
sub
popa
push
out
imul
pop
ja
mov
cmp
stc
push
push
stos
push
imul
fbstp
or
lret
jecxz
mov
mov
bound
sahf
cmc
dec
sub
pushf
cltd
lret
movsb
sahf
xchg
jp
test
adc
inc
aam
lret
push
dec
mov
jne
scas
divb
pop
jmp
insl
and
xchg
lock
dec
pop
xor
iret
or
bound
movsl
sub
jge
mov
jns
pop
imul
jo
repnz
stc
xchg
xor
jb
push
inc
adc
pop
cmpsl
cmpsb
push
mov
dec
mov
scas
ja
decl
test
xlat
dec
andb
outsl
sbb
cmp
loop
and
cli
or
imulb
loope
out
popa
mov
dec
cltd
cmp
xchg
cmp
add
xor
mov
sbb
icebp
push
shl
cs
sahf
xchg
pcmpeqd
stos
inc
decb
push
out
mov
or
cmpsb
push
out
xchg
outsb
and
push
arpl
stc
repz
fildl
mov
dec
sub
adc
hlt
js
into
add
stc
mov
and
and
sar
iret
in
sub
and
inc
aas
jl
jne
scas
outsl
popf
xlat
ret
test
test
sub
hlt
and
addb
rclb
mov
imul
cwtl
xor
mov
loop
mov
loopne
lds
popf
and
inc
mov
push
mov
jns
mov
ja
mov
je
or
flds
stc
or
jno
out
mov
jl
lret
mov
popf
into
pusha
pop
mov
jbe
incl
sub
mov
push
sbb
subb
in
adc
lret
cmc
pusha
push
addr16
and
cmpsb
mov
inc
add
lret
cmp
mov
cmpsl
sub
inc
fcmovnu
es
jbe
cmpsb
loopne
push
push
std
out
cmp
aam
jge
icebp
push
aas
cmp
imul
in
fidivrs
fdiv
aam
in
lret
jnp
pop
fbstp
cmp
jmp
fmulp
int3
test
push
in
mov
cmpl
imull
outsl
shll
jp
jae
inc
adc
ret
mov
repz
or
addr16
sub
icebp
gs
negl
int
or
mov
repnz
and
jbe
addr16
mov
or
and
out
lea
iret
out
add
and
and
hlt
cmpb
add
shll
pop
mov
jae
sub
mov
dec
xor
stc
xor
mov
dec
add
push
fwait
notl
jnp
jge
mov
out
adc
enter
push
push
hlt
test
pushf
sbb
das
push
jnp
or
and
pop
mov
lock
and
fistpl
inc
adc
jns
sub
dec
cwtl
mov
repz
xor
dec
rolb
ja
or
jne
add
push
fisubs
jle
cmp
and
nop
push
push
outsb
insb
cmc
pop
add
in
out
fndisi(8087
mov
fsubr
sbb
loopne
ss
jae
iret
insl
ja
jge
std
loopne
jp
sahf
xchg
sub
shlb
aas
cld
js
pop
add
popa
lcall
outsb
add
cmp
fnstenv
adc
sbb
mov
outsb
sarl
lods
filds
dec
and
xor
iret
mov
std
mov
or
jo
out
popl
pop
mov
imul
fildl
jb
jp
cli
lods
xor
jb
in
fnstcw
pop
push
popf
inc
xchg
pop
jbe
pop
push
fwait
dec
int3
data16
in
cmp
push
xchg
loopw
nop
rclb
popa
out
jl
sub
jmp
icebp
or
xor
and
sub
pop
call
add
xlat
xchg
mov
mov
cltd
fcoms
nop
imul
test
sub
mov
xor
push
rcl
and
sbb
pop
cmpl
push
dec
or
scas
inc
push
add
mov
xchg
aam
xlat
jge
lock
ljmp
mov
mov
cld
popf
inc
or
in
push
jl
shll
lods
add
sub
clc
dec
push
call
dec
jnp
cli
aad
fdiv
loop
pop
cld
xchg
outsl
xchg
mov
test
dec
icebp
adc
mov
cmpsl
jb
sbb
and
mov
sub
jp
stos
test
mov
pop
popf
cltd
add
jl
addr16
mov
and
pop
pop
mov
push
insb
ss
mov
sbb
xor
jne,pn
mov
and
les
inc
fadds
and
mov
xchg
xlat
lahf
pop
xchg
inc
push
pop
sub
cmpl
stos
popl
loop
cmc
or
cld
sbb
sub
mov
dec
popa
shlb
lahf
or
ret
dec
adc
push
sub
or
xor
fwait
push
test
enter
adcb
xchg
aaa
out
in
add
mov
aas
push
push
dec
leave
add
cmp
lock
mov
imul
pop
add
mov
pop
push
mov
sub
data16
aam
repnz
jge
cmpsl
std
jb
in
jne
lea
ficoms
out
lahf
out
cmc
pop
inc
mov
or
sti
cmp
call
push
ja
sbb
fwait
jmp
ss
mov
movsl
xor
inc
mov
sbb
dec
push
mov
xor
jge
jno
lods
inc
insl
dec
mov
push
inc
imul
push
pop
sub
xchg
pop
dec
push
test
jo
sbb
mov
xlat
adc
out
jge
out
shlb
loopne
je
dec
inc
jl
fcompl
pop
dec
push
xchg
gs
repnz
iret
add
fcompl
addb
fdivr
lahf
adc
sbbb
or
test
repz
addb
es
mov
mov
jecxz
add
sarl
sbb
cmp
jmp
scas
jo
rcrl
xor
and
cwtl
fwait
xchg
test
dec
out
sub
inc
jmp
inc
xchg
movsl
cmpsb
sar
dec
sbb
mov
and
pushf
std
popf
xor
loop
cmp
and
insb
push
mov
adcb
lret
push
imul
loope
push
fidivrl
mov
test
xchg
push
das
pop
adc
jae
push
fstl
or
dec
adcl
imul
daa
push
xchg
cld
ror
out
in
inc
mov
add
insb
inc
in
scas
gs
xchg
mov
lock
xor
pop
into
out
jne
and
pop
repnz
lahf
mov
sub
es
jmp
rclb
lcall
fiadds
jecxz
lods
out
jae
sub
jns
arpl
mov
int3
jbe
cmp
xor
cmp
pop
cmp
adc
fimull
pop
sub
inc
lret
inc
fcompl
int3
inc
stos
outsb
cmpsl
outsb
scas
mov
stos
mov
repz
je
dec
dec
mov
xlat
scas
xchg
and
lret
adc
in
add
test
adc
aas
in
outsl
pop
mov
out
and
pusha
cmpsb
out
add
inc
xchg
sti
mov
adc
sbb
xor
add
insl
sarl
xor
pushf
xor
scas
mov
inc
call
mov
push
fsubrl
addr16
addl
sub
sbb
lds
mov
imul
sbb
jnp
std
daa
mov
call
fs
sbb
das
pop
xlat
inc
mov
push
cmp
pop
jecxz
nop
andl
xchg
xchg
daa
xchg
mov
jmp
in
sbb
inc
lret
jbe
lcall
das
in
push
mov
insl
mov
pusha
and
xor
std
andb
push
push
lea
loopne
imul
in
mov
arpl
clc
aad
addl
jbe
push
adc
mov
ret
cmp
call
cmp
rcrb
clc
sbb
lea
push
adc
mov
movl
or
xchg
std
mov
sbb
dec
pop
iret
scas
rorb
sbb
inc
push
sbb
enter
push
or
jnp
jae
push
adc
adc
lods
fstp
int3
out
cwtl
dec
popa
loop
mov
dec
jmp
outsl
cmp
xchg
add
pop
push
xchg
pop
pop
call
and
jne
pop
test
dec
out
adc
mov
xchg
xor
sub
jg
and
rorl
mov
xchg
add
cltd
dec
sub
lret
insb
mov
sub
and
cld
jmp
in
hlt
les
rcr
xor
ffreep
push
outsl
js
and
lods
jg
loope
pop
mov
jmp
xchg
and
aad
xchg
dec
xchg
mov
mov
jbe
pop
aad
and
add
frstor
add
or
mov
xor
sub
int
fnstcw
insb
sub
repnz
add
or
ja
or
movsb
cld
adc
push
and
xchg
or
sub
out
push
fs
sarb
mov
sti
imul
jo
jno
outsl
add
mov
pop
call
mov
dec
inc
mov
daa
mov
adc
jae
adc
xchg
add
int
insb
int3
cs
out
cwtl
sub
cmp
adc
push
hlt
inc
pop
mov
or
pop
pushf
orl
ja
or
aad
mov
fnstcw
xchg
out
adc
pushf
stos
jnp
pop
mov
out
fwait
mov
inc
and
add
mulb
or
test
lods
repz
sti
lret
mov
jp
jecxz
cmp
mov
adc
push
stos
xor
dec
add
gs
test
dec
mov
cmpsb
lret
frstor
mov
pop
test
jp,pn
sub
jge
icebp
std
int
mov
test
adc
fcompl
adc
je
mov
xlat
inc
jmp
lret
sbb
cmp
loope
xchg
ja
jg
jl
repz
test
xchg
sarl
pusha
xor
sbb
jp
inc
leave
dec
cmc
loopne
outsb
xor
jl
sbb
hlt
mov
sub
pop
jne
mov
or
xchg
addb
leave
idivb
jnp
xor
push
or
and
ss
mov
dec
push
scas
lods
mov
jbe
cmpsl
outsb
xchg
mov
adc
test
cs
out
mov
pop
insb
in
imul
lcall
dec
out
cmp
fstps
adc
jge
pop
lret
push
out
sub
aas
std
loope
test
lret
push
xor
lret
sub
shr
jge
ss
cmc
psubsw
lea
pop
shufps
sbb
lret
fwait
testl
mov
shl
push
ljmp
movsl
test
jg
jecxz
sahf
and
gs
sbb
jb
cwtl
nop
sbb
and
stos
test
add
ret
in
jge
inc
rorb
ficompl
imul
jl
mov
into
imul
adc
inc
push
out
push
daa
cmp
daa
xchg
xor
jl
dec
jg
pusha
cmpl
add
pop
lret
push
push
jp
sahf
stc
pop
popf
jno
push
push
test
lcall
and
mov
jle
or
pop
or
jne
pop
and
addb
nop
jbe
inc
xchg
hlt
jg
call
imul
jg
pop
ja
pop
out
cwtl
mov
push
loopne
dec
test
in
fcomps
shrb
mov
adc
frstor
dec
outsb
mov
insl
insb
jmp
or
fsts
shr
ss
rcll
adc
cli
clc
mov
inc
cmpsb
pop
mov
jle
and
sbb
insl
cmpsl
lds
sbb
push
jno
dec
lds
mov
loop
or
sub
mov
cs
push
pop
xchg
push
push
bound
popa
xorl
js
mov
adc
push
jg
mov
fstp
pop
and
enter
icebp
pop
out
ret
push
xor
and
add
mov
jge
ss
jecxz
enter
loopne
xchg
int
inc
cli
scas
push
imul
add
mov
mov
dec
nop
pop
ds
cmp
out
scas
ret
xorl
dec
decl
cmp
pop
in
cmp
mov
rcll
inc
adc
sub
dec
hlt
lret
pop
mov
mov
movsb
adc
jae
sarl
push
ret
int3
xchg
jg
mov
sub
popf
inc
leave
xchg
sti
mov
mov
lret
je
xor
jl
dec
lds
adc
mov
push
scas
iret
jnp
mov
add
rcll
and
mov
ljmp
push
lret
mov
pop
imul
imul
add
xchg
mov
xchg
mov
and
cmp
cwtl
add
push
xor
dec
out
xor
ret
mov
inc
mov
cmp
insb
xchg
popf
inc
push
sub
mov
les
jnp
js
and
pushf
mov
and
mov
les
and
push
mov
push
and
stos
rcrb
lahf
pop
xchg
dec
mov
mov
sub
mov
data16
movsl
cmpsl
stc
pop
lds
add
pop
sub
mov
add
hlt
shll
or
dec
xchg
shr
sbb
cli
dec
je
pushf
stos
add
sub
shr
mov
arpl
cmp
mov
lret
ffree
movsl
insl
mov
insl
sbb
aam
jo
fwait
imul
int3
adc
int
pop
cmpb
fst
xor
std
push
mov
scas
push
in
iret
adc
daa
jl
cmp
mov
mov
sub
sub
jne
ret
xchg
lcall
pop
rcrb
bound
adcb
adc
jle
mov
sub
insb
cmc
lcall
aam
lods
insl
mov
insl
mov
andl
adc
ja
xchg
jbe
ss
fisttps
scas
or
dec
fdivs
aam
dec
aam
stos
adc
popa
and
pop
lret
add
mov
push
add
push
fcmovu
pop
inc
lcall
jmp
movsb
roll
mov
jge
in
ret
or
insb
aaa
or
and
and
mov
sub
repz
out
out
mov
pop
xchg
shr
div
cld
imul
mov
outsb
sub
mov
and
shrb
repnz
mov
jae
dec
icebp
add
data16
fsts
inc
mov
aam
mov
lcall
mov
mov
jmp
mov
pop
popa
xor
ret
call
movhps
add
hlt
adc
repnz
clc
sub
stc
jg
sahf
xchg
push
repz
xchg
xor
add
fisubrs
xor
jnp
inc
nop
mov
in
add
adc
xchg
sbb
add
pop
cmp
repz
out
outsl
js
xor
gs
loope
dec
add
and
insb
repz
adc
iret
repz
arpl
sub
inc
sbb
cmp
adc
dec
push
in
jl
inc
outsb
scas
daa
insl
adc
lcall
xor
insb
push
mov
xor
jle
pop
jl
ss
popf
push
rcr
loopne
or
rclb
inc
xchg
out
shrl
repnz
jge
cmp
push
in
or
cli
adc
jle
shlb
scas
mov
add
pop
pop
data16
xor
jno
lock
call
and
xor
pop
push
sbb
jae
adc
mov
aaa
bnd
dec
sub
mov
add
mov
repnz
icebp
aam
into
add
aaa
xlat
push
jmp
push
inc
int
push
stc
lcall
sarl
push
mov
int
cmp
inc
dec
bound
xchg
xor
mov
jle
mov
insb
dec
pop
mov
add
fldenv
je
into
adc
mov
push
into
out
mull
jecxz
inc
insl
pop
adc
jl
int
ljmp
lret
js
lcall
shlb
rcr
pop
addr16
sbbl
inc
add
and
xchg
addr16
mov
shll
dec
mov
push
push
pushf
adc
push
incl
jo
sub
popa
or
push
jne
in
dec
mov
mov
mul
push
push
mov
js
fistpll
data16
and
mov
inc
mov
in
jmp
call
jle
pop
sbb
and
lahf
push
push
xchg
fs
add
cs
cli
or
out
loopne
fldcw
sub
sub
mov
sub
in
into
iret
sub
xor
cmp
push
imul
push
int3
mov
sbb
lret
ror
mov
sbb
scas
sub
fisttpll
pop
loop
in
lea
js
shr
jns
bound
das
jecxz
xchg
pop
js
push
pop
pop
pop
in
sub
inc
mov
dec
hlt
and
pop
rol
or
lret
ss
popa
imul
sidtl
jecxz
and
and
jmp
je
in
std
outsl
outsl
adc
xorl
xchg
and
mov
stos
xlat
je
mov
call
in
loopne
cmp
fisttps
adc
sub
cltd
push
sti
or
mov
imul
xchg
leave
mov
cs
cwtl
pop
sub
push
xor
xchg
cmc
arpl
adc
fisttpll
add
int3
xchg
jns
stc
xchg
cmpsb
pop
jo
es
mov
fmul
pop
imul
es
xor
mov
inc
ds
and
xchg
add
sbb
pop
lea
inc
sahf
cmp
add
sbb
gs
add
add
fcmovne
pushl
leave
mov
popf
aam
rcrl
arpl
inc
lds
call
fdivrs
mov
xor
xchg
push
in
adc
or
mov
add
sub
out
lcall
ljmp
or
inc
xchg
ret
adc
in
imul
inc
jmp
leave
cmpsb
push
mov
pusha
push
sub
xchg
and
jp
mov
jb
loope
mov
mov
xor
cmpsl
or
sub
setno
lock
sbb
or
mov
repz
jnp
inc
lods
and
sub
pop
outsl
inc
hlt
pop
cmpsb
inc
hlt
inc
jle
jmp
dec
mov
nop
mov
add
pop
in
mov
shll
test
je
addr16
push
adc
popa
mov
and
or
or
cmc
add
sub
inc
into
jne
mov
adc
mov
lock
stos
aam
outsl
movsb
xchg
adc
or
daa
jo
popf
sar
les
popf
sarb
sub
cmpsb
shll
pop
mov
pop
sbb
rcll
gs
outsl
mov
popa
js
jns
add
scas
or
out
inc
jle,pn
cmp
adc
and
xor
jbe
jge
and
mov
outsl
mov
xor
jmp
out
daa
push
nop
pop
jp
out
aam
in
outsl
cltd
int3
mov
shr
les
mov
lahf
xchg
jb
jg
in
cmp
push
push
xor
push
filds
and
int
or
insb
mov
lahf
int3
and
rcr
adc
inc
in
sub
cmp
cmc
in
bound
test
sub
je
mov
push
aaa
push
pop
fildl
adc
sbb
out
cmpsb
and
in
mov
leave
and
cmpsb
shrl
jecxz
mov
mov
pop
dec
inc
int3
stos
fs
pusha
dec
bound
push
inc
push
imul
xor
ja
insb
scas
jo
inc
mov
mov
inc
hlt
in
mov
push
push
jl
jnp
into
hlt
lods
or
fisubs
movb
pop
cmpsl
mov
push
js
pop
jp
out
mov
std
mov
pop
cmp
push
mov
add
rolb
inc
ficompl
mov
test
mov
jg
dec
arpl
ja
sub
repnz
xlat
das
dec
push
push
je
popa
call
cmp
inc
xor
es
xlat
int3
out
fldenv
sbb
icebp
iret
push
inc
sbbb
popa
mov
fs
andl
iret
xchg
out
mov
inc
mov
push
lret
jne
jne
inc
inc
cmp
aad
lret
test
xor
loopne
movb
and
mov
pop
jne
loop
lods
mov
imul
ljmp
lds
pop
pop
loop
mov
jle
inc
arpl
lea
mov
insl
xor
loope
xchg
call
push
dec
mov
fs
mov
movsl
or
dec
push
lret
das
pop
cmpsb
loopne
xchg
aas
mov
call
xchg
pop
pop
add
in
ljmp
dec
repnz
cmp
add
add
stos
repnz
imulb
loope
sbb
mov
dec
pop
push
dec
push
arpl
jne
fcoml
xchg
sbb
pop
leave
add
mov
pop
test
fnstcw
stos
push
jp
cmp
xchg
xchg
test
inc
and
jp
jbe
pop
adc
mov
sbb
inc
enter
jmp
fcomps
xchg
xchg
sbb
mov
adc
lcall
aas
push
ret
dec
es
fsts
mov
or
mov
xchg
in
jecxz
pop
adc
ss
and
mov
mov
adc
adc
subl
es
fcmovne
mov
adc
in
add
lret
mov
or
cmp
add
stos
sub
mov
ja
imul
sbb
jecxz
insb
je
fwait
mov
lahf
mov
pop
rolb
inc
es
inc
wrmsr
test
mov
cmp
xor
adc
repnz
testb
hlt
fwait
dec
mov
xchg
int3
sub
ffree
xorps
roll
rcrl
fwait
rorl
pusha
xor
leave
pop
repz
call
fs
jp
xchg
adc
movsl
inc
mov
aas
xchg
stos
and
cmp
sti
int3
test
mov
dec
inc
cs
sbb
ds
leave
cmc
iret
push
outsb
xchg
dec
add
pop
add
into
jl
in
shl
mov
andl
jnp
pop
sti
adc
push
jmp
lret
inc
pop
cmp
push
add
fldt
shlb
push
mov
stos
js
pop
popf
mov
pop
ret
add
push
and
test
adc
mov
push
cli
push
in
pop
pop
and
xor
sub
inc
popf
lret
sub
pop
sub
lahf
or
sar
popa
push
test
subb
daa
sbb
cmp
pop
push
popa
mov
push
push
push
inc
mov
shl
iretw
test
fdivr
test
mov
fs
pop
lahf
pop
ficoml
jb
xor
adc
dec
aaa
daa
and
push
dec
in
lods
cmp
cmpsb
cmp
pop
mov
pop
push
jg
mov
mov
sbb
xor
sbb
out
pop
adc
icebp
jne
or
iret
je
push
in
sub
nop
outsl
lock
push
es
data16
aas
int
popa
inc
pusha
mov
dec
jo
arpl
nop
pop
int
lcall
sbb
dec
push
cli
cmpsl
in
cwtl
dec
js
push
enter
xchg
and
movl
mov
repz
mov
xor
ret
push
call
pop
pop
mov
jns
aad
sti
enter
push
ljmp
std
stos
mov
jae
les
mov
fs
enter
xorl
aas
outsb
fcomi
mov
pop
dec
loopne
and
rcrb
mov
add
cs
std
cli
xor
imul
xchg
sub
cmp
cmp
push
and
cmp
int3
inc
or
and
or
sahf
push
insb
addr16
jo
pop
adc
jnp
mov
jne
arpl
mov
fldenv
xchg
push
sub
lret
repnz
xchg
add
ret
add
ss
enter
push
data16
jb
imul
push
jge
sub
push
jne
int
jne
push
scas
movsb
mov
pop
daa
inc
int3
adc
inc
pushf
ret
cmp
pusha
inc
jns
andl
push
and
testl
mov
cltd
xchg
pop
pusha
flds
std
cltd
mov
and
inc
xchg
jae
sbbb
cmc
mov
or
test
adc
scas
xchg
jae
stos
xor
lcall
push
loopne
aad
clc
gs
scas
and
mov
mov
dec
pop
adc
sarb
andl
xlat
adc
stos
call
and
jmp
mov
pop
rol
xor
push
sbb
or
adc
lods
ja
jge
gs
lods
adc
cmpl
ret
sahf
clc
mov
mov
sbb
xchg
jb
orl
xchg
arpl
outsl
adc
sbb
dec
int
sub
xchg
xchg
xor
dec
aad
leave
mov
daa
scas
std
sbb
jecxz
in
jl
mov
pop
xchg
fwait
add
push
shlb
lcall
scas
pop
pop
cmp
ret
inc
xchg
stos
mov
rclb
inc
mov
or
cmc
popf
divl
ror
mov
ret
push
inc
mov
and
mov
xor
icebp
xchg
imul
mov
lods
lock
dec
call
insb
xchg
mov
sarb
imul
lds
sub
mov
clc
lods
addl
jbe
push
sbb
inc
daa
js
outsl
cmp
xchg
repnz
push
mov
rcrb
loopne
xor
add
cmp
adcl
fstl
daa
aad
repz
lock
jb
pop
xchg
adc
and
xchg
sbb
pop
adc
imul
mov
and
sahf
adc
push
stos
xor
fdivrs
test
cltd
outsl
in
mov
cltd
cmpsl
adc
sbb
sub
sbb
add
and
pop
inc
push
dec
mov
mov
jns
pop
jbe
ds
sub
out
fmull
stos
negl
mov
jno
std
iret
insl
dec
test
push
out
ljmp
sub
fadds
orl
sti
jecxz
cli
rcl
mov
sub
jecxz
scas
cmpsl
push
jp
cltd
or
into
push
popf
arpl
mov
lods
out
fisttpl
dec
ror
cmp
test
lret
mov
imul
add
cmpsl
or
jmp
push
mov
xchg
pop
xor
in
add
sahf
addl
lds
jle
pop
jle
cmp
ds
je
cld
dec
outsl
nop
cmp
dec
sbb
ljmp
push
adc
movsl
jle
push
out
jl
and
pop
inc
cmp
xchg
jge
stos
enter
or
jge
loope
std
inc
movsl
pop
xlat
sub
imul
cmp
leave
cmp
pop
pop
add
jp
xor
mov
out
fs
mov
ds
xchg
leave
icebp
pop
and
in
dec
shlb
fwait
icebp
outsb
cmovns
inc
test
xor
jp
sarb
scas
mov
in
sbb
hlt
test
aam
fldl
pop
out
lock
mov
jge
xchg
mov
mov
mov
out
cmc
outsb
jge
stos
data16
leave
repz
loop
lods
and
repnz
into
lret
mov
cmpsl
cmp
mov
pop
cwtl
pop
sbb
sub
push
out
test
pop
push
mov
test
ficoms
movl
or
push
pop
push
mov
sarl
xchg
call
out
lahf
add
cs
mov
add
xchg
mov
and
mov
mov
jo
lret
push
pop
test
fstpt
jg
sub
dec
fsub
lea
dec
iret
leave
add
fs
in
add
neg
outsl
pusha
out
and
pushl
imul
outsb
dec
cmp
lahf
add
cmpsl
or
mov
adc
xchg
xor
loop
out
xchg
xor
in
xchg
shrl
inc
jmp
mov
iret
mov
in
iret
rol
in
push
lds
and
jl
xor
jae
clc
adc
adc
jge
xor
xchg
fs
sub
sbb
mov
add
jno
ljmp
mov
xchg
sub
mov
loopne
imul
ret
mov
lret
pop
pushf
mov
arpl
sbb
in
mov
push
dec
in
and
sub
test
jp
jmp
push
push
sub
ss
std
in
sub
lods
sub
xchg
pop
jne
cmp
mov
imul
fnstenv
and
jb
insl
lcall
std
cmp
lcall
jbe
fwait
cmp
pop
or
idivb
xchg
pusha
psraw
pop
jbe
pop
rolb
sbb
stos
nop
int
pop
jmp
jle
dec
mov
inc
pop
push
jne
dec
stc
test
cltd
or
arpl
sbb
in
mov
stos
imul
nop
rcrl
aas
sub
xor
ret
mov
push
push
sbb
addr16
outsb
jmp
push
xchg
lret
dec
lahf
dec
loope
int3
adc
cmpsl
insl
sub
xchg
add
es
loopne
adc
cmp
rolb
mov
stos
push
dec
out
roll
mov
cltd
lods
and
sbbb
dec
pop
jmp
ficompl
mov
loopne
pusha
add
cwtl
test
pop
lea
lahf
push
mov
inc
shll
imul
cmp
sub
rclb
test
mov
add
mov
fstl
rcrl
add
jmp
in
xchg
adc
imul
xchg
sti
bound
in
mov
jbe
xchg
push
xchg
fnsave
fldt
mov
push
pop
cmp
adc
cmp
push
mov
xor
and
cmc
inc
mov
in
mov
add
xchg
inc
mov
daa
adc
mov
movsl
loop
mov
in
aas
or
aam
call
adc
enter
shl
test
pop
fwait
lock
imul
loopne
in
gs
repz
jl
mov
sti
iret
scas
lret
xchg
or
push
push
stc
adcl
push
xlat
shlb
sbb
in
inc
jno
dec
push
clc
add
test
mov
pop
ljmp
mov
jmp
fldl2e
sahf
repnz
xor
adc
aad
dec
lods
scas
mov
xchg
xchg
dec
pop
ficompl
push
sahf
dec
jg
cltd
pop
adc
or
das
iret
adc
roll
lcall
sbb
sub
mov
mov
cmp
jae
mov
ret
xchg
push
je
dec
cmp
add
sub
icebp
mov
cwtl
lea
sub
mov
cmp
and
mov
fcmovne
ficomps
dec
lahf
ja
xchg
mov
xchg
push
mov
outsb
imul
sbb
divl
dec
cmpsl
or
xchg
mov
and
enter
sar
fmulp
cmpsl
jl
mov
int
jg
ss
les
and
repnz
cmp
mov
pop
lret
push
xchg
mov
fcomps
mov
shlb
mov
dec
sbb
mov
sub
fmuls
test
pop
cli
xlat
scas
lret
mov
popa
jne
dec
mov
scas
mov
or
shll
aam
sbb
jp
xor
mov
pop
push
sbb
mov
pop
aad
lahf
std
jge
inc
adc
iret
or
xlat
addr16
in
gs
xchg
and
inc
test
decl
xchg
daa
or
jmp
dec
scas
lret
data16
sub
xor
in
test
fildl
and
cmc
fs
in
outsb
dec
iret
sub
fildl
sbb
lret
xor
aam
cmc
ret
inc
fildll
jne
imul
aas
jne
pop
cmp
dec
cs
mov
cmp
jns
add
mov
xor
fcmovbe
pop
sbb
push
jecxz
mov
ror
jmp
sub
pop
test
gs
arpl
loope
enter
push
push
cwtl
cmc
adc
cmp
jmp
mov
jnp
lods
in
cmc
jae
dec
loope
and
xor
int3
in
mov
rclb
pop
xor
repz
cmp
lret
ss
divl
mov
jbe
xor
insl
jp
xchg
dec
pop
cltd
pop
jbe
push
mov
dec
jge
shlb
pop
inc
pop
xchg
add
push
push
sub
repnz
sub
cli
adc
imulb
gs
push
sbb
ret
mov
popa
lds
sub
cmc
cmp
sbb
imull
push
sub
or
pushf
call
and
in
test
xor
pushl
leave
pop
push
aaa
jg
add
push
sbb
pop
adc
or
sub
adc
dec
out
sbb
pusha
shrl
mov
mov
out
xor
mov
cmp
mov
push
enter
push
out
add
and
into
inc
aam
in
mov
push
insb
fstps
cmp
and
rsm
fistpll
adc
cmp
jns
insl
jns
cs
iret
mov
add
push
adc
dec
xor
mov
mov
sti
mov
pushf
push
ret
or
lods
mov
pop
jmp
sarb
ret
stc
hlt
xchg
cmp
jle
ss
dec
std
shl
andl
or
add
fsubrp
mov
jp
jno
add
xchg
aas
in
call
inc
inc
call
movsb
xor
mov
push
or
pushf
cld
fsubs
mov
dec
dec
push
dec
or
clc
or
mov
add
lods
push
or
mov
or
xchg
dec
and
adc
xchg
ret
sub
xor
das
mov
dec
jecxz
and
aaa
cmc
loop
sbb
xchg
out
push
mov
mov
sbb
push
lahf
lret
out
leave
and
inc
loope
cmpb
pop
add
pop
leave
dec
insl
andb
subl
lds
push
aam
cmpsl
test
sbb
adc
or
negb
fsubp
cmp
pop
sbb
scas
lds
test
je
and
fs
inc
loopne
cs
mov
loop
push
xchg
test
lods
xor
pop
shll
lea
pop
insw
dec
and
sbb
stos
out
push
loope
gs
xchg
in
mov
jns
icebp
loopne
orl
inc
lret
mov
je
mov
pusha
cmc
inc
stos
sub
mov
add
sbb
data16
repz
sbb
ror
cwtl
scas
imul
adcl
and
sti
dec
jl
inc
add
into
or
or
mov
lcall
jo
outsl
loop
sub
lahf
and
push
mov
out
xchg
negl
loope
pop
fwait
lret
repnz
into
ret
mov
scas
adc
mov
out
jl
lret
xor
data16
je
xchg
xor
dec
jbe
jo
and
mov
int
dec
nop
out
add
enter
push
stos
adc
mov
pop
popf
out
pop
aad
lcall
les
addr16
cmp
stc
sub
arpl
mov
ja
sbb
cld
fidivl
test
mov
xor
aad
inc
jne
inc
xor
cmp
lret
js,pt
outsb
sbb
sbb
sbb
test
test
std
pop
test
or
pop
xor
jg
std
lock
push
mov
xchg
sar
or
and
sub
call
pop
inc
xchg
std
push
rcrl
outsb
jb
adc
jbe
stc
xlat
mov
sbb
dec
orl
daa
fadd
roll
jmp
jecxz
jo
or
ss
xchg
je
mov
movsb
test
xor
fdiv
jno
adc
dec
cs
aad
push
and
mov
push
push
jno
mov
pop
push
dec
inc
call
or
rolb
push
jecxz
sub
sub
push
jbe
rorl
mov
mov
sbb
adc
pop
dec
jae
jge
or
mov
push
mov
push
fwait
clc
ret
jne
arpl
jns
es
ljmp
xchg
push
test
into
int3
repz
ror
inc
jp
scas
mov
lcall
scas
and
or
sbb
cmp
cmp
icebp
bound
aad
or
out
nop
pop
and
push
adc
xchg
dec
rcrl
pop
cld
sbb
push
add
outsb
cmp
mov
and
les
pop
push
mov
mov
or
cmp
loop
push
pop
xor
mov
lock
orl
loop
out
pop
sbb
int3
jl
inc
test
push
xchg
xlat
out
out
inc
xlat
cs
call
fwait
jge
adc
push
out
ja
dec
int
fiadds
jbe
adcl
arpl
cmp
jecxz
mov
popf
insb
in
push
push
je,pt
xor
mov
push
sub
icebp
mov
dec
sbb
out
pop
cmc
mov
jno
popf
int3
lds
test
push
lcall
sbb
imul
js
and
inc
push
jb
sbb
pushf
adc
mov
mov
outsb
xorb
jne
stc
pop
pop
mov
push
lahf
push
les
mov
iret
mov
sbb
mov
in
test
and
in
outsl
dec
add
das
xor
cwtl
enter
pop
sbb
sub
mov
inc
mov
and
mov
in
adc
mov
test
pop
fisttpll
pushf
or
call
adc
or
jmp
ret
aam
sbb
mov
fisttpl
icebp
test
mov
outsl
ds
and
hlt
rclb
adc
fdivr
push
fsts
int3
push
sbb
mov
das
pop
xor
icebp
cli
loope
mov
jae
or
mov
jbe
rcl
lds
aaa
lock
test
clc
int
adc
push
or
or
dec
inc
loope
dec
lock
cmpsl
push
add
mov
adc
jae
inc
push
sbb
in
out
push
or
rolb
add
cmpsb
cmp
dec
ficomps
pop
jp
cmpsl
leave
loop
bswap
mov
sub
pop
js
cmpsb
sbb
test
jp
push
cmp
js
aam
pop
push
ret
decl
mov
or
or
pop
adcl
clc
sub
dec
xorb
jns
inc
sub
dec
in
xchg
sub
cld
mov
cs
inc
call
mov
pop
aad
xchg
test
out
rorb
nop
jno
mov
loope
or
or
jno
pop
dec
test
fsubs
out
out
xor
aaa
push
push
leave
mov
insl
pop
sahf
je
add
insl
xchg
push
in
pusha
les
adc
or
jo
mov
push
in
adc
lahf
daa
aam
ficomps
push
sbb
sbb
aam
out
sub
stos
jne
jle
and
jns
sbb
aad
inc
clc
push
loope
outsl
or
adc
xor
pop
int
cmp
and
sub
jo
lds
pop
push
call
in
jae
loop
push
sbb
lahf
aad
jo
into
xchg
sub
ss
aam
adc
sti
outsl
js
pop
jle
inc
repz
shrl
cmpsl
cmp
xchg
repnz
lret
sti
cli
xor
idiv
or
cli
or
pop
cwtl
add
icebp
mov
add
popf
nop
adc
cld
inc
push
dec
and
int
push
call
and
add
add
or
out
cmp
int
jo
sbb
cmpsb
ror
aad
pop
inc
out
hlt
jno
pop
xchg
and
pusha
jge
mov
jns
xor
ja
data16
subb
xchg
sahf
or
inc
dec
jle
mov
push
ljmp
and
aas
mov
inc
loop
xchg
jmp
shl
adc
repz
inc
rcrb
into
jle
mov
outsl
ljmp
pop
out
push
xor
scas
mov
xor
repz
xchg
jb
addr16
add
mov
das
adc
pop
sahf
add
sbb
notl
pop
dec
mov
or
push
addl
push
cmp
ja
in
ret
jl
cmc
repz
aam
cmpsl
lret
cmpsl
jecxz
mov
inc
and
jmp
mov
testb
dec
add
inc
and
sbb
arpl
xor
ret
mov
sub
or
mov
or
pop
movsb
mov
pop
push
std
outsb
sub
in
movsb
dec
movsb
mov
xchg
lahf
mov
test
mov
pop
mov
mov
sub
stc
fdivrp
mov
mov
data16
dec
add
xchg
into
fs
std
cli
imul
mov
fisttpl
int3
sti
decb
jns
pop
xor
pop
scas
push
adc
push
sahf
adc
in
and
adc
daa
aaa
das
out
jae
mov
sarb
jecxz
and
cwtl
adc
jle
jl
out
imulb
xchg
clc
pop
jns
es
cmp
inc
les
mov
cltd
icebp
repz
xor
dec
adc
sub
outsl
stc
bound
or
daa
insb
mov
fimull
mov
jmp
xor
mov
xchg
jne
iret
jb
call
sbb
jecxz
cs
fstl
fwait
ret
daa
adc
ss
add
into
xchg
pop
repz
ja
jge
inc
sbb
xor
jnp
pop
jmp
sbb
xor
jge
dec
daa
cmp
mov
mov
test
xlat
push
cld
adc
add
mov
clc
cmp
cld
xchg
push
pop
push
dec
sbb
jno
test
insb
cmp
mov
or
into
cltd
movsb
mov
in
dec
icebp
add
test
sbb
pusha
sti
inc
adc
push
cmpsl
adc
push
cmp
int3
or
mov
cmp
fdivl
loope
push
loopne
daa
pop
push
inc
lock
mov
mov
pop
dec
dec
jae
lds
add
mov
xchg
mov
sbb
ljmp
mov
mov
sub
mov
pop
push
fstl
movsl
sbb
pusha
das
dec
push
les
adc
and
jns
outsb
inc
xchg
iret
mov
jo
adc
mov
add
andb
jecxz
cmp
popf
inc
jns
or
push
into
jns
jnp
arpl
pop
and
dec
mov
mov
push
loope
int
testl
popf
or
cli
mov
push
xor
or
dec
xchg
in
mov
fs
jbe
inc
dec
mov
lds
fnstsw
les
stos
push
adc
jp
test
xor
xor
push
aaa
jecxz
xchg
xchg
loop
aam
lahf
sbbl
mov
push
mov
jns
sar
cmp
push
dec
rcrb
dec
rorl
sbb
mov
mov
rcrl
mov
mov
cmpb
aaa
adc
leave
jle
fistps
pop
fs
jl
inc
sbb
mov
ds
rolb
sub
es
pop
pop
std
pop
mov
push
fsubl
fimuls
pop
cmp
adc
push
xorl
sbb
popf
lss
das
js
les
pop
daa
imul
cmp
xlat
pop
or
mov
jge
push
pusha
pop
xchg
adc
sbb
aam
test
pop
jae
stos
inc
xor
sti
mov
pop
lcall
lret
shl
inc
sar
rorb
outsl
cwtl
scas
mov
adc
int3
stos
mov
pop
ljmp
icebp
or
into
in
xchg
pop
push
daa
mov
roll
xchg
cmp
hlt
rcrl
or
push
pop
pop
sbb
xchg
mov
cmp
mov
sbb
jp
fmull
aas
jns
lock
imul
push
xchg
push
inc
jecxz
pop
ljmp
in
aas
adc
aaa
adc
fstps
mov
popa
mov
inc
rcrb
int3
aaa
data16
sbb
cmpsb
jle
cmpsl
jmp
outsl
push
repnz
ds
test
jge
adc
xchg
cmp
push
mov
push
xchg
cmp
inc
andb
add
jle
pop
xlat
out
xchg
cmpsl
insb
mov
faddl
mov
mov
xor
inc
mov
test
jl
jb
inc
pop
popf
mov
adc
in
sbb
loopne
push
test
mov
in
rcll
es
push
mov
mov
mov
sbb
stos
outsl
xor
add
mov
or
daa
add
stc
cltd
test
cmc
xor
mov
inc
or
push
xor
fistpl
push
bound
scas
jne
loop
or
mov
pop
jle
insb
sub
pushf
call
mov
push
dec
xchg
loope
adc
roll
cmp
xor
adc
test
sbb
mov
pop
sarb
mov
push
repnz
imul
add
dec
mov
les
dec
jl
mov
fidivl
push
inc
sub
jae
xor
mov
in
add
or
sarb
out
data16
inc
push
stc
ja
or
sbb
mov
sbb
call
dec
xchg
test
mov
arpl
cs
and
inc
aaa
mov
outsb
push
out
aad
mov
movsb
fs
out
icebp
shl
inc
or
pop
sahf
xor
cmp
mov
repnz
shrl
into
xor
mov
push
outsl
push
and
divb
arpl
fsubrs
jae
int3
inc
test
xchg
push
mov
lcall
adc
jb
insb
fsubs
lahf
inc
js
aad
rorl
repz
sub
sahf
js
dec
sbb
xchg
aad
cs
sahf
daa
addr16
ficompl
je
push
sbb
push
pop
cmc
jl
cli
frstor
lcall
loop
and
in
xor
cmpsb
jns
mov
les
mov
dec
jl
hlt
mov
xchg
negb
mov
addr16
test
cwtl
pop
adc
cmpsl
push
mov
pop
ds
gs
pop
imul
aaa
pop
push
repnz
lods
push
mov
repz
push
arpl
sub
sarl
test
jmp
test
lret
dec
pop
popf
bswap
jp
data16
aas
xor
lea
mov
xor
mov
fisttpl
sbb
aad
mov
shlb
stos
push
push
xchg
test
sahf
fsubl
pop
lods
sbb
jnp
fadd
sub
mov
lods
lahf
inc
xor
sbb
cmp
inc
or
mov
jg
test
pop
imul
sarb
daa
jb
pop
test
mov
repz
dec
dec
gs
cmp
repz
mov
and
cmp
in
cmp
push
in
xchg
push
shll
fidivrl
mov
inc
adc
les
sub
popa
jle
xchg
add
enter
push
rolb
fwait
cmpsb
cli
movsb
arpl
call
fnstenv
hlt
insb
mov
sbb
mov
mov
jb
stos
pop
sbb
inc
test
movsl
pop
pop
enter
lods
xchg
inc
or
pop
clc
sub
lret
sbb
push
and
xor
xchg
fdivrs
sbbb
cltd
push
adc
push
fnstenv
pop
dec
add
inc
dec
in
and
jns
xchg
ficoml
fldcw
int
jne
pop
enter
out
test
pop
xor
xor
movsl
xlat
ret
fwait
in
add
movsb
dec
les
xchg
pop
mov
in
ficoms
pushf
js
out
jge
jge
mov
push
add
clc
lds
out
icebp
loope
lret
mov
jge
ds
je
jl
lcall
mov
ja
icebp
les
test
insl
xchg
add
mov
out
in
fistpl
mov
cmpsl
sub
mov
inc
fwait
add
sbb
ljmp
dec
jae
dec
mov
adc
pop
adc
adc
fwait
pop
mov
xor
orb
push
sahf
stc
sub
or
sub
cltd
cmp
adc
testb
mov
mov
popf
inc
adc
paddd
push
add
fsubl
aam
pushf
dec
orb
adc
dec
fwait
inc
lret
loop
repnz
fmuls
int3
rcrb
fucom
call
ret
sub
sub
push
jmp
or
popl
sahf
shrb
stos
sub
outsb
inc
mov
dec
or
add
pop
pop
mov
inc
jnp
incb
in
out
mov
and
imul
sbb
xchg
sub
inc
cltd
adcb
cmc
lret
fistl
or
shr
mov
and
or
hlt
push
dec
popa
mov
sbb
insb
sbb
jp
mov
cmp
cmp
aas
inc
push
cmc
fdivs
out
loop
lret
sbb
fnstcw
cwtl
add
inc
cmp
push
cltd
sub
les
xchg
jmp
fimull
mov
push
imul
pop
pop
scas
pop
fiaddl
test
add
fmull
popf
mov
sbb
dec
and
xor
inc
push
inc
fldenv
mov
add
js
fwait
pavgb
add
and
xor
out
icebp
push
cmp
nop
mov
leave
arpl
jecxz
fdivl
pop
imul
xchg
sbb
cmp
xchg
popa
js
adc
push
nop
jae
push
mov
notb
or
pop
pop
lahf
sbb
popa
push
sub
cmp
call
movsb
je
dec
xor
adc
shlb
es
or
inc
add
mov
cmp
inc
pop
jp
dec
fstpl
rcrl
push
lock
pop
or
pusha
sbb
jnp
and
cmp
or
hlt
inc
enter
movsb
repz
enter
sub
aam
xlat
divb
mov
mov
push
ds
stc
cmpsl
div
mov
xchg
insl
add
add
sahf
leave
pop
imul
xor
mov
dec
sbb
ljmp
ja
pop
aaa
xor
lret
mov
lods
in
sub
ficomps
or
jb
std
es
xor
repnz
loope
jp
out
es
mov
cltd
or
pop
xchg
xchg
sti
jbe
ret
mov
add
push
add
testb
jbe
shlb
dec
or
jno
mov
cmp
pop
mov
xchg
dec
sti
adc
inc
mov
jnp
mov
jnp
and
jle
xchg
aas
out
mov
xor
adc
cmp
sbb
aas
out
xchg
pop
mov
adc
movsl
lds
adc
push
or
imul
sti
jecxz
cmpsb
or
inc
cmp
jp
enter
int3
loope
jne
pusha
fwait
jmp
push
mov
and
push
sbb
sub
sub
push
notb
rcl
sbb
or
pop
jo
pop
push
dec
dec
add
repnz
mov
cmpsb
jno
mov
fldenv
add
pcmpgtd
lret
xor
or
lcall
sub
fistpl
addr16
push
push
add
xchg
out
xor
sbb
mov
call
and
push
imul
jnp
xor
dec
hlt
add
cmp
loop
jl
sbb
and
pop
xchg
xor
test
ds
in
sub
xchg
mov
outsb
cmc
or
or
cwtl
cmp
cmp
cmp
inc
sbb
insl
jb
pop
inc
aaa
push
xchg
push
push
into
cli
or
and
push
daa
idiv
jns
jmp
add
cmp
mov
adc
test
scas
or
jl
mov
mov
add
fs
mov
popf
sub
cmc
lock
pusha
lret
mov
cmp
sbb
popa
int
lahf
daa
push
or
cmpsl
fidivrl
lcall
in
sbb
hlt
xchg
popf
popa
pop
xchg
cmpb
and
dec
inc
je
push
stos
test
dec
fcmovbe
mov
xchg
stc
rcrb
pop
mov
or
fwait
xor
and
xor
std
lret
mov
loope
dec
xor
push
mov
xor
cmp
jae
xor
ljmp
push
js
nop
fwait
roll
xchg
lea
jg
pop
and
inc
hlt
inc
das
push
cmpsl
push
cmp
sti
cmp
pop
loope
push
cltd
out
divl
mov
lods
xchg
mov
icebp
xor
dec
test
js
hlt
xchg
mov
inc
popa
mov
jo
mov
fistl
jg
out
cmpsb
xor
pusha
aam
repz
jmp
mov
mov
mov
push
fisubl
rclb
xor
insl
call
dec
adc
pusha
gs
in
sbb
sub
ljmp
sbb
das
inc
pop
sti
pusha
outsl
mov
cmpsl
push
push
inc
cld
cwtl
outsl
fwait
cmpsb
inc
test
pusha
cmp
lock
mov
cmp
sbb
insl
fbstp
jg
outsb
mov
fimull
mov
xor
cld
loop
in
ljmp
mov
arpl
dec
xlat
mov
sbb
fidivs
inc
mov
fldl2e
mov
mov
loope
rclb
adc
xchg
adc
mov
and
cmpsb
jne
ds
or
pop
repnz
mov
les
mov
and
mov
xchg
inc
sub
and
les
andl
repz
roll
call
mov
pop
imul
push
loopne
mov
jecxz
xchg
aad
jge
outsb
inc
jle
xchg
sbbb
or
stos
popa
pop
adc
sti
xchg
fildl
jmp
mov
or
jae
or
outsl
pop
in
es
push
scas
in
pcmpgtw
inc
jge
rcl
inc
cmp
mov
sub
das
xchg
out
outsb
fstpl
jge,pn
lods
cli
movsl
mov
negb
repz
sahf
lcall
jbe
ret
adc
add
ds
and
repnz
hlt
pop
inc
jecxz
or
aam
inc
cmc
cmp
cltd
fdiv
enter
sub
adc
push
jns
loopne
out
dec
aad
push
test
mov
rcl
sbb
xor
mulb
lds
rclb
push
or
repz
and
jbe
dec
nop
adc
mov
insb
repz
call
scas
jne
out
outsb
stc
adc
popf
adcl
mov
pop
call
es
add
fnstenv
pop
and
mov
pop
mov
mull
std
mov
xor
lret
jmp
jl
dec
test
dec
sbb
push
call
or
movsb
call
mov
lret
mov
and
and
sub
lods
xchg
shll
or
or
dec
fs
pusha
in
dec
fstps
lods
dec
orb
mov
and
testl
loope
cmp
int
in
sbbl
and
les
sub
cmc
shrl
rcrl
lea
pop
add
nop
lret
xchg
jnp
and
adc
ss
adc
repz
mov
jne
jno
hlt
aaa
push
shl
or
pop
aam
imulb
inc
js
lret
sti
inc
imul
sbb
icebp
decl
push
jno
mov
mov
in
xchg
les
ret
adc
add
movsb
mov
xorb
inc
sub
mov
insl
push
mov
sub
push
mov
sbb
mov
jle
insl
lret
xor
mov
pusha
ret
xchg
mov
mov
ret
cmp
adc
fstl
lret
mov
mov
lret
adc
gs
pop
and
jecxz
and
mov
push
pop
pop
sub
mov
add
sbb
inc
mov
into
mov
imul
jae
push
adc
lret
or
add
mov
dec
pop
and
adc
push
push
insb
fldenv
adc
sbb
add
xlat
ss
and
faddl
movsb
into
data16
push
cmp
div
outsb
jmp
aaa
inc
cmp
and
and
dec
aad
inc
popa
and
imul
inc
sahf
fdivrs
push
iret
lea
xchg
cwtl
insl
mov
out
test
lret
mov
cmpsl
dec
std
daa
mov
mov
popf
push
pop
push
das
scas
dec
lret
inc
cmp
jbe
subb
cmpsb
and
iret
xchg
lods
pop
jecxz
mov
icebp
arpl
mov
jge
cmp
inc
jae
mov
loop
rcrl
test
pop
test
or
mov
adc
lcall
lock
mov
repnz
sarb
adc
enter
insl
sbb
lret
jns
dec
dec
add
cmp
lcall
push
mov
rcrb
out
jno
lret
jo
and
fmull
jno
mov
fmul
repz
insb
mov
insb
cltd
or
mov
push
pop
cmp
dec
sbb
cmpsl
inc
out
sbb
out
or
mul
pop
jecxz
rcrl
pop
or
insb
bound
fdivr
adc
mov
jae
xchg
inc
fcoms
dec
dec
mov
sarl
out
mov
pop
test
and
adc
dec
aad
cmpb
sti
push
mov
dec
insl
stos
xor
andw
mov
push
cli
cmp
aas
out
and
push
in
lcall
popa
sub
push
dec
mov
and
push
pop
dec
cld
popf
mov
push
xchg
pop
aam
les
loope
sbb
push
add
and
or
cmp
push
or
das
lds
jo
xchg
mov
pop
lahf
xor
repz
rcrl
ds
adc
mov
sub
jne
jl
sbb
adc
and
outsb
aad
fdivrs
test
jb
push
lock
mov
pushf
in
ret
xor
mov
jmp
xchg
xorl
insl
aam
jae
mov
int
mov
mov
add
jp
push
push
adc
scas
cmp
pop
sbb
mov
outsb
mov
aam
jb
xchg
rcrb
inc
push
fadd
shll
sarb
push
in
icebp
xchg
push
lea
test
sub
lret
mov
incl
lods
push
pop
pop
cmp
pop
mov
and
mov
jbe
cmp
lock
xchg
fistpll
jl
loopne
imul
push
jno
rorb
faddl
jno
cmp
mov
pop
xchg
inc
xchg
leave
dec
push
and
jg
in
imulb
xchg
daa
jge
cwtl
xor
iret
repz
mov
lea
pop
insl
add
jl
mov
and
negw
xor
into
iret
push
imul
mov
mov
cmp
cmp
inc
test
dec
jecxz
pop
pop
cwtl
or
push
xchg
sub
mov
or
out
popf
push
jp
movsl
out
inc
ss
ds
sahf
sub
mov
jnp
mov
cltd
mov
pop
arpl
shll
push
fsubrs
add
pop
repz
enter
or
xchg
jle
pop
jbe
xor
sub
in
aad
gs
xchg
fcom
push
outsl
jl
outsb
xchg
and
and
int
push
or
ds
rclb
std
xor
fisubrs
imul
dec
popa
inc
xorb
fcmovnbe
aad
cwtl
add
aas
push
sub
adc
dec
shlb
and
aas
mov
hlt
outsl
das
lds
mov
inc
aas
in
mov
fildl
jno
cmp
cmp
bound
test
repnz
jge
xorl
and
add
inc
fs
mov
mov
nop
int
push
sub
mov
sbb
xorb
lods
and
mov
mov
dec
call
xchg
and
lea
pop
mov
dec
scas
std
mov
jne
jo
adc
sub
fistps
leave
pop
adcl
sub
in
sar
xor
sbb
push
xlat
inc
es
sub
aas
push
lret
cltd
or
xor
dec
mov
das
mov
cwtl
les
pop
jae
scas
test
iret
cmc
xor
xor
insl
sub
pop
out
mov
aas
or
push
add
or
or
adc
mov
outsb
je
inc
in
cltd
movb
adc
mov
sbb
jo
add
cs
stos
movsl
ret
imul
sti
push
ret
and
sub
jl
jmp
cmp
mov
ret
push
xchg
sbb
jbe
test
or
mov
scas
addr16
inc
inc
call
jg
lds
xchg
sub
in
push
mov
outsl
mov
repnz
fsubrl
fwait
mov
add
jg
sti
inc
jns
out
es
push
adc
mov
pusha
fidivl
es
insb
lret
rdmsr
ret
cmc
ret
cmp
push
xchg
mov
mov
pop
dec
xor
shlb
loop
imul
cmc
adc
pop
arpl
insb
mov
xor
mov
mov
and
add
in
mov
cld
fmul
movsl
iret
subb
and
add
jne
out
push
out
adc
lcall
test
adc
icebp
xchg
stc
sbb
xchg
mov
and
in
mov
les
push
into
and
jmp
lock
add
cmpsl
test
into
push
test
sti
ret
movb
and
add
jns
jge
sbb
push
aad
add
and
pop
sbb
sub
mov
dec
dec
jp
inc
mov
mov
mov
dec
fadds
xchg
push
sahf
cltd
icebp
push
xchg
cmpsb
mov
jb
leave
xchg
hlt
sub
and
int3
and
cmc
mov
lahf
cmp
loop
mov
popf
stos
sub
pop
sbb
iret
data16
stos
addr16
mov
or
mov
adc
daa
outsl
out
nop
push
int3
ss
aas
call
in
mov
in
mov
ret
mov
add
div
add
push
test
fnclex
das
push
bound
jb
daa
or
add
push
dec
imul
mov
lods
cltd
push
mov
js
jecxz
push
pop
mov
jae
mov
jnp
das
mov
mov
movsl
loopne
sub
sub
adc
iret
imul
dec
jecxz
dec
inc
inc
cld
xchg
clc
cmp
jo
out
test
sub
jmp
mov
push
shll
dec
cmp
adc
mov
enter
jnp
cwtl
scas
xor
inc
add
mov
or
push
lar
cs
shll
data16
inc
push
inc
push
into
jp
test
lcall
xorb
dec
pop
neg
mov
push
jno
fisttps
dec
scas
xor
dec
sbb
pop
out
add
pop
dec
push
pop
popf
cmp
sub
mov
adc
pop
add
inc
mov
xor
test
sahf
fstpt
push
aad
loope
push
lods
int
out
xchg
xlat
mov
cmp
std
xor
repz
shll
mov
cmc
shlb
cmpl
jge
mov
mov
cmp
add
pop
mov
testb
decb
stc
ret
push
mov
aam
mov
lods
jg
or
mov
aam
sub
xor
adc
pop
cmpsl
loop
inc
ret
xlat
lahf
sub
sub
inc
cld
jns
movsl
in
jb
push
mov
pop
adc
movsb
jbe
push
std
loopne
or
test
mov
lods
std
dec
aas
aam
push
inc
mov
lcall
sbb
dec
lods
xchg
inc
into
cmp
test
xchg
cmp
jmp
mov
push
cmpsl
fistps
insb
xor
mov
fdivrl
and
aad
rcr
mov
pop
fistl
lcall
push
test
cmpsl
jne
mov
shr
loopne
in
xlat
push
aas
shlb
aad
lods
mov
pushf
lods
fadds
fsubrl
sub
or
xchg
pop
inc
sub
clc
pop
xor
aas
pop
push
mov
mov
jecxz
push
call
cmpsb
ret
mov
sub
sbb
imul
add
sbb
jo
je
push
shll
in
jmp
mov
dec
enter
adcl
cmpsl
cmpsb
inc
adc
and
add
adc
or
rorl
lods
push
xor
loopne
adc
pop
mov
adc
add
sub
dec
mov
xor
test
lock
fcmovnb
xchg
mov
mov
sub
repnz
mov
js
sbb
stc
icebp
pop
aas
add
fimuls
out
adc
mov
dec
rolb
xchg
sbb
cmp
xchg
jae
mov
movsb
mov
or
scas
int
mov
mov
insb
call
xchg
mov
add
push
das
ret
fmull
imull
lods
mov
lock
cmpsb
push
rep
hlt
jae
incb
pop
and
shll
pop
and
cli
les
inc
loop
jo
add
data16
mov
xchg
popa
xchg
andl
adc
adc
inc
mov
adc
cmp
inc
lods
dec
pusha
in
jmp
cltd
or
push
xacquire
iret
sub
popf
and
push
cmp
pop
inc
cld
mov
mov
xchg
sub
out
test
in
into
push
fprem
pop
sbb
mov
dec
pop
imul
mov
jecxz
sbbl
cmp
sbb
cltd
fsubs
pop
lods
adc
mov
dec
inc
push
mov
push
dec
les
pavgw
sti
fsubs
clc
inc
sar
xchg
jne
or
jg
outsl
nop
lods
inc
in
cltd
into
xor
xor
cmpb
rorl
xchg
loop
stos
test
push
mov
rcll
cmp
and
addr16
aam
lret
sarl
or
out
add
notb
insl
cmpsb
push
push
fs
clc
jno
cwtl
xchg
sub
jmp
add
out
int3
dec
dec
nop
dec
out
xor
out
mov
mov
push
adc
roll
xor
aas
movl
add
in
hlt
xchg
inc
adc
stc
sub
xchg
sbb
dec
mov
sub
xchg
pop
inc
sbb
inc
add
incl
sbb
xchg
out
xchg
je
mov
mov
sub
pop
mov
jnp
mov
lods
pop
mov
sahf
sbb
pop
add
xor
je
outsb
xchg
sbb
ljmp
jl
dec
out
shlb
jno
inc
pop
mov
popa
aad
test
int
pusha
push
xor
aad
loop
mov
sti
mov
push
pusha
xlat
je
divb
mov
mov
pop
dec
std
xchg
sbb
inc
test
dec
outsl
jle
mov
es
sti
stc
inc
in
jbe
lahf
inc
enter
xor
imul
mov
sub
inc
adc
mov
add
data16
xor
icebp
and
dec
inc
mov
and
and
out
xor
popa
push
fidivrs
mov
or
cmp
shrb
div
cmpsl
xchg
xor
pop
and
sbb
mov
pop
mov
fwait
pop
jns
mov
jge
test
adc
in
sti
mov
cltd
icebp
xor
mov
icebp
mov
mov
jl
xchg
call
mov
and
xchg
in
cmp
inc
cli
lcall
push
imul
int3
ret
xchg
cmp
loope
jg
repz
rcrl
cltd
out
jp
inc
sbb
setnp
mull
popl
inc
mov
and
mov
mov
ret
sbb
jl
sub
adc
xchg
or
add
mov
movsb
ja
mov
pusha
out
and
pusha
mov
jmp
movsb
int3
and
lods
pandn
sbb
sbbb
test
sbb
stos
sbb
jb
bound
adc
in
out
jmp
enter
out
fiaddl
fnstsw
jmp
sbb
mov
mov
dec
push
dec
inc
dec
fwait
inc
fwait
inc
loope
xchg
clc
je
mov
push
sub
mov
orb
mov
mov
int3
js,pt
fcoml
xor
xchg
stos
xor
mov
stc
mov
xor
mov
mov
pop
xchg
ljmp
popa
dec
cmp
mov
xchg
mov
loopne
pop
jmp
fcmovb
daa
xchg
mov
xchg
mov
add
push
jbe
add
inc
mov
imul
sub
push
iret
loop
ret
mov
push
sbb
add
push
cmp
push
push
and
mov
jbe
xlat
sub
leave
outsl
adcb
pop
js
xlat
mov
adc
xchg
loop
das
icebp
jg
mov
shlb
cmpsb
lods
push
adc
jno
cmpsb
xor
out
loope
push
ret
cmp
roll
or
mov
mov
push
es
rorl
push
jae
mov
xchg
lock
fs
or
adc
xor
jp,pt
push
fs
iret
lret
inc
jle
incl
xor
ljmp
xchg
xlat
jge
insl
xor
dec
and
or
addr16
pop
and
addl
dec
dec
test
xor
mov
scas
into
js
lret
loope
das
repnz
add
sbbb
sbb
push
stc
scas
popa
test
dec
icebp
sub
imul
sub
mov
pop
ret
and
mov
dec
bsf
jno
mov
cmp
cli
aaa
mov
adc
scas
testl
loope
lahf
cmp
cmp
jo
mov
mov
sub
lret
push
add
mov
cmp
pop
sub
shl
adc
out
adc
aas
fdiv
in
xchg
sbb
sti
repz
icebp
add
daa
mov
sbb
jg
add
xchg
sub
das
mov
shl
jmp
outsl
push
lods
jge
pause
push
mov
mov
adc
jg
shlb
jle
pop
cmp
lret
ja
push
pop
mov
mov
mov
xchg
insb
push
dec
fstps
mov
fdivl
dec
sbbb
jo
and
dec
mov
xchg
in
dec
out
mov
mov
sub
or
xlat
push
loop
into
rclb
xchg
inc
aas
xor
xchg
add
fs
dec
fisttpll
rol
or
push
or
mov
movb
enter
fwait
adc
sub
adc
cmp
mov
fistps
inc
ds
sbb
xchg
xor
xchg
loope
pop
cli
ret
push
adc
jbe
and
lahf
in
xor
add
mov
mov
test
int
jno
cs
mov
sub
inc
fiadds
inc
inc
jnp
push
cmpsl
sub
add
sbb
dec
xor
cmp
mov
in
and
xlat
pop
inc
pop
test
dec
mov
lcall
mov
test
repnz
into
mov
push
iret
shlb
imul
pop
mov
cs
jno
inc
aad
adc
inc
test
js
popa
xchg
mov
push
inc
movsb
cli
in
outsl
loope
fstpl
sub
adc
das
aam
jle
jge
push
fwait
lea
lods
jge
adcb
xor
dec
adc
add
ss
and
mov
ret
jg
fs
repnz
xor
push
jb
pop
insb
ficoml
mov
sti
mov
cmpsl
inc
dec
repnz
lea
pop
inc
pop
out
cwtl
test
or
pop
mov
jl
sbb
lret
pop
jge
inc
ja
add
add
cmp
push
movl
xor
mov
push
gs
sti
xchg
jnp
xor
out
push
fimuls
orl
orl
mov
lcall
adc
xor
and
or
push
mov
pop
xchg
repnz
rcr
sahf
stc
sbb
mov
pusha
rcr
popf
fmulp
xor
in
out
mulps
add
mov
loop
movsb
inc
es
mov
push
xchg
dec
cli
shll
jmpw
loop
jmp
xchg
cmp
and
mov
gs
addb
adc
fidivrs
adc
jle
mov
insb
push
push
cwtl
mov
inc
inc
movsb
stos
push
test
daa
int
outsb
dec
xchg
pop
sbb
push
in
bound
or
js
xor
nop
adc
mov
sbb
cmp
push
push
mov
pop
pop
das
inc
andl
or
fidivl
mov
pop
push
jle
jo
push
outsb
inc
add
arpl
out
daa
lds
xor
aas
in
outsb
ret
jle
mov
add
out
sub
xchg
mov
adc
lods
dec
jnp
js
pushf
fadds
and
shrl
xor
neg
sub
push
add
into
xchg
repnz
outsl
xchg
cmp
mov
mov
jae
cmp
stos
rclb
lcall
pop
sub
mov
imull
popa
cmc
mov
push
hlt
hlt
push
or
adc
cmp
cli
sub
sbb
out
push
ss
outsl
pop
cmp
imul
scas
cmc
adc
sahf
in
jmp
mov
jmp
jle
mov
xchg
stos
daa
lea
in
stc
mov
mov
test
imul
test
inc
scas
xchg
add
mov
mov
sbb
push
sub
xchg
mov
cmp
fldl
sbb
cmpsl
cli
push
dec
xchg
xor
sub
push
lahf
orl
test
popl
pop
idivb
sbb
and
in
negl
scas
sbb
fsubrs
jp
jno
adc
mov
mov
xchg
jmp
fldcw
icebp
xchg
movsl
pop
in
sub
pusha
and
xlat
add
mov
popf
adc
outsb
cwtl
rolb
jno
inc
push
jp
or
daa
add
imul
inc
aaa
test
jmp
sub
push
mov
xchg
push
mov
pusha
sub
sub
pop
jg
pop
cmpsl
pop
and
xchg
xchg
jno
loop
dec
add
rcl
cwtl
push
jle
mov
pop
jns
rcrl
inc
jmp
scas
icebp
lds
hlt
push
adc
test
ja
cld
add
dec
call
int3
xchg
insl
mov
sub
and
xchg
jbe
cmp
or
frstor
jle
push
loopne
inc
outsb
push
mov
cmp
sbb
push
es
dec
mov
std
xor
insb
push
stos
xor
lock
mov
xlat
lock
and
in
mov
lahf
call
iret
dec
push
lret
daa
iret
sub
scas
mov
loope
cmp
add
pop
fwait
rol
dec
pop
jne
movsl
cmp
ja
repz
cmc
mov
mov
mov
inc
filds
push
mov
loop
sub
push
pop
push
fildl
jae
dec
ss
xchg
sti
jb
lods
icebp
mov
mov
mov
fwait
or
sbb
jbe
dec
loopne
inc
and
jp
mov
scas
push
mov
mov
mov
xor
push
inc
mov
and
sbb
test
loope
sti
cwtl
lods
inc
lcall
pop
jnp
rcl
dec
and
add
shll
clc
daa
mov
ja
push
xor
xor
mov
addr16
jl
ficompl
pop
add
add
add
arpl
add
jbe
ret
pop
xor
cmp
lods
div
fwait
push
popf
cmp
aad
lret
add
dec
andl
pushf
mov
es
adc
jae
movsb
shl
popl
pop
filds
ficomps
ja
cli
or
data16
sbb
jmp
and
mov
jns
ret
sahf
sub
and
pusha
pusha
push
es
push
and
repnz
cmpsb
or
ja
sub
shlb
dec
cmpsl
sub
pop
jge
dec
inc
adc
das
or
or
fwait
push
aaa
jns
pop
insb
rcrb
dec
or
lret
xchg
fcoml
xor
mov
std
aaa
push
jg
movsb
ret
mov
inc
push
ljmp
pop
add
mov
loope
in
fwait
lcall
cltd
lods
lret
loope
sub
mov
lret
mov
stos
idivb
ss
sub
xchg
inc
nop
mov
sbb
aas
mov
add
jl
jecxz
arpl
pusha
jmp
and
frstor
fisubs
cmp
inc
notl
jecxz
push
loopne
out
popa
aaa
test
pop
xchg
add
scas
mov
cmpsb
pop
inc
jg
and
mov
push
int
and
pop
add
shl
inc
imul
push
jb
add
dec
sbb
mov
dec
stos
test
int3
mov
push
jb
push
insl
pop
bound
jl
daa
pop
subb
cld
movsb
ja
fbstp
xor
out
cmpsl
fs
aaa
pop
inc
sbb
loopne
aam
jb
outsb
jmp
sti
or
sarl
mov
dec
das
jo
inc
je
push
test
push
push
fadd
das
push
cltd
mov
fs
dec
pop
std
cs
mov
lret
mov
add
xchg
xor
shrl
xlat
sub
or
insl
das
add
xorl
ja
leave
xchg
addr16
push
push
aam
or
cmp
xchg
jl
ss
mov
mov
mov
jno
and
jb
dec
arpl
xor
mov
push
daa
dec
pop
mov
rcrb
sbb
mov
lret
ds
xchg
xchg
push
xchg
lret
cwtl
in
and
fisubs
cwtl
fiadds
jnp
xchg
sub
lahf
fldenv
jne
pop
outsb
test
dec
cmp
jmp
cmpsb
push
imul
jo
adc
stc
cmpl
push
jg
lea
adc
adc
test
int
push
mov
std
or
and
push
loop
lcall
dec
lret
mov
mov
xchg
xor
out
mov
gs
arpl
add
add
xor
imul
mov
sbb
mov
loopne
inc
out
xor
scas
inc
jnp
adc
xchg
ret
pop
push
movsl
jle
jecxz
add
pop
mov
mov
in
dec
jge
aas
jg
lods
push
lds
push
jno
bound
fdivs
sub
dec
push
or
inc
xor
shrb
sub
inc
inc
cmpsl
cmpsb
shrl
mov
cmc
rol
sbb
pop
mov
mov
sbb
mov
scas
lock
arpl
aad
nop
mov
mov
push
inc
inc
cmpsl
pushf
fldcw
mov
cs
or
sti
jb
sbb
mov
xchg
push
cwtl
inc
xor
leave
push
xchg
mov
pop
xchg
jmp
add
movsb
sub
xor
sub
sub
sbb
xchg
mov
cli
nop
clc
lret
out
jle
pop
push
adc
mov
or
ret
inc
jecxz
hlt
mov
loope
mov
roll
sub
sub
jp
adc
sbb
dec
ja
mov
inc
and
insl
cmpsl
mov
pop
out
cmpsb
fsub
pop
add
sub
jne
mov
and
mov
sbb
shll
sub
cmpsl
xchg
xchg
fwait
test
mov
and
dec
jp
mov
add
add
jg
cmp
mov
push
push
daa
or
lret
leave
nop
dec
in
nop
jbe
popa
and
and
data16
out
sub
loop
pop
fcompl
cmp
icebp
aad
jb
mov
jno
fistl
jo
push
adc
fistps
pop
fucomp
mov
cmp
jbe
dec
jne
add
movsb
lock
pop
imul
js
js
and
jno
push
js
mov
cmp
jno
imul
add
or
mov
xor
pop
daa
je
inc
fstl
es
cmc
jne
aad
dec
lods
fstpl
mov
sbb
std
sub
iret
pop
push
jnp
loopne
lcall
cmpsb
repz
sub
xor
aam
dec
popa
mov
push
roll
pop
std
jp
cmp
addr16
insl
mov
push
clts
icebp
daa
cld
daa
out
aaa
inc
pop
pop
or
or
cs
sbb
repnz
lret
inc
movups
in
mov
mov
psrad
jge
ja
inc
mov
insb
inc
xchg
inc
jle
xor
xlat
daa
jbe
cmp
sbb
pop
imul
cmp
mov
es
xor
sbb
xchg
pop
movsb
fwait
mov
stos
add
in
add
pop
jecxz
aas
les
jg
mov
addr16
fiadds
jge
cmp
push
scas
sub
int3
adc
enter
inc
pop
lods
xchg
nop
fsubl
or
inc
sbb
je
mov
pop
das
outsb
mov
cmp
lock
mov
push
adc
push
aam
xchg
push
enter
imul
movsb
jle
movsb
jp
pop
shrl
fwait
add
mov
jae
inc
stos
xchg
icebp
jle
in
mov
mov
inc
in
mov
or
test
sbb
add
push
outsb
adc
mov
jo
call
loop
ljmp
scas
ljmp
lcall
jp
ds
push
and
popf
dec
jle
add
mov
mov
pusha
inc
mov
scas
xchg
pop
or
test
xchg
inc
pop
push
inc
xor
aam
fcoml
inc
mov
jg
ret
xchg
addr16
mov
adc
mov
ror
cmovle
pop
push
scas
sub
inc
js
sub
mov
inc
pushf
sbb
scas
or
outsb
or
fs
cmp
insl
fsubrl
shr
push
mov
adc
inc
jno
inc
shlb
dec
out
and
pop
or
orb
sub
movsl
sub
ljmp
and
loope
ja
fdivrp
inc
int
popa
pop
xor
mov
add
addr16
cmp
popf
xchg
xchg
mov
fwait
xchg
arpl
hlt
sbb
int
sti
xor
xor
js
ficoml
ret
jmp
cmpsl
enter
push
pop
or
aas
push
jbe
std
fidivl
lds
hlt
mov
fs
mov
in
pop
dec
insl
pushw
data16
sar
xchg
iret
lahf
sbb
cli
jbe
dec
inc
xchg
push
lea
adc
pop
in
and
pop
outsl
fimull
adc
jne
stos
stc
xor
out
icebp
frstor
inc
cli
lods
aad
pop
ljmp
std
mov
retw
movl
ds
popa
mov
dec
mov
sub
scas
inc
ficomps
mov
mov
sub
mov
mov
inc
test
arpl
push
xchg
inc
mov
ret
or
fstpl
sbb
adc
jb
jne
data16
loopne
out
insl
ror
mov
xchg
fisubs
xchg
fldenv
adc
in
inc
cmpsl
cltd
fcoms
gs
rcrl
add
int
dec
daa
loope
lock
adc
push
pop
pop
or
call
cmp
fldl
ss
rcr
enter
addr16
and
push
lock
add
les
aaa
sarb
lret
mov
mov
out
loop
test
push
lcall
mov
test
leave
xchg
call
loope
add
es
pop
mov
and
faddp
xchg
in
lea
cmpsl
ljmp
and
mov
push
adc
xorl
daa
lcall
push
dec
sbb
loop
or
or
aam
arpl
pop
pop
sbb
or
jmp
sbb
es
inc
pop
loopne
or
or
ret
add
dec
push
std
or
lret
ret
xchg
sbb
or
sahf
push
mov
loope
or
insb
sbb
mov
mov
push
inc
and
push
inc
pushf
mov
aad
jne
add
insb
xlat
adc
xlat
ficoms
outsb
or
jle
imul
dec
lds
fnstcw
out
pop
nop
pop
lods
stc
cs
cmp
lea
and
mov
dec
das
in
dec
and
das
jne
cmp
gs
mov
mov
fisttpll
dec
fwait
sub
test
mov
rep
xor
popf
cmp
loop
and
loopne
pop
pushl
mov
mov
push
outsb
mov
pushf
push
mov
dec
std
std
xchg
cmp
loopne
or
jno
inc
cmp
add
test
jmp
out
jmp
jo
xor
rclb
sbb
lock
pop
jb
cmp
sbb
sub
pop
or
scas
cmpsl
xchg
pop
jmp
loop
fs
inc
lods
mov
stc
or
rcll
int3
lea
adc
jmp
jmp
lods
cmp
ss
xor
mov
movsb
xor
add
push
and
test
jo
adc
cmp
shl
jl
hlt
orl
mov
xchg
xor
jge
shlb
jle
xchg
and
fmul
fisubrs
push
in
stc
push
popa
cmpl
in
adc
push
xchg
sti
outsl
clc
mov
inc
shll
sar
int3
das
jnp
and
and
mov
gs
in
jle
cmovb
sub
push
and
xchg
pop
mov
dec
jp
jbe
test
fidivl
out
lret
xor
enter
mov
sbb
add
mov
out
movsb
and
pop
xchg
out
sbb
fistps
sti
push
in
inc
scas
sub
imul
bound
inc
hlt
xchg
test
movsl
popa
mov
fnstcw
jnp
jb
mov
fnstsw
jmp
and
mov
mov
addb
popf
ja
out
out
inc
pop
cmpsl
cmp
mov
clc
orb
negb
add
mov
test
push
dec
stc
xor
arpl
movsb
xor
push
lods
cwtl
cwtl
call
jb
lfence
lret
jmp
loopne
jp
add
cmpl
jns
jmp
aas
jnp
lock
mov
lahf
stos
bound
xchg
ret
test
push
add
lock
xchg
ds
bound
int
and
stos
and
add
pop
stc
mov
xchg
mov
adc
in
imul
je
movsl
cltd
push
fiadds
aaa
cmp
loope
outsb
fdivrp
loop
sbb
dec
lret
fldz
xchg
jecxz
pop
cld
xchg
pop
push
dec
cmp
lds
imull
mov
jno
pop
dec
add
push
cmp
sbb
inc
mov
jmp
scas
out
cs
sti
adc
mov
adc
into
or
ret
and
es
jns
dec
mov
xchg
mov
mov
sbb
cmp
cwtl
push
fiadds
adc
xor
bound
mov
ljmp
popl
add
cmc
pusha
sub
pop
or
mov
and
xor
jns
pushw
aam
jge
mov
cmp
outsb
es
pop
aaa
hlt
test
sbb
sub
cli
rolb
dec
pop
lods
jmp
mov
dec
nop
mov
push
imul
sub
pusha
xor
mov
dec
push
mov
es
nop
lret
xchg
fists
and
mov
and
cmpsb
push
fst
adc
inc
mov
mov
shlb
jge
mov
dec
pop
cmpsb
mov
leave
lods
or
les
xchg
add
adc
sahf
push
insl
movsb
sub
xchg
xlat
int
sahf
jb
jecxz
aaa
imul
idivb
out
push
nop
jmp
shrl
test
mov
sub
dec
jg
adc
push
insl
and
jo
sub
or
push
insb
out
jp
ret
adc
dec
dec
push
cmpsb
mov
add
ret
xchg
in
cmp
clc
cmp
dec
jge
mov
xchg
sbb
ficoms
imul
sub
mov
setp
push
pop
cmp
add
in
rcll
and
pop
inc
call
pop
xor
cmp
out
jne
inc
adc
and
sahf
mov
jecxz
inc
inc
inc
push
xchg
or
fs
int3
sub
cmp
in
mov
ss
sbbl
addl
repnz
cmp
out
outsb
in
repz
jns
jne
jle
js
pop
mov
gs
jle
es
or
or
mov
sahf
in
inc
or
imul
sub
js
es
jbe
lods
jbe
and
xchg
mov
xchg
int
stos
mov
fisttpl
cli
aas
aad
rcrl
shlb
pushw
mov
sbb
jg
cmc
add
push
cmp
insb
inc
fcomp
shl
add
scas
mov
call
inc
pop
or
mov
sti
cmp
rcll
outsl
adc
pop
stc
mov
insl
inc
addb
test
rclb
fsts
push
push
stos
mov
mov
jno
loop
cltd
rcrb
xor
aam
or
mov
xor
out
mov
sub
push
sub
repz
pop
in
cmc
cli
daa
rcrb
cmp
cmp
rclb
mov
inc
sub
insl
mov
xchg
negb
iret
pop
shlb
xor
pusha
push
and
pusha
jmp
mov
mov
mov
cmp
loop
ds
mov
test
dec
orb
sbb
jg
jl
incl
sahf
jae
out
dec
aas
addr16
xlat
mov
or
mov
add
pop
js
fcoml
inc
adc
mov
push
lret
sub
sub
pop
cmp
lods
je
dec
inc
fidivrs
sbb
or
mov
xor
testl
adc
shr
mov
dec
insl
pop
popa
pushf
xchg
jns
sub
jge
inc
xor
cmp
pop
in
and
out
nop
fsubrl
dec
cmp
mov
sbb
test
push
and
bound
adc
push
pop
out
sbb
sub
test
add
enter
shll
xchg
cs
sarb
xchg
pop
cmp
stos
jmp
gs
mov
cs
and
sbb
jnp
xor
cmc
fs
sub
sub
and
lock
xchg
xchg
enter
cwtl
inc
mov
outsb
xor
movsb
aaa
xchg
inc
mov
inc
ret
xor
cmp
xor
lahf
pop
add
loop
sub
sub
push
dec
int3
and
dec
outsb
add
fbld
data16
iret
adc
adc
pop
pop
ror
ret
inc
cmp
in
cmpl
repz
and
aad
jmp
push
imul
imull
nop
mov
mov
ret
aaa
adc
sti
fucomip
push
arpl
xor
movb
mov
jecxz
mov
cmpsb
gs
loope
xchg
lret
push
dec
mov
lcall
sbb
lods
or
xchg
int
adc
insl
aas
jns
fidivl
call
jecxz
fidivs
or
nop
push
in
in
cmp
aad
cli
lds
sbb
jl
in
mov
icebp
adcl
das
push
pop
div
cli
std
xchg
jge
insl
popf
gs
ret
xor
xor
adc
cmpsb
mov
test
out
dec
push
outsb
arpl
cmc
loop
testb
sub
rcll
jb
pop
ret
mov
fcoml
cs
lret
sti
sub
sbb
movb
push
cmp
dec
jmp
xchg
sbb
out
push
sbb
clc
ror
test
sub
xor
mov
rclb
stos
aaa
cwtl
addb
push
mov
jge
add
mov
test
dec
mov
lahf
fstpt
mov
popa
push
fcmove
data16
ret
ljmp
int3
dec
data16
jmp
sub
and
xor
xchg
add
cmp
adc
or
stos
sub
pop
pop
mov
xor
hlt
dec
and
iret
sub
pusha
cmp
pop
pop
out
jge
push
out
or
mov
adc
pop
jle
adc
add
jg
fs
fildll
mov
and
mov
xchg
and
or
scas
addr16
xchg
pop
pop
jns
jg
push
cmp
and
fadds
xlat
mov
bound
lods
ret
hlt
mov
cli
iret
pusha
xor
fnop
xlat
jo
or
mov
insl
fbstp
xor
rolb
test
jae
and
xchg
xchg
ja
fcom
inc
movsl
cmovb
popa
mov
aam
filds
adc
ret
inc
daa
daa
inc
cmp
and
dec
test
stc
fistps
cmpb
jo,pn
inc
jno
dec
xor
std
cmp
cmp
mov
add
mov
jbe
mov
aas
aas
xchg
mov
lahf
stos
mov
jo
mov
movsb
inc
bound
iret
pop
sbb
push
loopne
xlat
sahf
addr16
push
loope
sub
sub
and
push
push
mov
popf
mov
jmp
sub
lods
fcomps
jo
movsb
lock
mov
ret
inc
fimull
sbb
xor
mov
clc
nop
imul
sbb
dec
mov
mov
sbb
pop
and
lret
scas
lds
inc
scas
mov
mov
jbe
es
sbbb
lods
fidivrl
popf
push
cmpsl
sub
mov
xchg
push
mov
loopne
push
sub
ret
pop
sti
leave
mov
xchg
xchg
les
in
dec
loopne
inc
shrl
push
sub
aaa
fstl
sub
mov
add
sbb
inc
push
in
dec
pop
cld
add
sub
loopne
cmpsb
push
je
jecxz
mov
dec
scas
push
lret
mov
fisttpl
mov
aaa
mov
or
fdivrp
sahf
ficoml
shlb
imul
xor
js
pop
xor
jae
ja
aaa
lods
mov
mov
daa
cmp
push
xchg
xchg
pop
dec
inc
mov
mov
and
loopne
repnz
lock
and
imul
enter
xchg
ret
xchg
jns
xchg
stos
fsubrs
mov
clc
fsts
jg
hlt
cmp
xor
pop
imul
bound
aas
or
jne
xor
leave
inc
cmp
dec
sahf
lahf
test
dec
das
inc
mov
push
in
loop
enter
repz
xchg
subl
lds
mov
test
mov
mov
stos
mov
sbb
push
lret
jnp
dec
and
es
jg
inc
adc
inc
xor
out
test
and
es
outsl
pop
add
push
std
add
fbstp
aaa
push
jnp
js
cli
lret
lret
bound
jnp
and
xor
ret
lret
inc
jae
lods
dec
outsl
sbb
jae
mov
roll
mov
inc
pop
je
push
roll
and
lock
mov
data16
daa
xchg
pop
in
sub
loope
out
mov
push
mov
imul
xchg
cmpsb
pop
dec
cmpsb
mov
movsb
or
adc
adc
adc
mov
push
insb
out
outsl
shrb
and
ficoml
mov
out
inc
or
leave
int3
sbb
inc
cmp
lods
imul
cs
pusha
inc
push
mov
pop
leave
lods
sub
add
jo
inc
push
outsl
ret
pop
push
rcll
mov
ljmp
pop
sub
pop
ficoms
jge
lods
fwait
dec
push
loope
inc
stos
pop
mov
gs
je
out
inc
cmp
pop
mov
add
fcoml
push
mov
cmp
cli
jecxz
xchg
clc
int
test
sub
dec
sub
hlt
jo
push
jno
mov
loopne
push
inc
jbe
shlb
cwtl
sub
jge
repnz
lods
and
adc
addr16
jne
xchg
test
xor
mull
mov
in
push
mov
ret
rolb
pop
mov
sbb
out
outsl
xor
das
sti
fs
add
adc
inc
cmp
jnp
add
cmp
mov
or
scas
adc
xor
pop
aas
push
cwtl
push
jnp
jo
jns
cwtl
insb
shrl
stos
mov
or
push
adc
mov
lahf
iret
sub
fwait
adc
push
mov
pop
mov
inc
xor
jae
mov
mov
mov
and
push
in
sbb
inc
or
movsl
mov
mov
xchg
xchg
jb
lahf
outsb
push
icebp
xchg
cmc
dec
movsb
adc
inc
fstpl
mov
inc
mov
leave
repz
xlat
inc
test
lcall
sub
push
and
or
adc
xlat
pushf
xchg
mov
mov
xchg
mov
xchg
fdivr
imul
sahf
dec
sub
jae
cmp
test
lds
lret
mov
sub
popf
add
test
mov
int
icebp
xor
lahf
add
jbe
sbb
mov
cwtl
sbb
mov
add
mov
popa
push
hlt
out
mov
mov
das
arpl
inc
lods
sbb
sbb
cmp
ficoml
sub
je
add
pushl
push
into
adc
repz
inc
mov
jmp
aad
fisttpll
shll
test
lahf
mov
loopne
push
mov
cld
pop
clc
out
sbbb
sub
addr16
pop
loop
outsl
fwait
pushf
add
shll
fisttpll
xchg
jge
pusha
cmpsl
ja
mov
aas
call
pop
sub
cltd
push
test
das
pop
inc
dec
pop
enter
mov
dec
iret
xor
jge
mov
push
mov
sub
fcmovu
pop
mov
outsb
cmpb
dec
pop
inc
xor
or
dec
push
sub
inc
icebp
lret
lcall
arpl
iret
pop
data16
sbb
popf
sub
call
mov
mull
adc
and
std
jg
cmc
and
fidivrl
test
pop
and
mov
pushf
lods
lahf
inc
cmp
stc
pushf
push
adc
popa
imull
popf
aas
std
add
mov
adc
into
add
data16
pop
dec
sti
xor
pop
inc
lret
mov
mov
std
sbb
scas
sub
and
mov
cmpsb
jp
mov
xchg
lea
aas
inc
cmc
inc
faddp
test
fdivs
or
divl
pop
push
jno
push
cld
mov
xchg
cld
rcrl
adc
mov
imul
sbb
sbb
lahf
sahf
ss
repz
sarb
push
lea
arpl
sub
mov
jp
bound
sub
xchg
gs
sbb
enter
xlat
addr16
mov
lods
stos
add
imul
scas
dec
aad
in
xchg
in
jl
test
sbb
xchg
pop
sub
rolb
adc
add
hlt
repnz
or
lret
sahf
push
and
jb
jg
sub
sahf
sub
or
xchg
sbb
popa
aad
jl
stos
sbb
aad
ficomps
inc
jns
cltd
mov
dec
xor
jnp
outsl
shrl
ret
mov
lods
lods
loop
in
or
lret
jo
and
mov
int3
adc
pop
inc
lea
and
stc
dec
jge
negl
mov
jo
push
adc
lret
repnz
stos
inc
add
fnstsw
adc
jno
notb
addb
sub
cmp
repnz
loop
inc
add
push
loop
cmp
jmp
mov
adc
sub
mov
jp
xchg
jle
iret
push
repz
fistl
insb
pop
outsl
and
xor
repnz
ja
fwait
and
hlt
push
xlat
or
add
sbb
scas
push
lods
adc
mov
stc
push
jne
mov
sub
mov
test
ror
in
mov
jne
jae
dec
jne
movl
dec
add
dec
dec
sbb
xor
dec
roll
pop
pop
adc
sub
xchg
sarl
lock
push
popa
xlat
repnz
fcmove
int3
les
add
popf
add
inc
push
popf
and
mov
mov
xor
rcrl
sub
xor
sub
dec
adc
scas
cmpsb
push
aad
jnp
lahf
dec
push
daa
das
push
shr
ss
mulb
lret
pop
mov
sub
xor
or
or
cmp
xor
gs
xlat
aam
adc
aaa
repnz
pushf
je
pop
sarb
sbb
sub
cmpsb
fs
xchg
bound
xlat
hlt
mov
jmp
hlt
mov
and
push
add
jg
arpl
cmc
and
mov
xor
jne
pop
and
out
inc
dec
mov
cs
inc
adc
push
in
xchg
or
fnstenv
cmp
mov
and
push
pop
bound
call
lds
xchg
cmp
ror
adc
cmp
ret
jg
test
div
and
mov
xor
mov
call
or
shl
mov
test
jg
loopne
aam
cmc
or
jno
ret
inc
lock
scas
or
and
stos
cwtl
test
sub
insl
adc
ret
mov
je
aas
shll
fidivl
mov
lods
enter
lods
dec
in
ret
xchg
mov
push
pop
xchg
dec
pusha
jbe
in
adc
mov
and
add
mov
dec
pushf
push
cli
loop
dec
pushf
lcall
sub
and
cltd
push
mov
outsb
xchg
pusha
bnd
adc
adc
sbb
aaa
jmp
imul
mov
ficoml
popf
int
inc
fcmovbe
xor
mov
jae
xchg
xor
sbb
mov
dec
mov
in
in
xchg
inc
jp
jle
lock
sbb
jmp
out
test
lret
xor
test
inc
nop
out
xor
jnp
mov
ficomps
jnp
insl
test
fimuls
xor
repz
lret
addr16
dec
push
jb
cltd
sbb
pop
pop
inc
jl
shlb
pop
xchg
pop
xor
inc
add
pop
movb
sbb
aas
xor
add
cmp
ret
push
inc
sbb
dec
pop
jg
in
lcall
inc
std
mov
dec
mov
sbb
jae
addr16
stc
mov
sub
add
dec
inc
xlat
ficoms
dec
xchg
or
ret
push
or
sahf
sub
stc
mov
xor
push
lods
xor
rcrl
jo
xchg
jg
pusha
mov
jmp
mov
outsb
shld
movsl
inc
lea
sub
jae
adc
stos
pushf
jo
cltd
xorl
je
mov
les
xor
sub
std
jbe
inc
mov
fnsave
add
pop
jne
bound
xchg
dec
push
xor
icebp
lock
rorl
daa
ljmp
popa
pop
sub
mov
in
mov
dec
cmp
dec
and
xor
inc
les
or
les
pop
sti
pop
cmpsl
mov
xor
aas
fists
dec
xchg
add
int
xchg
or
or
leave
sqrtps
call
push
mov
pop
jmp
inc
sarl
mov
daa
jmp
pop
push
mov
notl
inc
rolb
iret
push
and
or
pusha
das
mov
repnz
stos
jg
mov
mov
out
ds
rcl
ljmp
pop
xlat
mov
mov
and
and
int3
push
dec
mov
push
mov
das
mov
scas
push
xchg
mov
cmp
adc
jns
out
into
sbb
fstpl
sbb
cmpsb
inc
mov
mov
js
ljmp
inc
dec
sub
mov
adc
cmp
sbb
sub
and
mov
cmpl
lock
repz
pop
andl
pop
rorl
fisubrs
cmp
add
and
xor
popa
add
sbb
shl
pop
je
sbb
in
mov
mov
adc
shll
dec
iret
mov
mov
lcall
incb
bound
pop
mov
js
xchg
jb
xor
popf
in
or
push
notl
popf
test
push
or
insl
jl
jo
imul
btsl
cs
sti
adc
stos
or
repz
sub
jl
in
pop
dec
pop
out
test
push
xchg
cmp
and
jl
push
pop
mov
mov
sarb
cmpsl
in
sub
jecxz
lock
dec
pop
inc
enter
nop
xchg
das
or
mov
into
movsb
sub
outsl
add
dec
push
fdivr
das
push
inc
dec
inc
out
push
dec
in
fcoml
add
jno
pop
mov
lds
cld
pop
jo
outsl
test
jmp
int
or
mov
push
insb
out
cli
pusha
mov
cmpsb
test
hlt
lret
and
sbb
leave
aam
stos
adc
jnp
push
cmp
push
outsl
push
repz
add
test
or
loopne
fisttpll
lahf
std
mov
mov
test
pop
cwtl
jecxz
rcll
cmp
adc
or
ds
clc
adc
ds
or
mov
jg
sbb
jecxz
fidivrl
mov
mov
rolb
mov
or
imul
jns
jns
mov
sbb
cmc
es
outsb
pusha
inc
xchg
sbb
bnd
xor
jno
imull
push
orb
inc
jg
push
push
out
jp
xchg
test
pop
pop
sti
test
leave
jecxz
ficomps
jle
sahf
xchg
mov
pop
out
test
inc
mov
sbb
test
loope
dec
xchg
cld
xchg
sbb
es
cmp
add
sbb
outsb
test
or
sub
sub
xchg
outsb
outsb
jecxz
sti
lret
add
pop
pop
mov
or
lds
jae
mov
cmp
call
sub
pushf
add
push
mov
sbb
ret
sysret
pop
ja
mov
mov
mul
cld
out
mov
pop
push
in
into
sub
or
push
fs
loopne
in
xchg
or
cmp
jecxz
ror
dec
std
fwait
jae
aam
out
iret
movsb
pop
jl
ljmp
hlt
adc
into
aam
xor
mov
sbb
enter
cld
pop
rcll
pop
in
push
cmp
test
mov
js
js
dec
sarl
repz
int
pop
add
jne
xor
ja
push
in
out
jae
sahf
xchg
mov
cmp
clc
outsl
outsb
lods
jo
jnp
xchg
sbb
push
adc
inc
jl
into
or
cmp
call
push
push
sub
fs
stos
in
pushf
dec
shlb
push
stc
test
xor
out
push
or
pop
sbb
cmp
andb
pop
hlt
and
jae
jns
test
adc
loope
addr16
lds
div
mov
lock
push
jnp
mov
and
xchg
in
pop
dec
or
fwait
cmpb
mov
pop
pop
aas
data16
mov
mov
sbb
xorb
lret
push
mov
loope
stos
sbbl
cmp
add
xchg
mov
push
in
cmp
in
push
lock
fwait
adc
insl
xor
cwtl
add
add
sbb
or
dec
mov
mov
adc
insb
stos
jle
mov
test
push
ja
add
leave
adc
loopne
adc
int
and
test
rclb
pop
pop
scas
nop
lret
iret
adc
sub
shlb
pop
cmp
test
sub
xor
test
mov
inc
jecxz
fs
scas
inc
punpckhdq
jo
sti
ror
out
or
adc
adc
jl
movl
seto
xchg
bound
je
pop
bound
adc
sbb
insb
out
ficomps
fstps
pop
pop
sub
mov
arpl
mov
push
mov
jbe
push
out
pop
stc
adc
sub
xchg
jle
cmpsb
in
ret
nop
push
enter
rol
or
sub
xchg
jl
mov
fcmovnb
jle
dec
xor
sbb
mov
and
pop
insl
mov
lock
adc
push
xor
je
rcll
xchg
cmpsl
push
xchg
icebp
test
arpl
imul
in
jmp
mov
mov
cltd
or
std
jae
lds
idivb
icebp
fistpl
bound
popf
mov
inc
jmp
jmp
les
imul
cs
adc
movsb
mov
and
addr16
sahf
loope
aad
lods
xchg
inc
fsts
xchg
in
fs
and
sbb
or
add
in
les
or
mov
mov
mov
adcb
jp
mov
sbb
add
xor
popf
and
insb
pop
push
jp
sub
aam
push
js
jp
imul
mov
lds
xchg
ja
lahf
mov
nop
adc
repnz
and
les
mov
das
jae
jns
in
pop
dec
inc
scas
cmpsb
inc
cmpb
shrl
dec
add
lcall
mov
scas
out
jmp
or
lods
out
rclb
inc
xchg
xchg
das
fdivr
repnz
scas
mov
and
insl
cld
dec
dec
repz
stos
cmp
enter
mov
cmpl
sbb
jns
stos
int
cs
leave
push
shl
loope
jmp
cmpsl
mov
iret
ljmp
xchg
pop
fld
mov
inc
fcomp
mov
pop
or
sub
in
lea
sub
pop
test
jno
xchg
popf
cmp
fldcw
lcall
cmp
dec
cmpsb
xchg
jecxz
daa
inc
out
cmp
xor
jecxz
or
mov
lahf
push
and
std
pop
test
push
xchg
hlt
shll
sub
fidivl
sbb
inc
sbb
cmc
les
out
sub
testb
clc
add
inc
jns
arpl
sbb
sti
inc
je
or
sub
push
out
clc
xor
lock
mov
rcrb
aas
xor
cli
loope
mov
stos
movsl
push
jbe
loope
inc
andb
mov
int3
pushf
cmp
in
mov
mov
ret
adc
mov
push
dec
call
ds
xchg
push
mov
jp
xor
addr16
jae
pop
lods
mov
or
test
xchg
adc
add
mov
pop
out
int3
cmp
inc
or
and
adc
mov
adc
pop
xchg
flds
pop
cmp
aam
jle
aas
das
popa
clc
sub
mov
mov
flds
dec
mov
lods
mov
scas
sbb
dec
test
fstpt
bound
iret
call
mov
movsl
pop
dec
ds
xor
mov
adc
mov
push
js
cmp
dec
dec
dec
cmp
jmp
xchg
pushf
nop
pushf
sub
mov
std
das
and
icebp
orl
loop
inc
bnd
lret
cmpsb
aad
mov
add
sub
xor
dec
mov
or
outsl
dec
bound
int3
and
and
mov
aaa
mov
dec
fistl
sahf
add
test
decb
dec
sti
mov
mov
outsb
int3
ljmp
add
mov
in
test
and
and
dec
les
pop
mov
cmpsl
sub
xor
dec
xchg
outsb
mov
inc
mov
imul
fucompp
cs
jl
pop
out
add
stc
mov
push
mov
jg
lods
push
mov
rcrl
xchg
add
lds
ja
inc
fists
call
aam
outsl
jp
es
leave
lock
inc
push
pop
sbb
jbe
popf
mov
sti
push
cmc
cmp
iret
push
fdivp
add
mov
andb
iret
mov
jne
in
aas
aas
jns
mov
add
shll
push
lea
jae
lock
je
xchg
icebp
add
sub
pop
shll
pop
out
lahf
outsl
fs
scas
mov
pop
mov
jno
psubusw
mov
int3
test
cwtl
cmp
loope
sbb
jl
xchg
test
aas
lcall
sub
pop
jle
call
or
cmpb
jp
mov
mov
sub
mov
mov
insb
scas
loope
call
loope
shrl
xlat
daa
arpl
aad
addl
add
idivb
pop
xchg
lock
lcall
cltd
cmp
jne
mov
xor
mov
mov
and
jnp
xchg
dec
adc
jecxz
pop
push
add
ja
in
mov
lcall
cmp
add
stc
jg
xchg
inc
pop
dec
in
aas
and
add
mov
mov
stos
ret
enter
xchg
mov
push
or
fstp
push
add
add
sub
pmulhw
xor
jl
in
jmp
movsb
adc
iret
pop
mov
dec
inc
mov
out
aam
lea
gs
mov
mov
cmp
lods
and
filds
ss
ljmp
and
add
stos
test
xchg
fdivrl
mov
cmp
or
jne
enter
inc
js
in
mov
addl
adc
add
out
aam
lret
dec
stos
push
mov
mov
dec
and
ja
sbb
out
xlat
sbb
push
push
xor
loop
dec
lock
into
dec
ja
addr16
add
sbb
aaa
loope
push
jno
fists
push
out
es
fnstenv
mov
sti
in
scas
cltd
xor
sub
or
add
xchg
lcall
mov
jmp
stos
testb
std
xor
inc
lret
pushf
push
clc
mov
inc
jb
xor
mov
push
rcrb
nop
imul
nop
test
shl
out
mov
dec
pusha
lea
pusha
and
shll
mov
add
stos
inc
mov
ss
stc
push
in
int3
inc
imul
jo
subl
mov
cmpl
mov
mov
push
jno
mov
xchg
xchg
in
jno
inc
push
int3
sarl
add
cld
push
push
repz
subb
movb
mov
jne
and
neg
int3
jb
mov
push
or
and
outsl
test
movsl
gs
addr16
xchg
add
sbb
icebp
mov
sahf
prefetch
lea
push
adc
xor
fcmovbe
aaa
mov
cmp
call
inc
pand
lea
lods
mov
out
mov
fsubl
loope
add
insb
xchg
mov
clc
jne
pop
adc
mov
push
test
ret
mov
js
mov
sbb
out
sub
xchg
sub
or
mov
mov
rcrl
sub
cmpsb
rcrb
mov
movsl
into
insb
push
jge
push
mov
jl
lcall
mov
mov
add
dec
sub
or
ljmp
jp
in
sarb
sbb
es
movsl
shll
fsubrl
sub
cmp
push
js
cmp
or
add
xor
xchg
shrb
or
ficompl
dec
dec
mov
or
push
cltd
add
xor
push
test
pop
ljmp
or
pusha
dec
mov
in
stos
inc
push
push
mov
cltd
jno
push
push
in
sbb
and
lret
shll
sbbl
or
pop
rorl
jns
cmp
out
xchg
test
pop
rcr
or
shll
aam
inc
loope
clc
out
ds
hlt
hlt
daa
fsubrp
ja
jno
in
and
inc
dec
and
fbstp
call
enter
loop
xchg
push
into
cmpsl
in
jmp
mov
test
ficompl
dec
inc
push
sahf
jns
arpl
mov
push
xor
mov
mov
sub
pusha
jge
cmp
sbb
das
lock
sbb
push
mov
sbb
fildl
jb
mov
jnp
sub
cmp
orb
sbb
cmp
jo
mov
push
jl
adc
test
jg
xchg
and
call
jno
roll
stos
xchg
test
adcb
pop
sub
das
push
push
cs
mov
insl
mov
pusha
add
jb
mov
and
mov
test
into
mov
or
inc
push
mov
xchg
jae
push
imulb
lcall
sbbl
rorl
iret
cwtl
dec
dec
dec
nop
or
dec
mov
sub
xor
rcrb
jo
cmp
push
les
sbb
clc
xchg
cs
mov
pop
enter
mov
jnp
mov
jo
lds
and
sbb
add
mov
pushf
into
jp
jbe
mov
mov
push
and
mov
fldcw
in
insb
jae
mov
lret
popa
clc
lahf
sub
mov
inc
andl
dec
mov
adc
clc
pop
push
cmp
dec
and
fsub
mov
xchg
fisttpl
push
mov
jmp
divl
xchg
xchg
cmpsb
add
pop
push
mov
pop
data16
sub
cmpsb
inc
xchg
jne
cmp
jge
stos
jp
fwait
stos
inc
mov
cmp
jl
cmp
sti
sbb
inc
inc
mov
sbb
and
out
sbb
sahf
popa
loope
adc
lcall
loope
push
out
imul
arpl
test
enter
cmp
stc
mov
and
insb
pop
mov
lcall
das
sbb
imul
clc
fcoml
add
add
cmc
push
push
rcrb
and
cmp
fdivl
dec
pop
dec
testb
pop
add
repz
cld
out
adc
xor
nop
cmp
cld
push
push
pop
outsl
xor
lods
dec
inc
outsb
and
cmp
pop
aam
out
icebp
mov
sbb
xlat
add
rclb
repnz
subl
scas
bound
mov
in
jle
and
sub
push
gs
ret
push
cwtl
imull
pop
lods
fwait
jecxz
mov
push
mov
pop
in
mov
cmp
fmull
mov
fsub
shl
enter
mov
mov
sbb
lret
stc
or
stos
cli
push
test
dec
lds
leave
hlt
pop
pusha
sbb
in
ror
mov
pop
add
fistps
inc
jo
cmp
jno
sar
pop
mov
fstpl
mov
jbe
bound
inc
jp
cld
add
push
adc
mov
inc
into
push
inc
jp
stc
fisubrs
pushf
jge
pop
mov
cltd
out
xchg
add
xor
mov
xlat
scas
pop
jl
sahf
lret
add
mov
mov
inc
movsb
inc
sbb
mov
xor
sbb
xchg
mov
imul
jno
stos
mov
jns
cltd
scas
and
xchg
jbe
ljmp
shl
inc
dec
adcb
push
xchg
xor
je
leave
vcvtps2dq
pop
mov
inc
fwait
xor
mov
cmp
xorb
push
cmpsb
mov
pop
mov
adc
mov
jecxz
sub
or
fwait
mov
sti
ret
shrb
xchg
pop
pushf
jg
aad
dec
pop
data16
fwait
mov
notb
subl
insl
scas
fucomip
out
inc
cmpsb
call
adc
lock
pushf
sahf
arpl
test
ret
outsb
sahf
ret
xchg
mov
fsubl
mov
lds
mov
addb
add
mov
inc
sti
dec
lods
fisttpl
push
vaddps
pop
jmp
or
idivl
or
xlat
test
ds
ret
outsb
adc
pop
data16
mov
xor
cmp
mov
sub
test
stc
xchg
hlt
lahf
fs
jne
sub
push
aaa
enter
loopne
data16
andl
inc
div
mov
xchg
pusha
ror
push
loop,pt
mov
mov
int
xor
int3
mov
divb
mov
adc
repz
and
mov
call
sub
sti
xor
ja
and
js
rcr
fdiv
mov
lahf
pop
leave
or
rcll
xchg
add
das
ret
decb
cmpsb
lds
pop
jb
jg
mov
lods
stos
sti
cmp
aam
and
sbb
dec
jl
xchg
xchg
jge
ds
fidivrs
es
fwait
and
lods
fwait
ret
mov
cmp
inc
mov
js
cmpsl
std
cmp
jmp
decl
movsb
int3
in
inc
loope
call
repz
xchg
mov
sarl
sub
add
cmp
bound
xchg
loope
jl
cmc
jnp
int3
cs
popf
mov
test
mov
imul
sbb
mov
jp
decb
mov
aaa
repnz
subb
push
pop
push
mov
adc
pop
jecxz
dec
gs
sbbl
ss
lcall
mov
in
inc
mov
mov
test
in
jmp
xorb
jg
ret
enter
out
lock
cmp
stos
sbb
jg
dec
xchg
mov
adc
out
add
pop
mov
add
pop
push
pop
idivl
dec
and
inc
scas
and
sbb
ljmp
sub
lcall
push
rcll
xchg
xchg
pop
fs
dec
scas
xorl
loop
and
pop
subl
lret
pop
adc
push
xchg
aaa
test
or
dec
xchg
mov
ja
mov
addr16
push
xchg
add
inc
mov
lods
dec
outsb
cmp
das
ret
aad
cltd
mov
jecxz
dec
test
or
stos
add
push
stc
dec
scas
cmp
in
mov
lock
mov
out
ljmp
rcrl
add
push
push
cmp
pop
int3
call
cmp
and
jne
lret
in
sbb
xchg
push
and
jbe
cld
ja
pop
push
xor
std
idiv
jmp
pop
add
imul
js
lds
mov
add
cmp
int3
pushf
lock
popf
in
jb
push
mov
test
and
dec
sub
jl
jns
push
lods
or
sti
mov
test
xchg
push
jmp
das
or
lds
test
repnz
jecxz
decb
or
xchg
push
dec
or
cmp
sti
add
out
ds
xchg
shlb
int
ja
xlat
sub
adcb
push
push
or
dec
pusha
daa
popa
xchg
je
insl
xchg
sub
les
pop
test
js
mov
jnp
cmp
push
out
in
out
and
imul
pop
leave
dec
mov
xchg
scas
imul
decb
and
jge
pop
adc
pop
in
adc
xchg
pop
sbb
and
or
int
arpl
mov
pusha
inc
add
mov
xchg
jbe
addr16
pop
daa
std
jg
jecxz
cmc
repnz
shrd
imul
mov
mov
push
mov
test
fdivl
sti
pop
loop
mov
out
mov
mov
in
mov
bound
pop
sbb
ret
movsl
in
add
cwtl
xchg
loopne
add
mov
pop
and
divl
add
sbb
sub
loop
sti
pand
pop
and
jno
sbb
in
add
jo
dec
roll
int3
outsl
out
adc
outsb
inc
imul
insb
jnp
mov
push
pop
mov
sub
push
pusha
or
mov
sbb
add
int
add
sub
and
cltd
movsb
and
iret
ret
frstor
mov
clc
xor
fisubs
lea
add
lret
inc
or
cmp
adcl
fs
ja
push
testb
ds
sub
ss
mov
daa
cmp
mov
les
ss
sbb
xchg
daa
stos
inc
imul
sbb
xchg
dec
add
mov
insb
xor
out
or
mov
repnz
cmp
ja
inc
scas
into
or
mov
push
ljmp
push
inc
xchg
pop
xchg
enter
dec
aam
mov
fnstenv
in
pop
ss
loopne
je
add
fs
add
in
call
faddl
lds
push
repnz
and
dec
push
xchg
sub
add
mov
pop
and
mov
in
cld
jle
push
xor
sarl
pop
iret
inc
and
rolb
lretw
xlat
and
mov
lods
mov
mov
or
xor
and
mov
fsubp
in
sbb
cmp
std
mov
scas
mov
pop
sub
jmp
jge
es
dec
ds
movsb
inc
test
lods
jno
xchg
jmp
rcrb
jo
insb
cld
std
adc
bound
repz
lret
dec
cltd
clc
adc
jmp
ficompl
push
mov
pop
push
push
out
mov
mov
fs
decl
repnz
fstps
or
in
mov
sbb
inc
or
xchg
xchg
sub
repz
jae
daa
push
jecxz
les
fs
xor
add
push
pop
xchg
ljmp
inc
mov
add
fstpt
and
popf
mov
jg
icebp
aaa
sarb
adc
lahf
imul
test
adcb
or
mov
fistps
iret
mov
xchg
les
cmp
dec
testl
loop
mov
push
push
sarb
inc
cli
stos
and
add
ja
mov
mov
xor
mov
jmp
lock
jge
push
ficompl
idivb
or
divb
popf
pusha
mov
sbb
xchg
jmp
and
addr16
cmp
lcall
mov
sahf
or
testl
mov
xor
outsl
das
in
fstp
int3
jno
dec
dec
add
std
push
out
push
loope
rcll
fsts
std
xchg
ds
or
bnd
es
add
fisttpll
ja
cs
mov
inc
jnp
xchg
pop
xor
in
cmp
adc
out
test
shl
bound
call
outsl
aam
or
xchg
mulb
andl
lea
mov
jecxz
cmpsl
pusha
outsb
mov
enter
jb
daa
mov
xchg
rorb
or
xor
in
and
out
and
jo
mov
mov
mov
pop
xor
jo
loop
test
loope
mov
outsb
sbb
cs
xchg
push
lds
mov
inc
xor
jnp
push
insl
xchg
int3
es
push
cmp
or
int
cmp
jge
or
hlt
insl
inc
sbb
add
mov
cmpsb
mov
test
hlt
cmp
lea
movsb
and
mov
shll
sbb
mov
xchg
mov
loop
shl
repnz
cmpsl
push
enter
sbbl
leave
xchg
ljmp
movsl
aas
call
pusha
in
in
xchg
insb
es
adc
shll
fistpll
scas
cmpsb
lods
loope
cmpsb
imul
rorl
add
imul
or
mov
inc
gs
cmp
cmp
loopne
pop
push
add
scas
jo
bound
mov
std
jno
xchg
movsl
out
hlt
cmpsl
aas
fs
es
rdmsr
andb
enter
push
into
inc
outsl
insl
sbb
fstp
lods
mov
hlt
movsb
aam
jp
shll
push
dec
and
sub
and
je
sub
cmp
push
add
test
sbb
and
loopne
jno
std
sahf
jl
mov
imulb
ss
fmul
mov
sahf
mov
pop
xchg
pop
sbb
and
cmp
stos
push
push
or
arpl
insl
call
push
mov
iret
ret
lret
jo
adc
shlb
out
shrb
cmp
push
dec
cs
inc
imul
mov
jae
jo
cmc
lea
pop
cmpsl
xchg
xchg
dec
gs
xchg
inc
mov
cmpsl
xchg
jne
loop
xor
xchg
jecxz
jecxz
dec
out
push
xchg
jb
dec
cltd
imul
mov
nop
add
sbb
pop
cli
loopne
adc
aaa
pop
mov
pop
and
sub
les
aaa
jb
lods
lea
dec
add
into
pop
sub
sub
cltd
stos
leave
and
les
sub
or
fs
pop
arpl
aam
xorl
pushf
iret
movsb
lcall
or
inc
mul
pusha
dec
xor
adc
sub
jnp
and
mov
sub
or
cmc
mov
mov
sbb
pop
cmc
fucom
pusha
rorb
popf
mov
cli
adcb
jns
out
aad
mov
in
dec
sub
push
jle
dec
enter
arpl
jecxz
adc
out
repz
rclb
das
int3
fcmovbe
pusha
and
jmp
mov
fiadds
mov
push
dec
inc
movsl
scas
mov
adc
jbe
or
call
xor
push
imul
pusha
in
stos
mov
hlt
clc
lret
mov
pop
out
cmp
test
push
jae
mov
mov
mov
into
clc
sbb
jecxz
cmp
inc
lock
add
xor
lret
adc
es
jae
mov
jns
in
cwtl
movsb
mov
cmpsb
push
jo
shlb
xor
add
push
aad
aam
outsl
std
hlt
sub
call
ficomps
sbb
pop
xor
jp
aam
lods
cmpsl
fcompl
dec
inc
push
sbb
jbe
xchg
xchg
cmp
xchg
mov
mov
cld
iret
lcall
mov
inc
aam
into
xlat
clc
push
iret
stos
pop
xor
mov
add
mov
aas
add
mov
imul
insb
clc
xor
cltd
jo
dec
imul
daa
das
jle
push
sub
xchg
push
mov
mov
jno
xchg
xchg
arpl
mov
push
sti
mov
pushf
mov
hlt
jge
xchg
or
leave
int
inc
test
inc
nop
out
pusha
jg
jbe
negl
mov
xchg
sub
int3
jmp
xchg
and
xchg
xchg
xor
shl
aas
das
mov
clc
imul
cld
in
xchg
pusha
test
scas
cmpl
adc
cmp
xchg
jle
push
pop
xor
int3
das
insl
fcompl
mov
bound
and
sbb
lcall
pop
stc
aas
or
push
outsl
test
jno
subps
xchg
movsl
or
in
ret
nop
xchg
sub
add
add
subw
adc
jmp
out
lret
daa
mov
aam
push
data16
ret
pop
popa
lret
scas
iret
aaa
jmp
mov
fsubl
xlat
lods
adc
in
pop
cmpsb
test
shll
fstp
sub
sbb
jp
clc
push
js
in
xchg
cmc
aaa
sub
addr16
fdivp
push
or
sbb
or
pop
movsb
into
imul
pop
shrb
repnz
std
aad
mov
add
movsb
mov
jne
fldlg2
fcmovnu
push
jge
and
or
pop
sub
mov
add
fnstcw
push
jo
or
or
jne
cmpsb
pop
test
mov
push
pop
setnp
fistpl
and
xor
sbb
aaa
mov
push
fldcw
push
push
mov
jb
jge
jns
cmp
lock
clc
jecxz
dec
lret
aaa
sub
sub
mov
cli
cmp
dec
jnp
fs
inc
xchg
sti
ljmp
mov
orl
adc
cmp
hlt
dec
or
mov
stos
cld
stc
clc
sbb
xchg
loop
mov
xchg
test
sub
clc
dec
ror
and
mov
xchg
in
ljmp
pusha
sbb
or
dec
pop
sarl
call
cmp
in
adc
dec
sub
dec
les
repz
scas
lcall
aad
sub
push
jne
xchg
in
dec
jbe
mov
mov
pop
lock
or
mov
mov
inc
cmc
out
test
lahf
pop
call
data16
dec
pop
dec
push
mov
sbb
clc
outsl
cmp
test
stos
hlt
cmp
sbb
fxam
push
mov
popf
pop
xor
dec
lods
sahf
stos
pop
inc
mov
inc
mov
cwtl
or
les
out
lds
mov
test
mov
out
jns
push
add
sub
pop
es
and
orb
pop
mov
sbb
cli
fst
mov
mov
pushf
ss
aas
pop
lcall
xchg
daa
jne
subl
das
cmpsb
sbbl
mov
test
dec
inc
push
stos
mov
fisttps
adc
mov
cmc
push
icebp
xor
push
in
rclb
sub
mov
outsl
sbb
insb
mov
mov
ss
into
outsl
mov
in
fimull
mov
mov
jle
mov
jo
punpckhdq
out
fidivl
adc
cmp
insl
sub
sbb
fidivrl
add
js
mov
sbb
icebp
inc
xor
jle
mov
xor
sub
mov
xor
pop
rclb
inc
dec
loop
dec
pop
dec
adc
mov
jae
mov
or
or
dec
push
add
fisubrl
movsb
adc
add
sbb
bound
sbb
and
sub
pusha
mov
pop
mov
inc
in
out
pop
and
je
xor
ret
cmp
aad
jmp
mov
xchg
push
ret
mov
cmpsb
sub
pushf
out
popa
jnp
xchg
clc
jnp
cmpsb
add
cmp
dec
sub
loopne
outsl
cmp
aad
sbb
cmp
push
sbb
xchg
orl
inc
sarl
dec
or
ret
push
or
cld
pop
icebp
mov
push
fucomp
and
mov
loop
jne
cmp
aaa
dec
mov
sbb
gs
xor
sbb
sub
mov
std
sbbb
push
sbbl
js
lret
add
mov
es
outsl
inc
gs
jge
mov
xor
lods
aas
call
loopne
ds
xchg
je
adc
fimuls
loopne
mov
mov
scas
mov
shl
sti
mov
iret
lcall
fimull
jnp
pop
adc
aas
and
je
inc
pmulhw
idivb
push
xchg
fisubrs
stc
lock
mov
data16
fcom
mov
dec
push
sahf
scas
add
mov
sub
xchg
push
ret
mov
inc
repz
ret
add
ds
repnz
fwait
jge
sbb
pop
scas
shlb
test
push
sahf
mov
addl
cmpsb
mov
push
repz
adc
into
cwtl
aad
movsb
lods
icebp
mov
jns
push
mov
int3
fildll
in
sbb
cmp
inc
in
inc
in
mov
push
stos
add
jb
and
mov
push
cs
pushf
pop
mov
cmp
add
mov
push
or
xchg
cli
push
rcl
shll
mov
movsb
mov
and
xchg
lret
sbb
mov
mov
frstpm(287
cld
sbb
scas
es
negb
mov
stos
inc
jle
stc
stos
and
cmp
xchg
adc
fsubl
stc
out
loope
enter
dec
xchg
jmp
je
dec
xchg
pop
pop
xor
sahf
stos
sub
int3
pop
lret
shl
mov
arpl
mov
fwait
push
cmp
rolb
jl
movb
sub
cmp
popf
jge
xchg
ja
nop
in
lods
cmp
fldenv
repz
lea
fstpl
int
fwait
loope
andb
pop
test
mov
sub
test
pop
pop
outsl
pop
icebp
xor
mov
sbb
rclb
imull
dec
dec
or
sbb
popf
xor
scas
das
mov
xchg
or
shlb
hlt
pop
inc
inc
adc
lea
daa
add
mov
cli
roll
pop
pop
mov
or
push
sbbb
xlat
xchg
pop
jb
sbb
int
fisttps
aas
inc
cmp
ret
dec
sub
dec
xchg
mov
dec
adc
jecxz
fcoms
push
dec
xchg
leave
in
xchg
push
push
jo
mov
push
es
lea
lahf
int3
or
xchg
aad
imul
sub
inc
mov
leave
loope
xchg
xchg
sbb
stos
sahf
ret
mov
idivl
and
or
xchg
rcrb
dec
test
test
pop
mov
and
push
cltd
mov
or
push
je
or
cltd
in
hlt
mov
out
lahf
sub
jmp
push
mov
cli
or
movsb
jne
adc
cmp
mov
ljmp
dec
das
mov
pop
iret
mov
in
lds
pop
and
test
jecxz
lock
mov
cmpsb
adc
shl
mov
leave
fistpll
and
mov
pop
stos
testb
fwait
dec
scas
clc
in
insb
mov
xor
xchg
loope
push
ss
clc
push
push
pop
cmpb
xchg
mov
xchg
ja
or
pop
loope
in
enter
sub
pop
inc
fstl
push
hlt
mov
jae
dec
mov
fcomps
fnstsw
bound
ficoms
lea
dec
aam
push
pop
decb
xchg
xor
lret
fimull
stos
cltd
int3
push
cmpsl
mov
sub
inc
mov
fidivrs
ret
sahf
cltd
mov
testl
xchg
insb
inc
pop
imul
push
cmc
mov
sub
sti
fdiv
mov
std
dec
pop
pop
lcall
mov
ja
sbb
push
pop
aas
sarl
pop
xchg
dec
subb
mov
jmp
push
in
out
cmp
test
ret
cld
imul
insb
in
and
insb
pop
inc
cmp
clc
mov
icebp
xor
adc
xchg
add
imul
mov
loopne
push
adc
mov
sub
adc
jp
lret
jle
lahf
jbe
or
or
push
shr
imul
sub
incl
inc
or
inc
fsubrp
sub
cmp
insb
dec
xchg
lds
je
dec
out
and
mov
xchg
divb
cmp
push
and
sahf
out
adc
adc
inc
ja
jg
mov
mov
cs
lcall
or
arpl
xor
aam
leave
inc
pushf
stc
mov
cmc
jb
push
xchg
mov
int3
notl
add
gs
fidivs
push
fwait
icebp
je
ss
sahf
call
into
and
fdivrs
inc
xor
mov
mov
jge
mov
fsubl
xor
mov
stos
mov
pop
clc
push
orl
and
mov
pop
es
sub
les
int3
mov
push
jb
xchg
loop
add
out
negl
lods
mov
pop
jno
sbb
jle
mov
pushf
xor
test
sub
test
inc
inc
sbb
push
push
add
es
and
cmpsl
mov
xchg
out
adc
repz
xorl
push
data16
add
jp
cltd
andb
mov
jge
je
sbb
mov
add
mov
adc
outsl
mov
adc
into
push
push
mov
lock
pop
cld
cs
inc
aaa
lahf
mov
test
lds
inc
mov
cmp
out
hlt
cmpsb
subl
or
aas
repnz
mov
scas
and
insl
sbb
test
and
aad
jg
inc
rcl
sub
js
push
loopne
fbstp
stc
movsb
lods
mov
aaa
xor
mov
daa
push
or
cmp
ret
sub
sarb
arpl
and
fmull
ds
push
test
jl
sti
shl
mov
icebp
std
in
xchg
leave
add
jmp
mov
icebp
scas
pop
add
mov
mov
daa
mov
insb
das
mov
inc
arpl
or
jnp
and
cmp
jmp
jl
fidivl
rcll
out
stos
cmp
pop
addr16
movsl
addb
sbb
nop
lods
hlt
rorb
mov
add
sti
sti
xor
aam
jg
addr16
jnp
and
ljmp
jno
push
out
lcall
jmp
sti
aaa
mov
cmp
pop
fwait
mov
mov
sti
sub
push
jo
push
xor
scas
mov
add
jno
cs
cld
mov
push
in
jns
fcmovne
cmpsl
mov
rol
sbb
insl
daa
xchg
push
xor
sbb
cmpsb
push
push
jmp
int3
lods
add
inc
outsb
pusha
inc
or
jb
loopne
mull
loope
xor
ja
addr16
mov
inc
test
stos
imul
xchg
mov
ja
cld
shlb
sti
push
mov
sbbl
push
pop
in
add
mov
out
stc
movsl
jmp
jl
idivb
mov
sbb
lcall
ret
sbb
fsubs
xor
push
jne
xchg
mov
nop
popa
push
sbb
scas
es
sub
mov
lcall
cmc
push
lret
stos
mov
testb
adc
add
int3
bound
inc
test
push
fwait
movsb
iret
inc
in
jne
or
stos
iret
into
fildl
dec
test
imull
inc
mov
xchg
sbb
jecxz
mov
inc
cmpsl
push
outsb
pushf
xor
adc
daa
push
pop
push
loope
loop
adc
xor
and
pusha
mov
outsb
rcrb
xchg
mov
mov
mov
add
dec
mov
insb
or
div
cmp
lea
mov
int3
das
aaa
stos
sub
pop
mov
xchg
lods
cmp
scas
aas
mov
fadds
ja
xor
in
mov
inc
stos
xchg
test
lahf
inc
imul
into
les
inc
movsl
xchg
fstpl
jle
iret
xchg
push
fwait
jb
mov
or
fbstp
cmp
fnstcw
mov
cli
out
movsl
and
pushfw
shll
xchg
bound
clc
jbe
idiv
xchg
mov
mov
pop
out
loope
push
shl
popa
rcll
outsl
sub
jg
push
sahf
cmc
fsubr
lahf
movsb
repz
mull
xchg
lods
sahf
fwait
ljmp
fs
cwtl
mov
bound
inc
adc
packssdw
push
mov
or
lods
sbb
jge
mov
hlt
adc
and
cwtl
movsl
cmp
cmp
sub
shrb
repnz
repz
pop
idivl
imul
movsl
shlb
ret
mov
rorl
daa
je
sbb
fisubl
lock
addl
icebp
xchg
nop
mov
loope
sub
stos
cs
xchg
fdivrs
decl
insb
aam
inc
int
lahf
mov
out
fstpl
jg
inc
add
pop
push
enter
xchg
xor
outsl
mov
xchg
mov
jae
cltd
jge
fwait
lds
pop
movsl
lahf
cmc
push
sub
cmp
cmp
inc
notl
rcll
decb
cwtl
xor
jb
push
add
aad
ret
stos
fucom
cmp
ret
fiadds
dec
inc
incb
ret
into
mov
push
into
shlb
cmpsb
repz
jae
ja
mov
jl
jmp
outsb
scas
or
data16
sub
out
icebp
cmp
push
icebp
sti
lcall
jle
xor
jle
jnp
and
xchg
aam
jns
xchg
xor
mov
push
popf
mov
inc
jae
in
pop
adc
pop
mov
test
sub
cmp
sub
cwtl
adc
inc
lods
jecxz
jo
cmp
pop
cmp
xor
or
sbb
push
and
ja
lds
ss
jp
cmp
add
sbb
sub
jb
in
pushf
shr
daa
lods
out
and
sbb
xchg
add
je
scas
sub
inc
push
imul
aaa
into
icebp
lods
pusha
dec
out
add
mov
hlt
in
lcall
adcl
add
xchg
test
lret
cltd
sbb
cmp
sub
repnz
popf
xchg
cmp
mov
inc
pop
xchg
cmp
xchg
push
dec
stc
pusha
outsl
cmp
sti
xor
adc
in
inc
sub
imul
out
jne
lret
loop
popl
aam
adc
dec
fcoml
js
mov
adc
jbe
repnz
shrl
stc
andb
jns
add
jl
dec
outsl
cmp
mov
xchg
mov
lret
jecxz
std
nop
roll
enter
add
xor
ljmp
imul
push
bound
fiadds
add
enter
jo
mov
adc
inc
or
adc
xor
mov
mov
lds
sbb
in
push
outsl
out
add
pop
jns
jb
lea
sub
and
sub
incl
pop
movsl
rclb
fstpl
sub
pop
cli
loopne
loope
add
out
subl
or
ret
rcll
push
push
fcmovu
jl
add
xor
add
dec
or
ja
jnp
int3
test
push
mov
xchg
enter
fmull
ss
test
gs
and
icebp
pop
xor
in
lret
xchg
and
test
pop
mull
inc
push
into
je
adc
cmp
ret
stos
add
jecxz
xchg
scas
ret
sbb
xor
sarb
jbe
imul
lahf
mov
cmp
dec
mov
loop
add
dec
cmp
xor
std
psrlq
jmp
push
push
inc
adc
push
jo
enter
loop
push
test
in
pop
pop
int
sbb
clc
pusha
lahf
dec
push
cmc
and
aad
imul
cmpsb
in
pushl
mov
or
mov
hlt
xor
aam
pop
shrb
mov
mov
sbb
add
movsb
in
jnp
mov
and
cs
pop
push
pop
ljmp
call
hlt
imul
pusha
mov
lcall
pop
fcoml
out
mov
jp
mov
aaa
or
bswap
mov
and
and
fwait
gs
fwait
pop
lret
dec
fildll
mov
loopne
pop
xchg
fldl
add
ret
jg
push
mov
pop
xchg
mov
stc
push
outsb
xchg
loopne
int3
daa
xor
rcll
mov
cmpsb
icebp
cwtl
mov
pop
aam
mov
dec
insb
mov
paddw
sarb
mov
testb
inc
xchg
jbe
call
movsb
adc
sbb
cltd
andb
insl
faddl
mov
clc
test
enter
mov
mov
fwait
ret
sahf
out
out
pushf
int3
mov
fldenv
mov
push
lcall
jle
decl
dec
jmp
xchg
mov
andb
call
iret
sbb
mov
push
ret
mov
push
fst
inc
fdivs
mov
xchg
mov
les
sti
cli
lods
inc
xor
push
in
jo
aam
jbe
pusha
lahf
xchg
mov
inc
pushf
cmp
aad
push
mov
dec
sub
inc
nop
shrl
mov
js
xchg
mov
cmp
xor
insb
push
jno
ds
mov
jo
mov
movsb
fwait
xlat
fisttpl
mov
jecxz
pop
out
stos
imul
inc
dec
jbe
ret
or
mov
push
inc
jge
inc
or
ljmp
xchg
add
addr16
mov
mov
push
mull
arpl
push
push
mov
cmp
outsl
shll
or
sub
in
repz
out
mov
lret
repz
bound
cmp
clc
lds
add
pop
cld
mov
adc
inc
jmp
and
outsb
loope
out
nop
pop
popf
shll
inc
and
js
mov
mov
inc
add
lds
daa
mov
mov
mov
cld
mov
stos
push
jo
lret
xchg
scas
cmp
mov
lds
push
xlat
pushf
in
adc
add
ss
stos
lods
andb
sbb
in
dec
mov
jbe
insl
dec
cmp
gs
aam
xchg
scas
nop
out
lret
fbstp
cmp
daa
xor
and
je
jbe
jns
mov
lods
mov
icebp
aas
or
jns
loopne
sahf
push
xchg
out
sub
je
pusha
xlat
stos
or
mov
subl
bnd
xlat
and
xchg
xor
shrl
dec
sbb
pop
mov
or
xchg
pop
xor
mov
int3
dec
jnp
orb
xor
mov
lock
test
mov
andl
sbb
fcmovnb
imul
rcll
repnz
sbb
jl
loope
inc
ret
outsl
movsl
in
jne
pop
dec
dec
cmp
and
movsb
lret
sub
adc
pop
test
push
outsb
lods
or
add
xchg
aam
sub
sub
cmp
popa
mov
ljmp
and
jo
loop
jmp
sub
ss
ds
push
jbe
cmc
mov
fs
and
clc
insb
pop
xor
dec
jns
loope
pop
or
cltd
jl
push
mov
sti
lods
std
dec
lcall
inc
fbstp
cmpsb
or
add
adc
inc
test
jne
or
mov
ss
and
test
xchg
test
mov
out
call
hlt
cmp
cld
lahf
adc
jnp
aad
mov
jp
pop
sbb
loop
cmpsl
xchg
repz
inc
mov
pop
aaa
push
rclb
roll
or
mov
jnp
mov
mov
mov
adc
adc
out
xor
pop
leave
fists
or
lea
xchg
or
aad
cmp
xchg
fstp
push
xchg
cmpsb
add
and
ret
push
test
in
cld
movsb
lock
jg
dec
add
ret
dec
cltd
add
mov
jl
jp
mov
imul
cwtl
jge
out
jo
daa
sub
inc
xor
ret
mov
test
cmp
or
mov
add
std
or
daa
push
mov
sahf
rclb
mov
inc
dec
or
xchg
xor
add
push
sarb
pop
jns
mov
inc
mov
add
lret
xchg
xchg
in
lret
xchg
mov
dec
push
push
pop
mov
mov
mov
icebp
mov
dec
fcom
call
sbb
imulb
testb
mov
test
iret
pop
pop
in
dec
incb
sub
test
mov
je
adcl
cmp
out
adc
test
data16
xor
mov
std
push
icebp
popa
jge
dec
sti
sbb
xchg
inc
cmpsl
pop
mov
cli
add
std
push
sbb
xchg
pop
stos
push
xchg
mov
pop
inc
mov
xchg
std
imul
push
flds
xchg
add
or
fdiv
outsb
inc
sbb
notl
xor
das
mov
ret
add
out
cmpsl
adc
call
dec
xor
aam
ds
cmp
pop
jo
call
mov
shll
rclb
inc
push
cmpsl
mov
addr16
ret
sbb
mov
imul
jmp
test
jnp
jnp
jmp
sti
les
and
push
sbb
bswap
xchg
popa
ret
jmp
push
std
jae
mov
shlb
sahf
lods
shll
sbb
pop
lods
mov
add
insb
or
sbb
shrl
push
adc
rcrb
lret
mov
adc
xor
pop
sub
push
mov
roll
ljmp
cmp
inc
imul
xchg
mov
repz
push
and
in
jp
popa
lcall
push
cmp
lds
inc
cmp
and
repnz
sbb
and
aam
into
xchg
cmc
pop
adc
cli
cmp
test
dec
push
adc
mov
je
aad
push
xchg
xchg
scas
lock
loopne
sahf
mov
push
lds
mov
and
pop
mov
ret
inc
jl
pop
das
xor
sub
push
adc
nop
pop
inc
fwait
xor
shlb
mov
into
test
jecxz
mov
mov
mov
push
inc
loope
xor
sti
pop
sub
or
out
enter
loop
pop
rcl
mov
mov
lds
loopne
fcoms
cmp
incl
cmp
fdivrl
adc
loop
cmpsl
cmp
fldcw
faddl
in
mov
sbb
pop
jge
lods
addr16
cmp
lds
sti
push
sub
enter
add
dec
gs
pop
or
xchg
jg
rorb
xchg
mov
jg
inc
mov
inc
ljmp
xor
sbb
mov
pop
ret
mov
stc
lret
clc
loope
ss
subb
int
movsb
jo
sbb
aad
cmp
dec
and
fld
test
cmp
or
jg
mov
push
jnp
mov
cmc
into
imul
mov
mov
stos
test
jae
in
repnz
js
clc
scas
sub
leave
push
jno
cld
gs
icebp
insl
stc
xchg
daa
pop
jne
dec
repnz
test
cmp
inc
lods
sbb
mov
jl
cmc
cmpsl
fcomps
and
cmc
and
cmp
sbb
push
sbb
push
bound
adc
out
aad
in
adc
pop
cmp
loopne
cmc
loopne
mov
test
pop
fisubs
arpl
xchg
int
in
test
inc
push
imul
inc
mov
cmc
bound
addr16
stc
iret
dec
lds
xlat
jp
xor
and
popa
ret
mov
pusha
in
int3
fcompp
cld
pop
outsb
mov
testb
aam
lcall
lret
add
cs
sbb
lds
in
sbb
add
in
xchg
sub
pop
add
fs
ljmp
stc
inc
inc
or
mov
data16
adc
push
adcb
cs
out
cld
ret
ret
icebp
adc
jae
imul
mov
sbb
outsb
xor
pop
fdivrl
repz
adc
fdivrl
int
bound
jge
ficoml
stos
jnp
sbb
mov
and
psllq
jb
jbe
cmc
sub
int
sub
sbb
mov
adc
pop
sub
xchg
sbb
dec
adc
pop
xchg
cmp
test
lret
mov
addr16
dec
or
pop
xlat
decl
sahf
sbbb
xor
add
mov
loopne
insl
xor
test
iret
jnp
loop
add
or
add
push
dec
mov
enter
cmp
push
dec
loop
ret
cmp
adc
jecxz
or
inc
or
pop
mov
jg
push
sub
es
add
jno
and
test
push
aaa
fsubs
xor
js
sar
pop
inc
outsl
scas
fbstp
mov
dec
mov
xchg
cmp
rorb
mov
sahf
adc
pop
je
or
sbb
arpl
jb
int
dec
int3
xor
pop
or
jo
ret
xorb
or
mov
add
adc
mov
or
xchg
clc
or
jo
hlt
jecxz
adc
jno
enter
mov
das
ljmp
lods
fdivs
iret
es
xor
mov
imul
sahf
inc
popf
push
jbe
mov
cmp
std
or
fs
insl
sti
arpl
and
sub
cmp
leave
push
cmpl
xchg
cmc
cmpsb
stos
mov
outsl
lahf
lret
cmp
popa
mov
aaa
cmp
fiaddl
lret
xchg
inc
popf
popf
jno
mov
mov
clc
repnz
out
fwait
sub
sahf
fimuls
push
sbb
or
add
or
shrb
adc
xlat
out
mov
ret
cmp
push
jne
jb
scas
aaa
add
bound
push
mov
cmp
fwait
sbb
fstpt
int3
cmp
and
sbb
dec
shrb
xor
jne
xlat
dec
test
fwait
xor
fldl
ficomps
lret
imul
outsb
je
aaa
inc
cmp
dec
pushf
stc
push
popa
in
in
and
add
mov
leave
daa
push
mov
enter
sub
ljmp
push
add
sbb
pop
pushl
or
xchg
out
jecxz
and
dec
mov
jmp
inc
cmp
push
nop
dec
jmp
addr16
and
lods
dec
sbb
sbb
mov
adc
imul
inc
jecxz
inc
xchg
js
pushf
js
add
inc
or
pop
je
lods
sbb
test
xchg
jae
ss
sbb
cli
or
dec
jns
mov
adc
fcos
pop
xchg
mov
cli
sti
push
adc
add
pop
xchg
mov
ret
shl
lahf
sti
fidivrl
fistpll
lock
sub
stos
cmp
inc
scas
es
mov
scas
jp
lock
push
leave
scas
leave
repz
nop
add
inc
xchg
sbb
dec
or
popa
outsl
mov
loopne
dec
cmpsl
dec
cmc
lahf
pop
add
in
xchg
jno
jecxz
cwtl
push
icebp
fcompl
pop
movsb
inc
mov
mov
jg
fwait
mov
push
daa
pop
dec
aaa
test
add
push
dec
cmp
js
orb
movl
test
je
sahf
cmp
in
popl
sub
movsb
push
ret
xor
out
and
push
or
sbb
ljmp
clc
aam
cmc
push
loop
rcll
fs
mov
push
aaa
ds
leave
jmp
sub
cli
sbb
in
stos
rorl
adc
mov
dec
cmp
pusha
push
ss
or
mov
dec
xchg
xchg
bound
and
and
jae
in
lea
xchg
mov
jne
faddl
gs
lods
fisubs
push
cwtl
dec
sbb
push
push
push
push
and
fdivrl
insl
call
popf
xchg
mov
and
pop
xchg
xchg
or
push
ljmp
pushf
or
stos
cmp
mov
or
imulb
ss
std
cmp
xchg
in
into
lods
xchg
or
jo
cmpb
xor
movsl
sbb
pop
std
jno
push
sbb
cmp
out
rclb
and
mov
movsb
or
cmp
mov
mov
test
call
ret
leave
and
dec
lret
stos
inc
xchg
and
scas
faddl
loop
xor
stc
add
mov
xor
jecxz
and
ss
jb
sub
aam
xor
bound
adc
fwait
frndint
jle
stos
flds
imul
sbb
jg
mov
jns
add
in
lods
pop
mov
pop
sub
sub
bound
cwtl
xchg
fiaddl
cmp
jnp
loope
in
out
popa
in
push
fdivrs
mov
jmp
iret
lahf
bound
cmp
inc
pushf
int
rcll
mov
lds
or
jp
sub
lret
popa
popa
dec
xor
adc
fildll
mov
lahf
inc
pop
inc
insb
ret
inc
sbb
aas
sub
int
inc
sub
pop
out
js
mov
cmp
std
sub
testb
dec
mov
mov
adc
push
fisubs
sub
xchg
loope
push
mov
ja
pop
sbbb
stos
arpl
ret
mov
inc
cwtl
lock
mov
fstpl
rcll
loop
and
xchg
ljmp
outsl
sbb
or
xor
adc
push
dec
jne
sub
fucomp
xor
sbb
cmpsb
sahf
je
xchg
jg
das
mov
adc
idivl
sub
int3
inc
or
nop
out
or
sbb
dec
and
mov
mov
cmp
ds
pop
dec
xchg
repnz
mov
mov
je
into
sbb
inc
adc
cli
or
mov
pop
mov
xor
dec
inc
xchg
adcb
inc
rcrb
add
jle
push
add
daa
pushf
and
daa
fstps
mov
and
jmp
sbb
adc
or
pop
mov
mov
mov
and
insb
push
sub
cmpsb
mov
cmp
test
mov
ja
mov
inc
mov
jmp
fistpl
xchg
lahf
or
lods
mov
mov
stc
and
incl
sbb
jo
outsl
les
sub
std
loop
fadd
push
out
push
xlat
ficomps
es
cmc
mov
xor
into
or
pop
ds
jns
dec
mov
push
sbb
add
mov
mov
ret
test
mov
ret
dec
into
rep
xchg
loope
aam
dec
lods
and
mov
jns
push
add
cld
addr16
stos
vmovaps
mov
sub
and
movsl
sti
aaa
mov
cltd
shrb
dec
int
or
dec
xchg
sub
loop
pop
xlat
add
cmp
jo
scas
sbb
xchg
loop
add
cli
dec
scas
mov
xchg
popa
hlt
gs
mov
mov
jecxz
scas
fcomp
jbe
pop
mov
aaa
sbb
test
add
cmpsb
das
cmp
sbb
push
loopne
lock
pop
call
pop
sub
orb
jg
jl
and
rcll
fistpl
pop
sbb
xchg
movsl
xchg
sbbl
stos
inc
cmp
ret
inc
mov
mov
shrl
and
push
dec
notl
mov
pop
xchg
loop
pop
mov
out
cmp
in
icebp
into
jp
push
push
sub
adc
in
jo
jbe
out
pop
sbb
in
xchg
or
icebp
jmp
repnz
clc
popf
and
jne
filds
lods
rorb
int
mov
lret
dec
fadd
or
inc
cmpb
xor
jae
ja
xor
gs
test
cmp
sbb
and
push
add
jb
fisubrl
mov
push
cld
xor
outsb
in
xor
daa
popl
mov
pshufw
push
jmp
push
jns
or
clc
jle
iret
test
jg
inc
xor
push
cmp
push
mov
xchg
rolb
out
test
and
sub
or
jbe
adc
mov
iret
inc
sub
push
xor
mov
in
lahf
or
cmp
push
call
xor
inc
and
add
or
in
cmc
pop
shlb
stos
aam
dec
fildl
imul
pslld
jo
int3
lret
xor
pop
or
js
mov
and
push
push
dec
lret
std
mull
aam
mov
gs
sub
xchg
push
lret
jp
push
and
xorl
pop
xchg
lods
pop
or
addr16
shrl
jne
mov
xchg
mov
mov
scas
in
call
mov
xlat
test
stos
push
dec
icebp
push
cli
test
mov
cmp
mov
push
fdivr
dec
fwait
mov
adc
outsl
rorb
or
icebp
test
dec
push
mov
mov
push
mov
mov
cmp
sbb
ja
cmpb
jbe
test
and
js
rorl
jnp
icebp
push
adc
fwait
es
and
test
dec
mov
shlb
inc
std
clc
sub
aas
cmp
movnti
inc
aas
daa
cmp
fsubrl
and
sbb
xchg
lock
xor
mov
inc
mov
fsubl
mov
aaa
nop
xor
add
cmc
fistps
fs
leave
and
es
and
push
adc
pusha
call
mov
ja
xchg
mov
jl
mov
roll
adcl
leave
cmp
dec
pop
or
cmp
rcr
cmp
dec
and
add
outsl
adc
lods
mov
ss
scas
and
dec
jle
je
mov
inc
fdiv
push
in
scas
mov
mov
lods
mov
mov
nop
sbb
sbb
mov
jae
lods
dec
mov
lods
and
fxam
mov
cmpsl
paddusw
xchg
pop
cmp
mov
pop
jb
inc
lods
jo
push
fbstp
adc
movsb
sub
cmp
sahf
repz
out
add
pop
test
out
push
insb
adc
dec
jnp
and
in
xor
push
sbb
stos
ja
in
scas
or
cmp
sbb
xchg
pop
repnz
pop
mov
lock
jne
sbb
stos
mov
out
out
mov
ja,pt
lock
lea
lock
sarl
pop
mov
fdivrs
push
int
sbb
mov
jecxz
pop
or
or
xchg
sti
mov
mov
mov
rcrb
xchg
push
mov
aaa
fists
mov
cmp
xor
jbe
icebp
fidivs
pop
xchg
out
lahf
adc
test
push
shrb
call
call
mov
std
pushf
xchg
into
stos
push
arpl
out
stc
xchg
pusha
xchg
adc
adc
cmp
ret
insl
push
pop
test
in
xor
sbb
add
push
and
push
enter
inc
dec
lods
add
std
aad
out
pushf
xor
jnp
xchg
xor
outsl
adc
leave
mov
push
sub
inc
negl
cmpsb
in
mov
add
jp
mov
dec
push
pop
push
push
cld
add
push
sub
or
fcmovnb
push
inc
rol
adc
sbb
mov
lods
jecxz
pop
mov
jnp
aam
fadd
cmp
popf
repnz
jae
xchg
stos
hlt
and
out
mov
dec
cld
xor
adc
int
fwait
jle
mov
lret
xchg
mov
enter
mov
fidivrs
pop
enter
stc
stos
addr16
mov
inc
int3
dec
or
adc
dec
or
lock
inc
mov
lods
mov
push
xchg
jecxz
fisubrl
enter
mov
mov
dec
cltd
aaa
mov
pop
push
enter
sub
or
sbb
lock
dec
subb
dec
bound
ret
dec
test
scas
mov
rolb
loopnew
jnp
flds
mov
sbb
and
mov
mov
imul
pop
cmc
cmp
jo
es
mov
ficompl
or
jo
dec
adc
mov
sub
and
scas
adc
push
stos
repz
add
repz
xchg
out
jbe
mov
dec
mov
in
cwtl
jl
fwait
sarl
outsl
int3
aaa
insl
mov
inc
scas
aas
sub
dec
movsb
push
sub
jns
out
das
mov
jecxz
inc
dec
mov
sbb
mov
mov
cmp
mov
jns
and
fsubs
dec
sbb
lea
stos
div
ljmp
and
call
test
cltd
jmp
loop
sbb
int
test
or
stos
leave
inc
icebp
in
or
inc
jge
pop
cld
nop
add
or
icebp
push
aas
insl
and
jle
push
in
aaa
cmp
insl
js
or
add
cmp
and
fs
repz
pop
loopne
cmp
xchg
push
repnz
mov
mov
add
pop
pusha
lahf
test
sub
clc
ret
icebp
fstp
adc
cwtl
les
lcall
mov
dec
stos
lds
push
mov
pushf
insb
and
mov
dec
cmp
or
scas
lds
jne
fbld
inc
add
or
and
pop
in
add
cs
xchg
inc
push
push
dec
cmc
dec
out
dec
movsl
sti
mov
stos
cmp
in
push
mov
int
add
jecxz
popa
mov
in
sbb
cli
dec
lret
repz
jnp
test
pusha
mov
pop
mov
js
add
lods
ret
cmc
andb
lret
imul
ret
sarb
idivb
clc
movsl
andb
fs
xor
jl
xchg
sbbb
js
and
mov
adc
pop
repz
je
inc
fstps
jne
lea
add
outsb
mov
mov
cli
dec
adc
jno
push
xchg
jne,pt
dec
icebp
insl
lret
adc
adc
decl
xor
sbb
jne
ss
adc
sbb
sbbb
das
sub
mov
adc
add
dec
adc
sbb
pop
fs
nop
fcomps
jl
dec
jp
inc
loop
xor
mov
vprotq
xchg
mov
mov
adc
mov
aad
xchg
mov
testb
int
es
cmpsl
jo
sub
int3
cld
fincstp
pop
cmp
mov
mov
popf
push
dec
and
pop
std
push
rcrb
scas
xchg
loopne
fwait
icebp
pop
push
js
cmp
xchg
mov
enter
loop
scas
cmp
xor
in
add
mov
push
cli
arpl
fisttpl
xor
cmp
push
cmp
lcall
sbb
aam
fldcw
adcb
adc
fcoms
jo
fistps
inc
shrb
andl
sahf
pusha
or
sahf
lds
pushf
stos
mov
mov
lods
push
adc
test
and
inc
mov
popa
aad
cmpsl
outsl
push
stc
or
push
xchg
and
loope
pop
cs
aas
mov
jmp
icebp
mov
lret
es
add
sbb
es
jle
popf
dec
xchg
adc
out
xchg
push
call
cmpsb
dec
pop
mov
add
es
insb
xchg
inc
jge
cmpsl
xchg
pushf
test
mov
lret
add
xchg
xorb
sub
test
add
mov
in
dec
adc
jmp
mov
sbb
adc
fcmovnu
cwtl
fcompl
out
and
shl
sub
push
push
jae
mov
cmpsb
sbb
cmp
cmp
or
lahf
fwait
xor
sbb
jl
inc
scas
push
notb
inc
js
inc
fmul
movb
push
fucomip
adc
xor
cmc
push
mov
push
mov
mov
add
fistpll
or
shlb
mov
nop
push
pop
xchg
fisubl
xchg
stos
fildll
mov
test
fisubrl
push
fisttps
sbb
sub
cmpb
xchg
sub
fiadds
mov
hlt
negl
stc
outsl
fsubrs
call
mov
xchg
call
aas
pop
dec
ja
xchg
dec
pop
cmp
jge
in
mov
pop
and
daa
cmp
cmc
in
pop
lods
jns
punpckldq
inc
jno
hlt
sbb
jle
pop
test
jb
jo
adc
add
or
sub
mov
or
loope
fldcw
mov
fidivl
cmpsl
mov
into
inc
mov
cmpsl
jecxz
add
inc
in
xchg
arpl
outsl
scas
dec
into
sub
add
pop
mov
fs
in
int3
adcb
ret
push
mov
pop
cmpsb
mov
push
les
fnstsw
lea
fcmove
mov
push
cmp
mov
adc
sti
es
fdiv
inc
push
mul
testb
mov
std
mov
repz
sbb
lret
addl
ret
xchg
mov
inc
fwait
or
push
and
sbbb
xorb
lea
clc
dec
and
stc
xor
stc
add
xor
adc
aaa
addb
ret
bound
fcompl
jmp
pushf
mov
xchg
or
mov
xor
subl
jecxz
ja
into
js
sbbb
adc
ss
mov
in
cli
xor
jl
and
dec
loope
lcall
jb
xor
and
sub
test
insl
ljmp
cwtl
je
ja
sbb
cmpsl
test
mov
inc
xchg
mov
cld
xor
daa
cmp
inc
add
ds
xchg
inc
ret
jo
pop
xor
lock
adc
pop
lcall
sub
lock
xchg
roll
push
pop
adc
lret
xor
xchg
inc
leave
push
mov
wbinvd
cltd
popa
test
push
xor
pop
pop
sbb
and
loop
out
pusha
jne
push
ds
out
sahf
shl
adc
lcall
xor
push
adc
and
add
in
shlb
xchg
addr16
popa
out
lcall
pop
fistpll
rcr
sti
int
ss
leave
test
jnp
repnz
fimull
std
mov
pop
cmp
dec
popf
inc
fdivrs
fdivr
pop
daa
and
lret
repz
pop
inc
shlb
xchg
cmpsb
xor
addb
push
mov
sarb
cmp
mov
pop
test
fistpll
mov
dec
cmp
mov
rcrb
in
mov
and
test
popl
mov
cli
repnz
mov
sbb
mov
rcl
jle
mov
out
sbb
cmp
mov
mov
xchg
jmp
jle
rolb
enter
adc
sub
push
xor
scas
in
cld
js
sahf
rcl
leave
inc
xor
add
bound
scas
mov
das
push
jle
out
pop
mov
jge
cmpsb
cmp
stos
cwtl
mov
sub
fsub
mov
jg
aad
cltd
faddl
xchg
xor
ret
and
jae
rcll
imul
imul
inc
bound
jns
mov
jmp
adc
xor
xchg
ss
add
pop
pop
sarl
int3
in
lcall
jg
sbbb
dec
push
push
cld
out
loopne
ljmp
add
in
movsb
cli
rcll
cmc
and
xlat
push
movsb
xchg
inc
insl
pushf
stos
cltd
mov
inc
cltd
add
jns
js
daa
scas
inc
out
mov
xlat
jl
jne
mov
push
in
lret
sub
rol
cltd
testl
lods
sarl
jge
inc
push
ljmp
inc
lret
mov
adc
shll
mov
lcall
es
je
arpl
into
in
sbb
xor
repnz
in
movsl
jecxz
inc
lcall
jnp
notb
div
jg
outsb
popf
push
xlat
incl
movsb
fcmovb
out
popf
xchg
mov
insl
fdiv
rorl
lods
xor
xchg
shlb
xor
cltd
mov
insl
loop
sub
xchg
push
aam
jge
xchg
sbb
push
cs
adc
xor
popa
pop
aas
imul
lods
stos
pop
add
fmul
aad
xor
inc
popa
loope
fimull
sti
insb
cmp
xor
cmpl
idivb
test
xchg
sub
push
jnp
fmull
popf
iret
jg
fcmovbe
outsb
push
test
jl
inc
push
push
sbb
or
sub
cmp
pop
ror
pop
mov
and
lret
popa
pop
mov
jnp
mov
adc
in
je
mov
insb
mov
adc
cli
sahf
cmp
mov
sub
mov
fsubrp
repz
ja
sub
out
daa
xor
nop
xchg
jp
jge
pop
xchg
inc
xorb
fsub
gs
pop
pop
inc
mov
dec
popa
bts
shlb
mov
ret
mov
sub
inc
adc
xor
mov
scas
shlb
sti
mov
add
push
imul
push
xor
dec
and
xor
mov
cwtl
lahf
fcmovbe
jl
orl
jmp
dec
andb
repz
in
addb
jmp
sahf
jno
or
into
repnz
pusha
dec
dec
rcrb
or
repz
and
mov
cmp
repnz
daa
arpl
xor
scas
testb
or
je
mov
test
in
or
in
xlat
dec
jnp
addr16
int3
mov
cmpl
jns
cmp
scas
add
test
dec
push
ret
pop
add
sub
cs
sbb
sbb
out
mov
pop
mov
sbb
mov
mov
jge
imul
enter
jge
or
mov
das
sbb
pop
sub
xor
sbb
insl
sbb
xchg
cmpsl
fwait
mov
or
dec
xchg
mov
and
mov
mov
xor
xor
data16
dec
lahf
pop
mov
lcall
nop
adc
mov
push
xchg
js
idivl
int
mov
or
xchg
repz
shr
jbe
push
push
fcmovne
or
and
lret
dec
sti
in
push
cmp
jns
xchg
outsb
bound
addr16
pop
cli
test
out
daa
popa
mov
mov
push
sub
test
iret
ret
test
or
mov
push
jae
lea
push
add
int
cmpb
mov
movsb
pop
stc
in
and
push
xchg
dec
iret
cmp
arpl
xor
nop
adc
inc
sub
cmp
mov
movsb
mov
mov
dec
cmp
pop
js
mov
ficoms
mov
ljmp
lret
and
clc
enter
adc
pusha
cld
xchg
jle
push
out
lods
rcrl
test
sbb
test
dec
enter
push
repz
push
mov
shl
cltd
xor
cmp
or
push
mov
outsb
jns
push
in
les
or
and
add
nop
add
bswap
mov
sub
loop
mov
std
cs
lret
lahf
sbb
popf
or
js
dec
xchg
xchg
enter
ds
in
test
lods
sti
dec
sub
and
pop
jmp
push
subb
add
sub
aad
push
push
fucom
push
or
clc
pop
jno
or
xor
pop
push
mov
stos
cmp
fs
adc
sbb
xchg
leave
cmc
pop
mov
cmp
and
cmpsb
mov
lahf
lret
mov
int
and
je
xchg
push
add
push
mov
mov
sub
gs
cmp
adc
shlb
add
ja
dec
push
xchg
mov
stc
pop
shll
adc
push
push
add
mov
fwait
inc
mov
or
div
push
fxam
and
mov
inc
pop
mov
xor
push
jb
pop
add
test
ret
xor
sbb
jnp
push
add
xchg
call
daa
fcompl
mov
cmc
js
fwait
xor
sub
lock
mov
in
fimuls
in
aaa
push
scas
jb
loope
sarl
dec
mov
es
push
cmp
bound
pop
shr
cmp
inc
push
pop
int3
sbb
cmp
mov
mov
sub
adc
jns
dec
scas
push
arpl
cmp
xchg
pop
pushf
orl
lods
repnz
insl
cld
sti
imul
sub
pop
pop
push
mov
cmc
call
xor
stos
iret
xor
xchg
push
rol
fs
cmp
inc
lret
inc
jecxz
cli
push
inc
jp
test
and
test
or
les
pushf
outsl
xchg
adc
imul
dec
xchg
cwtl
mov
jnp
inc
js
sub
and
imul
push
rcr
pop
adc
sbb
outsb
xchg
adc
sub
rorb
ja
sbb
sub
mov
jp
mov
inc
inc
add
stos
or
jo
push
repz
pushf
or
lods
push
test
out
push
add
cmpsb
push
mov
add
jae
xchg
rcrl
lds
fcmovnb
adc
sub
dec
mov
xchg
cmp
data16
cli
mov
test
push
mov
sbb
cmc
cli
and
mov
and
sbb
std
leave
nop
dec
pop
push
inc
inc
inc
ja
sbb
push
lods
and
pop
jo
les
inc
fcomps
sar
ja
mov
dec
fldl
in
xchg
jb
loope
adc
in
jmp
push
pop
cld
pop
mov
and
mov
sbb
outsl
add
outsb
icebp
inc
dec
movsl
fldcw
popf
dec
xor
setle
push
arpl
pop
dec
in
push
test
jns
enter
out
outsl
sub
addr16
movsb
xor
adc
ljmp
aad
xchg
loopne
and
loop
sbb
fwait
mov
jecxz
pop
mov
nop
shll
and
push
ljmp
inc
push
popf
fisttps
inc
sub
cwtl
mov
movsl
movsb
jge
repnz
ja
js
test
jge
adc
add
jbe
imul
jg
fstpt
sbb
xchg
push
icebp
leave
loop
in
lret
pop
shrl
xchg
xor
jne
rclb
dec
popa
je
ret
adc
mov
xor
sti
mov
inc
push
rorl
inc
fists
dec
xor
loope
sub
ds
sbb
outsl
jge
jl
jb
sahf
in
scas
cld
pop
std
dec
pop
fdivl
and
stos
lea
jl
loopne
xor
rolb
mov
mov
es
addl
in
scas
push
daa
or
clc
and
dec
mov
rcrb
inc
stc
jb
inc
aam
fidivrs
xchg
shrb
sbb
sub
push
jmp
imul
push
and
inc
addr16
in
js
jno
in
pop
mov
pop
imul
mov
cmp
das
inc
mov
push
shrb
dec
les
addb
ret
jecxz
adc
movsl
clc
enter
pop
adc
loop
mov
imul
adc
inc
ds
mov
and
mov
fidivl
lcall
xchg
sbb
add
mov
sbb
push
add
loop
jne
nop
cmp
mov
pushw
jp
xor
push
dec
pop
popa
or
pop
out
rorl
mov
mov
insb
test
cmpsl
or
mov
test
dec
mov
mov
cli
test
sub
dec
pop
pop
aam
fcmovb
dec
sbb
rcl
arpl
ss
jmp
cmp
mov
test
ret
inc
push
sub
div
push
out
scas
xchg
hlt
out
cmp
sbb
in
sub
outsb
lds
add
inc
aas
stc
push
pusha
mov
cmpb
imul
pop
mov
clc
out
add
pop
xchg
adc
xlat
add
pop
cwtl
movsb
addb
popf
push
mov
shrb
test
or
cmc
xchg
mov
lds
cmp
insl
roll
lea
unpckhps
scas
add
and
lahf
pop
adc
sub
adcb
lods
data16
mov
aaa
btc
jno
xor
jge
loope
outsl
ss
push
add
dec
fidivrl
ja
shll
cltd
fldl
enter
mov
in
jge
inc
movsb
hlt
rcrb
js
nop
pop
pop
jne
sbb
loop
adc
negb
mov
push
sbb
into
mov
shll
mov
outsb
clc
lcall
fisttps
into
fistps
xchg
int3
sbbl
int
inc
loope,pn
pop
push
jns
nop
sub
adc
popa
stc
lahf
dec
cmp
lods
pop
inc
xlat
test
fwait
lret
jmp
xlat
cmp
lock
out
push
ja
jno
paddsb
add
in
int3
inc
in
loopne
orl
inc
xchg
mov
mov
out
das
aam
jne
inc
mov
jbe
ja
popa
outsl
jne
dec
daa
fadds
in
arpl
mov
int
xchg
sub
mov
neg
pop
mov
or
sbb
jle
adc
fstp
sbb
xchg
cmc
jb
lahf
xor
jp
popa
test
jp
xor
mov
stos
movsb
arpl
nop
cmpxchg
ss
out
pop
inc
addr16
pop
xor
add
mov
es
pop
inc
loop
sub
lea
sbb
inc
mov
stos
push
sub
dec
xchg
addb
pop
cs
push
movsb
xchg
leave
lods
in
mov
sub
mov
nop
mov
lock
pop
push
jg
out
adc
insb
mov
in
popa
fstpt
push
sti
pop
cld
inc
dec
inc
icebp
xor
push
push
mov
rcll
mov
les
push
mov
pusha
and
adc
xchg
out
loop
in
daa
xor
push
mov
jne
push
lods
xchg
stc
lret
out
inc
or
aaa
ja
repnz
push
les
push
int3
mov
mov
sbb
and
and
int3
repz
imull
pop
mov
sbb
adc
push
test
ret
js
jmp
mov
mov
hlt
dec
cmp
mov
jmp
adc
cwtl
fcom
ds
mov
ret
stc
lcall
gs
rol
push
aam
ss
add
xchg
rol
loop
lea
movsb
pop
jns
adc
sahf
fidivl
hlt
mov
inc
fnsave
mov
mov
int3
outsl
mul
iret
xor
xchg
xchg
ficoms
sbb
mov
pop
popa
jmp
ss
or
sbb
push
outsb
push
push
adc
xchg
mov
rolb
in
xchg
or
gs
bound
movsb
add
and
xchg
push
jle
pop
inc
and
out
in
push
mov
fdivl
sub
and
inc
add
jne
std
adc
and
aad
stos
pop
aas
gs
xor
sbb
mov
or
jnp
cwtl
lahf
jno
xchg
mov
fsubl
add
mov
outsb
inc
icebp
mov
pop
xchg
sbb
jo
out
in
adc
jo
xchg
mov
cmc
lods
test
sti
cwtl
inc
mov
mov
and
ret
test
outsl
pop
shl
push
int
imul
push
shlb
mov
aad
push
cmp
sub
jl
xchg
dec
sub
push
mov
das
mov
rol
fs
aam
loop
insl
push
jne
push
dec
xor
pop
arpl
push
mov
push
cmpsb
adc
inc
xor
xchg
lea
add
ret
and
repz
inc
mov
fstp
jecxz
sbbb
sar
mov
sub
jp
imul
mov
jnp
into
nop
push
pop
xchg
cltd
insl
rcll
mov
test
in
dec
pop
shr
insl
mov
das
in
jge
sbb
fcmovu
iret
sub
mov
das
test
mov
jno
xchg
push
push
clc
dec
cltd
rclb
inc
xchg
pop
jg
jecxz
mov
lret
aad
lds
sub
movsl
pop
cmpsl
mov
ds
cmp
add
sbb
fimuls
cmp
out
sbb
scas
je
fsubl
and
sbb
add
imull
pusha
cmp
jbe
pop
sbb
sub
cli
cld
idivb
arpl
imul
test
sbb
sub
xchg
lret
insb
cs
sub
popa
scas
test
push
pop
mov
inc
mov
jbe
testb
aam
pop
das
iret
mov
mov
mov
pop
cmpsl
lret
xchg
inc
inc
mov
out
lret
iret
dec
inc
lea
subl
cmp
mov
adc
xor
addr16
ja
out
sub
jle
les
xor
and
in
mov
push
adc
pop
jg
sub
add
inc
sarl
out
push
sub
and
fwait
arpl
jmp
insb
fcoms
mov
push
nop
jp
ret
jle
addb
in
scas
mov
clc
adc
jp
mov
popa
roll
or
adc
mov
sbb
imul
leave
rolb
call
mov
out
xchg
mov
sbb
jge
int3
leave
fidivs
and
cmp
sbb
and
dec
mov
adc
sub
lods
popa
mov
push
into
subl
push
xchg
jge
dec
mov
add
jns
push
in
in
jl
cwtl
insl
xchg
dec
lcall
adc
iret
fldenv
inc
cvtps2pi
cmp
sbbl
in
dec
cwtl
xchg
mov
jmp
mov
in
addr16
sbb
push
lahf
sub
push
aam
rcrl
and
mov
dec
shlb
mov
jae
fildll
dec
mov
dec
ret
push
or
lea
add
add
pushf
arpl
push
add
inc
idivb
pusha
aas
xor
adc
int
subb
push
clc
jmp
xor
sub
fwait
pushf
dec
lret
rorl
mov
mov
or
ret
inc
insb
pop
cmpsb
pusha
push
js
loop
mov
fdivrs
fs
mov
je
add
pop
into
stos
pop
push
jg
jns
sub
jecxz
push
mov
push
jb
dec
add
data16
adc
sbb
dec
movsb
cld
jmp
and
pop
sub
mov
shll
popa
dec
xor
in
or
movsb
ffreep
fcoms
add
cmpsl
iret
xor
call
fbstp
fidivrl
adc
jecxz
orb
adc
pop
push
fbstp
call
jl
dec
and
lret
inc
cmp
test
inc
mov
jg
jecxz
jmp
popa
push
push
xor
insl
add
mov
fcomip
fisubl
pop
mov
stos
xchg
imull
ds
add
dec
dec
mov
popl
jno
leave
mov
or
cmc
dec
idivb
into
push
sub
fcom
int3
test
lret
int
imul
xor
adc
sbb
ret
pop
sub
sbb
movsl
sti
xlat
hlt
aas
imul
addb
mov
aas
pop
mov
scas
cld
call
outsl
jle
xor
dec
gs
and
add
ljmp
nop
fisttpll
cs
adc
jb
fstl
mov
add
mov
imul
mov
aas
xchg
jmp
subb
jle
in
insb
mov
fcomps
fcoms
shlb
das
mov
or
mov
mov
popl
mov
fdiv
stos
or
cmp
mov
movsb
push
jno
cltd
and
dec
sbb
hlt
adc
test
cmpsl
daa
fidivl
or
lret
mov
jbe
pop
les
inc
dec
vpunpckhbw
jg
jl
mov
mov
sub
mov
xchg
rorl
loope
mov
je
pop
jecxz
es
pop
or
leave
mov
movsb
jle
mov
push
xchg
lcall
sti
push
ds
dec
mov
mov
fdivs
and
jge
fs
test
outsl
mov
lret
fcom
das
sbb
daa
xchg
cmp
in
xor
daa
and
daa
jne
fs
and
movsl
lret
shl
add
mov
or
test
out
fwait
daa
mov
push
push
and
stc
xchg
fwait
hlt
cmp
in
daa
cmp
lds
xor
dec
jns
mov
mov
loopne
jl
jg
xchg
sub
push
inc
mov
icebp
lods
adcb
shll
faddl
xchg
sub
xor
sbb
stos
inc
cmp
cmp
into
ja
mov
dec
pop
push
jnp
xchg
js
mov
pop
push
popl
add
aas
cs
push
in
pop
mov
push
mov
mov
xchg
inc
test
mov
pop
add
dec
call
clc
dec
leave
aad
mov
ds
popa
lds
add
fwait
das
lret
jecxz
lret
mov
paddsb
out
dec
ficoms
fnstcw
arpl
xchg
mov
repz
movsl
dec
pop
xor
cmpsl
jo
sub
lods
rcrb
out
sahf
sahf
sbb
jno
int3
out
jo
xlat
and
jnp
xchg
mov
xchg
add
add
mov
push
mov
jmp
aad
push
add
int3
mov
bound
and
adc
mov
dec
out
push
out
mov
pop
mov
jp
dec
fmulp
pushf
int3
push
xor
out
sub
neg
in
int
dec
aad
ret
xchg
ds
sbb
movsl
inc
sub
cld
int3
enter
lret
sub
imul
lret
sti
into
ds
xor
out
cs
dec
pop
pop
add
jmp
cmc
sub
sub
push
pushf
or
sbb
aaa
cmc
or
pusha
push
add
xchg
pop
mov
push
daa
rol
fcmove
popf
push
adc
stos
pusha
jp
ja
and
std
movsb
cmp
test
push
jbe
mov
aas
addr16
dec
xor
push
sub
mov
mov
xor
scas
xor
sbb
dec
inc
loopne
mov
sbb
ljmp
stos
add
adc
mov
cmc
add
inc
jns
jg
fcomps
out
adc
stos
push
call
mov
cmp
or
into
xchg
or
daa
pop
mov
adc
cltd
pushf
aad
in
aaa
mov
fistpl
pop
sub
mov
rcll
inc
sbb
or
arpl
bound
mov
push
cmp
sub
and
mov
jne
aam
shrl
xor
cld
cwtl
mov
mov
dec
imul
mov
mov
mov
pop
and
test
dec
mov
sahf
test
sbb
fnstcw
das
rol
insb
xchg
std
cmpb
jp
lods
popf
cmp
loop
or
or
es
xchg
pop
stos
push
mov
push
insb
movsb
mov
push
fbstp
call
test
ja
adc
add
and
sub
inc
test
xchg
test
jo
jmp
lcall
mov
dec
mov
add
imul
loop
pop
xor
or
sbb
mov
pop
mov
xor
test
xchg
sbb
inc
jle
into
and
adc
xor
lods
fldln2
insl
popl
int
dec
leave
push
cmp
add
hlt
clc
cmp
mov
cmp
add
or
cmp
inc
mov
xor
lea
testl
fdivr
dec
dec
lods
pushf
mov
sahf
xchg
stos
adcl
pop
rolb
pop
fcomps
xor
in
fsubrl
add
adc
push
pusha
jnp
mov
rorb
popf
adc
inc
rcll
cltd
and
out
daa
dec
lds
xchg
pusha
int
sbb
xor
push
cmpsl
pop
inc
adc
pop
neg
mov
xchg
movsb
lret
sub
inc
lcall
mov
aam
movsb
decb
push
lock
sub
xor
sub
cli
cs
nop
scas
rol
pop
outsl
jmp
mov
fwait
test
dec
enter
fcomi
mov
fdivl
xor
lods
jae
xchg
cmp
std
data16
mov
push
mov
stos
dec
jb
clc
push
xor
lock
in
mov
mov
cmp
add
sub
stos
mov
lret
nop
lds
pop
imul
jge
outsb
les
adc
enter
popa
vpcomd
xchg
pop
xchg
lods
jno
cmp
lock
xor
ljmp
idivl
sbb
sbb
mov
xor
pop
pop
add
imull
mov
push
aam
fwait
jge
shrb
cmpsl
mov
loope
jp
push
and
or
pop
aam
xor
rorl
in
bound
hlt
or
in
loop
test
sub
or
mov
test
rcll
addb
les
incl
mov
inc
lods
xorb
add
dec
fcomps
inc
pop
std
mov
fidivrs
jp
cs
subl
jae
inc
and
cmpsb
push
jnp
movsb
adc
sbb
fbld
fwait
or
outsl
or
push
js
je
test
jmp
orl
out
in
pushf
mov
bound
fildl
stos
mov
sbb
loopne
and
inc
mov
push
xchg
pushf
sbb
es
jne
xor
mov
adc
push
push
inc
mov
mov
push
cmpsb
mov
in
push
and
stc
std
aad
mov
sub
ss
aam
sbb
jle
dec
pop
xchg
sarb
repnz
and
mov
push
lahf
pop
int
rclb
xlat
sub
fwait
mov
jo
test
inc
mov
dec
pop
in
push
ret
push
sub
test
stos
cmp
sbb
out
shrl
shll
mov
imul
adc
cmp
insl
test
test
and
push
movsb
pop
xchg
insb
sub
sub
mov
fcmovu
inc
jae
push
repz
in
test
ret
mov
mov
mov
mov
cmp
jecxz
insl
mov
test
jmp
mov
push
jecxz
mov
cmp
xchg
leave
and
mov
add
roll
mov
lock
imull
movsb
mov
sahf
loop
dec
popa
mov
pop
subl
cli
mov
cmp
pop
xor
test
add
pop
push
scas
clc
sub
ficomps
cmp
insl
in
aam
loop
scas
xor
das
pop
jbe
sbb
in
inc
insb
cmp
in
imul
aad
sbb
mov
jnp
jae
inc
pop
dec
adc
pop
insl
xor
and
into
in
dec
sbb
fstps
cwtl
add
push
sub
or
and
cmp
dec
repz
pop
dec
das
fistpll
add
insl
mov
mov
lock
cmp
pop
cmovp
movsl
outsl
popa
fs
pushl
push
xor
stos
mov
in
pop
rclb
add
das
enter
sub
fs
jge
cwtl
jne
pop
fmuls
stc
mov
mov
pop
stc
adc
push
or
out
sub
in
imul
jp
mov
shlb
xor
and
inc
lret
push
jg
and
aad
mov
ljmp
pop
mov
sti
mov
mov
fisubrs
ss
adc
rcl
mov
mov
cmp
rorl
and
xcrypt-ofb
cmpsl
sub
stos
mov
xchg
adc
cltd
out
movsb
inc
xor
lea
repz
jne
inc
repz
leave
int3
xlat
xor
push
lds
and
hlt
popa
or
dec
das
xchg
jg
push
cmpl
les
pop
gs
jmp
push
std
xlat
sti
repnz
inc
rol
jge
mov
insl
enter
rcl
ja
push
jae
fdivrs
lds
sarl
cltd
arpl
mov
mov
ficomps
loopne
push
and
arpl
jmp
aaa
sti
fimull
and
outsl
in
mov
or
jmp
xchg
imul
movsb
aaa
orb
xor
mov
pusha
lcall
pop
stos
shrb
jmp
js
lea
cltd
lret
sub
cmpsl
cwtl
inc
mov
gs
scas
wbinvd
fisubrs
ret
inc
imul
iret
or
pushf
shlb
jle
push
xchg
imul
imul
sti
cs
out
daa
xor
out
and
cwtl
leave
lods
xchg
rorb
sub
lods
mov
sub
sbb
xchg
lret
nop
ss
scas
push
push
jnp
add
movsl
test
inc
or
lods
inc
mov
sbb
iret
inc
sub
xchg
cld
frstor
icebp
dec
cmp
sub
mov
jbe
mov
ret
push
call
test
mov
jmp
inc
lods
push
leave
push
xchg
push
mov
stos
shlb
outsb
lret
dec
sub
mov
nop
loop
mov
mov
fisubs
fnstcw
add
dec
xchg
push
rcrb
movntps
pop
and
adc
out
inc
mov
mov
nop
inc
jmp
mov
push
xor
mov
fcoml
outsl
mov
psrlw
gs
in
mov
je
pop
sarl
outsb
out
adc
sbb
popa
and
sbb
shll
pop
jecxz
cmpsl
stos
and
sub
mov
mov
xchg
enter
ds
loope
pop
and
inc
scas
dec
xor
jno
data16
sbb
jl
and
cmp
jae
push
das
push
faddl
lds
adc
and
mov
push
push
dec
cmc
push
call
in
push
iret
and
and
mov
mov
sub
lds
mov
jae
jae
outsb
lods
lcall
sbb
ds
push
shll
cli
cmc
pop
shl
jnp
dec
ret
bound
mov
adc
cmp
or
stos
jl
repz
pop
shlb
pop
rol
sbb
flds
push
outsl
jmp
sti
xchg
out
xor
or
cvtps2pi
stos
push
xchg
jno
xchg
dec
mov
mov
test
mov
jl
fisubrl
int
or
sub
adc
xor
mov
push
jg
negb
or
sub
xor
addb
movsl
insl
mov
push
pop
popa
push
adc
jo
or
push
loopne
testb
adc
mov
cmpb
mov
hlt
dec
dec
inc
hlt
jge
push
rep
xchg
adc
pusha
imul
aaa
xchg
add
add
sahf
js
lds
mov
ljmp
js
xorl
jno
push
orb
mov
push
vpsubsw
popf
jge
mov
or
adcw
xor
push
data16
dec
addl
cwtl
xchg
fs
xchg
jne
test
mov
cmpl
cs
xchg
outsb
int3
sub
std
mov
mov
mov
dec
mov
ss
fwait
ret
cmp
iret
jle
inc
leave
popf
mov
daa
mulb
fcmovnb
mov
fcoms
push
adc
sub
cmpsb
call
fsubr
loop
icebp
sarl
adc
inc
xor
pop
icebp
push
mov
in
dec
jge
imul
adc
mov
fwait
in
jno
jb
sub
push
loope
sub
cmp
sub
xchg
pop
imul
and
mov
adc
ret
mov
adc
jnp
mov
fwait
mov
sti
inc
mov
jo
inc
ljmp
mov
jl
push
sti
mov
arpl
sub
ffree
dec
loopne
or
rorl
adcl
subb
push
insb
mov
push
sbb
xchg
int3
std
dec
cmpsb
popf
and
fisubs
cmc
jne
adc
js
dec
push
add
cs
jmp
repnz
inc
lods
pop
les
fimull
xlat
lret
in
push
iret
psllw
ret
ds
insb
and
pop
adc
aaa
repz
aaa
and
ret
popf
jle
orb
nop
sbb
aad
cs
icebp
xchg
jo
dec
fmul
pushl
rcrl
pop
notb
mov
cli
mov
call
inc
popf
mov
inc
lahf
cltd
data16
cmp
stos
cmpsb
mov
sbbl
cmp
inc
mov
mov
mov
fisttpll
ja
sub
mov
and
and
and
outsl
mov
jge
jne
add
push
inc
int
ljmp
mov
fidivrs
les
not
neg
loope
out
pop
xchg
adc
cmp
lcall
fsubp
movsb
xchg
inc
adc
mov
lret
clc
ss
addr16
in
xchg
pop
pushf
ret
cmpsb
mov
outsb
jg
mov
cwtl
add
sti
push
aas
xchg
push
pop
mov
outsl
mov
add
dec
sbb
mov
pop
mov
hlt
sbb
or
mov
jo
pop
xor
jne
add
jns
pusha
mov
fistps
sbb
xchg
xor
jo
adc
insb
daa
fstpl
cmp
notb
xlat
out
aad
mov
dec
imul
pop
jmp
mov
nop
cmove
cmp
js
icebp
stos
xchg
pushf
or
call
into
cmp
shlb
jl
int3
popf
mov
in
xchg
lea
arpl
dec
and
mov
stc
inc
inc
fcmovnu
dec
test
jne
xchg
adc
inc
sbbl
xchg
addr16
or
stos
inc
add
push
loope
push
outsb
cmp
aas
in
cmp
add
test
loope
or
sub
jecxz
push
push
mov
push
lret
lds
adc
dec
les
mov
outsb
add
imul
fwait
mul
dec
arpl
bound
test
pop
mov
jp
mov
add
adc
push
or
int3
les
mov
cld
xchg
fildl
lock
aaa
out
cmp
shrl
sahf
adc
fucomip
xchg
jmp
pop
daa
or
fldl2e
orl
mov
out
cmp
add
adc
jl
in
das
icebp
imul
sub
insl
xor
pop
addr16
mov
pop
bnd
cmpsl
sbb
push
cmp
and
loopne
xor
insb
adc
rclb
and
enter
pop
mov
or
ja
in
mov
and
stos
sub
cld
iret
sbb
test
in
subb
mov
punpckhwd
sbb
mov
dec
sbb
adc
adc
add
push
lahf
or
xchg
inc
test
mov
rclb
xor
inc
ds
jae
rolb
adc
je
fsts
mov
mov
loop
lea
test
xchg
dec
mov
inc
std
mov
imul
popl
gs
repnz
call
jge
insl
pushw
adc
dec
cmp
stos
cmpsb
outsl
pop
rcrb
cmp
and
mov
inc
imul
addl
mov
mov
mov
xor
fimull
add
fistps
jnp
test
jle
pushf
into
jno
push
pusha
and
fnstenv
jle
in
stc
inc
ds
pop
div
loope
jnp
adc
repnz
adc
push
lcall
inc
nop
mov
cmp
clc
adc
ret
or
or
add
lret
or
int3
scas
push
push
mov
add
xchg
add
inc
scas
inc
sbb
xchg
int3
sarb
inc
out
insb
rcrl
inc
jg
inc
out
adc
sub
cld
jecxz
cmpsb
jge
in
jmp
repnz
dec
inc
cmp
rclb
push
pop
cltd
add
lret
pop
lcall
dec
xchg
int
je
cmp
popa
fld
jle
test
jnp
mov
icebp
into
aaa
cli
icebp
mov
inc
mov
sub
in
cmp
cmp
mov
sbb
dec
sub
fwait
xchg
mov
movsl
test
loopne
push
mov
xor
test
lods
insb
push
test
repnz
xorb
jnp
jmp
into
cmp
inc
int3
dec
inc
push
test
jns
xor
jg
lock
shl
mov
sbb
fldl
hlt
aas
sbbb
jnp
imul
sub
inc
push
stos
adc
lods
test
push
test
or
popa
rclb
mov
neg
popf
cmp
push
push
sbb
mov
lret
pop
call
xor
and
icebp
mov
xor
or
add
lods
mov
daa
testb
sbb
push
data16
sub
stc
sub
xchg
xchg
mov
leave
jae
stc
adc
sbb
outsb
nop
mov
shll
cld
imulb
mov
fisttpl
out
add
out
mov
inc
xchg
or
mov
fs
shll
mov
dec
push
add
test
push
out
adc
mov
in
out
sti
xchg
cmpsb
pop
or
popa
pop
lods
add
ss
mov
inc
popa
sar
mov
stos
xlat
mov
sub
cmpsb
pop
and
cmp
ja
cld
mov
push
mov
jp
or
scas
cli
xor
pop
push
mov
pop
out
jbe
scas
rol
xchg
cli
pop
popf
sbb
fstpt
mov
mov
or
or
dec
pop
fidivs
in
jle
stos
mov
mov
test
out
filds
inc
cmp
rorb
jge
push
mov
in
inc
in
dec
inc
adc
sub
dec
mov
mov
mov
jmp
jns
je
int3
fbstp
xchg
push
outsw
mov
and
or
xchg
dec
mov
shr
push
dec
int
dec
add
mov
cmpsb
fld
adc
pop
jne
pop
lahf
inc
sbb
push
jg
sti
push
xchg
xor
rcr
test
pop
aas
ja
push
xor
mov
out
repz
imul
out
push
repz
sbb
testb
xchg
divl
pop
outsl
push
jge
push
lahf
xor
test
call
pop
stos
out
dec
pusha
add
xlat
pushf
test
xor
fcmovbe
gs
sti
fstl
js
or
or
push
les
out
iret
adc
pop
push
mov
stos
and
loopne
adc
fwait
inc
mov
cs
and
popa
enter
stos
dec
pop
adc
jg
push
or
mov
mov
cs
jg
xchg
sbb
mov
lret
fwait
sbb
lods
sub
push
ret
xlat
sbb
inc
lcall
lahf
sub
mov
in
sbb
leave
clc
add
xor
adc
xchg
popf
and
flds
xlat
jl
stos
sti
add
imul
clc
lods
pop
xchg
push
xor
lahf
fs
imul
in
pop
iret
int
add
js
mov
mov
jmp
or
lret
addr16
or
rcl
cmp
outsl
fcoml
daa
popa
addb
adc
lcall
mov
mov
or
mov
in
sbb
fmull
or
lds
mov
mov
dec
push
xor
jg
sub
fdivl
or
loope
push
sbb
xor
sub
cmc
subb
sub
movsl
out
or
sbb
rolb
adc
dec
mov
sbb
pop
jb,pn
dec
add
orl
lret
loopne
add
jb
mov
dec
testb
dec
daa
cmpsb
aam
and
jae
popf
ss
or
icebp
aas
sbb
dec
add
divb
jns
adc
and
jle
sub
out
push
xchg
sub
or
test
xlat
pop
dec
dec
iret
pop
pushf
je
and
filds
icebp
xchg
and
rcrb
mov
pop
dec
jmp
insb
inc
jnp
xor
dec
inc
mov
and
mov
and
xchg
scas
loopne
xor
jbe
cmp
push
add
iret
jo
bound
cmc
mov
loop
sbb
cwtl
lods
ud1
xchg
jae
dec
mov
rcrl
pop
lret
push
adc
insb
sahf
pop
imul
cmp
sub
imul
push
xor
mov
sub
and
mov
add
mov
in
cmpsl
subb
push
xor
push
sarl
mov
push
mov
js
and
mov
fwait
xchg
fdivs
push
fdivp
stos
and
push
adc
inc
stos
xchg
fisubrs
scas
ja
push
movsl
jno
mov
xor
loop
mov
sbb
mov
inc
iret
nop
mov
cmc
cld
outsl
xchg
aas
jmp
cmp
in
ret
insl
mov
imulb
lock
out
pop
push
pusha
aad
ja
insb
test
icebp
cmp
xchg
repz
scas
mov
int
not
push
imul
movsl
bound
sbb
lods
jbe
xchg
xchg
xchg
stc
jp
push
imul
in
mov
inc
repz
push
pushl
imul
fstps
and
fdivs
fdivrs
cmp
inc
jle
loopne
notb
scas
pop
or
loopne
xor
sub
or
or
cmp
inc
xor
xor
fs
loope
sti
and
mov
shrl
adc
mov
mov
sub
cld
dec
xor
insl
lods
dec
int3
cmc
es
fisubrl
leave
mov
lds
jnp
cltd
jmp
jmp
dec
mov
dec
push
insb
repnz
push
xorb
rorl
pop
mov
je
mov
cmp
sbb
mov
neg
data16
loopne
mov
cmc
push
adc
and
loopne
sbb
xor
js
xchg
sbb
ljmp
push
jp
add
push
dec
ds
lods
mov
add
jb
rcll
decl
sub
movsb
andl
repnz
lods
push
int
int3
cltd
and
add
outsl
mov
sbb
add
cmp
call
sub
stos
fs
push
mov
adcl
out
pusha
insb
xlat
and
fstpt
shrl
pushf
lea
outsb
xchg
jge
stos
and
jb
push
mov
stc
mov
push
mov
sub
mov
push
dec
xchg
lods
ds
mov
add
xor
push
pusha
cltd
pushf
movsl
push
enter
inc
stc
lahf
test
push
bound
dec
clc
or
out
je
jg
adc
cmp
lods
shlb
imulb
rcrl
test
lcall
sub
jb,pn
mov
ja
insb
add
pop
inc
lret
test
or
push
adcl
jb
std
data16
rclb
push
cmp
jb
mov
inc
jge
dec
ret
sbb
cmp
push
inc
aas
ret
sbb
xor
fistps
xor
icebp
divl
xchg
inc
mov
inc
int
add
sbb
les
fprem1
sbb
or
fs
xor
lret
sbb
mov
sti
mov
jb
jmp
fsubl
push
adc
mov
divb
push
xor
rclb
mov
imul
mov
push
inc
inc
out
std
bound
inc
ucomiss
sub
xlat
loop
ljmp
movsb
cld
adc
pop
and
enter
sbb
iret
dec
sub
add
cmp
cmp
push
dec
lret
lea
add
ret
cmp
xor
shll
pop
pop
insb
lea
out
dec
loope
filds
mov
xor
js
cmpsl
cmp
fadds
adc
push
sub
cmp
cmp
xorb
inc
es
out
insl
idiv
jl
hlt
ja
inc
jecxz
mov
ja
xor
push
int
ljmp
cmpsb
jecxz
pop
pop
std
cmp
cs
mov
mov
mov
enter
jne
mov
add
inc
cmp
push
xchg
and
sub
dec
mov
and
inc
push
rcr
insl
mov
sbb
cmpsb
mov
icebp
sbb
adc
sub
int3
test
test
xchg
cltd
mov
and
test
in
inc
in
subl
dec
outsl
mov
add
mov
mov
or
testb
and
mov
push
jmp
cmp
ss
data16
fmull
fdivrl
cmp
jno
or
fs
sub
mov
das
pop
mov
mov
sbb
test
mov
nop
call
test
jge
xchg
push
dec
fdivrs
pop
dec
push
and
and
lods
icebp
mov
inc
fiadds
mov
xor
fisttps
sub
les
rsqrtps
xchg
fiaddl
dec
lock
pushf
movsb
xor
sbb
mov
pop
add
ja
mov
test
aaa
mov
das
repz
in
mov
xchg
adc
mov
adc
je
movsl
jg
xor
mov
inc
cld
and
daa
adc
repnz
clc
xor
lods
push
mov
xor
cltd
xchg
popa
lods
call
mov
xchg
jmp
lods
and
xlat
cmc
pop
xchg
cmp
fs
aad
xchg
cmp
ss
fldcw
imul
push
js
xchg
int
lea
fs
mov
mov
cmp
es
pop
movb
lcall
loopne
lea
sub
dec
sbb
orl
mov
cmp
mov
and
lods
test
ret
mov
pop
cmpl
rcll
aad
push
lock
pushf
xchg
addr16
lret
pop
loop
mov
fwait
mov
mov
fdivl
popa
cmp
enter
fucomp
cs
nop
nop
cmp
sub
in
add
mov
inc
push
mov
rcl
pop
movsb
inc
movb
and
das
ds
jp
jg
xchg
jae
das
dec
add
ljmp
aaa
outsb
mov
push
out
jecxz
rcl
push
ljmp
cmp
push
addr16
lea
les
cld
iret
ss
in
pusha
push
push
popf
jl
mov
push
jne
and
imul
roll
pop
iret
lds
pop
call
mov
cmp
orl
rcrl
loope
and
out
repnz
xor
lcall
fsubs
push
cmpsb
jecxz
pop
cwtl
cmc
mov
and
cs
jle
mov
fisubrl
sbb
push
xor
xchg
xor
cmp
sti
out
pushf
mov
and
mov
fiadds
mov
pop
ds
inc
mov
xchg
scas
in
push
js
repz
ror
fs
mov
or
lcall
into
iret
push
jle
adc
pop
rcll
movsb
sub
adc
cmp
xor
push
jb
lods
repz
mov
pop
in
xor
sub
cld
lods
push
mov
push
xchg
loopne
adc
cmp
movsb
mov
int
scas
shlb
std
daa
in
shrl
movsl
xchg
mov
rcrb
rcrl
scas
movsb
mov
adc
inc
lods
pop
cltd
jmp
xor
mov
mov
sar
add
mov
clc
lahf
mov
dec
stos
out
push
xorl
jge
xchg
loop
or
sbb
ss
mov
mov
and
and
lret
jne
dec
mov
dec
mov
cmp
mov
sub
movsb
addb
xchg
insl
sub
sbb
ja
fmuls
out
mov
dec
test
dec
negl
test
jmp
jge
mov
dec
sahf
out
test
int3
pop
push
mov
pop
push
cmp
jno
inc
in
push
adc
not
sub
or
loop
lock
adc
push
ljmp
mov
mov
stc
mov
stos
inc
orl
jno
call
bnd
loop
inc
and
in
out
cmpb
shll
leave
pop
jae
cmpsl
pop
adc
into
mov
add
test
sbb
into
in
adc
mov
pop
cmp
and
enter
jns
aaa
movsl
inc
mov
jnp
or
sub
push
js
dec
cmp
or
and
mov
dec
shlb
inc
in
push
out
cmp
jl
fildl
dec
jo
aam
mov
popa
test
sbb
jo
and
and
mov
push
cmpsb
fnstcw
add
jno
add
sub
xchg
mov
sbb
imul
mov
xchg
mov
in
fistpll
mov
js
imul
test
mov
negb
out
mov
nop
jmp
lret
ds
jg
stos
mov
nop
hlt
mov
inc
nop
mov
or
mov
std
ficoms
shr
in
stc
adc
mov
out
pop
fldenv
push
dec
lods
les
xor
cmp
adc
movsb
or
mov
movsb
inc
fs
add
mov
inc
rcrl
cmp
xor
mov
enter
jnp
out
inc
hlt
mov
in
or
sub
stos
cmp
rolb
push
jae
jae
fwait
push
xor
jge
or
out
mov
push
testb
pop
rcll
daa
es
sahf
push
movsl
mull
mov
sahf
popa
and
imul
and
cmpsb
scas
xchg
jg
jecxz
sahf
lds
push
pop
sbbb
push
or
repnz
dec
sub
jp
inc
icebp
push
jecxz
stos
std
mov
fisubrl
je
mov
ljmp
aaa
mov
push
sub
scas
and
lea
stc
test
int3
mov
dec
popw
dec
xor
inc
dec
cwtl
inc
out
ss
mov
xor
cmp
mov
add
dec
lcall
push
cmc
shll
lret
sub
ret
data16
shll
mov
cmc
pusha
or
xchg
push
mov
sbb
or
lea
mov
sti
sub
pop
adcb
pop
mov
lret
adc
call
icebp
cwtl
push
inc
jno
outsb
std
sbb
lahf
mov
inc
sub
lea
xor
cmp
imul
fisttps
add
scas
push
and
mov
ret
repnz
or
inc
mov
cmp
test
add
and
dec
sarb
pushf
jle
loop
clc
testl
jno
fistl
mov
inc
push
lahf
push
mov
shlb
lret
push
leave
fisttpll
cltd
stc
or
loopne
add
clc
add
xchg
mov
movsb
or
dec
cmpsb
sub
push
das
test
jg
xor
xor
add
sbb
fwait
imul
in
mov
pushl
sbb
inc
jecxz
adc
cltd
mov
daa
ja
mov
cld
ja
adc
or
out
mov
fcmovb
outsb
push
jp
and
jne
jne
out
push
scas
dec
out
sbb
xchg
int
inc
or
ja
movsl
inc
inc
and
mov
icebp
jne
mov
out
testb
fs
inc
xchg
cmp
xchg
mov
sbb
mov
mov
sub
pop
negl
cmp
mov
insb
mov
xchg
int3
dec
push
sahf
in
sti
pop
fwait
dec
int3
adc
cmpsb
and
and
jecxz
sub
or
popf
int3
add
fs
rcl
gs
xor
lahf
or
test
jg
sbb
inc
mov
sbb
cwtl
adc
jne
xor
push
bound
stc
gs
popa
push
aas
lock
mov
pop
cmp
paddq
iret
sbb
fdivrl
adcb
sbb
jl
push
in
aam
lods
dec
stos
test
inc
or
or
loopne
cs
mov
sbb
stos
lahf
lahf
bound
dec
sahf
jmp
mov
add
cmp
mov
xor
movsl
popa
outsb
cmp
mov
adc
mov
in
cmp
sar
shll
sub
push
cltd
lcall
inc
dec
mov
js
adc
add
fmuls
int
rcll
aad
das
add
aaa
sub
push
jno
or
clc
rcl
mov
jne
and
cli
addr16
les
add
xorps
ljmp
cmpsl
ljmp
cmp
add
and
push
cs
push
xchg
xchg
aam
dec
shll
pop
mov
lret
cmpsl
and
mov
mov
xor
or
ja
adc
sub
jp
xchg
test
mov
push
pushf
mov
fsts
and
inc
int3
pop
pop
mov
test
pop
imulb
jns
mulb
push
add
jae
sbb
xor
sbb
mov
inc
inc
out
insb
orb
test
add
adc
lcall
pop
ret
pushf
xor
test
dec
scas
sti
movsl
mov
and
sahf
mov
sub
jge
cmc
lcall
jmp
arpl
rcll
jae
jns
call
fistl
mov
and
dec
js
cmp
adc
xchg
aaa
push
inc
fldt
mov
js
cmp
enter
lods
js
popa
sarl
loopne
mov
xor
les
pop
ret
cmp
mov
cmp
es
push
jl
jg
cmp
cmp
out
or
push
mov
mov
iret
cmp
ret
inc
fwait
clc
and
inc
sbb
jbe
mov
dec
cmc
jae
inc
cmp
jae
cmpsb
fdivrl
cmp
aas
xor
es
xchg
sbb
inc
jns
jle
decl
push
lcall
cld
xor
adc
and
addr16
mov
test
imul
pop
repnz
inc
inc
dec
push
mov
inc
iret
lcall
ljmp
repnz
push
mov
jno
and
cltd
jmp
divl
pop
push
cmp
ja
outsl
mov
lods
or
dec
fs
jb
repz
push
imul
inc
pushf
mov
clc
sub
inc
ds
cmp
imull
xchg
xchg
cli
inc
pusha
outsb
in
rclb
jle
gs
in
inc
xor
push
xchg
mov
ret
jo
add
movsb
xchg
push
aam
fxch
lcall
mov
inc
rcrb
jb
adc
jge
push
sub
inc
adc
dec
or
jae
inc
in
fsubr
sub
push
xchg
and
pop
sub
jmp
in
vunpckhps
cwtl
push
pushf
or
sti
sub
mov
sbb
int
push
mov
out
xchg
lcall
and
xchg
clc
mov
sbb
in
test
gs
in
add
or
sbb
subb
mov
add
pop
aas
ret
arpl
cltd
fidivl
ja
or
pop
push
adc
pop
mov
lea
jb
mov
insl
push
fst
jb
scas
add
cmp
lods
fsub
mov
mov
jns
sbb
mov
leave
aad
int
cmp
pushf
inc
mov
daa
cmp
push
mov
xor
movsb
inc
jnp
jno
testl
xor
cmp
mov
dec
cmc
jne
cmp
xor
sub
dec
addr16
push
mov
std
push
iret
bnd
shr
cli
jo
fisttpl
push
in
pop
adc
xchg
int
pop
mov
sbb
das
push
fcmovne
inc
leave
push
pop
jne
in
mov
push
out
clc
iret
jne
enter
dec
daa
pop
jp
loop
mov
cmp
xchg
or
push
cltd
xchg
and
outsl
lret
xchg
ljmp
push
jmp
dec
jg
mov
pop
fistps
jmp
outsb
xchg
add
ret
lods
mov
push
cmc
jns
testb
pop
add
daa
fcmovnu
xchg
jle
jmp
or
push
fcomps
pop
push
mov
daa
adc
add
movsb
xlat
jbe
mov
push
jbe
mov
jne
adc
icebp
push
ds
dec
insl
and
cltd
xor
mov
cli
cli
cld
inc
cmp
mov
add
xor
xor
lods
xchg
mov
xchg
xchg
jns
arpl
mov
mov
repnz
loop
mov
sarb
scas
clc
and
leave
inc
stos
stos
pop
jle
por
mov
pop
xchg
cld
push
xchg
and
mov
arpl
add
sbb
mov
mov
inc
cs
inc
loopne
arpl
les
pop
push
mov
adc
add
and
mov
mov
mov
movsb
cmc
lea
inc
loop
incb
jg
repz
mov
mov
mov
and
jg
inc
mov
mov
cmp
addr16
clc
mov
popl
adc
xchg
popf
fs
cmp
sbbl
xchg
jb
push
dec
in
add
int3
mov
aas
xor
insl
mov
mov
dec
loope
aam
push
mov
xlat
fdivl
adc
insb
push
jmp
scas
xorb
imul
mov
and
test
lahf
in
sarl
lahf
je
inc
mov
pop
test
bound
pop
xchg
inc
adc
adc
mov
or
pop
jno
cmp
loop
dec
ljmp
fisttps
fninit
fistpll
or
mov
ret
mov
jnp
aaa
mulb
mov
fsubs
mov
inc
mov
pop
inc
lahf
aas
cmpsl
or
pop
fistps
and
or
call
sbb
jmp
mov
shlb
testb
out
dec
es
mov
ljmp
pop
or
hlt
cmpsb
pop
jae
outsb
mov
add
dec
lds
ss
call
mov
lcall
and
ds
mov
or
ljmp
add
or
xchg
mov
aaa
nop
mov
aaa
shll
std
xor
ja
pop
cltd
jne
pop
xchg
mov
mov
mov
pop
or
or
sub
gs
pop
icebp
shrb
inc
jle
movsl
rorb
test
mov
and
push
push
mov
adc
aaa
rcrb
inc
dec
jb
fimull
hlt
inc
cs
fwait
scas
mov
sbb
mov
and
fmull
lock
jp
and
pop
dec
imul
mov
or
push
outsl
ss
in
dec
pop
cmp
mov
sbb
clc
xchg
dec
loope
sti
fnstsw
js
or
sbb
std
in
and
das
mov
push
or
pop
pop
and
mov
pop
dec
cmc
pop
cmp
inc
and
cmp
or
push
mov
dec
xor
rclb
movsb
ds
sub
lods
adc
nop
test
scas
mov
les
aam
leave
popf
mov
scas
notl
inc
popf
daa
dec
popf
out
roll
test
ljmp
arpl
fiaddl
mov
das
adc
xor
imul
data16
cld
and
out
movsb
shl
inc
xchg
data16
lret
xchg
xchg
jns
jno
push
shl
mov
daa
inc
push
cld
outsl
adc
sahf
xchg
xchg
inc
pusha
cli
lea
subl
popf
in
out
in
into
mov
iret
out
jb
enter
inc
jp
test
ffree
aad
movsb
sbb
fdivrp
add
das
pushf
imul
out
inc
and
xchg
icebp
scas
cwtl
jmp
mov
jbe
or
and
sbb
push
cltd
js
hlt
ret
sarl
in
sbbb
sub
jno
shll
scas
push
pop
jns
pushf
into
mov
and
cltd
outsl
push
inc
jo
xchg
dec
xchg
iret
xchg
jnp
ljmp
jl
icebp
stos
push
mov
sbb
negl
shrb
mov
pop
aad
loop
icebp
lods
dec
mov
jb
adc
jb
in
xchg
pop
pop
cmpsl
and
push
adc
cmp
sub
popf
lahf
xchg
push
mov
push
leave
je
repz
repnz
shl
mov
in
test
int3
push
fimull
cmp
inc
sbb
idivb
int3
rorl
fstpt
subb
sti
adc
int3
mov
or
push
fs
arpl
iret
pop
push
loop
scas
dec
cli
loopne
or
les
dec
jo
jg
popf
pop
pop
loope
fwait
xchg
fstpl
out
cwtl
scas
jmp
dec
ret
andb
loop
orb
std
push
pop
sahf
rorl
cmp
out
dec
nop
pushl
xchg
inc
lret
inc
dec
andl
std
insb
dec
pushf
cltd
ljmp
sbb
fisttpll
inc
xor
idivb
pushf
and
pop
dec
cli
xor
scas
xchg
fbld
jae
dec
adc
cmpsl
testl
mov
jns
into
inc
cltd
cs
pop
mov
movsw
mov
lods
pop
xstore-rng
cmpsl
xchg
test
jl
add
adc
bound
or
pop
pushf
or
cmp
inc
cltd
std
inc
repnz
adc
mov
sub
mov
sub
xor
xchg
xor
sbb
inc
sbb
xor
fcompl
jg
push
mov
sub
pushf
adc
ds
mov
sub
imul
or
test
bound
lods
adc
out
mov
ror
xlat
push
mul
mov
aam
xchg
sarb
lods
int
lret
fdiv
push
sub
out
jp
call
js
sub
ret
or
add
xor
jb
out
lods
push
daa
test
inc
jns
sub
subb
imul
imul
mov
imul
xor
leave
int
pop
or
cmp
jmp
aad
cwtl
jle
sbb
sub
cmc
sti
add
sub
test
lds
sti
bnd
shlb
sub
xor
and
cmp
dec
xchg
pop
and
add
sarl
and
jmp
test
jg
fwait
pushf
push
dec
sub
subb
inc
lea
push
stc
fistpll
out
ret
rclb
cmpsb
insb
jne
cmc
push
mov
jb
jnp
filds
sub
jb
inc
int3
repnz
lds
std
push
fdivrl
rolb
adcb
rcl
sbb
pop
test
mov
ds
sbb
jecxz
int
mov
push
add
mov
out
iret
push
xor
movsb
xlat
inc
pop
outsb
mov
add
pop
push
ret
push
xchg
ss
and
loop
fbstp
pushf
or
dec
xor
cmp
dec
addr16
mov
mov
cmp
mov
insb
testl
hlt
loope
ficomps
pop
test
in
mov
mov
cmpb
shlb
pop
push
mov
imul
into
xchg
push
jbe
jp
aam
pop
adc
jp
adc
add
leave
aad
or
xlat
dec
data16
and
rclb
nop
in
cmp
adc
sbb
daa
and
cmc
in
call
jnp
jbe
mov
inc
sub
out
jg
fistpl
js
mov
add
mov
sbb
inc
imul
or
cmp
mov
imul
adc
inc
fs
push
gs
and
dec
aam
jo
cmp
out
addr16
inc
sub
xor
mov
xor
adc
out
subb
imul
cs
sbb
stos
push
dec
sub
add
dec
pop
punpckldq
iret
lods
aaa
mov
and
push
out
jbe
xlat
inc
ja
mov
xchg
push
mov
scas
scas
xchg
cltd
mov
js
pop
idiv
jnp
leave
jo
inc
lahf
pop
aaa
lods
or
sbb
aaa
mov
and
dec
test
cmp
pushf
lret
inc
fildll
dec
fildll
insl
jle
xor
jnp
cmc
cld
out
or
jns
movsb
nop
adc
sub
test
mov
dec
mov
cmc
sbb
dec
add
stos
ror
aaa
xchg
xlat
or
sub
sub
out
inc
shrb
out
test
xchg
xchg
or
bound
daa
jne
cwtl
imul
bound
adc
mov
jne
inc
xchg
test
popa
std
inc
and
xlat
push
mov
lods
insl
jns
bound
ret
dec
stos
lds
outsb
ja
xor
ds
adc
and
cs
ret
pusha
jae
pushf
seto
xchg
pop
aas
mov
out
jmp
nop
and
cmp
in
mov
jae
inc
push
lret
popf
add
and
xor
mov
test
lock
dec
sbb
xchg
imul
in
sbb
lret
or
and
scas
xor
cmpps
leave
and
stos
jne
inc
fcoml
mov
sub
mov
xor
dec
imul
xor
stc
pop
sub
xchg
jl
shl
fstpt
popf
mov
inc
mov
dec
xchg
data16
mov
enter
stc
fistps
mov
jo
sti
push
nop
mov
mov
into
ret
movsl
rcl
rorb
outsb
clc
stos
cmp
shlb
pop
dec
sbb
data16
xor
xchg
enter
pop
orl
mov
rep
jae
jo
addr16
movsl
arpl
sbb
repz
push
enter
mov
mov
xchg
push
fisubl
shl
jne
add
or
pop
lock
in
sub
stos
mov
pop
enter
mov
xor
inc
xorb
jmp
je
xchg
xor
fnstcw
ja
call
jle
mov
insl
fidivrl
inc
dec
mov
or
lock
sbb
mov
and
pop
mov
jecxz
adc
test
push
push
jae
cld
call
jo
lea
mov
mov
rcrl
orb
in
test
int3
add
out
mov
cltd
mov
enter
xchg
sbb
clc
push
xor
xor
popl
aas
mov
rclb
aas
push
into
cwtl
mov
dec
ljmp
adc
or
loope
dec
leave
out
push
add
les
shll
sub
jle
divb
scas
stc
xor
cmp
mov
cmp
xchg
xlat
ret
daa
fsts
fwait
inc
test
je
test
out
pop
and
cmovp
cmp
loop
sub
mov
xor
ret
or
xchg
dec
aaa
add
icebp
dec
movsb
mov
adc
repz
popa
iret
mov
mov
sub
mov
inc
out
fdiv
add
add
mov
pop
lret
jns
cmp
sub
jmp
and
xchg
or
lret
add
insl
mov
insl
sbb
leave
sbb
fdivl
pop
jne
loop
push
lods
xchg
fs
rolb
jbe
stc
add
push
es
add
es
iret
mov
loope
push
jge
sbb
cmp
cmp
cmp
bound
lret
sbb
cwtl
mov
xlat
or
lret
xchg
inc
cmp
mov
cmp
adc
mov
mov
and
push
jbe
dec
popa
pusha
pop
int
cmp
jmp
cmp
xlat
xchg
addr16
mov
in
cmp
xchg
fchs
cmpsb
mov
outsb
mov
icebp
mov
cmp
les
xchg
jmp
in
pusha
lea
and
fmulp
and
lsl
cli
pop
insl
loopne
add
imul
mul
test
imul
lock
add
out
fs
dec
add
pop
fimuls
cmc
dec
inc
add
sti
xor
gs
nop
sahf
mov
lcall
and
ss
lds
pop
add
movaps
and
xchg
mov
testl
push
call
mov
fwait
and
mov
xor
push
aas
pushf
add
sub
xchg
js
outsl
push
aam
jb
inc
imul
and
mov
and
test
mov
jbe
repnz
fldenv
xchg
int
jg
mov
je
frstor
adcl
aad
aam
jbe
fs
subb
adc
and
dec
xchg
clc
lret
adc
enter
xor
dec
movl
int
mov
shrl
mov
in
testl
mov
adc
or
pop
sbb
scas
inc
cwtl
lcall
sbbl
add
cmp
cld
dec
iret
add
jecxz
es
pop
jne
lds
jne
fwait
mov
inc
ret
popf
lret
inc
test
outsb
push
mov
ret
outsl
xchg
cltd
cmp
inc
cmp
jg
lret
shrb
mov
mov
jle
mov
and
mov
cmpsl
cwtl
and
dec
push
mov
loop
fcmovu
mov
pop
imul
shrl
shlb
jb
jae
jne
fldcw
push
xchg
sbbl
add
pushf
inc
mov
stos
fistps
dec
call
adc
stos
jb
shll
mov
jge
dec
pop
jl
out
mov
xchg
jb
aam
orb
stos
push
dec
in
jp
nop
dec
arpl
in
negb
xchg
xchg
cmpsl
outsb
lds
bound
push
sbb
push
xchg
pop
xchg
push
sub
stos
jge
add
es
jb
rclb
sub
js
flds
repnz
dec
inc
aas
inc
pop
roll
pop
ja
mov
mov
outsb
jmp
pop
and
decb
push
mov
adc
mov
jae
out
lods
test
cmp
mov
pop
xchg
push
and
xchg
data16
daa
sbb
nop
fs
jecxz
mov
or
jno
xchg
dec
into
pop
dec
mov
leave
jne
or
mov
into
mov
dec
imul
sbb
sti
mov
and
sub
push
pushf
scas
add
push
cmc
popf
daa
dec
icebp
dec
push
xchg
mov
sub
lds
aam
mov
push
test
push
insb
dec
rclb
mov
sub
and
lods
mov
jmp
pop
pop
scas
sbb
testl
test
bound
xor
out
xchg
mov
mov
aas
stos
sbb
dec
push
xchg
mov
in
xlat
lods
insl
and
jg
mov
push
add
sbb
sarl
loopne
lods
push
outsb
push
lds
mov
pop
sub
mov
push
push
dec
leave
push
loopne
cmc
ret
iret
hlt
je
jl
pop
cli
movsb
adc
imul
scas
push
mov
pop
xchg
mov
lds
dec
or
push
es
xor
pushf
loop
dec
sbb
frstor
add
pop
push
in
addr16
push
mov
aad
add
lds
cmc
test
inc
xchg
xor
mov
mov
xlat
push
mov
in
xchg
dec
test
test
cmpsl
jg
xchg
mov
mov
in
sti
and
push
out
and
cld
cld
cmp
push
ljmp
outsb
mov
mov
push
imul
ffree
or
ljmp
dec
mov
pop
xlat
sti
stos
and
mov
mov
mov
jg
rclb
in
adc
jecxz
cmp
rcrb
pop
xchg
inc
dec
andps
test
jge
push
je
xchg
aas
adc
std
cmpb
fisubrl
or
mov
aad
push
cmpsl
rolb
sub
in
push
mov
std
cmp
ljmp
or
movsb
mov
ljmp
loope
testb
testb
popf
cwtl
int3
jbe
push
fisubl
ds
in
xor
mov
push
mov
loopne
push
add
int3
aam
mov
mov
xlat
jae
aad
adc
xchg
sub
out
sar
jb
dec
sbbb
testb
dec
mov
push
jmp
cmp
es
push
std
cli
sub
mov
fwait
lds
mov
or
sbb
pop
popf
sbb
cmp
and
fs
loop
sahf
mov
movsb
or
add
adc
push
and
testl
xor
gs
outsl
insb
push
mov
ror
cmp
scas
mov
cmp
sub
cld
std
pop
lock
dec
shlb
cltd
or
inc
jmp
cmp
pop
mov
xchg
movsl
clc
dec
pop
dec
mov
mov
jg
or
cmp
cwtl
pop
sub
sti
jp
int3
ss
or
loopne
scas
adc
push
test
pop
pop
cmp
cltd
adc
enter
sbb
je
std
inc
test
mov
shl
fistps
xchg
sub
mov
idivb
jecxz
push
popf
outsb
xchg
cltd
clc
std
mov
sbb
or
std
add
pop
xchg
and
lret
ljmp
adc
and
jo
ret
inc
cli
lahf
push
push
rcl
add
inc
jecxz
push
inc
loop
mov
sub
xchg
jmp
add
push
xchg
daa
mov
mov
jbe
jnp
js
cmc
dec
xor
pushf
insb
adc
cmp
imul
enter
jno
xchg
imul
jno
iret
mov
mov
and
negw
fwait
mov
mov
fs
xor
es
stos
dec
jmp
mov
mov
jbe
shlb
inc
xchg
mov
mov
adcb
fiadds
cli
ret
xchg
jns
pop
push
shll
sbb
aam
imul
testl
scas
ss
and
movsl
jle
addr16
lret
push
lds
outsl
cmp
loopne
pop
pop
rcll
gs
fnstenv
cmp
or
ds
pusha
add
loopne
aam
icebp
movsb
jge
das
add
push
sti
mov
jecxz
mov
mulb
rcr
loopne
in
aam
leave
shl
cmp
xlat
lds
xchg
insl
or
movsb
add
decl
pop
aad
addl
sbb
or
push
jno
je
sub
push
mov
push
lods
mov
dec
cmp
and
sub
sbb
lcall
mov
lret
arpl
cmp
loope
inc
in
sub
jp
int3
aam
and
rcr
mov
out
fldl
aad
adc
rclb
mov
adc
jno
loope
xchg
fs
rcrl
mov
out
aam
movsbl
fucomi
test
and
add
adc
pop
cld
inc
dec
xor
xorl
inc
mov
stc
inc
ficoml
jnp
xor
push
out
ljmp
cwtl
xor
notb
jg
testl
adcb
inc
xor
xchg
std
aad
lcall
jg
mov
pop
out
cs
inc
xchg
jo
out
and
and
lea
adc
pop
setge
jge
int
push
or
dec
arpl
aas
xchg
adc
mov
lahf
sbb
sti
sahf
xor
mov
je
loope
imul
popf
inc
and
aam
jno
push
sub
in
adc
add
jp
cwtl
xor
cmp
jno
adc
sti
fcomip
jp
testb
popa
in
std
push
or
and
repnz
or
lret
add
or
outsl
mov
inc
data16
jl
add
fsts
mov
inc
dec
imul
xchg
stos
jno
fwait
push
cmpsl
loope
add
outsb
data16
mov
xchg
je
imull
jns
aam
scas
push
outsb
jo
cltd
pop
jle
push
add
or
sti
pop
std
movsb
xor
dec
es
cmp
xor
pop
mov
and
inc
jo
or
test
jne
pop
in
ret
fs
or
jl
sar
int3
dec
jae
sbb
test
mov
push
adc
outsl
push
int3
mov
sti
dec
mov
push
cmc
imul
jnp
mov
loop
pop
fidivl
mov
shlb
xchg
imul
dec
in
mov
mov
outsb
ss
xlat
lods
addr16
xchg
mov
pop
cmpsb
sbb
pushw
out
pop
dec
enter
push
push
scas
xchg
out
jo
jne
shlb
imul
push
mov
inc
outsb
jb
pop
push
xchg
test
mov
cmp
cmc
adc
mov
push
gs
dec
cmpb
js
mov
xor
pop
imul
out
cmc
fsts
fs
incl
test
clc
pop
fistl
into
repz
or
pop
mov
inc
push
shrl
jg
ror
jo
xor
bound
gs
clc
sub
cmp
dec
or
xor
jne
sbb
sbb
fdivrp
cmp
xchg
test
gs
pop
rcrb
fisttps
inc
dec
ljmp
sahf
out
cmp
xor
mov
mov
int3
hlt
shrl
cld
mov
add
ds
push
push
push
mov
inc
pop
out
and
sbb
fxch
and
hlt
sub
mov
push
pop
in
fcmovne
out
xchg
aam
push
inc
mov
push
jb
lret
adc
ret
ljmp
dec
inc
mov
xchg
daa
test
pop
jecxz
push
cmpl
movsl
jne
movsb
jno
sbb
fisubrl
push
jno
das
movsl
jecxz
add
inc
mov
test
jecxz
out
pop
ds
jp
fisubs
pop
stos
push
push
sahf
cwtl
mov
ret
lahf
add
or
iret
inc
mov
or
pop
jne
ljmp
shll
mull
adcb
push
loop
xorb
cmc
push
sub
push
pop
ljmp
push
loope
inc
xor
sub
push
sbb
test
les
stos
fabs
mov
mov
les
jecxz,pt
jl
test
jnp
add
or
mov
pop
pop
jge
and
xor
mov
mov
ss
mov
inc
ret
dec
inc
lahf
imul
xchg
inc
cmp
aam
adc
sbb
jne
jmp
jge
mov
nop
into
pop
sub
cld
int3
inc
fs
cmp
sarb
mov
xchg
aas
stos
xchg
mov
stos
loope
pusha
add
jle
movsb
js
mov
popf
push
shl
jb
push
xchg
dec
shrb
dec
imul
sub
add
icebp
fs
cmpsl
or
leave
sbb
repz
lods
pop
out
sbb
dec
in
jno
pop
or
cmpsl
incl
orl
xchg
bound
repnz
ja
movsl
pop
das
add
ss
inc
jne
test
xor
cld
out
dec
shll
pop
mov
jnp
and
call
push
leave
aam
mov
ret
jg
push
and
test
ss
push
xor
xor
xor
push
out
jg
dec
or
pop
mov
jmp
imul
push
test
lcall
movsl
in
add
cli
test
outsl
push
mov
pop
mov
cmc
jne
lcall
dec
inc
sbb
mov
cld
sub
sub
lret
filds
add
mov
pop
jae
jle
les
pop
test
sub
xchg
fcoms
and
xor
lods
and
arpl
leave
mov
and
stc
cli
test
enter
enter
ffree
pop
xchg
imul
pushl
cli
insb
mov
pop
xchg
pop
push
push
pop
outsb
scas
sar
dec
inc
pop
sub
xchg
mov
data16
inc
and
mov
push
repz
fwait
mov
lods
sbb
xchg
das
inc
adc
push
and
sub
dec
push
pop
mov
sbb
xor
mov
sahf
js
xchg
mov
jg
inc
std
enter
ja
lods
cmp
enter
jecxz
insb
or
les
cltd
loop
jno
popf
mov
outsl
les
jmp
pop
int
push
or
lahf
test
cltd
jns
mov
jae
out
pusha
decl
hlt
xchg
adc
or
inc
sub
je
mov
setg
xchg
push
pop
aas
pop
inc
movsb
mov
scas
push
and
push
icebp
mov
push
jne
mov
ss
xchg
es
inc
push
and
in
jo
sbb
ret
cmpb
cmp
cltd
inc
inc
leave
pop
fidivs
xor
popa
sbb
cmpsb
out
sub
test
subl
fisttpll
outsb
aad
inc
jnp
ljmp
popa
test
push
shll
adc
push
aas
in
pop
adc
push
int
stc
ret
mov
xor
sub
cmpsb
sarb
and
or
lods
push
mov
pop
pop
in
sbb
mov
xchg
fcompl
inc
mov
add
popw
out
sahf
js
sub
cmp
leave
mov
pop
xchg
iret
sub
mov
fcmovnb
mov
sub
ljmp
test
jecxz
mov
in
cmp
mov
dec
je
xchg
addr16
add
mov
sub
push
sub
mov
pop
mov
sarl
jo
add
in
push
inc
cmc
jle
and
scas
pop
pop
or
pushf
jnp
icebp
and
jnp
js
inc
mov
mov
je
adc
ret
dec
std
repz
mov
fiadds
dec
mov
mov
cmpsb
xor
cmc
test
sub
mov
lock
scas
jno
push
jmp
test
xor
pop
mov
mov
xchg
testb
ss
push
mov
mov
jle
add
mov
pop
and
inc
fdivrs
ret
aam
lcall
xchg
jbe
mov
inc
cmp
je
mov
out
imul
mov
andl
sbb
fbstp
xor
adc
cwtl
stos
dec
popf
lock
xor
inc
js
cs
daa
inc
dec
mov
xchg
int3
scas
pop
jmp
je
pop
mov
xor
hlt
insl
mov
mov
xchg
iret
cltd
lock
nop
repz
test
decb
sti
mov
sbb
mov
cwtl
pop
hlt
dec
xchg
jns
flds
dec
sarl
popa
mov
mov
adc
mov
mov
adc
adc
aaa
inc
scas
stc
push
outsb
adc
in
push
adc
scas
pop
aaa
or
sbb
pusha
xor
adc
xchg
out
lods
ret
or
call
cmp
sub
xor
mov
inc
push
cmc
mov
mov
pop
sub
adc
sbb
movsb
jnp
sub
sub
hlt
sbb
data16
sti
dec
xchg
xchg
mov
ss
xchg
jbe
fcmovnu
jo
push
shll
xchg
call
add
outsb
cmp
mov
shll
sbb
push
imul
jmp
in
push
xor
or
xchg
jno
sub
lods
push
mov
push
xlat
stc
add
subb
and
cltd
pop
popf
jns
mov
sbb
sbb
scas
xchg
dec
or
mov
insl
xor
adc
jmp
lret
shll
push
dec
in
or
cwtl
out
repz
add
sbbb
mov
xchg
int3
movnti
dec
jmp
pop
cwtl
stos
push
repnz
jge
or
scas
and
or
push
aas
mov
pop
pop
les
lcall
and
xchg
cmp
imul
jne
xor
sbb
movhps
adc
inc
repnz
aam
fsubl
sbb
iret
xchg
hlt
into
aam
adc
popa
pushf
out
sbb
es
xor
lea
movsl
xchg
out
das
hlt
xor
mov
mov
pusha
add
sti
scas
and
xor
loope
jb
xor
roll
sub
das
negb
mov
push
add
dec
insb
jg
test
aam
add
jle
outsl
and
sub
inc
adc
adc
xor
in
pop
xchg
cmpsb
ret
mov
data16
cmp
sub
jnp
dec
sbb
sarb
mov
stc
sub
test
jecxz
add
mov
rol
mov
xlat
push
or
inc
aaa
mov
std
cltd
sub
fdivp
jns
xchg
push
push
movsl
cmpsb
lods
mov
adc
xchg
je
jg
popf
jne
xor
push
outsb
movsl
mov
int
popa
add
push
xchg
aas
mov
pop
bound
push
push
or
bound
jecxz
push
leave
leave
dec
repnz
dec
cs
push
daa
and
add
adc
jo
xchg
fsubs
xchg
add
aam
add
mov
fimull
mulb
cwtl
push
xor
je
cmp
in
mov
movsl
repnz
fists
in
inc
jle
iret
std
popf
cmp
jp
push
aaa
inc
and
jne
aad
subl
movsl
out
push
lds
lods
and
mov
mov
lock
js
lock
movups
mov
ds
or
mov
mov
lds
lret
add
cs
jp
or
push
pusha
adc
pop
out
cmp
inc
adc
mov
push
xchg
inc
push
roll
dec
aad
pop
jmp
xchg
dec
xchg
dec
xor
test
dec
les
aad
cwtl
aaa
and
sahf
aam
xchg
test
cmp
mov
xor
popa
xchg
and
xor
mov
mov
inc
and
cmp
vmovapd
xchg
dec
jecxz
xlat
jne
push
xor
ret
cmp
int3
adcl
movl
adc
out
out
sub
inc
pop
mov
pop
dec
popl
xchg
stos
out
rolb
sub
jns
or
jecxz
or
pop
lret
jp
cmp
in
fs
out
or
dec
out
and
pop
or
xlat
pusha
push
test
notl
ja
movsb
nop
mov
pushf
in
out
mov
subb
cld
sub
xlat
pop
mov
pop
lds
lahf
sbb
icebp
rolb
shl
enter
fisttpl
jmp
mov
mov
out
mov
and
lret
mov
fistpl
cmp
mov
mov
pop
orl
adc
sarb
insb
push
and
or
out
lods
fisubrs
xor
mov
mov
bound
adc
pop
push
xorb
rol
addb
adc
fadds
shrb
push
cld
jg
aas
lods
mov
jmp
sbbl
pop
bnd
cmp
xsha1
cmpsb
lea
and
push
in
jbe
or
cltd
mov
or
push
mov
ja
jne
test
mov
xchg
or
fucomi
fistpl
mov
clc
movsl
mov
inc
addr16
mov
push
in
mov
lret
cli
push
hlt
add
imul
or
mov
mov
pop
scas
pop
lods
cmp
xchg
jb
into
dec
sub
int
movsb
xchg
rclb
lea
stos
dec
sub
jno
lret
movsb
rorl
shrl
jae
clc
or
sahf
push
repz
mov
in
jne
pop
add
nop
call
pop
mov
xchg
adc
jno
sbbl
dec
cltd
stos
jle
pop
ret
fdivr
jno
mov
cli
mov
aas
inc
dec
movsb
pop
stc
mov
fistpl
xor
test
adc
fldcw
and
fldenv
cmp
sub
xchg
mov
fsubrl
jb
and
jae
or
and
push
movsb
rcl
gs
inc
sar
jne
inc
fwait
ret
and
inc
cmp
out
fstl
loop
shll
jl
mov
mov
adc
rol
or
xchg
sahf
dec
xchg
sti
mov
mov
sysret
insl
rcr
jno
dec
push
and
ljmp
mov
and
jns
mov
mov
inc
shr
mov
add
dec
cwtl
frstor
std
mov
push
inc
xor
pop
sahf
ret
repz
cmp
pop
negl
mov
or
dec
xchg
jmp
jns
add
inc
pop
xor
jns
out
movsb
inc
push
cli
adc
shl
xor
test
das
es
pusha
mov
addr16
mov
gs
push
hlt
pushf
dec
scas
cmp
fwait
mov
mov
add
fwait
jmp
jl
sub
sbb
adc
aaa
call
jb
call
in
pop
sbb
iret
xor
adc
adc
sbbb
dec
insl
stos
or
scas
jnp
ret
data16
mov
sbb
sti
fcoml
repnz
call
fnstcw
dec
cs
add
jg
dec
aam
fcomip
addr16
clc
fs
cltd
test
cmc
orb
mov
mov
mov
mov
sahf
sbb
test
icebp
mov
repz
orl
mov
jp
out
sbb
daa
movups
int
scas
inc
cmpsl
jb
fnstcw
pop
jge
push
push
or
inc
ja
xor
inc
mov
cld
enter
stos
data16
repnz
aam
add
ja
xor
pop
cld
lods
jmp
popa
pusha
aas
mov
jmp
pop
mov
clc
xchg
cwtl
je
cmp
dec
mov
movsl
jg
push
rcrb
mov
sbb
xchg
mov
testb
inc
or
inc
xor
push
enter
out
jb
jb
adc
pusha
stc
mov
nop
cmpsb
sub
fistl
xor
cmp
insb
mov
lock
in
shll
imul
jge
pusha
out
add
xor
inc
cld
adc
cmp
sub
xor
mov
cmpsb
jle
outsl
mov
jb
and
popa
cmp
pop
mov
jb
fisubrl
data16
int
mov
out
cli
aad
loop
mov
mov
aas
out
lods
dec
loope
mov
cmc
aam
scas
ja
mov
or
jns
insl
mov
std
inc
testl
mov
and
fisubrs
xor
xchg
clc
loope
jp
es
bound
push
mov
out
jmp
dec
or
xchg
xchg
adcl
or
xchg
fnsave
add
inc
add
mov
cmp
or
iret
inc
outsl
ret
or
xchg
mov
adc
sub
fcmovne
popf
rcll
jnp
lock
sbb
lods
inc
sbb
stos
outsb
and
bnd
ja
hlt
iret
fsubrs
cmp
pop
or
xchg
add
and
das
jbe
in
inc
or
sti
mov
int3
int3
jg
mov
dec
pushf
jg
popf
pop
jbe
negl
mov
sbb
in
cmp
dec
cmp
jno
clc
test
pop
add
jnp
cltd
dec
lock
cmp
sub
pop
xchg
repz
outsb
cwtl
icebp
cmp
add
jp
sbb
or
mov
pop
shr
pop
push
mov
int3
loop
ds
dec
fwait
adc
push
adc
xchg
mov
push
xchg
adc
mov
ret
test
push
loop
call
add
dec
and
sahf
popf
jecxz
shlb
fmuls
lcall
call
mov
lcall
and
enter
lds
movsb
rcrb
push
icebp
sub
rclb
sbb
sarl
mov
cld
imul
or
jae
jne
mov
rorl
add
in
test
mov
jb
pop
aas
test
jg
jbe
xchg
mov
loop
in
or
pusha
push
loop
inc
dec
xchg
mov
es
lahf
mov
hlt
jno
icebp
and
outsb
movl
cltd
mov
leave
aad
incb
ljmp
imul
cmp
and
mov
mov
cmp
repz
stos
insb
mov
jbe
cmp
sbb
ss
dec
je
addr16
loope
jo
cmp
mov
enter
mov
fiaddl
mov
jb
cmp
xchg
je
push
mov
cld
shll
mov
mov
mov
ds
and
data16
adc
gs
fists
mov
rcl
mov
cwtl
lcall
lcall
nop
sbb
mov
shrl
fcomps
aas
cli
addl
out
xchg
mov
lods
outsb
pop
insb
rolb
xchg
or
test
xchg
sete
jp
mov
bound
inc
jne
lods
cmc
inc
xchg
pop
inc
adc
push
mov
lds
jecxz
inc
nop
xchg
nop
pushf
hlt
fimull
mov
sub
fidivs
jnp
ror
xor
mov
shlb
jl
pop
and
fisubs
scas
das
pop
jge
in
cmp
das
ficomps
mov
push
dec
aam
mulps
xchg
adc
xlat
sbb
mov
scas
cmpsl
popa
aaa
cmp
pop
and
mov
popa
pop
sub
mov
dec
sbb
call
sub
mov
lea
add
sub
lods
into
arpl
mov
xor
add
add
cltd
out
testl
arpl
add
mov
mov
push
pop
popa
out
pop
adc
cmc
sbbl
mov
inc
inc
xchg
push
sbb
pop
out
sub
add
insb
add
inc
int
push
push
cmpsl
sahf
jecxz
loop
inc
dec
aam
nop
shlb
or
mov
xchg
pop
jns
addb
or
dec
mov
xor
sub
js
lahf
mov
out
mov
xor
sbb
test
mov
and
mov
xchg
pusha
and
mov
hlt
shlb
cli
popf
mov
cmp
dec
xor
cmpl
fildl
rcrb
in
fisubl
outsl
pop
xor
mov
stos
int3
push
into
pop
pop
add
dec
aad
jp
jmp
aas
nop
divl
adc
jb
adc
pop
sbb
fcmovne
jl
jbe
lcall
sbb
jns
inc
imul
inc
and
testl
sbb
outsb
jp
inc
shll
inc
mov
sahf
dec
stos
std
jg
sub
xchg
xor
push
xchg
adc
into
subb
int3
popa
lods
jnp
sub
cli
daa
icebp
adc
dec
sbb
inc
sub
outsl
cli
jp
mov
sahf
mov
and
or
mov
sbb
xchg
xor
xchg
aas
or
push
sbb
add
mov
fmuls
push
inc
and
stos
jle
sub
cmp
in
push
cmp
jmp
scas
das
mov
fmull
rolb
insb
push
not
pop
pushf
icebp
mov
push
imul
xor
mulb
add
add
xor
or
insb
dec
into
shl
xor
movsb
xor
mov
lods
incb
into
nop
ret
or
fisttps
xor
cwtl
push
inc
xchg
pop
cltd
jle
jnp
leave
jns
xchg
inc
fdivrp
and
inc
in
jg
imul
cmp
add
fcmovnbe
imul
jb
mov
and
inc
mov
mov
andl
rcr
fs
xchg
mov
sbb
mov
pop
movsl
icebp
xlat
lds
mov
xchg
loope
pop
scas
arpl
popa
mov
in
mov
sbb
and
rclb
rorl
dec
cwtl
ja
mov
xor
out
xchg
out
nop
mov
xchg
fs
mov
sub
in
push
pop
jge
jmp
test
fsts
cmp
push
addr16
outsl
insb
aas
insl
mov
push
mov
andl
fbstp
shlb
pop
mov
in
xchg
cmp
ds
out
pop
and
daa
pop
lds
inc
or
sub
push
cmp
or
std
push
mov
jnp
pop
xor
mov
mov
dec
divb
push
sti
movsb
inc
jae
imul
lock
loope
addl
enter
pop
xor
xchg
lcall
hlt
je
fs
call
das
pop
jo
inc
xor
negl
and
sbb
inc
out
mov
jg
imul
xor
mov
push
lods
int3
mov
xlat
cmp
aam
js
fwait
push
mov
enter
mov
push
adc
notb
jp
inc
imul
lret
push
ljmp
adcb
int
sub
lret
add
mov
mov
mov
adc
popa
pushl
das
aas
repz
sbb
pusha
adc
adcb
icebp
loop
dec
mov
pop
repnz
popa
jbe
cmp
mov
pop
int
in
push
push
jne
dec
dec
stos
xchg
ret
fstpl
cmp
cmp
mov
mov
pusha
sbb
dec
cmp
in
mov
cli
inc
jae
adc
mov
mov
cs
fidivrs
push
push
xchg
pop
fsubl
sbb
sub
add
mov
xchg
test
or
jne
inc
and
insl
sub
stos
adc
mov
lds
mov
mov
jae
pop
fwait
xor
xor
sbb
jmp
ljmp
adc
rorl
popa
mov
sahf
mov
rclb
mov
pop
je
mov
lds
cmp
aas
lahf
sbb
jecxz
sarb
lahf
push
sub
cmpsb
movsb
xchg
push
jmp
jbe
add
cmp
ret
cmpsl
lret
inc
idivb
inc
inc
fwait
xchg
mov
mov
fstl
ffree
pop
addl
jg
dec
jbe
inc
lock
cltd
aas
pop
lahf
jp
scas
inc
enter
jl
pop
inc
fists
jecxz
filds
inc
jge
cli
mov
inc
xor
es
mov
fwait
scas
mov
test
mov
cltd
not
sbb
jmp
adc
sbb
cmp
loope
aaa
gs
xchg
jb
sti
aaa
ljmp
pop
mov
dec
inc
out
cld
outsl
dec
add
les
lret
sbb
adc
dec
mov
add
lds
mov
in
or
push
xorl
mov
xor
mul
add
xchg
mov
jo
push
sbb
and
mov
hlt
add
jge
sahf
cwtl
inc
pop
sbb
outsb
stos
pusha
jge
ss
pop
xchg
inc
adc
fsubr
mov
adc
inc
call
mov
sub
dec
xlat
adc
push
jae
add
in
mov
mov
cmp
movsl
lods
pop
push
addl
scas
sub
sbb
mov
das
inc
fwait
xchg
ljmp
mov
cmp
stos
fimuls
pop
push
mov
fs
stos
jp
push
aas
mov
xchg
insb
jg
push
test
in
out
xlat
pushw
movsb
mov
sbb
add
adc
pop
dec
into
sub
mov
xchg
aam
mov
add
cmc
mov
out
mov
movsl
hlt
xlat
cmp
dec
rcll
pop
jecxz
dec
fmull
xchg
dec
mov
push
push
int3
dec
out
xchg
addr16
jmp
jl
mulb
lods
sti
jg
out
xor
adc
cmp
insb
dec
inc
outsl
outsb
xor
pop
frstor
stos
push
repz
mov
mov
sbb
or
mov
loope
mov
rclb
sbb
push
ljmp
icebp
mov
enter
outsb
iret
cmp
addr16
fdivrl
mov
jne
or
movsb
jp
sbb
cs
xchg
mov
adc
jmp
imul
mov
or
or
mov
repz
adc
mov
aaa
xchg
sarl
repnz
testb
cld
rolb
push
dec
adc
and
xchg
daa
xchg
push
sbb
div
inc
mov
cld
jo
sub
cld
loope
xchg
push
lock
xor
cs
mov
mov
inc
cltd
subl
and
mov
sbb
daa
leave
jl
jmp
sbb
test
mov
lret
jmp
xchg
pop
and
add
mov
mov
movl
adc
daa
lret
in
and
insb
sbbb
stos
mov
cmp
stos
stc
push
test
xor
icebp
or
or
jecxz
and
adc
dec
and
pop
adc
pusha
and
rorl
inc
jmp
ror
pusha
je
mov
je
inc
cltd
xchg
mov
add
mov
add
ret
add
imul
cmp
add
mov
sahf
sub
xor
movsb
sar
sbb
mov
xorl
jle
adc
enter
inc
sbb
loopne
cmp
ret
inc
mov
mov
and
xor
lcall
add
jg
dec
fsubrs
test
pop
mov
fnstcw
cmp
out
mov
testb
jmp
push
sub
push
mov
push
and
sti
pop
faddl
pop
scas
jge
leave
lcall
ret
push
cmc
aam
cmc
test
xor
and
push
jle
dec
lret
or
and
fs
push
mov
sbb
ret
mov
shrb
mov
xor
test
add
mov
int3
xchg
mov
call
rolb
scas
lahf
and
mov
jge
dec
lock
mov
les
scas
mov
mov
divb
push
adc
stc
dec
in
std
flds
test
mov
stos
shr
mov
shr
jnp
packsswb
addr16
adc
pusha
inc
das
xchg
push
mov
pop
inc
jl
jl
mov
xchg
ror
ss
hlt
les
lock
shlb
add
sahf
xor
aad
cld
sarl
jae
ret
pop
cmpl
je
repz
es
lods
pop
in
xor
pop
out
and
popa
adc
leave
daa
mov
in
lods
push
inc
fiaddl
pop
mov
stc
mov
ret
pop
fcoms
dec
add
in
loop
sbb
inc
jbe
icebp
cwtl
and
ljmp
xchg
mov
jge
xor
out
and
faddl
push
sahf
popf
xorl
pop
aaa
jge
pop
and
and
daa
and
xchg
pop
inc
clc
sahf
std
int3
mov
cli
or
push
push
dec
mov
sbb
push
jmp
add
mov
or
push
push
mov
fisubrl
adc
mov
and
lret
incb
cmc
lahf
rorl
mov
das
xor
adc
sub
dec
stos
in
jo
jp
nop
mov
flds
sub
jnp
lahf
jne
int
ds
cmp
lods
jae
mov
loopne
pusha
outsl
sub
sub
notb
pop
daa
cs
mov
xor
mov
adc
mov
sub
and
inc
std
push
movsl
and
movsb
icebp
cwtl
xor
jg
cli
dec
int
out
loope
int
mov
addl
mov
sub
dec
rolb
in
pushf
aad
cmp
and
dec
push
repz
inc
out
add
out
add
or
addr16
push
jns
hlt
pop
js
subl
in
pop
push
xchg
sbb
sbb
imul
push
xchg
test
clc
out
es
xchg
push
mov
xor
rcrl
incl
inc
test
in
ljmp
jno
mov
mov
js
enter
cli
or
dec
cld
cmpsl
into
and
pop
lret
push
pop
pop
add
inc
pop
js
in
call
cltd
sbb
shll
int3
mov
pop
divb
icebp
inc
mov
pusha
and
push
add
cwtl
push
cmp
pop
adc
xchg
mov
addb
adc
fisubrs
daa
cmp
rdtsc
mov
mov
xchg
icebp
imul
adc
xchg
je
rolb
es
inc
lea
stos
clc
mov
jg
lcall
mov
or
sti
adc
arpl
je
fsubrs
sbb
jp
xchg
cld
add
cmp
ja
imul
adc
push
rclb
stos
enter
dec
dec
pop
stos
pop
js
mov
adc
add
lret
jnp
mov
dec
jmp
dec
lret
sub
or
pop
sub
mov
sbb
repnz
repnz
mov
adc
imul
out
mov
adc
xchg
clc
mov
lcall
push
cmpsl
ss
jno
push
sbb
mov
je
inc
lods
hlt
rorb
cmp
les
cltd
je,pt
ret
lods
push
lahf
pop
cmp
fldcw
mov
push
xor
mov
cmpsb
insb
fbstp
call
jno
mov
mov
repz
xor
test
idiv
inc
stc
rorb
insb
or
jns
jmp
cmpsb
fs
fwait
cmp
xchg
cmp
aam
pop
push
scas
mov
out
pop
pop
jnp
icebp
xchg
adc
out
popf
nop
sub
sarb
outsl
push
shlb
cltd
sub
xchg
inc
loopne
xchg
jno
sub
jbe
int3
lock
pop
mov
mov
aad
mov
pop
push
or
jno
scas
adc
movsb
push
pop
push
test
lea
cmp
sahf
lahf
jo
mov
ret
dec
cmp
cli
push
scas
add
out
adc
stc
mov
mov
xchg
cmc
push
dec
and
xor
lds
cmp
jns
xor
std
mov
std
sbb
pop
inc
js
mov
inc
in
and
cwtl
setno
or
xchg
add
mov
lock
stos
adc
loop
idiv
add
xchg
add
inc
xchg
addr16
jno
xchg
sub
fisttpl
xor
pop
mov
in
scas
mov
lcall
mov
and
pop
or
pushf
jp
mov
out
xchg
movsl
popf
cwtl
lahf
mov
shrb
pop
daa
dec
pusha
comiss
jbe
adc
xchg
push
sub
push
cld
sbb
out
push
ja
mov
sbb
ss
mov
out
mov
scas
xor
nop
mov
xlat
test
mov
shlb
and
add
and
dec
data16
fdivr
jge
cmc
inc
sarl
cmp
push
and
mov
xchg
mov
pushf
pop
imul
adc
loope
add
ror
lods
mov
xor
pop
jmp
or
and
shll
adc
shlb
inc
ds
daa
push
xchg
xchg
mov
icebp
lret
mov
jge
filds
push
loopne
int
je
int3
add
dec
jae
fwait
movl
inc
imul
jbe
cmpsb
fs
sub
sbb
jbe
add
inc
mov
subps
lods
mov
xchg
ss
outsb
inc
mov
cli
mov
movsl
mov
adc
rclb
and
adc
je
cli
xor
sub
mov
jne
xlat
call
pop
mov
adc
cmpsl
inc
ss
lret
inc
adc
push
icebp
subl
push
mov
add
mov
lock
cmp
iret
decb
ja
lods
sbbb
sub
push
mov
jge
or
mov
in
outsl
xchg
inc
adc
popf
test
jg
xor
mov
xorl
test
push
mov
sti
scas
pop
popf
mov
fisubrl
mov
leave
cmp
jbe
and
leave
sbb
and
jge
and
sub
lret
jne
add
cld
jl
stos
pop
pop
fcomps
push
jo
or
push
fstps
into
push
adc
mov
add
movq
mov
testl
repz
xchg
imul
mov
lock
iret
add
xchg
psubusb
out
mov
enter
pushf
icebp
jns
and
popf
mov
out
xor
adc
movsl
add
dec
jmp
stos
mov
jnp
jo
mov
push
andb
dec
cmp
stc
push
jo
daa
or
xor
lret
jno
push
sti
fdiv
shrb
movsb
jecxz
gs
adc
call
sarb
xor
cmpsl
cmp
repnz
andb
add
aas
imul
inc
mov
bound
arpl
in
cmp
test
stos
nop
mov
lret
sbb
scas
xchg
jne
pop
test
add
loop
mov
lods
testl
and
movsl
inc
jecxz
inc
loop
mov
pop
dec
das
mov
aam
or
push
xchg
cmp
lcall
test
addr16
addr16
sti
or
mov
test
jb
or
dec
dec
out
cmpsl
xor
mov
inc
push
push
inc
outsb
roll
je
pop
xchg
mov
test
ljmp
push
push
push
add
ret
jecxz
icebp
mov
jo
fcmovb
lods
pop
ljmp
xchg
dec
pop
xchg
sbb
add
cmp
fstpt
aaa
fsubl
fisttpll
cli
inc
add
push
stc
adc
in
xor
push
sub
cmp
pop
scas
sub
in
pop
jns
in
mov
ftst
sbb
int
sub
jae
cmpb
sub
xor
fstpl
xor
imul
xchg
pop
push
fstl
loope
and
fcomps
or
adc
push
pop
icebp
out
out
jge
sub
cli
addr16
xchg
xchg
adc
pop
out
inc
dec
lahf
aas
test
pop
lods
das
cmp
fildll
push
mov
pop
notb
push
xor
cmpsl
mov
mov
add
jle
xor
dec
rcr
sbb
cmpsl
scas
push
rcll
movsl
pusha
jle
xlat
and
adc
ja
jle
xchg
in
int3
dec
loope
push
rcll
pop
push
jno
mov
jb
inc
mov
call
fwait
jno
sbb
mov
lcall
icebp
cmpb
mov
fadds
ror
inc
scas
mov
stos
out
cmp
adc
adc
data16
and
fcmove
ljmp
repnz
push
add
test
es
and
pop
push
inc
ljmp
mov
mov
sbb
inc
scas
lods
add
imul
cmpsl
cmp
lods
fdivrl
mov
pop
xor
xor
rolb
mov
icebp
popl
cmp
inc
dec
pop
test
aas
inc
mov
xchg
inc
das
movsb
or
mov
mov
jae
dec
loope
adc
ljmp
push
test
scas
jle
pop
or
push
or
inc
mov
lret
loop
push
dec
test
int3
push
rcrb
aaa
in
sbb
cs
inc
stc
xchg
ret
or
mov
mov
mov
loop
adc
ds
insl
mov
xor
lock
adc
mov
icebp
psubusb
push
jbe
mov
stc
rcrb
cmp
scas
jecxz
pop
outsl
cmp
lds
sti
pop
subb
fbld
sbb
nop
push
aam
cli
push
jl
add
imul
cmp
cmpsb
sub
fxch
inc
add
pop
imul
push
or
sar
dec
movsb
aad
cli
and
adc
pop
stos
inc
int
test
movsl
xchg
jae
aas
in
and
int
aas
and
dec
out
xorl
ret
dec
pop
out
inc
mov
lods
push
movsl
sbb
push
xchg
es
aas
xchg
aad
in
sar
xor
hlt
sub
aas
mov
fisttpll
or
dec
aad
adc
jp
dec
pop
lea
addb
mov
xor
stos
push
mov
sbb
sub
inc
or
xlat
or
fidivl
fildl
sbb
push
push
inc
push
sbb
xor
mov
push
insb
xchg
icebp
loop
stos
cmpl
leave
pushf
inc
les
clc
enter
inc
mov
popf
mov
scas
insb
mov
mov
or
pop
mov
push
popa
test
icebp
cmp
xlat
sbb
sbb
push
lds
xchg
inc
enter
fisubrs
sbb
mov
sti
jmp
into
jno
push
push
mov
movsb
mov
sbb
ret
xor
inc
mov
add
psrld
gs
mov
inc
adc
xchg
sbb
shrb
enter
push
mov
ljmp
popa
ret
repz
dec
xchg
test
fnstsw
movsb
xchg
leave
inc
leave
cmp
es
mov
popf
add
sti
adc
and
fdivl
sti
inc
mov
sub
insl
sub
pop
mov
push
mov
ror
inc
iret
mov
ret
fcoms
ret
or
push
lahf
and
es
sahf
and
mov
sbb
add
or
in
adc
or
jns
fmuls
push
ds
pop
and
cmp
les
aas
fcoml
or
stos
sbb
sub
mov
js
and
daa
scas
js
arpl
xchg
sub
fcomps
add
jb
in
adc
repnz
jae
adc
rclb
in
sahf
adc
shlb
adc
sub
pop
and
add
adc
sahf
cmpsl
sahf
adc
shrl
or
call
int3
popa
fcomps
xchg
adc
mov
out
lret
jmp
and
push
add
jge
in
push
inc
pushf
cmp
cmpsb
cmp
iret
mov
cmp
outsl
mov
iret
push
jb
push
movsl
adc
ficompl
and
add
or
or
push
sub
cmp
sub
jecxz
adc
xchg
mov
js,pt
out
dec
nop
pop
push
jbe
sub
mov
rcrl
sbb
lret
dec
sbb
jmp
xor
mov
pushf
mov
loopne
in
sub
cmp
insb
test
orl
test
mov
sbb
cwtl
test
mov
or
and
mov
cld
jmp
and
cld
mov
push
je
xchg
pop
pop
cmp
daa
mov
pop
push
ret
and
push
mov
xor
xor
adcb
insl
outsl
add
mov
cld
or
dec
xchg
out
lock
xchg
lret
lods
fimull
jne
mov
movsl
stc
cmp
jp
notb
sub
cmp
add
rorb
cmpl
or
into
jae
and
pushf
cld
ds
mov
xchg
add
mov
mov
adc
cld
popf
push
inc
pushf
push
iret
push
mov
mov
stc
inc
and
jp
stc
ja
xchg
jb
or
adc
lock
push
sbb
mov
inc
aam
push
lcall
test
call
aaa
pop
mov
pushw
sub
scas
push
mov
call
cs
lock
add
psubq
and
les
loopne
mov
insb
adc
and
and
pop
stos
pop
aaa
aas
or
adc
je
ljmp
lahf
sbb
cld
adc
fwait
or
pushf
mov
adc
xchg
adc
mov
inc
imul
sbb
xor
xor
ss
xchg
xchg
scas
mov
out
call
push
movsl
and
jb
nop
mov
xchg
fsubrp
sbb
xchg
mov
lret
das
iret
lock
sub
les
cmp
mov
shll
sub
jne
mov
test
mov
sub
pop
pop
jle
mov
stos
jecxz
xchg
lock
loope
mov
popa
dec
jp
xchg
pop
int
mov
stos
xchg
cmp
push
and
test
push
iret
dec
pop
jnp
out
bound
jg
das
mov
jmp
pop
sbb
push
push
push
dec
and
sbb
add
cmp
mov
jb
dec
movsb
mov
ljmp
cltd
add
lret
fldenv
les
sbb
push
lret
add
aaa
repz
adc
pop
out
daa
imul
je
pop
jmp
jb
xchg
and
sub
ret
fldcw
cmp
mov
lahf
gs
mov
sahf
insl
mov
int
mov
jbe
jecxz
in
loopne
sbb
mov
jo
mov
test
out
pop
xchg
or
dec
stos
xchg
ficoml
adc
add
cmovb
test
pop
mov
and
adc
and
or
popa
dec
ja
rol
xlat
cmp
add
xor
adc
andl
inc
mov
je
in
out
xor
inc
out
shr
jb
test
aam
or
push
cmp
cmpsb
xchg
push
je
mov
jecxz
insl
clc
arpl
pop
xchg
push
dec
pop
sub
loop
mov
in
jp
std
mov
mov
jmp
mov
or
xchg
enter
iret
xchg
mov
jnp
mov
push
pop
and
daa
add
ja
popf
pop
mov
fwait
jp
repz
je
xchg
pushf
pop
scas
lock
dec
js
popf
iret
xchg
pop
outsl
mov
pop
loop
clc
xchg
fnstsw
scas
cmp
cltd
and
stc
dec
fcoms
add
jmp
shlb
out
lock
sbb
mov
lds
pushf
test
cli
mov
inc
je
sub
testl
pop
mov
pop
insl
lea
jg
jle
push
test
xor
imul
mov
ret
dec
in
test
pop
js
loop
add
test
dec
seta
in
das
divb
jecxz
ret
rorb
js
or
jnp
push
fisttpll
out
fstpt
insl
dec
test
loopne
jp
sti
gs
push
lea
shrb
xchg
popa
int
push
into
pop
loopne
daa
dec
sub
popf
cmc
mov
pop
jge
push
mov
mov
das
push
cmp
cld
mov
cmp
fwait
jnp
fucom
fildl
sbb
out
loopne
clc
cmovge
and
shrb
sbbb
fs
adc
sub
pop
cmp
xor
jg
and
test
test
pop
ja
movsl
ds
inc
push
push
lahf
xlat
adcb
xor
dec
rorb
sbb
adc
pop
adc
stos
xchg
push
xchg
out
out
jno
sub
jno
aam
inc
pusha
leave
add
je
aad
push
arpl
in
rorl
or
xor
pop
in
jmp
jbe
loop
cmp
jge
movsl
scas
pop
or
and
adc
pop
test
in
fdivrs
add
pop
xor
xor
das
mov
push
push
add
test
jnp
dec
pop
xor
cmp
hlt
ret
push
or
lods
mov
out
cmp
xor
cmp
div
dec
repnz
sub
je
stc
and
push
xlat
and
icebp
push
sbbl
xor
and
xor
ret
aam
and
out
nop
cmp
sbb
addr16
pop
sbb
cltd
rolb
dec
aaa
lock
cwtl
jg
push
aas
mov
ss
call
sub
xor
jnp
aam
xchg
mov
or
mov
mov
push
push
cmpl
sarl
rcll
test
std
xchg
inc
icebp
mov
outsb
fists
insb
adc
xor
mov
js
popl
jno
xor
sub
mov
pop
push
pop
cmp
scas
jmp
xchg
and
jb
fcoml
pushf
or
into
lcall
xchg
sub
das
scas
mov
dec
xlat
ss
inc
dec
mov
mov
jbe
test
and
frstor
sti
enter
push
fmull
xchg
fs
dec
mov
cmp
or
or
rclb
adc
adcl
movsb
mov
adc
xchg
jmp
mov
or
sub
bound
arpl
pop
xchg
int3
mov
shlb
mov
loope
push
in
pop
stos
clc
clc
dec
jecxz
imul
xchg
push
out
pop
push
mov
jo
lods
jne
sbb
mov
fbld
bnd
or
fidivrs
cmpl
pop
loop
jmp
mov
repz
mov
dec
mov
bound
add
or
and
jns
dec
imul
sbb
fs
in
push
mov
mov
je
dec
push
fdiv
adc
clc
sub
and
inc
lock
aad
pop
ror
cmp
enter
push
sub
or
out
xor
sub
adc
push
pop
add
inc
outsb
movsl
xor
dec
test
add
mov
sub
popf
inc
jnp
in
int
mov
jno
ret
mov
dec
mov
or
out
dec
jmp
mov
fcoms
lods
sub
test
and
stc
insl
lock
mov
and
ret
mov
pop
adc
dec
jns
sub
xlat
inc
mov
sub
int
movsb
add
clc
adc
loopne
adc
mov
push
jbe
outsl
inc
bound
jb
inc
push
lret
pop
jle
xchg
push
dec
pop
xlat
int
inc
lock
in
push
je
inc
mov
aaa
adc
hlt
push
cltd
dec
dec
mov
adc
stos
xor
fsubrl
xchg
pop
dec
xlat
movsb
dec
lea
and
hlt
xchg
cmp
loope
jno
and
call
and
repz
jecxz
jl
add
rcr
hlt
pop
pop
jg
or
dec
pusha
jne
pop
mov
dec
sarl
or
dec
mov
push
jg
in
fimull
loop
out
sub
push
add
dec
adc
jne
cmpsb
daa
dec
push
sbb
out
aad
jns
pop
pop
jbe
int3
mov
pop
pop
fnsave
mov
xor
loop
xchg
mov
jno
jp
scas
loope
dec
cmp
adc
fs
nop
cmpsl
ljmp
shll
sub
xor
dec
pop
jmp
adc
xchg
jne
into
lds
sub
das
cmpsl
dec
adc
dec
fs
out
xor
mov
daa
inc
xor
push
das
adc
sbb
pop
jg
sbb
and
xchg
xchg
lods
add
mulb
jb
jne
data16
in
or
xchg
cmp
mov
int3
sbb
aam
mov
xor
mov
pop
cs
fstps
sub
stc
std
aad
xlat
lock
scas
xor
xor
fcomps
dec
icebp
dec
mov
out
mov
sbb
xor
add
jle
imul
sub
pop
jae
aam
sbb
in
filds
ss
xchg
and
ds
notl
and
or
mov
jnp
inc
mov
sub
test
add
cmp
jb
xchg
xchg
push
cmp
push
dec
dec
pusha
pop
js
ja
adc
or
jne
mov
mov
rorb
push
scas
imul
rcll
pusha
test
push
mov
adc
pushf
popf
mov
push
nop
ds
loopne
jns
pop
mov
cmp
fisubl
push
jnp
and
lea
push
dec
pop
push
movsl
push
out
pop
test
test
pop
test
ss
ror
sub
in
push
sar
aad
aaa
in
ret
stc
push
or
inc
push
pop
inc
pop
inc
mov
sub
sbb
push
and
mov
lcall
fisubrs
pop
pop
xchg
clc
cmp
data16
mov
xchg
mov
or
mov
fs
shll
fs
and
imul
clc
ja
jecxz
loop
pop
clc
pop
pop
lods
je
sbb
jbe
adc
mov
cmp
fsubl
adc
push
lret
dec
lods
out
dec
push
xor
lods
lcall
add
rclb
dec
in
mov
lahf
jno
call
mov
test
adc
xor
and
push
and
push
addl
jecxz
clc
ds
sub
xor
mov
std
jno
cwtl
fstl
push
das
aas
bound
cs
pop
insb
inc
pop
jnp
sbb
push
pushf
out
or
xlat
pop
cmc
jp
inc
movsb
adc
push
mov
mov
or
mov
sbb
xor
shld
scas
push
std
mov
repz
mov
aam
xor
popa
mov
add
stc
cmc
in
popf
shlb
mov
cmp
cmpsb
push
mov
scas
fs
test
or
xor
jp
push
push
lods
sbb
mov
push
cmc
or
push
ret
stc
nop
sub
xchg
lock
jne
adc
mov
shl
hlt
xchg
jle
mov
mov
call
rorl
cmp
cmp
jbe
inc
data16
and
push
and
sub
out
jae
inc
andl
and
add
add
cmp
xor
inc
cwtl
cmp
xor
cwtl
sbb
mov
int
sub
add
ss
jno
fnstenv
lret
in
rcl
cmpl
fldl
in
xchg
dec
mov
movsb
mov
fistl
leave
lea
divl
out
inc
andl
mov
xor
iret
stos
mov
in
or
inc
mov
and
lods
fsub
ret
mov
sub
ds
pop
push
jmp
mov
mov
inc
push
fcoms
pusha
inc
mov
and
aaa
in
shl
cmp
aas
pop
fs
dec
push
mov
pop
enter
addr16
lret
adc
mov
aas
xchg
insb
push
mov
mov
sbb
dec
jmp
loope
inc
inc
or
and
icebp
sbb
adc
xlat
push
xor
cmp
add
mov
mov
cld
push
fstl
cmp
pop
pushf
xlat
or
iret
loope
sbb
jb
add
or
stc
push
in
rcrl
aam
testl
xchg
clc
insl
imul
loope
xchg
sub
jmp
dec
dec
fcomps
fstpt
mov
push
mov
dec
out
fwait
les
rol
enter
movb
fcomi
fnsave
idivb
mov
sbb
gs
mov
jmp
ret
add
lcall
mov
mov
scas
lahf
mov
out
ljmp
jecxz
mov
lret
jb
pusha
bound
jno
pop
mov
cmpsb
mov
movl
mov
cmp
ror
inc
xchg
add
push
dec
inc
lods
adc
and
testb
and
stos
cmp
cltd
neg
push
dec
jp
pop
jg
lcall
out
mov
and
inc
fs
pop
cmpsl
insl
jp
cltd
fmuls
movsb
pop
sbb
outsb
imul
out
xchg
gs
push
test
sbb
arpl
dec
mov
arpl
mov
cmp
es
mov
xchg
fsubrs
dec
jmp
and
inc
push
dec
dec
jo
add
incl
stos
ja
repnz
cli
jp
out
xchg
cmp
jae
push
or
lahf
loop
icebp
fwait
lods
xor
mov
fldt
fs
lods
jg
lea
xor
out
or
cmp
in
movsl
pop
cmp
push
dec
sbb
xchg
std
inc
cmpsb
jl
mov
pop
in
dec
lock
loop
aaa
xor
push
int
fcomp
fsubl
ds
and
test
mov
add
jns
sbb
call
divl
push
iret
inc
push
das
shll
ror
xchg
mov
sar
dec
mov
push
mov
pop
mov
bound
pop
popf
xor
push
mov
or
push
mov
sbb
sbb
loope
enter
sub
outsb
clc
jg
add
pop
jns
mov
out
mov
lcall
daa
or
pop
mov
fdivr
insb
cltd
cmp
aad
pop
or
mov
leave
fdivrl
lahf
setle
out
pop
push
shl
scas
or
lcall
pusha
cmpsl
mov
or
scas
mov
and
mov
lds
cmp
imul
jecxz
test
test
pop
je
sub
xor
push
and
mov
lcall
nop
fld
sbb
imul
xchg
cltd
jp
xchg
push
mov
xchg
lret
ficoms
sahf
push
incl
fcmovnbe
bound
mov
inc
sbb
addr16
adc
out
cmp
lret
xchg
lods
cmpl
mov
mov
shll
mov
lods
jo
rcrb
sub
cld
cmp
mov
fildl
loope
shl
add
ja
push
push
xor
or
lock
sbb
daa
push
fisttpll
inc
xor
andl
lcall
mov
mov
out
xchg
xchg
in
bound
xchg
xor
push
and
into
lret
je
movsb
adc
je
and
aad
int
shll
imul
arpl
pop
or
dec
sub
mov
xchg
jbe
adc
js
xchg
sub
xchg
sub
cld
inc
mov
lret
and
push
loope
mov
mov
ret
out
jmp
adc
cli
jmp
xor
sub
sbb
pop
imul
xchg
in
addr16
push
sti
mov
addl
mov
lods
mov
dec
push
adc
in
push
js
shl
fxch
pop
pop
push
test
rdseed
push
inc
je
ss
insb
sub
mov
jmp
sbb
lods
in
sbb
loop
mov
add
fs
dec
loope
fildll
aam
imul
inc
xlat
prefetcht1
out
inc
stos
loope
enter
daa
adc
sbb
add
pop
std
shll
repnz
flds
sbb
xchg
inc
popa
aaa
lret
in
add
xor
adc
and
cmp
cmpsl
push
jmp
mov
stos
icebp
mov
ja
mov
test
aad
adc
or
xchg
loop
cmp
sarl
bound
adc
imul
and
ficoms
in
out
push
leave
int
mov
iret
pop
popa
xor
mov
lds
add
je
add
mov
sbb
jecxz
outsb
into
dec
push
sbb
stos
sub
mov
mov
add
es
ficomps
lahf
je
mov
cmp
xor
popf
shr
xor
xor
dec
fcompl
rcrb
in
fldl2t
sub
data16
inc
jnp
mov
xlat
sarb
push
lods
popa
cs
push
out
adc
pusha
xchg
clc
std
and
xchg
sbb
push
xchg
cld
fsubl
popa
add
add
pop
push
out
je
add
mov
inc
test
js
cmp
or
or
lea
stc
test
xchg
mov
jecxz
data16
and
mov
jl
pop
js
xor
pop
loop
sub
nop
adc
inc
insl
js
add
orb
xchg
dec
movsl
mov
mov
fistpll
lahf
mov
jle
push
scas
and
dec
pop
ljmp
add
enter
dec
jae
shll
adc
jno
and
jnp
sub
outsl
out
ja
rcrb
repnz
in
or
cli
adc
pop
divl
sbb
inc
rclb
pop
or
sbb
mov
clc
jne
or
pop
inc
cs
fidivrl
sub
aam
jb
sbb
xchg
xchg
pop
dec
jecxz
imul
mov
jle
aas
mov
mov
add
neg
xor
pop
aaa
int
jo
jne
cli
adc
jle
jg
dec
mov
daa
aaa
into
fiaddl
pushf
sti
lea
sbb
pop
xchg
jge
cmp
clc
pop
into
pop
sbb
fstps
mov
push
test
push
sbb
pusha
mov
or
mov
sub
ficompl
pop
sbb
inc
icebp
mov
and
dec
inc
jb
lods
mov
in
imul
subb
xor
mov
frstor
jo
mov
xor
nop
cmp
rcll
mov
push
jb
sub
xchg
inc
mov
jb
inc
pop
pop
aam
sbb
adc
inc
sbb
mov
add
mov
add
push
pop
or
fadd
sub
divl
cmp
shlb
sahf
or
daa
fldcw
sub
enter
xlat
sbb
pop
mov
mov
inc
out
fs
jge
leave
mov
mov
push
ficompl
mov
and
xlat
pop
xor
lods
and
push
jecxz
cmpsb
loope
mov
add
jl
fwait
xor
and
fidivrl
fimuls
dec
repz
movsl
mov
cmp
sahf
out
inc
jg
inc
call
sti
dec
jmp
inc
leave
or
aaa
lods
loope
adc
lods
adc
xor
in
xchg
das
pop
push
rcrb
and
pop
cmpb
stos
int
add
xchg
adc
mov
xchg
mov
test
jmp
mov
sub
dec
stos
imul
push
lea
dec
cltd
mov
es
test
stos
cmp
sahf
aad
or
mov
add
xchg
out
test
sub
loope
jne
lds
imul
sub
jnp
std
imulb
ja
js
push
cwtl
mov
mov
push
push
hlt
add
mov
pop
sub
movsl
idiv
push
fnstenv
sub
push
xchg
fnstsw
sbb
ljmp
mov
cmpl
jmp
adc
lret
or
push
mov
mov
js
push
js
mov
pop
jmp
clc
or
divl
dec
mov
push
push
insl
xchg
add
pop
outsb
shll
and
sti
sub
aaa
xor
adc
aas
adc
test
add
inc
jmp
xlat
dec
mov
out
cmp
xchg
cmp
or
inc
fidivrs
cmp
mov
inc
push
ss
sub
mov
mov
push
sbb
cmpsl
scas
pop
pop
jle
cmp
fnsetpm(287
repz
xchg
or
cmp
jl
pop
imul
cli
movsb
push
jl
jle
divb
inc
subb
jmp
xor
pop
cs
fnstenv
sti
and
xor
fiadds
shll
lods
lcall
pop
js
pop
jae
fcoml
aaa
es
jnp
xor
push
add
mov
mov
jp
out
in
push
aad
jo
and
mov
xor
pop
mov
mov
push
stc
shlb
imul
cwtl
mov
push
pop
add
pop
hlt
lds
les
sbbb
imul
pop
pop
xlat
fwait
jnp
mov
mov
leave
ficomps
add
inc
mov
addb
mov
mov
fcompl
or
cmp
sti
scas
sbb
bswap
outsb
mov
mov
xor
call
out
and
xor
js
xchg
jmp
mov
iret
cmpsl
mov
ret
pop
dec
or
cmpsl
add
jae
out
dec
add
rol
cmp
push
push
jl
jl
sbb
xor
jo
xor
mov
mov
xor
aaa
pushf
imul
xchg
fs
push
add
stos
inc
mov
add
push
stos
sub
pop
add
movsb
jle
pop
mov
cmp
outsb
fs
push
aaa
push
lea
fcmovbe
aas
sbb
inc
or
cli
xlat
out
and
loope
cmp
xchg
and
int
les
jnp
sti
das
mov
pop
sbb
test
fwait
or
adc
iret
lret
lds
cwtl
xchg
add
aad
daa
out
test
lret
mov
clc
jl
xchg
and
and
popf
stc
or
scas
pop
lret
sub
andl
roll
xlat
rcrb
and
cld
dec
aaa
divb
push
pop
cli
jl
sbb
xchg
ret
sbb
insl
inc
jl
test
test
loop
hlt
xor
and
fwait
sti
lahf
dec
std
lret
test
push
out
adc
aaa
lods
mov
lea
or
bound
cmp
mov
js
leave
adc
mov
and
ret
xlat
lods
out
in
mov
rcrb
inc
jge
pop
inc
and
lock
ljmp
xchg
dec
scas
jp
add
movsl
lods
sub
push
xor
or
xchg
sub
xchg
jmp
test
mov
pop
or
faddl
xor
mov
sahf
gs
imul
popf
pop
data16
adc
mov
inc
hlt
add
sub
and
mov
sub
add
lahf
dec
js
clc
rcrb
push
xchg
outsl
sahf
enter
jg
cmpsb
pop
xor
iret
jnp
xor
dec
or
mov
push
ret
push
dec
mov
fs
negl
jg
cmp
add
scas
mov
dec
dec
mov
sub
dec
push
inc
inc
imul
add
xor
sbb
pop
je
sbb
jle
push
fdivrs
jl
mov
adc
sub
dec
pop
arpl
rep
xorl
mov
dec
pop
leave
inc
or
fcomps
ja
mov
bound
push
push
pop
ja
mov
scas
xor
into
shrl
or
sahf
es
loop
int
test
jne
jbe
push
inc
std
cmp
fisubrs
sbb
add
mov
pop
dec
imul
xlat
mov
mov
or
dec
xor
ja
iret
jge
or
in
mov
adc
and
mov
xor
push
mov
inc
cli
adc
dec
hlt
cmp
das
mov
mov
out
or
inc
fcmove
push
daa
mov
sti
adc
sbb
jge
add
fldl
sbb
insl
arpl
jp
scas
stc
ss
jno
sbb
jne
arpl
das
pop
ficomps
ljmp
fsubrl
fnstenv
jnp
mov
cmpsb
popl
lods
jno
lds
mov
xlat
ss
adc
and
out
loope,pn
sbb
movsb
call
es
jno
in
cmp
mov
push
mov
sbb
dec
inc
pushf
js
cmpsl
jmp
pop
sbb
fstpl
or
int
out
sbb
sbb
test
mov
jne
mov
das
fdivp
inc
pop
or
icebp
ja
inc
mov
xor
dec
pop
loope
jne
or
pop
jecxz
jb
xchg
inc
clc
xorb
mov
mov
jb
sub
cmp
jl
cld
adc
mov
lahf
adc
adc
aad
mov
movb
popf
pop
negl
cmpsl
lods
jne
jae
lods
stc
ret
adc
xchg
gs
add
adc
xor
mov
sub
cmova
pop
test
jle
push
icebp
stos
xchg
jnp
mov
movsb
addb
mov
push
out
xor
out
dec
jo
inc
xor
aad
inc
mulb
mov
mov
aam
pop
roll
and
sbb
inc
jnp
jmp
mov
aad
inc
jl
push
and
ret
fadds
loop
imul
sti
test
xchg
xor
inc
shll
test
shlb
mov
cmpsl
scas
stos
int3
js
in
and
nop
mov
pop
jp
fbstp
leave
sarb
pusha
sbb
sti
fwait
enter
mov
xchg
pop
hlt
jbe
iret
push
leave
jo
mov
arpl
mov
mov
sbb
int3
dec
cmpsb
mov
aaa
mov
inc
mov
test
test
or
mov
add
xlat
jo
lods
mov
sub
pop
xchg
pop
xchg
pop
sahf
mov
push
jbe
test
dec
leave
ljmp
mov
adc
cmp
lods
pop
adc
cltd
icebp
inc
inc
or
scas
sbb
repnz
pop
jo
mov
jmp
iret
call
icebp
xchg
es
push
mov
out
push
ja
jecxz
pop
stc
push
inc
mov
dec
mov
inc
ret
sbb
push
cwtl
inc
cwtl
sbb
movsl
pop
arpl
xchg
ret
loop
or
nop
or
add
jmp
dec
adc
or
std
push
aas
out
xlat
ss
lret
xorl
jp
jne
xrelease
xor
cmpb
pop
jp
push
adc
sbb
je
out
and
xchg
mov
sbb
or
cmp
les
fisttpll
xchg
push
sbbb
aaa
aam
jmp
sbb
fsts
jne
inc
enter
inc
lea
push
pop
jo
inc
popf
inc
leave
jb
lret
inc
int3
xorl
out
repnz
inc
xchg
pop
or
pop
push
inc
repz
mov
xor
roll
xorl
inc
dec
inc
movsl
cltd
fwait
xchg
xor
push
sub
xor
aam
lods
adc
sbb
and
pmuludq
fadds
jmp
push
mov
adc
ljmp
xor
xor
sbb
fisubs
push
or
adc
or
rclb
in
push
fwait
mov
add
cmpsb
sub
and
arpl
leave
fisubs
popf
arpl
jbe
mov
aad
dec
sarl
lret
and
cld
in
jp
pop
jmp
shlb
xchg
pop
ss
push
clc
std
dec
xchg
daa
mov
push
xchg
dec
inc
jecxz
in
andb
out
ljmp
cmp
cmp
xor
sbb
mov
imul
push
mov
xchg
lds
xchg
adc
jae
movsb
mov
mov
je
pop
addr16
nop
cltd
xor
addr16
adc
add
xchg
scas
stc
mov
shl
cltd
lret
inc
lea
push
sbbb
enter
push
xchg
pop
in
sub
ret
xchg
xorb
jb
roll
mov
xchg
lock
stos
sbb
psubw
fwait
dec
addr16
ror
mov
cmpb
es
mov
jl
loopne
mov
mov
cs
jg
mov
cltd
cmp
sub
test
in
pusha
fadds
das
mov
jo
jl
lcall
xchg
ja
stos
aad
xor
dec
icebp
into
mov
in
in
and
pop
lret
mov
adc
pushf
int3
pop
fmuls
or
clts
xor
sti
outsl
outsl
mov
or
xchg
test
mov
inc
iret
cmp
sub
lds
pushf
dec
mov
mov
mov
loope
into
addr16
jb
jmp
sub
outsl
fsubp
cli
xor
push
testl
mov
or
fbld
repnz
push
mov
push
mov
push
faddl
sbb
jmp
and
adc
pop
cs
jge
inc
xchg
pop
pop
data16
cmp
jge
lea
aaa
popl
mov
add
xchg
pop
cs
out
jg
jbe
sbb
outsb
jl
jne
pop
fimull
aad
xchg
sub
xchg
arpl
xchg
and
sub
loope
mov
lcall
pop
pop
mov
mov
or
shl
or
fucom
mov
pop
mov
test
inc
clc
out
mov
push
or
cmp
sbb
dec
test
pushf
mov
push
jge
pop
testl
sahf
sbb
adc
fiaddl
mov
jno
dec
jmp
sbb
in
jmp
cs
jecxz
xchg
adc
insl
pop
out
xchg
out
dec
ja
cwtl
fisttpll
or
and
pop
xchg
inc
mov
jns
inc
imul
xor
mov
push
insl
jo
pop
rorl
sarl
inc
add
mov
sub
nop
sub
mov
out
cld
sahf
push
in
fwait
stc
jo
sbb
fsubr
cmpsb
loope
lcall
push
adcb
dec
aad
mov
or
pop
and
fidivs
push
dec
lea
fdivl
sbb
ss
ss
or
imull
movsl
daa
imul
jbe
mov
lock
ss
xor
and
adc
mov
aad
pop
test
dec
push
cmp
into
and
nop
mov
mov
xchg
shl
lahf
inc
mov
imul
adc
enter
adcl
pop
scas
imul
fprem1
push
cwtl
clc
mov
dec
pop
xor
lods
add
in
pushf
and
pop
pop
fiadds
mov
scas
sub
xor
pop
jo
add
mov
mov
mull
shl
xchg
xor
dec
je
mov
and
test
mov
sub
shrl
dec
jle
jp
cltd
insw
xor
pop
mov
jae
jne
mov
mov
push
or
icebp
into
dec
fxtract
aad
inc
stc
mov
mov
mov
push
lea
das
xor
lods
xor
notb
lods
inc
add
shll
mov
lods
jle
lock
push
or
cmp
lret
push
addr16
sti
cmc
pop
xchg
imulb
inc
mov
push
bound
sub
arpl
aam
addr16
pop
gs
inc
outsl
sti
mov
sar
cmp
dec
inc
add
push
call
xchg
shll
sti
mov
clc
xchg
inc
push
mov
bnd
jmp
mov
jb
cmpsb
aas
bound
pushf
mov
call
mov
gs
fsubrp
and
iret
dec
test
rolb
loop
cmpsb
cmp
or
cmp
lcall
add
and
add
mov
mov
in
push
cmc
stos
push
repnz
pusha
mov
jae
mov
daa
loopne
idivb
bound
and
pushf
mov
mov
and
cwtl
lret
jl
sahf
ret
data16
aam
in
scas
call
sub
stos
jae
movsb
imul
loop
pop
and
scas
push
hlt
ret
and
or
shlb
sbb
aaa
scas
fists
dec
or
push
outsb
or
js
in
mov
jbe
addr16
cmp
mov
stos
data16
icebp
ret
lea
out
lcall
fsin
inc
push
lret
xor
lock
cmpsb
inc
mov
test
mov
nop
or
dec
lahf
cmp
sti
xlat
dec
mov
jns
xor
clc
int3
pop
pop
popa
shr
sub
andb
sarl
dec
add
into
add
shrb
shrb
jl
mov
xchg
fnsave
dec
push
sbb
lds
cmp
xchg
sub
mov
or
pushf
push
data16
popf
movsb
test
les
or
xor
mov
in
sub
popa
push
adc
inc
cmpsb
pop
daa
jg
sti
add
dec
lods
xchg
cwtl
lahf
dec
adc
gs
mov
jg
int3
xchg
pop
loop
jmp
test
xchg
mov
not
inc
inc
cmp
andl
lock
clc
test
lock
adc
inc
push
push
imul
icebp
fldt
push
outsl
sarb
jmp
and
addr16
lods
std
dec
es
test
rcrl
cmp
adc
push
dec
pop
adc
sbb
jg
sub
push
dec
pop
mov
add
iret
push
add
adc
dec
mov
mov
dec
and
adc
rorl
adc
push
and
add
sub
xlat
sti
fildl
fnstsw
popa
cmpsl
cmp
sbb
mov
adc
mov
and
in
cwtl
insb
adc
nop
mov
dec
sub
subb
adc
lret
int3
iret
test
cmp
popa
adc
dec
scas
imul
dec
mov
daa
adc
in
outsb
jle
ret
jo
dec
jno
mov
mov
push
cwtl
ss
cwtl
ret
fs
fists
sbb
lret
sbb
sub
adc
fsubl
es
imul
lods
xchg
inc
mov
xchg
ja
inc
pop
bound
lods
mov
subb
rolb
popa
sbb
es
je
fnstcw
iret
sub
cs
cmp
hlt
mov
pop
sbb
cmp
mov
mov
xor
fldenv
xor
and
repnz
popf
cmp
or
int3
push
jge
xchg
jp
jno
popa
add
data16
mov
push
stc
leave
pushf
enter
scas
mov
fistpl
mov
push
arpl
repz
dec
imul
addb
fucomip
xchg
ds
leave
jmp
push
mov
fbstp
mov
cwtl
jp
clc
add
loopne
jo
xchg
cmp
roll
in
jmp
andl
adc
adc
stos
mov
sub
pushf
popa
push
ja
rep
loopne
repnz
fdiv
pushl
sarl
vpunpckhwd
add
mov
and
xchg
sbb
sbb
sub
repz
mov
lea
add
push
call
pop
xchg
mov
or
push
or
clc
rorb
lret
mov
scas
xchg
mov
shlb
mov
test
dec
int
scas
les
movsl
addb
inc
cmp
dec
mov
push
push
lret
cmp
push
mov
ss
sub
pop
sbb
jecxz
sahf
adc
mov
and
dec
sbb
lea
xor
jne
ljmp
cmp
fimuls
cwtl
aas
shll
mov
test
dec
and
cwtl
out
mov
dec
lret
jg
jno
sarl
add
or
xchg
out
rclb
push
and
xlat
lret
add
rsm
push
dec
mov
out
mov
bnd
mov
cmp
add
popa
insl
test
enter
popf
cld
xlat
dec
or
add
push
add
cmp
ss
xchg
inc
mov
gs
jne
pop
dec
or
add
xchg
std
or
xor
ret
lret
xor
in
xchg
inc
fists
jne
aad
stos
in
fdivp
or
loop
mov
ret
mov
insb
adc
jbe
mov
inc
pop
push
dec
pop
int3
in
je
scas
inc
xchg
sbb
ret
and
push
jns
gs
mov
mov
adc
xchg
jno
sub
test
mov
mov
inc
fidivrs
frstor
pop
andl
mov
lods
addr16
pop
movsl
inc
cs
mov
mov
mov
cmp
icebp
jecxz
pop
inc
pop
inc
lods
xor
mov
repz
inc
les
inc
test
pushw
fwait
nop
es
insb
sahf
push
pop
imul
rcrl
loope
cli
xchg
addr16
stos
iret
push
dec
jmp
ja
aas
out
xor
add
loop
mov
jecxz
jl
mov
shrb
addr16
cld
pop
cwtl
cmpsl
jno
jb
iret
movsb
push
add
jmp
lcall
xchg
cmpsb
pop
inc
pop
inc
push
jo
adc
ret
xor
xor
pop
mov
negb
add
and
cltd
lcall
dec
test
adc
and
inc
lret
mov
cmc
and
clc
adc
popf
or
jle
call
push
sti
in
movb
dec
or
enter
addr16
add
push
jmp
lea
gs
cld
mov
lds
test
fwait
xor
jo
jne
dec
daa
pop
mov
movsb
test
lahf
push
fildl
lock
push
sbb
sbb
pushf
shrl
pop
fcomi
push
pushf
adc
pop
frstor
cs
fdivrp
ficoml
inc
and
xchg
add
and
ds
notb
mov
push
xchg
setnp
dec
pop
cmp
add
pop
mov
das
jo
or
fstl
cmpsb
lcall
pop
stc
inc
sbb
lcall
sbb
loop
pop
pop
ljmp
xor
jo
pop
pop
xor
push
mov
inc
inc
pop
sti
ds
insl
lods
sub
jmp
loopne
lret
in
orb
xchg
enter
sbb
mov
sub
push
or
popf
in
jne
repz
es
idivl
sti
inc
lods
cwtl
mov
out
data16
cmp
scas
xchg
adc
jnp
cmc
push
add
add
aaa
and
lahf
test
enter
fisubl
mov
out
in
push
fdivrp
and
jne
in
xchg
or
and
adc
cltd
popa
loopne
loope
xlat
mov
push
sbb
rolb
xor
jmp
data16
daa
bound
ror
mov
xchg
inc
scas
adc
mov
shlb
ret
mov
fwait
arpl
ret
cs
fs
sub
mov
js
pop
lea
fnstcw
jae
fistpll
aaa
js
movl
jp
and
add
and
lcall
lret
or
fdivs
in
lods
enter
and
aad
mov
adc
loopne
inc
add
xchg
les
mov
mov
dec
out
lea
cwtl
inc
sbb
pop
cmp
in
or
sub
lods
xchg
dec
test
ret
adc
dec
xchg
inc
in
xchg
sbb
or
lret
icebp
push
pop
ds
dec
cld
xor
int3
pop
lret
mov
bound
mov
lea
or
aas
mov
cmp
mov
sbb
dec
cmpsl
xchg
pop
mov
fs
and
iret
test
fstl
rcrb
rep
int
push
xor
inc
mov
jecxz
inc
xchg
out
out
pop
ja
dec
jmp
insb
adcl
andb
mov
repnz
scas
cmp
les
lods
jae
test
sub
mov
mull
jecxz
sub
out
adc
jae
pusha
inc
jno
adc
lods
mov
pop
mov
ficomps
jmp
movsb
movsb
mov
cmp
cld
stos
xor
inc
pop
lds
or
cmp
adc
mov
pop
lret
das
or
mov
push
sub
mov
test
jp
cmp
pushf
add
outsb
es
clc
arpl
mov
es
sub
insl
pop
push
mov
icebp
or
fwait
out
loope
xor
xchg
sub
xor
leave
mov
and
adc
xchg
xchg
lret
push
jns
out
pop
xchg
mov
ret
scas
push
mov
cmp
xchg
test
lods
jg
inc
stc
and
rcrb
jmp
dec
imul
adc
test
aaa
stc
push
xchg
fidivrl
aas
xchg
mov
mov
adc
lcall
push
dec
inc
into
pop
idiv
lods
leave
sub
fisubrs
or
stos
and
je
jecxz
dec
jmp
scas
js,pt
out
mov
jb
cmp
adc
stc
add
in
push
add
bound
xchg
jp
lods
inc
adc
ja
sub
pop
es
les
mov
xchg
or
inc
mov
pop
cmp
repz
pop
mov
xor
inc
push
sbb
dec
insl
sbb
lahf
mov
dec
cmp
xchg
adc
aaa
movsl
loop
mov
cmpl
dec
pop
jno
enter
adc
scas
rorb
xchg
xor
js
ror
pusha
in
divb
pop
dec
cs
xcrypt-cfb
cmpsl
and
xchg
ljmp
push
add
outsb
int
push
xchg
fucom
pusha
jmp
lods
daa
imul
loope
and
push
pop
bound
or
aas
sti
out
sub
mov
cmpsl
enter
mov
aaa
jmp
imul
or
lahf
fistpll
xor
lret
jecxz
cmc
mov
or
ljmp
cwtl
popa
and
mulb
data16
test
outsb
sub
roll
lret
add
push
xorl
test
inc
imul
and
decl
outsl
xchg
test
pop
pusha
xchg
call
insl
and
add
and
sahf
cmp
sbb
adc
inc
mov
jno
hlt
ljmp
mov
imul
dec
mov
div
cmp
out
rorb
jae
scas
inc
fadds
mov
add
cltd
xchg
inc
repz
xchg
dec
sub
pop
pop
lret
test
fstps
lahf
ss
add
out
arpl
es
test
cmc
push
cmp
cmp
cld
push
lret
fstps
xchg
inc
sbb
adc
movb
adc
in
call
movsb
jno
push
test
fidivrl
in
inc
mov
lcall
pop
in
imul
adc
mov
call
outsl
out
sbb
push
inc
xlat
in
lcall
xchg
loopne
aad
mov
aas
ja
outsl
rcrb
out
repnz
adc
inc
pop
mov
lock
mov
ja
dec
push
jmp
test
mov
jg
or
in
dec
test
inc
xor
ja
and
fstps
pop
loop
jg
data16
and
dec
mov
mov
ljmp
inc
adc
or
ficoms
sub
arpl
lods
mov
push
shr
arpl
push
pop
dec
dec
lret
xor
mov
jae
ret
ljmp
movl
ja
mov
fdivp
lods
mov
sbb
xor
cmovnp
xchg
lahf
sub
push
in
mov
aad
testl
sbb
jmp
dec
inc
idivb
xor
repz
fbstp
adc
out
jp
pop
call
add
ja
jge
jl
sbb
sbb
adc
je
insb
fisubrs
and
hlt
lea
insl
pop
mov
adc
push
mov
cmc
xlat
mov
or
sub
sbb
jmp
cltd
loop
enter
cltd
adc
add
cmpsl
sarb
push
sbb
xor
pop
fwait
or
push
sub
pop
adc
sar
out
mov
add
inc
dec
adc
lock
mov
add
mov
xchg
lods
sbb
cmp
cmp
pop
out
lea
push
jg
adc
sub
mov
adc
add
cmpb
movsb
loope
fbstp
stos
lcall
test
lock
negl
cmpl
insl
dec
mov
es
push
aam
clc
fimull
rcrb
rcll
loopne
out
cmp
roll
bound
xor
sub
outsb
pop
orl
inc
adc
idivb
add
and
xchg
mov
sahf
xlat
mov
pop
iret
cmovae
and
in
lcall
popf
xlat
mov
lret
jno
cmc
xorl
xchg
cmp
push
ljmp
cmpsb
push
mov
repnz
mov
in
cmc
xor
jp
insl
sub
pusha
sub
dec
adc
sub
jmp
dec
sub
lret
fisttpll
pop
popf
rorl
jno
arpl
add
call
jge
imul
mov
cld
leave
jns
aas
push
add
dec
rclb
pop
xor
fdivrs
repz
test
mov
lods
sbb
cmc
fistpl
fld
fwait
mov
call
stos
int3
iret
xchg
out
out
andl
and
mov
ret
inc
cmp
hlt
jbe
lcall
add
gs
dec
lahf
jmp
loop
leave
push
cmpl
jae
fwait
mov
ljmp
shlb
pop
repz
arpl
cwtl
clc
xchg
bound
rcr
add
and
cmpl
push
push
pop
pop
fucomp
xor
cltd
sub
popl
cmp
test
mov
or
lods
xor
shll
add
js
jns
inc
cmpsb
shr
sbb
out
xor
xlat
pop
push
into
cmp
popf
lcall
data16
imul
mov
aas
mov
cmp
xchg
sub
addr16
dec
decb
add
mov
sbb
xchg
insb
popf
scas
xor
cmp
sbbb
clc
and
sub
mov
sbb
or
stos
jge
mov
cmc
xchg
dec
stos
lock
sbb
xchg
fsubl
xchg
shrb
addb
fwait
cmp
call
dec
inc
ficoml
fistpll
stc
movsb
pop
ret
sub
negb
hlt
dec
scas
stc
clc
mov
std
xchg
jo,pn
adc
mov
xor
sub
jp
std
pushf
push
nop
out
mov
mov
ret
in
adc
push
jge
add
xchg
dec
cmpsb
push
ds
xlat
add
je
lret
inc
repnz
rol
lds
mov
xor
jae
sub
mov
out
fs
xchg
cmpsb
sbb
xlat
std
popf
dec
xchg
ljmp
rorb
outsb
sarb
dec
sub
xchg
mov
pop
icebp
cmp
movsb
xchg
jnp
add
mov
add
setne
movsl
mov
push
arpl
jne
lods
stc
rorb
sbb
push
mov
xor
ficoms
or
add
mov
mov
mov
mov
inc
push
mov
in
inc
lods
cltd
lods
inc
push
in
imul
pop
sub
loopne
cwtl
cmp
out
xor
xorl
movsl
or
mov
jg
cmpsb
out
push
xor
dec
or
je
push
and
sbb
mov
mov
sub
add
std
cltd
int
or
lahf
stos
fucomip
in
cmp
movsl
adc
mov
dec
pusha
add
lahf
xor
and
add
mov
sbb
iret
mov
push
cmp
jbe
or
int
jge
cli
hlt
arpl
call
rorb
jb
into
dec
xchg
push
ret
jo
xchg
jge
sbb
cmp
loope
fxam
or
arpl
and
out
xor
adc
lock
push
nop
push
pop
jl
jp
dec
pop
dec
aam
dec
ret
mov
incl
jl
test
mov
and
in
sub
dec
inc
outsb
or
daa
andb
jne
test
enter
jb
shll
sbb
jp
adc
mov
jg
inc
jle
hlt
cmp
mov
xlat
pop
mov
cmc
fwait
and
xchg
outsl
jg
lods
add
pop
cmp
aad
mov
jne
ss
push
lret
adc
stos
xchg
mov
fs
dec
bound
mov
das
movaps
mov
and
mov
jp
sbb
lds
xor
cmp
mov
test
in
jecxz
icebp
test
jbe
push
xchg
popa
push
fisttpl
xchg
aam
test
pop
jecxz
pop
mov
dec
xor
jae
mov
test
mov
xorb
sub
je,pn
loopne
mov
aad
ficomps
xor
int
and
cmpsl
imul
test
cmp
push
lret
cmpsl
sub
mov
loop
add
jno
bound
inc
or
les
add
adc
in
push
lock
adc
mov
gs
in
out
outsb
adc
int
mov
sbb
cmpsb
fistpll
or
cmp
jbe
outsl
popf
test
repz
inc
in
cmpsl
push
mov
adc
ds
push
pop
cmpsb
mov
jle
jno
cltd
mov
dec
pop
in
lods
fcompl
pusha
mov
stc
outsl
adc
mov
or
cmp
movsl
adc
mov
or
sbb
shrb
cwtl
repnz
mov
lods
lods
jge
inc
sub
pop
xchg
les
aad
add
imul
jle
nop
mov
sbb
mov
inc
loop
scas
mov
push
pushl
mov
imul
shll
sar
lcall
imul
andl
out
lock
adc
push
mov
cmp
test
xor
loopne
sub
sub
inc
das
in
xchg
mov
or
repnz
pcmpeqw
mov
and
cli
adc
inc
mov
inc
push
add
xchg
or
xor
xor
push
mov
stos
ja
push
push
btcl
hlt
dec
mov
pop
add
inc
cli
mov
mov
fstpl
pop
jp
mov
fadds
nop
bound
mov
and
nop
or
imul
push
fwait
movsl
adc
enter
push
fistps
add
movsb
pop
repz
sbb
xchg
fnstsw
fstpl
pop
xchg
adc
ljmp
pop
mov
cmp
stos
lds
dec
fwait
into
mov
out
js
adc
mov
jne
xor
cmc
push
popa
lret
mov
fs
add
jmp
movsl
lods
mov
inc
mov
scas
push
popf
xchg
xor
lds
sahf
ret
jmp
jbe
std
cmc
lret
stc
lods
inc
data16
cmp
int
adc
or
popa
jae
fsubl
movsl
mov
jnp
imul
out
int3
lea
add
test
or
xor
mov
push
andl
int3
jbe
mov
repnz
xor
add
jg
cs
repz
orb
outsl
pop
pushf
imul
test
sarb
cwtl
je
xchg
jecxz
cmp
cmpsb
aas
addb
rcll
outsb
nop
xchg
mov
ss
inc
sbb
ljmp
lods
sbb
push
scas
mov
clc
sub
jg
xor
mov
test
bound
vpunpckhbw
fcmovne
mov
xchg
cmp
imul
cmp
xor
mov
cmpsl
push
in
icebp
or
mov
rorb
dec
and
aaa
lods
fistps
xchg
leave
xor
adcl
add
xchg
enter
sub
ljmp
lahf
das
pop
cmp
es
xchg
lods
push
mov
xchg
mov
mov
cli
xlat
stos
cltd
bound
enter
mov
test
pushf
push
or
mov
mov
add
outsl
out
aad
push
lods
add
pop
jb
inc
mov
mov
into
int3
test
or
adc
mov
test
cs
pop
dec
js
out
aad
cld
test
cmp
adc
inc
push
xchg
loope
jo
stos
scas
movsl
push
pop
ficoms
mov
jb
fisttpl
cltd
xor
cli
imul
ja
insl
cltd
or
pop
into
test
addr16
mov
jo
rorl
inc
jl
dec
fwait
adc
push
movsl
jmp
jno
xor
add
mov
mov
or
or
adc
mov
push
ds
xlat
xor
mov
pusha
lsl
mov
data16
sti
loope
xor
ds
push
out
mov
mov
mov
dec
mov
adc
jno
xor
jae
pop
lock
cmp
adc
pop
fists
ror
pusha
nop
mov
mov
hlt
inc
movsl
or
xor
iret
hlt
outsl
jnp
les
and
adc
and
mov
loop
aad
cmp
fdiv
loope
sarb
fmuls
mov
aad
out
xchg
sbb
or
scas
ss
rcrl
cmp
pop
dec
mov
or
in
in
sub
push
movsb
rolb
mov
xor
dec
leave
iret
xor
jae
mov
into
sbb
inc
lds
xchg
ret
mov
in
outsb
repnz
jl
aam
stos
mov
pop
imul
jno
rol
pop
sarl
jge
mov
cmp
cltd
lods
sar
adc
mov
popa
jne
test
popa
mov
mov
fwait
cmp
sti
or
inc
lock
mov
shlb
mov
xor
sahf
in
adc
or
xchg
lcall
mov
mov
cli
jbe
mov
jae
movsl
fnstcw
inc
aaa
pop
ffreep
push
pop
xor
dec
sub
mov
das
pop
fdivr
les
lock
and
cmpsb
ret
pop
inc
ds
enter
push
gs
fisubrl
xchg
xchg
sub
mov
cmp
push
mov
xlat
test
xchg
mov
mov
ret
mov
ds
ficomps
jne
or
inc
orl
int3
or
mov
lods
mov
loope
mov
jp
leave
dec
cwtl
mov
std
movsb
imul
mov
cltd
test
push
repnz
loope
sahf
int3
jmp
xor
movsl
push
fdivrl
sub
xor
out
pop
js
insl
fwait
aad
sbb
mov
fwait
call
push
dec
sub
xlat
aad
mov
roll
lret
lods
call
pusha
das
add
or
arpl
mov
kmovw
pop
jmp
hlt
shrb
out
or
or
add
push
movsb
pop
inc
stos
pop
dec
xchg
xor
mov
pop
pop
jb
mov
and
andl
cld
addb
popa
fldcw
sahf
push
popa
iret
in
xchg
push
jecxz
fucompp
divb
or
lock
adc
dec
inc
fsubs
scas
movsl
jp
cmp
dec
cmp
jmp
sub
jns
mov
mov
push
ss
inc
xor
mov
std
pushf
xor
xchg
mov
loop
cmp
pop
sub
push
and
inc
cli
mov
pop
mov
xchg
dec
fiaddl
mov
andl
test
jnp
aas
adcb
into
in
stos
call
mov
xchg
ficoml
jmp
push
mov
stos
pop
lods
aas
mov
fldl
cmpsl
outsl
mov
xor
fiadds
dec
mov
je
xchg
jl
imul
xchg
andb
insl
dec
out
sbb
rol
push
mov
je
fs
cmc
pop
fnsave
fbstp
movsb
sbb
fwait
sub
popf
add
and
cs
fld
cmp
in
popa
push
xor
push
pushf
mov
adc
xor
cltd
pop
addr16
lods
outsl
mov
push
movsb
xchg
mov
mov
enter
sub
lock
lcall
lret
add
fs
fsin
lea
arpl
inc
xor
ret
cltd
rol
icebp
pop
adc
cmp
xchg
inc
cmp
imul
and
ds
xchg
cmp
pop
and
call
out
cmp
jnp
es
dec
cmp
or
ja
xchg
sti
ret
int3
clc
push
xor
imul
out
xchg
popa
daa
test
mov
or
add
int
inc
leave
jl
jno
inc
mov
mov
push
pop
xor
mov
cmp
inc
mov
mov
bound
ret
lret
aas
mov
sbb
cmp
lret
mov
clc
and
out
pop
dec
pop
adc
pop
push
in
push
push
jno
pop
cmp
cmp
roll
jns
sbb
pop
xor
mov
mov
in
or
mov
xor
xchg
cmpsl
aam
push
ljmp
mov
xlat
pusha
adc
add
movsb
add
mov
sahf
inc
test
aaa
cmp
loop
pushf
scas
mov
mov
xchg
xor
enter
sub
fists
outsl
insb
sbb
mov
pop
int
cld
enter
adcl
rcrb
in
scas
cmpsl
cwtl
adc
mov
add
xchg
dec
xchg
pop
pop
cwtl
cs
push
icebp
jl
xor
pop
mov
mov
stos
mov
test
cmp
or
xor
ds
sub
iret
roll
mov
mov
aad
icebp
out
mov
xchg
add
cmp
xchg
cmp
mov
stos
mov
ret
fisubl
jle
push
ret
mov
inc
xchg
mov
jle
mov
inc
lret
push
in
xchg
jo
push
xor
into
dec
lods
push
jne
push
mov
pop
pop
arpl
mov
and
or
xor
pop
sbb
push
lods
mov
pushf
mov
filds
pop
ja
mov
je
lahf
sahf
push
lods
cltd
mov
pop
cmp
in
incl
data16
sub
scas
or
iret
jle
inc
push
sbb
pop
dec
xor
mov
leave
add
in
push
pop
add
mov
repnz
jmp
mov
pop
es
sub
sti
outsb
xor
aad
jbe
xchg
test
sub
cmpsl
out
xchg
xchg
cltd
push
ret
insb
adc
dec
xor
pop
cmpb
and
or
shlb
mov
stos
xor
stos
jo
jnp
add
mov
add
sbb
cmp
mov
jns
jl
jg
xor
ljmp
test
cmp
fistps
loopne
xor
push
das
dec
mov
stos
pop
push
lea
lds
idiv
pop
stos
int3
push
mov
repz
cmc
loopne
stos
mov
mov
jo
jo
icebp
je
push
int3
adc
mov
cmp
mov
fdivl
adc
cmovl
and
adc
jecxz
js
repz
out
fwait
mov
ret
fsub
pop
stos
sbb
subl
jnp
cmp
pop
movsl
xor
cmp
cmp
je
pop
xor
clc
dec
pusha
cmp
mov
out
fcmovne
arpl
pop
lret
arpl
push
xchg
ljmp
cmp
push
mov
dec
out
adcb
sbbl
les
aaa
lods
jae
ja
mov
xor
test
loop
push
jae
sub
dec
scas
jecxz
outsb
adc
pop
scas
adc
les
inc
inc
cmpsl
fadds
std
xchg
stc
inc
sub
pop
rorb
xchg
cmp
jmp
dec
mov
andl
data16
xchg
xchg
popf
mov
inc
mov
cmc
sbb
movsb
call
dec
popf
mov
push
pop
push
sbb
xchg
mov
dec
xor
pop
push
mov
fiadds
mov
inc
mov
ds
stos
movsl
pop
lcall
int
and
ss
and
enter
push
inc
scas
push
xor
ss
lds
test
fucomip
faddl
dec
and
add
enter
xorb
xor
add
mov
xor
jmp
xor
cli
push
sbb
push
add
loop
imul
pop
lahf
add
inc
movsl
nop
imul
push
pop
je
push
adc
xchg
ret
mov
inc
jl
hlt
fidivrl
mov
dec
addr16
jg
lret
mov
sbb
mov
pusha
or
outsb
mov
add
cmp
pusha
jp
in
push
roll
add
push
mov
es
cld
leave
mov
push
pop
orl
ret
push
sub
lods
fadds
jne
fcompl
hlt
mov
inc
inc
or
in
mov
hlt
aad
push
js
cld
ja,pt
xchg
fs
pop
fsubr
mov
inc
addb
mov
jns
into
sub
xchg
addr16
out
imul
adc
cmp
shrb
jecxz
out
testb
cmp
roll
jae
pop
jecxz
mov
cli
mov
ljmp
and
mov
jmp
fcmovnbe
js
mov
lahf
pop
pop
add
dec
lods
pop
pop
mov
mov
mov
sub
ljmp
ret
or
test
push
jg
jo
xchg
sahf
test
push
int3
ss
push
repz
xor
mov
fstpt
push
fucom
push
sub
inc
incb
or
pop
inc
jae
int
mov
test
inc
sub
mov
insb
filds
dec
stc
add
xchg
pop
pushf
jae
stos
or
cli
lret
in
pop
lds
in
and
adcl
pop
cld
mov
jge
leave
daa
fdivrl
mov
ljmp
call
int3
inc
pop
into
jne
adc
push
and
add
add
add
dec
fcoml
insl
insb
sub
cmc
cltd
mov
cmp
mov
push
push
sbb
aas
xchg
testb
clc
xchg
sub
loope
inc
into
adc
mov
mov
adc
xor
jns
cmp
mov
xchg
sbb
cltd
inc
cmp
addr16
mov
add
les
shl
mov
pop
ret
xor
sbb
scas
cmp
in
imul
hlt
cmpsl
sarl
mov
int
mov
in
and
dec
lods
jge
dec
out
add
vmovhps
cwtl
mov
pop
movsb
and
xor
sbb
ficomps
movb
dec
pop
ja
and
xchg
out
cs
xchg
enter
xor
xchg
mov
sbb
stos
mov
add
lahf
in
xlat
cmpsl
pavgb
lret
hlt
xchg
sub
push
adc
fwait
add
pxor
mov
arpl
stos
adc
mov
sahf
nop
in
popf
in
jno
subl
mov
add
out
dec
stos
out
pop
jns
cltd
fadds
divl
push
sub
sbb
repnz
pop
hlt
mov
nop
push
std
testl
loop
arpl
lds
sbb
hlt
pop
xchg
add
add
jnp,pt
pop
je
call
int3
or
jns
dec
jae
shll
test
inc
mov
adc
popf
and
cltd
and
jmp
mov
push
cmp
enter
sub
fstenv
mov
aad
dec
jecxz
icebp
mov
mov
xchg
sub
jg
fsub
loope
mov
ret
jmp
shll
dec
adc
jge
cmp
mov
fsubs
lds
les
add
inc
test
add
ficoms
and
inc
data16
jns
leave
test
lds
mov
pop
lahf
fcoml
jp
test
in
insb
pop
pop
movsb
pushf
sbb
xchg
and
mov
insl
out
fistl
aad
jecxz
call
in
mov
mov
pushf
dec
inc
aas
aam
inc
or
nop
popa
mov
test
arpl
xorb
lods
jle
lock
fisubs
in
js
imul
inc
cmpl
or
dec
enter
aam
mov
xchg
sbb
and
repz
imul
add
subl
dec
inc
stos
lret
mov
or
daa
shrl
cmpsl
aad
idivb
mull
loope
push
sbb
cmp
sbb
out
inc
dec
jbe
jnp
or
clc
mov
ret
movsl
adc
into
dec
or
mov
push
scas
andl
mov
out
or
jp
imul
mov
mov
stc
mov
fmull
xchg
arpl
or
lcall
xchg
testb
or
out
jne
inc
aam
lods
mov
imul
outsb
jg
lds
std
repz
fidivrl
insb
inc
sub
mov
addr16
lock
stc
mov
sbb
inc
push
dec
aam
jo
hlt
aaa
iret
inc
mov
int3
loope
je
loop
popf
push
inc
ds
fdivp
inc
xchg
mov
out
dec
cld
movsl
push
lds
popf
mov
push
sbb
adc
sbb
ficomps
mov
imul
or
test
pop
ucomiss
and
dec
xor
stos
cmc
jmp
add
sub
xor
xchg
mov
mov
aam
das
add
xchg
mov
inc
popf
mov
mov
incb
mov
lgdtl
insb
lods
dec
lods
xchg
call
xchg
dec
pop
adc
xchg
inc
sub
insb
add
xchg
cmp
adc
inc
jne
shlb
dec
add
mov
pop
out
insl
outsl
push
mov
adc
xchg
lea
mov
ljmp
cmp
arpl
push
icebp
xchg
cltd
rcll
repz
leave
out
adc
pusha
fs
je
popf
jae
fwait
or
push
or
out
jge
repz
push
leave
mov
aaa
sar
stos
mov
aad
xor
repz
mov
pop
xor
dec
insb
rolb
sub
or
dec
repz
jns
sub
jne
fnstenv
repnz
stc
std
xor
lret
and
out
xor
pop
insb
int3
add
mov
inc
sub
xchg
dec
pop
leave
push
adc
xor
std
insb
imul
cld
addb
push
push
fistl
std
push
mov
inc
rcll
push
cmp
xor
outsb
mov
cltd
push
addr16
push
cmp
mov
ret
push
fs
mov
cmc
daa
sbb
mov
push
jno
int3
xchg
ret
xchg
ror
push
scas
jg
cmp
adc
mov
inc
cmc
leave
sub
loopne
mov
hlt
pop
bound
mov
lret
jg
shrb
add
cmpsb
pop
sbb
mov
mov
ret
mov
std
dec
or
jne
xchg
mov
adc
xor
out
mov
dec
stos
push
inc
add
xor
cld
outsl
or
xor
jp
xchg
lret
out
lcall
dec
adc
roll
mov
jb
pusha
jecxz
push
enter
mov
push
fadds
push
mov
pop
mov
xor
into
inc
mov
movsl
jns
add
jb
icebp
jae
dec
pop
xchg
xorb
jl
pop
add
scas
xchg
cmp
or
and
mov
rolb
lahf
pop
xor
testl
imulb
lea
push
pop
in
test
fs
fsubr
xlat
call
es
mov
stos
and
mov
in
inc
repz
daa
mov
and
pop
ja
shll
int
cmpb
mov
mov
pop
cwtl
outsl
push
std
mov
push
jae
into
adc
popf
mov
divb
xlat
sbb
rorb
aam
xor
inc
lds
fcmovu
scas
mov
lea
inc
ficompl
sbb
xor
add
stos
push
cmp
mov
rep
fmul
ss
lods
daa
mov
mov
cmpsb
cmp
sub
mov
data16
gs
test
mov
dec
dec
repnz
rorb
jl
mov
pop
je
pop
sub
movl
clc
pop
in
mov
dec
lcall
ja
ret
stos
pushw
mov
push
test
cltd
xchg
adc
xchg
xchg
add
hlt
xchg
inc
aam
enter
mov
mov
out
pushf
xchg
sbb
jbe
pop
ret
cltd
push
xlat
int3
aaa
out
sub
add
pop
xchg
out
test
sub
mov
sub
sahf
mov
sahf
xchg
test
jg
adc
movsl
lea
xlat
cmpsl
pusha
insl
push
dec
cltd
jae
jb
mov
dec
ja
test
mov
lock
xlat
mov
sbb
sahf
or
mov
cmpsl
lahf
mov
mull
jecxz
mov
mov
aad
clc
push
fwait
hlt
and
push
fisubs
xchg
push
xorb
push
lea
ret
or
inc
das
jle
mov
mov
loopne
adc
push
nop
push
icebp
ss
cmp
lods
movsl
sub
lods
and
movsb
dec
xchg
cli
fwait
iret
mov
sahf
xor
dec
push
icebp
test
sti
int3
sub
cmp
inc
out
cmp
lcall
std
lcall
into
sti
mov
scas
push
jg
inc
mov
cltd
adc
subl
lahf
fwait
sub
jmp
xor
add
sbb
enter
mov
jle
xor
cmc
arpl
adc
push
std
push
fadd
xchg
fs
adc
stc
and
aad
pop
int3
adcl
in
xor
and
je
xor
mov
mov
add
call
ret
orl
pop
fbstp
stos
movsl
cmp
mov
push
inc
lods
outsl
xor
jle
xor
add
xor
and
and
jecxz
cli
aad
sbb
pop
aaa
or
inc
add
lahf
jo
out
out
dec
aas
dec
push
in
enter
call
mov
jnp
pushf
das
xor
cmp
and
imul
int3
cli
imul
push
cmc
push
push
cltd
repz
scas
sub
out
fdivl
jg
xchg
or
pop
sbb
and
jecxz
ds
leave
roll
gs
dec
sahf
push
lock
int3
shl
repnz
jo
and
stos
movsb
sub
sub
adc
or
mov
and
mov
aas
or
lock
mov
pop
or
cmp
bound
sbb
dec
inc
scas
sbb
cli
and
sbb
mov
popf
and
fwait
imul
xchg
bound
out
dec
adc
adc
adc
mov
loop
mov
fdivr
jp
out
lock
cmpsb
dec
mov
adc
and
mov
dec
fcoms
pop
es
jne
xor
sub
xor
aad
mov
mov
test
fldl
dec
and
dec
inc
mov
andb
cmp
sbb
lret
sbb
adc
adc
lret
pop
cmc
mov
sub
push
inc
call
mov
call
shrb
test
cmp
mov
outsb
pop
mov
mov
lds
jns
add
insb
sub
sub
ljmp
rorb
cmp
cwtl
adc
nop
xor
pop
fstpt
inc
mov
and
push
xchg
mov
mov
mov
mov
mov
mov
nop
and
cmp
addr16
cltd
test
test
pop
lods
rcrb
adc
and
sbb
sub
mov
daa
dec
adc
pmaddwd
nop
mov
xchg
aam
xor
mov
and
loop
imul
sbb
mov
jb
push
adc
cmp
and
push
insl
or
push
pop
adc
sti
aad
call
xor
shr
orl
jbe
push
cs
lods
xchg
cmp
sbb
mov
adc
push
mov
fldz
icebp
les
scas
sbbb
loopne
xchg
aaa
inc
fneni(8087
lods
int3
es
test
push
mov
inc
aam
fcomi
shl
xor
dec
xchg
fsub
pop
pop
in
inc
cwtl
cmpsl
lea
mov
stos
jle
sbb
push
cmp
adc
and
pop
pop
es
mov
arpl
ja
and
push
or
aas
outsl
jl
push
lds
cs
int3
xchg
subl
mov
std
and
and
fsts
cmc
push
jbe
leave
add
and
imul
shrl
adc
test
inc
xor
jb
mov
mov
xchg
lret
addr16
test
sahf
into
mov
mov
stos
cmp
add
adc
or
ljmp
fsts
mov
test
in
jp
lock
sti
cmpl
lock
xchg
faddl
pop
pop
inc
and
jle
jmp
fcomi
call
in
add
xchg
mov
shrl
jne
dec
dec
fdivr
ret
cmp
or
xchg
in
xor
dec
push
add
jb
dec
cmpsb
popa
cld
cmc
jbe
call
cwtl
push
cs
adc
cmp
xlat
test
fnstenv
addr16
pop
push
xor
aas
add
sub
or
fsts
ret
repnz
in
sub
sahf
xor
add
lock
inc
in
je
imul
add
aam
outsl
inc
mov
ljmp
xchg
xor
push
mull
popf
repz
filds
or
or
dec
shlb
int3
jmp
mov
sbb
cs
cmp
push
pop
repnz
inc
pop
pop
xor
mov
cmc
mov
add
negb
mov
cmpsl
cmc
sarl
jle
gs
adc
add
push
push
and
notb
adc
dec
orl
movsb
sahf
sbb
in
and
mov
shr
je
mov
mov
ja
or
cmp
cli
orb
sbb
bound
les
stc
jae
jp
cmpsl
pop
adc
imul
mov
repnz
or
sti
mov
ficompl
inc
lahf
mov
lret
ljmp
out
test
mov
mov
outsb
dec
fldcw
popf
sahf
lahf
lods
cwtl
bound
movsl
faddl
les
sbb
loop
call
iret
lret
in
inc
loopne
xchg
int3
jae
pusha
push
aam
mov
es
cmp
inc
inc
adc
pop
inc
in
jge
dec
sbb
icebp
push
jmp
push
bound
sbb
shrb
add
addb
lret
and
cli
mov
xchg
in
ret
fisttpl
sub
stc
push
or
pop
imul
aam
mov
push
add
sbb
adc
pop
sarb
cmc
not
aas
xchg
loopne
jb
pop
loope
inc
push
loop
inc
pop
iret
sub
rcll
dec
lcall
mov
inc
mov
and
gs
or
ss
insb
dec
mov
and
loope
pop
ss
or
cmpsl
mov
adcl
pop
cmp
mov
mov
sub
je
sub
and
mov
outsb
jl
test
movsl
xor
xchg
shll
xor
push
mov
add
inc
in
lret
dec
mov
xchg
xchg
sub
mov
pop
add
pop
xor
xchg
xlat
pop
aas
jnp
mov
cli
shl
jae
xchg
mov
sub
inc
jo
pop
pushf
jne
adc
dec
mov
mov
aaa
push
lret
gs
mov
add
add
add
and
call
mov
arpl
mov
xchg
shl
xor
xchg
mov
cli
stc
xchg
cmp
jecxz
cmp
out
inc
dec
push
imul
test
ret
jle
jnp
sbb
pop
xchg
pop
repnz
test
int3
pushf
insl
cli
cmp
into
sbb
fdiv
fisubrs
or
loop
stc
sti
sbb
shll
loope
repz
mov
or
mov
iret
mov
push
rorb
and
cmpsl
mov
mov
dec
push
jg
repnz
jb
jp
ror
and
loop
fsts
sarl
push
jp
mov
xchg
out
outsb
pop
and
aaa
sub
lock
adc
mov
pushf
mov
cltd
or
mov
mov
out
cmp
mov
xchg
mov
imull
sub
jae
ret
jle
adc
mov
int3
out
jge
movsb
imul
test
sti
push
jnp
sahf
movsb
je
dec
fisttpl
int3
adc
dec
aam
mov
mov
lea
push
fmull
and
push
lret
pop
ret
xor
push
mov
lods
gs
mov
pop
jge
imul
scas
add
and
jl
push
mov
std
shll
out
mov
xor
lods
mov
lods
test
push
sbb
xchg
xchg
dec
mov
add
faddl
cwtl
loope
and
jbe
push
adc
mov
imul
mov
inc
mov
mov
gs
das
cmc
adc
pop
adc
mov
add
into
out
push
mov
fdivs
in
jl
dec
sub
stc
mov
pop
addl
decl
cmpsb
mov
push
out
sub
mov
xor
and
ret
call
mov
push
fldt
orl
iret
xchg
jle
bnd
out
add
and
mov
ja
mov
jno
jecxz
pushf
testl
shll
sbb
push
dec
je
fistl
xchg
notl
and
and
mov
les
lods
mov
jp
pop
add
adc
int3
pop
mov
sbb
push
or
jae
add
xchg
xchg
cltd
lcall
in
fisttps
pop
popl
es
push
xchg
xchg
mov
loope
mov
aaa
gs
cmp
inc
pop
push
comiss
mov
mov
xorl
das
xchg
push
arpl
push
mov
xor
dec
iret
and
pop
jp
add
dec
shrl
pop
sbb
in
cmpsb
lret
mov
into
test
sti
pop
jno
sub
dec
iret
adc
inc
cltd
jbe
or
sbb
mov
enter
nop
stos
xor
bound
mov
hlt
hlt
lods
ss
pushf
xor
dec
sahf
mov
xor
sub
dec
popf
xchg
imul
xchg
stos
int
cld
and
xor
cmp
pop
notb
mov
pop
dec
scas
pop
insb
add
mov
pushf
faddl
stos
sbb
sbb
mov
pop
arpl
push
pop
and
mov
hlt
add
mov
insl
xor
mov
push
lods
jbe
pop
add
cs
sahf
inc
lret
sahf
jp
out
jne
mov
out
gs
in
cwtl
subl
sub
sbb
outsb
lods
dec
shrd
cmpb
xor
gs
stos
or
stos
sbb
arpl
pop
push
shll
inc
jmp
aam
push
mov
shrl
xchg
cmp
jp
dec
or
les
xchg
hlt
sbb
scas
mov
jge
inc
sub
push
mov
add
jle
pop
push
push
adc
add
lds
pusha
out
repnz
aaa
sbb
fxch
std
outsb
stc
out
imul
int3
mov
lret
xchg
inc
sti
jl
and
nop
inc
stos
push
cld
ds
sub
mov
ffree
stos
shl
mov
adc
andb
pushf
ret
sbb
xchg
fsubrl
inc
pop
add
push
push
loop
sbb
cmpsl
inc
lea
xchg
popf
cltd
and
xchg
or
sbb
mov
aad
sar
sbb
xchg
xchg
pop
mov
xchg
daa
xor
xlat
fistpl
add
iret
loopne
test
push
add
test
loopne
xchg
movsl
mov
pop
pop
jne
ficomps
jo
gs
scas
rcll
in
das
dec
repnz
pusha
addr16
add
out
scas
iret
dec
pop
adc
mov
pop
test
cmpsb
sbb
fistps
jmp
adc
out
ss
fldl
lea
outsl
cltd
mov
pushf
add
jo
inc
jae
aam
arpl
sbb
aam
test
xor
lods
jbe
inc
dec
xchg
push
lret
bound
in
mov
jb
mov
add
cs
inc
push
mov
pop
xchg
pop
hlt
mov
nop
repz
insl
dec
test
rcll
fstps
icebp
movsb
or
xchg
mov
lret
dec
mov
fdivrp
pop
add
shll
xchg
mov
adc
mov
jmp
and
aam
jae
dec
push
imul
mov
lcall
sub
push
pop
popf
mov
pop
outsb
xchg
jmp
adc
jmp
push
dec
fdivs
mov
xchg
jle
lods
cld
mov
mov
add
lods
xorb
inc
mov
xor
gs
fldt
cmp
test
add
add
mov
mov
pushf
not
mov
sub
pop
dec
aam
push
push
pop
pop
aas
push
inc
sbb
into
stc
outsb
mov
or
adc
ss
daa
shlb
xor
movsb
fisubrl
mov
cmp
sbbb
decl
shl
outsb
out
rolb
ret
je
in
fisubl
fldcw
sub
repz
pop
fists
clc
loop
pushl
mov
inc
cmpsb
fdivs
dec
lret
test
mov
xchg
push
fists
add
xchg
push
xor
ret
scas
int3
outsb
mov
mov
pop
lea
xor
adc
cmpsl
lds
sub
addb
notb
mov
lahf
aas
insb
lcall
sbb
mov
fs
mov
mov
sub
or
mov
sbb
pop
mov
insb
push
lods
cli
sub
mov
orl
xchg
mov
scas
sub
add
mov
inc
pop
xlat
cmp
sarb
scas
jo
cmp
xor
arpl
sub
imul
mov
loop
xchg
push
iret
and
jnp
sbb
push
cld
and
adc
inc
aas
cmpsb
dec
jb
leave
and
jmp
addr16
stos
or
mov
dec
mov
rol
or
and
andl
gs
iret
imul
mov
addr16
inc
dec
outsl
xor
aam
jle
and
lds
sbb
cmpsl
movsl
dec
in
lods
stos
sub
loopne
or
xchg
outsl
pop
fidivs
leave
mov
mov
pop
fisttpl
clc
xchg
cmp
dec
xor
mov
push
fscale
cld
xchg
fistpll
fsub
xor
xchg
add
dec
filds
ficoml
mov
repz
cld
sbb
mov
aaa
shlb
mov
xlat
int3
bound
lret
mov
iret
popa
outsl
data16
aas
mov
movsl
call
testb
push
pop
or
adc
mov
je
dec
es
sbb
and
lods
pcmpgtd
aam
pop
loope
cli
cmpl
testl
xchg
ja
add
std
adcl
and
jle
mov
inc
js
aas
imul
push
xor
cld
repz
aam
push
add
addr16
test
cmpb
push
loope
ret
xchg
cmp
idiv
sub
jbe
imul
or
dec
mov
pop
lret
fmuls
pop
bound
mov
imul
jge
iret
mov
mov
shrl
imul
push
push
insb
jmp
mov
jnp
aad
jb
lret
fldenv
mov
jge,pt
jl
std
call
pop
dec
lret
fistl
or
xchg
jg
imul
mov
icebp
mov
popa
pop
icebp
imul
cmpsb
jmp
mov
lret
jb
popa
fsubl
mov
out
or
ret
cmp
aaa
out
mov
and
pop
add
dec
daa
xor
rcrb
pop
xor
sbb
leave
add
in
arpl
fisubrl
dec
xor
sbb
inc
fldl
lock
inc
in
xbegin
and
shrl
and
popa
cmc
sbb
sbb
xchg
sub
hlt
fmull
sub
jb
jae
and
icebp
add
add
sbb
scas
adc
inc
dec
decl
mov
sbb
loop
xchg
or
cli
push
insl
sarb
sbb
movsb
popa
pop
dec
cs
ficoms
lret
mov
jns
jge
push
push
or
push
mov
enter
cmp
mov
sub
push
pop
repz
inc
mov
cld
scas
or
push
dec
xorb
mov
mov
pop
scas
pop
je
sub
sbbb
inc
lcall
bound
mov
scas
jns
lods
lret
lahf
push
out
sub
jns
xchg
add
movsl
lahf
out
imul
push
mov
sub
push
stos
les
sub
add
jo
in
js
or
mov
sahf
inc
icebp
mov
add
ss
add
cmp
mov
int3
mov
int
xor
shr
outsb
dec
mov
add
enter
rcrb
pop
xchg
filds
mov
adc
clc
in
jb
cwtl
lret
bound
jecxz
xlat
cmp
or
xchg
push
sbb
inc
pusha
push
and
insl
push
lods
mov
sub
lret
int3
xchg
shlb
sahf
mov
stos
mov
das
jae
mov
push
pop
or
adc
fcoms
adc
cmovae
popf
inc
mov
inc
lds
push
xor
push
dec
js
loop
and
or
movsl
adc
jecxz
test
push
repz
jmp
insb
mov
pop
mov
sbb
into
mov
std
add
and
adc
add
inc
clc
outsl
jae
jecxz
stos
lds
jo
cmp
sub
adc
popa
out
test
loopne
mov
cmpsb
jbe,pt
push
jne
pop
adc
lods
mov
lods
enter
and
ds
pop
not
fistps
pop
add
test
mov
xor
jge
sti
mov
jo
mov
aaa
sarl
neg
mov
mov
sbb
jno
das
cvttps2pi
and
sbb
push
jns
pop
jns
scas
fsubr
xlat
jnp
xor
lea
test
movsb
ret
and
adc
pop
std
insl
scas
jno
aaa
push
pop
notb
and
hlt
mov
fwait
inc
into
or
insb
fildll
or
adc
sub
inc
loop
fidivrl
addr16
xor
push
mov
cltd
loop
xchg
fsubp
and
bound
jge
mov
cwtl
jl
imul
dec
lret
out
dec
inc
sti
mov
imul
push
int3
jle
mov
inc
fs
mov
jmp
push
xchg
xchg
insb
repnz
stos
les
ret
pop
sbb
ret
xchg
mov
jmp
in
fxtract
jo
mov
fadd
inc
repz
loop
fldcw
idivl
xchg
out
cmpsl
pop
decb
movsl
jp
mov
stos
sbb
mov
ljmp
call
outsb
stos
aam
pop
arpl
mov
pop
and
or
mov
jmp
inc
push
jno
inc
out
push
adc
sbb
xchg
dec
pop
fcmovb
iret
cs
sbbb
cmpsb
test
lods
and
cs
cmp
jns
jno
cltd
and
mov
push
js
jnp
pop
mov
pusha
bound
dec
clc
fimuls
fisttpll
inc
adc
add
xlat
xchg
cmp
jge
sub
xor
jb
lret
sbb
adc
pop
enter
mov
lock
sbbl
mov
into
cwtl
xchg
jbe
insb
mov
sarl
test
sbb
fisubrs
jl
pop
add
data16
cmpsb
pop
or
cmp
inc
push
or
add
mov
pop
test
add
xchg
jnp
push
outsb
pop
add
mov
stos
mov
push
sub
arpl
in
mov
jge
das
fldt
mov
mov
push
cmp
inc
lahf
dec
sub
test
or
sbb
mov
aas
mov
jecxz
mov
xor
cli
pop
sbb
dec
std
dec
mov
sbb
and
sub
push
loopne
lret
sbb
fsts
in
mov
stos
dec
jle
pop
out
and
popa
rorb
loop
lcall
les
pop
clc
lret
inc
test
jmp
inc
test
leave
fwait
jecxz
imul
sti
jl
push
movsl
cltd
icebp
in
aas
push
stc
ja
out
dec
out
je
call
pop
and
push
out
mov
inc
imul
sub
in
mov
xchg
xchg
push
mov
and
outsb
xchg
add
call
jne
mov
xchg
fimuls
sbb
aad
loop
jmp
adc
lcall
js
sbb
insb
push
out
mov
xchg
xor
mov
mov
mov
popf
inc
sahf
push
xchg
cmpl
bnd
jno
test
lret
jle
adc
and
fisttps
ret
enter
in
sahf
lcall
xlat
push
xor
adc
lods
pop
lret
pop
or
jno
aad
scas
push
sub
xchg
jp
das
jbe
into
icebp
lds
jbe
jae
cmp
xchg
into
mov
pushf
ret
outsb
loope
adc
nop
pushf
mov
sbb
lret
rdtsc
lods
lret
ds
mov
enter
or
xlat
adc
mov
mov
mov
das
in
icebp
clc
sbb
pop
add
adcl
pop
lahf
lcall
jge
inc
add
imul
test
daa
mov
ja
or
adc
scas
fisttpl
push
into
xor
clc
jbe
and
gs
inc
add
sub
push
int
cmp
mov
mov
int3
lcallw
mull
xor
push
jb
fmull
jbe
imul
xchg
repnz
icebp
jl
je
addr16
adc
fdivl
jg
mov
cltd
stos
adc
daa
dec
cmp
mov
jno
sbb
inc
push
or
push
xchg
ds
jnp
sub
mov
add
mov
xor
cmp
push
loopne
out
stos
xchg
scas
mov
mov
jge
mov
cmp
std
mov
pop
outsb
ds
cmp
lock
dec
mov
jnp
jno
loop
xchg
nop
call
orl
cmc
inc
andl
dec
std
jmp
sub
inc
mov
mov
add
jg
mov
mov
xchg
lods
xchg
out
cmp
movl
ret
dec
test
stos
fwait
lock
ds
ror
and
pop
lahf
cmp
jo
scas
mov
push
aam
or
adc
inc
insb
scas
mov
mov
out
stc
xchg
cwtl
mov
push
mov
das
mov
int3
sbb
popf
outsb
cmc
add
mov
ja
out
push
mov
outsb
in
sub
add
xor
call
cld
stc
xchg
sub
data16
in
sub
aam
pusha
test
cmp
jbe
jmp
jo
sbb
fwait
and
lea
adc
xchg
imul
xor
sub
jmp
or
in
pop
sahf
cmp
jnp
cmp
jle
int
add
and
fdivrs
xchg
loopne
lret
lock
adc
dec
xchg
inc
xor
int3
stos
pop
jns
je
pop
int
clc
push
or
dec
dec
lea
sahf
call
out
sbb
xor
and
mov
mov
popf
xchg
lahf
xchg
movhps
mov
pop
and
mov
fimuls
repnz
mov
movsl
lret
leave
subl
in
aas
xor
and
inc
sub
mov
mov
lret
shlb
adc
xor
push
cltd
test
in
cmpl
test
aam
or
pop
sub
lret
cmpsb
mov
ficoml
inc
mov
push
ljmp
inc
and
jne
cli
gs
push
cmp
cmpsb
mov
cmp
std
sbb
push
fistps
lret
adc
or
xor
test
cmp
xchg
aas
movsb
jp
adc
dec
jg
shll
sub
aas
xchg
lret
leave
sub
xchg
out
and
shll
mov
scas
stc
inc
mov
shrb
mov
and
and
cmp
test
xchg
push
jge
js
fdivs
sbb
pop
mov
mov
aas
mov
test
rolb
or
sarb
lret
pop
inc
sub
pushf
mov
dec
push
jp
jne
push
mov
cmp
sbb
loop
sbb
add
sub
inc
sbb
or
decb
addr16
punpckldq
mov
popa
cmp
or
hlt
dec
push
call
gs
sbb
fwait
pop
hlt
xchg
inc
dec
push
sbb
mov
adc
and
cmp
fnstcw
cli
xchg
and
jne
jnp
or
xchg
les
scas
jbe
or
divl
mov
or
adc
push
icebp
repz
mov
gs
pop
movb
dec
push
insl
push
push
or
lret
rol
lea
jns
mov
jo
repnz
xor
jmp
into
pop
or
pop
and
mov
jo
into
dec
sub
jmp
test
aaa
lahf
xchg
pusha
jnp
dec
les
ret
adc
lock
inc
mov
repnz
sbb
xchg
push
jl
mov
mov
xchg
cmpsb
repnz
push
idiv
xor
xchg
xor
lock
rorl
addb
fxch
and
xchg
mov
testb
push
jae
hlt
les
int
adc
xor
sub
xchg
mov
adc
pop
cmp
pop
xchg
inc
and
incb
jbe
push
xor
sbb
jno
insl
mov
inc
out
cltd
mov
pop
lock
mov
push
icebp
fildl
inc
add
add
mov
mov
mov
inc
mov
iret
adcl
pop
fstps
cmpsl
jns
divb
add
int
pop
adc
iret
lock
ds
hlt
and
ja
mov
push
lret
add
test
mov
loop
mov
dec
test
mov
imul
pushf
cmp
mov
dec
test
jns
test
pop
cmc
rorb
ds
or
fnstsw
aad
mov
jnp
aaa
inc
jno
lea
scas
push
jg
dec
xor
icebp
sbb
test
fldenv
adc
in
pushf
insb
jo
push
jp
add
mov
xchg
jl
inc
stc
imul
mov
dec
cmc
xchg
pusha
sub
stos
pop
call
dec
xor
mov
fidivl
push
fbstp
sub
adc
xor
jns
je
bound
jl
gs
and
mov
xor
popf
ret
push
mov
lea
jp
sub
or
lret
outsb
cmpb
xlat
aad
ljmp
lea
xchg
addb
int3
mov
xchg
xchg
fsts
mov
inc
inc
or
mull
movsl
xchg
aas
js
push
sub
ret
js
repnz
sub
add
jp
pop
fldcw
or
push
add
test
sbb
push
mov
sbb
loope
cmc
sub
jmp
popf
mov
pop
jne
mov
repnz
stos
mov
pop
test
aad
jp
call
mov
sbb
stos
xor
movsl
xchg
dec
sahf
arpl
dec
lret
and
in
xchg
push
sub
xchg
sub
das
fiaddl
add
cld
and
mov
mov
mov
push
xchg
fldcw
xchg
in
xor
mov
adc
cmp
sbb
mov
mov
sub
and
pop
ja
adcb
out
mov
cld
jne
and
inc
out
dec
into
outsl
or
mov
les
sbb
cld
or
pop
sbb
or
das
js
mov
and
sub
mov
mov
loopne
pop
shrb
arpl
jo
call
pushf
lret
out
mov
jl
ljmp
mov
iret
dec
and
out
mov
sbb
bound
cmp
arpl
or
dec
push
cld
lock
loopne
sub
add
or
xor
dec
pop
ffreep
push
sbb
or
iret
jl
inc
std
mov
adc
lcall
cld
in
jno
std
jnp
cmp
cwtl
arpl
les
xchg
fiadds
adc
or
lea
test
jns
pusha
lods
push
sub
dec
popf
pop
jbe
cmc
aas
adc
shrb
push
xchg
shrb
jecxz
lcall
les
loopne
mov
xor
je
mov
mov
inc
lahf
pop
scas
xchg
les
pop
and
jmp
pop
les
clc
out
xchg
sub
mov
clc
outsl
inc
cmp
dec
aam
lea
or
push
imul
cmpsb
xchg
add
xor
into
repnz
lds
push
je
lcall
in
push
daa
jl
mov
popa
stos
cltd
fdivs
sub
mov
cmpsb
sbbl
arpl
hlt
sub
or
bound
inc
xor
or
jno
out
repnz
push
adc
mov
mov
out
push
mov
fldl
test
out
cli
lods
fdivrl
mov
lds
xchg
inc
xor
fstl
sub
loop
mov
ret
xor
jno
outsl
sub
cmp
mov
jmp
xchg
push
outsb
mov
mov
repnz
push
sub
sub
sub
lea
inc
pop
pop
ss
sbb
outsl
lahf
daa
adc
push
lods
sub
add
jno
cmp
pushf
adc
mov
shl
sub
into
je
lock
add
inc
mov
test
mov
out
jl
stos
test
mov
negb
call
jno
cmp
test
dec
xor
lret
popf
mov
pop
fisubrl
mov
scas
jb
xchg
scas
add
nop
mov
popf
leave
pop
add
and
sbb
sub
cmc
jge
pusha
movsl
push
loope
mov
pop
and
lods
ja
mov
bound
lods
pusha
dec
mov
aam
pop
cmp
loopne
jnp
cmp
pop
fsts
xor
mov
inc
fildll
ds
mov
gs
mov
add
xor
popf
adc
cmpl
fwait
lods
mov
xor
mov
adc
and
je
in
ljmp
inc
dec
sub
xchg
push
daa
outsl
jge
push
test
xchg
jl
push
lods
jl
inc
and
jecxz
mov
fnstsw
inc
test
pop
pop
pusha
adc
mov
loop
pop
aaa
out
insl
xor
mov
xor
leave
pop
mov
loop
out
pop
push
lcall
call
mov
ret
ljmp
add
imul
pop
fxtract
insb
push
fwait
idivl
addr16
rcll
leave
fstpl
negl
loop
cmp
pop
xor
into
je
jae
cwtl
pop
lods
and
inc
test
addr16
or
rcl
addb
imul
inc
mov
gs
in
insl
adc
jno
rclb
ficomps
adc
xor
jae
add
mov
dec
shlb
decl
cld
jmp
test
fcoml
sub
addr16
cmp
scas
xchg
sub
addl
rorl
sbb
mov
sbb
movsb
jae
jo
and
mov
pop
sbb
xor
push
ss
xor
pop
mov
sub
dec
inc
mov
mov
test
inc
dec
jge
rcrb
mov
test
adc
shrl
push
inc
cmc
sbb
and
mov
push
sbb
lcall
xorl
add
dec
and
out
ss
stos
gs
loop
cmp
xchg
imul
test
in
adc
sub
ret
daa
popl
dec
fisubrl
xor
and
or
add
pop
flds
das
les
pop
aas
jmp
push
pop
iret
pushf
nop
xchg
fistpl
inc
shr
outsb
mov
add
je
out
dec
and
jl
and
adc
into
sbb
ret
xor
insb
inc
jns
cmp
fadd
sbb
mov
hlt
xchg
repnz
lock
inc
add
lock
jmp
add
sub
leave
ja
or
rcrl
mov
pop
roll
push
roll
aam
push
dec
outsb
sub
je
sub
xor
fcomip
cli
stos
je
inc
hlt
loopne
mov
inc
adc
out
jg
stc
or
pushf
or
cli
aaa
dec
push
xchg
test
jbe
jb
jne
fsubrl
xor
ds
cwtl
or
insl
bnd
dec
lret
outsb
lods
ljmp
andl
xor
lret
or
jl
add
repnz
ljmp
push
movsl
idivb
mov
orb
cmpsb
sub
xchg
and
lret
mov
outsb
stos
and
cld
xchg
int3
add
push
mov
dec
stos
mov
mov
sbb
jecxz
push
mov
shrb
addl
mov
mov
xlat
ret
push
jl
ret
lea
inc
dec
add
test
mov
inc
sub
jno
aam
cmpl
mov
or
addr16
nop
je
repz
and
xchg
dec
je
and
or
adc
scas
scas
mov
and
jno
out
ret
push
fwait
pushf
mov
add
movsb
imul
mov
insb
nop
push
popf
pop
push
pop
les
je
shl
xchg
mov
mov
inc
sahf
mov
adc
dec
mov
mov
cmp
insb
into
push
rcl
subl
out
jecxz
leave
and
into
aad
arpl
push
testb
movsb
mov
call
fisubs
arpl
adc
add
mov
aad
int3
push
or
xchg
adc
xchg
clc
imul
mov
pop
dec
xchg
loopne
incl
sti
gs
cmpsl
sub
dec
leave
sub
jne
jae
fstpl
push
sub
pop
jb
jno
sahf
jl
repz
or
repnz
test
js
insl
adc
test
dec
and
sbb
mov
popf
cld
arpl
xchg
sub
cwtl
movhps
clc
pop
rcrl
push
cmp
icebp
shlb
cltd
fldpi
int
shr
adc
into
push
fisubrs
aad
and
xor
out
adc
cmp
push
xchg
pop
loopne
xor
popl
out
jbe
call
repz
lcall
in
shlb
inc
cmp
push
std
or
push
les
or
xor
adc
movl
pop
inc
and
add
cwtl
loope
loope
imul
jecxz
lret
js
loop
pop
xchg
cmp
mov
xchg
lahf
loop
test
jle
pop
mov
push
vmovups
int3
stos
mov
dec
inc
xor
rolb
ret
mov
push
ret
adc
adc
fnstcw
inc
icebp
stc
pop
mov
cmpsl
or
mov
cltd
push
push
lret
fidivs
sti
out
xor
fldl
jge
addr16
xchg
mov
and
cmp
repnz
mov
testb
xchg
mov
out
inc
xchg
inc
pop
mov
jecxz
je
popf
inc
stos
call
adc
add
sbb
fimuls
mov
sbb
clc
sub
das
dec
shll
test
fsts
jecxz
ja
adc
and
jb
insl
fnsave
aaa
push
sub
lret
sbb
xchg
repnz
popa
adc
dec
pop
je
mov
fs
xor
test
adc
scas
lds
aaa
lahf
sarl
shlb
jmp
cs
negl
mov
test
dec
and
frstor
pop
leave
jns
xchg
mov
push
aam
hlt
add
movsl
jo
xor
int3
cmp
cmp
or
rorl
and
dec
rorb
fcomps
mov
or
jecxz
and
push
int
xor
mov
rcrl
lea
test
or
loopne
stos
fstpt
pop
ja
xchg
dec
push
in
add
test
push
cmp
jns
mov
js
out
cmp
pop
es
stos
jecxz
popf
inc
leave
push
or
es
fst
adc
ret
dec
adc
add
lcall
or
jge,pt
and
test
xchg
fnstenv
movsl
push
xchg
mov
incl
pop
jae
jo
inc
aas
imul
call
ja
dec
icebp
sbbb
andb
subl
or
jbe
xor
enter
pop
xor
pushf
pop
fwait
jb
jge
dec
notb
inc
arpl
insl
imul
xchg
sub
jo
inc
pop
movsl
or
inc
cmpb
test
add
sahf
pop
scas
xchg
enter
jmp
movsl
xchg
cmp
loop
sub
fs
cmp
mov
push
xor
add
dec
mov
xchg
push
mov
dec
daa
jmp
adc
fistl
jnp
pop
jp
scas
sub
insb
mov
andb
lret
push
mov
mov
lret
xchg
sub
fisubl
lret
dec
adc
mov
xchg
stc
pop
icebp
int3
mov
ljmp
inc
dec
aam
std
and
push
and
stos
mov
mov
mov
dec
mov
push
jge
jnp
cmpb
and
pop
inc
add
add
pop
popf
into
inc
push
and
scas
jmp
mov
das
mov
pop
sbb
int
push
ljmp
mov
pop
add
cwtl
sub
cwtl
stc
cli
jbe
mov
std
aam
push
dec
icebp
in
mov
stos
push
dec
xchg
jns
mov
stc
bound
and
sahf
incl
subl
jae
xor
mov
ljmp
inc
push
and
jne
std
call
enter
jg
out
sub
lcall
push
lret
inc
cmpl
sub
pop
test
inc
loope
out
imul
nop
mov
and
inc
add
push
jne
add
mov
aad
fmul
mov
mov
cmpsb
ja
insl
enter
xor
fisubrs
lahf
movsb
pop
ja
mov
add
jge
decl
pop
rcrb
mov
bound
add
xor
into
das
imul
inc
mov
and
inc
mov
insb
andl
imul
loopne
call
in
sub
mov
and
in
push
sbb
pop
xchg
push
fisttpll
xchg
pusha
shrl
fwait
hlt
shl
mov
dec
and
add
and
std
or
cltd
pop
xor
jle
lods
mov
mov
sbb
lods
and
pushf
jle
mov
addr16
movsb
pop
and
jae
mov
test
adc
mov
cli
mov
mov
pop
sub
push
push
push
adc
loop
jnp
fnstsw
sub
mov
sarl
das
ret
pop
pusha
movsb
cmpsl
jecxz
ret
cld
xchg
and
jnp
lahf
and
mov
ret
stos
test
mov
stos
or
xchg
popa
or
add
shl
nop
xlat
addr16
repz
hlt
fsubrp
loopne
test
int
add
inc
les
leave
stc
sub
movsl
imul
or
mov
test
pop
bound
sbb
and
sub
dec
pop
xchg
sub
mov
repnz
mov
fbstp
inc
jg
cwtl
stc
test
imul
addr16
and
mov
xorps
rcr
push
jle
inc
loop
xchg
cmp
jle
pop
das
mov
pop
ljmp
rclb
mov
ss
cmp
xchg
ret
mov
cmp
push
inc
and
lret
lret
arpl
pop
bound
cmp
cltd
test
int3
shlb
sub
popa
cltd
loopne
rcl
fdivs
adc
call
mov
sub
pop
and
jg
cmpl
cmp
sbb
out
push
jbe
lea
cwtl
mov
push
arpl
lret
gs
inc
ds
inc
pop
outsl
bound
and
rorb
iret
decb
hlt
stc
daa
sarb
stos
mov
mov
stc
dec
mov
test
mov
test
sbb
aad
cmp
pop
push
rol
mov
dec
mov
in
addb
pop
xchg
mov
mov
mov
cmp
jno
loop
ljmp
data16
repnz
xorb
mov
insb
mov
lods
push
lds
xor
mov
pusha
push
mov
xchg
dec
adc
call
xchg
clc
pop
aaa
idivb
pop
clc
sub
pop
push
add
push
jg
loope
mull
mov
pop
iret
stos
mov
xor
xor
push
pop
jbe
adc
ss
aad
xlat
jge
jne
insb
das
test
fwait
cmp
cmc
sbb
jge
mov
das
iret
fstps
or
mov
repnz
jge
outsl
cmpsl
mov
or
fwait
std
sbb
inc
in
push
add
add
cmpsb
mov
push
je
mov
lea
or
or
and
cmp
icebp
push
cwtl
and
mov
push
fs
hlt
sub
or
xchg
outsb
xor
xchg
loop
loopne
jg
mov
js
mov
jge
ss
aam
dec
and
jmp
xchg
dec
xor
ret
in
lret
jnp
adc
push
in
inc
mov
loope
cmc
jmp
mov
aad
xchg
dec
mov
dec
cltd
out
xchg
stos
movsl
adc
cmpsl
fcompl
pop
pop
inc
push
jp
jno
stos
out
outsl
mov
enter
jle
mov
scas
sub
jecxz
loopne
movsl
mov
divl
mov
xor
ffreep
jae
mov
out
xlat
in
inc
add
push
mov
push
cmp
pusha
ret
mov
jne
mov
xor
mov
adc
out
iret
xchg
sarl
jo
mov
lahf
out
mov
xchg
fisubl
sar
jl
in
mov
lahf
and
xor
dec
adc
cmp
cmp
mov
rcrl
shlb
bound
jno
mov
cmp
mov
jg
sbb
push
pop
xchg
mov
mov
test
pushf
jg
movsb
cli
jle
or
lock
in
xchg
jmp
cmpb
loopne
dec
jp
aas
sub
push
aaa
sti
push
push
cmpsl
xor
pushl
jns
jge
mov
mov
and
std
xchg
push
mov
sbb
inc
inc
cli
shrb
mov
sub
jl
loop
scas
mov
mov
mov
stc
dec
in
sub
fnstcw
repnz
rol
outsb
xor
repz
and
ficompl
xchg
sbb
sub
ljmp
pop
mov
and
test
dec
xchg
imul
fmuls
cmpl
into
inc
sbb
jecxz
scas
mov
add
xchg
sub
cmp
and
mov
push
jo
movsl
mov
xchg
xor
push
sub
pop
ss
push
dec
mov
in
test
lcall
adc
adc
dec
mov
mov
stos
pop
inc
in
mov
and
cmpsb
push
mov
test
stos
lcall
mov
pop
movsb
ficoms
fwait
mov
xchg
mov
sub
fldcw
aas
xchg
pop
sub
pushf
or
mov
dec
xchg
sub
rcrl
mov
movsb
cmpsb
rol
xor
mov
movsb
sbb
lret
int
mov
mov
mov
mov
outsl
lock
rcll
adc
sti
negb
js
outsb
push
mov
xchg
adc
test
lahf
jnp
mov
das
fisttpll
inc
jge
jmp
sub
loop
cmp
pusha
hlt
sub
aas
mov
xchg
jnp
push
repnz
pop
pop
mov
xchg
dec
je
mov
shlb
jle
aam
xchg
fsubrl
mov
dec
sbb
arpl
rcll
dec
push
int
mov
push
repnz
xchg
push
mov
mov
movhps
pop
sti
mov
pop
lea
bound
addr16
int
pop
andb
mov
loope
adc
pop
cmc
pop
push
in
xchg
roll
dec
jmp
mov
cmp
push
xor
cwtl
movsl
mov
adc
xchg
dec
or
cmpleps
data16
sub
pop
push
lds
loopne
xchg
inc
jmp
lods
add
mov
jns
jo
ds
test
ret
mov
xor
cmp
rorl
mov
fildll
xor
pop
mov
mov
pop
push
lods
inc
jp
es
lret
mov
stc
aad
sub
and
daa
adc
mov
popa
cmp
jg
fistpl
add
jmp
mov
out
mov
in
push
icebp
xlat
cmp
jae
fistpl
lods
xor
add
and
adc
jae
mov
adc
xor
fdivr
jg
mov
mov
push
je
incb
repnz
adc
mov
inc
aas
xchg
add
dec
dec
cmp
sbbl
fadds
test
cli
jg
dec
inc
pop
enter
test
pop
sub
sub
negl
std
inc
stc
arpl
cmp
jno
lds
out
out
aad
cld
pop
mov
leave
sbb
mov
fiadds
imul
dec
push
lcall
cltd
add
fidivrl
test
callw
cmpsl
push
mov
mov
dec
mov
mov
adcb
add
xchg
mov
pop
sbb
pusha
in
roll
mov
xchg
mov
arpl
xor
aas
and
ret
insl
cwtl
mov
sbb
xchg
xchg
jp
jnp
push
lret
push
adc
pop
lods
mov
xchg
aas
fdivl
mov
out
inc
xchg
push
push
dec
xchg
cmc
insl
lds
and
mov
data16
clc
push
xchg
in
dec
popf
dec
and
popa
xchg
rcll
add
nop
bound
cmpl
fisttpl
pop
jnp
daa
test
sub
dec
lahf
in
mov
pop
dec
test
repnz
sub
push
arpl
cmc
orb
push
inc
out
sbb
sbb
ljmp
outsl
mov
or
jno
pop
adc
pop
lret
stos
fcmovu
push
dec
int
push
add
pop
jecxz
movsl
std
dec
dec
or
cmp
xor
jg
jmp
dec
xchg
and
arpl
sahf
pop
add
sbb
loop
pop
sub
inc
pop
xor
lods
pop
inc
push
or
mov
and
lcall
add
insl
int
dec
imull
stc
and
in
pop
imul
xor
inc
insb
dec
ret
ds
loop
jae
paddq
movsl
mov
icebp
dec
sub
aam
jmp
push
in
popf
and
add
pop
scas
enter
test
cld
cmpb
dec
sbb
imul
int3
pop
xor
std
adc
imulb
jmp
scas
icebp
sub
cwtl
inc
mov
arpl
or
jae
xchg
leave
inc
mov
call
lahf
sub
fsts
pushf
cltd
orl
cmp
xchg
je
jbe
pcmpeqb
test
mov
das
inc
enter
or
pop
dec
pop
and
mov
adc
icebp
imul
jb
insb
out
mov
xor
mov
imul
mov
leave
clc
xor
scas
cli
xchg
sbb
out
sbb
push
scas
mov
lcall
pop
insl
ret
das
mov
cli
sbb
es
outsb
xchg
adc
add
lock
nop
test
repz
inc
dec
and
mov
sbb
fdivr
pop
adc
cmpl
jnp
xor
mov
nop
add
adc
push
in
pop
xchg
pop
ss
lret
pusha
orl
lret
addr16
adc
push
push
je
xchg
mov
jmp
hlt
mov
dec
add
inc
push
add
sbb
push
rcll
out
shrl
idiv
int
mov
ret
push
inc
loopne
rcrl
dec
sbb
adc
or
roll
out
dec
ret
xchg
mov
xchg
test
inc
loopne
mov
pop
ficompl
imul
cs
inc
pushl
mov
jl
or
cltd
jmp
insb
and
ljmp
imul
and
pusha
cwtl
mov
sbb
test
test
cmpsl
daa
repz
sbbb
cmp
out
xchg
out
in
in
xorl
xor
xorb
repz
xorl
cmp
or
xchg
and
add
loop
jns
lcall
jp
mov
pop
dec
push
cmc
push
mov
loope
add
cmpl
lods
push
mov
data16
stc
call
xchg
enter
push
mov
pop
xor
mov
xor
cmc
xor
push
sbb
inc
mov
test
adc
or
lea
dec
aad
test
outsb
or
push
int3
lock
xchg
xchg
lea
sbb
or
fdivl
pushf
mov
insb
xchg
ss
scas
jae
add
and
dec
aad
call
push
mov
dec
mov
push
pop
sbb
mov
sarb
xor
imul
imul
mov
hlt
cwtl
add
or
or
xchg
or
jo
xchg
mov
in
inc
loopne
xchg
mov
add
mov
mov
jae
or
xor
scas
nop
repz
aad
mov
scas
movsb
push
pop
into
imul
hlt
cmp
cmp
lret
add
sbb
arpl
mov
push
jge
stos
cmp
dec
mov
iret
les
iret
fbstp
test
scas
in
loope
ret
inc
cmp
in
rcrb
insb
add
fwait
pop
sahf
xor
les
in
das
paddsb
arpl
std
jp
mul
push
std
call
fisttpll
xchg
cmp
enter
gs
xchg
cmp
xor
lcall
mov
mov
mov
dec
imul
leave
addr16
cmp
push
outsl
mov
add
adc
adc
sbb
mov
into
xchg
jb
sub
jne
cmp
imul
scas
gs
dec
xchg
fdivp
jnp
add
sub
test
inc
not
jns
incl
daa
imul
jmp
fmulp
je
scas
mov
pop
fildl
outsl
rol
or
jo
les
icebp
and
loopne
popf
xor
test
cmp
add
cli
sbb
pop
sub
lock
inc
loopne
push
movsl
dec
cmp
cmpsb
dec
pop
adc
push
push
into
xchg
mov
push
mov
cmpsb
cmp
mov
lds
dec
sbb
jmp
and
mov
pop
dec
xor
jge,pt
arpl
pop
xchg
movsb
jecxz
leave
jp
lret
add
insb
or
or
les
cmp
push
mov
jo
pop
add
xchg
push
std
mov
loop
pushf
cli
test
mov
mov
mov
or
sbb
or
int
insl
jp
jnp
shrb
loop
sti
and
or
and
into
push
sbbl
sub
or
arpl
cmpsl
std
into
lcall
jnp
ret
das
and
out
cwtl
test
enter
add
les
shlb
dec
mov
jno
lods
int3
xchg
xchg
loop
cmpsb
addr16
decl
loop
push
imul
lods
sub
add
push
cmp
jg
mov
xor
jecxz
push
sbb
test
lods
rclb
xor
pop
and
xor
xchg
inc
jne
pop
xor
xor
mov
mov
sub
dec
pop
cmp
pushf
in
jecxz
xor
adc
rcrl
out
movsb
cmp
mul
in
push
cmpsl
mov
or
or
adc
insl
lcall
lret
jno
cs
push
cmpsl
fstpl
mov
xchg
xor
sbb
jge
mov
lea
sub
inc
pop
jmp
outsb
or
out
adcl
xor
xchg
mov
aam
dec
outsb
adc
pop
jb
jmp
outsl
enter
sbb
jecxz
mov
add
into
jp
dec
jno
push
push
cli
mov
dec
out
or
mov
daa
fcmovnb
pop
jne
mov
mov
mov
or
pop
sub
addb
out
sbb
push
xor
roll
adc
imul
in
and
mov
xor
stos
dec
lods
mov
in
pushf
ficomps
rorb
push
sbb
pop
aaa
push
icebp
adc
fdivs
sub
cwtl
in
jo
testl
outsb
and
dec
xchg
lods
jne
ja
gs
add
pop
stos
insl
pusha
nop
mov
mov
xor
mov
add
gs
mov
div
lods
test
loopne
pusha
dec
dec
sbb
dec
notb
mov
hlt
sbb
xor
addr16
gs
pop
jne
xor
mov
jnp
repnz
stos
sub
dec
rorb
xor
movsb
mov
mov
out
mov
or
negb
out
cmpsl
and
in
sub
add
inc
sbb
jle
sahf
xchg
popa
negb
add
lods
push
inc
and
addr16
sbb
mov
ficompl
mov
jnp
jo
xchg
add
lea
test
xchg
rcr
imul
int
out
ret
cmpsb
test
push
cwtl
gs
xchg
in
sub
jb
sbb
add
cmp
scas
cmp
mov
lds
push
insb
mov
sbb
sub
popf
es
repz
imulb
leave
sarb
enter
lahf
fs
push
push
xor
mov
stos
push
nop
rcl
add
repz
mov
repnz
and
mov
aam
and
aaa
out
add
lcall
mov
hlt
gs
and
pop
add
adc
scas
shlb
leave
or
xchg
mov
mov
js
pop
adc
mov
xor
mov
icebp
popf
xchg
fwait
push
pop
lret
cmp
inc
or
hlt
adc
int
andl
dec
inc
inc
mov
imul
mov
movsl
sub
fstps
repz
mull
inc
mov
sub
testl
cmp
imul
jo
mov
inc
rcr
orl
pop
adc
stos
cltd
enter
mov
add
mov
lcall
ds
xchg
and
imul
cmp
cmpsb
push
push
mov
insb
nop
movsb
mov
mov
loopne
lea
es
lock
lret
imul
sub
inc
xlat
mov
mov
in
addr16
xor
mov
in
pop
int3
dec
or
faddl
cmp
cltd
rcr
xor
mov
or
adc
sbbl
imul
cmp
daa
mov
adc
stos
adc
xlat
pop
repz
rclb
adc
sub
push
or
sbb
je
loopne
icebp
adc
clc
jp
test
cltd
mov
repnz
dec
insl
movsb
aas
mov
xchg
xor
push
mov
sahf
pop
dec
std
mov
mov
in
dec
sarl
std
cld
imul
or
pop
adcl
dec
and
mov
and
out
xor
notb
add
mov
or
jno
out
sbb
inc
es
sub
arpl
add
frstor
pop
cmp
cmp
sbb
jno
pop
ds
dec
push
jne
shrb
ja
add
sbb
cs
outsl
insl
adc
add
ss
jp
int
loopne
xchg
les
fists
and
test
adc
mov
jb
in
iret
sbb
repnz
lret
cltd
mov
rolb
pushf
rorb
xchg
hlt
pop
sub
je
fwait
mov
clc
mov
lods
dec
and
and
push
nop
dec
movl
in
mov
xchg
insl
fnstcw
push
mov
fdivs
mov
test
or
xchg
xchg
loop
arpl
pop
fcomi
movsb
jae
test
cmc
vmwrite
je
mov
mov
pop
scas
jge
adc
sub
aas
out
outsl
dec
dec
rcrb
icebp
andl
popf
or
fsubp
aaa
and
sbb
xchg
xlat
lcall
stos
pusha
leave
lcall
pushf
fs
push
mov
mov
repnz
cmc
xchg
hlt
lods
fmulp
mov
and
negb
mov
jbe
and
xchg
sbb
aas
sub
jb
and
jle
mov
out
inc
jge
mov
mov
push
sbb
shll
push
add
mov
push
jo
mov
fldcw
stos
xor
pop
data16
sub
jmp
lcall
xor
cld
addb
xchg
cmpsb
inc
jno
popf
stos
mov
clc
push
jp
add
mov
out
fsubl
lahf
iret
nop
push
sbb
mov
pop
xor
mov
sbb
push
mov
loopne
ror
popa
or
push
sbb
stc
mov
test
pop
mov
mov
lock
lret
sub
pusha
bswap
cwtl
push
jmp
dec
mov
aas
cld
arpl
enter
lahf
dec
adc
insl
andl
insb
xor
or
fwait
ret
jb
push
cs
jo
aas
outsl
aad
pop
fwait
lea
mov
ret
imul
and
popa
xorl
push
adc
jb
movsb
and
in
fcom
sbbb
sbbb
add
push
movsb
push
ret
or
loop
sub
jno
sbb
mov
mov
mov
divl
mov
enter
mov
cmc
lods
iret
sub
loope
fnstenv
add
out
mov
inc
mov
dec
push
int
xchg
cmc
test
mov
mov
fstl
push
in
aam
sub
dec
push
insb
add
lods
test
dec
jo
mov
push
dec
movsb
lahf
push
sub
in
and
push
jecxz
daa
dec
mov
fxch
test
push
jp
pop
call
insb
cltd
jae
imul
lea
dec
je
cld
xchg
sub
push
dec
cmp
mov
pop
jne
jge
mov
out
sbb
mov
leave
cld
movsl
xchg
cmp
mov
xchg
cwtl
jae
repz
fnsave
lock
imul
dec
repz
sub
or
adc
jae
fimuls
xor
mov
repz
push
jl
pop
inc
sub
out
push
addl
fidivrl
or
lahf
incl
outsb
pusha
or
pushf
jmp
ljmp
andb
lods
or
xor
mov
test
in
ret
lds
bound
xchg
cmc
sbb
mov
ja
addr16
leave
xor
mov
lret
jge
pop
test
fwait
push
hlt
push
xor
push
sub
pop
dec
cmp
dec
aam
pop
out
pop
inc
or
faddl
xor
xchg
lret
stos
cs
lret
dec
dec
push
out
inc
lock
cltd
rclb
pop
jle
imul
push
mov
sub
movsb
inc
in
inc
arpl
sub
cmpsb
cmp
sbb
aaa
scas
inc
adc
adc
sbbl
or
movsb
test
jno
adc
ljmp
xchg
mov
adc
pop
push
xchg
push
or
leave
sete
rcrl
mov
lahf
add
iret
aam
push
loop
push
lret
inc
int3
dec
icebp
cltd
add
insl
mov
pushf
je
enter
loop
outsb
adc
ret
scas
in
push
push
addb
xlat
hlt
xor
out
mov
mov
stos
add
mov
inc
mov
sub
sbb
or
cmp
frstor
cmp
outsl
cmp
movsl
cwtd
ret
jb
xchg
xchg
shl
sub
mov
test
add
clc
fsubr
adc
jbe
mov
sbb
jp
xchg
xchg
cmp
push
lret
lock
shll
stos
push
pop
in
push
test
rsm
or
push
out
push
inc
sub
cmpsl
sub
dec
clc
fs
aad
fisubrs
sub
cmp
dec
pop
xchg
sbb
imul
cmpsb
xor
mov
jle
mov
je
push
iret
dec
sub
push
sub
test
sub
sub
add
je
jge
adc
and
sarb
pop
jne
cwtl
movsl
or
mov
add
sbb
jg
mov
aaa
movsb
lods
pop
xor
sbb
rep
jae
jbe
mov
test
add
xchg
xchg
pop
xor
cltd
test
lahf
mov
imul
mov
mov
das
and
popf
movsl
fidivrl
xchg
aas
ds
and
movsl
jg
jmp
sahf
fsubrl
fdivp
daa
outsb
push
out
add
clc
jmp
fmull
and
insl
leave
sub
xchg
mov
xchg
pusha
lods
fdivl
or
push
test
jno
data16
mov
int3
adc
repz
sti
cmp
add
pop
inc
and
jae
sub
fsubl
push
fimuls
lret
inc
inc
cmpsl
dec
loopne
cmp
or
mov
sub
orl
repnz
call
pushf
scas
movsb
in
stos
inc
out
sbb
pop
inc
push
icebp
imul
movsl
es
shlb
test
jle
mov
xchg
add
jne
shl
jp
pop
out
je
cltd
cmp
and
inc
and
shlb
loope
mov
or
inc
and
mov
cmpsl
test
cmp
inc
hlt
cmpsl
cltd
add
inc
bswap
lret
sahf
mov
adc
out
shld
mov
push
out
imul
add
movsb
in
inc
int
pop
push
daa
and
xchg
in
or
imul
mov
and
xor
clc
xchg
pop
imul
jb
repz
xor
mov
clc
pop
push
dec
mov
bound
add
and
or
fistpl
movswl
mov
dec
flds
in
jge
push
adc
dec
sub
jp
and
mov
dec
loope
mov
push
mov
mov
inc
sub
xlat
ret
mov
sub
mov
inc
pop
or
adc
cli
sti
jle
ret
jne
mov
enter
xchg
std
dec
sbb
scas
repz
aad
imul
xchg
push
stos
fstpt
jns
lahf
jns
push
fcompl
cmc
mov
fdiv
ret
xchg
xchg
push
pusha
add
fmuls
sbb
pop
in
or
xchg
scas
movsb
xchg
lds
shrd
stc
out
ja
mov
mov
xchg
hlt
loopne
es
xchg
stos
push
fcoml
jge
flds
jp
or
out
jp
in
cmpsb
push
sub
into
pop
lds
or
stc
je
loope
fcoml
call
sub
or
pop
push
adcb
lcall
mov
test
add
xchg
nop
out
sub
fwait
sub
sbb
adc
imul
shll
das
fwait
mov
rorl
into
aas
sbb
xchg
jae
jne
fsubrs
add
mov
stos
clc
inc
jge
jp
mov
ror
or
mov
insl
mov
aad
pop
xlat
mov
mov
jb
imul
ret
orb
mov
push
add
je
mov
or
sub
jle
movsl
loopne
rcr
inc
push
pop
cmp
outsb
xchg
es
icebp
dec
cwtl
cmp
adc
pop
in
sbb
idivb
test
xchg
mov
mov
fwait
mov
cs
sub
push
sub
adc
push
shr
std
pop
push
imul
scas
mov
in
insl
in
cmp
inc
sub
pop
arpl
mov
hlt
js
inc
xorl
inc
xchg
inc
je
push
loope
jns
mov
lods
mov
jecxz
dec
sbb
js
cmp
push
frstor
jo
mov
sti
js
mov
pop
test
test
and
fsubs
nop
faddl
cltd
out
frstor
cli
xchg
imul
arpl
push
sbb
pop
and
lock
mov
dec
mov
add
arpl
in
jnp
mov
loopne
push
cwtl
push
inc
xchg
cmp
in
sub
lea
lahf
aaa
mov
stos
clc
xchg
stos
pop
jmp
adc
pop
popf
rorl
add
ret
pop
dec
test
imul
inc
leave
shll
dec
shll
stc
adc
aaa
pop
mov
dec
adc
sbb
adc
xor
ret
xchg
push
mov
scas
push
cmp
mov
mov
imul
aad
mov
cli
loope
fistl
data16
je
aam
and
or
mov
sub
jae
std
and
popf
dec
outsb
inc
adc
mov
add
dec
adc
movsl
mov
jne
mov
repnz
shll
std
lahf
test
imul
jno
popa
test
pop
inc
cs
testl
clc
gs
popa
push
push
jecxz
sub
rcr
movsl
mov
in
lock
adc
test
inc
add
mov
pushf
fidivs
pop
sbb
lods
sub
mov
mov
sub
int3
pop
jae
jp
icebp
cli
loopne
mov
pop
adc
jnp
insb
insl
fistl
nop
push
mov
sbb
ret
mov
in
lahf
hlt
mov
es
aam
mov
iret
sub
adc
push
iret
add
rcll
cs
idivb
jg
clc
dec
cmp
cli
ss
push
shl
mov
sbb
popa
ja
push
mov
je
sbb
out
jle
xchg
and
cli
push
fnstsw
es
icebp
in
mov
rcr
pop
incl
cwtl
xor
add
push
inc
jp
mov
xlat
cmp
push
sub
dec
and
add
aad
push
pop
jns
xchg
pop
or
mov
jl
scas
sub
aad
ret
xchg
mov
out
aaa
outsb
xchg
repz
pop
sbb
cli
int
jecxz
cmp
flds
stos
cmc
dec
lock
mov
stos
add
dec
xor
pop
adc
mov
scas
and
in
ljmp
xchg
imul
rol
inc
push
add
pop
repnz
popa
adc
mov
jbe
xorb
xchg
cmpsl
push
add
fs
push
ljmp
cmpsb
lret
pop
pusha
mov
int
fdivrs
icebp
int3
xchg
inc
outsl
jns
jg
mov
mov
jg
fs
push
rcrb
ret
mov
dec
shl
jg
sbb
out
lret
sub
cli
sub
insb
je
sar
iret
cli
in
jg
lret
dec
frstor
xchg
sbb
fs
enter
push
aam
fisubrs
repz
adc
arpl
test
movsb
xor
pop
aas
xchg
cwtd
add
mov
out
add
stos
scas
andl
and
push
int3
jmp
shll
xlat
out
lret
mov
lcall
repnz
xchg
imul
and
imul
insb
and
or
cli
shll
aam
dec
jb
sbb
out
stos
or
fdivrs
mov
js
mov
into
pusha
adc
xorb
or
mov
mov
orb
lret
frstor
aam
or
pop
ffree
test
adc
jecxz
lea
or
in
test
mov
sbbl
sub
fwait
clc
insb
lea
push
sbb
test
xor
fstps
inc
inc
sahf
ret
cmp
push
test
mov
mov
jae
es
pop
std
imul
movsb
sbb
push
adc
inc
inc
mov
sub
push
push
into
mov
cmc
xlat
xchg
lock
fdivrs
cs
jle
pushf
mov
ljmp
pop
dec
sbbb
rcll
push
mov
xchg
aad
ss
movsl
dec
jmp
mov
jno
jo
sahf
in
sahf
sti
in
adc
jnp
stc
out
push
rcr
or
lret
pop
lea
jne
lret
pop
lds
adc
aad
test
mov
stos
popl
pop
jno
jl
mov
cmp
xchg
in
testb
push
sti
popf
jg
imul
outsb
ret
nop
lcall
add
fcmovne
xor
push
test
adc
aam
test
mov
and
xor
mov
xchg
add
sub
pop
sbb
sbbl
sbb
xchg
rcrl
push
jmp
sti
mov
loopne
cmp
mov
outsl
and
lcall
mov
mov
pop
cmp
inc
movsl
fcomp
lret
out
push
aad
or
ljmp
sbb
pop
cld
fldl
xor
push
std
test
les
arpl
xor
lds
aad
sbb
mov
inc
jns
stc
in
mov
ja,pn
push
mov
sub
das
test
outsl
orl
lds
sbb
aam
and
lahf
mov
fisttpl
pop
xchg
push
pop
sti
xchg
mov
rcrb
mov
lcall
mov
imul
aas
push
imul
lret
enter
arpl
leave
leave
push
lret
popf
lret
iret
popa
addr16
pop
test
mov
test
xchg
test
mov
sbb
mov
inc
push
jecxz
adc
jns
in
cld
sub
shrl
xchg
xchg
das
mov
gs
data16
dec
stc
in
push
loop
loope
sub
sbb
and
test
pop
mov
inc
scas
add
jmp
fcmovnb
inc
stc
in
sbb
stc
iret
push
mov
pop
int3
repz
sar
jp
mov
into
adc
aam
xchg
sbb
push
testb
adc
push
push
pusha
shlb
loope
repnz
into
pop
sbb
je
lret
ja
xor
push
dec
mov
inc
sub
sbb
inc
pop
jns
push
repz
xchg
mov
adc
xor
sub
mov
rcrb
inc
dec
movsl
pop
push
push
xchg
shlb
fbstp
mov
fwait
rolb
insb
outsb
dec
adc
adc
pop
pop
sbb
mov
movb
stc
insl
xchg
adc
sbb
cwtl
sti
lods
or
jns
psllq
loop
std
pop
pusha
add
adc
ss
loope
fadds
hlt
enter
mov
jbe
xchg
push
push
jbe
je
je
fwait
loope
and
and
jno
mov
or
test
insb
jno
mov
lock
xor
ds
pop
add
loopne
xchg
sti
imul
cmp
repz
jnp
adc
test
inc
insb
mov
addr16
jnp
sti
xchg
out
fisttpll
inc
mov
addr16
jmp
mov
jno
stos
cmp
ljmp
dec
mov
push
adc
mov
mov
sbb
loopne
lret
scas
fstpl
add
loop
loop
ja
sti
cli
xor
orb
push
fstpl
mov
into
pop
cmp
aam
mov
mov
xchg
nop
call
mov
cmp
xchg
stos
out
cs
adc
sbb
out
mov
dec
insb
addr16
mov
lret
push
sbbl
repnz
out
push
hlt
push
xchg
push
testb
mov
sbb
outsb
outsb
fdivrs
out
shr
sub
mov
pop
pop
loop
mov
rolb
jns
fbld
dec
jg
mov
jg
mov
fwait
jo
jl
fcoml
and
and
mov
xchg
jecxz
sbb
push
add
dec
xchg
pop
in
jb
pushf
pop
mov
xlat
mov
or
xchg
push
pop
in
xchg
lea
pop
or
sub
adc
jbe
jmp
mov
inc
nop
outsl
mov
jle
ljmp
push
push
cli
bound
shl
pop
mov
scas
mov
call
das
fcomps
or
inc
lret
repz
inc
outsl
sbb
and
xchg
mov
mov
xlat
sbb
rcll
sub
andb
pop
sub
cmp
add
add
dec
push
jecxz
int3
pop
dec
incl
inc
cmpsl
dec
aad
xchg
and
je
in
push
imul
mov
fisttps
xchg
lret
mov
repnz
es
es
push
pop
push
add
and
mov
adc
adc
out
lcall
push
inc
ret
or
sbb
mov
in
mov
fnsave
jb
sub
shr
ficoml
ret
stos
out
xchg
jmp
adc
pop
subb
xchg
aas
inc
in
and
repnz
fidivrl
sub
repnz
mov
dec
mov
pop
test
pushf
xchg
out
push
add
push
sbbl
in
add
ror
popf
imul
cmovno
negl
push
cmp
test
lds
adc
ret
outsl
ljmp
mov
and
repnz
add
dec
iret
pop
mov
inc
fnstsw
dec
adc
xor
cli
adc
imul
sahf
jns
aad
subl
inc
test
and
bound
cli
mov
adc
scas
xchg
sbb
lock
push
aaa
outsl
inc
arpl
lret
push
sbb
dec
xor
outsl
inc
add
sti
push
xchg
test
jne
push
xchg
mov
mov
popa
shl
xor
cmp
mov
adc
inc
cmp
xor
icebp
push
push
push
mov
lret
test
xor
cmpsl
fisttps
push
lret
fiadds
pop
push
fiaddl
cmp
cwtl
in
cmp
inc
data16
cld
iret
das
ficomps
mov
push
xor
aad
xchg
int3
shll
lret
sbb
aam
fcmovnbe
in
cmpsb
sbb
bound
pushf
sahf
inc
stc
cmp
out
push
test
cs
jo
xor
jo
pop
std
dec
outsl
call
sbb
popf
cmp
adc
cltd
in
mov
cmp
jo
jecxz
call
xlat
cmp
mov
mov
dec
lods
mov
dec
add
sbb
add
idivb
daa
les
mov
jne
gs
mov
jne
add
inc
mov
push
add
rclb
sbb
addl
pop
imull
dec
cmp
in
cmpsl
jmp
out
push
pop
test
mov
or
test
pop
adc
loopne
dec
adc
cli
jno
pop
inc
movsb
clc
jno
movsl
fildll
jne
idivl
cmpsb
leave
wrmsr
xorb
ret
fdivrl
sbb
pop
scas
jbe
loopne
call
cmp
jb
adcb
jae
cwtl
push
push
mov
fildll
xchg
or
add
fwait
mov
mov
cwtl
add
push
push
mov
leave
dec
inc
jnp
jno
jl
inc
in
push
js
sbb
mov
add
dec
mov
cmp
in
xor
dec
stos
in
push
test
call
adc
sahf
sar
mov
iret
sbb
xor
xchg
lds
or
out
inc
cld
mov
jo
sti
inc
mov
mov
ret
test
push
test
sub
lock
std
clc
in
sbb
outsb
cmp
out
dec
scas
xchg
or
dec
inc
jg
adcb
adc
ret
out
mov
pushf
les
das
sub
sahf
xchg
sub
adc
mov
movsl
aad
adc
sub
push
imul
xlat
xchg
decb
cmp
pop
add
or
pop
xchg
fisubrs
bswap
inc
jecxz
xchg
lcall
mov
sub
cmp
addb
sbb
cmp
pop
ljmp
rcrb
iret
inc
adc
adc
bound
dec
push
rclb
xor
jl
jbe
jp
mov
or
and
jbe
inc
sbb
jae
fldt
lods
push
cmp
and
mov
jp
imul
insl
pop
rorb
push
ds
xchg
les
mov
ja
sub
inc
pop
mov
mov
mov
andl
sub
repz
arpl
cld
ss
lods
cmp
in
xchg
sbb
sbb
or
insl
jle
xor
ret
lock
ret
rcr
add
push
fs
jmp
in
sahf
or
dec
ds
push
arpl
mov
lret
push
popf
dec
push
loopne
jecxz
jl
add
faddl
fisttpll
fdivrp
jge
fsubrl
mov
add
clc
sbb
iret
fdivrl
subl
adc
push
and
jns
xor
xchg
mov
mov
pop
mov
adc
xor
xchg
in
ficompl
push
int3
test
jge
and
jno
and
jle
sahf
pop
xor
mov
dec
dec
mov
adc
add
mov
shll
sub
sub
xchg
sbb
rcrl
lods
pop
add
xor
fdivrs
jg
mov
sahf
dec
sbb
adc
xor
xor
stos
mov
cmp
jo
cmpsl
sahf
jg
jb
lock
sbb
lods
and
ret
rclb
jbe
stos
sub
popl
push
jb
int3
dec
xor
movsl
out
lds
mov
xor
push
decl
push
sbb
lret
inc
mov
imul
sub
clc
jle
call
insb
jno
fstp
xchg
sub
adc
or
and
fildl
sub
sbb
cld
stc
dec
jnp
sub
jns
rcll
pop
lods
and
add
fcmovbe
jl
xchg
dec
xor
icebp
repz
scas
jp
les
fs
imul
sub
add
jnp
lahf
xor
mov
notb
frstor
push
mov
jmp
js
mov
xchg
xchg
jbe
push
outsb
movsb
push
mov
shlb
xor
sub
js
dec
es
mov
sar
stos
push
clc
sbb
xchg
and
sub
pushf
or
mov
sub
pop
nop
cltd
inc
mov
pop
notl
in
mov
lret
cmpl
mov
and
cmpsb
inc
mov
push
adc
mov
mov
mov
arpl
cmp
movsb
mov
imul
push
inc
xchg
jo
mov
ja
jnp
pop
or
push
push
and
dec
jmp
or
jge,pt
mov
fidivrs
mov
jnp
mov
xor
rcl
mov
pop
and
data16
call
lods
push
add
out
cld
jecxz
ficoml
dec
sti
test
inc
jns
dec
adc
pop
test
sbb
lea
jnp
fidivrs
popf
xlat
dec
pop
and
je
pop
loop
dec
sub
cmpb
cld
std
out
stos
sbb
push
add
dec
shr
test
div
fwait
mov
mov
pop
data16
inc
in
pusha
dec
inc
dec
test
xchg
xlat
jle
xchg
icebp
sub
dec
dec
pop
sub
inc
insl
scas
mov
mov
dec
popf
rorb
in
stos
mov
or
cmp
mov
sub
scas
pushl
pop
dec
popa
mov
inc
and
xor
push
pusha
sub
fnsave
mov
std
pop
adc
addb
test
mov
pusha
mov
fldl
mov
inc
push
ret
inc
mov
xchg
ss
jo
pushf
bound
pop
rcl
shr
jl
lods
push
add
daa
push
icebp
les
and
pop
add
hlt
jo
dec
out
int
cltd
pop
mov
xchg
pop
cmc
pushf
or
jns
addr16
mov
mov
jb
aad
inc
pop
fldcw
pop
push
sub
push
mov
fdivs
out
ja
add
mov
jb
cmc
xlat
or
test
or
mov
xor
push
cwtl
out
push
inc
fs
xchg
xlat
rorb
movb
packssdw
pop
pop
xchg
mov
mov
clc
fisubrs
and
enter
xor
popf
and
add
pop
in
mov
dec
pushf
mov
imulb
mov
mov
mov
xor
push
jl
pop
push
dec
mov
adc
adc
jge
mov
sub
pusha
inc
pop
shlb
pop
pusha
mov
out
mov
mov
sub
or
iret
imul
data16
movl
test
xchg
dec
rcr
pop
std
sub
iret
push
pushf
and
loopne
sti
pop
jns
mov
lret
inc
xchg
inc
dec
add
nop
sahf
movsb
icebp
clc
fsts
adcl
sub
in
jb
cld
mov
push
clc
insb
mov
shrb
mov
popf
mov
lea
jbe
xlat
call
rcrb
lock
or
jnp,pn
inc
add
mov
and
cmp
mov
out
sbb
sbb
rcr
clc
sub
stos
xchg
push
enter
sub
and
imul
sub
add
cwtl
xlat
xchg
pusha
icebp
jl
shl
das
cmp
mov
jns
and
cs
enter
dec
iret
mov
popf
in
jl
aas
jg
in
mov
cmp
sbb
pusha
mov
mov
or
scas
sbb
or
rolb
mov
scas
adc
fbstp
inc
subl
in
jno
jne
iret
mov
inc
mov
cmp
cmpl
stos
ficoml
dec
stos
mov
and
arpl
pop
scas
mov
pop
cwtl
add
jle
push
push
cmp
dec
pop
ss
outsb
add
outsl
inc
xor
mov
shlb
dec
add
push
mov
pop
cmp
jmp
mov
jns
divl
jle
scas
lods
mov
add
mov
in
add
iret
jle
adc
in
mov
rorb
mov
fyl2xp1
adc
repz
dec
test
dec
lods
test
stc
pop
inc
neg
sbb
jl
pusha
ja
in
mov
cld
test
or
inc
mov
fdivl
dec
lret
shll
mov
cmp
icebp
test
cmc
lods
mov
pop
or
xor
mov
inc
leave
cmpsb
addr16
aam
push
push
in
mov
push
push
inc
loop
cmp
into
dec
or
mov
jae
imul
fldenv
mov
adc
lret
lock
sbb
stos
cmpsb
pop
push
and
and
inc
push
ds
jle
imul
add
movsb
das
adc
adc
in
nop
fcompl
sub
insl
ret
pop
cmp
jnp
addb
rorl
dec
mov
mov
aad
sbb
in
daa
das
mov
pop
adcl
pop
ret
lods
cwtl
mov
pushf
sbb
outsl
es
in
sbb
fsubrs
or
dec
enter
push
dec
xor
cmp
mov
fsubrs
adc
shlb
and
and
imul
dec
xor
jle
enter
jo
sub
inc
pushf
imul
unpckhps
repnz
scas
psubsw
ja
push
imull
sub
dec
imul
adc
stc
test
mov
bound
inc
ret
pop
xchg
js
pushl
and
lcall
xlat
and
sub
push
add
cmp
stos
pop
jno
out
das
sti
xchg
inc
repnz
rclb
jbe
fsubs
xchg
mov
push
ljmp
or
divl
ja
inc
xchg
adc
shrl
mov
ret
test
sbb
push
cli
push
dec
pop
subl
xchg
cmpsl
out
popf
sbb
inc
xorb
mov
mov
xor
out
pop
mov
sub
pop
mov
sub
or
add
inc
loop
dec
fcoms
aaa
outsl
mov
jmp
stc
and
inc
jns
push
out
std
rorl
cld
pusha
sub
bound
rcrb
imul
cmp
insl
scas
sti
push
mov
inc
fnstsw
sti
repz
sub
iret
xchg
cmp
and
sbb
test
dec
push
out
roll
adc
data16
call
das
lea
das
fcmove
jae
push
sahf
mov
and
xor
test
inc
sbb
dec
jno
sbb
pop
out
nop
mov
lds
dec
xlat
push
ljmp
mov
fidivs
dec
push
inc
dec
popa
fldenv
adc
mov
mov
xorb
push
mov
orl
fistl
aad
fucomp
incl
and
lahf
jge
pop
mov
cmpsb
xchg
cwtl
bound
sub
dec
xchg
test
stos
jp
divl
jge
mov
mov
rcrl
add
xor
add
jo
mov
test
add
cmp
or
shll
add
adc
or
mov
or
and
mov
push
js
xor
sub
aaa
mov
xor
jge
jle
lds
inc
rep
dec
sbb
fs
cmpsl
lahf
aaa
push
clc
int
sub
inc
ja
imul
mov
add
mov
adc
inc
dec
lahf
arpl
fsts
inc
std
out
mov
icebp
push
out
pop
sarl
dec
fcomps
insl
xor
decb
push
sbb
mov
testl
jnp
xchg
clc
sub
mov
jle
mov
call
add
test
lods
lods
mov
vcvtdq2ps
pop
in
repnz
xchg
lds
pop
in
inc
inc
or
lods
scas
push
xchg
dec
lret
int
xor
testl
out
pop
mov
cwtl
ljmp
or
mov
or
dec
xlat
shlb
fidivs
test
dec
mov
or
ljmp
test
inc
push
push
popf
aad
jle
int
add
add
cld
sbb
push
hlt
dec
sbb
mov
rol
stc
les
mov
push
cltd
cwtl
lcall
push
pop
cmp
roll
push
or
lcall
les
xchg
dec
scas
push
scas
orb
push
ds
pusha
sbb
loop
mov
inc
or
jmp
push
es
jmp
xchg
xor
fldcw
add
inc
jbe
or
dec
ljmp
mov
fwait
insb
sub
dec
bound
mov
sub
sbb
mov
mov
stc
not
push
in
int3
ret
leave
cmp
jl
xor
cmp
repnz
pop
cmp
scas
shrb
sub
xor
xor
push
sahf
jl
fcomps
in
mov
lea
es
es
adc
jb
orb
mov
xchg
dec
cmp
dec
mov
test
arpl
repz
pop
mov
or
jno
lock
xchg
fcomp
mov
add
repnz
xorb
stos
adc
inc
mov
cmc
mov
sbb
xor
mov
or
pushf
test
aaa
mov
nop
and
mov
nop
push
sub
faddp
xor
icebp
mov
or
ja
std
daa
xchg
fcmovnb
icebp
fadds
imul
xor
insb
out
xor
mov
sti
and
dec
jecxz
pushl
and
mov
sbb
jecxz
mov
and
jp
sti
adc
pop
das
add
lea
cli
sub
dec
mov
arpl
fidivrl
icebp
ja
daa
mov
mov
popf
mov
mov
jnp
mov
xchg
dec
movsl
sub
pop
and
daa
xrelease
in
loope
lds
inc
stc
pop
or
insb
pusha
test
fucomp
lods
dec
test
push
dec
lret
repnz
mov
mov
test
push
xchg
in
dec
or
push
sbb
xor
fwait
es
xchg
jl
ljmp
xor
jge
xchg
int
adc
enter
popa
icebp
int3
cld
aaa
jp
inc
aaa
ljmp
ret
into
popa
test
sbb
adc
mov
mov
aas
popf
cmpsb
or
les
ret
and
leave
jge
das
mov
lods
dec
shlb
stos
outsb
ss
stos
cmc
pop
adc
xchg
mull
sbb
cmp
pop
std
insb
jnp
sahf
repz
push
lahf
xchg
into
stos
xor
mov
or
cmp
ss
pop
mov
int3
scas
push
jno
inc
cmc
fs
push
sbb
xlat
nop
mov
inc
jae
xchg
xchg
into
pop
mov
fcompl
out
xchg
xchg
mov
xlat
mov
inc
fstps
stos
and
int3
stos
arpl
push
mov
je
sub
xchg
test
mov
jg
scas
mov
adc
fs
xor
cmp
rcrb
sub
outsb
xchg
pop
pop
lds
add
and
mov
mov
push
cld
scas
cmc
nop
pop
lahf
ficoml
adcb
xchg
orb
cmp
enter
jae
fistps
arpl
and
lods
pop
jp
fdivs
jnp
test
cmp
or
or
mov
mov
out
incl
jge
push
loope
imul
mov
pop
inc
xchg
xchg
sahf
mov
inc
dec
hlt
call
lahf
add
dec
pop
push
test
add
lret
clc
scas
adc
pop
testb
call
cmp
adc
bound
insl
mov
or
inc
pusha
fucomip
ljmp
push
pushf
je
add
cmp
inc
pop
jno
dec
pusha
in
jb
popf
push
sub
push
aas
rcl
xchg
mov
mov
pop
add
sbb
and
movsb
repz
push
and
movsl
lret
cmp
test
aam
daa
adc
inc
mov
sahf
mov
jns
push
mov
shl
cmp
xor
xor
sub
push
shrb
and
and
push
jnp
xchg
add
mov
arpl
in
ret
mov
jecxz
dec
insb
faddl
loope
adc
mov
xchg
adc
mov
mov
dec
ja
adc
sahf
and
stos
xchg
jno
add
jl
loop
push
jp
mov
mov
jmp
and
push
jne
loop
leave
inc
pop
mov
imul
cmpsl
jg
insl
mov
fldenv
xchg
dec
cmp
add
mov
mulb
ds
mov
cwtl
into
nop
push
leave
push
popf
pop
ljmp
repz
cmp
sbb
jmp
mov
aad
scas
lcall
push
out
mov
jp
pop
xor
pop
fptan
jg
or
movsb
jne
ret
mov
sahf
pop
adc
js
mov
in
jge
test
push
aad
lds
add
test
sbb
sti
pusha
pavgb
lret
popf
fsubl
pop
and
inc
cs
push
xchg
and
and
movaps
dec
and
fs
add
loop
out
and
dec
mov
or
xor
cmp
lcall
dec
fsts
int3
jle
rolb
daa
adc
mov
mov
xor
jo
int
mov
into
pop
and
xor
lock
rolb
cltd
jno
rol
xchg
je
or
fsubs
cmp
cmp
les
jo
je
std
cmpsb
jl
and
mov
push
push
call
lahf
xor
add
push
inc
mov
aad
jl
inc
test
adc
scas
fisubs
xchg
mov
repz
ror
add
mov
cld
int3
cmp
mov
shl
sub
dec
bound
shlb
enter
pop
sarl
subl
test
cmp
cmp
aaa
mov
outsl
adc
out
adc
xorl
inc
sub
pusha
push
fdivrs
addb
fisubl
bound
sub
arpl
mov
cmpsl
movsl
adc
mov
cs
sahf
shr
shll
rclb
gs
sub
nop
inc
sub
mov
cmpsl
pop
push
hlt
lcall
mov
xor
xchg
sbb
pop
cltd
or
sbb
add
test
pop
xor
push
dec
std
stc
addr16
movsb
or
fucomp
mov
mov
add
mov
cmc
arpl
jp
in
pop
dec
je
sbb
stos
inc
push
xchg
mov
cmp
imul
pop
scas
pop
ret
mov
lret
inc
ret
inc
dec
mov
cltd
int
sbb
adc
xor
xchg
sub
mov
mov
dec
add
jl
into
sarb
inc
movl
cmpsb
mov
push
inc
dec
xor
mov
or
sahf
dec
movsb
int3
lahf
outsb
and
loop
add
cmp
pop
fists
lahf
loopne
mov
ljmp
push
aam
mov
out
inc
mov
out
push
dec
pusha
std
xchg
sbb
mov
scas
sbb
dec
stc
icebp
sbb
ljmp
clc
inc
or
gs
fucomp
pop
icebp
dec
xchg
sahf
xchg
jnp
into
test
aas
sub
mov
bound
scas
push
int
aaa
mov
cmpsb
daa
jecxz
push
cltd
jl
cld
mov
jge
lcall
push
rcrl
jae
mov
hlt
aam
cmp
mov
xor
fwait
ss
dec
xor
sbb
dec
dec
push
sub
push
jns
lret
insl
aas
ja
iret
bnd
inc
add
mov
out
fdivl
testb
xor
loop
out
jno
testb
pop
mov
fbld
ret
popa
cmp
shll
adc
cmc
outsl
mov
stos
xchg
imul
test
inc
shll
lcall
xchg
and
aad
mov
mov
adc
es
push
in
adc
cmp
dec
and
push
les
jbe
inc
pop
adc
ret
xor
mov
mov
addr16
push
sub
scas
adc
test
ret
popa
add
xchg
adc
sbb
and
mov
push
imul
jmp
xchg
and
movsb
mov
push
popf
sbb
and
push
dec
inc
sub
sbb
mov
xor
and
cmp
dec
push
outsl
arpl
addl
xor
inc
ja
in
lret
scas
add
add
in
adcl
push
stos
mov
in
push
or
mov
mov
mov
fadds
push
xor
addr16
in
cmpsb
lods
lret
dec
push
inc
test
daa
loop
mul
mov
sub
mov
cmpb
xchg
jbe
test
bound
dec
jnp
mov
mov
mov
aaa
icebp
cli
shrl
pop
mov
stos
jecxz
add
rolb
adc
cwtl
sub
inc
pop
test
or
ja
xchg
cld
dec
subl
rolb
lds
mov
out
sbb
dec
sbb
pop
loop
inc
lahf
xor
add
pop
push
xor
mov
pop
addb
rcll
pop
and
push
imul
shrb
aas
jmp
xorl
in
loop
xor
dec
jge
mov
dec
pop
push
loop
inc
xchg
repz
mov
imulb
imull
mov
and
mov
xchg
and
mov
mov
out
test
xchg
adc
mov
xchg
fisubs
cld
mov
fdivrl
in
cmp
jle
xchg
push
fsts
cmp
add
rolb
popf
iret
fmul
sub
cmp
jp
mov
push
gs
mov
subl
out
addr16
ljmp
sbb
inc
xchg
int3
fldcw
push
fcmovnb
cli
fwait
je
aam
test
jle
mov
ja
jns
daa
cld
dec
ss
popa
hlt
dec
push
test
pop
nop
std
movsl
xlat
xor
insb
fcompl
adc
mov
xchg
icebp
dec
sbb
xor
mov
and
dec
xlat
shlb
and
es
mov
pop
fcomip
jns
mov
mov
lcall
adc
arpl
mov
stos
push
jb
xchg
shr
and
ret
movsb
pop
fisttpll
int3
lds
jmp
xor
iret
pop
std
into
test
sub
std
pop
sbb
sbb
jnp
push
sub
shl
test
loop
cs
add
adc
aam
es
xor
or
pop
rcrl
dec
call
pop
pop
aam
incb
shr
jns
lret
fsubl
stc
pop
mov
out
dec
jl
mov
mov
pop
test
inc
sbb
sub
rcrl
out
xchg
mov
adc
ret
popa
leave
pop
je
rcll
inc
enter
adc
cmp
ljmp
cmpsb
pop
cmc
sahf
in
lods
jge
inc
insl
push
sbb
xlat
mov
loop
in
int3
mov
mov
movsl
mov
push
jo
push
stc
jnp
fdivs
inc
pushf
mov
fs
test
outsl
pop
movsb
lods
stos
mov
sub
ljmp
int
sbb
rcrl
pop
into
stc
out
and
lahf
mov
sub
mov
aas
outsl
push
or
adc
cmp
mov
sbb
sub
xchg
push
cltd
xchg
js
push
fs
mov
pop
and
sub
mov
push
sahf
mov
popf
out
int3
sti
popf
mov
les
inc
add
mov
dec
inc
and
iret
sub
int
pop
fs
rorl
mov
sahf
jne
xor
test
out
cmpsl
popf
repnz
mov
mov
imul
xlat
sub
ficoms
jbe
push
fwait
mov
popw
jbe
js
mov
lcall
lods
mov
testb
xchg
xchg
pop
adc
mov
lea
xor
idivb
adc
stos
sbb
shrb
pop
scas
lods
adc
sub
add
cmpsl
fs
mov
out
pop
sbb
inc
mov
pop
xor
mov
xlat
add
cmp
mov
pop
scas
mov
cmp
xor
pop
test
stos
mov
push
cmp
xchg
pop
sbb
rcll
cmp
jmp
add
cli
add
sbb
jmp
or
mov
fldt
jno
lock
sub
xchg
push
cmp
mov
jle
aam
movsb
xlat
cmpsb
leave
push
push
jp
mov
push
add
add
mulb
gs
xchg
xor
push
cld
int3
xchg
dec
aam
lret
pushf
pop
sbb
push
fdivp
inc
mov
cwtl
add
push
test
inc
mov
mov
orl
sarl
icebp
inc
in
sub
sub
int
dec
xchg
or
pop
das
xor
cli
scas
daa
leave
std
dec
leave
std
sbb
gs
fsubrs
mov
jecxz
leave
sbb
push
jl
inc
imul
mov
push
push
clc
jne
ljmp
mov
lcall
add
bound
inc
cwtl
dec
and
js
aam
jb
enter
or
cmp
sub
dec
insl
in
push
and
loop
cmp
jbe
data16
sti
cld
das
mov
ret
fisttps
pop
or
sub
mov
sub
mov
xchg
and
mov
and
fwait
cmc
cmp
inc
ss
bound
pop
mov
sub
scas
jb
loope
jb
lods
cltd
outsl
imul
ffreep
pop
int
rclb
jmp
xor
fs
pop
lahf
cmp
adc
je
pop
or
cli
mov
shlb
pop
ret
fcom
in
inc
sub
pop
mov
mov
sub
shlb
sub
fstps
dec
jg
xor
imul
cmp
shr
xchg
dec
subl
movsb
mov
dec
and
xchg
add
gs
imul
xchg
sbb
jbe
jecxz
jle
and
xchg
sub
ss
iret
call
fcoms
dec
repnz
in
and
mov
enter
in
push
or
or
sbb
ja
jnp
addr16
cmp
pushf
and
jp
fisttpll
cli
syscall
mov
rcr
jno
insl
decb
add
into
pop
xchg
mov
or
rolb
sbb
movsl
pushf
cmp
cltd
arpl
pop
out
dec
cmp
sbb
aam
jmp
or
sub
jno
movsb
xor
push
repnz
jns
pop
test
cmp
test
mov
insw
sub
sbb
jne
jge
fnstenv
jns
push
or
push
mov
sbb
movsl
jp
jge
jns
gs
aad
push
rolb
sbb
icebp
pushf
jge
les
lock
pop
lcall
cmpsl
popa
ja
fs
push
lcall
push
jbe
sub
loope
cmp
roll
std
fists
push
add
xor
divl
dec
inc
in
nop
call
pop
mov
out
dec
xor
insb
xlat
xor
imul
mov
fldl
mov
dec
maxps
dec
in
add
sti
or
and
dec
mov
add
pop
movsl
mov
pusha
gs
stos
out
loope
rcr
and
sub
pop
leave
fsubs
sbb
push
xorl
inc
jne
outsl
ret
sub
shl
movsl
mov
jne
sbb
nop
lahf
arpl
pushf
mov
scas
xor
aam
and
ds
or
and
lret
daa
jle
add
stos
mov
sbb
jge
test
xchg
test
jmp
insl
push
rorb
inc
cld
mov
scas
sub
sub
out
mov
mov
in
pop
int
es
loope
sbb
sbb
sbb
scas
push
cli
inc
add
lcall
cltd
adc
xor
or
pop
das
addl
cmp
mov
arpl
sahf
pop
inc
leave
fadds
add
push
inc
mov
inc
aam
mov
fsub
push
mov
pop
arpl
jae
aas
push
test
cwtl
mov
mov
fs
and
mov
cltd
xchg
and
call
stc
pop
and
mov
or
pop
pop
dec
popf
aas
dec
adc
das
hlt
fwait
adcb
xchg
repz
cltd
negl
inc
loop
sub
or
sti
xor
xor
mov
faddl
mov
mov
push
nop
ret
outsb
test
add
add
repnz
sub
push
xor
addr16
xchg
in
mov
fwait
jp
sbb
push
mov
fbld
in
lods
sbb
push
cmp
xchg
and
mov
out
loopne
loop
mov
jne
xorb
mov
aad
lahf
cmp
xor
in
hlt
jp
lods
aad
mov
mov
or
inc
cmc
adc
dec
cmp
sbb
push
adc
or
cltd
jge
or
loope
add
jo
push
pop
sbb
sbb
fistps
inc
je
sbb
dec
sub
sbb
jle
mov
cmp
mov
lret
test
aaa
ljmp
test
enter
into
repnz
sbb
sub
inc
dec
fwait
pushf
sbb
cmp
lret
insl
out
clc
inc
inc
fimuls
jae
addb
mov
jle
push
fmuls
les
imul
fmulp
push
addr16
popf
inc
xor
jg
rcll
imul
mov
ss
lods
mov
sti
rcll
push
xchg
cltd
cmp
jb
xchg
ja
cwtl
cmp
adc
repnz
push
xchg
lods
mov
cltd
in
aam
xchg
mov
dec
nop
pusha
ss
data16
push
sbb
sbb
inc
in
stc
and
rorb
lret
sbb
jmp
pop
pushf
inc
adc
sbb
repnz
pop
arpl
fmull
adc
jns
popf
push
test
jne
ja
inc
pop
js
add
icebp
dec
cmpsb
gs
lods
shlb
push
ficompl
pop
insl
push
mov
outsl
pop
movsl
mov
sbb
fstpt
fstpl
fistpl
push
dec
or
test
cmp
push
in
add
cmp
scas
ss
bt
sbb
int3
mov
pop
fs
pop
push
xor
frstor
cld
jl
sahf
insb
out
push
movsl
rorl
repz
daa
mov
rcrl
jmp
cmp
into
sbbl
out
stos
or
sub
rclb
fldl2e
add
cli
int3
inc
lods
mov
mov
lahf
lods
fstps
jl
and
or
sub
ljmp
push
push
sbb
aad
sbbb
inc
lds
pop
push
inc
mov
dec
mov
pop
insl
int3
stc
pushf
inc
divb
pop
cwtl
jle
dec
cli
add
jb
aad
jle
mov
push
push
pushf
mov
xorl
push
push
and
stos
push
nop
daa
fdivrs
or
jle
adc
enter
scas
or
ds
xor
xor
push
dec
dec
xlat
push
daa
ja
mov
mov
jno
jl
sti
push
lcall
arpl
xorl
mov
push
rclb
xor
mov
lret
xchg
sbb
mov
or
cwtl
pusha
xor
pop
jmp
mul
cmp
mov
or
jne
jmp
call
pusha
push
xchg
cmp
sub
loopne
xlat
adc
mov
xchg
mov
out
mov
pop
mov
xlat
add
lock
or
ret
call
bound
adc
stos
or
xchg
mov
inc
loope
xor
push
push
sub
loope
xchg
mov
jns
jl
cmp
aam
sub
arpl
lahf
outsb
popf
and
mov
adcl
xchg
mov
andl
data16
movsl
shll
pushf
cmp
adc
stos
leave
pop
data16
lea
dec
xor
or
ret
jmp
sub
pop
fwait
pop
mov
push
dec
loope
std
cmp
call
and
lods
inc
sub
mov
les
mov
hlt
addr16
dec
cmpsl
jmp
fistl
out
dec
cmp
mov
cwtl
std
pop
sti
xchg
or
lcall
ret
or
push
std
ret
or
lret
mov
rol
loopne
std
je,pt
mov
cmp
add
lret
ror
adc
gs
pushf
ret
xor
cli
sub
push
js
adcb
push
mov
filds
and
pop
cld
dec
js
fnstcw
cmp
inc
sbb
jns
mov
add
scas
cmp
xchg
rol
sbb
pop
rcl
cli
xchg
ror
or
dec
mov
lret
repnz
and
test
movsl
mov
lcall
outsl
cmp
insb
mov
inc
cmpsb
jp
jo
nop
dec
jae
bound
sbb
ret
idivb
pop
in
mov
inc
xchg
in
orl
in
in
cmp
adc
pop
insl
fsubrs
cmc
xchg
out
popf
fcmovnu
fstps
mov
xchg
nop
fs
adc
lea
repz
add
jl
cwtl
sub
pop
into
push
popa
dec
mov
aas
sarl
and
or
xrelease
ret
aad
mov
imul
add
ljmp
inc
fucomip
dec
pop
adc
aaa
mov
cmp
into
aam
ss
test
pusha
xor
cs
jae
mov
push
test
jmp
jne
cmp
inc
imul
pop
mov
pop
add
xlat
dec
ds
sub
outsl
add
dec
jb
icebp
stc
sbb
aas
ja
push
stos
int
je
adc
bound
stos
mov
stos
xchg
dec
pusha
int
pop
lcall
push
xchg
mov
push
dec
sarl
mov
int3
dec
int3
pop
in
repz
jo
adc
cltd
daa
jb,pt
adc
xor
cmpsb
adc
int
lahf
call
mov
cmp
fdivl
push
adc
mov
mov
jmp
mov
bound
xchg
sbb
dec
scas
iret
jno
inc
imul
xchg
repnz
sbbl
jbe,pt
cmp
mov
fwait
adc
and
sahf
dec
add
daa
and
in
test
aam
rclb
hlt
pop
jl
jbe
pusha
inc
xchg
in
cmp
fldenv
repnz
sub
jp
stc
hlt
pop
incb
sub
mov
cmc
add
fnstenv
cmpsb
not
ficompl
xchg
repz
mov
insl
in
imul
mov
inc
and
out
mov
cmpsl
mov
xchg
stos
dec
lret
pop
out
pop
jle
out
push
xor
mov
out
daa
and
imul
cld
pop
idivb
scas
cmpsb
test
sub
addr16
in
insb
mov
iret
cmp
pop
add
outsl
std
mov
ret
adc
push
sub
filds
jl
aad
fidivs
pop
dec
mov
enter
int
jb
daa
push
idivb
inc
xchg
xchg
inc
or
push
mov
dec
mov
outsb
rcrb
daa
xor
jp
filds
xor
sbb
int
ds
or
jo
into
cmp
xchg
cld
xor
sbb
push
dec
lea
jmp
inc
data16
test
jne
xor
xor
out
mov
les
add
or
shrl
leave
xchg
add
or
cmp
mov
repz
push
outsl
xor
ret
inc
scas
adc
mov
push
pop
lcall
hlt
int
inc
andl
sbb
fistpl
stc
xor
xchg
loop
lea
test
sub
cmpb
add
push
lcall
sub
icebp
ljmp
div
pop
mov
movsb
mov
pop
arpl
notl
xchg
inc
push
clc
dec
popf
mov
sub
fisubrs
orb
push
mov
and
xor
cli
or
jbe
xchg
jmp
mov
sbb
mov
mov
xor
cmp
into
adc
mov
dec
xchg
xchg
fdivs
outsl
scas
sbb
imul
and
xor
stos
sub
in
mov
inc
jg
or
pslld
xor
mov
pushf
jns
je
adc
push
sub
outsl
fwait
or
movsb
push
rorb
or
dec
call
dec
ja
jg
and
sbb
icebp
jmp
sbb
pop
mov
call
sbbl
and
and
int3
adc
inc
dec
imul
movsb
popf
movsb
cmp
xor
shrl
mov
insl
dec
sarb
test
addb
dec
sbb
and
sbb
insl
test
fidivl
mov
mov
sbb
dec
jnp
push
adc
repz
ss
movsb
adc
fsubrp
sahf
iret
jmp
mov
inc
rolb
dec
xchg
jle
cmp
cmp
lds
fsubrs
gs
cltd
mov
fstpl
pop
pop
sbbb
ret
mov
dec
leavew
loop
aad
out
cwtl
in
xchg
cmp
sahf
test
fdiv
pop
cmp
xor
test
out
ret
sub
cmpb
jb
cmc
mov
sub
mov
inc
pop
mov
fists
mov
push
pop
pop
push
push
sbb
ljmp
scas
adc
push
in
inc
push
mov
in
scas
test
subl
bound
mov
fldcw
sbb
out
inc
icebp
stc
xor
scas
jns
adc
jecxz
incb
adc
lahf
push
push
repz
ret
pop
xchg
sbbl
sti
iret
dec
adc
mov
mov
hlt
mov
push
sahf
adc
jecxz
fldl
or
icebp
loope
das
push
or
imul
xchg
scas
sti
sbb
mov
rcrb
pop
fbstp
inc
lods
shrb
xchg
mov
bound
lcall
in
add
std
int
adc
jg
mov
fwait
xor
fsub
hlt
xchg
mov
jp
or
jle
xor
sub
pop
xor
push
shl
mov
inc
mov
bound
hlt
repnz
rorl
aaa
lahf
xor
inc
sbb
lret
loop
add
cmp
fcomps
rorb
fistps
sbb
iret
lcall
mov
cmp
clc
sub
mov
cmp
add
sub
lea
pop
or
sahf
mov
cmpsb
mov
add
pop
rcll
mov
mov
mov
lahf
mov
in
xor
inc
sub
jae
lds
or
jecxz
sub
mov
or
dec
in
sub
pop
and
and
cld
pop
mov
mov
cmpsl
cli
mov
ficomps
pop
xchg
cld
call
cmc
cmpsb
add
paddsw
mov
mov
out
repnz
call
dec
and
jle
insl
sbb
dec
or
enter
shrb
out
push
hlt
movsb
lds
cmpsb
xchg
repnz
push
out
es
mov
cmc
lods
sub
fwait
stc
push
mov
cmp
clc
jg
mov
push
inc
or
out
mov
xchg
jo
mov
lret
pmaxsw
fiaddl
mov
test
push
pop
out
cmp
xlat
pop
xchg
inc
mov
add
loop
dec
es
mov
clc
pop
xor
pop
or
ljmp
sarb
aas
mov
adc
pop
stos
push
jne,pn
cli
movsb
add
fsubs
sahf
pop
xchg
mov
rorb
aam
icebp
jl
call
fsubl
test
in
xchg
fisttpl
loope
rorl
hlt
ss
test
mov
arpl
jg
popf
xchg
or
out
jae
sbbl
in
cmpsl
fistps
movsl
jnp
les
inc
cwtl
cld
js
repnz
mov
inc
mov
sahf
jl
dec
or
jmp
pop
fmul
sbb
es
mov
sub
jae
rcll
pop
lds
out
mov
js
divl
jne
mov
xor
test
and
fisubs
out
test
jge
and
inc
into
sub
push
jp
cltd
orl
mov
xchg
adc
pop
inc
cmp
cmp
testl
mov
mov
sbb
andb
out
enter
pop
dec
ja
pop
clc
sbb
mov
jb
sbb
xchg
inc
add
movsb
and
push
ja
or
loope
cmp
aas
jl
mov
cmpsl
ds
pop
rclb
pop
adc
test
js
sbb
and
pop
mov
aas
cmp
les
clc
inc
lods
lahf
xchg
sbb
rcl
call
cmp
dec
mov
int3
ja
add
pop
dec
mov
push
dec
lret
mov
adc
sub
dec
aaa
out
lea
xchg
xchg
popf
jg
adc
je
jbe
mov
sarl
jns
popa
add
pop
movsl
repz
pop
mov
mov
lods
xor
xor
xor
orl
sub
cmpsl
ret
push
cmp
jae
cmp
fnstenv
dec
fcmove
xorl
sbb
rcll
test
lret
in
popf
pop
xchg
push
inc
cmp
out
sbb
dec
push
es
add
test
inc
lea
pushf
cmpsb
mov
insl
mov
fiadds
fcmovne
mov
dec
js
aas
rcl
and
dec
sub
mov
fisttpll
mov
fsubrl
fistps
inc
fisttpl
jnp
mov
add
stos
in
xchg
dec
sbb
and
cmp
mov
sbb
lods
inc
inc
mov
add
cld
fs
out
cmpsl
pop
outsl
dec
pusha
in
xlat
pop
clc
rorl
test
inc
out
mov
fisubl
sub
cmp
leave
mov
adc
add
push
push
cmp
inc
cmp
mov
test
jbe
inc
jbe
lods
dec
xor
or
mov
mov
xchg
cmp
shll
and
add
cmp
mov
addr16
inc
push
test
pop
sub
cmp
lcall
call
mov
sub
js
xchg
push
push
and
mov
jmp
pusha
insb
xor
push
jmp
sbb
mov
sbb
stc
add
lret
outsl
mov
incb
xlat
ret
mov
or
jne
frstor
or
mov
dec
das
push
lock
mov
scas
test
sub
xor
push
xor
xor
in
xor
bound
js
test
cltd
jne
sbb
daa
push
and
ljmp
inc
icebp
pop
mov
pop
fdivs
ficompl
movsl
pop
push
daa
pop
xor
inc
sub
cmp
dec
xor
jo
mov
xchg
push
addl
mov
repz
rclb
fstp
in
ja
cmpsl
andb
rclb
dec
xor
and
jne
test
lcall
fmull
orb
je
hlt
mov
jbe
push
xchg
lea
movsl
into
aam
jae
arpl
mov
cmp
jle
rcrl
cmp
mov
adc
bound
jp
xchg
mov
stos
out
sbb
mov
movsb
dec
lock
out
push
insb
ja
pusha
inc
dec
xchg
xchg
push
rcll
sbb
xor
aad
ja
stos
inc
xchg
cli
or
int3
jbe
sub
popa
jp
xor
cld
stos
ror
push
ret
xlat
aad
pop
repnz
stc
out
jp
iret
pop
ds
mov
inc
cmc
or
mov
adc
sbb
sbbl
sbbb
or
aad
mov
inc
out
inc
pop
dec
cmp
push
inc
cld
aad
push
call
sbb
cwtl
pusha
pop
test
xor
jle
add
jns
arpl
mov
sbb
push
subb
sahf
out
or
ret
push
mov
mov
add
pop
mov
and
mov
test
mov
sahf
in
fs
out
mov
fstl
cmp
hlt
ss
fmuls
mov
in
dec
pop
push
jno
aam
test
mov
adc
mov
mov
fsubl
test
mov
out
add
mov
out
loopne
out
ja
inc
mov
ljmp
loope
sub
jecxz
pop
int3
push
test
mov
out
sti
sbb
cmp
mov
mov
fwait
cmp
jl
pop
mov
mov
int3
add
push
add
jo
and
and
push
mov
fdivs
cwtl
je
popf
push
fdivrs
push
jle
fimull
mov
mov
mov
lret
and
stc
push
cmp
sbb
mov
or
adc
inc
pop
jle
add
inc
sbb
leave
pop
or
adc
cwtl
pop
adc
cmc
sbb
int
add
std
add
cmovge
mov
rorb
lret
or
adc
pop
cld
sub
mov
cmp
or
sahf
jle
mov
sbb
adc
and
and
jb
cs
xchg
stos
sub
fcmovu
lahf
dec
and
xchg
pop
mov
ljmp
jle
push
mov
mov
jl
aam
daa
lret
mov
mov
inc
jbe
jecxz
mov
push
and
in
popa
and
stc
mov
xor
cmpsb
mov
mov
xchg
cli
pop
mov
jbe
shlb
pop
nop
ja
outsl
mov
mov
cmp
inc
jnp
xorl
mov
push
push
loop
insb
sar
loopne
xchg
ja
dec
das
fcoml
push
dec
cltd
sub
xchg
divl
and
add
xor
mov
aad
add
xchg
cmpsl
test
xchg
mov
jae
jge
add
ss
mov
sub
pop
ret
pop
repnz
out
movsb
lahf
push
cmp
imul
push
sbbl
xor
mov
in
mov
mov
sub
and
jo
leave
ret
mov
aam
add
dec
adc
testl
xchg
push
mov
aam
xor
push
fsubrs
mov
mov
cld
mov
pop
les
xor
push
push
dec
pop
sbb
or
xchg
sbb
and
adc
push
inc
mov
lods
test
cmp
dec
mov
out
or
push
movsl
sub
rorb
mov
insl
xchg
lods
test
lahf
test
iret
shlb
add
subl
mov
imul
mov
mov
imul
mov
inc
or
rolb
xlat
sbbb
pop
pop
push
das
in
pop
int3
and
subb
push
ret
dec
xchg
mov
xor
and
cmp
jns
pushf
js
lret
addr16
leave
xchg
xor
sub
dec
or
jbe
mov
mov
cmp
cltd
sbb
dec
push
sub
les
push
adc
xchg
cmpsb
fiaddl
xor
lods
pop
test
xchg
inc
push
sub
push
mov
aam
dec
insb
mov
xor
mov
popl
lea
test
dec
dec
cwtl
cmpsl
int
in
insl
les
movsl
and
std
push
mov
pop
jo
xchg
push
pusha
pop
xor
mov
imul
fsubrl
xchg
jnp
int
bound
cmpsl
pop
dec
xchg
clc
jbe
xchg
dec
neg
lcall
push
sub
mov
jle
jns
shrb
cmpb
addr16
cwtl
and
jmp
mov
xchg
sahf
jmp
data16
icebp
adc
aam
call
xor
mov
ds
push
sbb
dec
cmp
mov
inc
xlat
insb
aad
mov
nop
xchg
repz
es
jg
int3
repnz
sahf
xor
jae
test
stos
cmpsl
push
out
jo
push
xorb
jbe
repz
xchg
adc
loop
cwtl
jecxz
xchg
fdivrs
add
or
push
bound
loope
nop
pop
sbb
sbb
mov
xchg
ficoml
in
adc
fcomps
addr16
pop
fistpl
xor
mov
stos
dec
sbb
sub
sbb
xor
imul
sti
sahf
fdiv
push
push
xchg
mov
pop
std
fidivl
or
and
jge
jns
sbb
xchg
push
push
ror
mov
in
mov
and
lcall
and
push
or
push
fidivs
outsl
in
mov
adc
push
sbb
cmp
adc
add
xor
dec
jg
cmp
cmp
adc
pop
push
xor
call
stc
push
mov
mov
mov
mov
int3
cs
jo
test
sahf
leave
lds
outsb
daa
xor
adc
cmp
lcall
pop
aaa
in
fdivrs
or
xchg
inc
mov
cmc
inc
push
shll
xchg
ljmp
mov
int3
out
inc
sub
daa
inc
xchg
lcall
in
rcl
aaa
push
push
lock
stos
dec
lods
fstpl
lods
sbb
sarb
adc
pop
stos
mov
sbb
repnz
fnstenv
dec
mov
stc
cmp
xchg
mov
sti
inc
sbb
and
insl
lods
fidivl
xor
xchg
sarl
pop
add
cmc
das
loope
xor
push
and
es
adc
sarl
sbb
cwtl
push
jecxz
xchg
sbb
out
jl
pusha
dec
out
inc
dec
loopne
xchg
jb
sbbl
mov
jg
xchg
add
dec
add
outsb
arpl
sbb
stos
sub
iret
mov
lea
mov
inc
and
pop
or
mov
sbb
pop
in
sarb
sbb
out
movsb
mov
and
mov
adcl
push
int3
pop
call
mov
inc
or
mov
stc
cmc
xor
mov
fbld
xor
inc
repz
mov
das
and
dec
inc
mov
hlt
cmp
or
mov
push
adc
or
call
or
jno
jnp
mov
daa
sbb
push
lcall
cmpsb
out
popf
movsb
dec
xor
mov
test
xchg
dec
fmul
enter
mov
xor
gs
mov
pop
sbb
scas
adc
lds
movsl
aad
cmpb
hlt
inc
add
aam
cmc
mov
mov
iret
dec
shlb
push
push
sub
imul
aam
xchg
out
data16
dec
fdivrp
loope
adc
adc
shlb
mov
push
fcomps
call
mov
lret
cmp
test
mov
nop
sub
dec
cmp
test
mov
out
les
adc
test
add
aad
fucomi
push
outsb
mov
nop
lret
mov
movsb
ss
pop
dec
add
shrb
jge
roll
cs
mov
je
mov
pop
arpl
cmp
mov
xchg
cmp
sbb
mov
jns
lea
cmp
push
jo
pop
mov
test
aam
inc
adc
mov
push
mov
jb
mov
testb
aam
in
loop
dec
std
fs
mov
nop
sub
inc
xchg
and
loop
je
aad
popf
or
and
mov
scas
inc
xchg
push
adc
push
js
add
cs
pop
xchg
rcl
je
inc
mov
sahf
or
adc
sub
mov
cmp
lret
sbb
insl
jb
fwait
sahf
cmp
stc
mov
mov
sbb
push
pop
push
pop
sbb
and
hlt
outsb
nop
ja
adc
out
in
or
repz
fimuls
mov
xor
or
daa
jecxz
sub
bound
xchg
push
pop
repnz
and
pusha
lret
xchg
or
add
fidivrs
adc
mov
sti
mov
jge
dec
push
jge
add
or
mov
and
fidivl
fs
dec
lret
mov
aam
jl
jg
in
in
or
jo
insb
xchg
dec
dec
data16
adc
test
sub
lret
bound
repnz
pusha
pop
or
cmp
pop
sub
mov
jge
cmp
xor
xchg
jb
insb
cmp
mov
push
ficomps
xor
dec
fmull
xchg
add
rep
sub
lret
test
pop
jnp
mov
imul
sti
jae
mov
dec
cli
outsb
dec
sar
rcrl
in
sub
mov
xchg
pop
mov
clc
stos
daa
mov
adc
ljmp
jmp
add
out
test
test
mov
loop
mov
cmp
xlat
mov
push
in
sub
cmc
leave
mov
jl
inc
test
mov
sub
mov
cwtl
cltd
or
push
mov
dec
inc
roll
jp
leave
aad
push
jbe
cltd
iret
sub
fistl
push
ja
outsl
sub
push
mov
sarb
push
cmp
and
rolb
cli
pushf
popf
jb
pop
popa
jge
push
popl
xor
push
mov
cld
cmpsb
rcrb
lea
bound
cmp
mov
inc
cwtl
xchg
int3
xor
pusha
push
xor
sub
stc
popa
mov
test
flds
jge
mov
push
dec
mov
sti
xor
test
push
inc
lret
sbb
or
pop
imul
lock
fidivs
push
add
mov
mov
aaa
or
sahf
ret
pop
out
inc
push
mov
addr16
and
or
cmp
cmp
xorb
test
push
pop
int3
out
sub
lock
jbe
lea
add
cwtl
mov
cmc
sub
lea
mov
cmp
xor
adc
xchg
sti
mov
mov
push
icebp
sbb
jle
aas
arpl
jae
nop
fadds
mov
bound
pushf
in
pop
mov
pushf
pop
xchg
outsb
lret
cmp
mov
xchg
repnz
js
mov
clc
clc
ja
dec
add
sub
out
add
lock
mov
clc
sti
les
lret
push
out
imulb
pop
mov
dec
push
mov
mov
ret
xlat
call
out
mov
dec
je
adc
movsl
cmpsb
out
add
push
ss
or
icebp
push
xchg
shrb
pop
xchg
sub
and
pop
xchg
fildll
push
arpl
lahf
jo
outsb
cmpsl
dec
push
jno
dec
pop
pop
cmp
insb
fistps
xor
mov
cmp
fwait
je
mov
or
pop
jmp
mov
int
into
xchg
loopne
out
inc
mov
cmc
addr16
inc
sarb
loopne
ds
adc
fimull
lret
jecxz
cmp
mull
insb
and
adc
popf
jae
aad
jnp
stos
jl
dec
pop
icebp
loop
aaa
add
xor
and
mov
rcrb
xlat
icebp
daa
mov
ss
lock
aad
push
ds
mov
call
aaa
xchg
out
int
xor
ret
stos
frstor
sub
add
xor
aaa
lds
push
scas
bound
mov
out
xchg
push
mov
into
xor
ljmp
test
in
pushf
and
stos
cld
cmpb
pop
xor
fsubrs
rolb
sahf
cli
push
pop
dec
rolb
pop
sub
pop
adc
lcall
xchg
adc
negb
icebp
in
lret
fmull
adc
repnz
or
pop
cmp
cmp
bound
popa
mov
sbb
mov
sarl
sbb
pop
movsb
mov
add
jge
out
adc
push
mov
lods
xor
dec
test
xorb
test
jo
dec
dec
test
xor
lds
inc
xchg
mov
lret
ficompl
lret
out
adc
push
dec
ja
js
shrb
sub
rcll
rorb
mov
xchg
cli
jno
sti
out
test
sub
mov
icebp
stc
xchg
arpl
mov
lahf
movsb
jnp
dec
out
testb
lret
add
loopne
ret
xor
pop
test
jo
idiv
jmp
and
movsl
add
ret
inc
and
pop
fnsave
mov
mov
cli
loop
xchg
pop
das
mov
mov
dec
sub
xchg
loope
arpl
mov
outsb
cmp
icebp
pop
jge
pushf
loopne
push
lods
scas
dec
and
or
push
or
jle
jp
dec
movsb
push
mov
cs
lret
jecxz
in
dec
jp
jge
inc
repnz
fistl
jns
addb
ds
mov
add
jb
cmp
rol
mov
andl
push
stos
nop
ficoml
dec
pop
aam
scas
lods
mov
or
das
insl
jl
sti
repnz
mov
mov
cmpsb
imul
mov
jl
rcrb
jns
fcompl
movsb
sbb
pop
ret
cwtl
scas
mov
dec
mov
enter
xor
push
mov
cwtl
add
add
ljmp
mov
pop
test
cmp
or
fnstsw
sub
xchg
or
jbe
jl
in
imul
xor
lret
inc
xor
data16
or
fists
push
add
xor
rclb
ret
pop
loopne
insl
inc
push
loopne
push
mov
mov
push
movsb
inc
call
ljmp
cmp
mov
push
pushf
jge
push
shlb
adc
out
dec
sbb
mov
mov
push
mov
jo
xchg
cmpsl
inc
sbb
pop
jp
sub
hlt
push
std
dec
mov
cmp
js
ret
jb
adc
pop
xor
leave
adc
push
out
push
mov
mov
les
call
adc
xchg
cli
in
jo
jbe
cmp
push
jecxz
sar
aaa
pop
stos
lock
mov
aas
fisubs
add
and
lods
icebp
lcall
push
sbb
add
popa
dec
movb
mov
mov
mov
fnstcw
jge
je
in
mov
divl
outsl
fwait
push
mov
test
daa
into
or
or
sub
addb
rclb
ret
jl
setg
test
cmp
xchg
dec
imul
rclb
into
ret
lea
cmp
mov
xchg
test
jns
pop
idivb
jae
and
cmc
mov
or
out
mov
jne
pusha
cmp
sarb
lahf
push
cmp
jp
outsl
cltd
mov
adc
xor
outsl
xchg
add
loopne
into
and
jg
fisubs
outsb
mov
cmp
popa
push
lods
imul
mov
cmp
push
dec
cmp
jo
jg
xchg
fsubs
test
jle
jne
sub
add
jnp
pop
out
xlat
outsb
dec
pop
aam
xor
cmp
into
adc
aad
mov
and
add
xor
xchg
mov
notl
out
imul
push
push
fsts
sub
jle
addr16
aad
stc
jne
xorl
jns
sti
incl
dec
ss
pop
jns
adc
xchg
jno
add
enter
imul
xlat
fisttps
xchg
ja
mov
push
dec
cmp
inc
push
dec
ds
pop
jle
push
sbb
mov
xchg
push
mov
xchg
jmp
or
jns
jno
mov
jo
rolb
test
bound
loopne
stos
sub
clc
mov
xor
xchg
cld
mov
sahf
add
out
outsb
repnz
sahf
and
inc
loopne
xorl
mov
sbb
addr16
adc
xor
les
cmp
cltd
adc
flds
jp
mov
mov
outsl
mov
loopne
jmp
jns
cmp
mov
aas
cmp
repz
clc
add
mov
pop
pop
in
rcrb
pop
inc
push
xor
rclb
mov
sbb
pop
pop
faddp
inc
xchg
fs
push
cltd
xchg
sub
push
push
add
sbb
imull
std
popa
sbb
fs
and
aaa
nop
cs
cmpsb
push
dec
fwait
cmp
adc
in
imul
and
popf
lea
daa
pusha
xor
int3
sti
fstpt
xchg
mov
mov
and
adc
push
test
cli
dec
sub
lahf
loope
or
push
mov
sbb
popa
xchg
stos
inc
or
loope
frstor
xchg
xchg
mov
mov
pop
sbb
or
inc
scas
das
or
fldenv
add
pop
into
pop
dec
add
or
xchg
fsqrt
sti
orb
movsl
insl
adc
mov
and
sbb
test
jb
repnz
lret
mov
arpl
dec
cs
xor
xchg
xor
dec
stos
fmuls
je
xor
adc
mov
cli
adc
into
fsubl
out
sbb
or
sbb
fnstenv
jb
xchg
adcb
fadds
dec
sbb
add
pusha
mov
test
dec
inc
inc
subb
repnz
addr16
daa
cmpsl
push
jg
mull
inc
mov
insl
aad
mov
scas
pop
js
lret
cmp
test
sub
aam
dec
repz
jne
bound
outsb
mov
and
and
fcoml
icebp
les
shrb
mov
test
jg
sub
xor
out
and
outsl
outsb
data16
out
test
repz
jmp
fstp
out
iret
movsb
dec
add
pop
xchg
gs
xor
fs
and
add
jnp
sub
pop
pop
insl
aam
jp
aad
mov
out
xchg
mov
les
sub
fdivrl
add
push
push
gs
xor
xor
pop
dec
pop
out
stos
pop
pop
fwait
adc
shr
and
imul
andb
push
xchg
and
ficoml
push
mov
mov
test
mov
in
std
fistpl
mov
cmpl
sub
add
xchg
arpl
stc
lods
out
sub
ds
leave
or
cmp
pop
lret
mov
fisubs
lret
pop
je
or
sti
mov
in
jo
lcall
lods
in
out
cmc
out
sbb
xchg
jecxz
negl
or
mov
sahf
inc
mov
jne
addr16
lret
mull
fwait
push
cmp
inc
pop
add
or
xchg
add
push
cli
jecxz
jle
mov
rcr
flds
xchg
pop
add
add
lds
repz
or
or
cmp
loopne
pop
xor
inc
xchg
ljmp
xor
cmpsb
in
in
mov
cltd
xchg
cmp
ljmp
lcall
ljmp
pop
mov
decl
mov
dec
xchg
stc
push
gs
rcll
aaa
test
add
roll
mov
mov
sti
iret
sahf
lcall
fistl
daa
rep
es
xlat
andb
andb
pusha
icebp
mov
hlt
jno
jecxz
cmp
inc
test
xor
mov
adc
loopne
mov
fdivrp
mov
push
inc
and
xchg
pop
cmp
outsb
lds
test
jp
xor
add
test
ss
or
nop
fnsave
cld
and
pop
mov
mov
fwait
movsl
fistps
push
mov
mov
adc
mov
adc
sbb
mov
loop
addb
in
enter
mov
enter
mov
xchg
mov
mov
pop
pop
cmp
outsl
mov
insb
push
jno
xchg
repnz
mov
dec
pop
insl
jae
pusha
imul
aaa
or
test
pop
gs
xlat
mov
xchg
test
das
sti
aad
ret
adc
jg
xchg
ja
imul
mov
lds
xchg
fidivl
jecxz
mov
aas
adc
mov
push
mov
sub
push
movsl
jecxz
and
test
enter
dec
inc
cmp
scas
outsl
cmp
mov
lods
jecxz
jp
mov
cs
adc
mov
mov
or
or
ja
adc
pusha
mov
jp
out
xchg
leave
mov
call
xorb
mov
mov
xchg
sbb
les
sahf
jno
and
pop
xchg
scas
jb
sbb
popa
rcl
jp
cmpsl
pop
rorb
out
add
sub
dec
xchg
gs
jp
push
push
in
pop
xchg
popf
jle
fwait
mov
in
outsb
mov
in
cmc
lahf
in
test
mov
in
lea
or
cs
cwtl
aad
scas
xor
movsb
loope
enter
fs
sbb
test
pusha
add
std
jmp
cmc
push
mov
ret
xchg
inc
cmp
fbld
fists
test
push
push
iret
lods
int
or
imul
fwait
xor
aam
je
and
push
mov
fld
inc
inc
es
xor
or
loopne
mov
cpuid
aas
sbb
xor
cmp
cmp
jmp
std
jo
dec
push
lcall
xor
sub
addl
test
leave
jecxz
and
fwait
mov
in
lret
aad
lods
ret
out
jno
movsl
or
pop
xchg
rorb
inc
push
pop
int
nop
out
push
sub
or
movsl
aaa
mov
loop
xor
pop
jns
fnstcw
mov
mov
mov
push
jb
inc
or
push
cmc
pop
stos
out
sbb
push
adc
mov
or
es
sub
push
fs
add
scas
sub
lcall
cmp
in
pop
sbb
js
repz
lds
std
or
fs
cld
cmpl
das
shrb
subb
lds
pop
popa
cmpsl
mov
fucomp
popf
jle
in
jp
xor
gs
and
leave
lret
out
cmpb
jb
or
mov
adc
rolb
hlt
mul
add
pop
sub
sbb
mov
repz
sarb
add
mov
int
lahf
jp
inc
jmp
repz
cmp
push
inc
daa
repnz
mov
insl
out
jnp
xchg
popf
xor
outsb
insb
je
icebp
adc
adc
je
outsl
jae
push
aad
into
les
lods
repz
insb
mov
hlt
and
stos
inc
xlat
enter
fwait
cmp
enter
mov
inc
mov
jg
sub
push
lahf
or
push
or
mov
pop
inc
xchg
and
pop
not
jne
dec
mov
mov
add
cmp
sbb
or
inc
clc
cmp
pop
dec
fs
pop
mov
mov
fcompl
push
cmp
cmp
test
or
insb
outsb
dec
adc
fwait
maskmovq
testl
pop
mov
out
inc
add
arpl
dec
inc
sub
cs
aas
pop
sub
push
out
jno
inc
addr16
cmpsl
ss
sub
and
push
sahf
fmul
xchg
dec
mov
pop
mov
xchg
xor
cwtl
mov
or
jl
int
pop
movsl
bts
arpl
xor
mov
push
push
push
push
mov
repz
cmp
out
push
cmp
iret
cmc
fnstenv
lret
or
mov
jne
adc
repz
sbbl
jg
pop
ljmp
xchg
lods
popa
daa
push
lods
dec
pop
adc
add
mov
jge
mov
push
pop
mov
repnz
push
movsl
mov
cmp
xchg
pushf
int
mov
xchg
popa
jnp
adc
aam
inc
es
in
or
loope
leave
and
mov
jge
sbb
pop
shr
mov
xchg
cmpsl
xchg
add
sbb
cmp
fwait
in
cmp
out
call
cmpsl
leave
fistpll
cmp
int3
push
pop
movsb
pop
imul
lahf
loopne
popaw
mov
in
stos
or
bound
cmpl
fidivs
mov
hlt
fisttps
rcrl
push
push
es
mov
push
orl
int
xor
inc
lahf
pop
push
and
scas
add
add
mov
es
cmpsl
aaa
imul
jle
imul
mov
int3
insb
icebp
sub
xlat
fwait
dec
loop
and
cmpsb
aaa
mov
cli
xchg
pop
inc
mov
mov
inc
dec
data16
pop
lods
cmp
cmp
sti
xor
arpl
mov
arpl
ret
shl
popa
cmc
inc
dec
shlb
jmp
imul
out
jne
shl
add
jnp
cwtl
add
shrb
dec
in
mov
mov
dec
idivb
sahf
inc
lock
sti
sti
cmp
mov
cs
cmpsb
in
push
dec
decb
mull
lahf
xchg
jecxz
pop
mov
outsb
push
mov
inc
in
sub
movsl
lahf
out
and
sub
mov
jl
stos
xchg
es
jge
or
repz
ja
mov
sbb
scas
mov
sub
mov
mov
clc
cmpsl
add
aam
and
push
dec
mov
sbb
push
rorb
in
xchg
ljmp
jg
insb
jmp
jmp
and
mov
insl
xor
jle
rcr
jnp
les
sbbb
pop
sbb
fdivs
mov
pop
push
push
rolb
popf
dec
jbe
cmpsb
mov
pop
in
outsb
xor
inc
into
or
mov
dec
sub
jp
das
and
xchg
mov
stos
xchg
ja
mov
and
out
arpl
js
mov
int
repz
sub
xor
shll
fisttps
scas
adc
movsl
push
push
pop
jno
pop
test
ret
jp,pn
or
pop
and
fisubrl
mov
and
dec
data16
in
xor
pop
in
gs
test
cmp
int
dec
sbb
inc
jbe
aaa
fildl
and
xchg
inc
les
jnp
jg
add
xor
std
imul
pop
mov
stos
inc
mov
xchg
sbbb
adc
and
lods
dec
adc
and
cvtps2pd
pop
repnz
pop
pop
mov
lods
ljmp
jb
cwtl
jecxz
test
loop
loopne
mov
xchg
and
and
jae
mov
sbb
sbb
cmc
sub
add
add
sbb
ljmp
mov
xchg
test
test
pop
das
call
test
hlt
dec
lds
cmp
push
scas
in
adc
dec
insb
shr
out
push
popa
sub
test
negl
or
test
addr16
loopne
jnp
pop
fdivrs
lahf
adc
cli
jg
or
int
insl
push
loopne
sbb
scas
andb
cltd
repnz
mov
imul
loop
mov
adc
push
dec
push
mov
mov
insl
or
lods
cmc
cmp
jb
and
divb
std
fsubl
cmpsl
out
in
xchg
xchg
adc
push
adc
inc
ja
aad
cmc
cld
sub
jno
xor
or
dec
sub
xchg
fsub
add
or
mov
and
jne
cmp
cli
dec
out
rclb
dec
pop
fnstenv
addr16
outsl
hlt
mov
in
push
push
jmp
dec
pop
xor
int
lahf
lea
jge
ret
push
enter
push
jecxz
insl
fnstcw
pop
sbb
or
in
mov
scas
outsl
inc
lds
in
and
cltd
push
je
jb
in
and
xor
mov
das
je
mov
inc
aaa
dec
and
rcrl
int
stc
sbb
imul
fs
xchg
mov
in
sub
test
and
stos
xchg
outsb
dec
cmp
sub
shlb
jne
jg
dec
clc
cmp
sub
out
mov
leave
sub
adc
pop
lods
rcrb
xor
push
inc
jecxz
imul
fisttpl
mov
iret
in
inc
jmp
mov
jo
push
fisttps
push
lea
repnz
scas
scas
sbb
out
and
cmp
fldl
std
jecxz
movsb
int
jecxz
int3
xchg
fmul
inc
repz
adc
inc
xchg
add
loopne
mov
les
xor
jle
fmuls
mov
jle
add
mov
xchg
mov
test
push
or
sahf
int3
test
jmp
or
fisubrs
mov
ja
js
cmp
pusha
int
sahf
pop
and
sub
pop
push
xchg
mov
div
stos
enter
in
push
sti
mov
add
cmp
out
mov
jnp
clc
out
iret
lahf
insb
cmp
jp
cs
push
xchg
pop
imul
dec
mov
cmpsl
aaa
leave
les
adcl
lret
pop
pop
xchg
adc
into
xor
mov
stc
icebp
dec
out
sub
out
sti
in
push
fcomp
mov
orl
repz
xchg
movsb
ror
pusha
adc
mov
ljmp
xchg
out
jae
lods
pop
mov
testl
dec
pop
jbe
xchg
lock
inc
mov
jbe
ja
sbb
sub
das
xchg
xor
gs
fisubrs
inc
or
mov
aad
xor
int
mov
outsl
pop
aaa
mov
xor
add
or
cmpsl
popa
fcomp
cmp
int3
jns
cltd
aad
lods
adc
addr16
inc
sbb
dec
faddl
push
shrl
mov
fwait
push
lea
xchg
aaa
mov
xchg
ss
and
subb
mov
jnp
dec
lahf
cmp
popf
cmc
add
mov
ss
outsb
je
dec
xor
lret
xchg
xor
sahf
aas
push
cmp
xchg
scas
int3
jmp
and
outsl
fcompl
loope
enter
stos
sti
popf
sub
sbb
mov
jae
jmp
cmpsl
inc
aam
mov
push
xchg
push
aad
movsb
jge
fwait
mov
flds
je
add
mov
or
pop
or
sub
mov
mov
test
push
lock
repnz
mov
outsb
mov
lea
icebp
fsubl
outsl
shrl
lock
xchg
cmp
adc
pop
roll
jb,pt
in
sahf
imul
mov
push
iret
inc
cmc
hlt
out
push
inc
push
das
xor
add
adc
cltd
rcr
mov
mov
in
push
mov
mov
mov
pop
and
rcrb
mov
push
dec
rcrb
cmc
inc
cmp
xchg
std
or
adc
lret
mov
jecxz
out
jno
divl
add
repz
js
in
cwtl
add
fcoms
cmp
mov
jns
xor
mov
rcrl
mov
stos
mov
test
pusha
cvtpi2ps
or
adc
adc
mov
insl
rolb
outsl
stos
push
pop
inc
inc
mov
jbe
enter
inc
xor
sub
mov
pop
adc
cltd
int
push
mov
adc
push
cmp
andb
in
arpl
rclb
cld
xchg
popa
ss
jg
dec
and
pop
cld
jb
adc
shlb
fnstcw
dec
lahf
cmpl
inc
and
loop
mov
push
adc
adc
jp
fisubrl
repnz
inc
pop
adc
rcrl
jb
inc
hlt
mov
lret
lahf
setno
push
stos
leave
out
xchg
push
ja
ror
inc
ljmp
sbb
es
ud1
or
fisubl
or
sti
pop
lahf
mov
lret
sbb
fcoml
jmp
push
dec
lods
cmp
cmp
cmp
jbe
ds
xor
into
xor
jne
cmp
push
loop
mov
arpl
lahf
push
pop
mov
js
xchg
or
cmc
fs
push
stos
in
outsb
sub
pushf
ret
shll
adcl
lock
imul
imulb
jle
xchg
jb
fldt
add
cmp
and
xchg
inc
mov
loopne
popf
cmp
mov
xchg
movsl
mov
push
dec
shll
or
fcmove
shrb
mov
jmp
dec
inc
mov
and
aad
popl
inc
shrl
insb
shll
add
adc
mov
sbb
aaa
mov
arpl
adc
cmp
lods
jp
pop
movsl
ss
add
cmp
add
fdivr
je
lods
mov
jb
test
mov
fwait
add
ds
jmp
sub
jmp
test
mov
mov
movsb
fldt
cmp
fists
in
inc
outsb
ret
sub
fstps
inc
and
sarb
cltd
push
jl
rorl
repnz
dec
adc
xor
push
jo
lock
fildl
sub
outsb
bound
cmc
shrb
dec
cmovns
notl
call
and
movsl
add
cmp
lcall
rcrl
or
out
pop
mov
mov
cmp
xlat
pop
mov
js
mov
je
jns
faddl
jae
or
sbb
jne
and
lcall
cmp
pop
cmpsl
push
mov
out
mov
mov
add
popa
sbb
cmp
sub
xchg
cs
fsubl
stos
mov
mov
sub
mov
jae
nop
dec
jbe
xchg
sbb
jno
xchg
cld
test
ja
cmp
or
lds
push
nop
cltd
outsb
add
cs
scas
sbb
in
sbb
push
mov
ret
in
sbb
jb
stos
clc
in
dec
and
into
jae
adc
and
pop
fstl
gs
and
int
push
leave
cli
sti
adc
sbb
add
cmc
mov
jp
into
mov
les
in
scas
push
lcall
sti
xchg
icebp
cld
pop
outsb
push
add
or
and
adc
repnz
xchg
jp
int3
sti
mov
scas
cmp
sbb
push
ret
jmp
and
cmp
push
jb
mov
roll
add
scas
aaa
add
aad
xchg
imul
push
add
add
lret
mov
mov
fwait
out
rsqrtps
mov
cmc
clc
idivb
mov
ret
push
shll
pop
push
fdivrl
inc
push
shrl
test
ljmp
int
fidivrl
outsl
bound
fistps
lcall
daa
mov
sahf
fnsave
pop
aam
mov
nop
push
mov
repz
push
xor
mov
adc
les
pop
sub
pop
dec
jecxz
popf
enter
mov
lea
pop
mov
aaa
pushf
xlat
sbb
fs
out
adc
inc
jl
mov
and
aaa
push
iret
push
hlt
pop
ljmp
popa
inc
ljmp
or
or
ret
sbb
inc
inc
sub
iret
add
mov
fsubrl
aaa
dec
adc
std
jecxz
lds
scas
stc
and
mov
lock
or
arpl
push
fdivs
or
and
lods
sbb
fcoms
pop
mov
adc
mov
in
out
pop
sti
lcall
sbb
fidivrs
lahf
rep
jg
jecxz
sub
and
dec
dec
cs
out
push
call
lret
pop
cmp
and
sarb
lcall
and
adc
push
jle
ficoms
jns
dec
ja
out
pop
es
and
sub
mov
sbb
js
mov
xchg
mov
sub
mov
ss
aam
and
cmp
mov
cmp
cmc
notb
jl
push
pop
xlat
mov
popf
xor
call
loopne
sbbb
xor
or
jl
jno
sub
or
adc
pop
adc
lds
mov
and
mov
in
mov
cld
test
jmp
push
dec
mov
inc
arpl
repz
jle
pusha
mov
out
jne
dec
xor
rcll
ds
decl
testb
or
jnp
sarb
and
mov
aas
lret
shl
push
les
xchg
lods
xchg
lcall
adc
imul
and
push
data16
in
ror
push
sbb
push
ficoms
fsubrp
cmc
pop
jp
enter
mov
test
fstps
adc
sbb
dec
aaa
mov
and
mov
and
xlat
pusha
nop
inc
lret
push
mov
sub
push
nop
jno
adc
fstpl
fwait
andb
push
inc
xchg
inc
movsl
jnp
dec
add
cmp
xor
sub
lcall
scas
adc
cld
mov
das
sahf
rcll
mov
jmp
jmp
cmpsl
pop
pop
fimuls
pop
sub
mov
test
out
cltd
andl
jae
pop
sub
cmc
ja
sbb
imul
out
jle
xchg
cmp
out
insl
outsb
into
insb
xor
jge
push
sarb
enter
dec
mov
pop
fs
les
xchg
rorl
pop
mov
fidivs
push
shlb
pop
jmp
add
cmp
mov
xchg
add
lret
sbb
sbb
inc
pusha
pop
ss
jb
cli
jns
fcoms
in
mov
pushf
out
les
out
lds
lods
mov
xor
lldt
inc
dec
pop
push
dec
lods
cmp
popa
and
dec
les
in
arpl
loopne
mov
addr16
cli
js
pop
test
mov
mov
sti
dec
push
mov
je
ljmp
fs
lahf
dec
aaa
into
jnp
dec
cli
add
das
inc
mov
mov
mov
push
and
clc
cmp
mov
add
lock
sbb
int3
mov
test
add
lods
mov
xchg
cmp
cmp
jl
test
inc
cltd
scas
sub
std
xchg
dec
push
ret
jmp
jne
adc
cmpsb
push
or
push
push
jmp
jbe
cmpsl
ja
es
xchg
cs
loope
mov
xchg
adc
xchg
mov
xor
inc
js
xchg
idivl
imul
lahf
mov
fmuls
sahf
jno
ja
mov
and
sub
clc
jae
inc
stos
sub
scas
arpl
push
mov
cld
adc
outsl
xor
int
jo
xlat
pop
lods
lea
mov
imul
xchg
mov
imul
xchg
adc
movsl
xchg
jl
mov
inc
mov
sbb
sub
dec
lds
mov
adc
add
xor
mov
sbb
lret
insl
adc
mov
loopne
jg
cmpb
pop
cs
add
scas
mov
rclb
cmpsb
subps
fcoms
pop
test
nop
in
add
cmpsb
loop
test
popa
push
incb
fldcw
cmp
push
xor
jmp
adc
je
mov
les
jg
push
mov
adc
pop
mov
add
cmp
aaa
mov
imul
push
jmp
test
mov
adc
cmpsb
mov
std
incl
jo
loop
lock
pop
hlt
lret
inc
jae
stos
xchg
push
dec
clc
sti
les
repnz
add
xor
dec
scas
ljmp
stos
ljmp
sub
insb
dec
push
push
std
fidivs
hlt
fucomp
lret
ret
jb
rcrb
lock
add
add
js
scas
pop
mov
in
andl
cwtl
lcall
xchg
jl
xchg
loopne
lock
andb
xchg
dec
dec
int3
cltd
ficoml
push
jnp
aas
ja
push
ret
or
and
adc
cli
imul
pop
push
cmpsb
jmp
mov
sub
sarl
std
push
enter
xchg
push
cli
lcall
loopne
jno
pop
xchg
shrl
insl
lods
push
test
aas
pop
mov
mov
sub
jg
mov
jo
pusha
or
jle
xor
rcl
cmpsl
lea
or
sub
mul
cmp
xchg
or
pop
shll
decl
add
fnstsw
mull
ret
cltd
outsl
fnstsw
push
pusha
pusha
or
shlb
jmp
pop
mov
mov
gs
bound
rolb
sbb
mov
in
insl
stos
cwtl
xchg
and
outsb
mov
rorb
push
push
mov
xor
xchg
dec
cwtl
adc
xor
jne
add
fwait
jo
ficoml
dec
xor
dec
call
jl
dec
cmpsb
cmp
and
push
jnp
enter
xchg
outsb
loop
cmp
test
pop
std
je
cmpsl
or
mov
fmuls
ja
adc
jo
aaa
in
cmp
and
pop
inc
or
out
in
xchg
and
outsl
cmp
stc
mov
movsb
or
lea
mov
lret
stos
or
test
dec
mov
and
hlt
mov
jno
dec
inc
sbb
mov
cmp
push
lret
rorb
xchg
rolb
lret
or
into
in
fcmovbe
adc
xchg
add
les
or
pop
fildl
into
loopne,pn
sub
pop
add
dec
push
push
nop
fwait
test
lods
gs
pop
jb
mov
dec
gs
mov
xlat
dec
out
mov
push
mov
movl
ss
xlat
insl
popa
add
cmp
or
fsubs
test
fstps
xor
or
fsubl
test
xchg
push
movsb
loope
shlb
in
jg
lret
dec
jp
shll
iret
out
orl
scas
test
scas
ja
mov
or
xor
sub
pop
repnz
add
pop
cmp
push
pop
cmp
sub
inc
jne
jne
add
stos
or
adc
mov
mov
add
mov
cwtl
jbe
sbb
xchg
or
outsb
inc
notb
mov
cmp
jecxz
xor
gs
pushf
in
scas
sub
pop
and
mov
dec
cmc
or
dec
push
pop
and
xchg
rcrl
sbb
inc
pusha
das
int3
jnp
repnz
repnz
cltd
in
cwtl
xchg
xchg
cmp
add
xlat
jae
test
dec
sbb
loop
aaa
inc
and
or
test
ljmp
mov
cmc
nop
jae
cmp
jo
sbb
dec
jecxz
into
jmp
add
mov
mov
out
push
test
insl
jecxz
cmpsl
push
scas
jp
push
loop
clc
and
pop
dec
aad
repz
bound
xor
cli
inc
int3
pusha
insl
imul
shr
in
xorl
mov
mov
cmp
ds
ret
imul
push
repnz
dec
ds
scas
push
pop
repnz
fidivrs
fisttpll
pushf
test
icebp
push
incl
gs
jp
mov
dec
dec
pop
pushf
stos
test
cmpsb
aaa
insl
das
test
pop
add
mov
and
or
adc
cld
pusha
jb
push
adc
out
xchg
rolb
lock
cmp
movsb
loope
fildll
jae
out
pop
roll
pop
addr16
jmp
mov
lcall
movsb
movsl
add
mov
mov
test
lret
fnsave
jl
mov
std
cmp
pop
fadd
push
sbb
cwtl
dec
pop
inc
pop
jns
in
stos
cmp
test
jmp
cmpl
or
lock
xchg
jbe
sar
and
and
mov
fistps
xor
push
sbb
iret
and
jne
je
pop
jmp
or
push
lcall
inc
dec
add
shr
xchg
push
mov
push
in
popa
lcall
cmp
mov
lods
mov
int3
jns
pop
pop
lret
pop
lahf
add
out
in
icebp
or
out
imul
popa
xor
xor
inc
hlt
aam
repnz
scas
pop
cmc
dec
sbb
stos
fstps
adc
imul
push
bound
loope
mov
aam
ljmp
test
scas
pop
xchg
in
cmp
and
ja
stos
xor
xorb
cmp
xor
pop
sbb
icebp
mov
out
jo
sbb
mov
arpl
divl
cld
jl
ficoml
test
cmp
mov
mov
imul
test
lods
rcr
loopne
lods
push
repz
mov
inc
fsubp
adcb
push
xchg
inc
lods
push
repz
cld
or
or
es
arpl
in
fcmovnbe
into
mov
jl
jg
cmp
popa
dec
inc
clc
clc
pop
lock
add
xorb
mov
mov
mov
sbb
int3
int3
mov
xor
push
sti
inc
and
leave
scas
daa
mov
lahf
push
or
ds
mov
xchg
fs
push
je
in
sti
push
movsl
sarb
pop
repnz
fbstp
cltd
mov
mov
outsb
testb
adc
and
adc
sub
and
inc
mov
adc
es
and
out
mov
mov
xchg
mov
in
jb
stos
les
fst
xor
sub
xchg
mov
and
loopne
cmc
push
inc
repnz
and
and
cmp
cmpsb
push
sarl
add
loope
push
loopne
mov
xchg
push
fadds
cmp
dec
or
shll
icebp
loopne
insl
stos
lods
ljmp
imul
mov
mov
test
jo
ja
push
add
data16
mov
icebp
scas
mov
pusha
fists
testb
aaa
pop
stos
sub
bndldx
shrb
xchg
inc
test
push
rcll
and
cmp
addl
jp
roll
mov
adcb
ljmp
mov
jp
nop
ficoms
cwtl
ficoml
insl
mov
iret
das
cwtl
inc
pop
call
je
sub
ds
nop
fistl
mov
lods
dec
pop
filds
sti
or
cmp
inc
sti
je
jno
data16
je
fsubl
jno
cmp
and
mov
mov
cwtl
pop
jno
push
jl
movsl
lds
scas
adc
sub
push
xchg
pop
test
lock
in
setg
shll
adc
fwait
mov
inc
icebp
xor
scas
ficompl
nop
ljmp
xor
cmp
test
repnz
sbb
int
insb
loope
clc
adc
movsl
popf
mov
cld
jg
jae
inc
mov
jnp
jne
dec
or
subl
inc
adc
inc
fwait
scas
mov
sbb
mov
mov
fwait
stos
inc
jbe
xchg
lds
sub
xor
lds
call
push
sub
or
arpl
adc
fistps
scas
movsl
cmpsl
dec
inc
into
incl
cmpsb
mov
and
xchg
sti
adc
jae
scas
jecxz
movsb
roll
sbb
add
pop
hlt
mov
mov
adc
idivb
emms
push
inc
imul
jmp
leave
fisttps
jge
jp
mov
lcall
dec
cld
pop
mov
mov
lea
jl
mov
add
stos
sarb
mov
scas
mov
adc
cwtl
call
and
cltd
sub
repnz
jl
stc
stos
shrl
jg
xorl
adc
push
movsb
sbb
pop
add
ja
cltd
rorl
and
test
push
cld
xchg
imul
sti
add
shrb
mov
incl
cmp
push
mov
notl
out
xchg
shrl
fidivrl
add
pop
sub
pop
adc
js
jp
aam
sbb
mov
popa
add
mov
movsl
or
xchg
jmp
pop
adc
sar
xorl
test
fisubrs
xchg
ret
test
insl
sub
hlt
inc
xor
sbb
mov
sub
ljmp
jnp
jne
push
lods
scas
inc
mov
cmpsl
inc
mov
push
sbb
inc
mov
lods
or
bound
adc
mov
call
lods
adc
in
test
xor
ret
jl
sahf
mov
sub
and
pop
testb
xchg
add
fisttps
mov
xchg
bound
mov
mov
decb
movsb
lcall
cli
add
push
dec
cs
fildll
and
jo
mov
xor
stc
mov
mov
loope
mov
jl
push
xchg
cmp
sbb
fsin
das
and
cld
pop
adc
fs
cli
in
jecxz
inc
adc
push
push
push
roll
enter
in
jns
iret
push
test
and
mov
and
dec
mov
into
subb
fs
add
push
pop
mov
mov
push
mov
mov
mov
cld
and
out
jno
cmpsl
or
shlb
in
or
sub
dec
pop
mov
pop
lods
fldenv
and
sub
mov
pop
in
jl
fwait
int3
jnp
cmpsl
add
xchg
push
sub
outsb
xor
or
jnp
xlat
out
jle
icebp
stos
cmp
adc
mov
dec
lahf
aam
idivb
and
and
push
lcall
and
bound
xchg
xchg
test
lds
jae
test
pushf
aas
sti
in
or
mov
int
xchg
push
lds
out
fidivrl
out
std
lret
inc
mov
jmp
cmp
mov
ja
adcb
leave
mov
fsubrs
push
fidivs
daa
cmpsl
inc
inc
hlt
and
mov
fucomip
nop
pop
test
push
inc
xchg
sbb
leave
xor
dec
cs
shl
rorb
sti
adcb
inc
dec
mov
mov
ss
sub
int3
and
ffree
mov
stc
dec
pop
lds
inc
xor
aas
jge
add
pop
test
jl
jne
pop
iret
mov
mov
std
cmp
fidivrs
inc
or
and
mov
push
lret
js
rcl
push
imul
xor
xchg
jg
cmp
outsl
push
adc
orb
mov
jno
mov
mov
addr16
jp
jne
sub
je
ss
and
cmp
cltd
sbb
jmp
movsl
cwtl
dec
add
adcl
in
adcb
pop
push
addr16
jle
mov
rep
adc
pop
sub
int3
lods
xchg
xlat
ss
lock
push
push
sbb
loopne
cld
stc
in
shll
lret
pop
adc
inc
roll
jl
stc
sub
fiadds
testb
cmp
and
mov
xchg
push
gs
cs
sbb
cwtl
or
fbld
es
repz
inc
and
and
add
sti
out
fstpl
pop
pop
or
lahf
rolb
clc
aad
push
lods
push
xchg
mov
test
test
fstl
and
cmp
insl
sahf
mov
outsl
movsb
dec
xor
mov
push
add
scas
cltd
pusha
cmp
jne
in
stos
insb
pop
sbb
sbb
xchg
dec
mov
inc
lret
jb
lock
scas
cmpsb
daa
test
into
sbb
inc
push
cwtl
push
shlb
push
lock
mov
clc
inc
or
notl
test
and
out
jp
out
scas
data16
and
adc
xchg
inc
les
arpl
mov
aam
aam
push
dec
into
in
ret
or
or
data16
loope
sub
popf
je
sti
xlat
jne
sbb
mov
push
cmp
push
in
in
outsl
stos
cld
cmc
mov
cmp
pop
xor
inc
les
xchg
imul
outsb
dec
pop
repz
ja
xchg
pop
sub
pop
mov
enter
pop
pop
or
sub
clc
aaa
pop
in
icebp
mov
punpcklwd
rorl
data16
mov
iret
pop
inc
xchg
in
add
and
fdivs
js
addr16
adc
jno
xchg
xor
roll
cmpsb
jl
and
cmpl
stc
movsl
jae
and
ret
mov
push
lahf
imul
sbb
daa
loopne
mov
das
mov
or
loop
sarb
push
pop
sbb
xchg
mov
dec
mov
xor
ds
xchg
pop
xchg
add
bound
out
mov
scas
mov
jmp
in
je
loop
mov
rclb
pusha
xchg
fldlg2
sbb
fidivrs
je
lock
shr
addr16
mov
decb
repz
into
subl
inc
dec
jg
int
jnp
shrl
test
stos
mov
adc
cmp
sub
xor
mov
in
jmp
loope
ret
je
aad
xorl
in
and
dec
aaa
cli
mov
push
xor
lcall
shl
fldenv
scas
and
cmp
test
jb
fisttps
test
or
ret
cltd
fsub
lods
hlt
addr16
nop
and
jl
lds
jbe
scas
mov
mov
lcall
rorb
in
adc
or
cmp
xor
cmp
bound
lods
dec
xchg
test
push
mov
out
jge
cmpsl
std
cld
inc
icebp
insb
add
xor
xlat
inc
icebp
mov
test
adc
or
xor
loopne
and
std
cwtl
inc
inc
mov
mov
insl
pop
mov
inc
xchg
push
es
inc
mov
lcall
jl
adc
bswap
sti
data16
test
ret
notl
and
inc
xor
fisubrs
insb
push
clc
xor
imul
inc
or
xor
call
lods
cmp
sub
push
fsubrs
popf
jae
cs
cmp
adc
push
mov
in
add
mov
ret
cli
sub
gs
iret
cmpsl
or
lcall
clc
and
lcall
pop
popl
mov
into
pusha
pusha
mov
out
or
flds
sbbl
popa
fisubrl
addr16
lcall
dec
movsl
aam
dec
nop
addr16
or
pop
call
mov
cmp
jmp
mov
cmpsb
inc
das
xchg
or
mov
xchg
popa
lahf
fstps
sbb
aaa
out
mov
jmp
mov
test
fbstp
dec
xchg
fistl
rclb
scas
ret
imul
adc
sub
sbb
fidivs
ret
push
fs
add
mov
dec
in
or
or
adc
dec
xchg
cmc
sarl
stos
std
jb
and
adc
sub
jbe
nop
xor
jmp
adc
sbb
leave
or
jmp
aas
mov
fxam
add
dec
cmp
ret
sbb
push
sbb
mov
mov
test
dec
insb
call
insb
xor
flds
fwait
push
fimull
and
lcall
mov
adc
push
push
pushf
inc
adcl
sahf
add
push
fnsave
push
repz
pop
jno
fs
or
or
xor
mov
mov
cmc
xor
daa
jb
lret
push
pop
popf
sub
aas
rcr
test
gs
in
cmp
into
pop
iret
mov
mov
adc
add
fiaddl
dec
lods
mov
das
sub
jns
pusha
dec
mov
lock
xor
push
pop
mov
mov
xchg
roll
std
test
pop
subl
mov
mov
xchg
mov
inc
je
into
dec
cmp
sahf
ljmp
test
loopne
cmp
sub
jne
ja
jmp
push
call
add
cld
xor
push
in
imul
mov
xchg
jb
xor
sub
xchg
cmp
inc
outsb
out
out
fists
inc
cmpl
js
inc
out
lea
and
jae
xorb
fsubs
lods
xor
test
in
sub
mov
pop
cwtl
push
fstl
and
xchg
mov
jmp
and
sbb
inc
dec
sahf
push
hlt
mov
xchg
stc
pop
jnp
psubd
push
lcall
pushf
repnz
movsl
into
mov
or
test
cld
in
mov
mov
push
lock
xor
mov
inc
sbb
stos
out
dec
xchg
mov
sbb
or
nop
inc
fdivr
push
dec
outsb
outsl
popa
fwait
inc
out
push
adc
lcall
sub
jno
in
fs
jns
cmp
adc
pop
adc
sbb
std
das
xor
dec
mov
out
es
pop
sbb
adc
ja
sub
ds
add
in
pop
and
mov
xchg
mov
jnp
mov
or
leave
lret
and
repz
mov
nop
cmc
test
xchg
data16
jnp
pop
push
dec
outsb
into
xchg
rcll
hlt
addb
outsl
dec
ss
xchg
enter
push
scas
repz
stos
lods
mov
addb
movsb
ja
inc
pop
fistpl
pop
cmc
cmpsb
sbb
enter
sbb
adc
fwait
icebp
stc
or
cmovge
jecxz
xlat
and
sbb
xchg
push
call
bound
jge
lock
sub
add
add
lods
jge
cltd
ret
lods
push
jecxz
adc
pop
pop
call
push
fdivl
sahf
mov
lea
jnp
popf
adc
cld
xchg
add
push
movsl
xchg
xor
not
in
aas
mov
pushf
pushfw
inc
cmpsb
cs
dec
sbb
rorl
jmp
rcrl
std
fs
imul
js
adc
xchg
dec
bnd
or
outsl
sbbl
add
push
stos
ja
fdivr
mov
fistpll
in
clc
idivb
push
in
imul
lcall
jbe
out
lods
fcmovu
add
sub
xchg
mov
add
test
popa
insl
stos
jae
pop
out
movsl
xchg
fsts
push
test
xchg
mov
popa
loopne
bound
jne
dec
jecxz
mov
mov
inc
testb
loope
dec
adc
cmp
popa
hlt
lods
enter
stos
shlb
fiaddl
push
aas
jmp
jecxz
icebp
and
lcall
cmp
pop
imul
imul
cmp
pop
jbe
je
xlat
jecxz
mov
mov
imul
fidivrl
or
sysret
dec
mov
mov
je
insl
divl
aas
loopne
push
push
in
cmp
lret
xchg
jb
ret
dec
cmp
fidivl
mov
and
lods
pop
sbb
xchg
xorl
stc
icebp
jge
jle
cmpsb
in
pop
push
inc
fistpll
repz
orl
or
and
sbb
mov
lods
adc
call
insl
mov
sarl
jp
test
pop
enter
add
mov
inc
cwtl
lcall
inc
push
sahf
sahf
adcb
jge
and
add
dec
xor
lods
mov
mov
fwait
std
jo,pn
add
rorl
cmpsb
popa
add
pop
xor
adc
adc
mov
or
mov
les
cmp
std
jbe,pn
stos
mov
jp
xor
push
js
push
mov
push
inc
das
pushf
dec
xchg
or
push
jl
into
out
je
mov
or
ret
fidivl
mov
mov
test
push
pop
xlat
lret
cltd
jp
sub
jno
adc
fwait
out
enter
add
lods
mov
pop
push
lahf
test
pop
pop
push
inc
inc
stos
enter
sahf
mov
wbinvd
push
les
int3
xor
scas
mov
dec
ret
aad
cmp
sbb
fcmovnb
stc
popa
cmp
repnz
adc
mov
inc
pop
fdivs
stos
cmp
inc
push
xchg
in
jecxz
lcall
mov
adc
and
sahf
stc
or
jnp
rorl
push
mov
aam
dec
rcrb
mov
adc
je
lea
jp
jbe
pop
roll
das
inc
test
cs
push
sub
dec
pop
stos
lcall
push
dec
ljmp
pop
sub
mov
int3
int3
and
jp
ja
sarb
dec
ja
jle
add
mov
jp
jl
adc
mov
xor
in
stos
mulb
int
shlb
out
sub
in
mov
fwait
lea
lods
or
add
xor
cmp
jg
dec
loope
lret
ret
push
shrl
mov
inc
sub
aas
mov
jecxz
mov
xor
dec
push
or
mov
dec
xchg
add
ret
inc
or
mov
lcall
out
dec
outsb
sbb
imul
mov
or
imul
daa
or
imul
arpl
sahf
pop
sub
iret
push
ss
jg
mov
xor
lahf
mov
dec
push
pushf
fcompl
add
sbb
mov
jl
dec
xchg
jns
xchg
daa
push
sbb
fildll
pop
jbe
in
mov
xorl
xchg
mov
pop
dec
sub
lret
lds
cs
subb
and
xor
je
shr
int3
inc
jns
gs
scas
fildl
sbb
dec
sbb
xchg
adc
xlat
xchg
int3
jne
jbe
jae
mov
or
imul
jge
inc
ljmp
test
cmpsl
push
adc
movsb
mov
aaa
lret
jns
mov
mov
sub
add
repnz
pusha
jg
sub
ljmp
popa
sbb
gs
inc
xchg
cmp
sub
in
aaa
out
stos
cmpsl
jae
lods
aam
out
push
jb
mov
pusha
loopne
ret
mov
cld
fld1
mov
pop
out
xor
add
in
or
imul
adc
push
sbb
lcall
imul
shlb
sbb
addr16
adc
hlt
aad
repz
ss
into
ja
loopne
aad
add
adc
out
push
and
mov
inc
pop
rclb
jo
fmul
mov
repnz
mov
movsl
shll
mov
mov
push
lds
enter
xor
les
fwait
sub
ja
lods
dec
cmc
push
xchg
sub
leave
xchg
jae
push
mov
xchg
lds
jns
add
daa
adc
mov
call
shrb
pop
or
pop
sbb
xor
mov
fs
pop
cmp
aad
mov
gs
jbe
mov
xchg
jmp
stc
cmpsb
sub
inc
pop
hlt
aad
sub
push
aam
dec
push
mov
scas
insl
inc
leave
push
sub
ljmp
push
adc
stos
inc
imul
mov
ret
inc
mov
cs
xchg
mov
adc
cmpl
or
and
add
xchg
add
or
into
dec
sbb
scas
ret
mov
cmp
mov
fsts
enter
or
jne
add
jle
jmp
mov
pushf
aas
inc
push
cmpsb
clc
in
repz
xchg
arpl
aaa
xchg
sbb
dec
imul
push
cmp
cld
cli
imul
jns
xchg
in
mov
movw
hlt
sbb
add
into
jbe
cltd
and
ret
sarb
or
push
or
adc
add
mov
push
add
sbb
cmpsl
jns
mov
popf
or
sbb
sbb
mov
fiadds
sub
jle
dec
cmp
inc
ja
cmpl
xchg
shll
sbbl
lea
jb
lods
cmpsl
pop
sahf
mov
shl
imul
cmp
movsl
jb
mov
lret
repnz
jno
daa
ljmp
mov
and
fcmovnb
lcall
adc
bound
cmpsb
repz
and
ja
test
out
cmpsl
pop
imul
jb
pop
mov
ja
jecxz
loope
mov
jns
test
pop
xchg
push
divb
mov
or
mov
mov
sub
mov
jmp
into
pop
push
insl
ret
cmp
ror
pop
addb
nop/reserved
xor
xchg
xlat
mov
push
outsl
jmp
in
sbb
cli
rcrl
mov
cmpsb
fsubrs
push
sahf
sahf
xchg
ds
and
in
std
rcll
xchg
imulb
adc
add
cmp
lods
or
push
xchg
clc
inc
rorl
mov
mov
jne
out
and
xchg
push
aaa
push
aam
dec
pusha
imul
test
dec
pop
sahf
add
and
stos
pop
cmp
cmp
push
cmp
cld
jl
shlb
xchg
test
or
mov
mov
jle
xchg
aad
push
in
pop
inc
pop
insl
rcrl
pop
test
xchg
cltd
cmpsb
pop
sub
adc
sbb
pop
mov
xchg
movsb
mov
pop
imul
pop
sbb
cmp
and
cmp
stos
add
xorl
sub
push
pop
je
mov
outsb
fmuls
jne
and
dec
xchg
jecxz
aaa
dec
dec
pushf
push
jl
popa
das
push
sbb
mov
xor
popl
in
sub
add
test
mov
ret
scas
hlt
mov
test
pop
add
bound
ret
and
cld
mov
xchg
jb
into
int3
add
xchg
outsl
test
inc
jb
jne
pop
jecxz
jbe
lods
xor
notb
dec
inc
push
mov
sbb
cld
mov
and
jnp
je
sbb
xor
add
mov
in
mov
cmp
cmp
jecxz
movsl
xchg
jb
and
dec
ds
cld
mov
lahf
inc
enter
add
int3
adc
jmp
push
cli
test
out
xlat
inc
test
leave
fwait
clc
aaa
fimull
push
xor
ds
iret
mov
mov
mov
xchg
and
cld
and
xor
and
pop
adc
jl
and
mov
andl
fnstsw
cs
inc
lock
fs
mov
lret
in
xor
jae
pusha
mov
jo
insl
pop
into
mov
pusha
mov
adc
xor
xor
add
or
mov
jb
jecxz
adc
ret
and
cmpsb
pop
stos
popa
mov
sti
push
das
popf
cmp
mov
xchg
mov
and
dec
jbe
xchg
or
inc
insb
lea
rep
in
or
aaa
ja
pop
mov
and
cld
pop
mov
jbe
lods
push
fwait
sbb
shll
sbb
test
fsubrl
or
push
sti
cli
jo
repz
dec
adc
mov
sbb
movsb
mov
mov
sub
or
or
push
pop
jecxz
imul
add
iret
ds
loopne
pop
push
jnp
and
sbb
or
dec
leave
mov
leave
dec
call
cli
push
dec
jg
cmp
ja
inc
inc
push
pop
aam
mov
popf
xchg
dec
sahf
mov
jl
scas
ficoml
out
js
sbb
fisttps
mov
outsl
idivl
xchg
xlat
imul
or
mov
xor
sub
push
sti
xor
cmp
xor
addr16
adc
xor
inc
fcmovbe
lea
dec
push
repnz
xchg
xor
and
mov
stos
sbb
xchg
test
cmc
xor
stos
mov
cmp
mov
int
mov
mov
idiv
orb
xor
arpl
out
dec
cmp
in
iret
js
inc
fldt
push
pusha
repnz
enter
mov
adc
lods
pusha
nop
scas
pop
mov
dec
dec
test
rcr
or
ja
push
or
mov
xchg
loope
ds
push
dec
ljmp
inc
mov
sbbl
iret
mov
pop
int
push
testb
lds
and
mov
sub
aad
out
hlt
repnz
mov
xor
into
jecxz
or
out
cwtl
adc
cmp
mov
or
jo
movsb
aaa
pusha
and
mov
mov
insb
mov
les
dec
cmp
ret
or
sub
shlb
mov
jmp
and
fnstsw
pop
cmpl
int
mov
test
sbb
cmc
mov
add
rep
push
fimuls
inc
loope
out
push
push
sub
aas
dec
mov
cmp
cmp
sbb
sub
dec
xchg
or
add
inc
dec
push
insl
jp
mov
dec
ror
movl
sub
push
fstps
pop
int3
loope
fadds
insb
rcrl
popa
xchg
dec
mov
inc
scas
dec
aaa
xchg
stc
pop
xor
fidivl
jb
add
repz
mov
scas
cmpsl
mov
xlat
mov
inc
jmp
mov
xchg
jb
insl
adc
sarl
xor
jl
xor
xchg
roll
cld
out
sbb
pop
pusha
and
adc
into
mov
iret
sbb
fistpll
lcall
dec
test
push
pop
les
rdmsr
lds
sub
sbb
pop
cmp
adc
mov
lea
adc
mov
cli
cmc
cmpsb
mov
xor
rcr
cmp
pop
js
inc
mov
xchg
sbb
lret
and
cltd
push
mov
cltd
leave
push
jnp
mov
sbb
out
sbbl
inc
add
in
and
inc
fistps
aam
or
and
inc
add
cmpsb
and
notb
mov
inc
push
int3
mov
daa
cmpsb
and
addr16
in
cmpsl
repnz
xchg
cmp
mov
inc
in
test
fstp
pop
push
adc
xor
push
jo
jle
fstps
and
scas
imul
dec
data16
movsl
adc
fsubl
out
pop
pop
in
and
or
xor
inc
fs
stos
test
adc
cmp
cli
bound
sub
stos
inc
dec
lods
in
xchg
pop
and
and
pop
push
ljmp
imul
popf
xchg
mov
fisubs
inc
dec
pop
rclb
inc
rcll
out
mov
int
sbb
push
fiadds
or
mov
lods
mov
sub
dec
add
popa
lds
insb
icebp
pushf
pop
pushf
nop
popf
je
dec
and
rcrl
jno
xor
imul
add
call
pop
incl
ljmp
push
mov
mov
idivb
pshufw
outsl
add
inc
xchg
xchg
rcrl
dec
call
cs
jg
cmp
pop
imul
mov
mov
int3
iret
push
scas
pop
into
adc
das
leave
repz
push
lock
inc
aam
push
shll
push
aam
int3
iret
int
int3
mov
cltd
mov
aad
fsubl
rcrl
insb
enter
lea
xor
les
aad
leave
sbb
jno
enter
insl
ret
or
mov
stc
and
jbe
pop
int
mull
lret
out
or
cld
mov
xchg
sbb
push
daa
rcrb
je
popa
inc
fnsave
xor
movsl
inc
sti
cwtl
cltd
mov
or
in
dec
fucomip
insb
sub
arpl
enter
je
in
imul
dec
in
das
and
sarl
aaa
call
cmc
jg
cmpb
jge
shlb
mov
mov
fimuls
pushf
test
mov
pop
and
or
pop
ss
mov
pop
enter
sbb
ja
jae
clc
popa
lds
cmp
push
hlt
imul
mov
add
fadd
push
es
cmp
inc
cmp
add
mov
inc
mov
pop
jbe
xor
sub
dec
scas
sti
lock
pop
jg
mov
scas
lea
movsl
pop
nop
sbb
out
inc
dec
mov
pop
inc
movsb
pop
mov
div
xchg
add
int3
pop
xor
pop
nop
nop
outsl
mov
pop
dec
in
test
xor
cmp
mov
movsb
rclb
mov
int3
aaa
sub
daa
mov
xlat
xchg
mov
dec
insl
mov
lahf
leave
pop
dec
shrb
mov
pop
ret
addl
out
icebp
scas
push
rolb
stos
mov
push
js
stos
dec
mull
jecxz
push
fwait
ljmp
lods
sahf
stos
fwait
dec
out
shr
mov
cltd
fldl
cmp
shrb
dec
and
outsl
or
mov
scas
ja
cli
mov
outsl
aas
dec
cld
push
mov
and
loopne
xchg
xchg
arpl
movsb
call
mov
jmp
jne
push
xor
outsl
sub
or
dec
test
lods
bound
xchg
jae
scas
out
xlat
cli
fstpt
push
mov
jne
lahf
pop
xchg
sbbb
dec
shrb
gs
adc
sub
jp
push
pop
je
inc
xor
clc
fdivs
xor
cs
in
jb
pop
scas
fistps
outsl
repz
inc
xor
cmp
push
shrl
or
lcall
or
stos
cmp
or
into
adc
cmp
js
jne
dec
mov
aam
jne
inc
add
jge
push
add
mov
mov
jbe
xchg
ljmp
in
loopne
ja
or
push
dec
movsl
mov
adc
and
mov
xchg
pop
test
jo
adc
xchg
fcos
popl
cwtl
lock
push
add
mov
jmp
dec
jnp
jo
cmp
scas
hlt
mov
xor
sbb
test
repnz
push
hlt
jae
jno
fdivs
scas
and
enter
inc
cmp
ja
jne
jl
imul
push
fcoms
push
sbb
adc
rcll
lods
adc
outsl
sbb
insl
add
jg
xor
and
in
cmpsb
push
iret
outsl
inc
mov
cltd
popf
mov
sbb
sbb
rorb
dec
loopne
push
push
das
fwait
adc
pop
and
aas
repnz
inc
jb
mov
fs
xchg
mov
lahf
adc
out
xchg
mov
in
pop
or
xor
jb
mov
int3
imul
iret
shll
das
fimuls
sbb
mov
xor
push
imul
sbb
inc
aas
xor
add
dec
scas
mov
sahf
bnd
cltd
push
addb
shll
xchg
cmp
ljmp
arpl
add
faddl
xchg
lret
jecxz
pop
mov
repnz
fstp
pop
lods
das
sti
iret
pop
sarb
mov
cmp
add
dec
cld
movsl
xor
in
sbb
and
xchg
or
sahf
jno
repnz
mov
ret
stc
test
ret
xorb
cli
pushl
push
inc
inc
enter
test
imul
ljmp
inc
decb
push
mov
imul
sub
pop
cmp
mov
nop
lret
cmp
sbbb
outsb
lret
push
ror
inc
loopne
jb
jecxz
fucomip
dec
xchg
ja
out
mov
mov
inc
add
andl
les
cmp
cs
pop
fistpl
inc
arpl
in
stos
test
xlat
mov
hlt
cltd
dec
aad
stos
xchg
pusha
andl
add
pusha
lods
das
xchg
imul
ds
add
pop
add
xor
sub
mov
mov
pop
loop
jg
sub
add
sahf
imul
xchg
jnp
test
cs
mov
and
cli
mov
jae
cld
push
and
or
leave
sarl
outsl
lahf
mov
jmp
push
ljmp
rcrl
inc
sub
sbb
sbb
mov
mov
scas
sbb
sbb
inc
movsb
sbb
jmp
mov
test
insl
push
insb
mov
jo
repz
out
inc
popa
dec
push
adc
jb
mov
pop
out
addb
ds
mov
push
or
mov
dec
sbb
test
cmp
js
sub
mov
in
cmpps
xchg
fsts
push
movsb
mov
dec
divl
or
rorl
out
and
mov
int3
xor
les
xor
les
dec
cmp
add
push
es
pop
fwait
xlat
in
inc
cmp
lock
mov
ret
add
and
jge
xor
fcoml
add
js
fimull
and
cmp
addr16
and
push
in
push
ror
push
and
imul
test
movsb
push
mov
jp
and
push
ja
rol
das
icebp
aad
out
sub
and
and
lret
mov
jge
push
push
inc
call
sbb
xor
pop
rcll
sub
push
shrb
lahf
sbb
outsl
or
adc
cli
pop
lcall
xchg
lcall
adc
add
xor
test
xchg
into
call
neg
fsubs
rcl
fstpt
imul
repz
inc
outsb
mov
add
inc
insl
fwait
inc
pop
jl
mov
sarl
dec
rorb
daa
and
push
pop
jne
mov
nop
and
roll
sub
push
mov
add
lret
dec
popa
push
push
xlat
popf
mov
mov
aam
mov
mov
jae
mov
lahf
es
jge
xchg
mov
lret
mov
mov
xor
push
mov
arpl
fnstsw
in
cwtl
sub
push
test
dec
jmp
mov
sar
pop
inc
loop
and
call
notl
inc
sbb
popf
loopne
dec
or
pop
leave
inc
push
adc
jo
sub
cmp
outsb
repz
or
add
mov
inc
int3
xchg
imul
mov
sub
mov
mov
negl
cmp
lret
jnp
loope
and
call
mov
ljmp
cmp
dec
addr16
loop
sti
cwtl
jl
or
into
in
frstor
inc
adc
or
mull
ss
inc
es
daa
xlat
add
shl
mov
cmpb
mov
xchg
xchg
mov
push
sahf
es
int3
sbb
inc
test
jb
inc
nop
xlat
sbbb
std
mov
pop
test
sbb
sbb
leave
fisubl
pusha
fs
test
xchg
daa
push
bound
pop
pop
and
les
and
mov
aam
xchg
mov
aas
inc
movsl
xor
dec
std
jb
dec
bound
inc
in
cmpsl
out
mov
movsl
fdivl
mov
movsl
mov
adc
shlb
test
fstpl
jge
popf
cmp
notl
imul
mov
cli
cmp
fsubrl
adc
cli
push
nop
push
mov
or
add
loopne
cmpsb
popa
mov
xor
lret
or
or
dec
test
ss
xchg
cwtl
movsl
repnz
cmp
leave
dec
push
fiadds
push
xorl
mov
jne
and
insl
or
out
jg
in
pop
das
lcall
jmp
push
sub
mov
add
jbe
out
jmp
stos
lcall
sub
pushf
jge
xchg
pop
pop
push
sub
adcl
loope
sbb
push
pop
xchg
dec
into
pop
fidivl
push
or
jl
cmp
xor
push
insl
dec
jno
addr16
sub
adc
jmp
and
cld
or
cld
xchg
xchg
jnp
in
or
or
fstl
xor
scas
out
jl
repnz
fists
inc
mov
mov
adc
enter
inc
popa
in
pushf
sahf
insl
loopne
add
jp
outsb
lcall
mov
fwait
into
insl
jne
lahf
int3
fwait
mov
lea
insb
pop
adc
jp
mov
cmpsl
addb
sub
add
mov
test
jg
aaa
xorb
jo
push
dec
sahf
inc
jmp
mov
pop
or
inc
outsl
cmp
out
mov
push
mov
rolb
pop
jne
js
into
or
idivb
or
lock
mov
in
insl
or
jecxz
rcrb
out
sub
cmp
push
les
sub
movsb
mov
mov
or
push
cwtl
fs
sbb
or
mov
mov
jnp
and
cmp
cmp
add
sub
and
in
aad
sub
jl
pop
lahf
insl
sub
pushf
int
aaa
xor
mov
mov
bound
sahf
scas
iret
or
dec
lea
jg
cmp
popf
les
jno
insb
jge
imul
scas
addr16
add
push
adc
fninit
pusha
mov
repz
push
cmp
add
mov
pop
push
add
pushf
push
mov
mov
adc
xchg
push
push
and
jl
fdivr
loope
cli
addb
add
aam
fldt
cmpb
fisubrs
ja
xchg
mov
enter
les
flds
out
test
pushf
icebp
sbb
insb
loopne
jle
int
inc
sbb
adc
cmp
mov
call
mov
icebp
imul
rcrl
adc
out
cmp
pushl
ja
push
mov
jg
in
push
dec
sarb
pop
scas
add
mull
lods
cmpsb
pop
rclb
pop
clc
mov
outsl
add
rorb
inc
or
mov
dec
fsubrl
cmpl
adc
push
mov
fdivl
bound
sub
jne
vpcmpgtb
lods
and
outsl
adc
fwait
adc
add
or
mov
ret
sbb
adc
movsb
and
scas
lds
pop
and
addr16
dec
mov
add
scas
mov
mov
loop
dec
mov
movsb
fidivs
xchg
xchg
mov
mov
std
lock
add
sahf
xor
lds
pop
jnp
rclb
push
mov
mov
enter
enter
out
sbb
lahf
imul
cmp
add
inc
dec
and
jge
into
shll
xor
das
mov
and
xlat
xchg
jns
rorb
mov
mov
adc
add
cltd
in
and
pop
ret
stos
imul
push
mov
cmp
lods
es
imul
fmuls
enter
pop
movsb
push
jae
in
mov
push
and
sbb
mov
pop
dec
ret
out
xor
test
fwait
divb
pusha
lods
cld
xchg
pop
sub
cmp
adc
sbbb
daa
nop
jb
aad
stc
fld
pop
jno
sbb
xlat
iret
in
sub
pop
inc
dec
cmp
test
test
movsb
mov
jecxz
xchg
push
bound
mov
inc
orl
pop
mov
out
fdivrs
push
sub
rdtsc
ds
sub
push
xor
jae
ja
xchg
cld
test
fsubrl
arpl
pop
xchg
and
sbb
mov
sti
dec
xchg
and
out
imul
popf
and
orl
les
inc
cld
mov
xchg
shlb
aaa
mov
aaa
lret
sub
and
out
decl
movsb
pop
push
add
mov
cmp
inc
shlb
dec
stos
add
mov
faddl
lret
sbb
daa
inc
xchg
dec
adc
aam
and
dec
inc
mov
and
mov
mov
movswl
enter
lret
jae
mov
mov
scas
sbb
mov
out
dec
xlat
aaa
or
xchg
jl
add
sub
dec
add
rcrb
inc
inc
es
out
sub
hlt
xchg
cmp
divb
push
js
jle
pop
lds
in
and
lea
jo
xchg
push
test
fs
bound
shl
je
data16
fcomps
fnop
jl
dec
jnp
sub
adc
add
jno
inc
shl
hlt
sbb
sbb
mov
sbb
mov
adc
and
sbb
push
jnp
loop
sub
movsl
arpl
stc
push
nop
pop
adc
ror
mov
cltd
into
xor
mov
dec
daa
pusha
adc
cli
cwtl
cmc
inc
insb
aaa
and
push
outsl
pop
mov
dec
fnstsw
incl
movsl
pop
push
mov
fstpl
pushf
pop
mov
mov
ds
add
imul
mov
add
fimuls
push
dec
leave
push
add
sub
and
dec
mov
hlt
addr16
dec
shrl
loop
imull
loope
hlt
mov
pusha
call
jno
mov
insb
add
mov
scas
es
adc
lock
push
inc
fucomp
cwtl
fimuls
ljmp
test
rcr
cmp
rcrb
repz
fsubl
cmpl
push
cmp
push
jb
out
test
or
or
lret
lods
sbb
leave
movsl
pop
imul
xchg
daa
mov
cmp
out
jmp
hlt
sbb
mov
mov
and
sub
xchg
xchg
cmpsb
add
sbb
aas
mov
cld
xchg
inc
ja
setnp
and
cltd
or
idivl
iret
roll
cmpsb
test
cmc
stos
ret
jbe
sar
adc
js
sarb
lods
outsl
daa
lret
outsb
xorb
aas
sbb
inc
sub
mov
jae
or
jp
fiaddl
and
testl
push
stos
outsb
cmc
insb
lret
jg
mov
cwtl
push
lahf
popa
cmpsb
pop
xchg
insl
xchg
cli
push
int3
adc
push
ss
add
fs
push
push
ds
jecxz
mov
cmpsb
mov
sbb
inc
push
fisttpll
outsl
adc
jle
aaa
lods
mov
ds
arpl
dec
movb
xchg
and
gs
jbe
lods
rcl
sub
push
aaa
arpl
fcomps
mov
cmp
call
outsl
pop
lods
imul
cmpsl
inc
sbb
mov
adc
cwtl
pop
int3
out
shll
or
mov
pop
scas
cwtl
fcmovnbe
xor
push
fbstp
shll
push
repz
repnz
hlt
imull
dec
jmp
cmp
or
dec
pop
xchg
mov
cmpsl
inc
push
imul
fcomi
sti
push
mov
dec
mov
popa
scas
sbb
cmp
adc
in
push
xlat
jns
and
and
imul
xchg
sarl
in
cmpb
cmpl
cli
loop
out
jp
pop
testl
cmp
clc
daa
xchg
in
mov
xorl
pop
cmpb
jne
dec
ficoml
push
lds
adc
xchg
fcomps
or
aas
mov
xor
pop
test
fadds
jle
aas
or
loopne
jnp
pop
xchg
mov
arpl
sahf
xchg
sti
imul
xor
dec
push
push
mov
fildll
mov
int
in
cmp
xor
mov
push
in
rolb
cmp
cmp
sub
lea
sub
sarb
push
mov
push
xchg
ljmp
andb
xchg
das
fsubrs
test
in
int
jne
sbb
enter
pop
mov
popa
pushf
je
xorb
movsl
pop
jmp
mov
jne
inc
int
repnz
jge
pusha
xor
and
and
nop
mov
daa
push
cli
cmpl
and
mov
xlat
dec
es
std
bound
cs
mov
add
rcrl
loop
inc
or
adcb
fisubl
pop
call
mov
das
pop
inc
ds
rorb
shl
jnp
sbb
cmpsb
push
ja
dec
mov
lcall
divl
mov
and
inc
jg
cltd
sub
push
rolb
insb
icebp
sbb
mov
inc
shlb
xchg
into
imul
sbb
and
stos
mov
aam
cltd
mov
jo
jnp
cmp
sbb
sbb
in
or
xlat
daa
jecxz
test
jmp
xchg
stos
xor
fbld
and
out
xor
mov
add
es
xor
lods
lcall
xlat
cmp
mov
out
cltd
out
xor
xchg
and
in
push
inc
fdivrl
mov
ja
mov
pop
push
popa
mov
lret
pop
pusha
pop
sbb
push
loop
sub
je
stos
sub
or
sbb
cld
es
stos
jnp
jno
inc
dec
pop
pusha
mov
mov
les
mov
rclb
push
adc
cmp
movsl
rcl
or
dec
loop
aas
add
fmuls
fwait
dec
xor
mov
fwait
mov
and
or
inc
jge
pushf
sbb
mov
add
pusha
rorb
sub
in
clc
sbb
xchg
aaa
lds
les
lea
loop
repz
jbe
nop
sahf
js
mov
lret
fistl
xchg
test
fisubl
mov
out
pop
call
add
daa
ret
mov
aas
push
push
sub
mov
pusha
push
in
or
mov
movsl
jmp
add
repnz
fldt
xor
mov
movsl
fs
jmp
call
jecxz
cmp
or
bound
mov
dec
ret
jmp
push
pop
paddw
jmp
jb
push
addr16
push
cmc
popf
add
mov
add
push
and
mov
push
orl
aam
xor
inc
cmp
or
xchg
scas
adc
lods
adc
rcll
dec
inc
rcr
ljmp
shrb
mov
mov
pushf
adc
add
sbb
movsb
mov
pop
xchg
pusha
outsb
mov
cmp
or
movsl
sbb
shlb
add
cmp
fsubrs
gs
push
and
sub
fldenv
mov
in
lds
insl
cmp
push
xor
dec
jg
cli
shr
and
lock
fstp
mov
xchg
mov
push
jb
xor
sbb
inc
adc
les
ds
and
pop
jne
aaa
mov
push
sub
shl
push
inc
jecxz
xchg
cmpsl
mov
sbb
sub
push
or
adc
sub
xchg
inc
cmp
jnp
lods
ljmp
push
sub
repz
sub
xor
adc
imull
leave
ret
jp
cmpsl
add
mov
idiv
mov
mov
inc
sub
in
jp
orb
add
lret
xchg
lods
ds
add
push
repnz
test
cmp
xor
int3
int3
jb
insl
cmpb
or
repz
dec
shr
mov
adc
icebp
add
cmc
xchg
sbb
pushf
xor
mov
aad
jbe
mov
mov
inc
inc
lret
out
xor
outsl
scas
push
mov
data16
inc
das
or
shr
jnp
push
cmp
cltd
shll
push
rcr
mov
out
cmovge
cmovae
sub
out
out
sarb
lret
scas
mov
rcl
xchg
adc
xchg
out
fwait
imul
dec
xchg
sbb
shrl
xchg
inc
mov
cmp
sub
stos
adc
imul
into
loop
shll
mov
jnp
push
mov
jns
jae
mov
in
sbb
test
loopne
cmpsl
mov
mov
mov
jo
pop
xchg
sti
push
call
cmp
and
jbe
mov
sub
imul
or
lea
lahf
outsb
in
and
jp
outsl
push
sbb
cmc
fs
xor
clc
outsl
pushf
sub
fisttps
cltd
arpl
clc
sub
sub
mov
dec
imul
add
or
mov
or
lret
push
into
pushf
das
fwait
lret
jno
cld
dec
faddl
push
mov
es
cmp
mov
push
stos
gs
clc
xor
ljmp
inc
clc
xor
stos
mov
in
xchg
jmp
test
push
sub
dec
pop
fwait
xlat
sti
mov
sbb
jbe
lods
bound
mov
cmp
fsubrs
and
xchg
or
or
fldcw
mov
pop
or
roll
popa
mov
fdiv
out
dec
test
lods
mov
cwtl
xchg
out
inc
add
or
xor
push
mov
stos
das
jno
pop
fmull
adc
push
stos
sub
dec
inc
lret
pop
loope
xchg
mov
mov
or
jg
mov
ret
sahf
ret
pop
mov
sti
xchg
movl
sub
mov
scas
inc
insb
dec
es
mov
jb
notb
mov
push
sub
sbb
sub
pop
loopne
movsb
data16
scas
movsb
xchg
mov
mov
outsl
stos
jo
add
and
rcrb
sarb
frstor
lret
out
pop
push
mov
sub
mov
int
mov
fistps
jnp
iret
push
dec
sub
mov
not
iret
sub
scas
test
sbbl
mov
fisttps
lahf
loope
or
daa
xchg
aam
add
dec
dec
ret
inc
sub
and
xchg
lahf
mov
iret
cmp
mov
push
call
rcrl
pop
mov
jge
je
cmpsb
jne
xchg
inc
mulps
jl
mov
pop
adc
add
ljmp
outsb
cmpsb
movsb
cmp
je
outsl
cmc
rcrb
ret
push
dec
inc
outsb
xchg
add
mov
inc
ljmp
jae
mov
sbb
mov
push
push
inc
repnz
andb
push
fildl
lds
lds
mov
push
mov
negl
xchg
in
in
cmc
cmp
push
add
lods
in
les
sahf
xchg
xor
xchg
gs
jmp
loopne
imul
pusha
stc
mov
fisubl
jle
lds
sub
fsubrl
adc
incl
in
out
ljmp
fwait
loopne
mov
push
sahf
icebp
enter
leave
invd
jp
mov
xor
int
sub
push
xor
pop
cmp
mov
clc
pop
cs
add
in
int
lcall
dec
add
inc
lret
or
divb
lret
ja
int3
in
iret
and
hlt
xchg
out
das
push
dec
xchg
sub
rorb
out
push
mov
inc
movsl
pop
pop
clc
popf
dec
mov
xchg
clc
xchg
nop
stos
cmc
adc
xchg
daa
sbb
pushf
sub
mov
cmpsl
les
mov
add
jnp
andl
fsts
roll
lcall
xor
mov
or
lock
mov
fadd
and
cmp
sub
ret
mov
ds
cli
rorl
outsb
popf
loopne
cwtl
xor
pop
jne
pop
jp
fldt
gs
loop
cmp
push
imul
mov
jno
lods
ja
pop
sbbl
jo
add
cmp
mov
xchg
mov
jnp
push
popa
mov
or
add
inc
lcall
pushf
mov
cmp
icebp
shll
cld
test
rclb
fisubrl
imul
jno
lock
mov
int3
iret
pusha
or
or
push
outsb
push
mov
stos
mov
stc
adc
fcmove
mov
das
jle
xchg
jmp
out
push
out
ret
xor
dec
push
and
mov
fdivl
push
imul
or
es
add
movb
jmp
outsl
sahf
lcall
lea
ret
fnstsw
movntps
push
mov
shrl
xchg
xchg
pop
cwtl
add
fistl
pop
cli
xor
pop
mov
js
cli
mov
mov
pop
sbb
add
pop
inc
jg
jo
cmpsl
in
and
mov
mov
or
nop
inc
pushf
fnsave
push
gs
jns
iret
roll
je
jge
ret
cwtl
pop
inc
dec
int3
shll
pusha
test
xor
je
cmp
mov
mov
sub
out
in
sub
aam
cmpps
in
sub
insl
pusha
and
pop
inc
xor
sub
in
add
inc
xchg
bound
dec
cmpsb
leave
enter
popa
xchg
outsb
adc
xchg
sbb
les
inc
lock
mov
and
movsl
xor
add
out
dec
mov
or
mov
inc
daa
in
dec
mov
aas
push
mov
mov
jae
dec
jge
int3
sub
jmp
push
and
jg
fs
jb
push
es
jmp
xor
std
or
jge
push
inc
test
in
inc
mov
mov
mov
inc
incb
stos
test
mov
out
insl
out
mov
jge
push
roll
aad
orl
add
mov
in
mov
sub
rcr
mov
mov
sti
orl
je
ljmp
movsl
xchg
mov
jmp
inc
xlat
movsb
enter
push
jno
fadds
data16
mov
popa
sbb
loopne
dec
sub
stc
inc
and
push
mov
rorl
push
xchg
dec
jbe
xor
mov
xor
lret
push
dec
insb
add
outsb
cli
xchg
lea
cmc
dec
jnp
insb
mov
loope
nop
hlt
test
sub
decl
pop
loop
cmpsl
sub
inc
or
scas
movb
dec
negl
push
addr16
cmpsl
popf
xchg
in
xchg
or
and
test
out
mov
cmc
ret
cmc
enter
mov
roll
add
loope
push
xor
ficoms
inc
insb
jb
pusha
jg
leave
loop
xor
cmp
jb
test
pop
fadds
scas
ret
jge
dec
jnp
jmp
repnz
pop
mov
arpl
and
aas
gs
int3
bound
xor
pop
stos
jg
adc
sahf
xorps
jno
cmp
popa
lret
or
test
dec
iret
xor
inc
loopne
fxch
aad
call
xchg
pusha
repz
push
fsubl
add
ja
or
push
inc
adc
aam
ljmp
aam
bound
inc
dec
mov
pop
xchg
cwtl
test
sbb
push
dec
sub
js
push
jne
ss
mov
insb
inc
in
jmp
add
into
test
dec
jecxz
push
add
jmp
sbb
scas
sub
int
sbb
pusha
cld
xor
cmp
sbb
sub
add
adc
or
sbb
mov
mov
cli
test
notb
xor
outsl
dec
outsb
out
and
ds
aad
sub
inc
mov
xchg
faddp
push
and
jno
push
xor
shrd
xchg
in
jnp
and
mov
dec
arpl
pop
idivl
sub
cld
daa
mov
hlt
aas
mov
insl
pop
inc
add
popf
push
pop
and
pop
movsl
lock
sbb
jno
je
repnz
xor
fdivl
cmpsl
sbbl
int
sbb
jmp
jo
cmp
mov
pop
shrl
mov
jne
hlt
pop
aad
mov
add
loopne
dec
or
fildl
movsl
add
add
dec
xchg
jge
fistpll
xchg
enter
push
pop
fidivrl
sbb
pop
arpl
dec
repnz
sbb
jae
sub
sub
fmuls
ljmp
pop
cmp
mov
xchg
ret
rorb
bound
test
shr
test
add
cmpsl
push
sub
ror
cmc
push
adc
cmpsl
sbb
jmp
lcall
pop
loope
adc
imul
cmpsl
es
jp
sub
rorb
dec
stc
jmp
jo
cmp
mov
cli
sub
jns
aas
les
arpl
jae
jbe
sbb
inc
mulb
daa
adc
pop
push
in
scas
mov
mov
pop
dec
testb
jmp
mov
stos
pshufw
movsl
cmpsb
das
adc
mov
xchg
jae
pop
mov
xchg
jp
sub
and
repz
sahf
push
xor
clc
pushf
loop
xchg
or
cli
pop
adc
sub
cltd
mov
pop
addr16
rcrl
lock
push
loope
cli
add
or
enter
imul
xorb
int
jb
inc
dec
add
mov
jmp
fistl
lods
ja
insb
leave
adc
cmp
test
hlt
orb
insl
and
push
insb
mov
pop
inc
js
cmp
xchg
pop
jmp
pop
test
int
sub
fstpl
dec
jecxz
in
enter
cld
or
bound
popf
mov
aaa
stc
push
bound
into
mov
or
jge
add
xchg
div
jo
adc
dec
pop
cltd
in
cmpsl
dec
cmp
cli
push
jecxz
inc
pop
pop
test
out
xchg
jno
dec
mov
push
mov
mov
js
pushf
daa
scas
xchg
repnz
mov
pop
pushfw
out
and
add
adc
mov
and
and
cltd
out
jle
roll
in
lcall
xor
daa
fsubp
inc
mov
icebp
iret
lea
jmp
in
jp
mov
addl
out
push
mov
mov
ljmp
out
fnsave
lods
jmp
or
xchg
mov
fidivrl
aaa
add
std
scas
daa
dec
ss
ljmp
mov
sbb
std
xchg
mulps
imul
in
aad
sub
movsl
jp
push
mov
imul
xchg
addb
ret
fcmovnbe
cwtl
mov
pop
aad
fwait
dec
in
in
cmp
inc
dec
sbb
inc
push
push
or
inc
out
push
xor
inc
fidivs
out
inc
popf
ja
outsb
jo
lods
adc
sbb
or
cmpsb
repnz
das
repnz
or
xor
rcll
sub
mov
cmpsl
lahf
dec
pop
jae
jle,pn
aas
pop
adc
sbb
int
xor
xorl
push
pop
pop
into
inc
leave
push
lret
mov
in
or
sti
adc
push
ja
adc
push
jb
push
outsl
negb
pusha
es
incl
jmp
dec
sbb
ljmp
leave
mov
push
out
xlat
adc
add
push
cmp
or
arpl
sbbl
in
inc
jle
rclb
or
jno
add
into
mov
add
fwait
pop
jo
cmp
inc
push
out
dec
jmp
lds
aam
addr16
xor
fcoms
sbb
sub
xor
fiaddl
mov
nop
cli
fldl
shrb
mov
jmp
xchg
mov
clc
adc
aas
xchg
sar
push
adc
ljmp
je
xor
push
inc
jae
sub
pop
xchg
lods
stos
push
cmp
popa
add
orl
lock
pop
in
jg
out
fists
lock
dec
jge
cli
cmp
cmc
mov
ss
adc
sbb
jns
int3
ret
leave
pop
cmpsb
mov
and
jp
cmp
jecxz
int
iret
jecxz
ficoml
mov
and
sbb
mov
std
jb
into
push
adc
jg
mov
mov
pop
or
lds
inc
js
cmpsb
or
je
xor
iret
das
fdivs
ljmp
jmp
xlat
out
iret
add
pop
popa
jb
aas
or
dec
push
push
lea
stos
cmp
idiv
sub
out
inc
push
in
push
ret
jecxz
es
fdivl
fiaddl
add
or
in
out
fucomi
repnz
fld
pop
sub
std
gs
xchg
mov
jb
push
in
jle
mov
add
or
sahf
or
loope
sahf
mov
js
pop
out
repnz
adc
mov
cli
fisubrs
xor
inc
jge
mov
ds
xor
cs
push
ljmp
loop
pop
dec
std
es
es
insb
xor
inc
cmpsb
or
and
mov
dec
lcall
adcb
mov
sbb
call
cmp
out
pop
mov
adc
jae
pop
loope
push
jne
mov
cwtl
jns
out
ss
imul
push
rsm
lea
ss
inc
cmp
arpl
add
mov
add
sbb
add
sub
dec
call
out
cmp
pop
aas
pop
xorb
sahf
jge
xchg
lock
bound
jecxz
jp
mov
loope
or
push
andl
mov
js
stc
addr16
ds
loope
scas
mov
lea
testl
pop
rorb
or
mov
xchg
out
shl
xor
aas
cld
std
dec
cld
repz
daa
and
hlt
push
push
rcll
mov
and
xchg
cmp
adc
or
cli
test
mov
int3
mov
scas
xor
mov
cli
mov
das
inc
loop
int3
push
cld
xchg
loop
jg
out
std
mov
push
xor
cmp
dec
dec
pusha
adc
sbb
pop
lds
sub
and
int3
hlt
xor
lods
sbb
call
std
iret
mov
test
add
sbbl
inc
mov
leave
xchg
adc
popf
mov
les
adc
lods
push
lods
fisubs
addr16
bound
mov
dec
outsl
test
in
iret
leave
lret
cs
jo
jle
pop
imul
in
pop
mov
jp
or
outsl
mov
mov
jp
arpl
stos
adc
lds
jbe
xor
sbb
push
cwtl
cmp
pop
push
mov
dec
adc
arpl
push
hlt
mov
outsl
ret
jge
and
or
mov
adc
adc
stos
sbb
dec
iret
add
xor
out
lcall
mov
mov
xor
xchg
data16
pusha
mov
cli
lods
sub
xchg
or
lock
outsl
das
xchg
lock
and
inc
and
je
mov
rcrl
roll
pop
ljmp
adc
jl
outsb
ror
scas
xor
lods
and
lods
inc
in
jo
xor
mov
sti
pop
mov
icebp
data16
pushf
in
sbb
or
pop
pop
xlat
adc
dec
inc
xor
ficoms
dec
shll
inc
shlb
adc
out
dec
xchg
xlat
mov
test
aam
aad
loopne
leave
dec
stos
or
xor
loop
push
jg
sbb
push
sahf
mov
push
movsb
fists
sub
jo
dec
mov
and
push
push
xor
rcrl
cmp
pop
or
sub
jg
imul
jecxz,pn
scas
xchg
push
das
jge
aas
les
mov
loop
into
inc
out
dec
arpl
cmp
push
ljmp
repnz
ljmp
test
and
sti
aad
push
lods
push
jno
jg
clc
cltd
adc
in
in
dec
mov
nop
inc
addr16
mov
pop
push
lea
jp
rcll
sbb
pop
cld
or
jp
loope
adc
ljmp
cmp
popf
movb
test
jns
loope
in
mov
mov
add
das
push
int3
xor
push
pop
adcl
jmp
or
lock
adc
les
shlb
mov
cmp
and
rolb
stc
cmp
les
sub
lcall
mov
add
and
sbb
push
or
fbld
cltd
sbb
jp
addr16
sub
dec
cmc
int3
das
adc
insb
mov
or
pop
push
and
pushf
xchg
mov
sbb
push
inc
adc
add
call
dec
test
sbb
dec
in
stc
fistpl
lcall
call
fisttps
inc
jmp
xchg
push
xor
push
iret
mov
test
lds
test
add
call
cwtl
fmulp
lret
test
adc
loopne
xor
jbe
or
std
xor
or
sbb
shlb
popa
inc
jne
pop
mov
imul
pushf
add
ret
mov
js
movsl
sbb
test
jo
sub
jge
sbb
push
sub
in
jmp
hlt
dec
dec
add
cmc
and
jge
out
cli
gs
sub
fcmove
bound
outsb
sbb
rolb
mov
roll
xlat
inc
cmp
pop
sub
sub
gs
jne
imull
les
pop
cmp
xlat
imul
andl
jmp
int
sub
or
xchg
mov
fwait
jg
mov
scas
or
xor
stos
cld
jno
cmp
sub
xlat
mov
movsl
adc
ds
mov
sbb
fisttpl
loop
xchg
xor
outsl
pop
jge
addr16
mov
rorb
out
pop
leave
sub
adc
sub
xchg
pop
pop
push
sti
inc
in
loope
out
inc
loop
add
icebp
hlt
or
dec
cmp
mov
mov
rol
test
add
in
push
sbb
int3
pop
xor
adc
nop
mov
mov
sub
lods
push
mov
push
push
movsbl
sbb
sti
loopne,pn
pop
sbb
add
ds
pop
dec
out
adc
jecxz
inc
nop
popf
filds
dec
jne
hlt
flds
fst
aaa
inc
fisttps
gs
les
int
mov
shl
lahf
daa
orb
push
stos
cmp
mov
test
jnp
sub
jg
dec
dec
movsb
pop
fisubl
shrb
or
imul
js
stos
inc
push
jno
int3
outsb
inc
push
jo
cs
pop
mov
hlt
mov
subl
jae
xchg
pop
sub
mov
stc
inc
xor
mov
clc
movsb
out
sub
push
lcall
sbb
dec
andl
fsubs
sahf
aad
shl
xor
push
test
push
mov
adc
dec
mov
push
lcall
data16
xchg
das
cmc
adc
test
rolb
ret
xchg
loopne
es
test
dec
out
leave
cmp
push
push
fistpl
popf
daa
comiss
test
cmpsl
fbstp
add
jno
into
ds
fistl
or
stc
lcall
fimull
pusha
or
or
xor
pop
cmp
fmuls
add
adc
lcall
addr16
fisubrl
jge
add
mov
inc
mov
adc
adc
cmp
dec
loopne
lods
adc
lods
dec
iret
push
cmpsl
aam
out
mov
or
icebp
add
jb
push
add
xchg
int3
std
dec
adc
pop
sub
xchg
iret
dec
gs
mov
and
xchg
mov
mov
out
scas
sbb
xlat
pop
fistpll
fcoms
sbb
dec
push
dec
mov
leave
lds
dec
imul
sub
test
jmp
lods
addr16
xchg
sub
jl
dec
and
ficoml
cwtl
ficomps
mov
cmp
inc
sub
dec
inc
outsb
xor
int
fwait
or
les
push
jo
push
addr16
enter
xchg
mov
mov
lret
movsb
cvtpi2ps
outsb
or
pop
leave
imul
push
or
push
movsl
test
test
fcmovnbe
rolb
clc
lods
shll
push
shll
shll
cltd
aas
cmp
in
arpl
jle
test
js
loopne
xchg
xchg
cmp
add
sbb
fisttpll
cmp
loop
or
sbbb
loopne
push
sub
xchg
sub
and
and
pop
push
push
and
xor
lods
cmp
xchg
das
inc
xor
or
fists
sub
icebp
inc
fdivrl
sbb
push
lret
ret
outsb
push
and
add
sbb
pop
pop
es
incb
mov
jnp
sbb
je
inc
sbb
jnp
sbb
scas
gs
and
fstl
cmc
mov
andps
mov
inc
repnz
dec
inc
loopne
mov
mov
pop
xor
adc
pop
xor
sub
sbb
cmp
dec
dec
jns
hlt
cmp
aaa
sbb
jnp
push
cmp
sti
mov
in
repz
movl
add
add
movsl
push
shll
xor
lea
mov
incb
cmp
cmp
sub
and
add
sbb
xlat
lock
jle
sub
int
xor
push
adc
xchg
fcoms
dec
bound
pop
add
mov
jp
mov
rorl
outsb
int
int3
stos
les
add
shrl
pop
jmp
pop
cmc
jns
jle
hlt
inc
nop
mov
add
jb
icebp
out
out
jmp
xor
push
pushf
inc
and
lods
push
cmp
imul
data16
addb
adc
mov
xor
shll
rorb
sub
inc
xchg
mov
shlb
in
and
inc
insb
dec
push
insl
sub
pop
and
pushf
lea
leave
add
das
or
mov
xor
cltd
jnp
sub
aam
add
or
cltd
scas
aam
adc
dec
outsb
mov
fs
and
inc
mov
repnz
pop
repnz
mov
inc
jno
mov
jno
js
pop
cmpsb
cld
jnp
sbb
jb
inc
xlat
movsl
cmp
lahf
mov
imul
dec
xor
movsl
je
push
sbb
mov
cmp
cmp
int3
fnstcw
sbb
sub
xor
lahf
inc
lahf
add
or
add
pop
fildl
es
rdpmc
fs
sub
sbb
mov
rclb
sti
es
dec
divb
scas
or
cs
mov
and
mov
vhaddps
jae
push
cli
mov
jl
jg
sub
into
and
fnsave
dec
dec
mov
outsb
mov
loop
leave
push
jl
adc
test
pop
inc
sub
cwtl
rcr
cmp
push
gs
jnp
mov
fsubrl
pop
or
mov
xchg
mov
jnp
sbb
std
das
shl
xchg
movsl
xor
in
push
cmpsb
push
adc
stos
dec
and
mov
pop
out
jno
inc
mov
faddp
clc
cmp
add
sub
cltd
fwait
jp
xlat
jmp
jbe
fwait
aaa
testl
fdivrp
stos
mov
mov
ret
pop
inc
sti
iret
add
add
jns
adc
fdiv
add
inc
jnp
insl
pop
cmp
adc
cmpsb
popa
lods
mov
out
inc
arpl
movsb
aas
cmp
pop
dec
jmp
scas
adc
call
push
mov
das
aas
xchg
cmpsl
and
cmc
imul
or
cmp
es
xor
jle
cmpsb
pop
xchg
mov
cmpsl
lods
lods
outsb
loop
lahf
aam
mov
xchg
inc
rolb
fwait
je
push
push
push
add
push
xorb
dec
and
mov
xor
cmc
xchg
sub
xchg
ret
push
sbb
pop
cmp
sub
pop
add
xchg
pop
lcall
imul
dec
int
mov
push
inc
popf
imul
mov
lret
xchg
adc
and
popl
mov
outsl
pop
jge
jns
cmp
xor
fcomip
push
xchg
int
loope
push
cmp
pop
stos
stos
adc
push
sbb
mov
mov
pop
fstpt
ficomps
mov
std
xor
lret
cmc
add
xchg
hlt
insb
lds
and
outsb
dec
cmp
push
adc
mov
push
addl
adc
xchg
jb
inc
add
jb,pt
inc
jnp
pop
dec
scas
inc
sarl
pop
add
mov
lods
pop
inc
inc
push
and
mov
mov
xor
mov
dec
bound
dec
addr16
or
lods
dec
out
dec
rcrl
shrl
mov
leave
push
ja
es
and
jbe
xchg
mov
jo
imul
dec
fbld
push
lret
cmp
xor
push
adcl
mov
addr16
fs
push
and
divb
in
pop
xor
mov
dec
xor
sub
mov
cld
aam
and
or
sbb
mov
pushf
mov
cwtl
pop
or
js
pop
cmpsl
jmp
loopne
ljmp
mov
into
dec
xchg
pop
jmp
jmp
cmpsb
lock
xorb
sub
idivl
movsb
push
enter
pushf
popa
jbe
iret
xor
xchg
mov
pop
dec
mov
stos
dec
mov
cmp
xor
push
push
adc
js
loopne
sbbl
or
and
jle
inc
insb
mov
dec
pop
add
pop
adc
sbb
clc
dec
fs
xchg
push
les
pushw
je
inc
lahf
cld
int3
scas
mov
icebp
push
mov
push
test
xor
or
in
xor
adc
jp
or
push
call
push
out
push
das
push
and
cld
repz
pop
pop
pusha
ss
ret
sbb
adc
andl
cmp
ds
test
lock
inc
sub
push
loopne
lock
mov
push
and
lret
xor
jno
incb
rcll
xor
lods
loopne
cltd
inc
arpl
mov
icebp
ss
cwtl
push
dec
pop
icebp
dec
out
cs
sbb
xchg
cli
mov
adc
push
andl
fisubs
pusha
xchg
lds
pop
test
jb
adc
insl
mov
cmp
imul
loop
mov
shrb
popf
mov
lock
jns
xor
sub
cmp
or
add
movl
xor
push
adc
sti
push
add
adc
daa
inc
push
or
sub
adc
movsb
rcr
xchg
pop
lods
rclb
mov
lret
inc
or
dec
mov
data16
cmp
daa
daa
adc
jb
test
movsl
cmpsl
xor
adc
les
test
cmp
push
inc
cmp
add
sub
mov
inc
push
repz
push
test
xchg
add
dec
or
popf
test
mov
cmp
or
xchg
testb
repz
or
test
inc
mov
adc
ja,pn
xor
fidivl
mov
jmp
aas
sti
add
adc
clc
cmp
pusha
ljmp
sbb
push
adc
xor
bound
ror
in
sub
test
lods
and
movsl
icebp
cmpsb
pusha
fmul
fwait
ret
jns
aas
mov
repnz
es
xchg
cld
mov
inc
pop
dec
nop
or
xor
xor
mov
sahf
data16
movsb
cld
cmpsl
in
pushf
aas
js
fwait
popf
aad
lret
or
popa
fisttpl
out
adc
sbb
sub
into
mov
and
mov
pop
lea
cmp
rclb
push
arpl
ret
ror
imul
ds
push
inc
adc
movsl
jbe
jno
cmpsl
into
dec
sub
or
add
or
data16
call
and
daa
add
es
loope
inc
xor
adc
lods
push
add
sbb
mov
in
loop
xchg
pop
je
clc
jnp
test
mov
push
cmp
fwait
mov
cmp
xchg
out
in
cmp
cmpsl
filds
mov
add
mov
xlat
dec
cmc
test
cmc
out
pop
push
sub
add
xchg
data16
lahf
fisubrl
nop
push
pop
clc
lret
cmpsb
add
sbb
loopne
cmp
sub
in
out
jns
xor
pop
stos
lds
mov
inc
pop
inc
inc
jecxz
orb
mov
inc
in
lret
fucom
push
repz
push
jae
mov
xlat
xchg
in
sbb
into
inc
mov
mov
mov
or
mov
pop
lcall
xorb
lahf
and
push
ja
in
out
sbb
sbb
mov
or
push
out
loope
out
inc
xchg
fcomps
and
and
fidivl
stos
sbbb
mov
popa
mov
je
cmc
cwtl
inc
mov
ljmp
inc
stc
push
jg
inc
push
gs
jg
xchg
pop
jo
int3
or
test
dec
lahf
jl
push
push
data16
rorb
xchg
dec
gs
movsl
or
inc
out
xchg
sbb
jle
jge
push
outsl
sub
insb
dec
aas
jne
add
xor
mov
inc
xor
mov
loop,pt
jne
dec
sbbb
shll
in
inc
sub
popa
sub
cli
mov
cmp
movl
jl
sbb
andl
mov
jo
sbb
jno
shrl
or
fnstcw
mov
shrb
out
mov
imul
and
and
int3
loopne
mov
movb
movsb
push
pushf
ss
ret
cmpl
jmp
lea
mov
push
adc
xchg
nop
lret
sti
push
repnz
pushf
repnz
ficompl
jnp
sbb
je
cmpsl
or
sbbb
add
imul
ret
aad
jns
xor
jecxz
jns
cwtl
out
negb
mov
lods
leave
out
cmp
jl
rcrl
jecxz
out
xchg
jo,pn
sbb
mov
xor
jp
dec
das
cmpsb
cltd
and
in
add
leave
mov
iret
mov
imul
test
push
jecxz
andnps
sub
cld
inc
push
mov
arpl
mov
inc
into
or
add
in
negb
add
cmp
shlb
popa
inc
pop
xchg
imul
xchg
and
mov
xchg
mov
mov
sti
sub
push
mov
sub
add
sub
mov
fwait
movsb
mov
adc
inc
and
push
mov
xchg
or
into
pop
fistps
sti
xchg
sbb
adc
sub
sub
mov
lcall
xor
mov
call
xor
mov
scas
mov
and
das
shr
xchg
js
lods
aas
push
ret
jmp
add
or
inc
int
adc
out
inc
xchg
and
cld
adc
inc
in
jl
xchg
mov
leave
aaa
daa
aaa
cmpsb
clc
sub
add
out
aam
mov
pop
call
shl
lods
insl
pushf
cmp
mov
rclb
mov
repz
mov
into
divl
dec
test
fadd
cmp
sbb
daa
es
inc
repnz
aam
adcb
sbb
adc
jg
cmpsb
fiadds
xor
adc
addr16
fsubr
je
mov
icebp
add
es
jmp
xor
aas
mov
fidivrs
cld
jmp
xchg
inc
movsb
sbb
jle
leave
jbe
and
xchg
lcall
cwtl
lock
sbb
incl
xchg
fcomps
inc
xor
fdivrl
jae
in
sub
push
adc
rorl
jb
repz
stos
hlt
les
sub
test
sbb
movsb
cmpsl
xchg
call
inc
out
cmp
pop
xlat
or
inc
and
pop
lret
cmp
sarl
jne
mov
stos
adc
jae
in
mov
mov
xchg
jns
push
mov
das
dec
repz
inc
lcall
add
xchg
lahf
add
and
pop
xchg
stc
arpl
mov
pop
icebp
ljmp
incb
sbb
mov
or
push
or
pop
rcll
cmp
ja
dec
sub
stos
aam
out
aad
cmpl
stos
cmp
sti
and
aad
ja
shrb
stos
adc
arpl
leave
or
add
addb
fcomip
jp
test
push
xlat
aad
and
and
rclb
out
ljmp
cmp
mov
cmpl
dec
out
and
xchg
jmp
push
movmskps
inc
sbbb
test
jnp
mov
xor
jns
insl
lods
mov
mov
mov
xor
adc
mov
data16
xchg
bound
jne
add
nop
pop
and
xchg
mov
nop
push
mov
cltd
mov
hlt
addr16
push
push
sub
add
or
add
adc
inc
movsb
pusha
xchg
ds
push
lods
push
mov
push
xlat
pop
rcrb
jo
xchg
test
fdiv
int3
pop
inc
mov
out
push
pop
mov
mov
xor
arpl
xchg
mov
movsb
cwtl
out
mov
lret
push
jns
movsb
dec
insb
pop
pop
test
xor
dec
enter
and
lret
in
mov
sub
loopne
pop
and
jle
into
dec
xor
add
addps
mov
mov
and
les
pop
js
fdivl
mov
in
pop
leave
xchg
cli
sbb
int
jne
or
add
mov
fstps
test
movb
push
add
fsubl
stc
mov
push
adc
lock
xor
mov
nop
fisubrs
shlb
test
inc
arpl
mov
dec
rclb
cwtl
cmpb
pusha
jg
orl
push
mov
in
push
hlt
push
xor
out
jns
inc
outsl
mov
shlb
jae
jae
xor
fsubr
inc
add
in
or
inc
into
jnp
xor
hlt
lret
sub
push
push
xchg
xchg
or
rcr
lea
push
in
rcrl
aam
aad
inc
call
xchg
push
add
clc
pop
cs
fistl
inc
and
ret
lcall
or
movsb
lods
clc
sbb
pop
int
and
icebp
es
xchg
push
les
test
xchg
leave
cli
inc
dec
inc
rorl
int
jo
js
into
or
jnp
das
mov
repz
xchg
aas
fwait
mov
inc
mov
daa
and
and
push
sub
add
js
adc
inc
ficoms
adc
call
sbb
xlat
xchg
or
mov
mov
pop
out
insb
pop
dec
mov
sub
aas
mov
or
sti
fdivrp
popf
arpl
mov
hlt
cmp
bound
adc
sub
shl
jnp
fmull
mov
push
rorb
sub
outsl
shrb
cmp
iret
in
cltd
icebp
or
pop
cmp
or
lret
insb
test
fidivrs
mov
ljmp
cmp
sub
cwtl
fmuls
push
jne
add
pop
pusha
imul
loop
cmc
jno
push
push
adc
or
xor
rcl
push
sub
jae
xchg
aaa
dec
sub
inc
stos
push
push
call
or
imulb
movhps
pop
dec
out
movsb
or
pusha
outsl
sbb
or
dec
cmp
pop
mov
adc
sbb
add
lods
jp
outsb
and
push
cli
popa
pop
es
ljmp
lds
mov
sbb
shr
dec
xor
movsb
hlt
xchg
out
loopne
xor
inc
adc
cmp
std
sbb
pop
or
xchg
aaa
jl
xchg
leave
mov
add
out
sub
jae
jmp
shll
pop
mov
xchg
push
mov
out
ret
xor
cmpsl
popf
adc
dec
pushf
fisttps
push
or
sub
aas
je
in
insb
cmp
cmpsl
sti
pop
jbe
jg
sbb
stos
cmp
jl
repz
aas
loopne
cli
call
test
jecxz
or
outsl
mov
dec
adc
andb
and
jmp
and
xchg
xor
mov
loopne
lods
mov
and
xor
stc
pop
mov
inc
fiaddl
mov
fs
and
sub
jae
je
push
mov
rcll
gs
dec
dec
fildl
xchg
roll
xor
mov
and
add
inc
xor
out
mov
cmpsl
scas
jne
stc
push
jle
or
int3
lods
daa
or
popa
lahf
adc
push
nop
sub
sub
mov
mov
lahf
xchg
or
movsb
jnp
mov
or
test
lods
adc
adc
leave
int
pop
pop
adc
mov
xor
fisubl
xchg
xchg
jle
ret
cmp
clc
push
push
push
mov
cmpsb
adc
clc
adc
xor
push
outsl
sbb
push
andb
in
ds
int3
jae
lret
push
and
or
sub
test
ret
dec
jecxz
out
hlt
mov
ret
or
call
daa
rorl
cmp
mov
dec
lods
cltd
xlat
jg
lret
xor
iret
xor
fsts
mov
pop
repz
sahf
bound
xor
add
fwait
jbe
push
aaa
ds
repnz
pop
dec
sahf
outsb
mov
push
mov
push
je
dec
push
dec
inc
pop
pop
aaa
jecxz
pop
roll
aad
dec
jnp
inc
adc
mov
cmc
inc
xchg
pop
shl
ret
imul
add
dec
jnp
dec
mov
and
pop
rclb
pusha
push
repz
mov
sub
pop
pop
loopne
fcmovnbe
rclb
xchg
add
or
lcall
out
lods
pop
add
inc
and
adcb
enterw
mov
dec
jo
shl
add
push
out
movsb
mov
and
mov
insl
test
les
popa
inc
fbstp
push
sti
adcl
je
mov
out
out
and
cmp
mov
loope
push
or
cmp
add
lret
add
jo
sbb
int
inc
cmp
cmp
push
adc
adc
filds
or
push
cmc
mov
test
cwtl
xchg
cmp
cmpb
and
xchg
jge
xlat
int
jb
out
aaa
jmp
pop
cmpl
mull
cmp
test
int
movsb
push
jecxz
sbb
sti
mov
fistpll
popa
dec
insb
lods
imul
xchg
fsubrs
mov
mov
lea
or
test
add
adc
adc
int3
cld
xchg
sub
lock
out
pop
ret
pop
cmp
add
ficomps
jbe
clc
lcall
scas
divl
add
xor
je
xor
cmp
lret
cs
mov
xor
mov
cmp
ficoms
jns
sub
fiaddl
dec
or
adc
lods
jns
jmp
jge
xor
ror
div
mov
jae
test
add
push
jge
pusha
movl
lahf
mov
inc
add
mov
call
mov
sub
sub
xchg
mov
je
inc
sbb
xchg
daa
xchg
imull
dec
aad
jle
add
mov
enter
je
int3
mov
mov
lods
mov
sub
pop
bnd
int3
xchg
arpl
jge
push
inc
imul
leave
adc
imul
mov
jae
or
sbb
sarl
shll
ljmp
addr16
pop
cmp
je
jge,pt
push
mov
lcall
xchg
into
dec
push
enter
lret
repnz
cmpsb
rcll
xchg
dec
inc
ficoms
xchg
xchg
cmp
rcrl
cmp
dec
inc
shrl
push
xlat
push
mov
sbb
push
fisttps
icebp
loope
shll
pop
mov
loope
mov
jo
dec
adc
sub
cld
cld
ret
fisttpll
xor
popf
cmp
pop
xchg
gs
les
ljmp
mov
jne
lret
lahf
pop
and
ds
mov
jno
mov
jge
push
dec
scas
dec
int3
dec
sbbb
fmuls
add
insl
out
sub
daa
ffree
and
incl
pop
sbb
mov
add
cltd
aaa
jbe
sbb
into
xlat
cmc
pop
fcmovb
mov
cmp
dec
or
aaa
dec
adc
lahf
push
mov
sbb
dec
adcb
jo
push
lea
aaa
rcrb
test
mov
jo
dec
pop
rcr
pop
js
sbb
pop
push
push
sbb
inc
adc
mov
push
outsl
inc
mov
add
pop
push
data16
xor
xchg
or
cld
outsl
inc
ss
enter
loope
pop
jp
aam
sbbl
gs
pusha
mov
shll
test
or
mov
into
push
movsl
dec
push
stos
push
sarl
mov
js
faddl
daa
fstpl
std
lcall
sbb
mov
in
in
push
loop
pop
and
mov
cmc
cs
push
sbb
xor
sbb
mov
mov
pop
cmpb
stc
aas
mov
adc
sub
cmpl
stos
cwtl
sub
mov
xchg
sub
pop
or
test
inc
scas
jbe
jo
xchg
rolb
in
jecxz
mov
sbb
push
mov
das
outsb
std
lret
add
js
xchg
orl
and
leave
and
cli
inc
inc
icebp
mov
dec
and
xchg
pop
jmp
popa
lret
jle
dec
xor
dec
mov
mov
push
outsb
add
mov
addr16
inc
push
jmp
push
pop
mov
inc
scas
test
xor
lods
aad
pop
cmp
inc
iret
xchg
mov
mov
jp
pusha
ds
call
popf
in
ret
jl
lret
and
lds
cmp
enter
js
push
fcmovnb
mulps
mov
add
cs
and
clc
dec
fisubs
ja
push
scas
sub
mov
lds
outsl
jmp
ss
push
ret
pop
fwait
sarl
in
xchg
scas
es
add
jns
aam
pop
xor
add
popa
jp
repnz
mov
dec
imull
leave
in
sbb
roll
gs
xchg
icebp
xchg
call
sub
sbb
xor
cmp
outsb
mov
es
dec
lret
lcall
imul
cmpsb
fnsave
scas
outsb
adc
mov
rcr
je
insb
js
and
mov
bnd
and
int
jp
xlat
or
mov
pop
sub
add
lret
inc
fwait
repnz
fwait
sbb
fwait
loop
out
sar
sub
call
repnz
cs
cmpl
jbe
sbb
clc
outsl
mov
inc
xor
add
or
mov
mov
pop
inc
mov
jp
int3
inc
iret
int
push
pop
mov
xor
insl
mov
xor
cmp
cmp
and
cltd
jnp
les
pop
out
push
or
adc
out
dec
xchg
scas
xor
popf
pusha
aaa
sbb
add
test
mov
cmp
fwait
pop
dec
jbe
movsl
fs
in
adc
mov
adc
push
std
scas
push
xchg
stos
sbb
sbb
mov
out
ret
cwtl
push
jp
mov
mov
jno
sar
adc
xchg
pop
das
xchg
adc
push
cmp
popa
push
add
and
mov
insl
jle
mov
mov
pop
mov
xchg
dec
mov
xor
cmp
push
roll
inc
fimull
xchg
nop
es
and
sub
mov
xor
push
cwtl
jg
sahf
fnsave
gs
pop
mov
aaa
pop
sbb
test
mov
xchg
cltd
jne
stos
or
mov
dec
shr
and
sbb
push
sub
and
add
ficomps
mov
push
xchg
xlat
scas
jl
sahf
fistpl
inc
xor
mov
fiaddl
mov
dec
add
sbb
cmp
mov
add
xor
fimuls
xchg
call
jbe
push
add
ljmp
ret
mov
in
adc
add
scas
dec
in
insb
xor
scas
sahf
daa
add
push
cmp
or
jmp
mov
loop
mov
paddusb
cmp
xchg
sub
adc
or
cmpsb
xchg
or
cmc
addr16
mov
std
mov
fists
mov
fnstenv
out
insb
xchg
mov
movsb
stc
movsb
jmp
in
pop
clc
enter
nop
or
scas
mov
dec
scas
push
scas
arpl
mov
fisubrs
jge
fisubrl
mov
in
and
push
mov
add
or
push
xor
cmp
cmp
fcoml
add
int3
ret
xchg
addr16
out
pop
popa
sub
push
mov
subl
xchg
xchg
daa
pop
push
mov
hlt
sub
cmp
sub
pop
jp
clc
mov
loope
xchg
xchg
jmp
pop
fwait
and
inc
repz
push
mov
dec
roll
adc
daa
cmp
inc
cmc
lds
mov
gs
stos
mov
data16
add
and
push
xor
mov
and
pop
imul
andl
xor
insb
in
sar
test
dec
arpl
cmp
mov
pop
aam
adc
and
ja
loope
xlat
arpl
mov
jecxz
int
sub
cmpsl
or
cmp
xchg
ss
push
sbb
push
hlt
pop
pop
insb
push
cltd
cli
scas
int3
jp
mov
ss
jae
jg
ja
fucom
gs
arpl
into
push
in
xchg
leave
or
xchg
mov
mov
sub
js
mov
or
inc
adc
js
icebp
jno
repz
hlt
in
mov
aad
sbb
adc
loop
pop
mov
inc
sbb
cmpsb
adc
mov
mov
or
addb
jmp
pop
test
push
sarl
arpl
outsl
or
gs
out
stc
lea
rolb
inc
dec
lret
cmpl
pop
or
mov
push
insb
inc
pushf
scas
cltd
sub
clc
jmp
arpl
jbe
xchg
js
jnp
les
and
push
arpl
data16
xchg
andl
jns
inc
shlb
clc
nop
out
pop
rorb
pop
xlat
fidivs
fisttpll
push
out
jbe
mov
mov
cmc
outsb
inc
stos
and
testb
cmp
iret
add
jecxz
hlt
sar
shr
or
mov
loope
adc
dec
mov
xor
imul
cmp
adc
sti
inc
xor
dec
movsl
and
mov
jb
dec
icebp
push
xchg
push
and
sti
cs
aaa
adc
out
add
cmpsl
icebp
mov
scas
test
pop
pop
loopne
push
add
mov
jb
jbe
sub
daa
std
mov
mov
mov
ret
lret
shlb
push
or
mov
jbe
loopne
push
xchg
or
adc
mov
xchg
fildll
dec
bound
push
shrb
leave
mov
push
addl
push
push
xchg
into
pushf
repnz
rol
test
mov
pushfw
mov
xlat
int3
cmpsb
idivb
or
cmp
addl
xor
push
fadds
xchg
mov
inc
push
popf
jp
mov
sti
shrb
xchg
push
xchg
stos
je
in
es
dec
cmp
into
lds
sbb
inc
mov
inc
sar
xor
mov
mov
cli
lock
out
ja
ret
ljmp
stc
rolb
push
in
scas
mov
xchg
mov
insb
mov
cmc
lcall
inc
out
ss
fistpl
lods
or
decl
aad
in
into
add
fs
in
and
sbb
out
sbb
push
mov
out
cmpsb
lret
test
jae
lret
add
insb
and
mov
push
cmp
iret
adc
cmc
sub
mov
and
mov
adc
fadd
jns
jns
add
jg
xchg
loop
dec
mov
and
mov
in
call
imulb
mov
jl
mov
inc
lock
movsl
pop
test
fwait
lret
lds
push
jg
push
imul
std
nop
fidivrs
mov
adc
xchg
es
in
leave
dec
mov
jge
repz
jecxz
scas
test
std
push
xor
jle
adcl
aaa
cmpsb
cli
mov
jle
mov
mov
xchg
xchg
inc
fstpl
mov
shrb
push
scas
sub
pop
dec
push
mov
imul
mov
jns
pop
mov
xor
pop
stc
push
push
adc
sub
into
shrb
lret
notb
sbb
push
mulb
arpl
pushf
mov
clc
cmpsb
lods
gs
bound
imul
xchg
mov
sub
mov
xchg
sub
sbb
mov
cwtl
mov
cltd
or
popf
notb
rolb
sbb
outsl
pop
mov
xchg
shrb
push
jbe
dec
sarb
dec
mov
es
sub
xor
or
aad
loopne
addb
fs
jbe
cmpsb
pop
stc
push
mov
fsubs
loope
push
out
clc
mov
jne
out
dec
into
or
push
xor
in
in
pop
xor
cmc
and
push
jb
into
pop
sub
sahf
pusha
jbe
nop
int3
cmpsl
inc
nop
out
push
es
lcall
xchg
and
dec
sub
roll
mov
inc
lret
std
push
inc
push
xchg
mov
outsl
imul
mov
fs
jecxz
mov
repnz
fsubrs
fbld
jge
outsl
add
xlat
daa
jp
mov
lds
fstpt
mov
xor
imul
xor
lock
aas
mov
inc
insb
lods
dec
sbb
or
cmp
xchg
out
ljmp
in
movsl
cmp
pcmpgtw
sti
mov
iret
adc
jmp
xlat
mov
in
iret
ret
inc
fucom
nop
dec
xchg
and
icebp
xor
adc
mov
fs
in
in
aas
cmp
and
aaa
sbb
sbb
int3
test
sarl
shll
xchg
pop
push
push
aaa
xor
rcrb
cmp
cmp
shll
inc
xchg
adc
int3
je
jns
or
pop
fcoml
repz
loopne
jmp
enter
movsb
pusha
dec
adc
push
lret
push
aaa
jp
xchg
dec
mov
mov
mov
jmp
loop
arpl
dec
push
and
jge
mov
sbbb
mov
loopne
pop
xchg
adc
cmpsb
sub
or
test
out
outsl
outsb
mov
js
jmp
mov
nop
test
out
cs
mov
xlat
pop
mov
and
dec
sbb
mov
jne
jne
dec
xchg
dec
push
cmpsl
push
pop
or
sub
add
gs
pop
in
xchg
pop
pop
xchg
xor
jge
fadd
xor
dec
subb
mov
add
or
dec
movsb
cmp
ljmp
pop
gs
shrl
jbe
pop
mov
lcall
aam
mov
dec
mov
mull
adc
xor
mov
and
cwtl
cmp
imul
jg
test
icebp
jno
mov
inc
xor
mov
aam
ljmp
sub
and
or
adc
ja
fs
cs
add
pusha
loopne
aas
fldl
xor
xor
xchg
inc
push
add
xchg
mov
ret
addr16
cltd
rcrb
out
cmp
jp
mov
test
lahf
popa
pop
ljmp
dec
fnop
pushf
aas
fwait
push
or
jae
popa
cwtl
adc
sub
stc
les
sti
and
sub
lds
jb
mov
cmp
adc
jnp
cmp
aam
dec
mov
jle
std
xchg
rcr
test
std
fiadds
sbb
dec
mov
dec
add
dec
fldz
push
repz
ja
inc
sarb
data16
dec
xchg
push
or
sti
js
mov
subb
test
cmc
aaa
cmp
pop
sub
adc
call
sub
dec
inc
jnp
mov
sbb
and
inc
jl
cli
hlt
add
mov
cs
mov
shrb
or
loop
mov
lock
adc
rolb
das
mov
je
mov
and
inc
push
mov
mov
add
push
into
push
or
lahf
lods
pop
inc
sbb
int3
subb
daa
dec
js
inc
loope
fbld
mov
sbb
and
mov
negl
jle
and
imul
pop
int
push
cwtl
dec
or
jge
mov
pop
test
scas
ja
out
pop
int3
leave
test
outsl
jae
adc
int3
or
insb
lcall
sbb
loop
test
repnz
or
or
enter
sbb
jp
and
and
xchg
jle
imul
test
mov
into
adc
jne
sub
fldl
test
iret
sbb
jo
imul
fidivrl
jo
les
xchg
in
pop
push
jbe
arpl
cmpsb
icebp
test
and
and
into
sub
xor
shr
rolb
push
rorl
xchg
mov
dec
je
inc
fstps
lock
adc
std
fsts
push
jb
jno
pop
or
outsl
pop
shrl
pop
xchg
faddl
and
fbld
and
adc
mov
mov
shlb
or
rcl
sub
outsb
lret
adc
push
scas
shl
fisubl
mov
stc
sbb
sbb
out
mov
pop
xchg
push
ret
aaa
adcl
jp
or
inc
pop
repz
test
aaa
lds
mov
leave
push
push
mov
std
adc
stc
fwait
out
add
out
xchg
cld
test
insb
mov
or
nop
xorb
jge
cmp
ljmp
mov
mov
cmc
lds
xor
adc
imul
in
fld
sbb
adc
mov
dec
movsb
mov
mov
es
lcall
xchg
stos
inc
or
cs
jno
mov
mov
xchg
push
pusha
insb
inc
jne
pusha
fdivrs
out
mov
mov
clc
lods
shrb
int
dec
faddl
imul
jbe
xor
cmp
fs
int
adc
add
push
inc
or
inc
pop
int3
sub
xor
and
hlt
arpl
sbb
leave
sub
jns
jge
mov
test
jle
pop
sbb
popa
jnp
add
add
adc
jle
fcoms
decl
inc
out
xchg
mov
in
movsb
aam
adc
add
inc
cmc
fisubrl
sbb
outsl
xchg
cltd
and
fldl
or
mov
dec
jecxz
push
xchg
std
add
xlat
fstl
in
xchg
movl
rcll
sbb
push
mov
bound
test
push
mov
repnz
push
cmp
jnp
mov
xor
jle
test
iret
xor
stc
cmp
loope
pop
pop
stos
xchg
and
lahf
loop
sbb
inc
cmp
add
mov
icebp
jl
jo
fistl
pop
mov
loopne
or
mov
clc
stos
mov
fiadds
dec
fs
mov
lock
push
sub
std
lcall
pop
stos
test
xor
insl
je
mov
ja
adc
daa
sbb
adc
icebp
mov
mov
insl
jg
and
xchg
or
jno
inc
xchg
jecxz
inc
xor
mov
sub
jns
mov
jnp
aas
and
push
scas
and
pop
mov
aam
fcmovbe
sbb
xchg
lcall
jno
imul
mov
cmp
iret
rol
inc
inc
mov
movsl
dec
ljmp
shlb
cld
mov
or
mov
mov
jmp
pop
pop
mov
ljmp
sti
push
push
popf
jns
dec
aad
jne
mov
lds
xor
add
dec
push
insl
sbb
sbb
testb
in
mov
sub
xchg
fnstsw
xchg
cmp
pop
push
inc
lea
push
cs
inc
popa
fstpl
daa
fidivs
push
add
test
mov
cmp
incb
add
cltd
pop
push
mov
dec
cli
ja
jbe
jnp
sub
mov
jmp
inc
and
stos
sbb
stos
in
sbb
sarl
ficomps
push
push
mov
sub
mov
imul
jecxz
push
movsb
mov
dec
mov
push
imul
aad
in
push
scas
sub
xor
mov
test
mov
iret
xor
subl
jno
push
pop
lret
and
jae
ljmp
out
lods
pop
add
jg
xor
lock
es
pop
jbe
ret
inc
outsb
das
mov
loop
push
and
push
enter
aas
mov
sub
cld
lret
adc
push
ljmp
pop
xchg
push
rcll
sub
sbbb
adc
js
movsl
cmc
mov
cltd
pop
and
jecxz
xor
hlt
loope
pop
adc
imul
pop
mov
add
add
add
lret
punpcklwd
arpl
sarl
add
sbb
xchg
xor
adc
loop
push
lock
addr16
inc
cs
out
lret
cmpsb
daa
movsl
int
or
hlt
loope
adc
test
shlb
or
ja
lock
iret
sbb
mov
push
aad
leave
fwait
popl
out
lods
add
fwait
cmp
shrb
cmp
daa
mov
jmp
pop
stos
mov
and
cmp
xor
shlb
and
pop
push
mov
inc
and
movsl
xor
xor
pop
pop
je
js
sub
or
imul
jno
rcr
int
mov
daa
out
push
testl
lods
sti
cli
aam
shll
mov
and
xlat
loopne
shlb
dec
std
jo
pop
lcall
aad
std
pusha
out
inc
inc
sub
clc
dec
sub
test
mov
dec
jl
fidivrs
lods
enter
pop
mov
mov
aaa
pop
inc
sarb
add
insb
inc
cli
sub
dec
xchg
mov
xchg
fsincos
dec
test
aad
call
add
dec
pop
pushf
fcoms
int
cmp
imul
mov
in
xor
loopne
cmpsl
ljmp
andl
iret
insl
fdivrl
push
popa
adc
ljmp
mov
fisttps
pop
and
pop
in
cmpsb
jb
lods
pushf
mov
and
inc
dec
mov
mov
cmpsl
lcall
jns
mov
cli
pop
cmpsl
inc
push
arpl
in
pop
loop
dec
in
in
insl
ret
out
sbb
mov
and
push
and
mov
cmp
int3
cli
cmpb
sti
mov
jno
test
cltd
leave
daa
fcom
rclb
fmul
xchg
sbb
mov
mov
addl
mov
aam
stc
jg
sbb
lret
pop
insl
imul
and
xchg
mov
scas
pop
dec
insb
and
add
fimuls
sub
repz
inc
das
mov
add
dec
cmp
dec
into
jmp
push
jle
jmp
cld
aad
and
adc
fistl
or
nop
movsl
mov
xor
movl
loope
out
jb
push
ljmp
dec
mov
inc
and
pusha
cmp
sub
xchg
push
fwait
pop
out
in
xor
call
es
xor
xor
call
xor
jge
loopne
fwait
outsb
int3
hlt
testl
or
cmp
lret
inc
insl
add
pop
xchg
inc
xor
outsb
stos
and
jns
and
pop
add
std
arpl
lcall
mov
loopne
insb
cmp
das
mov
mov
fimuls
out
mov
jecxz
jle
xchg
repnz
adc
stos
adc
in
nop
sar
in
sbb
push
imul
out
pushf
cmpb
dec
gs
sub
xchg
in
outsl
fdivr
mov
js
cmp
enter
adc
and
mov
pop
dec
outsb
ljmp
test
int3
mov
fldenv
jmp
xor
inc
std
cmp
daa
movsb
outsb
or
dec
sbb
imul
das
in
cwtl
imul
pop
and
inc
mov
addb
push
mov
es
and
lock
sbb
les
lahf
push
fdivp
out
imull
dec
sub
pop
jbe
pop
stc
adc
jnp
jnp
mov
pop
xor
cwtl
pop
dec
loope
and
xor
jnp
test
jo
or
add
pop
cmp
shll
adc
sbb
scas
arpl
sti
pop
add
cmp
out
jns
mov
fiaddl
pop
sahf
andl
in
cmp
aam
push
add
xor
xchg
sub
dec
fistl
jns
adc
lret
xchg
pop
test
lods
sti
mov
fmul
xchg
divl
popf
xor
jae
popa
xchg
xchg
jmp
test
push
push
cmp
push
test
fists
jno
push
inc
addr16
or
out
mov
push
enter
sbb
sub
fwait
sub
jb
movsb
add
jns
mov
add
mov
jo
scas
sub
dec
push
imul
jno
fisttpl
pop
add
dec
shlb
fs
push
inc
or
sti
sub
pop
xor
push
lret
lea
jecxz
clc
jne
xor
ret
adc
in
pop
lret
js
jg
xor
mov
add
int3
fcoms
push
pop
mov
arpl
sti
stc
pop
adc
sbb
hlt
mov
ret
sar
addr16
ret
add
shlb
subb
lods
mov
nop
cmp
jge
mov
in
xchg
mov
ja
test
iret
cltd
inc
icebp
cwtl
xor
jle
mov
testl
jns
cli
pushf
movsl
test
out
sub
jae
push
mov
out
ss
push
fstps
mov
xchg
ficoml
fimull
adc
xor
push
jle
out
mov
cmpsb
lcall
sbb
imull
and
xchg
sub
sub
mov
lret
stc
pop
mov
dec
arpl
mov
mov
jns
loope
and
mov
mov
xchg
pushl
sbb
out
test
pop
cli
adc
popf
repnz
pop
or
push
fadds
cmp
add
or
or
ret
cs
ss
lods
sahf
clc
mov
and
or
test
sbb
and
jns
cmpsb
gs
mov
lahf
movsb
sub
sub
dec
add
pop
bound
call
jecxz
repz
in
dec
xor
xchg
or
dec
loope
iret
adc
faddl
clc
fisubrs
dec
dec
and
ss
push
shll
je
outsl
jno
pop
addl
inc
lret
mov
or
xchg
into
mov
lahf
leave
fs
or
je
xor
cmpsl
push
push
in
mov
and
or
jle
es
dec
mov
sbbl
rorl
stos
adc
addb
ljmp
cld
jg
xlat
stos
rorb
ljmp
jecxz
adc
fwait
les
aad
int3
ljmp
aad
std
add
pop
dec
addr16
andl
scas
mov
mov
test
adc
add
out
sahf
sarb
stc
mov
test
cmp
dec
ja
std
jge
cmc
nop
xlat
push
inc
and
pop
and
push
inc
lcall
xchg
lds
stos
incb
nopl
mov
sbb
pop
cmc
push
cmp
mov
and
cltd
outsl
sarl
cmp
pusha
cwtl
sbb
mov
dec
imul
fwait
bnd
enter
xchg
cmpb
in
movsb
pop
mov
cli
mov
mov
fimuls
sub
ds
adc
shlb
or
pop
gs
sub
xor
xor
std
and
add
mov
sub
imul
das
pop
stos
and
dec
jmp
xchg
mov
pusha
push
jb
fnstcw
push
popa
shrb
fistpl
inc
xlat
in
cmp
movsb
pop
cltd
nop
inc
mov
sbb
in
cmp
sub
xor
xor
adc
cmp
pop
jno
or
shlb
and
es
and
pop
lea
or
sub
daa
outsb
mov
aad
fldcw
mov
and
repz
or
add
mov
add
xor
mov
mov
je
push
ss
shlb
push
stc
fs
dec
mov
or
mov
push
cwtl
inc
test
imul
sub
ljmp
sbb
ljmp
out
mov
incl
adc
jns
push
lret
mov
push
clc
popl
invd
adc
mov
aas
out
mov
add
lods
icebp
hlt
dec
cmp
hlt
punpcklwd
adc
or
xor
mov
filds
pop
sahf
add
push
add
ss
inc
sub
daa
inc
xor
and
pop
int3
mov
pop
or
adc
aam
and
movsl
xchg
mov
out
andb
pop
jecxz
gs
pop
cmp
xchg
push
push
cmp
mov
cmp
mov
adc
cmp
inc
mov
hlt
fcompl
pop
leave
call
pop
cmp
or
dec
push
leave
mov
xor
icebp
dec
mov
mov
pop
mov
mov
daa
sbb
stc
add
jbe
das
pop
loop
insb
inc
idivl
insb
into
movsb
jns
in
inc
out
pop
pusha
pushf
cltd
idivb
inc
cmpsb
jg
mov
dec
jecxz
mov
mov
mov
ja
pusha
or
mov
jb
es
push
cld
mov
mov
adc
xor
pop
mov
mov
cmp
insb
jnp
nop
sbb
in
mov
lcall
jle
jno
mov
je
sub
movsl
mov
inc
jmp
push
orb
in
xor
push
packssdw
inc
cmpsl
fwait
push
hlt
pop
out
xchg
arpl
insb
pop
cwtl
cmp
jns
icebp
pop
mov
dec
imul
lahf
jnp
mov
cmp
mov
dec
sub
push
fwait
or
dec
pop
jo
call
xchg
int3
xchg
push
in
jecxz
xchg
sub
dec
stos
sub
out
sbb
xor
push
sbb
and
pusha
cwtl
push
les
sub
imul
sbbl
xor
cs
dec
cmp
lahf
sbb
out
mov
fsub
adc
test
push
mov
xor
int3
push
punpcklbw
cld
mov
cmpsl
cmp
mov
inc
sahf
and
sub
out
mov
push
mov
ljmp
rcll
sub
sbb
int
push
out
hlt
mov
test
xlat
jmp
xor
add
pop
jmp
jbe
fildll
dec
aad
aaa
aas
scas
sub
xchg
les
bound
push
pop
movsl
call
test
pop
scas
into
test
sbb
mov
xor
fisubl
mov
cmpsl
pushf
push
fnstsw
fcoms
gs
fcmove
push
mov
sbb
add
inc
test
sbb
jae
xor
mov
cmc
test
ret
jge
cmpsl
dec
fs
imul
or
imul
subb
lods
daa
jecxz
iret
test
pop
pop
xchg
outsb
out
stos
push
xor
add
lahf
adc
pop
inc
inc
sbb
out
xchg
adc
bswap
mov
push
js
sub
sbb
inc
das
jp
jg
clc
cmp
mov
inc
cmp
outsl
xchg
and
popf
imul
or
xor
in
mov
push
andl
fsubs
adc
outsb
jne
and
dec
push
int3
test
nop
mov
push
aad
aam
ret
mov
std
push
popa
lods
and
les
dec
xor
lea
call
test
popaw
cltd
mov
ljmp
jl
inc
pop
sahf
cmpsl
aam
add
xchg
roll
mov
xchg
bnd
jmp
pushf
add
rcll
adc
into
mov
inc
xor
xor
dec
sbbb
pop
push
inc
fwait
push
push
lret
adc
scas
push
aam
dec
push
pop
dec
mov
mov
jle
loope
push
cmp
jo
or
rol
fcomip
pop
push
adc
add
shll
cmpb
or
xchg
jmp
push
mov
cmp
mov
mov
xlat
push
inc
push
hlt
in
inc
adc
cmpsl
mov
fiadds
push
call
sub
test
and
sub
ucomiss
jge
test
mov
lea
inc
js
mov
filds
int3
ja
outsl
ret
pop
xchg
test
jmp
sbb
jg
adc
les
cltd
inc
divl
je
jmp
lret
dec
mov
adc
or
test
arpl
xor
jb
movsl
call
mov
xchg
gs
push
out
pop
inc
mov
fiadds
xor
sub
icebp
pop
mov
mov
add
adc
cmp
mov
daa
enter
sbb
mov
sbb
mov
cmp
push
add
es
ret
adc
mov
test
idivl
in
jmp
loope
jl
movsb
jmp
inc
dec
in
in
das
js
mov
pop
fcompl
int3
incl
orl
cmp
je
fnstenv
jbe
mov
ret
mov
nop
insb
aaa
jae
leave
gs
xchg
sub
cmp
into
lahf
xchg
cmc
jmp
jbe
hlt
mov
pusha
sub
ret
ljmp
mov
push
into
fs
leave
loope
addr16
icebp
in
hlt
pop
rolb
pop
scas
mov
pop
mov
mov
cmp
sbb
dec
push
and
adc
inc
adc
xor
aam
xchg
imul
hlt
jmp
xchg
mov
cmp
xor
imul
push
mov
mov
scas
icebp
push
bound
sarb
nop
imul
repnz
cmp
fdiv
xchg
sahf
flds
mov
jae
aas
mov
cld
jg
lods
add
loop
dec
sbb
xchg
dec
aaa
and
and
mov
lcall
or
int
and
mov
rolb
scas
rcl
lret
fildl
adcl
push
add
mov
push
xchg
dec
xchg
addr16
xor
mulb
push
out
lret
and
jle
sub
cli
loopne
xor
lcall
repz
dec
and
lahf
rolb
sbb
pop
mov
test
out
push
xlat
cmp
xor
lret
pop
xor
xor
push
inc
div
push
sbb
faddp
cld
push
enter
pop
cld
movsb
fs
xor
and
int
adc
xchg
cmp
idivl
sbb
push
xchg
xchg
mov
push
stc
movsb
ds
xchg
mov
inc
ja
lods
pop
cmp
mov
sbb
cltd
sub
ja
push
hlt
ret
out
push
pop
fiadds
das
pop
sti
lret
or
dec
fwait
std
sbb
mov
jo
pop
pop
imul
push
in
inc
gs
pushf
jle
inc
xchg
adc
out
adc
adc
cmp
cmp
outsb
adc
faddp
test
ret
loop
mov
arpl
das
pop
mov
fdivl
mov
and
pop
push
mov
sbb
out
cmp
pop
sbb
add
sbb
outsl
cmp
icebp
mov
test
sbb
pop
leave
cmpsb
or
adc
mov
cmp
xor
sub
jnp
mov
jge
iret
leave
mov
loopne
shll
sbbb
aaa
cld
in
pop
les
sbb
lock
push
or
mov
mov
test
mov
leave
pop
rorb
mov
pop
aas
hlt
push
jnp
xchg
mov
push
mov
add
out
nop
mov
loop
mov
push
gs
jle
inc
sub
rorl
jge
mov
mov
sahf
xchg
xchg
push
scas
shr
sub
out
cmp
int
add
imul
cmpsl
xchg
test
movsb
lcall
mov
cmp
xchg
and
addr16
idivb
aaa
xchg
loop
pop
push
sub
dec
pop
and
or
cli
mov
add
sub
cld
in
sub
das
stc
mov
nop
fstl
and
xor
pusha
test
cs
fidivs
jecxz
jp
fdivp
pop
imul
or
pop
xchg
jge
mov
shll
fistpl
mov
mov
mov
lods
cli
push
adc
fisubs
fildl
and
test
push
xlat
pop
in
mul
rolb
cmp
in
outsb
xchg
mov
into
mov
dec
lods
jle
in
loope
movsl
fidivl
jp
jg
fstpt
sbb
push
hlt
ret
mov
xlat
cmp
push
lods
cmp
xor
enter
pop
mov
mov
stos
es
and
xchg
sub
sbb
push
xor
adc
pop
hlt
adc
orb
sti
adc
and
cmp
inc
xchg
insl
dec
pusha
dec
inc
aaa
pop
mov
fstp
push
dec
push
adc
pop
pop
fistpl
out
mov
ja
addr16
mov
loopne
testl
xor
cmpsb
es
cmpsb
dec
xor
fistl
insl
xlat
jmp
jb,pt
adc
fs
sub
adc
inc
fsubrs
add
js
push
dec
lcall
add
fidivrl
xchg
daa
mov
nop
jge
bound
jmp
add
repnz
loop
rcrl
mov
repnz
sarl
lahf
cmp
push
push
out
xor
cmp
nop
mov
sbb
out
lods
mov
cmpsb
mov
rcll
pop
popf
or
mov
ret
push
adc
xchg
push
xchg
insl
out
inc
enter
mov
pop
stos
into
cmp
shl
aam
push
mov
push
jg
xor
adc
sub
xchg
push
std
sub
sbb
into
pop
shll
mov
jg
fs
push
mov
cmp
or
addr16
pop
pop
mov
and
iret
test
jno
jg
dec
jge
imul
fstpt
lret
jge
cld
out
push
imul
push
ja
add
daa
inc
inc
jbe
xlat
cmpsb
mov
lret
mov
notl
cmpsb
push
je
outsb
js
mov
or
popf
std
mov
cmpsl
loop
mov
xchg
aam
and
add
clc
cmp
mov
add
inc
sub
adc
mov
push
outsl
adc
cmp
lock
lds
insb
loop
bound
inc
dec
inc
mov
lret
lahf
add
sar
mov
pop
sahf
lcall
xchg
mov
mov
daa
push
lods
pop
and
insb
testb
mov
mov
push
shl
test
cmp
xchg
repz
push
scas
std
jo
jl
cli
mov
ret
jmp
jno
dec
jae
push
notl
jnp
cmp
scas
xor
dec
test
out
or
cltd
les
or
aas
mov
xor
adc
pop
lret
or
dec
fadds
clc
xchg
aas
fists
xor
and
add
mov
mov
and
add
cwtl
sub
cmp
imul
mov
test
push
adcb
pushf
lahf
lret
mov
int3
mov
lahf
xor
lahf
repz
jmp
add
xor
aam
orb
dec
adc
jg
sub
mov
inc
add
inc
sub
dec
xor
js
mov
push
mov
xchg
jns
repnz
cmp
mov
mov
mov
cmp
push
leave
mov
mov
cli
push
stos
nop
dec
mov
add
lcall
push
push
xchg
mov
loope
pop
aas
inc
xor
pop
dec
jle
push
jmp
add
les
pop
push
int3
inc
mov
lock
cwtl
fs
lahf
cmpl
mov
jno
sti
dec
jbe
dec
loop
or
cltd
jmp
mov
jbe
or
lock
lods
cltd
flds
mov
fisubs
pop
add
or
push
and
fs
xchg
imul
mov
xchg
loope
xchg
mov
xlat
cmpsl
loop
push
cmpsl
adc
out
data16
jecxz
push
insb
xchg
dec
add
enter
mulb
xchg
incb
mov
push
mov
mov
push
bound
jbe
sub
fidivs
dec
mov
aam
std
inc
jge
in
push
add
pop
stos
fdivs
div
mov
push
pushl
loope
cmpl
xlat
mov
mov
cld
shlb
mov
ffreep
aad
and
data16
cmp
mov
sbb
call
sahf
out
decb
add
sbb
inc
and
adc
jp
sahf
orl
jne
or
or
xchg
inc
jl
xchg
inc
inc
out
inc
inc
mov
cltd
ret
mov
enter
mov
rolb
fwait
xor
cmc
iret
lock
pop
jmp
iret
out
loopne
sbb
cmpb
sar
sub
icebp
push
mov
test
jg
cltd
jo
cld
lods
pusha
movsb
in
hlt
ret
aad
mov
add
add
xchg
and
loopne
call
mov
adc
adc
adcb
in
xchg
clc
fcmovnu
or
xor
aad
jp
movl
or
ret
fcmovnbe
lods
rcrb
fbld
not
mov
loopne
das
les
push
shl
inc
addr16
cvtps2pd
mov
les
notl
or
xlat
inc
xchg
sub
loop
xor
push
cmp
inc
lods
hlt
cmpl
or
jne
into
and
test
roll
subl
push
cmp
fwait
cmpb
das
dec
out
jp
push
cmp
jge
insl
bound
dec
imul
pop
cmp
lods
cmp
add
adc
dec
bound
mov
sbb
mov
jnp
push
xchg
test
adc
and
mov
iret
xor
dec
repnz
aam
push
fwait
andb
mov
xor
dec
push
xchg
cmp
add
sub
aam
mov
bound
hlt
fdivrs
jne
push
sub
sbb
push
sub
dec
loopne
inc
pushf
stos
movsb
aam
mov
inc
jo
andl
in
loope
mov
xchg
lods
pop
xor
xlat
call
mov
cmp
int
mov
ljmp
ja
in
movsb
stc
lahf
shlb
xchg
mov
cmpsb
cmp
inc
call
nop
add
sub
jmp
pop
or
jg
enter
cmc
andl
mov
pop
out
aam
xchg
mulb
shll
mov
jnp
pop
addl
inc
adc
dec
add
loop
xor
xlat
pop
push
aas
lret
sub
jge
or
inc
cli
jmp
cli
mov
push
xchg
rcl
or
jge
lods
mov
dec
fisubs
aas
mov
push
dec
jnp
pusha
es
mov
std
jo
repz
leave
lcall
mov
push
mov
in
mov
into
inc
xor
popa
add
push
push
push
rorl
paddq
jo
and
aam
and
mov
wrmsr
inc
adc
mov
orps
inc
adc
mov
test
adc
pusha
pusha
and
mov
rcll
lods
cmpsb
jo
xchg
dec
ljmp
xor
sbb
sarb
cmp
movsl
cmpsb
mov
jbe
int
xchg
scas
jb
pop
leave
lret
pop
incb
adc
movsl
xor
test
cmp
or
ja
xchg
in
push
movsl
popf
loopne
pop
stos
xchg
nop
jnp
and
fsubrp
rolb
pop
jno
add
aaa
xor
dec
cmp
xchg
jp
mul
push
faddl
out
pop
mov
pop
cwtl
mov
je
xchg
pop
mov
mov
jecxz
mov
mov
data16
sbb
popa
push
shll
arpl
push
shl
mov
cmpsl
ds
les
mov
test
cmovo
lods
pop
daa
fmuls
pop
testl
fdivl
dec
int3
stos
testb
cwtl
insl
jne
jecxz
xor
add
rolb
jge
jns
test
aam
sub
mov
inc
pop
sbb
xchg
lcall
ds
sahf
jno
push
popa
add
out
mov
cli
daa
sbb
ss
push
sub
xor
das
sub
pusha
xor
sub
jmp
ljmp
cltd
hlt
mov
cmp
or
mov
ret
add
movsb
jnp
jge
jnp
lahf
mov
nop
sub
lods
out
dec
mov
sahf
add
push
dec
jno
mov
mov
into
pop
cli
or
or
enter
jg
cmc
xor
jge
ljmp
scas
mov
lds
mov
mov
push
mov
stc
or
jmp
mov
ja
jb
and
push
psubb
mov
andps
aam
leave
push
inc
popa
and
or
jnp
push
icebp
mov
clc
cmpsb
adc
push
lret
xchg
jmp
lahf
jge
mov
pop
repnz
adc
ficompl
pop
jno
movsl
xchg
stos
xlat
mov
fcmovne
mov
jp
lods
push
pop
addb
xchg
cmp
push
cmp
add
flds
ficompl
inc
jge
xchg
dec
lds
in
cmpsl
dec
push
outsb
shlb
pop
or
es
jae
outsb
mov
loopne
sub
jl
test
add
push
lods
xor
mov
mov
jle
inc
outsl
inc
sub
jge
cs
lods
orl
in
andb
bnd
test
mov
jno
and
loopne
into
or
lods
push
push
mov
mov
ss
ljmp
lcall
leave
std
insl
inc
and
inc
fsubrs
loope
jb
lods
inc
data16
sub
lods
jl
loope
cmc
or
repnz
gs
int3
out
pop
std
pop
mov
cli
cmp
and
xchg
xchg
adc
pop
call
outsl
xchg
mov
stos
mov
xchg
jl
inc
fistl
inc
les
push
addr16
xor
fisubrl
out
xor
test
push
mov
push
insb
cmpsl
pop
cwtl
enter
jno
pop
enter
push
in
cmp
iret
sbb
push
call
sarb
scas
sbb
insb
mov
sub
and
dec
or
rcll
push
mov
fidivrs
inc
add
inc
add
out
cld
mov
xchg
insb
lahf
xchg
cmpsl
mov
lret
mov
mov
mov
push
scas
mov
into
mov
xchg
ja
sub
push
add
mov
push
adc
lret
push
mov
clc
mov
jbe
push
ljmp
loope
mov
es
les
cwtl
dec
out
out
mov
sub
adc
bound
add
int3
jg
cs
jle
mov
push
adc
jp
pusha
cltd
movsb
mov
add
sti
push
in
push
mov
mov
mov
jnp
test
lret
ljmp
cs
sahf
shr
lods
sbb
mov
jge
pop
cs
pusha
mov
insl
out
xor
dec
xchg
lods
and
push
scas
push
pop
fnstenv
cli
xchg
pushf
xchg
popf
mov
push
or
fists
push
xchg
sbb
bound
xlat
mov
push
sub
or
cmp
push
mov
into
or
jnp
jle
mov
add
fs
in
mov
jo
mov
sti
daa
xchg
sub
adc
shl
fbstp
inc
ret
pop
adc
cmpsb
test
dec
aas
insl
rcrl
mov
repz
das
jmp
adc
outsl
pop
jg
fistps
ret
or
xchg
mov
cmpb
mov
dec
xchg
xchg
cli
rcll
xchg
das
fcmovnb
aam
loopne
fcoms
pop
jge
cmp
call
sub
scas
add
xor
jo
or
mov
lret
cmp
push
or
xchg
cmp
sub
cltd
lret
cmp
cmp
std
push
mov
int3
xchg
dec
movsl
push
mov
addr16
pop
lret
enter
inc
popa
sub
jne
fists
pop
in
inc
int
xchg
movsl
fstpl
add
sbb
push
push
popa
outsb
adc
or
cld
dec
inc
popl
or
test
mov
pushf
xchg
mov
cld
andl
mov
jb
roll
cltd
pushf
dec
mov
lds
push
dec
dec
ja
dec
in
in
sub
sub
fsubr
outsl
jno
mov
mov
add
scas
dec
popf
dec
mov
pop
repnz
inc
jnp
and
or
adc
sarl
inc
lret
mov
ret
fwait
sbb
inc
scas
js
xor
mov
add
xchg
sti
arpl
in
repz
and
ret
and
movsb
adc
enter
xor
cmp
mov
xor
push
push
add
xchg
inc
pop
push
inc
test
jg
cmp
mov
add
cmc
inc
cmpsb
mov
int3
leave
in
push
pop
xchg
cmp
push
inc
or
dec
divb
lods
test
sbb
fs
jle
movl
jl
mov
push
fidivs
insb
lock
push
aaa
std
adc
push
mov
xor
push
repnz
lods
and
hlt
data16
cmp
shrb
jne
fs
xchg
int
fucomi
fisubrl
inc
jmp
stos
or
mov
jnp
push
dec
inc
out
pop
int
out
jbe
cwtl
and
jo
imul
subb
loope
mov
dec
sbbl
sahf
shll
push
pop
fstl
adc
dec
sbb
dec
out
push
bnd
cs
mov
imul
push
jae
mov
out
mov
mov
mov
dec
dec
push
jmp
inc
insl
add
fwait
mov
mov
cmpsb
cmp
push
shrb
mov
push
cmp
lret
and
outsl
jo
jp
aad
jbe
cmp
inc
cs
jecxz
sub
aam
lock
test
inc
shlb
fwait
and
sahf
cmc
leave
adc
add
xorl
jno
push
ret
jle
mov
in
sahf
nop
imul
icebp
cmpsl
push
cwtl
movsb
xchg
pop
sbb
push
push
outsl
add
outsl
cmp
inc
jne
sub
mov
jno
test
or
cmc
xor
imul
sbb
stos
or
jg
dec
cld
sub
fimuls
movsl
ret
or
jmp
mov
insb
pop
push
and
mov
jg
call
push
or
push
xlat
fcoml
decl
mov
sub
adc
and
adc
sbb
and
bound
dec
push
stos
sbb
inc
test
pop
in
cmp
add
bound
arpl
lret
mov
inc
mov
out
sbb
inc
dec
fnsave
test
in
lock
pop
leave
mov
mov
push
aas
push
jecxz
out
icebp
lret
mov
pop
sub
mov
scas
mov
xchg
adc
daa
push
mov
mov
lods
cs
loopne
out
ret
pop
push
cld
and
addr16
push
mov
mov
mov
out
and
mov
cmp
lods
xchg
js
imul
mov
daa
or
icebp
imul
shrb
lds
jmp
addr16
out
js
mov
sub
xchg
imul
xor
mov
sti
sub
out
dec
sub
shlb
enter
addr16
paddq
rolb
add
pop
loop
stos
fisubrl
sbb
cwtl
sahf
jnp
push
imul
mov
addr16
and
stos
out
pop
inc
jae
or
movsl
add
out
iret
jmp
lods
xlat
shll
jbe
add
ss
xor
mov
jb
pop
mov
popf
cmp
pop
inc
push
or
in
jmp
and
push
cli
lahf
cmc
and
movsb
xchg
in
pop
adc
ss
or
and
sub
push
fucomi
std
daa
cltd
xor
shrb
into
cmp
adc
dec
xor
adc
adc
and
lock
and
pop
aaa
stos
test
and
mov
cmpsl
fwait
int
daa
or
outsb
jo
dec
xlat
pop
mov
mov
jo
adc
inc
ja
or
fisubs
cmp
repz
sbb
scas
jnp
pushf
in
aad
outsl
push
xchg
sub
dec
lret
std
mov
cld
aad
jmp
nop
mov
repnz
roll
push
aas
icebp
sub
ja
ror
pop
scas
daa
mov
jl
adc
add
outsb
mov
rorl
adc
fs
pop
scas
fs
jmp
cmp
test
and
cld
add
sbb
outsb
adc
popa
aaa
pop
js
pop
outsl
and
shrl
sub
aad
aaa
mov
lcall
fwait
loope
adc
or
daa
xchg
fsubp
fwait
pusha
gs
ret
mov
aad
pop
in
cmp
sub
out
add
push
test
push
or
lcall
hlt
fldl
movsb
push
subb
icebp
adc
inc
dec
push
xlat
jge
loop
dec
test
and
mov
cmp
xchg
arpl
mov
mov
in
jmp
push
cmp
push
mov
cmpl
clc
fdivrp
data16
pop
scas
test
push
gs
jmp
cmpsl
cltd
cmc
lock
sbb
pop
jecxz
jnp
xchg
ds
push
outsl
mov
lret
fmuls
xchg
mov
call
ss
jb
das
add
aaa
ljmp
push
jae
push
push
sub
int
sub
scas
repnz
icebp
imul
mov
loope
sub
add
xchg
xchg
int
dec
push
dec
jecxz
and
push
imul
scas
in
rorl
loope
sbb
jo
inc
rclb
jne
jne
rol
inc
jno
daa
ds
xor
and
push
call
add
jle
shlb
into
inc
or
dec
imulb
mov
cmc
push
add
cs
xchg
cmp
daa
fldenv
add
pop
imul
cld
xor
pop
enter
in
out
add
jmp
jne
cmpb
inc
jae
js
aaa
std
cmp
mov
orb
and
jns
xchg
jb
stos
xor
and
sub
call
xor
mov
push
rcl
sahf
sbb
push
lahf
mov
stos
gs
mov
pop
popf
jbe
mov
sub
in
fwait
fwait
adcl
push
loop
ds
mov
clc
repz
xchg
xor
pop
mov
enter
icebp
xchg
inc
in
adc
bound
jmp
cmc
adc
adc
notb
kmovw
mov
inc
sbb
adc
shrd
pop
dec
and
or
mov
mov
cmp
ficoml
jne
pushf
lea
cmp
rol
jb
and
cmpsl
shll
or
and
jne
pop
add
loop
sub
fcomp
repz
and
cmp
add
push
cld
lds
and
aad
jb
add
cmp
shll
insl
mov
ffreep
xorb
popf
mov
sarl
pop
cld
loopne
test
mov
clc
sbb
cld
and
mov
je
adc
fiadds
lcall
ucomiss
inc
pusha
inc
sbb
push
repnz
mov
lret
sub
popl
rorb
or
jns
push
repz
mov
ja
adc
fisttpll
or
mov
push
sbb
jmp
xchg
adc
add
out
shll
mov
mov
loop
xchg
xor
xchg
ret
vpunpcklqdq
dec
mov
jne
or
ljmp
push
push
inc
push
cltd
mov
inc
add
mov
and
lret
pop
mov
fisubl
dec
dec
mov
nop
outsl
out
cs
call
cmp
jl
lret
pop
xor
cli
xchg
xchg
push
in
add
cmp
jecxz
and
lret
jo
pop
sbb
xchg
sahf
push
popa
cwtl
xchg
xchg
addr16
or
std
dec
xchg
arpl
xchg
inc
pop
sahf
xchg
loope
mov
leave
xchg
add
xor
js
scas
addr16
std
movd
cltd
mov
lock
push
push
rcll
xor
jge
cmp
and
or
xchg
sub
jbe
jmp
outsl
push
insb
push
mov
movl
pop
cmp
xor
jns
jg
sbb
add
jmp
jp
fsts
push
popa
or
lds
mov
inc
cmc
lods
pop
xor
sbb
add
push
push
ret
data16
inc
fmuls
dec
pop
les
inc
call
mov
int3
out
dec
xchg
lret
test
push
lahf
out
mov
imul
mov
pop
xchg
loop
idivl
xchg
outsb
inc
adc
mov
cmp
fcomps
sub
repz
cmpsl
ss
xchg
add
inc
and
mov
aaa
repz
mov
inc
fcmovnu
ljmp
mov
push
mov
in
addr16
pop
fsubl
sbb
pop
mov
push
mov
adc
shll
cwtl
lods
icebp
test
es
xchg
mov
dec
repnz
mov
and
pop
mov
pop
xchg
pop
fcoms
xor
test
vpsubusw
and
shl
push
and
push
out
cmp
lods
sarl
jne
cmc
dec
push
adc
mov
cmp
orl
mov
and
xchg
or
adc
push
xor
hlt
cld
fwait
jl
pop
gs
leave
push
xchg
pop
push
sbb
cmpsb
movsb
mov
dec
mov
push
pop
cmp
shll
insl
in
inc
les
xchg
add
jns
inc
shrl
dec
push
sub
push
out
or
and
sbb
adc
test
arpl
je
push
pushf
cmp
test
adc
cmp
out
movsb
sub
xor
inc
ljmp
fwait
pop
mov
bswap
shl
xor
cltd
jnp
sub
sub
mov
repz
fwait
les
push
jp
lock
fcom
jne
cmpsl
cmp
fisttps
pop
and
sub
icebp
movsl
xlat
mov
jo
mov
push
mov
cmpsl
xor
jbe
mov
dec
jecxz
repnz
outsb
add
cs
daa
aam
movsb
out
ds
dec
jp
pushf
out
and
jp
fmull
mov
movsl
mov
jae
xor
rclb
sbb
stc
sahf
pop
adc
mov
cmpsb
jmp
mov
xchg
push
mov
sbb
ret
clc
xor
fisubrl
inc
fwait
add
insb
out
sbb
sub
jge
test
pop
js
sub
xor
stc
push
fisttps
mov
inc
in
add
add
xor
pushf
ret
ss
push
insl
hlt
cli
ss
and
aas
cs
adc
add
pop
mov
les
sbb
add
pop
mov
jnp
idivb
rorl
dec
push
jg
ret
andb
cmp
pop
hlt
jle
loopne
sub
push
mov
pushf
in
test
push
jecxz
dec
lcall
push
cmp
ficomps
int
cmpsl
test
xchg
fdivl
xchg
dec
xchg
adc
stos
shlb
mov
xor
sub
repz
aam
js
arpl
rcll
sbbb
movsb
and
pop
push
fs
mov
js
xor
test
mov
add
xchg
mov
sub
in
cs
daa
lds
insl
ja
imul
mov
test
ljmp
rorl
fstpt
cs
les
sbb
pushf
adc
adc
pop
scas
mov
stos
push
mov
stos
add
rcrb
je,pt
insb
push
and
mov
dec
hlt
fmul
imul
jl
xchg
or
cmp
fcompl
imul
je
xchg
xor
pop
adc
pop
cwtl
test
sbb
cmpb
jge
fucomip
es
in
inc
bound
sub
rcrl
mov
hlt
pop
adc
sar
xchg
mov
ljmp
lretw
hlt
ja
mov
stc
hlt
xor
mov
loopne
xchg
xor
in
insb
pop
xorl
pop
or
inc
pusha
test
mov
push
xor
sub
jmp
xchg
mov
push
mov
jnp
sbb
aas
cmp
pop
xchg
leave
movsb
test
jle
or
pop
jo
repnz
or
sahf
cltd
nop
pop
pop
mov
and
jb
fcmovu
stos
les
or
stos
push
mov
mov
sub
ljmp
sbb
cltd
xor
aas
jecxz
cmp
pushf
in
in
cmpsb
sbb
add
jmp
cltd
xlat
and
pop
lods
mov
pop
sub
mov
xor
stos
popf
mov
dec
int
add
pop
adc
mov
adc
test
sub
fwait
pop
stos
pushf
sbb
sarl
call
out
inc
das
sti
dec
inc
insl
or
push
out
pop
repz
and
jne
loopne
rolb
scas
sub
jnp
mov
inc
or
add
inc
sbb
mov
xor
dec
add
lret
repz
and
add
lret
mov
or
dec
leave
sub
pop
cmp
inc
fbstp
sub
lret
gs
mov
and
addr16
hlt
mov
inc
push
mov
cmp
dec
enter
adc
fucomi
push
or
inc
sbb
xchg
movsb
push
je
ret
flds
xchg
aam
int3
std
pop
sbb
jns
stos
pop
pavgw
xor
lahf
test
movsl
sarb
xor
mov
and
loop
sbb
inc
fistpl
jl
sbb
or
mov
or
shll
pop
push
xor
outsl
sub
xor
and
mov
insb
negl
insl
aam
lods
out
fldl
inc
popf
or
push
sahf
dec
or
test
sbb
leave
outsl
or
out
sbb
sub
cmc
and
mov
mov
ljmp
mov
movsl
sub
jbe
add
xchg
lcall
daa
cmp
mov
ss
push
push
mov
mov
sub
lret
movsl
xchg
or
jge
sub
mov
cld
loopne
jg
arpl
shl
bswap
jbe
jne
lods
or
and
es
dec
or
jecxz
adc
sarb
add
xchg
dec
jle
cmp
xlat
mov
cmp
mov
cmp
sbb
xlat
lcall
add
and
mov
lods
sarb
or
dec
das
ljmp
xor
mov
ds
and
xchg
add
dec
popf
popf
cwtl
fs
gs
jle
nop
enter
sub
fisttps
repz
lods
adc
fcoms
call
and
mov
sbb
popf
mov
mov
popa
push
mov
fdivl
cltd
fisubl
lea
dec
push
imul
or
lds
sub
pop
outsb
inc
hlt
test
stos
hlt
daa
popa
mov
adc
lcall
push
cmp
arpl
pop
ret
mov
sub
push
je
and
lea
imul
mov
rcrl
sub
sti
and
and
push
adc
roll
lret
ret
cmpb
scas
mov
and
insb
inc
into
push
jp
rorl
je
sar
push
scas
out
fcoml
scas
lock
add
push
aas
ficomps
inc
mov
push
in
cmp
pop
pusha
pop
pop
cld
push
fucompp
push
bound
cmpsb
push
and
and
sahf
ret
xor
enter
push
mov
and
xchg
jae
inc
push
aas
cmp
jl
adc
pop
lods
lds
cmp
shlb
scas
sbb
mov
fwait
sub
mov
gs
cmp
scas
sbb
pop
push
popa
stc
les
int
sbb
inc
test
rcll
push
cmc
adc
push
jp
jmp
cmp
shr
and
hlt
mov
xchg
or
pushf
xor
pop
push
pop
jmp
out
push
and
push
push
pop
imul
outsl
push
inc
mov
fisubrs
mov
out
pop
pushw
in
jns
popf
xchg
rcll
call
or
mov
loop
clc
xlat
cli
fnstsw
movsb
mov
lea
or
add
sub
jge
fisttpll
xor
lret
cmpl
outsb
nop
icebp
fidivrl
lcall
fmull
and
push
enter
and
dec
dec
stos
in
int3
cwtl
mov
shr
add
pop
pop
fcompl
mov
jmp
negl
dec
push
mov
pop
xlat
sub
sbb
fadds
je
inc
jmp
sbb
pop
fiadds
hlt
ljmp
dec
adc
xchg
lret
mov
out
out
lds
pop
fidivl
pop
dec
push
addr16
repnz
or
ljmp
mov
and
xchg
pop
je
and
and
push
lret
dec
in
push
or
loopne
shll
xor
adc
cmp
add
bound
imul
dec
push
gs
insb
sub
push
pop
leave
ss
mov
jne
out
pop
pop
subb
js
ss
lods
mov
not
daa
xchg
adc
and
lcall
gs
ret
or
aaa
int
push
push
push
xlat
fucom
fwait
insb
push
mov
cli
outsb
mov
hlt
or
loope
mov
push
pop
adcl
in
enter
rcrl
push
scas
arpl
repnz
icebp
push
inc
adc
pop
pop
sbb
fadds
adc
inc
in
mov
test
xor
stos
mov
shr
mov
mov
pop
in
inc
pop
std
fnstcw
loope
dec
mov
pop
out
jmp
pop
mov
lahf
push
subl
cmp
cmp
test
xor
mov
hlt
xchg
mov
popa
dec
dec
sbb
scas
dec
sub
inc
inc
xchg
and
clc
mov
movl
mov
ljmp
mov
sar
pop
mov
aas
sarl
addb
std
pop
adc
fsubrs
adc
and
incb
and
push
pop
adc
aas
in
jb
mov
mov
inc
sub
ljmp
out
push
inc
jo
add
ret
repz
inc
js
push
sub
dec
pop
fisubrl
fisttps
je
adc
test
jbe
pop
and
rcrb
pop
sbb
fs
lea
shlb
imul
adc
mov
repnz
xchg
inc
mov
mov
rcrl
loope
repz
loope
xchg
imul
lcall
mov
ja
cmp
mov
xchg
xlat
sub
mov
scas
push
sbb
cmpsl
push
lods
xchg
or
xchg
mov
mov
cmc
jp
in
rol
clc
mov
dec
mov
mov
movsb
xchg
inc
sub
movb
jge
out
mov
ss
icebp
sahf
xchg
movsl
inc
mov
dec
push
aaa
das
pop
sbb
test
and
push
sbb
ljmp
mov
sbb
xor
popa
test
sub
and
pop
icebp
xchg
rolb
xor
roll
pop
rclb
shll
dec
jl
test
out
lret
loope
xlat
push
and
mov
inc
cmpsl
les
or
add
enter
jmp
fs
or
lea
bound
or
mov
repnz
mov
and
xchg
in
scas
repz
sbb
or
pop
loopne
mov
into
lret
scas
cmpsl
subb
jecxz
test
cmpsb
loope
xchg
jmp
jne
movsl
mov
dec
test
inc
sbb
push
xchg
fdivs
call
mov
add
push
push
or
and
jg
scas
subb
xor
aad
stos
addr16
leave
inc
nop
mov
add
pop
pop
xor
addr16
inc
push
pop
pop
sub
cmp
orl
aam
shl
std
jmp
mov
push
je
pop
xor
lret
lret
dec
push
fiadds
cli
lret
into
daa
sahf
push
xor
mov
aam
idiv
or
and
fidivrs
and
ficomps
in
cmp
dec
cmp
sub
inc
add
cmp
jmp
push
std
mov
mov
sti
in
aad
fwait
sub
je
aas
insl
add
or
aaa
inc
jg
inc
imul
inc
hlt
jmp
bound
sbb
pop
pusha
jge
and
and
rcrl
cs
mov
push
pushf
mov
addr16
jne
mov
jecxz
inc
and
xchg
push
dec
mov
or
add
ljmp
push
push
adc
push
loop
imul
mov
xchg
mov
std
outsb
jmp
mov
les
pop
pop
mov
insb
addr16
sub
in
push
test
xchg
inc
fimuls
and
mov
js
mov
mov
pop
and
arpl
bound
insb
mov
sbb
stos
pop
aaa
sub
bswap
cld
jmp
mov
mov
aas
pushf
lahf
mov
bound
stc
mov
mov
fsts
dec
movsb
fwait
movsl
pushf
xor
xchg
in
in
cwtl
xchg
inc
adc
jle
mov
mov
sub
ss
cmpsb
mov
sbb
sbb
in
imul
add
gs
out
stos
insl
in
jno
cli
xchg
ljmp
movsb
pop
push
paddusw
pop
xchg
fs
lock
bnd
or
ret
outsl
leave
xchg
dec
jnp
adc
dec
pop
sub
int
int3
adcl
fnstsw
lret
or
sti
and
or
xor
notl
das
cmpsl
adc
daa
clc
pop
or
movsl
je
push
push
sub
lret
in
mov
cmc
pop
dec
lds
ss
cmp
fcomps
jg
xchg
adc
cmp
jmp
adc
pop
pop
and
adc
jge
push
and
ss
xchg
out
adc
pop
imull
cmpsb
fsubrs
pop
xor
int
and
in
jle
inc
jo
sub
xor
aaa
sahf
mov
xchg
out
or
and
xor
adc
pop
test
call
sbb
dec
add
rclb
cmpsl
push
inc
popf
cmp
inc
mov
lcall
imul
or
icebp
cmc
rorl
xor
ficomps
loopne
pop
ja
mov
shl
cmc
or
xlat
jecxz
dec
push
push
fwait
sub
add
push
xchg
movsb
mov
pop
test
fiaddl
divl
pop
or
repz
dec
mov
lods
in
aas
dec
hlt
movsb
push
xchg
daa
pop
mov
nop
sbb
ds
aad
push
push
iret
gs
sub
testb
push
sbb
shl
sub
pop
ss
testb
sarl
add
cmp
inc
cmp
std
aas
xchg
jmp
adc
scas
push
xor
fwait
outsl
pushf
stc
outsb
lret
ret
jns
inc
mov
les
inc
bound
mov
jmp
cli
jnp
insl
pusha
dec
mov
xor
mov
std
pop
jno
and
lds
iret
shl
and
out
jp
mov
adc
lea
icebp
xor
mov
ljmp
pop
clc
adc
or
pop
mov
cwtl
mulb
mov
loop
mov
mov
jge
mov
cli
cltd
dec
je
or
insb
cmpsl
dec
mov
iret
lods
adc
mov
push
stos
pop
fistl
pop
mov
inc
mov
out
in
popf
push
arpl
ljmp
pop
sub
shll
push
hlt
clc
mov
out
repz
adc
pop
in
xor
adc
movsb
lret
pop
out
ds
and
sbb
mov
in
ljmp
xchg
xchg
mov
push
outsb
pop
jle
je
rolb
stos
xorb
stos
call
ret
dec
shlb
xchg
push
sub
std
add
sbb
add
dec
push
mov
lds
out
es
insb
out
and
ljmp
imul
int
stos
loop
mov
jge
leave
push
fldl
loopne
lret
xchg
inc
push
ja
pop
adc
insb
cmp
int3
mov
add
adc
xbegin
and
pop
popa
push
in
ljmp
fstps
adcb
sti
jmp
ds
lea
dec
hlt
jecxz
jmp
jno
push
mov
hlt
cmp
sub
mov
loope
ds
loop
inc
shlb
sbb
mov
jns
xlat
pop
test
aaa
ja
adc
clc
pop
cmp
mov
ficoml
xchg
and
das
add
loop
adc
push
push
cmp
xor
sbb
mov
bound
mov
push
stos
int
sub
movsl
pop
xchg
add
adc
stos
inc
dec
push
pushf
stos
dec
xchg
jg
leave
scas
outsb
push
loop
cmp
ret
and
mov
icebp
and
and
mov
add
xor
add
adc
lock
xchg
insb
fmuls
dec
adc
test
and
xchg
andb
cmp
rcrl
xchg
adc
or
jbe
xor
cs
scas
jle
sub
outsb
xchg
ljmp
scas
cmp
adc
pushf
out
sar
xor
push
test
out
call
cmpl
test
mov
shrl
xor
or
or
mov
dec
inc
insb
fcmovu
scas
cmp
push
fidivrs
push
in
xor
pop
andl
test
cmpsb
jg
fisttpll
roll
rcl
pop
aas
aad
jecxz
push
test
pop
lcall
xchg
in
pop
xchg
inc
mov
fstps
inc
test
imul
int3
cltd
shlb
or
jae
mov
pop
xlat
cmp
sbb
pusha
pop
push
arpl
inc
dec
fwait
dec
and
negl
xor
fistl
pop
mov
loop
inc
dec
mov
dec
sub
test
push
cwtl
add
cli
add
test
adc
xor
inc
clc
and
jg
jno
pushf
mov
xchg
pop
in
lahf
insb
mov
stos
scas
mov
xor
dec
jae
inc
sbb
and
sub
repz
sti
mov
jg
clc
mov
into
inc
sbb
lds
lret
jns
sahf
dec
xchg
iret
add
mov
push
fldlg2
mov
dec
xchg
ret
sub
pop
mov
movsb
js
loopne
movsb
xor
loop
jmp
inc
shrl
push
jbe
xor
jl
clc
ss
gs
cmpsl
pop
daa
loope
test
fcomi
hlt
fnsave
xchg
or
subl
out
lods
scas
mov
cld
pop
int
lcall
cmpsb
sbb
hlt
lret
lahf
dec
add
leave
add
insb
fs
and
inc
aad
aad
sbb
inc
add
adc
sub
ffree
xor
iret
jmp
add
in
pop
pop
loop
push
roll
mov
dec
xor
xlat
shl
push
adc
lret
push
lret
pushf
imul
out
inc
cmpb
flds
pop
jg
repnz
scas
mov
negl
shlb
xor
jnp
push
stc
inc
push
xchg
pop
inc
jnp
jl
xchg
sub
push
mov
add
and
sti
icebp
test
push
in
push
and
sti
xchg
pushf
cmp
and
inc
int
sbb
xchg
mov
in
fs
sub
xchg
dec
pop
and
gs
rcll
insb
rolb
fcmovbe
pusha
push
lcallw
adc
insb
fmul
lods
or
out
aas
sub
shll
xchg
xor
nop
sbb
and
sahf
or
inc
pop
lret
prefetcht0
out
jl
pop
scas
add
insb
xchg
or
iret
sub
out
mov
push
cmp
cmp
or
insl
out
in
testb
pop
or
inc
int3
lds
jmp
insl
jle
pop
xchg
xchg
mov
inc
and
arpl
mull
add
push
add
out
mov
stc
dec
dec
pop
paddw
push
dec
pusha
sub
adc
adc
sub
add
sub
fwait
and
outsl
jmp
pop
add
ss
pop
push
mov
nop
push
shrb
cmp
mov
idivl
dec
sub
mov
sbbb
adc
gs
pop
fldl
xchg
mov
outsl
mov
dec
outsl
out
jbe
loope
mov
xlat
testl
dec
ja
sarb
inc
lods
into
enter
xchg
fmul
pushf
sbb
lock
test
enter
push
cmp
push
dec
js
cmp
mov
or
jo
or
xor
mov
dec
les
movsl
fs
scas
cli
frstor
ja
push
or
nop
push
in
jnp
test
pop
push
add
icebp
outsb
sbb
mov
rorb
mov
xlat
stos
shlb
xor
push
pop
nop
adc
int
cmp
push
subl
mov
shl
dec
jg
pop
in
mov
add
or
nop
dec
xchg
xor
outsl
scas
and
shrl
popa
xor
daa
xchg
sbb
icebp
jne
push
cmpsb
adc
push
xor
cltd
rorb
add
push
mov
sub
ds
shll
dec
aam
outsb
ficomps
outsl
dec
pop
mov
int
mov
add
or
jmp
std
call
mov
mov
and
mov
add
jb
leave
jecxz
add
cltd
add
fisubl
pushf
out
cli
leave
loop
push
xchg
cwtl
fnstcw
fnstenv
daa
andb
loope
xlat
jnp
xor
mov
pushl
or
mov
pop
push
faddl
mov
imul
dec
cmp
mov
and
testl
jnp
pushf
inc
or
gs
adcb
daa
test
imul
out
mov
pushf
sub
out
mov
mov
xor
fdiv
sbb
shrb
int3
adc
jns
inc
inc
lret
mov
mov
stc
pop
and
cwtl
les
mov
out
test
cs
mov
push
sub
fists
ficomps
mov
cmp
outsl
lock
movsl
inc
mov
addr16
jp
fnstcw
push
lret
push
out
in
out
push
jbe
push
jno
jle
mov
jbe
adc
sub
push
mov
je
sub
out
in
lock
dec
sbb
shrl
ljmp
ds
cmpsl
sub
xor
push
loope
jns
fldcw
inc
xchg
xchg
xchg
sub
push
lret
scas
popa
es
cmp
push
movsb
test
aas
add
test
and
movsb
outsl
and
into
xor
and
ja
cmp
pcmpgtw
xchg
jle
adc
out
popa
call
mov
inc
cmpsb
vmovhps
inc
or
loopne
aad
mov
pop
cli
daa
cmp
pop
icebp
dec
mov
mov
jmp
dec
call
cmp
add
sbbb
cwtl
adc
mov
lcall
loope
adc
cli
cmc
rclb
movsl
push
push
mov
xchg
pop
mov
nop
rcrb
mov
lods
scas
jbe
add
sbb
jae
lock
testl
sub
lcall
test
shll
out
inc
dec
add
sbb
push
lcall
into
or
outsb
stos
dec
pop
jns
sahf
cld
shlb
das
xor
push
lods
and
lret
add
xor
std
aam
das
pushf
add
inc
and
pop
push
fsts
pop
pop
cmpsb
lahf
push
xor
sbb
dec
add
cmpsl
pop
lret
mov
jge
popf
xchg
cli
ljmp
pop
inc
mov
cmpsb
mov
fsubr
decb
notb
mov
ljmp
push
push
sarb
jbe
rolw
cmc
daa
xor
inc
idivb
icebp
dec
lds
dec
mov
mov
call
aad
mov
or
push
cmp
and
dec
clc
mov
popa
mov
fs
fstpt
add
xchg
add
icebp
mov
xchg
cmpsb
iret
in
leave
mov
or
xchg
inc
jecxz
call
imul
divb
ljmp
mov
mov
fsubrs
sarb
cmp
mov
stos
aam
mov
fs
popf
pop
cmp
out
in
mov
inc
arpl
and
sahf
test
dec
cli
jmp
ja
hlt
lea
add
sbb
fwait
xchg
pop
lds
ja
mov
clc
cmp
movsb
dec
rol
movsl
cmp
or
outsl
or
lods
addb
mov
jae
fistps
dec
loop
lcall
rorl
cltd
insb
mov
or
lock
arpl
mov
inc
cld
loopne
pushf
jae
call
jb
push
mov
stos
mov
adc
jp
nop
fiaddl
and
insl
out
ss
inc
fwait
int3
push
jle
lods
movsl
dec
pop
pop
mov
mov
add
leave
aad
and
lar
in
inc
jge
mov
xor
sub
pop
subb
aaa
repz
daa
or
mov
xchg
push
cmp
int3
pop
mov
sub
adc
push
xor
or
xor
incl
idiv
mov
jno
adc
cmp
mov
fwait
adc
mov
mov
inc
shlb
mov
push
sbb
test
pop
push
mov
hlt
jecxz
push
sbb
mov
sbb
jae
les
mov
out
nop
in
dec
push
push
sub
aaa
hlt
outsl
lcall
fwait
mov
out
xchg
dec
mov
ret
loope
das
dec
xor
int
inc
mov
loop
mov
scas
arpl
fists
dec
arpl
inc
stc
fdivl
aad
shrb
or
bound
xabort
stos
mov
dec
jbe
xor
pop
loope
pop
in
mov
aad
negl
inc
mov
adc
push
jne
mov
imul
in
mov
add
sub
push
xlat
mov
mov
clc
inc
pop
fstps
cmp
push
pop
inc
imul
lds
cmp
push
jb
cld
mov
inc
aas
dec
cmp
lea
jg
lahf
imul
sbb
sbb
out
ja
push
test
dec
aas
mov
fadds
pop
in
mov
mov
jge
mov
lods
sbb
push
adc
ja
and
mov
mov
iret
lds
fbstp
xchg
and
mov
xchg
sub
xchg
fwait
xchg
lock
mov
push
mov
sub
push
sub
shlb
push
loop
mov
insb
inc
sub
push
jno
daa
in
push
cmp
mov
adc
dec
push
aad
or
xchg
test
add
inc
push
test
jne
ficompl
iret
ss
fdivrl
dec
nop
lds
arpl
pop
xor
fmuls
pop
sbb
cmp
inc
adc
mov
jecxz
cltd
popa
pop
clc
ljmp
ret
mov
and
nop
cld
jp
add
popf
test
xchg
push
push
ret
jne
jo
ljmp
xor
cltd
or
imul
fcompl
fcmovnu
xchg
add
mov
xchg
mov
inc
mov
dec
addr16
dec
xchg
enter
xor
inc
lahf
xor
push
pop
push
push
jns
ficomps
lret
aaa
test
cld
and
aad
jmp
negb
insl
jbe
mov
arpl
pop
push
or
cmpsb
mov
dec
push
ja
dec
cld
das
iret
adc
cltd
mov
cltd
aam
not
jge
shll
fcmovu
sbb
jp
mov
lds
movsl
lods
jae
jb
hlt
movsb
mov
loope
mov
sub
clc
lods
out
push
sub
es
repz
gs
stos
scas
inc
cli
mov
addr16
fisttpl
jl
lahf
jmp
or
and
stos
xor
push
fidivl
fdivr
xchg
xor
icebp
mov
inc
cmp
push
repz
incl
pop
lret
rcll
bound
sbb
pusha
inc
inc
cmp
mov
cmpsb
dec
mov
mov
shrb
cmp
xor
movl
loop
test
mov
stos
mov
out
push
cmp
or
and
add
test
test
dec
xchg
aam
mov
lcall
out
xchg
xchg
test
cs
sahf
push
mov
dec
push
pop
test
out
mov
jl
clc
jae
stc
leave
jg
imul
pop
push
loopne
rorl
sub
add
jo
adc
adc
xchg
out
pop
sbb
mov
mov
out
pop
jmp
xchg
loopne
sub
and
das
std
or
ljmp
fucomp
pop
pop
cld
sub
add
fyl2x
mov
cmp
idivb
dec
cmp
pop
adc
jns
lds
mov
and
mov
adc
xor
mov
inc
leave
jae
sub
cwtl
push
push
shlb
sub
lds
sub
test
mov
lcall
addr16
aas
xor
stos
dec
pop
mov
xorps
aaa
pop
arpl
loope
dec
fwait
data16
or
dec
cmp
aas
sahf
nop
mov
test
push
shr
test
daa
push
push
cs
test
adc
outsl
xorb
loop
xchg
lret
divl
jmp
jnp
std
je
or
and
repnz
pop
sub
push
pop
jae
jb
imul
outsb
xchg
inc
mov
dec
out
shll
push
cmpsb
fwait
outsl
pushf
popf
cmp
cld
loope
subl
test
int
sub
mov
adc
cmc
jecxz
add
stc
ja
mov
push
jo
loope
ret
cmp
push
mov
mov
jo
push
das
aas
std
add
jbe
adc
jo
xlat
cs
dec
lds
out
pop
mov
lahf
in
dec
push
jmp
rolb
sbb
pusha
jb
les
xor
pop
popf
fisubl
cmp
lret
lods
cld
xor
add
mov
popf
sub
xor
jo
into
repz
into
decl
fsts
or
mov
push
cwtl
mov
mov
xor
jne
inc
or
fwait
sbb
adc
add
adc
inc
icebp
scas
xchg
sub
inc
sub
ds
inc
cmp
push
xor
jl
in
mov
out
mov
call
repnz
dec
mov
pusha
std
pop
scas
lcall
xor
cwtl
xchg
es
ret
shll
clc
lea
addr16
mov
into
or
sub
lods
mov
adc
mov
jae
aam
dec
inc
test
bnd
jb
and
addr16
mov
popf
push
dec
shll
xlat
ljmp
hlt
and
mov
js
iret
or
hlt
adc
inc
adc
ds
adc
sub
mov
push
inc
mov
adcl
pop
push
inc
lcall
add
adc
pop
loop
fisttpl
out
aad
leave
push
jb
ja
sbb
das
test
ljmp
pushf
mov
movsb
sub
test
dec
jae
in
iret
cmc
mov
and
das
out
into
jg
xchg
mov
or
or
std
add
fistpl
push
bound
aam
bnd
inc
ret
adc
scas
pop
insb
mov
xor
pop
or
cmpsl
enter
idivb
mov
mov
xor
push
pop
clc
aad
ljmp
fadd
sarb
jmp
jne
test
les
ja
nop
insb
or
xchg
shlb
sub
scas
dec
dec
mov
mov
pop
lods
ret
fnstenv
cmpl
xchg
dec
mov
pop
inc
cmpsb
test
cli
xor
sub
fidivs
mov
sub
dec
arpl
leave
lcall
and
and
mov
mov
or
mov
xor
add
adc
ficompl
cmp
clc
in
imul
adc
das
pop
lret
adc
cmp
clc
jl
or
adc
inc
lret
mov
fidivrl
bound
imul
outsb
mov
imulb
fwait
mov
mov
scas
jmp
cmpsl
filds
les
mov
cmpsb
jmp
in
add
hlt
mov
mov
push
xchg
in
push
scas
cwtl
jno
mov
dec
orl
jp
mov
aas
dec
and
mov
and
sub
sub
gs
sub
lods
dec
jnp
xchg
cmpl
push
pop
rcrb
inc
andb
lods
and
popf
outsb
xor
mov
inc
jbe
jo
outsl
insl
lret
loope
pop
in
lret
lods
loop
jg
and
push
iret
jmp
pop
push
adc
jg
mov
hlt
mov
mov
lods
push
push
xchg
les
loopne
adc
test
xor
inc
leave
mov
imul
sub
js
fwait
mov
cmc
mov
test
cld
lret
cmp
std
cmp
jl
popf
test
scas
fs
or
cmp
mov
mov
push
daa
mov
fstps
xchg
mov
or
sub
xor
test
pushf
je
add
cmc
lock
jo
das
add
sbb
addr16
xchg
and
xor
icebp
in
and
lahf
test
adc
rep
test
xor
js
imul
cmp
xchg
sub
inc
fcmovne
or
addl
jo
push
mov
and
push
jbe
ficoms
cmc
aad
xor
adc
cmp
and
js
in
or
js
subb
xor
cwtl
test
mov
mov
sub
shl
dec
dec
xorb
lcall
shlw
jno
mov
jae
jno
jmp
mov
stos
data16
fldcw
push
cld
nop
cmpsl
insl
jnp
jbe
fistpl
sbb
neg
cld
mov
and
dec
hlt
adc
sbb
int3
mov
pop
sbb
or
mov
push
scas
loop
inc
ljmp
insl
rcrl
in
xchg
lock
dec
fidivrs
fisubrs
hlt
push
cs
and
add
mov
lahf
jge
sub
pop
sahf
sbb
inc
cmp
add
xor
scas
and
xor
sbbb
cmp
cmp
out
cld
cltd
push
mov
fldt
mov
lret
insl
inc
cmp
xchg
lods
jmp
pop
pop
inc
gs
mov
adc
jbe
cmpsb
xchg
cmpsb
stos
mov
sbb
jmp
es
push
adc
inc
dec
in
cmp
ss
call
push
test
and
push
aas
push
mov
sub
sub
cld
jns
push
push
mov
jo
push
les
jle
testl
test
cltd
cmpsb
sti
aam
adc
daa
in
rep
xchg
mov
aaa
icebp
jg
ja
pop
subb
cmc
xor
jp
fists
pop
cmpsl
add
inc
insl
push
jle
dec
xchg
add
xor
jmp
xchg
xor
or
mov
int3
sbb
fsub
mov
data16
push
into
jmp
push
push
lods
pop
or
rorb
lret
inc
sti
mov
out
fdivp
ja
fbld
out
add
in
jae
pop
iret
xchg
dec
ret
ljmpw
dec
fidivs
jg
aam
push
dec
cmpsl
pop
jns
fs
jle
rolb
fcomps
incl
lods
test
mov
outsl
in
cmp
lods
sub
shlb
lea
lahf
iret
or
fs
cmp
sbb
cwtl
add
mov
fldenv
test
scas
add
cmpsb
in
fdiv
pop
fisubs
mov
jno
arpl
aas
add
stos
dec
mov
push
mov
rcrl
dec
test
mov
nop
fcomps
jbe
inc
push
sbb
push
arpl
xor
sbb
jl
mov
icebp
and
sti
repz
aas
xchg
lods
or
cmp
scas
repnz
xchg
ljmp
jecxz
testl
or
lcall
in
and
rolb
pop
push
fisubl
test
inc
mov
pop
pop
xor
push
ljmp
xchg
pusha
neg
dec
cwtl
shrb
movsl
adc
stos
subb
cs
or
daa
shl
cmpsb
scas
shlb
and
or
mov
lods
inc
cmp
dec
lcall
in
pop
movsl
sti
subb
cmc
add
push
or
int
sub
out
adcb
loop
pop
jnp
dec
movb
test
lods
adc
add
xchg
push
pop
lods
jle
ret
out
push
imul
mov
jb
int3
enter
adc
pop
shlb
insl
leave
add
pop
inc
ret
stc
jb
es
jp
scas
shr
pop
fnstcw
data16
mov
aaa
mov
xchg
dec
sbb
and
xchg
or
js
or
mov
into
inc
arpl
xor
jl
adc
ror
xor
std
xchg
aas
xchg
pop
sbb
mov
push
loope
leave
adc
lret
lret
mov
cmp
addr16
dec
fcmovnbe
std
cli
outsb
subl
push
fnsave
cmp
xor
xchg
cmpsl
jge
mov
mov
pop
repz
int3
sahf
push
scas
dec
mov
sub
sub
xchg
mov
inc
test
out
fisubrs
dec
inc
cmc
and
pop
stc
mov
mov
cmp
ret
pusha
cmp
divb
addb
xor
push
adc
mov
mov
sbb
lds
les
mov
imul
shrb
adc
pop
and
lret
add
fwait
stos
gs
mov
repz
mov
xchg
push
out
outsl
jnp
loop
jp
mov
and
dec
bswap
and
and
sti
dec
cmc
arpl
push
data16
dec
out
pop
movsl
sbb
std
or
lret
sahf
sti
mov
clc
xchg
adc
call
push
stos
out
mov
inc
jmp
mov
xchg
add
setb
jb
pop
mov
gs
add
loopne
xor
cmpsb
sub
lods
lds
jb
push
cs
push
repnz
adc
or
sub
or
xor
insl
lcall
mov
push
jae
outsl
imul
xchg
mov
gs
pop
xor
sbb
fs
xor
enter
mov
ljmp
jne
sbb
lret
cs
out
xchg
sbb
out
pop
and
outsb
jo
not
inc
lahf
imulb
sar
sbb
sub
lret
add
je
fldcw
xor
lea
fbstp
adc
jecxz
leave
cltd
inc
lcall
xchg
int
rolb
xchg
jecxz
inc
push
addr16
or
jnp
cmpsl
cltd
mov
test
aad
mov
mov
push
out
mov
pop
sahf
mov
adc
test
mov
xchg
and
sarb
loope
ret
mov
xchg
xorl
int3
ljmp
xchg
cmp
js
xor
mov
xchg
cmp
nop
push
mov
inc
dec
fisubrs
sbb
pop
mov
lock
xor
adc
inc
pop
jns
dec
mov
cmp
out
jmp
xor
jnp
ficoml
add
add
dec
mov
in
or
cmpsb
lcall
lar
and
repnz
js
leave
sbb
xchg
xchg
nop
int
xor
imul
shlb
fcoml
shrb
add
mov
sbb
gs
push
xchg
push
xlat
cmc
push
adc
xor
insb
imul
xchg
pop
or
out
mov
out
popa
dec
mov
jbe
adcb
stos
pop
fmul
cmp
jo
xchg
sahf
or
pop
jns
add
push
lahf
aad
adc
or
mov
iret
std
test
cwtl
mov
in
mov
rorb
jg
addr16
add
ret
je
cmp
or
adc
cs
in
jg
pusha
loopne
push
xor
les
sti
pop
or
xor
mov
loop
mov
outsb
mov
insl
jp
pop
orb
sti
mov
mov
bound
adc
sbb
lahf
cmc
aaa
cmpsb
and
inc
xchg
lcall
jmp
nop
fisttps
jb
subl
cmpsl
cmp
ss
movsl
sub
daa
push
push
test
mov
lock
les
dec
push
lcall
test
sub
fdivrs
icebp
adc
daa
sub
adc
sbb
test
adc
int3
xor
addb
jp
inc
add
repnz
and
push
add
pusha
clc
pop
scas
aas
loopne
fs
loope
pop
cmp
decb
test
xchg
inc
aas
inc
cmpsb
and
or
pushf
or
shl
cld
nop
lods
arpl
movsl
movsb
ret
mov
mov
sub
movsl
leave
inc
fmul
jno
mov
scas
adc
ret
insb
push
in
push
cmp
aam
sbb
push
movsl
sbb
jl
lret
dec
fwait
sbb
sub
push
sbb
xchg
sbb
std
xor
or
std
movsb
int3
loopnew
loop
jno
and
fs
shrl
mov
mov
add
sub
sahf
pop
mov
cs
roll
cmc
pop
data16
cmp
xor
inc
mulps
mov
fcompl
pop
mov
lret
dec
inc
jo
shl
or
pushl
add
movsl
fsubl
cld
iret
pop
sti
fsubrs
lea
ljmp
into
push
in
cmpsl
jle
loop
xor
fidivl
xor
dec
dec
pop
inc
into
jp
sbb
xchg
movsb
pop
or
pop
aaa
push
jmp
inc
div
negl
popa
pop
xor
aas
movsb
mov
int3
sbb
add
xor
sbb
xor
cs
out
pop
mov
inc
mov
xor
iret
jne
sub
cmp
repnz
ss
inc
stc
idivl
clc
mov
mov
sub
out
out
mov
inc
std
xchg
cmp
adc
mov
outsb
nop
push
dec
xchg
stc
xorb
movsb
and
repnz
adc
shll
scas
lahf
clc
mov
lea
pop
and
dec
pop
cmp
addr16
inc
arpl
mov
adc
fsub
scas
pop
mov
imul
cmp
pop
sub
push
cmp
in
mov
mov
and
repnz
adc
cmp
insb
mov
jmp
push
add
push
mov
pop
popf
arpl
cmpsb
inc
mov
repnz
xor
ja
addr16
in
fcoml
loopne
sub
push
outsb
rorl
mov
int
js
fcoml
sbb
mov
imul
into
std
enter
hlt
clc
cli
jnp
pushf
fstl
addl
mov
inc
aaa
arpl
push
pop
jl
xchg
dec
fmull
scas
loopne
int3
je
sub
pop
nop
daa
or
xchg
bound
or
leave
mulb
pop
rep
pop
push
sbb
mov
add
xor
mov
out
adc
test
push
add
cmc
xchg
mov
dec
in
cwtl
mov
sarl
addb
int
aaa
loop
dec
cwtl
pusha
sub
in
cwtl
and
inc
mov
lock
xchg
cmp
and
mov
pop
testl
xlat
ljmp
add
sar
int3
sti
movb
add
mov
jmp
inc
test
mov
inc
jl
push
icebp
cmc
pop
mov
je
enter
push
pop
push
xor
nop
lcall
jbe
sub
data16
xor
in
and
fucomi
sub
cmp
dec
mov
or
mov
cmp
out
imul
mov
movb
movsb
sbb
add
orb
dec
ja
scas
out
jg
test
ret
dec
pop
xchg
lods
sbb
xchg
dec
xlat
out
push
cmp
sub
loope
dec
cli
test
loopne
cmp
sub
pop
mov
push
imul
mov
pop
jmp
loopne
push
lods
push
imull
adc
fs
lret
out
mov
sbb
aas
mov
jnp
loope
mov
xlat
mov
mov
popa
pop
mov
xchg
mov
fcmovnbe
iret
pop
cmpsb
scas
inc
mov
aam
push
test
iret
dec
cmp
icebp
mov
jo
es
pop
daa
mov
sub
insb
sub
pop
mov
sub
lahf
test
ljmp
sub
pop
pushf
push
cmc
jnp
nop
test
aaa
clc
sub
pop
mov
shlb
nop
loope
imul
iret
push
mov
cmp
sbb
dec
addr16
shrl
testb
mov
inc
xchg
std
dec
clc
dec
adc
xlat
or
bound
jne
int3
adcl
insl
aaa
mov
inc
mov
cli
push
push
push
gs
ja
movsl
pop
push
addr16
nop
add
jg
pop
cmp
movsb
arpl
mov
ljmp
mov
xchg
out
arpl
mov
mov
lret
repnz
iret
xchg
and
pop
repz
leave
adc
jl
xchg
push
adc
ljmp
ja
xor
pop
and
mov
sub
sbb
in
jnp
or
movsb
dec
add
inc
mov
ret
enter
and
into
jmp
lds
mov
insl
cmp
pop
sbb
ret
adc
nop
in
push
cmp
repnz
push
push
xchg
mov
dec
push
add
iret
loope
jp
iret
mov
ljmp
loopne
sahf
mov
mov
mov
xchg
and
cld
into
sti
adc
movsb
sbb
daa
rorl
fdecstp
lock
push
inc
push
add
add
sub
xor
xlat
xchg
xchg
dec
out
jle
mov
bound
ljmp
fwait
jo
mov
mov
inc
leave
aaa
mul
addr16
cmp
aam
dec
cmc
cmp
lods
idivb
inc
mov
push
inc
mov
lods
test
loop
adc
xor
subb
mov
outsb
pop
stos
lcall
xchg
pop
fscale
je
cmp
out
push
dec
out
imulb
dec
sub
xchg
mov
xchg
stos
push
or
dec
pop
pop
adc
dec
cli
mov
cmp
jle
xor
jmp
sub
jg
repnz
imul
inc
or
mov
jecxz
pop
out
sub
sbb
push
std
add
ret
rcl
lods
pop
lcall
xor
shrl
lret
jbe
pop
sahf
ret
jb
xor
or
lcall
scas
lea
imul
fs
mov
stc
fidivs
push
scas
bound
jl
mov
icebp
mov
inc
sub
aam
mov
out
xchg
cmp
jge
fisubrl
sahf
sahf
scas
push
add
addr16
gs
mov
lret
test
cltd
xchg
iret
je
xchg
daa
inc
jmp
mov
in
mov
jae
hlt
mov
ficoms
shrl
test
inc
rcll
mov
outsb
in
loope
sarl
daa
cli
adc
pop
fnstcw
ret
fnstenv
inc
in
and
push
add
lods
xor
xlat
and
mov
sti
shrb
push
mov
sub
int
rcrb
inc
out
repz
data16
call
cmp
push
push
paddusb
pop
xchg
cwtl
push
mov
dec
adc
cli
xorb
lock
cltd
pop
xchg
mov
aam
mov
adc
jmp
sbb
jp
cld
out
cmpl
int3
mov
out
sub
pop
pusha
scas
dec
imul
test
push
aad
cmp
mov
add
xlat
mov
push
cmp
jne
jl
insl
push
in
or
rcrl
mov
aaa
add
xchg
cs
arpl
ret
sahf
jle
push
movsl
jp
cmp
shll
mov
adc
stos
divl
xchg
mov
insb
imul
push
jle
inc
lcall
push
or
mov
icebp
pop
mov
ljmp
inc
pop
aas
mov
subb
mov
jmp
and
mov
les
jae
imul
xchg
aad
jp
pop
cltd
mull
cmp
and
add
loopne
push
sbb
mov
insl
push
ss
repnz
jne
or
mov
cmpsb
adc
jmp
xlat
push
les
cli
jg
or
sub
gs
fstpt
xchg
fsub
push
add
pop
aam
adc
pop
orl
push
xchg
hlt
and
dec
cmp
fs
jnp
clc
cmp
jne
sti
into
jns
sub
or
sbb
dec
lret
subb
xor
scas
jmp
mov
mov
out
stc
add
repnz
rcrl
sub
fwait
dec
hlt
xchg
out
dec
cmp
movsl
imul
ret
movsb
and
push
sbb
mov
xor
jmp
bound
push
je
mov
xlat
arpl
adc
sub
stos
repnz
jo
out
data16
movsb
adc
push
cmp
xchg
pushf
das
test
adc
cmp
mov
add
cwtl
insb
or
test
jo
std
jo
nop
inc
xchg
mov
push
shll
mov
push
ljmp
xorl
inc
arpl
and
cmc
adc
mov
jno
and
sub
xchg
xchg
adc
xchg
jl
fcmovnb
scas
cmpsb
cmp
loopne
mov
jle
add
cmp
pop
mov
rolb
daa
popf
mov
mov
cltd
rorl
sbb
ljmp
xchg
adc
pop
stc
sti
aad
inc
leave
xor
push
cmc
lods
inc
movsb
inc
or
sbb
cmp
pop
es
lds
or
cld
call
sbb
sbb
int
mov
xchg
xor
cmp
adc
test
cmp
mov
pop
lea
or
jle
dec
bound
imul
mov
popf
add
pop
int
pushf
and
lea
les
fs
mov
lock
fwait
dec
in
pop
cmpsl
cmp
aad
push
fcomp
inc
ret
pop
push
fsubrs
nop
mov
push
out
ror
dec
mov
push
cli
jl
jmp
dec
data16
lods
ja
mov
into
pop
push
pop
movsl
jmp
sub
inc
lret
xchg
lea
out
push
cmpsb
test
adc
scas
pop
mov
sub
cmp
cmp
xor
mov
mov
adcb
test
loope
mov
es
das
pop
inc
pop
outsb
push
shrl
cld
xor
imul
ficoms
imul
push
add
or
lods
test
int3
shrl
mov
dec
in
add
add
mov
sub
cmp
popl
add
jo
dec
cltd
and
in
cs
xlat
nop
pop
dec
xchg
xlat
and
pop
out
cld
xchg
lcall
dec
cli
pop
test
xor
jle
mov
sub
mov
jecxz
dec
outsb
push
dec
sti
xchg
jg
cmp
lea
jge
cmp
mov
rcrl
dec
cmp
jge
dec
adc
lret
mov
or
add
cmp
xor
or
mov
cmpsb
lret
es
mul
fsubl
dec
ret
adcb
movsl
mov
jg
fisubs
insb
jns
or
adc
push
jno
repnz
mov
lock
jns
es
sub
jecxz
jg
mov
out
or
das
lcall
xlat
cmp
pop
testb
push
nop
ljmp
mov
pop
push
push
or
sbb
xchg
xor
rclb
jecxz
lret
icebp
mov
mov
movsb
sub
fcoml
das
cmp
cmp
mov
push
mov
mov
arpl
push
pop
outsl
pop
pop
stos
ret
cmpsb
xchg
test
stos
xor
mov
push
dec
or
sbb
clc
xlat
outsb
out
cwtl
sbb
rclb
movsl
inc
loope
leave
lock
lods
cwtl
mov
movsl
popa
jno
arpl
push
inc
mov
fistpll
xchg
xor
add
jmp
and
fdiv
mov
incb
jecxz
push
adc
mov
or
xchg
mov
stos
sub
jnp
in
lea
sbb
ds
arpl
push
out
or
push
fs
jo
mov
mov
inc
stc
popa
add
push
add
lea
hlt
test
ret
mov
sub
mov
pop
stos
lret
and
cmp
and
in
push
mov
loop
nop
lds
insl
xchg
lea
pop
xor
xor
test
leave
inc
dec
xchg
xor
lret
pop
xchg
outsb
xor
out
adc
addr16
dec
and
cmpl
adc
jno
inc
test
aas
in
fcmovnb
bound
negb
adc
push
jnp
dec
movsb
cmp
fdiv
xchg
lret
sub
add
gs
sbb
and
rcl
mov
mov
push
jg
scas
je
rcll
les
sbb
sub
or
bound
mov
mov
es
lret
div
mov
pop
jns
push
sbbb
xor
sub
xchg
fnstcw
rolb
stos
lret
dec
cmp
adc
shll
or
incl
sub
cwtl
rorb
cmp
pop
call
aaa
les
movsl
leave
pop
mov
inc
pop
inc
jno
cmp
enter
shlb
gs
jmp
cmc
clc
xor
jl
mov
scas
shll
mov
mov
aad
dec
insl
je
stos
stos
ss
rcr
pusha
aas
inc
inc
data16
clc
ret
add
lods
pusha
pop
cmpsl
xlat
xor
pop
dec
and
cmp
mov
or
imul
rcrl
subl
insl
cmc
adc
and
std
cmpsb
sbb
add
push
cld
push
idivb
dec
mov
mov
fldl
adc
nop
sbb
sbb
sub
fdivr
xchg
into
pushf
sub
mov
pop
inc
xchg
test
adc
iret
cmpsl
scas
es
dec
mov
shll
test
lods
movsb
pusha
jbe
inc
inc
mov
inc
mov
xor
rorl
cmp
ljmp
mov
pop
mov
fnstenv
sub
leave
fcmovne
mov
incb
iret
and
roll
inc
sub
jno
cmc
pop
pop
movntq
out
jl
add
cmp
shr
cmp
mov
mov
shll
xchg
mov
test
aas
ljmp
adc
imul
out
jp
mov
aaa
push
sub
or
push
mov
pop
adc
mov
mov
jecxz
mov
ljmp
cmp
xorl
js
dec
jo
test
add
sub
xor
xchg
mov
std
fsts
mov
stos
or
xchg
jmp
and
push
cmp
aas
ljmp
incl
out
popa
or
out
jge
mov
gs
in
mov
xchg
popf
test
adcb
mov
ss
fsubl
cmpsb
jl
or
stos
lret
mov
testb
inc
cmp
shl
repz
xchg
mov
mov
jge,pn
pop
jne
pop
sub
sbb
psubsb
sub
icebp
jmp
push
sbb
push
scas
cwtl
push
jbe
in
lret
or
mov
xchg
pop
sbb
ficoms
test
int
or
mov
push
das
mov
sbb
dec
nop
imul
inc
mov
pop
popa
mov
dec
dec
mov
xchg
and
and
roll
cmp
lcall
jne
pusha
iret
push
mov
lret
and
sub
insl
add
enter
repz
mov
and
xchg
test
push
fdivrl
mov
dec
push
mov
movsb
outsl
hlt
xchg
pop
imul
xchg
and
bswap
lret
movsl
jae
mov
fwait
sub
shrb
call
mulb
xlat
lds
test
adc
or
cmp
and
mov
iret
add
loope
das
sbb
pop
pop
inc
mov
in
jb
orl
nop
and
outsb
mov
insl
popf
rol
lea
test
jl
pop
fwait
aad
in
stos
movsl
push
leave
sub
adc
fsubl
mov
roll
les
out
cmp
cmc
mov
in
imul
jp
xlat
flds
inc
xor
test
jmp
out
outsl
push
fs
cmp
or
int3
test
cltd
in
inc
out
push
jp
jae
xor
fsubrs
mov
sbb
mov
xor
push
and
test
insl
cmp
add
cwtl
loop
popf
cwtl
dec
rcrl
mov
jle
pop
jle
cmp
dec
out
fisttpl
insl
es
lods
mov
cwtl
ja
fistl
jne
lock
ret
ljmp
and
aam
push
or
and
iret
fprem
repnz
clc
fnsave
push
mov
lds
cmp
adc
dec
ret
mov
xor
into
pop
adcb
aam
cmc
pop
inc
incb
push
pop
push
test
cld
inc
ret
xchg
xorb
rol
push
cltd
push
shr
adc
ret
push
test
outsl
push
add
cmp
ja
pop
jae
mov
inc
outsl
xor
test
sbb
add
gs
add
inc
repnz
push
adc
in
sahf
aam
sub
adc
pop
cmc
jb
add
test
cmp
gs
mov
sbbb
test
movsl
jecxz
vaddsubpd
out
add
cwtl
sub
xor
mov
jno
icebp
test
es
or
mov
inc
sbb
sbbb
pop
xor
outsb
ret
cmp
xor
jg
sub
inc
push
lcall
mulb
ds
mov
xchg
push
das
adc
mov
shll
dec
inc
in
mov
jecxz
pop
push
mov
adc
testl
repz
cli
push
xchg
xchg
cmp
ret
into
aaa
shll
mov
pop
sbb
popa
pop
stos
sbb
fwait
hlt
stos
mov
xor
data16
enter
jo
push
pop
push
xchg
imul
inc
ss
out
fisubrl
out
repz
outsl
in
cmp
sbb
xchg
or
or
sbb
cmpsb
gs
push
sbb
jl
aaa
cmc
rcr
sarl
adc
jle
sarl
xor
push
pop
xchg
fmul
dec
mov
cld
mov
mov
sbb
lahf
xlat
cmp
sub
in
or
cli
repz
dec
dec
call
adc
cmp
inc
roll
cmp
xor
fidivs
fstps
stc
sub
xchg
ss
xchg
cs
mov
sbb
or
pop
in
push
iret
push
aas
or
cmp
fisubs
jecxz
xchg
mov
mov
in
jecxz
xor
inc
xor
add
scas
jp
shlb
inc
inc
inc
mov
fcmovne
les
or
adc
stc
cmc
dec
jmp
add
or
movsb
xor
loopne
xchg
repz
mov
lret
adc
int3
pop
leave
in
and
push
cwtl
fstl
aas
dec
push
and
or
and
je
add
dec
xor
push
xchg
mov
outsb
movsl
cs
bnd
into
ljmp
sbb
popa
aas
mov
jle
inc
leave
ret
pusha
bound
dec
data16
addr16
sub
mov
ja
or
pop
and
std
push
mov
mov
add
pop
add
daa
fsub
mov
pop
in
stos
idivb
fwait
clc
add
push
or
loope
bound
cmp
shrl
sbb
movsl
inc
push
inc
mov
stos
jmp
fdivp
dec
adc
adc
push
add
add
movsb
sbb
push
dec
mov
repz
cmpsl
add
xorb
lahf
ja
dec
fisubl
mov
pop
jbe
pushf
lahf
dec
shrb
imul
push
adc
add
lret
fcomp
call
sbb
das
enter
jecxz
inc
sub
jb
add
cmp
insl
xor
push
insl
push
inc
cmp
jne
sbb
fmul
sub
inc
insl
out
xchg
int
adc
adc
mov
dec
mov
aaa
ja
rolb
bound
addr16
dec
xor
add
inc
mov
sub
in
es
dec
or
xchg
push
jnp
movsb
jns
push
sbb
pushf
jb
mulb
or
rorl
arpl
push
je
push
cmp
test
movsb
jg
pop
or
push
out
mov
push
or
hlt
rolb
sub
out
sbb
test
pop
ret
jb
push
enter
add
mov
dec
pop
jae
je
repnz
push
fmull
mov
je
sbb
cwtl
dec
ret
cld
xor
add
leave
testb
mov
jnp
dec
sbb
pop
push
adc
repnz
sarl
hlt
int3
inc
nop
fmull
jb
xor
add
jl
popf
or
js
ss
sbbb
inc
sub
pop
mov
test
ljmp
pop
xor
hlt
push
mov
mov
clc
jp
jb
and
dec
leave
loopne
and
adc
pop
pop
sub
cld
pop
jge
xchg
pop
cwtl
dec
cmp
push
lds
ss
mov
test
and
in
shll
test
mov
icebp
cmp
jnp
cli
adc
repnz
mov
xor
mov
push
inc
ljmp
insb
aas
pop
xlat
mov
cmp
outsb
sub
pop
out
cmpsb
daa
adc
jnp
xchg
test
sub
xor
ja
push
je
les
fdivrl
pop
in
push
hlt
xlat
sub
add
in
xor
incb
cld
es
sub
dec
fisubs
cmp
inc
jbe
sbb
pop
lahf
lock
push
jae
test
imul
mov
inc
in
add
push
pop
mov
pop
adc
dec
fisubrl
movsl
dec
mov
scas
orb
dec
mov
loope
sbb
mov
test
nop
lret
and
adcb
dec
dec
jl
sub
and
movsb
xor
cmpsb
into
pop
push
imul
movsl
popa
aaa
inc
jae
push
popf
mov
dec
pop
mov
mov
inc
xchg
mov
push
xor
stc
inc
mov
add
insb
pushf
pop
inc
dec
mov
lret
cmpsl
jmp
push
xchg
cmp
sbb
mov
cmp
rcrb
cmp
fwait
ljmp
mov
mov
es
cmp
pop
xor
push
jle
scas
xchg
dec
mov
iret
movsl
or
adc
int
add
xchg
jge
orps
push
cmp
leave
repz
rcll
add
cmp
xchg
cmp
adc
in
mov
mov
cli
movsb
mov
sub
and
jbe
mov
cli
jo
sub
and
testl
arpl
das
sbb
xor
movsb
dec
fwait
shll
xchg
test
fwait
and
js
shll
pusha
xchg
push
inc
sub
xor
add
push
or
cmp
sub
loop
clc
pop
add
fcmovnu
xor
fistps
leave
adc
push
push
aaa
cmp
mov
xchg
mov
push
push
lods
stos
push
jnp
mov
adc
mov
xchg
push
stos
fs
xchg
sbbl
ret
test
or
push
push
lea
jb
add
mov
cmc
fistps
sub
repnz
adc
push
mov
out
or
add
adc
stos
es
cmp
ret
sbb
inc
pop
fs
and
jns
imul
xchg
mov
int
dec
jno
outsl
jns
mov
and
cmp
lds
inc
push
roll
pop
sub
jl
insl
in
enter
push
lock
sbb
rcr
push
cmpsb
loopne
pop
cmp
ret
sbb
push
inc
sbb
call
push
cli
inc
pop
repnz
adc
push
test
and
cmp
lret
add
and
mov
lret
ss
pop
ljmp
sbb
cmpsb
sbb
push
push
jecxz
lods
ret
mov
loope
inc
roll
rol
mov
stc
or
rcll
pop
inc
mov
push
mov
xor
out
pop
inc
out
pop
fists
imul
inc
sbb
cli
or
cld
jo
inc
mov
inc
cmpsl
push
into
push
int
pop
push
into
sub
xchg
mov
push
mov
jp
push
mov
aaa
out
cmpsb
xor
test
push
movsl
lds
mov
dec
stos
jmp
pop
dec
or
pop
pop
xor
les
adc
mov
in
loopne
in
sub
ss
rclb
scas
inc
mov
fwait
pop
aad
and
mov
dec
testl
pop
pushf
cmp
add
mov
arpl
ficomps
aaa
pop
push
jns
mov
lock
incl
test
repz
push
std
out
xchg
jb
addr16
scas
outsb
sub
jp
rorl
xor
sbbl
divl
jmp
icebp
pop
add
cmp
mov
fiaddl
hlt
in
or
cmc
pop
sbb
mov
push
loopne
push
lock
nop
push
outsl
test
mov
inc
mov
test
or
sbb
int3
scas
pop
and
arpl
pop
sbb
loop
inc
cld
imul
sbb
test
pop
or
shll
loope
std
jg
popl
mov
mov
cmpsl
push
push
inc
push
aam
mov
insb
adc
xchg
mov
loop
fwait
mov
and
xchg
cmp
into
mov
test
ja
mov
and
and
loop
call
sbb
dec
adc
outsb
jmp
in
mov
sbb
mov
pushf
pushw
popa
lea
add
jecxz
sti
jmp
mov
add
cmp
lcall
dec
mov
jns
lock
lcall
imul
fcomp
imull
loop
or
push
xor
dec
scas
mov
jb
fstl
pop
loop
aam
out
dec
mov
dec
pop
sbb
dec
xchg
add
leave
mov
insb
sub
mov
cmpsl
bts
cwtl
xor
int
xor
loopne
or
sbb
and
jecxz
std
cmpsb
dec
mov
pop
cmpsl
std
imul
stos
sbb
pop
pop
jmp
hlt
pop
cli
mov
adc
or
fisubrs
ja
addl
cmp
ror
jecxz
pop
jns
lea
gs
mov
cli
or
inc
sub
mov
push
xchg
mov
pusha
jb
js
out
mov
lret
jno
insb
in
stos
in
shlb
mov
or
or
ja
ja
xor
pop
sub
aam
popf
out
cli
dec
fwait
pop
dec
push
mov
sub
test
mov
cmp
out
push
outsl
lods
push
adc
and
add
adc
mov
xchg
xchg
cwtl
xchg
jnp
nop
pop
pop
cmp
dec
inc
sub
fstl
cmpsb
dec
cmpl
jg
or
sub
mov
and
movsl
test
leave
lret
mov
fwait
add
inc
pushf
xchg
and
push
cs
scas
daa
jbe
or
fsubrs
or
fmul
xor
mov
inc
repnz
cs
out
lds
sbb
sub
cltd
and
aam
dec
adc
mov
sarb
mov
cltd
stos
cld
push
jns
imul
orb
and
sbb
imul
dec
iret
jns
adc
lret
rcr
test
push
cmp
adc
aaa
xlat
add
js
insb
mov
imul
add
andb
xor
pop
xchg
cmpsl
pop
jle
pop
dec
pop
int
inc
sahf
subb
cmp
fadds
pop
or
mov
dec
or
addr16
jle
push
sbb
enter
aaa
popa
imull
dec
fisubrs
movsb
js
mov
adc
ja
inc
cmpsl
push
mov
test
add
out
cmc
cwtl
push
adc
cli
jns
popa
dec
aas
sbb
out
dec
or
ret
mov
ret
jns
mov
ret
aam
shr
dec
push
xchg
mov
ja
fcmovne
push
lods
sbb
cwtl
mov
dec
and
push
sti
in
movsl
xchg
sarl
mov
lock
lcall
dec
popa
mov
bound
xor
iret
mov
inc
addl
jmp
fbstp
xor
notb
dec
cmp
loopne
inc
sub
mov
bnd
mov
movsl
dec
out
outsb
pop
fisubrs
call
test
xor
mov
iret
scas
in
shlb
adc
xchg
push
or
rolb
sbb
mov
popa
iret
xchg
mov
jmp
cmpsb
push
fwait
xchg
lret
mov
loop
aaa
mov
and
and
sbb
pop
arpl
mov
and
add
orl
orb
fstpt
adc
lldt
shrl
jae
rcll
iret
popf
sbb
pusha
mov
add
mov
push
and
sub
enter
out
xchg
movsb
fwait
or
add
xor
mov
int
repnz
sub
sbb
xchg
mov
repz
scas
mov
fistpl
xor
mov
cltd
sahf
pop
int
jecxz
adc
cmp
lock
mov
mov
inc
loop
popf
lods
sbb
outsb
int3
cmp
pop
xor
xchg
fcmovb
xor
pop
out
nop
push
rorl
insb
cvtpi2ps
fidivs
or
ret
mov
and
sbb
das
mov
xor
and
ret
scas
mov
inc
stc
sbb
add
not
xchg
jbe
ficoml
mov
sub
or
stos
jmp
pushf
jge
xchg
mov
push
lcall
inc
fisubs
xchg
in
ja
mov
out
test
cmc
hlt
imul
je
push
mov
lods
mov
or
out
js
ficoms
inc
mov
outsl
push
mov
dec
mov
inc
loope
add
sbb
imul
add
push
popa
mov
lods
jp
cmp
xlat
shrl
pushf
movsl
int
sbb
sahf
push
or
call
lahf
cs
mov
aas
sbb
and
loope
jl
aas
lods
mov
pusha
mov
cmpsl
xchg
stos
push
sbb
pop
jns
imul
fimuls
ss
test
jae
sti
mov
xlat
xchg
lea
or
jnp
pop
insl
test
mov
jmp
and
data16
das
jge
push
rcll
test
sbb
pop
mov
test
jns
xchg
push
xor
fdivl
int3
or
sbb
test
jns
pop
cs
gs
pop
pop
loop
or
rcll
cmp
mov
jb
mov
ror
push
outsb
push
enter
mov
or
xchg
dec
lcall
aas
jno
xchg
dec
jle
cld
cmp
pop
ljmp
sbb
pop
or
mov
lahf
sub
dec
jbe
pop
or
add
in
rclb
lods
mov
dec
ret
jge
sbb
loop
inc
and
cmpsb
jl
xchg
repz
pop
push
and
mov
das
mov
dec
dec
scas
sahf
xchg
divb
push
push
orb
sbbl
mov
sarb
mov
sbb
repz
sbb
mov
cli
ret
mov
xchg
or
pushf
mov
popa
sbb
and
mov
nop
jecxz
daa
push
or
inc
lret
and
loope
xchg
mov
shlb
call
xchg
inc
xor
mov
test
cltd
jmp
es
xchg
sbb
or
int3
push
imul
test
leave
js
mov
jmp
fdivrs
mul
popf
cmpsb
xchg
mov
loope
sub
inc
jne
sbb
int3
push
and
sbb
xor
cmpsl
pop
jb
test
sbb
mov
or
outsb
mov
cmpsb
xchg
imul
mov
lret
ja
ja
add
cmp
fdivrs
xor
jp
xlat
mov
repnz
pop
cltd
popa
cmc
mov
mull
cltd
stc
daa
jg
xor
gs
pop
mov
adc
or
jmp
lds
sbb
stos
aaa
std
sub
mov
aad
es
jp
jne
das
adc
lea
pop
adcl
jg
mov
testb
imul
push
aam
jp
sub
cmpsb
cmp
dec
mov
add
movsb
pop
out
jbe
jne
das
leave
and
shlb
or
and
lds
les
cld
stc
add
xor
clc
pop
ja
adc
adc
add
cmp
inc
das
test
mov
push
push
mov
popf
mov
mov
insl
clc
cli
aaa
mov
sti
sbb
and
inc
jno
xchg
dec
cmc
repz
xchg
inc
sub
cld
pop
into
rol
cmc
outsb
ret
or
push
sub
jae
inc
lods
mov
jecxz
out
or
aaa
or
jl
cmpsl
xchg
lods
mov
fcompl
cltd
aas
hlt
pop
sbb
push
sub
fmulp
push
and
sub
cli
je
jns
movsb
fisttps
jo
loopne
negb
jp
out
fnstsw
aaa
cli
rorb
sbb
sbb
push
in
adc
mov
std
jbe
ds
lcall
jno
push
mov
pop
insb
test
push
bound
or
add
lret
jne
xchg
push
push
dec
sarl
rcrl
arpl
shrb
push
and
add
mov
adc
addr16
push
or
xorb
xchg
mov
dec
lahf
movsl
in
mov
adcb
out
stos
pop
inc
push
pop
sub
mov
bnd
sbb
adc
or
test
cmp
iret
ds
cwtl
mov
xchg
dec
or
mov
fiadds
ss
and
mov
in
adc
add
cmpsl
mov
nop
push
rcrb
push
push
sub
adc
out
jb
sahf
cld
cmp
imul
push
jp
clc
push
test
ret
dec
jbe
jle
cmp
popa
addr16
mov
jae
or
jno
and
lock
mov
in
pusha
xor
ret
jbe
mov
mov
mov
lahf
jp
outsl
or
fimull
xor
insb
dec
pushf
fs
adc
cld
pop
mov
mov
test
shlb
push
or
fmulp
inc
pop
lahf
leavew
push
es
jo
in
push
ss
cwtl
xchg
dec
cmpsl
mov
loope
scas
or
ja
lods
dec
fmul
lcall
mov
mov
inc
mov
imul
lcall
mov
dec
out
pusha
inc
popf
sti
and
popa
leave
jge
fmull
pop
call
dec
and
aam
sbb
enter
arpl
ja
mov
lods
mov
cmp
sub
lret
dec
mov
pop
dec
adc
jg
pop
aad
packsswb
lock
sbb
scas
repz
repz
arpl
jb
sbb
lock
fstl
pop
xor
jnp
jno
dec
jne
pop
pop
pop
cmp
xor
inc
mov
sbb
call
xor
ja
call
jmp
cmp
sub
fistpll
jecxz
clc
adc
in
xor
pop
popf
jecxz
jmp
sub
push
repnz
sbb
cld
cltd
outsb
subb
or
jbe
mov
pop
int
jl
inc
and
push
popa
xchg
int
mov
inc
pop
shr
test
dec
xor
and
mov
adc
stos
out
cld
mov
sbb
aas
popf
cmpsl
add
imul
push
push
jmp
jns
lea
lea
out
in
xchg
clc
xchg
inc
and
enter
pop
lret
inc
xchg
cmp
test
pop
jo
mov
mov
ja
pop
xchg
fidivrs
sub
cmp
test
push
pop
cmpsb
xchg
cmp
adc
jnp
xor
fs
lock
lcall
dec
bound
and
mov
lods
mov
dec
and
data16
sbb
and
mov
cwtl
mov
pop
test
sbb
popa
adc
xorb
mov
push
insb
mov
sub
stc
sahf
pushf
mov
popf
enter
dec
adc
and
pusha
sub
mov
add
pop
push
pop
daa
sub
xchg
xchg
jns
imul
add
adc
xlat
out
lods
or
cmp
in
inc
mov
sub
imul
lahf
and
scas
mov
gs
pop
popf
push
add
movsb
jno
scas
fdivr
push
jecxz
sti
out
xchg
push
cmc
push
jne
pop
fistl
lods
push
ret
or
adc
pop
mov
cmpsb
jl
xchg
pop
aas
cmp
inc
xor
leave
and
lods
ljmp
push
daa
fisttps
and
mov
mov
sti
jb
insb
sub
adc
mov
add
imul
test
jne
jno
adc
sub
or
inc
xchg
xchg
jb
ss
into
stc
push
mov
fistpl
sub
cmp
fwait
pop
cmp
push
aad
mov
shll
or
imul
test
jp
mov
std
mov
mov
jp
ja
in
mov
cmp
jno
addr16
cmpsb
ds
jle
and
push
push
cld
dec
in
aam
mov
insl
sbb
or
jp
imul
and
lea
xchg
mov
jne
add
cmp
sbb
lret
data16
add
imul
cmc
mov
jo
std
insl
ja
scas
xor
lock
jmp
inc
or
xchg
arpl
lods
pop
in
in
mov
push
in
pop
fstps
loop
bound
outsb
scas
or
adc
push
sbb
movsb
xchg
addr16
xchg
nop
test
jno
mov
movsb
mov
loope
cltd
push
sub
inc
sub
pop
push
mov
cmp
or
aaa
xor
adc
xor
dec
inc
stos
in
mov
insl
sbb
scas
imul
mov
test
jle
ret
data16
inc
lahf
sbb
inc
fdivs
push
and
xor
call
add
adc
lcall
mov
lods
das
sub
push
xchg
xchg
sbb
fsub
adc
jnp
xor
inc
mov
mov
std
push
mov
sub
daa
xchg
out
test
lcall
adc
movsb
aaa
xchg
inc
fldcw
idivl
fdivrs
mov
dec
inc
test
insb
ss
and
sbb
jnp
retw
enter
stc
into
sub
mov
jle
cld
add
adc
fs
cmp
pop
roll
inc
mov
mov
inc
je
push
sbb
mov
rorl
dec
push
loopne
cmp
xor
shlb
fsubp
sub
adc
clc
push
cmp
arpl
mov
stos
or
in
aas
insb
inc
shlb
mov
fwait
jo
pop
xchg
jmp
test
imul
lds
lcall
xchg
out
or
stos
into
fidivl
and
jo
mov
jl
pop
jecxz
gs
cmp
jno
mov
lfs
mov
ss
pop
neg
sub
lods
int
cmp
lds
sahf
mov
lds
dec
pop
outsl
aas
shll
push
out
iret
or
xlat
scas
and
enter
xchg
dec
repnz
or
popa
pusha
negb
shr
ja
mov
jge
jnp
and
xchg
cmp
es
pop
imul
aam
xor
lods
cmp
mov
pop
in
outsl
jnp
outsl
mov
sahf
xor
clc
sbb
cmpsb
cltd
pop
lcall
mov
push
sub
movsb
lods
cltd
sbb
je
rcrl
adc
gs
mov
and
jge
fwait
scas
add
or
imull
xchg
mov
adc
sti
scas
or
inc
fs
adc
and
jl
or
mov
lds
pushf
mov
xor
adc
dec
fs
or
in
push
dec
in
xchg
xchg
mov
cmp
lret
mov
sub
xchg
sub
stc
fldenv
add
xchg
imul
popf
imul
mov
cld
mov
sbb
out
mov
das
pop
sbb
pop
xor
sub
cwtl
add
clc
movsb
xchg
loopne
cmp
xor
not
jnp
stc
jbe
jnp
adc
adc
sub
pop
testl
cli
lea
push
insb
stos
lahf
adc
loop
jo
or
sbb
jmp
test
xchg
mov
enter
aaa
mov
xchg
push
cli
jns
idiv
dec
lock
push
fdivrs
pop
int
dec
loopne
dec
lahf
xor
sub
mov
pop
iret
fs
xchg
sbb
in
lock
dec
fldenv
test
jne
adc
adc
cmpl
jb
mov
xchg
sub
decl
inc
iret
mov
orl
outsb
cs
cmp
gs
cli
lret
fists
mov
ror
cmc
mov
popa
in
cli
pop
mov
cs
loope
stos
or
xor
lahf
scas
mov
sub
pusha
inc
inc
mov
pop
dec
pop
insl
iret
incl
sbb
sbb
cmp
cmpsb
adc
sbb
mov
cltd
bswap
mov
cltd
addr16
mov
cmp
mov
jg
lods
stc
ds
sti
jb
stos
mov
or
pop
punpckldq
jp
jmpw
enter
xchg
cmpsl
mov
sub
mov
cli
cwtl
icebp
cltd
or
mov
icebp
jl
dec
movsb
sbb
arpl
pop
sahf
int
insb
repz
jae
bound
xchg
xlat
in
inc
adc
sub
xchg
push
lcall
fwait
dec
aas
bound
lds
cmp
inc
iret
je
add
psrld
aam
cmc
xchg
lcall
push
aad
insb
mov
xchg
xor
jno
cs
rorb
hlt
aam
lods
and
mov
loope
mov
je
ret
mov
xchg
pop
mov
or
inc
jmp
jae
pop
pop
rcrl
xchg
mov
and
das
out
mov
es
xchg
or
cmp
aas
outsl
jns
sbb
adc
push
in
jne
inc
mov
enter
sbb
push
repz
daa
lods
sub
cmp
mov
nop
mov
test
pop
jmp
push
and
jp
inc
in
and
cmc
sub
jle
jbe
pop
fimuls
mov
and
movsb
mov
rclb
enter
dec
mov
pop
mov
cmp
mov
cs
xor
mov
sbb
lods
mov
and
sarb
int
lods
and
sbb
sarl
imul
int
shrb
mov
fidivrs
imul
fisttpl
fbld
jae
addr16
test
push
into
int3
rcrl
mov
pop
sbb
adc
adc
dec
xlat
loop
pop
lcall
fdiv
xchg
cmp
loope
sahf
addb
bnd
int
inc
addb
or
sub
repnz
xor
mov
cs
stos
xchg
lods
push
cwtl
and
out
mov
pop
stos
ljmp
insl
push
dec
out
push
lds
fiaddl
cwtl
jae
mov
cwtl
jno
fdiv
sbb
fdivrs
pop
sbb
sub
dec
mov
movl
cmpsb
sar
loopne
jb
enter
mov
aaa
in
ja
fiaddl
loop
push
stos
mov
arpl
stc
psubd
aam
mov
mov
sub
sti
sbb
adc
pop
jbe
aas
mov
stos
adc
mov
outsb
into
test
inc
test
int3
out
dec
addr16
in
adc
xchg
add
pop
dec
iret
ss
aad
clc
insl
sbb
push
stc
in
lods
mov
add
sbb
fwait
jo
arpl
fnstenv
push
xor
jbe
xchg
fmull
pop
cltd
xorl
sbb
and
fbstp
mov
cmp
fidivrl
jecxz
mov
ret
inc
mov
mov
xchg
jmp
push
fdiv
inc
mov
aaa
mov
stc
in
lcall
fimuls
js
mov
mov
sbb
lahf
or
out
pop
aam
test
adc
orb
dec
daa
push
xor
cmp
sub
lcall
inc
xchg
je
imul
pop
push
dec
adc
ss
std
jnp
inc
cmp
push
pushf
inc
xchg
or
sub
adc
jno
cmp
repz
neg
mov
shlb
movsb
push
sahf
mov
shl
push
sbb
mov
es
cmpsl
test
loope
nop
and
xor
add
xchg
cmpsl
sub
jle
subl
add
jns
in
mov
in
pop
xchg
inc
scas
imul
xor
add
mov
fldcw
test
int
add
jp
xchg
sub
mov
jnp
jo
aad
negb
push
insb
fsub
push
sub
xchg
in
add
adc
mov
cmp
jge
or
and
xchg
sub
loopne
lret
mov
inc
sbb
jbe
fld
cli
add
fmull
paddq
push
test
push
sbb
pop
movsl
int3
std
fdiv
aas
aas
lret
xor
and
hlt
adc
adc
jbe
imul
cmp
sbb
xor
stc
ds
mov
test
dec
repz
cmp
nop
mov
int3
loopne
mov
dec
xor
lret
inc
mov
jp
mov
add
pop
xchg
ret
xor
js
xor
add
bswap
dec
mov
fmuls
cld
addr16
adc
sub
add
pop
and
mov
aas
in
sbb
dec
pushf
jge
xor
cmp
xor
fsubrs
and
lret
cld
fwait
pop
das
frstor
or
xchg
mov
adc
mov
push
cmpsb
mov
inc
adc
loop
mov
sbb
dec
inc
add
jae
dec
sub
in
push
adc
test
ljmp
scas
in
inc
sarb
xor
and
mov
push
cmpsb
fwait
lcall
sub
or
fdivrs
stc
addb
loope
or
dec
xor
dec
sub
mov
test
jecxz
gs
movsl
inc
mov
loopne
dec
mov
mov
imul
aaa
arpl
push
mov
insl
sahf
mov
xchg
in
push
mov
icebp
rol
inc
test
cmp
cmpl
pushf
andb
aad
inc
imul
aam
out
push
nop
xchg
xchg
dec
dec
out
mov
or
loope
leave
pop
repnz
pop
xor
gs
cmp
lret
xchg
mov
inc
or
ss
nop
cmpsl
hlt
imul
mov
mov
in
mov
test
xchg
and
insb
ss
or
vcvttsd2si
add
and
dec
hlt
push
mov
cmp
cltd
dec
aas
adc
js
orl
aaa
mov
lret
xchg
mov
nop
dec
fldln2
add
cmp
sbb
xor
int
pusha
ljmp
hlt
fucom
pop
inc
adc
fwait
outsb
mov
lods
mov
pop
lods
dec
es
in
in
xor
test
adc
cmpsb
jnp
inc
mov
jl
out
scas
aas
mov
adc
popf
dec
mov
and
dec
mov
dec
xlat
lock
jo
adc
xor
sub
scas
enter
movsb
xchg
movsb
dec
add
mov
pop
lret
fsub
jbe
gs
lds
cmpsl
xor
xor
jmp
sti
arpl
neg
fistl
popa
jns
enter
inc
ja
inc
dec
mov
adcl
and
jl
fmul
iret
jne
pop
mov
add
dec
ret
movsb
sbb
cmp
lret
dec
push
xchg
push
dec
pop
cs
daa
loope
xor
bsr
imul
lods
mov
in
jle
adc
mov
inc
sub
shll
inc
push
inc
pop
bound
mov
dec
mov
add
lcall
pop
ja
mov
dec
or
nop
gs
push
pop
ret
adc
call
ljmp
cmp
into
inc
pop
push
jb
lea
les
pop
sahf
cmpsb
add
lea
jle
jno
mov
loopne
dec
add
inc
enter
rclb
pop
or
inc
lret
cltd
sbb
push
mov
out
addr16
not
cmp
ret
ret
popf
mov
arpl
out
call
sti
pop
lea
xor
fwait
sbb
pop
or
fs
aad
sub
mov
or
pop
out
dec
dec
addr16
fimull
xchg
mov
jle
xor
dec
insb
dec
jp
xchg
xchg
fdivrl
sbb
push
add
or
stc
dec
mov
pop
test
dec
mov
fcompl
call
xchg
outsl
sti
cltd
rcll
out
vucomiss
addr16
stos
add
stos
adc
cmpsl
ja
cld
in
ja
jno
pop
faddl
mov
xchg
pop
and
out
popf
stos
les
sbb
stos
enter
fwait
aad
push
rorl
ret
pop
mov
sahf
jae
jae
add
movsb
mov
push
mov
comiss
mov
rol
inc
xchg
or
addr16
imul
faddp
scas
sbb
subb
adc
bsr
pop
xorb
clc
flds
cmp
out
lock
ret
cld
rolb
sbb
aam
and
call
lret
mov
and
mov
adc
sbb
out
xorb
ficomps
orl
jg
dec
or
nop
out
movups
pop
shl
or
push
ja
cmpl
dec
cmp
xor
pop
int3
push
lcall
and
xchg
pop
mov
orl
roll
or
push
jl
dec
jbe
sahf
xor
ficoms
inc
andl
clc
pop
sbb
adc
push
mov
cs
jnp
and
or
pop
cmpsl
and
sbb
scas
mov
push
fxch
jecxz
xor
push
idivb
or
incl
bound
repnz
push
roll
daa
xor
ds
es
adc
lcall
xchg
fisubl
or
sub
dec
add
inc
cmp
mov
insl
call
dec
push
imul
push
movsl
fwait
call
push
mov
adc
cmp
sub
in
fisttpll
ss
cmp
addr16
adc
inc
loopne
jecxz
add
pusha
cmpsb
dec
jns
pop
sub
pop
or
shrl
inc
push
or
hlt
mov
std
lock
push
push
sarb
xor
rorl
fists
cmp
fldt
out
jae
cmp
out
xchg
mov
lcall
rcll
add
pop
adc
daa
add
cmc
jmp
je
test
std
dec
or
nop
mov
cmpsl
lods
loop
fsts
jg
dec
pop
hlt
dec
lret
jmp
mov
mov
lret
or
pusha
or
push
push
cmp
or
movsl
repz
inc
je
mov
mov
mov
iret
lods
data16
rolb
pushf
test
xchg
test
fsubrs
pop
mov
jns
mov
out
dec
lods
cmp
es
int
sbb
repnz
mov
shlb
xchg
mov
les
mov
sub
test
and
addr16
insl
push
imul
pop
mov
mov
mov
xor
cmp
stos
mov
cmp
icebp
push
mov
addl
loop
add
pop
lds
cmpb
xchg
andl
mov
cld
jae
rcl
cli
call
mov
mov
pop
inc
pop
stos
stos
das
or
mov
into
in
cmp
movsl
js
out
fistpl
daa
repz
inc
cmpsl
sbb
pop
cmpsb
and
or
ret
insl
add
sub
and
notl
jbe
jl
vmovups
or
lcall
mov
pop
movsb
and
jnp
cmpsl
xchg
stos
arpl
sbb
push
pusha
sbb
mov
mov
xor
je
inc
jo
test
mov
call
and
lea
rol
inc
mov
pop
loopne
mov
sar
inc
mov
jne
pushf
xor
cmp
mov
push
mov
notl
pop
test
insb
cmpsl
dec
xor
mov
fistl
adc
mov
mov
xor
lret
and
ljmp
and
out
cmp
jmp
loopne
mov
enter
insb
push
jb
dec
sbb
jle
jmp
mov
add
aaa
mov
sbbl
mov
cwtl
loopne
hlt
aaa
test
lea
mov
hlt
xchg
lock
mov
lock
mov
inc
inc
adc
subb
inc
pop
int3
and
mov
xchg
inc
incl
add
out
imul
fisubl
cmc
jecxz
aam
cs
mov
mov
sub
cmp
xor
ret
mov
ja
rol
adc
shl
repnz
jp
out
ret
sbb
push
leave
ret
pop
enter
cmpsb
dec
pop
jns
adcl
mov
or
cmc
shl
enter
inc
stos
mov
lret
aaa
cmpb
mov
xor
sti
out
cs
test
in
jge
lret
push
jle
inc
mov
jl
pop
mov
push
shrb
jmp
sti
pop
and
adcl
pop
outsl
ds
repnz
insl
sbb
xor
test
mov
jo
push
push
mov
jl
xlat
enter
adc
aam
push
movsb
insl
pusha
xchg
daa
out
test
stos
pop
and
addb
shr
mov
rcrb
mov
aad
ss
mov
adc
dec
push
mov
fstl
sbb
pop
xchg
or
xchg
push
cld
clc
adc
fisubs
hlt
cmc
adc
sbbl
jle
test
mov
ljmp
xchg
in
dec
and
push
and
and
outsl
dec
cld
or
test
cwtl
lahf
repnz
sub
fisubrl
popa
out
lods
outsb
xchg
sub
mov
mov
sub
movsb
scas
mov
dec
data16
dec
xchg
cmp
push
dec
sbb
sbb
jg
lret
decb
add
in
lea
popf
pop
das
cmp
daa
or
cmpl
pop
int
mov
lcall
int3
sub
push
ljmp
dec
das
je
cmp
in
rclb
loop
sub
cmpb
xor
mov
xor
je
fsubl
xchg
mov
xor
adc
push
int
adc
adc
testl
sbb
bound
xchg
fbstp
cmp
push
sub
xchg
inc
outsl
aas
cmpsb
xchg
add
sti
bound
lock
ja
daa
cmpsb
jle,pt
or
jne
cmpb
adc
or
xor
popa
in
or
gs
cmpsl
xor
movsl
jle
ljmp
shlb
gs
mov
mov
lret
imul
lahf
out
mov
inc
repz
fmul
push
and
loopne
jne
ds
sub
sbb
out
shrl
dec
and
sub
insl
mov
lahf
int3
mov
imul
xchg
les
icebp
loop
stc
insb
jl
movsl
sub
mov
arpl
mov
adc
filds
adc
push
imull
inc
std
stos
push
cltd
test
xor
and
pop
lea
and
lock
and
adc
icebp
dec
fisubrs
ret
adc
mov
ffree
cmp
pop
andb
outsb
cmp
ljmp
jbe
sbbb
sbb
sub
dec
leave
sub
std
fmuls
data16
xchg
loop
outsb
dec
mov
out
adc
test
es
cs
fsubl
cmpsb
cmp
mov
and
cmp
jb
mov
imul
adcl
mov
mov
shll
sarb
bound
into
jae
outsl
rorl
mov
mov
movsb
sarl
adc
inc
pop
adc
push
sub
xor
fiadds
push
push
and
xchg
movsl
cmpsb
mov
movsl
sub
fstl
cmc
mov
and
mov
xchg
mov
mov
mov
imul
addl
add
xor
int
sub
arpl
repz
xchg
out
outsl
or
pop
sub
js
pop
xchg
movsl
dec
outsb
mul
cmpsl
jg
stos
ljmp
adc
push
insl
push
sub
int3
mov
jne
mov
add
mov
jb
inc
es
adc
pop
dec
bound
jmp
push
je
jae
push
mov
cmp
aam
xor
cwtl
movsb
loop
popa
mov
xchg
rcll
dec
jbe
pop
popf
mov
xchg
addl
push
je
bound
xor
mov
xor
sbb
in
je
orl
xchg
push
icebp
rclb
pop
jbe
mov
dec
pop
cmp
dec
movsb
iret
xchg
dec
fs
in
add
or
push
sbb
mov
cltd
jns
push
xchg
shrl
and
sub
insb
aam
inc
xchg
adc
insb
mov
inc
push
inc
jnp
pop
pop
popf
mov
inc
cmp
ret
shrd
xchg
notl
cmpsl
js
pushf
xchg
addb
stos
int
pop
mov
pop
mov
cwtl
cltd
das
mov
sub
mov
pusha
nop
or
out
negb
pushf
shlb
movsl
cmpsl
jne
mov
adc
mov
lahf
rclb
mov
incl
ss
nop
dec
stos
aam
imul
and
or
in
pop
add
mov
imul
lods
lcall
and
imul
sbbb
repz
mov
pop
mov
jmp
movsl
push
pop
cmpsb
movsl
pop
imul
sbb
not
add
cli
popa
fcoms
push
cmpsl
sahf
mov
jmp
enter
push
rcl
aam
mov
je
jo
fmuls
or
xor
mov
mov
jb
cmpsl
cmp
lds
mov
cmp
mov
mov
lcall
lcall
xlat
jmp
adc
adc
or
incb
aaa
mov
inc
push
arpl
filds
jo
sbb
push
and
aas
jle
enter
cld
push
ds
jmp
mov
inc
cmp
pop
pop
lret
movsb
lods
xchg
xchg
out
les
jb
stos
loop
ss
mov
sub
loope
xchg
bnd
xchg
punpcklwd
imul
out
xor
push
xchg
and
ret
out
cmp
mov
pop
std
inc
nop
scas
js
sbb
mov
push
and
or
xchg
mov
xchg
daa
rcr
or
mov
scas
push
out
mov
inc
int3
out
ljmp
and
cltd
lea
pusha
ret
rcr
repnz
fcomps
sbb
pop
cmp
pushf
jg
loope
out
dec
das
pop
ljmp
sub
loopne
adc
cmp
cmpsl
mov
js
push
stc
or
fmull
pop
dec
sbb
inc
dec
ret
in
mov
and
bound
mov
xor
std
push
stos
cmpl
add
cmpsl
in
xchg
fildl
jae
stc
dec
push
sub
movntps
add
xor
out
push
cmp
xchg
je
jno
xchg
adc
shrb
cmpsl
nop
in
dec
imul
xorl
pop
dec
or
fnstcw
jae
or
jle
xor
in
push
xor
dec
std
and
out
mov
dec
jp
divb
fmulp
and
adc
cmp
mov
cmp
dec
sbb
andb
and
movsb
dec
stos
sub
fs
movsl
clc
stos
test
cmpsb
ds
mov
and
repz
out
lods
pop
mov
pop
push
add
dec
push
cmp
pop
aam
jne
out
out
roll
and
adc
fwait
test
or
dec
cs
test
dec
push
lret
sub
scas
outsb
xchg
jb
in
xor
fisttpll
jns
or
bswap
or
pop
xchg
push
pop
push
scas
push
stos
mov
push
push
nop
movsl
or
into
mov
imul
sub
add
cmp
xchg
gs
inc
pop
aas
test
out
stc
pushf
loope
jae
xchg
orb
inc
dec
add
in
jmp
mov
pop
data16
scas
jae
push
fsubr
aas
xchg
and
stos
cmp
xor
movsl
push
insl
into
std
push
push
sub
sbb
cmp
and
call
adc
js
push
xlat
and
popa
insl
jns
lret
sub
pop
enter
out
xchg
dec
shll
xchg
lods
icebp
ret
jle
loopne
xchg
rorl
hlt
cmpsb
sbb
mov
mov
sbb
xchg
lods
mov
sub
mov
pop
xchg
loope
adc
mov
dec
mov
mov
movsb
jb
mov
mov
pop
sbb
push
arpl
sbb
and
inc
pop
add
fstps
xchg
cld
mov
sbb
mov
inc
ficomps
out
push
mov
and
cmpsl
inc
push
test
inc
pop
push
adc
movsb
leave
jecxz
outsb
xor
jnp
lock
lahf
dec
mov
inc
mov
sahf
sub
icebp
cwtl
add
adc
ss
push
ljmp
jp
dec
fnstsw
leave
jle
frstor
mov
fwait
pushf
rolb
stos
sub
lock
xchg
sub
pop
inc
ja
cmp
and
ret
dec
aam
push
out
push
mov
loop
xor
test
xchg
adc
or
and
inc
ljmp
cmpsb
sub
fimull
add
xor
fsts
lret
lret
out
inc
cmpsb
insl
ret
mov
sub
mov
sub
mov
loope
push
mov
orb
mov
leave
sarb
scas
dec
pushf
rcrl
shl
outsl
lcall
mov
lds
sti
push
pusha
lret
aaa
jae
js
inc
xchg
inc
or
in
dec
les
cmc
xor
cwtl
dec
jb
push
fwait
mov
mov
icebp
ror
scas
cmp
xor
mov
or
jmp
hlt
cmp
add
lods
xchg
icebp
mov
cmp
dec
push
pop
cs
ds
out
cmp
arpl
jnp
xchg
addr16
cmpsb
daa
sbb
or
int
push
pop
push
test
dec
adc
out
pop
push
aam
dec
pop
test
insb
insl
and
and
lcall
dec
in
xchg
mov
out
insb
mov
mov
imul
xchg
cwtl
jge
add
testb
xor
jecxz
icebp
xlat
push
cmp
sbb
jb
shl
mov
inc
shrl
insb
mov
adc
push
shlb
inc
mov
jp
mov
jnp
into
mov
aas
mov
jns
dec
mov
jae
pop
cwtl
inc
mov
jg
jbe
fwait
rcr
mov
push
cmp
and
test
jae
or
inc
sub
and
aam
jmp
dec
fsts
inc
pop
dec
cwtl
sbb
arpl
stos
pop
xchg
cmp
out
xchg
mov
pusha
mov
out
xchg
mov
cmp
lods
push
or
inc
sbb
shr
mov
icebp
fistpl
lods
aas
scas
outsl
inc
add
loopne
daa
xchg
mov
rolb
sub
push
ja
test
or
inc
pushf
inc
test
iret
jae
push
mov
pop
mov
fs
xor
test
xchg
xor
out
pop
fcomp
adc
inc
mov
mov
sbb
pop
aas
lds
adc
std
fdivrs
cli
lahf
dec
inc
mov
outsb
dec
adc
mov
sti
sbb
fs
scas
mov
sub
stc
in
inc
jecxz
mov
add
aam
or
cmpsb
faddl
jmp
test
fs
lds
sbb
jnp
loope
pop
jns
stos
push
push
outsb
loop
xor
fmul
scas
push
dec
push
sbb
add
pop
push
lds
lcall
jg
xorb
lock
fists
dec
aaa
in
xchg
mov
mov
repnz
pushf
mov
jmp
mov
push
call
pop
movsl
popa
or
pushf
scas
imul
push
je
jge
lcall
addr16
lods
jl
pop
das
add
mov
inc
push
lods
adc
out
mov
sub
pop
in
aas
jns
inc
ss
mov
mov
pusha
test
das
pop
xchg
pop
xor
and
pop
cs
add
sbb
xor
jne
inc
dec
loop
add
pop
leave
or
ss
ret
pop
xor
push
jge
mov
push
clc
mov
pop
sbb
popa
mov
cmpsl
xorl
dec
xor
mov
xchg
cmp
insb
repz
cli
rorb
xchg
sub
fiaddl
add
and
adc
stc
sarb
mov
inc
out
mov
adc
in
sbb
aam
jecxz
aad
xor
aam
inc
sahf
jge
rep
mov
xchg
pop
popa
ljmp
jo
pop
push
pusha
jae
je
js
lcall
sbb
jnp
imul
or
int
dec
mov
ret
fwait
hlt
adc
hlt
popf
insb
lret
and
inc
pop
or
ja
aam
and
push
loopne
out
sub
loope
lcall
mov
icebp
call
and
cs
jmp
push
jecxz
mov
push
sub
dec
cmp
add
jge
xchg
int
mov
and
hlt
shll
push
stos
leave
xor
jle
cs
inc
lret
mov
sbb
stos
jle
push
rorl
push
lcall
push
pop
push
dec
cwtl
add
and
in
lcall
pop
sub
fnstsw
ss
inc
test
insl
sbb
loope
add
mov
mov
push
aad
test
and
mov
pop
pop
push
jp
sbb
jnp
add
inc
add
mov
adc
cmpsl
sub
pop
sub
sbb
lret
inc
sbb
push
in
sbb
cmpsl
lahf
enter
adc
adc
mov
imul
popa
roll
pop
and
fwait
jae
pop
dec
jnp
fcmovnbe
aas
jns
lods
es
cmp
add
push
lahf
out
push
cmp
outsb
addr16
mov
in
test
fisubs
sub
and
ljmp
push
inc
push
adc
push
or
sbb
jb
repnz
stos
xchg
add
push
push
dec
xchg
outsl
repnz
dec
jo
lock
jo
faddl
push
lods
pushf
and
fstpl
out
dec
or
test
or
enter
xchg
insl
push
sub
lea
sub
push
cld
cmp
out
push
inc
push
mov
jbe
movsl
mov
lods
aaa
sbbl
mov
or
push
subl
call
hlt
or
or
repz
sbb
push
xchg
int3
fwait
cmp
sbb
pop
push
add
out
mov
mov
sub
push
movsb
mov
or
jbe
sbb
cmp
lahf
stos
hlt
popa
sti
jl
mov
jecxz
out
or
test
ret
sub
or
jne
cltd
aas
dec
sub
aad
pop
add
pop
dec
sbb
sub
pop
and
mov
movsb
mov
pop
push
lea
imul
fstps
test
cmp
xchg
cmpsb
or
inc
jo
repz
repz
hlt
fcomp
mov
jbe
push
xchg
adc
mov
pop
movsb
jnp
cmpl
mov
mov
loope,pn
cmc
push
cmp
xor
ds
hlt
mov
in
mov
mov
push
mov
push
bnd
adc
mov
xor
inc
movsb
jne
inc
scas
or
xchg
cmp
xchg
sahf
outsb
mov
inc
negb
out
arpl
movsb
ljmp
xchg
test
out
push
pop
lds
jne
push
test
jb
fisubrs
pushf
jl
mov
test
and
pop
mulb
in
stos
sbb
lret
lea
xchg
push
and
ficoms
and
pop
imul
bound
insb
lods
mov
cmpsl
je
outsl
pop
and
mov
dec
sarl
push
push
test
jle
add
out
mov
inc
pusha
cmp
pop
insl
in
hlt
cmc
sub
and
xor
mov
jb
stc
jmp
add
rsqrtps
stos
out
dec
push
adc
cmpsl
xchg
jne
dec
sti
push
out
mov
fisttpll
mov
in
mov
xchg
shlb
lock
adc
jge
adc
jp
call
test
daa
sub
push
adc
sbb
shl
lock
sbb
imul
and
out
push
xchg
sbb
rorl
push
cmpb
jno
dec
jge,pn
jae
adc
andl
repz
sbb
jae
mov
fs
std
push
cmp
sbb
notb
add
fnstcw
sarb
rorb
lods
in
or
mov
stos
sbb
sub
sub
loop
sub
das
adc
ss
jmp
ficomps
sbb
bound
and
outsl
cmp
mov
and
clc
cmpsl
adc
mov
mov
xchg
pop
sar
dec
inc
cmpsl
test
scas
dec
mov
pop
rorl
fxch
mov
cltd
movsl
mov
inc
and
rcrb
fimull
cwtl
es
repnz
adc
xor
ja
rorl
sub
or
mov
lods
int3
insb
sbb
mov
nop
pop
in
call
test
mov
and
add
mov
cli
iret
or
add
mov
stos
add
cmp
pop
cmp
in
push
sbb
mov
cld
and
xchg
mov
xor
mov
sti
cld
stos
and
inc
or
pop
pop
mov
fbstp
pop
daa
jb
mov
pop
in
or
jl
scas
popa
out
mov
call
jae
dec
push
or
jecxz
xchg
add
outsb
push
aad
stos
inc
sbb
lods
sub
sub
jge
sub
mov
cwtl
or
push
addl
inc
aad
add
subw
push
push
adc
lods
test
jnp
rorl
outsb
push
insl
mov
xchg
das
push
and
sub
pushf
xor
bound
negl
std
sbb
or
mov
jg
mov
xchg
or
loopne
jno
dec
call
int3
ret
pop
lea
pop
xor
inc
stos
scas
out
xchg
outsl
decl
lret
inc
push
jns
cs
test
inc
and
pop
incl
popl
subb
push
cld
push
scas
sbb
push
push
xor
pop
sub
pop
mov
int3
movsl
sahf
or
imull
int3
sub
and
out
pop
lea
sub
in
sti
lcall
out
jno
in
repnz
and
fisttps
mov
fsts
in
jns
fucom
inc
mov
sarl
cmp
es
xchg
xor
jge
inc
movsb
push
cmpsl
decl
fwait
jae
outsb
pop
xor
fbstp
hlt
mov
push
mov
shll
pop
fcom
mov
xor
les
cmp
ror
dec
test
rcrb
push
xchg
rolb
mov
adc
les
ret
adc
sti
or
pusha
stc
in
xor
lret
push
dec
lock
mov
xor
sbb
ss
mov
pop
pop
mov
cmp
popf
mov
sub
sub
lahf
sub
movsl
cmc
outsb
dec
mov
pop
push
enter
xchg
sub
pushf
or
or
jge
inc
xchg
lcall
and
xchg
ljmp
lock
mov
push
aad
cli
test
push
jbe
pop
push
or
push
in
add
mov
dec
and
mov
jne
mov
loope
mov
jmp
cmp
lods
sub
lea
dec
lahf
mull
psrlq
xor
jae
in
mov
adc
out
xchg
sahf
pop
insb
vmovss
pusha
sti
daa
testb
dec
or
rorl
fiadds
sbb
sub
adc
mov
mov
fs
jmp
xchg
rcrl
mov
xorb
add
stc
pop
nop
xor
nop
imul
pushf
lcall
mov
xor
fbld
hlt
push
cmc
sub
jnp
push
sub
pop
stos
int3
lcall
lea
or
or
testb
out
rcr
dec
lcall
or
je
imul
push
mov
cmp
mov
dec
add
fiadds
dec
data16
lds
cmp
inc
addb
sbb
pop
fnsave
xchg
or
imul
and
sub
mov
roll
adc
push
test
scas
outsl
or
xchg
aas
lea
test
mov
jge
addl
ja
adc
mov
xor
imul
pop
sbb
icebp
push
aam
fsubrs
test
sbb
pop
mov
fsubrs
inc
dec
jge
mov
data16
inc
js
pop
xchg
fidivs
insl
ljmp
pop
rolb
sti
jb,pt
bound
inc
add
and
and
enter
inc
push
popl
fdivl
dec
dec
sbb
cmpsl
leave
adc
decb
jmp
int3
ret
adc
out
jg
lcall
dec
mov
fnstsw
out
push
and
sub
cmp
es
aas
mov
and
das
jp
test
add
inc
xchg
idivl
add
movsl
adc
mov
or
mov
push
fcomps
lahf
or
xchg
pop
ljmp
cmc
mov
pop
pop
dec
or
jbe
mov
add
mov
xor
sbb
mov
mov
out
mov
pop
stc
push
xor
test
out
stos
mov
push
sbb
test
dec
int3
or
loop
xchg
cmp
cwtl
pop
mov
dec
push
mov
mov
adc
rcr
mov
cmp
adc
sbb
insl
mov
adc
fcoml
sbb
aad
and
std
mull
sub
xor
popl
test
out
aad
pop
pusha
cltd
pop
adc
sbb
bound
add
fnstcw
test
xchg
jecxz
inc
cmp
lods
jge
pop
ljmp
sbb
sub
or
cmp
fnsave
jo
sbb
decl
in
inc
jle
jg
testb
jp
mov
mov
jp
aam
aas
rclb
mov
incl
push
push
pop
add
add
or
aad
xor
outsb
and
test
iret
push
or
or
lahf
ss
cmc
rolb
mov
rcrb
xchg
leave
hlt
mov
cltd
sbb
loopne
sti
mov
xor
mov
and
pop
fwait
test
repz
mov
call
fisttps
insb
mov
out
insl
inc
cmpsl
jle
pusha
notl
aas
ret
jecxz
cmp
shrb
push
adc
xchg
and
inc
cmp
mov
or
outsl
push
pop
mov
into
in
adc
pusha
xlat
xor
scas
cmc
push
pop
in
insb
repz
iret
nop
rolb
jge,pt
insb
fidivrs
mov
shll
scas
sub
aad
push
imul
pop
pop
jno
leave
jae
mov
sub
cmpb
adc
pop
mov
push
add
js
loope
add
dec
mov
hlt
adc
pop
int
out
lea
scas
push
xchg
lcall
stos
jbe
sub
jns
or
and
aaa
call
cmp
cmp
push
and
sub
mov
jae
sub
leave
mov
or
jne
or
pop
inc
adc
inc
aam
jne
int3
mov
lea
or
in
pop
lds
mov
outsl
in
xor
xlat
cmpsb
lahf
push
push
daa
push
addb
scas
sahf
orb
cmp
std
cmp
xor
cld
add
and
cmpsl
jbe
jle
mov
sarb
add
aad
mov
js
push
inc
arpl
dec
scas
aad
pop
mov
jns
fcmove
movsl
fwait
xchg
call
jle
jp
call
cmovle
sub
repz
inc
test
loope
in
leave
push
jmp
inc
hlt
inc
repz
test
mov
or
icebp
out
cs
test
xchg
daa
test
add
out
insb
into
pop
je
sti
mov
repz
ftst
sub
popa
mov
mov
pop
outsl
jmp
test
stos
xor
cmp
dec
sbb
jbe
jo
sub
aam
pop
loope
test
jmp
sub
mov
lods
fisttps
mov
inc
sbb
add
cmpsb
cwtd
mov
sbbb
dec
push
jb
daa
test
xor
jno
dec
lods
sarb
cmp
andb
sbb
push
add
inc
pop
gs
in
sarl
rclb
inc
notl
sbb
cmp
xchg
xlat
in
lahf
test
dec
scas
aaa
jb
js
les
or
test
xor
mov
add
sub
cmc
aas
orb
pop
and
mov
dec
call
scas
jae
or
mov
or
mov
scas
add
scas
scas
pop
dec
inc
test
push
adc
dec
imul
jo
sahf
mov
push
or
mov
ss
cmpl
mov
inc
add
popf
add
vphaddubw
sbb
xchg
dec
das
inc
add
cltd
mov
in
xor
inc
or
fsubrl
pop
dec
mov
adc
push
dec
or
jle
xor
hlt
pop
jecxz
test
repz
pusha
fnstcw
sub
pop
lea
pop
sbb
mov
adc
jnp
lret
stos
add
imul
push
cmc
lcall
adc
js
xor
pop
jecxz
inc
jle
dec
sub
das
xor
movsb
js
xor
mov
jo
shll
rorl
test
mov
pop
popa
xchg
sbb
and
inc
subl
aas
mov
sub
rorb
ffree
adc
imul
push
inc
insl
aaa
aas
ret
pop
outsb
xchg
push
or
push
xor
rorb
mov
inc
test
inc
dec
mov
rcrl
data16
test
mov
mov
xor
push
add
pop
cmp
push
scas
push
inc
mov
hlt
jbe
outsb
loopne
or
loopne
test
lods
push
mov
xchg
inc
fisubs
mov
fwait
stos
sub
in
cmpl
cmp
inc
imul
sahf
outsl
rolb
and
ret
scas
ret
bound
xchg
es
or
adc
jno
call
sub
shll
sbb
push
push
xchg
sub
les
nop
cmp
inc
aad
nop
lods
add
or
test
lods
inc
xor
push
pushf
push
xchg
fwait
sub
xchg
dec
mov
add
cmpsb
cmpb
loopne
push
xchg
push
enter
addr16
call
xchg
xchg
lcall
rcrl
cmc
jnp
aad
daa
fistpl
inc
js
cmp
arpl
and
sbb
mov
push
out
and
or
in
xchg
mov
jp
scas
ja
mov
mov
mov
push
jecxz
jge
pop
jmp
mov
out
fadd
adc
mov
scas
ret
mov
fs
mov
push
ja
inc
pop
clc
fstl
pop
fdivs
mov
je
fidivrl
mov
lret
adc
and
mov
shlb
mov
xor
push
mov
add
scas
jnp
or
out
xchg
sbb
pop
mov
ja
into
call
imul
jb
stos
stos
dec
push
daa
insl
std
movsl
orb
add
lret
pop
xchg
xor
repz
ja
lret
mov
mov
lods
cmpsb
pop
rcrl
and
add
mov
ficompl
mov
insl
pop
ljmp
mov
ljmp
inc
mov
popf
mov
aam
mov
rolb
add
add
pusha
arpl
cli
jecxz
push
mov
mov
insl
push
lods
icebp
test
mov
test
out
pop
pop
inc
lret
mov
xor
out
or
push
sub
adc
test
sub
movsb
xchg
and
mov
sub
je
xchg
sarl
mov
popf
cmp
adc
mov
clc
fistpll
insl
pop
xchg
imull
cmp
cmpsb
movsb
pop
adc
notl
mov
push
ljmp
ror
push
outsl
repz
pop
sub
xchg
bound
repnz
jo
std
lahf
xchg
enter
inc
in
adc
adc
sbb
mov
mov
ja,pn
ja
jns
pop
push
sub
add
inc
rolb
cltd
test
mov
mov
test
filds
aaa
cmpsl
inc
cmp
and
imul
mov
addr16
popf
dec
imul
lret
insb
mov
aaa
push
lods
pop
adc
mov
int
subl
gs
pusha
and
lea
and
lcall
mov
jo
push
int3
mov
lock
push
jbe
movsb
sti
mov
stos
in
lea
push
or
pop
rolb
scas
mov
dec
mov
pop
aaa
xchg
mov
and
xchg
pop
mov
xchg
or
and
push
ss
test
jbe
movsb
inc
add
out
mov
out
rcll
add
pop
out
inc
dec
lods
and
or
pop
pop
push
xlat
sarl
fldcw
xchg
sti
jp
mov
int3
mov
lds
jbe
mov
cmpsl
dec
ljmp
ja
cmp
and
out
retw
and
cmp
lock
sbb
xchg
jne
xor
add
inc
add
xchg
stc
jl
add
mov
jae
es
pop
pop
out
fsubrs
test
in
fwait
mov
cmp
adc
push
out
add
shll
cli
outsb
fs
pop
test
scas
and
xchg
lods
ja
dec
jnp
lds
fucomi
cwtl
xchg
push
repnz
insl
ds
daa
push
aaa
bound
inc
dec
dec
xchg
sbb
xchg
fcoms
mov
sbb
sbb
cld
pminsw
out
adc
or
xor
icebp
incl
xchg
xchg
lea
xchg
sbb
push
xor
dec
ljmp
dec
popa
lock
nop
jae
pop
jae
iret
dec
inc
popf
pop
xchg
cmpsb
jb
test
xchg
fcoml
clc
cli
fwait
xor
stos
cli
pop
mov
xchg
test
ret
push
xchg
xor
hlt
ds
and
enter
lods
bound
sti
loop
int
setnp
pop
rolb
out
lds
dec
ss
stc
cmc
xchg
cmp
mov
rolb
negb
sbb
ljmp
jp
shrb
xchg
lock
cld
shr
sbb
testl
or
mov
fcmovnb
xchg
jg
xchg
in
rorb
xlat
mov
into
jae
push
xor
adc
ficoml
jecxz
mov
inc
fstpt
lahf
mull
fistl
push
push
das
dec
movsl
pop
mov
fists
lds
mov
lahf
pushf
jns
sahf
ds
fwait
cmp
gs
cli
jae
test
repz
flds
sahf
sbb
fwait
ror
fucom
mov
mov
notb
in
test
pushf
mov
pop
xlat
lods
push
pop
fs
in
jmp
push
mov
jo
or
push
pop
pop
outsb
test
fwait
lods
shr
mov
rcrl
movsl
cld
sahf
gs
test
mov
pop
scas
ljmp
icebp
xchg
rcrb
fldenv
push
popa
mov
hlt
add
fnsave
in
mov
scas
sub
cld
add
rorl
push
imul
xchg
jg
sbb
shl
push
inc
sbb
roll
pop
mov
cld
xor
cmp
popf
inc
push
jo
mov
cmp
es
adc
ljmp
mov
sbb
xor
jge
nop
dec
mov
mov
or
pop
and
mov
add
xchg
in
xchg
mov
push
add
call
call
sbbb
shrl
pop
push
mov
daa
ljmpw
mov
add
mov
fsubr
inc
mov
add
jne
call
in
add
fadds
outsb
or
add
lahf
cmc
mov
pushf
aaa
add
lahf
imul
cld
push
into
inc
es
or
pop
inc
fists
and
icebp
fdivl
int3
inc
mov
jae
push
ljmp
imul
scas
pop
aaa
add
push
xor
sub
ja
push
stos
lds
mov
iret
out
cwtl
je
push
pop
decl
mov
cwtl
rcrl
mov
mov
aam
sarb
sbbl
push
push
mov
mov
or
add
inc
xchg
sbb
cmp
xor
sub
pop
movsl
stc
push
or
push
pop
mov
ret
sti
push
in
stos
xor
pop
bound
push
sub
pop
add
add
inc
std
stc
or
test
inc
lret
dec
cmp
dec
xchg
cvttps2pi
push
pop
ret
jecxz
mov
je
pop
adc
leave
mov
leave
or
dec
aaa
lret
cltd
movsl
ja
rcll
mov
mov
addr16
mov
jle
dec
idivl
orl
push
stos
xchg
in
les
dec
popf
lods
push
loope
mov
mov
push
xchg
insb
fdivrl
insb
loope
dec
and
sbb
and
fcmove
mov
mov
mov
shll
push
push
cmp
insb
hlt
add
lock
jns
xchg
cmp
or
dec
test
imul
fnstsw
jo
repnz
lcall
fadds
pop
or
cmp
ret
mov
lcall
outsb
rorl
rcrl
adc
gs
outsb
mov
push
hlt
les
mov
pop
or
loopne
out
jecxz
push
jg
in
lahf
aaa
mov
in
repnz
add
xchg
loop
aad
test
cmp
int
mov
inc
xor
popf
lea
fstl
scas
mov
pop
mov
xchg
xchg
and
std
stos
cmp
pop
testl
ljmp
inc
add
mov
call
mov
push
mov
stos
fldl
rorb
int3
push
and
adc
cmpsb
pop
repz
lock
pushf
ret
nop
jmp
mov
mov
pop
scas
movsb
jg
int
cmp
and
fcompl
test
push
inc
push
das
int3
jae
mov
sbb
mov
pop
repz
mov
push
mov
in
pop
and
push
dec
mov
cld
xchg
icebp
popa
xchg
mov
sbb
sbb
push
imul
add
dec
and
test
ds
cs
push
sub
mov
pushw
ss
add
adc
pop
fld
cmp
xchg
xchg
xor
dec
int
push
pop
mov
add
cmp
cmpsb
cli
aas
test
cmp
adc
sub
xchg
punpckhbw
sub
mov
mov
in
andb
sub
mov
into
test
pop
ret
stc
pop
fsubrl
mov
inc
decl
mov
test
cmp
cltd
out
inc
mov
call
mov
hlt
mov
sbb
sbb
xchg
add
insl
sti
loope
sub
outsb
lock
push
aaa
imul
outsl
sub
cmp
fistl
pop
jp
aas
adc
or
stc
ret
pop
xor
and
or
in
popa
xor
dec
and
cmp
pop
xor
add
hlt
inc
hlt
pop
repz
pop
lret
sbb
outsb
dec
je
adc
ss
clc
xchg
mov
xor
jns
jns
mov
int
and
xorw
data16
js
pop
cld
sbb
imul
push
push
hlt
out
add
dec
popf
rorb
popa
lret
fimuls
adc
or
pop
pop
das
popf
mov
cmp
cs
mov
mov
ss
aam
cmpsb
pop
push
loopne
mov
repnz
loope
jae
ss
inc
mov
icebp
sbb
ret
inc
andb
or
sbb
jg
sbb
mov
xchg
bound
cmp
xor
aam
ret
jne
inc
and
rorl
fldt
insb
aam
mov
xchg
dec
pop
inc
insl
iret
mov
xor
xchg
xchg
pop
fwait
cmp
pop
ret
inc
stc
push
jne
dec
sti
and
arpl
cli
jge
sub
adc
sub
xchg
mov
inc
jmp
and
nop
fisubrl
mov
jne
pusha
enter
xor
push
mov
loopne
cmp
and
push
dec
int
cmp
fidivl
pop
mov
dec
loope
rcll
jne
jo
push
fcoms
adcb
push
insl
jmp
mov
adc
sahf
test
jmp
arpl
int3
or
mov
jecxz
out
jne
aas
imul
cmp
lods
into
mov
call
xchg
daa
jle
outsl
adc
sarb
pop
xlat
sahf
adc
mov
push
aam
sub
test
movsb
push
imul
adc
sbbb
cltd
repz
sarb
inc
inc
jle
fcomps
xchg
repz
idiv
and
loopne
xchg
xchg
mov
rorl
shr
fnstenv
stos
mov
std
push
cltd
mov
pop
xor
mov
pop
adc
push
or
and
arpl
add
mov
fidivrl
pop
insb
mov
pop
dec
lods
push
out
daa
pop
sub
mov
or
mov
enter
inc
fnstsw
rcll
mov
insl
and
les
test
aaa
inc
jne
mov
add
or
sub
push
xor
mov
out
pushf
pop
lds
insl
mov
or
mov
cld
bound
jp
stos
lea
data16
inc
movsb
pop
add
pop
sbb
jp
mov
pop
sub
in
and
jb
sbb
xchg
adc
cs
or
xor
fmuls
leave
xchg
push
imul
or
and
xchg
shrl
push
outsb
out
ljmp
stos
inc
dec
fcmovnbe
and
push
lock
adc
xlat
js
scas
lods
ret
mov
sbb
mov
push
aaa
stc
adc
sub
sahf
pop
cmp
xchg
rorl
jne
popf
test
lcall
xor
mov
add
mov
pop
in
daa
adc
sbb
add
xor
cmp
push
mov
mov
mov
xlat
or
sub
mov
lcall
xchg
inc
dec
pop
scas
lea
mov
jbe
jg
mov
xor
and
popf
sbb
add
mov
jnp
dec
xchg
subl
xorb
inc
aam
jne
lock
or
fidivl
ftst
aam
cmp
clc
daa
out
cmp
sub
rolb
sub
test
jae
sbb
insl
inc
pop
jl
dec
jne
add
outsl
mov
out
push
call
out
lahf
cmpsb
clc
and
sub
xchg
ds
ljmp
lods
adc
popa
mov
push
sub
pop
jp
xchg
and
test
dec
js
mov
inc
in
dec
push
fistps
or
and
xor
scas
pop
inc
in
jo
imul
xor
add
inc
dec
fcmovnu
fistpll
inc
movsb
insl
lret
lods
adc
aaa
inc
add
cmpsl
sbb
test
mov
or
lods
je
and
out
fiaddl
xchg
outsl
xchg
outsb
xchg
aam
test
adc
test
fcomp
push
push
imulb
and
add
in
ds
push
xchg
sbb
mov
or
fs
inc
lcall
leave
gs
cmpsl
jge
and
in
setb
lods
mov
imul
mov
pop
in
cmc
in
sbb
xchg
test
in
pop
in
iret
dec
fsubrs
mov
sub
dec
dec
lock
cmc
out
mov
jmp
mov
and
push
test
cmp
mov
push
push
movl
or
adc
xorl
test
rclb
or
stos
pop
fistpll
outsl
sbb
aad
aam
mov
in
loope
mov
js
inc
lret
rcrl
sub
jge
leave
cmp
icebp
add
ss
insb
mov
jmp
adc
jl
sbb
jl
pop
adc
shrl
xchg
mov
mov
hlt
pop
jmp
pop
jmp
shrl
sbb
adc
test
jne
jg
and
pushf
ret
or
dec
add
xchg
cmp
push
std
in
rcll
push
test
xchg
add
mov
mov
push
in
jne
mov
bound
pop
stos
rep
stc
xchg
out
dec
jmp
xlat
sahf
sub
xor
pusha
adc
sbb
in
dec
loopne
addr16
add
xor
jmp
sub
cmp
test
sbb
insl
mov
pop
jge
adc
push
mov
mov
add
push
or
orb
out
in
aad
dec
mov
insb
push
cmp
aaa
je
mov
lea
out
hlt
fwait
lods
jno
add
into
dec
xor
std
dec
or
mov
adc
out
add
imul
cli
js
push
rcl
sub
addr16
inc
push
xor
sub
mov
jno
shll
pop
mov
add
call
push
jp
xor
jbe
mov
pop
dec
mov
sub
and
mov
mov
push
ffreep
inc
inc
int3
fsubrl
cmp
jmp
pop
pop
fistps
in
dec
xchg
into
or
sbb
in
jnp
in
ss
or
stc
cs
cmp
movsb
sub
adc
and
insb
leave
movsb
fisubrs
icebp
sbb
and
jg
cmp
in
mov
pop
xchg
jmp
adc
inc
imul
mov
cmc
and
sbb
js
mov
sbb
pop
fisttpll
ss
push
mov
test
js
aam
loopne
das
adc
pop
out
jge
sahf
xor
cltd
mov
push
je
aaa
mov
push
mov
jbe
fs
mov
mov
pop
ss
jp
mov
mov
and
frstor
cmovb
cli
or
xor
mov
imul
in
mov
inc
aad
imul
add
mov
roll
ret
sbb
cmp
je
and
int3
xchg
popf
mov
or
je
push
movsb
cli
into
aad
sub
sbb
add
pop
pop
daa
data16
test
in
out
adcb
add
aad
xor
lock
adc
popf
dec
stos
push
into
insl
inc
imul
leave
lock
and
ret
in
push
lcall
int
insb
out
fnstsw
out
mov
fbld
push
jecxz
jb
addb
ja
sub
in
cmp
aam
cmc
or
loope
fisubrl
and
adc
push
pop
xchg
stc
xor
push
fsubr
arpl
jmp
xor
dec
ss
adc
cld
push
push
mov
jecxz
ret
jns
or
or
arpl
inc
stc
xchg
xor
lcall
pushf
push
xchg
fwait
sbb
iret
int3
scas
js
cmp
or
xchg
pop
pusha
mov
pop
sbb
lods
inc
lods
add
add
clc
inc
push
scas
flds
jae
stos
xchg
out
aaa
loope
cmp
ret
mov
fs
sbb
fsts
xchg
cli
mov
adc
int3
xor
into
scas
cmp
and
mov
out
jb
lds
mov
stos
test
xchg
and
or
mov
xchg
mov
repnz
mov
jns
stos
jecxz
inc
repnz
fcmovnbe
popf
fimull
movswl
cli
inc
pop
add
lret
xchg
or
cmpsl
and
xchg
fists
fnstsw
dec
xchg
push
xor
lret
ret
xchg
mov
mov
and
inc
xor
mov
push
mov
es
loope
fdivrl
fisttpll
pusha
dec
adc
cmp
xlat
push
aad
dec
out
pop
mov
jg
jmp
jmp
aaa
jno
bound
xor
jo
jnp
inc
loop
jno
clc
cmc
out
push
push
inc
jno
xchg
lret
lcall
pop
gs
cmc
aas
jae
add
sub
inc
push
inc
dec
mov
lcall
enter
push
inc
lcall
stos
mov
and
pop
mov
jecxz
call
daa
dec
or
mov
push
jo
aaa
dec
ja,pt
xchg
xchg
ja
rclb
xchg
nop
xchg
sti
or
cmpsl
inc
aas
and
test
fdivr
pop
enter
fidivs
notl
and
movsb
inc
dec
xor
xor
out
in
imulb
ja
loopne
call
mov
xchg
lcall
xor
clc
es
add
jnp
aas
inc
out
or
inc
es
addr16
ffreep
lahf
popw
lods
or
movb
loope
adc
mov
pusha
stc
mov
ret
test
popa
adc
loope
jbe
repnz
and
add
mov
pusha
xor
xchg
out
jb
cmp
pextrw
gs
andb
ljmp
das
in
dec
popf
pusha
inc
cmp
mov
push
jae
inc
loop
dec
lea
add
ljmp
lods
addr16
es
call
push
or
push
hlt
push
aam
mov
jnp
add
push
rolb
pop
or
insb
out
dec
push
or
shrb
dec
mov
fs
xor
push
addb
mov
mov
int
push
jl
mov
push
test
jp
cwtl
call
pop
adc
and
out
sbb
dec
roll
or
cld
loop
push
push
push
iretw
cmp
xchg
pushf
std
inc
jg
push
cmp
out
dec
dec
shrl
arpl
mov
pop
jecxz
mov
enter
iret
out
dec
cld
adc
push
icebp
xor
adc
insb
pop
movsb
xchg
mov
add
and
push
cmp
pop
fwait
and
or
jmp
xor
in
push
outsl
mov
test
mov
or
sbb
cmp
mov
gs
mov
jle
fisttps
mov
icebp
jle
movl
pop
mov
pop
mov
push
jae
push
faddl
dec
push
pop
lret
fwait
xchg
fisubl
fstl
int
jnp
add
pop
fisttpl
lret
jo
inc
cltd
gs
sub
mul
push
sbb
cmp
aam
int
mov
sub
xor
scas
mov
sahf
mov
ret
push
cli
or
sub
mov
arpl
push
sub
sbb
jmp
jge
add
push
push
andb
xchg
pop
dec
jmp
into
imul
ss
and
cmpsl
dec
push
lock
into
sti
mov
mov
lds
mov
movsl
xchg
mov
in
fistpll
ss
xchg
add
and
xchg
std
adcl
mov
add
xchg
negb
jbe
push
popf
adc
js
xor
sbb
xor
outsb
push
out
rolb
cltd
or
imul
inc
iret
aad
repnz
dec
sub
or
negb
pop
xchg
jbe
ficomps
imul
mov
push
sbb
push
dec
sub
push
mov
es
fistpll
mov
bound
and
hlt
fstl
dec
das
xchg
cs
rorb
xchg
pop
push
rolb
jne
seta
cmp
jnp
sub
stos
addb
je
mov
sbb
cld
adc
dec
std
adc
xorb
or
inc
movsl
daa
mov
addr16
ret
into
imul
stos
je
mov
movsb
insl
gs
adc
repz
aaa
dec
in
ror
or
cmpb
loop
add
imul
jmp
cmp
lods
mov
fsts
inc
jge
idivb
inc
lds
ja
lea
mov
jnp
add
in
dec
loopne
ja
out
sti
xchg
sub
cmp
pushf
imul
xor
jne
dec
sbb
jge
and
sub
insb
xchg
dec
rorl
mov
mov
hlt
cld
jns
cs
jne
bound
sbb
movsl
fadds
lea
lea
sub
push
sbbb
jl
xlat
dec
mov
rorb
pop
repz
stos
mov
adcl
in
pop
push
add
ja
cmp
ss
adc
or
out
jbe
clc
and
xchg
add
ds
add
push
add
sbb
sahf
out
cmp
pop
and
fistpll
mov
jbe
jns
xchg
xor
filds
mov
leave
pop
jl
xchg
and
dec
lahf
test
and
sahf
in
mov
mov
loope
fistpll
adc
dec
dec
cmp
shl
stos
jp
insl
cmp
in
add
mov
or
add
mov
mov
popa
jnp
adc
aaa
stos
push
sbb
sub
adcl
dec
jecxz
adc
ljmp
add
inc
xor
je
jae
lods
test
in
push
mov
push
adc
cmp
or
int
insl
out
inc
stos
in
xor
call
pushf
mov
and
jmp
and
lods
hlt
aad
xchg
push
mov
out
mov
fadd
or
mov
or
dec
pop
movsl
insb
jle
call
add
and
dec
and
loop
inc
stos
xor
enter
pushl
add
outsl
lock
and
inc
mov
add
imul
jecxz
and
mov
add
addr16
mov
iret
sub
fildl
inc
mov
lock
pop
movsl
stc
fmull
lea
sahf
pop
popa
mov
inc
adc
inc
xchg
imul
out
in
xor
aad
xchg
ret
inc
inc
or
xchg
arpl
ljmp
or
gs
push
cmp
sub
mov
popf
iret
mov
inc
sbb
adc
push
push
jnp
adc
repnz
sbb
mov
or
cs
fs
rcl
leave
mov
inc
fstpl
fsts
ja
xor
xor
xor
cmp
sbb
aad
inc
jo
in
xchg
rcr
push
sahf
jno
iret
pop
pop
imul
pop
jbe
fs
dec
mov
xchg
popa
cmp
jmp
inc
popf
mov
gs
mov
xchg
scas
cltd
lret
test
rorl
test
std
jmp
jle
jnp
jp
bound
pop
loope
mov
push
test
sub
imul
shlb
hlt
mov
sbb
push
nop
add
les
std
push
push
cli
push
les
rcll
lods
inc
mov
ror
dec
push
push
xchg
sbb
jnp
xchg
out
mov
mov
mov
or
loope
orl
outsl
mov
jge
bound
jo
jge
rcrl
mov
push
push
loopne
pop
cmp
or
test
mov
aas
enter
nop
pop
or
push
mov
pop
gs
and
imul
sbb
mov
or
cmc
dec
cmp
xchg
jecxz
pop
sbb
les
adcb
inc
sub
js
pop
cli
sub
xchg
add
lods
push
pushf
xchg
scas
sub
add
mov
xor
ljmp
xor
add
imul
cmp
fisttps
dec
mov
out
lock
ret
pop
jo
shlb
adcb
push
stos
ss
clc
cs
jp
testb
inc
inc
xor
cmp
pop
inc
pop
icebp
cmp
sbb
xor
lods
das
popf
notb
loope
xchg
jge
gs
rcrb
aas
adc
mov
popf
inc
div
jae
fcomps
add
mov
imul
mov
pop
stos
rol
ret
iret
mov
icebp
imul
mov
jmp
movb
scas
outsl
in
call
std
pusha
jbe
add
lods
sahf
lret
inc
rol
dec
shlb
pop
add
imul
dec
cmpsb
mov
fisttpll
push
adc
push
dec
enter
ja
pusha
dec
cmp
sub
mov
shll
frstor
stos
ret
and
cmpsl
cmp
aaa
rorb
add
sbb
fsubrs
inc
inc
mov
jp
and
aas
lea
fsubrp
pusha
jno
xor
adc
pop
int
fadds
inc
aam
push
subb
mov
xchg
neg
or
xchg
pop
unpckhps
push
ficoml
inc
pop
cmp
mov
and
adc
pop
mov
mov
call
test
mov
fwait
call
jb
xchg
mov
bound
mov
repnz
inc
addl
loope
sbbl
sub
jp
ljmp
or
shll
jno
xor
aam
cld
or
pop
push
dec
sbb
movsb
ja
push
movsb
loop
xchg
jns
cmpsl
fnstcw
inc
test
xor
push
and
scas
adc
pop
inc
andl
sbb
lahf
and
pop
dec
shrl
sti
add
sub
xor
sub
inc
inc
push
adc
pop
pop
or
sub
or
pop
fdivs
loopne
test
setbe
test
xchg
jg
lock
arpl
mov
movsl
mov
mov
cmp
mov
jb
xchg
pushf
rorl
inc
jl
inc
bound
cmp
orl
daa
aas
and
flds
fsubs
lock
fcmovb
push
ds
nop
add
test
or
xchg
add
add
ret
or
fcompl
cmp
mov
sub
inc
inc
enter
adc
jae
fisubrl
mov
inc
je
xor
adc
mov
push
mov
xchg
sub
mov
insb
mov
inc
mov
xchg
repnz
xchg
xchg
pop
adc
push
ljmp
aaa
stos
cwtl
xor
push
test
and
out
lods
and
cld
push
dec
frndint
mov
ja
and
arpl
push
subb
ss
or
jb
sahf
imull
push
or
inc
xor
aaa
jmp
add
add
aad
pop
cmp
fimull
cmp
cmp
jmp
lret
orps
outsb
fyl2x
xorl
fdivrs
dec
rcrb
divb
and
xor
or
ljmp
push
lret
test
or
mov
pusha
pop
cmp
popf
cwtl
xor
push
mov
xor
fistl
inc
sub
popa
mov
and
sub
popa
mov
lods
aad
stos
ret
out
adc
xchg
mov
inc
add
sub
push
and
and
rcrl
or
fidivs
mov
test
sbb
ret
ds
movsb
pop
dec
in
jb
das
popa
add
push
mov
pusha
insb
xchg
jg
push
fdivrs
push
sub
loop
cmp
push
adc
mov
bound
mov
fwait
mov
xchg
or
mov
lods
cld
fsubrs
adc
das
lret
jmp
push
idiv
jnp
outsl
clc
dec
out
or
lcall
test
mov
jnp,pt
xor
in
lret
cmp
shll
fmuls
and
inc
adc
andb
cmpsb
dec
push
sahf
mov
push
stc
js
sub
psubb
leave
or
cmpsl
pop
addr16
in
xchg
nop
mov
mov
sub
leave
add
jecxz
popf
aad
xchg
add
push
inc
js
mov
and
popa
inc
repz
arpl
jno
jno
cmc
clc
xchg
inc
lods
inc
lds
pusha
mov
js
jae
outsl
daa
add
call
mov
nop
and
sbb
pop
add
ds
mov
aas
rorb
lcall
push
jnp
mov
in
repnz
bsf
add
adcb
dec
pop
repz
xchg
and
orb
test
jno
fstpl
add
imul
xor
xadd
lret
jae
sub
or
gs
mov
mov
inc
test
loope
sbb
jnp
dec
subb
and
out
repnz
lock
ret
jmp
push
ds
pop
sbb
nop
mov
sti
jge
xor
adc
aaa
sub
jl
cmpsl
add
mov
repz
ret
mov
push
dec
scas
gs
loope
or
xor
cmpsl
and
lock
sbb
xchg
add
jle
add
shrb
bound
dec
add
sub
sub
push
aas
cmpsl
jecxz
rclb
je
pop
mov
stos
xor
bnd
adc
mov
test
sbb
nop
cmp
sub
xchg
cmp
push
sahf
xor
fsubrs
and
push
push
mov
sti
mov
test
xor
loop
bnd
gs
mov
lods
cmp
insb
popl
cmp
jb
cmpsb
imul
fs
or
push
repnz
ds
ds
int
dec
xor
jbe
outsl
mov
and
jl,pt
lods
inc
mov
fucom
test
push
insb
std
in
clc
jmp
and
cmovs
insl
push
enter
and
stc
adc
aaa
pop
add
cs
fs
hlt
fbld
cmp
sbb
lds
dec
jb
test
dec
mov
cmp
and
in
fwait
lock
sub
xor
mov
divb
fdivl
in
sbb
lock
push
mov
jne
mov
mov
add
fistpll
push
pop
sub
push
scas
xchg
pop
iret
imul
push
push
lock
lds
std
ret
out
addr16
xor
clc
pop
or
xor
jo
jne
dec
sub
inc
repz
mov
add
ret
dec
out
sub
mov
sub
cmc
xchg
mov
mov
stos
test
sti
inc
add
std
xchg
mov
or
into
rclb
scas
cli
xor
imul
divl
mov
xchg
out
dec
sub
add
shlb
add
and
add
jp
mov
push
cmpsb
push
cli
jle
mov
push
in
fisubrs
test
iret
lret
test
pop
pop
or
adc
pop
push
loop
cmp
movsb
ds
mov
je
xlat
cmpsl
movsb
filds
cli
das
insl
cmp
xchg
and
outsl
arpl
cmp
jmp
sub
orb
jmp
inc
sbb
aad
mov
xchg
icebp
icebp
sub
in
mov
sbb
push
or
mov
and
mov
xor
jbe
aaa
cmp
jae
pop
lret
shr
icebp
pop
push
pop
pop
fiaddl
jno,pt
pop
jns
roll
imul
jbe
stos
lret
jecxz
aaa
pop
xchg
mov
cld
push
call
repz
mov
xlat
icebp
inc
inc
fidivs
xor
inc
push
daa
inc
sbb
cmpsb
inc
add
push
or
test
stos
push
adc
or
outsl
jnp
shl
adc
or
daa
mov
mov
jecxz
mov
jbe
fsubrl
sub
xchg
mov
xchg
mov
sti
mov
jnp
xchg
lods
inc
lods
mov
pop
push
mulb
lcall
aam
add
lss
jle
push
idiv
or
fcoms
jp
adc
mov
into
dec
or
mov
pop
dec
sub
and
sub
insb
push
stos
pop
jl
js
insl
mov
addr16
jecxz
pop
mov
popf
sahf
out
lds
jns
mov
dec
mov
xlat
sar
filds
adc
inc
jne
jno
mov
cld
iret
imul
pop
fs
cmp
icebp
mov
cmp
inc
cmp
adc
rcrl
cmp
adc
call
sti
loope
mov
mov
repz
sub
aam
lds
das
inc
in
xor
xor
sarl
sbb
jecxz
jae
jp
mov
imul
sbb
das
test
roll
std
cmp
aad
jae
rorl
cmpsb
sub
orb
mov
jne
xor
outsb
push
jmp
dec
cmp
ret
add
aad
out
fsubrl
lds
aaa
lds
std
cmc
insb
mov
mov
inc
adc
mov
into
push
clc
inc
cli
cmpsb
cld
or
mov
pop
insl
and
xchg
push
ljmp
jp
push
mov
add
xchg
lcall
les
and
out
jp
lcall
addl
add
push
jge
call
pop
in
sbb
in
xlat
fwait
cwtl
out
pop
cmp
push
faddl
jbe
movl
loopne
push
ja
jp
mov
pop
loope
dec
mov
sub
std
cwtl
bnd
pop
into
pop
cmp
mov
push
inc
popf
ret
sbb
pop
mov
xchg
mov
ds
fmul
mov
adc
sbb
ret
and
int
sbb
aad
loope
sbb
pop
xchg
pop
mov
int
xchg
inc
dec
loop
test
fsubs
insl
mov
xchg
pop
inc
add
daa
lcall
cld
imul
push
add
mov
pusha
loop
jno
sbb
xchg
ss
or
and
sub
lods
xlat
iret
lods
push
fcoms
mov
les
cmp
mov
mov
pop
push
hlt
cmpsl
pop
movsb
add
inc
pop
test
pop
test
and
pop
push
and
stc
push
int
call
out
cmc
hlt
outsl
mov
daa
jnp
mov
sbbb
fisttpll
les
test
test
iret
lret
outsl
cld
out
loope
pop
jge
add
add
jae,pn
decb
or
fistpll
and
and
xor
or
jl,pn
mov
mov
and
ljmp
xor
sub
dec
cmpsl
push
das
jmp
loopne
addr16
lods
xor
add
repnz
xchg
or
adc
xor
or
and
repz
iret
dec
test
pop
js
shll
add
pop
jle
mov
pop
adc
cmp
cmpsl
fisubs
cli
mov
and
mov
push
sarb
int3
lods
icebp
lahf
movsb
lcall
std
sub
pop
or
jmp
in
cld
orb
lea
pop
cld
cmp
cmp
sbb
sbb
lods
out
imulb
or
loopne
push
fwait
es
adc
cmpsb
es
loop
xor
sbb
data16
pop
mov
idivl
sbb
out
add
jbe
mov
daa
outsb
cwtl
and
push
aaa
jne
cmp
dec
sbb
ljmp
js
dec
stc
hlt
pusha
or
xor
push
popf
xchg
addr16
loope
imul
int3
test
jb
add
and
insl
mov
cmc
fldt
gs
add
mov
scas
dec
cmpsb
xchg
into
mov
jmp
ret
sbb
push
arpl
imul
add
cmpsl
test
pop
sbb
lock
mov
xchg
pop
sar
jns
add
cltd
mov
addb
movsl
and
xor
cmp
pop
adc
fmuls
icebp
jmp
mov
mov
sbb
pusha
xchg
jne
dec
cltd
test
or
out
cmp
movb
ds
cmpl
mov
push
hlt
cmp
sub
jnp
push
std
add
adc
cmp
negb
adc
push
sub
inc
addl
mov
mov
mov
sub
xor
shlb
in
stc
ficompl
push
in
out
in
xchg
jmp
inc
cwtl
xchg
dec
sti
jb
mov
and
and
sub
and
cmp
lret
xlat
jnp
and
nop
sub
enter
and
in
enter
popa
ja
jl
outsl
popf
je
jp,pt
adc
or
fldcw
lcall
repz
andb
mov
xor
mov
insb
mov
fcomps
jne
mov
xchg
ds
sti
mov
out
cld
pusha
mov
gs
pushf
mov
hlt
leave
inc
in
das
push
scas
in
jg
int
movsb
sbb
call
sub
std
lcall
or
inc
jecxz
cmp
inc
xchg
nop
add
je
add
sub
fadds
sub
imul
bound
out
std
mov
cmc
mov
fwait
icebp
sbb
cmp
jp
inc
jo
nop
xchg
test
pop
fwait
aas
cs
inc
pop
pop
push
or
mov
xor
jne
sbb
cmp
mov
lahf
cli
loop
test
adc
and
decl
mov
pop
insb
xchg
mov
nop
aam
lea
shrb
push
ds
insl
lea
jmp
clc
mov
shrl
mov
pop
leave
mov
rorl
enter
mov
pop
scas
rcrb
pop
add
icebp
call
sub
cmp
xchg
mov
mov
std
shrb
cmp
stos
mov
lcall
pop
add
jg
xor
sar
push
outsl
cmp
pop
in
fdivrs
cmp
xchg
sbb
outsl
dec
lds
test
pusha
xor
iret
sbb
ss
mov
sub
pop
rcr
adc
out
movsb
aad
cmc
jmp
idiv
add
gs
sahf
adc
iret
fsubl
lret
imul
pop
mov
leave
sahf
gs
sbb
iret
jecxz
idivb
adc
pop
cmp
mov
pop
imul
xchg
dec
lret
xchg
sub
das
sbb
insl
xchg
rcrl
inc
or
addr16
fdivrs
popa
inc
xchg
dec
cmovnp
popa
cmp
movsb
test
push
mov
mov
pop
ret
hlt
dec
mov
mov
sbbb
test
in
js
daa
push
enter
orb
jp
pop
hlt
icebp
andb
dec
push
mov
js
test
mov
and
test
xor
movsb
dec
adc
mov
jecxz
call
jnp
scas
push
sub
sbb
cmp
xor
popa
sbb
adc
adc
outsl
movsb
inc
inc
adc
mov
add
add
jle
icebp
stos
push
mov
push
testl
pusha
cmpsl
or
jb
and
mov
aas
mov
fnsave
push
pop
adc
adc
push
jns
sub
mov
mov
or
mov
fidivrs
call
mov
jno
xor
mov
std
fwait
repnz
cwtl
stos
mov
outsb
hlt
adc
in
jp
sbb
fstpl
add
mov
push
lods
sbb
popf
pop
jmp
adc
mov
addb
push
dec
imul
in
outsl
adc
xchg
and
rol
mov
or
pop
cmp
add
insb
adcl
jne
pop
imul
mov
ret
movsb
fdivr
xchg
or
lret
ja
ret
aaa
mov
inc
adc
outsl
out
mov
jmp
pop
mov
mov
scas
popa
fdivs
mov
inc
push
dec
adc
push
fwait
or
pop
cmp
lds
ljmp
loope
jns
mov
and
dec
inc
and
cs
add
push
cs
and
iret
cmp
dec
adc
jns
pop
cltd
cmpsb
scas
fistpll
jne
jg
cmp
mov
out
addr16
mov
scas
and
leave
cli
xor
mov
lahf
dec
mov
inc
ss
js
fs
cltd
mov
jne
jno
jg
sub
lcall
cli
or
mov
out
insb
jmp
insb
cmp
je
icebp
jbe
mov
data16
imul
shrb
in
inc
repz
sbb
sbb
mov
jbe
and
or
push
icebp
sahf
sub
insb
and
add
lods
aam
test
int3
adc
notb
xchg
mov
lock
daa
mov
inc
aaa
sbb
mov
push
lods
cmp
dec
dec
mov
lods
mov
lods
lods
cli
stos
adc
pop
jb
push
sbb
out
cmp
mov
mov
cltd
rorl
dec
pop
xor
enter
sbb
pop
incl
pop
pop
dec
insl
js
cwtl
fiadds
adc
jg
out
loopne
loop
movsb
sbb
frstor
adc
stc
mov
stos
adc
loope
push
pop
dec
aas
dec
pusha
cli
jmp
sub
jge
sti
sbb
push
jo
adc
jo
push
sub
sbb
clc
fstps
daa
inc
pop
push
xor
movsb
and
sbb
dec
lret
or
adc
pop
lea
pusha
rclb
popa
test
loope
stc
or
call
cmc
stos
mov
cwtl
xchg
outsb
mov
ljmp
cmp
inc
xchg
lret
sahf
cmp
sbb
sar
inc
loopne
aaa
sahf
or
and
mov
jmp
ljmp
daa
vpslld
jl
add
fistl
in
mov
mov
pop
outsb
je
mov
aad
idivl
push
std
xor
lret
and
add
cmp
stos
cli
dec
enter
jno
stos
pop
into
sahf
rolb
sbb
mov
xor
inc
mov
xor
jnp
into
sub
xchg
adc
jge
sub
mov
addr16
leave
add
cmpsb
adc
sbb
cmpsl
adc
mov
fsubrl
mov
divb
daa
ret
lods
cmp
imul
push
in
out
xchg
std
or
sbb
clc
pop
imul
fnstenv
jmp
xchg
mov
or
pop
ror
insl
ja
add
push
pop
jae
inc
adc
push
add
mov
test
pushf
pop
daa
jmp
dec
pop
jae
scas
btl
cmpb
push
sub
add
sub
movsb
or
add
nop
enter
mov
in
sti
sbb
dec
mov
xor
cwtl
test
inc
jp
push
inc
loop
dec
insb
cmp
gs
push
js
adc
mov
daa
bound
xchg
xchg
cli
in
mov
cmp
in
add
pop
arpl
mov
mov
dec
mov
dec
jg
pushf
test
lahf
pop
out
std
imul
mov
jo
incl
pusha
xrelease
adc
adc
push
adc
mov
lock
mov
push
push
and
mov
mov
and
rcr
imul
fmulp
add
imul
cmp
sbb
sub
fwait
mov
imul
mov
xor
or
cmp
jb
mov
in
imul
fistpl
xchg
pop
addb
jmp
ds
mov
inc
ret
mov
and
movsl
inc
inc
lods
push
es
cld
inc
arpl
inc
mov
dec
mov
lret
pop
test
addr16
adc
add
dec
cltd
in
xor
mov
sbb
into
or
mov
hlt
lods
and
xchg
pusha
cs
push
push
nop
insb
out
into
in
push
fsub
int
inc
push
add
and
xor
inc
dec
xchg
sahf
roll
pop
pop
inc
push
dec
loopne
xor
div
in
push
jmp
iret
sbbl
pop
cmp
mov
push
mov
jns
sbb
xor
xchg
jg
mov
loopne
test
mov
and
subl
divl
cmpsl
xlat
je
inc
or
stc
arpl
pop
outsb
add
jl
loop
push
pop
add
xchg
mov
repnz
aas
xchg
scas
sbb
cmp
aad
mov
xchg
push
sti
mov
enter
les
insl
icebp
or
xor
lods
jl
mov
xor
cmp
addr16
filds
inc
mov
clc
add
cmc
push
dec
fistps
rcr
fcompl
xchg
mov
mov
jecxz
mov
imul
push
scas
push
add
push
inc
add
or
cmpsl
divl
xor
push
sbb
mov
daa
lods
insl
adc
repz
mov
mov
jae
xchg
jle
js
xchg
xlat
outsl
sub
mov
mov
dec
clc
cwtl
push
xlat
jne
xor
dec
bound
popf
insb
mov
push
addb
es
fstl
xchg
sbb
jmp
add
push
xchg
insb
stos
add
mov
mov
mov
inc
popl
sahf
or
mov
lret
lds
sub
jl
add
imul
repnz
push
inc
mov
fsubrs
rorb
xor
sbb
sbb
xor
sbb
or
push
or
roll
lahf
push
cmp
movsb
xorb
jbe
movsb
adc
jge
push
call
inc
jo
loop
cmp
faddl
dec
mov
lods
xor
je
mov
lcall
inc
jmp
inc
push
add
popa
popa
out
clc
out
mov
xchg
loop
sub
setnp
mov
out
ds
jmp
dec
bound
cmp
fsubrs
mov
iret
xchg
or
jecxz
pop
jmp
cltd
cli
xchg
mov
shll
fcoml
jbe
cmp
repz
in
push
int
mov
pop
push
lea
rorb
and
out
cmp
movsl
into
inc
insl
test
push
fmul
cmpsb
hlt
xor
lods
shlb
xor
dec
jno
imul
mov
std
add
sub
stc
mov
cmc
pop
mov
shll
jle
sub
and
pop
loop
mov
call
cmp
sub
push
lods
xor
fmuls
mov
movsl
orb
pop
add
movsl
or
xor
outsl
adc
xor
pop
lock
mov
imul
es
xlat
divb
mov
test
jle
bound
add
out
lds
popl
mov
pop
push
fmull
adc
or
arpl
dec
mov
aad
add
in
mov
mov
jg
sub
ds
pop
sbb
adc
cmpsl
mov
pop
mov
cltd
imul
sbb
popf
lret
loopne
mov
dec
out
jge
and
sub
xor
and
ljmp
push
sahf
repz
adc
loope
sahf
cmp
push
cli
and
dec
sub
sti
push
movb
push
pop
and
and
aad
sbb
popa
push
cmpsb
push
in
xor
imull
dec
arpl
lock
fists
sub
xor
pop
pushf
mov
pop
jecxz
adc
dec
ret
data16
leave
sbb
insb
jg
ljmp
xor
mov
pop
orl
sbb
jmp
daa
pop
ds
shlb
mov
and
out
sahf
arpl
stos
popa
vmread
xor
movsb
repnz
cmc
nop
cmp
mov
dec
loopne
mov
insl
movsb
outsb
arpl
fldenv
imul
sbbb
xor
add
push
test
mov
fstl
adc
cmpsl
leave
enter
outsl
out
icebp
cmp
xor
add
mov
call
mov
adc
test
mov
or
pushf
rorl
mov
mov
sub
or
inc
jmp
push
mov
pusha
push
pushf
pop
pop
mov
sub
repnz
lcall
sbb
phaddw
cmp
pop
out
sbbl
clc
lods
cwtl
movsb
mov
pop
dec
and
mov
dec
outsl
insb
sub
jmp
cmp
and
insb
push
test
or
mov
mov
sbb
lcall
push
xor
or
pop
ljmp
xlat
xchg
sub
dec
in
lods
rcll
fdivl
lahf
ret
or
push
sahf
sbb
js
int
stos
xchg
leave
lea
test
movsb
adc
ffreep
stos
ja
setbe
arpl
xor
cmc
cli
shll
push
sbb
cmp
data16
ss
arpl
inc
mov
pop
pop
dec
fldl
dec
adc
mov
push
and
daa
loop
lds
add
rcl
mov
fcoml
ret
mov
mov
or
cmp
dec
adcb
sbb
mul
jnp
ja
les
mov
dec
mov
adc
mov
mov
dec
dec
jno
clc
lahf
dec
inc
idivb
sbb
call
adc
jle
scas
roll
sarl
xchg
nop
in
fcoms
dec
stc
ja
inc
push
inc
sahf
aad
in
push
sub
es
pop
imul
cmp
cmp
fs
push
xchg
adc
mov
fucomip
jb
movsb
jecxz
lds
sahf
mov
mov
add
mov
jmp
pop
fisubs
je
outsl
fstl
xor
adc
pop
mov
cld
fdivs
and
xchg
fwait
and
mov
cmpsb
arpl
fdivs
loope
ja
mov
imul
jae
mov
or
test
clc
xchg
hlt
or
ret
and
aas
lahf
cmp
jmp
cmpsl
outsl
jle
push
mov
lock
pop
es
mov
ficomps
jnp
je
pop
xchg
inc
test
cmp
test
cmp
mov
lret
rorl
clc
test
cwtl
pushf
xchg
cmp
adc
jne
cmpsb
lods
or
popa
je
and
cmp
clc
cli
or
adc
mull
in
mov
pop
clc
je
xor
cmp
in
add
xchg
lret
outsl
stc
sub
ljmp
fmul
jae
ret
outsb
and
neg
sbb
xlat
pusha
xor
bound
lods
popl
inc
cld
mov
xor
scas
jecxz
adc
cmp
and
dec
pop
repnz
xchg
ja
cmc
daa
sub
cmp
fisubrl
gs
loope
push
enter
add
mov
push
push
mov
mov
dec
cmp
cmc
pop
mov
mov
mov
insl
cwtl
and
scas
test
in
or
mov
pop
test
dec
sub
adc
mov
stos
ret
shlb
test
pop
pop
sahf
cmp
and
add
cmpsl
or
and
aad
int
jno
ljmp
clc
mov
mov
mov
push
cmp
and
or
inc
cmpsl
and
setl
mov
sub
xchg
mov
jo
mov
push
inc
dec
push
xchg
add
push
sti
out
mov
pushf
jne
std
xchg
adc
mull
data16
cmp
sub
jbe
dec
sub
enter
dec
ja
outsl
add
ja
pop
ret
jne
xor
mov
mov
in
fidivs
mov
movsl
gs
xchg
test
cmpb
lock
add
cmp
xlat
jbe
shll
sub
jge
inc
cltd
imul
daa
xchg
cmpsl
sbb
jecxz
mov
adc
mov
adc
testb
cmp
sbb
insl
mov
xchg
cmpsl
pop
pop
pop
sbb
or
cmpsl
and
mov
push
push
lsl
mov
movsb
cmp
cmp
or
fisubl
adc
neg
je
cmp
pop
push
test
lds
ss
fwait
inc
fcompl
dec
aam
mov
fildll
push
sub
mov
push
js
andl
inc
in
pop
imul
std
aas
call
and
movsl
and
mov
adc
adc
or
dec
pop
int3
adc
xor
pop
adc
repz
add
int3
push
into
sub
sbb
out
ficompl
aam
sub
data16
mov
outsl
addr16
mov
xchg
adc
aad
cmpsl
add
out
pusha
cmp
jb
or
jbe
fwait
mov
sub
stos
add
ret
aas
fsts
cs
outsb
cmp
fidivl
pop
fdivrs
push
mov
mov
imul
loope
sub
xchg
mov
daa
jnp
jns
divb
push
inc
cmpsb
insb
ja
rcl
pop
mov
scas
fnstsw
add
jg
mov
dec
insl
lret
dec
jp
jb
xchg
lea
xor
aas
cltd
jle
mov
pop
out
adc
dec
add
add
sub
sti
adc
mov
pusha
and
sahf
xor
bound
jae
push
jge
mov
imul
int3
lret
jo
push
pop
add
adc
cs
add
xlat
xor
mov
pop
push
dec
sbb
xchg
cltd
mov
xchg
cli
ja
add
xor
mov
enter
pop
pop
xor
loope
xchg
stos
xor
insl
shr
movsl
imul
jo
cmp
lret
adc
xchg
push
lret
scas
mov
mov
testl
dec
mov
idiv
xor
pop
stos
fisttpl
xchg
popa
mov
push
inc
test
xchg
add
push
mov
add
push
sub
mov
mov
adc
dec
sub
loopne
sbb
ja
adcl
ljmp
call
stos
dec
sbb
aam
outsb
push
hlt
sub
add
jns
cmp
lret
mov
pushf
cmpsb
sub
ret
cmpsl
sub
dec
test
ja
dec
sub
hlt
mov
inc
push
sbb
mov
jmp
sbb
cmpb
pusha
scas
fldt
stos
mov
jge
adc
adc
or
jg
jae
pop
push
test
xchg
pop
and
or
in
pop
repnz
aam
or
repz
sti
sub
jnp
cli
xchg
xor
push
aam
jmp
loop
mov
mov
ljmp
pusha
repnz
mov
mov
testb
and
mov
dec
cmp
jp
in
and
lods
jno
jp
dec
cmp
lea
std
inc
mov
outsb
mov
mov
cmp
sbb
dec
cmp
and
mov
or
dec
cmp
xchg
dec
mov
push
pusha
in
pop
sahf
add
ss
inc
out
pusha
add
xchg
xchg
das
inc
mov
es
cmc
cs
cmp
popa
mov
inc
jno
out
lods
mov
jecxz
push
pop
push
mov
dec
mov
cmp
shll
lahf
ret
pop
mov
push
aas
xchg
cmpsl
dec
and
or
and
mov
out
sub
popf
push
sub
lea
flds
mov
mull
out
pop
in
imul
or
push
inc
xchg
ss
dec
js
lock
pop
orl
lret
push
mov
mov
mov
pop
dec
fs
jns
mov
sub
dec
wrmsr
les
imul
push
stos
sub
ds
add
imul
ret
jae
adc
arpl
insb
scas
mov
punpckhdq
cld
sub
addl
xchg
xchg
loop
fsts
cmpsb
or
dec
xchg
jle
jo
xor
mov
pushf
roll
add
std
cmp
sub
cmpb
inc
mov
xchg
ror
iret
or
dec
sbb
in
addr16
daa
push
std
lds
nop
cmc
int
cmp
push
out
sbb
sbb
mov
push
jecxz
xor
insl
cwtl
pop
cmpsb
out
mov
insl
add
push
inc
shl
aam
cltd
pushf
jmp
mov
mulb
outsl
pop
inc
pusha
clc
push
lret
add
repz
repz
push
jmp
shl
xor
popf
xchg
icebp
in
aaa
jns
out
jbe
imul
jl
mov
xchg
push
mov
ljmp
lea
pop
out
jb
jbe
sbb
rolb
mov
jno
adc
dec
pop
gs
out
xor
pusha
push
pop
xchg
ret
mov
adc
lcall
sbb
out
and
mov
arpl
shrb
xor
je
mov
xchg
mov
call
mov
shr
repz
and
xor
cmp
pop
jmp
xchg
test
arpl
subb
dec
mov
ljmp
shl
push
add
mov
enter
mov
sti
stos
cmc
cmc
and
leave
out
jle
aas
lock
clc
push
imul
shll
push
sahf
loopne
lahf
test
xor
mov
and
popf
cmp
mov
inc
shll
add
ret
lock
cmp
xchg
push
notl
addr16
int
inc
bound
out
mov
mov
push
pop
jnp
and
sub
xchg
enter
movsl
add
sub
dec
mov
mov
dec
add
ret
jge
jbe
das
pop
rcrb
les
xor
xor
icebp
lret
lcall
or
pop
dec
adc
daa
adc
cmc
and
lods
jecxz
sub
loopne
fsub
fildl
mov
cld
ret
push
rcr
fidivl
mov
mov
inc
fdivl
insl
xchg
in
js
bound
inc
ret
jbe
insl
pushl
sarb
inc
movsb
test
cwtl
and
jecxz
mov
fcomps
stc
inc
mov
and
in
hlt
icebp
mov
test
lea
push
in
adc
xor
or
mov
dec
mov
imul
dec
test
cmp
ja
push
push
mov
stos
inc
cld
dec
add
sbb
in
imul
das
cld
cmp
imul
push
jp
mov
mov
and
push
push
int
sub
mov
sahf
out
data16
dec
leave
arpl
jae
cs
test
call
aam
sahf
es
dec
das
out
lods
inc
fdivs
add
lods
cmp
pop
add
scas
or
dec
test
fdivp
int3
mov
or
dec
push
inc
dec
jmp
lret
add
andb
pop
xor
std
ficomps
mov
xor
popf
dec
divb
cmp
xor
push
mov
and
push
adc
imul
lds
repnz
add
pop
lock
ret
mov
test
fmull
mov
rolb
std
jno
outsl
lret
cmp
cmp
stc
loop
cmpsb
jge
mov
shlb
xchg
mov
inc
push
xor
or
inc
and
ror
repnz
pop
ds
xor
mov
sub
pop
pop
mov
imul
mulb
jo
mov
gs
cmp
and
pop
ret
xchg
xchg
mov
ja
or
fldenv
sub
loope
lret
lea
push
ljmp
add
inc
pusha
pop
mov
ss
mov
insb
stos
jo
push
and
sbb
jae
aaa
repnz
pop
test
into
pop
inc
push
lret
mov
sub
cltd
sbb
jle
dec
pop
mov
push
sub
dec
push
imul
scas
dec
shrl
sub
and
out
daa
aad
imul
pop
xchg
pop
lds
repnz
sbb
mov
and
xchg
and
push
fwait
jns
lcall
adc
adc
aas
pop
ss
fs
mov
addr16
sbb
dec
jmp
sbb
cs
lea
and
mov
lea
in
cmp
push
xchg
sahf
test
aaa
or
mov
push
in
pusha
mulb
lret
jp
dec
mov
daa
psubb
lahf
mov
pop
cli
mov
incl
sub
dec
mov
shll
fsubs
jo
pop
pop
mov
lea
push
inc
add
or
into
int3
jnp
mov
pop
out
xchg
jle
jbe
and
xchg
sbbl
jg
sub
dec
mov
test
frstor
jmp
loop
add
xchg
mov
int3
iretw
outsl
lods
outsl
in
pop
jb
inc
and
cmpb
jb
push
jmp
xchg
dec
mov
dec
bound
aas
push
mov
add
outsb
pop
test
ljmp
mov
push
cmpsl
repnz
and
stos
mov
fildll
or
fsubr
ficompl
insl
stc
dec
xchg
ret
hlt
dec
inc
add
cmc
aam
lret
push
or
leave
fucomi
pop
jge
pushl
fwait
outsb
jecxz
cltd
into
es
xchg
mov
pop
mov
mov
test
dec
jnp
dec
dec
xchg
test
push
mov
sub
mov
mov
pop
icebp
popa
fcmovnbe
or
jle
and
bound
lods
lock
jb
mov
test
xor
nop
out
push
cmp
out
shrb
jle
mov
mov
inc
pop
fists
xor
xor
sub
sub
dec
fstps
inc
xor
inc
push
sbb
or
pop
dec
mov
pop
notb
mov
xor
sbb
sbb
mov
push
mov
fidivrl
cs
clc
fwait
xchg
jmp
jne
es
cs
mov
or
jecxz
jae
cli
push
add
ror
adc
jecxz
decl
lret
and
js
xchg
push
rorb
or
sbb
dec
push
pop
jb
inc
andl
out
mov
push
inc
add
jnp
pop
or
inc
cld
lock
mov
jmp
sbb
leave
sbb
pop
push
ror
in
mov
popa
std
jbe
cmp
xor
pop
pop
std
sbb
cwtl
iret
jns
jb
add
push
xchg
push
mov
dec
pop
scas
push
nop
pop
or
push
mov
mov
je
iret
aad
out
jns
ret
inc
inc
cmp
mov
out
in
data16
mov
out
mov
mov
cs
mov
inc
jnp
cmpsb
std
fs
cmp
mov
adc
sbb
sbb
dec
in
daa
imul
mov
in
inc
or
cmp
test
sub
dec
repnz
mov
xchg
test
insb
jne
cmp
cmp
xchg
sbb
loop
aad
out
xchg
imul
fwait
cld
mov
call
pusha
fprem
pop
out
int
mov
sbb
push
loope
jnp
jge
xchg
and
addl
sbb
mov
cs
pusha
inc
and
cmp
cmp
inc
sahf
std
adcl
repnz
pop
pushf
aaa
and
bound
iret
jne
fisttps
inc
outsl
dec
aaa
pop
test
bnd
mov
jl
jecxz
or
push
xchg
ds
ret
mov
dec
outsl
call
and
or
imul
inc
insl
mov
in
fs
xchg
and
sub
inc
mov
mov
dec
mov
inc
and
mov
ficoml
sbb
mov
mov
jne
mov
lods
leave
dec
dec
or
fisubs
and
das
jbe
xchg
xor
std
in
stos
cs
mov
dec
out
sbb
pop
imul
cmc
or
xchg
mov
dec
les
loope
std
or
and
pop
xor
jae
jg
adc
loopne
ficomps
decl
pop
fimuls
push
outsb
add
js
xor
fldcw
in
pop
cwtl
nop
push
andps
push
push
push
xchg
pusha
inc
dec
cltd
test
sub
mov
test
orb
sbbl
xchg
pop
lods
mov
outsb
push
inc
mov
or
cmpsb
loop
xchg
dec
test
mov
cltd
iret
xchg
or
ficomps
sub
xor
push
mov
mov
mov
popa
or
mov
jmp
mov
mov
pcmpgtb
or
mov
shlb
pop
sub
ss
mov
data16
sub
pop
test
cmp
shll
or
mov
jmp
xchg
mov
mov
adc
xchg
ret
int
xchg
pop
jb
fadds
vcvttps2dq
or
cmp
push
or
sub
and
mov
mov
and
xchg
std
cmpl
push
pop
lahf
loopne
lahf
mov
rorb
iret
ss
stos
push
adc
cs
jmp
jbe
inc
dec
lock
push
sarb
pop
int
cmp
cmp
lret
dec
adc
or
orb
cmp
fcmovnb
mov
cmp
cs
cmp
sbb
inc
out
arpl
out
daa
jg
leave
pop
mov
sar
jae
loopne
mov
testl
ret
cld
popf
shl
cmp
sbb
pop
in
jle
xor
scas
jne
out
shrl
jnp
std
stc
call
jo
jno
adc
add
je
adc
add
test
jo
pop
sar
outsl
jmp
push
mov
or
xor
lods
mov
inc
pushl
pop
xor
sbbl
pop
fnstsw
leave
mov
push
xor
mov
fists
mov
mov
push
sbb
mov
fs
mov
jbe
sub
imul
dec
pop
fidivrl
cmp
hlt
adcl
test
ja
repnz
lock
lods
inc
scas
int3
icebp
dec
cwtl
es
sbb
pop
lds
aad
data16
lock
lock
neg
sbb
lea
push
xor
hlt
push
adc
cmpsl
push
or
pop
fcoml
push
lods
loop
or
cld
out
popa
imul
out
cld
test
cld
push
lret
sub
test
dec
out
xor
lds
fnsave
outsb
lock
mov
mov
xchg
test
out
imull
xchg
push
or
aad
addr16
fcomip
or
cltd
and
mov
inc
pusha
lret
into
xchg
dec
pop
stos
out
xchg
sbb
sub
js
mov
hlt
dec
push
dec
push
inc
pusha
sbb
out
lahf
push
dec
add
lods
xchg
sub
and
out
and
out
push
adc
jecxz
xchg
fldpi
xor
xchg
jmp
rcl
pop
mov
lcall
nop
mov
xchg
ret
out
mov
insl
shr
xchg
push
mov
arpl
mov
fwait
out
dec
add
jecxz
lds
clc
push
adc
outsb
shr
cmp
mov
jo
mov
and
adc
mov
shlb
stc
clc
inc
lcall
nop
mov
mov
in
test
subl
sbb
sub
aad
icebp
sbb
push
add
insb
pop
mov
push
push
mov
xchg
lods
fwait
mov
jmp
push
xor
mov
jmp
mov
ja
inc
int3
int
int
sbb
pop
in
pop
ds
std
lea
cmp
and
into
inc
jns
fdivrs
sub
std
sbb
and
iret
shll
adc
xchg
in
test
fstps
test
mov
mov
mov
cmp
inc
mov
mov
cmp
movsl
lods
pop
sbb
sbb
mov
idiv
sbb
das
xchg
inc
clc
push
inc
jne
xchg
subps
mov
pop
inc
pop
push
pop
cltd
sub
stc
vandps
fsub
xchg
es
fwait
mov
test
fwait
scas
inc
pushf
sar
mov
dec
add
inc
cli
dec
xor
xchg
sub
xor
xchg
push
icebp
jl
cwtl
sbb
scas
push
daa
mov
inc
mov
daa
aas
insl
sub
je
popf
lock
enter
jbe
in
imul
out
das
fstpl
das
call
iret
rcl
lcall
mov
push
pop
dec
push
mov
sub
inc
xchg
sbb
into
adc
hlt
outsb
cmp
stc
je
push
adc
cmp
mov
xchg
addr16
dec
stos
push
fbstp
mov
xlat
mov
aam
dec
jmp
out
pop
jp
push
dec
pop
scas
lcall
loope
sbb
sar
cs
mov
es
jbe
ds
mov
push
movsl
sti
sbb
dec
ja
jne
push
inc
addr16
loop
stos
out
mov
cltd
cmp
and
mov
les
imul
mov
push
shll
test
mov
pop
subl
inc
add
inc
mov
and
and
jo
push
pop
cmp
movsb
mov
mov
inc
push
inc
fbstp
les
ret
add
in
mov
cmp
mov
lcall
inc
pop
pop
mov
push
mov
xchg
dec
out
ja
sub
sub
ljmp
ss
inc
int3
pop
inc
cmp
xchg
jae
scas
mov
pop
aaa
and
sub
scas
stos
sahf
dec
ret
sbb
push
jne
add
or
add
popa
adc
imull
fisubrs
imul
fwait
mov
pop
imul
ja
jl
jecxz
jne
mov
ljmp
mov
aaa
mov
pusha
lock
dec
jno
jecxz
pop
aad
jp
sub
filds
pushf
push
add
mov
test
jbe
rclb
mov
cmp
or
std
or
cmpsb
les
pushf
fildl
in
add
push
lcall
inc
mov
dec
addr16
jo
sub
popf
and
icebp
inc
outsb
out
inc
dec
out
push
inc
pop
push
rorl
out
test
lods
jno
gs
je
mov
mov
and
and
sub
xchg
xchg
lahf
add
ficomps
adc
mov
mov
push
and
dec
dec
mov
jp
sub
out
test
jno
mov
sbb
inc
push
scas
push
xchg
sub
jg
cmp
jo
sbb
and
out
push
sub
pop
enter
mov
xor
add
loopne
test
xor
frstor
add
xor
ds
push
notb
js
lods
xor
mov
fnstsw
and
int
ret
jl
stc
push
jb
fs
mov
dec
or
push
test
lahf
inc
daa
fmull
in
aas
movsb
mov
dec
mov
jmp
adc
cmp
arpl
pop
sti
sbb
mov
or
push
ret
cwtl
arpl
icebp
out
stc
or
mov
inc
aam
inc
jb
sahf
mov
adc
test
fwait
mov
xor
push
sub
mov
nop
push
and
lret
dec
jo
push
adc
mov
jns
xchg
test
jge
sub
jae
add
cs
pop
inc
aam
xchg
pop
sbb
stos
movsl
icebp
inc
add
popf
out
lcall
cld
gs
and
call
push
cmp
addr16
xor
fdivrp
pop
pop
ss
scas
pop
pop
sbb
lock
aaa
daa
add
jo
mov
mov
cmpsl
fwait
push
xchg
fwait
cmp
mov
jge
and
incl
push
xor
inc
jecxz
lret
pop
or
xlat
push
mov
in
ficomps
mov
outsb
sahf
adc
flds
mov
shll
data16
mov
jg
adc
push
inc
mov
stos
scas
outsl
loopne
fwait
pop
or
jne
pop
jbe
cmc
inc
fcos
fstpt
mov
xor
das
outsl
or
outsb
cmp
push
adc
cli
xlat
add
pop
icebp
dec
les
test
ja
in
push
push
mov
cmpsb
add
je
push
mov
add
test
data16
cli
mov
or
ss
jae
into
mov
daa
push
mov
das
fs
stc
sub
pop
jmp
pop
and
shll
or
xchg
push
add
call
cs
mov
bound
sub
pop
or
aad
iret
pop
xchg
aas
push
int
sub
data16
push
add
ja
pop
sub
enter
cmp
add
mov
xchg
shlb
mov
pop
into
sub
mov
cmp
mov
scas
jle
or
xchg
mov
ss
jb
jle
adcb
pop
push
cmp
xchg
int3
jmp
test
jnp
xor
out
sub
adc
xchg
test
mov
je
sub
jbe
es
subb
sarl
call
rcrb
testl
add
rcl
push
fimull
ret
insl
pop
or
and
xchg
push
shlb
mov
fcoml
mov
fucomip
inc
cmp
push
idivl
push
pop
mov
jecxz
xchg
clc
ret
rolb
mov
dec
jo
dec
fisubrl
and
xor
imul
stos
mov
sbb
lea
or
adc
fildl
in
je
or
mov
mov
ret
loope
dec
sub
inc
and
outsb
sbbl
mov
popa
inc
xchg
lret
cmp
mov
data16
mov
mov
in
cltd
clc
call
pop
int
adc
lds
lock
push
dec
fstps
cmpsl
xchg
rol
jo
mov
mov
stos
mov
fdivrs
test
aaa
sbb
push
out
dec
aas
pop
push
mov
dec
xchg
cmp
stos
sbb
movb
mov
mov
sbb
sub
inc
cmp
inc
xlat
lea
sbb
inc
dec
icebp
push
and
scas
fnstcw
push
pop
push
mov
into
inc
mov
aam
inc
add
pop
test
inc
out
jns
sub
inc
cmc
in
fsts
sub
jns
mov
or
leave
loop
in
inc
enter
xchg
in
mov
das
cltd
and
add
sbb
jno
jbe
adcb
inc
sub
cli
jmp
popa
jo
jp
inc
push
xor
mov
imul
cld
enter
aam
fld
daa
loopne
shr
or
rol
repz
sbb
aam
cld
sarb
popf
daa
outsl
ja
pop
mov
sbb
pcmpeqb
mov
aam
ss
inc
mov
sub
jge
mov
nop
dec
mov
mov
into
sahf
and
lock
sbbb
lret
pop
xchg
or
mov
fldz
push
call
jmp
xchg
das
movsl
in
cmp
mov
ror
test
push
adc
out
idiv
scas
jl
sub
xchg
out
mov
mov
mov
pop
clc
sbb
pushf
xchg
adc
pop
js
sub
out
pop
pop
mov
and
adc
mov
push
push
imul
loope
jne
mov
cs
mov
jg
outsb
jp
invd
adc
xor
nop
mov
movsl
jle
and
cli
jl
into
add
xor
mov
sbb
and
xlat
out
push
sbb
and
stc
loop
mov
insb
xchg
xchg
inc
outsl
lock
loope
aad
lret
das
jae
adc
xchg
sahf
rcrb
mov
bound
faddp
frstpm(287
adc
loopne
stc
mov
xchg
sbb
scas
add
fisttpl
in
inc
add
cs
adc
adc
ss
call
outsl
int3
and
push
data16
jle
xor
pop
lret
add
push
lods
icebp
mov
daa
fwait
mov
test
outsb
or
into
test
bound
cltd
popa
outsb
pop
mov
imulb
push
inc
jbe
push
insl
mov
fcoml
out
pop
push
or
addr16
movsb
stc
into
rcrl
sbb
push
clc
outsl
std
adc
mov
xor
pop
push
adc
cs
gs
push
imul
jp
ljmp
mov
cmp
lea
jne
cmp
int3
out
fs
or
jle
cmp
rcrl
mov
outsl
xor
xor
aam
repnz
cmp
mov
xchg
lea
je
aad
mov
adc
xchg
out
add
mov
sti
push
test
loop
mov
xchg
push
pop
or
xor
jae
lahf
cli
ret
call
in
dec
popf
scas
adc
in
testb
jge
push
test
lock
add
ds
jne
xchg
push
aaa
xchg
and
loope
mov
or
lods
ret
sub
lods
sub
arpl
pop
pop
rclb
int3
mov
out
aad
sub
movb
fldenv
sub
ret
xchg
daa
std
cmc
cmc
pop
mov
ret
xchg
jno
movsb
sbb
ret
lods
jb
fistpl
jmp
fsubrs
fdiv
xlat
mov
pop
inc
outsb
leave
cld
incb
push
inc
inc
xchg
inc
orb
mov
fcoms
idivb
cmp
cs
sub
xor
fldz
xor
bts
popf
mov
or
jle
ja
jl
mov
mov
sbb
fldl
dec
test
mull
xchg
push
into
aam
lods
dec
bound
test
int3
mov
mov
push
and
mov
jg
jns
insl
mov
sbb
push
adc
call
mov
push
sub
mov
jle
jecxz
psraw
push
out
push
aam
xchg
rol
cs
mov
negb
aaa
mov
add
ljmp
sub
mov
mov
fisttpl
mov
cmp
adc
test
shlb
nop
outsl
ljmp
shlb
xlat
xchg
mov
push
jmp
scas
or
outsb
loopne
mull
aaa
mov
or
lods
faddl
xor
jns
xor
popa
mov
adc
and
cs
imul
cld
cmp
call
in
pop
add
jb
sub
or
fistpl
aaa
xchg
orl
jno
rcrl
mov
xchg
lahf
jb
jae
fbld
aas
xlat
and
cmp
jecxz
call
fadd
out
adc
out
cmpsb
pop
repnz
fwait
pushf
int
daa
xchg
shl
adc
sub
lret
sbbl
pop
mov
fs
pop
fnstcw
mov
mov
mov
addl
cmp
cmp
jmp
cmp
pop
add
or
fwait
pop
fcomps
adc
push
sub
shrl
rcll
lock
push
mov
or
xor
stos
sub
enter
lret
inc
gs
clc
sub
mov
int
fldcw
into
mov
rcrl
push
dec
dec
mov
loopne
dec
mov
es
in
add
aas
pop
mov
xchg
mov
inc
inc
cmpsl
cld
adc
aas
jae
je
xchg
insl
out
pop
fsubrs
or
xlat
jg
insb
inc
mov
pop
insb
bound
add
mov
outsb
mov
mov
xchg
sbb
repnz
push
movq
cmp
pop
dec
push
out
mov
mov
mov
loop
out
notb
dec
pop
mov
ret
inc
aas
in
int3
inc
jo
add
subb
and
mov
mov
xchg
in
adc
mov
popf
ja
sub
and
aaa
std
paddb
ret
and
jnp
xor
cmp
cmp
movsb
adc
mov
sbb
jo
fcomps
test
ds
hlt
js
test
cs
cs
fstpl
mov
test
pop
mov
sub
jmp
mov
cmp
enter
lret
in
add
lods
xchg
mov
jp
jl
xor
addr16
mov
add
icebp
adc
cwtl
int3
mov
sub
add
hlt
mov
cmp
jmp
cmpsl
cmp
pusha
lods
jmp
out
nop
xchg
daa
lods
or
add
jno
pop
ret
inc
xchg
xor
lea
aaa
xchg
sub
mov
stc
bound
cmc
dec
lock
jno
cli
roll
and
push
das
imul
cmp
add
mov
inc
rol
jo
cmp
in
sub
pop
lods
cltd
mov
stos
xor
jl
cltd
add
jns
and
push
add
mov
bound
insb
clc
cmp
add
test
cmpsl
adc
and
negb
inc
pop
or
int
fcmovnb
xor
fistpll
int3
push
or
jno
stc
mov
rcll
or
ja
jne
stc
in
mov
jae
insb
jp
sti
mov
xchg
test
mov
inc
adc
mov
xorb
jo
pop
mov
sbb
cmp
pop
mov
jmp
call
inc
jnp
push
xor
bound
testb
aam
inc
push
shlb
fldenv
in
movsb
mov
testl
test
xchg
or
sbb
inc
fidivs
mov
js
test
insb
dec
push
leave
pop
sbbl
and
shl
loopne
jge
jge
mov
repz
idivb
and
int3
push
out
insl
jns
xchg
rcrb
add
pmullw
dec
cmp
push
inc
sbb
ja
jnp
push
jp
sbb
sbb
imul
pop
lretw
sbb
pop
inc
test
arpl
mov
mov
inc
into
xlat
aas
push
dec
xlat
ret
repnz
mov
ret
xchg
ljmp
out
outsb
xor
movsw
ret
movsl
mov
push
inc
jle
add
adc
add
pop
add
ljmp
cltd
idivb
shll
je
mov
add
cmpsb
inc
inc
fwait
lahf
xchg
popa
pop
outsl
sbb
push
icebp
lcall
mov
mov
and
pop
add
jo
dec
leave
fisubl
jle
and
aas
jp
fisttpll
xchg
adc
icebp
test
shl
ret
pushf
inc
adc
push
sub
push
and
sbb
add
out
cwtl
mov
xchg
sbb
dec
mov
inc
pop
testl
pop
mov
data16
mov
push
jne
lods
mov
fmul
arpl
cltd
jle
repz
mov
xor
inc
push
les
push
jnp
pop
mov
mov
xorl
sub
jge
dec
mov
out
cmpsb
lods
adc
push
outsb
outsb
iret
push
ret
jp,pt
je
pop
jp
in
sub
inc
mov
push
mov
cld
fdiv
mov
mov
scas
or
mov
xlat
dec
mov
sbb
ljmp
test
sub
adc
cmp
mov
insb
inc
xchg
mov
jo
out
sub
inc
push
icebp
inc
jg
out
dec
jnp
or
jno
sbbl
lea
int3
cmpsl
stos
aaa
pushf
sub
fldl
sbb
inc
lret
jb
jnp
pop
and
repnz
loop
jmp
out
or
xchg
pop
push
push
xor
mov
mov
cld
negb
dec
sarb
ret
pop
pop
lcall
out
sbb
dec
outsl
mov
imul
xor
cmp
test
jecxz
dec
inc
outsb
shrb
mov
icebp
xchg
repnz
jbe
xchg
gs
test
mov
bound
or
push
cmc
das
dec
mov
xchg
mov
out
lahf
scas
add
cmp
mov
imul
mov
push
mov
dec
bound
inc
mov
ljmp
insb
fcmovbe
xchg
jbe
je
faddl
pop
xor
je
add
push
mov
inc
scas
mov
fcmovnu
add
call
jmp
in
rclb
outsl
mov
cli
xor
dec
test
sub
mov
cmp
pop
fmuls
enter
shl
cwtl
cmpsl
lds
mov
mov
iret
add
xchg
stos
jge
dec
pusha
call
jae
lret
popf
sbb
add
sbb
rolb
leave
data16
lret
or
cmp
mov
inc
mov
jp
mov
jecxz
inc
loope
or
int
or
js
das
sahf
push
and
loopne
nop
mov
mov
and
movsl
repnz
inc
and
cmp
imul
icebp
cld
lods
lock
stc
xchg
sub
repnz
mov
xlat
fildl
cmc
jmp
out
mov
dec
add
addr16
inc
dec
xchg
sbb
fdivs
pop
repnz
push
mov
call
loop
sahf
out
add
cmpsl
scas
mov
pop
ds
lods
shrb
pushf
cmp
fldt
out
test
clc
dec
pop
add
xlat
or
pop
mov
dec
es
inc
push
imul
mov
std
cmp
addb
rorb
cmpsl
mov
mov
mov
imul
sbb
in
xor
inc
out
mov
inc
aas
mov
xchg
jecxz
or
es
pop
adc
xchg
xchg
xchg
lea
rorb
mov
or
sbb
push
xchg
clc
js
cmpsb
xchg
jmp
cli
insb
icebp
mov
nop
add
jp
sbb
push
xor
inc
xchg
movsl
adc
addb
mov
push
cmp
sub
xchg
xor
iret
leave
addb
inc
push
stos
pop
dec
andb
outsb
sbb
inc
sbb
popa
xor
sti
xorl
jne
and
mov
add
pop
arpl
xchg
std
cltd
jb
push
lods
enter
xor
push
cmpsb
sahf
and
fxch
xchg
scas
test
cmp
addr16
pushf
mov
lret
test
stos
add
notb
call
xorl
xchg
sarb
push
dec
inc
jno
xchg
pushf
mov
mov
adc
mov
dec
add
sub
dec
rclb
dec
js
loopne
jno
sub
stc
xchg
dec
xor
pop
jmp
xor
repnz
mov
addb
sarl
loop
mov
xor
inc
sub
out
mov
scas
andb
pushf
shlb
je
leave
pop
hlt
xchg
xchg
jp
out
xor
cmc
xor
aam
mov
lret
xlat
adc
fs
cltd
mov
dec
ds
fnstenv
push
ljmp
jb
add
adc
xor
mov
sub
lea
mov
adcb
rorb
xchg
jbe
lods
aaa
jle
out
mov
or
adc
mov
jg
sar
movsl
or
inc
ss
dec
outsb
pop
fldt
dec
repz
xchg
push
xchg
pop
xchg
movsl
fcoml
jp
lea
xor
mov
lahf
and
jle
inc
out
sbb
in
out
subb
jne
pop
imul
jb
pop
xchg
ss
mov
cmpsb
popf
ljmp
popa
out
out
sbb
cwtl
sub
test
subl
ljmp
arpl
iret
mov
mov
or
pop
outsb
inc
pop
fldenv
xchg
out
mov
dec
popa
dec
out
scas
std
cmp
cmp
mov
jne
inc
decl
push
jns
mov
mov
mov
mov
adc
int
lahf
or
add
or
sub
js
out
jle
mov
and
fildl
aad
lds
sub
in
xor
lods
cld
or
xlat
jl
cmp
outsb
lcall
xchg
fisttpl
insb
lcall
pop
and
mov
int
call
add
add
jmp
ja
add
repnz
and
cli
out
or
or
enter
push
pop
mov
mov
jge
push
adc
in
test
push
lea
mov
cld
dec
mov
rorl
cli
xchg
jae
cmp
mov
and
movsb
jmp
sbb
mov
push
dec
in
icebp
mov
jecxz
push
mov
shlb
add
sub
pop
push
divb
pop
dec
adc
adc
mov
jge
jns
and
adc
lods
leave
xchg
outsb
stos
pop
out
push
push
adc
inc
mov
test
movsl
adc
xor
cmp
mov
hlt
sti
mov
sarb
dec
fsubr
repz
in
mov
stc
subl
adc
aaa
xchg
push
pop
filds
ljmp
inc
jo
mov
int
lock
pushl
cltd
leave
lock
push
or
ret
stos
jecxz
push
loopne
pop
pop
jno
idivb
std
xor
jnp
in
lret
ror
pop
inc
jae
xor
add
out
les
dec
xor
xchg
mov
push
cmc
scas
in
js
in
pop
xor
ljmp
push
fsubl
test
pop
jnp
cmc
mov
sti
aam
ja
stos
lds
jmp
inc
in
adc
mov
lret
sbb
adc
cmpsl
dec
sbb
scas
pop
push
jne
ds
les
push
imul
outsb
mov
in
jns
xchg
mov
adc
mov
and
mov
pop
jae
jbe
data16
mov
aas
pushl
mov
inc
jb
sub
cmc
scas
and
mov
push
push
sub
mov
fistpll
cmc
sub
ret
and
stos
lret
sbb
das
test
mov
or
mov
xchg
mov
add
rorb
daa
pop
cltd
lea
ja
push
and
aad
add
xchg
test
daa
pop
loop
jbe
incl
or
push
je
push
add
jne
mov
jbe
mov
out
mov
call
and
out
sbb
sub
mov
movb
pop
jmp
test
adc
adc
ljmp
les
lea
movsl
insl
inc
and
sbb
test
flds
xchg
push
out
js
mov
push
ljmp
outsl
loopne
scas
sub
jmp
sti
in
mov
in
mov
jnp
aaa
inc
xchg
nop
in
loop
sarl
insb
cli
arpl
ret
aaa
subl
ss
sbb
sbb
inc
test
cltd
sub
ds
das
dec
repnz
xor
sub
insl
sbb
arpl
repz
adc
push
push
loopne
xchg
push
cmp
mov
mov
rclb
and
mov
push
lcall
enter
mov
test
bnd
fcom
orl
shlb
mov
jg
sbb
cmp
fists
idivb
andb
fiaddl
sub
shlb
cltd
mov
hlt
in
xchg
or
xchg
ljmp
jne
pop
sub
sbb
fs
cmp
daa
pop
fwait
decb
cmpsl
insb
lds
testl
sub
pop
pop
mov
push
push
xchg
xlat
adc
pop
call
sub
or
mov
negl
sub
loop
out
push
jp
mov
ss
jbe
movsl
loope
add
mov
push
dec
push
lock
push
pop
jo
adc
nop
pop
pop
insl
fdivrl
push
and
add
loopne
sbb
dec
test
stc
sub
popf
insb
scas
test
adc
scas
aas
sbb
mov
shlb
pand
stos
pop
and
xchg
push
xor
shl
add
pushf
loop
out
jne
sbb
loope
inc
test
dec
add
xor
out
lret
mov
jg
call
cmp
push
push
pop
js
enter
mov
in
sub
hlt
push
jl
inc
lcall
fwait
push
daa
jge
das
cmp
arpl
dec
nop
pop
xorb
pusha
mov
out
sbb
aaa
lock
xchg
sbb
or
xor
dec
rsm
jg
ret
xor
mov
or
push
in
lcall
xchg
jle
outsb
jbe
xchg
repnz
push
movsl
xchg
mov
mov
cltd
inc
mov
daa
cwtl
stc
mov
mov
mov
inc
push
mov
and
iret
fisubs
dec
push
shrl
ret
xchg
jge
jne
div
inc
nop
lock
arpl
fdiv
adcb
inc
lret
cmpsb
cmp
add
or
xchg
std
push
or
lea
pop
jnp
pop
sbb
jp
adc
dec
inc
pop
inc
fisttpl
jno
repnz
mov
enter
in
int3
or
testb
hlt
popa
xchg
push
outsl
arpl
and
stos
or
dec
test
setae
mov
int
outsl
mov
push
testl
sub
or
dec
mov
cli
xor
xor
adc
sti
mov
sub
xor
ds
xchg
lods
mov
or
add
sub
pop
xor
mov
cmp
cmpsb
adc
adc
cwtl
icebp
pop
push
jo
stos
mov
cmp
es
enter
push
mov
sbb
dec
data16
adc
int3
adc
shlb
aas
sub
dec
scas
dec
ja
xchg
jecxz
aas
clc
jmp
jl
fcmovne
xor
jg
subl
fistpll
mov
gs
push
sub
test
mov
hlt
push
flds
pop
or
add
icebp
inc
lret
jl,pn
cmpsb
jne
pushf
and
xchg
bound
inc
xchg
adc
test
and
pop
test
inc
mov
jp
fxch
loopne
push
xlat
jne
mov
in
pop
addr16
inc
sbb
adc
cmp
add
dec
subb
add
sarb
ret
cmpsl
int
fwait
into
or
fnstsw
add
xchg
fsubrl
lods
sub
inc
add
xor
lea
push
adcl
cwtl
mov
cmp
in
jge
or
mov
push
jge
lret
movsb
sub
cmpsb
pop
test
inc
scas
mov
repz
rolb
stos
pop
mov
mov
xor
sub
jae
pop
movsl
or
or
sub
xchg
inc
sub
cmp
dec
xor
xchg
pop
fstpl
jbe
jo
dec
shl
pop
xchg
aas
mov
stos
mov
call
inc
mov
ljmp
orl
adc
ror
dec
mov
aas
sbb
push
pop
xor
xlat
or
movsb
jb
aaa
add
aas
mov
dec
popl
sbb
loop
push
ds
repz
add
mov
xchg
dec
mov
aaa
ss
xchg
gs
inc
mov
add
xchg
ja
mov
lock
mov
sbb
or
subb
or
inc
or
and
and
mov
pop
es
cld
repz
sbb
mov
orl
jbe
jl
mov
mov
cmp
call
mov
out
sbb
mov
jne
mov
push
outsb
popf
dec
out
adc
cli
pop
adc
dec
ret
pusha
xlat
loop
aas
xchg
or
negb
mov
push
push
jge
in
outsb
ret
jnp
cmp
sbb
xchg
fneni(8087
int3
mov
push
add
aas
lret
inc
adc
inc
adcb
in
add
ss
lcall
push
mov
mov
mov
lret
and
add
xchg
dec
mov
inc
loope
rolb
test
xchg
pop
leave
stc
iret
xchg
push
les
adc
jo
inc
jl
in
add
out
xor
nop
jo
test
scas
lcall
mov
adc
mov
out
inc
inc
out
xchg
sub
jecxz
xorl
inc
mov
aas
cmp
into
or
mov
lods
arpl
push
push
cwtl
cmpsl
mov
add
xor
gs
mov
xor
sbb
jecxz
cltd
add
jb
stc
in
mov
cmp
icebp
repnz
mov
jb
das
jae
daa
add
das
cmp
pop
pop
dec
mov
mov
cwtl
stc
adcl
mov
inc
test
push
out
adc
push
cltd
push
mov
sbbl
fcmovne
test
test
mov
aad
jns
xchg
dec
push
pop
insb
sbb
pop
sub
mov
add
push
jg
push
cltd
adc
jb
sbb
hlt
or
dec
cmp
test
cld
out
test
bound
cli
hlt
filds
cld
sbb
adc
cld
and
jb
lea
push
mov
fidivrl
sbb
cld
cmpsl
or
inc
pop
xchg
and
xchg
mov
mov
or
add
shlb
cmp
pop
lods
jge
jno
aad
pop
push
loopne
cmp
out
xor
repnz
jno
mov
jl
mov
mov
movsl
add
inc
aaa
cld
pusha
pop
jnp
xor
cltd
pop
outsb
add
jle
inc
xchg
arpl
cmp
out
popa
sbb
test
lods
and
das
clc
jne
sti
mov
call
mov
lds
pop
data16
push
and
out
sub
adc
cmp
pop
adc
adc
inc
sbb
sti
inc
pop
xchg
xor
pop
stos
jmp
sbb
cmpsl
cmp
int
test
mov
adc
jo
mov
pop
sub
pop
cmp
ret
mov
enter
arpl
sub
mov
push
repz
cld
rorb
push
in
add
ret
mov
add
jp
push
out
mov
jb
and
movsb
adc
jb
jo
test
aas
adc
jnp
fdivr
or
insb
pop
pushf
ljmp
xlat
mov
mov
fdivrl
lret
pushf
pop
xchg
stc
xchg
inc
movntq
shlb
arpl
clc
mov
aam
push
inc
in
aaa
adc
lods
pop
adcb
cmp
push
push
sbb
call
subb
mov
out
bound
int3
out
dec
jge
lret
and
dec
mov
push
repnz
push
test
ss
addl
push
iret
call
enter
jb
stos
jle
inc
sbb
in
iret
ds
inc
mov
dec
out
jno
sbb
push
adc
xchg
es
push
ret
push
xor
insb
jmp
ret
lea
shrl
sbb
cmpsl
push
test
les
dec
js
sub
and
movsb
movsb
inc
push
popf
xchg
dec
insl
jne
dec
cltd
xchg
adc
sbb
cmpsl
icebp
push
jmp
mov
inc
xchg
clc
aas
pop
div
data16
test
or
mov
dec
add
adcl
into
sarl
arpl
mov
clc
pop
xchg
or
mov
and
les
jbe
pop
ret
and
push
mov
push
pop
mov
mov
movsl
pop
cmp
lahf
mov
adc
jp
popa
pop
ja
mov
call
mov
jae
dec
pop
test
mov
adc
xor
stos
inc
imul
decb
cltd
push
adc
sti
and
push
or
outsb
adc
lahf
push
and
push
push
add
cli
inc
divl
repnz
dec
jmp
adcb
xchg
lret
nop
xchg
mov
mov
push
and
xchg
outsl
js
xorb
jb
ja
into
sub
adc
xor
xor
jo
inc
lahf
xchg
es
jne
out
jne
scas
in
sub
add
movsb
out
and
jb
or
stc
iret
mov
scas
nop
sti
in
lds
scas
mov
mov
clc
vcvttss2si
jmp
rcrl
jb
jmp
or
mov
mov
jns
inc
out
xchg
jne
push
cwtl
es
cmpsl
ret
call
jle
loope
jb
rolb
push
pop
sbbb
push
andb
ja
dec
aad
rorl
hlt
mov
dec
cmp
cs
out
sarb
mov
stos
xchg
jbe
aas
mov
cltd
add
jmp
int3
cmpsb
dec
mov
jge
jo
idivb
in
rorb
das
loopne
or
jno
dec
inc
aas
sub
neg
adc
sub
lret
sub
push
mov
pop
mov
xchg
mov
lods
popf
xor
loop
inc
ds
enterw
xchg
clc
scas
addb
cmp
mov
loopne
lods
sarb
ret
mov
cmpl
scas
ret
sbb
lock
push
dec
xchg
xchg
mov
mov
ja
test
dec
sub
clc
add
sbbl
mov
hlt
setbe
push
lods
imul
pop
pop
add
pop
jne
in
dec
iret
fdivl
jecxz
cmp
outsl
sub
std
lret
sbb
imul
pop
dec
dec
xor
cmp
popl
or
idivl
inc
insb
dec
fs
ds
subl
test
jne
sub
xor
testb
mov
test
sub
dec
push
fstpl
iret
shrl
loope
in
fnstsw
add
fwait
add
mov
mov
out
mov
adc
push
pop
rcr
out
fldenv
push
data16
test
fidivrs
out
mov
ret
icebp
dec
cmp
mov
in
je
or
mov
dec
sub
iret
rclb
jo
xlat
popf
mov
push
gs
movsb
cltd
add
xchg
in
xchg
dec
sahf
push
stos
icebp
aas
jns
lods
mov
adc
sbb
or
push
cmp
xor
ficoms
sub
adc
dec
test
cmpsb
push
sub
aam
xchg
adcb
lods
inc
sbb
push
stc
xchg
and
lret
fsub
cltd
pop
fnstsw
out
mov
clc
or
or
mov
jecxz
loop
cmp
insl
fidivrs
mov
dec
into
shl
or
in
mov
jle
or
mov
roll
cmpsb
push
loop
adc
je
inc
fsts
in
imul
xor
sarb
std
popa
sub
push
add
int
pop
inc
mov
xor
push
cmp
or
dec
sub
mov
jne
xor
mov
xchg
mov
lret
stc
adc
int
inc
stc
outsb
and
cmc
adc
ret
pusha
cmp
xchg
add
jnp
cwtl
pusha
push
xlat
fimuls
fildll
sub
pop
mov
jge
mov
sbb
inc
xchg
pop
inc
and
fdivrs
jg
shll
add
pop
inc
add
dec
movsb
add
ret
cmpsl
lret
enter
test
push
push
nop
pop
inc
jnp
loope
std
adc
xor
or
repz
popa
dec
jno
iret
jno
out
in
dec
and
mov
pop
pusha
lods
imul
mov
mov
scas
pop
mov
js
nop
cmc
push
fistl
repz
lods
test
popa
jle
cltd
xor
or
xchg
jb
je
mov
jle
setge
test
push
gs
sbb
pop
ja
subb
scas
pop
sub
lret
add
bound
adcl
insb
xor
jp
dec
pop
mov
and
push
js
je
fildll
nop
and
ret
push
jns
mov
push
fisttpl
or
neg
pushf
xchg
jae
test
mov
push
or
es
push
pusha
pop
out
out
and
dec
lods
ret
fisttps
outsb
or
jno
comiss
jnp,pn
add
lods
jae
pop
in
out
fadds
cvtdq2ps
mov
bound
out
cmp
ljmp
mov
and
arpl
sahf
inc
and
dec
mov
arpl
es
mov
subl
cmpsb
and
push
int
push
add
sbb
lret
pop
pop
mov
out
popa
insb
pmuludq
adc
mov
mov
test
lcall
test
jae
jb
or
in
mov
fidivs
push
inc
push
daa
inc
ret
pushf
jmp
lock
mov
sbb
bound
repnz
cmp
stos
sub
inc
sbb
or
jno
jl
sub
sub
adc
fisttpll
lcall
xchg
push
test
push
pop
jb
adc
push
nop
mov
inc
in
adc
and
aam
out
out
cmp
rolb
add
xchg
rol
leave
jl
out
movsl
shr
cmp
rorl
xchg
or
lods
in
jecxz
cmp
adc
pusha
lret
movsb
add
dec
decb
stos
rsqrtps
or
push
push
or
or
mov
aaa
pop
enter
gs
jno
hlt
sub
push
dec
nop
inc
cwtl
lds
xchg
ror
add
dec
bound
mov
jg
mov
sbb
push
ret
mov
cmp
sbb
outsb
add
imul
test
or
xor
jnp
pop
push
sbb
mov
push
push
sub
add
xchg
mov
mov
cmp
addl
lds
jne
into
loope
adc
daa
xchg
fstl
xchg
push
je
cs
test
push
xor
outsl
push
leave
mov
add
pop
imul
out
xlat
fdiv
add
rcrb
ja
fstpt
xchg
test
adc
xlat
sub
idivl
mov
jo
sub
mov
add
lds
mov
inc
jae
jno
mov
xlat
xlat
test
push
mov
pop
sub
mov
dec
in
mov
mov
test
loope
mov
cmc
mov
daa
sbb
mov
cmp
xor
add
xchg
ficompl
and
ret
pop
pop
mov
movsl
mov
aaa
jp
sub
adcl
jge
sbb
pop
aaa
mov
or
mov
and
push
xchg
lods
lahf
andl
iret
insl
jp
daa
pop
scas
push
mov
ret
xlat
popa
int
and
shr
or
sub
dec
mov
in
pushf
in
pop
mov
loopne
xor
cmp
cld
and
outsb
insl
mov
out
mov
mov
or
mov
out
push
repnz
dec
fdivl
daa
mov
cmc
fisubrs
mov
pusha
aad
psubusw
adc
loopne
mov
lods
jnp
shrb
mov
arpl
xchg
mov
sub
pop
cli
mov
out
dec
pop
and
cli
jmp
xor
fisttpll
aas
pop
loop
dec
cmpsb
mov
and
jg
sbb
stos
lea
shll
xor
scas
into
adc
test
inc
inc
cs
ror
sbbl
scas
xlat
dec
and
inc
roll
outsl
sbb
aam
ljmp
in
jmp
sbb
mov
push
push
fwait
in
imull
xchg
jno
rcll
insb
sub
js
jle
stos
mov
dec
mov
sbbl
cli
xchg
inc
push
mov
push
push
shl
addl
xor
daa
ret
pop
out
push
mov
push
test
sbb
std
outsl
les
call
rorl
out
jb
push
inc
xor
push
inc
ret
enter
mov
adc
pop
pop
leave
xchg
shr
mov
aaa
xor
in
pop
scas
sti
sarb
and
add
leave
xor
lds
gs
arpl
sub
dec
flds
mov
pop
push
jmp
in
js
lock
cmpsb
pop
sbb
lahf
daa
jns
aam
arpl
add
or
pop
out
xchg
cs
adc
icebp
mov
sbb
add
pop
popa
or
xor
test
push
loope
ss
pop
push
jnp
loop
push
adc
shlb
mov
enter
sti
jnp
sbb
cmp
sbb
mov
js
dec
push
add
mov
jl
pop
push
aam
push
adc
jle
add
push
jb
cld
sub
dec
sbb
cmp
lock
test
in
adc
xchg
pop
imul
mov
mov
inc
clc
addr16
jae
jnp
mov
pop
xchg
sbb
test
inc
cltd
or
je
pop
out
xchg
ret
rcrl
push
std
test
out
test
and
inc
imul
xchg
sub
clc
pop
fidivl
lods
fcmovu
xchg
fsubrs
ret
push
iret
mov
xchg
xchg
mov
mov
jge
lock
dec
insl
sub
push
sti
dec
stos
mov
aaa
mov
jp
adc
scas
mov
ret
in
sbb
push
sbb
inc
aaa
fldenv
jecxz
arpl
daa
out
push
out
addr16
dec
sub
mov
jge
bound
insl
ret
test
pop
lcall
aas
xchg
pop
test
andb
or
cmp
jecxz
mov
pop
pop
xchg
testl
inc
dec
xor
popf
lods
popf
mov
add
jp
mov
fstpt
push
cmpsl
jns
add
test
movsb
pop
pop
inc
iret
add
loope
insl
xor
insl
jne
push
xchg
and
cli
ljmp
inc
lcall
pop
cwtl
sub
adc
add
movsb
pop
sub
xor
sub
sahf
or
test
xchg
stos
inc
xchg
add
sub
mov
inc
test
sbb
jl,pt
xchg
adc
popf
cmpsb
je
stc
call
orl
orl
push
addr16
clc
pusha
xchg
mov
fldenv
dec
jmp
push
sub
inc
addb
jg
out
mov
stc
in
lods
mov
call
or
pop
pop
inc
insb
lods
cmp
fwait
sbb
and
cmp
pop
imul
push
adc
mov
ss
das
dec
lret
dec
fcomps
jl
pop
in
jnp
dec
adc
mov
push
sbb
sti
in
popa
xor
mov
jecxz
add
out
cmp
cltd
loope
inc
cmp
pusha
iret
dec
pop
popa
data16
popf
mov
jne
xchg
test
loop
mov
mov
dec
push
cmp
inc
mov
push
mov
push
add
add
inc
addr16
fwait
mov
fsubs
imul
cmp
mov
xchg
xchg
loope
lret
and
mov
push
sub
mov
mov
gs
dec
popa
xchg
scas
ret
jle
aad
inc
sti
sub
pop
hlt
push
leave
add
shll
mov
sbb
cmpsb
mov
jl
inc
jecxz
pop
xchg
imul
mov
xchg
push
stos
push
pop
inc
test
mov
rclb
fisubl
loop
add
mov
fnsave
clc
stc
aad
inc
decl
or
dec
push
pop
sahf
nop
fdivl
addr16
pop
jae
test
push
dec
cmp
pop
sbb
clc
orb
lock
int
mov
ljmp
push
mov
dec
addl
into
in
and
xorl
sti
leave
and
xchg
push
xchg
mov
cmpsl
ror
jmp
lock
and
sub
enter
mov
sub
cmp
pushf
bound
daa
and
mov
mov
incl
in
cld
gs
cmpsl
adc
mov
insb
mov
inc
sbb
pop
clc
adc
out
jbe
xchg
fstpt
mov
scas
adc
mov
jnp
sub
mov
adc
lods
sbb
xchg
inc
popa
lods
rol
jl
imul
in
add
imul
jo
outsb
xchg
and
dec
mov
sbb
sbb
hlt
mov
adc
or
aas
inc
dec
loop
stos
int3
in
fnstenv
push
and
fadds
lock
cmp
lret
add
jg
clc
sbb
in
int3
lods
xchg
xchg
into
dec
out
inc
push
imul
dec
sahf
sub
iret
fstps
xor
add
movsb
jp
sub
sbb
nop
repz
cbtw
lea
lret
jmp
das
jecxz
in
cmp
jno
ror
jbe
sbb
stos
movsl
dec
cmp
lahf
inc
ficomps
enter
jp
and
scas
sbb
lcall
dec
mov
cmpsb
pop
jmp
xchg
daa
mov
jl
bound
jns
lods
nop
adc
or
dec
test
inc
lahf
stc
movsl
stos
and
mov
dec
inc
inc
or
ds
xor
out
or
add
adc
inc
push
xchg
push
ja
mov
loope
and
cmp
sbb
jecxz
stos
or
inc
add
in
iret
mov
js
outsl
or
xchg
push
jmp
inc
mov
mov
push
sub
pop
leave
xchg
sbb
andb
xchg
pop
jne
addb
pushf
sub
data16
stc
lahf
pop
push
xor
pop
inc
shll
dec
mov
jbe
mov
mov
push
std
push
cmp
pop
imul
out
push
fcmovnu
mov
cmp
push
xor
sbb
jnp
lods
jge
icebp
dec
rcl
and
jmp
leave
loope
xchg
imul
mov
lret
jno
dec
shrb
mov
push
xchg
add
sahf
and
lea
test
cs
jne
mov
iret
cs
add
and
jae
mov
imul
pop
mov
jb
aaa
insl
inc
push
bound
cmc
xchg
repnz
das
xchg
mov
enter
pop
push
cwtl
ret
push
rcr
pop
scas
out
push
xchg
jp
push
sbb
add
pop
add
and
cmp
fcoms
pusha
sbb
adc
mov
sbb
adc
lahf
subb
mov
mov
jle
sub
sub
frstor
mov
pop
hlt
or
mov
and
das
jno
or
pop
aas
imul
out
aas
cmp
test
std
ffree
inc
iret
bound
sbb
push
gs
inc
push
int
or
mov
jae
pushf
out
ret
mov
or
adc
add
or
inc
movsl
fidivs
inc
sub
test
daa
and
xchg
jge
fildl
ss
inc
inc
inc
fwait
pop
mov
or
push
and
jnp
clc
add
out
push
lret
sbb
mov
adc
jbe
mov
idivl
mov
xor
xchg
bound
leave
inc
jne
pop
and
dec
and
pop
fnstsw
adc
cwtl
out
sub
and
out
jmp
dec
push
jno
hlt
cs
sub
inc
test
icebp
subb
jnp
pop
in
hlt
or
add
data16
mov
imulb
sub
cli
mov
xchg
pop
xchg
fistpl
pop
cmpsl
inc
lahf
push
mov
mov
adc
int3
mov
lret
in
push
jle
cmp
int3
cmp
jmp
sti
xchg
int3
dec
iret
mov
cmp
imul
push
pop
jbe
pop
out
pop
inc
inc
mov
sahf
jp
outsb
inc
bswap
arpl
adc
repz
ret
gs
pop
push
mov
pop
push
lods
mov
out
sub
cmp
sub
xchg
aaa
pop
pop
leave
clc
push
scas
enter
ss
aaa
fistpl
inc
pop
lea
pop
xor
in
hlt
jo
je
sbb
outsb
adcl
adc
jb
outsb
inc
aam
mov
js
pop
repz
adc
aam
inc
jb
in
icebp
sub
test
rolb
sbb
jl
addr16
xchg
inc
pop
pop
mov
rcll
xorl
sbb
push
ljmp
mov
lea
inc
ret
in
std
adc
and
pop
sbb
ds
stc
dec
jecxz
cmpsl
hlt
shl
ret
xchg
cmp
sub
lea
scas
lcall
mull
lods
xchg
lret
mulb
sbb
cltd
dec
test
stc
mov
mov
test
dec
cmc
leave
sarl
mov
add
dec
push
mov
sbb
ds
test
jb
inc
shl
pop
sbb
in
cmp
pop
mov
inc
xor
sub
sbb
jp
insl
xlat
mov
mov
push
scas
jg
ficomps
sub
pusha
inc
mov
imul
scas
shlb
and
mov
fisttps
cld
cwtl
mov
cmc
loopne
aad
sahf
ret
push
sub
scas
and
mov
mov
rcll
pop
push
out
out
lahf
or
andb
ja
lret
cmp
jae
pop
in
out
mov
xorb
xlat
fneni(8087
push
pop
fs
rcll
adc
sub
sub
cmp
mov
sub
lods
cmp
sahf
or
and
jo
std
imul
jnp
add
mov
add
mov
mov
jecxz
dec
das
mov
mov
jecxz
stos
sub
xchg
jnp
in
cmp
out
outsl
cmp
test
push
addr16
push
scas
mov
pop
inc
out
mov
test
and
jb
in
jecxz
mov
movsb
nop
rclb
js
mov
fisttps
loop
xchg
out
std
cs
xor
mov
ret
pop
fs
repnz
mov
mov
push
cmp
vaddps
js
inc
cwtl
fbld
mov
push
mov
cmpl
jo
xchg
mov
mov
add
pop
std
test
mov
movsl
fimull
stc
sbb
jmp
sub
add
and
add
std
popf
sbb
mov
andb
fiaddl
jg
rcr
mov
mov
xchg
or
jns
pop
testb
test
mov
arpl
pop
and
inc
lcall
ja
loope
das
and
sbb
pop
nop
js
add
aas
jno
adc
inc
jg
jbe
aam
xchg
fmull
jmp
inc
mov
fs
arpl
xchg
dec
mov
orb
xor
movsb
pusha
adc
bound
and
jg
jns
insb
pusha
imul
cmp
fisubrs
xchg
adc
sub
imul
xchg
add
das
repnz
jge
jne
push
sub
stos
fdivl
push
js
fdivrs
sti
ss
xor
xor
nop
cwtl
dec
xchg
pushf
sahf
or
loope
cmp
xor
data16
xchg
mov
into
mov
push
das
dec
cmp
scas
pop
clc
cmp
inc
mov
sub
push
out
jno
outsl
ja
adc
mov
pop
mov
ds
notb
lods
mov
push
out
sahf
imul
dec
insl
push
xor
xchg
lret
pop
jo
les
pusha
call
sarl
xchg
jbe
out
pop
xor
loope
ja
add
add
and
addl
sbb
or
mov
mov
push
dec
mov
fidivrl
push
jnp
mov
test
and
scas
pop
fstpl
mov
loope
popa
fstpt
loopne
cli
clc
fldt
cmp
fstps
pop
and
mov
push
pop
or
loope
push
iret
out
jp
js
int
dec
fisttps
inc
idivl
mov
xchg
push
jno
mov
movsb
dec
push
inc
aas
jge
and
inc
lcall
cmp
popa
pop
stos
roll
imul
dec
lcall
in
xlat
dec
cli
cmc
push
cmpsl
xorl
jb
sbb
dec
jge
sub
xchg
jmp
push
shl
outsb
pusha
mov
push
call
sbb
pop
and
fabs
cmp
xchg
mov
jbe
nop
stc
and
test
mov
inc
fisubrl
sub
pop
push
xchg
inc
in
inc
pop
in
xchg
int3
das
sahf
cli
dec
imull
mov
in
stos
fs
loop
cmp
jb
or
mov
xchg
jl
iret
ret
dec
rcrb
jge
cld
movsl
jg
inc
popa
fbld
out
sbb
insb
scas
repnz
das
in
shll
or
test
fwait
lahf
and
and
movsl
dec
xchg
fcmovu
dec
mov
cmc
mov
es
xor
cltd
fstps
add
aad
rclb
inc
or
mov
icebp
scas
push
sub
xchg
mov
dec
rcrl
cli
jb
mov
push
push
xchg
lea
sbb
xlat
xor
imul
shlb
push
push
mov
or
lods
in
cmp
lret
jl
out
addr16
mov
mov
inc
mov
out
les
dec
call
addl
inc
sub
mov
push
les
inc
lret
divl
ds
lahf
popa
ss
enter
hlt
fidivrs
ljmp
xor
pop
dec
mov
pusha
testl
jp
test
repz
incb
ret
or
mov
pop
lcall
in
sub
fstpt
pushf
repz
out
dec
sub
push
pushl
sbbl
mov
push
fadd
fs
and
lds
sub
inc
je
inc
dec
bound
add
xor
inc
cld
jno
xor
or
int3
jg
cwtl
aaa
add
out
sbb
jp
aas
aad
xor
or
or
cmp
out
inc
pop
ds
lock
ljmp
sti
mov
rcr
aas
aam
xchg
xchg
sub
push
xchg
or
lods
cmpsb
cld
movsl
sub
in
outsl
aam
or
mov
fadd
push
mov
fstpl
xchg
int
out
jne
jl
fwait
cmp
xchg
push
jae
inc
data16
push
push
xchg
mov
jl
movb
mov
mov
insl
outsb
cmpsl
jmp
xor
jne
mov
pop
cmp
dec
or
jns
push
repz
cmpsl
loope
aaa
sub
push
sti
fstpt
jle
imul
nop
mov
mov
mov
push
mov
xchg
test
cltd
inc
adc
iret
mov
nop
fsubrs
out
fwait
fwait
or
stos
testl
inc
ds
cmp
and
cmp
fldt
sbb
sub
push
addr16
sub
push
test
and
push
or
cltd
sahf
rolb
mov
xchg
xchg
push
lcall
sbb
inc
mov
xchg
lds
ret
test
sbb
add
mov
pop
mov
mov
pop
fcos
xor
fildll
lock
loopne
sbb
mov
leave
xchg
push
mov
push
cmpsl
sahf
sub
loope
push
pop
dec
mov
xchg
mov
adc
mov
mov
sub
in
movl
mov
sub
xor
in
imul
add
pop
bound
jecxz
rcl
dec
rcrb
loope
or
imulb
inc
mov
add
mov
ficoml
repz
dec
in
jne
and
push
sub
mov
cld
movsb
xor
mov
and
in
jl
sahf
scas
cmpsb
imul
stc
stc
mov
inc
lcall
cmp
enter
fmul
out
sahf
cmpsl
lods
add
cmp
mov
xchg
add
ret
jo
loope
shlb
lods
inc
sarl
xor
push
mov
adc
adc
arpl
mov
out
aaa
sbb
add
mov
sub
adc
pop
dec
cmpsb
movsl
es
sbb
jmp
lcall
xor
scas
and
dec
lock
xchg
stos
pop
pop
clc
sbb
test
sbb
cmpsl
movsl
outsl
loop
fs
das
in
jnp
enter
inc
inc
sbb
pop
shll
fisubrl
xor
or
mov
test
xor
jmp
or
inc
xor
imul
or
push
lret
mov
mov
stos
imul
jp
xor
push
imul
xchg
sbb
fwait
mov
inc
aam
roll
aad
sldt
test
xchg
mov
sub
push
out
cmp
clc
lods
mov
push
mov
hlt
pop
xor
mov
xlat
insl
cli
push
cmp
orl
push
xlat
mov
in
mov
xchg
ljmp
dec
xchg
pop
cmp
push
pop
fisubrs
jp
stos
loopne
fsubrs
jp
fisubs
aas
stos
lret
imul
popa
lods
jle
jo
sahf
ret
adc
jmp
pop
das
icebp
adc
out
mov
dec
and
push
sub
int3
test
add
call
cmp
les
ljmp
xchg
pop
xor
insb
cmp
push
ljmp
into
cmpsl
outsb
fwait
dec
jl
push
xchg
jne
fs
sub
sub
neg
sti
mov
dec
in
mov
jnp
xchg
hlt
lods
dec
incl
xchg
sbb
lods
mov
mov
mov
fs
pop
fisttpll
pop
mov
je
test
cmp
cmp
je
notl
dec
insl
mov
inc
in
sbb
sbb
in
shlb
fists
inc
pop
xchg
mov
xor
add
in
sub
pop
insl
les
js
push
jecxz
cmpsl
jmp
in
fs
sub
fs
dec
sub
inc
mov
dec
popa
sub
pop
ljmp
aas
data16
inc
aam
jg
movsb
hlt
enter
int
mov
jo
jge
mov
xchg
mov
outsb
jnp
dec
and
out
dec
in
cwtl
push
cld
pop
lret
jne
out
stos
int
mov
xor
sbb
mov
loopne
fisttpll
pop
cli
scas
in
jp
stc
shrl
mov
xor
lods
cmp
cmpsl
arpl
sbb
cmpsb
lds
aam
dec
nop
les
mov
fidivrs
xchg
lret
scas
inc
push
mov
fdiv
dec
push
enter
xor
hlt
or
sub
ficoms
xchg
add
jns
sub
loope
je
lret
push
jnp
push
pop
and
shrb
lret
jb
push
inc
sbbb
jne
push
jecxz
insb
xchg
or
gs
cmp
push
mov
roll
lods
sub
lcall
sti
sar
fnstenv
cs
dec
out
fcoml
leave
stos
repz
pop
adc
lcall
mov
insl
fistps
gs
into
in
enter
inc
lahf
mov
imul
imul
mov
mov
mov
cli
movlhps
repz
imulb
xchg
imul
adc
frstor
dec
adc
aaa
icebp
and
sbb
mov
icebp
pusha
add
out
xor
ja
outsl
push
cmp
push
mov
scas
adc
xchg
std
pop
or
cmp
adc
adc
and
fdivrl
push
pop
pop
and
lahf
int3
notb
lahf
fldenv
movsb
cltd
test
or
loop
mov
inc
shl
fistpl
jb
ljmp
push
movsb
lret
test
sahf
add
sub
and
imul
or
out
in
out
sarb
inc
fdivs
les
frstor
jmp
nop
and
bound
and
popf
arpl
lahf
cmp
in
add
js
call
ficomps
lcall
mov
popa
jp
sub
inc
push
mov
push
cmc
jle
xchg
aaa
clc
cltd
lret
mov
ret
mov
sub
and
cmp
adc
cwtl
lret
mov
fstpt
xor
push
dec
aam
stos
inc
das
jmp
imull
adc
xor
iret
push
outsl
sbb
in
adcb
add
mov
pop
push
dec
sahf
mov
mov
and
repz
fucomp
pop
and
jl
ret
push
enter
jb
add
push
sbb
das
mov
push
gs
int
pushf
cltd
outsl
dec
add
cltd
out
rcrl
dec
imul
mov
mov
arpl
xor
addr16
and
out
mov
test
std
push
outsb
xchg
or
fbld
in
pop
push
mov
adc
mov
in
mov
sbb
js
imul
sub
imul
out
jle
or
pop
mov
test
xchg
inc
cmpsl
pop
scas
fwait
je,pn
inc
cmp
inc
adc
add
imul
push
imul
cld
cmpsl
fstpt
fnstcw
mov
in
pop
cmp
jle
jmp
mov
dec
xor
jne
sub
sub
lods
movsb
xor
out
add
pop
hlt
iret
stc
test
pop
lret
mov
mov
dec
push
xchg
popf
outsb
lcall
mov
ret
pusha
cmpsb
popa
adc
and
pop
mov
pop
push
insb
dec
lods
das
js
rorb
cltd
push
sti
stos
push
loope
cmp
fidivl
icebp
inc
cs
cmpsb
test
pop
jbe
loopne
jge
loope
xor
aas
je
sets
dec
fwait
xchg
sub
inc
jle
ds
push
xor
mov
inc
test
test
mov
sub
and
mov
mov
push
fnsave
or
sahf
lcall
cmp
pop
add
inc
xchg
sub
lret
mov
addl
push
subl
fdivr
or
xor
jae
adc
sbbb
cmp
shll
push
sbb
adc
imul
pusha
or
pusha
imul
jb
mov
movnti
hlt
dec
fstpl
mov
inc
or
ss
xchg
lahf
rol
inc
insl
mov
out
stc
fsubs
mov
fmuls
das
push
xchg
jle
test
xchg
push
dec
ljmp
cltd
enter
fnstsw
daa
out
push
fisttps
mul
shrb
ds
add
fwait
cmp
add
daa
sub
cmp
dec
fcoms
dec
aam
xchg
movb
dec
jmp
fisubrs
sbb
mov
sbb
dec
rol
iret
fs
xor
mov
mov
or
pop
push
pop
in
clc
les
je
mov
bnd
in
push
lock
sbb
jmp
js
mov
mov
es
adc
xor
mov
jmp
sbb
leave
xchg
scas
jae
add
cs
xlat
and
mul
pop
in
ljmp
mov
adc
push
sbb
or
mov
jp
int3
movsl
jmp
pop
ljmp
push
jbe
jmp
dec
test
pop
ljmp
loopne
inc
es
dec
out
leave
sub
lcall
pop
ret
add
fidivrs
mov
shll
mov
int3
loop
xchg
xor
push
adc
outsl
jp
in
jecxz
inc
jno
add
cmp
lods
and
mov
std
es
movsl
jmp
aaa
arpl
iret
pusha
jb
xor
dec
jle
adc
and
lods
popa
inc
fs
lods
pushf
xchg
xchg
cltd
scas
cltd
leave
out
fnstenv
and
call
xor
aaa
ret
addr16
push
inc
adc
push
dec
pop
int3
mov
fcomps
pop
inc
xchg
fisttpl
scas
inc
push
test
mov
mov
mov
push
lock
in
mov
jl
push
and
push
scas
mov
rcr
fldl
fwait
cltd
mov
das
fbld
push
bound
jo
xor
pop
xchg
hlt
jne
loopne
jl
aam
jg
add
mov
icebp
push
pop
lret
xchg
adc
imul
out
inc
je
mov
mov
hlt
les
sub
sarl
outsb
jb
cmpsl
jge
into
outsb
in
popf
rcll
fs
dec
pop
imul
sbb
out
in
stc
mov
dec
xor
push
mov
and
or
xlat
out
pop
and
cmpsb
arpl
add
cs
add
push
test
es
cmp
mov
sbb
mov
jno
testb
mov
std
divb
std
cld
mov
enter
or
fistpll
mov
aaa
shr
in
cs
push
leave
xchg
jae
and
sub
jo
nop
mov
cmp
pop
loopne
adc
es
test
xor
out
sbb
shl
incl
aas
addr16
adcb
ja
mov
cmp
cmp
mov
aaa
cmp
xor
imulb
mov
je
or
push
xchg
adc
and
pop
fmuls
in
add
sbb
pop
mov
xchg
or
repnz
into
lock
mov
in
cs
and
shll
push
aaa
mov
clc
das
inc
cld
xlat
es
imul
shll
iret
popa
cs
add
outsb
jmp
sub
sahf
pusha
lret
add
mov
lods
cmp
or
jge
add
sarb
repnz
movsb
xchg
push
imul
and
lret
fxrstor
xor
xor
add
aam
mov
mov
sub
aaa
push
xchg
scas
aas
iret
fucomp
jecxz
cltd
aam
fbld
xchg
int3
imul
aaa
adc
out
pop
sbb
add
outsl
popf
cmpb
mov
gs
je
sarl
je
jno
lds
cmp
aas
lcall
outsb
mov
jge
xchg
mov
push
dec
lods
psubusb
fs
rcrl
xor
stc
fsub
pop
imul
mov
inc
cmp
mov
in
js
mov
cmp
lahf
stc
cmp
mov
add
std
mov
jne
sub
add
mov
int
pop
push
shll
in
cli
aam
movsl
inc
jmp
cmp
icebp
jbe
xchg
mov
adc
jo
inc
lret
movsl
jmp
or
jecxz,pt
outsl
jmp
mov
mov
or
pop
push
cli
xor
into
cmpsl
dec
add
dec
mov
mov
sbb
jns
js
rclb
cmp
sbb
dec
jno
fmul
push
mov
adcl
out
and
es
imul
add
jecxz
xor
popf
adc
xor
daa
stos
or
sub
jno
xchg
out
sub
scas
pop
ja
and
jl
cmp
test
mov
ret
cmp
and
jge
mov
push
mov
in
ss
fmull
pop
decb
or
mov
lret
mov
sub
dec
cmp
push
push
ret
push
popa
sar
ret
dec
insb
cmpsb
mov
xor
add
push
mov
fadd
rclb
in
sub
stos
xchg
std
mov
adc
lock
dec
in
xchg
inc
adc
mov
mov
pop
xchg
sub
cli
pop
out
jl
dec
jecxz
adc
and
dec
jmp
lods
xor
jb
sahf
bound
mov
mov
inc
shll
sbb
mov
dec
lock
pop
cmp
popf
mov
insl
sbb
xchg
sub
xchg
xchg
mov
movsl
pushf
mov
sbb
and
pusha
repnz
push
shll
lret
mov
aaa
adc
lods
adc
jmp
sbb
push
or
xor
mov
pop
dec
pop
mov
mov
mov
xchg
scas
push
pop
inc
nop
bswap
in
bound
bound
xor
rcrl
push
cmc
insb
sub
xlat
push
jecxz
clts
or
repz
scas
ret
bound
test
in
hlt
lods
sub
mov
jo
add
aas
or
push
and
push
cwtl
inc
mov
fistpll
sub
rclb
divb
ficompl
leave
pop
mov
dec
addb
jae
ret
add
jno
es
sub
in
mov
pop
adc
and
jnp
pop
pusha
mov
outsl
sbb
arpl
inc
dec
pop
std
leave
ret
xchg
sbb
enter
inc
push
int3
adc
fninit
sbbl
mov
mov
lods
add
out
daa
sbb
test
adc
test
mov
into
mov
lods
ret
popa
push
mov
inc
shlb
push
jecxz
ja
adc
mov
jp
cmp
imul
imul
xchg
jge
cmp
sti
cmp
mov
repz
fs
test
push
bound
or
add
ret
xor
inc
pop
shrb
jge
popf
out
iret
in
leave
push
xchg
jg
js
or
test
fs
mov
or
mov
push
jnp
sub
cmpl
or
pop
add
jg
pushf
mov
fiaddl
inc
nop
mov
fisttps
stos
xlat
mov
mov
frstor
inc
in
jg
sbb
mov
mov
push
addr16
jnp
pop
dec
xor
cmp
mov
push
mov
scas
cmp
jne
cmpb
dec
push
mov
add
call
xchg
mov
sbb
inc
mov
dec
cmp
in
cmp
xchg
nop
mov
push
cld
jae
mov
clc
out
xchg
fistpll
rolb
mov
out
and
mov
sub
push
jnp
in
mov
aad
fdivrs
jle
and
ss
std
lds
inc
cmp
test
sub
and
outsb
ret
cmp
sbb
and
outsl
dec
inc
push
sbbl
repnz
pop
pop
out
push
mov
clc
xchg
mov
in
sbb
popa
mov
cmp
and
mov
scas
pop
sbb
jae
int3
in
gs
sub
push
add
push
icebp
mov
mov
mov
fwait
jb
stos
scas
pusha
jbe
scas
mov
enter
popf
xor
pop
pop
or
sbb
shll
mov
mov
movb
test
and
mov
cmp
push
xor
mov
div
lahf
movsl
add
mov
mov
mov
adcl
push
dec
cli
mov
mov
loopne
cwtl
sbb
xor
aas
insb
roll
js
mov
mov
push
xchg
cmp
inc
sahf
rcrb
lret
aas
test
pusha
test
bound
pop
or
jp
jb
or
jo
mov
mov
mov
pushf
lret
xlat
inc
int
pop
sub
push
jns
cmp
data16
imul
mov
je
test
insb
sub
or
mov
cmpsb
mov
jne
mov
push
lock
sti
push
cmp
jns
push
sbb
repz
mov
sub
xor
hlt
aad
add
imul
push
iret
xchg
fnstsw
pop
push
xchg
jno
cmp
add
pop
fcoml
imul
std
sbb
jbe
push
xchg
inc
stc
je
cmp
pushf
pop
clc
bound
inc
aaa
push
adc
push
mov
pop
fcomip
push
and
cltd
into
adc
inc
out
mov
popa
ljmp
mov
ds
insb
mov
clc
cmp
mov
pop
aas
push
xor
sbb
sub
mov
cwtl
push
xlat
cmpsb
jb
jno
cmp
subl
loop
fnstenv
loopne
xchg
ja
loopne
fnstcw
or
int
mov
out
mov
rcll
push
notb
lret
add
or
push
push
ficoms
divl
adc
in
sub
mov
pop
add
into
call
dec
out
or
pop
bound
arpl
pushf
or
cld
stos
lret
jmp
mov
fs
sbb
or
mov
dec
outsl
call
inc
cmp
dec
int3
scas
jle
pop
mov
ljmp
lds
cltd
or
push
hlt
shld
loope
test
int3
sbb
add
and
scas
rorl
ja
and
sub
lahf
dec
ja
data16
sub
mov
cmp
add
jmp
cli
pop
cmc
xchg
jle
xor
inc
lcall
ret
ds
jae
mov
rcl
and
sbb
frstor
jge
shlb
inc
mov
mov
pop
cmp
cs
imul
and
jmp
ret
lahf
dec
sub
xchg
jmp
ret
lret
dec
jp
cld
cltd
test
fbld
pop
fstl
dec
aad
cltd
sbb
mov
in
jns
mov
xchg
xchg
or
js
push
je
adc
cltd
rcl
imul
dec
push
popa
sub
stc
pop
add
and
fucom
sahf
call
dec
sar
mov
insb
mov
and
mov
aas
and
xchg
lret
arpl
jno
ret
adc
data16
xor
mov
add
mov
fsubrs
sub
ret
mov
sbb
jp
aas
ljmp
mov
jnp
cltd
pop
push
xlat
loope
lea
xchg
in
aas
jle
neg
fs
shlb
or
mov
and
cmp
push
sbb
add
add
test
stos
clc
mov
push
enter
aaa
xchg
sub
or
mov
out
inc
test
popa
adc
push
mov
pop
outsl
jle
add
pop
scas
mov
rolb
or
pop
jae
lcall
in
inc
fwait
pop
adc
repnz
movsb
test
adc
mov
cld
int3
push
push
push
pop
dec
add
test
ficomps
add
pop
aad
mov
fmull
dec
pop
xchg
not
cmp
ret
loop
fisubrl
cli
cmc
pop
pop
or
adc
xor
sbb
push
xchg
dec
test
inc
hlt
test
and
fidivrl
out
out
pop
fwait
mov
xor
dec
data16
mov
mov
xor
scas
outsl
add
pop
test
pop
or
jl
pop
les
cmp
mov
xchg
cmp
inc
sbb
and
sbb
fsubr
lods
mov
add
jecxz
xor
and
add
leave
dec
jl
push
mov
es
dec
and
fcomp
in
cmp
test
inc
repz
ss
nop
mov
out
sti
mov
xor
outsl
mov
jp
mov
aas
lods
mov
shlb
jmp
ljmp
push
jne
push
popa
test
xchg
jo
push
loope
xlat
test
push
out
pop
inc
mov
subl
sti
fadds
shl
aam
lock
je
mov
cmc
pop
subb
xor
xchg
addr16
adc
loop
stos
sbb
insl
fiadds
xchg
ljmp
fldl
xchg
add
cmp
insb
cmp
out
addr16
rolb
pop
nop
mov
push
ret
arpl
adc
loope
imul
in
push
test
mov
sahf
scas
sarl
inc
je
add
mov
lcall
xchg
mov
xchg
jae
mov
fidivl
mov
or
loope
das
nop
cltd
lcall
movsb
lret
mov
mov
jg
inc
cmp
mov
dec
test
inc
cld
sbbl
xchg
push
dec
cwtl
push
mov
sahf
cmp
sti
clc
push
mov
outsb
sbb
jg
push
pop
and
push
sub
push
sti
sbb
pop
lret
or
aas
loop
sub
pusha
add
sti
mov
mov
sahf
mov
jno
push
cmp
xor
mov
jae
aaa
and
dec
dec
add
or
imul
adc
mov
addb
fwait
mov
xor
iret
xor
push
sbb
adc
pop
jne
loopne
xlat
aad
mov
mov
fldenv
add
mov
popa
and
clc
xor
push
sbb
mov
lcall
call
ret
scas
cwtl
lods
fildll
inc
pop
test
lock
test
adc
push
insl
fwait
mov
pop
sti
aaa
xor
jne
sbb
mov
pop
and
lods
mov
or
xlat
rorb
mov
cmp
ror
negl
mov
dec
cmpsl
jbe
sti
mov
nop
jge
or
xor
add
cmp
pop
jnp
fidivrs
test
cmpsl
out
dec
popf
or
sub
in
add
ret
mov
dec
rol
stos
gs
dec
outsb
adc
cmpl
and
cmc
lds
lods
xchg
sbb
pop
push
xor
fldlg2
mov
loope
pusha
adc
jae
mov
iret
push
mov
ds
add
mov
adc
ret
lock
dec
jae
rcr
rorb
mov
enter
test
pop
enter
ret
dec
mov
inc
pusha
jg
jecxz
pop
cli
pop
xchg
jl
mov
mov
mov
xchg
fbstp
sub
mov
scas
lds
sahf
movsb
xchg
test
addb
lea
xor
jecxz
fs
cld
jge
ficoml
jb
pushf
cmp
jns
lods
lock
xchg
jno
sbb
sbb
push
aad
pop
sahf
leave
mov
sahf
fdivs
into
lock
jbe
add
cmpsb
shll
sbb
jnp
mov
dec
lret
mov
shll
xlat
pop
aam
icebp
cwtl
mov
fistpl
pop
adc
add
pop
xchg
mov
call
and
cli
scas
subl
cmpsb
mov
xchg
sub
push
inc
pop
xchg
add
ret
jae
lret
js
ss
roll
das
jecxz
xchg
in
loope
jg
or
adc
xchg
pop
mov
inc
sti
sahf
addr16
stc
fsubrs
fdivl
and
pop
cwtl
mov
sub
jbe
jns
jae
fcmove
sbb
cwtl
dec
pop
mov
push
push
or
cs
lret
add
push
fdivrl
xchg
cmp
cmp
cmp
je
jbe
sbb
adc
lock
arpl
pop
sub
sub
out
cmp
add
sub
leave
cmpl
clc
test
add
dec
inc
pop
inc
outsb
mov
rcrb
int
mov
mov
loope
sbb
mov
adc
insl
pusha
push
xlat
out
outsb
mul
jnp
jo
or
scas
cwtl
inc
mov
sarl
xlat
pop
stos
or
jp
je
fisubl
inc
test
arpl
adc
sbb
out
daa
add
add
ret
mov
and
mov
cmp
lock
and
ds
xor
dec
and
or
dec
fmulp
jno
or
stos
or
inc
shlb
and
push
js
das
fdivrl
repnz
fwait
test
and
mov
push
mov
mov
xchg
aad
lret
addr16
xchg
nop
lret
jp
jns
sarb
lods
add
xchg
jle
into
mov
lods
repz
pop
loopne
test
mov
shrl
xchg
cmp
mov
pushf
std
push
or
adc
hlt
in
inc
fucompp
popf
or
inc
mov
push
add
movsl
scas
mov
pop
mov
outsb
cmc
cwtl
mov
fistpl
push
mov
stos
jg
inc
pushf
subl
adc
scas
rcrb
test
test
jle
cmp
rorb
pop
mov
sbb
dec
xor
add
cld
jae
sti
cli
pop
popf
push
pop
jnp
outsl
and
sbb
iret
pop
dec
inc
ret
fnstcw
push
pusha
and
or
lock
sub
pushf
inc
dec
fwait
cmp
daa
and
adc
jge
xor
in
inc
xor
jg
mov
sub
and
and
jl
cld
jge
mov
outsb
xchg
sbb
subb
adc
jnp
and
test
mov
add
add
sub
iret
dec
subb
pop
and
pop
add
mov
popa
inc
fwait
adcl
adc
out
inc
push
jecxz
loope
push
outsb
test
stc
pop
shlb
out
mov
mov
lcall
sti
popa
aaa
pushf
sahf
mov
inc
jb
add
inc
pop
imul
ljmp
pop
pop
push
fldl
stos
mov
mov
push
jno
movsl
popf
fistpl
inc
pop
pop
dec
loop
adc
jecxz
push
mov
sub
fsubrs
sbb
mov
out
adc
mov
xlat
test
xor
lea
int3
cmp
into
mov
lahf
sub
gs
lret
adc
cmp
sub
sbb
adc
add
or
sub
loop
ja
mov
xchg
xor
push
sub
je
std
mov
add
cmpsb
pop
cmp
xchg
and
imul
xchg
and
ss
mov
arpl
pop
xor
ds
dec
and
insb
fldt
mov
dec
scas
adc
ljmp
cltd
xchg
push
inc
repnz
aad
lret
and
fadd
into
push
sub
push
mov
inc
movsb
jg
fists
push
push
pusha
shl
mov
or
pop
ja
xor
adc
fs
sbb
in
leave
dec
and
outsb
je
sbb
mov
out
aam
fadd
movsl
test
xchg
add
dec
pop
out
jecxz
or
jnp
sbb
pop
aaa
fiadds
sbb
sti
jg
gs
ret
inc
aas
dec
into
jno
movsb
xchg
idiv
pusha
or
stc
jmp
xchg
pop
xchg
fs
icebp
xor
cltd
inc
outsl
shlb
jmp
test
cmpsb
nop
inc
lods
cmp
pop
mov
fnstsw
data16
sub
mov
xchg
lds
sub
mov
in
xorb
mov
mov
insl
jl
pop
jecxz
movsb
and
fcoms
sbb
data16
push
xor
stos
int3
scas
dec
jle
mov
stos
mov
fstpl
test
inc
pop
dec
ret
mov
call
inc
div
jae
aas
addl
add
fidivrs
jle
dec
rcrb
addr16
pushl
fsub
sbb
stos
xchg
inc
rcr
call
rcr
pop
adc
out
or
dec
xor
shl
loop
dec
jg
repz
lds
mov
pop
hlt
arpl
leave
mov
or
rclb
mov
sub
push
dec
fisttpl
shrb
shrl
fisubs
adc
outsb
lods
jg
inc
sbb
adc
cmpsb
sub
adc
lods
mov
push
aam
xchg
push
cmovns
lahf
jecxz
repz
xchg
fimull
add
in
push
dec
jle
scas
dec
rorb
movb
aas
lods
adc
push
repnz
xor
jge
adc
loopnew
mov
pop
hlt
sti
icebp
jle
lods
shlb
imulb
test
xchg
scas
in
jb
mov
cmp
icebp
inc
dec
test
jle
jg
jle
outsl
sub
mov
sub
pop
arpl
sbb
adcl
cmpsb
mov
add
int3
pop
rcrb
arpl
testb
lods
xchg
fstpt
lods
test
mov
mov
test
addr16
scas
adc
xchg
xchg
mov
insl
jmp
pop
pop
insl
lods
aas
push
pop
mov
sbb
sub
and
or
daa
dec
je
mov
xchg
popa
jl
ss
or
mov
pop
xchg
test
xchg
inc
test
xchg
cs
and
leave
jl
stc
mov
fwait
add
xchg
mov
mov
pop
out
sub
lods
sbb
dec
sub
cmp
fwait
sub
mov
add
hlt
not
sub
lea
xor
mov
dec
fdivrp
sub
add
leave
fs
push
movsb
fistps
mov
jg
sub
shr
lcall
lods
rcrb
push
xchg
cmp
ljmp
xor
pop
dec
mov
jae
daa
mov
negb
pushf
int3
cli
mov
popf
movsl
popf
jg
addr16
mov
adc
or
shll
pop
adc
imul
lret
sbb
dec
outsb
stos
xchg
jge
or
addr16
aad
pop
ljmp
je
mov
and
jbe
fdivrl
scas
cli
outsb
in
mov
xchg
mov
xchg
mov
out
cmpsb
idivb
addr16
pop
notl
push
inc
mov
xchg
test
push
gs
push
sbb
push
jnp
enter
adc
test
imul
dec
push
movl
sbb
mov
ljmp
xchg
xchg
jmp
sub
mov
arpl
ss
std
shlb
add
insl
and
je
add
xchg
std
aaa
cmpsl
xchg
sbb
subl
jmp
call
imul
xor
fldcw
pop
sbb
orl
sbb
call
sub
aaa
dec
stos
mov
jo
mov
lods
inc
out
hlt
xor
cmp
jp
rcll
int
stc
xchg
inc
adc
xorb
lds
adc
sbb
xchg
pop
mov
and
pusha
andnps
jne
cmp
fs
or
sbb
jecxz
fidivs
adc
test
fisubrl
fidivrs
push
outsb
dec
fisubrs
jmp
cmp
into
lret
cmp
test
cmp
iret
add
test
mov
sub
cmp
inc
sbbb
pop
mov
inc
loopne
jo
fcoms
fdivrl
push
mov
lods
dec
das
sarl
movsl
pop
movsl
cmpsb
lds
cli
mov
out
cli
imul
pop
and
popl
lahf
add
gs
loop
cmc
cmp
lea
std
mov
pop
cmp
flds
mov
mov
popa
cmc
mov
adc
or
mov
clc
dec
mov
stc
jno
lret
roll
loop
cmpsb
popf
cmp
lock
dec
sub
xchg
or
mov
add
pushf
ja
mov
inc
xchg
ja
hlt
out
stos
add
mov
xchg
adc
insb
icebp
ja
clc
pop
into
mov
mov
dec
shll
xchg
xchg
jb
pop
cs
dec
push
fadds
out
sahf
fwait
sarl
pusha
imul
push
mov
mov
xor
sub
cmp
out
sub
add
cmp
inc
and
push
jp
je
shlb
mov
sub
jp
jne
in
sub
fwait
icebp
push
pop
out
iret
cltd
pop
pop
scas
pop
gs
push
and
mov
mov
push
cmp
inc
adc
cs
int3
pop
jge
mov
mov
data16
jmp
stos
insb
shr
mov
aas
dec
fcmovu
mov
cmc
jge
lcall
jge
push
mov
push
mov
push
dec
in
xchg
cmpsb
add
jmp
or
cwtl
add
ficomps
outsb
shl
lods
repnz
inc
and
sub
cmp
mov
push
adc
ret
pop
adc
pop
je
xorb
cwtl
add
mov
lock
and
sbb
call
fisttpll
orl
mov
lods
sbb
add
bnd
lods
jp
mov
and
pop
movsl
or
test
mov
shrl
push
adc
or
jp
adc
hlt
fisubrs
cmpsb
jge
sbb
movsb
mov
push
jbe
add
int3
pop
cmpsl
dec
imul
inc
fidivs
dec
inc
sbb
fwait
lods
ljmp
and
mov
repnz
sub
push
test
mov
mov
mov
imul
pop
xchg
pop
stos
or
jns
sti
addr16
cmp
inc
mov
xor
cmpsl
sbb
or
jne
push
ret
in
mov
add
test
pop
fists
out
icebp
add
stos
adc
int
push
mulb
iret
aad
push
jo
inc
mov
dec
in
push
mov
cmp
pop
mov
add
push
shrl
inc
jl
ljmp
inc
inc
xchg
add
or
lds
pop
pop
shr
fistps
push
cld
test
scas
push
push
push
jle
rcll
add
pop
daa
jbe
aam
ud1
out
lcall
inc
and
mov
pop
and
arpl
pop
mov
lods
push
in
sahf
sbb
or
in
outsb
mov
sbb
hlt
xor
xlat
adc
push
jae
aad
ss
enter
and
mov
ds
mov
mov
jae
add
fildl
fwait
cmp
jne
lds
xor
test
xchg
outsl
lret
lods
mov
push
inc
pop
mov
ret
cli
sahf
sbb
and
aad
push
stos
fchs
add
das
shlb
data16
cmpsl
mov
scas
shld
push
jl
arpl
in
in
movsb
fidivs
pop
sti
cmp
sbb
pop
and
pop
aaa
dec
loop
outsl
mov
and
imul
or
dec
in
popf
jne
fisubs
jmp
add
lret
int3
mov
pop
jo
call
sahf
add
push
cmp
repz
lret
mov
out
sub
mov
jbe
mov
inc
repnz
dec
jle
inc
cwtl
xchg
add
add
adc
js
daa
dec
mov
and
loopne
mov
adc
outsb
xchg
mov
adc
leave
cmpsl
jns
shr
fnstenv
xor
pop
push
cmpb
xchg
insb
mov
testl
mov
jne
daa
mov
in
scas
stc
jge
jns
and
adc
fsubrl
xor
in
lea
daa
push
mov
popf
out
hlt
add
mov
add
movsl
inc
scas
rolb
jg
in
sahf
jecxz
pop
sub
movl
js
mov
jns
fadd
mov
test
and
les
out
jnp
add
out
sbb
jmp
sub
dec
pop
shlb
or
shrb
pop
xor
adc
mov
pop
push
cmp
stos
pop
xchg
test
cmp
jb
mov
mov
push
arpl
or
sbbl
lds
test
mov
icebp
imul
inc
dec
sar
insl
sub
dec
scas
jns
aas
xchg
lcall
ljmp
leave
fbld
dec
mov
add
jg
add
adc
dec
jge
sbbl
cltd
sbb
cld
inc
jge
adc
add
cmc
loop
or
or
pop
sbb
aaa
and
in
xor
inc
push
sbb
scas
mov
idiv
fiadds
jb
cmp
push
dec
lahf
pop
and
mov
dec
sbbl
push
xchg
cmp
mov
aam
pushf
xchg
lcall
dec
inc
mov
in
lock
divl
cwtl
cmp
or
dec
mov
andb
mov
gs
inc
arpl
loop
repz
xor
push
arpl
shlb
push
je
jge
adc
scas
mov
in
decl
or
jmp
ficompl
adc
jecxz
adc
clc
out
je
insb
inc
cli
aam
orl
ret
adc
loope
xor
das
rorb
rorb
insl
rcll
inc
gs
sbb
cs
dec
add
int3
pop
cmp
push
fisubs
rcll
adc
dec
dec
inc
pop
popa
je
fsubr
mov
xchg
lret
or
rcrb
push
ffree
addr16
cltd
mov
fs
in
lds
pushf
mov
addb
push
cmp
mov
fmuls
nop
icebp
punpcklbw
fwait
ljmp
mov
fidivs
inc
cmpsb
fwait
dec
mov
rcrb
int3
adc
jb
arpl
and
push
int3
inc
popa
mov
mov
mov
fimull
ret
push
mov
jo
cld
into
ret
stos
mov
xchg
and
test
in
dec
daa
scas
xor
push
mov
bound
pop
mov
dec
aad
mov
add
daa
xchg
dec
int3
iret
push
rcl
enter
mov
faddl
sub
jle
stos
and
push
fcomp
lcall
push
nop
mov
push
shlb
push
push
mov
out
lea
push
push
in
jp
dec
sbb
lahf
cmpsl
dec
fwait
mov
or
cli
out
and
mov
mov
and
mov
mov
push
iret
jnp
test
fsub
mov
out
fdivl
out
push
fiaddl
out
cwtl
call
or
mov
and
mov
sbb
jo
popf
jns
imul
xchg
lds
lods
lret
cmp
jecxz
xchg
out
pop
xchg
sbb
inc
xor
lret
inc
lods
mov
jmp
adc
enter
or
jle
movsb
das
stos
rep
jle
call
call
inc
mov
inc
add
imulb
mov
pop
popa
jmp
aad
fistpll
push
xor
xor
sahf
mov
pop
in
mov
stos
pop
je
mov
idivb
mov
les
sbb
pop
jge
int
fs
pop
or
loope
adc
popa
popf
jns
xor
dec
pop
cld
jle
aad
mov
inc
dec
ljmp
inc
add
jmp
inc
inc
js
pop
jp
jns
inc
dec
repnz
mov
rol
imulb
push
push
jnp
mov
icebp
mov
leave
out
loope
roll
stos
push
lock
daa
fists
xchg
lea
call
ljmp
cmpsb
fisttpl
xchg
roll
jp
in
xchg
les
scas
xchg
imul
mov
xor
push
fiaddl
jne
clc
jge
pop
or
cmc
sub
and
xor
sahf
dec
cmp
push
fdivs
lret
in
fisubrl
pop
jg
xchg
andl
add
xchg
in
push
or
mov
push
add
ljmp
lahf
sti
xor
jle
ja
xor
les
orb
repz
xchg
and
xchg
xchg
xor
mov
daa
fidivrl
push
mov
and
stos
mov
mov
pop
push
jp
test
jbe
je
leave
aad
mov
dec
push
push
hlt
lahf
dec
push
dec
and
fld
ret
cs
ss
pop
jns
ds
das
pop
clc
or
in
inc
inc
push
data16
mov
mov
add
fnsave
fsubp
ret
in
fldcw
rclb
cmc
lcall
loope
push
insl
jno
pushf
call
rolb
mov
shll
adc
fisubl
adc
sti
pop
cmp
jb
cmp
pop
inc
rclb
stos
and
sbb
sbb
and
bnd
ret
jle
pop
sub
pop
jmp
insw
data16
inc
sti
out
rcrl
fdivrs
lret
add
int
push
ljmp
out
xchg
add
ret
fldenv
lods
cmpsb
into
push
leave
jl
clc
lds
pushf
idivb
test
adc
pop
movsb
shr
aas
shlb
and
pop
add
xchg
stos
dec
pushf
adc
push
mov
sahf
test
fdivrl
mov
mov
or
loope
imul
jno
mov
std
mov
outsb
dec
mov
out
lds
cmc
out
sbb
jmp
lahf
inc
data16
push
shlb
int
cmp
mov
jge
or
es
addb
sbb
push
or
lea
maxps
stos
mov
aas
loop
popa
xchg
mov
inc
int3
iret
add
inc
pusha
shlb
and
cmp
in
push
and
pop
jle
xor
inc
sbb
icebp
dec
cmp
adc
add
xchg
jp
jle
cmc
fistl
xchg
push
lcall
subl
hlt
and
dec
dec
insl
fs
sub
outsl
dec
mov
xchg
dec
xor
push
out
cmc
lcall
sub
js
sub
loopne
and
cmp
dec
sahf
outsb
push
popa
call
mov
ret
cmp
fs
sbb
cmp
mov
shrb
push
cmc
test
mov
inc
shlb
in
push
cs
out
and
dec
shll
sbb
hlt
cmpsl
sub
daa
dec
outsb
clc
fistpll
das
add
and
push
push
call
scas
outsb
mov
or
call
jp
leave
sub
inc
pop
or
adcl
lock
pop
inc
mov
xor
xor
je
stos
inc
enter
cmp
ljmp
and
hlt
cmp
xlat
or
jmp
dec
fisubl
dec
mov
sbb
pop
vunpckhps
mov
fwait
iret
dec
loope
pop
mov
sti
sbb
popf
dec
adc
jno
ss
shll
add
aam
or
mov
sahf
cmp
stos
dec
cmpsb
adc
pop
insb
popa
add
cmpsb
cltd
insb
and
sub
aad
pop
sbb
mov
repnz
aaa
cmp
cs
mov
mov
pop
fsubrs
dec
xchg
std
pop
pusha
pop
cmp
pusha
pop
jb
inc
test
sarl
mov
xchg
daa
xor
inc
daa
std
pop
mov
mov
adc
fistpll
mov
jnp
rcll
add
retw
rcl
cli
imul
dec
lea
orl
frstor
test
inc
in
dec
cmpsl
sbb
arpl
aam
jnp
adc
mov
cli
push
hlt
fsubs
push
mov
cmp
mov
imul
sbb
outsl
pop
adc
cltd
pop
mov
fbstp
mov
les
xchg
xchg
or
js
incl
mov
mov
push
fidivl
adc
repz
mov
jnp
adcl
or
subl
and
out
test
jg
mov
add
cmp
cs
jno
call
adc
fisubrl
mov
loop
fisubrs
dec
and
outsl
inc
lds
dec
adc
or
in
pop
cmc
data16
lea
fs
inc
and
roll
sbb
dec
mov
enter
cmp
sbb
pop
aam
adc
xor
and
scas
jp
push
or
xchg
cmp
stos
inc
add
sbb
and
sub
sub
dec
mov
pop
ja
ret
add
test
mov
sbb
enter
xchg
cmp
testb
out
lcall
cmp
cltd
imul
pop
inc
pop
arpl
cmpsl
push
push
dec
jle
pushf
out
jno
push
mov
sub
sbb
test
and
xlat
shrb
xor
int3
ret
push
addr16
sbb
and
pop
aaa
iret
xchg
stos
cmpsb
fwait
lods
int
dec
dec
xor
ss
or
jbe
test
aad
jl
popa
les
fsubrp
repz
js
pop
lds
and
jo
push
icebp
js
dec
shll
sbb
stc
hlt
movsb
xor
inc
jmp
stos
in
je
fwait
cmp
xchg
pop
add
mov
or
in
jmp
add
inc
inc
push
pop
shll
dec
sub
test
ret
fildll
orb
jno
aaa
outsb
pop
cmp
test
dec
call
mov
or
addr16
loop
xor
push
out
pusha
lock
in
jae
test
sti
mov
pop
push
aaa
cmc
dec
popf
std
outsl
ret
mov
xor
nop
repnz
adc
fistpll
lock
or
pop
sub
xor
sbb
pop
inc
dec
imulb
xchg
movb
pop
hlt
mov
out
xchg
sahf
lods
out
ja
scas
push
out
aaa
push
jno
in
xchg
shr
inc
mov
ficoms
dec
mov
mov
mov
addr16
adc
jo
imul
dec
dec
shrl
cld
add
jge
adc
sbb
hlt
ja
mov
shll
scas
clc
jle
leave
imul
mov
call
lock
mov
mov
mov
in
or
mov
pushf
enter
ljmp
inc
div
fs
inc
or
jmp
jb
ret
test
cmpsb
add
in
test
in
mov
test
mov
aad
or
insl
cmp
jp
pop
out
and
inc
test
stos
pop
fs
outsb
nop
aad
dec
mov
lock
aad
mov
xor
pop
xchg
mov
dec
daa
and
mov
mov
mov
imul
scas
cmp
sbb
dec
pop
jne
sbb
das
and
fstp
cld
fsubr
rcr
pop
jecxz
stc
stos
xchg
dec
sahf
fsubl
mov
sbb
mov
jecxz
xor
mov
push
add
jg
cmp
xchg
cmc
dec
mov
push
or
popa
lahf
inc
and
mov
idivl
cmp
ja
out
mov
jl
xchg
outsl
sbb
xor
sbb
mov
pop
mov
push
ss
outsl
add
jl
jmp
ja
xor
lods
sbb
jno
dec
inc
push
mov
sarl
in
mov
xchg
or
imul
decb
ret
daa
jnp
add
dec
inc
vmovmskps
inc
pop
mov
test
hlt
lahf
sbb
or
insb
mov
in
fbld
mov
js
jge
xchg
std
imulb
xlat
cmc
mov
pusha
add
out
nop
xchg
sub
outsb
push
andb
cmpsl
xor
je
stos
ss
pop
cmp
ja
dec
inc
mov
dec
popf
sbb
sub
pop
xor
xchg
mov
sbb
scas
pop
aas
lock
outsb
out
lods
jmp
femms
roll
nop
addr16
xor
sub
pop
cmpsl
cmp
shl
mov
cmpsb
jne
or
and
cmp
push
sub
mull
xor
inc
mov
ja
sub
stc
push
repz
cwtl
mov
mov
inc
or
leave
lahf
cmc
cmc
or
pop
mov
out
imul
cmp
out
arpl
sub
ret
mov
repz
outsb
ret
lods
into
sbb
dec
repnz
lods
mov
sahf
push
mov
and
mov
cld
sbb
pop
xchg
sub
xchg
inc
dec
lods
xor
push
or
insl
insl
cmpsl
enter
jb
xor
adc
push
cli
sub
inc
fs
sbb
push
and
push
mov
sahf
mov
pushl
pusha
test
std
pop
cmpsl
sub
push
in
pop
daa
xchg
loopne
std
lods
and
lock
dec
sbb
scas
int3
sbb
pop
adc
jmp
jg
lcall
ds
ja
xor
out
mov
sbb
adc
add
lea
pop
lret
das
mov
popf
sub
or
push
movsl
inc
xor
in
inc
jne
mov
je
mov
add
cs
nop
lea
ss
mov
adc
js
mov
lret
cli
mov
lcall
and
loop
push
decb
xchg
mov
nop
xlat
xchg
sbb
mov
bound
xchg
test
sub
xchg
divb
dec
les
pop
pop
cs
push
pushf
mov
bound
and
pushf
xchg
enter
jnp
insb
subb
outsb
ret
lret
or
adcl
add
adc
push
lahf
shll
sub
fmul
lea
fidivrs
jbe
xchg
pop
stos
dec
fidivrl
dec
ss
mov
rcr
push
popf
mov
push
fsubr
sub
test
cmpsl
sbb
xchg
out
shll
lock
pop
mov
sbb
cs
les
shrl
and
push
push
fcmovbe
and
cmp
sbb
dec
fsub
dec
out
sbb
jne
mov
jp
inc
xchg
push
adc
in
ja
cmp
mov
xchg
dec
nop
cmc
xchg
mov
addb
sub
cmp
dec
sbb
in
push
leave
lea
fildl
inc
mov
in
push
jnp
ficomps
aam
xchg
xor
mov
fists
outsb
movsl
out
inc
js
movsl
sbb
sbb
pop
mov
pushf
sbb
mov
cmp
dec
js
pop
lcall
pop
sbb
in
jge
outsb
mov
in
or
sbb
sbb
cltd
scas
lcall
clc
or
lret
adc
mov
push
add
in
mov
imul
jno
sti
sub
in
pop
cmp
push
cmpsl
xor
movsl
push
pop
stos
das
dec
mov
call
icebp
mov
in
xor
add
aam
add
scas
push
rclb
inc
dec
repz
mov
addr16
mov
fcomp
sub
popl
iret
sarl
lods
out
or
les
sti
inc
out
mov
jae
adc
loop
dec
pop
stos
dec
jge
rolb
fsubs
cs
std
xlat
and
mov
mov
cmp
out
and
in
hlt
ss
cmp
push
cmp
pop
in
data16
faddl
out
push
push
repz
adc
pop
leave
xchg
loop
into
xor
mov
or
sahf
mov
shl
imul
or
mov
addl
pop
loop
lahf
xchg
call
push
jne
or
mov
mov
xchg
xor
out
mov
sub
loope
imul
add
add
out
xchg
andb
lret
mov
pop
xor
out
xchg
cmp
outsb
push
nop
xchg
mov
stos
inc
cmp
fildl
xor
mov
iret
and
mov
jcxz
flds
dec
inc
lods
jp
scas
or
add
imul
inc
xlat
xor
jae
subb
push
sub
pop
mov
clc
pop
loope
jnp
or
and
xor
and
mov
test
insb
cmp
cs
and
sbb
fcoml
jae
arpl
js
aam
fiadds
dec
ljmp
xchg
cmpsb
dec
loopne
gs
lret
mov
ds
sub
sbb
popf
xor
mov
xchg
fcompl
cs
pop
jbe
add
dec
sbb
mov
mov
dec
adc
jno
mov
pop
mov
adc
jno,pt
push
pop
cmpsb
xchg
sbb
fstps
or
pop
add
nop
std
lods
pop
or
adc
mov
inc
test
call
pop
cmpsl
shll
nop
js
lods
ret
xlat
movsl
jge
pushf
mov
mov
and
nop
bnd
fs
cs
mov
adc
xchg
mov
dec
js
jno
shlb
orl
adc
pop
jp
sahf
cmp
cmpsb
adc
lahf
dec
inc
dec
mov
sbb
push
fiaddl
movb
pop
rclb
cmp
sahf
cmp
add
ljmp
imul
jecxz
jno
fildl
cwtl
sub
in
mov
mov
push
in
dec
jl
jle
test
mov
adc
or
mov
xlat
mov
mov
jp
and
xchg
flds
dec
add
ret
lods
lea
jge
scas
dec
xlat
sub
stc
stos
fwait
popf
aam
int
pusha
or
sti
pop
adc
test
push
in
in
sti
or
test
jecxz
and
icebp
movsb
mov
mov
adc
inc
into
sub
mov
pop
shrl
inc
cltd
mov
rolb
cmp
jg
inc
pushf
rcll
cltd
mov
or
lea
lock
lds
lret
dec
addl
bound
repz
adc
call
add
in
or
xchg
fldpi
xchg
xchg
out
push
xor
xor
xchg
out
inc
and
movsl
mov
jle
pop
mov
jnp
sub
pop
sub
lahf
rolb
idiv
notl
xchg
js
mov
lret
and
jbe
jg
push
adc
lds
mov
test
test
leave
inc
adc
xchg
and
imul
sbb
mov
and
mov
scas
nop
xchg
cmp
rclb
adcl
mov
stos
dec
xorb
xor
mov
mov
mov
push
dec
fcoms
test
pop
xchg
test
enter
adc
in
jo
lods
pop
inc
cld
test
and
stc
movsl
jbe
loope
jne
mov
stc
aas
pop
sub
enter
lret
movzwl
pop
inc
jae
lods
sti
test
cmpsb
rorb
xchg
add
dec
pop
roll
push
xor
mov
adc
dec
jne
fdivrs
out
movd
push
sub
addr16
stc
jl
xchg
push
int
adc
stc
mov
add
mov
inc
les
or
dec
jp
xlat
js
push
lock
pop
jmp
gs
mov
dec
std
negb
inc
stos
les
jp
iret
xor
xchg
int
in
pop
bound
pop
push
pusha
cltd
cmp
das
out
outsb
call
mov
or
in
popf
xchg
aam
lds
push
adc
rcrl
jmp
cmc
jns
movsb
xchg
add
pop
addr16
push
push
adc
mov
and
sahf
mov
out
jb
sub
dec
dec
movb
or
leave
jae
and
cmp
jmp
out
movsl
xchg
adc
mov
sti
arpl
and
jmp
jecxz
repz
jl
call
mov
push
mov
xchg
les
icebp
adc
es
mov
and
sbb
leave
xlat
push
scas
cltd
jle
xchg
adc
dec
mov
mov
je
cmp
cmp
inc
outsb
add
jge
add
jmp
scas
jecxz
push
gs
push
out
fdivrl
xor
or
mov
clc
pop
sahf
xor
sub
orl
and
iret
cmc
fdivs
add
jle
push
loop
movsl
dec
dec
outsl
data16
push
pushl
outsl
imul
cmp
arpl
mov
out
mov
mov
jae
push
push
scas
adc
loope,pn
xor
ret
in
sub
cs
xchg
clc
dec
test
pop
jle
loop
mov
xchg
jecxz
push
mov
cltd
addr16
xor
insl
mov
decb
cmp
jp
add
mov
mov
ror
in
push
mov
cmc
popa
int
cmp
and
mov
arpl
lds
sub
dec
sub
lock
sub
das
and
cli
push
cmp
test
mov
ret
mov
push
icebp
push
addr16
mov
or
sub
pop
aas
pusha
sbb
fs
stos
push
jb
dec
in
in
push
xchg
adc
push
push
dec
pop
and
lea
lods
jl
fwait
ja
mov
lods
in
or
lock
jnp
sbb
cmp
in
xor
pop
cmpl
sbb
sub
cli
ret
lock
cli
lret
movsl
dec
out
enter
add
loop
nop
add
pop
fstpl
mov
aaa
mov
ss
mov
ret
and
inc
ljmp
call
xchg
je
imul
cld
aam
adc
lret
lds
pop
lock
in
xor
adc
mov
sub
inc
or
mov
jae
dec
fisubrl
fsubrl
jo
add
sbbb
loop
mov
and
sbb
xchg
fiadds
mov
mov
add
pop
ret
adc
mov
inc
add
xchg
pusha
inc
mov
pop
nop
xor
xlat
and
in
iret
jne
dec
repnz
nop
adc
in
push
cs
insb
jbe
and
sub
mov
cmp
pop
mov
sub
or
mov
mov
lret
sub
push
testl
test
sarb
and
dec
shl
sbb
das
mov
stos
pop
gs
neg
mov
push
xor
add
sub
mov
jmp
inc
hlt
dec
lea
jae
push
xor
xor
cmp
push
test
cwtl
data16
cmp
imul
mov
sahf
jnp
lds
fbld
aaa
out
sub
pusha
out
cltd
xchg
ds
mov
adc
or
das
pop
mov
sub
or
loope
stc
sbb
jb
mov
add
add
imulb
inc
add
notl
sbb
lcall
mov
mov
jg
ficomps
xchg
or
sbb
xchg
jb
gs
mov
outsb
test
shr
pushf
fs
repnz
das
stc
mov
iret
push
jb
or
xor
enter
lcall
inc
push
in
test
mov
sbb
clc
dec
push
adc
movsb
lret
and
imul
mov
push
dec
mov
outsb
adc
roll
subl
pusha
push
int3
rcrb
idivl
sbb
pop
xor
sub
adcl
and
bound
push
lods
pusha
movsb
jne
adc
mov
or
aas
ficoml
xchg
jmp
dec
push
rclb
xor
stc
cmp
xchg
cltd
pushf
mov
jno
les
sub
in
movsb
int
add
push
cs
dec
mov
sbb
pcmpeqw
or
xor
insl
push
mov
add
nop
mov
dec
add
mov
bound
push
push
js
sub
jge
push
insb
fdivs
pop
xchg
imul
test
inc
lock
scas
pop
cmc
jnp
stos
add
cmpsl
fwait
into
xchg
sub
mov
aas
iret
je
pop
and
cs
ss
jbe
lea
mov
jl
lahf
shrl
mov
pop
adc
or
mov
fstl
leave
mov
mov
and
loopne
sti
dec
les
mov
push
mov
mov
pop
je
ficoms
xchg
sub
xchg
imul
sti
test
outsl
inc
jae
add
pop
mov
outsb
lahf
fistpl
push
push
sub
inc
das
jecxz
pop
sub
jge
aas
aam
sbb
outsb
loop
cmpsb
xchg
cmp
xor
jnp
push
push
add
rclb
loope
lret
adc
into
push
jecxz
mov
inc
cmp
ss
dec
insb
mov
inc
sbb
jge
mov
pop
xchg
lahf
pusha
push
pop
xchg
xchg
add
mov
mov
rcrb
cltd
lret
popf
daa
mov
cmpsb
mov
loop
aaa
xchg
dec
addr16
add
jl
dec
jp
mov
aas
lock
loopne
jp
pop
cmp
rcrl
dec
in
call
arpl
sub
adc
stos
pop
daa
push
jge
mov
xor
mov
pop
mov
orl
jmp
inc
pop
stc
test
daa
sub
sbb
add
jmp
mov
fcompl
movsb
fucomp
jp
and
cmpsl
les
xchg
cs
xor
mov
xor
popa
daa
jge
pop
add
sbb
jns
fisubs
pop
roll
insb
hlt
mov
iret
divl
pop
inc
adc
add
mov
in
or
es
add
inc
scas
xor
pop
cmp
rcrb
sub
je
sub
xor
sub
jle
fbld
jo
mov
ret
dec
outsb
pop
ds
pop
mov
rcll
divl
std
or
in
dec
mov
add
cmp
scas
and
xchg
inc
mov
lahf
clc
mov
and
cmc
pop
lret
sub
cmp
xor
repnz
jecxz
push
in
lcall
add
notb
fadds
jg
inc
pop
fsts
mov
inc
mov
or
inc
jmp
cli
je
movsl
jmp
mov
test
and
dec
sbb
es
sbb
mov
cld
mov
adc
mov
cmc
aam
dec
out
pop
fmul
jg
pop
fstl
shll
sub
leave
in
lret
xchg
mov
fwait
js
dec
out
in
or
out
push
lods
call
push
clc
sub
add
arpl
or
pop
xchg
je
adc
sub
das
or
outsb
xchg
mov
pop
dec
mov
int3
jle
sub
stos
inc
in
fsub
inc
mov
sub
mov
cli
adc
xor
pop
fisttpl
scas
inc
scas
xor
dec
ja
and
jg
lahf
fdiv
rep
cmp
pop
push
imul
rorb
adc
test
les
or
ds
cmp
fwait
bound
pop
cmp
add
fsub
sarb
pop
loop
ljmp
add
mov
push
xor
and
pop
cmp
aam
cld
outsb
cmpsl
es
shl
mov
outsl
pop
mov
dec
mov
sarl
dec
scas
out
adc
xchg
cmp
mov
inc
inc
adc
push
pushf
sub
mov
xchg
pop
xchg
dec
dec
aad
push
mov
enter
fcoml
pop
push
dec
nopl
imul
orl
loope
mov
aam
cltd
pop
cmc
mov
or
xchg
and
addr16
movl
cmp
jbe
adc
scas
mov
fs
push
call
xchg
jp
cld
push
enter
jg
das
add
xchg
mov
push
fs
jnp
pop
sub
xchg
std
stos
test
outsb
push
push
xchg
and
inc
out
push
adc
aad
mov
mov
sub
mov
out
shrb
fstpt
xor
jno
push
cmpb
or
mov
test
sarb
pop
and
cmp
mov
dec
shlb
lds
cmp
les
jbe
notb
adc
jbe
daa
adc
int
hlt
push
je
jecxz
add
out
and
dec
arpl
leave
clc
sub
adc
push
adc
dec
and
fstl
gs
popa
sub
out
mov
and
adc
sub
je
lds
shr
mov
xor
popa
mov
imul
insb
sti
sarb
mov
lock
lret
cld
idiv
rolb
loop
leave
cmp
xor
jle
cmp
mov
or
fld
or
int
ud0
dec
iret
push
xchg
dec
ret
test
inc
jb
inc
out
adc
pop
fimuls
xor
les
jne
hlt
cmp
sub
xor
push
adc
repz
lods
fists
push
ja
jne
fsubs
test
inc
outsl
ret
dec
mov
push
pop
lret
sbb
push
mov
push
xchg
enter
in
xchg
decl
cwtl
sub
or
xchg
cmp
push
sbb
xor
ljmp
pusha
cmpsl
aad
cmpsb
mov
mov
mov
jmp
mov
mov
bound
cmp
insl
es
ret
inc
adc
out
add
xor
push
aas
jmp
push
int3
mov
sbb
add
add
movsb
call
jmp
aad
mov
push
out
movsl
in
out
pusha
or
lahf
int3
inc
lret
inc
jg
popf
mov
cltd
dec
ret
add
mov
cmpsl
enter
or
add
cmp
mov
jnp
clc
lock
mov
adc
mov
andl
mov
sbb
lock
cmc
sti
sub
repz
xchg
mov
dec
cmp
loope
loop
sbb
outsl
js
mov
inc
popa
lods
insb
repz
daa
aaa
jo
add
inc
test
fdivl
push
addl
xchg
imul
cmpb
push
test
mov
dec
movsb
loop
sub
lahf
pop
jne
outsb
xor
addr16
jne
nop
pushl
mov
push
xlat
push
or
or
in
lods
xor
aas
scas
in
push
mov
cmpsl
mov
fucomi
mov
push
adc
mov
mov
jnp
aad
push
adc
nop
test
ljmp
mov
scas
ficomps
movsl
push
and
sub
loop
gs
mov
dec
call
icebp
fwait
cltd
ror
pop
fmuls
jnp
sub
sbb
adc
andl
xchg
sub
xchg
dec
fdecstp
xor
sub
je
jle
insb
loopne
mov
mov
cld
cmp
jbe
mov
mov
lret
pop
cmp
sbb
and
mov
push
loope
fidivl
jge
call
adc
xchg
fsubl
das
das
xchg
push
inc
cmp
lea
or
xor
push
sub
mov
jecxz
jns
jae
or
jbe
outsb
inc
cmp
mov
loope
mov
fwait
pop
mov
mov
xor
int
xchg
xor
or
jne
pop
negl
outsb
out
cli
fwait
cwtl
fnstcw
loope
xchg
stos
dec
and
movsl
mov
scas
sbb
daa
les
push
orb
mov
adc
daa
sub
shl
dec
imul
and
imul
xlat
and
loop
cld
add
lea
sbb
xor
jmp
lahf
mov
bound
jno
mov
fucom
inc
lahf
fwait
insl
sbb
iret
add
sub
jg
and
xchg
jb
scas
dec
pop
pop
sbb
or
add
add
loop
sbb
and
xor
rclb
jge
pushf
lcall
loopne
xchg
jae
mov
popa
mov
add
ds
je
push
lds
inc
inc
xor
idiv
mov
xchg
jg
cli
adcb
lea
fdivrl
movsl
mov
aaa
xchg
loope
jb
addr16
lock
or
or
inc
scas
sti
popa
fildl
lret
dec
ja
xlat
xchg
mov
pop
cmc
push
push
or
enter
arpl
insl
jg
lret
sub
mov
dec
adc
or
mov
add
pop
fimuls
pop
out
aas
out
std
pop
adc
mov
sbb
sub
jl
in
adc
andl
aaa
xchg
xlat
push
sbb
dec
cltd
in
shr
inc
sub
movsl
pop
pop
xchg
or
fwait
adc
jbe
shll
pop
xor
pop
push
cmp
fidivs
mov
jo
push
mov
inc
mov
xchg
cbtw
mov
cmc
std
adc
movsl
test
mov
fistps
cmp
xorl
iret
fsubl
xchg
sub
pop
popf
jmp
mov
les
rorl
push
sub
das
jno
pop
or
pop
dec
xor
adc
push
cmp
jne
arpl
daa
add
adc
inc
mov
ficoms
xchg
test
jl
in
dec
push
mov
pop
add
inc
add
jmp
add
shl
outsb
clc
push
dec
xchg
inc
mov
loopne
clc
mov
xchg
shlb
sbb
movsl
addl
cmpsb
push
sarl
gs
fwait
fs
outsb
mov
in
lds
jge
mov
cld
in
movhps
mov
dec
mov
leave
jbe
enter
push
stos
sbb
sub
scas
comiss
sub
mov
outsb
ja
movsb
stos
les
lds
lcall
rolb
lret
ljmp
outsl
mov
or
adc
inc
push
mov
loopne
sbb
mov
mov
push
roll
xchg
or
xchg
jae
dec
xorb
test
xlat
mov
cltd
sbb
sbb
pushf
lods
rcll
mov
in
xlat
in
in
aas
sahf
mov
call
mov
arpl
add
or
mov
fadd
out
and
cmp
lds
out
imul
inc
xor
imul
push
in
push
dec
les
scas
mov
je
inc
mov
scas
pop
fnstenv
enter
push
sbb
add
push
out
lods
adc
pushl
push
push
inc
cmp
dec
addb
int
add
rorb
stos
push
jo
repz
sub
mov
jae
fwait
push
in
cmc
enter
and
push
lea
add
inc
push
and
cltd
ljmp
pop
sub
and
xchg
loop
mov
out
mov
mov
cmc
sbb
sahf
dec
test
jbe
out
or
pop
jecxz
lahf
test
dec
rcrl
ret
pushf
mov
std
sti
mov
pop
fnstsw
enter
mov
and
fwait
mov
cmp
ret
jle
cmp
das
or
dec
push
movsl
addr16
aad
dec
sti
mov
pop
push
insl
mov
into
mov
enter
sbb
in
xchg
enter
sbb
mov
ret
push
mov
xor
into
ja
in
dec
cmpl
cmp
pop
hlt
scas
lret
fs
xchg
and
sbb
jno
jmp
out
bound
dec
xchg
push
scas
stos
push
jle
sarb
sub
inc
out
mov
push
je
hlt
lret
icebp
xchg
pop
add
rcrb
or
out
inc
icebp
aas
rorl
pushl
pop
shrl
dec
out
lcall
orb
rcrl
int
lea
fnstenv
inc
in
call
cmp
adc
jmp
out
cli
inc
push
outsb
add
cs
es
xor
push
push
lcall
arpl
and
sbb
cwtl
xor
imul
dec
imul
cwtl
inc
mov
mov
jl
inc
notl
xor
push
dec
mov
sub
call
mov
mov
fsts
or
jns
sbb
push
pop
push
sub
push
mull
int3
sub
sti
repz
les
adc
cmp
and
cmp
jmp
push
and
imul
adc
call
mov
mov
daa
or
pop
out
ds
dec
pusha
jbe
fcomps
lods
xchg
and
pushf
loop
pop
sub
fucomip
std
or
lcall
sub
cmp
and
cmovl
mov
push
sti
xor
notl
jae
fadds
add
in
hlt
push
test
cld
and
lahf
popa
pop
sub
and
cmp
pop
test
cmp
mov
lods
mov
dec
repz
inc
js
test
subl
out
outsl
ficoms
pop
jle
pusha
sti
std
or
and
mov
push
mov
dec
add
xlat
loope
mov
jae
aas
loope
add
sbb
in
dec
mov
xchg
mov
lods
nop
pop
inc
or
mov
mov
or
xchg
and
sbb
mov
xchg
jae
sbb
daa
mulb
jl
cs
iret
mov
add
xchg
in
fs
pop
loopne
popa
outsb
and
sub
je
repnz
cmp
dec
cmp
rcl
pop
mov
aas
arpl
vpmovsqb
jmp
jns
ds
or
inc
and
ficomps
bound
mov
dec
xor
mov
scas
sub
das
push
add
sub
lret
outsb
cmpsb
xchg
push
mov
lds
jae
push
inc
fs
ds
ficoms
js
push
push
shll
and
in
lds
js
inc
push
add
test
jecxz
ds
test
push
insb
add
xor
fs
pushf
jp
xor
movsb
xor
sbb
fidivrl
sbb
mov
mov
jp
push
push
in
cmp
push
aad
out
add
xor
cmp
cmc
maskmovq
divl
ror
repnz
dec
adc
scas
adc
cmp
sahf
or
push
push
popf
jno
lea
lock
pop
and
popa
daa
fucomi
adc
pop
wrmsr
lret
shll
imul
xchg
jle
xor
loope
push
data16
and
pop
es
xlat
push
int3
lahf
sub
mov
fldl
mov
aad
fwait
xor
lret
jle
xchg
mov
xor
push
popa
mov
mov
clc
gs
add
into
xchg
test
fldt
std
dec
popa
mov
mov
ss
xchg
add
inc
insl
sbb
sub
addr16
mov
lods
icebp
mulb
rcrb
andl
rcrl
cmp
test
push
incb
mov
aad
dec
aam
mov
xchg
adc
mov
inc
mov
dec
outsl
les
xchg
mov
cs
pushf
shl
add
imul
fucomi
out
mov
incl
bound
cs
lret
sbb
pop
inc
sub
push
daa
pop
shl
sahf
xchg
inc
push
aam
cmp
int3
lahf
mov
xchg
or
jle
or
jbe
adc
adc
pop
mov
roll
pop
push
mov
mov
daa
or
lock
scas
xlat
sub
out
fimull
mov
inc
dec
iret
cmpsl
add
insl
sahf
test
cmp
repz
icebp
ret
dec
add
push
fadd
aam
dec
xor
sbb
leave
push
in
cld
rcll
dec
pop
cwtl
xchg
shr
iret
jge
cmp
cmpsb
push
and
push
sahf
inc
push
jbe
sbb
jno
push
movsl
and
subl
xchg
clc
pop
fwait
jo
and
out
iret
in
sbb
adc
dec
mov
dec
imul
scas
push
je
push
jb
in
cmp
mov
inc
adc
fildl
mov
adc
mov
xor
push
nop
aad
stos
popa
aad
ds
jns
sub
pop
jg
ds
lods
jmp
sbb
dec
xor
clc
jl
out
inc
fxam
dec
sub
push
sbb
or
aaa
push
or
jns
pop
cmp
arpl
rol
test
and
dec
cmp
xchg
cmp
lods
lret
jo
xor
xchg
dec
push
or
enter
sahf
outsl
push
cwtl
ret
andl
push
icebp
or
add
mov
stos
push
mov
mov
or
js
mov
loopne
in
ja
sub
cmp
dec
jae
jb
pop
xor
push
andl
push
orb
adc
pop
sbb
daa
fimuls
mov
popl
data16
and
or
divb
lods
arpl
mov
fdivrs
cmp
dec
xor
sbb
call
ret
lcall
enter
int3
loopne
jp
adc
inc
or
or
jbe
jg
scas
mov
aaa
out
inc
enter
in
pusha
aaa
xchg
jmp
jecxz
out
cmpsb
push
adcb
int
cmp
in
popa
inc
jle,pt
push
ljmp
fwait
call
xchg
and
mov
adc
dec
std
outsl
lock
fsub
sbb
add
or
pop
and
out
popl
or
add
cmp
ss
shll
adc
sub
ljmp
cmp
mov
mov
or
fistpl
pusha
int3
pusha
jns
ret
mov
pop
and
mov
clc
mov
out
outsb
into
stos
jg
sti
es
and
je
cmp
jg
and
cmpsl
push
insl
xor
mov
popf
jnp
test
xchg
lea
sub
out
lods
ret
cmp
arpl
sti
mov
mov
pop
or
fmuls
or
jl
pop
fcomi
mov
jno
mov
lea
push
xor
xchg
pop
pop
sbb
and
je
mov
iret
cli
mov
push
jmp
or
movsb
push
rcr
aam
xchg
or
outsl
or
shll
and
data16
cld
lcall
ficompl
mov
hlt
outsb
aam
adc
ljmp
movsl
jmp
lea
xorl
jle
mov
jnp
pop
in
jno
sbb
mov
inc
xlat
lock
hlt
xchg
cli
pop
lret
iret
cmp
std
ss
cmc
xchg
push
roll
scas
push
sbb
push
jp
cli
movsb
fisttps
inc
or
imul
jl
lret
mov
cs
xchg
inc
stc
and
push
and
sub
scas
mov
in
out
jno
stos
sbb
sarl
dec
in
dec
hlt
popf
push
mov
adc
mov
aad
into
jmp
inc
or
idiv
out
or
cmp
divb
fisubrs
imul
add
push
lea
test
sub
xor
repz
or
std
ds
mov
or
jg
sub
jo
cmp
imul
xor
xchg
pushf
leave
ds
mov
and
jl
and
mov
enter
dec
out
sub
mov
lds
lret
sti
mov
push
xchg
mov
mov
fstps
inc
cmp
rclb
and
es
fisubrs
mov
and
mov
mov
jno
sahf
jp
mov
dec
mov
mov
test
popa
and
xchg
adc
sahf
jae
xor
scas
push
dec
add
enter
push
lret
pop
push
movsb
into
xor
xchg
nop
adc
sbb
loop
xor
sbb
inc
call
push
pop
push
add
inc
add
push
fsubl
repz
in
add
push
sub
rclb
adc
stc
ficoms
cwtl
loope
jne
adc
push
adc
rcr
push
dec
aaa
adc
fnstsw
stos
sbb
ficoms
push
jecxz
mov
mov
jne
adc
out
bnd
add
and
push
adc
movb
xchg
mov
inc
cltd
cmp
sbb
push
movsb
mov
inc
and
insb
jns
ja
lea
cld
mov
scas
mov
pop
push
inc
lods
cmc
icebp
cwtl
lcall
es
js
sbb
inc
cs
mov
mov
loop
mov
fcmovne
mov
push
mov
repz
jae
sbb
mov
outsb
add
dec
sub
inc
xchg
xchg
rcll
mov
jle
sbb
mov
mov
mov
cmp
xchg
pop
jmp
sbb
mov
adc
das
test
mov
fwait
arpl
test
test
cs
out
jo
or
bound
adc
popf
pop
mov
add
adc
mov
adc
enter
test
pop
fisttpl
dec
pushf
clc
into
sbb
lret
unpcklps
pusha
aas
arpl
jns
mov
scas
loop
fsubr
into
dec
add
mov
xchg
je
jae
mov
inc
add
mov
jno
stc
adc
inc
jle
cmp
jae
xor
adc
sahf
add
mov
cmp
push
incl
adcl
leave
mov
bound
outsb
das
and
mov
ss
or
lods
push
test
xlat
xor
mov
scas
pop
adc
mov
call
arpl
insl
sarl
xor
mov
jnp
jo
lret
cmp
sub
test
repz
and
jbe
pusha
dec
mov
sub
mov
inc
ss
stos
jcxz
dec
jl
or
mov
rorl
xchg
pop
rorl
add
data16
das
adc
leave
mov
xor
into
adc
rolb
push
into
and
outsb
outsl
sub
fdivrs
repz
out
lds
je
adc
enter
jmp
jb
adc
les
sub
scas
popa
jne
mov
pop
daa
mov
out
dec
lahf
xor
sub
or
mov
loop
adc
adcl
xchg
shlb
inc
or
xlat
dec
xor
jg
pop
cmpsl
inc
out
neg
inc
addr16
mov
mov
enter
scas
cmp
pop
lods
in
negl
pusha
out
jmp
add
add
cmpsl
jecxz
sbb
add
xor
sti
enter
mov
mov
xchg
mov
mov
stc
mov
mov
dec
lock
repz
cmp
ret
push
cmpsb
filds
lret
vpsubb
dec
adc
xchg
imul
or
mov
xchg
dec
inc
test
fcomps
xchg
cmp
jg
or
push
and
rcll
mov
addr16
lock
pop
fsubrp
or
or
xor
movsl
je
push
cmp
xor
pop
adc
xorl
dec
clc
fnstenv
dec
jl
add
and
sub
es
xor
aad
cld
jne
test
adc
xor
jne
add
cmp
ret
out
mov
ja
fldl
icebp
cmc
stc
jb
mov
gs
imul
or
jmp
pop
cli
repnz
xchg
and
cmc
mov
pop
pop
adc
xchg
inc
insb
ss
cld
bound
push
inc
jle
out
sbb
push
pop
cmpsl
loopne
inc
mov
lea
pop
jns
popf
add
or
adc
sbb
lods
mov
push
xchg
adc
mov
outsl
pop
fldl
imul
xchg
dec
inc
out
xchg
jg
in
outsb
lahf
add
mov
xor
icebp
sub
daa
push
test
into
add
in
jg
push
cmpsl
out
iret
push
clc
push
test
mov
mov
mov
lds
call
enter
inc
sbb
aad
mov
scas
pop
sub
adc
lret
ficompl
jl
xor
inc
mov
lds
sarb
xor
mov
aam
pop
xlat
sub
mov
sbb
arpl
mov
dec
xchg
mov
xchg
xchg
ja
pop
and
adcb
lock
inc
mov
xchg
daa
daa
lods
xchg
sarb
dec
fsubl
xchg
dec
or
es
xchg
call
cmp
lods
insl
xchg
push
sub
sub
leave
fwait
jg
call
and
dec
dec
push
xlat
lcall
pop
mov
stos
addl
jecxz
in
out
xchg
clc
dec
in
sbb
stos
mov
cwtl
out
arpl
setle
jo
jbe
mov
movd
cmp
test
or
out
add
mov
mov
clc
add
sahf
ljmp
mov
push
inc
mov
add
push
mov
or
fwait
jmp
and
int
lret
xchg
out
dec
mov
rolb
xor
ds
ja
mov
popf
or
adc
aas
mov
mov
test
repz
mov
pop
mov
inc
mov
out
ss
mov
subl
imul
ficomps
mov
sti
shll
pop
fwait
pop
pop
sub
mov
xchg
ret
pop
fs
sbb
mov
xor
cmpsb
mov
and
inc
lret
ss
and
and
ja
sub
ret
cwtl
inc
jge
je
ja
sbb
and
adc
decb
neg
mov
xchg
shl
daa
iret
leave
sbb
mov
sub
push
arpl
fidivs
popf
mov
mov
mov
aas
aaa
mulb
movsb
cmpsb
in
int
loopne
xor
ret
imul
cmpsl
or
push
cmp
mov
outsb
mov
inc
mov
in
repnz
out
and
cs
mov
mov
ljmp
add
test
aad
pop
in
add
xlat
stos
sbb
push
add
mov
pop
xor
into
adc
sub
ljmp
xchg
fcompl
out
pop
ret
mov
aam
test
lea
inc
lret
or
in
ss
and
pop
jle
push
sti
mov
push
repnz
repz
pop
ja
sub
stc
shll
and
xchg
xor
adcb
cli
pop
add
inc
push
jns
std
test
inc
sarl
ds
pop
sub
xchg
adc
push
pop
jge
adc
add
out
adc
sti
add
and
ljmp
push
std
jg
popf
std
dec
movl
pop
and
xchg
xor
test
loop
adc
mov
mov
or
ja
arpl
ds
lret
ficoms
add
sbb
lcall
add
sub
xchg
mov
push
push
clc
ja
add
jae
sub
stos
lretw
xchg
jmp
cmp
lcall
mull
sub
sub
out
push
sub
daa
jge
mov
scas
cs
outsl
ja
pop
cmpsb
pop
add
es
inc
inc
mov
scas
mov
push
sub
outsb
add
lcall
ss
jne
and
cmp
push
inc
jnp
aam
ja
pop
jge
aam
pop
sub
mov
pusha
dec
xor
fldcw
bound
out
sti
mov
cmp
jno
lahf
mov
jecxz
jl
mov
push
push
sarl
rcll
xchg
sbb
jg
test
fsubrl
jge
cmp
sbb
int
mov
cmp
push
sub
mov
popf
dec
mov
mov
inc
and
cwtl
and
jne
adc
testl
ljmp
fistl
inc
adc
xchg
loopne
push
arpl
data16
push
pop
mul
imul
rorl
fistpll
push
cmpsl
xchg
push
aas
enter
xchg
outsl
dec
lods
dec
add
mov
add
shrb
pop
jbe
push
movsb
imul
test
ds
adc
jo
lret
lds
decb
ljmp
repnz
imul
lods
and
es
push
shrl
dec
lods
icebp
push
add
lea
setl
popf
xlat
fdivrs
pop
mov
mov
je
add
cld
adc
adc
scas
testl
inc
sbb
fists
push
imul
lret
push
mov
repz
cmpsl
xchg
jb
mov
pop
jmp
into
pop
ja
outsl
jl
sbb
jmp
inc
fwait
lods
push
test
lock
push
addr16
push
cmp
mov
cli
jb
cvttps2pi
sbb
bound
orb
pop
int
and
leave
push
aaa
into
insb
fstl
dec
insl
cwtl
nop
mov
cmc
mov
pop
adc
pop
aaa
test
and
xor
push
sub
imul
mov
jg
push
push
pushf
push
jbe
shlb
or
push
das
jbe
jns
or
movsb
sub
popa
jg,pt
adc
inc
push
fwait
push
bound
cvttps2pi
dec
and
insb
or
xchg
cmpsl
cmp
mov
or
fwait
push
pop
cmp
and
rcrl
jle
mov
testb
mov
cmc
sub
sbb
jmp
add
sub
adc
mov
mov
pop
jb
nop
sbb
pop
sbb
ds
das
adc
mov
icebp
loope
push
lods
adc
incl
jmp
outsb
subb
addl
jno
and
pusha
jl
cwtl
xchg
mov
out
addl
dec
inc
dec
jmp
mov
mov
adc
xchg
test
sub
mov
test
dec
push
jmp
inc
mov
adc
mov
pusha
or
inc
cmp
cmc
andb
sub
jmp
shlw
mov
mov
fstpl
enter
lods
pop
adc
enter
xchg
inc
sub
xchg
mov
imul
ficompl
out
or
cwtl
jae
insl
add
or
fs
mov
cmpl
popl
sbb
call
in
and
sarl
outsb
jp
mov
fst
mov
lock
into
xchg
test
pop
popl
xchg
jmp
daa
popa
scas
aam
mov
cltd
jno
jae
in
in
xor
cmpsl
enter
rclb
fldenv
cmp
mov
xor
xchg
add
repnz
and
nop
and
sarb
pop
sub
out
add
sbb
loope
test
xchg
sub
xor
xchg
jg
cwtl
in
stos
mov
stos
xor
mov
cmp
push
pop
mov
and
test
cmpb
hlt
mov
leave
or
dec
push
jnp
aad
push
mov
xchg
ss
push
outsb
xchg
add
and
cmp
xor
movsl
cmp
inc
fildl
pusha
add
sahf
pusha
mov
je
fiaddl
push
pop
mov
adc
cld
pop
sbb
leave
stos
movsl
ret
xor
sub
insl
mov
hlt
loopne
mov
sarl
movsb
ja
jge
cmp
jbe
add
xor
scas
adc
sti
imul
mov
lock
jb
ret
and
xchg
imul
jns
jae
add
xchg
pop
clc
dec
sub
scas
inc
jo
cltd
sub
mov
fimuls
pop
mov
sbb
es
scas
mov
and
pop
das
fmull
stos
out
or
ss
inc
das
scas
push
mov
jno
mov
add
sbb
mov
mov
iret
fucom
into
in
nopl
fstpl
notl
mov
movsl
pop
mov
xor
xchg
orl
sbb
mov
lods
cld
pop
hlt
repnz
push
mov
jecxz
xor
and
add
pop
cmp
xor
enter
jbe
jl
pop
test
mov
xchg
mov
out
jp
add
adc
jae
jle
outsb
adc
mov
js
mov
shrl
sub
pop
test
imul
jbe
int
repz
insl
pop
push
call
ss
xchg
repz
dec
fwait
mov
je
sahf
insl
xor
mov
cmpsl
adc
adc
nop
jno
pop
icebp
fsubrs
dec
mov
xchg
mov
push
inc
dec
test
cltd
dec
jns
mov
dec
sbb
jp
sar
gs
and
mov
and
cmp
jnp
out
mov
insl
and
pushf
mov
adcl
test
pusha
xor
mov
sub
add
pushf
jg
mov
hlt
sbb
mov
aad
cli
cmpsb
mov
sub
sbb
jno
mov
jne
inc
out
iret
mov
mov
test
ret
add
loopne
dec
mov
out
inc
mov
jmp
gs
repz
std
xchg
sub
lret
lock
and
test
call
cmp
insb
xor
or
lock
fmuls
mov
test
aam
pop
fsubrl
xchg
sub
pusha
jae
fwait
push
aaa
iret
sbb
subb
cltd
rol
aas
xlat
icebp
sbb
pop
xchg
or
enter
jle
push
lds
les
in
mov
lret
mov
and
insb
jge
rcll
ja
push
cmp
or
push
orl
icebp
dec
jb
sbb
fiaddl
jne
sbb
cmpsb
mov
or
xchg
loop
andb
dec
push
pop
mov
and
xchg
push
push
jmp
int
int
imul
jge
xlat
dec
push
add
mov
push
push
xlat
cmp
cltd
mov
mov
dec
sti
push
aas
cmp
push
dec
xchg
sub
sub
jle
lahf
push
sub
out
xchg
ja
ds
aam
cmpsb
cld
daa
inc
or
mov
xor
ret
xor
adc
mov
or
mov
scas
push
adc
movsb
add
jl
sbb
cmpsb
push
test
cmp
sahf
stos
fildl
push
dec
jg
ds
nop
outsl
mov
outsb
ret
adc
and
mov
nop
jns
xor
mov
mov
adcb
call
mov
cmp
inc
imul
std
lods
add
push
flds
scas
lcall
pop
movswl
sahf
inc
push
scas
inc
lds
les
out
cmpsb
adc
mov
or
ret
and
lret
pop
push
adcl
lcall
xlat
push
push
repz
in
inc
sbb
pop
leave
mov
inc
aaa
jp
mov
testb
add
stc
push
outsb
inc
jp
cmp
adc
xchg
push
adc
adc
and
loope
xchg
mov
add
cmpsb
xchg
cs
repnz
cmp
fldenv
mov
cmp
xchg
cmp
enter
les
ret
dec
movsl
subps
mov
loopne
test
xchg
xor
adc
jmp
or
xchg
jge
sbb
icebp
sbb
in
cld
sbb
aas
rorb
xchg
lcall
out
scas
bound
sbb
add
mov
xchg
test
incb
imul
dec
add
mov
mov
fiadds
inc
push
repnz
cwtl
inc
popa
ja
scas
jle
push
jb
mov
jle
sbb
rorb
js
dec
mov
push
sbbb
shrl
push
xor
jne
and
pop
daa
fmull
dec
out
fistl
sbb
and
test
pop
inc
mov
mov
push
ret
sub
lret
push
add
movsb
fsubrs
out
cmc
xor
fdivl
dec
test
jle
pusha
inc
stc
inc
dec
repnz
sbb
imul
push
cmpsb
daa
mov
sbb
cmc
ljmp
jmp
fcoms
insl
scas
cmp
mov
addr16
cmpl
jbe
pop
mov
xor
addb
add
sbb
dec
cmp
mov
sarb
dec
cmp
enter
sub
cmpb
adc
mov
rcrb
mov
adc
sarb
sahf
add
cmpsl
mov
aam
lods
mov
mov
mov
xchg
int
dec
fdivrs
xrelease
mov
aad
call
fs
inc
jmp
out
push
scas
inc
pop
lds
dec
out
int3
and
enter
jl
fisttpll
dec
fldl
cs
movsb
pusha
mov
clc
push
mov
mov
pushf
adc
sbb
repnz
lret
stc
cmp
hlt
cmpsl
rorl
out
jge
and
imul
mov
fldln2
dec
ret
imul
fildl
sbbl
or
mov
inc
in
test
mov
cmpsl
popa
les
enter
les
jne
notb
cmpb
add
mov
inc
insb
push
pusha
fidivs
xor
mov
pop
xor
or
dec
aas
orb
pop
hlt
adc
add
scas
ret
sbb
lcall
or
ja
cmp
ljmp
mov
mov
jl
or
mov
test
xchg
sti
push
adc
lea
sbb
cmp
sub
into
cmc
sbb
push
add
jno
pop
aad
out
lods
addr16
adc
out
xchg
dec
andb
pushf
jmp
and
cltd
test
lods
push
and
in
fistpll
clc
cmp
fldt
aas
cltd
int3
cmp
ret
fidivl
aaa
dec
xor
fldl
lret
fstpl
lret
inc
and
notb
or
dec
xlat
pusha
xchg
push
stos
pop
sub
xchg
pop
mov
cmp
jno
jns
sbb
pop
xchg
pop
mov
lods
xchg
lock
sbb
mov
dec
or
leave
rcrl
sbb
loope
lret
cmp
or
and
adc
dec
mov
mov
scas
mov
jb
mov
inc
aam
imul
mov
stos
pop
mov
jno
pushf
scas
xchg
fsubs
mov
dec
loopne
jg
sti
movb
sbb
cmp
xchg
xor
iret
je
mov
and
cld
popf
call
in
in
addr16
out
cmp
imulb
imul
inc
rorl
fsubr
orb
rorl
lret
mov
in
or
inc
mov
add
mov
insb
mov
cld
rcrl
rolb
cmp
xchg
add
and
cmc
pop
lcall
lds
cmp
and
arpl
cmc
or
push
insb
test
pop
cmp
fmuls
push
mov
mov
adc
in
sbb
fmull
jp
jne
cli
mov
mov
and
movb
negl
mov
lahf
shl
cltd
daa
and
imul
push
shl
sarb
sub
xor
out
rcl
fisttpl
pusha
out
or
out
sbb
cs
js
fwait
sbb
and
jp
cmp
outsl
push
rcrb
mov
push
sub
dec
icebp
es
enter
and
mov
data16
ljmp
cmp
imul
and
rorb
mov
pop
notl
pop
push
inc
ret
aam
mov
jmp
sub
aam
inc
jb
rclb
lds
inc
xchg
lea
mov
dec
movsl
pop
mov
in
rcrl
dec
and
push
mov
clc
xor
mov
sub
fisubs
cmp
fwait
inc
xchg
cwtl
lods
lahf
adc
rorb
xchg
push
push
cltd
repnz
jb
mov
mov
add
adc
loope
test
leave
clc
mov
call
mov
stc
and
pop
mov
jge
es
jp
fcmovb
or
movsb
and
mov
push
adc
rolb
rclb
aas
ds
mov
fnsave
inc
fisttpll
xor
sbb
mov
outsl
push
lahf
jno
xchg
xchg
pop
sbb
pop
hlt
sub
add
add
jecxz
cmp
xchg
sbb
fbstp
pop
mov
pop
stos
pop
ljmp
out
or
fbld
out
lods
adc
pop
jbe,pn
jge
adc
jnp
and
pop
inc
mov
xchg
popa
inc
xor
add
mov
push
dec
sahf
pop
and
push
repnz
in
into
mov
pop
idivl
sbb
movsb
mov
loope
or
gs
jnp
in
nop
add
xchg
dec
push
xor
adc
mov
insl
fsubrl
pop
xchg
cwtl
xchg
mov
adc
fcompl
mov
or
in
mov
pop
mov
jne
sbb
dec
repz
test
test
negl
out
push
pusha
push
sub
jmp
xor
or
mov
les
mov
arpl
enter
test
out
icebp
test
nop
mov
jg
movsl
mov
xchg
and
in
dec
cld
mov
addb
dec
rolb
jbe
mov
cmp
lods
in
xchg
into
adc
repz
aas
out
nop
xor
stc
mov
std
push
rolb
cs
and
ss
adc
mov
sarl
xchg
cmc
dec
xchg
jle
lea
xor
xor
and
dec
movsb
pop
repz
scas
imul
sub
lahf
add
loop
fnsave
mov
sub
xchg
or
cmpsb
pusha
cmp
pop
mov
push
lds
or
repz
xchg
ds
pop
movnti
fildl
rorl
sbb
add
rep
fwait
ret
data16
xchg
adc
cmpl
es
mov
ret
aam
outsl
nop
cmpsb
inc
enter
push
or
mov
fisttpl
mov
ror
pop
inc
dec
cmp
or
inc
fldl
fidivs
cli
inc
sbb
iret
dec
and
test
cltd
sub
sub
jbe
add
ja
ret
sbb
mov
movsb
daa
jl
xchg
xchg
bound
shll
das
pop
fwait
iret
nop
mov
cwtl
cmc
pop
dec
xlat
mov
dec
mov
mov
loopne
and
push
loop,pn
int3
push
xchg
iret
and
jnp
loope
mov
mov
shl
pop
xchg
dec
fs
int
push
xor
shl
push
sbb
sub
mov
stos
js
outsb
add
mov
cmp
sub
ret
sbb
sbb
inc
cmp
mov
xor
xor
xchg
xchg
lods
hlt
dec
sbbb
pop
lret
mov
cwtl
insl
pop
lea
mov
xor
in
mov
stc
jns
add
shlb
arpl
fimull
jmp
mov
inc
xor
or
jae
addl
faddp
inc
cwtl
ljmp
mov
in
fnsave
push
call
fsubp
ljmp
add
sbb
xchg
scas
pop
fidivrl
adc
int
and
mov
scas
les
in
xor
mov
or
roll
pop
nop
imul
test
sbb
sub
lds
nop
add
mov
fs
mov
and
adc
out
mull
push
es
stos
jle
lods
mov
add
sti
adc
and
aas
into
std
jne
out
into
fwait
push
dec
outsl
push
and
mov
and
lock
mov
stos
fs
pushl
arpl
int
jmp
jo
and
inc
lret
jg
in
push
xchg
mov
jp
push
pop
rorl
xchg
popa
cmp
dec
sahf
or
fisubrl
jns
add
mov
inc
stos
jae
nop
mov
lea
and
pop
pop
mov
fwait
adc
sub
dec
mov
mov
aam
pop
fcoml
gs
out
int
sbb
jb
add
popa
in
pop
fdivrl
popa
mov
cmp
jnp
mov
daa
das
hlt
nop
pusha
test
sbb
pop
xor
and
fs
lds
push
sarl
adc
jne
clc
mov
pop
xor
dec
jg
pop
andb
sub
fsubrp
out
xor
or
les
xchg
jecxz
mov
scas
push
inc
adc
fisttps
jl
fiaddl
fisubrs
stc
inc
push
xor
pop
lds
jmp
mov
inc
sub
fcomip
subb
and
and
rcrl
pop
test
pop
dec
xor
lock
xor
stos
ret
jl
daa
je
xor
testb
sub
cs
pop
push
es
call
and
stc
shll
cmp
fbld
aad
push
cld
and
or
loopne
cmc
lods
lock
fdivl
stos
scas
and
add
cltd
stos
ljmp
addr16
mov
mov
in
jle
push
out
in
popa
stos
xor
jne
adc
sbb
ja
xchg
mov
stc
jne
fimuls
inc
js
sub
fdivr
dec
dec
scas
sbbb
popf
dec
xchg
in
bound
or
jg
fidivl
jge
in
imul
jmp
repz
rclb
mov
xchg
mov
push
mov
jl
jns
push
outsl
sub
lods
enter
cmp
les
sbb
in
movsb
outsl
aas
jno
aam
push
push
or
fs
mov
dec
adc
hlt
fwait
lahf
iret
into
sahf
out
aaa
jo
push
inc
clc
es
push
stc
cwtl
pop
jns
ret
test
out
push
lds
xor
rcrb
xor
ficoml
in
out
lods
lea
push
or
lds
mov
inc
nop
xchg
out
rcrb
jne
cmp
mov
pusha
mov
pop
add
enter
sbb
cli
or
mov
mov
ret
shrl
xor
mov
popf
cmp
push
jge
add
xlat
sbbb
jbe
mov
int
aaa
mov
mov
sahf
xor
inc
data16
jne
shlb
jmp
mov
sbb
sbb
xchg
jns
jae
ret
dec
inc
jb
lea
inc
lcall
xor
sub
push
adc
aam
sahf
inc
sub
cmp
loop
or
sub
push
bound
lret
push
ss
add
inc
shlb
adc
in
stc
push
outsb
std
fsubr
cli
adc
push
sub
leave
sarb
push
mov
test
cmp
cwtl
lret
shlb
in
push
rcl
jg
fdivrs
push
ficomps
and
fdivp
pop
and
pop
out
push
jne
sub
adc
sub
andb
in
mov
lds
push
xchg
mov
test
push
or
roll
xchg
dec
push
cltd
inc
xchg
push
ja
popf
pop
pop
aad
jmp
fadd
out
mov
inc
insb
stc
mov
or
jnp
out
inc
les
jmp
out
es
outsl
xor
add
sar
xchg
fnstenv
cmp
out
nop
pushf
leave
push
push
mov
cmp
popa
pop
and
popa
and
pop
push
movsl
mov
sub
xlat
lret
divl
outsb
push
mov
daa
sub
fcomps
cmp
dec
push
mov
xor
js
ffreep
or
adc
mov
mov
sbbl
das
aad
fcmove
dec
sbb
lods
addb
and
mov
into
hlt
mov
inc
pop
pop
mov
jecxz
adc
imul
mov
pop
fsubr
hlt
jmp
andb
enter
cmp
fidivl
add
sub
sub
fmul
xor
pop
les
pop
add
jne
fnsave
xor
push
xor
je
test
dec
loope
inc
xchg
mov
mov
mov
adc
fsubrs
bswap
inc
pop
arpl
cwtl
dec
mov
vpsrlw
and
xlat
fcoms
mov
rcll
jg
leave
imul
adc
jns
mov
adc
out
fwait
stc
adc
mov
cmp
mov
je
xlat
cmc
xchg
dec
stos
or
sbb
sti
in
adc
sub
mov
jno
or
lcall
movsb
jns
movsl
fildl
dec
jns
and
sbb
xchg
mov
mov
lret
or
xchg
cmp
dec
repz
arpl
ret
pop
pop
je
out
mov
cld
mov
shr
mov
outsl
out
roll
stos
cwtl
negl
adc
xor
jbe
inc
xchg
push
push
stos
inc
insb
pop
sbb
or
or
repnz
xor
push
aad
push
fists
lcall
ja
ficoml
xchg
push
cmp
jae
daa
mov
fistl
sub
jmp
jmp
and
insl
sub
int3
mov
test
push
pop
mov
xor
inc
orl
xchg
mulb
jne
out
into
hlt
test
loop
mov
in
mov
add
fwait
call
ljmp
sub
or
out
fisttpl
add
fdivl
cmpsl
lock
mov
push
sub
xchg
sub
dec
and
pop
popf
pop
mov
dec
and
xchg
inc
xchg
mov
jbe
sbb
xor
lahf
dec
popfw
sub
adc
cmp
add
push
jbe
outsb
cmp
xlat
lods
push
jns
pop
push
subl
jne
xchg
movsb
dec
mov
lret
es
fcoml
stc
test
mov
shrl
xor
jecxz
and
cwtl
add
cltd
adc
xor
xchg
cmpsb
pushf
and
sub
xchg
inc
out
iret
jae
fwait
dec
and
test
or
mov
push
or
pop
pop
xorb
push
movsl
ret
aam
mov
stos
lods
call
sub
psrld
sbb
ja
and
adc
mov
insb
sub
out
cmc
xchg
scas
fstl
mov
mov
in
jbe
sub
lods
popa
mov
pop
repz
mov
cmp
out
mov
sahf
and
ja
fstp
int
sbb
sub
pusha
into
hlt
xor
imul
pop
loop
xchg
sbb
mov
mov
add
and
sbb
cmp
mov
aas
xor
push
imull
sbb
xchg
xchg
cmp
mov
dec
mov
jp
jl
push
jno
jo
mov
push
jl
imul
in
fndisi(8087
shr
ds
insl
repz
mov
inc
or
mov
scas
jecxz
xchg
test
imul
and
in
xor
mov
cli
pop
mov
sub
or
inc
les
out
xchg
push
xor
mov
cmc
pop
mov
xchg
mov
lret
pop
out
or
bnd
dec
movsb
jl
cs
shrl
mov
imul
add
imul
xor
addr16
aad
cli
fs
or
pop
daa
dec
nop
push
pusha
ljmp
xor
imul
pop
loopne
popa
adc
js
sub
or
shrb
mov
inc
data16
jle
rcrb
jb
mov
jne
daa
jne
mov
pop
ret
ljmp
movl
lret
popf
outsl
popa
stos
stos
pop
stc
cmpsb
popl
fstps
xor
clc
xor
inc
pop
jnp
cwtl
mov
ja,pn
cld
inc
mov
addb
lcall
test
pushf
aam
rcrb
cld
andb
adc
out
in
jmp
ret
push
lret
sbb
push
idivb
fisubrs
fwait
add
lock
hlt
mov
jmp
mov
and
adc
out
les
mov
outsb
adc
push
lahf
jp
fiaddl
nopl
inc
adc
cmp
out
push
sahf
insl
cmp
es
pop
clc
fs
mov
lods
cmc
and
jns
mov
or
xor
jmp
adc
xor
enter
aas
sub
scas
iret
sbb
mov
push
mov
inc
xchg
imul
jno
mov
dec
adc
sahf
jg
into
cld
repz
bound
loop
int
sbb
mov
ss
mov
mov
sub
jge
in
lcall
and
jp
mov
adc
movsb
push
shlb
mov
mov
mov
lock
pop
cmp
pop
aad
insl
out
cs
call
inc
int
jle
push
dec
mov
mov
movsb
pusha
iret
js
dec
dec
lock
in
mov
nop
lock
mov
xchg
test
sub
jbe
or
jecxz
pop
push
shl
test
xchg
pop
xor
pop
jg
scas
ja
xchg
xchg
sub
cmp
aad
call
fwait
adc
lret
out
jge
out
inc
xchg
cmp
daa
hlt
aas
push
xchg
pusha
in
mov
jl
and
jns
add
lods
gs
inc
xchg
popf
popa
and
dec
leave
ss
adc
dec
mov
cmp
or
mov
dec
loope
les
mov
lahf
sahf
sbb
xor
mov
mov
sbb
cmp
and
and
test
popf
lea
lcall
adc
mov
inc
mov
mov
mov
pop
add
push
push
shlb
sbb
inc
movsb
inc
in
fstl
mov
movsb
pushf
sahf
enter
fucom
push
rcll
cmp
mov
test
mov
cmp
mov
cmp
mov
jb
and
push
sahf
addr16
or
es
mov
xchg
arpl
xchg
lea
inc
inc
icebp
lea
mov
repnz
inc
mov
into
js
insl
inc
add
dec
push
jo
xor
cmp
jge
insb
push
decl
mov
fwait
adc
or
mov
xchg
lock
lahf
lahf
xchg
jbe
xor
xchg
mov
adc
jno
mov
mov
in
pusha
adc
loopne
popf
subl
jg
adc
jae
push
pop
adc
ja
mov
mov
push
add
lahf
loope
jae
xor
jns
scas
jne
push
cmp
leave
ljmp
push
pop
fcoms
outsb
shll
inc
xchg
mov
push
lods
rorl
and
sbb
sahf
xchg
je
lret
in
xor
fiaddl
stc
fisubl
pop
notb
aam
cmp
jmp
aad
loopne
stc
mov
sti
sbb
jns
adc
scas
adc
rcrb
pushf
xor
mov
adc
outsl
call
and
loopne
and
xor
jae
sbb
mov
mov
sub
mov
ret
sahf
adc
int
mov
xorl
adc
test
inc
out
adc
addr16
sbb
cmpsl
subb
add
rclb
andl
jnp
jnp
pop
push
popa
mov
xchg
outsb
out
lock
xor
inc
ja
pop
dec
mov
loope
shrl
or
loop
insl
pop
bswap
stc
dec
outsb
hlt
rcrb
cli
mov
jg
pop
pop
and
addr16
jns
and
sbb
adc
outsl
pushf
call
jecxz
out
inc
cmp
fists
daa
mov
ret
push
movsb
pop
aam
cmp
pop
lods
dec
pop
ljmp
jae
out
mov
es
test
mov
mov
inc
adc
insl
hlt
dec
into
or
mov
movsl
adc
rolb
iret
jo
inc
mov
mov
sub
lock
divb
jae
xchg
in
mov
pusha
fs
mov
cmp
orb
out
adc
or
cmc
xchg
fbld
mov
jg
testb
ret
add
shlb
rcl
scas
nop
mov
dec
push
pop
pop
push
dec
loop
js
jmp
sbb
xlat
data16
mov
fnstsw
imul
cmp
icebp
xor
ljmp
popa
mov
aad
push
lahf
rolb
daa
xor
mov
arpl
sbb
push
addr16
leave
push
hlt
xchg
pushf
call
sbb
mov
pusha
cli
push
cmp
lea
loope
test
or
push
dec
xchg
jo
sbb
cmp
ljmp
add
test
push
pop
sub
sti
push
mov
rorb
sub
jne
js
jmp
test
mov
and
push
lea
xor
xor
sbb
push
icebp
daa
bound
fidivrl
call
sub
sahf
and
sub
lds
outsl
jp
daa
aam
jne
mov
sbb
or
nop
mov
ljmp
xchg
xor
fwait
mov
pop
or
std
cmpl
hlt
loop
mov
repz
loop
int3
pushf
testb
sub
lock
sub
pop
lcall
pusha
lea
xchg
pop
sbb
sbb
mov
xor
ljmp
xor
lock
inc
or
sbb
aaa
cmp
test
xchg
mov
jno
adc
or
push
jecxz
sahf
adc
mov
sbb
in
ret
sbb
sahf
inc
dec
imul
sbbl
sub
loopne
jl
out
and
pop
inc
mov
incb
inc
out
sahf
fistpll
mov
lods
out
enter
or
sub
sti
loop
jl
jl
and
jno
movsl
xchg
mov
aad
and
scas
sub
mov
mov
add
cmc
inc
into
popf
ja
mov
sahf
bound
aaa
adc
imul
fldt
add
das
adc
xchg
scas
sub
adc
into
fs
jae
imul
ljmp
pop
imul
mov
mov
jg
pop
jne
sti
and
mov
sbb
or
lret
pop
xor
inc
push
cmp
cmpsb
sub
fs
lods
jge
dec
pushf
cmc
fsubrs
push
mov
daa
adcb
mov
mov
fcomps
subl
and
bound
out
and
xchg
sub
pop
enter
pop
mov
rcrl
loopne
jno
jae
pop
cmp
test
jnp
jmp
leave
or
imul
iret
cli
dec
and
xchg
cwtl
pop
dec
cmp
xchg
in
adc
xor
add
mov
push
adc
or
and
mov
loope
mov
add
sbb
mov
pop
mov
in
std
jg
jbe
cmp
jge
push
mov
dec
lret
movsl
push
jmp
sti
push
mov
xchg
bound
cmp
jno
dec
test
std
mov
adc
xor
mov
mov
in
add
sbb
sub
les
xor
notb
sbb
test
xchg
loope
orb
fildl
and
repz
adc
mov
cmp
cmp
jmp
aam
fcoms
mov
scas
shll
leave
jbe
mul
push
popf
jp
ss
mov
mov
dec
shlb
dec
jne
sub
pop
scas
inc
stos
push
cltd
fcoms
dec
mov
jg
movsl
jne
jl
xor
mov
add
xor
int
cmp
pop
mov
jmp
js
push
addr16
xchg
fs
lahf
mov
adc
popf
rcr
pop
or
push
dec
pop
ret
loopne
jae
in
aaa
pop
sub
mov
je
fstps
popf
sbb
xor
sbb
mov
inc
adc
les
ficompl
int
mov
outsl
insl
mov
mov
or
fwait
inc
icebp
cmp
lods
push
lods
lea
mov
sbb
jmp
dec
sub
mov
and
mov
insb
lods
mov
cmc
xor
ja
stc
popl
rclb
adc
ss
imul
jno
and
ja
outsl
push
xchg
or
jle
out
std
movsb
stos
add
out
mov
fstps
or
pop
clc
push
dec
leave
lret
out
cltd
ret
lock
fnstcw
mov
dec
inc
cmp
xor
adc
add
test
mov
insb
loopne
repz
sbb
testb
pushf
push
sahf
imul
bnd
call
dec
and
ja
in
adc
mov
lret
test
push
incl
and
js
xor
fistps
movsb
xchg
mov
roll
lahf
mov
ret
xorl
movsl
mov
outsl
add
xchg
jmp
in
cmp
in
mov
out
jl
lods
mov
add
xor
cmp
xchg
sub
adc
pop
call
mov
in
call
jge
lcall
or
sub
inc
jmp
lea
sbb
push
adc
mov
lods
test
cltd
rol
xor
xchg
push
ss
stc
data16
call
mov
cli
lret
clc
sbb
nop
enter
call
fimull
flds
repnz
test
dec
push
ret
adc
lret
dec
mov
test
lods
aaa
add
push
cmc
jae
xor
xor
adc
jmp
and
ljmp
dec
and
xor
leave
push
clc
std
push
imul
xchg
shrb
popf
or
fnstcw
ret
repnz
scas
xchg
cwtl
insl
mov
out
inc
ja
mov
xchg
and
repnz
jbe
adc
popf
addr16
divl
ljmp
xchg
jns
mov
aas
fwait
jle
fcoml
adc
mov
xor
or
mov
sub
sub
lcall
rorl
testl
push
int3
rclb
cli
and
jns
pusha
jmp
imul
inc
push
mov
rclb
push
push
out
dec
inc
dec
jecxz
mov
mov
cltd
jbe
push
xchg
popf
mov
push
cmp
xchg
push
cld
mov
sbb
out
mov
out
mov
rorb
fs
ds
adc
mov
fiaddl
cltd
push
push
clc
dec
scas
pop
mov
test
and
imul
ret
and
iret
mov
fstpt
or
test
lret
outsb
cmp
stos
rcll
mov
sar
push
out
iret
outsb
xchg
fstpl
pop
add
and
cltd
aas
test
aam
rorl
out
cmp
ret
dec
dec
xchg
sahf
aaa
mov
movsb
pop
mov
rcrb
rol
xorb
sub
inc
dec
test
outsl
aad
pop
mov
insl
adc
ret
xorl
jp
imul
int
ds
mov
mov
push
gs
call
stos
sbb
lahf
add
xchg
test
or
push
sbb
ficoms
fists
add
outsb
push
adc
into
push
pop
mul
je
mov
shll
jne
push
xor
pusha
mov
push
scas
jg
scas
clc
or
dec
push
mov
xor
scas
andb
mov
test
jo
mov
ret
push
add
cld
push
sarl
add
test
clc
xchg
push
push
inc
aaa
fs
int
into
int
mov
ljmp
inc
movsb
outsb
mov
pop
mov
or
xchg
add
mov
mov
or
faddp
push
popf
lds
fmull
push
and
jp
dec
sub
or
or
daa
mov
fwait
cli
mov
push
pop
mov
push
and
sub
pop
ja
jp
xor
subl
iret
jmp
or
cli
popa
cmp
adc
lods
inc
lea
sbb
pushf
add
stos
repnz
xor
imul
push
lahf
cmc
push
mov
sbb
test
or
jb
push
push
fstps
out
iret
mov
sarl
mov
mov
xor
loop
movsl
in
jnp
fprem
xorb
or
xor
pop
jns
inc
xchg
int3
std
sub
adc
mov
sub
adc
and
xor
inc
movsb
loope
aaa
dec
subb
popa
and
in
movsl
or
push
cmpsl
or
aad
mov
scas
jmp
or
add
repnz
adc
xchg
lret
cmp
stc
scas
shlb
nop
mov
cmp
mov
jmp
mov
lods
mov
cmp
mov
sub
mov
xor
out
cmc
pop
pop
arpl
out
xchg
xchg
leave
cmc
adc
jp
mov
xchg
in
ljmp
outsb
push
fildll
xchg
clc
je
out
xchg
dec
lahf
adc
shll
insl
mov
jecxz
lds
adc
outsb
into
sbb
inc
insb
xchg
adc
jbe
cmp
add
adc
lds
xchg
pop
repnz
dec
int
fidivrs
sbb
icebp
dec
sbb
popf
sti
cs
mov
add
and
add
pop
into
aad
push
xchg
decb
inc
jne
aad
inc
and
lahf
mov
outsl
call
jg
ljmp
cmpsb
dec
push
pop
push
subl
jl
cmp
cwtl
rol
out
mov
mov
clc
rol
dec
and
int3
jbe
sub
dec
fmuls
cltd
inc
cs
jge
es
mov
sti
loopne
hlt
test
xor
jl
and
fadd
jne
xchg
mov
dec
cmp
testl
pop
jns
repnz
dec
mov
mov
mov
or
stos
mov
test
cmp
sub
lret
push
rol
mov
loop
cld
sbb
negl
sahf
mov
mov
test
sti
jo
lahf
cmp
push
das
sar
xor
sbb
mov
fnsave
mov
mov
mov
in
or
test
insb
mov
push
sbb
add
insb
rorl
dec
sub
push
jle
sub
jbe
cmp
mov
xor
das
sub
popa
inc
pop
add
test
imul
sub
jge
jno
pop
call
mov
xor
aaa
ret
ja
inc
sub
test
lds
jmp
xchg
ss
daa
adc
movsb
fsubrs
inc
xchg
mov
out
adcl
test
sbb
ffreep
add
int3
imul
loopne
dec
test
inc
repnz
and
push
mov
jmp
popf
add
adc
push
sub
call
mov
ja
or
fisubs
les
mov
arpl
mov
dec
or
sahf
je
sub
xor
sub
into
adc
test
inc
test
and
movsb
dec
rcrb
in
jne
std
sbb
lods
and
inc
pop
push
adc
inc
cld
jne
sub
mov
adc
mov
adc
lea
ret
movb
xchg
pop
in
lods
shll
dec
mov
fistpl
cs
fucomip
add
repnz
mov
sbb
aaa
adc
out
js
movsl
daa
test
mov
jmp
add
add
dec
in
push
cmpsl
push
out
sbb
pop
hlt
cld
jmp
int3
adc
test
sub
mov
out
mov
loopne
xchg
push
out
xchg
bound
addl
in
xorb
or
push
out
filds
and
mov
repz
stos
push
dec
call
sub
sbb
add
sub
xor
ret
sbb
lock
sbb
les
rolb
sahf
lock
mov
dec
lods
push
sub
lret
lahf
xlat
clc
adc
jge
push
and
dec
mov
and
scas
adc
js
mov
out
jp
cmp
pop
fldl
inc
mov
xlat
mov
and
or
and
es
jo
gs
jmp
fnstenv
push
push
xchg
out
lods
cmp
inc
mov
dec
mov
js
push
fs
sub
orb
cmpsl
rep
sub
aaa
add
push
push
test
pop
push
aas
mov
scas
out
arpl
xchg
nop
push
lcall
inc
jmp
push
mov
inc
outsb
xor
xor
loopne
push
mov
xchg
subl
xchg
jg
xor
push
push
jne
push
lea
test
adc
mov
mov
or
and
aaa
dec
cli
ss
xchg
out
out
es
mov
aam
mov
fdivs
adc
lds
fistl
lcall
insl
cmpl
pop
dec
mov
jnp
xchg
mov
mov
fmul
in
xlat
test
imul
insl
xchg
hlt
or
or
pop
xchg
cmp
pushf
and
test
popf
inc
sarb
inc
adcl
mov
sbbb
inc
rcr
aad
ja
inc
and
pop
es
popf
leave
ljmp
xor
in
cmpsl
xchg
rcrb
push
loop
jg
inc
aad
cwtl
pop
lret
dec
scas
jns
arpl
rclb
ds
int3
jle
arpl
dec
add
xchg
outsl
outsl
leave
xchg
mov
insl
add
pop
and
aas
jbe
mov
negb
adc
icebp
ss
shr
leave
mov
not
rcrl
lods
insb
mov
faddl
jecxz
xchg
mov
xchg
xchg
mov
xor
in
lahf
repnz
fwait
push
lcall
xchg
mov
adc
outsl
or
mov
jp
xor
sbb
sahf
aaa
xor
ds
ja
sbb
xchg
jnp
mov
jno
nop
movsl
shr
or
stos
iret
loope
mov
pushf
test
adcb
fsubs
mov
negl
jb
dec
or
xchg
icebp
jecxz
pop
imul
xor
out
pop
pop
mov
rorl
jno
jbe
jb
sbb
popa
xor
inc
lcall
stos
ja
jo
pop
es
test
push
mov
insb
and
cltd
push
add
sbb
in
out
pop
pop
xor
out
fists
jl
fisttpll
in
jmp
jge
mov
cmp
inc
fildll
nop
and
mov
jg
sub
inc
jmp
popa
les
jns
inc
out
rorl
jb
mov
nop
les
outsl
loopne
js
cld
pop
fisubl
jl
inc
jmp
sub
xor
imul
imul
mov
jge
cmp
xor
sub
je
push
popa
pop
out
ret
addb
lcall
mov
ja
sti
cmp
outsl
mov
mov
in
push
mov
xor
xor
xchg
into
xor
aam
xchg
out
and
scas
mov
mov
mov
cmp
push
push
jnp
dec
or
popf
daa
sbb
sub
inc
mov
aam
into
xchg
fiaddl
mov
adc
lcall
notl
xchg
pop
mov
out
jo
xor
cmpsl
jge
call
shld
xlat
and
outsl
mov
add
xchg
subl
pop
gs
fwait
xchg
divl
or
ljmp
fldl
and
das
inc
lds
jo
xchg
ror
fs
push
icebp
aam
adc
sub
pushf
insl
scas
fldl
popa
xlat
push
xchg
repz
daa
add
data16
cmpsb
leave
mov
jno
stos
cmp
je
inc
or
call
and
sub
lock
mov
lock
add
dec
insl
insb
push
jnp
mov
xor
aas
test
mov
sahf
loope
push
mov
pop
lds
pop
lcall
mov
repz
dec
xchg
inc
pushf
dec
jne
mov
jmp
or
nop
jg
sbb
inc
sbb
mov
ficompl
jnp
mov
push
decl
push
lahf
shrb
xchg
mov
dec
sahf
inc
xor
and
ljmp
int3
daa
cmpsb
or
add
adc
inc
insl
lods
lcall
jl
and
lahf
add
lcall
add
xchg
int3
inc
dec
test
icebp
cld
in
mov
movsb
ss
pushf
and
dec
cmpsb
es
and
test
pop
xchg
and
fidivrl
mov
or
and
jecxz
mov
mov
jo
fsubrl
sbb
push
sbb
add
fsubrs
cmp
test
dec
aad
add
cltd
xor
add
mov
cmp
xchg
sbb
add
cmp
fwait
out
bound
dec
dec
pop
xor
adc
and
mov
and
loope
jmp
rolb
mov
xor
mov
or
adc
ret
lret
orl
inc
jg
adc
xchg
cltd
jge
jl
fstp
or
cmp
lret
adc
scas
in
pop
xchg
xor
jne
lock
sahf
rcrb
add
add
testb
jg,pn
dec
sbb
lds
cltd
inc
icebp
ja
push
test
loopne
insb
mov
xor
sub
out
or
mov
inc
mov
lock
mov
add
addb
and
add
sub
mov
lcall
ljmp
push
dec
dec
cmpsb
roll
in
mov
dec
push
xlat
add
test
mov
adc
xorb
mov
out
xchg
sbb
das
jmp
jns
jmp
sbb
mov
jno
jg
cmpl
jl
push
xor
and
add
sub
das
sbb
dec
or
inc
lcall
shrb
dec
cmp
cmp
lea
mov
jne
xor
fildll
adc
xlat
cmp
inc
mov
push
cmpsl
adc
push
sub
mov
cmp
jecxz
mov
cwtl
lods
cltd
push
lea
sbb
or
adc
clc
add
inc
fdivrs
push
push
pop
mov
jmp
jecxz
cmp
xchg
mov
mov
mov
xor
stc
xchg
js
call
addr16
pop
adc
shlb
jle
mov
sbb
dec
outsb
ds
cmp
sbb
adc
mov
or
mov
outsl
xchg
mov
daa
ss
scas
int
pop
mov
insb
xor
lahf
out
dec
jg
roll
icebp
pop
imul
fwait
adc
push
dec
xchg
enter
xchg
mov
lahf
aam
movsb
xchg
and
rorl
loop
dec
dec
cmp
cmp
adc
sarl
cmp
inc
add
test
mov
sub
cmp
loope
in
xchg
imull
fnstcw
add
add
shlb
cltd
xor
cmp
sbb
mov
or
pop
out
push
push
iret
enter
add
pop
jmp
mov
mov
xor
sarl
outsb
inc
dec
enter
mov
mov
test
inc
lret
jne
lahf
inc
imul
or
shl
inc
popf
mov
jge
lcall
out
int
lret
add
enter
jnp
mov
subl
mov
ret
xlat
lods
pop
inc
jl
adc
fistps
and
xlat
and
sub
je
or
es
xor
jno
adc
sub
jl
push
sbb
mov
fs
jbe
test
and
orl
push
xchg
pop
mov
mov
fs
out
cmp
stc
cmc
gs
fstpl
mov
insb
fidivl
outsl
test
cs
jb
sub
test
shrl
jne
cmp
cltd
clc
mov
icebp
mov
inc
or
icebp
outsb
mov
inc
bnd
cmp
subl
fs
cmp
lods
sbb
mov
xchg
ret
shr
fsubl
push
sbb
loop
testb
imulb
sbb
push
xchg
xchg
pop
fists
imul
pop
push
cmc
out
lret
imul
adc
dec
pop
adc
pushf
test
sub
jg
imul
xor
sahf
xchg
push
mov
call
pushf
cmp
inc
or
xlat
aas
outsl
jnp
or
and
test
dec
in
int
push
add
mov
es
imul
in
dec
lea
popa
ret
mov
daa
sbb
pop
mulb
dec
sarl
sub
or
inc
sbb
movsb
sbb
std
xor
bound
sub
mov
ss
inc
stc
and
and
mov
filds
adc
std
mov
xchg
xchg
sti
scas
sub
ljmp
lret
pusha
jle
or
inc
and
mov
adc
sbb
ret
aam
jb
inc
mov
cmp
nop
fs
adc
sti
xor
aaa
pop
adc
mov
adc
or
mov
mov
gs
mov
cmp
les
push
pop
cmc
sbb
cli
bound
dec
js
pop
ret
cmpb
insb
leave
mov
sub
aaa
cs
xchg
cmp
sbbb
fisubs
push
xor
jno
lret
lods
sbb
and
pop
pop
xor
cwtl
jmp
cmp
aas
cmp
js,pt
inc
push
pop
inc
jnp
or
test
add
push
repnz
inc
insl
jno
push
cmp
mov
scas
and
in
lahf
mov
add
aaa
jp
dec
inc
aaa
or
shl
sahf
pop
sub
insb
fidivl
dec
inc
scas
mov
mov
push
mov
in
mov
jge
mov
ja
adc
pop
sarl
ja
je
jmp
in
or
loopne
push
sbb
imul
jecxz
pusha
and
or
mov
cmp
in
push
jecxz
std
dec
inc
cmpsb
fs
ret
sti
xchg
je
andb
adc
inc
pop
ret
sbb
and
stc
push
orl
pop
add
movsb
dec
add
repz
mov
mov
sahf
mov
call
incl
js
jns
neg
flds
add
scas
mov
lds
loope
sub
fs
adc
pop
xor
pop
add
cs
pop
mov
std
and
int3
cmp
lods
stos
adc
sahf
jmp
stc
inc
sub
aas
xor
aaa
notb
cmpsl
fcoml
xor
bound
sub
in
ljmp
mov
sub
add
lcall
jp
mov
pop
nop
mov
outsl
test
loope
mov
je
jp
loope
repz
push
roll
pop
clc
cld
sub
cmp
mov
xchg
pop
or
aaa
stos
inc
in
into
jp
add
sbb
sar
and
sbb
pop
into
xor
mov
mov
jg
mov
pusha
add
insb
stos
test
pop
cmc
push
mov
test
inc
inc
inc
xor
xchg
daa
jo
mov
ds
mov
int3
mov
test
mov
call
jnp
inc
es
shlb
mov
jne
inc
lret
pop
xchg
xor
mov
int3
imul
jns
sbb
jnp
add
aas
cs
fwait
lahf
sbb
pop
pushf
rol
lods
mov
mov
movsl
or
clc
js
xor
out
cmp
mov
stc
nop
cmp
shll
pop
pop
push
push
adc
sbb
fstpt
fcom
pushf
mov
in
push
pushf
xchg
loope
mov
mov
fs
lcall
pop
cli
jmp
sbb
lret
xor
dec
movsb
jae
push
adc
xchg
insb
pop
cmp
and
ffreep
cmpsb
or
sub
pop
stc
cmc
pop
shlb
addr16
sbb
clc
stc
push
inc
xchg
into
test
cmp
mov
push
icebp
mov
les
int3
lds
jno
out
icebp
minps
mov
mov
arpl
mov
nop
xchg
lret
cmpsl
mov
mov
or
repnz
mov
popf
popf
push
hlt
fucomi
jl
bound
out
push
or
add
xor
mov
mov
clc
push
adc
jne
fwait
and
shrb
mov
sub
xchg
rcll
cwtl
or
es
mov
pop
add
lds
pop
stc
or
jnp
setp
in
outsl
push
mov
or
sti
jmp
dec
jl
xor
sbb
gs
call
sub
and
add
cmp
loopne
mov
mov
bound
jl
dec
inc
addb
xchg
jmp
mov
jb
test
fbstp
push
in
in
jl
aas
or
cld
hlt
cs
sub
mov
cwtl
xchg
imul
cmpsl
and
and
int3
push
sbb
push
and
jne
cltd
mov
ret
or
cmpsl
popa
rcrl
ss
test
mov
inc
adc
xchg
cmp
pop
mov
push
sub
cmpsb
adc
push
call
mov
xchg
jle
pop
cmp
inc
cwtl
mov
les
and
add
int
and
popa
ds
xchg
mov
mov
pop
add
xchg
mov
pop
outsb
cwtl
sub
les
stos
imul
push
das
mov
mov
jne
mov
or
sbb
pusha
sbb
shll
out
jne
cmp
fwait
scas
pop
jae
mov
mov
sub
or
sti
inc
cs
inc
jge
pushf
nop
rep
ljmp
roll
sub
push
add
cs
arpl
pop
jecxz
testb
je
jb
pop
mov
sahf
jne
or
shl
aam
dec
sti
les
add
fistl
loopne
pop
lock
js
mov
adc
sbb
ja
cltd
fildll
cs
mov
aaa
je
stos
ja
decb
scas
in
xchg
popa
lahf
pop
mov
pop
dec
hlt
pop
mov
push
mov
push
push
xchg
adc
push
xchg
add
stos
loop
mov
xorl
inc
mov
cmpb
mov
and
jns
das
imul
add
cmc
repz
out
dec
ret
aad
cmp
call
aaa
shrb
insb
xchg
jno
out
sti
mov
mov
jb
sub
movsb
xor
mov
mov
fcmovb
outsb
lods
fimull
mov
pop
sub
inc
mov
sbb
clc
test
sti
or
hlt
mov
leave
adc
xor
add
or
and
pop
push
fadds
or
push
xchg
mov
inc
push
or
push
out
push
add
and
mov
inc
gs
dec
cli
repz
xchg
mov
psubw
fs
bound
test
lods
xchg
nop
jmp
ja
stos
add
aas
xchg
test
jp
add
lret
cwtl
and
cltd
lret
mov
push
add
sahf
lods
inc
out
sub
inc
cld
lret
lcall
fidivrs
lods
sbb
popa
inc
fs
jmp
mov
xchg
arpl
pop
loope
jl
pop
aam
mov
in
mov
sbbb
je
lock
fwait
ljmp
cmp
pop
in
jbe
daa
jg
adc
mov
and
in
xchg
xchg
and
mov
or
xchg
enter
jmp
pop
adc
in
add
cmp
xchg
cltd
in
xchg
popf
out
test
jne
xor
adc
test
inc
xchg
jecxz
repnz
popf
pop
fnstsw
lods
in
gs
fsubs
out
aas
dec
pusha
lahf
loop
xor
lcall
sub
push
inc
pop
mov
and
push
lcall
sbb
pop
stos
xor
negb
test
push
push
mov
sub
jbe
loope
loopne
fmul
ret
popa
into
jl
or
mov
sub
cmp
pop
les
aad
lcall
int
lods
jecxz
in
inc
loop
pop
push
shll
mov
mov
jg
fwait
xchg
test
std
sub
movsb
add
test
arpl
xchg
sbb
scas
fcomp
stos
das
inc
xor
lds
fistpl
push
mov
lret
xor
aas
pop
test
es
or
xor
lret
loop
mov
sbb
push
cmp
inc
dec
and
mov
movsl
sbb
cmc
in
add
dec
in
sub
inc
decl
mov
sbb
mov
lds
sbb
idivl
push
push
mov
xor
sbb
xchg
stos
mov
pop
and
popf
in
popa
xchg
add
pop
addr16
xor
fstpl
cmpsl
add
test
cld
xchg
gs
cmpsb
fbld
por
outsb
cmp
cmc
add
mov
std
add
dec
loopne
dec
xor
movsb
add
cmc
and
push
jecxz
push
mov
sub
mov
push
sub
jmp
bound
mov
std
xchg
movsl
push
dec
mov
sub
jne
xchg
jo
movsl
inc
movsb
xchg
mov
into
movsb
jl
mov
and
notl
xchg
mov
jnp
dec
std
push
mov
xchg
and
sub
fcmove
lods
jne
pop
addl
testl
clc
xorl
and
lock
xor
push
out
out
xor
aas
outsb
icebp
jp
jno
jle
stc
jns
adc
fisubrs
inc
fsubs
xchg
adc
repz
rcr
out
mov
rclb
pop
cmpsw
test
andl
adc
fcoms
rcll
xor
add
std
in
or
cs
jle
xor
jb
xor
divl
rcrl
mov
xlat
addr16
out
std
aaa
adc
lods
cld
ds
das
movsl
adc
cli
ror
jmp
shrb
ds
mov
pop
jne
xchg
sub
sub
in
and
aam
ficomps
push
movsb
dec
jp
cwtl
lcall
mov
dec
dec
bound
clc
sub
icebp
dec
ds
xchg
dec
cmp
inc
inc
lcall
popa
and
jle
cmpsb
mov
jle
or
filds
and
or
cmp
adc
inc
xor
inc
lret
mov
mov
inc
push
or
inc
test
loop
pushl
or
add
dec
pusha
scas
rcrb
or
sub
faddl
inc
jbe
xchg
test
mov
out
int
imul
or
ds
aaa
psrad
das
xchg
inc
pop
mov
jbe
mov
xor
sub
xor
cmp
mov
dec
dec
insl
addr16
mov
jo
loop
adc
in
mov
xchg
xchg
mov
addr16
pop
jns
inc
mov
xchg
xchg
mov
pushl
push
inc
fmull
insb
sbb
mov
xchg
add
addl
lock
insb
test
sub
mov
icebp
push
ret
or
adc
clc
sub
ret
mov
stos
and
loopne
in
sbb
dec
dec
mov
test
adc
movsb
inc
int3
mov
roll
je
fcmovne
stos
nop
adc
je
ficomps
in
mov
ja
sbb
lcall
push
pushf
cmp
or
adc
in
mov
shl
ds
jno
mull
ds
js
adc
fcoml
jo
popa
mov
out
sbb
out
mov
loopne
popa
inc
aaa
test
sub
mov
inc
or
push
push
fcomi
jle
mov
int
inc
stos
and
push
out
push
jge
rolb
mov
repnz
sub
mov
mov
stos
fmuls
push
cmp
or
xchg
dec
push
hlt
inc
les
fimuls
arpl
fmuls
outsb
lods
cmp
imul
shrb
xchg
addr16
leave
shrb
jne
mov
pop
or
outsb
hlt
sti
scas
sbb
ret
div
mov
or
adc
mov
pop
lock
repz
push
dec
xchg
leave
cli
inc
and
testb
sbb
insl
lods
add
and
mov
inc
repz
mov
or
and
test
rclb
icebp
andl
ss
insb
mov
pushf
jo
jae
push
ja
inc
mov
outsl
cmpsb
adc
inc
and
xchg
pop
jmp
imul
push
push
xchg
or
aaa
mov
fldcw
pop
jecxz
imul
aas
xchg
xchg
adc
aaa
arpl
into
test
ret
cmp
mov
sti
fwait
loope
cmp
into
lcall
test
lock
add
or
xchg
in
mov
xor
adc
shll
xor
mov
enter
or
or
aam
adc
pop
push
xor
addb
or
fisubl
mov
or
cld
jbe
movsl
push
jnp
nop
push
jge
popa
in
pop
cmp
sbb
rcll
into
jge
imul
push
mov
fwait
pop
insl
jl
mov
addr16
jecxz
dec
sub
clc
ljmp
inc
add
push
pop
xchg
sub
push
push
xor
push
stos
cmp
repnz
mov
jbe
xchg
movsb
pop
push
mov
and
pop
pop
cmc
mov
jmp
mov
rol
mov
sahf
push
cli
mov
or
mov
nop
and
insb
xchg
mov
shld
sub
outsb
inc
adc
xchg
rolb
scas
aad
outsb
add
iret
lods
mov
jg
int
enter
and
cmp
loope
out
int3
adc
xor
xchg
add
insl
and
xchg
aad
popa
sahf
movsl
nop
jb
adc
imul
cmp
or
cmpsb
data16
outsb
int
dec
cmp
push
ret
adc
inc
adc
sbb
and
aam
sbb
nop
mov
mov
arpl
daa
aad
xchg
testb
pop
mov
subl
out
sbb
out
insl
inc
imul
jp
dec
sbb
sub
add
and
popf
sub
roll
pop
add
inc
mov
jb
out
lret
dec
iret
ljmp
jbe
push
popa
into
stos
pop
push
mov
stc
jg
and
dec
mov
pop
mov
ja
sub
and
xchg
addr16
mov
and
scas
push
inc
flds
test
outsl
shrl
add
inc
fwait
movups
mov
xorl
fucomp
fwait
mov
sbb
or
sarl
jns
mov
xor
rolb
mov
sbb
xlat
pop
rorb
xor
mov
test
xchg
mov
rcrl
popf
enter
fcmovnbe
imul
pop
pop
xchg
out
jo
pushl
dec
pop
xchg
sub
les
jno
cmp
dec
xchg
sub
loopnew
vmulpd
mov
dec
ja
add
in
subl
cmpsb
test
push
jns
push
sahf
or
xchg
aad
dec
mov
in
call
push
sub
pushf
xor
or
imul
shrb
scas
sub
mov
movsl
pop
and
outsl
xor
daa
or
js
cltd
cltd
xchg
cmp
adc
fmuls
mov
rol
inc
pop
lret
add
lret
xchg
mov
mov
mov
add
fisubrs
pop
mov
adc
lret
in
rcrl
loop
mov
out
pop
hlt
push
sbb
jbe
push
sbb
cltd
cmp
insl
jmp
imul
sub
pop
ret
sub
adc
repz
cmc
mov
push
mov
bound
inc
cmpl
cltd
out
mov
inc
push
addr16
rol
xchg
popf
jmp
sub
push
xchg
test
pop
mov
imul
cmp
cmp
aaa
cmp
add
movsb
dec
cltd
mov
roll
and
pushf
int
cmp
lds
popf
gs
lods
aas
add
xor
or
jae
nop
sub
adc
xchg
mov
stc
addr16
and
pop
xor
nop
insb
and
jno
test
rolb
ljmp
inc
popf
sbb
sbbb
fdivs
hlt
enter
add
inc
mov
push
ret
cmpsb
push
inc
movsl
mov
inc
int
rcrb
dec
pop
jp
mov
xorb
ret
dec
insb
aam
repz
pop
sahf
mov
xchg
push
int
fcomi
pusha
lock
popf
test
pop
cmp
inc
and
popl
int
rcll
mov
pop
repz
mov
lds
pop
into
stos
pop
mov
cmp
xor
inc
addb
out
jns
adc
mov
inc
mov
icebp
pop
sbb
cli
std
stos
js
ss
fisubrl
lock
add
pop
sti
das
mov
dec
cmp
and
mov
xor
es
int
ja
xlat
jbe
jo
pop
pop
cmp
or
push
mov
data16
jmpw
dec
mov
add
or
test
je
inc
cmpsl
or
or
xchg
push
lahf
xchg
pushf
sub
sub
clc
ljmp
mov
loop
repnz
push
cs
sbbl
pushf
movsb
mov
mov
mov
hlt
adc
pop
jg
xchg
adc
mov
rcrl
mov
enter
lcall
lahf
adc
cmp
cli
jo
xor
jmp
ja
scas
jno
ljmp
loop
xchg
cmp
add
add
adc
into
ficoml
xchg
mov
mov
out
mov
je
hlt
and
push
add
ljmp
xchg
sti
and
das
fisttps
lea
icebp
outsb
inc
gs
insl
xchg
xorb
or
sub
leave
outsl
inc
pop
adc
jmp
and
cmp
shll
rclb
mov
adc
sub
and
fldenv
adc
mov
add
stos
mov
or
mov
test
lret
mov
add
fbld
dec
and
inc
les
pop
jmp
add
adc
cmp
add
test
jbe
mov
sub
xchg
cmp
mov
std
das
jo
mov
test
mov
sti
daa
popf
xchg
arpl
pusha
pop
nop
add
mov
pusha
subb
dec
jle
pop
dec
pop
nopl
imul
lret
stos
lea
inc
insb
sub
xlat
mov
mov
add
pop
mov
icebp
jmp
dec
and
sbb
inc
arpl
hlt
jb
les
int3
movsb
sub
sti
int3
pop
divl
dec
jae
cmp
repz
mov
popa
push
insb
int
divb
or
sbb
daa
ljmp
arpl
xor
jns
mov
mov
adcl
insb
inc
packssdw
enter
adc
imul
sbb
push
popa
js
clc
in
cmp
cwtl
push
push
fcomp
xchg
jae
pop
inc
mov
push
lods
or
sbb
std
dec
shlb
lds
mov
and
cmp
cltd
loopne
sbb
scas
sahf
adc
jo
daa
jg
xchg
imul
mov
shl
stc
adc
adc
iret
stc
cmc
add
pusha
mov
push
out
add
adc
jle
add
outsb
mov
push
lret
jg
mov
call
xchg
pop
dec
mov
jl
cmp
faddl
cli
push
jne
outsb
or
cld
lods
aam
test
imull
movsb
mov
xchg
xor
and
xor
and
popa
and
mov
and
loopne
lret
jl
pushf
ljmp
scas
cmpsb
lret
popf
xor
jb
cmc
and
cwtl
loopne
sbb
xlat
enter
into
movsb
jmp
mov
push
lods
rolb
mov
call
xchg
movsb
push
jno
orb
mov
jno
push
rclb
push
pcmpeqd
adc
mov
insl
mov
dec
jbe
aas
enter
ret
adc
pop
push
cli
mov
comiss
pop
sub
lock
dec
sub
in
xor
ja
hlt
dec
pusha
shlb
push
imul
lds
and
lret
cltd
je
stc
shlb
jns
dec
icebp
mov
inc
fimull
out
nop
dec
les
sbb
jno
sub
nop
aaa
push
fdivrs
sbb
out
or
xchg
aad
dec
rcrl
mov
rcr
xchg
sbb
out
jne
xchg
sbbb
pushl
mov
xor
inc
pushf
xchg
outsl
sbb
mov
icebp
push
test
push
push
push
fisttpll
inc
dec
pop
jmp
into
inc
jno
pushf
and
les
mov
aaa
push
xor
cmp
hlt
ljmp
fistps
data16
outsb
imul
sbb
es
cltd
cs
test
jno
mov
je
push
pop
test
xchg
inc
les
and
orl
int
and
jmp
aaa
scas
xrelease
js
add
daa
outsl
dec
jne
xchg
mov
add
and
in
push
je
icebp
in
push
inc
push
out
ror
popa
test
push
jecxz
mov
dec
stos
daa
test
xor
test
inc
inc
push
fmulp
nop
jb
jl
fs
dec
add
pop
addr16
xor
pop
imul
cmp
dec
jns
push
or
fiadds
addr16
push
push
xchg
jl
int
in
mov
jne
inc
mov
insb
jne
pop
push
mov
xchg
sar
test
sub
push
jmp
out
sub
mov
pminsw
test
push
lret
or
loop
addr16
add
add
pushw
cld
adc
stos
aad
lods
mov
mov
push
jmp
popa
das
jnp
xlat
subb
scas
nop
out
movsb
fsubs
mov
in
ja
dec
push
jne
pop
inc
push
mov
stc
push
cli
sbb
pop
stc
aas
out
or
sub
arpl
and
or
out
callw
sub
adc
cs
nop
and
aad
sbb
rol
ljmp
in
adc
cmpsl
mov
test
xchg
xor
fsubrs
pop
sub
mov
rolb
jp
xor
icebp
mov
ljmp
cmp
out
dec
push
sbb
push
dec
push
cmpl
xchg
jno
and
pop
dec
adc
push
aam
in
and
aas
int
adc
lret
lahf
add
jns
aad
pop
es
cld
sub
je
sub
loop
sub
mov
xorb
or
push
xchg
jns
sub
jo
push
xlat
mul
mov
inc
xor
sbb
adc
add
shl
jae
imul
xor
lahf
pushf
push
sbb
aas
sbb
sti
icebp
mov
dec
adc
flds
imul
dec
pop
pop
and
gs
add
pop
push
inc
imul
push
leave
mov
imul
jo
mov
scas
mov
dec
out
in
sbb
adc
jb
mov
insl
addb
pop
mov
push
inc
xchg
jmp
adc
in
pop
cmp
mov
fcmovnu
jecxz
xchg
rorb
adcl
xchg
daa
in
and
xlat
mov
xchg
shrl
xsha256
cmpsb
adc
cmpsb
aad
test
push
and
movb
ret
jp
insb
js
insl
jg
fmull
call
ja
jle
mov
rcr
xchg
cmp
test
mov
addb
sub
movl
and
mov
mov
call
xor
push
jo
push
lds
mov
loop
ja
add
movsl
or
or
in
stos
fcoms
add
daa
arpl
ret
aam
jle
mov
addr16
sbb
rcll
call
in
xor
inc
clts
jb
xorb
xor
lcall
add
or
iret
cli
iret
idivl
jg
sbb
iret
xchg
dec
ds
sbb
sub
xchg
loope
push
or
ljmp
aaa
push
rorb
icebp
dec
in
and
jmp
xchg
push
mov
push
mov
add
popf
xor
repz
or
stos
add
int3
push
dec
adc
xchg
xor
push
pusha
mov
in
lock
cmp
test
push
jp
decl
mov
cli
js
dec
cltd
adc
imul
xor
inc
lea
push
loop
and
in
test
adc
mov
nop
imulb
aaa
xchg
sbb
test
mov
sbb
lock
xchg
repz
cltd
mov
test
loop
je
xchg
adc
push
xor
fisttpll
jb
call
inc
push
adc
add
icebp
idivb
inc
dec
shlw
push
mov
jno
leave
ss
popl
sub
mov
cmp
pop
mov
dec
in
cmp
loopne
sub
cli
clc
std
in
xchg
mov
les
inc
pop
imul
jae
fcomip
jl
mov
loopne
and
and
push
push
jnp
mov
cmp
jno
xor
dec
loopne
insl
jl
repz
jg
push
cmp
repz
shrl
ds
test
scas
cmpsb
or
scas
les
jne
mov
ficomps
dec
dec
repz
and
scas
xor
push
mov
sbbb
inc
pop
cltd
inc
add
mov
adc
xchg
outsb
mov
xor
dec
and
push
add
add
js
and
fcmovnu
rolb
nop
mov
xchg
repnz
scas
pop
movsl
xchg
pushf
xlat
out
rorl
insb
inc
stos
aad
int
jge
push
lds
mov
mov
inc
jge
or
js
mov
pop
xchg
push
popa
fwait
das
outsb
insb
mov
shrl
inc
stos
cwtl
mov
rcl
inc
lea
ret
lods
mov
push
out
pusha
ss
sub
shr
out
or
mov
pop
out
push
sbb
idiv
call
outsl
imul
mov
and
popf
leave
sub
cli
lock
std
enter
cwtl
mov
out
pushf
mov
xor
push
and
ret
rorb
clc
dec
push
cmp
das
fs
push
test
jne
fldenv
dec
push
jb
sarb
loope
movsl
ret
push
xchg
dec
ljmp
shlb
xor
ja
push
xchg
bound
inc
cli
sbb
xor
inc
cli
mov
aas
add
push
inc
pushf
repz
rorb
rolb
mov
rcl
stos
adc
xor
cli
lret
xor
lahf
pop
popa
fistl
out
lods
mov
lret
call
mov
cmp
psrad
pop
cmpsl
inc
fwait
pop
xor
gs
in
movsb
sub
out
mov
cmp
scas
daa
sbbb
out
xchg
sub
mov
jno
fdivs
pop
jecxz
dec
mov
sbb
xchg
repnz
inc
jmp
mov
xchg
leave
lods
pop
jle
xlat
xor
mov
test
loopne
sbb
jecxz
xorb
push
ror
out
pop
mov
fildll
sarl
lret
pusha
ds
dec
pop
sbb
pop
rcrb
in
rolb
lods
arpl
imul
sbb
sbb
cmp
push
push
xchg
jns
sbb
jns
mov
jg
jns
lret
negb
push
clc
out
xchg
cmp
std
or
mov
and
xor
adc
dec
jmp
mov
xchg
push
mov
adc
cmp
push
je
fs
call
sarb
fidivrl
cmp
sub
inc
jmp
jp
orl
mov
fwait
mov
call
jp
jl
fbld
int3
les
lods
pop
clc
jg
fiadds
shrb
jnp
jne
mov
test
sub
jnp
bound
lahf
out
pop
ds
rolb
jnp
push
jg
mov
jne
mov
out
jo
xchg
push
mov
mov
or
xchg
ret
add
mov
mov
popa
fsub
inc
inc
jecxz
pop
cli
test
xchg
jne
jg
adc
fdiv
jg
xchg
jg
jmp
adcl
push
cmpsl
xchg
or
arpl
je
shrl
out
repz
xor
stos
rcrb
es
clc
lret
inc
cmp
aad
lods
ret
ljmp
imul
xchg
pusha
pop
dec
dec
aad
jle
sbb
pop
daa
inc
cmc
add
mov
into
ret
pop
and
jg
imul
aad
cmp
jge
push
repz
push
fs
ljmp
popf
fistpl
add
int3
sarb
sub
lods
jg
aaa
push
jmp
fldenv
adc
repz
popa
and
pop
mov
outsb
aad
xchg
adc
push
sbb
mov
dec
inc
in
inc
popa
push
lahf
xlat
repnz
aaa
ret
lcall
adc
xchg
xlat
icebp
adcb
mov
hlt
jecxz
xchg
scas
cmp
mov
mov
jo
add
and
pop
jmp
out
or
lret
jno
xchg
les
jno
dec
cmp
or
lea
cmpsl
jns
xchg
jae
ja
push
and
mov
in
lods
cwtl
bound
ud1
mov
sbb
out
fdivrs
xchg
call
arpl
jmp
test
sbb
dec
test
mov
std
pop
xchg
push
sarb
int3
cmp
and
xor
xor
or
adc
imul
jmp
loope
mov
test
insb
jp
and
add
and
xor
ss
xor
xor
js
sub
adc
cmp
incb
inc
data16
inc
push
loopne
and
push
mov
enter
inc
int3
lcall
adc
adc
je
push
xchg
mov
sahf
xchg
jl
push
mov
pop
stos
aas
lcall
xor
andl
fisttpll
rcll
push
data16
add
lret
mov
hlt
out
loop
adc
stos
lret
aaa
and
cwtl
fisubl
inc
test
mov
imulb
cmp
or
pop
mov
cmp
fldenv
mov
fmuls
popf
inc
popa
sbb
sbb
outsl
adc
ja
cwtl
ficompl
jg
pusha
rclb
mov
xchg
pop
cmp
lods
xor
mov
push
out
push
sti
and
leave
in
sub
test
test
add
decb
into
enter
repz
cmp
jne
lcall
lods
mov
and
or
fidivrs
das
clc
idivl
pop
daa
leave
dec
and
add
je
pop
repz
pop
sbb
cs
and
add
mov
in
ss
mov
in
push
dec
cmc
int3
pop
lret
movsb
aas
out
call
and
jle
mov
dec
fidivrl
cmc
xor
fwait
mov
addr16
mov
or
test
fnstcw
mov
push
xchg
fnstcw
enter
mov
je
cmp
xor
mov
jge
int
ffreep
repnz
dec
adc
sbbl
inc
push
xchg
push
jmp
imul
xchg
add
addr16
push
inc
add
mov
mov
testb
aas
add
packsswb
mov
shrl
rol
inc
cltd
popf
clc
cs
imul
inc
out
inc
loope
test
imul
mov
xchg
mov
out
or
pop
jg
or
fisttpll
xor
add
cmp
lahf
and
hlt
inc
outsl
mov
cmpsl
xchg
mov
xchg
mov
daa
sbb
mov
adc
loopne
sbb
fnstsw
stos
xlat
cmpsl
lds
push
mov
dec
je
push
outsl
jno
mov
out
xchg
add
fcoml
push
cmp
inc
lret
aaa
cmp
in
gs
sbb
cmpsb
movsb
push
mov
popf
pop
lret
shl
popl
imul
sbb
lock
inc
test
sbb
jmp
test
mov
mov
push
sahf
dec
out
aas
ret
push
lea
cmpsl
xchg
add
daa
inc
jl
fildl
cli
xchg
icebp
inc
pop
das
mov
shrb
adc
push
xchg
or
das
pusha
and
jmp
and
cld
daa
std
dec
add
push
cltd
ljmp
popf
int
xchg
xor
mov
sbb
enter
xor
sub
insl
mov
dec
and
int
jp
addr16
pushf
outsl
mov
inc
mov
mov
cmp
fldcw
out
jge
add
pop
dec
sbb
lahf
mov
or
aas
repnz
or
push
mov
mov
mov
faddl
subb
scas
jbe
fwait
aad
inc
or
out
xor
dec
and
xchg
nop
mov
push
ucomiss
inc
movsb
lds
jo
xor
push
ja
push
add
sbb
xchg
imulb
movsb
mov
sbbb
mov
testb
out
mov
add
push
imul
scas
push
insl
in
push
out
pop
movsb
fistpl
ret
cmpsb
add
jo
or
out
mov
les
mov
pop
imul
test
push
push
jge
fwait
xor
testb
and
mov
in
sbb
aad
popa
rclb
inc
mov
cmp
cmp
outsb
es
mov
mov
fs
mov
sbbb
xchg
inc
add
push
lds
les
cmp
mov
clc
int3
and
pop
and
add
or
mov
and
xor
pop
mov
int
sbb
fidivs
dec
and
fwait
sarl
mov
xchg
adc
mov
pop
pop
xlat
mov
inc
lahf
fstps
mov
mov
fcompp
fbstp
xchg
stos
dec
shrb
ss
mov
pusha
add
xchg
imul
push
sbb
imul
jecxz
fstps
arpl
mov
sub
xchg
aam
das
jbe
lods
sbb
enter
lock
push
shlb
test
lcall
cmp
xchg
and
adc
out
inc
push
es
cmp
aas
jb
into
sub
ljmp
mov
es
in
add
insl
orl
mov
push
pop
dec
jno
add
jl
xor
pop
mov
dec
lahf
addb
std
rorb
rclb
aas
in
pop
pusha
dec
push
lods
pushf
cmpsb
mov
std
xor
sub
xchg
pop
addr16
cmpb
lret
cmp
arpl
xor
adc
cmp
sar
push
cs
mov
pop
cmpsl
lods
jg
shlb
dec
dec
dec
adc
rorb
fsubs
mov
jns
cltd
scas
pop
xlat
mov
pop
subl
jecxz
aaa
test
or
pop
sbb
push
inc
pop
push
or
push
push
imul
sub
lret
leave
pop
push
stos
or
lret
push
je
scas
mov
popf
sub
inc
xchg
xor
dec
mov
pcmpeqb
mov
push
xor
mov
popa
stos
in
orb
xchg
lock
add
mov
mov
into
and
cmp
jbe
stos
aad
xor
aaa
mov
xchg
mov
in
jbe
lds
and
or
rolb
clc
adc
xchg
pextrw
ds
xchg
test
and
adc
xorb
shr
in
pop
jp
daa
sub
push
push
inc
cs
mov
popf
divl
jl
cld
mov
and
iret
or
outsb
add
lahf
scas
pop
mov
stos
inc
leave
ret
ret
dec
xor
inc
sbb
xchg
jl
add
sbb
dec
jg
jmp
push
pop
popf
leave
cwtl
cmc
gs
fs
mov
xchg
add
sub
lcall
aas
fwait
sbb
rorl
and
addr16
repz
cwtl
sub
cmpsb
sbbb
mov
xchg
sbbl
stos
icebp
popf
test
es
leave
std
mov
jo
fwait
test
test
mov
stos
mov
arpl
les
leave
call
filds
pusha
int3
hlt
test
pop
cs
xchg
mov
push
sbb
test
stc
lret
fs
frstpm(287
xchg
dec
mov
dec
gs
test
mov
aad
stos
fwait
jg
out
jb
sbb
mov
test
jp
ss
adc
xor
inc
rcrb
mov
std
out
icebp
ret
sbb
or
or
mov
or
call
mov
movsl
aam
ja
push
aam
cmp
out
fcmovbe
mov
scas
jae
sar
sarb
mov
imul
test
cmpsl
rorb
mov
idivb
jge
rorb
out
ret
fsubr
pop
sbb
test
sub
mov
icebp
xchg
mov
mov
pushf
adc
and
jp
stc
and
loop
pushf
lds
xor
jmp
dec
pop
push
orl
adc
orb
popf
jge
repz
sbb
in
and
sbb
pop
mov
ljmp
cmpsb
mov
fs
push
mov
xchg
jo,pn
sahf
std
loop
mov
js
push
jnp
push
mov
sub
imul
aaa
lret
out
add
inc
cwtl
inc
push
dec
add
lock
insl
mov
fmulp
ds
add
jno
add
inc
daa
outsb
xchg
lea
addr16
push
test
ljmp
rcll
mov
bound
sbb
sub
loopne
xchg
aam
xchg
push
mov
adc
adc
xor
popa
inc
and
dec
push
lret
fnstenv
inc
xchg
outsl
jl
push
cmpsb
imul
pushf
add
stc
ficoms
mov
sbb
loop
xchg
push
or
mov
cmp
mov
pop
xor
push
pusha
pusha
cld
fdivrp
pop
out
xchg
mov
pushaw
xchg
cs
aam
mov
pop
sub
les
imul
dec
enter
xorb
lahf
gs
mov
lock
out
sbb
cmovs
loopne
lcall
jne
push
xor
rcrl
fwait
sbb
out
inc
push
insb
push
add
cli
jecxz
sbb
mov
xor
out
fidivl
inc
xchg
sarb
cmp
sarl
mov
mov
aas
sti
xchg
xor
lods
cld
aad
xchg
out
fisubl
imul
in
sbb
add
xchg
pusha
ljmp
fsubs
inc
jle
xor
dec
daa
lods
add
jb
mov
ljmp
mov
sbb
loope
movsl
sub
fcmovbe
inc
movsl
outsl
jns
pop
pop
sahf
stc
inc
popa
xchg
es
ficompl
mov
clc
lods
mov
div
inc
sbb
adc
sub
mov
sarb
icebp
xchg
mov
dec
xchg
push
imul
ffree
leave
dec
cltd
add
dec
cmp
addr16
jmp
cmpsb
push
pop
push
cmp
enter
jns
mov
pop
or
jno
or
fidivs
add
cmp
xor
adc
cmc
jo
imul
xor
jno
pop
cmp
push
mov
jne
or
aad
fisubrs
scas
clc
imul
pop
jb
xchg
and
push
faddp
jle
das
sbb
xor
movsb
and
frstor
mov
push
mov
iret
adc
adcl
xchg
fwait
or
sub
sub
jle
push
mov
adcl
insb
out
ljmp
sub
sub
enter
xorl
ds
mov
jnp
loopne
add
shrd
push
and
mov
dec
test
mov
push
adc
push
xor
je
das
pop
xor
mov
cld
clc
cmp
rolb
mov
and
mov
dec
cmc
dec
in
sub
shlb
sub
cwtl
fimull
insl
dec
mov
out
aad
mov
add
decb
test
or
and
mov
and
mov
xor
mov
sbb
scas
inc
jbe
ja
neg
neg
cwtl
xor
xchg
lods
push
insl
jns
push
inc
dec
jmp
fdivrl
shrl
jp
mov
mov
cmpsl
mov
mov
xor
adc
mov
inc
jge
pop
mov
or
das
xchg
xchg
cmp
add
mov
idivl
cmpsl
jp
jp
adc
cld
pushf
sub
dec
add
movaps
mov
mov
pop
cmc
and
mov
daa
pop
sbb
add
sub
sub
add
xor
mov
clc
jmp
repnz
int3
sub
out
bound
push
adc
sbb
mov
lods
pop
pusha
adc
add
or
xchg
cwtl
push
jge
dec
enter
fucomi
push
mov
dec
pop
ja
icebp
data16
inc
bound
dec
push
adc
mov
pushf
xchg
iret
mov
into
mov
fsubl
int3
and
pop
sahf
gs
cmp
xchg
adc
or
scas
daa
mov
adcl
inc
pop
ja
xor
pop
xor
push
lea
pop
imul
sub
jmp
push
or
sahf
cwtl
scas
test
mov
outsb
add
out
ss
das
inc
outsl
mov
jo
stos
sbb
pop
stos
jge
sbb
test
jns
push
cmp
push
xchg
cmp
inc
cld
inc
repz
push
nop
fsubrl
dec
push
out
or
mov
popf
mov
xchg
cwtl
cli
sub
cmpsl
push
test
push
pop
outsb
push
xor
arpl
mov
idivb
jnp
or
and
xchg
adc
cmpsb
pop
popa
pop
hlt
inc
jno
ljmp
lds
movsb
sbb
sbb
movsb
add
or
cmp
sub
cltd
mov
xor
pop
add
mov
jns
dec
cmpsb
lcall
mov
ror
push
popa
or
push
hlt
fbld
aad
push
push
inc
adc
or
lcall
cmp
cli
mov
int3
stos
or
fldenv
push
pushf
mov
and
mov
ja
icebp
dec
and
lea
adc
push
cmc
in
jecxz
push
scas
in
in
or
sub
push
dec
movsb
sbb
cmp
pop
jecxz
push
addb
dec
aad
mov
insl
xchg
loop,pt
fbld
and
sbb
into
imul
stc
daa
mov
mov
js
movsb
dec
sub
popa
push
movsl
adc
or
xor
enter
pop
dec
sbb
rcl
and
jg
sbb
push
ret
in
xor
xchg
cmpsl
pop
mov
test
inc
iret
addr16
lods
push
sbb
imul
pop
xchg
stc
lret
or
jne
icebp
push
xlat
or
jbe
or
lds
out
lock
mov
sahf
push
cmpsl
mov
mov
daa
jb
sbb
mov
sub
hlt
xor
adc
push
aad
push
in
mov
adc
iret
mov
int3
dec
jno
in
mov
out
pop
xorl
sbb
sub
arpl
sarl
movsb
jae
xor
lret
movsl
insb
arpl
adc
std
inc
subl
sub
rcl
mov
adc
std
out
and
cmp
lods
sti
fsts
aad
test
sti
pop
mov
stos
sub
xchg
mov
sbb
add
lcall
orl
addr16
sbb
es
pop
mov
xor
lahf
mov
adc
lret
loop
mov
lds
adc
jle
andl
or
jmp
ljmp
cmpsb
inc
or
pop
and
pop
test
mov
mov
mov
lock
or
mov
iret
mov
jge
xor
std
outsb
cli
ljmp
inc
in
dec
jbe
dec
cli
ret
movsb
xor
sub
and
movsb
xchg
ja
cmp
out
rorb
push
pusha
mov
push
aad
jns
mov
and
push
lahf
stos
and
xchg
addr16
pop
adc
les
mov
sbbb
js
mov
mov
movb
sub
xor
pop
mov
sbb
mov
das
lcall
dec
xchg
jle
inc
clc
mov
pop
cmp
and
stos
ret
pop
adc
sub
jge
sbb
aad
ljmp
push
mov
pushf
sbb
fsubrs
es
dec
mov
mov
lret
inc
je
imul
popf
call
cmc
jp
insb
inc
lahf
shlb
in
outsb
jge
xchg
gs
inc
push
stc
int
xor
add
and
xchg
mov
test
movsl
inc
testb
sub
adc
pop
lahf
adc
push
xlat
rclb
ss
jecxz
cmp
mov
mov
inc
inc
notb
iret
in
dec
push
sbb
xor
mov
inc
mov
jno
xchg
lods
mov
fstp
outsl
xchg
insl
and
test
push
xor
insb
push
loopne
inc
jbe
repnz
mov
out
or
pushf
mov
aam
pusha
andb
add
mov
cmp
stos
daa
xor
jo
mov
shll
inc
sbb
sti
cwtl
mov
clc
shr
mov
pop
cmc
and
and
jne
mov
cltd
rorl
push
push
adcb
jae
loopne
sbb
repz
xor
dec
cli
into
sub
enter
imul
sti
scas
push
aad
inc
insl
in
and
adc
cmpsl
pop
inc
shlb
or
jmp
pop
frstor
pop
fsubrl
sub
push
rorl
jb
into
movsb
push
nop
jnp
daa
cs
addb
imul
push
dec
insl
jo
lods
xchg
add
inc
shll
fiadds
test
xchg
adc
jns
ret
pop
dec
inc
movsb
jge
shrl
xorb
test
or
pop
and
xor
or
outsb
push
jne
insb
repz
jns
xchg
sub
xor
inc
jb,pt
cld
jle
mov
lods
in
test
jbe
or
push
das
scas
lret
aad
sahf
xchg
dec
push
push
ja
adc
loope
adc
imul
ss
cmp
fstl
jne
cli
mov
inc
xlat
leave
jbe
jno
push
xor
faddl
pop
mov
push
inc
das
in
ret
in
sub
pusha
jmp
fucomip
imulb
je
pop
mov
enter
xor
add
mov
xor
jle
xor
xchg
lcall
and
jmp
pop
les
push
push
mov
adc
das
das
and
xchg
push
inc
jnp
int
push
movsl
dec
insb
jle
mov
mov
add
or
cmp
or
or
sub
add
mov
test
cs
inc
push
cmpsl
ds
popa
cwtl
push
shlb
push
xchg
pop
and
stos
das
sub
cli
test
jnp
cmp
pushf
push
lock
pop
fldl
inc
push
sbb
and
cmc
gs
xchg
es
outsb
push
jmp
in
pop
fldl2t
push
icebp
xchg
adc
mov
push
dec
jp
in
test
ljmp
mov
inc
aam
fwait
add
push
movsb
mov
out
fstpt
out
movsb
es
nop
xor
roll
mov
and
int
js
out
clc
add
push
call
into
data16
addr16
mov
js
iret
mov
cltd
cmpb
and
movsb
aaa
sub
je
addl
in
cmp
mov
mov
push
rolb
int3
hlt
and
mov
int3
lds
movsl
jle
mov
xchg
sti
or
in
mov
xchg
packuswb
leave
movsl
ss
insl
mov
into
and
inc
dec
lock
clc
sub
adc
out
jmp
pop
je
mov
aam
push
xchg
xchg
cmp
leave
inc
gs
inc
aad
inc
xchg
cltd
int3
lods
mov
lods
add
sbb
and
aam
stos
adc
aaa
iret
shr
add
or
mov
adc
out
sbb
inc
dec
jmp
leave
jge
aaa
add
or
xchg
ret
faddl
popf
mov
push
push
dec
out
pop
idiv
fwait
lcall
out
jae
adc
out
mov
mov
cmp
inc
loop
rcll
sbb
add
sub
lock
cld
js
dec
jp
lret
push
adc
pop
sti
sahf
out
or
sub
sub
xchg
sbb
enter
mov
mov
and
sbb
push
xchg
mov
insl
inc
loop
add
dec
stc
push
mov
jecxz
push
jns
or
sbb
mov
mov
out
cmpsl
movb
lcall
dec
repnz
das
fisttpll
jle
pusha
imul
es
sahf
adc
loope
pop
lods
into
sub
std
mov
pusha
clc
inc
sahf
mov
shl
and
jecxz
pop
pop
stc
stos
mov
fdivs
dec
fistps
test
mov
stos
sbb
popa
mov
lds
aam
ds
dec
movsb
dec
ret
ljmp
fsubrp
gs
mov
aad
insb
iret
nop
sarl
pop
xchg
and
xor
jp
pop
mov
testb
scas
mov
sbb
inc
cmp
into
fwait
stc
in
aas
xlat
mov
fldl
popf
lret
jb
cmp
add
fsubs
test
sbbb
jecxz,pt
daa
call
jne
loopne
xchg
ja
in
lods
dec
mov
mov
or
and
sub
ljmp
je
and
sub
lret
clc
ficomps
nop
js
pop
in
ret
test
iret
xchg
testb
inc
pop
sarl
sti
jmp
adc
outsb
inc
jno
mov
adc
jl
sbb
insb
call
inc
mov
mov
insl
mov
dec
add
and
dec
and
cld
ret
fcomps
jmp
push
mov
iret
xchg
mov
dec
ds
shll
loope
arpl
ljmp
push
popf
in
lcall
stos
jp
mov
jo
xor
inc
cmp
or
ss
les
mov
subl
jmp
mov
pop
lock
pop
add
and
repnz
fwait
xor
cmp
lds
enter
and
insl
mov
out
movsb
int
cmp
stos
sbb
adc
test
xchg
inc
lods
dec
sub
lcall
js
cli
inc
ror
pop
std
and
lods
sbb
fs
push
mov
mov
or
in
jg
lret
repz
lret
adc
ja
aad
scas
aam
add
mov
mov
imul
out
test
mov
dec
jns
in
sbb
or
lea
sbb
jge
jnp
add
lahf
push
ss
sti
rcrl
add
add
int3
add
flds
mov
xor
and
jmp
dec
or
cmp
iret
stos
push
xchg
pusha
es
xor
aam
pusha
or
cli
cs
lock
jg
rclb
into
fisubrs
mov
mov
repnz
fs
jne
xlat
push
ljmp
cli
insl
in
pop
hlt
clc
xchg
pop
idiv
in
movsb
mov
test
xlat
gs
pop
stc
dec
in
adc
cmp
pop
rorb
mov
dec
loope
mov
lock
daa
mov
cmc
or
orl
mov
cmp
inc
mov
sti
and
mov
dec
divb
inc
mov
xor
add
insb
xchg
ret
cli
stc
inc
mov
shl
add
dec
cmp
adc
adc
mov
mov
nop
cmpsl
pop
mov
clc
and
mov
std
cltd
subb
ret
out
add
and
mov
mov
inc
lret
xor
mov
stos
adcb
xor
add
cltd
lock
bound
sbb
stos
mov
int
jbe
jle
out
test
xchg
notb
enter
bound
push
cmp
push
cld
arpl
and
es
fs
sub
add
cmpsb
mov
repz
xchg
adc
out
or
out
sub
rol
rolb
rclb
iret
dec
inc
pop
mov
cmp
jle
xor
mov
out
mov
clc
aaa
inc
ljmp
xchg
pop
stc
add
xor
inc
ret
xchg
mov
lods
mov
mov
or
lea
pop
sarl
icebp
nop
lods
cmpb
es
jl
lea
fstpt
jae
jno
ds
or
pop
cmp
aas
ss
test
adc
popf
mov
push
cmp
loopne
pop
jne
rcrl
xchg
shl
cltd
in
inc
mov
xchg
popl
mov
push
adc
loope
movsb
shll
lods
xlat
test
mov
cmp
lret
sahf
sub
lea
and
inc
mov
mov
or
test
shll
clc
shlb
imul
clc
jl
and
cmp
imul
dec
shl
jbe
inc
mov
dec
push
and
out
xor
in
cld
pop
pop
fistpl
enter
push
scas
std
jb
subb
test
lock
lds
negl
outsl
fadds
inc
xor
jae
dec
dec
mov
xchg
sbb
cmc
clc
pop
insb
aaa
mov
push
stos
dec
lcall
push
and
xchg
repz
daa
out
iret
cld
sub
cs
mov
jb
mov
cmpsl
push
mov
test
and
hlt
add
xor
fs
ficoms
add
mov
jmp
nop
jge
aad
add
shrl
lahf
pusha
adc
scas
jg
inc
add
int
aas
ss
testb
out
shl
xlat
push
cmp
xchg
mov
ror
xorb
scas
inc
mov
cmp
mov
dec
push
imul
cwtl
dec
icebp
push
repnz
add
gs
sbb
xchg
lods
sub
cwtl
jmp
stc
add
inc
push
call
imul
daa
test
xlat
shr
inc
inc
add
outsl
dec
fldl
and
adc
dec
mov
or
stc
les
lahf
xchg
dec
adc
jbe
imul
jno
dec
addl
cmp
sarl
dec
leave
into
sbb
mov
mov
mov
movsb
jg
popa
add
push
push
pop
mov
popf
out
inc
jb
lea
push
push
stos
cmp
int
push
outsb
inc
sbb
scas
pop
ret
jo
outsl
mov
jbe
int3
xor
lret
jmp
push
dec
push
jg
fisttpl
lods
or
test
loope
push
lret
stc
dec
push
rolb
ds
pusha
xor
xor
push
out
movsl
sub
push
out
sub
bound
ret
movsl
ds
das
lret
lret
lret
push
clc
and
in
fwait
insb
push
xor
and
sbb
std
scas
leave
out
sbb
mov
jle
sbb
test
xor
add
push
mov
jne
pop
pop
pop
mov
aas
cmp
sub
ds
lods
div
call
jg
mov
sub
fcomps
in
jae
cmpsl
test
sbb
int3
imul
les
mov
sti
cld
hlt
imul
xchg
popf
das
cwtl
sbb
and
sub
inc
sub
and
jg
movsb
mov
and
push
jno
or
pop
cmpsl
push
mov
dec
shl
pop
xorb
mov
ljmp
in
dec
pusha
shrb
pop
sbb
aaa
push
andl
and
sahf
push
shlb
mov
scas
popf
mov
les
out
lcall
daa
hlt
lods
mov
rorl
push
jo
xlat
mov
adc
ret
in
mov
sahf
int3
xchg
aad
xchg
cmp
mov
xor
mov
shll
bound
in
out
ljmp
push
inc
sbb
sub
add
mulb
rcrb
pop
cli
sahf
int3
sub
sub
loopne,pt
mov
inc
jns
add
out
mov
xor
insl
in
fnstenv
xchg
aad
dec
jo
in
filds
clc
dec
sub
inc
out
mov
mov
movsl
mov
scas
mov
sbb
jo
xchg
testl
ja
mov
cld
adc
push
add
jne
cwtl
xor
mov
daa
fdivrs
or
pop
adc
fbstp
mov
sub
mov
push
xor
mov
rolb
mov
xchg
pop
out
test
pop
mov
ljmp
add
lea
call
out
xor
xchg
aam
and
gs
xchg
test
and
mov
push
mov
andb
loop
jg,pt
sbb
testl
nop
mov
aad
add
mov
pusha
int3
fdivl
add
cld
popa
mov
jae
mov
jb
fs
mov
sbb
cmpsb
inc
mov
xor
lds
mov
fwait
decb
add
push
ret
dec
lahf
test
popf
jg
push
xchg
scas
and
test
iret
mov
pusha
push
movsb
jp
push
test
stos
and
lret
cmp
push
in
into
inc
std
xor
pop
inc
syscall
jb
call
out
cmp
fnsaves
lods
pop
xor
aaa
imul
inc
loope
or
xor
loope
pop
iret
mov
push
fadds
sub
xor
in
insb
sub
jge
adc
int
xchg
dec
rorb
adc
xchg
and
rorl
cmp
testb
hlt
mov
or
pop
ret
movsl
cld
cmc
push
lds
xor
out
push
jge
shll
in
fbstp
test
sub
dec
mov
mov
ficompl
addl
imul
push
push
inc
sub
adc
xchg
add
xchg
mov
cmpsl
je
clc
stos
jo
xchg
stos
mov
jbe
mov
shll
or
inc
push
fidivl
sarb
sub
imul
pop
fsub
xchg
mov
sbb
ficompl
push
into
inc
pop
pop
mov
nop
xchg
icebp
inc
repnz
sbb
insb
dec
les
sub
in
lods
push
dec
daa
ficoms
sbb
xchg
ret
xchg
adc
fldt
add
mov
stos
fcmovb
xorb
jb
push
in
shl
xchg
xor
scas
xor
loope
xor
scas
fnsetpm(287
cmp
and
xchg
mov
or
xlat
insl
jle
push
lods
add
mov
nop
mov
ja
lds
lcall
dec
ret
push
adc
aam
and
pop
xchg
cmp
dec
xchg
sub
push
jl
mov
xor
pop
xor
test
add
sti
mov
das
mov
push
ds
sahf
fwait
add
nop
sti
dec
add
pushf
daa
enter
lret
pop
mov
scas
fdivrs
xchg
dec
gs
xchg
addr16
repnz
ss
sub
inc
inc
cmp
in
or
sbb
add
xor
jno
out
mov
sbb
addl
and
cmc
inc
mov
icebp
sbb
xlat
pop
fs
aas
mov
das
mov
mov
fistl
clc
lcall
push
push
shrl
mov
mov
ljmp
sub
and
ljmp
add
xchg
and
sbb
mov
and
add
mov
cli
lea
ss
add
jecxz
lea
mov
mov
cld
test
push
and
mov
nop
pushf
mov
push
ja
pop
into
mov
and
inc
adc
mov
fdecstp
rcrl
repz
push
and
mov
add
jb
xorl
cmp
adc
or
icebp
popf
adc
fs
jo
push
int3
hlt
dec
loope
xor
mov
sub
and
xchg
sahf
es
test
push
test
jnp
sub
or
push
push
das
push
and
popa
shll
outsb
mov
sahf
dec
gs
popa
sub
and
out
fmuls
push
cmp
movsb
or
and
jle
fadds
jne
dec
lahf
inc
xor
out
xor
lock
repnz
xor
push
gs
imul
inc
mov
cmp
pop
mov
pop
mov
inc
ss
daa
mov
mov
jno
push
jnp
xor
test
xor
push
dec
xchg
data16
sbb
das
adc
and
loopne
dec
in
sbb
cmp
cmp
sbb
xchg
xor
mov
pop
loop
xor
jns
jmp
in
fbld
int3
mov
and
cmpsl
pop
cmp
cmp
sub
xchg
push
outsb
mov
pop
orl
and
sbb
sbbb
pop
xor
xchg
arpl
cli
ljmp
xchg
push
or
in
cmp
fsub
cmp
push
dec
sbb
adc
pop
pop
sub
add
inc
enter
jl
adc
ds
inc
xchg
push
mov
int3
jo
and
scas
and
mov
idivb
pop
jb
lcall
outsb
mov
mov
mov
stos
jo
mov
push
pushf
fistpll
jmp
fdivrs
xchg
add
inc
sub
cwtl
es
inc
and
jge
sbb
sub
inc
cmp
mov
xchg
sub
add
cmpsb
test
inc
push
cmc
mov
cmp
int
push
outsl
mov
rorl
mov
fsubl
test
push
repz
and
ds
in
shlb
sbb
lcall
ja
and
rolb
sbb
sub
push
dec
pop
dec
mov
sbb
insb
cwtl
pop
adc
jne
and
mov
and
pop
movsb
jno
push
hlt
loop
flds
in
push
sti
push
and
lea
push
loope
sub
inc
jae
std
addb
out
popf
cmp
push
aad
les
xor
mov
mov
cmp
mov
and
bound
popf
test
loope
sub
sahf
xchg
dec
in
fnstsw
and
in
pop
out
sbbb
sbb
mov
jae
fsubrl
adc
xor
xchg
xchg
cwtl
test
sahf
sbb
inc
cmc
sub
xor
push
lods
shrb
xor
fwait
xchg
mov
nop
or
sbb
sti
push
adcl
inc
push
push
enter
jbe
aaa
cmp
cmp
pushf
push
mov
mov
mov
xchg
adc
inc
in
push
sub
gs
jne
call
dec
popf
mov
fildll
xchg
pusha
sti
or
jg
fimull
jne
insl
sub
push
inc
ss
nop
dec
mov
jp
mov
jb
xchg
xor
mov
gs
inc
and
aad
or
std
xchg
arpl
shrb
mov
loope
out
xchg
lcall
test
cmp
cwtl
add
lds
sbb
jp
cmp
pop
rcrb
sbb
rcrb
push
dec
out
mov
jg
sub
ret
mov
je
xor
mov
jge
lods
adc
inc
adc
jbe
cmpsl
add
or
and
movsb
lea
lret
jg
adc
push
pop
mov
pop
cmpsl
sub
or
or
jp
cwtl
enter
fwait
insl
push
in
pushf
xor
shr
push
dec
sbb
add
imul
data16
out
and
mov
xchg
push
pop
mov
pop
sub
insl
mov
xor
mov
lcall
ficomps
mov
icebp
into
imul
sbb
push
adc
sub
mov
xchg
jo
push
inc
inc
push
lret
ds
jmp
mov
fstpt
aas
jno
cmp
sub
cmp
add
jle
lea
fwait
hlt
sbb
ja
inc
out
mov
das
xchg
out
sub
jbe
jne
scas
mov
push
adc
dec
and
pop
xchg
loope
lret
xchg
dec
xor
mull
cmp
sub
lds
lahf
mov
aaa
mov
fstpl
adc
inc
dec
rep
inc
add
scas
add
and
fildl
sbb
adc
xor
xchg
in
xor
test
call
js
jg
loop
dec
repz
mov
xor
mov
clc
jo
lock
mov
and
out
xchg
sub
test
outsb
hlt
aas
stos
movsb
stos
in
push
mov
push
popf
add
sbbl
xchg
mov
inc
add
xchg
verr
jp
dec
imul
fdivrs
test
pop
xor
xchg
mov
jmp
loopne
xlat
dec
push
je
cmp
push
push
xor
sbb
and
ja
adc
cli
cmpb
pop
les
loope
adc
loop
cmc
cmp
mov
pop
mov
push
sub
aas
fbld
xchg
mov
aaa
nop
sub
mov
jnp
repnz
jecxz
into
adc
jne
and
jb
mov
xchg
lea
sahf
dec
cmpsb
jae
lds
fildl
mov
add
mov
push
xlat
adc
inc
mov
int
sub
xor
bound
mov
je
push
ja
popf
daa
push
dec
jle
mov
into
mov
jge
fwait
gs
notb
rcrb
repz
sti
lret
pop
add
jl
sub
push
rorl
pop
push
rcrb
push
ljmp
mov
dec
mov
shll
cs
adc
mov
dec
sbb
dec
fsubrl
lods
mov
inc
mov
lret
or
cmp
xchg
xchg
push
sub
mov
and
mov
mov
xchg
jecxz
adc
in
insb
xchg
enter
inc
leave
sbb
sbb
sbb
cmpsb
nop
push
mov
dec
jle
insl
adc
mov
loop
or
mov
nop
inc
cmp
push
lahf
das
push
stc
stos
stos
sub
and
inc
and
insb
or
adc
xor
das
xchg
sub
cltd
cs
sbb
scas
push
mov
fstpl
pop
fsts
data16
aam
and
push
in
cli
jno
pop
jle
lret
in
popa
leave
outsb
xchg
dec
cmp
les
adcl
and
pop
lds
inc
push
inc
sti
sub
repnz
ljmp
inc
lods
jmp
pop
in
mov
outsl
jmp
loope
arpl
insl
rcrl
out
or
fldcw
xchg
sub
imul
rcrb
imul
shrl
fstpt
sbb
dec
lock
fbld
mov
fists
xor
push
test
in
inc
add
lods
mov
and
idivb
xlat
iret
fstpl
mov
inc
pop
pop
sbb
mov
fsts
test
aaa
stc
xor
test
mov
sbb
fadd
fwait
cmova
rcrb
push
outsl
and
jb
aas
ret
pop
adc
out
stos
push
and
orb
dec
push
pop
rcrl
lcall
cmp
rolb
cmp
stc
lret
xchg
xor
and
add
iret
lods
push
sub
rcrb
out
popa
jne
scas
f2xm1
push
push
cmp
xchg
push
push
add
inc
iret
test
into
mov
call
bound
fdivl
fimuls
sbb
stos
xor
sbb
pop
mov
mov
xchg
mov
xchg
dec
stc
xor
mulb
mov
loop
add
mov
sbb
jg
iret
inc
push
and
jg
mov
fimuls
dec
daa
and
and
xchg
mov
repnz
push
jo
in
outsl
lret
scas
add
or
insb
frstor
daa
iret
cwtl
mov
push
bound
mov
mov
adc
mov
sahf
in
or
pop
in
sub
push
mov
xor
loop
sbb
sub
enter
dec
adc
dec
in
sarl
dec
cli
xor
repz
pop
fwait
cmpsl
lahf
stos
sbb
push
daa
rcrl
out
je
test
in
cmp
jmp
insb
shll
inc
pop
das
sub
push
xor
push
fs
and
sahf
nop
pop
mov
mov
sbb
mov
insl
fcmovu
or
insl
or
scas
scas
outsl
mov
shrb
cwtl
mov
push
aaa
mov
mov
sub
jnp
je,pn
roll
ljmp
leave
dec
inc
daa
in
or
bound
push
pop
mov
pop
and
and
and
movsl
push
pop
popf
cmp
jne
lds
imul
and
sub
sub
jno
xlat
mov
outsb
cmp
inc
xchg
pop
lahf
mov
add
push
add
add
stc
rclb
mov
push
adc
ds
ljmp
daa
out
fists
and
jbe
fsubl
int
ss
mov
inc
push
xlat
push
scas
xchg
push
xchg
mov
das
cmp
pop
xchg
fs
fists
or
hlt
inc
test
in
add
push
shll
push
add
mov
dec
jmp
and
fsubrs
mov
fadds
push
jb
repnz
inc
ret
mov
roll
hlt
ss
adc
mov
dec
mov
in
mov
and
fwait
xchg
pop
mov
test
in
jo
jno
xor
xchg
xor
adc
adc
pop
jo
leave
xchg
dec
xchg
aas
mov
mov
mov
sbb
stos
ss
push
test
jmp
xchg
out
or
ss
fs
or
dec
jno
out
dec
push
adc
lret
and
shlb
ja
ret
or
sbb
cli
mov
scas
mov
mov
fnstenv
dec
jo
jl
cmp
pop
rcll
pop
sbb
and
sub
sbb
inc
scas
sbb
test
jp
mov
dec
outsb
test
fmul
mov
sub
aam
loope
lret
mov
mov
dec
sti
bound
inc
xor
xchg
fbld
mov
dec
sub
add
inc
or
insb
push
mov
or
scas
jae
and
jg
mov
inc
scas
ljmp
fcomip
in
and
xchg
add
pop
outsl
cmp
cmpsl
popf
dec
jno
cld
mov
fldl
mov
mov
arpl
dec
and
xchg
jnp
sbb
dec
jne
in
out
les
mov
add
fstps
test
rorl
rcll
jg
mov
jmp
scas
jmp
push
dec
push
push
mov
fildll
push
and
sbb
out
cs
mov
mov
push
pop
sbb
inc
lds
mov
imul
shlb
aaa
add
aas
jle
rolb
push
mov
push
xchg
sbb
bnd
xchg
mov
dec
inc
sub
call
sahf
cmpsl
les
adc
arpl
js
stos
mov
push
push
popf
or
cld
int3
pop
add
pop
iret
mov
or
mov
mov
aaa
lcall
mov
pop
sqrtps
xor
inc
inc
loop
orb
pop
or
rorb
outsb
jno
push
data16
sub
and
mov
outsl
mov
mov
mov
inc
ljmp
rclb
cmpsb
or
lcall
shrb
negl
les
imul
movsl
arpl
xlat
push
add
shl
shrb
pop
push
loopne
mov
xchg
or
in
adc
cmp
pop
adc
in
lahf
mov
add
xor
or
lds
fwait
bound
xchg
and
imul
mov
mov
and
cmpb
pop
mov
mov
push
mov
insl
and
jnp
sbb
cs
frstors
ss
cmpsb
stc
dec
test
inc
in
aad
adc
test
icebp
xchg
mov
mov
jo
lahf
push
mov
fcompl
mov
push
cwtl
pop
xor
mov
lock
mov
insb
mov
mov
rolb
sbb
aad
ljmp
jp
cmp
pop
sub
adc
imulb
leave
inc
cmp
mov
xchg
daa
jns
xlat
xchg
outsb
cltd
in
adc
fs
pop
push
push
imul
jmp
orl
pop
mov
add
ret
inc
pop
mov
add
pop
lahf
jl
popa
add
nopl
out
and
push
xor
test
shl
pop
mov
cmp
negl
and
jne
ss
push
fidivrl
pusha
xor
test
mov
or
or
add
cltd
add
mov
das
xor
mov
bound
das
push
push
outsb
scas
addr16
scas
ss
sub
out
push
add
xor
int3
mov
loopne
cmpsl
nop
dec
sub
add
adc
dec
mov
inc
push
sbb
fwait
add
mov
inc
mov
add
lock
xchg
inc
insb
or
in
lds
mov
mov
cmpsb
pop
adc
sbb
and
fstpl
mov
add
push
and
nop
and
push
push
stos
std
xor
inc
xchg
repz
jmp
sbb
lods
cmp
mov
into
insl
xchg
jmp
or
mov
pusha
jno
cmp
xchg
pop
dec
xor
add
xor
adc
jmp
xchg
scas
ja
fs
outsl
jae
cwtl
sub
test
push
jnp
aaa
mov
loop
cmp
pushl
fcoms
mov
dec
push
ds
mov
sbb
add
push
mov
std
sub
mull
cmp
arpl
ja
push
in
or
scas
fmuls
mov
push
sbb
call
xor
mull
test
and
imul
rcll
pop
dec
dec
cmp
jg
pusha
add
mov
cli
jb
loope
inc
mov
in
call
jnp
das
pop
lods
push
int3
xor
lret
dec
jno
test
push
loop
mov
adc
jb
sbb
jnp
stos
nop
dec
push
lds
bound
jns
sbb
sti
jnp
xchg
lahf
adc
mov
xor
mov
push
insl
jp
cmp
push
shlb
mov
pop
imul
push
fwait
jg
orb
cmp
in
pop
jmp
clc
leave
aaa
lahf
mov
pop
cmpb
test
fnstenv
sub
sub
fsubs
pusha
jo
and
adc
mov
js
dec
mov
aas
in
dec
dec
mov
fadds
pop
mov
mov
mov
mov
roll
mov
mov
xor
add
test
and
mov
xchg
in
fstl
fld
mov
stos
push
incl
cltd
mov
subb
scas
mov
lds
imul
in
rclb
stos
mov
inc
cs
mov
jnp
dec
and
bound
nop
out
pop
pop
xchg
cs
mov
test
mov
aaa
lret
sub
xor
insl
imul
mov
mov
mov
xor
out
pushf
xchg
fwait
sarb
scas
push
pop
mov
or
jmp
dec
cmp
jne
insl
fnstsw
cli
mov
push
scas
je
xchg
jae
mov
test
cmp
in
mov
mov
pop
push
mov
inc
fs
ds
adc
adc
and
mov
rclb
mov
inc
jnp
mov
mov
enter
mov
jb
jmp
jae
adc
adc
or
push
mov
mov
fdivrl
mov
mov
rclb
jbe
iret
cmp
xchg
add
rolb
stc
push
xlat
or
cmp
in
aaa
in
ljmp
mov
stos
sub
cmp
movsl
mov
inc
fimull
mov
pop
nop
push
adc
fsub
push
pop
out
stos
jmp
and
movl
out
dec
callw
iretw
dec
inc
sub
lcall
push
into
fwait
or
sub
int
test
adc
add
fisubs
dec
xlat
pop
int
mov
cmp
jo
cs
pop
or
pop
pop
inc
xor
jns
ficomps
push
lahf
sahf
test
pop
lret
add
mov
aaa
push
pushf
pop
push
pop
imul
add
fdivrp
test
cmp
loop
dec
push
popa
pop
insb
mov
jle
cmp
stc
push
mov
out
fcmovnu
andb
mulb
test
sub
dec
xor
xchg
cwtl
add
inc
in
jnp
dec
js
mov
pop
and
jae
outsb
push
mov
pusha
mov
push
call
xchg
repnz
mov
inc
or
ret
std
scas
xchg
jne
mov
dec
out
adc
add
je
insl
popa
adc
int3
cmp
bound
call
adc
cmp
xchg
stc
sub
pop
cmp
mov
hlt
pop
hlt
xchg
je
std
aaa
jnp
and
mov
fstl
pop
mov
je
test
pop
call
xchg
lea
cmc
lret
arpl
jecxz
js
icebp
mov
mov
call
js
pop
sub
push
push
dec
imul
arpl
scas
sarl
lea
movsb
fiadds
pop
xchg
xchg
outsb
mov
push
sbb
sub
popa
stc
dec
add
test
lods
xchg
in
mov
mov
xchg
dec
in
ret
jge
pop
mov
imul
lcall
push
rclb
imul
test
inc
sub
mov
mov
pop
xchg
add
in
mov
repnz
out
push
sub
pop
data16
mov
jb
mov
rcrl
and
int
out
aas
subl
sbb
mov
add
dec
shrb
sub
stc
mov
clc
jmp
cmpsb
movsb
cli
mov
mulb
in
jp
xchg
push
iret
test
nop
psrlw
inc
dec
pop
or
dec
out
lcall
sbbl
adc
push
and
sbb
inc
insb
outsb
ja
pop
cmpsl
inc
aad
push
loop
ret
adc
lret
aad
ret
negb
leave
imul
in
xor
lret
jns
out
cwtl
sbb
out
dec
lods
es
ljmpw
or
xchg
fsubl
sbb
xor
cmp
sub
inc
setae
dec
sti
mov
mov
mov
jle
lock
pushf
mov
inc
xchg
ret
scas
in
rol
inc
rol
lahf
dec
push
xchg
or
mov
mov
repnz
das
cli
icebp
movsb
gs
clc
xchg
lods
sbb
xlat
mov
add
test
and
jno
lret
xchg
aas
jle
inc
dec
cld
in
sbb
ja
mov
sbb
in
aad
dec
and
test
mov
sub
jnp
shrd
mov
mov
inc
mov
sbb
cmc
pop
xchg
pop
mov
sub
lret
xchg
pop
xchg
idivb
push
pop
es
sahf
test
popf
and
pop
roll
mov
pusha
ret
dec
mov
mov
and
imull
mov
xor
adc
sub
xor
push
add
es
enter
jmp
inc
inc
cmp
imul
popa
lahf
daa
adcl
rcll
pop
adc
add
js
mov
mov
jl,pt
fisubs
mov
int
cld
pop
inc
repz
mov
xlat
jnp
cwtl
insb
vmovdqa
sbb
xchg
lods
cmp
xor
mov
jns
imul
cli
aas
jl
or
std
pop
add
out
lea
sub
addl
or
cmp
jns
and
dec
fwait
pushf
shrl
xchg
xchg
xchg
cmc
cmp
ja
aas
dec
dec
dec
mov
push
bswap
adc
outsb
or
lcall
movsb
and
inc
adc
pop
mov
jbe
xor
add
push
into
cmp
push
sti
mov
add
cmpsb
movsl
push
mov
mov
inc
aaa
test
das
mov
fcompl
mov
xchg
inc
sti
jecxz
pop
shr
cmpsl
xor
jne
jl
cmp
or
adc
rcll
les
dec
xchg
ret
decb
scas
daa
inc
rclb
lahf
pop
rep
aam
notl
pop
dec
mov
mov
icebp
adc
jo
movsb
ret
scas
add
ret
xor
and
test
xchg
or
jecxz
pop
dec
mov
add
cmpsl
nop
and
jle
das
popf
daa
inc
lahf
andb
outsl
out
lret
jbe
jo
fcmovnbe
push
stc
mov
jge
mov
xchg
adc
sti
lahf
xchg
test
mov
or
and
jns
js
dec
add
fdivrs
cli
xor
jl
das
adc
add
mov
adcl
hlt
dec
dec
mov
jne
ss
xchg
push
ja
pop
int3
addr16
push
std
ret
jnp,pt
leave
test
xchg
pop
fwait
lods
mov
mov
jp
nop
fdivrs
pop
hlt
sti
xchg
out
jmp
cmc
mov
test
sahf
mov
jl
push
xchg
ffreep
mov
cli
loopne
ret
dec
jl
mov
xor
inc
gs
ficompl
aam
push
arpl
sahf
in
mov
jge
flds
stos
jns
in
pop
jne
pop
adc
push
pop
jo
jno
aas
and
js
xchg
mov
scas
fcmovnb
out
push
xor
ret
icebp
push
mov
je
xor
dec
scas
sbb
adc
lcall
xor
pop
imul
inc
popl
pop
cmpsb
mov
fists
xchg
arpl
mov
mov
dec
mov
cli
adc
xchg
shr
imul
pop
pop
lods
push
in
stc
mov
leave
sub
lods
in
popa
mov
cli
mov
and
stos
mov
mov
cmp
aam
and
sbb
test
mov
scas
jo
repz
pop
loop
cmpsl
cmc
add
dec
xor
ret
cltd
mov
ffree
mov
divb
aam
int
fimuls
xchg
movsl
sarl
or
cmp
out
push
adc
inc
out
mov
mov
inc
or
sbb
or
lock
and
push
xor
sub
cli
mov
test
jmp
mov
inc
mov
insb
add
stos
fists
dec
shrd
lahf
pop
sub
subb
push
pusha
icebp
pushf
cmp
hlt
aad
les
xchg
mov
lods
sahf
mov
dec
push
gs
or
push
xor
mov
or
xchg
insl
je
popaw
push
or
push
lcall
pop
mov
popa
or
jo
aam
ret
ja,pn
leave
add
xchg
sbb
imul
scas
add
xor
add
cmp
add
inc
pop
push
jns
pop
push
in
jnp
push
bound
orb
inc
push
pop
in
cmp
inc
mov
or
dec
scas
out
aas
push
pop
lods
cli
jle
sbb
push
loope
inc
test
push
or
mov
sub
xchg
fs
sub
jns
mov
scas
inc
test
shrl
and
cmpb
mov
hlt
lcall
aam
add
mov
xor
int
cmpsl
pop
in
test
add
lahf
cmp
repnz
pop
mov
mov
ret
and
adc
fidivrs
sub
adc
aam
cmp
push
sbb
jo
enter
sar
outsb
xchg
popf
xchg
inc
and
jb
xchg
lods
popf
in
int3
les
loope
add
nop
or
xchg
in
pop
mov
arpl
sub
test
fisttps
in
inc
sti
push
or
jno
jmp
scas
xor
adc
jecxz
xchg
and
mov
lods
pusha
jnp
icebp
dec
mov
rcrl
sbb
or
mov
mov
scas
mov
int
ljmp
xchg
push
xlat
mov
xor
jns
push
mov
test
adc
xor
cmp
xchg
out
lcall
rol
push
xchg
mov
adc
mov
insl
lods
mov
sbb
pop
outsb
cmp
cmp
xchg
std
fninit
insb
into
je
fimull
outsb
inc
popa
cmp
insb
loopne
xor
fs
in
mov
leave
les
add
inc
mov
jge
pop
mov
sub
outsb
imul
xor
leave
sub
mov
xchg
iret
fstl
pop
mov
arpl
pop
or
push
inc
es
loopne
adc
xlat
push
lret
pop
cmp
sbb
cmp
jbe
push
inc
add
add
xor
test
sbb
pushf
mov
mov
xchg
loope
or
adc
lahf
dec
mov
jo
pop
jg
or
add
bound
inc
jbe
hlt
push
sahf
scas
call
lcall
ret
lds
cmpb
mov
and
jecxz
idivb
mov
mov
jle
repnz
cli
mov
mov
adc
xchg
mov
loopne
adc
aam
mov
xchg
fadds
rcll
stc
fneni(8087
or
jo
xor
ljmp
je
cli
es
fidivs
fincstp
push
iret
and
rcrb
or
mov
lock
movsl
sarb
cmp
test
std
xchg
mov
push
mov
pop
stos
mov
test
loopne
xor
xchg
repnz
mov
bound
sahf
fistpl
dec
or
aaa
inc
aam
mov
xor
and
sahf
jne
sub
imul
in
push
std
jne
test
add
dec
mov
outsb
inc
sahf
fistl
xchg
dec
stos
cmpsl
cmpsl
sub
mov
dec
and
push
mov
mov
sub
ja
loop
jg
pop
pop
hlt
pop
daa
xor
ljmp
sahf
test
sbb
fisubrs
in
sahf
in
mov
sub
sbb
xchg
imul
pop
push
cwtl
das
inc
mov
or
sbb
jne
mov
or
lret
pop
clc
sub
data16
jg
sub
arpl
in
ljmp
add
xchg
jle
or
xor
orl
push
les
push
cs
add
js
fwait
out
fimull
mov
fildl
adc
js
push
push
ss
cmp
push
cltd
mov
sahf
pushl
or
out
imul
mov
ljmp
mov
add
test
jno
push
push
fadd
push
movsb
xchg
jno
mov
stos
lret
mov
mov
and
xchg
jle
rorb
mov
jae
add
pop
loop
movsb
mov
add
cmp
rcrl
pop
cmc
inc
bound
sarl
adc
jp
insb
jo
sahf
or
scas
or
daa
pop
shl
sbb
and
push
rcrb
cli
xor
mov
clc
mov
inc
loopne
add
dec
test
cmp
addr16
out
test
mov
test
gs
je
push
nop
jnp
fsubs
int3
stc
int
jae
push
jne
sarb
stos
andb
les
divb
jmp
fistl
sti
push
mov
call
push
pushf
push
xchg
into
jecxz
sub
inc
push
xor
xchg
aam
cmpsb
xor
mov
adc
mov
inc
mov
sar
dec
xchg
jnp
mov
jmp
mov
scas
sbb
inc
dec
nop
adc
outsb
test
ret
push
loope
mov
repnz
mov
out
xchg
fs
aad
dec
dec
xchg
das
nop
aaa
sub
xchg
loop
scas
and
mov
pop
push
fildll
push
push
andl
fwait
movsl
mov
push
out
mov
aam
jle
pop
push
mov
adc
push
nop
cmp
cmp
movb
mov
les
mov
mov
dec
repnz
push
fdivrp
nop
icebp
pop
sub
and
lds
inc
adc
lea
fsubs
lods
mov
xchg
jmp
jl
pop
mov
ret
outsl
pop
xchg
xchg
dec
ret
es
jg
fadd
cmpsl
xchg
push
nop
std
inc
mov
lds
dec
aas
incb
jno
shlb
in
pusha
jecxz
xor
lret
pop
stos
popa
call
in
fsubl
fs
imul
fsubrs
mov
inc
shl
and
shl
xor
cmp
lcall
inc
cwtl
adc
jmp
lea
add
inc
sbb
insl
dec
sbb
fnsave
or
jnp
and
mov
inc
loop
jl
push
stos
xlat
lret
mov
jbe
je
or
jge
jecxz
leave
and
lock
emms
in
repnz
aaa
dec
lds
dec
loop
jge
adc
shl
shlb
jecxz
decl
xchg
lcall
imul
mov
mov
lret
cmp
addr16
sti
sti
inc
mov
cmp
mov
leave
jbe
add
sub
sahf
scas
add
xchg
aas
std
sbb
movsb
cmpsl
mov
call
call
popl
sbb
dec
testl
inc
fisubs
arpl
dec
fiadds
mov
sub
jmp
xor
mov
adc
sbb
mov
sub
faddl
cltd
repz
inc
xor
je
stos
rcr
lods
dec
dec
pop
adc
mov
pop
jmp
add
test
sbb
mov
push
sub
inc
pop
das
lds
inc
and
dec
int3
or
inc
out
lea
sbb
sahf
ret
into
adc
dec
out
je
sub
jo
das
dec
cmp
fstps
xor
jl
sbb
push
loope
jmp
rcr
fst
sub
lret
add
add
int3
push
jo
push
xor
sbb
out
cmp
mov
popf
andb
fldt
cwtl
lods
xchg
mov
xchg
js
inc
sahf
inc
sub
or
cmp
ret
ljmp
lea
lret
dec
sub
mov
dec
push
fwait
cmc
pop
jecxz
xchg
or
adc
sbb
movsl
sub
adc
mov
stc
cmp
stc
in
xchg
shrd
pop
mov
sbb
add
jb
hlt
lock
imul
lds
loope
xchg
cmc
rcr
adc
adc
xor
mov
sub
lcall
pushf
pop
mov
add
fadds
cwtl
cmpsb
fisubl
jno
jne
insb
xchg
test
es
les
lds
or
dec
adc
mov
arpl
pop
lret
stc
dec
jg
shrl
fildl
jnp
imul
hlt
push
decb
shll
mov
insl
les
in
ja
mov
stos
pop
andl
pop
push
pop
push
xchg
aas
jecxz
ret
add
pop
daa
inc
push
xchg
sti
pop
fidivl
into
movsb
sub
inc
pop
into
into
ss
imul
push
jle
mov
xchg
fisttpl
xchg
xor
push
push
and
xor
popf
mov
jae
or
jae
push
mov
sbb
sub
push
xchg
inc
cmp
mov
pop
test
sub
daa
push
mov
xor
jmp
ds
push
int3
add
ret
pop
nop
pop
in
mov
cld
push
rcl
test
fs
ljmp
js
adc
xor
andb
iret
add
orb
lea
aad
jno
xchg
fldenv
rcrb
mov
in
cmp
mov
roll
adc
mov
xchg
adc
adc
fs
sbb
inc
test
add
fwait
adc
pop
js
fiadds
das
cmp
loope
or
dec
ds
pop
imul
push
test
dec
jae
pop
inc
fldenvs
out
sbb
aas
jae
out
lock
data16
pop
fisubs
out
dec
loopne
hlt
dec
mov
aas
adc
dec
mov
js
push
mov
fsts
mov
mov
pop
fsubrl
call
sbb
out
jae
and
mov
mov
sub
sub
icebp
stos
jge
xchg
xlat
rcl
add
data16
jne
sbb
aas
mov
and
out
not
jbe
sub
lcall
push
jb
and
adc
lds
xlat
fsubrl
scas
sub
addr16
and
xlat
cs
imul
jno
ret
fs
push
imul
jp
xor
ljmp
sbb
fwait
xchg
pop
cs
jns
push
pop
add
std
push
daa
fimull
rcrb
iret
test
cwtl
inc
addb
push
addr16
rclb
lods
sbb
pop
mov
out
dec
and
cmpsl
mulb
loopne
ss
lret
cmp
je
out
dec
mov
pop
out
sar
jns
sub
inc
fidivs
insl
repz
xchg
in
jb
adc
ss
popf
loope
les
ss
push
mov
jae
adc
or
mov
inc
sbb
cld
xchg
and
push
sub
es
pop
mov
inc
daa
inc
cmpsl
dec
loopne
xor
mov
loope
shlb
roll
xchg
push
test
push
mov
xor
pop
cmc
sub
xor
mov
data16
mov
xor
inc
mov
icebp
sbb
sbb
and
xor
icebp
pop
mov
xor
mov
fcoms
outsb
cmp
lods
scas
ljmp
loope
xlat
scas
fstpt
or
jl
addr16
adc
lock
out
jle
sbb
cmp
fcoml
ds
test
movsw
and
lcall
cmp
adc
rol
mov
gs
push
dec
cld
cli
jp
testl
push
int3
sub
push
insb
movsb
mov
dec
add
mov
dec
arpl
test
cmp
es
movsl
pop
cmp
mov
mov
sub
je
jmp
inc
ret
mov
mov
or
pushl
dec
jge
lahf
cmp
gs
movsb
mov
dec
ja
ret
mov
iret
cld
mov
roll
pop
fsubl
mov
inc
inc
aas
mov
ficompl
mov
in
ss
shll
pop
aaa
sub
mov
ret
cmp
fists
rcll
jl
int3
movsb
lret
dec
and
loop
out
add
dec
ret
pusha
or
arpl
inc
xor
ret
jge
rorb
add
out
inc
loop
in
nop
xchg
in
and
clc
jno
add
jbe
ja
mov
mov
adc
lret
pop
mov
mov
outsb
cli
jbe
mov
adc
or
loopne
push
bound
adcl
jg
mov
jae
ss
je
inc
mov
into
xchg
shrb
inc
cmp
mov
leave
mov
cmp
mov
rorb
imull
ja
shrl
int3
push
sub
mov
out
outsb
stos
cli
clc
inc
data16
sbb
xchg
fs
mov
repnz
pusha
dec
pushf
out
arpl
lea
sbb
orl
mov
lods
xor
frstor
in
nop
jo
es
lret
hlt
dec
pop
nopl
jecxz
jbe
cmp
xchg
cmp
std
lret
popa
add
jno
fnstcw
cmp
pushf
enter
out
arpl
cmp
or
jo
sub
lds
data16
clc
insl
inc
adc
jns
scas
push
xor
leave
ret
dec
add
stos
in
adcl
xor
mov
jae
mov
ds
mov
xor
pop
jecxz
or
inc
dec
mov
add
adc
fucomip
inc
push
popf
lret
rcrb
dec
inc
sub
inc
jg
sti
into
shlb
pop
stc
mov
and
or
sub
pop
orb
ds
mov
sub
mov
inc
mov
xchg
mov
inc
aaa
icebp
sub
push
sbb
sti
adc
xchg
les
clc
mov
pop
ficoms
add
rcrl
mov
scas
pop
push
lahf
lds
stc
cmp
clc
adc
pop
jo
movsl
mov
shlb
sbb
icebp
add
lret
js
inc
xchg
xchg
pop
loope
dec
xchg
xchg
subl
rclb
addr16
xor
mov
rolb
sarb
rorl
mov
pop
icebp
sbb
sub
daa
mov
cld
movsl
mov
mov
and
jns
fldl
sub
mov
frstor
pop
jbe
lods
das
jmp
or
push
jb
fwait
imul
lret
arpl
add
jae
push
bnd
cmp
lock
add
xor
test
or
sbb
es
xchg
popf
mov
imul
rcr
mov
mov
cmovg
cmp
daa
fsubrl
hlt
gs
xchg
ja
push
repnz
jg
or
repnz
inc
mov
sbb
xchg
shr
icebp
dec
mov
dec
xor
test
scas
xchg
into
and
out
pop
sbb
cmc
sub
inc
mov
or
inc
mov
fsubrs
ss
mov
jl
xor
in
or
push
mov
pushf
pop
pop
ljmp
pop
push
push
cli
adc
pop
and
sbbb
and
jmp
fnstcw
aad
cmp
mov
mov
in
test
shl
cld
mov
and
movb
sub
sarb
inc
gs
mov
mov
cltd
addb
stos
das
test
js
movb
lods
adc
mov
mov
cmpl
push
cs
push
fwait
push
push
pop
adc
push
sub
push
adc
mov
xchg
pop
cvtdq2ps
mov
sbb
stos
stos
xor
pop
aas
andb
push
nop
pop
in
outsl
outsb
and
sub
pop
imul
leave
mov
sbb
ja
cld
enter
rcl
leave
push
es
stos
mov
pop
mov
jns
test
mov
xor
xor
sbb
add
pushf
mov
test
rorl
dec
and
and
enter
insb
dec
xchg
test
cs
ret
and
das
leave
push
sbb
jne
stos
pop
cld
in
jmp
outsl
sbb
inc
inc
leave
cwtl
outsl
mov
sbb
push
cwtl
push
pop
bnd
test
test
cli
push
mov
adc
mov
idivb
outsl
cmp
sar
adc
push
jnp
cmpb
pop
pusha
pop
cmpsl
aas
jg
xor
mov
andb
sub
test
mov
xlat
pop
mov
pop
gs
mov
mov
cmp
addr16
rcrl
jb
test
inc
mov
jecxz
cmc
push
xor
cld
dec
jl
dec
sub
hlt
push
sub
cmp
test
inc
pushf
leave
xchg
in
ss
enter
mov
sbb
cmpsl
mov
scas
imul
aam
into
mov
pop
loopne
aam
and
pop
stos
pushl
je
arpl
les
pop
jle
mov
mov
out
mov
fsts
ljmp
nop
cltd
cmc
mov
dec
or
jmp
xchg
cmp
and
arpl
jl
in
lock
push
and
rorb
insl
push
sbb
sti
or
fnstcw
fs
sub
shrb
fistpll
outsl
pop
pop
imul
addb
xchg
or
jmp
lods
mov
adc
subl
mov
int
xchg
test
addr16
daa
out
xchg
aas
pusha
pop
mov
sub
pushf
aaa
fdivrl
sbb
mov
sbb
jmp
sub
xchg
in
in
push
jl
jmp
dec
orb
jle
lods
scas
int3
fcomp
dec
add
adc
popa
mov
lahf
imul
jns
dec
inc
jbe
jae
ja
inc
jbe
or
push
or
adc
arpl
adc
and
insl
clc
adc
int
mov
clc
xor
sbb
adc
fldenv
push
inc
mov
fwait
sub
gs
or
mov
push
mov
std
jae
inc
sub
jp
pop
jae
or
mov
push
sbb
rcrb
or
dec
and
insl
lahf
adc
xlat
xlat
cmp
in
sbbb
push
loope
push
mov
or
in
lds
cmpsl
xchg
jp
mov
cmpsl
sub
daa
arpl
sbb
roll
sahf
xor
test
inc
addl
ror
push
mov
xor
cli
not
sbb
hlt
addb
sbb
push
xchg
out
pushf
mov
test
ss
ja
pop
movsb
fnstcw
cmp
mov
je
pop
ljmp
cmc
jno
inc
sub
fdivp
mov
and
inc
push
insl
pop
push
dec
stos
stos
push
das
and
xchg
pop
jbe
inc
push
add
out
iret
pushf
shrl
int
mov
cld
aad
movsl
insb
sub
xchg
pop
ds
movsl
mov
insb
or
push
mov
xor
aas
and
pop
push
movb
pop
lea
sub
pop
xorb
adc
mov
sahf
cmp
mov
sahf
xor
adc
je
dec
cmp
sbb
int
adc
daa
or
ret
sbb
jmp
ljmp
gs
iret
adc
cli
iretw
push
movsb
xchg
add
lods
jecxz
jo
js
push
stos
and
mov
mov
pop
out
inc
pusha
sbbb
lock
add
add
lcall
popa
inc
adc
fcmovb
aas
jmp
lret
xor
maskmovq
idivl
sti
push
dec
in
aas
cltd
lods
ret
icebp
jmp
subl
sub
inc
add
and
xlat
mov
insl
fisttps
jnp
gs
inc
sahf
jne
clc
sti
lahf
inc
jo
push
jecxz
js
jge
jge
popf
xor
add
inc
test
fnstenv
pop
jae
dec
sub
inc
sub
jae
adc
and
insl
sahf
and
push
adc
or
add
dec
push
dec
mov
pop
pop
es
add
fbld
js
in
sub
popf
setb
push
jp
mov
out
lahf
push
and
adc
popa
pop
in
std
dec
hlt
ret
dec
sbb
imul
inc
shl
lock
adc
push
add
pop
xor
xchg
jb
cmp
mov
jmp
addr16
das
inc
fldt
add
ret
inc
sbb
std
adc
add
add
mov
imul
adc
dec
adc
xchg
push
inc
push
pop
test
jecxz
sub
frstor
fdivp
jg
mov
sbb
loope
std
mov
icebp
and
adc
cmp
leave
pop
popf
inc
jp
cwtl
mov
inc
fld
sbb
sbb
rolb
mov
push
push
insl
xlat
dec
mov
shrb
sub
hlt
clc
fucomp
add
shl
cmp
sub
mov
pop
out
frstor
sti
sbb
mov
movsl
push
or
adc
dec
add
cwtl
sub
ret
xor
cmp
or
test
stos
and
imul
push
sub
fstpt
fdivl
xchg
cwtl
test
out
push
xor
add
fisubs
test
leave
lods
sahf
pop
sbb
mov
cmp
sub
bound
jge
test
inc
add
mov
pop
or
push
sbbl
xchg
mov
pop
jns
arpl
js
pop
in
les
cmp
jb
leave
xchg
iret
cmp
pop
pusha
dec
mov
in
nop
loop
xchg
jg
orl
cmpsb
cli
xchg
mov
ds
stos
sub
cmp
sbb
aam
addb
pop
push
xlat
test
bound
sbb
inc
aas
fistpll
jns
sbb
or
xlat
fldt
cmp
stc
outsl
cmp
cmpsb
inc
sub
push
add
mov
cmp
ret
pop
cmp
arpl
cs
fisubl
dec
mov
push
jnp
mov
xor
sbb
ja
mov
sub
ja
movsb
call
push
xor
clc
mov
adc
mov
add
sub
fdivrl
xchg
lret
sub
sbbb
dec
mov
imul
pushf
xchg
or
mov
int
jbe
mov
sbb
gs
pop
icebp
or
push
rcll
fildll
cmpsb
xor
adc
cmpl
mov
je
xor
jge
inc
aam
fmuls
dec
jle
ds
into
xlat
std
sub
enter
test
pop
loop
fcomi
pop
stos
xchg
mov
mov
add
xchg
inc
sbb
nop
mov
enter
gs
adc
adc
popa
cwtl
mov
lods
adc
lods
lret
popf
imul
insb
or
scas
dec
cmp
out
jmp
int3
les
cltd
jns
xchg
addr16
fiadds
mov
stos
xchg
fcoml
dec
add
ret
imul
hlt
dec
push
adc
cltd
or
lret
mov
xchg
xchg
lret
hlt
outsl
push
out
xor
call
xlat
xchg
dec
stc
out
std
cmp
pop
or
sub
shl
mov
pop
push
pop
sahf
shl
sub
mov
mov
sbb
adc
insb
aaa
iret
cmp
lock
bound
cld
outsb
mov
call
and
mov
pop
gs
insl
cs
dec
mov
or
movsb
push
test
jns
xorl
inc
and
in
inc
getsec
mov
and
sbb
xlat
jno
cs
popa
mov
lock
mov
mov
test
xor
iret
in
lods
sub
test
inc
dec
cmp
mov
loopne
mov
mov
dec
pop
pop
and
dec
add
sub
loop
clc
dec
push
sub
clc
mov
lret
fisttps
outsb
nop
mov
xor
arpl
dec
addr16
je
cld
sahf
outsb
sub
in
sbb
sbb
scas
std
sbb
push
lret
mov
inc
into
je
mov
imul
fwait
dec
lds
call
sub
fs
pop
pop
out
movsb
repz
inc
jne
add
test
in
data16
cmp
mov
mov
mov
sub
call
push
sbb
and
cs
into
or
inc
in
scas
xchg
pop
cmp
jae
or
sbb
test
daa
pop
cmp
fldt
call
jl
mov
lret
sbb
sahf
aad
ret
add
test
movsb
mov
imul
insl
fldl
in
enter
xchg
repnz
mov
mov
push
shlb
rclb
test
shrb
test
pop
sti
dec
out
filds
xchg
js
jp
and
inc
pusha
nop
dec
cmp
lods
and
daa
push
movsl
pop
test
inc
xor
jbe
mov
cmp
mov
or
xchg
or
push
pop
nop
aaa
stos
or
jo
fcmovnb
mov
inc
lcall
sbb
or
outsb
xchg
adc
adc
scas
xchg
push
out
cmpsb
mov
into
fisttps
scas
and
mov
push
shrl
or
dec
sub
pop
lahf
test
fdivs
fisubrs
ret
in
aaa
stc
enter
cwtl
mov
outsl
sbb
inc
in
xlat
or
cmpsl
aas
xchg
fidivrl
sarl
xchg
aam
mov
jb
hlt
rcrb
out
scas
xlat
nop
adc
and
aad
mov
and
xchg
outsb
mov
sbb
neg
dec
and
jbe
mov
mov
xchg
jne
fidivs
pop
adc
or
out
repz
pop
stc
in
movl
push
mov
cmp
jbe
sub
ss
loope,pn
push
push
cmp
nop
imul
pusha
js
pushw
cmc
add
sbb
sbb
cltd
mov
call
in
mull
add
and
or
lret
and
mov
ror
xchg
jl
cmp
lods
mov
xor
jb
aaa
repnz
in
jae
push
mov
push
mov
fisttps
sbb
test
adc
cmpsl
fldt
adc
loopne
sub
inc
mov
lret
aaa
in
popa
ja
and
out
dec
pop
arpl
imul
xchg
xchg
addr16
mov
aas
into
int3
sbb
adc
fs
dec
das
jo
je
xchg
scas
xchg
sbb
lock
incl
in
cmp
scas
test
mov
xchg
popa
iret
sbb
and
jns
pop
mov
jl
divl
movsl
out
fildll
fs
cmp
add
scas
inc
jg
and
mov
scas
call
cld
cmpsl
adc
mov
cli
sub
sahf
xor
int3
aaa
sub
imul
int
jnp
fsubrl
or
mov
pop
mov
pop
leave
and
lods
lea
inc
mov
mov
ljmp
or
js
ljmp
mov
xor
popa
push
ret
arpl
sub
addr16
mov
inc
std
rcll
jbe
add
jb
imul
std
ret
xchg
adc
stos
je
sbb
sbbb
aad
inc
out
and
icebp
mov
scas
cmp
inc
shll
enter
pop
pop
js
pop
sub
roll
addb
jp
mov
dec
rcrb
xor
add
mov
shll
bound
mov
lock
lods
roll
jne
pop
lea
addl
add
mov
xchg
xor
out
add
sub
dec
cli
and
cmp
sbb
xchg
jae
test
or
xchg
shrl
mov
xchg
and
lcall
jp
mov
inc
xchg
test
mov
mov
or
stos
sub
lea
or
sub
xor
jae
dec
xor
push
ss
call
orb
mov
mov
cmpsl
cltd
sbb
sbb
dec
imul
cmp
add
pop
add
lods
dec
add
pop
rcrl
mov
adc
ja
roll
int3
rcrl
sbb
fwait
je
xchg
test
cmp
movsb
imul
and
inc
in
pushw
repz
mov
arpl
movsl
lods
or
or
mov
mov
sub
push
add
jne
test
and
lret
fdivl
popa
mov
out
or
xorb
rclb
roll
pop
fistl
fs
mov
sbb
mov
cli
ror
dec
clc
mov
inc
inc
dec
cmp
or
outsb
or
aas
addr16
jbe
jo
int3
inc
das
xor
imul
insb
mov
add
lds
movsb
test
aas
movsl
dec
aaa
sbb
insb
orb
xchg
aad
xlat
cmp
sahf
dec
xorl
gs
push
xchg
icebp
and
adc
cmc
push
loope
movsb
sub
fdivrp
cltd
fidivrs
in
cld
mov
imul
imul
repnz
test
stos
mov
add
sub
inc
out
loope
sti
xchg
xor
xor
test
push
ss
xchg
mov
mov
lret
lahf
bound
adcl
xchg
cmp
pop
cmp
lods
aaa
repnz
test
jo
hlt
rcrb
loop
pop
mov
jecxz
test
imul
sbb
dec
adc
les
cli
stos
dec
mov
bound
adc
lret
dec
mov
sub
lahf
iret
xor
or
mov
in
das
movsl
jmp
sbb
out
out
jae
inc
push
rclb
push
in
mov
ror
mov
decl
int3
push
mov
push
lock
mov
sub
adc
pop
pushf
sub
sahf
into
mov
mov
out
lds
push
shll
jae
xchg
dec
xor
cs
sub
cwtl
aaa
jae
cmp
xchg
jge
xchg
adc
fiadds
pop
push
aam
or
pusha
rorb
shlb
loopne
ds
lret
inc
adcb
insl
xchg
add
cmp
cmovp
push
sarb
cmp
cmp
sbb
out
fistpl
and
inc
adc
dec
loopne
or
mov
mul
inc
hlt
dec
push
pop
inc
clc
arpl
jle
add
fsubrs
mov
push
push
add
scas
mov
xchg
push
sbb
mov
mov
inc
push
xchg
movsb
xchg
fisttpl
and
mov
push
push
int3
js
xor
test
pop
ja
in
cmp
sub
outsb
jp
push
out
sbb
inc
outsb
in
cmpsl
jne
outsb
cmp
xchg
mov
call
jge
mov
lahf
cli
or
arpl
fldpi
ret
aas
mov
leave
mov
roll
push
leave
mov
notl
cmpsl
hlt
dec
test
ficomps
lds
sub
repnz
aad
pusha
fsts
lret
aam
add
sbb
jg
aas
arpl
cltd
fimull
xchg
fwait
mov
mov
jp
shl
xor
out
lcall
push
xchg
into
adc
dec
pop
inc
or
pop
xor
mov
aaa
mov
add
out
jno
mov
inc
shlb
or
iret
dec
jle
xchg
shll
cmp
dec
inc
mov
sub
jbe
push
xchg
and
rolb
pusha
lcall
jno
out
jl
mov
add
lods
loope
or
ja
bound
sarb
jge
lea
ret
mov
fcmovnu
scas
push
lret
ds
xchg
xlat
jno
jge
vfrczsd
xor
roll
das
int
push
mov
es
mov
mov
and
loopne
inc
jl
dec
cmpsl
mov
fwait
scas
fwait
mov
mov
nop
sarl
ja
data16
and
hlt
push
mov
push
cmp
aaa
in
inc
sub
xor
fildll
insl
dec
push
out
cmc
in
xchg
push
jno
push
sarl
mov
push
in
addr16
je
enter
xchg
ror
fmul
xlat
inc
jbe
hlt
ss
lret
into
popf
insb
cmp
jae
push
mov
mov
mull
mov
jae
sbb
jg
cmp
mov
mov
enter
adc
gs
mov
das
jbe
add
xor
mov
cli
sub
mov
shlb
repnz
sub
ds
cmpl
lcall
f2xm1
mov
mov
push
roll
cld
inc
shlb
or
mov
out
inc
test
lcall
mov
sub
sub
lock
mov
mov
out
xchg
sarb
xchg
test
scas
sbb
sahf
repz
and
nop
shlb
test
int
pop
sub
add
jmp
cwtl
inc
in
adc
cltd
sbb
or
pop
gs
shll
lods
aam
movsl
jae
in
cmp
mov
mov
pop
sub
mov
dec
dec
mov
cwtl
ror
pop
xchg
push
scas
je
and
imull
xchg
movl
cmp
xchg
repz
xchg
movsb
cmp
fwait
je
xor
push
rclb
jno
inc
fadds
dec
push
mov
sub
daa
adc
adc
aad
cmpsb
repnz
sbb
add
adc
testl
pop
xor
cmp
sub
pop
sbb
or
xchg
outsb
cltd
lods
mov
aaa
and
adc
fbld
stc
repnz
mov
cmp
push
nop
inc
std
sbb
adc
push
pop
pop
ret
roll
fnstsw
cli
adc
hlt
pop
lret
pop
fistpl
xor
shl
ret
test
mov
fadds
shlb
fcompl
addr16
test
outsb
mov
push
stc
jle
xlat
dec
out
inc
and
clc
mov
sbb
test
aad
pop
fnstenv
lahf
dec
jl
pop
in
cwtl
inc
or
popa
mov
mov
jl
sbb
mov
jge
leave
adc
xor
xor
or
sbb
out
fidivl
mov
cmp
mov
add
push
rcll
andl
dec
lret
push
jge
or
pop
push
add
jge
pop
negl
sahf
mov
inc
js
enter
sbb
jo
add
cmp
iret
sbb
push
ljmp
outsb
pop
ja
inc
pusha
lret
outsb
ja
xchg
popa
les
loope
movsl
lcall
add
sub
sub
mov
jb
lods
add
or
lret
push
enter
leave
or
fyl2x
jno
and
in
fs
sub
out
mov
sarb
mov
int3
adc
pop
sbb
dec
sub
lcall
inc
sub
mov
mov
aad
cmp
lock
ficomps
arpl
push
mov
insl
jg
lds
es
cmp
repnz
mov
dec
je
les
loop
pop
jne
int3
es
inc
rcrl
js
test
stc
test
xor
rcr
into
inc
sub
hlt
pusha
pop
inc
mov
jno
ljmp
mov
sbb
gs
ror
jl
push
inc
jo
je
sti
adc
cmp
jne
xchg
mov
push
aaa
jl
fcmovb
mov
cmc
inc
cltd
push
mov
jae
xchg
es
in
lret
out
repnz
adc
pop
sbb
ljmp
cltd
cltd
lret
loopne
insb
inc
mov
mov
ret
inc
fndisi(8087
jns
adc
jo
shlb
test
sbb
mov
outsb
mov
ficomps
jg
fstps
call
push
mov
out
cs
in
das
add
pushf
repz
into
imul
out
ja
mov
pop
or
out
push
cwtl
jecxz
mov
push
pop
fsubrs
fbld
mov
jle
leave
cld
mov
mov
fs
lahf
and
push
js
fldcw
dec
dec
fs
pop
iret
sbb
subl
int3
fstpl
gs
cmp
movsl
mov
push
gs
lods
dec
inc
dec
xor
clc
bound
sahf
pop
adc
and
cwtl
jl
push
adc
lret
movsl
mov
xchg
sub
adc
pop
jne
xchg
xchg
xchg
cmp
mov
fisttpl
and
and
shrd
cs
xchg
cmp
pop
inc
xchg
fwait
and
xchg
sarl
sbb
xorl
imul
mov
outsb
mov
inc
outsb
popf
test
fisubl
xchg
icebp
clc
jb
mov
test
out
outsb
lods
adc
cmp
pop
out
repz
in
adc
aam
jb
mov
jg
mov
leave
aam
cmp
lcall
jg
in
sbbb
test
in
les
fcomp
fldt
xchg
pusha
fdivrl
pop
mov
push
js
mov
loop
or
das
inc
std
faddp
fwait
adc
mov
cmp
out
xchg
das
lcall
imul
lahf
push
push
push
jecxz
loope
dec
sbb
mov
fxch
imul
stos
popf
mov
add
pop
push
cmp
xor
int
push
jbe
mov
xor
pop
push
xchg
jecxz
cwtl
mov
dec
insl
jo
push
jecxz
test
repz
pop
in
mov
sahf
scas
mov
lock
rcl
gs
cli
aaa
push
or
sub
test
mov
shrb
lock
fdiv
push
inc
int
sahf
mov
push
das
mov
adc
rorb
mov
and
ret
or
cmp
lret
pushf
pop
mov
xor
mov
jge
mov
sub
adc
in
cmp
dec
loop
pop
jge
icebp
test
mov
test
mov
fidivrs
ficoms
nop
push
loopne
cwtl
and
les
cli
adc
lods
repnz
sbb
dec
mov
inc
in
dec
addl
outsl
jo
jae,pn
jnp
pusha
jnp
inc
fnstcw
ljmp
ret
inc
jp
add
std
out
sub
inc
aaa
jno
jno
jno
hlt
jbe
icebp
cmp
or
scas
mov
fisubl
adc
sub
xor
in
adc
inc
cli
sub
push
jg
pop
pop
push
push
stos
mulb
inc
jns
dec
add
cmp
insb
test
mov
mov
push
jge
pushf
and
add
xor
movsl
pop
in
das
imul
pop
scas
adc
adc
in
mov
sub
dec
ds
push
call
scas
cmpsl
xchg
scas
dec
inc
and
outsl
mov
dec
mov
pop
and
ss
and
das
dec
adc
sub
loop
xchg
lret
xchg
or
lret
icebp
test
mov
fdivs
push
mov
push
imul
into
andb
lcall
imul
ficoml
in
mov
cmp
addr16
popa
push
aaa
repnz
psrlq
xchg
ljmp
dec
mov
aad
dec
inc
xor
mov
pop
mov
sbb
fisubrl
lcall
mov
jg
jle
adc
xor
mov
fisttpll
test
jle
sbb
ss
ror
inc
mov
scas
xchg
or
xor
or
pusha
add
leave
cmp
jp
nop
pop
addr16
shrb
push
xor
mov
mov
and
dec
xchg
mov
int3
repnz
sti
shr
pcmpeqd
lahf
mov
sub
xchg
fdivrp
clc
into
stos
add
sbb
outsl
bound
aaa
pushf
xchg
insl
cmp
cwtl
sub
xchg
mov
mov
test
cmp
mov
insl
lods
adc
and
mov
loop
out
cmp
cmc
pusha
xor
push
pop
adc
adc
aam
cltd
mov
xchg
push
xchg
sub
lret
cwtl
int
and
in
mov
mov
push
push
call
and
hlt
lock
ret
rcll
mov
lret
push
xchg
add
sub
ja
add
xchg
jmp
imul
js
xchg
ja
xchg
orb
dec
push
mov
push
add
cmp
mov
xor
test
cmc
inc
pop
gs
and
jb
and
or
xchg
and
icebp
lret
lods
xchg
mov
mov
jge
pop
sub
popa
arpl
pop
imul
jno
xor
fwait
jae
sbb
adc
push
repnz
pop
js
repnz
aad
mov
fwait
jle
sbbl
insb
push
push
add
fwait
jge
movl
xchg
cmp
jg
lds
xchg
mov
and
push
jge
cltd
test
push
fisttpl
xor
inc
or
adc
int3
enter
aad
lods
std
or
push
daa
fs
cs
cmp
lahf
out
cltd
idivl
nop
push
stc
les
js
enter
xchg
sub
lcall
mov
mov
loopne
ds
cltd
push
jb
or
shlb
pop
jl
test
dec
loopne
and
add
cs
daa
xchg
xchg
cmp
pop
int
stos
jbe
movlps
das
dec
jmp
shrb
sbb
xchg
nop
push
addr16
cli
push
and
inc
inc
and
scas
mov
or
and
gs
and
push
shl
repnz
jmp
sbb
shrb
jae
jecxz
addl
dec
stc
mov
mov
mov
sbb
and
fbstp
sbb
shrb
sbb
ss
imul
add
call
imul
sub
mov
jmp
mov
addb
inc
cmp
xchg
push
push
cmp
sbb
xchg
dec
jl
inc
test
mov
push
push
or
orl
int
pop
sbb
hlt
das
push
out
and
mov
push
gs
out
jae
xchg
outsl
fsubrl
out
or
lret
mov
leave
addb
cmpsb
addr16
fwait
sbb
in
ja
and
pop
mov
mov
cmc
fld
call
lret
int
jle
adc
sbb
xor
js
cwtl
arpl
jge
sarl
clc
test
das
xlat
jmp
imul
addr16
xlat
and
cmp
push
test
jo
dec
pop
or
sbb
pop
scas
addr16
lea
xor
movl
rcll
push
dec
enter
ljmp
and
and
fistpll
jge
and
aam
inc
shrl
cmpsl
movsl
cmp
aad
int3
mov
std
mov
mov
mov
fwait
jle
adc
xorl
hlt
cmpsb
out
test
sub
push
sbb
mulb
lret
or
add
movb
iret
in
testl
cmpsb
jg
insl
ror
mov
xor
into
mov
dec
pushf
or
sbbb
lcall
les
fwait
cmpsl
jle
fnstenv
jg
or
cmpsb
pushf
popf
mov
dec
cmpsl
mov
mov
fmul
ret
dec
jno
push
jle
mov
xor
movl
mov
xchg
sub
pop
les
sbb
mov
out
sti
adc
pusha
scas
xchg
or
test
add
into
fs
sbb
xor
pop
outsb
push
push
pop
add
insl
mov
inc
and
lcall
adc
mov
and
insb
fwait
push
test
jne
mov
lret
hlt
ficoml
in
inc
inc
pop
jns
xchg
int
xchg
push
inc
fcmovnb
cli
pop
adc
sahf
mov
les
cmc
out
push
mov
cmp
daa
aaa
pop
lds
and
lods
dec
pop
mov
dec
cmp
dec
mov
loop
daa
stos
mov
and
pop
ret
dec
bound
adc
pop
hlt
push
hlt
sub
push
cmpsl
sub
and
mov
lea
pop
outsb
mov
and
xor
ret
cmp
add
out
repnz
jge
imul
xor
insb
iret
addb
fs
jp
enter
loope
jg
je
inc
addr16
jmp
ss
sbb
inc
shr
fldenv
fldl
jno
mov
test
insb
mov
xor
cmp
push
popf
cmpsb
or
dec
test
out
sbb
pushw
out
xor
pop
xchg
add
mov
jbe
lret
mov
cmp
ds
pop
hlt
and
add
pop
inc
xlat
lods
push
popf
xor
mov
clc
jb
sbb
or
push
out
mov
fiaddl
fincstp
cmp
in
loope
pop
inc
ss
cmpsb
rcl
adc
fiadds
mov
notb
mov
pusha
push
stos
jg
pop
sbb
repz
repnz
out
push
xor
pusha
leave
or
push
lock
lods
jecxz
test
jae
xor
lea
lret
pop
repz
test
pop
push
dec
mov
cmp
mov
jb
mov
dec
pop
test
jae
add
dec
jmp
iret
bound
mov
mov
popf
mov
adc
cli
jecxz
jne
lret
das
xlat
les
push
popa
lods
pop
stos
enter
inc
pop
cmp
nop
jns
test
adc
pop
push
sub
push
add
cmp
sbb
dec
mov
insb
ljmp
cmp
sbbl
push
jnp
cmp
cwtl
pop
pop
inc
mov
imul
or
cmpsl
inc
adc
ja
inc
out
jl
cmp
dec
inc
mov
mov
pop
je
push
lcall
cld
mov
sbb
dec
fdivs
rol
mov
loope
sbb
push
cmp
xchg
arpl
out
mov
mov
shl
cmpsb
mov
jae
js
rclb
mov
mov
push
lods
pop
mov
fimull
adc
cltd
ljmp
jg
frstor
jo
pop
ss
out
jbe
push
lcall
and
scas
pop
out
dec
dec
inc
out
pop
mov
ret
and
int
call
push
icebp
pop
adc
push
fucomp
add
aad
lock
mov
cwtl
xchg
jle
jb
push
subl
push
adc
repnz
mov
es
mov
mov
push
mov
enter
jg
lret
xchg
jb
inc
jp
in
mov
adc
add
dec
lcall
pop
sbb
aaa
insb
add
loop
je
pop
daa
lret
xor
inc
push
jb
cmpsl
adc
xor
rclb
loop
adc
sbb
sbb
int
jl
or
aas
andb
xor
nop
pop
roll
push
add
jle
sub
sub
mov
dec
push
aas
sub
adc
mov
push
das
jecxz
cmp
and
mov
std
cmp
push
cli
or
leave
movsl
lods
mov
ret
jno
adcl
mov
dec
push
adc
scas
rcll
fsubrl
adcb
mov
int3
sete
adc
and
jo
push
popa
lock
ret
outsb
mov
mov
mov
pop
and
arpl
aaa
fistl
mov
repz
subb
mov
xor
pop
jp
xor
xor
sbb
cmpsl
cwtl
mov
jmp
sub
sahf
jnp
inc
fmuls
gs
mov
movsl
push
sbb
gs
jge
xor
adc
in
inc
push
orl
adc
stos
in
dec
mov
movsb
cmc
sub
out
fidivl
fldenv
push
jo
sub
repz
cmpl
repnz
ljmp
ljmp
cld
xchg
sbb
lahf
mov
jns
push
cmp
cmp
stos
je
dec
inc
xor
gs
xor
pop
lret
popf
cmp
mov
sahf
adcb
mov
push
and
xchg
nop
jmp
call
mov
lret
adc
shrl
out
scas
mov
pop
lahf
jecxz
sbb
rclb
lds
push
add
xchg
adc
and
hlt
call
lds
in
mov
mov
outsl
mov
jbe
xchg
mov
cmpsb
xchg
sbb
xchg
cmp
dec
jmp
cmp
xlat
push
and
popa
scas
cli
test
or
inc
sbb
mov
cmp
mov
jns
sbbb
lds
imul
inc
xor
ss
adc
aaa
shl
mov
imul
mov
movsl
rcl
rcrl
popa
xor
jge
xchg
adc
bnd
arpl
jno
inc
test
xchg
mov
cmp
in
cld
xchg
push
dec
scas
xor
sub
jp
mov
insl
daa
xchg
lret
loop
mov
sbbl
pop
pop
cmp
leave
xor
push
cmp
push
dec
sbb
fcoms
imul
call
inc
ret
sti
cmp
cmp
test
pusha
xor
je
sub
daa
and
dec
push
std
fwait
dec
call
int
jns
xor
push
jmp
inc
cmp
cmpsl
pop
cli
fstpl
adc
mov
adc
dec
mov
int3
cmpsb
push
lods
cmpsb
mov
loope
pop
leave
push
pop
xchg
add
jne
scas
sar
push
xchg
dec
mov
pop
div
cmp
pop
call
scas
iret
push
jne
xchg
xor
adc
adc
push
pop
dec
and
mov
sbb
push
loopne
xchg
iret
and
stos
mov
add
xor
ja
lcall
jae
cmp
mov
repz
cmp
jb
arpl
mov
data16
scas
sub
sbb
sbb
fwait
leave
loop
lcall
pop
lods
jp
mov
gs
imul
fucomp
mov
jae
xchg
xchg
mov
sbb
cwtl
inc
mov
das
mov
lahf
lahf
adc
cmpsb
jmp
xchg
jl
mov
pop
and
push
scas
inc
enter
sub
inc
lcall
cmp
jns
aaa
push
das
xchg
mov
sub
repnz
push
mov
mov
or
dec
stos
mov
add
loopne
cs
out
adc
lcall
pop
and
mov
cmp
popf
negl
adc
push
or
mov
aam
and
mov
lret
or
cmpsb
sub
je
cmpsl
test
scas
call
mov
scas
jne
int
sahf
xor
fdivl
mov
mov
es
lock
icebp
sbb
mov
ja
fisttpl
push
mov
dec
fwait
sti
and
xor
push
mov
mov
mov
lock
mov
leave
outsl
cmp
loopne
sub
icebp
shr
stos
gs
inc
lret
mov
stos
clc
std
jg
jo
adc
sahf
loope
sti
adc
pop
and
test
sub
push
inc
mov
cmp
rcl
shl
mov
xchg
ss
or
shlb
pop
xchg
fidivs
cwtl
in
clc
shlb
mov
xchg
and
in
jbe
fisubrs
cwtl
pop
enter
adc
xchg
push
cld
negb
mov
jp
inc
and
sub
inc
mov
dec
xlat
shr
xor
addr16
stos
aad
and
test
cmpb
pushf
sahf
popf
scas
mov
cmp
aaa
inc
sub
and
xor
add
sbb
js
testb
jne
mov
jp
cmp
gs
movsl
jb
ret
xchg
add
mov
mov
daa
cmp
adc
xor
push
mov
pop
pop
push
cmpsl
std
popf
call
inc
sbb
adc
jle
jge
push
pop
jbe
pop
test
mov
mov
ret
adc
xor
js
ljmp
sub
inc
inc
movsl
sbb
insb
insl
mov
cli
jns
xchg
neg
pop
mov
cmc
lods
ja
gs
adc
call
enter
mov
pop
mov
in
mov
mov
push
mov
xor
mov
jne
addr16
inc
shll
add
pop
inc
in
mov
cmp
xor
pushl
inc
popf
movsb
rolb
sub
add
mov
and
mov
mov
jl
mov
push
inc
loope
mov
stos
shlb
push
jle
xor
int
outsl
mov
push
adc
inc
movsb
inc
or
jns
cmp
xchg
mov
add
adc
fcomi
fisttpll
inc
in
push
jb
in
int
pop
fstps
mov
jns
mov
mov
jecxz
orb
imull
dec
rcll
cld
xchg
pop
pop
dec
mov
mov
pop
and
into
inc
mov
das
fcoml
mov
jne
xlat
lods
lock
les
add
test
jnp
pop
dec
sub
add
dec
add
push
repz
ret
loop
ret
push
inc
mov
loope
add
mov
jecxz
inc
mov
jo
dec
cmpsb
ljmp
or
jo
cmp
mov
add
sti
xor
dec
lcall
inc
pop
sti
push
mov
cmp
aad
int
pop
ljmp
cmpps
js
push
bswap
jl
std
xor
lcall
into
jecxz
aad
aam
or
mov
or
or
push
and
fcompl
gs
pop
inc
aam
addr16
push
inc
in
mov
xchg
adc
sbbb
fisubl
push
xchg
fwait
mov
mov
mov
nop
std
jo
xor
lret
or
shl
sti
out
aaa
insl
mov
push
inc
popf
pavgw
fst
inc
outsb
cwtl
jne
shrb
jne
mov
cmc
stc
add
jnp
outsb
std
filds
mov
shl
pop
add
add
call
push
arpl
push
cli
clc
fdiv
mov
add
lds
clc
lret
daa
or
xchg
les
push
aad
cmp
aaa
cmp
out
inc
xlat
comiss
int3
iret
out
cltd
pop
mov
mov
out
mov
add
xchg
insl
xchg
mov
xchg
jecxz
mov
lods
lock
ret
sub
fildll
mov
mov
popa
xchg
and
cmp
cmp
mov
cmpb
stos
pop
mov
std
in
call
and
ficompl
jo
icebp
fidivs
or
lret
sarl
scas
pop
sub
xchg
fsubrp
bextr
cmp
imul
pop
iret
and
aaa
sbb
cmpsl
lcall
push
and
adc
int
sub
sub
mov
pop
mov
add
mov
lcall
mov
adc
adc
mov
sbb
int3
pop
outsb
ds
dec
and
lods
ljmp
iret
push
loope
adc
xor
dec
xor
sbb
pusha
sbb
cmp
fdivrl
out
jg
xchg
int3
mov
mov
mov
clc
fcoms
dec
and
or
je
add
xlat
fsubrs
push
test
or
mov
fstpt
sbb
data16
pushf
cmp
jb
roll
das
lcall
je
ret
cmp
push
pop
in
lahf
push
jne
inc
fdivrl
jp
xor
in
dec
std
les
mov
cli
xor
leave
xchg
or
lods
shlb
rol
imul
sbbb
lods
or
or
and
movsl
cmpsb
mov
jb,pt
movsb
bswap
stos
in
pop
push
inc
mov
mov
in
in
mov
xchg
dec
fucomip
xchg
or
scas
fsub
adc
repz
push
push
jle
add
repz
and
jno
xchg
dec
dec
lret
scas
ja
and
add
in
lock
sub
push
mov
data16
push
inc
xor
in
fcoms
xchg
ds
es
lahf
js
cmp
sub
les
rolb
fistpl
ja
mov
mov
clc
dec
xorb
and
jmp
arpl
in
xor
inc
aam
mov
popa
and
xchg
fwait
js
inc
lcall
add
scas
js
sub
cs
shll
or
mov
out
insb
sub
xor
addl
out
int3
mov
push
out
iret
xchg
lods
shll
ret
cli
sub
mov
addr16
and
fwait
sahf
lea
pop
sbb
in
outsb
jp
xchg
aaa
inc
jno
mov
add
in
ljmp
loopne
popa
cmp
aad
aas
test
xchg
mov
or
inc
cmp
xchg
dec
stos
enter
call
je
and
iret
jmp
out
xor
adc
jecxz
adc
jns
fiaddl
loop
sbb
std
sub
lds
sub
stos
cmc
add
mov
adc
sahf
adc
mov
sbb
sahf
repz
adc
or
dec
add
mov
lea
and
mov
inc
sarl
or
shlb
fnstsw
aas
push
popa
test
test
pop
push
cmpsb
sahf
mov
orb
mov
sub
sbb
nop
adc
mov
in
add
mov
mov
inc
jmp
js
push
sbb
sbb
cmpsb
sbb
sti
enter
lods
mov
sub
pop
pop
and
pop
adc
in
cmp
loopne
and
lock
lds
inc
ja
fstpt
ffree
div
or
push
mov
bnd
je
ret
addl
pop
mov
movsb
rclb
dec
cmpsb
ss
ret
mov
pushf
sub
adc
loopne
aas
addb
push
lods
push
enter
arpl
test
mov
sbb
ret
std
in
repz
repz
in
test
lods
dec
aad
nop
mov
dec
dec
xor
out
les
sbb
xor
cmp
rol
test
lahf
sub
or
mov
daa
jp
stos
mov
jle
xor
inc
out
mov
insb
add
jo
daa
mov
insl
push
and
int3
push
push
rcrl
and
adc
fdiv
movsb
je
sahf
or
inc
cmp
xor
fmull
ret
jle
adc
imul
mov
mov
imul
mov
hlt
mov
or
pop
insl
movsl
and
imul
stos
push
cmp
cmc
orl
call
cs
je
dec
sbb
filds
cmp
popl
out
in
aam
or
or
sub
mov
out
jne
call
jecxz
sub
cmpsb
into
repz
stos
jle
fdivl
test
jo
jno
jno
push
add
jnp
fiadds
aad
cmpsl
mov
xchg
jmp
inc
es
ja
jle
mov
jl
aad
sbb
addr16
dec
mov
repnz
mov
xchg
or
imul
jnp
push
pushl
mov
loop
cmp
stos
xchg
add
add
test
mov
dec
ljmp
fisubrl
push
xor
rolb
out
lods
mov
in
ja
iret
jecxz
leave
pop
rcl
pop
mov
ret
cmp
into
ss
jg
or
jge
movsb
es
roll
and
addr16
xor
pushw
xor
cmp
and
arpl
xchg
push
adc
js
or
dec
and
shrl
xchg
enter
out
adc
mov
inc
xchg
nop
in
lahf
repz
ret
and
sbb
jae
jg
test
es
gs
stos
cmpsl
pushf
inc
out
sub
stc
jmp
addr16
std
sti
lea
cmp
movsl
nop
in
adc
dec
cmp
sub
adc
shlb
jmp
scas
outsl
dec
or
sub
xor
mov
push
les
sbb
add
ror
ja
xor
or
jnp
dec
and
mov
ljmp
lock
testl
enterw
dec
adc
mov
addr16
je
inc
imul
and
cmc
push
push
adc
inc
add
sub
loope
into
inc
inc
cmp
push
jno
lods
dec
jb
enter
add
pushf
icebp
sub
adc
int
mov
jns
cmp
hlt
aad
push
sub
and
or
popf
xor
hlt
or
or
or
call
imulb
jle
cli
and
xor
push
out
pushf
cmp
sub
xor
imul
dec
xor
sub
dec
test
push
push
dec
xchg
imul
dec
jge
addr16
push
mov
xor
sub
sbb
sub
int
push
sub
fisubrs
ja
loop
test
fidivs
xlat
mov
int
shll
mov
test
into
and
mov
test
pop
aad
lods
push
dec
inc
and
xor
mov
loope
pop
lcall
sarb
dec
nop
jns
outsl
ss
mov
scas
fmuls
mov
mov
push
out
xchg
and
jge
push
mov
cmc
cs
xchg
loop
mov
mov
jo
test
loop
roll
inc
or
push
in
mov
pop
imul
ret
xchg
adc
shll
push
mov
sub
push
sbb
loop
cmp
mov
scas
cmc
mov
dec
fcmovb
outsb
mov
sub
mov
outsb
shll
ret
andb
sbb
xchg
movsb
rcrb
cmpsb
ja
mov
pop
test
dec
js
shlb
adcl
xchg
mov
xorl
icebp
dec
mov
xor
push
loop
xor
mov
dec
pop
in
int3
out
ja
loope
cmp
in
jae
and
addr16
and
sbb
mov
arpl
insl
xor
fdivp
fcmovnu
out
and
sub
out
test
xchg
dec
mov
adc
cld
push
cmp
mov
dec
clc
mov
out
orl
rcr
jae
sub
cmp
mov
mov
xor
stos
popa
mov
xor
std
xchg
adc
mov
inc
and
test
jae
cs
fwait
enter
mov
mov
add
pop
pop
out
lods
clc
daa
aad
rorl
pop
inc
bnd
movsb
loopne
sub
lds
fdivs
adc
mov
adc
filds
je
stos
inc
xchg
ror
dec
mov
aam
cmp
mov
xchg
mov
or
daa
ss
stos
dec
mov
outsl
addr16
mov
pop
pop
fistpll
xchg
inc
or
js
addr16
dec
scas
les
mov
push
dec
fsubrs
xor
mov
icebp
aam
mov
sbb
sahf
sub
ret
adc
mov
dec
loopne
cli
dec
xor
xchg
pop
cs
out
negb
fidivrs
rolb
fnstsw
mov
sbb
mov
call
jle
inc
dec
xchg
cmp
dec
repz
mov
lea
mov
aam
mov
stos
pop
addr16
xchg
sub
cmpsb
lahf
out
or
insb
inc
xchg
mov
xlat
fmuls
or
cmp
inc
and
out
push
mov
inc
jecxz
lock
push
xchg
jecxz
fcomps
sahf
psubsb
mov
inc
insl
inc
inc
sub
pop
jl
mov
dec
mov
add
addb
push
out
or
repz
stos
je
mov
arpl
mov
xor
xchg
add
aas
jbe
push
pop
push
push
jne
sbb
jb
add
lods
pop
cmpsl
mov
sbb
jmp
inc
scas
scas
mov
xchg
lods
inc
sbb
shrb
adc
pop
jecxz
push
nop
mov
mov
push
mov
xchg
mov
in
outsl
cli
les
sbb
pop
sahf
sbbb
xor
mov
pop
ret
mov
clc
stos
push
push
mov
xchg
adc
push
clc
bnd
push
fmull
jae
cmp
les
add
sbb
ds
rorb
in
cmpsb
cmc
add
bound
inc
nop
cmp
imul
mov
in
pop
lret
stos
imul
xchg
sbb
in
push
push
nop
ret
inc
jl
jns
shll
inc
in
push
and
movsb
mov
ret
sub
push
cmpsb
mov
or
inc
es
mov
dec
mov
cltd
repz
dec
loopne
cmpsb
adc
mov
adc
xorb
jle
hlt
popl
xor
pop
stc
das
push
out
icebp
add
jmp
into
mov
jge
gs
push
push
or
gs
or
or
into
test
sub
pop
cmp
dec
pop
out
add
in
mov
cmp
je
push
arpl
fucom
push
sub
insb
inc
test
push
jo
aaa
inc
sbb
mov
pop
add
ja
inc
or
push
sbb
sub
pop
pop
mov
push
xchg
shll
and
lret
lods
mov
pop
daa
xlat
xadd
add
ljmp
daa
roll
mov
or
and
pop
xchg
sub
das
mov
data16
test
std
std
xchg
mov
push
xchg
lret
or
repz
pop
adc
add
icebp
sub
sbb
push
cltd
int
inc
xor
push
mov
sub
clc
out
or
or
out
insb
sbb
push
movsl
fnsave
mov
repz
xchg
lods
mov
mov
lcall
or
ss
jae
out
mov
dec
int
je
sbb
xor
daa
dec
sub
mov
and
lcall
add
mov
inc
in
into
and
dec
or
add
loop
aas
cmc
inc
nop
imul
das
sub
dec
adc
shl
cmpsb
or
cmp
int
andb
push
ret
dec
out
bound
jle
std
mov
repnz
xor
xchg
jne
fidivrs
adc
or
mov
jge
arpl
cld
and
aad
stos
sub
and
cmpsl
daa
cwtl
jns
mov
shll
inc
sbb
adc
fistpl
mov
outsl
pusha
sbb
movsl
incb
adc
pop
loopne
cli
sbb
loope
fincstp
xlat
fisubrl
test
mov
mov
pop
mov
rclb
enter
and
popf
inc
loope
cltd
inc
xor
jnp
sbb
cmp
xchg
fwait
xor
scas
cmp
fisubrs
inc
jp
seta
in
les
sub
sbb
inc
dec
lea
xchg
pop
mov
je
in
xchg
mov
les
push
outsb
call
xor
xchg
fildll
imul
mov
jns
aas
fildl
dec
out
sbb
or
lods
push
les
hlt
xchg
rcll
push
inc
pop
pusha
cltd
stos
cmp
mov
enter
mov
mov
shl
jo
pop
or
jno
cmp
mov
xchg
sti
loope
xchg
cld
mov
mov
aaa
xorb
out
and
or
clc
xor
mov
sub
data16
cmp
loope
and
mov
loop
movsb
loopne
cmp
jbe
pop
std
pop
call
mov
dec
xor
adc
cli
cmp
pop
fnstenv
mov
ss
std
fimull
sub
sbb
aaa
mov
mov
in
popa
ds
xor
test
pop
cli
or
dec
adc
repnz
jne
sub
in
mov
sub
jb
jmp
outsb
sub
inc
lret
in
stos
lret
ret
pushf
sub
inc
push
loop
jmp
jne
daa
loop
or
pop
repnz
or
mov
cmp
inc
das
popa
or
or
repz
call
jle
add
adc
cmp
or
mov
mov
xchg
lcall
or
into
xor
popa
imul
lock
lcall
and
das
dec
jnp
in
movsb
sub
mov
cmp
add
mov
les
and
or
int
add
call
sub
cmpsl
in
mov
dec
push
ret
jbe
out
xor
sbb
insb
popfw
lods
mov
inc
pusha
icebp
xor
or
push
repnz
std
adc
push
jo
leave
mov
ja
cltd
sbb
scas
hlt
ror
push
xchg
pop
mov
push
stos
xor
aam
inc
push
loopne
ret
jecxz
scas
inc
sar
dec
jo
push
sub
inc
loope
push
sarb
and
lret
das
lahf
or
jg
rcrb
xor
mov
fs
sub
popa
call
int3
mov
sbb
or
bound
je
nop
push
mov
in
xchg
push
pushf
adc
fsubrl
adc
or
pop
sahf
negb
sub
fistl
mov
xchg
aas
loope
in
fisttpll
test
in
addr16
aaa
orl
mov
rcr
jecxz
popa
and
dec
hlt
xor
sbb
mov
mov
jo
sahf
and
pop
mov
add
div
cli
je
imul
sbb
xchg
addr16
xchg
stos
shl
dec
mov
mov
pinsrw
repz
repnz
xor
dec
aas
js
es
sbb
sub
and
aaa
lret
jp
fdiv
lods
push
adc
xor
mov
mov
jae
lret
cwtl
cld
icebp
jl
shlb
add
loope
es
jp
pop
outsb
or
push
rorb
push
ret
pushf
adc
cmp
inc
add
ja
add
pop
mov
sub
adc
mov
sti
fcoms
pop
or
and
inc
pop
andb
sbb
xor
jp
shlb
fsubl
test
push
ffree
pushf
and
inc
dec
sti
push
icebp
dec
sti
fwait
jae
rcr
cltd
mov
xchg
repz
push
sub
pop
mov
cld
add
into
inc
and
lds
and
jge
sub
push
cs
pop
xchg
loopne
mov
sti
fadd
lods
cs
in
addl
lods
repz
xchg
jbe
xchg
nop
sbbb
stos
loopne
or
shl
out
fisubs
test
dec
mov
inc
repz
mov
adc
shrl
addb
mov
pop
pmullw
orl
jb
mov
jge
cmp
xchg
push
ror
and
xchg
das
add
lcall
sbbb
ljmp
cwtl
arpl
jns
xor
test
fwait
dec
lahf
call
push
popa
jnp
inc
shl
or
sub
imul
lret
lea
lea
inc
mov
dec
cmp
push
mov
jp
sahf
inc
sbb
inc
lcall
cmp
out
pop
scas
stc
shlb
push
rcrl
fucomp
inc
test
popa
call
lret
fucomip
sbb
inc
push
mov
repz
sbb
mov
mov
int
push
xor
lds
sbb
cmp
dec
popa
stos
in
or
pop
mov
pop
mov
test
icebp
mov
lcall
sbb
mov
mov
out
add
mov
push
inc
ja
push
iret
add
addr16
push
dec
push
adc
dec
lock
call
out
xor
jo
xor
xchg
inc
mov
fwait
mov
sti
xchg
je
out
test
cltd
jle
xor
xor
xor
iret
push
jle
mov
sahf
sahf
adc
pop
xor
push
iret
and
movsl
dec
jb
pop
pop
add
aad
push
pop
jmp
aas
sbb
pop
xchg
ss
sbb
lret
repnz
push
push
xchg
hlt
push
xor
pop
xor
negb
mov
adc
xorb
idivb
pushf
imul
ja
fnstcw
data16
mov
ja
jle
xor
lcall
or
mov
imul
fcomps
xorb
cmp
and
pop
jl
imul
cmpsl
lock
movsl
jne
out
mov
imul
lods
xor
dec
pop
and
test
and
gs
sbb
mov
call
xchg
sub
std
adc
stos
fcompl
pop
xor
adc
dec
fnstcw
fcoms
jle
fwait
pop
addr16
xor
adc
lds
lcall
lock
mov
and
jge
adc
imul
rorb
xchg
jmp
mov
mov
in
pop
mov
xor
aam
inc
outsl
ret
xchg
xor
sub
sbb
pop
rep
lret
test
sbb
push
dec
pop
repz
add
add
xchg
or
stos
fucomi
add
mov
mov
adc
mov
ljmp
or
mov
lcall
sub
xchg
imulb
ss
sub
idivl
mov
ds
mov
adc
in
jg
aaa
stc
enter
arpl
pop
jg
cmp
jle
jle
push
add
outsl
lret
inc
sbb
jmp
xchg
push
cmp
lods
lods
or
push
ljmp
lret
popf
ja
and
cmp
push
gs
cmp
pop
add
mov
xor
push
xor
fs
clc
imul
push
inc
push
lret
jb
repnz
loopne
jbe
xchg
or
jg
add
mov
mov
and
sbb
mov
pop
in
adc
std
lret
das
mov
jbe
lret
jp
jo
adc
pusha
pusha
add
jbe
xchg
dec
add
cmp
or
vcmppd
fimull
push
xor
dec
mov
and
jo
fsubs
mov
mov
cmp
mov
loop
jp
stos
ja
outsl
sti
jmp
mov
pop
add
push
xor
hlt
dec
pushf
cmpsb
xor
fsubr
jns
adc
popf
js
push
in
das
pop
incb
mov
jne
and
inc
sbb
sub
movsb
pushf
sub
sub
mov
cmp
xchg
and
pusha
xor
adcl
and
jl
daa
fadd
std
inc
lea
loopne
jmp
sbb
ds
dec
jns
jecxz
pop
push
mov
adc
nop
mov
sbb
fs
push
out
cmp
into
call
movntps
jmp
clc
fidivs
and
lret
inc
xlat
and
in
in
int3
push
ret
pop
hlt
xchg
adc
setns
push
gs
js
addr16
jb
mov
or
add
lea
xchg
cmpsb
sub
call
dec
test
stc
insl
adc
jmp
roll
or
add
lods
out
cmpl
mov
mov
in
rcr
mov
fdivl
sbb
enter
pop
leave
fisubrl
mov
or
aam
or
jg
shlb
scas
lretw
pop
lds
mov
add
es
mov
and
jbe
jp
adc
outsb
xorb
leave
mov
xchg
movl
js
in
cmp
jecxz
xlat
jnp
stc
test
jl
dec
mov
sbb
push
out
addr16
push
mov
push
and
clc
xor
in
mov
pop
ds
mov
add
in
vpsrad
push
cmp
out
stos
ds
lock
dec
mov
cwtl
test
jg
jno
mov
cmc
mov
mov
add
mov
xchg
adc
sbb
das
push
inc
in
and
xchg
aam
jno
and
imul
pop
adc
xchg
fsubl
mov
stos
testl
icebp
xchg
stc
inc
in
outsl
mov
cmpsb
cmp
repz
imul
sbb
rorl
xlat
mov
sbb
fwait
call
mov
dec
cwtl
pop
cli
push
fwait
loopne
nop
push
push
add
fcom
insb
cs
bound
cwtl
or
sbb
stos
and
dec
dec
pop
mov
dec
dec
scas
pop
sub
mov
int3
jno
inc
arpl
xchg
adc
xor
test
fisubrs
jo
out
xor
jae
out
xor
pop
std
cmc
sti
and
ljmp
jmp
ljmp
mov
icebp
das
push
sbb
dec
je
mov
jecxz
and
ss
xor
jae
incb
imul
popf
jl
or
jo
je
or
xor
lds
lock
inc
cmpl
inc
lods
push
and
sub
mov
push
mov
and
ss
pop
push
sbb
lods
and
mov
je
lret
fisubs
stos
ja
out
js
fdivrs
xchg
jno
mov
xchg
add
dec
mov
push
inc
pop
rcll
mov
jbe
xor
pop
pop
fs
stos
push
adc
add
scas
push
jo
iret
lea
out
loop
les
popa
aaa
dec
xor
clc
rorl
push
stc
dec
mov
cmp
ss
hlt
mov
cld
sahf
sub
repnz
cmp
lods
mov
adc
xor
aam
cli
repz
push
sbb
cli
sbb
pushf
xlat
test
orl
xor
scas
dec
out
and
pop
mov
movsb
cmp
je
rclb
ret
and
rcll
jae
lahf
xchg
cmpsl
adc
add
sub
das
mov
sbbb
rolb
adcl
mov
outsb
mov
sub
sub
or
les
out
push
les
mov
inc
push
dec
in
sbb
shl
push
into
add
mov
push
mov
out
popa
jecxz
jo
ret
adc
pop
gs
or
scas
rcll
push
lret
xor
pop
jne
pop
rcrb
shl
pop
lret
cmp
or
sbb
mov
daa
xchg
movsl
pop
adc
jle
js
push
push
sbbl
inc
outsb
adc
cwtl
jge
add
cli
mov
jl
adc
push
andl
xorl
sub
cmp
sub
sarb
insb
gs
xchg
xlat
pop
jns
std
xchg
ror
dec
pop
out
xchg
ljmp
jbe
shrl
pop
movsb
jecxz
lcall
or
dec
jne
movsl
nop
push
pop
add
repz
mov
movsl
mov
xor
xor
jo
sbb
daa
jne
mov
adc
lcall
cmp
int
and
sarb
push
xor
leave
xor
ljmp
cld
fiaddl
dec
jmp
incb
sub
arpl
aaa
cmp
jg
or
pop
enter
pop
int
dec
in
stos
cwtl
or
cmp
pop
dec
sub
mov
push
mov
mov
dec
or
and
add
cmp
fistps
hlt
inc
or
in
rcr
cmp
popl
xchg
push
and
dec
and
fs
sbb
out
cmp
sub
cmp
lret
shll
popa
daa
inc
adc
xor
cmp
je
enter
push
bound
cmp
lcall
pusha
xor
and
and
loop
pop
into
sbb
addb
nop
pop
in
std
inc
bound
adc
cld
cwtl
mov
flds
mov
es
fisubrl
mov
movsb
in
insl
es
out
lods
lods
mov
lods
add
inc
inc
icebp
xchg
or
xor
xchg
sbb
bound
dec
test
clc
push
push
fwait
inc
das
outsl
out
pop
push
subl
mov
arpl
mov
imul
and
jmp
jge
test
ja
ss
mov
mov
test
mov
shlb
pusha
loop
jl
cmp
ret
xor
pop
xor
popa
sub
mov
add
mov
mov
cmpsl
mov
sub
xchg
gs
and
add
mov
xchg
jge
shll
aaa
lahf
or
cmp
mov
rclb
jmp
adc
xchg
leave
loope
loope
cmc
in
lret
adc
mov
jecxz
sbb
and
fxch
call
add
mov
in
mov
add
js
add
movsb
pusha
adc
xor
sbb
movsb
pushf
lods
inc
push
repz
insb
dec
jge
xor
std
test
ds
ss
lcall
xor
pop
cwtl
insb
test
mov
gs
out
xchg
jecxz
lret
mov
popa
nop
or
aad
sub
div
jne
fcmove
loopne
dec
test
imul
inc
cmp
pminsw
sbb
inc
jne
mov
mov
xor
in
sbb
andl
add
xor
out
hlt
push
cmove
xchg
push
xchg
mov
cs
lods
fldt
mov
ja
dec
adc
or
jmp
dec
pop
pop
xchg
jg
push
jne
xor
jae
and
inc
adc
sub
les
aam
loope
mov
mov
sub
cli
push
lahf
mov
addr16
popf
jo
ret
sub
push
outsb
dec
mov
mov
jns
jo
xlat
mov
adc
repnz
shl
mov
sbb
xor
imul
fcmovnb
mov
orl
inc
mov
add
sahf
bnd
neg
and
shl
dec
jns
sbb
cli
dec
add
cwtl
inc
mov
sub
cmp
fs
xor
xchg
pop
pop
sub
into
icebp
sbb
sub
cmp
daa
cltd
pusha
sub
fnstenv
aas
dec
sub
sar
ljmp
add
test
aam
inc
inc
pop
jge
test
cmp
mov
loopne
cmp
or
dec
mov
mov
outsb
jecxz
adc
or
int3
and
mov
jb
pop
fs
cld
in
lea
sub
inc
lods
or
pushf
sub
std
andl
add
add
aam
jge
mov
das
jae
les
cwtl
inc
jnp
les
mov
icebp
daa
sbb
daa
xchg
lret
push
lods
mov
lret
fldl
and
movsl
sub
sub
xchg
imul
mov
repz
stos
imul
inc
ss
cmp
cltd
sub
loop
mov
scas
stos
or
lret
lcall
sti
lcall
pushf
mov
jl
xor
pcmpeqd
popa
cmp
cs
push
arpl
and
xor
mov
fisubrl
pop
mov
aas
psubusw
pop
sub
aas
loopne
push
cmc
iret
cli
movsb
pop
negb
adc
push
sarb
adcl
pusha
sub
push
daa
inc
xchg
pusha
lock
je
movsb
shll
mov
sub
cwtl
cmpb
add
mov
ds
add
dec
mov
jmp
icebp
movsl
sub
stos
jl
dec
arpl
std
inc
cmp
pop
jno
sti
or
lahf
push
sahf
jmp
aad
fildll
inc
adc
enter
das
xor
out
xchg
ret
or
cmp
leave
mov
mov
movb
imul
es
jns
push
lock
insl
mov
mov
adc
mov
jb
jo
mov
cmpsb
or
sub
cmp
push
or
jne
pop
scas
mov
int3
pop
das
loope
shlb
pusha
mov
dec
mov
inc
cli
xchg
iret
jo
jge
pop
popa
or
jnp
repz
mov
add
push
rorb
inc
pop
hlt
pop
lea
lods
pop
and
xchg
lods
sub
mov
or
scas
rclb
mov
mov
out
into
xor
popa
fstps
xchg
sub
sub
cmc
ljmp
jns
mov
push
cmp
pop
ds
in
divl
clc
aas
xchg
inc
and
mov
jp
pop
pop
push
push
and
out
adc
ret
and
data16
pusha
fs
repnz
stos
cld
scas
jp
mov
xor
nop/reserved
mov
into
or
and
loop
repz
in
aas
or
xlat
jne
movsb
pop
add
imul
pop
inc
and
or
push
mov
mov
in
out
push
shld
sub
adc
rcrb
inc
push
push
push
mov
iret
insl
mov
cmp
orb
aad
push
pop
arpl
fst
jbe
mov
std
add
dec
mov
loop
sub
popa
out
out
scas
daa
lock
out
mov
cmp
mov
mov
into
pop
and
leave
push
sbb
adc
mov
inc
jnp
xchg
stos
das
scas
mov
and
fwait
pop
push
add
adc
bound
push
mov
leave
mov
push
lret
push
and
stc
shlb
xchg
sbb
mov
ret
sub
insb
sub
mov
imul
es
decl
jge
movsb
movsb
ljmp
repz
or
stos
das
cmc
pop
repnz
pop
dec
fisttpl
mov
dec
int3
inc
push
or
xor
jo
xor
iret
pop
or
pop
pop
addb
jb
dec
lahf
gs
inc
loopne
movsl
dec
stos
dec
sub
loop
push
or
enter
sti
adc
mov
aam
xchg
call
sti
lods
leave
sbb
clc
or
outsb
pop
pop
jnp
add
inc
inc
jle
ret
push
les
popa
pop
leave
out
mov
add
data16
bound
hlt
dec
movsl
dec
pop
mov
fstps
aaa
mov
xchg
jns
jne
cmp
cmpb
lcall
das
pusha
mov
xor
xor
dec
das
push
and
flds
pop
lret
fdivp
sbb
scas
push
int3
mov
test
orl
mov
pop
mov
repz
xor
mov
xor
or
jnp
jecxz
es
divl
int
lcall
cmc
pop
mov
xchg
hlt
hlt
or
jnp
rorl
test
xlat
pop
xor
mov
sub
loop
mov
movd
xor
jae
popf
mov
mov
call
mov
mov
test
call
ss
add
pop
add
push
mov
aaa
lods
scas
aam
xorl
jnp
pop
xchg
and
mov
lcall
xchg
movq
subl
movsl
fcomip
movsl
add
and
sbb
xor
fcoml
bound
push
push
dec
or
rcrb
popf
out
mov
in
add
notl
icebp
and
gs
mull
in
inc
fmull
fildl
and
inc
mov
clc
divb
punpcklbw
mov
lods
push
push
movsb
jns
fwait
mov
idivl
out
imul
inc
push
out
push
jle
dec
push
test
rcrl
lret
cmp
sar
in
pusha
mov
idivl
pop
push
adc
push
push
push
into
push
mov
mov
stc
jb
popf
stc
int3
push
push
fistpl
in
cmp
aas
push
pop
jp
and
out
in
cltd
fnstcw
inc
test
movsl
lret
repnz
xor
test
insb
pop
call
xchg
in
sub
loope
enter
xchg
sub
jmp
ds
movsl
mov
in
je
enter
outsb
aas
pushf
in
push
syscall
fs
fwait
fs
js
pop
icebp
sbbb
outsl
aaa
lds
ret
dec
xor
sbb
adc
pop
push
mov
repz
sbb
std
jg
dec
imulb
xchg
ss
mov
pop
push
test
flds
pop
nop
in
mov
push
jbe
inc
pushf
fcmovnu
hlt
lahf
sbb
cmpsb
sbb
and
rep
mov
add
clc
sub
lea
jno
mov
enter
sbb
int3
mov
mov
cs
xchg
test
pushf
mov
xchg
mov
or
pusha
cs
push
mov
mov
je
mov
stos
testb
and
fisttpll
cmpsl
stos
lock
push
xor
sub
test
cli
mov
adc
mov
sahf
lock
jle
mov
lret
outsb
ret
xlat
mov
sbb
lea
out
jb
ds
and
mov
insb
mov
aas
mov
push
xchg
xchg
pop
rcrb
loopne
xor
shlb
adc
or
cmp
mov
sbb
ret
ds
push
or
cmp
mov
stos
lds
outsl
hlt
into
icebp
mov
xlat
testl
fmul
ret
sbb
leave
lret
inc
dec
fs
adcl
sub
lret
stos
fistpl
jp
cmpsb
aad
xchg
ficomps
ficoms
sub
mov
arpl
pop
push
mov
mov
inc
xchg
loope
cmp
aaa
icebp
cwtl
cmpsl
xor
adcl
add
push
xor
inc
jno
adc
mov
inc
dec
inc
jo
mov
adc
adc
jnp
push
mov
sbb
js
into
and
sub
imulb
mov
and
repnz
or
mov
mov
lret
jae
pushf
inc
div
jge
popf
adc
icebp
adc
addr16
inc
mov
movsl
addr16
int
xchg
repnz
das
imulb
mov
roll
mov
add
mov
movsb
subb
roll
push
out
pop
and
je
mov
pop
outsl
or
mov
mov
mov
mov
sbb
push
sti
frstor
rcll
notb
enter
xor
cmpsl
aas
int
out
add
sbb
imulb
sbb
jb
cld
insb
aas
inc
fldenv
or
out
cmp
xchg
adc
adc
cld
in
mov
insb
or
adc
add
movsl
pop
mov
and
add
xor
into
inc
sub
push
or
in
lret
clc
outsl
ss
push
clc
push
cltd
xor
inc
adc
andl
pop
std
or
xchg
inc
mov
pop
std
les
ja
pop
dec
sbb
xchg
xchg
mov
arpl
lds
sbb
and
into
jbe
sbb
xor
cmp
int3
outsl
pop
fwait
loope
adc
inc
pop
jo
mov
outsl
cmp
leave
xchg
hlt
jl
cmp
dec
xor
and
aam
jmp
lods
fsubl
je
mov
js
data16
test
fdivr
mov
aad
mov
xlat
push
mov
mov
xchg
mov
or
mov
test
incl
push
or
int3
mov
loope
dec
insb
pop
popf
mov
cmpsl
mov
fs
mov
sahf
ret
add
lret
insl
dec
add
loop
mov
xbegin
lea
or
stos
dec
mov
adc
jno
dec
cmp
pop
cwtl
push
xorb
fisttpl
push
dec
popa
jp
mov
out
ja
push
mov
lcall
and
lret
jno
and
neg
sbb
jg
or
mov
xorl
mov
cmp
cwtl
add
in
xorl
dec
jb
mov
sbb
inc
mov
arpl
mov
aad
push
inc
pop
out
outsb
xor
mov
fldcw
flds
push
sub
pop
test
sti
lods
xrelease
adc
xor
sub
cs
mov
dec
sub
stos
mov
cmp
cmp
mov
mov
je
lcall
mov
pop
in
sbb
xor
test
popf
enter
mov
or
jmp
sbb
push
rorb
aaa
adc
sub
fsts
mov
cwtl
add
out
fstps
ds
push
adc
jge
jecxz
xchg
fs
or
gs
cs
mov
shl
fcoms
pop
fstps
jb
test
add
dec
jmp
stos
or
lock
cld
jp
mov
mov
add
sbb
push
pop
and
ret
ljmp
cwtl
jnp
or
bound
inc
jecxz
pop
mov
xor
shlb
cmp
inc
int3
push
fdivs
lds
adc
cmp
cmc
aaa
into
shl
xor
das
cmp
test
loope
mov
leave
jbe
dec
inc
inc
ss
ret
add
testl
mov
daa
mov
xor
andl
fsts
pop
push
xor
cmp
dec
aam
pusha
xor
adc
sub
loopne
sahf
loope
sbb
mov
dec
in
addl
jmp
leave
fwait
inc
xchg
scas
mov
lcall
cmpsb
inc
mov
fstps
dec
jmp
inc
shrb
adc
mov
stc
pop
push
mov
sbb
or
insb
es
jmp
enter
pusha
dec
sti
sbb
xchg
and
shll
mov
xchg
dec
orb
mov
mov
jecxz
icebp
mov
out
ret
pushl
je
mov
cmpsb
push
rcrl
mov
lods
sbb
in
sub
pop
mov
imul
xchg
pushl
jo
mov
and
jo
sti
pop
imul
cmp
dec
mov
mov
mov
inc
inc
arpl
loopne
xchg
les
cmp
sub
fnstenv
mov
mov
fsub
cld
incb
adc
push
out
pop
push
shrl
sbb
push
mov
gs
aas
push
inc
jo
xor
inc
dec
cmp
cmpsl
push
ljmp
add
sub
or
nop
dec
xchg
ss
sub
icebp
sub
fs
cmp
sahf
adc
push
sarb
into
adc
scas
adc
insb
dec
jmp
add
in
mov
mov
rol
clc
push
adc
add
sbb
and
adc
js
sub
dec
fiaddl
xor
mov
jnp
ljmp
dec
std
inc
in
popa
test
imul
je
sbb
sti
or
gs
sub
out
cmc
rcll
adc
inc
test
add
sub
sysenter
push
movsl
mov
rclb
fcompl
std
mov
mov
rcr
test
adc
cmpsl
fdivs
data16
lret
jns
es
je
pop
xor
jbe
test
xlat
mov
std
add
pop
aas
pop
push
out
jmp
out
loope
xlat
add
inc
fildll
sub
out
cmp
or
mov
mov
mov
stc
mov
mov
xchg
pop
lea
shl
jl
jb
xchg
dec
insl
mov
cltd
jo
dec
imul
nop
shrl
imul
lds
cmp
dec
dec
sbb
decb
divb
pop
jne
movsb
push
sbb
adc
mov
xor
dec
scas
xchg
inc
aam
push
scas
orl
add
xchg
sti
xchg
lret
fdivl
mov
or
xchg
ljmp
jb
jp
popf
addr16
xchg
jle
aaa
push
jbe
mov
mov
movsb
outsb
lcall
adc
mov
or
push
xlat
dec
xchg
popa
sahf
lret
shrl
add
cld
dec
inc
sbb
cli
push
and
subl
gs
loop
mov
sub
add
cmp
xor
dec
push
jbe
and
jg
mov
adc
aad
clc
movb
or
pop
inc
cwtl
jae
jmp
daa
mov
js
inc
mov
movsb
sti
fstpt
in
test
mov
call
mov
push
out
sbb
int
push
andb
fsub
push
sbb
pop
dec
rcrb
jl
fstps
mov
out
xor
mov
adc
shlb
adc
notl
imul
addl
not
adc
jl
nop
and
cmp
add
xor
inc
stc
or
test
dec
enter
out
rorb
lret
sbb
shl
add
pop
mov
iret
cmp
dec
add
and
aas
xor
in
sub
inc
fnclex
and
xorb
rorl
inc
and
shlb
fimull
add
cltd
mov
push
jne
inc
popa
mov
fs
jecxz
mov
out
sbb
mov
scas
add
ja
and
sub
outsl
aas
sub
jae
and
mov
add
xchg
mov
lret
cmp
adc
mov
call
add
out
hlt
aas
pushf
popa
inc
mov
cmp
imul
and
dec
out
fs
test
and
ret
cwtl
addb
cs
push
inc
add
cli
pop
mov
sarb
push
lcall
popa
scas
push
clc
int
adc
push
lret
arpl
js
sub
sub
adc
mov
lock
pop
sub
cmp
mov
rcrl
scas
or
insb
and
jmp
pusha
pop
pusha
push
ss
jle
popf
xor
lock
mov
cmp
mov
and
inc
repz
sbb
rcll
ud2
bound
xchg
push
out
jbe
jecxz
mov
out
and
je
stos
cmp
add
add
adc
es
lret
aas
andl
adc
sub
jnp
add
mov
pop
cmpsl
dec
mov
or
frstor
mov
cmpl
push
adc
add
xchg
icebp
and
and
xchg
xor
jle
in
cltd
std
dec
sahf
xor
or
leave
mov
sub
inc
push
shlb
insb
mov
mov
fadds
into
xchg
jno
push
in
push
fisubrl
pop
sti
ficoml
cmpsl
data16
pop
out
adc
xchg
daa
mov
cld
ss
push
in
subb
and
repnz
pop
mov
or
cmp
stos
outsb
jle
in
nop
lret
out
xchg
xchg
jmp
mov
ss
and
in
call
mov
dec
jg
stc
shll
adc
imul
shlb
adc
fcoml
cwtl
imul
pop
call
inc
daa
jae
mov
call
into
test
outsb
sbb
cli
or
push
xchg
mov
shll
cmp
xchg
pop
in
push
pop
dec
icebp
sub
cli
xchg
push
jl
jae
and
jb
adc
dec
xchg
mov
les
cltd
or
xor
pop
adc
ficomps
imul
es
call
or
inc
adc
mov
loopne
pop
pop
sti
mov
adc
scas
mov
mov
mov
out
mov
cmc
pusha
adc
jg
xorb
rdtsc
sti
or
adc
mov
xor
mov
xlat
and
xchg
sub
dec
dec
les
adc
xor
aaa
pop
fistps
push
pusha
ja
filds
cmp
fisttps
lods
sub
pop
mov
mov
imul
loopw
push
sbb
js
jp
movsl
inc
pop
fwait
cmp
hlt
in
aam
jo
std
jo
scas
outsb
shll
das
adc
pop
cmp
and
xchg
mov
dec
xor
clc
pop
ret
outsl
mov
dec
jo
mov
pushf
inc
or
sbb
jo
shl
out
cmp
aas
push
fs
dec
aas
mov
js
dec
aam
mov
xchg
adc
stos
sbb
test
adc
fcmovnu
adc
mov
movsb
push
adc
les
add
and
cmpl
mov
insb
pop
aad
xor
filds
dec
sbb
hlt
sarl
call
out
xchg
into
jmp
xchg
loopne
test
int3
xchg
lret
jle
adc
dec
jp
in
push
adc
and
imul
pop
push
fsubrs
sti
stos
rcll
pop
push
loope
jge
jmp
xor
jo
add
shrb
jl
mov
lgs
cwtl
int3
and
addr16
outsb
lret
lcall
ljmp
push
imull
insb
mov
cs
dec
clc
lods
shrl
out
loope
ds
daa
mov
loop
push
fadds
rolb
mov
popa
xor
mov
push
mov
or
fimull
data16
cmp
scas
dec
jp
stc
and
pop
sbb
fmul
fmull
fs
cmp
jl
out
mov
push
loop
je
pop
cli
ss
sub
push
pop
jbe
into
push
lahf
iret
cmp
imul
popa
jnp
out
enterw
movsl
or
outsl
adc
mov
arpl
dec
adc
je
aaa
loop
sbb
xor
xor
std
lret
cld
fidivrs
es
rcrl
adc
mov
out
mov
and
dec
jg
cmp
pop
or
lods
sti
xor
push
das
xchg
xchg
fnstsw
add
or
testb
jns
pop
dec
lcall
xor
xlat
sbb
enter
xor
repnz
push
hlt
or
aas
adc
arpl
ficoml
scas
adc
nop
inc
pop
xor
icebp
inc
imul
test
sti
xchg
inc
in
or
pop
mov
out
xor
jo
ss
fcoms
jecxz
pop
aas
jmp
jle
movsl
popf
fsubrl
lahf
push
add
adc
test
in
or
jp
aam
cmpsb
shlb
mov
pop
shrb
lcall
cli
push
aad
je
insb
and
lds
jecxz
cmc
fisttpl
ljmp
test
mov
dec
push
repnz
sarl
sbb
mov
js
pop
xchg
cmp
mov
mov
sahf
mov
aas
fcomps
mov
nop
divb
add
cli
cmp
add
dec
frstor
sub
sub
jnp
xor
push
mov
xor
add
cmp
xchg
add
xchg
popa
pop
push
lcall
lret
ret
mov
push
sub
sbb
fildl
jne
fidivs
pop
inc
adc
mov
inc
mov
out
bound
jmp
xchg
lret
jge
xor
decb
cmp
jns
sbb
pop
repz
out
sub
inc
mov
cmc
xlat
add
ror
adc
daa
adc
jbe
out
lea
jle
pop
arpl
or
inc
mov
scas
push
sbb
sbb
add
jecxz
cli
xor
or
fs
pop
jmp
sbb
mov
in
dec
xor
and
or
repz
jge
test
mov
jns
jmp
add
mov
ret
or
add
enter
mov
je
pop
stc
jg
rclb
fs
sti
enter
std
add
pop
insb
popf
movsb
rorl
popf
cmpl
test
loopne
inc
popa
repnz
popa
adc
and
iret
dec
jg
sub
addr16
popa
pop
mov
adc
mov
fcmovnbe
add
and
sarl
in
mov
mov
xor
std
nop
in
addl
sbb
pop
fwait
scas
push
pop
push
pop
xlat
push
fsub
lea
aas
pop
es
cmp
mov
pushf
and
pop
fmull
bnd
dec
ret
mov
mov
shlb
pop
sbb
sbb
pushf
mov
push
loopne
push
inc
dec
out
idiv
lock
ret
test
fwait
lret
es
lea
pop
xchg
ret
ds
pop
lock
shrl
jae
or
daa
mov
xchg
sub
int3
iret
and
std
stos
cwtl
clc
icebp
jbe
fsubr
outsb
shll
xchg
xor
gs
shlb
mov
pop
xchg
pop
sub
sub
dec
aam
push
test
insb
shr
dec
xchg
xor
aaa
js
faddl
sbb
push
xlat
lret
ljmp
out
pusha
pop
fldcw
orl
jnp
cwtl
aaa
subb
jl
pusha
shlb
int
mov
lcall
sub
popa
jae
sbb
into
sahf
outsl
sbb
add
lock
aad
push
push
rcrb
in
jno
add
imul
inc
mov
push
mov
shl
dec
push
out
bound
pushf
mov
aad
jo
xchg
jg
push
jge
sbb
mov
jge
pop
sub
adc
adc
pusha
or
jo
lock
adc
fnstcw
pop
and
lods
daa
test
insl
jecxz
rorb
or
push
movsl
mov
pop
in
dec
xchg
movl
xlat
or
iret
lods
xchg
je
dec
push
inc
jle
cmpl
fnstsw
bound
jo
mov
stos
pusha
sarb
dec
mov
mov
mov
dec
dec
dec
aam
jle
fsubl
aas
stos
loop
xchg
push
es
cmp
mov
and
xor
sbbl
sub
or
cmp
aam
pusha
jae
outsl
rcrl
icebp
lods
or
cmp
out
icebp
bsf
out
fnop
adc
push
lcall
mov
into
mov
cmp
jle
add
shr
loopne
aas
bound
sbbl
addr16
cmp
jae
sbb
cmp
test
cwtl
dec
es
sbb
aam
loopne
pop
mov
in
mov
icebp
lock
call
jns
or
dec
push
sub
push
push
xor
lret
jne
popa
xor
cli
push
in
test
call
push
cmp
sub
mov
inc
lahf
sarb
or
gs
sti
orb
xchg
test
je
outsl
pushf
xor
mov
and
shr
aas
outsb
inc
or
insl
push
sar
mov
cmp
imul
test
sbb
pop
pop
shl
insb
and
js
or
mov
daa
xchg
mov
int3
cmpsl
fwait
cmp
subb
cltd
jns
rep
adc
mov
push
pop
movsb
rorb
aad
dec
pop
sub
mov
push
xorl
cmpsb
jae
fcomps
lcall
inc
cmp
cld
arpl
das
and
out
push
ds
mov
je
ss
pop
loope
and
daa
cmp
mov
andb
jl
mov
test
aaa
mov
push
sub
jl
dec
xor
and
dec
mov
mov
dec
mov
cmpl
and
jecxz
insl
and
adc
jae
mov
aaa
in
popf
jbe
mov
stc
mov
xchg
xchg
xor
inc
mov
outsb
xchg
adc
das
icebp
mov
cmp
in
adc
inc
or
negl
in
fidivl
roll
clc
jle
dec
idivb
repz
faddl
xchg
adc
test
dec
cmp
lods
or
sahf
xor
mov
adc
adc
mov
mov
mov
mov
adc
inc
into
xchg
sub
xchg
out
jb
dec
inc
or
fdivs
stos
sub
jl
outsb
lcall
iret
icebp
and
hlt
stc
adc
pop
pop
mov
bound
and
je
loope
cmp
out
insb
xor
rcr
pop
gs
int3
je
mov
scas
adc
fwait
out
push
arpl
dec
int3
clc
mov
add
mov
dec
fcoms
and
sub
das
sub
or
stos
aad
sub
push
cmc
iret
push
nop
in
popa
cmp
rorl
cmp
push
repz
iret
mov
mov
mov
out
sub
xor
cmp
jae
dec
jl
jmp
inc
int
arpl
shlb
lods
jmp
mov
out
jp
popa
mov
pop
into
js
dec
js
fadds
inc
pop
push
mov
xor
loop
dec
add
stos
and
pop
jmp
std
and
fisubs
negl
or
ss
xchg
pop
xor
mov
inc
sbb
movsb
fbstp
out
dec
adc
cmp
in
icebp
xchg
xor
cld
push
pusha
add
pusha
jo
mov
mulb
sbb
jecxz
stos
jle
daa
cmc
mov
ss
cs
cmp
pop
movsl
imul
fucomi
and
aas
fsubs
cli
jmp
test
test
push
ss
fists
repz
mov
sub
push
out
adc
inc
imul
dec
cmp
in
lcall
mull
test
dec
jne
and
sub
mov
pop
roll
or
iret
or
clc
jl
mov
stos
data16
push
jl
fdivs
mov
repnz
outsl
iret
xor
and
sbb
xchg
int3
cli
pop
imul
negl
outsb
lcall
and
jnp
sti
leave
loope
mov
icebp
mov
in
xor
xlat
push
jbe
ljmp
adc
push
cli
push
sbb
das
fimull
adc
out
lock
ja
jp
xchg
jnp
push
and
cmpsb
pop
popf
ljmp
pop
lods
popf
cld
mov
add
mov
mov
call
inc
mov
mov
pop
scas
sbb
pop
mov
xor
and
pop
fwait
mov
fistpl
fcomp
fsubrl
aad
mov
xchg
mov
push
frstor
and
xor
ljmp
addl
mov
sbb
outsb
sub
xchg
cwtl
mov
xor
scas
addr16
mov
sarl
jp
mov
mov
pop
and
push
mov
sbb
scas
push
fistpl
imul
mov
out
jg
cmp
shlb
sub
push
and
cmp
mov
and
sbb
mov
lds
imul
jp
dec
or
insb
xchg
adc
add
sub
add
sub
mov
out
test
mov
cmp
cli
dec
cld
rcr
add
jmp
imul
fcoml
addr16
imul
jl
lock
aad
jo
xchg
pop
in
rcr
sti
xchg
jp
pop
fdivl
shlb
dec
lods
sarb
cmc
pop
mov
repz
ja
es
sub
mov
imull
daa
ja
cwtl
sub
cs
mov
scas
lds
mov
aam
add
jbe
jmp
je
mov
adc
lds
xor
mov
jle
add
das
ja
pop
jmp
int3
add
add
lea
adc
mov
and
pushf
leave
jbe
cmc
sbb
cli
adc
insl
add
jmp
sbb
pop
jecxz
inc
lea
fs
or
xor
jae
push
mov
jae
cmpsb
jge
imul
in
lret
into
mov
ret
sti
clc
cmp
dec
inc
jge
cmp
mov
xchg
jb
push
mov
push
into
sbb
daa
xchg
mov
aaa
pop
jne
mov
push
stc
and
cld
adc
mov
ret
push
bound
xchg
sbb
out
jnp
mov
pop
dec
jbe
push
imul
cmc
xchg
or
adc
in
push
inc
sbb
icebp
mov
add
mov
mov
repnz
or
fs
lock
imul
jno
mov
jns
xor
aad
je
ja
ret
jp
movsl
movsl
push
push
std
popf
cs
cmc
push
xlat
pop
cmp
pop
call
mov
dec
push
fiaddl
and
cmpsl
imul
mov
fwait
adc
or
and
fidivl
popf
pop
dec
aaa
outsl
les
xchg
sub
and
clc
push
cmp
jmp
outsl
sbb
stos
sub
jmp
ljmp
jno
std
insl
aaa
xchg
and
push
pop
std
dec
sub
rdpmc
cli
out
inc
sbb
dec
mov
aas
xorb
xlat
insb
pusha
scas
nop
mov
repnz
inc
scas
cwtl
hlt
popf
dec
or
inc
add
jge
jg
lahf
push
int3
xlat
jb
call
push
dec
push
jb
lods
xlat
cs
popa
inc
cwtl
dec
sub
jl
subb
outsb
pop
imul
lahf
lds
fldcw
insb
enter
jle
inc
pop
push
xchg
or
mov
xchg
jbe
cmp
mov
mov
cmp
repnz
mov
test
data16
cmp
jnp
shll
ja
push
adc
push
ret
das
sub
dec
adc
icebp
scas
shr
lret
int
iret
add
lahf
or
xor
out
jbe
call
repz
or
test
mov
into
es
nop
loopne
incb
xor
ret
adc
loopne
test
clc
popa
or
in
push
xor
stos
fcmovnu
cwtl
repz
shlb
jl
rorb
out
icebp
movsb
je
seto
mov
je
ds
or
dec
ror
pop
pusha
mov
or
lahf
roll
pop
push
xchg
mov
jmp
mov
sub
test
sarl
ret
xlat
push
sbb
roll
jmp
jp
dec
repnz
mov
dec
pop
adc
add
repz
scas
pop
mov
repnz
inc
popf
jmp
rorb
mull
imul
lahf
fldt
inc
cmp
ljmp
push
push
fwait
fucomip
fs
out
xchg
sti
jl
stos
jne
add
fiadds
push
adc
adc
out
dec
push
xchg
movsl
outsl
jne
or
push
icebp
pop
mov
xlat
aad
scas
adc
push
fwait
aad
out
repnz
mov
fucomp
xchg
xchg
icebp
shl
push
or
ret
out
push
cmp
cmp
fiadds
mov
stc
cmc
es
in
sub
cmpsl
jle
pusha
inc
jle
pop
shll
xchg
subl
sti
cld
sbb
mov
jecxz
pushf
iret
xor
adc
jge
pop
mov
push
shrl
push
mov
dec
xchg
jmp
xchg
mov
rolb
test
repnz
jg
imulb
and
fldl
xor
enter
out
std
sub
bound
sarb
mov
stc
sub
and
jp
mov
ret
sbb
roll
repnz
pop
imul
inc
xor
imul
jbe
cmpsb
clc
and
xor
mov
push
mov
sti
xchg
jns
cmp
mov
inc
mov
fbstp
jnp
ffree
pop
cmpsb
loopne
imul
pop
ja
push
outsb
cltd
not
popf
jae
flds
xchg
popa
sub
adc
mulb
dec
mov
adc
pop
sbb
push
jbe
push
adc
out
aad
push
stos
xchg
xor
fisttps
out
fucomip
push
rolb
add
mov
add
lret
cld
lret
inc
cmp
mov
sti
mov
push
test
dec
and
push
push
inc
imul
mov
jno
pushf
leave
shrl
or
jmp
mov
imul
mov
and
lock
and
sub
mov
add
mov
je
ret
rcrb
lahf
nop
clc
add
pop
lret
popa
cmp
pop
sti
mov
mov
mov
cmp
cmc
stos
fsubl
lods
in
mov
push
cld
or
lods
mov
repz
pop
mov
jecxz
sahf
sarl
jb
addr16
add
mov
and
daa
sbb
xor
mov
sub
pushf
and
jnp
add
cmp
sbb
fwait
cmp
aam
ja
addr16
outsl
subb
jnp
stos
xor
leave
cmp
ja
adc
pushf
and
and
iret
dec
adc
mov
out
jb
and
pop
add
cmp
insb
fmuls
and
push
lret
mov
test
mov
jmp
aam
stos
or
or
popa
fdivr
or
cli
or
push
mov
cwtl
fisttpl
dec
repz
stc
out
hlt
mov
push
pop
or
mull
jo
mov
mov
mov
jno
mov
pop
and
stos
cmp
lret
pop
shlb
xchg
xor
or
scas
fmul
or
in
lahf
push
sbb
add
popf
or
das
xchg
lock
xchg
inc
jbe
in
cmp
xchg
aam
sub
mov
lock
mov
mov
lea
dec
andl
cmp
es
ljmp
orl
lock
xchg
xor
mov
decl
roll
jae
inc
inc
jne
push
sub
cmp
inc
test
add
aas
movsl
stc
test
sti
push
and
scas
jno
push
out
and
mov
sbb
mov
data16
shll
jne
ja
scas
js
lret
cmp
ljmp
fisubrs
xchg
sbb
pop
mov
aad
mulb
fwait
add
pop
xchg
out
cmp
daa
push
fldl
cmp
sub
les
fdivp
icebp
ds
dec
cmpsb
fisubrs
fs
push
mov
inc
or
imul
mov
cmc
outsb
mov
xchg
lods
jmp
pushf
jns
rcrl
lds
cmpsb
sub
stos
mov
pop
adc
enter
mov
stos
iret
daa
xor
xlat
popf
mov
xchg
jbe
sbb
mov
ficompl
or
andb
add
push
xchg
jg
inc
mov
lea
int
test
xor
sbbb
push
inc
mov
xor
clc
lcall
mov
xlat
push
cmp
subb
movsl
movb
shrl
lcall
sub
fisubrl
sbb
adc
addr16
mov
cmp
cmp
and
push
mov
sub
mov
dec
or
push
in
xchg
jbe
inc
push
jg
repz
push
dec
jmp
adc
xor
pop
scas
scas
xor
mov
pusha
testl
jnp
loopne
xchg
or
and
icebp
ja
subb
jg
mov
nop
cmc
insl
and
jo
inc
push
push
gs
vphsubbw
xor
cld
test
add
mull
mov
fmuls
fdiv
shl
adc
cmp
mov
in
les
hlt
pop
mov
mov
roll
mov
sub
aaa
inc
ds
xchg
mov
sbb
ds
pop
jmp
dec
xlat
cmp
xor
adc
ficompl
dec
inc
in
jbe
sub
dec
iret
xchg
dec
fdivr
popf
adc
ds
fs
repz
cs
iret
cmp
sub
sbbb
mov
cld
sti
into
mov
jecxz
rcrb
pop
push
adc
fsubrs
sbb
sub
loopne
xlat
mov
out
adc
mov
popa
jo
ficoms
sahf
xchg
add
das
leave
add
lds
pop
adc
imul
scas
int
mov
mov
add
out
rorb
addr16
scas
ret
push
mov
ja
dec
cs
ljmp
js
xchg
call
loop
and
movsl
rorl
outsb
or
ds
jne
fwait
xchg
xchg
add
xor
stos
insb
and
pop
cli
test
imul
stos
pop
mov
in
jo
clc
scas
cmpsl
mov
and
and
inc
push
sbb
clc
jmp
inc
sub
cmp
xchg
xchg
and
adc
test
dec
cmpsl
scas
mov
and
sbb
js
pop
repnz
ja
leave
lods
mov
fldt
bound
xchg
xchg
adc
xlat
inc
icebp
pop
cli
dec
loope
sti
xor
or
sub
jno
ret
and
into
xorb
and
enter
call
fimull
imul
sub
lock
xchg
sub
mov
insl
and
mov
js
orb
push
cwtl
pop
cbtw
and
pop
pushf
dec
jp
js
cmp
scas
xorb
out
sti
lock
jbe
push
scas
stos
pop
ljmp
idiv
jmp
mov
inc
cmp
andl
test
shl
mov
addb
repz
cld
pop
fadds
std
lea
mov
sarl
scas
adcl
cltd
jmp
loopne
shrl
sub
out
shrb
push
inc
push
test
insl
adc
mov
jne
xchg
adc
jnp
insb
jle
nop
mov
sub
sahf
xchg
rclb
cmpsl
in
cltd
or
dec
cmp
inc
jl
aas
scas
enter
or
pusha
mov
mov
lods
fs
and
faddl
jmp
in
sahf
es
in
push
mov
inc
jmp
push
pusha
das
xchg
in
popa
int3
pop
or
rcrb
jge
jae
sti
xchg
jp
adc
push
jo
decl
pop
arpl
fnstsw
mov
aas
cmp
stc
push
inc
mov
sbb
dec
data16
mov
xchg
insl
xor
or
dec
mov
clc
mov
xchg
push
mov
loopne
sub
mov
inc
pop
scas
adc
adc
out
jp
mov
push
std
aas
pop
movsl
sbb
hlt
sbb
pop
sub
test
jge
out
xchg
and
scas
and
stos
jecxz
sahf
jno
jno
lahf
mov
push
push
sbb
jne
dec
into
dec
pop
push
sbb
ja
xchg
fidivrl
pop
movsb
sti
lcall
sbb
sbb
push
cmp
fisubrl
ss
aam
and
popa
jns
xor
pusha
sub
loop
and
outsb
lahf
popf
out
fs
hlt
sbb
pop
and
add
shlb
xchg
mov
pop
stos
inc
add
jbe
cwtl
inc
inc
cli
or
fstps
es
ljmp
mov
xor
nop
xchg
pop
fdivp
dec
xor
jo
pop
jae
push
push
sbb
movl
ss
rorl
fidivs
inc
aas
sub
imul
out
loop
outsl
pop
push
sbb
push
and
test
bound
push
cli
mov
push
push
test
jo
inc
ficoml
xchg
mov
mulb
rclb
push
add
cmc
lcall
adc
adc
enter
aas
jecxz
mov
leave
inc
xor
sarb
popf
and
mov
xchg
stos
xchg
jp
jmp
add
cltd
xor
fisubl
loopne
dec
mov
loopne
test
and
iret
mov
mov
and
imul
xor
pop
nop
sbb
pop
push
movsb
shl
adc
xor
or
mov
pop
and
ja
pop
cmp
xlat
xor
or
mov
jg
adc
test
push
pop
cmpsl
mov
push
dec
sbb
add
adc
lahf
mov
loop
jb
sbb
mov
mov
negb
mov
push
inc
dec
rclb
mov
dec
xchg
enter
cli
pushf
xor
ret
sbb
cmp
inc
mov
push
aas
or
cmc
xchg
outsb
mov
add
and
pop
ss
out
or
mov
lea
pusha
ret
mov
lock
jl
sbb
test
xor
adcl
add
rolb
cmp
fldt
mov
int
push
scas
das
enter
cltd
lea
and
push
jecxz
inc
lods
stos
std
cltd
shr
adc
or
cwtl
pop
sti
adc
xchg
pop
dec
enter
js
pushl
mov
jmp
cmp
jmp
loope
fwait
out
outsb
adc
sub
pop
adc
xchg
cmpsl
adc
shll
mov
incb
rcrl
jb
add
adc
mov
sbbl
jnp
sbb
lret
add
fidivrs
or
mov
sbb
sbb
roll
out
mov
xchg
testl
jecxz
es
or
sub
aam
dec
xchg
pop
lcall
push
jle
lcall
in
sub
clc
outsb
jns
jnp
mov
ret
inc
mov
test
cmc
xor
add
dec
bound
ss
sub
jmp
jecxz
sbb
dec
pop
xor
arpl
lret
inc
div
div
fstpt
scas
aaa
xor
xchg
das
adc
dec
xchg
inc
inc
les
inc
jb
stc
inc
pop
mov
push
dec
mov
pop
xchg
nop
es
mov
jne
ret
lock
mov
sub
inc
mov
lahf
jg
sbb
cmp
stos
negl
xchg
mov
mov
xbegin
push
mov
fs
jecxz
jnp
lock
shll
in
mov
cmpsl
jo
testl
cmp
pop
add
mov
inc
in
test
inc
or
mov
bound
outsl
pushf
lods
popa
jge
call
nop
aas
js
cmp
sarl
sbb
cmpsb
loopne
adc
scas
dec
aas
int3
jnp
adc
daa
xor
lahf
sub
addr16
cli
mov
notl
cmpsl
in
adc
lods
mov
jge
les
dec
arpl
mov
mov
loopne
aam
es
fcmovbe
pop
js
dec
add
cmp
and
push
pop
push
inc
lret
cmp
and
pop
bound
jp
inc
xchg
dec
bound
or
shll
sti
negl
outsb
xchg
mov
mov
leave
jp
shlb
das
or
mov
add
xchg
inc
ja
push
mov
and
sub
adc
push
xor
das
lret
mov
adc
iret
sti
movsb
enter
push
cmp
insb
loopne
icebp
scas
xor
sub
ret
aaa
pop
cld
hlt
test
push
jnp
xchg
iret
pop
idivb
in
sub
push
inc
pop
ljmp
flds
pop
cld
push
rolb
sbb
fnstcw
xchg
rclb
fiaddl
sarl
dec
mov
add
mov
mov
mov
inc
lods
not
js
stos
rcll
in
insb
ja
arpl
or
repz
out
xchg
push
cmpsl
hlt
mov
out
cmp
insl
cmpb
and
and
push
clc
xor
mov
inc
xchg
pop
imul
mov
xor
push
cmp
adcl
or
xor
mov
dec
pop
aam
xchg
loopne
and
shl
call
mov
jecxz
xor
sbb
loop
jmp
xor
jno
insl
dec
lea
repz
or
sti
sbb
sub
je
dec
lods
out
daa
mov
loope
sub
add
fsubs
lods
sbb
repnz
mov
dec
mov
fsin
loop
or
push
mov
jnp
cmp
outsb
insl
and
push
cld
jns
enterw
push
fistpll
mov
push
adc
add
jmp
dec
xchg
pop
adc
lret
mov
sbb
cmp
cmpsb
fsub
in
push
in
lahf
pop
repz
adc
movsb
sahf
into
jns
stos
mov
popf
sbb
jb
xchg
dec
nop
sub
faddp
outsl
lods
add
cmc
cwtl
cmc
mov
cld
addb
leave
xchg
cmc
fidivrs
mov
test
fldenv
push
push
es
mov
mov
out
rcll
pop
ret
imul
test
inc
mov
mov
popl
repnz
inc
xchg
std
pop
clc
stos
sbb
inc
push
lock
push
jns
int3
pop
adc
mov
dec
imull
testb
adc
xor
dec
jl
sbb
fimull
pop
xor
pusha
inc
fwait
or
xor
repnz
dec
popa
jp
vmwrite
jns
dec
ljmp
repz
jge
push
std
mov
cltd
add
es
adc
inc
je
outsb
int
loope
push
das
daa
sbb
cmpsl
lret
inc
addr16
inc
xlat
ret
or
mov
out
fcompl
push
js
mov
test
inc
add
nop
cmpsl
xlat
xor
sbb
clc
adc
inc
outsb
fstps
fistpll
sub
pop
sbb
sahf
pop
insb
lcall
and
mov
cld
sbb
pop
fs
stos
stos
das
repz
fadds
insb
imul
stos
inc
jge
add
dec
jbe
jmp
aad
sub
ficoms
ror
inc
xchg
popa
mov
adc
and
dec
nop
scas
or
mov
mov
fldl
stos
adc
and
xchg
jae
arpl
in
out
in
adc
jbe
or
jmp
push
ret
movsb
pushf
repnz
jne
mov
ss
cs
push
jge
mov
sbb
icebp
test
dec
scas
sub
jns
jne
jge
scas
fisubl
loope
cmp
push
dec
fwait
adcl
jmp
pop
cmp
jne
out
xlat
fstpl
cmp
mov
lcall
loop
or
jno
cmp
scas
aad
xchg
jp
scas
pop
hlt
ds
and
jecxz
xchg
add
mov
and
xchg
dec
jecxz
or
or
xchg
xor
repnz
repnz
xchg
add
icebp
jb
ret
imul
inc
lea
jns
loopne
subl
mov
loope
cmp
bound
mov
push
das
and
mov
gs
loop
stc
clc
jecxz
shll
add
popl
pusha
enter
adc
nop
loope
xlat
fs
js
jecxz
cmp
add
and
jne
xchg
sbbl
or
lret
cmpsb
scas
repz
mov
nop
pop
or
pushf
jno
sbb
lcall
push
xchg
xor
lcall
or
mov
xchg
mov
pop
mov
fldenv
ljmp
add
lret
mov
cmp
jl
test
xorl
cmp
jl
mov
sbb
in
dec
adc
mov
shlb
inc
lea
mov
adc
push
mov
jo
jns
fucomi
sbb
clc
stos
xchg
js
dec
arpl
out
subl
sub
in
js
inc
xor
and
sbb
mov
out
or
pop
arpl
xchg
inc
sti
pushf
inc
dec
cld
loope
mov
pop
and
push
mov
mov
fwait
test
mov
sub
pop
stc
fucomip
out
scas
out
ja
add
mov
ja
sub
mov
fisttps
push
stos
jne
jo
sub
pop
ret
movsb
xchg
mov
sarb
repnz
push
lret
cmp
pop
mov
lods
lret
jae
xor
into
repnz
dec
cmc
mov
jbe
push
aad
dec
jle
ror
adc
xchg
pop
sbb
daa
xorl
mov
popa
enter
testb
dec
sub
mov
call
or
int3
popa
sbb
adc
inc
and
rclb
shl
and
add
or
js
das
sbb
cmpsl
gs
sub
int
ds
fsts
add
aad
or
das
pop
jae
and
fucomp
dec
add
pushf
ja
repz
sbb
mov
xlat
push
push
push
add
in
imul
sub
mov
and
popf
inc
mov
and
jo
sub
nop
mov
pop
xchg
adc
iret
or
sub
jg
clc
xchg
ljmp
movsb
jns
and
pop
and
je
dec
mov
xor
shrl
lock
mov
jnp
mov
pop
aam
jecxz
mov
inc
dec
fcomip
cmp
adc
imul
adc
movsl
mov
out
xor
out
scas
imul
test
pop
popa
mov
xlat
mov
and
pop
adc
cmp
inc
mov
in
or
in
cmp
test
mov
pop
sbb
pop
dec
scas
adc
std
repz
sbb
sti
dec
mov
push
jae
addb
lock
cmp
pop
insl
je
pop
push
mov
cmp
mov
aam
mov
fistpll
mov
je
sub
in
fnstenv
or
and
inc
cmpb
les
cmp
and
fimuls
and
sahf
cld
aad
push
scas
mov
push
dec
add
adc
xor
pop
fistl
push
lods
in
nop
andl
mov
push
or
cmpsb
add
lret
test
xlat
jp
insb
xchg
mov
daa
mov
mov
inc
aas
push
in
cmc
xor
sbb
push
mov
xor
pop
shlb
fisubrs
in
movsb
stos
gs
movb
push
and
std
add
push
sbb
cli
add
test
pop
xchg
jle
fldcw
fwait
mov
xchg
xor
lods
adc
and
inc
addr16
in
das
dec
test
push
xchg
mov
loop
or
mov
cmp
js
shrb
hlt
stos
sbb
push
ret
orb
loope
inc
push
dec
xor
enter
out
sub
xor
lock
cmc
add
mov
cltd
mov
pop
xlat
push
jge,pn
jge
cmp
fmull
sub
push
out
filds
fmuls
repz
push
and
call
fstl
jno
or
and
outsb
cmp
mov
test
mov
dec
stos
daa
sub
add
or
fldenv
adc
int3
pop
push
or
pusha
test
pusha
jl
jne
call
movsb
popa
imul
aaa
lcall
call
and
aam
cmp
movsl
push
xchg
push
or
cltd
lret
mov
sub
mov
jmp
xor
leave
out
stos
pop
lock
and
inc
outsb
stos
aas
cwtl
mov
sbb
mov
mov
adc
mov
jae
pop
mov
mov
cmp
xchg
into
iret
fildll
sub
cmpsb
add
imul
inc
or
xor
or
mov
xor
pop
pushf
out
jb
jno
push
frstor
cmpsl
mov
xchg
push
mov
xlat
or
push
xor
test
xor
stos
rcrb
out
lods
filds
inc
movsl
scas
xchg
pop
lret
sahf
test
and
stos
inc
test
push
sbb
jl
loopne
das
fsubl
popf
mov
sub
arpl
repnz
cmp
push
test
mov
mov
gs
jo
cmp
push
pop
sbb
iret
cmp
sbb
imul
mov
pop
xor
out
push
lods
inc
mov
xor
sub
push
add
fiadds
mov
flds
insb
fwait
inc
sahf
and
jp
sbb
mov
stos
mov
imul
sub
je
jns
jmp
cmc
push
repz
mov
dec
popf
add
push
ret
xlat
jmp
cmp
add
jg
and
pop
ret
je
lods
gs
test
xlat
pop
mov
das
nop
mov
mov
lcall
mov
lret
pop
icebp
or
ret
inc
scas
xor
jp
and
popf
xlat
in
rcl
sti
mov
loope
sbb
pop
pop
popa
mov
fdivl
mov
mov
std
pushf
push
das
pop
popa
mov
xor
mov
cmc
xor
iret
xor
sahf
jge
lock
inc
icebp
lret
inc
inc
cmpsl
data16
repnz
inc
cmp
in
dec
mov
repz
or
fs
scas
cli
sub
and
mov
mov
mov
inc
mov
sarl
or
xor
data16
xchg
test
push
and
lds
sub
push
int
inc
mov
jle
fs
dec
and
mov
xchg
or
mov
in
xchg
sbb
adc
iret
mov
rcll
sub
imul
mov
mov
cmpsl
cmp
xor
or
sbbl
fsubrp
adc
jne
lret
insl
xor
dec
dec
roll
xchg
push
push
repnz
sti
mov
jecxz
addr16
mov
mov
dec
mov
push
test
inc
or
js
mov
mov
bound
and
ja
aas
int3
ficoms
outsl
pushw
cwtl
and
mov
mov
aaa
inc
sub
jp
and
test
enter
mov
clc
pop
insb
add
xchg
test
into
mov
cmp
xchg
outsl
jl
lahf
call
fcmovb
sbb
pop
push
pop
stc
leave
jne
sbb
push
dec
push
push
xchg
lods
iret
push
cltd
fnstenvs
lahf
lods
decl
mov
cmpsb
dec
subb
movsl
outsb
mov
push
or
adcb
jnp
sbb
mov
lds
mov
adc
xor
add
xlat
mov
imul
out
mov
jmp
stos
and
out
or
fwait
adc
adc
sar
mov
dec
subb
jmp
pop
pushf
or
pushf
jge
inc
adc
sti
call
xchg
les
loopne
sbb
leave
mov
in
outsl
push
js
sub
jmp
and
pop
or
pop
xchg
mov
jge
or
insb
int3
and
popa
stos
dec
push
fdivs
adc
cs
xchg
les
mov
fidivrl
stos
sbb
adc
cmp
mov
adc
cmp
adc
push
xor
add
sub
xchg
add
rorl
pop
jb
dec
mov
call
fimuls
dec
xchg
ljmp
lret
inc
xlat
mov
push
pusha
int3
lret
jle
pop
pop
lds
lods
mov
jno
jns
cs
repz
js,pn
mov
pop
enter
jg
sub
push
enter
push
push
add
es
and
movsl
and
or
repz
bound
xor
jg
cmp
xchg
mov
cmp
xchg
mov
jb
cmp
int
and
inc
cmpsl
insb
add
aas
xorb
addr16
jne
lock
adc
mov
dec
sti
fldenv
mov
outsb
jb
movlps
iret
mov
sub
jle
adc
push
or
pop
sbb
jle
cmpsb
divl
add
cmp
sub
inc
in
inc
sahf
mov
jo
pop
in
int
inc
add
mov
ja
dec
idivb
pop
pop
incb
lods
insl
shll
or
jl
lret
jg
pop
enter
jb
jo
aam
push
test
and
pop
push
jbe
jl
daa
ret
jae
add
push
xor
sarb
sbb
addr16
push
and
pop
outsl
jno
jnp
movsb
aam
pop
xor
ret
mov
shll
int3
jg
rcll
in
and
icebp
and
add
shll
mov
mov
and
cli
test
cltd
mulb
jecxz
inc
cmp
aas
test
lea
sub
lahf
jo
sti
cmp
out
aas
and
cmp
das
je
add
rorl
jno
int
inc
test
pop
adc
and
jnp
lret
lahf
leave
cmc
enter
test
jecxz
ret
adc
push
mov
leave
shlb
push
jns
stos
mov
fildll
cmp
mov
iret
sbb
hlt
and
jne
jl
sub
adc
add
jns
or
push
jne
outsl
lea
jnp
loopne
rorl
lret
push
fsubl
pop
out
icebp
fisubs
je
jo
mov
xchg
mov
pop
lods
pushf
pop
in
cltd
jnp
push
iret
shlb
test
ja
push
sahf
dec
jae
jo
fwait
pushf
sbbl
iret
jl
das
loopne
adc
cmp
ds
lret
sbb
in
es
repnz
outsl
mov
int3
cmp
cmpl
cmc
pop
je
xchg
cli
xor
pushl
adc
lods
les
rolb
xor
inc
lds
xor
test
insb
jns
lock
gs
in
dec
xlat
push
ret
xchg
test
xchg
jbe
sub
cltd
and
add
aaa
fstpl
jae
and
arpl
cwtl
adc
push
mov
andb
lret
inc
aaa
xor
sar
sub
in
loop
aam
dec
out
jmp
cltd
pop
ljmp
pop
ja
sub
rcll
xlat
cli
std
mov
mov
leave
dec
add
cmpl
lret
xor
sbb
dec
push
push
or
cmp
subl
in
std
movsb
negb
pop
cmp
cltd
or
sub
rep
rolb
sub
adc
lcall
insb
aas
or
xchg
xchg
enter
xchg
cs
mov
add
adc
xchg
jge
jb
sub
lds
dec
sub
xchg
dec
fdiv
adc
jae
pop
and
inc
lods
in
fistps
xchg
mov
jae
rcll
and
movsb
lods
in
negb
sbb
xor
push
dec
lret
enter
xchg
std
or
icebp
mov
ljmp
sub
mov
out
nop
mov
pushf
push
dec
mov
and
add
add
jle
dec
jmp
mov
out
roll
insl
lods
gs
movsb
fdivr
pop
xlat
or
fsts
mov
cmp
and
push
sbb
pop
cltd
das
cwtl
push
and
std
jmp
or
and
mov
lods
outsl
sbb
adc
movsb
repz
or
pop
mov
aas
icebp
ds
rcll
mov
mov
dec
fdivl
repnz
loop
or
inc
or
loop
popa
xchg
ret
or
mov
in
fsubrl
sti
inc
xchg
daa
sbb
aaa
bound
jg
add
in
adc
test
mov
flds
jnp
add
fimull
insb
pop
jae
cs
pop
mov
add
rorl
imul
iret
adc
sbb
insl
add
mov
push
enter
aaa
fcomps
clc
jmp
mov
mov
jecxz
jnp
push
gs
inc
je
jp
add
sub
test
adc
aaa
rorl
das
jno
testb
iret
or
loopne
cmpl
xor
in
push
pop
xchg
mov
rcrb
lret
ljmp
je
mov
xor
adc
imul
add
cli
mov
mov
movl
inc
adc
loopne
idivl
push
out
sti
inc
mov
and
cmpl
je
ficoms
loop
dec
sarb
sahf
out
hlt
add
or
cmp
inc
sarl
stos
lret
test
mov
rorl
xor
iret
push
fstl
mov
mov
outsb
movsb
mov
je
xchg
mov
xor
insl
cli
aad
pop
dec
mov
fimuls
rorb
in
jle
sub
cli
mov
pop
ljmp
scas
jecxz
aad
mov
arpl
fnstsw
loope
icebp
xchg
test
cmp
push
addr16
jmp
sti
loope
cmp
out
mov
adc
fstpl
xlat
xchg
es
jle
and
test
sahf
lret
sbb
dec
xor
cmp
cmp
sbb
mov
test
push
je
pop
popf
inc
add
xchg
adc
xchg
push
faddp
lods
cmp
dec
pop
repz
xchg
ret
out
adc
adc
and
test
arpl
cmp
test
cwtl
pusha
adc
cmp
sub
mov
arpl
lret
inc
scas
imul
adc
cmp
cs
cmp
sub
fcmovnbe
mov
int
sub
adc
int
fsubrs
mov
lret
fs
loop
add
into
sahf
loope
or
jg
mov
test
pop
mov
out
lea
add
loope
or
mov
cs
cli
fwait
xchg
outsb
cmp
sbbb
push
mov
inc
adc
stc
cmp
lock
mov
jne
mov
or
sub
insl
mov
sub
xchg
and
sahf
fnstsw
das
js
or
aaa
mov
dec
test
les
and
pop
popf
mov
cmp
dec
jmp
mov
in
push
sahf
loope
movsl
addl
or
push
fdivrl
aas
add
add
imul
ret
xor
add
mov
push
orl
loope
pop
mov
fidivrl
dec
dec
sub
mov
std
mov
pop
jns
shll
pop
lahf
aas
std
inc
imul
fisubs
cltd
push
rolb
imul
daa
enter
or
mov
lret
jmp
aaa
out
roll
arpl
xchg
cwtl
fs
add
xor
push
mov
jb
jns
or
mov
cmp
ljmp
and
dec
xorl
jnp
lret
sub
out
popa
out
testb
xchg
outsl
mov
inc
mov
jns
xchg
insb
mov
negb
daa
jae
icebp
imul
xor
jns
test
dec
mov
rorl
nop
jo
jne
out
in
inc
pop
test
out
inc
fiadds
xchg
and
dec
xlat
fdiv
jb
mov
jbe
dec
ret
aam
stos
push
xchg
adc
mov
inc
pop
das
lret
repnz
jbe
arpl
xchg
adc
push
jno
sub
push
cmp
cmpb
lea
adc
lahf
push
les
insb
inc
push
sbb
push
jbe
xor
in
mov
je
mov
lds
mov
cmpsl
lea
or
sarb
mov
xor
hlt
jmp
cmp
or
xor
aam
testl
int3
sti
imul
shrl
inc
jl
stos
repnz
clc
fldl
add
in
or
mov
addr16
into
xchg
aaa
inc
sbb
jne
dec
jg
dec
notl
push
xor
cmc
fstpt
and
fcompl
insl
filds
xchg
mov
loop
mov
fidivl
mov
mov
aam
and
mov
pushf
sbb
in
push
push
and
jecxz
mov
js
xor
jmp
insl
jbe
dec
xchg
lods
shl
adc
xchg
xchg
addb
popa
cli
popf
mov
and
mov
mov
adc
cmpsl
jnp
scas
inc
and
es
mov
ret
mov
cmc
xchg
inc
xchg
push
lahf
jo,pn
adc
or
adc
mov
xchg
jecxz
dec
outsb
jno
dec
outsl
pop
loop
cmpsb
popa
shll
loop
jge
sub
push
pop
inc
add
xchg
ja
xchg
gs
push
jp
inc
mov
aad
or
and
ss
dec
pusha
xor
leave
jns
or
and
addl
test
les
pop
sbb
out
stc
test
mov
pop
cli
in
repnz
mov
stos
adc
aad
imul
jnp
push
dec
pop
jecxz
mov
mov
mov
sub
aam
jp
mov
jecxz
mov
ja
imul
add
inc
mov
popa
pop
stc
mov
dec
mov
pop
mov
pop
int
mov
xchg
sbb
push
ljmp
inc
loopne
mov
ss
std
cmpsl
sahf
xor
mov
and
sbb
lcall
fwait
sub
call
insb
fisttps
ret
lock
pusha
adc
ret
pop
and
insb
inc
movsl
scas
pop
shll
sub
mov
ds
lret
fcoms
or
push
int3
or
xchg
jae
leave
fiaddl
rclb
ret
je
movl
leave
sub
jmp
clc
pop
sbb
inc
fiadds
stc
xor
jmp
mov
sub
lret
movsb
ss
or
xchg
ds
insl
aad
jns
jecxz
lcall
dec
pop
movsl
adc
lret
or
sbb
sbb
jg
push
xchg
std
mov
adc
in
lcall
adc
cli
and
or
mov
jae
dec
bound
icebp
mov
mov
loop
dec
addr16
ficoms
test
loope
ror
and
jge
xchg
shll
mov
js
lret
inc
mov
lds
outsl
loope
out
or
xchg
adc
mov
iret
cmpsb
fildll
fmul
or
and
jno
out
pop
dec
les
mov
popf
in
mov
gs
lret
adc
in
outsb
or
mov
xor
gs
push
mov
bound
hlt
jp
cmpsb
fisubrs
movsb
xchg
or
mov
das
fldenv
push
mov
cmp
les
insb
adc
pop
jb
test
ret
adcb
daa
clc
inc
loopne
mov
mov
les
push
clc
jp
repnz
ret
out
lods
or
aaa
adc
mov
cmp
es
xchg
or
les
xlat
js
call
jecxz
cmp
mov
dec
ret
rcl
fbstp
aad
jecxz
loop
xlat
cmp
or
xchg
or
test
enter
fldl
test
cmp
mov
push
stc
adc
jae
stos
das
cmpsb
sbb
jmp
je
aam
subl
cmpsb
imul
jb
fsub
and
imul
lods
and
mov
pop
int3
insl
data16
mov
stos
xlat
js
mov
aad
dec
sbb
mov
loope
or
xchg
sbb
jg
or
mov
lahf
cli
mov
inc
outsl
and
sub
mov
push
dec
inc
cmp
out
inc
jnp
xor
pushf
pushf
push
mul
push
loopne
cli
stc
mov
adc
test
push
dec
cmp
jg
or
mov
push
jge
cmpsl
notb
clc
xor
test
jmp
js
out
mov
mov
fnstenv
push
mov
mov
jle
cmp
or
cltd
cmp
loopne
jne
ja
mov
fnstcw
add
jl
cmp
ds
test
inc
push
int
cli
je
insl
jmp
sub
mov
and
push
ljmp
xlat
scas
pop
stc
jg
jbe
pop
jb
cmp
inc
pushf
scas
andl
in
arpl
cld
mov
pcmpgtb
test
push
ss
aaa
push
push
and
rorb
hlt
outsb
mov
mov
sbb
into
lret
cmpsb
and
lahf
fwait
xor
add
or
jne
in
andl
gs
jne
pop
xchg
aaa
sbb
sub
cmp
jl
pop
flds
mov
xchg
leave
test
xchg
addr16
cmc
jecxz
out
or
dec
js
sub
rolb
mov
push
sbb
pop
lock
pop
movl
std
or
addr16
repnz
or
xchg
sbb
fsub
scas
pushf
xor
adc
pop
inc
xor
stc
inc
push
sub
repnz
pop
dec
lret
ret
dec
and
movsl
rorb
dec
icebp
cmp
mov
sub
sahf
add
fstl
sub
or
inc
pusha
shrb
mov
data16
lahf
jge
mov
dec
or
adcb
pop
fiadds
push
inc
cld
ja
xchg
jb
mov
jo
push
mov
inc
jno
dec
push
jmp
test
ja
cmp
icebp
leave
and
imul
pop
mov
in
pop
repz
ret
pop
push
and
push
fcompl
pushf
in
cld
jno
mov
pop
sub
inc
inc
pop
lock
dec
ret
insl
inc
jne
lock
in
xchg
inc
cmp
jmp
rolb
sbb
int3
divl
sti
add
push
out
outsb
xchg
jp
sahf
dec
in
jmp
lahf
arpl
xor
nop
mov
push
popf
iret
sbbl
mov
or
xlat
dec
pop
xchg
pop
jnp
mov
mov
mov
inc
insl
aam
outsl
out
inc
adc
loopne
inc
ljmp
add
je
and
pop
mov
xchg
adc
add
cmc
jp
outsb
les
pop
push
sahf
mov
xor
or
js
jp
mov
sub
outsl
inc
fimuls
stc
rolb
push
inc
jle
adc
test
or
loopne
fistps
andb
and
or
es
jecxz
inc
jo
incl
xor
aad
pop
mov
andb
fucom
xor
cli
push
rcll
push
xchg
xchg
push
test
mov
or
jb
lods
xchg
cmp
repnz
lcall
mov
push
cmp
fwait
cs
mov
mov
xor
scas
push
sbb
stc
push
sbbb
movsl
fabs
das
dec
cs
xlat
push
mov
es
subl
mov
push
pop
jg
pop
sub
popf
jns
add
lock
cli
push
push
lock
mov
imul
sub
incl
mov
push
mov
add
sbb
subb
jae
mov
pop
mov
mov
test
push
lahf
pop
dec
aam
sbb
xchg
daa
add
outsl
insb
xor
inc
mov
stos
dec
sahf
daa
xchg
mov
and
clc
xchg
inc
mov
fisubs
dec
sub
dec
rorl
add
inc
pop
adc
lods
insb
adc
mov
push
jnp
outsl
pushf
cmp
loop
scas
push
sti
xchg
fs
sbbl
sbb
or
jmp
xchg
cmp
mov
mov
pop
xchg
mov
ret
xchg
add
fldl
rcll
test
iret
cmp
sbbl
mov
loopne
mov
test
inc
xchg
adc
push
stos
or
push
mov
insl
inc
bound
jmp
repz
aas
jb
or
sbb
adc
mov
and
mov
xchg
adc
inc
sbb
xor
stc
scas
sub
lcall
cmp
add
pop
xchg
dec
mov
xor
jnp
out
inc
cs
lret
inc
inc
pusha
cmpl
cmc
or
clc
xor
cmp
mov
das
adc
stc
fsts
lods
ret
call
lea
fwait
cmp
sub
mov
mov
cltd
mov
arpl
in
iret
xchg
inc
lret
divb
rclb
popa
xor
cmp
sbb
gs
sbb
ret
repnz
lock
or
inc
adc
loop
add
jecxz
int
iret
mov
sub
jne
fidivrl
mulb
mov
pop
xchg
insb
xlat
inc
test
xchg
lods
test
mov
outsl
lret
cmpsl
push
sbb
mov
lock
sbb
cmp
inc
popa
mov
shrb
pop
out
fiadds
arpl
gs
loopne
lods
je
ss
push
jns
xor
pop
inc
push
ret
dec
jl
xor
pop
fnstenv
inc
push
xchg
pop
icebp
add
ja
repnz
jbe
xor
enter
jecxz
sahf
xorb
ja
fldenv
sub
dec
imul
push
sub
ss
cmc
xchg
ja
add
repz
push
in
cmp
rol
sbb
aad
fisttps
lods
cmp
test
jg
loopne
add
clc
repz
loopne
testb
clc
in
xchg
mov
test
aam
add
loopne
leave
mov
cmpb
mov
dec
aad
sbb
mov
push
mov
lret
push
es
je
mov
cld
sbb
jae
mov
and
cmp
jecxz
test
mov
adc
lret
add
sarl
out
xor
bound
xor
cmpsl
out
lcall
dec
les
jnp
outsl
jp
adc
lds
popf
push
imul
add
fs
inc
out
leave
lods
pop
xor
iret
mov
xor
push
insl
mov
or
mov
cmp
aaa
movb
push
lea
adc
and
jb
push
aam
repnz
sbb
add
aaa
cwtl
out
xor
sub
sbb
arpl
les
arpl
lds
cwtl
push
adc
sbb
or
popf
pop
and
cld
xchg
ret
xchg
pop
andl
in
cvtps2pi
xor
andnps
jns
cmp
loope
arpl
cli
lret
loopne
flds
daa
insl
hlt
movsb
add
sahf
inc
xchg
fucomip
negl
sub
mov
dec
inc
cli
enter
mov
xchg
pusha
int
and
cltd
pushf
enter
mov
sub
lret
inc
cmp
inc
sub
jle
dec
push
lret
cltd
inc
stos
add
mov
cmp
clc
test
push
or
sti
dec
dec
bound
into
iret
add
gs
arpl
xlat
mov
sub
jae
mov
jge
and
or
aad
adc
jnp
adc
stc
fcoms
test
mov
leave
subb
mov
and
lcall
lcallw
fwait
iret
jecxz
cmp
xchg
leave
xchg
pop
sbb
std
jb
stos
jns
xchg
jmp
mov
jg
icebp
orl
fmuls
bound
les
pop
cmpsl
mov
repnz
nop
je
std
rorb
jge
loope
roll
orb
cwtl
mov
in
jge
in
mov
sbb
inc
scas
mov
stos
into
inc
inc
sbb
sbb
fsubrs
mov
cltd
sub
jle
in
mov
stos
dec
sub
push
fs
fistl
adc
xor
aad
push
cld
in
mov
lcall
out
mov
cmpsb
mov
stc
xorb
mov
inc
rorb
sub
xor
divl
test
mov
out
mov
mov
jo
push
push
ret
pop
dec
loop
push
sub
push
dec
jecxz
loope
xchg
fisubrs
jo
test
mov
stc
filds
push
push
inc
neg
das
pop
push
ret
imul
js
dec
fsubrl
push
or
mov
imul
sub
cmc
mov
fidivrs
sub
ljmp
iret
divb
in
jmp
push
pop
mov
int3
imul
js
lds
sbb
pop
pusha
and
mov
cmpb
jmp
pop
rol
jo
sub
mov
shrl
fcmove
push
sti
pop
dec
cli
xchg
std
jecxz
mov
mov
add
rcrb
push
and
mov
cmpsl
test
stos
lods
jae
sbb
fisttpll
adc
or
mov
xchg
cmp
cmp
lea
jo
pop
in
movsl
or
fsts
xchg
lock
in
repz
fimuls
out
add
mov
inc
adc
or
adc
xor
out
xchg
loop
imul
icebp
shl
mov
sbb
imulb
push
fs
xchg
or
bound
jmp
and
jle
sahf
cld
into
xchg
imul
popf
inc
adc
fwait
pop
jns
hlt
mov
fbstp
cmc
inc
dec
xchg
mov
loopne
or
std
stc
or
loope
pushf
xchg
jg
or
loopne
pusha
shlb
addl
mov
das
inc
fcompl
mulb
push
das
jmp
push
dec
mov
aad
fs
mov
push
ret
aad
rcrb
inc
scas
inc
scas
inc
xor
outsl
dec
scas
push
push
lahf
in
push
leave
mov
jns
fimull
imul
repnz
mov
neg
test
sub
sub
mov
lret
orb
scas
mov
add
add
loop
scas
mov
int
out
pop
popa
fisubrl
push
ja
lret
cs
jmp
sysenter
mov
mov
icebp
scas
fs
or
es
mov
mov
divl
cmp
sub
mov
out
loopne
aas
inc
lock
mov
jns
jge
mov
add
add
mov
adc
sahf
pop
push
inc
xchg
iret
xor
xchg
mov
popa
cwtl
repz
sbb
sbb
xchg
int3
ds
test
cwtl
mov
cmp
push
pusha
out
jb
std
ret
cmp
aam
lret
cmc
test
vdivsd
adc
std
push
add
sub
sub
arpl
fdivr
inc
sbb
pop
mov
mov
sbb
push
and
dec
xor
mov
mov
add
call
xchg
sbb
push
clc
dec
std
add
pushf
daa
out
cmp
cld
aaa
js
mov
cwtl
adc
mov
xchg
mov
add
lock
scas
test
rorb
mov
movsl
outsl
sbb
ret
mov
js
push
das
in
mov
lcall
int3
test
loope
lock
cmpsb
mov
and
add
outsl
add
adc
dec
pop
xor
xchg
inc
ds
push
inc
sbb
fsub
cmpl
pop
imul
xor
fwait
movsl
shrb
and
push
cmpsl
jg
jl
cmpsl
mov
test
jo
fwait
inc
push
jbe
or
test
add
jecxz
jg
xor
rcr
inc
pop
maxps
jno
pop
mov
pop
push
xchg
pop
sub
cwtl
daa
outsl
loopne
lds
arpl
jnp
mov
out
enter
dec
mov
xchg
push
xor
enter
adc
mov
cmp
stos
out
les
orb
mov
out
scas
dec
mov
inc
lea
testb
movsl
push
test
xchg
jmp
push
push
push
out
fld
int
pop
sbb
lods
fs
test
test
jecxz
push
out
imul
cmp
in
in
xchg
dec
xor
add
pop
jo
mov
sub
adc
cmp
xor
jns
cli
sahf
jg
imul
aad
cmp
sub
jo
test
in
inc
out
xor
sahf
cs
cmp
faddl
and
aaa
mov
xor
test
or
in
je
cld
xchg
or
sub
out
or
std
ljmp
arpl
add
inc
cmpsl
mov
ljmp
movsb
js
add
sbb
pop
mov
mov
mov
pop
lods
dec
decl
mov
adcb
lret
xor
xlat
out
push
mov
std
jl
sub
js
imul
hlt
push
lea
xorl
xor
cmp
out
add
lret
xor
loopne
les
xchg
adc
sbb
mov
incl
das
adc
cmp
mov
jmp
cmpsb
xchg
lret
ja
outsb
aam
lods
ds
nop
roll
push
xchg
mov
sbb
cmpsb
scas
lock
mov
sub
fdivr
and
sbb
repz
mul
jp
popa
mov
xchg
push
enter
movsl
push
push
adc
das
cwtl
dec
or
in
fiadds
adcb
xor
sbb
ret
idivl
outsb
jbe
inc
outsl
popa
pop
lock
ficompl
mov
in
insb
aas
ret
dec
mov
mov
dec
lahf
sub
insl
sbb
rolb
call
clc
mov
xor
fwait
sbb
cmpsl
out
fpatan
cmc
jae
pop
aam
or
lahf
sarb
into
add
mov
ret
addr16
xor
sub
mov
ja
mov
cmpsl
lods
popf
push
jne
cmp
hlt
jnp
mov
pop
imul
jl
jns
jae
or
data16
and
sti
scas
push
rclb
test
push
jns
mov
fldcw
or
dec
dec
lea
nop
jne
xchg
push
xor
xchg
mov
pop
inc
add
cmp
sti
cmp
push
scas
push
lea
out
push
ret
jmp
jl
cmp
sbb
fnstcw
jmp
jp
daa
je
pop
nop
inc
repz
leave
jb
inc
push
sub
add
orb
andl
loop
pop
mov
adc
das
mov
sbb
fsubrl
sbb
iret
aam
ljmp
mov
jns
test
inc
lahf
jbe
jb
xorb
fidivs
add
mov
popa
dec
fldt
insl
xchg
push
mov
xor
and
sarb
inc
cld
or
pop
cwtl
shl
fnstenv
xchg
push
mov
or
mov
dec
mov
je
outsl
mov
pop
cltd
setg
imul
aas
lret
lock
mov
xor
push
dec
pusha
divb
cmp
or
mov
cmp
pop
repz
in
cmp
fstl
cmpl
inc
adc
cmp
adc
xorb
insl
adc
cltd
repnz
pop
mov
lods
pop
test
outsb
pop
add
jnp
ret
jge
sbb
fildl
aas
cmp
pop
xor
mov
cs
adc
aas
push
addr16
scas
inc
mov
daa
addb
je
ljmp
mov
out
in
push
and
mov
enter
mov
mov
aaa
in
inc
shlb
jl
jbe
pop
push
int3
aaa
loop
inc
mov
push
gs
out
push
dec
sarl
and
pop
bound
cmp
adc
jg
loopne
mov
shlb
dec
testl
sbb
clc
jmp
addr16
mov
add
adc
mov
lods
mov
js
and
fldenv
cmp
lods
cmp
mov
aam
outsl
jbe
fidivrs
push
sub
sahf
jb
jne
je
mov
stc
in
cmp
pop
mov
xchg
mov
dec
cmc
sahf
mov
lock
inc
call
inc
cmpsl
dec
rcrb
movsl
mov
xchg
int3
mov
icebp
pop
mov
jle
jecxz
sub
inc
fists
adc
push
push
movsb
shll
cmpsb
sbb
inc
shll
loope
in
xchg
fcmovnbe
repnz
and
clc
cwtl
inc
fidivl
cmpsb
adc
sti
jg
cs
xchg
out
pusha
aas
je
out
icebp
insl
mov
sub
mov
js
adc
decb
jns
mov
mov
aad
xor
adc
inc
test
push
sti
pop
arpl
pandn
mov
test
movsl
inc
ret
xchg
mov
test
mov
js
adc
lods
int3
outsl
ljmp
mov
mov
mov
fimull
cmp
fisubrl
insl
mov
fwait
add
add
cli
sti
sbb
sub
loop
rcrb
jle
stos
incb
sti
sub
std
test
cltd
adc
aam
mov
mov
pop
jb
dec
daa
stos
in
es
push
enter
negb
inc
pop
fsubrs
bnd
cltd
shl
jns
push
add
insb
fcoml
out
enter
jns
mov
xor
scas
data16
cmpsl
push
mov
mov
leave
fiaddl
and
les
clc
lahf
and
adc
push
sub
stc
mov
pop
sub
ja
xor
jg
adc
es
jl
mov
push
mov
mov
pop
xor
rcl
mov
test
jbe
sub
into
in
sub
sbb
jmp
inc
shrl
imull
xchg
test
leave
das
ret
out
mov
ficompl
cmp
or
dec
jns
fcmovnbe
divb
movsb
fimuls
es
cmp
cltd
repz
sbb
or
sbb
pop
out
push
popf
and
pop
xchg
xchg
xchg
outsl
ss
dec
jp
fimull
out
and
jno
push
jmp
cltd
or
mov
push
inc
inc
pop
push
in
dec
pop
mov
xor
outsb
cltd
js
int
inc
dec
inc
xor
cs
insl
movsb
xchg
cmp
lock
cmp
pop
jnp
push
movsl
nop
fistpll
out
adc
in
ljmp
adc
daa
push
ds
mov
cmpsl
push
dec
lock
fwait
xlat
dec
pop
mov
loope
push
outsb
mov
add
stos
push
xor
dec
jg
push
shl
out
cwtl
lret
inc
and
cmp
fiadds
loope
lea
xchg
jmp
jmp
jb
cmpb
rorl
cld
lods
adc
int3
and
jle
movsb
jb
pop
and
pop
adcb
and
aam
orl
mov
cmp
jl
cmpsb
jecxz
mov
xchg
push
cmpsb
mov
xchg
sbb
lods
dec
sbb
push
sbb
xlat
clc
dec
jnp
sbb
and
pop
xchg
push
test
adcb
cmp
adc
imul
cmpsb
fdivs
mov
inc
sub
sahf
jne
xchg
js
xchg
mov
sub
adc
or
cmp
lds
mov
aas
cmpsb
mov
outsb
pop
cli
pop
fnstsw
lret
jae
jo
cmp
inc
inc
cltd
sti
jnp
sub
insb
sbb
or
inc
push
adc
cltd
std
dec
mov
push
into
aas
push
and
xchg
sub
repz
call
out
adc
addr16
jnp
ja
lea
xlat
push
hlt
xor
dec
das
push
xchg
rcrl
cmpb
or
adc
jns,pn
xlat
push
out
cmp
out
pop
outsl
xor
dec
xchg
sub
sub
mov
repz
pop
xchg
notb
lods
cwtl
cli
mov
add
cmp
xchg
sbb
adc
fwait
mov
das
out
sahf
pop
adc
dec
adc
sub
mov
and
movsl
adc
push
and
shlb
dec
xchg
fcomp
sub
stos
sbb
testl
or
sahf
leave
and
lds
or
hlt
sbb
test
enter
mov
push
adc
push
mov
pop
out
lods
cmp
shr
pop
mov
push
push
sub
xor
dec
or
rorb
add
int3
mov
jae
movsb
dec
inc
jae
mov
stos
xor
test
xor
jbe
pop
and
jmp
sbb
jecxz
jge
mov
adcb
pop
shl
fimuls
pop
mov
stc
fistps
movsb
movsb
mov
add
mov
sti
aam
repz
adc
adc
pop
cmc
ret
mov
jno
push
jecxz
sub
sbb
aas
movsl
mov
and
fidivrs
dec
adc
inc
xorb
inc
stos
lods
xor
insb
je
ret
mov
loop
xchg
or
xchg
adc
outsl
ficompl
jno
ja
xchg
cmp
adc
cmpsb
xor
testl
xor
xchg
testl
or
xor
cmpsl
mov
sbb
aad
dec
lds
and
mov
pop
repz
mov
push
cld
xor
aaa
daa
out
mov
addb
std
mov
pop
xchg
sub
mov
jbe
icebp
or
jp
lret
pop
dec
xor
adc
fwait
imul
pop
jnp
cmp
js
mov
push
pop
xchg
jbe
pop
scas
mov
insb
in
mov
mov
jg
idivl
push
sbb
enter
cmp
jp
rolb
sti
icebp
mov
jge
loop
orb
pop
fsub
sbb
dec
andl
outsb
cmp
jmp
and
fadds
les
jno
fidivs
cmpsb
lcall
repz
pop
popa
sbb
jb
sub
test
das
test
push
cld
into
scas
sbb
orl
or
inc
jle
and
ss
arpl
movsb
stc
mulb
push
out
dec
xchg
in
clc
pop
jno
fmull
cmp
pop
push
push
repnz
lahf
mov
shrl
push
out
adc
aas
mov
sbb
lcall
nop
mov
pop
lahf
loope
add
xchg
mov
fwait
or
hlt
mov
mov
jno
lods
jp
jg
or
mov
push
or
stc
sub
adc
sub
sub
stos
lods
inc
stc
or
pop
or
inc
sbb
jnp
aam
call
pop
push
dec
pop
cmp
adcl
push
pop
iret
bound
inc
push
add
jg
loop
mov
test
adc
mov
rcl
xor
movsl
scas
mov
fdivrl
lock
insb
jg
or
std
icebp
das
push
repz
xchg
cmc
lret
addr16
dec
adc
push
dec
shll
xor
dec
push
jnp
or
cs
mov
insb
mov
inc
push
stos
jmp
fldcw
pop
es
jge
mov
pop
in
adc
or
inc
movsl
pop
ror
sub
sub
lock
inc
int
fdecstp
lret
push
cmc
mov
pop
dec
movsl
unpckhps
rolb
mov
or
popa
adc
ljmp
mov
mov
les
daa
add
jg
daa
push
or
jb
xchg
movsb
xchg
xor
rcrb
push
mov
cmpb
lods
loop
fcmove
pop
sub
xchg
xor
inc
inc
xor
mov
mov
cmp
fcoml
test
aad
xor
sub
pop
addr16
jno
data16
shlb
scas
adc
cld
push
clc
jp
dec
out
adc
adc
insb
adc
popf
ficoms
sub
mov
xchg
xor
scas
outsb
in
sub
adc
nop
cwtl
sahf
sbb
jne
adc
notl
in
fildl
jge
xchg
add
or
inc
cmc
sahf
adc
sub
xor
test
inc
add
aas
push
lock
in
push
cli
mov
pop
cmpsb
sub
mov
fstpt
sbb
in
shl
outsl
xor
push
call
sub
or
in
xor
dec
jl
lcall
xchg
mov
adc
outsl
mov
test
or
push
or
pop
add
mov
aas
imulb
std
aad
test
sbb
cmp
cmp
mov
mov
cmpsb
ja
mov
adc
cmc
mov
jo
fwait
testl
mov
lock
cmp
xor
cld
mov
stos
xchg
in
pop
repnz
add
xor
jns
aam
jp
call
adcl
stos
mov
cltd
std
lods
ds
rcrl
pop
insl
in
out
sar
aam
jb
mov
aad
add
pop
jle
cwtl
je
popf
clc
pop
xchg
enter
dec
pop
aad
push
sub
pop
mov
sbbb
xor
cmp
in
mov
xor
mov
sub
mov
sahf
ds
pop
inc
es
fcoms
jecxz
mov
jb
or
mov
jb
push
cld
pusha
insl
push
jno
xlat
icebp
xchg
cwtl
lock
jl
fstpl
push
lock
cwtl
mov
jae
xchg
scas
push
sub
inc
add
movsb
sub
ret
dec
lods
lods
inc
fildll
popa
or
adc
inc
xor
loop
pop
pop
enter
data16
adc
aad
lahf
sbb
sbb
fiaddl
mov
mov
fldt
dec
add
sbb
lods
enter
push
lea
dec
aad
cwtl
jg
addr16
push
xor
dec
xor
mov
push
shlb
inc
mov
cmc
inc
inc
hlt
out
loope
push
add
mov
in
ror
out
mov
icebp
or
iret
mov
shlb
cmp
lock
out
xchg
adc
dec
sbb
or
pusha
out
pop
pushl
loop
add
mov
push
push
int
inc
not
stos
out
mov
aam
outsb
cmp
inc
add
mov
not
adc
mov
sbb
mov
and
push
call
fwait
js
adc
jecxz
je
movsl
ret
in
loope
push
fidivl
mov
mov
stos
adc
and
insl
inc
fcompl
xor
cmp
adc
and
jnp
aam
sti
add
pop
lcall
jnp
jnp
xchg
jle
or
jmp
push
je
cmp
dec
xor
sub
int3
sub
sub
in
cmp
xchg
adc
dec
add
test
or
and
adcb
data16
pop
cmp
fiaddl
xor
test
cmc
sub
adc
and
xchg
mov
add
ret
cmpsb
cmpsl
push
insl
out
fisttpll
repnz
stos
sbb
sarl
movsl
rclb
xor
aad
pushaw
lock
lock
mov
or
insl
xchg
add
adc
mov
cmc
add
inc
sbb
hlt
pop
out
pop
ss
sti
adc
cli
inc
mov
lock
aas
push
icebp
xchg
test
cmp
cmp
mov
clc
lods
dec
mov
scas
or
xor
adc
xchg
call
fwait
in
inc
dec
outsl
adc
ss
addr16
lahf
repnz
xor
int3
in
jecxz
pop
loop
cltd
fistl
hlt
xor
adc
lock
or
jmp
sbb
loop
sbb
pop
addr16
loope
insb
mov
call
and
xchg
ret
je
das
lods
jno
rcl
icebp
mov
cmc
sub
cmp
xchg
mov
mov
pop
inc
or
jb
xchg
sahf
xor
mov
scas
mov
lea
ds
inc
orl
stos
mov
jle
in
pusha
jp
add
jge
popa
cwtl
mov
inc
or
push
mov
jg
ret
or
add
mov
dec
out
xor
jnp
push
inc
jp
lods
outsl
leave
out
fsubp
mov
icebp
add
loopne
jg
lea
xor
ret
lods
mov
push
rorb
popf
cmp
mov
in
cld
fildl
mov
into
mov
dec
xor
xlat
xchg
dec
daa
mov
mov
cmp
jle
cmpsb
dec
xchg
and
out
hlt
popf
xlat
mov
mov
lods
sub
aas
push
test
mov
je
pop
xchg
popf
inc
movl
mov
or
shl
out
arpl
mov
in
imul
adc
or
inc
xchg
dec
in
hlt
sbb
test
xchg
xchg
dec
das
xor
ja
add
mov
jge
mov
call
jo
pop
jbe
stc
jge
int3
dec
mov
out
or
bnd
sar
jb
fmul
push
test
inc
dec
lods
xchg
rclb
fldenv
xchg
jle
out
unpcklps
push
hlt
push
leave
out
mov
sub
sub
fldl
out
adc
inc
mov
sbb
mov
bound
add
and
and
push
xor
cmpsb
ret
cmp
cmpsl
call
sub
cltd
cs
ja
cmp
cmp
dec
push
mov
divl
dec
fsubrl
jo
and
adc
dec
lock
and
mov
stos
movsb
lock
push
fwait
adc
push
je
pop
jge
pop
pop
fiaddl
sbb
ljmp
fidivrs
mov
in
loope
stos
sub
inc
adc
sbb
sti
pop
or
add
dec
mov
and
mov
out
push
sub
cmpsb
cs
push
inc
add
mov
sub
maskmovq
imull
stos
leave
sub
popf
rolb
clc
iret
jno
cmp
int
xchg
adcb
repnz
fisttps
jnp
lea
push
stos
inc
loop
stc
nop
cmpsb
stos
cld
fdiv
and
pop
cmp
jge
jp
daa
addr16
dec
enter
sar
out
push
sbb
push
mov
testb
test
lods
lret
je
sub
fcoml
out
mov
or
shlb
sbb
adc
jno
dec
fsubrp
push
sbb
out
cs
dec
iret
cs
cltd
out
push
fcom
xchg
outsb
pop
sbb
cmp
jbe
dec
inc
push
jae
imul
mov
xorb
mov
xor
dec
mov
loopne
fwait
stos
sbb
repz
add
dec
xchg
movsb
enter
fists
dec
scas
divb
add
dec
inc
inc
dec
sub
dec
out
out
cmpsb
mov
mov
mov
fadd
fistps
pop
dec
mov
stos
mov
mov
repnz
notb
aad
movsl
or
andb
stos
rclb
xchg
pop
aaa
mov
xchg
mov
jb
xchg
cmpsl
xchg
mov
mov
divl
or
push
inc
lret
mov
dec
xchg
and
mov
jne
xchg
or
add
js
pusha
push
mov
popl
pop
fbld
sti
aad
add
pop
in
and
mov
adc
push
mov
popa
inc
loopne
je
int3
jg
out
out
jo
fwait
in
lahf
xor
fidivrl
loopne
and
jle
xchg
mov
inc
enter
stos
mov
adc
push
icebp
cmp
test
out
call
std
popf
jp
in
sarb
xchg
xchg
jp
pop
mov
lods
int
and
lock
inc
cmp
out
mov
jg
fistps
icebp
mov
lds
sbb
pop
inc
lea
test
xor
negl
out
in
sbb
xchg
daa
cmpsl
out
adc
test
dec
test
hlt
test
mov
or
es
es
xchg
cmp
pop
dec
test
or
or
add
aas
mov
adc
jnp
inc
scas
je
testb
or
push
mov
clc
pop
sti
or
mov
imul
xchg
mov
push
pop
sbb
mov
mov
out
fimull
or
push
sub
sub
cs
test
push
mov
cmc
mov
dec
mov
xlat
frstor
cmc
pop
clc
cltd
loopne
and
insb
out
lods
push
rcrb
inc
addr16
in
inc
test
cli
mov
mov
imul
insb
fisubl
pop
popf
shll
sub
sub
mov
std
mov
push
lcall
cmp
inc
bound
imul
jecxz
adc
pushf
leave
test
js
stos
ret
and
aam
mov
lea
in
test
cmp
xchg
andl
les
mov
mov
and
ja
out
icebp
and
xlat
dec
mov
cmp
repz
in
test
stos
mov
and
sub
add
cmpsb
repz
mov
xor
mov
xor
pusha
in
sub
sub
sub
test
push
mov
icebp
sbb
adc
sbb
les
leave
lahf
jecxz
mov
popf
mov
clc
loope
hlt
call
or
or
mov
xchg
mov
sbb
mov
cmp
and
and
insb
fnsave
repz
push
insb
insl
dec
sub
push
mov
mov
add
int3
mov
jmp
clc
inc
dec
adc
std
pop
sub
push
pop
mov
in
cmc
mov
ds
xor
bound
sbb
shll
mov
or
add
cmp
mov
and
pushf
in
imul
adc
jmp
add
xchg
test
mov
mov
and
movaps
sahf
xor
jns
or
out
push
mov
cltd
dec
repz
jbe
sub
mov
sarb
push
mov
in
jecxz
or
mov
cli
sub
call
push
leave
dec
mov
loope
fdivl
jge
adc
adc
pop
inc
pop
adc
jo
out
std
fstpt
xchg
dec
pop
out
push
inc
das
stos
adc
dec
inc
ret
or
cmc
shl
ljmp
gs
lret
sub
movsb
dec
xlat
dec
shlb
pusha
mov
jge
sti
add
rcrl
nop
dec
adc
mov
movsl
xor
incb
sbb
loopne
adc
andl
cmp
mov
mov
adc
sub
xchg
jecxz
mov
shrl
sub
cmp
push
out
mov
in
xchg
je
aaa
jl
mov
mov
adc
fstpt
mov
sbb
lret
xchg
mov
sub
inc
jmp
aas
push
and
rcrb
inc
cmp
cmc
out
mov
cmpsb
dec
mov
mov
mov
aas
mov
xchg
inc
cmp
add
and
mov
xchg
pop
dec
mov
push
iret
pop
in
pop
mov
push
pop
dec
pop
dec
lret
cmp
xchg
mov
mov
in
decb
mov
sbb
and
add
pop
pop
fadd
addr16
out
idiv
cli
mov
insl
dec
out
repnz
les
cmp
push
mov
or
inc
mov
hlt
inc
call
sbb
adc
dec
jl
sub
sub
sub
inc
jns
sbb
xlat
push
repz
in
decl
dec
mov
xchg
add
stc
jecxz
ja
dec
adc
xor
test
mov
or
mov
fyl2xp1
inc
xchg
cmp
push
push
jl
mov
mov
fwait
sub
stos
repnz
rorl
movsw
inc
fnstcw
cmp
fs
notb
mov
enter
insl
sbb
sarb
in
push
icebp
in
ds
mov
and
leave
fists
jne
adc
xchg
inc
je
lcall
lret
fwait
push
cmpsl
std
dec
dec
inc
leave
ss
ficompl
sbb
js
addr16
jbe
inc
fidivrs
ret
inc
or
mov
lea
shr
mov
lods
sti
pop
pop
sbb
push
rol
lahf
push
pop
cwtl
loope
and
lret
outsb
jl
xchg
mov
dec
dec
fstpt
loope
addb
mov
lods
add
sub
push
fmul
mov
das
push
jns
xor
xor
jae
push
ficoms
adc
lds
dec
les
cltd
adc
lret
jmp
mov
jne
ret
pop
jo
nopl
out
stos
repnz
sbb
mov
or
ds
test
hlt
aam
push
cmp
pop
adc
cwtl
push
sbb
subl
dec
movsb
cmp
aaa
xchg
mov
std
pop
popa
in
lds
inc
xchg
js
and
subl
ss
lds
jne
pop
sub
pusha
or
out
mov
xor
test
dec
es
cli
mov
pop
inc
jnp
in
push
mov
iret
arpl
inc
pop
hlt
cwtl
add
sti
jb
dec
jae
and
es
dec
inc
hlt
push
loope
testb
imulb
xchg
xchg
jo
push
out
imul
and
std
pop
aaa
movsl
icebp
push
mov
cmp
and
stc
mull
dec
pop
mov
jo
jecxz
sbb
scas
jo
and
movsb
push
and
and
stc
mov
aas
outsb
lods
data16
jg
xchg
imul
xchg
mov
push
orl
aad
push
aam
shl
pop
leave
xchg
popf
mov
mov
mov
out
cltd
dec
mov
dec
lods
mov
mov
cli
mov
inc
int
addr16
popf
dec
sub
in
or
arpl
shl
lods
adc
fwait
mov
jp,pt
and
test
test
fisubs
es
cmp
lods
ss
hlt
nop
lds
add
bound
jg
jno
mov
jl
push
jl
push
rcrl
pop
dec
lcall
xor
push
pop
sbb
inc
lcall
dec
adc
mov
adc
loope
push
jo
loopne
push
xchg
cld
flds
fidivs
mov
pop
out
out
loopne
jg
pop
mov
pop
push
movsl
packssdw
add
fdivrs
lret
add
xchg
outsb
xor
in
xchg
push
jmp
mov
dec
push
cmc
mov
xchg
sub
xlat
dec
xor
mov
shlb
pop
out
cmp
enter
inc
pop
ljmp
and
jns
push
out
ja
xchg
xor
sbb
fisttps
mov
out
ljmp
loopne
outsl
outsl
es
xchg
aad
in
jo
popf
aad
jl
push
or
icebp
jmp
into
jg
jae
xchg
jno
mov
das
clc
popa
clc
push
mov
lahf
xchg
inc
jno
inc
aad
mov
add
dec
or
sti
push
mov
daa
fdivrs
sub
popf
je
cmp
mov
pop
jnp
push
xchg
iret
dec
push
flds
loop
out
mov
adc
aad
fs
cwtl
pusha
in
shll
pop
lods
test
xchg
dec
sti
cwtl
and
in
push
gs
pop
sub
cmp
pop
fcompl
mov
aaa
outsl
xchg
pop
cltd
fsubs
hlt
mov
stos
fs
leave
rorb
ss
add
xchg
imul
push
mov
popa
push
pop
icebp
in
sbb
push
push
push
cmp
lret
fcompl
and
mov
enter
ljmp
scas
pop
inc
mov
popa
ret
adc
jno
out
jg
xchg
sub
aad
les
cmp
imul
pop
rclb
or
push
jae
movsl
add
out
mov
imul
dec
das
call
mov
cmp
xor
xchg
push
ret
mov
std
add
adc
push
or
addr16
dec
arpl
sbb
std
mov
bound
pop
mov
jmp
outsb
data16
fnstsw
popa
jp
adcb
or
mov
rcll
xor
inc
mov
adc
pop
sub
push
jecxz
rorb
shr
jge
mov
arpl
inc
dec
and
cld
and
test
mov
bound
daa
fimull
adc
leave
adc
popf
stos
dec
mov
sub
unpcklps
or
dec
adc
int
in
test
shr
and
insl
push
xchg
hlt
and
cmp
mov
jae
inc
adc
push
movsl
incb
sbb
sahf
sub
cmp
lods
jnp
das
nop
lods
xchg
or
jne
or
not
sub
out
fisttpll
idivb
sti
ficoml
es
pop
imul
adc
mov
push
out
add
dec
fwait
int3
andb
jne
test
jnp
pop
mov
loopne
dec
pop
inc
xchg
aaa
lahf
scas
jle
mov
gs
and
mov
stos
add
repz
leave
pushf
fcoms
lods
rol
adc
add
sub
add
cmp
divb
add
aas
mov
inc
adc
insb
fdivrs
xor
or
bound
loopne
aas
inc
shll
sbb
sub
pop
hlt
push
sbb
daa
faddl
or
cmp
mov
or
inc
ret
movsl
mov
xchg
xor
adcl
jbe
push
lcall
lods
insb
sbb
mov
push
mov
lds
aam
cs
gs
divl
fcomp
icebp
es
mov
push
sbb
or
pop
lret
mov
sahf
int3
mov
fadds
call
mov
mov
in
jne
dec
in
stos
xor
fs
lea
dec
inc
daa
lcall
add
fadds
add
mov
pop
sahf
cmp
xor
xchg
pusha
loop
push
scas
mov
aad
jns
or
nop
pop
outsb
xor
push
mov
xchg
inc
xorb
add
sub
call
push
xchg
stos
pop
ljmp
sbb
pusha
mov
lret
push
ja
dec
xor
jno
pop
mov
sub
icebp
sub
sub
aad
xor
neg
inc
in
gs
mov
loop
xchg
fldt
mov
xor
leave
cmpsl
lahf
popa
mov
and
lock
in
pop
inc
jmp
inc
pop
mov
jb
dec
lahf
aad
cmpl
aas
insl
and
bound
decb
daa
aad
jge
sbb
push
xlat
out
sti
subb
sahf
scas
pop
cmc
mov
rorl
stc
cld
cmp
pop
mov
mov
sub
pop
xor
popa
movsb
insl
push
cmp
xor
xorb
jno
inc
xor
xchg
popa
sub
outsl
sbbl
push
and
sbb
out
xor
jmp
jbe
movsl
add
leave
scas
shl
es
outsb
pop
inc
or
xchg
mov
sub
sahf
pop
push
jl
xchg
imul
jle
cmc
mov
jle
clc
ret
iret
mov
mov
lds
ss
faddl
lret
lea
xor
mov
pop
addr16
lahf
out
loop
movsb
scas
pop
pop
test
jo
jge
xchg
add
inc
cli
jge
add
shr
pusha
in
aad
mov
or
test
subps
dec
xor
mov
iret
xchg
popf
push
mov
mov
ffree
jns
jp
ret
icebp
lret
push
push
or
ja
mov
adc
insb
jmp
js
push
dec
mov
cmp
sub
sub
push
test
xlat
pop
sbb
dec
dec
fs
leave
adc
clc
push
dec
sbb
insl
movsb
pop
bound
mov
lret
push
xor
lea
mov
mov
les
imul
lds
mov
mov
cmp
clc
enter
movsl
orb
push
xor
adc
sbb
jl
ret
mov
mov
ja
jne
mov
or
iret
push
push
pop
mov
loopne
sbb
nop
xor
pop
movsb
cmpsl
cmp
out
jae
mov
mov
cmpsb
push
or
mov
push
xlat
ljmp
xchg
cmp
pop
xchg
ret
adc
push
cld
je
in
sbb
mov
in
je
push
adc
out
cltd
cmp
sahf
nop
adc
sbb
sahf
das
stos
mov
je
mov
out
inc
sbb
push
push
aas
lock
inc
push
push
xlat
enter
sti
and
ds
bound
ret
stc
ss
test
aad
bnd
fstl
jno
sbb
fildl
add
push
daa
ds
mov
jb
inc
ficoml
xchg
fdivr
mov
inc
inc
add
test
cmpb
xchg
dec
mov
inc
int
into
ret
and
insb
mov
int3
sbb
pop
enter
push
mov
int3
fiaddl
push
in
mov
fpatan
fs
push
or
imulb
jg
fwait
mov
xlat
test
and
scas
dec
xor
jle
loop
into
sub
iret
xchg
push
adc
pop
jo
mov
adcb
mov
mov
dec
int3
sbb
and
shll
daa
jnp
adc
mov
mov
rcrb
xor
leave
int3
cmp
filds
inc
pop
shlb
fnstenv
sbb
test
jno
pop
xchg
div
leave
test
inc
fmuls
pop
jecxz
and
inc
or
mov
mov
int3
shrb
mov
add
lret
sbb
pop
popf
loopne
dec
leave
sbb
pop
negl
inc
mov
adc
ljmp
dec
adc
in
dec
cmp
pop
out
test
inc
inc
and
filds
push
out
shrl
enter
cmp
inc
sbb
stos
lds
dec
repz
jmp
pop
std
push
mov
inc
xchg
test
xorb
push
data16
add
ds
ja
or
mov
xlat
sarl
enter
jg
and
or
jmp
jg
or
jbe
xor
or
mov
movd
xchg
ret
iret
jno
shrl
scas
rorb
jno
movl
scas
adc
dec
lahf
sbb
mov
xor
arpl
and
jmp
xchg
cmp
int3
xchg
xor
jb
out
pusha
inc
aad
sbb
jno
mov
lds
arpl
inc
add
lods
fwait
add
test
std
dec
ja
ret
lret
cli
rcll
movsb
sbb
ss
aaa
dec
sub
sbb
pop
dec
test
push
dec
mov
push
fidivl
outsl
jne
cmp
data16
mov
repnz
fidivl
pop
ret
mov
icebp
jg
cmp
out
pop
das
add
add
aad
cmp
icebp
push
in
js
sar
cmp
or
iret
mov
and
cmp
adc
and
sbb
js
les
cmp
jno
fwait
outsb
xlat
pop
pushf
lcall
jno
repz
push
pop
mulb
mov
arpl
shlb
xchg
lods
or
or
jns
popf
jmp
clc
das
mov
push
sbb
lcall
pop
push
cmp
jmp
stos
cmp
testl
adcl
adc
sbb
or
aad
push
xchg
aaa
leave
sub
pop
call
call
pop
pop
mov
jp
shrb
jae
xcrypt-cfb
cmpsl
out
inc
stos
add
xchg
decl
or
loopne
mov
popf
mov
shrl
jae
outsl
lds
ret
inc
mov
and
ljmp
repz
jge
sti
xchg
andb
jb
mov
out
mov
jbe
cltd
insl
pop
fstp
mov
pusha
in
cmpsb
mov
jns
outsb
pop
ja
cmp
push
pop
jge
mov
mov
or
mov
leave
pushf
jecxz
jb
add
jmp
jmp
lret
sbb
add
mov
add
sahf
rclb
into
lods
fsubs
xchg
push
nop
inc
xchg
xor
mov
dec
aad
icebp
inc
push
pop
lret
call
mov
ja
frstor
mov
pop
dec
loop
sbb
daa
add
subl
cmpsl
sarl
pop
inc
sti
pop
andps
loop
mov
sbb
mov
fadd
fisttpl
jge
adc
lea
cmp
xchg
mov
stos
and
imul
add
test
bnd
outsl
cmp
shlb
jb
rorl
xor
xor
mov
pushf
stc
mov
push
add
int
inc
scas
push
xlat
xor
je
popf
dec
imull
mov
and
inc
repz
xchg
add
and
sbb
imul
fdivrs
popa
sbb
sti
jp
inc
mov
pop
mov
push
out
loope
adc
or
xchg
repnz
cmp
add
push
xlat
sahf
inc
mov
jb
pop
jp
push
mov
xchg
psubw
inc
sub
jle
jnp
dec
js
imul
or
jg
xor
push
mov
add
adc
or
bsf
mov
xor
mov
adc
pop
jl
arpl
adc
cmp
stos
lock
push
sarl
mov
jns
cmp
adc
mov
jo
cmc
insb
mov
push
jle
outsl
outsl
jbe
stc
rcr
out
dec
cmc
cmpsl
dec
lds
pusha
arpl
mov
cmpsb
pop
add
fimuls
stos
pusha
xchg
js
mov
jb
adc
dec
cmp
out
lock
ret
outsb
add
cmpsb
inc
sbb
push
imul
push
pop
mov
les
or
mov
out
gs
sar
ljmp
in
jbe
dec
dec
mov
arpl
test
aaa
addb
cmp
cmp
fildl
sbb
mov
hlt
in
arpl
mov
sbb
push
pop
or
rcrb
xlat
push
scas
jns
shr
mov
movsb
mov
add
or
inc
push
adc
pushf
and
stos
jns
xchg
stos
xchg
pop
jb
sbb
mov
add
scas
pop
jl
rcll
dec
sti
push
xlat
test
lea
adc
in
xchg
imul
aam
bound
push
movb
mov
or
and
adc
pop
int
or
pop
inc
lahf
ret
mov
out
xchg
fs
jmp
sub
pop
dec
pop
inc
sub
sbb
mov
les
test
jo
and
inc
insl
push
in
sub
cmp
outsl
int3
xor
faddp
sub
loop
or
imul
jg
jnp
push
pop
scas
or
add
add
cltd
ret
xchg
int3
std
add
cmc
gs
add
dec
sbb
pop
mov
push
mov
loope
mov
insb
stos
lcall
pop
movsb
and
mov
push
sub
xstore-rng
cmpsl
subl
scas
jnp
fldcw
push
ret
cmp
jno
repz
in
jle
mov
sub
cmp
fs
or
mov
lret
insb
popf
inc
jmp
mov
ret
pop
inc
jmp
fdivrl
test
cmp
xor
sbb
leave
test
push
adc
daa
or
call
mov
test
push
stos
stos
rcrl
mov
sbb
push
out
sti
add
and
and
mov
push
push
push
sub
lret
jo
in
fwait
pop
sti
shrl
add
mov
movsb
aas
push
mov
fnstcw
shll
pop
xor
cmc
std
pop
push
sbb
cwtl
sub
mov
dec
cmp
xchg
bound
pusha
out
inc
pop
mov
pop
mov
pop
js
sbb
push
ss
xchg
add
dec
rorb
pop
pop
stc
or
pop
cs
sbb
push
leave
pop
cmp
mov
insl
outsl
addr16
mov
jecxz
mov
leave
jl
pop
subb
mov
add
in
lret
roll
dec
testl
gs
call
and
repnz
xchg
test
test
negb
push
lret
call
rolb
jmp
popf
sbb
or
into
xor
pop
push
pop
push
mov
cmovge
test
in
jne
negb
dec
std
pushf
gs
sbb
xchg
add
in
xchg
call
push
scas
bound
call
push
sbb
sbb
mov
xchg
sarb
or
inc
ljmp
xchg
cs
scas
pop
mov
fs
hlt
cli
add
mov
jno
pusha
int3
addl
dec
sub
push
inc
inc
fnstcw
xor
sub
pop
popf
jno
flds
push
sbb
inc
push
mov
jne
mov
cli
aad
xor
sbb
test
mov
fwait
scas
cwtl
xor
add
into
lea
mov
pusha
test
pop
andb
dec
sub
out
loopne
lcall
xchg
mulb
iret
loope
cmp
pop
cmp
in
mov
xchg
mov
dec
movsb
sbb
dec
std
int
fstpt
sbbb
lods
loope
cmc
pushf
lahf
insl
xchg
dec
in
in
or
jle
push
test
das
mov
sti
sbb
xchg
jbe
ret
iret
cli
cmpsl
jne
clc
add
sbb
jp
sahf
xchg
pop
push
iret
shl
insl
jmp
pop
stc
hlt
mov
or
mov
sub
push
test
dec
incl
dec
jg
in
adc
jbe
jo
xchg
popf
imul
in
bound
inc
and
jne
ja
xchg
push
hlt
out
ds
addr16
lahf
xor
movsb
add
pop
jl
dec
in
nop
test
xlat
repz
out
xor
hlt
cmp
pop
and
popf
mov
sbb
in
lret
mov
xlat
xchg
in
and
adc
cli
iret
xor
sti
fdivl
dec
push
push
mov
addr16
out
stos
sbb
enter
jge
cli
stos
enter
mov
xlat
mov
outsl
inc
scas
out
add
fsubs
mov
bound
push
dec
xchg
fwait
mov
sbb
stos
dec
sarl
popf
mov
jle
fincstp
pop
lock
push
lahf
dec
cmpsb
sti
loopne
xchg
ret
mov
fisubs
push
jp
mov
jns
dec
jnp
ret
repz
and
or
xor
dec
mov
sahf
push
popf
jae
mov
gs
call
cmpsb
or
mov
pop
dec
fcompl
mov
es
arpl
and
xchg
mov
je
pop
ljmp
popf
in
jb
sbb
enter
jmp
or
fcmovb
fists
mov
popa
cmp
and
adc
addr16
push
sahf
mov
inc
mov
dec
dec
ljmp
std
mov
dec
je
cmpsl
push
hlt
fisubrs
arpl
mov
jnp
adc
lds
loope
sbb
in
inc
and
mov
mov
jns
push
cmc
jecxz
out
insl
sbb
imul
mov
mov
mov
cltd
jl
cmovp
mov
pop
jo
sub
jne,pt
icebp
ja,pt
outsb
ja
popa
mov
adc
std
gs
mov
or
sbb
or
inc
sbb
mov
imul
movsb
bound
sti
aas
xchg
in
adc
jbe
dec
movsb
inc
ljmp
adc
jmp
fs
and
das
test
mov
fs
loop
sub
inc
sarl
pushf
adcl
sub
or
outsl
jbe
pop
cwtl
rorb
or
sahf
xchg
arpl
lds
jp
mov
punpcklbw
popf
and
sti
stos
jl,pt
pop
int
push
sbb
leave
jno
es
mov
mov
dec
or
pop
je
mov
cltd
dec
pop
xor
cmp
lahf
das
cmp
mov
jo
mov
nop
lock
cmp
push
out
sub
push
mov
cmp
sub
repnz
movsl
sbb
aas
jmp
xchg
stos
add
notl
push
xor
cmp
fs
call
in
aam
jbe
in
sub
out
rcl
sbb
loop
mov
daa
jno
pop
push
aaa
jb
inc
add
add
push
jns
clc
or
out
sbb
inc
xchg
xchg
out
js
sub
jae
mov
test
imull
xchg
mov
cmc
sbb
add
cmpsl
lret
sbb
jb
mov
insl
and
addl
adc
in
cmc
ret
inc
addb
mov
movsl
repnz
stos
xchg
jb
jbe
test
sbb
dec
add
movsl
xor
sbb
in
movsb
rorl
pop
push
mov
movsl
dec
in
sbb
insb
jbe,pt
movsb
sub
gs
cmp
rclb
cwtl
ret
shl
adc
sbb
mov
aas
cmp
test
mov
mov
ds
jbe
pushf
sub
int
pop
test
adc
clc
imul
cmp
std
lcall
xchg
sbb
xor
xor
cld
ds
jb
push
in
in
push
xchg
nop
arpl
testl
xor
addr16
rolb
pushf
stos
add
mov
push
inc
shlb
push
mov
popa
adc
lret
call
sbb
cmc
jecxz
lcall
xor
dec
inc
fidivl
je
pop
mov
pop
test
sbb
outsl
xlat
shrb
xor
jmp
pop
int
out
cwtl
push
dec
jne
xchg
xchg
or
mov
mov
jns
loop
pop
cli
dec
and
jp
filds
int3
adc
lods
mov
xchg
sbb
hlt
cli
xor
addr16
pusha
mov
jno
jae
mov
pop
cld
push
adc
mov
dec
lods
hlt
and
dec
xor
movsl
pop
or
ficompl
jbe
sti
push
mov
jmp
xchg
push
cmpsb
mov
cmp
mov
lea
jnp
popf
jo
sub
dec
dec
pop
mov
dec
jle
push
mov
pop
in
adc
lret
leave
data16
sbb
andl
inc
cli
xlat
mov
outsb
xlat
cmp
mov
nop
sub
inc
and
jl
mov
xor
cs
jo
in
add
xchg
ror
xor
cmp
or
or
add
stos
aas
xchg
inc
mov
imul
push
ret
pusha
pusha
repz
xchg
std
inc
out
fwait
es
sarb
outsl
lds
sbb
or
rolb
js
cli
push
xor
mov
and
scas
test
in
dec
sbb
xchg
push
lods
lock
sub
stos
pop
push
nop
xchg
push
in
scas
jns,pt
fiaddl
test
movsl
xchg
fisubrl
cmp
hlt
std
inc
int
fmull
imul
add
mov
nop
pop
sbb
jo
pandn
ljmp
adc
mov
movsb
int3
insb
adc
sub
aad
cmpb
data16
dec
mov
flds
mov
or
sahf
push
movsb
adc
sbb
cmpsb
jecxz
loope
cs
cmp
into
or
popa
jb
ljmp
jmp
fwait
aaa
dec
jbe
xor
and
sahf
dec
pop
std
dec
aas
insl
arpl
pop
int3
jl
mov
jae
mov
sub
mov
mov
add
in
int
test
xor
xchg
ret
cli
push
popf
and
mov
cltd
pop
lods
iret
xchg
leave
xchg
loope
push
xor
rcrl
add
stos
shrb
xchg
jne
divb
xchg
clc
gs
cmc
dec
cltd
aaa
mov
mov
cli
divl
int
push
sub
push
mov
and
movsl
push
add
lahf
mov
pop
pavgb
sub
adc
loope
int
mov
stc
xchg
jle
divb
mov
test
cmpsb
push
stos
add
lods
fists
jb
popf
cwtl
xlat
pop
or
add
cld
mov
mov
repnz
mov
inc
fnstcw
mov
add
je
mov
repnz
popa
push
and
pop
push
cmp
sub
and
xor
es
sbb
jno
dec
or
fisubs
sub
cmp
lahf
lcall
cmp
mov
scas
xchg
lds
lds
jmp
lds
sarb
add
pop
add
mov
inc
push
je
or
and
fsubl
daa
xchg
arpl
lcall
push
pusha
ds
sbb
mov
dec
xrelease
or
pop
mov
sub
push
testl
aaa
out
into
and
mov
xchg
xchg
test
in
push
pop
xchg
xchg
cld
xchg
and
and
aaa
into
xchg
lods
lods
sbb
add
in
dec
inc
call
cmp
sahf
repnz
cmp
dec
jge
enter
xor
hlt
xor
test
scas
push
loope
mov
scas
insb
cmp
jae
shlb
lcall
mov
add
add
or
out
lret
push
mov
pop
inc
es
xlat
dec
xchg
insb
ret
call
or
push
lock
xlat
jne
lea
loop
aam
push
sub
xchg
mov
test
int3
into
faddl
mov
fcmovne
pop
stos
xor
adc
xor
cli
sbb
pusha
mov
imull
dec
push
sub
pop
jne
sub
ds
test
jno
xor
aas
pop
mov
fdivrs
sbbl
clc
fdivs
repz
and
push
loopne
lahf
stos
push
mov
jns
ds
jg
into
push
test
and
sub
shl
sbb
push
pop
xchg
mov
push
data16
xor
lds
sahf
xchg
test
adc
lds
push
fistl
sub
stc
xchg
bswap
sbb
mov
pop
and
mov
cs
inc
xor
out
mov
jnp
xor
int3
stos
adc
push
mov
mov
jne
into
inc
out
mov
push
adc
dec
dec
xor
pop
xchg
aas
jbe
mov
xor
dec
icebp
push
pop
loope
hlt
xor
fldenv
mov
sub
sahf
cmpsl
mov
jp
xchg
lahf
push
pop
xor
or
xchg
push
xlat
shll
jge
sbb
cmp
sbb
push
mov
rorl
std
xor
cltd
ret
pushf
lock
sbb
cmp
loopne
adc
jno
inc
jnp
mov
sub
sti
mov
scas
in
sarb
repz
mov
ljmp
icebp
fs
js
lret
xor
ror
sbb
push
xchg
les
lfs
or
shl
aas
sbb
andl
mov
clc
mov
shll
in
jae
mov
popf
inc
js
adc
dec
mov
lock
pusha
loop
les
mov
jle
and
icebp
jne
push
sbb
xchg
jp
adc
int
adc
bound
rcrl
inc
sub
mov
xsave
sbb
xor
lret
outsb
les
cltd
fwait
push
fcmovnbe
push
dec
inc
cmp
mov
fiadds
inc
inc
jns
sar
repnz
mov
or
add
adc
pop
scas
dec
sub
sbb
jge
dec
pop
int
repnz
int3
imul
mov
xchg
insl
pop
lret
out
dec
cwtl
dec
push
xor
jp
cmp
ja
cs
out
aas
popa
xor
sub
push
xchg
adc
push
clc
jo
in
into
addr16
orl
ljmp
jle
mov
adcl
push
adc
in
adc
out
add
mov
cwtl
pop
adc
gs
mov
test
sbb
movsl
inc
add
mov
jge
ja
sbb
and
inc
lea
xor
aad
js
clc
pop
in
fstpl
jle
sbb
stc
xchg
cmc
cmc
pop
adc
adc
testb
mov
out
jae
mov
adc
lahf
xchg
mov
xor
iret
push
fdivrl
test
xchg
ss
cmp
fsts
cmpsl
lahf
in
jmp
iret
scas
arpl
sub
and
aaa
pop
or
or
popf
insl
cmpsl
jne
jo
push
jns
cmp
cmc
xchg
aaa
mov
sbb
stos
add
sub
jno
decl
mov
loop
jbe
popa
mov
shll
mov
sub
lret
adc
fcomps
rcr
in
insb
aaa
adc
loopne
insl
cmc
pop
mov
cwtl
imul
pop
jo
jmp
cmpsl
mov
lods
out
pushf
test
mov
es
ret
adc
or
jnp
inc
pop
jbe
mov
and
xor
push
out
or
mov
cmp
scas
add
inc
add
pop
jb
std
mov
jmp
lcall
add
ja
mov
imul
push
mov
cmp
xor
xor
fsubrs
mov
loop
mov
cmp
mov
repnz
popf
ljmp
xchg
das
xor
das
dec
sbb
pop
orl
popa
leave
sbb
pop
lods
pop
insb
scas
pop
push
or
sub
xor
rcrb
int3
inc
je
lret
lret
inc
fstps
add
mov
addb
jno
notl
gs
cmp
fiadds
movsb
xchg
jnp
test
pop
push
sbb
hlt
xchg
rcll
mov
jmp
jmp
mov
mov
imul
es
sbb
stos
push
pop
orl
push
sub
add
sbbl
add
cmc
iret
lods
in
data16
pop
push
push
jmp
inc
jbe
mov
mov
push
ret
stos
cmp
xor
mov
outsb
test
mull
mov
je
lds
movsb
fstpt
shlb
xchg
aad
sub
xchg
test
fdivr
xor
mov
pop
sub
mov
shlb
xlat
push
lret
add
jbe
xchg
sarb
xchg
aaa
mov
mov
cwtl
mov
pushf
int
popa
cld
ds
xchg
xor
jbe
out
xchg
aam
jp
dec
in
out
insb
clc
xor
mov
movsl
lods
xchg
sahf
xchg
pop
xchg
std
mov
lret
mov
cmpsl
xor
loope
test
in
loop
jns
sub
shr
add
dec
repnz
add
add
dec
cwtl
inc
xor
add
mov
push
sub
adc
xchg
xchg
and
push
movsl
mov
lahf
mov
xor
dec
mov
lods
jae
mov
orb
pop
cmp
xchg
mov
xor
and
mov
mov
xchg
arpl
adc
xchg
test
jns
adc
xor
push
cmp
loope
imul
inc
shlb
pushf
insb
lock
pop
mov
sarl
popf
jle
ja,pn
inc
sub
fistl
adc
in
repnz
in
mov
push
negl
sub
js
jg
sub
jae
or
lock
inc
repnz
enter
cmp
mov
fimuls
sub
sub
sbb
lods
pop
inc
xor
loopne
or
cltd
pop
and
fstps
sbb
into
adc
cwtl
loope
je
imul
jns
imul
mov
fnstcw
test
jp
neg
test
adc
cs
cli
lods
cmp
dec
adc
stc
xchg
mov
cmp
popa
fsubrl
inc
xchg
sub
mov
pop
imul
xchg
mov
jo
push
xor
daa
ret
aaa
lret
cmpsb
fwait
add
iret
fstps
fbstp
mov
jle
add
test
jg
ja
dec
fldcw
mov
mov
xor
mov
sub
std
mov
inc
mov
mov
das
cltd
inc
sbb
test
mov
inc
sbb
push
sbb
icebp
test
pusha
mov
mov
jp
insb
scas
fidivrs
jmp
mov
pop
jp
scas
mov
rorb
das
dec
lret
mov
push
or
in
fucom
andl
dec
loop
xchg
sub
addr16
jno
xor
mov
jp
popa
es
enter
test
mov
pusha
push
fimuls
xor
sub
push
push
jno
int3
pop
xchg
xor
cld
sarb
movsb
stos
jmp
cwtl
ret
add
lock
xor
jnp
cs
adc
divb
fcmovnu
gs
mov
push
pop
xchg
int
test
loopne
std
lret
or
xchg
jb
adcb
sub
inc
pop
inc
xchg
ds
pop
sti
enter
stos
jae
fisttpll
testl
push
test
mov
mov
aaa
mov
sbb
leave
enter
aaa
movsb
clc
and
push
and
add
mov
aaa
movsl
out
xor
pusha
scas
out
movsb
adc
lret
add
dec
adc
push
xor
imul
inc
push
or
cmp
push
jle
jne
in
jb
mov
mov
adc
pop
movsl
or
outsl
call
bound
nop
dec
xor
fildl
enter
shlb
push
out
clc
xor
adcb
xchg
test
cli
add
push
scas
imul
idivb
xchg
je
daa
sbb
popf
pop
mov
lahf
inc
mov
testb
lock
xchg
test
xchg
hlt
lcall
and
xor
bound
pop
repnz
cmp
inc
inc
clc
dec
push
daa
leave
ret
mov
push
push
outsb
mov
or
scas
lret
jnp
pusha
jae
and
aas
jmp
jb
addr16
push
loop
and
lods
clc
fldcw
push
mov
sub
push
mov
fiadds
clc
outsl
push
rclb
pushf
stos
mov
cs
mov
stos
int3
outsl
pop
enterw
lods
mov
rolb
xor
test
outsl
and
cmc
out
out
loope
xchg
xor
loopne
movsb
not
push
xchg
xor
cli
pop
add
call
dec
stos
mov
push
divb
cmp
stos
pop
hlt
mov
adc
mov
mov
xchg
or
jns
in
cmp
lret
repz
push
hlt
jg,pt
and
add
in
jne
cmp
add
adc
mov
fucomi
loope
inc
jle
push
andl
fs
push
jns
mov
mov
stos
add
lds
inc
sbb
cmp
xchg
mov
mov
cld
pusha
sti
mov
jae
cmp
mov
pop
pop
add
push
mov
rorb
sbb
xchg
arpl
iret
jmp
pop
popa
sub
ret
aam
aaa
fs
nop
adc
sahf
cmp
enter
and
in
sub
xchg
in
cmc
sub
push
ret
mov
lods
lock
and
in
hlt
stos
inc
jnp
loope
mov
mov
xchg
sub
xchg
push
inc
pop
enter
inc
aam
add
mov
test
xor
movsb
push
rorl
ljmp
into
push
sbb
dec
lods
outsb
cmp
lods
out
pop
stos
in
ja
and
mov
push
push
cmpsb
inc
fimuls
negb
test
or
ds
mov
jge
scas
cmpsl
mov
pop
fsubl
adc
repnz
xchg
or
out
pop
jl
pop
lcall
jns
mov
shll
jmp
aam
pop
getsec
or
xchg
orl
mov
inc
inc
int
insl
imul
aas
addr16
rolb
or
or
push
je
mov
xchg
jge
adc
xchg
sbb
jg
dec
or
imul
add
jmp
cli
das
ja
jmp
stc
popf
adc
xchg
mov
jp
mov
out
mov
lret
or
push
es
int
addr16
arpl
jp
mov
xchg
ror
pop
ret
cmp
lds
cmpsl
cld
and
jae
sbb
jecxz
int3
and
mov
andb
jbe
cwtl
jbe
mov
sub
pop
or
mov
mov
dec
cmp
xchg
stc
xchg
dec
imul
jecxz
cmp
mov
aad
out
adc
xchg
cmpsl
les
and
mov
shrl
jmp
push
inc
lock
cmp
xchg
sbb
les
cld
or
adc
fsubrs
sbb
mov
clc
sub
xor
and
mov
out
cltd
xchg
xor
test
pop
lods
imul
push
out
cmp
mov
push
imul
push
shl
dec
mov
repnz
jne
dec
sub
jb
or
mov
xchg
xchg
outsl
mov
lods
adc
xchg
push
xor
sbbb
add
fs
cmp
ret
xchg
jle
jg
xor
xor
lahf
outsb
insl
lds
jmp
dec
fmulp
repz
std
mov
or
cwtl
jne
scas
mov
shl
fucomi
dec
adc
mov
and
mov
inc
dec
adc
aaa
ljmp
jb
xchg
mov
scas
pop
mov
fwait
in
popa
mov
outsl
cmp
xchg
pop
push
daa
sbb
and
dec
sub
adc
pop
mov
notl
jge
ljmp
aaa
pop
cmpsl
shrl
enter
cmpsl
fdivrs
std
repnz
mov
xchg
pop
push
sub
cmp
mov
jle
and
addr16
fbld
gs
or
jnp
je
mov
outsb
adc
jbe
aad
push
int3
call
je
mov
push
ljmp
mov
icebp
and
dec
mov
aaa
dec
mov
or
fsubrl
mov
cmp
pusha
fs
nop
pop
mov
cmp
pushl
dec
jle
ljmp
js
scas
pusha
fidivs
sbb
jp
xor
scas
in
xchg
rcl
push
add
push
cmpsb
push
or
insl
and
outsl
xchg
ret
aaa
add
sub
jb
ret
dec
lret
or
call
mov
sub
lcall
push
mov
sbb
adc
hlt
inc
adc
push
xchg
fs
pushf
incb
add
popw
jae
pop
jae
loopne
cmp
or
xlat
xchg
out
sub
aaa
out
add
mov
es
inc
mov
scas
cmp
cmp
sti
stos
or
jl
dec
dec
out
inc
mov
ds
jmp
mov
into
cltd
shlb
push
dec
mov
gs
inc
push
pushl
stos
fmuls
pushf
jbe
imul
ret
clc
mov
notb
push
pop
xlat
jb
outsb
mov
jbe
mov
aaa
pop
out
add
add
xor
in
imul
ljmp
mov
sub
pop
mov
jae
mov
dec
xchg
scas
jb
push
aaa
mov
mov
fildl
outsl
sar
inc
lret
fsubr
push
and
dec
repnz
ds
inc
sbb
jle
cmpsb
or
rcrl
test
inc
push
mov
inc
pop
pop
rcrl
adc
and
mov
lock
jno
cmp
enter
or
dec
imul
scas
cli
je
rclb
add
adc
loope
pop
mov
out
mov
cmp
inc
lds
ret
fnstcw
into
in
mov
jge
sbb
fs
sbb
outsb
mov
mov
xchg
imul
jl
rol
ss
insb
cmp
pop
add
mov
mov
sub
imul
adc
cld
cmp
cmpsl
leave
je
add
push
out
xchg
sbb
xor
sub
call
es
daa
jae
data16
push
push
aad
mov
adc
adc
cld
mov
xchg
push
je
mov
inc
mov
xor
pop
inc
mov
fcoms
stos
dec
lea
aaa
imul
sbb
movsb
arpl
ficoms
imul
arpl
test
imul
insl
into
sbb
sub
push
fisubl
sub
scas
xchg
and
stos
sub
dec
stc
enter
push
stos
xchg
lahf
sbb
cwtl
enter
stc
dec
dec
in
lret
mov
icebp
or
cltd
bound
push
xor
test
or
ljmp
out
jmp
push
pop
jg
jl
and
sarb
fwait
cmc
stos
sub
data16
mov
adc
jmp
ss
dec
popa
stc
fisttpll
or
mov
and
or
jno
es
rorb
lahf
pop
add
sbb
repz
adc
add
xchg
cs
sbb
sbbb
xlat
mov
mov
cltd
xor
xchg
mov
add
push
sbbb
cs
js,pn
decl
mov
daa
call
js
mov
push
pusha
shl
push
mov
push
push
sahf
popa
movsl
jbe
ljmp
jle
repz
add
push
dec
sbb
lret
xlat
xchg
and
int
aad
inc
sbb
in
cmpsb
int3
andb
sub
adcb
jl
dec
mov
sbb
mov
addr16
sub
call
lock
pop
dec
mov
fsubrl
xchg
push
lret
mov
mov
xchg
add
outsb
push
out
inc
pop
mov
hlt
inc
pusha
push
out
pop
push
sbb
cmpsl
add
shlb
sbb
push
das
int
imul
or
inc
dec
or
jge
xor
ja
cmp
jno
lahf
into
movsb
sbb
loope
add
pushf
and
xchg
enter
je
pop
cwtl
adc
dec
enter
jmp
cmp
out
out
fsubrs
mov
rorl
pop
gs
xchg
adc
rcll
sti
fsubs
pop
cmpsb
in
mov
mov
push
lahf
dec
and
push
lcall
std
or
into
in
and
xor
pushl
shll
mov
repnz
adc
ja
xor
lcall
insb
mov
jb
lock
inc
sar
xchg
addr16
push
and
stos
out
das
mov
rcl
dec
loop
mov
xchg
cmp
cmp
inc
add
mov
test
mov
loop
lret
test
mov
push
or
or
dec
sbb
ja
sub
mov
fdivrl
test
or
jp
mov
lods
fists
in
dec
outsb
xchg
cmp
mov
std
add
in
sahf
popf
or
adc
es
jo
xor
aad
add
loopne
aas
cmpsb
jne
data16
xchg
sub
push
iret
cmc
lret
or
addl
xor
inc
jp
imul
data16
dec
cld
mul
push
fidivl
in
xchg
bound
dec
mov
pusha
xor
arpl
xor
push
rcr
xchg
mov
sbb
jnp
outsb
add
mov
leave
pop
xchg
push
and
rorb
loop
cwtl
mov
cmc
fsubl
rolb
cmc
xchg
xchg
or
sub
stc
mov
mov
imul
jg
in
push
loopne
aad
sbb
fldl2e
nop
fs
rorb
popf
std
das
mov
or
lea
adc
imulb
lock
and
sub
push
ds
dec
inc
out
sub
cmpsl
push
dec
cmc
clc
push
and
lret
std
mov
sbb
stos
push
add
repnz
divb
sub
lahf
add
jns
daa
xchg
call
mov
popa
outsl
iret
int3
call
mov
adc
loopne
push
jge
mov
cmc
mov
dec
pop
mov
shl
pop
cmpsb
adc
sub
lods
jge
loope
repz
lds
iret
aam
in
repz
pop
int
cmp
sahf
push
inc
popf
imul
aas
xchg
mov
out
lea
xchg
hlt
push
adc
cmp
hlt
js
dec
inc
xchg
pop
shlb
push
mov
inc
stos
pusha
fcmovnbe
imull
mov
sarb
popa
stos
and
enter
jne
and
loop
jge
cmc
jge
std
and
jno
outsl
fldenv
and
andb
daa
jbe
out
in
push
in
adc
push
cltd
xor
push
push
movsl
jnp
mov
inc
idiv
jmp
nop
mov
rcll
cmp
cmpsb
inc
fwait
or
insb
movl
leave
jl
sahf
in
xchg
push
add
mov
inc
or
sbb
push
xor
mov
mov
mov
xchg
test
xchg
stc
rcll
std
sti
sbb
sbb
loope
push
test
mov
dec
xor
es
idivl
pop
leave
mov
fcmovbe
insb
call
sbb
add
mov
mov
sbb
fnstsw
sbb
ficomps
jmp
enter
jns
xorl
sbb
jne
sbb
dec
stos
pushf
jno
loope
dec
sub
pushf
cmp
mov
or
dec
outsl
xchg
in
adc
jnp
cmp
xchg
pop
xor
pushl
or
lcall
push
bound
pop
cwtl
jg
ss
sbb
aaa
jns
xchg
sbb
sahf
jae
inc
pop
ficompl
loope
in
adcl
sub
cld
int
jb
xor
xchg
mov
and
mov
cs
mov
sbbl
fwait
jnp
stc
xchg
sub
clc
jg
aad
dec
lods
andl
imul
mov
mov
mov
mov
mov
jle
loopne
aad
popa
adc
mov
test
andl
inc
es
push
jo
inc
sub
mov
psubb
sub
push
jl
mov
sbb
stc
dec
fsubs
adc
pop
or
adc
pop
shrb
lock
loop
loop
lds
and
shlb
jns
cltd
dec
aam
stos
into
mov
clc
xchg
inc
mov
lods
dec
pop
loop
sub
push
sub
aaa
loope
mov
mov
out
test
inc
ja
mov
xchg
mov
movsl
fchs
repnz
jnp
loop
insb
roll
out
or
in
mov
pop
inc
pop
ljmp
sub
cmp
test
lods
xchg
mov
jle
into
lods
pop
sbb
inc
push
repz
outsb
xor
jmp
arpl
cld
popa
mov
jbe
repz
data16
psubb
or
mov
mov
dec
insb
push
arpl
xchg
or
pushf
and
mov
cmp
xor
push
idivb
cs
dec
lds
push
movsb
sbbl
or
xchg
mov
bnd
or
jg
inc
stos
mov
int
scas
bound
jne
in
and
push
xchg
cmp
subb
sarb
sbb
mov
aam
xchg
or
sub
popl
dec
xor
push
mov
cmp
movsb
xchg
xorl
scas
mov
or
jbe
push
or
or
push
insb
movsl
pop
sbb
xchg
xchg
leave
lock
fwait
and
push
sti
fwait
inc
dec
and
xor
bound
mov
pop
push
cmpsb
sbb
icebp
pop
fs
xchg
icebp
pop
pop
imul
loopne
fwait
and
hlt
dec
xchg
add
cmp
jno
cmp
gs
add
jg
sar
inc
not
xchg
mov
xchg
jns
outsl
sarl
imul
or
test
je
fs
sub
mov
mov
cmp
mov
mov
insl
and
fsub
jmp
pop
or
jmp
jp
pop
scas
jb
xor
cmpsb
and
xor
sbb
adc
sub
in
and
inc
xor
sub
cmp
pop
mov
out
add
and
out
mov
jb
fwait
mov
scas
mov
ror
inc
mov
aaa
loop
js
dec
lret
arpl
push
adc
or
outsb
cwtl
std
fiadds
mov
mov
test
sarl
push
xor
xor
inc
pop
orb
jmp
test
xor
jmp
xchg
sti
mov
call
mov
xchg
cmp
adc
or
xchg
inc
push
ret
fwait
inc
mov
sarb
fs
stos
or
dec
cmc
jae
jae
and
addr16
xchg
pop
adc
jno
cmp
popa
cmpsb
xor
cmp
mov
jae
jbe
cld
int3
sbb
data16
inc
mov
and
cltd
rsm
in
mov
enter
or
jle
add
popa
dec
stos
push
fs
add
xorl
clc
adc
or
insb
cmp
sub
pop
push
or
pop
push
cmp
hlt
pop
aaa
or
mov
xchg
sbb
sbb
ljmp
stos
or
mov
cli
jbe
and
cmpl
les
out
xchg
add
adcb
mov
in
into
ljmp
scas
sti
ret
int3
mov
test
out
xor
hlt
and
pushf
movsl
pop
in
or
out
or
movsl
pusha
or
xor
mov
pop
scas
outsb
mov
mov
cmp
fists
and
int3
dec
scas
adc
or
xor
movsl
nop
sahf
inc
lahf
inc
xor
cs
in
cmp
repnz
dec
stos
add
mov
clc
aad
pop
mov
jns
cwtl
repnz
inc
faddp
fisttpll
imul
bnd
mov
rcll
xor
dec
ljmp
pop
sbb
xor
lods
sub
in
mov
cltd
dec
sub
rclb
xchg
les
jle
push
xchg
inc
je
sub
mov
mov
push
enter
ja
or
movsb
push
push
ret
inc
ret
in
push
cs
inc
pop
add
out
push
mov
xchg
daa
cmp
jge
sbb
mov
sub
sbb
pop
and
jle
inc
gs
mov
inc
cmp
jle
imul
hlt
or
loopne
pop
negb
jmp
push
xchg
gs
mov
pop
cld
fbstp
nop
popa
jbe
fs
mov
outsl
mov
jno
jle
daa
js
xchg
fimull
sbb
inc
or
jmp
das
jl
outsb
sahf
test
push
add
push
outsl
hlt
mov
ds
dec
pop
lcall
xlat
sub
xchg
sbb
cmc
mov
or
push
inc
cwtl
adc
cli
cld
fsubrs
inc
out
mov
roll
pop
rorl
cs
imull
lock
cmp
jp
cmp
jp
ja
add
outsl
add
icebp
loopne
inc
fiaddl
lret
or
sub
xchg
xor
xchg
add
lock
cli
gs
in
inc
adc
aaa
dec
in
insl
leave
mov
sbb
popa
lock
fadds
sub
outsl
and
mov
add
add
or
pop
or
leave
hlt
scas
add
push
adc
inc
pusha
mov
test
fbstp
sub
les
push
pop
aad
sti
mov
mov
mov
enter
inc
mov
pop
sub
and
in
dec
lret
lcall
fwait
xor
fnstenv
jbe
sbbb
adc
mov
push
test
clc
add
rcr
int
insl
cmp
mov
pop
sbb
aad
sbb
cmpsl
enter
into
adc
and
push
sti
mov
mov
pop
push
jae
or
xchg
inc
sbb
mov
push
iret
pushf
mov
xchg
sbb
aas
jmp
leave
ficoms
rcrl
mov
lcall
jo
pop
std
dec
sbb
int
and
shrb
mov
sub
xchg
jno
jg
dec
fidivl
fs
lret
test
les
ljmp
jne
mov
dec
xchg
xchg
arpl
lock
sbb
fsubr
mov
xor
stc
sbb
test
idiv
inc
dec
loopne
adc
scas
or
pop
idivb
cmp
xchg
add
sbb
test
les
push
pop
cmpsb
pop
dec
jmp
shlb
push
xor
cmp
mov
popf
sub
pop
inc
lret
fimuls
shll
fists
dec
rolb
gs
jmp
or
and
cmp
aaa
arpl
les
sub
fs
sbb
or
and
xor
inc
es
insb
icebp
das
xor
rcl
add
ficomps
sbb
or
lods
loopne
mov
inc
adc
mov
test
xor
xchg
push
loop
subb
xor
xor
and
add
or
xchg
out
push
rclb
and
xchg
mov
sbb
dec
mov
decw
in
fisttps
fcompl
mov
addr16
ljmp
out
mov
adc
in
cmp
jge
sbb
test
push
adcb
push
and
aam
jge
dec
movsl
ss
lds
push
das
adc
dec
inc
std
repnz
jecxz
leave
pop
jno
pop
je
sbb
in
jo
sbb
test
xlat
pop
or
ret
aad
push
jmp
shrl
movsl
sbb
adc
in
lret
icebp
fsts
mov
negl
shr
push
ja
add
xchg
jge
mov
jl
dec
jp
movsb
pop
mov
cmp
push
dec
popa
popf
mov
or
int3
jae
jmp
mov
jo
movsl
int
add
mov
cmpsl
imul
pop
sub
pop
mov
fdivs
sub
sub
jns
cmc
xchg
aad
or
mov
sbb
adc
sarb
insl
ret
sub
or
mov
iret
mov
fidivs
xchg
mov
shll
jno
cld
inc
mulb
lret
data16
ret
bound
stos
outsl
jl
xchg
mov
pop
rorb
inc
push
in
negl
fs
movsl
js
xor
test
jne
adc
add
mov
sub
jmp
adc
sbbb
test
ss
into
stc
fmull
xchg
in
mov
lea
jno
pop
or
test
jb,pt
jae
pop
dec
push
or
stos
dec
vpandn
add
sahf
pop
sar
mov
cmpb
adc
push
cld
les
fwait
lods
or
das
mov
xor
das
ss
pusha
or
mov
xor
add
dec
loopne
cmp
nop
or
cmp
or
dec
jns
pop
jecxz
mov
push
mov
fstps
push
stos
sub
les
ret
pushf
jb
lods
ficompl
add
pop
lahf
inc
loope
repz
sub
rolb
clc
out
repnz
lock
popa
mov
cmp
mov
xor
ljmp
mov
push
and
shr
pop
lahf
xchg
mov
and
clc
cmp
idivl
xchg
outsl
inc
adc
dec
repz
out
mov
lea
inc
inc
clc
aas
clc
mov
lods
and
fwait
push
rorl
sbb
mov
add
mov
adc
fdivl
xchg
mov
outsl
jg
leave
mov
xor
fmuls
shlb
and
sbb
fs
add
mov
mov
pop
lods
or
mov
iret
pop
and
dec
clc
lds
xchg
out
xchg
mov
jno
push
sbb
fxch
and
dec
aam
bound
imul
sahf
dec
call
xor
popf
pop
insl
mov
jbe
xchg
test
cli
or
pushf
cmpsb
sub
jmp
xor
mov
les
push
jp
mov
pop
or
or
mov
lock
sahf
xor
fstpt
ljmp
or
jmp
cmpb
leave
mov
and
push
jnp
enter
and
loop
mov
jbe
xchg
mov
ds
xor
sub
sub
xor
cs
mov
jae
inc
cli
hlt
pop
adc
test
sub
cmp
dec
jae
das
mov
lea
mov
cmp
imul
in
loope
mov
mov
mov
and
mov
sbb
and
dec
jne
inc
in
daa
lods
xor
jl
inc
imul
adc
movsl
add
into
dec
mov
pop
addr16
mov
rcll
mov
or
cmp
push
aad
data16
ss
sahf
in
push
gs
repz
aas
or
bound
ss
mov
dec
xor
fimuls
in
and
lods
mov
pop
ljmp
lcall
xorl
push
push
push
aas
jo
das
mov
xchg
jge
int
out
pop
test
mov
movw
mov
aas
in
and
sbbb
sbb
out
dec
sti
mov
add
jbe
loopne
je
inc
mov
xchg
lahf
jnp
hlt
fwait
adc
cld
jmp
jnp
out
inc
xchg
xor
jb
call
cwtl
mov
mov
outsb
dec
fs
enter
jle
cli
or
mov
push
mov
dec
and
fidivl
repz
push
jne
pop
jmp
cmp
mov
je
sub
add
push
std
lds
jl
dec
insl
out
mov
cmp
mov
push
dec
and
mov
sbb
inc
in
xchg
adc
addr16
jg
inc
jns
xorl
xor
stos
shlb
das
mov
mov
or
mov
mov
mov
aas
dec
je
dec
leave
cmp
pop
rcll
aad
and
fs
push
ds
dec
inc
cmp
mov
test
pop
arpl
or
pop
ljmp
fcomps
add
loope
and
dec
in
int
inc
movl
inc
popf
mov
dec
in
mov
imulb
mov
mull
mov
addr16
cmp
ja
cmp
aad
scas
push
jns,pn
out
lds
pop
sub
push
loope
into
add
pusha
xor
add
add
xchg
cmp
lcall
and
or
ds
lock
jns
stos
test
cmp
cmp
in
push
pop
dec
fidivrs
mov
aaa
push
in
fsubl
fmulp
mov
mov
nop
cmp
cmp
xor
and
iret
std
xchg
push
cmp
testb
mov
inc
dec
sub
je
jle
int3
movl
or
push
je
jmp
adc
aad
sbb
mov
fisttpll
lcall
lock
aam
cwtl
shll
jl
in
lods
add
xor
into
out
rcl
or
insl
dec
dec
sbb
dec
dec
pop
push
xchg
mov
fstps
inc
jo
push
push
mov
jb,pt
dec
loopne
das
stos
lock
jno
jp
adc
subl
dec
jle
mov
popl
jne
add
loop
ss
pop
repnz
hlt
fsubrs
ja
cwtl
scas
sbb
in
inc
out
jecxz
in
es
xchg
mov
fwait
mov
add
aad
ljmp
outsl
push
xchg
add
and
or
lods
sbb
xor
mov
movsl
repnz
xor
mov
loopne
jl
pop
mov
mov
jbe
cmpsl
fsubrs
dec
lret
fcoml
push
inc
jge
cmpsl
loope
movsl
mov
mov
in
pop
push
and
add
pop
mov
lahf
scas
pop
add
das
jns
nop
call
in
mov
orl
lods
adc
pusha
fcomps
fmuls
andl
popf
inc
mov
xchg
fdivl
mov
pusha
in
jmp
je
xchg
iret
sbb
jno
mov
es
dec
lcall
fistpl
jmp
push
dec
dec
popf
cld
cmp
jb
mov
jb
sbb
test
cmc
push
xor
fiadds
test
or
movsb
xor
push
and
rcll
or
pop
fwait
test
pop
shrb
mov
repz
push
mov
push
jl
xor
pop
jbe
lahf
adc
outsb
js
xchg
xor
add
cwtl
xchg
push
movsl
pop
addr16
xchg
adc
icebp
and
and
inc
pop
sub
call
adc
cld
adc
stos
sub
shl
mov
mov
fdivrl
mov
cltd
cmp
scas
pop
dec
enter
sahf
adc
lret
add
and
xor
mov
adc
pop
adc
cmpxchg
in
fcompp
addr16
mov
dec
jnp
cltd
mov
stc
cmp
cmpsb
shrl
jge
adc
xor
cmp
jp
insb
or
or
hlt
subb
cmp
mov
inc
hlt
mov
pop
mov
jg
fdivs
mov
inc
repz
xchg
scas
mov
xchg
push
xor
pop
test
pushf
inc
aam
sub
cmp
jl
mov
dec
dec
mov
mov
imulb
fsubr
mov
jo
je
std
fucom
fisubs
xorb
add
fimuls
roll
adc
hlt
adc
jmp
jnp
dec
add
mov
sub
pop
and
pop
jmp
out
push
pop
pushf
insb
dec
fmull
push
pusha
jp
dec
subb
loope
mov
movsb
std
jno
rorl
jns
jnp
test
mov
inc
outsb
shl
jecxz
adc
std
or
and
xchg
mov
out
shrl
pop
enter
rorb
fisubrl
into
or
add
xchg
and
add
gs
or
ret
fstl
cmp
and
out
mov
sbbb
loop
pop
in
pusha
inc
xchg
sub
or
mov
push
dec
push
lock
loop
mov
repz
dec
mov
fistps
pop
jb
cwtl
xlat
mov
xor
imul
inc
pop
jp
mov
xchg
lds
mov
mov
jmp
repnz
lahf
loop
lods
push
push
sbb
or
jmp
or
sbb
sub
jbe
mov
push
cmp
cwtl
sahf
das
loope
lods
sbb
push
mov
ss
in
insl
add
fwait
sahf
sbb
and
loopne
cmp
add
xchg
aad
mov
dec
and
lret
daa
outsl
mul
jg
push
repz
adc
faddp
shrl
jecxz
stos
pop
inc
push
and
pop
je
mov
or
sub
lea
push
je
imul
xor
std
jno
gs
add
das
mov
push
lock
jp
fsubrl
inc
xchg
push
fnstcw
cmpsb
lcall
add
jbe
jns
pop
xchg
adc
mov
repz
lock
xor
mov
lds
pop
mov
test
mov
leave
ret
movl
clc
lret
in
xchg
clc
mov
pop
movsl
jae
sub
insl
mov
pop
xchg
sub
stc
stos
bound
pop
inc
fmul
and
insl
or
aaa
imul
fwait
inc
sub
push
xchg
push
jb
adc
add
repz
inc
divb
adc
dec
jmp
aad
mov
inc
scas
inc
dec
jecxz
nop
aad
hlt
or
pusha
jo
mov
es
subl
and
inc
iret
jl
mov
shlb
sub
pop
mov
mov
dec
jmp
movsl
mov
std
insl
or
cmp
mov
test
daa
xorb
stc
sbb
sbb
xor
mov
cmp
insl
ret
cmp
inc
popf
fwait
xor
mov
scas
adc
or
fsubr
cmpsl
push
mov
xchg
xor
shlb
addl
mov
xchg
test
je
ja
pop
sbb
jle
sar
mov
sub
jbe
shrb
insb
add
enter
shll
mov
clc
pop
cs
mov
sub
dec
mov
push
iret
clc
add
sti
mov
je
pop
in
shl
mov
stos
nop
or
hlt
mov
fisubl
jae
cmp
jno
sub
popf
jno
leave
pop
jmp
imul
stos
clc
pop
inc
mov
dec
push
ljmp
sub
lahf
int
fmull
repnz
out
add
mov
mov
jnp
mov
outsb
mov
sub
or
sub
ret
repz
sub
mov
mov
in
inc
jb
lret
and
imul
or
cli
cmp
xchg
out
xor
mov
adc
cmp
pushf
je
movsb
fldenv
shrb
in
ss
out
sbb
dec
adc
cmp
nop
insb
shll
mov
jg
xor
mov
outsb
bnd
jo
mov
mov
push
xchg
es
inc
adc
mov
test
xchg
leave
loop
loopne
ret
sub
sbb
movsb
cmpsl
insb
and
dec
pop
xor
dec
pop
lahf
into
lods
pushf
pop
scas
lock
divl
adc
lods
lock
inc
push
or
shll
out
cmp
loopne
leave
mov
fldt
out
push
sbb
inc
push
aas
mov
lret
push
andl
jae
mov
inc
in
sti
and
fwait
inc
jecxz
adc
add
out
aad
xchg
mov
push
mov
clc
pop
mov
mov
cli
loope
sti
and
dec
cmp
push
loop
fnstcw
out
pcmpgtw
popf
pushf
hlt
je
outsb
inc
pop
lret
repnz
mov
cmc
mov
cmpb
mov
add
inc
xchg
test
adc
jo
sub
les
sbb
adc
xchg
add
sbb
outsl
push
push
jge
leave
inc
jbe
into
xor
dec
xchg
xor
fwait
jp
jne
fadds
fidivrs
andps
insl
dec
cmp
stos
cmp
jns
cmp
sub
nop
filds
cltd
dec
cld
pop
pushl
rcrl
sti
stos
push
mov
loopne
push
lret
xor
test
movlps
xchg
scas
push
jo
out
cmp
inc
cmp
xor
pop
cmp
cmp
imul
mov
in
je
add
cmp
cmp
sub
addl
inc
notb
iret
xchg
shr
dec
pop
xchg
inc
inc
fdivl
int3
pop
cmp
sbb
sub
mov
jp
loopne
clc
and
sahf
insb
loopne
jb
add
fwait
add
lret
jns
cmpl
roll
scas
pop
sbbl
in
call
sbb
shlb
outsl
sub
enter
out
jmp
iret
insb
shl
adc
pop
cmp
out
xor
xor
rcl
sub
in
test
and
inc
addr16
lods
push
cmp
jns
enter
mov
movsl
inc
fidivl
rcll
mov
inc
ss
mov
sub
insl
enter
pop
push
and
repnz
or
iret
cmc
push
sub
dec
xchg
ss
jns
dec
lret
or
aam
insb
call
mov
stc
imul
mov
cmp
and
pop
mov
js
or
shrl
xor
insb
enter
ficomps
data16
pop
jp
add
cld
cmc
xlat
push
ljmp
lcall
sbb
movsl
stos
lock
cmp
shlb
sbb
adc
std
inc
mov
inc
das
push
sbb
inc
xor
jmp
or
cmp
enter
add
ja
andl
mov
aas
sbb
mov
mov
jnp
ror
test
or
sbbb
fwait
sub
lods
notb
sti
repz
ret
xor
scas
and
cmc
add
xchg
push
mov
sahf
scas
sahf
popl
jmp
incl
lcall
push
add
fsub
out
xor
shlb
push
fwait
lret
sbb
cmpsb
mov
inc
jecxz
sub
fucomi
daa
mov
add
insl
pop
imul
dec
cmp
fcompl
out
mov
jo
inc
sti
or
adc
jbe
in
fmul
dec
shrl
mov
cmp
inc
xchg
mov
into
pop
jecxz,pn
cmp
ljmp
dec
dec
aam
jge
ficoms
out
or
inc
iret
imul
dec
cmp
pop
js
and
jb
inc
and
imul
jmp
in
lock
popa
mov
ror
sbb
fistps
gs
call
gs
mov
and
cli
or
pushf
cmpsb
test
mov
lret
dec
push
and
dec
shlb
test
sar
push
add
mov
cmp
push
fwait
xchg
or
jnp
sti
ds
dec
push
mov
ja
pop
fdivrl
push
out
sbb
iret
cmc
pop
dec
fldcw
add
dec
push
cld
pop
lea
sti
jno
sbb
cmp
mov
push
sbb
ss
cs
pop
sti
popa
inc
insb
dec
cmp
fisubs
lds
add
jns
xchg
andl
mov
pop
iret
mov
adc
imul
outsl
inc
outsl
into
jg
sbb
cmp
lea
fwait
push
xchg
inc
mov
cmpsb
mov
mov
ja
nop
cmp
mov
rcl
mov
mov
jae
lea
cmpsb
xor
pop
jnp
out
js
adc
adc
ror
push
aam
mov
xchg
add
dec
pop
out
icebp
inc
outsb
sahf
subb
push
subl
lahf
push
mul
inc
loop
rorl
mov
in
in
push
mov
adc
les
into
sahf
into
stos
andb
aaa
add
mov
sti
inc
sbb
out
push
push
aas
aas
stos
cmc
out
repz
test
xor
push
cltd
jecxz
dec
dec
test
xor
sarb
in
adc
sbb
xor
inc
mov
adc
push
in
ja
xchg
lahf
xor
ret
test
push
mov
push
in
mov
sbb
packssdw
mov
jb
lds
xchg
push
sub
int
adc
jmp
ljmp
scas
xchg
enter
notb
movsl
outsl
popl
mov
jb
iret
iret
inc
fcmovnu
lods
ja
mov
xchg
ja
cmc
adc
xor
rcll
mov
push
jb
ret
rol
mov
xor
test
cmpsl
cltd
mov
jno
std
dec
sbb
les
mov
sbb
and
sub
popf
test
mov
pusha
jne
test
ret
dec
or
jmp
add
sbb
jno
adc
test
mov
imull
mov
xor
scas
xchg
stc
inc
sbb
test
push
push
ss
xor
daa
ret
pop
jbe
xchg
push
cli
cs
xor
inc
lea
push
pop
imul
rcrl
inc
inc
push
inc
stc
cmp
addb
aad
pushw
mov
sahf
cmp
pop
sub
jmp
mov
push
aas
or
mov
ss
jge
cltd
ja
je
add
sbb
call
jo
pop
mov
xor
mov
out
jmp
fwait
fwait
notl
lods
and
shrb
sti
xor
pop
sub
xor
adc
fcomps
mov
call
iret
mov
ret
xor
pop
jmp
adc
inc
sarl
pop
jge
add
pop
imul
rcr
sbb
adc
and
xchg
pop
push
jge
mov
ds
in
cmp
sub
shll
pop
mov
mov
push
addr16
orb
icebp
gs
add
call
adc
lcall
adc
mov
repnz
movsl
lahf
in
out
in
mov
inc
les
lcall
test
scas
fs
mov
and
xor
cmp
mov
push
sahf
pop
xor
cwtl
outsl
xor
xchg
clc
sbb
xor
cmp
sub
xor
faddl
jl
mov
push
in
mov
jp
dec
xor
xor
stos
dec
faddl
lea
adc
rcll
or
mov
fistl
lcall
out
sbb
int
xchg
out
adc
stc
popf
dec
xor
dec
pop
ljmp
xor
stos
icebp
andl
mov
pusha
mov
inc
hlt
mov
push
lds
pop
adc
inc
xchg
enter
fwait
pop
sbb
out
outsb
jne
xchg
negb
jg
and
mov
ds
loopne
iret
xchg
movb
pop
stos
inc
and
icebp
pop
mov
popf
inc
sbb
movl
xchg
fs
fstl
stos
inc
mov
jno
cmp
lock
call
out
test
ret
rcrl
rclb
stos
jae
and
loopne
mov
addr16
sbb
aam
leave
or
xor
pusha
sbb
orb
test
adc
test
jnp
mov
jl
or
ficoml
xor
cmp
lds
in
shlb
ss
jecxz
out
lret
loopne
scas
cmp
cmp
adc
push
or
push
pop
inc
test
or
cltd
ret
in
cmp
xor
call
cmp
mov
mov
test
sbb
sti
flds
jecxz
mov
movsb
mov
orb
scas
rcr
push
repz
stos
lock
xor
or
enter
jmp
xchg
addr16
add
jno
sbb
ret
sbb
pop
jb
pop
mov
and
and
pop
mov
xor
incl
mov
cmp
stc
and
jno
popa
pop
sbb
xchg
movb
popa
imul
movsb
ja
xor
cmp
cmp
out
rorl
fnstsw
mov
xorb
sub
rorb
or
cmp
rorb
in
cltd
jb
test
gs
je,pt
cmp
lret
inc
out
js
clc
cltd
inc
fadds
mov
dec
int
mov
adc
jno
cmpsb
push
fisubs
jle
mov
jne
push
mov
cmp
outsl
nop
pop
cld
sub
jne
mov
ret
scas
cmp
int
pop
sub
push
push
add
cld
fmul
std
in
xchg
dec
push
push
push
cwtl
loope
adc
pop
outsl
fidivrs
stos
filds
mov
add
xor
adcb
int3
mov
and
clc
addb
fldcw
adc
sub
sub
lds
outsb
fbstp
push
mov
repz
fidivs
inc
add
mov
inc
inc
mov
xchg
jge
ds
stos
imul
cmpsl
out
movsb
sub
xchg
adc
pop
sbb
ror
mov
mov
mov
pop
mov
push
jbe
fs
or
mov
or
std
mov
les
addr16
push
fsts
nop
stc
xor
and
jmp
sub
loop
fisubrs
adc
push
cli
sub
mov
xchg
loope
fdivrl
and
or
inc
mov
or
inc
push
mov
mov
pop
or
mov
mov
data16
cltd
test
fistps
fldl
mov
mov
loope
adc
cs
sar
jp
add
add
shrb
jnp
jbe
mov
rcll
sbb
loopne
stos
mov
orl
pop
lcall
inc
xchg
aas
push
stos
jnp
rolb
mov
fcoml
push
arpl
xlat
xchg
clc
pop
out
roll
or
pop
dec
and
inc
fwait
push
shll
fwait
sahf
pushf
mov
cmp
in
ret
arpl
or
incb
and
xchg
andb
lret
push
cli
shr
aaa
pop
inc
push
test
mov
stos
cmp
movsb
addr16
or
clc
jnp
pop
inc
pop
movsl
push
pop
inc
pop
mov
sub
out
sub
pushf
and
inc
and
lret
sub
imul
push
xor
roll
inc
sub
in
lret
lea
mov
pop
cmpsl
flds
nop
mov
test
and
cmp
repnz
jmp
es
jns
adc
xchg
scas
add
or
dec
movsb
hlt
mov
or
stc
mov
pop
dec
test
mov
imul
adc
cmp
mov
sbb
dec
inc
insb
mov
dec
enter
dec
dec
inc
add
mov
sub
movsl
mov
rclb
xchg
or
and
mov
fcmovnbe
xor
dec
ljmp
ss
sti
jmp
xchg
lahf
dec
outsb
mov
dec
cmp
push
xchg
insl
insl
or
in
movsb
push
or
movsb
lock
outsl
sahf
cmp
stc
push
dec
cld
rcrl
je
jnp
push
cmp
leave
ret
test
pop
into
inc
add
sub
pop
test
or
mov
pop
lods
mov
or
mov
sbb
dec
and
arpl
and
les
adc
pop
aad
cltd
add
stos
xchg
movsl
out
pop
jg
aaa
adc
out
pop
and
push
adc
mov
and
cmp
push
out
jle
jne
sub
loop
mov
pushf
mov
mov
outsb
aad
adc
pop
xlat
pop
xchg
push
jmp
fadd
in
pushf
xchg
cs
scas
pop
movb
daa
addr16
clc
cmp
mov
addr16
idiv
push
call
imul
mov
pop
stc
dec
push
clc
aaa
fbstp
xor
add
push
pop
lods
je
lahf
or
push
sub
xor
mov
insl
sub
cmp
or
sub
sub
popf
cmpsb
xchg
mov
mov
jmp
ljmp
aad
fdivl
inc
push
push
jbe
aaa
lods
mov
mov
mov
andb
push
jecxz
jp
pushf
lret
mov
insb
inc
push
rcll
call
ds
cmc
leave
clc
mov
dec
ljmp
jnp
vpsrld
popa
mov
lret
xor
pop
gs
js
insl
pop
call
into
xor
jbe
cmp
cmp
xor
pop
roll
fiadds
loope
dec
movsl
sahf
dec
rep
jecxz
mov
cltd
test
dec
lret
dec
mov
das
inc
adc
lahf
cltd
jne
inc
in
xchg
sub
push
sahf
sbb
jns
jle
sub
add
inc
mov
ror
pop
mov
sbb
mov
push
outsl
mov
sub
gs
cltd
mov
cltd
push
inc
dec
lods
roll
jmp
inc
adc
or
clc
sub
jb
cmp
dec
or
xor
push
adc
iret
jno
fadd
or
add
movsb
adc
mov
addb
jbe
cmpl
and
in
repz
aad
xor
repz
mov
cmp
outsl
cwtl
inc
int
xchg
cltd
fildl
clc
adc
pop
dec
sbb
push
xchg
test
inc
sbb
push
mov
adc
aas
pop
cmpsl
sarl
mov
inc
sahf
mov
fidivs
and
mov
xchg
xchg
mov
jbe
push
leave
aad
pop
addb
repz
push
bound
xor
inc
out
dec
xor
cs
or
add
pop
ret
cli
pop
out
insl
rclb
pop
in
xchg
cwtl
xchg
daa
sti
les
cmp
jmp
subl
add
aas
in
daa
push
dec
aam
xchg
lahf
mov
jg
in
jge
sahf
lock
cli
jge
dec
jmp
mov
orb
repz
es
in
xlat
out
scas
xor
add
repnz
das
cmpsb
mov
push
push
and
jne
xorb
sub
imul
loop
repz
jo
pusha
jp
pop
insb
push
xor
mov
divb
les
loop
outsb
subl
out
imul
cwtl
mov
xchg
test
je
or
cmp
dec
pushf
sarl
lret
mov
out
movsl
xchg
cs
leave
bound
inc
cltd
cld
push
insb
push
jb
pop
add
push
loop
xorl
fdivl
push
scas
mov
addr16
jle
inc
addr16
pushf
pushf
cmpsl
xchg
mov
inc
imul
sbb
out
notb
xchg
andl
push
sbb
mov
int3
pop
jno
pushf
and
add
outsb
cmp
ljmp
shll
mov
xchg
xlat
lods
lret
pop
in
jge
enter
and
aam
inc
imul
pop
mov
adc
jle
lock
scas
add
pop
test
xor
add
jecxz
cmc
mov
pop
fwait
sti
movsb
and
dec
call
pop
ljmp
mov
fldl
inc
sbb
mov
and
or
mov
enter
mov
jbe
or
adc
xchg
pop
mov
test
fbstp
push
sbb
jo
iret
xor
popf
xor
and
dec
cmp
add
pushf
pop
orb
out
gs
dec
ds
dec
daa
add
add
mov
inc
lcall
les
into
std
xchg
shll
les
pop
mov
mov
jge
into
popa
xchg
xlat
mov
and
jmp
xchg
xor
push
lods
and
scas
mov
mov
sub
xchg
les
add
mov
mov
xor
jecxz
fnstenv
js
test
shrl
mov
out
data16
fnstenv
mov
stc
cwtl
inc
cld
push
lds
test
test
inc
dec
arpl
cmp
sahf
es
jge
jmp
mov
aam
je
cmpsl
in
popa
and
cmp
pop
loope
mul
mov
sub
insb
pop
xor
cmc
add
shrb
cs
out
ffree
lea
in
test
cwtl
pop
into
rorb
out
lcall
or
mov
mov
fsts
jecxz
aam
or
mov
inc
push
and
cmc
pop
les
xlat
jns
mov
xchg
push
int3
pusha
mov
push
sbb
dec
sahf
pop
clc
mov
in
pop
pop
lret
sbb
push
jmp
cld
mov
in
pop
shlb
sar
in
repnz
rcll
dec
dec
ror
addl
imul
mov
int3
mov
sar
jnp
inc
nop
scas
in
cmpsb
adc
es
rorl
xor
mov
inc
or
mov
pop
mov
and
aad
mov
pop
pop
cmp
das
dec
lods
fwait
or
pusha
mov
mov
mov
ljmp
dec
dec
rorl
lock
jge
and
fstps
xchg
pop
cmp
dec
mov
pop
or
ljmp
mov
xchg
test
lods
outsb
arpl
out
and
in
xor
sub
add
aas
xchg
sbbl
mov
mov
cmc
mov
mov
hlt
push
mov
mov
dec
dec
adc
xchg
mov
mov
xchg
pop
jns
popa
xchg
dec
cmp
aam
aam
dec
mov
sbb
and
std
pop
aas
orb
mov
xchg
sbb
ret
ja
mov
jo
or
mov
adc
add
jp
jne
arpl
popf
gs
leave
ret
cmp
and
mov
rorb
ja
mov
adc
test
xchg
ja
shl
test
mov
push
pushf
or
pavgw
and
jnp
fwait
cltd
xchg
push
mov
pop
rcrb
jmp
jne
nop
cmp
cmpsb
sbb
jo
loop
dec
mov
jbe
push
loop
cmpsl
mov
mov
dec
seta
push
mov
mov
push
jp
adc
enter
ja
pop
xchg
inc
xchg
iret
sti
jb
call
sub
shl
pop
insb
fdivl
jbe
cmp
sub
jp
or
xlat
fsubrl
shl
inc
pop
or
mov
add
sbb
iret
dec
ja
arpl
sbb
cmp
les
cs
fs
xorb
push
clc
push
jbe
jne
scas
and
icebp
in
pop
fwait
xchg
xchg
adc
xor
sub
out
icebp
into
dec
mov
jle
add
bnd
fisubl
sbb
xor
fildl
add
inc
out
mov
sbb
jg
daa
stc
inc
mov
mov
dec
addr16
call
hlt
adc
lret
adc
daa
hlt
jbe
adc
das
mov
mov
cmpsb
stos
rol
inc
push
pop
push
mov
aaa
push
movsl
in
dec
jg
mov
fs
push
bound
out
cmpl
cmp
inc
jns
movsl
roll
jbe
les
div
sti
adc
rorb
push
or
data16
lea
add
sub
popf
dec
in
fwait
and
pushf
lods
addr16
and
test
lret
lret
sbb
push
orb
cmp
jne
jns
add
test
dec
mov
add
call
mov
add
call
sub
insb
push
insb
push
das
out
and
add
xor
imull
daa
hlt
mov
fsts
repz
jb,pt
jae,pt
in
pop
or
imul
jno
scas
aaa
push
ja
adc
shrb
xchg
cli
mov
xorb
in
fwait
add
loope
jg
cld
sti
push
adc
push
xchg
inc
fs
inc
jns
push
aad
and
mov
pop
sub
loopne
mov
hlt
dec
test
repz
or
push
cltd
xchg
lock
outsb
insl
push
add
add
sarb
adc
sbbb
mov
adc
push
or
push
leave
push
nop
ret
cwtl
sub
ret
clc
popf
iret
xor
ret
pop
insl
xchg
sub
call
mov
dec
fdiv
call
mov
int3
leave
jb
test
dec
out
and
int
sbb
stos
subb
outsl
test
or
fwait
ljmp
adc
mov
aas
dec
arpl
int3
insl
and
data16
movsl
xor
sahf
loop
ds
fdivs
loopne
inc
push
mov
vmovaps
jae
cwtl
adc
or
and
rcll
negl
push
jno
cmp
stc
out
pop
xchg
mov
add
mov
fldpi
sbb
mov
xchg
outsl
and
inc
jnp
push
lahf
out
sbb
xor
push
cmpsl
inc
mov
iret
inc
mov
dec
sbb
andl
mov
push
outsb
mov
jp
sub
dec
in
pop
aas
stc
mov
decb
lea
gs
sbb
xlat
arpl
loope
fnstenv
imul
xchg
cmpsb
fs
bound
icebp
mov
xor
xor
jg
and
jecxz
test
ficoml
stos
fwait
inc
cmp
mov
mov
cmpsl
dec
sbb
shl
rcr
cmpsl
dec
or
mov
cmp
jmp
gs
call
xchg
hlt
sbb
cltd
rcr
mov
addr16
js
fistpll
and
call
pushl
xor
xchg
xchg
mov
insl
fcmovbe
insl
cmp
out
test
push
pop
call
jmp
lods
fnstcw
mov
repz
sub
test
add
push
xchg
test
scas
stc
fistpll
add
inc
adc
xchg
fildl
jb
mov
cmp
fwait
push
dec
jge
and
dec
pop
mov
inc
lea
and
jne
dec
lds
pop
lahf
inc
lret
xchg
arpl
and
cmpsb
mov
insb
pop
inc
pop
jne
or
push
jmp
jmp
sti
jns
or
dec
aaa
dec
dec
cltd
sti
outsl
jmp
inc
jmp
movsb
leave
lds
pushf
aam
xchg
movsb
jle
in
push
dec
mov
outsb
jno
mov
xchg
or
push
aas
imul
or
fimull
mov
mov
in
ret
movsl
cmp
and
mov
inc
and
lds
mov
cld
jnp
xlat
pop
mov
dec
mov
pop
xor
cmp
jne
push
mov
sbb
imul
mov
push
mov
dec
sub
mov
enter
pop
cmc
int3
dec
mov
test
fcoms
inc
rcrl
fdivrl
or
mov
arpl
js
daa
push
cs
les
test
fs
mov
lods
adc
call
mov
xor
mov
pop
sbb
or
cmp
sahf
mov
xchg
dec
push
out
adc
cmp
and
movsl
lods
test
pop
ds
xchg
popf
fldcw
cmp
aad
dec
lock
pop
xchg
mov
rcl
xchg
fisubrs
aam
les
mov
mov
push
scas
xor
xor
cmc
sbb
push
ret
cmp
sbb
or
shl
and
aaa
mov
add
imul
mov
mov
adc
aam
js
push
mov
mov
mov
mov
in
shrl
movsl
jle
movsb
xchg
push
push
jmp
mov
and
sbb
insb
std
pop
mov
jne
mov
sahf
push
push
sbb
mov
cmpsl
repz
aas
icebp
imulb
push
mov
imul
push
test
mov
push
in
testl
filds
enter
rcll
inc
lcall
and
xchg
push
xchg
push
sahf
adc
xchg
pop
cmp
das
pop
push
add
add
jecxz
loope
inc
jns
ret
fs
push
push
jl
cmp
bound
sarb
divps
add
mov
loop
add
leave
loopne
add
aad
js
movhps
xor
scas
cmp
mov
jg
dec
mov
push
rcll
adc
lea
push
dec
mov
sbb
int3
mov
sbb
jae
jbe
or
mov
js
jb
mov
adc
pop
aam
adc
clc
arpl
mov
jns
pop
xor
jp
fstps
pop
jge
andb
mov
mov
test
mov
mov
popa
xchg
dec
xor
xchg
and
data16
inc
int3
xor
push
les
es
cmp
adc
gs
sbb
pop
arpl
push
cmp
stos
mov
cmp
out
push
fiaddl
mov
mov
sub
clc
mov
jo
push
pop
xchg
in
cld
push
xor
mov
adc
mov
dec
mov
iret
sti
inc
rcrb
lret
hlt
insb
out
xchg
scas
arpl
in
rclb
mov
jp
push
ret
jle
notl
mov
mull
ror
pop
or
sbbl
push
xchg
nop
cld
pmaddwd
and
sbb
dec
fsubp
sub
or
rol
dec
inc
mov
add
imul
shrl
dec
pop
cmp
add
iret
icebp
into
popa
scas
test
pop
sti
push
cld
mov
in
adcb
and
lcall
xlat
mov
xchg
out
lcall
call
lds
jns
xor
xlat
sbb
pop
inc
movsb
test
das
into
in
mov
mov
insl
int
xor
nop
cmpsl
arpl
enter
sub
cmp
cmp
and
and
add
or
in
sub
lcall
inc
mov
push
jg
jo
jg
int
fistpl
add
sub
icebp
cmp
dec
cwtl
std
push
hlt
out
jecxz
nop
negl
push
push
jne
and
cmpsb
cld
cmp
lea
jl
pop
imul
xchg
adc
sahf
out
cmc
aaa
jno
int
jns
subb
pop
push
jno
gs
cmc
xor
xchg
mov
sub
aad
lock
or
mov
xor
loopne
cmp
aam
data16
mov
or
mov
pop
test
push
mov
jb
rorb
xchg
scas
popf
sbb
xlat
pop
cmp
out
fwait
push
loope
cmpsl
ja
xor
incb
xchg
or
xchg
roll
in
adc
gs
cmpsb
lcall
adc
call
adc
cmpsb
ja
nop
or
or
jp
sarl
cmp
in
ja
mov
xchg
inc
xchg
pop
push
adcl
pop
mov
xchg
es
roll
sub
out
ss
add
push
into
add
push
or
jp,pt
cmp
je
push
decl
nop
xchg
cli
cmpsb
adc
es
fisubrl
test
xchg
jb
cmp
movsl
add
frstor
add
add
dec
int3
roll
fldln2
xchg
push
ss
aam
sub
jp
sbb
scas
and
js
push
xchg
cmp
je
mov
jecxz
int
popa
leave
and
loop
pop
jae
mov
pop
in
je
push
xchg
lret
xor
nop
mov
das
add
aam
test
or
xor
fildll
xor
dec
xor
mov
dec
sub
clc
pop
insl
stc
adc
aad
outsl
clc
pop
push
cwtl
cmc
add
mov
pop
mov
rep
fsubl
mov
sahf
ds
pop
cmp
mov
sub
cltd
adc
pushf
sbb
and
mov
xlat
jbe
pop
call
stos
mov
lret
or
xchg
xchg
bound
ja
clc
push
sbb
inc
mov
pop
neg
std
jmp
js
lods
enter
inc
mov
daa
dec
icebp
mov
ret
xor
cld
mov
mov
xchg
mov
mov
add
std
sub
das
mov
adc
xchg
mov
jb
ret
movsl
inc
es
cmp
in
add
clc
xchg
or
jae
adc
enter
adc
aaa
call
lock
adc
mov
and
fildll
add
and
cmpsb
mov
sub
dec
mov
push
rclb
pop
jmp
out
adc
movsb
mov
int3
pop
xor
adc
xorl
jae
jns
ds
mov
mov
and
and
xchg
sub
out
ret
je
adc
cmp
vmovsd
push
cmp
jnp
fcompl
test
test
int3
or
dec
pusha
xchg
xor
adc
jo
add
fisubl
loopne
aam
ucomiss
sbb
jbe
jno
xor
aam
rolb
fdivs
test
and
mov
movsl
pop
cmp
push
iret
sub
rcl
bound
and
loopne
sub
dec
repz
pusha
cmp
jg
lds
cld
push
jno
mov
inc
xor
jae
pop
mov
iret
rcl
cmp
addl
movsb
push
scas
mov
mov
or
sub
mov
xor
rcll
xorl
mov
mov
jl
push
dec
add
mov
arpl
push
xchg
pusha
pop
jnp
jnp
js
sub
push
xchg
incb
into
add
sub
mov
xchg
and
addr16
pushf
scas
int3
mov
sbb
das
push
fdivrs
pop
mov
xor
adc
aas
push
lods
or
pcmpeqw
sbb
out
mov
cmp
sbb
add
mov
jb
cmpsl
cmpb
xchg
mov
aaa
push
pop
jae
fucomi
dec
xchg
gs
add
pop
stos
xorb
lret
cli
leave
mov
push
movsl
je
movsl
jns
inc
sahf
mov
and
and
inc
inc
ljmp
xchg
or
out
jg
shll
out
leave
add
cmpsb
jmp
jne
jecxz
call
imul
jnp
ret
adc
sub
push
loop
cmpsl
loope
and
mov
jo
xchg
rol
cmp
outsl
dec
and
call
xchg
aam
ret
jno
cltd
insl
repnz
mov
mov
mov
aam
inc
aaa
mov
cmpb
push
mov
and
inc
push
or
cmpsb
add
sbb
xor
addr16
pushl
mov
adc
pop
cmp
daa
mov
jmp
add
test
fwait
rcrb
aam
mov
inc
dec
mov
popa
orl
mov
mov
sbb
or
lds
sarl
add
and
pop
inc
fildll
pop
mov
stos
in
mov
rorl
sub
cmp
fucomi
in
daa
mov
push
xchg
push
adc
and
jmp
push
and
fwait
out
pop
sbb
mov
pop
repnz
fisttps
mov
push
imul
fildll
loope
push
outsl
jns
inc
cmp
stos
jl
xor
in
or
insl
sti
out
popw
in
subb
ret
jmp
xchg
cmc
icebp
mov
and
in
pop
push
jecxz
push
ljmp
das
out
int3
roll
pushf
cmp
out
xchg
lea
pop
es
lods
jp
dec
inc
adc
push
mov
mov
dec
roll
cmp
push
stc
scas
rcrb
popa
inc
push
test
fcomps
out
adc
pop
or
sub
mov
sub
or
scas
cmpsb
cs
jp
data16
lea
aas
addr16
iret
stc
dec
push
es
push
xor
xor
xchg
mov
mov
sub
cmp
xchg
cmp
movsb
xchg
loopne
dec
lods
xor
enter
push
xchg
pop
mov
stos
call
xchg
sub
inc
add
mov
insl
rclb
pop
mov
mov
ja
outsb
add
pushf
pop
push
call
loopne
cmpb
push
mov
push
scas
mov
bnd
dec
out
outsl
popf
adc
cmpsl
ljmp
mov
sbb
fiaddl
and
stc
mov
lret
sub
inc
fdivr
loopne
mov
lds
and
push
sar
testl
mov
or
sub
dec
push
movsb
pop
cltd
jle
loopne
orl
mov
push
je
cmp
pop
pop
pop
cmp
bound
xchg
push
imul
nop
inc
jnp
sub
inc
daa
mov
jno
in
mov
pop
jl
pop
and
ja
add
out
adc
lock
jl
jge
je
aaa
dec
mov
push
pop
or
push
hlt
gs
mov
data16
adc
mov
push
das
mov
aam
adc
fildll
daa
push
cltd
gs
push
lret
lret
or
addb
lock
push
mov
cmp
add
cmpsl
cltd
in
sahf
jbe
dec
pop
repnz
cmp
dec
pop
js
js
lret
les
push
mov
sub
pop
pop
add
sub
scas
ds
stos
dec
cli
dec
jp
dec
out
mov
aaa
lret
jb
mov
adc
push
pop
sbb
jne
xchg
mov
fwait
push
icebp
add
lcall
xchg
mov
loopne
mov
out
xchg
xchg
jns
rorl
out
xor
push
sti
or
mov
cmpsl
dec
jns
mov
cmp
das
jle
pop
push
mov
pop
in
ficompl
rcr
inc
mov
stos
out
adcl
sub
cld
add
mov
pop
pusha
mov
mov
sub
in
out
inc
mov
and
cmp
arpl
jle
jg
and
mov
sub
mov
inc
jne
cs
mov
pop
push
out
cmp
jb
lods
add
sti
dec
inc
ret
stc
xchg
and
adc
stos
dec
fldl2t
mov
or
mov
mov
lahf
aaa
pop
mov
push
pop
xchg
test
les
pop
testb
jle
jg
xchg
cwtl
jne
sub
jno
push
cli
dec
sub
xor
mov
add
inc
xchg
sbbl
fcmove
jbe
mov
in
fstps
xchg
pop
jne
mov
push
out
or
test
mov
jb
call
enter
fldl2t
imul
aas
mov
add
ror
mov
push
xchg
ljmp
add
fbld
xor
push
daa
pushl
aas
int3
pop
gs
in
pop
movsb
pop
faddl
sub
inc
cmp
push
lahf
jne
jo
pop
test
jg
pushl
inc
fildl
imul
push
or
mov
js
xchg
out
jnp
lods
pop
cmp
arpl
push
inc
mov
push
push
icebp
cmp
movsl
add
pop
mov
cli
inc
adc
push
bound
loope
out
cmove
jl
popa
pusha
leave
and
mov
dec
jle
adc
fdivr
loop
mov
jno
and
push
loopne
popf
mov
push
adc
inc
es
fs
pop
pop
adc
frstor
push
out
pop
cmp
jmp
sub
dec
jg
sar
sub
std
sub
xor
ds
test
fsubl
pop
dec
sbb
add
mov
fisubs
push
out
jbe
mov
jne
jns
add
xchg
jle
enter
les
push
dec
aad
and
fwait
xor
mov
mov
movsb
pop
xchg
icebp
mov
sbb
frstor
call
ss
leave
xor
aam
add
mov
icebp
loopne
movsb
imul
adc
add
pop
cmovb
stos
ja
repz
lea
sbb
cltd
mov
lret
sbb
mov
add
loopne
xor
adc
cltd
push
mov
jp
lds
sar
xchg
push
push
cltd
bound
int
cmpsb
lret
loop
mov
mov
jbe
int3
xchg
ret
aaa
mov
test
xchg
jmp
xchg
jmp
push
repnz
mov
jnp
je
mov
sbb
or
and
jno
xor
dec
add
outsl
mov
lret
push
or
cmp
iret
mov
dec
add
push
xchg
xor
sbb
push
sub
inc
dec
jae
inc
fnstcw
mov
jno
cltd
or
push
adc
jle
popf
icebp
aas
out
fucomi
ja
cs
in
insb
push
jnp
fwait
mov
ss
popf
cmc
imulb
adcl
sub
sub
ficomps
iret
adc
inc
jae
mov
fldcw
mov
sub
lea
pusha
adc
pushf
or
pop
ds
call
fadds
push
jl
sub
in
add
scas
or
movsb
mov
in
ret
and
nop
jle
sar
shll
sub
daa
mov
push
lods
jg
add
mov
mov
and
dec
sbb
xchg
add
stc
or
out
sub
mov
das
dec
pushf
mov
mov
insb
cmp
push
cmpsl
push
xor
ficomps
mov
or
push
lahf
sbb
mov
cs
addr16
js
xor
int
and
fdivl
add
pop
movsl
in
popf
cmp
shl
popa
mov
mov
test
clc
es
and
stc
pop
xlat
xor
push
mov
mov
push
mov
mov
pop
mov
repz
sub
mov
orb
fsts
mov
imul
xorl
dec
mov
movsb
adc
loope
cmp
repz
movsb
jne
das
sbb
or
pushf
xlat
xorb
sti
scas
cmp
cmp
add
addr16
mov
cmp
jecxz
pop
icebp
xchg
adc
daa
cld
jg
inc
inc
push
sbb
pop
pop
in
stos
outsl
cmp
push
pushf
push
mulb
stc
cmc
xchg
inc
aam
pop
in
jo
rorb
xchg
gs
cmp
popf
inc
jg
add
aam
add
pushf
cmp
adc
lahf
xchg
fwait
cmp
dec
in
pop
inc
or
stc
pop
cs
shld
or
xor
dec
or
xchg
add
jbe
or
stos
insb
xor
dec
mov
bnd
sub
fmull
adc
push
sti
push
pushf
xchg
cs
jecxz
adc
sub
sub
imul
jne
sub
fwait
jno
mov
xor
xlat
fwait
jge
sbb
add
cmc
cli
or
mov
adcb
stc
jle
jo
xor
sbb
ja
pop
push
push
sbb
mov
push
dec
repnz
fldl
int
fistpll
sbb
mov
fcomip
rolb
shr
and
or
add
dec
jo
scas
bound
cmp
imul
dec
push
mov
int3
mov
seta
and
sbb
mov
adc
je
out
add
stos
ret
push
divb
fucomi
movsl
repz
xchg
push
jno
test
add
fcoml
ja
xchg
or
repz
movb
fsts
fdivrs
sub
inc
xchg
mov
ja
aad
xor
lds
call
lods
sbb
lcall
mov
mov
xor
dec
push
fisttpll
scas
hlt
je
nop
arpl
or
aam
sub
ss
push
jns
fdivrs
inc
cmpsl
gs
mov
dec
aaa
jmp
movsb
stc
ds
inc
mov
dec
cli
dec
mov
iret
pop
cld
inc
push
sbbl
dec
call
inc
icebp
xorl
push
pop
jecxz
lcall
sbb
sbb
lcall
stc
or
movsl
jae
add
stos
mov
pop
jae
xchg
cmpb
sbb
xchg
add
lcall
fisubrs
std
les
idiv
or
push
dec
adc
popa
push
adc
cltd
mov
rcrb
jne
pushl
push
jb
clc
clc
push
in
sub
movsb
jp
fs
push
outsb
inc
adc
and
pusha
sub
adc
out
ljmp
push
dec
enter
test
dec
or
loop
push
mov
xchg
mov
ljmp
scas
fsubrs
sbb
lcall
mov
popa
sbb
dec
lds
into
fisubs
xchg
pop
jecxz
push
xlat
add
ja
add
sbb
addr16
mov
inc
sbb
stos
fwait
not
fxch
leave
mov
jl
adc
jmp
sbb
add
dec
dec
fcomps
mov
jp
test
iret
xorl
test
daa
leave
xchg
add
fbld
lahf
or
imull
dec
xor
cltd
and
lods
cmpsl
inc
fwait
and
ss
andl
movsb
cmpsb
mov
in
mov
lcall
stos
jnp
orl
inc
or
mov
imul
stos
dec
jmp
cmp
insl
test
jb
pusha
sbb
cmp
jmp
mov
cmp
and
push
popf
xchg
test
gs
and
inc
data16
loop
sub
test
jo
add
xor
ret
jecxz
xchg
test
xchg
mov
xchg
ljmp
aas
jbe
shlb
add
pushf
cwtl
insl
addr16
inc
ljmp
ljmp
push
hlt
aas
movsb
pusha
pop
in
push
adc
popa
imul
push
inc
adc
jae
outsl
pop
add
arpl
mov
cmpsb
and
xor
pushf
jg
fcmovnbe
push
pop
mov
pop
shrl
mov
fcmove
or
jns
fldcw
outsl
loop
adc
pop
mov
cmp
imul
in
jb
clc
jecxz
cld
fbld
out
in
movsl
in
dec
xor
outsl
and
mov
into
push
cmp
scas
aad
add
and
mov
jns
cmc
fisubl
fidivrs
fidivs
jp
or
or
xchg
or
add
dec
dec
aaa
mov
sahf
cmc
inc
or
test
push
push
inc
fnsave
sub
and
push
sahf
lret
sub
xor
xor
test
orb
test
and
outsb
test
sbb
sbb
lods
test
repz
test
shl
flds
loope
out
aad
inc
mov
lock
in
popa
scas
lock
push
jl
rolb
mov
ret
insb
mov
mov
in
arpl
adc
aaa
seta
ret
lret
out
sti
cwtl
push
pop
call
mov
dec
scas
push
out
in
mov
dec
push
outsl
mov
fistpll
xor
xor
sub
or
fwait
xchg
mov
dec
or
and
sub
mov
movsb
xlat
lret
cli
out
notl
or
call
repz
pop
aad
xchg
xchg
push
ret
jmp
add
fs
fimull
cmpsb
ja
addr16
shrb
popf
add
test
fistpl
ret
ss
stos
div
movsb
or
aas
xchg
push
jge
insl
jl
jge
daa
jb
aad
xor
dec
aaa
lret
out
cmp
out
sahf
add
test
lods
popf
pop
fadds
pusha
cli
pop
inc
add
inc
mov
and
jp
add
mov
jae
fmuls
aad
push
push
push
movsl
jno
fbstp
adc
push
and
popa
in
test
es
mov
mov
inc
andl
into
xchg
sub
lahf
aas
lret
ss
decl
fldl
aam
sbb
test
adc
or
loope
arpl
add
xor
push
sub
or
mov
mov
stc
insb
pop
imul
mov
inc
mov
cltd
sahf
pop
daa
dec
das
loopne
lods
and
fsubs
add
inc
outsl
dec
fcomp
xchg
ja
and
xchg
jmp
xor
dec
sarl
ds
sbb
fstps
and
stc
mov
icebp
sub
shlb
out
lods
push
cmp
scas
mov
test
imul
and
mov
sbb
loope
leave
xchg
pop
loope
outsb
loop
daa
mov
ljmp
sbb
cwtl
sub
inc
sub
das
in
ret
aaa
jg
adc
sub
out
pop
dec
adc
fbld
jg
mov
inc
in
mov
out
cmp
add
popa
je
mov
push
lret
xchg
pushf
cmc
xchg
sti
loopnew
xor
adc
cwtl
add
dec
jns
test
mov
and
or
inc
dec
xchg
inc
pop
into
imul
and
dec
stos
out
sub
les
dec
or
mov
aas
rorb
push
pop
cmp
mov
cmpsl
pop
mov
addr16
xor
jg
in
in
jns
mov
adc
loop
hlt
cmpsb
mov
test
clc
cmp
add
dec
loopne,pn
add
xchg
hlt
pop
imul
sub
pop
lahf
sub
fwait
addr16
jg
jecxz
pop
xor
dec
xchg
or
out
mov
jno
iret
pop
outsb
mov
fs
push
pop
fwait
mov
rclb
je
pusha
lea
into
and
fsubr
repz
add
or
lret
add
xchg
mov
cmp
cmp
pop
stos
mov
scas
scas
out
js
paddsb
in
jae
out
inc
or
mov
stos
lds
sahf
test
mov
ljmp
mov
imul
jbe
xlat
mov
xchg
jb
in
std
pushf
lods
push
lret
sbb
mov
xor
and
loope
jo
mov
jle
data16
adc
out
lret
lea
shl
repnz
mov
jge
mov
mov
in
mov
call
push
rclb
sub
cmp
push
mov
jl
mov
fiadds
lret
cmp
inc
push
or
dec
add
inc
stos
outsb
lret
xchg
stc
jp
mov
sbb
stc
mov
stos
dec
pushf
cld
xorb
das
inc
mov
jecxz
sbb
in
pop
push
push
movsl
aaa
sub
clc
imul
adc
ljmp
cltd
in
fisubl
imul
fstpt
fdivr
data16
adc
je
mov
cmpsb
mov
mov
fsubl
scas
lret
mov
rol
arpl
fimuls
nop
xor
and
or
mov
outsl
negb
inc
fmull
fisubl
inc
mov
fbstp
stos
lcall
push
mov
sbb
insb
and
roll
imul
inc
dec
fidivrs
stos
icebp
xchg
dec
jl
mov
fs
repz
xchg
lods
fldl2e
outsl
xor
and
sub
mov
and
mov
call
aas
out
mov
push
rorl
push
loop
loopne
imul
xor
int3
out
mov
adc
and
mov
mov
outsl
mov
loopne
mov
fcmovne
shr
dec
pushf
mov
mov
and
std
int
xchg
movsl
dec
sbb
add
mov
fwait
sbbb
cwtl
inc
outsl
xchg
xor
mov
mov
cmp
and
sbb
jns
mov
movsl
mov
mov
into
push
sbb
decl
inc
jbe
in
int
bsf
stos
cmp
and
push
push
mov
fldt
shrb
nop
pop
lock
idivb
jp
inc
jmp
jp
mov
push
mov
outsl
fld
inc
or
loop
mov
and
mov
add
imul
sub
xchg
inc
jmp
movsl
lock
sbb
sbb
cmp
add
mov
fnstenv
jecxz
sbb
gs
sub
mov
outsl
lods
sbb
addr16
addl
xlat
xchg
adc
pop
mov
stos
and
cs
fldt
int
sarb
pop
xchg
arpl
xlat
xchg
jbe
sub
notl
inc
nop
add
roll
inc
jecxz
push
clc
out
jne
nop
jl
fidivl
mov
inc
add
jge
out
push
cli
or
in
inc
jb
jbe
xor
nop
add
shlb
inc
cld
and
jge
add
dec
jbe
fwait
dec
and
push
ret
pop
pop
xlat
das
dec
dec
cwtl
fstpt
test
cmp
sbb
pop
arpl
lcall
push
or
fiadds
xchg
sahf
cmp
ds
sbb
sub
insl
pushf
neg
pop
pop
stos
xlat
pop
inc
xchg
add
lahf
cwtl
and
std
jae
mov
jl
aad
shr
inc
mov
jbe
xlat
push
xor
cld
in
popf
xchg
cmpsb
push
mov
in
cld
mov
insl
enter
scas
ljmp
mov
xchg
sbb
jb
inc
jo
mov
ja
inc
xor
cmp
sub
data16
in
jb
lock
out
push
sub
jle
mov
out
sub
ret
jle
xor
adc
inc
arpl
jl
insl
fldt
cltd
inc
inc
pusha
aas
in
mov
loop
mov
in
cmp
push
pop
mov
push
insb
sbb
xor
stos
add
mov
in
inc
or
aad
xchg
int
jb
jp
insb
mov
sahf
jge
ss
enter
mov
cmpsl
std
fmuls
stc
mov
xchg
jle
mov
addr16
cld
outsl
jecxz
jnp
pushl
mov
xchg
rolb
inc
xchg
jne
xor
mov
push
xor
pop
add
and
mov
test
movsl
jb
sbb
out
cmpsl
and
frstor
aad
adc
xor
loop
or
adc
or
rolb
sub
bound
in
imul
pop
or
adc
int
outsb
cwtl
mov
push
lahf
cmp
call
sub
pusha
jge
or
inc
sub
daa
sbb
lret
jmp
pop
pushf
cld
jle
sbb
xor
popa
sti
xchg
add
sar
stc
push
cmp
out
imul
lds
adc
fcmovnbe
push
pop
push
pop
push
pushf
push
into
mov
cmp
scas
jb
mov
clc
enter
cmp
xchg
jp
ret
cwtl
dec
jp
insl
mov
xor
fimuls
adc
xor
lock
ret
jo
mov
sub
xor
js
push
jg
loopne
xchg
cli
add
mov
mov
xor
das
test
iret
sub
push
clc
ljmp
movsb
ret
int
insl
xrelease
pusha
test
adc
lods
iret
inc
not
lds
xchg
or
push
inc
iret
push
call
in
sbbb
jecxz
inc
fwait
sbb
cld
jnp
movsl
xchg
push
cld
out
ret
or
movsl
int
mov
sub
jl
lods
lea
mov
pop
jle
jle
adcl
lock
lfs
movsl
push
mov
cmp
je
insl
sub
sbb
adc
pop
push
clc
add
mov
push
adc
cmp
cmp
add
scas
sub
lock
dec
outsl
sbb
inc
jb
or
mov
mov
cmpsb
lods
push
or
fcmovnb
insb
mov
shr
int
shrb
add
sub
stos
rcrb
adc
or
clc
cmp
push
jmp
xchg
clc
xchg
outsl
fwait
push
test
cld
push
jg
insl
jmp
shufps
out
inc
rolb
imulb
imul
aad
repnz
iret
in
xor
sbb
inc
jecxz
out
fwait
or
cmp
inc
and
xchg
pop
add
jns
imul
pusha
stc
xchg
ljmp
mov
or
adc
adc
ds
in
xor
popa
clc
mov
fwait
movsl
and
xchg
fsubrl
dec
push
xchg
jbe
and
xchg
push
out
jns
arpl
cltd
sbb
loope
mov
sub
mov
out
das
inc
sub
sub
icebp
fdivs
fldcw
sub
add
loope
push
ja
ficompl
xchg
mov
ret
ja
movsl
inc
push
sbb
sub
push
in
jns
cld
test
popa
imul
xor
aaa
data16
xor
mov
cmp
xchg
scas
mov
test
loopne
lret
push
daa
rcll
shrl
xchg
ljmp
adc
outsb
popf
jno
fs
loope
cmpsl
add
lret
push
fsubrl
scas
add
adc
les
and
and
mov
dec
fsubrl
xor
push
sbb
and
or
jecxz
into
mov
xchg
mov
push
mov
stc
and
push
fistps
rorl
cmp
fstl
jae
nop
jns
sbb
test
or
dec
and
in
lods
decl
mov
and
and
adc
stc
xchg
and
add
mov
and
add
rcrl
xchg
scas
adc
loop
inc
dec
aam
dec
out
jne
test
dec
fs
cmc
lcall
pop
jmp
cmp
pop
or
out
int3
hlt
sbb
xchg
xchg
cmp
cmp
lret
jbe
dec
and
mov
push
imul
sub
fmull
xchg
push
outsl
jmp
nop
add
orl
mov
sub
adc
loop
pop
and
stc
into
cmp
lret
push
mov
mov
leave
push
and
repnz
xchg
rcr
inc
jns
jno
popf
sbb
shl
sub
or
std
jge
lods
push
les
cmp
rep
gs
pop
je
pop
push
icebp
ret
or
out
repz
push
int
jnp
push
dec
mov
fisttpl
mov
push
ds
in
outsb
xor
mov
sahf
fwait
jecxz
pop
scas
jne
nop
add
dec
repz
mov
and
adc
fs
sub
mov
dec
add
adc
lret
ja
jl
fcompl
mov
xchg
push
je
enter
push
pop
jb
test
mov
roll
mov
or
xchg
movsl
fcomps
test
xor
bound
outsb
mov
jg
out
in
stc
jecxz
and
sub
and
pop
push
shrl
shrl
push
jno
and
mov
fcom
loop
jo
std
sub
mov
push
test
lea
insl
and
int
pop
pushf
jmp
outsl
orb
into
int3
jns
aad
adc
cmc
pop
push
adc
dec
inc
insb
or
jmp
push
and
mov
cld
cmp
cltd
push
mov
fimuls
add
inc
sub
pop
sbb
xchg
lret
jb
test
pusha
inc
aas
test
test
pop
mov
in
sub
pop
dec
sub
xchg
iret
and
mov
adc
gs
xlat
mov
into
cmp
test
xchg
cmp
repnz
sahf
and
jns
mov
and
fwait
cld
mov
cmp
in
loop
pop
bound
pop
cmp
daa
sbb
jae
int3
adc
xchg
inc
repnz
cmp
add
repnz
mov
xchg
pop
add
add
jle
fs
xlat
dec
imul
je
out
sbb
xchg
mov
adc
sub
push
pop
dec
cld
cmp
cmc
in
cmpsl
sbb
cltd
jo
arpl
cmc
pusha
inc
notl
mov
stos
xchg
sub
popf
packuswb
je
js
pop
inc
sbb
sub
dec
cmp
in
jecxz
mov
push
lea
imul
ds
and
inc
popf
cmp
xchg
inc
jns
pop
fstps
xchg
adc
add
iret
cwtl
ljmp
dec
scas
les
fs
adc
out
pop
and
loopne
inc
insb
pop
dec
lret
mov
sub
and
adc
jmp
fisttpl
mov
rolb
int3
and
lahf
popa
ja
js
icebp
pop
stos
icebp
call
jmp
sub
pop
push
test
adc
xlat
pop
xor
shll
fs
cmpsl
test
call
mov
fdivrp
sarb
jl
sub
ja
leave
xor
cltd
daa
ret
pusha
ds
aam
clc
add
xchg
xchg
loopne
out
pop
lds
mov
mov
or
aaa
dec
std
jg
incl
mov
cmp
scas
hlt
xorb
addr16
lea
xchg
or
jle
pushl
sbb
jmp
jne
pop
dec
jge
lret
pop
mov
nop
adc
pop
adc
cmp
cmc
inc
clc
dec
pop
movsb
lods
roll
dec
xchg
jno
lahf
data16
push
jle
xchg
pop
in
test
jo
jne
xchg
cli
adc
stos
push
lea
fidivrl
iret
or
repnz
inc
aas
cmp
lods
fdiv
and
je
mov
mov
mov
push
dec
adc
xchg
jns
in
cmp
loope
std
jnp
push
ffree
sub
add
aad
mov
pop
insl
mov
fs
sub
xor
sti
xchg
movsl
sbb
xchg
mov
mov
push
ds
jo
lds
xlat
mov
inc
cmp
mov
mov
test
jnp
hlt
test
lret
mov
ljmp
aam
jbe
fwait
mov
and
add
into
movsb
loope
and
push
bound
cmp
mov
es
sahf
icebp
push
fildll
mov
fimuls
out
inc
xor
outsw
sub
std
fldenv
mov
dec
mov
pop
pop
sbb
rclb
mov
sti
mov
ret
fdivs
or
leave
cmp
cmp
jo
xchg
pop
mov
fmull
mov
out
push
cmp
ret
add
push
mov
jo,pt
add
xchg
and
xchg
insb
dec
lret
cmc
orl
mov
mov
mov
iret
inc
push
mov
sbb
lds
add
mov
push
xchg
dec
mov
inc
sub
xchg
enter
maskmovq
notl
movsb
mov
fisubl
fimull
repz
mov
lea
int3
pop
iret
imul
jle
jle
push
mov
pop
scas
push
sbbl
mov
mov
pop
test
insl
popa
push
adc
cltd
pop
ss
nop
mov
add
mov
xchg
add
push
push
cltd
jecxz
fwait
js
pop
pop
rcrl
cmpsb
outsb
add
pop
stos
es
in
and
pop
push
mov
faddp
xchg
xchg
pop
mov
mov
addr16
mov
js
adc
mov
aam
ss
ror
mov
and
or
cmp
mov
push
lcall
popf
hlt
dec
out
loope
push
push
mov
mov
or
or
roll
mov
mov
aaa
rcrl
push
nop
mov
pop
lods
mov
jge
dec
mov
stos
mov
ss
cmp
mov
adc
leave
sbb
jp
or
mov
rcr
push
imulb
insb
scas
test
inc
push
push
imul
aam
icebp
out
flds
leave
hlt
or
xchg
cmp
iret
cmp
jmp
and
jge
mov
and
mov
add
cmp
int
clc
pop
inc
or
or
inc
sub
inc
lahf
pop
mov
push
popf
mov
in
xor
cmp
push
rol
pop
inc
mov
das
movsl
das
push
mov
dec
shrl
repnz
or
push
adc
jl
aas
aas
cmc
cmp
add
xchg
int
sbb
movd
jae
jecxz
adc
aas
mov
xchg
stc
stos
lea
or
sahf
movsl
xor
mov
fldt
push
js
movsb
ss
das
movsb
lahf
mov
rorb
lods
sbbl
js
mov
rcrl
ja
lcall
shl
and
or
dec
movsl
out
jne
and
push
mov
xor
cltd
cmpsl
popf
repnz
cmp
pop
out
call
pop
push
sub
aad
mov
xchg
movsl
add
aad
popl
dec
push
mov
into
stc
sbb
rcrb
scas
call
out
jo
and
cmp
push
repz
dec
outsl
or
mov
ja
fidivl
or
pop
jmp
bswap
js
mov
mov
and
fidivrs
mov
ja
test
xchg
gs
mov
sbb
mov
mov
mov
xchg
std
xchg
lret
push
mov
int3
mov
cmp
aas
pop
scas
cmpsl
call
sub
pop
mov
xor
and
sub
out
out
or
mov
fbstp
adc
xchg
repz
scas
fldcw
add
pop
inc
ret
push
xlat
add
push
or
add
jnp
lea
xchg
das
out
pushf
dec
stos
jp
pop
call
ds
aaa
sbb
stos
pop
dec
xchg
mov
or
insb
inc
cli
pop
cmc
daa
xor
pop
xor
std
lods
adcb
or
cmpsl
xor
fsts
stc
dec
lret
mov
xor
adc
adc
adc
pop
in
test
insb
outsl
inc
clc
xor
mov
lahf
cmp
addb
pushf
inc
test
inc
mov
mov
mov
xor
sbb
jne
inc
cmp
adc
sahf
or
in
xchg
hlt
cmc
cmpsb
call
push
jb
xor
and
cli
out
pop
shll
stos
and
in
sbb
sbb
xor
mov
divl
test
jl
call
out
stos
inc
dec
andl
sbb
movsl
cmp
mov
add
call
jecxz
xor
movsb
mov
rcrb
mov
jo
test
pop
push
adc
dec
inc
mov
lock
or
xchg
lcall
or
ljmp
and
daa
and
aaa
daa
sbb
insl
sub
hlt
aam
add
dec
ficoml
or
in
movsb
ret
mov
mov
adc
xchg
jae
cli
push
arpl
scas
mov
sub
mov
push
push
aad
and
push
inc
in
stos
in
in
xor
enter
xchg
rorb
outsl
in
pop
mov
cmpb
daa
out
arpl
pop
stc
push
lahf
jge
scas
andb
mov
sarb
cli
pusha
das
dec
pop
push
cld
cmp
mov
mov
cmc
or
jno
div
cmp
ficoml
sub
dec
not
in
push
cmp
and
xor
push
mov
ror
pushf
test
push
or
inc
and
loop
lods
mov
std
fsubrl
fisttpl
mov
mov
sbb
cmp
dec
mov
add
push
push
arpl
xlat
xchg
mov
jge
sub
mov
ret
push
std
jle
mov
mov
push
sub
cmpsb
inc
jns
call
lahf
mov
xchg
add
leave
cmp
sbb
testl
push
adc
push
aas
lea
jg
je
fwait
stos
sbb
xchg
mov
pop
add
pop
push
jg
mov
movsb
int
lods
pusha
sbb
jo
sbb
mov
ds
cwtl
dec
in
ja
pop
int
test
iret
xor
cld
fimuls
jl
aad
fiaddl
icebp
inc
int3
pop
pop
out
je
mov
push
pop
cmpsl
notb
stos
fisubrl
insl
sysret
mov
dec
push
mov
out
inc
roll
inc
pop
ds
xorb
or
push
mov
ja
lds
sarl
imul
add
push
sahf
out
sbb
arpl
xchg
xchg
mov
icebp
add
sbb
sub
fdivs
adc
dec
aam
ljmp
das
out
jbe
ljmp
arpl
loope
gs
test
and
jnp
and
push
out
loope
outsl
nop
sbb
test
jl
jle
iret
and
ja
ret
loop
sub
mov
and
jle
and
pinsrw
out
push
adc
fsubrs
cmp
push
mov
or
out
mov
xor
stos
or
jne
das
mov
ror
mov
sbb
sub
or
mov
push
sub
cmpsb
test
jo
lods
mov
out
and
ljmp
cmp
push
rorl
in
push
xchg
xor
cmc
sbb
iret
dec
lret
test
dec
xor
cmpsb
pop
push
int
pop
subb
xchg
mov
jge
mov
mov
mov
lret
ja
xor
incl
add
push
mov
and
mov
inc
or
scas
push
push
fs
add
movsl
xchg
sahf
stos
lods
push
scas
insl
cmp
inc
in
mov
orb
adc
inc
mov
add
ja
mov
les
cmp
popf
mov
pop
adc
ret
shr
gs
xchg
jmp
jl
aam
loopne
push
lret
push
mov
sbb
jl
cli
lret
pop
fisubs
or
inc
dec
in
das
ds
mov
pushl
pop
or
jl
mov
inc
pop
pop
out
aaa
adc
mov
jo
mov
into
js
insb
push
in
sbb
adc
pop
test
test
cli
insl
sub
mov
repnz
jns
leave
cld
jo
imul
dec
jge
js
ja
movl
sbb
stc
outsl
aas
sbb
inc
flds
cmp
movsb
push
adc
mov
jbe
shl
ret
or
and
aad
adc
fs
jbe
rolb
into
mov
mov
xlat
jbe
mov
lahf
jne
pop
mov
fidivl
ljmp
push
leave
iret
loopne
mov
fmul
js
test
and
insl
push
setnp
add
fs
nop
add
popf
lret
jecxz
int
pusha
xchg
sub
arpl
scas
pop
test
popf
and
aad
mov
lods
rorb
ljmp
das
mov
mov
lcall
mov
in
add
cmp
ljmp
pop
xor
inc
rclb
jnp
inc
pop
dec
dec
jns
mov
sbb
mov
sub
movsb
sbb
loope
loopne
lcall
jns
stc
setle
xchg
mov
adc
into
mov
mov
and
in
lods
mov
int
jae
xchg
arpl
in
int3
outsb
lret
lds
mov
hlt
iret
xchg
gs
jae
shlb
add
leave
and
insl
sub
popf
xchg
pop
outsl
std
call
sbb
mov
pop
inc
loopne
push
push
bound
inc
fldcw
fisubs
outsb
repnz
testb
xchg
addl
ret
xor
fsubs
mov
test
das
cli
mov
mov
dec
scas
jl
adc
stos
in
je
inc
shrl
push
mov
push
or
inc
adc
in
pop
xor
adc
or
push
test
add
mov
push
push
jae
arpl
ret
and
jl
mov
mov
xor
pop
scas
ds
xchg
stos
nop
inc
iret
inc
aad
orb
add
shl
xchg
pop
int3
pop
inc
xor
xor
sub
and
xchg
sub
mov
sub
adc
fnsave
xchg
daa
data16
test
mov
test
lahf
mov
xor
mov
test
pop
sub
mov
cmp
stos
gs
loopne
icebp
sbb
pop
dec
and
int
aas
jo
dec
xchg
jmp
inc
popa
jbe
inc
mov
adc
rorl
xchg
jns
arpl
sarl
push
fcomip
mov
out
cltd
std
push
jb
sub
adc
cmpsb
push
mov
out
fisttpl
sbb
inc
or
in
or
lret
fdiv
cmp
xor
popa
imull
dec
fs
js
pop
xchg
mov
orl
push
and
jae
mov
sbb
hlt
sbb
adc
stos
ja
push
cmc
sub
sub
jae
test
test
pusha
dec
ret
out
or
jl
xor
sahf
adcb
fwait
pop
rorl
pop
lret
and
or
jb
mov
mov
or
fwait
push
int3
pop
adc
push
andl
imul
lods
fdivrl
test
push
lods
sub
repnz
xchg
out
movsb
cli
jle
or
mov
ss
lods
rclb
rcl
sahf
cmp
cmc
ret
test
mov
xchg
jmp
inc
dec
push
sub
adc
in
arpl
xchg
repnz
inc
cmpsl
int3
sub
stc
mov
add
test
adc
leave
xchg
repz
and
insl
dec
pop
sbb
push
imul
fcmovnb
imul
push
pop
jle
icebp
fwait
neg
fstp
cltd
jae
mov
dec
and
inc
movsl
icebp
sub
ss
sbb
iret
fwait
mov
rcr
jae
add
cmpsb
push
cs
sbb
or
xchg
lock
jae
cli
in
push
cmpl
xchg
lock
ss
ret
cmp
xor
scas
push
jp
push
iret
jbe
dec
inc
aam
int
and
stos
xchg
pop
sub
or
shl
jb
xchg
stc
dec
push
icebp
in
enter
inc
xchg
out
arpl
push
adc
push
scas
inc
ds
jbe
push
incb
add
mov
jne
outsb
movsl
stos
dec
adc
stos
pop
sub
push
dec
and
movsb
inc
sub
shrb
in
sbb
dec
loopne
pop
adc
sbb
or
lret
inc
jmp
lds
aam
jmp
mov
or
call
aaa
xchg
outsb
jge
ja
fs
mov
push
cltd
add
jno
inc
dec
push
inc
aaa
xor
add
repnz
mov
lea
js
frstpm(287
faddp
or
xchg
and
add
jo
push
mov
cs
dec
jmp
lahf
cmpsl
pop
test
xor
and
shl
mov
lret
xor
xchg
pop
enter
repnz
lock
hlt
into
enter
jae
ds
test
imul
jmp
push
dec
xchg
outsl
enter
cmp
nop
lods
repnz
enter
movb
sbb
mov
sbb
iret
lret
leave
jle
gs
pop
cwtl
mov
and
mov
jmp
data16
test
ds
xor
or
int
pop
into
fsubrp
sbb
jno
dec
cltd
pop
repz
in
shlb
inc
ret
test
cli
fs
dec
xor
cwtl
mov
hlt
push
shld
aad
mov
jne
pop
out
divb
sub
lods
out
mov
stc
add
hlt
cltd
jns
mov
xchg
leave
push
adcb
pop
jo
test
movsb
jle
sub
pop
jg
pop
pop
lock
sbb
add
cs
mov
out
push
inc
sbb
sub
adc
inc
mov
pop
inc
loopne
dec
or
incb
mov
and
dec
cmp
aam
jnp
in
mov
xorb
jge
or
xchg
fcoml
mov
dec
xor
adc
and
pop
inc
sbb
bound
arpl
int
repz
or
push
fstpl
fneni(8087
xchg
cmpsb
cmc
in
jle
jnp
dec
data16
add
mov
dec
cmp
push
cwtl
cs
push
icebp
stos
cmp
leave
fs
mov
xchg
mov
push
mov
mov
xchg
mov
jae
jp
dec
and
daa
mov
js
mov
ret
mov
loope
xchg
sbb
cmpsl
cmp
xchg
xor
push
insl
jbe
add
pop
nop
lea
and
push
mov
pop
mov
mov
xchg
addr16
sub
cltd
pop
mov
sub
xor
pop
imul
cmp
out
je
mov
in
pop
push
jo
mov
icebp
and
mov
inc
push
into
mov
aam
into
mov
cmp
out
and
popf
ret
mov
sbb
mov
loopne
xlat
or
push
fs
xor
out
sarb
notl
outsb
fildl
adc
adc
movsl
stos
scas
push
jne
xchg
pop
sub
lret
sbb
js
jg
add
dec
out
stc
out
sbb
mov
xchg
fcoml
out
ret
arpl
cs
ja
sahf
cmp
out
or
cmp
xor
mov
fbld
fsubrp
xor
lcall
rcll
mov
adc
mov
sarl
les
or
dec
bound
sbb
and
out
sub
gs
sahf
sbb
rclb
pusha
add
dec
shrl
cmp
rorb
outsb
sub
push
cmpsb
cmpsb
jl
sbb
add
sub
adc
inc
mov
test
mov
test
jnp
out
lods
dec
sbb
pop
cmp
or
enter
rcll
mul
fildl
add
sub
int3
jo
cmpb
leave
mov
jb
mov
stc
pop
aas
push
mov
lret
out
in
adc
cwtl
mov
adc
inc
daa
int3
movsl
xchg
cli
rcrb
pop
sub
adc
push
enter
call
dec
push
leave
pop
mov
dec
js
in
testb
daa
out
incb
lea
pop
jae
in
dec
sti
mov
inc
mov
add
adc
dec
sbb
cli
in
dec
dec
in
pop
jl
fcomps
popf
jnp
mov
call
cs
cmp
mov
jnp
and
pop
mov
add
pop
mov
insb
aaa
imul
jae
pop
sbb
fistpl
sub
imul
loop
test
sar
lds
cmpsb
mov
pop
push
jecxz
in
out
cmpsb
out
mov
aas
repnz
or
xchg
or
in
fisubrl
jge
dec
rcr
jne
stos
push
sahf
dec
fbstp
jg
adc
push
sub
out
add
aam
fldenv
pop
jae
sbbl
sbb
cmp
outsl
pop
popa
dec
std
pop
cmp
inc
cmp
scas
je
out
xlat
cmpsb
out
dec
je
jp
loopne
cltd
pop
pmaxub
push
inc
addl
stc
aam
xchg
push
popa
test
lret
ret
test
inc
jb
and
pop
cmp
pop
les
in
js
cli
mov
mov
dec
insb
jle
mov
add
imul
out
push
cltd
sahf
mov
dec
ja
push
push
dec
lcall
insb
dec
pop
out
loope
lds
sbb
test
repz
into
leave
xor
mov
or
and
lahf
or
add
xor
mov
iret
fsts
mov
out
sbb
add
movsb
sub
lds
out
sbb
jb
rcll
xor
shlb
jmp
xor
mov
xchg
sub
in
movsl
jnp
in
shrb
inc
mov
xor
cmp
mov
sbb
or
dec
dec
xchg
adc
cmp
jno
mov
xchg
mov
movsb
imul
scas
push
loop
cmc
fnstsw
jno
popf
mov
in
std
test
jnp
sbb
je
add
aam
loope
cwtl
lcall
fildll
cmpsl
add
cmp
add
stos
dec
fisttps
imul
pop
xor
pop
xchg
test
cltd
pop
in
add
sub
repz
jge
fstpl
push
cmpsl
mov
orb
xchg
inc
notl
xchg
into
or
mov
fstpl
sub
clc
dec
es
and
fwait
push
xor
mov
cld
bound
das
mull
xchg
leave
addr16
ljmp
pop
pusha
in
dec
incl
mov
or
stc
pop
cmp
ljmp
dec
orb
mov
lfs
xor
inc
lcall
adc
push
lods
hlt
add
xchg
mov
icebp
test
fdivr
jno
inc
loopne
cmp
cmp
repz
fdivl
push
xlat
push
mov
dec
add
mov
pop
mov
adc
das
shlb
adc
lods
popf
lea
xchg
pop
push
scas
aam
or
mov
test
adc
or
pop
gs
push
sarl
loopne
js
cmp
bound
sub
repz
shll
shr
push
mov
call
fstp
inc
lea
sub
xchg
faddl
sub
loope
xchg
hlt
ret
cmpsb
dec
push
bound
or
xchg
inc
jb
sar
and
sub
xchg
and
mov
dec
or
mov
in
xchg
or
adc
les
loop
jp
xor
push
mov
mov
pop
push
and
mov
push
cwtl
adc
loope,pt
add
push
cmpsl
aaa
lahf
scas
es
adc
fisubs
inc
xor
aas
inc
stos
xorb
cmp
in
dec
in
sti
das
mov
mov
and
jno
xorl
les
imul
fmulp
lahf
mov
adc
jecxz
subl
jg
sbb
jmp
push
cmp
sahf
add
xor
or
aaa
xchg
cltd
fstps
pop
dec
mov
xor
fiaddl
jo
ret
sbb
pop
mov
shlb
and
mov
repz
popf
push
lcall
lahf
insl
mov
inc
or
pop
dec
jno
jns
or
cwtl
outsb
enter
testl
jns
cmp
rcll
test
sub
or
mov
push
xor
xlat
add
xorb
pop
mov
aad
sub
mov
and
lock
dec
mov
jbe
pop
mov
out
push
pop
decl
cmpl
int
mov
movsb
mov
jecxz
and
mov
and
jl
stos
shrb
push
test
gs
pop
lods
fistl
scas
jl
and
xlat
imul
mov
sub
cltd
xor
push
jb
stos
into
dec
pop
jnp
inc
lret
sbb
ss
cmpsl
mov
mov
adc
or
popf
jmp
jo,pt
fwait
jp
in
push
mov
xor
lret
lock
pop
jne
inc
aaa
inc
pop
insl
add
arpl
fmul
sbb
adc
imul
fildl
jl
jnp
adc
outsl
sbb
jle
mov
cld
dec
lds
imul
adc
sub
mov
cltd
mov
aad
push
mov
pop
leave
xchg
ret
mov
arpl
mov
jge
and
sub
icebp
jmp
cmp
xor
hlt
add
xchg
push
mov
dec
lret
aam
pusha
mov
or
xchg
es
xor
xor
push
pop
je
push
std
adc
in
inc
mov
xor
xchg
in
push
insl
ret
mov
repz
adc
or
xor
adc
sbbl
aas
mov
cli
imul
cmp
add
mov
mov
add
arpl
mov
mov
xor
sbb
testb
push
and
or
mov
rcr
hlt
push
cmp
rorl
mov
inc
xor
xor
pop
xchg
loop
sbb
rcrb
imul
cld
fldcw
stc
and
shrb
cltd
pop
loope
mov
dec
movsl
sub
repz
stos
dec
rolb
and
sbb
mov
cmp
in
insb
mov
sti
notb
sub
jo
xchg
pop
sbb
jb
sub
sbb
gs
call
sahf
gs
jae
idiv
mov
push
stos
inc
xchg
push
mov
lock
or
rorb
scas
sbb
ljmp
daa
cmpsl
fisubrl
mov
outsb
mov
mov
orl
rorb
mov
cwtl
loop
fnstsw
xorb
mov
mov
dec
inc
jae
xchg
dec
push
mov
ljmp
add
aam
jl
das
ret
sarl
jmp
xchg
mov
mov
add
fadd
stos
add
test
test
or
or
cmpsl
loop
lret
sti
mov
movsb
pop
cmpsl
xchg
insl
pusha
xlat
mov
push
dec
loope
sub
cmp
and
rdmsr
add
call
sti
lret
mov
cltd
js
sarl
mov
repnz
inc
push
addr16
mov
scas
repz
repz
cmpb
add
ret
lahf
pop
loope
xchg
iret
les
aam
sbb
or
mov
ss
lcall
cld
in
popf
and
dec
sbb
popa
adc
mov
in
jne
or
rorb
cmp
lea
pop
inc
in
add
pop
sbb
push
ror
inc
shr
out
dec
ljmp
popa
ljmp
pop
mov
and
sub
je
loop
ss
popf
das
jmp
xchg
out
cli
stc
push
and
or
mov
test
hlt
and
xor
adc
rorl
push
jo
ss
sub
pusha
sti
jae
mov
mov
pop
cmp
lret
mov
lret
fidivrs
add
pushf
pop
lret
pop
sti
in
pop
mov
stos
int
dec
repnz
xchg
cmpsl
sbb
jne
loopne
in
ljmp
out
pop
cli
cmpsl
jp
cmpsb
jbe
test
les
lods
mov
loop
stos
adc
pop
je
push
out
dec
jmp
mov
out
aaa
cltd
enter
lods
out
inc
mov
orl
arpl
je
xchg
mov
clc
ret
mov
or
rolb
push
push
sbb
sahf
mov
movsl
mov
lock
mov
inc
ss
and
or
ja
sbb
popf
ss
fldt
add
xor
add
sub
and
mov
leave
adc
add
xchg
pop
stos
inc
aas
pop
lret
jae
xchg
dec
out
test
sbb
aas
in
push
cltd
push
fisttpll
rorl
lcall
xor
pop
cmpsl
repz
adc
jmp
xchg
sub
shlb
insb
mov
lds
inc
rcrl
pop
lret
lock
mov
bound
and
out
sbb
add
sahf
je
xor
pop
inc
cmp
insb
cmp
or
mov
clc
ja
repnz
cmp
inc
dec
ja
mov
xchg
cmc
fstp
shl
cli
xor
push
mov
mov
push
sbb
mov
inc
ror
or
mov
cmc
xchg
xchg
fcomp
xor
sarb
xchg
aad
sbb
jp
push
push
xchg
jl
push
cmp
xchg
test
mov
pop
xchg
jno
loope
test
xchg
jp
and
in
add
test
lods
dec
subb
cmp
shrb
xchg
call
es
dec
adc
pop
inc
ret
mov
fcoms
lret
leave
divl
fistpll
sarb
imul
iret
cmc
in
scas
jno
mov
sbb
dec
dec
mov
std
ss
lret
cs
sbb
push
dec
incb
rcrl
push
pop
adc
inc
into
cmpsb
pop
test
lret
int
mov
jmp
movsl
sub
cmp
ficoms
and
add
fiaddl
adc
loopne
mov
push
std
cmp
push
xchg
push
mov
mov
scas
adc
fiadds
loop
fldl
out
fmuls
and
stos
pop
dec
xor
mov
std
mov
xchg
mov
imul
dec
jns
mov
add
ljmp
inc
dec
jmp
push
mov
rcll
imul
lret
aas
push
add
aad
pop
add
dec
mov
jo
mov
cmovge
test
lods
shrb
ficoms
mov
pop
in
in
add
daa
sbb
or
movsl
mov
jp
cli
scas
sahf
adc
mov
add
lea
mov
fidivrl
andl
mov
and
sub
push
out
loope
loop
out
or
add
inc
stos
jp
dec
ficoms
shlb
adc
xchg
mov
out
xor
mov
lock
inc
popf
adc
cmp
xchg
jp
test
pop
mov
sub
dec
mov
imul
push
sub
bound
cmpsl
sub
ret
add
pop
cmc
xchg
test
push
and
in
jno
cmpsb
aad
iret
sbb
push
pop
loope
movsb
imul
fldl
sub
sbb
test
gs
call
in
pop
in
mov
insb
mov
cli
push
xchg
adc
inc
aam
mov
icebp
mov
pop
mov
mov
test
and
xor
jno
dec
movsb
dec
sbb
cmpsb
adc
fsubs
sub
mov
mov
sti
sub
jno,pn
into
in
cltd
mov
stc
movsb
mov
pop
fs
aam
outsl
pusha
pop
cmp
mov
push
lret
dec
jl
icebp
inc
mov
pop
stc
xchg
push
stos
push
inc
jecxz
cmp
adc
aam
mov
push
lods
inc
lcall
fldenv
pushf
int
mov
pushf
push
lods
add
divl
fstpl
fstps
lds
xor
es
cld
adc
mov
jne
or
incb
aaa
inc
pop
inc
enter
pop
sub
nop
rcrl
add
jge
aad
cs
mov
out
sub
xor
cmp
add
fucomip
call
pusha
dec
popa
repz
das
mov
fwait
imul
lret
pop
jmp
mov
sub
scas
jbe
xor
aaa
sbb
push
xchg
sbb
mov
push
cmpsb
jle
sti
cmp
or
xor
test
lods
mov
push
fs
jb
pop
push
lea
mov
ret
stos
lods
xchg
outsl
sti
pop
push
fstl
mov
lcall
xchg
hlt
or
mov
les
jae
sub
sahf
test
add
cmp
aaa
cmp
repnz
sti
inc
outsb
adc
xorl
mov
jle
and
shlb
jle
cs
or
mov
push
ds
inc
lods
enter
in
int
inc
movsb
dec
xor
fisttps
mov
mov
and
outsb
enter
loop
sbb
fcoms
inc
mov
xchg
jo
jg
and
call
jno
sbb
mov
ret
inc
pop
inc
dec
sar
addr16
imul
pop
sub
cmpsl
cmp
fisttpll
mov
std
xchg
outsl
xor
jecxz
push
inc
fldl
inc
push
mov
ds
jp
outsl
pop
shll
and
in
bswap
shr
rcrl
cli
ffreep
inc
sti
jg
mov
mov
sub
mov
inc
mov
and
ret
cmpsb
and
push
lcall
jp
shlb
or
out
pop
pop
xorl
inc
jg
inc
or
xchg
jns
pop
or
xor
aam
test
jnp
or
cmp
add
cmp
pop
stc
pop
mov
xor
cmp
cltd
nop
push
mov
pusha
push
push
outsb
mov
adc
shlb
pcmpgtw
xor
pop
pop
loop
push
inc
mov
andl
inc
aad
out
mov
xchg
dec
xor
test
addl
adc
aaa
inc
jmp
or
pop
outsb
cmpsl
out
ja
cmp
out
mov
repz
imul
insb
fwait
pop
cmpl
dec
jnp
xchg
scas
ds
roll
arpl
sarb
ret
mov
mov
pop
imul
xor
mov
enter
test
mov
or
andb
nopl
fsubl
lods
ja
mov
cmp
fstps
pop
xorb
or
sub
fs
push
popf
cmp
push
xor
xor
sbbl
pop
aas
movsb
mov
stc
fsubrl
mov
mov
or
add
mov
in
pop
lret
fdivs
mov
xchg
pop
inc
insb
outsl
inc
pusha
sbb
pusha
sbb
in
xor
inc
jmp
test
pop
cmp
sub
popl
push
cld
jmp
ljmp
sbb
sbb
fsts
cmpsl
mov
push
and
inc
aam
out
lcall
mov
imul
sti
or
inc
xor
xor
rcr
lods
xchg
pop
dec
mov
insb
into
pop
addb
loope
xor
fwait
daa
jl
mov
and
stos
aad
fimuls
std
imul
dec
test
add
in
and
or
and
cmp
xchg
addb
ret
adc
arpl
mov
int
aad
stos
into
xchg
adc
jg
lahf
shl
in
fcmovnu
push
shrb
loop
sbb
xor
fldt
inc
sbb
adc
ror
sub
repnz
stos
pop
xchg
cmpsl
mov
and
pusha
imul
andl
and
lock
cmc
jmp
sub
sbb
or
adc
repnz
add
lods
xor
shr
pop
push
mov
out
subl
mov
jecxz
sbb
xor
jno
adc
sbb
imul
aad
xor
ss
jge
decb
out
movsb
jge
outsb
cmp
mov
pop
jne
icebp
rorl
and
mov
and
pop
aaa
sub
mov
fisubrs
les
or
mov
dec
cmp
mov
xor
mov
add
adc
aas
mov
dec
push
pop
jne
dec
inc
jmp
rorb
push
add
lods
fdivrl
cmp
adc
xor
les
mov
imul
sbb
ret
mov
mov
ret
mov
leave
stos
mov
stos
outsb
fcomip
sti
ljmp
dec
mov
ficomps
sti
into
mov
cmp
and
mov
aad
fidivl
test
std
adc
sbb
jp
jecxz
inc
stc
cmp
xlat
or
sub
inc
scas
lea
sub
movups
jmp
scas
lret
js
divl
nopl
inc
push
outsb
daa
aam
mov
mov
xlat
fmul
push
xor
fwait
pop
cwtl
jno
ljmp
inc
fsubrl
add
in
cmp
xsaves
stos
add
xor
xlat
aad
cmp
ja
ret
and
or
int
add
lcall
cmp
add
in
rcrb
add
sahf
sub
xchg
xchg
and
add
insl
cli
popa
pushf
je
cmpsl
sbb
dec
or
sub
push
xchg
mov
add
adcl
mov
addb
pop
popa
xchg
lret
test
mov
sahf
scas
or
sarb
mov
mov
cmp
push
adc
dec
lret
sbb
movsb
test
xchg
lods
sbb
lods
mov
and
xchg
pop
adc
and
stc
enter
jns
xor
or
add
clc
stos
pop
data16
lret
push
sub
cmp
pop
lcall
adc
dec
test
sbb
int3
and
fidivrl
loope
dec
test
cmp
or
call
fisttpll
and
jae
loope
repnz
fimull
mov
lret
imul
mov
dec
jge
das
div
movb
popf
xlat
sbb
cltd
sub
div
add
out
dec
mov
je
pop
insb
push
pop
jnp
outsl
daa
shl
push
test
push
add
xchg
sahf
dec
add
inc
jle
sar
imul
int
scas
das
push
movsb
mov
imul
insb
jle
loop
iret
aad
popl
pushf
adc
jne
xchg
inc
jg
dec
pop
or
movsb
mov
sub
movsb
mov
stos
cmp
jg
pushf
fwait
mov
xor
or
in
dec
in
add
mov
ret
jae
mov
data16
cld
idivb
fldcw
mov
mov
iret
adc
cs
mov
dec
mov
xor
mov
push
pop
mov
pop
inc
pop
add
or
xorb
cwtl
lods
loopne
push
xchg
jecxz
cmp
push
popf
hlt
lds
stos
scas
aam
mov
in
sub
xchg
popa
sbb
xchg
mov
sub
mov
jge
mov
aad
das
cmp
lods
xchg
lea
pop
push
les
jns
sub
push
xor
cmp
push
stos
lahf
jl
loop
xor
stos
dec
jecxz
fdivp
rorl
call
push
xchg
cmpsb
fs
add
int3
cmc
adc
out
mov
iret
out
test
aaa
dec
and
mov
ret
cli
xor
adc
rclb
cmpsl
or
sub
loop
js
cli
iret
cmp
in
or
bound
push
xor
sahf
daa
jle
stos
pushf
xchg
inc
xchg
lcall
sbbb
rcl
mov
mov
fnstcw
pushf
dec
add
adcl
or
sbb
jge
call
test
or
pop
paddusw
mov
push
pop
cmc
lea
jb
push
lret
repz
xor
aaa
lret
mov
hlt
or
add
cmp
ret
or
loopne
jo
jnp
ret
call
adc
sub
gs
test
clc
push
dec
fadd
subl
out
stos
mov
lds
lahf
shrl
ror
add
push
popf
insl
loopne
ljmp
fisttpll
fsubrs
fnstcw
out
movsl
push
std
xchg
adc
fsub
outsl
testl
inc
mov
jecxz
ret
mov
sbb
push
ss
aad
xor
daa
mov
ss
jl
cwtl
cwtl
das
xchg
fisttpl
dec
addr16
rcr
mov
sub
inc
xor
jge
push
inc
test
mov
add
int
mov
test
mov
mov
add
push
dec
fisubrs
test
sbb
mov
or
cmc
rcll
push
xorb
mov
sbb
aad
jmp
popf
mov
push
inc
push
dec
inc
sti
cs
mov
mov
and
dec
jns
lods
add
test
pop
leave
cmp
pop
mov
mov
mov
int
jmp
popa
push
cmp
and
das
sbb
jmp
sub
movaps
jmp
dec
add
imul
jae
popa
cmp
repz
mov
jne
insl
fmuls
sbb
mov
lds
cltd
lods
mov
clc
cmp
mov
push
mul
pop
mov
lcall
push
jmp
mov
aad
sbb
adcb
jmp
push
push
daa
lret
cmp
xlat
sbb
fstpl
inc
les
mov
adc
pop
cmc
adc
adc
mov
mov
ds
pop
insl
pop
or
pop
xchg
xor
jns
enter
push
mov
fwait
loop
je
xchg
dec
lahf
insb
shl
mov
jb
ret
xor
ret
mov
call
dec
aad
andb
imul
ficoms
pop
mov
pop
fcompl
or
cmpsl
cld
and
cld
xor
and
aad
lods
scas
sbb
jl
fisttpll
ret
loop
sbb
xor
inc
ja
xabort
jecxz
insl
cmp
add
std
in
fdivrs
out
jl
cmp
stos
movsl
pop
and
loope
and
jmp
scas
mov
mov
mov
cs
cmpsl
add
sbb
cmp
ja
enter
add
lods
stc
xchg
into
dec
xchg
call
divl
leave
in
add
pop
xchg
xor
adc
and
mov
rolb
cs
xor
mov
jne
negl
push
mov
sbb
rcll
sbb
adc
insl
adc
xor
flds
xchg
jmp
movsl
cmpsb
and
mov
out
xor
sbb
pusha
popa
sbb
fldl
cmp
int3
cmp
cmp
ds
jns
mov
scas
inc
lcall
add
sub
mov
das
ss
les
test
mov
dec
outsb
adc
pop
or
addr16
dec
inc
xor
out
lds
roll
jmp
and
jno
stc
int
push
xchg
jmp
push
dec
lahf
imul
xor
clc
in
xor
xor
ret
in
push
or
xchg
cmc
sbb
cmp
adc
push
orl
repnz
call
adc
sub
int
and
xchg
les
hlt
dec
xchg
mov
sbb
pop
lods
mov
es
cltd
push
lea
mov
movsb
or
out
jle
mov
arpl
repz
fs
movsl
cmp
jl
push
mov
sbb
add
sub
sub
cmp
sub
lret
push
lea
les
and
frstor
cmp
sbb
xchg
cmp
mov
dec
loopne
lahf
jg
mov
mov
arpl
xor
pop
pusha
es
and
in
lds
lahf
outsl
jne
pusha
add
into
test
dec
dec
inc
daa
dec
sub
and
cltd
lods
xchg
push
lea
bound
add
rorb
cmc
int
lds
cwtl
rcrb
inc
add
dec
out
es
mov
push
sub
sub
sbb
inc
dec
sbb
add
mov
das
mov
cmp
dec
dec
adc
out
mov
sub
repz
fwait
jg
lea
add
xchg
clc
loopne
subl
mov
icebp
pop
pop
ret
inc
adc
or
fdivrl
inc
mov
leave
mov
xchg
push
add
cmp
cmpsb
out
push
pushf
jmp
cwtl
rcr
int3
push
mov
push
gs
test
xor
fwait
movsl
add
nop
sub
mov
inc
out
add
add
xor
es
push
push
fs
popa
add
adc
int
sarb
xchg
cli
inc
mov
push
add
cmpsb
inc
cmp
cltd
addr16
and
icebp
mov
cld
addr16
andb
xor
sub
mov
nop
pusha
movsb
inc
movsb
fwait
pop
int3
fmull
sbb
testl
and
clc
sub
loop
fstpt
adc
cmc
ljmp
sub
cltd
adcl
pusha
push
mov
adc
pusha
mov
test
cwtl
mov
and
jne
cmp
push
jnp
rclb
popf
nop
stos
mov
or
hlt
pop
or
xor
daa
ret
rcll
push
push
roll
cmp
sti
sbb
rcll
push
xor
clc
push
jno
cmpsb
ret
inc
loopne
dec
jns
mov
inc
or
inc
shrl
popa
jge
daa
sbb
ds
xlat
jb
mov
test
insl
sbb
mov
adc
popf
das
add
jmp
or
and
jge
movsb
xchg
cmp
test
mov
pop
sub
addr16
pop
subb
jno
adc
aad
out
or
imul
inc
shll
arpl
add
mov
ret
mov
jl
push
mov
popa
jl
adc
push
shlb
call
movsl
add
loope
jae
xchg
sbbb
mov
mov
and
sbb
fldcw
lret
or
add
incb
and
cltd
jmp
std
sbb
adc
xchg
or
and
pop
add
subl
int
sub
cmp
xor
cltd
pop
cli
fldcw
arpl
mov
xchg
out
push
in
les
xor
idivb
dec
lods
clc
mov
fisubrs
mov
sbb
pop
in
in
iret
fldt
mov
rcll
int3
imul
aaa
dec
adc
mov
leave
cmpsl
outsl
or
imul
sub
cwtl
mov
jb
mov
dec
inc
cs
jo
lds
inc
pand
dec
dec
fmul
inc
push
mov
rorb
jmp
cld
faddl
shr
mov
adc
mov
pop
out
jb
xlat
mov
fcomps
xchg
dec
push
imul
jne
lahf
adc
int3
dec
cmp
in
mov
xor
jbe
filds
mov
mov
add
cltd
xlat
stos
pop
inc
andb
sbb
mov
inc
sti
div
cmp
mov
repnz
add
rorb
lds
in
xchg
outsb
add
fidivrs
iret
cltd
inc
add
stos
pusha
mov
adc
mov
dec
call
lea
aas
nop
xor
or
lahf
push
mov
sbb
mov
or
add
or
sub
or
or
rolb
dec
mull
ret
jb
mov
mov
sub
inc
shrl
dec
push
cld
cmp
cltd
cmp
pusha
out
adcl
adc
stos
std
push
and
sub
outsl
in
mov
or
pop
inc
rolb
mov
mov
sub
leave
imul
adc
insb
jg
or
rorl
fistl
jns
xor
jge
divl
xchg
and
pop
pusha
lds
xchg
mov
ss
lret
sbb
jnp
arpl
inc
sahf
pop
mov
int3
enter
xchg
jl
push
scas
xchg
xor
xchg
aas
mov
sub
inc
scas
shll
or
pop
adc
or
ljmp
lcall
fsubrs
or
adc
sub
in
ljmp
jae
jnp
fistpll
dec
sti
cmp
fidivl
pop
sbb
mov
adc
jne
push
push
xor
filds
jae
and
stc
xlat
push
sub
fs
mov
leave
pop
ret
subl
or
imull
push
ret
cltd
loope
repnz
xor
not
das
in
sub
cwtl
fscale
adc
mov
loopne
push
inc
clc
mov
xor
lods
movsl
aaa
or
dec
pop
outsl
or
jmp
jno
test
pop
pop
sub
lods
adc
je
rcrl
ret
in
push
in
adcb
mov
lcall
add
arpl
push
xor
loop
mov
pushf
cmp
dec
xor
mov
and
push
xchg
outsb
cli
shlb
pusha
test
push
sub
les
cli
xor
cld
and
jns
dec
pop
movsb
push
jns
xor
fwait
sahf
movsl
xlat
loopne
ljmp
push
lea
xchg
mov
imul
sbb
push
mov
cli
adc
test
test
mov
xchg
pop
hlt
je
fimull
pushf
pusha
decl
xchg
bound
movl
or
add
stos
out
jmp
sbb
adc
shll
repz
mov
lret
in
inc
and
into
fsts
inc
lahf
rorb
sti
push
test
test
add
dec
inc
dec
into
fdivr
sub
fcmovne
test
sub
xchg
dec
in
fildl
cmp
lret
fldl
shll
scas
push
lret
push
in
mov
mov
pop
hlt
pop
jp
fincstp
xchg
out
and
inc
bound
or
out
push
push
jmp
mov
ret
xor
pushf
xchg
ficomps
sub
lret
lret
push
out
insl
repz
daa
pop
xchg
test
dec
xor
lret
cli
mov
mov
adc
push
das
cltd
cmpsb
shl
cmp
mov
aad
sti
xchg
xor
mov
inc
cmp
pop
add
pop
daa
das
outsb
loop
in
cltd
mov
or
mov
ror
sbb
jecxz
js
subb
js
popl
push
inc
mov
insb
rcl
fs
stc
inc
cmp
sub
out
insl
fwait
xlat
shll
cmp
aaa
fdivs
pop
pushf
ret
or
int
les
fisubrl
in
mov
push
cli
jmp
push
test
imul
dec
push
inc
jecxz
push
fs
lods
shl
sub
mov
xor
mov
jno
pop
push
cld
stos
add
jmp
aaa
repnz
mov
pop
fdivl
test
add
sub
fistpll
aas
outsb
mov
adcl
popa
fisubs
into
hlt
mov
test
cmc
popf
into
jns
out
cmc
add
add
mov
popa
ja
fs
dec
xchg
jmp
xlat
adc
xchg
loopne
mov
insb
xor
xchg
sub
repnz
inc
fistl
lahf
in
push
pop
jmp
sbb
icebp
push
fwait
ret
xchg
sbb
stc
mov
popf
ja
fs
xchg
xor
scas
jo
xor
ss
divb
faddl
orl
aas
aam
lret
dec
add
mov
shrb
arpl
fsubl
aam
sbb
cmp
dec
or
inc
les
xchg
test
push
hlt
jmp
mov
or
imul
pop
dec
add
or
mov
inc
xlat
adc
ret
mov
testb
pushf
adc
imul
inc
push
pop
push
outsl
out
sub
mov
adc
ja
xchg
sub
dec
rorb
int
jae
and
ljmp
xor
hlt
dec
lcall
mov
pop
in
cli
or
jbe
and
test
les
sub
roll
xchg
dec
sub
aas
jge
mov
arpl
lret
mov
int
push
imul
mov
js
sbb
idivb
cltd
repnz
int3
pop
jmp
data16
daa
push
dec
scas
out
data16
shll
sub
shll
mov
dec
pusha
iret
out
and
sbb
cmp
mov
mov
or
sub
out
pop
rcrl
mov
adc
imul
arpl
pop
jl
cmp
inc
pushl
and
cld
sbb
stos
in
adc
sub
dec
inc
xchg
rcrb
pop
dec
test
decb
call
sub
cmp
sbb
scas
xor
stos
test
outsl
cmp
stc
iret
mov
lret
addr16
in
add
imul
in
mov
pop
ss
out
jmp
xlat
sahf
aaa
int3
stos
out
ja
aad
fstl
cmpsl
mov
test
lcall
xor
xchg
jp
ret
cmp
mov
shrb
mov
mov
jo
xchg
stos
mov
mov
mov
mov
sti
xor
imul
add
shl
popa
invd
mov
shlb
push
xchg
in
in
push
into
out
in
pop
fldcw
mov
xchg
jno
clc
arpl
inc
cltd
into
or
dec
sub
sbb
adc
repz
imul
sbb
ss
push
xchg
out
out
adc
cmpl
lret
sbb
fcoml
fwait
clc
mov
xchg
pusha
add
adc
jp
sbb
enter
movsl
xchg
adcl
push
lahf
movsl
inc
cmp
into
inc
jae
or
bound
push
das
daa
rclb
push
repnz
mov
lret
mov
ret
jnp
or
xchg
xorl
test
shll
les
repnz
mov
jnp
loope
pop
icebp
ja
pop
sbb
hlt
cmp
out
or
stos
pop
or
mov
mov
or
cmp
mov
inc
jp
pop
dec
ss
mov
jnp
mov
nop
mov
enter
pop
fsub
stos
mov
loop
aas
sti
sub
cmc
push
cmp
in
xor
dec
inc
inc
fstpl
sbb
or
xor
ljmp
pop
mov
stc
nop
xlat
jmp
out
inc
fistpll
mov
sub
or
jno
pop
dec
dec
mov
or
daa
push
aas
sub
jp
in
iret
clc
int
or
out
inc
pop
add
push
adcl
xlat
repnz
inc
xchg
mov
or
je
pushf
xchg
loop
jo
clc
inc
sub
jl
xor
and
loopne
dec
or
fisttps
dec
test
cwtl
mov
cmp
inc
and
xchg
push
orl
sbb
add
xor
fmull
call
outsl
push
nop
xchg
das
cs
outsb
dec
push
fists
inc
adc
mov
xchg
xchg
in
out
adc
insb
mov
push
xchg
nop
jl
fsubrs
pushf
pop
sbb
fmuls
mov
inc
xchg
sbb
sub
sbb
insb
mov
frstor
test
jle
cmp
int3
loop
inc
xchg
mov
lea
jb
and
repz
xchg
cmpsl
jo
repz
cli
xchg
cs
xchg
inc
test
iret
outsl
add
ss
xchg
pop
aad
push
pop
leave
jmp
lock
out
lock
push
mov
fldcw
mov
scas
lods
mov
inc
movsb
into
lret
jo
sub
dec
imul
push
mov
adc
imull
dec
popf
mov
fbstp
out
clc
push
ficomps
mov
xchg
arpl
push
outsl
mov
cld
dec
mov
out
lods
mov
je
out
dec
sarb
push
pop
push
mov
rcrb
out
xchg
mov
popf
xor
push
cmc
cli
push
leave
ja
or
mov
and
push
into
cld
mov
sbb
jns
loop
test
add
sahf
mov
push
aas
shrb
inc
test
mov
cltd
sbb
outsb
test
lods
push
lea
jecxz
and
cs
push
int
mov
ficompl
xchg
hlt
rcrb
add
push
and
xor
mov
movb
je
sbb
ficoml
inc
setbe
xor
in
push
dec
cmp
aad
mov
shll
xchg
xchg
mov
pop
xchg
sub
pop
jno
daa
and
add
cmp
push
push
daa
jmp
adc
arpl
or
push
gs
movsl
repnz
push
fdiv
setl
mov
out
lret
lret
and
jo
sbb
mov
mov
fwait
sub
sbb
inc
ficoms
sbbb
adc
push
cmp
ja
in
xchg
dec
pop
cmp
sar
lret
sahf
mov
rorl
popa
std
mov
pop
jecxz
testb
popf
dec
push
cwtl
std
fwait
or
repz
xor
insb
pop
mov
cmp
cmp
insl
jnp
sti
in
ja
shl
ds
inc
dec
inc
call
and
lods
fs
jmp
mov
push
and
or
pop
movsb
sbb
outsl
adc
mov
clc
sti
lret
inc
fs
lcall
lods
mov
mov
lret
jge
lea
push
push
fs
lahf
into
sbb
pop
inc
xchg
repz
xlat
jle
test
xchg
push
xchg
xor
and
fstl
adc
mov
fstpt
xorl
fwait
jno
push
ret
loopne
cmp
cltd
loopne
aad
sub
loopne
push
andl
fcoml
jp
mov
sub
aam
into
lea
xor
fcomps
or
adc
push
sub
dec
push
or
cmp
cmc
inc
stos
mov
jmp
hlt
into
shl
mov
pushf
cmpsl
pop
repz
lret
int
jno
fistps
cmp
rol
dec
mov
inc
cmc
mov
xor
stc
mov
lods
fidivl
add
mov
adc
enter
xor
cmp
dec
or
mov
adc
cli
mov
rcl
cmp
add
jns
xchg
sbb
push
jmp
dec
pop
ds
push
cli
push
pop
add
jb
xchg
inc
push
aas
sbb
push
pop
mov
dec
movsl
push
pusha
cmp
jns
icebp
mov
jo
mov
mov
jmp
bound
or
add
and
xor
cmpsl
fidivl
lret
cltd
cmpsb
mov
outsl
inc
into
cli
dec
xchg
lcall
push
addr16
inc
jae
inc
pop
loope
xchg
fidivrs
cmp
repz
push
jmp
scas
mov
pop
and
in
cmpsb
stc
xchg
sbb
fsin
mov
jmp
pop
fst
sbb
and
mov
add
add
rclb
mov
jp
test
lea
add
or
adc
rolb
lods
or
inc
xlat
pop
adc
add
push
jbe
mov
pop
xor
mov
ds
add
mov
push
mov
push
ljmp
lea
fwait
xchg
mov
call
add
lock
cmp
push
lds
fdivp
sarl
lods
pop
in
cmpsb
adc
ljmp
sti
stos
xor
jnp
xor
sub
pop
insb
mov
jp
pop
nop
xchg
xor
je
xchg
mov
movsl
or
rclb
push
inc
or
mov
sahf
or
repz
out
add
cmc
adc
jl
addl
push
stc
mov
test
jle
inc
sbb
jecxz
jnp
push
aam
mov
adc
loope
sarl
xor
lret
and
ja
xchg
push
fs
mov
fisubs
push
mov
xor
mov
pop
push
dec
push
and
mov
inc
fstpt
repnz
stos
fadds
jg
adc
mov
in
push
ds
aam
dec
cmp
jg
adc
in
xchg
sbb
sub
in
sbb
sub
fisubl
pop
cmpsl
sub
or
jmp
cltd
setno
popf
rorb
fstpt
mov
sbb
jae
leave
xlat
lods
lret
dec
iret
push
and
test
and
sub
inc
je
pop
sbbb
mov
imul
dec
rorl
rolb
jae
enter
xor
or
sti
jp
leave
lock
mov
jle
sub
jnp
xor
cmp
pop
movsb
or
adc
movsl
cmp
test
lea
mov
repnz
dec
rcrl
imul
pop
or
cmpsb
popf
into
sub
jp
pop
mov
stc
xor
jmp
mov
dec
in
lret
idiv
or
loop
stos
ret
fcoml
push
decl
into
and
data16
hlt
mov
sbb
mov
std
add
dec
lock
and
jns
mov
lret
push
cmp
hlt
xchg
dec
push
pop
jns
out
lahf
jecxz
in
arpl
addr16
fmull
outsb
xchg
xchg
mov
pop
mov
sbb
in
dec
sbb
add
sbb
test
lock
cmc
mov
cmpsb
mov
fidivl
jl
test
jnp
push
mov
ja
shll
in
addl
dec
inc
push
gs
mov
mov
mov
pop
pushl
jno
xchg
cli
mov
sbb
xlat
jmp
push
pop
rclb
mov
mov
sub
mov
xchg
sub
xchg
popf
mov
loopne
addr16
outsl
shr
xchg
jne
mulb
stos
sti
in
jbe
push
aam
loope
movsl
mov
cmp
cmp
mov
fwait
movsb
mov
aaa
sub
imul
icebp
insl
cmp
test
pop
bound
dec
into
rclb
movsl
cmp
jg
cmp
movsb
mov
adc
jb
shlb
pop
cli
pop
jo
sub
xor
jp
shlb
xorb
adc
popf
out
pop
shl
and
mov
pop
es
icebp
jae
xor
sbb
jl
ret
pushf
inc
xchg
aam
pop
or
fisttpll
jns
mov
pushl
mov
imul
push
or
inc
in
stos
mov
push
push
imul
add
test
clc
mov
add
or
js
sbb
add
fndisi(8087
cmp
xor
xchg
rclb
sub
mov
or
cmc
adc
or
das
adc
mov
push
mov
gs
mov
cld
pop
cmp
repz
jae
insb
and
inc
adc
je
pop
and
or
gs
dec
cmp
js
and
jns
dec
mov
daa
clc
xor
mov
loop
xlat
inc
idivl
adc
sahf
scas
xchg
jg
bound
and
in
xchg
sub
mov
fistl
adc
or
fs
hlt
popf
sahf
out
push
hlt
movsb
ja
lcall
dec
xchg
jle
test
andb
subl
sahf
lcall
sub
inc
jae
dec
push
cwtl
mov
fimull
xor
mov
ja
adc
and
bound
pop
mov
adc
jg
div
es
shrb
scas
fwait
rcrl
adc
repz
or
ret
mulb
adc
in
xchg
mov
add
aam
inc
and
mov
outsb
push
movsl
ljmp
push
adc
fisubrl
jne
cmp
mov
mov
int
and
mov
test
pop
xor
addr16
xchg
movsb
push
mov
jo
or
fmull
lret
jge
sub
ds
add
in
leave
ret
xchg
sahf
cltd
xchg
and
in
test
mov
xlat
fsubs
test
pop
inc
aad
sub
inc
push
and
fidivrl
dec
lods
movsl
cmc
fs
jns
hlt
add
scas
inc
or
out
out
sub
sub
cmc
sub
aas
pushf
movsb
inc
enter
xchg
inc
sub
cwtl
jb
push
lret
mov
jne
mov
out
push
mov
mov
mulb
lds
gs
xchg
mov
stc
fisttpll
mov
fmull
inc
sub
icebp
dec
xchg
ret
lods
aaa
sub
and
push
rclb
in
test
cmp
rorb
and
out
sub
push
sarl
out
add
bound
mov
jge
aad
push
sbb
jbe
mov
jnp
jecxz
mull
sub
jbe
jb
jp
faddl
loope
xor
mov
jnp
sub
stc
sbb
int3
subb
in
jbe
xchg
mov
lock
xor
inc
adc
push
movsl
stos
push
fnstenv
movsb
add
cmp
pop
xor
xchg
sub
jo
popa
xor
nop
cmp
int3
push
xchg
fsts
inc
es
mov
cwtl
inc
mov
int
mov
add
movsl
or
test
fwait
int3
and
aas
notb
movsl
repz
fdivrl
shrl
jl
aam
test
aas
adcl
sub
or
inc
sub
pop
xchg
push
add
push
nop
ss
xor
cmp
cltd
sub
mov
aad
lock
adc
jg
cmpsb
lds
je
cmpsb
adc
cmpsl
jle
sti
xor
jne
or
out
push
sbb
mov
push
gs
push
fwait
int3
mov
into
cltd
repz
sti
cli
and
jo
pcmpgtb
push
lcall
arpl
test
fidivs
adc
and
hlt
dec
aaa
push
std
outsl
movsb
xor
lahf
je
test
fwait
inc
push
lock
xchg
pop
mov
orb
pusha
mov
jmp
and
mov
xor
mov
insl
push
clc
xchg
repz
ret
xlat
inc
rorl
inc
sbb
fsubrs
mov
push
xor
jnp
jno
test
mov
push
add
inc
or
sub
sbb
in
or
dec
outsl
sub
mov
loope
ljmp
pusha
int
sub
out
adc
mov
jae
mov
xor
ljmp
fisubs
adc
movsb
jbe
pop
xchg
pop
dec
cmpsb
push
scas
xor
mov
mov
push
push
lock
jnp
lret
out
rcrl
cmp
ret
sbb
lods
mov
aas
xchg
dec
xchg
mov
popf
push
cmp
inc
mov
sub
and
js
std
lds
push
repz
mov
out
std
jmp
int
mov
popa
cmp
and
inc
mov
sub
dec
push
fwait
aad
cmp
mov
pop
mov
push
cmp
test
aas
pop
cmpsb
jo
cltd
adc
insb
outsl
jnp
ljmp
icebp
clc
loopne
test
push
loope
ret
adc
lods
and
jae
repz
hlt
cmc
leave
enter
repnz
mulb
and
cld
push
pop
test
mov
jne
into
mov
pop
adc
es
leave
mov
xchg
cmpsl
mov
sbb
iret
adc
mov
push
mov
adc
and
lcall
jmp
aam
push
stos
aaa
ja
xor
and
nop
js
popa
mov
jo
sbb
mov
xchg
movsb
xor
lock
arpl
push
mov
dec
andb
or
subl
leave
rcll
jge
popa
enter
xor
mov
sbb
rcrb
cmc
inc
pop
push
outsl
push
adc
test
movsl
fstl
and
mov
lods
inc
shlb
add
testl
xchg
inc
testl
dec
pop
sahf
cmp
push
xor
fidivrs
jae
ljmp
cmpsb
lret
into
jle
pop
icebp
div
mov
adc
inc
xor
scas
test
mov
je
dec
iret
mov
stos
das
add
and
lods
lcall
shlb
loopne
fisttpll
out
dec
int
mov
out
scas
xor
dec
bound
jp
mov
stc
mov
mov
fisttpl
cmp
dec
cmp
dec
movsl
and
aas
or
fldt
cli
push
stos
mov
adc
push
fndisi(8087
popf
add
cmp
inc
mov
xor
dec
dec
rolb
or
mov
cs
pop
out
sbb
sub
dec
mov
push
out
inc
jnp
aad
adc
cld
adc
out
sbb
push
mov
aaa
out
mov
sbb
push
xor
mov
xor
cmp
xor
stos
cli
mov
div
adc
adc
cmovp
jno
cmpsl
pusha
popf
cmp
and
fnstenv
andl
jns
in
jo
inc
push
mov
int
outsb
test
stos
call
movsb
add
int3
lahf
fdivl
fildll
test
in
jl
xlat
das
push
call
cwtl
or
xor
mov
xor
mov
adc
mov
jecxz
inc
out
mov
inc
sbbl
cltd
mov
clc
cmpb
jae
jne
xor
clc
xchg
mov
mov
pop
pop
jl
sbb
jl
cmpsl
jge
sbb
and
test
gs
int
pushfw
mov
imul
or
fdivrs
pusha
arpl
out
sub
adc
outsb
lret
push
sub
adc
cmpsb
dec
mov
xor
sbbb
fs
xchg
rorl
push
cld
push
sbb
cmp
mov
int3
inc
push
pop
adc
hlt
sbb
mov
fdivs
lahf
inc
cmp
adc
add
mov
mov
pop
fildll
mov
sub
push
xchg
out
in
rcrb
stos
mov
fidivrs
adc
mov
and
mov
xlat
mov
mov
ja
xchg
mov
jae
mov
adc
cmovp
dec
rcrl
mov
sbb
sahf
das
in
jg
sub
sub
sti
jl
imul
mov
sbb
push
repz
or
ret
sbb
inc
pop
loopne
jle
cmp
push
les
push
push
mov
mov
adc
bound
in
inc
sub
insl
inc
dec
ror
sbb
imul
mov
scas
mov
in
and
into
cmp
xchg
adc
popf
daa
or
icebp
and
lret
ds
mov
fdivl
cli
mov
lods
dec
clc
add
dec
movsb
push
cmp
gs
sub
mov
jl
mov
lods
rcr
pop
iret
sbb
popf
xor
push
and
bswap
fdivrl
jg
data16
xchg
dec
mov
arpl
xor
cld
pushf
adc
xchg
mov
aam
add
sub
jle
add
outsl
mov
je
sbb
xchg
jmp
xor
mov
xor
push
push
fs
or
lock
mov
int3
js
sbb
cwtl
divb
pop
xchg
push
jmp
push
mov
xchg
lea
int
mov
mov
insl
push
lods
or
cmp
outsl
mov
xor
pop
in
add
mov
jns
mov
cs
push
mov
nop
aad
jg
insl
mov
ja
mov
inc
mov
pop
inc
sbbb
add
xor
repnz
jmp
sub
jecxz
pushf
xchg
cmpsb
mov
mov
inc
xchg
ret
rclb
orb
cld
cmc
adc
enter
mov
inc
and
roll
fldt
adc
in
arpl
iret
test
pop
sub
mov
lock
sar
dec
scas
cmp
xchg
insl
and
lret
lea
xor
in
xor
test
les
ss
into
loop
imul
fnstenv
gs
mov
frstor
add
hlt
std
push
dec
insb
and
add
aaa
push
aas
mov
repnz
insb
ret
sbb
mov
push
dec
popa
ja
clc
mov
je,pt
cmpsb
pop
or
mov
cmpsb
cmpb
dec
sbb
dec
mov
mov
ljmp
loopne
jne
cmp
repz
in
cmp
rol
cmp
cmp
and
dec
mov
push
lods
arpl
hlt
sahf
loope
sub
inc
in
mov
fsubl
aas
das
cmp
negl
sbb
pop
cmp
xor
pop
shlb
xor
inc
inc
rol
ljmp
repz
inc
fadd
or
or
dec
cmp
push
into
inc
mov
mov
add
mov
jo
jmp
arpl
fwait
into
shll
adcb
scas
hlt
cmp
jnp
dec
test
cwtl
or
jle
je
and
fistps
pop
mov
daa
xchg
nop
fstpt
xchg
mov
sub
mulb
sbb
hlt
lods
std
hlt
dec
inc
inc
dec
push
add
jg
adc
movsb
cli
adc
mov
pop
aam
loopne
and
imul
dec
idivl
sbb
call
pop
or
in
out
test
adc
inc
or
lcall
adc
push
xor
arpl
test
push
or
cs
mov
push
sbb
add
in
push
shrl
push
adc
jl
xlat
adc
push
pop
data16
pop
out
ss
pop
loope
xchg
into
test
pop
decb
mov
xor
frstor
les
push
gs
aam
cmp
pusha
mov
inc
call
jmp
xchg
push
fdivrl
cmp
or
mov
je
xor
movsl
aad
lds
daa
xchg
test
inc
and
icebp
sub
dec
push
pop
js
sbb
test
and
into
mov
dec
in
gs
pop
hlt
ret
or
adc
mov
mov
fucomp
cmp
test
call
ljmp
and
dec
mov
fwait
movsl
je
push
lock
cld
mov
repnz
xchg
shl
push
jo
xor
mulb
stos
add
sti
adc
adc
cmp
jmp
or
or
in
into
jae
xchg
negl
mov
mov
push
testl
dec
das
cmpsl
add
fwait
rclb
lcall
mov
imul
push
stc
ret
mov
or
icebp
lret
movsl
xor
xor
scas
fsubrl
cli
leave
jne
mov
xor
add
fildll
cmp
dec
cmp
sbb
inc
or
test
outsl
jne
sarb
add
mov
and
lcall
or
inc
fwait
xor
fstpl
lods
cld
stos
push
fmuls
cwtl
scas
push
out
fildll
enter
pop
in
cmpsb
inc
push
jl
mov
cmp
xchg
xor
cmp
jb
rorb
mov
leave
jmp
dec
or
bound
xchg
divl
bound
mov
xor
adcl
jbe
and
test
cmp
add
lods
sbb
icebp
jmp
cmp
in
dec
and
cmpsl
xchg
pop
jp
shlb
inc
inc
aaa
int3
or
call
dec
es
inc
loope
xchg
mov
into
jl
loopne
mov
mov
es
pop
pop
and
imul
insb
gs
lret
roll
mov
mov
cmpsl
outsl
sbb
push
add
jp
mov
insl
pop
mov
and
adc
adc
adc
scas
sub
ret
xor
movsl
jge
adc
movsl
movsl
lods
or
out
icebp
mov
lock
fsub
add
inc
push
xlat
push
jecxz
sarb
inc
add
sbb
shll
fistl
cwtl
mov
adc
adc
xor
and
out
lahf
xchg
mov
pop
lods
movsb
pop
dec
and
test
or
cmpsb
in
jo
push
and
out
sahf
int
mov
mov
stos
dec
dec
rcl
push
sbbl
pop
pop
lock
out
outsl
loopne
fisttpl
int3
jp
xchg
outsl
test
and
inc
lea
adc
or
xchg
cs
repz
repnz
fwait
add
push
mov
push
push
push
scas
shll
jg
push
fdivl
pushf
iret
mov
jmp
insl
ss
ja
pop
adc
mov
js
loop
movsb
xchg
mov
xchg
call
adc
xor
mov
aas
dec
cmpsb
xor
test
mov
outsb
jmp
lret
decl
mov
lds
sti
je
sar
push
mull
daa
cmpsl
mov
jg
imul
and
push
mov
out
adc
adc
cmp
and
xchg
aas
xor
leave
pop
shrb
shrb
test
jp
loopne
repz
test
clc
imull
sbb
inc
sub
dec
push
dec
les
push
mov
call
jb
push
xchg
out
lret
cmp
scas
std
or
repz
pop
mov
std
bound
push
popf
in
movsl
add
jmp
xchg
clc
in
and
xor
pop
xor
imull
mov
jmp
inc
xor
outsl
in
and
lret
cmp
es
pop
xor
cmp
andl
scas
arpl
aam
xor
pop
loope
lea
fsubr
ja
mov
xor
aad
mov
push
rcrb
push
xchg
jae
out
mov
jae
movsl
lods
xchg
cld
inc
ret
fisubl
pop
cs
movb
loop
xchg
fldl
adc
jle
or
out
push
mov
mov
lods
jmp
jg
pop
cmc
jle
pop
popa
push
dec
cmp
push
jge
ret
add
inc
cld
push
or
inc
pop
jnp
es
out
push
push
mov
fdiv
iret
jb
es
jmp
mov
or
xor
dec
sub
lcall
int3
push
push
adc
nop
dec
xor
jo
je
lods
mov
inc
adc
and
rep
or
push
rcl
mov
lretw
mov
pop
iret
scas
cmp
mov
push
mov
test
xor
xchg
mov
test
mov
sahf
jmp
cmp
outsb
jle
inc
cltd
pusha
ficompl
ret
mov
cmp
aam
ret
mov
pop
stc
mov
stos
in
jp
aas
xchg
lds
adc
xor
push
dec
jle
jle
fsub
mov
test
pop
xor
cmpl
mov
add
jp
insl
and
mov
sbb
mov
aad
pusha
xlat
jle
stos
cmp
mov
jbe
mov
lret
xchg
fwait
xchg
icebp
push
in
ret
dec
cmc
shlb
lods
loop
xchg
inc
int3
out
shlb
ljmp
pop
jno
imul
mov
pop
ret
adc
mov
subb
mov
or
int3
adc
pop
test
sbb
lret
xor
pushf
push
popa
add
fisubl
mov
jnp
sti
adc
mov
ja
jno
lcall
xchg
jl
cmpsl
xor
scas
imul
popf
jp
pop
bound
ss
jns
mov
sub
jl
test
gs
inc
add
jge
push
cltd
cmp
sub
cltd
cld
fisttpll
flds
cmp
and
cmp
iret
setnp
popa
jmp
ja
std
gs
nop
mov
fildl
lock
notb
loop
fwait
js
mov
push
imul
sarb
jne
je
fnstcw
jae
or
ss
fsubrs
rolb
repnz
cmp
stos
jl
dec
scas
jecxz
das
incl
inc
pop
sub
into
test
jnp
sub
or
pop
fs
cwtl
orb
leave
jo
adc
dec
mov
inc
dec
jecxz
push
add
lahf
xchg
arpl
aas
pop
sbb
xchg
sbb
clc
push
jo
nop
fs
push
and
sbb
push
in
mov
test
shrb
cmp
sub
scas
push
fcmovb
stc
xorl
mov
es
incb
jae
mov
addr16
dec
or
dec
mov
push
jle
shl
xor
lahf
and
xchg
ljmp
xchg
lcall
cmpl
xchg
dec
js
or
sub
fwait
mov
inc
mov
loope
or
push
jmp
dec
pop
inc
and
push
inc
xor
push
mov
add
cmp
jecxz
mov
xchg
es
push
jbe
fsubr
inc
lock
cmc
mov
sub
pop
cs
fwait
pop
sub
add
dec
xchg
mov
enter
aas
pop
xchg
mov
xchg
pusha
xchg
xchg
out
mov
sahf
adc
cmpsb
lock
daa
insb
lret
xor
scas
aad
cmp
push
xchg
jp
pop
sbb
jae
mov
push
or
ljmp
xor
test
repnz
loop
inc
scas
sti
outsl
mov
jnp
jb
negl
je
ficoml
inc
dec
mov
lods
push
add
push
xor
lahf
shr
jge
jnp
shll
cmp
mov
in
xor
cwtl
ljmp
jbe
clc
fisubl
xchg
push
pop
repnz
cmp
sbb
cmpb
mov
mov
add
pop
cmp
lahf
int
shll
test
mov
loopne
out
or
dec
into
jne
stos
mov
aam
or
ds
js
mov
insl
sbb
hlt
mov
add
pushl
cmp
mov
popf
popf
xor
test
das
inc
mov
pop
xchg
cmp
pop
or
add
ljmp
mov
ja
mov
sub
mov
in
sbb
lea
cmp
stos
sub
and
das
add
inc
dec
test
mov
sub
test
ret
add
jo
and
stos
sub
dec
dec
xchg
stos
push
push
jne
shl
stos
stos
add
mov
lahf
push
shlb
fcmovne
adc
xchg
scas
mov
mov
or
fsubp
jge
pop
fcmove
in
insl
out
fiadds
adc
jno
fisttps
pop
pop
mov
mov
inc
xchg
jp
cmp
std
xchg
imul
int
faddp
test
adc
mov
mov
mov
sbb
cmp
fnstcw
dec
inc
dec
push
push
xchg
rcrl
test
mov
jnp
imulb
fcomps
into
in
cld
adc
inc
add
pop
cmp
adc
mov
adc
je
stos
pop
jmp
xchg
xchg
inc
push
lea
sbbb
dec
arpl
in
and
mov
sub
clc
arpl
pop
or
enter
je
cmp
ds
ljmp
in
cld
add
mov
pop
push
lret
out
jle
imulb
loop
outsb
movsb
mov
pop
sub
and
xlat
leave
in
pop
iret
mov
addr16
les
jae
pop
and
pop
test
hlt
aaa
into
xchg
push
into
mov
pusha
adc
inc
pop
out
nop
sti
pusha
jle
ret
adc
test
jge
mov
imul
fs
push
repz
nop
out
jbe
inc
sub
jb
add
je
push
xchg
dec
jmp
lds
mov
mov
jne
or
dec
mov
xchg
iret
test
and
das
or
adc
sbb
inc
pop
popf
popa
sbb
into
imul
mov
movsb
xor
bound
jne
push
pusha
jge
loop
add
mov
add
inc
mov
aas
cmp
jbe
test
enter
push
shrd
or
lret
ja
and
pusha
lods
adc
and
xor
dec
lret
call
push
pop
inc
test
pop
movsb
push
adc
in
push
test
das
add
fistl
loopne
sub
push
pop
enter
fcompl
dec
insb
pop
cmp
nop
data16
push
outsb
fdivr
adc
call
addr16
and
leave
test
sub
push
add
loope
lods
fsubrl
inc
xor
xchg
jbe
jns
shll
ljmp
or
daa
xor
pop
mov
push
mov
popf
aad
inc
fsubrs
add
sub
push
stos
push
push
mov
inc
ficoms
xchg
cmc
xchg
cmp
fldl
cmc
push
cmp
and
ja
inc
int3
inc
cmp
stc
and
xchg
mov
or
orb
pop
cs
add
subb
inc
out
xchg
ss
jbe
push
gs
insl
dec
in
aad
mov
xchg
arpl
jns
pop
in
mov
pxor
pop
addr16
xchg
cmp
popf
jg
mov
mov
push
push
cmp
jmp
inc
js
scas
test
mov
push
rcr
jbe
or
lock
outsl
pop
js
cltd
mov
sarb
sbb
lea
push
pop
adc
mov
mov
aaa
mov
stos
mov
jno
bound
xor
cld
dec
out
xchg
jge,pn
pushf
mov
movsl
push
push
mov
xchg
push
add
lds
sub
mov
mov
or
or
mov
push
in
cmp
leave
ljmp
pop
and
daa
pop
pop
push
cld
icebp
cs
or
and
mov
jns
mov
imul
jne
jne
popf
xor
pop
data16
add
icebp
xchg
xor
jns
pop
adc
and
add
cmp
dec
lea
fyl2xp1
adc
int3
pop
mov
pusha
lea
mov
lds
lcall
lcall
stc
ret
lods
push
adc
mov
enter
test
arpl
push
jb
fisubl
sti
pop
jmp
push
iret
xchg
enter
pop
mov
imul
push
pop
repnz
nop
bswap
fiadds
cltd
es
jnp
adc
inc
roll
imul
loop
in
out
mov
mov
mov
das
sbb
cld
and
inc
lret
mov
in
stc
fdivl
arpl
adc
sbb
stos
push
mov
iret
pusha
loop
pop
mov
cltd
into
clc
movsb
sub
xor
in
pop
add
pusha
fwait
mov
sbb
fwait
movsl
test
cmpl
jle
mov
popa
jl
insb
nop
mov
insb
dec
popa
into
add
pop
sbb
adcb
inc
cmp
and
lret
adc
xchg
push
jne
xlat
in
sbb
sub
out
shrl
psrlw
ja
je
and
js
cmpsb
dec
mov
fsub
xor
dec
cltd
repnz
xchg
cmpb
and
mov
mov
xchg
adc
dec
sub
es
mov
dec
or
jbe
int
sub
pushf
es
out
add
mov
out
addr16
mov
cmp
arpl
cmp
orl
sbb
in
lods
jnp
or
xchg
mov
int3
ss
ret
lret
pop
mov
adc
pusha
fincstp
cmc
and
fistpl
dec
hlt
or
mov
mov
lods
inc
inc
adc
in
hlt
cltd
ret
fldenv
insb
and
iret
sbb
or
dec
dec
inc
jo
inc
mov
ret
pop
jg
mov
sub
adc
test
outsb
loop
xchg
fldl
add
dec
xlat
lcall
js
into
lock
jg
out
out
add
mov
test
or
repnz
cltd
in
xor
inc
cltd
lea
cmp
in
mov
and
shrb
or
push
inc
mov
sbb
out
js
bound
adc
inc
scas
repnz
jecxz
jp
sti
ja
idivb
outsl
mov
xor
inc
rcl
add
push
call
jmp
sbb
pop
imul
adcb
insl
jb
xor
pusha
lret
clc
int
jmp
scas
test
xchg
iret
out
stos
xor
jnp
repnz
jge
jmp
and
loope
mov
cld
ljmp
outsl
pop
fmull
mov
mov
test
pushf
rorb
outsl
mov
push
pop
stos
lret
icebp
out
or
js
and
orl
jl
cli
stos
cmp
jno
ret
jl
inc
outsl
shll
ret
enter
mov
jmp
push
pop
mov
pop
mov
out
scas
xor
orl
and
mov
mov
fmull
inc
pop
xchg
cmp
aas
inc
xlat
mov
jno
and
ss
outsl
push
leave
mov
cli
sub
push
jae
or
je
inc
movsb
xor
fs
mov
mov
in
je
dec
lret
dec
in
loope
jno
lea
ficompl
daa
mov
testl
aas
jg
xchg
in
sahf
jmp
pop
sub
sbb
out
cmp
pushf
mov
mov
xor
into
hlt
inc
test
bound
push
xor
jl
mov
cmp
sbb
pop
in
jl
insb
cmp
in
clc
xchg
imul
xchg
in
dec
or
push
xor
push
adcl
movsl
mov
mov
dec
test
fisubrl
mov
fwait
inc
hlt
jl
fistpl
je
sbb
mov
int
xlat
sahf
out
leave
addl
ret
aam
add
loope
sbb
rcr
and
jns
or
jns
pushf
or
jae
or
stos
mov
sti
cmp
test
pop
fwait
and
and
inc
xchg
test
dec
mov
sub
xlat
sahf
push
jnp
push
jge
mov
addr16
mov
sbb
sbb
pop
lock
pop
push
or
xchg
fdivl
or
pusha
out
shll
add
stc
ds
icebp
jbe
pop
pop
test
and
lcall
idivl
ret
dec
cmc
mov
lock
daa
fldl
or
adc
aaa
pop
pusha
dec
mov
bound
fidivrl
mov
icebp
mov
aaa
push
fmuls
jmp
lret
fs
add
fbld
pop
lcall
testl
or
jecxz
jmp
mov
xor
outsl
pop
lea
aaa
or
jge
add
je
cmpsl
pop
jle
xor
in
ljmp
test
stc
dec
jmp
mov
dec
push
inc
fists
sub
negl
lcall
xor
fdivp
xchg
scas
push
insb
mov
push
or
lahf
jle
jecxz
mov
ret
js
clc
push
cmpb
jecxz
jae
xchg
add
xchg
and
daa
mov
xor
and
sbb
lods
leave
push
add
es
adc
in
xor
pop
arpl
out
insb
les
xor
shrl
jp
ja
cwtl
cmp
aam
inc
mov
sub
jle
ret
fidivrs
clc
fldcw
cld
mov
out
pop
sub
mov
mov
test
add
je
dec
xor
jecxz
or
pop
sbb
into
out
pop
jo
mov
mov
push
je
push
iret
push
cmpsb
popf
inc
dec
dec
sbb
mov
cmpsb
xor
call
fistpll
or
jg
les
js
adc
or
shrb
daa
or
andb
jge
ret
xchg
or
sub
dec
arpl
lret
std
push
cmc
mov
pop
ret
shll
mov
push
push
in
inc
fdivrs
push
push
xor
data16
mov
fldenv
fisubrl
jno
xchg
xlat
pop
lret
imull
dec
mov
mov
arpl
and
xchg
lock
fisubrl
jae
ficompl
das
call
mov
int
fdivrs
mov
jge
mov
jp
je
sahf
fnstsw
dec
test
dec
gs
push
mov
adcl
jp
jecxz
incb
xor
lret
ret
gs
loop
inc
sbb
movsb
int
test
push
sbb
xor
test
dec
mov
mov
fsubrs
cmpsb
mov
aad
push
adc
xchg
jnp
mov
xchg
arpl
dec
aaa
cmp
fcomi
int
pushf
or
pop
int
jp
pop
mov
mov
lods
mov
dec
in
adc
repnz
lods
lcall
into
cli
xor
leave
aaa
out
xchg
inc
out
pop
xor
shlb
jb
lods
les
repnz
sbb
cmp
lea
cmp
sbb
fs
aad
pop
cmp
shr
call
ret
test
shlb
jmp
cmp
mov
push
mov
test
and
jns
cmp
pop
xchg
pop
dec
in
cs
pop
movsl
aam
cmp
xrelease
cmp
jmp
sbb
jp
jno
cltd
xlat
adcl
push
push
fidivs
sbb
imul
lret
mov
sub
sub
mov
fstps
outsl
xor
push
push
nop
shlb
fiadds
cmp
xor
jno
add
dec
outsb
dec
gs
jmp
push
aam
pop
adc
cli
jb
movsb
pop
cli
fldenv
call
mov
pop
mov
popa
mov
pop
dec
mov
int
jne
loope
mov
icebp
mov
or
xchg
shl
pop
xchg
test
pop
push
mov
mov
xchg
jecxz
rcll
test
sar
jl
lret
add
mov
sbb
fistl
pop
ds
sub
movsb
incl
mov
ds
xchg
xlat
jge
cmc
mov
movsb
es
push
jle
aad
mov
mov
test
jg
or
xchg
sub
add
xlat
cmpl
cli
scas
jb
pop
in
lret
int3
jbe
pushl
repz
or
push
push
arpl
ficompl
xchg
or
xchg
bound
popa
lahf
add
imul
xor
dec
pop
fimuls
xlat
pop
pop
or
xchg
or
fildll
mov
arpl
call
stos
mov
sub
push
jae
sbb
or
jb
aaa
repnz
mov
jns
aad
adc
dec
jecxz
cld
fcoml
adc
jae
mov
pop
test
cmp
jle
xor
mov
pop
push
std
shrb
cs
je
and
divl
icebp
aas
std
xchg
mov
je
hlt
sbb
cltd
rep
sub
mov
inc
sti
loopne
aaa
ret
in
sub
jp
mov
mov
xlat
push
mov
frstor
pop
dec
addr16
insb
xchg
jge
addr16
ds
aaa
add
sub
dec
mov
push
int3
push
push
add
gs
push
ret
aam
test
lods
jle
mov
push
out
inc
push
adc
js
xchg
out
add
sbb
inc
fs
das
in
lcall
shll
mov
lcall
aam
add
sbb
fidivs
inc
push
push
mov
lcall
xor
mov
mov
je
and
pop
xchg
or
out
jb
int3
sub
dec
stos
in
or
cltd
pop
mov
mov
dec
popl
adcb
nop
and
and
rolb
adc
adc
inc
or
fstpt
mov
jnp
jnp
add
push
lock
loopne
xchg
pop
aas
lret
test
sti
fldcw
jns
mov
cmp
mov
fwait
pop
adc
test
add
fcomp
sbb
fimuls
cmpsb
outsb
cmp
push
ja
les
lods
loop
loop
repz
call
xchg
movsl
les
xorl
test
dec
jg
adcl
fsubl
repnz
addl
jl
pop
jbe
call
iret
imul
ds
sbb
and
loop
loope
out
ficompl
push
push
push
lds
mov
pop
cmp
icebp
aad
pop
out
test
subb
inc
icebp
sahf
outsb
or
orb
mov
loop
jne
sub
notb
dec
add
inc
mov
imul
cltd
and
push
nop
push
das
test
imul
jae
jb
cmpsl
xchg
pop
fs
call
sub
icebp
xor
cmp
scas
test
mov
mov
outsb
mov
jne
decl
aad
jb
arpl
lods
nop
fistl
in
mov
ljmp
adc
pop
sub
mov
stos
dec
mov
mov
out
push
jnp
cmp
bound
arpl
push
mov
mov
push
xchg
in
pop
xor
xlat
test
outsl
sbb
ljmp
xchg
ss
loop
jbe
ljmp
into
gs
testb
ja
or
inc
fcoms
add
sbb
out
lods
sbb
lahf
std
js
roll
xor
fcmovbe
push
jmp
das
int
push
jnp
mov
jmp
cmpxchg
shl
dec
into
popf
and
insb
add
xchg
xor
sahf
std
dec
add
and
iret
ficomps
scas
inc
push
push
add
adc
mov
adc
lret
movsl
mov
insb
inc
loopne
int
or
pop
cwtl
into
test
cmp
push
fldl
sbb
aam
cld
mov
mov
pop
xchg
dec
xor
adc
bound
jno
mov
test
sbb
or
mov
dec
xchg
dec
push
out
add
imul
push
xchg
ror
movsb
sbb
push
fmuls
in
mov
xor
mov
outsb
dec
jp
adc
lea
push
inc
hlt
jno
cmp
aad
imul
les
test
xor
jg
mov
mov
xchg
cld
aam
stc
mov
jno
add
mov
rclb
add
ror
inc
test
fldl
xchg
aaa
std
out
rorb
pop
loope
or
sarb
icebp
push
fldcw
push
rcrb
iret
nop
pusha
in
xchg
mov
fdiv
or
xchg
jge
push
inc
or
fmulp
mov
cltd
pop
jle
sbb
out
cmp
inc
movl
fistps
fstpt
lods
and
sbb
dec
jns
jecxz
push
xchg
mov
jl
dec
jecxz
dec
pop
inc
daa
pop
add
pushf
mov
jecxz
imul
mov
adc
mov
jle
nop
cmp
aam
pushf
add
int
cmp
test
loop
push
push
adc
lahf
dec
fildll
jl
les
cmp
jle
add
mov
fisubrs
xor
fucomi
adc
xor
cmp
fistl
push
push
push
stos
or
loop
mov
xor
xor
fstl
xchg
mov
jo
xor
leave
push
mov
mull
inc
cmc
mov
cli
test
dec
xorl
hlt
fidivl
mov
addr16
mov
iret
ljmp
add
mov
lock
xor
nop
lahf
jbe
push
pop
sub
adc
mov
sbb
iret
push
in
or
mov
cmp
or
xchg
xchg
mov
mull
sahf
add
sarl
aam
test
mov
or
sbb
pop
pop
inc
jmp
pop
push
jo
cmpsb
cmp
pushf
sub
lods
push
cmp
dec
mov
test
mov
and
std
mov
lahf
test
punpcklbw
push
jg
dec
sbb
dec
mov
push
loopne
aam
add
cmp
ror
xchg
movsb
call
pop
adcl
int3
mov
arpl
inc
sub
xlat
add
lcall
daa
insb
and
xor
dec
scas
mov
dec
dec
xchg
ret
mov
mov
scas
push
fwait
or
sbb
in
inc
jbe
cmp
lods
lods
aam
mov
ret
mov
ss
scas
icebp
ret
nop
outsb
jl
mov
or
enter
bound
adc
ljmp
jle
jbe
mov
mov
icebp
ljmp
lahf
xlat
in
repz
push
pop
stc
mov
add
lcall
xchg
sub
mov
xorl
mov
lret
popa
sub
add
pop
mov
pop
inc
dec
mov
dec
and
adc
pop
push
inc
cmc
fsubr
xchg
lret
jecxz
push
dec
movsl
repnz
add
xchg
xor
adc
push
sbb
add
push
insb
movsl
cmp
inc
cmp
lret
out
arpl
jo
out
xchg
leave
sub
jmp
rcrl
push
inc
mov
aam
add
and
ret
dec
cld
inc
fs
cli
mov
inc
lock
roll
je
hlt
sti
hlt
push
mov
out
and
pop
jo
sub
or
mov
lahf
xchg
or
fstpl
mov
push
jge
sub
test
outsl
push
fisubl
inc
in
push
dec
and
dec
xchg
je
push
call
lods
add
mov
mov
cmp
mov
rcl
cli
rclb
loope
aas
fsubr
adc
sti
mov
cmp
orb
js
xchg
mov
divb
sub
dec
inc
lds
fadds
fsubs
pop
cmp
jno
insl
xor
gs
cmpsl
inc
repz
mov
out
movzbl
jl
mov
mov
pushf
jnp
int3
cld
adc
push
mov
xchg
jne
gs
xchg
pop
fidivrs
cmpb
sub
enter
call
and
aad
jp
lods
adc
in
loop
sbb
scas
lret
pop
aas
push
adc
mov
inc
sti
fstpl
rclb
not
jbe
inc
in
xor
sub
pop
xor
aam
adc
fwait
xchg
xchg
aas
iret
sbbl
xchg
push
clc
pop
sbb
cmp
cli
das
mov
lock
repnz
filds
fwait
popf
gs
jae
mov
cmp
mov
mov
int
sbb
lods
dec
mov
mov
call
sbb
mov
rorb
lcall
mov
push
fldenv
sbb
or
inc
in
lahf
xchg
loop
cmpsb
push
jb
adc
mov
jl
adc
pushl
fs
pop
testl
mov
inc
ret
mov
or
sbb
xor
sub
mov
cmpsl
inc
adc
or
imul
jle
out
into
push
xchg
loopne
jbe
xchg
jnp
fsubr
pop
cmpsb
jae
and
arpl
pop
push
inc
push
andb
push
mov
roll
add
mov
push
jb
in
shlb
add
sub
sub
sbb
stc
imul
sbb
in
and
jnp
dec
clc
ret
jge
mov
mov
testl
dec
aas
mov
fisubrs
xchg
dec
in
addr16
push
jo
mov
inc
stos
out
xor
leave
mov
jno
xor
dec
data16
inc
inc
addr16
clc
addr16
push
icebp
inc
insb
mov
stc
inc
aad
cmc
cwtl
push
mov
iret
and
mov
pop
popf
cmp
divl
adc
icebp
inc
mov
mov
test
lods
push
push
rcrb
rcl
hlt
jp
roll
push
and
pop
addb
jg
jno
xor
adc
data16
push
mov
mov
cmpsb
lods
mov
pop
fwait
shrb
das
rol
jne
fildl
mov
jp
push
push
xchg
sub
loope
xchg
ret
aam
insl
mov
fsubs
mov
xchg
sbb
movsl
add
out
mov
lods
int3
call
std
jne
add
lock
mov
push
push
cmp
xor
vsubpd
shrl
test
lods
popf
jo
inc
push
inc
jg
xor
push
leave
mov
dec
mov
fsubp
inc
mov
leave
call
mov
cli
fdivrs
shll
fimuls
test
and
mov
push
dec
sbbl
dec
or
sbb
inc
xchg
pop
iret
and
aas
daa
or
ja
jnp
in
xchg
jbe
jle
pop
and
in
xchg
dec
mov
push
and
shrl
lcall
mov
push
bound
lock
or
mov
sbb
aad
fs
out
cmp
aas
aad
leave
push
push
mull
cmp
ss
add
mov
push
xchg
xchg
cwtl
xor
add
mov
pop
pop
scas
or
gs
je
xchg
test
aad
mov
test
arpl
pop
jg
hlt
fcmovu
or
add
mov
and
lea
mov
and
and
xor
fcoml
cmp
loop
sub
ja
adc
mov
and
cltd
in
insl
jo
std
and
dec
inc
loope
fildll
pop
fidivrl
mov
pop
jnp
mov
inc
or
jmp
lea
stc
dec
mov
xchg
popf
loop
lds
sub
stc
repnz
cli
es
int
sbb
push
jb
mov
mov
xchg
jno
inc
xchg
repz
inc
jmp
aaa
cmpl
sahf
fmull
mov
inc
mov
pop
push
rcl
imul
fisttpll
push
mov
mov
fnstsw
cmp
popa
pop
lret
push
in
push
fsubr
aaa
jge
xchg
mov
repnz
or
or
jo
popa
mov
movsl
out
pop
mov
std
jnp
dec
jle
loope
inc
mov
sbb
mov
xchg
inc
sub
mov
fcoml
sbb
mov
js
dec
or
dec
inc
outsl
data16
jg
ljmp
lret
adcb
testb
adc
bound
mov
aaa
aas
in
inc
mov
sbb
cltd
sbb
stc
xor
imul
pop
add
push
lahf
cmpsl
ljmp
rclb
xchg
sub
sahf
subb
cwtl
mov
das
push
and
cmp
xchg
aaa
psrld
mov
or
int3
adc
sbb
cmp
mov
jle
jp
sbb
xchg
notl
xor
int3
xchg
pusha
inc
lods
cmp
adc
push
cmpsl
push
cmp
in
mov
shlb
push
test
dec
ds
inc
scas
insl
aam
jno
mov
mov
pop
xor
lds
add
inc
imul
sbb
pop
sub
and
cld
mov
dec
add
stos
pop
pop
in
xor
aam
inc
add
add
fistpll
addl
fisubl
iret
xor
nop
jnp,pn
dec
sarb
lahf
std
ljmp
int
roll
outsl
movsl
test
andl
xchg
mov
out
fadd
das
shlb
shrb
xchg
aaa
lods
push
arpl
pop
adc
loope
je
and
and
pop
lret
and
cmp
jbe
inc
mov
mov
scas
mov
push
cmp
insb
xlat
cltd
lods
cmp
push
ja
mov
adc
mov
dec
nop
push
xchg
pop
push
mov
in
notl
into
inc
mov
gs
pop
adc
inc
lcall
arpl
sub
mov
sbb
aam
pop
pop
xchg
push
inc
ja
notb
dec
xor
leave
adc
out
icebp
aad
scas
mov
rcll
cmp
and
adc
pop
jp
xor
push
fildl
enter
mov
add
xchg
jecxz
mov
nop
outsl
jb
xchg
loopne
cmpsl
clc
pop
jp
aaa
call
ret
rorl
into
mov
mov
pop
and
fstl
fwait
lahf
push
out
xor
mov
rcrb
cmp
add
pop
push
add
mov
pop
imul
cmp
sub
or
mov
sub
xchg
jg
les
sbb
xchg
jno
fadds
adc
enter
loop
mov
divl
sbb
jge
xchg
push
cmp
mov
push
mov
inc
push
int
xor
lret
lds
in
add
testb
jmp
fnstenv
out
in
push
out
in
das
ret
push
push
roll
cmp
pop
loope
lret
fwait
rcll
sbb
cld
push
leave
inc
flds
push
aas
fs
xor
mov
add
data16
adc
rcrb
jo
push
call
ret
sbb
cmp
rolb
push
pop
sub
sbb
mov
lcall
jle
in
ljmp
adc
sbb
inc
or
ret
mov
scas
int
jne
mov
mov
into
lods
push
scas
or
mov
pop
mov
test
data16
out
xor
testl
add
outsl
and
repz
pop
out
xchg
enter
icebp
push
data16
sti
adc
adc
rolb
clc
sub
mov
gs
mov
adc
es
cmp
sbb
dec
jecxz,pt
xchg
aaa
ret
cmp
or
insb
mov
imul
dec
ja
jns
mov
jmp
aaa
xor
fidivl
pop
jge
xor
movsl
mov
cmp
xor
jno
sbb
decl
idivb
movsb
in
dec
sub
mov
loopne
add
mov
in
adc
and
push
adc
out
add
test
jae
fcoml
xor
subb
ret
mov
out
imul
lea
push
mov
sti
stos
xchg
cmp
mov
jns
fs
jle
inc
dec
inc
sub
pushf
test
adc
cwtl
pop
jle
hlt
inc
into
aam
es
push
imul
mov
push
sbb
push
add
jnp
movsb
jae
lret
sub
enter
lret
daa
arpl
cmc
xchg
sbb
mov
mov
xchg
jecxz
sub
push
insl
ret
shlb
adc
aad
mov
test
pop
mov
dec
push
add
and
jns
rcl
sbb
add
pop
xor
or
mov
imul
mov
pusha
inc
test
or
mov
cmp
pop
mov
sbb
jp
fmull
mov
test
iret
push
arpl
nop
pop
andb
das
out
lods
xchg
mov
push
dec
jbe
sarb
cmp
push
das
lds
sahf
insb
leave
sbb
shlb
xlat
mov
test
enter
cmp
push
fidivl
mov
mov
lock
or
iret
out
pop
data16
lret
jns
xor
test
out
idiv
mov
jne
cltd
outsl
jae
inc
iret
cmc
loopne
clc
adc
fcompl
jns
cmp
mov
lds
inc
cmp
sub
fists
hlt
cmp
add
lock
or
and
scas
in
xchg
xchg
sub
or
dec
ss
push
or
jmp
and
push
stos
sti
rcr
into
cmp
out
dec
cmp
lods
cmp
adc
repz
mov
repnz
jmp
cmp
in
adc
add
ja
jns
in
rcll
sar
dec
es
hlt
out
ljmp
dec
mov
and
mov
mov
mov
lods
push
scas
dec
dec
push
sahf
pop
insb
xor
jne
push
sbb
add
jmp
inc
lods
mov
and
iret
mov
inc
sbb
adc
xchg
repnz
add
pop
or
sub
mov
adc
dec
mov
push
popa
xchg
test
xchg
xor
mov
mov
jmp
scas
ds
fsubrl
mov
aaa
pop
cmp
mov
cld
out
loope
xchg
mov
testl
jmp
push
aas
cmp
jbe
sbbl
jns
jo
or
repnz
stc
fdivr
call
pushl
xchg
sub
mov
jecxz
in
sti
push
lods
cli
je
mov
and
mov
mov
lsl
inc
icebp
ficoms
and
hlt
imul
out
mov
jb
pop
mov
fldl
and
inc
outsl
rcl
push
int3
movsb
orl
cwtl
sbb
rolb
or
fisubl
xchg
outsl
loopne
adc
mov
jo
int3
pop
mov
pop
add
dec
adc
scas
lods
loope
inc
rorb
pop
mov
pop
rcll
fimull
mov
shll
lcall
xor
sbb
mov
outsb
insb
fdivs
jnp
nop
push
xchg
cmp
xchg
sub
subb
notl
ret
mov
jp
in
jecxz
mov
dec
cmp
fwait
push
sahf
mov
push
or
mov
aas
adc
sbb
fimull
jo
or
mov
addr16
sbb
subb
cli
jo
mov
movsb
popf
xchg
add
pop
jle
aas
in
into
xor
aad
loope
mov
push
das
imul
idivb
test
mul
stos
jg
xchg
cmp
and
sarl
lds
scas
sub
stc
in
loope
sbb
inc
testl
add
inc
sbbl
test
ljmp
jno
pop
adc
push
daa
dec
mov
out
pop
int
mov
sub
xchg
sahf
negl
testb
cmc
call
pop
popa
shrl
imul
repz
mov
mov
or
sbb
leave
int3
inc
add
imul
and
test
mov
mov
inc
sub
imul
jle
loop
fidivrs
stos
fs
aas
loop
ret
jbe
pusha
insb
or
lods
fistpll
sbb
jge
addr16
nop
xor
mov
or
adc
js
lret
jne
sub
aad
mov
push
addl
dec
sbb
adc
and
and
or
in
mov
push
fdivr
push
nop
mov
cmpsb
or
insb
mov
lcall
dec
lods
jne
sub
mov
sahf
pop
mov
test
dec
mov
test
or
push
mov
popf
imul
call
adc
ret
inc
outsb
inc
outsl
insb
mov
push
div
mov
shlb
fs
mov
add
mov
xchg
push
xlat
xchg
adc
cmp
in
sbb
int3
pop
jae
or
dec
lods
cmpsb
mov
add
fcoms
xchg
fcomi
in
inc
mov
in
lds
cld
pop
push
sub
dec
or
dec
push
sbb
mov
dec
mov
cmpsb
jecxz
fsubr
sub
jle
repnz
cmpsl
pusha
in
add
movsb
int3
pop
test
mov
xlat
stos
movsb
cmp
js
das
cmpsb
pop
jne
jmp
fmuls
cltd
xor
ja
in
rclb
je
or
sub
ret
sbbb
or
mov
pop
in
roll
ja
ret
shrl
push
daa
xor
js
imul
sub
add
insb
jo
mov
in
dec
loope
cmc
and
cltd
sbb
jo
in
out
scas
out
ss
lods
jg
rcrb
mov
sub
inc
cmp
push
jne
cmp
pushl
mov
or
add
pop
push
stc
sbb
adc
sahf
rolb
cmp
aad
out
repnz
mov
pushf
pop
sti
jns
push
push
dec
adc
mov
or
push
mov
and
nop
enter
stos
idivb
arpl
bound
imull
std
xchg
rcll
mov
pop
decl
jb
nop
mov
jle
dec
and
lahf
add
out
sub
cld
repnz
xchg
loop
aas
sub
shlb
addb
adc
mov
lret
xchg
pop
sti
stos
flds
scas
jge
jle
pop
and
mov
dec
das
sti
fs
sahf
filds
aaa
fmull
scas
pusha
mov
cwtl
mov
cmp
xchg
add
push
and
jns
hlt
shrb
mov
inc
loop
dec
movsb
mov
xchg
popf
dec
negb
ret
sti
lods
arpl
push
add
cmp
js
push
ficompl
insb
nop
jae
arpl
out
inc
aam
enter
gs
ret
push
xlat
bound
imul
mov
in
fidivrs
mov
adc
fstpl
idivl
sub
jl
aad
in
fsubrs
mov
je
sub
dec
cmp
and
repz
pop
mov
add
ljmp
clc
fiadds
aaa
xor
fcmove
push
popa
push
adc
es
mov
xlat
jnp
mov
push
dec
jg
mov
dec
in
push
cmovl
mov
stos
dec
adc
cld
cmpsl
out
cs
mov
sbb
push
insl
inc
adc
mov
int
rolb
nop
sbb
or
dec
cmc
or
dec
jb
jo
xchg
xchg
push
mov
std
mov
sahf
scas
loop
mov
fildl
add
cmp
aas
jo
xor
dec
jbe
aaa
sbb
sti
dec
push
addr16
jp
outsl
mov
stc
cmp
dec
push
outsb
xor
or
sub
jns
pop
dec
mov
mov
cld
popf
out
roll
nop
sub
cmp
icebp
imul
js
push
shrl
into
cmp
std
cmc
insb
push
cli
fucomi
test
in
lock
movsb
mov
in
mov
and
sub
inc
jmp
clc
dec
adc
fwait
xchg
int
or
inc
insl
add
mov
adcl
and
cld
jb
in
data16
divl
xor
and
pusha
push
dec
mov
or
ja
loopne
in
fidivs
clc
push
test
add
setg
sbb
xor
inc
addr16
loopne
xor
outsl
pop
nop
mov
pusha
jns
add
push
neg
jp
push
add
dec
data16
addr16
xlat
nop
pop
and
in
cmp
push
cmp
and
cltd
or
xchg
in
int3
mov
decb
in
cmp
jp
push
adc
or
xchg
leave
mov
xchg
ret
push
outsb
inc
int3
rorb
mov
daa
pop
sbb
in
sbb
les
enter
sti
into
adc
cmp
xchg
inc
rcrb
jle
add
test
mov
sbb
and
mov
stos
add
cs
pop
adcb
xchg
mov
aas
call
xchg
push
sub
out
jmp
dec
fsubrl
lret
nop
jno
imul
shl
daa
mov
dec
mov
daa
xchg
and
mov
out
jo
fnstenv
cmp
adc
jg
repz
ljmp
imul
inc
sub
and
xchg
fsub
mov
enter
xor
mov
adc
mov
sbb
in
push
cmp
push
inc
in
dec
imulb
daa
xor
int3
xchg
sub
jmp
push
mov
adc
nop
les
mov
nop
dec
xor
insb
add
psadbw
inc
dec
aam
outsb
mov
push
movsb
pop
adc
and
cmp
add
jl
push
ja
hlt
pusha
int
icebp
mov
push
adc
push
mov
shll
adc
popa
loop
aaa
maxps
push
push
sub
or
fistpll
xchg
sahf
jmp
idivl
adc
lahf
lret
out
ret
mov
out
xlat
stc
dec
sbb
jne,pt
sbb
cld
stos
fisubs
loope
inc
les
mov
mov
cs
sbb
enter
mov
adc
pop
inc
dec
mov
ja
aad
or
or
stos
or
push
cmp
fimull
and
sub
mov
iret
loope
xchg
adc
int3
mov
movsb
cltd
add
cmpsb
xchg
push
inc
xchg
mov
jl
aas
inc
movsb
sub
lret
mov
dec
fcomi
sbb
std
and
pop
rcrl
mov
lret
adc
mull
mov
push
cmp
cli
fcmovnu
ficoml
jbe
pop
testb
ret
adc
das
jl
add
cmpsb
sub
jb
fwait
movhps
push
pop
mov
lret
cmp
mov
cmp
outsl
in
inc
or
jne
jp
mov
pop
rorl
mov
in
icebp
xchg
jecxz
xchg
lret
fsts
xor
popf
pop
dec
mov
lret
pusha
std
andl
jno
or
out
add
lcall
or
cmpsl
cmpb
es
iret
fdivs
pop
outsb
mov
or
mov
mov
cmp
shlb
xor
mov
out
and
cmp
jbe
leave
sbbb
mov
sahf
xor
mov
sub
pop
mov
dec
cli
rcrl
mov
das
xor
push
arpl
push
jb
sbb
sbb
lret
push
mov
fistpll
ds
es
and
mov
imul
add
test
sti
pop
push
or
cmp
mov
in
cld
sbb
aas
cwtl
fdivl
xor
pop
adc
jbe
adc
mov
lock
push
and
push
mov
or
mov
stos
xor
outsb
lods
mov
mov
lea
lock
jb
pop
cmpsb
stc
xor
mov
adc
push
adc
loopne
mov
icebp
mov
pop
adc
jp
or
add
fisttpll
dec
js
mov
outsl
mov
add
and
rcll
test
outsb
fs
jb
sbb
mov
fidivrl
mov
push
leave
mov
xlat
lcall
mov
enter
add
lcall
das
mov
sbb
jmp
jle
adc
mov
and
jle
push
inc
out
je
test
pop
jp
adc
push
sbb
mov
nop
sahf
mov
popf
xchg
fs
pop
outsb
jge
pusha
xchg
xlat
rorb
in
adc
ja
inc
xor
es
cmp
ds
into
loope
jle
sbb
inc
sbb
pop
xchg
add
aad
cs
in
pop
mov
or
dec
push
add
sahf
pop
jp
iret
call
push
loopne
and
inc
pop
push
jg
push
cmp
cmpsb
das
in
lods
loope
addr16
lret
dec
jno
lahf
cld
fs
dec
xor
dec
mov
push
in
int
bound
dec
daa
jl
xor
push
data16
mov
pop
adc
xor
out
ficomps
fdivrp
or
cld
loope
jne
bound
lret
cltd
jge
add
rclb
jno
cmp
mov
xor
xchg
jb
mov
in
ror
xor
mov
push
sbb
jno
enter
je
and
sub
out
mov
jecxz
popa
dec
lret
mov
pminub
cmpsl
lds
add
cmp
xchg
xchg
push
or
mov
dec
mov
adc
repnz
push
pop
inc
xchg
add
lods
or
test
jae
rorb
mov
test
enter
loop
pop
ljmp
cs
mov
sbb
out
adc
js
test
mov
inc
ret
out
jnp
and
cmp
inc
cld
cs
xchg
dec
jg
gs
hlt
clc
dec
fstps
cmp
mov
and
push
sti
sub
mov
subb
cli
push
ret
pop
mov
pop
mov
pushf
xor
xor
inc
push
ljmp
cwtl
mov
clc
add
fistl
test
ffree
nop
dec
cmp
iret
push
sarl
test
andl
push
sbb
mov
rep
pushf
iret
mov
inc
sbb
mov
push
lret
xor
fdivs
xor
lahf
pop
mov
jge
pop
add
imul
mov
mov
out
imul
je
push
rol
pop
cs
and
sbb
lods
add
xchg
mov
push
insl
push
pop
bound
fwait
prefetchnta
and
les
and
or
inc
mov
add
push
test
sbb
mov
inc
sti
pop
movsl
add
insl
pusha
in
jle
in
pop
dec
andl
int3
mov
dec
push
les
je
lock
imul
sub
xchg
or
stos
jns
push
cs
push
cmp
mov
ffreep
mov
mov
sbb
cmpsb
cmpsb
loope
sbb
push
xchg
imul
pusha
xchg
dec
push
pop
jg
div
stos
bound
loop
std
or
insb
cs
xchg
repz
and
in
mov
jge
lods
sbb
jb
push
int3
scas
mov
jae
lods
sbb
cmp
cmp
inc
jo
popa
cmpb
cmp
test
dec
ficompl
and
sub
jg
hlt
xor
imul
jmp
push
or
inc
aas
mov
jo
mov
jnp
data16
cmp
stc
jg
fistpl
flds
xchg
imul
fsubrl
sti
shr
subl
add
fimull
stc
stos
jmp
decl
mov
inc
scas
ss
ja
faddl
jge
hlt
in
mov
pop
push
icebp
add
lcall
fdivr
shrb
push
cmpsb
xor
sub
repnz
loopne
xor
xor
test
fsts
jp
dec
inc
fmull
dec
push
push
fidivl
push
insb
fsubl
ret
dec
cmpsl
dec
inc
mov
push
push
sti
dec
ficoms
inc
nop
dec
or
movsb
push
inc
pop
bound
or
mov
aas
jnp
daa
jp
repz
pop
aad
arpl
cmpsl
fidivrl
fsubp
loop
pop
aad
xor
cmp
push
mov
ljmp
cmp
adc
out
xor
mov
push
imul
xor
pop
js
fnstenv
lods
stos
jne
jae
cmc
pop
xor
sbb
xor
divb
xchg
ljmp
scas
pop
cld
or
out
imul
out
sub
popl
mov
insl
adc
add
lock
mov
test
imul
dec
mov
insl
in
dec
and
pop
xchg
dec
dec
call
jno
xchg
cmp
cmp
sub
outsb
popa
xchg
adc
std
fiaddl
cmpsb
mov
mov
fdivrp
push
rorb
or
rcll
scas
xor
and
into
data16
iret
sub
imul
mov
outsl
ds
mov
jno
movsb
cmpsb
fwait
scas
fcmovnb
add
or
dec
flds
pop
test
cmpsl
je
in
js
jb
stc
mov
xchg
pop
data16
cmp
ret
or
rorb
mov
in
std
or
scas
out
push
adc
ja
test
mov
mov
outsb
pop
out
push
movsl
inc
push
xor
data16
fbld
int3
push
mov
xor
shr
jnp
mov
xor
in
and
or
in
sub
outsb
mov
jl
sbb
mov
mov
dec
mov
lea
lret
or
test
sub
mov
je
xchg
arpl
out
adc
mov
xchg
mov
jo
xchg
stos
or
fisttpl
jg
mov
lret
cmp
cmpsl
les
arpl
jno
mov
pushf
mov
enter
xor
adc
xchg
iret
inc
sar
xor
test
sub
sahf
add
enter
jae
cmp
lods
push
or
orb
pop
repnz
mov
into
sub
shlb
push
xchg
xchg
clc
subl
idiv
inc
inc
xlat
fcompl
mov
cmp
pop
jbe
lcall
sbb
in
fisttps
je
cmp
push
ja
push
cld
sub
out
insb
push
xor
insl
aaa
addr16
or
or
loop
insl
sub
sub
cld
dec
jmp
mov
jno
es
xchg
mov
icebp
xor
insl
and
imul
sub
shl
movsl
int
mov
lret
mov
daa
mov
lret
mov
dec
mov
pop
xchg
add
outsl
fistpll
bound
mov
out
outsb
push
cmp
stos
icebp
js
out
sub
ds
jno
xchg
imul
push
pop
sbb
push
jecxz
add
xchg
xchg
xchg
xor
sbb
popf
push
xchg
sbb
cmpsl
pop
mov
lods
idivb
inc
fistl
cmp
loope
aaa
movsb
cli
cmp
lcall
jg
lods
enter
cmpsl
inc
xchg
add
sub
mov
in
xchg
andb
int
test
pop
push
fs
lret
xor
popf
adc
movsb
add
dec
push
xor
rclb
into
lods
xchg
sbb
pop
push
xorb
and
mov
test
pop
lods
rol
sub
mov
cld
faddp
lods
scas
add
push
add
jns
leavew
or
add
cs
mov
mov
popf
or
sti
les
call
cmc
out
stos
sti
cmp
imul
and
mov
xchg
push
adc
icebp
add
pop
std
addr16
push
inc
jmp
fbld
mov
xchg
outsl
adc
cwtl
neg
push
sbb
mov
pop
jb
in
push
mov
jmp
sub
adcl
xor
jnp
inc
sub
cmp
cltd
mov
xlat
inc
leave
jbe
aas
mov
jl
dec
sub
mov
or
sar
sbb
imul
sbb
cmp
iret
aas
jg
push
notl
adc
lret
and
and
mov
xchg
add
push
popa
mov
push
inc
icebp
jge
xor
adc
cmp
inc
cmp
jecxz
sbb
loopne
rorl
into
jle
sti
jecxz
push
data16
xchg
xchg
addr16
fldl
xor
ret
mov
dec
rolb
ljmp
jl
call
xchg
ja
aas
call
jmp
push
orb
sbb
sub
pop
add
jl
cmp
mov
cmpsb
aas
pop
std
dec
mov
inc
push
push
mov
movb
inc
sub
lahf
pop
mov
imul
sub
icebp
js
into
jecxz
mov
in
imul
push
outsl
daa
add
xor
cmp
xor
push
sti
mov
in
cwtl
lods
je
cmp
push
xor
addr16
enter
pop
sub
xchg
ja
mov
mov
lahf
push
cmp
pop
mov
pop
gs
es
lret
aas
js
jnp
aas
gs
mov
ret
rorb
dec
mov
ss
popf
andb
loop
jb
sbb
int3
push
jmp
into
xchg
cwtl
mov
xchg
cmp
fiadds
test
into
sti
cmp
sub
xchg
dec
cmp
pop
adcl
sub
push
mov
out
sbb
stos
or
jne
fs
lcall
mov
out
mov
hlt
push
push
jl
fsub
xchg
sub
pop
or
sub
ss
cmp
inc
mov
dec
fdivrp
mov
test
clc
lea
mov
cmpsl
cwtl
lcall
push
inc
dec
jle
jge
fsts
add
push
invd
arpl
sbb
lret
fs
mov
pop
or
int3
in
mov
xchg
fstp
daa
je
and
or
mov
mov
inc
mov
adc
outsl
inc
adc
sub
fisttpl
hlt
mov
mov
sub
push
cmp
out
mov
sbbl
clc
icebp
sahf
jl
sbb
sarl
push
mov
lret
xor
and
scas
int3
leave
push
out
xchg
movsw
pop
cmp
push
movsb
pop
inc
mov
pop
fstl
mov
mov
outsl
mov
sbb
fdivrp
loope
rorl
flds
test
sti
sbb
hlt
ljmp
sti
cmpsl
jecxz
jmp
add
or
mov
fsubs
ret
js
enter
push
into
or
jbe
fcoml
ficoml
inc
xlat
shll
pop
std
decl
rclb
shrb
cmp
push
push
out
in
lods
xchg
jp
sbb
movsl
inc
int3
mov
add
cmp
pop
test
xor
and
std
mov
sub
cli
inc
xchg
xchg
repz
jmp
mov
dec
add
decl
push
sub
mov
out
pop
xor
sbb
dec
testl
clc
mov
fcoml
mov
pop
nop
or
push
adc
cmpl
gs
rorb
add
nop
mov
sbb
dec
cmp
divb
sarl
out
loope
inc
outsb
out
push
mov
and
cld
and
jl
shll
push
orb
jo
sub
add
fwait
outsl
gs
loope,pt
xchg
aas
in
cltd
and
shll
out
repz
jg
ljmp
cmp
pop
lds
add
int
dec
cmp
cmp
mov
aad
cmp
add
jmp
pop
test
in
xchg
cmp
roll
inc
sbbl
ror
pusha
test
ficoml
xchg
push
mov
sbb
in
cltd
mov
clc
mov
pusha
push
inc
outsb
lock
movsl
push
fsubrs
into
push
push
xchg
jne
leave
xorb
mov
mov
xor
mov
cmc
push
inc
dec
cltd
pop
div
xor
dec
mov
shl
mov
mov
add
push
jg
test
adc
xchg
inc
jns
add
fs
ja
rorb
aad
mov
xor
out
lods
xchg
fwait
inc
push
jbe
cmp
or
mov
aas
push
xchg
cmp
and
pop
out
aad
adc
stc
xchg
jg
mov
addr16
cltd
push
rcrb
mov
movsb
xor
je
dec
aaa
aad
xchg
sahf
xchg
int3
dec
setp
leave
or
xchg
stos
aaa
pop
sbb
lret
enter
repz
test
jg
xchg
jns
jno
pop
int
xchg
push
mov
sub
push
test
mov
push
daa
sub
mov
loopne
lcall
outsb
pushf
push
out
mov
sbb
je
nop
mov
push
jl
add
xor
sbb
add
cmc
pop
xor
cld
jae
mov
xor
pop
out
imul
fadds
or
or
lret
sub
aam
jnp
lcall
pop
xchg
test
push
pop
mov
mov
mov
push
push
cmp
mov
xchg
pop
sbb
and
jge
or
dec
mov
mov
dec
inc
pop
std
mov
push
add
add
jne
adc
fs
andl
and
mov
jge
out
fwait
mov
ljmp
in
stc
adc
int
test
popf
dec
mov
test
cmp
xlat
and
ret
mov
test
dec
outsl
jecxz
fstpl
loop
cmp
push
lods
repnz
hlt
scas
popf
aam
xchg
test
dec
sahf
mov
enter
ds
sbb
or
push
popa
xor
or
cmpsb
xchg
stc
js
push
adc
add
mov
dec
loop
mov
lods
xchg
mov
sarb
test
dec
cmc
inc
rcrl
adc
jne
es
scas
es
fmull
and
pop
cltd
push
xchg
xchg
xchg
outsl
test
xchg
cmp
jo
hlt
in
dec
out
lods
xchg
stos
sub
dec
cmp
popf
cli
leave
mov
or
and
ret
sbb
add
sub
dec
adc
test
shlb
repnz
aam
push
movsl
sub
adc
sub
repnz
xor
das
stc
adc
push
sbb
ret
loop
cmpsb
mov
xchg
push
sbb
sahf
mov
insl
add
sbb
xor
hlt
xchg
sub
cltd
in
arpl
inc
add
inc
sub
fdivl
sub
mov
ja
and
in
mov
fwait
insl
test
fnstenv
pop
iret
leave
xchg
adc
jp
adc
aad
or
dec
pop
xchg
mov
and
in
scas
sbbb
enter
push
mov
js
jle
lea
xor
dec
jmp
sub
jle
sub
mov
cli
jnp
sahf
js
insb
or
fistpl
loop
scas
add
icebp
dec
insl
cli
sbb
xor
rorl
int3
jge
dec
stc
mov
sbb
and
push
jb
adc
add
sbb
push
pop
into
shr
push
pushl
shrb
mov
mov
addl
mov
xchg
add
addb
push
dec
shrd
div
mov
popf
adc
xor
fisttpl
es
or
dec
sbb
mov
test
and
out
lds
pop
repnz
das
jns
pop
sahf
fwait
mov
int
add
mov
addr16
loop
push
icebp
sbb
and
mov
xor
sub
sub
mov
inc
outsb
push
cltd
aam
sbb
movsl
cmp
test
mov
in
cld
jne
sti
mov
out
xchg
andb
or
ja
sbb
push
mull
jecxz
loopne
adc
cmp
movsl
mov
jnp
aam
movsl
add
jb
ja
sarl
jge
mov
out
jge
push
div
pop
leave
scas
sub
in
out
inc
clc
negb
mov
xchg
mov
pop
jl
jl
mov
bound
push
jl
clc
repz
jecxz
cmpsb
push
int3
mov
push
fisubrs
cmpsb
es
jg
testb
xchg
roll
mov
pusha
enter
push
mov
out
in
add
rcll
cmc
sbb
mov
adc
addr16
dec
mov
xor
xchg
shlb
ss
dec
jb
sahf
mov
int
lds
adc
mov
cmpsb
sahf
rcrb
out
pusha
add
int
jne
inc
lcall
ret
in
jns
lds
mov
mov
fcmovnu
inc
sub
mov
or
insb
fwait
jecxz
sarb
xor
mov
or
fsubl
sarl
enter
xchg
imul
xchg
xchg
push
leave
inc
shrd
scas
xchg
cmp
xor
rorb
xchg
sbb
pusha
into
in
adc
or
cli
dec
data16
fstpt
dec
adc
movsb
ljmp
outsl
add
sub
into
mov
sbb
xor
sub
push
call
jmp
xchg
aad
jb
es
rorb
lods
ret
adcb
jno
sub
add
mov
les
fwait
aam
popf
aad
in
arpl
neg
iret
jb
lahf
push
inc
lods
mov
cmp
inc
inc
push
cmpsl
jno
add
fsubs
sarb
add
fs
cltd
and
sbb
pop
and
bound
clc
push
add
cmpsl
xor
stc
xchg
scas
test
ss
cli
adc
xorb
jnp
pop
wbinvd
and
fs
repnz
jo
mov
rorb
aad
mov
call
mov
repnz
fwait
adc
stc
lods
mov
mov
push
mov
sbb
cmp
or
stos
cmp
jp
out
adc
push
scas
lcall
in
xchg
inc
stos
lock
rclb
repnz
mov
cmp
lock
int3
out
int
out
lods
jns
xor
fidivl
jge
push
inc
fnstcw
and
pop
js
mov
sahf
fstpt
mov
xchg
shll
mov
add
loope
pop
adc
and
test
adc
outsb
lcall
jns
sub
push
pop
push
mov
int3
mov
loop
sub
and
xchg
sbb
lcall
mov
test
cmp
int3
xchg
sti
test
scas
xor
xchg
adc
push
jp
pop
sarl
mov
std
mov
loope
xchg
pop
popf
pop
mov
inc
sbb
mov
sbb
xor
jmp
rcrl
ljmp
in
inc
lock
insb
outsl
jb
lahf
jp
cld
enter
cmpsl
inc
push
mov
int
jb
or
loopne
adc
push
pusha
andl
pop
sub
pop
cmp
fstp
hlt
sub
jecxz
jno
ds
sub
cld
lods
mov
repnz
inc
ds
loopne
inc
and
push
xchg
mov
sbb
or
mov
std
pop
xor
dec
lods
decb
xor
stos
or
fimull
pop
shrb
or
pop
ds
inc
lock
mov
mov
mov
sbb
or
pop
call
sbb
sbb
dec
enter
ss
lret
cwtl
scas
adc
add
insl
in
roll
pop
sbb
cmp
add
and
or
or
or
or
push
ds
and
daa
stc
test
in
dec
jmp
and
jae
sbb
xor
fdivl
mov
and
loop
inc
push
mov
scas
or
dec
jmp
pop
ror
dec
in
mov
cmpsl
sbb
push
cmp
je
xchg
mov
dec
dec
sbb
xor
loop
orb
movsb
xor
adc
scas
or
mov
fabs
cwtl
arpl
dec
adc
repz
insl
repnz
dec
fisubrs
addr16
sbb
inc
mov
bnd
rol
arpl
jmp
mov
cmpsb
test
iret
scas
int3
int3
sub
cld
cld
shll
lahf
dec
out
test
faddp
pop
pop
out
loop
movsb
nop
dec
arpl
push
push
loopne
pop
into
pop
mov
aad
ja
jp
mov
imul
jno
lods
sahf
shlb
sbb
std
mov
mov
loop
ror
fnstenv
fistpll
insb
sahf
inc
dec
movsb
lret
adcb
clc
and
out
mov
push
push
mov
out
call
aas
push
jno
push
les
rorb
daa
call
loopne
pop
jge
xchg
inc
add
adc
adc
lods
dec
leave
mov
ljmp
movsl
mov
pop
xchg
sbb
js
jne
or
push
add
das
push
xchg
jno
rolb
cmp
mov
xchg
xlat
sub
icebp
aam
shl
std
add
insb
shl
sub
movsl
xor
jbe
inc
lock
mov
xor
cmc
push
stos
jl
loop
mov
mov
sub
or
mov
inc
inc
fsub
movsb
pop
pop
mov
lret
adc
clc
inc
or
ljmp
cmp
add
je
fs
mov
xchg
sub
mov
adc
push
mov
stos
jle
mov
mov
sbb
ja
pop
std
icebp
jecxz
jo
jae
push
xchg
adc
cmpsb
mov
repz
cmc
mov
cmp
push
ffree
shrb
push
scas
test
lahf
mov
dec
push
jge
das
into
mov
cmp
sub
sbb
lahf
hlt
cmp
subl
cmpsb
push
imul
nop
sti
sbbl
sbb
shrl
xchg
lock
push
xlat
repz
lret
xor
jl
cmp
pop
mull
mov
xchg
imul
jp
es
mov
lds
jmp
inc
or
ja
push
xor
pop
add
inc
jge
scas
add
mov
xor
jno
inc
mov
fs
cmp
lods
mov
adc
pop
daa
std
rol
lcall
out
mov
push
push
push
ret
bound
addr16
dec
or
into
daa
lods
movl
enter
aad
mov
add
mov
shrb
arpl
pushf
mov
push
mov
out
loopne
in
push
ja
out
repz
mov
jmp
sahf
in
aad
cmp
sbbl
loopne
xor
test
ss
push
iret
xchg
addb
imul
pop
int3
mov
adc
add
pop
push
mov
cmp
sub
outsb
cmp
mov
cmpsl
out
aaa
cmp
cmp
mov
mov
mov
dec
add
loop
test
inc
dec
mov
xchg
adc
push
xchg
sub
loope
mov
and
cmpsl
test
and
and
add
add
push
inc
jmp
sbb
leave
add
arpl
js
push
sarb
or
je
pop
jle
sbb
into
cmpsl
xchg
jno
decl
xor
xchg
mov
pop
movsl
test
aaa
fcmovu
je
add
mov
inc
push
mov
ds
xchg
shlb
push
xor
mov
mov
insb
add
or
iret
sub
stc
or
add
mov
sbb
adc
mov
sub
fucomp
cmpsb
or
ret
cmc
dec
mov
mov
push
in
add
sub
or
push
jo
xchg
aad
sti
add
inc
cmp
push
fldcw
leave
test
dec
stc
rcll
push
and
sahf
in
jmp
pushl
test
jp
pop
fucomp
rcr
out
sahf
mov
inc
jge
add
sbb
mov
push
jmp
mov
xchg
jno
sbb
xor
adc
xor
adc
lods
and
and
cmp
push
push
lea
xchg
stc
insb
jle
and
repz
imul
data16
sbb
imulb
dec
insl
adc
cwtl
les
mov
leave
ja
pusha
cmp
adc
repnz
insb
subl
xchg
lret
lods
movsl
inc
je
test
fnsave
aas
ljmp
dec
leave
test
test
leave
aam
lea
xchg
jae
loop
cmp
pushf
pusha
xchg
popf
cmp
lahf
jecxz
sbb
mov
test
push
pop
je
ss
popf
mov
outsb
push
pop
gs
movb
and
jl
mov
fwait
push
mov
inc
xorl
xor
and
shrb
test
mov
pusha
lock
adc
fidivs
sahf
adc
pop
popa
je
loope
fisttpll
das
dec
mov
mov
xchg
mov
imul
mov
cld
pusha
popf
mov
sub
mov
stos
mov
sub
jecxz,pn
mov
sti
into
cmp
inc
adc
adc
sbb
ljmp
fbstp
scas
mov
lret
jbe
or
pop
or
in
mov
sub
mov
mov
subl
in
xchg
orb
push
test
es
and
jbe
insb
xchg
add
adc
sbb
pop
call
movsl
jge
add
mov
stos
sbb
orl
jle
jg
and
xorb
push
inc
mov
push
xor
aaa
xor
mov
nop
sbb
mov
stos
inc
and
enter
in
sbb
or
mov
jne
jo
mov
loope
jmp
jnp
add
ret
inc
dec
pop
inc
xchg
mov
sbb
mov
mov
idivb
negl
and
or
push
ss
sub
mov
mov
jp
jo
pop
push
mov
adc
cmp
cmc
jmp
imulb
loop
test
mov
outsl
fstps
dec
aas
dec
jl
and
out
jno
sbb
sbb
imul
jno
addr16
mov
fwait
hlt
ljmp
add
mov
jp
lock
sbb
jmp
rorb
outsb
xor
ds
imul
or
mov
xor
sub
jecxz
jb
insb
xchg
adc
or
cmp
test
add
movsb
cli
sarb
es
scas
int
cli
and
incl
dec
xchg
cmp
cmp
fs
inc
push
sarl
cmc
jb
fists
aas
add
adc
dec
jmp
insl
idivb
leave
nop
ret
lret
and
sub
lret
or
js
inc
insb
stc
lea
pop
add
adc
fs
sbb
in
je
dec
pop
sbb
mov
cmp
jnp
test
add
in
jns
xchg
adc
loopne
xchg
vmovq
loop
sbb
arpl
scas
dec
rcr
cmc
xchg
jne
loope
cmpsb
mov
aaa
xchg
push
push
dec
adc
inc
fistl
scas
movsl
dec
sarb
push
mov
push
mov
ja
clc
cmpsb
mov
scas
inc
and
and
sub
xchg
sub
push
xchg
mov
jns
cli
shlb
ja
aaa
xor
and
mov
repnz
jge
cmp
cmp
pop
rcrl
lcall
test
sub
push
out
inc
and
xor
popa
sti
fdivs
push
xchg
mov
xor
jb
mov
xor
nop
jo
inc
dec
push
adc
push
adc
inc
ss
push
jno
icebp
inc
aad
push
push
lea
aaa
outsb
pop
sbb
sbb
cmc
xchg
ret
push
mov
ljmp
ficompl
clc
rcrb
lret
rcrb
mov
pop
out
push
xchg
divl
mov
cmp
xchg
mov
inc
rol
cmp
dec
inc
movl
movsl
jno
or
and
aaa
popa
hlt
dec
inc
push
jns
lea
mov
cwtl
in
js
push
rcr
cmp
andl
test
je
xchg
jnp
inc
push
stc
jg
or
mov
imul
loopne
loopne
adc
jae
jns
fsubr
add
adc
int
movsl
js
jbe
addr16
push
adc
sbb
add
pop
xchg
or
clc
cmpsl
xchg
and
loope
out
sbb
lods
jge
enter
dec
pop
orb
or
in
icebp
jge
jb
mov
es
sub
xor
jmp
shrb
push
jge
pop
xor
lods
test
adc
and
cmp
loop
pop
and
push
inc
push
mov
inc
loopne
jnp
add
iret
mov
sbb
fwait
pop
fcmovnu
call
psubusb
pop
add
call
push
mul
lds
gs
push
jle
xor
mov
test
jbe
sub
xchg
loope
imul
jg
stc
lock
and
out
xchg
sbb
inc
aad
nop
cld
jp
jns
push
mov
aad
je
bound
mov
push
sbb
icebp
or
mov
xor
stc
sbb
outsl
lret
clc
stos
mov
cmc
and
pop
cmp
jecxz
cmp
and
mov
shll
cli
xor
les
fadds
xchg
std
mov
enter
scas
repnz
xchg
ja
jl
gs
or
stos
aas
pop
call
jmp
lds
xlat
bound
ljmp
bound
and
clc
jb
push
pop
arpl
push
xor
js
push
js
dec
int3
push
and
inc
push
add
xchg
sub
test
pop
mov
push
pop
pop
push
adc
pop
mov
notb
pop
and
in
ret
sub
mov
mov
das
dec
sbb
out
xor
andb
push
cltd
pop
out
dec
pop
inc
lods
cld
scas
sub
aam
lea
fs
rolb
lahf
les
hlt
imul
dec
mov
enter
xchg
fwait
data16
repz
xor
xchg
mov
mov
fdiv
fs
jno
repnz
and
aad
inc
cltd
mov
fistpl
xchg
mov
dec
inc
arpl
mov
stos
inc
movzbl
dec
jno
imul
repz
mov
jb
push
aas
cmc
in
jl
lock
pop
push
pushf
jo
fldt
ret
pop
in
out
lret
test
out
push
and
jns
out
fs
rclb
jae
fistl
in
jno
sub
hlt
dec
fstps
call
push
mov
rcrb
test
jle
lahf
inc
push
mov
sbb
icebp
int
cmpsl
cmp
ret
mov
cmp
jno
push
lret
mov
adc
dec
xchg
inc
pushf
ljmp
sarl
loopne
pop
mov
sbb
cli
inc
push
xchg
jmp
pop
pop
sqrtps
scas
and
cld
ffreep
cmp
mov
cwtl
fildll
test
push
ds
xchg
sub
aad
pop
xor
dec
leave
ret
cmp
dec
push
popa
cmp
sub
fs
jnp
jg
ficomps
mov
ror
sub
push
dec
stos
test
repz
lods
or
xchg
add
inc
nop
clc
xchg
aaa
scas
imul
int3
mov
cmpsb
xchg
xor
inc
inc
cmp
pop
mov
in
mov
jmp
cmp
mov
icebp
inc
test
lods
mov
push
fdivr
jecxz
scas
stos
push
lret
sub
mov
nop
inc
lods
mov
and
push
pop
lds
inc
xchg
sub
fdivrs
push
enter
inc
inc
mov
in
fs
xchg
cltd
xor
fadds
or
mov
xor
data16
fidivrl
sbbb
int3
pop
push
das
xchg
push
out
dec
dec
aaa
lds
mov
xchg
adc
push
jbe
xchg
mov
shlb
jg
enter
xor
cmc
push
popf
push
test
into
fwait
or
pop
and
or
pop
xchg
cmpsl
mov
push
lret
mov
mov
cmp
dec
and
decb
inc
cwtl
jno
push
dec
inc
dec
pop
outsl
ret
jae
sti
insl
outsl
and
adc
mov
in
fsub
mov
pop
push
mov
jp
cmpsb
stos
rcrl
cmp
repnz
fwait
daa
js
adc
out
out
xchg
xlat
movsb
in
xchg
lea
dec
jno
add
xor
or
fucom
cmc
add
push
cmpsb
or
loope
ja
mov
iret
mov
xorl
xor
das
dec
movsl
ret
fwait
mov
pop
cmp
inc
jno
pop
push
sarl
sbb
pop
scas
push
adcb
push
ja
mov
push
in
std
aas
aam
jg
sub
dec
jbe
sub
or
mov
xlat
imul
cmp
cmp
mov
add
inc
xorb
ljmp
dec
mov
pop
push
xchg
jae
or
lods
mov
mov
sbb
out
push
aad
push
popa
sarb
push
aas
leave
enter
adc
push
hlt
dec
test
pop
fisttps
cld
inc
popa
mov
xchg
je
fwait
pop
loope
dec
adcb
or
inc
xlat
pusha
pop
mov
jg
lods
xchg
jmp
scas
aas
cld
jbe
mov
jle
fisttps
sahf
movsl
test
jno
jge
es
xor
cmp
jmp
test
sbb
aad
loop
je
inc
jo
inc
inc
adc
mov
lret
out
and
test
fcompl
fidivs
pop
sahf
dec
xchg
pop
mov
enter
and
mov
xor
popf
jo
cmc
pop
and
rcll
lods
ret
xchg
call
lods
pop
sbb
mov
scas
mov
lods
outsb
ret
push
fidivs
mov
pop
fldt
popf
rcrb
outsl
int3
cltd
dec
push
mov
inc
push
adc
rolb
add
mov
scas
loopne
push
push
fisttpl
lock
jne
pop
idivb
inc
push
pusha
jp
ret
ret
xchg
push
cmp
cmc
outsb
mov
popf
xlat
inc
xchg
fstpl
ficomps
pop
fnsave
or
dec
or
sub
cmp
fdiv
sbb
push
push
jp
int3
dec
outsl
push
cld
pop
mov
mov
cmp
lods
push
out
xor
and
sub
mov
movsb
rcrb
sbb
mov
sub
imul
jp
inc
inc
sbb
cmp
int
aaa
insb
sbb
leave
daa
into
rcrb
cmp
fists
mov
stos
cmc
addr16
or
orb
mov
pushf
inc
xchg
ret
shll
mov
mov
pusha
xlat
popa
pushf
cmp
dec
inc
pop
imul
aas
aam
pop
aam
and
int
mov
push
sub
cmp
shl
loopne
lret
call
mov
xchg
xor
and
add
test
loopne
xor
push
pop
popa
insl
jmp
mov
dec
xor
adc
and
adc
clc
mov
jp
lret
jp
inc
dec
add
stc
rolb
cmp
insb
inc
push
filds
and
aaa
aas
je
cmp
sub
and
sbb
cmp
xor
in
stos
cs
xchg
sub
push
dec
outsb
dec
aam
bound
push
cwtl
iret
test
xchg
and
mov
xor
sub
sub
iret
sbb
loopne
sahf
sub
xchg
aaa
mov
pop
inc
xchg
cmpsl
cmpsb
scas
or
int3
aam
mov
out
sub
push
mov
stc
popf
mov
lods
mov
or
mov
out
stos
jge
and
sbb
adc
repz
shlb
mov
shl
push
mov
dec
out
insl
pop
adc
jno
inc
pop
cmp
dec
jl
xor
mov
fcoms
fsubr
jge
dec
dec
shll
icebp
or
cmp
call
sbb
push
rcrb
xchg
adc
cmpsl
cmp
jmp
push
adc
fsubrs
fdivl
loop
mov
jg
loope
push
xchg
dec
push
or
out
pop
fsubs
into
mov
loope
sub
jbe
mov
aas
dec
jbe
out
dec
clc
and
pop
pop
fs
stos
ficomps
nop
sub
adc
xchg
sarb
lods
adc
add
dec
push
add
and
sbbl
roll
or
jb
cmp
xor
add
mov
lea
outsl
hlt
mov
movsl
movsl
or
or
cmp
out
imul
add
ret
outsb
mov
mov
push
cmpsb
leave
insl
inc
sti
popf
sti
iret
sub
movsl
xchg
pop
es
xchg
iret
cmp
lahf
test
mov
mov
decb
pop
and
cmpsb
adc
lods
mov
jbe
sbb
lods
pop
in
cltd
mov
fbstp
or
xchg
jb
mov
sbb
ds
fcmove
add
mov
adc
loop
mov
cmp
iret
add
cmp
je
xor
cli
cwtl
roll
mov
sahf
push
jnp
iret
sbb
jbe
leave
in
mov
jge
sbb
sbb
loope
shrl
push
fstpt
scas
mov
das
sub
add
sub
jl
aad
dec
fists
sub
or
pop
push
hlt
pop
imul
mov
sub
scas
mov
sub
stos
xlat
inc
cld
inc
testb
pop
sbb
adc
mov
je
rolb
mov
and
rcl
loopne
in
aas
sbb
repnz
mov
mov
out
push
syscall
mov
mov
into
and
xchg
mov
ljmp
jl
push
and
jo
movsl
fistl
xchg
lea
jl
cmp
dec
inc
aad
insb
bnd
sbb
sbb
xchg
xchg
cmp
adc
je
test
mov
scas
movsl
pop
sti
lods
mov
scas
push
pop
mov
mov
decb
push
sbb
add
jns
loope
mov
dec
fnstsw
mov
pop
dec
jnp
stos
test
mov
sbb
sahf
push
jmp
dec
clc
jb
inc
pop
inc
aad
les
cmpsl
fs
lods
bound
cli
jo
mov
leave
cmp
out
or
jge
jmp
xchg
loopne
jb
bound
jp
fsubr
mov
adc
adc
shrl
pop
sub
mov
mov
and
sub
sti
dec
call
int3
mov
pop
in
mov
or
pop
jge
js
dec
sbb
mov
gs
fsub
lea
add
cmp
dec
loop
mov
jns
ror
ja
sahf
sbb
mov
pop
mov
xchg
dec
mov
faddl
shrl
mov
repz
aaa
mov
popf
int
sbb
mov
fildll
addr16
cmp
in
lret
aas
push
mov
mov
js
leave
je
adc
not
xor
adc
xchg
jns
mov
xchg
in
jnp
in
in
and
insl
or
xchg
jge
and
mov
stos
cmpsl
addb
addl
stc
or
fwait
pop
icebp
push
repnz
pop
or
jle
sub
fmul
inc
cwtl
push
js
sub
sub
hlt
mov
aam
jge
in
cmp
adc
es
fs
fadds
sbb
scas
pusha
aas
dec
into
or
lret
jae
mov
mov
repnz
fldt
pop
mov
insb
dec
xchg
lcall
inc
inc
imull
inc
push
dec
sbb
arpl
stc
adc
push
icebp
outsb
int
or
xor
push
mov
shll
and
test
cmp
aam
mov
mov
lds
mov
repnz
jo
outsl
lcall
hlt
mov
jg
fnstcw
repz
dec
ja
pusha
xor
dec
add
fnstenv
movsl
sub
insb
adc
jge
jp
mov
or
lret
pop
dec
cs
subl
add
sahf
pop
fisubl
stos
out
pop
push
mov
out
orl
mov
xchg
mov
icebp
das
mov
fdivrp
add
fdivr
aam
daa
in
ret
mov
insl
cmpsl
sbb
divb
cmpsl
orl
andl
fldl
push
jno
push
out
aad
push
test
dec
push
mov
lahf
mov
mov
pop
xchg
sbb
push
push
inc
xchg
mov
jg
mov
cld
jb
mov
ss
ja
mov
in
gs
push
pop
xorl
sti
in
or
mov
push
sbb
in
fwait
out
imull
pushf
fst
xchg
mov
arpl
or
aaa
fsubrp
lods
cmpsb
xor
adc
aaa
xor
xlat
pusha
dec
shll
dec
pop
jmp
inc
movb
test
repz
movswl
enter
and
outsl
arpl
add
jae
leave
lret
aaa
push
jl
cwtl
in
fisttpll
int
mov
clc
xor
mov
add
mov
and
in
ss
adc
jecxz
sub
lock
nop
xorb
ljmp
leave
adc
jbe
js
sbb
sub
jns
pop
pusha
fsubr
gs
xor
cmpl
inc
in
into
sub
fwait
enter
cs
lret
lret
sbb
jge
lods
call
push
adc
bound
outsb
jp
adc
out
mov
fxch
jl
adc
and
jns
subb
mov
scas
mov
ja
add
or
adc
xchg
pushl
push
sahf
mov
add
int
rolb
out
ret
stos
sbb
sbb
sbb
jb
sub
loopne
cwtl
shrl
or
ret
daa
cmp
inc
sub
jbe
dec
adc
push
in
or
mov
loope
ljmp
mov
scas
adc
sub
incl
cmp
cmp
jno
rcr
lret
divb
cld
xchg
jmp
xchg
dec
and
mov
and
in
mov
lahf
mov
mov
adcb
fcomp
repz
lcall
test
loope
mov
das
push
cli
mov
call
sub
aad
sub
ret
and
jle
nop
out
leave
mov
int3
scas
cs
or
enter
mov
fsubrp
fnstcw
sub
or
lock
out
gs
call
enterw
pop
add
add
lea
cmp
mov
fcmovb
jmp
fwait
xchg
or
adc
adc
ds
add
jg
mov
cmp
ret
xchg
popa
cmp
es
xor
mov
sub
idivb
or
call
enter
bound
dec
jb
in
pop
js
pop
lahf
lret
stc
mov
lds
push
es
loopne
and
pop
aas
cmp
repz
jecxz
adc
inc
cmp
popf
call
xchg
negb
insb
cmpsl
inc
ss
lea
psrad
rcll
inc
movsb
jmp
pop
mov
and
xor
xchg
xchg
lcall
xchg
xchg
push
sub
jns
je
imul
cmp
or
sub
inc
cmpsl
dec
push
and
mov
je
xor
inc
mov
add
cmp
cs
adc
add
cwtl
sbb
xorb
les
cld
sbb
clc
push
dec
mov
jns
outsb
jne
leave
fldenvs
xor
pop
insb
and
xorl
adc
fbstp
shlb
xchg
rcl
into
or
or
std
cmp
pop
push
add
jo
mov
sbb
push
cltd
or
in
mov
cmp
jle
inc
dec
jae
mull
aam
les
lock
mov
sbb
push
inc
cmp
out
sbb
dec
into
lret
inc
pop
adc
ljmp
cmpsl
ficoms
test
sub
cmc
mov
adcb
jle
in
mov
push
pop
or
cmp
dec
enter
sbb
lods
pop
dec
sahf
imul
mul
popf
cld
xlat
movsb
outsl
lret
dec
xchg
stos
or
lds
hlt
dec
popf
sub
faddl
mov
clc
sbb
je
inc
push
loopne
sub
inc
sbb
lea
adc
xor
add
insb
pop
push
jnp
or
push
xchg
aaa
lret
mov
je
int
mov
inc
fisubl
scas
fmulp
push
cwtl
xor
insl
xlat
mov
incl
adc
leave
stos
xorb
push
xchg
stc
sub
mov
repnz
or
jb
pop
jmp
in
dec
adc
mov
sbb
push
fisttpll
mov
icebp
and
int3
mov
lods
xlat
popa
mov
cmp
in
ds
imul
enter
dec
out
clc
aam
ficoml
inc
das
int
sub
fdivl
test
lret
cmp
or
adc
mov
clc
mov
test
push
repz
sub
ret
xor
ficoms
pop
mov
sbb
and
mov
out
fdivrl
adc
sahf
enter
pop
repnz
cltd
mov
adcl
fsubrs
or
mov
cmp
int
lahf
fcoms
adc
cs
add
test
or
pop
push
iret
loope
or
scas
mov
iret
testl
bound
mov
sbb
dec
mov
ljmp
loop
mov
xchg
dec
out
inc
je
or
mov
dec
ss
jge
cwtl
ljmp
sub
lods
lea
cwtl
mov
pop
xchg
mov
or
sub
jns
xor
daa
scas
cld
ljmp
gs
mov
jns
pop
das
in
repnz
mov
and
pushf
jl
sbb
loopne
jecxz
testb
add
cmp
pop
add
sbb
insl
xor
faddp
into
clc
push
jge
add
mov
xchg
mov
jge
or
lock
scas
xchg
movsl
dec
mov
sub
jae
push
and
jo
push
into
push
add
push
lret
mov
jle
clc
fistpll
and
xchg
add
cld
fnstcw
xchg
stc
fdivs
mov
in
enter
mov
xor
enter
and
and
fnstsw
lods
jo
xchg
dec
loop
adc
dec
sbb
hlt
dec
movsl
adc
jge
mov
mov
cmp
bnd
fwait
jle
mov
repnz
notb
loop
adc
cmp
fdivl
jle
cmp
push
pop
jge
pop
lret
sbb
xlat
cltd
push
fs
pop
iret
xchg
shlb
dec
inc
je
sbb
fs
jb
inc
jb
lea
jle
stos
loope
add
or
inc
push
loop
hlt
adc
sub
mov
add
xor
adc
les
das
hlt
add
rclb
ljmp
dec
adc
shlb
clc
bound
pop
daa
pop
fs
and
jo
mov
es
jmp
pop
inc
push
pop
clc
sbb
or
xchg
ffree
out
sbb
psadbw
dec
mov
adc
fbld
cmp
lock
inc
xor
in
mov
ds
andl
mov
pop
mov
jnp
sbb
lea
jge
xor
push
ljmp
push
push
mov
test
fcmovbe
mov
xchg
stc
jl
push
std
cli
inc
cmc
lcall
jo
out
out
lret
cmpsb
fs
das
lods
out
insb
aad
test
inc
fmuls
adc
stc
jecxz
or
inc
add
mov
xchg
dec
sub
mov
dec
sahf
int
and
xchg
cld
mov
jl
xor
cmp
orl
imul
and
jg
dec
jl
rcr
sbb
xlat
dec
jno
cli
shrl
shrl
sub
push
hlt
lods
int
icebp
cmp
xchg
inc
lods
enter
inc
daa
mov
inc
enter
xlat
addl
jmp
dec
shlb
inc
dec
out
in
pop
fcmovnbe
clc
inc
xchg
mov
inc
int3
das
mov
add
sti
adc
mov
repz
push
push
negl
cmc
iret
push
stos
xchg
xor
jmp
xor
rorl
mov
jg
orb
fs
cwtl
xor
int3
aam
sar
jb
xchg
in
outsl
cwtl
mov
adc
jnp
stc
jno
add
adc
lds
cmp
and
sarl
sbb
aad
cmp
test
call
cmpsl
test
jb
sbb
js
insb
arpl
insl
shrb
ror
mov
sbb
cmpsb
scas
mov
mov
mov
rolb
mov
push
scas
fisubrl
jecxz
shrl
in
mov
cmp
mov
mov
insb
nop
and
sbb
in
in
loop
push
mov
ds
xchg
push
or
movsb
fcompl
insb
test
stos
mov
subb
inc
cmpsl
sbb
and
mov
icebp
mov
jbe
dec
lret
in
mov
jno
mov
sbb
pop
fucomip
fidivl
adc
in
fs
pop
aam
js
push
sub
add
outsl
cwtl
cmp
adc
mov
jle
loopne
fstpl
xlat
scas
popf
xchg
sub
sbb
xchg
js
lods
inc
ret
shlb
mov
stc
lods
xchg
scas
jo
pushf
movsl
stos
dec
xchg
jb
addr16
push
jecxz
xchg
cmc
sub
jne
push
bound
jecxz
dec
mov
lret
add
imul
int3
testb
push
cld
sub
lods
inc
and
mov
xchg
mov
stos
dec
jnp
fidivrs
push
sbb
inc
push
jmp
xor
leave
bound
mov
mov
fildl
inc
fs
mov
add
jg
jne
mov
enter
or
lods
cld
mov
orb
nop
scas
pusha
subb
inc
test
cmpsb
test
decl
pushf
shl
and
pop
inc
jbe
mov
stos
shll
adc
jo
sub
sbb
call
test
leave
pop
jle
lea
loopne
cmp
cmp
outsl
insl
add
mov
stc
stos
bound
int
mov
push
andb
sub
rcl
xchg
inc
mov
movsb
lock
nop
in
or
std
lret
cmp
xchg
push
adc
out
jne
mov
pop
or
xchg
sub
jae
inc
mov
mov
xchg
sub
push
movsl
sbb
lcall
popf
pop
insb
ds
mov
fiadds
mov
dec
js
xchg
push
ret
nop
xchg
dec
out
ret
or
addr16
push
mov
jle
stos
mov
ret
cmpsb
mov
dec
mov
xchg
mov
imul
pop
popa
cmp
mulb
mov
jle
add
adc
addr16
lods
dec
pop
ja
sub
fstps
jb
lea
in
sub
cs
out
subl
adc
ja
test
push
mov
mov
xchg
mov
lahf
mov
je
lea
mov
stos
mov
data16
cmpb
ja
mov
outsl
jp
mov
cmp
jo
dec
mov
sub
int
inc
outsl
movsl
and
or
mov
clc
or
fdiv
cmp
mov
mov
xchg
jecxz
cmp
call
out
stos
aas
jb
or
std
push
iret
mov
pop
enter
arpl
cmc
pop
pop
les
cld
cmpl
aad
ljmp
sbb
inc
sub
pop
add
shl
mov
mov
dec
outsb
push
cli
jno
mov
movsl
mov
aaa
nop
shlb
rcr
lea
sti
mov
sti
popa
roll
jbe
push
lock
clc
cmc
sbb
mov
lret
test
mov
popa
and
not
leave
movsb
inc
fisubs
bts
sub
xchg
in
loopne
xchg
adc
cmpsl
repnz
and
sub
sbb
jmp
fnstcw
push
into
rep
xor
jmp
into
test
jmp
rorl
ljmp
mov
cmc
cmpsl
shrl
xor
inc
push
es
loope
aaa
push
rcrl
in
aaa
jge
lock
dec
mov
addb
repz
sahf
lods
mov
loope
sub
cld
xchg
add
je
sub
xchg
popa
repz
mov
fcomps
addr16
loope
nop
jle
in
stos
push
add
push
cmpb
xchg
push
aam
dec
int
add
loopne
sbb
loop
add
cmpsb
lea
clc
lock
lea
rorl
movsb
addr16
xor
cmp
cli
sbb
shr
cmc
out
add
pop
lods
or
mov
fsubr
sbb
js
ffreep
mov
xchg
dec
and
idiv
sub
sbb
roll
mov
inc
mov
or
in
cwtl
sti
je
jno
ds
sbb
cmp
push
into
shlb
dec
cmpsb
jge
outsb
lret
xor
ret
mov
loopne
in
mov
jmp
mov
xchg
in
shlb
out
cmp
jns
sbb
add
shl
popf
sbb
xor
xor
cwtl
jmp
cmp
jmp
xchg
out
or
cmc
mov
mov
dec
lds
andb
or
ja
adc
sbb
lret
inc
push
add
xor
je
push
push
paddusb
push
in
mov
adc
xor
xor
or
cli
mov
xor
int3
test
add
mov
add
loope
xchg
mov
ljmp
xchg
js
mov
and
cmc
add
scas
push
cmpsb
rorl
repz
sub
cmp
stos
movsb
popf
ja
stos
mov
scas
sbb
jb
in
fs
jp
test
sub
sub
jp
adc
push
hlt
fmul
lret
loop
jbe
cmp
push
sti
sbb
aaa
scas
cs
ljmp
dec
adc
or
mov
cmpsl
pop
add
jb
mov
sbb
pop
add
xorb
jge
cmpsb
inc
push
mov
js
push
mov
iret
repnz
div
pop
scas
cmp
popf
popa
inc
push
push
push
out
movsb
add
jl
and
stc
test
pop
stos
inc
mov
xchg
jb
cld
cmp
push
xchg
leave
push
jne
xor
in
bound
mov
fstl
out
add
jle
fdivs
sahf
adc
or
test
movsl
cmp
and
insl
enter
push
in
sbb
es
test
data16
and
andb
cwtl
loop
clc
or
cmp
cmp
loope
xor
stos
cltd
dec
pop
test
lahf
fidivrl
inc
mulb
sbb
aaa
push
jne
nop
inc
sbb
mov
push
call
mov
jae
movsb
ret
aas
inc
lret
pop
into
scas
dec
cwtl
cmp
sbb
loop
aaa
cli
push
jae
mov
sti
mov
xchg
pop
jno
dec
xchg
dec
imul
jle
lea
or
sbb
mov
push
inc
int3
sub
das
ret
loopne
clc
adc
aam
imul
rorb
cmp
in
ljmp
repz
xor
mov
pop
mov
call
xchg
hlt
xchg
scas
aam
ja
cwtl
mov
adc
jge
stos
push
imul
dec
faddl
jnp
out
mul
jo
sbb
mov
lret
mov
xchg
sub
stc
pop
insl
lea
cmpsl
fidivl
mov
pop
mov
cs
pushf
cwtl
aam
sub
and
cmpsl
std
inc
mov
adc
cwtl
or
dec
or
xchg
dec
add
adc
out
adc
push
sarl
jl
cs
xor
adcb
cwtl
xor
mov
je
bound
cli
adc
sub
in
popa
add
mov
mov
popa
jge
cmc
jp
sub
fcmovne
aas
shlb
fisubs
je
adc
out
cmc
sbb
pavgw
sbb
test
mov
sub
dec
xchg
xor
bound
out
push
adc
bound
adc
sahf
repnz
ds
or
sub
cltd
aaa
push
or
mov
outsb
arpl
dec
insl
dec
iret
xchg
icebp
repz
es
jbe
lods
or
stc
jo
pop
test
pop
mov
mov
test
shlb
pop
pusha
push
cld
idivl
jmp
xchg
ret
in
or
adc
add
loop
nop
fadd
ss
jp
in
jae
pop
push
mov
ja
jmp
lock
dec
mov
stos
fildl
xor
pop
clc
xchg
outsl
fadds
into
add
and
ss
push
in
sbb
jno
mov
jge
or
mov
addr16
cmpsb
add
mov
dec
js
add
adc
cld
filds
mov
push
roll
mov
mov
daa
mov
rcl
imul
outsl
mov
popa
inc
inc
mov
jns
scas
pop
cmp
das
adc
fiadds
in
fnstcw
insb
aad
push
cmp
stc
push
jne
cltd
cmpsl
out
sbb
push
aam
or
out
cwtl
xchg
fstpl
cmp
fcmovbe
gs
jno
mov
sti
mov
cmp
mov
adc
sbb
cmp
adc
push
das
ja
mov
fsubr
xor
mov
ja
daa
xchg
in
out
in
fs
xorb
mov
sub
xchg
pop
pop
iret
cmp
cmp
adc
rolb
aad
cs
stc
xor
adc
divb
jmp
pop
sbb
iret
inc
mov
sub
add
mov
pop
push
sub
xchg
mov
mov
mov
jno
sub
adc
popa
add
cltd
in
test
inc
cli
adc
aaa
jl
cli
mov
sub
push
fcomps
leave
or
sub
into
popa
mov
mov
push
js
push
imul
nop
jecxz
cltd
icebp
mov
repz
and
mov
mov
sbb
jmp
mov
and
es
jle
fwait
jb
imul
push
mov
cmp
lahf
roll
jl
loop
jmpw
xor
push
push
xchg
lods
fs
lret
jle
cmp
loope
cwtl
mov
push
mov
or
lock
test
lds
daa
xchg
js
jmp
arpl
ss
xor
mov
mov
mov
jns
test
mov
scas
bound
test
movsl
or
lret
jo
xchg
loopne
push
or
lahf
fists
mov
stos
test
or
xor
lret
mov
jae
mov
iret
loop
inc
cmc
pop
int3
mov
ss
cli
lret
es
pushf
fdivs
jo
mov
add
loope
jno
cltd
mov
cld
in
test
pop
scas
jmp
iret
daa
imul
iret
push
push
andb
mov
sub
lcall
jno
fstl
insl
in
shll
xor
xor
dec
or
rolb
pop
pop
push
jns
push
push
mov
int3
mov
ljmp
mov
inc
imul
pop
or
addl
pop
mov
out
stos
mov
adc
stc
aas
sbb
js
dec
rcrl
cmp
cwtl
or
int3
pushf
push
jge
rcrl
pop
or
push
cmp
mov
gs
mov
dec
adc
loop
mov
xor
xor
js
jns
add
xor
adc
shrl
add
pop
movsb
pop
inc
jnp
jg
inc
pop
mov
pusha
mov
into
dec
ret
call
xchg
mov
clc
fsubrl
mov
outsb
mov
js
cs
in
cmpsl
popf
fsubrs
xchg
mov
ret
das
mov
cmpsl
fwait
mov
in
xchg
xchg
lahf
mov
mov
cmp
repz
push
out
add
push
ret
or
jbe
dec
pop
aad
mov
dec
jle
jbe
imul
push
lcall
insl
mov
lret
scas
jle
inc
cmp
inc
jb
ds
jae
mov
movsl
fcomps
es
shll
adc
cmp
ds
push
mov
mov
xor
cmpsb
jge
scas
and
dec
or
jno
enter
jae
fmuls
adc
mov
mov
sbbl
ljmp
push
dec
dec
ljmp
in
add
rclb
sbb
cmc
or
inc
xchg
imull
repnz
xor
dec
mov
push
mov
test
popf
icebp
xor
xchg
lea
adc
mov
andl
mov
inc
sbb
imul
movsl
cmp
add
push
out
inc
rorl
fcmovb
scas
clc
sbb
je
daa
mov
fisubl
mov
dec
mov
es
sub
mov
movsl
mov
xor
fwait
xor
loopne
jg
das
daa
lahf
popf
inc
mov
xchg
xor
dec
xchg
inc
mov
adc
or
mov
inc
mov
mov
fadd
ror
lahf
ja
pop
mov
mov
mov
cs
repz
gs
loopne
fidivl
mov
stc
popf
mov
je
shrb
stos
dec
cltd
in
sbb
shrb
pop
mov
cmp
lcall
ljmp
repz
xchg
imull
and
mov
aam
mov
inc
inc
and
and
sbbb
push
push
es
out
adc
insb
xchg
push
sbb
repz
in
pop
cmp
sbbl
and
imulb
or
mov
xchg
sarb
cmp
loop
addr16
nop
cmc
mov
call
out
adc
mov
adc
ja
test
lret
int3
pop
andb
xchg
sub
mov
cmp
out
popa
cmp
add
mov
aam
addr16
pop
sbb
push
mov
xchg
aad
and
dec
enter
cmp
push
mov
jle
popf
mov
std
push
mov
mov
xlat
cld
mov
enter
push
lcall
es
ljmp
add
cmp
and
mov
dec
adc
mov
sbb
mov
es
xor
lock
and
ds
mov
fists
xchg
pop
repz
jp
sti
and
loop
cmp
xor
cld
xor
out
mov
sarl
adc
jl
jle
je
cmp
inc
fs
sub
cmp
xlat
dec
jb
mov
cmpsl
popf
mov
fstpt
cli
or
cs
mov
xchg
xor
std
bound
mov
imul
hlt
out
jmp
add
lcall
scas
notb
pop
sub
mov
test
pushfw
shrl
filds
ret
js
lods
sahf
dec
test
mov
jle
jmp
push
jne
pop
jo
or
push
pop
js
ds
push
lret
mov
jns
scas
cltd
add
cmc
cmc
xchg
dec
xor
mov
ja
aas
cmp
mov
xlat
mov
jnp
nop
mov
test
repnz
and
out
push
lahf
xchg
add
or
loop
ja
stc
test
rclb
pop
lahf
sbb
std
sbb
shl
add
add
jb
jmp
mov
mov
pop
pusha
mov
out
repz
mov
aad
sub
mov
xchg
mov
icebp
addr16
insl
cmp
fdivrs
imul
adc
paddsw
ds
std
pop
imul
mov
push
pop
dec
cmp
popf
repnz
fwait
in
push
pusha
sbb
rclb
imul
cs
jl
aam
ret
mov
stos
and
inc
popf
bound
je
push
cmp
sbb
sub
xchg
test
inc
pop
lods
and
jecxz
mov
xchg
jbe
mov
divl
int3
inc
cmp
adc
adc
and
jne
mov
jno
xchg
inc
add
cmp
dec
jmp
xchg
mov
sub
jmp
out
jbe
xor
pop
call
out
lret
lret
mov
jb
lock
mov
mov
mov
xchg
neg
or
mov
xor
addr16
or
jnp
jnp
adc
nop
insb
data16
mov
inc
fldcw
dec
test
es
mov
gs
lods
jl
int
and
mov
add
sub
add
imul
repz
ss
into
loope
lock
push
lcall
es
jns
lret
aaa
call
shrl
call
pop
cli
jne
js
jns
imul
sbb
or
mov
mov
out
insb
lret
iret
jge
pop
cs
add
out
test
pop
dec
dec
or
aas
sbbb
jo
and
outsl
and
mov
lds
inc
mov
mov
pop
loop
cmp
xor
in
insb
stc
in
pop
ljmp
aas
mov
ror
mov
xor
mov
lret
mov
lret
das
push
adc
jle
rorb
movsb
mov
add
jo
lock
mov
lock
mov
je
and
inc
in
test
in
into
lret
aam
xor
sub
pop
sbb
stc
jge
mov
xor
das
jecxz
bound
jl
popf
pop
out
add
mov
cmp
cmpb
stos
lcall
out
sub
iret
arpl
xlat
daa
inc
loop
cmp
push
or
xlat
mov
arpl
cli
pop
cli
xor
arpl
jno
js
and
outsb
icebp
and
pop
call
mov
addb
addb
sbb
out
and
ss
push
out
xchg
adc
and
ret
outsl
xchg
adc
dec
inc
sbb
xor
int
dec
clc
sarl
mov
add
xchg
fwait
inc
mov
xchg
or
cmc
mul
enter
pusha
xor
pop
push
das
test
repz
dec
cli
mov
sbb
add
shrl
xor
mov
mov
shl
incb
das
lods
adc
mov
cmp
cmp
imul
xchg
loopne
or
push
aas
in
xchg
pushf
cltd
sbb
push
fisubrl
lahf
add
sar
xchg
cld
rolb
mov
dec
sbb
rcl
call
pusha
and
or
subl
lods
scas
outsl
in
or
gs
out
pop
xlat
inc
sub
pop
sub
pop
xchg
in
inc
loope
mov
jb
out
jmp
pusha
stos
mov
xchg
xor
cmpsb
fs
stc
sub
sub
inc
icebp
out
ljmp
cmp
js
or
jp
mov
pop
lods
sbb
cs
sub
dec
aam
xlat
lods
testb
sbb
ljmp
sub
outsl
pop
mov
xchg
sub
leave
or
std
aaa
test
arpl
nop
or
push
xor
into
bnd
adc
mov
inc
in
cmp
imul
insb
jp
sti
jmp
push
scas
popa
ss
lock
cltd
cmp
pop
or
push
mov
push
fs
xor
es
adc
ljmp
mov
stos
mov
dec
insb
mov
push
push
add
incb
sub
fmull
lods
push
ret
fst
xlat
inc
in
orl
dec
push
adc
xchg
mov
sub
push
pop
jnp
icebp
shl
leave
cwtl
lds
push
inc
lcall
incl
xor
inc
adc
jmp
mov
mov
jnp
adc
mov
add
pop
imul
mov
outsb
pslld
ss
add
in
std
lcall
cmp
int
push
enter
push
je
and
jmp
mov
cmp
mov
dec
test
cmp
popf
fs
pop
roll
xchg
jge
negb
arpl
iret
adc
mov
xchg
jl
out
push
adc
frstor
mov
clc
xchg
jge
lcall
test
lahf
dec
inc
lock
dec
cmp
neg
fdivr
push
leave
jmp
cmp
jne
xor
ja
adc
mov
fld
js
mov
and
push
xchg
mov
mov
and
push
fs
xor
out
sahf
lods
jne
mov
dec
jno
xchg
mov
adc
xchg
bound
push
ret
jae
inc
pop
mov
js
jne
sbb
mov
stos
pop
dec
mov
xor
jmp
or
xlat
mov
loope
pusha
add
pop
jp
sbb
cwtl
pop
cmp
xor
loopne
outsb
or
cmc
dec
les
sti
ret
es
mov
cwtl
movsb
sub
push
mov
and
adc
int3
in
jns
cmpsb
sub
adc
or
js
add
sub
out
popf
cmp
pop
mov
scas
addb
push
and
mov
les
sbb
lods
mov
ss
imul
xor
out
and
sarb
lcall
jbe
jae
pushf
xor
mov
aad
stc
nop
shlb
imul
fidivrl
movsl
dec
popf
sbb
shl
mov
cld
clc
inc
push
sub
push
dec
dec
or
and
mov
sti
add
xor
inc
cmpsl
and
lret
out
adc
aaa
inc
int3
rcll
mov
dec
pop
sub
arpl
mov
icebp
iret
cmp
addb
sub
jo
mov
lret
shlb
mov
shll
dec
repnz
mov
lcall
jns
pop
data16
cmpsb
out
jg
lods
ds
inc
jne
cmpsl
mov
xlat
and
test
xchg
stos
stc
lods
sub
nop
jmp
ret
dec
clc
cmp
dec
loope
mov
andb
sbb
add
scas
cmp
addr16
pop
mov
aam
and
cmp
mov
ja
dec
dec
nop
mov
fs
movsb
adc
rol
cmpsb
mov
push
sub
push
lret
push
pop
jmp
aas
mov
or
sub
sub
xchg
inc
and
into
aam
in
mov
mov
pusha
arpl
fldl
mov
sbb
in
dec
push
pop
lods
xlat
mov
xchg
adc
mov
aad
jb
or
out
outsb
push
iret
or
push
xchg
stos
pop
pushf
push
ret
mov
xchg
std
or
push
sub
fcmovb
pushfw
jle
test
inc
filds
bound
mov
jp
ret
lods
xchg
mov
dec
xchg
pop
shll
adc
jbe
adc
mov
data16
or
sbb
fstpl
adc
mov
push
stos
or
push
arpl
dec
fldl
call
fdivrs
sbb
or
orb
jecxz
andl
sub
lock
push
mov
ss
mov
adc
int3
push
push
pop
stos
mov
sbb
test
bound
js
mov
sar
stos
in
adc
xchg
inc
das
xchg
leave
lret
in
ret
nop
dec
pop
dec
xor
cmp
lret
inc
sbb
iret
or
ds
out
jp
hlt
shll
std
call
or
testl
mul
sbb
pop
pop
scas
stos
and
into
lahf
lods
sub
stos
call
xor
mov
aam
out
pop
mov
lds
lcall
jge
bnd
pop
xor
scas
dec
addr16
repnz
dec
jp
push
lods
sub
pop
lea
cwtl
cmp
ljmp
mov
mov
add
mov
les
lock
fdivl
mov
xchg
ljmp
and
and
loope
outsl
daa
loop
push
je
andl
xchg
jle
sti
mov
push
mov
dec
fisttpl
mov
gs
out
movb
sbb
mov
jge
f2xm1
adc
test
fsubs
inc
jns
sbb
sbb
lcall
sbb
fld
into
dec
cmpsl
push
cwtl
inc
sbb
add
inc
inc
cmpsb
in
mov
test
sbb
scas
std
xlat
lcall
jge
call
mov
jne
xor
shl
into
adc
mov
roll
addb
pop
pop
verr
add
xchg
imul
mov
mov
rcl
sbb
mov
idivb
lods
mov
lahf
int
lods
sbb
inc
enter
in
mov
push
and
xchg
sub
inc
test
mov
jb
lds
xchg
cmp
inc
xor
jno
jb
dec
std
jne
int3
pop
adc
aam
xchg
pushf
test
addl
mov
mov
mov
mov
fcmovu
pushf
std
sbb
push
rep
aad
cmp
push
sbb
or
adc
mov
aas
inc
jmp
cmpsl
dec
in
fimuls
and
in
add
das
test
adc
xchg
dec
cli
mov
in
dec
outsl
cli
push
inc
mov
out
sbb
std
xor
ret
call
rcrb
jbe
xchg
adc
cld
aam
daa
movsb
mov
negb
ret
mov
das
hlt
xchg
repz
mov
push
pushf
sub
sub
xor
lds
jl
lret
push
jb
popf
or
fsub
inc
jo
cli
scas
sahf
fdivrs
inc
mov
dec
push
lcall
pusha
adc
pop
sbb
mov
jmp
pop
ljmp
mov
and
mov
enter
outsb
fistpll
dec
sub
xchg
cltd
cmpsl
mov
lock
push
sbb
xor
jle
out
cwtl
testb
std
push
int
nop
pop
ret
loop
and
loop
dec
and
mov
mov
data16
ja
repz
push
add
das
jle
inc
jl
xor
fildll
outsb
sbbl
sub
push
xor
jmp
jge
cwtl
jle
push
lods
sbbl
cmp
hlt
popa
xor
das
mov
rol
jg
nop
popa
fwait
pop
cmpsl
mov
stos
ja
xchg
loope
popf
sub
call
cmc
imul
pop
adc
jl
sub
mov
out
mov
xchg
cli
push
movsl
sbb
sbb
jb
mov
add
pop
mov
inc
push
push
mov
sti
cwtl
mov
push
mov
adc
dec
int
jo
mov
in
stos
test
pop
je
sub
and
push
jmp
filds
mov
call
nop
dec
add
jns
inc
fcmovne
sahf
das
or
mov
mov
leave
data16
pusha
adc
call
and
dec
rcrl
mov
mov
dec
mov
aam
gs
stos
or
add
dec
fistps
sub
or
cmpxchg
xorl
leave
pop
jg
mov
shrb
mov
sub
adc
jmp
cmp
aas
pop
fidivrs
decl
aam
iret
mov
es
nop
js
mov
das
and
xchg
adc
rcrb
stc
arpl
out
add
repnz
fs
negl
call
aas
repnz
rolb
insl
pop
mov
sar
xlat
ja
scas
into
enter
loopne
ljmp
lea
mov
or
lods
cmp
push
lds
scas
xor
dec
adc
aad
stos
cld
xor
shll
xor
mov
pop
jb
out
mov
dec
repz
push
les
insl
add
out
jo
push
stc
and
add
and
ret
popf
mov
es
insl
and
xor
nop
scas
jns
loope
mov
inc
inc
aad
push
dec
jecxz
out
pop
mov
inc
push
inc
out
sbb
or
mov
and
mov
cmpsb
mov
test
or
push
push
xchg
ret
push
ret
subb
pop
dec
pop
and
mov
dec
mov
btr
sbb
in
adc
leave
push
into
insl
das
mov
add
cld
pusha
stc
test
jg
adc
adc
bt
nop
xchg
bound
sti
dec
jnp
inc
movsl
sti
lods
lea
mov
sub
push
and
gs
or
mov
psubd
xchg
fcompl
push
jg
and
in
sbb
adc
fucomip
jl
rcrl
lock
jne
test
aas
jb
xor
jbe
inc
xlat
xchg
mov
scas
mov
das
sub
cltd
lea
loop
in
mov
mov
pop
out
xor
sub
dec
mov
inc
jp
stos
mov
jecxz
inc
dec
pop
ljmp
gs
mov
fdiv
sub
or
push
ret
sbb
cmp
loop
loope
popa
repnz
imull
test
aad
pop
mov
push
subl
adc
ret
sbb
mov
xchg
repnz
mov
repnz
sbb
dec
jae
and
mov
inc
inc
inc
fmull
dec
sub
jbe
sub
cltd
mov
sbb
add
rorl
jb
jb
sub
iret
mov
insl
mov
adc
mov
jl
add
cmp
lods
sbb
aaa
mov
cmc
jbe
aas
inc
out
fwait
mov
in
pop
dec
jmp
adcl
mov
sbb
pushf
mov
pop
sbb
mov
adc
pop
popa
jp
xor
mov
scas
int3
cmp
xchg
cmp
nop
aad
xchg
pop
push
xchg
test
sahf
lret
xchg
and
adc
xor
inc
in
cld
push
inc
lea
pop
add
mov
cmpsl
push
aas
cmpsb
js
add
movsb
add
icebp
jno
ret
out
cmp
insl
pop
test
sub
fbstp
test
jne
and
inc
pop
xor
shll
and
dec
jo
les
pushf
in
jno
cmpsl
mov
and
or
cld
fsubl
push
add
jge
and
dec
jae
dec
orb
into
pop
jo
mov
sbb
sub
fcoms
das
les
add
les
fsubl
xor
std
mov
outsl
dec
mull
call
cwtl
les
mov
pop
nop
mov
mov
lods
inc
test
addr16
mov
push
leave
add
mov
int3
dec
mov
stos
fxch
jge
ss
jne
jp
test
jle
scas
mov
mov
jmp
popa
push
adc
fs
xchg
loopne,pn
mov
divl
ljmp
ret
ja
dec
mov
sbb
inc
ret
push
adc
push
rcrb
movsb
fisubl
lods
pop
lret
nop
repz
lds
push
les
js
or
leave
sub
lds
dec
lahf
mov
adc
sbb
arpl
mov
adc
clc
leave
imul
in
mov
push
orb
mov
sub
dec
imull
cmc
mov
sbb
jnp
add
pop
bound
cmp
std
sub
test
jecxz
mov
fdivrp
mov
in
shlb
xchg
pushf
fnclex
or
dec
sub
fildl
cmp
xchg
or
sti
add
pop
out
out
adc
jns
lods
pop
data16
mov
fcmovne
add
xor
test
xchg
loope
mov
cmp
inc
and
lds
andb
mov
jae
jg
sbb
add
pop
repz
inc
mov
imul
add
lea
mov
clc
rorl
jg
cld
dec
or
mov
push
nop
dec
mov
jno
out
outsb
daa
pop
mov
imul
cmpsb
outsb
push
add
popa
test
push
js
scas
jp
xchg
add
lds
xchg
pusha
repnz
fwait
pop
mov
shl
in
and
pop
jle
cmp
test
in
adc
jmp
fwait
loope
lahf
std
sahf
push
jo
and
pusha
test
in
or
inc
daa
pop
pop
xlat
jl
inc
clts
les
inc
dec
add
mov
repz
lods
movsb
xor
cmp
repnz
xor
push
das
and
rcrb
xlat
xor
sbb
das
mov
loope
es
sub
pop
jns
jno
mov
cmc
push
aam
push
cmp
aad
xchg
xor
inc
lea
loop
xchg
sub
cmpsb
loopne
ds
and
std
cmc
push
or
cli
inc
inc
fwait
insb
pop
insl
lock
or
pop
aam
nop
inc
sbb
cmpsb
mov
aas
out
sarl
jge
dec
inc
push
adc
adc
ljmp
loopne
jns
xchg
mov
icebp
sbb
aaa
inc
pop
cmp
mov
mov
dec
lcall
sbb
jne
mov
push
xchg
jns
add
mov
xor
adc
add
push
inc
test
sbb
loopne
mov
mov
stc
mov
and
xor
pop
mov
push
xor
pop
xor
imul
repz
call
out
stos
aad
das
aam
mov
fidivs
ds
xchg
ljmp
loop
outsb
pop
cld
sbb
mov
aaa
push
push
push
shrl
dec
adcl
push
lds
mov
add
ds
das
pop
pop
aad
dec
sub
outsl
aas
jns
dec
cmp
dec
lahf
adc
fimuls
dec
ljmp
mov
in
pop
dec
sub
and
xchg
xchg
jmp
or
leave
xor
lds
mov
and
jge
shlb
sub
ret
rcrl
add
add
mov
fadds
aaa
test
cmp
cltd
mov
mov
sub
in
in
mov
lods
cmp
js
mov
data16
push
jecxz
hlt
dec
xchg
je
mov
repnz
mov
inc
pop
das
sub
dec
aad
in
sub
or
mov
mov
call
fcomi
pusha
imul
sbb
or
push
subb
mov
mov
mov
les
or
xlat
scas
cmp
pushf
cmc
dec
sbb
xor
add
adc
inc
pop
dec
and
inc
mov
cmpsl
cmp
imul
mov
arpl
in
mov
xchg
dec
jmp
jmp
subb
pop
pusha
mov
movsb
xor
daa
sub
xchg
vshufps
pushf
inc
pop
pop
mov
jmp
sub
jbe
jge
xchg
add
stos
or
int
repnz
hlt
adc
xor
test
fcom
or
push
adc
loopne
es
dec
lahf
aas
jb
mov
loop
test
lret
adc
push
rorl
add
sub
ljmp
xor
in
xchg
push
pop
mov
cld
or
std
mov
adc
je
loopne
pop
mov
cwtl
inc
push
jne
and
push
sti
iret
xchg
push
or
insb
mov
mov
ret
push
pop
or
subb
push
in
popf
js
testb
out
lods
cmp
sbb
cld
jae
push
mov
adc
mov
push
jge
into
push
pop
int3
popf
pushf
pop
xor
mov
jg
push
mov
mov
aam
dec
stos
xor
fs
rclb
pop
cmpl
push
mov
pop
push
sub
dec
inc
dec
shrl
aad
shrb
dec
cs
lahf
or
mov
cli
imul
and
test
stos
inc
jle
daa
sub
stos
sbb
in
arpl
scas
mov
jbe
in
xchg
adcl
test
in
fwait
test
aam
xor
call
sbb
in
shll
sbb
std
adc
shlb
xchg
sbb
mov
aas
push
add
mov
fstpt
rcrb
and
das
rcrb
xchg
das
xlat
push
adc
inc
mov
repnz
jno
sub
movl
in
enter
sub
ljmp
fidivrs
scas
iret
mov
jp
or
data16
fs
or
push
int
jo
andb
add
test
jno
clc
insl
and
lahf
loope
test
inc
xchg
int
cld
lods
scas
jne
or
xchg
outsl
lcall
sub
out
pop
das
inc
pop
dec
jb
lahf
sahf
xchg
xor
sbb
mov
jle
jle
xor
aas
es
jle
lahf
scas
push
insl
subl
pop
pop
lret
inc
mov
jno
mov
jnp
outsl
mov
jb
leave
sbb
dec
lods
fdivr
sbb
xor
jge
sub
imul
or
daa
xor
mov
mov
lret
iret
rolb
dec
into
adc
pop
dec
and
jns
xor
or
lret
mov
add
push
stos
icebp
lock
dec
fmul
rclb
fdivs
push
adc
xorl
mov
xchg
sbb
cmpsb
fsubs
rsqrtps
jae
pop
dec
jle
mov
shrl
add
js
push
ds
pop
mov
adc
jmp
mov
ftst
loope
xchg
popf
movntps
mov
or
in
pop
add
outsl
jbe
xor
bound
sub
push
aas
int
xchg
dec
fisttpl
test
adc
cmp
and
cmpsb
popf
xor
mov
jmp
jae
xchg
fidivrl
addr16
jns
add
push
cmpsl
push
ljmp
es
dec
sti
arpl
aas
jbe
imull
addb
sub
pop
xor
xchg
adc
xor
inc
lock
jo
push
mov
lods
pop
cltd
in
scas
inc
movl
xchg
jge
into
out
push
leave
movsl
cld
shll
test
and
test
jae
shll
movl
xchg
clc
pop
pop
popa
xchg
aaa
inc
mov
sbb
jnp
push
outsb
movsl
adc
jp
or
cmp
cmc
mov
dec
jae
lock
xchg
je
lea
insb
inc
jno
mov
aaa
popf
xor
pop
xchg
out
lea
in
sbb
enter
push
adc
lcall
push
mov
dec
xchg
mov
js
add
movsl
pop
mov
mov
imul
fstpl
inc
inc
pop
nop
fdivrs
scas
stos
mov
test
aam
mov
lret
cld
xchg
insb
push
int3
pop
imul
inc
or
xchg
xlat
adc
inc
fidivrl
adcb
fldl
lods
jmp
fsubr
xor
cwtl
or
xlat
clc
xchg
mov
aam
dec
pop
or
xor
add
push
mov
jns
out
in
fcomps
inc
sbb
jns
mov
mov
loop
fmulp
cwtl
in
pop
xchg
mov
imul
mov
imul
out
cmpsb
fmul
pop
scas
lods
gs
pusha
adc
insl
adc
add
mov
cmc
ljmp
fcoms
iret
lahf
sbb
sarl
mov
inc
mov
lahf
inc
jns
fbstp
in
pop
or
mov
insb
mov
sbb
xor
rorl
das
lahf
push
in
out
cmp
scas
out
adc
and
imul
sub
in
orl
mov
arpl
mov
sbb
out
das
shrb
into
jae
ljmp
lea
sarl
and
lret
mov
shll
roll
push
add
and
notl
jns
jge
stc
or
sbb
adc
fmull
cmp
sub
dec
pop
mov
jae
fwait
je
mov
cmc
sbb
cmpsl
add
mov
pop
mov
ret
jge
fdivr
xor
gs
mov
adc
jl
test
movb
and
repnz
sbb
mov
mov
push
mov
stc
popa
inc
dec
fsubs
flds
or
fmull
inc
push
adc
pop
and
xor
test
push
push
pop
add
pop
sbb
mov
or
in
push
in
frstor
loope
shll
sti
or
add
cmp
mov
xchg
repz
xchg
mov
mov
jnp
mov
mov
loop
mov
insl
sbbl
dec
xchg
icebp
sahf
dec
loop
cmpsl
aas
aaa
or
pushf
pop
mov
inc
dec
pusha
cmp
push
push
fwait
mov
faddp
popf
mov
mov
dec
cmp
daa
xor
loope
int
cltd
iret
loope
insb
fidivl
sub
mov
in
xor
or
cmp
loope
lods
adc
push
shrb
ss
into
jns
adc
daa
lock
jb
sub
popf
mov
xchg
xchg
fisttpl
movsl
adc
pop
dec
push
imul
data16
into
push
mov
mov
and
ds
into
jp
cmc
rorb
sbb
xor
sub
push
stc
mov
movsb
in
cmpl
mov
xor
xchg
movl
xor
arpl
adcb
add
inc
lock
rorl
adc
jmp
dec
sbb
adc
int3
and
lahf
gs
cmpsb
aas
and
loope
daa
jb
jle
stos
fsts
jo
leave
mov
adc
stc
pusha
dec
idiv
inc
and
das
mov
inc
dec
std
push
xchg
xor
mov
add
or
repnz
int
in
js
pop
cld
arpl
gs
je
lea
imull
xchg
sarb
outsb
loopne
test
dec
mov
jne
test
leave
fidivs
xor
or
flds
jb
out
filds
xchg
xchg
xchg
sbb
mov
add
inc
or
ljmp
and
sbb
jmp
xor
loopne
fsubr
popa
dec
nop
leave
sbb
xchg
in
cmc
mov
or
test
sti
es
lret
mov
sbb
pop
add
mov
mov
push
dec
cmpxchg
and
sahf
jbe
xor
clc
xorb
lahf
mov
mov
lahf
or
jne
and
jo
mov
jg
ret
xor
or
addl
pop
repz
rep
pop
popl
stos
xchg
mov
nop
jne
and
jns
hlt
ss
scas
cli
push
imul
notl
inc
xchg
sub
sub
in
cmpsl
mov
or
std
fnstsw
mov
stc
push
jl
sbb
jns
jae
adc
xchg
cmp
xchg
jmp
sub
jecxz
mov
add
mov
int3
add
cld
push
or
cmp
es
lods
add
sub
dec
arpl
jle
mov
jg,pn
sbb
mov
adc
push
mov
repz
jmp
mov
mov
dec
sub
xchg
pop
flds
and
xor
add
inc
mov
cmp
faddl
or
pop
les
inc
inc
scas
in
in
aas
xchg
insb
adc
jmp
mov
dec
sarb
fisubl
add
jle
jge
faddp
xor
push
push
dec
and
push
xor
pop
scas
xor
out
push
fs
in
adc
xor
out
setnp
mov
insb
pop
lods
pop
inc
add
or
xchg
xchg
test
js
mov
add
addr16
cltd
cmp
inc
je
jmp
and
clc
rclb
xchg
push
cmp
mov
test
insl
or
push
xor
push
and
adc
pop
sub
lret
sbb
les
inc
inc
adc
pop
push
xchg
push
and
lods
movsl
adc
in
jmp
dec
cli
mov
xchg
dec
mov
negl
xchg
adc
push
out
pusha
mov
iret
pop
mov
cltd
mov
xorl
pop
pop
dec
inc
icebp
lods
xor
data16
inc
aad
xor
mov
and
fcmovb
xchg
mov
push
sub
cs
add
decb
add
enter
lea
mov
ret
fnsave
cld
je
jnp
test
adc
sub
divl
push
dec
cmp
aam
aad
inc
mov
or
sbb
xchg
test
sub
int3
lret
add
in
xchg
jmp
das
dec
cwtl
dec
jl
cwtl
mov
xchg
add
in
mov
lcall
out
js
sub
stos
push
xchg
mov
aam
mov
add
lret
cmp
cmp
cmc
mov
adc
lea
inc
dec
mov
bound
mov
pop
sub
out
pusha
lret
mov
fldl
push
add
inc
jbe
bound
push
sbb
mov
mov
inc
jns
js
xchg
push
adc
cltd
lods
push
jle
out
jno
out
lahf
xchg
repnz
outsl
scas
xchg
nop
mov
jb
inc
sub
cmpsb
xchg
sahf
pop
jecxz
clc
gs
sbb
hlt
push
pop
call
les
jns
xor
repz
fucom
es
jge
pop
xor
out
int3
fwait
adc
jbe
or
sub
insl
or
push
pop
in
jmp
pop
sbb
outsb
pop
inc
sbb
in
or
jno
cs
inc
pop
negl
stos
lahf
dec
mov
pop
dec
sarb
or
cmp
bound
enter
or
ret
mov
mov
int3
rcl
xor
ficomps
das
xor
adc
pop
adc
fadds
dec
sub
and
lahf
xchg
pop
push
pop
testl
subb
jle
setns
push
xchg
inc
sub
xlat
xor
fistpl
cld
push
cld
stos
jge
sub
adc
lock
mov
ret
jge
int3
pop
data16
jae
fiadds
test
dec
mov
add
aas
inc
dec
mov
add
in
cmp
repz
sub
jecxz
data16
fsubrs
mov
cli
ds
sub
pusha
call
cmp
ret
mov
pop
adcl
popf
mov
lret
adc
in
das
dec
jae
lcall
lahf
fucom
mov
loopne
mov
adcb
dec
rol
mov
outsb
inc
orb
out
fistl
cmp
leave
int3
mov
sub
or
fists
maskmovq
mull
loop
pop
and
stos
js
xlat
sub
lock
pop
ja
inc
xchg
push
add
popa
jg
sub
popf
out
test
push
faddl
or
xchg
in
push
inc
mov
arpl
cwtl
fidivl
and
xchg
loopne
mov
cmp
adc
arpl
cwtl
push
push
daa
nop
sti
fadds
je
fdivrs
mov
sbb
mov
mov
in
xor
imul
adc
sub
xlat
test
test
and
sbb
jae
in
xchg
fs
cmpsb
out
dec
insl
jbe
es
mov
xchg
sub
add
repz
jae
fs
ret
sub
rclb
lock
sbb
es
cmp
xchg
movsl
andl
or
xor
clc
xor
aad
dec
cmpsl
jp
mov
cmpsb
test
arpl
fwait
and
xchg
loop
and
in
into
mov
sub
pop
shlb
sahf
add
ret
xlat
push
and
loopne
jne
lods
mov
jle
cmp
xor
enter
in
je
adc
sbb
inc
test
cmc
ficoml
or
std
stc
xor
into
or
mov
xchg
cmp
enter
add
filds
sbb
cmp
jg
sbb
cmp
imul
inc
imul
pop
ljmp
cmp
rclb
ja
les
rcl
lahf
stos
fs
in
fsubrp
sarl
ja
cli
sbb
mov
adc
daa
pop
fucomp
pop
pop
xlat
adc
mov
pop
pop
les
inc
and
jl
dec
lds
and
push
dec
shl
adc
rclb
dec
jecxz
daa
cltd
xor
lea
int
push
sub
test
and
jns
imul
jp
mov
in
jmp
xor
jae
xchg
dec
mov
or
lret
cmp
mov
test
cmpsl
repz
push
add
push
push
or
gs
daa
jb
fidivs
fwait
and
sub
cmp
mov
mov
scas
ss
pop
int3
and
scas
mov
and
cltd
test
lods
enter
sbb
sahf
adc
dec
addr16
cltd
popf
mov
stos
push
lock
add
or
jl
xor
xchg
mov
jecxz
std
orb
je
adc
xor
push
loope
ss
pushf
cmp
mov
sbb
xor
out
and
loope
frstor
mov
inc
test
imul
pop
repz
popa
shrl
scas
jge
repz
jbe
push
mov
adcl
and
out
sysret
jmp
adc
or
mov
push
cs
std
inc
std
pusha
loope
scas
cmc
sti
orb
repnz
xor
lcall
shlb
shrb
or
xor
fsqrt
adc
jmp
movsl
inc
dec
gs
xchg
sub
mov
jb
dec
and
jnp
ljmp
xor
and
rorl
pop
mov
imul
mov
stos
sub
cmp
ljmp
imul
or
add
dec
dec
dec
data16
sti
xor
pop
shrl
mov
aam
out
into
push
mov
inc
ja
pop
movl
mov
iret
leave
jne
sarb
push
lods
pushf
mov
adc
fimull
sbb
call
xor
jg
stos
in
jecxz
xchg
mov
shll
cld
or
xchg
in
pop
mov
inc
xchg
insl
test
and
add
sbb
mov
add
mov
int3
and
sahf
push
push
pop
push
stos
bound
xor
into
push
push
jns
push
pop
or
cmpb
adc
lods
push
int3
andl
cmp
adc
leave
je
roll
sub
pop
dec
mov
and
sarb
arpl
fs
loopne
push
jne
sub
mov
mov
clc
adc
aam
push
dec
popf
sbb
out
out
adc
mov
jb
cmp
dec
imul
mov
test
jecxz
push
xchg
call
leave
add
rorb
mov
and
mov
adc
or
repz
loopne
popf
in
add
das
iret
shll
sub
cli
inc
movsl
rorb
test
pop
pop
ss
mov
cltd
mov
ja
faddp
outsb
fwait
popa
rol
scas
addr16
stc
mov
in
es
adcl
loope
sub
or
loop
jo
mov
lds
pop
enter
adc
or
add
addb
add
das
js
sub
or
iret
test
jae
jno
push
fisttps
hlt
mov
testl
adc
or
movsl
insb
xor
add
jmp
xor
pop
add
mov
mov
inc
sub
push
mov
insb
js
es
popa
adc
mov
lods
out
test
in
icebp
dec
or
rcrb
mov
and
mov
add
daa
lret
or
daa
ret
sub
stos
xchg
sahf
mov
dec
sub
push
incl
jbe
andl
push
push
test
push
pushf
xchg
jg
mov
outsb
jbe
mov
adc
pop
hlt
jns
cs
push
popa
popa
or
scas
shrl
sbb
outsb
les
ret
or
sub
dec
fcom
rcll
mov
into
loopne
cli
js
mov
out
and
hlt
push
mov
xor
fwait
pop
adc
add
cld
pusha
ljmp
or
in
lds
ds
cli
push
and
inc
dec
or
out
jge
and
shl
cmp
andl
mov
xor
xchg
xchg
jnp
aaa
cmp
in
lcall
leave
in
xor
lds
call
ret
mov
ficomps
dec
jae
xchg
inc
daa
or
inc
pop
adc
in
dec
pop
loopne
push
mov
jb
ret
and
stc
in
sahf
cmp
ret
imul
add
or
movsl
jle
sbb
add
sbb
lahf
lds
mov
mov
fldt
xchg
dec
ja
add
or
fwait
shll
xchg
adc
push
xchg
inc
iret
bound
ret
mov
jnp
outsl
inc
push
push
xchg
or
out
clc
aas
outsl
cwtl
dec
outsb
mov
ss
or
xor
scas
out
cwtl
jecxz
add
jp
pop
dec
repz
in
cmp
and
mov
cmp
sub
sahf
cmpsl
fndisi(8087
jb
out
leave
jae
mov
push
cmc
test
test
lret
aaa
cwtl
andl
pop
ret
outsl
loopne
imul
pop
int
pop
insl
cmp
lcall
popl
out
cmp
mov
dec
and
adc
sub
les
inc
push
les
mov
dec
dec
mov
jp
mov
sub
cwtl
subl
and
gs
insl
mov
cmp
mov
cmp
or
or
imul
pop
add
imulb
shll
dec
lea
xor
mov
or
into
inc
push
fbld
push
and
sub
jo
adc
enter
rorl
mov
and
cmc
mov
sub
xchg
mov
pop
js
in
adc
add
xor
sbb
f2xm1
inc
roll
push
call
and
push
lods
iret
test
xor
jne
jnp
daa
rcr
sbb
rep
adc
push
sbb
or
or
xchg
sbb
jnp
in
and
adc
sub
addr16
xchg
aad
arpl
xor
js
lods
insb
push
in
xchg
sub
mov
sub
adc
lcall
add
dec
iret
xorb
notl
add
sbb
out
push
aad
xchg
jg
imul
adc
gs
out
sbb
xchg
add
mov
mov
testb
adc
cltd
push
cmp
outsl
lcall
je
sbb
push
add
xchg
fstps
inc
scas
pop
cwtl
lret
mov
pop
sbb
scas
lea
add
xchg
push
add
inc
int3
call
xlat
jo
popf
pusha
idivl
negb
mov
pushf
and
popf
ret
popa
mov
lea
cli
cmp
cmp
xchg
pop
divb
sub
leave
push
xchg
jnp
rcrb
lea
in
push
movsl
add
cmp
into
push
jge
push
divb
into
andb
mov
bound
xor
aas
push
cmpsb
jnp
push
in
fwait
ds
xorl
push
pop
mov
ret
sbb
loope
inc
adc
mov
jb
pop
dec
pop
sbb
adc
inc
xchg
xchg
or
cli
out
jg
inc
cs
in
es
lret
jl
mov
and
cmp
mov
int
sbb
cmpsl
or
mov
shll
xlat
push
sbb
inc
jb
cmp
add
lret
stos
je
dec
clc
xchg
sbb
adc
mov
mov
sahf
testl
test
inc
fsubl
ret
outsl
movsl
hlt
imul
or
and
and
lods
mov
fwait
sub
dec
aam
in
adc
and
lds
call
sbb
adc
movsb
pop
xor
outsl
out
ja
jbe
adc
sub
in
mov
jg
sub
mov
mov
push
mov
and
mov
inc
mov
mov
pop
movsl
jbe
xchg
jp
ljmp
lds
and
mov
add
and
frstor
into
pop
jecxz
mov
lahf
adc
mov
jl
and
ror
daa
lahf
sbb
pushf
or
icebp
adc
jge
cmp
cwtl
out
jle
pop
xor
mov
ficoml
push
inc
adcb
pop
outsb
push
push
mov
into
mov
call
sbb
xor
and
out
xor
mov
xor
mov
repz
je
pop
adc
jne
cld
fs
in
loope
in
pop
sub
mov
or
adc
out
out
push
pop
sub
add
lret
in
ret
jnp
pushf
push
xor
and
mov
stos
rolb
and
jp
popa
mov
pop
pop
loopne
xor
mov
stc
mov
mov
ficoml
cmp
std
and
adc
pop
push
xchg
mov
dec
adc
pop
push
out
addb
adcb
cmp
scas
in
add
stos
xchg
dec
test
xchg
add
inc
pop
sub
icebp
or
clc
les
jl
push
add
or
sbb
lods
imul
sbb
jecxz
repz
pop
mov
cmp
sbb
jge
repz
test
inc
jg
push
jo
pop
jle
ret
jns
fiaddl
test
push
sbb
and
sbb
xchg
cmp
insl
cmc
push
mov
push
jne
push
fmuls
mov
lret
xchg
xchg
icebp
or
inc
mov
inc
movsb
notb
push
sbb
mov
push
fcompl
mov
cmp
mov
enter
ds
jbe
sub
push
clc
mov
in
call
sbb
sbb
lahf
push
pop
movsb
xchg
jl
push
jp
pop
lds
popa
mov
and
hlt
mov
add
enter
jle
fbstp
int3
inc
shrl
test
pop
inc
ljmp
imul
stos
movsb
incb
cmp
cmp
or
jns
dec
fstpl
mov
dec
cli
jle
jge
ret
dec
test
pop
cld
cmpsb
sub
stc
add
out
jns
jnp
ret
ss
add
push
xor
add
or
xor
xchg
popa
fs
xorl
adc
or
dec
or
mov
push
lock
pop
jl
mov
or
dec
fsub
and
insb
lret
mov
lcall
in
in
push
scas
sbb
pop
jne
push
adc
outsl
cmp
inc
fs
cmpsl
jp
out
push
fstps
sbb
nop
mov
mov
add
stos
fcoms
sub
pop
xchg
inc
adc
mov
lret
xchg
sub
je
xchg
les
sbb
sbb
mov
fsubrs
sti
lret
aam
mov
push
mov
lcall
sub
and
push
adcb
hlt
cmp
aam
pushf
stos
sub
addr16
jns
in
pop
lds
inc
or
or
loope
pop
inc
insb
cmc
addb
dec
mov
loope
ret
insb
incl
insb
scas
fmull
xchg
push
push
rorl
sub
rolb
push
jns
and
mov
mov
xchg
ljmp
mov
gs
cmp
lahf
xor
jp
icebp
xlat
loop
xchg
lcall
or
enter
sub
inc
xchg
jmp
data16
dec
mov
std
pop
sub
lea
mov
mov
jnp
inc
push
ror
pop
sahf
data16
pop
mov
xchg
ja
and
adc
add
add
aad
call
jns
mov
out
test
push
jecxz
out
mov
adc
push
inc
add
push
incl
xchg
sti
xchg
mov
adc
push
pop
imul
sbb
arpl
lret
or
mov
jae
arpl
inc
xor
fimuls
iret
dec
aad
int
out
sbb
arpl
mov
xchg
and
or
cmpsl
xchg
ljmp
and
lods
jl
and
inc
and
cmp
int3
xlat
insb
hlt
xchg
clc
push
xor
neg
call
adc
aam
inc
shrb
fst
in
mov
xchg
aam
out
or
push
push
add
rol
xchg
stos
sbb
movsl
iret
sbb
test
cmc
pushf
and
xchg
dec
lods
mov
xchg
sub
add
out
jns
out
jo
sub
mov
adc
or
add
add
imul
or
xor
jp
jge
and
jmp
ret
jmp
in
arpl
loop
mov
jno
xchg
les
xchg
inc
imul
adc
psrlw
sbb
mov
push
dec
mov
psubsb
push
stos
insl
aas
push
mov
mov
cltd
les
aaa
pop
mov
call
cltd
mov
repnz
mov
jbe
cld
mov
hlt
int
add
sar
insb
dec
dec
adc
xchg
or
out
cmp
add
ja
mov
jp
xor
ljmp
or
in
push
sbb
xor
xchg
xor
out
jne
lods
adcl
scas
dec
mov
daa
and
dec
mov
push
icebp
dec
fldcw
and
in
push
or
movsb
data16
adc
xchg
adc
mov
addb
cmp
or
sbb
xchg
push
lcall
and
dec
lahf
out
in
popa
mov
xorl
roll
fwait
jb
sbb
mov
fisubl
ret
jae
or
movsb
ljmp
xor
adc
mov
in
sub
aad
int3
and
add
cwtl
sahf
repnz
and
mov
mov
mov
mov
mov
xchg
sub
jb
cltd
push
mov
outsb
add
dec
hlt
inc
lds
mov
inc
dec
or
mov
rcrl
ljmp
sbb
ret
sbb
mov
das
out
lea
cmc
lods
addr16
cmp
icebp
fildll
pop
mulb
mov
cmpsb
fldcw
dec
cmp
jle
shrl
mov
fsubs
cmp
mov
dec
aas
in
add
inc
nop
cmpl
fcompl
test
shll
jl
imul
rcrb
and
add
mov
popf
push
outsb
testl
loopew
std
sbb
outsl
inc
jnp
mov
orb
insb
iret
pop
dec
je
or
add
or
je
in
mov
jecxz
dec
fldenv
xchg
pop
add
imul
inc
mov
jl
stc
push
out
loopne
adc
roll
fstps
scas
out
shlb
jb
loope
test
std
pop
dec
or
pop
mov
mov
in
add
xor
les
mov
cmp
jecxz
or
out
mov
sarb
adc
mov
dec
insl
loop
push
mov
sar
push
jl
cmp
dec
cmp
int
ljmp
pop
pop
daa
jg
lock
jmp
mov
adc
pop
data16
aaa
icebp
pop
fisubrs
push
int3
sub
mov
mov
cmp
add
xchg
sbb
or
adc
sbb
adc
sub
les
jg
inc
aam
mov
rcll
sub
mov
sarb
cmc
fdivrl
test
jb
fldcw
mov
inc
adc
movb
xor
je
mov
ds
pop
cmp
sarl
lret
jb
cld
std
dec
sbb
sub
ss
push
pushf
es
and
imul
push
insb
arpl
xchg
push
dec
sarb
out
dec
imul
xor
mov
mov
sub
push
jge
subb
rcrl
jbe
lods
jo
pop
xchg
ljmp
out
adc
pop
daa
mov
xchg
lds
fisubrs
push
mov
inc
shlb
xor
popa
lock
sbb
out
aas
inc
into
lret
stos
xor
into
fs
nop
jle
orb
dec
out
iret
ret
out
dec
xorb
jns
lcall
notb
xchg
andb
inc
pop
or
add
or
punpcklwd
pop
xlat
fldl
mov
inc
ljmp
nop
sbb
mov
sarb
mov
out
int3
jle
pop
test
aam
jo
inc
cs
jge
add
xor
test
jae
adc
arpl
push
dec
cmp
popf
ret
aaa
and
push
insl
arpl
sarl
adc
fwait
int
dec
xor
lods
add
xchg
in
pop
fcmovnb
mov
adc
fnstcw
xchg
xor
jns
push
mov
mov
xchg
aad
mov
xor
jp
aad
jae
pop
pusha
mov
xchg
mov
clc
loope
aaa
mov
lret
sahf
loop
add
dec
jnp
adc
rcl
shll
jne
and
add
and
jmp
out
test
arpl
fs
fucom
xchg
mov
xor
mov
popa
jle
sub
cltd
push
outsb
push
nop
dec
stos
scas
inc
cmp
dec
and
and
pop
cs
lcall
mov
rcll
sub
incb
xor
sarl
xor
and
push
fstpl
adc
push
rcrl
mov
dec
lea
or
scas
and
mov
mov
mov
mov
cmpsl
cmp
sbb
dec
jno
mov
add
popf
cmp
add
ds
loop
jne
idivb
addr16
ds
jne
sub
add
inc
lds
push
mov
push
mov
int
scas
jle
pop
bound
nop
xchg
dec
loop
pop
mov
pop
ljmp
jecxz
xor
push
and
jne
jmp
mov
mov
mov
pop
add
adc
mov
outsb
popf
popa
in
push
pusha
pop
inc
mov
or
loopne
aas
outsb
pop
das
mov
pusha
mov
sbb
fisttps
dec
clc
je
sub
sbb
sub
cmp
das
cltd
pop
pop
lret
leave
into
cmp
ljmp
sbb
jb
hlt
fmuls
lahf
fsts
ret
pop
dec
nop
adc
pop
sub
js
cmp
adc
imul
test
add
or
inc
jp
mov
pop
and
inc
gs
xor
pop
sbb
mov
mov
loope
loope
jp
jnp
cli
xor
pop
sub
sbb
dec
fimull
pusha
lods
in
sbb
testb
add
push
jb
sub
push
sbb
movsl
or
mov
xlat
and
mov
imull
xlat
fimuls
xchg
or
sub
sub
insb
lret
add
shrb
test
jge
pop
cs
cmpb
fs
es
lea
mov
mov
dec
lret
jo
lahf
mov
xor
push
aas
sbb
cmp
test
inc
lock
mov
pop
mov
sbb
inc
cs
adc
lret
lret
clc
arpl
test
ss
xor
push
std
rcrl
imul
xor
adc
loopne
adc
dec
cwtl
movsl
inc
in
mov
xchg
shl
test
test
pop
and
mov
jnp
sub
xor
jno
add
or
and
mov
repz
cwtl
pop
lcall
mov
gs
call
push
cld
mov
je
rep
ljmp
or
dec
cmp
inc
add
or
pushf
cmp
jp
adc
mov
shll
lahf
aam
daa
pop
mov
pop
and
icebp
xchg
sub
imul
adc
add
mov
into
insl
jle
shrl
imul
mov
push
and
adc
jae
ret
orb
fistpl
lret
inc
popa
xchg
loop
xchg
js
jne,pt
fcoms
mov
cmp
pop
mov
pop
js
mov
stos
clc
in
insl
frstor
ljmp
imul
arpl
int
or
mov
pop
jle
mov
push
pop
out
idiv
sahf
iret
add
push
lods
jbe
movsl
fbstp
fldt
xor
stc
xor
pop
imul
stos
push
push
insl
or
xchg
add
call
xor
fwait
mov
cmp
lock
pop
mov
lock
jmp
jns
pusha
pop
cmp
aaa
movsb
push
mov
mov
cmp
popf
insl
daa
xchg
mov
cmp
xchg
xchg
mov
jp
pusha
nop
push
imul
sbb
push
push
sub
add
mov
cmpsb
rolb
orl
dec
push
mov
mov
idivb
push
pop
pushf
test
in
pop
imul
and
lahf
xchg
sbb
loopne
sub
add
ds
adc
cmp
pop
sti
xchg
mov
push
xchg
mov
vpmacsdqh
fnclex
xchg
and
jae
mov
jne,pn
cwtl
lret
insl
cmp
sub
leave
js
call
xor
lea
leave
adc
test
or
or
cmc
mov
out
cmc
fldcw
cmp
sbb
inc
adc
fiaddl
sub
jmp
notl
pcmpgtb
and
or
lret
shr
je
jl
dec
fistpll
das
xchg
lock
cmp
repz
scas
shrb
dec
pop
sbb
pop
pop
loope
shrl
pop
lds
pop
in
ficoms
mov
test
sub
mov
lods
outsl
jae
rol
sbb
dec
cmp
movsl
sarb
cld
mov
jg
daa
push
push
aas
adc
mov
xor
dec
push
shlb
adc
jge
fs
mov
in
and
cmp
aam
jmp
out
dec
push
lods
jl
inc
sub
into
mov
add
int3
test
dec
jle
movsl
out
fdivrl
inc
adc
lcall
fildl
inc
loop
jmp
in
sbb
mov
repnz
fiaddl
jnp
fidivrl
mov
cltd
cltd
xchg
das
addr16
inc
test
add
mov
ds
add
fmull
inc
dec
ja
xchg
cmp
dec
outsl
fdivrl
dec
add
mov
shll
enter
aad
shlb
xor
rcll
and
cltd
add
cmp
sub
pop
dec
and
push
repz
or
hlt
aam
dec
aas
popf
imul
inc
adc
stc
or
xchg
daa
xchg
xor
mov
addr16
mov
add
in
ret
ret
test
and
mov
dec
inc
cltd
repz
out
pop
push
and
sbb
in
add
repnz
test
xlat
fucom
dec
add
add
push
xchg
xchg
push
inc
jl
leave
push
push
adc
fstpt
jne
ror
lahf
sbb
push
sbb
and
mov
xlat
mull
add
sub
pop
push
cmp
and
and
mov
dec
cmp
movsl
xor
push
flds
gs
sub
lret
fdiv
leave
inc
je
lods
cmp
jl
cltd
shlb
sbb
jmp
into
push
out
stc
mov
push
arpl
cmc
test
push
in
push
add
sub
jno
xchg
test
hlt
movsl
lahf
cmp
iret
mov
and
ja
ljmp
nop
or
dec
inc
cmp
addr16
insl
mov
adc
pop
cwtl
sbb
dec
cmp
clc
push
sub
repz
das
jp
sub
out
insl
jno
add
test
pop
jge
stc
call
roll
fnsave
mov
inc
stc
cmpsb
lret
xchg
mov
inc
and
frstor
pusha
push
jo
fucomi
fdiv
aam
outsl
pop
loope
mov
xor
xchg
iret
xor
leave
cmp
in
xor
stc
cld
rcr
inc
ja
jge
cmp
mov
jg
imul
inc
out
jg
cmp
fbld
mov
mov
adc
mov
xor
mov
mov
jmp
incb
loopne
aad
xchg
cmovo
outsb
pushf
or
sti
sub
jnp
in
pop
mov
xchg
dec
xchg
xchg
insl
mov
mov
sub
cmp
xchg
addl
adc
mov
dec
cmpb
fnstcw
das
sarb
cmp
cs
lods
mov
jg
in
popa
pop
pushf
das
enter
ja
inc
jmp
mov
rcll
sarl
rclb
pop
xor
inc
xor
subb
stos
ss
inc
mov
dec
mov
add
lds
in
push
int
xor
jnp
dec
xchg
addb
sub
xlat
stc
imul
jge
mov
inc
xor
xchg
xchg
sbb
call
push
adcb
or
shrl
cmpsb
pop
lods
mov
mov
fs
mov
xor
les
xor
dec
scas
mov
adc
shlb
sbb
vmovsd
push
lret
jns
int
test
sbb
mov
xor
out
nop
push
and
into
jb
mov
cmc
movsl
outsl
mov
sub
mov
mov
mov
push
les
add
mov
cpuid
push
and
clc
test
dec
inc
mov
sub
fiadds
in
cmp
add
je
sbbb
adc
sbb
sti
adc
pop
push
dec
lds
jp
lcall
xlat
dec
insl
inc
movsl
push
outsb
stc
lock
repnz
nop
ret
lret
push
and
dec
dec
in
cmp
out
inc
fidivl
clc
mov
jae
cwtl
pop
xchg
ret
mov
out
popa
in
arpl
cld
pop
dec
clc
fisubrs
mov
fadds
adc
sbb
ret
sbbl
xor
bound
mov
roll
ret
jge
mov
inc
stc
bnd
into
jl
mov
mov
lret
cltd
shlb
mov
jb
jge
out
je
out
sub
sbb
adc
dec
xor
dec
and
add
mov
and
pop
pop
or
ret
stos
xchg
bound
or
movsl
inc
or
stos
out
mov
leave
cmpb
lods
ljmp
sbb
loopne
ficompl
aam
fld
sbb
fisubl
ret
pop
mov
pop
mov
in
cmp
dec
and
cmpsb
int
insb
in
sub
add
mov
dec
daa
cmc
int3
xor
int3
cwtl
jns
push
mov
dec
and
cmp
mov
notb
lea
cmc
setl
mov
divl
lahf
sub
sub
dec
imul
push
fidivl
cmp
movl
sub
add
lret
xor
inc
dec
fisubl
mov
or
out
jns
xor
or
in
xor
pop
xor
mov
mov
sbbl
jmp
xchg
in
scas
mov
divl
lahf
cmp
add
pusha
sub
repz
or
dec
pop
dec
cmpsb
loope
addl
jae
jle
arpl
xchg
popf
push
sbb
mov
push
add
add
or
xor
push
test
test
sub
lea
or
scas
imul
and
mov
sbb
sbb
prefetchw
or
je
add
sarl
jne
xchg
andl
push
sbb
mov
xor
cltd
xlat
pusha
aam
xor
jmp
adc
jl
add
lret
or
lret
sbb
sbb
jmp
lahf
jg
or
int3
out
ret
popf
shlb
nop
inc
add
and
imul
rcl
xlat
jbe
icebp
inc
popf
xchg
mov
and
jbe
inc
rcrl
or
pop
arpl
addr16
add
lcall
pop
dec
ret
xchg
test
stc
push
xchg
dec
add
cmc
push
int
scas
mov
pop
or
fcomps
pop
xor
lcall
imul
sti
mov
adc
push
jmp
dec
in
xor
imull
sbb
push
fwait
sti
std
jle
ror
and
idivb
aas
stos
iret
call
hlt
in
repz
mov
mov
xlat
sbb
ljmp
scas
mov
punpckhdq
adc
add
popa
add
dec
imul
xchg
push
cmp
push
popa
mov
cmpb
adcl
adc
aad
movsb
ret
js
fists
movsb
or
outsl
sub
gs
xlat
addr16
loop
mov
inc
sub
cli
insb
push
mov
sub
xor
gs
stc
sub
xor
add
fcmovnbe
bound
pusha
add
movsb
sti
xchg
mov
lods
pushf
push
iret
inc
aad
in
cwtl
fldt
inc
das
daa
loopne
aam
mov
subb
jle
arpl
imul
cwtl
mov
sub
push
jmp
test
loopne
mov
add
jp
pop
jl
loope
push
cmpsl
push
jle
ret
sbb
xor
aaa
icebp
enter
dec
push
cmp
mov
stos
xor
insl
out
loope
add
mov
push
sub
sbb
cmpsb
and
lret
or
jge
inc
xchg
mov
mov
movsb
xor
mov
add
ficomps
pop
add
xchg
fcmove
adc
xor
sub
dec
mov
push
fistps
pop
pop
popf
cmc
es
or
sub
push
sbb
je
imul
jo
xor
fsub
movsb
lret
and
stos
jnp
xorb
jne
jmp
dec
or
push
mov
adc
xchg
mov
lret
push
mov
push
pop
mov
pop
in
xchg
add
lods
repnz
dec
scas
pop
dec
arpl
rcll
and
pusha
add
divl
enter
push
shll
cltd
out
cld
fmuls
mov
mov
test
dec
mov
xchg
push
pop
js
inc
push
jo
fwait
sbb
mov
adc
aas
mov
enter
fiaddl
push
aad
lods
roll
add
leave
lcall
sbb
cli
xchg
xchg
popa
faddp
jb
add
addr16
adc
fistpl
loope
and
lea
add
outsb
addr16
or
mov
pop
test
ror
xchg
mov
in
xchg
dec
jl
das
int3
fwait
push
loop
subl
xchg
mov
cmp
sbb
xchg
push
jl
insl
xchg
mov
cltd
mov
mov
fsubl
adcb
das
push
fistps
adc
clc
xor
sub
mov
movsb
leave
int3
cmp
and
daa
or
ja
lret
dec
insl
shll
cmpsl
out
xchg
clc
inc
jns
mov
scas
and
scas
lods
ljmp
mov
jmp
and
mov
in
daa
xchg
mov
xor
mov
mov
adc
js
lret
jne
pop
xchg
cmp
movsl
sbb
pop
mov
adcl
pop
bnd
cli
jnp
jmp
es
lcall
cmp
mov
mov
mov
cwtl
sub
loopne
lock
add
jbe
xlat
mov
mov
jno
mov
xchg
mov
test
mov
stos
inc
push
scas
xchg
out
ljmp
outsb
pop
inc
int3
mov
and
xorl
loopne
mov
adc
loop
inc
mov
repz
mov
rcrb
rorb
pop
int3
jne
mov
xchg
stos
cs
inc
out
in
insb
lea
xchg
std
adc
push
jle
mov
sbb
push
loope
cmp
and
sbb
pop
es
adc
lcall
pushf
lcall
int
test
mov
mov
pop
mov
fidivs
jae
sub
inc
cli
out
test
xor
xchg
push
or
push
movq
and
and
sub
xor
ljmp
mov
repnz
sbb
sub
mov
popf
fs
sbb
push
sub
mov
xchg
iret
pop
mov
adc
sahf
xor
loop
mov
jae
push
push
call
xlat
pop
rcr
dec
and
and
inc
dec
cld
lods
bound
movsl
adc
xlat
das
notl
push
cmp
outsl
repnz
jns
sub
arpl
sbb
int3
mov
fsubp
pop
and
xlat
xor
clc
out
jl
push
jnp
jno
mov
xchg
out
and
and
lods
ret
jb
or
sbb
or
int
mov
push
sub
and
scas
adc
add
in
cli
mov
pop
cld
fs
jne
enter
cmp
test
sbb
std
pop
fwait
sti
test
push
fwait
ss
xchg
inc
adc
inc
decb
mov
cld
cmp
add
dec
xchg
push
in
sub
stos
adc
cmp
pop
jne
fs
jae
pusha
xchg
or
jge
mov
inc
in
rorl
mov
fsts
pop
jo
sub
mov
pop
lret
stc
cmc
sub
cwtl
inc
orb
iret
mov
cwtl
adc
scas
test
mov
mov
xchg
inc
jge
push
sbb
scas
pop
xor
inc
xchg
roll
int
call
int
xor
jns
add
aaa
adc
cmp
add
movsl
sub
mov
sbb
loop
add
or
add
mov
xchg
and
std
mov
jb
or
inc
das
icebp
mov
inc
xchg
fistl
push
or
test
fisubrs
add
cmp
rolb
mov
add
xchg
sbb
leave
loope
into
cmc
or
in
sti
mov
mov
pop
in
jecxz
cmpsl
inc
add
scas
add
enter
rolb
pop
sbb
add
dec
lds
fsub
lods
jns
mov
inc
dec
sub
push
xor
xchg
call
fwait
mov
loop
daa
nop
aad
pop
repz
je
js
lds
mov
fwait
pop
lahf
daa
dec
cltd
pop
sub
cmp
movsl
mov
inc
mov
das
xor
stc
cmp
lcall
pop
lret
cltd
bswap
xchg
jo
repnz
pop
inc
mov
sahf
jmp
mov
jp
xor
push
pop
call
pop
mov
lds
rorb
cmp
mov
jecxz
inc
pop
mov
iret
out
lock
outsb
add
stos
jp
enter
fwait
jg
aad
add
lock
and
xchg
stos
inc
dec
sub
cmp
loop
inc
fwait
mov
leave
js
sub
xchg
testl
pop
jne
rorl
or
fisubrs
inc
pop
sahf
ret
and
bound
mov
sbb
sub
mov
inc
and
js
inc
or
lcall
ret
jb
bound
jns
stos
or
cmp
jbe
jecxz
push
scas
mov
add
and
out
jp
out
aaa
mov
in
mov
inc
pop
fimuls
mov
ret
fs
test
jle
enter
xchg
fsubrs
adc
cmpsl
sub
scas
dec
jmp
xor
sub
loope
clc
aaa
xor
fs
andl
cltd
dec
popf
jmp
mov
orl
mov
xor
popa
and
sub
sub
adc
add
shl
jns
lcall
lret
xchg
pop
or
xor
cmp
and
cmp
inc
xadd
mov
push
stos
lock
jmp
cli
insb
jmp
mov
mov
out
mov
rcl
mov
js
dec
movsb
cld
sub
cmp
sbb
push
mov
mov
dec
mov
cli
mov
xchg
push
fwait
daa
pop
ss
andb
push
xchg
out
pop
test
xor
sti
shlb
loope
xchg
outsl
add
xor
in
das
dec
cltd
and
push
mov
shrl
std
dec
sahf
mov
test
repnz
dec
xchg
xchg
sub
shrb
rclb
cmp
and
mov
sbb
mov
jno
adc
jmp
mov
jbe
fstl
aam
cmp
hlt
cmpl
sub
xor
or
ja
push
cmp
inc
jp
pushf
mov
xorl
pop
mov
xorb
lahf
add
std
or
stos
aad
iret
dec
and
push
ss
lea
rcll
add
lds
push
xor
pop
cmp
scas
or
sbb
insl
push
or
aam
push
inc
jne
mov
xor
inc
sub
pop
xchg
aam
imul
and
xchg
bound
add
mov
imul
jnp
or
clc
scas
imul
add
ja
xor
mov
jg
add
pop
loope
jo
pop
mov
arpl
nop
cmpsl
test
pusha
in
sarb
and
cmpsl
ljmp
adc
test
or
fucom
imul
jnp
out
idivl
in
cmpsb
xchg
mov
xor
jae
or
rorl
mov
cmpsl
sub
popf
inc
mov
pop
fsubrs
int
jmp
xor
sahf
and
and
shlb
pushf
sub
mov
inc
or
aam
mov
rol
and
mov
push
shlb
mov
lcall
push
bound
sbb
sbb
int3
jns
sub
aas
mov
or
cmp
ljmp
dec
jp
xchg
scas
outsb
lds
xchg
in
sub
cltd
out
sbbl
aam
or
das
adc
mov
jg
mov
aad
jae
loop
jge
dec
fcmovne
and
cs
inc
xor
movsb
jns
ret
mov
xchg
outsl
iret
inc
pop
cmp
push
mov
movsb
cld
in
push
push
in
cmp
xchg
xchg
xchg
bound
xchg
pop
test
push
push
push
or
jae
loope
imulb
mov
jmp
cmp
xchg
aad
pop
fisubrl
xlat
icebp
insb
js
notb
or
das
jb
push
insb
loopne
xchg
xor
push
dec
mov
cmp
pop
sbb
sbb
pop
repnz
repnz
add
jns
push
mov
rol
fs
push
int
inc
fisttpl
jno
sbb
fidivl
das
negl
pop
aas
xchg
mov
fbld
aad
push
lea
sub
nop
pop
fdivrs
xor
aad
add
out
call
pop
lcall
movsl
add
test
pop
hlt
mov
mov
jle
in
loope
decl
jbe
pop
lahf
jp
sbb
jae
das
mov
neg
push
mov
pop
out
inc
jle
add
add
and
call
mov
sub
sbb
bound
pop
xchg
jae
cld
xchg
int3
iret
inc
out
jl
dec
sbb
cmp
jno
jge
or
mov
enter
xor
xchg
cmpsl
cs
rcrl
xchg
or
dec
fbld
push
pop
shrb
dec
mov
icebp
loope
dec
cmc
jmp
xorl
adc
push
and
cmp
lahf
lcall
popa
jp
leave
cmp
add
stos
cmp
push
jbe
xchg
movsl
push
cmp
scas
mov
and
mov
mov
mov
cmp
jne
rcl
adc
push
inc
out
jmp
mov
jae
sub
jb
mov
jmp
hlt
mov
push
mov
add
jb
mov
push
pusha
clc
lea
ss
daa
mov
cmp
inc
ret
and
lods
jmp
hlt
and
cwtl
mov
pop
cmp
adc
cld
add
insb
mov
and
xor
inc
repnz
scas
dec
jne
pop
sbb
popa
mov
popl
or
pop
pop
dec
mov
add
cmpb
jae
popa
mov
inc
insb
cltd
mov
cli
sbb
loope
dec
mov
mov
cmp
push
in
ss
inc
and
les
mov
pop
pop
sbb
push
ficomps
mov
mull
out
mov
jnp
pop
sti
movb
jmp
mull
add
adc
inc
adc
jmp
pop
xlat
and
dec
stc
add
push
shl
adc
dec
repnz
imul
push
jg
inc
mov
in
xchg
lock
imul
ret
cld
mov
jmp
pushf
push
cmpsb
and
pop
sbb
mov
xchg
xor
mov
push
jb
arpl
insl
inc
loopne
call
xor
scas
les
lods
mov
je
aad
adc
movsb
adc
popf
cmp
aas
iret
hlt
mov
jbe
lcall
addr16
pop
insl
imul
add
loopne
outsb
adc
jno
mov
and
mov
and
dec
mov
add
add
shll
enter
pop
pop
dec
dec
sbb
pop
test
mov
flds
in
xchg
mov
scas
push
fidivs
aad
jns
inc
or
mov
popa
inc
jbe
fiaddl
cmp
or
stos
popa
das
add
outsl
mul
inc
pop
cs
cwtl
mov
push
adc
gs
mov
outsl
test
data16
sbb
dec
pop
xor
sarb
jae
stc
or
cmp
push
inc
cmp
push
sub
push
dec
push
iret
out
insl
in
loopne
jnp
sbb
sbb
insl
repz
cmpsl
inc
mov
in
pop
js
xor
js
fs
test
sti
idiv
cmpsb
inc
or
cwtl
cltd
test
mov
push
out
jp
sti
push
xlat
mov
out
in
xchg
jbe
sub
out
inc
xchg
mov
cltd
mov
dec
pop
xor
andnps
pop
pop
cs
sahf
xor
pop
imul
fidivs
cld
nop
icebp
sbb
sarb
dec
dec
test
cwtl
xorl
push
cs
push
mov
lods
fdivrs
imul
test
mov
incb
dec
jae
push
call
ss
push
in
mov
sbb
adc
cmpsb
in
mov
jl
pop
mov
aaa
dec
mov
xor
and
mov
popa
sub
test
enter
sub
mov
scas
les
repz
mov
pop
push
and
push
mov
scas
xchg
icebp
mov
iret
cld
inc
fistpl
jno
pop
std
dec
cmp
push
dec
add
sub
mov
push
sbb
push
fbld
sbb
dec
add
jo
sbb
insb
lock
loop
lret
fmull
and
jp
add
in
es
dec
data16
jbe
xchg
movsb
push
mov
mov
fwait
loopne
addr16
pop
mov
clc
ficompl
sbb
imulb
mov
scas
pop
into
fstl
mov
jl
inc
je
in
sbb
push
jl
dec
int3
jbe
push
shr
stos
and
cmp
fwait
inc
mov
cmp
pop
aas
std
sbb
int
push
sbb
xlat
stc
sub
orl
mov
mov
xchg
call
cli
mov
xor
xor
cld
mov
movsb
pop
inc
mov
mov
xchg
repnz
cmpsl
mov
dec
mov
add
lds
sbb
subl
das
out
testl
cmp
mov
inc
inc
mov
roll
lods
sbb
fstps
sbbb
inc
push
pusha
movb
in
ds
jae
adc
mov
sbb
add
insb
test
inc
mov
pop
rolb
outsl
pop
inc
pop
sbb
repz
add
xchg
stos
mov
mov
popf
fucomip
aam
dec
pop
adc
or
inc
pop
sbb
jo
ffreep
test
test
mov
mov
mov
stc
in
out
es
mov
push
fnstenv
addr16
daa
dec
or
outsl
adc
insl
inc
mov
rcrb
mov
andb
pcmpgtw
test
sbb
dec
cmp
call
mov
mov
insl
or
dec
gs
jp
mov
lea
jns
insl
test
in
dec
aas
into
xor
sbb
aaa
repnz
outsb
cmpxchg
mov
gs
adc
loop
mov
add
or
jl
out
cmp
adc
fadd
aas
jns
xchg
or
cmp
leave
adc
out
stos
rcl
movsl
xchg
stos
and
leave
fldl
sbb
push
int
xor
dec
mov
jg
fs
into
out
cld
or
xchg
stc
push
push
fldenv
out
stc
pop
jle
imul
or
and
jns
scas
es
jno
dec
sbb
les
mov
jge
int3
xchg
xor
addr16
stc
inc
dec
out
test
outsb
test
or
sbb
jl
mov
and
repz
lea
mov
sub
jno
in
out
gs
cwtl
push
scas
mov
add
lret
pop
cmpsl
push
xor
sub
aam
ficoms
in
int3
pmaddwd
ror
cmc
add
push
adc
dec
pop
popa
lahf
push
sahf
jnp
adc
fldl
aam
sbb
pop
push
shll
add
mov
es
jno
js
lahf
cmp
gs
jns
add
int
jbe
fnstcw
arpl
bound
dec
stos
cmpsb
cmc
outsb
mov
cmp
enter
jmp
jo
push
pop
daa
getsec
pop
mov
mov
and
and
aaa
sar
xchg
hlt
in
lds
add
push
aad
sahf
jbe
in
cmpsb
sub
xchg
inc
push
das
imul
scas
fwait
loope
jo
or
fcoms
in
or
xchg
roll
xchg
loopne
cli
pusha
test
call
dec
adc
fsubs
xchg
push
jb
ficompl
and
mov
cmp
test
xchg
mov
ficoml
push
cmp
mov
dec
lea
insl
enter
aad
fisubrl
sahf
push
mov
out
jl
jge
xlat
sbb
es
cmc
push
and
lcall
test
inc
pop
fs
and
in
das
inc
leave
stc
add
lret
adc
sub
in
inc
push
test
push
pop
push
adc
daa
mov
in
dec
mov
adc
cmp
and
cld
stc
addr16
insb
xchg
rcl
dec
sub
sub
int
shlb
lret
pop
mov
jae
xorl
push
push
ret
outsb
jno
lds
add
lea
xlat
xchg
aam
sbb
sub
mov
int
test
push
scas
jo
sbb
mov
in
insb
pop
sbbb
cmp
push
cmp
je
dec
imul
jo
push
fdivrs
or
cmp
movsb
jge
loopne
xchg
jnp
mov
out
sbb
jo
clc
outsb
out
cmp
push
sbb
dec
xchg
movsl
pop
daa
lret
ficoml
test
lcall
push
mov
das
in
js
and
nop
mov
mov
rcrb
pushf
pop
jbe,pn
icebp
cmpb
adc
das
pushf
in
mov
int
sbbl
mov
mov
jge
ds
mov
push
int3
ret
or
scas
mov
in
pop
repnz
das
xchg
out
pop
cld
or
mov
sub
mov
dec
jae
aam
sbb
mov
fcoms
fcmove
shrl
or
push
filds
test
sahf
fwait
call
mov
data16
les
dec
leave
jnp
movsl
xor
testl
dec
add
and
clc
jb
pop
xor
loop
cmp
sahf
aaa
insl
ljmp
rcrb
mov
pop
loopne
mov
fs
mov
aam
sub
out
sub
xor
xor
test
mov
jbe
mov
pop
out
xchg
outsb
test
out
mov
mov
aam
push
jns
gs
mov
dec
cmp
bound
and
sub
jno
jo
std
push
outsl
sbb
add
out
rcrl
mov
sbb
je
sub
push
inc
pop
movsl
sub
int3
rorl
mov
cmp
jns
cld
and
aaa
inc
or
pusha
xchg
mov
or
pop
dec
sbb
lahf
fcmove
push
jecxz
xorl
insb
iret
lods
mov
stc
and
dec
jmp
jge
out
sti
xor
mov
loop
fs
push
push
mov
mov
adc
pusha
popl
lods
xchg
push
pop
adc
xor
xchg
sub
stos
xchg
or
mov
xlat
pusha
fidivrl
or
shll
mov
fldenv
daa
std
sub
sbb
aaa
fisttps
mov
dec
out
repnz
inc
sbb
out
add
pop
mov
iret
repnz
mov
and
fisubl
xor
stc
lock
aas
xor
mov
push
ficomps
icebp
sarl
xor
stos
lds
adcb
add
inc
stos
gs
repnz
dec
and
das
sbb
cld
out
clc
fstps
dec
pop
push
in
mov
scas
arpl
cmp
sub
in
mov
out
jge
pop
mov
arpl
inc
in
inc
lock
xor
push
and
add
out
sbb
mov
push
ds
int
pop
adc
mov
or
fidivs
or
mov
test
mov
push
jne
inc
sub
sti
test
ljmp
xchg
testb
sub
pop
push
mov
push
push
fs
outsb
scas
mov
test
test
in
addb
addr16
jle
xor
pop
xchg
xchg
aad
or
test
imul
outsb
dec
pop
mov
pop
push
lea
notl
push
adc
hlt
inc
fsub
fs
sbb
sub
mov
popf
push
shll
mov
cmp
mov
es
loope
push
lret
push
stos
rcll
adc
push
fdivrl
xchg
jo
cmp
fidivs
stos
mov
jmp
out
mov
or
sub
add
rcl
lahf
mov
ja
dec
loop
add
mov
sub
pop
ss
imul
data16
je
pop
push
insb
imul
cwtl
xor
inc
sub
pop
movsb
mov
ds
ljmp
xor
mov
xor
sets
cmp
shl
imul
mov
push
or
cs
nop
fstp
xchg
add
ljmp
ret
mov
fldcw
mov
mov
jp
ljmp
mov
adc
dec
cltd
mov
adc
mov
ret
mov
ljmp
xchg
in
fs
cmp
cwtl
or
int3
stc
xchg
je
xorw
mov
fsubs
les
jae
loope
aad
lret
mov
int
fcmovbe
mov
pop
call
das
lock
or
push
incb
arpl
xor
cmpsb
push
jns
shl
cmpsl
fsubrs
leave
mov
jl
mov
lcall
mov
or
lcall
lods
push
jne
fisubl
xchg
or
xor
mov
sub
jmp
xor
dec
inc
ss
cmp
lock
shl
repz
mov
loopne
imul
push
int
test
xor
mov
out
mov
mov
xchg
cli
test
sub
add
jb
mov
ljmp
jmp
imul
push
div
insb
inc
out
mov
lret
arpl
leave
fdivrl
std
hlt
outsb
ret
rol
aas
cmp
push
aam
stos
out
in
dec
test
cwtl
in
stos
or
movl
loop
sbb
xchg
es
mov
outsb
pop
mov
enter
jnp
cwtl
cmpsl
or
arpl
add
cmp
stos
addb
shrl
cmp
mov
fisubrl
test
xchg
inc
test
or
sub
out
popf
pop
jnp
mov
mov
mov
out
sbb
xchg
sbb
daa
enter
mov
cwtl
cmp
mov
and
dec
sub
or
dec
pop
mov
jg
sub
mov
std
push
mov
sub
mov
adc
flds
and
imul
cld
aaa
repnz
inc
daa
sub
mov
sbb
sbb
mov
and
mov
inc
cltd
pop
sar
mov
xchg
adc
pop
addr16
repnz
and
xor
lds
and
mov
add
sbb
jmp
or
stos
loope
push
xchg
cmp
ljmp
sub
xchg
mov
pop
mov
push
in
outsb
in
and
mov
adc
pop
add
sbb
dec
icebp
sub
mov
int
lock
fxch
sahf
sbb
je
lret
lret
iret
pop
scas
push
jmp
popf
imul
ud0
inc
push
xchg
imul
dec
shl
and
stos
pop
cvttps2pi
push
imul
cmp
std
mov
mov
xchg
mov
ljmp
notl
xchg
aaa
pop
sub
cmc
popf
test
popa
sbb
das
dec
mov
dec
ss
xchg
arpl
jne
mov
pop
cld
add
mov
push
dec
je
icebp
sbb
jns
scas
dec
mov
push
cmp
hlt
out
aaa
cmp
sub
in
sbb
dec
in
mov
or
mov
mov
mov
mov
mov
mov
rolb
sbb
mov
pushf
adc
mov
cs
shrd
or
loopne
lea
jle
jne
push
dec
jle
enter
imul
jl
cli
or
repnz
pop
add
xor
push
iret
andb
imul
sbb
inc
sbbl
mov
mov
insl
bound
imul
or
popf
shrb
dec
lcall
bsf
dec
lods
add
mov
imulb
outsl
jnp
push
icebp
xchg
arpl
add
jp
in
sbb
pop
into
mulb
push
mov
xlat
mov
mov
pop
push
xchg
rorl
push
adc
ret
jb
subl
pop
sbb
arpl
aam
out
dec
cmpsl
cmp
imull
stos
sub
data16
jns
pusha
dec
je
cltd
jg
pusha
iret
ss
sbb
rol
test
xchg
xor
adc
cmpsl
cmp
mov
iret
out
cmpsl
decb
or
mov
gs
into
push
rorl
jecxz
sub
mov
std
pop
xchg
push
push
pushf
xchg
in
inc
cltd
cwtl
ja
enter
scas
ds
jecxz
adc
pop
xchg
jle
mov
and
cmp
push
push
sbb
sub
mov
cs
mov
adcb
movb
out
popa
or
fdivrs
adc
pop
xchg
adc
mov
adc
js
mov
and
fsub
arpl
or
push
add
pop
fucom
cwtl
xchg
adc
test
aas
jl
sbb
lds
clc
push
ds
in
rolb
push
xchg
push
add
pop
pop
pop
adc
loope
cs
fwait
int3
mov
add
test
incl
int
mov
push
fbstp
repz
lahf
push
filds
stc
mov
repz
ds
ljmp
out
stos
ret
push
xchg
outsl
inc
movsb
jns
sub
shrb
daa
jnp
mov
xchg
cli
jge
inc
inc
adc
insb
mov
mov
sbb
pop
clc
std
mov
lahf
gs
jmp
icebp
iret
mov
pop
sbb
mov
in
in
pop
xchg
push
add
dec
lock
hlt
int
scas
fimuls
bound
leave
cs
jle
dec
sahf
mov
adc
in
add
cmc
xchg
adc
jb
stos
popa
enter
imul
inc
cmp
mov
cmp
cltd
out
sarb
xchg
jb
inc
dec
cli
xchg
mov
mov
lcall
pop
adc
je
mov
repz
lret
mov
das
sbb
sbb
push
popf
nop
pushf
shlb
int
cmpsb
and
hlt
mov
lods
test
mov
movsl
sbb
mov
pop
push
add
outsl
jne
out
mov
add
outsl
push
inc
sub
dec
nop
push
jne
fcmovb
aam
test
in
js
adc
jle
out
das
jo
cmp
jae
inc
sbb
imul
mov
cltd
pop
sub
inc
add
shlb
mov
mov
sbb
scas
cmp
xchg
leave
pop
test
xchg
pop
lea
push
std
lahf
xchg
ret
push
fstpl
xor
xorb
mov
and
ret
cmp
sbb
pop
lahf
ss
test
xchg
cltd
push
adc
sbb
loope
repnz
movsl
int
xchg
jp
dec
pop
mov
addr16
inc
dec
fbstp
ds
jl
sbb
pop
inc
popa
outsl
add
mov
xor
mov
xchg
enter
or
inc
cmp
incl
fdiv
fstps
jno
inc
xchg
fwait
das
test
xchg
mov
test
stos
mov
cmp
inc
sbb
sub
mov
int3
jp
mov
sub
dec
adc
addl
xchg
shll
sbb
xchg
cmp
test
clc
stos
lret
insl
inc
sahf
inc
push
ret
push
jnp
shl
sub
or
pop
jbe
cmp
add
cmp
out
cmp
sbb
jl
mov
das
add
hlt
pop
jg
push
adc
sub
pop
sub
add
cmp
mov
aad
push
mov
ret
push
jae
shlb
sub
cmp
test
fwait
in
mov
loopne
pop
pop
or
add
popf
push
cmp
out
push
mov
rclb
cmp
lcall
add
lret
dec
insl
dec
sbb
lret
push
lahf
bound
lea
mov
jecxz
add
mov
test
ds
lods
adcb
mov
inc
aas
add
orl
lret
rcll
iret
inc
fidivrl
pop
xor
icebp
pop
inc
daa
jecxz
jbe
xor
or
mov
pop
mov
sub
jecxz
shlb
mov
xor
dec
inc
clc
rcrb
sbb
movsl
stc
and
cmp
and
test
jle
das
pop
fwait
ret
add
scas
jo
popf
xchg
inc
mov
fstl
stos
stos
addb
add
sub
insl
and
inc
jmp
pop
or
sbb
cltd
xchg
push
stos
mov
sbb
push
mov
fistl
popl
scas
mov
addr16
leave
popw
lock
and
jae
or
sbb
adc
popf
or
dec
sbb
xor
cltd
xchg
fsts
pop
or
cltd
je
pop
xor
shll
cmp
push
aaa
lahf
scas
jl
in
ret
adc
fidivs
add
movsb
aaa
mov
mov
sub
repnz
test
mov
fildl
aad
mov
adc
mov
lock
mov
movsb
sub
stos
fwait
loop
js
lock
mov
enter
lret
and
ret
mov
sar
shrl
jl
xor
jbe
mov
dec
call
mov
mov
mov
mov
mov
hlt
insb
fildl
aas
mov
adc
xchg
leave
inc
mov
mov
int3
incl
dec
sub
fsubl
sarb
add
xor
rcll
xchg
xchg
repnz
cs
lock
mov
push
push
sahf
icebp
and
jnp
cmp
cmp
pop
divl
fldcw
negl
test
or
mov
xchg
clc
rorb
xor
in
jecxz
into
mov
mov
sbb
fisttpll
cmc
push
dec
std
mov
push
jbe
mov
xchg
imul
jno
add
sub
inc
addr16
or
mov
lcall
push
sub
daa
cmpsl
lds
call
pop
mov
adc
imul
ja
pushf
js
sub
add
adc
imul
mov
and
mov
xchg
push
inc
fwait
push
sti
jo
adc
or
scas
push
jg
iret
in
cltd
ret
mul
sub
dec
imul
sbb
mov
ja
fiaddl
xchg
sbb
mov
decb
dec
inc
pop
scas
xor
xor
les
les
sub
push
int3
rorl
dec
in
cs
xchg
push
mov
insb
cmpsl
cmp
jbe
addb
sub
add
fisttpl
inc
ljmp
repnz
sub
mov
pop
dec
inc
and
out
pop
mov
mov
xchg
outsl
sbb
push
or
out
cmp
out
in
xorb
cmp
push
mov
pop
mov
pop
mov
push
xchg
xor
in
pop
scas
and
sbbb
jo
les
push
push
movsb
outsl
mov
outsl
dec
arpl
xchg
test
aam
jle
imul
hlt
lods
jo
dec
popf
mov
add
insl
addr16
pop
adc
rclb
leave
cmp
fs
mov
cmp
into
push
popa
mov
sub
out
lods
pop
rcll
mov
shll
mov
lds
fisubl
mov
push
sti
int
cmp
dec
repz
jle
adc
sarb
adc
pop
imul
mov
pop
pusha
push
mulb
mov
leave
ja
imul
and
gs
into
jns
adc
xor
inc
ficompl
push
jae
jg
pop
jl
pusha
orb
jle
scas
rcrl
adc
repz
scas
pop
fstps
xor
sub
rorl
xchg
pusha
sbb
in
push
jb
sbb
pushf
xor
inc
push
sbb
cmp
test
cltd
outsb
scas
xchg
rorl
jmp
mov
iret
es
hlt
push
pop
hlt
mov
sbb
jae
push
pop
jbe
insl
call
dec
mov
daa
sbb
mov
fsubp
popf
jmp
mov
ss
rclb
mov
jbe
mov
adc
mov
out
imul
jo
mov
subb
xchg
push
cmp
push
or
xchg
dec
popf
xlat
sub
incl
cmpsl
mov
cmp
jb
mov
in
push
sub
gs
or
jno
push
test
xchg
scas
in
repnz
sbb
adc
inc
into
test
push
mov
out
cwtl
out
in
sbb
mov
pop
xchg
out
sub
pop
and
dec
aas
inc
pop
and
sub
pop
test
add
cmp
cmpsb
sub
cmp
stc
mov
mov
sub
sbb
adc
enter
test
in
dec
xlat
in
xchg
es
aad
mov
ret
sub
lods
in
sub
popf
aaa
pop
jmp
daa
adc
sarb
push
lock
xchg
push
sarb
lcall
jmp
data16
mov
pinsrw
clc
cmp
sbb
je
mov
popl
or
mov
fdivl
flds
aad
jns
pop
ds
mov
sub
js
lea
add
imul
push
push
enter
aam
add
je
lea
lods
shrb
call
stos
xor
mov
inc
out
sub
push
dec
cmp
repz
iret
xor
stc
out
stc
stos
mov
lock
mov
and
mov
cmc
cmp
adc
lret
lea
pushf
int3
enter
dec
xor
mov
lea
clc
sub
mov
pop
mov
mov
out
stc
mov
push
pop
cmp
mov
fnsave
jmp
xchg
push
push
push
xor
cmpb
push
lea
sbb
lock
adcl
mov
xchg
xchg
jb
add
lret
cld
jg
jo
out
dec
mov
rclb
inc
cmpsl
lds
lock
lock
lret
testl
rclb
fistl
cwtl
sub
push
loopne
popf
xchg
mov
cwtl
xor
mov
pop
or
inc
or
outsb
cmpsb
mov
bound
push
sbb
stos
sarl
pop
dec
push
fisubrs
mov
mov
pop
jmp
into
daa
clc
push
adc
and
cmpsb
xchg
xchg
sbb
aas
iret
fists
and
fldl
cmp
pop
cli
jecxz
scas
add
xchg
add
adc
mov
clc
xchg
aaa
mov
push
shlb
push
push
mov
jle
jb
rorl
out
sbb
ret
lds
fcoms
and
sysexit
test
test
mov
fs
je
inc
pop
xor
mov
push
gs
xchg
aas
push
test
cmpsl
jne
add
stc
xchg
cmc
mov
sbbl
gs
std
inc
mov
je
aad
lock
or
stos
je
add
or
out
xchg
lret
sbb
stos
rorb
sub
pop
push
inc
aam
jnp
mov
scas
xlat
adcl
cmp
mov
stos
or
mov
lcall
int3
fldt
push
push
int
cli
imul
dec
push
xchg
in
cmp
aam
lea
fildl
xor
fs
or
je
imull
shr
push
mov
pop
lods
fcoml
cwtl
outsb
adc
push
mov
pop
xor
mov
add
clc
pop
inc
pop
loopne
sub
jo
cmp
cmp
sahf
aas
addb
inc
add
mov
insb
pop
mov
pop
ret
mov
dec
sub
or
adc
jp
xchg
aad
ljmp
loope
add
rcll
lods
ret
inc
lahf
repnz
lea
mov
in
mov
out
dec
jp
add
mov
push
mov
inc
jle
mov
fidivrs
fsubrl
or
arpl
addr16
add
ljmp
pop
scas
cmp
add
out
test
or
sarb
or
jp
mov
lret
movl
outsb
ljmp
pop
cs
loop
mov
iret
pop
fmul
mov
mov
es
addr16
xor
push
push
push
xor
jecxz
ret
mov
daa
sub
lcall
push
xor
pop
out
or
xchg
push
add
imul
ss
dec
jp
pop
sub
pushf
movsb
or
cmp
adc
xchg
xor
cmpsl
sbb
fidivrs
add
sub
add
pop
push
inc
mov
cmp
dec
inc
popf
cltd
jmp
test
stc
xchg
pop
cs
cld
and
pushl
inc
xchg
or
call
mov
ds
add
dec
movsb
fcoms
arpl
mov
loop
xor
cmpsl
add
clc
push
incl
fcomps
xchg
xchg
pop
ret
sbb
out
jne
and
fsubp
jns
jge,pt
sub
add
mov
jnp
ficomps
faddp
test
pop
fildl
jae
lret
aas
lahf
dec
les
jae
insl
mov
adc
scas
mov
xchg
cmc
outsb
sub
test
fstl
and
xor
in
das
scas
repz
or
sar
cmpsb
icebp
pop
sbb
stos
fcomip
jo
lods
andb
test
int3
add
js
repz
push
hlt
mov
mov
popf
xor
dec
mov
jno
mov
ja
and
mov
pop
out
push
sub
mov
out
cmp
inc
push
data16
insl
outsl
push
hlt
jns
aad
or
das
lock
outsl
jns
ljmp
adc
dec
pop
scas
xor
rcrb
repnz
sub
sbb
scas
cwtl
push
insb
sub
xlat
inc
push
ja
pop
lock
jl
adc
lret
pop
stos
inc
fisubl
setp
lea
inc
xchg
pushf
aaa
rol
rcr
push
insb
mov
mov
cwtl
adc
sub
xchg
fyl2x
scas
rol
inc
or
mov
call
lahf
pop
adc
jbe
movsl
or
push
pop
mov
add
mov
mov
dec
mov
xchg
and
jl
mov
adc
xor
xor
rcr
popf
add
fisubrl
xor
frstpm(287
mov
xor
cmpb
test
jmp
lahf
outsb
or
pop
fsubl
lcall
push
jo
popa
jno
scas
shl
aaa
add
mov
xchg
int3
fidivs
sub
jmp
cs
pop
stos
jecxz
loope
insl
enter
pop
and
pop
pushf
mov
insb
mov
xchg
and
insl
testb
aad
and
pusha
dec
xor
push
sub
mov
jmp
inc
jbe
sub
and
adc
outsl
xor
and
sti
aad
scas
icebp
pop
in
ds
clc
ljmp
add
push
lahf
sarl
scas
fisubrl
add
cmp
xchg
pushf
lret
std
or
scas
and
lods
push
test
cmp
fbld
mov
pop
adcl
lock
jbe
and
dec
cmc
scas
sahf
sbb
dec
cli
jns
stos
xor
jle
dec
lea
xchg
pop
xor
push
xchg
stos
test
xchg
jns
scas
insb
call
mov
es
xlat
les
or
adc
in
xlat
test
mov
jle
pop
xor
ss
pop
and
sbb
push
add
int3
dec
xor
daa
sbb
or
pop
lcall
mov
ds
push
dec
jmp
xchg
sbb
inc
movsl
in
scas
outsb
xchg
sbb
push
xor
jge
xchg
mov
jg
adc
inc
data16
sbb
imul
fs
bound
or
cmpsb
shll
mov
mov
cmc
das
movsl
popl
mov
and
and
mov
enter
aaa
addr16
es
sub
add
imul
icebp
push
dec
pusha
xchg
jmp
scas
aam
sbb
into
push
inc
jnp
bound
pop
jmp
cmpsl
add
shlb
dec
dec
cmp
pop
push
cmp
jge
lods
fs
pop
je
xchg
inc
mov
inc
inc
jle
sti
mov
add
and
testl
out
das
fsubr
out
cltd
inc
or
jmp
in
xchg
inc
xchg
mov
xor
out
push
inc
dec
cmc
ljmp
loope
leave
mov
mov
sbbl
icebp
jp
inc
test
call
xchg
addb
popf
jp
jns
cld
cld
mov
adc
sbb
push
sub
push
xchg
xlat
leave
pusha
ret
pop
dec
in
sbbb
repz
pusha
pop
xchg
xor
push
cmp
or
pop
add
mov
cmp
mov
cmp
popf
inc
dec
test
ret
jns
iret
sub
divb
pop
shlb
scas
mov
jo
fmul
rcrb
loop
inc
dec
and
and
cmpsb
std
out
andl
push
ss
test
mov
nop
movsl
xlat
xor
stos
jne
add
sbb
xchg
int3
adc
fnstcw
outsl
lret
mov
popf
das
push
das
cmc
aam
fimuls
rcr
xchg
cmc
xlat
sbb
rclb
out
pop
sub
insl
xchg
dec
fs
mov
jbe
xchg
popa
mov
fcomip
loopne
mov
mov
cmp
xchg
adc
or
in
mov
gs
in
iret
adc
hlt
mov
mov
imul
or
dec
fadds
fnstenv
aas
fwait
inc
pop
cmpsb
loopne
and
sub
test
mov
add
test
shlb
or
lea
xor
xor
cmp
dec
jl
scas
dec
push
xchg
int3
cmpsl
push
and
and
data16
xor
lahf
ss
in
js
lea
jle
mov
out
inc
pop
icebp
jg
lea
ja
pop
mov
notl
adc
mov
lret
lret
mov
and
cmpsl
add
adc
loopne
mov
pusha
cltd
lea
popa
insl
pushf
mov
sub
adc
cmp
or
push
adc
out
xchg
cmp
push
lods
sub
xchg
mov
push
loope
rcl
cs
mov
and
mull
inc
ret
cmp
sti
imul
sbb
repnz
das
hlt
pshufw
sub
mov
sub
mov
scas
pop
xchg
push
movsb
or
rorl
push
pop
mov
movsl
push
lcall
mov
mov
test
and
rol
stos
sub
outsb
jae
adc
jnp
cmp
push
dec
jb
add
pop
adc
xor
fildl
test
xchg
sti
push
sub
pop
xor
add
cmpsb
or
loopne
sbb
cmp
rdpmc
sbb
and
ljmp
lcall
xchg
fiaddl
enter
test
sub
sbb
and
xchg
jmp
dec
sub
into
fbstp
js
add
bound
mov
sbb
shr
idivb
pop
pop
push
xchg
mov
int3
push
xchg
iret
mov
and
sbb
adc
not
dec
fwait
jns
mov
sbb
pop
jecxz
nop
fchs
adc
sub
jmp
orl
mov
or
push
xchg
or
out
cld
addb
std
mov
fisttpl
cmp
aaa
pop
rcrb
xor
testl
cs
roll
popa
pop
mov
mov
out
in
sub
pusha
imul
mov
loopw
mov
bound
cli
std
xor
fneni(8087
aam
scas
imul
pop
jno
pop
and
sub
aas
imul
pop
sbb
daa
mov
jo
mov
and
mov
pop
jbe
mov
test
movsl
cli
out
add
fmul
jl
push
icebp
js
mov
scas
cld
dec
pop
mov
jno
push
out
fiadds
jns
xor
xor
shlb
push
add
out
and
fwait
jl
push
lret
or
cmc
fsubrp
and
pop
pop
adc
ss
fidivrs
mov
mov
push
lcall
ja
cmp
cmp
call
repnz
scas
add
outsb
das
leave
fldl
lock
push
aaa
daa
sbb
negl
fwait
les
or
cwtl
sti
xchg
xor
or
jns
cli
cltd
or
loopne
mov
dec
mov
sbb
cmp
dec
add
lcall
or
xor
nop
push
mov
arpl
imul
mov
pop
xchg
mov
mov
xor
mov
cli
xchg
push
mov
cmc
or
push
mov
out
fwait
dec
ljmp
mov
add
adc
or
and
push
pushf
push
mov
jge
lahf
xor
mov
jecxz
pop
xchg
inc
sti
aas
outsb
insb
sub
and
pop
cld
sbb
xor
aad
fdivrl
insb
jns
das
or
dec
movsl
pushf
inc
js
push
jmp
imul
add
roll
cwtl
icebp
icebp
hlt
dec
mov
ret
or
getsec
pop
mov
or
xchg
or
xchg
mov
mov
insl
js
lea
daa
push
add
or
sbb
mov
cltd
fs
jbe
push
mov
arpl
jo
out
popa
push
in
lcall
pop
pop
jnp
nop
sbb
pop
pop
mov
and
jp
arpl
xchg
pushf
fdivp
sub
dec
ss
into
movsb
xchg
jae
int3
mov
push
mov
subb
pop
ljmp
xor
js
add
dec
push
out
fstps
mov
mov
adcl
mov
mov
insb
and
sub
sub
mov
fwait
fwait
push
icebp
es
add
push
push
ja
insl
fstp
je
inc
lea
dec
jo
mov
rcll
push
lock
mov
jmp
mov
aas
pusha
dec
push
mov
je
push
fs
call
cmp
inc
inc
mov
pushf
dec
rolb
sub
mov
mov
les
aam
test
xor
inc
popf
and
pop
gs
add
or
out
lea
dec
bound
in
pop
xor
lods
shll
scas
jp
mov
mov
out
loope
xchg
inc
cmp
cmp
aas
and
adc
add
sbb
jno
arpl
clc
in
fidivrs
jne
lods
or
test
pop
stc
inc
sub
ret
xlat
cmc
push
sar
stos
add
dec
test
lock
shl
mov
mov
and
out
xor
inc
into
vandps
jns
pop
push
push
cmpsl
test
fistps
sub
cli
movsb
paddw
insb
subl
fisttpll
incl
add
lahf
and
push
shrl
cmc
dec
lods
test
push
repnz
lret
xchg
mov
mov
dec
dec
lahf
cli
and
enter
in
sbb
mov
jo
scas
sti
test
leave
cmp
cmpl
mov
sti
inc
sbb
fcmovb
cmc
mov
xor
or
pop
or
cmp
mov
outsb
and
enter
ret
cmp
xor
cs
jmp
outsb
sub
jmp
cmpl
test
add
movsb
jae
push
pop
aas
add
adc
nop
jb
add
shrl
xor
sub
loop
dec
incb
scas
stc
fisubrl
jle
into
jl
mov
push
mov
nop
jmp
sbb
repz
aas
mov
ret
stc
sub
imul
push
pop
out
ror
mov
mov
aas
in
adc
fsub
pop
push
xchg
mov
pop
pusha
lret
sub
mov
sbb
pop
in
mov
in
or
jno
or
dec
xor
inc
sahf
cmp
mov
int3
jns
fs
mov
outsb
sub
fimuls
sahf
rcpps
dec
in
pusha
dec
push
cmp
gs
mov
jbe
shrb
nop
mov
cwtl
pop
data16
push
daa
orb
addb
sarb
dec
je
sub
sub
and
fcompl
negb
popf
test
iret
mov
push
push
and
adcb
lock
loope
cmp
jle
nop
mov
push
test
push
subb
jecxz
cmp
sti
xchg
add
fisubl
or
imul
loopne
testb
ficomps
movsl
imul
xchg
pop
in
add
lahf
addr16
test
jl
sahf
add
and
loope
pop
xchg
push
test
dec
aaa
mov
loopne
aam
mov
dec
daa
add
cmp
fidivrl
or
jecxz
and
frstor
fisubrs
aad
test
sub
lods
ja
xchg
jns
and
or
cmp
cmp
push
inc
xchg
int3
pop
cmp
push
pop
mov
jbe
cmp
sbb
dec
add
mov
xchg
jmp
mov
mov
cmp
sbb
shlb
daa
js
dec
fdivs
push
mov
aas
mov
test
fmull
dec
xchg
pop
mov
popf
lock
lret
xchg
setge
in
sarl
shlb
mov
cltd
std
mov
dec
out
xor
cmpsb
mov
lods
inc
popf
inc
stos
and
repz
aaa
xchg
lret
es
aad
mov
lock
ja
mov
fsubrs
ljmp
jg
inc
jbe
rol
loopne
dec
xor
xlat
mov
in
mov
jae
test
sbb
lods
sbb
mov
ljmp
add
xchg
bnd
push
dec
sub
daa
and
inc
enter
lahf
add
shl
xor
movsb
mov
test
cmp
and
ret
popa
xor
movsl
jmp
testb
rcll
sub
outsb
fnstenv
les
cmp
adc
mov
inc
cltd
cmp
xchg
pushf
into
adc
fisubs
out
inc
pushf
and
nop
adc
inc
adc
lea
cmpl
cmp
cwtl
mov
aaa
cmp
xor
mov
mov
inc
jne
cmpsb
lods
xchg
shrb
pop
push
and
out
inc
push
pop
cmp
bound
pop
xchg
loop
xchg
ds
push
push
jmp
inc
pop
popa
add
push
and
addb
mov
in
fldenv
cld
test
fnstcw
mov
xchg
mov
xchg
bnd
pop
aas
pop
pop
or
faddl
push
mov
xchg
cmp
adc
dec
in
aaa
cmpsl
enter
sub
movsl
pop
in
add
jns
push
or
sbb
lods
fmull
sbb
inc
test
cmp
jae
repnz
cmp
test
loopne
add
cmpsl
mov
leave
in
inc
pop
adc
lcall
cmpsl
jo
mov
xchg
addr16
dec
dec
jne
jae
mov
neg
stos
and
popf
adc
cltd
bound
inc
add
adc
mov
mov
in
loopne
test
jl
in
xor
push
popf
fbld
fsubl
popa
sub
mov
or
into
test
dec
mov
xchg
push
outsl
call
jbe
push
dec
adc
push
rolb
in
lret
sti
bound
push
jne
push
jns
pop
repnz
pushf
jne
outsl
scas
pop
pop
jnp
mov
pop
jns
mov
fcomps
das
stc
xchg
fsts
adc
aas
jnp
pop
repz
dec
xor
xor
fsts
xchg
pop
xor
rcll
cmp
jg
ret
dec
lret
rcrl
imul
stos
sbb
cmp
xchg
sub
cmp
push
fsubs
jmp
popf
push
sbb
loop
enter
in
out
in
and
les
inc
mov
lret
adc
mov
xchg
ljmp
fwait
push
adcb
lea
mov
in
mov
push
sub
lcall
addl
adc
icebp
pop
xchg
sbb
out
rorb
mov
push
imul
jno
test
loop
inc
fistpll
xchg
lea
into
incl
dec
dec
add
push
loopne
shrl
jo
xor
popa
cltd
or
dec
sub
sti
mov
and
shlb
ds
lods
jo
dec
pop
mov
mov
xchg
xchg
icebp
mov
push
xchg
shlb
into
fidivs
cmc
and
cld
je
fwait
and
add
ja
adc
mov
mov
cmpsl
jle
test
pop
xorl
subl
rorb
cld
mov
mov
xchg
mov
fstpt
scas
mov
inc
cld
jl
aad
sub
shlb
xchg
sub
mov
out
out
ss
mulb
je
fwait
sub
xchg
addl
data16
outsb
inc
and
arpl
sar
push
sub
cmp
lock
cmpsb
aaa
or
mov
sarl
gs
and
mov
out
test
andl
push
jmp
daa
jecxz
mov
pop
mov
data16
je
push
inc
xchg
add
popa
into
call
jmp
cmp
movsl
cmp
scas
loop,pn
add
in
sub
mov
push
push
inc
out
xor
sub
push
add
out
push
mov
jmp
mov
icebp
inc
int3
jl
or
add
movsb
js
fstl
lcall
pusha
movsb
or
repz
pop
jmp
addr16
mov
in
mov
and
aas
ret
pop
mov
imul
adc
pop
pushf
orl
jg
movsl
jl
xchg
mov
dec
push
fwait
add
in
sbb
test
xchg
movsb
scas
mov
cmpsb
mov
in
or
cmpb
in
repnz
jne
std
mov
mov
test
arpl
xchg
pop
dec
out
loope
rol
sbb
faddp
mov
xor
or
cltd
push
and
inc
pop
jo
into
aam
cld
mov
push
lods
enter
mov
test
mov
shrl
pop
fstl
pop
dec
inc
add
xchg
lea
and
cmpsl
dec
fistpl
dec
ret
jge
pop
inc
cmc
sti
sbb
jg
jae
movsb
outsb
fstpt
add
gs
xchg
inc
stos
sub
pop
adc
rcr
aas
sub
adc
lock
or
xor
out
fimull
shll
mov
lret
aam
push
ret
xchg
cmp
pop
push
adc
lds
test
push
repz
cmc
cld
sbb
imul
loopne
loope
call
xor
je
inc
shl
mov
xchg
xlat
stc
inc
not
dec
push
cli
xchg
cmova
aam
icebp
insb
mov
xor
sbb
add
incl
inc
xchg
jp
mov
mov
sub
and
or
push
and
mov
dec
and
or
fsubp
cmpsb
outsb
xor
mov
push
fadds
mov
jl
push
or
lods
xchg
xor
int3
ret
inc
cmp
mov
xchg
inc
das
enter
jp
mov
and
sub
push
adc
fcomi
lret
dec
dec
iret
frndint
mov
pop
shrb
leave
dec
xor
loope
lock
rorl
mov
jmp
inc
int
movsb
fdiv
sarl
in
in
mov
cld
bnd
sbb
sbb
jae
leave
pop
out
shll
inc
sbb
mov
and
pop
adc
out
test
fwait
adc
daa
push
out
xor
jno
mov
cld
pop
nop
mov
cmpl
add
or
lret
imul
and
sbb
sub
or
nop
fiadds
cmp
loope
popa
push
movsb
out
jb
in
add
scas
add
and
out
popa
sbb
test
mov
sub
lret
gs
scas
xchg
cmp
sub
mov
stos
push
sbb
lods
adc
jmp
cli
imul
xchg
pop
sub
inc
jae
testb
es
pop
fdivrs
sub
decb
shl
inc
dec
jne
movl
pop
add
mov
mov
ds
jno
das
and
mov
scas
jecxz
arpl
adc
lahf
das
xchg
or
fwait
jl
pop
mov
aaa
das
aad
push
popl
lahf
push
push
int3
fldt
and
mov
add
xchg
fmull
shrb
insb
out
jp
adc
xor
mov
push
or
mov
scas
lret
and
pop
roll
lods
push
andl
and
clc
loop
mov
cmp
in
xchg
sbb
mov
sahf
sub
sti
xchg
sbbb
lds
cmp
data16
push
fucom
or
arpl
ja
mov
imul
sbb
push
mov
mov
scas
ficomps
ljmp
add
xor
inc
repnz
icebp
mov
stos
xor
cmp
sahf
nop
int3
adc
jbe
inc
sbb
and
inc
inc
sarl
dec
ja
loope
mov
sti
push
push
mov
and
mov
std
cltd
je
icebp
push
dec
in
xorb
filds
sbb
lods
inc
arpl
ja
push
jno
in
push
ds
mov
sbb
inc
aaa
fildl
xchg
dec
pop
mov
dec
pop
subb
sub
adc
and
outsb
mov
add
js
pop
into
mov
ss
je
xchg
push
loop
dec
add
test
adc
cmp
sahf
jo
arpl
xchg
mov
orb
sub
lret
mov
jae
mov
ljmp
movl
adc
jno
push
adc
push
xchg
pop
sbb
sbb
pop
int3
and
jo
mov
loope
lahf
sbb
std
jns
mov
imul
jnp
test
into
stos
in
push
andl
sub
pusha
pop
mov
ja
or
nop
push
pop
enter
or
mov
sub
add
mov
sahf
int
jnp
ficoms
mov
and
fwait
out
adc
jge
sub
xor
jnp
xlat
or
cmc
dec
and
into
jns
stos
jbe
arpl
push
push
lods
push
ja
pop
sub
scas
xchg
pop
es
and
inc
clc
add
je
sti
cmp
imul
adc
pop
pusha
adc
call
out
mov
jg
nop
xchg
arpl
xchg
in
test
das
adc
jnp
adc
pop
nop
dec
out
int3
jmp
ret
ljmp
xor
cltd
cltd
das
xor
and
les
mov
test
sub
add
repz
btr
inc
lret
and
jecxz
aad
jb
adc
sub
scas
inc
js
xchg
or
inc
js
ss
pop
push
scas
xchg
mov
mov
dec
adc
xchg
mov
jae
xor
mov
fnsave
or
mov
sbb
out
ficompl
mov
or
jl
enter
xchg
inc
pop
jmp
sub
or
and
das
movsb
inc
adc
xchg
int
shrl
sub
jecxz
fiaddl
mov
pusha
mov
repz
cltd
js
jnp
js
cltd
insl
adc
or
sbb
mov
rcrb
mov
aas
xchg
js
xchg
inc
lods
or
push
add
xor
bound
and
in
nop
add
jae
xor
out
mov
lcall
mov
mov
push
jbe
imul
dec
inc
mov
out
jo
adc
push
adc
in
sahf
adc
and
dec
mov
jbe
dec
pop
jl
ja
ret
xchg
js
inc
scas
xchg
xor
sub
sahf
frstor
xlat
lea
jp
or
mov
xor
jns
xchg
sbb
std
jno
inc
repnz
fwait
mov
jp
pop
andb
adc
mov
pop
das
xchg
cmp
add
or
mov
es
pop
sbb
movsl
mov
test
add
or
je
je
test
mov
xor
repnz
imul
and
inc
aam
xor
cmp
popf
add
not
sub
sbb
xchg
lret
mov
in
xor
pop
test
mov
arpl
or
in
out
and
cld
inc
inc
pop
pop
or
insb
lods
ljmp
cmp
xor
test
ret
pop
push
scas
dec
aaa
sbb
lcall
dec
mov
loopne
cmp
pop
cmp
movsb
test
rclb
add
ficompl
xor
std
test
out
popf
inc
mov
movsl
mov
scas
sub
cmp
xor
dec
punpcklbw
test
bound
inc
int
sarl
push
jp
out
mov
loop
adc
or
and
jmp
sbbb
inc
or
add
pop
mov
cmp
out
popa
push
pop
in
and
mov
mov
in
and
cmp
lret
cltd
aas
inc
fstps
sbb
cwtl
or
repnz
adc
push
pop
pop
push
cmp
adc
decl
push
pop
push
aam
dec
cld
mov
jmp
in
int3
lods
mov
cltd
in
int
dec
imul
arpl
dec
push
and
leave
xchg
xchg
call
inc
inc
fwait
cmpsl
loope
sarl
jbe
jp
pop
xor
mov
adc
adc
es
pop
dec
adc
gs
idivb
or
dec
ja
outsl
insb
xchg
scas
inc
inc
arpl
cwtl
sarl
les
nop
xor
sbb
push
sub
ss
push
add
js
addr16
or
pop
mov
cmpsb
mov
push
test
dec
sarl
in
cmpsl
sbb
js
jp
ds
dec
push
stos
movsl
or
adc
and
rcll
cmpsb
arpl
inc
aad
daa
cmp
cld
scas
scas
jg
test
pusha
in
mov
imul
leave
pushf
movl
mov
arpl
arpl
loopne
call
rcll
bnd
bound
pusha
jae
cmp
and
jno
or
stos
cld
pop
or
push
fmuls
mov
pop
xchg
jns
mov
clc
call
enter
mov
and
jnp
sub
lea
pop
jle
repnz
xor
xor
outsl
xor
rolb
les
xchg
cld
and
popa
push
gs
mov
into
leave
ja
in
out
sbb
adc
mov
incl
push
xchg
adc
data16
lods
ja
ret
pop
jecxz
jne
int
sbb
inc
jge
and
pop
test
ret
add
and
scas
imull
jg
inc
mov
add
mov
outsb
add
test
enter
or
daa
pop
dec
xchg
push
sbb
int
mov
insl
mov
or
insw
dec
pop
int
push
js
or
or
rcl
push
mov
stc
mov
mov
and
orl
aas
mov
cmp
aam
push
adc
jbe
and
sub
test
out
xchg
mov
out
mov
or
fsubrl
notl
xlat
loopne
jecxz
adcb
lock
test
movsl
iret
out
negl
cmc
dec
aam
loope
cli
unpckhps
sbb
enter
movsb
mov
cmp
push
xchg
sbb
stos
pop
push
pmullw
scas
add
bound
inc
aas
into
popf
lods
or
repnz
js
popa
std
add
adcb
xorl
stc
sbb
sarb
mov
inc
stos
sbb
push
jecxz
cmc
test
int3
jo
std
mov
cmp
movsl
add
mov
out
xchg
and
cld
jno
into
call
fisttpl
stos
repz
xor
cmp
jno
xor
scas
lock
push
pop
fldenv
test
repnz
add
sahf
pxor
and
pop
popf
mov
lret
push
stc
inc
dec
xchg
xchg
popf
hlt
or
rcrb
stc
insl
into
xchg
loope
push
dec
test
mov
ljmp
sbb
pop
xor
xchg
int
pop
mov
mov
fcmovb
sbb
push
fbstp
xor
xchg
pop
add
mov
mov
pop
mov
negb
je
fistl
loop
into
cmc
cmc
scas
out
xor
mov
mov
jle
adc
jae
sub
and
testl
mov
xchg
push
push
adcb
ret
pop
lds
inc
cmp
push
cwtl
mov
aaa
icebp
lret
and
inc
scas
mov
pushf
cmp
popa
jno
enter
outsb
jns
fnsave
stc
mov
js
add
jmp
add
imul
stos
jbe
dec
add
insb
jmp
add
pop
push
out
lret
ret
cmp
and
sub
push
ret
jae
jb
fidivl
xor
cmp
mov
mov
cmpl
adc
ret
mov
sti
mulb
xor
cmc
mov
rorb
sarb
cmpb
lea
int
add
dec
xor
cmc
xor
fsubrs
or
daa
jae
stc
xchg
iret
push
jb
sub
daa
mov
sub
mov
ja
dec
mov
stc
lahf
add
mov
push
ja
or
int
sub
clc
lea
ss
pop
pop
pop
ja
pop
shlb
mov
out
hlt
loope
mov
inc
push
xlat
pop
loopne
mov
jbe
pop
shlb
push
mov
aad
push
xor
pop
vxorps
adc
clc
out
imul
rclb
and
mov
jecxz
xor
mov
jns
mov
jle
iret
stos
adc
xor
cmpsl
mov
xor
jae
sub
adc
push
imul
inc
repz
mov
jg
dec
lret
cwtl
idivb
mov
fisubs
and
cltd
pusha
pop
inc
loop
ss
pusha
enter
stc
and
iret
aam
fdiv
cmpsl
lcall
or
sbb
mov
inc
pop
ljmp
repz
je
add
mov
sub
push
pop
and
or
mov
lret
fbld
jnp
push
std
mov
inc
aas
fimull
cltd
ds
xchg
mov
faddl
sbb
clc
shrb
loope
lahf
mov
scas
fisubrl
ds
mov
dec
jns
dec
dec
pop
xchg
negb
fildll
and
xor
adc
cmovge
mov
jns
lcall
pusha
gs
jae
ds
clts
xorb
repz
lods
jge
js
enter
ss
imul
and
xor
mov
mov
adc
popa
push
bound
xchg
mov
adc
mov
add
xchg
mov
cmp
pop
push
shlb
mov
push
lahf
pusha
sub
push
faddl
cld
sarb
out
cmp
cmc
mov
lea
dec
mov
es
dec
ret
pop
adc
or
imul
xchg
mov
ret
enter
inc
push
inc
pop
scas
pop
dec
popf
lods
xchg
add
mov
pop
fstpl
mov
jnp
mov
lahf
mov
or
les
or
fistpll
bound
ret
xchg
sbb
nop
cmpsb
cmp
mov
push
iret
ljmp
inc
xchg
and
sub
cmp
add
mov
xlat
enter
jp
inc
dec
aad
in
ja
inc
test
inc
inc
cltd
das
cmpsb
lcall
fwait
addl
inc
jnp
cmpsb
das
repnz
inc
aad
lds
pop
mov
inc
mov
push
dec
test
mov
adc
bound
insb
sahf
test
adc
push
push
add
adcl
push
push
dec
loop
stos
aad
fsubrs
sbb
mov
notb
adc
xlat
scas
lcall
cmp
sbb
clc
mov
and
mov
xchg
push
inc
sbb
add
popa
push
xchg
mov
and
or
mov
sbb
mov
pop
or
and
xchg
loopne
cmp
sahf
push
mov
or
outsb
or
test
out
adc
inc
mov
pop
sbb
jge
lock
jecxz
lods
popf
imull
icebp
adc
jae
cs
dec
and
mov
pushf
imul
push
pop
jno
ljmp
pop
mov
xor
push
push
decb
ret
push
mov
push
jae
repz
xrelease
scas
mov
cli
cmpl
popl
xlat
dec
inc
sbb
ss
fs
mov
cmp
leave
xlat
jmp
cld
mov
aas
stos
das
cmp
sbb
mov
xchg
fdivr
std
stos
loop
and
dec
jo
xchg
and
push
sub
cld
test
cmp
sti
xor
jb
add
movsb
mov
push
notb
jle
mov
mov
xchg
daa
cs
xchg
mov
adc
add
push
cvttps2pi
mov
jns
int
repz
add
mov
je
push
loop
scas
sahf
lea
push
test
mov
mov
and
sub
cmp
addr16
xchg
xor
push
dec
mov
xchg
in
cmp
cmp
nop
or
jg
mov
inc
dec
es
jmp
or
cmp
gs
add
mov
out
sub
mov
je
or
xchg
mov
mov
pop
hlt
push
or
xlat
sub
push
in
cli
push
andb
push
imul
rclb
and
pop
cmpsb
stc
mov
dec
mov
sarl
and
mov
pop
pop
xor
pop
jg
jp
and
daa
cs
cmovg
inc
cmp
iret
and
mov
mov
mov
push
test
std
mov
xchg
aam
jno
fdivs
dec
mov
hlt
cmpsl
cmp
into
ret
pop
rcr
mov
mov
push
in
xor
mov
ds
sbb
or
inc
mov
or
ret
loopne
ret
jnp
add
in
ds
xchg
add
cmp
hlt
cmc
ljmp
cmp
mov
push
divb
out
ficompl
cmp
pop
mov
or
pushf
or
jp
push
in
jbe
dec
push
arpl
pop
dec
adc
cli
sbb
mov
or
stos
sub
addr16
xor
arpl
add
shl
pop
stos
xor
dec
or
in
dec
test
mov
or
mov
cmp
add
sti
xor
xor
inc
cmp
push
lcall
xor
pop
jns
jg
mov
mov
outsl
stos
jno
lret
imul
jb
andb
add
call
cmp
idivb
pop
mov
in
inc
sub
insl
or
push
mov
iret
aaa
aad
cld
mov
les
jg
pop
aaa
cwtl
mov
out
mov
and
pop
js
adc
sbb
pushf
mov
add
lock
xor
popf
xchg
scas
cmc
mov
cmp
jg
test
pusha
lahf
sbb
dec
sahf
cmpsb
dec
rorb
and
jnp
push
mov
dec
aas
dec
loope
adc
adc
xor
xchg
adc
push
scas
dec
jae
xor
jle
aam
dec
dec
sub
call
pop
lds
lods
lret
mov
lods
xchg
pop
mov
fcoml
cmp
and
add
aaa
push
add
int
addr16
out
hlt
dec
mov
cmc
test
shlb
ds
adc
lret
mov
mov
add
xlat
loopne
in
aam
andb
ficoml
mov
cld
es
mov
std
addl
leave
jecxz
mov
scas
adc
push
sbb
lcall
cmp
mov
xor
shll
pop
xchg
xor
mov
sub
ret
aad
lret
das
mov
or
adc
mov
cmp
cwtl
inc
push
inc
cmovs
jmp
mov
push
mov
pushf
jb
pop
mov
sub
std
adc
inc
hlt
das
das
jg
fsubrp
mov
rcll
gs
or
mov
rclb
push
lock
cmp
sub
pmullw
pop
gs
pop
mov
add
mov
adc
adc
cmc
jge
push
lahf
aam
or
lret
insl
mov
ss
jle
inc
pop
jo
push
out
and
test
lock
int3
or
pushf
xor
gs
leave
xchg
hlt
mov
daa
out
pop
das
inc
fisubrs
arpl
mov
jb
or
in
mov
adc
in
inc
fisubl
loopne,pn
inc
push
sub
push
cld
in
sahf
mov
testb
lcall
enter
shrb
cltd
into
inc
or
mov
lock
mull
jg
mov
in
mov
lret
adc
mov
pusha
or
jp
adc
std
out
inc
pop
ffreep
loope
rcl
push
cmpsl
jle
xchg
and
daa
mov
stos
cmpsl
push
jns
mov
repnz
test
dec
jae
cli
pop
cmp
nop
outsb
sbb
lods
jge
in
jo
loop
push
adc
inc
xchg
push
jo
mov
fidivrs
in
int
sbb
out
lahf
mov
cmp
test
cmp
pushf
notb
inc
lds
adc
adc
stos
popf
adcl
sub
pushf
jo
aaa
mov
add
hlt
out
out
sahf
xchg
gs
push
stc
mov
mov
gs
cmp
sbb
adc
add
jne
dec
cmpsb
pop
xor
fmul
mov
push
daa
call
shlb
pop
xor
and
shrl
sbb
xchg
cmpl
sub
fsubrs
pop
push
ds
fidivs
popf
rcll
aam
aaa
jge
fisubrs
mov
mov
jns
mov
jo
jae
push
inc
push
sub
jmp
xlat
fnsetpm(287
outsb
ret
testl
lea
or
mov
ja
arpl
pushw
aaa
aas
jecxz
pop
enter
and
and
aad
rolb
xor
add
jns
mov
adc
xchg
in
mov
test
pop
mov
mov
inc
mov
dec
jb
inc
mov
jg
push
rclb
inc
jle
inc
add
ds
push
lods
loop
in
inc
popa
jmp
xor
pop
push
mov
mov
test
or
jl
aam
out
jo
mov
sbb
cmpsb
call
cmpb
loope
jmp
sti
mov
push
mov
pop
gs
int
scas
out
push
cmpsl
out
dec
stc
sub
and
lock
xorb
cmp
cmp
nop
xorl
xor
xchg
fdivr
scas
imul
pop
pop
inc
and
in
dec
test
and
lods
rol
jmp
fildll
stos
insl
sarb
mov
pop
add
ret
cmpb
movsl
ss
push
in
push
fisubs
aas
cmp
sub
and
mov
in
pop
sub
xchg
inc
xchg
add
daa
mov
cmp
std
fcoms
dec
daa
adc
xchg
sbb
fdivl
in
jmp
mov
aaa
sbb
iret
adcb
test
mov
mov
lds
adc
lahf
sbb
rcll
test
mov
add
divw
adc
lods
add
cmp
jp
cmp
cmp
mov
xchg
shrl
fdiv
std
push
cmp
mov
mov
ss
ljmp
test
jns
pop
test
mov
aad
shl
hlt
nop
lods
stos
push
mov
dec
jge
xchg
pop
movsl
rorl
xchg
cmc
aas
jp
mov
daa
popa
mov
movntq
out
jns
fstp
adc
add
sarb
jl
mov
mov
sbb
dec
stc
sub
or
cmp
mov
or
inc
push
cmp
xchg
fbstp
fcomi
lret
pop
popa
pop
icebp
mov
xchg
jmp
loopne
add
aas
bound
inc
inc
outsb
push
xchg
inc
sub
mov
add
imul
add
ss
push
daa
scas
push
sub
dec
enter
clc
sub
orb
push
xor
mov
jbe
stc
jnp
cmp
in
test
mov
lds
ret
push
push
hlt
insb
dec
bnd
mov
cld
loope
popf
xorl
push
dec
add
and
fistpll
pop
jle
push
std
add
movsl
bound
lock
sti
or
xchg
xchg
xor
push
inc
push
push
fbstp
pop
inc
jnp
and
mov
xor
rcll
aad
bound
adc
adc
iret
cmc
pop
shll
jge
inc
mov
daa
pop
xor
push
hlt
mov
inc
test
ja
addr16
xchg
insl
push
xchg
stc
rcrl
scas
movsl
nop
inc
jb
std
adc
sahf
nop
and
hlt
sbb
jle
push
push
stc
jg
mov
xor
fbstp
jp
ds
add
jb
jle
inc
jnp
popa
sti
sbb
stc
sub
push
ljmp
repz
pushf
or
push
pushf
or
lahf
in
data16
adc
add
nop
push
add
jle
and
push
movsb
setb
movsl
inc
push
incb
fs
outsl
fwait
test
sbb
sub
fmuls
cmp
sahf
pop
stos
mov
leave
pop
and
scas
fucomp
in
jl
mov
fiadds
fs
sarl
cwtl
orb
shrl
popa
jo
push
mov
mov
in
stos
dec
mov
dec
cmc
adc
xor
or
dec
xchg
cmpb
dec
push
cmp
std
pop
push
ja
xchg
mov
pop
loop
xor
imul
jo
insl
mov
sub
dec
popa
sbb
daa
xor
sbb
mov
shlb
testl
push
dec
xchg
jbe
ds
lret
out
ljmp
add
cmp
xlat
sarb
jnp
mov
mov
jmp
mov
xchg
xchg
push
test
mov
cmp
add
pop
lods
or
aam
aaa
sub
int
addr16
adc
adc
testb
xor
aad
testl
enter
adc
mov
cmp
push
dec
add
test
rclb
js
cmpl
jmp
mov
test
mov
idiv
gs
das
stos
bound
lea
fldenv
popf
sub
inc
jo
push
push
jle
cli
les
or
dec
push
cmpsb
cmpsb
jmp
sbb
or
cmp
inc
ss
pop
add
mov
pop
dec
xlat
add
es
js
outsb
xchg
clc
je
aad
daa
cmp
push
sub
sbbb
inc
pusha
pop
aad
add
ret
and
mov
int3
jbe
mov
into
lea
int
rcrb
jbe
jo
stos
jo
lods
cmc
and
pop
cli
popa
iret
aam
add
enter
movntps
and
ret
and
dec
push
xlat
fsubrs
int3
loope
mov
shll
fdivs
daa
mov
bswap
adc
adc
mov
mov
in
cmp
jge
push
out
jno
int
scas
scas
inc
lahf
mov
jbe
xlat
and
jecxz
cmp
int3
bound
lahf
jge
jle
pop
icebp
xchg
xchg
popf
xchg
je
mov
repz
outsb
test
loop
xchg
xor
and
inc
enter
inc
pop
mov
xchg
mov
jle
and
cli
pop
mov
in
add
xchg
popa
sbb
xchg
shrl
cmpb
pushf
sub
sbbb
push
sbb
push
lret
inc
outsb
aam
or
inc
in
pop
stos
shl
sbbb
xor
adc
mov
xchg
sarb
andl
jge
inc
das
rclb
and
pop
lret
test
add
fwait
and
pop
movsl
nop
mov
jmp
xchg
loop
or
jb,pt
xchg
push
mov
xor
pop
cmp
push
faddp
mov
mov
or
adc
loop
lea
pop
mov
out
inc
lret
xchg
call
dec
dec
push
or
lret
push
or
int3
daa
jnp
je
mov
jnp
pusha
cmp
int3
cmp
rclb
rorb
nop
cmp
cltd
mov
loope
stos
loopne
shrb
mov
sub
sub
sub
fimull
sub
jmp
popf
jge
sub
jb
and
add
add
fldt
int3
adc
mov
cmp
sub
xchg
push
cmc
adc
sub
add
jle
out
js
add
xlat
xchg
xlat
pop
pop
add
mov
dec
daa
or
and
sub
cmp
push
cmp
dec
lods
sbb
jecxz
test
das
sbb
into
es
jle
sbb
test
push
lods
out
add
push
into
pop
xor
xchg
xchg
cs
imull
jb
negl
adc
mov
mov
fisubrl
cmp
ret
jecxz
ret
mov
aaa
mov
xor
movsl
sbb
pop
jb
fiaddl
pop
cld
sbb
inc
inc
movsl
imul
cwtl
mov
loope
fisubs
dec
sub
sub
rolb
mov
cwtl
fsubrl
pop
pop
jle
mov
je
faddl
jbe
sub
dec
mov
xchg
mov
fimuls
popf
das
dec
adc
dec
xor
jp
xor
adc
mov
mov
lods
cmp
into
lcall
pop
cmp
bound
push
pop
icebp
sub
cmpsl
xchg
out
jne
sub
adc
addr16
je
cmp
gs
data16
or
fsubr
pop
loope
inc
xchg
js
or
popa
xchg
jbe
cmp
pushf
mov
inc
xor
pop
repnz
mov
cmp
pushf
jns
lcall
dec
or
mov
lret
pop
iret
add
sbb
lods
dec
mov
cltd
jno
mov
in
sbb
fists
nop
repnz
imul
and
iret
jl
rclb
xchg
in
dec
push
add
std
aad
mov
push
mov
in
sbb
jp,pt
insb
pop
repnz
mov
out
cmp
add
cmp
sti
mov
or
lock
mov
cmp
out
push
jae
add
pusha
sahf
mul
pop
pop
inc
and
cmpsl
fstpl
mov
xor
xor
jg
lret
jnp
inc
add
pop
rorl
or
xor
stc
sbb
orb
jnp
mov
push
out
dec
lods
cmpsl
add
adc
jbe
rorb
pop
lds
out
adcl
cmpsb
jnp
mov
cmp
xor
inc
push
inc
dec
pop
or
cmpsl
cmp
dec
fldenv
inc
fidivs
negb
arpl
cmp
sti
and
or
and
push
mov
outsb
notl
stos
imul
dec
jae
push
clc
jle
test
lcall
and
lahf
and
xchg
jns
xchg
xor
in
test
lods
mov
idiv
push
loope
xor
fcoml
push
out
add
inc
sbb
fsubrs
sub
out
popf
dec
leave
out
adc
lds
in
adc
mov
dec
sahf
ss
in
es
ljmp
cli
jmp
mov
ret
mov
imul
jne
add
jecxz
nop
pop
daa
pop
sahf
icebp
cmp
mov
pop
jbe
ljmp
add
inc
adc
mov
inc
outsl
mov
xchg
or
xlat
loopne
ss
jno
mov
add
cmc
push
cmp
sbb
xchg
stc
push
aaa
stos
jg
push
cmpb
xor
cmp
xor
outsb
jge
mov
jb
xchg
mov
mov
cmc
cmp
mov
shll
pop
mov
out
test
ljmp
stc
negb
jecxz
xor
push
cmpsl
ja
or
js
xor
add
ret
lods
add
push
push
push
jecxz
repnz
mov
insl
ret
xchg
sbb
mov
jge
jno
mov
push
imul
out
inc
push
ds
in
xchg
cwtl
inc
rcrl
inc
push
cmp
ret
pop
ja
and
cli
inc
mov
andl
jb
mov
fimull
std
and
or
mov
arpl
pushf
shll
jg
mov
lret
xor
mov
jno
out
test
cmp
cs
stc
out
jo
fimull
dec
push
repz
movsl
jp
xchg
add
push
inc
inc
int
push
jmp
xor
push
mov
mov
mov
jne
push
fildll
push
mov
dec
rdmsr
pop
movsb
repz
outsb
pop
push
push
xlat
adc
xchg
dec
mov
loope
pop
clc
mov
leave
hlt
ret
test
lock
add
bound
loope
jl
cmpsb
and
xchg
cmpl
inc
fwait
aad
ja
lods
sbb
cwtl
and
shlb
inc
leave
dec
jg
pushf
jecxz
jno
outsl
insl
push
cmpsb
je
dec
xorl
push
movsl
mov
fwait
lods
cs
mov
mov
and
daa
jl
mov
inc
sahf
rorl
xchg
pop
dec
add
mov
pop
mov
sbb
repz
jl
lea
js
and
lea
pop
outsl
pop
iret
push
push
pop
adc
push
popf
fldcw
sub
inc
push
dec
ss
in
data16
shlb
inc
dec
rcrb
xchg
shll
lret
or
shrb
andb
gs
inc
pop
clc
andb
dec
sti
jb
popa
int
jns
push
loopne
movsb
loop
xchg
adc
loop
xor
mov
sub
inc
movsb
push
andb
imul
iret
pop
clc
xchg
out
push
sbb
nop
dec
adc
jl
xchg
cmc
sub
push
mov
loop
ds
sti
pop
ficompl
arpl
les
decb
jp
cmp
mov
mov
jnp
and
jg
dec
or
jb
pusha
dec
and
push
inc
stc
enter
push
mov
lods
pop
int
sub
sub
inc
cmpsl
pop
out
pop
pop
daa
xchg
and
sahf
pop
sti
outsl
cmpb
dec
clc
loopne
cmp
pop
pop
or
bound
cmp
push
xchg
adc
popa
mov
jb
add
adc
lods
xor
xlat
stc
es
cmp
das
push
je
test
and
stc
mov
add
leave
aas
add
jl
xchg
leave
jb
or
mov
addb
sar
fwait
add
xor
and
or
repnz
movsl
sub
pusha
add
popf
outsl
imul
lret
mull
cld
push
push
push
push
js
or
enter
orb
inc
xchg
or
pop
sbb
pusha
es
add
daa
cmp
cmp
pop
lea
sub
inc
loopne
mov
test
test
cmpl
cmp
jecxz
mov
lods
adc
mov
dec
push
xchg
inc
xor
in
pop
jbe
xor
xchg
mov
lret
aam
push
jge
cmp
and
cs
fwait
hlt
mov
aaa
shrb
jbe
and
and
pop
xchg
gs
sub
pop
es
xor
ds
pop
or
add
scas
xchg
mov
cs
or
inc
in
push
adc
pop
cmpsl
call
ss
leave
or
jbe
mov
or
add
aaa
xchg
ljmp
pop
mov
fidivrs
dec
jmp
mov
lods
test
xchg
xchg
cwtl
repz
out
cltd
mov
jge
pusha
insb
add
mov
daa
data16
add
sub
mov
lret
pop
adc
xchg
inc
stos
mov
cld
mov
mov
mov
jo
notb
cmpsl
imul
inc
mov
jb
jmp
sub
push
loop
xchg
dec
sbb
sbb
xor
xchg
pushf
lahf
cmp
pop
and
push
xlat
icebp
pop
loope
jp
mov
sbb
mov
jae
or
mov
sbb
sub
adc
push
lock
lods
xor
es
xor
or
fwait
cmp
xchg
shrl
ret
sub
pop
jns
jbe
sub
pop
int3
push
cmp
xchg
pop
loop
sbb
sub
push
pop
push
push
orb
js
mov
into
dec
je
xchg
aaa
popa
mov
int
enter
ja
lods
push
sahf
les
inc
pop
sbb
xor
push
in
add
jno
sahf
push
insl
jge
or
dec
fnstsw
das
das
pop
push
mov
xchg
jp
and
cmpsl
lea
sub
or
or
push
xchg
lahf
pop
push
pop
aaa
ja
add
xor
flds
outsl
iret
adc
and
xchg
test
icebp
fcoml
or
rcrb
mov
fstl
jge
mov
sti
lods
xchg
scas
adc
fisubrs
ja
fidivs
mov
dec
sub
inc
push
jge
push
jbe
mov
loopne
das
add
mov
jns
ljmp
push
push
cmpsb
les
out
std
int3
movsb
addb
mov
leave
push
adc
mov
ffree
mov
inc
aam
pusha
dec
xchg
push
mov
mov
jle
adc
pushf
call
insl
popf
bound
out
push
in
ja
pop
ljmp
jb
fidivl
mov
xchg
add
cld
bound
pop
mov
sub
dec
push
mov
outsl
xchg
out
je
jne
iret
in
add
shll
and
daa
xchg
pop
adc
shlb
jae
aam
in
hlt
test
sbb
push
inc
gs
aad
aam
sub
and
sub
sub
or
xchg
dec
sub
repz
cmp
cwtl
dec
sbbb
mov
inc
ficoms
push
in
or
dec
aas
rcl
xchg
fidivrs
ds
sub
inc
jbe
sbb
add
ljmp
leave
fadds
int3
pop
imul
add
jp
add
pop
cld
icebp
inc
dec
scas
pop
lods
sub
lods
popf
push
ljmp
mov
xchg
adc
loop
and
movsb
lret
mov
mov
lahf
xchg
mov
test
cmp
dec
ja
sarl
pop
xchg
mov
cmpsb
pop
xchg
out
adc
ds
ja
sti
dec
mov
mov
sahf
mov
push
mov
lcall
jns
les
arpl
adc
sbb
xor
dec
sti
mov
adc
lea
dec
dec
js
cmp
sbb
cmp
cmpsb
popa
aam
mov
aam
mov
mov
cmpsl
or
xchg
mov
mov
stc
inc
popa
xor
add
sarl
popf
mov
stos
mov
push
and
mov
pop
dec
insl
clc
or
jg
xchg
outsl
je
jns
cmp
push
add
cmpsl
clc
push
mov
gs
dec
lahf
sti
or
int3
enter
or
nop
movsl
sub
sub
fbld
dec
xorb
adc
lds
ret
sub
cmpsl
mov
pop
fsubs
ret
in
or
jg
fs
pop
sub
repz
lds
lods
add
sti
add
inc
xor
cmp
pusha
cli
and
ds
xchg
mov
std
push
jle
jg
in
add
push
loop
icebp
mov
and
push
scas
gs
mov
sarl
sub
sub
mov
dec
dec
xor
jg
mov
xchg
cmp
lret
dec
push
mov
inc
dec
sarl
mov
add
in
mov
gs
stos
xchg
add
ja
xor
push
lods
dec
fiaddl
or
xor
jno
pop
rcll
das
stos
push
cmp
push
push
je
js
in
pop
mov
mov
inc
es
fstpl
cmp
sbb
push
aas
ffreep
ret
push
repz
jae
fcos
xchg
pop
push
ljmp
mov
loopne
into
xchg
sahf
dec
xor
out
push
shlb
cld
xchg
pusha
scas
loopne
cltd
loopne
sbb
mov
pop
pop
pop
cmp
daa
xchg
in
stc
test
mov
jne
jae
inc
fs
movsl
cs
jg
insb
inc
pop
shrb
fcmovbe
aaa
pop
fsubrs
cmp
rcl
into
je
add
dec
ljmp
mov
loope
fldcw
stc
sub
nop
adc
aaa
xchg
movsb
lahf
cmpb
mov
lock
cmp
mov
adc
push
sbb
lock
ljmp
aas
roll
stc
fs
and
aam
aam
pop
shr
xchg
sub
cmp
lret
fwait
mov
std
aaa
mov
adc
sysret
shlb
sbb
push
and
xlat
ja
mov
mov
les
orb
mov
into
aaa
int3
sbb
push
out
enter
fstp
pop
lock
adc
pop
ficoml
loope
xor
mov
mov
ss
inc
sub
jl
in
stos
push
repz
stos
add
mov
cmp
fnstcw
inc
test
add
sbb
inc
lret
jbe
xchg
mov
out
dec
push
icebp
lea
xchg
mov
inc
lret
lcall
sti
std
add
hlt
xor
leave
int
je
pop
lods
in
mov
mov
xchg
xor
es
in
jns
cli
notb
or
rcrl
xor
data16
sub
daa
roll
adc
or
jp
xchg
push
outsl
cmp
pop
aaa
shll
fnstcw
mov
out
in
mov
shll
and
imul
mov
stos
leavew
mov
mov
jecxz
in
pop
jne
mov
mov
xor
push
dec
aad
adc
ficoml
outsb
in
nop
push
mov
pusha
xchg
mov
sub
mov
push
inc
test
sahf
push
or
and
xchg
fidivs
xchg
mov
into
pop
or
icebp
pop
shll
mov
or
mov
jb
xor
pop
lods
mov
stos
sub
jnp
mov
test
jle
mov
cltd
mov
lcall
dec
push
shll
cwtl
xor
sbb
or
es
ret
out
mov
add
pop
mov
cmc
pop
scas
adc
jmp
popf
loop
push
or
out
imul
sbb
jnp
out
arpl
cmc
sbb
lock
cli
call
sbb
or
mov
subl
xchg
test
loop
mov
mov
inc
or
loope
int
in
pop
mov
mov
sti
mov
ret
test
je
subb
testl
mov
adc
push
insb
stc
adc
out
fsts
or
pop
and
call
cltd
xor
test
stos
out
or
inc
push
dec
sbb
lahf
dec
mov
or
jbe
and
popa
scas
les
hlt
cld
sahf
nop
cmp
push
mov
jp
sub
sbb
test
pop
daa
outsb
int
shl
jae
mov
dec
pop
aaa
add
idivb
mov
dec
cmp
add
jo
mov
gs
cmp
jae
lds
pop
adc
test
dec
leave
iret
shll
lods
push
jmp
jno
insl
lcall
test
mov
push
addr16
scas
outsb
xchg
cltd
jns
sbb
rorb
arpl
mov
and
js
jnp
bnd
xlat
or
mov
ja
leave
cmpsb
mov
mov
repz
xlat
xor
test
push
divl
arpl
icebp
aam
and
jb
dec
push
add
int
inc
mov
cmp
ficoml
inc
and
pop
pop
push
jne
in
icebp
psubsb
out
sarl
adc
call
insl
dec
fcom
push
mov
int3
dec
cmpsb
push
icebp
mov
adc
and
or
push
mov
call
iret
jp
or
sub
in
or
jle
movb
xchg
decb
sub
sbb
jg
push
mov
icebp
jle
lods
aas
xor
cmp
push
outsl
loopne
nop
stos
rorb
ret
mov
or
shll
sbb
imul
frstor
mov
ja
in
or
nop
inc
addr16
fbld
aas
mov
mov
and
push
inc
ljmp
icebp
into
jge
push
pop
sbb
rcrl
data16
ja
loopne
jp
jns
push
jp
std
jecxz
push
cltd
and
inc
ret
dec
stos
pop
ds
dec
rorb
cmp
ss
mov
out
pop
subb
dec
inc
not
mov
mov
mov
jnp
loopne
xor
push
icebp
je
jae
jne
and
xor
mov
lock
subl
mov
or
dec
sahf
call
jmp
out
sarl
pop
pop
sbb
in
and
mov
movb
push
or
lahf
cltd
dec
add
mov
aad
cld
push
sub
push
push
add
cli
cmc
xchg
inc
nop
loope
sbb
xchg
sub
push
aad
sub
and
leave
lods
mov
pop
mov
jmp
push
adc
lret
and
and
and
fsubr
lahf
pop
cs
mov
xchg
xor
int
sti
rorl
clc
xor
ds
and
loop
push
xchg
dec
adc
lret
push
add
jne
ja
pop
lret
iret
mov
jno
inc
stc
mov
clc
outsl
push
cltd
mov
cmpsb
sub
lea
incl
mov
xchg
jmp
pusha
jnp
xchg
lret
jbe
jne
loop
fyl2xp1
mov
lcall
stc
das
popf
sub
push
insl
mov
repz
aas
cld
push
pop
jle
or
adc
int3
push
pop
xor
adc
pop
pop
imul
js
mov
push
sbb
aam
sbb
mov
ja
lahf
aad
inc
dec
pop
test
mulb
fists
insb
outsl
adc
inc
sbb
fidivs
xchg
xor
out
pop
in
cmpsb
push
mov
scas
push
xchg
cmp
add
lret
dec
aaa
inc
icebp
std
xchg
jl
es
push
test
sarb
pop
adc
xor
inc
outsl
dec
xchg
xor
fimull
fnsave
push
loop
pop
jmp
pop
jmp
test
hlt
lcall
jmp
out
cmc
lds
es
cmc
fwait
push
cmp
jl
cwtl
mov
insb
mov
mov
xchg
mov
divb
in
push
pop
inc
bound
cmp
add
icebp
cmp
bound
push
ficoml
shrl
aam
lret
pusha
adc
xchg
lods
or
adc
adc
je
in
mov
jge
or
inc
mov
pop
push
jl
addr16
sub
pop
pushf
push
out
movsl
jns
jb
pop
and
daa
jns
stc
popf
mov
dec
mov
outsb
jbe
es
sub
stc
and
and
aad
sbb
out
inc
mov
add
mov
clc
pop
sbb
arpl
in
in
mov
xor
movsb
mov
pop
lcall
jne
jns
mov
int
cwtl
adc
jmp
jne
cmp
notl
or
pop
xchg
je
xlat
cmp
test
les
or
lret
test
mov
push
mov
addl
shld
ds
les
add
cmpsb
xor
xchg
cmpsb
cmpsl
inc
imul
and
hlt
sub
outsl
and
and
int3
push
out
inc
loope
mov
and
scas
adc
sbb
pop
addr16
add
imul
pop
cmc
dec
pop
test
test
mov
inc
andl
add
jo
push
ds
dec
xchg
xor
test
out
mov
pop
jae
mov
sahf
pop
lret
notb
and
or
nop
cmp
ljmp
mov
aam
not
cli
cwtl
xchg
mov
call
stc
and
pusha
lahf
xchg
cmpsl
push
sub
nop
and
mov
adc
aas
pusha
mov
cmc
loope
pop
fs
ficoml
sbb
adc
or
and
jo
adc
mov
push
sub
arpl
sbb
mov
xchg
aaa
jb
aam
lret
pop
insl
and
dec
jae
push
xor
fwait
push
fdiv
mov
jns
ja
adc
xchg
repnz
sbb
adc
mov
cwtl
dec
inc
scas
sti
cmpsb
sbb
mov
sub
jg
mov
rorb
testl
mov
data16
sub
dec
push
push
inc
inc
int3
xchg
pop
pop
jnp
add
lahf
xchg
pop
xor
movsb
push
add
rclb
xchg
cltd
pop
hlt
test
ja
bound
fistps
sbb
stos
mov
fistpll
mov
repnz
cli
faddl
dec
lret
sub
shl
xchg
ret
icebp
ffreep
mov
push
jmp
sbb
sahf
mov
and
add
cvtdq2ps
jmp
and
sbb
pop
jb
std
push
jmp
xor
mov
in
and
cs
ja
add
mov
mov
mov
jle
incl
pop
xor
outsb
xchg
pause
das
mov
push
push
mov
inc
mov
pop
lock
mov
test
int
add
sti
mov
lahf
movsb
sti
push
push
je
mov
jo
orb
sub
adc
outsb
fisubl
aaa
jno
inc
inc
pop
cwtl
jb
popf
cwtl
js
xorb
sub
mov
in
jmp
inc
aaa
outsl
xor
push
rorl
push
push
mov
mov
test
fs
adc
jmp
sub
xlat
aad
rclb
or
sub
cmp
loope
cld
fcomps
dec
out
sub
push
ret
sub
dec
popf
mov
cmp
and
cmpsl
call
mov
cmpsl
arpl
inc
in
jb
adc
and
cmpsl
ja
mov
pop
push
xchg
insl
nop
call
lret
out
inc
sub
stos
cmpsl
mov
mov
ret
loopne
and
fs
cmovae
push
pop
lret
scas
addb
pop
ret
and
jp
data16
test
adc
ret
jp
inc
mov
int3
cld
mul
push
add
jge
sbb
into
jl
imull
sbb
xchg
sub
iret
jae
data16
and
sub
add
or
jl
push
ljmp
cmc
push
adc
adc
arpl
mov
mov
std
xchg
int
mov
mov
or
out
cs
push
sbb
or
jbe
mov
mov
xor
lods
out
push
jmp
or
inc
jb
mov
mov
mov
scas
push
jp
dec
cmp
mov
mov
or
ret
or
and
arpl
daa
sub
adc
pusha
add
xor
cmp
insl
mov
and
test
cmpsb
push
push
pmulhuw
sub
mov
daa
cs
inc
out
push
push
notb
lds
test
sbb
mov
clc
stos
jl
dec
jns
mov
imul
mov
mov
jbe
jns
mov
xchg
icebp
pop
xchg
mov
or
push
popf
jb
sub
pop
cmc
insb
inc
ja
sbb
lcall
ljmp
scas
inc
jns
jb
popf
push
push
into
push
inc
pop
cmp
cwtl
xchg
push
aas
xchg
add
cmpsl
jle
push
push
push
push
push
outsl
out
cld
jg
ss
out
inc
xor
clc
inc
ljmp
rcrb
pop
cmpsl
inc
mov
inc
push
cmpsl
lock
push
test
jo
push
fsubl
jp
orb
jmp
sub
je
add
iret
and
out
lea
sub
call
pop
push
jge
cmpsl
jb
stos
sub
dec
insb
ss
cmpsb
mov
pop
aas
inc
add
pop
push
xchg
int
in
enter
mov
movlps
incl
push
ss
push
or
pop
frstor
add
cltd
mov
jne
jnp
int3
jl
pushf
fdivrl
cmp
mov
adc
test
sti
ficompl
rcrl
pusha
dec
mov
xchg
mov
xor
adc
jmp
or
cmpsb
sub
mov
icebp
call
mov
js
outsl
clc
adc
mov
push
sahf
out
mov
test
inc
xor
test
cs
insl
lods
loop,pn
jns
xor
arpl
sbb
scas
sub
ljmp
cld
lea
add
je
enter
push
out
mov
les
fwait
out
out
xor
movsl
push
pushf
cmc
push
mov
xor
mov
xchg
and
push
loopne
ret
and
or
cmp
leave
std
in
push
test
mov
outsb
mov
subb
roll
das
jo
push
lods
cmp
mov
xor
aam
push
push
or
xor
and
jnp
scas
arpl
mov
fisubrl
gs
push
cmc
lret
aaa
and
outsl
mov
insl
das
pop
push
cld
pminub
jnp
mov
dec
mov
rcll
movsl
lods
or
sub
add
mov
add
dec
jno
mov
xor
mov
in
xchg
rclb
lods
push
mov
mov
movsl
lret
stos
inc
je
dec
js
and
dec
sahf
push
push
cmpsl
adc
push
mov
add
cld
sbb
lock
add
jmp
xchg
dec
adc
cmp
cmpsb
nop
ficompl
and
xor
push
pop
add
sbb
lea
cmp
and
shlb
ss
xor
sub
stos
mov
mov
lock
daa
push
sub
sti
insl
cmp
bound
jl
push
xor
les
or
mov
outsb
stos
adc
cmp
push
xchg
ss
and
test
push
push
movsb
pop
lea
push
and
cwtl
mov
pop
sbb
aad
fidivrl
sub
xchg
cmp
lea
inc
jmp
imul
sbb
cmp
out
les
cmpsl
test
pop
cmp
push
scas
xchg
sub
or
or
adc
push
sbb
inc
jp
pop
in
xor
ret
enter
sti
mov
imulb
mov
pop
shrl
lea
cmp
jno
dec
scas
cmc
in
shlb
mov
xchg
sbb
jns
subb
jge
add
mov
and
cs
mov
fsub
mov
stos
daa
and
and
fistl
sbb
pop
in
das
and
clc
cmp
xchg
sub
fcos
or
test
outsb
adc
loope
xor
data16
jno
cmp
inc
xor
cld
aam
xchg
inc
sbb
cli
xlat
sub
mov
xor
insb
and
bound
push
sarl
mov
lcall
movsb
add
sbb
dec
cmp
push
push
cmp
xchg
sub
xchg
ret
ss
xchg
xchg
sti
imul
aam
cmpsb
ret
ss
shll
xchg
loopne
sbb
push
stc
mov
fucom
mov
sub
adc
imul
pop
fdivrs
bswap
pop
xchg
leave
clc
shl
out
sbb
call
adc
mov
movsl
lds
lcall
xor
enter
push
fstpl
or
pop
in
xchg
pusha
pop
cmp
or
test
push
xor
std
out
xor
pop
lahf
or
dec
es
pop
cwtl
stos
xchg
push
xorb
xor
iret
and
xchg
jne
in
pop
in
clc
out
push
ror
dec
lods
mov
lods
sbb
mov
rcrl
ss
mov
and
movsb
push
leave
xchg
mov
mov
xor
sub
mov
or
mov
cltd
into
dec
inc
pop
jb
fucomi
add
jno
data16
pop
adc
sbb
stc
add
xchg
mov
loopne
ja
xlat
popf
outsb
inc
lock
adc
enter
jmp
mov
adc
sarl
rcrl
fistps
cmpsl
jnp
xlat
sub
call
add
sbb
pop
push
test
xor
cwtl
inc
out
or
add
xor
cmc
inc
xor
negl
jg
out
ljmp
xlat
add
xchg
loopne
fincstp
inc
mov
adc
out
sbb
and
push
mov
movsb
pop
ficomps
jae
sub
mov
popf
repnz
test
popf
add
xchg
mov
rorb
aad
outsb
pusha
sbb
fisubrs
stc
pusha
sub
mov
test
outsb
fldcw
repz
test
inc
dec
js
cs
lahf
mov
andl
xchg
and
push
xlat
and
das
out
mov
xor
xchg
rolb
xor
mov
addr16
sarl
cld
fwait
xchg
sbb
les
aam
add
je
cmp
sub
push
lcall
sbb
mov
jns
cmp
or
inc
adc
mov
nop
fsts
nop
push
cmp
les
and
sub
mov
std
sti
ja
int3
testb
fsubs
push
or
jg
out
cwtl
push
test
mov
mov
add
mov
adc
sbb
aam
xchg
or
adc
jp
and
gs
mov
clc
add
mov
lods
jne
adc
cmp
push
pushf
inc
movsb
ret
pop
mov
and
aas
sub
out
and
imul
xchg
out
scas
sbb
sbb
into
fbstp
ret
mov
mov
std
mov
aas
and
mov
inc
add
push
pop
imul
pop
data16
mov
pop
cmp
jp
les
push
sub
jbe
fsubrs
and
jle
arpl
ss
dec
jl
push
mov
mov
dec
cmp
xchg
sub
nop
and
jge
scas
inc
lcall
mov
push
jecxz
in
adc
pop
shrb
inc
idivb
push
jne
mov
dec
stc
xor
inc
pushf
cld
movsb
out
mov
inc
icebp
daa
push
mov
mov
dec
iret
mov
loope
lahf
push
je
sub
or
iret
in
push
out
push
dec
in
cli
icebp
outsl
mov
les
std
mov
int
xlat
fnstenv
mov
jbe
jne
push
in
ja
cwtl
sbb
fidivl
adc
mov
dec
jo
leave
adcl
data16
mov
adc
jl
adc
lods
dec
das
add
aaa
mov
lea
cmp
and
les
aas
sarl
out
in
into
push
repnz
hlt
cmp
rol
pop
aad
pop
mov
lock
sbb
lret
or
cltd
lds
mov
imul
mov
lcall
mov
add
shl
mov
imul
orl
and
hlt
cmpsb
pop
pop
jl
lds
dec
out
pop
pop
sbb
pop
negl
scas
imul
add
add
mov
mov
inc
je
mov
and
test
lods
mov
lock
xlat
xchg
gs
push
shrd
in
mov
iret
jecxz
insl
nop
jnp
mull
mov
jge
pop
jns
and
loope
jmp
pushf
xchg
ja
fimull
scas
lahf
jne
mov
add
lea
add
add
mov
jl
in
xor
or
lahf
leave
mov
insb
add
cmp
mov
xchg
adc
inc
push
xor
mov
jmp
rclb
or
rorb
outsb
bnd
prefetchw
cmc
dec
add
pop
xorb
stos
ljmp
and
leave
adc
or
or
outsb
je
lcall
andb
lock
cmp
aam
push
cmpsl
mov
xorb
cmpsl
mov
ret
jo
je
andb
out
inc
daa
dec
push
daa
fstl
and
enter
jle
sub
mov
dec
xor
stos
and
div
xchg
data16
mov
xchg
rol
pop
mov
imul
xchg
cli
adc
cmp
in
jg
inc
mov
lret
and
pop
rcll
sbb
lcall
jbe
pop
andl
cld
clc
outsb
sbb
outsl
dec
mov
dec
jnp
pop
add
jecxz
push
dec
addr16
pop
loope
loope
pop
scas
enter
out
add
sbb
jo
stos
mov
sub
ret
xchg
je
mov
ret
shll
mov
mov
mov
jge
fstl
push
popa
loopne
pop
push
mov
jg
mov
jmp
or
inc
mov
ja
bound
add
nop
lock
sub
dec
or
pop
mov
adc
sbb
cmp
add
or
fwait
or
pop
mov
dec
jge
fldcw
jmp
ret
enter
into
adc
stos
pushf
cmp
ret
push
mov
add
mov
dec
xchg
push
add
popf
mov
add
rorl
movsb
lret
pop
out
sbb
fdivrs
lods
mov
cs
loope
pop
insl
cmp
pusha
clc
inc
cli
adc
xor
in
push
cmp
imul
lret
fwait
jnp
lcall
fsub
in
inc
div
dec
sub
loope
shlb
cld
cmp
rol
movsl
cmp
cmpsl
push
mov
jb
and
mov
xchg
sbb
and
and
fsubs
hlt
push
leavew
mov
lcall
imul
inc
sub
xchg
and
inc
push
or
rcl
ljmp
pop
in
dec
pop
adc
jbe
fbstp
mov
push
jnp
ljmp
cmp
and
mov
scas
fucomi
fcmovnbe
xchg
mov
mov
xor
jmp
adc
xchg
pushf
lds
lahf
repnz
xchg
fdivl
ret
pop
fsubs
sti
adc
cmp
pop
pushl
out
jne
fsubrs
sub
jmp
addr16
cmpl
mov
or
movsl
aad
lds
inc
loop
sub
mov
xor
add
xor
divl
mov
xchg
jns
stc
sar
negl
repnz
cmp
pop
js
xor
and
popa
mov
and
mov
add
sbb
or
pop
and
pop
jmp
mov
cmp
insb
ja
pop
jbe
cmpsl
test
pop
pushf
add
pop
jmp
setns
jns
xor
xchg
aas
adc
mov
shll
cmpsl
ljmp
in
sub
cmp
test
test
mov
cld
sbb
out
imul
dec
sub
mov
cmpsb
jmp
jp
cltd
mov
sbb
or
lcall
xchg
cmp
push
pop
cmpsb
adc
sbb
and
jb
push
fisubs
dec
ret
lcall
push
xchg
inc
jmp
sub
daa
into
push
xor
mov
js,pt
xchg
cmp
mov
mov
or
dec
xchg
repnz
push
inc
fbld
xor
neg
add
xchg
and
adc
adc
mov
sarl
popf
pop
pop
jb
mov
pop
int3
dec
movsb
and
outsl
pop
dec
or
sub
shl
clc
xchg
mov
jg
ret
push
pop
adc
and
pusha
sub
in
fsts
int3
cwtl
add
lock
in
sti
adc
test
mov
mov
lods
cmp
pop
fs
loope
shl
sti
cmp
cmp
mov
mov
sub
mov
push
cmp
push
cmp
and
lea
leave
xchg
mov
jg
xor
mov
jb
and
jecxz
dec
dec
mov
insl
loop
push
test
dec
test
mov
andb
push
cmp
leave
inc
ljmp
pop
mov
add
out
outsl
outsb
outsl
std
shrl
jo
push
sahf
cmp
add
dec
out
xor
std
popa
pop
add
mov
mov
dec
cmpsb
bound
cmpsl
pop
int3
jp
lock
movb
outsl
xchg
test
mov
leave
pop
mov
add
dec
lods
mov
jns
adc
mov
sarl
mov
flds
mov
insl
lods
data16
int3
or
fwait
mov
sub
repnz
xchg
stc
es
shrb
pop
or
jmp
sbb
int
dec
mov
pop
loope
data16
lret
cli
testb
or
repz
mov
stos
or
dec
dec
inc
push
jge
stos
add
mov
dec
repz
mov
adc
dec
adc
and
cwtl
test
dec
je
cwtl
mov
dec
and
loopne
ret
test
out
mov
pop
pop
jbe
push
mov
sbb
sub
add
and
or
stos
jb
adc
pop
dec
aad
shll
int
pop
xchg
mov
mov
daa
mov
rclb
xlat
sbb
xor
inc
mov
jge
into
aam
out
inc
rorb
in
loope
stc
and
lods
jnp
mov
push
mov
inc
cs
mov
sub
and
pop
or
pop
adc
sbb
cmp
inc
insb
add
sbb
movsl
mov
mov
push
dec
pop
dec
inc
hlt
outsb
xchg
xor
sbb
push
ja
int3
jne
lods
cmp
movsb
ficomps
cltd
push
lea
adc
cli
or
lcall
out
inc
mov
inc
push
add
sub
xchg
xor
xchg
adc
jne
pop
popa
test
push
sahf
btr
push
mov
rcl
push
leave
loop
or
lea
xchg
jecxz
pop
lea
mov
popl
repnz
scas
sbb
mov
gs
popa
mov
and
mov
sub
mov
cmp
mov
adc
decb
loop
mov
or
cmp
sbb
pop
imul
mov
xchg
test
mov
xor
pusha
mov
mov
test
stos
mov
mov
mov
inc
push
scas
out
in
pop
gs
push
xor
xchg
jae
pop
jno
xor
out
ret
int3
enter
imull
pop
mov
or
xor
push
pop
out
in
jo
or
xchg
xchg
sub
icebp
push
adc
in
jecxz
aas
repz
pop
xchg
int3
inc
hlt
sub
inc
aas
popa
test
lret
mov
inc
sahf
pusha
out
das
pop
loope
xchg
jnp
lock
jp
mov
xor
dec
and
sbb
out
cmp
jecxz
xor
icebp
push
fldcw
mov
inc
pop
add
fsubl
inc
loopne
xchg
or
xor
inc
inc
or
popf
pop
test
pop
sub
sub
jmp
scas
fs
xchg
jle
jg
cwtl
and
jmp
push
mov
mov
dec
push
punpckhdq
and
mov
inc
repnz
mov
or
arpl
mov
mov
into
loopne
ret
fisttpl
jge
xor
mov
or
jns
or
dec
and
sbb
adc
mov
out
lahf
inc
jp
insb
mov
mov
sub
popa
mov
add
sbb
ret
test
lock
into
and
call
popf
test
xchg
dec
das
jo
dec
add
jge
pop
mov
jle
pop
sti
in
rep
xchg
ror
dec
js
es
ficomps
pop
xorl
or
shlb
insl
pop
paddb
cmp
fisttpl
fdivs
clc
fisttps
pop
push
bswap
and
add
and
rclb
ljmp
mov
jmp
sti
push
iret
xor
and
sbb
push
cld
jo
lds
cs
ss
push
fwait
lock
mov
fstps
push
popf
movsl
xchg
xorb
dec
ret
cmp
out
cld
fldcw
fcmovb
sbb
lods
lods
add
xchg
fstl
cli
cwtl
mov
ja
outsl
leave
dec
loop
xchg
lods
pusha
loopne
inc
loopne
inc
ljmp
pop
mov
sbb
scas
popf
sub
popf
xchg
xchg
outsl
push
repz
xor
loop
push
in
push
std
cmp
add
add
dec
fidivrs
mov
pop
and
in
fcompl
and
sub
insb
pop
das
imul
dec
pusha
mov
lods
xchg
mov
outsb
push
ss
push
subl
lret
dec
cmp
mov
dec
push
aam
push
mov
pop
jno
pushf
ficoml
jns
xchg
dec
ja
sub
mov
cmp
mov
shlb
mov
pop
call
add
push
shll
testl
cld
shl
xchg
jnp
es
stos
mov
jb
mov
es
sqrtps
int
dec
loope
cmp
nop
loop
and
or
sarb
insb
push
lret
and
inc
hlt
adc
jo
gs
fdivrp
mov
inc
lea
xchg
data16
scas
xchg
mov
or
lods
jo
movsb
mov
sub
pop
cmpsl
mov
and
out
mov
jl
lea
sub
iret
mov
mov
inc
lods
mov
fnstcw
pop
adc
arpl
insb
fisubrs
mov
fwait
jp
mov
mov
lods
lret
push
and
shlb
lahf
add
cmp
and
adc
lods
subl
mov
fptan
push
xchg
sbbl
insl
push
lods
xor
jecxz
out
mov
test
loope
mov
xchg
jae
test
das
cli
xchg
inc
mov
xchg
push
sbbl
jae
add
imul
sub
cmp
push
mov
jecxz
cmpsb
cld
int
push
ret
cwtl
int3
dec
jo
fistps
mov
loopne
or
mov
mov
fs
xchg
mov
int
ret
mov
stos
push
add
sbb
nop
lahf
cmpb
dec
mov
jne
pusha
ffree
lds
jp
mov
lods
and
pushf
out
popf
dec
jns
adc
push
lahf
lods
lret
or
bnd
jns
dec
fcom
or
add
xorl
bound
mov
xchg
inc
push
pop
adc
imul
xchg
loopne
cmp
ds
push
les
mov
gs
cmpl
mov
sahf
bound
xlat
jnp
mov
jl
xor
dec
xchg
cmp
mov
push
scas
icebp
and
adcl
add
dec
es
mov
or
dec
add
int
inc
int3
dec
iret
test
mov
pop
push
push
inc
jne
xor
cmpl
or
jmp
gs
push
test
das
jb
cmp
movsb
popl
popa
and
pop
in
xchg
es
mov
fisttpll
ret
ja
stos
mov
or
inc
mov
lahf
xor
or
aam
repz
popf
dec
push
bound
or
popf
repz
push
gs
mov
inc
div
jno
loopne
testb
mov
jne
js
popf
movsb
test
sub
dec
push
call
iret
adc
lea
jns
jle
adc
adc
fidivrs
movsl
mov
aas
mov
xchg
pusha
xor
test
xchg
add
popa
sub
mulb
cmp
int3
xchg
inc
gs
icebp
mov
add
ljmp
jg
cmp
xchg
xchg
mov
jbe
movzwl
stc
scas
ds
aad
push
adc
mov
jns
mov
lods
or
inc
rcrb
inc
daa
incl
add
fwait
mov
jmp
out
cltd
int3
popa
sub
int
hlt
sbbb
adc
stc
lods
push
rorl
cld
movsl
dec
mov
or
jl
mov
cmp
mov
mov
fld
mov
pop
lahf
push
lahf
insl
mov
movsb
xlat
sahf
push
in
or
sbb
int3
inc
aam
sbbl
popa
inc
addl
movsl
jnp
mov
mov
add
mov
xor
or
jmp
and
in
mov
xchg
mov
fs
leave
sarl
scas
mov
jle
imul
push
sub
ljmp
pop
addr16
insl
xchg
ja
hlt
mov
divb
cmp
rol
sbb
iret
inc
xchg
xor
and
sbb
cmp
sbb
loope
mov
outsl
adc
dec
mov
inc
ret
bound
xchg
loope
push
pop
sbb
sbb
aas
leave
push
rcrl
or
xchg
ds
imul
outsb
fwait
out
adc
loopne
xor
lret
jp
sti
arpl
adc
cmc
loope
test
les
mov
shll
adc
or
ljmp
sub
xchg
jbe
pop
out
jae
subb
mov
xlat
fcoms
inc
stos
sti
jns
or
mov
gs
addr16
pcmpgtd
data16
mov
sarb
xchg
mov
adc
and
push
cmp
xor
lods
push
jle
dec
mov
aam
and
clc
jne
sub
mov
popf
outsl
je
mov
xor
push
xor
aas
hlt
sub
mov
cld
iret
cmp
xchg
stc
xchg
out
aad
ss
cmpsb
in
divl
inc
push
test
inc
scas
xchg
arpl
aad
inc
cmp
loope
mov
adc
pop
xor
xchg
test
xor
cltd
sub
push
pop
inc
daa
pop
cmc
cmpsb
and
xor
subb
stos
leave
inc
or
push
dec
les
and
or
jbe
in
cmp
cmpl
mov
imul
pop
aad
push
ret
js
js
dec
mov
adc
into
or
mov
adc
mov
outsl
shrb
js
int3
inc
out
pop
cmp
rcr
test
inc
sbb
mov
ror
dec
and
jle
jp
fists
icebp
inc
lret
sbb
sbb
fimull
mov
jl
adc
mov
sbb
adc
mov
sub
sbb
pop
in
mov
icebp
stc
stos
divb
cmpsl
fxch
loopne
pushf
inc
jae
sbb
adc
lods
jne
psrlw
xchg
adc
std
jecxz
xlat
in
mov
ss
inc
xchg
ljmp
dec
ficoml
shr
push
fwait
push
movsl
xchg
sub
pop
repz
push
pushf
push
jo
stc
xchg
xchg
or
xorb
int
inc
daa
add
scas
hlt
jmp
dec
or
or
pushf
mov
insb
jge
xchg
mov
lahf
cmpsb
cs
aam
xor
addb
add
adc
enter
jmp
add
or
data16
lahf
jmp
ja
in
jg
pop
add
push
jl
into
lock
imul
add
aaa
add
jp
lea
leave
inc
mov
mov
xchg
jns
shr
fstpl
int3
stc
in
clc
cmp
loope
aad
aad
adc
je
xorb
fdivl
add
enter
cmpsb
mov
mov
inc
pushf
or
pushf
or
mov
jle
mov
enter
shl
dec
and
stos
cmp
and
popf
sbb
inc
jl
dec
lret
jl
cmpsl
pusha
or
rep
out
cmp
sub
ffree
dec
xor
sbb
pop
add
adc
sub
fsubrp
loop
sbb
aas
stos
xor
adc
cmp
add
out
mov
mov
dec
add
test
in
out
pop
pop
and
sbb
mov
popa
pop
scas
xchg
adc
pop
scas
iret
lock
std
adc
jnp,pn
repnz
sbb
adc
dec
and
out
and
jmp
out
loope
pop
pop
and
in
outsl
cltd
popf
cmpsl
mov
and
ljmp
fs
mov
lret
in
jns
in
das
and
mov
fiadds
mov
add
cwtl
adcb
lret
sub
jge
clc
xchg
icebp
xchg
push
in
dec
scas
dec
hlt
lods
sbb
cwtl
mov
and
ret
loop
jl
arpl
int
jp
jmp
mov
inc
mov
lret
je
or
mov
cmp
cli
gs
shrl
cmp
scas
jnp
adc
in
ret
jb
mov
cs
adc
fsubl
jg
sbb
mov
sbb
fmull
push
test
das
rcll
in
and
popf
or
dec
lds
test
lret
in
sub
adc
push
je
cli
lods
and
dec
out
jbe
je
fnstsw
in
leave
cmp
mov
cmp
pushf
orl
sub
rcr
je
or
lahf
scas
push
sub
add
bound
cmpsb
aad
stos
mov
cmp
cmc
inc
les
or
or
jl
mov
mov
shrl
jecxz
ret
inc
insl
into
push
pop
jl
ja
jb
pop
rolb
imul
mov
std
dec
mov
scas
xorb
stc
addr16
lods
mov
mov
mov
int
and
xchg
rcrb
xchg
out
insl
mov
ds
hlt
inc
mov
cmp
repz
inc
sub
fldl
adc
dec
jno
call
pop
es
and
cmp
lods
fs
sub
mov
mov
pop
lods
ret
stos
sub
sbb
pop
les
pop
sbb
fsts
call
rclb
jo
cmp
and
add
notl
sub
int
or
fildl
dec
movsb
cmp
mov
daa
xlat
pusha
pop
inc
adc
xchg
addl
aad
jbe
mov
ud2
mov
and
sbb
push
imul
cmp
cmp
sub
cwtl
imul
pop
negl
push
ficoms
pop
out
sbb
cmp
lock
xchg
or
adc
mov
xchg
movsb
push
sub
addr16
adc
in
stos
stc
or
ret
xchg
shll
test
sbb
inc
stos
mov
out
mov
cltd
inc
pop
lds
push
inc
cmc
jbe
icebp
movsl
dec
iret
faddl
dec
in
cwtl
mov
stos
inc
dec
into
mov
addl
test
sbb
out
imul
cmp
scas
mov
sbb
das
mov
mov
imul
sub
sbb
push
outsl
rcll
cltd
pop
orb
test
test
pop
or
xchg
push
cmp
dec
pop
pop
imul
add
mov
mov
sbb
out
adc
fistps
push
dec
mov
xor
sub
test
imul
push
adc
mov
out
mov
popf
loopne
pop
pop
jo
adc
xor
lock
rorb
clc
cs
insl
ficomps
ljmp
fmull
jge
adc
jnp
inc
xor
into
loop
out
aas
push
in
fidivl
mov
cmpsl
aad
leave
mov
pop
daa
xor
loope
jmp
sub
pop
push
jge
pop
scas
repnz
jo
outsb
xor
mov
xor
lcall
aaa
in
or
imul
mov
and
ret
cmp
jbe
jl
jl
xor
mov
push
fst
imul
jmp
jnp
push
int3
insl
lods
testb
leave
js
mov
xor
xchg
mov
scas
push
dec
repz
adc
mov
ja
ljmp
in
dec
pop
shrb
cmpb
mov
add
dec
push
out
or
fnstcw
mov
dec
sbb
sbb
lret
dec
cs
icebp
clc
fadds
inc
imul
jg
mov
lahf
sbb
inc
nop
cmpsl
dec
pop
dec
rcrl
in
adc
cmp
xchg
lock
dec
stos
lea
cwtl
aam
add
lods
test
jl
daa
outsl
sbb
clc
push
leave
nop
dec
push
and
std
ret
inc
xorl
mov
inc
incl
mov
scas
push
lea
dec
push
mov
cwtl
dec
int
movlps
mov
fisubrl
aam
push
xor
jae
cwtl
mov
pop
inc
inc
clc
test
outsb
mov
scas
inc
mov
mov
lods
jmp
insb
aam
and
mov
mov
stc
popl
cmpsl
push
nop
rorl
inc
or
inc
inc
bound
mov
add
mov
inc
pop
rol
xchg
sbb
in
cmp
sub
inc
imul
sub
adc
mov
and
lret
out
pop
cmp
jno
aaa
adc
popf
mov
sub
xchg
js
in
lahf
cmpsb
inc
fucompp
je
jecxz
fs
sbbl
test
xor
or
sub
pop
xchg
aam
ret
sub
cmp
in
or
jp
call
hlt
cmc
xor
hlt
test
lds
ffreep
pop
mov
scas
mov
daa
dec
push
mov
or
mov
or
popl
leave
add
jp
jne
inc
decl
lods
add
int3
fisttps
pop
std
jnp
lret
mov
push
lret
inc
and
mov
repnz
jle
enter
je
test
inc
das
leave
data16
push
xor
xchg
arpl
insb
loope,pn
and
mov
cli
lods
pop
mov
lcall
mov
in
dec
sti
cli
sbb
sbb
inc
jbe
lahf
sbb
cmpsb
jnp
push
xchg
lahf
push
mov
cmc
repz
inc
repz
addr16
loope
jmp
or
stos
js
sarl
mov
mov
pop
jl
xchg
push
popa
je
out
mov
enter
negb
paddw
shlb
stos
xchg
xchg
pop
lods
jg
jb
daa
fcomps
jne
xor
imul
xchg
ljmp
jns
cltd
or
adcb
lock
push
or
jle
sub
bound
mov
and
push
xchg
jae
mov
mov
sub
pop
jo
loope
dec
xchg
xchg
sbbb
ss
mov
or
xlat
test
xor
pop
pop
adc
mov
jge
adc
mov
pop
fcompl
out
add
mov
std
push
insb
pushf
pop
cmpb
fistl
add
pop
data16
scas
or
test
mul
in
adc
dec
cmp
xchg
xor
loop
fisubrl
xor
inc
out
mov
mov
rcl
pop
shlb
jge
xchg
jns
mov
sbbb
add
fsubrp
jae
mov
mov
push
lret
loope
sarb
mov
push
push
out
into
xchg
ret
ss
outsl
cwtl
test
iret
jl
xor
fisubl
xor
xchg
cmc
dec
jmp
dec
push
in
dec
adc
push
loop
dec
push
mov
int
sti
adc
icebp
pop
mov
sub
and
jle
xlat
daa
mov
mov
sti
dec
mov
xchg
inc
dec
inc
imul
xor
sahf
mov
mov
jns
pop
xchg
movsl
pop
mov
jp
mov
imul
jne
faddl
jl
jp
jmp
rcl
adc
xchg
inc
sahf
xor
mov
out
cmp
dec
push
push
adc
jbe
insl
mov
test
flds
sbb
cmpsb
fdivl
jecxz
clc
out
pop
adc
ret
push
scas
mov
jmp
adc
push
xchg
pop
sub
bnd
cmp
lahf
imul
shl
push
mov
and
loop
pop
push
repnz
adc
pop
jge
adc
sub
hlt
push
push
cld
imul
out
xchg
imul
inc
mov
push
inc
std
in
inc
push
movsl
cmc
into
cmpsb
push
sbb
rorl
ret
dec
shll
dec
and
xor
inc
mov
out
shr
cmp
lret
ret
mov
out
or
or
hlt
cmp
mov
sub
cmp
push
inc
adc
test
enter
cmpl
xor
fcomps
mov
or
jg
mov
cmp
dec
pop
push
out
scas
inc
es
lock
js
filds
and
sub
add
jp
pop
xchg
sbb
addr16
in
dec
sbb
push
cld
mov
sbb
and
cli
loope
gs
xchg
sub
jp
jo
jl
das
push
xchg
mov
mulb
adc
jecxz
sbb
mov
push
mov
repnz
nop
sub
popa
pop
push
hlt
test
lea
shl
pop
mov
jb
push
cmpsl
push
shrl
xchg
insl
iret
dec
insl
dec
std
sub
sbbb
repz
into
inc
xor
push
hlt
movsb
mov
call
leave
sub
addr16
into
push
or
add
adc
scas
pop
ss
scas
lahf
lods
cmp
adc
inc
ja
in
and
movl
xchg
xor
aad
add
inc
in
jmp
jecxz
std
in
jle
or
adc
stos
repz
push
jns
jmp
into
test
dec
aas
cmp
ljmp
les
bound
dec
lcall
or
jle
adc
push
pusha
inc
sub
pop
cli
cs
xor
in
mov
jbe
test
mov
mov
and
mov
lcall
sbb
shll
stos
pop
in
in
insb
movsl
sbb
sarl
mov
sub
cmp
repz
jb
xor
mov
jne
inc
add
sbb
push
sbb
rcl
lods
movsb
jns
push
mulb
add
bound
lds
sub
cmp
fcmovne
insl
subl
in
jge
and
and
ss
test
dec
mov
cmp
add
push
push
pop
push
cltd
loopne
mov
cmp
std
or
add
push
ja
inc
mov
scas
sub
cmpsb
daa
mov
sub
and
pop
push
out
or
pop
mov
mov
xor
aas
lods
and
jnp
jg
out
cmp
mov
in
sahf
adc
pop
adc
push
in
dec
mov
inc
addl
arpl
jmp
dec
div
xor
loop
je
xor
imul
mov
pop
inc
stos
cmp
pop
inc
mov
lea
or
fsubrs
inc
enter
mov
lods
movhlps
mov
sbb
je
notl
repz
mov
aam
push
loopne
add
mov
fbld
and
sub
xorb
aad
inc
adcb
nop
lock
and
arpl
mov
lcall
jmp
aaa
jb
cmpsl
xor
movsb
jb
mov
shl
in
stos
mov
dec
mov
pusha
fnstsw
mov
ret
ja
pop
outsb
push
mov
shlb
imulb
lcall
outsb
cli
xchg
dec
pop
nop
jnp
ja
out
mov
fdivrl
int3
addb
roll
lret
vminpd
sub
les
mov
sbb
jge
pop
adc
in
arpl
inc
or
xchg
xchg
fld
mov
insb
inc
mov
dec
push
xor
push
out
inc
pop
mov
adc
rcl
xlat
out
setbe
das
mov
push
xchg
ret
dec
int3
not
nop
popa
enter
and
xchg
stos
sbb
and
scas
lahf
add
xchg
xlat
inc
cld
loope
pop
bound
test
cmpsb
inc
push
outsb
pop
arpl
add
fdivrp
adc
cmpsl
lods
lods
outsl
push
fstl
inc
pop
dec
std
pop
xor
mov
mov
fdivl
jno
test
xlat
mov
xor
nop
mov
out
movsb
outsl
mov
out
mov
mov
sub
adc
insl
cmp
fwait
push
push
mov
fisttpll
push
mov
sub
mov
mov
jo
sbbl
and
das
stos
push
mov
mov
and
adc
test
jge
movl
sub
mov
lahf
sti
jae
add
sbb
test
and
sbb
adc
sbb
sbb
das
cmp
push
fsubrl
pop
mov
push
jb
hlt
jns
out
pushf
inc
sub
imul
push
in
fbstp
cmp
dec
cmc
loop
pop
rcrb
jg
xor
cwtl
dec
out
add
inc
in
or
xor
mov
into
mov
mov
xchg
loope
push
mov
stos
mov
scas
cmp
inc
mov
inc
clc
or
mov
dec
add
jno
xor
push
aad
popa
int3
pusha
jbe
in
jae,pt
inc
sub
fwait
stc
test
fsubrl
pop
xor
pop
mov
aam
ljmp
mov
pop
clc
aaa
lret
sahf
cmpsb
lods
dec
mov
adc
jo
insl
imul
dec
dec
jns
mov
adc
jae
ljmp
cmp
js
cmp
or
push
ret
mov
ds
push
pushf
mov
data16
push
cltd
push
sub
stos
int3
out
loope
test
decb
mov
add
iret
test
stc
push
fwait
addr16
jge
ja
inc
outsb
mulb
xor
jno
adc
lret
jp
sub
mov
mov
js
enter
shl
mov
sbb
les
leave
mov
dec
adcb
aam
cmp
mov
fcoml
mov
prefetch
in
fimull
lock
rolb
adc
or
lock
jb
dec
mov
mov
lock
js
cmp
push
scas
int
enter
pop
mov
or
out
mov
movsl
pop
xor
inc
mov
mov
mov
movsb
leave
lahf
cmpsl
add
inc
cmpsl
jns
xchg
push
add
lahf
pop
enter
fdiv
fidivs
cwtl
xchg
popf
xor
jns
mov
lahf
cld
sbb
mov
mov
cmpb
adc
cmpsb
das
mov
sbb
dec
xchg
aad
data16
jnp
dec
push
and
push
rolb
mov
pushf
mov
mov
push
leave
nop
lea
xor
bnd
lods
xor
mov
fdivrl
fimuls
sub
sbb
outsl
sub
mov
mov
jne
clc
sbb
jle
jae
cmp
mov
sub
mov
aas
arpl
mov
fs
jns
fdivrl
js
cs
mov
sub
add
sbb
sbb
or
xchg
xchg
idivl
popa
mov
ljmp
pop
pop
int3
or
push
shr
mov
xor
out
test
lcall
or
inc
and
cmp
cld
jp
pushl
call
mov
enter
push
loope
sbb
lret
es
leave
add
popf
pop
jno
add
data16
pop
fisubl
adc
push
add
movsw
mov
xchg
lods
nop
jno
sub
and
mov
ljmp
dec
in
pop
cmp
jl
loopne
and
daa
xchg
inc
inc
sbb
cwtl
and
aad
sbb
iret
lret
add
aas
insb
loop
inc
fs
in
sbb
je
inc
imul
cltd
inc
andb
popa
or
and
rcr
cld
jp
in
adc
fiadds
sub
fcompl
call
insl
fisubrl
cs
cs
mov
paddw
or
cld
imul
mov
sbb
inc
in
adc
mov
or
lods
mov
mov
movsl
cmp
adc
test
mov
push
jbe
or
fnstenv
in
fcmove
jb
hlt
test
popf
push
bound
fstps
push
pop
outsb
fsts
xchg
lds
shll
inc
dec
push
aad
dec
int
out
test
shl
adc
movb
inc
stos
sbb
test
or
stc
mov
scas
jle
mov
jmp
loopne
jbe
movb
and
repnz
sbb
and
xor
adc
sub
push
mov
shlb
hlt
out
outsb
lods
ficomps
mov
arpl
cmovbe
cmp
add
imulb
xchg
fs
lret
push
dec
enter
sub
loopne
cmp
movsb
lea
sarl
mov
pop
mov
mov
mov
movw
ss
popf
mov
scas
lcall
push
iret
push
mov
loopne
adc
or
push
pop
jg
mov
jno
inc
mov
jo
add
test
aas
stos
xchg
mov
ljmp
cltd
inc
adc
mov
xor
adc
mov
shll
add
sub
and
mov
dec
jl
sbb
pop
pop
ret
or
mov
sub
out
repnz
outsb
mov
fistpl
scas
flds
mov
pop
and
lcall
into
xchg
xchg
fcompl
mov
cmp
inc
jns
push
jg
sarl
test
mov
push
push
repz
jmp
stc
mov
js
sub
mov
dec
stos
rol
rcll
aas
mov
xchg
xchg
or
and
fsubrl
sub
pop
pop
mov
cmp
sbb
hlt
mul
cmp
inc
dec
aad
push
cmp
loopne
cld
ret
ret
jns
and
sub
jle
lods
xor
dec
dec
adcl
push
cli
mov
push
das
push
std
push
jp
dec
icebp
testl
jns
fcomip
mov
xor
mov
mov
cmp
push
mov
ljmp
inc
ret
jo
adcb
or
pop
lock
xchg
shrl
nop
sbb
jbe
lcall
mov
in
nop
xor
jmp
jge
pusha
xor
cmp
and
das
xor
jle
hlt
cmpsl
popa
mov
pop
adc
push
mov
adc
pop
pop
sub
data16
dec
cmp
dec
dec
decb
fxch
popa
sub
ss
call
and
out
aad
leave
push
ds
mov
push
mov
sub
fwait
dec
jmp
shlb
xor
pop
fcoms
repz
mov
xor
data16
bound
cmp
sbb
imul
outsl
rcrl
cmp
aas
enter
jae
push
inc
or
push
adc
ret
adc
mov
nop
and
jnp
mov
jno
test
shlb
in
jmp
mov
cmp
cs
daa
push
fstl
and
sbb
sar
adc
enter
andl
sbb
rcrl
inc
mov
stos
xchg
dec
insl
in
cmp
fisubrs
fwait
push
movsb
cld
cmp
xchg
adc
movb
aad
xor
mov
xchg
add
xor
pop
mov
xchg
or
clc
mov
lret
fistps
dec
and
dec
fwait
pop
or
lcall
dec
xchg
pop
daa
scas
cld
rorl
aaa
imul
push
add
sbb
sub
and
sahf
or
cltd
lret
add
dec
pusha
test
jl
nop
mov
dec
fsubs
daa
jno
jmp
jno
in
loope
lret
and
imul
adc
jle
xchg
or
and
mov
lds
jp
sbb
add
xor
shlb
test
subl
inc
fsubrs
xchg
hlt
aam
sbb
mov
inc
push
push
arpl
lret
cmp
push
lods
mov
movsb
mov
sub
ficomps
jl
mull
in
dec
mov
es
cmp
sti
xor
aam
mov
ret
adc
mov
lret
dec
cs
jl
dec
daa
pop
fidivs
xchg
push
lret
in
dec
pusha
cmpl
xchg
loope
orl
sbb
jae
xor
js
cld
adc
popa
lea
vpsubusw
inc
xchg
sti
mov
call
bound
sub
in
jbe
push
xor
inc
in
les
mov
imul
es
aas
leave
imul
repz
pop
jae
icebp
xchg
ljmp
sbb
in
xchg
xor
aaa
jbe
aas
mov
xchg
out
and
lea
inc
insl
dec
jge
cmp
ja
js
xchg
dec
fisubs
sub
xor
cwtl
mov
daa
arpl
lods
sbb
in
jp
mov
mov
loope
popf
add
sbb
int3
imulb
sub
jo
fiaddl
ljmp
fbld
orb
jo
mov
xor
int3
xor
mov
mov
outsl
ja
aaa
mov
pop
jo
ss
out
out
dec
mov
test
outsb
adc
jne
mov
lret
adc
mov
jp
jecxz
mov
enter
and
push
jnp
fdivrl
cmp
cmp
pop
pop
into
aam
addl
push
jecxz
push
add
loopne
dec
scas
and
in
pop
inc
adc
iret
call
jmp
cmp
fcoml
call
push
movsl
jl
inc
shll
inc
dec
and
xor
jp
dec
arpl
xchg
or
or
paddsw
test
lods
sbb
stos
jmp
ja
lret
xor
pop
add
push
or
xor
imul
sub
call
inc
das
outsb
ljmp
sub
jae
inc
inc
jns
test
gs
es
xor
shrb
lea
add
jbe
mov
xor
jecxz
dec
das
jge
xchg
cmc
xlat
daa
loope
mov
insb
adc
xchg
mov
out
dec
and
incl
pop
fdivrp
xor
mov
pop
jl
add
push
pop
dec
inc
shlb
jg
mov
mov
push
xor
stos
jecxz
mov
jl
out
sub
mov
sub
sub
push
outsl
ja
jmp
daa
push
inc
filds
add
dec
jae
cmp
inc
loope
lods
dec
add
or
push
mov
jnp
imul
and
push
mov
aaa
sbb
lods
push
stc
fidivs
cmp
es
aad
lea
aas
cli
inc
dec
add
dec
and
je
sbb
mov
cmc
test
sbbb
test
test
hlt
add
jg
sub
aad
adc
xchg
inc
out
popa
rcrl
rorl
cli
xchg
push
sahf
adc
xchg
xchg
inc
or
push
negl
lods
jo
cli
cmpsb
inc
incl
int3
pop
aaa
cmovns
add
dec
adc
aad
into
mov
repz
dec
lds
ds
jae
lock
enter
cmp
sbb
cwtl
or
imul
test
je
roll
sub
lret
jl
push
push
in
jmp
jmp
ret
mov
ficoms
mov
push
mov
push
or
sbb
idivb
aam
or
popf
xchg
pop
insb
pmaxub
into
adc
outsl
rcrb
xchg
call
sti
hlt
hlt
or
repz
xchg
and
cmpsb
inc
push
fstl
je
sahf
lds
mov
xor
push
outsl
mov
sub
pop
frstor
push
icebp
loopne
cmp
bound
inc
lock
jp
loop
subb
je
jl
adc
xchg
cmp
pop
mov
mov
in
jecxz
mov
aad
loopne
mov
sbb
repz
arpl
out
shlb
mov
mov
fsubs
fs
rolb
ret
lea
mov
pop
sbb
repz
shrl
gs
jnp
cmc
and
mov
inc
insb
mov
fistps
inc
rol
inc
aad
scas
lock
dec
xorb
sbb
and
and
cld
or
inc
adc
mov
jo
aas
xor
sbb
ss
fsubrl
lahf
mov
and
psrlw
and
jge
mov
and
int
mov
stc
xchg
xorl
aad
lods
pop
and
pop
add
cwtl
arpl
or
jl
mov
stc
mov
inc
jg
scas
insl
xchg
mov
data16
movsb
jle
sub
addb
sub
test
jbe
push
add
cltd
xchg
lea
ret
mov
inc
sahf
negl
addr16
push
or
fsubrl
faddp
add
popa
ret
out
mov
cmpsb
popa
stc
scas
mov
iret
push
out
add
sub
mov
sahf
inc
xchg
xor
mov
mov
stc
xchg
or
push
add
xor
mov
push
xchg
or
dec
sub
push
into
sbb
imul
inc
sbb
int
test
inc
popa
outsb
sbb
mov
inc
pop
or
fldt
dec
mov
cmp
cmp
test
out
sarl
aaa
lea
jl
dec
jnp
cwtl
jecxz
push
mov
and
cmpsl
sti
or
jp
ds
and
pop
jae
sti
ret
jne
sub
cmpsl
adc
ret
popf
fwait
mull
imull
icebp
mov
test
dec
dec
sbb
xor
sbb
inc
xchg
jne
sti
sahf
inc
adc
fprem
pop
lea
cmpsl
push
xchg
xchg
rol
xchg
paddb
xchg
jnp
roll
inc
pop
testl
pop
icebp
pushf
push
push
test
push
scas
gs
outsl
sub
sbb
mov
cld
and
xchg
inc
xchg
add
ficoml
rclb
out
mov
mov
push
sti
cmpsb
mov
xchg
mov
lds
imul
shll
pop
jne
and
pop
add
sub
scas
lret
out
or
popa
cld
pop
loop
loop
mov
test
cwtl
stos
cld
adc
mov
xchg
mov
arpl
add
push
sub
and
xor
leave
jecxz
int3
aad
fdivr
roll
outsl
inc
pop
or
add
mov
push
repnz
pop
dec
cmp
in
add
dec
in
adc
push
addr16
and
sarb
and
push
sub
sub
scas
mov
lret
jge
mov
lds
xchg
cltd
xchg
scas
push
dec
adc
push
jno
push
sbb
mov
mov
lret
jg
cmp
mov
stos
out
leave
jl
cmpsb
inc
jle
mov
jp
insl
data16
adc
mov
lods
test
dec
mov
clc
mov
xchg
mov
or
sti
jle
xchg
sbb
cmp
xchg
push
xor
sub
ret
imul
jecxz
out
faddp
mov
fildl
arpl
xchg
mov
or
lock
pop
mov
arpl
adc
xlat
lcall
jmp
or
call
push
aam
cmc
loopne
cltd
jb
into
bound
add
cltd
push
cli
dec
in
lods
push
sub
icebp
gs
jnp
in
les
mov
and
ret
jecxz
pop
mov
lret
aas
pop
fldt
das
dec
ss
and
stos
push
int3
dec
mov
imul
jne
outsl
addr16
or
mov
not
cmpsl
inc
fcoml
dec
inc
js
gs
test
push
sub
mov
outsl
sbb
testl
cmp
cmpsl
loope
icebp
out
mov
popa
push
test
mov
loopne
es
pop
js
lods
jbe
shrb
pop
bound
orps
or
fisubl
sbb
mov
cmpsb
sub
push
mov
cmc
scas
mov
stos
inc
out
loopne
sub
lods
mov
outsl
push
jmp
mov
inc
fs
imul
jmp
dec
jae
addr16
mov
jg
and
icebp
sbb
jne
push
push
and
movsl
inc
jecxz
test
sub
lock
insb
cmp
test
mov
lahf
testl
incb
add
aaa
movsb
ja
and
imul
pop
pop
push
mov
fistl
mov
test
mov
inc
lods
sbb
sub
inc
cmp
jmp
add
lahf
fidivs
popf
fisttpll
sub
js
mov
mov
lds
cmp
ret
inc
add
push
lahf
in
mov
mov
test
sti
jb
jl
pop
mov
jnp
jno
cli
mov
inc
adc
jp
lcall
sub
push
mov
cmp
dec
ja
jge
mov
inc
push
popa
xlat
dec
fdivrl
test
popa
jae
in
loope
std
add
and
push
mov
push
mov
stos
sbb
adc
pop
loopne
out
push
iret
fnstenv
push
ljmp
lahf
mov
shrl
sub
icebp
jb
fidivrs
cmp
test
mov
popa
ror
cld
inc
inc
cwtl
sub
xor
mov
and
and
sub
lds
addr16
and
enter
outsb
test
mov
cmc
inc
jbe
gs
add
ret
mov
inc
mov
jne
je
xchg
xchg
and
xor
out
mov
stos
fistl
lock
pushf
inc
pop
add
shl
insl
mov
push
sbb
mov
pop
shll
mov
sbb
stos
sub
out
push
pusha
lret
push
sub
outsb
repz
lret
repz
xor
ljmp
adc
and
xchg
mov
scas
mov
insl
sbb
rcll
or
sub
pushl
insl
outsl
cmpsb
in
sbb
subl
jmp
repnz
push
sahf
pop
cmp
test
xor
leave
fcomps
ds
dec
out
sbb
ljmp
call
cltd
dec
inc
cmpsl
dec
lea
mov
jnp
int3
mov
inc
sarb
cld
imull
iret
jne
shr
sbb
fwait
int
xor
jns
mov
popf
xor
pop
ss
pop
sub
out
repz
imul
addr16
xchg
outsl
sub
mov
push
es
andl
inc
rcrl
mov
sub
and
jb
vmulps
fisubl
fisubrl
test
daa
cmp
ljmp
pop
fists
mov
pop
push
das
int
icebp
scas
iret
test
insl
popl
psubw
int3
stc
cld
inc
mov
or
mov
jl
icebp
mov
mov
adcl
sub
cwtl
sbb
xor
inc
inc
mov
xor
mov
repz
ljmp
aas
repnz
jl
pop
call
jmp
sbb
sbb
mov
in
ljmp
imul
fistpl
aas
and
push
or
jl
hlt
xchg
aam
pop
sarb
dec
in
lock
dec
and
clc
jns
out
or
jmp
loop
xor
jb
add
inc
loopne
adc
cld
push
lret
inc
insb
jb
jnp
fwait
jbe
push
sbb
adc
jbe
rclb
int3
cwtl
xchg
loope
sub
sub
inc
repnz
and
mov
ja
outsl
jb
push
jp
stos
xchg
push
fdivrp
push
stos
mov
mov
jnp
adc
push
shrl
aam
dec
mov
mov
dec
jmp
mov
daa
jl
lcall
out
pop
dec
fimuls
int
xchg
dec
out
mov
mov
aas
mov
sub
cld
outsb
cltd
jle
lods
lock
pop
fs
scas
inc
inc
xchg
lea
xor
cmp
adc
mov
add
enter
cli
xchg
xor
shl
bound
push
pop
mov
mov
mov
clc
cmp
scas
mov
jl
adc
lods
jae
jle
xor
add
jnp
arpl
inc
cltd
pusha
add
inc
imul
cmp
out
mov
ds
pop
lcall
fcmovbe
loop
xchg
mov
jne
cli
cld
sub
scas
jmp
ds
xor
xor
sub
imul
push
and
pop
mov
pop
pop
sub
sbb
or
dec
pop
repnz
pop
shll
xor
sub
dec
aaa
int
fistps
or
xor
js
fxch
sub
cmp
pop
sbb
repnz
cld
jno
idivl
notb
pop
or
shlb
in
sarb
outsb
jecxz
in
into
shl
xor
cmp
or
push
and
jns
push
cltd
in
and
popa
jne
sub
sub
popf
in
lods
mov
and
stc
pop
mov
adc
sub
xchg
mov
gs
in
call
dec
scas
mov
push
xchg
fiadds
mov
lods
mov
jbe
gs
mov
std
add
mov
mov
nop
and
iret
mov
mov
pushf
in
ret
dec
int3
jle
add
mov
insl
jno
mov
and
mov
int
lret
daa
xor
sub
cmp
mov
cli
xchg
mov
and
or
pop
clc
mov
sub
iret
out
test
cmc
into
andb
pusha
repnz
xchg
cmp
push
loopne
lret
dec
push
movsb
sbb
fstpt
cltd
add
pop
push
push
scas
je
inc
pop
jo
push
xor
ror
cmp
enter
xor
clc
inc
popf
std
inc
movsl
lret
mov
sub
xchg
cld
in
addr16
pop
add
mov
xchg
adcb
outsb
mov
add
inc
lret
repnz
shl
xor
sahf
mov
int
dec
mov
data16
mov
add
add
push
sub
sbb
sbb
xor
test
and
shrb
nop
mov
and
pop
sti
add
sub
fwait
test
push
sti
test
shll
mov
orb
sbb
jmp
xor
mov
adc
inc
xchg
pop
in
add
adc
jno
jle
mov
std
dec
enter
mov
or
inc
sarb
push
jl,pn
mov
or
dec
clc
aaa
std
cmpsb
sub
add
mov
loopne
es
sub
mov
inc
lahf
lods
dec
sub
shrl
xchg
pop
in
or
mov
xchg
ret
mov
pop
jmp
sbbl
inc
mov
mov
loopne
sbb
iret
inc
movsl
insl
push
add
int3
push
and
in
push
mov
mov
das
pop
adc
lahf
fsubrl
push
popw
pop
jbe
fistpll
mov
or
cmpb
insb
dec
inc
mov
sub
inc
dec
lcall
inc
imul
push
les
and
ja
out
aam
sbb
imul
and
push
jbe
pop
in
dec
divb
pop
aad
push
cwtl
add
stc
shrb
inc
inc
jecxz
mov
jge
mov
std
fisttpll
rcr
dec
xlat
insl
mov
mov
sub
lret
int3
push
ficoms
mov
aas
stos
push
jge
bound
mov
into
loop
cwtl
into
sub
mov
jae
inc
xchg
ret
ja
cmc
add
pop
fdivrl
stos
inc
fildl
push
add
xor
sbb
ljmp
iret
pop
cmp
call
cmpsl
leave
dec
jbe
aam
push
push
les
iret
pop
mov
lea
repz
inc
cmc
fdivr
push
mov
sub
clc
add
mov
adc
test
xlat
mov
cmpsb
cmpsl
or
inc
jns
cmp
jae
sbb
into
xor
add
inc
insl
add
lods
fdivrl
adc
outsl
loope
stc
enter
std
push
stos
xchg
fs
adc
adc
jb
and
mov
mov
cmp
add
ret
stc
adc
pop
jno
mov
mov
push
push
pop
leave
jle
cmovle
in
pop
adc
stos
ret
imul
jbe
in
and
mov
jne
mov
enter
gs
mov
dec
repz
sti
xor
inc
clc
sub
ret
inc
fwait
sbb
call
push
imul
add
insb
aad
jp
arpl
loopne
fcmovb
decb
adc
andl
sbb
cmovl
shlb
jecxz
cmp
js
dec
clc
or
movsb
lock
mov
sub
add
cwtl
push
rol
int
inc
lods
repnz
cwtl
dec
or
adc
shrl
sbb
push
inc
arpl
inc
xor
dec
dec
lock
shrb
ffreep
cwtl
push
push
fldcw
dec
sbb
cs
mov
shll
pop
mov
sahf
addr16
dec
fistpl
jb
push
sti
cli
stos
iret
push
in
mov
inc
xchg
cld
xchg
mov
sbb
pop
aas
cmp
lock
and
sub
imul
add
xchg
lret
mov
xor
mov
neg
xchg
arpl
mull
add
jnp
ja
cmpb
pop
fcompl
cmp
scas
andb
cltd
fadds
inc
mov
dec
pop
into
lds
push
outsl
pop
arpl
mov
mov
mov
bound
fisttps
shlb
fisttps
xor
fsubs
xor
xchg
mov
fs
pop
xchg
popa
mov
in
push
cltd
int3
sbb
add
fidivrs
sub
imul
scas
iret
push
adcb
cmp
test
fistpll
push
out
scas
mov
cmp
jl
loope
insl
js
lret
movsb
jmp
sbb
mov
aam
jne
mov
mov
add
loopne
bound
rolb
repnz
sti
sub
add
cwtl
std
mov
ljmp
sbb
mov
xchg
popa
loop
cmpsl
xlat
ret
fisubl
lret
pop
mov
gs
sbb
loopne
xor
and
js
jo
dec
xor
clc
and
loop
in
lret
mov
mov
xor
mov
mov
aam
sbb
int3
cmp
push
jg
push
sbb
sbb
xchg
and
arpl
ret
ss
push
loop
adc
call
mov
inc
and
sbb
jne
xor
or
out
pop
push
dec
std
and
xlat
xor
addb
stos
push
lret
pushf
aas
pop
cmp
clc
cmc
out
int
mov
fstps
mov
aad
jb
ret
mov
test
shlb
fwait
add
mov
call
orb
stc
iret
sarb
test
dec
je
cmp
jne
xor
jae
sub
arpl
dec
imul
jne
arpl
fs
cmp
fadd
lahf
out
adc
out
arpl
daa
mov
jg
addl
jmp
sarl
cmc
out
cmp
sub
xlat
and
push
add
mov
push
hlt
mov
adc
ja
add
loopne
repz
lock
fwait
in
lds
xchg
adc
xchg
aam
pusha
into
adc
mov
aaa
lea
sti
pushf
and
popf
xchg
fwait
ss
push
out
mov
jne
sub
xchg
add
out
imul
and
and
out
out
ja
sub
pop
mov
mov
xor
xor
enter
imul
je
shlb
loop
and
scas
jnp
adc
or
testl
scas
mov
idivl
das
andb
cli
cltd
cli
enter
push
pop
add
jmp
mov
ljmp
orl
adc
aaa
push
inc
xlat
movl
out
mov
mov
scas
cmp
mov
push
sbb
fiadds
xchg
sub
outsb
push
mov
mov
mov
out
lods
sub
in
int
xlat
dec
push
mov
mov
in
test
ss
add
ror
test
adc
jno
mov
aad
or
jg
sub
movl
jge
fwait
pop
inc
aas
cmp
add
rclb
cmp
cmpsb
dec
push
add
lock
inc
aam
shl
xor
in
fimull
aam
sti
or
inc
sub
insl
cltd
adc
fs
repz
out
pop
mov
outsl
or
jnp
hlt
int3
notl
jb
clc
scas
mov
adc
add
push
mov
andl
sbbb
in
add
sbb
in
pushf
add
popa
popa
in
mov
xchg
push
xor
daa
lea
mov
add
hlt
adc
ret
jbe
test
imul
bound
ljmp
subb
mov
sbb
push
jl
cmp
jno
sbb
add
mov
mov
sbb
into
sahf
push
bswap
sbb
arpl
xor
adcl
push
adc
ds
inc
arpl
in
push
inc
jg
mov
cmp
ljmp
scas
mov
or
add
jne
dec
mov
push
add
sub
jle
xor
adc
mov
mov
cmp
fdivp
inc
inc
fisttpll
imul
lahf
iret
mov
fsubr
test
or
push
test
cwtl
enter
fwait
jbe
mov
stc
add
shlb
shll
ret
repz
nop
mov
lahf
and
fs
fcoms
pop
mov
adc
xchg
icebp
mov
mov
push
mov
repz
mov
and
sub
mov
in
lret
push
adc
pop
aam
rcr
xor
rcl
roll
pop
rolb
jmp
adc
mov
push
das
adc
fwait
repnz
cmpsb
mov
mov
sub
out
lret
add
int
push
popf
loop
call
inc
out
aam
addb
fstpl
adc
xchg
pop
push
lock
aaa
mov
sarb
jge
mov
imul
xchg
icebp
shl
inc
and
mov
inc
mov
mov
mov
and
stc
fistps
sbb
es
lret
mov
or
out
fdivl
popf
inc
mov
push
xchg
rclb
pop
mov
cld
in
subb
pop
aad
xor
test
sub
leave
or
mov
jl
leave
add
std
pop
push
push
sub
xlat
inc
jb
sar
xchg
mov
repz
jbe
add
pop
loopne
mov
xor
push
out
lret
cld
mov
xchg
aas
mov
fwait
jne
dec
sti
push
cmp
push
andl
aam
ret
aam
popf
sub
jbe
cmc
push
pop
xchg
jne
mov
rcl
and
mov
mov
xor
hlt
pop
mov
lahf
jnp
and
int
push
push
cmp
lods
adc
push
xchg
inc
cmp
aad
rclb
popa
sbb
xchg
lcall
test
push
mov
mov
xor
imul
xchg
loop
std
pop
xchg
and
shll
mov
daa
mov
jp
shlb
jp
pop
mov
cmp
dec
ja
daa
push
mov
popf
push
repz
ret
iretw
stos
jae
sbb
mov
call
and
xchg
sti
xor
movsb
cwtl
cmp
cmpsl
test
or
lcall
call
push
stos
je
xchg
inc
ss
aad
inc
mov
xor
clc
mov
mov
jnp
mov
arpl
or
nop
cmp
xchg
aaa
cmp
mov
inc
jl
fsubs
or
push
int3
pushf
lods
sub
sub
jbe
sbb
jle
xor
mov
cmc
add
fiadds
stc
mov
test
std
adc
stos
jl
jnp
lock
sahf
dec
lock
jg
xor
pop
fwait
in
mov
mov
addb
xor
cli
int
popl
xor
mov
mov
or
test
cmpsb
fs
std
lea
daa
loopne
popf
xchg
test
ret
popa
dec
adc
dec
xor
and
sub
movsl
jl
cmp
jns
fists
pop
int3
loop
in
add
mov
jne
sti
scas
roll
inc
out
aaa
mov
clc
in
pop
aaa
adc
bndstx
in
dec
mov
fst
sbb
in
fs
add
pusha
repnz
in
scas
xor
jno
aam
pop
jecxz
xchg
cmp
outsl
cmpb
pop
xor
mov
cltd
fs
loope
mov
dec
daa
mov
fstpt
push
ds
mov
cmp
sahf
sub
xchg
fisubs
jge
test
ljmp
mov
fwait
xchg
sar
mov
adcl
xor
mov
push
push
test
stos
jnp
mov
inc
and
daa
sbb
pop
rolb
dec
mov
fstpt
pop
cmp
sbb
cltd
mov
ret
cltd
in
scas
lahf
mov
add
pop
mov
inc
clc
add
mov
shlb
cmp
dec
cs
clc
cmp
into
mov
divl
add
rclb
addr16
add
mov
rcrl
cmpsb
mov
fistps
lods
mov
sti
xchg
or
sahf
fadd
rcl
cld
mov
gs
cli
int
les
out
xchg
arpl
and
loope
repz
das
cmp
or
call
loopne
fwait
adcl
out
test
movsl
test
xchg
mov
aam
sarl
popa
aad
out
mov
xchg
inc
cld
xchg
xor
enter
sysexit
inc
push
or
repnz
xchg
xor
test
lret
daa
aad
and
loop
gs
or
xor
xlat
out
int
push
loope
cmpsb
jl
cmpsl
lcall
jnp
leave
xchg
mov
mov
jmp
jne
in
mov
add
cld
mov
inc
dec
outsb
push
fwait
sarl
jg
jle
lahf
adc
fidivrl
or
divl
jbe
and
fbstp
ret
out
inc
push
inc
or
pusha
out
cmp
fucomp
dec
or
add
aad
pusha
int
mov
cmc
xor
test
push
ret
ffreep
inc
icebp
test
or
inc
mov
pop
dec
mov
stos
insb
in
fistps
cmp
aad
xchg
dec
orb
rol
dec
fs
in
sub
adc
push
lcall
cmpb
int3
xor
xor
lcall
bound
test
jne
adc
ret
or
dec
push
jg
test
cmpsl
shl
outsb
sub
add
push
andl
insl
push
mov
popf
push
add
psrlw
xor
mov
sub
out
negb
ss
movsb
adc
xor
inc
mov
outsl
loope,pt
stos
mov
les
out
pop
pop
call
xor
and
mov
pop
das
pop
mov
pop
mov
repnz
cli
mov
jb
cmc
push
inc
and
std
jbe
xor
mov
sbb
lock
mov
cmpsl
outsb
xor
xchg
or
movsl
push
cmp
rorl
nop
sub
mov
out
movsl
loopne
std
xor
insb
cwtl
gs
and
xchg
aam
es
out
pop
xor
sub
test
mov
dec
mov
pop
sbb
xor
inc
cmp
mov
adc
int3
cld
pop
jp
or
dec
jno
cmp
sub
add
test
loopne
lods
dec
jnp
add
mov
push
pop
shlb
sti
jae
fdivrs
pop
rclb
jnp
hlt
sar
pop
test
cmp
inc
push
test
data16
mov
sbb
cmp
mov
divl
xorb
lea
mov
js
jg
add
call
inc
fwait
jnp
xchg
sub
mov
lcall
imul
sarl
mov
jge
xchg
dec
inc
cmp
loope
scas
outsl
in
pop
je
xchg
xor
mov
int3
xor
notb
test
test
repz
cmp
or
fucom
in
xor
xchg
cmp
fstl
mov
gs
push
loop
sbb
scas
and
arpl
les
mov
cmpsb
pop
fistps
jb
mov
mov
aaa
cs
lock
xor
lret
enter
push
push
test
movsb
sbb
std
lock
push
gs
or
iret
add
loop
je
pop
add
arpl
dec
push
shll
sbb
insb
int
lcall
cld
cmp
scas
or
push
hlt
mov
inc
cmp
xlat
outsb
mov
cmpb
mov
popf
decl
in
mov
or
lods
jns
dec
or
adc
mov
imul
sub
clc
insb
xor
xor
insb
sbb
call
mov
xor
pop
mov
stc
cltd
xchg
add
sbb
pop
out
adc
ds
fldl
outsl
jae
jne
push
mov
out
idiv
mov
push
push
and
jle
outsb
insl
ss
pop
cmpsl
adc
imul
push
insl
lret
jb
rclb
cld
out
hlt
ss
out
addl
into
mov
ficoml
ret
pop
daa
clc
ret
push
xchg
push
iret
mov
arpl
push
ret
out
scas
pop
jle
push
fisttpll
test
xchg
out
inc
xchg
pop
out
pushf
call
jns
lods
and
and
ja
push
jo
ds
push
sbb
push
clc
push
jle
fdiv
push
cld
add
call
fcompl
jecxz
xor
jo
adc
mov
hlt
xchg
mov
jno
lcall
jo
scas
xchg
pop
imul
xor
arpl
jo
jle
in
adc
xor
lock
adc
fidivrl
dec
out
push
addr16
orps
add
cmp
pushf
jle
jg
ljmp
or
mov
jg
stc
repz
lock
notl
js
jmp
clc
and
mov
popf
xor
add
imul
shl
xor
push
testl
inc
jg
sbb
cltd
pop
ret
aad
and
pop
adc
pop
enter
in
and
dec
push
mov
xor
outsb
ss
push
cmp
adc
jo
fldenv
mov
test
push
scas
dec
pop
push
xor
das
mov
rol
scas
call
xor
sbb
mov
xor
pop
and
imul
sbb
pop
pop
dec
adc
es
jb
mov
add
xchg
pop
scas
gs
inc
int
xchg
mov
sub
pop
scas
cmp
cli
xor
inc
adc
or
in
inc
lock
insl
push
or
inc
xor
aam
test
outsl
cmp
jb
pop
mov
sub
or
mov
push
not
push
int3
dec
jmp
xchg
imul
dec
cmpb
dec
fwait
pop
aam
cs
aaa
mov
movsb
push
popl
cmpl
movsb
adc
or
jecxz
push
call
pushf
sub
popa
adc
ret
push
mov
std
outsl
nop
push
fwait
and
mov
rol
cltd
aad
and
mov
test
loope
scas
pop
cmp
adc
cli
sub
xchg
sbb
add
inc
sub
fildll
add
test
fimuls
jp
lods
insl
mov
lcall
faddl
mov
loopne
mov
mov
std
push
punpcklwd
mov
incl
pop
fstl
enter
ss
adc
inc
mov
pop
lea
and
ret
pop
jae
out
gs
lret
pushf
js
not
adc
jns
xor
pushf
or
fst
es
fwait
je
fcmovne
add
mov
and
or
inc
push
insl
dec
mov
popa
fcmovb
sub
hlt
lahf
dec
cmpsb
mov
cld
pushf
popa
mov
inc
mov
call
xor
filds
insb
dec
ficompl
dec
fldenv
std
mov
les
mulb
adc
rolb
scas
fisubs
out
fldt
inc
and
aas
popf
mov
ret
insl
mov
fdivrs
jp
out
add
out
sub
inc
and
std
aam
mov
hlt
lahf
shll
das
out
movsb
mov
push
rcl
cltd
pop
sbb
xchg
sub
arpl
jo
jno
mov
xorb
outsl
icebp
cmp
sbb
and
mov
inc
adc
dec
mov
test
adc
push
ljmp
push
popf
cs
into
fs
mov
lcall
pop
hlt
mov
in
lods
mov
mov
xor
lahf
sub
pop
lahf
test
fldenv
imul
mov
pop
cmp
lea
outsl
push
pop
pop
xchg
popfw
rcrb
les
jo
out
data16
loope
lods
int
mov
call
push
bnd
ss
out
cmp
outsb
test
jge
sar
popa
lret
lret
pop
or
int
add
add
fcmovb
jecxz
inc
out
cmp
mov
mov
mov
cmp
shrl
mov
cmp
js
mov
in
fnsave
sub
imul
jg,pt
add
outsl
fadds
jge
push
insl
mov
add
shl
add
pop
pop
es
jmp
std
pop
sub
repnz
mov
sbb
cmp
jl
or
je
fmulp
movl
ror
data16
or
add
pushf
test
xchg
popa
and
rcrb
and
fs
clc
add
dec
mov
imul
addb
or
mov
mov
push
push
mov
inc
mov
mov
ror
scas
adc
cmp
xchg
mov
shrb
jle
mov
ljmp
xor
add
loopne
push
ljmp
iret
scas
pop
fwait
or
dec
push
pop
pop
mov
jb
cmpsl
pop
sbb
ja
in
xchg
fs
lods
xchg
add
dec
push
jns
mov
adc
mov
mov
push
mov
icebp
push
xchg
push
push
and
sub
cmp
sbb
add
jp
fsubrl
adc
xor
mov
cmc
jno
outsb
pop
pop
sbb
sbb
and
and
test
pop
je
xor
sti
jg
mov
dec
add
enter
jb
fbld
nop
loop
sub
mov
lahf
and
push
pop
pop
rorb
mov
sub
hlt
push
nop
daa
rcrl
dec
das
ret
hlt
cmp
jnp
mulb
faddl
push
inc
ja
ds
add
sbb
insb
jecxz
push
les
cwtl
mov
rclb
sbb
in
adc
xchg
outsb
movsb
js
jnp
jecxz
cmp
mov
inc
flds
xchg
jbe
gs
lds
xlat
sti
mov
inc
dec
call
cmc
jae
outsl
jb
outsb
push
hlt
sbb
arpl
jb
aas
cmp
xor
sbb
pop
mov
adc
and
xor
push
cmp
jns
xor
aaa
and
pop
lahf
pop
rcr
lods
mov
ljmp
arpl
jne
int
xchg
mov
push
jp
mov
clc
popa
popf
push
mov
out
mov
inc
add
lods
in
sbb
subl
mov
popa
xor
mov
out
mov
mov
mov
and
inc
xchg
push
imul
fwait
fwait
push
mov
xchg
clc
lea
inc
imul
xchg
mov
mov
mov
lret
adc
adc
lea
imul
xor
inc
push
sbb
mov
shlb
dec
or
dec
mov
mov
outsl
sbb
cmp
xchg
sbb
sarl
test
gs
sub
mov
movsl
push
mov
cmc
jge
insb
sbb
pop
mov
push
loop
cld
aam
ret
mov
inc
int
push
ret
push
cwtl
inc
pop
clc
dec
je
sub
cs
mov
mov
jo
jmp
add
inc
sbb
ja
dec
pop
adcl
bound
jmp
lods
popf
xchg
in
stos
int
adc
jl
jge
adc
fwait
repnz
jbe
jne
imul
mov
mov
stos
fsubrs
loope,pt
xor
add
and
fsts
neg
jecxz
hlt
bound
dec
ljmp
das
std
lds
movsb
es
push
jmp
inc
pop
dec
or
jmp
mov
movsb
push
imul
dec
lods
sbb
clc
and
outsl
nop
insl
adc
sahf
loop
mov
lret
push
je
adc
inc
fbstp
xor
sbb
push
mov
mov
jle
ficoms
mov
xchg
jae
xchg
inc
or
push
adc
inc
xchg
in
xchg
cmp
dec
sub
outsb
out
repz
fcomps
ds
divb
pop
shl
and
frstor
cltd
dec
mov
push
sub
lret
add
daa
stos
cwtl
pop
call
and
inc
inc
push
sub
stos
popf
or
sbb
int
xlat
daa
pop
sbb
incb
mov
rcll
into
notl
push
inc
cltd
xchg
cmp
out
lahf
hlt
mov
inc
mov
xor
mov
push
mov
cmpsb
jecxz
mov
xor
xor
enter
sahf
inc
dec
push
loop
xorb
mov
nop
in
ljmp
cld
jmp
jmp
insl
and
sbbl
cmp
inc
mov
notb
aaa
aad
aaa
mov
out
std
test
in
mov
fadds
aad
addr16
inc
jmp
xchg
cld
jle
xchg
xchg
mov
iret
inc
pusha
xchg
iret
xlat
sub
fidivrs
cmp
fisubl
ret
mov
mov
jne
imul
test
cmpsb
call
add
mov
sub
xor
ja
adc
xor
ficompl
xor
jp
addr16
inc
sti
sub
fwait
push
mov
inc
jge
cli
push
mov
movsl
outsl
mov
or
aas
bound
inc
insl
mov
lcall
loope
call
lret
loopne
sub
adc
jo
jno
inc
mov
cli
test
leave
rcrb
mov
jge
sarl
xchg
inc
ss
pop
out
mov
add
mov
mov
jecxz
dec
and
jns
es
dec
fisubs
out
dec
push
push
mov
ljmp
sbb
cmpb
add
and
ss
push
xor
xchg
sub
in
fistpl
cmp
mov
cmp
add
cmp
int
pop
leave
dec
mov
xchg
and
lret
pushf
sub
mov
inc
mov
pop
loopne
cmpsb
push
inc
shl
mov
cmp
pusha
fs
inc
rorl
out
pop
pop
mov
mulb
lcall
jecxz
fdivl
mul
or
std
test
cmpb
push
std
icebp
mov
adc
cld
lods
test
roll
pusha
mov
jno
pop
shrl
enter
lret
hlt
popl
jb
pushf
sub
ljmp
mov
dec
out
movsb
lds
in
sti
inc
lods
inc
xchg
loopne
inc
scas
push
ljmp
fbld
cmpsb
fisubrl
jp
pop
outsb
pop
ljmp
pop
pop
cmpw
imul
fimull
dec
mov
inc
lcall
cmc
hlt
jne
test
rcll
popa
lods
or
mov
xor
test
pop
push
int
jge
idiv
rcl
pop
in
mov
fsubrl
sub
dec
dec
mov
push
out
pop
test
mov
jae
or
dec
xlat
ret
pop
cmpsl
pop
add
outsb
cmovbe
or
or
xor
fnstsw
loop
dec
cmpb
add
scas
lods
fsubs
stos
mov
add
xor
xor
dec
push
mov
sub
lods
imul
scas
or
movsb
ficompl
add
movsl
bound
sub
inc
cmc
test
xchg
lods
add
and
leave
mov
mov
inc
std
mov
js
nop
push
adc
and
fmuls
ds
add
repz
jnp
outsl
fisttps
mov
fildl
imul
repnz
stc
mov
repnz
jae
cmc
jbe
inc
aad
and
in
xchg
add
icebp
xchg
stos
movsb
adc
ret
das
pop
lahf
pusha
out
push
pop
lods
push
adc
adc
push
fsubrl
add
out
sub
sub
ja
cmp
jnp
push
aaa
insb
enter
xchg
js
sbb
adc
sub
or
mov
sub
or
int
push
subl
mov
sbb
jnp
lret
and
xchg
test
add
xchg
aad
and
sarb
sbb
pusha
and
shl
fwait
dec
loopne
adc
fdiv
lds
mov
mov
or
dec
jg
or
mov
adc
mov
sub
std
mov
sbb
pop
push
or
dec
mov
xor
mov
jae
push
mov
xor
nop
shl
push
test
cmc
inc
pop
lea
cmpl
xchg
mov
add
fsubr
clc
insl
push
xchg
sub
inc
in
data16
js
fsubrs
xlat
xchg
stos
mov
mov
or
sub
cmc
insb
cmpsl
enter
fldt
subb
jmp
push
mov
movsb
mov
pop
push
out
lahf
rorl
or
or
sub
rcl
arpl
enter
mov
xchg
repnz
jecxz
cmp
inc
sti
call
xor
and
test
jp,pt
es
daa
iret
daa
cmpsl
jl
cs
adc
inc
xor
xor
jmp
and
inc
cmp
mov
aam
dec
and
xchg
fidivrs
into
iret
mov
sub
or
add
fldz
mov
or
lock
jge
out
xchg
stc
pusha
or
adc
fstps
rol
push
das
mov
pop
dec
mov
jg
push
xor
mov
or
add
lock
inc
das
cmp
inc
into
pop
cmp
jge
test
leave
inc
cmp
mov
xor
pop
cmp
stc
jne
or
mov
xor
push
sbb
clc
cmc
fdivr
inc
ret
sub
push
sub
xchg
stc
dec
mov
popa
roll
stos
push
cmp
sub
xchg
adc
ret
int3
insb
sbb
cltd
dec
adc
push
js
mov
jno
repnz
pop
insl
adc
push
cmpsl
push
mov
pop
or
mov
cmpsl
jl
jns
mov
add
into
jnp
nop
lea
xchg
fisubl
es
shlb
push
bound
xor
mov
jecxz
and
int3
fidivs
inc
lds
repz
out
ds
ss
ja
jno
xchg
mov
ljmp
mov
jmp
cmpsb
mov
sub
arpl
mov
pop
jp
xchg
int
insb
clc
insb
das
je
bound
and
hlt
mov
outsb
popf
xchg
dec
xchg
adcl
cmp
jge
lods
fcmovb
pop
jg
dec
into
jo
movsl
out
mov
sbb
dec
jns
sub
icebp
xchg
mov
adc
test
xor
mov
aad
jb
outsl
pusha
and
movsb
jle
cmp
mov
movsb
addr16
jae
incl
jmp
lcall
lods
out
mov
mov
iret
in
lods
mov
ret
lock
and
xchg
ja
mov
xchg
fwait
cmp
hlt
int3
lret
lret
push
add
hlt
mov
cmc
inc
test
lret
nop
lahf
and
sub
int
and
add
xor
popa
add
xchg
jne
sbb
pop
mov
cmpsl
cmp
repnz
shlb
mov
sahf
out
test
popf
mov
xor
xchg
push
das
inc
fmuls
inc
cmpsl
inc
or
mov
sarb
mov
outsb
inc
fwait
bound
ljmp
jo
sub
divb
mov
aas
xchg
push
pop
and
jns
dec
in
jp
lret
or
mov
push
in
push
fists
mov
pop
add
add
push
or
pop
sbb
sub
xchg
mov
loop
popf
pop
popf
in
pop
pop
data16
jo
pop
and
cli
mov
icebp
pop
jg
push
or
mov
cmp
inc
push
aam
mov
sbb
int3
shll
inc
shrb
popf
clc
imul
arpl
aam
adc
js
jg
bound
je
lock
in
xor
mov
dec
mov
cmp
pushf
push
mov
sbb
push
fildl
mov
scas
sbb
adc
lock
fwait
bound
cmp
adc
test
frstor
inc
sbb
xorl
test
mov
mov
push
sti
xchg
or
inc
xchg
outsb
mov
mul
pop
aad
sti
xchg
jmp
int3
push
xor
cmp
pop
dec
cvtdq2ps
and
cmpsb
mov
cmpsl
outsb
repnz
daa
aaa
in
in
daa
sub
mov
adc
xchg
lock
add
cmp
push
xchg
jmp
lock
adc
fbld
es
xor
lods
sub
cltd
cli
incl
je
aas
ljmp
mov
jmp
ret
jno
cmp
mov
xchg
inc
mov
mov
mov
xor
clc
sub
imul
popa
int
mov
rcll
or
ds
jno
pop
dec
test
mov
push
jmp
js
adc
mov
push
pop
jmp
nop
push
idiv
cmpsl
sahf
je
or
dec
xchg
inc
xor
cmp
mov
dec
and
out
pop
cltd
rcrb
pop
cmpsb
push
int3
mov
dec
sub
lahf
mov
or
stc
lret
cltd
out
cmpsb
ffree
loop
push
andb
push
pop
out
insb
jnp
add
daa
push
cmp
cmp
out
out
jl
cmp
push
fs
mov
mov
adc
mov
xchg
nop
adc
push
mov
scas
add
xor
mov
std
push
rolb
cmp
adc
cmp
mov
mov
loopne
sub
sub
sub
sahf
add
mov
adc
xor
in
jle
fstpt
sahf
push
in
loop
adc
jae
push
popa
lcall
mov
outsb
nop
orl
cmpb
mov
dec
jnp
mov
inc
adc
jb
sub
addr16
fwait
cld
mov
sbb
fdivs
mov
dec
mov
xor
xlat
sub
xor
push
jecxz
add
pop
pop
mov
subb
into
cmp
mov
push
sub
cmpsb
mov
popf
push
lret
jg
movsl
sbb
testb
out
xchg
dec
sti
cmp
pause
clc
push
stos
ljmp
out
shlb
stos
dec
out
jle
cwtl
jae
and
dec
xchg
test
xor
jne
popf
inc
xlat
shll
and
jp
xchg
mov
mov
mov
pop
pop
sbb
xor
or
stc
stos
hlt
lock
ret
ds
push
xor
add
dec
sbb
jl
test
ss
mov
div
xlat
pop
fdivrl
lret
jns
call
shlb
notb
dec
cmp
inc
cwtl
pop
xchg
ljmp
test
fdiv
push
pop
dec
add
mov
shrl
add
adc
sub
pop
adc
cmp
lret
insl
and
cmc
lea
or
je
iret
rcrl
jp
inc
push
cmp
sub
cltd
lock
outsb
jge
call
push
or
cld
out
shrl
sub
scas
mov
xchg
add
push
arpl
aas
xor
ret
xor
cmpsb
test
mov
mov
enter
pop
sbb
loop
xchg
repnz
xchg
dec
adc
mov
ds
outsl
imul
icebp
or
dec
dec
xchg
stos
cwtl
and
lret
dec
mov
inc
add
mov
out
fcomip
xchg
sub
mov
or
lcall
jbe
test
or
sub
pop
pop
jmp
inc
inc
test
call
pop
sub
sbb
rcrb
repz
subl
shll
lea
ret
push
xchg
icebp
xor
insl
hlt
iret
dec
mov
gs
cmp
rcrb
lods
dec
jge
lds
fldt
out
xchg
jo
adc
imul
mov
jge
push
push
test
fldcw
in
stos
mov
ljmp
fidivrs
lods
push
cmp
mov
or
sahf
cs
stos
and
aam
xor
mov
pop
icebp
add
xor
push
in
out
cmp
scas
jge
adc
adc
or
xor
adc
push
cltd
movsl
sbb
mov
outsb
in
mov
inc
inc
lods
dec
repnz
cmp
cmp
mov
and
pop
repnz
dec
addl
imul
icebp
push
jmp
loopne
outsl
je
mov
push
repnz
mov
shlb
std
je
testl
fwait
jl
xlat
sub
mov
adc
adc
shrl
in
out
imul
repz
fwait
lcall
lock
sub
pushl
je
shll
std
pop
mov
gs
ja
sbb
push
int3
and
movsl
outsb
push
mov
dec
test
clc
jp
test
add
into
mov
xor
add
jmp
lret
jo
push
mov
add
add
xchg
jo
push
cmpsb
insl
push
rcrl
mov
clc
femms
cmp
inc
daa
xor
stc
pop
fs
pop
insl
jle
mov
adc
movsl
imul
jo
mov
lcall
and
adc
sub
popf
call
fmuls
psrld
fs
ljmp
cmpsb
cli
test
fsubl
int
jne
orl
stc
xor
cmp
mov
pop
and
shll
sbb
xor
jno
popf
jb
xorl
jl
jecxz
dec
mov
cli
test
dec
and
cmp
arpl
or
jbe
arpl
xor
faddl
mov
xor
lret
orb
add
push
pop
imul
fdivr
and
leave
in
sbb
or
dec
xor
adc
rcll
data16
int
into
loop
lret
sub
subb
adc
mov
mov
pop
mulb
das
adc
mov
jge
and
mov
arpl
sar
insb
sbb
int
xor
xchg
faddp
xchg
ret
dec
insb
xor
icebp
jmp
jae
dec
pop
lds
sbb
jno
aam
and
in
jge
push
pusha
jno
and
push
repz
scas
sub
add
add
out
int3
mov
imul
pop
inc
sbb
and
jae
aas
dec
dec
push
push
dec
movsl
jno
cwtl
adc
fisubrl
fisttpl
jno
inc
xchg
xchg
std
push
aam
popa
out
test
mov
rcrb
xchg
lea
out
enter
shll
inc
es
test
jecxz
and
jne
daa
xor
call
daa
inc
jg
int3
or
xchg
outsl
push
mov
jmp
ja
dec
mov
clc
test
shll
fildll
mov
iret
rclb
movsl
lods
sub
jbe
rcrl
cmp
push
dec
fisubl
jae
mov
ljmp
adc
dec
mov
cmpsb
cmp
pop
fistl
nop
inc
xor
sub
sahf
push
xchg
sbb
insl
cltd
sub
sbb
bnd
adc
outsb
stos
mov
inc
rcrb
inc
xchg
push
mov
sbb
jno
bound
dec
shrl
je
fwait
in
xchg
repnz
xor
push
jns
and
test
mov
out
scas
sbb
add
add
and
out
in
dec
push
in
sarb
shlb
fdivrl
dec
xor
jg
cmp
rcl
push
cmp
repnz
dec
loope
dec
clc
cmpl
xchg
test
scas
xor
push
adc
or
mov
xchg
out
mov
lods
cmpsb
mov
call
and
test
pop
mov
adc
mov
add
clc
std
stos
fsubrl
or
fcomp
add
cmp
fisttpl
test
pop
sbb
lahf
xchg
cmp
clc
outsl
mov
pop
sub
push
push
test
jle
jno
sbb
cltd
jo
fwait
mov
testb
mov
movsl
pusha
jne
pop
jmp
sbb
pop
xchg
nop
fwait
jns
aas
push
repz
xor
adc
jg
cmp
mov
sub
pusha
icebp
popa
repz
ds
das
es
fmuls
cmp
dec
pushf
ret
sub
inc
adc
dec
sub
adc
sub
ror
push
iret
sbb
mov
in
in
cmpsl
xor
add
xchg
mov
cwtl
xchg
push
data16
dec
sub
daa
rorb
pusha
shll
jns
bound
ljmp
aaa
push
mov
cmp
add
inc
adc
in
cmc
lods
fistl
mov
dec
mov
adc
cmp
cmp
jmp
inc
add
cld
mov
pop
mov
pop
iret
fsubs
dec
scas
mov
sub
in
popf
dec
sbb
cli
mov
mov
fistps
xchg
jnp
jo
or
insl
dec
sti
jmp
int
lahf
sahf
aam
sbb
jo
ficoml
mov
mov
sbb
ss
mov
insb
test
push
push
or
sub
mov
lock
mov
xchg
fbstp
xor
dec
cmc
xchg
pop
dec
cmpsb
pop
popa
in
inc
stos
sbb
jp
popf
add
jmp
inc
add
subb
jg
mov
xchg
xlat
lahf
cmp
or
in
call
sbb
and
scas
lahf
jns
push
loop
aad
sarl
push
sbb
std
mov
pop
cmp
mov
pop
xor
mov
arpl
in
inc
fsubs
pop
xor
push
mov
rcrl
mov
sub
out
sub
or
pop
jle
add
mov
lock
repnz
bound
test
and
lods
jg
ret
data16
or
addb
mov
lcall
cld
popf
push
call
fcompl
dec
fisttpll
jno
aam
inc
xor
or
adc
stos
dec
xor
mov
push
iret
jg
mov
dec
or
imul
imul
dec
mov
ds
fsubrs
and
test
pop
sub
out
hlt
scas
xchg
out
add
jp
out
mov
add
jl
pop
jae
or
test
cld
xor
mov
mov
and
sbb
xorb
push
sbb
push
in
outsl
adc
stos
adc
mov
pop
sbb
mov
cmpsl
mov
mov
and
pop
shrb
add
imul
loope
and
xor
in
bound
in
gs
mov
into
jno
in
push
or
pop
jne
in
fldcw
lods
mov
mov
mov
sti
repnz
jnp
mov
or
mov
scas
inc
aas
xor
scas
pop
decb
out
inc
in
addb
fildll
gs
jp
outsl
or
sbb
dec
sbb
addr16
jmp
xor
movsb
leave
push
fwait
adc
sbb
std
sbb
mov
movsl
data16
ds
insl
dec
pop
stos
shrl
scas
lret
jne
ljmp
sub
aam
test
incl
xchg
jno
cmp
pop
xchg
jnp
mov
mov
popf
fisttpl
sub
mov
or
xchg
dec
bound
xchg
inc
jno
divb
mov
and
addb
push
xchg
push
mov
or
dec
push
xlat
mov
and
inc
cmp
add
xchg
cli
scas
ss
push
sbb
mov
or
xlat
dec
leave
rcrl
mov
or
out
aas
scas
arpl
add
push
xor
in
add
into
mov
iret
into
mov
xorl
testb
loope
and
scas
mov
cli
inc
ss
mov
pop
es
push
out
je
iret
cs
pop
dec
faddl
inc
decl
std
and
pop
mov
sbb
push
add
fcmovne
clc
jecxz
pop
shrl
jo
or
testl
jnp
xor
xchg
cmc
fwait
xchg
xchg
into
mov
add
fsubp
pop
and
bound
mov
cmpsl
cmp
out
pop
xchg
notb
jmp
cmp
cmp
push
jno
iret
sahf
push
inc
jae
nop
mov
sti
mov
xor
jno
fcoms
push
dec
outsl
fidivrl
pop
lahf
cmp
idiv
dec
les
movsb
loopne
repnz
or
int3
lods
lea
fldcw
mov
sbb
xor
sbb
lcall
mov
popa
push
and
jae
call
scas
and
inc
mov
stos
adc
jge
pop
mov
jge
pushf
rorb
movsl
cs
popf
sbb
call
fsubrs
outsb
scas
push
mov
adc
xchg
cmp
sbb
jnp
dec
adc
and
jmp
or
jecxz
aad
ss
xchg
inc
xor
out
jge
dec
pop
std
mov
xor
sahf
pop
test
stos
aad
stos
mov
dec
fs
jns
lcall
testl
out
inc
cmp
sbb
xor
call
scas
jne
repz
lret
adc
pslld
ss
jecxz
push
mov
or
xchg
addr16
pop
push
inc
fsubr
dec
rcrl
sbbb
cmp
out
loopne
and
xor
aam
out
jecxz
push
ljmp
mov
notb
notl
adc
mov
dec
shl
scas
cs
outsb
mov
inc
cmp
pop
sbb
jae
fdivrs
mov
adc
jmp
or
mov
stos
fwait
cltd
cwtl
xchg
shrb
sbb
dec
sti
jne
xor
xchg
pop
clc
shlb
jno
cltd
loope
jp
xor
ret
bound
mov
in
sahf
test
jge
fldz
sub
and
mov
jns
inc
dec
pop
out
dec
xor
inc
mov
xchg
ret
gs
subb
xchg
daa
fucom
xor
dec
add
out
pop
push
mov
je
fisubs
out
mov
pop
lock
cmc
push
add
pop
aas
popl
or
adc
test
xor
scas
dec
push
push
jo
std
ljmp
ret
pushf
adc
adc
fisubs
cli
fs
mov
aaa
mov
xchg
sbb
xor
jg
call
dec
xchg
movsb
xor
push
and
rcr
sbb
test
ror
mov
jge
xor
sbb
in
sbb
xchg
popf
in
sbb
jae
adc
jge
test
jns
mov
in
mov
mov
sub
inc
or
lods
mov
mov
cmpsb
flds
or
fisubrl
lret
cli
push
lcall
lods
xlat
lds
outsl
xorl
popf
fwait
jne
cs
imul
jecxz
arpl
fnsave
in
sub
stos
mov
cmp
sub
xlat
push
in
jae
pusha
sbbl
adc
and
scas
xchg
ljmp
lock
outsb
cmp
jle
adc
cld
cli
mov
xchg
icebp
adc
sbb
pop
outsb
ret
adc
mov
test
test
mov
lret
jg
and
inc
mov
xor
orl
fldt
xchg
inc
lret
loopne
popa
dec
and
jp
pop
xchg
push
pop
add
jmp
icebp
inc
and
cmp
jnp
lret
ret
movsl
push
js
test
movsb
add
jmp
cltd
daa
push
sub
mov
and
jnp
dec
test
xchg
outsb
in
bound
dec
jle
push
xchg
add
dec
popa
in
lods
mov
mov
loop
mov
cmp
inc
popa
cmp
sarl
and
xlat
push
add
stos
outsl
movsb
xor
test
sub
loopne
mov
mov
lds
and
dec
jne
and
ret
inc
and
push
into
or
insb
sbb
sub
pop
xchg
cwtl
xchg
pushf
jo
and
dec
inc
jne
dec
cmpsl
jl
and
sbb
fiaddl
push
fst
push
es
data16
cmpsl
xchg
rcll
xchg
out
inc
mov
mov
and
in
xchg
rolb
fsubrl
jecxz
cmpsb
or
sub
mov
or
dec
rolb
or
dec
inc
sub
lock
sbb
xchg
movsb
ret
bound
pop
movq
push
in
repnz
mov
fisubs
aam
sbb
mov
and
aam
mov
sahf
dec
dec
imul
nop
jle
cltd
roll
bound
add
ss
mov
lcall
adc
lahf
fidivl
sub
push
mov
mov
aad
xor
shll
mov
dec
scas
jl
mov
add
insl
loop
movsl
lods
sbb
rorl
ljmp
dec
iret
and
cld
push
mov
into
dec
das
pop
insb
push
or
sbb
xchg
lods
xlat
test
mov
scas
rcrb
clc
gs
sahf
cmpsl
xchg
mov
lds
dec
mov
call
iret
mov
add
xlat
mov
stc
push
cld
loope
mov
incb
jg
pop
add
jg
rorl
mov
and
fdivrl
pop
out
rclb
fdivrl
xor
push
jmp
movsl
pop
addr16
inc
pop
cs
rcrl
rcr
jbe
mov
or
cmc
sub
cld
xchg
test
mov
lods
rorb
pop
xor
outsl
push
xlat
inc
loop
int3
cmp
icebp
orb
mov
pushf
insl
sub
lea
inc
lahf
fldenv
add
cli
xor
push
mov
xchg
test
and
arpl
add
mov
jecxz
pushf
push
or
and
cmp
stc
das
fdivr
aad
and
insb
das
push
daa
test
mov
loop
mov
lods
shlb
mov
xor
outsl
jbe
adc
dec
je
pop
jnp
loop
loope
inc
cmp
ds
lret
ss
mov
pop
and
lock
out
sti
jmp
add
mov
jle
and
movsl
scas
mov
stc
push
imul
adc
aaa
adc
sbb
mov
mov
pop
jge
adc
jno
inc
test
pushl
mov
xor
pop
out
mov
and
addr16
push
sbb
mov
sub
xlat
dec
mov
pushf
mov
dec
inc
stos
sbb
jnp
xor
loop
or
inc
inc
iret
add
xchg
dec
lods
outsb
push
mov
sub
lret
shl
pop
xor
or
inc
mov
fwait
in
xchg
and
xor
jcxz
pop
aaa
push
pop
icebp
shll
std
mov
stos
test
inc
movsb
fadds
subl
popa
pop
out
jge
sahf
inc
and
scas
push
xchg
or
cmp
scas
sub
cmp
xchg
sahf
mov
inc
mov
cs
push
enter
cmpsl
cmp
adc
push
lret
xchg
mov
mov
cwtl
aam
mov
push
cmp
sbb
stos
inc
clc
fstps
out
leave
push
mov
xchg
out
mov
ret
xchg
adc
rcr
cmp
adcb
ret
xchg
pop
pop
pop
mov
pop
dec
pop
cmp
insb
mov
ret
out
inc
sub
lret
push
pop
lea
out
leave
mov
jg
stc
inc
orb
pop
adcl
mov
stc
int3
in
leave
mov
loopne
enter
leave
xchg
fisubl
enter
jg
inc
enter
xor
cmp
rcrb
mov
sub
call
cmc
adc
gs
jmp
movsb
xor
adc
inc
or
out
xchg
add
int
mov
dec
fdivl
jbe
data16
mov
daa
mov
jmp
das
jecxz
sahf
cs
test
lea
in
call
mov
lods
andl
xchg
dec
icebp
fmulp
mov
lahf
sahf
lret
push
cmp
adc
repnz
in
icebp
xchg
mov
sbb
jne
cmp
adc
scas
aad
and
adc
jnp
movsl
aam
pop
clc
push
fisttps
std
leave
or
push
push
je
sahf
iret
cmp
or
add
lret
daa
dec
nop
adc
push
loope
adcl
jmp
cmc
int
call
adc
fldenv
ss
push
sub
fmuls
mov
push
mov
rorb
loope
mov
cwtl
lret
jl
xchg
sahf
stos
and
inc
nop
sbb
mov
sub
adc
mov
sbb
push
imul
jnp
jae
mov
sub
out
mov
imul
jp
and
insl
sbb
cld
jecxz
sub
pop
cmpl
dec
leave
addr16
xchg
jg
sbb
lahf
xchg
push
sub
jge
subl
mov
ret
push
and
add
pop
inc
inc
jg
js
pop
dec
adc
jo
and
push
repnz
xchg
sub
lods
scas
pop
xchg
jge
and
jae
lea
enter
in
inc
xor
jg
adc
jo
dec
pop
inc
icebp
inc
xchg
xlat
pop
xchg
jmp
pop
mov
lea
push
add
out
mov
add
icebp
test
lcall
xor
inc
xlat
mov
fistps
pop
sbb
mov
subl
fmuls
jg
mov
jge
ds
test
ret
xor
cmp
mov
xor
sbb
in
das
lods
dec
lret
cmc
rorb
filds
cmp
lock
mov
loope
and
incb
add
dec
add
or
test
insb
or
pop
aam
test
xchg
xchg
fistps
add
fdiv
jecxz
sahf
sub
shlb
ret
lods
fmuls
mov
mov
lcall
addr16
jno
jne
repnz
jne
aad
nop
dec
and
xor
pushf
xchg
int3
jne
std
push
adc
sub
mov
jnp
push
insb
fstl
jae
loopne,pt
jg
lcall
lcall
push
iret
adc
or
jnp
mov
jle
sub
fwait
pop
clc
stos
sub
jle
dec
cmp
rorb
add
in
xchg
std
and
clc
push
adc
fisttps
pop
cwtl
out
xchg
mov
notb
imul
test
jb
pop
add
adc
mov
bound
jbe
out
push
inc
adc
and
xchg
fisubrs
add
mov
ds
cmpsl
je
sahf
xor
fs
or
push
sti
lret
mov
or
xor
test
xchg
push
sub
and
test
mov
xchg
add
xchg
movsb
repnz
lods
ja
xor
mov
mov
xor
add
ffree
shll
push
test
gs
jae
incb
dec
xor
icebp
mov
ds
outsl
insl
icebp
out
lahf
rorb
sbb
dec
inc
jb
imul
and
lret
and
rorb
sub
aaa
inc
and
pushl
out
jns
sbbl
cli
push
and
cltd
pop
inc
sub
and
fildll
shlb
xchg
push
mov
and
scas
int3
sub
jg
xor
addr16
pop
mov
pop
aaa
icebp
call
stos
cmpsb
mov
loopne
bound
add
fcoms
in
mov
add
lahf
push
daa
ret
add
movl
pop
sub
jg
dec
div
inc
inc
adc
cmpsl
mov
add
hlt
pusha
jmp
inc
mov
sbbl
pop
pop
sub
scas
in
adc
pop
lds
call
dec
add
in
add
add
mov
or
sbb
cmpsl
mov
mov
ljmp
push
adc
jne
out
std
pop
sub
xchg
push
mov
ljmp
sbb
pusha
pop
cs
mov
cmp
xor
cmc
aaa
and
ss
inc
cwtl
xlat
inc
jmp
push
sahf
dec
xor
sbb
sub
dec
jbe
xor
pop
mov
sub
test
leave
pop
movsl
popf
xchg
ret
imul
pop
push
das
repz
stc
in
and
mov
loopne
std
popa
mov
or
or
shl
pop
movsb
xor
xlat
mov
mov
loope
xor
mov
rorl
mov
sub
and
pop
aaa
pop
lretw
lods
insb
inc
and
lret
imul
das
out
popa
out
lds
imul
scas
clc
movsl
lret
push
xchg
outsb
stos
pop
sbb
xor
xor
repz
inc
in
arpl
jmp
mov
mov
jae
enter
inc
push
jmp
mov
std
jle
ret
mov
xor
cld
mov
cwtl
arpl
lcall
sub
inc
ror
fisubrs
dec
xor
mov
enter
pop
nop
jl
push
ror
mov
insl
arpl
filds
rcl
lods
imul
int3
daa
les
mov
repz
inc
hlt
nop
fisubrs
push
call
ja
aas
insl
cwtl
add
jae
pop
rcrb
lret
leave
lcall
cmp
outsb
lahf
imul
sahf
dec
cmp
repz
das
mov
orl
insb
jnp
je
out
in
inc
es
pop
lret
pop
mov
std
push
ljmp
xor
loop
movb
adc
mov
inc
aad
adc
mov
in
cld
and
mov
je
out
sbb
movsl
cli
dec
lock
xchg
insl
mov
jae
sub
incl
leave
cmpsl
rcl
sbb
jecxz
jmp
lret
ja
and
fnstenv
loop
mov
insl
mov
adc
add
mov
add
nop
jae
jmp
push
ljmp
rorl
and
and
jne
out
fwait
push
popf
orb
outsl
xchg
xor
out
popf
lds
test
mov
rcrl
pop
or
faddp
xor
xchg
shlb
xchg
out
dec
pop
mov
incb
dec
cwtl
inc
dec
je
cmp
lcall
mov
xor
mov
clc
out
or
cmp
addr16
stc
mov
pop
leave
mov
adc
add
pop
xor
dec
sub
mov
add
icebp
pop
sub
mov
sahf
daa
xor
dec
push
lret
popa
loopne
mov
lods
mov
fs
lea
lods
xor
pushl
adc
jnp
loop
xchg
add
bound
dec
loope
dec
sbb
inc
daa
int
or
lea
lods
sbb
dec
sti
and
dec
cmc
movsl
aam
cmc
pop
in
mov
test
sub
cwtl
and
popf
dec
test
es
sub
fs
out
push
mov
lods
pushf
andb
xor
dec
sbb
popf
iret
shlb
xchg
rorl
fmul
pop
mov
xor
jg
xchg
xchg
pop
shll
inc
xor
inc
je
xor
in
dec
push
inc
sahf
out
sbb
jno
add
sbb
dec
daa
push
adc
jl
or
cmpsb
xlat
sti
test
xchg
rorl
rclb
mov
int3
je
push
or
mov
ret
test
cmc
cmp
cs
push
stc
pop
mov
or
dec
popa
inc
mulb
adc
push
xor
pusha
and
aad
push
fbld
mov
mov
movsb
mov
pop
cmpsb
movsl
pop
sub
scas
mov
sbb
repz
add
mov
dec
xor
or
or
mov
jbe
dec
add
sbb
dec
loopne
aas
es
je
sub
sbb
imul
fwait
pop
dec
jp
leave
mov
fmuls
and
add
fdivr
pop
movsb
das
mov
aaa
pop
xcrypt-ctr
cmpsl
fstpt
dec
add
sub
scas
in
mov
push
adc
sub
pop
stc
sub
in
sti
addl
es
xor
test
mov
mov
imul
imul
adc
push
or
xchg
inc
loop
gs
mov
pop
mov
fiadds
push
shrb
adc
pop
cmp
pusha
leave
std
mov
popf
repnz
xor
pop
daa
pop
test
pop
dec
sub
sbb
daa
cli
das
lahf
adc
rorb
dec
rcr
int
faddp
imul
and
loop
and
fimull
shrl
outsl
out
shrl
add
sub
ret
sbb
jmp
sbb
jno
jbe
jns
xchg
fs
insb
xchg
and
mov
loopne
inc
in
and
dec
test
inc
mov
je
arpl
jno
adc
dec
bound
mov
mov
int3
mov
dec
mov
addb
push
xor
adc
xchg
insb
fiaddl
dec
push
test
xor
ret
sbb
lods
and
sahf
jno
push
and
lods
mov
iret
add
push
cmp
xchg
ja
push
xchg
into
fs
sbb
in
outsl
lcall
push
mov
into
pop
dec
or
imul
xchg
mov
sahf
cwtl
dec
test
xor
into
xor
sbbb
clc
xor
lock
cmpsl
push
in
push
out
mov
sub
int3
pop
pop
cld
xchg
fs
xchg
in
test
lock
push
movsl
xor
mov
in
jmp
mov
push
sbb
xchg
xorb
sarl
fbld
popl
mov
mov
sti
ljmp
popa
out
test
lret
jae
xchg
aam
shll
repz
mov
mov
rcrb
cmpsl
orb
dec
mov
mov
aas
add
mov
mov
je
or
mov
pop
leave
push
incb
gs
mov
adc
and
std
push
push
sbb
jmp
sub
xchg
and
stc
insl
aad
xor
push
mov
cwtl
cmp
mov
xchg
fcoml
ss
dec
cmovle
loop
daa
push
fwait
ss
adc
sbb
pop
sti
dec
lds
outsb
mov
push
xor
fidivl
lds
mov
out
jns
push
aad
or
int3
lcall
ss
aas
in
jg
shr
pop
rcll
pop
jle
cmpb
pop
mov
into
mov
push
pop
call
les
rcrl
loop
xchg
jge
addl
repz
or
rolb
jle
fidivs
pop
pop
fidivl
sbb
mov
and
in
int
fldl
adc
fmul
mov
scas
mov
leave
shlb
sub
sbb
shll
sub
aaa
mov
dec
inc
ds
sub
pusha
iret
mov
in
popa
cmp
dec
cld
cmpl
mov
iret
jb
or
sbb
sub
cltd
stos
mov
cld
lock
and
sub
sbb
insb
mov
call
mov
rcr
pop
xor
in
sub
insb
pop
inc
or
call
pop
cmpb
ss
jb
sbb
pop
jnp
push
inc
and
repz
imul
mov
loop
outsl
jb
mov
mov
movsb
pop
push
ret
repnz
or
mov
add
and
xor
jnp
push
jmp
and
xor
push
scas
sub
stos
cmp
sub
sub
push
dec
sbb
xchg
sbb
push
jge
and
es
popa
cmc
pop
mov
sub
mov
cwtl
push
mov
push
pop
dec
in
in
jnp
xor
leave
add
lret
push
sbb
pop
sahf
iret
jns
pop
loop
stos
std
pop
sahf
and
jnp
dec
ljmp
fsubrl
or
xor
fisttpll
push
jne
jle
mov
or
and
mul
orb
arpl
xchg
jns
addr16
pusha
jbe
push
xor
push
ds
xchg
aam
mov
mov
pop
fwait
xchg
cmp
jb
add
test
jge
es
xchg
stos
or
mov
ds
dec
das
sbb
repnz
or
inc
lods
movsb
mov
call
mull
mov
or
imul
out
and
sub
jnp
adcb
repz
or
push
jbe
orb
adc
add
icebp
fidivl
daa
mov
in
push
out
xor
out
and
sbb
inc
pop
in
addb
je
cltd
xor
cmpl
js
dec
jae
lret
lods
dec
outsl
and
into
push
pusha
int3
cmpsl
cs
sahf
mov
sub
fmulp
cmp
popa
rclb
cmp
mov
push
loopne
jae
xor
cwtl
pop
sbb
scas
shrb
push
shl
lret
dec
popf
aam
mov
xchg
pop
mov
jae
jno
inc
pop
and
fdivrp
popf
aaa
push
insl
add
idivb
cltd
in
in
lock
fmuls
std
enterw
ja
jmp
pop
xchg
jp
int
push
push
cmp
les
fnstenv
cs
add
aaa
adc
pop
pusha
or
insl
adc
xchg
cmp
cmovo
push
jl
lret
enter
fadds
push
je
mov
lods
leave
cmp
out
hlt
fcomip
insb
test
icebp
movsb
cld
cmc
cmp
xor
es
sbb
sbb
mov
inc
mov
iret
idivl
iret
mov
sahf
prefetch
ret
xlat
inc
mov
lea
outsb
sahf
xchg
fst
mov
aas
stos
inc
jo
mov
mov
sahf
scas
sub
pop
inc
mov
in
sbb
call
fisttpll
xor
pop
xor
xchg
jmp
into
jmp
add
fldl
mov
dec
push
pop
movsb
sbb
mov
xchg
adc
test
sub
fwait
xor
jge
dec
push
enter
mov
pop
cmp
lods
out
lret
dec
aas
jecxz
mov
fwait
js
sub
les
lret
leave
lahf
cmc
repz
xchg
insl
jge
cmp
dec
cmpsl
imul
stc
lea
mov
mov
inc
sti
sahf
test
loop
popa
enter
ret
cmp
jbe
stos
je
stos
add
and
add
xor
decl
add
in
cmpsb
cltd
lcall
pop
dec
ja
push
or
push
xlat
ret
xchg
mov
fldcw
dec
xchg
push
rcl
jae
sub
dec
into
mov
or
add
dec
jb
test
out
mov
addl
stos
and
xor
bound
js
aas
lds
int3
mov
imul
mov
mov
dec
xor
popa
sub
mov
insb
movb
or
lods
and
or
popf
adc
push
pop
mov
fcomi
ret
push
rcll
outsb
push
mov
fidivl
das
lret
scas
fiadds
and
mov
fnsave
shlb
add
das
sarb
inc
pop
lods
andps
inc
dec
and
aam
jmp
adc
inc
xchg
int3
inc
shrb
xchg
iret
fbld
sbb
xor
sbb
arpl
loop
sahf
and
es
sbb
adc
adc
ds
add
xchg
jns
lcall
into
add
mov
cmp
mov
out
adc
mov
cltd
mov
cwtl
enter
jne
and
mov
and
jae
lock
mov
into
cmpsb
call
jmp
fiaddl
int
insl
out
mov
sbb
pop
js
jne
mov
adcb
mov
mov
lods
bound
cld
incb
cs
jae
adc
fcmovne
mov
xchg
mov
adcb
cmc
jno
and
js
pop
sub
cmp
in
pop
adc
pop
stc
inc
test
and
scas
push
fcoml
ss
sti
sub
pushf
mov
adc
and
inc
xor
jl
xchg
and
es
cmp
test
loop
fucomip
pop
mov
test
sub
jl
cmp
ret
pop
and
sbb
xchg
sbbb
popa
jno
cmp
xchg
jo
sub
adc
lret
sub
sti
mov
pop
mov
outsb
jne
inc
and
in
scas
and
jl
inc
mov
je
lea
mov
pushf
ljmp
ss
in
push
push
jb
add
movsb
repnz
cmp
add
xchg
stos
jo
xchg
jl
mov
lret
divl
insl
int3
js
rorb
lds
push
outsb
icebp
scas
int3
and
in
js
push
test
xor
dec
in
mov
pop
lock
subb
push
mov
inc
mull
adc
jae
out
jns
xchg
xchg
dec
mov
push
iret
lea
pop
loope
push
inc
mov
scas
jo
jecxz
cld
shlb
mov
inc
push
dec
std
mov
in
adc
adc
jno,pt
mov
pusha
movsl
mov
pop
jmp
push
pop
sub
sub
loope
mov
das
xor
frstor
mov
push
mov
add
popa
push
lret
int3
mov
mov
jae
add
rorl
jge
in
loop
add
loop
xor
daa
sahf
mov
xor
mov
es
sub
mov
pop
fcmovb
nop
mov
insb
insl
add
add
sub
jnp
inc
in
xchg
loope
jb
and
and
repnz
out
in
cltd
jmp
fnstenv
cltd
cmpsl
in
cmp
cmp
jo
mov
add
push
fwait
jnp
shll
shlb
add
fwait
pop
xlat
adc
jb
sub
xchg
xchg
jmp
add
mov
pusha
sbb
leave
ret
xor
scas
flds
iret
lea
mov
jae
lods
xchg
jno
cli
out
lods
call
and
jge
jae
xchg
add
adc
jnp
fmuls
mov
mov
mov
shlb
lock
out
insb
adc
adc
lahf
mov
iret
subl
stc
movsl
add
sbb
push
clc
cmp
add
loopne
imul
sahf
push
mov
dec
jl
push
into
out
mov
into
imul
fcmovne
leave
mov
xlat
xlat
and
pusha
decl
js
jp
mov
xacquire
dec
xor
jnp
or
ja
mov
mov
orl
adc
jo
into
aas
mov
out
xchg
scas
incb
mov
and
dec
fwait
push
outsl
mull
add
pop
jno
les
mov
push
lcall
push
ret
fs
faddl
cmc
sbb
lds
lods
xor
in
sahf
test
out
rcrb
adc
adc
repnz
mov
pop
xor
sar
popf
push
aaa
pop
sbb
mov
mov
jno
mov
dec
shlb
mov
int3
push
decb
dec
push
loopne
ret
push
ljmp
dec
es
outsl
daa
push
in
jno
lcall
stos
push
inc
dec
fmuls
cmpsb
xchg
test
repz
inc
or
adc
mov
xor
ja
cmp
lea
leave
cmpsl
cmp
cmp
pop
sbb
xchg
insb
sti
jl
enter
and
sbb
push
xlat
mov
mov
lods
aas
fld
mov
and
aas
or
jbe
add
pushf
scas
fs
daa
cmpb
jle
mov
push
push
jp
mov
test
inc
mov
loopne
loopne
mov
test
inc
sbb
xchg
or
cmp
sub
pushl
jae
loop
dec
adc
or
xor
out
dec
jge
lcall
add
pop
lods
dec
aad
ret
sbbl
jne
fstpl
das
rol
not
mov
outsb
shl
mov
push
leave
aad
inc
lea
mov
in
inc
and
das
mov
subb
adc
dec
int
std
std
aad
xchg
push
or
adc
sbb
cvtdq2ps
ss
mov
cmpsl
lahf
pop
push
fwait
lcall
add
div
loop
xchg
mov
ss
or
insl
sub
iret
sahf
fists
and
popf
jecxz
jnp
mov
or
dec
add
mov
mov
xchg
or
into
and
mov
lret
mov
pusha
js
jns
call
or
adc
mov
jl
push
push
outsl
xor
cmc
outsb
sbb
adc
cld
aas
jl
dec
push
fidivs
cwtl
mov
xchg
addl
popl
jne
outsl
add
jg
jae
nop
push
divb
aas
out
and
mov
mov
dec
movsl
cmp
cld
enter
test
icebp
imul
push
push
push
mov
mov
int
nop
addr16
push
push
jno
cmp
pop
in
mov
mov
pop
lock
mov
inc
rorl
dec
lret
dec
jb
cmpsl
dec
inc
push
xor
xor
inc
movsl
out
mov
cmc
std
mov
pop
shrb
popa
xor
mov
xchg
push
lret
mov
mov
xor
lock
das
aaa
movsl
in
mov
nop
icebp
cmp
insl
cmpb
popa
in
lcall
test
jp
mov
add
icebp
mov
or
cld
das
pop
pop
mov
xchg
mov
dec
enter
pop
imul
dec
fs
jo
cwtl
push
mov
out
ja
sbb
dec
jmp
lods
mov
cmc
jle
jp
pop
sub
xchg
fildl
mov
and
mov
scas
call
loope
bound
mov
mov
in
lret
mov
adc
lcall
mov
inc
data16
cmp
adc
cmp
xor
push
mov
xlat
jl
bound
sub
inc
shrb
mov
sbb
dec
pop
adcb
mov
filds
pop
adc
pop
adc
jp
cwtl
hlt
or
ret
xlat
sbb
fwait
inc
push
data16
dec
sbbl
mov
cmp
pop
dec
rcrb
lods
imul
test
dec
and
sub
adc
adc
inc
and
dec
add
mov
les
in
in
addr16
orb
add
pop
dec
inc
mov
push
add
aad
xchg
fs
lock
dec
inc
xchg
std
stos
push
loopne
clc
test
pop
popa
and
mov
bound
adc
les
adc
subl
dec
les
xchg
in
rorb
mov
loope
movsb
mov
in
outsb
mov
js
xchg
or
jle
xor
rol
loop
mov
adc
out
mov
lock
aam
rol
xchg
push
mov
sarl
les
fcmovnbe
xchg
iret
xor
xchg
leave
xor
xlat
sbb
cmp
and
mov
jbe
popf
or
push
jbe
sub
dec
mov
gs
cmpsl
or
xchg
imulb
outsb
les
scas
fdivrs
mov
xor
scas
mov
push
sub
push
out
ja
sbb
cli
mov
ret
jns
cmc
pop
jp
subl
pop
popa
jg
and
mov
in
mov
add
js
cmp
jne
jp
lds
mov
shlb
shlb
aad
mov
stos
ja
xchg
jg
cld
jbe
jg
xor
push
in
jo
pop
les
call
lcall
cmpsl
mov
jecxz
loop
in
shrl
cmpsb
mov
or
jge
add
cmp
xchg
inc
sti
mov
mov
fists
orb
repnz
pop
lret
or
rorb
adc
adc
adc
push
subb
inc
daa
popa
mov
movsl
into
fsubl
adc
jae
cmp
addb
loopne
dec
sub
inc
sbb
mov
inc
xchg
lahf
jg
cli
rolb
mov
lret
xchg
sub
cld
test
dec
std
adc
sbb
push
pop
stos
pop
dec
pop
cmp
xchg
gs
xchg
ret
loope
inc
mov
cmp
push
cld
xor
fs
mov
daa
jge
pop
xor
jne
cmp
lcall
lods
cmp
sbb
sarb
mov
mov
cmp
int3
jge
add
sbb
push
popf
pop
push
inc
push
cs
sbb
jne
dec
jne
pop
out
dec
mov
inc
fimuls
mov
dec
xor
or
jp
pop
add
and
jmp
daa
pop
cmpsb
jmp
jne
les
clc
mov
dec
repz
mov
fsubs
mov
lahf
fxch
push
rcll
mov
ret
into
roll
sbb
bswap
stos
movsl
mov
call
daa
repnz
xor
cmpsl
jl
enter
shrl
subl
repnz
dec
fsubl
idivb
aam
jge
in
out
test
adc
inc
addb
cmc
or
sarb
mov
dec
in
stc
std
mov
and
jle
and
xchg
gs
in
xchg
pop
stos
call
mov
aaa
pusha
mov
outsl
adc
cmp
jp
shll
xlat
jp
fs
inc
adc
xor
jle
xor
sbb
cmpsb
shrb
ds
pushw
leave
cmp
je
fs
ss
cmp
dec
pop
sti
and
insl
sbb
dec
xchg
pop
sub
xchg
in
pop
ss
fstl
dec
or
mov
lock
cmp
pop
sahf
pop
jo
push
sub
dec
lahf
mov
test
es
repz
out
lcall
add
dec
and
movsb
push
call
movsb
and
dec
lcall
pop
jb
pop
jb
fiaddl
add
iret
and
push
ret
pop
push
in
rorl
adc
lock
daa
xchg
repz
add
push
decl
scas
int3
rcll
loopne
and
scas
jo
movsl
loop
into
push
push
adc
popa
outsl
inc
adc
sub
cmp
xchg
and
add
stos
fcompl
cld
pop
lods
sarb
orb
ret
out
add
std
cli
add
shll
jmp
sbb
ret
mov
mov
pop
mov
jecxz
sub
lret
rclb
pop
mov
jle
xchg
movsb
aas
lret
stos
xchg
jecxz
mov
paddd
sub
loope
dec
mov
and
fadds
icebp
gs
and
mov
orl
pop
fwait
xor
push
lcall
fistpl
jp
int3
addl
adc
sahf
outsb
jno
stos
cs
les
sbb
xor
iret
shlb
push
mov
clc
enter
jne
dec
adc
lcall
ret
lods
adc
js
mov
jne
mov
dec
fistpll
mov
repz
jo
outsb
jno
insb
imul
dec
dec
test
mov
inc
stos
cmp
mov
lret
pop
cmp
mov
dec
xor
stos
clc
mov
push
sub
mov
inc
sbb
mov
loop
es
sbb
aad
cld
stos
push
adc
inc
push
push
jne
add
ja
cmc
sbb
xbegin
sbb
ljmp
mov
dec
enter
in
in
shl
push
mov
pop
xchg
in
sbbl
jle
daa
or
repz
cltd
loope
pop
fs
mov
shll
lret
mov
nop
jbe
orb
nop
dec
push
mov
insb
test
scas
dec
call
ret
mov
fs
mov
stc
test
test
out
cmpl
insl
and
mov
push
xlat
xchg
add
jae
fadds
mov
cmp
push
ffreep
dec
push
sbb
cmc
adcl
push
test
inc
popa
test
push
cli
mov
adc
not
pop
adc
ret
fstps
add
fdiv
or
adc
and
je
popa
clc
test
in
xchg
fstpl
xor
mov
pusha
sbb
cmpsb
push
xor
inc
iret
lods
int
cmpsb
push
lds
insl
insb
or
cli
dec
xchg
pop
and
cs
and
fcmovnu
push
xor
or
sub
push
xor
test
fisubs
lock
int
test
pop
cmp
cmc
lock
or
sbb
or
popa
hlt
sub
aas
ljmp
call
fmuls
int3
scas
leave
fldt
rorl
outsb
outsl
and
es
dec
push
in
mov
xorb
test
mov
inc
cmp
mov
mulb
hlt
jl
inc
mov
divb
bnd
sub
popf
test
popf
cwtl
adc
pop
leave
lret
and
push
dec
xor
cli
sbb
loope
ljmp
test
idivb
pop
and
pop
sub
cltd
nop
pop
sbb
xchg
movsl
jnp
or
es
cltd
mov
movsb
sub
cmp
sub
inc
dec
xchg
aam
pop
iret
fstps
sti
imul
xchg
mov
nop
cwtl
mov
mov
bound
xchg
add
pop
dec
lea
cmpsb
stos
inc
jl
sbb
imul
arpl
nop
lods
pop
andl
jnp
inc
pop
into
jp
push
or
idivl
push
repnz
es
xchg
adc
xorl
mov
cltd
jae
sbb
es
lret
fwait
fdivs
add
ss
out
xor
xor
test
xchg
sbb
mov
cwtl
int
mul
xchg
xchg
xor
int
shll
add
in
insl
fisubrl
divl
lret
dec
push
xchg
shlb
cltd
push
ja
or
movsl
rcl
cmp
and
jno
fnstenv
scas
cmp
in
push
clc
pop
push
ret
pop
jo
ret
in
pop
mov
dec
add
ds
dec
jmp
imull
test
popa
test
sahf
pop
ljmp
rorl
stos
into
push
std
push
cmc
and
dec
stc
jae
pop
fistps
ret
fstpt
push
jecxz
popa
popf
fcomps
push
sbb
pop
mov
jl
push
sbbb
outsb
stc
ja
and
stc
leave
mov
insb
outsb
sbb
cltd
lahf
aaa
out
pusha
jns
arpl
mov
outsb
or
push
dec
test
lret
movsb
push
xchg
pop
lods
cmp
test
pop
je
cltd
and
in
sub
popa
sarb
jecxz
ljmp
cli
push
push
dec
add
in
cmp
mov
ljmp
pop
and
cmpsb
mov
adcl
nop
inc
imul
adc
movsb
rolb
sbb
leave
adc
push
ss
adc
inc
cmp
in
push
mov
fwait
jns
dec
xchg
test
into
xchg
pop
xchg
xorb
inc
iret
mov
popa
adc
sbb
mov
and
ss
loope
inc
pop
xor
mov
fdivr
nop
jns
xchg
inc
pop
dec
lcall
mov
add
cmp
and
sub
xor
fbld
insl
lahf
nop
das
push
orb
shlb
in
loope
cmp
sub
mov
pop
and
fsubl
add
push
imul
js
les
js
xchg
add
dec
inc
jecxz
pop
fnstcw
mov
scas
lret
sahf
mov
addr16
xor
ja
call
rcrl
ds
test
sub
dec
mov
and
lret
mov
jle
sbb
imul
xchg
xor
lea
inc
push
add
push
add
mov
add
cmp
push
mov
rcll
rorb
pushf
mov
jg
or
lret
mov
stos
mov
rcll
inc
popa
dec
mov
jbe
mov
cmp
call
dec
push
jbe
inc
loop
sbb
cli
fwait
mov
ja
xchg
fwait
popa
mov
test
add
mov
mov
out
test
and
pop
dec
add
add
cmp
push
je
insb
stos
and
xchg
mov
mov
cmp
push
ss
into
cltd
bound
outsb
in
leave
sub
les
repnz
cltd
sbbl
inc
jmp
add
div
sbb
bound
dec
pop
mov
push
mov
push
orb
imul
repz
addr16
xchg
loopne
or
cmp
add
sub
scas
jmp
xchg
lcall
iret
lods
jmp
in
jne
cmpl
repz
outsl
daa
cmp
dec
adc
pusha
xchg
out
mov
dec
sar
shlb
fldl
pop
fdivl
xchg
sbb
dec
daa
mov
sbb
adc
hlt
test
adc
iret
pop
popa
outsl
xor
imul
cmc
push
in
dec
pop
xor
cltd
xchg
data16
lods
adc
push
imul
inc
xchg
into
es
pop
imul
jo
mov
inc
cmp
and
xchg
adc
push
shlb
roll
jecxz
divl
cltd
in
inc
jno
dec
negl
mov
xor
pop
in
xor
push
xchg
and
aas
and
mov
in
cmp
ret
sti
pusha
test
outsl
ljmp
test
mov
adc
aas
sbb
std
jns
xchg
stc
mov
aad
lods
pop
nop
inc
dec
imul
andb
jno
aas
add
jecxz
decl
or
sbb
pop
and
adc
mov
dec
cmp
xlat
into
ja
fisttpl
push
rolb
jns
cld
flds
sub
inc
in
push
lahf
xlat
push
mov
pop
es
inc
fcmove
cmp
add
mov
adc
jnp
out
mov
xchg
dec
dec
out
out
sbb
out
jbe
xchg
inc
mov
ret
lret
sub
sub
dec
mov
cmp
addb
pop
xchg
stos
sti
push
sub
aad
push
fbstp
lea
subl
pushf
dec
mov
push
mov
int
mov
jge
and
xor
add
or
das
test
sbb
xchg
dec
xor
push
loop,pn
push
in
push
jge
outsb
xor
test
adc
inc
ljmp
xchg
mov
pop
mov
scas
push
sahf
or
sub
push
push
pop
add
lods
test
cwtl
lock
lahf
fbld
xorl
push
jo
dec
cmp
inc
loopne
jae
decb
sti
and
jecxz
add
stos
mov
jp
sub
sub
dec
pop
iret
jb
pop
int
mov
clc
sub
mov
mov
ret
inc
xchg
xchg
sbb
mov
mov
jae
mov
inc
pop
cli
fldt
cmpsl
push
xor
sbb
lds
jecxz
or
mov
js
adc
fadds
test
test
sbb
adc
cmpsb
inc
mov
jmp
jmp
xchg
pop
inc
ja
stos
xor
mov
jp
int
mov
int3
fmuls
inc
push
test
pusha
inc
dec
push
imul
inc
aam
xchg
lods
filds
jae
sbb
daa
gs
xor
in
xchg
lcall
sub
pushf
adc
push
adcb
inc
pop
test
rolb
popf
lea
icebp
dec
popf
sub
add
and
fyl2x
sub
and
xchg
dec
sub
jl
sarl
push
mov
push
add
das
iret
mov
push
cmpsb
sbb
lds
in
mov
mov
movb
fs
adc
dec
int3
mov
cmpl
iret
cmp
pushf
add
sbb
fistps
popa
rcrb
jp
test
stos
dec
jnp
add
push
and
cmp
stc
sar
push
les
scas
ret
push
pusha
and
xchg
loop
xor
inc
lds
mov
dec
lcall
xor
inc
pop
leave
dec
mov
push
mov
jle
push
mov
add
mov
jnp
sbb
es
daa
pop
lock
dec
mov
jg
sub
scas
push
pop
adc
xchg
call
sub
sub
dec
pop
adc
mov
aam
dec
insb
ljmp
outsb
adc
std
push
sahf
shll
mov
dec
int
add
adc
cmp
je
push
fcomps
jp
mov
jp
loopne
pop
or
dec
scas
rorl
xchg
or
into
sub
mov
sub
mov
mov
stos
mulb
jl
mov
jmp
push
mov
adc
jo
or
in
push
mov
loope
jbe
xchg
pop
cwtl
rclb
shl
cwtl
sub
push
add
aas
mov
fnstenv
test
sbb
data16
lods
mov
pop
sbb
fs
pop
and
jge
jle
pop
jb
imulb
hlt
test
jmp
dec
lahf
sbb
xor
inc
shll
leave
or
pop
loop
inc
int3
mov
nop
add
insl
pmullw
mov
xchg
jecxz
cmp
jo
loope
jg
nop
daa
lret
xchg
cmp
dec
and
jecxz
xchg
sub
std
xor
and
rcrb
jge
stc
jp
mov
cmp
pop
cmp
push
push
jecxz
inc
ret
xchg
aas
jle
cmc
aam
outsb
ret
repz
in
sahf
fcompl
mov
out
into
ret
xchg
out
push
and
repnz
mov
test
test
stos
sub
xchg
aaa
cmp
in
mov
pop
out
into
cmp
sarb
loopne
xor
jns
inc
fistps
loopne
popf
imul
stos
pop
jle
pop
pop
and
out
add
jl
lock
add
mov
imul
jp
in
repnz
test
lret
out
daa
fldt
sub
pop
sbb
ss
mov
enter
or
cmp
cmpsb
nop
xchg
push
aas
loop
lock
nop
cmc
out
sbb
lea
cwtl
jnp
jp
aas
adc
movsl
popa
rcrb
xchg
sub
in
mov
adc
jmp
mov
mov
outsl
add
dec
scas
imul
hlt
jae
jg
add
push
cmp
ret
and
lret
add
fstpl
fists
mov
push
pop
mov
ficompl
ss
frstor
pop
adc
mov
clc
push
adc
popa
or
cmpsl
push
mov
push
and
sbb
cli
cmp
test
sbb
inc
lahf
mov
mov
leave
xlat
push
mov
cmc
and
ss
dec
cs
mov
pop
adc
pop
adc
out
xchg
test
mov
fwait
in
mov
cmpsb
stos
int
aam
pusha
xor
in
aaa
repz
mov
jmp
xchg
and
repnz
xchg
pop
lea
decl
scas
pop
lods
lcall
mov
pushf
outsl
xchg
push
sbb
insb
add
rclb
add
mov
cli
xor
sarl
and
adc
dec
lock
or
cmp
pop
xor
addr16
rcr
in
iret
outsl
cmp
adc
add
inc
pop
scas
push
xor
jmp
push
iret
divb
xchg
aas
int3
lds
test
addr16
dec
push
fldt
push
lcall
adc
pop
jle
xchg
mov
cmp
aaa
mov
andl
aad
aas
sub
out
dec
lea
shl
jae
int3
scas
xor
or
sbb
sub
sarb
in
and
mov
adc
sbbb
hlt
push
cmp
and
or
je
movsl
in
cmp
jne
test
xlat
addl
mov
jge
xor
js
data16
stos
lcall
aam
jno
nopl
mov
mov
pop
push
push
sbb
xchg
mov
or
inc
xlat
rcrl
dec
push
pop
pushf
lret
lahf
insl
idivb
lds
push
xchg
mov
mov
push
inc
push
fdivrp
sbb
mov
push
inc
call
mov
shl
aaa
scas
fmuls
push
cmp
or
xor
sub
sbb
outsl
pop
lods
jns
inc
loopne
lea
add
adc
lds
aas
sbbl
jmp
inc
fisubs
jp
arpl
push
push
pop
cmp
jb
movsl
test
mov
and
in
mov
dec
push
repz
inc
stos
ret
pop
test
sbb
enter
cmp
jno
das
push
cld
inc
add
dec
cmpsb
fmuls
cmc
dec
cmp
mov
out
mov
aam
sbb
dec
or
imul
lock
imul
xchg
iret
cmpsl
sub
add
cld
pop
test
gs
mov
pop
mov
pusha
mov
outsb
loopne
out
pusha
icebp
out
lcall
or
mov
ret
jmp
aas
outsl
add
js
mov
das
xchg
popa
arpl
addl
aad
mov
lahf
mov
mov
enter
mov
fs
adc
negb
test
filds
movsl
and
adc
arpl
repz
inc
ja
mov
je
popf
scas
push
adc
outsl
and
xchg
outsl
mov
in
mov
std
add
setbe
sbb
jp
or
pop
addr16
sbb
lds
lods
lds
fs
faddl
ja
sub
pop
push
cwtl
sbb
jmp
mov
std
iret
loop
inc
subb
xchg
xchg
inc
mov
sub
pop
pop
int
aaa
inc
mov
std
xor
xlat
and
pop
arpl
inc
jp
jecxz
ss
movsl
lods
push
cmpsb
je
inc
cmp
mov
push
repz
push
adc
sahf
sbb
fistl
xor
mov
mov
aas
pop
jle
les
js
ljmp
pop
adc
daa
inc
adc
adc
jb
aas
aaa
aam
in
fs
dec
or
mov
nop
cmp
andb
shlb
sub
adc
xchg
stos
mov
insb
lret
xor
gs
cmpsb
cmp
and
sbb
pop
lods
in
ja
jae
or
push
and
fstpl
dec
and
inc
mov
xor
xor
fidivrs
daa
aaa
dec
mov
ljmp
inc
inc
testb
and
aad
pop
aaa
lock
mov
out
fdivs
clc
inc
push
add
xchg
push
xchg
sub
cmp
dec
add
jns
stos
jge
push
out
add
cmp
out
lahf
shrb
sbbb
mov
out
lea
fnstsw
out
in
push
sbb
pop
mov
pusha
jbe
jbe
nop
pop
sub
test
cld
jnp
add
xchg
stos
mov
sahf
insl
or
je
jno
inc
adc
popa
ss
jmp
xor
mov
mov
je
psadbw
js
and
pop
lods
push
fnsetpm(287
cld
mov
stos
pusha
push
repz
outsl
int
lds
or
lret
fstl
pop
sub
iret
mov
add
or
cld
jmp
push
xor
add
and
xchg
mov
je
mov
scas
int
xchg
sbb
mov
inc
sub
sub
push
fldt
add
cmpsb
iret
flds
dec
int
imul
insb
push
lods
repz
sti
dec
dec
addr16
orl
test
inc
and
inc
fwait
and
loop
mov
in
jne
loope
je
lea
pop
mov
lock
popa
or
mov
jg
xchg
inc
out
and
outsl
xchg
clc
shlb
or
dec
jnp
push
jb
imul
cli
add
mov
mov
out
lret
mov
sar
lahf
and
lods
mov
pop
pop
add
mov
ja
xchg
or
rclb
or
cmp
lods
xchg
xchg
lods
or
sub
loopne
sbb
call
and
mov
addr16
in
add
neg
inc
jge
push
mov
out
sbb
stos
pop
pop
sub
push
lock
xor
jb
insl
adcl
inc
sbb
jns
popa
pushf
push
add
testb
jl
xor
inc
fwait
lret
repnz
outsb
mov
mov
xchg
or
dec
add
xor
test
mov
std
or
lock
loop
adc
divl
sub
xor
mov
rcr
xchg
or
pushf
nop
mov
cmp
adc
iret
jnp
dec
imul
xchg
data16
pop
inc
cmp
push
sub
sub
jmp
aam
daa
cmpsl
loopne
pop
sbb
push
sbb
ss
insb
aam
into
std
pop
repz
mov
xor
pop
fcmovnu
sarb
xor
xchg
xchg
cmp
jp
dec
mov
cmc
push
bound
mov
shlb
mov
mov
xor
mov
or
nop
inc
xchg
notb
push
loopne
push
sbb
out
inc
int
mov
dec
fwait
adc
sbb
in
add
lods
cltd
sub
aaa
je
push
aam
cwtl
jecxz
out
push
xor
aam
mov
sahf
mov
mov
mov
jg
cmp
es
nop
or
call
pop
orl
imul
dec
dec
jns
push
add
lods
xor
and
mov
cmp
or
std
cmp
push
out
fwait
add
mov
fwait
popf
cwtl
loopne
mov
rorl
jge
lds
ret
lea
xchg
fbstp
aaa
mov
lods
pushf
push
adc
mov
push
mov
outsl
dec
add
add
lea
push
add
dec
xor
addr16
jge
mov
bound
mov
xchg
jb
mov
scas
je
popf
dec
sbb
mov
cmpsl
adc
dec
mov
in
lds
cmp
xchg
mov
mov
mov
and
jb
inc
pop
out
jae
sbb
gs
aad
add
push
daa
or
daa
or
mov
push
push
outsb
inc
arpl
nop
mov
lds
rcll
dec
pop
fwait
xchg
test
cltd
mov
and
mov
shr
sarl
fucomip
lods
push
sbb
mov
jnp
lret
mov
in
scas
inc
outsl
leave
iret
fstpl
addl
xlat
add
andl
sbb
js
mov
and
pushf
sbb
js
or
mov
repnz
dec
sbbb
shlb
out
sub
adc
lahf
in
mov
mov
jne
mov
sbb
outsb
adc
popa
fsubr
xor
adc
mov
dec
inc
mov
mov
rcrl
lock
stos
lock
in
stc
or
lcall
test
cld
pop
arpl
inc
inc
push
cmpsb
xchg
sti
cmc
loopne
movsl
sub
rcl
cmp
out
es
fisubl
sub
iret
stc
mov
leave
push
test
stc
nop
or
test
or
aaa
out
or
xlat
pop
add
or
push
inc
movsl
dec
push
stc
hlt
sbb
shlb
dec
xchg
cmpsb
sbb
inc
cmp
or
bound
insl
ret
ljmp
cmp
dec
test
and
pop
xlat
and
lahf
fcmovu
daa
jle
mov
mov
add
fnstenv
das
fwait
test
jns
jg
pop
out
ds
outsl
push
inc
nop
push
loop
sbb
loop
shrb
xchg
xor
imulb
cmp
jne
rorb
jne
dec
pcmpgtb
jnp
in
jo
dec
pop
mov
push
movsl
push
mov
cmp
inc
inc
cwtl
hlt
and
lods
clc
test
gs
mov
cwtl
xchg
fisubrs
mov
in
andl
dec
dec
cmp
adc
push
cmp
cmp
ret
jecxz
jl
loop
ljmp
rclb
xor
and
jns
xchg
ja
jne
test
arpl
cmpsb
pop
js
inc
ret
sbb
test
jecxz
lret
or
pusha
xchg
enter
adc
xchg
std
test
fisubl
fsubs
lea
push
roll
stos
push
or
push
mov
out
repz
cmp
jecxz
ficoms
out
jae
jge
std
push
push
jnp
sub
ret
lods
mov
test
mov
jp
push
push
fsubrl
mov
mov
jmp
cli
movsl
movsl
sti
aas
cmp
in
push
pop
popa
nop
lds
insb
call
push
and
cmp
sub
leave
dec
fsubs
cmp
cmp
cmc
in
stc
cmp
xor
hlt
cmp
pop
ja
test
xlat
iret
and
or
dec
or
cwtl
sahf
enter
fnstsw
dec
xorb
lods
lods
nop
xchg
cmc
pop
cmovs
dec
ljmp
hlt
sbb
dec
sbb
enter
in
daa
and
jmp
sbb
test
sub
push
jb
lret
or
in
jge
xor
lock
push
sub
pop
sbb
fs
js
out
pop
push
and
aas
sbb
fcompl
leave
cmp
lret
imul
sti
test
cld
cmpsl
inc
and
iret
or
mov
cmpl
xchg
mov
popf
call
movnti
mov
int3
xchg
aam
adc
sub
mov
arpl
js
stc
ficoms
pusha
fwait
push
sbb
loope
fstps
add
or
lret
xor
and
pop
mov
sbb
test
out
cli
xchg
cmp
sbb
cmp
dec
stc
xchg
fcomps
mov
pop
inc
gs
mov
in
fnstsw
and
imul
aad
inc
out
pop
sbb
adc
adc
iret
scas
sbb
dec
insl
mov
out
mov
jae
call
jle
mov
lahf
fcompl
aaa
rorb
std
fsubp
sbb
add
aam
cmpsl
imul
cmp
out
enter
pop
push
fbstp
daa
sahf
and
jo
mov
dec
dec
movsb
sahf
push
sbb
movsb
aaa
je
adc
stos
add
push
add
xchg
xchg
or
leave
subb
cli
dec
sub
in
sbb
xor
mov
sub
xor
add
sbb
mov
adc
or
xchg
cmc
es
xor
xchg
and
ret
dec
push
jne
adc
out
push
xchg
mov
jge
lods
or
fstps
xchg
inc
sahf
push
out
jno
or
std
test
fucom
hlt
cmp
mov
mov
pusha
sahf
adc
mov
push
cmp
and
push
scas
fcoms
jmp
push
movsb
mov
loop
popa
xchg
jecxz
pop
add
lock
jb
and
adc
mov
jl
pop
out
scas
in
out
inc
gs
sbb
mov
jge
and
xlat
jb
popa
es
mov
in
xor
cmp
shr
or
xor
jg
mov
mov
pop
leave
and
test
sarl
clc
xorl
test
sub
fsub
into
bound
pop
fwait
mov
jge
mov
jmp
jl
mov
sarl
push
pop
xorb
lea
pop
push
mov
inc
sub
add
out
leave
inc
fst
stos
push
mov
lods
xor
xlat
shll
jg
stos
sti
lret
stos
arpl
ss
push
stos
clc
jo
and
ss
adc
rcll
es
cmp
fidivrs
add
xchg
sub
outsl
jl
pop
ret
jbe
inc
sbb
shll
enter
stos
or
sbb
cmp
pop
fucomp
xchg
mov
adc
in
repz
gs
aas
fs
in
dec
scas
outsb
imul
xchg
stos
sarl
push
stos
imull
lcall
mov
xlat
pop
lds
pop
or
inc
dec
out
lret
xchg
mov
xor
shll
push
mov
sarb
mov
pop
mov
add
das
xor
in
data16
lock
push
inc
fisttpll
mov
pop
bound
xor
xchg
cld
push
fistl
jecxz
lea
fcmovne
sti
inc
dec
cwtl
pop
jb
imul
sub
inc
and
cmc
sbb
repnz
test
cmpsl
adc
mov
icebp
les
mov
xor
outsl
jno
lds
out
xor
je
xor
mov
xor
inc
into
data16
pop
rorl
push
jmp
dec
addl
mov
inc
dec
cmp
scas
or
arpl
shl
hlt
sahf
inc
xor
add
adc
sub
flds
js
jmp
in
sahf
jnp
jb
xchg
ret
out
into
movsl
data16
push
mov
out
rclb
out
lret
shlb
sbb
lds
pusha
mov
dec
out
pop
lods
xchg
lea
pop
mov
dec
rol
sbb
out
cmp
fisttpl
divl
sub
cmc
lret
mov
add
push
xlat
mov
in
test
mov
fstl
fwait
mov
adc
push
aas
nop
rclb
inc
jbe
popf
pop
jno
pop
jmp
mov
mov
ret
jo
popa
push
lret
mov
add
lock
and
cltd
adc
lcall
loope
ret
out
pushf
push
bound
xlat
lcall
sub
adc
movsl
or
cmp
dec
out
repnz
arpl
jb
loop
mov
xor
mov
fnstenv
sub
orb
cwtl
sbb
jne
fdivr
enter
jno
dec
jb
jbe
push
add
pop
or
mov
mov
adc
dec
cmpsl
rorl
icebp
and
mov
inc
mov
jl
push
xchg
mov
cmpsb
je
inc
imul
in
jo
and
lea
in
push
and
mov
and
pop
xor
sub
mov
jmp
jecxz
test
cmc
xor
mov
lcall
xlat
icebp
push
mov
ret
js
push
stos
xchg
cs
jno
addr16
add
jl
xchg
add
mov
adc
in
icebp
mov
add
bound
add
insb
push
push
call
xor
jp
jge
out
imul
dec
das
xchg
imul
dec
aad
popa
mov
dec
push
movsl
or
push
xorb
popa
sub
mov
sbb
sbb
jno
in
les
jle
fldl2t
sbb
xlat
repz
stc
lods
sub
dec
add
mov
xchg
and
cmp
sarl
lret
push
das
pop
adc
pop
xor
mov
xchg
das
and
int
pop
int3
jmp
in
lret
xor
clc
push
lock
add
add
sahf
mov
not
push
jl
loop
add
ficoms
push
jp
add
mov
or
aaa
pop
sub
xor
and
scas
add
vmread
sbb
jl
mov
ljmp
adc
out
mov
aas
jno
adcb
add
lcall
mov
dec
pop
dec
push
add
imul
lret
adc
inc
adc
insl
lret
decb
div
or
imul
adc
push
incb
aaa
push
jmp
test
mov
ss
and
and
lahf
lea
mov
mov
push
cmpsb
sub
inc
hlt
push
xchg
lds
pop
or
clc
lcall
lods
inc
nop
out
scas
inc
mov
push
cmp
into
out
lods
fcompl
mulb
jmp
pop
pusha
adc
bsr
inc
or
dec
xor
dec
jg
or
dec
dec
lds
ja
pop
cmpsl
push
dec
push
fisubrs
cmp
push
lret
mov
daa
add
jp
cltd
mov
xor
mov
mov
lock
pop
out
adcb
fbld
or
mov
cmp
add
repz
test
jmp
jg
jb
out
xor
xor
pop
push
fstl
push
pop
inc
pop
xor
rcrb
jbe
jl
pusha
rcl
lea
inc
nop
push
adc
lock
call
ss
push
stos
add
adc
cmp
ja
lea
or
dec
shll
ja
xor
pop
mov
int
cs
mov
enter
mov
ret
inc
hlt
sahf
cmp
sbb
cmp
lea
adc
adc
dec
mov
mov
mov
repz
inc
sbb
ret
incl
pop
bswap
xor
aaa
sahf
das
fcmove
movsb
mov
mov
add
mov
pushf
xor
mov
rcrb
or
mov
or
mov
xlat
test
insb
inc
sub
cmpsb
cltd
dec
jns
insb
shll
notl
notl
jl,pt
enter
mov
mov
and
gs
lret
leave
xor
add
cwtl
xchg
es
jg
inc
pop
or
fchs
sahf
add
clc
and
and
pop
inc
fwait
hlt
jmp
pop
push
xchg
or
mov
aam
pop
sbb
fwait
dec
inc
mov
xchg
fwait
inc
iret
add
sub
lock
rep
cmp
test
or
pop
adc
adc
cmpsl
out
inc
testl
adc
outsb
adc
jae
stos
hlt
mov
push
mov
ficomps
outsl
mov
inc
adc
ljmp
scas
cmpsb
addb
in
ret
adc
dec
ljmp
sbb
add
test
in
leave
mov
dec
iret
fwait
ja
mov
fs
mov
icebp
lods
push
mov
xorl
push
jmp
cmp
lods
sbb
pop
test
in
inc
call
pop
sbb
shrb
ret
pop
jno
ret
iret
lods
push
repz
daa
jg
fcmovu
xor
arpl
push
ja
pop
add
cld
je,pt
pop
jo
inc
inc
xchg
jbe
icebp
ror
enter
imul
stos
lods
daa
rcr
push
jle
orb
loopne
lds
ja
mov
dec
js
sub
std
idivl
xor
mov
pop
and
jl
nop
cli
adc
pop
into
inc
out
or
mov
ret
nop
lods
popf
cs
and
je
push
decl
lcallw
or
adc
xorb
mov
movb
inc
mov
and
in
cmpl
loop
mov
call
pop
and
dec
cmpsb
mov
pop
push
cld
dec
scas
cmpsl
mov
into
jecxz
testb
mov
push
iret
pop
or
es
push
sbb
add
dec
cmp
and
icebp
jb
and
js
loope
fsubl
outsb
loopne
subl
call
sbb
or
or
push
mov
rorb
out
clc
and
psubsb
aaa
sub
inc
cmpsb
lds
pop
lret
scas
sub
popf
mov
sbb
cmp
pop
or
mov
test
dec
cmp
dec
popa
pop
add
jno
push
push
dec
mov
pusha
fcompl
cmp
and
add
dec
mov
inc
rcll
mov
xchg
inc
ljmp
lahf
adc
cmpsb
mov
out
jecxz
mov
xorl
sub
push
aam
xchg
dec
test
xchg
mov
jmp
shrb
and
jp
dec
shrb
cmpl
push
pop
inc
mov
pusha
and
add
sbb
adc
scas
or
mov
filds
popf
jnp
scas
sar
dec
mov
inc
jl
push
dec
sub
ds
mov
leave
cmp
and
mov
out
loop
imul
out
sub
pushf
ljmp
andb
pop
add
xor
insl
mov
ficompl
sti
test
dec
pop
push
scas
xchg
aam
jno
mov
mov
and
mov
cwtl
push
ds
sub
sbb
mov
push
jne
inc
aas
inc
mov
popa
fstps
or
jns
mov
out
xor
adc
scas
or
sbb
inc
jo
or
push
movl
es
movsb
fistpll
sarb
pop
mov
outsl
mov
test
dec
enter
and
jmp
push
rorl
mov
and
in
scas
or
scas
mov
mov
or
sarl
dec
cmp
and
cmp
lea
repz
dec
sbb
lcall
fidivs
mov
pop
in
lahf
aam
mov
push
les
push
dec
out
xlat
ss
mov
sbb
repz
lcall
sarl
movsl
xchg
mov
and
sbb
pushf
ficoml
mov
pop
cmp
xor
je
andl
add
dec
dec
les
xchg
xor
mov
adc
xchg
xchg
push
std
cmp
pop
push
cli
mov
sbb
mov
push
daa
lret
xchg
clc
gs
fcomp
loop
andb
xchg
inc
xchg
loop
lock
mov
std
sahf
lea
out
icebp
sub
xadd
cmp
jns
fisubl
inc
je
and
pop
mov
repnz
loop
add
sarb
sbbb
mov
stos
sbb
adc
popa
stos
repnz
and
push
leave
mov
jp
pop
mov
int
dec
add
fcomi
lods
aas
insl
sub
fcoml
cli
iret
adc
mul
test
movsb
xor
je
adc
push
sbb
mov
push
or
rolb
lret
xor
push
test
push
and
outsb
adc
dec
or
push
cmpsb
out
inc
sub
insl
mov
push
popf
jmp
mov
xchg
stos
icebp
int3
shll
fwait
mov
loop
movups
xor
fs
add
imulb
cmpsb
jo
out
push
push
xor
out
sub
loopne
mov
push
lock
sub
sub
repz
ret
inc
pushf
pop
sub
jb
repnz
cltd
lea
lahf
sub
nop
pop
xchg
fwait
ss
pop
decb
insb
pop
cwtl
rcll
popa
mov
ss
cs
jg
scas
popa
xorl
sbb
rorb
pop
mov
insl
dec
pop
repnz
hlt
int3
pop
add
xchg
sbb
push
mov
push
mov
jae
xchg
or
test
push
cmp
sub
testl
pop
sub
lea
ret
pop
inc
arpl
add
sbb
mov
je
in
cli
mov
cs
stos
loopne
sti
enter
add
push
jecxz
adc
add
fisttpl
mov
cld
cmpsl
ret
fistpl
xor
cmp
dec
lods
jmp
mov
add
and
int3
lret
push
push
fisubs
pushf
es
hlt
push
lahf
jl
xor
pop
and
cmpsl
fists
adc
and
int3
add
xor
sbb
xchg
fldl
lret
loope
pop
iret
xor
sarb
lahf
add
fdivrs
mov
push
xor
testb
xor
daa
lcall
cmp
mov
jbe
fcompl
mov
test
inc
sahf
pop
cs
scas
lahf
jb
and
js
xchg
stc
dec
pop
outsb
cltd
pop
insb
dec
and
sub
or
cmp
pop
les
lods
ljmp
cld
fsubrl
cmpsl
ret
jmp
daa
insb
clc
inc
addr16
push
sub
inc
vpunpckhdq
shll
xchg
scas
mov
mov
or
jl
xor
mov
sbb
and
xor
sbb
xchg
mov
test
shrl
mov
ret
popf
dec
repz
rcrl
pop
loopne
push
enter
lahf
jecxz
outsl
frstor
fs
cmp
aas
lret
ret
shl
add
hlt
cld
xchg
mov
xchg
aaa
lock
sbb
std
movsl
dec
das
sbb
cld
adc
lcall
xchg
pop
outsb
cmp
std
test
or
xor
sti
mov
push
dec
jp
adc
fs
mov
push
inc
shll
adc
inc
and
sub
push
push
test
push
pop
lret
and
sbb
out
xchg
cltd
add
inc
cmp
scas
cbtw
mov
lds
cmp
mov
cmpsl
repnz
imul
adcl
mov
mov
arpl
pusha
inc
fbstp
movsb
xchg
jmp
cmp
sub
add
cmp
inc
call
and
pusha
loop
out
mov
cli
pushf
pop
jo
scas
xor
clc
notl
lods
into
xor
ret
lcall
clc
pop
adc
cmp
pop
mov
xchg
cmp
mov
shll
adc
and
lods
sub
add
divl
daa
or
lea
inc
loopne
pusha
das
out
adc
push
dec
mov
jnp
mov
inc
cmpl
dec
jo
sti
lods
dec
add
stos
cmp
addl
cmp
push
rcr
xchg
mov
rcll
out
cmp
popa
fildll
mov
push
jg
cmp
cmp
lea
or
and
adc
clc
pushf
mov
mov
data16
dec
sbb
mov
mov
or
movsl
gs
push
shll
xchg
cmp
xchg
sub
sub
xchg
sbb
mov
ds
inc
adc
lods
adc
sub
dec
icebp
stos
lock
add
mov
mov
xchg
mov
jo
mov
ds
mov
and
aam
rorb
stos
mov
sbbl
mov
cmp
vhaddps
lret
sti
fidivl
add
pop
pushf
xor
movsb
mov
incb
mov
sbb
pushf
adc
cmp
jl
inc
sub
jge
in
sub
xchg
xor
ret
xchg
push
add
sbb
mov
jp
push
lcall
lcall
fidivrl
dec
mov
mov
push
xchg
int3
je
jno
xchg
push
inc
lcall
sub
loope
mov
sub
xchg
add
jbe
sub
mov
xchg
je
inc
inc
call
stc
leave
out
dec
mov
imul
cmp
mov
or
cmp
lds
or
pop
adc
loopne
push
inc
and
mov
into
sub
shll
in
test
les
pop
lret
imul
scas
test
or
add
xchg
push
in
insl
jg
jae
adc
adcl
mov
fstps
dec
loop
push
loope
je
jp
mov
cmpsb
ja
sarl
daa
jmp
inc
movsb
cmp
stos
sti
fstpl
lods
call
insb
xchg
mov
cmp
sbb
dec
stc
sti
inc
and
cwtl
idiv
xor
and
out
lods
inc
clc
ljmp
stc
jmp
jp
pop
daa
push
push
xchg
add
std
enter
std
ss
sbb
enter
rcll
push
jne
add
and
pusha
scas
repnz
push
cli
out
and
aad
clc
outsb
xor
std
or
inc
in
test
mov
cmp
mov
cld
shl
shl
decl
sub
jmp
mov
mov
je
fwait
inc
ljmp
movl
outsl
or
xchg
or
ds
sub
repz
outsb
push
adcb
leave
push
sub
or
lods
out
push
adc
faddl
or
mov
addr16
push
test
pop
and
push
or
loop
add
adcb
add
in
sub
repz
stos
push
sub
and
push
test
xor
and
or
xchg
sub
repnz
jp
in
cli
inc
xor
dec
mov
pop
add
sbb
decl
test
fcmovne
stc
sbb
sbb
sbb
lods
cmp
add
test
push
or
enter
xchg
push
sub
ret
loopne
add
jle
insb
xchg
lcall
imul
mov
setae
or
jnp
lcall
mov
sbb
jecxz
gs
divl
mov
inc
scas
mov
jmp
sub
sar
inc
arpl
insb
dec
iret
lret
mov
cmc
test
pusha
push
shll
stos
xor
sub
sub
popf
in
jbe
push
fldt
imul
loopne
nop
fcomps
leave
icebp
jmp
cmpsb
add
cli
js
sub
sbb
addb
imul
ficomps
cmp
sub
jmp
mov
je
push
inc
jecxz
repz
cmp
adc
leave
fidivs
mov
mov
jp
stc
inc
cmp
fsubs
mov
push
cmp
xor
scas
nop
jecxz
mov
loop
icebp
inc
test
add
fisubrl
lret
jne
jl
into
xchg
cltd
testl
aam
mov
out
fs
loop
add
aam
aad
cmp
xchg
jne
fsubrl
dec
rorb
push
add
imulb
inc
repz
dec
xor
mov
leave
push
push
lock
lret
sti
sub
xor
fprem1
jle
and
xor
xchg
cli
call
sbb
adc
and
pop
push
rol
test
xchg
add
fimull
xlat
fsubrs
mov
cmp
les
jle
shlb
mov
mov
pop
sub
cmpsl
fsts
jle
daa
mov
in
aam
mov
jnp
in
inc
cmp
xchg
sbb
int
and
dec
mov
in
int
imul
out
hlt
cltd
mov
push
fdivrl
int
inc
arpl
fdivrl
pop
sbb
and
jle
jne
aas
fisubs
xchg
sbb
fmull
jecxz
fisttpl
jbe
lcall
test
lcall
pop
push
outsb
xchg
hlt
xor
mov
add
and
lret
jmp
mov
pop
jo
mov
sub
mov
mov
movsb
daa
nop
inc
mov
mov
cld
rcrl
sahf
mov
insl
xor
pop
adc
cmp
mov
and
cmc
cs
sti
lret
fucom
add
dec
pusha
shlb
shlb
sbb
push
mov
sar
cs
repnz
cmpsl
insb
mov
push
sarl
fisttpl
push
mov
in
sti
lahf
adc
sbb
xchg
cmp
ret
sub
mov
inc
dec
cld
js
push
clc
jle
push
jns
in
fsubl
sbb
lea
daa
jp
insb
push
call
xchg
jno
sbb
xchg
shr
jns
adc
or
mov
jb
add
loopne
cmpsl
cmp
popa
cmpsb
sbb
push
pusha
fildl
push
mov
incl
test
fidivl
xor
filds
lahf
cltd
mov
jg
adc
neg
mov
or
dec
loope
popa
aam
mov
xlat
push
icebp
lods
cwtl
mov
mov
or
dec
and
or
inc
jmp
test
fldenv
push
dec
push
mov
lods
sbb
jge
andb
mov
push
sti
pushf
das
ss
cli
aam
inc
mov
lret
mov
imul
mov
push
aam
jge
les
test
cwtl
jns
stc
out
jp
push
enter
add
and
movsl
lods
jecxz
mov
and
mov
lods
add
lods
inc
pop
popf
jecxz
jge
pop
mov
insb
aam
add
dec
jae
negb
nop
inc
xor
outsl
repz
nop
shl
ljmp
jecxz
push
into
nop
adc
idivb
lods
or
mov
and
js
movsb
int
mov
stos
dec
icebp
lahf
in
cmp
sti
mov
mov
jns
inc
lret
jo
jle
xlat
bound
je
aam
or
cs
pop
fsubrp
jo
ret
test
lahf
aas
ja
sub
idivl
xchg
ja
test
and
sbb
mov
mov
pop
in
cwtl
and
xor
sbb
sbb
addr16
jl
fisubrs
adc
adc
mov
into
and
xchg
addr16
test
add
dec
pop
xor
popf
push
popl
cmp
cmpb
cmp
pop
lfs
sbb
cltd
dec
cmp
sub
push
lahf
xchg
movsb
push
repz
repnz
ret
divb
xchg
stc
lahf
xchg
mov
push
pop
pop
push
ret
arpl
leave
adc
cmp
push
shll
push
aaa
pause
lret
bndldx
mov
pop
movsb
mov
jp
dec
mov
loopne
fldenv
add
xor
mov
fildll
push
arpl
cmc
adc
les
lods
movq
jb
leave
shrl
pop
add
add
mov
and
cmpsb
enter
sbb
sahf
pop
aaa
nop
fisubrl
sub
mov
cmp
lahf
std
dec
lret
dec
xchg
inc
test
jnp
loopne
pop
ja
and
out
movsb
subl
jae
inc
add
or
xlat
sti
scas
pop
fisubl
ret
cmpsb
lods
jp
inc
aad
es
xchg
pop
fmuls
leave
fnstsw
jno
push
jmp
call
push
adc
push
dec
jp
mov
loop
test
iret
lods
pop
push
sti
push
dec
outsb
insb
fsubl
adc
in
fwait
dec
aad
xchg
xchg
mov
rorb
mov
jp
mov
idiv
xchg
xchg
int
add
add
fwait
pop
add
push
scas
inc
sti
push
jl
mov
dec
out
ret
jge
sub
jecxz
inc
add
jl
mov
sbb
push
jmp
lret
or
ss
push
out
addr16
in
cmp
fistpll
test
adc
dec
or
dec
xchg
and
push
xchg
add
scas
pop
fnstsw
adc
insl
mull
push
fsts
xor
xor
insb
pop
sbb
sub
xlat
sahf
inc
pop
lods
inc
push
xor
sti
pop
cmp
jmp
jge
pusha
xchg
add
mov
lds
leave
xchg
ret
mov
dec
mov
test
ficomps
inc
dec
sub
sub
movsl
dec
bound
ja
jne
aaa
add
das
outsb
inc
out
orb
mov
add
negb
xor
adc
mov
ss
nop
shlb
sub
imul
jmp
or
adc
js
mov
fsin
inc
xor
andl
add
aam
das
xor
int3
jp
xor
mov
xchg
imul
dec
dec
lret
dec
scas
sub
mov
pop
and
mov
inc
dec
into
jne
push
mov
inc
sbb
data16
pushf
xlat
sub
xchg
sbb
and
movsl
jb
test
mov
icebp
enter
pop
shrl
test
inc
ret
mov
frstor
mov
scas
icebp
sbb
je
jp
in
inc
or
icebp
mov
ficomps
pop
inc
adc
add
push
ret
stos
pop
scas
std
dec
and
mov
faddl
loope
xor
lret
adc
lcall
jb
ds
clc
pushf
dec
mov
shll
nop
push
ja
mov
jge
push
xchg
adc
push
in
jo
add
xor
sbb
fildll
add
ficomps
fldenv
lea
mov
xor
sahf
pop
lcall
or
hlt
xor
jp
out
pop
mov
and
test
lds
mov
dec
cltd
mov
adc
loope,pn
sub
dec
rorb
hlt
mov
adcl
adc
shlb
pop
xchg
scas
je
test
mov
jb
dec
jb
inc
xor
mov
out
or
shrl
ja
stos
fiaddl
pop
mov
dec
sbb
js
je
adc
sbb
push
pop
pop
shrb
scas
das
jns
xchg
inc
adc
aam
outsb
cmp
call
cmp
jg
xchg
das
shl
fbld
test
lds
pop
imul
add
test
das
subl
cmpb
rolb
ret
add
add
adcl
or
pop
xchg
pop
addr16
sbb
leave
jne
sub
xchg
sbb
pop
lods
cmc
pop
xchg
mov
sbb
cld
mov
jns
jp
stc
lods
jo
push
or
test
push
outsb
mov
pop
push
jp
pop
lret
or
xchg
mov
xchg
js
pushf
cltd
and
mov
addr16
enter
mov
testb
repnz
into
sub
out
fiadds
adc
pusha
cmp
icebp
xor
bound
inc
sub
adc
xor
pop
mov
pop
les
cmp
cltd
dec
sbb
imul
jg
pop
sub
jns
jg
xlat
ret
cmpl
sub
xchg
cli
orb
fildll
and
pusha
dec
sub
cmp
push
stc
popf
cmc
andb
js
push
cwtl
push
fwait
adcl
xchg
push
arpl
push
aam
or
and
cmp
arpl
push
das
xchg
sets
xchg
and
jns
push
pop
data16
scas
xchg
push
in
outsb
xor
js
xchg
aam
or
sub
inc
inc
lock
mov
sub
aam
and
mov
test
and
fsin
dec
sbb
insb
mov
fistps
jg
loope
and
sbb
mov
dec
sub
and
push
push
jae
outsl
lock
int
cmpsl
es
inc
test
in
push
rcrb
dec
jnp
mov
cmp
int3
adc
cmp
nop
fsts
sahf
sbb
pop
cmpsl
sahf
cmp
mov
mov
push
sbb
fdiv
mov
jge
push
dec
popa
lds
orb
adc
pop
push
test
dec
sti
repz
fs
xor
pop
sarb
bound
xchg
ds
push
mulb
and
sti
pop
jns
gs
fisubrs
cmp
mov
mov
inc
stc
mov
andb
sbb
add
cmp
fldt
jo
cmp
test
xchg
hlt
mov
and
cld
mov
enter
pop
xchg
mov
ret
jns
cltd
xchg
xchg
popf
imul
mov
shll
outsb
cmp
mov
clc
add
and
aaa
inc
inc
cld
add
shll
lds
add
pop
push
xor
pop
jnp
imul
gs
fisttpl
xlat
clc
inc
mov
outsb
or
data16
mov
sbb
sub
add
xchg
xor
test
bound
or
push
rcrl
lcall
iret
dec
fnsave
sahf
or
mov
lods
mov
aaa
in
negb
sbb
test
test
adc
clc
es
cs
jp
mov
jnp
jbe
pop
leave
push
jne
dec
push
fildl
fwait
sti
cmp
lock
scas
je
pushf
adc
push
std
aas
jmp
loop
decb
jl
push
dec
fnsave
jle
jnp
movsb
ljmp
or
iret
rorl
mov
int
ret
inc
mov
adc
xor
mov
jmp
popa
pushf
cmp
daa
mov
jle
cs
cli
adc
cmp
bound
sub
add
push
iret
jle
jle
push
mov
sbb
mov
xchg
lcall
push
inc
inc
push
mov
mov
fsts
cmp
ficompl
je
add
jns
pop
mov
xor
adc
rorb
div
ds
xor
sbb
fdivrl
in
ret
sbb
in
std
push
or
mov
and
fcmovnu
scas
cmpsl
jecxz
sub
rolb
sbb
cmpsb
cmp
movsl
inc
cltd
sub
cwtl
outsl
xchg
popa
sbb
sub
inc
fdivs
in
xchg
das
clc
xlat
or
mov
adc
imul
daa
divb
and
push
jg
xor
out
data16
lods
insb
popf
int
xlat
or
out
sub
stos
out
cmpsb
ss
testb
bound
lahf
aad
mov
pop
mov
push
mov
and
inc
pop
pusha
adc
pop
lret
lds
cli
push
loop
sti
mov
push
sub
xor
repz
adc
cmp
popa
ljmp
divb
and
mov
adc
add
mov
lret
repz
xchg
sub
push
stos
mov
mov
int
fxtract
mov
out
mov
pushf
push
or
in
sahf
pop
rcll
dec
ret
jbe
xchg
mov
in
out
arpl
out
cmpsl
bnd
loopne
iret
dec
jns
mov
rcrb
shll
loop
push
cmp
mov
or
in
adc
lcall
les
outsb
mov
lods
adc
jae
insb
push
int3
adc
sahf
cld
mov
adc
fldcw
mov
test
pop
ret
push
repz
jo
xor
fwait
xchg
inc
xor
or
dec
shrl
pop
ss
jp
incb
out
lea
jge
inc
test
dec
out
mov
ret
aam
fs
add
push
hlt
xchg
pop
cmpsb
in
cmp
mov
jo
mov
and
jne
fs
dec
lahf
je
cmc
cmp
enter
sbb
jno
test
fwait
loopne
xor
xchg
push
popf
push
mov
andb
mov
enter
pushf
loope
je
dec
mov
add
cmp
mov
fwait
xchg
movsl
adc
push
dec
ljmp
dec
jecxz
test
pop
mov
rcll
add
sarl
ret
and
repnz
jb
fistl
repnz
pop
pop
aas
lahf
xchg
lret
mov
xchg
insb
mov
ljmp
mov
lds
out
push
cmp
xor
mov
xlat
rcll
inc
xchg
or
insl
push
pushf
bound
sub
sub
mov
mov
inc
ret
or
sahf
enter
sbb
ds
popf
int3
ds
push
sbb
das
mov
cmpsb
dec
xchg
push
test
mov
pop
mov
jp
pop
loop
sbb
push
sbbl
cmp
inc
arpl
sub
mov
test
add
ja
pop
xchg
xchg
ja
push
bound
ljmp
bswap
je
mov
out
push
push
inc
sub
xor
jo
cli
push
xor
pop
sarl
pop
loop
mov
shl
scas
movsb
and
lret
pop
lret
aam
cld
or
lock
outsb
cmp
ljmp
stos
push
mov
fcomip
jle
jmp
pop
outsb
sub
repnz
gs
cmp
xor
add
repz
sbb
jnp
cmpsl
inc
sub
sub
movsl
cltd
stc
popf
cmp
cmc
xchg
sub
lock
xchg
in
jne,pt
ret
cld
sbb
mov
and
and
push
test
pop
mov
jb
xor
jg
stc
xor
sub
inc
sahf
fwait
jnp
pop
cmp
sbb
sub
push
push
xor
mov
add
sub
loop
cmp
stc
mov
flds
xchg
ret
mov
dec
push
xor
lret
outsb
in
or
fwait
jb
call
cwtl
pop
lock
or
je
pop
or
out
inc
pop
mov
clc
jp
sbb
and
into
fdiv
out
pushf
std
into
add
mov
xchg
sub
mov
sub
leave
xchg
pop
xlat
in
xor
jg
jo
jae
mov
out
xchg
arpl
andl
jno
sbb
pop
and
adc
test
repz
out
cmp
cmp
xlat
xor
mov
sahf
lods
loopne
mov
sbb
push
test
scas
mov
fisubs
gs
cmp
rol
xchg
les
mov
sbb
sahf
mulb
mov
lcall
push
mov
shrl
out
and
outsl
mov
out
sbb
mov
mov
mov
mov
ljmp
in
lret
xor
jle
lret
dec
test
jae
js
inc
push
cmp
outsb
popf
shlb
nop
inc
notb
or
dec
scas
hlt
jecxz
cld
data16
push
and
fisubrs
mov
repnz
test
popa
pop
adc
push
pop
insl
lods
adcb
mov
ret
sti
popf
or
rclb
or
or
pop
mov
shl
add
xchg
mov
adc
mov
mov
cltd
push
ret
das
mov
bound
stc
inc
lgs
jl
outsb
cmpl
das
xchg
mov
sub
gs
cmp
lahf
jle
xchg
adc
sub
movsb
repz
cmc
adc
ljmp
rclb
int
sbb
push
sub
xchg
mov
xchg
inc
sub
pop
arpl
jb
dec
mov
and
orb
bnd
xchg
sbb
lock
jl,pt
mov
or
sub
iret
filds
outsl
pop
pushf
jp
ficoml
into
sub
jle
aas
fadd
sbbl
rcrb
test
movsl
movlps
js
icebp
lock
jae
in
push
and
inc
test
daa
test
xorl
mov
out
fists
adc
inc
mov
nopl
cltd
fs
sbb
mov
rolb
imul
cmpsb
in
jg
test
mov
add
xor
mov
sub
bound
mov
ret
sbb
lret
xchg
dec
in
push
in
push
push
lods
stos
shlb
mov
pop
in
mov
add
jb
adc
xorl
mov
lahf
std
pop
sub
in
adc
and
data16
ror
mov
stc
es
outsb
arpl
fsubp
and
jo
sub
or
cmp
cmp
std
mov
enter
mov
addr16
mov
int
test
xor
pop
xchg
in
inc
pop
sbb
testl
sub
adc
lods
orl
and
js
xchg
lret
or
clc
sub
adc
or
shrb
mov
cwtl
roll
sti
and
hlt
cltd
mov
sbb
loop
loopne
cmp
loop
push
mov
cmpsl
jecxz
pop
add
das
jb
call
aam
cltd
dec
adc
inc
in
push
mov
shll
insb
pop
outsl
les
inc
adc
push
pop
jp
xlat
test
cmp
adc
int
int3
mov
cmpb
mov
inc
push
cwtl
cmpsb
and
shll
mov
push
or
and
je
dec
mov
or
incb
jne
daa
fsubs
push
int3
rclb
jb
das
push
mov
dec
es
rcrl
loope
sub
mov
inc
jns
movsb
repz
pop
xor
sti
xor
and
jmp
add
test
push
jge
or
int3
xchg
test
xchg
cmp
or
add
pop
mov
imul
repnz
mov
mov
out
or
push
pop
push
inc
xchg
inc
mov
lods
mov
ds
inc
pop
pusha
cmp
push
flds
jle
and
push
outsl
mov
mov
mov
adc
push
dec
test
mov
cmpsb
add
and
push
movsb
inc
add
je,pn
ret
daa
jl
shll
dec
adc
mov
cltd
push
push
addb
lods
adc
push
test
aad
mov
imul
add
mov
inc
cmp
ds
leave
lods
addw
xchg
test
xor
jno
jl
push
shld
int3
ljmp
sub
xor
hlt
dec
or
in
mov
shr
loopne
sbb
jle
lret
popf
or
les
adc
or
int3
xchg
xchg
pushf
fsub
xor
repnz
dec
push
mov
bound
stos
aam
sub
sbb
xchg
inc
outsb
xor
push
stos
cmpsb
mov
mov
popa
sbb
clc
ja
and
movsb
fldenv
les
and
inc
mov
sub
fdivrs
pushl
jb
aad
mov
lds
xchg
inc
stc
aas
dec
cmp
pop
sub
inc
xchg
ljmp
dec
jge
mov
sbb
xchg
push
jno
push
addl
pop
addb
inc
jl
mov
jno
aad
fs
sub
aam
xchg
jmp
mov
pop
dec
dec
cmp
fcomi
add
and
dec
nop
leave
xchg
and
andb
and
ljmp
or
push
lret
sbb
push
push
ja
sbb
subl
jne
xchg
dec
sbb
movsl
outsl
idiv
aam
enter
call
jb
mov
cmpsl
jp
inc
ss
dec
and
outsb
pop
enter
jmp
loop
or
ss
lods
and
add
mov
data16
enter
fstpt
adc
cmp
fisttps
out
push
pop
dec
dec
push
faddl
test
int
loope
rcrb
push
dec
fldenv
mov
cmp
in
test
cmc
lds
and
xor
xchg
sbb
lret
data16
pop
and
inc
sbb
and
mov
into
mov
cltd
push
dec
lret
addr16
push
lods
es
testb
dec
mov
icebp
add
in
fsubrl
fstpl
push
sub
inc
lea
pushf
decl
mov
dec
inc
int
sbb
pop
jp
stos
mov
cmpsb
add
lret
fistps
into
sub
loop
aam
insb
enter
jbe
xlat
fcoms
hlt
cmp
sbb
loop
es
sbb
mov
sahf
inc
call
fs
adc
mov
stos
mov
cmp
mov
mov
arpl
and
xor
jmp
push
push
scas
mov
je
mov
addr16
test
jo
inc
ljmp
mov
push
jmp
lahf
mov
dec
stos
into
adc
inc
popf
add
adc
into
add
jle
lcall
std
inc
inc
int
mov
cmp
dec
mov
mov
rorl
dec
lea
push
movsl
mov
inc
cs
xor
inc
getsec
sbb
inc
push
das
outsl
scas
jp
cmp
aam
or
mov
xchg
inc
xchg
cld
inc
cli
pop
mov
ja
cmp
rcrb
ljmp
push
lds
xchg
pop
gs
idivl
enter
sub
jno
adc
in
fistps
push
push
cmpsl
mov
add
scas
xor
mov
loop
stc
rcr
dec
lds
pop
add
dec
shll
rep
or
arpl
aam
sub
jge
xchg
lods
xchg
dec
outsb
sub
loope
icebp
cmp
cmpsl
fnstenv
pop
js
call
dec
sbb
scas
pop
jb
and
inc
pop
xchg
inc
push
inc
and
into
addr16
push
jnp
daa
push
mov
mov
inc
push
pop
dec
xchg
lret
loop
scas
and
xchg
insl
stos
rcll
test
data16
cli
mov
ja
in
xchg
pop
adc
ss
orl
add
adc
dec
push
mov
scas
xchg
cwtl
inc
pop
repz
orl
sub
cmp
cmp
sub
jge
cli
sbb
push
bound
mov
mov
movsl
add
pushf
cmpsl
xchg
cmc
bound
dec
cltd
in
jne
pop
adc
in
ret
adc
jne
nop
dec
cmp
and
sbbl
mov
adc
cmp
sbb
out
insb
js
std
push
and
or
adc
insb
cmpsb
mov
jno,pt
adc
je
pop
fs
xchg
nop
dec
pop
sbb
jne
cmp
fcomip
mov
add
fcoml
pop
fidivrl
jne
stc
lods
sub
mov
adc
dec
sub
and
fnsave
push
hlt
or
aad
xchg
ds
bound
mov
mov
jo
mov
hlt
push
test
or
clc
mov
insb
dec
clc
es
js
dec
out
loopne
xchg
mov
movsb
cmp
push
mull
inc
mov
gs
aas
adc
popf
jg
popf
lods
pop
roll
mov
inc
push
and
jno
push
push
shlb
repz
mov
pop
adc
and
mov
popf
cmp
lcall
sub
jnp
xchg
repz
push
mov
lret
lock
cmc
xchg
inc
jp
xchg
inc
ja
shrl
repnz
add
xchg
adc
ds
shrl
out
fucomi
ds
int
cmp
ficoml
cmpsl
popa
lock
outsl
mov
es
push
movb
xchg
push
clc
pop
push
leave
cld
pop
xchg
mov
mov
gs
xor
mov
or
int
mov
aaa
adc
int
jg
pop
cld
das
and
es
xor
xor
adc
cwtl
enter
movsb
shll
cmpsl
ds
jmp
lcall
inc
mov
ja
test
mov
mov
push
sti
jl
mov
xchg
xchg
add
loop
pop
aaa
loop
mov
les
push
jns
mov
or
xchg
inc
push
add
aad
pop
adc
and
or
sub
pop
ret
jmp
or
adc
and
sub
xchg
inc
sub
pop
or
shll
js
adc
fcmovne
cmp
lret
cli
jo
ss
jns
pop
hlt
push
fistpl
dec
stos
and
or
jns
mov
sub
fbstp
cmp
jmp
enter
arpl
in
adcl
std
xor
mov
sahf
cmp
dec
xor
push
rcll
fimull
push
addr16
inc
mov
push
test
ret
inc
test
and
data16
pop
xlat
mov
test
add
daa
pop
das
jl
adc
scas
repz
leave
loopne
pop
dec
cmp
loop
push
xchg
pop
daa
sub
dec
jecxz
repnz
mov
push
stos
xor
pop
or
bswap
sti
xor
adc
clc
add
insb
or
or
aas
movswl
gs
cmpsl
mov
mov
jo
sahf
sub
jle
pop
out
push
and
int3
test
jle
pop
in
adc
adc
dec
adc
lds
lcall
jb
cltd
mov
shll
or
out
sbb
int3
in
enter
dec
jl
clc
cs
lret
loop
jb
movsb
adc
pop
clc
add
loopne
mov
dec
or
cltd
xchg
lds
sub
jg
imul
and
jns
aas
jmp
icebp
jbe
scas
and
stos
xor
mov
mov
pop
cmp
mov
jmp
inc
movsb
mov
imul
mov
jae
ja
xor
ds
imul
mov
adc
adc
ret
pop
nop
jne
pop
add
mov
aaa
jmp
sub
inc
mov
cwtl
mov
fwait
enter
mov
push
cs
mov
fistps
test
and
add
test
sbb
aam
mov
loopne
into
jbe
repz
lret
shl
mov
mov
clc
mov
cs
cmp
xor
lock
shl
jb,pn
rorl
mov
mov
lods
jns
jle
std
add
and
test
ficoml
rorb
and
in
or
xor
xor
dec
add
sahf
imul
clc
jno
inc
stos
sbb
jnp
and
xchg
and
push
mov
sbb
addr16
out
mov
xor
or
scas
in
cmp
pop
sub
sbb
pop
pop
cli
and
xlat
push
xchg
pop
jp
or
ja
stos
and
inc
call
les
mov
stc
pop
push
movsl
leave
mov
rolb
rorl
xor
push
and
mov
rcll
cmp
enter
dec
sub
xchg
fdivrp
std
pop
stos
mov
or
orb
ror
ja
sub
pop
adc
push
xchg
je
xor
movsl
adc
cmp
xchg
std
loop
pop
fucomip
cmp
jno
pop
rcrl
jp
les
stos
ja
jle
mov
movsb
jo
xchg
push
mov
ljmp
stc
scas
fisubl
add
daa
lahf
imul
mov
andb
push
loop
lds
or
and
or
push
nop
and
and
add
mov
dec
mov
dec
popf
adc
mov
push
ds
push
lea
fs
sub
imul
stos
xor
scas
lcall
adc
fsub
test
pop
jle
shr
cld
sbb
sbb
push
or
decb
cmp
pop
or
push
mov
sahf
outsl
jg
insb
lock
sbb
and
daa
dec
cmp
outsl
jo
ljmp
out
fildl
xchg
ja
pushf
mov
fcom
mov
mov
mov
jns
and
jmp
mov
push
sub
mov
sub
pop
mov
addr16
mov
mov
nop
iret
ffree
mov
adc
or
pop
fdivrp
stos
and
mov
test
ret
movsb
inc
xchg
xor
dec
fsubrp
es
xchg
dec
add
and
ds
mov
inc
das
add
xor
xor
ja
fistpll
mov
je
testb
cld
adc
sub
pmaxub
icebp
sub
addb
mov
push
lret
rorb
sbb
sbb
and
outsb
mov
sub
in
jo
test
xchg
or
xor
mov
sub
mov
jb
jbe
addr16
and
and
lret
sub
xchg
hlt
out
dec
mov
je
and
fdivrs
jmp
cltd
sbb
stos
fidivs
push
xchg
cmpsl
scas
int
jmp
jns
insb
sub
lock
xchg
imul
dec
fdiv
jg
fs
cmp
enter
clc
or
jg
inc
xor
andb
push
cli
add
cltd
cs
in
out
push
das
bound
adc
push
arpl
sub
pop
add
add
push
inc
cltd
mov
outsl
lret
cwtl
mov
cltd
or
insb
imul
mov
cmp
aam
dec
cmp
pop
fdivr
mov
jae
mov
adc
ss
add
xorl
and
lret
jmp
cmp
dec
movsl
sub
repnz
int
repz
sbb
insb
ja
cmp
pop
mov
inc
xchg
cmp
inc
inc
add
lret
std
and
ja
fdivs
loope
or
push
jl
push
mov
fadd
repnz
lahf
adc
rcrl
enter
jae
jmp
in
rcrl
xchg
clc
mov
iret
cltd
movsb
outsl
test
xchg
xchg
xor
pushf
add
test
addr16
in
dec
test
mov
mov
xor
add
and
test
outsb
mov
jno
jl
stos
sub
cmp
xchg
sub
push
add
imul
sahf
pushf
add
add
adcl
xor
outsl
push
filds
bound
fwait
cmp
scas
js
cld
mov
aam
sarl
bound
cmc
jmp
xlat
mov
rol
sub
push
mov
daa
push
lea
pop
cmc
adc
jo
fidivl
notb
xchg
adc
iret
lret
jbe
mov
out
or
push
loope
sub
push
mov
std
insb
stc
dec
mov
stos
pop
gs
leave
pop
dec
adc
inc
ss
pushf
cmp
jae
sbb
addr16
inc
adc
rcrl
or
rol
arpl
addl
in
xor
adc
rcrl
push
popf
insl
aam
xor
xorb
orl
push
cmpb
out
shl
dec
test
push
cmc
decl
out
push
inc
inc
or
fcoml
mov
fmulp
test
push
nop
and
add
cmpsb
daa
jae
rorl
pop
ss
jl
adc
xchg
lods
dec
aam
lea
mov
fdivrl
idivl
rcrb
loope
mov
aad
xchg
and
aad
inc
lret
clc
loope
aaa
push
in
loop
loope
in
mov
pushf
in
addl
jle
jbe
stos
rorl
outsb
dec
mov
sub
pop
stc
outsl
cmpsb
cs
push
sbb
xchg
je
push
cli
push
inc
mov
fidivrl
pusha
jp
add
mov
push
repz
imul
sbb
pop
stc
jg
dec
sub
jmp
clc
push
mov
and
mov
aas
or
dec
lods
imul
es
lcall
push
aam
push
xchg
inc
add
imul
and
repz
push
sub
pop
test
jecxz
cwtl
sarl
mov
ljmp
imul
mov
call
xchg
ret
lret
mov
bound
pop
mov
insb
aaa
push
incb
ljmp
mov
mov
testl
pop
push
lock
arpl
std
mov
pop
dec
and
push
jo
sbb
adc
mov
movl
pop
mov
arpl
shll
repz
scas
hlt
rcrb
sbb
and
jl
mov
pop
adc
repnz
stos
xchg
xlat
dec
jg
pop
in
lods
fisttpl
mov
ret
jmp
mov
xor
xchg
sub
adc
mov
xor
dec
adc
stos
movsl
lret
cmpsl
xchg
sbb
ret
movsl
cmpsl
push
js
ror
call
add
movsl
jge
es
and
xchg
jg
xchg
jg
lret
dec
cmp
mov
push
stos
or
daa
subb
sbb
adc
dec
sbb
ljmp
sbb
loope
push
sbb
adc
add
test
pop
sbb
adc
inc
mov
rorl
xor
int
push
ja
add
notl
imul
mov
sahf
push
loope
mov
push
push
das
pop
and
inc
bound
fildll
ljmp
ror
inc
pusha
inc
or
pop
scas
pop
pop
dec
jge
jbe
xor
cmp
rclb
call
sbb
ljmp
in
cmpsb
xchg
adc
cmp
gs
ds
bnd
inc
xchg
sahf
inc
xchg
in
jae
mov
fiadds
sahf
addr16
dec
shll
or
aad
xchg
push
adc
xchg
lds
sbb
pop
gs
or
mov
icebp
std
jae
scas
push
lea
into
xor
push
sti
pop
fisttpll
push
xchg
adc
cld
pop
jno
inc
lahf
loopne
mov
lock
in
and
xor
ds
loop
cmp
imul
loope
test
insl
sub
iret
or
mov
push
faddl
cmp
adc
rclb
push
cs
int
or
cmp
dec
sbb
aas
mov
mov
in
inc
aas
or
call
fimuls
adc
insl
jge
push
push
sub
rcll
arpl
sti
inc
dec
cmp
mov
ljmp
mov
movsb
mov
adc
movsl
loop
sub
pop
pop
mov
lea
pop
into
xor
mov
inc
mov
ss
int3
out
shll
dec
ss
ss
lds
cli
sub
push
add
loopne
and
mov
xor
test
rolb
cli
push
dec
arpl
pop
mov
cmp
add
negb
mov
cmp
lock
mov
out
lcall
cmp
xchg
xlat
std
insb
test
inc
inc
push
mov
inc
mov
mov
or
push
int
jno
inc
out
pop
mulb
jl
js
cmp
sbb
cmp
cmp
cli
mov
adc
jno
pop
out
out
mov
xor
mov
xchg
out
xor
outsl
pop
insb
add
sub
xchg
push
jl
insl
sub
adc
jne
cmpsl
hlt
pop
subb
mov
xor
sbb
fwait
adc
clc
jmp
jnp
inc
pop
call
aaa
outsb
jmp
ret
testb
icebp
negb
jl
ret
leave
leave
cld
je
xor
jns
in
sub
stc
pop
inc
mov
mov
fstps
and
cmc
push
lret
subl
fsts
mov
push
fistl
outsb
ss
mov
nop
jb
pop
pop
jns
jle
faddl
adc
adc
dec
mov
movsl
lahf
add
sbb
pop
iret
andb
inc
cwtl
pop
jp
in
das
sbb
mov
icebp
push
or
pusha
std
jbe
mov
cmpsl
dec
inc
xor
shll
add
and
mov
mov
xor
pop
in
push
cmp
mov
mov
and
fwait
jno
or
ret
dec
scas
add
clc
inc
shl
or
ds
cld
cld
xor
pusha
sbb
aas
fnsave
jg
push
sbb
test
lods
or
les
mov
xchg
mov
jle
scas
outsl
cmp
mov
imul
xor
dec
mov
lods
fdivrl
mov
cmc
stos
xor
xchg
repnz
jno
and
scas
xor
cmp
xchg
imul
jne
cmp
test
lret
sub
aas
testl
mov
and
mov
jo
and
dec
mov
leave
test
push
aad
add
push
clc
pop
push
insb
jle
pop
cwtl
and
xlat
pop
test
mov
ja
pop
bound
in
jmp
outsb
lea
mov
pop
xor
enter
leave
test
adc
mov
fstp
imul
leave
das
mov
xchg
inc
cmpl
iret
fcoml
xorl
pop
jg
xor
call
scas
mov
xchg
int3
xchg
sbb
cmc
loopne
xlat
popf
add
jno
inc
lret
push
lods
push
inc
jmp
mov
setle
aam
cmp
jl
xor
mov
loop
data16
adc
sbb
lods
out
jg
lret
mov
test
sub
push
jns
sbb
call
sub
cltd
das
xorb
sub
stc
sub
jg
inc
jns
xchg
cmp
xor
jns
lea
outsb
lods
inc
mov
dec
jp
mov
enter
pusha
push
cmp
mov
dec
cmp
call
jl
cmc
cwtl
dec
ficompl
out
or
test
rorb
jo
aaa
repnz
sbb
xor
xchg
dec
test
daa
xchg
movsl
sbb
sahf
mov
xchg
or
test
or
cmc
mov
cmp
lods
pushf
sbb
loopne
mov
rcrb
je
rcrb
jbe
inc
push
es
xchg
sbb
xor
pushf
xchg
scas
loop
pushf
arpl
out
or
push
fdivrs
out
push
xchg
mov
bound
sti
cmpl
movsb
mov
loope
jns
xchg
xchg
imul
fbld
xchg
jns,pt
cli
lret
pop
inc
push
push
sbb
aas
jp
roll
jns
lock
sub
out
cmc
xchg
clc
imul
xchg
loope
dec
add
fldt
dec
iret
sub
sbb
cwtl
xchg
popa
dec
je
cmc
test
cmp
pop
lds
repz
gs
fwait
es
imulb
lods
ljmp
mov
je
dec
adc
fdivr
lock
scas
jp
mov
xchg
andl
addr16
sti
or
jge
mov
jle
xor
mov
or
int
leave
loop
loopne
push
insl
movsb
test
xor
adc
inc
rcrl
gs
xchg
stc
push
lret
pop
jmp
sahf
filds
lcall
sub
sub
stos
adc
aaa
push
and
test
xor
sub
push
orl
cwtl
xor
out
or
test
inc
repz
test
testl
jbe
and
dec
imull
cwtl
add
xchg
iret
lds
dec
mov
add
mov
repz
jne
jbe
jmp
adc
in
push
push
mov
inc
push
movsb
imul
movsl
stos
cltd
inc
outsl
push
imul
aam
jecxz
push
pop
mov
mov
inc
cmp
enter
imulb
aad
pop
jge
stos
lock
aam
mov
stos
stos
cmp
sbb
cwtl
cs
fbld
loopne
adc
shrl
jns
mov
mov
lret
inc
push
sub
inc
out
mov
inc
inc
lea
fdivrl
jg
in
and
add
jbe
inc
loope
ds
push
mov
lock
shll
add
push
notl
lcall
shrb
inc
mov
sbb
cmp
gs
xor
adc
xchg
sbb
adc
jle
push
popa
popa
dec
rol
mov
xchg
adc
out
repz
dec
xor
dec
add
andl
test
and
mov
leave
lods
hlt
lahf
js
mov
les
lcall
leave
and
popf
lds
sub
lods
gs
jge
xor
pushf
ret
pop
mov
dec
xor
and
push
ljmp
inc
add
outsb
mov
mov
add
stc
jle
mov
cmpsb
frstor
mov
lcall
lret
cmp
icebp
xchg
into
add
mov
nop
mov
xchg
mov
icebp
andl
out
cmp
inc
dec
jae
xor
je
adc
lds
mov
dec
dec
daa
jecxz
leave
fs
enter
mov
fbstp
jns
ljmp
enter
test
push
mov
xor
and
push
mov
jb
add
lods
loopne
xlat
push
xor
pop
pop
test
dec
push
cmpsl
sub
sbb
lea
jb
popf
adc
dec
push
xchg
flds
lods
int3
push
or
pop
add
fdivrs
push
add
imul
pushf
gs
cmp
inc
jge
dec
leave
loop
arpl
aam
fwait
es
push
xchg
push
sub
cmp
loope
adc
in
call
mov
cmp
sub
mov
frstor
ficomps
xchg
inc
stos
les
cwtl
out
jb
fldl
es
out
and
into
fiaddl
xor
out
in
xchg
out
adc
sbb
inc
fwait
andb
aam
lds
sub
daa
fs
cmp
addl
xor
push
gs
push
rcl
pop
arpl
push
std
mov
test
inc
or
and
imul
fs
fldl
out
xor
fsubrl
xchg
and
sarb
add
jmp
mov
lods
lds
das
mov
scas
inc
gs
mov
mov
fidivrl
adc
xchg
adcl
adc
in
xor
mov
add
and
mov
repnz
in
jno
pop
ss
cmp
in
faddp
cmp
add
mov
inc
and
pop
daa
outsl
push
jo
enter
pop
inc
roll
sbb
pop
xor
or
dec
push
pavgb
push
jbe
sbb
jl
sub
add
sbb
pusha
scas
adc
and
cld
xchg
mov
sub
sbb
je
pop
mov
pop
cmpsl
das
clc
popa
pushf
scas
sbb
sbb
push
in
arpl
inc
pusha
pop
std
pop
xchg
popf
push
xorl
xchg
dec
repz
orb
xchg
shl
scas
cmp
addb
jns
dec
ja
xchg
idiv
decl
fiadds
out
xor
lock
push
shll
xchg
or
xor
test
scas
mov
mulb
je
stc
push
notl
and
rcrl
adc
cmp
vmread
divl
dec
mov
in
dec
jecxz
inc
pop
xchg
mov
mov
add
xlat
in
xor
sub
jne
sbb
fadds
out
aam
loope
xor
mov
push
inc
push
ljmp
jnp
jle
stc
lret
cmp
mov
ljmp
mov
dec
push
add
xor
push
out
fldt
jge
xor
or
sarb
lret
jmp
pushf
adc
mov
leave
sbb
add
test
xlat
xchg
sub
insb
or
jo
int3
loop
jbe
xor
pop
inc
aam
jl
jl
sub
xchg
lock
xchg
movsb
mov
cs
inc
pusha
xchg
sti
sbb
mov
jns
xchg
int
inc
cmp
mov
test
jbe
mov
outsb
or
mov
jno
fisubl
jp
jne
popa
sbb
jge
scas
push
test
addr16
call
scas
sbb
xlat
dec
mov
lahf
xor
jmp
sarb
jle
std
dec
xor
mov
jne
inc
js
repz
lods
nop
mov
mov
jecxz
push
push
out
jp
and
nop
insb
loopne
fisubs
and
sbb
or
xchg
imul
call
movsl
add
adc
lret
mov
inc
xor
mov
and
xchg
aad
xchg
movsl
imul
jbe
pop
iret
pop
or
inc
or
dec
mov
mov
inc
pop
mov
or
xchg
sub
loope
mov
or
mov
sub
sbbl
and
jmp
mov
xchg
in
hlt
xchg
lock
cli
push
jo
mov
cmp
shlb
dec
adc
cwtl
lods
mov
cmp
test
test
dec
jnp
ljmp
ret
mov
ja
mov
dec
pop
test
xchg
cwtl
cwtl
dec
hlt
test
mov
mov
popf
shl
lds
jecxz
sbb
aas
add
mov
cmpsl
inc
jmp
mov
lret
scas
imul
std
sbb
leave
push
and
loop
fwait
push
cmpsb
out
inc
addr16
lret
fsts
sbb
scas
mov
pop
sub
mov
mov
cmp
daa
xor
fidivl
xor
xlat
cmpsb
daa
ja
out
js
cwtl
movb
xchg
mov
push
rclb
idiv
or
in
xor
cwtl
push
inc
pop
repz
jne
ret
sahf
mov
in
les
mov
aaa
mov
loopne
mov
fisttpl
fmulp
cld
lret
mov
push
or
mov
loop
lea
cmpsb
mov
fcomi
rcrb
xchg
std
mov
inc
sub
sub
stc
fsubr
mov
ljmp
stc
xor
repnz
clc
sahf
xchg
in
cs
add
pcmpeqw
or
xchg
sbb
sbbl
daa
fcmovu
fmul
jno
push
out
sarl
sbb
iret
or
jbe
adcb
jl,pn
cmp
cmp
nop
inc
xchg
adc
ljmp
outsl
cmp
into
adc
dec
addr16
inc
and
outsb
push
sahf
xor
rcl
cmp
push
fisttps
std
addr16
orb
leave
sahf
leave
cld
lahf
cs
popf
xor
mov
sub
adc
enter
mov
pop
dec
and
popa
cld
sbb
stc
mov
mov
cwtl
xchg
mov
test
fcoml
das
mov
add
and
in
and
cld
sti
lret
inc
sarb
sub
adc
sub
adc
les
addr16
mov
jge
leave
nop
mov
xchg
jecxz
test
jp
insl
lds
lcall
int
outsb
loope
add
inc
sbb
cltd
call
jle
addb
dec
xor
cmc
imul
aam
pop
out
mov
mov
iret
out
rcrb
ret
fucomi
sub
arpl
repnz
ret
pop
lret
fstpt
stc
mov
inc
jmp
mov
fwait
cld
andl
sub
cmp
cmp
mov
mov
mov
add
push
dec
jnp
test
into
je
inc
sub
sbb
xor
lcall
mov
push
test
mov
lock
cltd
or
loope
inc
stc
add
hlt
gs
test
ja
xchg
xor
test
xchg
xchg
push
jbe
or
dec
mov
jmp
add
xchg
jmp
push
test
aaa
fisttpl
lret
cmp
jle
xor
xor
sbb
pop
cltd
fstpt
xor
dec
pop
jno
shll
xor
insb
sub
or
mov
aam
in
sahf
pop
xchg
pusha
fimull
cld
movsb
and
ja
adc
push
pop
push
mov
jmp
mov
pop
xor
les
arpl
jnp
push
enter
ret
fisubrl
push
pop
push
xchg
mov
xchg
sbbb
xchg
clc
and
rol
inc
cltd
stc
add
push
mov
jo
aam
sar
jbe
imul
shll
mov
iret
fucomp
or
les
adc
test
push
pop
cmp
cmpsb
loopne
and
aam
sub
in
sbb
insl
xor
int
pop
fcmovnu
aam
lahf
add
lock
lods
sbb
es
mov
scas
xor
outsl
cmp
call
xlat
jne
test
iret
test
mov
arpl
fistl
mov
cmp
push
fdiv
cmpb
out
cmpsl
cmp
call
xor
and
pop
mov
mov
fistl
roll
sahf
and
mov
cmp
sbb
adc
xchg
repz
mov
lock
inc
mov
mov
mov
rcrb
repz
das
mov
inc
or
mov
push
or
xor
dec
adc
push
dec
ret
mov
or
aaa
push
adc
jmp
xchg
mov
mov
mov
lcall
test
inc
mov
in
adc
ret
out
ja
or
add
shrb
std
aaa
sbb
inc
dec
out
xor
push
inc
xor
xlat
out
mov
pop
insb
arpl
dec
adc
jb
pop
dec
sbbb
jb
rcrl
cmp
les
lds
sbb
std
in
push
xor
adc
add
xor
int
dec
das
push
test
dec
lock
and
adc
jecxz
mov
jl
push
outsl
mov
lret
push
mov
enter
lods
leave
sbb
dec
repz
cmp
sub
int
in
push
mov
lret
xor
jecxz
movb
or
xchg
mov
dec
out
jg
outsl
pop
ret
lods
mov
enter
mov
adc
in
pop
mov
cmpsb
cmp
and
mov
sub
pop
sbb
inc
jb
inc
shll
cs
mov
jp
lods
nop
cmp
scas
push
adc
aaa
das
or
dec
xchg
imul
ss
dec
adc
cwtl
push
and
inc
inc
pop
adc
sub
aad
cltd
sbbb
out
inc
pop
in
orb
jp
and
inc
and
sbb
and
adc
cmp
test
sbb
divl
in
or
inc
pop
repz
xchg
push
mov
out
cmpsb
mov
ret
js
dec
add
mov
inc
fcomps
nop
dec
pop
xlat
aam
push
push
subl
orb
mov
jnp
dec
adc
ret
dec
inc
push
pushl
sub
xchg
jb
mov
push
rcr
cli
xor
leave
push
push
aaa
frstor
pop
subb
stos
fs
add
xor
fwait
dec
rorl
andl
lds
stc
je
pushl
pop
roll
lahf
xor
lods
cmpsl
out
lods
xchg
xlat
jg
dec
ja
pop
push
stc
test
cmp
sbb
out
out
subl
add
add
mov
and
outsl
adc
or
stc
ljmp
mov
xchg
lcall
cmpsb
imul
movzwl
imul
stos
jg
inc
sub
jl
mov
or
out
into
fldl
sbbb
pop
jnp
mov
mov
mov
sti
repnz
push
push
push
mov
scas
push
pop
xor
and
cld
inc
ret
enter
lret
jno
xor
fsubr
pop
and
addr16
outsl
mov
sti
lock
into
sti
sarb
pop
outsb
stos
push
test
ljmp
push
push
sub
add
xchg
or
mov
rclb
scas
in
daa
push
add
cmp
addr16
inc
mov
roll
or
xchg
ds
mov
cmp
pop
dec
mov
sbbb
add
or
test
cmp
mov
gs
sub
loope
mov
xchg
sbb
lds
and
jle
neg
fwait
push
das
in
je
test
imul
adc
mov
jecxz
mov
pop
pop
mov
adc
in
test
nop
mov
sub
mov
clc
xor
cmp
mov
in
jmp
xor
sbb
daa
push
cwtl
sbb
inc
decl
push
insl
adc
test
push
subl
adc
sub
jb
cmp
mov
jne
xlat
je
cmp
mov
pop
jne
sbb
ja
mov
jg
fidivl
repnz
jns
lods
shl
push
inc
and
add
dec
push
lret
jnp
pop
mov
outsb
inc
push
cmp
test
or
in
rolb
jmp
les
jnp
xlat
fstl
cwtl
js
fs
mov
add
jecxz
into
clc
outsl
adc
push
scas
xchg
mov
shr
rolb
jp
sbb
mov
lret
mov
loope
pushf
js
mov
sbb
and
xor
inc
std
push
out
or
in
mov
leave
and
push
je
imulb
pushf
icebp
sub
pop
and
mov
repnz
sarb
or
outsl
sarb
lds
into
xchg
aad
cmp
movb
out
mov
js
xchg
jae
in
call
adc
jnp
mov
mov
in
xlat
popf
mov
mov
push
notb
stc
xchg
cli
jecxz
jo
int3
in
mov
loop
adc
shl
outsb
in
cmp
and
and
insb
clc
in
and
xchg
adc
push
pop
xchg
mov
addr16
push
loop
xor
shlb
xchg
inc
dec
xor
adcl
int3
rorb
jae
mov
mov
sbb
ret
xor
pusha
test
test
rcll
xchg
in
inc
jl
lret
cmc
or
inc
add
pop
add
fucomip
jg
add
in
mov
xchg
lock
push
xchg
mov
sbb
xchg
insb
jg
and
mov
cltd
arpl
in
std
fstl
mov
dec
clc
inc
cltd
pop
out
movsb
dec
add
and
lret
mov
mov
shrb
jnp
sub
jne
aad
or
in
test
clc
mov
dec
inc
outsl
inc
lcall
xorb
iret
dec
cs
mov
loopne
xchg
outsl
mov
call
pop
pop
fildl
xchg
clc
sbb
adc
pusha
sub
iret
mov
imul
xor
mov
mov
xor
jae
dec
sbb
push
cmp
ret
stos
loopne
cmp
xorb
mov
add
out
xchg
test
cltd
xorl
sahf
sbb
test
ss
adc
mov
fnstcw
sbb
shll
int
or
das
insb
mov
popa
in
cltd
loop
stos
xorl
xchg
mov
jno
add
mov
cwtl
jns
aam
daa
in
sbb
add
stos
fcmovb
jae
loope
cltd
mov
adc
out
push
inc
dec
xchg
andl
xchg
les
fisttpl
mov
pop
shrb
mov
fstpl
js
jbe
out
or
ficoms
xor
hlt
popa
pop
cmp
andb
pop
push
xchg
push
and
xchg
in
cmp
clc
push
jmp
inc
fdivrp
cmp
mov
mov
lcall
jns
mov
jmp
or
scas
enter
lods
loop
dec
fs
dec
dec
movsb
popf
lock
pop
mov
mov
mov
mov
test
sbb
pop
rdrand
sub
popa
ljmp
movsl
ds
cmpl
bnd
sbb
shll
scas
fwait
test
pop
xchg
out
inc
push
lret
add
sbb
sbb
dec
or
jnp
cmp
mov
cmpps
cmpsb
xor
push
push
add
inc
ficoms
push
inc
xchg
or
mov
add
cmpsl
shl
loope
gs
repz
hlt
and
sti
mov
sub
xchg
jo
rcll
mov
inc
jg
test
mov
pop
jae
out
jb
pop
les
pop
std
jne
inc
decl
sbb
xchg
adc
lcall
lock
dec
es
sbb
addr16
lods
insl
or
and
jecxz
sub
mov
daa
push
pop
dec
sub
mov
inc
cwtl
hlt
xor
scas
add
aaa
jae
dec
lods
sub
cmp
mov
jnp
dec
adc
stc
call
and
inc
jle
pop
push
dec
or
je
lcall
inc
lret
sub
jmp
mov
fwait
sub
cwtl
push
cmpsb
daa
sub
mov
fimull
xlat
mov
xor
xchg
ficompl
and
jb
mov
jnp
push
xchg
push
in
adc
pop
cltd
pop
cld
mov
dec
ss
or
pushf
cmp
enter
pop
adc
sub
jns
jno
lret
xor
sbb
inc
es
icebp
dec
mov
sbb
cmp
push
cmc
pushf
out
fisubs
je
jne
dec
sbb
jno
push
jl
insl
test
js
call
jl
xchg
int3
into
adc
or
adc
rclb
sub
add
aaa
negl
mov
nop
loopne
or
jb
rorl
jecxz
les
dec
inc
mov
pushf
daa
iret
shl
sub
leave
pop
jge
and
jl
and
loope
mov
pusha
call
xor
sar
arpl
imul
sbb
or
orl
mov
repz
mov
dec
in
fadds
jo
mov
push
mov
push
filds
add
inc
fwait
or
popa
ja
mov
add
cmp
mov
adc
jnp
dec
lds
popf
stos
mov
js
mov
stc
stos
sub
std
lods
sbb
mov
jmp
ds
jecxz
fnstsw
pusha
dec
fwait
xchg
out
cmp
mov
jmp
cmp
lea
mov
lea
mov
mov
push
sub
cmpsl
jge
jmp
gs
push
addr16
mov
rorl
add
mov
or
test
mov
sahf
fdivrp
scas
clc
insb
test
add
sti
lea
das
cmp
mov
cmc
pop
popf
inc
inc
pop
mov
repnz
jge
fidivs
adc
lahf
lds
cmp
aam
mov
pop
frstor
int
cmp
push
sub
or
jo
and
push
mov
xchg
ficoml
fstpl
mov
xor
add
outsl
or
mov
lds
add
aam
sbb
inc
enter
cmp
adc
xlat
mov
mov
sbb
pop
iret
popf
stos
lea
mov
fldz
outsl
mov
or
jl
bound
fimull
pop
ret
decb
iret
dec
cmp
mov
loop
pop
scas
sbb
push
sbb
xor
cmp
dec
fcoml
mov
pop
xchg
jge
sbb
lcall
pop
jmp
sahf
or
jb
mov
inc
jge
popa
mov
and
loop
adcl
sub
add
and
inc
sub
dec
add
mov
stos
lret
popa
iret
push
add
gs
loope
in
push
mov
mov
lahf
jb
xchg
xor
cmp
inc
pop
nop
adc
mov
jo
dec
sub
mov
mov
xor
shr
xlat
popf
sbb
or
and
xor
sarl
insb
cltd
fsubp
sbb
mov
inc
add
fwait
mov
mov
fstpt
push
adc
imulb
xor
pop
mov
fmuls
mov
fimuls
fs
or
dec
push
mov
adc
stc
mov
lods
pop
add
xorb
or
mov
mov
jno
into
iret
scas
mov
loope
or
sub
idivl
adc
cwtl
mov
xchg
mov
mov
add
ljmp
and
or
test
xor
or
jecxz
xchg
mov
rcll
cmpsl
cli
fs
sbbb
pushf
push
data16
sbb
test
ss
fwait
mov
push
pop
inc
popf
xor
cmpb
imul
mov
cmp
fcmovbe
jno
mov
int
push
shlb
repz
mov
fisubrl
out
int3
push
adc
shll
call
rcrl
pop
mov
dec
cmp
push
lods
xchg
sbb
sub
cmpsb
outsb
mov
gs
adc
jmp
ss
push
mov
ret
mov
fldt
stos
sbb
push
movsb
add
jnp
les
daa
jmp
ja
sub
roll
rcl
scas
dec
dec
inc
in
mov
jbe
xchg
mov
jl
lock
in
or
push
cwtl
add
cmp
push
dec
cmp
mov
push
push
or
xor
outsb
lock
cltd
xchg
je
les
ss
cmp
pusha
testb
adc
mov
mov
jno
cltd
pusha
loop
mov
sti
dec
bound
push
dec
mov
fxch
pop
js
loope
push
jle
cmc
jno
pushf
daa
and
clc
mov
fisttps
stos
cs
or
pop
sbb
dec
or
scas
cld
xchg
mov
mov
negl
negl
into
sar
adc
inc
movsl
insb
push
adc
imul
or
lret
sbb
xchg
push
dec
fdiv
add
and
dec
aas
cwtl
push
stc
fld
mov
dec
outsb
inc
cmp
xor
mov
or
fisubrl
test
out
cmc
or
std
int3
cltd
into
pop
int
cli
nop
fcom
lret
pop
mov
pop
jo
loopne
mov
mov
jno
xchg
jnp
cmc
cmpsl
sbb
pop
jo
pop
in
fnop
xor
cmp
and
je
dec
cmp
rorb
mov
push
adc
daa
push
mov
mov
add
push
test
repnz
ret
xor
negl
xchg
mov
or
in
pop
pop
inc
les
ficompl
xchg
iret
pop
and
cwtl
call
lcall
pushf
dec
inc
push
outsb
lret
imul
xchg
and
roll
jecxz
adc
ds
pusha
ret
mov
adc
sub
pop
cmp
test
xchg
out
ds
mov
cmp
pop
aad
negl
and
movb
jb
divb
mov
dec
jmp
or
sub
mov
popf
mov
push
ret
mov
or
dec
mov
xor
loopne
int
mov
cld
or
test
andb
inc
dec
fwait
xchg
inc
jb
loopne
roll
clc
cwtl
das
lock
xchg
stos
nop
xchg
leave
cmc
andl
add
test
lret
push
imul
fistps
incl
mov
xchg
outsl
sbb
sub
test
xor
or
lcall
clc
pop
or
push
sbb
pop
dec
in
xor
sbb
cwtl
mov
or
insb
fidivrl
jae
jecxz
sub
loope
sub
push
push
push
inc
pop
int3
testl
jecxz
test
mov
out
inc
les
push
or
cmpsl
mov
popaw
xchg
js
and
mov
std
lods
into
xchg
pop
jbe
pop
or
inc
call
sysenter
pop
js
out
adc
pop
xor
test
inc
push
cs
stc
or
stc
inc
push
mov
and
aad
lock
mov
adc
jae,pn
jo
cmc
add
push
lahf
aas
test
xchg
mov
cmp
mov
pop
std
shl
cmp
ja
inc
out
mov
ret
test
dec
xchg
imul
xchg
lret
jbe
mov
ljmp
test
fsts
ja
dec
in
inc
dec
or
add
shll
enter
xchg
add
dec
pop
xchg
cmpsb
sub
lods
dec
mov
cmc
test
roll
shll
push
dec
cmp
and
xchg
loopne
inc
xchg
and
xor
pop
pop
mov
lds
mov
xchg
ljmp
xchg
in
in
mov
push
lcall
mov
int
sub
jle
mov
pushf
pop
pop
push
and
je
into
sbb
push
adc
icebp
dec
orb
mov
lcall
hlt
int3
lcall
mov
push
pop
inc
mov
push
inc
insl
xchg
sbb
rol
jmp
fmull
mov
push
cmp
test
xor
mov
mov
inc
fistps
iret
inc
cmp
es
test
stos
push
rcrb
hlt
xchg
jmp
jmp
movsb
and
in
mov
add
das
jle
push
loope
or
cwtl
jmp
add
std
out
pop
andb
push
jmp
push
mov
fcomip
cmp
stos
ffreep
add
rcll
xchg
aam
outsl
adc
jno
cld
jl
add
dec
imul
ret
test
out
mov
cmc
cmp
sbb
mov
adc
xor
ficompl
ret
aaa
adc
out
sbb
inc
adc
stos
inc
fistpll
in
mov
and
jbe
repz
cmp
lahf
pop
dec
inc
xchg
lret
movsb
insb
mov
ret
cs
or
xor
jnp
mov
pop
push
inc
jmp
pop
ret
bound
and
sbb
xor
inc
clc
out
mov
out
xor
lahf
mov
in
fwait
mov
add
push
jne
sti
gs
push
dec
xchg
hlt
sub
add
aam
inc
imul
out
adc
cs
dec
add
pop
call
dec
imul
bound
int3
push
mov
cmp
fnsave
testb
hlt
jmp
push
push
nop
sub
daa
xor
test
push
dec
cld
movsl
inc
xchg
out
popa
mov
xchg
das
xor
neg
clc
jnp
es
mov
push
or
sub
push
pop
fs
outsl
int3
jg
jl
ret
mov
dec
mov
add
mov
mov
movsl
push
mov
nop
cmp
push
ds
add
addr16
loope
sarl
aad
testb
repnz
xor
cmp
push
out
jp
orb
loope
fisttpl
or
lock
sub
orl
xchg
sub
xor
pusha
dec
sbb
out
jecxz
cld
xchg
loop
jle
xchg
arpl
pushl
jg
cmpsb
outsb
lods
lcall
mov
lods
loope
and
loop
cmp
mov
push
lcall
or
and
xchg
xorl
pop
dec
jmp
sahf
fs
mov
push
repz
mov
outsl
gs
add
adc
inc
cmp
shrb
icebp
xchg
xor
int
xor
sub
rolb
add
add
sti
shlw
scas
loopne
mov
lahf
and
test
aaa
ja
shl
arpl
in
mov
ljmp
sbb
xchg
clc
sub
cmp
xor
cmp
lcall
das
stc
adc
add
enter
fldl
sub
lcall
stos
jnp
adc
in
arpl
fimull
xor
inc
cmp
dec
popf
popa
pop
imul
cli
xor
mov
sbb
inc
andps
and
cli
sub
test
xor
inc
or
scas
fwait
cmp
mov
push
test
adc
xor
xor
mov
dec
mov
xor
pop
and
in
cmp
mov
xor
test
xor
cmp
jmp
mov
and
jo
loopne
das
dec
pop
cld
jno
aas
sbb
je
insb
pop
inc
lods
cmpsl
add
stos
mov
jge
lods
jns
cs
push
sub
cwtl
loope
mov
xchg
fwait
stos
xchg
outsb
mov
or
xor
loope
aam
stc
and
inc
cmc
fdivl
jmp
ficomps
mov
adc
mov
dec
insb
push
or
sahf
jae
xor
and
icebp
shl
daa
je
imul
push
fs
inc
roll
mov
dec
cltd
cwtl
outsl
fdivrl
jb
je
std
js
lds
lds
cli
fstpt
cli
and
out
iret
jle
lea
call
cmp
mov
mov
lahf
lea
xchg
pushf
stos
and
dec
jbe
dec
lds
xchg
jae
sbb
jnp
mov
xchg
mov
lods
xchg
rcrl
test
das
pop
xor
pop
mov
lret
bound
mov
or
mov
shll
or
push
ljmp
rclb
icebp
sbb
repz
call
fwait
cmp
mov
add
insl
mov
inc
jbe
push
incb
pusha
jmp
push
stos
test
arpl
test
and
sub
push
add
shrl
mov
jmp
push
sub
je
and
enter
into
mov
jns
lret
xchg
je
sahf
xor
mov
mov
xchg
add
adc
adc
sarl
ja
jg
divb
mov
pop
cmp
xor
dec
push
lods
repz
cmp
jmp
add
push
xchg
or
mov
cmp
dec
mov
and
cmp
imul
inc
std
ss
push
lret
popa
sub
sbb
lods
decb
les
nop
cld
dec
lea
hlt
or
dec
lret
enter
push
out
cmpsl
jb
push
int
and
push
inc
fsubs
notb
into
add
lcall
pop
push
inc
xchg
out
dec
cmpsb
scas
jnp
stc
jb
cmp
inc
lcall
mov
sahf
dec
cli
lea
and
jns
rcr
pop
sbb
and
sbb
sbb
addb
xor
mov
or
add
xchg
clc
mov
jmp
jg
xchg
adc
jecxz
xor
mov
scas
xchg
pop
add
mov
xchg
cltd
notl
jbe
mov
sbb
lods
mov
rcl
push
fstps
add
ret
mov
loop
xorl
frstor
fcmovu
in
movsl
mov
dec
jae
mov
adc
sub
and
ja
daa
test
sub
push
fnstsw
repz
push
mov
cmc
xor
fisttpll
xchg
lods
push
add
lret
shlb
adc
dec
and
push
xchg
sbb
ret
lock
popa
jo
loopne
xor
sub
ss
sub
cmc
fsubl
adc
mov
and
jbe
ljmp
inc
sub
pop
dec
cmp
pop
xchg
jb
sub
jbe
adc
std
sub
das
dec
call
lods
mov
cmp
loopne
pusha
leave
shll
jae,pt
adcb
dec
mov
sbb
push
mov
mov
push
mov
std
jb
rcll
fcompl
mov
sub
add
jl
leave
cltd
loope
inc
in
sub
loop
add
sub
dec
push
repnz
cmp
add
es
repnz
movsl
add
mov
nop
mov
in
stos
repnz
cmpb
xor
sub
sub
mov
sarb
lock
mov
repz
fistl
pop
pop
not
ja
lret
xor
out
mov
data16
loopne
and
idivb
jmp
ret
sbb
adc
cmp
mov
incb
cmp
inc
mov
dec
pop
dec
cwtl
mov
dec
adc
xorl
ss
test
sub
gs
or
sub
or
xchg
ljmp
sub
pop
push
stos
sub
fcmovu
dec
cld
and
push
aam
jmp
add
lret
fidivs
pop
mov
fdivrs
add
mov
test
xor
das
jb
fs
out
imul
pushf
pop
scas
cmp
imul
adc
hlt
jle
dec
jno
in
push
dec
or
call
arpl
add
xchg
cmpl
imull
xor
push
jb
aaa
jmp
jg
popf
add
jno
stc
sti
sbb
adc
xlat
js
jmp
jle
ljmp
ficompl
imul
push
fildl
fcoml
mov
add
lea
in
cmp
xor
rolb
sbb
jbe
jno
xor
sti
push
sbb
shrb
add
mov
push
jp
test
and
into
lcall
sub
pop
stc
or
shrb
clc
into
and
cmp
and
sub
or
push
inc
push
clc
fstl
shr
mov
popf
pop
pop
stc
ja
mov
popa
sbb
jl
cmpsl
mov
into
dec
jb
or
sbb
sti
jno
imul
push
sub
mov
cmovge
jl
and
sub
xchg
push
jo
outsl
or
das
push
rclb
aas
pushl
arpl
push
push
sub
mov
ret
cmp
jbe
fwait
out
repz
fistps
imul
mov
pusha
dec
pop
jo
cmp
aad
ret
jo
daa
movsl
cmp
xlat
sub
test
push
xchg
or
xchg
xor
dec
test
jp
push
push
push
out
mov
test
enter
xchg
pop
or
cmpsb
aaa
xor
pop
jl
mull
addl
jp
loopne
test
inc
sub
mov
mov
je
arpl
mov
inc
popa
jmp
push
push
pop
negl
int3
pop
mov
dec
dec
and
rcr
jge
outsl
inc
fisubl
enter
xchg
scas
xor
in
das
jae
sbb
in
push
repz
lahf
mov
sub
pusha
cmp
and
mov
jg
fstpt
rcrl
pop
es
sahf
inc
aas
lock
call
scas
insl
andl
or
xor
cmovo
xchg
sub
add
mov
pop
in
movaps
aam
shrl
ja
sbb
rol
mov
cmc
lcall
dec
lret
push
iret
mov
das
fbld
xchg
roll
cmp
cli
fsubp
je
pusha
ljmp
cmpsb
gs
inc
psrld
xor
dec
cmpsl
js
fimull
sti
adc
dec
repz
cmp
mov
in
adc
out
aad
cmp
clc
out
mov
mov
das
lods
jecxz
mov
mov
fwait
xor
mov
pop
or
fisttpl
pop
mov
psubusw
sbb
ja
dec
inc
cmc
fmul
mov
or
fucomp
aad
xor
inc
xchg
jno
movsb
sbb
ss
sub
push
mov
sbb
sbb
aaa
push
lahf
fcompl
xchg
pop
stos
in
pop
inc
push
or
xchg
out
inc
flds
lcall
dec
stos
xor
push
ficoms
or
int3
loopne
jbe
push
cwtl
aad
push
cmc
ficoml
arpl
popf
sbb
sub
adc
jle
popa
jbe
test
iret
push
add
daa
inc
sub
insb
add
adc
les
jae
ret
mov
mov
push
pop
incl
jge
fildl
sbb
mov
cmp
xchg
pop
inc
insb
lcall
add
xchg
in
mov
sub
pop
loop
pop
lock
push
outsb
insl
jle
cmc
pop
push
xchg
icebp
add
pop
push
ret
rolb
mov
in
pop
push
pop
cmp
and
jg
mov
add
pop
or
dec
and
xor
addr16
cld
mov
jne
sub
insb
frstor
push
inc
jo
mov
test
adc
adc
push
jae
cld
push
inc
and
jnp
out
in
xor
fbstp
mov
jmp
cmp
or
cs
fldt
push
jl
adc
and
stc
xchg
xchg
and
rolb
add
push
sub
mov
sti
jbe
xor
push
loopne
cmp
jmp
es
call
sahf
dec
cs
aas
jno
dec
jae
mov
sbb
sub
jae
cmpsb
xlat
imul
adc
leave
push
jg
loop
add
test
push
mov
dec
adc
ficompl
jno
jmp
test
shrl
mov
pushf
imul
in
adc
in
jae,pn
or
or
dec
xlat
add
inc
mov
mov
es
xchg
int3
lock
fidivrs
or
mov
pop
call
into
sbb
dec
dec
ret
popf
sub
mov
sbb
inc
adc
aam
jmp
add
sub
icebp
mov
cmc
mov
cmpsb
pop
sahf
dec
outsb
mov
xor
ja
aam
scas
pop
lods
mov
cmp
in
pushf
push
push
adc
inc
xchg
es
ja
mov
frstor
mov
mov
dec
arpl
movsb
rorb
insl
pop
fdivp
mov
and
dec
jmp
fistps
rolb
loope
aad
cmpsb
jmp
arpl
cs
fwait
mov
scas
mulb
leave
cwtl
push
mov
pop
bound
in
and
cli
push
push
jmp
in
fs
insb
stos
xchg
sub
jl
filds
fwait
shlb
mov
loope
loope
insl
das
outsb
mov
pop
mov
cmpsb
into
movsb
mov
enter
or
adc
mov
dec
pop
adc
movsl
pop
dec
push
xor
loop
push
notb
dec
fmuls
inc
out
ds
and
fisubl
inc
xchg
xchg
mov
or
push
mov
add
pop
pop
mov
inc
sbb
xchg
adc
fsub
jbe
movsl
icebp
jns
jnp
jnp
add
jnp
std
jp
pop
bound
sbb
popf
loopne
sub
xor
stos
arpl
imul
or
in
inc
adc
fcmovnu
and
in
push
andb
pop
fiaddl
inc
jb
pop
xchg
push
mov
adc
cs
xchg
aaa
sti
inc
test
jge
pop
clc
dec
add
fidivrl
push
pop
outsb
push
xor
mov
ficoms
mov
cmc
ficomps
xor
sbb
dec
and
ret
or
dec
outsl
sbbb
or
imul
pop
jo
fiaddl
mov
mov
xchg
std
jnp
inc
mov
mov
ss
mov
fwait
xchg
call
pop
sub
fcompl
adc
xor
mov
pop
and
lret
mov
aaa
ret
jbe
pop
sbb
pop
sbb
dec
lods
jo
cmp
in
and
out
dec
cmpsl
and
push
push
jmp
aam
jno
and
mov
mov
sahf
lret
cltd
shlb
xor
inc
push
repnz
std
cmp
pushf
jnp
xchg
jmp
icebp
sub
and
jae
aad
les
dec
repnz
cwtl
decl
xlat
cs
jmp
movsl
mov
dec
ret
jne
jl
inc
pushf
pop
int3
adcl
sahf
push
inc
fstl
cmp
fnstsw
and
adc
sbb
cwtl
std
inc
mov
mov
fnsave
pushf
dec
xchg
xor
pushf
mov
iret
sub
add
ds
pop
xchg
imul
stos
add
jno
mov
mov
fwait
andl
fcmovnbe
mov
cmpsb
jmp
mov
and
imul
mov
icebp
into
and
test
sub
test
int
push
xor
pop
les
jbe
or
xorl
sbb
mov
sbb
adc
aam
out
dec
filds
cs
int
rorl
jle
int
std
icebp
add
and
sbb
dec
adc
push
in
ret
push
js
mov
mov
testb
ja
mov
lcall
test
add
mov
and
sbb
mov
cwtl
les
fnstsw
pop
mov
arpl
sbb
in
das
pop
and
push
testb
addr16
orb
stos
dec
push
cltd
sbb
dec
in
cmp
xchg
outsl
bsf
ja
stc
ljmp
outsl
cmp
es
leave
popa
clc
roll
lods
ret
test
fmul
stos
pop
dec
cli
ds
rol
jecxz
mov
push
inc
in
ljmp
adc
jno
mov
repnz
int
push
inc
sbb
int
xor
enter
cli
sub
mov
data16
dec
mov
cmp
movsl
xchg
pop
ds
dec
xchg
in
inc
flds
loop
stos
xor
pop
lret
inc
aaa
int
mov
or
xchg
int
xor
dec
aam
test
sub
stos
clc
cld
mov
mov
mov
leave
mov
sbb
jmp
stos
in
mov
test
fs
push
mov
adc
cwtl
cmc
ror
rorb
mov
jp
rcll
rolb
jecxz
fsubp
xor
psrlw
repnz
mov
mov
dec
sub
cmpsl
pop
lods
dec
cmpsl
mov
mov
sbb
mov
dec
mov
mov
jne
push
dec
cmc
push
mov
lret
jns
sbb
push
decl
xor
jp
int3
adcb
ffree
jg
cld
adc
sub
insb
pop
popf
xchg
popa
test
push
sub
addb
in
pop
rorl
in
cltd
notb
stc
push
shl
cli
js
pop
inc
inc
rolb
cmpsl
and
sbbw
add
fistpl
test
mov
lds
aam
int3
dec
arpl
mov
jae
pop
repz
jnp
mov
mov
mov
jg
or
cmp
jmp
push
hlt
mov
push
mov
inc
pop
test
popa
push
inc
js
fisttps
mov
adc
inc
push
pop
xchg
mov
int
mov
inc
cmp
subb
flds
addr16
xor
sbb
call
es
xchg
loopne
jae
iret
gs
sahf
mov
in
aad
test
or
pop
and
out
adc
repnz
or
bnd
pop
or
xchg
or
pop
xor
lret
bound
adc
ja
adc
in
ficoms
adc
xor
in
push
inc
add
out
mov
add
jno
mov
xor
inc
mov
and
in
mov
xorb
insb
subl
jl
loope
sub
mov
mov
fsubs
mov
test
inc
mov
sub
jns
inc
aam
es
sbb
outsl
pop
pop
repnz
lahf
inc
iret
xchg
pop
or
mov
dec
stc
jmp
in
add
lcall
mov
pop
mov
sbb
cmc
test
lcall
mov
ljmp
mov
jbe
mov
pop
mov
loopne
push
cmovs
insb
bound
pop
mov
test
and
inc
lahf
inc
in
out
xor
iret
dec
sbb
pop
addr16
xchg
pop
mov
inc
pushl
mov
sub
mov
cmc
addr16
sub
push
jnp
mov
inc
sub
out
ljmp
enter
cmpsl
pop
repnz
xlat
push
ss
aas
jmp
mov
leave
imul
shlb
dec
pusha
mov
push
fdivrp
out
imul
sub
mov
pop
sub
ret
mov
out
lds
cld
xchg
add
ljmp
es
xor
dec
add
fisttps
mov
sti
test
fwait
out
stc
loopne
sahf
bound
jmp
pop
mov
cmpsl
xor
dec
push
mov
decl
xor
sbb
jmp
sbb
out
pop
test
call
mov
jmpw
xchg
inc
cmp
inc
cwtl
pusha
les
lock
iret
stc
lea
lret
mov
xlat
inc
xor
leave
jae
cmp
cmp
rorb
mov
dec
mov
fisubrl
into
mov
fdivr
test
jle
subl
xchg
lock
push
jne
in
mov
xchg
rcrb
xor
scas
xchg
repz
nop
mov
dec
js
aam
and
std
pop
mov
push
fwait
mov
cmp
inc
enter
ds
popf
pushf
pop
jg
sub
dec
jp
or
jbe
lds
test
test
popf
xor
sti
mov
pop
cltd
cmpsl
shlb
decl
push
sub
and
pop
incb
mov
push
and
add
inc
loope
aas
dec
outsb
mov
jmp
mov
xor
sahf
sbb
mov
push
push
scas
mov
mov
jns
xchg
call
in
cli
mov
bsr
movsb
sahf
mov
and
jg
fisttps
ja
dec
adc
outsb
scas
call
es
sub
ja
xchg
jmp
rcrl
push
mov
push
and
jne
xor
mov
jmp
xchg
sub
nop
clc
fwait
and
mov
jmp
fmuls
xchg
add
jl
mov
xchg
clc
fldl
xorb
or
sbb
call
mov
mov
xchg
sti
jge
jmp
push
sub
bound
push
jnp
dec
test
xorb
xchg
dec
adc
lock
pop
cmp
push
add
add
pop
xor
mov
add
movsb
add
jmp
jno
mov
call
clc
repz
pop
iret
sbb
or
jae
mov
je
dec
sbb
xor
inc
int3
sbb
jp
pop
pushf
dec
pop
out
and
cmc
mov
jo
int
jae
aas
fs
sbb
jecxz
mov
ss
ds
push
sbb
icebp
push
mov
movsl
repnz
mov
rclb
fldt
iret
push
jnp
mov
sub
jle
nop
sbb
adc
jno
push
sahf
pushl
and
pop
sahf
sahf
shl
xor
pop
cmpsl
stos
mov
sahf
loopne
or
add
sub
mov
cmc
dec
scas
jno
jg
mov
push
push
pop
pop
or
mov
inc
ss
roll
mov
push
xchg
in
sti
aaa
data16
jg
call
int3
adc
xchg
leave
sbb
xor
popa
aad
mov
adc
cmp
mov
cmp
test
cmp
mov
filds
push
lea
xchg
pop
mov
inc
lret
jns
mov
pushf
repnz
fstl
pop
or
ljmp
mov
roll
or
xchg
scas
imul
sub
outsl
aaa
cmpsb
mov
stos
mov
aad
aaa
cmpsl
mov
call
fldt
xchg
push
je
inc
inc
imul
and
push
pmovmskb
push
movsb
cmp
sub
push
add
ss
hlt
sub
mov
xchg
sub
vandpd
out
inc
xchg
pop
push
jge
sti
xchg
pop
in
or
xor
sub
adc
cwtl
ror
outsb
push
aad
push
or
loop
nop
mov
and
daa
mov
cmp
mov
and
and
nop
adcb
cld
pusha
adcl
cs
js
inc
andl
outsb
mov
out
pop
xor
sub
mov
mov
mov
je
test
mov
jmp
jmp
rol
les
xor
pop
inc
xchg
push
push
popa
pop
sbb
imul
mov
decl
lods
repz
fistpl
shrb
add
daa
fs
aam
sub
add
adc
into
sti
js
sahf
sar
scas
test
repnz
pusha
dec
sub
popf
inc
jmp
cli
aaa
or
mov
inc
mov
js
int
int
loopne
mov
mov
mov
mov
ja
js
xchg
dec
ret
mov
pop
rolb
fs
test
adcb
add
fldl
insl
mulb
movsl
inc
leave
xor
lds
dec
out
roll
lcall
ret
rcll
pop
rcll
xor
pop
or
xor
ds
inc
lock
rclb
sbb
cmp
add
icebp
out
and
jbe
cs
imul
jne
mov
mov
dec
aam
push
rorb
jbe
cld
filds
adcl
clc
cmp
or
mov
sub
popa
jo
out
mov
fstl
jno
out
fadds
cmp
mov
popa
xor
push
pop
mov
pop
push
dec
xchg
out
xchg
jmp
out
int3
inc
sarl
mov
loopne
jl
xchg
mov
outsb
aam
fisubrs
aad
mov
pop
iret
mov
adc
fsubs
stos
and
mov
repz
sub
mov
out
lcall
jnp
xchg
andb
repnz
dec
xchg
lret
pop
cltd
jo
les
ds
pop
hlt
shrb
add
cmpl
cmp
icebp
cli
jle
inc
loop
mov
enter
push
lcall
popf
push
arpl
out
sahf
and
pop
mov
lods
in
imul
aas
test
and
jne
fwait
dec
xor
xor
dec
idivb
ljmp
mov
aas
adc
jecxz
pop
cmp
push
mov
and
pop
dec
mov
push
add
sub
or
aas
ss
cmp
mov
fidivs
inc
inc
push
rcr
sub
xchg
sub
fldenv
pop
repz
jecxz
jge
push
pushf
inc
cmp
xchg
bound
pop
and
jns
imul
jbe
sub
std
mov
mov
push
or
mov
loope
pop
cmp
mov
xor
pop
cmp
mov
sub
test
mov
enter
adc
xor
nop
test
jl
dec
lea
loope
inc
popa
iret
push
push
nop
mov
xor
jmp
rcrb
mov
outsl
mov
outsl
jae
inc
lahf
inc
bound
rcrl
dec
shll
js
mov
pop
mov
mov
flds
dec
ljmp
lcall
aaa
inc
js
cmpsl
xchg
pop
aaa
sub
mov
mov
and
xor
sub
ret
lock
sbb
pop
sub
call
jns
mov
hlt
sbb
add
jg
repz
xor
jae
push
or
fcmovnbe
fbstp
out
out
pop
xor
jle
popl
add
xchg
inc
sub
and
cmp
mov
add
ds
mov
shll
loopne
push
fs
enter
mov
dec
leave
inc
imul
xchg
xor
jno
arpl
ljmp
mov
test
or
vandps
pop
aad
repz
pop
fmuls
add
ljmp
out
dec
popa
mov
add
ficomps
decb
jb
add
loope
add
js
loope
idivl
jb
testl
out
mov
jae
xorb
sarl
js
leave
daa
xchg
je
orb
xor
pop
cwtl
push
fcompl
mov
sub
rolb
mov
je
inc
xor
scas
movsb
stc
inc
cmp
fldcw
test
sbb
cmp
mov
adc
outsl
push
divb
sar
xorl
js
cmp
pop
pop
test
adc
pushf
cmc
lcall
aas
add
push
mov
dec
fadd
xor
inc
jmp
jg
sarb
adc
mov
arpl
mov
pop
mov
call
xchg
or
mov
ficoml
sarb
ficoml
std
jmp
add
xorb
pop
inc
inc
xor
loope
jne
inc
and
push
fsubrp
inc
sub
dec
nop
sbb
xchg
cmovs
out
sub
add
sub
lret
jae
hlt
mov
xlat
mov
inc
insl
push
pop
xchg
ss
fwait
jmp
cmp
bound
pcmpeqd
adc
mov
mov
inc
cwtl
mulb
adc
adc
sub
xor
lock
push
ficomps
out
xchg
sbb
inc
mov
sub
movsl
jns
fstl
pop
sti
add
nop
push
dec
mov
mov
ss
mov
addl
jns
es
sbb
and
push
popl
mov
lock
rcll
out
mov
push
sub
sub
test
icebp
cli
loop
insb
mov
rorb
cmpsb
insb
scas
ret
or
scas
rcrl
dec
jle
push
or
cmp
mov
cwtl
lret
xor
cmp
loop
mov
add
add
jbe
lahf
aam
testb
mov
mov
mov
mov
inc
sbbb
and
cmp
outsb
decb
aaa
cs
xchg
sub
ret
movsb
lods
icebp
and
jb
aaa
and
or
push
clc
daa
sub
rcll
nop
push
fwait
cld
popa
mov
sbb
mov
push
or
mov
out
std
repnz
dec
pop
jnp
gs
add
aam
pusha
scas
int3
out
fcomps
xor
push
jmp
inc
mov
mov
cmp
dec
pop
imul
xchg
fucomi
xor
pop
lock
inc
lcall
mov
rorb
outsb
les
ret
mov
add
shll
or
and
jge
js
and
or
andl
xchg
inc
mov
jb
outsb
jg
dec
sub
mov
jmp
inc
mov
lock
push
jnp
cmp
fildl
ret
adc
cmpsb
lock
pop
jnp
add
cwtl
fistpll
inc
push
mov
in
dec
add
stc
js
cmp
jne
lock
mull
push
pop
js
test
pusha
rorl
icebp
orb
or
outsb
test
mov
ljmp
jns
adc
add
je
addr16
pop
test
std
fucomi
mov
ret
sub
xchg
clc
hlt
mov
dec
fistl
les
scas
or
test
js
inc
outsb
out
push
and
inc
call
adc
sahf
mov
sbb
dec
mov
mov
cmp
and
daa
push
call
dec
xchg
cmp
cmp
cmp
dec
xor
outsl
adc
sahf
ss
lahf
cltd
test
push
repnz
add
ficompl
add
and
mov
push
or
outsl
push
loopne
adc
add
test
test
pusha
xor
dec
sbbb
pop
sbb
push
push
adc
xchg
arpl
push
call
jo
mov
rol
sbb
lds
out
shlb
out
mov
cld
and
cmp
mov
je
test
hlt
xor
sub
pushf
inc
subb
aad
imul
mov
cmp
sub
mov
int
xchg
push
js
dec
cmp
insb
insb
xchg
inc
enter
fldt
lock
add
inc
test
cmpsb
adc
cmp
iret
push
adc
arpl
push
or
jl
in
xor
pushf
imul
cmp
aad
cmpsb
mov
js
inc
adc
jg
addr16
push
jg
loop
xchg
mov
nop
fsubrl
cmp
or
mov
push
lcall
js
outsl
mov
xorb
shll
cltd
adc
and
lock
pop
imul
pop
jg
pushf
cmp
jne
pop
decl
push
jl
jo
mov
rcrl
mov
iret
push
ret
push
cld
inc
add
jge
ret
rorl
lahf
mov
jne
outsl
fists
inc
push
daa
lahf
xor
in
psubw
dec
pop
enter
dec
lods
imulb
xchg
jge
ja
pushf
and
jb
adc
out
lahf
enter
popf
adc
mov
cmp
clc
inc
sarl
pop
int
adc
ret
xor
xor
mov
lds
pop
push
jne,pn
aad
les
dec
xchg
jb
shrb
rcrl
add
jle
or
jl
mov
pushf
test
stc
cli
aad
imul
leave
jns
out
fistpll
cld
pop
lahf
add
addr16
and
mov
mov
mov
leave
in
xchg
lret
dec
fstpt
mov
insl
in
or
xchg
pop
out
and
movsb
mov
leave
cmp
and
and
repz
rclb
iret
repz
xor
fisubrl
push
repnz
pop
jbe
pop
xor
lret
inc
mov
cmp
in
mov
mov
mov
in
ret
insb
mov
fldl
clc
scas
add
loop
jle
push
cs
inc
mov
jle
loope
cmp
dec
add
lock
das
inc
pop
xchg
and
dec
add
pop
jle
call
jmp
lds
in
fildl
adc
test
or
sti
aam
mov
push
push
lods
lret
js
add
sbb
ret
mov
fnstsw
ret
lcall
enter
daa
jns
cli
cmp
sub
pop
sarb
adc
popf
divl
mov
xchg
cmp
cmp
rcrb
inc
scas
outsb
inc
jl
add
dec
jo
push
pop
fisttps
in
pop
cmp
and
mov
mov
lods
or
push
cmp
mov
push
cmp
loop
cmp
mov
dec
fidivrl
movsl
aas
pop
adc
xor
push
xchg
inc
push
push
andb
adc
and
jge
fwait
cmpsb
sbb
mov
xlat
or
lahf
lods
jge
or
dec
sar
fcmovnbe
jecxz
cmp
pushf
and
vcvtsd2si
fs
mov
outsb
fadd
mov
xchg
das
inc
push
repz
sbb
rclb
stos
and
in
or
fisubrs
add
cmp
sub
xchg
adc
jp
cmp
jl
mov
jns
fidivrl
imul
xorl
hlt
ret
pop
pop
les
dec
push
outsb
lods
int
jns
jge
mov
pop
cmc
into
dec
push
scas
sub
popf
in
inc
add
into
icebp
cmp
nop
fiaddl
sub
sarl
out
inc
or
or
and
sub
clc
es
push
stos
ds
movsb
loope
clc
jmp
femms
xor
lock
mov
mov
stc
cmp
and
or
inc
icebp
or
dec
jge
loopne
arpl
and
shll
and
fsubrl
jg
icebp
mov
ret
jae
pop
inc
jae
insb
jecxz
lcall
ja
dec
sbb
fs
stos
aas
imul
std
jae
ret
iret
pop
jnp
dec
inc
test
das
cmp
mov
enter
pop
div
jl
shl
lods
jp
jb
out
or
arpl
call
sub
sub
ljmp
out
icebp
pop
mov
cmpsb
pop
pop
jg
or
xchg
sahf
mov
adcb
or
ret
stos
lock
popf
sub
popf
inc
fdivrp
adc
dec
pushf
fdivl
mov
std
arpl
sub
lahf
pop
repz
int3
lods
rcl
adc
out
jl
test
mov
int3
mov
pushf
fidivrs
pop
sbb
btc
and
inc
insl
xchg
insl
xor
push
in
xor
cmp
dec
inc
ret
inc
mov
stos
xchg
add
push
stc
repz
sti
dec
mov
jecxz
sub
test
push
es
dec
lock
test
add
lea
and
mov
imul
int3
mull
jmp
cli
jge
pushf
aas
xchg
arpl
mov
hlt
xor
adc
dec
adc
fdivrs
jge
out
pop
push
cmp
js
add
inc
lock
std
cmp
inc
rcrl
xchg
faddl
jb
push
xchg
adc
rcr
addr16
or
cwtl
stc
pop
insl
test
xchg
sbb
ljmp
cmp
adc
dec
xchg
aam
pushf
xlat
clc
dec
sbb
sub
mov
push
out
stos
cli
and
add
push
sub
lods
jns
test
hlt
into
mov
frstor
movsb
push
in
adc
pusha
pop
mov
mov
pop
in
movsl
outsl
mov
movsl
je
jns
stos
leave
es
or
mov
adc
sbb
arpl
clc
fwait
subl
add
shrb
pusha
add
repnz
adc
leave
das
xlat
cltd
cmpb
jbe
mov
das
in
fcompl
aas
pop
sahf
jns
cmp
jmp
sub
mov
insl
inc
int3
sbb
sub
mov
sbb
mov
push
xchg
dec
xchg
test
in
scas
cmp
ljmp
cmp
fnstsw
push
xchg
sbb
xchg
xchg
mov
or
cmp
scas
repnz
div
mov
fisttpl
xchg
inc
les
test
pop
arpl
test
cs
fwait
pop
cld
int3
lret
imul
gs
mov
ret
aas
or
jo
out
xor
push
push
call
popl
mov
pop
inc
pop
and
into
push
jns
adc
or
fidivs
dec
in
cmc
lods
popl
mov
imul
pop
pop
adc
notb
sar
enter
pop
fcmovnbe
in
jno
out
sbb
lahf
rorb
repnz
ficompl
dec
sub
and
dec
mov
div
out
fistpll
or
cltd
stc
or
insl
sti
divl
mov
aad
adc
xchg
movsl
xchg
xor
cmp
dec
xchg
adcb
fwait
lcall
scas
or
fstpt
repnz
scas
inc
js
or
push
and
push
cmpsl
mov
mov
xchg
dec
xchg
mov
cmp
repnz
mov
cmp
dec
push
ss
out
xchg
lea
iret
jmp
xchg
add
call
mov
jecxz
into
daa
sbb
push
call
or
jae
or
lock
test
sbb
adc
aaa
push
sbb
ljmp
mov
std
js
push
jnp
hlt
imul
xchg
cld
xlat
hlt
or
push
lods
push
sub
ljmp
fwait
cld
ret
bound
or
push
pop
notl
cmp
in
inc
jo
out
cmpsl
dec
test
cmp
in
cld
outsl
mov
into
dec
outsl
cmp
das
adc
and
in
in
jnp
repz
lret
lahf
flds
jmp
inc
xchg
pop
sbb
cltd
xchg
jge
pusha
lds
xor
test
sbb
mov
inc
adc
and
pop
dec
mov
inc
int
sub
pusha
pop
fwait
scas
pushf
lea
dec
add
jns
sahf
fs
popa
add
fbstp
jnp
mov
sbb
imul
mov
and
movsb
out
sahf
push
mov
cmp
or
lea
iret
inc
push
add
test
mov
repnz
mov
and
add
roll
test
sbb
pop
and
push
outsl
push
les
ror
xor
incb
push
cld
or
sub
loop
mov
sti
test
xchg
cmpsb
jl
sbb
es
les
push
sahf
adc
ss
push
loope
mov
and
scas
aad
loop
stos
jae
std
cmp
mov
push
jmp
push
sbb
adc
mov
repnz
mov
add
mov
dec
xchg
jge
add
push
sbbl
enter
cmc
lods
mov
xsha1
cmpsb
bswap
aas
fnstenv
lds
jbe
xor
mov
int
sbb
ja
sbb
cmp
and
push
mov
rcrl
xor
ffree
push
les
cs
mov
push
daa
shlb
hlt
mov
dec
inc
orb
dec
test
xor
adc
sbbb
in
dec
pop
pop
mov
stc
pop
mov
cld
mov
sbb
or
dec
ljmp
sbb
cmc
in
mov
mov
push
mov
in
mov
push
sub
mov
in
xchg
pop
xor
cmp
inc
or
push
mov
clc
movsl
pop
subb
adc
rorb
jne
fstp
mov
test
inc
test
jo
jle
cmc
jl
inc
subb
or
jne
dec
push
pushw
pop
and
xchg
es
mov
xchg
adcl
les
sub
push
test
das
inc
pop
in
in
fwait
cltd
or
mov
ret
loopne
in
lods
xchg
inc
xor
dec
int
das
enter
sub
dec
sub
cmp
clc
fadds
in
cmc
test
lret
jno
ljmp
xor
xchg
inc
enter
sahf
ja
inc
push
sbb
mov
mov
xchg
inc
aam
hlt
incl
or
lahf
pushf
inc
pop
pop
sbb
cmc
add
data16
bound
cwtl
inc
push
leave
adc
xor
movl
adc
dec
dec
mov
fdivrp
sub
clc
mov
fcmovnu
aaa
sbbb
aam
repz
imul
mov
cmp
dec
push
test
inc
mov
subb
xorl
mov
pop
mov
hlt
cld
and
inc
clc
adc
and
cld
je
flds
inc
into
outsl
jne
mov
inc
cmp
ja
fmul
jg
mov
mov
sbbl
aad
jecxz
and
hlt
fstl
add
ret
repnz
jl
jmp
inc
cmpsl
outsb
pushf
shll
jb
mov
ljmp
pusha
jo
xor
mov
js
fsubl
push
and
fstps
dec
sbbl
adc
movsb
neg
cmp
lds
nop
stos
dec
mov
or
sti
les
add
sti
out
jg
adc
pusha
push
jg
mov
mov
xor
je
popf
jecxz
shlb
sbb
test
mov
cmp
inc
pop
into
fists
lods
push
pop
mov
sub
pushf
mov
rorl
push
sti
dec
int3
daa
and
int3
or
outsb
mov
sar
out
dec
int3
dec
loopne
jbe
add
jae
or
sub
push
mov
push
in
add
aaa
idiv
dec
lods
sub
sub
pop
add
sub
test
leave
cmp
dec
es
iret
dec
loope
enter
js
add
les
jbe
icebp
stos
xor
xchg
push
lcall
aaa
mov
cmp
push
pop
stos
inc
jbe
mov
and
adc
or
out
xor
add
or
xchg
mov
flds
dec
pop
out
adc
pop
add
imull
pop
xchg
jbe
roll
cltd
fistps
sbb
fidivrs
dec
enter
lcall
lahf
arpl
xchg
add
mov
and
scas
inc
add
add
xorl
inc
xchg
mov
lcall
xor
push
mov
xchg
scas
xor
aas
sub
ss
dec
fdivrs
sti
roll
insl
lret
cmp
outsl
mov
and
orl
push
and
pop
inc
inc
jnp
xor
adc
xchg
out
jo
das
sbb
in
xor
sub
adc
fcmovnbe
cmc
sahf
daa
add
cld
cmp
mov
ss
dec
sbb
cmp
lret
jmp
mov
xchg
rclb
loopne
and
repz
arpl
mov
fwait
insl
das
adc
inc
jecxz
test
shl
push
rcrl
in
leave
scas
push
sub
jle
sub
stos
test
cwtl
cmpb
lods
lods
movsw
jbe
push
in
adc
repz
pop
jae
push
clc
add
sbb
dec
popf
out
stos
stos
out
add
stos
inc
dec
and
xchg
adc
cmpb
mov
imul
lods
negl
push
inc
dec
popa
pop
rcrl
dec
sub
lods
ja
push
or
push
mov
in
pop
mov
add
insb
sub
mov
dec
and
cmpsb
sar
stc
inc
pop
pop
out
dec
xor
or
jno
xor
add
cmp
xchg
xchg
mov
movsb
and
sub
dec
sti
mov
xchg
fxch
push
mov
inc
lock
lret
test
js
push
clc
mov
addr16
mov
gs
adc
or
xchg
mov
dec
jo
nop
cmpsb
pop
sbb
sti
lds
addr16
cmpb
jmp
mov
pop
outsl
lock
and
xchg
loopne
pop
or
aam
mov
ljmp
lret
or
in
lds
push
mov
mov
fsts
lea
arpl
push
cli
icebp
lret
bound
push
xchg
fstp
fsubrp
dec
push
movsb
int3
es
cs
add
xchg
lret
sbb
push
inc
lds
add
mov
xor
jns
bound
call
cmpsl
sbb
or
or
pop
dec
xor
outsb
je
mov
faddl
or
into
pop
sub
stos
dec
pop
push
cmp
and
jbe
xor
movsb
mov
loopne
sbb
add
stos
stc
xchg
or
loop
in
mov
mov
push
ret
cwtl
jge
nop
test
loope
sbb
add
in
mov
out
shlb
cmp
dec
or
aam
push
insb
add
mov
and
out
test
ffree
jno
aad
or
sub
int3
or
stos
loopne
inc
xchg
sbb
sbb
enter
push
mov
sahf
inc
test
jns
pop
test
add
cmp
cs
lret
and
cs
pop
mov
fdiv
testl
mov
or
mov
loopne
add
and
pushf
es
rclb
leave
xor
sub
and
cmp
imul
push
sti
xchg
out
ret
sbb
pop
sbb
push
jo
mov
test
out
mov
aad
das
orb
jb
mov
not
sbb
out
pop
or
mov
lcall
mov
and
movsb
push
popf
loope
cs
ja
xor
ljmp
jmp
mov
jbe
fnstcw
sub
cmp
sbb
add
lods
push
dec
mov
sub
adc
inc
cltd
sahf
mov
sub
pop
dec
jg
push
and
push
es
mov
ja
sbb
ret
xor
stos
das
mov
or
and
nop
push
roll
sahf
mov
sbb
jno
sub
sub
mov
lds
dec
and
mov
int3
xchg
sbb
out
mov
and
mov
cmp
cmc
lret
mov
jl
fisttps
test
xlat
xor
xor
cwtl
xor
sahf
imul
or
mov
inc
ficoms
adc
lock
jno
lret
or
pop
lret
and
daa
ret
push
cmp
lea
test
push
subb
sbb
int3
push
scas
cmc
test
int
ret
into
mov
push
jne
cs
sbb
lcall
sbb
or
lods
aaa
push
jae
push
xchg
inc
out
push
sbb
pop
inc
or
pop
clc
aam
push
daa
xor
mov
call
inc
cmp
out
push
and
fwait
dec
lret
cmp
clc
and
sub
xchg
cmp
or
inc
inc
cmp
mov
and
lret
stos
shrl
and
push
sbb
push
repnz
mov
adc
and
mov
xchg
sar
cmp
xchg
in
or
jmp
fbstp
lret
push
mov
sub
jnp
dec
xchg
xchg
not
mov
xchg
cmp
pop
out
inc
inc
push
pop
push
push
lods
mov
js
jno
xchg
outsl
sub
mov
xchg
sarb
icebp
xchg
cltd
mov
jge
mov
fyl2xp1
fcos
popa
xchg
std
or
cltd
lret
cmc
xor
xchg
cmc
cld
fcoms
adc
cmc
orb
pop
mov
cmpsb
push
inc
mov
aad
mov
cmp
jle
ret
testb
mov
cwtl
nop
pop
xchg
cmp
and
adc
add
fwait
dec
mov
sahf
pavgb
lea
rcrl
xchg
xchg
inc
hlt
add
aas
mov
in
mov
push
imul
pop
arpl
jae
and
ljmp
rcll
test
rcl
inc
or
mov
addr16
add
pop
sbb
mov
mov
ret
cmp
test
gs
test
push
andl
cmp
xor
pop
xor
xor
sarb
test
and
cmpl
loopne
sbb
rorl
popf
cld
sub
cmp
xchg
in
popl
in
add
cli
rcr
cmp
sub
sti
les
push
dec
in
ds
insb
pop
loope
pop
adc
mov
in
fs
out
loope
xchg
repnz
xor
outsb
or
cmp
inc
mov
fnstsw
dec
imul
adc
cld
cmpsb
arpl
fisubrs
ss
dec
faddl
dec
xor
jmp
push
lcall
bound
push
int3
aam
mov
pop
mov
loopne
jge
pop
les
dec
or
ljmp
into
xor
aad
push
push
sbbl
push
in
and
in
mov
lea
ret
sti
fwait
adc
ds
jmp
dec
sarl
xchg
sub
test
and
insl
cltd
in
push
xor
and
inc
add
jae
xor
pushf
xlat
inc
and
push
or
xor
andl
mov
jmp
mov
dec
mov
xchg
cld
es
xor
mov
jb
cli
push
filds
lret
adc
inc
insl
aas
movsl
pop
ret
les
mov
jnp
inc
mov
xchg
pop
movsl
and
cmp
insl
mov
push
aad
cld
sub
push
push
sub
aas
push
inc
shl
jl
mov
jb
test
mov
lahf
insl
popf
out
hlt
fs
lret
jge
xchg
mov
add
imul
xor
loope
xor
dec
add
inc
pop
icebp
gs
outsb
repnz
outsl
int
pop
aas
ljmp
jbe
sti
push
sub
imul
cltd
inc
addl
sbb
arpl
call
mov
mov
mov
sbb
pushf
scas
pop
test
xchg
mull
aaa
add
test
add
push
repz
aaa
js
test
mov
mov
sbb
rcr
outsl
cwtl
leave
cmpsl
enter
jge
scas
push
xor
scas
jbe
loope
xor
pop
xchg
add
cmp
pop
cmp
and
add
and
lods
jle
pop
jmp
ljmp
shl
pop
mov
repz
and
idivl
and
inc
and
push
mov
add
addr16
and
leave
repnz
or
dec
lods
int
mov
or
jb
lods
pop
test
mov
jno
int
scas
push
cld
insl
call
sbb
sub
addr16
scas
inc
addr16
push
lcall
push
inc
out
inc
inc
pop
leave
sarb
sbb
loopne
hlt
aam
sub
in
leave
and
pop
test
or
pop
ss
scas
push
rcrl
sbbl
xchg
icebp
mov
movsl
jmp
or
or
addr16
jp
lcall
mov
stos
add
sbbb
xlat
adc
dec
xor
mov
stos
mov
mov
xlat
fldl
mov
mov
and
popa
mov
popf
mov
gs
xchg
ds
scas
mulb
jnp
and
cmp
nop
lret
insl
lret
aas
adc
push
daa
cmp
test
adc
in
xchg
add
outsl
data16
inc
fwait
sbb
lret
aaa
mov
mov
and
mov
push
rcl
cwtl
mov
xor
inc
jecxz
std
mov
push
push
jecxz
fldcw
dec
lods
fwait
gs
dec
fs
in
mov
mov
das
sub
rorl
leave
or
aas
mov
cltd
insb
in
push
out
xchg
adc
push
movq
popf
xchg
int
imul
add
pop
adc
cmp
je
jbe
rcr
sbb
mov
push
cmpsl
xchg
jp
fcmovnbe
fidivl
add
ss
cmp
pop
add
sbb
and
gs
add
mov
shr
add
cmp
mov
sub
in
push
jbe,pn
call
xor
ja
fisubs
sbb
mov
sbb
int
jle
push
xchg
push
sbb
sub
loopne
arpl
shll
roll
lcall
sahf
xor
xor
insl
push
dec
xchg
push
cmp
mov
xchg
add
mov
xchg
in
pop
or
and
or
repnz
mov
clc
xorl
enter
fisubl
cmp
or
lds
shrb
daa
push
movsl
insl
imul
and
ja
inc
dec
mov
scas
sub
fidivrl
add
push
jecxz
subb
adc
stos
stos
mov
sahf
fwait
add
xchg
fildll
repz
subl
dec
mov
jb
ja
adc
or
push
aad
lea
sbb
sbbb
stc
pop
pop
sahf
imul
out
push
out
or
enter
sarl
nop
cs
mov
sub
adc
inc
scas
sub
or
sub
sbb
jnp
sub
dec
or
dec
cmp
jae
jb
leave
fldl
dec
in
pop
out
mov
sbb
xor
xchg
icebp
es
push
aam
insl
or
xchg
and
lock
sub
pop
lea
mov
lods
push
daa
pop
cltd
mulb
xchg
insl
mov
repz
rclb
imul
mov
sarb
in
addl
es
add
mov
jnp
dec
jp
fcompl
cmp
jb
or
int
and
sbb
dec
dec
repz
add
scas
or
adc
clc
out
jae
pop
cmp
mov
jmp
dec
cmpb
repz
lods
pop
pop
adc
cltd
inc
cmpb
sahf
insw
imul
pop
lahf
xchg
xor
inc
stos
arpl
or
pop
aas
mov
adc
addr16
add
push
test
les
xchg
fwait
or
inc
pop
clc
out
mov
mov
lret
mov
mov
jle
out
dec
xchg
push
scas
je
mov
push
fsubrl
or
inc
mov
mov
idiv
xchg
adc
mov
ds
inc
xchg
pop
shll
maskmovq
mull
sub
dec
sahf
xor
mov
insl
sahf
stos
adc
sti
stc
jg
ja
xchg
xlat
outsl
jecxz
add
xchg
inc
and
stos
xor
cmpsl
jge
adcl
pop
mov
into
clc
xor
fadd
push
fldcw
in
adc
imul
popa
jle
cmp
leave
jo
xchg
clc
or
mov
sub
or
stos
ret
inc
inc
and
test
and
or
aaa
in
dec
aam
fnstcw
jp
xchg
rorb
sub
mov
add
stc
dec
sti
js
jno
sub
lret
sbb
arpl
lock
pushf
jg
push
ss
cwtl
push
mov
pop
xchg
mov
push
and
push
aaa
hlt
int
mov
lret
sub
loop
divl
dec
in
lcall
loop
sub
aas
mov
addr16
xorb
jae
loopne
aad
sub
jbe
cltd
pop
xor
jl
pop
cli
sub
repz
aam
repz
imul
lcall
scas
fimull
adc
xor
in
cmp
and
or
lahf
pop
cmp
scas
xor
and
inc
insl
mov
cmp
push
xchg
xor
jl
fwait
inc
ret
lahf
mov
in
pusha
sub
pop
mov
add
das
xor
pop
shrb
push
mov
push
es
lahf
into
mov
mov
rep
rcll
push
push
pop
cmp
xor
jno
imul
out
in
add
xor
gs
imul
inc
cmp
gs
out
xchg
cmc
mov
adc
xchg
cltd
and
fcompl
xor
subb
adc
hlt
and
push
xchg
shll
xorl
leave
mov
sub
push
fwait
das
xor
mov
in
add
test
add
sub
jnp
loop
sbb
pop
jb
popf
lret
xchg
and
inc
fcoml
mov
jp
mov
mov
adc
adc
or
mov
xor
push
daa
add
bnd
int
mov
mov
les
fwait
movsb
mov
cmp
loopne
mov
out
es
cmp
pop
enter
pop
sahf
mov
xchg
jns
dec
scas
hlt
pop
scas
out
sbb
and
into
or
jle
lock
pop
mov
int3
sahf
mov
pop
pop
dec
pop
bound
jle
push
lret
ljmp
aas
or
jp
insb
add
push
sub
ss
inc
inc
test
fidivl
loop
sub
ljmp
or
cvtps2pi
jae
sbb
sahf
pop
fnstenv
fcmovbe
loop
pop
push
adc
push
xorb
mov
fmulp
inc
test
sub
subl
cmc
ljmp
cmp
subl
sub
repnz
lahf
dec
cmp
inc
inc
cmc
mov
jle
imul
outsb
rol
gs
fsubr
xchg
jno
and
test
mov
addb
push
mov
cltd
dec
stos
or
xor
cltd
stos
lock
mov
sahf
call
sbb
pop
in
jb
andb
pop
mov
addr16
test
scas
fcomi
divb
push
or
dec
jge
xchg
mov
data16
loope
xor
mov
aam
ds
ja
rorb
mov
js
or
fistpll
sbb
pop
pop
fcoms
inc
out
and
stos
sub
sbb
std
dec
push
push
call
mov
xchg
cmp
inc
lock
xor
lds
jecxz
or
out
leave
and
xchg
push
jae
and
sub
sbb
inc
dec
cmp
ja
nop
rcll
jbe
sbb
and
adc
test
inc
jae
push
lods
xorb
mov
loop
enter
lea
push
scas
add
inc
dec
daa
repnz
pop
enter
rclb
or
xor
xor
aam
add
cli
js
mov
testb
mov
pop
daa
dec
dec
pop
iret
inc
mov
push
adc
push
testl
adc
popa
jl
lds
jl
dec
iret
int3
sub
jg
cmp
es
insl
lcall
or
shr
mov
adc
xor
inc
mov
pop
jp
push
notb
loope
push
outsb
dec
xchg
xlat
adcb
pusha
cmp
adc
ss
mov
loopne
inc
inc
stc
push
mov
std
fmull
pop
sub
jae
add
sbb
push
add
aaa
and
dec
aam
fldenv
fstpl
sub
adc
or
and
leave
cwtl
sub
pop
into
lret
stos
cmp
insb
pop
cmp
jg
sbb
roll
pusha
addr16
faddl
jmp
je
add
or
in
adc
sub
daa
sub
sub
mov
mov
je
iret
or
pop
add
or
lods
xlat
nop
dec
push
rorb
mov
in
sbb
loope
adc
jmp
lcall
pop
xchg
sub
adc
insl
push
jl
testl
mov
fwait
mov
inc
call
cltd
daa
aam
pop
sbb
loop
enter
push
aaa
mov
xchg
inc
sbb
pop
adc
lret
push
imul
enter
cmp
pop
lods
dec
fildl
sbb
shlb
sub
push
mov
outsb
or
pop
sub
cmp
push
pop
in
inc
and
push
or
dec
orl
testl
dec
leave
mov
jno
push
cltd
movsb
pop
sub
mov
gs
mov
pushl
pop
cmp
loop
sti
xor
mov
ss
or
mov
add
xchg
jl
frstor
iret
xlat
int
fcoml
inc
into
push
jp
imul
push
data16
hlt
call
sbb
icebp
imul
or
inc
repz
stos
or
mov
vaddsubps
jmp
cmp
adc
sarl
mov
cmp
adc
pop
lret
push
xor
push
sbb
sbb
add
mov
arpl
lret
pop
sbb
aas
rorb
inc
inc
in
test
pop
fdivrl
addr16
ret
jmp
in
shlb
xchg
xchg
ret
push
clc
negl
ja
fisubs
jle
mov
xchg
cli
scas
xorb
jns
sar
adc
sub
out
cli
test
xchg
or
mov
cli
mov
imul
ljmp
mov
sub
nop
popf
sbb
jl
sub
cmp
cmpsb
pop
push
xchg
lods
add
xlat
mov
sbb
imul
int3
add
gs
aaa
push
sub
imul
adc
or
popa
cwtl
push
pop
jb
sbb
rol
cmp
mov
push
inc
lods
lcall
testb
pop
xchg
shr
jg
or
adc
pop
mov
pop
or
lods
frstor
popa
sbb
ss
loopne
pop
test
popa
mov
ss
mov
orl
pop
aam
sbb
icebp
xchg
imul
outsl
mov
mov
inc
jbe
ljmp
mov
js
repnz
rcl
inc
pop
mov
lock
push
and
adc
jl
or
jmp
sub
fisubl
arpl
xor
dec
pop
mov
lahf
lods
nop
int3
mov
cwtl
js
cmp
cmp
aas
push
stc
push
xchg
out
xchg
sub
mov
inc
movsb
not
cld
sbb
inc
pop
rorl
sar
cmp
push
sbb
adc
push
mov
jmp
inc
lods
mov
sub
sbbl
jbe
add
add
dec
jb
mov
loopne
dec
or
or
test
pop
xor
into
inc
or
push
push
adc
xor
xchg
cmp
mov
cmp
mov
adc
iret
sub
in
jno
jp
xchg
sbb
mov
ds
push
jne
or
mov
nop
addb
les
sbb
movsl
fcmovne
inc
out
pop
scas
arpl
cmp
jp
xchg
mov
ljmp
sbb
cmpsl
pop
xchg
cmpsb
mov
std
sbb
sti
aas
inc
xchg
mov
add
xchg
daa
dec
sahf
fs
xchg
mulb
dec
cmp
lret
stos
enter
shll
movb
xchg
dec
ss
mov
iret
sbb
xchg
dec
mov
fwait
push
repz
out
adc
or
jl
pop
cmpsl
dec
lds
mov
in
push
test
sbb
js
int
push
sub
ds
loop
lret
daa
in
sbb
xor
lock
jo
in
jmp
clc
es
mov
mov
dec
xchg
enter
cmp
and
mov
fwait
sbb
jmp
int3
pop
stos
bound
mov
jno
xor
lods
or
push
stos
jp
test
mov
or
sub
fwait
mov
fdivr
lds
mov
add
mov
stc
ret
cmp
adc
xchg
xchg
pop
in
mov
sub
daa
cltd
dec
sahf
adcb
outsb
push
fs
add
xchg
loope
jne
mov
mov
imull
pusha
xor
and
sub
cmpsb
and
pop
add
push
js
ss
jmp
mov
push
pop
push
inc
push
ret
mov
push
mov
adc
mov
loopne
ds
arpl
fidivrs
setae
stos
insl
jo
mov
push
xorl
cmpsl
stos
std
cmp
pop
addr16
es
push
push
jnp
repz
lods
ret
leave
sub
test
xchg
sub
dec
stos
pop
mov
imul
xchg
inc
mov
lods
out
mov
mov
aas
and
iret
sbb
pusha
push
sti
dec
mov
pop
mov
jl
stos
mov
mov
jno
scas
jns
icebp
push
push
lock
add
mov
cmovge
lods
sub
je
jns
mul
add
push
mov
movaps
insb
cmc
inc
jecxz
cmp
testl
sub
fs
popa
movsl
movsl
or
push
pop
cmp
lcall
pop
cmp
mov
stos
cmp
into
mov
les
std
mov
mov
pop
or
out
inc
mov
fstps
sub
testl
mov
mov
icebp
jbe
cltd
jl
mov
loop
je
inc
notb
adc
push
jle
inc
sbb
scas
enter
sar
jg
stos
jnp
cs
jecxz
xchg
cs
dec
xor
adc
gs
orl
sub
faddp
cmp
out
mov
lds
in
mov
mov
sarb
cmp
andb
cmp
cmp
inc
add
xor
pop
popa
cld
inc
out
lcall
fistpll
adc
into
int3
pop
sarl
out
mov
sbb
loop
test
scas
mov
mov
jmp
push
sbb
inc
insl
test
push
add
aam
pop
adc
jg
std
inc
dec
stc
repz
cmpsl
dec
adc
pop
add
xor
sahf
je
xchg
fucomip
or
out
cmp
ret
cmpl
loope
outsl
mov
imul
or
and
test
inc
in
mov
shrl
jnp
or
xchg
jl
add
addr16
cmp
sub
push
dec
rolb
cltd
jle
shl
mov
push
pop
inc
cwtl
jge
push
popa
mov
xchg
xchg
jae
and
call
lea
pop
mov
fwait
and
jo
stc
mov
jmp
mov
push
pop
fwait
jo
dec
pop
inc
sbb
test
mov
mov
or
lret
insl
jmp
mov
out
dec
and
cs
mov
xchg
xchg
sbb
ljmp
jno
pop
or
cmc
stos
test
mov
xchg
sub
jbe
in
xor
cmpb
bswap
or
mov
inc
xor
xor
lock
test
fldl
outsb
pop
pop
add
add
cmp
and
jb
movd
ljmp
sbb
out
push
mov
push
jg
cmp
pop
fsub
imul
orb
xor
jb
pop
inc
clc
dec
xor
movsb
inc
aaa
cld
pop
repz
dec
lods
int
fstps
dec
mov
mov
ret
pop
hlt
sbb
fmul
stos
push
cltd
jnp
ja
push
xchg
aam
ja
jp
call
push
xchg
sub
mov
mov
inc
ret
arpl
fcomip
lret
jle
inc
cltd
faddl
test
xchg
mov
popa
scas
sbb
adcl
mov
sbb
les
aaa
pop
push
movsl
jae
insl
fisubs
movsb
xor
sub
push
sub
cli
ret
push
popa
jns
out
cmpsl
add
jp
inc
rolb
out
mov
shl
push
mov
jnp
das
insb
fsubrs
rol
icebp
jne
mov
mov
push
repz
push
xchg
push
test
notl
je
in
add
mov
push
in
or
fistpl
sub
xorb
pop
mov
je
stos
movsl
cmp
stos
inc
cltd
int
push
in
xchg
mov
mov
enter
iret
add
jb
cmp
mov
popf
jle
adc
call
in
les
subl
dec
ret
add
std
fisttpll
icebp
inc
dec
mov
bound
mov
dec
xchg
xchg
ss
push
or
mov
add
mov
pushf
inc
adc
lret
out
xor
mov
jae
adcl
push
imul
xchg
sbb
mov
dec
jne
push
test
std
add
insl
lea
in
lahf
mov
mov
sti
cwtl
test
adc
scas
sbb
fists
scas
sbb
mov
jo
pushf
cmp
cwtl
or
dec
repnz
push
pop
xor
cmp
and
inc
xchg
push
into
fwait
fcoml
test
stos
push
outsb
je
cmp
pusha
outsb
mov
pop
stos
jecxz
aad
out
and
mov
xor
int3
inc
insb
add
lea
jmp
mov
jnp
sub
imul
pop
stos
jp
inc
or
pop
flds
pop
aas
ret
and
outsl
std
adc
xchg
scas
dec
xchg
sub
mov
xor
mov
lret
clc
pop
sar
les
shr
fstl
js
push
sub
popf
push
xchg
sbb
fisttpl
test
cmp
scas
inc
sbb
cmpsb
lret
shll
sub
mov
push
ret
pop
xor
and
cld
xor
sbb
int3
and
inc
push
push
hlt
sbb
out
movsb
pop
out
iret
repz
movsl
loope
ss
aad
pop
fiadds
lahf
jmp
xor
lea
or
dec
ficoml
test
test
gs
jge
pop
iret
lret
adc
jmp
mov
fimull
scas
ret
inc
dec
xor
mov
jg
xchg
sbb
movsl
sti
mov
lock
or
inc
xchg
sbb
adc
ret
xchg
cmpb
add
scas
mov
adc
fs
pop
jbe
rolb
jno
push
xor
and
mov
mov
mull
icebp
shl
jbe
out
and
jecxz
popf
movsb
addr16
lea
repnz
ficoms
mov
xchg
or
test
push
sub
xchg
popa
adc
and
inc
xchg
or
mov
mov
dec
mov
ficoml
enter
mov
cmp
jge
enter
xchg
pop
insl
testl
adc
add
mov
jmp
push
mov
xchg
mov
loopne
and
and
sbb
in
inc
sub
sbb
push
cli
rcr
mov
adc
mov
fildll
hlt
sbb
sbb
movsl
shll
fnstenv
dec
aas
jg
cmp
inc
popf
lea
push
int3
mov
in
clc
cmpsb
icebp
cmp
jo
movsl
orl
inc
push
jns
fs
imul
in
adc
push
std
imul
jecxz
jae
mov
inc
xchg
dec
aas
add
cld
inc
mov
mov
cld
das
cmp
popf
data16
movsb
repz
dec
mov
pushf
xchg
mov
add
addb
lock
jno
inc
cmp
loop
push
adc
pop
lea
jg
lahf
call
xchg
pop
lea
stos
and
push
cmp
fsubp
std
lea
shrb
jns
xchg
scas
mov
pop
ljmp
cltd
mov
mov
and
rcll
pop
movsl
outsb
cmp
mov
jge
ss
adc
dec
iret
js
ret
mov
dec
loop
cmpsl
pop
cld
scas
jbe
mov
out
psubd
sbb
fs
xchg
sub
add
fidivrl
repz
push
jbe
cmp
imul
pop
push
or
int
dec
or
stc
fsubrs
sub
hlt
cli
mov
xorb
inc
or
fs
xor
push
lods
push
movsl
xor
insl
jne
cwtl
ljmp
inc
std
add
icebp
jae
add
adc
pop
inc
inc
and
mov
sub
or
fs
loope
cmp
inc
and
pusha
inc
cmp
or
test
fdivl
mov
mov
mov
xchg
cmp
adc
inc
xchg
insb
and
call
dec
test
aad
imul
adc
out
lcall
aaa
mov
fcoml
js
cmpb
lret
mov
movsl
lret
in
ljmp
lds
xor
sbb
ss
push
mov
pop
std
jg
jb
imul
out
cld
push
and
cmp
mov
bound
lods
jns
movsb
adc
rcrl
into
shlb
lods
jno
pop
mov
cwtl
les
sbb
test
data16
xor
and
out
inc
mov
out
shll
cmpsl
jmp
add
test
push
pusha
popa
mov
or
jno,pt
mov
jecxz
insb
out
loope
adc
push
aad
aam
out
aam
xchg
jb
xchg
lods
mov
xlat
out
dec
adc
jp
movsl
lcall
in
cmp
jecxz
adc
sbb
lds
insb
mov
int3
dec
cmp
xor
dec
adc
and
mov
lret
pushf
pusha
decl
adc
fsubrs
ret
out
adc
lret
in
mov
xchg
rolb
ret
mov
push
nop
push
cmpsl
sub
jne
xchg
mov
mov
in
stos
pop
push
add
adc
lods
adc
xor
pushf
mov
jns
inc
aad
into
aas
movsl
fsts
adc
mov
push
sahf
icebp
jno
lahf
sbb
enter
leave
insl
cmc
and
test
sbb
out
sbb
mov
movsl
pop
or
jecxz
sbb
fcomi
or
in
pop
in
movsb
movsb
and
sbb
mov
ret
iret
sbb
xchg
xor
xor
lret
adc
movsl
movl
mov
shlb
mov
lds
add
mov
jl
imull
mov
xchg
mov
popw
out
fmul
loope
jo
pop
push
cltd
or
adcl
sub
pushf
push
rcll
adc
jecxz
sahf
lock
out
insl
adc
push
shll
lret
pushf
sti
insb
sbb
push
xor
out
and
xchg
fcomps
xchg
scas
pop
fsubs
xor
xchg
mov
shrl
jg
inc
imul
mov
mov
lods
clc
cmp
fsubrs
leave
pop
mov
cmc
out
mov
fisubl
lds
cmp
out
xlat
cmp
dec
gs
dec
nop
icebp
and
iret
fsubl
dec
adc
push
sbb
fdivrs
mov
in
ja
hlt
movsl
pop
cmp
add
cmp
mov
ret
xor
jae
or
jae
cmp
dec
shll
out
test
mov
push
push
add
loop
mov
mov
ljmp
lock
jl
or
scas
mov
lcall
xor
jmp
xor
xor
aaa
out
in
dec
and
add
lods
and
jge
arpl
jmp
and
in
pop
jl
adc
ds
cmp
mov
cmpsl
sub
shl
loope
cltd
test
add
js
icebp
scas
repz
push
mov
in
dec
or
push
cmp
mov
aas
or
in
xor
fldt
call
in
dec
or
jb
js
into
xor
lock
mov
popa
and
out
mov
je
out
mov
loop
int
lahf
cmp
out
add
imul
loop
mov
aad
jmp
loop
inc
in
jle
sbb
in
push
rcrb
lods
bound
cmp
rol
push
dec
ljmp
out
xorb
push
jl
fwait
sbb
jbe
xchg
push
and
sbb
mov
jp
push
mov
mov
hlt
mov
outsb
outsl
movsl
mov
pop
mov
pop
push
ss
shl
ss
lock
add
std
nop
ljmp
call
test
inc
pop
mov
push
pop
jns
cmp
bt
fwait
repnz
push
mov
pushf
cmc
push
mov
cmpsl
aaa
outsb
lcall
movsl
ret
pop
mov
mov
push
outsl
outsl
jns
cmc
xsavec
mov
es
sti
popf
outsb
lods
add
sbb
cmp
inc
fcoms
pop
jo
push
jno
insb
data16
outsb
xchg
pop
push
mov
and
push
leave
push
dec
or
dec
out
je
rclb
mov
adc
subps
sub
int3
or
push
aas
and
inc
lret
repnz
inc
and
mov
mov
dec
les
or
outsb
fisttpl
pop
mov
inc
fsubrs
jbe
test
lods
mov
sbb
popa
xor
call
and
pop
and
pop
ljmp
or
repnz
es
mov
pop
fmuls
js
clc
dec
cmp
adc
leave
inc
ds
popf
xchg
push
ss
adc
addr16
jno
sub
scas
dec
mov
test
dec
lret
pop
cmpsb
jl
psubsw
mov
pop
sub
dec
jne
xor
mov
jmp
xchg
scas
aaa
adc
fisubrl
jg
mov
or
les
divb
insl
adc
inc
je
test
jp
aam
jecxz
xchg
imul
and
ret
xchg
pop
push
scas
push
fdivs
dec
mov
pop
push
int
or
rcll
mov
roll
mov
inc
fdivs
fisubrs
jbe
cld
adc
push
lcall
inc
lret
lea
imul
into
fisttps
jne
dec
daa
andb
enter
dec
xchg
in
roll
mov
jl
mov
xor
fsubrl
pusha
inc
xor
jne
cmp
xchg
scas
sbb
and
lret
sarl
roll
mov
fsts
cmc
out
sbbb
sbb
jge
xlat
jmp
test
popa
inc
inc
in
testb
jo
xor
xor
add
jnp
dec
movsb
shlb
mov
into
filds
lods
jp
mov
pop
loopne
imul
sub
ror
in
adc
and
xchg
add
lret
lock
and
mov
adc
test
std
sbb
sbb
fxch
jle
push
mov
inc
imul
and
or
mov
jne
iret
jns
mov
cmp
arpl
dec
adc
sbb
cmpb
enter
loop
cmp
repz
pop
mov
nop
mov
xchg
lods
dec
sbb
fmuls
test
cmp
jne
mov
and
pop
fldcw
push
aas
movzbl
enter
add
pop
mov
cmpsl
jno
or
sub
fildl
inc
mov
loope
stc
addr16
pushf
aas
shrl
jns
sub
enter
mov
xchg
stos
mov
aam
test
add
aam
mov
push
sub
adc
fs
jne
lods
jmp
cmc
filds
or
mov
fsubl
pop
mov
sub
push
addr16
rorb
fmul
inc
jmp
xchg
call
aaa
sti
xchg
dec
mov
aam
push
icebp
inc
mov
pop
dec
dec
and
and
sbb
dec
cwtl
inc
xlat
adc
nop
jnp
cmpsb
jb
daa
mov
addb
aad
cmc
lea
imul
mov
enter
dec
rcr
cmp
popf
add
cmp
fmuls
pop
imul
adc
dec
push
cmp
mov
dec
pop
jmp
xchg
xchg
xchg
inc
jnp
adc
push
mov
mov
or
cmp
inc
dec
jmp
cmp
jecxz
call
xchg
dec
dec
imul
xor
xchg
mov
aaa
repnz
inc
shrl
jge
jge
xchg
xchg
mov
mov
int3
add
pop
lods
dec
sbb
push
in
fwait
sbb
xor
jno
pop
fmull
mov
rcrb
jb
push
iret
jmp
decl
sub
pop
call
or
jbe
daa
pop
jne
add
test
sbbb
out
inc
mov
jno,pn
dec
and
jae
push
dec
out
xchg
adc
in
mov
push
xlat
xchg
aam
ret
push
cs
push
sub
insl
ficompl
and
loop
mov
lea
fnstcw
dec
shl
sbb
cwtl
jmp
roll
or
sub
cmp
jne
adc
inc
hlt
mov
pusha
jne
test
outsl
scas
jne
ljmp
push
shl
out
xchg
pop
sbb
neg
jno
rclb
cmp
fcmovne
outsl
jle
cmp
lret
pop
mov
insl
outsl
cmpsl
sub
cmp
or
popa
jge
out
pop
sbb
lea
jb
int
pop
lods
pushf
loop
mov
arpl
or
xor
fisttps
pop
xchg
cmpsl
test
xor
add
in
cmp
mov
in
int3
mov
xor
cmc
rclb
popa
imul
cmpl
dec
mov
adc
jp
mov
xor
jns
testl
xor
sub
aam
jge
push
push
inc
outsl
sbb
pop
fistps
adc
es
out
sub
pop
test
cmp
mov
jno
cmpsb
or
pop
movsb
jle
pop
mov
call
sub
jl
stos
js
iret
push
xchg
push
hlt
cmp
pop
dec
clc
aaa
jne
push
mov
lahf
bound
adc
mov
imul
ss
xor
sub
adc
clc
jb
les
push
push
xchg
cmpsl
mov
jns
cmp
les
test
inc
dec
test
jae
es
out
adc
ret
xor
pop
sbb
shl
fiaddl
jmp
inc
jl
jne
sub
cmp
loop
mov
in
stos
aaa
ss
cltd
inc
jmp
popa
int3
sub
add
loopne
pop
stos
add
xchg
mov
lcall
scas
and
pop
and
jnp
mov
mov
sbb
lea
out
xchg
mov
addr16
cmpsb
es
clc
mov
pop
push
cmp
push
sbb
xchg
in
or
rorb
xor
push
cmp
incb
movsb
xchg
mov
or
push
daa
arpl
or
add
adc
sub
pop
push
cmp
mov
add
dec
dec
lcall
fldcw
or
test
jno
arpl
and
dec
repz
pop
and
xor
cld
aas
bound
xchg
jnp
xor
jns
jmp
mov
bound
mov
int3
xchg
ret
jbe
ret
pop
push
lods
cwtl
lahf
jbe
sti
icebp
adc
hlt
mov
and
stos
inc
mov
das
jmp
push
pop
int
test
dec
dec
popa
fs
shlb
pop
add
test
xor
lods
dec
pop
pop
aaa
jmp
jecxz
std
mov
sub
mov
out
arpl
sti
arpl
mov
adc
mov
pop
xor
inc
nop
fimuls
jge
test
sahf
sub
das
aad
test
and
js
in
add
mov
hlt
ljmp
cltd
mov
mov
adc
sbb
or
lds
cltd
lds
iret
xor
pop
sub
sbb
sbb
jl
jns
or
pop
je
bswap
imul
cmp
xor
mov
jno
jnp
xchg
or
outsl
rcrl
sub
test
or
sub
fwait
sub
push
inc
nop
jns
or
es
leave
push
xchg
mov
and
gs
inc
sbb
pop
arpl
scas
js
jle,pt
loop
dec
out
rcl
dec
or
or
das
imul
inc
xchg
or
mov
pop
insb
lea
inc
dec
xor
mov
adc
sti
in
or
sbb
jecxz
mov
pop
aad
xchg
shlb
fildl
mov
sbb
cmp
setae
jae
sub
xor
aam
dec
loopne
or
jno
pop
mov
cmp
push
imul
lods
sub
push
xchg
sub
repnz
dec
cmp
inc
test
jl
out
mov
sub
pushl
mov
addb
push
add
cmp
inc
iret
push
add
dec
sbb
cmpsl
into
cltd
mov
cwtl
insb
ds
insb
inc
inc
div
lret
movsb
push
mov
sbb
push
ret
in
mov
sub
push
cwtl
mov
sub
dec
pop
and
lahf
xchg
sbb
ret
jle
rcrl
add
loop
fstl
imul
xchg
lret
dec
push
xchg
jmp
push
in
test
cmp
xchg
adc
lods
clc
inc
enter
mov
dec
nop
jecxz
ret
imul
push
push
pop
dec
xor
or
push
pop
outsb
test
testl
pushf
es
sete
out
add
jmp
dec
test
loop
imul
jle
adc
add
pop
jo
sti
dec
xorl
popa
pop
fs
dec
mov
xor
adc
loope
es
cmpsl
into
mov
movsl
xchg
inc
and
lcall
sub
cmp
sbb
add
jg
cmovs
es
fisubl
cmp
xchg
sbb
popf
sti
sahf
nop
pop
btc
adc
in
and
test
dec
das
cs
or
idivb
mov
lea
arpl
jecxz
lahf
inc
inc
pop
gs
jg
xchg
jecxz
and
into
movsb
arpl
roll
jnp
fistps
xor
loop
adc
jnp
out
gs
lods
movsb
lds
sub
and
cld
ret
scas
jp
int3
push
aad
sub
add
cmpsb
out
mov
cli
push
js
dec
add
and
add
pop
xchg
xor
shrl
addb
addr16
lret
in
mov
sbb
movsl
mov
xor
push
push
fsubr
cmp
push
cmp
movsl
fcomps
int3
or
push
jb
mov
roll
enter
push
mov
rorb
aas
std
sub
out
ds
push
es
fwait
sar
jecxz
roll
fnstenv
jb
scas
mov
pop
aam
cmp
cld
lahf
xchg
jp
lock
jns
jp
jae
inc
addl
and
mov
icebp
inc
xchg
in
mov
movsb
inc
cltd
outsl
fildll
inc
jb
adc
push
stc
mov
fistl
pop
aad
maxps
add
add
and
jne
add
decb
orl
xor
movsl
sub
xchg
sub
shll
popf
mov
movsl
push
xchg
pop
out
push
mov
imulb
inc
icebp
fs
and
mov
lret
stos
push
test
dec
mov
jl
mov
pop
jb
int
in
fidivrs
ja
dec
inc
loop
lds
mov
xchg
iret
cmp
out
repnz
cs
fwait
shrl
cmp
adc
xlat
loop
pop
jmp
std
sbb
leave
jne
test
fwait
loopne
jg
dec
lea
sbb
imul
sub
shr
mov
dec
pop
mov
shlb
js
cmp
sahf
mov
shll
mov
jecxz
xchg
jl
or
mov
popf
sbb
and
jbe
out
out
movq
push
popa
jecxz
imul
leave
mov
sub
add
ret
jns
ljmp
popf
and
xor
xchg
data16
ret
lret
mov
and
mov
aas
xchg
icebp
mov
aas
pushf
lcall
adc
int3
mov
into
insl
cwtl
inc
rorb
loopne
daa
mov
mov
int
mov
mul
loopne
int3
cmp
cli
sub
mov
or
ljmp
insl
adc
xor
adc
or
cmp
out
pop
repnz
push
outsb
and
dec
xor
clc
mov
sbb
sbb
xchg
jp,pn
mov
inc
push
ss
loopne
nop
add
int
scas
pop
arpl
in
imul
pop
jno
jecxz
dec
mov
lock
inc
push
bound
jo
sub
lods
jo
std
cmpsl
xchg
lcall
mov
or
mov
iret
push
inc
pop
push
repz
mov
mov
mov
repz
repz
in
fnstenv
ljmp
loop
jmp
mov
xchg
xchg
insb
mov
cmp
or
std
xor
cmp
and
pop
sahf
sarb
mov
mov
insb
sub
cltd
fdivl
cmp
ljmp
hlt
addl
and
mov
jecxz
outsb
dec
xor
add
inc
inc
pop
mov
inc
sarb
cmp
out
pop
xchg
mov
stc
jo
int
loopne
mov
adc
mov
pusha
push
out
push
in
daa
idiv
add
lahf
test
fisubrs
xchg
jns
mov
lret
and
jecxz
pop
mov
mov
or
push
mov
pop
addr16
loope
fiaddl
stos
cmpsb
jae
sti
jmp
inc
movsb
pop
test
andb
fnstsw
stc
inc
hlt
push
lret
aaa
lret
mov
pop
pop
dec
sbbl
pop
xchg
xchg
adc
sbb
and
sarl
push
push
scas
fcmovbe
jno
sahf
enter
mov
jmp
adc
test
sahf
mov
rclb
aaa
sbb
xchg
int3
or
lahf
movsl
xchg
mov
mov
out
int3
pop
push
xor
loopne
js
or
das
xorl
call
and
add
xor
push
dec
std
out
or
addr16
call
cmpsb
movsb
je
xchg
pop
inc
repnz
ja
bound
test
shll
jge
mov
int3
dec
xor
xor
or
mov
adc
inc
iret
aam
sbb
jne
cltd
sbb
pop
testb
sbb
ja
push
lcall
add
inc
ret
gs
insb
out
xchg
addr16
iret
sarb
or
cmpsl
cmp
inc
push
sarl
sbb
incl
dec
scas
xchg
dec
test
inc
xchg
sbb
movsb
or
mov
jmp
es
xchg
orb
outsl
sbb
jg
mov
mov
fiaddl
aas
or
push
push
mov
icebp
jbe
fsubr
cmp
pop
fsubrl
adcl
movsl
and
cmp
in
xchg
sbbb
sahf
or
sbbb
aam
dec
and
insl
fisubl
rcll
sar
and
shrl
sub
pop
push
popa
jg
lret
aam
cmpsl
mov
nop
das
push
lcall
xlat
dec
cmpb
scas
cmp
inc
rorb
push
fisttpl
push
xor
and
movsl
or
fdivl
inc
push
push
push
iret
cmpsb
imul
aad
mov
jne
mov
add
lods
push
or
hlt
repnz
dec
lods
xchg
mov
xchg
push
or
dec
out
xchg
imul
xchg
shll
jle
mov
dec
mov
in
movsl
test
jo
or
dec
in
dec
nop
cmpsl
in
adc
nop
pop
ret
pop
in
adc
xor
pop
push
push
jbe
jbe
ds
mov
cltd
pop
push
jne
leave
icebp
push
sahf
inc
and
sarl
mov
cmp
push
cmp
dec
sub
in
push
xlat
push
inc
xor
test
mov
adc
icebp
hlt
xchg
addr16
movsl
sub
dec
inc
fidivrs
cltd
jnp
test
cld
int3
out
sub
xor
shrl
push
and
test
mov
test
test
daa
adcb
loopne
lahf
ss
mov
dec
je
or
xchg
mov
lret
dec
xlat
xchg
mov
aas
in
jmp
push
test
pop
push
add
mov
fidivl
loope
jecxz
inc
add
nop
add
sbb
aas
ret
fcmove
add
popa
enter
sbb
into
imul
jmp
notl
lds
bound
gs
adc
aaa
lcall
sub
in
ret
add
mov
in
scas
imul
push
lods
mov
fsubrl
push
cmpl
push
rcrb
leave
jp
test
pop
inc
sub
stc
out
ss
div
ss
bound
cmp
or
mov
icebp
sbbb
int
rcl
push
scas
int
dec
ljmp
dec
in
cmpsb
movsb
sbb
sub
das
in
push
xchg
dec
out
pop
shrb
lret
icebp
xor
cmp
dec
push
cli
fptan
mov
push
mov
push
sub
loope
jmp
jp
push
clc
stc
out
in
adc
mov
inc
pop
bound
and
xchg
shlb
popf
inc
mov
bound
and
mov
jle
out
pop
mov
pop
arpl
movsl
jmp
cs
xlat
or
mov
ret
or
and
sbb
inc
ljmp
inc
repz
dec
xchg
sbb
adc
mov
add
or
xlat
mov
lahf
dec
arpl
or
inc
cmc
fisttps
dec
adc
or
cld
sbb
xchg
cmc
adc
call
jne
js
jo
mov
gs
fsub
xchg
in
lock
mov
ror
fwait
mov
sbb
aad
bound
out
cld
leave
jp
bound
sub
pop
lcall
xchg
xchg
lock
add
or
scas
loopne
mov
sti
pop
shr
es
pop
cltd
mov
mov
stos
mov
pop
rcrb
jnp
sbb
push
rclb
lds
out
cmp
mov
xor
fninit
lods
sbb
mov
leave
jb
pop
mov
xorb
xor
in
push
jbe
movswl
cwtl
fisubrl
xor
pop
inc
mov
test
mov
push
push
lea
in
jle
sub
and
fnstenv
xchg
cmp
and
pop
mov
jbe
mov
cmpl
push
mov
cs
loop
mov
jmp
dec
pop
mov
mov
inc
sbb
out
inc
inc
mov
add
insl
pop
lds
daa
cwtl
insl
ret
jnp
push
fisubrs
mov
mov
sarb
cmp
fmuls
jbe
push
aam
xchg
cmp
shrb
mov
sub
dec
sbb
repnz
lahf
jecxz
jnp
push
inc
movsb
and
push
fistps
pop
adc
fnsave
test
or
fsubp
leave
iret
inc
or
and
lret
orb
fstpl
adc
imul
cmp
in
cmpsl
push
out
movsl
sbb
outsl
stos
add
scas
mov
into
out
or
sbb
mov
push
test
xchg
or
das
in
sbb
xor
sub
xor
lds
xor
push
mov
jno
pop
and
loopne
push
rorl
scas
jnp
les
ss
inc
xchg
enter
jle
mov
and
fwait
das
popf
repnz
cmp
cmp
cmpsl
and
dec
test
sbb
popf
sub
inc
shr
xchg
xchg
jle
cmp
popf
jno
and
cld
push
leave
adc
sub
test
add
xor
insb
ljmp
imul
decb
pop
jno
movsl
cmp
sbb
int3
outsl
std
xor
iret
movsb
pop
jno
push
mov
cmc
jbe
or
outsl
adc
inc
scas
imul
mov
rolb
data16
xchg
inc
and
push
aad
outsl
fucom
and
insb
xchg
lret
scas
lret
out
test
fcoms
leave
xchg
cmp
adc
out
lods
jle
or
push
sbb
add
jns
addr16
sub
pop
dec
jne
adc
pop
lock
in
inc
mov
ficoml
test
lock
mov
pushf
std
adcb
add
cmp
xor
mov
cli
jp
push
dec
add
in
mov
or
mov
jne
test
int
addr16
sbb
xchg
sbb
movsb
cmp
push
inc
and
adc
pop
aaa
cs
test
xchg
mov
test
movsl
aas
cltd
or
push
dec
and
xchg
stos
push
jp
dec
lock
push
xchg
daa
in
out
xchg
aam
mov
inc
lret
bswap
pushf
xor
sub
pop
push
mov
mov
stos
jmp
repz
and
movsb
mov
mov
cwtl
fucomip
sub
or
call
push
xor
xchg
cmp
xchg
int3
stc
cmp
push
mov
jle
sahf
std
movsb
int
jbe
adc
lcall
data16
pop
cs
fxtract
dec
clc
notl
rcl
or
sub
in
jb
test
pop
mov
inc
fcoml
xchg
sbb
jl
cs
ja
push
rcrb
movsb
inc
cmc
in
add
fildl
lea
cmp
mov
or
clc
cmp
push
cmp
inc
gs
push
in
push
push
xchg
test
ret
inc
test
mov
push
pop
mov
cltd
lods
bound
lock
adc
daa
nop
mov
push
sbb
rolb
pop
fnstsw
orb
out
push
clc
jg
mov
mov
mov
add
sub
aaa
jmp
fs
insl
mov
cli
lcall
movsl
in
lds
cmp
rcrl
cmp
fwait
xchg
fwait
sub
aaa
xor
mov
mov
movsb
je
pushf
cld
mov
inc
testb
or
cmpsb
scas
cmp
fcomps
ficoml
insl
addb
push
pusha
mov
sub
test
addr16
sbb
jo
push
push
lcall
cmp
shll
fwait
xor
jne
jbe
fldl
xor
popl
inc
arpl
cmp
sub
pushf
sar
push
or
mov
rcr
xlat
mov
and
lret
jmp
push
sub
ret
aas
push
lcall
xor
mov
xor
push
icebp
lds
dec
xchg
iret
shlb
and
add
push
mov
std
movsb
pop
mov
movsl
scas
repz
dec
xchg
sub
pop
scas
inc
jae
dec
lret
dec
mov
lahf
aaa
cmc
and
or
lcall
iret
jno
mov
adc
testb
subl
les
sbb
dec
fistpll
add
movsl
jge
mov
in
popf
dec
loopne
jl
stos
pop
dec
adc
push
jno
push
ja
or
dec
inc
lea
sub
jno
aam
sub
lods
movsl
push
dec
arpl
arpl
sub
pusha
xor
jl
xor
clc
sbb
dec
cmp
fstpl
lds
inc
mov
xchg
call
or
sub
roll
scas
mov
xchg
sub
jbe
ret
sub
push
cmp
lds
popf
mov
insl
les
inc
jg
popa
mov
mov
js
ja
xor
subl
repz
out
or
cmp
mov
sub
test
push
mov
push
xchg
xchg
sub
xor
popf
loopne
mov
cmp
pusha
pop
int3
adc
js
in
or
leave
cmp
dec
and
jle
mov
or
xchg
sbb
insb
pop
lods
dec
jp
inc
inc
sub
lods
pop
sbb
push
or
lock
ss
pop
push
lret
loop
pop
repnz
adc
fcmovne
clc
in
push
fnsave
dec
mov
or
jae
jg
xor
out
or
mov
cli
inc
scas
sub
or
push
sbbl
sub
jmp
aam
daa
insl
lahf
lods
sbbl
int
enter
idiv
loope
cld
xor
js
cli
mov
mov
jbe
ds
popf
mov
sbb
rol
push
pop
mov
mov
jo
fdivl
popa
push
bound
adc
imulb
js
dec
repz
enter
js
sbb
rcrl
cli
nop
popa
cmp
imul
xor
or
dec
pop
inc
sub
aas
out
out
int3
mov
sub
aad
inc
rorb
push
cmp
in
sarl
add
inc
push
imul
adc
cwtl
cs
mov
add
fwait
cmp
sbb
out
cwtl
mov
pop
out
cld
adc
jo
dec
ja
inc
and
mov
and
in
cltd
subb
and
cli
mov
jp
orb
stos
sub
dec
icebp
test
outsb
nop
inc
hlt
mov
rcrb
in
int
add
icebp
stc
je
mov
nop
or
loop
ljmp
or
pop
pushf
push
insl
lahf
dec
push
cli
or
int3
jle
lret
dec
and
fdivl
inc
adc
dec
push
sbb
mov
add
movsb
es
and
mov
push
push
aas
ret
jae
daa
lea
cmpsb
dec
cltd
loopne
test
les
cwtl
jge
daa
mov
cli
xchg
jnp
push
sarl
cltd
insb
nop
mov
add
jge
aam
je
cli
push
popf
and
or
xchg
jl
adc
pushf
bound
loopne
cmp
inc
int
mov
pop
dec
jmp
push
int
mov
or
cmp
and
testb
sub
rolb
dec
pop
push
mov
ret
mov
dec
mov
add
push
int3
pop
sub
aas
std
std
loope
jne
xor
cld
mov
xor
push
pop
rorb
cmc
data16
cltd
push
push
jmp
aam
sbb
and
fdivrs
fstl
fwait
adc
pop
and
xchg
lock
je
lret
ret
ret
xchg
cltd
add
loope
pop
xchg
jg
xchg
xor
movsb
into
imul
cmp
int3
xor
sbb
add
test
sahf
adc
sbb
mov
inc
int
xchg
aam
sub
or
xor
jl
fcom
out
les
rcrl
testl
outsb
jb
insb
cltd
jle
lock
repz
jo
pop
sbb
idivb
aas
mov
push
xchg
pop
jns
shl
ret
mov
das
mov
jae
aas
test
or
data16
mov
pop
pop
mov
dec
pop
das
loope
and
xchg
xor
jo
lods
push
jno
lds
adc
mov
pushf
mov
out
cmpl
nop
lahf
jl
std
inc
lret
fld
push
arpl
mov
inc
sbb
insb
or
push
les
pop
adc
pop
jb
loopne
inc
add
imul
loop
xor
negb
and
ficoml
and
mov
pushf
mov
inc
iret
cltd
call
xchg
ss
mov
mov
cmp
sub
cld
ja
popf
jbe
inc
jle
popf
push
enter
push
loope
xor
mov
scas
pop
mov
popa
jmp
movsb
add
cli
out
push
inc
test
or
mov
lods
adc
data16
call
lds
cmp
jnp
push
rcrb
ljmp
and
xchg
and
cmp
fxch
mov
sub
jmp
popf
out
int
sti
jns
jno
pusha
sbb
fdiv
or
inc
dec
mov
xchg
fistps
sbb
mov
mov
mov
jecxz
hlt
sbb
xchg
loopne
cmp
mov
into
cmp
icebp
push
int
jne
fmul
arpl
or
inc
mov
xchg
or
adc
and
popf
jae
add
cmp
lahf
dec
lahf
enter
push
sahf
stc
xor
push
xor
sub
xor
sti
cld
repz
loope
lahf
clc
repnz
dec
dec
cmp
pushl
cmc
and
aaa
pop
lret
or
int3
xchg
fildll
jo
shlb
inc
test
sbb
push
xor
outsl
in
insl
pusha
lcall
push
adc
ret
fwait
mov
mov
mov
adc
jle
enter
shll
lods
xchg
xchg
mov
dec
clc
arpl
je
mov
lahf
xor
sub
test
insb
cmp
inc
scas
add
gs
shll
inc
nop
inc
add
test
ss
mov
dec
popf
gs
push
repz
mov
sbb
cwtl
pop
mov
and
jnp
xchg
push
sbb
fsin
addb
fldl
jge
mov
sbb
in
and
aaa
mov
fucomi
adc
push
hlt
cli
out
aas
xor
adc
cmp
sbb
dec
sub
xlat
add
ret
mov
or
jne
adc
inc
out
xchg
mov
not
imul
aaa
xor
icebp
wrmsr
fwait
mov
xor
test
add
out
adc
insb
fisubs
pop
stos
xor
jecxz
mov
jle
jle
xor
fnsave
leave
shl
rcr
inc
mov
iret
cmp
imul
frstor
push
cmp
mov
aam
and
sub
mov
xor
xchg
arpl
mov
dec
jb
push
pushf
jl
and
insb
mov
or
mov
mov
add
xchg
push
sti
mov
sarb
pushf
xchg
mov
sub
adc
mov
cld
das
outsl
shll
das
ljmp
pop
aad
mov
ds
nop
adc
stos
inc
and
in
mov
lret
jmp
rorl
into
mov
xchg
and
icebp
push
icebp
inc
add
sbb
mov
xor
sub
mov
mov
dec
sarb
popa
mov
hlt
sub
iret
test
daa
sahf
xor
test
fcoml
pop
lahf
lret
test
cli
add
pop
cltd
fwait
cmpsl
lods
jle
outsl
jnp
mov
mov
ficomps
js
mov
cld
cmp
mov
sub
push
and
inc
adc
cmp
cmpsb
popa
and
insl
nop
lret
lahf
inc
mov
arpl
lea
mov
call
ljmp
lahf
cmpb
jecxz
jns
sbb
push
pop
sub
xlat
lods
mov
dec
sbb
cmpsb
push
xchg
es
clc
lods
push
push
int3
stc
sbb
fs
adc
mov
les
cmp
cwtl
scas
lcall
mov
mov
mov
lret
lea
int3
fs
jle
dec
sbb
ljmp
pop
pop
cwtl
fs
lock
dec
into
addb
ljmp
fcoml
and
sub
sub
push
gs
cmp
xor
orb
dec
cmp
xor
inc
pop
mov
xchg
cs
mov
and
jle
fmuls
sub
xchg
das
js
test
pop
rcrb
cmpsl
hlt
leave
in
add
aam
outsl
iret
lods
xchg
jl
jecxz
ret
subb
gs
inc
outsb
pushf
push
xlat
xor
pop
adc
ds
leave
aas
sub
aam
ss
add
jecxz
lcall
mulb
jmp
aaa
test
ss
ret
dec
add
loope
fcmovu
mov
sbb
push
dec
lret
inc
mov
insl
jnp
movsl
mov
call
or
in
fdivrl
mov
adc
sti
xchg
in
sub
arpl
mov
jns
pop
negl
push
dec
sub
iret
dec
gs
push
imul
pop
jne
mov
cmp
test
leave
stos
or
sub
mov
adc
mov
dec
mov
mov
or
imul
sbb
leave
push
scas
inc
test
cmp
push
out
out
mov
inc
leave
and
fwait
lcall
popf
mov
mov
jae
int
inc
cmp
cmp
je
ja
bound
test
leave
mov
aas
in
mov
xor
adc
rcrl
inc
xchg
jecxz
jp
pop
pop
rcrb
ror
or
sub
push
insb
out
sarb
dec
and
mov
clc
mov
fs
adc
and
mov
add
icebp
xor
sbb
pop
in
lcall
ljmp
aam
cmp
mov
add
repnz
lcall
sub
pushf
in
sbb
inc
dec
ret
mov
pop
fcom
sub
sti
jg
mov
mov
movsb
mov
lods
or
ja
push
sbb
clc
lcall
cld
sub
cltd
push
add
test
xchg
cmp
outsb
jns
fisubs
cmpsb
adc
xor
sub
imul
push
cs
jmp
jbe
lock
repnz
xor
pop
jno
scas
loop
adc
adc
and
adc
pop
xchg
nop
loopne
and
mov
ret
shll
mov
push
push
add
inc
arpl
sbb
fwait
jg
iret
xor
cmp
adc
mov
push
xor
enter
mov
jp
xchg
xor
js
pusha
and
add
movsl
add
xor
pop
jns
inc
lret
loop
push
jecxz
cli
out
dec
cmpsl
adc
cmovge
dec
and
mov
adc
and
shl
stos
mov
push
adc
xor
or
add
rcrl
shlb
xor
pop
cmpsb
sbb
sub
imull
mov
push
mov
mov
insl
or
xchg
push
in
jnp
enter
pusha
xchg
popf
enter
pop
cmpsl
call
hlt
jp
pop
sbb
stos
pop
xlat
add
loope
pop
push
fwait
mov
sahf
aad
or
xor
add
aaa
push
mov
scas
add
fs
sub
arpl
pop
inc
adc
mov
xor
hlt
lds
repnz
jmp
or
sbb
lret
out
xchg
inc
mov
fdivl
fsubs
pop
push
movsl
cli
push
js
push
cmpsl
fsubl
clc
dec
in
jp
fisubs
pop
dec
mov
pop
push
mov
sub
sbb
cmp
cmp
cmc
ficoml
test
xchg
xchg
pop
fisttps
mov
in
push
test
jmp
and
pop
test
xchg
gs
iret
xor
mov
jmp
xchg
mov
js
sbb
or
jle
push
push
call
adc
dec
inc
dec
pop
xlat
push
adcb
call
jns
sbb
inc
test
shrd
xchg
add
ret
imul
sahf
add
insl
popf
pushf
sub
mov
jbe
jne
cmc
mov
inc
sub
adc
sti
lods
jecxz
add
outsl
sub
nop
jno
xor
int
add
subl
cmp
push
jmp
rclb
cmp
gs
aas
cmp
add
lea
out
adc
cltd
fsub
ret
cmp
inc
scas
popa
ss
pop
add
fstps
or
push
cltd
xchg
sub
repz
xor
lahf
ret
cltd
popa
pop
movsl
aaa
or
and
js
inc
dec
or
enter
rorl
lret
cli
cs
dec
fildl
imul
mov
cltd
nop
mov
pop
call
test
fnstcw
in
inc
xchg
dec
icebp
cmp
mov
add
lret
lret
push
addb
shrl
les
arpl
mov
jbe
in
lahf
mov
jnp
inc
push
adc
addr16
lock
add
adc
lods
imul
or
dec
inc
in
in
push
icebp
mov
cmp
cltd
jno
cmp
push
ret
mov
sbb
push
jmp
cmc
mov
pop
stos
shr
xchg
push
push
sbb
adc
jg
data16
test
push
xchg
sbb
das
ret
mov
add
or
and
clc
sbb
outsb
mov
and
and
sbb
subl
sbb
push
mov
mov
scas
dec
sub
cmp
rolb
outsl
add
pop
sbb
sbb
hlt
stos
mov
lea
lods
dec
mov
jmp
sbb
fs
xchg
and
inc
ret
imul
jge
cmc
jge
sub
rcl
mov
loop
leave
aaa
sub
inc
outsb
mov
scas
add
lcall
lret
mov
dec
pushf
fs
mov
inc
std
and
jg
loop
push
mov
int3
lods
je
out
jecxz
sbb
shrb
ret
cmp
cld
xor
icebp
add
mov
sub
ret
push
movb
push
imul
jle
iret
mov
mov
ja
rcrb
xchg
imul
aam
adcl
shlb
push
stos
in
lret
dec
or
outsb
aad
adc
fisttps
adc
push
sub
xchg
adc
addr16
arpl
adc
push
push
mov
pop
push
dec
clc
dec
roll
sub
aam
imul
jge
cmp
adc
shll
gs
xor
in
rorb
shll
ja
xchg
add
mov
lock
int
sub
xor
in
xchg
cld
dec
inc
jg
jbe
ret
xchg
and
cmp
lds
mov
icebp
testl
and
shll
repz
pop
dec
or
jb
loop
xchg
stos
mov
bound
int3
mov
ret
xchg
push
mov
cmc
data16
mov
jecxz
divb
testl
dec
pushf
enter
fsubr
mov
jmp
lock
out
popa
andb
lock
or
inc
jns
cltd
leave
jbe
xchg
call
into
cmp
mov
xchg
dec
add
add
mov
cmpsl
pop
push
outsb
test
or
mov
sti
inc
daa
cmp
out
pop
or
sbb
jo
ljmp
in
xchg
sub
jno
dec
outsb
xor
insb
dec
add
scas
adc
lea
sub
cs
fdivs
lret
add
icebp
rclb
incb
xchg
aas
je
lea
stc
pusha
jne
rdpmc
insl
in
jle
mov
mov
jbe
fcmovu
daa
popf
and
lods
adc
jb
or
add
jae
movsl
mov
inc
test
sbb
jmp
inc
lods
scas
scas
adc
cmpsb
add
xchg
fldcw
fmul
mov
cmp
scas
cmp
sub
dec
inc
mov
aad
jecxz
xor
out
test
lods
dec
pop
cwtl
xchg
adcb
mov
shll
mov
jmp
adc
cld
and
shll
adc
mov
imul
andl
fwait
btr
xor
dec
enter
push
testl
xor
mov
cmpsb
leave
stos
faddl
daa
dec
dec
mov
ret
loopne
jae
mov
add
add
scas
inc
lods
mov
jg
mov
xchg
je
pusha
leave
aad
or
push
push
pop
mov
inc
push
adc
or
push
push
xor
push
shrl
mov
jo
dec
dec
pop
stos
xor
push
adc
cwtl
pop
jg
sahf
inc
arpl
adc
add
inc
jle
insl
jb
mov
jg
xor
xchg
scas
mov
cmpl
lds
decl
js
cmp
adc
pusha
dec
mov
ljmp
fnstcw
leave
xchg
rcr
adcb
int
sbb
xor
test
cmp
hlt
sar
fcmovne
jp
ljmp
mov
movsb
and
xor
push
pop
cmc
adc
insb
jno
add
and
mov
adc
nop
cmp
push
xchg
push
add
jmp
outsb
movsl
es
and
mov
push
inc
lock
add
add
adc
ds
test
pop
fimuls
jmp
mov
popa
aas
repnz
lods
push
sub
pop
test
imul
mov
pop
dec
push
cltd
or
jb
jne
fisubl
fnclex
inc
sahf
xor
in
inc
mov
mov
aad
fs
into
lret
loopne
jbe
vshufps
lcall
out
cld
lret
mov
inc
outsl
xor
push
mov
daa
loope
mov
mov
mov
fsubl
fwait
test
cs
jne
test
sub
or
push
shrb
notl
jbe
leave
push
mov
stos
loopne
push
mov
mov
push
lock
jp
add
cmp
adc
push
fildll
sbb
int3
jecxz
xor
out
aaa
iret
data16
lahf
fidivrs
pushf
ret
sub
pop
pop
sbbl
dec
lock
loope
bound
jecxz
mov
loop
mov
out
add
imul
lea
scas
into
adc
and
jle
cmp
xor
std
cmp
jnp
test
nop
sub
inc
mov
pop
add
jl
inc
sub
hlt
idiv
push
adc
sub
repnz
pop
inc
fucomip
fildll
xchg
pusha
xor
xlat
int
test
loopne
push
repnz
ficomps
out
decl
enter
test
jecxz
or
sbb
repz
xchg
shll
scas
test
mov
inc
push
pop
cwtl
sti
hlt
out
jecxz
inc
lods
fwait
aad
jp
mov
xchg
push
nop
hlt
mov
adc
popf
jle
movsl
fisubl
in
pushf
insb
mov
or
outsb
add
add
sbb
call
lods
mov
test
pop
sbb
jne
mov
lret
pop
stc
mov
cmp
jne
push
adc
nop
jl
pop
add
ficoml
and
lods
movsl
les
mov
lret
xchg
jns
dec
lods
sbb
dec
mov
adc
jbe
fstpl
xor
in
pop
inc
ret
nop
int3
cmp
popf
sbb
push
decl
cmp
das
sub
cmp
lods
lea
sub
cmpb
lea
and
sahf
mov
mov
xorb
xchg
push
arpl
pop
mov
cmp
daa
loope
and
mov
mov
jo
jae
cmpsl
mov
add
xchg
ljmp
loopne
shr
mov
out
test
shlb
mov
rcr
in
addl
mov
jo
sub
mov
sbb
jg
test
push
in
mov
mov
lret
int3
xchg
inc
scas
xchg
mov
idivb
mov
cmp
stos
imul
fiaddl
jb
mov
fsubr
not
arpl
in
mov
test
sub
mov
dec
not
jecxz
lods
cld
inc
cmp
xchg
add
pop
mov
inc
pop
push
adcb
nopl
movb
xchg
adc
repz
push
das
xor
lahf
adc
inc
ret
or
scas
pushf
dec
and
xchg
xchg
test
pop
lock
repnz
scas
adc
imul
cmpsb
in
xchg
mov
push
aad
xor
loope
in
adc
ss
add
inc
rorl
insb
cs
sub
bnd
pop
mov
dec
cmp
pushl
sub
sahf
xor
ret
xor
sbb
loope
into
shll
push
push
orb
pop
sahf
cmpl
cwtl
stc
xchg
pop
adc
test
shll
movsb
adc
cmp
xchg
pop
fs
sub
pusha
cmp
scas
loope,pn
fs
enter
xchg
sbb
push
jge
mov
jge
xor
adc
movsb
cmovp
mov
cltd
je
jb
repnz
jp
push
lret
sub
inc
scas
jmp
adc
popa
mov
cli
jnp
push
mov
mov
ret
mov
sbb
and
in
pop
pop
add
mov
mov
jno
mov
inc
sbb
xor
pop
sbb
mov
jo
orl
fisubrl
xor
mov
sbb
lea
or
jp
mov
sahf
mov
sbb
mov
or
aas
add
iret
xor
xor
push
in
mov
xchg
mov
clc
pop
cmp
data16
inc
sub
sbb
dec
mov
shll
insb
ret
or
addr16
fldl
mov
test
or
pop
cli
mov
adc
lods
sub
push
jae
cmp
push
mov
inc
and
sarb
in
dec
jl
lcall
jecxz
adc
cli
cmc
xor
mov
hlt
mov
sub
lods
xor
call
sbb
cs
mov
cmc
cmp
sub
testb
push
pop
mov
adc
aaa
sub
inc
ret
push
dec
bound
popf
mov
cs
loope
sahf
sub
movsb
imul
mov
lret
mov
insl
xchg
stos
add
jecxz
stos
test
fmul
push
incb
hlt
push
or
arpl
lods
push
fwait
loop
xchg
scas
pop
push
pop
jge
cld
push
pop
cs
clc
sahf
pop
and
xlat
movsl
stos
xor
out
cld
fnsave
loop
sub
and
ja
xor
push
sub
push
xchg
push
pop
dec
adc
sahf
js
jmp
scas
lret
inc
inc
sarl
ja
sub
pop
sub
inc
insb
andl
or
cmpsb
jbe
sub
inc
adc
push
iret
mov
inc
inc
jb
push
iret
mov
pop
and
mov
cld
or
leave
stos
jns
mov
cmp
fimuls
daa
sahf
adc
pop
in
jns
or
enter
test
jge
inc
add
dec
fildl
in
into
add
mov
sbb
popa
cmpsl
movb
pop
adc
lret
jle
jp
out
pop
jp
cmc
sub
test
mov
into
scas
xor
scas
addl
js
fists
push
jge
shl
sub
jns
rcll
sub
or
lret
bound
scas
mov
fcomi
cmpsl
or
and
movsl
adc
stc
ficomps
outsl
mov
rcll
stos
ss
dec
test
jns
and
adc
pop
fmul
xchg
xlat
in
aaa
pop
push
mov
or
jl
cs
mov
popa
pop
inc
shrb
push
out
jg
daa
mov
or
pop
mov
or
push
xor
scas
pushf
push
in
test
repnz
sub
jb
pop
cmpb
push
fldl
add
inc
mov
cld
fs
gs
push
xor
cmc
push
fstpl
lods
nop
mov
push
jp
jp
pop
scas
ljmp
xor
inc
mov
lock
pusha
and
mov
frstor
rclb
pop
and
fstps
dec
xchg
ja
sub
sub
push
mov
adc
pop
aas
js
jmp
cmp
inc
sti
test
inc
cmp
jle,pn
fwait
sub
adc
xchg
lcall
cwtl
cmp
jl
ss
xchg
cmp
jl
aas
setnp
pop
sti
xchg
loope
in
push
jnp
push
ret
mov
std
mov
dec
jl
and
icebp
test
sbb
fwait
or
pop
mov
push
xor
stos
jno
sti
pop
adc
inc
pushf
addr16
loopne
xor
test
and
mov
xor
pop
add
je
or
sbbb
in
out
jb
push
das
dec
ficoms
ds
stos
mov
int3
fmull
jge
or
lods
push
jnp
aas
test
data16
xchg
add
js
out
xor
xor
aam
insb
lock
xor
lret
inc
outsb
dec
mov
adc
scas
push
cld
movsl
mov
xor
mov
sbb
push
test
and
int3
jge
pop
mov
cmpsl
xor
movsl
subb
mov
insl
rclb
lea
mulb
sub
mov
idiv
int
mov
insl
or
std
ja
jo
push
in
fs
mov
nop
jne
jl
inc
inc
push
cmp
inc
jle
jns
and
movsb
xor
xchg
cmp
push
jl
out
cs
stos
and
mov
xchg
mov
outsb
popa
push
test
mov
test
pop
adc
or
add
add
faddl
jo
fxch
pop
cmc
mov
lods
lods
inc
out
sub
popf
pop
inc
rolb
cmp
mov
sbb
loop
sbb
inc
mov
loop
mov
shl
and
mov
push
loop
mov
and
pop
mov
sbb
mov
mov
stos
xlat
xchg
add
test
inc
or
mov
xor
inc
mov
adc
mov
fcoml
scas
fs
push
cld
mov
imul
cmc
mov
cltd
in
xchg
or
push
push
and
popa
dec
or
jl
sbbb
aas
shl
inc
test
shll
push
aaa
aad
or
scas
popa
and
mov
popa
inc
lods
lret
cltd
fists
push
addr16
inc
mov
call
mov
adc
mov
mov
test
out
daa
insl
push
ret
jp
stc
sbb
dec
ja
cmp
push
pop
call
sub
push
push
bound
push
xor
les
mov
sbb
add
mov
sbb
jns
arpl
cmp
and
jo
mov
cltd
stos
es
mov
ljmp
stos
into
dec
xchg
jae
mov
or
movsb
push
cli
inc
push
mov
hlt
roll
sbb
in
pop
es
in
mov
mov
adc
fidivrl
xlat
mov
push
bound
out
dec
in
popf
sub
mov
test
sub
mov
add
push
scas
pop
jbe
mov
cmp
adc
sbb
inc
mov
daa
ret
push
cmp
or
ljmp
sub
js
lods
lock
mov
lahf
test
push
xchg
cmp
cmp
xor
jmp
dec
clc
aam
fstpt
cmp
cmp
push
push
pop
dec
adc
and
pop
loop
push
jno
sub
lcall
ret
push
mov
push
mov
adc
das
or
subl
jo
dec
sahf
mov
inc
gs
in
pop
xchg
fsub
ds
pop
mov
pushf
inc
mov
sub
xchg
mov
jge
or
sbb
repnz
or
mov
rdmsr
loop
cmp
sti
cmovge
xchg
mov
into
and
repz
jp
sbb
mov
mov
and
idiv
fildl
inc
inc
outsl
cmp
jg
adcb
pop
cmc
mov
fldt
or
mov
popa
icebp
mul
xor
push
mov
pop
and
or
lock
sub
repnz
cwtl
stos
and
insb
jne
cmp
mov
jge
mov
insb
repnz
out
jae
repnz
adc
hlt
sub
int3
jg
loope
mov
imul
fiadds
fildll
stos
sbb
sbb
dec
in
push
xchg
mov
xor
push
cli
aam
sbb
dec
xor
das
add
fsubl
or
ljmp
popf
lods
imul
test
add
and
fs
popa
ret
loope
jl
insl
or
mov
mov
mov
in
insl
sbb
push
dec
pop
sub
or
std
cmp
and
xlat
mov
movsl
push
mov
adc
mov
ret
loop
lcall
dec
fldcw
add
pop
jg
nop
sub
jg
push
sbb
push
std
xchg
cli
jbe
adc
inc
push
test
mov
ljmp
test
jne
int3
sub
push
fmul
insl
jecxz
push
mov
sub
and
fst
cmpsb
insl
or
inc
add
int
out
push
cmp
clc
fdivl
pop
inc
dec
insl
xor
add
and
jle
pop
sbb
mov
pop
xchg
pop
aas
sarb
test
mov
cld
scas
pop
ss
sbb
sub
movsb
lret
nop
in
imul
xchg
or
push
and
mov
in
hlt
hlt
mov
cmp
lcall
loop
dec
int
jge
jp
adc
xor
fnstenv
shll
leave
call
inc
or
and
xor
xchg
rol
stc
inc
loope
push
in
or
int
aam
je
pop
in
dec
lahf
cwtl
lods
or
fmull
sbb
pop
xchg
jmp
push
xor
push
inc
arpl
dec
mov
dec
mov
mov
sub
mov
inc
leave
jb
cmp
pop
or
jb
stos
push
popa
repz
call
ret
push
and
loope
les
jge
repnz
adc
call
hlt
sub
cmpsl
fwait
ds
jecxz
jnp
push
ljmp
pop
push
jecxz
fnsave
xchg
or
out
insb
xor
mov
xchg
pop
xchg
inc
mov
pop
mov
xor
pusha
and
scas
ja
insb
out
enter
test
or
and
mov
adc
fistps
rolb
adc
aaa
stos
xor
imul
jbe
pusha
or
mov
sarb
ds
fs
int
fimuls
aas
call
shll
mov
scas
cwtl
pop
loop
aas
ss
pushf
sbb
cmp
adc
in
adcl
dec
sbb
movsl
lret
jnp
inc
insl
loope
repz
mov
loopne
sarb
mov
jnp
dec
mov
sbb
pop
int3
mov
iret
cmp
leave
xchg
dec
orl
lods
pop
cmc
jmp
psllw
ss
repz
jg
sbb
cmp
cmp
ds
fsubrl
dec
test
sub
pop
push
push
aaa
mov
mov
shr
pop
or
rcrl
pop
popa
and
mov
pop
test
mov
xchg
data16
jl
pop
scas
addl
cltd
fbstp
sahf
addl
jne
cmp
addl
dec
mov
iret
xor
test
mov
popf
xchg
push
test
insb
cltd
sub
xor
push
loope
out
and
push
mov
mov
daa
jle
les
xchg
lahf
sub
sahf
and
pop
mov
push
push
push
iret
inc
js
std
orb
mov
roll
lds
call
push
pop
fistpll
push
lods
leave
dec
ret
mov
or
sbbb
dec
jbe
push
pop
adc
in
or
jge
lret
dec
or
dec
daa
cs
inc
addb
das
mov
aam
scas
rorb
xor
cmp
jl
cltd
hlt
das
sbb
lret
xor
insl
mov
popa
mov
cmp
les
push
mov
dec
aam
out
repz
fsubs
movsb
aam
mov
xor
sbb
fwait
mov
repz
add
pusha
jl
xchg
pop
sarb
push
mov
inc
sbb
inc
nop
das
fstps
fnsave
outsb
mov
mov
adc
fwait
jae
cmp
loope
ss
shll
cmp
mov
cmp
lea
stc
mov
out
popa
mov
or
add
xor
fisubl
pop
mov
cs
pushf
mov
cmp
std
gs
cs
ja
push
lret
push
popa
pop
xor
dec
sub
mov
or
mov
fimuls
sub
lods
jo
lret
les
arpl
pop
int3
add
ss
out
inc
stos
pushf
jnp
dec
enter
adc
sbbb
pop
jecxz
int
dec
mov
inc
sbb
lcall
dec
fucomi
cmp
insb
pusha
add
fsubs
mov
fs
hlt
pop
test
pop
insb
ds
stc
cmp
push
sti
pop
scas
lock
adc
mov
add
jmp
in
adc
dec
int
xchg
outsl
lods
jmp
lock
xlat
scas
ficoml
test
jae
orl
xor
add
adc
sahf
or
xchg
push
and
lds
aas
mov
es
pop
jmp
enter
pop
daa
dec
mov
sbb
in
xchg
neg
xchg
push
or
jne
idivl
and
cld
and
sub
cld
cmp
andb
jb
repz
and
andl
pop
out
mov
in
loop
xchg
sahf
inc
fistl
inc
push
jp
add
add
jb
pushf
test
rorl
test
out
add
mov
inc
rcrl
dec
js
mov
lods
loope
xor
mov
arpl
scas
out
pusha
das
and
rorl
andl
dec
nop
add
pop
arpl
clc
stc
nop
call
pop
inc
push
dec
cmp
adc
push
stc
sub
dec
xchg
in
popa
add
push
insb
rolb
sti
out
test
push
push
mov
aas
mov
xor
push
addr16
subb
and
in
lds
xchg
xchg
push
sbb
popf
popf
xchg
das
push
xchg
loopne
addr16
or
ret
dec
fmulp
push
and
lods
nop
ret
jae
jns
pop
sbb
pop
xchg
call
jle
pop
push
jo
ljmp
call
xorb
adc
imul
shlb
sub
pop
push
stos
addl
push
push
sbb
mov
rcrl
sti
pop
or
in
pop
lret
push
jo
xchg
jecxz
lods
jnp
std
imul
lcall
sbb
cmp
pushf
mov
pop
loope
jle
inc
mov
lahf
dec
test
mov
fsubs
mov
dec
jo
aas
mov
cmp
lock
xor
mov
mov
inc
xor
cmp
fwait
mov
inc
sub
push
mov
mov
mov
out
mov
inc
mov
ficoms
push
dec
bound
inc
or
lods
adc
sbb
inc
test
mov
mov
inc
daa
mov
repz
fists
sub
cmp
iret
lahf
das
and
sbb
mov
sub
icebp
scas
push
inc
aam
add
push
mov
sub
js
rcr
xor
in
arpl
lret
ss
cwtl
outsl
sbb
outsb
cmpsl
outsb
pop
adc
inc
jne
sub
aas
cmp
sbb
cmc
jbe
mov
imull
das
xchg
mov
jl
xchg
bound
xor
sahf
mov
push
inc
fcmovnbe
lods
inc
scas
cmp
adc
in
sarl
mov
add
les
xor
xchg
mov
les
sub
stos
popf
add
or
push
je
xchg
jle
inc
xor
jecxz
or
mov
int3
mov
cli
push
loope
hlt
hlt
test
icebp
pop
std
loope
jnp
sub
icebp
jae
mov
push
lcall
xchg
aaa
sahf
pop
cmp
test
and
xor
push
in
imul
inc
in
mov
mov
add
pop
jbe
or
int
icebp
sbb
mul
xor
aas
movntps
or
cmc
scas
pop
lret
lods
mov
movsb
xchg
ficoml
iret
push
inc
aas
xor
iret
xor
aam
gs
das
mov
and
jecxz
push
lret
xor
test
sub
aad
sbb
adc
stos
and
les
push
icebp
fisubrl
jnp
test
lea
enter
cmp
nop
sarl
scas
jecxz
hlt
addb
fldenv
push
add
hlt
lret
push
sub
push
cwtl
add
push
mov
push
xorb
xchg
ljmp
lock
ss
mov
fs
mov
mov
pusha
sub
push
mov
adc
push
lret
insl
iret
xchg
arpl
mov
ret
mov
cmp
popa
fwait
lods
sbb
sub
test
cltd
arpl
adc
addb
mov
lods
sub
das
sub
sahf
xchg
push
nop
iret
cmpsb
test
test
int3
push
pop
adc
scas
aas
mov
stos
mov
out
and
xor
add
sub
das
or
arpl
test
bound
ret
mov
sbb
push
imul
xor
add
pop
fidivl
popa
sbb
xor
xor
mov
iret
shrl
hlt
add
add
cmp
fs
movsl
xor
or
dec
insl
push
lret
sbb
mov
cld
fdivrl
bound
push
in
icebp
leave
inc
outsl
icebp
ljmp
pop
scas
mov
mov
popl
pop
adc
shll
into
push
loopne
xchg
xor
push
pop
sbb
lods
inc
scas
fs
cli
dec
adc
or
out
testl
dec
mov
mov
int3
aam
cmp
rcl
inc
add
mov
fiaddl
cmc
sub
jg
sbb
arpl
jg
jmp
push
arpl
pop
mov
mov
dec
push
add
xchg
es
movsl
pcmpeqw
lret
lret
out
lea
dec
add
xchg
popf
xchg
jno
or
ficoml
push
sbb
inc
out
and
jg
xor
das
sub
lea
out
aam
mov
cmp
testl
inc
jecxz
lods
cmc
sub
mov
arpl
add
jnp
mov
mov
xchg
fwait
movsl
movsl
pop
loop
test
ss
repz
insl
xor
inc
pop
sahf
mov
cmp
jp
fdivs
inc
sbb
mov
mov
sub
lret
jg
je
loopne
mov
lret
inc
dec
dec
or
xchg
push
push
sub
add
sub
addr16
push
mov
mov
lret
xchg
inc
pusha
lock
repnz
xchg
lds
enter
ret
popa
mov
mov
mov
insb
aam
cmpb
push
adc
incb
dec
dec
jb
fwait
and
sub
dec
dec
inc
shrb
inc
ret
bound
sbb
inc
enter
add
in
andl
sti
movsb
pop
ficomps
rcrl
sub
and
cmp
ss
test
lods
aaa
testl
test
iret
inc
imul
cmpb
mov
sub
lea
setg
fwait
mov
inc
and
repnz
fcmovne
xor
cmp
mov
enter
test
xchg
mov
inc
push
les
shlb
and
jle
fldz
dec
out
pop
hlt
lock
ss
pop
dec
inc
shrb
xor
lea
sub
movsb
aad
xlat
cli
jnp
or
cmpsl
dec
fiadds
adc
adc
cmc
jne
out
idivb
xlat
mov
dec
sub
repz
push
jp
jbe
push
popa
icebp
mov
outsb
mov
xchg
and
adc
imul
popa
stos
xor
iret
lea
ds
movsl
xchg
fisttpll
jecxz
adc
sarl
or
and
push
sub
adc
mov
movl
rorl
nop
xchg
xchg
cmp
sbb
sbb
lds
jno
dec
xchg
fnclex
xor
pop
and
movsb
pushf
loop
xchg
dec
scas
xor
mov
sbb
insb
bound
jae
jno
xchg
test
aad
xchg
add
add
cmp
xchg
ds
orl
mov
jge
das
jge
or
pop
adc
movsb
sub
lea
in
jne
cmpl
cmp
mov
out
sub
mov
popf
outsb
cltd
dec
add
adc
sbb
adc
fsubs
daa
inc
xchg
int3
insb
jo
mov
mov
cmc
xchg
sub
mov
mov
or
sub
mov
or
fcompl
sahf
shll
push
sbb
ret
ror
push
and
mov
jle
push
pusha
fsubrs
sub
rolb
cmp
test
inc
push
cmp
outsl
out
test
ret
inc
mov
data16
push
jb
mov
test
push
add
inc
into
cmc
mov
les
imul
xor
inc
shll
dec
lock
pushf
mov
add
and
rorb
mov
stos
loop
hlt
inc
jle
fwait
sarl
std
dec
lret
jle
cmpb
in
jecxz
in
jo
jl
dec
rsqrtps
fmulp
pop
aas
or
test
xchg
push
push
ret
xchg
test
sahf
push
fidivs
jl
leave
pusha
sbb
test
xorps
mov
mov
inc
jne
adc
in
cmp
jge
decl
loope
cs
cwtl
lods
ja
imul
inc
mull
and
fsubrp
ss
push
ficompl
push
repnz
cmp
xor
mov
push
cmp
in
outsb
inc
sub
inc
repnz
iret
daa
pop
cltd
out
mov
das
jnp
in
adc
imul
xor
mov
outsl
mov
pop
mov
sub
push
pusha
jp
jp
mov
test
frstor
dec
pop
outsb
xor
mov
inc
shrb
cmc
sub
mov
sbb
sub
inc
xchg
mov
adc
xor
sub
pop
hlt
mov
je
jle
mov
xchg
jb
or
popa
ret
mov
jo
fldenv
mov
stc
sub
repnz
xor
or
aam
aam
add
frstor
mov
xor
push
addr16
cmp
jmp
push
xchg
adc
test
test
push
and
sbb
push
lds
daa
push
pop
ss
adc
out
aas
cmc
int
lahf
cmp
mov
push
add
fdivrs
std
and
ror
imull
repnz
lcall
enter
xor
mov
stos
fucom
aas
adc
addr16
adc
data16
into
rorb
sbb
int3
stc
aas
stc
add
mov
outsb
fisttpl
sub
jmp
data16
clc
aaa
cs
adc
add
add
cmpsl
dec
enter
dec
les
add
mov
add
sti
or
arpl
in
cmp
test
int
and
mov
cs
in
sub
into
adc
jge
mov
hlt
mov
inc
sub
mov
dec
push
out
ret
shrl
xchg
adc
push
loopne
jge
rorb
stos
mov
in
jecxz
in
push
pop
test
outsb
sbb
shl
rcll
xchg
xchg
xlat
sahf
bound
negb
and
lds
loop
mov
pop
int
fidivrl
mov
insb
push
lock
pop
rorb
outsl
arpl
cmp
xchg
adc
jo
jmp
lds
sub
stos
fs
cmp
push
mov
stos
mov
and
seta
enter
arpl
and
stc
pop
out
mov
sbbb
jb
and
xor
imul
dec
mov
in
inc
in
imul
arpl
sub
out
sti
outsb
int3
dec
push
ret
xor
testl
repz
inc
movsl
sbb
xchg
push
sbb
jno
shl
or
xchg
out
xor
in
jecxz
adc
ret
mov
into
add
pop
pushl
sbb
xor
xor
sub
addr16
and
mov
nop
shlb
movl
shll
imul
inc
imul
inc
adc
call
push
mov
leave
and
jl
out
cmpsb
movsb
mov
push
xchg
xchg
push
mov
or
adc
xlat
xor
pop
loopne
jns
jge
xor
adc
outsl
rcl
cmpsl
inc
pop
dec
ss
ret
sbb
sub
idivl
and
inc
xor
push
jle
mov
mov
fidivrs
nop
or
mov
pop
and
sbb
push
cmp
mov
fsubp
or
jmp
sbb
add
bound
and
xor
mov
and
cld
xor
pop
js
mov
ret
fs
adc
pop
dec
test
cmpsl
mov
lock
add
imul
addr16
lret
dec
and
mov
sub
and
xchg
outsb
cli
dec
and
xor
or
fisubrs
repz
fldenv
arpl
mov
mov
push
out
adc
mov
cmp
mov
cmp
push
inc
mov
divl
jbe
mov
lret
cld
pop
repz
stc
inc
cld
pop
sbb
icebp
mov
loope
fisttps
jp
sbb
shll
or
inc
test
pop
lods
rclb
sub
mov
xor
popf
add
stos
imul
fdiv
loop
cmp
test
fxch
es
jne
cmp
xor
das
dec
int3
and
mov
inc
cmp
cmp
xchg
insl
insb
xor
into
xchg
fbld
in
lds
ja
test
movsb
mov
stos
cmp
cmp
ret
mov
lock
jp
inc
or
out
jge
popf
mov
cmp
and
psubsw
inc
pop
jns
test
push
sub
rorb
cmp
cmp
aad
aad
pop
dec
mov
mov
iret
insl
sub
jbe
fwait
aas
es
pop
push
in
cmp
lods
mov
adc
xor
pop
jg
mov
movsb
jo
dec
mov
movsb
sbbb
cmp
into
lock
dec
cltd
arpl
ror
and
popf
mov
icebp
loopne
ficoml
aad
test
out
pushf
pop
xchg
pop
in
and
lret
jno
sub
dec
sub
jae
cmpl
int3
xor
xlat
mov
repnz
clc
xchg
add
mov
add
cmp
jl
lcall
loope
mov
lea
aad
xor
jne
and
cmp
push
jecxz
out
dec
sbbb
jmp
add
push
loope
mov
in
pop
mov
mulb
insl
or
add
jp
adc
sarl
in
and
dec
xor
jne
or
cmp
cli
adc
testb
lock
inc
mov
xor
test
or
sti
enter
xchg
jbe
push
mov
cmp
mov
push
mov
cmp
pop
push
loope
mov
mov
cmp
add
add
test
mov
repz
std
in
orl
fistl
push
push
inc
scas
aad
mov
rorl
adc
mov
ret
adc
push
and
cmpsb
popf
scas
int3
mov
cwtl
insb
adc
mov
cmpsl
ja
push
fwait
jle
pop
enter
daa
pop
xchg
push
ret
inc
test
push
lods
mov
push
mov
je
sub
sbb
loop
repz
pop
iret
mov
jne
cli
rcrl
or
ret
fwait
jno
pop
mov
and
data16
aaa
shlb
fisubrl
rcr
pop
sub
mov
pop
cli
jmp
int3
pop
pop
xchg
iret
cmc
mov
into
mov
pop
cmp
sti
add
fiaddl
push
xchg
pop
ret
or
fucomp
lcall
xor
dec
pop
fidivrl
jp
adc
inc
xor
pop
bound
arpl
mov
xor
cs
aaa
out
out
mov
enter
dec
push
nop
cltd
daa
mov
xchg
arpl
push
pushf
adc
push
push
pop
aad
inc
sub
insl
negl
jb
add
icebp
mov
insl
in
in
cld
mov
jge
dec
or
push
push
repz
xchg
inc
repz
test
and
out
std
and
out
mov
or
and
int
xlat
fmul
pop
dec
sbb
push
jae
cmpsb
loope
mov
xchg
xchg
dec
fwait
mov
iret
mov
test
pop
cmp
pop
insl
and
loop
std
fstpt
dec
mov
inc
call
dec
adc
add
js
shl
imul
pop
cmp
loop
pop
sub
adc
aas
xchg
addb
dec
fsts
add
xchg
xchg
addb
jnp
fsubrl
xor
fiadds
xchg
mov
and
outsb
jo
ds
jns
cwtl
xlat
test
sti
or
mov
leave
aaa
sbb
jo
test
dec
andl
push
movsb
ret
sub
ret
clc
cmpsb
addr16
addr16
fidivl
and
push
outsb
jp
notb
outsb
adc
jae
test
addr16
aam
dec
cmp
enter
sahf
cmp
sub
test
out
mov
std
mov
inc
mov
test
in
pop
pop
mov
shlb
xchg
dec
loop
mov
mov
test
cmpsb
and
sub
adc
mov
mov
jle
xchg
mov
pop
jg
mov
loopne
pop
pop
iret
push
fcomps
dec
sti
ret
add
loope
in
into
ret
stc
push
push
dec
lahf
les
mov
lods
add
in
rcrb
scas
mov
cmp
pop
mov
movsl
inc
pop
cli
push
jg
dec
js
loop
call
jne
sub
fcmovne
sub
jp
push
arpl
inc
pusha
adc
leave
dec
idivb
and
adc
or
xor
pop
mov
push
lret
add
mov
sub
fistpll
mov
jle
es
xor
loope
mov
mov
xchg
sub
xchg
inc
mov
stc
sub
js
rsqrtps
test
in
mov
lret
inc
cmpsl
cmp
sub
inc
bound
sahf
js
xor
push
and
fcmovbe
jno
adc
push
xchg
loope
repnz
add
jne
outsb
xor
lods
ja
push
in
xchg
add
cli
cli
inc
xor
call
hlt
mov
cltd
jo,pn
sbb
mov
pop
loope
movsl
xchg
adc
in
jbe
lret
xchg
adc
js
xlat
jbe
sbb
or
lret
cmpsb
enter
inc
mov
and
sub
push
out
je
mov
lock
mov
cmp
push
inc
push
sbb
push
dec
pop
cmc
outsl
out
cmp
dec
stos
sub
jle
adc
xlat
sahf
cld
scas
sub
mov
inc
aad
pop
arpl
stos
aad
xchg
inc
ror
notb
ds
xchg
xchg
push
add
shlb
sbb
inc
adc
mov
jp
mov
xorl
fs
sbb
addr16
popa
mov
ret
scas
and
lret
shlb
and
push
pop
jecxz
push
mov
xlat
cmc
mov
mov
pop
test
mov
mov
push
testb
insb
int
or
pop
sar
nop
pop
cmp
cwtl
add
ds
pop
adc
push
add
out
fs
popf
aaa
fsubl
xchg
cmp
stc
lcall
mov
xor
cli
sub
adc
cs
leave
mov
mov
cmp
add
test
insb
shll
add
or
out
int
lock
pop
cmp
mov
pop
jno
cli
ds
sbb
mov
dec
fdivrp
add
int3
inc
sbb
test
jmp
jo
hlt
das
adc
in
cmp
int3
hlt
shlb
ja
ds
fldenv
mov
aaa
mov
push
cmp
in
adc
inc
xchg
loopne
fnstsw
scas
iret
daa
mov
inc
leave
loop
es
test
xchg
pusha
sbb
jecxz
fldt
inc
cwtl
pop
nop
add
push
mov
mov
fs
xchg
sarl
arpl
and
lds
hlt
jnp
out
dec
push
mov
xchg
test
mov
mov
aam
add
mov
jo
push
nop
cmp
add
add
mov
in
mov
data16
sub
jecxz
movl
int
jle
add
add
das
sub
mov
or
jae
clc
mov
xchg
and
punpckhdq
scas
ds
daa
hlt
push
or
dec
cmpsl
lock
js
add
sub
mov
cld
add
push
loop
mov
aaa
sub
popf
sahf
movsb
leave
push
lods
and
inc
loope
xor
stos
pop
add
fiadds
sbb
xchg
or
cmp
das
mov
pop
mov
sub
lahf
add
mov
jae
das
repz
scas
shlb
xor
out
jmp
cmp
inc
adc
out
dec
fcomps
lds
dec
lea
pusha
push
jle
in
push
scas
xchg
out
int
andb
icebp
push
adc
clc
enter
fs
pusha
les
hlt
mov
ss
add
jmp
cmp
xor
rorl
out
xchg
sub
xor
fs
sub
pop
sbb
jne
imul
test
fdivrl
es
ficomps
daa
jle
pop
ljmp
testl
and
repz
fldcw
lcall
cmpsb
in
cmc
cmp
leave
ret
mov
or
add
jl
ds
lods
xchg
adc
enter
bound
out
xchg
cmp
add
rclb
pop
mov
out
shr
sbb
xchg
lock
lcall
jecxz
cmpsb
test
jp
icebp
shll
imul
mov
call
pop
inc
enter
cmpsb
sub
xor
sub
insl
push
pop
rorl
xchg
cmp
or
movsb
push
lock
ficomps
sbb
mov
pusha
jmp
loopne
pop
stos
sub
and
mov
mov
and
inc
jno
mov
xchg
push
pop
or
dec
icebp
and
and
pop
shl
inc
fnstcw
out
pop
es
mov
nop
and
jbe
xchg
dec
repz
pop
imul
sub
js
movsl
hlt
shrl
sub
out
pushf
mov
mov
xchg
push
dec
pop
xchg
adc
arpl
mov
mov
dec
mov
fadd
test
loope
in
bound
sbb
scas
popf
leave
jmp
cmp
or
or
cmp
inc
push
jmp
rcll
outsl
cmp
xchg
and
mov
addr16
jmp
iret
shll
xchg
test
sbb
or
push
ss
out
mov
push
lahf
pop
pushf
cmpsb
cli
cmp
ss
pop
xor
ret
and
roll
xchg
xchg
dec
mov
mov
adc
je
lret
pop
inc
inc
cwtl
inc
or
pusha
xchg
or
mov
lods
or
sub
sti
mov
out
mov
dec
sub
lds
mov
stc
add
inc
xlat
xor
stc
shl
rcrl
or
les
rcr
ret
cmp
jecxz
lods
or
push
mov
mov
sub
test
fsubr
ja
or
and
outsl
out
popa
dec
xchg
mov
in
mov
xor
loope
adc
xchg
push
lcall
arpl
test
sbb
pop
outsl
push
sub
out
loopne
movsl
cwtl
stos
pop
xchg
cmc
je
ffree
xor
data16
mov
je
scas
roll
push
out
popa
sub
ss
cli
rorl
pop
in
lret
inc
stc
popl
pusha
add
outsl
jns
adc
repz
sbb
cmpsl
lahf
stos
push
jl
loop
mov
nop
insl
pop
ret
mov
out
mov
and
rcl
popf
shufps
cmp
mov
xor
dec
cmc
sub
mov
popa
movsl
bound
mov
dec
xchg
sub
stos
pop
cli
adc
out
pop
mov
imul
pop
in
jne
lcall
cmp
or
call
fisttps
stos
jno
sbb
mov
pop
adc
sbb
fists
or
loopne
mov
and
mov
xchg
rcrb
add
mov
pop
pop
int3
inc
pop
lds
cltd
jns
dec
pop
xor
xor
ret
pop
jno
jmp
in
arpl
fists
dec
jne
mov
loope
xchg
xchg
cmp
xchg
jns
mov
ror
int3
mov
or
xchg
into
or
adc
mov
sbb
lods
cs
dec
rcrb
jp
xor
cmpsb
jne
popl
and
sti
jo
push
movsl
outsl
mul
cmp
frstor
pusha
sti
mov
jle
mov
xchg
mov
push
lock
popf
data16
inc
push
loope
or
fdivrl
mov
insl
push
into
loope
jns
add
mov
sub
jo
call
call
stos
adc
mov
or
nop
aad
or
inc
repnz
aam
test
stc
loopne
call
into
jnp
pushf
sbb
dec
sbb
or
push
sahf
xchg
push
and
scas
cmp
cli
inc
fisubs
js
gs
inc
loope
stos
mov
pop
cmp
fmuls
lret
rclb
or
xor
ja
dec
xchg
add
xor
leave
aas
jbe
sub
mov
xor
mov
mov
scas
ljmp
push
and
add
repnz
push
add
pushf
in
dec
roll
je
aas
lods
mov
in
out
xor
test
ja
stos
fwait
dec
call
mov
jns
or
xchg
shrl
cmpb
xchg
cmpsb
ffreep
fs
sub
test
lret
insl
inc
mov
mov
inc
lret
pop
ss
push
xorb
dec
fidivl
inc
addb
cwtl
mov
pop
mov
call
andl
stos
sti
pop
cmp
mov
gs
and
push
das
setg
test
lea
dec
mov
and
and
dec
add
xor
jle
test
mulb
ror
data16
pop
scas
mov
popf
ficoml
cld
loop
xor
inc
das
mov
mov
sub
xor
popf
stc
movsl
cmc
or
test
fidivs
aad
push
lods
sti
jns
es
stos
sub
shrb
jb
push
mov
add
and
xchg
xor
pop
push
jp
ljmp
fbstp
xor
mov
and
sbb
mov
mov
das
jb
fcmovne
xlat
push
incl
xchg
lcall
push
or
stc
pop
xchg
cmp
lret
loope
push
call
shrl
jbe,pt
orl
jns
cld
stos
xor
lret
call
lcall
aam
scas
push
cwtl
or
adc
cltd
sbb
repnz
fcmovnb
mov
push
lret
add
mov
cmp
into
mov
testl
shr
cmp
push
add
daa
insb
adc
jle
ficoml
inc
std
push
call
cmpsl
push
divl
shll
imul
loope
pushf
mov
pop
inc
sub
jecxz
out
sub
lcall
adc
xlat
popf
adcb
lock
adc
lahf
cmp
ficompl
push
movsb
lods
movsl
inc
lcall
xor
cld
fstl
leave
push
cmpb
mov
out
subl
lods
push
sbb
fmull
aam
popf
jl
pop
shl
rcll
lret
or
std
or
xsha1
cmpsb
or
fsubp
mov
pop
out
gs
lcall
shll
xchg
das
andl
call
xchg
jo
inc
hlt
sbb
rep
pop
xor
inc
lahf
jg
lock
js
dec
leave
test
addl
inc
add
xor
fisttps
xor
and
mov
mov
lret
jmp
cltd
mov
jns
ja
jp
dec
lret
sahf
insb
jecxz
inc
xchg
cwtl
ds
shlb
out
add
jl
test
sub
popf
jbe
std
das
inc
sti
inc
push
js
mov
enter
ficoms
pop
add
push
push
pop
dec
out
adc
nop
repz
mov
push
ds
sbb
and
push
xchg
imul
and
mov
mov
pop
cmp
rclb
xchg
or
mov
js
adc
mov
pusha
cmp
push
lock
pop
pop
xchg
mov
inc
dec
testl
imul
sub
popa
popf
bound
vpmacsdd
and
adc
jle
dec
pop
sub
mov
jbe
sbb
mov
dec
fistpl
bound
subl
out
fstpt
jb
add
cmp
sbb
jle
push
jnp
xorb
mov
add
xor
rorl
dec
push
cmc
sub
push
mov
dec
popa
jle
out
and
out
loop
or
addr16
scas
repz
mov
popf
and
mov
imul
fists
and
in
sbb
push
xorb
cmc
adcl
int
call
pop
repz
push
sub
add
jp
das
cmp
out
inc
stos
mov
jbe
cmp
inc
mov
into
js
popf
pop
fsubs
mov
ret
pop
ljmp
mov
out
mov
mov
mov
sbb
cmpsl
icebp
imulb
xlat
icebp
mov
ret
notb
outsb
jb
dec
int
lret
cmp
imul
and
sub
push
sti
leave
xchg
adc
mov
mov
dec
sbb
pop
sub
or
jle
test
fcomps
mov
pop
dec
das
dec
test
lods
push
dec
icebp
dec
or
sub
jl
push
out
jmp
push
orl
sbb
ja
or
mov
dec
mov
fiaddl
mov
mov
shl
mov
cmpsb
jns
lret
mov
inc
sub
jge
cmp
sbb
or
lret
sar
adc
rclb
iret
iret
dec
sub
outsb
fs
mov
sti
adc
fs
nop
int
popf
jnp
mov
rcrl
mov
dec
ret
leave
xor
stos
cld
push
sbb
fsubrl
ss
sub
loop
lea
into
sar
lods
jns
mov
jae
pop
xor
add
loopne
outsb
mov
sub
push
aas
ljmp
push
fbld
inc
cld
inc
push
mov
je
mov
push
add
push
sub
cli
mov
loope
jo
add
jb
jp
imul
addr16
jge
jle
mov
sbb
mov
lcall
push
icebp
jo
push
int3
or
push
test
loop
out
mov
xor
into
mov
mov
sub
or
ret
xchg
push
push
jo
loop
test
das
mov
add
mov
aad
orl
xchg
test
leave
mov
jge
repnz
std
cli
fisubrs
imul
sbb
mov
jp
lea
jae
add
mov
shlb
adc
cs
sub
mov
push
sub
mov
xor
leave
shrb
push
jae
cld
notb
movsl
mov
sbb
jns
enter
bnd
or
cmp
jmp
mov
jbe
andl
mov
mov
mov
js
ret
cmp
stos
push
daa
cmpl
fmul
pop
mov
push
jmp
inc
inc
into
ror
mov
inc
mov
push
sti
cs
pop
loope
mov
je
cld
jl
pop
inc
rorl
add
aam
gs
int
adc
cmp
mov
pop
xchg
popa
add
mov
inc
cltd
push
sbb
hlt
fidivrl
shr
scas
fstpl
push
jnp
jns
jo
in
push
jmp
pop
and
outsw
sbb
or
xor
push
scas
mov
cmp
aaa
push
je
aad
mov
in
stos
insb
in
fisttps
ds
inc
cmpl
fdiv
push
shr
sti
cmpsl
or
xchg
dec
fcmovu
and
mov
cmc
ljmp
test
in
cld
inc
inc
add
or
cmpsb
pushf
jne
test
out
sahf
and
and
sbb
fdiv
xchg
xchg
sbb
xchg
lods
cli
rcr
fsubrp
sub
inc
cmp
jns
imul
mov
jbe
xchg
faddl
push
insb
testb
mov
sbb
mov
xchg
xor
push
mov
gs
insl
mov
sti
mov
in
and
cltd
lock
push
mov
orb
push
xchg
xor
xor
mov
adc
add
lret
xor
into
ja
movb
push
sbb
lds
jp
mov
sar
jae
out
pop
fisubrs
or
sahf
dec
loop
push
ficompl
xchg
mov
out
mov
add
cmp
shl
mov
pop
mov
bound
push
jmp
iret
test
call
lods
mov
mov
or
enter
jge
pushf
lea
xchg
call
push
cld
pushf
push
and
ret
dec
xor
mov
mov
fnstenv
push
inc
push
movsb
pop
xlat
xor
hlt
lret
mov
mov
mov
add
xchg
lahf
mov
adc
arpl
push
pop
sti
jns
pop
out
fsubs
dec
mov
aad
lahf
fldl
add
push
push
out
push
inc
loopne
pop
movsl
adc
xor
lock
mov
add
add
lock
pop
in
push
js
rcll
and
fisubl
mov
jae
sub
pop
pop
push
roll
sbb
faddl
outsl
dec
test
out
adc
cmpsb
mov
data16
dec
rcll
inc
inc
or
sarb
cmp
pushf
cld
jns
mov
inc
negb
enter
ss
or
cmpsb
pop
mov
rorb
xchg
jbe
ret
adc
aas
enter
in
aam
jmp
jge
mov
popf
or
lods
jb
xchg
xchg
hlt
bnd
push
lahf
xchg
cmpsb
xchg
push
loope
mov
adc
pop
notl
shl
sbb
dec
sbb
push
rolb
sub
cld
push
fimull
jp
icebp
sti
sub
aaa
cmp
mov
lods
movsb
push
stos
xor
cwtl
dec
fcmovbe
fists
ljmp
pop
in
shl
and
mov
pop
pop
xor
dec
jo
sti
dec
and
push
cwtl
negl
mov
xchg
mov
cltd
or
mov
cld
cmpsl
das
push
pop
xchg
les
lock
std
mov
mov
ljmp
inc
dec
dec
pop
pop
mov
mov
sahf
sub
fwait
fwait
mov
dec
into
outsl
or
sub
cvtps2pi
pop
mov
mov
or
in
pusha
test
mov
sbb
push
jle
nop
cmp
repz
enter
loopne
insb
sti
fimuls
add
scas
pop
lahf
jecxz
ja
dec
jno
rcr
les
loope
add
or
sbb
dec
test
insl
jbe
sub
sbb
nop
cmpb
stos
pop
push
je
fldt
pushf
and
scas
outsl
nop
mov
cltd
inc
pop
mov
pushf
hlt
imul
push
jae
sub
xchg
jmp
dec
sub
dec
cmpsl
mov
pop
jg
and
push
xchg
dec
xchg
lahf
stos
ljmp
jb
mov
xchg
addr16
aas
in
mov
and
rclb
call
mov
lcall
ljmp
cltd
inc
xchg
addr16
mov
fsubs
outsb
insl
xchg
rol
mov
push
mov
in
cwtl
and
inc
inc
and
add
iret
dec
cmpsb
push
sbb
push
xchg
xchg
out
aaa
fs
xchg
dec
xchg
sahf
loop
inc
sbb
jne
mov
sbb
insl
or
pop
adc
push
cmp
enter
adc
sbb
ret
adc
sbb
repz
sub
test
rclb
xchg
fdiv
add
mov
orl
cltd
sti
popa
jbe
fwait
push
sub
sub
movsl
cmp
inc
je
test
nop
lcall
or
jg
pop
mov
adc
inc
cmpsl
sbb
push
mov
cltd
fs
cli
ss
ljmp
mov
fldenv
mov
in
inc
stos
imul
lret
inc
xor
mov
adc
movsb
push
rcrl
imul
int
adc
in
jns
cld
fstpl
in
pop
leave
adc
push
imul
lods
ss
bound
sbb
sbb
dec
orb
aam
or
jp
andl
fidivrs
inc
dec
icebp
xchg
lcall
je
rorl
lea
or
jne
ret
dec
out
and
int
scas
out
je
aad
cmp
dec
insl
mov
test
dec
xchg
mov
pop
xor
imul
pop
xor
xor
lds
jmp
xlat
xchg
test
sub
movl
dec
pop
fsub
mov
test
rcll
xor
clc
aas
xor
cmc
jmp
cwtl
ja
or
stos
add
test
cld
faddl
fldt
filds
lock
dec
insl
jbe
push
shll
dec
push
pop
mov
mov
jne
sub
aas
ret
pop
aaa
pop
in
arpl
sbb
adc
out
pop
xor
loope
cmpsb
enter
xchg
cmp
mov
pusha
inc
out
lahf
popf
repnz
pop
dec
fidivs
subb
sub
mov
dec
cwtl
gs
or
fxam
cmp
es
mov
lret
aaa
test
lock
lds
inc
outsl
enter
stc
jae
fcomps
cld
popl
push
lcall
into
bound
rcrl
aaa
pop
stc
std
movsl
mov
dec
xor
mov
lret
sbb
cli
cli
roll
mov
jecxz
and
sbb
inc
insb
test
ret
in
stos
adc
cmp
push
adc
mov
addr16
or
sub
mov
mov
fcoms
add
sbb
test
outsl
icebp
sub
outsl
xchg
cwtl
cmp
pop
cmp
add
jmp
fstl
cs
mulb
or
or
cmc
dec
jl
loop
imul
icebp
xor
cmp
mov
sbb
cld
ja
push
pop
loope
jnp
out
xchg
xchg
ror
sbb
xchg
stos
add
outsl
jge
rcrl
shlb
stc
push
repnz
icebp
jle
xchg
mov
hlt
mov
ja
xlat
inc
mov
imul
aaa
jmp
adc
cld
xchg
dec
mov
add
adc
adc
mov
js
movsb
int
jle
mov
jae
dec
sub
xchg
fcmovu
jg
fisubrl
xchg
js
shrl
cmp
mov
pushf
ss
scas
scas
pop
mov
cmpsb
pop
addl
ret
cld
mov
add
frstor
jne
test
test
add
in
bound
pop
mov
xchg
xor
pop
arpl
mov
dec
aaa
mov
lcall
mov
xchg
sbb
and
xchg
sbb
loope
mov
jno
out
leave
cmp
leave
xor
in
push
mov
jmp
clc
jmp
lea
jno
loope
sbb
push
notl
sbb
call
adc
pop
cmp
pop
mov
cld
pop
int3
dec
adc
repz
orb
cli
add
cs
data16
lret
and
jno
cmp
dec
lret
je
cs
jmp
jmp
sar
lea
js
mov
add
adc
cwtl
pop
notl
sub
loop
movsl
ja
xchg
or
dec
pop
loope
gs
adc
gs
dec
sti
xor
mov
popf
outsb
leave
aaa
jl
or
sub
fdivrp
pushf
in
lahf
out
adc
dec
rcr
inc
leave
inc
xchg
or
mov
mov
jle
pop
stos
je
pop
jmp
sub
mov
loope
mov
xchg
and
mov
divb
addb
sbb
enter
nop
popf
xor
fcmovne
lret
push
and
iret
loope
call
pop
iret
gs
scas
mov
fcmovnb
scas
test
xchg
mov
pusha
mov
int3
pop
jb,pn
hlt
shr
add
es
cmpsb
loop
push
adc
out
push
add
fldl
cmc
jg
push
push
sahf
xchg
ja
push
inc
adc
mov
xor
repnz
outsl
outsl
add
icebp
cmp
mov
mov
pop
addl
xor
adc
divl
adc
inc
cmp
test
jae
ret
xor
mov
out
int3
add
lea
into
lea
jp
repnz
sub
xor
dec
jb
lods
adc
sbb
pop
add
icebp
sbb
inc
pop
inc
inc
xor
pop
test
fisttpl
cmpb
pop
in
pop
rcrb
mov
mov
dec
icebp
imul
cmc
lods
lahf
cwtl
xor
sbb
ds
cmp
cmp
inc
in
dec
jmp
or
jge
mov
fidivrs
mov
loopne
mov
lret
mov
push
into
mov
xchg
jb
loop
pop
adc
movsb
lods
mov
adc
jmp
adc
cmp
movsl
testl
adc
enter
xor
es
jns
fidivs
cmpsl
stos
xchg
push
inc
jg
addr16
xchg
jmp
aam
push
pop
out
jae
push
imul
mov
rcrl
and
xor
jns
fmuls
jbe
cmpl
hlt
add
mov
pop
cmp
push
rcll
in
lcall
sbb
jne
dec
aad
xor
in
sbb
mov
cld
sbb
inc
inc
rorl
cmc
jge
pop
in
cltd
in
fiadds
shll
xor
push
mov
pop
ljmp
adc
mov
stos
cmp
lods
xchg
xlat
inc
cmpsl
imul
cmpsl
popf
jg
daa
icebp
mov
push
lods
scas
pop
ss
mov
addr16
xor
adc
pop
and
ret
mov
subl
fldcw
movsb
jle
mov
adc
jb
cmc
out
fists
into
add
stc
sub
aam
mov
dec
aad
lds
and
pop
dec
mov
jb
mov
sub
xchg
adc
imul
push
fucom
hlt
cli
loopne
lea
cwtl
imul
dec
jl
subl
push
or
mov
cwtl
push
sub
inc
cmpb
in
push
lret
sbb
insb
cmp
mov
jl
stc
cmp
repnz
jg
mov
arpl
pop
jns
xchg
js,pt
pop
mov
cmpsl
push
mov
dec
sahf
push
imul
leave
mov
xchg
stos
clc
mov
add
mov
sub
and
in
stos
add
or
mov
sbb
in
jbe
xchg
out
fdivs
idiv
outsb
jno
sub
cmp
outsb
mov
add
cmp
subb
push
dec
hlt
popa
dec
shll
in
jmp
inc
ljmp
push
hlt
stos
mov
fs
out
test
mov
aaa
and
in
gs
lods
pop
pop
int
or
xlat
push
push
add
or
pop
sub
xchg
inc
fs
mov
pop
rorl
leave
mov
insl
jle
lds
pop
pop
in
and
int
daa
mov
jne
stos
and
into
gs
inc
scas
andl
test
mov
lahf
xor
jle
jge
pop
add
mov
sub
mov
mov
add
test
mov
fsubrl
mov
sub
ja
leave
inc
ss
iret
or
daa
filds
out
popf
icebp
pop
mov
mov
sub
add
iret
xchg
lcall
ss
inc
lcall
scas
mov
xor
inc
sbb
repz
and
fadds
mov
sahf
or
sbb
mov
idivl
xor
push
mov
stos
jns
xor
xchg
cmpsb
xchg
xchg
adc
mov
and
daa
push
xlat
pop
and
iret
test
mov
jnp
add
repz
rorb
shlb
loope
jecxz
repz
roll
xchg
push
cmpl
cmp
cmp
into
lock
or
dec
test
push
add
or
int3
mov
mov
jno
test
leave
sbb
add
cld
icebp
cmpl
push
fsubr
ljmp
xchg
pop
pop
imul
fsubl
outsl
stos
leave
add
adc
push
outsb
lahf
mull
and
add
adc
ljmp
and
or
and
je
cmp
test
and
xchg
mov
fcoml
cmpsl
aaa
dec
addb
xchg
in
or
mov
in
mov
in
sub
pop
ret
pusha
je
shlb
and
popl
into
aad
addr16
mov
loopne
nop
inc
mov
mov
call
outsb
pop
xor
xor
or
int
cmp
cmp
pop
aas
shrl
fdiv
sub
sti
xchg
fmulp
pop
add
dec
in
stos
mov
fs
add
and
or
cmpsl
xor
cltd
mov
subl
popa
pop
test
add
les
pushf
mov
pusha
fs
adc
push
and
pop
lods
in
add
mov
int
cmpsl
pop
jbe
jno
mov
fcoml
stc
xchg
mov
xor
lea
jne
push
mov
adc
sbb
sbb
xchg
sub
jg
negb
xchg
cmp
in
pop
sub
dec
loope
push
cmp
adcb
inc
cmp
in
out
rcll
hlt
push
mov
ds
add
mov
jo
out
cld
dec
or
sub
fldt
lret
repz
gs
sbb
adc
clc
mov
outsb
or
iret
inc
sub
push
stc
xor
cld
int3
jae
jb
cmp
pop
icebp
cmp
mov
cmp
inc
stos
mov
mov
in
insb
movsb
sbb
push
cwtl
shl
in
xchg
daa
shll
in
test
icebp
adcb
pop
jmp
cltd
and
mov
scas
rorb
insb
test
icebp
xchg
fistpl
xchg
cmp
jae
test
cmp
push
xor
or
push
sub
or
int
fucom
daa
mov
jbe
jg
cmp
adc
inc
adc
cs
jecxz
in
fistl
dec
dec
sbb
clc
mov
adc
in
jbe
in
imul
mov
sub
mov
push
dec
jp
sarb
mov
jno
cmp
js
icebp
loopne
dec
sub
pusha
dec
fistpll
subl
mov
jecxz
lret
hlt
fldcw
jle
out
jmp
sbb
fists
jecxz
pusha
and
sub
mov
add
sub
pop
add
push
jmp
test
mov
popf
xor
fsubs
jnp
jle
mov
pushf
fnstsw
lock
push
push
fs
jns
ret
mov
inc
or
inc
jecxz
ds
mov
mov
xchg
sub
cmpsb
dec
ljmp
mov
and
rolb
adc
pop
xor
idiv
nop
ja
cmp
mov
adc
adc
orb
pop
mov
cmp
add
mov
fdivrs
in
loop
inc
jns
pop
xor
icebp
orl
cld
scas
xchg
inc
fcom
dec
push
jnp
jle
jbe
jge
cmpsl
into
pop
add
imul
jbe
loop
xor
sbb
filds
xor
pop
loopne
adc
hlt
fsubp
jns
pop
mov
xor
lret
adc
adc
pop
dec
cmpsb
pop
repz
popf
add
adc
gs
mov
add
push
imul
jnp
push
xlat
loop
lcall
cwtl
dec
ljmp
or
sub
xchg
xchg
aam
sti
mov
ret
sbb
in
sti
dec
add
roll
data16
sbb
stos
or
icebp
xchg
mov
shlb
mov
outsl
or
cld
fistl
mov
mov
xor
adc
xchg
pop
pushf
enter
mov
arpl
mov
lret
jb
pop
out
fdivrl
or
push
loop
lods
jbe
xchg
mulb
inc
mov
push
fldt
adc
hlt
pop
les
in
insl
js
mov
out
aaa
mov
ljmp
inc
xchg
cmp
pop
pop
and
sub
js
loopne
into
add
aad
lea
clc
lock
dec
xchg
xor
mov
repnz
stos
jnp
push
xchg
pop
in
inc
aaa
inc
push
add
rcrl
adc
mov
pop
pusha
pop
mov
ss
roll
mov
int
test
push
xor
jmp
mov
cmp
jno
pop
sub
rol
rcll
or
mov
lods
inc
xchg
mov
repz
cmp
cltd
imulb
cmp
xchg
je
or
fidivl
ret
iret
imul
dec
mov
das
in
mov
add
pop
cmp
stos
pop
dec
ss
pusha
jge
xchg
mov
ss
testb
push
dec
sbb
mov
and
add
push
and
push
cmp
int3
inc
mov
ret
add
lahf
jmp
jnp
sbb
dec
push
inc
add
xchg
mov
pop
out
pop
sub
adcl
shlb
push
push
ja
fs
pop
add
stos
stos
jecxz
sbb
mov
fwait
insb
lret
lea
arpl
jmp
or
out
ret
ret
mull
mov
jb
pop
xchg
call
hlt
test
push
sbb
push
add
in
xchg
into
add
repz
jecxz
jno
lock
jle
dec
stos
loope
sbb
mov
and
xor
or
mov
daa
xchg
xor
clc
dec
in
in
adc
jne
sarl
mov
pop
out
cmp
jbe
scas
out
pushf
mov
cmp
js
and
dec
cmp
incl
xchg
sub
arpl
dec
dec
testl
jmp
xchg
push
cmp
dec
mov
repz
pop
lods
repz
and
fdivs
pop
inc
mov
sub
and
mov
inc
or
and
or
imul
and
pop
cmp
repz
pop
ror
lock
nop
sub
adc
mov
sbb
dec
stos
and
xor
cs
call
pop
inc
dec
mov
dec
mov
add
push
dec
mov
inc
mov
test
hlt
aas
mov
sbb
mov
insb
jb
cmp
hlt
movsb
cmpsb
pop
clc
xchg
ljmp
mov
pop
imul
shlb
pop
aam
pusha
mov
pop
adc
aas
inc
mov
stos
jp
ja
out
lahf
sub
and
add
push
adc
add
test
jle
pop
in
lods
dec
sahf
aas
loope
jae
and
or
aad
fisubl
and
call
push
shlb
sub
adc
test
loope
sub
sti
mov
data16
push
xchg
xor
xlat
dec
cmpsl
jae
add
call
push
andl
in
incb
pusha
sub
pop
ljmp
lock
cmp
nop
adc
xchg
and
insl
movsl
mov
inc
test
imul
je
aas
pop
fidivrl
lret
cmp
fs
dec
jp
sub
jns
xor
mov
insl
test
lcall
jg
and
das
inc
push
mov
in
lods
test
das
fs
xchg
pusha
push
movsl
jnp
dec
cmovae
negl
repnz
and
mov
fincstp
outsl
jnp
and
pop
sub
or
daa
add
sbb
push
mov
pop
cmp
sbb
in
sbb
sar
mov
jmp
mov
enter
inc
cmpsl
ficoml
sub
xchg
xchg
ds
xlat
les
xor
sbb
stos
bound
idivl
inc
test
incb
inc
inc
and
and
icebp
out
or
test
popa
cmp
mov
test
lods
call
fs
test
or
fbstp
xor
inc
loope
sbb
mov
sbb
in
movsl
adc
fimull
dec
movsb
in
inc
popf
inc
imul
inc
pop
add
nop
add
stc
cmp
fcmovne
arpl
or
mov
adc
sbbl
mov
nop
push
cltd
lea
and
popf
cmpsl
cmpsb
cltd
lret
sahf
ja
add
mov
ja
js
stos
cld
mov
out
rcrl
stos
inc
adc
inc
mov
mov
lods
push
mov
add
lret
xor
add
pusha
pop
jle
inc
pop
pop
std
and
das
add
das
pushf
js
imulb
and
sub
mov
cmpsb
xor
stc
loope
insl
inc
push
aad
jo
shl
lcall
lock
jb
std
jne
cmp
fcmovnb
sub
cmp
and
lock
enter
dec
xor
jne
jae
shlb
pop
mov
jae
xchg
punpckhdq
pop
and
fsubr
test
inc
js
scas
mov
rol
icebp
or
repz
xor
in
js
pop
jge
sub
sbb
clc
aam
jbe
cmpl
jl
mov
jge
fdivr
out
adc
fs
push
mov
inc
mov
inc
hlt
or
int3
subl
lods
add
subl
jle
hlt
mov
pop
mov
out
lock
mov
sarl
adc
or
jb
mov
es
rcll
mov
inc
jae
and
ja
movsb
fildl
in
data16
xchg
cmp
std
xor
lahf
das
xchg
mov
sub
push
xchg
and
mov
mov
adc
movsl
xchg
imul
cmp
test
mov
data16
insb
jmp
popa
dec
imul
xchg
movsl
movl
push
inc
movsb
inc
mov
jno
fcomip
or
inc
mov
shl
data16
mov
sbb
cld
cli
or
adc
shll
mov
jmp
call
call
scas
sahf
mov
int3
lret
dec
push
lea
fstpl
ljmp
fistpl
js
fnstenv
ret
xchg
xchg
addl
rcll
mov
addb
inc
insl
dec
pop
cmp
or
xor
add
stos
and
mov
in
test
cmp
mov
lahf
jb
pop
xor
inc
icebp
push
pop
pop
fidivs
sbb
inc
xchg
mul
xchg
pushf
ss
add
push
cmp
sbb
inc
adc
daa
pop
shlb
in
rorb
jno
fwait
mov
push
push
fwait
cltd
dec
adc
mov
mov
ljmp
test
repz
lea
xlat
add
bound
adc
xor
adc
mov
mov
xchg
pop
mov
sbb
inc
repz
call
subl
or
dec
addr16
idivl
pushf
mov
add
xchg
cmp
pusha
loope
test
jno
jbe
pop
gs
movsl
mov
rorb
lret
loope
push
pushf
clc
jle
and
or
push
lods
sahf
lahf
or
insb
imul
mov
rcl
gs
cmpl
loopne
mov
fwait
inc
jnp
clc
push
adc
adc
pusha
add
sub
sahf
es
add
inc
mov
sub
in
fstps
cmp
jecxz
add
or
pop
lret
f2xm1
xor
pop
pop
xor
mov
pop
inc
mov
test
sub
clc
cli
or
jbe
jecxz
jmp
repnz
add
push
mov
cmp
loopne
test
xchg
push
sub
rcll
jp
or
jmp
push
lock
pop
xor
in
xchg
fiaddl
cmpsl
outsl
fs
push
insb
in
les
mov
mov
mov
xor
xor
shlb
cmp
popa
cli
mov
movsb
ja
outsl
mov
sub
imul
push
jmp
add
adc
fisubrs
pop
pop
lahf
push
mov
jo
mov
clc
jbe
xchg
popa
loope
pop
jmp
fimull
push
int
aam
cmp
fcompp
gs
mov
pop
mov
dec
add
jbe
int3
inc
or
imul
outsb
repnz
subl
iret
mov
mov
mov
nop
fdivrl
mov
fldl
pop
jae
scas
fnsave
stos
ss
aam
mov
push
test
into
inc
orb
mov
jne
mov
outsl
jno
in
loopne
adcl
roll
cmp
int3
in
andl
lods
pop
lret
in
push
cmc
xchg
lods
jp
and
int
jecxz
mov
add
movlps
arpl
cwtl
or
sbb
and
jg
aam
pop
fistps
pushf
testb
incl
insl
outsb
sbb
rol
push
in
enter
push
sbb
push
outsb
sub
sub
pop
jbe
add
rol
icebp
repz
outsb
and
sahf
imull
mov
or
mov
gs
and
movsl
cmp
cmpsl
idivb
das
or
push
sbbb
sbb
cmp
mov
push
mov
rorb
inc
out
cltd
pushf
decb
pop
xchg
loopne
out
imul
push
loop
jg
out
pop
mov
std
test
sbb
pop
mov
cmp
dec
shll
xor
jge
xchg
pop
adc
dec
pushf
push
xchg
int
adc
inc
inc
hlt
ljmp
hlt
lods
lahf
gs
movl
lea
shlb
adc
sbb
sbb
mov
dec
mov
ja
fsubr
inc
pop
inc
sub
sar
inc
xor
add
add
pop
and
add
arpl
push
push
aad
test
iret
push
in
push
jecxz
aad
and
mov
cmp
adc
cmpsb
ja
cmc
cmp
sbbl
sbb
or
cmp
cmpb
pusha
dec
sbb
mov
jnp
sar
dec
in
adc
stos
sub
and
mov
stos
scas
cld
gs
jl
insl
dec
xchg
shll
pop
mov
adc
xchg
fmull
clc
jg
jmp
test
sbbl
lods
sahf
dec
mov
and
movsl
aam
cltd
mov
jno
add
cmc
addr16
jne
lcall
stos
int
jbe
push
cmpsb
ds
lods
test
mov
stos
popa
pop
lds
pushf
push
sub
xchg
jnp
out
push
ja
pop
aaa
sub
pop
je
push
push
add
aam
daa
aas
dec
push
das
xlat
ret
mov
sub
xchg
mov
add
sar
in
pusha
add
fdivl
jle
adc
fcoms
lods
scas
jl
mov
bound
jp
lock
stos
mov
daa
add
push
sbb
or
sub
xor
out
xor
mov
push
fidivrl
fildl
fimull
jae
mov
test
imul
cs
scas
out
adc
sti
shrl
mov
in
psubb
gs
mov
test
push
mov
and
nop
mov
test
in
ret
pop
adcl
add
mov
out
xor
add
test
mov
outsb
test
js
movsl
ds
push
xor
mov
adc
testl
inc
adc
sbb
out
mov
clc
pop
clc
test
dec
push
push
lea
mov
xchg
es
xchg
movsb
sub
add
aad
pop
mov
jmp
insb
mov
out
pop
cltd
sarl
pop
cwtl
stc
fisttpl
fnstenv
js
repz
js
mov
sub
mov
dec
pop
inc
ret
sbb
pop
daa
or
insb
push
jbe
sbbl
int
test
sbb
dec
add
push
aaa
mov
daa
nop
in
xor
loop
add
sub
js
or
xchg
or
xchg
ljmp
push
cmp
ljmp
loop
fisttps
sub
cmpsl
push
pusha
cmc
aam
scas
cmpl
jp
mov
push
jmp
popf
sbb
cmc
stc
dec
int
sbb
cwtl
std
dec
cmc
outsb
jmp
mov
lock
push
aad
call
dec
and
xor
cld
pop
push
sahf
adc
or
cld
mov
xchg
cwtl
hlt
cwtl
push
mov
adc
clc
mov
lods
scas
adc
pop
cmp
sub
jle
pop
shrb
lods
inc
sub
sarl
mov
aaa
add
adc
sti
rol
call
pop
cmpsb
dec
pop
iret
into
sar
repz
mov
out
gs
adc
imull
sub
cld
test
mov
jnp
push
push
call
fstp
and
or
sbb
lea
mov
aaa
cwtl
push
fwait
jnp
mov
push
jg
mov
popa
outsl
cmp
mov
out
add
fdivr
xor
fucomip
jl
loop
outsl
or
dec
int
sbb
push
cld
push
or
inc
lret
fwait
sbb
outsl
or
cmp
mov
lods
jg,pt
push
ja
mov
ljmp
dec
sbb
pop
stos
test
dec
or
lret
fiaddl
push
nop
pop
sub
cmp
add
jle
sub
aam
mov
dec
mov
sbb
add
pop
jmp
loop
pusha
lret
pusha
inc
or
mov
pop
jno
jno
cmc
jno
notl
outsl
jnp
push
repz
inc
pop
call
jmp
fsubrl
popf
and
xor
fidivs
aaa
data16
mov
outsb
lcall
scas
das
push
daa
fidivl
xchg
imul
andb
lcall
pop
or
shrb
mov
ja
orl
dec
outsl
ss
mov
sarl
lods
stos
into
dec
mov
sbb
xlat
jle
call
outsb
add
push
out
sbb
lahf
adc
dec
mov
fldcw
mov
sarl
adc
push
cmpsl
fisubs
pop
jge
mov
outsl
lcall
sbb
in
cli
cmpsb
jge,pt
sar
in
mov
mov
scas
lods
sti
int3
rcrb
adc
aas
sbb
fwait
pop
and
aad
repnz
and
loopne
mov
pmaxsw
dec
cli
aad
sbb
mov
push
inc
mov
fldcw
pusha
mov
out
sub
mov
sub
mov
xor
mov
data16
decb
jg
daa
inc
jl
dec
sbb
mov
test
cwtl
pop
lods
push
push
sub
inc
lcall
jecxz
arpl
push
adc
outsb
mov
faddl
cmp
cmp
xor
outsl
add
and
jmp
mov
pop
loope
mov
adc
inc
sub
cmp
inc
into
loope
sbb
pop
dec
dec
jg
outsl
jge
fcoms
jecxz
mov
pop
mulps
popf
pop
je
jmp
out
and
pop
enter
sub
jb
push
popf
dec
ljmp
mov
mov
addr16
dec
jne
add
inc
clc
mov
imul
call
std
pop
xchg
xor
push
xor
icebp
xlat
fcomp
cltd
or
imul
stos
xchg
faddl
xor
push
inc
sub
leave
push
and
jmp
push
inc
loopne
int
call
xchg
mov
adc
scas
out
ja
mov
push
push
or
es
lahf
push
into
test
icebp
cmp
dec
pushf
movsl
in
out
int3
repnz
clc
lods
ja
popf
out
in
mov
in
pop
sub
xchg
lret
add
addr16
or
scas
mov
repnz
mov
and
cmpsl
lahf
or
mov
and
scas
jle
adc
and
jl
add
nop
and
ror
xor
inc
out
aaa
mov
adc
adc
jmp
out
leave
sti
xchg
push
movsl
dec
cs
sbb
jo
popf
sub
ss
pop
jae
push
xchg
in
push
lcall
test
pop
shl
data16
and
mov
icebp
mov
test
jp
push
iret
gs
xchg
in
jae
jl
or
xchg
inc
jnp
ja
lds
das
outsb
in
popf
jmp
bound
daa
xchg
pop
cmp
fildll
adc
lock
cmp
enter
aas
pop
xlat
xchg
loope
push
and
mov
dec
jns
dec
in
clc
mov
loopne
jp
lds
in
adc
dec
dec
ficoml
mov
jnp
fcmovbe
jno
les
pop
into
xor
mov
xchg
into
inc
pop
into
in
insb
cld
sti
int3
cwtl
lods
adc
adc
and
repnz
lea
je
ds
push
push
push
ds
sub
ss
es
cmp
push
cld
sub
cltd
push
out
movsb
or
insb
xor
mov
sub
mov
fists
les
shlb
ret
hlt
js
lds
or
pushf
loope
ja
mov
adc
shll
outsb
cmp
add
mov
push
sbb
mov
pop
scas
stos
xchg
lock
push
ror
and
xchg
mov
daa
ds
cli
jg
push
mov
testl
adc
movsl
jno
fwait
outsl
push
cmp
cwtl
and
fidivrs
inc
jnp
mov
xlat
hlt
rcrb
xchg
xorps
aas
dec
iret
sbbb
inc
xchg
lea
adc
dec
mov
loope
pop
add
std
imul
or
xchg
fwait
rcrb
xlat
in
inc
test
xor
mov
sti
adc
out
imul
mov
iret
inc
mov
call
pop
mov
push
test
cmp
pushf
iret
xchg
pop
and
cmc
xchg
call
js
jge
xlat
jnp
outsb
call
inc
dec
push
fmul
leave
icebp
rcl
out
or
int3
dec
push
js
mov
orl
idivl
add
and
rol
mov
add
mov
int
push
sarl
movsb
lret
aaa
das
jl
add
popa
in
xlat
test
inc
and
ret
cmp
jmp
data16
fwait
and
xchg
mov
xchg
mov
out
pop
scas
cmpsl
lods
pop
xchg
mov
xor
outsb
cld
jnp
ficomps
mov
aas
xchg
ljmp
cmc
xor
and
mov
mov
push
mov
inc
mov
cmp
mov
mov
outsl
pop
stos
cmp
stos
aad
es
lcall
adc
or
fs
insb
aaa
rcr
and
aas
or
movsb
not
pop
push
lcall
adc
loopne
sbb
mov
pop
sarl
scas
or
sub
or
mov
fadd
add
lahf
push
repz
jns
dec
mov
mov
adc
cmp
jcxz
inc
jo
inc
xor
fstps
adc
dec
daa
notl
fs
xlat
pinsrw
adc
push
and
or
jp
mov
call
push
clc
mov
jbe
fwait
ret
cmp
adc
out
repnz
push
dec
adc
jnp
mov
pop
andb
fidivrl
fs
test
push
push
inc
outsl
int3
and
pushf
jns
call
outsl
ja
jmp
push
orb
sub
xor
sbb
jne
inc
add
or
bnd
subl
xchg
rorb
mov
mov
sbb
or
jecxz
adc
hlt
mov
mov
int
mov
and
inc
push
scas
dec
xor
je
push
mov
mov
mov
cmp
ds
repz
xchg
ds
sbb
scas
dec
mov
sbb
rolb
lret
cmp
rol
test
xchg
dec
cmpl
mov
add
adc
pop
iret
dec
ja
loope
mov
orl
cmpsb
adc
push
int3
shll
dec
mov
mov
xorb
inc
push
lods
daa
push
inc
xor
adc
out
sahf
dec
mov
sub
push
cmpsl
xchg
inc
push
mov
rclb
push
or
lcall
mov
push
dec
cmpb
loope
pop
inc
out
push
stos
sub
xchg
push
xor
mov
and
iret
or
imul
mov
sti
int
push
fstl
add
push
mov
fiadds
int
adc
adc
aad
jo
dec
icebp
pop
add
icebp
cli
cmpsl
into
mov
dec
jecxz
es
bound
leave
test
inc
aam
dec
and
jle
cmp
mov
bound
or
sahf
inc
ret
sbb
in
mov
sub
stos
jl
faddp
lahf
mov
xlat
push
mov
sub
lock
fmull
push
aas
lock
pop
das
stos
scas
sub
sbb
mov
dec
and
dec
jns
dec
pop
cld
test
jmp
fcmovnb
xchg
jne
adc
popa
xchg
push
add
cmp
mov
pop
pop
jecxz
xchg
push
in
filds
xor
aas
mov
cmp
lock
cmp
test
mov
mov
lods
adc
xchg
mov
push
lods
lahf
scas
lret
jecxz
and
mov
adc
push
lcall
mov
insb
or
adc
aam
cmc
mov
test
jno
lods
cmpsl
inc
mov
add
push
loop
cmpsb
jae
inc
xchg
mov
lcall
dec
xchg
push
shl
pop
adc
sti
jne
and
and
test
sbb
or
mov
aam
stc
inc
iret
push
ret
lock
andl
inc
out
fwait
movsl
push
mov
push
ss
xchg
push
sub
fildl
mov
inc
and
cltd
hlt
sub
xor
int
cmp
inc
sub
jmp
repnz
jecxz
mov
and
push
in
and
stc
cmp
jne
inc
movsl
inc
ret
jecxz
pop
dec
cmp
mov
mov
pop
andb
and
cmc
dec
sub
lods
pop
pop
hlt
testb
popf
cmc
xchg
lahf
into
sub
test
rorl
adc
sbb
mov
cmp
jbe
push
or
test
fdivl
shr
jg
pop
dec
add
jne
dec
mov
ret
int3
add
inc
popa
dec
movups
and
add
popa
jae
fiadds
sahf
jns
out
sub
daa
dec
nop
sbb
xor
mov
int
shll
add
add
fldt
test
xchg
add
cmc
sbb
enter
add
add
adc
sbb
sub
pop
adc
push
out
dec
mov
in
or
xor
nop
mov
dec
sar
test
sahf
push
in
pop
test
mov
fbstp
clc
lock
sbb
push
push
je
inc
cmp
ss
pop
push
mov
mov
lahf
and
push
lahf
dec
mov
test
mov
aas
loop
push
dec
sub
and
xchg
clc
cmp
cwtl
in
decl
lea
cmc
out
mov
into
test
sti
sub
cli
sub
mov
mov
in
cmp
jmp
inc
sarl
sub
jne,pn
mov
enter
sbb
cld
insl
mov
add
mov
lods
enter
leave
mov
jnp
inc
leave
cli
ljmp
xchg
xor
adcb
addl
mov
jg
pusha
shll
jecxz
add
dec
arpl
mov
test
mov
fwait
mov
jnp
sub
mulb
xchg
or
mov
dec
pop
inc
sbb
ror
push
aaa
inc
nop
mov
sub
inc
pop
mov
dec
cmc
cmp
test
sub
inc
mov
pop
gs
adc
xor
scas
jae
in
jl
jns
mov
mov
test
adc
sbb
call
sub
int3
pop
sbb
scas
outsb
je
mov
add
dec
in
push
mov
idiv
mov
pop
hlt
mov
cli
xchg
mov
xchg
fidivl
pop
andl
mov
add
sbb
adc
mov
jae
and
repnz
sub
shll
mov
cmpsb
in
inc
add
sti
xor
mov
pushf
adc
fadd
mov
mov
fidivl
iret
pop
in
xchg
mov
outsb
pop
rol
enter
lcall
pushf
jno
jmp
sbb
mov
ret
sbb
loop
cmp
pop
aad
movsl
arpl
mov
in
add
rsm
xchg
xor
adc
pop
inc
dec
xor
pushf
push
push
mov
xchg
dec
lret
xlat
repz
je
test
add
sahf
pop
add
and
mov
pop
xchg
repnz
int3
pop
outsl
adc
push
cld
lods
mov
sub
xchg
addb
mov
sbb
sahf
in
adc
sbb
and
pop
xchg
xlat
pop
inc
mov
je
pop
and
pop
js
add
out
mov
and
cli
iret
loope
and
jge
push
stos
test
mov
push
cmp
std
mov
mov
push
inc
arpl
cmp
xchg
shr
adc
inc
lds
int3
jge
sub
pop
iret
xchg
insl
fs
dec
lar
call
xchg
hlt
sub
or
sbb
xchg
jg
or
sub
push
ds
or
xchg
sbb
in
or
rolb
add
push
xor
aas
cmpl
lret
jb
outsb
sub
xchg
stos
fsubs
lea
ret
push
popf
int3
out
out
fisubrl
aas
xchg
out
mov
pop
ror
cmp
fstpt
rorl
cmp
adc
push
bound
in
dec
aas
stc
jmp
rcl
inc
rcr
cmp
mov
jne
sub
push
adc
nop
xchg
int3
inc
push
cmp
xchg
or
lret
push
xchg
push
mov
data16
pop
jns
fcmovb
mov
cmc
jl
out
pushf
shrl
or
jns
fisttps
sbb
out
pop
int
pop
cmp
call
insl
dec
add
xor
xlat
mov
out
inc
int3
subb
sbb
push
push
inc
xlat
sar
aaa
mov
movsb
enter
sbb
mov
or
fcoms
scas
loope
adc
shl
fcompl
sub
mov
mov
mov
dec
mov
in
lret
stc
loopne
fdivrl
ds
icebp
inc
jo
xor
sbb
call
xor
xchg
call
int
push
adc
pop
push
xchg
jmp
data16
push
mov
inc
jge
push
mov
sbb
stc
outsb
bound
push
iret
jbe
movsb
dec
jno
mov
pop
adc
xchg
les
mov
cltd
shr
dec
sub
mov
lret
mov
outsl
push
je
jbe
push
and
aaa
addr16
out
ret
push
dec
sbb
insl
sbb
push
sbb
and
jg
push
addr16
inc
pop
xor
and
and
loopne
movsl
movl
push
ret
and
mov
mov
lret
into
lcall
movsl
mov
test
rcr
cmpsb
fiadds
insl
adc
dec
fwait
xlat
mov
mov
xchg
push
jne
dec
mov
mov
mov
cmp
dec
mov
out
cli
rclb
fldln2
dec
stos
lret
jecxz
xor
dec
push
xchg
repz
cli
inc
fwait
mov
fbstp
insl
or
test
mov
test
mov
sbb
or
jns
add
sub
setne
cmc
sahf
xchg
hlt
push
sbb
sbb
leave
inc
mov
ret
test
xchg
mov
daa
ljmp
jbe
xchg
lahf
stos
inc
inc
pop
mov
adc
mov
ds
pop
bswap
fdivrs
out
inc
or
in
inc
cmpsl
and
pusha
sbb
push
icebp
addb
dec
negb
adc
or
add
loope
cmp
xor
and
adc
stc
repz
push
icebp
imul
lods
adc
xor
jle
cmp
push
or
mov
cltd
dec
sahf
sti
jb
or
xchg
xchg
arpl
and
jne
loopne
ljmp
sbb
out
insb
dec
pop
mov
leave
dec
xor
add
jl
jmp
clc
mov
xor
ficoml
or
or
mov
sbb
mov
dec
fiaddl
lock
pop
mov
cmc
repz
mov
imul
jae
movsb
cmp
lock
imul
sbb
lock
out
test
push
xchg
fs
fildl
sti
pop
rcrl
mov
int3
add
push
mov
dec
push
lods
leave
out
fisubs
push
mov
testb
js
sti
mov
or
jp
rorl
fdivl
jl
loopne
cmp
cmp
fcomi
mov
xchg
xchg
aad
sbb
jns
cwtl
in
sub
pushw
leave
push
and
lcall
outsb
xorl
push
mov
pop
iret
adcl
shll
or
cmpsb
aad
sub
mov
pop
inc
jl
cltd
pop
xchg
insl
mov
rcrb
es
xor
and
imul
add
inc
jl
dec
adc
ficoml
hlt
loopne
cmp
pop
int3
pushl
jo
xrelease
cwtl
mov
pop
mov
aaa
dec
lods
call
rcrb
jb
and
sbb
icebp
loop
js
pop
shll
sub
or
xchg
cmp
out
sti
data16
fsubs
popa
jl
sub
aad
mov
sub
mov
xchg
jecxz
xor
cs
mov
jmp
pusha
or
mov
imul
mov
mov
jp
shlb
js
sub
add
outsb
hlt
push
cmp
das
mov
jmp
js
aam
mov
aad
lds
xchg
dec
int3
das
stos
in
bound
xchg
sub
jmp
xchg
mov
sub
pop
sub
rcrb
daa
sbb
sahf
fldl
gs
push
jge
push
push
add
pop
adcb
push
lds
aam
pop
and
dec
daa
dec
mov
cmp
adc
jb
call
xchg
das
in
add
xor
hlt
pusha
sub
add
shlb
sbb
push
xchg
xor
aaa
sub
in
sbb
adc
xchg
cmp
fs
aas
movsb
dec
mov
and
mov
xchg
inc
mov
int
push
or
into
xchg
es
pushf
into
es
jnp
sahf
add
add
neg
inc
in
mov
data16
in
hlt
fimull
jl
cmp
data16
js
and
pop
inc
clc
lock
loopne
movsb
out
add
sub
xchg
fisubrs
xor
aas
sahf
sub
mov
rcll
dec
mov
insl
sbb
lea
stos
ss
test
shlb
or
sub
push
jl
les
shrl
inc
sub
and
mov
call
push
js
inc
movsb
dec
ds
enter
push
dec
xchg
cmp
add
push
pop
out
push
cwtl
int3
cld
lahf
jbe
mov
xor
xorl
jbe
xor
lds
inc
enter
fsubs
or
or
repz
inc
cs
loop
push
dec
and
pop
and
adc
add
jnp
mov
xchg
popa
and
push
sbb
je
mov
cmp
xchg
scas
mov
mov
mov
out
lahf
inc
jno
ljmp
pop
sbb
out
mov
movb
lods
sti
inc
je
and
xor
aam
pop
cmp
dec
rcll
incb
into
dec
rorl
dec
jns
push
xchg
push
das
and
adc
push
xchg
jb
jbe
pop
add
or
xchg
dec
adc
adc
jb
out
xor
pop
js
into
sub
adc
inc
pop
and
mov
dec
fdivrl
pop
gs
push
xchg
mov
xchg
push
daa
lcall
sbb
test
sbb
cmpsb
sar
sub
je
jl
daa
push
sub
cld
int
or
ret
insl
in
xchg
pop
jae
andb
mov
ret
dec
jbe
mov
gs
frstor
dec
mov
out
test
adc
inc
or
out
or
xor
inc
add
xchg
in
rcrb
inc
ret
cltd
int
lret
sub
stos
mov
test
adc
lahf
rclb
adc
fistpl
xchg
mov
aad
pop
lock
cwtl
arpl
das
mov
inc
or
fwait
and
mov
xchg
pushf
mov
sarb
cmpsb
shl
or
xor
xchg
fdivrl
mov
push
sub
sbb
fists
xor
sub
xor
xchg
es
xchg
push
insl
shll
add
jnp
int3
cmc
adc
lcall
std
popa
aad
mov
cld
js
dec
stos
lea
je
shll
xor
outsl
and
add
sti
cwtl
cmp
mov
sbb
mov
popf
xchg
cmpsl
jae
cli
push
out
sarl
inc
scas
or
cwtl
out
jno
xlat
jmp
pop
movsbl
jge
mov
sbb
mov
fbld
icebp
fbld
rolb
sub
jmp
clc
fs
in
push
mov
mov
stos
fnsave
or
arpl
and
inc
cltd
or
mov
pop
call
cmpsb
cmp
repnz
push
xor
in
dec
and
lds
mov
push
dec
out
popa
mov
outsl
inc
clc
cmp
pop
int3
dec
xchg
test
jbe
addr16
cmpsl
add
adc
stos
out
sbbl
cmc
push
jae
or
xchg
jg
pop
mov
xchg
mov
cmp
dec
adc
adc
ret
dec
int3
mov
mov
and
mov
and
xchg
scas
call
xchg
div
jmp
mov
add
sub
test
xor
sub
or
pop
out
rol
and
xchg
clc
add
roll
mov
dec
push
or
inc
dec
inc
jmp
pop
sahf
dec
loopne
xchg
leave
sbb
cmpsb
daa
cmp
adc
mov
sbb
repz
cmpsb
mov
dec
xchg
out
out
sub
adc
xchg
bound
mov
and
insl
les
fiadds
cmp
loop
sarb
int3
scas
notl
les
jle
out
test
icebp
lds
mov
push
mov
mov
add
inc
mov
aas
lods
push
xor
mov
mov
and
and
push
push
dec
into
pop
xor
loop
js
xor
cld
cmp
out
lea
and
sbb
ret
in
insl
jne
jo
pop
ret
int3
xchg
jecxz
xchg
add
adc
xor
loop
sbb
add
test
cmp
or
addb
sbb
stos
lock
testb
inc
ffree
int3
dec
js
lds
push
xchg
adc
sbb
add
mov
push
inc
or
xchg
cmp
iret
push
add
les
inc
mov
out
mov
pop
push
nop
sar
out
stc
mov
or
mov
push
mov
out
movsl
mov
ss
imul
add
fs
scas
mov
testb
and
mov
adc
cmp
sbb
jmp
sub
pop
lds
outsl
dec
test
nop
push
fcmovnb
in
jns
pushf
mov
imul
dec
xchg
mov
ret
jp
xor
popa
frstor
je
int
clc
cmc
push
xor
sub
sbb
xor
xor
xlat
jmp
cmp
das
daa
jno
dec
add
movsl
test
and
jle
imul
popa
xor
xchg
jnp
fsub
aaa
jb
sti
popf
repnz
gs
or
dec
das
jb
loop
mov
loope
or
out
pop
pop
sub
pop
pop
sbb
rorl
nop
mov
mov
pop
sub
fstl
idiv
mov
and
dec
adc
jne
mov
mov
pusha
mov
repz
adc
and
xlat
fildll
add
jg
das
insb
fstpt
push
mov
xor
outsb
ficompl
mov
lods
test
xchg
cs
jecxz
mov
sbb
add
xchg
mov
pusha
mov
mov
ljmp
push
xor
out
adc
jo
mov
cs
push
xchg
cmp
push
jno
xchg
icebp
stc
scas
adc
and
add
movb
movsl
insb
add
jl
lret
out
fists
ja
enter
cld
and
cmpsb
out
push
push
xchg
lds
mov
ds
mov
sub
outsb
test
sub
data16
or
jns
in
ror
xchg
ss
xchg
inc
ss
rorl
out
inc
push
bswap
dec
ret
adc
mov
push
push
jnp
add
mov
js
ret
repz
add
insb
mov
dec
mov
popf
sbb
mov
mov
data16
pop
dec
aam
setg
std
lods
push
ds
daa
aaa
cwtl
or
inc
push
adc
sahf
cltd
fbld
pop
outsb
mov
in
ja
ja
jns
lods
add
cmp
inc
jbe
jae
pop
sbbb
out
in
push
mov
loope
add
mov
push
cmc
call
repz
stos
adc
pop
lret
fidivrs
cmp
in
enter
decb
mov
test
xchg
sti
sub
cmp
pop
imul
ret
cld
in
pop
xchg
outsb
mov
push
icebp
test
mov
fsubr
or
and
jmp
adc
pop
repz
xchg
sub
dec
pcmpgtd
jg
dec
cmpsb
push
es
push
and
ss
loop
lods
add
ror
adc
pop
push
enter
pushf
iret
mov
sti
inc
adc
or
adcl
push
lea
movsl
test
loop
rclb
stos
pop
pop
sahf
leave
lahf
pop
test
xchg
lea
push
adc
cli
mov
shrb
xor
jmp
shlb
enter
inc
pop
out
dec
xchg
add
jge
das
jne
bound
jmp
adc
pop
lret
shlb
cmp
stos
dec
mov
cmp
pop
inc
inc
scas
mov
cld
pusha
push
inc
add
push
stos
scas
xchg
insl
jle
adc
popf
test
jl
dec
xlat
jne
adc
push
outsb
jb
out
adc
in
jb
and
sti
outsl
mov
int
arpl
cwtl
jne
lods
cmp
xor
and
dec
jp
rcrl
and
lods
scas
pusha
arpl
mov
lret
jmp
pop
mov
std
insb
mull
and
out
in
dec
inc
sbbb
cmc
xchg
mov
adc
inc
loop
nop
js
in
mov
mov
mov
mov
insl
inc
adc
or
dec
pusha
pushl
aaa
into
jno
cmpsb
fidivl
xorl
and
fistpl
rcrb
inc
leave
push
insl
xchg
lcall
pop
jmp
jnp
xchg
mov
jns
push
lock
fcoml
pop
bound
fcmovbe
dec
je
add
jp
loopne
or
sbb
jb
xchg
inc
and
int3
mov
xchg
inc
sahf
int3
adc
and
ret
push
cwtl
and
addb
fwait
outsb
mov
stos
negl
ret
addr16
or
jno
aaa
rorb
lret
push
mov
aam
clc
fucomip
and
jno
nop
pop
fwait
scas
or
test
or
cmp
xchg
pop
cmp
xchg
loop
mov
push
cltd
arpl
je
in
jp
xor
push
sbb
adc
icebp
in
inc
mov
outsl
jge
sbb
stc
inc
rolb
ljmp
adc
jae
sahf
call
adcb
xor
xor
out
mov
sub
pop
dec
sbb
adc
sbbl
nop
inc
push
mov
fdivl
or
lcall
mov
aam
arpl
jnp
test
jb
mov
pop
xchg
lret
int3
cmp
ret
mov
fwait
cmp
sub
enter
addr16
fbstp
adc
pushf
pop
push
mov
int3
push
mov
aaa
xchg
ret
dec
xchg
loope
or
inc
sahf
jbe
call
sub
or
xor
adc
loop
mov
push
es
sub
out
mov
mov
and
add
fldcw
movb
iret
adc
insb
mov
int
jno
jmp
mov
test
mov
pushf
imull
enter
xchg
fcmovne
lret
push
fcoml
stc
jo
sbb
xchg
cmc
popa
scas
and
cmp
mov
fldcw
cmp
sub
pop
arpl
push
jae
enter
jecxz
mov
cwtl
inc
add
jecxz
add
test
push
lret
loop
aas
dec
mov
pop
pushf
loope
test
push
push
inc
adc
jae
sub
popa
sub
int
mov
imul
jle
xor
lahf
imul
rorb
mov
pop
lcall
push
mov
flds
xor
arpl
hlt
inc
and
loop
bound
xor
jge
xchg
jge
addr16
push
in
cmpsl
mov
mov
ret
subb
dec
enter
or
mov
fcmovne
adc
movsb
xor
jge,pn
inc
or
or
clc
mov
fcompl
lods
add
push
jae
and
nop
orb
filds
jo
aam
jmp
lea
mov
cmp
fdivrs
xchg
cmp
lock
cmp
pop
push
xcrypt-ofb
cmpsl
imul
adc
test
jecxz
inc
xchg
inc
sub
in
sbb
mov
xchg
and
orb
andb
mov
xor
outsl
out
mov
sti
xor
dec
adc
cltd
ficomps
inc
in
push
sbb
out
jo
ret
leave
bound
fcomps
hlt
test
cmp
push
stos
xchg
cli
sbb
pusha
sbb
mov
aaa
shrl
dec
sbbb
in
push
adc
pop
pop
push
in
ss
insb
mov
mov
inc
adc
js
lcall
push
test
jecxz
les
cmp
mov
in
shll
mov
dec
mov
les
push
fsubs
fsubr
test
jae
dec
dec
dec
outsb
mov
dec
jle
jns
stos
fwait
dec
adc
adc
add
dec
andb
dec
dec
repnz
push
xchg
jl
into
sbb
cs
cmc
sub
pop
and
xchg
int3
inc
scas
xor
ret
inc
ficoml
das
jg
sub
cmp
inc
jae
scas
cmp
mov
mov
cmp
stos
xor
and
dec
lock
sbb
mov
cmp
add
shl
sbbl
jle
jo
cli
cmp
push
mov
mov
adc
andb
jle
cmp
mov
fsts
std
sbb
icebp
push
xlat
xchg
out
xchg
hlt
test
inc
mov
popa
push
push
outsb
lods
xlat
repnz
hlt
fmull
bound
icebp
jmp
fs
pop
in
add
in
loope
rcl
hlt
push
sar
cmp
adc
xor
xor
lahf
pop
and
jb
jp
addr16
mov
jb
cmp
loope
cmp
sbb
dec
sbb
xor
add
mov
repz
adc
lods
cmpb
cmpsl
inc
mov
adc
pop
aad
fsubs
test
mov
pop
pop
mov
jp
mov
dec
ds
sahf
addr16
out
xchg
mov
scas
or
dec
cmp
mov
push
fmull
jg
roll
sub
mov
dec
rcrb
fdivl
repz
dec
and
call
pop
jbe
adcl
xchg
adc
test
shll
pop
in
and
add
jmp
add
ret
test
or
sbb
cmp
push
mov
pusha
xchg
aad
jne
xchg
push
ss
jo
add
popa
lret
and
lods
je
mov
hlt
mov
pop
push
xor
mov
pop
jns
out
rcl
js
jl
cmp
pop
out
dec
push
dec
sti
movsb
sub
inc
int3
test
clc
ja
pop
std
jbe,pt
dec
adc
xor
mov
sub
outsb
ds
in
pop
les
pop
mov
pop
inc
sub
fldl
sub
jo
mov
add
imul
rclb
adc
mov
nopl
fwait
lcall
leave
jns
mov
in
and
add
pop
cmp
and
push
out
into
jne
xchg
call
hlt
stos
xor
mov
ja
add
sti
leave
jno
cltd
xor
mov
cmp
aaa
or
adc
adc
cvtdq2ps
push
push
fcmovne
mov
ficoms
fisubl
mov
ficoms
cmpsl
fsubl
mov
add
pop
and
cmp
xor
push
in
sbb
repz
jo
mov
dec
in
stos
imul
fnstenv
sub
inc
ret
hlt
aam
add
inc
lods
dec
imul
mov
inc
push
out
xor
ds
stc
sbb
nop
cld
dec
rep
jnp
sbb
fisubrs
xchg
inc
std
cmpsl
xor
and
inc
leave
popa
or
mov
fwait
jns
and
out
jne
push
mov
das
cmpsl
test
test
xor
cmp
xor
leave
cld
mov
ret
sub
push
mov
cs
pop
movsb
cmp
jg
sbb
xchg
sub
jecxz
xchg
push
in
ret
inc
xor
adc
mov
popf
shlb
push
arpl
mov
adc
and
inc
movsl
jo
cmp
fimuls
cmp
dec
js
hlt
xchg
dec
xor
add
inc
push
dec
mov
dec
ds
pop
or
insb
dec
xor
test
cltd
fwait
mov
inc
and
call
mov
loop
shl
pop
sbb
fdiv
popa
mov
test
inc
insl
std
xor
push
cld
cltd
mov
inc
mov
or
loope
fimull
je
add
jmp
mov
xor
je
sbb
jecxz
mov
pop
sbb
out
and
pop
xor
cmc
pop
test
test
aam
fs
push
jns
jne
test
xchg
out
insb
mov
cs
iret
out
mov
pop
jnp
or
xchg
cs
sbb
pop
fisubrl
jmp
andb
push
dec
lea
sbbb
pop
and
pop
push
js
mov
shll
in
subl
in
mov
lea
dec
push
inc
sti
xor
outsl
je
dec
lds
add
rcr
push
cltd
xor
mov
jae
or
pop
push
inc
cmp
rcrb
jns
addl
ret
push
pop
xlat
cs
xor
or
cmp
sti
into
shld
mov
xchg
cmp
sub
sahf
mov
or
jbe
xor
imul
xor
xchg
mov
scas
mov
cmp
test
sbb
or
in
push
or
fmull
jp
xchg
addr16
cs
ja
lods
lret
adc
cmp
sti
push
dec
cli
ret
adc
push
add
out
mov
pop
sub
cs
xchg
jecxz
leave
fs
out
xchg
ja
jno
or
mov
stos
fisttps
ret
sbb
inc
and
jne
test
add
xor
lods
pop
xor
adc
dec
xor
or
add
cs
push
aad
jno
pop
sbb
test
cli
ret
pop
cmpsl
add
xchg
nop
imulb
ss
add
and
mov
js
into
mov
aaa
cld
aas
mov
lahf
insb
stos
lods
es
cmp
daa
push
xchg
sti
push
pop
or
fucomp
add
xor
sbb
inc
pop
adc
and
mov
mov
adc
lods
pop
dec
call
divb
aas
inc
shlb
ljmp
push
iret
adc
sub
inc
adc
xchg
and
pop
nop
jecxz
int3
xchg
scas
cmp
cwtl
jle
push
lea
in
mov
clc
dec
call
push
sbb
add
jge
psubd
lcall
cmp
pop
sbb
adc
pop
pop
in
iret
loope
insl
rolb
jns
sub
js
movsb
cmp
jl
ret
rolb
adc
jb
sbb
xlat
shlb
arpl
stos
daa
dec
imul
adc
scas
push
push
and
pop
aaa
lret
sub
imul
mov
push
cmp
xlat
jns
cmp
push
mov
push
std
imul
pop
loopne
sar
fisubrl
fsubp
fimull
fwait
xor
xor
push
mov
repnz
fstpt
cmp
aaa
outsb
cmp
pushf
jnp
rcll
movsl
mov
shrb
sub
push
test
add
xchg
push
dec
movsb
mov
popf
adc
mov
std
jecxz
and
adc
xchg
stc
xor
cwtl
inc
es
cmpl
dec
pop
jns
xor
mov
push
mov
jns
add
sbb
and
nop
mov
in
xlat
cmpsb
or
dec
lock
dec
fucomp
mov
scas
xlat
rorb
fwait
int3
lods
mov
push
or
add
push
cs
js
xor
add
aas
add
pop
cmp
mov
or
fsin
xchg
out
es
xor
adc
imulb
popf
mov
scas
cmp
xlat
xchg
push
outsl
lods
pop
jne
pop
cmp
adc
xchg
addr16
jbe
push
je
mov
jbe
jno
sahf
sub
fbstp
popf
dec
das
jmp
ds
and
adc
inc
mov
fcmovb
sub
lods
cmp
lds
sub
imul
cmpsl
add
dec
inc
mov
inc
or
repnz
aam
roll
loopne
data16
stos
sti
add
mov
cmp
jp
js
add
loopne
ret
insb
jmp
dec
das
daa
out
sub
xchg
or
lock
stos
pxor
aas
cltd
jno
sbb
fcompl
dec
or
incl
movsb
fs
mov
es
and
mov
xchg
leave
cmpl
rcr
dec
cmp
pop
lret
mov
xchg
daa
mov
rorl
lea
or
mov
test
dec
push
rolb
cmp
and
inc
decl
add
cmp
cltd
addr16
mov
cmovns
out
jns
mov
into
push
fsubrp
std
adc
outsb
test
popf
push
pushf
fists
mov
cmp
out
xorb
adc
push
aad
jle
jnp
lds
mov
nop
ja
lock
out
int3
stc
cmc
jnp
cli
inc
sub
mov
sbb
dec
push
out
jnp
addr16
fistl
addb
stos
lret
pushf
mov
mov
xor
rorl
repz
and
popa
daa
in
sbb
cltd
add
dec
mov
call
call
fwait
mov
popf
mov
sub
addr16
leave
ja
leavew
jecxz
mov
sbb
push
fldcw
xchg
divl
cltd
add
popf
rorl
sbb
pop
jge
push
jg
or
mov
jg
pop
cli
int3
xor
enter
mov
and
mov
and
mov
test
adc
jg
sbb
stos
cmp
inc
mov
bound
sahf
popa
lods
leave
adc
jbe
sbb
dec
add
push
cltd
lret
sbb
aam
jns
pushf
ljmp
iret
cs
cmpsl
dec
push
and
jbe
inc
scas
xchg
cmp
push
xchg
int
rorb
adc
add
cmp
sbb
test
cmp
dec
movsl
sub
call
cmp
push
fwait
xor
pop
incl
repnz
xchg
mov
jne
pop
popa
xor
in
loope
dec
rolb
call
jp
push
clc
jle
in
or
lret
insl
punpckhwd
lret
xlat
dec
xchg
fcoml
fwait
adc
cmp
ret
movsl
push
jb
movsl
mov
hlt
dec
pop
xor
mov
jmp
dec
aad
inc
pusha
add
idiv
lds
and
mov
lcall
add
pop
mov
dec
or
mov
sub
sti
aas
xlat
jge
inc
andb
fwait
push
adc
sbb
or
stc
xor
aas
int3
jp
sub
xor
pusha
data16
xor
stos
dec
sub
insl
fcomps
push
sbb
neg
repz
mov
xchg
adc
sti
cmp
pop
mov
fs
jae
loop
mov
aad
add
mov
mov
es
loopne
inc
popf
cld
push
lods
cmova
lahf
cld
fistl
stos
push
arpl
and
or
out
push
or
inc
pop
mov
cmp
add
and
dec
in
adc
add
nop
ja
pop
jo
shrl
pushf
sub
pop
pop
push
jecxz
orl
roll
mov
jae
push
and
test
and
cmp
pop
mov
mov
sub
clc
push
das
icebp
or
xchg
cmp
dec
hlt
lock
outsl
push
pop
push
jl
sub
sahf
push
pop
jle
mov
dec
sbb
lcall
cmp
or
repnz
sbb
or
data16
js
dec
sbb
jo
out
sbb
les
pop
icebp
sahf
add
jle
test
jo
pop
icebp
scas
in
adc
cmp
or
aam
ret
dec
bound
jae
jb
hlt
lret
mov
sarb
mov
negl
xlat
xchg
clc
mov
sub
fwait
inc
mov
mov
jno
mov
imul
push
push
sahf
int3
mov
lret
imul
sbb
stos
enter
les
inc
sbb
pusha
or
clc
mov
mov
xchg
addr16
sti
fwait
mov
loope
push
xchg
int3
xor
minps
sbb
sub
inc
test
inc
aad
dec
in
fwait
dec
cltd
sub
mov
test
sbb
push
insb
xor
les
jno
lods
pop
out
dec
push
popa
lds
ret
xchg
cld
insl
fucom
add
xchg
inc
xchg
imul
hlt
jbe
push
mov
and
push
jp
push
push
leave
call
in
jbe
xchg
ds
and
out
scas
push
cltd
jo
fs
fs
or
cld
lret
shlb
add
icebp
mov
pusha
fidivrs
jmp
mov
ljmp
cmp
cwtl
cmpb
sbb
movsb
insl
aas
fcmovne
ljmp
or
dec
frstor
dec
or
aaa
inc
and
inc
cmp
xchg
aaa
mov
jns
sub
and
xchg
mov
repnz
andb
xor
xor
popl
into
adc
sub
mov
outsb
jp
dec
mov
xchg
scas
testb
cmpsb
clc
leave
hlt
test
ljmp
push
outsb
stos
inc
in
fistpl
cmp
pop
cli
call
notl
or
xchg
movsl
push
ret
cmp
imul
into
fwait
dec
xchg
rorb
fldl
or
fsubs
vmwrite
rcl
and
mov
aam
loop
lds
lahf
mov
pop
mov
mov
dec
cltd
stos
imul
cmpsb
and
adc
inc
mov
and
push
add
pop
and
mov
or
fstps
mov
test
push
ret
push
mov
into
sbb
data16
cltd
mov
and
mov
fs
xchg
mov
in
jne
dec
sub
and
xorl
xor
out
mov
mov
add
mov
xor
fsubl
loopne
mov
jg
mov
sbb
push
gs
dec
cmp
dec
popa
or
loopne
loope
test
jecxz
cli
stos
dec
data16
or
xor
adc
jmp
xlat
xchg
iret
cmp
in
gs
add
pop
fistpll
xor
jae
push
mov
pop
pop
sub
mov
fldl
pop
ja
std
loope
ret
push
and
decb
and
ss
repnz
push
mov
cmc
dec
mov
cltd
cli
cmc
test
jbe
cwtl
ds
mov
xor
fists
leave
push
xlat
data16
ds
pop
jmp
inc
sti
push
push
sbb
out
jo
in
push
sbb
movswl
xchg
scas
ror
fmul
pop
push
mov
bnd
nop
push
jo
push
pop
cwtl
mov
daa
ret
sub
cmp
add
or
mov
sub
cmp
add
mov
mov
sbb
jecxz
in
xchg
sbb
int3
and
and
mov
call
jg
shrb
loope
pop
dec
sbb
xchg
shr
mov
cwtl
mov
mov
in
mov
or
fwait
jbe
int3
aam
mov
int
adc
xchg
inc
adc
fadd
cmp
jmp
rclb
je
push
xchg
fwait
idivb
adc
ss
mov
dec
sbb
xchg
push
inc
xchg
add
iret
push
lret
sbb
jecxz
cmpb
push
sbb
insb
and
mov
lock
mov
sbb
jge
enter
movl
sub
repnz
dec
je
mov
mov
popf
sub
jne
mov
push
scas
inc
push
fninit
aad
xchg
xchg
leave
popa
gs
mov
mov
mov
pop
sub
mov
je
dec
loope
sub
into
xor
xchg
xor
lods
js
test
add
les
imul
cld
roll
in
test
and
loopne
popf
mov
cmp
adc
lock
inc
push
ds
pushf
xor
cmpb
or
fsubrs
test
sbb
pop
ljmp
out
popf
cmp
pop
out
add
daa
mov
aaa
cs
inc
cmp
pop
mov
loopne
lret
mov
jbe
and
mov
jbe
mov
xor
push
and
pop
inc
jne
std
data16
outsl
mov
loopne
ret
cltd
sub
hlt
dec
sarb
fcoml
or
adc
repz
jbe
bound
out
push
cmp
jmp
insl
pop
stos
sub
imul
into
jnp
xchg
loope
pop
cs
cmp
adc
jg
adc
jbe
and
xchg
or
mov
mov
test
cmp
inc
out
pop
and
es
adc
cld
mov
outsl
inc
popf
xchg
les
jbe
pop
or
daa
addb
push
or
mov
cld
inc
xor
push
fnstenv
ss
push
mov
shll
dec
repz
inc
or
repnz
and
xlat
gs
cld
in
xchg
and
mov
lock
or
imul
xchg
push
xchg
push
mov
lock
push
outsb
ficoml
jae
mov
cmp
jmp
rol
jle
add
cmp
rcr
icebp
xor
xor
cmpsb
xlat
test
xor
sbb
push
push
movd
pop
test
outsl
push
inc
adc
movsl
sub
or
cmp
and
lock
shll
dec
mov
ret
loopne
enter
sarl
clc
or
pop
add
inc
push
movsl
adc
es
sub
jmp
inc
sti
loopne
fidivl
mov
jne
and
mov
jbe
in
add
mov
test
pop
gs
bound
jl
scas
mul
fdivrp
movsb
mov
addb
push
femms
inc
aam
fcmovnbe
adcl
mov
cmpsl
cmp
cli
sub
lds
and
es
repnz
rol
aam
dec
adc
sub
jle
repnz
xor
mov
insb
push
jns
loopne
testb
cmp
orl
aad
jmp
mov
iret
pop
iret
sub
fistpl
jl
push
cmpsb
cld
addb
xor
pop
call
mov
pop
call
in
xchg
out
sbb
cs
sub
fcmovnb
in
std
subb
dec
xor
out
sub
mov
arpl
and
out
pop
mov
popa
jns
dec
mov
jmp
jb
fiadds
imul
test
sbb
jbe
jle
mov
mov
cli
mov
xchg
arpl
dec
shlb
jns
xlat
adc
imul
mov
jge
out
adc
mov
lea
iret
dec
xchg
or
lock
push
lahf
push
fwait
in
mov
sub
in
dec
sti
xchg
and
jge
jmp
ja
fwait
xor
ja
fwait
pop
int
lods
lret
mov
es
xchg
mov
out
dec
jmp
std
fidivl
jo
nop
mov
mov
pop
mov
aam
xchg
or
movsl
mov
push
call
mov
jle
sub
mov
mov
popf
mov
cmp
jle
ljmp
add
rcrb
stos
ja
lcall
loopne
movsb
sbb
addr16
jmp
mov
iret
repnz
sbb
cmp
mov
jle
ja
int
sub
insl
fs
gs
adcb
pop
pusha
shlb
ljmp
cwtl
cmp
fadd
inc
jmp
xchg
mov
test
iret
ja
mov
mov
dec
nop
fdivrs
pop
xchg
ret
cs
mov
outsb
fsubrs
stc
dec
cmpsl
xchg
cmpsl
movsb
loope
mov
sub
test
inc
movsb
pop
mov
adc
mov
shlb
jb
pop
jno
sbb
xchg
dec
mov
sub
mov
mov
pop
leave
dec
inc
testl
shll
loop
in
xchg
adc
lods
fistps
xor
jnp
lock
int
sti
leave
in
arpl
movsl
mov
mov
cmpsl
mov
cltd
shl
in
push
dec
push
mov
push
loope
or
lods
jecxz
ret
sub
js
or
xor
popf
cmp
jle
jb
dec
mov
sbb
mov
fsubs
aam
ja
mov
punpckhbw
adcb
dec
out
dec
dec
mov
ror
jae,pn
xor
packssdw
mov
fmull
lahf
call
aaa
test
push
adc
popf
jg
incl
rcrb
fldenv
sbb
dec
push
jp
xchg
fistpll
or
xchg
rorb
cld
xor
mov
test
mov
out
faddl
aaa
lds
ret
ret
cmpsl
mov
mov
mov
rol
jg
in
pop
cmp
repz
call
fcomps
aaa
sbb
lahf
mov
scas
popa
pop
stos
call
pushf
bound
test
movntq
out
inc
out
test
lahf
cli
cli
ds
movsl
and
enter
or
int
ror
loope
cmp
fdivl
repnz
mulb
inc
push
add
leave
mov
sub
movsb
lahf
adc
rcrb
mov
mov
dec
and
add
add
loope
mov
dec
or
and
sub
sarl
cmp
inc
insb
mov
push
insb
jp
and
pop
ret
fdivl
scas
in
or
push
test
cmp
or
sub
dec
xor
sub
mov
or
movsb
stos
insl
inc
call
cmp
mov
pop
popf
pop
mov
fsub
xchg
subb
adc
hlt
lret
enter
test
arpl
enter
fs
test
pop
test
outsl
xor
ljmp
add
int3
aas
arpl
ss
popf
addr16
cmp
push
jmp
mov
ljmp
push
xchg
push
push
xchg
ret
jmp
push
shrl
add
int3
fnstsw
add
rcll
jp
imull
push
ret
fincstp
subb
adc
xor
ds
push
xlat
inc
jo
push
out
insb
in
add
pop
push
adc
pushf
adc
std
inc
lahf
and
pop
inc
mov
out
mov
aam
rcrl
mov
add
sarl
in
or
fucomp
cmp
ret
cli
cli
js
test
int
js
sarl
fdivrl
push
or
insl
dec
push
mov
pop
pop
sarb
cmp
in
mov
cmp
sub
sub
repnz
push
lcall
mov
sahf
push
loopne
sub
and
xchg
pop
dec
jo
xchg
andl
push
push
mov
pop
cmpl
sbb
cmp
and
mov
repnz
out
rolb
cmp
mov
inc
mov
arpl
mov
sub
sub
inc
sub
adc
mov
add
lods
adcb
xchg
inc
mov
sub
cmp
or
cmp
test
jecxz
dec
adc
adc
or
dec
push
push
jg
cmp
lcall
inc
fcmovnb
push
mov
inc
mov
stos
and
addr16
and
filds
dec
xchg
std
fs
sbb
jecxz
mov
mov
lock
mov
andb
mov
popa
pusha
adc
push
lods
or
cmpsl
mov
pop
popa
push
adc
pop
adc
cmp
inc
xchg
inc
push
je
pop
cmpsl
pusha
or
mov
scas
mov
out
rorb
loop
out
hlt
ss
adc
jb
std
push
push
dec
xor
mov
cli
sub
fwait
add
or
mov
js
mov
aam
call
mov
cmpsl
pushf
repnz
fadd
or
scas
push
and
mov
add
movsl
sub
popa
pusha
add
cld
loop
insb
xchg
mov
fcoml
ret
push
mov
adc
mov
pop
arpl
mov
in
div
sahf
push
hlt
out
fs
push
pusha
das
adc
aaa
cld
mov
insb
fistpll
push
in
mov
xor
xchg
cmpsb
pop
sbb
ja
inc
push
adc
dec
ret
jge
fcoml
pop
mov
es
dec
lods
mov
jg
push
fstl
fmuls
lahf
repnz
std
mov
cmp
movsl
sbb
sti
je
gs
adc
cmp
sbb
fdivs
scas
lret
test
ljmp
test
loopne
push
std
xor
and
push
test
xor
fimull
push
pop
cmp
xchg
icebp
cmp
push
sti
add
loope
mov
cmp
and
mov
or
mov
shr
outsb
leave
sti
lods
sarl
add
arpl
outsl
mov
in
pop
mov
out
lret
cs
push
sbb
xor
bound
add
jmp
mov
fs
imul
fwait
fs
pop
std
sub
inc
fmull
das
cltd
repnz
or
push
mul
repz
xchg
sti
inc
add
lods
scas
lret
call
jbe
xchg
outsb
mov
jg
rcl
and
and
add
inc
out
mov
lea
sbb
xchg
loopne
sar
adc
pop
xor
dec
popa
out
or
and
pop
int
data16
test
hlt
ljmp
lcall
sbb
and
int3
mov
sbb
hlt
out
inc
jbe
loopne
testb
loope
xorb
xchg
jle
jbe
repnz
out
rcll
mov
pop
lcall
ds
dec
jo
and
out
cmp
push
sbb
in
sub
inc
cmp
mov
pop
and
jo
loopne
dec
dec
inc
into
rcll
nop
cmp
adc
subl
push
cmp
mov
xchg
ja
aam
cmp
jl
lods
xor
fdivrs
and
jnp
ds
inc
jno
mov
xor
jnp
daa
ja
push
jmp
rorb
setae
and
negb
adc
sub
insl
sbb
das
aad
xor
xchg
jg
pop
add
push
jmp
sub
fdivrp
insl
pop
out
daa
stos
outsb
aas
mov
dec
dec
jae
mov
cmpsl
sbb
out
adc
pop
xor
sar
ds
fidivs
scas
into
mov
scas
jb
xchg
jns
imul
movsb
out
mov
dec
and
xor
push
xor
xor
sarb
sub
lret
add
cltd
dec
cmc
fisttps
push
aas
aam
push
or
das
mov
mov
test
jge
repz
add
or
mov
fucompp
pop
xor
xor
mov
arpl
or
int3
dec
jbe
jg
cmpsl
jge
xor
xchg
mov
int
insl
inc
mov
xchg
mov
mov
jle
and
gs
jne
ljmp
in
iret
lods
jb
sbb
subl
mov
cltd
fnstenv
dec
fimull
xchg
push
push
push
daa
push
popf
xchg
dec
mov
jg
insl
and
cmc
int
mov
mov
add
cs
adc
xor
xlat
insl
sub
loopne
inc
and
xor
and
add
xor
xor
dec
pop
lods
mov
scas
add
mov
int
int
dec
jae
in
int
ds
hlt
aad
mov
pop
adcl
test
sbbl
repnz
inc
cltd
jbe
jnp
cld
pop
cli
lret
je
xor
fiadds
imul
or
xor
cmp
cmp
icebp
lcall
or
int3
cwtl
mov
out
jnp
sub
push
out
xor
and
cmc
push
or
pusha
orb
inc
out
in
mov
movsb
fidivl
push
stos
nop
add
pushfw
into
insb
je
pop
adc
xor
xor
cmp
inc
inc
pop
mov
fimull
nop
cmp
push
cwtl
xchg
add
cmp
sub
jge
pop
mov
insl
xor
adc
fs
outsl
cs
jle
adc
hlt
out
call
xchg
fcmovne
cs
xchg
pop
add
pop
out
fdivrs
or
mov
insw
dec
leave
enter
je
stos
sbb
mov
mov
push
lret
xchg
push
jmp
jge
test
scas
mov
lcall
push
jmp
mov
xchg
ja
xor
mov
pop
in
add
pop
mov
adc
fimull
pop
sub
xchg
fwait
test
xchg
sbb
push
loopne
mov
mov
loopne
mov
jne
mov
mov
and
aaa
xchg
add
mov
in
cli
xor
nop
mov
xor
xlat
push
cmp
test
pmulhw
lret
out
mov
xchg
sub
push
outsb
mov
jl
pop
dec
and
jge
sbb
inc
add
jl
imulb
jno
lahf
xor
adc
mov
mov
sub
leave
int3
push
push
pop
xchg
xchg
aas
xchg
xchg
jnp
cmp
mov
xchg
mov
sarb
inc
fsts
data16
filds
push
mov
dec
xor
hlt
mov
jbe
rcrl
and
inc
xor
jbe
jecxz
fildl
test
mov
rorl
push
jmp
in
jg
sbb
je
ror
pop
loopne
cmp
sub
or
sbb
add
imul
fildll
test
lds
jnp
lcall
je
add
std
pop
outsb
fdivl
scas
out
loop
and
inc
ret
xchg
inc
ret
push
in
je
sbb
loopne
mov
imull
rcrl
dec
add
es
push
pop
push
in
mov
push
lds
cs
xlat
dec
mov
test
std
and
xchg
cmp
fisubl
cmp
add
push
adc
loopne
repz
push
into
sub
mov
inc
insl
xchg
mov
add
mov
or
fildl
sbb
orb
adc
xor
fwait
stos
and
fistps
pushf
hlt
outsl
cmp
dec
idiv
out
movsb
ret
add
clc
shlb
pop
jbe
adc
movsb
push
mov
sub
sbbl
sub
push
mov
aam
subl
mov
mov
fiadds
dec
and
dec
dec
insl
xchg
fcom
push
xchg
ja
inc
lret
xorb
nop
je
mov
shlb
movsb
xchg
ret
insl
mov
daa
xchg
dec
mov
pushf
mov
push
imul
test
clc
ljmp
dec
cmp
cs
jbe
insl
insl
dec
pop
out
mulb
data16
std
mov
div
cmp
pop
push
call
xchg
dec
in
mov
out
inc
xor
inc
xchg
fnstsw
mov
inc
push
cmovp
xchg
push
cmp
clc
shlb
stc
jnp
in
leave
sub
ret
sub
push
call
in
xor
daa
sub
sub
pop
movsl
arpl
push
clc
or
jb
sub
pushl
pop
cs
pusha
into
pushf
insb
lock
je
and
jnp
and
dec
fcomp
mov
push
scas
mov
imul
adc
jl
std
and
std
ret
int
jge
push
adc
add
iret
pop
stc
aam
fcoms
rolb
fildll
jae
cmp
stc
jo
inc
add
shll
mov
sbb
xor
rol
repnz
or
push
rcl
rcl
jle
mov
add
push
les
enter
sbb
jne
repz
lds
aad
mov
and
xchg
icebp
jb
lock
push
aad
popf
fwait
enter
sbb
clc
xchg
shrb
mulb
sbb
push
sbb
dec
fisttpll
adc
mov
adc
and
xchg
push
mov
fnstcw
add
psraw
movsb
lcall
adc
inc
test
add
clc
arpl
in
in
enter
dec
scas
repz
fldl
jae
imul
ret
pop
fst
orps
shrl
hlt
leave
jo
out
enter
dec
add
pop
ds
loop
rcll
fdivrs
cld
mov
sub
lahf
div
repnz
popf
ss
add
push
pop
rcll
xchg
pop
sahf
xchg
jo
sbb
fbld
test
daa
and
shr
jne
scas
in
out
out
idivl
inc
out
pop
or
jl
test
cmpsb
pop
test
sub
subl
mov
test
call
pop
fwait
and
mov
add
lds
and
xchg
mov
xchg
jae
js
fwait
cmpl
repz
push
pop
jecxz
pop
adc
add
sub
insb
int3
cltd
pop
pop
loop
mov
xlat
mov
cmp
pop
or
xchg
push
int3
sahf
dec
cwtl
dec
outsb
lahf
mov
xchg
fmull
mov
sbb
dec
movl
mov
out
dec
orb
push
in
int
dec
fsub
fdivrp
sub
loopne
hlt
mov
pop
add
out
jnp
push
loope
das
addr16
in
leave
cld
sub
adc
mov
mov
lea
fdivp
jmp
andl
mov
in
inc
add
xor
fbstp
lahf
inc
stos
mov
and
xchg
mov
addl
inc
int
out
xchg
and
filds
pop
not
xor
mov
pop
push
fadds
mov
jo
bnd
fidivs
in
add
jb
iret
fidivs
adc
repnz
nop
fdivrs
sbb
sti
mov
std
jnp
push
cmpsl
xlat
jp
scas
adc
add
pop
inc
js
push
nop
in
repz
mov
inc
test
sahf
rclb
popf
imul
xchg
subb
pop
sub
test
incl
insb
mov
cmp
test
jnp
test
pop
in
lock
rol
push
adc
mov
jg
jmp
out
mov
inc
mov
repz
stc
stos
add
jle
imul
mov
jae
cmp
dec
test
mov
popf
xor
test
lret
mov
lahf
ss
inc
cmc
sbb
in
xchg
add
mov
jno
adcb
mov
scas
mov
sub
adc
sarl
push
mov
xchg
test
data16
jg
xchg
dec
add
mov
mov
dec
hlt
out
mov
shll
lods
jb
pop
int
mov
outsl
inc
mov
jle
cmc
add
cwtl
aad
out
pop
out
sub
xchg
sbbb
cmp
sarl
mulps
aam
jg
and
shrl
pushf
pusha
ret
mov
and
cltd
mov
mov
pop
dec
outsb
push
add
xchg
enter
lret
hlt
add
movsb
lods
shrl
test
adc
dec
and
repnz
ss
push
adc
cmp
jo,pn
ljmp
xchg
xchg
test
cmp
dec
movsl
es
adc
popa
sti
popf
lcall
push
ret
cwtl
popf
dec
or
adc
adc
pop
xchg
repnz
inc
into
js
negb
aam
lods
and
mov
ficompl
fidivl
cld
cmpl
dec
pop
jno
fwait
or
mov
jne
dec
push
test
inc
sarb
aaa
mov
fcmovnu
pop
xchg
fsubr
xor
cwtl
les
mov
mov
fs
fbstp
pop
jg
cli
pop
nop
mov
jns
test
jl
test
popa
stos
jnp
adc
scas
cmp
jae
neg
push
sbb
and
fst
adc
sbb
mov
sub
push
dec
push
mov
sbb
sub
mov
pop
cltd
push
or
loope
add
xchg
test
loope
mov
mov
cld
lods
pop
adc
adc
dec
out
outsb
loopne
xor
adc
mov
hlt
ljmp
js
nop
and
mov
add
out
mov
adc
mov
cmp
or
cmpsl
icebp
mov
mov
xor
and
cmp
loopne
cmc
cmp
sbb
ss
mov
xchg
sti
sti
das
pusha
sbb
and
sub
adc
inc
and
jecxz
out
mov
stos
or
sarl
jmp
jmp
movsl
iret
shlb
adc
idiv
push
push
push
loopne
test
sub
cmpsl
loope
test
pop
lret
jo
test
sub
cmp
sti
pop
fiadds
frstor
jl
push
push
popa
xchg
outsb
and
pop
out
push
popf
jmp
sahf
jge
in
or
mov
mov
test
punpckldq
lock
outsl
arpl
mov
outsl
rorl
xor
fsubrl
aaa
lods
adc
stos
mov
jnp
aas
cmp
lods
in
in
inc
mov
pop
xchg
shl
jecxz
mov
clc
push
cmp
clc
mov
in
push
test
or
popf
je
mov
pop
cmpsl
pop
addr16
sub
imul
int
shll
inc
in
add
fsub
mov
sub
lret
cmp
pop
or
lds
shr
jmp
and
push
addr16
mov
mov
jle
xchg
lahf
add
insl
cmp
test
jecxz
int
xchg
adcb
xor
cld
adc
adc
sar
iret
inc
aas
popf
fidivrs
leave
lcall
cmp
into
and
jp
rcrl
cmp
stc
inc
negl
xor
cli
xor
jge
dec
and
inc
shr
pop
push
test
dec
push
ret
sbb
pop
aas
fisttpll
xchg
and
fscale
sub
pop
pop
push
cmpsb
adc
dec
lar
jns
call
adc
ret
sarl
outsl
jne
and
lods
stos
aam
push
xchg
and
in
dec
pop
xorb
pushf
jo
inc
sub
sub
into
sbbb
push
outsl
pop
fsubs
test
push
pop
or
mov
gs
or
inc
jecxz
mov
mov
lahf
sbb
push
push
xor
subb
cmp
mov
dec
jecxz
clc
cmp
mov
pop
mov
fbld
adc
pop
jge
insb
xor
sbb
cltd
pop
std
popa
xlat
repz
shrb
sbb
dec
test
sti
add
jb
gs
outsb
xlat
lret
lea
cmp
les
stc
scas
icebp
pop
rcll
pop
jns
mov
adc
pusha
pop
pop
add
popa
movsb
rep
mov
addr16
inc
mov
jbe
jo
shr
test
mov
cli
pop
pop
lret
rol
jno
mov
pop
enter
leave
fiaddl
int3
mov
in
xchg
sbb
lea
hlt
subl
cmpsb
push
mov
aad
adc
ljmp
data16
mov
xchg
rol
nop
cmpsb
sub
inc
ja
lcall
sti
mov
pop
mov
pop
loop
pop
cmp
xchg
fisubs
mul
ja
jno
push
fnstcw
dec
push
outsl
nop
les
ljmp
imul
pop
out
filds
mov
xchg
or
push
stc
stos
push
mov
xor
jae
xor
pop
fs
lods
into
in
ja
fisttpll
sbb
xlat
lock
lcall
loop
faddl
addb
mov
cltd
push
mov
in
fildll
mov
fisubs
cmp
arpl
sub
push
mov
xor
push
pop
fmull
in
cmp
leave
sbb
inc
aaa
ja
out
fstpt
and
xor
movl
imul
push
aaa
mov
jo
inc
div
adc
xor
and
je
inc
and
fs
cmpsl
cmp
ss
ds
testb
mov
out
pop
jno
cmp
divl
repnz
test
js
or
sbb
adc
js
aad
mov
jne
stos
int
into
adc
jmp
aad
push
pop
mov
cmc
dec
decl
sub
jge
xor
mov
call
add
mov
ret
pop
sub
dec
repnz
fcoml
and
inc
and
sarb
psadbw
cltd
sbb
or
sbb
xchg
insb
push
shl
xchg
sub
in
adc
lahf
and
mov
and
clc
movsb
and
negl
jmp
cmp
adc
aaa
nop
mov
call
or
cmp
xor
mov
ret
std
adc
and
mov
shlb
push
adc
xor
add
leave
and
xor
push
push
adc
inc
mov
mov
xchg
pop
shrl
pop
rcll
sub
jno
sbb
mov
arpl
mov
jl
inc
in
xor
sbb
dec
fld
test
fisubs
dec
sahf
pop
adc
scas
es
mov
dec
mov
das
adc
gs
dec
sahf
mov
mov
push
setbe
icebp
xor
pop
lods
inc
test
cld
mov
lods
popf
mov
add
shrb
rcll
pop
mov
in
stos
sahf
imul
cli
mov
pop
adc
popa
out
dec
mov
arpl
mov
or
mov
inc
lret
jbe
int
mov
cli
sbb
pop
rclb
jnp
or
push
pusha
mov
mov
inc
mov
ret
outsl
sub
ds
shrl
fcomp
xor
daa
arpl
jg
ja
repnz
ds
insl
xchg
add
mov
dec
in
stc
ljmp
add
or
insl
xchg
adc
mov
sub
xor
aaa
sbb
mov
je
xchg
lcall
shlb
adc
fildl
int3
push
or
outsl
cmp
cmp
sbb
out
mov
add
mov
cmpsb
scas
sub
cmp
je
fwait
imul
iret
cs
icebp
dec
mov
mov
js
stos
mov
js
cmpsl
dec
pusha
sbb
jmp
dec
cs
int3
adc
ja
repz
lret
jg
js
sub
dec
push
popa
insb
pop
lret
push
dec
add
sti
adc
sub
ljmp
jns
and
inc
or
mov
dec
push
outsl
fdivl
test
mov
aad
mov
or
xchg
adc
jo
icebp
and
ja
push
mov
lret
ljmp
xor
cwtl
pop
cli
lock
dec
jecxz
loopne
insb
push
out
mov
out
push
pop
rcrl
cwtl
std
sbb
mov
lea
sub
add
push
mov
imul
dec
mov
ret
sub
push
xlat
push
enter
xor
xchg
dec
fistpll
scas
in
cltd
stos
lock
sbb
jl
mov
jg
faddp
lret
mov
mov
jmp
lods
cmpsl
cltd
stc
mov
fbstp
dec
or
inc
int3
loop
shr
and
inc
mov
pop
push
iret
rclb
daa
or
mov
pop
add
push
and
xchg
imul
jp
data16
call
subl
xchg
mov
pop
in
mov
sbb
mov
call
jl
cmp
insl
jns
dec
dec
imul
jmp
iret
decb
sbb
je
mov
cmp
push
adc
insl
inc
pop
or
dec
pusha
ret
sbb
and
mov
out
je
xor
adc
out
sbb
xor
nop
lret
add
inc
lock
jle
ja
mov
xchg
sbb
mov
ret
inc
hlt
inc
push
mov
mov
mov
iret
xchg
outsb
dec
dec
add
divl
cmp
adc
lock
ret
fs
sub
scas
jno
iret
loopne
add
and
aaa
shll
roll
jle
lea
xchg
sub
sarb
int
ret
mov
or
or
and
ds
ja
adc
bound
mov
push
cmp
mov
fxch
addr16
xchg
push
xor
popa
out
fucomip
inc
xchg
jp
lret
jl
push
push
xchg
mov
inc
scas
xlat
insl
jo
mov
mov
stc
movsb
pop
insb
xchg
mov
pop
clc
in
aas
repnz
popa
fnsave
les
out
adc
jmp
js
jno
pop
rorb
push
mov
fnsave
in
adc
cmp
jnp
dec
aad
mov
roll
enter
push
sbb
cld
subl
or
and
cmp
xchg
add
jno
xchg
fstpl
sti
inc
dec
dec
sub
popf
out
mov
xor
add
xorb
add
mov
jb
push
jo
mov
insb
jge
sbb
pop
sbb
popf
sub
add
pop
mov
sti
push
lret
popf
stc
push
fsubrp
fistps
jne
pop
ss
jae
mov
push
mov
pop
ret
dec
add
cmc
int3
lcall
xchg
xchg
lcall
je
inc
lea
and
cwtl
in
lea
mov
push
adc
cltd
out
xchg
aaa
xchg
push
leave
add
push
inc
add
pusha
sub
popf
xchg
sbb
bound
push
xor
jp
loopne
inc
cmpsb
adc
sbb
add
cs
inc
js
sarb
cmpsb
xchg
out
push
mov
or
and
push
into
into
mov
mov
mov
dec
add
flds
jmp
cmp
addr16
dec
in
jle
add
scas
subb
js
aaa
fimuls
and
in
adc
pusha
xor
xor
arpl
dec
inc
sbb
insb
jmp
andl
jp
jne
dec
cltd
sub
out
mov
hlt
negl
popf
icebp
aas
repz
rcll
sub
testl
mov
dec
xchg
test
out
add
scas
mov
xor
cmpsb
mov
inc
dec
dec
mov
jne
imul
mov
outsl
imul
jns
jg
or
outsb
xchg
pop
es
push
les
fsubrl
lahf
into
add
pop
std
jge
cmpsl
lock
test
push
inc
paddusw
pop
loopne
stos
and
sahf
sub
bound
pop
test
jb
xor
sahf
ret
cmpsb
nop
mov
loope
jp
mov
les
fbld
fsts
ljmp
and
mov
call
test
add
fiadds
into
xchg
jecxz
cmc
jnp
adc
sahf
mov
adc
xor
nop
jmp
sub
rorl
add
push
stc
hlt
cmc
sbb
fisubs
push
dec
sub
mov
jb
jb
cli
je
ffreep
dec
xchg
adc
pop
pusha
lea
push
mov
cli
cmpsl
fstpl
sub
js
test
adc
daa
sahf
jg
cli
or
mov
cwtl
fcmovnb
lea
xchg
xchg
sub
pop
call
scas
cwtl
mov
sahf
push
jae
lods
movsb
sub
dec
push
out
lretw
jp
fsts
daa
rcr
sub
jae
repnz
icebp
lods
fstpt
fxch
push
xchg
push
mov
mov
jmp
fiaddl
pop
arpl
scas
pop
mov
stc
push
int
mov
mov
jns
xchg
push
jmp
scas
xchg
movsl
inc
scas
test
mov
sbb
mov
and
or
mov
adc
and
mov
dec
popf
inc
push
mov
xor
jmp
cmp
xlat
jns
fcmovb
xor
sarb
xchg
adc
pop
jge
jp
mov
inc
mov
daa
add
fs
jecxz
inc
xchg
sub
push
mov
dec
xor
fs
out
jp
lds
cs
cmpsl
xchg
cmp
insb
fsubr
adc
and
insb
lods
test
iret
insl
sbb
aad
sub
or
jg
lods
xchg
adc
inc
adcl
aaa
in
je
xor
cmpsb
jmp
out
jb
bswap
cwtl
imul
bnd
icebp
xchg
and
out
sbb
gs
loopne
push
dec
icebp
mov
cmp
rol
pop
js
lahf
shl
mov
jp
pop
cli
pop
rclb
xchg
push
daa
cmpsb
sub
lock
test
and
cmp
test
int3
pop
and
fs
loope
addr16
aad
std
adc
icebp
aas
lods
test
mov
js
dec
pop
inc
xchg
mov
sti
nop
loope
mov
mov
push
out
mov
cmp
xchg
lahf
or
dec
das
daa
cld
iret
pop
jp
jns
cmp
push
mov
push
fnstsw
call
das
movsb
nop
xchg
jge
add
inc
movsb
ds
dec
adc
inc
stos
out
bound
add
push
pop
ficoms
cld
xchg
imulb
jge
xlat
lret
push
push
je
add
adc
test
ds
jbe
sub
ja,pn
mov
insl
dec
cli
xchg
scas
add
push
andb
pop
outsl
adc
das
jbe
enter
aas
loop
cltd
mov
cld
mov
xor
dec
dec
sahf
lcall
mov
jo
add
adc
dec
orl
dec
add
and
push
pop
jmp
cmpb
sbb
int3
pop
fstpt
loope
lea
loopne
stos
fisubrs
adc
add
cmc
shll
int
inc
out
jmp
rcll
fildll
in
push
std
pop
in
loopne
adc
lods
dec
hlt
test
mov
insl
and
pusha
jmp
out
in
sub
jmp
mov
or
add
pop
loope
lcall
popa
out
fucomp
jbe
dec
mov
pop
sbb
dec
jne
icebp
cmpsb
mov
aaa
jns
ficompl
sysret
insl
push
pop
adc
and
and
adc
inc
sahf
cmpsb
test
jbe
push
dec
jne
pop
cmpsb
arpl
test
push
call
mov
or
xorb
cmp
pop
mov
arpl
adc
bound
inc
addr16
shrl
adc
sar
jno
mov
dec
cwtl
and
fsqrt
adc
add
fcomip
gs
movsb
aaa
or
into
rclb
sub
js
mov
push
xor
cmp
mov
jb
aam
xlat
fcoml
pop
ss
repnz
xchg
and
push
dec
movsb
dec
inc
xchg
pop
jbe
push
add
inc
mov
mov
lcall
sbb
sub
pop
sub
jl
scas
roll
fwait
or
aas
sbb
addr16
xchg
add
xor
mov
adc
js
add
inc
pushf
stos
xchg
jle
pop
outsb
sbb
fstpl
pop
and
jb
or
repz
mov
jae
insb
fucomi
pop
pop
xchg
push
lock
aas
aas
loopne
ljmp
dec
hlt
addr16
test
push
nop
cmpsb
repnz
stc
pop
fucomi
xlat
mov
mov
jno
mov
xor
mov
xchg
loop
jbe
xlat
jae
push
loopne
push
and
or
test
scas
inc
out
std
jp
bound
push
fidivrl
aam
jo
add
sarl
outsb
orb
test
fisubl
add
js
mov
mov
clc
inc
movsl
mov
dec
cmp
adc
sbb
add
mov
jecxz
sbb
jb
cmp
push
pop
nop
and
xchg
mov
mov
jnp
ret
dec
cmp
repnz
cli
dec
lret
pushf
sub
push
lods
sub
inc
pop
mov
dec
insb
in
cli
cld
mov
or
mov
adc
fists
das
test
sti
mov
pop
icebp
inc
push
mov
repnz
xor
xlat
or
addr16
ret
jb
mov
lds
xchg
and
cmp
adc
adc
pop
jns
xchg
push
inc
or
cmp
fstpl
push
std
xchg
pop
orl
inc
xchg
orl
mov
sahf
into
and
pop
ds
mov
bound
mov
movsb
xorb
lcall
pop
leave
leave
sbb
dec
pop
dec
add
inc
icebp
imul
mov
xchg
sti
xor
inc
cmpsb
jns
jmp
mov
mov
out
xor
lods
mov
sub
lcall
fdivp
push
hlt
popf
pop
fimuls
inc
imul
sarb
leave
sar
std
jp
push
sub
cmp
ror
lods
push
test
xchg
imul
fldenv
and
test
mov
sub
pop
into
dec
xor
movsb
dec
push
push
in
aas
scas
mov
xchg
pop
lea
mov
data16
sub
je
lds
mov
or
mov
fcoms
xorb
cmp
cltd
je
push
mov
adc
jne
push
fidivs
or
sbbl
add
xchg
sbb
bound
nop
mov
xchg
mov
xor
aas
rcll
sub
loop
push
data16
mulb
std
pop
mov
imul
sub
es
rorl
sar
jle
pop
xor
and
push
add
and
cmc
imull
ss
insb
jbe
rcrb
sub
sbb
pop
add
lahf
sti
add
mov
mov
fistpll
faddl
jae
pop
xchg
cmp
sub
push
jb
cltd
imul
cli
lcall
stos
sbb
dec
mov
add
out
push
loope
xchg
and
jo
test
xchg
stos
mov
and
xor
in
or
mov
test
xchg
add
sub
out
push
movsl
push
nop
ror
inc
inc
pusha
mov
mov
xor
into
addb
xchg
pop
pop
inc
xchg
inc
xchg
iret
or
xchg
inc
sbb
pop
pop
scas
stos
inc
xchg
jg
enter
jmp
les
or
push
pop
jno
inc
imul
sub
jnp
xor
sub
dec
inc
cmpsl
leave
xchg
lds
daa
xchg
fs
add
add
push
outsl
xor
cmp
popa
cmp
cmp
inc
pop
ficoml
push
fisubrl
mov
std
mov
mov
mov
lds
daa
adc
xchg
sub
cmpsb
jmp
mov
add
leave
xor
push
or
adc
mov
cmpsb
into
jg
pusha
adc
jmp
jmp
sti
mov
inc
test
les
loope
gs
lods
test
dec
loop
xchg
rcrb
in
xor
dec
mov
xchg
mov
jo
pop
fisttps
cld
sti
mov
ja
add
cmp
ss
mov
push
js
mov
ja
test
or
outsl
jle
cld
mov
cmpsb
out
int
fistpl
stc
adc
pop
pop
test
lock
fwait
icebp
jno
pop
pop
out
adc
inc
addr16
aas
mov
popa
fst
aaa
adc
lock
xor
adc
es
pop
jp
or
arpl
push
xchg
sbb
mov
fildll
jns
in
rolb
lea
outsb
lds
pop
push
mov
cmpsl
pop
mov
out
stos
fcoms
or
movsb
insl
loopne
pop
cmc
push
sbb
test
movsl
rcr
mov
lcall
cmc
cli
repz
shll
subb
mov
and
inc
ds
push
lock
dec
push
pop
push
or
mov
les
sti
push
rcrl
xor
add
fstpt
aad
dec
pop
aaa
pop
dec
or
cmpb
xchg
adc
fidivrl
gs
xchg
sbb
add
push
loopne
pop
repz
add
ljmp
ror
inc
and
sub
pop
out
sbb
stc
pop
push
xchg
pop
fidivrs
xchg
jae
cmpsb
sub
xchg
cltd
cmp
pushf
push
mov
sub
imul
inc
mov
negb
add
leave
sbb
shl
mov
lods
scas
movsl
fwait
cs
or
rcr
in
out
dec
add
dec
inc
incb
pop
std
push
or
mov
adc
outsb
rcll
je
loopne
sbb
stos
xlat
dec
mov
enter
mov
jnp
inc
scas
out
inc
sbb
push
outsb
mov
icebp
cli
add
stos
xchg
add
mov
pop
or
fisubs
inc
out
push
mov
inc
add
icebp
adc
fsts
xchg
inc
out
xchg
mov
in
inc
or
and
stos
mov
or
les
insb
call
into
mov
scas
add
lea
pop
cmp
stos
leave
inc
inc
mov
popf
xchg
pop
xchg
dec
dec
cmp
xor
mov
jne
sahf
inc
subb
sub
sbb
rorb
mov
out
dec
jge
scas
adc
mov
movsw
iret
mov
push
scas
lcall
lahf
jnp
cwtl
mov
jge
push
pop
push
push
xchg
xor
shll
out
outsb
arpl
repnz
jbe
pop
or
je
pop
or
hlt
std
mov
test
ficompl
lcall
in
lea
js
sub
in
or
fstps
fisttpl
int
jo
jno
and
pop
mov
decl
stos
pop
inc
mov
insb
add
movsl
or
cmp
stos
adc
ficomps
jnp
cmp
mov
js
or
jo
sbb
push
pop
imul
jnp
mov
cld
push
adc
aam
sbb
nop
out
outsb
out
lods
les
jg
cmp
loope
cmp
stos
outsb
movsb
xchg
and
push
lret
mov
pop
inc
or
cld
and
int3
les
data16
cmp
inc
jg
fistl
or
jbe
ja
push
jecxz
dec
mov
in
ja
adc
jnp
clc
aaa
jb
into
cmp
mov
lods
cmp
fcoms
pop
das
ljmp
clc
test
pop
push
fwait
inc
xlat
andb
out
fisttpll
mov
add
xchg
sub
xor
add
inc
lock
and
aam
inc
jno
mov
mov
lcall
jb
ret
popf
fs
mov
mov
push
rcl
xchg
xor
cmp
push
and
cltd
mov
push
js
mov
filds
dec
pop
xor
enter
int3
sbb
cmp
je
xchg
cmp
frstors
xchg
bound
sub
notb
mov
into
pop
cmp
xchg
and
js
dec
divl
ja
das
mov
sub
mov
dec
outsl
xor
lods
mov
xor
jno
daa
repnz
fcomps
push
movsb
push
insb
call
adc
inc
jp
aam
add
push
lahf
std
movb
and
xchg
ret
inc
lret
inc
mov
data16
push
adc
sub
sbb
and
mov
std
jge
ljmp
xlat
arpl
icebp
sub
sub
or
pop
push
fsubr
pop
lods
scas
cmc
popf
and
sarl
sbb
jne
push
dec
movl
cmp
daa
xor
pextrw
push
fstps
xchg
jl
jns
jmp
out
cmp
addr16
out
jecxz
movsl
xchg
test
push
xor
arpl
int
cld
adc
scas
pop
sub
lret
cmp
fcompl
test
xchg
jo
int3
cmpsb
nop
js
mov
lret
sbb
or
inc
stos
scas
je
out
xchg
xchg
stc
addr16
push
sub
pop
fsubrl
xchg
or
pop
testb
sub
inc
addl
add
inc
ss
or
fldcw
jo
xchg
scas
push
sti
push
mov
add
xchg
in
ljmp
int3
and
popa
push
mov
cmpsb
insb
bound
test
in
add
jne
push
mov
imul
arpl
jno
iret
sub
daa
insl
mov
int
enter
jge
push
popf
lods
inc
test
dec
add
mov
jnp
fbld
mov
lcall
imul
push
mov
lods
sbb
push
push
insl
adc
das
dec
scas
add
inc
add
test
push
xchg
cmpsb
dec
pop
cltd
shlb
inc
stc
shll
lods
cmp
loopne
jg
lcall
repz
and
imul
mov
roll
adc
mov
fucom
lods
cmpsl
mov
pop
inc
xor
inc
dec
xor
cmp
jbe
sub
jbe
push
orb
push
or
mov
das
mov
adc
xor
cmpsb
cmp
jle
popf
rcrb
movsb
test
dec
clc
push
les
lcall
mov
inc
jl
sbb
or
sub
jb
hlt
sbb
lahf
les
mov
inc
push
in
inc
add
psubq
mov
cltd
jns
or
xchg
jnp
call
call
push
insl
mov
sbb
rclb
inc
lock
jo
lret
insl
data16
push
nop
xchg
mulb
std
pop
mov
cmp
mov
jl
dec
in
pop
dec
and
insl
add
call
jnp
popa
andb
mov
jle
in
xor
push
test
mov
aam
mov
lock
cmp
adcl
jae
inc
dec
mov
mov
stos
rcrb
cmp
inc
and
movsl
fisttpl
outsb
xchg
dec
fdivs
mov
mov
out
imul
jnp
pop
sbb
inc
lods
jne
mov
push
test
ret
fdivrl
insb
aas
in
lock
push
cld
fninit
sahf
rclb
pop
sbb
sbb
pop
xorl
inc
sbb
decb
ret
nop
lret
xor
test
inc
push
scas
pop
in
mov
pop
imul
cmp
inc
pop
loopne
data16
test
jle
nop
mov
xchg
xchg
faddl
aad
shlb
pop
sub
jecxz
mov
arpl
sbb
cld
dec
jle
inc
mov
and
cmpsl
inc
nop
leave
jns
loop
repnz
rorl
je
sbb
or
sahf
sub
ja
pop
nop
out
push
add
loope
jo
faddl
push
or
push
dec
cmp
xlat
or
pop
push
outsl
movl
scas
xor
lret
enter
jno
push
loope
inc
jp
mov
xchg
outsl
push
xchg
or
inc
push
jno
push
je
out
and
lret
rclb
cs
scas
outsb
inc
dec
mov
rcrb
and
xor
ds
and
sub
add
xchg
incb
push
pop
jno
cmp
push
mov
jl
mov
mov
dec
or
clc
inc
pushf
dec
xchg
add
enter
push
icebp
xlat
push
scas
cld
mov
test
das
mov
pop
dec
jnp
loopne
sbb
cltd
pusha
sub
ret
cmp
pop
and
stc
lea
pusha
ds
mov
scas
and
lcall
inc
xchg
mov
loope
inc
lds
lcall
add
in
adcl
adc
fs
out
call
iret
xchg
fs
cmp
into
divl
jne
mov
test
mov
clc
mov
hlt
rcr
in
mov
and
lods
dec
push
jbe
fisubrl
sbb
adc
mov
sbb
fstpt
repnz
mov
sbb
movsb
or
or
lods
xor
lds
insb
fdivs
push
pop
clc
test
push
inc
ds
fisttpl
nop
add
pop
push
movl
xor
mov
mov
adc
inc
fs
jae
pop
out
xor
sbb
fdivs
lcall
outsl
int3
mov
std
mov
pop
add
imull
movsl
adc
xchg
and
xchg
mov
insl
mov
cmpsl
mov
icebp
pop
sti
mov
xor
push
cld
cmp
dec
clc
test
test
cltd
int3
jno
jg
jge
fwait
xchg
sbb
sub
pushl
xchg
cmpsl
jae
xchg
xchg
in
clc
push
ljmp
mov
adc
stc
lcall
fwait
mov
mov
or
xlat
sarb
ret
mov
testb
sbb
shr
idiv
dec
dec
adc
mov
pushl
sub
xchg
adc
mov
das
jge
imulb
cmp
xor
mov
fimuls
addl
ds
dec
sti
sub
add
test
test
xchg
fstpl
decb
and
loope
ss
add
cltd
in
jae
les
pop
fst
out
or
and
push
pop
dec
pusha
cmp
sbb
pop
bound
sarb
or
test
lret
and
push
dec
add
jno
pop
jp
mov
jnp
sbbb
sbb
push
sub
in
roll
cwtl
pop
clc
mov
xchg
xchg
pop
xchg
jge
rcll
rclb
scas
js
lret
shrl
das
dec
out
lods
pop
sub
in
adc
out
push
fistpll
roll
sahf
mov
inc
or
xor
pop
loopne
jns
jg
inc
xlat
shrb
shrb
imul
inc
fsts
pusha
push
nop
mov
or
adc
cmp
xor
insl
les
jo
in
in
aad
lahf
jmp
pop
xor
xchg
dec
stos
out
test
in
xchg
movsl
mov
xchg
imul
jnp
loope
mov
pop
jb
jecxz
push
xlat
inc
inc
cmp
pop
ss
stos
movsb
int
sbb
pop
add
jmp
adc
and
je
xor
mov
aam
jmp
add
cmp
sub
emms
xchg
pop
pop
jecxz
dec
mov
clc
mov
mov
adcl
in
imul
rcrb
leave
cmp
mov
mov
ficoml
bound
jp
jno
mov
and
ret
sbb
aas
push
xchg
mov
mov
insl
aam
lock
push
mov
ljmp
or
or
sbb
adc
gs
mov
xchg
mov
pop
stc
incb
mov
jmp
arpl
add
xor
in
pop
nop
aad
sbb
mov
rcrb
adc
add
addr16
lods
pop
adc
lods
movsb
addr16
repz
imul
xchg
mov
es
inc
mov
cwtl
sbb
lret
mov
mov
sbb
fs
push
incl
pop
dec
xor
into
xchg
pushf
pushf
and
mov
push
mov
pop
mov
jne
cmpsl
mov
rcrl
push
push
inc
jp
xchg
sbb
ja
fimull
sbb
mov
and
jle
jae
pop
push
insb
and
add
inc
out
mov
inc
add
bound
push
fstps
push
dec
lret
jmp
fdivp
hlt
or
out
xchg
mov
insl
or
insl
fildl
stc
lods
repnz
pop
rclb
addb
mov
dec
or
pop
jno
push
and
mov
dec
pushf
ret
iret
ds
sub
adc
sti
mov
mov
add
test
insl
xchg
and
adc
xchg
insb
mov
adc
jae
out
in
push
push
xchg
cmp
xchg
mov
push
sarl
adc
jae
pop
scas
negb
in
fldt
popf
ret
inc
fistl
inc
aas
mov
xlat
enter
sbb
dec
mov
addr16
ret
sub
je
int3
jge
or
repz
or
fs
popf
adc
and
cmp
lods
mov
jp
push
imul
ret
sub
sub
cmp
daa
in
adc
mov
sbb
pusha
cwtl
negb
sbbl
aaa
shl
outsl
sbb
cmp
adc
push
pop
adc
hlt
pop
xchg
bndstx
je
loope
xor
adc
adcb
add
cmc
in
pop
cwtl
lret
mov
into
out
cmp
in
xlat
mov
mov
add
or
jnp
ficompl
mov
xor
or
test
cs
xchg
sbb
xchg
aad
in
xchg
div
stos
sahf
mov
mov
dec
jnp
shl
xor
or
stc
jb
mov
arpl
mov
adc
pop
insl
xchg
sub
decl
adcl
rol
or
sbb
adc
dec
stos
sbb
xor
push
push
loopne
das
pop
mov
dec
push
lret
adc
test
addr16
in
popf
xchg
push
mov
repnz
scas
mov
push
loop
cmp
fdivl
mov
lret
ljmp
shlb
lods
sti
in
stos
lret
cmp
dec
inc
and
mov
out
data16
nop
inc
adc
xchg
stc
lcall
xchg
dec
and
xchg
stos
add
lcall
inc
cmp
shlb
les
sbb
pop
stos
sarb
rorl
cmp
inc
out
cli
nop
lods
popa
jl
xchg
ret
mov
orb
jae
hlt
ficomps
pop
dec
xor
jb
in
adc
out
repz
in
notl
aam
insl
mov
adc
push
repz
aam
jle
mov
lods
sub
adc
test
mov
jne
mov
cmpsb
cmp
jnp
dec
lret
out
cli
hlt
insl
or
ja
xchg
enter
in
sbb
mov
and
mov
cmc
jae
jle
pop
mov
arpl
shl
bnd
mov
sahf
pop
sub
lods
lock
loope
cmp
and
sbb
sti
outsb
mov
mov
adc
shl
fisttpl
in
or
jae
lods
das
jge
pop
jns
and
ds
push
inc
add
lock
insl
mov
test
jg
int3
into
pop
add
mov
mov
sahf
pop
pop
mov
mov
in
mov
xchg
add
decl
mov
inc
dec
jg
push
test
mov
xlat
cmp
or
ds
das
test
gs
add
mov
and
sbb
test
pop
adc
pop
sahf
push
push
cmc
fldl
clc
inc
jecxz
mov
ja
cmp
ss
dec
cmp
jb
sbb
xchg
cltd
sbb
out
push
in
test
mov
outsw
cmp
jp
push
mov
pop
lahf
or
pop
lcall
outsb
sarl
jle
lret
je
mov
lcall
pop
es
mov
fisubs
adc
inc
push
mov
and
mov
stos
lods
mov
clc
jne
cmp
cmp
outsl
out
test
dec
xor
xchg
pop
fidivl
or
jge
andb
push
icebp
popl
pop
push
imul
orb
pusha
test
in
mov
sub
lods
xchg
and
lret
mov
mov
fwait
scas
fldcw
mov
jp
mov
pop
pop
fdiv
sti
mov
dec
addr16
xor
btc
test
xchg
dec
addr16
lahf
aad
cmp
dec
leave
pop
inc
clc
push
jbe
dec
hlt
pop
test
adc
mov
mov
jo
inc
test
sbb
fs
jp
push
jmp
inc
sbb
sbb
cmp
mov
loopne
mov
and
sti
outsl
test
add
cmpsb
add
fcoml
cmp
fidivs
lea
mov
or
xor
into
imul
push
and
inc
adc
mov
add
nop
push
fsub
push
les
ss
inc
pop
addb
adc
xor
lods
int
movsl
jmp
rclb
push
xchg
int3
xchg
mov
mov
out
scas
pop
fsts
dec
jns
add
mov
xchg
into
mov
sub
test
dec
adc
push
idiv
adc
or
push
leave
adc
imul
loop
sub
js
movlps
int
mov
movsl
inc
bound
lds
daa
mov
or
mov
mov
in
mov
mov
and
insb
xchg
or
mov
cmp
push
pop
cmc
mov
aam
pop
dec
xchg
jnp
sbb
insl
mov
inc
jecxz
scas
leave
lods
push
sbb
rcr
lods
push
movsl
xor
cmpsb
js
je
insb
or
mov
push
cld
cltd
adc
fdiv
pop
push
sbb
out
stos
or
mov
cltd
stos
add
xchg
cs
gs
pop
std
std
ja
add
xorl
dec
movsb
jae
sub
jl
push
mov
dec
sahf
push
fdivl
fcmovnb
inc
mov
xchg
adc
jo
inc
pop
and
ljmp
sahf
sub
bound
dec
sahf
cmp
mov
aam
mov
scas
aad
and
jo
data16
in
sbbb
adc
pusha
or
lods
dec
jp
rcl
or
ljmp
inc
int
mov
gs
cmp
cmpsl
fwait
movsb
scas
xor
jns
gs
pusha
jg
popf
or
out
jbe
insb
mov
jecxz,pt
xor
arpl
popf
cmp
das
ret
and
mov
pop
or
cmp
gs
mov
sub
divl
fisubrl
sub
mov
daa
cld
test
sbb
cmp
pop
in
xchg
mov
add
mov
pop
cmp
enter
pop
stos
jp
addr16
jecxz
sbb
pop
pop
mov
mov
cmc
sub
dec
repnz
lret
mov
repnz
aas
pusha
leave
xor
sub
loopne
jnp
iret
fs
lds
pop
cmp
aas
in
jnp
jmp
pop
fdivrl
add
mov
cmpsl
lahf
jne
lds
je
xchg
pop
dec
mov
jbe
sub
cmp
jne
into
out
add
and
iret
icebp
in
sub
negl
xor
inc
or
jecxz
mov
testl
pop
inc
icebp
aaa
pop
dec
pop
cmpsb
push
test
lret
xchg
out
inc
sbb
sbb
ljmp
mov
inc
stc
cmp
sti
mov
ja
je
daa
push
xchg
push
std
push
fisubrl
pop
jbe
test
idivl
out
and
pop
sbb
mov
jns
mov
enter
scas
sbb
xor
lahf
jnp
inc
insb
inc
cld
jp
leave
fstps
insb
rolb
lds
js
sti
pop
je
imul
hlt
xor
stos
dec
cmc
popa
and
inc
addr16
insl
mov
inc
test
out
imul
cmpsb
jne
jbe
out
xor
sbb
in
addr16
pop
pop
mov
fadds
inc
mul
push
shrb
lret
pop
incb
xchg
xor
xor
inc
add
roll
sti
xor
mov
adc
push
lods
dec
mov
mov
dec
dec
mov
call
pop
loope
lahf
shll
adcb
clc
in
sarl
nop
lahf
stos
mov
mov
aad
shrl
push
push
mov
dec
iret
adc
ss
lods
push
out
inc
in
xchg
popa
lds
xor
cmp
sbb
repz
mov
pop
int
inc
dec
mov
inc
mov
add
mov
xchg
rcrl
mov
out
mov
or
data16
jnp
pop
lret
jle
ja
add
pop
push
or
jmp
imul
sarl
pop
pop
ljmp
or
and
in
xlat
xchg
inc
jns
jg
pop
scas
call
sar
cmc
dec
fs
jns
cmp
push
movsl
and
popa
jb
insb
xchg
lock
inc
lds
out
scas
repz
jno
jg
fistps
cmc
dec
add
cmpsb
mov
dec
shrl
test
std
test
xchg
clc
or
out
add
jne
jnp
adcb
xor
outsl
js
push
lock
inc
inc
inc
xchg
jns
push
shrl
and
mov
sbb
lds
lock
mov
sbb
insl
cmp
xchg
clc
fnstenv
lods
out
inc
movsb
in
lock
sub
jl
xchg
add
dec
arpl
fdivs
call
icebp
xchg
or
cmp
test
pusha
xor
int3
pop
add
and
sti
cmp
repnz
popf
jns
lods
push
stos
ss
ds
sub
cmpsb
decb
bound
gs
xor
mov
ret
aaa
push
fwait
cld
test
and
lret
mov
mov
sbb
add
mov
and
not
sti
pop
dec
cmpsb
ds
movsl
lret
cmp
movsb
out
jbe
data16
loop
and
jecxz
push
leave
jbe
adc
aas
sbb
inc
dec
sbb
hlt
addr16
pop
push
aaa
outsl
pop
xchg
sub
sbb
mov
ret
int3
sbb
fwait
mov
fldcw
mov
lods
insl
and
stc
adcl
mov
xchg
add
lds
fwait
in
loop
negb
pop
mov
mov
fstl
push
add
xchg
lock
icebp
pop
dec
test
pop
add
xor
ljmp
js
scas
mov
out
sarl
push
jp
add
sub
iret
inc
pop
mov
jno
imul
lcall
inc
fisttpll
pop
jle
dec
inc
mov
ret
pop
push
dec
shl
mov
cmp
test
stc
mov
inc
add
or
sub
cmpsl
ret
shll
pop
or
and
popa
mov
lret
cmp
cmp
inc
repnz
mov
into
fimull
arpl
lea
rclb
iret
mov
or
jl
add
xchg
mov
je
inc
fsubrl
and
fwait
dec
jg
push
pop
jnp
xorb
jno
dec
or
aaa
mov
imul
mov
jge
lret
std
fldl
lcall
sbb
jge
jo
and
xchg
lret
or
and
dec
mov
or
mov
jmp
push
cli
push
pusha
dec
xchg
and
mov
mov
cltd
scas
inc
xchg
push
push
mov
std
jl
pop
lret
or
jl
adc
xchg
jp
scas
fsubl
rol
cmp
clc
mov
push
aaa
xchg
adc
and
and
rcrb
jp
xchg
in
hlt
or
scas
push
das
jns
ret
mov
cmp
ja
inc
lret
adc
sbbb
ret
pop
stc
xlat
push
int
pop
fldenv
out
sbb
push
sub
inc
dec
out
add
cli
inc
out
push
mov
inc
imul
lahf
pop
out
aaa
loopne
pop
xchg
jne
sbb
iret
jo
arpl
dec
dec
lcall
test
inc
or
mov
mov
add
add
js
jno
pop
inc
or
sub
repnz
je
push
fstl
pop
cmp
or
dec
lret
loop
pop
je
fdiv
sbb
mov
mov
jnp
pop
jae
pop
ds
add
test
lds
push
xchg
cmp
fisttpll
add
push
mov
dec
insl
std
aas
stc
dec
icebp
adc
in
adc
sbb
or
xchg
ss
mov
pushf
rcr
lods
mov
ljmp
lods
lds
mov
cmovne
pushf
cmove
outsl
sbb
daa
call
fs
push
shl
out
iret
jne
mov
loopne
loop
inc
sbb
xor
lods
and
sbb
pop
xchg
xchg
mov
inc
mov
push
fildl
cmp
push
push
aaa
push
pop
xchg
lock
ljmp
shll
push
lock
cmp
mov
push
add
cmpsb
and
xlat
out
sahf
fwait
int3
push
adc
ds
in
in
xor
lahf
mov
mov
das
xchg
loopne
nop
sub
or
mov
inc
mov
ds
int3
call
testb
push
mov
lods
jb
dec
imul
nop
dec
idivl
push
mov
mov
push
ss
xor
fisubrl
push
mov
sub
pop
movsb
or
sub
mov
xor
mov
lret
or
popa
sbb
lock
mov
mov
ds
das
aaa
sub
push
pop
rcrl
inc
test
ret
inc
mov
mov
ss
add
fstps
mov
and
mov
dec
dec
fstpt
dec
sahf
push
mov
int3
repz
mov
jg
cli
cmp
das
enter
sbb
stos
adc
mov
leave
aad
rorb
mov
clc
add
shr
push
inc
leave
rclb
nop/reserved
pop
loop
pop
jbe
in
les
cmp
dec
jnp
inc
pop
lret
cmp
jg
mov
mov
ja
negl
ljmp
das
imul
ss
out
idivb
jae
test
nop
pop
and
sub
xor
stos
add
icebp
mov
sub
mov
jecxz
outsb
sub
cmp
and
or
cmpsl
cmp
out
fwait
pop
jb
clc
jo
cmp
or
rcrl
add
addr16
daa
enter
dec
mov
ds
or
pop
cmpsl
test
ret
mov
push
mov
mov
inc
mov
or
mov
dec
clc
xchg
mov
add
imull
sub
pop
aas
fwait
in
fcmovbe
jp
mov
push
xchg
fucomi
xor
stos
push
cs
inc
pop
es
dec
std
cmpsl
sbb
dec
or
cltd
mov
daa
sbb
dec
dec
gs
mov
add
lret
call
les
push
loopne
test
idivb
mov
les
mov
adc
and
pop
mov
scas
test
imul
test
push
inc
cltd
insb
mov
xor
add
pop
push
je
xchg
or
dec
lret
cmp
xchg
push
xchg
jl
and
test
popa
push
mov
inc
dec
out
sub
mov
sahf
mov
xor
insb
sbb
ret
mov
test
xchg
dec
rol
sub
ss
add
adcb
push
lods
clc
dec
repz
popa
test
xor
repnz
push
lret
jle
pop
adc
add
pop
iret
imul
aaa
rorl
insl
dec
pop
mov
xchg
popf
mov
sarb
sbb
jb
jo
add
in
push
and
mov
jbe
and
fbstp
fadds
jp
sar
mov
cmp
xchg
xchg
cmp
jno
pop
test
inc
push
mov
xor
push
pop
mov
out
and
lret
lds
inc
aas
xorb
movb
jge
dec
sub
pop
imul
aas
shlb
jecxz
out
adc
push
jecxz
push
mov
sbb
cld
jmp
cmp
gs
movsl
sarb
aaa
cs
pop
decl
movaps
inc
sbb
in
jge
adc
jno
lods
push
addb
in
push
push
mov
add
clc
or
inc
dec
mov
les
mov
loopne
lods
orb
sarb
sbb
mov
xor
pop
stos
push
clc
jmp
mov
arpl
dec
or
cmp
popf
mov
mov
and
daa
loop
dec
mov
sub
jb
pop
push
jmp
jle
sbb
in
jp
movsl
and
sbb
xor
push
arpl
adc
cmp
mov
sub
cld
popa
jle
std
jle
movsb
add
outsb
out
mov
repz
arpl
cmc
push
jns
push
and
int
inc
jg
dec
std
mov
xor
loopne
xor
shrb
pop
std
in
mov
btc
sbb
das
or
ja
push
cmpl
push
jno
jmp
jne
movsb
repz
mov
aaa
aam
adc
addr16
fcoms
and
xor
cli
or
cmp
ja
bound
out
xchg
ret
xchg
jns
fiaddl
cmp
inc
adc
std
test
add
call
cltd
and
or
inc
xchg
outsb
push
xchg
inc
ret
pop
mov
arpl
add
adc
xor
mov
daa
inc
lods
notb
ds
mov
adc
sub
test
and
aaa
dec
loope
negb
cmp
jns
xor
cli
insb
loope
xor
fistl
fisubrs
out
inc
iret
push
pop
dec
faddl
mov
in
jg
xchg
pop
outsl
mov
and
addr16
jo
fwait
cmp
hlt
fcompl
cmp
cmpb
lahf
sbb
mov
cs
mov
or
push
adc
sbb
dec
pop
xchg
dec
int3
dec
pop
sbb
and
jbe
cmp
jle
sub
push
divl
lods
jecxz
scas
insl
int3
stos
es
jle
dec
inc
cltd
jno
aas
repz
mov
popa
dec
out
adc
mov
aad
jmp
add
jnp
jae
inc
pop
rclb
mov
pop
and
jbe
hlt
in
sub
insb
jae
jge
je
ljmp
push
mov
jb
loop
pop
sub
lock
scas
xchg
push
sar
mov
aas
adc
in
into
idivb
jge
jb
daa
or
pop
jmp
ljmp
imul
xor
ds
lods
popf
sbb
dec
fisttpl
mov
fcomi
out
clc
roll
out
test
int
cltd
jecxz
mov
in
loopne
cmp
inc
stos
fwait
sub
pop
imul
cmp
or
jnp
clc
mov
enter
fildl
or
shll
or
mov
shl
pop
inc
roll
mov
dec
xor
enter
repnz
js
pop
and
adc
aad
push
stos
fdivrl
iret
cmpsl
pop
push
enter
mov
rclb
adc
xlat
add
jbe
out
fdivr
pop
pop
add
outsl
push
and
xchg
daa
sbb
ds
sbb
test
test
call
sub
jns
out
push
sub
stos
jo
adc
out
push
movsl
sub
pusha
lock
add
test
lods
call
cmpb
in
loop
mov
push
int3
loopne
jge
in
imul
aaa
cs
add
xchg
inc
aaa
inc
inc
or
inc
std
pop
adc
dec
lret
test
ret
add
adc
adc
daa
mov
xchg
xchg
mov
test
or
int
add
pop
ret
mov
std
mov
outsb
fadd
es
rcr
jge
jp
pusha
js
iret
push
xchg
stos
in
in
out
pop
mov
fs
and
imul
add
dec
cmp
push
aam
xor
popa
xchg
pop
cmp
xchg
gs
mov
popa
and
adc
shll
pop
stos
xlat
cmc
test
ss
mov
in
and
inc
xor
and
jns
cwtl
andb
xor
jae
push
jb
add
outsb
mov
out
xor
add
and
stc
outsb
push
jae
pop
push
add
lret
cs
adc
jle
xchg
sub
xor
or
clc
or
mov
adc
pushf
inc
push
xchg
or
jae
jmp
shl
lret
adcl
xchg
es
pop
cmpsb
mov
sti
add
ss
mov
out
push
xchg
xchg
sub
jge
data16
cmp
jle
popf
fistps
movsb
cwtl
jge
cmpsb
adcl
mov
cmpsb
lret
adc
sub
sbb
into
cvtps2pi
cmpsb
xchg
ljmp
pop
js
aam
dec
outsb
push
mov
stos
push
mov
push
repz
ret
aam
scas
lds
jp
fsub
inc
inc
or
xchg
mov
cwtl
pop
in
sbb
bound
outsl
fstl
pop
mov
and
cld
mov
adc
adc
push
mov
mov
fcomps
ljmp
stc
aam
push
add
fwait
cltd
sub
ljmp
jl
js
sarb
dec
push
mull
xchg
push
add
or
push
sbb
ret
shl
popa
push
sub
mov
sub
in
mov
sub
adc
jmp
push
add
adc
inc
adc
stos
jno
sahf
popf
jp
mov
inc
das
pop
and
add
sub
out
ds
mov
ja
add
pop
adc
jae
out
repz
rcrb
divb
fsubrl
lret
mov
dec
jmp
pop
inc
cltd
dec
shlb
stc
and
aam
test
hlt
sbb
and
cmpsb
mov
mov
ret
mov
cli
dec
mov
jns
or
fyl2xp1
sahf
fwait
and
sbb
test
in
mov
push
xchg
fistpl
flds
xchg
jl
gs
mov
je
adc
adc
pusha
enter
data16
fldenv
clc
int
sarl
lods
inc
test
stos
pop
mov
bound
mov
cs
aas
mov
pop
ds
lret
inc
adc
pop
mov
lds
xchg
jl
xchg
jae
add
sub
pusha
call
arpl
sub
or
leave
fistpll
icebp
aad
out
ss
pop
scas
jle
ret
ljmp
adc
cld
mov
push
mov
sbb
imul
out
scas
mov
adc
ja
dec
aas
and
jecxz
mov
mov
jl
stc
test
jge
jbe
mov
or
gs
popf
arpl
mov
icebp
add
cmp
xor
inc
push
sub
lcall
mov
inc
mov
cmpsb
jns
das
mov
cmp
lret
loope
cmp
aaa
mov
jbe
jecxz
jno
shl
mov
movl
sbb
push
int3
test
inc
icebp
or
das
pop
mov
icebp
outsb
lret
mov
mov
sar
testb
shlb
jmp
and
clc
jns
in
inc
inc
add
inc
push
ror
sub
jmp
mov
push
in
stc
mov
lock
cmpsl
dec
daa
inc
lock
lahf
lret
hlt
es
adc
xor
cltd
fs
push
mov
sar
inc
inc
sub
sub
into
stos
xchg
fisubrl
sub
mov
fcoms
int
push
sbb
cmp
or
sbb
push
fistps
adc
cmp
aas
repz
call
push
jnp
inc
push
mov
dec
inc
mov
out
push
adc
ds
cmova
mov
push
jecxz
aad
scas
or
mov
cmc
or
repz
loope
mov
ss
ror
or
ds
sbbl
arpl
push
jns
cmp
sbb
push
sti
subb
mov
int3
sub
pushf
in
int
pop
fildl
movsl
fsubs
ret
xor
mov
std
fidivs
add
and
jp
mov
dec
cmpsb
and
mov
mov
shl
das
lcall
ror
mov
xor
outsb
sarl
test
jmp
addr16
adc
adc
lret
sti
fsubl
enter
movsl
imul
push
sbb
frstor
pop
fdivrs
lock
push
aad
out
mov
fsubl
jp
xor
mov
sti
iret
lcall
sahf
jp
outsl
sbb
mov
mov
ja
inc
or
and
jne
stos
mov
fwait
mov
add
mov
loope
xchg
lods
add
mov
mov
sarb
in
push
push
std
lret
mov
cmpb
aaa
les
andl
adc
jl
leave
pop
cmp
pop
add
lahf
punpckhdq
push
movsb
int
adc
fimuls
lods
aad
add
or
js
or
adc
sahf
xchg
jo
iret
sbb
mov
add
dec
inc
clc
push
popa
scas
shrb
push
je
popa
jg
outsl
jl
cmc
cld
ret
int3
rcrl
outsl
inc
or
inc
dec
fwait
dec
arpl
sarb
add
jecxz
push
inc
mov
pop
stos
cmp
adc
cmp
add
lahf
sub
sub
pop
in
loope
cwtl
incb
inc
and
das
popa
or
jle
xor
addr16
inc
dec
xorb
lahf
stos
push
loop
loopne
mov
leave
adc
mov
pop
std
scas
push
test
push
adc
push
inc
decb
sub
mov
jo
adcl
fbstp
inc
adc
pop
stc
mov
mov
lock
loope
adc
lahf
rorb
stos
test
lods
sti
in
and
pop
int3
std
bound
ljmp
lds
mov
cld
dec
stc
das
ds
push
adc
xchg
jb
test
pop
cmp
jae
mov
push
pop
aaa
push
aaa
inc
loop
arpl
inc
sarl
fidivrs
sbb
popa
sub
adc
jp
mov
or
daa
xor
idivl
ljmp
or
repnz
push
lcall
xor
sub
loope
int3
ret
jbe
aas
aas
cld
fnsave
xchg
cmpsl
mov
js
mov
fnstenv
add
fbstp
or
sub
int
and
pop
dec
iret
push
imull
roll
dec
pop
pop
sub
aas
cmp
test
aaa
stos
dec
sarl
negb
dec
xor
jae
aam
cmp
fistl
inc
adc
push
outsb
or
divl
stos
arpl
outsl
stos
jge
jnp
pop
test
jge
push
pop
inc
lea
sub
pushf
cmp
cltd
and
jbe
fdivrl
fiaddl
adc
push
xchg
lret
inc
and
leave
mov
jmp
push
cmpsl
fnstenv
sbb
push
sbb
jns
and
jnp
stc
cld
pop
mov
pop
jecxz
xor
adc
adc
mov
sub
test
dec
stc
int
or
data16
test
xor
inc
shl
sub
push
aaa
outsl
clc
xchg
mov
dec
sub
ret
pop
repnz
fs
mov
or
and
or
sub
mov
das
mov
imul
fdivl
dec
ss
pop
int3
cmp
xchg
bound
out
jp
push
xchg
shlb
js
fwait
jl
push
sbb
bound
popw
or
idivb
cs
jge
incb
mov
jge
fnstenv
lods
das
mov
inc
rcll
or
xchg
enter
xchg
scas
gs
aas
push
push
lret
icebp
divl
int3
icebp
test
movsb
popf
gs
xchg
stos
fistpll
out
ja
mov
fucom
inc
gs
mov
mov
cli
sbb
fbld
push
ljmp
pop
aas
adc
add
ss
jge
sbb
push
push
inc
xor
repnz
cld
lods
lods
sbb
jbe
aad
mov
fisubs
out
repz
js
lods
xor
xchg
xor
jno
test
outsb
xchg
pop
pop
lods
lods
lcall
cli
mov
add
ja
stc
aas
ret
jo
mov
pop
cmp
pop
shrl
pop
mov
mov
adc
fstl
mov
out
mov
xchg
andl
es
lret
lahf
dec
mov
cli
scas
mov
mov
xor
das
dec
cld
sub
pop
out
cmp
es
mov
pop
ljmp
jnp
mov
mov
mov
insl
mov
mov
sbb
ds
mov
mov
fidivl
push
ljmp
cmpsl
aas
shll
mov
push
sti
inc
sti
rorl
xor
loopne
sub
fdivrl
jne
adc
push
pop
das
dec
outsb
jnp
cmp
test
add
fwait
out
mov
imul
push
cs
jnp
rcrb
inc
inc
in
jae
lcall
adc
daa
push
loopne
jnp
leave
gs
jmp
cmpsl
es
dec
stos
movsl
out
repz
cmp
xor
hlt
not
mov
mov
aad
shll
push
mull
out
rcll
ficomps
mov
push
negb
cmp
cmpsl
lock
inc
nop
scas
or
fcoms
and
jmp
shrl
mov
jb
add
outsb
int
cmp
add
je
inc
fisubs
mov
dec
push
sarl
fsubrl
cmp
dec
imul
arpl
int3
lahf
ds
ficomps
fwait
andl
repz
jne
addb
insb
sub
xor
out
loope
dec
insb
and
sar
sub
mov
adc
popf
dec
push
cmp
hlt
pop
adc
xchg
mov
notl
scas
aam
add
pop
mov
adc
sub
mov
dec
adc
push
jne
dec
test
adcb
inc
xchg
sub
mov
mov
jnp
stos
mov
jecxz
inc
mov
movsl
dec
add
pop
ljmp
inc
xchg
push
mov
push
mov
pop
add
stc
daa
dec
inc
cld
gs
jno
xor
add
inc
sti
or
pop
mov
or
xchg
add
mov
add
push
mov
add
jmp
xchg
inc
mov
add
mov
dec
pop
in
arpl
pop
add
shlb
add
out
pusha
in
dec
push
mov
jb
enter
xor
cwtl
mov
pop
stos
mov
sti
push
mov
xchg
and
mov
fistpll
es
out
adc
sbb
fisttpl
xor
pop
mov
int
mov
aaa
fidivl
mov
jnp
nop
ss
test
mov
mov
xchg
ljmp
loopne
mov
test
lahf
movups
and
jmp
push
jle
push
popf
push
test
mov
jle
jp
mov
rorl
sub
je
mov
or
lea
stos
pop
adc
scas
mov
mov
lods
add
push
mov
mov
call
xchg
into
in
xchg
pop
call
popf
jg
enter
in
subl
xchg
mov
nop
adc
icebp
push
in
push
scas
inc
dec
jl
sarb
jge
inc
rol
or
arpl
xchg
fs
inc
xchg
pop
into
dec
popa
scas
jl
lret
add
ljmp
and
jbe
mov
dec
imul
repz
pop
or
test
pop
jmp
cmp
mov
pop
push
fists
mov
clc
pop
mov
xlat
mov
push
loop
push
push
pushf
inc
push
add
data16
and
js
xor
xor
ss
repz
ret
pop
pop
add
fists
movsl
xchg
loope
sbbb
data16
insb
popf
mov
push
ljmp
addb
xorb
xchg
movsl
imul
pop
ljmp
test
push
jae
pusha
mov
fdivrs
cwtl
outsl
lods
aad
sub
fdiv
xchg
xchg
mov
mov
push
daa
lret
inc
xchg
sbb
addb
pushf
dec
jecxz
xchg
dec
outsb
and
pop
aad
inc
fs
xor
xor
mov
outsl
adc
aaa
lods
pushf
fnstsw
dec
das
test
cmpsl
loope
filds
ret
or
test
inc
add
cltd
test
pop
icebp
xchg
and
test
scas
jecxz
xor
xchg
dec
ljmp
je
sub
cmp
mov
dec
nop
cmc
sub
pop
rcrl
aas
lea
jns
push
ss
lcall
out
imulb
jmp
mov
add
cmp
xchg
pop
aad
jbe
sarl
mov
js
mov
dec
sub
mov
mov
ret
jmp
scas
sarb
adc
lock
in
mov
mov
std
fwait
push
push
test
rol
or
mov
mov
dec
lret
push
ljmp
push
hlt
scas
fimull
xchg
popa
inc
add
leave
push
sbb
pop
jb
add
cmp
add
cmp
clc
out
xchg
mov
bound
xor
push
mov
add
jbe
call
xor
mov
add
icebp
sarb
or
insl
and
call
fucomp
test
repnz
and
fisttpll
adc
in
push
test
lret
inc
cmc
out
es
push
daa
outsb
les
inc
imul
mov
movsb
mov
push
filds
inc
inc
and
stos
rorl
pop
sahf
push
ja
sbb
mov
push
cmp
test
mov
inc
outsl
sbb
imul
jno
push
jge
popf
sub
or
adc
hlt
pop
lret
add
call
loop
into
cwtl
mov
pop
jbe
test
pop
arpl
repnz
mov
jae
xlat
add
pushf
mov
ret
test
mov
cmp
cmpsl
in
cmp
sbb
es
cmpsb
test
enter
loope
xchg
jg
push
cmp
push
mov
inc
ja
add
mov
fwait
lahf
xorl
les
pop
xchg
xchg
cmp
int
or
push
mov
sarb
jg
insl
ror
push
ljmp
test
xor
dec
and
and
popf
push
xor
inc
push
orl
icebp
add
mov
cwtl
mov
jge
adc
and
inc
xor
hlt
aas
fnstcw
ret
out
xor
mov
xor
je
aas
pop
pusha
out
sub
test
popf
dec
and
dec
adc
data16
adc
ficoml
inc
mov
push
xor
jmp
push
cmpb
cli
sub
xor
js
xchg
xor
out
les
sbbl
jmp
movsb
movsb
loop
sub
or
jns
add
mov
cld
cld
cmp
xchg
sub
and
in
push
mov
or
mov
cmp
inc
sub
popa
pushf
dec
cltd
inc
fisubs
pop
xor
fists
xor
add
mov
gs
das
push
lds
and
and
xchg
inc
sbb
mov
mov
adc
mov
movsb
test
xor
add
sbb
stos
inc
pusha
subl
test
xchg
xlat
test
mov
mov
or
loopne
mov
xlat
out
lahf
stc
shlb
sbb
cld
call
xor
push
arpl
je
test
jo
lds
xor
xchg
adc
aaa
mov
mov
xchg
mov
pop
or
out
test
mov
inc
imul
pop
push
nop
insb
icebp
ret
or
int
xor
call
mov
outsl
leave
stos
mov
mov
fcomp
loope
lods
repnz
mov
sbb
imul
test
xchg
jae
insl
rolb
int3
orl
shll
xor
insb
ss
in
scas
and
jle
mov
or
mulb
in
imul
call
in
push
aaa
or
xchg
lea
cmpsb
jo
mov
xchg
push
push
xor
outsb
aad
mov
dec
aas
mov
lods
jg
mov
mov
dec
dec
mov
outsb
inc
subl
ljmp
xlat
daa
sub
sti
scas
es
sahf
sub
unpcklps
pop
scas
inc
adcb
nop
dec
divb
sbbl
jmp
mov
sub
arpl
sarl
imul
xor
out
imul
stos
clc
dec
or
add
stc
lret
shlb
jo
orl
fmul
xchg
fildl
mov
xchg
int
negl
mov
stos
pop
cwtl
xor
lcall
mov
mov
leave
xor
test
pushf
fmuls
and
adc
xchg
lock
jl
and
out
les
push
fcompl
add
push
inc
loopne
jae
xor
push
pop
test
mov
xor
loop
sbb
mov
subl
cltd
mov
in
sahf
sbb
push
loop
jmp
pop
call
inc
xor
cli
loopne
nop
movsl
xorb
mov
in
iret
cmp
shlb
insl
bound
fidivl
cmp
rol
sbb
mov
rcl
mov
jnp
js
lods
cmc
add
movsb
sbb
enter
lcall
or
mov
sbb
mov
iret
or
rcrb
fisttpl
add
mov
fisttps
imul
mov
pushf
gs
mov
loope
shlb
repz
add
xor
hlt
in
imul
cmp
mov
pushf
data16
arpl
xlat
mov
fsubrs
inc
insl
lea
mov
insb
xor
ljmp
xchg
cmp
and
xchg
add
sarb
es
jl
sahf
out
rcr
jmp
bound
push
icebp
push
jne
adc
loop
jp
add
xlat
dec
push
aas
cltd
push
imul
and
loope
cwtl
ljmp
fwait
jle
inc
mov
jmp
sarb
int
push
pop
xor
scas
mov
ljmp
or
inc
and
mulb
les
pop
mov
and
out
pusha
lods
lds
push
hlt
cmp
ss
mov
dec
xor
adc
sbb
aam
ret
xor
hlt
sub
adc
sbb
xchg
dec
iret
sub
dec
les
addr16
dec
imul
lret
cmp
fstl
and
pop
inc
sti
clc
jmp
dec
dec
test
not
sbb
setnp
test
movsl
notb
outsl
fistpll
dec
dec
inc
cwtl
add
push
in
jmp
xchg
and
pop
pop
or
and
cmpb
push
cmp
rclb
test
test
rorb
cmpl
adc
xor
loopne
xor
xchg
and
push
aaa
popf
popf
xor
cmc
ret
xorl
cmpsl
gs
lds
into
or
les
xchg
cmp
loopne
sarl
push
shll
movsl
lock
arpl
inc
inc
push
test
aam
pop
lcall
sahf
add
out
nop
xor
stos
aam
scas
cmp
ss
jnp,pn
pop
das
push
xchg
jno
sub
pop
mov
jmp
andl
mul
stos
dec
push
sub
enter
sub
fisubrl
add
mov
push
sbb
popl
and
jbe
push
push
jle
mov
sbb
stos
xor
jmp
dec
cmpsb
push
les
mov
xor
jb
jae
inc
cld
mov
popf
inc
sti
scas
jbe
rcrl
xchg
out
sarl
sub
pop
lahf
or
push
dec
pop
cmp
push
fadd
roll
push
and
scas
dec
jnp
pop
push
lea
inc
scas
lods
mov
enter
outsl
push
sub
xchg
lahf
and
cltd
push
into
aad
inc
inc
sub
cmp
mov
mov
bound
stos
or
dec
cwtl
sahf
pop
jnp
inc
add
mov
jne
mov
cld
mov
rorb
in
mov
sub
mov
dec
jae
lods
mov
dec
jg
inc
hlt
mov
push
xchg
xor
cmp
mov
test
pop
insl
cmp
sbb
leave
adc
sub
dec
sarl
pop
pop
push
sub
jle
fisubs
jo
and
jg
data16
inc
push
nop
sub
add
cmpsl
or
jns
cltd
dec
jne
pop
xor
dec
incb
xchg
jl
adc
stos
pop
cld
push
fisubs
dec
pop
push
fiadds
pushf
js
loope
dec
add
insb
push
xchg
mov
jne
or
add
xor
add
cmp
mov
mov
add
pop
jl
adc
lea
dec
js
ret
arpl
mov
add
lea
ja
jge
mov
ss
fwait
xchg
je
fldt
cmp
sbb
movsl
cmpl
pop
and
xchg
ds
dec
ret
sub
sub
cmp
push
push
notl
jl
dec
inc
sub
xchg
cwtl
scas
out
push
loope
clc
in
mov
jnp
idiv
pop
dec
imul
lds
loop
dec
stc
mov
mov
ss
adc
jb
mov
adc
stos
xchg
cwtl
lea
je
add
mov
jmp
inc
call
xchg
mov
scas
sub
cli
data16
add
aas
mov
add
xchg
call
dec
jae
stos
out
push
std
fmuls
mov
adc
mov
repnz
mov
mov
scas
outsb
xor
inc
and
mov
xchg
jg
pop
mov
push
xlat
in
stc
xor
dec
dec
mul
xor
mov
pop
push
insl
adc
rol
jg
test
inc
jmp
in
aaa
xchg
mov
repnz
pushf
fidivs
movsl
pop
dec
in
pop
push
adc
sahf
jl
pop
lea
xchg
push
mov
cwtl
xchg
mov
inc
leave
or
test
mov
out
stc
push
fldenv
inc
mov
es
imul
movsb
imul
mov
mov
insb
mov
and
xchg
push
add
sbb
adc
inc
pop
add
test
shrl
jmp
mov
jl
mov
mov
pop
push
mov
adc
sarl
and
push
imul
pop
push
imul
cmp
cli
imul
insb
in
xor
lods
sub
or
and
es
jae
sub
pop
cmpsb
test
jmp
push
aad
out
iret
sub
lret
or
insl
jne
addr16
push
dec
or
ficoms
or
and
mov
push
test
fldenv
push
daa
xlat
aaa
pop
dec
pop
fmull
repz
fistpl
inc
xchg
stos
call
dec
push
mov
xchg
filds
xchg
cmc
adc
pushf
add
call
sub
and
cld
pop
scas
jge
dec
aad
clc
outsb
pop
dec
mov
insl
in
adc
and
fisubrl
ja
push
scas
cmpsb
push
mov
dec
loope
push
ds
xor
rorb
mov
add
inc
xor
out
out
ss
dec
inc
sbb
lds
or
dec
rclb
sub
cs
cmpsb
sbb
inc
cli
popw
inc
das
hlt
cmp
es
or
cmp
xlat
aam
mov
cmpsb
dec
xchg
xor
mov
pushf
adc
dec
mov
int
ja
insl
jo
or
int3
xlat
or
sbb
repz
sbb
inc
sub
or
test
push
shr
lock
sbb
sbb
xchg
adc
or
ret
cmp
dec
stc
add
sbb
push
arpl
mov
adc
sub
sbb
bound
adc
hlt
inc
jmp
xorb
je
xchg
daa
popa
xchg
je
jne
pop
mov
mov
clc
mov
pushf
sbb
sub
pop
mov
pusha
xor
jecxz
push
mov
in
out
icebp
sub
addb
mov
and
or
fsubs
les
subb
fcoml
jg
jp
test
pop
xor
sti
fcomi
mov
clc
jg
shll
xchg
ss
sub
popa
imul
mov
and
inc
sub
and
inc
loopne
dec
and
cwtl
sbb
sbb
push
mov
xlat
mov
sar
jg
pop
lods
loope
ljmp
mov
jg
test
lea
cmpsl
ret
push
enter
push
fsubs
push
aas
and
push
addr16
popa
xor
js
xchg
leave
repz
jbe
aad
mov
mov
aam
jp
lcall
inc
pop
test
and
std
mov
xor
addr16
lea
int
mov
je
test
imulb
push
aam
cmp
imul
out
fsubrl
stos
loopne
lock
mov
push
mov
imul
xchg
pop
push
aad
mov
mov
loope
jg
std
or
cmpsl
cmc
cmp
sar
pop
mov
push
pop
and
gs
test
push
mov
fmuls
add
stos
pop
jg
and
xor
add
imul
pop
sub
lods
pop
jmp
xchg
push
icebp
xor
and
stc
mov
shl
pop
clc
call
lods
mov
adc
sbb
add
pop
xchg
iret
sub
push
aad
data16
xchg
pushf
cs
pop
jne
jg
aaa
into
dec
jbe
mov
or
and
out
leave
scas
jno
dec
je
or
stos
mov
mov
mov
push
adc
and
lret
push
add
lods
mov
inc
xor
mov
sti
dec
pop
adc
cmp
cltd
fistl
nop
cmp
addr16
jns
and
adc
jle
pushf
lcall
ss
cmpsl
xchg
inc
mov
mov
andb
dec
dec
add
lock
mov
or
out
xlat
inc
jp
jne
rclb
mov
mov
pushf
filds
fs
int
dec
adc
in
sbb
lret
sti
cli
and
dec
mov
imul
icebp
inc
mov
ds
add
mov
ja
push
jnp
inc
mov
sub
and
test
pop
sub
adc
jae
fwait
dec
into
dec
imul
mov
pop
test
pushf
mov
pop
cltd
scas
cld
push
add
pop
add
cmc
and
pop
adc
cmp
adc
xchg
jns
leave
add
mov
xor
push
mov
jno
loope
mov
push
dec
lea
mov
cmp
test
mov
pop
inc
or
ret
loopne
xchg
add
jmp
pop
pop
fistps
gs
insb
cmp
fsubl
jmp
sbb
aaa
push
addb
lret
insl
and
and
push
mov
test
adc
mov
add
xchg
sub
push
dec
bound
mov
pop
test
dec
and
into
cld
out
mov
adc
jb
adc
cmp
movsb
inc
je
lock
mov
pop
push
jg
inc
xchg
scas
push
sub
sbb
clc
xor
adc
add
stc
pusha
faddl
cltd
xor
sub
cmp
push
adc
pop
lret
bound
or
cmc
sti
lods
mov
pop
jmp
cli
xchg
popa
loope
js
mov
sbb
jns
xchg
popf
das
std
dec
jae
movsb
jns
insl
mov
sarb
aas
mov
xchg
adc
faddl
shrb
dec
sub
mov
out
addr16
iret
inc
xchg
lea
stos
es
lds
shll
outsl
adc
and
sbb
mov
mov
imul
pop
arpl
test
lea
sub
mov
mov
bound
idivl
inc
fdiv
jl
sti
ret
loopne
stos
scas
sar
jge
ret
cmp
pop
inc
mov
xchg
ret
fsubrs
xchg
and
bound
das
mov
jnp
push
mov
mov
mov
mov
icebp
jg
xchg
xchg
inc
mov
add
adc
push
shrb
ds
pop
pop
fidivrs
daa
popa
movsl
lock
and
dec
dec
dec
test
push
arpl
mov
push
dec
mov
call
xor
fbstp
cmpsl
mov
je
test
pop
mov
add
enter
or
and
jbe
mov
out
xor
pop
or
and
jge
out
cmp
adc
rcl
out
adc
test
aam
stos
push
into
testb
cld
xchg
pop
cltd
out
mov
cld
rcll
cltd
xchg
mov
vshufpd
popa
xlat
or
xchg
inc
test
aaa
jae
inc
xor
mov
or
cmp
pop
pop
pop
pop
and
je
outsl
cmpsl
push
and
jmp
mov
adc
mov
push
lea
orl
xor
cmpl
cwtl
test
or
outsl
or
mov
inc
push
loopne
fwait
pop
cmp
je
mov
arpl
jno,pt
pop
lcall
lret
inc
out
inc
insb
or
cmp
push
out
or
rcrb
std
aam
mov
cltd
xor
mov
out
cs
neg
and
scas
mov
lcall
add
dec
popa
fcmovnu
mov
fsub
rorl
inc
push
and
sub
lcall
cmp
pop
fcoml
sahf
push
adc
jae
jbe
and
insb
cmpsl
pop
cli
jmp
stos
fwait
xchg
in
pop
repnz
mov
cmp
popa
push
lock
daa
xor
insl
adc
lahf
push
dec
adc
mov
pop
out
bswap
or
cmc
sbb
aam
mov
leave
lods
aad
mov
adc
jns
push
jbe
adc
jnp
scas
mov
rol
aam
mov
popf
leave
xor
or
and
jbe
stc
jb
test
aad
cmp
inc
in
bound
inc
jns
push
pushf
add
mov
xchg
loop
in
out
or
xchg
popl
data16
mov
cltd
in
mov
fisubl
inc
dec
out
sub
xchg
aas
sahf
jnp
jne
outsb
and
mov
lods
int3
imul
sbb
and
mov
js
test
out
and
add
xlat
scas
addb
or
add
cmp
in
add
std
ja
dec
pushf
outsb
dec
sub
repz
mov
lret
inc
ljmp
orb
jl
imul
fs
mov
cltd
push
xchg
pop
pop
call
shrl
cli
or
fdiv
insl
arpl
mov
popf
in
push
xor
fdivp
xchg
test
pop
in
lods
inc
aam
xor
push
jp
or
call
push
inc
fiaddl
pusha
mov
cmpsl
mov
cs
xor
jg
or
nop
jb
fcmovu
jecxz
insl
pop
aam
push
mov
jns
adc
ror
mov
scas
in
stos
adc
sbb
mov
xchg
pusha
repnz
repz
push
cmp
push
push
pop
out
push
std
cmp
dec
sbb
dec
mov
add
cmp
fildll
jmp
movsl
stos
test
dec
and
das
xor
add
call
pop
jl
and
push
mov
and
and
pop
sbb
mov
push
cmp
int3
sbb
adc
nop
in
mov
xchg
cmp
pop
push
lods
aam
sarb
into
push
jle
outsb
icebp
imul
fsubl
jmp
popf
jmp
mul
dec
and
pushl
add
mov
scas
leave
idivl
imul
xor
inc
lods
lods
mov
cmc
out
or
jecxz
daa
insb
andb
mov
xchg
sub
nop
fdivl
xchg
push
xor
shr
xor
sbb
mov
push
mov
jp
cmc
sbb
aas
lds
push
fld
repz
mov
testb
bound
sbb
je
mov
movsb
popa
popf
ss
rcl
sub
jecxz
jbe
leave
mov
sub
shll
sti
push
decb
ja
lea
jle
aam
mov
jae
sbb
adc
test
mov
rdpmc
mov
dec
lret
inc
xor
inc
add
pop
fadd
adc
inc
bound
and
xchg
inc
dec
or
enter
push
adcl
pushl
mov
add
cmp
ss
mov
fwait
pop
and
sub
cmp
sti
sub
mov
sub
fdivrs
sbb
sahf
or
shl
bound
fstpl
mov
mov
xor
fnstenv
hlt
adc
dec
dec
ja
sbb
lret
stc
push
insl
mov
movsb
sbb
insb
and
cmc
jno
dec
in
mov
pop
scas
jmp
ret
fucomi
xchg
add
mov
add
jmp
stos
cmp
sub
pop
fmul
pop
and
es
inc
cli
adc
push
stc
jno
pop
sbb
push
xchg
jmp
mov
pop
sbb
jnp
test
cmp
sbb
fidivs
sbb
and
pop
fisttpll
out
mov
adc
add
dec
aaa
lahf
bound
and
adc
jmp
mov
pop
xchg
lods
fnsave
push
mov
xor
jmp
in
add
out
cmp
mov
out
stos
lods
sub
adc
fisttpll
movsb
mov
adc
popf
jecxz
sbb
test
arpl
push
imul
jmp
dec
mov
icebp
rcrb
xlat
or
jns
cmp
xorb
jne
in
mov
mov
push
mov
enter
xorl
mov
fnstcw
lods
sub
sbb
push
push
fidivrl
out
pop
fisubl
and
inc
pop
cwtl
jns
loopne
or
jo
daa
add
test
repz
cmpsl
ja
cmp
int
dec
sub
cld
or
push
andl
rcrb
loop
push
enter
sbb
addb
mov
stos
dec
cld
pop
icebp
push
fwait
lret
jecxz
aaa
pop
adc
xchg
dec
push
lock
in
cld
mov
or
xchg
in
inc
jno
or
rep
sub
cmp
jecxz
lahf
mov
roll
fisubrl
cmpsb
mov
call
test
push
shrl
inc
cwtl
add
xchg
mov
sbbl
aad
jecxz
loop
add
push
sub
jnp
jne
pop
iret
xor
ds
push
push
jno
add
cmp
pop
mov
dec
jb
in
jo
dec
xchg
and
xchg
push
push
out
sbb
cli
sub
mov
mov
incb
jl
push
ss
lcall
cwtl
push
adc
pop
cmpsl
pusha
push
jl
and
and
andb
xor
sbb
jl
vrcpps
lods
outsl
sbb
int
cli
cmp
sahf
loopne
sub
dec
in
into
mov
push
jl
adc
fisubrs
fsts
push
xchg
js
jmp
ja
push
push
sub
cmc
shlb
or
push
dec
jmp
push
mov
add
mov
mov
xor
mov
xor
mov
mov
push
or
mov
cmp
add
jg
inc
xchg
loope
adc
dec
test
and
mov
sbb
pop
bound
mov
filds
test
test
add
push
mov
ret
xchg
into
xor
hlt
jl
mov
mov
mov
repz
push
mov
stc
dec
insl
sub
fldt
mov
sbb
adc
cmp
outsl
inc
rolb
pop
js
jecxz
adc
fidivrl
cld
fnstcw
lods
push
into
stos
ss
pop
aam
mov
sub
movsb
popf
jbe
je
jge
es
jl
jno
cs
pop
int
cmp
pushf
in
push
mov
cmp
outsl
push
les
push
lods
mov
dec
mov
jb
repnz
aas
mov
add
inc
xchg
ret
push
xchg
dec
div
into
jp
sbb
imul
test
clc
mov
sahf
sbb
xchg
sbb
sbb
adc
idiv
sbb
jmp
lahf
lock
pop
mov
mov
sbbb
mov
jg
push
testl
push
lret
in
outsb
ficoms
inc
hlt
pusha
adc
aam
mov
fst
sbb
or
ret
in
ljmp
lea
sbb
aam
sub
xchg
lret
xchg
xchg
aam
je
mov
pop
add
hlt
inc
andl
xor
das
xchg
fs
jne
fs
xchg
push
and
fcmovnb
mov
mov
fists
mov
jae
mov
insl
cmp
xchg
adc
mov
lret
call
enter
addb
xor
lcall
shlb
xor
fisubrl
feni(8087
push
scas
add
xchg
lret
in
jb
test
lret
xchg
inc
mov
loope
stc
mov
div
mov
imul
push
xlat
or
test
scas
inc
pop
repz
fsts
in
mov
outsl
xor
push
insl
and
sbb
sbb
call
push
cmpsb
shrl
sbb
and
mov
into
mov
jbe
ror
imul
fcoms
call
aam
popf
add
mov
jns
push
popa
int
or
mov
pop
mov
jle
dec
jle
jmp
bound
add
jp
lret
xor
mov
and
in
mov
jle
xor
mov
inc
pop
dec
jns
shll
movsb
jecxz
popf
cmp
sbb
sti
pop
sbb
and
fmul
lock
hlt
mov
fnclex
push
or
fiadds
xor
sbb
xor
xchg
cmpb
xchg
push
and
or
jno
xor
pop
push
jle
fisttpl
int3
nop
addr16
mov
dec
out
mov
or
dec
push
cld
cltd
cmp
and
pand
pextrw
dec
ja
dec
xchg
movntq
out
fcmove
pop
jae
sub
push
clc
ljmp
mov
xchg
inc
mov
ds
jae
scas
lahf
nop
lods
add
rclb
scas
mov
imul
push
decb
dec
adc
fisubrl
out
rorl
dec
stc
test
sahf
jle
xor
movsb
add
dec
in
xor
lret
sbb
mov
jns
adc
push
imul
xor
test
mov
dec
mov
add
lock
adc
sbb
int
outsb
popf
and
lahf
add
xchg
fiaddl
inc
add
scas
repnz
enter
lock
sti
or
loopne
scas
jecxz
call
xchg
std
jne
test
cwtl
loop
leave
push
pop
stos
pop
in
loopne
push
hlt
cmpsb
adcl
inc
mov
dec
push
bound
and
addb
or
jp
sti
loope
out
mov
jmp
cmp
mov
and
inc
lock
pop
rolb
cmp
ds
mov
lock
adcl
insb
push
popa
les
lds
xchg
sbb
loope
adc
push
push
sub
or
push
lahf
aas
sub
test
mov
cli
sbb
out
cli
pop
pushf
add
sbb
movsb
into
incb
jns
inc
sub
in
dec
cmpsl
mov
inc
and
sbb
lds
into
pop
out
pop
into
rclb
jae
cvtps2pi
rcll
pcmpgtb
inc
jge
ja
lods
jnp
es
scas
jo
ret
jl
mov
or
xacquire
push
jb
shll
je
push
mov
push
cmp
shl
mov
mov
sbb
dec
jle
cmpsb
pop
pop
in
insb
sbb
or
fists
lds
sar
xchg
mov
inc
mov
xor
fs
and
lret
incb
add
push
xchg
mull
adc
inc
jne
adc
ja
jecxz
aam
pop
faddp
mov
xor
mov
fisttpl
xor
fstpl
stc
ret
xchg
jns
jno
fbld
je
mov
sahf
pushf
out
sbb
mov
jno
mov
push
insl
push
push
jbe
adc
sbbb
mov
sub
repnz
imul
cltd
cmp
fcmovne
jmp
fwait
jmp
mov
loope
inc
test
in
icebp
aaa
imul
cltd
mov
jo
inc
bound
mov
mov
out
mov
push
push
into
fistpll
xchg
or
or
mov
or
and
xlat
std
mov
add
push
add
inc
aas
mov
fwait
ss
push
push
roll
int3
pop
lods
xor
xor
out
mov
mov
lret
inc
les
jo
dec
ljmp
xlat
imul
cld
addr16
adc
mov
sbb
cld
fwait
push
and
lods
aam
add
test
cmp
inc
inc
movsb
addb
fsubrp
sub
and
fnstenv
inc
push
insl
mov
pusha
dec
sbb
lahf
sbb
ljmp
into
mov
jo
inc
inc
lcall
jbe
out
imul
or
inc
sub
jne
ficompl
fdivrl
mov
cmpsb
or
sub
aaa
cld
rcr
leave
enter
mov
and
jle
es
mov
dec
pop
icebp
iret
addl
aad
lea
out
and
mov
xchg
dec
mov
cmp
push
cld
or
dec
loopne
popf
int
insb
xor
and
fwait
orb
xlat
clc
inc
xor
cmp
into
jge
ret
in
leave
pop
or
fisttpll
cmp
fisttpl
inc
ljmp
dec
xor
aad
or
pop
stos
dec
popa
sbb
jns
in
test
cmp
push
xor
adc
push
ror
mov
adcl
and
movsb
jo
mov
inc
cmp
enter
idivb
out
mov
repnz
mov
call
aam
jp
sub
subb
add
testl
stos
jo
mov
ret
stos
sbb
rcrl
cmpsb
lods
cmp
loop
pop
mov
or
sub
sub
inc
ljmp
push
stos
xchg
inc
outsb
and
ja
cmp
cltd
mov
fsts
movsb
mov
jbe
cmp
iret
jae
push
in
les
dec
add
rcrb
adc
inc
in
insl
pop
push
mov
sbb
and
or
add
mov
sar
fnstsw
pop
mov
andb
popf
add
xchg
cmpsb
daa
and
addb
div
and
dec
xor
cld
imul
mov
sub
in
dec
icebp
jae
dec
pop
iret
mov
push
sahf
sbb
js
aad
hlt
add
inc
add
xchg
sbbl
adc
jnp
jo
cmpsl
aaa
lret
mov
in
push
cltd
push
jnp
bound
enter
negl
test
cmp
call
cmpsl
mov
pusha
add
inc
lahf
fstpt
popa
in
nopl
jle
xlat
xchg
sarl
or
push
jo
mov
lret
lods
divps
add
mov
or
dec
nop
daa
fldcw
fcmovnbe
pop
lahf
jns
lahf
repnz
cwtl
std
mov
imul
test
cmp
jge
and
test
and
das
fdivl
loop
lahf
inc
testl
or
out
cmp
lahf
rcl
mov
add
jnp
cmp
mov
inc
jge
and
mov
push
popa
fcompl
in
or
ret
std
fdivrs
xchg
ljmp
cltd
cmpsb
sahf
imul
lahf
dec
cmc
dec
push
nop
pop
and
aaa
add
adc
out
jg
inc
nop
xor
sbb
jno
cmp
push
sub
stos
adc
add
sahf
insb
mov
jnp
bound
jne
test
das
dec
repnz
test
adc
fcmovnu
pop
loop
pushf
jle
xchg
das
add
test
hlt
js
xchg
shlb
popa
out
cmp
in
mov
pop
ja
dec
dec
jns
or
push
xchg
arpl
cmp
dec
or
ds
jb
jb
shll
push
dec
jge
mov
cs
dec
pop
jge
cmpsb
add
rolb
mov
sbb
decl
movsl
mov
arpl
movsb
inc
scas
imul
push
xor
or
adc
dec
out
inc
xor
add
xlat
mov
cmp
and
pop
add
fistl
daa
inc
adc
jns
cld
xchg
sub
call
dec
in
in
dec
fldcw
in
dec
dec
shrb
pop
fwait
lcall
lods
movntq
ret
inc
mov
scas
mov
mov
cmp
push
fstpl
daa
sbb
enter
sbb
xlat
scas
jle
cmpsb
pop
jae
sub
cmp
sbb
mov
mov
push
and
pop
mov
xor
repz
imul
fsubs
test
pop
les
push
out
push
cmp
int3
sub
cmp
and
push
add
pop
push
push
out
les
in
and
push
imul
sbb
loope
mov
cmp
scas
loope
cmc
mov
data16
ret
xor
mov
mov
call
divb
fwait
mov
inc
cmp
incl
mov
leave
push
std
xchg
xor
fistps
das
js
lds
push
mov
rol
addr16
outsl
add
pop
clc
iret
jge
inc
xchg
dec
and
rcl
aas
loopne
jl
popa
dec
xchg
loopne
mov
inc
inc
insb
adc
sub
pushf
popf
or
mov
xchg
ljmp
xor
add
fs
add
sarb
inc
and
jl
push
or
mov
lods
sbb
idiv
aas
push
xchg
or
movsl
in
xchg
push
jp
popa
popf
lcall
xor
stc
int3
and
sti
mov
push
loopne
repz
mov
sbb
nop
xchg
mov
mov
sub
jge,pn
mov
add
adc
sbb
std
lds
movsb
cs
push
icebp
sahf
cmp
testb
movsb
cmp
push
shlb
sub
mov
cmpsl
sbbb
jnp
pop
pop
pop
shr
sub
sub
xorb
or
es
and
add
jns
addr16
lcall
xchg
push
mov
pushf
fwait
shlb
cmp
mov
cmp
insl
mov
imul
inc
repz
cld
dec
lods
jle
pop
pop
das
push
pop
mov
insb
dec
testl
or
std
push
shl
ss
decl
add
dec
pushf
xchg
xor
cmp
push
je
xchg
notb
jp
add
arpl
data16
outsb
xchg
shlb
imul
jle
outsl
lock
add
in
dec
notl
jecxz
mov
lods
aas
dec
inc
xchg
jo
inc
sbbb
and
ljmp
je
mov
add
mov
clc
or
or
into
sarb
repz
and
fiadds
cmp
outsl
inc
add
in
int
loopew
shrl
jo
gs
add
add
mov
fdivl
dec
repnz
mov
xchg
cli
pop
and
sbb
cmp
lret
scas
xlat
mov
mov
pop
les
fsts
cmpsl
loopne
popf
js
shll
jb
ret
test
sub
mov
cmp
repnz
clc
xchg
adc
leave
xor
fstpl
pop
xchg
adc
stos
sub
out
negl
ja
cmp
or
into
je
xchg
inc
jge
inc
pop
scas
push
xchg
xor
fiadds
xchg
popf
fcos
enter
shrb
out
addr16
push
jl
mov
in
adc
xchg
out
sub
daa
pop
mov
sbb
pop
mov
setl
loopne
add
fwait
xor
push
fcoms
push
test
pop
add
ljmp
sbb
lock
inc
out
xchg
into
mov
inc
xchg
cmp
inc
mov
or
mov
jnp
mov
mov
inc
mov
lcall
add
push
ss
movsb
or
jecxz
cmp
dec
sahf
sahf
jae
imul
adc
jmp
icebp
lock
mov
sti
lahf
daa
jnp
mov
decb
repnz
repz
sbb
addr16
fstl
or
mov
shll
sbb
push
xchg
cmp
sahf
lea
jns
cs
lret
jp
out
dec
adc
sub
into
test
cld
pop
gs
sub
stos
sub
scas
out
jg
iret
orl
push
adc
dec
cmp
fsub
xor
pop
push
inc
mov
xor
sbb
popa
dec
xchg
sbb
push
and
stc
lahf
lcall
inc
xchg
sbb
ss
fisubs
inc
jl
shlb
cwtl
xchg
push
lea
jne
ret
mov
es
xchg
sbb
inc
jns
ljmp
or
mull
test
fmuls
cli
loope
push
sub
adc
add
xor
mov
xlat
test
add
inc
mov
enter
sub
out
inc
call
movsl
mov
mov
data16
insl
cli
lahf
aas
ret
dec
insb
add
or
and
out
sbb
inc
dec
int3
mov
sub
rcll
xchg
popf
cld
jns
mov
mov
aaa
jno
stos
xor
xlat
int
rcl
ljmp
or
push
mov
outsb
adc
add
lret
adc
mov
pusha
sbb
lods
hlt
mov
inc
add
jp
aas
in
inc
fistl
lea
push
push
testb
stos
lcall
fists
xor
gs
pop
pop
xchg
jo
sub
test
es
mov
xor
fistpl
out
sbbl
xor
ret
mov
testl
inc
mov
and
in
cli
popf
inc
dec
jne
std
fldcw
ljmp
mov
mov
mov
gs
adcb
orl
and
push
sub
pushf
dec
pop
pop
outsl
and
adc
dec
mov
dec
fnstsw
into
jae
call
add
mov
leave
add
imul
lret
les
lods
std
mov
loop
adc
xor
lock
pop
ja
aas
imul
push
test
cltd
addr16
push
std
stos
jno
or
dec
jo
pop
push
sahf
adc
mov
adc
inc
dec
push
pop
addr16
add
sbb
jnp
sbb
xor
xchg
shl
icebp
xor
pop
push
jge
inc
sahf
ss
pop
or
mov
mov
rclb
loope
pop
lahf
cmpsl
ret
xor
bound
inc
sub
adc
mov
daa
fisttpll
adc
loop
movsb
in
rolb
mov
xor
dec
loope
dec
lcall
mov
mov
adc
int3
mov
outsb
mov
inc
jp
pop
bound
mov
lods
sbb
and
xor
xchg
lds
sbb
shll
hlt
stos
pop
or
sub
insb
fldenv
lock
scas
adc
mov
repz
frstor
jmp
jecxz
or
inc
filds
aas
stc
mov
in
gs
jge
les
out
loopne
imul
subl
addr16
lahf
lcall
aad
ror
cmp
cld
shrl
imul
jle
icebp
mov
adcl
jbe
je
fs
mov
xchg
insb
scas
jne
enter
xor
push
sahf
pop
test
pop
into
mov
dec
test
cltd
stos
int3
lock
cmpsl
xor
mov
scas
dec
movsl
add
push
xchg
test
inc
pop
pop
outsb
imul
cmp
out
jbe
xor
push
inc
shll
xchg
sahf
loope
sti
fcmovu
dec
in
pop
and
jne
leave
pushf
pushf
in
std
out
xchg
scas
push
cmpsl
pusha
mov
fstpl
mov
jmp
aad
sti
test
adc
xchg
push
cmc
sbb
cmp
or
mov
mov
xor
pop
sub
test
xchg
jl,pn
loop
add
test
mov
mov
loope
stc
cmpsb
loope
fs
pop
test
add
push
adc
sbb
jno
cmp
cmp
dec
or
push
or
je
scas
mov
enter
mov
mov
dec
mov
adc
es
add
jp
mov
pop
push
sarb
aam
ss
imul
int
sarb
adc
cwtl
fsubs
jbe
repnz
add
clc
adc
lret
gs
rcr
jge
pop
jno
ret
iret
pop
test
pop
lea
lds
ljmp
movsl
xor
dec
inc
lahf
cs
pop
jecxz
test
insb
subl
add
sbbb
pushl
or
sbb
cmp
insl
gs
adc
dec
jle
ret
push
jae
or
lcall
aad
roll
shl
mov
aad
je
dec
pop
mov
jbe
int3
inc
es
jae
adc
daa
test
imul
xor
not
sbb
or
adc
ret
xor
lods
into
cmp
ret
fdivl
test
jne
imulb
test
push
pop
shll
int3
lea
push
aad
mov
jne
mov
out
cmp
ljmp
mov
add
mov
insb
lret
cmp
pop
in
xor
iret
and
iret
xor
add
fmulp
subl
pushf
outsl
rcr
xchg
jp
push
inc
loop
mov
adc
sub
sti
ds
iret
fst
lret
dec
ret
ljmp
xchg
adcb
out
bound
ret
lcall
enter
jge
sbb
cmpsb
xchg
js
clc
leave
and
xchg
pop
add
iret
les
push
adc
mov
movsl
xchg
push
inc
push
out
mov
scas
lock
arpl
xchg
add
inc
in
jb
pop
mov
into
dec
test
aad
xor
inc
test
jns
ljmp
out
xor
out
adc
aam
std
push
mov
pop
mov
sub
cmp
pusha
out
out
scas
jmp
xor
cmp
daa
sarl
int
jbe
ret
ret
cmp
sbb
fisttpll
mov
push
xor
mov
loope
xchg
jns
sub
sub
dec
mov
pushl
pop
cmp
or
int3
jnp
lods
push
movsb
sbb
jns
sbb
icebp
lcall
mov
jmp
cmp
fucomp
sub
sbb
dec
mov
sbb
inc
inc
xchg
leave
and
and
jno
das
stc
sti
push
cmp
stos
pop
cmpsb
cmp
dec
push
cld
cmpsl
cmp
nop
adc
mov
mov
in
mov
mov
xchg
aaa
fcoml
jnp
popf
dec
add
mov
rclb
inc
lahf
or
pop
dec
lret
cmp
lret
js
jno
xor
flds
fcomi
or
jne
imul
jb
std
imul
into
adc
bound
dec
or
out
lods
xchg
mov
cwtl
les
or
push
push
sti
call
push
lcall
inc
jbe
cmpl
pop
or
dec
sub
jae
jp
out
ror
and
jb
lcall
lock
push
mov
mov
mov
push
xchg
sahf
int3
cmp
lahf
dec
inc
jle
test
ss
mov
mov
fnop
scas
jno
notb
dec
xor
movsb
sbb
mov
out
test
cld
pop
jno
mov
xor
add
sbb
xchg
mov
mov
les
xchg
out
out
cmp
mov
leave
movsb
bound
sbb
push
add
sarb
xchg
fnstcw
xchg
push
pop
sub
hlt
inc
shlb
mov
mov
movsl
aad
sub
pop
dec
lods
ficoml
sub
sbb
lret
jb
mov
sti
jg
push
fidivrs
mov
out
or
or
mov
outsl
cwtl
push
test
stos
fsubl
adc
push
push
add
inc
cwtl
add
cmp
loop
std
jecxz
rcll
lret
mov
sub
pop
and
stc
jmp
into
sub
addl
jle
in
cmp
add
stc
jl
sub
sahf
inc
xchg
lret
or
aam
xor
out
push
jno
adcl
xcrypt-cbc
cmpsl
pop
mov
mov
mov
lds
xor
test
mov
pop
fmull
lcall
js
mov
cmp
inc
add
imul
mov
xlat
adcb
sub
jbe
pop
loope
jge
js
adc
mov
mov
in
lea
mov
leave
jae
cwtl
adc
popf
bound
fisubs
and
cmp
add
aam
ud0
mov
ret
loope
test
mov
jp
add
dec
adc
bound
aaa
jbe
mov
out
cltd
insb
aas
adc
pop
fsub
inc
out
nop
imull
lea
out
lock
lds
sub
push
push
fs
jnp
divb
jge
mov
je
mov
rcrl
lahf
or
xor
in
test
jns,pn
pop
jnp
cwtl
sti
lods
add
or
xor
hlt
mov
mov
mov
int
cmpsl
mulb
leave
repz
pop
sbb
shlb
ror
test
lret
repz
xor
sbb
mov
adc
dec
je
out
call
cmp
add
cmp
sbb
and
scas
xchg
or
dec
dec
addr16
daa
dec
cli
ljmp
setns
andb
push
xor
jp
shl
mov
lret
pop
sub
fs
sbb
pop
sub
cmp
lods
mov
inc
out
addr16
sbbl
xchg
dec
sub
push
lahf
mov
pop
mov
jne
adc
lret
test
jge
and
sbb
push
fsubs
leave
mov
stos
sarl
sub
push
ficompl
fmul
mov
shlb
and
add
loop
mov
pusha
pusha
loopne
ja
sub
cmpsb
xchg
lcall
shll
pop
xor
mov
cmp
or
stos
push
adc
test
inc
adc
dec
imul
mov
pop
xchg
adc
hlt
pop
push
vcvtsi2sdl
jl
push
dec
imul
add
cmp
or
shl
aam
fcmovbe
or
push
pop
push
mov
and
and
in
push
lret
popa
testl
lahf
sbb
aaa
fdiv
mov
push
and
stc
cmc
cmpsb
enter
push
stos
mov
enter
jo
adc
xor
sub
stos
addr16
pop
pop
ss
sarl
test
cmp
pushf
or
jg
lock
cmp
mov
mov
fadd
mov
lds
imul
and
bound
incl
mov
sbb
inc
add
push
cmc
cmpsl
cmpsl
ror
rcll
sti
mov
mov
mov
ret
iret
cmp
push
inc
dec
gs
push
or
decl
dec
nop
jnp
xchg
js
pop
outsb
loope
lcall
dec
popf
dec
mov
jmp
pop
or
inc
les
int
loopne
cmp
inc
pop
scas
repnz
ret
mov
sub
pop
xchg
cmpsb
pop
data16
je
sub
es
icebp
pusha
fcompl
lcall
fld
jae
mov
or
pop
out
dec
mov
pushf
fidivs
xchg
popf
fs
loopne
stos
xchg
inc
ficompl
pop
push
push
das
cmp
mov
mov
adc
shl
out
stos
insb
shrl
xchg
sbb
push
jle
lods
jno
repz
cmp
adc
xchg
sub
pop
add
dec
jecxz
xor
iret
ss
jecxz
jne
test
int3
and
test
loopne
adc
mov
test
andl
in
rol
cmp
loop
movsl
sub
popf
inc
insl
add
jno
addb
jle
xor
ficompl
and
add
adc
jae
mov
xor
mov
popa
in
nop
rclb
mov
movsl
addr16
and
jb
les
dec
addr16
sub
jne
xchg
scas
movsl
adc
adc
shrb
or
dec
xchg
inc
mov
sahf
cmp
roll
xchg
sub
xchg
mov
mov
and
cmpsb
mov
jecxz
out
jnp
scas
mov
inc
mov
add
ss
les
in
mov
stos
or
lcall
aad
xor
jge
in
or
cmp
dec
and
cmpsb
and
cltd
scas
cmc
test
cmp
and
mov
mov
sub
push
pop
cltd
cmpsb
jge
xlat
pop
push
push
mov
sub
je
sub
dec
pop
stos
fcmovnu
adc
bound
testl
arpl
mov
stos
shlb
mov
out
stc
jne
cwtl
xor
cmpsl
out
add
add
xor
mov
movzwl
in
and
and
test
cld
jne
jne
mov
test
sbb
xchg
ret
outsb
jmp
mov
add
or
scas
xchg
sahf
lahf
out
out
pushf
fwait
lcall
call
nop
inc
aas
mov
push
test
sub
mov
inc
pop
rol
enter
insl
loopne
or
lods
test
jl
mov
loop,pt
push
ss
loop
ret
mov
insb
mov
stc
enter
sbbl
mov
cmp
xchg
xchg
and
and
adcl
mov
pop
push
stos
xchg
xchg
shrl
xlat
jo
add
sbb
add
push
mov
movsl
leave
push
mov
dec
mov
fnstsw
xchg
sahf
je
loopne
movsl
jmp
jl
pop
int
cli
push
push
sahf
shll
jge
pusha
pop
psllq
pop
scas
fsubl
sub
xor
ret
add
cld
add
in
sbb
jp
add
jns
inc
push
es
dec
jle
stc
and
cmp
mov
into
cmc
sbb
daa
popf
imul
jb
jae
add
jle
jp
or
ds
aaa
std
aam
sahf
rorl
imul
and
mov
clc
mov
sub
fwait
jb
pop
cltd
cmc
inc
nop
sbb
push
mov
mov
adcl
dec
xchg
xor
fildll
sbb
and
mov
sub
sub
outsb
pop
jnp
sbb
cmpb
mov
test
andl
pop
push
mov
mov
cmp
pop
lea
mov
cmp
xor
and
hlt
add
and
or
lcall
xchg
int3
adc
or
mov
inc
pop
lahf
fwait
fbstp
mov
pop
movsl
adc
icebp
mov
in
movd
sub
push
clc
inc
ds
js
cwtl
fmul
xor
repz
movl
pop
pop
dec
out
mov
or
push
mov
sahf
cmpsb
loop
and
aas
ficoml
scas
push
lds
and
test
popa
out
jl
adc
outsb
enter
movsl
mov
ret
int3
fwait
or
hlt
xabort
push
out
shrl
pop
int3
sahf
mov
and
fsubr
add
in
mov
xchg
idivl
sbb
sub
out
sub
mov
ljmp
mov
mov
inc
cmpsb
lods
mov
rorl
xor
xor
add
xor
or
xchg
mov
adc
jecxz
jl
fimuls
addr16
or
pusha
data16
ret
test
mov
aaa
and
jb
sbb
std
xor
fiadds
pusha
push
and
frstor
mov
test
dec
and
ds
mov
or
adc
mov
cli
iret
lea
in
mov
sbb
cmpsl
jl
mov
sbb
xchg
mov
stc
loope
fucom
je
push
lds
mov
push
mov
cli
cwtl
or
aam
stos
fnstsw
push
mov
xor
mov
sub
loope
add
or
dec
ret
icebp
lods
pop
jg
or
gs
inc
cmpl
xchg
dec
int
mov
out
inc
xor
testb
incl
xchg
xor
mov
mov
lods
xor
lock
shll
pop
push
xor
push
pusha
mov
loope
adc
xor
xor
fistpll
hlt
andl
popf
sbb
int3
ja
or
mov
pop
in
xchg
or
or
data16
les
aaa
xor
inc
fnstsw
sub
dec
jge
push
pop
xor
fnstenv
fmulp
jge
dec
aam
stc
rcrl
dec
or
push
jle
dec
push
inc
std
xchg
repz
test
lcall
xchg
xor
orl
icebp
mov
sbb
xchg
add
push
ret
pop
cld
ret
nop
rcll
jnp
xchg
mov
arpl
or
test
mov
arpl
aaa
notb
mov
das
pop
xchg
es
icebp
or
inc
and
iret
incl
call
xchg
hlt
ja
cltd
es
jne
scas
in
push
push
xor
leave
sahf
adc
mov
pop
int
cmpb
cmpsl
mov
ja
clc
adc
and
int3
adc
popa
dec
sub
or
jns
mov
in
or
or
xor
mov
cltd
cltd
jbe
ds
push
ret
sub
sbb
insl
iret
jae
dec
add
mov
sbb
insb
jp
mov
xor
xor
data16
jge
shrb
inc
popf
cmp
xor
jo
inc
test
pop
jmp
fcoml
mov
inc
mov
mov
xchg
sub
movsl
adc
int
push
dec
jge
dec
arpl
daa
push
mov
insb
nop
lods
mov
in
jb
add
ret
loopne
in
dec
daa
cmc
cli
pop
dec
cli
int3
add
dec
imul
dec
int
std
stos
dec
and
mov
jecxz
lahf
fwait
jp
out
data16
mov
adc
test
popl
sub
lods
lods
cmp
scas
pushf
frstor
lds
out
shlb
inc
popf
incb
clc
in
jl
pop
mov
jmp
repnz
sbb
sarl
les
xor
add
js
xchg
xchg
pop
mov
push
xorb
xchg
mov
out
ret
lea
sbb
jl
movsl
int
ret
adc
in
xchg
sub
mov
jbe
mov
pop
hlt
xor
mov
xor
hlt
adc
popa
mov
sbb
fistpl
insb
inc
dec
iret
xchg
out
fstpt
movsb
mov
das
dec
sti
xchg
sahf
mov
pop
xchg
rorl
sub
dec
pop
and
pop
inc
jbe
ret
and
jge
hlt
cmpl
adc
sub
bound
gs
pop
pop
in
dec
dec
push
or
in
iret
mov
pop
and
cmp
fistpll
push
and
daa
stos
jmp
xor
xchg
imul
fmull
fsubrp
push
movsl
and
iret
mov
push
inc
jg
loopne
enter
push
adc
xchg
jno
clc
push
jns
in
pop
mov
sub
inc
and
cwtl
jp
push
or
or
dec
push
pop
inc
cvtps2pi
jne
push
jl
nop
pop
imul
mov
mov
lods
les
fiaddl
pop
pushf
inc
pop
ja
mov
lcall
xchg
jecxz
popf
mov
push
fwait
ret
lock
insb
insl
into
mov
mov
mov
dec
add
enter
sbb
dec
cmp
pop
sub
xchg
adc
ret
jb
or
pop
and
inc
pop
roll
inc
je
jge
fcmovnbe
ljmp
or
adc
lahf
pop
dec
roll
push
lret
inc
ja
test
sbb
js
mov
daa
xchg
add
iret
push
mov
add
fisubrs
das
popf
das
imul
sub
sbb
setne
icebp
rorb
cltd
xor
and
outsl
es
xchg
cmp
or
std
add
sbb
mov
rcrl
sub
adcb
jno
fldl
iret
push
cmpsb
jne
inc
lahf
add
mov
popa
inc
pushl
in
scas
mov
test
test
aam
or
jle
or
inc
mov
add
sub
push
js
test
out
pop
divl
inc
sub
jb
dec
dec
mov
fdiv
shrl
leave
fidivrs
push
mov
jge
mov
icebp
dec
and
dec
lock
pop
lahf
xchg
xchg
aad
aaa
jmp
xor
lcall
repz
sti
xchg
jl
test
sbb
dec
int
push
push
add
gs
shl
xchg
std
cmp
pop
pop
mov
adc
xchg
pop
mov
or
popa
xlat
jecxz
shll
mov
xchg
mov
jnp
push
sub
ja
lret
xchg
pop
mov
push
jmp
push
xor
jecxz
mov
xorb
cmp
xorb
imul
xor
mov
clc
in
cltd
shll
push
les
rorb
int
add
fcoml
pop
inc
inc
or
mov
clc
dec
fdivrl
or
ja
ficompl
sti
lds
ds
cmp
nop
lods
in
loop
cmp
jl
cmp
cmpsl
sub
bnd
movsb
int3
jb
mov
adc
mov
ljmp
cmpsb
cmp
mov
fldenv
loopne
bound
inc
or
push
cld
jl
mov
lret
jo
call
push
and
stos
mov
fildll
mov
test
subb
xor
loope
xchg
out
int
sbb
inc
addr16
popf
or
rcrl
std
leave
dec
xchg
jmp
scas
mov
out
out
bnd
jo
sub
xor
cs
cmp
jmp
fdivs
aas
popf
push
out
insl
mov
sub
jnp
xchg
inc
inc
add
fisubl
cmpsl
jmp
ret
and
cmp
in
aam
rorl
scas
hlt
or
or
sub
cmp
dec
sbb
js
xchg
adc
cmpsb
jge
sub
push
cmc
mov
push
pop
mov
jne
ss
gs
sbb
push
cmp
sbb
fadd
xchg
cwtl
aam
jne
mov
cmpsb
nop
es
add
test
inc
sti
sti
or
addr16
and
aaa
inc
imull
xchg
jmp
int3
jmp
test
jl
cmp
mov
in
dec
xlat
jmp
popa
mov
enter
test
xchg
test
jo
mov
cmc
iret
or
popa
cmp
dec
xchg
jb
push
mov
je
jle
push
mov
push
imul
enter
outsb
and
push
pop
pushf
imul
jg
mov
cwtl
and
cmp
push
aad
lock
test
and
ret
mov
cmp
repz
dec
or
mov
jmp
gs
xchg
decl
dec
ret
sub
in
push
mov
lock
xchg
xchg
es
xchg
fdivp
xchg
aas
xor
mov
push
pop
out
xchg
or
fs
cld
in
xchg
in
fidivl
mov
ja
jbe
or
or
mov
lret
xor
sti
xchg
push
dec
jle
js
or
and
push
pop
jmp
dec
jb
aam
or
scas
stos
push
jp
fwait
jge
sbb
dec
jo
jge
insb
mov
ds
stos
pushf
pop
lds
pop
mov
jne
ja
xchg
inc
inc
cmp
clc
mov
jl
adc
xor
mov
jp
pop
fucomip
jae
repz
scas
pop
int3
sub
pop
mov
add
push
and
into
leave
rorl
cmp
mov
dec
jg
adc
sbb
test
mov
xor
clc
mov
cmp
pop
mov
subl
je
data16
sub
push
mov
jg
xchg
sub
jbe
out
divb
push
mov
fistps
mov
inc
movsl
add
jne
shl
add
xor
inc
stos
shl
out
aam
xchg
push
adc
icebp
xchg
push
out
xchg
mov
cmpxchg
jmp
enter
lahf
cli
fucomp
lret
test
dec
rcrb
cmp
ds
and
mov
mov
fldcw
fidivrl
push
sbb
jb
mov
and
xorl
out
mov
push
data16
in
push
les
lea
pop
mov
aad
je
outsl
or
movsb
cmp
and
inc
rorl
jo
xchg
shlb
rcrl
sti
xchg
add
jmp
mov
mov
sbb
cwtl
das
inc
xchg
push
aaa
mov
jp
aam
lods
mov
jmp
push
scas
sub
std
jne
sarl
jmp
in
es
push
shll
insl
out
add
jecxz
test
inc
pushf
mov
out
in
int
xchg
push
mov
pop
cmc
xchg
cmpsb
fsubrl
outsb
fidivl
cmp
je
pop
push
scas
pop
jb
out
mov
andl
daa
imul
fsubl
sbb
fadds
cmp
push
push
lret
shll
mov
jg
mov
pop
dec
dec
sbb
std
mov
push
sub
test
and
xchg
stos
call
das
adc
mov
or
sub
adc
iret
subl
push
in
and
sub
loopne
and
cwtl
and
gs
addr16
lods
bnd
js
and
addb
mov
push
icebp
pop
lods
and
xchg
popf
idivl
push
aam
mov
cmp
cld
das
fists
xor
or
in
pop
test
bound
push
arpl
ss
les
cwtl
push
je
gs
fistpl
daa
shrb
sbb
and
cmpsl
dec
dec
idivb
fs
mov
std
jbe
push
bound
pop
out
iret
call
xorl
lret
jo
inc
and
je
les
test
test
movsl
fld
cltd
xchg
cmc
add
icebp
or
out
je
mov
lds
mov
bound
adc
and
insb
mov
inc
mov
xchg
pop
push
adc
or
ljmp
jmp
push
mov
mov
fidivl
sahf
test
pmulhw
push
cs
pusha
and
hlt
subb
iret
cli
out
adc
sbb
jle
inc
out
shll
pop
shll
call
stc
lcall
out
mov
enter
xchg
imul
inc
arpl
iret
cwtl
mov
xor
fcomps
fmulp
push
mov
dec
pushf
inc
sub
sahf
or
jo
inc
std
sarb
stos
ret
lea
xchg
je
xchg
stos
fs
ret
call
ss
lock
mov
pop
idivb
add
enter
mov
scas
into
sbb
std
int3
call
cmpsb
aam
mov
aas
fisubs
cmp
orb
and
je
or
adc
push
ja
nop
mov
js
jnp
repnz
mov
xlat
jle
mov
mov
inc
inc
cmc
xlat
push
jne
mov
cs
aas
xchg
dec
scas
sub
std
call
xchg
inc
dec
push
leave
or
in
jb
mov
scas
jb
stc
aam
aas
rolb
xchg
cwtl
cmp
and
inc
jnp
cmpsl
insb
jg
addb
fcompl
mov
xor
sbb
cs
push
idivl
or
xor
push
ficoms
xchg
es
inc
rcl
cmp
add
dec
push
xchg
shll
repz
jno
orb
pop
int
or
icebp
fwait
sar
fdivl
sbb
cmp
or
pop
adc
sahf
and
sti
into
outsl
xchg
je
and
int3
mov
dec
or
je
out
cld
and
xchg
jae
lahf
shl
je
lret
mov
sti
jb
pop
push
push
pop
cmp
pop
fisttps
and
rsqrtps
xor
xchg
jecxz
inc
or
pop
jle
aam
popa
xor
xchg
nop
adc
mov
jp
lea
jnp
lods
nop
mov
mov
lock
xor
cmpsb
jp
add
push
jbe
inc
xorl
repz
mov
mov
fistps
pop
std
jle
std
xlat
ds
cmpsb
subl
data16
push
fwait
out
fcompl
push
fidivl
into
jb
lods
pop
mov
cld
sub
cltd
adc
sbb
jg
insb
jno
outsl
push
xlat
loop
inc
outsb
mov
jl
dec
sbb
test
negb
xor
mov
fldt
xor
out
out
or
sbbb
out
jo
sub
es
cs
mov
mov
outsl
push
aad
dec
mov
les
jle
shrl
cmp
pop
lods
call
cmpsb
cmc
add
leave
in
inc
mov
int3
int3
or
fcomps
push
or
movsl
sub
fadds
sahf
movsb
push
push
xlat
sub
js
int3
and
or
pop
xchg
push
jle
xchg
xlat
fiaddl
pop
lods
xlat
leave
mov
sub
mov
popf
jae
inc
sub
add
adc
repz
addr16
and
daa
lcall
std
cmpsb
jbe
mov
stc
push
mov
in
aad
sub
sarl
mov
add
cmp
sub
aam
dec
dec
mov
orl
inc
add
in
push
daa
inc
cmpsl
imul
cmc
add
xlat
outsl
loop
lea
sbb
mov
mov
lods
add
adc
out
das
jle
inc
mov
and
mov
inc
mov
pop
inc
sbb
add
out
and
in
pop
sbbl
hlt
and
sbbb
loope
imul
scas
stc
ret
cmp
lcall
jmp
xchg
arpl
mov
or
add
mov
mov
inc
mov
sub
jp
sub
pop
xor
ljmp
std
pushf
out
cmp
push
jnp
aaa
sub
adc
or
fimull
mov
mov
leave
shlb
cmp
fcompl
xchg
testb
mov
lock
push
dec
mov
mov
ftst
and
inc
add
mov
inc
sahf
cwtl
xor
fsubr
xorb
sub
call
jp
popf
xor
dec
loope
les
jo
adc
pop
cmp
testl
dec
inc
aad
mov
ljmp
orb
jb
test
out
add
shrb
sbb
cmp
insb
mov
je
inc
ret
popa
ds
push
push
fistpl
mov
ret
cmp
cmp
lret
or
test
fsubr
out
xlat
sarb
in
aad
jnp
xchg
and
jg
adc
or
xor
sahf
or
jle
out
jb
pop
jae
xchg
push
mov
mov
popf
inc
adc
jge
xorb
xor
enter
jle
xor
out
dec
dec
js
mov
pop
loop
push
inc
out
adc
push
adc
ss
cmp
bound
rcrw
jo
fchs
push
iret
adc
bound
pop
enter
mov
xor
jp
lods
popw
les
xlat
test
dec
idivb
inc
push
mov
stos
clc
xor
ljmp
xor
mov
out
js
movsl
sbb
push
out
sahf
sub
jp
incl
mov
sbb
or
div
push
fcmovnbe
dec
lds
pop
loope
mov
inc
push
iret
xchg
cmp
mov
popa
jle
jge
shr
xchg
push
adc
icebp
rsm
in
mov
ljmp
scas
subl
test
or
xor
cld
dec
cmp
xor
add
mulb
sub
aas
jae
es
or
cmc
and
addr16
xor
sbb
add
pop
insb
scas
mov
mov
or
pop
cmpsl
shll
push
mov
push
cmp
aas
xor
pusha
imul
and
std
push
imul
jns
pop
push
mov
js,pn
lds
xor
sbb
jp
push
in
cmpsb
mov
hlt
popa
jne
in
push
and
jb
stos
fstl
repz
sub
scas
outsl
cld
inc
mov
bound
pop
daa
or
mov
scas
test
lcall
cmp
mov
mov
or
mov
cwtl
inc
repz
xchg
and
xchg
or
sbb
call
cmp
mov
out
js
cmp
or
push
lods
movsb
insb
lret
xor
mov
popf
or
loope
pop
push
add
lods
sarb
int3
sbb
sarb
pop
aaa
dec
sahf
pop
push
jb
xor
xor
es
cmp
scas
stos
xlat
jne
lods
leave
jns
cmp
imul
leave
xchg
or
push
insl
addr16
sahf
mov
nop
or
mov
jbe
sbb
lea
outsb
mov
mov
cmp
repnz
and
dec
jbe
pop
and
pop
mov
jbe
push
or
arpl
aam
mov
mov
ds
ss
sahf
cmp
push
call
aaa
jns
mov
pop
adc
rcll
in
push
xor
and
shl
push
push
fists
sbb
push
das
fisubs
pop
jmp
iret
push
insb
cmpsl
test
scas
or
fsubr
xor
push
jecxz
xchg
mov
fistps
pop
xchg
incb
pop
inc
mov
adc
std
xor
push
sub
sbb
cltd
jbe
xorb
icebp
or
cmp
cmp
jno
mov
jp
enter
xor
push
mov
ja
lds
push
jb
sbb
out
push
std
xor
leave
lret
rcrb
inc
add
call
and
clc
add
add
rcll
arpl
cwtl
xlat
arpl
inc
lahf
push
scas
push
mov
fidivrs
jno
in
inc
and
fidivrl
adcb
mov
stos
xchg
mov
addr16
xchg
mov
hlt
gs
add
lret
sub
dec
pop
pop
in
ret
dec
into
and
mov
scas
mov
sahf
mov
cs
push
pop
mov
inc
jecxz
out
out
mov
inc
cmp
sub
cld
adc
fstpl
fnstenv
repnz
scas
pop
xchg
or
fidivrs
in
bnd
mov
rolb
repnz
pop
mov
mov
jno
cmp
int
cmp
cmp
sarl
popf
test
jns
sub
pop
mov
mov
sarl
mov
mov
fcmovnb
xor
sub
sbb
cmp
loopne
push
adc
mov
insb
pushf
test
sub
ljmp
sub
movsl
push
jae
mov
pop
iret
fnstenv
xor
pusha
insb
enter
push
mov
lds
inc
scas
xchg
xchg
push
in
lcall
jecxz
jb
into
xor
ficoml
js
mov
adc
aam
sbb
std
pop
lods
dec
xor
out
mov
movsl
push
xchg
mov
mov
sti
mov
bswap
jnp
insl
test
pop
pushf
mov
test
jle
mov
mov
sbb
pop
add
dec
icebp
cmp
pop
mov
mov
and
in
cmp
jbe
imul
dec
or
push
int
aam
sbb
pop
lcall
rcrb
aam
adc
jb
stos
mov
je
pusha
test
jne
jo
xor
test
int3
adc
jne
lcall
xchg
ret
stos
fdivrl
popf
stc
addr16
inc
cwtl
jae
sub
add
xchg
in
sub
mov
jle
int
cli
cmp
add
in
push
les
in
cmp
cwtl
dec
jg
mov
loop
cmpb
sbb
lahf
cmp
loop
fsubp
loop
xor
push
insb
push
mov
xor
cmp
fnstcw
push
outsl
mov
xchg
test
out
ja
mov
mov
insb
insb
arpl
mov
or
xchg
pop
or
xor
or
xchg
cmp
jnp
notb
mov
push
add
pop
loopne
adcl
sbb
dec
mov
push
imul
mov
mov
sbb
cmpsb
flds
addl
cmp
dec
and
test
mov
mov
jb
loope
icebp
jge
test
mov
mov
addr16
stc
fldcw
rclb
mov
push
mov
jbe
adc
in
mov
in
jae
movsl
hlt
cmp
jge
mov
dec
in
in
inc
lcall
repnz
jne
jecxz
ja
rcll
aam
jns
stos
arpl
inc
mov
shrb
cmc
cwtl
xchg
dec
xchg
aam
mov
adc
jmp
movl
stos
aaa
jecxz
lods
mov
sbb
inc
sub
mov
imul
add
in
ret
gs
mov
fs
out
jbe
outsl
mov
fs
push
adc
sarl
mov
mov
cs
mov
in
mov
psubq
mov
mov
shlb
enter
in
popa
or
push
sub
adc
sub
test
xor
mov
adc
or
cltd
sbb
jo
add
cmc
nop
into
inc
dec
fisubrs
ja
imul
mov
push
jg
push
outsb
push
jb
sub
and
adc
int
xor
pop
pop
int3
lock
xor
clc
pop
negb
xchg
push
mov
inc
cltd
lret
pusha
es
cmp
xchg
popa
xor
adc
mov
dec
xor
in
mov
call
jecxz
or
mov
lods
insl
sbb
scas
pop
daa
sar
jno
mov
mov
fwait
inc
sahf
gs
cltd
mov
sahf
loope
pop
jl
push
add
leave
xor
fcomip
pop
mov
sbb
xor
bound
stos
pop
mov
and
test
inc
and
push
in
or
in
pop
cwtl
out
jmp
add
lea
jl
dec
mov
and
cmp
sub
cmp
aaa
nop
movsl
dec
ja
mov
push
dec
jg
jp
mov
aam
or
mov
loope
cmp
stc
inc
insl
ja
aad
jo
iret
lahf
test
push
inc
add
push
jl
in
je
add
leave
in
mov
mov
call
in
cmp
ret
lds
add
mov
xor
cmp
vmovhlps
das
gs
jae
mov
add
xchg
lcall
lea
xor
call
ja
inc
out
iret
mov
not
jge
mov
jg
and
fcmovne
mov
shr
jmp
adc
sub
xchg
out
mov
add
sbbb
or
inc
mov
frstor
add
test
xor
fcmove
lock
and
add
push
ljmp
or
js
test
mov
into
mov
cs
shll
lods
add
lds
adc
shll
dec
cmp
pusha
fidivrl
shll
pop
hlt
sbb
and
push
testb
add
das
xor
push
inc
lret
cmp
push
pop
addr16
ja
pop
in
jno
fsubrs
cmp
mov
fiaddl
adc
inc
hlt
mov
mov
cmp
and
loop
push
dec
sahf
in
pop
iret
and
adc
cwtl
ret
xchg
xchg
movsb
push
add
aad
aaa
pop
adc
rclb
pusha
cmp
xchg
inc
lcall
scas
icebp
js
repz
dec
neg
ror
das
add
cld
mov
pop
or
std
jecxz
inc
sub
xor
mov
dec
ljmp
movsl
lret
std
popf
xor
add
mov
push
and
aaa
sub
push
aas
add
jle
jb
movsb
cli
loope
stos
inc
ds
sbb
fimull
inc
aas
mov
ret
nop
pop
sbb
test
iret
cld
imul
popa
mov
out
push
outsb
fwait
repz
sub
frstor
test
ret
mov
in
cld
cmp
insl
je
pop
out
leave
xor
std
or
aad
xchg
pop
lret
clc
into
ljmp
xor
clc
aad
decb
mov
inc
dec
mov
aad
arpl
in
sahf
cmp
lock
ret
cmp
jle
inc
loope
shl
out
inc
add
insb
or
mov
and
rcll
add
data16
ror
lds
pop
xchg
es
shll
or
push
das
xchg
mov
call
mov
jg
add
leave
loope
rol
jno
inc
pop
mov
notb
int
stc
fidivs
adcl
xchg
aad
je
cmp
push
add
pop
int
in
mov
lock
mov
inc
dec
imull
addr16
push
pop
jae
xchg
in
mov
cmc
test
pusha
hlt
cld
sbb
jo
sub
mov
adc
ss
dec
insl
inc
dec
pop
ret
and
mov
push
xlat
iret
dec
adc
faddp
xchg
lret
pop
adc
xor
into
push
xchg
sub
mov
or
pusha
hlt
jb
daa
inc
push
out
es
sbb
shlb
and
sbb
fwait
aam
sub
das
repnz
sub
mov
pushf
cmp
mov
jl
and
outsb
int3
repnz
inc
frstor
mov
in
xchg
and
push
add
popf
orb
and
sbb
cmp
rorl
jl
mov
out
and
mov
add
jae
ljmp
cmpsl
lret
les
adc
mov
xor
xchg
fadd
in
push
adc
jns
xchg
inc
add
add
jnp
push
or
jge
xchg
sub
ret
incl
jnp
xchg
sub
inc
fwait
and
in
inc
mov
xchg
psubusb
insw
mov
cmpsl
and
inc
sbb
je
data16
sbb
shrb
pop
mov
aas
xchg
push
mov
outsl
fs
jecxz
mov
rcll
in
pop
stos
pop
insl
jo
js
scas
pop
add
pop
jns,pn
jno
dec
mov
sub
jge
jno
jae
lahf
sub
stos
repnz
loope
sub
inc
jp
leave
pop
xor
push
pushl
ret
hlt
and
and
icebp
mov
xlat
out
fdivl
jns
xchg
inc
mov
sub
movsb
out
lds
xchg
mov
add
jg
fbld
fstl
loope
cmp
xor
pop
gs
dec
inc
lahf
mov
pop
inc
mov
adc
ljmp
push
jb
jbe
mov
mov
fdivrs
inc
in
sub
sbb
inc
pop
aam
mov
fimull
or
sbb
popa
int
push
cwtl
loope
jmp
mov
in
divl
fdiv
or
cmp
mov
xchg
inc
iret
out
push
mov
xchg
jecxz
out
repnz
fstl
sub
cmc
cmp
xor
push
inc
nop
cmp
dec
aam
sbb
imul
movsl
cld
mov
ffreep
icebp
add
push
outsl
xchg
jp
mov
xorb
cli
fdivrp
in
add
xchg
stc
or
jecxz
pop
psrld
adc
adc
xchg
cld
mov
push
mov
or
aad
mov
add
pop
movsb
push
mov
outsl
add
loopne
lods
mov
push
lret
js
ja
jbe
and
pusha
ss
andl
push
cmp
pop
xchg
xchg
fcomi
fmul
in
mov
hlt
mov
or
in
ljmp
pop
lods
cmp
ret
adc
mov
pusha
xchg
test
int
loope
xchg
rcrb
lret
aaa
cmp
and
addr16
and
jno
fldcw
cmp
jno
icebp
cmc
insb
lds
sbb
pop
aas
push
dec
xor
aam
std
ds
mov
into
dec
push
out
in
cltd
ss
pop
pop
pop
dec
sti
rorb
popf
add
rorl
hlt
lds
pop
inc
aam
push
and
rolb
adc
and
push
scas
loop
insl
cltd
sbb
insl
and
out
dec
lods
call
into
leave
imul
out
add
loop
dec
xor
int3
push
lea
ret
mov
ror
add
xor
inc
imul
jnp
add
enter
push
cmp
mov
cld
push
mov
mov
lock
xor
icebp
les
cmp
popf
cld
ljmp
stos
add
cmc
dec
iret
mov
aad
mov
jae
repz
mov
lods
pop
xchg
fs
inc
mov
mov
scas
mov
test
or
jle
jmp
xor
pushf
fnstsw
and
arpl
lea
jno
lahf
dec
ja
and
push
sbb
pop
pop
pop
rorb
outsl
mov
fcomip
pop
sub
add
fadds
test
cmpsb
mov
je
enter
push
inc
jg
jo
ret
pop
outsb
mov
subl
into
adc
mov
popa
xchg
into
xor
insb
jmp
push
inc
cmp
sti
add
das
push
pop
shrl
adc
mov
jo
outsb
lods
stos
jnp
add
sbb
pushf
mov
mov
outsl
mov
or
movsb
push
jecxz
cmc
or
daa
insl
lods
popf
fsubrl
dec
mov
push
add
xchg
sub
call
std
dec
cmp
jns
mov
push
das
mov
nop
ret
shlb
inc
add
jg
cmp
jmp
sub
pop
gs
loopne
mov
loop
mov
imul
push
out
ljmp
mov
pop
ret
movsl
xor
xchg
adc
mov
sub
lcall
or
and
jp
pop
aad
mov
jg
push
inc
and
mov
and
scas
push
rcr
add
popf
mov
pop
xchg
or
add
push
and
sbb
mov
xchg
int3
add
dec
adc
test
aaa
dec
mov
xlat
xor
mul
xchg
ja
jae
leave
sbb
sahf
xor
orb
test
icebp
out
push
addb
ficoms
loope
mov
call
xchg
jns
xchg
lock
ss
or
jl
aaa
dec
jb
data16
push
outsl
sub
stc
mov
pop
xchg
xlat
imull
push
mov
push
lods
or
cli
mov
cmpsl
xchg
hlt
push
out
inc
sbb
sub
fbstp
mov
popf
push
xor
pop
in
arpl
fimuls
xchg
jne
stos
fisttps
push
add
cvtps2pi
imul
push
inc
adcb
out
xchg
lods
movaps
fs
push
insl
insl
push
dec
leave
cmp
push
je
sub
rclb
out
mov
pop
inc
fwait
jb
mov
out
rcll
mov
inc
test
out
ss
dec
add
insb
aad
cltd
and
pushf
fidivrl
test
test
stos
jl
insb
rclb
add
push
dec
adc
or
cmpsl
in
mov
jbe
inc
rol
out
xchg
rcl
mov
bound
pop
cli
mov
mov
sahf
add
mov
divb
in
jmp
sub
lahf
xchg
cmp
cwtl
ror
xor
loopne
mov
addl
lahf
adc
jae
inc
pop
mulb
jns
fimuls
fnstcw
lahf
addb
xorb
insb
or
mov
push
sbb
pop
js
jbe
mov
repz
in
leave
dec
jp
fcoml
sub
sub
sbb
sub
test
sti
dec
ret
int3
scas
out
jl
aam
imul
mov
or
repnz
dec
aam
outsb
lea
mov
in
adc
adc
ds
inc
pop
cmp
xchg
inc
dec
and
ljmp
xchg
mov
mov
imul
fdivrl
push
push
fsubrs
cltd
mov
cmpsl
cmp
add
les
repnz
test
scas
jmp
pop
or
aas
insl
jbe
mov
mov
je
mov
mov
xchg
stos
xchg
loopne
sbb
punpckhdq
adc
sbb
sub
pop
lea
mov
push
rcrl
ret
je
into
adc
and
outsl
push
mov
movsb
sub
xchg
daa
and
ficompl
push
lods
cmp
pop
repnz
sub
in
inc
add
jne
mov
lods
adc
or
sbb
xchg
out
out
adc
das
cmp
push
fbstp
mov
mov
add
imull
sarb
dec
imul
aas
stc
mov
pop
stos
cmp
test
sti
repz
mov
dec
xchg
cs
dec
fidivs
mov
cmp
lret
ja
fsubp
jl
or
or
fisubs
dec
and
push
add
cmp
sub
fwait
inc
cmpsb
mov
inc
inc
out
lret
push
sbb
ljmp
mov
pop
es
inc
sti
and
js
or
mov
mov
lahf
mov
ds
icebp
ret
std
and
das
sbb
xor
sbb
insl
rolb
jg
int
jae
scas
push
sub
dec
ds
xchg
mov
cmp
and
jl
or
out
inc
es
adc
adc
mov
ds
and
push
mov
popa
addr16
push
bound
dec
test
sub
aam
cmpsb
pop
fildll
orl
outsl
adc
adc
add
xchg
loop
mov
sbb
jb
xchg
das
adc
push
imul
pop
xchg
xorb
jp
xchg
inc
movsb
sbb
add
jmp
fs
in
rcrl
xor
pop
stos
mov
hlt
cmc
lcall
push
cmp
shlb
pop
mov
mov
lret
sbbl
sti
inc
mov
jae
aaa
inc
pusha
fsubrs
dec
cmpsl
loope
jo
addr16
test
popf
sarl
call
jbe
mov
mov
aas
sub
dec
and
sub
xchg
cld
neg
inc
fs
xchg
dec
mov
and
fadd
dec
xchg
movsl
inc
or
inc
mov
int3
jmp
pop
push
push
xor
outsb
jl
stos
out
outsl
adc
rcrb
push
and
roll
ja
fstl
and
clc
call
nop
mov
cs
dec
fdivrs
lock
std
imul
imul
cltd
inc
scas
mov
int
pop
and
hlt
push
leave
or
outsb
notb
push
sub
pop
inc
outsb
lock
and
mov
cmp
cmp
mov
es
cs
mov
lahf
add
call
daa
sbb
movsl
push
pop
pop
jo
rcr
and
mov
mov
fmuls
sti
pushf
fmulp
pop
fldl
mov
pop
sub
cmp
pushf
cmc
mov
in
movsl
add
aas
jbe
mov
std
dec
ss
push
push
cmp
jg
fcoml
nop
loopne
les
inc
addr16
mov
xchg
int
popf
es
mov
lods
mov
inc
into
jl
mov
in
fstps
or
sub
push
movsb
sarb
or
sub
cmpsb
dec
adc
dec
gs
cmpsb
les
icebp
ss
jne
sub
lret
sbb
cmp
add
mov
insb
repnz
mov
out
data16
ror
ljmp
addb
int3
in
fimull
push
iret
aad
out
sbb
inc
mov
shlb
cmc
cltd
lret
add
ret
out
cmc
lds
xchg
jne
daa
pop
rorl
ds
pop
pop
aaa
push
mov
std
ret
out
es
testl
and
pop
mov
mov
or
sahf
mov
sti
xlat
lods
sar
addr16
test
std
xor
rorl
jmp
bound
jb
dec
pop
push
pop
push
repnz
adc
enter
add
dec
push
xor
sub
jnp
xchg
leave
dec
xchg
dec
aas
mov
in
cmp
push
je
xchg
test
adc
mov
sahf
add
roll
out
sbb
push
data16
js
repnz
lahf
out
aaa
fsubr
xor
ss
fwait
das
jae
flds
jns
lahf
add
sarb
shlb
push
ret
cwtl
lcall
add
lahf
cld
repnz
dec
push
and
clc
cmp
xchg
push
or
call
cmc
scas
cmp
pop
rcrl
pop
mov
cmp
das
mov
xchg
leave
pop
icebp
xchg
mov
push
imul
sub
and
inc
sub
aad
pop
xchg
cwtl
iret
mov
jns
bound
fistpl
test
xchg
out
cmp
lcall
idiv
addb
call
sub
push
cltd
in
adcl
cmp
mov
pop
xor
ds
aad
sbb
dec
jge
cmp
inc
and
rclb
in
out
shll
mov
mov
sbb
adc
ret
xchg
lods
mov
mov
xchg
clc
sahf
sbb
xchg
mov
mov
and
xor
pop
repnz
pop
xchg
adc
inc
call
jp
rorb
xchg
push
pusha
insb
mov
pusha
sub
mov
pop
sbb
mov
fmul
mov
sti
and
pushl
or
in
les
in
inc
std
jle
inc
and
mov
sti
push
scas
pop
out
jb
loopne
xor
fwait
dec
dec
pop
and
jge
bound
ljmp
mov
test
shll
mov
jle
mov
js
xor
sbb
xchg
shl
aam
inc
dec
std
xchg
insb
add
cwtl
loope
cmpsl
loop
arpl
mov
mov
scas
inc
inc
es
test
mov
jne
add
or
test
add
fadd
out
mov
push
xor
inc
js
jno
lahf
and
mov
ja
mov
popf
loopne
ret
pop
mov
push
and
mov
aam
or
ret
sbb
jmp
pop
add
nop
aad
and
jl
sbb
sub
and
pop
sbb
cmp
cs
test
inc
out
roll
sbb
cmp
jp
add
pop
cmp
fisubl
in
aas
imul
in
push
inc
cmpsb
gs
sbb
lcall
jg
cld
jp
sub
inc
ret
pop
xor
imul
test
outsl
mov
or
lods
xor
and
pop
loopne
or
dec
mov
pop
xchg
in
stos
pop
sub
add
mov
in
mov
in
jle
xor
test
popl
inc
jae
xchg
aaa
adc
andnps
jge
out
mov
inc
enter
add
pushf
xchg
dec
dec
sbb
repnz
jge
movq
lock
pop
dec
cmp
sub
pop
xorl
inc
data16
and
fcompl
sarl
or
js
add
and
into
and
cld
call
sbb
xor
popa
or
pusha
adc
inc
jle
xchg
loopne
test
movsl
pop
fmul
test
ds
testl
adc
xchg
sub
imul
lods
les
adc
pusha
xor
stc
mov
cwtl
add
sub
xchg
xor
ja
sbb
pop
and
lds
mov
in
orl
and
xor
adc
gs
sti
inc
data16
add
pop
xchg
xchg
push
mov
es
aad
dec
mov
mov
jbe
inc
add
insb
fimull
dec
or
dec
and
pop
or
jmp
jmp
mov
inc
fldenv
dec
xor
loop
jo
jp
insl
dec
inc
stos
sub
movsl
and
dec
fisubl
or
jp
or
or
adc
mov
insw
out
scas
fmuls
out
jg
dec
faddl
fldl
jge
ret
inc
xor
test
jg
shlb
add
lea
mov
in
sarl
and
hlt
movsl
shlb
dec
sbb
les
nop
aaa
ss
jecxz
mov
add
mov
mov
xor
rcrl
fdivrs
das
mov
nop
sbb
xor
imul
scas
add
imul
inc
cmc
pop
add
sbb
mov
repz
mov
xor
cmp
mov
nop
jmp
mov
sub
je
fs
nop
jo
lods
dec
and
sti
shll
fldenv
clc
mov
xor
pop
movb
test
aam
lds
subb
movsl
push
out
ret
outsl
or
cmp
push
lea
mov
filds
mov
leave
fcmovne
shlb
lahf
adc
imul
pop
shrl
xchg
mov
lahf
dec
or
inc
push
je
mov
and
add
xchg
or
jecxz
ds
ret
adc
cld
xor
popa
cmpb
lcall
dec
lock
or
cmp
jne
mov
in
int3
out
aad
popa
sarl
or
sbb
push
addl
adc
mov
dec
push
notl
add
mov
mov
test
es
test
fidivrs
lods
xor
fbld
les
dec
mov
mov
aas
inc
sbb
cmpsb
cmovge
das
insb
inc
adc
clc
cmpsl
mov
enter
inc
jmp
and
scas
cmp
std
or
sbb
and
add
ret
xor
xor
mov
mov
add
pop
or
lea
dec
or
lock
cmpsl
cli
dec
dec
stos
mov
stos
adc
pop
xchg
fisttpll
jge
push
movsb
cs
pop
inc
add
mull
jnp
test
add
xchg
dec
jg
ja
ljmp
pop
bound
xchg
add
int3
cli
mov
push
adc
dec
jbe,pn
or
fnstenv
mov
std
arpl
adc
adc
dec
es
push
pop
leavew
cmp
dec
sbb
mov
icebp
stos
outsl
insb
icebp
in
aad
xchg
push
push
lock
lds
scas
out
or
xchg
push
mov
adc
and
cltd
stos
dec
lods
cmp
jnp
push
bound
xor
inc
jg
mov
scas
fnstenv
inc
adc
adc
sub
push
ds
sub
sub
jbe
mov
push
add
xor
fsub
jg
cmpsb
inc
in
das
cld
sarl
xchg
rorb
lret
rol
popf
dec
jmp
pop
scas
sbb
filds
mov
iret
shlb
cli
adc
fs
xor
jbe
fisubl
scas
mov
cli
loopne
mov
dec
cmc
sub
mov
mov
int
insb
dec
xchg
test
adc
add
mov
lock
jne
lret
std
mov
pop
xor
sbb
dec
cmp
pop
inc
sbb
mov
frstor
xchg
push
fmull
cld
insl
les
in
mov
aaa
dec
sbb
lret
int
cli
fldt
cmp
push
sub
add
roll
cmp
push
neg
mov
ret
cmp
cltd
or
je
cmp
insb
jg
nop
sub
stos
push
sbb
mov
sub
xchg
inc
int3
mov
mov
pop
fists
js
mov
popa
sar
mov
movsl
stc
ss
mov
sbb
mov
or
addl
mov
dec
daa
call
negl
jno
lods
aaa
scas
test
cwtl
mov
xor
mov
loop
add
inc
fcomip
mov
xchg
pop
add
rol
lret
dec
fstpl
aaa
mov
inc
adc
mov
lret
fwait
shl
mov
push
push
mov
aas
jae
test
jmp
sub
inc
dec
push
and
sbbb
sub
or
mov
jno
enter
mov
push
or
shlb
or
es
mov
jg
es
lods
cmp
xor
std
test
lret
pop
dec
xor
rcrl
jb
rclb
cmp
adc
repnz
xlat
or
push
je
ja
lret
jo
xor
rorl
inc
out
push
add
pop
les
fcompl
out
mov
dec
sub
dec
cs
scas
ret
lea
ja
fldt
clc
add
fwait
push
in
xchg
cmp
lock
inc
push
cmpsl
mov
sub
pop
and
incb
push
test
into
adc
cs
adc
pop
inc
add
repz
dec
int3
mov
jne
xchg
mov
fs
and
xor
push
push
add
mov
jb
bound
pop
ret
mov
repnz
cmp
movsl
out
je
cmp
cmp
mov
je
xchg
hlt
xor
imul
mov
pop
inc
mov
imul
call
fidivrl
adc
insl
inc
test
adc
outsb
pop
dec
gs
or
outsb
lcall
dec
mov
mov
mov
push
jp
mov
fisubl
dec
jbe
popf
inc
or
aam
cmpl
mov
cmc
add
mov
ret
pop
into
and
shr
jge
sbb
xchg
std
push
push
cmc
lock
xchg
pop
mov
xor
inc
mov
ss
addl
in
pop
xchg
hlt
xchg
les
movsb
outsb
call
adc
iret
movsb
clc
shlb
ss
mov
dec
pop
adcb
outsb
xchg
mov
out
or
ja
cli
dec
cmpsl
sub
and
cmpsl
aam
je
push
daa
xorb
push
js
imul
pop
movsl
stc
mov
mov
pushl
cmp
loopne
adc
mov
std
outsl
push
stos
pop
xor
in
and
mov
stos
roll
and
cmpsl
push
pop
shl
and
pop
mov
jmp
jae
push
cmp
shrl
aaa
insl
in
or
add
test
xor
dec
fdiv
cmpsl
add
dec
sub
jae
stc
sbb
xchg
mov
jns
dec
push
gs
inc
inc
or
cmp
ss
and
les
xchg
in
into
jle
push
jno
mov
dec
push
in
pop
subb
movsb
mov
int3
mov
dec
xor
insb
jp
xor
cmp
test
out
jmp
icebp
push
push
and
vmwrite
xorb
dec
or
in
or
pop
dec
and
sbbl
and
shlb
lcall
mov
inc
xchg
fucom
push
stc
outsl
pmullw
and
dec
loop
mov
daa
cltd
mov
pop
lods
imul
inc
shll
repz
xchg
cli
xor
jl
cmp
dec
lret
jge
ret
xor
mov
jg
loope
adc
jl
movsl
imul
std
push
ret
cld
or
lods
repz
xchg
cmp
mov
fsubs
mov
mov
push
into
dec
test
and
outsl
frstor
leave
rcl
movsb
test
nop
sbb
xchg
push
in
sbb
cld
xchg
inc
cltd
add
and
mov
xchg
push
scas
fdivr
aad
adc
out
ret
add
dec
neg
inc
jne
gs
xchg
int
adc
xor
es
inc
mov
add
cltd
add
push
movb
inc
mov
sub
js
and
mov
pop
and
mov
push
pop
mov
popf
sub
cmpsl
mov
push
mov
jne
fisubl
out
pop
xchg
mov
fscale
in
scas
popa
out
push
test
out
and
aad
push
cs
int3
loopne
jmp
sbbl
cmp
and
adc
or
xchg
xor
outsb
jae
adc
xchg
shlb
data16
gs
or
cmpsl
out
or
add
add
jecxz
jbe
out
cmpsl
pop
and
or
hlt
out
ja
scas
xchg
mov
sarl
outsl
or
popf
push
xor
cmp
mov
jae
out
push
jmp
cld
neg
rcrb
push
sbb
test
pop
ret
sbb
fisttpll
pop
adc
and
insb
xor
mov
out
mov
insb
inc
stos
push
in
adcb
fisubs
popa
dec
xchg
stc
fadds
cmp
mov
ret
sub
xor
repz
mov
sub
das
dec
adc
mov
push
sub
inc
cmp
push
xchg
and
lret
sahf
rcll
add
adc
stos
xor
jno
adc
mov
jb
jp
loope
mov
xchg
stos
stos
aaa
btr
or
pop
pop
pop
jbe
sahf
cmp
repnz
lcall
cmpsb
cwtl
or
je
bound
jecxz
mov
mov
js
jl
cmp
lds
and
loopne
inc
add
das
shrl
and
lcall
insb
hlt
add
outsb
or
stc
push
int3
inc
dec
ud2
pop
inc
fidivl
jg
xor
cmp
ss
jge
dec
cwtl
mov
mov
jecxz
inc
fbld
sbb
fbld
addb
test
push
arpl
aam
pop
lret
mov
stos
aaa
sahf
inc
ljmp
jns
cmc
inc
sbb
jl
stos
clc
fistpl
mov
and
push
int
dec
sti
testl
adc
push
enter
les
or
gs
inc
std
mov
sbb
add
and
fwait
push
xor
mov
pop
pop
inc
sbb
mov
arpl
call
gs
fwait
nop
mov
insb
daa
adc
in
sarb
not
xchg
shr
lea
fsubrl
adcl
test
or
mov
dec
cs
mov
in
mov
and
in
jl
xor
data16
sub
daa
ss
mov
iret
lahf
dec
cmp
pop
test
fdivl
mov
xchg
mov
das
data16
push
test
mov
into
sbb
sub
cmpps
mov
lret
enter
inc
ja
lea
decb
jecxz
xor
fbld
fcoms
ds
hlt
sarl
lea
sub
fnstenv
and
cmp
add
xchg
daa
mov
add
mov
notl
xor
adc
into
inc
cltd
pop
xor
cmp
pop
roll
idiv
or
jge
cmp
push
mov
mov
lock
std
rcll
pop
add
popa
test
cmp
je
aas
leave
mov
lahf
inc
adc
mov
jno
adc
fwait
in
jl
pop
outsl
shrb
test
sbb
je
insb
ja
jne
jle
jns
into
mov
mov
cld
mov
cmpsl
lea
dec
mov
data16
sti
sbb
mov
mov
cltd
pop
xchg
mov
xchg
sbbl
jo
call
or
insl
lahf
das
ss
mov
loop
fsubr
ret
gs
or
cmpsb
push
xchg
push
mov
out
or
movsb
sbb
rclb
mov
cmp
add
int3
outsl
jge
dec
lock
stos
lock
lahf
sub
pop
push
sbb
or
jmp
push
sar
je
jbe
jle,pn
and
out
push
shrb
push
pop
bound
in
lods
fbld
cmp
roll
addr16
xor
mov
shlb
cld
adc
push
fimull
jecxz
fwait
lock
xchg
mov
int3
in
add
push
lock
xlat
jecxz
mov
shrl
mov
popf
dec
pop
fs
dec
nop
fnstcw
out
cmp
add
push
push
rcrb
push
hlt
data16
xchg
pop
push
sbb
inc
and
inc
div
push
pop
xor
xchg
into
mov
jns
cmp
pop
mov
nop
mov
xchg
and
je
pop
mov
xor
mov
loopne
leave
push
pop
aas
scas
lret
mov
cmpsb
scas
xchg
dec
xor
adc
xor
mov
aaa
popa
sahf
loop
adc
or
rorl
xchg
stos
in
adc
sbb
sub
imulb
enter
sub
jne
cld
push
aaa
pusha
loop
ds
sbb
cli
xchg
jo
sbb
add
es
icebp
setne
mov
scas
push
movsl
or
sbb
in
mov
imul
and
sbb
xchg
dec
icebp
insl
mov
pushf
push
enter
pop
ret
in
mov
imul
mov
insb
cmp
outsb
lahf
mov
xchg
mov
jecxz
dec
outsl
sub
push
jmp
jne
pop
pop
mov
lea
jecxz
gs
pop
std
mov
jle
pushl
adc
je
pop
dec
add
fstl
mov
inc
loop
xor
dec
lds
mov
or
stc
or
jl
pop
icebp
int
sub
inc
xchg
inc
push
inc
push
mov
mov
vmovaps
add
xlat
dec
cltd
outsl
or
push
into
into
enter
out
push
and
movsl
fisubl
xlat
test
inc
sbb
xor
jne
push
es
rcl
gs
lds
add
outsb
mov
and
sub
imul
sbb
imul
jne
pusha
icebp
push
push
xchg
or
xor
lea
mov
fwait
jo
jb
je
mov
xlat
mov
stc
mov
mov
dec
out
push
pop
lds
mov
dec
adc
push
or
shl
mov
out
jle
dec
dec
les
lahf
or
jl
xchg
xor
outsb
mov
idivb
shr
jbe
outsb
add
jge
pusha
lcall
imul
and
dec
int3
imull
jnp
mov
pop
push
int
loopne
sub
pop
mov
fcmovb
pop
enter
shll
pop
mov
cld
jbe
sbbb
test
cmp
mov
pop
push
dec
adc
xchg
jecxz
push
mov
std
mov
sub
sub
mov
jmp
xlat
icebp
out
and
mov
shll
aaa
add
movsl
xor
mov
adc
adc
jp
and
xchg
aaa
cmp
aam
test
dec
jg
gs
lret
notl
lcall
cmp
nop
inc
movsl
loopne
sub
pop
hlt
nop
insl
and
push
mov
mov
add
jp
push
mov
cld
ret
imul
test
into
icebp
cli
jecxz
pusha
je
mov
stos
mov
inc
jo
adc
lods
xchg
in
sub
pop
rorl
cmp
adc
xchg
inc
popa
mov
dec
xor
pop
cmp
loope
fwait
hlt
adc
jl
roll
pop
fidivl
mov
cwtl
out
push
jbe
stos
mov
dec
aaa
rclb
mov
add
or
pop
adc
in
in
sbb
lret
rclb
xchg
fistps
out
das
test
stos
jg
scas
clc
mov
fadd
mov
add
mov
xchg
mov
or
or
movsb
pop
pop
cli
scas
inc
pusha
pop
dec
lcall
sub
push
js
int
xlat
push
enter
fimull
or
stc
xchg
or
sbb
enter
ds
inc
dec
jle
sub
xor
je
jge
in
cmp
in
fisubrs
mov
in
fdivrl
cmp
xchg
push
push
fmuls
mov
mov
and
scas
dec
pusha
pushf
adc
xchg
cli
stos
jae
in
fs
es
cltd
pop
push
pushf
les
jecxz
shl
test
or
mov
dec
stc
mov
in
or
push
mov
insb
cld
dec
sub
movsl
mov
out
push
out
sbb
push
xor
adc
call
lret
xchg
cltd
pop
mov
add
scas
xchg
clc
mov
clc
scas
out
push
xor
fcompl
jmp
mov
sbb
aas
movsb
or
pop
mov
mov
ja
push
cmp
jp
xchg
jle
fsubrs
popf
into
nop
mov
mov
mov
mov
in
shrb
cli
decl
in
pushf
add
test
xchg
mov
pop
rcll
xchg
icebp
clc
scas
idivl
adc
sahf
xchg
cld
hlt
clc
imul
mov
mov
js
add
sbb
hlt
pop
mov
in
or
sub
out
sti
cmpsb
je
jecxz
andb
xchg
xchg
and
ljmp
inc
inc
std
sbb
movsl
popf
js
jecxz
dec
cmp
dec
mov
and
sahf
mov
pusha
sbb
sbb
mov
jle
lds
fcmovne
inc
cltd
mov
sbb
fwait
mov
mov
cmp
mov
fistl
cmc
mov
cmp
jecxz
xchg
fdiv
scas
mov
jb
movsl
aaa
cmp
sub
mov
cmp
and
jne
ret
aad
dec
add
cmp
pop
or
or
test
cmp
cmp
add
stos
in
add
fmull
insb
mov
push
xchg
xchg
add
inc
fldt
je
in
dec
jbe
push
insb
xchg
cmc
adcl
sub
scas
jbe
fcompl
mov
sub
mov
xor
inc
outsb
lds
ja
leave
sub
dec
out
jnp
mov
stc
rorb
sarb
xlat
mov
mov
jmp
sub
xchg
cmpsb
aam
and
call
add
sahf
dec
arpl
xor
testl
sub
adc
test
xchg
jg
dec
or
call
stos
sahf
gs
arpl
xor
dec
fmul
push
addb
ljmp
push
ss
stos
or
lahf
sbb
test
add
call
fsubrl
stos
mov
pop
rcrl
cli
and
push
lret
inc
or
mov
imul
cmp
daa
xchg
into
mov
jno
sbb
pop
xor
icebp
mov
out
sbb
jne
es
sahf
iret
adcb
lcall
jmp
call
fs
jmp
rclb
repz
call
add
scas
dec
scas
xor
iret
repnz
rolb
ljmp
in
mov
ret
ficompl
xor
iret
and
xlat
push
jo
cmp
jb
jae
fwait
movsb
adc
pop
jns
pop
add
lret
sahf
hlt
xchg
int
push
out
nop
int
cmc
pop
mov
mov
shl
push
rcr
lret
fs
xchg
insb
into
xchg
sub
pop
test
subl
insl
outsl
lock
movl
pop
xchg
xchg
pop
mov
jo
movsb
mov
mov
adc
add
or
cli
pop
ret
insb
adcl
hlt
int3
into
adc
ret
out
dec
xchg
pop
jl
data16
orl
sbb
fstpl
popa
xchg
loope
push
push
loopne
leave
aam
add
pop
ret
cld
insb
pop
xchg
xchg
cmp
scas
shlb
pop
lret
sub
mov
arpl
push
push
xor
movsb
jne
xor
fisttps
das
out
or
xor
push
adc
cmp
dec
inc
sarl
addb
movsb
cmp
fcmovnb
shll
or
xor
jb
in
sbb
sbb
lock
jmp
mov
loope
adc
xchg
lahf
pop
jne
out
jecxz
jne
inc
xchg
add
mov
push
es
imul
sbbb
xchg
aas
mov
mov
int3
setno
mov
adc
pusha
inc
outsb
xor
fptan
mov
pusha
dec
xchg
add
dec
loopne
outsb
je
loop
mov
call
sldt
dec
ss
or
das
mov
inc
jecxz
fldcw
inc
pop
daa
call
fbstp
insb
jae
or
mov
mov
in
sti
daa
loope
cld
insl
daa
cli
push
and
icebp
js
cmp
push
mov
jne
mov
dec
pop
jbe
movb
mov
inc
mov
fmul
jno
push
inc
fistl
outsl
dec
xor
pop
rorb
in
pusha
clc
popf
iret
xchg
sub
cmp
shrb
test
imul
mov
pusha
lret
cmp
add
ds
mov
fbstp
fadd
or
xor
inc
xchg
int3
les
push
and
mov
sbb
mov
jbe
sub
cmp
dec
dec
adc
ficompl
xorl
jp
xor
mov
ret
add
sbb
leave
xchg
inc
shlb
addr16
iret
and
divb
sub
std
jle
pop
pop
jbe
dec
cmpsl
pop
push
push
mov
sahf
cmp
ss
xchg
adc
dec
add
lcall
inc
sub
jge
out
cmp
ja
enter
fwait
fs
in
push
jle
popa
mov
je
push
insl
mov
dec
orl
mov
sbb
dec
jg
xchg
and
repz
xor
jp
inc
push
and
popa
jo
add
fmul
or
sub
stos
aad
sarb
out
test
cltd
jae
mov
mov
ret
adc
mov
rep
stc
adc
std
xchg
fs
fwait
insb
push
jno
and
mov
mov
push
mov
pop
into
adc
repz
divb
jl
cmp
push
lahf
sbb
popa
push
fnstcw
and
dec
lods
call
dec
loop
scas
fcomi
sub
int3
or
shr
testb
dec
mov
lock
aas
lcall
jge
hlt
test
sbb
mov
jmp
fs
push
xchg
push
andb
push
lds
jg
test
sti
mull
inc
push
sarl
lods
xchg
jne
dec
xor
cmpsb
sbbb
push
cwtl
mov
sbb
mov
in
notl
xchg
fildl
jne
cmp
jge
scas
inc
mov
fsubl
test
jbe
push
or
adc
lods
dec
push
mov
std
out
lock
push
lea
inc
lret
pop
cmpsb
pop
xchg
roll
call
push
lea
sbb
testl
inc
inc
aad
mov
jmp
dec
popa
sub
enter
xchg
or
enter
mov
fcomip
nop
pop
pop
push
fwait
fwait
cld
call
cmp
out
or
xchg
int
inc
dec
cmp
cmpl
popa
and
dec
pusha
imul
add
fwait
mov
mov
sarb
push
sub
jmp
and
mov
sub
sbb
jg
arpl
push
testb
inc
xchg
gs
push
mov
pop
pop
pop
test
lcall
and
scas
push
mov
mov
mov
shrb
xchg
sbb
adc
arpl
push
icebp
push
or
add
inc
es
pop
out
stos
iret
cld
ret
movsb
fcmovnu
into
xchg
mov
inc
and
inc
mov
push
nop
lret
inc
sbb
and
imul
or
inc
mov
iret
cmpsb
dec
rcrb
lcall
fwait
inc
inc
mov
xor
imulb
cs
cmc
adc
xchg
aaa
mov
ljmp
xor
adc
mov
into
test
xchg
fwait
loope
inc
pop
dec
xor
shlb
shrb
fisttpl
and
cmp
addr16
arpl
push
xor
sub
push
clc
cmp
mov
movsb
xor
xchg
mov
pop
aad
push
pop
cmp
loop
mov
popf
mov
mov
dec
pop
mov
insl
adc
clc
dec
xchg
jle
mov
push
cwtl
push
cli
adc
aad
scas
mov
xor
or
in
xchg
iret
cld
fldenv
or
pop
sbb
loop
or
jecxz
mov
mov
push
insb
js
dec
pop
or
push
mov
xor
xchg
pop
rorb
inc
add
mov
out
or
cld
hlt
mov
or
cld
and
mov
pop
xchg
cmp
notl
lret
add
sub
aad
icebp
cmp
mov
faddl
rcll
fistpl
outsb
mov
out
outsb
sub
loope
jg
jle
jg
jns
in
movsb
bound
sbb
repz
rol
jle
pushf
popf
dec
mov
outsb
lds
fldlg2
fidivrs
push
rorl
js
xorb
lcall
mov
pop
xor
ficomps
mov
iret
pop
shl
adc
jmp
sbb
sub
mov
rolb
pop
cmc
jbe
fs
inc
leave
dec
in
aaa
pop
sahf
in
repnz
cmpsl
es
jl
jg
inc
push
pop
and
mov
sub
call
mov
mov
ljmp
mov
adc
mov
fucomp
sbb
jnp
pop
xor
lahf
mov
dec
or
mov
in
push
sbb
jnp
or
rcrl
push
mov
cmp
lcall
push
enter
scas
and
fstps
mov
lcall
inc
in
push
jno
push
cmpsb
scas
sbb
leave
out
fbld
push
test
push
xchg
mulb
or
pop
adc
lea
sub
out
or
jg
push
vmovd
popa
add
jge
jns
lea
adc
mov
sbb
test
out
xchg
push
jmp
mov
stc
jae
int3
jl
inc
ja
mov
adcb
aas
ljmp
xchg
nop
fidivrs
stos
subb
mov
inc
adc
pop
jo
and
or
xchg
add
sub
rcrb
ds
clc
jmp
movsb
dec
in
add
sub
sub
outsb
iret
push
push
dec
pop
sub
jbe
js
jne
loope
loope
repnz
insb
mov
ret
iret
shl
jb
mov
fs
jb
push
mov
jnp
mov
rcl
sbb
js
xchg
lret
xchg
cvtps2pd
xchg
push
insb
imul
adc
xor
or
cmp
shl
jb
or
cli
pop
je
inc
pop
and
push
cmp
loopne
dec
cmp
outsb
push
idiv
enter
repnz
movsl
and
inc
fs
and
mov
lcall
leave
fcmovnu
call
inc
push
xchg
or
loopne
aas
push
xlat
cli
out
xchg
ret
mov
dec
add
scas
pop
sbb
popf
stos
or
aaa
mov
xor
xor
push
jae
inc
rolb
lock
cmpsl
into
test
sahf
jne
ds
jmp
pop
test
test
dec
cwtl
clc
jecxz
inc
mov
add
cld
repnz
xorb
mov
and
das
aas
das
ja
push
xchg
outsb
imul
imul
mov
jmp
sub
out
dec
mov
bound
loope
pop
enter
std
mov
idiv
cmp
iret
pop
dec
lds
mov
sti
fs
jo
inc
ss
xchg
insl
cmp
cmpsl
and
adc
mov
nop
xor
inc
dec
jle
pusha
aas
or
and
test
mov
or
jbe
int
int
cld
in
add
adc
mov
push
xlat
or
cmc
pop
aad
in
inc
scas
jae
dec
in
xchg
ret
imulb
push
sub
and
dec
sahf
cwtl
insl
in
out
and
push
adc
sub
pop
dec
data16
push
data16
push
test
sub
inc
in
clc
sbb
mov
arpl
mov
xchg
int
adc
and
movntps
les
les
jp
mov
jnp
mov
xor
adc
dec
jno
fdiv
stos
fs
jp
mov
orl
or
jne
out
mov
pop
sbb
xor
pop
sahf
add
fcoml
sti
pop
pusha
jae
mov
loopne
int3
sub
cmp
xchg
popa
mov
xor
push
js
mov
sbb
lret
mov
jecxz
sbb
or
or
xchg
mov
aam
mov
push
sahf
push
cwtl
or
pop
lds
or
inc
cltd
jle
inc
sti
sahf
ret
loope
bound
adc
mov
sub
or
jnp
mov
les
pop
icebp
mov
or
icebp
popl
xor
cs
pop
ja
xorl
popa
test
mov
lods
mov
inc
lret
cmp
mov
pop
arpl
aad
mov
pop
adc
xchg
dec
insl
mov
popf
iret
and
mov
inc
aaa
fwait
mov
jne
aad
cld
testl
dec
int
fmuls
scas
sahf
dec
orb
test
cs
push
jp
jb
push
lds
sub
push
mov
std
or
sub
int3
lods
sar
and
inc
loope
rclb
ret
in
lahf
mov
es
ret
push
imul
jno
fwait
in
fcmovne
jnp
scas
and
in
mov
js
lea
aaa
aam
out
xchg
add
std
dec
ljmp
bound
add
in
or
fnsave
dec
jl
cmpsl
aas
xchg
dec
xchg
adc
sti
outsb
test
jg
dec
outsl
jecxz
inc
xchg
jg
cmp
lods
adc
inc
push
stc
insl
mov
ss
mov
ret
cli
xor
aad
pop
inc
xor
in
addr16
mov
pop
popf
ror
pop
mov
sub
push
push
gs
dec
push
dec
mov
sbb
push
sub
and
lds
xchg
repz
js
fnsave
fstpl
test
sub
sub
add
out
rorb
jl
dec
xchg
add
outsl
clc
arpl
imul
out
js
pop
rorl
es
adc
push
repz
scas
push
iret
adc
push
or
imull
dec
add
popf
scas
lock
push
mov
cmpsl
inc
and
out
push
lock
fisttpll
mov
sbb
cs
fiadds
xor
cmpl
es
jns
out
push
leave
ds
fmull
dec
cmp
inc
pop
stc
mov
lods
enter
xchg
pusha
jge
xor
mov
xchg
or
add
xor
add
cs
icebp
jb
inc
dec
cltd
jecxz
xor
push
movsl
loope
cmp
roll
mov
and
xor
sahf
lea
lahf
push
in
divl
aaa
mov
jae
adc
les
sbb
and
lret
out
ja
and
loop
dec
push
popf
mov
jbe
pop
jmp
in
stc
movsb
jp
sbb
orl
jb
xchg
mulb
imul
ljmp
sub
pop
and
cwtl
sub
cld
cmp
mul
jge
jl
aad
jo
xchg
pop
scas
push
sub
loope
icebp
mov
add
xchg
ljmp
leave
mov
popa
jb
and
xor
xchg
mov
cltd
loope
adc
sarl
in
mov
sbb
mov
leave
movsl
stos
and
cld
lahf
xchg
sbb
jbe
push
dec
jmp
fstps
push
daa
mov
xlat
aam
inc
push
ret
pop
cld
stos
cmp
loope
loop
xchg
xor
push
aas
pop
add
pusha
mov
or
je
lock
dec
shrb
or
shll
pop
das
subb
push
loope
mov
cwtl
outsl
jb
ja
dec
push
lods
and
dec
pop
insl
xchg
xchg
push
sub
pop
fbld
movb
mov
lret
sbb
pop
mov
addr16
xchg
and
stc
cmp
mov
xlat
out
sub
in
jno
cmp
push
jmp
push
dec
test
les
push
xor
xor
cltd
lock
cmpsl
jnp
sbbl
xor
sti
movsl
cmp
xor
aaa
sbb
push
xor
cmpsb
inc
adc
cltd
cld
bound
lret
pop
scas
loop
ret
push
enter
nop
xchg
mov
std
icebp
les
fnstsw
mov
cmp
xor
cltd
sub
jle
push
dec
mov
out
sbb
sbb
sahf
mov
add
xlat
and
in
sahf
addb
mov
sti
push
cs
mov
push
clc
jp
mov
or
mov
mov
lock
mov
loopne
scas
mov
mov
dec
lock
loope
cmp
mov
daa
xor
popf
addl
stos
cmpsl
jbe
in
arpl
fldenv
pop
popa
dec
pop
mov
je
int
mov
in
clc
shll
mov
fcoms
std
pop
add
cmpsl
hlt
je
ficomps
dec
inc
and
adc
xlat
xchg
cmp
push
or
add
lret
dec
je
aad
jmpw
inc
cmp
adc
and
popf
jb
aam
addr16
inc
cmc
dec
addr16
xchg
popa
mov
imul
pop
js
push
idivb
mov
ficoml
push
gs
ja
sbb
lcall
and
sub
adc
pop
aas
es
adc
clc
addr16
adc
in
rorb
out
inc
int3
push
pop
mov
sub
in
jbe
mov
mov
rdtsc
pop
in
lock
int
popa
mov
flds
and
jmp
push
lock
mov
fcoms
pop
inc
inc
call
pushf
sbb
data16
mov
in
cmpsb
lahf
adc
or
or
sbb
sete
jl
daa
add
aad
adcb
xor
ss
and
push
imul
push
jns
gs
and
push
test
loope
icebp
push
mov
ficoml
inc
call
ror
xor
mov
pop
push
cmp
rcrl
push
into
dec
in
and
inc
fildll
mov
push
mov
sub
sub
cmp
mov
dec
dec
xor
clc
xchg
inc
fimuls
xor
shrl
push
and
pop
and
cwtl
pop
jg
shr
out
push
jge
mov
sbb
int
loopne
mov
dec
repz
loope
lret
rcrl
jge
jb
dec
leave
repz
in
xchg
push
scas
aad
lret
inc
pop
test
sti
scas
icebp
ret
lea
lahf
sub
xor
add
ret
enter
mov
jmp
mov
enter
ret
addr16
ret
incl
dec
mov
xor
iret
jle
or
shl
push
add
lahf
and
fs
int3
insl
hlt
icebp
or
push
push
pop
xlat
add
xchg
push
mov
xchg
ds
addr16
xchg
andb
xor
cmp
movsb
cmpl
sbb
inc
adc
cs
pop
leave
call
xor
mov
push
push
adc
movsl
sarb
push
lcall
xor
xor
cmpsb
push
shrl
add
imul
pop
ja
inc
rcrb
mov
fistps
push
es
sub
or
xchg
data16
mov
xchg
mov
mov
das
dec
and
ljmp
out
cld
fwait
xor
or
fsubr
sub
xchg
xor
sbbb
mov
and
push
xor
cmp
add
in
jb
mov
cmp
push
adc
out
rcr
repnz
jecxz
lret
ss
mov
push
mov
jg
xlat
sub
mov
inc
dec
lret
push
in
loop
stos
push
sub
add
inc
xchg
loope
cs
leave
addr16
cmpsl
lret
pop
sbb
sub
mov
adc
dec
in
mov
stos
sbb
andb
jne
adc
leave
outsl
rorl
sbb
add
xchg
or
adc
sti
loop
repz
das
inc
xchg
push
sbb
inc
mov
and
add
mov
ljmp
inc
mov
ficoml
pop
dec
fs
sbb
sahf
ss
sbb
and
push
jmp
mov
fstpt
mov
jae
mov
pushf
sbb
cmp
mov
cmp
and
mov
aam
ja
icebp
jb
ja
pop
pop
ret
dec
jle
sti
sub
in
cld
cltd
pop
pusha
jnp
add
pop
mov
loope
xchg
lahf
jnp
cmp
fadd
enter
lret
push
or
push
xor
adc
popa
movl
aad
insl
popa
mov
cmp
clc
jp
or
repz
mov
xor
jo
loop
pmuludq
loope
popa
xchg
or
cli
ja
cltd
outsl
out
sti
mov
sbb
xchg
sub
fldt
pop
cmp
cmp
mov
pop
inc
ficoms
cmp
in
adcb
test
leave
mov
fadd
jnp
adcb
jne
pop
repnz
mov
mov
cli
hlt
or
andl
xor
xorl
mov
popf
xchg
and
test
rcll
mov
outsb
addr16
sub
lahf
sbb
mov
jmp
aas
popf
daa
mov
and
ja
mov
xchg
into
out
sahf
dec
fchs
dec
adc
jmp
inc
das
and
scas
lea
test
sbb
test
and
rolb
mov
mov
lret
icebp
es
enter
cwtl
ds
sahf
cmpsl
dec
sub
push
jo
test
mov
or
cmp
pop
nop
fnstsw
jb
repz
std
jg
pop
mov
imul
lods
ret
push
es
pusha
outsl
sbb
loope
push
push
rcrb
cld
cmpsl
mov
testl
cld
mov
divl
xchg
and
push
stos
ret
loopne
adc
xchg
shrb
mov
mov
lods
push
and
in
mov
shll
push
fdivrl
iret
push
jmp
aad
pop
mov
pop
fcmovnu
fadd
dec
fbld
push
stc
clc
add
push
and
xchg
in
hlt
rol
inc
xchg
dec
subl
mov
inc
fidivrs
sub
in
int3
clc
push
cmp
lods
cmp
mov
jge
xor
test
mov
xlat
aaa
and
sub
dec
push
lret
mov
inc
cli
push
mov
daa
cmpsl
pop
lock
call
cmp
xor
sahf
xchg
out
sub
pushf
dec
pop
push
or
mov
sti
bsf
in
adc
imul
pop
pop
arpl
mov
mov
sbb
push
stos
mov
js,pt
das
jb
jb
jns
sbb
clc
scas
cwtl
push
xchg
hlt
scas
aas
ljmp
mov
in
adc
idiv
push
mov
and
daa
adc
jecxz
mov
add
in
sub
lahf
pmulhuw
rcr
cmp
lret
and
les
push
ljmp
mov
inc
jmp
in
icebp
cmp
shrb
cmp
mov
divb
cmp
outsb
mov
mov
lock
xchg
push
rcrl
int3
in
mov
or
ret
push
jbe
in
stc
js
stc
cmp
scas
rcll
sub
stc
jnp
jp
jecxz
ja
ret
aaa
loop
test
mov
popf
add
hlt
cmp
and
add
mov
cwtl
push
jmp
mov
xchg
je
or
inc
dec
bound
push
ja
and
inc
sub
into
shll
rcll
and
sbb
pop
push
aas
pop
and
push
lahf
inc
cmpsl
dec
mov
hlt
mov
out
add
inc
ds
test
shll
jmp
cwtl
and
std
mov
or
sub
jne
jp
outsb
sahf
stos
pop
add
pop
jo
cmp
lock
mov
test
movnti
mov
jo
or
mov
fwait
popa
pop
fnstcw
ljmp
sub
inc
push
inc
xor
ret
pusha
mov
mov
fsubr
push
out
and
mov
test
out
mov
out
arpl
gs
std
cmpb
jecxz
out
nop
inc
jl
dec
notb
sbb
and
pushl
icebp
add
nop
pusha
inc
mov
xchg
aas
dec
inc
cmp
cmpl
jne
add
lods
add
jg
stos
lods
pop
mov
jae
cmpl
and
mov
or
and
sbb
jae
test
push
sub
inc
out
lods
test
lds
lcall
imul
inc
cltd
outsl
cmpsb
loope
fistl
pop
dec
sbb
iret
out
lcall
or
test
inc
pop
sbb
insl
sbbb
pop
repz
xchg
fsubp
jne
sbb
stc
jo
pop
mov
popf
in
aaa
mov
xorl
pop
sbb
mov
imul
xchg
xchg
lock
fnstcw
sub
movlhps
shlb
roll
add
repz
jl
cmp
inc
adc
dec
imul
pop
insl
dec
lods
and
lcall
fdivrs
adc
pop
add
dec
mov
je
clc
jb
mov
pop
mov
or
in
sti
ss
in
sbb
out
outsb
enter
mov
scas
xchg
clc
mov
mov
jle
sbb
sbbl
jle
fists
adcl
or
pop
popa
push
int3
les
pop
push
fscale
lock
push
dec
rolb
inc
sub
sti
imul
or
cltd
dec
push
mov
sahf
cmp
clc
shr
lods
mov
add
push
inc
les
or
jmp
dec
fwait
push
outsl
cld
cld
lods
xor
jno
cld
dec
or
aaa
in
aaa
cmpsb
dec
test
mov
dec
push
outsb
ret
inc
mov
mov
pop
bnd
ljmp
xor
add
test
stc
cli
mov
or
pop
cmp
arpl
mov
mov
outsb
lock
mov
loope
mov
insb
push
fs
call
in
fwait
and
xchg
lea
mov
push
inc
cmp
out
arpl
cmpsb
cs
mov
cld
mov
jne
aad
mov
and
mov
sbbb
cs
adcl
cld
fucom
add
sub
sti
fcomip
ret
mov
push
ss
xor
pop
and
cmp
adc
popa
sub
fnstsw
inc
push
mov
pop
pop
std
add
adc
sub
sbb
test
and
mov
out
popw
cld
push
fbstp
roll
pop
cwtl
or
and
mov
add
aad
dec
aaa
pop
add
psubd
mov
cltd
jmp
push
dec
ds
aaa
cltd
dec
dec
mov
jns
pop
sbb
jl
jb
jns
daa
mov
cmp
dec
dec
scas
mov
push
dec
jb
ret
sbb
sbb
jp
in
pop
push
jmp
xchg
jmp
mov
in
add
sbb
insl
ljmp
std
jno
add
adc
or
repz
out
xor
push
push
cmp
sbb
in
das
in
sub
shll
popf
adc
adc
inc
pop
dec
cmp
mov
xor
leave
sbb
pop
popf
scas
aam
lods
add
mov
std
or
sbb
cltd
cld
shrl
popa
sub
lahf
or
das
dec
cltd
xchg
xor
aaa
aad
ds
mov
sub
mov
sub
add
sbb
ret
jge
xor
add
in
ds
and
sub
in
cmp
out
out
adc
xor
pop
inc
mov
add
les
je
dec
into
inc
movsl
sbb
test
movsl
dec
push
dec
sbbb
loope
imul
pop
mov
fcompl
aaa
jmp
xchg
jno
lock
lods
mov
mov
and
add
ja
nop
ret
fs
pushf
bound
xor
jge
sbb
ljmp
fnsave
adc
add
scas
inc
fs
xchg
sub
movsl
pop
push
fidivrl
xor
push
test
add
insb
and
rclb
sbbb
push
pop
inc
movsb
hlt
lock
insb
nop
mov
sbb
xchg
and
loopne
test
fmulp
cmp
decb
jbe
sbb
cwtl
mov
adc
or
mov
and
imul
xchg
xor
les
xor
cmpsb
or
std
mov
fldcw
outsl
and
jns
mov
pop
jnp
or
push
or
aad
xchg
sbb
lret
aas
sub
mov
ljmp
popa
loope
das
mov
adc
out
lods
or
add
add
jo
xorb
sub
mov
sti
pop
sbb
jmp
test
xor
mov
shlb
cmp
sub
jnp
ss
and
subl
dec
lock
scas
outsl
in
clc
dec
sbb
mov
je
pcmpeqb
inc
mov
push
mov
addr16
push
dec
jae
test
test
cmp
sbb
fidivs
lahf
inc
adc
lea
inc
aam
xchg
mov
push
ret
pop
xor
repnz
cwtl
out
sub
xor
in
dec
lret
iret
mov
xchg
test
rorb
mov
adc
cmpl
leave
adc
addr16
les
shr
mov
xor
xorl
data16
mov
push
push
mov
cmp
xchg
into
jo
ja
xor
cmp
movsb
pop
clc
jae
and
or
in
jae
push
mov
jb
add
mov
xchg
mov
cmc
jns
ss
mov
test
enter
xchg
fwait
mov
stos
fidivl
mov
scas
sbb
clc
pop
push
test
cmp
pop
or
in
or
and
cmp
mov
push
sarl
fmuls
fcmovbe
add
sub
jmp
add
push
divb
lds
roll
out
fdivl
in
and
fimull
nop
mov
inc
push
dec
stos
jno
cltd
adc
inc
jle
nop
ret
mov
jae
cli
and
stos
ja
sub
pop
cltd
cmpsl
sbb
jo
jle
xlat
test
out
stc
in
push
paddb
jle
nop
push
and
in
int
mov
adc
pusha
jp
sub
add
jmp
sub
mov
sub
jne
mov
pop
js
je
inc
mov
ds
mov
mov
test
add
xor
cltd
inc
mov
sbb
iret
add
int3
mov
mov
xchg
or
out
and
in
pop
icebp
pop
dec
sbb
stos
and
and
mov
loopne
jg
push
cmpsb
cmpsl
pop
cmp
push
and
pop
fs
in
dec
pushf
test
lods
add
sbbb
movl
in
jle
fdivs
inc
lahf
push
sbb
in
or
ljmp
aad
adc
call
pop
pop
test
rorl
dec
pop
jmp
pop
mov
xchg
in
sbb
sbb
jecxz
int
aaa
leave
out
mov
xchg
cmc
adc
pop
ud0
movsb
scas
loope
or
cmp
repnz
push
fstpt
loope
dec
or
sbb
mov
out
xchg
mov
leave
sub
cli
lcall
add
out
orl
add
sub
pop
rclb
jle
mov
orl
or
mov
idiv
xor
dec
outsb
push
movsl
jecxz
jae
lret
pop
mov
pop
out
adc
inc
mov
dec
and
pop
sbb
packsswb
lcall
cwtl
dec
ret
mov
fildl
and
xor
mov
in
add
mov
ret
xchg
movsw
sub
push
cltd
fwait
je
or
cmp
add
inc
shr
push
cmp
push
dec
sub
ret
lret
sbb
mov
xlat
in
pop
jge
sub
mov
pop
adc
add
inc
xchg
inc
push
idivl
cmpsl
cld
xor
ljmp
ror
or
ret
rep
rorb
pop
in
test
jbe
sarb
aam
and
or
decb
shll
addr16
sbb
pushf
sti
sbb
mov
fstp
or
xchg
inc
jmp
mov
imul
inc
and
xchg
push
out
inc
mov
pop
sti
sti
jnp
xor
inc
pop
imull
pop
fs
jmp
push
adc
dec
loop
popa
aaa
pushf
sbb
movsl
das
mov
into
dec
movsl
jg
test
and
dec
pop
inc
pop
push
jae
or
xor
xor
xchg
inc
test
mov
and
inc
mov
nop
sbbb
or
sbb
call
xchg
in
mov
mov
dec
cmp
add
in
jl
mov
pop
imul
fcoms
push
add
inc
scas
std
or
xchg
push
xchg
cmp
arpl
mov
or
push
xor
or
inc
pop
fs
call
jp
jg
movsl
push
mov
inc
out
push
out
popa
adc
loope
dec
loopne
lock
and
dec
pop
mov
push
and
frstor
cmp
inc
mov
outsl
stos
icebp
repz
iret
loope
pop
les
or
sbb
hlt
push
mov
and
sbb
cs
add
decb
inc
xchg
testl
mov
jb
cmpb
std
scas
jnp
pop
popa
loopne
in
fcomps
dec
mov
loopne
aad
adc
mov
sub
stos
test
push
xor
leave
popf
dec
jo
les
mov
repz
lods
je
pop
mov
ret
mov
push
lret
and
outsb
lahf
jnp
dec
cmp
inc
test
sahf
cmpsb
mov
les
idivb
mov
xadd
addb
mov
sarl
fldl
dec
xchg
dec
loop
xlat
sbb
mov
xor
lea
xor
clc
bound
add
xlat
mov
subl
push
aaa
jo
js
pusha
lret
movsb
mov
in
inc
sbb
add
push
fwait
out
enter
mov
in
test
mov
inc
push
dec
pop
addl
loope
popa
mov
lcall
jb
jle
mov
mov
sbb
pop
repnz
imul
call
stc
iret
fcomps
adc
outsb
fistl
leave
inc
lret
xchg
je
mov
test
iret
pop
repnz
bound
lret
sbb
aas
and
xlat
rorb
sub
scas
stos
mov
cwtl
push
out
xor
filds
mov
or
xchg
lret
push
ja
sub
dec
dec
je
out
mov
mov
or
cltd
test
pusha
mov
stos
add
stos
test
mov
adc
mov
pop
lahf
imul
jno
subl
bound
adcl
test
leave
std
mov
add
mov
fistpl
ds
pop
shrl
jo
mov
xchg
dec
jne
xchg
stos
jns
jmp
scas
mov
and
movsb
mov
jmp
and
ljmp
movsb
pop
daa
pop
xchg
adc
les
lcall
cmp
mov
push
inc
negb
add
jmp
les
add
filds
add
cwtl
outsb
clc
push
out
cmpsb
mov
popf
inc
cmp
cmp
out
mov
or
into
cmpsb
pop
jae
test
cmpsl
rorb
in
test
push
inc
jge
shrl
lret
mov
push
or
jle
lcall
imul
xlat
fwait
push
pop
repnz
sbb
lret
mov
inc
push
rcll
enter
jmp
mov
and
andb
ss
xor
test
sub
push
mov
stos
xchg
push
dec
test
adc
rolb
or
lahf
and
lahf
mov
out
int3
push
in
repnz
loop
enter
pop
cmp
mov
ffree
in
cmp
or
nop
sbbl
sub
pop
adc
xlat
in
fprem1
icebp
mov
pop
cmp
mov
call
mov
add
jg
jg
popa
call
lods
push
inc
or
lahf
aad
aaa
cwtl
in
mov
add
pop
jp
std
adc
adc
rcrb
jb
or
push
imul
sub
data16
das
push
push
movsl
pop
jbe
xor
mov
xor
push
cmp
insb
xor
movsl
outsb
lods
pop
jmp
js
pop
ret
pop
cmc
lcall
les
xor
jmp
add
sarl
and
sbb
or
enter
push
jp
mov
push
les
mov
push
xor
cltd
outsl
sub
adc
scas
jmp
adc
dec
mov
inc
dec
and
mov
cmpsb
cmpsl
shll
jae
and
int3
inc
leave
popl
xchg
ljmp
xor
cmp
lea
movsb
stos
adc
shlb
dec
bnd
mov
push
or
test
jns
fwait
ja
enter
pop
push
mov
out
fldcw
jno
push
cmp
jae
test
xchg
movsb
sub
sbb
mov
xchg
popf
fidivrl
sub
xorl
arpl
pop
jo
pop
xchg
stc
out
sub
out
loope
or
pop
mov
mov
xchg
dec
inc
inc
add
add
mov
lea
pop
mov
idivl
pop
mov
hlt
mov
push
xor
dec
psrlq
out
push
ja
jge
jnp
dec
adc
jnp
insl
scas
add
js
cmp
cli
leave
sbb
adc
mov
pop
repz
dec
mov
cmp
pop
jmp
lea
daa
xchg
sbb
ret
rcll
mov
inc
adc
add
xor
pop
mov
sahf
mov
notb
push
xchg
mov
sub
inc
mov
lahf
sbb
stc
mov
addb
leave
lods
push
adc
pop
push
call
jge
daa
test
stc
sbb
mov
pusha
fwait
adc
in
fbld
faddl
mov
clc
wbinvd
cmp
add
pop
repz
ds
xchg
imul
mov
cmp
fcompl
pop
mov
jle
fdivs
loopne
les
lods
sti
mov
pop
mov
mov
stos
outsl
loopne
cmp
shll
sub
in
out
push
add
add
jp
pop
push
jmp
mov
pusha
cltd
xor
stos
cli
movsb
pop
leave
pop
mov
ja
fistl
pop
ja
mov
cli
stos
inc
sbb
sar
jmp
pusha
fsubr
dec
fdiv
push
test
mov
cmpsb
pop
push
test
stos
aaa
mov
push
sub
rcrl
scas
and
xor
decb
ret
rcll
fwait
pop
mov
mov
jne
leave
push
pop
lods
sub
jmp
mov
and
in
or
ja
lahf
jmp
cs
jns
mov
sbb
sub
gs
dec
push
dec
adc
mov
call
mov
jecxz
int
cmp
xchg
mov
outsl
aas
aad
fidivs
mov
outsb
push
inc
orb
iret
mov
mov
mov
sti
repz
in
cs
repz
lcall
gs
mov
pop
add
dec
mov
icebp
push
sub
rorb
in
or
pop
mov
testb
es
stc
cmc
cmp
pop
hlt
adc
leave
stos
ret
sub
add
subb
out
aas
or
sub
push
or
fiadds
in
inc
push
cmp
loop
add
and
int
xchg
lcall
sub
test
ljmp
mov
pop
lret
add
add
test
push
mov
sub
xor
inc
mov
push
ret
js
xchg
jne
push
es
and
test
inc
insl
cmp
inc
inc
fs
push
icebp
in
fwait
cmp
dec
jecxz
mov
fisubrs
dec
movsb
cmp
jo
jle
sbb
daa
movsb
mov
fadds
dec
stc
loopne
add
lcall
or
or
sbb
insl
or
iret
adc
scas
dec
push
imul
lret
scas
xchg
aas
fnsave
jns
jno
adc
pop
pop
xor
or
cmc
shlb
inc
int
out
addr16
pop
aaa
dec
pop
mov
arpl
pop
fistps
dec
add
movsl
dec
pusha
call
repnz
fs
push
enter
out
imul
fistpl
pop
inc
fisttps
jo
pop
cmpl
jbe
sub
jp
sbb
cs
rolb
flds
or
sti
test
inc
sub
dec
nop
inc
jl
mov
add
mov
inc
jle
adc
imul
test
repnz
cmp
sub
jle
mov
sbb
xorb
lods
fcoms
cmc
popa
mov
dec
pop
xor
cmp
adc
sbb
mov
adc
mov
inc
popf
popa
gs
push
decl
je
aaa
xlat
and
add
and
sub
mov
cmpsl
xchg
add
jns
daa
dec
incb
cs
xchg
sar
in
js,pn
mov
popf
adc
push
lods
xchg
sbb
repnz
dec
xor
xchg
loopne
mov
gs
iret
and
inc
repz
mov
xchg
pop
jmp
and
je
int
mov
jno
imul
or
test
mov
jecxz
push
orb
and
add
mov
fildll
add
lods
iret
cltd
andb
ds
in
mov
lahf
pop
loop
jmp
and
bound
jne
cmpsb
jae,pt
leave
jle
push
lret
cltd
addr16
cmp
dec
arpl
pushf
ljmp
int
or
pop
xor
iret
jle
push
iret
ljmp
sub
sub
cmpl
inc
pop
cmp
jno
lret
jb
call
mov
dec
sbbb
loope
mov
mov
sub
jp
add
inc
mov
fdiv
rol
push
imul
imul
dec
out
cmpb
ds
jnp
xlat
jno
and
jbe
jne
mov
cmp
test
cli
adc
xchg
orl
sbb
je
lret
push
xchg
aas
adc
scas
dec
inc
xchg
inc
sbb
and
lret
mov
sub
cmp
out
inc
pop
shrb
xor
mov
jae
or
push
mov
imul
stc
push
data16
enter
jbe
rorl
imul
imul
xor
sbb
mov
mov
stos
imul
mov
ficoms
cmp
fstpl
test
les
jae
repz
gs
or
pop
xchg
jle
dec
lods
fnstsw
add
cwtl
lret
cmp
sarl
pop
call
out
fimull
push
popa
cld
jae
xor
ficompl
pop
jp
pop
les
lods
test
xchg
out
fisttps
jae
fucomi
jns
jns
clc
dec
lea
mov
aad
sahf
cltd
jecxz
hlt
out
push
sti
jmp
adc
popf
jp
aad
stos
lcall
jecxz
xchg
mov
outsb
enter
rolb
cmpsl
push
pop
cmp
mov
aaa
aam
xlat
fwait
je
iret
and
dec
push
pop
popa
jle
xchg
movsb
mov
pop
imul
stos
cld
push
sbb
xchg
dec
sahf
cli
sub
ss
out
pop
cmp
jp
pop
lret
scas
cmpsl
inc
cld
scas
inc
ret
push
mov
mov
xchg
xor
cmp
mov
adc
sub
add
ror
dec
or
lods
sbb
fists
cli
sbb
imul
pop
outsb
scas
jno
xchg
cmp
pop
fistl
cs
iret
adc
rcrb
ds
das
in
dec
mov
nop
pop
popa
sub
xchg
xchg
or
mov
ficoms
cli
insb
cmpsb
or
in
push
pop
aas
bound
or
scas
jmp
xchg
pop
dec
addl
push
inc
pop
adc
push
pushf
cmp
shl
jo
lds
sbb
out
les
xor
dec
in
xor
push
js
cmp
add
