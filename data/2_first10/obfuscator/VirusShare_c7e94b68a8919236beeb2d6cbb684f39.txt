xorb
xor
pop
xlat
out
cmpb
pop
push
outsl
hlt
mov
js
mov
repz
or
jnp
fiaddl
lret
xor
push
hlt
push
sub
adc
or
test
and
outsl
loopne
cmp
cmp
mov
mov
dec
enter
inc
lret
aas
shll
shr
adc
sub
repz
xor
xchg
mov
mov
pop
faddl
jo
add
mov
out
clc
int
sarl
insb
in
imul
lcall
dec
pop
mov
adc
testb
sbb
xchg
jbe
mov
in
mov
fadd
std
push
mov
shlb
push
lahf
cmp
dec
cmpsb
shll
in
cwtl
mov
or
inc
sbb
sti
mov
dec
rorl
nop
sub
jb
push
mov
lea
call
call
pusha
movb
call
xor
pop
std
pop
rcll
test
adc
in
mov
outsl
xchg
and
and
lahf
or
jne,pn
shrl
xchg
insb
mov
test
pop
dec
jae
jno
jg
repnz
out
dec
sbb
adc
rorb
add
add
or
add
add
add
enter
or
adc
adc
add
add
add
loopne
add
lret
adc
sbb
add
add
add
xchg
adc
cmpsb
clc
sbb
dec
inc
in
mov
lds
push
daa
pop
leave
subl
shrl
jno
mov
jecxz
insb
cltd
pop
mov
mov
aad
test
mov
add
out
xor
add
stc
jl
and
test
push
push
loope
mov
in
mov
mov
xor
aas
pop
icebp
nop
arpl
add
push
jne
or
push
ds
sbb
test
or
pushf
add
jo
push
bt
cmp
lea
jle
pusha
lea
jae
push
cmp
mov
cmp
call
movl
pushf
lea
jmp
jmp
rcrb
inc
cmpl
push
xchg
push
pop
inc
ss
popf
xor
jb
repz
shll
add
mulb
push
lods
leave
pop
bound
repnz
push
mov
push
push
push
outsl
mov
mov
xor
insl
mov
lods
xchg
inc
call
mov
push
inc
and
or
out
sbb
pop
in
pop
je
xor
inc
mov
lods
icebp
jb
jg
mov
adcb
negl
push
mov
in
xchg
test
aas
test
idiv
xchg
cmpsb
repz
test
imul
subl
mov
adc
loopne
jg
pop
ror
lods
add
mov
add
out
add
fnsave
jno
arpl
cmp
push
ss
adc
pop
sub
fwait
movsl
subl
pop
mov
arpl
pop
sbb
rorl
rcll
sub
shlb
sub
mov
xor
shll
jg
pop
ror
jge
cmp
mov
jge
out
jl
ret
or
test
stc
sub
add
int
mov
loop
mov
sar
and
cmc
andb
mov
ficomps
pop
mov
push
xor
int3
out
mov
cmp
in
ds
lods
lods
add
push
or
adc
fs
jne
movsbw
movb
movsbw
push
bswap
setg
bswap
lea
jmp
pushf
jmp
pop
in
lock
cmpsb
cmpsl
and
test
pusha
push
fsubp
sub
enter
sub
add
cmp
adcb
cmpsb
push
in
das
js
cmp
xchg
jae
popa
fisubrs
cmp
stc
cltd
jge
ja
scas
cmp
into
mov
lret
adc
pop
mov
adc
daa
fsubs
lock
faddl
pushf
mov
or
xor
xchg
adc
ds
mov
jno
sub
jae
popf
aam
adc
cmp
add
arpl
mov
dec
stc
movsbw
cmp
and
mov
test
cmc
bt
bt
add
cmc
movb
mov
stc
cmp
test
mov
movw
call
mov
pop
mov
jmp
call
jmp
inc
stc
xor
bt
mov
ror
clc
neg
call
push
jmp
call
pushf
lea
call
pushf
jmp
push
push
movl
pusha
jmp
push
movl
pusha
movb
lea
jmp
int3
popf
call
pushf
pushf
jmp
rcl
mov
test
push
cmp
jmp
movl
movb
movw
lea
jmp
mov
mov
call
pusha
movb
movl
pushl
pushf
pushf
lea
jmp
sub
clc
clc
pushf
pushf
repnz
call
shl
shr
mov
stc
pusha
pushf
bsr
add
shld
movl
neg
stc
sar
bswap
mov
sub
jmp
test
mov
cmp
push
sub
call
call
bts
sbb
mov
cmc
call
add
pushf
jmp
std
dec
xor
pop
inc
jne
inc
sbb
or
jb
lds
push
lock
repnz
adc
je
fisubs
outsl
mov
inc
arpl
pushl
clc
push
mov
add
or
test
push
jbe
push
mov
ss
std
cwtl
fnstsw
jg
adc
and
call
jmp
lea
ja
jmp
pusha
sub
clc
sub
rol
rcl
mov
shl
dec
mov
pushf
mov
not
pusha
shrd
add
pushf
shr
shl
push
mov
add
not
add
push
call
jge
outsl
cmp
or
ds
sbb
mov
cmpsl
ds
sub
loope
push
hlt
mov
fistl
xor
scas
mov
and
pop
inc
sub
stos
inc
add
aaa
rorb
push
add
int
movsl
insb
inc
andl
fstpl
imul
leave
in
cmp
mov
dec
cmp
aad
hlt
mov
cltd
dec
xor
icebp
xchg
xchg
lods
aad
jns
outsl
repnz
inc
les
adc
push
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
icebp
or
setae
pop
lahf
movb
push
lahf
bswap
mov
pushf
not
lea
movw
movl
call
movl
pushf
push
call
mov
add
pushf
movl
call
push
add
add
seto
call
jge
and
sahf
cmp
jns
push
mov
inc
jb
test
popa
jns
ret
loop
daa
ds
xchg
loop
movsb
daa
sti
outsl
mov
xor
loopne
sti
cmpsl
jae
cmp
jbe
in
pop
cmp
cwtl
insl
push
jg
sbb
or
pushf
movzwl
shl
movsbl
neg
ror
mov
call
pushf
xor
lea
movzbw
mov
pop
movzbw
pop
not
pushf
lea
mov
call
jmp
pop
jge
xchg
inc
xchg
gs
ss
shlb
movsb
pop
or
or
jne
fistps
xchg
cmpsb
arpl
adc
ret
aad
call
andb
aaa
sbb
pop
sub
mov
xor
test
adc
jg
sbb
clc
shrb
ret
lcall
leave
scas
cmp
mov
dec
int3
pop
jo
repz
mov
cltd
mov
dec
sti
xchg
test
jbe
cmpsb
cmp
push
pop
xchg
add
testb
dec
cmp
lcall
sbb
test
pop
xor
sbb
xchg
pushf
bt
push
cmp
pushl
not
lea
cwtl
mov
pushl
push
lea
ja
call
bt
sub
cmp
repnz
call
shl
seto
setle
lods
call
pushf
bt
imul
jmp
lea
jbe
adc
test
sub
mov
push
shrd
add
bts
mov
lea
add
stc
cmc
add
rcr
movl
bsf
clc
pop
btr
mov
clc
bt
cmc
pusha
cmp
pusha
lea
jbe
shr
jnp
test
sub
bt
test
cmp
mov
shrd
push
mov
jmp
lea
jne
bswap
movzbw
movb
movsbl
push
movzbw
lea
cwtl
push
lea
movb
pusha
push
jmp
add
movsbw
push
rol
dec
mov
rcr
call
lea
jae
stc
jmp
mov
cmc
add
pusha
mov
lea
push
pusha
lea
jo
push
mov
push
setb
not
setge
lods
lea
jo
jg
jmp
lea
ja
call
pushf
pushl
ret
mov
cmc
cmpb
jmp
movb
jmp
clc
stc
cmp
cmc
or
jmp
rep
pop
mov
mov
pusha
push
mov
lea
jmp
pushf
test
cmp
call
movl
push
movb
movb
mov
lea
jmp
push
pusha
inc
mov
pushf
movb
inc
push
push
movb
pushl
lea
jmp
push
pushf
movl
pushf
call
mov
bswap
movsbl
push
mov
pushf
pushl
ret
call
push
call
lea
jne
cmp
clc
rcr
mov
bsr
dec
movsbw
test
sub
bsf
adc
lea
shrd
mov
clc
stc
cmp
sub
jmp
test
mov
or
cmc
fnstsw
push
stc
mov
push
stos
rclb
mov
dec
mov
andb
xchg
test
in
mov
sbb
jmp
mov
ds
push
fcomip
pop
inc
and
mov
sbb
mov
sub
test
sub
add
call
pushw
popfw
mov
jmp
jae
cmc
cmc
bt
pusha
sub
mov
pushf
pushl
push
lea
call
pushf
pushf
lea
jae
mov
mov
inc
dec
dec
inc
not
call
push
pushf
lea
call
test
clc
test
sub
push
push
movb
lea
jne
pusha
lea
call
pusha
pusha
push
mov
lea
jmp
mov
push
lea
jne
push
movb
pop
movb
pusha
movzbw
seta
not
mov
cwtl
lahf
lea
push
movl
pushl
call
pusha
or
mov
test
and
cmc
add
jns
add
pusha
push
mov
pusha
lea
jmp
not
stos
mov
mov
pushf
pushf
call
push
lea
jne
shl
push
not
mov
sbb
shl
sub
add
lea
clc
stc
bt
movb
sub
clc
cmp
test
jmp
dec
xor
mov
stc
and
test
push
add
lea
cmp
bt
add
jmp
sub
bsf
lea
pop
add
movzbw
not
bsr
shrd
mov
call
movl
jmp
lea
jne
push
shrd
mov
bsr
bswap
sub
cmp
ror
sub
lea
mov
pusha
pushf
sub
jmp
jmp
bt
bt
add
clc
movzwl
neg
shrd
jmp
cmp
pushf
lea
ja
jmp
pushf
jmp
pushl
push
repnz
push
jmp
pushf
lea
ja
push
pushl
lea
jb
cmp
jmp
stc
clc
cmp
pushf
call
pushl
popl
stc
mov
cmp
call
pusha
mov
mov
mov
pusha
pushf
lods
call
jmp
cmpb
adc
mov
jmp
out
das
or
pop
insb
sbb
push
cmc
cmp
aaa
pushf
in
inc
mov
push
xchg
pop
cltd
mov
mov
sub
les
scas
popf
push
mov
sub
iret
test
inc
icebp
testl
fcompl
lods
pop
cmp
dec
inc
pop
or
xor
push
cmpsb
push
inc
mov
or
jg
sbb
leave
outsl
in
outsb
js
xor
rorl
insl
nop
xor
lods
xchg
cmp
push
aam
xor
push
push
mov
outsb
cltd
shrl
or
push
loopne
out
lds
cmpb
outsb
mov
adc
jno
push
ss
cmp
add
and
or
pusha
pusha
jmp
or
test
ret
jnp
ret
inc
loope
mov
sti
adc
imul
aam
mov
adcl
stc
clc
test
shll
push
and
repz
or
std
xor
or
pushf
pushf
call
pushf
lea
je
cmp
pushf
clc
add
test
clc
cmp
call
jmp
movw
pusha
pushl
lea
jne
dec
das
das
daa
xor
not
cwtl
mov
mov
push
pushf
pusha
lea
jmp
lea
je
call
bt
sub
pushf
jmp
jmp
mov
pusha
cwtl
lea
call
mov
cwtl
lahf
lea
call
mov
bt
bt
stc
pushf
test
jmp
jmp
mov
jle
or
popa
xchg
les
mov
rclb
cld
in
and
or
lods
mov
sahf
enter
xchg
add
mov
and
arpl
test
pusha
mov
out
cld
dec
mov
into
ret
adc
cmp
loopne
sbb
mov
xchg
pop
popf
push
lret
inc
mov
pop
sbb
shl
loopne
xchg
push
mov
mov
mov
divb
pusha
lcall
mov
jmp
lods
stos
dec
icebp
inc
cmpsb
or
js
mov
mov
mov
mov
jg
and
lods
push
mov
xor
sub
daa
repz
loope
iret
xor
jo
cmpsb
mov
test
test
pop
push
aad
enter
xchg
and
andb
fwait
and
insl
cmpsl
out
xor
push
mov
cltd
sbb
xchg
popl
pop
add
adc
push
and
xor
cmp
dec
dec
pop
in
mov
data16
sbb
es
setl
pushfw
popw
rcr
pushf
neg
and
mov
pusha
neg
push
sub
bt
stc
ror
pushf
pushl
inc
cmp
std
jmp
push
call
mov
lea
pusha
call
call
push
aas
inc
add
test
mov
mov
jmp
icebp
jae
test
bound
add
or
add
and
movsl
pop
adc
loop
shrb
std
cwtl
dec
loopne
sbb
lods
cmp
stc
mov
or
pop
movsb
add
ss
mov
lods
cld
xor
push
xor
xor
jbe
lret
mov
sahf
jmp
jg
daa
and
xlat
call
cmc
repnz
call
push
inc
jmp
push
lea
jne
neg
sar
ror
mov
cmp
add
test
jmp
rcll
sbb
roll
into
gs
adc
jecxz
popf
jmp
add
lret
push
mov
cmp
ret
es
lods
repnz
sbb
aas
into
movsb
hlt
jge
pop
inc
push
jge
inc
or
int3
aad
xchg
xchg
test
ss
pushl
pop
inc
jg
daa
ror
xchg
adc
test
ss
or
std
rorl
jmp
pushf
pop
fwait
ljmp
mov
leave
jecxz
roll
sar
int3
mov
dec
xor
outsl
shll
cmpxchg
call
cmp
insl
fadds
jo
and
stc
in
adc
decl
lea
add
add
xchg
push
add
call
add
and
test
sub
movzbl
neg
movzbw
add
push
mov
cmc
mov
cmc
stc
repnz
pushf
jmp
mov
pusha
movb
movw
pushf
pushl
ret
sub
lea
bswap
not
movzbl
lea
pushf
push
mov
mov
pushf
mov
call
jmp
add
dec
gs
popa
addr16
outsl
js
add
xorps
add
pushl
mov
movb
cwtl
call
jmp
sti
aas
pandn
pop
lret
jne
mov
push
pushw
cld
dec
ret
pop
stc
inc
std
xchg
mov
adc
sbb
add
jno
add
in
dec
cmpl
pusha
mov
mov
jmp
lea
jb
clc
cmpb
jmp
pusha
call
jmp
jmp
pusha
lea
je
movsbl
jmp
jmp
call
call
mov
pushl
mov
movzbw
push
mov
pusha
push
pushf
pushf
pushl
ret
leave
subl
mov
push
xchg
jmp
xchg
and
jno
xor
push
out
shrb
or
fiadds
mov
dec
jg
adc
sbb
xor
mov
daa
dec
hlt
pop
pop
inc
dec
out
scas
sbb
jno
jmp
xchg
cld
mov
clc
cs
adc
lock
ret
xchg
sub
push
rcl
push
daa
sub
sub
pop
sub
addr16
out
ljmp
outsl
inc
or
daa
lcall
lea
inc
cmpsb
sbb
xchg
std
out
mov
and
pop
xchg
nop
adc
ja
or
inc
push
sbb
sahf
in
cmp
popa
lret
adc
les
mov
push
or
inc
cmp
cwtl
add
nop
sub
lods
mov
mov
push
loop
les
addl
inc
mov
insb
mov
pusha
push
cmp
add
mov
inc
test
iret
lock
mov
mov
cld
dec
xor
dec
fcompl
dec
mov
lods
in
jmp
out
out
mov
sub
mov
jb
ret
xchg
mov
aaa
or
sbb
stc
fnstcw
mov
dec
loopne
mov
cmpps
loope
jg
and
and
push
leave
dec
dec
hlt
jns
xor
orb
jo
pusha
jle
push
mov
stos
pop
pop
xor
and
test
sub
fwait
mov
mov
or
xchg
mov
inc
cld
push
shrl
int
dec
scas
pop
push
fcmovnb
int
and
mov
and
lds
sbb
xor
push
adc
pop
es
imul
nop
ja
leave
xchg
xor
adc
ds
jb
arpl
std
rorb
and
in
jnp
sub
lcall
nop
add
fcmovnb
fstpt
and
inc
movzbw
add
add
sub
mov
ror
mov
pushf
repnz
call
lea
jnp
ja
cmc
push
test
cmc
add
add
pusha
pusha
cmp
or
movb
lea
je
cmc
jmp
xor
bt
jmp
pushf
pusha
push
lods
call
call
adc
mov
jns
roll
aaa
inc
sub
mov
ds
loopne
cmpsb
sub
lret
ret
in
dec
ss
mov
movsb
das
popf
aad
bound
out
jne
cmp
xchg
jo
adc
gs
push
out
imul
cwtl
xchg
jle
jg
sub
ljmp
and
in
jbe
sarl
inc
and
xchg
out
pop
cmp
fsubrs
int3
mov
ss
sbb
jnp
sbb
dec
mov
ss
pop
sub
xchg
inc
adc
adc
and
push
in
dec
rorb
add
jp
mov
push
inc
sbb
loope
inc
jno
stc
out
into
mov
outsb
shll
add
jg
lock
pushf
mov
gs
les
icebp
and
gs
in
push
dec
dec
stos
xchg
adc
fsubrs
ljmp
sub
sbb
jne
ljmp
je
push
sub
sub
sub
jle
xchg
negb
sarb
sahf
mov
aam
shl
outsl
mov
inc
lds
cmp
adc
sarl
leave
repz
dec
outsl
popa
fs
imul
add
xor
jmp
push
lea
call
pusha
jmp
call
mov
pusha
lea
jb
call
lea
pusha
push
jmp
lea
jae
call
push
neg
test
mov
jmp
pushf
movl
jmp
jns
std
rcrb
mov
scas
mov
sahf
sahf
mov
test
mov
loopne
xchg
mov
stos
dec
push
int3
adc
push
dec
and
pop
add
orb
pop
int3
mov
xlat
or
jns
data16
cmp
add
push
and
dec
adc
int
pop
xor
xchg
sub
push
push
push
fidivrs
inc
cmc
cs
pop
and
push
adc
sub
loopne
mov
lds
rcrl
jg
imull
or
sub
test
mov
stc
cmp
add
pushf
stc
movb
mov
pusha
test
test
pushf
lea
jge
push
pushf
lea
je
jmp
rcrl
jmp
movsl
dec
sarl
or
and
shr
nop
jg
mov
mov
sbb
cwtl
jle
jl
js
bound
inc
call
aaa
pusha
sbb
outsl
outsl
popa
bound
inc
cwtl
pop
mov
loope
fmuls
cmp
arpl
cmp
sub
mov
das
dec
popa
adc
imul
pushf
add
mov
pushf
lea
jmp
popf
cpuid
nop
jmp
pushl
pushl
popl
pushf
mov
pushl
ret
sti
jg
bnd
xor
push
sub
jl
fdivl
or
cmp
scas
or
call
outsl
stos
outsb
push
jmp
pop
mov
ja
mov
dec
push
mov
add
lods
mov
sbb
lds
lock
shll
jne
scas
ljmp
xor
ret
jg
das
ror
outsl
daa
shrd
movzbw
rcl
push
xor
mov
shld
sub
test
and
push
sar
push
bswap
shld
shld
bsf
push
shld
cmc
bts
add
push
shr
aas
mov
cmc
test
pushf
pushf
test
pushf
mov
movb
lea
je
xchg
bts
rcr
mov
rcl
add
pushf
lea
lea
jle
mov
pusha
pushf
test
test
pushl
lea
je
mov
sar
add
bswap
add
dec
mov
bt
add
test
cmc
mov
bts
movzbw
mov
cmc
bt
test
cmp
cmp
pushf
movb
pushf
lea
jbe
adc
xadd
clc
call
push
inc
rorb
mov
dec
aad
and
push
xchg
cmpsb
test
or
int3
lcall
inc
leave
out
scas
imul
mov
mov
sub
pop
xchg
dec
fdivp
stc
jnp
add
out
fdiv
adc
test
sub
xchg
mov
bnd
or
mov
mov
daa
les
sahf
sub
test
in
ljmp
shl
addr16
sti
xor
xor
les
out
mov
nop
push
loop
push
idivb
adc
fldcw
mov
push
ja
outsb
stc
out
pop
popa
insl
clc
and
outsl
push
push
pop
je
dec
pusha
fbld
dec
shr
mov
les
pop
cmp
cs
insl
mov
sub
adc
and
lods
loope
sub
jmp
incl
jl
push
adc
jne
fidivrs
mov
jg
adc
cmp
mov
xor
push
cmpsb
cmc
scas
lea
push
mov
inc
dec
mov
mov
sbb
jecxz
icebp
add
jae
fwait
xor
ljmp
std
repz
lcall
xchg
rcl
imul
cmp
inc
jle
sub
es
xchg
loopne
das
lcall
push
pop
or
out
js
push
mov
je
jb
push
in
bound
adc
sbb
or
or
mov
push
xor
leave
out
add
stos
sub
mov
push
mov
sub
adc
xor
test
ljmp
cmp
pushf
movb
add
call
push
add
clc
cmp
cmp
pushf
call
push
dec
sbb
jmp
cs
and
sahf
mov
xchg
push
push
aam
mov
add
jne
loopne
jae
icebp
lods
add
adc
or
je
adc
or
imulb
fidivs
adc
lret
push
xor
insl
stc
add
shrl
pusha
sub
insl
mov
leave
xor
sbb
mov
dec
fst
fisubs
add
inc
sub
mov
outsb
in
dec
mov
and
pop
ljmp
loope
cmp
sub
loopne
cmp
jg
dec
or
pop
cmp
movsl
cmpl
imul
and
cs
lret
bound
cmpsl
lods
addr16
cmc
into
lods
cs
or
cmp
cld
push
movsl
in
mov
mov
or
push
outsb
flds
mov
repz
mov
xchg
xchg
jle
inc
push
imul
mov
je
cs
jecxz
jp
sub
jecxz
jl
or
mov
mov
cltd
out
dec
mov
fnsave
pop
pop
std
jmp
jp
cmpsb
aad
xchg
jns
sbb
fists
repnz
loopne
xchg
and
das
jmp
test
xor
inc
stos
call
cld
and
xor
mov
sub
mov
cs
ds
imul
mov
inc
pop
mov
jg
fucomp
xlat
pusha
imul
mov
sub
lea
jne
jmp
mov
pusha
pushf
mov
pushl
lea
jmp
stc
xor
pusha
ror
jmp
je
gs
jb
adc
dec
add
in
out
fst
pop
mov
dec
mov
test
cmp
std
outsl
sub
jns
xor
notl
mov
clc
sbb
push
mov
js
xchg
dec
or
scas
dec
push
add
mov
scas
pop
pop
nop
push
xor
mov
lock
lret
mov
adc
push
jae
lock
push
jmp
dec
push
lods
xchg
bound
test
mov
sub
xor
shl
fidivs
cmc
ror
test
stc
jmp
pusha
mov
jmp
repz
pushf
movl
pusha
call
or
pop
test
xor
mov
aas
dec
inc
das
jge
adc
push
pop
mov
outsb
sub
rolb
fldt
test
xor
cmp
mov
pop
jne
xchg
xchg
inc
or
aam
and
pop
push
scas
mov
jl
test
fwait
enter
mov
andl
xor
fcoml
push
aas
fs
dec
or
pop
es
mov
aas
xor
xchg
mov
mov
repz
adc
inc
or
iret
and
outsl
push
adc
xor
lcall
or
xor
mov
pop
scas
mov
xchg
int3
mov
cwtl
pop
imul
test
ss
bound
pusha
lea
je
clc
add
pusha
cmp
pusha
jmp
call
jg
xchg
xor
dec
sbbl
dec
lret
jle
repnz
stos
mov
mulb
sbb
popa
clc
sarl
sti
addr16
fmulp
dec
adc
mov
cwtl
mov
rclb
flds
jae
repnz
aaa
insb
jb
sarl
mov
into
mov
test
cld
icebp
dec
or
jnp
push
dec
ds
dec
sbb
cmp
mov
insb
pushf
mov
fsubrp
enter
sub
jae
and
sbb
ss
mov
sbb
ss
mov
repnz
pop
jl
div
shll
mov
xor
mov
pushf
dec
mov
inc
adc
add
mov
imul
nop
jo
arpl
or
movsl
bound
mov
push
aam
pop
cs
adc
mov
mov
dec
outsb
dec
shlb
push
adc
andb
mov
dec
jecxz
sub
lock
aam
or
xchg
daa
lret
repnz
add
call
scas
xchg
ret
pop
mov
aaa
out
fwait
jmp
das
mov
pop
popf
aaa
mov
daa
lret
xchg
hlt
call
rol
lret
push
scas
rorb
scas
ss
add
push
and
jo
mov
mov
mov
es
mov
xchg
sub
popf
xor
cli
pop
loope
pop
sub
daa
dec
outsb
dec
jle
mov
mov
sbb
push
sbb
and
push
jmp
dec
mov
dec
mov
shll
adc
cmp
jbe
sahf
cltd
test
hlt
jg
xor
add
mov
mov
movsl
sub
sbbl
push
in
mov
adc
fidivs
das
test
movaps
xor
mov
test
push
mov
and
movlps
jno
lret
cmc
ss
push
xchg
cli
or
cld
out
add
out
lcall
dec
fs
out
sbb
jmp
fwait
mov
into
cltd
fucomi
mov
or
xor
cmpsl
mov
aaa
mov
pushl
dec
repnz
inc
add
pusha
test
dec
sbb
std
pushl
push
jle
fs
mov
cmc
jmp
cltd
in
pushl
inc
pop
jmp
incl
dec
mov
repz
arpl
mov
lcall
call
pusha
std
mov
mov
lcall
lcall
hlt
ljmp
or
add
inc
cmc
mov
xor
negl
mov
jg
push
pop
das
or
daa
sti
jmp
arpl
enter
test
fisttpl
xchg
ret
stc
incl
decl
out
clc
incl
lcall
cld
mov
ljmp
daa
xor
outsl
es
arpl
inc
cmpsb
into
jmp
adc
decl
popf
in
ljmp
cmp
cmp
mov
mov
inc
popf
in
push
inc
sahf
inc
gs
mov
inc
xchg
mov
jmp
dec
std
call
movsb
nop
leave
arpl
ffreep
cmp
lcall
add
adc
out
mov
xchg
xchg
sti
inc
push
jmp
add
cmp
pushl
std
mov
gs
pushl
jmp
sbb
div
lcall
mov
adc
lcall
jmp
inc
idiv
mov
out
inc
mov
call
push
imul
scas
idiv
incl
shrb
jmp
decl
je
mov
incl
loopne
ljmp
shlb
push
daa
jmp
in
test
xor
sti
dec
cmp
pushl
mov
pushl
sti
fwait
ds
aas
ret
clc
jmp
mov
pop
push
cld
decl
and
leave
mov
loopne
pop
sub
jbe
es
mov
pop
adc
xchg
pop
dec
jns
mov
mov
adc
jmp
adc
xchg
push
mov
xchg
adc
xchg
rcrl
mov
mov
outsb
push
aaa
lcall
push
or
loop
cld
jno
cli
add
pop
mov
jne
add
sbb
push
scas
or
inc
aas
dec
mov
and
out
sbb
lock
insb
aad
dec
ficomps
cmpb
fcos
mov
rclb
jg
xor
lret
lods
call
call
into
mov
jnp
sti
dec
or
mov
sbb
or
mov
sti
int3
mov
or
mov
sti
cmp
or
sub
dec
jnp
in
sti
in
jl
mov
add
movsl
xchg
mov
in
scas
dec
test
pop
sub
out
sarb
push
shrb
repnz
inc
insb
cmpsb
adc
inc
stos
lcall
adc
inc
mov
adc
int3
xor
cwtl
add
jne
stos
mov
and
push
jmp
add
cmpsl
mov
cmp
mov
inc
mov
test
jo
dec
xor
mov
rcr
jg
cmp
pop
insl
push
mov
lea
jb
push
pusha
lea
je
push
pusha
pushf
lea
jmp
into
jbe
stos
push
sbb
dec
cwtl
popa
xchg
call
add
pop
push
xor
pop
cmp
and
push
push
cli
addr16
cmp
icebp
pop
insb
out
subb
jnp
and
test
ljmp
xchg
daa
out
sub
add
push
out
jne
dec
inc
dec
jg
cmp
fsub
test
call
push
push
lea
jne
shr
sub
mov
mov
push
movw
lea
jmp
movw
call
mov
movl
jmp
movl
push
mov
pushf
pushf
push
push
pushl
ret
lea
jb
call
movsl
daa
add
push
pop
pop
mov
mov
in
shll
outsl
or
inc
dec
loop
insl
cmp
jl
lahf
sbb
pop
mov
dec
aad
dec
bound
jnp
and
mov
pop
lret
pop
or
dec
push
roll
aam
push
adc
or
jg
pusha
jbe
adc
lds
test
addb
and
out
and
push
js
ret
rorb
mov
lahf
pop
xor
fwait
adc
aam
mov
lock
bound
xchg
int
cmpsl
pop
icebp
mov
dec
xor
out
insb
xchg
ds
sub
cmp
fadd
add
sbb
bt
clc
sub
bt
pushf
call
lock
sarb
cwtl
roll
and
dec
clc
movb
in
push
pop
movsw
pop
pop
mov
dec
xor
jge
ret
pop
jo
push
jecxz
xor
andb
jge
jno
test
add
sbb
pop
bound
icebp
fs
shl
in
jg
mov
and
pusha
mov
mov
movw
pusha
jmp
jnp
shll
out
dec
dec
mulb
loop
mov
shlb
or
adc
dec
lods
das
icebp
pop
test
movsl
cmpsb
negl
cwtl
jmp
adc
jb
and
jbe
mov
in
or
sub
in
mov
add
push
cmp
dec
adc
test
fidivs
sbb
addr16
and
imul
std
dec
mov
popa
mov
ror
xchg
sub
or
push
pop
pop
les
and
std
test
jg
jp
ret
sbb
or
sbb
lret
leave
fsubrs
sbb
dec
sbb
sbb
repnz
pop
idiv
das
mov
push
sbb
or
sti
lds
fwait
add
insb
push
add
sbb
jecxz
stos
xchg
or
repnz
mov
mov
jbe
insb
adc
or
ds
inc
loopne
cmp
adc
test
push
iret
or
stos
orb
cmpb
push
or
not
bswap
jmp
pusha
pushl
lea
call
call
pushf
movl
mov
mov
movw
pushf
pushf
pushl
ret
call
movw
lea
jae
push
lea
jne
pushf
push
stos
mov
movw
push
lea
jmp
jmp
pusha
lea
jne
movsbw
mov
push
push
lea
jmp
pusha
movb
call
mov
test
bswap
mov
test
shr
mov
call
imul
sbb
cmpsl
lock
or
cmp
mov
sbb
rcrb
pop
rclb
sbb
ja
adc
ljmp
sub
mov
jg
sub
adc
mov
fdivrl
add
mov
jmp
fbstp
aad
cmp
ffreep
sub
cmp
iret
aas
mov
cmc
fcoml
jne
or
push
mov
and
dec
pushf
push
fiaddl
dec
icebp
mov
daa
cwtl
inc
push
pop
adc
pop
stc
pop
testb
mov
push
push
fs
out
inc
dec
jg
cmp
aad
stc
call
xchg
xor
or
ret
mov
push
xchg
arpl
adc
cmc
dec
les
subb
mov
vhsubps
and
fs
jl
lahf
inc
gs
loope
add
ficomps
xor
cmp
sti
test
cld
rcrb
test
mov
arpl
or
push
pop
pusha
mov
jae
lcall
insl
xchg
ljmp
sub
stc
mov
and
daa
push
and
out
sbb
push
subb
out
xchg
cmp
clc
jg
cmp
loop
mov
sti
adc
repz
popa
and
and
stos
into
sub
sub
jno
mov
jne
gs
fwait
sub
mov
lods
and
loop
mov
insl
and
push
mov
and
jbe
dec
add
sub
das
fisttpl
and
jg
cmp
jl
aas
and
in
movl
bt
pushl
pushf
cmp
seto
lea
movzbw
mov
movw
mov
lea
jno
ja
jmp
ja
adc
sub
shld
test
pushf
add
add
mov
call
jns
daa
ds
sub
nop
scas
mov
xor
mov
pop
pushf
or
imul
cmpsl
notb
mov
mov
hlt
jno
sarl
les
lock
adc
out
arpl
in
push
insl
mulb
popa
mov
fistpl
or
stos
ds
mov
shlb
add
xchg
jo
divb
shrb
pop
sbb
pop
inc
pop
in
aam
sbb
mov
pop
clc
dec
fmuls
mov
or
pop
aas
fidivrl
push
xor
outsl
sub
sub
in
imul
jbe
bound
add
pop
or
std
pusha
lahf
mov
add
mov
cmp
lds
adc
insb
rcrl
adc
add
cmp
ss
add
inc
adc
fwait
add
add
mov
ret
cmpsb
jae
adc
ja
loope
outsl
xchg
xor
push
jo
les
xorl
and
sahf
lods
inc
cmpsb
imull
ss
popf
out
cmp
jns
pop
cs
pop
out
jbe
fisubl
sahf
popa
inc
lret
mov
fsub
xchg
and
cmc
js
xchg
push
xor
xchg
xor
scas
pop
adc
xor
cmpsb
out
test
aad
popf
out
jge
aaa
outsb
dec
cld
in
push
js
cmpl
and
scas
pushl
popl
bt
cmp
jmp
cmpb
mov
pusha
call
lea
jae
inc
xchg
mov
setbe
inc
pusha
setno
mov
lea
pushf
lea
call
jmp
rcrb
sbb
and
rorb
subb
fimull
mov
lods
fstpt
pop
adc
iret
clc
pushf
mov
add
les
jecxz
leave
mov
pop
pusha
and
xor
stc
dec
jns
outsb
mov
mov
into
test
adc
out
xchg
cmc
jae
push
hlt
setns
sub
lcall
sub
and
jmp
testb
dec
rcrb
lock
inc
xlat
in
cmc
insb
xor
push
and
out
jb
ds
cmp
xchg
std
fs
orl
inc
sahf
xor
inc
jo
aad
xchg
cmc
aaa
das
xor
mov
inc
mov
mov
sbb
add
lret
adc
addr16
add
outsb
mov
push
sahf
pop
ffreep
or
pushf
popa
loopne
div
sub
sbb
inc
mov
ficoms
out
out
js
adc
push
cmp
lea
mov
out
ret
fistpll
fldln2
adc
stos
cmpsb
and
push
mov
dec
or
xlat
push
lret
outsl
sbb
mov
fnstsw
adc
sub
test
or
jg
inc
and
minps
cmp
xchg
nop
fisubrl
add
mov
stos
popa
inc
sbb
movsb
mov
push
daa
les
call
xchg
pop
jo
dec
fadds
shlb
jg
inc
in
lds
ret
jmp
stos
pushl
pushf
movb
push
lea
jmp
xor
mov
insl
cs
das
cmpsl
inc
sub
shrl
call
push
mov
pop
subl
out
jp
subb
jle
lret
xchg
jb
cmp
lea
or
test
fdivs
int
dec
pop
cmpl
pop
pushf
and
xchg
jne
lods
adc
ret
xor
je
fwait
repz
iret
pop
repz
out
int
neg
and
mov
ret
fstps
cmp
sub
sbb
mov
outsl
dec
mov
xchg
xchg
mov
mov
stos
push
lahf
frstor
jmp
ret
cmpsb
add
insb
adc
ret
xchg
inc
notl
mov
ffree
push
mov
xor
leave
movsb
or
xor
sub
jns
push
add
aaa
sbb
stos
call
std
nop
sti
popa
cwtl
movsl
mov
ds
mov
das
testl
jo
xchg
roll
fwait
cs
js
pop
xlat
ljmp
jg
inc
sbbb
mov
add
call
pushf
lea
jb
jmp
stc
cmp
jmp
aad
mov
add
divb
dec
adc
mov
into
ret
jp
sub
mov
sub
inc
sbb
sbb
xchg
leave
nop
xchg
or
loopne
jbe
iret
arpl
and
incb
data16
jg
inc
or
call
mov
movl
pusha
call
mov
cmc
cmp
test
pushl
push
call
test
clc
stc
add
pushf
clc
pusha
cmp
mov
push
movb
call
jmp
cmc
jno
shrl
jmp
out
mov
adc
add
outsl
ljmp
stc
call
mov
es
add
test
call
jmp
pushf
movl
push
pushl
popl
pushf
pushf
pushl
ret
mov
insb
in
cld
cltd
gs
xorl
scas
dec
push
cmp
sarb
in
adc
cmp
dec
xchg
jp
xchg
lods
lret
scas
cmp
mov
hlt
sbb
mov
sbb
jo
lret
mov
sub
loope
sbb
ret
inc
mov
or
pop
jl
imul
cmp
sbb
ss
pop
iret
mov
sbb
int
pusha
push
movl
pushf
call
pushl
popl
bswap
pusha
movsbw
lahf
mov
setle
lea
mov
movl
push
lea
movb
movb
jmp
mov
jmp
movl
pushf
call
lea
jb
test
pushf
cmpb
call
jmp
stc
push
repnz
call
aas
and
and
mov
fnsave
pop
push
out
mov
xor
cmpl
ja
xor
cmpsl
loop
mov
add
pop
imul
cmpsl
jg
inc
jge
loop
in
sub
sub
jge
enter
ficoms
push
mov
and
aad
push
dec
stos
into
in
xor
xor
stos
js
in
outsb
shlb
popf
frstor
stos
imul
lret
shrl
mov
sbbb
mov
cld
sbb
adc
loop
pop
rcrb
jo
test
fcomp
mov
mov
add
mov
fs
sbb
sub
xor
inc
push
ret
sbb
adc
mov
pop
iret
add
inc
xchg
mov
ss
mov
sub
jno
xchg
dec
inc
out
inc
stos
xor
xchg
jle
mov
pushf
jl
push
ret
inc
pop
leave
pop
out
sub
in
xor
sub
xchg
adc
sti
or
andb
sbb
xchg
sbb
imul
jg
inc
adc
adc
and
pushf
cmc
cmp
push
jmp
mov
lea
je
je
pusha
sub
movw
jmp
aas
out
dec
lret
pop
rorl
jecxz
ss
aam
xor
sub
fisubrl
int3
aaa
test
mov
sbb
ret
mov
enter
fisttpll
subb
sbb
test
std
push
mov
jo
mov
dec
mov
mov
jg
inc
mov
rorb
pushf
call
lea
jne
movsbw
add
shl
or
mov
call
jmp
jmp
cmpb
push
push
lea
jne
bt
lea
mov
clc
pusha
add
mov
call
mov
pushl
test
push
jmp
bt
stc
cmp
jmp
cwtl
movb
movl
not
lea
mov
movl
pushl
call
add
add
pusha
pusha
jmp
std
lods
sbb
dec
roll
push
in
mov
fdivl
pop
stc
scas
addr16
dec
xchg
leave
data16
ret
ret
jbe
movsb
and
insb
push
subl
popf
and
loopne
lock
xchg
pusha
aas
sbb
in
pop
aaa
js
mov
dec
fwait
xchg
cmp
rorb
add
add
pushl
mov
push
mov
lea
jmp
jmp
xchg
movsbw
not
mov
cwtl
mov
movzbw
lea
call
btc
push
bsr
mov
call
add
dec
outsl
arpl
inc
jb
add
add
add
rorb
push
adc
daa
rcl
mov
pushf
sar
pusha
sub
aam
mov
pusha
adc
mov
shrd
bsf
movsbw
and
mov
neg
mov
jmp
push
pusha
lea
ja
jmp
fwait
pop
dec
xor
rorl
hlt
das
jge
cltd
inc
jge
das
sti
mov
inc
test
inc
sbb
scas
push
cmpsl
mov
fnstenv
sarl
ljmp
shlb
pop
inc
cs
imul
nop
dec
shlb
inc
jne
add
test
mov
dec
pop
push
imul
push
ror
shld
neg
mov
xor
or
push
bsf
push
bts
sbb
push
clc
push
cmc
shr
push
shl
shl
mov
test
btc
xadd
sar
mov
pushf
shrd
mov
call
cmp
fs
roll
jno
push
repnz
ds
jle
shrb
pop
lock
nop
fs
adc
add
jmp
add
or
cltd
stos
mov
xor
mov
jg
dec
xchg
xchg
inc
pusha
cmc
add
push
lea
jne
jmp
pusha
jmp
lea
jle
pusha
mov
jmp
pushf
call
lea
call
pusha
lea
jae
test
xor
push
pushl
pusha
mov
lea
call
jmp
lea
jge
pushf
push
movl
pushf
movl
mov
pushl
lea
jmp
jmp
inc
rcl
lahf
cs
inc
xorb
mov
pop
icebp
mov
jns
repz
mov
pop
clc
stos
or
stos
sbb
pop
add
in
cltd
inc
leave
or
cwtl
pop
mov
xchg
lods
insl
jle
insb
push
mov
and
push
in
push
dec
dec
inc
cmp
add
iret
test
orl
call
push
cmpsb
sbb
imull
incl
cmp
fildl
in
mov
dec
push
dec
das
add
inc
js
je
jb
arpl
jae
lea
jb
bt
bt
call
data16
addb
add
mov
add
add
sbb
jns
adc
pop
movsl
sbb
pop
enter
mov
add
lret
add
add
add
add
lods
negb
dec
inc
stos
sbb
xchg
or
pushf
out
xor
cmpsl
pcmpgtd
mov
cmc
adc
in
gs
add
jbe
xchg
jnp
mov
xlat
pop
cwtl
gs
pop
pushf
jp
adc
out
xor
xor
daa
mov
loopne
mov
fwait
mov
lock
xchg
test
push
xchg
rclb
clc
and
int3
dec
or
xor
dec
xlat
xchg
bt
pushf
cmp
movl
mov
lea
ja
pushf
bt
push
movb
imul
stc
movb
add
movb
lea
jmp
push
movl
call
scas
add
sahf
stos
sub
ss
push
xchg
sub
or
adc
ja
mov
int
movsb
adc
lahf
push
dec
hlt
dec
jecxz
mulb
popa
stos
push
mov
push
dec
or
or
add
adc
add
inc
cmpsl
test
inc
test
cltd
mov
push
mov
data16
dec
gs
push
fcmovbe
push
out
test
loop
mov
sahf
lahf
mov
jmp
lcall
cmp
sti
loop
jae
cmc
cmp
subl
popf
repnz
cs
push
sbb
lods
gs
rcrl
lret
ljmp
je
sub
and
xchg
adcl
jg
dec
ror
jo
call
pusha
lea
jae
cmc
test
push
mov
cmp
push
pusha
lea
jae
pushf
mov
call
stc
clc
clc
sub
bt
cmp
jne
push
lea
ja
pushf
call
cmp
pushf
push
pushf
pushl
lea
jmp
bsf
not
mov
cmp
sub
pusha
test
repnz
call
neg
rcr
pusha
mov
lea
stc
sbb
call
lea
jne
add
xor
ror
mov
call
push
pushf
jmp
cmpsb
aaa
out
dec
push
add
fnstenv
pop
cmp
mov
jnp
cld
iret
xchg
movsl
popa
aad
lcall
fcoml
cwtl
adc
or
add
jne
test
movsl
jne
mov
fwait
stos
addb
adc
cld
jno
pop
sub
push
call
pop
inc
jns
xchg
stos
xor
mov
or
xchg
stos
ret
and
mov
mov
push
mov
scas
add
ja
out
fisubrl
mov
fisubrs
xchg
data16
dec
mov
sub
sbb
mov
dec
dec
aad
adc
not
pop
jno
cmp
xor
add
insl
lcall
cmp
add
mov
lock
mov
pop
push
imul
jbe
xorb
cli
cmpsl
sub
test
sub
mov
or
jbe
inc
adc
xchg
fistl
mov
push
and
lods
movb
mov
lea
dec
mov
stos
sub
xorb
push
in
es
mov
pop
or
ss
rcrb
jle
jo
mov
mov
pop
cmpsb
mull
iret
jp
mov
sub
jns
cmp
add
mulb
mov
imul
aaa
loop
imul
dec
dec
jns
pop
outsl
push
movsl
mov
popa
xorb
sub
and
cld
insb
sbb
mov
xchg
cli
sti
js
and
fcoml
mov
int3
dec
pop
push
mov
fcmovnb
lahf
outsl
aam
ficoms
mov
imul
stc
sub
ret
pop
daa
inc
pop
mov
insb
test
xor
dec
add
aad
enter
and
inc
mov
call
mov
mov
mov
stos
popa
xchg
cmp
js
scas
sarb
imul
jl
pop
faddl
xchg
scas
mov
jp
sti
rcr
out
cmp
or
pop
fsubl
lock
jb
ljmp
out
fdivr
cmp
jge
xchg
mov
sub
dec
add
movsl
lcall
aas
subl
cmp
mov
jns
pop
icebp
shlb
pop
cmp
aaa
in
mov
or
js
je
jg
push
dec
arpl
or
pushf
lea
ja
dec
rcr
call
cmp
pushf
lea
jne
call
ret
pop
cs
ds
mov
ds
and
push
imul
or
ror
sbbl
clc
dec
add
jmp
push
cwtl
xchg
jne
add
movsl
data16
insb
jg
pushf
lea
jmp
pushf
pusha
inc
clc
setp
or
xchg
sar
movzbw
mov
bt
rcr
mov
call
mov
lea
call
pusha
pushl
lea
jne
pushf
pop
bswap
mov
pusha
mov
mov
movw
lea
jmp
call
cmpsb
inc
add
dec
sbb
adc
push
xor
mov
push
aaa
movsb
or
pop
into
dec
out
push
cmpsb
push
cmpb
pop
imul
mov
lcall
xor
cwtl
pop
inc
push
ss
enter
push
lcall
sbb
jge
push
xchg
pop
xchg
call
jle
and
inc
adc
sub
cld
fistl
int3
xlat
xchg
push
inc
pop
push
std
mov
shrl
lock
or
inc
push
pop
icebp
shl
popf
jge
mov
mov
insb
cmp
rcr
jg
push
mov
gs
add
pusha
lea
jmp
sbb
fwait
add
lods
inc
cmpsb
mov
or
push
adc
into
lods
cmp
in
int
ret
jmp
dec
and
loop
pop
adc
cmpsl
inc
fs
mov
cltd
inc
out
sti
fsts
pop
mov
inc
aam
mov
or
xchg
dec
jns
push
das
add
pushf
mov
push
pushl
ret
pushf
lea
je
push
add
cmp
cmp
mov
movw
call
call
dec
rcrb
mov
in
pop
sub
mov
repnz
repz
sahf
jnp
xor
push
aaa
xlat
imul
pop
neg
jno
jp
lds
mov
mov
aaa
repnz
pop
xchg
aaa
sti
je
or
xchg
cs
pop
jmp
jno
mov
xchg
pop
add
popf
cmpsb
jb
mov
pop
and
lds
sbb
sbb
pop
fisubs
inc
cmp
jne
push
popl
das
push
dec
das
pop
and
shlb
jge
and
sub
or
into
mov
mov
rclb
cmp
xor
negl
insl
cmp
jo
fsubr
jmp
xchg
jg
push
add
str
call
pushl
popl
mov
push
pushl
pushl
pushl
ret
jae
ja
jg
sahf
movsl
sbb
mov
and
ds
and
jl
notl
sub
clc
gs
push
adc
jp
das
sub
lret
fisttps
or
sbb
mov
rolb
xchg
es
push
sub
mov
ret
add
push
dec
jns
mov
aam
push
rcr
pushf
cmc
xor
push
ror
clc
neg
push
cmp
bt
cmp
lea
jne
setbe
movsbw
pushf
lea
pushl
call
setge
movsbw
mov
movzbw
pop
xchg
lea
xchg
pop
lea
bswap
pop
call
pusha
mov
mov
pusha
pushf
mov
movb
pushl
ret
pushl
lea
ja
adc
xor
shr
sub
cmp
sar
shrd
pusha
sub
add
pushf
cmc
mov
sar
pushf
ror
mov
bt
repnz
call
push
rorb
mov
lods
js
xor
inc
push
push
sub
lods
cmpsb
push
sub
jne
mov
pop
repnz
lea
cmp
pop
mov
jp
testl
test
sbb
stc
lods
inc
daa
in
insl
shlb
pop
pop
sbb
and
jno
sbb
mov
imul
cmp
repz
jo
test
jmp
add
xchg
je
xchg
jno
test
in
cmpsb
cmpsl
ss
push
ss
lods
aaa
adc
xchg
cmp
mov
xor
push
jg
push
pushf
xor
lea
jne
cmp
push
xor
mov
pushl
mov
pusha
lea
jmp
stos
mov
mov
pushf
movb
lea
jmp
push
roll
or
sbb
xlat
mov
pop
push
pop
jns
mov
pop
lds
pop
xchg
repz
mov
mov
movsb
sbb
popa
arpl
jb
ja
mov
push
loop
andb
clc
test
add
mov
ret
xchg
int
roll
dec
pushf
daa
sarl
fisubrl
sub
popa
inc
sub
inc
movq
shlb
jbe
ds
aam
mov
xchg
mulb
in
xchg
dec
imul
ljmp
mov
test
lcallw
mov
dec
inc
loop
add
dec
bnd
nop
and
inc
xchg
int
inc
pop
mov
push
insl
inc
dec
lea
jne
jmp
lea
jb
call
stos
dec
mov
inc
lods
inc
aam
nop
and
lret
push
cmp
inc
and
push
jmp
cwtl
lea
fmull
jge
cmpsl
call
stos
mov
mov
pop
stos
lds
mov
movsl
in
mov
ret
jg
test
xchg
fisttpll
xchg
push
movl
movb
lea
jmp
lods
lock
dec
sahf
push
and
repnz
push
int
add
xchg
sub
shll
or
movsl
sbb
loop
mov
sahf
push
js
jnp
push
insb
or
lods
jbe
xchg
mov
jecxz
add
jbe
roll
mov
or
ljmp
imul
fsubrs
in
or
mov
iret
sub
push
jo
dec
mov
xor
into
inc
inc
aad
mov
mov
data16
loopne
hlt
dec
mov
push
enter
lods
mull
iret
push
repz
aam
out
outsl
adc
es
mov
push
cmp
loop
imul
add
idivb
incb
dec
or
pop
mov
and
out
and
pop
ret
into
xchg
pusha
sti
or
adcl
dec
or
jmp
ficoms
cwtl
in
inc
mov
add
sbb
bt
mov
clc
clc
cmpb
pushf
lea
jne
add
movzbl
sub
not
call
adc
xchg
ljmp
push
das
movsl
jg
bndstx
rcrl
adc
ret
rcrb
arpl
or
fidivs
pushf
add
cli
xchg
iret
dec
or
aam
and
rcl
xchg
imul
sbb
fdivl
in
or
aam
lods
jg
das
mov
sub
xchg
arpl
fnstsw
aas
pop
and
xchg
cwtl
and
xchg
push
pop
stos
jae
lods
daa
add
out
cmp
out
adc
adc
pop
sbbl
mov
and
jmp
pushf
pushl
pushf
add
jmp
call
pusha
jmp
cmp
pusha
lea
ja
pusha
movzbl
sete
movzbl
mov
pop
lea
pusha
mov
pop
mov
lea
pop
mov
push
call
call
jle
sub
cmp
xor
call
mov
sahf
std
or
xor
push
push
push
out
xor
mov
adc
pop
ljmp
sub
into
lds
test
xor
cld
divb
popa
mov
dec
push
stos
push
sahf
mov
mov
xchg
sbb
jbe
pop
fs
fcoms
popa
fstpt
mov
es
xor
cs
and
and
mov
adc
lods
in
adc
adc
pop
fisubrs
inc
dec
pop
ss
loopne
fdivr
repnz
pop
mov
jmp
je
out
faddp
and
out
and
lret
jg
pop
xchg
mov
aaa
aas
fnstenv
pop
cmp
fnstsw
xchg
push
sti
push
or
mov
cmp
call
push
insb
dec
inc
loope
mov
shll
sarl
cmp
das
mov
adc
dec
xchg
jbe
mov
cli
adc
mov
or
pop
jne
scas
in
xlat
dec
pop
sbb
xchg
dec
push
pushf
mov
adc
xchg
xchg
or
outsl
mov
and
adc
fwait
es
sahf
dec
lret
mov
mov
test
mov
mov
sarl
leave
cwtl
mov
fistpll
pop
xor
mov
push
sbb
not
jmp
stc
jmp
movl
pusha
pushl
push
movb
lea
jmp
movb
pushf
lea
jne
aad
inc
aaa
shl
sub
movzbw
lahf
mov
inc
push
add
bt
shr
mov
stc
pushl
push
bt
test
push
push
movb
pushl
lea
je
test
pushf
cmc
stc
sub
cmc
pushf
stc
cmc
cmp
pusha
mov
push
movb
lea
jmp
incl
sbb
lods
in
sub
cmp
in
pop
sub
testb
and
fdivrl
out
jo
gs
imul
aas
push
stos
in
jae
adc
loope
mov
shll
jmp
jne
mov
push
das
je
in
xchg
stos
jno
cli
das
call
cmp
add
shlb
push
mov
ret
inc
add
sub
pop
cli
mov
pushf
jmp
cmp
movsl
xchg
jbe
add
mov
xlat
mov
xchg
andl
push
or
push
aam
xchg
push
mov
jge
pop
jnp
adc
xchg
or
cmp
pusha
pop
rorl
dec
sbb
sbbb
repnz
xor
adcl
mov
sub
xor
push
and
icebp
fstpl
ss
push
in
sbb
push
out
dec
andl
mov
xor
add
out
jg
pop
cmp
push
lea
jne
shl
sub
shl
adc
shl
mov
and
add
test
jmp
pushl
imul
cmc
bt
add
movb
lea
jmp
pusha
movb
push
movl
mov
call
testb
es
dec
dec
icebp
rolb
mov
push
lds
push
out
js
les
jne
stc
pusha
mov
sti
ficoml
hlt
and
mov
pop
scas
jbe
mov
inc
add
cmc
push
pop
movb
ss
and
xor
push
cmp
icebp
mov
aaa
insb
mov
stos
xchg
sbb
jmp
mov
jne
in
in
jecxz
jg
iret
mull
stos
pop
daa
cld
fnsave
or
cmc
cmpb
icebp
fisttps
ret
sbb
push
dec
loope
jg
pop
movsl
lea
jne
jmp
mov
setl
jmp
mov
bswap
mov
movzbw
bswap
mov
jmp
pusha
pushl
jmp
rol
das
rol
mov
pusha
bt
shl
push
lea
je
jmp
pusha
call
mov
jmp
cmp
pushf
movb
pushf
lea
jne
call
lea
je
cmp
test
cmp
pusha
sub
push
cmp
lea
jb
pushf
pushf
lea
ja
push
call
ljmp
dec
into
gs
es
or
push
jl
cmp
mov
out
aad
mov
cmp
push
mov
add
nop
sbb
subb
adc
pop
test
lahf
cmp
pusha
push
adc
pop
push
jns
imul
pop
stc
mov
movw
push
lea
ja
push
push
call
jae
pusha
clc
call
jmp
lea
lea
bswap
btc
mov
cmc
cmp
cmp
cmpb
call
cmp
bt
or
pushf
jmp
xor
add
ret
sub
ss
test
arpl
mov
push
ja
or
fcomps
jmp
hlt
or
fs
pop
push
aam
xchg
lahf
lods
ret
ficomps
inc
ret
ljmp
xor
cld
aaa
sti
cli
push
mov
mov
mov
iret
aam
rcrb
xchg
cmp
stc
and
bound
sti
and
sbb
jb
cwtl
out
fneni(8087
imull
cmpsl
clc
insl
push
je
add
movl
arpl
pushf
gs
mov
cmpsl
rcrl
ret
jno
loopne
inc
movb
xor
cmc
aam
js
pop
add
decl
test
add
push
cmp
lea
pusha
movw
call
push
pushf
outsb
xlat
add
mov
cmp
cmp
adc
sub
loopne
add
fadd
iret
jecxz
adc
movsl
jge
scas
push
jmp
lahf
push
icebp
push
fdivl
add
sbb
push
adc
xchg
mov
xchg
mov
sbb
or
int3
xlat
jb
mov
push
sbb
outsl
push
aad
mov
add
sbb
lahf
aam
mov
mull
or
cwtl
mov
xchg
mov
into
xor
fiaddl
inc
push
sub
pop
mov
mov
mov
push
xchg
inc
jnp
std
lods
jno
push
test
inc
and
cmp
jle
sub
ja
pop
cmp
loopne
insl
dec
xor
pop
es
fs
scas
xlat
pushf
pusha
movl
mov
jmp
cmp
pushf
lea
jmp
lea
pop
pop
call
call
jne
gs
xor
fs
insb
add
insl
mov
adc
add
xchg
call
movb
lea
pushl
not
not
mov
pop
lea
call
jmp
lea
ja
shl
sub
shl
btr
shl
add
shl
shl
mov
bt
sar
and
mov
clc
pushf
repnz
pusha
call
jns
pop
out
cmpsb
mov
out
jbe
popf
push
pop
iret
out
mov
add
mov
and
and
cmp
mov
out
loopne
pop
jmp
mov
fildl
stc
xchg
push
pop
fcoml
rorl
in
lods
push
or
enter
xchg
js
xchg
push
jl
sub
push
loop
cmp
aad
xchg
xchg
adc
jl
popa
inc
push
into
popa
push
fisttpll
pop
es
inc
and
gs
jmp
clc
pusha
sub
movw
stc
clc
cmp
jmp
jmp
cmp
call
movsbw
mov
cmp
sub
add
stc
cmp
shr
jmp
rol
sub
bt
shld
seto
shrd
lea
add
dec
sar
mov
shr
mov
clc
clc
pushf
repnz
pushf
jmp
mov
push
jmp
cmp
cmp
jmp
movl
pushl
push
lea
jmp
pushl
lea
jne
stc
sub
pusha
lea
jmp
movzbw
shl
bsf
mov
stc
bt
sub
push
bt
test
repnz
call
call
imul
jle
out
dec
mov
mov
fs
into
pop
push
repz
scas
dec
push
or
iret
jae
shll
lods
dec
push
push
cmp
cmp
pop
push
test
ja
and
mov
add
push
xor
cmp
and
je
cmc
add
test
push
cmp
mov
lea
jb
stc
pushf
cmp
pushf
call
pop
and
pop
fldenv
pushf
aaa
loope
call
pusha
push
call
push
adc
cmp
imul
sub
cmp
sbb
sub
rorb
xlat
mov
repz
sbb
sub
outsl
add
sti
dec
jnp
ffree
pushf
xorb
ljmp
xchg
aas
repnz
cmpsl
ret
or
loop
testb
aaa
add
es
cwtl
mov
adc
mov
push
lea
jae
bt
shr
pusha
pop
mov
sbb
mov
pop
add
jbe
clc
mov
push
movb
sub
pushf
test
repnz
jmp
pushf
lea
jne
call
xor
pusha
lea
call
call
movb
lea
jb
push
jmp
pusha
pusha
lea
je
jmp
pusha
lea
je
push
add
pushf
mov
lea
jmp
cwtl
dec
add
ret
addr16
sbb
mov
mov
out
pop
fnstsw
jo
xor
dec
xor
lret
dec
and
cmp
and
aas
aas
arpl
add
cmpsl
inc
ret
insb
in
add
fdiv
lods
xchg
xor
rolb
hlt
fcmovnbe
jle
jae
pop
pop
or
sbb
movsl
pop
cmp
js
cwtl
adc
lock
lret
test
add
cli
jge
cmp
mov
dec
adc
popf
faddp
pop
ret
dec
add
push
cli
pop
mov
das
and
add
mov
mov
and
pop
push
jg
sti
cmpsb
mov
popa
cmpsb
jns
cmc
jmp
call
pusha
pushf
adc
push
jmp
movl
pushf
lea
jne
jmp
push
pushf
mov
lea
jne
not
movsbw
lea
pushf
movb
setb
setg
movsbl
call
cltd
ret
aaa
mov
push
test
push
hlt
xchg
out
jle
adc
push
loop
fsubrl
out
mov
inc
pop
cli
mov
adc
mov
add
mov
shrb
xchg
mulb
fidivs
push
popf
jp
stos
popa
push
test
fxch
mov
aam
and
pop
out
je
scas
jno
fmulp
loop
and
test
loopne
paddsb
cld
sbb
or
bound
lret
shr
clc
mov
stc
pushf
cmpb
movb
call
push
mov
mov
cmc
xchg
addr16
shll
popf
cmp
sub
sbb
and
fldt
dec
inc
arpl
sahf
sbb
jno
push
outsb
dec
lods
mov
xchg
add
adc
mov
cmpsl
sub
pop
jecxz
js
lret
lea
jmp
fldl
jbe
divb
testl
cmp
jno
mov
or
scas
sub
fwait
outsl
mov
cmp
cltd
subb
pusha
sbbl
cli
mov
jg
mov
imul
popl
out
adc
jo
cli
pop
sbb
ds
lds
and
stos
add
dec
xor
aam
sarl
mov
push
sub
xchg
push
lret
leave
mov
mov
outsb
scas
and
jno
pop
call
xor
and
popf
mov
inc
aad
inc
js
inc
int3
xchg
lahf
jecxz
pusha
testl
dec
fsub
enter
add
lahf
jl
pop
dec
and
mov
cli
xor
jbe
orl
ljmp
clc
fiadds
outsb
push
sub
ja
orb
loopne
iret
pop
push
dec
in
idivb
fsubrs
in
inc
lods
xchg
call
loopne
int3
sbb
xor
test
sub
movsb
push
cltd
push
cmp
sahf
rcr
mov
and
xchg
inc
fnstsw
adc
sbb
xchg
movsl
sbbb
repz
xchg
sbb
iret
xor
sub
xor
je
andl
test
push
imul
sarb
in
mov
mov
dec
xor
pop
push
mov
mov
js
xor
addr16
inc
jb
mov
mov
inc
mov
cmc
mov
dec
mov
push
cmpl
ds
jno
fisubl
insb
dec
xlat
fdivrs
lock
aam
cwtl
and
arpl
adc
outsb
sahf
ret
clc
loopne
mov
mov
cmp
sbb
scas
xchg
stc
and
add
insl
xchg
jns
addr16
and
sbb
fsub
inc
outsl
dec
fcmovb
sub
dec
dec
adc
fucomp
hlt
filds
sbb
lcall
xchg
out
mov
xchg
cmpb
lods
or
jno
gs
nop
jne
mov
jl
call
nop
in
out
insl
push
cmp
jns
negl
rolb
mov
iret
insl
sbbb
sub
mov
lea
cmp
shlb
mov
pop
ljmp
push
or
lcall
xchg
pop
pop
mov
pop
jmp
push
push
repnz
dec
mov
ss
pop
jge
fmull
roll
std
pop
cltd
jno
xor
xchg
jp
bound
nop
mov
lcall
or
divl
movsl
cli
xchg
jle
jp
cltd
adc
int3
aad
xchg
inc
dec
mov
ret
pop
test
xchg
add
outsb
lea
mov
and
jb
or
hlt
mov
pop
ss
xor
outsl
cmpsb
mov
ds
lret
lret
stos
and
and
addr16
pop
ds
std
cli
stc
jle
imul
arpl
pop
xchg
adc
pop
and
loop
push
or
int3
dec
dec
or
mov
cmp
test
mov
icebp
aam
pop
or
testl
xchg
mov
rcrb
mov
lds
int
test
repz
into
incl
add
in
ret
xchg
popa
int
sahf
mov
add
mov
sbb
loope
ret
insb
dec
test
mov
jo
mov
xchg
cli
pop
sahf
icebp
aas
and
pop
sub
aad
mov
jle
pop
pop
mov
pop
rol
movsb
sub
aas
push
loope
dec
hlt
sub
xor
mov
and
ljmp
ffreep
call
sub
fbstp
sub
je
ror
mov
cli
push
addb
adc
mov
iret
push
mov
scas
cltd
cli
pop
pusha
stos
nop
cmc
pop
dec
shll
cmc
pop
inc
cltd
push
sub
pcmpgtd
cmpsl
test
sbb
xchg
jmp
mov
add
mov
pop
out
jg
lea
or
jmp
or
shrb
xchg
jae
movsl
push
stos
mov
xchg
cmpsl
es
or
or
push
push
adc
es
lods
mov
mov
hlt
jns
aam
in
push
aaa
push
jno
loopne
movsb
in
loope
xor
jns
cmp
in
or
fcomps
sub
pop
sti
mov
jge
hlt
mov
jmp
sahf
call
shl
int3
out
roll
mov
inc
xor
jns
adc
mov
sub
xor
sbb
pop
sbb
xchg
or
stos
js
lock
jmp
and
fiaddl
mov
jae
mov
sub
mov
arpl
push
or
add
xchg
dec
in
push
adc
cmp
loope
jnp
arpl
sbb
add
pop
inc
arpl
dec
sub
pop
or
mov
gs
jbe
shlb
sub
jmp
arpl
ficomps
pop
xlat
cmp
stos
xor
adc
mov
push
in
in
int
and
jnp
loope
jp
cli
in
cwtl
mov
imul
in
hlt
arpl
dec
aaa
cmpl
cwtl
mov
and
or
loope
fbstp
shlb
lahf
mov
adc
pop
mov
cltd
push
push
or
int
fld
sbb
jle
js
and
stos
xor
mov
or
nop
ja
cltd
aaa
or
icebp
out
cmp
mov
jge
imul
jg
push
pop
sbb
rorl
sbb
vprotq
cmp
push
inc
xor
xor
sub
ret
sbb
push
fisttpll
dec
es
xor
scas
pusha
cmp
sub
ja
fs
mov
xor
pop
cmp
push
push
testb
xchg
jg
imul
and
ja
rol
clc
ror
neg
sub
movsbw
rcr
bsf
add
sub
clc
mov
ror
mov
clc
call
lea
jne
lea
push
movb
setb
movsbw
cwtl
mov
setl
push
lea
pushf
movl
jmp
mov
lea
jne
rcr
mov
pusha
pushf
bt
add
push
jmp
jmp
mov
call
xor
js
mov
or
fidivl
adc
jmp
lret
pushf
and
aaa
jl
adc
lcall
xchg
sub
in
sbb
pop
pop
adc
jmp
push
ja
shrb
mov
sbbb
add
adc
fists
or
jg
push
cs
seta
lea
movb
movsbw
setp
push
call
xchg
in
pusha
pop
dec
inc
xlat
int3
call
lds
sarl
xchg
repz
pop
jb
xchg
and
mov
ret
push
and
mov
and
ret
adc
add
pop
lret
loop
or
push
sbb
stc
lret
cmp
inc
xor
pop
ficoms
jge
inc
dec
pop
shrl
lea
mov
pop
insl
pushf
mov
aad
fsubrl
lods
popf
sub
cmpl
nop
mov
mov
add
aam
int
pop
lea
notb
sbb
mov
lret
and
xlat
test
cmp
mov
movsb
test
lea
imul
pusha
std
inc
ss
fs
add
out
adc
bnd
imul
subl
not
push
cmp
mov
int
sbb
fidivl
push
xchg
data16
jecxz
xchg
mov
push
adc
xor
pop
vmread
inc
enter
repz
lods
dec
out
sahf
aas
xchg
imul
sahf
lock
and
mov
pop
std
xchg
mov
out
mov
cltd
xor
jp
in
cmp
inc
jge
movsb
dec
and
fistpll
sub
cmp
mov
push
mov
enter
xor
cwtl
outsb
mov
inc
mov
add
sbb
pop
dec
sarb
loop
inc
jg
imul
insl
jmp
mov
rorl
mov
xor
dec
xor
dec
xor
pop
xchg
leave
jg
inc
fists
hlt
daa
jge
popa
loope
jo
aas
daa
xchg
adc
hlt
sarl
inc
pushl
addr16
cmp
inc
leave
gs
cld
rclb
inc
mov
mov
loopne
leave
xlat
mov
add
repz
in
sbb
cmp
jb
push
xor
test
pop
cmp
mov
jg
je
sub
sbbb
pop
in
rorl
cmc
push
xor
add
xor
add
je
push
aam
push
or
scas
pop
nop
lret
pop
ret
inc
mov
sub
test
jecxz
lods
pop
cli
jo
dec
xor
fdivl
cmp
movsl
push
aaa
or
push
or
lret
jg
je
stos
mov
jmp
lea
jne
daa
cmp
shrd
sub
ror
stc
mov
test
add
neg
or
mov
cmp
test
push
lea
je
jmp
cwtl
movl
call
jmp
pushf
push
pushf
mov
lea
setbe
jmp
mov
test
sbb
sbb
stc
or
xchg
sub
or
in
mov
jb
mov
fs
push
ljmp
into
pop
fisubrl
or
xchg
stos
xchg
pop
cmp
jne
ret
mov
add
loopne
mov
shr
sar
jmp
fstps
dec
test
fwait
inc
cmp
xchg
addr16
pop
jne
or
out
int3
std
pop
repz
jae
xchg
adc
mov
subl
and
int
pop
xor
popa
inc
arpl
jg
jne
les
mov
dec
rcl
shrd
sub
mov
pusha
add
bt
cmc
bt
mov
movb
test
clc
movw
test
jmp
fsubs
pop
roll
dec
bnd
fdivrl
adc
adc
cmpsb
cmpsb
jmp
jno
cmpsb
jl
dec
ss
ret
ret
xor
xchg
xchg
sbb
push
or
and
aas
fnstenv
xchg
add
fnsave
mov
xchg
popa
jbe
adc
jg
jbe
std
or
lods
sbb
pusha
movl
pushf
movw
lea
jmp
or
lea
daa
shll
bound
add
mov
mov
cltd
xor
pop
adc
fiaddl
int
or
ja
aas
mov
cmc
lcall
mov
sub
jl
and
adc
or
xchg
andb
jo
in
mov
inc
cmc
mov
inc
andb
fs
mov
insl
lock
sub
mov
icebp
icebp
enter
in
data16
inc
and
hlt
shl
jg
ja
ja
xchg
icebp
jmp
push
decb
inc
movsb
int3
mov
lret
cmp
aam
ja
inc
jnp
cmpb
movsb
xlat
ret
push
cmp
movsl
dec
stos
sub
jns
mov
fucomp
cmpsl
jle
mov
and
or
pop
insl
pop
aaa
add
adc
inc
xchg
dec
rclb
pusha
movaps
xor
cs
jns
xchg
fisubs
test
outsb
mull
lods
xlat
cli
mov
fwait
sbb
or
ja
xchg
imul
push
lea
ja
shl
dec
xor
not
sub
bsr
bsr
call
lea
je
bt
cmc
call
sbb
add
int3
call
mov
jae
pusha
xchg
enter
mov
sbb
ret
xor
lret
imul
pop
subb
xsha1
cmpsb
mov
lea
repz
lock
data16
push
adc
mov
sbb
jo
call
pushl
sub
jmp
call
pusha
lea
jne
setno
lahf
setnp
not
movb
push
pop
pusha
call
movl
jmp
mov
movl
call
lea
jne
call
push
adc
dec
pop
pop
or
and
add
lock
push
jp
aam
lret
jnp
les
imul
inc
sbb
out
push
add
fistpl
leave
incb
jmp
outsb
lock
mov
mov
test
pop
fldl
mov
inc
sub
pushf
jae
dec
aaa
push
jns
mov
xchg
cmp
mov
rcll
pushf
loope
sub
jecxz
mov
cltd
js
push
mov
cltd
cs
test
lahf
pop
icebp
divl
dec
push
imul
inc
sub
lret
jg
jno
pop
adc
jp
bt
and
movsbw
stc
add
bsf
jmp
jmp
pushf
mov
stc
bt
pusha
clc
test
pushl
jmp
call
call
jmp
pushf
movl
mov
mov
pushl
lea
jmp
mov
setl
lea
movsbw
setnp
lea
pushf
call
jmp
mov
push
scas
scas
roll
aaa
loopne
ss
fsubl
out
in
mov
pop
jb
cmpsb
jae
cmp
ret
or
mov
pop
imul
movsb
jno
xchg
fistps
inc
add
lds
inc
in
adc
add
sti
sahf
mov
mov
push
jg
jb
push
inc
pushf
mov
cmp
cmc
cmpb
call
pushf
sub
call
call
pushl
movl
push
pusha
lea
jmp
jmp
call
pushf
jmp
lea
je
cmp
push
add
pushl
push
movb
cmp
movb
call
test
sub
mov
rep
movsbw
lea
bswap
mov
pushl
pushf
pushf
push
lea
jmp
pusha
pusha
pushf
lea
ja
pusha
clc
clc
imul
cmc
test
pushf
clc
add
pusha
pushf
push
lea
jmp
insb
out
add
xchg
inc
jo
dec
dec
sbb
cmp
mov
mov
adc
aad
aaa
mov
or
cmp
ficoml
or
nop
loop
sub
outsl
popa
push
enter
nop
or
mov
or
jae
out
xlat
hlt
add
inc
inc
pushf
pusha
pusha
inc
add
cmc
stc
xchg
rol
shrd
bt
mov
neg
add
mov
pushf
mov
bt
jmp
jmp
pushl
popl
movl
movb
pushl
ret
movb
mov
movl
jmp
cmpsl
rcll
or
cmc
repz
jnp
scas
aad
inc
rcll
sti
jae
in
mov
xchg
xor
fs
jmp
jmp
outsl
xchg
lods
pop
inc
lods
int
lea
xor
xchg
imul
jg
jae
sahf
dec
lea
jb
cmc
cmpb
pushf
pushf
call
movb
lea
jb
push
call
cmpsb
mov
dec
test
flds
mov
mov
iret
int
mov
jecxz
scas
inc
fiadds
push
push
cld
lret
test
rcrl
mov
enter
or
pop
inc
out
xor
fwait
push
das
lock
js
jbe
fcompl
inc
nop
inc
out
mov
sub
in
jne
mov
aam
jo
aaa
aam
pop
mov
cmp
aad
lds
les
xchg
jb
out
push
out
fsts
loope
arpl
repnz
push
scas
add
pusha
inc
faddl
jl
lret
mov
dec
shrd
btc
call
cmp
call
adc
lea
pushf
jmp
pusha
stc
cmp
jmp
add
stc
pushf
mov
test
clc
pushf
test
movl
push
jmp
fidivrs
pop
pop
imul
inc
inc
push
mov
shlb
push
arpl
das
inc
mov
addr16
mov
pop
jmp
add
pusha
push
andb
lea
inc
test
test
mov
lret
scas
push
pop
inc
dec
into
jns
popf
cwtl
mov
sub
cmpb
call
xchg
or
arpl
dec
ror
jmp
push
in
xchg
stos
clc
loop
sub
xor
jge
jp
push
mov
sub
in
shrl
in
lods
test
push
jbe,pt
popa
cmpsb
ret
in
dec
es
stos
in
sti
pop
aam
add
mov
or
repz
into
xchg
dec
sub
lock
cmc
shll
clc
shrb
cli
ljmp
pop
add
xor
cmp
ret
popf
in
hlt
and
adcl
cmc
add
cltd
mov
movsl
out
imull
sbb
movsl
jb
mov
push
inc
mov
add
fwait
dec
clc
mov
xchg
rol
inc
adc
adc
loope
mov
cmpl
or
sbb
scas
movsl
sbbb
mov
jle
ds
orb
mov
imul
cmp
or
sub
or
insl
dec
in
rorb
adc
nop
and
cmp
clc
out
fwait
inc
js
adc
stc
into
dec
add
or
out
push
mov
push
in
and
jnp
push
mov
test
lock
fnsave
loope
jle
push
mov
jmp
movb
pusha
lea
jne
push
movb
lahf
movsbl
mov
mov
call
pop
movl
bswap
not
lea
pushf
pushf
jmp
test
sub
movb
clc
pushl
popl
bt
cmc
test
cmp
pushf
pushf
lea
ja
shr
sub
push
sub
add
bsf
mov
call
test
pusha
jmp
pushl
pushf
mov
cmp
push
lea
ja
inc
inc
sub
cmp
btr
add
shl
pusha
shld
movsbw
mov
cmp
test
cmp
mov
clc
call
jae
push
pusha
test
bt
cmp
pushf
push
movb
lea
ja
mov
inc
pusha
jmp
push
call
lea
push
movl
call
pushf
lea
jne
bsf
add
mov
stc
stc
cmp
clc
add
jmp
push
or
pushf
movb
pushf
call
push
cmp
add
pushf
lea
jmp
pushl
pushf
lea
ja
add
ror
sub
clc
jmp
pusha
call
or
movl
pushf
mov
lea
je
stc
call
call
sti
sub
mov
test
ret
ja
xor
sub
stc
outsl
cmpsb
pop
js
ja
xor
jns
pop
jnp
mov
jg
lcall
fld
out
or
ret
mov
mov
scas
int
popf
mov
dec
jo
notb
push
cmpsl
loopne
in
out
loopne
adc
cs
push
xor
adc
xor
sub
pop
dec
cmp
and
push
push
sub
mov
push
xchg
xchg
inc
stos
rorb
dec
rcr
pusha
sub
and
jns
sbb
int
pop
pop
or
add
mov
cmp
xor
fadds
jl
lock
xchg
push
xchg
inc
sub
clc
dec
loop
inc
mov
push
xchg
arpl
out
jnp
sahf
pop
xchg
jp
pop
faddl
shrb
iret
pop
addr16
outsb
sbb
hlt
fisubs
out
or
xor
lret
inc
and
push
lahf
jg
jns
cmpsl
xchg
pushf
test
stc
movzwl
or
mov
cmc
add
call
pop
mov
jmp
call
cli
jnp
in
sti
push
pop
adcl
and
in
lea
out
cmpsl
popf
add
adc
je
mov
mov
xchg
mov
mov
cld
mov
dec
data16
or
js
imul
mov
xor
je
or
cmp
jg
sbb
fists
jmp
pop
xchg
and
outsl
xchg
push
adc
or
pop
std
pop
dec
leave
addb
mov
icebp
mov
lock
and
pop
icebp
cld
mov
cmpsl
mov
std
jb
cmp
hlt
stos
mov
jg
jp
faddp
fsubl
std
pop
xchg
pushf
movsb
and
cmp
pop
jle
jns
inc
and
and
jl
xchg
movsb
es
lcall
pop
push
shl
inc
call
insl
out
ret
roll
mov
push
add
push
dec
fs
faddp
pop
hlt
jmp
out
jle
ss
xor
push
push
mov
gs
sbb
clc
pop
aad
push
rcll
je
loopne
pop
cmp
jnp
arpl
pop
jg
aaa
aad
xchg
mov
mov
push
and
repz
and
cld
pop
cmp
pop
clc
ja
xchg
adc
push
shlb
push
xlat
mov
cmp
cltd
and
mov
shlb
push
push
aad
pop
cli
and
mov
adc
out
adc
xor
and
pop
mov
mov
nop
cs
xor
and
pop
cmp
cld
pop
push
cli
push
movsl
enter
dec
jb
mov
push
aaa
stos
loopne
cmp
and
fnstcw
je
xor
mov
xchg
repz
xor
mov
arpl
sbb
xor
and
mov
mov
ja
repnz
xchg
push
js
andl
mov
push
xchg
mov
scas
es
sbb
push
mov
mov
and
pop
sbb
cli
pop
add
div
icebp
loop
mov
cmp
je
inc
xor
or
cld
sbb
cltd
popa
push
cmc
add
push
fs
push
mov
cmpsb
fstps
mov
icebp
cli
adc
aam
popa
jno
mov
mov
push
in
es
mov
mov
xor
sbb
fstpt
lcall
repnz
ret
fs
mov
pop
fs
adc
pusha
jno
shll
scas
mov
push
and
mov
ja
ja
in
or
repz
inc
mov
cmp
mov
jae
xor
jo
sahf
fs
sbb
add
repnz
stos
xchg
push
insl
xchg
inc
cmpsb
cld
fistpl
mov
inc
nop
jno
repnz
sbb
fdivl
popa
mov
dec
sahf
popa
test
or
mov
push
sbb
xor
push
jno
adc
fs
xlat
pop
jp
sbb
cmp
add
inc
das
repnz
xorps
fstps
divb
xchg
and
pop
aad
ds
pop
rcl
fdivrp
iret
fs
sbb
cmp
jne
xor
lcall
jo
shll
adc
adc
xchg
fs
fildl
jne
jb
xor
cld
out
fstpt
popa
shll
sahf
mov
repnz
sahf
add
pop
fs
pop
sahf
bnd
shlb
inc
popa
mov
xchg
adc
fs
add
lcall
fs
fs
scas
lcall
pop
push
icebp
loope
xchg
setb
lcall
mov
mov
pusha
outsb
mov
push
frstor
jb
fs
icebp
sbb
mov
mov
add
fs
pop
jno
cmp
cmc
jp
xchg
adc
fs
jae
dec
cmc
rol
movsb
cmpsb
cmp
mov
sbb
and
mov
in
adc
push
mov
jp
mov
addl
mov
fwait
popa
sahf
icebp
jne
imul
mov
hlt
negl
into
xor
push
pop
jb
scas
sbb
fidivrs
mov
push
adc
cli
cltd
mov
fidivrl
pop
call
cmp
mov
mov
cmp
push
mov
jns
pop
mov
aaa
push
add
fs
scas
out
jns
sar
xchg
dec
mov
jns
push
repz
sbb
jns
sbb
int3
inc
push
shrb
aas
cltd
sbb
mov
lds
aas
mov
loopne
mov
in
fiaddl
cmpsb
and
aam
idiv
sahf
sbb
mov
hlt
rcr
add
jne
mov
fistl
xchg
xchg
sub
sbb
cmpsb
test
fstl
add
dec
mov
ja
add
push
fs
push
je
mov
xchg
adc
mov
repz
cmp
scas
jnp
jae
xchg
mov
xchg
mull
sahf
push
xchg
jns
rcr
insl
jge
rclb
aas
add
adc
cmp
jne
mov
mov
cwtl
xchg
mov
aam
rcl
xchg
pop
int3
scas
mov
movsb
ret
add
add
push
punpcklwd
cwtl
xlat
jbe
sbb
lods
add
xchg
shrl
push
std
loopne
sbb
clc
scas
xchg
adc
les
adc
mov
and
xchg
sbb
pop
mov
add
mov
cmpsl
mov
jg
jnp
fsubl
jl
stc
xor
fistps
mov
mov
cmp
jb
jle
cmc
or
fistl
mov
adc
lcall
jnp
mov
fmulp
std
fs
jl
mov
xchg
mov
lcall
pushl
pop
clc
cmp
sbb
lcall
insl
mov
loopne
cld
mov
je
cld
movsb
pop
ss
mov
lahf
mov
out
fs
into
mov
push
cltd
jmp
mov
andb
neg
jns
aaa
sti
mov
jne
fs
cmp
add
jne
adc
jns
mulb
mov
shlb
insl
and
cld
xor
fisubs
fs
mov
frstor
hlt
sahf
aam
jp
cmc
adc
fstpl
in
and
mov
hlt
jb
pop
insl
mov
lods
and
xchg
jns
fs
ss
mov
pop
xchg
xchg
add
pop
scas
scas
add
notb
jmp
cmp
push
mov
cmc
jnp
in
loop
jno
mov
and
in
lcall
cmp
adc
loope
std
jb
idiv
xor
add
inc
and
push
loopne
lret
mov
in
fs
xor
div
inc
mov
cld
mov
xor
mov
lret
aam
insl
mov
mov
mov
sbb
aam
in
dec
std
add
les
push
pop
fdivl
ss
xchg
mov
shl
adc
lock
repnz
aad
dec
adc
cli
xchg
mov
rcll
xor
not
aad
cltd
hlt
mov
push
and
cmp
jge
mov
int
jns
pop
mov
loop
sahf
cmp
mov
adc
mov
sbb
cmp
stos
data16
add
push
xchg
mov
add
mov
lcall
mov
mov
data16
imul
push
mov
aam
jmp
cld
mov
out
inc
das
push
fs
xchg
les
fidivrs
fs
push
mov
mov
and
frstor
or
negl
jne
add
mov
in
stos
or
sbb
cmp
lds
jp
cmc
push
sarl
mov
mov
mov
jns
jne
mov
xor
cld
stc
test
and
and
lahf
mov
ss
jmp
cld
pop
loope
data16
jns
fincstp
or
mov
dec
data16
mov
orb
data16
xchg
jp
inc
xchg
pop
adc
jo
addr16
sbb
aaa
jno
adc
mov
ret
aam
mov
mov
cltd
je
frstor
hlt
mov
icebp
jmp
jne
or
repz
xchg
mov
xlat
mov
data16
fs
sbb
scas
inc
clc
icebp
push
mov
add
jns
sbb
popa
lahf
ljmp
add
or
jne
pop
cmp
fdivrl
mov
je
mov
stos
ret
and
push
xchg
in
bound
mov
jns
pop
mov
pop
ficoms
or
adc
data16
aaa
mov
scas
and
inc
shlb
and
mov
dec
out
icebp
stos
in
shlb
push
fwait
cmp
enter
jb
jle
cmp
jns
fs
mov
dec
data16
pop
xor
push
lock
into
dec
jns
std
mov
cmc
xchg
je
sbb
mov
fs
or
lock
data16
cmp
pop
testl
mov
mov
xchg
push
ss
out
jbe
jecxz
xchg
imull
movb
mov
loopne
mov
popa
pop
sbb
push
shlb
mov
test
and
push
fidivl
imul
xchg
out
xchg
mov
add
and
loopne
pop
xchg
pusha
arpl
int3
insb
xchg
push
push
lret
add
mov
out
jae
sbb
xchg
push
jae
cmc
out
push
addr16
fistpl
adc
xchg
add
xchg
push
sbb
jbe
or
add
pop
nop
add
push
popf
in
sbb
mov
cmp
cli
jns
mov
cwtl
out
jp
test
sub
stc
inc
sahf
cmp
lcall
mov
iret
dec
lret
outsl
sbb
xchg
sbb
mov
xchg
inc
outsb
sbb
test
mov
and
pop
pushf
or
pop
or
fdivr
mov
adc
push
xchg
mov
add
rolb
in
push
mov
inc
lds
mov
movsl
loopne
data16
mov
push
bound
pop
ret
fsubl
ds
mov
loop
or
jge
adc
shlb
mov
addb
xchg
movsb
adc
and
popa
mov
rcll
adc
mov
fdivs
mov
iret
xchg
repnz
pop
call
xchg
aas
bound
sahf
movsb
and
and
movlps
mov
mov
loop
fcompl
sarl
cmc
mov
mov
roll
cmp
testb
lods
and
xchg
mov
mov
push
adc
ret
sbb
shlb
sti
mov
in
pop
pop
mov
es
push
movsl
repnz
ja
fldenv
and
sbb
sub
sbb
mov
shrl
inc
pop
pop
mov
sbb
push
cld
jne
pushf
mov
popf
or
or
push
fwait
lcall
pop
xchg
add
dec
popa
add
sbb
ss
xchg
and
jl
clc
dec
add
sbb
fdivl
push
jae
mov
fnstenv
adc
daa
mov
outsb
rcrl
in
xchg
add
cld
int
cmp
mov
push
sbb
lock
lods
movsb
movsl
fmull
and
mov
stc
and
cmc
movsb
lods
add
les
push
pusha
iret
pop
cmp
lea
and
xchg
inc
into
cli
pop
inc
xchg
push
lcall
daa
push
cli
jg
dec
mov
orb
mov
int3
sub
mov
add
lds
mulb
xchg
aam
cmc
sahf
lcall
and
pcmpeqw
imul
push
mov
sub
pop
clc
decl
and
adc
pop
sbb
les
jno
add
mov
fwait
add
or
outsb
jnp
ljmp
jg
cmp
js
popa
cmpsb
in
mulb
mov
sub
mov
inc
xchg
fdivrs
cmpsb
je,pn
add
dec
mov
pop
popa
xchg
jmp
adc
test
sbb
pop
sti
scas
mov
loop
icebp
xchg
mov
inc
inc
push
pushf
sub
pushf
mov
jle
inc
rcrl
inc
bound
cld
mov
pop
xchg
jl
mov
mov
vcvttpd2dqy
jle
mov
fs
outsb
outsl
adc
es
jbe
inc
shrl
mov
ror
xchg
mov
jbe
into
inc
or
leave
jle
mov
je
lret
into
je
mov
in
pop
faddl
or
in
dec
out
cld
or
mov
or
mov
xchg
add
dec
mov
out
pop
push
shlb
adc
jo
lods
hlt
movsl
push
aaa
xchg
and
lds
jmp
fninit
add
movsl
imul
setle
testb
sbbb
fs
fnsave
pop
mov
mov
pop
adc
mov
pop
or
nop
lock
jne
shlb
xchg
adcb
rorb
adc
push
cs
out
js
jne
repnz
adc
sbb
mov
inc
xor
movsl
inc
movsb
pop
std
and
sbb
or
scas
push
push
and
fcoml
push
data16
call
pop
mov
and
aam
loop
fdiv
xorb
mov
sbb
inc
imul
adc
repnz
cmp
add
cld
fdivr
cli
xchg
or
cld
or
sarl
fstps
out
add
jmp
nopl
cmp
loope
push
test
jle
fsubp
mov
loope
adc
jmp
sbbl
pusha
loop
mov
jo
imul
fisubs
loop
and
ds
pop
cs
arpl
shrb
jne
add
sub
popf
add
cmpsb
push
or
lcall
cmp
inc
and
stc
jo
call
jbe
add
xor
pslld
push
inc
xor
inc
pop
push
arpl
in
jbe
or
aad
jl
mov
jecxz
hlt
mov
pusha
push
test
sbb
sbb
jo
add
mov
dec
adc
jge
adcb
push
jmp
and
movb
pop
and
jb
pop
dec
mov
test
pop
sbb
repz
into
test
cmpsb
shll
enter
js
mov
sub
mov
bound
xchg
aam
and
jbe
jbe
pop
clc
shll
sbb
clc
pop
pop
fdiv
or
vunpckhps
fwait
test
ljmp
andb
or
push
sbb
mov
jns
adc
or
adcl
sti
xchg
es
mov
in
mov
mov
or
jbe
push
mov
je
jne
gs
mov
fiadds
loope
in
in
movsl
and
ret
std
aas
xchg
std
mov
jbe
sbb
fsub
rorb
lea
in
mov
jne
jbe
imul
sahf
fdivrl
pop
push
sahf
push
mov
out
aas
mov
and
jne
sahf
adc
fwait
mov
add
icebp
xchg
sbb
scas
mov
jb
ret
and
out
mov
adc
dec
into
dec
push
sbb
and
dec
ds
jge
lods
and
and
in
test
dec
in
adc
cld
scas
das
sub
inc
nop
fstpl
lock
or
jmp
and
inc
shlb
out
sbb
fisubl
mov
and
out
fadds
push
inc
inc
cmp
or
push
mov
xchg
insl
or
outsl
stos
pushw
into
movsl
movsl
cwtl
jl
jle
bound
fsubl
cltd
jge
sbb
add
xor
movsb
hlt
es
or
cli
pop
cmc
jno
jb
and
lea
int3
add
mov
out
loop
add
xchg
add
loop
sub
add
jle
call
cmp
rorb
clc
pop
pushf
mov
aaa
js
and
xchg
mov
mov
lcall
pop
or
pop
xor
ja
inc
cld
sbb
sbb
fld
pusha
mov
cltd
mov
fs
pop
stos
xchg
pop
push
daa
andb
dec
cmp
sbb
add
or
mov
in
mov
add
icebp
add
pop
push
cld
adc
loopne
mov
arpl
pop
add
cmp
js
sbb
leave
popa
push
in
imul
insb
pop
cmpsb
iret
lods
cli
je
gs
test
rcl
fs
mov
out
int3
mov
sub
lahf
les
rsqrtps
push
iret
inc
pop
jmp
push
std
and
cmc
and
movsl
out
stos
dec
addr16
lea
or
sbb
cli
or
lret
in
xchg
and
stos
jle,pn
mov
xchg
ss
nop
and
pop
mov
inc
enter
inc
mov
add
test
ja
ja
add
push
test
or
and
and
push
jbe
inc
inc
sbb
adcl
fcoml
push
aam
mov
sbb
inc
aaa
and
xchg
test
aad
frstor
sub
or
and
into
sarb
test
fimuls
mov
cmpsb
sbb
inc
mov
in
adc
imul
and
pop
es
cmpsl
adc
movsb
leave
sahf
jle
jge
pop
jne
or
sub
sti
scas
jl
loopne
dec
mov
fldenv
loopne
mov
out
and
sbb
xchg
inc
jne
mov
sbb
xchg
xchg
test
movsl
jl
pop
xor
adc
mov
daa
xchg
cld
and
xchg
xorb
leave
leave
sahf
hlt
mov
loope
in
or
lds
push
fsts
out
loope
push
mov
adc
shrb
test
jae
testl
adcb
cld
movsl
into
je
xor
loope
scas
push
push
mov
mov
inc
repz
out
adc
adc
ja
fidivrl
sbb
shrl
fldcw
pop
dec
xor
mov
sbb
add
loope
add
es
add
and
fadd
mov
and
sbb
push
jge
in
scas
and
enter
imul
cmpsb
push
cmpsb
pushf
inc
jge
aad
shlw
sbbb
outsl
mov
or
jae
ffree
outsb
push
cwtl
jno
adc
cmp
or
add
orb
into
scas
mov
out
test
jmp
ret
adc
mov
mov
movsl
pushf
in
fdivrl
fisubrl
cwtl
inc
mov
movsl
dec
sub
add
cmc
and
cmp
inc
pusha
sub
pop
xorl
inc
or
bound
or
mov
mov
mov
inc
xor
mov
fidivs
mov
add
daa
jge
adc
shr
mov
inc
jbe
je
es
in
fsts
dec
sahf
pop
inc
sbb
pop
add
or
je
sti
mov
mov
jmp
movsl
sbb
inc
pop
shrb
mov
sub
cmpl
or
or
incl
push
es
dec
popf
mov
cmc
mov
dec
aad
and
lods
or
cltd
xor
push
add
hlt
and
test
xchg
and
mov
jl
inc
and
or
test
pop
push
or
aam
icebp
je
xchg
loope
mov
sbb
roll
mov
ret
int3
cmp
push
mov
sub
push
cmc
and
out
test
mov
jne
push
xor
ljmp
mov
out
or
into
jnp
mov
mov
push
iret
in
cwtl
sahf
mov
and
dec
loopne
int3
rol
jecxz
xchg
shll
es
lret
mov
decl
mov
push
in
push
popa
push
inc
push
fidivrl
mov
or
add
es
xchg
in
in
loop
jnp
dec
loop
push
ret
jbe
dec
jbe
or
mov
push
daa
jmp
lcall
mov
sbb
sti
notb
dec
mov
push
and
and
or
add
in
mov
or
push
ss
je
push
or
gs
mov
roll
movsb
inc
popf
out
out
imul
jne
adc
cwtl
xchg
dec
data16
pop
push
cmpb
dec
xor
or
addr16
shlb
imul
and
cmc
and
add
inc
mov
lods
aaa
and
adc
movsl
incl
and
js
cli
mov
or
lods
mov
push
hlt
fisubrs
dec
dec
push
mov
shl
or
aas
rcrb
mov
les
scas
jnp
mov
xor
or
es
cmp
iret
pop
leave
fidivl
xchg
mov
add
les
lods
rcll
adc
scas
test
mov
mov
push
es
shlb
rol
data16
ja
je
test
mov
loopne
loopne
scas
push
push
into
movsw
mov
dec
pop
aam
ficomps
icebp
sbb
fdivrs
mov
xchg
cmpsb
les
sarb
ficompl
lds
in
mov
xchg
mov
or
pusha
push
data16
jbe
pop
movsl
adc
xchg
or
or
jmp
insl
jmp
and
test
pop
daa
test
xor
arpl
cmpsb
mov
loope
pop
pop
pusha
cmc
sub
and
pushf
aas
add
mov
daa
mov
in
jmp
xorl
pop
imul
pop
push
notb
test
mov
out
scas
pop
cld
pop
inc
push
movsb
mov
cmp
vpmullw
js
xchg
xor
sbb
movsb
nop
inc
dec
fs
cmp
dec
push
xor
sbbb
jmp
push
repz
sti
fs
xlat
or
clc
pushf
es
cmpsb
repz
push
and
mov
movl
adc
mov
in
pop
addb
push
nop
add
enter
cmp
jbe
jl
test
mov
mov
inc
notb
xchg
xor
es
mov
sub
orb
imul
pushf
mov
pusha
xchg
repnz
sbb
movsl
int3
in
in
cli
mov
mov
dec
mov
jg
sub
cwtl
add
pop
std
test
pop
ljmp
xlat
fldl
push
aam
xlat
jp
and
jmp
push
mov
fmulp
mov
and
in
cmp
fbstp
idivb
and
mov
fiadds
and
xchg
loope
and
test
xchg
addl
movsl
jb
mov
and
and
data16
cmp
in
xchg
repnz
sbbl
out
and
je
mov
aas
ret
pop
cmp
cmpsb
xchg
lds
jne
sbb
xchg
adc
add
and
movl
ljmp
pop
les
enter
jb
pop
pop
jo
popf
jne
aaa
popf
or
inc
jno
leave
adc
mov
and
and
nop
mov
aaa
aaa
mov
into
jne
inc
jbe
or
data16
add
outsl
jle
and
inc
jne
movsl
jae
push
and
jno
test
jbe
inc
adc
rcr
mov
add
or
mov
mov
cs
je
hlt
pop
add
pop
loopne
mov
jno
mov
push
out
std
sbb
repnz
sbb
add
mov
mov
es
cmp
cwtl
movb
daa
or
mov
mov
rcl
sbb
push
shr
cmpsb
insl
lret
push
cmp
mov
sbb
imul
shlb
movsl
mov
mov
push
ret
cmpps
mov
bound
lods
loopne
int3
mov
adc
cld
aaa
pop
stos
add
and
popa
or
xor
and
cmc
xor
inc
fwait
sti
sbb
cmp
inc
adc
adc
in
std
movsb
pop
cmc
testb
mov
dec
ja
mov
mov
jecxz
idivb
mov
movsb
repz
cli
inc
push
mov
pop
xchg
jecxz
pop
scas
shlb
out
sbb
test
inc
movsl
out
out
and
psadbw
or
inc
pop
push
jle
pop
cmp
into
out
or
outsl
xchg
inc
mov
inc
xchg
data16
mov
xchg
imul
aaa
fiadds
or
in
cmp
imul
pop
jg
aam
ljmp
cmpb
shl
shr
stc
fisubs
fsub
and
inc
or
cmp
les
int3
pop
sub
je
data16
aam
cmp
mov
inc
xchg
pop
pop
cmc
movsb
ja
fs
cmp
mov
std
and
jecxz
add
sbb
fidivrl
clc
and
sbb
shr
jmp
aas
repnz
and
mov
movsb
jno
les
push
jb
fs
mov
xor
repnz
jbe
mov
movsl
popa
adc
pop
or
pop
test
and
lahf
cli
dec
pushl
cmp
inc
or
fldcw
ret
inc
and
addr16
cmpsb
sbb
and
out
cs
test
dec
aad
push
push
addb
sbb
pop
setae
scas
inc
xchg
sbb
jne
aaa
das
je
pop
mov
scas
in
cmovne
mov
insl
mov
and
lds
ds
ja
pop
loop
add
repnz
lcall
in
jmp
jge
movsl
ss
pop
jmp
jl
add
pop
ret
jg
jmp
or
adc
mov
or
push
ret
shl
and
dec
add
jmp
js
mulb
repz
cwtl
fwait
jae
gs
jle
add
adc
inc
in
xor
sub
adc
out
gs
add
sub
idivb
mov
out
pop
inc
push
test
pop
xchg
bound
ret
test
or
in
shlb
pop
jbe
lods
daa
mov
xor
xchg
adc
adc
adc
inc
call
pop
dec
pop
aad
aam
sti
ret
jg
sbb
popa
xchg
lods
mov
shlb
pushf
cld
xchg
out
cmpsb
mov
adc
add
adc
inc
sbb
and
push
xchg
lock
jecxz
add
cmpsl
and
arpl
pop
sahf
popf
xchg
dec
in
stos
stos
push
sub
pop
push
cmc
in
xor
jg
daa
xchg
pop
adc
lods
add
cmpsb
enter
mov
in
mov
adc
jae
fcoms
mov
ja
je
aas
ror
enter
mov
sub
dec
iret
mov
incl
out
adc
cwtl
dec
inc
jne
les
in
mov
call
repz
xchg
mov
fimuls
mov
and
pop
mov
mov
add
negb
hlt
mov
cmp
sbb
out
dec
out
fldenv
or
das
mov
out
out
iret
shll
and
dec
push
adcb
hlt
mov
stc
mov
xchg
js
lea
or
or
xchg
lcall
int3
jno
fidivs
sbb
movsl
mov
idivb
pusha
mov
jecxz
inc
in
mov
cmp
lds
mov
nop
jl
outsb
push
movsb
jmp
and
lcall
lcall
or
ret
arpl
shrb
jp
or
int
jecxz
fiaddl
mov
pushf
fidivrl
cmc
test
mov
scas
jo
and
cmp
sbb
fwait
aas
cmp
mov
xchg
cmpsb
jne
mov
push
adc
cmpsb
sub
cmp
stos
int3
jecxz
loopne
es
and
and
cmpsb
popf
pop
lret
pusha
fs
pop
jno
or
mov
iret
in
dec
jp
cmp
sbb
sub
ss
push
movsb
mov
or
in
movsb
aam
or
push
push
pop
aaa
adc
sbb
js
pop
ja
cmc
cwtl
mov
ret
and
mov
mov
sar
popa
out
add
test
mov
adc
or
push
cmp
inc
or
cwtl
inc
mov
sbb
and
or
mov
pop
mov
in
mov
mov
push
bound
fstpl
jb
sahf
sti
xchg
std
push
pop
mov
es
dec
add
iret
sahf
repnz
mov
les
incb
mov
popl
rcl
jl
int
cmc
sbb
pop
push
in
pop
cmpsb
sub
mov
and
sbb
ss
rolb
sbb
call
cmc
mull
adc
pop
popa
jne
lods
repz
mov
adc
lock
mov
add
push
and
or
imul
and
xchg
test
and
dec
dec
adc
add
or
imul
and
leave
and
or
rep
jnp
mov
adc
repz
ret
clc
mov
and
test
mov
mov
sbb
inc
and
in
mov
in
call
mov
ffree
arpl
lcall
or
maxps
jnp
insl
cltd
in
cld
adc
pop
aad
pop
inc
cmp
push
add
sbb
int3
jg
xchg
rorl
dec
cmp
fwait
js
inc
or
sbb
pop
movsl
jne
cmpsl
js
mov
jbe
xorb
pop
js
mov
mov
inc
xchg
adc
adc
movsb
mov
add
movsl
and
data16
test
push
and
pop
pop
pop
arpl
sub
push
out
adc
mov
xchg
and
inc
or
add
negb
sti
inc
mov
and
jne
cmpsw
inc
pop
sti
xchg
adc
call
mov
xchg
pushf
adc
cltd
shlb
mov
adc
adc
cltd
sbb
pop
jbe
sbb
adcl
cld
data16
and
xchg
sti
mov
and
es
enter
addl
movsb
mov
mov
in
mov
jo
imul
dec
mov
daa
notl
mov
sbb
mov
push
out
scas
inc
push
adc
orl
sti
cwtl
sub
js
add
xor
jb
aad
into
mov
jo
in
and
lea
fsubrl
or
ds
cmp
mov
outsb
push
js
pop
enter
rcl
cltd
mov
sub
mov
int3
mov
and
mov
popa
adc
push
test
fadd
aaa
insb
inc
movsb
aad
add
out
adc
js
push
aad
out
and
test
data16
adc
or
movsb
into
inc
inc
add
mov
pop
jp
sbb
test
mov
and
jle
xchg
scas
les
mov
sahf
and
pop
imulb
push
test
sti
iret
mov
mov
loop
out
lret
xchg
out
int
add
hlt
jecxz
in
add
xchg
mov
add
jbe
push
jecxz
mov
test
cmc
jne
aam
push
or
je
pop
xchg
int3
sahf
jl
adc
add
movsl
inc
xchg
lds
aad
into
mov
add
dec
sub
pop
jno
or
cmpxchg
cpuid
xchg
out
or
flds
or
push
cmp
sbb
xor
hlt
cmp
adc
fisttpll
or
push
jmp
or
in
shll
es
push
xor
sub
out
es
call
loop
mov
insb
mov
and
pop
xchg
loope
dec
test
xchg
inc
jne
out
sub
movsl
jmp
daa
jbe
pmulhw
adc
jne
es
cwtl
inc
es
ds
iret
cmp
add
adc
pop
push
cld
dec
ds
pop
add
in
sbb
sahf
cltd
mov
cmp
mov
push
mov
mov
push
add
decl
cmp
and
add
pop
and
pop
mov
mov
mov
pop
lahf
shl
loopne
jb
shl
add
subb
and
outsb
push
js
outsl
push
sbb
jno
inc
xchg
push
jne
lock
sbb
sbb
inc
mov
pushl
mov
jle
xchg
lock
jno
hlt
cmp
es
loop
and
add
in
adc
mov
enter
cwtl
and
add
aam
inc
pop
into
and
repz
mov
and
pop
lcall
or
icebp
pop
sti
ret
sbb
or
adc
push
lcall
inc
add
jb
sub
xor
push
push
adc
cmc
xor
js
ret
cld
mov
movsl
inc
mov
cmpsb
testl
aad
pop
nop
in
xchg
push
and
push
xor
sbb
data16
sbb
std
mov
pop
jl
xchg
and
insl
and
out
mov
mov
and
call
or
mov
mov
jae
scas
wrmsr
jo
test
push
test
push
add
loope
or
jmp
inc
cmpsb
fistpl
daa
cmp
or
das
into
cwtl
jno
cmpsb
xor
dec
sbb
sbb
mov
adc
inc
repnz
adc
and
pop
jecxz
jmp
sbb
nop
cmp
in
and
cmp
data16
cwtl
clc
in
pop
and
adc
lcall
sahf
es
std
cli
push
push
out
test
nop
mov
pop
lods
pop
pop
inc
jecxz
inc
adc
mov
or
int3
movsb
es
mov
push
cmpsb
outsb
mov
in
mov
fs
bound
ret
jmp
cmp
mov
out
insb
mov
js
inc
mov
pushf
jp
cmp
jmp
mov
sarl
mov
push
aas
mov
in
dec
jnp
pop
dec
sbb
aad
xor
cmp
adc
jle
aaa
test
rcrb
xchg
xchg
ficoms
mov
push
scas
in
xchg
je
repz
xchg
rcrl
in
in
jp
mov
loopne
mov
push
xchg
stc
arpl
orb
imulb
add
cwtl
and
movsb
js
fmull
pop
fistpll
mov
mov
and
mov
xchg
cmc
push
pop
mull
add
cmp
push
adc
mov
push
xchg
push
cmc
ds
mov
cs
xchg
xor
stc
jl
aad
cmpsb
xor
pop
mov
lcall
inc
xchg
jo
push
jbe
rcr
jecxz
inc
cli
and
jecxz
fs
test
scas
jle
cmpsb
mov
repz
movsl
data16
movsb
out
int3
adcb
mov
xchg
pop
xchg
add
or
mov
js
lret
imul
hlt
or
sbb
ja
rolb
mov
popa
sub
stc
lahf
ret
inc
mov
lds
jo
int
sti
cmp
xchg
aaa
inc
inc
cwtl
sbb
sbb
jge
out
and
fdivr
sbb
fs
mov
mov
push
gs
test
rol
pop
pause
ljmp
cli
sbbb
scas
dec
arpl
jmp
sub
cmp
pop
dec
push
and
test
add
mov
shll
mov
test
pop
and
add
and
fimuls
sbb
add
adc
popa
imul
and
movl
jp
dec
or
push
ror
data16
or
js
js
add
lods
push
mov
es
cmpl
push
add
js
cmp
and
and
fsubl
pop
outsl
push
xchg
xchg
sbb
xchg
fidivrl
sbb
add
add
adc
pop
sub
or
js
push
test
popf
push
lahf
mov
or
jns
and
adc
inc
js
test
cmpsl
int
popf
cmp
aad
int
sti
lods
out
movsb
xchg
xchg
rcrb
mov
popl
add
mov
cld
movsb
sti
mov
clc
aad
push
clc
push
in
add
loop
in
or
inc
int
add
fwait
jno
cmp
xor
adcb
lcall
jecxz
add
loop
sbb
fstps
and
inc
pop
aam
xchg
mov
pushf
jb
dec
and
pop
dec
push
add
loop
lret
cli
das
mov
inc
mov
dec
cmc
addb
ja
jne
sbbl
popf
daa
xchg
cmc
sbb
sbb
loopne
inc
and
fists
and
imul
loopne
xchg
adc
push
shl
push
xchg
daa
adc
sbb
enter
mov
xchg
out
jb
push
or
adc
cmp
cltd
mov
pushl
mov
xchg
and
loope
add
mov
add
pop
add
dec
mov
daa
into
lcall
jae
loop
mov
jbe
sub
test
lods
out
cmp
xchg
xchg
lods
out
shlb
into
mov
iret
xor
mov
dec
inc
mov
jne
xor
pop
cmpsb
jmp
arpl
movsl
sbb
outsl
out
in
add
es
mov
gs
xchg
mov
ss
test
xorb
xchg
mov
lcall
xchg
test
outsl
pop
bound
test
pslld
mov
fmull
jo
aas
cmp
xchg
mov
cmp
cmpsl
pop
sbb
das
xor
add
push
ret
cwtl
inc
aam
push
out
cs
pushf
dec
pop
cmpsl
movb
cmp
push
shll
mov
jb
stos
mov
bound
pop
cmc
xchg
add
xchg
xor
inc
lock
xchg
imul
rorb
lret
fmul
daa
pusha
or
xor
lods
bound
jbe
dec
add
bound
cmp
fisttpll
dec
cltd
cmp
xchg
push
cmp
push
addr16
push
cld
xor
pop
cmp
js
ror
in
or
adc
ljmpw
arpl
outsb
inc
or
mov
or
jg
push
aaa
cmp
out
push
adc
inc
sbb
or
push
xor
push
jg
cld
push
pop
adcl
cwtl
int3
sbb
aam
push
fistpl
adc
fdivrp
pop
js
lret
dec
in
sbbb
fstps
rcrb
mov
sub
or
rcr
adc
popa
stos
jnp
jmp
pop
cmp
adc
or
bound
sti
pop
and
in
out
sbb
decb
cmp
sbb
pop
mov
mov
jg
fadds
fidivs
popa
mov
sti
and
jg
fildl
jge
mov
fisubl
addr16
cmc
add
jmp
clc
mov
jmp
dec
sbbb
mov
ja
dec
jbe
sti
outsl
and
popf
or
insl
fs
movsl
jg
cmp
int3
bound
cmp
daa
jo
mov
loope
movsl
imul
or
mov
psubq
fldt
das
xchg
pop
pop
fsubs
xchg
fidivs
js
cmc
adc
jmp
bound
loop
sti
or
sub
lcall
mov
outsl
or
and
les
movsl
mov
add
loopne
add
shll
pop
ret
add
rolb
movsl
fiadds
add
fs
dec
push
test
jb
frstor
andl
pop
push
cmc
fstps
and
cmc
cmp
xchg
cmpsl
pop
inc
xorl
xlat
stos
in
enter
std
mov
inc
cld
jns
push
pop
add
pop
out
pop
adc
pusha
js
sub
lahf
and
xchg
mov
ficoms
xchg
test
test
pop
test
cwtl
fwait
test
stos
stos
pop
test
loop
xchg
sbb
add
push
fisttps
add
cwtl
add
cltd
insb
test
cmp
inc
inc
ret
test
mov
hlt
add
jne
scas
fsubp
pop
outsl
mov
inc
add
cmpsb
paddusw
and
mov
adc
roll
int
stos
pushf
inc
shlb
cmp
dec
fimull
or
ret
add
js
je
aas
pop
push
sub
popf
dec
pop
cwtl
sbb
js
pop
and
mov
mov
jp
add
jbe
or
test
out
insl
or
and
and
repnz
out
jnp
jne
scas
mov
add
jg
or
imul
xchg
sbb
gs
loopne
push
dec
dec
and
jmp
pop
ljmp
inc
cltd
xorb
cmpsb
add
push
adc
add
js
call
inc
cmp
mov
scas
loope
sub
xchg
jp
pusha
sub
and
movsl
mov
mov
das
sub
aaa
inc
add
jns
add
pop
js
push
cmpsl
adc
fwait
mov
sub
insl
fld
sbb
and
add
mov
push
jp
pusha
mov
pop
repnz
inc
dec
hlt
loope
pushf
fs
data16
xchg
loop
push
icebp
add
gs
fs
add
fstps
dec
ret
loopne
and
cmc
cmpsb
sti
daa
jmp
clc
pop
jnp
mov
xchg
lods
or
sub
dec
mov
mov
xchg
cwtl
mov
loope
inc
nop
scas
loopne
popa
fdivs
adc
mov
and
and
adc
bnd
int3
or
pop
dec
data16
loopne
mov
xchg
loop
xchg
in
aad
pop
sbb
test
and
sbb
mov
es
jle
notl
cmp
jo
sbb
add
fisubl
pop
idivl
lds
push
pop
fnstcw
pusha
mov
movsl
push
nop
in
inc
inc
in
push
add
jns
pop
mov
pop
xchg
call
icebp
jae
dec
dec
mov
cld
jnp
mov
sub
jp
sbb
js
add
dec
lock
jnp
sahf
sub
mov
cmp
inc
bnd
cmp
orl
push
sub
mov
push
popf
popa
ret
stc
sub
or
add
and
les
fs
popf
fldl2t
mov
iret
xchg
pop
cmp
cmpsb
pop
or
adc
cmc
movsb
ljmp
gs
loop
test
cli
and
iret
mov
test
aas
ret
cmp
xchg
popf
push
aad
mov
test
add
icebp
cmp
xchg
fisubrs
dec
xchg
lcall
hlt
xchg
push
jmp
or
dec
leave
mov
lds
movsb
repz
fmul
pop
mov
mov
je
sti
into
push
fcoml
adc
sbb
js
pop
dec
and
fsub
test
addb
adc
adc
into
mov
push
rorb
sub
inc
xchg
pop
out
or
dec
cmpsb
es
cld
lds
adc
and
mov
shl
cmc
cmp
cmp
mov
out
sub
pop
loope,pt
ret
mov
mov
sbb
orb
xor
jg
add
inc
into
std
cltd
ret
dec
sub
addr16
int3
inc
jne
and
jmp
out
pop
fstps
push
inc
data16
out
lret
out
rorl
out
sbbb
push
push
or
push
add
aad
test
pop
stc
das
xor
mov
or
mov
loope
add
sti
mov
xor
push
jbe
pop
cmc
jne
push
mov
movsb
lds
jmp
leave
mov
clc
and
clc
xchg
mov
in
cli
pop
in
mov
ljmp
xchg
shl
or
jne
and
aam
movsl
mov
sub
in
int3
lret
fisubrs
movsb
pop
add
mov
rol
out
andl
les
sti
fcmovbe
popa
add
int
sbb
repnz
cmc
sub
pop
loop
in
xchg
insb
mov
lds
scas
js
and
mov
jecxz
cld
add
xchg
fimull
and
jae
scas
scas
push
inc
xor
pop
lea
cmpsb
fstps
sbb
jae
scas
cwtl
pop
addr16
xor
cwtl
and
loopne
mov
addr16
loopne
aad
aaa
jp
mov
xchg
cmp
xor
sbb
and
mov
push
pop
repnz
repnz
faddl
ja
cmp
movsl
in
mov
jne
mov
mov
filds
and
xchg
push
faddl
pop
add
cmp
cmc
ret
cmp
subl
fmull
add
test
sbb
jle
push
jl
mov
push
lahf
sbb
push
cwtl
sbb
xor
js
jmp
into
bound
xchg
dec
mov
call
xchg
test
inc
aas
bound
pop
and
aad
mov
in
pop
test
mov
cmp
sbb
lcall
jle
pop
pusha
fldcw
push
out
js
fldenv
pop
mov
xor
inc
mov
or
pop
push
subb
mov
shlb
mov
std
mov
and
pop
negl
cmpsb
push
mov
or
int
and
push
cld
and
add
sub
leave
jg
or
stos
mov
adc
add
and
jecxz
mov
in
in
repz
fimull
add
fstpl
ffreep
lahf
hlt
push
push
inc
cld
jne
loope
loopne
movsb
test
out
nop
shl
push
cmp
out
and
out
cld
jb
pop
mov
and
add
arpl
push
jg
lods
insl
xchg
aas
and
int3
lahf
mov
xchg
loope
icebp
sub
cwtl
data16
jae
out
pop
or
sbb
sarb
dec
jno
pop
inc
push
cwtl
mov
mulb
cmp
cmc
and
cmpsb
test
cmp
ja
mov
dec
pushf
inc
lcall
cli
imul
in
pop
arpl
inc
or
jne
hlt
cmpsb
sti
pop
mov
jb
dec
divl
jmp
fstpl
mov
inc
repz
and
loopne
and
pop
push
push
inc
mov
test
pop
js
xchg
js
fildll
xlat
cmc
test
cs
push
jae
and
add
movsl
test
and
dec
add
push
pop
pop
add
movsb
dec
mov
cwtl
push
jmp
mull
pop
sahf
mov
jle
outsl
push
das
cmp
and
popa
inc
or
adc
mull
ret
loope
pop
jns
in
sub
ret
and
mov
out
xchg
cwtl
push
adc
sbb
les
test
jecxz
dec
lods
je
insb
push
cmpsl
int3
dec
push
xchg
unpcklps
sbb
in
in
in
cmpsb
jbe
add
aam
js
or
xchg
sub
fldenv
scas
inc
jp
mov
inc
lret
into
push
int
xlat
inc
and
inc
dec
out
and
inc
lock
in
js
fs
pop
pop
inc
cmpsb
adcb
pushf
cli
fs
jl
pop
push
adc
sti
out
test
xor
or
add
jo
das
add
lods
in
lds
mov
sbbl
arpl
pop
pop
jns
push
inc
cwtl
mov
pushf
fcompl
mov
mov
dec
xchg
nop
xchg
psubq
and
movsl
cmp
pushf
repz
xor
leave
enter
or
xchg
icebp
xchg
mov
dec
in
sahf
ss
jmp
push
xchg
incb
add
mov
test
dec
mov
out
xchg
test
jne
mov
cmp
lds
popf
pop
add
das
add
or
xchg
jb
outsl
push
cmpsb
lods
inc
xor
xor
mov
lock
cmp
pusha
inc
xchg
sub
scas
cld
inc
aas
lret
push
idivl
cwtl
arpl
pop
lahf
imul
cmpsl
jo
mov
data16
inc
mov
sarl
jno
ljmp
jbe
icebp
fcoms
cwtl
jmp
rorl
and
mov
jle
jo
insb
rclb
adc
imull
stos
or
xchg
fwait
test
and
lods
cmp
mov
dec
pop
mov
in
in
sub
push
orb
xchg
mov
xchg
and
std
cmc
pop
in
out
jmp
cmp
sub
iret
cmpsb
fldenv
cmp
cmp
out
mov
mov
mov
mov
in
mov
and
test
cmp
mov
ror
cmc
jl
imul
out
lds
jl
dec
add
jl
rol
adc
add
ja
movsb
sub
pusha
inc
push
xor
cli
jle
dec
imul
xchg
sarb
pop
xchg
jp
aad
mov
loope
and
or
insb
sahf
outsl
push
jle
movb
cmpsb
cmp
sbb
or
add
pop
das
cli
xor
xorl
icebp
and
fistl
xchg
aaa
test
loop
mov
test
add
imul
popf
and
mov
cltd
xor
jl
xchg
cmp
fmuls
sbb
fwait
mov
mov
add
mov
jp
pop
fwait
push
add
sbb
dec
pop
scas
xor
fs
xchg
loope
bound
mov
jecxz
repnz
pusha
test
jmp
loop
and
test
mov
mov
std
shlb
pop
fwait
or
adc
cmc
fistl
jbe
mov
es
pop
daa
lods
cmc
push
hlt
push
add
stos
sbb
arpl
jp
adc
gs
sbb
or
in
xchg
mov
repz
das
fs
or
xorl
enter
inc
std
repnz
mov
or
call
test
jb
jbe
scas
cld
xor
pop
pop
sub
in
cmp
ret
or
or
and
xchg
outsb
and
loope
or
mov
test
jne
lods
addl
outsb
addr16
aaa
lods
and
repz
adc
jecxz
mov
int3
mov
or
sub
inc
cmp
xchg
jge
mov
mov
mov
add
and
xchg
add
or
push
push
mov
fwait
jg
lods
testb
mov
push
mov
push
sbb
jecxz
scas
push
adc
mulb
loop
cli
fstpt
push
add
push
add
pushf
or
test
sarl
pop
loop
fistl
mov
mov
bound
out
hlt
arpl
and
xor
and
out
into
testb
movsl
dec
sub
inc
mov
cmc
cwtl
mov
inc
inc
xchg
in
add
xor
pusha
lods
add
sbb
push
and
lods
sbb
push
mov
xchg
out
in
push
or
cmp
mulb
mov
pop
sahf
notl
mov
loopne
jecxz
scas
loop
test
pushf
andb
loope
add
repnz
dec
mov
insb
push
push
cs
mov
popf
lahf
sti
call
scas
adc
fisttpll
jmp
scas
ret
cmpsb
shlb
mov
add
loope
je
ficomps
sbb
pushf
loop
loop
mov
or
and
jnp
push
cld
jle
fcompl
push
fs
and
mov
faddp
and
cmpsb
jnp
inc
mov
xor
imul
aam
out
xchg
daa
movsl
incl
inc
xchg
loop
xorb
aad
mov
xchg
pop
fdivrl
rorl
and
or
cld
mov
scas
xor
int
je
mov
mov
xchg
and
pushl
add
cmp
push
ret
shll
cs
dec
icebp
push
into
or
pop
addr16
mov
push
imul
push
pushf
or
sbb
fldcw
and
xchg
jecxz
cmpsb
cmp
pop
loop
add
and
nop
push
sbb
test
mov
jmp
cmpsb
cli
mov
sbb
push
mov
imul
and
out
mov
sbb
adcb
les
popa
or
xchg
sbb
mov
lds
std
repz
js
sbb
scas
mov
adc
mov
mov
ja
mov
sbb
sbb
iret
mov
adc
aas
enter
or
stos
roll
mov
pop
inc
dec
sub
dec
xchg
add
aad
jecxz
push
add
and
dec
fs
jo
cmp
sub
repnz
inc
or
fucom
sbb
mov
movsl
or
mov
sbb
mov
cmpsb
lsl
sbb
inc
jmp
imul
ret
fiadds
xchg
stc
loopne
xor
jp
sbb
clc
pop
adc
xchg
js
adc
or
imul
fs
daa
adc
in
jmp
xchg
add
add
scas
addr16
test
loop
push
add
xchg
inc
push
cwtl
push
shlb
scas
fmul
lods
pushf
add
add
popf
sub
or
stc
fimuls
and
and
add
scas
daa
adcb
shlb
jl
data16
add
sbb
cmpsb
push
mov
sahf
fimuls
mov
push
mov
shll
cld
mov
cmp
push
mov
pop
lahf
xor
int3
insb
adc
lahf
jg
push
fidivrl
push
leave
mov
data16
aad
xchg
mov
ds
int3
in
mov
jg
jl
xchg
add
jle
xchg
outsl
into
mov
dec
mov
jb
mov
or
inc
mov
inc
pop
push
add
scas
xor
mov
adc
push
call
and
fnsave
hlt
or
sti
mov
add
or
xor
loopne
pop
cld
pop
cld
cld
jge
mov
pop
or
cs
push
and
out
dec
cwtl
add
xchg
and
inc
fcmove
loop
mov
mov
inc
xchg
and
test
int3
add
or
out
lds
insl
pop
or
cmp
dec
les
icebp
cmp
jge
and
ljmp
sub
lret
icebp
pop
cmpsl
and
in
add
dec
fisubs
ljmp
inc
ss
pop
lahf
pop
cwtl
cmpsb
dec
pop
pop
test
jb
or
bnd
sbb
shll
pop
cli
pop
fwait
cwtl
out
push
bound
inc
cmp
mov
and
push
loop
test
and
shrb
mov
jmp
std
ja
out
fsubrp
aaa
add
loope
cmp
mov
mov
jbe,pt
push
jg
dec
adc
or
jle
sub
imul
leave
insl
or
stos
rolb
inc
jmp
push
mov
loopne
add
jmp
xchg
mov
lds
xchg
pop
cmp
add
xchg
xor
inc
into
fimuls
fisttpll
mov
cmc
repnz
rclb
loope
mov
and
movb
inc
or
mov
in
rcrb
imul
mov
jno
ficoms
push
out
sub
jne
cmpsb
inc
sbb
popf
pusha
cmp
adc
movb
cmpsb
in
and
lcall
xchg
pop
xor
jg
scas
loope
adc
xchg
psrlq
dec
and
test
popa
mov
pop
mov
cmp
fidivl
in
out
mov
add
sub
or
mov
pop
js
mov
int
mov
pop
popa
incl
mov
jmp
mov
inc
mov
shrl
cmpsl
out
sbb
jns
cwtl
in
pop
fs
sub
mov
and
js
lret
es
mov
sub
jle
xchg
and
push
jnp
stc
data16
xchg
inc
repnz
test
fcmovb
out
ficoms
or
add
mov
ljmp
test
dec
or
jmp
pop
sahf
lahf
pushf
sti
xor
ret
jmp
sub
or
add
push
roll
adc
adc
sbb
mov
jmp
movb
sahf
sbb
inc
je
popf
jno
daa
les
std
jno
inc
ret
jb
mov
cmp
scas
ficomps
pop
insb
nop
movsb
jmp
cmp
jg
sahf
mov
shlb
loopne
pop
movsl
adc
loopne
xchg
cs
sub
test
or
push
cmp
xchg
pop
pop
xchg
cmc
scas
sbb
cld
lret
or
insl
or
sbb
pop
fwait
repnz
pushf
mov
stos
inc
int
incl
inc
stos
pop
or
stos
movsl
mov
out
mov
mov
setg
into
jne
mov
out
xor
stos
f2xm1
sub
cmp
and
xchg
cltd
cmp
lea
aad
leave
add
push
dec
dec
into
loop
sbb
fisubl
mov
fisubrl
pop
ja
fistl
and
sbb
pop
data16
out
mov
in
ljmp
call
and
hlt
mov
fwait
inc
or
lcall
add
test
mov
and
hlt
jbe
xchg
pop
jg
movsb
fidivs
popa
jg
cld
arpl
jg
sahf
push
and
aam
sahf
inc
aad
push
push
sub
es
lods
dec
adc
add
jecxz
xor
and
push
fwait
test
push
lods
adc
xor
scas
mov
or
rclb
fsubl
cmpsb
sbb
sahf
xlat
push
mov
pop
scas
cs
outsb
outsb
mov
dec
jbe
inc
add
cmpsb
ds
xchg
dec
loop
sbb
add
shlb
nop
sub
es
outsl
sbb
ja
lock
mov
cmp
jbe
cmp
and
push
xchg
sub
cli
mov
inc
or
dec
aad
movsl
jmp
stc
push
cmp
repnz
mov
dec
mov
lock
xchg
or
shl
movl
fsubr
or
or
or
sub
adc
es
jb
inc
and
movsl
sbb
int
data16
mov
xchg
and
leave
mov
test
cmc
loopne
add
je
out
cmpsl
cmp
cmp
ja
mov
lcall
mov
ret
es
sub
call
and
and
or
sbb
inc
sarl
and
ds
test
dec
into
jmp
xchg
xchg
orb
rorb
push
arpl
pop
das
arpl
cmpsb
add
test
and
mov
sbb
or
outsl
mov
inc
mov
mov
loope
test
and
dec
sbb
xor
mov
mov
push
mov
test
jb
scas
icebp
mov
pop
jp
es
sahf
jl
icebp
loope
sbb
aad
loope
js
sbb
lret
movsb
mov
adcl
push
fmulp
out
add
mov
xchg
fisttpll
js
mov
xchg
push
gs
mov
mov
ja
les
test
mov
cmp
mov
push
in
cld
fldenv
rorl
test
outsl
test
mov
sub
js
fsubrl
adc
pop
ret
inc
pusha
xchg
and
and
and
lret
mov
loopne
sbb
es
flds
xchg
jae
pusha
je
lock
xchg
pop
and
fisttpl
jle
pop
fs
cmovno
push
dec
inc
int
or
std
in
or
ficomps
xchg
push
mov
or
ror
fisttpl
mov
out
sbb
mov
jbe
js
cwtl
sub
inc
inc
xchg
mov
mov
sbb
mov
and
scas
iret
jne
das
out
lds
cwtl
ds
insl
popa
mov
bound
mov
and
test
test
lock
jl
and
push
cmp
jo
cmpsb
inc
jl
or
cwtl
lods
sbb
dec
sahf
mov
cmp
lock
push
sti
shr
inc
hlt
add
data16
jecxz
repnz
ret
iret
lcall
out
movsl
cmp
arpl
and
into
out
or
das
lods
xor
or
jg
jns
les
fs
jbe
pop
cli
jp
mov
xchg
jle
add
cmpl
add
hlt
test
mov
push
ret
mul
mov
repz
or
pop
in
ret
xchg
in
sbb
mov
sbbl
sub
test
mov
or
das
mov
movb
and
test
pop
std
push
adc
xchg
fs
xchg
je
popf
jecxz
in
jle
add
mov
push
shlb
adc
mov
pusha
and
mov
inc
or
sub
sbb
add
fistl
push
out
idivb
jb
aaa
ret
aas
jns
idiv
adc
scas
xor
adc
pop
cmp
and
dec
test
ss
push
mov
xor
test
mov
test
adc
aas
xor
dec
test
mov
jne
add
fs
popa
pusha
or
orb
movsb
fidivs
or
aad
das
xchg
in
in
popf
out
and
mov
addr16
daa
xor
add
out
mov
adc
add
xlat
sbbb
add
sbb
push
cwtl
jge
jg
aad
lods
xchg
xchg
or
ljmp
dec
inc
repz
lock
cwtl
scas
mov
pop
mov
loope
daa
negb
inc
out
xchg
jbe
sbb
or
mov
sbb
push
add
imul
pop
out
dec
and
js
pop
les
test
adc
hlt
es
aas
shrl
adc
push
addb
data16
ret
mov
stos
xor
add
cmp
push
xchg
in
mov
testl
cmpsb
adc
add
dec
lea
shlb
cwtl
lock
gs
movsb
jbe
test
inc
gs
push
jecxz
jecxz
aad
test
push
mov
cwtl
aaa
adc
dec
mov
push
add
out
popa
xchg
add
jmp
add
cmpsl
cwtl
pop
mov
jno
add
out
js
adc
mov
fisubl
mov
les
add
fucomp
push
mov
cltd
test
fdiv
mov
xchg
stc
pop
jg
push
lds
xor
mov
sbbb
adc
jecxz
lcall
cltd
mov
pushf
jo
mov
cmp
and
push
push
repz
mov
xor
push
sbb
mov
mov
and
ja
aaa
stos
adc
das
les
iret
movsl
jecxz
pop
inc
dec
pop
pop
mov
inc
inc
pop
ljmp
aad
call
pop
inc
pop
lret
int
es
jnp
js
dec
inc
bound
mov
cmp
lds
and
sub
jl
pop
outsb
mov
adc
pop
vcvtsi2ss
fnstcw
mov
test
pop
es
int
out
push
inc
push
sti
jmp
testl
pop
jnp
out
mov
xor
movsb
sbb
inc
mov
xor
ja
mov
mov
mov
cmp
and
cmpsb
mov
cmp
stc
inc
fisubrl
scas
es
jmp
lds
or
aaa
pop
jp
push
xchg
jo
cld
inc
push
mov
loope
or
es
dec
jno
mov
mov
movsl
rorl
aam
pop
inc
or
lea
dec
inc
les
andb
hlt
mov
jae
data16
testl
and
lds
mov
and
jnp
add
cwtl
mov
cmp
hlt
out
das
dec
pop
mov
lcall
js
mov
inc
pusha
jns
sti
gs
mov
loopne
sbb
jmp
pop
popa
in
ja
cltd
and
mov
adc
cmp
mov
cmpsl
ret
lret
inc
hlt
pop
and
pop
inc
aas
push
add
jle
xor
in
and
dec
sahf
out
andl
insl
pop
mov
xor
push
cltd
vhsubpd
mov
dec
ljmp
fildll
fucomi
ljmp
lea
mov
ss
cmp
out
movsb
test
fsubs
test
cmp
and
sbb
movsl
push
out
incb
cmc
cmc
add
movsl
test
sahf
mov
jmp
sarl
xchg
xchg
test
mov
mov
mov
sarb
push
mov
nop
inc
push
cmp
ret
xchg
push
in
sbbb
sarl
enter
ret
dec
pop
in
push
add
or
int3
test
and
dec
push
sti
mov
imul
and
or
cmp
or
fcoml
xchg
ljmp
rorl
adc
lods
xor
xchg
or
test
mov
cmp
ljmp
repz
movsb
cwtl
scas
xchg
inc
arpl
shr
movsb
cmp
pop
and
aad
filds
js
push
loopne
mov
shld
and
mov
inc
aad
mov
add
data16
pop
mov
in
cwtl
xchg
pop
je
sbb
push
std
xchg
mov
xchg
add
inc
xchg
fidivs
xchg
out
fistpll
dec
and
jp
push
and
mov
fsubrl
fsub
scas
jg
sbb
out
out
mov
and
and
adc
pop
mov
cmp
cmc
or
rorb
lods
pop
xchg
adc
shld
pop
cwtl
stos
ja
lahf
out
mulb
xlat
mov
popf
pop
rcr
mov
mov
pop
dec
sub
fstpt
push
lcall
mov
jno
dec
adc
es
dec
pop
ret
iret
inc
mov
stos
add
mov
lahf
mov
fidivs
into
or
lea
flds
and
ljmp
outsb
jmp
dec
xchg
dec
mov
daa
or
sbb
and
aam
jl
adc
in
sbb
idivb
cmp
gs
jle
addb
jae
sbb
adc
mov
fsubp
jb
aad
pop
xchg
jecxz
and
adc
pop
jnp
ja
sahf
add
and
aas
and
mov
mov
mov
jl
hlt
add
ja
sub
xchg
mov
pop
ja
in
cwtl
js
aaa
xchg
mov
mov
in
movsl
mov
cmc
adc
xchg
leave
or
mov
sahf
xchg
nop
and
mov
test
xor
test
pop
in
mov
jbe
mull
mov
imul
or
mov
lds
mov
mov
push
jl
sbb
xchg
mov
or
fwait
push
add
jmp
js
xchg
dec
lds
cld
add
jge
inc
jecxz
mov
pop
and
xadd
notl
test
fldcw
xchg
jp
cmp
es
add
or
pop
pop
mov
imul
cmc
cld
push
outsb
insl
es
movsl
inc
fbld
xchg
mov
out
je
shrl
dec
das
jmp
movsb
movhps
sub
mov
dec
jbe
movsb
es
testb
sarb
cltd
push
dec
pop
sbb
dec
loop
je
lods
jl
aas
cmpsl
sbb
xchg
fsubs
cmp
imul
popa
jne
sub
mov
gs
cmp
pop
and
sbb
and
mov
fwait
js
icebp
sbb
adc
cmp
sbb
or
dec
stos
stos
mov
test
dec
adc
loopne
add
das
mov
lcall
cmp
pop
pop
cwtl
gs
popf
data16
cmpsb
cmp
add
fucomp
test
and
sub
es
xchg
add
dec
std
pop
pop
push
lea
hlt
xor
xchg
in
add
xchg
gs
inc
or
cmpsl
add
cmp
in
sub
scas
test
loop
out
leave
rcll
pushf
pop
and
sbb
mov
push
mov
icebp
xor
xor
or
sbb
cltd
pop
add
xchg
pop
pop
and
fsubr
clc
daa
mov
mov
mov
dec
mov
pop
pop
js
xorb
ret
pusha
fwait
repnz
popa
dec
scas
ret
pop
or
xor
sbb
pop
dec
testb
push
test
scas
or
mov
loop
dec
rol
cmc
adc
ja
out
negb
arpl
xchg
test
jle
lahf
js
ret
sahf
push
pop
test
fists
adcl
jmp
cmc
and
je
aam
daa
cmpb
inc
outsb
sbb
out
xchg
or
cmp
xor
mov
pop
call
insb
mov
in
hlt
aad
scas
das
movsl
and
inc
fsubs
sub
or
addr16
sbb
jmp
inc
cs
push
loopne
mov
hlt
rcrb
aaa
gs
leave
stos
int3
mov
out
sarb
or
nop
fsts
shlb
sub
sub
lods
in
loop
into
adc
sti
pop
xorl
mov
in
into
xor
iret
or
or
loope
pop
insl
mov
and
pop
xor
rorb
pop
mov
es
mov
ds
call
std
std
in
and
jmp
insl
ja
cmpsb
mov
jmp
push
mov
cmp
lods
fldenv
test
decl
and
fistpl
add
pop
lret
or
mov
fisubrl
jmp
popf
movb
pop
dec
out
push
mov
adc
xchg
ljmp
out
call
jp
loopne
es
ret
cmpl
mov
test
bound
mov
cmp
mov
xchg
xchg
mov
ret
cmpl
xchg
aam
jmp
lret
sub
xor
pop
add
xchg
lret
addr16
mov
sti
and
or
and
stos
xchg
sbb
jo
popa
sbb
fisubl
ret
popf
add
mov
or
and
pop
sbb
jno
xlat
pop
xchg
jg
int
movsl
cs
mov
cmp
fs
sub
inc
sbb
pop
jle
jmp
push
jecxz
push
arpl
mov
mov
and
or
sahf
in
dec
xchg
jp
mov
cli
cmpsb
inc
pop
test
lcall
and
push
mov
cmp
add
add
in
shlb
fcmovu
and
sbb
dec
daa
lock
xor
jne
gs
andl
out
and
jno
jmp
out
out
and
cmpsl
pusha
pop
mov
lock
mov
test
std
pop
in
pop
mov
push
and
in
fldenv
pop
mov
adc
mov
shll
cs
push
pop
add
movsl
cmp
pop
scas
sbb
and
xor
test
mov
sbb
fstl
jg
test
lret
loopne
nop
pusha
mov
jecxz
xchg
fsubl
aad
outsl
popf
mov
pop
push
mov
mov
and
or
das
pop
jb
dec
or
mov
jno
gs
rorl
xchg
mov
jne
fimull
jnp
in
adc
jle
or
sahf
inc
push
or
sbb
cmp
divb
or
mov
rcll
cmp
lea
adc
fsubl
mov
pop
scas
jge
daa
jmp
addr16
jle
repnz
lods
bound
jae
fmul
ss
jl
jge
test
in
nop
jecxz
ss
cmp
mov
add
xchg
mov
xchg
fsubrl
mov
aad
push
cltd
mov
cmc
xchg
xorl
jbe
pop
mov
mov
dec
shll
test
inc
cld
aaa
lds
and
cmpsb
pop
out
in
push
and
mov
adc
inc
int3
in
test
fildl
push
or
push
fiadds
loop
insb
mov
loop
push
and
inc
daa
out
clc
ret
es
movsl
into
dec
and
inc
cltd
mov
lret
stc
test
out
cmp
jle
clc
push
loope
add
sbb
scas
xor
push
adc
js
or
jo
popa
out
aad
push
pop
mov
xchg
ret
loop
test
adc
adc
push
insl
add
in
pop
das
faddl
gs
xchg
jge
sub
out
jb
out
test
stos
out
js
or
ja
ficompl
pop
xor
sub
enter
mov
loop
std
ret
fstpl
std
add
ret
ja
dec
pop
ret
jne
push
clts
or
mov
push
andl
sbb
cltd
mov
xchg
pop
adc
out
push
dec
in
das
addl
mov
dec
loopne
je
jns
aas
cmc
and
cld
or
pusha
cld
mov
imul
test
cmp
iret
sahf
cmp
loopne
add
jo
ror
xchg
mov
sub
aam
xor
sub
and
addr16
loope
arpl
or
in
incl
add
cmp
enter
mov
fstpl
sub
in
jne
xchg
mov
iret
daa
clc
inc
inc
push
or
or
negb
fistpll
pusha
mov
ljmp
mul
test
push
pop
rorl
inc
sti
addr16
xor
bound
sub
pop
call
add
lcall
daa
fdiv
into
aaa
pop
ret
decb
push
sbb
scas
subl
sbb
jmp
movsb
inc
jbe
cmc
cmp
jle
daa
in
scas
lret
mov
xchg
push
pop
ljmp
jle
imul
xor
les
movsl
fldcw
push
ret
mov
jl
bnd
push
jmp
dec
mov
mov
pop
adc
pop
pushf
stc
shll
mov
mov
scas
pop
jo
pop
jb
push
outsl
cmc
in
test
xlat
mov
dec
cmp
cmp
sub
or
testl
filds
lds
adc
or
cmc
push
daa
adc
subb
sbb
add
gs
adc
adc
pop
out
cmp
jge
and
sub
or
shrb
add
pop
es
in
test
sbbb
pushf
mov
stos
push
leave
mov
test
jge
movsb
jle
inc
adc
fsubs
mov
push
scas
sti
movsl
pop
add
in
bound
movsl
sub
lret
repnz
cli
add
in
lods
in
jmp
sbb
int
addb
or
and
push
in
dec
mov
or
pop
xchg
pop
mov
inc
je
iret
cmp
sub
dec
out
inc
pop
cmp
jmp
cs
test
out
out
pop
loope
jb
mov
and
iret
arpl
mov
cmpsb
fsubrs
loopne
jbe
jne
rorl
add
repz
in
mov
movsl
leave
sub
in
dec
in
pop
adc
mov
imul
xchg
mov
cs
jg
sahf
xchg
stos
inc
push
push
add
adc
test
pop
mov
push
xor
push
hlt
mov
hlt
mov
hlt
xchg
ds
or
pusha
ret
and
mov
jne
std
shlb
pop
inc
mov
in
inc
and
jne
cwtl
add
jbe
mov
mov
in
jmp
fldenv
cwtl
or
es
mov
rclb
mov
test
or
xchg
dec
loopne
sub
sarb
int
clc
dec
dec
jl
ja
out
int3
and
mov
xchg
pop
dec
cld
cltd
fwait
mov
loopne
lahf
add
pushf
hlt
fwait
loop
jle
fcompl
and
push
hlt
movsb
cwtl
cmc
and
cwtl
cmc
es
push
hlt
cmpsb
cwtl
mov
int
dec
out
test
add
adc
push
xchg
aad
push
movsb
rorl
mov
shll
push
push
les
cmp
cmpsb
fdivrs
inc
mov
stos
adc
dec
pop
push
dec
or
int3
xchg
push
mov
mov
mov
stc
fdivl
push
lods
test
and
lcall
je
fbld
and
fs
sbb
hlt
in
adcb
xchg
mov
in
inc
ficoms
push
in
cld
xchg
jg
cmpsl
sahf
cmc
cmp
mov
mov
fisubs
popa
hlt
and
xor
stos
mov
insb
mov
fsincos
push
pop
jae
xor
aaa
cwtl
cmp
cmp
or
push
addl
cmc
mov
out
push
popf
push
clc
js
in
xor
jmp
push
xor
add
dec
cwtl
or
loope
pop
dec
and
cmp
and
add
mov
outsl
sahf
adc
mov
xchg
or
rol
mov
bound
jle
pusha
nopl
inc
adc
in
ret
je
and
xchg
inc
dec
fistpl
inc
js
test
cmp
cmp
test
push
or
inc
rorb
les
jecxz
xchg
mov
mov
cmpsb
mov
xor
daa
cmp
mov
xchg
es
movsl
cmp
das
sbb
scas
mov
push
inc
das
mov
call
cmp
ss
push
lds
cltd
imul
xchg
loop
adc
scas
icebp
xchg
insl
shl
in
mov
arpl
xchg
fnstenv
add
xor
mov
xchg
shll
sbbb
sub
lods
sbb
mov
repz
inc
int3
lds
les
flds
xor
xor
adc
js
lret
out
dec
fisttpl
jne
push
jmp
cmpsb
out
mov
pop
sahf
jne
xor
add
pop
testl
push
and
test
push
add
adc
loopne
pop
imul
mov
jle
aas
movsl
and
fadds
mov
push
cwtl
ret
inc
jecxz
push
add
cld
mov
cld
and
xchg
push
out
adc
jns
das
jecxz
pop
cmp
data16
or
ljmp
adc
jecxz
mov
movsl
inc
mov
test
or
xor
cmp
data16
loopne
mov
movsl
loopne
mov
xchg
lea
jge
ret
sahf
cld
shll
nop
loope
push
fs
movsb
sbb
mov
mov
adc
xchg
ret
sti
xchg
cmp
mov
fs
mov
push
lods
pop
movsl
sub
pop
sub
movsl
orb
movsl
sub
loope
je
mov
inc
mov
ret
mov
add
and
mov
or
push
inc
rorb
cmp
movsb
sbb
hlt
pop
mov
adc
ss
dec
aad
lds
xchg
cmpsb
push
movsl
out
jp
ds
sub
pop
sbbl
xchg
loop
fmuls
and
lods
and
mov
or
dec
and
xchg
mov
lahf
cmpsb
movsb
xchg
or
inc
dec
and
imul
in
push
and
sub
lds
jp
adc
jge
or
and
jae
in
and
inc
jo
jmp
fwait
jne
sub
inc
sbb
or
aam
mov
imul
sbb
int
jl
mov
fmull
add
and
in
icebp
pfrsqrt
and
int3
out
bound
aad
insl
mov
fists
mov
jl
xchg
test
out
ja
add
adc
test
lret
mov
or
mov
inc
jmp
push
sub
and
mov
inc
inc
les
jmp
xor
aam
sbb
pop
adc
out
frstor
jae
in
cmp
jg
ja
cmp
cmpsb
or
sbb
pop
jl
dec
jmp
sbb
hlt
lods
xor
out
sub
jmp
cmp
pop
and
bound
and
inc
inc
fmuls
or
add
loop
test
push
dec
stc
cmc
fwait
and
fdivrl
mov
dec
sub
rcrl
insb
test
iret
test
in
mov
clc
jge
adc
pop
je
repz
inc
and
xchg
adc
gs
mov
pusha
data16
inc
xchg
enter
cwtl
ja
insl
push
inc
jmp
out
push
cmp
lods
xchg
and
into
pushf
fcoml
add
sbb
jnp
hlt
leave
loop
cmpsb
fsubs
and
scas
inc
into
pop
shlb
pusha
add
mov
or
adc
in
push
popa
mov
je
fstps
sbb
subb
mov
pop
lods
lds
test
sub
ljmp
sub
mov
xchg
in
ljmp
fs
cmp
repnz
lds
test
movsl
cmp
fadds
mov
leave
int3
outsl
scas
pop
inc
cmp
inc
shl
or
popa
out
sub
out
stc
in
cmpsb
insb
or
xchg
push
mov
push
add
movsl
xchg
lods
sarb
cmc
jl
mov
or
adc
inc
dec
into
pop
pusha
cwtl
out
cmpsb
fstpl
fnstenv
mov
fldt
mov
lods
test
sub
xchg
pop
imulb
fisttpll
adc
xchg
adc
pop
mov
cmpsb
cmp
mov
inc
lahf
mov
insl
in
mov
shll
inc
xor
in
pop
idivl
mov
sbb
mov
xor
sub
jp
pusha
cmc
push
dec
mov
aas
lods
add
mov
ret
lret
cwtl
pop
into
and
clc
nop
sub
dec
loopne
pop
inc
mov
lods
xchg
dec
add
cmpsb
js
adc
jecxz
mov
push
roll
adc
cmpsb
and
xchg
cmc
pop
movsl
push
sbb
data16
test
inc
aaa
nop
or
xchg
jnp
mov
in
pusha
sti
jnp
jae
mov
cmc
mov
aad
test
jge
filds
leave
les
adcb
cmpsl
mov
cmp
pusha
outsb
test
pop
int
adc
scas
and
add
bound
push
leave
xchg
xchg
adc
into
retw
nop
int3
adc
imul
stc
jmp
xchg
or
xchg
test
scas
std
in
sbb
inc
push
movsl
in
adc
mov
and
sbb
push
inc
cmp
xchg
push
mov
sbb
addl
or
imull
sahf
adc
rcrl
cmpsb
inc
mov
int
js
in
mov
in
push
les
fsubrs
add
subb
test
or
rorl
jg
mov
icebp
push
movsb
int3
or
das
aaa
leave
daa
loop
mov
pop
pop
jns
movsb
lock
mov
int3
jge
lret
cmc
jg
mov
and
test
ss
sub
daa
aas
test
xor
fdivrl
push
or
mov
sbb
outsb
mov
ja
add
sbb
es
mov
cmc
pop
mov
cmpsb
pop
repz
push
xchg
loope
mov
cmp
dec
jne
test
xchg
or
xchg
je
fisttpll
cltd
and
or
mov
lcall
mov
ja
xchg
and
pop
gs
push
pop
es
or
js
mov
mov
out
sub
int3
xchg
push
hlt
jne
jno
sbb
cmc
jae
fidivs
sbb
mov
cmp
sub
ds
or
jo
mov
pop
dec
adc
and
push
pop
sbb
cmpsb
mov
test
lods
mov
push
mov
cmpb
iret
mov
push
xor
push
sahf
ja
push
sbb
pop
mov
xchg
sbb
pop
orb
sbb
cmp
stos
jg
movsl
pop
dec
fstpl
ljmp
int3
inc
out
leave
test
sbb
pop
cmp
std
mov
dec
inc
mov
push
jl
popa
dec
scas
sub
jmp
sbb
cmpsb
out
out
repnz
cli
fwait
dec
ljmp
mov
mov
or
out
jecxz
sbb
cli
aad
mov
inc
mov
and
mov
cmp
add
sbb
arpl
rorw
outsl
leave
sti
data16
jnp
int3
imul
and
mov
mov
mov
mov
pop
xchg
mov
lea
cmp
loop
faddp
div
daa
out
inc
or
jg
nop
mov
lds
dec
jg
xchg
jo
popa
movsb
sahf
sarb
std
xchg
xchg
loopne
sahf
or
cmp
or
fsubp
xchg
loope
jmp
jns
jne
cmp
pop
sahf
mov
mov
cmpsb
out
pop
jg
mov
lods
inc
pop
dec
lds
leave
in
add
cmpl
push
dec
cmc
cwtl
data16
sbb
push
push
data16
icebp
mov
in
cmc
jns
dec
jno
sbb
aad
mov
movsl
clc
xlat
pop
and
pop
call
int3
mov
sbb
hlt
fnstsw
std
cmp
pop
jae
cmpsb
std
hlt
mov
das
adc
cmp
es
xchg
shll
idivl
pop
arpl
jle
mov
xchg
push
ljmp
lcall
mov
inc
repz
mov
cmp
lds
dec
popf
cltd
pop
bound
int
inc
int3
xchg
sub
cmpsl
repz
lahf
and
mov
mov
mov
movsb
test
mov
movsb
aaa
mov
sti
mov
xor
mov
movsb
or
mov
test
adc
mov
sbb
fbld
and
insl
and
jb
mov
mov
mov
loop
xchg
xchg
ds
jge
sub
les
push
adc
xchg
gs
cs
stos
hlt
xchg
mov
jecxz
xchg
jp
dec
popf
adc
dec
js
sti
cltd
mov
andb
push
and
jbe,pt
mov
dec
in
roll
sub
in
xchg
push
hlt
mov
add
dec
xchg
ja
jmp
or
cwtl
pop
or
sahf
or
shlb
pop
out
lds
inc
movsb
xchg
push
outsl
in
popa
push
lock
fnstsw
jns
mov
mov
bound
pusha
stos
in
inc
pop
mov
lcall
movsl
cmp
bound
mov
in
push
add
ret
dec
jecxz
pop
mov
pusha
les
add
xchg
icebp
ret
repnz
add
pop
popa
mov
inc
icebp
in
sbb
in
push
aas
or
lock
inc
loopne
sub
mov
cmp
mov
cmp
out
mov
mov
mov
push
pushl
cmpsb
shrb
rolb
and
sti
adc
mov
jne
inc
test
addl
leave
js
mov
mov
push
arpl
or
cwtl
daa
cmp
mov
mov
loopne
push
les
test
cmc
loopne
cmp
iret
fs
xchg
je
add
aad
inc
roll
adc
mov
push
movsb
xchg
mov
movaps
movl
dec
jae
mov
push
mov
js
rcll
std
mov
xchg
aas
lds
test
mov
lret
jbe
jnp
imul
jmp
inc
nop
cld
dec
fdivr
loop
mov
mov
js
or
xor
dec
fimull
mov
jmp
mov
addr16
add
es
cmc
sub
sub
cmp
daa
add
pusha
dec
cmpsb
test
inc
lds
mov
imul
loope
adc
cmc
call
mov
xchg
or
movsl
addr16
fidivl
sbb
cmc
mov
or
dec
dec
cld
xlat
sub
mov
mov
xor
cmpsb
mov
dec
cmpsb
addr16
pxor
or
sarb
dec
push
fiaddl
add
sbb
fs
lcall
inc
jne
push
jbe
mov
mov
mov
add
in
or
out
or
xor
xorb
fwait
out
test
shlb
inc
std
divb
mov
mov
lods
mov
gs
iret
mov
sub
mov
pop
shll
cwtl
ret
dec
int
mov
jb
sbb
repz
mov
add
dec
cmp
shl
out
xor
pop
or
mov
sub
idivl
jmp
in
stc
adc
sbb
outsl
xor
test
insb
mov
mov
imul
movsl
cmc
sub
lock
dec
sahf
es
cmp
in
sub
mov
sbb
adc
fnstsw
sub
push
and
mov
sahf
and
js
ret
mov
or
rep
jae
imul
adc
cmp
cmp
das
sahf
jne
xor
pusha
mov
sbb
out
loopne
cmpsl
dec
and
push
jae
xor
pushf
pop
dec
andl
cmp
add
fs
ds
sub
add
mov
and
add
test
cmc
push
push
lds
mov
fs
mov
inc
dec
sahf
inc
mov
or
pop
cltd
pop
mov
adc
cmp
bnd
sbb
mov
sbb
cld
test
dec
stos
mov
mov
mov
mov
lcall
inc
push
fisubs
rorl
std
or
push
add
mov
adc
pop
out
lret
dec
cmp
mov
cmp
jo
fs
mov
push
mov
inc
dec
pop
mov
cmc
ljmp
jne
sbb
adc
mov
push
cmp
jbe
add
sub
dec
cmp
add
inc
adc
test
xchg
orb
mov
xchg
sbb
jge
mov
fstpl
mov
xchg
sub
pop
xor
add
fstps
dec
outsb
sbb
push
insb
pop
in
aas
fmull
inc
jmp
add
add
out
out
pushl
pop
inc
sahf
and
xchg
test
mov
and
jb
adc
and
cmp
lcall
loope
insl
xchg
sub
in
sbb
pusha
mov
xchg
out
add
xor
sbb
mov
aam
and
mov
out
loop
xchg
sub
aaa
fcoml
movsb
or
inc
adc
orb
out
adc
sbb
cmc
xor
or
xorl
jg
repnz
out
push
jmp
gs
xchg
mov
mov
jmp
hlt
movb
mov
push
jne
mov
and
adc
cmp
fwait
pop
inc
mov
mov
rcrl
pop
push
movsb
xchg
out
pushl
pop
data16
pop
mov
adc
and
mov
iret
xor
scas
or
pop
shr
push
add
jl
push
rcr
rcll
xchg
push
mov
xchg
fbld
sti
mov
out
jmp
xchg
mov
lods
iret
ja
and
pop
test
lea
ljmp
test
inc
push
push
bound
inc
push
or
clc
fimull
arpl
dec
stos
fsubl
fidivrs
test
push
in
insl
xchg
ds
add
push
out
pop
hlt
lea
jo
add
gs
mov
repnz
in
loop
xchg
adc
das
jnp
ja
sbb
lret
sbb
adc
inc
shr
call
lods
lahf
out
jge
into
or
dec
jl
roll
sbb
or
out
pop
cwtl
movsl
jo
add
aaa
lods
test
mov
imul
cmpsb
loop
inc
test
cld
icebp
mov
and
call
pop
xchg
xchg
lahf
jne
bound
and
cltd
in
mov
mov
js
or
fcmovnbe
and
fsubrl
les
jge
dec
lea
xchg
mov
push
or
pop
cwtl
inc
pop
popf
add
and
pop
mov
sbb
divb
jle
cmp
sub
cmp
nop
inc
mov
add
and
mull
call
jno
push
cmp
adc
ror
dec
rcrb
or
fs
and
js
gs
ja
fisubs
mov
push
mov
jmp
add
cmpsb
stos
mov
or
xchg
mov
sbb
or
inc
gs
pop
dec
ret
push
pop
jnp
mulb
add
or
sbb
fistpl
jno
or
in
xchg
inc
cmc
fwait
push
mov
ret
push
clc
cld
push
sbb
add
pop
jb
push
out
mov
cmp
aaa
sbb
mov
pop
fildl
mov
and
sbb
in
inc
dec
fcomps
mov
test
inc
ss
and
inc
jg
mov
inc
popl
or
and
xor
repnz
mov
add
dec
push
nopl
bound
push
fidivrs
lahf
inc
push
les
dec
adc
sti
sub
in
or
sahf
dec
syscall
xchg
stos
xchg
xor
xor
jmp
mov
faddl
jp
push
sbb
cmp
sbb
loop
sbb
pop
mov
or
mov
inc
adc
imul
bound
jp
or
jmp
xor
sbb
call
xchg
insl
in
pop
test
cmp
dec
xchg
adc
sbb
sbb
lcall
push
dec
lahf
neg
cmp
adc
in
aas
cmp
pop
rclb
add
das
loop
cli
pop
push
cs
sbb
loope
lcall
jg
int3
adc
in
mov
mov
mov
jmp
in
rclb
jne
es
cmc
scas
je
test
movsb
cwtl
data16
ds
int
cli
and
es
jle
inc
loop
gs
mov
mov
jmp
mov
push
not
les
mov
mov
mov
ret
cmp
dec
sbbb
push
stos
clc
push
test
lcall
push
stc
push
jmp
mov
adc
stc
js
fimuls
orb
inc
mov
xchg
or
sbb
jmp
xchg
and
adc
mov
ja
mov
and
rorl
data16
fcoml
cmpsb
xchg
pop
pushf
cli
mov
or
loop
push
popa
jno
fsts
mov
inc
mov
mov
jae
cmp
subb
push
adcb
ret
fwait
xchg
mov
cmp
das
dec
cwtl
push
xor
js
fnop
mov
out
test
movsb
mov
inc
sbbb
clc
aad
testb
js
inc
mov
inc
push
xchg
pop
insl
and
xchg
xor
repz
out
mov
inc
sub
dec
mov
or
addr16
cmp
pop
adc
cli
shlb
sbb
rolb
mov
cmp
push
fisubs
fisubrs
dec
lds
call
lds
fimuls
icebp
push
xchg
pop
cmpsb
movsl
jne
dec
jne
pop
mov
and
cmc
sub
mov
pop
and
dec
cld
loopne
xchg
aam
in
and
addr16
ds
mov
jecxz
fmuls
xchg
xchg
cmp
pop
jecxz
jae
lods
int
fldenv
sarb
pop
test
shl
ret
xchg
or
sbb
and
mov
bound
sbb
imul
imul
pop
lret
stc
and
dec
xchg
in
sbb
sbb
iret
hlt
adc
xchg
jp
fmulp
sbb
add
mov
xchg
lahf
pop
and
jecxz
dec
dec
movsb
mov
out
fwait
cltd
testb
cmp
adc
add
movl
test
adc
cld
mov
push
andb
test
enter
and
adc
test
leave
les
mov
cmpsl
iret
xor
or
gs
mov
jbe
repnz
in
das
push
lahf
push
iret
andb
mov
cwtl
lcall
inc
stos
mov
sbb
inc
jno
aam
or
stos
mov
push
insb
sub
lods
mov
or
rolb
cmp
clc
cmovnp
sub
mov
cmp
xor
imul
mov
pop
test
scas
rol
je
in
inc
jb
js
bound
jae
test
pop
sbbl
add
out
nop
sahf
imul
jp
xorb
lods
add
lds
cmpsb
pop
push
loop
push
mov
jle
lret
or
lods
push
mov
sub
xlat
xor
add
repnz
xor
or
mov
es
pop
mov
lock
inc
and
out
xor
sti
xor
sti
push
testb
bound
mov
sbb
mov
or
insb
dec
in
cmp
aas
pop
sbb
and
cmp
xchg
lret
hlt
testl
xchg
sbb
xchg
inc
mov
cmpsl
mulps
call
lahf
ret
mov
mov
pop
dec
out
and
cld
pop
in
push
sahf
or
and
or
push
fs
sbb
push
inc
pop
mov
loop
es
inc
xor
lods
rcrb
mov
repnz
xchg
mov
inc
or
pop
or
test
or
lahf
in
icebp
rcrl
out
out
cmp
pop
and
cld
repnz
fs
inc
xchg
add
stc
in
push
popf
sbb
mov
fstl
add
pop
jmp
bound
imul
pop
mov
xlat
je
xchg
cmpsl
ljmp
in
cmpsb
js
mov
test
ds
add
inc
or
xor
insl
mov
cmp
jmp
ja
add
pop
xchg
cmc
sahf
add
sbb
xchg
xor
mov
lcall
sbb
insb
inc
subb
inc
popa
ftst
add
and
dec
in
loopne
fs
mov
mov
pop
pop
inc
push
xchg
fdivs
push
or
shlb
push
insb
add
cmp
push
cmp
push
in
dec
jp
mov
in
cltd
rorl
js
inc
cmpsb
push
add
lret
mov
push
lea
fists
mov
fsubs
popa
movsl
mov
test
xor
cmpl
test
aad
movsb
xchg
adc
arpl
loop
in
nop
addr16
scas
jp
jb
mov
call
shll
ja
mov
jmp
seta
adc
clc
xchg
out
and
es
xchg
ficomps
jne
in
pop
std
js
mov
je
cmp
and
inc
test
rcrl
inc
mov
cs
mov
lret
and
push
shlb
pop
mov
sub
dec
sbb
adc
pop
ljmp
cs
mov
popa
test
lret
mov
push
adc
in
rorl
push
push
popf
movsl
push
xor
add
nop
and
out
orl
loope
or
fwait
cmp
addl
scas
dec
aaa
je
or
clc
jp
and
jp
pop
mov
mov
mov
adc
adc
mov
fcmovnb
in
cwtl
inc
cld
mov
jnp
lds
adc
dec
inc
ljmp
pop
adc
or
test
or
inc
mov
orl
pop
mov
and
out
icebp
in
sub
movsl
ja
mov
pop
cltd
xor
aad
test
les
test
pop
xlat
lods
mov
ljmp
clc
pop
sub
sbb
inc
call
push
sbb
jae
cmc
inc
mov
ss
in
fldcw
cs
add
popa
rcrl
call
push
xor
incb
stc
lret
ror
pop
xor
test
mov
mov
inc
in
loope
jne
or
pop
imul
mov
subb
loop
dec
scas
ljmp
push
xorb
lahf
inc
sbb
cmp
pop
push
retw
mov
mov
mov
out
or
sti
fnstcw
add
adc
mov
mov
sbb
retw
movl
sarb
lret
daa
std
fstpt
xchg
pop
js
or
sbb
mov
mov
mov
xor
repz
loope
dec
push
sbb
xchg
in
cmpsb
fists
cmp
mov
adc
pop
pop
movsb
cwtl
pusha
repz
pop
sbb
lods
jbe
cmp
jae
loopnew
xchg
mov
dec
jmp
and
js
jg
pop
out
jb
and
mov
aaa
clc
xchg
sub
ljmp
pop
jb
push
fs
mov
sti
test
subb
test
or
jp
idivb
sti
cmp
sbb
data16
xchg
ret
mov
jae
test
cmp
adc
xor
and
sbb
repz
flds
or
xchg
mov
add
cmp
xchg
dec
mov
mov
pop
and
cli
sub
popf
add
cli
fdivrp
xchg
cltd
sub
cmp
test
aad
cmpsb
outsl
add
or
cmp
dec
xor
rcr
data16
iret
ret
es
sbb
push
daa
cmpsb
and
inc
aad
mov
push
jle
inc
mov
cmpsb
sti
push
lret
gs
xchg
or
mov
cld
inc
insl
xchg
dec
loopne
aaa
jne
divb
add
pop
loope
pop
cltd
stc
xor
incl
fcompl
sub
sbb
jae
lret
iret
add
pop
lods
sbb
aaa
arpl
inc
or
and
xchg
adc
and
dec
inc
dec
cmpsb
push
cwtl
add
std
xchg
arpl
les
push
es
stc
daa
or
dec
dec
pop
sbb
cwtl
mov
lret
add
pop
ja
push
sub
xchg
mov
add
movsb
push
mov
in
add
push
sbb
cmp
loopne
mov
mov
inc
xchg
sbb
mov
cmp
pop
jae
dec
dec
popw
popf
ja
mov
call
call
mov
decl
imul
shrl
shlb
cmpsl
cmp
sbb
scas
cmc
call
stos
inc
mov
cmpsl
cmp
jecxz
pop
push
ret
mov
vmwrite
mov
jmp
push
aas
adc
inc
xorl
popa
mov
arpl
push
test
jns
in
pop
or
fimull
adc
cmp
rcl
aas
xchg
mov
jnp
movsb
xor
push
cmpsb
rolb
mov
test
js
jge
adc
mov
xor
push
les
cli
mov
ds
and
test
inc
pop
push
mov
js
rorb
rorl
testb
es
fstpl
aad
lds
in
fisubrs
cmp
pop
test
aaa
les
and
pop
pop
out
push
pop
fwait
push
in
arpl
jbe
cmc
in
adc
test
loop
daa
sbb
test
inc
js
or
pop
push
add
mov
sbb
xchg
jns
fsub
dec
cli
popf
adc
js
bound
fwait
fwait
in
and
mov
sbb
xorl
loopne
movsl
mov
jno
push
mov
out
scas
js
cwtl
push
cs
mov
mov
jo
cli
jbe
push
ret
jmp
inc
shr
fwait
je
out
lfs
dec
fs
les
push
inc
add
loope
loopne
es
out
jecxz
test
fistpl
mov
dec
lds
arpl
push
out
js
rorb
jg
mov
cmc
or
loop,pt
lcall
cmpsb
or
mov
in
ja
vaddsubps
sub
mov
mov
andb
loope
jg
xchg
sbbl
les
loop
mov
xor
in
es
call
pop
push
mov
mov
push
mov
add
ret
ficoml
add
jmp
pop
jns
or
bound
lret
and
and
cli
and
call
dec
mov
cli
and
push
and
pop
and
xor
or
xlat
mov
jmp
adc
adc
cwtl
xchg
pop
mov
test
imul
js
mov
push
out
mov
push
jo
rcll
cmp
bound
mov
out
inc
mov
test
xor
test
lcall
xchg
pop
pop
js
pop
mov
sbb
fidivrl
ret
stos
inc
fldt
scas
jb
jmp
movsb
cmp
out
sbb
xor
cmp
or
cmpsb
lock
xchg
ss
or
test
add
hlt
ficomps
pop
push
bound
xor
cmp
lret
mov
ja
xchg
mov
testb
js
test
mov
cli
cmpl
add
js
adc
mov
subb
mov
repnz
shll
xor
arpl
shrb
cltd
iret
ret
lcall
sub
dec
xchg
insb
jbe
sbb
or
stc
mov
cs
sub
dec
lock
jmp
and
rorl
pop
and
pop
and
push
adc
jmp
mov
arpl
pop
xchg
sbbb
pushf
dec
pop
sbb
xor
cmp
mov
xchg
sub
inc
and
aad
iret
and
sbbl
rcrl
fs
adc
incl
sub
xor
cmp
cmp
adc
push
movsl
cwtl
mov
inc
ja
hlt
jo
and
mov
call
mov
inc
cmp
stos
shr
jb
sbb
push
fsub
jne
xchg
sbb
and
pop
xchg
int3
cwtl
cld
xchg
jge
sbb
sub
inc
cmpsb
inc
push
bound
cmc
and
mov
in
scas
push
je
into
test
filds
test
push
hlt
lahf
loop
jmp
popa
push
xchg
and
pop
mov
jne
and
add
jecxz
daa
push
xchg
lret
xchg
mov
pop
and
shr
enter
lahf
ss
or
mulb
imul
js
ds
stos
inc
jmp
jp
test
xchg
call
pop
inc
js
or
out
sbb
aad
jae
ljmp
test
nop
in
xchg
inc
and
cmpsb
movsb
push
loop
push
sbb
pop
mov
mov
fldl
js
xchg
jmp
jg
or
lods
pop
mov
xchg
mov
add
add
lea
les
loopne
and
das
out
dec
pop
mov
xchg
inc
jno
push
mov
fdivr
inc
cmpsb
outsb
lcall
add
xchg
xor
fisubrs
mulb
adc
cmp
mov
mov
mov
lea
test
xchg
mov
inc
add
fisubrs
test
aad
outsb
mov
adc
fldcw
push
sbb
movsb
aam
add
pop
mov
sub
mov
cwtl
add
adc
mov
fs
xor
xchg
data16
filds
sbb
jle
push
fisubrs
and
ds
jle
adc
xchg
das
jae
push
test
stos
test
cmpl
fcoml
aam
cmpsb
aad
test
loope
pop
and
mov
notl
adc
sub
xchg
mov
fldenv
inc
icebp
pusha
mov
sub
lcall
add
clc
mov
sti
or
inc
sbb
sub
repnz
repnz
cltd
out
xchg
cwtl
mov
cld
movsl
jecxz
pop
sbb
adc
ja
jg
rorl
cmp
push
fiaddl
imul
hlt
fs
scas
and
cmc
daa
je
nop
imul
sub
fld
loop
dec
pop
mov
push
cmpsb
add
into
xor
sbb
or
xor
adc
dec
and
dec
ret
jne
xchg
ror
add
mov
aad
cmpsb
xor
cmp
add
andl
hlt
adc
dec
jne
or
mov
mov
xor
stc
std
test
lret
movsl
and
jne
jbe
and
pushf
pop
clc
cld
lock
mov
dec
out
sub
int3
xor
jne
lret
jbe
and
sub
cmp
scas
or
mov
xchg
mov
xchg
fsubs
inc
inc
adc
movsl
and
mov
divb
adc
rorl
pmaxub
xchg
sarl
insb
or
sarb
sbb
iret
or
mov
lret
repz
add
fldcw
push
cli
repz
add
test
adcl
int
js
mov
aas
popa
hlt
pop
ds
insb
add
loop
inc
or
add
movsl
push
in
push
test
jle
call
add
cs
fs
int
lret
add
test
xchg
addl
ret
xchg
ljmp
rcrb
xor
and
into
out
outsb
mov
add
adc
test
stos
movsl
and
stos
push
sbb
add
mov
and
mov
rcrb
out
cmpsl
pushf
adc
sahf
or
es
ljmp
repnz
mov
add
sbb
sbb
push
lcall
sbb
push
sbb
and
sbb
add
mov
stc
or
pop
inc
fs
lds
push
loop
add
add
sahf
stos
loopne
add
movsl
xchg
xchg
mov
into
push
xchg
sahf
xor
adc
fs
mov
cwtl
ja
cmpsb
mov
pop
test
fbstp
add
or
and
jle
push
sbb
add
ret
hlt
add
movsb
add
push
inc
mov
sbb
cltd
clc
cmpsl
mulb
jmp
push
mov
sub
inc
js
jle
mov
pushf
cmp
or
lahf
in
and
or
fidivrs
dec
aad
push
in
xchg
aaa
lods
jmp
mov
mov
jo
fidivl
sbb
repnz
popf
out
xor
push
fwait
into
push
out
cmpsb
mov
cmp
daa
mov
aad
ret
and
mov
in
mov
mulb
push
xor
in
dec
inc
adc
in
xchg
arpl
or
insb
push
mov
int
jp
lods
std
pop
cmc
inc
inc
aad
jbe
pop
ficomps
mov
test
sub
aaa
dec
fidivrs
push
jmp
stc
lcall
fwait
data16
sbb
in
and
popa
or
cmpsb
popf
pop
sub
xor
xchg
and
popa
push
sar
subb
hlt
out
or
add
or
xor
subl
pusha
fucomp
js
inc
nop
adc
mov
push
sub
adc
xor
mov
and
xchg
pop
mov
sub
dec
and
outsl
into
popf
out
push
cmp
pop
add
push
movsl
sbb
daa
aad
js
popl
dec
cmpsb
or
push
clc
jge
lret
push
inc
test
fldenv
movsl
test
jne
movsb
pusha
les
xchg
jecxz
movsb
out
push
outsl
pop
std
out
lcall
je
sahf
push
dec
mul
fwait
or
rcrl
std
mov
add
mov
push
faddl
xchg
jbe
or
jge
sbbl
in
xchg
in
ret
test
mov
in
push
xorb
add
cmc
adcb
lahf
lret
xor
mov
hlt
rol
dec
in
fidivs
aad
out
test
cmp
pop
jge
in
push
xchg
cltd
mov
movsb
into
pop
inc
xchg
mov
fiadds
push
mov
and
popf
sbb
xor
lahf
sbb
sbb
fisubs
loopne
les
pop
sbb
jl
push
bound
mov
mov
sub
pop
push
lods
adc
movsl
pop
popf
dec
mov
dec
cmpsb
mov
and
ljmp
mov
out
add
lcall
mov
add
outsl
or
and
inc
push
mov
inc
inc
das
orb
xlat
arpl
gs
lea
fisttpll
jg
mov
xor
dec
jmp
or
sti
cmp
adc
das
cmp
movsb
out
out
divb
fcoms
cmp
dec
push
sar
mov
sbb
jae
insb
aam
inc
xchg
test
jl
lahf
jge
dec
sbb
and
dec
sub
or
xchg
and
xchg
into
jb
xchg
cmp
lcall
test
jae
or
pop
lcall
or
push
adc
data16
scas
inc
pop
inc
cmp
pop
and
and
push
cmp
inc
cmp
rcrb
pop
mov
push
sbb
adc
cmp
mov
jne
sarb
lret
lahf
into
mov
test
scas
repz
and
fidivs
test
cmp
fstl
jne
mov
aaa
cmc
sbb
gs
jno
inc
inc
push
jo
leave
test
cmp
push
adc
pop
in
cs
or
bound
cwtl
push
test
pop
mov
js
sub
push
mov
lahf
sub
dec
jecxz
loop
pop
xlat
movsl
inc
cmp
xchg
clc
fisubrl
aam
jmp
pop
test
mov
sarl
add
rclb
fidivs
test
and
cmp
cmp
rorl
pop
loope
cmp
xchg
xor
out
stos
push
pop
inc
mov
lret
add
scas
in
mov
or
mov
in
aaa
and
daa
data16
je
flds
dec
mov
cld
inc
cmc
xchg
data16
inc
sbb
fwait
push
aam
and
jle
psubsb
iret
xchg
out
cld
mov
sub
das
fstpt
mov
stos
jge
jp
mov
cmp
dec
sbb
or
or
and
cmc
jmp
push
inc
cmp
popa
add
lods
clc
xchg
sbb
data16
add
out
pop
mov
fisubrs
cmp
je
xor
jl
add
dec
push
js
mov
pop
dec
lods
hlt
pop
scas
mov
xor
pop
mov
aad
mov
inc
negb
jl
push
hlt
popf
js
push
dec
es
cwtl
gs
push
iret
lahf
push
cs
mov
mov
cmp
add
jle
in
inc
int3
cmc
or
pop
rorl
cmp
fdivs
fcoms
push
add
cmp
jp
out
daa
and
jne
iret
les
adc
dec
mov
mov
aam
dec
repz
push
and
lcall
mov
mov
push
bound
jne
dec
adc
inc
xor
inc
test
outsl
in
xchg
adc
push
dec
xor
jp
fcmovbe
pop
jae
test
fisttps
in
dec
aas
out
mov
pop
movsb
xor
inc
xor
shl
xor
pmaxsw
add
cld
pop
add
xchg
hlt
xchg
sbb
mov
sub
sti
mov
adc
lcall
mov
pop
lahf
lahf
mov
stos
mov
lcall
fs
les
in
lahf
test
mov
call
aam
dec
imul
idivb
movsl
sub
pop
and
cmpsb
ss
and
lret
adc
and
lds
and
cmpsb
lret
cmpsb
lret
sahf
lea
or
or
or
adc
lret
push
hlt
lahf
pop
imul
mov
xchg
lret
stos
les
inc
mov
push
and
adc
pushf
inc
fwait
loop
lcall
xchg
mov
and
mov
add
scas
inc
and
mov
cwtl
cmp
out
daa
or
loop
div
sahf
test
mov
push
add
sbb
xchg
dec
mov
lds
flds
out
lret
or
cld
pop
jne
out
jle
sbb
pop
mov
push
mov
rcrl
push
mov
or
sbb
and
and
movsb
mov
mov
scas
and
imul
inc
lcall
into
xchg
test
lods
fsub
mov
sti
xchg
daa
xchg
out
leave
scas
sbb
jmp
sahf
idivb
into
or
insb
mov
push
fimull
mov
fwait
mov
sbb
cmpsb
cwtl
lds
add
mov
int
loop
jo
pop
and
add
fldt
xchg
or
jle
scas
shlb
mov
jg
inc
pop
testb
js
pop
lret
adc
les
add
sbb
fwait
mov
rcll
jno
mov
jne
push
cmpsb
and
xor
loope
mov
loopne
and
ret
sub
sti
aas
adc
push
into
movsb
sbb
das
hlt
xchg
and
xchg
insl
cmp
push
fildll
gs
jmp
jne
icebp
dec
cwtl
mov
out
les
add
movsl
add
lds
mov
adc
add
and
sbb
and
insl
jns
cmpb
in
mov
les
adc
or
jl
and
mov
or
outsb
mov
sub
sahf
dec
xchg
arpl
mov
push
fldenv
repnz
inc
cmc
pushf
test
mov
fmulp
addl
dec
xchg
push
icebp
pop
shl
jl
out
sub
mov
fs
test
or
rcll
or
jle
cmc
call
cmp
jo
mov
xchg
pop
sbb
rorb
sti
inc
aad
xchg
gs
into
pop
insb
sti
push
fildll
roll
ljmp
mov
pushf
fcomps
push
xchg
dec
cmpsb
lea
popf
pop
rolb
or
inc
popf
in
xchg
pop
enter
jns
out
and
mov
pushf
inc
mov
xchg
adc
pop
movsb
testb
jmp
popf
stos
lcall
or
mov
mov
mulb
inc
and
add
std
in
or
add
adc
daa
jge
xor
sti
clc
mov
leave
enter
jle
cwtl
add
xchg
std
ffreep
cmp
sub
cmp
mov
das
out
add
add
lret
pop
cmovns
push
and
and
imul
mov
push
frstor
mov
adc
inc
jae
loope
mov
fcomps
out
dec
dec
mov
test
jb
in
jecxz
fs
jae
daa
pop
fsub
sub
mov
mov
gs
sub
lea
cmpsb
cmpsl
jbe
adc
mov
in
in
inc
jbe
mov
push
pop
pusha
mull
stos
inc
jge
push
or
xchg
xor
movsl
mov
faddl
lcall
aas
popa
cmp
imul
dec
inc
sbbl
cwtl
pop
mov
iret
lock
sbb
mov
push
loopne
mov
test
mov
stos
or
xor
and
push
mov
and
inc
or
and
cwtl
and
mov
mov
pop
sub
in
popa
mov
fistpl
sub
mov
ja
jmp
cbtw
or
cmpsb
pusha
dec
enter
mov
add
cmp
test
lea
pushf
sbb
mov
shll
les
add
cld
addl
mov
pop
xchg
ja
bound
adc
push
or
xchg
sarl
jb
andb
pop
mov
sub
inc
xchg
or
movsb
ljmp
movq
repz
cmpsb
data16
out
ret
in
cmpxchg
jmp
fs
pushf
xlat
lcall
mov
cmp
outsb
xor
je
pop
fmull
mov
imul
js
cmp
and
bound
int
sbb
int
adc
mov
lcall
sti
or
js
pushf
jae
loope
mov
jo
xchg
lods
aam
xchg
out
and
fstps
cmp
add
in
in
sub
push
or
fs
lods
pop
fsub
mov
mov
das
aas
xor
cmpsb
xor
hlt
sbb
lods
fnsave
push
dec
jne
pop
sbb
inc
cmpl
pusha
xchg
cwtl
sbb
mov
call
bound
and
fwait
nop
jae
push
testb
push
xchg
daa
sbbb
ljmp
xchg
movsl
test
cmc
fbld
adc
mov
mov
inc
or
mov
dec
sahf
push
fstp
in
lea
xchg
or
sbb
lds
cmpsb
test
sub
cmpsb
out
lret
jo
jne
or
pop
aad
enter
sbb
mov
jp
movsl
pop
sub
sti
js
xchg
sbb
add
xor
xchg
popl
add
push
gs
cmp
push
in
dec
in
push
js
pop
and
lods
stos
shr
mov
mov
call
outsb
push
mov
or
pop
cltd
pop
and
push
pusha
pop
int
out
jp
movsl
in
sbb
sub
and
pop
rcll
mov
mov
out
pop
ficoms
xchg
ret
sbb
pop
sbb
mov
or
mov
xlat
imul
mov
pop
add
sub
cmp
mov
test
xchg
jo
ret
cmp
loopne
mov
icebp
dec
mov
or
pushf
dec
or
shll
pop
setno
sub
loop
mov
cmpl
les
cmp
fistpll
lock
lock
sbb
jo
idiv
mov
xchg
or
adc
jmp
pop
or
xchg
cmp
add
sub
cltd
and
arpl
hlt
mov
stos
paddsw
into
gs
lods
jae
or
movsb
mov
orl
dec
cmc
jne
push
cmp
rclb
enter
push
add
sbb
jle
leave
inc
sub
gs
and
aam
jle
and
insl
mov
xchg
pushf
lcall
rorl
or
mov
sbb
stos
ror
iret
xchg
pushf
and
jne
out
push
daa
dec
add
aad
or
in
cmpsb
push
testl
lcall
inc
daa
ljmp
fildll
sbb
push
dec
sbb
push
jle
and
clc
xchg
pop
psrlq
sub
jno
jno
add
lods
in
mov
test
sbb
mov
mov
push
and
icebp
adc
call
and
cmp
add
dec
lods
mov
push
fildll
sti
ja
mov
push
rcrl
test
mov
call
aad
subl
cs
push
ficoms
sysenter
cwtl
cmpsb
push
inc
test
in
mov
inc
in
push
or
xchg
xchg
shll
test
mov
mov
rorb
fdivrs
cmc
data16
push
and
js
jle
sahf
pop
adc
hlt
imul
adc
and
bound
cmpsl
pextrw
adc
jge
and
dec
xor
cmp
mov
movsb
iret
daa
addr16
mov
adc
cmpsl
test
aam
shlb
test
sub
out
out
sub
pop
les
cmp
out
icebp
xlat
jns
jmp
or
popf
and
jp
pop
inc
push
mov
xchg
bound
cmpl
sub
sbbb
inc
in
mov
push
sbb
jmp
mov
push
cwtl
fidivrs
fcoml
pop
stc
sub
push
pop
sub
stos
push
jnp
in
aaa
ds
scas
inc
sbb
jns
mov
notb
inc
xchg
shrl
test
mov
js
add
add
mov
cltd
xchg
adc
filds
es
jg
adc
push
hlt
jge
cmp
jae
gs
inc
das
scas
sbb
movsb
mov
lret
or
std
sahf
pop
xchg
and
lcall
scas
xor
push
jns
cmpsb
pop
out
popf
arpl
push
lcall
pop
mov
lods
int
rolb
and
fwait
add
pop
out
cwtl
xchg
dec
test
test
movsb
rolb
inc
mov
add
ds
ficompl
daa
shll
and
xchg
mov
mov
add
push
leave
shrl
add
lock
je
jbe
pop
or
and
repz
pop
mov
sbb
fmuls
rcrl
in
push
inc
mov
mov
notl
sbb
std
out
fadd
add
ja
and
sbb
lods
lret
pop
lds
xchg
arpl
xchg
cmp
fadds
pop
push
jge
mov
inc
in
and
in
ret
sbb
test
in
push
lds
outsl
push
fildll
or
mov
jmp
or
je
inc
arpl
fildll
mov
mov
xchg
pop
insl
mov
adc
mov
rcr
call
dec
test
jbe
dec
ss
ret
inc
mov
mov
mov
dec
aaa
test
sbb
xor
outsb
bound
lea
int
cmp
sti
push
jmp
out
jl
mov
mov
mov
dec
in
pop
aad
mov
xchg
mov
fistl
ret
pop
fcoms
fwait
pop
jge
adc
dec
xchg
mov
scas
lock
mov
push
test
mov
or
pop
insl
insb
fdivrs
jns
test
aad
scas
cmpsl
int
cmp
xchg
fldt
scas
xor
es
loopne
cs
loope
out
dec
dec
xchg
mov
rcr
or
lahf
and
loop
in
pop
mov
push
je
imul
and
sbb
and
out
daa
cmpsb
xchg
and
inc
in
inc
inc
ds
pop
out
push
cmp
loop
or
dec
push
add
lcall
and
xchg
mov
fisubs
sub
invd
jp
cmp
pop
mov
jl
and
cmp
cli
lahf
cli
cwtl
arpl
mov
fisubl
loop
and
cmp
adc
or
int
mov
fcmovnbe
push
andl
cmpsb
call
and
cmp
lcall
sahf
andb
and
in
mov
jle
mov
pop
jge
jns
inc
or
mov
xchg
in
mov
mov
jae
aaa
aaa
es
repz
add
scas
jmp
or
sub
daa
enter
add
fucomi
into
lock
test
mov
inc
cmp
cmp
xchg
sti
and
hlt
xchg
ja
jle
mov
mov
mov
and
stos
repz
add
or
mov
inc
and
mov
pop
and
and
and
js
js
cmpsl
add
mov
fs
data16
sbb
inc
mov
fs
test
leave
test
and
repnz
lock
shlb
sbb
ss
add
cltd
and
movsl
push
jae
or
ds
jmp
movsl
pop
mov
sbb
cmpsb
cmp
aam
pop
movsl
cmp
or
out
pop
mov
adc
push
push
out
jecxz
inc
lods
sub
add
push
adc
test
and
gs
aas
xorb
addl
cwtl
sub
or
js
daa
sbb
into
add
mov
roll
mov
and
lea
and
push
mov
jbe
leave
push
add
xchg
jle
dec
int3
leave
ficoms
in
cmp
orb
sub
imul
or
pop
lcall
js
ds
sahf
gs
mov
jge
movsl
daa
pop
lods
test
aas
mov
xor
out
int
test
dec
jge
dec
aas
jg
sub
orl
sbb
out
xchg
test
in
imulb
sub
jbe
dec
cwtl
ljmp
das
sbb
sbbl
cmpsb
or
out
xor
push
shlb
mov
pop
ss
jb
pop
adc
lahf
les
daa
add
xor
pusha
das
popf
jecxz
cmpsb
popf
push
pushf
test
aaa
fisttpll
dec
lock
mov
or
movsl
fdivp
ret
adc
daa
in
imul
test
jle
or
sub
or
lret
mov
int
rcr
ret
xchg
mov
and
mov
and
add
and
jmp
mov
push
mov
push
pop
and
loop
lds
pop
in
js
out
jnp
cmp
mov
pop
movsl
out
mov
and
leave
in
into
push
aas
push
ljmp
dec
or
jmp
sub
ret
rolb
xchg
loop
add
test
jg
lds
dec
testl
out
cmp
pop
xchg
adc
ret
mov
lods
jmp
decl
repnz
xor
in
xchg
imul
outsl
fdivp
jge
mov
or
out
loopne
imulb
pop
aas
movsl
pop
mov
cmp
loopne
pop
loop
mulb
js
daa
out
adc
fwait
jbe
or
xchg
mov
push
fbstp
ja
mov
mov
jmp
jp
add
mov
mov
or
fwait
pop
adc
out
repz
inc
imul
mov
andb
in
jle
testl
and
flds
sti
rol
aaa
lods
sub
addr16
sbb
daa
lods
lret
int3
jbe
pop
inc
jmp
mov
sub
xlat
repz
test
ret
movsb
testb
xchg
pop
mov
or
mov
rorl
jne
sbb
cmc
sbb
gs
ss
insb
jl
test
rcrl
fadds
mov
inc
sarb
xchg
push
mov
cmc
jge
push
movsb
imul
je
jno
push
jne
or
icebp
xchg
fidivs
aad
faddp
push
out
mov
lds
mov
dec
xchg
add
jmp
frstor
jg
cmp
xor
cmp
inc
jb
xorl
in
dec
mov
pop
std
add
stc
cmp
mov
pop
lods
sub
jl
sub
sar
fwait
jae
scas
shlb
jge
je
dec
shll
sub
dec
bound
inc
jno
or
aam
sub
xchg
aas
movsb
into
xchg
mov
sub
and
or
cwtl
je
cld
lcall
jbe
ja
aas
lock
mov
fwait
iret
sub
pop
mov
pop
jg
or
imul
cmpsb
rol
sahf
push
fisubs
cmc
push
call
arpl
xchg
pop
add
fs
ds
add
xor
push
mov
pop
aas
mov
mov
fdivr
sub
push
adc
adc
and
push
test
xor
xchg
jno
sbbl
push
shl
lock
sbb
mulb
hlt
add
or
xchg
enter
inc
mov
xchg
jne
in
ret
dec
sub
cmpsb
test
add
cmp
adc
hlt
xor
sbb
lods
stos
aad
sub
add
leave
ret
inc
mov
shrl
add
sbb
pop
outsb
lret
leave
mov
sti
cmpsb
bswap
test
js
inc
test
sahf
daa
pop
sbb
xchg
sbb
sbb
xchg
cmpsb
sbb
or
cmpsb
sbb
mov
ficomps
daa
xor
sbb
xchg
jae
dec
enter
sbb
push
cs
pop
scas
in
cmp
movsb
adc
xchg
movsl
pop
adc
nop
push
data16
xchg
adc
xchg
aaa
jbe
daa
cmpsb
mov
pop
push
and
add
push
xchg
aad
lahf
and
es
adc
and
test
pop
out
inc
ss
pop
pop
adc
pop
jne
push
pop
jmp
cmp
or
test
insl
add
push
mov
test
push
or
cwtl
sbbl
imul
jnp
scas
dec
test
sti
xchg
in
sub
mov
push
adc
dec
add
pop
outsb
adc
pop
icebp
sbb
cmpsb
xor
aas
jno
fists
filds
out
or
xor
push
and
and
push
and
subw
testl
cmp
pop
pushf
stos
rcll
pop
adc
aaa
xchg
imulb
int3
pop
push
in
mov
inc
adc
lcall
ja
push
mov
xor
cmc
ret
jbe
sbb
idiv
jae
xchg
cmp
or
jge
inc
cwtl
dec
xchg
and
insb
push
faddp
hlt
arpl
ja
test
movsb
mov
mov
jmp
jne
pop
xchg
in
mov
add
cmp
mov
shlb
and
fs
sti
dec
pop
add
stos
cmp
adc
scas
xchg
push
add
cmpsb
jp
out
and
popa
cld
outsl
xor
and
fdivrl
sbb
leave
daa
cmp
into
outsl
sar
fdivl
cmc
sbb
and
jae
push
sbb
sub
cmpsl
mov
mov
dec
jle
test
jecxz
and
imul
add
add
inc
and
or
pop
rorb
sbb
add
pop
out
cld
jmp
or
insl
jl
in
es
call
add
nop
in
jle
aas
inc
push
mov
mov
outsb
adcb
es
cmpsb
xchg
ror
int3
adc
push
adc
out
or
rcrb
and
or
shl
push
mov
adc
inc
out
sti
and
adc
mov
out
ja
push
pop
out
sbb
popa
lret
add
add
mov
pop
dec
mov
or
xchg
out
ja
mov
pushf
int
inc
xor
pop
scas
cmpsb
out
mov
push
push
es
mov
pop
fsubs
test
aas
cmp
iret
jnp
inc
xor
rclb
fwait
mov
mov
pop
add
testb
popa
ret
movsb
push
mov
pop
sbb
outsl
in
sub
push
gs
popa
in
orl
dec
cmp
mov
gs
cmpl
sub
lea
xor
mov
push
insb
in
jmp
and
add
mov
mov
shlb
push
loopne
outsb
dec
ret
sbb
popl
mov
xchg
or
xor
push
fdivl
xchg
push
movsl
adc
mov
jge
jo
add
test
and
out
jne
push
mov
or
nop
bound
cmp
xchg
inc
dec
xlat
out
jns
cmp
adc
and
adc
ja
out
test
movlps
jbe
push
inc
xorl
sarl
in
jp
out
or
cmp
dec
lahf
lds
arpl
ljmp
dec
jbe
jge
fs
arpl
mov
stos
and
dec
push
sbb
lret
repz
mov
in
jns
out
or
ret
sub
or
or
pop
cmp
in
js
and
fs
xchg
pop
fsts
mov
adc
mov
addl
movsl
js
ss
inc
dec
ss
movsb
mov
push
mov
dec
movl
gs
pop
gs
in
push
fwait
dec
push
adc
push
add
enter
sarl
dec
or
mov
pop
cs
jge
inc
pop
test
fcmovb
jl
push
mov
push
ficomps
int
and
arpl
cwtl
jmp
push
out
push
aaa
loop
xchg
xchg
push
aam
xchg
adc
les
mov
js
jl
popa
out
mov
xchg
jle
xchg
ss
xor
rolb
add
hlt
les
stc
mov
loopne
push
lds
leave
mov
mov
out
cmp
out
fimuls
and
add
inc
in
test
add
movsb
push
or
inc
pop
or
jne
es
push
or
mov
int
in
push
test
std
pop
enter
or
int3
push
lods
hlt
mov
insb
sahf
dec
sub
or
jmp
lret
cmpsl
out
aas
sbb
push
dec
fidivrs
daa
push
js
dec
mov
test
out
stc
or
in
dec
lahf
cmp
je
or
cmpsb
sbb
push
sbb
es
mov
arpl
outsb
js
scas
fidivrs
xor
pop
xchg
dec
pushf
adc
adc
dec
sbbl
cwtl
push
addb
inc
fildl
adc
in
mov
test
cmp
inc
mov
push
popa
fldenv
out
pop
pop
jp
and
dec
inc
test
add
and
adc
jmp
ror
mov
jmp
in
and
test
and
jg
scas
scas
jge
xchg
or
out
or
das
or
jge,pn
xchg
add
sub
mov
dec
inc
lret
xor
test
sbb
icebp
mov
loop
xchg
fs
mov
leave
out
out
cmpsl
xchg
or
cmp
ja
imul
out
cld
xorb
sub
and
jp
inc
sbb
xchg
adc
mov
stos
leave
adc
shr
inc
sbb
add
ret
dec
adc
out
pop
dec
mov
dec
es
dec
push
inc
and
and
or
pop
or
lods
push
xchg
rcrl
rorb
add
jno
dec
js
push
add
es
lcall
cmpsb
daa
popa
repnz
add
loope
dec
paddb
jg
outsl
leave
adc
rorb
or
push
add
xchg
adc
add
insl
movsl
dec
movsl
sbb
push
sbb
xchg
ljmp
cmpsb
sub
or
add
data16
sahf
adc
mov
sbb
pop
stos
cmpsl
mov
and
cvtpi2ps
push
imulb
xchg
and
daa
push
mov
push
pop
js
fnstsw
mov
in
jp
loop
nopl
sbbb
mov
and
int
xchg
les
pop
mov
dec
cmpb
mov
cmp
jl
in
jns
xchg
jecxz
inc
vcomiss
movsb
xlat
jmp
sub
fsubr
mov
dec
test
dec
pop
jbe
imul
push
enter
mov
and
or
or
icebp
cwtl
jbe
mov
test
and
sti
int
push
mov
imul
mov
outsb
lret
gs
in
imul
or
or
loopne
lret
popf
repz
cltd
pop
pop
or
call
cmpsb
mov
out
lds
xchg
insb
or
pop
lret
dec
mov
ja
jl
daa
test
inc
in
inc
push
call
sahf
or
fwait
addr16
add
js
pop
loopne
aad
push
in
repz
xor
test
xchg
test
xchg
and
jge
es
xchg
xor
movsb
adc
gs
mov
jbe
pop
inc
cmp
jne
mov
jmp
mov
vmwrite
out
stos
stos
fstl
ds
sub
dec
mov
lock
xor
nop
jecxz
pop
jle
mov
xor
sbb
dec
push
lret
jne
or
add
ja
ficoms
leave
add
or
lock
lock
sbb
xchg
lock
or
or
pushf
sbb
cwtl
loopne
aam
pusha
aaa
sarl
nop
jp
jle
dec
fiadds
ja
pop
out
imul
pop
insb
popa
leave
mov
mov
add
and
mov
test
xchg
in
leave
or
add
add
rcr
mov
js
jne
loopne
dec
testb
stc
push
and
push
pusha
idivl
pusha
xchg
test
faddl
int3
dec
or
ds
nop
iret
pshufw
push
adc
enter
add
add
adc
or
out
testb
popa
mov
in
lds
jne
out
test
jo
fldt
cmpsb
jae
inc
push
xor
mov
out
sbb
sbb
popl
mov
push
mov
mov
jmp
sarl
pop
push
and
dec
pop
popa
and
and
lds
push
dec
mov
mov
jle
jbe
mov
adc
incb
pop
rolb
mov
enter
cmpsb
mov
loope
popf
pop
sbb
sbb
dec
sahf
push
cmpsb
std
sbb
inc
add
xchg
dec
fbstp
lret
sub
into
inc
gs
lret
mov
and
loope
or
movsb
dec
scas
and
es
gs
cmpsb
out
and
es
sbb
dec
xchg
movsb
lds
lret
int
dec
das
std
inc
cwtl
dec
sub
dec
or
or
adc
icebp
pushf
fildll
xchg
cmpsb
test
loop
mov
mov
dec
mov
pop
sbb
cmpsb
push
jge
pop
pushf
push
into
mov
adc
jp
jecxz
mov
or
cmp
loopne
das
hlt
sub
xchg
xchg
cs
dec
mov
mov
cmp
add
push
pop
mov
movsl
out
insb
movb
ret
mov
adc
mov
xor
in
inc
test
jle
mov
cmp
lahf
xor
mov
adc
fldenv
popa
clc
sbb
fnstsw
ljmp
and
std
mov
negb
pop
dec
sahf
bound
cwtl
mov
inc
xlat
sub
imul
sub
jp
out
mov
sahf
or
repnz
and
js
jecxz
push
insl
ret
mov
ret
out
sbb
fisttpll
sbbl
lods
mov
or
xchg
jns
dec
cmp
aaa
pop
and
mov
psllw
ljmp
sbb
mov
mov
pop
aas
fs
cltd
nop
pop
mov
cmp
mov
sahf
rcrb
insl
jbe
xchg
dec
es
xchg
adc
sbb
jg
sbb
jg
sbb
cmp
rorl
loopne
add
mov
hlt
lods
ret
sbb
ret
or
aaa
mov
jle
movsb
popa
xchg
jge
popa
in
cmp
mov
sub
lahf
dec
mov
sbb
or
frstor
sti
aad
sti
pushf
dec
repnz
dec
pop
mov
in
xchg
or
in
mov
fs
sub
fs
jecxz
fisttps
jbe
jle
loope
xchg
scas
pop
mov
je
enter
andl
dec
adc
and
imulb
ja
ds
push
call
fucomp
jmp
sahf
rorl
pop
repz
out
js
lret
pop
and
and
xor
dec
or
hlt
sbb
pop
inc
push
imul
and
adc
inc
inc
icebp
int
sbb
lahf
in
movsb
ret
push
into
shrb
std
dec
mov
adc
jp
pop
lret
out
test
cltd
and
dec
xchg
mov
sub
arpl
sti
stc
and
ja
add
cwtl
jecxz
cmp
stos
mov
fbld
jp
cmova
mov
jmp
lret
jno
mov
je
jbe
gs
roll
popf
push
xchg
jne
aas
push
lahf
push
xlat
pop
sbb
or
dec
cmc
daa
in
sbb
negb
es
lds
adc
mov
into
add
inc
jne
fstpt
sub
pop
mov
mov
aam
daa
fs
shl
pop
or
mov
add
leave
and
outsl
jg
cld
xchg
adc
aad
mov
cwtl
insb
loope
mov
jbe
sub
cmpsb
mov
loop
daa
xor
subps
pop
sahf
call
aad
arpl
enter
push
outsb
repz
mov
add
sahf
incb
lds
xchg
dec
mov
add
mov
stos
xchg
adc
pop
popa
fldcw
fxch
xorb
cli
sub
cmpsb
test
fimuls
scas
movsb
push
rcl
mov
add
push
push
shl
adc
ud2
fimuls
jg
pop
add
adc
dec
hlt
int3
loop
and
pop
sahf
gs
and
sbb
xchg
cmc
aam
push
mov
int3
loop
sahf
leave
out
aas
in
loope
and
pop
loop
sahf
nop
into
cmc
or
sahf
gs
es
pusha
loop
sahf
fstps
mov
mov
int3
sahf
lret
inc
add
out
mov
pop
loop
sahf
cwtl
xchg
cmc
xchg
in
mov
lret
loop
pop
movsl
ficomps
mov
fiaddl
jge
and
sbb
outsb
loope
add
jbe
into
out
push
fisubrl
cmpsb
cli
and
mov
pop
shll
xchg
in
int3
mov
addb
add
lcall
inc
mov
pop
andl
add
jle
pop
pop
std
mov
and
pop
and
cltd
xchg
xor
and
sub
jp
data16
xor
test
out
cmpsb
lcall
add
or
adc
and
cmp
sub
or
sbb
sbb
adc
lahf
inc
inc
inc
insl
xchg
pop
jle
mov
sbb
repz
mov
dec
loopne
popf
stos
xchg
mov
mov
mov
xchg
test
mov
mov
aas
arpl
es
inc
js
movsl
ds
and
out
and
mov
fdivrs
stc
cwtl
sbb
mov
in
loopne
sub
lcall
lds
mov
cmc
mov
enter
hlt
push
aam
mov
push
push
out
cmpsb
xchg
inc
add
test
and
movsb
test
add
jecxz
mov
add
loop
mov
add
loope
mov
add
loopne
mov
incl
fistpll
pop
mov
pop
ds
std
fnstsw
cmp
pop
pushf
jl
cmp
sti
fstpt
sbb
cli
fidivrl
sbb
flds
mov
sbb
fsub
mov
lret
mov
outsb
jbe
stos
pop
popa
push
stc
negb
ret
dec
and
test
leave
xorb
add
aaa
fcomps
and
mov
inc
hlt
imul
mov
sub
sub
inc
mov
push
or
stc
jns
and
inc
mov
jns
in
es
popf
cmp
mov
pop
xlat
testb
jge
repnz
in
fsubl
pop
call
and
cltd
mov
cmp
sbb
jmp
loope
cwtl
inc
inc
sbbl
sub
adc
sbb
popa
mov
fisubrl
in
jno
adc
jge
xchg
cltd
andl
xchg
imul
jne
movsb
loopne
pop
inc
mov
mov
arpl
pop
mov
push
sub
cmc
inc
shll
adc
ss
js
out
jge
sbb
int
jns
stc
jns
or
imul
js
jae
cmp
lret
jp
bound
into
insb
xlat
cmp
lcall
fidivrl
add
idivl
mov
xchg
ds
dec
std
dec
or
cld
mov
adc
scas
inc
mov
shrl
xchg
push
andl
sbb
dec
fdivr
add
ds
jecxz
add
cli
pop
je
mov
nop
retw
add
adc
loopne
cmp
or
pusha
in
arpl
inc
stc
jno
dec
mov
add
fs
jp
xchg
fcompl
jmp
adc
and
xchg
or
rcrb
xchg
cmpsl
fiaddl
xor
mov
xchg
aad
inc
mov
cmp
adc
movsb
and
jecxz
cmp
lcall
js
pop
popf
stc
negb
mov
fcoml
mov
negl
sbb
inc
and
stos
push
sbb
add
or
mov
push
add
cmp
xchg
mov
push
fst
mov
nop
xchg
mulb
cmp
mov
ss
hlt
mov
pop
and
inc
and
mov
test
push
sub
jge
sub
in
bound
stc
sub
mov
int3
in
sub
adc
xchg
xchg
cmp
test
rorb
loop
push
pop
mov
sbb
jno
xor
in
mov
pop
jmp
sbbb
mov
movsl
mov
loopne
jge
iret
int3
mov
pop
mov
lcall
and
insl
jnp
out
lahf
popa
sarl
lea
pop
in
or
cmc
jle
xor
xchg
fwait
sbb
in
jl
cmp
out
and
es
sbb
divb
adc
aad
out
out
mov
lahf
and
cmp
xchg
out
push
enter
int3
out
out
xchg
out
aas
out
pop
mov
out
movsb
jmp
arpl
add
out
in
pop
in
out
cld
subb
pop
push
ss
cmc
aad
xchg
jne
push
xor
xchg
je
push
xor
repz
xor
repnz
xor
icebp
shll
xor
lock
xor
out
iret
scas
outsl
pop
dec
das
pmaxsw
scas
mov
dec
cs
in
int
lea
dec
sub
mov
sub
jmp
stos
mov
dec
sub
ljmp
sub
jmp
pop
dec
sub
call
pop
dec
sub
out
cmpsl
xchg
inc
daa
je
fsubrl
cwtl
jb
jl
pop
jl
sub
or
mov
jnp
push
pop
fistpll
push
pop
loop
lcall
add
and
mov
sbb
roll
xchg
xor
fsubs
lds
js
cmp
sub
sahf
lock
es
stc
cltd
xor
sbb
js
mov
test
sbb
sbb
sbb
pushf
es
push
and
and
lahf
test
test
insl
jge
pop
dec
add
pushf
sbb
jp
movsl
test
cmp
aad
js
jns
cmpsb
lahf
and
cmpsb
mov
push
cwtl
cmp
mov
cmp
jl
pop
dec
cmp
fs
lods
popf
shlb
push
adc
fdivrs
movsb
in
les
mov
test
stos
sbb
lcall
popa
and
sub
shl
aad
and
mov
loop
aad
roll
roll
roll
loopne
dec
cwtl
and
sub
gs
mov
cmpsb
mov
hlt
mov
pop
xor
pop
push
pop
cmp
and
mul
daa
mov
mov
fwait
push
cwtl
pop
jns,pt
cltd
imul
popa
repz
in
sbb
mov
mov
lcall
lcall
fisubs
int
and
movsb
in
out
jbe
sbb
pusha
adc
cmp
push
fisubl
fsub
xor
stos
mov
pop
cmp
jge
popf
stc
lcall
imul
pop
insl
jle
loop
mov
add
fsts
and
xchg
mov
sbb
outsb
ds
mov
adc
imul
sti
mov
xchg
push
pop
addb
xchg
cld
or
and
add
push
outsl
mov
sbb
rorb
es
sbb
lcall
fldt
in
outsl
push
fxch
inc
adc
in
xor
mov
push
rorl
jp
cmp
mov
or
xchg
rorl
xchg
and
sbb
faddl
add
popa
sbb
ficoml
xchg
add
ja
enter
and
and
and
ret
xorb
inc
fbld
xchg
pop
and
or
xor
mov
pop
test
sti
aad
and
nop
sbb
add
xchg
add
mov
or
and
or
xchg
fimull
or
popf
cmp
pop
cmp
mov
mov
and
push
repnz
xor
into
div
aas
in
jbe
mov
xor
and
push
call
xchg
rcll
and
aas
sbb
jge
xchg
and
cmp
jo
in
iret
pop
push
loopne
fsts
pop
nopl
fstps
add
and
int3
cmp
das
sbb
xchg
and
push
or
inc
inc
cmp
sbb
and
pop
jg
cwtl
add
or
out
cltd
cmp
cwtl
cli
mov
push
aaa
and
and
push
push
dec
lds
pop
aad
xlat
cmpsb
cmp
lcall
pushf
cmp
pop
inc
fdivp
pop
xchg
pop
cli
idivb
cmp
fildl
lret
mov
sbb
or
lret
stc
add
push
lret
and
clc
pushf
stc
mov
js
jae
cmpsb
mov
lret
popa
lcall
lahf
pop
in
pushf
out
add
std
out
sti
daa
push
sbb
push
enter
jl
sbb
fnstsw
les
lds
push
arpl
dec
pushf
ret
lds
jp
cwtl
xorb
xchg
mov
fidivrs
fs
test
popf
cld
push
mov
pushf
imul
and
pop
jl
xchg
jb
jne
push
push
bound
lods
lahf
pop
xor
cmpsb
aad
inc
or
out
std
mov
inc
dec
mov
adc
das
movsl
push
mov
cwtd
push
jo
pop
in
sub
popf
push
inc
pop
mov
ljmp
ja
mov
or
jl
cltd
fwait
sbb
pushf
lcall
mov
add
arpl
aam
addr16
pop
or
pusha
fs
push
dec
in
cmc
hlt
jbe
repnz
xchg
pop
pop
in
test
sbb
sahf
int
mov
mov
xchg
js
in
arpl
out
xchg
lcall
push
cmp
and
or
mov
cmp
out
cmc
pmulhw
adc
and
sub
and
sahf
dec
fs
cmpsb
push
sub
mov
mov
pop
fldl
repnz
jle
jmp
das
sahf
and
add
adc
out
loopne
icebp
gs
lahf
and
adc
icebp
sub
cmp
push
push
mov
pushf
cld
sub
inc
sbb
test
aam
inc
adc
or
add
leave
sbb
or
xchg
sbb
add
dec
jo
mov
leave
adc
icebp
popf
aas
pushf
mov
and
fsubl
movsb
les
cmp
stos
popf
into
pop
hlt
lcall
sbb
mov
and
jae
mov
movsb
pushf
mov
enter
inc
sahf
xchg
jne
push
out
pop
lds
push
push
movsb
je
jo
insl
jnp
daa
pop
add
sbb
xchg
xchg
loope
cltd
call
sbbl
shll
das
insl
repnz
aad
cmp
ret
mov
sbb
pop
jp
es
dec
adc
int
stos
and
cmp
sub
fnsetpm(287
or
sbbb
xchg
lcall
mov
cmp
xchg
enter
jmp
push
ret
mov
outsb
xlat
sahf
xor
fisttpll
pop
cmpsb
push
lea
sbb
ret
lea
syscall
stc
int
clc
and
shll
and
mov
push
mov
cmovle
add
push
sahf
adc
arpl
cmpsb
mov
sahf
test
add
movsl
mov
xchg
in
push
jge
out
inc
repz
popf
movsb
add
in
cmpsb
out
add
sbbb
add
int
es
loopne
sti
repz
cltd
popf
and
cmc
and
sbb
push
loopne
pop
out
nop
negb
ds
xchg
push
hlt
hlt
loop
mov
adc
xor
fcoms
dec
repz
and
test
movsl
mov
xchg
add
outsl
mov
jecxz
push
mov
nop
add
jnp
pop
or
daa
mov
dec
ds
pop
scas
mov
inc
pop
cs
in
outsb
push
jns
into
xor
and
and
push
sub
and
shlb
push
cmpsl
xchg
fldcw
mov
lret
jno
mov
rcll
adc
cmpsb
and
notl
add
bnd
mulb
pop
push
pop
add
ss
out
mov
add
outsb
pop
loopne
jo
and
sub
out
push
or
mov
repnz
cld
xchg
lahf
flds
loopne
lods
or
dec
or
movsb
add
xchg
mov
test
xor
xchg
sbb
or
and
pop
inc
add
and
and
es
mov
out
fsubl
sbb
sbb
lcall
sahf
in
and
sahf
push
add
movsb
loop
and
inc
sahf
les
mov
jecxz
mov
bound
mov
push
loop
cmpsl
in
loop
andb
loop
sbb
cmc
sbb
xlat
mov
sahf
loop
jle
pop
cmp
xchg
jno
hlt
int3
sbb
pop
mov
push
add
and
movsb
dec
mov
or
sahf
mov
cmc
or
lea
psrad
adc
xchg
mov
adc
xchg
sahf
xchg
push
cmc
pop
in
repz
in
mov
popf
loop
sahf
mov
and
add
nop
fisubl
popf
pop
inc
aad
cmpsb
jl
aaa
push
lods
in
pop
or
xor
fwait
ss
mov
sbb
adc
sbb
cmpsl
test
jle
je
mov
in
movsl
push
inc
iret
pop
lcall
fisttpl
cmc
mov
test
add
jmp
add
fisubl
cmp
push
loop
sahf
lods
enter
inc
mov
js
es
xchg
xchg
adc
pop
out
out
imul
sahf
and
cmc
and
aaa
nop
jmp
adc
pop
movsl
mov
xchg
fisubs
dec
push
xchg
movsl
sbb
scas
fiadds
mov
pop
push
adc
sbb
add
cmpsb
das
in
ret
push
mov
lea
into
lods
pop
or
or
jo
rcll
outsb
jae
or
push
push
cmp
pop
clc
push
sub
mov
add
push
pop
out
adc
xor
setg
daa
std
inc
inc
sbb
dec
or
ds
mov
incb
jbe
jl
pushl
inc
sbb
xchg
ficoms
imul
jae
cmpsl
test
repnz
pop
pop
stos
enter
negb
inc
rorl
push
adc
inc
test
sbb
pop
sub
hlt
gs
push
push
adc
stos
mov
test
notb
pop
in
push
jge
fiadds
mov
mov
mov
imul
push
aam
daa
or
pop
repnz
pushf
jb
inc
cli
gs
addr16
pop
or
jnp
out
stos
cmp
je
test
das
pop
rorb
pop
imul
popf
in
mov
pop
and
out
sbb
mov
push
cmpsl
aas
clc
xchg
sub
sbb
or
fistpl
jne
pop
in
push
pop
jp
lret
xor
call
ret
ret
and
pop
pop
push
push
stc
cltd
xor
test
push
inc
xchg
das
dec
sub
into
addr16
inc
cmp
popf
mov
dec
xchg
je
in
stos
aam
mov
insl
movsb
xor
cmp
xchg
incl
jno
lock
dec
lret
mov
xlat
jae
jl
out
push
lock
cmp
sub
inc
jne
dec
aam
test
jb
out
inc
leave
aaa
adc
or
pop
repnz
imul
pop
mov
pushf
cmp
adc
filds
pop
xlat
mov
xchg
lahf
pop
add
in
and
ds
or
sub
mov
sbb
ret
lock
or
dec
xchg
jle
pop
inc
push
repz
stos
popa
filds
clc
mov
dec
std
adc
ss
lret
lahf
jb
pop
shlb
lret
add
xor
xor
cmp
mov
push
dec
mov
pop
xor
dec
into
ja
cmpsl
or
push
sub
fildl
cmp
lahf
das
sbb
pop
mov
xor
ja
fwait
dec
xor
int3
push
cmpsb
imul
cmp
pop
and
and
call
js
cmpsb
jg
push
bound
push
out
and
cmpsb
loop
rcrb
add
lahf
xchg
test
sbb
loop
pop
fdivrs
fbld
sbb
loopne
xorl
loop
popa
pop
add
and
mov
cs
std
cli
pop
add
or
and
or
pop
mov
mov
xchg
and
sbb
cwtl
notl
dec
adcb
mov
andl
mov
xor
scas
jle
mov
cmpsl
pop
call
enterw
inc
cmp
mov
stc
clc
mov
cli
cltd
lock
jg
ja
inc
jo
mov
arpl
add
mov
cmpsb
clc
sahf
outsl
cmp
roll
sbb
ss
and
cmpb
inc
jge
cmp
mov
mov
mov
shufps
mov
and
decl
clc
mov
or
xchg
xchg
rclb
mov
stos
sub
xor
pusha
test
xor
rorb
inc
in
mov
jg
pop
sub
enter
std
pop
ja
jbe
hlt
inc
jno
adc
mov
mov
scas
or
push
or
or
mov
mov
or
mov
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
xchg
xchg
xchg
lcall
in
sub
dec
mov
adc
mov
or
push
aaa
and
jns
add
push
cli
rcrb
dec
push
hlt
psadbw
int
inc
or
arpl
mov
jg
pop
scas
aas
sub
sub
inc
cmp
push
stos
sub
push
and
sub
mov
sub
sti
sub
pop
sub
push
sub
adc
int
in
sub
mov
dec
mov
mov
mov
je
or
mov
cmpsb
sahf
sub
icebp
movl
ds
sub
or
mov
mov
mov
scas
ja
push
pop
js
je
jo
addl
lret
jns
mov
mov
or
or
mov
popf
mov
push
std
imull
mov
mov
aam
pop
jne
repz
out
ds
cmp
push
xorb
push
inc
push
gs
add
lahf
or
pop
mov
add
sahf
xor
jae
pop
dec
out
push
jmp
cmp
mov
out
or
loopne
ret
pop
jns
je
push
xchg
sub
mov
cmc
push
jno
lods
xor
and
scas
out
pcmpgtw
inc
fcompl
push
xor
inc
and
mov
mov
mov
scas
insl
int3
and
push
pop
push
stc
in
adc
data16
orl
aam
mov
or
out
out
out
out
out
out
out
out
or
jecxz
ret
xlat
jg
mov
push
ficompl
dec
push
push
mov
rcll
push
push
push
in
push
dec
mov
faddl
push
xor
mov
mov
scas
cmp
in
sub
jmp
ljmp
xchg
xchg
xchg
xchg
xchg
xchg
mov
jmp
dec
xchg
sub
inc
pop
push
std
push
and
sub
and
jp
fldcw
ss
adc
leave
scas
addl
mov
mov
mov
scas
push
lods
xor
paddsw
addr16
arpl
fsubrp
mov
xchg
xchg
xchg
mov
sbb
mov
out
das
not
push
adc
push
outsb
push
in
push
jmp
jmp
mov
xlat
push
jbe
aad
adc
cmp
std
sbbl
arpl
xor
inc
push
pusha
ret
add
sub
xlat
or
lcall
rcrb
xor
ss
mov
cmp
iret
lods
cwtl
or
movsb
filds
mov
inc
aam
xlat
ficoms
sbb
push
ja
jbe
xor
push
outsl
sti
pusha
pop
fistpll
mov
dec
cmp
cmp
mov
xchg
xchg
adc
fxch
hlt
aam
mov
ja
sti
or
aas
call
pop
inc
push
fsubrl
push
cmc
xchg
xor
sub
ficompl
add
repz
xchg
inc
sub
xlat
fsts
xchg
orb
pusha
inc
inc
popf
ds
pop
ss
rorl
cmp
mov
mov
sbb
pop
jae
lock
xor
mov
in
and
out
or
mov
repnz
pop
pusha
fwait
mov
push
pop
ds
cmp
cmp
mov
push
lods
mov
test
test
or
loopne
mov
cmc
mov
or
pop
mov
mov
xor
xor
inc
in
xor
data16
dec
arpl
ret
xor
cs
sub
jb
or
lods
jle
mov
cli
mov
shrb
int
ss
inc
pushf
movsl
lahf
loope
sbb
sub
sbb
xlat
xchg
pop
fsubs
sbb
pushf
sbb
pop
xchg
push
adc
push
mov
push
mov
sbb
mov
or
xchg
adc
jne
in
mov
and
mov
inc
pop
xor
addl
outsl
cmp
push
push
rcr
mov
stc
subb
push
pusha
in
in
add
pop
gs
rolb
pop
and
fcompl
or
jae
cmp
pop
pushf
push
adc
mov
aas
mov
push
aas
xchg
aas
sarb
xor
imul
aas
dec
aas
test
cmpsl
gs
pop
lds
aad
dec
xchg
mov
movsb
jge
push
push
mov
roll
sbb
xchg
loopne
jae
inc
add
mov
sbbb
in
adc
mov
mov
ds
cmp
add
cmp
cmp
loop
xchg
sbb
jmp
fdivrs
cwtl
mov
int3
mov
add
aas
aad
sub
inc
sbb
jle
and
testl
fistpl
sbb
mov
mov
and
mov
mov
scas
xchg
dec
jmp
lds
mov
cld
mov
incl
loope
push
xlat
into
xchg
in
push
int3
fucom
add
cmc
ljmp
leave
gs
jmp
adc
lock
xchg
std
and
mov
repz
push
jg
popa
adc
xchg
in
aam
mov
aam
xor
push
stos
mov
ret
mov
in
jmp
fstpl
lds
xor
push
orl
andb
push
sbb
fdivs
cwtl
cmpsl
mov
aad
mov
or
jo
loop
or
jno
mov
in
mov
unpckhps
movsl
fucomip
mov
gs
sahf
push
sbb
std
jns
or
lcall
adc
and
and
mov
std
bound
jne
sbb
mov
adc
push
lea
aad
in
mov
inc
fcmovnu
xor
int
incb
fwait
mov
aam
notb
loop
and
and
push
mov
sub
add
inc
andl
jge
mov
xor
xor
push
xchg
cmp
mov
and
xchg
xchg
stc
mov
xor
in
sub
mov
mov
scas
sahf
lods
push
lret
push
rcrl
xchg
mov
aas
push
std
arpl
xor
fdivs
divl
aaa
xor
adc
bound
xchg
sub
push
xor
test
pusha
inc
pop
test
ret
mov
mov
mov
int3
or
and
arpl
pop
mov
or
jge
js
in
bsf
mov
lahf
cmp
fwait
ss
ss
sbb
cwtl
push
sbb
push
or
push
aam
xor
aas
repnz
xor
shlb
jo
scas
xor
xor
inc
or
or
inc
cwtl
and
push
add
mov
and
jmp
lahf
fidivrs
add
xchg
sub
insl
aas
fsubrs
stc
fsubs
adc
add
in
out
ljmp
add
add
in
cmpsb
mov
enter
and
lret
mov
push
cmpsb
loope
xor
das
lods
scas
stos
cs
test
test
test
test
in
and
das
and
fisttps
in
loope
pop
sbb
aas
jecxz
and
sbb
and
xchg
dec
push
add
sub
adc
add
mov
xchg
mov
jae
les
mov
es
and
fwait
or
mov
xchg
addr16
mov
push
push
and
mov
in
bswap
push
push
push
jmp
in
push
in
sbb
push
ljmp
or
cmpsb
es
and
mov
sbb
mov
push
or
push
xchg
lds
and
xchg
and
xchg
mov
push
adc
inc
push
xchg
sub
adc
rclb
out
out
out
and
aas
lea
mov
mov
mov
mov
mov
xchg
into
mov
cli
outsl
test
out
aas
popf
mov
mov
cwtl
cmpsl
xchg
test
mov
nop
xchg
stos
fs
mov
scas
xchg
lods
adc
push
out
and
cwtl
iret
mov
or
mov
xchg
mov
or
mov
or
push
push
es
cmc
push
xor
mov
sub
and
mov
sbb
out
out
out
fwait
sbb
cltd
out
out
and
pop
aas
sahf
fwait
roll
ja
jge
sahf
jle
out
xchg
fbld
mov
movsb
cwtl
jp
sbbl
out
pop
xchg
nop
or
lcall
orl
imul
cmp
movsb
inc
sbb
mov
js
popa
incb
jle
loop
xchg
cmpsb
nop
lods
dec
mov
jo
sarl
adc
popl
insl
or
mov
lock
jmp
imul
cmp
ficompl
sahf
imul
mov
sub
mull
jo
sbb
sub
push
mov
mov
clc
sysret
dec
sub
jno
and
mov
loope
push
cs
pop
mov
mov
call
pop
xchg
or
jle
sbb
cmp
pop
add
imul
cmp
popa
pop
xchg
lods
mov
ret
in
fsubrl
movsb
jg
cmc
pusha
shlb
add
fdivr
in
mov
or
mov
mov
adc
int3
mov
mov
push
mov
mov
cltd
mov
mov
nop
push
add
stc
stos
ret
lahf
xorl
ret
fs
sahf
push
inc
stos
pop
sbb
cmp
cmp
into
or
inc
push
sbb
mov
adc
incb
inc
repnz
sbb
aaa
sub
fistpll
inc
pushf
faddl
loop
mov
inc
or
dec
test
rolb
int3
stc
add
xchg
outsl
icebp
mov
cmp
rol
test
fcompl
jae
xchg
dec
adcb
popa
call
xchg
push
pop
lahf
add
dec
dec
jp
cmp
jb
in
cltd
xor
mov
sarl
adc
push
loop
mov
sbbl
cmp
jl
jg
jle
std
mov
outsl
enter
pop
pop
jge
inc
jns
cmc
fidivs
pop
and
add
jnp
iret
negl
sbb
loope
and
popf
dec
pop
fcomps
dec
cwtd
and
lcall
jge
popf
add
idivl
in
popa
mov
into
lahf
inc
xchg
xchg
divb
add
pop
mov
ret
mov
and
sub
ljmp
and
pop
rol
and
and
cmpsb
loopne
and
jg
and
sub
mov
cwtl
aam
or
adc
stos
cmc
insb
stos
enter
mov
jno
cltd
or
push
and
ljmp
gs
rcll
lods
rorl
fistpll
inc
nop
loopne
fdivrl
fsubrp
or
pop
loopne
pop
gs
loopne
pushf
or
cltd
repz
cmpb
vpshad
test
subl
dec
xchg
fcmovnu
add
inc
xor
mov
movsb
loop
shlb
push
and
and
movsb
and
shl
loopne
movsb
mov
insb
mov
adc
sbb
xlat
loopne
cli
mov
mov
cs
shl
sbb
xchg
mov
stc
icebp
jbe
mov
lds
adc
sbb
xorl
cmp
inc
jne
shrl
idivl
push
mov
inc
or
int3
arpl
sti
stc
loopne
xlat
jge
mov
jle
lahf
or
repnz
sbb
sti
lock
mov
inc
xchg
ret
cld
sahf
adc
add
push
xor
sub
xor
inc
pop
inc
popa
and
mov
lcall
in
jge
pop
pop
sbb
mov
xlat
std
dec
lcall
repnz
and
xor
clc
hlt
cld
enter
orb
mov
push
cmp
aam
xchg
cs
fistpl
sbb
sbb
or
loope
xchg
pmulhw
or
pop
or
jge
popf
sbb
fstpl
mov
cltd
fstl
dec
cmp
jo
mov
pushf
ljmp
mov
imul
mov
pop
dec
jl
popf
inc
movsb
rcr
adc
mov
push
sub
mov
push
xchg
repz
clc
and
cmc
loopne
sbb
sbb
push
inc
scas
mov
push
adc
cmp
nop
call
rcrb
adc
adc
lahf
fisubs
lcall
push
popa
jb
sbb
mov
sti
ficomps
jp
or
mov
into
xor
cltd
mov
les
adc
adc
push
cld
std
sahf
jne
push
dec
jp
pop
jle
stc
sbb
pop
adc
mov
sbb
test
xor
sti
pushf
jmp
fistps
xchg
fwait
mov
stc
shrl
jp
stc
jo
push
mov
jge
mov
and
xor
icebp
rcl
and
push
xchg
add
fdivl
pop
mov
add
loope
pop
and
inc
fwait
mov
push
pop
loope
xchg
rcrb
inc
subl
inc
testl
mov
add
loopne
xor
and
and
orb
sbb
inc
mov
xor
mov
add
shlb
arpl
clc
dec
int3
sbb
xchg
icebp
pop
fistpll
pop
xlat
les
loop
imul
xchg
dec
subb
jae
test
in
div
dec
ja
sub
das
add
icebp
nopl
popa
jp
rcrl
ds
cltd
mov
fdivr
test
inc
jp
mov
cmp
dec
fstl
loop
push
lret
jecxz
cmpsl
and
mov
ficoml
inc
into
add
sub
add
cwtl
add
rcr
out
movsb
mov
or
sbb
cmp
cmp
mov
out
inc
and
out
add
popa
or
rcr
xlat
iret
int3
or
mulb
xlat
daa
rolb
cmp
mov
das
in
sbbl
sti
mov
loope
sbb
into
lret
xor
je
mov
movsl
add
aaa
xchg
jne
sti
testl
dec
mov
bound
leave
cwtl
bound
in
and
add
add
decl
popa
rclb
and
cmp
push
mov
inc
inc
dec
sbbl
pop
ret
lods
add
mov
mov
popa
pusha
jb
and
rclb
cmpsb
pop
fs
xchg
push
std
lds
andb
mov
mov
xchg
jle
in
jle
cltd
ds
pushf
and
push
incb
push
scas
sub
repnz
xchg
push
add
mov
ficompl
and
leave
in
push
das
js
adc
fsubs
and
mov
or
stos
daa
aas
jae
inc
dec
jmp
shll
add
in
xchg
jne
sbb
lret
rcll
call
filds
pop
add
adc
xor
enter
push
int3
and
enter
into
sti
mov
mov
sbbl
cmc
mov
mov
mov
push
adc
js
popa
daa
inc
push
notl
mov
mov
in
lcall
add
fwait
pusha
out
dec
sbb
decb
arpl
rcrb
cmp
lods
and
cld
mov
cli
dec
ja
inc
fists
dec
and
imull
ret
lcall
popf
and
mov
inc
sbb
js
sub
inc
int3
outsb
or
aaa
pop
mov
adc
push
outsb
int
inc
jno
fs
cltd
lret
xchg
cmp
ffree
xor
xchg
jae
push
adc
inc
repnz
mull
mov
push
cmpl
mov
sbb
jecxz
sub
aaa
adc
repnz
ja
lods
sbb
pop
mov
xchg
mov
fdivrp
push
popa
cmp
xor
lcall
lahf
mov
xor
loope
aad
cwtl
lahf
mov
xchg
out
fadd
mov
inc
pop
xchg
pushf
int3
cs
xor
mov
stos
xchg
push
push
xchg
cmpl
sbbl
inc
aam
sub
inc
dec
and
sbb
xchg
xor
fildl
cs
add
and
mov
rorl
outsb
mov
ljmp
and
mov
data16
cmp
and
mov
stos
sbb
mov
in
ja
mov
mov
and
xlat
sbb
sbb
faddl
mov
mov
jb
mov
sbb
jnp
test
pop
mov
cltd
add
cs
pushl
mov
lcall
push
dec
push
jb
movsb
jg
fstps
add
xchg
enter
inc
repz
mov
repz
add
jp
pop
inc
loop
xor
shrb
stos
lods
sbb
loopew
icebp
mov
sbb
sbb
or
pop
and
add
dec
jbe
flds
mov
add
xor
daa
hlt
lahf
mov
add
rcrl
mov
pusha
jmp
lds
pop
cwtl
popf
iret
ds
add
fistpl
insl
cmp
sarl
adc
inc
fdivrs
pop
fsubp
pop
loop
and
fdivs
xchg
mov
mov
add
add
test
xorb
inc
daa
push
ljmp
inc
jmp
mov
aam
fmuls
cmc
popf
movsb
mov
jecxz
lret
dec
loopne
test
mov
arpl
lock
mov
jb
fdivrl
adcb
in
xchg
out
dec
sbbb
jp
xchg
popa
repnz
sbb
pop
fdivrs
and
lea
or
in
mov
bound
mov
hlt
rclb
add
ss
loopne
rcl
jne
sub
enter
mov
fidivrs
cld
pop
or
sbb
adcb
and
mov
xchg
sub
add
and
jnp
mov
cld
push
and
xchg
mov
pop
pop
mov
in
xchg
sar
push
dec
lock
mov
jle
inc
mov
std
inc
cltd
sahf
mov
mov
mov
sbb
jb
and
pop
push
fidivs
sub
mov
mov
or
push
hlt
or
xchg
shrd
and
ret
clc
in
mov
sub
xor
adc
aas
outsb
insl
mov
jbe
and
and
jb
jno
js
fsubs
pusha
add
lahf
div
loopne
aad
fcomps
mov
imul
pop
jg
jmp
push
and
outsl
jno
je
xlat
ja
repz
push
sub
clc
add
pop
add
and
rol
inc
cmpsl
jl
sbb
adc
and
je
and
jp
cwtl
xchg
xor
xchg
jb
pop
lcall
loopne
jae
sarb
inc
xor
mov
out
std
mov
repnz
dec
mov
imulb
xor
mov
into
adcb
daa
inc
pop
mov
sub
fimull
lods
push
xorb
jb
movsb
pushf
cmpsl
inc
popf
sbb
movsb
jmp
xor
jle
jmp
mov
sbb
jno
inc
shlb
in
stos
mov
cmpsl
popa
nop
lods
sub
test
enter
mov
fildll
popa
jle
lahf
popa
shlb
leave
nop
sarb
sbb
dec
push
inc
cmp
inc
pop
daa
in
jle
rolb
es
inc
mov
ror
mov
dec
stc
inc
jb
stos
sbb
xchg
je
rep
mov
pusha
pop
mov
aam
xchg
cwtl
jnp
imul
jo
dec
xlat
push
cwtl
in
popf
add
data16
jae
and
fsubrl
mov
cltd
rcrl
pop
and
add
decl
cwtl
and
push
arpl
push
cmp
jg
push
jae
in
ds
daa
jb
dec
dec
mov
fucomp
xor
imul
cmc
push
mov
cmp
inc
lret
enter
jl
ficompl
inc
aam
or
pop
cwtl
and
out
subl
and
cwtl
imul
shrl
adc
pusha
xor
sarl
xchg
sbb
jo
aam
orl
fnstcw
daa
lods
enter
adc
das
outsb
scas
in
stos
out
sti
fldt
mov
pop
pop
xor
jne
test
clc
or
test
pop
loopne
shrb
adc
jae
sbb
and
gs
jmp
xor
push
mov
mov
stos
push
adc
push
addl
push
incl
mov
pop
mov
icebp
aas
sbbl
outsl
fldz
aaa
mov
lods
mov
int
inc
in
mov
icebp
cltd
dec
dec
jae
call
inc
add
mov
repnz
jmp
sbb
les
push
jnp,pt
lahf
lahf
cmpsb
jno
cltd
push
mov
xchg
mov
adc
and
mov
jb
ss
mov
cmpsb
add
sub
testb
loopne
aas
mov
push
xor
jbe
xor
test
inc
and
leave
mov
jo
add
cld
inc
lahf
add
addr16
and
aas
inc
adc
mov
inc
fs
pop
jle
lret
xchg
call
mov
fwait
pushf
repnz
mov
cld
ja
out
loop
loop
sbbb
bswap
std
xor
sbb
cmp
addb
sbb
and
cmp
pslld
mov
sbb
jmp
mov
sub
xchg
mov
fcomps
ret
jae
push
add
cs
push
mov
cmp
xor
inc
call
std
pop
mov
dec
mov
xchg
xchg
cwtl
in
pop
xchg
int3
fwait
nop
fmull
lahf
dec
insl
jns
jae
lea
dec
push
shll
push
mull
stc
push
mov
fcoml
insb
mov
sbb
mov
lret
nop
lods
adcb
das
mov
jbe
int
pop
js
loopne
mov
and
mov
mov
loopne
notrack
lcall
sbb
push
xchg
dec
insl
in
and
das
mov
xor
jae
jae
xlat
jns
aam
lods
pop
dec
mov
add
je
pushf
sub
insl
add
push
or
mov
in
filds
adc
pop
pop
test
pop
xchg
ret
pusha
in
call
int3
mov
jno
mov
jo
sbb
popf
addr16
add
pop
jns
ret
subb
push
outsl
mov
push
add
inc
jmp
xchg
jmp
je
dec
sub
xor
std
mov
daa
jmp
add
inc
lcall
movsb
dec
es
xor
ljmp
rcrl
inc
sub
and
pop
push
cmp
imul
add
inc
dec
xorb
int3
data16
xchg
call
pop
ja
hlt
dec
icebp
xlat
call
mov
xor
inc
adc
out
mov
mov
lods
push
stc
sub
sub
inc
test
push
sbb
lods
subb
xchg
and
dec
xchg
mov
mov
dec
cmp
pop
xchg
fucomip
cmpl
sbb
and
idivl
push
push
imul
pushf
jg
inc
jnp
fists
or
dec
mov
dec
mov
fcoms
leave
insb
and
xchg
or
jo
ja
das
popa
jae
repnz
mov
out
fwait
rorl
int
xchg
int
sbb
nop
cmpsl
ror
mov
dec
cwtl
ss
in
pop
incl
jo
pop
enter
aam
scas
lods
rcl
and
mov
cmp
cmp
pop
sub
jmp
mov
jae
sbb
fstpt
and
out
pop
gs
inc
pop
jp
mov
mov
pop
in
faddl
push
lds
aaa
sub
mov
nop
scas
dec
fiaddl
scas
sub
sahf
aas
inc
mov
ja
pop
pop
fidivrs
xchg
sbb
pop
mov
out
test
lds
std
add
pushf
cmp
mov
sbb
fcompl
and
fdivrs
cld
arpl
adc
pop
jl
pop
inc
cwtl
xchg
lahf
pop
cld
pop
push
jge
pop
js
pushf
pop
test
cltd
popf
xchg
mov
std
out
cwtl
mov
inc
sti
fildl
mov
shrl
push
fsubl
idivl
rcr
sahf
jnp
insb
ds
sbb
ljmp
jns
cmp
mov
scas
ds
cmc
fcmovu
aam
and
lahf
inc
loopne
mov
fdivr
jge
sarb
call
pop
jl
rcrb
sub
pop
pop
clc
fdivrs
pusha
ds
fld
sahf
cmp
jge
mov
xchg
xchg
fstp
cmp
jg
mov
data16
adc
mov
xlat
cmp
fsincos
mov
cmovo
pop
mov
sbb
inc
fcomi
js
pop
cmp
xor
sbb
and
std
cltd
xlat
sbb
xchg
cld
rcrl
inc
pushf
sarb
idivl
mov
push
movsb
sbb
mov
cmp
sbb
and
add
rcll
clc
sarb
es
push
add
sbb
pop
cmp
add
cltd
pop
sbb
popf
cld
mov
adc
jae
shll
jns
mov
pop
cmp
sbb
pop
popf
mov
mov
jp
loopne
mov
mov
and
and
movl
mov
adc
movsb
mov
sbbb
popf
inc
inc
mov
xor
jnp
pop
pop
jge
rcrl
pop
and
jle
sbb
sbb
lcall
std
xor
adc
mov
lea
fstps
cmp
clc
cltd
fistpl
inc
and
data16
sbb
sub
lcall
mov
int3
sbb
js
fstps
shlb
push
sahf
fildl
jp
sbb
aam
inc
push
pop
mov
sar
sbb
sbb
idivl
ficoml
inc
sbb
scas
cwtl
mov
fstps
lcall
out
fneni(8087
inc
fnstsw
stos
or
fdivr
pop
sbb
mov
rcr
and
fsub
test
lea
sti
in
mov
jp
push
inc
fwait
pop
fwait
sbb
dec
pushf
xchg
cmp
xchg
inc
sbb
mov
sbb
sbb
scas
inc
or
and
sbb
lcall
pop
fistpl
sbb
popf
idivl
std
sbb
mov
jle
dec
inc
xor
fwait
push
jle
mov
jl
int
jge
movsb
mov
mov
mov
sahf
std
and
in
fisttpll
and
pop
js
packsswb
std
sbb
cltd
cmp
adc
mov
dec
lods
push
lds
jle
pop
dec
neg
stc
jge
pop
js
push
pushl
fnstcw
xor
adc
and
cli
and
mov
and
pusha
pop
fcompl
cltd
jns
pop
adc
mov
pop
repnz
cmp
pusha
ds
and
and
inc
add
add
jl
mov
mov
fsubr
out
and
sbb
cmc
inc
cmp
xlat
idivb
lret
nop
pop
add
sub
and
leave
scas
inc
sbb
xchg
leave
out
fnstsw
sar
cmp
cli
insl
jmp
sbb
flds
pop
cmp
push
rolb
mov
jno
pop
inc
mov
pop
mull
pop
and
std
add
xchg
mov
fcomps
mov
sbb
out
pushf
pop
jge
js
cmp
sbb
insb
popf
add
sbb
fisubrl
loop
lcall
mov
lcall
clc
adc
mov
arpl
fidivl
gs
std
cwtl
fsubl
mov
das
mov
mov
sbb
loop
mov
ficompl
test
pop
cmp
scas
daa
xchg
jle
sub
xlat
clc
in
dec
add
js
mov
lret
sbb
arpl
pop
and
adc
out
les
inc
cltd
nop
imull
andb
sbb
fldenv
jge
stos
testl
sti
mov
jge
cwtl
mov
sbb
and
push
lahf
jle
xchg
rcrl
cld
pop
fdivrs
mov
imul
jge
cmc
adc
xchg
ficompl
rcl
ljmp
cwtl
enter
mov
mov
ljmp
or
mov
mov
testl
xlat
push
cmp
fsubs
fwait
sahf
mov
xchg
mov
pop
jp
lcall
dec
mov
xchg
push
pop
cld
jle
daa
stos
fcomps
mov
loopne
and
nop
negl
mov
cmp
mov
cld
and
push
loopne
pop
push
inc
roll
add
fsubl
jg
pop
add
mov
mov
jp
mov
pop
ficomps
into
pop
ss
or
adc
sahf
mov
mov
pusha
ds
cmp
mov
xchg
loopne
cmp
cld
cs
nop
pop
idiv
fdivrl
cwtl
mov
add
cmc
ds
adc
sti
arpl
xor
jo
mov
pop
push
add
jno
call
ficompl
pop
mov
xchg
pop
mov
mov
jns
jl
push
fisubs
jle
fadds
lods
xchg
xchg
cmpsb
scas
mov
call
sbb
cld
notrack
filds
test
aad
sub
pop
sti
mov
xor
cli
and
xchg
push
push
push
loop
pushf
clc
sbb
pop
jbe
cmpb
leave
fsubs
dec
sbb
incb
and
incb
negb
jp
rcrl
shlb
loopne
pop
cmp
sti
add
insb
ficoml
xchg
cwtl
mov
pop
jge
popf
sbb
mov
sbb
adc
pop
jle
cmp
fisubs
arpl
add
xlat
fstpl
loop
or
pop
aad
scas
jmp
and
pop
pop
ficompl
mov
cli
rorb
fildl
and
popf
xorl
cmp
and
cld
aam
mov
cmp
leave
push
adc
pop
adc
fistpl
cmp
sti
pop
pop
call
mov
loope
cli
rcrb
fwait
std
xor
test
cli
xchg
lea
mov
pop
gs
outsb
sbb
cvttps2pi
jns
xchg
mov
push
cmp
mov
ljmp
mov
inc
cmp
and
mov
out
and
stos
les
cltd
cwtl
arpl
inc
pop
cwtl
into
add
testl
adc
push
sbb
and
cmp
testl
sub
pushf
cwtl
fsts
sub
clc
mov
pop
xor
pop
std
ds
or
bound
mov
dec
and
pop
cmp
js
push
clc
shl
xchg
pop
sbb
sbb
popf
push
std
mov
mov
jge
sbb
jbe
outsb
addr16
sbb
sarl
jnp
js
sbb
add
loopne
fstp
out
pop
cmp
insl
adc
cld
pushf
stc
xchg
cmc
into
test
sbb
inc
mov
sbb
cmpsl
std
test
xchg
int3
cmpl
mov
sbbl
fimull
mov
xorl
mov
ficomps
sbb
pop
and
adc
and
add
cwtl
popf
sbbb
lods
adc
jmp
inc
clc
jp
xchg
roll
cltd
mov
sbbl
mov
out
std
and
cwtl
sbb
lods
mov
sar
add
cmpsb
mov
xchg
jl
or
push
cltd
cli
xlat
ds
sbb
notl
jne
into
jp
into
sahf
punpcklbw
mov
loopne
shlb
fcmovb
nop
in
arpl
les
popa
cmp
lea
mov
inc
cmc
pop
rcl
pop
bound
adc
push
andl
mov
adc
xchg
lcall
cmp
dec
sbb
fistpl
mov
dec
comiss
sbb
stc
mov
add
pop
sar
sbb
insl
movsb
pushl
xchg
push
test
mov
clc
sub
pop
jge
jns
fsubrl
xlat
jmp
cwtl
paddusb
cmp
push
push
aaa
stc
lret
mov
fs
arpl
lds
sti
push
pop
xor
and
loop
adc
sbb
rcrb
pusha
ss
std
pop
xchg
inc
mov
pop
xlat
mov
adc
sar
out
pusha
cmp
and
sub
fnstcw
cmp
std
pushf
fstpl
jecxz
popf
pop
imul
int3
dec
ds
insb
loopne
sbb
cmp
pushf
roll
jbe
stc
add
outsb
sub
aam
jns
adc
imul
mov
pop
pop
ds
pop
lcall
ficompl
xchg
jnp
out
dec
js
dec
not
ficomps
iret
arpl
popf
mov
sbb
and
popf
pop
nop
mov
gs
sbb
xlat
cmp
mov
fcompl
mov
xlat
popa
fisttpl
mov
cmp
bswap
fldl
and
fsubs
cld
push
push
call
ds
cmp
pusha
dec
ds
xor
sahf
fimull
cmc
out
comiss
sub
mov
mov
add
and
dec
ficoms
push
scas
loope
clc
mov
lcall
jns
sbbl
mov
add
out
mov
add
cmp
and
pusha
test
push
fdivp
gs
sti
stc
inc
clc
negl
jbe
fnstsw
fildl
mov
adc
xlat
jbe
sbb
cmp
mov
mov
mov
pop
cli
mov
repz
mov
rolb
pop
cmp
pop
mov
scas
pushf
test
aad
mov
lret
fcoms
repz
jl
and
inc
cld
mov
inc
stos
add
cwtl
ja
and
cmp
pushf
gs
pusha
jns
rolb
mov
mov
rolb
jp
cmc
pop
pop
cli
cmp
mov
negb
pop
loopne
fsubl
push
sti
sbb
gs
ret
sbb
loopne
jmp
movsl
nop
cmp
mov
mov
popf
leave
and
push
lcall
mov
into
mov
stc
fimull
inc
insb
pop
add
jp
pop
cmp
pop
pop
mov
pop
negl
fnstcw
out
pop
sub
sahf
mov
lcall
mov
fistpll
xchg
lcall
loopne
mov
incb
add
mov
fdivrs
add
hlt
inc
js
or
aaa
push
push
jns
cwtl
inc
loopne
roll
and
jns
xchg
xchg
add
fidivl
fcompl
jmp
pop
and
pushf
loopne
dec
pop
mov
mov
and
pusha
aas
inc
fmull
adc
and
notl
xor
sub
sahf
lcall
repnz
popf
mov
fdivrs
sbbb
int
call
pop
lock
fstpl
or
push
sti
pop
mov
cmp
or
push
loope
xchg
sbb
out
pop
pop
and
outsb
cmp
ficompl
xor
push
sahf
fsincos
or
les
and
xor
push
lahf
xchg
cld
fcmovb
fcmovnu
inc
stc
into
pop
mov
rclb
ja
adc
mov
int
cmp
idivl
call
mov
ss
ds
add
push
sbb
push
adc
in
mov
stos
cmp
cli
adc
adc
pusha
adc
mov
je
ficoml
popf
stc
jns
js
push
cwtl
out
shll
jge
dec
rcrb
loope
les
gs
cmp
mov
mov
mov
mov
push
sbb
inc
lcall
sub
inc
jge
mov
add
mov
sbb
in
pushl
cmp
fdiv
xchg
cmp
nop
mov
adc
arpl
jge
addr16
xchg
sbb
in
rcr
add
sbb
lock
cmp
insl
decb
jmp
ret
popf
fisubl
jp
xor
fcomps
lods
fldenv
pusha
andb
and
inc
lcall
cli
cmp
and
in
sarl
jge
fdivrp
lcall
fistl
into
sub
or
push
cmpb
jecxz
ficompl
lcall
cs
pop
sarl
js
aam
mov
testl
pop
lret
sarb
add
mov
jle
in
sbb
jp
mov
sbb
inc
pop
and
lcall
cld
and
fwait
cmp
inc
mov
fidivrs
jl
clc
sbb
jmp
adc
jnp
sahf
pop
pusha
pop
push
jge
inc
pop
sbb
jns
dec
dec
and
xor
pop
cmp
popf
jmp
lcall
jg
fildl
call
sbb
mov
outsb
add
mov
jp
jp
inc
cmp
dec
call
inc
pusha
inc
ss
fcmovnu
cli
js
int3
lret
mov
fsts
fcompl
popf
testl
divb
xchg
push
cmp
sti
fstpl
pusha
xchg
xorb
cmc
ljmp
xor
inc
fisubl
pop
std
leave
push
decl
mov
xchg
pop
adc
popa
inc
pushf
repnz
jp
push
js
fisubl
inc
sbb
sbb
shll
xchg
pop
push
loopne
cli
add
and
mov
les
pop
lcall
movsb
sbb
sbb
xchg
setge
adc
aas
sarl
and
mov
sbb
adc
and
lds
sbb
add
xlat
mov
mov
cmp
pusha
adc
cld
jns
fs
pop
pop
out
pop
cmp
jg
popf
cli
xchg
jp
inc
jl
gs
aad
mov
jbe
loopne
mov
fdivrs
and
loope
faddl
dec
lcall
mov
jns
jg
pop
cmpsb
sti
lcall
inc
pusha
and
mov
loop
sbb
bound
inc
adc
jge
cmp
push
sbb
push
pop
testl
out
cmp
adc
in
orb
out
mov
pushf
mov
daa
sbb
sti
fisttpl
pushl
sub
mov
js
pop
jl
push
stc
cmp
lahf
adc
cwtl
sbb
jle
inc
sbb
lods
sbb
bound
lcall
cmp
sbb
cmp
and
cmpsb
popl
pop
pusha
dec
xchg
cld
xchg
mov
pushf
or
push
std
mov
ja
adc
pop
cmp
stc
iret
push
movsl
popf
inc
add
repz
xchg
out
mov
inc
cli
inc
sub
pop
mov
int
and
adc
in
jl
ljmp
mov
lds
xor
and
ds
cmp
mov
pop
pop
pop
jle
jl
pusha
daa
push
out
cld
sbb
in
lea
stos
sub
fistpl
mov
pop
idivl
pushf
out
clc
cli
fsubrl
mov
scas
addb
cmp
and
ds
fdecstp
sub
aaa
fdivr
mov
test
sbb
loopne
inc
mov
jle
sbb
std
jge
rcrl
fsubs
clc
cwtl
lds
mov
sbb
sbb
adc
or
rcrb
cmp
push
add
adc
fistpl
lcall
mov
inc
addb
movsl
fmull
pop
ficomps
sbb
data16
mov
scas
mov
fadds
jl
dec
adc
js
sbb
push
cld
and
sbb
xchg
dec
in
push
adc
imul
xchg
nop
fdivrl
dec
aas
pop
pop
pusha
cmp
cltd
jmp
lahf
repz
pop
cwtl
cwtl
clc
jp
cli
js
cld
pop
push
cld
dec
jp
stos
or
jge
les
cmp
cmp
jbe
popf
cmp
ja
adc
adc
negl
pop
js
push
add
out
sub
lret
add
mov
js
aam
decb
fcomps
pop
pop
out
mov
cmp
sarb
loopne
cltd
sbb
mov
hlt
mov
lahf
lcall
inc
lret
sbb
add
xchg
fists
fdivrl
mov
mov
cwtl
and
pop
fstp
mov
push
in
pop
jmp
push
cltd
fidivs
in
mov
pop
pop
movsl
out
pusha
mov
adc
divb
sbb
or
mov
cli
ljmp
sbb
and
mov
pop
loopne
js
fisttpl
cwtl
sbb
aad
sahf
mov
fisttpl
aaa
dec
testl
add
insl
mov
cmp
mov
insb
sbb
add
and
cmp
fistps
sbb
pop
inc
pop
push
lcall
or
xor
inc
mov
mov
jge
cld
push
out
neg
xlat
fstpt
sbb
cli
inc
notb
ds
das
and
xlat
js
sahf
cli
pop
andb
and
xlat
sub
ds
push
xlat
shll
jl
adc
cmp
ficompl
pusha
push
stos
sbb
and
jge
sbb
adc
aas
fcomp
mov
decb
xchg
mov
cli
mov
cld
and
pmuludq
clc
adc
jl
add
adc
jmp
mov
faddl
lock
pushf
adc
xchg
ffreep
mov
stc
jl
adc
pop
sub
fistpl
cli
cmp
stos
into
mov
mov
popf
shlb
cwtl
fadds
divb
pusha
sahf
test
daa
sbb
fwait
cmp
js
stos
mov
sarb
sti
inc
andb
mov
sbb
cmp
mov
jp
xchg
lcall
out
cli
sbb
add
mov
mov
popa
pop
stc
sarl
pop
cmp
std
dec
xchg
push
xchg
pop
sbb
push
inc
sbb
mov
stos
ja
pop
popf
mov
mov
pop
pop
push
fnsave
es
inc
rcrb
sub
cmp
sbb
arpl
cmp
pushf
pop
test
sbbl
scas
push
push
mov
mov
push
sub
pop
sub
jp
fnstsw
mov
out
sti
xchg
pop
sbb
sbb
push
loopne
notl
int
sbb
jg
cmp
pop
shlb
inc
pop
sahf
sti
in
nop
cmp
fwait
in
std
or
or
shlb
xchg
sahf
push
mull
xchg
stc
jns
mov
inc
lock
pop
or
fcoms
push
lcall
jle
pop
mov
std
cwtl
les
pop
jle
mov
pop
jmp
sub
inc
dec
fidivrl
into
inc
gs
dec
sbb
xlat
ss
fisubrs
dec
mov
mov
dec
dec
cmpl
testb
xchg
in
testl
jns
jp
xchg
cmp
xchg
js
outsl
mov
mov
xchg
push
out
in
push
fidivl
pusha
ss
and
inc
inc
pusha
cltd
loop
and
push
mov
cmp
jb
push
scas
movsb
mov
ljmp
test
and
clc
inc
fiadds
inc
je
add
lret
rcrl
pop
js
pop
dec
rorb
call
jp
mov
lret
mov
lret
enter
adc
loopne
loop
fisubl
and
pop
pop
mov
cld
jp
popf
in
adc
push
ljmp
fstps
mov
scas
outsb
inc
and
push
pop
pop
cmp
cltd
nop
inc
pop
jl
cwtl
cmp
inc
lcall
clc
push
popf
cmp
lahf
js
mov
adc
push
cltd
addl
idiv
rcr
pop
push
inc
sbb
and
lods
int
jle
inc
cmp
mov
cli
inc
adc
cli
pusha
pop
mov
sbb
cmp
mov
sti
or
repz
dec
push
sbb
push
dec
jnp
lcall
clc
push
js,pt
pop
jns
mov
dec
ds
push
aas
lds
jns
test
jle
test
adc
mov
ja
rclb
xchg
xor
xchg
repnz
jp
cmp
jb
mov
pusha
push
mov
sbb
xlat
orb
cmp
cwtl
notl
xlat
add
data16
pop
push
aam
cmp
push
push
idiv
pop
push
jge
aam
mov
dec
sarl
out
jno,pn
push
pop
negb
jge
push
add
addr16
adc
mov
jne
push
movsb
or
mov
adc
lcall
xchg
out
pop
or
std
xchg
xlat
addr16
dec
clc
and
mov
pop
sbb
test
sbb
jle
call
je
in
inc
inc
jne
sar
adc
jp
xchg
sbb
dec
popf
sbb
adc
rcl
pop
adc
ja
imul
bound
popf
pop
jp
sbb
jmp
frstor
cmpsb
sarb
xor
pop
lds
scas
fsts
sbb
lcall
pop
adc
add
js
fcoml
xchg
pusha
jle
cmp
lret
arpl
jp
xchg
cli
outsb
inc
ss
sbb
arpl
sbb
sbb
xorps
fldenv
sbb
dec
sbb
dec
inc
jp
inc
cmp
mov
lcall
sahf
mov
cmpsl
add
lods
dec
jp
inc
jl
sbb
fcmovb
adc
out
std
sbb
cmp
inc
out
cmp
push
jmp
hlt
mov
lcall
cli
fs
popf
add
mov
mov
fnsave
hlt
fmul
add
pop
dec
inc
pushf
popf
inc
add
mov
lret
js
adc
sbb
rcrl
cmp
gs
cli
out
xlat
cmp
ljmp
stc
in
sbb
cmp
mov
adc
pop
pushf
adc
inc
sbb
popf
mov
dec
jecxz
pusha
loopne
je
fidivrl
pop
divb
jp
fisubs
cmpsb
js
shlb
sbb
xor
cli
push
faddl
mov
jo
in
popf
pushf
std
in
jle
into
xlat
outsb
inc
pop
mov
pusha
adc
sbb
aad
and
cltd
fdivrp
pop
push
mov
mov
cmp
imul
xor
and
jae
sti
adc
mov
nop
repz
pop
std
je
xchg
aad
in
mov
add
xchg
pop
mov
pop
jge
fsin
or
jns
pop
dec
and
xlat
mov
cld
ds
push
push
cltd
cmp
sbb
outsb
fdivr
xchg
andb
jle
push
sarb
cld
xchg
popa
add
cli
jp
push
fiaddl
inc
xchg
sti
std
pop
repnz
cli
pusha
pop
and
stc
movsl
fcomps
sbb
or
sbb
sub
pusha
inc
pop
mov
cmp
scas
mov
stc
stos
xor
pop
sbb
inc
jge
cmp
push
cmpsb
jle
jl
jle
fsubr
sbb
mov
mov
mov
jl
iret
xchg
test
mov
aam
fcompl
lahf
mov
iret
jb
pop
sub
cmp
pop
jl
fsubrl
pop
inc
popf
fcom
sub
adc
in
adc
or
adc
adc
jl
pop
push
imul
clc
mov
ljmp
xchg
pop
popf
sbb
ficomps
sbb
and
push
pop
adc
clc
sbb
aad
xchg
sbb
pop
sbb
pop
jecxz
cmp
std
stc
mov
sbb
bound
sbb
fcompl
mov
add
jbe
cmp
jge
add
fsubl
cmp
idivl
popf
mov
sar
mov
pop
negl
pop
cwtl
push
add
jp
cmpsb
xchg
pop
fisubrs
xorl
pop
pop
sbb
mov
add
lds
mov
cmp
stos
xchg
lahf
ficompl
mov
cld
mov
pop
cmp
fwait
idiv
sbb
pop
push
add
es
xchg
movb
jmp
lcall
aas
cli
or
mov
ror
inc
les
push
pop
rcr
push
mov
pop
hlt
aaa
popf
sbb
adc
cmp
pushl
fdivs
setae
pop
pusha
sti
pop
and
push
lea
jp
sbb
mov
add
es
mov
clc
mov
cwtl
cld
pop
sahf
sti
test
cli
mov
lcall
std
jge
sbb
or
sbb
xor
dec
dec
ljmp
sbb
fdivrs
popf
cltd
stc
mov
pop
mov
sarb
shlb
or
mov
cltd
lcall
and
aam
pop
adc
sbb
popf
testl
sti
loopne
jp
scas
in
arpl
sbb
inc
pop
fs
xor
loop
mov
fs
pop
fbld
mov
es
sbb
or
cmpb
fmulp
mov
icebp
dec
and
adc
js
jle
add
rorl
sub
dec
repnz
sbb
fnsave
out
push
inc
popf
mov
push
cmpb
inc
mov
sbb
js
pushf
outsb
fcompl
xchg
cmp
and
sti
gs
pop
add
sbb
and
sti
sbb
mov
mov
push
in
mov
add
xchg
adc
cmp
popa
pop
popl
adc
pop
push
jp
pop
call
test
mov
fcomps
cli
push
dec
lcall
push
pop
mov
sbb
jne
aaa
xlat
and
movsb
jp
pop
fcomps
repnz
fistpl
cli
test
push
scas
sbb
xchg
pop
or
fs
fs
xchg
mov
mov
fwait
shlb
std
outsl
cmp
clc
call
and
xchg
inc
pop
xlat
loopne
fldt
mov
jecxz
sbb
shlb
xor
sub
sbb
call
jno
out
and
fcmovu
sbb
fdivrl
pop
mov
arpl
xor
repnz
sbb
in
and
adc
jge
inc
fs
std
xchg
push
pushf
xchg
dec
mul
fnstcw
sbb
mov
jo
sti
adc
mov
fcoml
inc
pusha
sar
popa
fmuls
pop
add
cmp
pop
push
xor
sbb
and
jb
sbb
inc
cmp
sbb
aam
lcall
cmpsb
cli
sbb
push
adc
mov
jbe
sti
mov
pop
fsubl
clc
pop
adc
int3
adc
cmp
xchg
enter
mov
enter
inc
lcall
ss
adc
adc
push
and
cwtl
pop
outsb
xchg
cmp
sub
in
sti
cli
inc
xchg
cmp
dec
cmc
and
fstpl
pop
push
clc
xchg
clc
bound
pushf
cmpsb
jl
and
or
sbb
sbb
mov
pop
or
sbb
mov
cmp
daa
sbb
xchg
mov
mov
and
popf
cmp
movsl
mov
clc
pop
pop
push
sbb
loopne
pushf
popa
js
je
pop
das
sub
out
pop
fnstcw
cmp
hlt
push
mov
orb
ja
mov
aam
jge
mov
push
fcomip
fdiv
push
fsubp
sbb
loopne
mov
pushf
pop
adc
cmc
fdivp
data16
popf
add
mov
xor
lds
and
out
fnstsw
shlb
mov
pop
and
mov
lea
lcall
mov
fldl
mov
push
scas
dec
lcall
cmpsb
adc
dec
xchg
arpl
pushf
jp
jge
cli
mov
mov
sub
push
clc
adc
sbb
jns
push
shlb
fimull
xor
leave
ds
in
jle
sarb
add
or
cltd
jo
cmpsb
pop
in
mov
push
pop
push
sbb
adc
cwtl
loopne
mov
push
mov
fisubl
cmpb
mov
gs
cld
cmp
push
lret
cli
and
pop
jb
fadd
inc
ds
mov
sbb
fisubrl
cmp
cmp
sbb
fidivrl
push
inc
xchg
add
mov
fldenv
jle
rcrb
fidivrs
out
fwait
rcrl
inc
adc
frstor
cmp
push
xor
push
pushf
mov
fwait
push
sub
pushf
sti
cmp
xorb
mov
rolb
add
mov
mov
in
push
or
inc
sti
rcr
pushl
cmovae
cmp
cli
ds
cwtl
sti
addb
pop
mov
and
adc
sbb
or
cld
aad
cltd
std
fistl
daa
aas
sbb
mov
leave
sbb
push
pop
xchg
aaa
xlat
pusha
pop
cli
andb
add
pop
rcrb
sbb
mov
pop
clc
mov
add
cs
iret
repnz
sti
mov
pop
outsb
cmp
lret
adc
je
cmpsl
les
loope
add
xlat
outsb
in
stc
adc
sub
aam
fiaddl
pusha
ss
mov
cmp
and
xlat
pop
mov
cwtl
les
jl
std
mov
mov
popf
and
pop
mov
shr
mov
inc
pop
js
imul
pop
mov
lods
pop
pusha
sbb
jl
jp
mov
sbb
and
cmp
mov
sar
cmp
cwtl
mov
arpl
jnp
repz
pop
incl
psubb
mov
or
inc
ds
les
lods
mov
mov
jmp
cmp
clc
sbb
cmp
mov
dec
rcrb
cmpl
lahf
push
sub
inc
cmp
or
sbb
cwtl
stos
les
leave
lds
in
xchg
inc
push
inc
push
aaa
jne
jge
mov
out
cwtl
pop
mov
push
pop
mov
pop
mov
outsl
add
or
js
inc
fidivrl
popf
cltd
int3
in
jns
cs
push
pop
inc
cmp
mov
inc
cmp
lahf
mov
ds
ret
sub
cmpb
lds
pop
jle
adc
jnp
push
fsubs
je
xor
pop
pop
jl
daa
adc
ja
inc
fstpt
xlat
xor
lcall
cmpsb
lds
fiadds
and
sbb
cmp
std
sbb
pop
lcall
mov
popf
sbb
inc
adc
notl
out
xlat
pop
pop
fcmovu
or
lea
xchg
inc
mov
mov
jecxz
mov
jl
xlat
adc
in
fsubp
leave
xchg
cmpsb
fxch
or
fistpl
decl
sahf
lods
and
in
xlat
jge
and
pop
xchg
loopne
sub
jae
jle
out
cmp
sbb
aad
jmp
xlat
xchg
add
mov
sbb
xchg
pop
sub
out
mov
pop
fcmovbe
aas
std
fidivrl
jnp
scas
jle
popa
mov
scas
cmp
add
pop
pop
or
clc
sub
mov
mov
cld
xlat
add
popf
lret
notl
mov
sub
cwtl
ficoms
fcomps
dec
jns
pop
xchg
mov
add
movsb
add
std
inc
fcmovbe
and
pop
push
sbb
aad
pusha
ficompl
lods
inc
pop
and
mov
repz
pop
pop
arpl
lds
sahf
ficoml
inc
sbb
js
cld
mov
ds
cmpsb
cmp
sbb
add
insl
or
mov
repnz
cmp
inc
cmp
and
xchg
scas
outsb
fucomp
pusha
mull
popa
and
sahf
cld
xor
jnp
es
sbb
stos
add
fdivrl
stos
pop
lds
jg
pop
sbb
mov
jp
fcoml
jg
aam
cli
lock
lods
mov
stos
pushf
mov
push
xchg
jae
into
ds
mov
ss
pusha
xchg
jnp
jp
jge
ss
mov
cltd
loopne
mov
aad
mov
cld
pop
iret
jge
jno
xchg
cmpsb
lcall
arpl
jnp
cmp
sarl
imul
jl
pop
popa
cmp
scas
adc
mov
dec
fs
cmpsb
mov
xchg
in
cmp
movsl
popf
roll
cmp
fidivrl
inc
jne
xor
idivb
jp
xchg
ss
inc
fdivrl
cmpsb
negl
mov
test
sbb
xchg
cmp
mov
inc
fcompl
cwtl
pop
clc
aam
clc
clc
or
inc
rorl
or
fstpl
adc
adc
pop
pop
js
xchg
and
fstps
pop
inc
mov
movsb
ds
mov
popf
sti
movsl
pop
xchg
decl
cmp
cmpsl
inc
sbb
arpl
fs
lds
pop
ljmp
fildl
inc
mov
mov
std
outsb
add
xchg
sbb
in
add
in
sti
lods
pop
insl
notl
inc
add
leave
fdivrp
push
and
sub
pop
je
cs
add
or
mov
cmp
and
cmp
inc
push
and
popa
rcrb
mov
mov
push
push
je
lahf
sbb
clc
pusha
pop
inc
les
into
dec
jns
int
or
add
int3
cld
mov
cmc
add
cs
adc
cwtl
push
idivw
and
pop
push
add
jmp
sub
pop
fimull
pop
inc
adc
sub
adc
pop
clc
cld
mov
cmp
fiaddl
std
je
cs
and
jmp
mov
sti
rclb
mov
sti
xlat
cwtl
inc
js
fidivl
aaa
fwait
pop
add
inc
add
mov
les
js
stos
add
mov
sbb
fdivrs
sahf
cs
mov
jae
cmp
loopne
xchg
inc
adc
out
pushf
loopne
scas
mov
adc
jp
sahf
std
cwtl
mov
jl
andb
lcall
pop
idivl
test
sti
jmp
pushf
mov
push
inc
sbb
mov
mov
mov
push
mov
cmp
stos
xchg
jg
popf
push
out
sahf
fldl
and
inc
notl
dec
push
js
cwtl
pushf
xor
mov
mov
mov
mov
cmpb
mov
pop
fsts
mov
sbb
jl
mov
lcall
fldl
and
mov
sahf
cld
jle
daa
push
mov
lock
add
dec
outsb
add
mov
mov
fwait
push
push
popa
sbb
cld
out
mov
mov
push
cmp
adc
test
cld
popf
pusha
popf
xor
cmp
sbb
popa
mov
dec
jg
ss
add
or
mov
fmul
xor
gs
clc
lods
inc
aas
pusha
cli
cmpsl
cmpl
fldcw
xchg
ss
icebp
jbe
lcall
and
and
cmp
mov
outsb
pop
dec
mov
add
rorl
mov
adc
out
stc
and
in
inc
gs
jno
pop
sti
xchg
adc
dec
pushf
mov
cmpsb
mov
out
and
sbb
lahf
cmp
dec
sti
push
fcomps
inc
mov
sbb
ja
sbbl
bound
pop
sbb
jp
pop
pusha
pop
inc
cmp
js
pop
in
push
xchg
mov
stos
mov
std
cli
fisttpll
cmp
push
notl
push
mov
add
jb
sbb
out
and
popf
push
sbb
clc
sbb
cmpsb
inc
push
fidivrl
mov
and
fwait
sbb
inc
mov
jns
inc
cmp
rcrb
rcrl
xchg
in
mov
cmc
ja
int3
sbb
gs
push
scas
das
sbb
fdivs
and
frstor
adc
cmp
dec
pop
sub
sahf
lcall
inc
fwait
pop
mov
mov
shl
pushf
mov
add
movsl
jmp
sub
pop
imul
ficoms
mov
in
xchg
pop
imull
bswap
push
pop
add
xchg
ror
mov
int3
out
cli
xlat
sahf
fsubp
bound
jecxz
test
cs
jmp
cltd
mov
sarb
lcall
stc
popf
or
arpl
les
pusha
mov
jne
std
sbb
ficompl
mov
test
pop
int3
pop
or
jge
sbb
popf
leave
adc
sbb
jp
dec
mov
mov
inc
into
push
cli
jge
jle
jecxz
xchg
pop
rcr
mov
push
inc
sti
js
paddw
negl
add
push
cwtl
xchg
cmp
mov
inc
inc
js
sahf
adc
sub
popf
cmp
rcl
mov
jne
and
jns
cmp
int3
pop
inc
mov
cmp
sbb
mov
sar
testl
out
mov
fcoml
inc
jl
imul
and
add
jns
and
popf
cmp
mov
inc
idivl
out
fstps
mov
sbb
shlb
add
adc
sahf
je
push
xchg
fcompl
adc
push
pop
and
cmp
cmp
fwait
orb
jbe
in
or
sbb
sbb
shl
jle
fldt
mov
pop
pushf
sbb
ficompl
mov
mov
ficoml
push
xlat
add
dec
xchg
inc
mov
cmp
jp
fcoms
or
enter
js
cmpsb
sbb
pop
ljmp
add
cmpsl
lahf
cltd
mov
pop
push
jp
ret
ss
ds
fstpl
mov
ficoms
shll
mov
mov
push
and
pop
fsubs
cmp
sti
clc
jns
fnstenv
xlat
faddl
mov
inc
jno
out
pop
push
std
pop
sahf
sbb
test
pop
cli
cld
ljmp
add
outsb
or
cmp
mov
cwtl
js
jbe
popa
lcall
mov
sbb
sub
neg
push
push
out
sti
shll
mov
push
add
outsb
cmp
push
aad
xor
xchg
sbb
mov
xchg
imul
out
call
fldcw
and
into
sbb
in
pusha
shlb
filds
xor
pushf
or
popf
inc
clc
dec
push
clc
mov
jge
xchg
sahf
mov
inc
cwtl
fcos
fcomp
sbb
cli
adc
or
inc
push
in
xchg
and
mov
fimull
idiv
adc
js
sbb
jno
sub
mov
sbb
xor
insl
cmpsb
adc
cmp
fcmovnb
cli
xchg
pop
and
jp
sbb
aas
gs
cli
jp
out
clc
or
fcoml
sarb
sarl
setb
mov
pop
stc
cmp
cwtl
cmp
lock
and
loopne
xlat
jp
inc
xchg
jle
pop
xchg
lcall
cmp
mov
jge
xor
inc
rcl
fcomps
cli
jnp
lods
push
pushf
fidivrs
lcall
ficompl
js
loope
clc
test
cmp
mov
mov
out
and
and
mov
jl
add
insl
cmp
cmpsb
sahf
jnp
lds
cmc
jne
popf
es
xor
mov
xchg
arpl
inc
mulps
adc
adc
test
and
mov
cmp
pop
mov
sbb
jns
sbb
cli
test
xchg
fnstcw
xchg
mov
in
cmp
adc
push
xlat
popf
mov
add
jge
jl
fcomp
cmp
shl
pop
cmpsb
in
add
bound
jg
fs
and
cmp
push
sahf
ret
out
jp
emms
sbb
popf
pushf
cmp
jge
lcall
xor
loopne,pn
mov
xchg
sbb
sbb
cmp
sub
sbb
sbb
cld
xlat
adc
fsub
imulb
mov
das
or
pop
and
pop
adc
sbb
bound
and
mov
xlat
lcall
pusha
bound
fldenv
inc
fcoms
pop
js
fwait
rorl
imul
mov
cmp
ds
pop
mov
jp
and
inc
fiaddl
cld
pop
pop
mov
dec
pop
cmp
mov
jne
fdivr
incl
aaa
push
js
popa
rorb
mov
sahf
repnz
test
mov
sbb
in
sbb
inc
out
stc
pop
and
sbb
pop
andl
push
jns
add
and
mov
inc
repnz
sbb
cli
xlat
sbb
aam
mov
rclb
test
mov
mov
adc
sbb
in
adc
mov
cmpsb
and
sbb
dec
in
cmp
roll
inc
push
cmpsl
fsubs
push
fstps
out
pusha
xlat
sti
out
pop
fdivr
fmul
xchg
xor
out
stos
fstps
daa
jo
lds
fstpl
daa
aaa
mov
std
mov
xchg
js
sbb
inc
test
push
shl
je
mov
sbb
xlat
fucomp
je
dec
or
pop
jecxz
mov
xor
js
pmulhw
sahf
sbb
sarl
dec
fs
inc
fnstsw
pop
movsb
xlat
std
popf
push
fsub
pop
sti
pop
mov
jp
cmp
mov
les
jo
inc
mov
cmpsb
fistpl
cmp
pop
inc
sarl
ljmp
xchg
scas
pop
pop
mov
add
rorb
jge
adc
jge
cmp
pop
xor
pop
jl
adc
pop
sbb
jae
pop
sbb
cld
clc
xchg
or
mov
pushf
inc
cmp
add
or
fidivrs
scas
cmpsb
jle
mov
and
inc
mov
mov
fwait
pusha
popf
aas
sbb
sbb
or
pop
fmuls
cmpsl
ja
pushf
and
wrmsr
inc
inc
int3
adc
and
out
inc
shrl
inc
sbb
sahf
daa
cmp
sbb
and
fistpl
enter
push
xchg
popf
inc
mov
clc
fstpt
push
dec
scas
mov
test
or
inc
inc
mov
fstpl
xchg
push
jo
inc
and
lcall
mov
fcompl
mov
and
lds
cmp
sub
lea
bound
and
inc
enter
sbb
loopne
inc
std
jno
fwait
cmp
jge
xor
popf
xchg
popa
shlb
jp
or
js
inc
add
pop
stc
fcompl
imul
aaa
les
inc
sarb
cwtl
adc
pop
lcall
mov
ss
sbb
pop
idivb
testl
pushf
and
inc
sub
addr16
lea
jge
stc
mov
fidivrl
lcall
and
and
enter
push
cmp
out
cmp
lahf
mov
gs
sub
and
and
pusha
adc
mov
dec
xchg
sarb
into
iret
cmp
leave
pop
mov
dec
sbb
or
jg
cli
rcrb
filds
sbb
pop
cwtl
jmp
les
and
mov
sbb
push
negl
inc
and
cmpl
push
pusha
ficomps
xor
pop
btc
lcall
cmp
cmp
sbbb
jbe
mov
adc
cli
lcall
push
mov
fistpl
gs
mov
sbb
enter
decl
std
das
popf
in
decb
mov
iret
rolb
lds
gs
or
fstp
mov
adc
sbb
out
inc
cmp
cmpsl
add
sbb
push
loopne
jl
cltd
inc
cwtl
adc
inc
pop
gs
iret
fadds
les
cli
sbbb
push
cmp
leave
testl
je
outsb
inc
dec
imul
mov
or
popa
pop
fdivr
inc
push
sbb
in
fs
aad
pop
jbe
and
jle
cwtl
sti
cmp
outsb
push
ss
in
push
or
repnz
cwtl
pop
fcmove
fidivrs
jns
mov
mov
sbb
inc
cmp
mov
pop
lahf
mov
push
jl
lret
cmp
jecxz
xchg
mov
push
pop
fldl
cli
cmp
fcomp
jmp
pop
fidivrs
push
pop
sub
frstor
rcrb
lret
or
mov
and
sub
inc
cltd
popf
fs
or
es
mov
mov
pushf
outsl
outsb
je
add
push
pop
into
mov
std
jl
cmc
mov
negl
mov
pop
fcompl
lcall
aas
aam
shlb
movsb
mov
out
jge
jp
mov
stc
ds
jns
mov
jle
fadds
popf
imull
ss
mov
pushf
adc
testb
push
jl
jp
jns
xor
sbb
sbb
pop
cmc
jp
dec
inc
mov
enter
outsl
cmpsl
movsl
pop
dec
cmp
mov
sbb
sbb
xchg
jp
int3
add
stc
mov
popf
cmp
inc
pop
movsl
dec
mov
push
loopne
cmp
add
add
inc
out
dec
pop
xlat
xor
or
cmp
or
pop
add
xchg
fisubs
loopne
xor
jmp
mov
mov
mov
cs
mov
ficoml
cwtl
adc
rcrl
mov
pop
and
mov
pop
jb
shll
aaa
sbb
jle
pop
andl
stos
dec
xor
dec
out
mov
fimull
mov
sbb
sbb
bound
leave
in
push
adc
adc
mov
cmp
idiv
sbb
jl
sbb
call
mov
inc
push
pop
fcompl
pop
mov
fstpt
adc
cmpl
adc
neg
push
and
sbb
mov
jo
add
stos
inc
sbb
cmp
mov
outsb
inc
xor
jle
or
cmp
jp
and
adc
addr16
cmp
clc
cli
fiaddl
cmp
add
xchg
sbb
inc
test
jl
sub
sarb
cmp
pop
dec
or
dec
mov
sbb
cmp
mov
arpl
fisubs
mov
mov
sbb
pushf
jl
ljmp
and
pop
sahf
xlat
out
push
or
adc
scas
cltd
lea
sbb
add
push
frstor
ds
aaa
popf
shlb
add
inc
dec
sub
sbb
pushf
xchg
scas
aam
out
pop
aam
pop
mov
popf
lcall
and
les
in
and
adc
push
push
rcrb
insb
ss
jmp
mov
std
inc
into
and
pop
fildl
push
mov
in
inc
xchg
and
xchg
dec
in
xchg
cmp
jle
mov
mov
pop
adc
in
pop
add
cmp
outsb
test
js
add
xor
loope
sti
sbb
in
or
clc
jle
pop
idivl
stc
bound
dec
inc
fiaddl
dec
jnp
fstpt
mov
jp
ja
pushf
push
push
add
fstpl
inc
pop
jg
xchg
movsb
fdivrs
mov
ret
inc
cmp
icebp
fstpl
adc
adc
ficomps
or
pushf
repnz
and
and
mov
cs
out
pop
rcrb
out
pusha
sahf
pop
push
pop
mov
sub
gs
mov
pop
fstpl
adc
inc
and
mov
icebp
push
lret
fucomi
fs
out
lahf
iret
in
pusha
jmp
mov
jl
pop
negl
cli
cmp
ficompl
mov
pop
loop
testl
or
xor
push
popf
fadds
pop
inc
inc
fstps
xchg
adc
sbbl
ficoml
and
mov
aaa
sub
pusha
jl
or
js
jle
jp
mov
and
pushf
cmp
xchg
push
or
js
push
jbe
push
and
mov
out
jp
pop
mov
lret
mov
fidivrs
pop
lcall
sbb
pop
pushf
mov
pop
lock
jl
and
enter
fstpt
sbb
sbb
testb
and
cmp
cltd
mov
pop
pop
cmp
sahf
lcall
add
cmp
mov
pop
pop
xor
jg
pop
jmp
xchg
pop
mov
fstl
inc
sahf
stc
loopne
pusha
stos
fdiv
add
xor
rcll
mov
js
std
pop
arpl
sbb
popf
push
cld
pop
pop
and
sbb
mov
sarb
fnstsw
adc
inc
pop
roll
mov
sbb
outsl
pop
dec
fdivrs
pop
pop
cmp
fs
xchg
aas
sbbb
inc
sbb
in
scas
sbb
and
inc
cmp
in
testb
pop
cmp
mov
cmpsb
scas
sbb
mov
rolb
inc
inc
mov
ficompl
mov
pop
adc
addr16
mov
pop
inc
js
lods
adc
pop
mov
pop
jge
pop
pop
popf
call
imull
add
sub
xchg
pop
lahf
cmp
or
mov
cmp
outsb
addr16
sbb
pop
pop
fidivrs
cmp
sbb
and
cld
push
pop
sbbb
dec
dec
daa
pop
sarb
mov
stc
jl
pusha
adc
gs
loopne
cmp
push
mov
add
neg
adc
ret
mov
out
inc
and
popa
stc
lcall
enter
cmp
cld
in
sbb
xor
sti
js
jp
jge
inc
pushf
pusha
cltd
and
mov
daa
pop
pop
sbb
popf
loopne
cmp
into
jns
pop
sbb
cwtl
xlat
pop
sbb
pusha
sahf
ds
outsl
movsl
adc
std
mov
push
cltd
cmp
and
jl
hlt
inc
cld
fcompl
pusha
jae
mov
xlat
mov
jge
mov
pushf
fdivrp
add
arpl
test
xor
mov
jns
pop
imul
push
jle
into
cmp
ficompl
sbb
cmp
rorb
mov
inc
hlt
in
xchg
arpl
cmp
jbe
cwtl
or
pop
cwtl
sbb
pop
clc
jo
xchg
popf
imull
sti
inc
mov
inc
jb
test
sbb
clc
popa
xlat
inc
loop
fldl
or
adc
andl
cli
js
mov
push
xor
mov
mov
xchg
sbb
mov
clc
cmp
adc
add
xchg
mov
fdivrs
pop
pusha
fs
adc
negl
inc
push
add
sbb
sbb
jno
sbbb
push
cwtl
sbb
and
test
sbb
gs
jp
verw
cmp
cld
cltd
and
shlb
xor
adc
xchg
js
or
mov
gs
pusha
xchg
add
out
jns
sbb
pop
sbb
rcrl
add
jle
mov
xlat
pop
mov
mov
xchg
mov
imul
ss
je
adc
clc
inc
sub
lods
insb
jge
sbb
mov
and
aas
ficomps
cli
jge
loopne
shrd
push
adc
popf
jo
sbb
or
idivl
mov
lcall
fiaddl
pop
cmp
pop
cltd
jl
push
mov
bound
loopne
pop
cwtl
fsts
int
pop
sub
sti
lods
fisubrl
adc
lret
les
imul
cli
mov
mov
fstps
jmp
fsubl
add
lcall
fidivs
mov
test
pop
dec
sbb
mov
sbbb
add
fsubs
cmp
jle
mov
gs
fiaddl
add
loopne
stos
pop
fistl
add
cmpsb
popf
fcomps
idivl
jmp
xlat
jp
mov
gs
std
scas
inc
imul
sbb
aad
and
cltd
cmp
inc
mov
in
pop
mov
pop
jge
repz
sahf
mov
cmp
sbb
cmc
xchg
jbe
pop
or
push
cmp
or
gs
mov
das
mov
cmp
test
sbb
imul
pop
xchg
pop
dec
and
inc
ficoml
out
fs
clc
pusha
xchg
incb
inc
fldenv
mov
pushf
andl
mov
fwait
add
pop
test
jp
arpl
popf
int3
jbe
pop
testb
jl
or
xchg
popa
bound
ficompl
adc
jle
popf
in
add
jecxz
fsubrp
pop
sti
add
sbb
fisubrs
sub
popf
or
and
cmpsb
pushf
cli
sub
das
add
sub
clc
mulb
test
jns
fs
movsl
nop
pop
mov
es
mov
mov
jp
dec
punpckhbw
adc
and
and
sbb
add
push
lret
mov
fldt
sbbb
pop
pop
mov
fidivrl
aaa
out
jb
cmpsb
jo
mov
pop
inc
negl
adc
fcompl
sbb
pop
cmp
jno
shll
sbb
and
xchg
cmp
mov
mov
ss
pushf
jo
and
sbb
pop
cltd
dec
push
or
sbb
jle
fisubs
sub
push
sub
stos
mov
xchg
adc
rcrl
mov
mov
xlat
cmp
sub
aad
adc
arpl
stc
rcrl
cltd
mov
int
jae
xchg
xor
popa
sub
scas
or
sub
popf
aas
cltd
sahf
lret
add
arpl
sbb
mov
and
sarb
pop
pop
pop
fld
outsb
jbe
lods
shl
mov
fldl
dec
mov
pop
jp
adc
testb
sub
loop
inc
ds
xlat
or
push
or
fistl
decl
inc
cmp
cmp
or
xlat
mov
or
lds
jns
xchg
out
push
mov
xlat
cmpsl
pop
jo
sarl
add
mov
cwtl
mov
inc
sub
adc
sbb
adc
fs
push
gs
cmp
addb
and
adc
mov
sti
push
into
pop
pusha
or
in
mov
lcall
jle
sti
mov
inc
add
dec
inc
inc
inc
pop
mov
lds
mov
cmp
xlat
fidivs
mov
sbb
in
aas
pushf
jle
idivl
clc
nop
add
jge
push
mull
fstpl
jns
cmpsl
xchg
jbe
xchg
mov
sbb
cmp
cld
cmp
in
add
cwtl
negl
xchg
cmpl
cld
shlb
sub
fimull
push
cmp
xor
div
lds
lahf
mov
mov
cmp
sbb
sbb
jp
pop
jbe
mov
pop
clc
imull
ljmp
pop
dec
ficoms
xor
pushf
push
jle
cwtl
inc
pusha
mov
xchg
sub
mov
jl
jle
and
sbb
leave
mov
add
and
popf
push
ficoml
push
mov
mov
lret
mov
lcall
cs
inc
out
and
mov
ffree
pop
pop
jle
adc
cmp
fildl
mov
negl
cld
popf
push
scas
mov
or
sahf
and
mov
cwtl
or
cmpsb
mov
loopne
andnps
pop
clc
stc
and
fcoms
push
xor
cmc
inc
add
mov
cmp
jl
pop
pushf
mov
std
adc
mov
fstpt
sbb
addb
add
ficompl
sbb
fnstcw
mov
repz
jns
mov
fcoml
sub
je
les
ljmp
daa
push
mov
jp
imul
sarl
aam
lcall
jle
sar
inc
cwtl
xlat
std
aas
pop
mov
out
inc
loopne
ds
cli
cmpsl
mull
cmpsb
cld
gs
or
mov
adc
xchg
inc
sbb
mov
cltd
mull
mov
jp
sbb
dec
mov
pushf
mov
sahf
idiv
mov
idiv
jle
lcall
and
sbb
cld
stc
and
mov
sti
fbld
mov
mov
cltd
mov
pop
sbb
fdivr
xor
xchg
jbe
popf
adcl
cltd
addb
out
ficompl
in
sbb
out
xlat
jp
pop
cmp
dec
cltd
dec
cmp
iret
cld
call
mov
mov
mov
cmpsb
cwtl
mov
xchg
jle
xor
pop
sub
pop
sbb
frndint
pusha
neg
mov
add
dec
jns
mov
mov
pop
mov
sub
fdivrl
sahf
mov
cmp
sbb
mov
inc
or
popa
jge
add
lahf
mov
cld
stc
and
loopne
adc
aaa
ds
fwait
ss
sbb
jbe
cmp
ss
fdivrp
cwtl
jns
pop
xchg
cmpsb
push
roll
sbb
ficomps
mov
ja
sahf
and
pop
aas
test
mov
dec
imul
push
add
sti
popf
pop
popfw
pop
mov
xor
clc
push
cmovl
sbb
stos
cld
inc
cmpsb
mov
cwtl
cmp
dec
mov
fwait
jle
pop
sub
js
mov
fdivr
add
add
stos
sbb
sahf
jae
push
xchg
stc
push
sti
pop
sub
adc
fdivrs
out
or
jmp
mov
cltd
inc
lcall
imul
or
cmp
ficomps
pop
pusha
jns
push
cmp
sbb
rcll
mov
jb
add
sub
sbb
cmp
sub
and
cmp
pop
sbb
loopne
adc
pop
sbb
ja
rcrb
inc
nop
pop
cwtl
jl
cmp
pop
sbb
dec
mov
pop
adc
adc
mov
mov
xchg
andl
push
ret
pop
sbb
xchg
imul
lea
pusha
add
lret
sbb
cs
jmp
xor
test
js
sbb
and
fisubl
inc
sbb
or
xor
mov
js
dec
clc
cmp
dec
mov
xlat
xor
mov
fmuls
enter
mov
and
pop
xorl
enter
add
out
ss
aaa
scas
out
mov
ficomps
cmp
clc
pop
incb
push
lds
pop
add
int
mov
lods
xchg
xchg
pop
pop
and
pushf
pop
inc
cmp
cmpb
flds
push
or
mov
cwtl
push
ficompl
fdivrs
inc
inc
lret
fnstenv
mov
popf
sbb
lods
fcompl
divb
inc
cmp
push
mov
add
movsl
cmp
pop
mov
fdivl
in
mov
mov
cld
std
js
cmp
mov
pop
lcall
adc
lcall
sbb
cld
dec
pop
mov
ja
out
mov
dec
xor
pushf
or
cwtl
enter
or
sbb
movq
pusha
popf
faddl
sbb
dec
mov
xchg
out
jl
pusha
fstps
jmp
push
repnz
xchg
jl
nop
cs
jecxz
lahf
int
or
cmp
add
pop
cmp
aad
mov
jl
sbb
ja
xor
push
mov
or
jns
incl
cmp
pop
sbb
bound
js
or
adc
sbb
cmc
or
push
cltd
les
and
jp
sahf
fisubrl
push
pop
jns
sahf
mov
insb
mov
sub
jb
dec
test
mov
pushf
jle
fwait
stc
aam
cmpsl
pop
mov
xor
sbb
lret
fs
mov
jge,pt
popf
cltd
pop
pop
mov
cmp
xchg
add
sbb
and
cmpsb
sbbb
pop
lcall
stc
test
pop
in
rcrb
adc
arpl
xlat
sbb
inc
mov
fimuls
jge
pop
mov
and
arpl
cld
sti
xchg
nop
pop
jbe
pop
xchg
jl
mov
cmp
cld
movsb
mov
cltd
cmp
stos
enter
inc
inc
cmp
cld
adc
out
lret
rcrb
xchg
fldl
test
inc
rorb
idiv
mov
pop
fldenv
imul
and
negl
inc
jl
pop
js
mov
sub
decb
and
push
push
frstor
and
pop
xchg
mov
mov
jge
cli
out
adc
data16
push
inc
adc
sbb
cltd
jmp
inc
inc
sub
and
popa
call
clc
mov
fdivl
js
test
cli
and
mov
mov
rolb
arpl
fstpt
int
pop
sbb
inc
inc
popf
fcoml
shrb
dec
lock
dec
mov
lods
lds
mov
jle
stc
cmp
lds
sbb
jp
lcall
adc
cmp
pop
daa
fists
jno
adc
lcall
sahf
mov
or
pop
pop
adc
jp,pt
outsb
push
and
pop
push
jb
jle
sbb
jmp
add
cmp
mov
fwait
jle
push
movsb
pop
push
aaa
sbb
dec
push
dec
js
mov
idiv
clc
sbb
fstpt
mov
mov
rcrl
ret
ss
call
sub
dec
sbb
sbb
ja
mov
dec
lcall
cmpsb
lcall
iret
iret
xchg
cmpb
jo
mov
cmp
xchg
and
xlat
rcll
clc
dec
sahf
xchg
cmp
fsubrp
mov
loopne
cli
pop
test
jl
inc
inc
jns
cmp
pop
cmp
js
xlat
jle
std
mov
lods
adc
clc
and
and
mov
fsubl
sub
in
inc
and
jbe
mov
xor
sub
sub
sbb
stos
sbb
push
and
cmpsb
sbb
push
ds
popf
pop
fidivrs
les
mov
pop
repnz
std
arpl
cmp
dec
pop
xchg
mov
fcoms
cmp
pop
pop
and
stc
clc
fwait
mov
jg
pop
mov
add
mov
jns
xchg
dec
sbb
or
pop
mov
clc
cmpsb
stos
repnz
imul
cmp
adc
adc
mov
js
sbb
cmp
idivl
pop
aas
sarl
mov
push
add
push
xchg
add
sub
aam
cld
mov
cmovle
fcomps
ficompl
mov
inc
sahf
ret
or
jge
xchg
or
mov
push
clc
lcall
xchg
inc
fiadds
cmp
sbb
dec
fdivr
push
into
stc
mul
cmp
pop
out
pop
jl
not
pop
sbb
out
push
cmp
sbb
mov
nop
pusha
inc
sbb
fdiv
lahf
fcomp
js
sub
inc
mov
or
cwtl
jp
sar
insl
xchg
std
dec
popa
adc
xlat
mov
fcomps
sub
mov
jb
lahf
clc
lds
cmp
cltd
mov
cs
and
lcall
mov
sbb
mov
jg
and
cld
sbb
and
add
cwtl
xor
lret
jae
sahf
pop
xor
add
repnz
lcall
cmp
and
mov
push
in
out
sbbb
mov
jle
fldt
mov
pop
std
xchg
loop
sbb
adc
xlat
jl
fnstcw
or
sbb
fiadds
sbb
xor
sar
jns
ss
mov
sbb
loopne
cmpsb
sbb
sahf
out
gs
sbb
and
pop
cli
mov
xlat
sbb
xlat
notl
out
pop
js
sbb
xchg
xor
or
std
pushf
into
pop
sbb
pop
pop
filds
cmp
mov
mov
shl
cld
and
mov
sbb
sbb
cmp
cmpl
pop
or
ds
mov
fstpt
mov
stc
negl
popf
inc
and
jle
inc
das
repnz
flds
movsb
out
popf
rcrl
and
pop
mov
incb
add
nop
sbb
loop
adc
jns
xchg
xchg
cmp
mov
popa
and
addb
cltd
jae
mov
adc
adc
les
std
sti
mov
pop
and
jbe
lds
out
fidivrs
mov
shufps
sbb
sbb
adc
pushf
xor
mov
pop
in
pop
loopne
cmp
and
enter
loop
mov
add
add
push
jae
mov
sbb
adc
adc
popf
lcall
fld
in
or
jmp
dec
xchg
or
push
and
mov
js
inc
std
sbb
ficomps
inc
cmp
xorb
test
es
pop
and
fstps
cmp
jp
lcall
rcrl
hlt
or
mov
add
and
popa
fcompl
sbb
sahf
fnstsw
and
add
dec
pop
out
jl
push
jle
cmp
testl
cmp
loop
mov
cmp
ja
pop
fsubs
loop,pt
sbb
fdivrp
jl
lcall
les
and
jmp
mov
cvtdq2ps
sub
jae
and
test
loopne
mov
test
popf
fucomi
jp
xor
jns
mov
std
pop
pop
xor
mov
clc
aaa
push
popf
rol
fdivrs
inc
cli
jbe
in
sbb
fimuls
push
push
fstpl
push
sbb
inc
popf
mov
jge
test
fiaddl
and
arpl
xchg
or
loopne
jl
sbb
inc
pop
mov
fisubl
movsb
sti
pop
push
mov
sub
and
mov
pushf
fisttps
mov
jl
bound
inc
testl
test
stos
pop
xchg
cs
cmp
mov
dec
adc
mov
cmp
mov
popf
push
decl
mov
jp
fdivrl
or
sti
popf
or
adc
dec
sbb
mov
or
pop
ds
clc
pop
scas
jb
sbb
xor
pop
or
in
mov
and
xchg
pusha
cmp
js
pop
test
sbb
lea
push
jb
sbb
fs
jle
pop
sbb
mov
mov
sbb
and
pop
pop
cmp
inc
dec
mov
fiaddl
aaa
push
cmp
fcmovne
outsl
cmp
pop
ds
popa
sbb
mov
sub
inc
and
push
fcompl
clc
mov
mov
mov
cmp
in
movsb
jmp
dec
jns
push
sar
in
xlat
out
add
iret
mov
sti
fsubrp
cmp
lcall
mov
pop
pop
fcomps
loopne
push
sbb
cwtl
popf
fildl
cltd
sbbb
lds
xchg
adc
push
jg
stc
or
js
pop
cmp
pop
ds
sti
and
push
sbb
pop
popf
popf
mov
cld
cmpsb
xchg
into
cmp
mov
sbb
std
cmp
sbb
sbb
xor
fs
jns
pop
push
inc
inc
fwait
cld
or
mov
ss
dec
shlb
sub
push
mov
xchg
cld
stc
shl
pushf
fstpt
clc
xchg
push
dec
sbb
pop
pop
mov
jp
das
sbb
adc
xchg
push
push
and
aad
int3
and
mov
xchg
or
in
shll
mov
mov
aaa
ficomps
scas
mov
mov
jle
add
pop
aam
popf
xor
mov
sbb
mov
rcrb
fdivr
loopne
in
sbb
dec
push
and
sbb
pop
leave
pusha
jns
fdivr
andb
jl
and
out
dec
jb
and
lcall
scas
in
or
pop
fstpt
rcl
sahf
push
dec
imul
js
pop
stc
andb
shlb
mov
scas
ficomps
lds
cmp
xlat
idiv
jp
cmc
jae
mov
mov
sub
std
cwtl
stos
out
nop
mov
enter
ds
mov
adc
sbb
inc
pop
jge
sbbl
mov
add
ds
dec
xchg
cmp
clc
fdivrl
pop
daa
cmp
xchg
or
popa
mov
push
inc
sar
pop
int
or
fstl
notl
sub
incl
mov
cltd
inc
fiaddl
sub
stc
cmp
sbb
fadds
jp
fisubl
push
xchg
and
inc
clc
call
clc
stc
rcr
xor
jmp
sbb
mov
mov
mov
or
popf
pop
mov
adc
pop
adc
clc
andb
mov
lcall
fsubrl
mulb
pop
inc
ljmp
cmp
pusha
and
jge
daa
lea
xchg
adc
popf
mov
push
pop
call
pop
pop
in
inc
sahf
call
pop
cmc
inc
test
jo
xchg
dec
ret
cmp
xor
adc
adc
addl
movb
std
mov
jl
cmp
sar
add
int3
add
clc
mov
inc
cmp
fldl
jns
fwait
ss
cwtl
fidivrl
call
sub
and
fldl
and
add
roll
sbbl
or
ficompl
mov
neg
sbb
fwait
pop
mov
pop
loopne
jae
xchg
push
mov
sbb
cmp
dec
add
sub
dec
repz
sbb
or
inc
popf
frstor
mov
mov
rolb
cmpl
and
jp
sbb
jecxz
mov
xchg
jge
stc
aam
pop
in
adcl
cli
mov
dec
pop
jbe
jecxz
out
and
stos
add
add
xchg
sbb
xor
xchg
sbb
pushf
jl
neg
adc
sarl
cmp
mov
push
adc
aas
rcr
cmp
sub
sete
push
stc
ja
xor
push
jbe
scas
gs
neg
push
out
cmp
jae
mov
cld
sbb
adc
push
cmp
gs
fnsave
pop
mov
inc
cli
mov
arpl
out
mov
scas
sub
cwtl
mov
sbb
js
fwait
cltd
mov
fstp
pusha
dec
stos
sub
fisttpl
loope
pop
cs
fstps
loopne
inc
push
or
cmpl
mov
cli
pop
cmp
aam
and
out
push
push
stc
inc
rcl
inc
mov
les
les
mov
imul
adcb
cmp
cli
adc
pop
ljmp
cld
jle
ficoml
add
cmp
cmp
arpl
and
add
sub
stc
fucomi
jge
pop
jb
sub
push
pop
shr
sbb
mov
lahf
mov
pop
adc
aam
sti
loopne
mov
jns
mov
cmp
out
sarl
cwtl
push
sbb
pusha
mov
lahf
nop
fstps
loop
xlat
ss
bound
cmp
sarb
sbb
movb
add
fiadds
outsb
push
push
cmp
xchg
adc
xchg
lcall
idivl
cmpsl
fstpl
idiv
mov
sti
enter
or
test
loopne
in
cmp
adc
test
and
dec
cs
add
out
xchg
or
test
stos
xchg
mov
insb
out
lods
sbb
fcoml
out
call
fs
jle
xchg
cwtl
outsb
fcomip
dec
sbb
ficomps
xchg
mov
cltd
mov
popa
punpckhbw
sbb
jl
cld
mov
xchg
inc
xor
lahf
inc
mov
push
fcoml
push
push
stos
adc
pop
fistpl
and
mov
int3
stc
ljmp
mov
mov
pop
frstor
mov
xchg
sbb
jg
cmp
pop
or
pushf
cmp
xchg
mov
xor
ficompl
cmp
push
push
cmpl
xlat
mov
clc
bound
inc
pushf
dec
jne
mov
and
xor
sbb
add
ficompl
mov
sti
lret
dec
xchg
aad
ret
jg
sub
cli
xor
inc
and
jne
mov
pusha
mov
imul
cltd
cli
sbb
ftst
das
aad
cltd
out
popf
fdivrs
or
xchg
mov
push
and
fstpt
mov
jbe
mov
or
popa
stc
sbb
mov
lock
pop
lcall
js
cmp
cwtl
push
cli
xor
xchg
lahf
cmp
fildl
inc
js
inc
mov
mov
inc
fistpl
les
outsb
xchg
adc
and
xchg
mov
fwait
and
mov
adc
movsl
jp
and
addr16
sti
pop
mov
cmp
inc
sbb
push
fcmovnu
mov
ficompl
and
fistpl
inc
aas
or
cmp
mov
dec
mov
sbb
jns
insl
xchg
push
mov
data16
dec
ja
je
shrb
call
testb
sbb
int
mov
sti
popf
sbb
sbb
xchg
mov
push
push
jl
cmp
or
inc
inc
sbb
clc
cmp
sub
adc
or
add
cmpsb
mov
ret
lcall
clc
push
in
into
cli
mov
loopne
cwtl
fdivr
jl
lret
rcll
aaa
xlat
adc
sbb
loopne
ret
pop
dec
inc
cmp
repnz
clc
lcall
into
adc
add
mov
lret
mov
jmp
loop
dec
fsts
jne
gs
fcomi
aaa
mov
mov
mov
scas
pop
add
mull
pop
xlat
adc
jae
inc
sbb
fsts
scas
std
and
cltd
clc
lcall
cmc
flds
inc
mov
std
jbe
lds
addr16
push
sti
push
add
ds
mov
jge
daa
or
pop
ja
js
adc
push
jp
cmp
jge
adc
std
or
sbb
or
cmpsb
stc
fstps
neg
repnz
cli
lea
xlat
push
cmp
jns
sbb
push
pop
neg
frstor
aam
or
lret
imul
inc
mov
mov
fcoms
inc
lock
pusha
jp
js
adcb
aaa
mov
jl
or
and
lods
and
shr
int3
jns
mov
xor
pop
or
sbb
add
push
cmp
cld
imul
pop
adc
popf
jge
push
add
je
jb
inc
push
js
addr16
insb
loopne
add
adc
ljmp
xchg
xor
or
test
mov
cli
xor
cwtl
mov
aad
jp
fmull
or
cli
jbe
fimuls
scas
pop
jp
aas
lock
fdivr
fisubl
xor
dec
sahf
mov
push
sub
pop
loope
shlb
outsl
xchg
shrb
and
add
xchg
xchg
sub
xlat
fcmovnu
cld
xlat
into
cmp
addl
sbb
mov
fcomps
cmp
movsb
pop
or
adc
and
inc
stc
adc
icebp
mov
in
and
adc
adc
pop
mov
pop
fldenv
cmp
cltd
insb
lcall
cmp
xlat
xor
popf
mov
in
scas
mov
sbb
aad
mov
ljmp
sbb
push
mov
jl
leave
fnstenv
inc
enter
fdivrs
pop
iret
les
in
pop
xor
fcmovu
and
mov
fdivrs
jle
fsts
lcall
rcrb
xlat
mov
vmread
lods
cmpsl
inc
js
popf
sbb
call
popf
pop
cltd
inc
scas
iret
fidivs
sbb
jae
sbb
or
xchg
rcl
sub
xchg
leave
cwtl
mov
imul
sbb
ss
test
mov
out
pop
sbb
ds
cli
pop
jmp
mov
stos
lcall
push
mov
and
or
aam
mov
add
and
inc
and
cmp
bswap
sbb
jle
inc
popf
pop
lds
int
push
mov
cmpsl
inc
clc
jbe
fcomp
lahf
jl
or
push
push
add
mov
mov
inc
es
scas
pusha
rorb
popf
mov
pop
mov
or
inc
pop
xor
ja
cmp
insb
inc
fs
push
add
clc
addr16
or
and
js
inc
mov
stc
js
inc
pop
fidivl
inc
cmp
sbb
iret
test
in
pop
mov
scas
nop
mov
and
call
adc
add
gs
push
cmp
sbb
cli
andb
lcall
pop
adc
call
add
lds
test
mov
and
jp
pop
mov
pop
push
sti
adc
test
adc
ds
jp
lcall
mov
fmuls
pop
sti
pusha
sbbl
flds
xchg
loopne
sbb
mov
inc
mov
or
sqrtps
std
clc
fidivrs
mov
cltd
xchg
sbb
and
pusha
pop
inc
fcomps
jge
cwtl
das
xchg
std
mov
js
mov
test
cld
xlat
jl
leave
pop
pushf
sbb
loopne
dec
inc
mov
sbb
gs
sbb
call
je,pt
clc
pop
push
cs
shlb
or
dec
dec
sbb
loopne
jle
negb
cmp
sbb
fcomps
and
cwtl
cwtl
out
cli
mov
dec
sahf
push
mov
sub
xchg
cmp
and
cmp
fcomps
xor
or
jl
andl
aaa
cmp
test
adc
flds
push
mov
mov
sbb
fnstsw
cmp
or
mov
aad
jnp
pop
jle
mov
lcall
cmp
cmpsb
pushf
sbb
inc
lret
std
push
jecxz
jecxz
ljmp
sahf
out
cmp
ljmp
jge
clc
fistpll
push
push
std
add
jl
or
sahf
fistps
mov
cmp
jle
pop
mov
int3
lret
movsb
sbb
std
cmp
test
sbb
js
mov
dec
aas
shll
cli
mov
mov
xchg
cwtl
jns
fisttpll
inc
in
sti
popf
push
stc
pop
sbb
or
pop
pop
add
sbb
lcall
sbb
dec
cmp
mov
fcmovb
pop
pop
xor
pop
sbb
fcomps
fwait
jns
movsl
fldl
add
mov
pop
add
sbb
shlb
xor
les
lock
repnz
sbb
pop
in
fsubrs
lcall
jne
mov
fwait
cmp
jl
mov
adc
je
in
sbb
inc
inc
cmp
xor
pop
xchg
lahf
xor
cmp
into
les
adc
jecxz
pushf
out
and
or
mov
sbb
test
repnz
sub
or
jl
jmp
jge
mov
fistl
push
and
mov
call
jp
pop
adc
mov
sti
movsl
cmp
cwtl
and
and
lcall
xlat
divl
adc
sub
sahf
mov
sbb
clc
in
jl,pt
or
cmp
cmp
inc
rcrb
aad
icebp
gs
mov
cmp
stc
ss
sbb
jle
or
mov
xchg
inc
xlat
lret
test
cmpsb
add
test
mov
sub
cli
jne
cmpsb
sbb
scas
out
fnstsw
push
arpl
push
lcall
leave
sahf
out
jae
dec
xchg
in
mov
js
ss
jl
leave
fs
out
fisubrl
xchg
icebp
cld
ss
test
push
popf
sbb
sti
clc
rcrb
inc
fdivrp
sbb
mov
pop
lcall
mov
xchg
gs
jp
cmp
add
add
pop
xor
sbb
idivb
cmp
fistps
cld
xor
fistpl
cwtl
inc
mov
testb
cli
jg
ljmp
sbb
cmp
arpl
push
iret
pop
mov
sbb
and
std
dec
inc
iret
cmp
sti
fistpl
add
dec
push
sub
popf
pop
push
aaa
popf
pop
xchg
inc
cmp
gs
iret
jbe
inc
mulb
add
aam
ds
cmp
imulb
inc
lods
dec
dec
les
jo
shll
cmp
cld
pop
pop
inc
lds
cli
dec
loope
lods
dec
addr16
or
or
sbb
cli
mov
mov
lcall
xchg
mov
ja
stc
cwtl
pop
jns
mov
test
movlps
pushf
inc
lcall
cmpb
fisubrs
stc
rcrb
and
cltd
jae
sbb
inc
seto
mov
pusha
jle
ljmp
xchg
xchg
and
mull
pop
xor
jge
pop
cld
pop
scas
cmp
xchg
pushf
cli
dec
sar
sbb
lret
testb
pop
xchg
jl
decl
adc
les
jae
dec
iret
in
cmp
fs
cmp
ret
cli
addr16
inc
adc
scas
pop
fidivrl
fstl
fsubl
sbb
xor
jns
mov
loopne
pop
testl
pop
std
fsubs
loopne
orb
mov
sbb
nop
jg
push
cmp
cmp
mov
pop
xor
enter
data16
fcomps
cmovs
mov
sbb
roll
pop
dec
arpl
fld
pushf
jp
and
sbb
lcall
arpl
js
mov
fmull
pop
ds
pushf
fstpt
lret
popf
push
stc
cltd
mov
mov
xchg
mov
cmp
add
cld
mov
jle
sub
out
add
jp
int
insb
stos
mov
push
sbb
lds
sti
cwtl
sbb
mov
mov
cli
or
push
js
pop
mov
jne
cmpsb
jle
add
xor
inc
clc
cltd
gs
fisubrs
shr
bound
loopne
out
fstpt
arpl
out
inc
and
sbb
mov
or
repnz
adc
sti
incl
mov
js
and
test
sbb
in
dec
fdiv
pop
dec
xchg
bound
push
mov
adc
dec
push
push
sub
cmpsb
pop
jmp
lea
mov
mov
mov
pop
sbb
sbb
popa
out
jmp
sbb
sahf
daa
cli
jbe
pop
cs
mov
sbb
pusha
cmp
pop
push
push
cmp
add
leave
cmp
mov
cmp
mov
mov
mov
js
mov
xlat
sbb
inc
add
pop
clc
pop
imul
fadds
mov
cmp
into
cmp
fiaddl
stc
fistpl
xchg
add
pop
or
leave
fs
cmpl
mov
cmp
out
cwtl
cli
pop
and
cmp
fimuls
fimull
mov
mov
and
sbb
out
sarb
or
femms
fcmovnb
cld
cmp
cwtl
cmpsb
xor
sbb
push
and
dec
notl
fwait
dec
ficoml
ret
sbb
sbb
jle
jp
xchg
cmp
lds
jg
and
inc
fwait
inc
sbb
rep
dec
daa
in
add
push
pandn
fstpl
mov
sbb
das
mov
fsubs
cmp
mov
cli
cmpb
fidivrs
dec
lcall
and
dec
mov
push
fsubp
sarb
jp
daa
sbb
sbb
fisubl
rcr
cmp
int
sarl
cli
addr16
sbb
mov
nopl
cltd
movsb
mov
cmc
dec
pop
loop
mov
lea
pop
sbb
jge
mov
movsl
sbb
add
fdiv
lcall
cmp
or
inc
arpl
negl
cmp
not
ficomps
mov
xchg
pop
cld
pushf
cmp
stc
fldenv
pop
loopne
dec
test
xchg
cmp
lcall
stc
pushf
ds
jp
cmp
into
leave
jl
sbb
add
pop
xor
adc
adc
fld
mov
sbbl
jg
testl
jle
inc
movsb
cmpb
xchg
gs
mov
inc
sbb
pusha
cmp
cmp
mov
xlat
pop
leave
jge
fstl
and
cmp
fwait
adc
movb
popf
pop
or
pop
and
adc
movsb
sbb
fldl
ds
fdivrp
iret
sahf
push
loopne
sbb
pop
and
mov
and
jnp
add
pop
faddl
sub
mov
fstpl
or
cmpsb
stos
xlat
dec
fsubs
pop
mov
mov
std
sbb
ja
cwtl
xchg
jge
mov
xchg
pop
mov
mov
mov
popf
xlat
mov
adc
adc
pop
popf
negb
dec
or
fcomps
and
mov
and
movsb
sub
push
pushf
pop
mov
mul
fistpl
std
and
aas
in
inc
or
jge
adc
adc
cld
ficoms
add
push
jl
mov
clc
rclb
sbb
push
sbb
cmp
insb
sbb
xor
or
cmp
sbb
bound
or
cmp
sahf
push
aaa
cmp
xchg
jo
jmp
sti
sahf
adc
adc
test
jns
pop
cli
adc
cmp
sbbb
sarl
mov
pop
das
inc
cli
mov
popf
mov
pop
sbb
lea
push
popa
mov
sbb
lcall
add
sub
scas
and
jle
add
xchg
jl
mov
push
pop
pushf
sub
mov
mov
inc
addb
pop
mov
adc
mov
mov
movsb
cmpsb
cmp
inc
aas
push
push
das
sbb
lahf
int3
mov
test
pop
mull
popf
cwtl
sbb
pop
push
push
cmp
push
mov
pop
loope
pop
pop
mov
mov
std
shlb
mov
in
inc
std
or
sbb
lahf
push
inc
pop
cmp
pop
mov
cmp
mov
ljmp
lcall
xchg
stc
pushf
and
inc
add
add
dec
mov
lcall
sahf
aaa
xchg
xor
jbe
and
call
fidivrs
popf
rcrb
sub
ss
dec
add
jg
adc
xlat
leave
orb
enter
sbb
js
add
or
sbb
adc
les
pop
cltd
les
mov
and
inc
out
mov
sbb
sbb
lcall
icebp
fistpll
fisubl
negl
std
inc
jns
movsb
add
loopne
inc
clc
shll
sbb
sbb
pop
cli
mov
sbb
pop
mov
adc
std
loopne
in
sbb
movsb
aad
cmp
pop
sbb
ficomps
es
out
pop
jle
stos
iret
repz
jl
push
pusha
adc
and
popa
push
sahf
mov
clc
ficoms
push
inc
cmp
inc
lds
pop
dec
xchg
sub
jno
ds
ficoml
mov
sahf
dec
xchg
cltd
bswap
cwtl
cltd
and
popf
pop
cmc
cmpsb
sbb
pop
jle,pn
cmpsl
shll
fdivrp
ljmp
stc
pop
jnp
mov
sbb
stos
inc
sbb
add
or
jp
lcall
cmp
jecxz
inc
lea
xchg
sti
cmp
xchg
jae
subl
sbb
icebp
sahf
aas
sbb
mov
notrack
sub
loopne
add
pop
sbb
adc
xchg
sarl
pop
adc
fstpt
es
lahf
cli
sbb
cmp
mov
cld
mov
cmpsl
jmp
mov
mov
popf
push
sbb
popf
shlb
pop
dec
sbb
mov
andl
adc
and
std
stos
ja
fs
or
idivl
cmp
test
xlat
dec
into
xor
mov
fildl
popf
pusha
or
add
push
mov
leave
cli
cwtl
cmpsl
add
scas
ficompl
scas
mov
rcr
gs
xchg
pushf
mov
cltd
pop
dec
enter
lcall
mov
inc
js
fistps
sbb
adc
and
fidivl
in
test
sbb
push
sbb
outsl
leave
pop
xchg
xchg
and
lcall
add
xor
fstpl
and
repz
cmp
push
pop
and
shrl
mov
pop
loope
mov
rcl
jb
lret
xchg
jns,pt
stos
mov
xlat
int3
cmp
sbb
mov
repnz
fdivr
xlat
adc
mov
inc
or
mov
ljmp
pop
ja
fwait
mov
insl
jle
rcr
aas
pop
jp
cli
xlat
fdivrp
cmp
adc
negl
pop
rcr
adc
mov
clc
sbb
pusha
jp
pop
inc
sarl
ljmp
sbb
out
pop
or
aam
cmp
cmpsl
add
int
sub
add
shlb
sahf
sbb
xchg
mov
mov
pop
and
jl
mov
popl
inc
mov
sti
sbbl
pop
popf
neg
fidivl
aam
aaa
add
jg
jle,pt
ds
in
clc
and
nop
pusha
sbb
pop
jns
sbb
daa
add
out
sbb
mov
sarb
xor
pop
xlat
ds
add
mov
push
divl
fsubp
sahf
cmp
sbb
cmpb
and
addr16
cmp
pop
sbb
and
clc
cmp
sar
adc
popa
mov
lds
pop
pushf
fistpl
stos
les
sbb
aam
jo
add
sbb
xlat
movb
std
popa
in
movsl
lahf
add
jmp
xchg
shll
hlt
sbb
cmpsl
mov
sti
cmpsb
adc
leave
pop
fisubs
mov
cmp
mov
xchg
xchg
sahf
pop
fcmovnu
loopne
jl
test
cmp
pop
sbb
js
push
loopne
aas
jge
and
daa
lret
aam
add
sbb
ja
sbb
jmp
sbb
cmp
mov
sahf
mov
popf
cmp
push
add
fdivrl
xchg
xlat
js
mov
ret
test
pop
xchg
or
and
lds
gs
int3
inc
arpl
xchg
cmp
idivb
enter
push
or
cmp
std
fdivr
sbb
lret
stc
lret
sbb
movsb
aas
test
pop
cmpsl
out
push
jl
and
jns
lret
push
cmc
inc
in
pop
lds
xor
inc
sahf
sub
pop
push
cmp
popf
push
and
in
pop
mov
bound
cmp
iret
cmpsl
and
fsubp
pop
jmp
sbb
mov
mov
sbb
mov
and
sti
inc
xlat
ficompl
outsb
adcb
sub
inc
call
fistpl
or
out
cmp
js
fdivrp
fisubs
aad
addl
mov
sbb
jge
rclb
repnz
sarb
sbb
adc
frstor
popf
lcall
cmp
andl
fcomps
dec
sbb
pop
jle
repz
adc
add
in
inc
cmp
mov
lret
mov
jle
dec
cmp
sbb
adc
lcall
mov
cwtl
dec
mov
test
and
sahf
sub
aad
mov
adc
sbbb
fcmovu
lcall
stos
inc
sbb
inc
sahf
les
mov
cmp
pop
and
jp
xchg
adc
cs
negl
sahf
loopne
cmpsl
fstpt
xlat
and
jl
and
sbb
add
gs
sbb
lcall
arpl
fidivrs
ljmp
mov
sbb
cltd
cmp
leave
jnp
ficompl
push
mov
mov
or
mov
and
test
fsts
xor
pushf
test
add
pop
adc
cltd
adcb
xor
pushf
add
adc
push
sbb
inc
sbb
xchg
xor
sbb
or
ds
jge
pop
pop
push
stc
xor
dec
cwtl
push
scas
jns
out
mov
mov
pop
mov
mov
ja
lea
sub
loopne
fdivrl
lock
add
mov
outsl
mov
or
mov
popf
pusha
pushf
jg
cli
sbb
and
cltd
xchg
pop
jb
sbb
jns
ljmp
ficoml
push
fstpl
cmp
pop
mov
fs
mov
loopne
cltd
push
pop
rcrb
add
add
dec
into
scas
pop
adc
add
in
and
jnp
sbb
fstl
mulb
cmp
incl
xchg
mov
pushf
and
sbb
jae
dec
rorl
fstpt
sbb
xlat
add
push
leave
add
cmp
mov
js
sbb
neg
fldcw
mov
cmp
sahf
mov
mov
adc
or
cmp
xor
pop
xchg
arpl
fimull
mov
fnstsw
arpl
push
cmp
js
mov
sub
movsl
lcall
cmp
sahf
fs
fs
in
mov
add
mov
xlat
jns,pt
mov
mul
popa
cmpsb
adc
jbe
fldz
cmp
sbb
dec
push
push
sbb
mov
jecxz
sbb
loopne
cmp
mov
idivb
cltd
sbb
push
push
push
popf
push
and
cmc
testb
jl
xchg
mov
jnp
push
pop
stc
ds
xchg
sarb
mov
test
jns
jp
pop
adc
jle
fiadds
mov
add
mov
and
sahf
out
pop
cmp
push
clc
fimuls
mov
adc
les
xor
out
fldenv
aaa
mov
lea
mov
inc
repz
pop
clc
cmp
pop
jle
mov
xchg
mov
std
cld
fidivrl
lcall
in
dec
mov
cmp
xlat
mov
jbe
pop
out
sbb
push
mov
in
cmpsb
mov
in
fcoml
add
xchg
pop
shlb
fidivrs
mov
sbb
inc
or
bound
fstpl
hlt
mov
mov
lahf
mov
mov
sbb
cltd
lods
xchg
fldl
xchg
loopne
arpl
fidivs
imul
mov
pop
inc
sbb
mov
fists
movsl
fsts
movb
les
inc
in
call
sub
mov
scas
jle
dec
adc
cltd
nop
and
push
cmp
jae
ss
pop
test
or
and
ljmp
outsl
inc
test
cwtl
ficompl
inc
repnz
pushf
adc
es
dec
pop
fwait
and
cmp
mov
pop
dec
mov
mov
or
sahf
cltd
adc
loope
in
rcrb
loopne
js
mov
pusha
pop
clc
lcall
inc
mov
add
adc
push
jp
in
mov
fcompl
iret
movsb
int3
jge
fstpl
fiaddl
sub
push
mov
mov
imul
pop
lcall
cmpb
cltd
inc
inc
add
lcall
out
cwtl
sub
xchg
fisttpl
cmp
push
fdivl
lea
rcrl
sbb
push
cmp
addb
pushf
sbb
or
adc
cmp
lret
sbb
out
inc
mov
lret
out
daa
fmuls
adc
adc
mov
add
rcrl
cmp
sbb
data16
jae
std
jl
test
cmp
pusha
shl
xchg
cmpsb
aam
jle
push
sub
inc
arpl
xchg
pusha
cmpsb
cwtl
shl
adcb
pop
sti
mov
fimuls
incb
in
cwtl
sbb
fisttps
xchg
adc
faddl
inc
xchg
sti
sbb
dec
add
mov
pop
mov
jns
mov
clc
cmp
jmp
popa
cwtl
rcrl
fmuls
xchg
pop
in
pop
mov
mov
or
or
inc
stos
sbb
push
out
sbb
in
js
jno
stc
jno
pop
jp
adc
jle
lcall
loope
popa
jl
sbb
and
scas
jg
shrb
cmpl
pop
in
fidivrs
mov
cmpsb
ret
ja
jge
dec
inc
pushf
frstor
push
fisttpl
popa
inc
mov
ja
jns
fdivrl
fiaddl
icebp
pop
inc
clc
lcall
fcoml
mov
addb
pop
out
xchg
mov
dec
adc
mov
in
lcall
inc
cmp
and
or
divl
xchg
pop
mov
loopne
mov
or
movsl
pop
fisubs
mov
sbb
clc
arpl
std
pop
cmp
lret
dec
pusha
push
xchg
outsb
fst
ret
mov
jae
mov
push
mov
cwtl
pusha
jp
inc
mov
les
cmc
pop
push
pop
cmp
gs
lcall
pop
aaa
fidivrl
sbb
and
and
fisttpll
or
mov
ficomps
sub
xchg
fwait
shlb
jl
sbb
or
fsubs
sbb
scas
fmull
jle
jl
ds
sbbl
lcall
push
pop
mov
sbb
jge
cwtl
xchg
push
dec
jg
flds
mov
packsswb
out
pop
pushf
jge
mov
in
popf
sbb
lds
mov
sbb
cwtl
insb
mov
lds
mov
sahf
push
jp
clc
outsl
or
rorl
push
xlat
cmp
std
arpl
js
in
jp
and
cmp
mov
dec
rcrb
rclb
mov
cmp
push
and
cmp
fistpl
pop
loop
xchg
and
push
cli
xorb
adc
adc
adc
add
add
js
push
addr16
jl
mov
sbb
push
mov
pushf
inc
pop
fdivrp
lds
cld
notl
mov
testl
dec
jg
mov
inc
lahf
jns
movsb
rcr
sbb
into
into
or
fstpt
adc
sarb
pop
sbb
mov
or
ficoms
out
pushf
test
cli
fs
cmp
pop
cmp
cmp
mov
jge
sahf
leave
sbb
out
push
mov
insb
mov
cmc
push
jg
add
idivl
sbb
cltd
pop
mov
and
lahf
push
popa
inc
cmp
cmp
fprem
xchg
jle
xor
pushf
and
adc
push
dec
fistl
jp
xchg
sahf
pop
mov
movsb
dec
jge
outsb
dec
sahf
sbb
data16
inc
push
jg
inc
push
mov
shlb
xchg
push
cwtl
cmpb
cmpsb
aad
cmp
test
sbb
xlat
decb
test
lret
stc
fstl
imul
leave
ljmp
stc
call
mov
or
mov
fs
lcall
test
mov
sbb
cmp
mov
add
dec
pop
cmp
xchg
sahf
sbb
sbb
enter
mov
jmp
cli
repnz
push
sahf
loopne
push
frstor
mov
clc
sti
sbb
cmp
fisttpl
mov
lahf
push
sbb
les
and
sbb
cli
imul
adc
pop
mov
adc
and
sti
test
clc
and
clc
sbb
adcb
cmp
add
cmp
push
add
push
pop
cmp
int
xchg
pop
dec
pop
sub
enter
mov
imull
sbb
out
cld
pop
out
sbb
sub
loopne
gs
cld
inc
je
cmpsl
sbb
push
jle
push
loopne
int3
mov
pop
sbb
or
pusha
jmp
xchg
sahf
mov
jle
pop
fcmovb
movsb
mov
out
pop
stc
cli
ds
test
inc
jns
popf
clc
sbb
sbbl
test
mov
jae
sbb
movsl
sbb
and
mov
rol
std
loopne
pop
ss
stc
sbb
cmp
and
stos
fsubs
xor
in
xchg
cwtl
out
mov
and
sbb
push
decl
cmp
shlb
gs
ljmp
fistpl
enter
loopne
sbb
push
movsl
aas
pusha
cmp
push
xchg
dec
mov
out
cli
push
and
inc
inc
sbb
bound
sarl
ljmp
cmp
cmpsb
mov
mov
cmp
jns
lcall
stos
push
out
sti
pop
adc
dec
jbe
sbb
in
cmp
sbb
adc
std
fcomps
cmp
dec
popf
cmp
outsl
or
dec
fdiv
mov
sub
ljmp
xor
push
std
in
jl
lea
std
bound
push
test
adc
push
xor
es
jl
adc
bound
adc
into
fiaddl
jb
gs
in
stc
out
jmp
fimuls
dec
sarb
lret
out
push
jge
insb
pop
inc
push
cmp
cmp
or
push
push
pop
pop
lcall
adc
adc
sbb
or
fildl
cmp
mov
js
sub
adc
bound
addl
cmp
push
daa
pop
jp
jl
fistpl
inc
popf
sub
ljmp
cwtl
jmp
dec
pop
and
cmp
arpl
mov
clc
pop
mov
sahf
pop
sbb
sub
inc
outsb
std
xchg
loopne
clc
sarl
ss
inc
cmp
fcomps
jp
mov
pop
and
dec
out
or
or
inc
mov
out
sbb
pop
adc
pusha
lcall
fdivrp
mov
sti
pop
sbb
pop
jge
dec
or
cld
xchg
inc
les
mov
sbb
or
push
mov
imul
std
cmc
jnp
and
js
or
sbb
movl
mov
mov
xchg
sub
fdivrs
xor
mov
fcomps
and
mov
rorl
mov
enter
movsl
jp
sbb
pop
inc
idivl
cltd
in
push
sbb
mov
xchg
jge
adc
inc
inc
cmp
and
loopne
inc
cld
adc
idivl
xor
ficoms
sbb
dec
clc
ficomps
sti
das
lcall
cmp
mov
cmovle
pop
fdiv
aas
xlat
add
dec
popf
mov
std
jge
pop
sbb
jl,pt
addr16
cwtl
lea
pop
into
clc
fmuls
jge
fisttpll
ret
mov
xchg
adc
pop
pop
faddl
pop
andb
inc
pop
cwtl
pop
pop
fnsave
mov
inc
pusha
lods
lcall
mov
add
or
jl
or
pop
rcrb
inc
mov
std
data16
sti
arpl
mov
js
jge
notl
gs
add
and
cmp
fstps
mov
mov
test
and
adc
sbb
cltd
cld
mov
daa
outsb
pop
scas
test
frstor
cmp
pop
lea
jl
mov
xor
cmp
sbb
fistpl
dec
in
movsb
jecxz
mov
mov
mov
sbb
stc
loopne
sbb
push
cli
fsubrs
outsb
sbb
pop
in
pop
xchg
jge
jbe
mulb
add
sbb
addl
lds
mov
jle
or
sbb
pop
out
pop
test
js
jae
mov
and
popl
imull
cmp
xchg
mov
out
std
fcompl
push
jle
sbb
orb
pop
push
in
pop
cwtl
ficomps
and
dec
mov
rcrb
cmc
hlt
push
sahf
test
daa
enter
mov
cs
adc
rclb
sbb
cmpsl
mov
out
faddl
and
mull
push
ds
sti
roll
mov
mov
adc
jp
or
pushf
test
inc
cwtl
fadds
test
push
sti
adc
jl
leave
in
sbb
data16
enter
les
ds
call
mov
xchg
push
out
not
pop
in
cmp
pop
pop
jmp
lcall
pop
das
inc
and
jge
cmpsb
popf
cli
pop
push
rorl
pushf
adcb
stc
loopne
push
cli
mov
lds
add
pop
mov
cmp
test
out
iret
pop
pop
mov
cmp
push
jns
adc
mov
outsl
stos
sbb
sub
pop
sahf
jge
mov
mov
cmp
jmp
xchg
sbb
cmp
mov
sbb
and
std
jns
push
in
xor
jnp
or
dec
jb
sbb
mov
ret
sub
flds
fisttps
adc
mov
sbb
pminsw
pop
jle
jae
mov
je
cmp
jle
fildl
and
inc
lcall
fstps
fimuls
jg
push
aad
dec
inc
sbb
cmc
cmp
cwtl
fwait
pushf
inc
pop
sbb
sar
pop
into
sub
rcrl
pushf
sub
cwtl
jge
fsub
jl
scas
push
xchg
scas
add
or
mov
sbb
sahf
ficomps
cmpsb
mov
cli
scas
inc
pop
mov
sub
fcomp
idivl
pushf
adc
sbb
sahf
jae
sbb
sbb
sbb
xor
stos
sbb
jns
loopne
sarl
push
jge
xchg
jo
in
das
in
adc
lahf
cmp
mov
sbbb
jl
clc
cld
push
fldenv
lahf
inc
push
sub
in
add
stc
loopne
fcomp
mov
fidivrs
inc
fisubrl
jge
add
push
or
repnz
push
cmp
out
mov
mov
pushf
mov
ds
xor
push
or
mov
adc
aam
cli
cvtps2pd
fstps
sbb
mov
jb
subb
mov
mov
jmp
cltd
xchg
adc
jge
xchg
call
loopne
adc
mov
cld
mov
or
pop
mov
adc
sbb
mov
fisttps
mov
loopne
and
movl
fistpll
xchg
jo
mov
jp
pop
adc
shrb
add
push
cli
xor
je
push
cmp
cmp
and
mov
pmuludq
shrb
outsb
jae
lahf
xchg
push
dec
push
int3
aad
out
rol
cmpl
mov
mov
inc
inc
sbbb
fdivr
add
cmp
xchg
mov
arpl
jle
in
adc
mov
popf
hlt
movsb
pop
stos
addl
lds
scas
test
clc
sarb
xor
xchg
ss
test
pop
xchg
add
cmp
push
inc
push
cmp
cld
test
mov
xor
xlat
mov
mov
sbb
popa
sbb
jle
fdivrs
lahf
xchg
push
cwtl
fs
mov
sbb
insl
mov
fcomps
xor
in
sahf
inc
sbb
xlat
cwtl
sbb
and
bound
cmp
lcall
into
push
dec
frstor
ss
js
xlat
jp
sbb
and
repz
xchg
sbb
lods
mov
fisttpll
jp
jl
add
outsl
cmc
sbb
pop
pop
xor
pop
xchg
pop
cmp
subb
push
jbe
and
add
sahf
cwtl
loopne
add
movsb
mov
fstpl
mov
popf
aam
test
sahf
jmp
xchg
gs
sti
cltd
fnstsw
fs
inc
mov
sahf
cltd
je
shrl
cmp
negl
movsb
cld
aam
jo
or
popf
pop
mov
cmc
mov
lea
xlat
push
pop
test
scas
mov
push
ljmp
pop
mov
push
in
inc
and
inc
adc
adc
cwtl
fmuls
in
adc
clc
icebp
cmp
mov
fstpl
dec
pushf
test
scas
cmpsb
sub
adc
or
pop
adc
and
mov
stc
pop
sbb
sbb
sbb
loopne
insl
xchg
mov
or
test
into
inc
cmpsb
adc
stos
gs
sub
or
in
cmp
or
movsl
inc
loopne
mov
cmp
xchg
outsb
sub
push
pop
mov
cmp
and
push
lods
stos
sti
fdivrs
push
cmc
xor
in
sbb
enter
and
and
sbb
loopne
and
cmc
xchg
add
mul
ficomps
out
and
sub
sbb
cmpsl
gs
add
jmp
in
mov
and
cwtl
push
js
fs
jl
push
inc
imul
rcrl
aaa
or
iret
in
pop
test
cli
and
jge
stc
cmp
add
pop
jne
jp
xchg
lea
adc
xorb
loopne
and
add
incb
sbb
jle
sbb
cwtl
fs
xchg
push
mov
mov
daa
xlat
fcoml
pop
pop
xor
lods
cltd
pushf
das
mov
inc
mov
push
pop
lods
leave
push
or
subb
cwtl
pop
int3
cmp
xchg
pop
pop
pop
lea
adc
mov
je
lea
xor
mov
and
push
sbb
ds
sbb
pop
cs
sahf
pushf
je
push
into
cmpsb
adc
jp
sbb
mov
sbb
xlat
inc
pop
dec
pop
and
repz
adc
repnz
addb
out
push
cld
pop
inc
add
ds
push
cmp
xchg
popa
push
ficompl
clc
fistpl
mov
cmpsb
pop
cmp
adc
lds
mov
xchg
jle
mov
cmp
aam
pop
dec
xor
jns
ljmp
std
mov
cmpl
mov
inc
mov
in
jmp
mov
push
pop
mov
cmp
xchg
or
push
fisubs
fstpt
leave
jns
lcall
adc
popa
pusha
testl
sbb
testb
test
jb
shll
stc
lcall
sbb
inc
cmp
pop
ret
div
mov
mov
jl
popf
mov
mov
jmp
pusha
pop
lcall
imul
cmp
adc
cmp
xchg
or
fcomps
std
fdiv
mov
es
inc
sbb
cltd
adc
jnp
test
movsb
adc
sahf
mov
jge
cld
sti
or
sbb
inc
cltd
cmp
js
insb
jns
push
inc
adc
pop
mov
cmp
inc
fsubl
mov
int3
testl
push
andb
xchg
lcall
inc
adc
sub
jge
fs
push
ficompl
pop
sbb
pop
gs
js
pop
xor
pushf
xchg
fs
in
jle
push
push
mov
sbb
xlat
cwtl
bound
imul
inc
jbe
lods
sahf
dec
sarl
cld
pop
out
cmp
in
inc
push
mov
fstpt
fcomps
inc
sti
nop
inc
mov
ss
mov
jae
sbb
mov
dec
sbb
jge
cli
sub
into
push
notl
inc
cwtl
call
sbb
sahf
inc
mov
push
mov
imul
jbe
mov
dec
pop
push
mov
fidivrs
adc
mov
or
fdivrl
and
arpl
fsubr
sahf
mov
cld
push
pushf
jecxz
cld
mov
add
pushf
inc
adc
jge
or
rorl
sbb
sub
negl
std
sahf
lcall
cmpb
clc
pop
inc
popa
mov
sbb
aas
fldl
rol
addb
add
test
pop
and
cmp
repnz
pop
clc
icebp
xlat
mov
mov
xlat
xchg
mov
fsts
fildl
mov
in
pop
sbb
mov
les
dec
inc
cmp
xchg
pop
xchg
int
dec
jle
ffree
sbb
xchg
xchg
and
mov
or
xlat
inc
lcall
imul
push
jnp
fstpt
scas
sbb
mov
xchg
xchg
daa
xor
outsb
push
push
jae
ds
sahf
add
or
jp
pop
inc
xlat
loopne
xorb
xchg
xchg
pusha
adc
xchg
pop
mov
adc
gs
clc
mov
loopne
pop
idivl
cmpsl
push
fcoml
mov
test
xchg
out
pop
das
fs
in
add
adc
jle
enter
cwtl
sbb
cmc
cltd
mov
cmp
daa
xchg
mov
psubq
jns
mov
cld
call
pop
pop
push
jmp
sarl
popa
push
fiaddl
mov
lcall
mov
dec
sbb
pop
cwtl
or
push
adc
repnz
in
push
and
stc
fstp
sahf
inc
sbb
add
sub
js
fbld
dec
cmp
push
cmp
sbb
mov
and
pop
mov
adc
lds
pop
jns
add
xchg
pop
pop
mov
sbb
sbb
xor
pop
add
mov
std
sbbb
mov
pop
adc
mov
js
or
fnstsw
cmp
fldcw
or
leave
mov
out
xor
sbb
xchg
cmp
sbb
mov
mov
add
mov
and
fstpl
call
js
fiaddl
xlat
mov
jle
mov
inc
imul
mov
push
pop
mov
imul
fstl
lret
repnz
xchg
xchg
sbb
jg
adc
sbb
jp,pt
pushf
push
xchg
mov
fstpl
inc
fcmovnbe
mov
xchg
xchg
mov
std
and
sbb
rcrb
dec
fwait
adcl
mull
xchg
sbb
xchg
vmwrite
adc
iret
xchg
cld
fldl
mov
cmp
mov
rol
cwtl
jno
das
push
fsts
sbb
adc
mov
adc
dec
pop
push
mov
pop
stc
sbb
jge
pop
cmp
adc
pop
inc
fsubs
gs
mov
test
inc
imul
mov
stc
das
fiaddl
outsl
mov
ss
test
add
fwait
call
rcl
mov
stos
cmp
adc
scas
cmpsl
daa
jo
enter
fs
pusha
jecxz
xchg
mov
mov
mov
cli
sbb
inc
sbb
outsl
aad
adc
add
mov
ja
lds
fcom
js
daa
rolb
and
jp
pushf
inc
fldl
into
dec
cld
incl
pop
xchg
mov
popf
clc
xchg
mov
mov
pop
mov
fnstcw
or
cmp
mov
mov
aaa
adc
cmp
into
mov
insb
subl
popf
fwait
push
mov
ss
shll
sbb
lret
fld
popf
pop
fimuls
fstl
adc
and
stos
push
pop
mov
sbb
mov
sbb
lcall
mov
fidivrl
fnstcw
and
add
mov
movsl
pop
and
stos
dec
jle
adc
sbb
fiaddl
cmp
mov
pop
aad
pusha
fisubs
cli
icebp
mov
loopne
stos
cli
ljmp
pop
sbb
ja
mov
pusha
fiadds
mov
cmpsb
mov
sbb
cmp
or
in
popf
cli
cwtl
mov
out
cs
sbb
in
lcall
and
inc
hlt
inc
lahf
or
arpl
mov
fs
js
mov
or
sub
std
add
stc
ss
cmp
rcrb
in
jle
and
and
idiv
fdivrs
das
testl
repnz
fcmovu
pop
cwtl
inc
lcall
adc
push
adc
jl
fnstcw
adc
xchg
notb
pop
adc
adc
and
xor
xor
mov
inc
mov
js
add
in
jl
adcb
pushf
sar
xchg
and
or
sti
cmp
pop
jb
cmpsl
icebp
and
cmp
or
sbb
sarl
popf
xor
fisttps
mov
out
jnp
mov
push
fcmovnbe
or
jns
jae
or
or
cli
push
sahf
popa
bnd
sahf
pushf
adc
cmp
call
xor
pop
cmp
cmp
inc
xlat
push
das
jb
dec
and
fwait
mov
mov
sbb
mov
out
and
pop
mov
in
cld
cmp
cmp
sti
lcall
dec
outsb
add
sahf
pushf
push
rcll
pop
fcom
outsb
pop
cmpb
shld
inc
jmp
cmc
cli
xor
mov
mov
daa
and
leave
cmp
adc
lcall
ljmp
inc
sbb
sbb
fildl
pop
jp
stos
mov
in
jle
pushf
pop
pop
and
fstl
sti
into
xchg
sahf
std
mov
cmc
cmp
pop
mov
push
sbb
push
mov
mull
pusha
cpuid
loopne
rolb
sar
loopne
pushf
adc
lods
dec
or
outsl
aad
mov
cli
xchg
or
pop
push
divl
xchg
movsl
mov
cli
call
and
out
fisubs
notb
rolb
decb
adc
insb
fmulp
insb
mov
sbb
fadds
sarl
mov
fcompl
pushf
mov
xchg
jge
or
pop
mov
mov
push
and
cli
mov
leave
clc
sarb
js
push
pop
test
and
xchg
xchg
dec
push
arpl
push
gs
pop
jp
adcb
adc
sbbl
jns
cmp
cwtl
lret
mov
inc
std
sbb
sbb
jp
pop
iret
add
and
rorb
mov
xchg
lcall
pop
call
pop
sbb
sub
loop
sbb
cmp
mov
inc
sbb
punpckhdq
pop
pop
fmul
loopne
cmp
sbb
sub
int3
movd
mov
mov
adc
pop
jl
push
repnz
js
push
mov
fcomp
je
xchg
push
pop
rolb
and
shlb
inc
int3
fs
stmxcsr
inc
mov
inc
aaa
stc
aas
adc
adc
xchg
mov
sbb
jle
clc
jns
les
pop
add
pop
idivb
test
sbb
cmp
orb
loopne
cmpsb
fnstsw
divl
fimuls
push
push
loop
sbb
pop
xorl
faddl
popf
inc
mov
inc
data16
cli
js
push
sbb
sarl
fsubrl
dec
paddsw
lds
pop
clc
cmpsb
pushf
shrl
pop
inc
xchg
addl
xchg
enter
jl
jne
xchg
fidivrs
pushf
push
inc
lods
xor
jmp
sub
loopne
inc
inc
into
sar
mov
pop
add
jge
cltd
leave
fidivl
loopne
popa
adc
pop
clc
fstpl
sbb
mov
jl
dec
pop
loope
std
pop
lea
cmp
pop
adc
jl
popf
mov
pop
cmpb
and
add
jnp
xchg
into
jecxz
bswap
sahf
pop
adc
rcrl
jns
stos
fcmovne
cli
das
mov
pop
push
js
add
sub
xchg
jge
cmp
mov
pushf
out
pushf
mov
das
sbb
sbb
adc
pusha
outsb
test
xlat
ficoms
inc
mov
mov
or
xor
and
cmp
call
cltd
cmp
add
cmp
mov
inc
test
lods
pushl
scas
xor
stc
and
sbb
sbb
add
pop
push
in
jp
pop
shrl
mov
add
leave
mov
js
dec
and
mov
push
popa
out
das
cmp
xlat
mov
pushf
push
adc
pop
cmp
lret
movsb
jle
dec
mov
cld
stos
adc
daa
out
or
cmpsl
ljmp
cld
jmp
and
rcr
mov
jnp
test
xchg
push
mov
ss
sub
xchg
pop
or
flds
rcr
orb
jge
adc
pop
pop
pop
cld
xchg
push
sti
inc
je
or
cmp
xlat
mov
in
cmpsb
sar
popl
gs
js
pop
sbb
mov
shl
dec
sbb
inc
and
dec
pop
aas
int
jl
push
enter
dec
fdecstp
mov
fimuls
es
adc
cmp
cmp
pop
mov
or
sahf
popa
xor
push
jl
sti
mov
pusha
scas
negb
inc
loop
add
cmc
cmp
call
or
frstor
idivl
int
sbb
aas
movsb
outsl
loop
test
pushf
push
in
cld
ss
mov
daa
stos
push
je
or
sbb
sub
leave
out
ds
clc
lret
dec
lcall
xchg
inc
scas
and
jb
xchg
aad
sbb
repz
out
jns
arpl
scas
xchg
inc
pusha
and
jb
cwtl
mov
loopne
inc
sub
mov
and
fnstenv
add
cmp
cmpsb
or
loopne
movsb
in
cltd
ficomps
push
adc
sbb
rol
pop
xchg
jle
leave
mov
ret
add
es
ffree
shll
and
data16
pop
sub
scas
dec
lds
mov
decb
popf
adc
into
mov
push
fists
jmp
fnstcw
lahf
and
cmp
xchg
mov
notl
enter
andl
sbb
sbb
cmp
sarb
push
jno
push
sar
repnz
and
xchg
sbb
scas
or
push
fbstp
fcompl
adc
push
aas
js
inc
pusha
cmp
adc
pop
mov
or
enter
mov
add
xchg
cmp
pop
rcll
dec
es
fmull
sbb
dec
loopne
sti
ljmp
pop
cmp
lock
es
inc
fwait
mov
fsub
movsl
and
pop
xlat
sbb
and
pusha
inc
frstor
mov
out
sahf
lcall
xchg
flds
xor
out
pop
pop
inc
cmp
xchg
sbb
lret
fdivrl
fcmovu
sti
xlat
cmp
sbb
add
inc
and
loop
cmp
gs
and
sbb
mov
cmp
call
mov
push
dec
and
sarb
shl
and
pop
cmp
and
sbbl
out
sar
pop
cmp
ds
arpl
ja
mov
cmp
adcl
cmpsb
std
sti
inc
leave
cmp
fildl
add
out
std
fisttpll
and
jge,pt
sahf
mov
mov
or
fdivl
pusha
call
stc
aas
cmp
es
adc
mov
xchg
mov
daa
out
xor
test
adc
cmp
movsb
ret
fstps
mov
lock
enter
cs
pop
fidivrl
les
add
push
mov
fsub
pop
sbb
std
sbb
cltd
mov
addr16
std
and
mov
popf
aam
dec
js
add
fcoms
cmp
push
push
jbe
cmc
addr16
insl
nop
and
cmp
fidivrl
stc
fst
addr16
fst
inc
pop
and
cmp
ret
sbb
inc
ret
push
xchg
pushf
popa
xor
mov
push
lret
or
adc
imul
adc
daa
popf
lcall
pop
rcrl
dec
stos
sbb
push
add
xchg
in
fldenv
mov
fucomp
mov
mov
jno
dec
jns
gs
popf
test
ds
popa
sub
sarb
mov
ret
add
cmc
fildl
inc
jmp
stc
scas
push
xchg
push
and
popf
dec
fsubrl
mov
scas
loope
jp
test
push
jmp
sahf
lock
xchg
pop
or
sbb
mov
pushf
sbb
pushf
sahf
int
mov
cli
inc
pop
jge
push
fmul
add
push
push
rcll
xor
nop
mov
sbb
mov
mov
in
lcall
push
mov
popf
aaa
adc
jmp
enter
sub
and
pop
jmp
rolb
in
jge
sahf
inc
decb
hlt
pop
or
mov
iret
les
jno
nop
sbbb
xlat
pop
mov
jmp
es
fldt
sbb
roll
movsl
mov
add
iret
icebp
jns
sbbb
fildl
leave
mov
mov
push
fidivrl
xchg
int3
stc
fcmovb
xorb
shll
adcb
xchg
mov
adc
xchg
mov
mov
xchg
hlt
adc
mov
jns
arpl
jb
fisttpll
dec
cmp
jmp
jae
idiv
fidivrl
imul
movsb
mov
push
sar
clc
rcrb
mov
cmp
push
cmp
pop
jae
gs
sbb
js
mov
pop
fidivrl
js
popf
lds
std
add
push
and
mov
js
and
push
leave
inc
sbb
mov
sarb
inc
dec
pop
mov
xlat
fstps
fists
sti
mov
cli
xlat
fidivrl
or
and
pop
mov
cmp
add
or
lret
imul
mov
inc
clc
shl
and
iret
inc
stc
add
xchg
xlat
sbb
jle
mov
andb
rolb
sbb
adc
mov
jp
rcll
cwtl
loopne
or
outsb
movsb
stc
sbb
cltd
sbb
sbb
sahf
xor
and
xchg
popf
fucom
mov
mov
jp
adc
push
testl
pop
adc
inc
mov
inc
xlat
clc
pop
add
add
fsts
mov
lcall
xchg
mov
popw
mov
cmp
sbb
fstpt
xchg
push
jb
pop
sti
pop
pop
aaa
pop
jle
mov
cwtl
rorl
jl
sbb
fisttpl
pop
fcomps
ja
add
sbb
pop
ljmp
clc
sbb
xchg
cwtl
mov
sahf
pop
or
sbb
std
fistpll
jle
mov
and
cmp
dec
mov
adc
loopne
sbb
fidivrl
movsb
inc
je
decb
inc
or
inc
sbb
iret
psllq
rcrl
jns
aam
cmp
xchg
jecxz
push
dec
mov
cwtl
rsqrtps
xlat
sbb
cwtl
or
movb
insb
add
fildl
out
pop
cmp
cmp
inc
and
cli
rcrb
pusha
inc
out
sbb
fsubrs
or
std
cltd
xchg
sbb
inc
cmp
mov
cwtl
fistps
mov
add
js
mov
pusha
cmp
and
js
push
in
rcr
stos
divb
ss
cs
cltd
push
stos
jl
std
inc
and
out
xchg
mov
mov
adc
jns
das
pop
mov
sbb
cwtl
cld
imul
rcrb
cltd
divl
jge
sahf
xchg
cmovne
pushf
adc
sbb
daa
cmc
pop
fiadds
push
cwtl
popf
fiaddl
lcall
jp
incb
mov
mov
sarb
int3
lcall
addr16
imulb
dec
pop
feni(8087
rclb
inc
sbb
clc
dec
or
and
pop
add
out
cmp
ficoms
lds
or
add
sbbb
lret
jl
push
sbb
int
cmpsb
cld
push
std
sbb
daa
cmpsb
push
mov
sbb
inc
pop
or
dec
cmp
xchg
addr16
push
dec
and
push
sbb
inc
adc
pusha
pop
pop
sbb
lcall
cld
sbb
cmp
cmc
loop
fcomps
pop
out
cwtl
cwtl
cli
jmp
sbb
cmpsb
fstp
pop
jle
xchg
subb
xchg
daa
scas
or
mov
imulb
xor
stos
and
rcrb
push
popf
xchg
sbb
cwtl
mov
stc
pop
sahf
or
notb
std
sbb
fdivrs
pop
push
mov
mov
or
cmp
inc
adc
push
aas
jns
popf
gs
cmpb
xchg
inc
into
cli
or
xlat
mov
lods
cmp
mov
divps
popf
and
mov
in
stc
sbb
clc
loopne
notl
adc
pop
mov
js
sbb
mov
pop
adc
faddp
idiv
dec
fmuls
pop
sbb
arpl
sbb
lds
cwtl
mov
lock
fldcw
mov
pop
lcall
or
popf
xor
pop
fisubrs
enter
or
clc
pop
in
jle
das
xchg
mov
ds
mov
inc
jb
sbb
pop
aas
jp
sbb
jp
into
pop
adc
xlat
adc
mov
cld
repz
mov
stc
xlat
inc
scas
or
jle
sbb
add
and
pop
leave
pop
adc
lds
sbb
push
idiv
repnz
pusha
mov
sbb
fisttpll
loopne
jns
sbbb
adc
xchg
mov
mov
mov
sahf
xchg
dec
pop
jbe
pop
jmp
pop
sbb
inc
pop
clc
mov
xor
or
dec
sbb
mov
push
xchg
cmp
movsb
cli
in
mov
jl
mov
sbb
lds
xchg
ss
jg
lret
in
sbb
and
pop
mov
push
sbbb
mov
push
pop
cs
sbb
sahf
jl
ds
push
mov
pushf
pushf
mov
xlat
pop
cmpb
lcall
les
cmpsb
fidivrs
xor
clc
negl
cwtl
jl
fwait
mov
or
rorb
adc
inc
fistpl
mov
sbb
mov
in
das
cmp
inc
mov
rolb
mov
xchg
mov
fcomps
outsb
and
and
pop
mov
mov
xor
push
adc
pop
cmp
push
xlat
mov
sbb
pop
fisubl
ficoms
aas
pop
loope
nop
clc
cwtl
jl
in
fistpl
or
ficoml
sub
add
add
js
xchg
test
shr
sbbl
sar
sbb
cmp
pop
jne
push
and
js
xchg
lret
push
roll
rcrb
shr
mov
push
pop
pop
stc
sbb
xchg
sub
and
mov
sbb
psubw
add
jnp
push
jne
jae
cmpxchg
cli
xlat
jne
cwtl
or
cwtl
mov
inc
inc
cld
movsb
mov
sbb
and
jns
imul
lahf
lds
mov
cmp
fadd
jae
ret
sbb
mov
inc
jl
fisubs
and
xlat
cwtl
pop
cmp
imul
xchg
pop
aaa
and
sub
ficompl
pop
mov
inc
mov
sbb
std
lea
insl
cltd
mov
clc
lods
sub
bound
mov
ffree
cmpsb
into
popf
into
jo
push
or
xlat
sbb
inc
sbb
adc
sbb
aas
cli
sar
into
mov
mov
pop
or
repnz
imul
sbb
call
cmpsl
jle
popa
add
hlt
pop
pop
add
js
sahf
je
xchg
in
clc
xor
stc
mov
fisubrl
adc
mov
not
fistpl
lret
fcmove
in
or
fdivr
fwait
ror
mov
shlb
mov
or
jge
cwtl
lods
pop
xlat
inc
or
jns
cltd
ds
out
mov
fstps
aas
add
mov
or
sbb
stos
fidivs
negb
loopne
fistpl
lahf
push
inc
les
mov
sti
ds
stc
fsubrs
add
sbb
rcr
into
add
push
stc
cld
loopne
fmull
movb
popa
into
sbb
xchg
leave
jbe
into
push
pop
lret
mov
cwtl
pop
cmp
fcomps
fcompl
jle
ficompl
loop
stos
cmp
jno
pop
mov
mov
pop
clc
cltd
adc
cli
pmaxub
rclb
ficoml
enter
sub
push
ds
jg
xchg
sbb
jne
push
cmpl
mov
jp
bound
cmp
test
fistps
mov
jmp
fbld
jno
sbb
adc
test
dec
xchg
mov
hlt
or
shr
cli
sbb
out
and
xor
mov
cmp
sbb
into
push
xor
pop
in
fs
inc
lds
cmp
xchg
pop
xor
mov
inc
cli
loop
and
jl
std
adc
mov
mov
popf
sbb
insl
mov
pop
cmp
fnstcw
mov
mov
xlat
and
imull
and
rcrl
mov
outsb
jecxz
jg
mov
dec
sbb
sub
mov
popf
frstor
sbb
dec
fdivrs
lea
insl
sub
xchg
mov
subb
sbb
inc
cmp
and
popf
fcompl
adc
or
pop
das
std
mov
dec
das
inc
xchg
fucom
sub
lds
test
pop
fidivrl
testb
cmp
pusha
cmp
xlat
pop
or
push
js
inc
sbb
or
pop
roll
jge
mov
sbb
fadds
fsubl
shll
jp
fstps
cmpb
mov
push
cld
in
jns
popa
ljmp
xchg
hlt
fisubrs
out
or
pop
sahf
adc
inc
or
ficompl
addr16
adc
clc
adc
testl
pushf
adc
dec
cli
fstpl
sbb
in
and
push
dec
cmp
cmc
nop
inc
icebp
mov
sub
and
push
jb
sbbb
stos
std
pop
inc
jge
dec
jmp
and
sar
pop
test
pop
adc
jp
stos
sbb
mov
pop
fcompl
ljmp
mov
sub
sti
popa
pop
push
cli
push
mov
mov
fs
cwtl
pop
fidivrs
bound
in
movsb
lahf
xchg
cmp
aas
lret
fsubrl
mov
ds
mov
cltd
loopne
push
sbb
mov
std
mov
jl
test
push
shlb
adc
fdivrs
sub
loope
xlat
pop
jbe
jns
or
sub
daa
popf
inc
rcrb
rcrl
adc
inc
and
pushf
cmpsl
test
and
push
add
inc
sbb
cmp
mov
lods
cmpsl
jge
sahf
or
or
pop
sbb
incl
sub
xchg
sub
sbb
pop
cld
sbb
cmp
sub
lods
sbb
ficompl
out
cli
push
inc
cli
lcall
push
or
mov
loopne
sub
cltd
clc
pushf
popf
or
add
nop
loopne
or
fcoms
mov
cmp
pop
sti
push
inc
in
lds
lcall
dec
aam
popf
clc
inc
sbb
xlat
cld
and
pushf
xchg
lcall
sub
adc
out
push
cmp
fidivrs
jge
lahf
cmp
dec
out
inc
rcrl
fwait
add
xchg
push
sbbb
lds
pop
xor
fisubs
sub
push
pop
cmp
std
outsb
mov
pop
jge
xlat
sbb
sbb
sbb
sbb
pop
movb
cmp
mov
imul
pop
mov
jp
and
mov
cmp
fcmovnbe
xor
cmp
sbb
inc
rcr
cmp
jge
dec
cltd
sub
sarl
add
ficoml
orb
lods
mov
cmp
push
fldenv
loope
push
jmp
lcall
lahf
add
dec
jbe
and
popa
mov
xchg
and
mov
lret
aaa
xor
xlat
mov
rcrl
or
pop
adc
frstor
sbb
xchg
les
out
fcmovnb
loopne
or
push
in
ror
mov
cmc
mov
nop
and
call
clc
sarb
inc
fsubl
cmp
loopne
push
je
jg
add
stc
mov
ffreep
and
imul
repnz
add
sbb
cltd
sbb
ficompl
into
out
mov
mov
adc
aam
adc
stc
clc
or
sar
xor
mov
dec
jnp
iret
pop
cmp
int3
insb
add
or
cmp
sbb
jae
sar
fcompl
mulb
and
leave
mov
jl
cmp
mov
pusha
pop
rcr
or
lcall
insl
out
xlat
cmp
sbb
pusha
and
loope
testb
fistpl
inc
mov
mov
fldl
shrb
divb
into
mov
mov
xchg
push
inc
fwait
or
popf
test
fistpl
mov
shrb
pop
add
and
xchg
mov
sbb
pop
cmp
cmp
cmp
cmp
cwtl
push
int
xchg
push
into
xlat
cli
sub
and
ds
dec
xchg
push
pop
std
psubsb
add
push
outsl
sbb
xchg
nop
inc
cmp
xchg
ficoml
mov
xchg
ficomps
sbb
fcompl
sbb
sti
pop
pop
cli
js
jge
and
mov
jl
mov
lret
mov
sbb
loopne
clc
test
jp
jg
mov
negl
sbb
mov
rcr
in
rcrl
pop
faddp
cwtl
sahf
incl
fistl
cmpsb
shl
fiaddl
jae
test
pop
mov
adc
push
rcr
fcmovnb
cmp
fucom
sbb
jns
push
js
inc
psrlq
push
leave
popf
mov
push
lea
sbb
jns
verr
lret
inc
idiv
mov
mov
cwtl
cmp
punpcklwd
push
sbb
insb
cmpsb
mov
fwait
pop
je
leave
gs
mov
adcb
inc
cmpsl
lcall
sbbl
and
fwait
lcall
rcr
pop
dec
sbb
inc
fisubrs
xchg
dec
and
mov
sbb
xchg
mov
orl
jno
xor
sarl
pop
movsb
in
inc
scas
xor
lds
mov
negl
es
push
sbb
clc
pop
xlat
dec
mov
int3
fsubp
xchg
fidivrl
loop
sub
sti
pop
insb
xchg
lods
mov
and
mov
mov
mov
xchg
aad
sbb
test
js
jl
pop
stos
fnstcw
fisubrs
sbb
inc
jnp
xchg
mov
dec
mov
push
cmp
rcr
call
fsubrs
cmpsl
dec
mov
and
xlat
out
mov
pushf
mov
mov
add
and
pop
xor
js
jne
sahf
add
jl
out
loopne
sahf
pop
sahf
sbb
cmp
pop
clc
pop
lcall
mov
sub
sub
mov
pop
cmp
mov
cwtl
repnz
clc
mov
mov
add
fiaddl
dec
adc
cmp
cmp
shrl
scas
mov
mov
lcall
rorl
fadd
pop
mov
jae
adc
jp
fcomps
push
cmp
sar
sbb
pop
sbb
cmc
mov
into
pushf
test
fsubl
jl
adc
popf
cmpsl
inc
pop
cld
js
mov
jbe
add
mov
cmp
push
mov
je
cltd
push
mov
xchg
jnp
mov
icebp
movsb
jae
cmp
and
mov
mov
dec
fisubl
cmp
fmul
pop
cwtl
call
jno
ds
mov
mov
ja
sbb
nop
xchg
cltd
jbe
lret
mov
leave
aam
loopne
movsl
xor
mov
cmp
pop
xlat
cwtl
add
fstpt
cmp
sbb
mov
xchg
lret
inc
clc
js
adc
pushf
andb
pusha
pop
or
pop
cmp
adc
shl
setb
push
test
call
mov
lock
fstps
pusha
jmp
lahf
shlb
xchg
imul
pop
loopne
adc
mov
mov
and
add
cli
cmp
cmp
or
arpl
sbb
cmp
iret
fldl
mov
jnp
pop
neg
fistps
fwait
into
in
fiadds
pop
xchg
or
push
in
and
dec
mov
inc
pop
fwait
and
pop
sti
inc
mov
jl
inc
std
ficompl
mov
fdivp
js
push
movsl
cmp
sahf
clc
inc
pop
sbb
cmp
jle
fs
daa
arpl
inc
nop
cmp
cmp
insl
push
mov
lds
add
cli
das
fiadds
out
xlat
subb
jle
mov
mov
mov
in
mov
sti
mov
mov
xor
fdivrs
xlat
mull
pushf
sbb
jne
mov
pop
jmp
and
mov
ljmp
and
mov
orl
xchg
pusha
and
aad
imul
cli
lret
inc
jns
cltd
xchg
out
sbb
cld
dec
jmp
stos
rcrb
nop
fmulp
jo
lods
fmuls
and
cmp
cmp
pop
fcmovnu
adcb
rorl
sbb
mov
fnstsw
xchg
popa
jp
js
cmp
sbb
sahf
jecxz
mov
jnp
aas
popf
dec
mov
and
rol
fiadds
hlt
mov
adc
dec
sbb
fwait
jbe
push
call
sub
and
lds
mov
pop
xchg
sahf
sbb
or
pop
fistpl
xchg
pop
idivb
sbb
bound
clc
daa
ljmp
insl
inc
into
sub
mov
out
loope
and
adc
testl
lock
jp
shrb
jne
fcoml
jp
inc
xlat
cmp
iret
add
adc
jle
lock
insl
jno
mov
xchg
imul
lcall
stos
mov
ja
cld
cmp
mov
out
repz
fcoml
pushf
pushf
lret
jmp
outsl
sub
pop
ficomps
ds
rcll
mov
add
test
sahf
xor
clc
xchg
sub
rcr
mov
xchg
pushl
stos
lcall
sub
cmp
push
faddl
mov
arpl
jg
sbb
or
xchg
inc
bound
vminsd
and
sbb
jns
pushf
orl
fadds
xor
push
push
mov
mov
jp
hlt
js
push
or
sbb
lcall
mov
jno
adc
rcrb
adc
popf
fnstcw
addr16
push
pop
mov
mov
jg
cmp
mov
push
clc
lret
dec
jbe
sbb
rcrb
inc
add
or
loopne
arpl
std
das
cli
mov
fucomip
fistps
daa
cld
jne
fmull
xchg
into
jne
mov
dec
aad
std
mov
imul
sbb
or
mov
inc
cmp
cmp
cmp
jle
or
add
out
cld
scas
lret
lahf
mov
cmpl
je
outsb
sbb
movsb
jno
mov
sbb
push
mov
mov
in
add
fstpt
popf
lcall
xchg
xor
cld
imul
adc
mov
pop
sbb
inc
xlat
sub
rol
adc
cmp
mov
and
jns
fcomps
cmp
clc
jge
jle
mov
neg
jg
jo
dec
lds
fcoml
shlb
pushf
xchg
xlat
stc
sahf
mov
push
push
and
fsts
pusha
add
fstp
mov
or
xchg
adc
ds
inc
mov
lahf
js
push
mov
pop
decl
ficomps
sbb
push
cmp
xchg
mov
or
add
sahf
sbbb
sub
rcr
bound
cld
sub
cmpsb
xor
jns
sti
dec
fidivrl
inc
cmp
adc
xchg
stc
psubusw
sbb
or
cli
or
cwtl
mov
xor
fcmovu
fimull
sub
dec
xchg
lods
and
pop
int3
les
pop
clc
outsl
jl
mov
pop
repz
rcrb
rcrb
mov
ljmp
in
mov
mov
cli
mov
mov
jae
jmp
mov
cmp
push
cwtl
and
sbb
pop
idiv
sbbb
cld
or
cmp
repnz
xlat
out
sbb
sbb
fidivl
sub
xor
push
jle
rcr
fstps
daa
pop
shrb
fldl
lcall
add
push
rcr
jle
enter
mov
adc
fnstcw
cltd
andl
mov
popf
sbb
out
add
dec
fisubrl
jg
mov
dec
call
pop
cltd
jmp
and
fstps
fdivrl
int3
mov
cmp
and
int
jp
inc
sbb
pop
cmp
mov
or
xchg
cltd
js
cwtl
popf
adc
mov
cmp
or
popf
sbb
fstps
lret
roll
loope
insb
lcall
fdivr
stos
inc
loopne
jns
js
push
jge
adc
push
fnstcw
mov
jle
inc
cmpsb
jp
sbb
xchg
inc
sub
and
xchg
pop
pushf
js
inc
cwtl
fstp
mov
pop
sub
jl
stc
inc
adc
jge
sahf
ja
mov
cli
dec
loope
mov
cmp
fsubs
pop
add
mov
fstpl
testl
enter
add
jle
fcompl
push
mov
push
mov
cli
and
pop
inc
lcall
in
cltd
insl
inc
js
es
add
sbb
pop
jle
popf
mov
and
pop
cmp
jnp
dec
mov
cmp
dec
add
cmc
mov
pop
xor
rolb
pop
ds
adc
adc
jge
outsb
add
xchg
jno
mov
fcompl
shl
ja
dec
stos
or
ljmp
sbb
aas
sub
dec
mov
popf
sbb
mov
incl
pop
js
scas
ss
ds
xchg
and
jp
mov
jge
xchg
mov
mov
pop
inc
mov
push
mov
cmp
lcall
stos
sbb
js
ficompl
mov
jns
loopne
test
std
cli
cmp
inc
pop
xchg
ficompl
ret
mov
push
pop
rclb
pop
sbb
dec
movsb
cli
pop
arpl
xor
aad
leave
xchg
dec
js
scas
jmp
xchg
into
cld
fcompl
fs
ficoml
popf
mov
push
imul
fnstenv
cwtl
stos
push
loope
jns
add
pop
repnz
and
jge
sti
cld
pusha
in
cmp
and
add
frndint
flds
fidivrl
cwtl
sbb
js
pop
cmp
xchg
mov
mov
fstps
iret
adc
jecxz
stc
xlat
xlat
ror
and
cld
sbb
mov
jns
sbb
cmp
ja
and
sbb
fwait
cld
int3
clc
pop
inc
cmp
lcall
imul
add
fcmove
fcmovnu
shlb
sti
cmp
incl
not
mov
push
mov
sbb
shr
ja
mov
mov
movsl
adc
jge
cmp
lds
add
jmp
test
stos
jle
sbb
pusha
sbb
dec
cltd
das
and
jg
push
fs
mov
bound
aaa
bound
cmp
adc
adc
in
std
mov
ljmp
into
loopne
cmp
jae
js
mov
inc
jl
adc
push
fsubs
and
cmp
gs
cmp
inc
jns
les
mov
sbb
les
adc
addr16
sbb
sbb
sbb
mov
cmpsl
fidivs
stos
rcrb
pop
or
cmpsb
add
pop
out
and
push
or
xchg
out
scas
inc
fs
cmp
sbb
mov
mov
notl
sahf
pop
lcall
sub
and
xchg
inc
cwtl
mov
bound
pop
and
rcl
loopne
lahf
dec
mov
pop
mov
pushf
pusha
cmpl
mov
push
xor
pop
mov
add
cli
hlt
bound
out
orb
mov
fiadds
lret
sahf
adc
push
jle
adc
popf
pushf
mov
sbb
xor
fildll
pop
mov
inc
mov
fcomps
sub
pop
movsb
dec
add
push
cwtl
mov
pushf
and
adc
sahf
loopne
sbb
lea
jp
and
xchg
xchg
lods
sbb
pop
fidivrl
xor
sbb
ja
inc
jns
pop
adc
clc
loopne
adc
add
sbb
popf
pop
ds
push
and
lcall
outsl
pop
cld
and
pop
lock
sbbl
sub
xchg
pop
out
or
or
cwtl
mov
cmpb
fdivr
cltd
xor
sbb
jo
call
pop
clc
sbb
movsl
fldl
imul
pop
roll
cld
lcall
pop
cli
fcmovu
mov
imul
sbb
add
pop
mov
push
cmpl
jb
jl
sahf
inc
fisubs
xor
jmp
push
js
xor
dec
xchg
pop
inc
adc
inc
sbb
cwtl
les
push
sbb
pop
jnp
mov
repz
xchg
cmp
cmp
cli
fiaddl
xchg
outsl
pop
pop
mov
or
pop
add
fcoml
test
jg
sbb
push
adc
popf
xlat
push
cmpsb
mov
add
mov
inc
push
out
cmp
mov
push
ja
movb
inc
fistpl
adc
fildll
sbb
lcall
jl
jge
pop
ss
mov
mov
stc
or
jmp
leave
les
test
sbb
gs
xchg
jl
mov
js
fadd
mov
mov
mov
pop
fiadds
cmc
sbb
lcall
sti
cmpsb
mov
or
ljmp
negl
sbb
cltd
fisubl
mov
flds
pusha
cltd
cmp
add
fsts
adc
pop
ficoml
test
imul
sahf
aam
arpl
pusha
or
sbb
adc
and
cmp
jmp
nop
xchg
pop
cmp
and
cli
cs
sti
xchg
rclb
imul
cwtl
fsubs
jnp,pn
pop
enter
sub
mov
lcall
mov
xlat
jbe
js
ss
jo
cmpsl
cs
xor
jae
ja
pop
movsb
pop
cmp
pop
inc
loopne
imul
pop
popf
rcll
sbb
xor
cmp
and
jno
ret
add
and
cmp
sti
lahf
clc
push
addl
stc
mov
fdivrl
mov
xchg
fisubrs
test
cs
sarl
outsb
dec
orl
or
pop
mov
int3
jp
fnstcw
mov
les
mov
xchg
cli
stos
cmp
in
sub
or
sbb
mov
xchg
mov
ficoms
push
pop
sbbl
cmpsl
cld
sbb
and
test
add
sbb
cld
inc
pop
adc
or
and
fidivrl
in
adc
xchg
cmpb
add
cmp
out
fdivrs
sub
ds
adc
pop
xor
sub
test
and
push
cltd
add
popf
cwtl
cmpsl
sbb
pop
gs
clc
sahf
sbb
inc
mov
xlat
mov
cmp
fwait
incb
dec
push
xor
inc
fiadds
pop
pop
rcrl
cmp
fstl
xchg
dec
cwtl
adc
adc
je
pop
and
jb
into
call
sbb
mov
mov
jb
push
sbb
mov
pusha
lcall
aad
inc
push
mov
incb
mov
negl
ds
jecxz
add
inc
pop
loopne
sahf
pop
das
cmc
adc
repnz
sahf
sbb
mov
xor
sbb
jns
aas
inc
push
divl
std
lds
pop
out
sti
sbb
fcmovnu
jge
ds
fldenv
push
mov
xor
xlat
fdivl
cmp
xor
lcall
mov
gs
push
sti
andl
mov
inc
jns
cmc
jne
int
ret
shr
pop
sub
pop
push
sbb
out
cmp
mov
cmpsb
sbb
and
mov
mov
pop
inc
sti
mov
add
in
and
mov
dec
push
ja
mov
ljmp
rorl
loopne
adc
clc
call
xor
sbb
shlb
cld
popf
and
sbb
pop
inc
adc
clc
inc
aas
repnz
dec
mov
js
xor
push
pop
sahf
dec
roll
int
ror
inc
xor
mov
sbb
mov
std
pop
jp
pop
sbb
fstpt
add
test
jne
fldt
pop
lcall
cltd
cmpsb
add
idivl
mov
xorb
les
xchg
cld
pop
inc
mov
cmp
pinsrw
xlat
jecxz
xchg
mov
xor
lds
movsl
mov
inc
sbb
cmp
stc
pop
pop
adc
mov
adc
cmpsb
cmp
cld
mov
and
mov
cltd
mov
gs
sub
shl
pushw
sbb
add
xchg
fisubs
cmp
addr16
mov
mov
fdivs
jle
negb
cmp
dec
or
ret
sbb
pop
and
loopne
sbb
insb
and
popf
cmc
add
aam
jp
and
pop
loopne
adc
adc
sbb
inc
sbb
sbb
adc
jnp
std
jp
fadds
inc
mov
mov
fdivl
inc
xlat
jl
daa
mov
and
xlat
pop
mov
or
fsubrs
xlat
adc
cmp
scas
inc
sub
sbb
das
cltd
shll
push
fstpl
fcoml
mov
clc
inc
loopne
shlb
cld
sbb
daa
add
cmp
mulb
in
pop
popf
sbb
fwait
pop
lock
rol
mov
stc
cld
cmp
fxch
and
push
cld
sbb
movsb
out
bndldx
cmpsb
inc
pop
pop
sbb
scas
inc
rcrb
pusha
inc
cmp
scas
push
popf
roll
ljmp
fcomps
inc
xchg
repnz
sbb
lods
cmp
inc
lcall
sbb
or
popf
add
lret
xchg
ja
in
push
fucomi
lea
and
fsts
pop
push
cmp
movsb
out
inc
mov
sub
push
mov
cmpb
adc
jae
dec
inc
pop
and
fisttpl
push
and
and
clc
cmp
ljmp
cmp
lcall
jge
dec
pop
pushf
add
and
mov
fstl
cwtl
pcmpgtw
adc
adc
cld
call
cmpsb
test
push
clc
cltd
arpl
bound
iret
xlat
jbe
mov
lcall
jp
fcmovnbe
popf
das
shr
and
xor
or
pop
xor
js
pushf
inc
lret
dec
mov
adc
push
adc
xchg
jp
fucom
and
in
call
jmp
adc
adc
cmp
pop
push
pop
cmp
mov
cmpsb
sub
gs
xor
stc
cmp
push
sub
js
fisubs
cmpsl
mov
cmp
sub
in
and
mov
add
push
adc
je
inc
add
mov
mov
add
enter
add
fisubrs
iret
fwait
andl
ds
cltd
sbb
pop
pop
neg
jmp
pop
mov
cltd
add
lahf
shrb
icebp
mov
push
mov
jo
xchg
call
mov
mov
cmp
clc
mov
shr
cmc
rcl
fstpt
pushf
add
dec
aam
adc
fcoms
jmp
sbb
int3
xchg
cmp
test
push
loopne
fcoms
sbb
sbb
js
jle
cmpsb
lods
add
and
sbb
mov
pop
fs
pushf
and
cmp
jl
out
or
push
and
mulb
pusha
pushf
adc
mov
push
xchg
inc
lcall
insb
adc
cld
fnstcw
push
jge
xlat
mov
and
mov
mov
push
dec
fs
daa
pop
lret
pop
shlb
cmp
mov
pusha
cmpb
and
std
pop
mov
lahf
imul
push
sbb
fsubs
sti
pop
mov
mov
or
jns
pop
loope
sbb
and
addr16
lcall
les
pop
push
cmp
shlb
fldenv
clc
aam
push
add
sbbl
pop
aad
cltd
mov
fcomip
cmp
lret
rcl
add
lret
and
inc
or
test
mov
sar
std
sbb
sbb
insb
mov
cwtl
xchg
dec
pop
sbb
cmp
and
and
and
add
rclb
fldcw
mov
push
push
pop
pop
mov
add
sbb
xor
mov
and
bound
pop
or
cmp
and
movsb
std
cmp
push
jb
dec
cmp
fldcw
push
mov
xchg
sbb
hlt
sbb
pop
xchg
inc
pop
sbb
sub
pushf
les
cmp
adc
jns
pushf
pop
sbb
cs
pop
sahf
rcrl
adc
inc
inc
xlat
jge
lods
inc
mov
das
xchg
imul
dec
mov
mov
cmp
add
push
cli
hlt
cli
and
mov
sbb
cmp
pop
mov
mov
call
std
dec
fbld
sbb
sub
fldt
xor
jns
iret
mov
cltd
sub
jo
mov
cmpsb
outsb
cmp
outsb
and
xchg
imul
and
push
out
loop
fcmovnu
call
adc
rorl
fs
add
mov
cs
cmpb
jne
loope
push
mov
mov
testl
rorb
sbb
cmp
cltd
cwtl
mov
fisttpll
cwtl
popf
sbb
inc
push
push
lcall
cld
je
sbb
mov
test
inc
popa
dec
jge
aas
sub
mov
std
push
and
or
into
jge
sahf
andb
dec
inc
je
and
xchg
cmp
adc
push
pop
imul
sti
popf
push
inc
adcb
and
lea
inc
std
cld
fcompl
outsl
mov
mov
jle
clc
fbstp
js
mov
cli
fstps
dec
pop
rol
fidivrl
mov
xlat
clc
stos
int
out
negb
out
mov
dec
mov
mov
js
mov
int3
pop
mov
fldt
inc
xchg
add
stos
xlat
imull
mov
pop
sbb
cwtl
sarb
stos
adc
adc
jle
or
mov
adc
jp
dec
lods
push
sub
cmp
ficompl
mov
mov
and
and
cmp
jge
aas
and
or
sti
aad
mov
jecxz
pop
scas
add
pop
std
mov
or
or
jp
or
jge
pushf
in
cli
test
popf
fucomp
ficompl
fidivrs
popa
fildl
or
leave
inc
push
lcall
or
fldenv
movsb
mov
and
add
fstps
or
pop
adc
inc
mov
les
cltd
fxch
into
sti
lds
mov
jle
add
sbb
push
int3
jns
pop
and
sub
inc
inc
lcall
pushf
std
cmc
sub
out
mov
sti
cmp
loopne
imul
clc
in
gs
fldt
xlat
cmp
sbb
mov
sbb
sub
pop
pop
sti
fcomp
mov
inc
xor
in
lcall
dec
pushf
inc
sarb
cmp
ja
fadds
jge
mov
adc
pop
push
cwtl
fwait
pop
sub
push
sbb
push
cmpsb
cmp
jge
lret
pop
xchg
lcall
loopne
mov
push
loope
sbb
das
adc
dec
pusha
push
sbb
mov
add
or
cmp
je
lret
jbe
cwtl
pop
adc
ds
jnp
js
and
stos
sbb
lds
pop
mov
sbb
sar
xchg
jne
xchg
bound
push
sbbl
pop
cmp
jl
adc
out
sbb
mov
or
faddp
cwtl
negb
jp
sub
in
sarb
stc
ljmp
jns
pop
filds
cmp
dec
inc
or
xchg
fadd
std
clc
add
bound
and
sar
fbld
add
sti
and
lret
cld
mov
sahf
flds
iret
jno
sbb
negb
sarl
mov
mov
std
movsl
cwtl
mov
inc
fidivrl
add
notl
xchg
shl
mov
faddp
lret
xchg
into
cmpl
pop
nop
fcomps
add
fcmovnu
sbb
push
adc
stc
sti
inc
aad
or
stc
xchg
lock
jge
popf
adc
mov
sub
or
add
jb
fstpl
pushf
and
repnz
mov
cs
lcall
fdivrs
popf
sbb
sahf
clc
cmp
dec
mov
push
sbb
or
mov
mov
outsl
sbb
loopne
jp
fstpl
adc
fwait
rolb
clc
sarb
mov
mov
sahf
cwtl
mov
pop
or
stc
adc
jge
clc
xlat
mov
mov
cmp
mov
cwtl
and
dec
fidivrs
inc
mov
push
inc
push
ret
push
xcrypt-ctr
cmpsl
sbb
xchg
sbb
and
cmp
add
mov
mov
mov
ret
adc
mov
xor
sar
pop
idivl
subl
test
mov
iret
inc
pop
dec
dec
sbb
and
jl
xchg
orb
sbb
inc
cmp
int3
add
das
add
stc
sub
and
int
jae
and
sbb
mov
add
pop
je
add
pop
cltd
fmul
cmp
mov
jge
rcr
in
movsb
pop
sbbb
flds
mov
aaa
push
xor
push
jae
add
mov
sbb
stc
sbb
outsb
cmpsl
jmp
cltd
sti
loop
stc
fadd
cmp
cmp
fs
cltd
jp
loope
sti
cli
mov
mov
lcall
sbb
stos
pop
push
sbb
adc
test
mov
xchg
inc
cmp
out
out
lcall
cwtl
aaa
mov
mov
fsub
and
pushf
js
fisubl
sbb
in
xchg
mov
sti
pop
jle
mov
cmp
fldenv
push
shll
adc
cltd
cmc
mov
pusha
aad
pop
sbb
jo
sbb
fistps
xor
xchg
sbb
sub
mov
pop
movsb
add
out
imul
cmpsb
and
fstps
pop
jp
sbb
xchg
loopne
aas
dec
and
lods
push
and
cwtl
icebp
inc
push
xchg
jge
sub
inc
stos
in
mov
pop
adc
jp
and
inc
cmp
ficompl
xlat
out
pop
popf
dec
into
imul
bnd
int
aaa
or
push
jmp
and
or
and
f2xm1
mov
jge
fcompl
inc
int3
idivl
cmp
aam
mov
lds
inc
mov
negl
inc
or
lahf
fsubrs
and
jo
ret
fnstsw
into
sbb
stc
pushf
inc
sahf
xlat
cltd
cld
ret
jno
test
ljmp
rcr
negl
inc
fbld
jae
jl
pusha
inc
add
movsl
arpl
or
sbb
inc
sbb
gs
dec
mov
call
cmp
repnz
sbb
outsb
scas
cmpl
cwtl
fcmovnbe
sti
lcall
pop
js
adc
jle
mov
imul
pop
add
sbb
popf
cltd
outsl
gs
mov
test
pop
sbb
inc
test
mov
inc
aam
cmpsb
sub
js
fbld
sbb
ficompl
shlb
mov
adc
mulps
pop
frstor
lcall
jle
lcall
mov
negb
sarl
adc
adc
lret
sub
mov
addr16
in
cmp
jecxz
push
lret
or
lods
ret
cwtl
push
clc
and
sbb
and
sbb
movsb
fcomi
sbbl
pop
lock
cld
jns
mov
jle
pop
pushf
fwait
int3
mov
test
pop
cmpb
adc
lock
mov
imul
inc
jns
addb
xlat
popf
pusha
cwtl
adc
lcall
add
add
stc
push
stos
rcrl
and
cli
sbb
mov
adc
pop
jg
inc
pop
mov
out
flds
inc
out
leave
imul
jns
or
in
xlat
lcall
aaa
mov
mov
pop
sarb
pushf
inc
cmpb
inc
sub
popf
aam
lds
push
pushf
popa
loopne
test
std
pusha
adc
mov
inc
sti
xlat
inc
and
and
cmp
popf
movsb
add
aaa
repnz
add
gs
leave
in
inc
push
pop
add
cli
fnstsw
sbb
inc
push
ds
pop
ficomps
pusha
mov
sbb
fdivrp
sbb
cmp
out
shlb
mov
in
mov
lret
or
dec
cli
cmc
idivl
fstpt
addr16
or
sahf
fnstsw
lcall
aaa
xchg
lret
sahf
adc
into
push
jns
sbb
sahf
js
pusha
xor
nop
std
pop
cltd
inc
mov
add
lret
movsb
faddl
inc
jns
mov
popf
loopne
sub
movsl
inc
sbb
mov
int
mov
shlb
fistpl
or
xchg
fsub
mov
push
adc
jle
decb
ficomps
sub
and
cmp
cs
jp
pop
mov
sbb
lods
je
sub
and
rcrl
cmp
lods
adc
out
fstps
xchg
cmpb
dec
scas
fsubrl
mov
or
cmp
aam
mov
cmp
sbbb
adc
rclb
mov
cld
cmp
push
xor
movsb
pop
sbb
sbb
mov
jns
ffree
and
cltd
lea
mov
test
arpl
jg
mov
lock
sub
cmp
sti
cmp
aad
pusha
jp
pushf
and
mov
sbb
js
adc
push
fsubl
mov
aaa
mov
xchg
cld
in
add
test
ljmp
cli
outsb
aam
cmp
push
rolb
imul
pop
mov
cmp
xchg
mov
iret
in
pop
or
stc
and
sub
sub
jns
fcmovbe
movsl
xor
es
fcmovnb
mov
pop
pop
aas
or
pushf
data16
push
xor
dec
add
mov
pushf
out
sbb
fmuls
cld
cmp
cwtl
fnstsw
inc
in
inc
sbb
xlat
inc
and
sbb
rol
sbb
pop
xchg
std
mov
js
cmp
mov
xchg
mov
pushf
je
fdivs
lcall
loope
pop
jge
mov
add
clc
out
fadd
adc
mov
std
push
jge
scas
mov
negl
sti
adc
xchg
cli
fistpl
cwtl
out
pop
cmp
pop
xchg
fisubs
pop
cmp
mov
add
rclb
lcall
popf
clc
clc
sub
or
stc
sbb
and
sub
cld
mov
lock
lret
js
jbe
xchg
mov
cli
shrl
leave
pushf
sbbl
rcr
out
inc
fcomps
adc
adc
jl
dec
popf
jp
cmp
ja
dec
fiadds
scas
cmp
flds
dec
xor
scas
mov
sbb
xor
adc
jle
fs
fmull
cld
sbb
and
fidivrl
loopne
adc
pop
das
arpl
push
ss
jge
mov
in
pop
cltd
mov
mov
test
clc
adc
fcomp
lcall
dec
stc
shlb
fisubrs
movsl
testl
pop
and
xchg
sbb
adc
sahf
mov
int
cli
inc
repnz
sbb
and
dec
nop
push
xor
push
flds
pop
cmp
jo
and
fistps
jle
shr
nop
xchg
jmp
adc
lods
loopne
int
cwtl
std
pop
js
mov
sbb
pop
push
sbb
adc
mov
pop
xor
rorb
loopne
out
mov
xchg
fdivl
mov
lcall
adc
inc
ljmp
jmp
xchg
jae
inc
or
fiaddl
dec
pop
sti
or
cmp
mov
cli
lcall
mov
roll
sbb
fsubr
and
roll
roll
leave
sbb
pushf
sbb
js
or
xchg
sbb
adcb
cmp
lea
andl
stc
lcall
shr
sbb
ds
jp
inc
push
arpl
iret
xor
fidivrl
jge
scas
xchg
int
lret
jp
loopne
cs
mov
and
out
pop
sbb
aaa
fsubs
loopne
pusha
mov
mov
lret
pushf
cmp
mov
popa
xchg
pop
fstp
sbb
popf
rcll
push
lcall
orb
pop
rorb
xchg
jns
cmp
jns
into
xchg
enter
and
fdivr
int
xlat
sbb
sbb
int3
sbb
outsl
pushf
sbb
adc
sub
ljmp
sbb
jae
into
arpl
dec
popf
jg
pop
mov
aam
mov
inc
xlat
mov
cmpb
fsubrs
mov
lret
sbb
cltd
xor
pop
lahf
sti
mov
loopne
lcall
mov
sbb
dec
fdivrs
dec
jbe
add
cmpsb
addl
or
leave
sahf
ds
pushf
ss
fwait
xchg
js
add
jmp
dec
sbb
xor
mov
mov
cwtl
jl
cmpsb
mov
in
mov
mov
adc
fistps
sbb
inc
cli
loopne
lret
jg
cmp
push
scas
and
cltd
repnz
push
insb
pop
lcall
mov
dec
ljmp
mov
jge
xlat
sbb
sbb
pop
mov
and
rorb
cmp
fnstsw
jae
mov
popf
and
icebp
xchg
push
mov
pop
cltd
hlt
jb
mov
sub
xor
pop
pop
mov
pop
and
or
out
cmp
jp
into
aad
popa
and
mov
sub
jecxz
xchg
jl
push
jp
cli
pop
dec
jmp
mov
pop
jnp
mov
push
stos
and
mov
inc
jl
lods
mov
xchg
dec
fcomps
fsubs
negw
dec
testb
cli
arpl
ret
sbb
fsts
bound
ja
mov
and
adc
fcmovbe
jbe
jmp
out
cli
jo
ffree
lahf
cmp
cwtl
fmuls
sub
mov
ret
jb
cli
xor
add
mov
inc
pusha
pushf
lcall
jbe
pusha
mov
rorl
jge
fbld
or
pop
jl
ds
sbb
sbb
pop
cmp
mov
js
lret
shll
shll
insl
jg
sbbb
cmp
das
testl
inc
pop
mov
lods
mov
out
xchg
adc
add
inc
in
test
inc
push
cmp
mov
inc
mov
stc
dec
mov
push
sbb
imul
int
sub
pop
jle
js
pop
fdivrs
and
test
sbb
adc
adc
jle
or
cld
jns
inc
in
test
popf
mov
pop
mov
push
push
popf
cltd
fnstenv
in
xchg
inc
xchg
pop
cmp
dec
fmulp
sbb
out
loopne
rcl
push
rcr
sahf
cld
cmp
mov
sarl
sbb
insb
imulb
lcall
push
cli
mov
fwait
jl
push
inc
or
imul
push
jl
pop
mov
xchg
fstp
out
cltd
mov
push
adc
push
mov
sbb
ds
fisubl
loopne
mov
fidivs
dec
and
icebp
mov
mov
adc
add
xchg
ss
mov
nop
stc
xchg
sub
lcall
jle
mov
and
push
fwait
in
divl
cmpsb
pop
cltd
sbb
cs
cmpb
add
jmp
cmp
push
leave
cmp
xchg
fbld
or
test
pop
sbb
popf
outsb
inc
and
adc
mov
mov
lock
xchg
ficomps
mov
ja
dec
lcall
cwtl
mov
es
cmp
fisubs
sbb
mov
pop
pusha
push
xchg
sbb
cmp
or
rol
fisttpll
adc
and
rcrb
fstp
mov
gs
test
sbb
adc
stos
sbb
sti
out
out
push
out
mov
sbb
xchg
mov
stc
into
inc
mov
je
into
mov
aaa
sbb
jle
jp
and
fs
adc
dec
push
loopne
add
or
fwait
imul
push
mov
adc
cld
pop
scas
dec
mov
daa
dec
lea
cmp
inc
sbb
pop
call
pushf
pop
mov
dec
int
adcb
clc
ss
jns
pop
ret
and
push
sub
call
lock
fmuls
lret
jmp
shll
mov
mov
lcall
ja
out
fmul
dec
push
pop
lcall
fstl
cmp
int
pop
clc
in
and
sub
push
test
int3
cmc
xchg
and
and
push
jns
mov
add
pop
std
sub
mov
js
sbbl
pop
das
sbb
inc
sti
lcall
cmp
push
orb
adc
inc
fcomps
ljmp
cld
cwtl
js
cmpl
subl
clc
mov
pop
ffreep
mov
sbb
jle
fdivl
or
rcrl
cwtl
insb
pop
mov
jg
in
addr16
ds
mov
arpl
fdivr
or
bound
xchg
push
lret
pop
dec
push
lds
mov
cli
add
and
aaa
mov
out
push
cwtl
mov
push
xchg
xchg
iret
pop
push
sti
and
mov
jmp
xchg
lcall
maxps
mov
sbb
adc
jbe
inc
jle
ss
inc
mov
out
sahf
cmp
xor
jp
cli
sbb
mov
pop
mov
and
push
adc
pushf
std
outsb
sub
out
cmp
arpl
pop
mov
xlat
pop
sahf
pop
mov
inc
xchg
lret
cmpl
cmpsb
cltd
rcrb
add
and
xchg
jmp
loop
cmp
fcmovb
mov
pop
sbb
mov
cmpsl
add
sahf
stos
dec
ja
adc
fisubrl
flds
clc
sub
movsl
mov
pop
lcall
mov
add
and
sbb
lds
jp
sbb
sbb
dec
cli
gs
xlat
jns
mov
fmulp
mov
sar
inc
into
jmp
aam
fadds
or
mov
inc
and
mov
push
jp
jns
mov
sbb
pop
lods
mov
cltd
mov
push
push
xrelease
jns
and
sbb
js
aas
and
fcomps
xor
push
outsl
pop
sbbb
mov
or
sti
mov
mov
das
call
fs
or
cwtl
rcrl
stos
aas
mov
dec
mov
mov
fldln2
mov
inc
inc
jmp
stos
negl
push
inc
sbb
inc
fiaddl
pop
sbb
adc
pushf
outsl
sbb
enter
push
mov
xlat
stc
adc
adc
inc
aam
lods
or
sbb
sbb
jno
clc
adc
cmp
addr16
pop
cmp
pushf
push
fdiv
ja
fstpl
popa
cmpsb
push
pop
push
scas
jae
mov
or
fmuls
leave
pop
mov
jb
and
into
jge
pop
daa
cmc
xchg
ss
pop
aam
popf
ljmp
xlat
sti
push
loope
push
sahf
in
and
mov
add
addr16
xchg
pop
jle
add
fdivrl
arpl
cwtl
pusha
jle
inc
sti
leave
mov
cmp
pop
pop
rol
cltd
sbb
popa
mov
cmp
xchg
pop
lea
add
call
aad
ljmp
stc
dec
jp
jle
xlat
sti
inc
fdivr
sbb
cld
ds
jmp
jno
push
and
adc
cltd
adc
cli
pop
pop
out
sbbb
mov
mov
test
pop
cwtl
js
cmp
clc
jns
pop
sub
push
pop
in
fsubs
mov
aaa
pop
std
movsb
sbb
fisttps
ficomps
jns
pop
into
pushf
icebp
mov
xor
jmp
fistpl
fistl
sbb
mov
ljmp
outsb
sbb
mov
cli
pop
cwtl
xchg
adc
pop
lods
mov
call
popf
cli
and
popf
lret
movsb
mov
push
cmp
flds
mov
pop
fs
sahf
arpl
push
inc
push
pop
mov
adc
es
out
pusha
pusha
sahf
push
push
xchg
lcall
xchg
rcrb
mov
cwtl
or
mov
into
inc
sbb
repz
insl
fimull
mov
js
push
sahf
in
clc
pop
and
inc
stos
out
cmc
fnsave
or
pop
add
sbb
add
out
movsb
xorl
sbb
cwtl
mov
sarb
scas
jmp
rcrl
mov
mov
call
jle
sbb
fistpll
add
mov
clc
xchg
outsb
pop
or
ficoms
and
push
adc
fmull
sahf
stos
add
mov
cwtl
frstor
cltd
fprem
mov
adc
enter
ja
sbb
cmp
aad
fwait
test
jl
mov
ds
fdivrs
sbb
cld
mov
pop
in
test
jle
sbb
sub
clc
pushf
js
pop
pop
sbb
data16
cmp
mov
pusha
fldcw
fptan
mov
popf
sar
sbb
xor
ficoms
lods
lock
xor
xor
cmp
lcall
or
fcmovu
andb
xlat
or
cmp
push
sti
js
push
inc
push
fisubrs
dec
pop
xor
inc
mov
pushf
mov
pop
inc
sub
orb
or
in
mov
cwtl
add
sahf
and
jae
mov
inc
push
in
inc
pop
sbbb
jle
gs
scas
xchg
mov
jl
pop
rorl
jle
fs
out
fisubrl
xor
sbb
pop
js
xchg
std
dec
inc
jecxz
pushf
jle
pusha
aam
jmp
xlat
daa
dec
mov
daa
inc
outsl
push
movb
in
pop
cmp
add
jp
popa
negl
iret
jge
add
mov
cmp
imul
aaa
les
inc
ja
insb
in
cmp
mov
xchg
lcall
insb
pop
leave
ds
cmp
mov
ret
mov
jne
roll
mov
dec
xchg
out
jg
mov
mov
aam
rorl
push
mov
or
cli
adc
out
popf
shll
mov
lcall
mov
adc
lds
pop
ds
sbb
and
outsl
sbb
fildl
lods
mov
sub
sbb
sahf
jge
pop
popf
or
cmpb
popf
pop
andl
in
add
push
fstps
call
aam
sbb
push
mov
idivl
or
popf
and
cmpsb
mov
inc
mov
int3
mov
sub
sub
cmpsb
push
pushf
cld
iret
inc
sbb
popa
fdivr
lock
push
sbb
rcl
push
dec
jb
faddl
lret
pusha
rcr
cld
jp
or
xchg
and
push
fstps
ficompl
in
adc
fistpll
in
sti
pop
fmull
ds
cmp
clc
mov
out
add
jp
jae
xchg
cs
leave
sbb
jge
inc
and
decb
ficomps
sti
adc
pop
out
cmp
mov
outsb
mov
pop
inc
scas
jns
xchg
add
loopne
push
pop
xor
sbb
cmpsb
pop
jp
mulb
jge
sar
mov
fst
adc
add
mov
adc
adc
sti
jae
in
inc
xchg
cmp
adc
popa
lcall
shrb
and
xlat
cwtl
add
cli
adc
movsl
push
add
cwtl
stos
sti
outsl
xor
fwait
cwtl
mov
sahf
mov
jp,pt
repnz
sbb
and
mov
pop
in
out
cmp
adc
or
sbb
pop
ss
pop
mov
ficompl
movsl
stc
cmp
sbbb
pop
and
lea
and
inc
pop
mov
movl
and
fnstenv
mov
std
push
popf
sahf
shr
adc
dec
mov
pop
negl
sar
sahf
fdivl
cltd
mov
fstp
arpl
decb
mov
lret
sub
int3
sbb
jnp
pushf
fcoml
stos
jle
gs
fidivrl
sbb
pop
cmp
fstenv
lds
cmpsb
ffree
pusha
test
adc
and
inc
adc
inc
mov
mov
movsb
fistpl
sbb
cmp
adc
jns
out
xchg
cmp
cwtl
and
stc
cmp
dec
pop
stc
mov
pop
sbb
jge
sbb
lods
movsl
movb
jns
inc
sarl
jl
fdivp
aad
xlat
add
pop
sbb
cltd
xchg
aam
or
mov
into
cmp
aas
repnz
xor
sbb
sbb
loop
in
jl
adc
sbb
xlat
fidivrs
enter
sbb
sub
cwtl
cmpl
cmp
and
pop
adc
enter
popf
pop
cli
pop
fsubs
test
mov
js
pushf
cld
fdivr
jns
dec
cli
lock
fwait
xor
popf
movsb
inc
pusha
clc
jns
jp
fistl
mov
mov
pop
jle
ds
pop
cmp
iret
sahf
adc
fiadds
negb
jl
mov
decb
mov
arpl
inc
out
cmp
divps
mov
iret
fdivrs
mov
je
jns
in
in
out
test
pop
push
shl
jbe
mov
incb
mov
jl
imul
lock
pusha
mov
and
pushf
sub
jge
mov
jbe
lds
idivb
sahf
cmp
pushf
call
sbb
bound
jo
and
xchg
movsb
cli
and
popf
popf
std
cwtl
movsb
fsub
pop
in
mov
fsubl
ficompl
shlb
mov
clc
or
and
or
push
jl
adc
push
pop
mov
sarb
sti
push
in
cwtl
pop
out
mov
aam
inc
pop
pop
lds
mov
xchg
mov
jle
rcll
sarb
sahf
imulb
mov
push
stos
add
fdivrl
add
les
mov
cli
xchg
in
xchg
inc
sbb
xor
outsl
cld
mov
inc
lcall
mov
mov
mov
loopne
es
in
sbb
daa
jle
mov
push
hlt
inc
ficoms
rcrl
and
and
rcl
cmp
cmpsb
popf
pushf
outsb
jge
add
dec
or
mov
cltd
mov
cltd
loopne
pop
std
fwait
into
push
push
sbb
fs
testl
dec
lret
pusha
ljmp
lods
sahf
ljmp
clc
js
jge
sbb
jns
pop
sbb
sbb
clc
into
cli
cwtl
lea
mov
mov
into
push
rcrl
or
pop
movsb
idiv
fimull
cmp
sti
add
cwtl
out
adc
pop
sarb
ficomps
fdiv
idivb
leave
and
mov
adc
cmp
cs
iret
outsb
xor
mov
or
idiv
das
stos
push
inc
push
rcll
movsb
or
outsl
or
pop
adc
push
loope
mov
std
xchg
into
and
out
js
jp
mov
sbb
mov
iret
pusha
stos
int
in
movl
push
clc
pop
cltd
popf
mov
sub
mov
jl
lods
incl
addb
sbb
in
xchg
mov
jns
cltd
inc
lcall
and
mov
rcrl
gs
clc
mov
out
ja,pn
cmp
jge
and
sti
repz
shrl
mov
and
in
inc
shlb
fistpll
dec
fcmovb
cmovbe
sarl
xlat
int3
xchg
idivb
push
sub
cmpsb
mov
push
add
cld
add
push
fcompl
out
frstor
sbb
add
popf
cwtl
cli
lahf
cmp
aam
pop
pop
jecxz
xlat
mov
sbb
lret
scas
mov
mov
and
or
popf
pop
pushf
sbbb
mov
outsb
lods
les
rdtsc
push
jge
adc
adc
pop
dec
sbb
mov
test
mov
movsb
cmp
pop
mov
sbb
pop
and
in
std
mov
movsl
mov
fimuls
fsub
adc
mov
arpl
pop
cld
iret
das
sbb
xchg
outsl
jmp
add
cmp
in
roll
ds
adc
loopne
addb
jns
and
js
call
xor
mov
pop
inc
inc
cmpsb
sar
or
cltd
shll
mov
clc
pop
sbb
inc
popf
pop
mull
sub
adc
mov
cmp
inc
stos
lcall
stos
imul
jb
mov
fstpt
push
adc
xlat
inc
sbb
adc
pop
cli
clc
sbb
push
mov
pop
lcall
and
sbb
in
sbb
in
pushf
jle
push
inc
idivl
or
sbb
jge
mov
cmp
mov
xchg
aaa
les
pushf
mov
and
pop
movsl
inc
clc
popf
mov
sahf
or
cli
pop
fstpl
sub
cmp
ss
xchg
std
into
pop
cld
xor
xchg
jle
mov
sub
xchg
add
cli
decl
and
push
stc
popa
push
sbb
inc
sbb
enter
jge
inc
sbb
pop
xchg
enter
fiaddl
daa
xor
arpl
ljmp
push
inc
pop
xlat
mov
stos
or
mov
mov
sub
dec
subb
sarl
incb
jns
imul
jl
lds
mov
cmp
xlat
cmp
in
iret
les
or
and
popf
cmpsl
clc
and
xor
pop
stc
sarl
sbb
mov
jae
shll
cmp
push
fsubs
ja
cmp
fs
adc
jp
mov
lcall
dec
stc
pop
cmp
rcr
pop
sahf
sti
out
adc
ss
inc
jle
pop
mov
jge
pop
mov
movsl
pop
dec
and
stc
mov
ds
rclb
fidivrs
pop
je
outsb
xchg
inc
decl
cmpsb
pop
jl
shrl
push
pop
inc
bound
sbb
cmc
dec
dec
pop
fldt
cmp
pop
dec
fstpl
ds
inc
fistps
cmp
pop
pusha
pop
jmp
fidivl
loopne
fldenv
fistpl
outsb
and
fimull
lea
rcrb
nop
decl
call
mov
cld
aaa
cmp
push
mov
mov
pop
sub
pop
lcall
push
loopne
pop
repnz
lret
jae
popf
clc
adcl
lds
push
jge
sbb
dec
das
dec
pop
xchg
fcomps
push
inc
push
scas
in
jo
xor
stc
jp
std
pop
pushf
fs
sbb
adc
cltd
xchg
mov
cs
js
and
bound
mov
ljmp
insb
lret
inc
cmp
mov
xchg
fs
fsubl
xchg
movsl
cmp
out
adc
xor
jo
jge
mov
cli
xchg
fiadds
into
add
out
mov
out
jle
push
repnz
loopne
aam
fisubl
mov
jl
js
jle
call
stos
clc
xor
pusha
in
pop
filds
incb
pop
mov
add
sbb
scas
js
jns
mov
xchg
sub
gs
jle
push
les
jns
cmp
adc
adc
xor
fsubrs
ficoml
es
pop
sti
cmp
rol
pusha
ds
sbb
cwtl
cmp
orl
sbb
jge
xor
sti
cmp
sbb
fidivrs
aad
movsb
idiv
inc
sbb
mov
cmp
adc
cmp
push
xlat
fcmovu
idiv
jns
sbb
mov
lcall
pop
aad
cmp
adc
push
pop
mov
sahf
cs
mov
fistpl
ss
sarb
mov
inc
ficomps
cmpsb
ss
shll
js
push
and
sarb
mov
mov
loop
or
mov
cmp
jmp
jbe
xlat
popf
and
jp
cld
in
lds
jge
adc
fistpl
idivl
cmp
pop
xchg
sub
sbb
pop
movsb
pop
cwtl
inc
cmpb
fldcw
pop
and
pusha
jns
sbb
fdivrp
mov
inc
sbb
xchg
xlat
jge
stos
pop
adc
push
adc
scas
clc
pop
cmp
js
loope
xchg
cwtl
sahf
popf
mulb
and
dec
out
pop
jp
aad
fisubs
cli
mov
adc
and
loopne
shrb
sub
fstpl
xchg
sbb
pusha
mov
fcomps
lcall
mov
and
out
cmpsl
sti
and
sbb
jp
dec
aad
mov
enter
in
clc
xor
sbb
aaa
jecxz
rolb
jmp
gs
and
pop
sbb
pop
cmp
mov
sub
fdivr
fiaddl
popa
xlat
lock
mov
sub
pop
ss
out
pop
cmp
lcall
pop
popf
clc
mov
sbb
xor
pop
lcall
jp,pt
lods
je
push
cmpb
popa
ds
xchg
mov
dec
adc
decl
pusha
call
je
mov
push
mov
cmpsb
mov
fidivrs
scas
js
leave
jl
xchg
sar
or
andb
pop
insb
pop
add
arpl
lcall
cmp
xchg
pushf
ficompl
or
rorb
in
pushf
in
mov
or
jge
fwait
pop
arpl
mov
pop
popf
xlat
mov
test
ficomps
cmp
cli
ds
jp
fucom
aam
mov
clc
pop
sbb
mov
jp
mov
xchg
mov
les
xchg
and
add
mov
xlat
cwtl
lahf
jl
pusha
sbb
loopne
pop
cmp
aas
inc
cltd
cld
jns
add
outsb
sti
pop
sub
bound
call
mov
xchg
jle
xlat
gs
mov
cmp
pushf
std
fidivrs
mov
rcrl
mov
faddl
divl
mov
xlat
cmp
sub
add
cmp
arpl
sub
dec
xchg
sti
rcrl
into
pop
pop
rcrl
mov
sbb
fnstsw
sahf
cmpsb
inc
cmp
aas
sbb
cmp
js
jo
sub
adc
inc
cmp
std
push
add
inc
mov
lcall
xchg
add
mov
negl
xchg
inc
ds
push
pop
pop
dec
jl
jle
and
and
out
xor
jae
adc
pusha
lret
xchg
js
rcl
lcall
xchg
test
mov
cli
es
test
xor
adc
adc
fwait
sti
int3
mov
clc
xor
jge
mov
adc
jo
and
sub
lahf
cli
fld
and
daa
add
pushf
xor
fwait
out
lret
xchg
dec
xchg
and
sbb
xor
test
mov
or
cmp
mov
pop
adc
fsubs
stc
add
aad
sub
jo
sbb
jp
and
and
mov
push
and
cmp
fcoml
mov
clc
sbb
mov
inc
pusha
fcoms
or
jle
in
add
lahf
sahf
xchg
ficompl
push
pop
jecxz
popf
mov
inc
xchg
jge
fsub
fidivrl
or
inc
stc
add
push
lea
fcompl
mov
jge
cmp
xchg
fmuls
add
out
cmp
mov
adc
out
mov
pop
into
fwait
negl
xchg
test
popf
adc
cld
and
sbb
rcrb
cmpsl
mov
mov
or
into
fnstcw
mov
dec
lret
push
fimull
pop
popf
cmp
adc
sub
sbb
pop
pushf
mov
and
jae
pushf
cltd
fdivr
mov
fcoml
scas
xchg
sbb
call
sahf
fsubrs
cmc
iret
adc
sarl
or
pusha
fstps
sub
mov
pop
xlat
iret
ds
mov
fdivrl
and
dec
jge
inc
or
sahf
ja
dec
and
jbe
cwtl
test
fwait
mov
mov
jl
cmp
pusha
adc
add
push
pop
inc
mov
std
mov
mov
cwtl
in
ror
xchg
or
fiaddl
or
ficompl
inc
aaa
ljmp
sahf
int
cmp
sub
lcall
cli
dec
sahf
cmp
mov
lds
pop
adc
push
sti
sahf
imul
add
lret
cmp
loope
cli
adc
pop
sbb
cmp
sbb
repnz
idiv
imul
jge
push
pop
mov
jl
pop
cmp
fbstp
pop
xchg
fprem
cmp
adc
cli
aaa
cli
repnz
into
adc
inc
and
popa
stc
loopne
lds
ljmp
push
dec
cmp
arpl
jae
push
incl
and
dec
inc
xor
push
pop
fistps
in
pop
outsb
nop
xchg
insl
inc
and
and
xchg
pop
cmp
int3
inc
std
cmp
cmp
idivl
mov
add
into
in
and
in
inc
xlat
dec
in
fs
inc
add
mov
fldt
in
insb
cmpsb
xchg
sbb
imul
pop
mov
mov
adc
jecxz
fcmovb
and
fcoml
mov
xchg
cwtl
fldl
cmc
int3
jl
and
pop
mov
xor
sbb
dec
sbb
fidivrl
rcrb
loopne
add
iret
cmp
fidivrs
ljmp
sub
sbb
mov
cmpsl
xchg
mov
pop
pop
fnsave
mov
lcall
out
out
add
cmpsb
xchg
popf
cmc
movsb
and
mov
jns
inc
cltd
adc
mov
imul
inc
mov
imull
ss
fsubrp
cmp
imul
mov
js
popf
jg
cld
fldenv
je
fdivrl
and
cwtl
adc
mov
add
jb
loope
mov
jle
lret
loopne
fisttpll
add
sbb
jp
fstp
jmp
fadds
pop
mov
mov
pop
mov
dec
mov
rcrl
movsb
jle
dec
cmpsb
pop
pushf
sti
mov
pop
popf
adc
mov
clc
xchg
push
gs
fsubrs
mov
sarb
into
jg
in
lods
fldt
jb
faddl
lods
and
popf
pop
outsl
js
add
shll
ud0
inc
inc
jl
push
arpl
jp
hlt
sahf
lods
bound
cmp
pop
sbb
mov
pop
dec
mov
mov
outsb
pop
enter
lcall
fcomps
xchg
jge
inc
int
mov
insl
cs
mov
dec
and
fwait
js
cmp
arpl
sbb
cltd
sbb
pop
sbb
ljmp
jge
ja
ret
loop
cmp
ljmp
xchg
test
jp
je
call
and
icebp
xor
add
cwtl
enter
dec
xchg
dec
mov
inc
pop
push
xlat
pop
pushf
jl
int3
push
push
add
xor
dec
xchg
aad
lret
add
popf
xor
mov
lret
xchg
popa
jl
push
lds
push
and
inc
and
sbb
cmp
and
lds
sbb
sub
sub
dec
mov
push
push
inc
xchg
sarl
lcall
pop
push
dec
pop
and
xchg
ret
sahf
mov
adc
loopne
ss
js
jl
nop
cwtl
and
push
sti
repnz
mov
pushf
xor
inc
out
cmp
pushf
pusha
push
lcall
xlat
ret
pop
std
push
xor
repnz
inc
shll
and
inc
imulb
loop
push
mov
loop
out
adc
sub
jl
cld
cmp
loop
adc
es
test
into
rcrl
or
call
mov
roll
inc
loopne
xor
jo
sbb
inc
sbb
pop
and
push
cltd
rcrl
sahf
jecxz
xchg
fistps
jbe
shl
xchg
ffreep
fimull
push
mov
mov
loopne
lock
movsb
xor
nop
int3
push
xchg
push
loopne
mov
dec
push
subb
push
int
int3
pushf
mov
ficoms
std
sub
xor
xlat
adc
cmp
adc
xor
xchg
fstl
jb
push
rcll
ja
xchg
loope
xchg
push
fsts
mov
mov
js
jge
sti
mov
pushf
sbb
fisttpll
mov
xor
xor
and
mov
shrl
mov
lods
jo
dec
cmp
fdivs
lock
mov
cmp
add
mov
lcall
shr
rcll
xchg
orb
mov
pop
mov
push
fiadds
outsb
mov
pop
rorb
popf
mov
inc
push
pushf
cmp
popf
mov
dec
aaa
divl
imulb
sti
cltd
mov
cmp
inc
and
pop
das
add
pop
cld
sarb
fstpt
std
xchg
xor
pop
and
mov
pop
inc
mov
jg
inc
shll
adc
inc
fstps
into
pop
sub
popf
or
sar
fisubl
sbb
add
decb
jl
cmp
insb
mov
fnstcw
cmc
push
std
mov
lcall
negl
pop
sbb
add
pop
sbb
sbb
cmp
and
cmp
cmp
mov
rcrb
std
mov
mov
arpl
sbb
or
mov
fstps
lahf
js
pop
jl
adc
pop
and
cmp
sbb
pop
xchg
aam
push
pop
clc
pusha
sbb
lcall
add
mov
cmp
mov
inc
inc
lods
jle
sbb
push
mov
mov
sub
mov
mulb
cwtl
fdivr
pushf
fidivs
xlat
ljmp
mov
imul
movb
jg
and
jl
fdivrl
mov
cmp
lcall
loopne
pop
mov
clc
mov
sbb
cmp
cmp
cmc
sbb
ret
clc
jbe
inc
in
imul
pop
sbb
rcrb
mov
scas
fsubr
jns
add
xchg
inc
loopne
adc
inc
sbb
in
pop
js
inc
mov
imul
mov
jp
js
mov
xchg
cmp
or
jns
cli
fcompl
fistl
sub
mov
in
mov
xchg
mov
cmp
xlat
mov
idiv
fbld
mov
cmp
popf
sbb
cmp
xor
aas
negl
ret
jp
or
sbb
xchg
pop
data16
ds
sbbl
sbb
loopne
rcll
sbbb
add
cmc
add
cmp
std
pusha
cmp
jle
cli
outsb
sbb
sbb
pop
mov
mov
and
faddl
and
negb
sbb
cmp
sbb
sbb
js
or
pop
mov
aas
stc
sbb
cltd
mov
push
push
divb
jge
jmp
xchg
faddl
sarb
movsb
cmp
fstl
jle
or
leave
mov
sbb
fcomi
sbb
sbb
loopne
mov
fsubrs
and
cli
adc
fnstcw
jg
fistl
and
sbb
fisttpll
les
mov
sub
cmp
jns
sahf
sub
sbb
fidivrs
lret
inc
cmp
in
pushf
mov
pop
sbb
mov
dec
je
mov
cltd
xor
xorps
and
addb
pop
xorps
pop
sarb
mov
cltd
lcall
add
ficoml
lahf
xlat
push
cmp
clc
pop
js
jbe
mov
mov
and
sbb
push
cmp
cmc
push
pop
jo
mov
sbbl
fstpt
js
jo
inc
push
idivl
sbb
pop
cwtl
daa
xor
ficompl
sbb
flds
cli
aaa
lahf
sbbb
fdivr
loopne
push
sbb
pop
sbb
mov
cmp
jg
jp
mov
adc
enter
mov
fsubs
es
sar
pushf
outsb
call
inc
cmp
pop
fbld
test
xlat
sar
popf
jge
fstpt
jo
and
sbb
lcall
xchg
sbb
popf
mov
fs
repnz
push
fs
xor
mov
pusha
mov
paddsw
jns
fcomps
lock
fistl
stc
jl
sbb
addl
cmp
mov
xchg
pop
out
cld
adc
pop
cmp
pop
gs
popf
fistpl
fadds
push
cld
ret
mov
ljmp
popf
cltd
loopne
pop
mov
jecxz
jp
inc
cli
mov
mov
xor
ficoms
or
fs
xlat
ret
mov
pusha
pushf
adc
jle
jp
xchg
cld
sbb
lret
std
pop
dec
fstps
mov
andb
jns
outsl
adc
mov
outsb
loopne
loopne
and
mov
xchg
jle
push
popf
jo
adc
cli
sar
sbb
inc
and
pop
mov
jp
in
fcoml
sbb
arpl
sbbl
jmp
cmp
cmp
mov
xchg
nop
cwtl
test
lret
popa
push
lods
fadds
inc
iret
adc
pop
pop
inc
fisubrs
xor
xor
pop
ficompl
push
jns
or
adc
lds
xor
imul
movsl
mov
mov
jns
es
push
or
pusha
pop
cmp
push
adc
sbb
fbld
or
pop
fsub
jns
loopne,pt
mov
jg
mov
push
inc
sbb
xchg
jno
fstpl
inc
loopne
rolb
hlt
rcrb
push
movsb
jecxz
xchg
dec
inc
bound
sbb
pop
cmp
cmpsb
push
lcall
jg
sti
mov
pusha
and
cmp
pop
jo
xchg
aam
sbb
test
lock
push
cmp
inc
xor
popf
jns
cli
aam
adc
repnz
cmp
pop
pusha
cltd
clc
cwtl
xlat
mov
adc
xchg
jl
sub
jle
mov
mov
mov
call
js
jp
jmp
hlt
cmp
mov
daa
jnp
add
pop
lret
arpl
dec
and
sbb
pushf
xchg
std
mov
pop
cwtl
cli
call
das
lds
mov
lds
cmp
push
lods
loopne
mull
inc
sbb
sbb
jle
shll
jbe
mov
mov
or
out
push
pop
mov
pop
xor
sub
xchg
inc
outsb
imul
mov
fstpt
mov
inc
or
jp
inc
clc
cli
inc
cmpsb
aam
inc
fbld
or
adc
cmp
jmp
pop
loopne
sbb
cld
pop
cmp
fsub
pushf
aas
inc
gs
sarb
fdivrs
sbb
neg
add
mov
popf
cmp
and
pop
pop
stc
xchg
sbb
adc
cli
sti
fwait
jle
pop
push
fadds
xlat
int
and
sbb
sahf
or
push
pop
mov
fcompl
jp
mov
fdiv
xlat
or
xchg
cmp
and
lret
mov
ljmp
jle
jbe
iret
ss
das
mov
sbb
and
jns
jl
cmpsl
incl
cmc
xor
mov
push
xor
mov
mov
mov
push
pop
out
aas
stc
xchg
mov
fs
sti
sbbb
mov
das
add
ss
push
add
jge
fsubs
inc
clc
pop
dec
fcmovu
loope
stc
pop
lcall
push
sbbl
inc
cltd
in
xor
sub
adc
outsb
fldt
lcall
add
pop
xor
pop
pop
dec
cwtl
cltd
adc
mov
push
add
or
pop
cmp
dec
inc
inc
pop
imul
cmpsl
and
loopne
inc
sbb
cmp
mov
mov
and
aam
pop
daa
adc
pop
pushf
mov
lret
xor
cmc
fildll
push
clc
mov
add
in
add
ficomps
sti
jl
fistpl
jp
mov
dec
mov
add
sbb
stc
imul
shll
fistpl
sub
pop
sahf
pop
fcmovu
ds
sbb
or
xlat
or
loopne
popf
pop
sti
cmpb
out
fidivrs
bound
mov
lcall
and
pushf
push
data16
sbb
and
lahf
inc
stc
das
fimull
sub
and
xor
rcrb
fcoml
js
inc
mov
fcomps
jnp
loopne
fcomps
cwtl
mov
lahf
enter
push
push
faddp
shll
daa
pop
daa
sarb
repnz
fidivl
or
mov
clc
fwait
add
outsb
andl
sub
out
xor
stc
pop
cld
inc
sbb
xor
jbe
popf
insb
setne
and
fcompl
pop
pop
testl
mov
aas
mov
sub
cmp
cmp
ficomps
stc
or
fcomi
pusha
fldl
fwait
stc
loopne
js
sbbb
sbb
sbb
sbb
pop
loope
fisubl
cmp
mov
sub
dec
and
sarl
lret
or
pop
ficomps
inc
sbb
loope
xchg
outsl
sbb
les
into
jp
cmp
lret
push
frstor
pusha
inc
repnz
push
sbb
and
fstps
clc
adc
mov
xchg
fs
cwtl
orb
aam
jae
mov
xchg
test
addl
adc
and
decb
mov
sti
sub
in
fcmovnb
lret
cmp
pushf
inc
mov
push
icebp
jae
jle
roll
and
sbb
jns
stc
std
fld
out
jns
push
adc
sub
adc
sbb
pop
cli
mov
or
fidivrs
cmp
mov
fisubs
in
add
pop
or
pop
jl
cmp
ficomps
jge
xchg
pushf
add
xchg
pop
xchg
cmp
mov
cld
mov
pushf
adc
cltd
cli
sub
and
popf
xchg
idivb
pop
lcall
sahf
or
cmpsb
jae
arpl
movsl
cmp
push
sbb
orl
and
and
adc
adc
mov
cltd
xlat
sbb
ds
mov
fstps
cmp
xchg
js
pop
aas
or
fidivrl
inc
cwtl
test
xchg
mov
pushf
cmp
pop
sbb
mov
into
cli
or
arpl
xchg
fisubl
fimuls
out
popf
cmp
stc
sbb
les
mov
and
or
inc
aam
sbb
popf
adc
push
mov
lods
or
sbb
add
in
pop
xchg
and
ljmp
test
mov
loopne
xchg
into
jnp
push
adc
push
aam
orb
mov
mov
stos
aaa
and
mov
or
adc
inc
std
cmp
ss
pop
push
clc
cmpl
popf
fisubs
push
out
pop
jl
sbb
out
pop
push
jp,pt
std
mov
inc
pop
mov
jns
dec
js
xor
mov
jae
adc
mov
adc
cmp
cli
pop
adc
adc
stc
fdivrs
jge
ss
cltd
fldcw
sbb
out
cwtl
mov
and
and
sbb
push
and
pop
jle
lcall
in
jmpw
dec
lds
idivl
or
or
adc
adc
pop
cmp
sub
push
dec
adc
xorb
repnz
out
cwtl
sti
popf
jns
fs
adc
pop
sbb
cmp
and
add
push
mov
sahf
jp
lods
mov
sbb
js
cmp
fiadds
fdiv
or
lock
loope
sub
push
jo
xchg
scas
push
call
sbbl
sbb
stc
fcoml
std
cli
mov
loopne
aas
cwtl
cmp
pop
test
sbb
sbb
mov
fiadds
mov
cld
jno
pop
xchg
xlat
jns
fstl
inc
mov
sbb
and
fisubl
pop
fs
lock
call
mov
das
lcall
scas
sti
aaa
sbb
rcpps
cltd
addb
xlat
or
cmpb
mov
cwtl
fisttpl
pop
pop
dec
pop
mov
pushf
cwtl
pop
fidivrl
push
mov
pop
inc
lods
push
out
sbb
popf
mov
popf
cld
sbb
mov
jns
sbb
pop
inc
popf
jge
mov
mov
pushf
pusha
mov
pop
cwtl
iret
or
movsl
adc
addr16
xchg
mov
sub
mov
imul
fistl
enter
xor
cmpsb
data16
cmp
and
jp
mov
inc
xchg
jmp
cld
fisttpl
mov
push
jp
cltd
into
out
movsbl
cmp
cwtl
and
pop
stc
add
roll
out
xor
adc
rcr
xor
popf
incl
mov
sbb
sbb
and
sbb
sbb
lahf
pop
pop
xchg
and
sbb
test
shlb
xchg
xor
loope
mov
popf
or
int
roll
jnp
push
mov
push
cmp
in
jge
je
push
cmovbe
cwtl
pop
jb
das
rorl
pop
sbb
inc
cli
std
add
and
lcall
stos
stc
aam
int
cmp
aas
fbld
mov
xchg
mov
stos
xchg
out
fnsave
fs
sbb
xor
push
rcrl
and
pop
mov
fnsave
push
cmp
pop
loope
fstp
repnz
dec
fst
mov
fcoml
sahf
aam
cli
sbb
inc
mov
pop
sti
pop
mov
dec
jnp
testl
ds
sbb
or
pushf
pop
push
fcompl
cli
ficomps
add
mov
mov
fcmovnb
mul
fdivrl
adc
xchg
sbb
mov
cmp
mov
fisubl
pop
cltd
pop
xchg
or
mov
stos
pop
mov
les
ja
mov
sbb
sbb
mov
mov
xchg
mov
xchg
push
in
repnz
pop
add
cmp
fistl
clc
and
sarl
push
inc
popa
cmp
xor
ds
and
mov
icebp
scas
fs
stos
popf
dec
xchg
jo
pop
jb
popf
push
xchg
iret
xchg
int3
sub
in
adc
mov
iret
cmp
in
ss
and
cmp
inc
mov
inc
jl
pusha
inc
mov
popf
sbb
mov
or
idivl
add
test
pop
pop
test
inc
mov
cs
out
fninit
sti
clc
mov
sbb
jae
adc
dec
into
bound
and
pushf
sub
fldenv
in
cltd
lods
xchg
scas
pop
decl
mov
movsb
cwtl
adc
xlat
xchg
shl
dec
pushf
sahf
adc
push
in
pop
leave
xor
and
fdivp
and
xchg
jmp
sarl
in
movsl
pop
fdivs
adc
aam
sbb
cs
pushf
rcrb
xchg
in
inc
xor
addr16
push
xchg
fidivrs
dec
cs
inc
cmp
xchg
xchg
and
add
mov
pop
aaa
in
sbb
sbb
jae
sbb
ret
jle
test
enter
clc
xlat
je
mov
pop
pop
repz
clc
loopne
jns
push
push
cwtl
cli
pop
and
addr16
jl
add
cltd
std
pop
cmp
xchg
not
xchg
fistps
dec
mov
imul
push
fmul
mov
mov
mov
lcall
js
fildl
popf
push
lods
jmp
fdivs
in
int3
sti
mov
xchg
test
pop
pushf
add
pop
scas
inc
mov
push
mov
add
jg
pop
push
out
rcrl
adc
pushf
sbb
popf
rcl
dec
adc
stos
add
ret
pop
xor
imul
in
andl
sbb
adc
ds
pop
push
jle
js
adc
cmp
adc
stc
inc
movsb
sti
fwait
jp
sbb
jo
xor
fstps
cld
mov
sbb
pop
mov
pop
out
mov
mov
xchg
xchg
xlat
jl
pop
mov
mov
xlat
fsubl
rcll
xlat
pushf
ss
adcb
push
xchg
fdivrl
pop
insl
xchg
loopne
iret
pop
pop
stc
xchg
je
int3
rcrb
fcoml
pop
rcll
pop
lods
xchg
rcr
pop
pop
xchg
out
loope
adc
xchg
shl
jecxz
xchg
push
push
mov
fwait
xchg
loope
or
loope
test
fsub
das
mov
cmp
cwtl
adc
or
out
dec
add
out
test
negl
fcmovnu
js
sti
dec
jnp
jmp
jo
mov
xor
sbb
xor
sub
or
and
das
sbb
aas
cli
cmp
add
sub
mov
sbb
fdiv
fistpl
pop
std
sbb
das
or
pop
adc
cltd
mov
sub
js
clc
sub
loop
int3
dec
test
mov
xor
add
call
add
cmp
pusha
mov
inc
sbb
cld
fdivrl
xor
into
push
fldcw
pop
arpl
xor
dec
rcrl
mov
das
mov
cmp
outsl
and
pop
loopne
sti
sahf
sbb
jge
xor
add
sti
mov
add
pop
idivl
pusha
sbb
clc
pushf
fidivl
mov
cmpsb
cwtl
fsub
out
inc
and
gs
pop
sbb
cltd
xor
xorb
lea
mov
rcl
mov
fidivrl
js
and
cmp
fisubl
cmc
cmpsl
cmp
fmuls
fcomp
push
and
pop
je
inc
adc
inc
sbbl
xchg
shr
fstpl
jle
inc
push
jp
cmp
std
sub
es
push
popf
cwtl
xlat
lcall
mov
add
ds
push
ds
mov
inc
adc
fnsave
into
arpl
lcall
jle
cmovge
mov
idivl
adc
add
pop
sbb
cmp
mov
fnstsw
mov
fsubs
cwtl
or
mov
mov
mov
sahf
pop
sti
mov
mov
sbbb
cmpsl
ss
fisubs
lret
dec
mov
add
xchg
loopne
pusha
or
pop
addl
add
cli
cmp
adc
mov
jo
xchg
jns
cmpb
sar
test
repnz
stc
and
add
push
cmpsb
inc
and
push
add
adc
lcall
sbb
sar
and
cwtl
iret
xor
outsb
inc
mov
cs
cmp
lahf
in
inc
xchg
out
loopne
setnp
and
add
ja
jo
sbb
push
cmp
sbbl
mov
cli
inc
loopne
stc
js
cwtl
sti
jle
pop
iret
and
xchg
jl
pusha
jg
cmc
mov
jle
inc
mov
decl
cmp
sbb
pop
in
jle
out
mov
popf
jns
insl
sahf
fld1
add
mov
jge
in
cltd
sbb
das
or
mov
and
stc
sub
fnstcw
ret
mov
insb
divl
movsl
xor
movsl
stc
and
fsubs
popf
jno
movsb
inc
xor
sahf
adc
lcall
stc
fcmovnbe
popf
cli
leave
sti
xlat
mov
sbb
pop
jns
jle
cmp
aaa
pop
int3
loop
inc
cmp
inc
mov
in
pop
push
add
sbb
push
hlt
sahf
mov
jbe
cwtl
cld
js
mov
sbb
dec
xchg
xchg
cli
mov
out
sbb
or
popf
cmp
sahf
inc
jns
cltd
sbb
stc
ds
fidivrs
subb
sti
cmp
outsb
orl
pop
jecxz
bound
iret
adc
sub
sahf
ficoms
mov
cli
rcrl
call
popa
mov
sbb
fs
mov
sbbb
cmp
fs
inc
cmpsb
sbb
xchg
repz
cmp
roll
lds
out
js
aad
jns
sbb
and
sbb
mov
add
pop
mull
aas
adc
mov
loopne
sarb
ficompl
mov
pop
imul
sahf
inc
adc
and
and
push
and
stc
pop
dec
sahf
add
adc
std
pusha
mov
or
xor
cmp
sbb
out
scas
sub
lds
rcrb
jge
repz
call
lcall
inc
sbb
mov
xlat
mov
xor
and
lods
jae
jo
in
dec
sbb
icebp
fstpl
sub
flds
jnp
daa
xor
add
pop
mov
xchg
pop
mov
pop
ljmp
out
jge
aaa
inc
adc
cmp
pop
cmp
jmp
imull
cmp
lcall
mov
gs
jl
mov
or
data16
mov
cmp
sbb
incl
inc
pop
mov
sbb
and
xor
pinsrw
sbb
add
stos
sbb
mov
mov
cld
loopne
push
mov
fldenv
lret
add
clc
test
fdivrs
cmp
jns
mov
push
rcrl
jp
test
sbb
popf
xor
mov
xchg
adc
mov
cltd
sarl
cmp
aas
stc
jae
jns
sub
nop
insb
inc
fidivrl
dec
pop
jns
push
lods
push
or
cld
loopne
mov
imul
decb
mov
pop
popf
pushf
sub
add
push
sbb
ficompl
test
adc
adc
movsb
and
and
xchg
cmp
aam
xor
cwtl
mov
inc
sbb
pop
lahf
and
push
push
xlat
cmpsb
push
jmp
std
rolb
pop
sub
add
push
loopne
les
fidivrs
mov
in
cmp
pop
and
or
fstpt
mov
mov
movsb
xor
sbb
lds
pop
sbb
fnstcw
or
sbb
fcomps
push
sti
adc
mov
mov
mov
js
mov
in
notl
mov
mov
in
cmp
fcomip
mov
mov
xlat
mov
loopne
jge
inc
mull
pop
out
cmp
inc
stc
cmp
pop
decb
scas
ss
shrl
push
adc
nop
sbb
and
cld
fcomps
ds
mov
jmp
cmp
xchg
cmp
std
popa
jp
lods
add
cmp
mov
sti
sbb
mov
cltd
or
mov
lds
mov
cmpsb
lods
pop
cmp
or
mov
lods
sbb
int
sbb
sbb
xchg
stc
and
mov
pcmpgtd
mull
cmpsb
fstpt
pushl
std
insl
sbb
andl
pop
mov
ja
test
pop
pop
outsb
add
adc
in
mull
iret
pushf
sub
mov
jge
sbb
movsb
push
xlat
cltd
pop
mov
pop
mov
fsub
ljmp
test
mov
sti
lcall
sub
pop
sbb
jmp
mov
rorb
jl
stos
ret
rcrl
hlt
push
fcoms
push
cltd
aaa
inc
sbb
dec
repz
add
pop
cwtl
add
lcall
fldl2e
lock
aaa
push
sbb
and
pop
push
and
stc
fidivrs
jge
sahf
js
xchg
les
jg
fisubs
add
xor
scas
and
ret
fiadds
pop
jnp
jbe
mov
stc
dec
mov
xlat
inc
and
pop
clc
dec
xchg
mov
cwtl
lcall
mov
imul
mov
or
adc
pop
sbb
inc
ficomps
sub
bound
cmp
lods
pop
sbb
cmp
popa
pop
ss
mov
out
cmp
std
test
xchg
into
test
dec
pop
loop
fdivrl
lock
sbb
and
jl
mov
neg
jp
inc
pop
stc
mov
mov
mov
loopne
loope
mov
jns
fsubs
push
jg
mov
popf
pushf
movsl
cmpsl
and
mov
frstor
add
js
fistpl
clc
push
sti
cmp
pop
pop
jecxz
pop
rcrb
mov
jl
cmp
add
mov
cmp
or
into
movsl
pushf
pop
jge
pop
mov
fstp
sbb
cwtl
js
sbb
and
jae
add
inc
pop
mov
jns
mov
or
lds
dec
sbb
xlat
stos
adc
sbb
imul
lds
sarb
fisubrl
ss
mov
pop
mov
pop
cmp
inc
sarb
jnp
xlat
aaa
mov
pop
pop
lock
int3
cmp
sbb
and
inc
mov
mov
test
push
cli
lahf
mov
pop
jo
cmp
pop
add
data16
pop
push
add
es
xor
in
test
flds
arpl
add
sbb
cwtl
call
mov
adc
popf
inc
pop
repnz
mov
mov
adc
inc
cmpsl
imul
idivl
lods
adc
adc
mov
mov
xchg
sbb
pop
movsb
jle
pop
popf
negl
adc
data16
xlat
mov
adc
pop
out
xlat
fnstcw
and
mov
mov
fs
mov
daa
sub
mov
lds
pushf
push
scas
sarl
lcall
ficoms
mov
repnz
mov
sbb
pop
les
mov
jl
cltd
ss
inc
shrb
pop
inc
cltd
pusha
cld
cwtl
shrl
xor
mov
imul
pop
cmp
sahf
pop
sbb
inc
push
push
iret
leave
lds
pop
mov
cwtl
sahf
sbb
mov
fcompl
pop
or
jnp
cmp
jp
mov
dec
into
test
or
lret
jae
fadd
sti
addb
cmp
push
movsbl
sub
cmpsl
lret
mov
pushf
std
dec
push
out
mov
inc
sbb
add
add
mov
test
adc
push
lret
jp
sbb
add
sahf
adc
outsl
push
pop
imul
xchg
cmp
or
js
shl
pop
or
pop
pop
mov
sbb
or
lds
pop
fadds
ds
sbb
sub
sahf
xchg
negl
cs
dec
push
mov
repnz
xor
in
test
fcomi
sbb
cli
sarb
pusha
add
bound
and
and
negb
adc
xchg
and
mov
push
outsl
negb
stc
sub
mov
xchg
add
jns
push
push
popf
push
inc
xlat
or
and
fldcw
idivl
mov
fs
movsb
popa
imul
xchg
mov
repz
pushf
sar
inc
mov
insb
cmp
psrad
arpl
inc
add
mov
push
add
push
mov
add
sub
test
bound
mov
jmp
cmp
cmp
rcrb
incl
lcall
clc
sbb
stos
sub
mov
pushf
cmp
sbb
jg
inc
mov
or
or
std
inc
andb
dec
or
mov
and
xlat
enter
jmp
popf
arpl
movsb
push
mov
add
stc
clc
dec
mov
jo
ja
sbb
pusha
xor
loopne
mov
aad
sbb
arpl
jle
sbb
out
xchg
pop
sahf
adc
stos
adc
adc
or
lcall
stos
icebp
push
cmp
clc
adc
fstpt
mov
jmp
push
pop
adc
fwait
xlat
out
inc
sbb
fsubrl
mov
in
in
inc
mov
lea
xchg
jl
xchg
adc
pop
ja
push
adc
dec
push
mov
out
add
ja
addr16
jmp
negl
mov
mov
sub
sbb
fstpl
or
dec
push
cmpsb
popf
pop
mov
scas
mov
insl
pop
xchg
out
sbb
xlat
pop
sti
mov
ja
adc
enter
jecxz
jl
lahf
pushf
mov
jbe
in
mov
add
sbbb
ret
jp
cwtl
mov
dec
sbb
pusha
pop
jae
cmp
pop
pop
adc
mov
pop
pushf
cld
inc
fstps
popa
mov
and
adc
aam
loop
mov
scas
fs
nop
xchg
jl
adc
mov
mov
mov
dec
pop
xchg
add
dec
and
dec
pop
adc
jne
cwtl
fmull
push
popf
sbb
jle
cli
incb
mov
mov
cld
sar
mov
js
inc
enter
stos
xlat
jae
or
adc
ficoml
mov
cmpsb
fcmovnu
fisttpl
imul
sti
adc
cld
sub
push
call
popf
fists
sahf
fcompl
pop
dec
clc
cld
shll
sbb
cwtl
dec
mov
cmp
add
mov
xchg
cmp
mov
ds
clc
push
sti
inc
idivl
adc
fstl
ss
jle
vpsubd
pop
and
push
mov
lcall
shl
and
lcall
sahf
movsl
xchg
xchg
cmp
sbb
sbb
pop
cmp
fidivrs
adc
mov
mov
pop
pop
outsl
sti
lcall
adc
sbb
pop
inc
mov
and
fcomps
outsl
outsb
call
and
stc
sahf
mov
mov
fnstsw
js
pop
cmp
pushf
stc
pusha
mov
sub
fxch
inc
fdivrl
mov
sbb
mov
lcall
dec
fucomp
and
dec
sbb
cmp
daa
mov
xchg
xchg
xchg
pop
aam
adc
sbb
cmp
mov
xchg
xor
dec
and
mov
xlat
jp
adc
bound
cmp
mov
clc
sub
adc
lret
cmp
ret
pop
mov
insb
out
cmp
add
into
mov
sbb
ds
pop
movsl
cltd
sti
fistpll
fsts
inc
push
mov
fldenv
mov
jge
push
jns
or
jmp
push
cmp
and
popf
jle
testl
std
sbb
pop
sbb
outsb
mov
jp
mov
gs
mov
and
sbb
sbb
mov
inc
jge
inc
daa
cmp
xchg
pusha
sti
call
jae
pop
xchg
mov
stc
mov
fisubl
cli
inc
mov
and
andl
dec
mov
xlat
cmpb
cli
mov
and
lcall
xchg
mov
mov
and
cltd
adc
pop
or
cmp
adc
sbb
aaa
cwtl
rolb
sahf
cmp
mov
fmull
xor
mov
adc
and
push
add
xor
das
lcall
pop
outsl
in
jge
sbb
mov
fisubl
cmpb
stc
inc
lret
sbb
cmp
ret
add
and
adc
adc
stos
out
sbb
jne
cmpsl
dec
xchg
lahf
jp
in
xlat
mov
cld
rcrl
insb
into
cmpsb
cs
neg
fcomps
pop
add
idiv
sarb
xchg
pop
out
sbb
stos
push
pop
aam
mov
popf
mov
pushf
and
lea
xchg
jecxz
stc
data16
jns
cmpsl
sub
rclb
cmp
clc
inc
stc
ja
push
pop
fbld
sbb
dec
adc
adc
clc
cmp
jns
sbb
aas
std
pop
adc
and
jp
jne
sbb
clc
out
cmp
ds
imul
inc
fidivrs
sbb
cmpsb
mov
shll
popf
sbb
pop
or
pop
jb
fiadds
aam
stc
add
and
xor
std
decb
loopne
lret
pop
cwtl
in
js
lds
mov
adc
and
xlat
adc
lret
sbb
cmp
sbb
imul
sti
pop
jmp
fsts
sahf
je
mov
arpl
popa
and
dec
jl
lods
inc
clc
fdivrs
stos
mov
and
inc
filds
lret
cmove
lods
movsb
jge
enter
outsl
jnp
mov
cmp
mov
lcall
inc
inc
idiv
gs
popf
pop
xchg
mov
loopne
cmp
aam
paddsw
add
dec
xchg
mov
imul
aas
cmp
xchg
jg
dec
xchg
sbb
cmp
mov
sbb
adc
in
xchg
push
adc
stc
xor
push
push
sbb
aaa
repnz
mov
lods
mov
mov
cmp
scas
sbb
mov
scas
jbe
repz
or
sbb
jecxz
sbbb
mov
pop
cmp
and
dec
negb
pop
mov
pushf
cwtl
popf
mov
push
movb
sub
scas
inc
clc
sbb
xchg
cmp
sbb
pop
cmp
mov
add
cmp
ffree
out
in
lds
pop
std
pusha
xchg
test
sahf
rcll
mov
ss
in
mov
inc
jne
mov
xchg
mov
pop
int3
loopne
or
mov
rolb
js
out
sbb
pop
gs
mov
pushl
jl
mov
inc
imul
pop
push
faddl
mov
loopne
call
xchg
inc
jp
cwtl
push
or
pop
fdivrs
jns
arpl
jb
ficoms
mov
pushf
popf
mov
gs
enter
mov
inc
loopne
pop
mov
das
out
pop
sbb
cmp
mov
dec
mov
pop
sbb
clc
xchg
push
pop
mov
and
jp
mov
out
pop
fstpt
scas
and
test
cmp
push
xor
fsts
aam
gs
xchg
sahf
fstpl
adc
mov
ss
jl
pop
or
fwait
cmp
sbb
add
push
fnstenv
push
mov
arpl
inc
mov
repnz
pop
inc
js
imull
pop
xlat
daa
in
call
mov
andb
pop
pusha
sbb
out
pop
clc
xlat
jle
mov
pop
sahf
data16
sbb
adc
mov
cld
mov
outsl
fnstenv
gs
mov
adc
mov
movsl
test
mov
xlat
fsubrs
lahf
pop
cmp
fwait
sti
gs
popf
or
jl
mov
inc
sti
sbb
push
push
jmp
cwtl
lds
out
sbb
inc
xlat
push
mov
popa
loope
cwtl
fs
mov
sbb
jns
pop
mov
fdivrl
jp
mov
popf
cmp
jbe
clc
dec
fidivs
clc
push
adc
sarl
stc
pop
sbb
rcll
std
fwait
rorl
addb
sub
clc
shlb
adc
pushf
cmp
jns
outsb
out
imul
pop
cmp
mov
imul
fld
insl
lds
pushf
mov
fdivrl
inc
mov
adc
les
scas
gs
cmp
or
lcall
bound
mov
sub
fadd
xchg
mov
cmp
ds
jge
jns
jmp
mov
ss
sbb
lds
mov
arpl
adc
js
sbb
mov
mov
jbe
in
pop
negb
js
jg
mov
or
or
xchg
xchg
sub
int
cmp
fcompp
xchg
pop
jbe
dec
clc
ficompl
fiaddl
pop
pop
faddl
mov
jae
xchg
mov
inc
sbb
sub
jnp
cli
pop
negb
jns
cmp
jmp
pop
sbb
fdivrl
rclb
lcall
fidivrs
jle
jl
adc
notl
cwtl
pop
jp
mov
inc
xchg
xor
mov
mov
xchg
sbb
jle
cwtl
lcall
cmp
js
pop
sbb
sbb
add
cmpsb
scas
cmp
cmpb
inc
das
xchg
dec
push
fwait
clc
repnz
arpl
inc
cmp
mull
push
jbe
lcall
lock
pop
sbb
jmp
xlat
lock
push
repnz
or
fidivrl
aaa
push
xlat
xor
mov
xchg
add
leave
push
insl
arpl
pushf
pushl
cld
nop
hlt
mov
cli
lcall
lret
cltd
fcmovbe
aaa
push
mov
arpl
jge
fidivl
push
pop
cmp
mov
mov
jo
imul
fs
mov
mov
sbb
inc
inc
jge
clc
js
mov
mov
sbb
dec
sti
and
sbb
aas
fwait
sbb
out
fldenv
insb
pop
sbb
mov
movsl
adc
dec
cld
push
pop
mov
in
pop
mov
mov
idiv
fdivrs
sarl
pop
jge
fisubs
cmp
fcomps
jge
adc
call
or
adc
push
xchg
pop
or
fistpll
fwait
push
sbb
push
adc
xor
out
aas
jl
or
mov
cmp
or
inc
test
rcrb
add
cmp
or
fiaddl
pop
les
pushf
sarb
xchg
mov
movsb
push
lret
inc
or
pushf
mov
dec
stos
and
sbb
aas
mov
pop
out
jg
or
sbb
lds
js
inc
stc
imul
fcomps
xor
lcall
push
jle
mov
push
cmp
gs
testl
rolb
xchg
adc
mov
xlat
mov
push
ljmp
sub
and
sti
sub
adcb
call
sub
jge
fs
mov
cli
add
xchg
inc
and
pop
loopne
lcall
sub
rcrl
cmp
mov
insb
ficoms
xchg
adc
inc
push
and
fs
outsl
pop
popf
mov
cmp
cltd
fwait
add
mov
cld
mov
repnz
rclb
and
and
shll
push
pop
cmp
jle
fstpt
ds
jg
inc
nop
sbb
sahf
pop
sbb
aaa
inc
mov
out
cmp
pop
push
pop
pop
push
push
fidivrl
inc
sbb
pop
lock
sahf
cli
sbb
cmp
cld
add
cli
and
adc
data16
or
pop
fs
movsb
arpl
sbb
and
dec
and
fstpt
idiv
inc
pop
push
jl
adc
and
clc
adc
insb
or
mov
inc
cmp
jmp
sbb
dec
not
cld
lods
fstpl
scas
sbb
sbb
add
cmc
push
adcb
push
rorl
cmp
add
ss
pop
lret
mov
popf
sahf
ficoml
add
sti
rcrl
inc
lcall
mov
repz
mov
sahf
inc
popa
fucomi
push
fdivrp
fnstsw
cld
and
jle
add
sbb
sbb
addb
mov
mov
cmp
popa
les
inc
jp
icebp
xor
fcom
mov
xchg
sbb
cmp
add
xchg
jnp
repnz
ror
out
sub
test
or
push
pop
push
lds
mov
fcompl
pop
jg
fadd
mov
aas
cwtl
cmp
adc
popf
fsubp
cmp
cmp
jbe
fs
pop
sarb
mov
sbb
add
sbb
cwtl
jns
aam
decl
daa
cld
adc
insb
es
movl
cmp
inc
pusha
jp
stc
scas
cmc
mov
gs
xchg
outsl
or
leave
add
and
push
pusha
leave
jmp
cmp
push
cwtl
test
bound
fidivrs
pusha
lcall
hlt
or
mov
popf
pop
fistpll
xor
popf
cmpsb
pushf
cmp
push
movsb
sahf
cmp
fdivrs
scas
ss
icebp
xchg
xor
pop
jo
leave
push
addl
clc
xchg
sub
insb
iret
mov
mov
pop
dec
add
imul
xor
mov
sbb
fs
fldenv
jb
je
cmpsl
jecxz
nop
push
jle
fiadds
mov
fidivrl
movups
and
dec
mov
dec
inc
mov
fadd
or
mov
mov
ficoms
test
mov
add
std
ficomps
inc
sbb
inc
sub
xor
or
in
mov
sahf
add
jmp
hlt
popa
rclb
pusha
mov
inc
cmc
pop
ds
jns
lds
cmp
xchg
jae
mov
sbb
mov
sti
xlat
test
outsb
sub
int
and
js
add
lea
mov
cmp
sbb
pop
popf
mov
push
pop
cmp
mov
jle
lds
pinsrw
or
ficomps
adc
sbb
fdivl
mov
inc
jl
arpl
scas
or
fcomp
aaa
std
xchg
loopne
adc
sbb
cwtl
movsl
xchg
orb
xor
fdivrp
cli
xchg
insb
mov
jns
sbb
pop
mov
mov
cli
jbe
sti
mov
xchg
and
cmp
cmp
movsl
cmp
sbb
int3
mov
gs
dec
clc
in
and
jl
and
cmp
es
jl
xlat
jp
xchg
cld
cmp
xlat
adc
inc
fmuls
push
jg
inc
sbbl
lcall
push
mov
flds
dec
inc
pushf
sbb
xor
push
ja
mov
jle
lcall
xchg
negb
cmp
lcall
lcall
dec
mov
inc
cwtl
std
shl
sbb
mov
icebp
loopne
orl
shll
pop
lods
inc
fstpl
movsb
xlat
mov
faddl
sub
dec
jns
mov
mov
popf
mov
jge
stc
cmpsb
out
lcall
js
dec
gs
cmp
inc
inc
pop
pusha
iret
ret
test
xlat
jecxz,pt
fcoml
fs
cmc
add
jns
cmp
fcomps
sbb
cli
into
mov
adc
pushf
pop
sub
and
fsubs
cmpsb
fidivrl
add
subb
scas
filds
push
and
inc
sbb
mov
js
xor
dec
cmp
sbb
fildl
adc
into
cmp
add
in
mov
into
xchg
sbb
pushf
cmp
inc
mov
ss
mov
pop
cld
shl
lcall
int3
pop
jle
xchg
inc
inc
lods
stos
push
inc
pop
cmp
xchg
scas
popa
cmpsl
mov
sti
push
mov
inc
xor
push
sbb
pop
insb
cld
mov
fdivrs
clc
mov
sar
push
jns
rorb
mov
test
sti
ss
or
pop
xlat
inc
jge
lcall
push
popf
cli
clc
fiadds
xchg
icebp
push
mov
jns
fs
arpl
stc
std
fstps
and
sti
rcrl
jge
inc
sbb
push
mov
mov
cwtl
mov
jns
sub
in
inc
and
imull
sbb
loopne
xchg
adc
xchg
jp
outsl
pop
or
mov
cmp
jle
sbb
xor
lds
fidivrl
jle
push
push
js
mov
loopne
sbb
cwtl
add
inc
out
pop
lcall
jl
in
lds
fcomi
gs
sbb
and
add
xlat
ja
repz
adc
pop
pop
pop
xchg
pop
mull
cltd
cmp
xchg
test
inc
inc
mov
jge
adc
jge
sbb
jp
sbb
cmp
xor
inc
xor
adc
push
dec
dec
pop
pop
fs
orl
arpl
sahf
dec
frstor
sbb
xlat
aaa
sti
inc
mov
jbe
scas
add
cltd
push
mov
adc
mov
cmp
xchg
add
jp
or
inc
loopne
jge
mov
mov
cwtl
inc
pop
or
sar
pop
push
jmp
stos
test
and
lds
jp
pop
cmp
arpl
cmp
nop
or
jae
sbb
sub
jge
jbe
std
sti
out
mov
dec
pop
cmc
cmp
dec
popf
fwait
mov
pop
sbbl
aam
std
mov
ror
pop
loope
mov
iret
and
sahf
pop
ss
lcall
cltd
and
push
popa
sbb
jg
inc
lcall
aas
sahf
sbb
and
dec
mov
cmp
lea
mov
fstp
add
ret
and
pop
inc
fs
lock
xchg
mov
clc
popf
ja
adc
cmp
pop
sbb
out
pop
popf
out
mov
std
sub
inc
xor
sar
aas
dec
pop
jbe
jp
int3
and
mov
sbb
sbb
mov
ret
jns
cwtl
jmp
add
sbb
fcom
add
add
xchg
dec
mov
cli
hlt
cmp
or
mov
cmp
and
bound
clc
inc
data16
mov
add
sub
sar
xchg
pop
es
pop
cli
std
aam
sbb
inc
fidivrs
pop
or
cli
adc
add
mov
stc
xor
icebp
xchg
daa
xlat
ljmp
rcr
jge
mov
inc
sbb
movsb
xchg
outsl
mov
and
and
pop
jle
sahf
stos
sahf
mov
and
sbb
cmpsb
fdivrl
mov
push
ret
sbb
xor
lret
fwait
or
pop
inc
inc
jle
lock
ljmp
fidivs
cpuid
stc
inc
jae
inc
andl
movsb
jge
cmpb
idiv
std
xlat
clc
lds
push
data16
out
jp
cltd
add
mov
cwtl
jl
xor
pop
cmp
sub
jmp
into
sbb
jo
movsb
js
popf
jo
xchg
rcrl
push
dec
mov
mov
into
ret
js
push
stos
mov
adc
aam
xor
mov
mov
popf
dec
mov
jp
lahf
mov
pusha
repnz
sbb
int
testl
ds
jns
stos
jle
into
je
loopne
mov
mov
fidivrl
adc
sbb
cmp
shlb
jle
in
cmp
sbb
std
clc
arpl
jle
pop
fcmove
daa
mov
mov
inc
inc
lret
jg
pushf
enter
and
lds
pop
ss
fcoml
xchg
outsb
ror
mov
mov
gs
and
push
ficoml
pop
sbb
fcmovu
loop
cwtl
sbb
mov
push
dec
mov
inc
cwtl
js
mov
popf
cmp
sbb
sbb
sub
inc
sub
sbb
cmp
into
rcrb
popa
fimull
popf
sub
addb
xlat
shlb
dec
orl
sbb
out
xor
pop
fisubl
ljmp
enter
sbb
inc
xchg
cmp
idivb
lea
ds
cmp
negl
sahf
inc
cmp
pushf
adc
cwtl
xlat
lahf
jp
inc
ds
jge
jns
popa
movsb
sbb
arpl
pop
xor
popf
cmp
mov
cmp
jl
mov
loope
pop
clc
frstor
jge
cmc
fisubs
in
pusha
mov
std
dec
movlps
xlat
mov
mov
sbb
movsb
sbb
inc
sti
sbb
and
fcmovu
fnstcw
repnz
decb
jns
and
lea
push
inc
mov
push
lcall
dec
stc
mov
into
sbb
nop
cltd
and
pop
sub
mov
jle,pn
int3
ret
push
fistps
lods
inc
rcrb
adc
fcmovu
xchg
pop
out
sbb
fldl
jbe
ss
jl
js
xor
mov
pop
repz
jns
jg
fcomp
and
movsb
lret
das
cld
gs
xlat
inc
lock
xlat
popf
loopne
inc
add
enter
sbb
cli
or
mov
sahf
mov
inc
ds
into
push
mov
or
sbb
stos
or
adc
push
enter
je
shl
mov
and
sbbb
xchg
mov
jnp
mov
mov
fmul
ja
shl
dec
aaa
push
sbbl
sbbb
sti
add
adc
jp
cltd
stc
clc
repnz
stos
leave
mov
push
sti
aad
xor
movsl
pop
std
lret
jp
or
sti
iret
and
lcall
sbb
idiv
sub
cli
aam
iret
xchg
lahf
push
fwait
test
addb
sahf
inc
lock
and
and
push
xchg
mov
push
inc
sbb
insb
cwtl
sbb
mov
sbb
in
fidivrl
js
std
xor
sbb
les
and
mov
cmp
pop
xchg
cmp
faddp
lds
fcoms
nop
cwtl
pop
lds
cwtl
pusha
xlat
sbb
and
mov
cmp
js
sbb
mov
rorb
pop
jge
sbb
inc
or
in
pop
or
add
mov
scas
mov
into
jecxz
pop
aad
faddl
xchg
cld
mov
mov
adc
stos
xor
pop
xor
jmp
mov
enter
incb
sbb
cli
pop
cmpsl
out
and
adc
and
and
push
jge
rcll
inc
sti
stc
std
and
inc
sbb
mov
lds
adc
pop
fiaddl
cwtl
pop
and
clc
sbb
pop
into
jl
stc
sti
mov
sbb
and
adc
cmp
pop
lcall
shlb
ds
xchg
mov
cmp
stc
pop
fcompl
fprem
lcall
mov
add
into
fisubl
cmp
push
cmp
jmp
lea
ret
sbb
inc
cmp
cmp
js
sahf
adc
cmp
sbb
adc
ficompl
pop
cmp
push
mov
xlat
jg
mov
idiv
popf
pop
add
rcrl
pushf
out
pop
push
jns
push
sar
xchg
cld
pushl
jle
cld
or
cmp
adc
aas
jge
bound
push
shlb
or
ja
sbb
unpckhps
adc
mov
xchg
ret
lds
sbb
push
lahf
lds
inc
dec
cli
movsb
sahf
mov
cli
pop
jge
negl
add
lock
sbb
and
pop
inc
cmp
jle
pop
cli
lahf
popf
cmp
adc
idivl
idivl
out
mov
clc
fidivrl
mov
leave
jle
cli
mov
sbb
int3
and
sbb
pushf
mov
mov
pop
pop
sar
out
sti
pop
jnp
dec
or
adc
mov
and
add
cli
lret
call
jbe
pushf
add
xlat
sbb
loope
mov
xor
movsl
in
inc
ljmp
inc
pop
xor
sbb
jge
inc
sbb
aam
inc
insb
mov
std
pop
les
int
fcompl
fstpt
sbb
push
fsubs
fsubl
mov
stos
xchg
jle
xchg
in
pop
lds
fcompl
xchg
cmp
aas
sahf
stc
adc
fistl
lcall
negl
rcll
icebp
pushf
popf
shrl
xchg
xor
mov
jle
add
fprem
outsl
in
mov
cld
popa
shrl
mov
popf
adc
push
and
fstps
sbb
jmp
fnstcw
adc
popf
jp
lcall
iret
and
imul
lcall
fstpl
jb
jge
adc
fsubl
fdivrl
or
inc
incl
sar
pop
cli
addr16
nop
cmpsl
xor
dec
idivb
std
sti
or
jecxz
andl
inc
xlat
mov
lds
ds
scas
and
lods
cmpsb
rcll
mov
cld
into
ret
sbb
andl
xlat
inc
sbb
xchg
dec
cmpl
ds
xchg
aam
lcall
jge
cmc
and
sbb
mull
pop
sbb
pop
pop
jge
mov
frstor
call
cli
rcll
mov
sti
clc
call
sbb
ds
push
fnstsw
jbe
pop
mov
cli
movsl
inc
insb
jl
hlt
fcomps
int3
js
mov
ss
test
xor
pop
add
add
pop
mov
pop
cmpl
loope
testb
sbb
jnp
adc
adc
fcompl
cli
rolb
cmpsl
push
lds
push
cld
pop
pop
cmp
out
cmpsb
fstps
add
sti
jg
mov
xchg
jecxz
pop
xor
pop
mov
sbb
mov
jp
gs
xlat
lcall
popf
cmpb
jo
cmp
in
cltd
xor
xchg
insl
sbb
mov
add
test
neg
mov
ds
inc
cmpsb
sbb
cwtl
pop
adc
sbb
imul
pop
jl
cltd
adc
jp
js
mov
cmp
fsts
gs
stos
xchg
cwtl
sbb
xor
push
mov
jnp
sub
sub
cmp
cmp
imul
mov
add
mov
or
push
fsubs
popf
cwtl
fistpl
pop
fisubrs
and
ja
cmp
cmpsl
pop
or
cmp
and
pop
lcall
test
cwtl
pop
jb
fistpl
fcompl
cltd
mov
fisubrs
jle
data16
jp
add
aam
mov
popa
mov
fstpt
adc
sbb
mov
and
mov
pop
loopne
pop
jns
sub
cmp
cld
cmp
cmpb
cmp
push
fisubrs
pop
jecxz
or
std
pop
ss
stc
mov
add
pop
mov
dec
lcall
pusha
js
lcall
mov
push
js
mov
scas
rcrb
mov
fcmovb
pop
mov
cmp
movsl
cmp
faddl
jecxz
mov
push
xchg
fistpl
lcall
xchg
push
cmc
dec
xor
pushf
sarl
xor
lret
pop
loopne
add
and
aaa
clc
std
mov
cld
pushf
inc
and
sub
idivl
adc
loopne
mov
xchg
ret
pushf
lcall
jns
mov
mov
fistpl
cmp
jnp
or
lea
sbb
inc
cmp
cwtl
jnp
lods
stos
pop
or
pop
sbb
mov
ljmp
sbb
cld
pop
pop
pop
pop
scas
out
rcl
mov
push
pushf
or
sti
aaa
jl
ds
lcall
sbb
pop
std
jle
inc
pop
add
sub
out
mov
cmp
sahf
pusha
adc
jae
push
jp
pop
fstpt
push
mov
mov
sbb
testl
dec
xchg
idivl
push
sbb
push
xchg
stc
cwtl
pop
inc
sbb
fiadds
jecxz
mov
push
nop
fnstcw
fidivrs
jns
into
fwait
push
aas
icebp
inc
fsubs
das
pusha
sbb
jnp
jmp
xorb
pop
jge
cmp
dec
outsb
ror
push
mov
and
or
push
sbb
cs
xchg
mov
pop
mov
lcall
negl
fcomp
arpl
sbb
out
cwtl
popf
sbb
ss
jge
mov
inc
mov
mov
out
inc
mov
testl
ror
cpuid
rolb
mov
insb
cmpsb
cmp
sbb
arpl
aam
mov
adc
sub
dec
outsb
mov
mov
movsl
jmp
pop
cld
shll
add
and
pop
cli
adc
ficomps
mov
jl
inc
jmp
mov
jecxz
inc
out
or
sbb
mov
inc
cmp
fistps
mov
mov
in
iret
mov
xchg
push
lods
gs
mov
test
xchg
adc
inc
and
sahf
movsl
int3
or
mov
loopne
fcmovu
fnstcw
sub
andb
jmp
daa
pop
clc
lret
adc
and
inc
inc
pop
fstpl
cmp
jns
fwait
jnp
aaa
mov
inc
dec
dec
cmp
pop
cmc
mov
pushf
xchg
jecxz
shll
or
lcall
bound
cmp
jl
fistpll
pop
js
inc
rcll
sub
jp
ljmp
cmp
xchg
mov
push
stos
ds
fdivrl
sub
and
mov
cli
inc
movsb
enter
popf
and
enter
fnstsw
rcr
fldcw
popa
xor
aas
ja
stc
inc
mov
in
inc
cli
jp
cmp
in
xchg
mov
pop
loop
or
cli
cmp
mov
clc
sbb
cmpl
cmc
xor
les
aas
adc
jge
frstor
push
jns
mov
mov
pop
inc
sti
sbb
cmp
xchg
add
jp
add
daa
rol
sbb
jge
jb
and
add
mov
ffreep
mov
out
mov
fcomp
inc
xchg
sbb
push
mov
sbb
xor
lcall
add
sbb
shll
ja
fwait
testl
test
and
jge
lahf
mov
fdivl
js
pop
leave
cmp
inc
xlat
mov
mov
pop
mov
notl
xchg
or
popf
cmp
pushf
add
sbb
push
mov
scas
adc
shlb
jge
sbbb
pop
push
jae
xlat
fidivrs
and
inc
pusha
orb
nop
lret
sbb
xlat
jl
std
mov
push
out
call
or
or
popa
fdivrs
and
mov
arpl
sbb
push
repnz
pop
push
ficomps
inc
cmp
sti
js
dec
sbb
mov
addb
roll
xor
cmp
push
sahf
cld
cli
test
pop
adc
pop
stc
repnz
mov
mov
mov
cli
insb
cs
add
fnstsw
cwtl
mov
popa
xlat
sahf
mov
mov
fcmovnb
ss
push
xchg
test
fdivrl
std
popa
pop
pop
fbld
pop
negb
jl
cmpsb
cmp
js
cmp
push
sbb
push
sahf
addr16
test
pushf
jge
or
push
jns
lds
cwtl
in
leave
out
cmp
loopne
fidivrs
adc
mov
mov
sbb
ds
fs
idivb
imull
xchg
popf
ja
xchg
pop
sub
pop
inc
pushf
cmp
les
cs
outsl
dec
adc
fisubl
leave
outsb
mov
std
inc
cmp
pop
push
dec
jg
rcrb
or
pop
inc
pop
jp
fcompl
sbb
jge
pushf
pop
push
pusha
cmp
add
ds
and
mov
xor
and
pop
fldcw
gs
mov
cld
jns
mov
xchg
push
ss
xor
mov
push
mov
push
addr16
jo
shlb
lcall
mov
sarl
sbb
fists
ds
mov
lods
pop
and
fnstcw
fimuls
imul
push
xchg
sbb
stos
loope
mov
cmpl
or
jl
dec
or
cmp
imul
fisubl
mov
pusha
mov
pop
adc
cmp
loopne
dec
les
inc
inc
cmp
mov
cli
es
fdivrs
jp
mov
sbb
cmp
fdivrl
sti
mov
fisubrs
pop
xchg
pop
arpl
fucom
lcall
pop
jp
mov
pushf
xchg
fs
cld
movsb
ret
ficomps
sub
add
xor
movq
fistpl
adc
dec
pushf
arpl
inc
idivb
jge
clc
xchg
or
mov
loopne
fstpt
mov
cmpsl
popf
cmp
repnz
cmp
xchg
jg
lea
xchg
dec
lock
stc
stos
or
es
imul
std
sbb
mov
xor
jge
dec
xor
jne
pushf
sti
cmp
bound
adc
adc
pop
fcmovnu
cmp
in
std
and
fwait
sbb
insb
pop
mov
ja
addr16
push
js
fcoml
sbb
js
sbb
daa
insb
leave
bound
pushf
clc
mov
test
mov
cli
lcall
sub
fdivrl
stos
mov
and
and
rolb
mov
into
push
pop
fistpll
pusha
divb
enter
xchg
adc
jo
push
sbb
sbb
icebp
push
jmp
js
cmp
lahf
loop
cmp
dec
fisttpll
add
and
dec
pop
lds
popa
in
imul
sbb
xlat
ss
addr16
sbb
out
lcall
sbb
push
mov
daa
cmp
sbb
jo
test
out
and
cltd
fcompl
incb
popa
jbe
rorl
jns
push
clc
fidivs
cmc
je
sbb
pop
jp
and
cld
clc
pop
mov
sbb
ficomps
fistpl
cwtl
sbb
xchg
push
arpl
sbb
les
outsl
ud0
add
mov
pop
xor
pusha
enter
mov
xchg
xor
sarb
movb
pop
mov
xlat
fdivrl
stc
std
cmp
or
pop
mov
xchg
and
daa
add
inc
cmp
cmp
cli
sub
dec
cmp
mov
cltd
mov
cld
jl
sbb
std
inc
call
cmp
cltd
cli
testl
dec
pop
or
mov
cltd
push
inc
ss
mov
push
inc
fstps
mov
mov
ss
cmp
xchg
shlb
inc
fidivrs
ds
push
pop
sbbb
icebp
pusha
or
and
jb
jo,pn
xchg
pop
cmpsb
cmp
mov
fsub
clc
xlat
add
add
jl
iret
popf
sbb
mov
sbb
mov
lcall
mov
push
or
loopnew
sbb
cmc
dec
push
clc
and
inc
lcall
sub
gs
jg
push
and
andb
jge
inc
fldl
push
std
pop
cwtl
clc
dec
stos
or
mov
inc
pusha
icebp
jns
jp
inc
xchg
or
cmp
pop
inc
stc
fmull
inc
dec
and
xchg
andb
popf
xchg
stc
mov
or
inc
pop
cld
sbb
mov
lds
mov
mov
cld
pop
in
daa
movsl
fnstsw
fadds
sbb
je
mov
leave
pop
and
adc
or
aam
stc
add
sbb
cmp
fstpl
jns
mov
jp
push
pop
fdivrl
fbstp
xor
mov
adc
clc
leave
ds
pop
xchg
enter
dec
fcomps
mov
pop
xlat
cmp
pop
popa
fstpt
js
test
lock
leave
sti
jge
or
push
lock
sbb
roll
repnz
sub
adc
mov
or
adc
les
inc
inc
aam
adcb
push
mov
sub
je
mov
add
cwtl
ficomps
sbb
pop
jns
xchg
imul
pop
outsb
lds
sub
jno
cmp
mov
jl
mov
fxch
jecxz
sti
repz
cmp
jae
loopne
inc
sbb
ja
xor
or
mov
pop
cli
popf
movsl
dec
cmp
push
dec
cmp
mov
cmp
sbb
fistpl
sahf
inc
inc
jge
mov
sbb
push
cmp
adc
cld
ficoms
stos
xor
pop
testl
mov
xchg
rorb
movsb
adc
inc
sbb
jne
sbb
sbb
mov
mov
push
arpl
sbb
test
mov
jl
aam
fisubl
clc
cmp
pop
push
sbb
mov
sahf
push
idivb
cmp
sarb
arpl
pop
sbb
scas
sbb
adc
jo
sbb
popf
lds
pop
test
bound
bound
out
js
rcr
out
mov
xchg
out
add
sbb
dec
jge
pop
push
rcrb
push
pop
push
cmpsb
mov
or
mov
cltd
pusha
cmp
cmpsb
and
into
add
repnz
sbb
mov
inc
xchg
sti
sbb
xlat
jns
mov
fnstcw
pop
sbb
mov
and
pop
rcrl
fstpt
dec
jge
mov
xor
stc
xchg
scas
call
adc
push
inc
and
aam
adc
adc
cltd
xchg
mov
shr
pop
jp
mov
faddl
xor
test
test
sbb
pushf
cmp
std
sahf
sahf
xor
push
in
pop
sub
lds
ja
xor
pop
fstpl
sbb
lcall
add
cld
ficoml
out
dec
pop
movsl
or
mov
and
add
mov
outsl
fs
std
ljmp
pop
pusha
clc
fwait
jle
out
inc
pop
sbb
pop
add
incl
popf
notl
ds
pop
adc
popa
pushf
cmp
push
sbb
mov
jle
push
leave
cmp
scas
fwait
negb
int
or
pop
xchg
dec
cmpsb
fisubrl
pop
mov
pop
and
push
jae
xchg
gs
pop
add
cld
enter
lcall
outsl
fldt
xchg
stos
pop
pop
push
lret
popa
mov
push
cltd
sbb
cwtl
and
fstps
and
fimull
sahf
rcrl
and
and
push
xor
sti
cmp
push
push
xchg
aam
cmpsl
loop
lcall
inc
popa
jmp
pusha
mov
insl
mov
push
xchg
mov
shll
inc
std
frstor
das
lods
imul
lahf
pop
mov
jo
imul
inc
fadds
mov
les
dec
sbb
or
loopne
sarb
add
xlat
fs
gs
push
mov
xchg
add
cmc
mov
inc
jp
aas
adc
push
jge
pop
sar
clc
sbb
mov
push
popf
sarl
lcall
mov
enter
fldenv
clc
aas
std
popf
pop
lds
fcmovnu
ss
xor
and
mov
inc
popf
pop
sbb
div
mov
fbstp
shr
cmpsl
and
mov
in
lcall
lods
jae
out
pop
out
push
jns
aas
ficomps
cli
inc
pop
loope
sahf
pop
mov
negl
lcall
cwtl
push
pushf
rcrb
dec
out
pop
mov
mov
mov
mov
adc
pop
lcall
fdivs
out
in
inc
or
cmpsl
test
fcomp
push
add
jns
jbe
stc
scas
fcomps
mov
nop
call
inc
and
sbb
stc
mov
xor
lcall
loopne
into
jge
lret
inc
pop
imull
xlat
hlt
cwtl
jns
and
stc
inc
pop
sbb
mov
push
pusha
mov
gs
div
gs
shll
and
sub
imul
jge
jne
sti
filds
pop
mov
push
sbb
pop
xor
pop
mov
push
jle
dec
cmpsb
sbb
pop
inc
inc
mov
in
pop
sbb
arpl
fldl
cmpsb
jb
cmp
ret
xchg
and
push
pop
mov
add
push
jl
call
sbbb
mov
pop
xlat
jle
fisubs
loop
lcall
pop
pushf
call
mov
pop
mov
int3
and
mov
fistpll
lds
inc
pop
idivl
or
testb
add
mov
xlat
pushf
pushf
dec
jle
pushl
mov
std
shlb
std
daa
movsb
mov
mov
iret
sti
xchg
jno
jbe
rolb
in
sahf
sbb
test
cld
lds
jns
ffree
cmp
mov
mov
fisubs
gs
xlat
inc
mov
cli
add
arpl
pop
xchg
dec
xlat
inc
incl
cwtl
fdivr
addl
cltd
push
pop
jge
fidivrs
sbb
adc
xchg
loopne
xlat
xor
shlb
push
sti
rcrb
sbb
xchg
jp
jl
mov
pop
call
jb
or
shlb
call
test
mov
popa
popf
pop
add
add
mov
cwtl
popf
pop
mov
imull
sub
std
jl
and
frstor
mov
mov
ds
jle
sbb
js
inc
mov
pop
push
pop
negl
mov
lcall
js
xchg
mov
mov
xorb
cmpsb
je
movsb
in
cli
sbb
cmc
pop
xchg
and
xchg
pop
sahf
adc
push
loopne
xlat
adc
std
cwtl
movsb
sbb
fstpt
enter
xlat
fldcw
jnp
adc
sub
imul
pop
cmp
fsts
pop
add
pop
cmp
insb
cltd
fbstp
sub
adc
std
stos
xchg
xchg
sbb
mov
or
pop
in
inc
mov
mov
xchg
cmp
mov
fisttpll
sub
push
xor
mov
pop
mov
out
sbb
jns
sbb
cmp
cmp
push
jp
dec
pop
inc
cli
pop
pop
dec
int
jbe
sbb
and
xchg
out
push
pop
out
cwtl
mov
mov
idivl
xlat
loopne
in
outsb
and
pop
inc
cltd
in
pop
dec
cmpb
fdivrl
xchg
jecxz
sbb
ret
cmp
push
pop
dec
ss
pushl
cli
sub
sbb
dec
xchg
inc
xchg
shlb
stc
sbb
add
sub
mov
into
movsb
mov
push
in
cmp
mov
js
sbb
add
clc
jl
jecxz
sbb
les
inc
negb
add
popf
filds
xor
inc
rorb
daa
out
jl
cmp
ficoms
fadd
jp
jle
ljmp
xchg
roll
mov
mov
jge
sti
std
iretw
xchg
adc
inc
pusha
jle
movsb
jne
and
fistpl
pop
mov
sti
lds
xchg
and
lea
fs
mov
inc
jns
ficomps
push
fsub
xlat
sbb
movb
mov
mov
sbb
push
lcall
cwtl
inc
loopne
mov
mov
push
pop
and
pushf
and
pop
mov
cld
nop
mov
push
xchg
mov
inc
mov
sbb
test
int
scas
xchg
mov
pop
in
mov
cwtl
pop
fisubs
cli
cld
add
pop
imul
loope
das
stos
add
xlat
mov
xchg
inc
sbb
push
out
and
jno
addr16
adc
sbb
fwait
mov
dec
inc
jnp
stc
movsb
adc
push
sbb
sub
popf
js
and
pop
imul
push
mov
or
sbb
sbb
mov
push
push
movsl
cwtl
lcall
add
dec
mov
pop
cli
les
cmp
push
pop
cld
and
inc
jns
cwtl
adc
stos
mov
iret
pushf
sub
mov
sbbb
pop
std
pusha
outsb
dec
cli
stos
sbb
ficompl
pusha
inc
adc
popa
data16
and
cld
add
or
xchg
cs
pop
sbb
mov
sarb
fstl
xchg
mov
cwtl
sub
clc
and
or
loope
cmp
sub
sub
pushf
fistpl
and
cmp
mov
mull
inc
sbb
enter
rcrb
sbb
push
push
cmp
cmp
aas
pushl
hlt
sbb
sbb
mov
xor
clc
cltd
fcomps
sti
pusha
ljmp
ds
pop
cld
cmp
mov
mov
into
adcb
xlat
popf
cmp
js
in
jl
cmp
iret
sbb
into
mov
dec
and
lret
fistpl
xchg
sbb
cmp
add
jle
cmp
clc
and
and
arpl
fistpl
cmp
movsl
add
shll
testb
inc
rorl
ja
xchg
inc
test
outsb
xchg
in
in
push
mov
fsubrp
shr
popf
insb
mov
or
mov
fs
ss
jb
jge
mov
cmp
ds
push
inc
cmp
mov
mov
cmp
jge
ltr
mov
pop
std
out
jl
in
push
idivl
clc
push
fs
mov
and
mov
cmp
dec
jno
data16
jb
pop
xchg
dec
jle
mov
fadd
jb
mov
lds
bound
ss
ds
mov
push
std
cmp
sub
mov
pop
stos
add
rcrl
cld
xlat
jno
fists
push
add
xor
ja
int3
dec
pop
aas
pop
fimull
loop
sbb
push
frstor
mov
and
add
jl
mov
fstp
lret
in
sbb
decl
jle
jp
cli
fcompl
sub
test
inc
out
lcall
cmp
xor
jle
pop
cli
xchg
fdivrs
mov
popf
pop
mov
xchg
cmp
pop
inc
shll
push
lods
popf
sti
rorb
fdivr
popf
ds
outsb
pop
add
es
mov
adc
xor
adc
les
pushf
das
into
sbb
or
fstp
mov
dec
les
stc
cmpsb
jns
inc
fcmovu
mov
sti
sbb
enter
sbb
frstor
shrl
sti
sbb
mov
and
ds
add
mov
das
mov
xchg
aad
ret
loope
fisubs
cmp
inc
adc
push
inc
sti
sbb
lock
stc
popf
push
rcr
in
mov
fstpt
aad
sbb
imul
popa
mull
xlat
fcoms
out
pop
ds
cli
pop
mull
pop
cld
xchg
lcall
cmp
pusha
mov
movsb
dec
sbbl
cmp
adc
fnstcw
dec
pop
jge
loopne
std
inc
jl
lcall
mov
pop
sbb
push
add
xchg
push
fisttpll
arpl
pop
pop
mov
aam
xchg
adc
fldpi
fcomps
fistpl
xor
xchg
adc
and
push
cmp
xchg
fdivrs
outsl
sbb
sub
sbb
and
fsubl
dec
sahf
iret
sbb
fidivrl
cmp
push
add
clc
sti
xchg
and
xchg
sbbl
sahf
mov
xchg
sbb
fcmovnbe
ret
add
adc
fdivl
roll
sub
stc
ss
shr
mov
jmp
mov
mov
sbb
sti
cwtl
jle
xor
jb
ficomps
and
fmull
sahf
push
syscall
cwtl
xlat
pusha
xchg
mov
sbb
fstl
fcomp
pop
cmpb
inc
push
inc
mov
fdivs
jg
cmp
xlat
jae
cld
fcomp
lods
or
rcrl
fs
repnz
mov
mov
cwtl
sub
and
mov
sbb
jb
sub
fsubs
and
pop
push
sbb
jp
fstl
mov
mov
xor
adc
pop
jbe
fcmovnbe
shrd
cmc
add
pop
std
pop
js
jp
aaa
fdivrs
pop
cmpsl
and
lret
jbe
repz
test
stos
mov
pop
stos
shlb
neg
inc
pop
movsb
cmp
hlt
dec
mov
cmp
loope
std
fstpt
add
lret
mov
cmp
inc
cli
cwtl
push
mov
addr16
push
mov
cmpl
je
mov
sub
adc
jecxz
scas
popf
in
mov
xchg
repnz
push
mov
add
push
xchg
sbb
or
js
inc
negl
xor
inc
test
cmp
lcall
jp
jmp
mov
cli
and
ficomps
sbb
sbb
in
cwtl
popa
cld
jl
xchg
mov
and
sbb
sarb
jp
jmp
in
js
adc
cmp
pushf
cmpsb
and
clc
test
cmp
push
shll
push
aaa
gs
fnstcw
xlat
popf
xor
inc
pop
mov
bound
test
jge
fadd
shr
cmpsl
or
jns
mov
js
pop
daa
ljmp
pusha
cmp
push
stc
movsb
sbb
pop
pop
xor
mov
sbb
popf
inc
jp
inc
jle
inc
pop
or
ficomps
add
mov
pop
ds
js
and
loopne
cli
sbb
icebp
dec
ficomps
pop
jbe
mov
xchg
xchg
pop
dec
pusha
inc
fcompl
sbb
stc
arpl
mov
js
test
mov
cld
cmp
jns
movsl
sahf
pusha
mov
add
xchg
fldl
xchg
jmp
pop
sub
ds
sbbb
xlat
inc
jge
pop
cltd
clc
sub
sbb
roll
cmpl
stc
sbb
xor
rcrl
dec
inc
stc
mov
loopne
sarb
sbb
roll
adc
outsl
movsb
lcall
inc
and
notb
add
stc
sbb
fdivrs
test
push
fmull
stos
inc
fwait
pusha
cmp
dec
pop
dec
push
xlat
mov
jno
pusha
idivl
fadds
add
pop
mov
jl
ljmp
loopne
adc
cwtl
or
ja
adc
cwtl
fmul
pop
adc
add
nop
jmp
movsb
sarb
les
xchg
ds
add
push
jl
in
cld
add
rcr
sbb
cli
negl
mov
inc
sbb
sbbb
jae
inc
ds
and
xchg
cmp
loope
andb
cmp
mov
jmp
jl
xchg
int3
fstpt
out
frstor
pusha
add
pop
and
push
mov
js
adc
lcall
cmp
adc
mov
cld
mov
jns
roll
imul
ljmp
pop
idivl
mov
add
dec
pop
pop
mov
xor
mov
xor
pop
pop
and
sbb
sbb
add
jl
dec
popf
lock
in
cwtl
loope
fcomip
ljmp
xchg
xor
out
scas
mov
in
mov
data16
fidivrs
cmp
daa
cli
add
call
adc
fcomps
jp
dec
add
rcr
aad
hlt
inc
cwtl
sub
ss
mov
lcall
insb
imul
mov
sbb
dec
popf
fisubl
sub
or
pushl
fcmovnu
lcall
divl
jecxz
pop
jno
xchg
push
pop
ficoms
xchg
cmp
popf
jl
jns
sbb
repnz
push
sbb
fnstcw
push
fsubl
push
outsl
fcmovnb
xchg
inc
pop
repz
adc
or
negl
sbb
and
mov
sbb
sbb
mov
add
fdivrl
pushf
gs
jp
add
xchg
sbb
sbb
or
cld
scas
mov
adc
push
lea
test
cmp
xor
cmp
jae
popa
int
ficomps
inc
cmp
lds
sarb
or
call
xlat
pop
jns
jae
popa
sahf
bndldx
jl
fsubr
or
shlb
jae
sahf
jge
and
inc
xchg
sub
mov
leave
jnp
sahf
sbb
jns
je
aad
pusha
imul
call
loopne
aam
fwait
mov
inc
iret
sbb
adc
adc
cmp
imul
cmp
movsb
sbb
cltd
into
call
cs
out
jae
js
cmp
sub
cwtl
std
sbbb
xchg
fsubr
cmp
pop
jae
pop
cmp
mov
lds
sbb
xchg
fcmovnu
jne
ja
sbb
gs
sbb
pushf
xchg
nop
add
loopne
inc
sub
popf
lds
fdivrl
adc
lea
cld
testl
adc
pop
cmpsb
pushf
xlat
and
pop
mov
xorb
call
inc
out
mov
out
push
pusha
stc
shll
xchg
rclb
add
fistpl
fsubrs
pushf
mov
mov
mov
jp
sbb
cwtl
fadds
cmpsb
icebp
pop
ss
sbb
dec
adc
mov
and
in
push
add
add
jge
sbb
sbb
aam
add
xlat
pop
xchg
xor
add
xchg
fwait
push
andb
sbb
lods
cli
dec
add
add
fstpt
sbb
sbb
lret
mov
lcall
sbb
push
and
push
sti
call
dec
pop
fistpl
fcmovu
cwtl
fmull
push
stc
jp
sbb
cmp
lods
shlb
int3
adc
lcall
stos
adc
pop
cmp
sbb
sbb
push
push
pop
jp
pop
fisubs
mov
fiaddl
cli
sbb
movsb
fnstenv
add
push
mov
push
cmp
cltd
xchg
cmc
jle
test
clc
jge
pusha
push
jns
mov
mov
inc
mov
mov
idivl
pop
pop
adc
push
add
jl
fcomps
sub
jno
mov
and
aas
cltd
sbb
mov
cltd
jg
sbb
cli
fstp
ds
mov
mov
pop
inc
fidivrs
jge
shll
in
sbb
and
inc
jnp
jne
cmpsb
xchg
int3
jg
or
js
cmpsb
pushf
sahf
xlat
pop
inc
xchg
nop
ss
xchg
inc
shr
fcmovu
push
jle
pop
adc
call
mov
push
and
outsl
mov
push
cwtl
pop
test
fdivrs
ds
shl
xchg
cmp
xlat
mov
jl
adc
adc
clc
adc
ret
mov
mov
mov
mov
int3
stc
jle
and
lret
xchg
fstpl
push
sub
sbb
mov
sbb
pop
js
sbb
fdivr
lods
fdivr
xchg
clc
out
roll
into
mov
loop
dec
push
cwtl
adc
sbb
pop
incb
cmp
add
jbe
std
pop
sbb
and
lcall
fwait
mov
adc
fsubs
lret
cmp
add
mov
icebp
fcomip
popf
push
bound
xchg
inc
mov
and
add
or
negl
mov
cmovb
dec
pusha
xchg
xchg
idivb
cmp
xor
mov
movsb
jp
push
in
cld
fisubs
jmp
sbb
sti
scas
pop
lahf
fnstenv
sbb
push
mov
or
leave
movsl
sbb
loopne
push
add
xchg
mov
testb
fldt
cmp
cli
shlb
pusha
sbb
fidivl
jp
rolb
mov
sti
mov
sub
daa
jo
mov
std
pushl
fwait
sahf
mov
adc
xchg
sbb
loopne
sti
or
adc
xor
sbb
js
loopne
jns
loop
push
fdivs
cli
test
mov
mov
vpmovmskb
shr
cmpsb
jle
xchg
mov
popf
incl
fs
or
sbb
pop
xchg
cmp
push
cwtl
mov
adc
mov
xlat
sahf
sti
add
sub
loop
insb
xchg
lret
pop
testl
mov
jecxz
adc
rcll
xchg
and
jp
jl
loope
sbb
popf
je
loopne
lahf
adc
xlat
lcall
jl
popf
sbb
xchg
pop
shlb
mov
adcb
xlat
inc
fwait
sti
cmc
xor
fdivrl
mov
mov
mov
sarb
xor
cli
pushf
js
push
pop
ss
mov
movsl
push
mov
scas
loopne
fidivrl
jmp
nop
lret
pusha
or
js
inc
fdivr
pop
mov
cmp
jle
xchg
cmpsl
out
cld
ds
fnstsw
std
mov
insb
sbb
insb
shlb
enter
cmp
std
push
dec
push
andb
stos
jbe
xlat
push
mov
mov
adc
out
ds
sbb
scas
js
out
and
popf
pop
outsb
add
aam
addr16
dec
mov
and
xlat
pop
cmp
pop
loopne
jg
pushf
inc
das
faddl
sbbb
ror
pop
pop
popf
or
mov
mov
mov
fcom
fincstp
push
fsubrp
shrl
cmp
dec
pop
das
data16
pop
movsb
xor
push
orb
popf
leave
inc
cmpsl
lret
cmp
dec
in
les
mov
cmp
popf
ss
fimuls
cmp
mov
inc
clc
inc
add
lret
adc
popf
cmp
pushf
aas
inc
js
and
jle
xlat
fidivrs
cmp
sbb
sbb
cmpl
sbb
or
ficompl
inc
pop
cmp
stc
sbb
mov
sbbb
mov
xor
fwait
imul
fnstcw
sub
and
inc
fcmovb
cltd
sbb
cmp
out
or
imul
fcompl
das
decl
and
sbb
jns
xchg
and
jno
fs
lds
imul
jns
pop
insl
frstor
adc
ficomps
xchg
cmp
pop
mov
mov
aad
int3
mov
mov
pop
data16
push
sub
xor
call
push
pushf
cmpb
dec
movb
mov
push
adc
js
dec
out
stos
adc
pop
jae
sarb
pop
fcmovnu
lcall
in
fstps
xchg
popf
fcmovnbe
or
mov
popf
and
cltd
jmp
sub
ljmp
aas
inc
pop
mov
push
jbe
pop
mov
mov
js
or
dec
xchg
mov
repnz
rcrb
cmp
shll
jle
dec
push
mov
outsb
out
xlat
rorl
cli
negl
out
jp
pop
add
cmc
fildl
cmc
pop
gs
mov
jns
mov
add
push
rolb
std
fiadds
jp
and
rol
pop
cwtl
and
fcompl
fcmovb
jl
cmc
ss
pop
mov
add
inc
mov
mov
adc
jns
loope
xchg
das
mov
jl
sbb
xchg
insb
in
jo
shlb
sti
pop
jae
rcrb
pop
paddsb
sbb
cwtl
add
xchg
mov
cli
fldt
clc
pop
cltd
fidivrl
xchg
jle
pop
pop
pop
cmp
sti
aas
mov
mov
frstor
pop
std
mov
fnstsw
dec
jmp
add
popa
jp
adc
ljmp
xchg
and
mov
js
xchg
sub
pop
mov
add
lcall
inc
pop
or
ds
push
int3
in
sbb
xchg
xchg
clc
cltd
inc
ss
fcoms
fcompl
xlat
pop
cmp
jl
inc
pop
pushf
sub
push
addb
and
mov
mov
shll
inc
loopne
jge
arpl
mov
mov
mov
mov
pop
sbb
push
cltd
lret
stos
negl
jmp
push
cmp
es
fdivrl
pop
inc
popf
fcoms
sarb
mov
sub
pop
mov
xlat
lcall
inc
mov
mov
insl
jbe
and
or
mov
jp
adcb
pop
mov
fmuls
js
mov
xor
sbb
inc
jge
inc
xor
or
sarb
cmp
pop
mov
fisubl
pop
inc
outsl
adc
jbe
fdivrs
pop
popf
mov
inc
xchg
inc
push
pop
add
jae
fidivs
dec
cltd
mov
cmp
push
rcr
jp
xlat
pop
or
xlat
dec
xchg
ss
fdivrs
xlat
mov
mov
stos
lods
movsb
out
sbb
icebp
inc
scas
or
shlb
popf
mov
pushl
out
cltd
fildl
cmp
fdivrs
jp
lea
jle
or
fisubrs
mov
popf
call
aas
inc
outsl
js
mov
jge,pt
addr16
sbb
inc
pop
cmp
sbb
fs
adcl
fdiv
inc
clc
mov
arpl
or
jg
inc
cld
pop
push
fbld
js
pushf
cmp
stc
popf
call
dec
shlb
inc
xchg
xchg
cmp
test
lock
or
jns
xlat
inc
mov
dec
mov
je
jg
fdivs
adc
add
rcrb
and
mov
jo
lahf
cmp
mov
cmpb
test
mov
inc
pop
mov
pusha
sbb
imul
fmull
add
cmpl
clc
mov
cmc
lock
sbb
fidivl
jl
into
ret
mov
clc
mov
sbb
fnstsw
sti
sbb
xor
fcmovnbe
mov
inc
mov
cld
jns
mov
out
ficompl
in
test
sbb
loope
xchg
mov
pop
test
inc
pop
sbb
mov
imul
lea
mov
push
imul
cmp
mov
repz
cmc
mov
sbb
pop
sub
int3
mov
and
popf
push
inc
fistpll
add
js
cmp
pop
mov
flds
pop
mov
sub
jnp
mov
fcomi
das
sbb
andb
xor
jle
pop
fstpl
vphaddudq
push
jns
fistpll
jp
ds
roll
fdivr
cli
cltd
cmp
sbb
ficomps
ja
mov
push
mov
fistpl
sub
fadds
mov
add
les
inc
xchg
mov
cmp
and
jl
loop
push
js
imul
add
es
push
sbb
sbb
xor
and
inc
sbb
cli
add
lods
sbb
cmpsb
cmp
dec
pop
ficompl
incl
fstpl
cmp
mov
loopne
adc
loopne
out
mov
into
pushf
push
lcall
dec
mov
mov
push
mov
cli
add
jecxz
mov
inc
xlat
sbb
mov
mov
xor
mov
loop
sbb
addr16
or
cmp
cmp
sbb
sbb
sbb
pop
inc
mov
stos
mov
cmp
add
pop
and
pop
sbb
jle
pop
fidivrl
or
ljmp
or
pushf
lahf
cli
mov
add
fidivrl
jae
jp
inc
mov
stc
sbb
cmp
jns
xchg
popf
push
mov
and
call
loopne
mov
jecxz
clc
out
mov
add
sbb
sbb
pop
sbbb
inc
cld
cwtl
fdivp
sahf
popf
sbb
xchg
mov
std
imul
mov
je
pop
cwtl
pop
jle
mov
inc
rorb
inc
mov
hlt
sti
add
cmp
std
adc
cmp
mov
decl
js
rcrb
mov
stc
pusha
jae
or
dec
js
fwait
xchg
xor
ja
repnz
push
pop
mov
rolb
popf
fwait
lcall
pop
sub
cli
jge
push
pop
pop
cld
fdivr
mov
cmc
adc
fstps
into
sub
mov
dec
pop
lock
sub
pop
fidivrl
fdivr
into
in
inc
into
xlat
jbe
jno
cmp
mov
in
inc
fiaddl
cmp
xchg
fcomps
mov
jmp
popf
cmp
and
xchg
fdiv
adc
test
sbb
cmp
fdivrl
stc
dec
add
xchg
dec
pop
imul
clc
cmp
and
mov
fs
and
inc
mov
cmp
sbb
cmp
or
xchg
clc
inc
fstps
not
mov
sahf
inc
into
push
fstl
push
inc
loopne
fisttpl
out
js
cmp
mov
fdiv
incb
or
psubq
pop
xchg
jl
cltd
cmpsl
ret
mov
xlat
adc
inc
pusha
pushf
sbb
sbb
cmpsl
sbb
sbb
add
or
movsl
shll
sti
and
clc
and
mov
rolb
sbb
test
pop
mov
adc
ficomps
sub
xor
mov
pop
loopne
jle
inc
mov
sarb
sarl
jne
sbb
hlt
shlb
mov
mov
pop
jae
xor
outsb
or
imul
xchg
fldl
add
int
xlat
adc
cli
fmul
pop
sarl
fs
and
movsl
cmp
inc
jle
xchg
sbb
cli
xchg
push
mov
inc
sbb
clc
cmp
sbb
shrb
aaa
or
cmp
rcl
sbb
in
sti
movsl
rolb
fisubs
pop
repnz
and
adc
pushf
cmp
sub
pop
xchg
sbb
fstpl
dec
ds
das
sbb
loopne
fsub
in
fstl
fistps
mov
fidivrs
fstpl
mov
adc
out
adc
sub
jle
inc
push
adc
sbb
pusha
int3
jge
sbb
sar
inc
pushf
pop
inc
sub
repnz
test
pop
lea
push
cmpb
pop
ds
cmp
xchg
jns
fnstcw
sbb
cltd
sbb
xor
jge
pop
ljmp
notl
inc
jle
xchg
fsubl
push
xchg
loope
push
push
lcall
int
in
pop
jb
jns
mov
mov
sbb
inc
sarl
fsubr
aam
mov
sbb
out
sub
sbb
iret
push
aaa
loopne
sbb
sbb
pop
arpl
fdivr
fs
add
cmpsb
mov
ss
sti
cltd
in
jne
orb
inc
sbb
loop
popf
xchg
and
outsb
repz
adc
pop
idivb
sub
mov
pop
cmp
push
cmp
sbb
lcall
inc
fs
cmpsb
insl
cmp
mov
fldcw
mov
dec
mov
sahf
or
mov
cmp
mov
roll
fistps
adc
cwtl
mov
mov
lods
mov
out
cmp
out
xchg
stos
movsb
mov
les
sahf
cmc
xchg
pushf
pop
cmp
ds
int3
lds
cld
pop
xchg
fcmovnb
cmpb
adc
cmp
pop
pop
fists
pop
pushf
popa
ds
fmull
jmp
mov
mov
shlb
lret
fs
xchg
pop
sbb
adc
or
testl
lahf
sbb
loopne
push
daa
sbb
inc
fstps
leave
pop
int3
mov
dec
leave
add
and
xor
mov
mov
pushf
fwait
popf
mov
inc
pop
cmp
test
or
lcall
jl
cmp
sbb
jg
mov
pusha
mov
dec
or
push
fcoml
fldl
out
int3
adc
mov
imul
cmpsl
imul
enter
lret
push
cmp
fmuls
fldt
xlat
ja
mov
inc
mov
sbb
cwtl
inc
jle
out
lcall
daa
fistpl
sahf
pop
popf
scas
shr
sti
fidivs
cld
outsb
cld
clc
mov
cltd
lea
sub
sbb
sahf
pop
imulb
mov
pop
add
mov
sbb
sub
mov
inc
fadds
dec
sahf
sti
mov
sbb
in
shrb
xor
lret
inc
cmp
in
movsb
loopne
arpl
sbb
cwtl
pop
lcall
inc
pushf
std
or
call
adc
or
and
ljmp
pop
sti
mov
xor
and
fisubl
rcrb
sbb
jns
cmp
loopne
xor
sahf
sti
outsb
test
xchg
lcall
sbb
jnp
pop
pop
or
js
call
xchg
or
xchg
and
loope
jle
stc
bound
sti
inc
inc
sbb
shl
mov
popf
in
lds
fmull
mov
js
fstpt
add
push
popf
jle
mov
addb
es
and
add
xchg
push
adc
cmc
inc
mov
cld
popf
xchg
pop
jg
lcall
inc
in
inc
pop
fimuls
jecxz
cltd
pop
clc
jle
pusha
add
sbb
pop
cli
pushf
sbb
sbb
clc
jo
mov
pop
aaa
mov
mov
xchg
lcall
ficomps
xor
mov
pop
adc
js
sub
sbbl
fistpl
xchg
das
scas
stos
pusha
mov
sbb
cltd
fsub
cwtl
js
jno
xlat
cmp
sbb
popf
sbb
push
lret
sbb
inc
adc
mov
repnz
int3
stc
inc
js
sbb
std
popf
idivb
mov
sahf
mov
dec
fwait
mov
add
cwtl
pop
lret
call
in
in
jle
idiv
sub
rclb
call
ficompl
adc
jno
inc
outsl
and
inc
sbb
adc
jl
std
lods
or
mov
mov
jmp
mov
pop
test
stc
in
mov
std
cli
fidivrl
cwtl
fists
cmpsl
push
inc
sbb
loopne
lods
xor
pop
pop
cld
cltd
mov
ja
popf
add
test
mov
ds
loopne
pop
js
mov
mov
push
xlat
cmp
pusha
in
fs
std
stc
mov
shrb
mov
xor
add
call
cmp
mov
mov
loop
pop
sbbb
mov
sub
arpl
lcall
fsubl
mov
repz
test
xchg
add
into
jl
insb
fxch
daa
ficoml
pop
fnsetpm(287
and
add
in
sbb
cmp
sub
inc
loopne
inc
mov
cli
add
and
fwait
popf
xchg
fcoms
arpl
out
lds
stc
movsl
lock
loopne
xchg
dec
lds
gs
fstpl
cmp
gs
rcrb
mov
lahf
sbb
loopne
pop
fisttps
sub
or
sbb
cmpsb
std
jge
cli
into
adc
push
xchg
xchg
sbb
push
xchg
pop
scas
jbe
ss
pop
sbb
outsb
xchg
pop
inc
mov
popf
cltd
sbb
push
adc
mov
dec
dec
popa
mov
sti
inc
cmp
scas
inc
sbb
bound
cld
push
pushf
cltd
pop
inc
fcompl
stos
popf
stc
xchg
and
jle
into
adc
daa
std
fldenv
cmp
lds
jbe
sbb
cs
ficomps
and
jmp
push
insb
cmp
inc
push
jge
and
cmp
lret
clc
sar
fidivs
cmc
sti
mov
jp
sbb
add
dec
ret
fsubp
mov
repz
popa
test
imul
ss
pushl
and
pop
mov
mov
pop
pop
push
std
sbb
repnz
inc
test
ficoms
mov
push
mov
cwtl
testl
xor
lods
inc
inc
loopne
xchg
xlat
pop
mov
fadds
neg
adc
sbbl
sub
mov
mov
aas
adc
std
sbb
js
pop
popf
popa
cmpb
fs
push
jp
sahf
pop
cs
pop
fdivrl
xor
jg
fdivrl
mov
and
mov
xchg
adc
and
pop
mov
mov
sbb
lcall
jnp
sbb
cmp
xchg
mov
sbb
sbb
sbb
cli
mov
out
fistpl
push
mov
lcall
scas
sbb
ficompl
pop
cmp
dec
pop
xor
cmp
or
xlat
jns
sbb
pop
pop
push
fisttpl
adc
jl
sbb
rcrl
inc
cmp
mov
lahf
sahf
xchg
js
gs
faddl
pop
cwtl
popf
jp
xlat
adc
pop
sbb
popa
stc
cmpb
and
popf
cmpsl
push
cld
jge
sarl
jb
add
cvtpi2ps
mov
fs
pop
and
mov
jno
stos
sarb
scas
das
sahf
sti
push
pop
scas
mov
loopne
sbb
lock
sbb
cmpsl
fs
inc
sarb
outsb
pushf
unpcklps
pop
popf
setns
pop
cltd
mov
mov
cmp
cmp
cli
xlat
ss
xchg
bound
data16
jle
std
add
sbb
decl
inc
sbb
or
push
sbb
push
stc
adc
fimull
sub
clc
inc
popf
cld
dec
push
mov
sarl
cmp
jp
jge
mov
cwtl
lcall
xchg
repnz
push
sbb
fcomps
mov
sbb
adc
pop
mov
push
jle
inc
cmp
ss
xchg
xor
daa
bswap
cli
mov
stc
popf
inc
enter
mov
jl
fwait
mov
cmp
enter
aam
aaa
sbb
in
mov
js
jp,pt
xchg
dec
stos
cmpsb
xor
mov
into
add
fiadds
mov
sahf
fsubp
cli
push
xlat
sbb
pop
pop
pop
mov
pushf
mov
fs
idivb
inc
mull
jg
std
or
popf
test
fadds
mov
fnstsw
das
std
lods
flds
scas
jle
xchg
cwtl
pushf
mov
shll
mov
cltd
js
sbb
fistpl
inc
pop
inc
divl
sbb
pusha
sbb
add
fs
cmp
mov
add
xor
jle
and
fstpl
jle
xor
cmpsb
sahf
cltd
sbb
mov
les
or
cmp
sbb
jg
sbb
inc
push
sbb
and
dec
std
sahf
lds
in
roll
ljmp
push
xchg
pop
sbb
dec
clc
ja,pt
sbb
and
sbb
or
clc
popf
push
cmp
loopne
sbb
cmp
jg
clc
add
cli
fmull
in
cmp
stc
dec
loope
jno
mov
clc
pop
cmp
jecxz,pn
xchg
or
into
pushf
cs
mov
cmp
jp
mov
sbb
jae
faddl
fldcw
divl
adc
js
xchg
sbb
pop
cmp
sti
mov
pop
fwait
cmp
mov
pop
adc
fisttpll
push
pop
cld
js
mov
je
jp
out
sbb
data16
cld
and
fstps
ss
js
jp,pt
or
fsubrs
and
xchg
cmp
jge
mov
stc
cmp
add
add
xchg
mov
pushf
ret
jns
or
movb
cwtl
pop
cld
xchg
inc
add
mov
sti
stc
rcrb
pushf
int
xchg
xchg
jle
cmp
push
sahf
cmp
cmp
pushf
gs
fidivrs
cltd
sbb
ds
adc
lahf
neg
out
sbb
pusha
fcmovbe
dec
dec
lds
movsl
mov
xchg
mov
popf
cli
add
mov
enter
jnp
gs
xlat
ds
xorb
fsubl
outsb
cmpsl
xchg
mov
mov
loopne
cs
pusha
lcall
cmp
pusha
in
das
pop
lahf
fcomps
dec
maskmovq
idivl
adc
adc
dec
pop
xor
jmp
das
xchg
inc
ficomps
add
mov
outsb
jbe
scas
xchg
mov
fistpl
adc
std
ret
cmp
mov
fsubrp
xor
jb
mov
outsl
mov
mov
fs
popf
add
into
mov
cltd
and
pop
fwait
add
inc
cld
pop
js
leave
scas
leave
adc
cmp
sbb
mov
in
ds
add
fists
adc
adc
adc
jge
les
mov
pop
pushf
cwtl
adc
pop
or
lea
jp
sbb
cli
rclb
push
adc
loopne
fistl
pushf
cs
jp
daa
inc
push
rcrb
daa
jb
insl
imul
fldcw
jecxz
xchg
cld
xlat
push
add
cs
fcmovnb
sub
jl
loop
jecxz
mov
mull
sbb
js
filds
ss
ja
jle
xor
jbe
sbb
or
pop
shlb
fists
lds
into
xchg
inc
mov
jns
sahf
sbb
mov
mov
aas
push
inc
jge
rolb
xor
in
jp
sti
outsl
or
fstpl
xchg
inc
mov
pop
cwtl
shll
pop
xlat
fistps
decl
push
sbb
sbb
notl
pop
cmp
rclb
mov
mov
fisubs
outsb
stos
inc
xchg
push
clc
lcall
jns
and
js
mov
adc
notl
mov
lahf
mov
ficompl
xlat
jl
pop
pop
ficomps
cmp
lcall
cmp
inc
add
adc
jmp
lcall
in
and
jle
out
mov
das
lret
cmp
xor
pushf
push
xor
add
mov
pop
and
pop
fnstcw
js
pusha
fildl
xlat
fisubrl
jae
sbb
push
std
xor
loopne
fldcw
add
sbb
push
hlt
pusha
cwtl
leave
xchg
dec
fmul
add
cli
inc
jno
lds
je
dec
jo
add
mov
add
int3
cmp
xor
pop
lcall
int
out
adc
adc
in
mov
inc
xor
movl
out
inc
xchg
mov
fsub
sarl
shr
pusha
sbb
sbb
stc
lea
sbb
cmc
adc
js
data16
sahf
sbb
mov
mov
mov
pushf
push
ss
mov
adc
or
cmpsl
mov
pop
lods
fstpt
pusha
pop
adc
pop
fnstsw
adc
fsts
add
mov
mov
fsts
or
sbb
and
mov
shl
push
popf
inc
pop
int
cmp
lret
push
pusha
sbb
pop
pop
adc
out
enter
xchg
push
fmull
cwtl
jns
cmp
lds
sahf
js
xchg
mov
jp
into
mov
adc
imul
lea
enter
in
jo
fsubrl
add
cli
fmull
adc
sbb
cmp
jp
sub
xlat
mov
xor
xchg
inc
sti
into
or
mov
adc
pop
inc
cltd
pop
rolb
movsl
and
data16
xchg
push
inc
pop
or
adc
lcall
cld
dec
cmp
and
cli
sub
mov
cmc
sbb
dec
cmp
fisttpll
js
jp
xlat
mov
xlat
add
lds
xchg
xlat
inc
jge,pn
call
les
pushf
movsl
adc
dec
pop
data16
fsqrt
loopne
je
mov
add
mov
gs
insb
stos
push
sub
adc
sbb
xchg
cmp
sahf
xchg
lds
pop
jmp
stos
std
or
and
mov
xlat
mov
adc
sbb
mov
stos
lahf
das
push
pop
les
add
lret
sti
adcb
int
jge
loopne
popf
stos
mov
jno
imul
adc
adc
cmp
xchg
sub
fcomp
daa
sub
sbb
call
fldt
mov
rcll
cmp
adc
sbb
dec
jle
or
cmpsb
jns
cmp
out
sub
popa
adc
sahf
sarl
mov
mov
imul
stos
pop
pop
les
fcoms
bound
neg
rcrl
flds
sbb
jge
mov
jl
lcall
add
mov
lret
cwtl
sbb
xchg
adc
adc
call
mov
sub
adc
mov
inc
jno
icebp
push
das
rolb
and
and
dec
lcall
pop
ljmp
pusha
aam
mov
cltd
pop
pop
adc
cmp
lcall
in
sbb
cwtl
pop
sbb
sbbb
jl
idivb
mov
dec
pop
jp
and
fwait
sbb
dec
stc
cmp
imul
push
pusha
pop
cli
jmp
add
push
sbb
cmp
xchg
mov
mov
mov
lds
std
lds
jl
sti
cmp
out
scas
sbb
push
mov
loopne
mov
cmp
cmp
jbe
xchg
pop
ja
mov
loope
fwait
inc
cmp
sti
mov
push
mov
lods
adc
fwait
jg
pop
pop
adcb
xchg
jno
out
xchg
jp
cwtl
push
and
out
ffree
sbb
mov
rolb
xlat
aad
daa
mov
mov
cld
jmp
daa
sbb
pop
js
pop
sbb
fbstp
fadd
lret
dec
lahf
sbbl
mov
dec
jb
pop
sbb
pop
lods
sbb
push
xchg
aam
daa
sub
or
sbb
or
xchg
ror
mov
cmp
pop
jae
ja
mov
repnz
fstpl
pop
pusha
cli
popf
sbb
cmp
lods
pusha
ds
xor
inc
inc
cwtl
cmp
cltd
mov
lcall
les
pop
out
cmp
lret
and
mov
sets
fstp
pop
mov
lods
or
std
inc
and
mov
or
xlat
fwait
pop
jle
popa
loopne
xchg
mov
push
js
mov
jg
cmp
sbb
scas
lds
and
notl
cmp
sub
xor
add
std
sbb
cwtl
inc
mov
mov
clc
jo
or
push
xchg
fisttpl
out
mov
das
jo
pop
cmp
fsubr
fcomps
mov
mov
rcl
insb
mov
mov
xor
das
inc
scas
sub
xor
jae
ret
outsl
cmp
mov
mov
sub
sbb
mov
cwtl
mov
xlat
xlat
push
cltd
mov
addb
jbe
fdivl
pop
test
mov
sub
push
xor
clc
push
mov
adc
or
data16
fiadds
in
mov
cwtl
or
jp
sbb
cmp
and
mov
pusha
inc
pop
add
out
mov
and
mov
pusha
mov
rcrb
inc
xchg
jnp
lcall
jp
js
notb
xchg
and
fsubrl
or
and
inc
fistpl
cmp
fistps
inc
lret
leave
pop
pushf
jne
std
popf
cmp
lret
cmp
pop
les
mov
ja
inc
lret
fcmovnbe
iret
jae
and
adc
inc
and
adc
leave
dec
mov
sar
cld
sbb
push
sarb
sbb
pushf
test
xor
and
cwtl
call
mov
stc
mov
adc
inc
xchg
push
cs
jne
dec
lods
fcoms
and
sbb
cmp
mov
sbb
mov
adc
sbb
cmp
and
and
jge
mov
inc
mov
xchg
pop
inc
out
and
mov
inc
jns
jg
andb
loopne
push
imul
incl
sbb
sbb
jge
cmp
push
mov
lret
mov
dec
pop
pop
ds
pop
and
cs
pop
jp
sub
or
mov
jp
fistl
pop
ficoml
pushf
rcrb
push
xor
adc
mov
mov
pop
sarb
cltd
fstps
mov
and
mov
sbb
mov
push
push
jl
lcall
pusha
fdivrs
sbb
frstor
rcrb
cmp
js
mov
sbb
decb
pusha
push
fistpl
sti
cmp
ds
sbb
ds
jae
sub
cmp
and
mov
mov
sbb
jmp
sub
sub
leave
int
dec
adc
lret
ljmp
push
cmp
aas
fistpl
pop
fstp
outsl
and
push
mull
cmp
gs
inc
pop
pop
sahf
mov
pop
cltd
popf
pop
mov
or
adc
sbb
cltd
and
andb
bound
inc
stos
xor
in
ds
jp
sti
in
push
rcrl
jnp
and
inc
push
cmp
imul
stc
cmp
adc
out
and
loopne
jle
xchg
pop
pop
xlat
ficoms
fdivs
iret
mov
add
xor
inc
cmpsl
sbb
and
adc
fnstsw
sbb
or
mov
icebp
jp
cli
mov
fcomps
sbb
push
in
cld
cmp
inc
xchg
daa
insb
jb
into
fcmovu
pop
lock
sarb
rcll
cmp
xlat
and
sti
cltd
xor
add
mov
lds
addr16
scas
push
icebp
xchg
sub
mov
pop
mov
test
mov
pop
iret
mov
cmp
add
inc
sub
jmp
and
imul
mov
dec
push
lods
loopne
loope
jl
cltd
pushf
sbb
rcrb
push
mov
jns
sub
int3
addr16
shr
adc
xchg
mov
mov
jno
iret
jno
pop
insl
xchg
sbb
pop
test
pop
mov
andb
arpl
test
xlat
cld
loopne
mov
dec
push
jge
fnstenv
or
outsl
fsts
inc
cmp
dec
jp
pop
rorb
cmp
cmp
gs
pop
insl
divl
mov
dec
sub
mov
or
and
dec
pop
jbe
mov
aad
divb
inc
shll
lret
and
xchg
subps
hlt
mov
inc
and
notb
xlat
jae
test
pop
pop
dec
fidivs
cmp
xchg
add
mov
sti
insb
inc
xor
pop
out
pusha
adc
pop
repz
mov
mov
insl
xchg
add
mov
pop
cld
hlt
out
mov
and
jb
xor
xchg
adc
mov
jle
inc
popf
xchg
inc
movsb
jge
pop
add
punpckhdq
popa
cmp
sbb
sbb
fstp
mov
mov
sysenter
mov
fwait
lret
xchg
xchg
pop
or
jnp
lcall
loope
das
mov
pushl
jb
out
bound
cmp
xor
movsb
leave
outsl
outsl
ret
in
cmp
arpl
sarb
std
add
and
sahf
movsb
mov
and
shll
add
dec
and
lods
pop
adc
xchg
movsb
or
xchg
lahf
pusha
xchg
xor
or
sbbb
sbbb
out
cld
imul
xchg
or
outsl
mov
scas
mov
sahf
push
xchg
pop
cli
mov
xorl
sbb
and
hlt
dec
dec
xchg
push
or
loopne
addr16
or
xchg
vpunpcklwd
cmc
lcall
aam
ss
xor
rorb
rcrb
and
xor
fstps
xor
pop
xor
push
xchg
lret
pop
push
adc
mov
mov
aas
dec
mov
add
or
pop
and
adc
jne
mov
mov
mov
and
cmp
cmp
or
cmp
int
fcoml
mov
jns
add
inc
dec
je
sub
jge
xchg
xlat
outsl
popf
xchg
lods
popa
pop
fwait
add
and
bound
stc
cmp
dec
inc
sub
stc
pushl
inc
mov
lret
dec
push
rcll
aam
jb
nop
xchg
pusha
je
xor
pop
fstpl
pop
int3
xchg
xor
stc
scas
jb
aas
dec
test
push
pop
aas
fsubrs
pop
sbb
popf
pushf
cwtl
inc
enter
pop
pusha
stc
mov
pop
fistpl
fdivrs
pusha
jp
inc
dec
pop
leave
add
les
pop
mov
mov
xor
movsl
fst
pop
or
movsl
js,pn
xor
mov
or
sub
imul
pop
adc
hlt
xchg
stc
sahf
iret
add
xchg
dec
cmpsl
cmp
dec
les
jmp
mov
cmp
jle
mov
cltd
dec
mov
xchg
push
fsubs
pushf
mov
aad
fiadds
cwtl
push
orb
pop
cmpsl
inc
lret
ds
xor
test
mov
pop
mov
andb
add
out
cmpsl
sub
mov
and
pop
pop
sbb
fdivr
or
push
pop
negb
cltd
fadd
mov
add
stc
cli
inc
out
rcll
cmp
sbb
sbb
cmp
inc
pop
lret
mov
mov
leave
xor
aas
jns
mov
loop
lcall
rorl
xor
fidivrl
jg
or
cmp
loopne
std
mov
sbb
mov
sar
or
loopne
xor
dec
jp
cmp
cmp
idivb
mov
or
adc
inc
pop
call
inc
inc
fnstcw
sub
push
mov
mov
fdivrs
adc
sbb
mov
fcompl
movsb
rol
push
test
mov
cmp
or
test
mov
pop
xor
fdivrs
jl
pop
cmp
es
cli
mov
and
sbbb
cmp
cmp
xchg
fdivrs
pop
fisubrs
mov
xchg
xchg
cmpl
loop
sti
xchg
mov
rorl
jg
cld
jg
aam
cwtl
fwait
cwtl
xor
adc
mov
popf
cmp
cmpsb
ds
add
xor
mov
sbb
sbb
sbb
pushf
xchg
stc
ds
sbb
nop
mov
std
inc
and
inc
in
sbb
cltd
test
pop
xchg
or
aaa
jle
mov
js
sub
test
and
inc
mov
decl
sub
mov
fmuls
popf
mov
mov
mov
dec
pop
je
or
sub
push
sahf
and
or
ficomps
inc
cmpsb
mov
or
and
sub
jecxz
fnstsw
xchg
pop
in
sbb
lcall
vcvtdq2pd
pop
fiadds
pop
pushf
and
pop
xor
popf
jle
ss
cmp
jbe
xchg
pop
pop
fidivrl
cmp
mov
sbbb
sbb
sub
fsub
sti
clc
cmp
lcall
arpl
pop
arpl
or
pusha
sub
dec
pop
mov
out
mov
ficompl
sti
mov
push
aas
pop
cli
cmp
not
pop
shlb
pop
out
inc
cmp
sbb
push
es
inc
and
lods
xor
sub
dec
lcall
fnstcw
add
sub
sbb
and
mov
jl
fimuls
inc
or
lcall
out
inc
fimuls
mov
push
imul
ficompl
sub
jp
mov
mov
fcmovnb
ds
sbb
sbb
mov
jl
fcmovne
add
mov
pusha
scas
sub
cmp
push
push
push
sub
push
dec
fidivrs
pop
inc
stc
jnp
pushf
pusha
mov
inc
sbb
mov
cli
add
fstp
lds
and
push
sbb
lcall
and
cs
mov
sbb
popf
push
cmp
in
pop
jnp
or
mov
mov
inc
sbb
mov
ss
sub
icebp
adc
in
int3
push
movsb
incb
sar
xorl
or
in
ds
testl
cwtl
cmp
cmpsb
jnp
cld
lods
cmp
adc
adc
lds
pop
xchg
gs
sbb
sti
sbb
int3
add
ds
fbld
mov
dec
mov
pusha
and
jge
lahf
mov
clc
lcall
push
dec
les
mov
mov
lods
fcmovbe
add
cmpsb
enter
arpl
add
lret
ja
test
fstpt
sbb
lcall
add
pop
pop
sbb
push
rcrb
mov
inc
and
xlat
out
dec
frstor
jp
divl
lcall
into
add
ja
jle
push
cmp
rclb
fstpt
cmp
pop
add
pop
mov
fst
js
leave
cmp
test
rol
fistpl
push
pop
mov
cmp
pop
js
stos
or
sahf
push
sahf
fsubl
ds
cmp
negl
scas
mov
cmp
mov
frstor
ret
negl
xor
pop
loopne
dec
les
clc
lds
sahf
mov
inc
mov
shlw
pop
fimuls
das
mov
jle
jl
sbb
incl
sbb
pop
inc
sar
cmp
or
arpl
add
sbb
mov
mov
sbb
and
daa
mov
cmp
inc
mov
fmull
out
jecxz
and
inc
inc
pop
cmp
movsb
cmp
push
or
fstps
popf
fisubs
mov
inc
pop
fidivl
mov
lcall
cwtl
ds
movsb
arpl
jl
gs
ljmp
push
shlb
cmpsb
fsubl
push
xchg
push
in
mov
mov
daa
inc
scas
fcomps
xlat
lds
jns
cmc
mov
movsb
sbb
xchg
lods
ljmp
add
push
cld
sahf
adc
mov
fstp
mov
testl
push
sbb
sub
leave
cli
pop
mov
pushf
lcall
sar
sbb
pusha
clc
inc
fwait
andb
jns
pop
pop
jns
pop
sbb
popf
sbb
pop
fstps
fistpl
or
pushf
lods
dec
pushf
sbb
aas
jl
fnstcw
inc
fcomip
lcall
adc
pop
cmp
into
out
out
mov
mov
sub
cmove
fistpl
fsubs
adc
popa
idivl
loopne
lcall
cmp
pop
cltd
adc
clc
mov
inc
test
stc
pushf
out
scas
cld
popf
xchg
aaa
ffreep
and
popa
inc
sbb
sub
xor
pop
cwtl
inc
pop
lret
ret
mov
imul
mov
jns
shlb
pop
mov
inc
fnstcw
jge
iret
scas
inc
cmp
sti
mov
pop
loopne
rcrl
arpl
mov
fnsave
shr
sub
sarl
cli
lods
lcall
adc
fcomps
dec
pop
mov
and
cmp
inc
cltd
inc
jl
imul
mov
inc
popf
decb
sbb
xchg
in
sbb
adc
adc
jle
pop
call
mov
pop
sahf
cmpsb
fnstsw
mov
lret
sbb
mov
jmp
mov
cwtl
sub
cmp
clc
gs
cld
push
cmp
push
daa
cwtl
adc
jge
imul
stc
xor
gs
jns
mov
pop
faddp
dec
add
fcompl
jmp
sbb
mov
adc
fcoms
xchg
adc
pop
pop
popf
subb
cli
icebp
mov
fmuls
ret
mov
cmp
in
loopne
sbb
mov
je
fstpl
pop
fistpll
and
scas
push
jbe
jbe
push
pusha
jp
xor
cli
cli
add
mov
jl
push
sbb
jmp
cwtl
xor
fdivrp
ljmp
mov
xchg
sbb
enter
add
sbb
jge
cld
xor
pop
ds
xlat
mov
clc
mov
fdivr
cmc
imul
mov
cmp
sbb
cmpb
pop
movsl
loopne
pop
rcrl
cmpsb
sti
sahf
rcrb
idiv
rcrl
mov
xchg
sbb
je
xchg
aad
fdivrp
pop
scas
out
fcomp
out
arpl
sbb
dec
inc
cmp
cli
mov
cmp
scas
aam
cmp
push
fcmovnu
std
pop
dec
stos
or
sub
jno
setbe
cwtl
push
cmp
pop
mov
mov
jne
ret
add
fwait
pop
adc
push
idivl
xchg
aam
fs
sar
lret
cmpsl
pop
mov
lret
bound
js
fcompl
add
in
notl
adc
inc
cmp
fistpll
mov
push
adc
xor
divb
jg
ret
mov
adc
fsts
das
loopne
sbbb
fidivrl
cmp
fisubrl
adc
mov
mov
pop
lcall
loopne
jge
cmp
pop
clc
pop
add
in
or
mov
stc
movsb
xor
cmp
pop
out
inc
sbb
jae
mov
jbe
les
fs
arpl
pop
gs
and
fld
lcall
scas
loope
sub
js
xchg
ds
rcpps
pop
movsb
inc
fstps
stos
cmp
cs
popf
fiadds
decb
loopne
adc
outsl
popf
clc
xor
or
idivl
jo
add
adc
cmp
stc
sti
jns
out
ficomps
imul
sahf
push
clc
fwait
pop
sub
imul
and
fidivs
push
idiv
aam
cld
pop
dec
add
adc
sbb
ficomps
mov
and
sti
mov
adc
sbb
test
sub
mov
sahf
iret
cmovnp
les
clc
xchg
push
arpl
pushf
inc
andl
cmp
xchg
and
pop
sti
mov
aaa
inc
inc
add
out
add
mov
xchg
sub
adc
inc
push
sbb
ficompl
pushf
cs
pop
push
mov
call
xor
loope
mov
pop
pop
loopne
pop
fsubl
stc
sbb
mov
popf
dec
sbb
faddl
adc
fnstcw
xlat
sub
cwtl
add
mov
xlat
cld
jns
lods
lock
andl
add
and
mov
frstor
jl
aas
ret
cmpb
or
xor
addb
mov
ret
sti
xchg
cli
pop
ds
mov
pop
jl,pn
call
mov
cltd
or
pop
fsubl
xor
adc
sarb
dec
and
and
frstor
pusha
ficoml
insb
bound
jg
iret
lgs
sbb
jmp
pop
roll
inc
shlb
mov
testl
mov
adc
loopne
pop
sbb
jmp
jp
rcr
sbb
addr16
fnstenv
pop
pop
push
stc
cmp
push
ds
inc
or
roll
sbb
cli
popf
mov
fisubrs
mov
imulb
and
jb
or
or
js
clc
cwtl
adc
adc
in
cmp
sub
enter
mov
inc
jns
and
std
xor
adc
ret
pop
int
cli
jp
sub
fdivrs
dec
lret
push
jle
addr16
cmpsb
in
pop
jbe
fsts
hlt
pop
dec
pop
push
pop
sahf
fld
mov
xchg
jbe
sub
adc
push
ficomps
mov
xchg
iret
sbb
xchg
dec
jmp
mov
jge
and
pusha
arpl
fisttpll
inc
adc
inc
xlat
cmp
xchg
push
fsubp
sbb
xchg
out
fwait
push
mov
inc
js
mov
jle
cmp
adc
pop
xchg
lcall
cmp
imul
repz
and
mov
int
cli
pushf
pushf
decb
sarb
or
fcomps
mov
cli
sbb
xlat
notl
sbb
push
cltd
shl
jp
mov
sbb
pop
das
inc
and
cltd
fdivp
negl
sub
sbb
mov
mul
mov
xchg
jb
cmc
cmpsb
rcrl
mov
xchg
and
insb
bound
push
cwtl
pushf
sbb
xlat
sbb
stc
shr
pop
cmp
fistpl
sub
mov
adc
imull
and
ficoml
mov
inc
cwtl
shll
mov
cwtl
cmp
cmp
ss
sbb
out
jmp
add
and
xchg
inc
cmp
fwait
inc
sbb
imul
mov
sbb
push
clc
pop
inc
fiaddl
jl
push
and
dec
adc
imul
aas
lea
inc
cld
fsts
jge
inc
mov
jns
pop
push
inc
popf
std
pop
sbb
int
fcomps
lea
decl
cltd
in
adc
ljmp
cmp
mov
xlat
das
in
call
in
popl
mov
fstpt
ffree
lret
inc
test
in
xchg
mov
sbb
loopne
addl
clc
cmp
inc
cmp
jle
adc
mov
pop
pop
mov
mov
sbb
jle
test
loopne
xchg
sti
adc
or
in
pop
data16
cld
lcall
ret
fisubrs
ss
icebp
cld
std
and
out
rcrl
sub
adc
outsl
or
pop
add
push
jmp
imul
lea
push
lahf
fdivrs
inc
test
dec
inc
call
jecxz
loop
into
push
adc
hlt
mov
and
subb
pop
cs
add
cli
fsts
and
pop
stos
adc
jae
fldl
pop
mov
cmp
sbbb
xchg
mov
daa
out
and
js
pop
or
and
sbb
inc
cltd
arpl
sbb
add
cwtl
lods
push
xchg
lods
cmp
cli
jge
loop
sahf
lahf
cmpsb
and
shrb
int
jecxz
sbb
mov
cld
mov
cmpsl
jmp
and
lcall
sbb
pop
sbb
in
fimuls
mov
cmp
and
jecxz
jge
and
inc
js
xchg
cld
test
negl
or
hlt
les
cmp
cmp
fldenv
sahf
fdivs
push
enter
jle
fstpl
fsubp
pop
xchg
jg
and
cli
pop
js
cmp
mull
loopne
arpl
mov
or
pop
dec
sbb
faddl
into
out
fnstsw
fsubrs
dec
fisubs
xchg
cwtl
fdivl
sub
lds
cld
ss
sub
fsubl
and
sbb
ffree
sbbb
test
ljmp
aam
int3
inc
ss
inc
mov
xor
imull
cli
imul
sbb
cmpb
inc
sti
sbb
stc
negl
sub
sbb
jp
pop
iret
in
loopne
pop
cmp
cli
add
pop
in
divl
pop
pop
mov
cld
sbb
sbbb
cwtl
fcoms
pop
jge
push
push
rolb
daa
xor
mov
cld
pusha
clc
sbb
ret
pop
dec
pop
sbb
adc
xor
notrack
mov
xchg
sub
popf
pop
sub
into
mov
mov
sbb
fdivrs
mov
fld
popf
sbb
cltd
cmp
xchg
cld
cmpsl
arpl
cmp
add
fisubl
ds
mov
pop
xlat
sti
fmul
pop
jnp
adc
lcall
pushf
adc
sbb
lcall
mov
or
pop
icebp
jns
jge
mov
lods
sbb
testl
std
outsl
into
lock
into
shlb
xor
inc
jl
imul
inc
ret
fdivrp
mov
adc
sbb
enter
push
push
data16
lcall
in
mov
not
leave
inc
andb
mov
xor
add
out
mov
mov
sti
pop
pop
or
gs
mov
movsb
outsb
mov
idivl
dec
in
testb
out
ffreep
popa
jns
je
mov
fistpll
cmp
in
xor
test
sbb
pop
scas
inc
cmp
jp
divb
dec
mov
addb
pop
mov
cltd
xchg
mov
mov
push
adc
inc
jp
clc
mov
and
jg
mov
fwait
mov
push
jle
xchg
cmp
mov
outsb
out
or
sbb
sti
fs
cmp
pop
mov
popf
imul
fisubrl
loop
mov
jns
mov
fadds
sar
jb
pop
inc
sahf
pushf
mov
fcmovnu
in
ss
mov
faddl
and
xchg
add
push
gs
cmp
mov
pop
cli
adc
negb
or
mov
sbb
pop
inc
jae
sbb
incl
mov
or
loop
das
or
mov
and
clc
sti
in
jp
inc
fstpl
mov
jbe
mov
lcall
mov
push
push
mov
ds
imul
pop
sbb
pop
negl
fdivrs
ljmp
cmpsb
clc
cmpb
sbb
cltd
sahf
into
and
test
and
imul
jg
pop
popf
cwtl
ret
and
mov
jne
jae
cmc
pop
divb
call
push
andb
xor
jecxz
and
or
pop
cmp
fildl
mov
inc
cmc
loopne
mov
lcall
mov
cltd
mov
mov
push
and
adc
pop
pop
sbb
testb
ds
clc
mov
or
arpl
push
clc
push
xchg
mov
adc
fiaddl
add
cmp
cmp
inc
dec
sbb
and
mov
push
mov
pop
cld
or
fisubl
push
pop
stos
in
mov
arpl
aam
pop
cltd
pop
sbb
clc
mov
pop
inc
in
push
adc
loopne
das
cmc
adc
pop
adc
inc
pop
lcall
gs
adc
sbb
mov
adc
pop
clc
sbb
clc
and
sbb
cmp
fadd
loopne
jge
inc
xchg
mov
js
sti
jl
arpl
outsb
jp
jl
out
inc
cmpsb
push
fstl
popa
popf
mov
push
mov
cmp
and
and
mov
cmpsl
popa
cltd
std
les
sbb
push
pop
pop
testl
cmc
pop
sbb
les
incb
cli
pusha
testl
adc
movsl
mov
pop
js
lret
adc
std
cmp
lods
popf
add
mov
movsb
mov
cld
mov
push
shll
jo
mov
pop
cmp
adc
pop
sbb
enter
pop
cmp
pop
and
fldcw
cltd
inc
mov
loopne
inc
mov
fcomps
shrb
xlat
mov
adc
adc
aaa
pop
test
and
mov
add
outsb
ds
and
lods
pop
sahf
stc
xlat
cmc
loope
lds
cmp
repnz
sarb
rcr
into
pop
sbbb
cmp
adc
lcall
xor
adc
popa
sbb
jecxz
jae
or
in
lcall
test
jae
insl
fistpl
ficompl
inc
cmp
sarl
gs
sbb
cltd
mov
lea
mov
rcrl
xchg
add
js
xor
pushf
int
mov
inc
fdivr
jo
and
stc
cld
push
xchg
clc
push
movsb
mov
pushf
pushf
dec
add
mov
ljmp
cmc
ds
jl
mov
data16
sahf
xchg
arpl
mov
stc
sub
dec
adc
fcmovu
shrb
adc
adc
je
jg
fdivrl
movsb
popf
test
and
es
jge
call
mov
cmc
loop
cs
cwtl
cld
xchg
cmp
mov
and
mov
mov
cmp
pop
test
jno
cs
lds
sbb
fildll
inc
in
fs
jecxz
push
ss
pop
mov
lcall
scas
jne
xor
popf
sarl
and
in
pop
and
stc
push
ljmp
push
jnp
mov
cli
xchg
cmc
sub
push
out
add
sbb
inc
fiadds
popa
popa
and
lret
inc
add
lea
pushf
rorb
lcall
adc
push
rcrl
fstps
lods
or
fwait
pop
imul
fiaddl
lret
mov
pushf
dec
clc
adc
mul
mov
pop
mov
inc
sbb
lods
mov
fstps
mov
add
aam
sbb
fdivrp
fisttpl
mov
pusha
fadd
ud1
inc
jns
xchg
sahf
xchg
in
sti
cmp
aaa
jle
add
pop
mov
or
stos
push
pop
xchg
push
jl
lret
pushf
push
add
enter
rolb
pop
mov
push
inc
pop
mov
fisttpll
adc
bound
inc
inc
jle
mov
out
cmp
and
pushf
iret
lcall
rcrl
fdivrl
cmpsb
pop
sbb
into
pushw
out
fldcw
mov
inc
adc
addr16
mov
aaa
sbb
cmp
push
cli
mov
sbb
call
fidivrl
mov
mov
pop
call
das
pusha
jle
pop
mov
add
std
in
lds
aaa
fsubr
pop
cltd
aaa
ljmp
mov
std
enter
and
mov
add
pop
inc
cli
lcall
mov
jns
push
mov
cli
pop
cli
test
pushf
jo
mov
rcrb
cmp
adc
popf
dec
out
dec
mov
xchg
add
ficoms
shrb
pop
stos
mov
adc
cmp
adc
fstpl
pop
sbb
bound
push
in
bound
pop
clc
pop
cmp
rcrl
pushf
mov
scas
stos
mov
sti
fcoml
popa
mov
add
ss
mov
or
imul
sahf
mov
fstps
fstpt
add
cld
pop
pop
pop
cmc
sbb
push
ds
in
mov
loop
sbb
mov
adc
adc
jl
xlat
cli
shlb
clc
push
sbb
dec
jmp
pop
movsb
sbb
sbb
push
add
pusha
inc
xchg
shlb
gs
adc
adc
sub
lret
icebp
sahf
in
push
mov
mov
adc
pop
sub
sbbl
sbb
push
xchg
roll
frstor
xchg
jp
in
repz
ss
sbb
mov
mov
cmp
xchg
jns
aaa
jl
mov
jle
stc
dec
xlat
fwait
inc
sti
addl
sbb
ret
std
push
mov
pop
jns
jae
inc
jle
xchg
gs
sub
mov
call
ljmp
dec
bound
pusha
daa
sub
sbb
xchg
mov
test
xor
fwait
xlat
lds
fnstsw
lds
sarb
cmp
decb
add
jae
jle
cmp
jo
out
cmp
bound
cli
fsub
cld
and
jge
sbb
pop
mov
shrb
mov
jp
adc
push
jl
cmp
pop
and
je
adc
mov
mov
js
and
mov
fisubrs
xor
cmp
jg
daa
add
pop
sbb
and
leave
fwait
pusha
ret
testl
mov
or
cmc
xchg
jge
cmc
inc
xor
sbb
mov
cmp
sbb
dec
and
jno
pushf
mov
lcall
cmp
sbb
faddp
sbb
and
mov
add
cmpsb
mov
not
xchg
jmp
inc
jne
xchg
dec
jnp
sub
push
fwait
xlat
aaa
in
jge
lock
imul
mov
push
fsub
std
ficompl
add
inc
push
adc
std
sbb
and
pop
stc
js
mov
jle
stc
js
mov
je
cld
nop
fcomp
mov
push
pop
mov
mov
ds
pop
sbb
fs
inc
mov
pop
mov
cmpb
jno
xor
inc
sahf
pusha
and
adc
adc
les
fdivl
mov
cmp
cmp
cmp
and
pop
std
fsub
mull
xlat
ficompl
cmc
add
cmpsb
inc
stc
shl
pop
mov
inc
in
mov
js
cs
ret
es
xchg
pop
push
incb
jns
pop
xchg
push
xor
cmp
cmp
pop
pop
sub
out
inc
sbb
mov
mov
dec
mov
sub
pop
adc
inc
pop
leave
fidivrl
cmp
cmp
xchg
std
pop
dec
inc
jb
push
clc
pop
push
jge
daa
mov
sbb
cmp
mov
add
scas
fstps
push
outsb
sbb
and
cmp
pop
aas
sahf
and
push
test
mov
sti
mov
sbb
jl
fiaddl
and
jb
and
sbb
movl
cs
lock
movsb
outsl
inc
sbb
fstpl
test
cli
out
and
stc
mov
dec
cmp
cmp
cltd
call
pusha
jp
cmp
mov
jns
rorl
fisubrs
lcall
push
fcomp
in
fstps
jmp
inc
xchg
and
sbbl
testl
popf
sbb
loop
adc
pop
popf
cmp
rcr
mov
rcrb
adc
in
mov
xor
pusha
mov
mov
add
inc
mov
mov
sbb
xor
jns
and
sbb
xor
leave
frstor
push
cmp
xchg
jmp
subl
fcoms
scas
push
ficomps
notl
jmp
cmp
pop
loopne
fistl
fstpl
mov
push
bound
cmpsl
sub
mov
divl
add
mov
fstps
in
mov
cmp
sub
out
push
pop
shrl
and
scas
leave
and
xchg
fstps
pop
jge
pop
movsb
mov
or
lock
leave
adc
add
sahf
fdivrs
lcall
mov
xor
cmpb
and
popf
movsb
inc
cwtl
aaa
out
pop
and
fistpl
fstpl
inc
mov
cltd
sarl
mov
mov
pop
imul
cmp
mov
pop
inc
sbbb
fcmove
lds
stc
int3
sbb
ficoms
pop
je
fdivrl
push
pushf
frstor
roll
je
mov
jmp
push
adc
mov
outsl
lret
sub
mov
clc
and
mov
repnz
jmp
sub
mov
jle
sub
movsb
and
stos
or
jmp
incl
sub
jo
mov
mov
pop
daa
fs
pop
das
pop
ficomps
outsl
xchg
out
inc
fstps
pop
dec
mov
xor
ss
push
sub
insb
in
mov
mov
sbb
pop
and
mov
sbb
cmp
xlat
mov
mov
pop
mov
adc
cmp
add
gs
pusha
xor
xchg
jge
pop
push
mov
cwtl
jle
mov
dec
mov
inc
stos
test
inc
jl
idivl
sbb
cmp
pop
fimull
clc
mov
outsl
sahf
aam
sbb
pushf
rcrl
and
jge
xchg
pusha
cmpsl
pop
add
cmp
mov
scas
dec
cli
int
mov
sbb
sbb
inc
add
cltd
jl
adc
ficompl
add
js
pop
sbb
dec
and
sbb
cmpsb
or
mov
mov
inc
cld
fdivs
pop
andl
loope
shll
icebp
lds
gs
jae
ret
xchg
or
mov
adc
mov
lcall
inc
and
pop
lds
sbb
or
mov
into
inc
cmp
cmp
cmpsl
mov
popa
sti
xchg
bound
sbb
xchg
and
sbb
dec
sbb
and
pop
nop
in
mov
and
xchg
inc
xchg
lods
xchg
inc
vpshaq
shl
cld
loopne
leave
cli
mov
ret
sahf
mov
fnstcw
popf
inc
mov
ss
sub
fcomip
shl
or
xchg
fdiv
inc
jns
pop
jo
es
fs
pop
sbb
mov
pusha
xchg
or
sbb
scas
and
pop
cs
mov
mov
push
js
lcall
cmp
adc
fidivrs
pop
mov
add
aaa
sub
popl
xchg
in
cmp
movsb
add
in
mov
aaa
aam
pop
pop
dec
vpaddusb
sbb
cmp
cmc
add
scas
pop
and
fwait
push
add
push
pusha
pop
add
inc
jl
and
loop
clc
jp
out
sbb
sbb
pushf
sbb
das
out
mov
clc
hlt
or
fstpl
addl
cmp
cmp
sbb
pop
cs
cltd
mov
ss
sbb
rclb
pop
or
cli
mov
xchg
mov
pop
in
and
decl
les
xlat
inc
addl
popa
mov
pop
mov
cmpb
mov
jge
mov
in
in
add
cltd
xchg
mov
pop
das
and
out
jae
pop
jg
fcos
mov
std
mov
mov
mov
pop
fwait
sbb
and
inc
jmp
mov
sti
mov
mov
pop
and
pop
jl
jnp
andb
lcall
mov
pop
cmp
sbb
sbb
sbb
and
pop
xchg
mov
inc
cmp
daa
push
inc
std
jl
push
adc
adc
cltd
xchg
int3
ds
aam
jb
pushf
movd
loopne
inc
cli
pop
xlat
cmp
mov
cmp
inc
cld
cmp
mov
and
fldcw
ljmp
pop
loopne
mov
cmp
sbb
push
pop
fs
adc
leave
sbb
rcr
fcmovb
gs
enter
jns
mov
lods
fstpt
int3
add
pop
mov
pop
adc
jbe
mov
mov
nop
pop
push
repnz
sbb
add
xchg
jbe
pushf
cmp
rcl
mov
mov
clc
sahf
popf
and
pop
mov
pushf
mov
inc
stc
das
mov
pop
mov
cmp
mov
cmp
mov
pop
iret
or
sbb
sbb
add
fsubl
mov
sbb
jns
xlat
fwait
add
add
push
imul
repnz
fs
stc
push
pushf
sahf
xchg
jns
add
push
outsl
mov
pop
pop
pop
std
sbb
sbb
mov
push
fcmovu
insb
push
arpl
inc
dec
arpl
jmp
push
pop
enter
xlat
mov
pushf
lahf
jge
push
and
sbb
dec
std
adc
lds
jbe
stc
dec
add
lret
pop
or
jl
xchg
adc
adc
testb
pop
lds
fcomps
or
or
or
add
push
std
clc
cmp
xchg
mov
pop
jns
add
sarl
and
jge
cs
xor
xchg
pop
ficompl
stc
inc
mov
fstps
jbe
xchg
sbb
rcrl
ror
mov
inc
cmc
cmp
mov
std
ficomps
sbb
and
cmp
je
sub
ficomps
jle
xchg
sub
xchg
mov
and
stc
sbb
sahf
fidivrl
cmp
into
ds
add
testl
cmp
fidivrl
mov
adc
je
scas
fs
inc
pop
pusha
rcrb
push
fisttpll
pop
sub
jle
clc
sbb
adc
cmp
sbb
inc
fcmovnbe
cmp
orb
cwtl
loopne
dec
cmp
inc
mov
mov
mov
adc
popa
sti
dec
bound
pop
cmp
dec
mov
pop
pop
pop
sahf
cli
loopne
xlat
sbb
push
lds
mov
std
sbb
mov
lock
leave
add
add
push
and
xchg
lcall
jl
jo
mull
jns
jp
aad
ss
cmp
cmp
cmp
loopne
sbb
mov
and
or
mov
or
cli
xchg
in
jle
mov
mov
shl
xchg
pushf
outsb
rclb
push
in
popf
movsb
pop
arpl
fs
mov
imull
pop
ss
std
and
cmp
popf
cltd
xchg
js
push
into
ss
rorb
sbb
std
adc
popf
sbb
cmp
mov
inc
test
lds
movsl
fstps
fadd
push
cmp
fldenv
add
mov
cmpl
std
clc
stc
dec
mov
sbb
sti
and
push
pop
mov
nop
clc
dec
sbbb
and
mov
scas
mov
int3
or
cli
ficomps
cltd
scas
fisttpl
sbb
add
jle
push
std
inc
pop
mov
rcrl
sti
test
fcompl
sbb
in
popf
pop
sbb
or
loopne
loop
lea
fiadds
lcall
sbb
mov
aaa
mov
sub
cltd
xlat
sahf
push
fsub
push
shrb
lret
pop
imul
xchg
aam
sbb
xlat
dec
scas
loopne
pop
aaa
fcomps
or
adc
inc
sbb
pop
adc
sbb
fucom
fcomps
fnstcw
xchg
loopne
sbb
inc
aad
or
mov
pop
sbb
cmp
mov
fimuls
cmp
or
mov
in
fs
or
push
stc
jl
inc
jnp
pop
rolb
lahf
cmp
rcrl
and
cmp
cmp
dec
mov
push
pushf
jmp
cmpsb
psubq
pop
adcb
push
dec
mov
ds
popf
sbb
push
inc
sbb
dec
mov
cmp
js
jns
sbb
jl
cmp
inc
fisubs
out
pop
and
jge
sahf
loopne
cmp
push
mov
shl
xchg
sbb
sbb
fstp
cli
lods
pop
clc
xchg
mov
and
jns
push
ret
mov
sbb
pusha
push
add
pop
idivl
xor
xchg
sbb
out
cmp
cmp
sbb
sbb
scas
rclb
fstp
shlb
subb
cmp
and
mov
push
cs
sbb
and
xchg
decl
in
sbb
xlat
clc
mov
std
sbb
or
cmp
out
pop
push
jge
cmp
mov
mov
ljmp
sbb
into
xlat
mov
push
out
pusha
xchg
sbb
and
pop
mov
adc
cmp
imull
cmp
fsts
sbb
addr16
mov
fs
lock
add
jo
jbe
jecxz
dec
ja
or
sub
push
and
flds
roll
sbb
jbe
xlat
cmovne
cld
idiv
pop
pop
add
xchg
fcmovnu
sahf
ds
std
mov
js
mov
frstor
loop
fcompl
in
pop
cmp
rolb
fnsave
les
mov
das
fs
fadds
sti
jp
push
mov
xchg
jns
dec
adc
stc
sbb
sbb
fistpl
mov
mov
jbe
stc
divb
and
sbb
inc
cld
std
cmp
adc
jae
or
fwait
loopne
add
daa
cmp
rcrl
rcrb
subb
and
cld
mov
cmp
repz
gs
rcrl
and
mov
insl
mov
jp
inc
cmp
cltd
sti
jg
imul
xchg
push
sahf
insb
sbb
popf
fstl
push
mov
mov
arpl
pop
lahf
out
popf
pop
cltd
ja
iret
sbb
dec
das
in
sbb
movsl
inc
js
sbb
sbb
cwtl
sub
lcall
mov
xor
shlb
das
int3
std
push
and
jae
push
cmpsb
stc
add
std
clc
xchg
sub
ljmp
cmpsb
cmpsl
pushf
inc
into
pop
mov
cmp
fimull
cltd
rcr
insb
sbb
mov
push
and
je
fsts
xchg
fwait
mov
cwtl
or
lods
sbb
sbb
lds
mov
fstpt
leave
insl
jns
repnz
jge
sahf
inc
mov
jecxz
mov
mov
das
lods
add
pushf
mov
lea
ret
in
or
jns
ret
addr16
pusha
outsb
shlb
pushf
sbb
mov
fwait
mov
push
cmp
jo
clc
push
sbb
test
cmp
mov
inc
cmp
cmpsb
push
mov
lods
dec
mov
jns
sbb
sbb
xchg
rolb
cltd
testl
pop
sbbb
mov
sub
in
cltd
pop
jl
sbb
push
sbb
fldcw
push
dec
mov
les
pop
or
inc
lcall
fdivr
mov
mull
sbb
dec
mov
pop
fcomps
cmp
fs
cmp
lcall
mov
xchg
jle
cli
cmp
clc
push
jp
inc
sub
leave
pop
cs
std
mov
cwtl
sbb
mov
jg
push
jbe
fdivr
jge
dec
and
lahf
and
sub
test
mov
and
leave
mov
outsl
jmp
lods
pusha
imul
and
scas
push
xchg
push
pop
sbb
filds
repz
cmp
inc
xchg
je
pop
pop
sti
bnd
push
pop
sbb
int3
mov
pop
popf
pop
cmc
cwtl
jle
mov
addb
or
sbb
and
ret
ficomps
movsb
stc
inc
add
int
adc
pop
adcb
cli
setg
sbb
jp
sbb
rorl
lret
inc
dec
mov
mov
jp
sbb
push
push
cmp
and
fnstcw
pop
and
popf
pop
sbb
jl
std
incb
adcl
js
push
int3
mov
cmpsb
mov
mov
mov
negl
lahf
outsl
add
cmp
jbe
nop
test
and
stc
ja
sbb
jns
sbb
cmp
cli
or
pop
mov
ja
cld
fs
adc
or
add
and
fidivrs
fs
jle
sub
cltd
cwtl
fldenv
xlat
out
loopne
mov
mov
xor
stc
sarb
cli
sbb
js
pushf
adc
adc
sbb
arpl
sbb
inc
or
push
pop
inc
mov
mov
rorb
mov
popa
or
cmp
std
lods
cmp
rolb
cmpsl
and
test
add
push
cmp
cmp
stos
loop
scas
jnp
repz
xlat
fwait
aam
sbb
fs
lds
sbb
rolb
aaa
pop
pop
clc
test
fdivr
pusha
shr
cmp
push
aam
mov
les
dec
or
popa
cmp
cmpsb
push
cld
sbb
push
dec
mov
sbb
test
fcoml
add
cltd
ds
cmp
bound
inc
popf
clc
sub
push
scas
pop
fimuls
popf
loope
adc
fistl
xchg
fstpl
jns
das
mov
sbb
cli
aad
jl
sbb
mov
lcall
cmp
pop
and
and
jge
ret
fistl
cli
push
fcomps
in
loopne
outsl
repnz
add
das
sahf
mov
out
and
or
cmp
fwait
cli
addr16
fdivr
inc
lahf
pop
pop
cwtl
pushf
xlat
mov
add
and
sbb
cmp
mov
pop
fcmovu
dec
rcpps
adc
xor
outsb
fs
jge
js
jns
fstpt
mov
lcall
mov
hlt
dec
cwtl
and
pop
xchg
shlb
lcall
xor
lcall
pop
cmp
pop
out
xchg
lcall
mov
mov
nop
incl
stc
pop
mov
cltd
push
push
cmp
mov
push
xor
mov
jge
mov
push
clc
cmp
cli
push
and
sbb
and
cmp
xchg
jl
fwait
and
mull
stos
mov
imul
aad
fidivrs
aaa
add
sbb
std
or
inc
inc
incl
add
or
sbb
sbb
js
imul
jecxz
xchg
out
movsl
sbb
cltd
jl
sbb
mov
cmp
add
cmp
jns
add
mov
fisubs
jl
sbb
sbb
das
mov
and
js
push
mov
loope
dec
pop
mov
jge
and
lods
mov
into
xchg
or
decb
cwtl
js
push
lds
inc
push
fmull
mov
pop
mov
scas
mov
jp
cwtl
sahf
or
sbb
mov
jge
mov
stos
add
and
inc
cmp
fdivp
ljmp
and
xchg
sbb
sbb
jae
pop
into
setle
mov
out
rcr
and
fsts
sbb
sahf
jp
loopne
xor
pop
adc
mov
call
xlat
in
cmp
vpsubq
mulb
cmpsb
scas
into
sub
xchg
or
mov
mov
cld
sbb
mov
or
jns
cmp
subb
cltd
xchg
cmp
and
mov
sbb
sub
test
pop
pop
sti
lods
mov
movsb
jnp
aad
cld
fdivrp
add
mov
cwtl
mov
std
cmp
cmp
cmp
clc
push
add
popa
jns
mov
sbb
pop
filds
fwait
pushf
test
fstpt
movsb
xlat
push
mov
ds
or
fcmovnb
adc
inc
pop
clc
mov
scas
mov
dec
sbb
jge
sub
mov
push
fsts
mov
enter
add
adc
and
pusha
push
xlat
jle
jge
mov
inc
cli
push
rolb
lcall
pop
mov
mov
incb
bound
repz
sbb
sahf
ljmp
sahf
adc
fxch
scas
push
inc
fdivr
pop
inc
jge
imul
in
pushf
cmp
xchg
clc
cltd
ljmp
pop
fisttpll
out
xlat
sbb
enter
fprem1
movb
adc
and
mov
jg
jge
xchg
adc
xchg
jle
pusha
sbb
sbb
ficompl
mov
leave
movb
mov
mov
push
or
xchg
mov
jns
cmp
pusha
sahf
fchs
mov
out
test
adc
clc
inc
pop
sbb
outsl
or
mov
ror
in
pop
xchg
sbb
pop
subb
jns
clc
jg
in
sbb
adc
push
or
fisubl
ja
loopne
inc
dec
das
xchg
ljmp
sbb
sbb
adc
std
in
popl
mov
pop
pop
sbb
sbb
fstps
in
add
pop
sbb
mov
sahf
fwait
and
notl
pop
mov
adc
push
outsl
adc
sbb
mov
insl
dec
add
cwtl
push
sarl
negl
mov
out
clc
and
call
mov
addb
lcall
sbb
stos
out
sbb
or
rcll
xchg
arpl
xlat
inc
cli
xor
and
jo
jmp
fisttps
mov
dec
cwtl
adc
cmp
fdivr
mov
pop
mov
fs
cmp
inc
adc
xor
mov
hlt
andb
jbe
inc
jbe
inc
adc
mov
sub
dec
xor
cmp
testl
cmpsb
or
les
mov
sti
in
xchg
fdivrs
pop
pop
mov
cmp
push
and
inc
lods
xchg
lds
enter
fldt
lds
xchg
in
pop
adc
fcom
int3
inc
cld
pop
cli
push
add
mov
hlt
cltd
cld
stc
push
pop
mov
testl
das
mov
mov
test
repnz
addr16
sti
and
fcmovb
roll
mov
in
mull
cmpsl
mov
xchg
mov
loopne
and
pop
jbe
std
pop
sub
mov
cmp
in
or
js
mov
jbe
jle
shl
sar
mull
loope
xor
dec
int
es
xor
push
sarb
clc
jns
push
xor
cmp
popa
dec
pop
cld
xchg
lret
jns
pop
cmp
pop
stc
mov
cld
idivl
and
repnz
or
sbb
pop
sub
fidivs
fcoml
cltd
hlt
mov
fcoms
sbb
pop
sbb
negl
inc
add
cmp
fprem1
fwait
push
pop
pop
inc
fcomps
and
das
add
in
cmpsl
xchg
xor
sbb
std
fdivrp
mov
inc
jo
shrb
insb
subl
movsb
lcall
sahf
js
mov
or
cld
daa
and
ljmp
cmpsb
adc
jge
cli
jecxz
cli
inc
add
imul
xor
jp
nop
jmp
mov
mov
lods
and
sub
push
pop
insb
testl
pop
pop
fstpt
cltd
sbb
lret
jle
and
mov
pop
in
push
std
stc
rcrl
sti
mov
cmc
pusha
push
mov
mov
fidivrs
and
enter
ds
push
sbb
lret
ficomps
fidivrs
rcrb
jo
sub
pop
fcom
pop
jge
imul
pop
and
cmp
les
fidivrs
fnstsw
cmp
pop
out
jnp
rcrl
negl
adc
push
inc
cld
mov
and
pop
jl
lret
jge
dec
or
fstp
adc
mov
xchg
cmp
sbb
and
lods
adc
cmp
es
ljmp
and
arpl
std
inc
ljmp
xor
aad
dec
mov
mov
mov
mov
mov
xor
adc
js
adc
inc
xchg
clc
pop
mov
sub
ftst
add
imul
rorb
test
sbb
inc
add
call
cmp
mov
lea
mov
popf
and
xor
push
cmpl
lea
jle
negb
sahf
adc
in
jle,pt
add
inc
clc
sti
xlat
pop
aaa
push
pop
mov
sbb
addr16
mov
fdivs
cli
xor
mov
mov
pop
mov
inc
mov
pop
mov
add
sbb
cli
xor
cld
stc
roll
xchg
sti
pushf
mov
mov
cltd
sbbb
jge
pushf
mov
das
sti
and
loopne
sbb
neg
adc
in
sbb
stos
and
mov
shlb
push
nop
sar
xchg
xchg
jns
mov
js
push
mov
jle
cmp
jg
les
push
fnstcw
mov
jb
xchg
shlb
or
cld
mov
push
sahf
andl
sbb
fistpll
sbb
pop
in
mov
js
cmp
cmpsb
adc
adc
pop
imul
sub
pop
cli
stc
clc
js
sub
out
dec
cwtl
inc
dec
push
dec
lahf
xlat
cmp
mov
enter
inc
jae
jmp
rcll
sbb
pop
push
add
in
js
mov
lds
sbb
mov
jl
movlps
pusha
pop
std
xchg
cmp
fsts
adc
shrl
sbb
cltd
jmp
inc
sti
pop
xor
test
aam
sti
adc
fstp
mov
pop
or
ficoms
adc
mov
adc
push
jge
adc
sbb
fistps
out
mov
adc
add
pop
mov
inc
arpl
popf
cmp
mov
testb
ret
or
rcrb
mov
cltd
jp
jp
adc
mov
fadd
mov
or
dec
push
mov
dec
adc
mov
cmp
lods
divl
cmpsl
inc
jbe
lds
mov
xchg
and
pop
cmp
inc
scas
mov
push
push
data16
stc
jl
pusha
pop
jb
sahf
push
jmp
mov
arpl
aad
hlt
mov
cmp
clc
mov
adc
sbb
and
aam
sbb
jl
scas
cltd
pop
orb
mov
in
xchg
fstl
rcr
arpl
sbb
xor
mov
mov
or
cmpsl
push
mov
mov
pusha
adc
or
mov
mov
fs
jge
mov
ficoml
sahf
add
push
lahf
fbld
fs
mov
dec
pushf
push
outsl
jb
pop
cs
lods
in
leave
mov
pop
or
mov
clc
xchg
pushf
mov
outsb
insb
movb
jl
adc
mov
and
dec
les
sarb
cmp
pop
mov
push
mov
jne
sahf
jp
popf
xchg
dec
pusha
into
push
mov
and
inc
push
lcall
popf
sbb
cmp
decb
fisubrs
pop
outsb
or
pushf
movl
pop
pusha
sbb
dec
xchg
pop
xor
mov
clc
cmp
popa
mov
pop
mov
sbb
xor
push
cmpsl
pop
loopne
sbb
mov
fistpll
inc
xlat
mov
scas
jg
jb
or
mov
inc
adc
rcrb
out
sbb
cwtl
out
pushf
fdivr
fs
lret
fimull
xor
xor
enter
xlat
cmp
fistl
hlt
pop
fistpl
out
fistps
cli
orb
rorb
cmp
repnz
and
fadd
xor
pop
clc
cli
cmp
clc
add
xbegin
cltd
cmp
cs
int
cmp
mov
sbb
mov
pushf
jne
data16
or
sub
fiaddl
leave
mov
jp
and
in
mov
icebp
sbb
in
movsb
lock
popf
popf
inc
fidivrs
out
in
stc
neg
push
not
fisttps
scas
inc
inc
or
idiv
imul
pop
ficompl
loopne
mov
mov
js
inc
pop
sahf
pop
add
fimuls
cmp
or
pop
je
int3
out
cmp
jle
or
lds
and
aam
fs
andl
push
cltd
add
sbb
pushf
jge
repnz
cld
mov
mov
fstpt
sar
ret
mov
stc
mov
lods
mov
pop
cltd
in
pushf
sahf
inc
hlt
mov
pop
in
mov
cmp
pushf
cltd
xchg
and
push
rcll
fstpt
adcb
std
cmp
fstps
mov
notl
sbb
cmp
adc
adc
mov
cmp
mov
pop
loopne
lds
movsb
mov
sbbb
mov
jp
and
jns
fidivrl
out
icebp
push
cld
sbb
inc
cmp
ds
push
sbbb
jbe
negl
lds
cld
cmpsb
lds
out
adc
xor
mov
xchg
mov
fsts
jno
cmp
push
cmp
gs
pop
cmp
or
pop
rcl
into
pusha
idiv
lea
pop
cwtl
inc
add
insb
push
nop
sbb
sbb
std
inc
jno
mov
xlat
and
cmp
push
dec
add
in
fs
filds
pusha
cmp
jns
cmp
mov
cli
mov
xchg
mov
scas
lods
jo
dec
js
push
pop
jp
pusha
cli
sti
mov
aam
fiaddl
xchg
adc
mov
adc
aaa
pushf
mov
ds
repz
cmp
ljmp
pop
pop
jge
inc
scas
ljmp
mov
add
and
sbb
fcmovnbe
shll
and
insb
inc
jle
sbb
fnstcw
or
cmp
sub
leave
cs
xchg
lods
fsubrl
add
pop
fnstcw
jmp
adc
ds
negl
push
cmp
sti
jge
mov
subb
repz
pop
mov
dec
xchg
xchg
add
push
pop
orl
jmp
sbb
fcomp
out
mov
mov
andl
inc
cmpsb
jp
cmp
mov
jecxz
pop
fs
jns
loopne
cmp
dec
in
inc
dec
pushf
mov
addl
pusha
adc
out
mov
mov
lcall
cmp
xor
jp
xchg
setge
inc
fisubs
cmp
cs
in
cld
push
pop
xlat
or
leave
pop
xor
jo
lcall
das
aas
fdiv
fcmovnu
std
or
cmpsb
pop
stc
loopne
clc
cmpsb
cmp
xor
jg
pop
les
rol
ds
xlat
flds
xor
sahf
dec
fstl
fsubrl
add
push
and
cwtl
sbb
pop
popa
sbb
faddl
mov
popf
pop
cmp
clc
sbb
cltd
pop
push
cwtl
sbb
rcrl
mov
inc
in
sti
cld
data16
mov
stc
adc
adc
mov
in
outsb
fsubrl
inc
test
cmpsb
cmpsb
cli
setge
js
cwtl
mov
mov
push
popa
or
int
rcll
aas
lods
movsb
or
pop
mov
lods
xor
pop
outsl
fimuls
mov
fisubs
pop
and
pop
mov
pushf
neg
sbb
push
inc
cmp
inc
sub
jecxz
xchg
lods
pop
fdivrs
mov
ss
pop
inc
sahf
imull
pop
cs
xchg
jp
xchg
std
jne
loope
jge
cmpsl
mov
add
cli
cmp
jp
das
jb
roll
cmp
out
adc
cwtl
xor
fnstsw
pop
sbb
pop
fwait
push
fs
inc
pop
negl
jle
movsl
adc
mov
test
push
insb
pop
push
jne
js
fs
dec
out
push
ds
add
enter
addr16
mov
cwtl
popf
jp
inc
xor
stc
mov
aam
and
sbb
push
mov
fiadds
push
inc
sub
mul
lcall
cli
sbb
pusha
inc
jns
mov
add
mov
aam
cli
bswap
pusha
and
mov
xchg
bound
pop
jae
jl
test
pop
clc
add
negl
xchg
sbb
sbb
pop
adc
ss
mov
push
or
jecxz
mov
cmpsb
aad
pop
scas
aad
movsb
pop
fsubrp
movsb
fidivrl
dec
xchg
ficompl
ficoml
addr16
testl
and
stc
cmp
pop
fisttpll
xor
adc
addr16
or
ja
fstpl
pop
fcmovne
out
cli
bound
cld
xchg
and
sub
or
frstor
push
popf
movsb
add
rcr
mov
push
movsb
fcompl
and
push
mov
push
mull
pop
sbb
mov
pop
inc
inc
pushf
popf
imull
jl
cmp
pop
sbb
scas
sbb
mov
and
jns
lea
les
les
sti
and
mov
jge
sbbb
or
jmp
ds
pop
lods
sbb
mov
xchg
mov
arpl
sbb
fidivrl
pop
loopne
push
pop
mov
adc
push
cmp
jge
cmp
and
mov
aaa
mov
cli
cmp
sbb
cmp
pop
rcrl
in
pushf
add
std
inc
ficompl
out
jp
cmp
cwtl
add
jl
xor
xor
inc
inc
or
pop
xlat
fwait
shll
cmp
add
fdivrl
pop
ljmp
and
cltd
push
cmc
ds
fs
mov
jno
push
out
negl
cwtl
add
inc
divl
sbb
lcall
mov
or
pop
inc
cmp
js
pop
or
pop
adc
std
jmp
mov
testb
fcompl
vaddss
int3
into
nop
inc
ficompl
andb
mov
lock
in
and
and
fnstsw
sti
das
inc
pop
loopne
or
sahf
push
addr16
sbb
js
xor
xchg
leave
fs
ret
or
into
mov
xchg
test
divb
pop
cli
push
ja
insb
gs
xor
sbb
cmpsb
pusha
sar
push
mov
sub
inc
gs
out
pushf
pop
and
pop
cwtl
into
ljmp
jl
cmp
test
mov
sti
lcall
mulb
std
mov
push
push
clc
leave
and
pop
loopne
loopne
pop
push
pushf
push
jg
int
test
sahf
mov
stc
xor
cmc
mov
fdivr
xlat
jge
xchg
pop
mov
push
cli
ljmp
sahf
shlb
lcall
arpl
js
sar
loopne
push
mov
frstor
mov
mov
and
pop
and
test
push
in
subl
sbb
push
mov
cmp
add
jl
jp
jns
mov
sti
fnstcw
mov
mov
dec
sbbb
js
sbb
adc
cmp
dec
stos
jno
lret
adc
xlat
fimull
fwait
pop
sbb
jns
sbb
add
div
fildl
cmp
insb
enter
imul
adc
loopne
in
jle
pop
frstor
inc
std
mov
clc
mov
jp
cmpsb
push
cld
fdivr
mov
pop
pop
loopne
mov
inc
and
popf
sub
sbbb
cld
call
shr
lahf
popf
jl
sbb
andl
sahf
fstps
stc
mov
ljmp
push
fnstcw
std
and
adc
pop
xor
leave
and
xorb
outsb
mov
adc
cwtl
fadd
pusha
pop
lds
repnz
mov
pop
xchg
aad
cwtl
cli
inc
xchg
negl
mov
add
jp
push
cmp
sbb
rcrb
xor
movsb
arpl
cli
mov
inc
sbb
add
add
cmp
or
cwtl
subb
out
loopne
cwtl
or
fldl
stc
testb
dec
cmp
or
inc
rcll
sbb
cld
lcall
and
adc
push
cmc
mov
fs
jle
pop
cmp
daa
cmp
sbb
xchg
cli
fcoms
cltd
in
shl
add
popf
pop
sub
outsb
enter
ficomps
push
cmp
sbb
repnz
add
gs
mov
and
je
cmp
scas
xchg
or
cld
popf
sarb
fninit
xchg
pop
sbb
imul
cli
inc
push
cmp
jecxz
lcall
cmp
push
out
jo
sahf
mov
iret
les
inc
imull
pop
cltd
sahf
sub
jg
lods
jle
js
negl
fnstcw
test
lds
ficoml
pushf
in
and
fdivr
and
sbb
and
pusha
mov
in
mov
cmpl
or
cltd
movsb
sbb
in
fmul
inc
mov
inc
xlat
mov
mov
or
dec
push
xchg
jbe
push
cltd
sbb
xchg
adc
dec
fcomps
and
mov
sbb
xlat
jns
negl
mov
lcall
rcrb
fdivs
push
sub
jle
clc
fldt
lods
push
cmp
ds
fcomps
jg
jo
xchg
call
jmp
movsb
popa
loopne
and
lds
mov
out
cmp
or
stc
pop
adc
fdivrl
sarl
pushf
inc
sbb
fldt
fiaddl
js
fwait
pop
sbbb
pop
sbb
cmpb
adc
jp
xchg
cmp
mov
xor
push
mov
adc
hlt
out
jp
arpl
scas
sbb
sbb
and
stos
xor
cltd
popf
jns
push
nop
xchg
aam
fidivrl
popa
xlat
inc
add
pushf
cmp
or
mov
out
neg
pop
jp
fisubl
inc
xlat
call
jge
pop
sti
outsb
cmp
cmp
mov
clc
push
daa
dec
ljmp
pop
popf
das
int3
notl
lret
js
and
jp
adc
sahf
ds
cmp
xor
insl
and
sbb
push
mov
jge
out
sbb
pushf
inc
popf
in
push
fnstenv
cmp
push
cltd
fwait
std
adc
and
pop
lds
mov
sbb
stc
pushf
std
das
sbb
les
arpl
pop
jp
iret
cmp
cmp
sbb
lods
vpsubsb
add
and
inc
and
popf
pop
mov
inc
subb
mov
ss
sbb
mov
or
sbb
sbb
fisubl
inc
mov
das
mov
out
mov
cmp
sahf
push
mov
and
loopne
jp
testb
pop
sub
jle
fstps
inc
repnz
std
sahf
cmp
and
xor
jle
outsb
lcall
dec
orl
cwtl
cmp
and
in
cmp
add
incb
mov
push
idiv
mov
xchg
stc
fwait
sbb
movsb
xchg
pushf
add
jle
sbb
fisttps
scas
xchg
mov
adc
mov
das
fisubs
push
int
sub
sahf
push
add
arpl
testl
out
or
ss
fdivrs
add
cs
push
push
pop
fcompl
adc
cmp
jge
xchg
lahf
jp
pusha
mov
pop
xchg
jl
xbegin
mov
pop
sbbb
fdivrl
stc
mov
testl
cmp
jo
clc
mov
jle
fisttpl
mov
or
mov
pop
lcall
add
add
sar
mov
div
loopne
lock
loope
push
pushf
sub
rclb
mov
jle
cmpsl
xor
sbb
dec
iret
outsb
cmc
add
or
mov
mov
js
aaa
mov
std
jns
fdivp
pop
mov
cmpsb
mov
jb
stc
xchg
fisubl
int3
aam
daa
stos
lods
je
scas
inc
mov
mov
popf
pop
rcr
cli
aaa
cwtl
lret
sbb
cld
pop
mov
int
div
and
shlb
arpl
unpckhps
cli
push
std
adc
fstpt
xchg
stc
sbb
rcrb
jae
mov
mov
cmpl
lds
clc
push
cmp
mov
test
cmp
add
data16
push
and
fldl
and
mov
std
lds
push
xchg
leave
inc
pusha
inc
cli
addb
popf
sbb
xchg
mov
pop
add
pop
adc
sti
sbb
fstps
mov
sbb
sti
roll
scas
and
lock
xor
lcall
push
popl
mov
pop
xchg
stc
dec
in
repz
mov
adc
test
mov
add
xor
out
push
sbb
movsl
cmp
inc
sub
mov
jl
icebp
inc
fst
mov
inc
cmp
cmp
push
and
push
xor
mov
xchg
stc
cmp
cli
cmpsb
jno
scas
lea
js
in
pop
and
fistps
popa
testl
xchg
xchg
and
add
sbb
sbb
lret
adc
and
pop
push
cmpb
adc
aam
fwait
cmp
dec
inc
mov
mov
mov
je
sbb
stos
fucomp
cmp
xlat
cmpsb
cmp
lcall
xlat
cltd
fmul
and
aad
cs
icebp
jg
sahf
cmp
cmp
ljmp
mov
push
pop
mov
int
xor
js
xlat
sti
addr16
mov
loopne
push
adcb
dec
aam
push
movsb
cwtl
fnstcw
fstl
adc
loopne
pushf
pop
aam
stos
add
inc
outsl
faddl
pop
jns
sbb
imul
stos
sbb
or
cmp
add
sti
dec
push
push
mov
or
or
adc
cmpsl
loopne
cmp
cli
lret
idivb
fadd
fldenv
lahf
cld
ss
fldt
fimull
sbb
pop
dec
lahf
xlat
fmuls
push
cli
sbb
and
cmp
clc
mov
mov
sbb
fdivrp
test
cld
mov
ljmp
imul
adc
adcb
jge
pop
cmp
mov
cld
jl
mov
mov
sti
mov
sbb
cmp
repnz
aaa
gs
cmp
push
sub
cmp
sub
faddp
and
idivl
enter
fcompl
or
xchg
popf
pop
sti
sbb
adc
out
pop
xlat
ror
pop
jnp
mov
fstpl
pop
lea
jae
mov
or
js
cmp
aam
jns
call
pop
sbb
fidivrl
movsl
mov
cmp
ret
cmp
push
inc
mov
popf
jge
lahf
sbb
popf
mov
fcmovu
outsb
lss
inc
fnstsw
jle
jl
mov
dec
cmp
fsubl
sub
ds
cli
test
xchg
inc
loopne
pusha
js
xchg
ds
movsb
inc
mov
pop
bnd
lcall
inc
sbb
fistpl
clc
adc
mov
inc
fsubs
popa
push
js
sbb
in
sbb
mov
inc
fidivs
pop
fsubrs
sbb
mov
pop
in
ds
cs
sbb
mov
sti
fiaddl
inc
jle
fadds
in
fdivr
movl
fdivr
fwait
cmp
sahf
dec
stc
mov
pop
js
sbb
dec
stos
insb
in
inc
loopne
dec
pop
cwtl
mov
mov
cmp
push
jle
sahf
cld
xchg
push
scas
bound
stc
dec
sbb
leave
les
incl
leave
negl
sbb
cmp
or
sbb
xor
pop
mov
in
fneni(8087
movsb
or
js
mov
stc
adcb
cltd
or
arpl
pop
adc
cld
sbbb
lcall
sbb
sbb
idivl
cli
mov
clc
frstor
adc
xlat
xor
addr16
pop
jecxz
xchg
fstps
adc
mov
cmp
mov
repnz
push
mulb
cli
mov
jl
js
std
sbb
mov
jl
sbb
pop
push
jecxz
data16
orb
push
inc
jp
sbb
bound
adc
inc
cmp
out
ljmp
mov
jp
cs
push
xchg
pusha
cmpb
pop
sti
daa
or
ficoms
icebp
pop
sahf
int
xchg
and
std
xchg
cmp
mov
fscale
adc
jge
js
cmp
xchg
fstps
popf
sbb
fisubs
inc
dec
arpl
mov
add
xor
rcrb
and
mov
xchg
push
rcrl
inc
add
and
in
xchg
cmp
dec
sbb
jmp
psrld
sbb
das
pushf
jb
inc
add
sub
push
out
mov
xlat
sbb
pushf
movsl
sti
js,pt
movsl
jp
xchg
cmpsb
cmp
out
xor
mov
and
loopne
fidivl
notl
movsb
popf
inc
push
pop
mov
lock
es
inc
js
jl
cmp
mov
cmp
push
and
mov
in
push
add
ficompl
jbe
mov
lcall
cli
sbbb
repnz
std
or
cmc
inc
jns
gs
mov
push
cmp
sbb
sbb
out
inc
fldt
mov
mov
sbb
shrl
in
inc
out
clc
lods
fmuls
vfrczps
sti
push
cmp
mov
insl
stc
pop
adc
ds
and
cmovg
fnstcw
cwtl
mov
cmp
push
lea
popf
pop
add
sahf
es
icebp
xlat
cmp
and
pop
adc
rcl
adc
hlt
sahf
fdivrl
inc
jg
js
mov
bound
or
sbb
shrl
jbe
pop
fsubrl
loopne
pop
mov
pop
sbbb
inc
sbb
inc
cmp
pusha
clc
shrl
sub
rorl
push
lcall
aam
xlat
bound
pushf
mov
xlat
and
pop
cmp
mov
sti
cltd
and
ljmp
jbe
add
dec
and
pop
mov
push
sbb
stc
pusha
sbb
xchg
popf
xlat
jbe
fisubrl
loope
jmp
popf
sahf
insb
and
stc
pop
clc
mov
idiv
adc
lcall
and
sub
inc
movl
mov
add
daa
jb
and
adcb
rcrl
adc
and
jle
stc
fstpt
loopne
adc
sahf
xchg
pop
add
jg
or
push
repnz
incb
dec
xchg
cli
and
insl
mov
pop
ds
sbb
adc
mov
sbb
sti
add
fimuls
add
lds
fsubl
sbb
cmp
inc
sbb
xor
xor
rcr
mov
jge
ficompl
sbb
push
inc
pop
test
jle
out
push
or
imul
lds
jge
lret
nop
enter
mov
mov
mov
cmp
cmp
incl
sub
fisubl
insl
sbb
lcall
imull
xchg
iret
into
mov
cltd
mov
push
inc
add
leave
fs
sbb
cmpsb
mov
push
dec
cwtl
sbb
jmp
std
ss
fstps
xor
sahf
out
fdivrl
sbb
sbb
fs
push
push
sbb
decb
pop
cmc
or
mov
cmp
pop
hlt
sbb
addr16
std
and
mov
push
mov
mov
sbb
mov
add
into
cltd
outsb
mov
jle
in
jp
pop
cmp
pop
pop
inc
add
pop
adc
xlat
adc
mov
cmp
and
pop
enter
cmp
negl
andb
inc
cli
mov
popf
sahf
mov
cld
lret
push
mov
jns
mov
mov
sbb
in
pop
sbb
pop
sbb
fiadds
movsb
xchg
sti
pop
repz
mov
mov
jle
adc
cmp
idiv
std
pop
and
mov
cltd
mov
jge
push
sbb
in
fdivrl
pop
in
mov
cmp
idivl
dec
push
adc
and
jle,pt
push
fcomps
pop
inc
jae
cmpsb
int
imulb
fdivrl
repnz
ds
mov
cli
ss
and
mov
adc
cmp
iret
push
loopne
std
cld
inc
mov
sahf
jle
sbb
lcall
mov
and
push
ds
mov
fnsave
and
mov
cltd
fdiv
outsl
or
jns
fcomps
jno
adc
jp
adc
fs
pop
andb
gs
popf
rclb
cmp
sar
shll
adc
jnp
pop
jp
cld
out
adc
leave
out
adc
loop
in
pop
sbb
das
pop
push
cmp
lcall
pop
jns
xchg
stc
neg
inc
mov
pop
ss
daa
dec
xchg
and
cmp
cmp
cli
in
cmp
hlt
sti
mov
stc
jl
data16
ds
sbb
cmp
jge
cld
pop
sbb
stos
sub
es
inc
xor
rcrb
nop
and
mov
mov
mov
ss
sti
push
dec
fdivrl
popf
pop
outsb
jl
popf
sbb
fsqrt
idivb
lcall
clc
js
insb
ss
lods
or
es
mov
xchg
sbb
mov
test
das
sub
cli
dec
push
push
js
divl
sub
jp
pop
adc
rcl
xchg
arpl
push
jge
sahf
and
loopne
in
movsb
xchg
sbb
js
cwtl
fdivs
loopne
mov
xchg
popa
mov
or
jge
pusha
add
inc
rcrb
adcb
jecxz
adc
push
imul
cs
jns
sub
cmp
push
pop
pop
fsubs
mov
adc
ljmp
sahf
add
pushf
mov
lcall
jl
cmp
or
popf
fidivrl
xlat
fwait
pop
movsl
sbb
and
adc
jbe
push
lds
cltd
xchg
jle
cmp
rcrl
xor
dec
pop
into
in
cld
or
fcomps
sbb
cmp
push
mov
cmpsl
sbb
inc
frndint
mov
cli
xchg
fnsave
mov
dec
pop
jns
jl
enter
xor
and
aad
push
push
gs
das
inc
sbb
test
pop
fldl
jp
lcall
test
xlat
and
dec
inc
inc
fstps
and
rcrb
sahf
js
dec
sbb
inc
sti
testl
cwtl
ficompl
repz
push
and
pop
xlat
xchg
in
push
fidivrs
sbbb
mov
gs
rol
add
pop
cltd
sti
mov
fistpl
push
out
ffree
sarb
push
ss
ljmp
adc
push
jns
pop
insl
jle
ds
xchg
pop
cli
mov
cltd
xchg
adc
inc
lcall
scas
adc
in
push
jle
inc
push
es
sbb
sahf
stc
fistpl
xor
jnp
iret
cltd
inc
pop
clc
mov
mov
adc
cmp
mov
adc
adc
inc
not
cli
pop
stos
in
xor
jbe
push
push
cmp
pop
flds
cmp
ret
pop
fstpt
pop
fidivrl
push
inc
mov
inc
push
inc
setnp
pop
mov
xchg
adc
cmp
les
pop
sub
int
mov
dec
add
int
xor
adc
mov
in
fnstcw
xchg
ja
sbb
js
lret
sub
out
mov
jbe
cmp
arpl
stos
pop
xchg
iret
and
mov
ds
mov
jge
sbb
adc
popa
sbb
pop
mov
fidivrl
push
movsb
rol
inc
jl
shll
adc
mov
sti
out
mov
push
cmp
mov
add
fistpl
push
mov
mov
lret
cmp
pop
lcall
xlat
pop
dec
in
jge
les
aaa
adc
sbb
mov
inc
sbb
pusha
or
fdivrl
sahf
and
fistpl
cmp
mov
adc
gs
xchg
sti
jbe,pt
or
push
jp
add
out
imul
jp
jl
or
call
sbb
into
pop
cmp
fwait
or
std
cmp
dec
insb
jbe
jl
mov
pop
int3
mov
and
cmp
insl
sar
add
sub
out
stc
fsubrp
mov
insb
jge
std
inc
pop
and
add
cmp
adc
add
dec
sahf
mov
cwtl
fwait
pop
jbe
pop
cltd
dec
inc
movsb
sbb
clc
mov
jecxz
xchg
mov
sbb
arpl
fidivrs
or
clc
cmp
jle
cli
pop
or
add
mov
lahf
lcall
pusha
and
test
cmp
cmpsb
idivl
adc
fs
psubusb
mov
mov
cltd
repnz
and
inc
call
fscale
fistl
or
loopne
adc
inc
test
pusha
push
mov
dec
in
in
or
les
ds
cmp
popf
mov
cmp
gs
bound
jo
mov
cli
icebp
js
mov
cwtl
fcomps
sbb
pop
movsb
mov
fcmovu
add
clc
rorb
inc
pop
scas
cmp
push
sbb
jl
fistpl
out
ds
and
sbb
inc
pop
mov
inc
jl
js
and
data16
xchg
lcall
xor
sets
sbb
adc
and
fs
cmp
movsb
movsl
sub
inc
aaa
sub
sub
out
fs
push
loopne
cmp
and
je
je
pop
call
inc
fcompl
mov
mov
sub
jae
cwtl
xor
sbb
xchg
fprem
scas
mov
sub
xor
sbb
jno
xor
sbb
pusha
cmp
push
ficoms
adc
sbb
pop
mov
ss
cmc
xchg
outsb
les
sbb
movsl
in
mov
push
pushf
sbb
jns
cli
loopne
pusha
rcrb
xchg
and
and
push
inc
pop
outsl
pop
pusha
mov
fnstsw
addr16
scas
scas
mov
daa
inc
aad
inc
inc
mov
in
or
lock
ljmp
pop
fs
xchg
dec
jnp
xchg
cmpsl
pop
or
cmpsb
fstpt
jns
test
sub
pushf
aaa
cmp
pop
fcompl
pop
mov
testl
repnz
sbb
jno
jb
jmp
outsl
popf
mov
sbb
cld
loop
xchg
test
xchg
push
andl
ds
popf
sahf
incl
push
push
sub
or
repz
pop
and
clc
cli
cwtl
jns
sbb
mov
pop
rdmsr
sbb
movsb
inc
cwtl
dec
mov
push
popf
xorb
js
xor
adc
bound
mov
fwait
and
movsb
jb
pop
and
xchg
sti
cld
cmp
mov
sub
or
and
leave
les
cmp
or
sbb
mov
clc
cld
sbb
pop
mov
mov
pop
out
rcrl
aaa
lcall
and
fidivrl
mov
not
popa
mov
mov
mov
je
imul
and
adc
sti
pushf
inc
loopne
clc
lock
mov
pop
sbb
dec
pop
mov
pop
xchg
jge
loop
sbb
push
pop
fnstsw
int3
xor
sti
sbb
fstpt
sbb
sar
std
in
loopne
dec
pop
cli
fs
js
out
jne
push
pusha
cli
fmuls
inc
mov
pop
sub
push
testb
aas
inc
cmp
jl
cwtl
outsl
fisttpl
mov
out
rcl
cli
mov
ljmp
fwait
mov
movsl
fs
jle
mov
std
stc
xchg
cwtl
or
mov
sahf
adc
negl
lcall
gs
out
mov
lret
or
mov
push
xchg
xor
sbbl
lods
sbb
fisttpll
aad
sbb
cmp
lods
sbb
inc
js
xchg
xchg
push
sbb
push
fcoms
aam
mov
add
sbbb
fcompl
std
inc
mov
mov
pop
jns
cld
cmp
sahf
sbb
pop
xchg
push
testb
mov
xor
and
adc
mov
mov
or
mov
add
mov
sbb
es
pop
pop
push
and
jns
js
scas
sub
std
pop
xchg
add
in
sti
cmpsl
push
adc
cwtl
inc
pop
pushf
adc
mov
into
sbb
cmp
idivb
adc
cmp
testb
inc
pop
lcall
cmc
mov
mov
push
pop
push
jg
mov
sbb
mov
movsb
stc
je
sbb
mov
add
js
mov
scas
adc
mov
or
mov
ja
jl
lret
cmp
sbbb
fsub
enter
fnstsw
shlb
andb
ds
adc
adc
je
insl
je
adc
into
loope
fcompl
sbb
cwtl
adc
sub
xor
sarb
pop
lea
ret
xchg
cmp
sbb
out
push
lcall
jge
sar
or
mov
and
and
fistpl
imul
xchg
cltd
ljmp
sahf
fwait
pop
jmp
fcmovnb
inc
in
test
add
xlat
aaa
mov
jp
jo
pushf
xchg
rorl
jns
dec
fs
test
dec
sbb
and
loopne
stos
push
dec
int
in
xor
and
or
sahf
lcall
mov
ds
pop
or
fcmovb
jo
mov
syscall
cld
loope
xlat
jg
lcall
or
fnstsw
ficomps
dec
das
sbb
mov
and
sub
and
pushf
sbb
cmp
pop
ds
and
fsubr
dec
scas
fmul
popf
push
dec
idivl
stos
mov
and
xchg
dec
imulb
mov
jle
cltd
cmp
stc
or
gs
rcrl
push
jle
outsb
xchg
out
inc
xlat
mov
pop
jmp
cltd
cmp
xchg
aam
jp
hlt
push
mov
mov
fistpl
sbb
sbb
outsb
push
inc
test
xchg
jl
inc
mov
pop
and
arpl
jb
movsl
ds
cmp
or
xchg
mov
mov
and
loop
inc
fistpl
sbb
cmp
jl
cli
fdivp
addr16
lcall
or
clc
adc
xchg
jo
mov
xlat
or
jl
sbb
sbb
fistl
sti
mov
loop
daa
sbb
pop
pop
ljmp
xlat
sbb
shll
pop
mov
std
fiaddl
popf
movsb
sbb
pop
mov
jecxz
iret
fdivrl
clc
inc
lret
or
fcoml
lock
cltd
cmpsl
das
xchg
cmc
sbb
cs
out
push
cld
adc
and
xor
jp
gs
aam
pusha
loopne
dec
cld
nop
and
cmp
popf
mov
cmp
call
popf
sbb
enter
sahf
xor
sbb
inc
cmpsb
inc
arpl
dec
xor
dec
mov
shll
pop
jecxz
cmp
cmp
pop
sbb
and
and
repz
cmp
roll
gs
mov
pop
or
stc
decl
add
dec
mov
xchg
aad
jo
cltd
popw
stc
jle
xor
out
xchg
scas
mov
mov
test
cmp
addr16
add
andb
not
cwtl
mov
mov
xchg
adc
pop
adc
stc
sbb
sbb
sub
sbb
sarl
mov
inc
mov
cmpsb
pop
pop
idivl
ds
and
enter
aas
inc
inc
std
inc
mov
mov
xchg
xchg
popf
je
adc
xchg
xlat
pop
cmp
sbb
lcall
ja
clc
cmpl
mov
dec
lahf
cltd
pusha
dec
or
pop
push
ds
cmp
cmp
arpl
fldl
xchg
jecxz
in
sti
pop
xchg
push
and
out
ds
and
hlt
fisubs
sbb
cmp
mov
cwtl
popf
mov
sub
bound
pop
stc
inc
xlat
lds
sti
fnsave
push
inc
out
incb
cld
cli
xchg
cmp
adc
js
inc
and
or
aas
push
push
fadd
inc
xor
testb
outsb
lsl
loopne
fcmovnb
ficomps
sti
xor
jno
mov
mov
dec
mov
lcall
sti
cmp
mov
adc
imul
flds
mov
cmp
push
cmp
cmp
pop
adc
jp
ud0
sarl
mov
out
mov
sbbb
add
pushf
cmp
insb
mov
imul
ds
cs
jl
mov
and
jno
pop
jle
inc
cmp
ficomps
pop
pop
fstpl
fistpl
outsl
popf
and
mov
pop
lcall
sub
adc
add
xor
rol
fnstsw
pop
sbb
xor
insl
in
js
mov
pop
cmc
xrelease
inc
add
dec
cmp
pusha
sbb
cmp
xchg
adc
or
adc
neg
lret
pop
in
xchg
emms
pop
cmp
mov
jge
inc
pop
mov
cmp
xlat
clc
xchg
idiv
xchg
int
out
inc
rcrl
ds
sbb
xlat
movsb
sarb
rolb
sbb
insb
add
mov
cld
sahf
xor
jns
and
mov
pop
push
mov
lcall
rclb
fnstcw
mov
jle
inc
fisubs
cli
xchg
pop
adc
mov
add
or
cmp
mov
push
xlat
push
lahf
sbb
inc
add
cmp
sbb
mov
movsl
jns
negl
mov
out
mov
cmpsb
std
fstpl
jns
sbb
mov
stos
sahf
in
push
and
fstps
inc
mov
fs
ljmp
inc
sbb
sti
mov
js
out
fstl
or
mov
ja
movsl
jns
negl
sti
xchg
cmp
sub
repnz
mov
test
out
sbb
sbb
cli
push
pusha
ffreep
push
fisttpll
pushf
inc
cmp
jle
pop
push
mov
xor
stc
inc
pop
lea
cmp
cli
mov
ss
fcomps
out
sbb
jp
mov
inc
pop
cld
cmpsl
test
shl
inc
insb
cmp
cli
dec
pop
out
and
jns
sbb
push
sahf
pop
popf
cli
bound
popa
bound
xchg
mov
fcmovnbe
pop
into
decb
mov
pop
jge
js
add
mov
negl
ss
xchg
jge
inc
adc
mov
out
jle
sti
cli
bound
jno
mov
andl
jp
xchg
les
mov
insb
stos
push
xchg
enter
adc
mov
ficompl
mov
add
jae
std
push
fnstcw
inc
mov
mov
xor
inc
hlt
or
and
ret
fs
out
out
xor
sbb
aam
inc
test
loopne
jo
cli
pop
js
pushf
mov
inc
popf
pop
ficoms
mov
bound
loope
sahf
add
sbb
mov
pop
pop
popf
xchg
xchg
arpl
sub
popa
xor
sbb
js
scas
ja
sahf
mov
pop
and
lods
mov
sbb
mov
mov
mov
sub
cmp
in
inc
enter
sti
cmpsb
repz
mov
les
xchg
test
arpl
mov
cmp
cmp
in
sub
imul
lret
arpl
loope
lods
pop
enter
mov
mov
xchg
in
shll
out
dec
pop
es
xlat
pushf
ret
addr16
pushl
jae
and
es
fldl
int3
addl
in
out
xchg
jle
popf
mov
xchg
sbb
pusha
jge
mov
rorl
into
jns
out
loop
dec
not
cli
fnstenv
movsb
pop
xchg
pop
add
cmpsl
fistpll
jle
stc
out
adc
mov
cmp
fcompl
cli
jle
jecxz
cld
sbb
mov
mov
pop
mov
add
xchg
jmp
aas
cs
repnz
cmp
cmp
fcoms
xchg
mov
cwtl
adc
fdivrl
idivl
dec
cli
mov
pop
repz
rcr
arpl
jl
dec
cmp
mov
clc
dec
mov
xor
cmp
pop
mov
adc
clc
cmp
inc
popf
cmpb
xchg
fsubrl
adc
pop
shll
dec
aad
pop
sti
fcmovb
jbe
stc
shll
mov
cmp
sarl
addr16
popa
clc
enter
or
imulb
and
cli
les
arpl
int3
int
mov
std
xchg
sbb
add
cli
push
jmp
sbb
sti
out
mov
and
loopne
mov
loope
mov
cmp
mov
or
mov
ds
mov
fstpl
inc
cld
ss
pushf
lret
push
lret
pop
imul
cmp
push
mov
dec
mov
mov
mov
xor
xchg
pop
jbe
idiv
std
jns
cltd
and
add
mov
sbb
inc
cld
loopne
jl
cmp
jg
xor
icebp
sbb
in
les
pop
fstpl
or
add
lea
test
add
xor
lahf
mov
jns
fcoml
mov
mov
dec
mov
test
rorb
pop
frstor
adc
sbb
mov
and
jbe
mov
popa
fidivrs
lds
data16
daa
cmc
sbb
jl
sbb
jns
sbb
bnd
into
and
out
rcrl
pop
cmp
jecxz
ljmp
jle
sub
sbb
mov
mov
add
mov
mov
jle
mov
xor
pop
fucom
cs
cmp
into
pop
xlat
pop
popf
adc
aam
std
out
cwtl
mov
sbb
mov
movsb
mov
jl
pop
sbb
popf
and
fdivrs
sbb
in
inc
jns
in
sbb
xor
mov
pushf
mov
pop
out
clc
and
jmp
test
cmp
icebp
inc
xchg
mov
dec
mov
push
jl
and
pop
sub
pusha
pop
test
lret
cmc
mov
jno
pop
mov
arpl
fmull
add
cwtl
fcmovnu
repnz
mov
sbb
add
pop
fisubl
xchg
pop
push
std
mov
gs
sbb
xlat
adc
mov
cli
or
xchg
add
mov
dec
ds
idiv
or
sti
adc
outsl
fimull
in
pop
add
push
idivb
cli
movsb
pop
cmc
pushf
cmp
xor
popf
jp
jle
rorl
and
ret
jge
mov
popf
cmp
pusha
pushf
or
xlat
adc
testl
fisttpll
xchg
decb
jmp
fdivp
std
push
cmpsl
ds
add
push
xor
popa
mov
add
mov
mov
fwait
pop
add
inc
fildl
mov
inc
pop
mov
imul
andb
mov
mov
jle
jmp
ljmp
mov
jge
fdivrp
pop
ljmp
sbbb
cwtl
add
lea
push
cmp
xchg
rcl
xchg
add
push
lcall
cmp
xchg
and
ss
test
mov
adcl
cmpl
mov
add
push
jecxz
loopne
imul
popfw
mov
jl
mov
sbb
sub
cld
sbb
fstl
int3
fnstcw
or
jp
dec
fsubrp
out
fwait
cli
mov
outsl
pop
sbb
inc
loop
mov
add
test
ds
shlb
movsl
inc
push
or
psubsw
add
fwait
shrb
js
xlat
fstps
cmp
popf
out
mov
mov
cmp
push
xchg
loopne
sbb
into
fbld
sbb
cwtl
ror
cmp
movsb
mov
les
rorb
in
shrl
in
or
mov
sub
icebp
pop
xor
sti
shll
cmp
ret
mov
es
dec
pop
loopne
loop
mov
xchg
lcall
jl
push
sbb
cltd
or
dec
sbb
and
cli
or
and
mov
mov
fcmovnbe
shrl
aas
sbb
pop
loope
inc
jge
dec
out
cltd
jle
jbe
shlb
ret
out
clc
mov
cmp
insl
stc
sbb
jecxz
sarb
loopne
xor
and
xor
cmp
pop
mov
cli
or
adc
negl
std
xor
xchg
imul
js
cltd
rcrl
add
lods
mov
sahf
cwtl
pop
movsb
js
mov
push
push
pop
rcrl
add
mov
cmp
fstps
into
test
cmp
mov
push
mov
repnz
cmpb
jmp
enter
add
add
divl
repnz
inc
pop
mull
cmp
xor
arpl
sbb
fnstsw
int3
push
ds
lcall
mov
mov
xchg
xlat
ja
pop
inc
xchg
loopne
sbb
xlat
js
adc
testl
add
ss
cmp
fidivrs
je
sbb
pop
cmp
xchg
loopne
data16
cmp
addb
inc
jecxz
or
fcompl
sti
std
sbb
pop
in
cmpb
mov
push
add
cmp
and
cmc
or
data16
cmp
jle
push
jbe
std
sbb
jmp
rcrl
add
jbe
and
cs
sbb
xchg
inc
lcall
mov
inc
cwtl
adcl
jb
iret
cmp
pushf
mov
mov
in
fcmovne
cmp
dec
movsb
mov
lahf
shll
inc
cmp
cltd
mov
mov
sahf
cmpb
lret
faddl
and
bound
mov
ljmp
pusha
movsl
cwtl
popf
cltd
mov
mov
lret
cmp
ret
loopne
in
xor
lcall
sbb
xchg
add
sbb
xor
adcb
shlb
mov
cmc
sbb
das
inc
pop
loopne
sub
stc
push
das
push
cmpl
xchg
ljmp
daa
scas
mov
add
add
xchg
sahf
jbe
cltd
lock
cli
push
xchg
movsl
sub
add
mov
cmp
mov
imul
xchg
enter
pop
outsb
aas
arpl
xor
jns
sti
mov
cmp
or
push
pushf
cli
cmp
sbb
or
push
pop
inc
rolb
sbb
ljmp
push
ficomps
sbb
push
and
and
dec
cmpsb
pop
pop
sbb
test
add
int3
pop
pop
and
les
cmp
xchg
mov
mov
into
cmp
sti
sbb
ljmp
js
cmp
cmp
mov
pushf
sbb
das
popa
mov
cmp
mov
test
mov
cli
jbe
loope
mov
sbb
cmp
popf
dec
lds
cmp
mov
cmc
ss
push
jle,pt
cld
cmp
jb
in
xchg
mov
lahf
mov
fdivrs
cmp
aaa
mov
and
and
idiv
jne
out
mov
daa
clc
je
xchg
filds
popf
and
push
cmp
pop
inc
pop
inc
mov
mov
into
inc
lahf
gs
cld
sar
das
loopne
fnstcw
push
mov
push
xchg
fstp
xchg
les
push
pop
inc
sub
out
sarb
pop
fiaddl
pop
les
jae
push
mov
sbb
scas
sbb
push
mov
bound
or
popf
cmpsb
aas
pop
pop
aam
sbb
js
stos
inc
iret
sahf
jmp
adc
out
popf
mov
incl
mov
fldz
pop
std
fsubl
mov
cld
pushf
mov
and
push
loopne
fwait
jl
mov
sti
pusha
sbb
pop
jle
loopne
fcomps
cltd
jae
mov
push
sbb
cmpsl
cmp
push
xor
pop
mov
fdivrp
cmp
dec
cltd
cmp
or
lods
adc
rcrb
inc
and
fdivr
rcrl
cmp
fstpl
cwtl
push
jg
cltd
pushf
xchg
push
fwait
and
decb
aad
aas
jle
sar
std
sub
pop
mov
push
aam
push
fstps
bound
in
cmp
bound
scas
inc
fxch
clc
daa
gs
and
imul
clc
lods
cltd
jns
cmp
mov
ss
cltd
sbb
cmc
loop
xchg
inc
inc
divl
mov
cmp
clc
idivl
pop
jle
gs
push
in
test
adc
fucomi
push
mov
imul
fidivrs
cmc
mov
or
fdivr
jge
mov
cld
js
addr16
cmpsl
adc
adc
and
sub
jo
pop
push
cltd
inc
out
inc
incl
into
mov
adc
sahf
test
mov
jmp
je
inc
cmp
pushf
mov
cld
cwtl
mov
or
sbb
je
push
popf
xor
std
add
xor
clc
sbb
and
je
cmp
sbb
popa
cmp
jns
sbb
pop
pop
loope
xchg
test
insl
mov
mov
incb
loop
fisubrs
pushf
sbb
cmp
adc
cmpl
pop
cltd
xchg
stc
push
clc
std
daa
lock
cmp
xchg
jecxz
cltd
mov
sub
sub
mov
js
cmp
lods
jns
add
out
or
sahf
jne
lahf
jp
inc
mov
fisttpl
and
sbb
xchg
popf
xchg
dec
xchg
movsb
cmp
cld
jp
cmp
sbb
and
pusha
ss
fcmovu
sub
cs
mov
mov
enter
popf
rcr
scas
gs
movsl
out
or
adc
pop
mov
jns
jbe
test
and
pushf
jle
mov
cmp
inc
cli
fcmove
jmp
out
push
pop
fdivrl
mov
and
xor
push
fstpl
jns
clc
push
xchg
lcall
pop
cmpsl
pop
cld
mov
notb
cmp
adc
adc
sbb
aam
mov
jo
movsl
and
fistpll
mov
lcall
fcmovnu
insb
sahf
test
pop
incb
sbb
mov
cmp
iret
inc
and
pushf
outsl
push
jl
add
jle
and
rcl
fucom
outsb
xchg
mov
or
mov
arpl
out
movsl
jp
xlat
pop
rcll
lods
popa
std
mov
mov
sahf
cmp
sbb
call
testl
jae
roll
mov
imul
popa
sahf
outsl
mov
pop
jg
lcall
fbld
pushl
cli
inc
ljmp
cmp
lcall
icebp
and
sbb
adc
fs
in
add
dec
jns
or
inc
fistpl
cwtl
push
add
dec
mov
xchg
jle
adcb
pop
mov
cwtl
loope
add
into
rorl
roll
loopne
std
sbb
mov
mov
jg
inc
pop
repnz
mov
inc
loop
cmpsl
enter
jae
xchg
sbb
imul
sbb
hlt
inc
or
sbb
pop
jo
mov
xor
imul
pop
mov
add
rcrl
xchg
mov
loop
jp
xchg
stos
pushf
stc
xor
outsb
ds
jns
pop
fidivs
or
and
mov
jle
jmp
cli
data16
adc
fsubp
cli
insl
pop
add
sbb
adc
add
fidivl
cmp
mov
rolb
fisttpll
lds
ss
inc
daa
lds
cmpsb
inc
call
cmp
inc
push
jno
pushf
pop
out
cmp
fstp
lock
or
jg
out
jl
cmpsb
mov
cs
loopne
add
pushf
xchg
lahf
mov
sbb
xor
loopne
ljmp
pusha
mov
inc
fisubl
addl
pop
and
movhps
popf
fdivrs
daa
push
mov
xlat
popf
adc
cwtl
inc
pop
fstpt
scas
cmpsb
pop
mov
lret
sbb
adc
jge
dec
lahf
cld
fwait
es
sbb
cli
inc
addr16
fiadds
adc
and
and
push
vdivpd
sbb
addl
jl
orl
inc
mov
inc
pop
cli
sbb
add
jle
mulb
jns
xchg
lea
stc
pop
xor
sti
add
add
test
cmp
clc
lea
bound
aas
movl
jge
mov
ficoms
jae
fistpl
fnstcw
pop
cs
mov
jl
pusha
mov
mov
sbb
cmp
call
jecxz
or
sbb
add
sbb
sbb
stc
mov
inc
inc
mov
fistpl
sbb
fld
sahf
cltd
adc
push
and
ficompl
lcall
adc
arpl
ds
pop
clc
push
jl
std
pop
jge
lcall
xchg
sarl
pop
sbb
fisubrs
fdiv
cmp
mov
push
sti
pop
inc
mov
ss
jmp
pushf
sbb
pop
mov
and
jge
cmp
clc
inc
and
mov
mov
jne
div
sarb
fcoms
cmpl
vpsubb
bound
loopne
arpl
fdivrs
ficomps
sbb
xchg
cmp
add
lcall
stc
cld
cltd
cmc
pop
ds
call
sahf
cwtl
jns
mov
xlat
orps
adc
push
cmpb
fmulp
cmp
lcall
fiadds
add
inc
xor
inc
sub
data16
jns
push
sub
in
sbb
jns
shl
xlat
xchg
add
nop
cmp
mov
jle
jae
js
bound
arpl
and
pop
inc
cltd
sbb
cwtl
mov
out
pop
cwtl
mov
mov
jmp
loopne
xor
jl
lret
pop
jns
inc
clc
mov
or
cmp
adc
xchg
aad
jb
and
push
and
and
enter
fcomps
sbb
cltd
inc
xor
pop
cwtl
sbb
cwtl
xchg
pusha
ja
cmp
lea
enter
pop
add
popa
fsubl
cld
call
pusha
mov
fstps
mov
or
cmp
das
pop
xchg
popf
inc
jge
cwtl
negl
add
stc
or
pop
xchg
pop
sbb
dec
ljmp
mov
int3
sub
jmp
outsb
lret
mov
stc
ficomps
into
pop
fidivrs
dec
jns
or
pop
cmp
push
xchg
sbb
clc
adc
shlb
cli
mov
mov
adc
xor
notb
call
adc
popf
pop
adc
jbe
mov
cs
fidivrl
add
jns
cli
lret
sbb
cmp
aas
fsubs
add
mov
popf
pusha
lods
mov
mov
xchg
cmpsl
clc
or
adc
cld
hlt
or
or
les
adc
notl
dec
sbb
cld
mov
leave
inc
stc
arpl
addb
jge
sarb
or
and
xor
aaa
mov
add
sub
cld
sarl
inc
sbb
daa
lods
outsb
mov
clc
stc
xchg
and
mov
lock
mov
mov
sbb
xlat
gs
mov
cmp
mov
jb
or
mov
and
rcrb
mov
aam
mov
std
test
popf
dec
cmpsb
ds
rcll
lcall
lcall
into
int
jo
cld
outsb
aaa
adc
push
jle
fdivrp
sbbb
sub
sbb
xor
rorb
ljmp
iret
cmp
rcrl
sbb
cmp
and
pop
pop
jecxz
ficoms
sub
xlat
sub
cwtl
mov
sbb
mov
cmp
adc
cmp
sbbl
mov
int3
pop
inc
fcompl
cwtl
pop
cmpsl
and
pop
pop
pusha
mov
inc
sahf
fidivrs
cmp
js
adc
fmulp
aaa
push
xor
in
cmp
aas
cmpb
jbe
adc
and
les
inc
cmpsb
push
sbb
repnz
imul
xchg
fcompl
js
fnstsw
sbb
sbb
je
push
push
add
sub
cmp
arpl
inc
dec
andb
fisubl
mov
pop
inc
sbb
cld
dec
cwtl
mov
addr16
scas
fwait
notl
dec
add
dec
xchg
out
test
pop
or
xlat
mov
inc
testl
sbb
and
cld
push
xchg
and
mov
and
pop
popf
jle
shll
sbbb
icebp
and
or
jmp
clc
add
fistpl
ror
mov
adc
jl
and
jle
push
loopne
mov
mov
fnstsw
adc
xor
out
sub
nop
popa
arpl
adc
pop
mov
pop
pop
pop
inc
cmp
dec
pop
ficompl
fwait
jl
mov
xlat
clc
jmp
cld
add
sbb
mov
cmp
and
leave
sqrtps
rcrb
sbb
pop
inc
mov
mov
lcall
cmp
push
jns
and
idiv
sbb
gs
mov
incb
adc
movsl
popf
fnstcw
jl
loopne
lds
sahf
cli
ss
ds
push
sub
ficompl
fcompl
cmp
cmp
push
xor
sahf
movsl
popf
jp
fcos
or
mov
or
sbb
mov
and
add
pusha
pop
jnp
mov
inc
pop
sbb
out
sar
pop
fs
inc
popf
add
pop
push
sbb
mov
outsb
jbe
add
rcl
inc
sbb
mov
inc
add
pop
lods
and
mov
es
bound
loopne
in
cmp
adc
and
xor
push
popf
xor
add
rclb
or
xor
jmp
cmp
xlat
loopne
pop
xchg
clc
sub
testb
dec
fidivrs
out
mov
ja
pop
jge
pusha
mov
adc
mov
cld
sbb
push
jbe
sub
sti
mov
lods
xchg
lcall
cmp
out
cltd
inc
push
stos
xor
adc
lcall
ds
dec
mov
cld
fsubs
subl
mov
ret
xlat
jp
or
mov
divl
fstpt
cmc
mov
lcall
cmp
enter
adc
ficoml
pusha
cmp
sbb
fwait
repnz
and
daa
mov
pop
add
fdivrp
mov
and
f2xm1
dec
sbb
pushf
jp
sbb
cmpsb
fcompl
pop
mov
popf
cmp
sbb
xchg
mov
sbb
mov
cmp
lcall
cmp
and
cmp
cld
mov
mov
cwtl
mov
inc
nop
popf
cmp
add
popf
mov
xchg
sti
pop
cmp
sbb
imul
xchg
inc
inc
push
pop
or
dec
adcb
and
mov
pop
inc
pushf
std
fdivrl
fmul
lds
adcl
or
pop
xchg
stc
ja
inc
jl
inc
cwtl
and
xchg
sbb
sbbl
filds
inc
cltd
sbb
lret
clc
pop
sar
mull
pop
std
jb
dec
stos
or
int
ja
cmpsl
test
mov
jl,pn
call
sbb
inc
pushf
fimuls
mov
pop
sbb
int3
jmp
push
pop
and
popf
mov
or
fcompl
push
sbb
xchg
inc
sbb
lret
and
leave
std
fwait
pop
div
aas
fcompl
jp
push
jge
push
into
pop
sbb
ds
sti
sbb
daa
inc
xor
sahf
fcmovnu
cs
jge
stc
mov
adc
pop
std
fdivr
cli
mov
outsb
xchg
adc
push
fsubs
mov
dec
mov
negl
xchg
bound
sbb
lock
sbb
pop
mov
mov
fadd
fcomip
mov
push
cmpl
in
add
push
out
cmp
sbb
pusha
inc
sar
cli
loop
je
movsl
aaa
lahf
lret
nop
out
jns
xchg
mov
mov
inc
xor
into
jno
adc
cltd
pusha
adc
xor
fstps
cmp
shrb
out
movsl
pop
and
fisubs
std
mov
pop
call
and
mov
cmp
push
mov
mov
fidivrs
and
xor
std
fadd
mov
mov
xchg
cmp
rcr
sbb
mov
out
fdivr
sbb
pop
into
jl
iret
movsl
dec
jns
int
shlb
or
fstpl
adc
jmp
mov
and
or
fistps
mov
popf
jbe
cmpb
rcrb
sbb
push
fiaddl
js
pop
cld
push
dec
mov
xor
bound
pop
add
adc
adc
mov
fnstcw
cmp
pop
add
add
mov
pop
sbb
dec
sub
mov
cwtl
pushl
mov
rcl
jg
pop
mov
jae
rcl
push
mov
jns
sbb
mov
test
pop
cmp
scas
repz
inc
or
add
cltd
sbb
pop
out
mov
fnstenv
sbb
mov
jl
inc
cli
add
lea
pop
push
cwtl
lds
popa
aaa
xchg
xor
ss
sub
cmc
sbb
ljmp
std
or
arpl
add
loopne
scas
ljmp
aaa
shl
sbb
inc
or
push
out
sbb
hlt
shrl
aam
cmp
sbb
pop
ds
cmc
mov
cwtl
inc
cs
andb
jg
and
jg
lcall
sub
ret
add
cmpb
shll
fcmovnbe
cltd
cmp
sbb
movsl
push
fidivrs
stc
sbb
rcrb
sbb
data16
rcrl
sbb
jp
xchg
sahf
sbb
pop
or
fcomps
cmp
and
incb
fdivrp
les
xchg
fstpt
shll
jge
add
scas
fld
cmp
lds
sahf
call
bound
mov
sti
cwtl
js
std
adc
adc
add
ss
cwtl
fstpl
fistps
sti
cli
ds
xchg
add
add
jbe
ds
sbb
cli
adc
in
js
and
lock
dec
fst
cmp
ss
ds
clc
pop
negl
sahf
and
xor
movd
setns
cmp
xchg
rcrb
addb
divl
pop
cmp
pop
into
lods
jp
outsl
js
add
push
pop
lcall
xchg
pushf
jbe
sbb
push
pop
add
in
std
add
inc
mov
adc
leave
pop
cmp
fdivr
sti
fprem
adc
mov
lret
idivb
add
mov
mov
fadds
cmp
sbb
pop
xchg
sbb
and
clc
inc
cmp
push
and
pop
mulb
js
jg
stc
cmp
mov
fidivrs
push
cmp
popf
pop
inc
sahf
inc
cmpsb
push
mov
dec
inc
loopne
mov
jge
pop
jns
push
jl
movl
addr16
and
bound
and
jecxz
out
jns
cli
mov
or
popa
rcrb
pop
adc
sbb
push
fcoms
mov
and
pusha
stc
inc
cmpsl
les
and
scas
cwtl
mov
je
aam
pushf
sahf
adc
cmp
ss
mov
mov
idiv
rcr
adc
pop
mov
and
gs
sbbl
scas
fisubrs
fwait
mov
mov
and
jb
or
fsubrs
lock
lods
iret
mov
cli
adc
or
sbb
sbb
adc
or
adc
pop
adc
clc
adc
mov
mov
stos
notb
fwait
adcl
pop
pop
xchg
pusha
jge
pushf
std
rcrl
ficomps
fbld
pop
les
ss
and
or
and
adc
fidivrl
ficoms
mov
or
rolb
lcall
push
mov
scas
sbb
mov
inc
mov
lcall
cmp
aaa
add
jbe
cs
pop
rcrb
sbbb
in
cwtl
insl
add
sbb
adc
arpl
std
xchg
std
outsb
sbbl
and
lods
in
inc
fs
js
addb
pushf
fsubs
xor
repnz
cltd
inc
mov
xchg
movsl
mov
loopne
cld
stos
into
push
pusha
cld
and
or
sahf
addr16
into
or
call
stc
cld
cmpsb
pushf
pop
inc
das
cs
call
cmp
xor
or
jns
push
sbb
xchg
mov
xlat
stc
js
mov
push
cld
dec
add
and
arpl
cli
jnp
jecxz
sbb
les
xchg
sub
xor
lods
cmp
pop
fcompl
vdivps
inc
scas
pop
scas
mulb
cmp
addb
sahf
mov
jg
jle
cmp
shlb
lds
push
lock
inc
adc
out
mov
pop
psubb
cmp
mov
xor
push
js
hlt
sbb
movsl
inc
inc
stc
pop
cmp
test
popa
pop
adc
cmpb
lods
pop
sbb
into
jae
cwtl
stc
into
out
mov
call
cmp
in
ds
or
sbb
dec
and
mov
xlat
pop
inc
pop
lods
mov
dec
out
sbb
mov
ss
shrb
mov
xchg
fs
sbb
fcompl
mov
cmp
mov
lret
stc
mov
sbb
cs
out
jmp
pop
sub
cmp
nop
pop
push
incl
ficompl
ficomps
adc
clc
jp
fcompl
stc
aaa
ljmp
pop
xor
lods
pop
out
mov
das
cmpsb
xchg
push
mov
or
cmpb
inc
mov
and
cmpsb
fstpl
out
and
sbb
sbb
pop
fimuls
push
test
add
aaa
jmp
sbb
pop
sbb
cmp
pop
subl
mov
js
inc
out
xlat
loopne
lods
add
dec
xchg
mov
sbb
fidivrl
pushf
pop
cmpsl
adc
xchg
xorb
cwtl
in
push
jmp
jl
and
sti
sahf
das
arpl
xchg
cwtl
jo
pop
addl
call
push
arpl
jle
inc
flds
jae
sbb
add
mov
stc
ss
pushf
add
aad
inc
orb
mov
lret
inc
adcb
xlat
je
stos
popa
ds
and
inc
cmp
sbb
les
inc
pop
fcomps
sahf
sbb
packssdw
push
pusha
sbb
fcmovu
cmpsl
push
add
movsb
jle
add
pusha
ficompl
popf
sbb
pop
sbb
mov
sbb
pop
sbb
scas
shr
movsb
sti
jl
push
inc
stc
neg
rorl
cli
sarl
push
inc
inc
out
inc
mov
roll
aad
cltd
xlat
loope
pop
mov
ds
sti
jns
popf
adc
fdivrl
jle
jecxz
push
fiaddl
adc
xor
pop
cmp
sahf
pushf
lds
fstpl
popf
loopne
mov
andb
fcoml
mov
add
jl
cmpsb
gs
idivb
std
sahf
lret
jmp
lret
out
leave
popf
fsincos
cmp
sub
in
in
pop
mov
jp
aad
mov
mov
pushf
jmp
dec
pop
loopne
pusha
fidivl
shlb
sub
js
loope
loope
cltd
sbb
sbb
mov
das
add
loop
sbb
aad
movntq
cmp
out
fnstsw
ss
frstor
cmp
in
fsubr
sub
clc
pop
fists
inc
stc
mov
jge
sbb
lock
mov
and
adc
jae
fsubrs
fidivrl
js
fwait
cmp
out
cmp
fcomi
cmc
sarw
out
cmp
popf
xlat
adc
call
sbb
pop
jmp
jns
stc
daa
jbe
sbb
mov
sar
cmpsl
leave
aaa
adc
stc
sbb
mov
ret
push
add
push
pop
and
popf
int3
mov
movsb
push
mov
cmp
dec
out
inc
xchg
jbe
or
push
outsb
xlat
sub
jp
cwtl
mov
mov
pop
ds
fildl
jecxz
decb
cld
fists
enter
xchg
sbb
mov
jbe
or
add
clc
fistpl
mov
out
cltd
popf
fidivs
mov
dec
sbb
das
cmp
mov
psubsw
stc
and
js
aad
jns
mov
mov
dec
mov
testl
cli
dec
push
test
and
shll
and
and
sti
push
mov
cwtl
stc
pop
jp
xchg
cmp
pop
lret
mov
mov
jne
cmp
fadd
cwtl
sub
sub
popa
cmp
xor
sbb
sbb
cmp
mov
fstpl
sahf
bound
mov
or
and
pop
mov
pushf
lea
fldl
jae
xor
inc
not
into
arpl
cmp
jmp
aam
lds
add
push
push
cwtl
lcall
clc
push
cmp
adc
fs
cmp
ffree
loop
iret
pop
mov
jle
pop
or
fistl
imul
xchg
aas
sub
repnz
enter
cmp
std
xor
adc
fstp
or
cwtl
inc
pop
cli
push
stos
adc
add
adc
test
xchg
inc
mov
mov
cmc
jnp
testl
addb
mov
mov
dec
add
mov
iret
fstpl
lahf
fnstcw
jp
shll
pop
ficomps
sti
jns
aas
pusha
cmp
xchg
cli
pop
scas
mov
jbe
jecxz
xlat
mov
mov
sub
inc
inc
clc
pop
shll
pop
popa
les
sbb
pop
fwait
stc
ret
hlt
cltd
sbb
rol
sti
sbbb
fs
cmp
inc
mov
cli
dec
sbb
ds
mov
mov
mulps
pushl
cmp
scas
roll
ds
cmp
cmp
sti
divl
sti
mov
int3
sbb
mov
xor
into
loope
xchg
pop
cmp
pop
dec
lock
jle
leave
pop
ss
mov
frstor
sub
sbb
adc
adc
mov
xchg
fimuls
mov
pop
add
mov
cli
or
sarb
adc
fimull
inc
cmp
movsb
xlat
enter
add
jg
mov
push
jl
cmp
xor
mov
clc
cmovs
mov
sbb
cmp
mov
mov
inc
sahf
fstpt
popf
sbb
jne
ss
nop
adc
loope
lcall
sbb
inc
pop
or
and
inc
jge
fnstcw
leave
cmp
sub
cmp
cmp
pop
inc
pop
fisttpl
cmp
fucom
fstps
add
lret
sti
sarb
inc
push
sbb
xlat
or
cltd
mov
xchg
and
nop
jne
cltd
xor
cltd
insw
pop
pop
adc
sbb
sbb
dec
cmpsl
into
dec
shrb
sub
inc
jl
and
inc
js
or
mov
fisubs
inc
cmp
std
pop
cmp
stos
xlat
sbb
jo
pushf
nop
inc
fisubs
sbb
jae
pop
pop
cld
test
jp
jo
lods
ds
mov
mov
sahf
dec
inc
inc
pusha
cmp
fnstcw
out
mov
xlat
jl
pop
daa
popf
push
pop
lds
lea
ja
jge
scas
jge
inc
cmp
jp,pn
cli
pop
idiv
dec
mov
je
loopne
push
lahf
fs
push
fs
pop
mov
iret
out
add
scas
sbb
enter
sarb
sbbb
mov
pop
ljmp
cli
iret
pop
xor
and
push
jg
inc
sbb
mov
fcomps
add
clc
cld
add
push
js
sbb
mov
add
out
pop
cmp
mov
insl
inc
pusha
cld
push
std
inc
or
mov
fidivrl
sbb
mov
inc
inc
popf
fstpt
lcall
mov
jns
cmp
or
dec
xchg
mov
divl
mov
sbb
rol
clc
sub
ds
cli
bndstx
js
rclb
xor
dec
xor
lock
stos
pop
mov
mov
fsubl
cwtl
jle
rorl
mov
idivl
sahf
inc
xlat
fcomi
xchg
mov
adc
fs
fdivrs
popa
addr16
dec
cmp
xchg
and
mov
cwtl
fmulp
daa
testb
push
in
inc
add
jo
mov
shlb
cs
pop
and
icebp
popf
pushf
in
imul
xlat
daa
jmp
mov
adc
cmp
pop
pop
sbb
std
dec
rolb
and
xlat
pusha
xchg
lock
ja
adc
pop
cmp
sbb
pop
adc
rcrb
fdivrl
adc
sbb
adc
cmp
repz
stc
or
lahf
fistl
mov
mov
out
cld
loopne
js
and
pop
and
cwtl
aas
mov
pusha
inc
pop
out
cld
punpcklwd
decb
or
fnstsw
sbb
cltd
sahf
sti
repnz
xchg
cli
cli
pop
add
dec
js
sub
pushf
imul
cmp
and
or
push
popf
mov
sbb
std
xchg
push
rolb
pushf
les
fldenv
xchg
cltd
cmp
and
pop
int3
jp
lcall
fistpl
sbb
movsb
push
xor
adc
push
xor
cwtl
cld
mov
xor
dec
mov
inc
in
sbb
fistps
frstor
push
cmp
fistpl
into
push
pushf
pop
add
enter
jmp
xchg
fdivrp
mov
mov
sub
leave
mov
cld
jno
pop
cmp
xor
cmp
cmp
div
xchg
imul
lahf
mov
mov
sbb
notl
mov
std
xor
mov
orl
jns
push
sbb
addr16
out
cmp
cltd
dec
push
mov
fwait
and
pop
mov
gs
sbb
and
jns
bound
in
popf
or
dec
popf
cmp
sbb
xchg
fdivrl
pop
sar
sbbb
test
and
std
mov
sti
adc
adc
das
pcmpgtd
clc
pop
ficoms
dec
arpl
fdivrs
inc
rolb
loope
mov
cmpb
xchg
jge
dec
rcrl
adc
jle
bound
push
jnp
vmovntps
cwtl
rcrl
mov
mov
mov
fcmovu
jns
pushf
dec
push
cmp
add
push
adc
add
stc
pusha
jmp
loopne
pushf
leave
fisubrs
mov
rcr
inc
mov
scas
cmp
jp
out
xchg
push
std
mov
mov
cs
cmp
fcmovnu
cwtl
sbb
and
cmp
rolb
sbb
pusha
es
mov
lcall
push
jle
fsub
cmp
pop
add
in
cwtl
ljmp
sahf
outsl
cmc
movsb
xor
cmp
pop
add
add
das
aam
rcrb
inc
cmp
sbb
lcall
insl
popf
test
cmp
pop
push
push
mov
js
gs
pop
cltd
popf
fmulp
mov
in
cli
pop
pop
pop
incl
cmp
aas
imul
inc
dec
loopne
out
sbb
gs
arpl
cmpsb
cld
mov
push
sbb
bound
int
ror
ds
out
popf
pop
sbb
sti
popf
pop
inc
lahf
mov
pop
pop
push
idiv
cmp
stc
out
and
pushf
cmp
mov
out
xchg
push
sbb
xchg
pop
lods
lcall
xchg
out
hlt
mov
sbb
cwtl
inc
test
mov
dec
add
decl
mov
dec
out
add
xchg
sbb
lods
loop
hlt
jl
mov
loopne
sbb
repz
imul
cltd
jp
in
aas
ds
fildl
sarb
inc
ljmp
lds
inc
fsubs
add
cli
pop
cmp
out
stc
fcmovbe
mov
sbb
cmp
clc
ja
inc
mov
adc
clc
pop
dec
stc
adc
test
inc
popf
pop
mov
mov
mov
clc
pop
rcr
sbb
inc
rcrb
mov
loop
jle
stc
sbb
jo
call
pop
pop
fdivrs
ljmp
fdivrs
sbb
sbb
lods
sbb
xor
mov
loopne
fistl
dec
cmpsb
mov
pop
sbb
sbb
mov
sbb
sti
inc
jae
and
cmp
push
pop
mov
repnz
fstps
out
cmpb
and
adc
xor
js
ds
cli
mov
lcall
les
rcrb
jge
mov
pop
push
cs
sti
sti
xchg
mov
sub
sbb
sub
aam
fidivrs
adc
adc
xchg
mov
mov
js
std
pop
pop
addb
push
ja
sarl
mov
ljmp
pop
pop
mov
setp
or
sbb
mov
mov
cld
or
cmp
std
pop
xchg
lcall
js
xchg
jns
lret
cmc
test
movsl
or
mov
pop
inc
js
std
jl
in
das
in
or
xor
and
adc
frndint
fwait
add
sbb
pop
xchg
cli
js
fdivrp
out
mov
mov
inc
pop
out
aaa
mov
sbb
dec
lods
psubd
pop
jge
imulb
mov
mov
pop
dec
cltd
push
fistl
xor
insb
mov
xchg
sub
sbbl
adc
clc
fcmovne
pop
lock
cmp
and
aad
pop
mov
push
setle
pusha
ja
je
lea
clc
imul
pusha
pop
lret
and
inc
mov
xchg
arpl
aas
xchg
pushf
jmp
fs
in
clc
mov
rcr
mov
cld
insl
mov
jl
inc
pop
in
ficoml
bound
repnz
and
fmull
adc
mov
inc
sahf
aad
mov
push
sbb
lcall
cltd
or
rclb
movsb
cwtl
fdivrs
mov
pop
xchg
pshufw
cmpb
out
push
mov
jle
rolb
fs
and
mov
and
xor
int
xor
jbe
loopne
dec
pusha
jle
cmp
lock
adc
adc
fnstcw
xlat
pop
pushf
cmp
cltd
fsubrl
pop
fmulp
inc
movsbl
mov
out
and
mov
mov
jne
pop
fsubl
jge
push
adcb
cmp
js
pop
mov
cmp
inc
int3
popa
stc
int3
jg
sbbl
das
iret
and
sbbb
add
lods
js
aas
ljmp
pop
loop
ds
dec
ss
lea
jns
mov
lcall
xchg
sub
fdivrp
sbb
cwtl
xlat
mov
push
sbb
sbb
xchg
add
dec
out
mov
pop
xchg
sub
or
mov
cwtl
daa
and
jl
pop
add
test
lret
xor
xchg
lds
and
push
mov
pop
in
xor
push
jae
sbb
neg
jg
lcall
jns
cmpsb
jle
or
popa
cltd
cli
mov
cmp
scas
sti
pop
or
rcrb
fistpl
sbb
aam
js
fstpl
jl
cltd
sbb
shlb
enter
cltd
cmpb
test
ds
js
xchg
dec
adc
or
push
arpl
xor
mov
fnsave
js
int
mov
jg
xlat
pop
xchg
cli
jbe
pop
xchg
mov
aad
pop
push
fsubs
mov
notl
push
idiv
inc
inc
fildl
cltd
mov
push
sub
xadd
cld
xchg
int
mov
sbb
cmp
enter
int3
jg
js
mov
adc
aaa
adc
jno
mov
jecxz
mov
outsb
rcl
fs
into
jle
xchg
fcomps
mov
pop
mov
pusha
pop
mov
sbb
add
inc
cld
out
fneni(8087
rcll
cmpsb
inc
lcall
fs
out
sti
jge
cli
pop
jle
stos
movsb
rcrb
jo
fimull
add
out
cwtl
push
int
xlat
cmc
sub
ficomps
lds
cmpsb
mov
into
sub
mov
mov
jle
sbb
dec
dec
bound
push
or
test
les
das
stc
inc
jmp
push
cmc
roll
dec
stc
ja
cmpsb
dec
mov
mov
fmulp
int
mov
lret
and
mov
sbb
stc
aaa
cs
fiadds
cld
sbb
sbb
and
jge
fdivr
mov
and
add
das
adc
pop
pop
add
fcmovne
loop
stos
dec
or
sbb
loope
frstor
jae
mov
xchg
divl
mov
test
jl
aaa
cmp
or
mov
in
call
push
sub
sbb
sub
xor
nop
loop
mull
rorb
pop
popf
jle
push
scas
out
mov
int3
inc
sahf
fsubl
aam
lds
loopne
dec
pop
cmpsl
sub
and
stc
jp
jae
les
ds
popf
jl
rcr
xchg
pushf
daa
jb
jne
fisubl
dec
cmpsb
jecxz
mov
test
sbb
adc
insl
cs
loopne
inc
mov
xor
or
lcall
adc
mov
cmp
popf
pop
in
mov
sbb
fiaddl
sbb
sbb
pop
xor
mov
push
inc
adc
sbbb
insb
movsl
add
movsl
fstps
jl
xchg
pop
call
insb
cmp
mov
aaa
fildll
fcmovnb
xlat
pop
idiv
fnstcw
loopne
cltd
in
mov
cmpsb
pop
jge
xor
adc
fiaddl
xchg
inc
push
pop
fdivr
and
and
pop
clc
lcall
adc
cmp
je
mov
or
cmp
pop
mov
popf
jno
mov
push
ljmpw
sbb
out
sbb
pop
ss
cmp
xlat
scas
std
pushf
aam
push
lods
icebp
mov
xchg
inc
pop
mov
pop
scas
mov
or
or
sub
and
sub
sbb
mov
cmp
push
pop
jge
mov
shlb
adc
pop
stos
inc
ljmp
jns
sbb
lcall
cmp
insl
push
xchg
fcmovnu
pushf
arpl
sbb
or
cltd
and
push
cmp
cmp
data16
mov
and
fsts
inc
pop
sbb
clc
jp
bound
mov
test
pop
push
pop
mov
add
jl
or
cmp
movb
popf
out
pop
rcll
mov
addl
popl
adc
inc
insl
adc
lcall
int3
aas
mov
cmp
int
cmp
and
pop
fstps
mov
idiv
sarb
pop
fcmovne
xor
mov
clc
xchg
sbb
jb
jns
mov
add
cli
inc
scas
push
inc
push
lea
fcoms
fisubl
cmpsb
cmp
js
sbb
cwtl
adc
gs
inc
icebp
pop
fidivl
clc
jo
das
outsb
mov
xor
inc
adc
sbb
fdivrp
pop
lret
add
ds
lods
data16
cmp
push
push
pop
and
sar
stos
lds
sbb
outsl
xchg
xchg
pop
jmp
jl
xchg
cmp
cmpsl
pop
pusha
aas
repnz
jp
mov
push
imul
fstpt
rcll
and
lret
and
pop
lods
fsubrl
jb
push
or
or
pusha
fstpl
pushf
cmp
cltd
pop
mov
cmp
or
cmpb
sbb
pop
clc
lds
mov
aad
addb
out
fdivs
cmp
sbb
scas
cltd
adc
adc
inc
andb
cmp
cmp
xchg
aas
pusha
push
inc
arpl
sbb
xchg
mov
sbb
and
popf
and
cwtl
or
sbb
mov
mov
pop
and
sbbb
jg
pop
inc
cmp
add
out
add
daa
jp
mov
pop
and
setae
mov
sbb
or
popf
mov
adc
and
ficoml
ds
fimull
loopne
dec
fldenv
pop
pop
add
sahf
js
aam
int
and
mull
stc
cmp
xor
jns
lds
cli
sub
arpl
and
xchg
aad
mov
aaa
sbb
jle
inc
sbb
fwait
pop
xchg
std
movl
cmp
rcrl
sbb
adc
ds
sahf
xor
inc
and
fisttps
outsl
or
adc
andl
jnp
sub
call
lcall
loopne
addr16
mov
add
std
adc
pop
cpuid
mov
push
in
cltd
rcrb
mull
push
add
or
cmp
adc
adc
repnz
ds
lcall
pusha
mov
jns
cmp
inc
jae
xchg
add
sbb
iret
data16
fstps
mov
pusha
ret
jnp
xor
cwtl
js
lcall
pop
inc
js
adc
out
cmp
cli
cmpsb
sbb
out
lds
pop
cmp
mov
inc
decl
sbb
cmc
mov
push
sahf
cwtl
pop
add
jmp
xchg
loopne
js
fistpll
aaa
mov
jnp
hlt
and
popf
pop
fsubr
int3
popf
outsb
cld
cli
sub
cmp
clc
in
fstpt
mov
lds
xchg
cld
xchg
dec
cmpsl
out
gs
sbb
jge
iret
mov
in
jns
roll
cmp
es
cmc
add
imul
clc
jle
jge
sbb
fcmovu
sahf
fldenv
ss
and
pop
fdivrs
or
sbb
es
xor
cmp
mov
mov
loopne
cmp
out
pop
mov
test
cli
pop
mov
fisubs
cmpsl
negl
and
add
push
dec
sbb
clc
add
xchg
pusha
daa
mov
inc
pop
fadds
sahf
loopne
ljmp
clc
stc
mov
and
inc
or
cmp
xchg
add
out
loopne
mov
int
stc
popa
clc
pusha
fldenv
jg
add
iret
pop
sbb
js
lds
mov
push
lret
insb
sbb
or
pop
std
data16
stc
data16
mov
pextrw
jp
cli
fisubrs
popa
push
sbb
fisubl
sub
dec
sbb
sbb
and
cmp
outsl
xlat
and
hlt
sbbb
int3
movsb
cmp
mull
jns
add
ficoml
mov
pop
sbb
xchg
inc
adc
in
push
popf
in
les
or
mov
sti
arpl
arpl
fcompl
cmp
cmp
das
cli
inc
mov
add
sub
jp
std
das
clc
jae
mov
or
xor
inc
pop
pop
test
dec
add
mov
rcrb
jns
out
jl
inc
add
pop
popf
jle
push
pop
mov
and
div
cmp
jecxz
leave
aaa
repnz
sbbb
into
or
aas
pushf
popf
inc
stc
cwtl
adc
pop
insb
pop
sbb
rcrb
push
add
cmp
fcomps
in
lds
mov
cld
ljmp
sahf
inc
pusha
pop
cli
les
xor
sub
in
mov
fisubs
hlt
pop
jns
pop
stc
inc
jle
xchg
into
sub
ja
das
jge
clc
sbb
push
add
shlb
dec
jb
push
mov
dec
adc
loopne
jge
loope
lret
icebp
leave
in
mov
pop
fdivrs
cld
inc
sbb
sarl
sub
inc
jae
or
cld
adc
gs
cs
mov
sbb
cmp
ljmp
pop
inc
fldl
inc
inc
pop
sahf
xchg
insl
cmp
addr16
cli
push
mov
add
outsb
stos
push
imul
xlat
popf
adc
sahf
mov
js
fstpl
das
ds
lcall
fmuls
pushf
pop
cltd
cwtl
sbb
ds
inc
stc
mov
xlat
mov
aaa
scas
push
cmp
repz
add
gs
pop
out
jp
sbb
pop
pop
add
pop
jge
pop
arpl
cmp
in
jecxz
mov
int3
std
cmp
mov
mov
pop
lock
or
cmp
xor
ficomps
loop
imull
pop
and
stos
adc
cmp
adc
cld
adc
fisubrs
outsl
xchg
add
cmp
rcrl
fcomps
sub
sti
fstpt
xchg
sbb
sbb
repnz
inc
mov
cwtl
cmp
dec
in
lcall
pop
xlat
ja
mov
loopne
pop
fcmove
fimull
mov
cs
fcoml
fstpl
sbb
push
clc
xchg
jns
mov
pusha
add
dec
mov
inc
pop
sti
out
mov
inc
adc
mov
push
cld
inc
incl
call
jle
add
mov
cmp
shrl
pop
sbb
pop
xchg
inc
fisubrs
negb
push
sahf
icebp
paddd
dec
or
fiaddl
ficomps
rolb
test
mov
clc
mov
push
lret
daa
dec
int3
in
fxch
fs
pinsrw
enter
fidivrl
adc
popf
push
add
out
sbb
shr
mov
xchg
ds
dec
xchg
inc
cmp
popf
sahf
sbb
jl
fistpl
pop
push
mov
sarb
lcall
pop
popf
mov
pusha
mov
fidivrs
cmp
cmp
jp
lds
and
and
or
sbb
inc
sbb
add
aad
iret
mov
mov
cwtl
and
sub
pop
sahf
sti
sbb
fidivrl
push
or
jo
mov
mov
outsl
pop
push
fidivrl
cli
lods
xchg
push
cmpsl
fdivrp
pop
loopne
inc
pop
loopne
pop
frstor
out
and
test
jl
nop
inc
push
ja
ja
jp
or
test
repz
jmp
add
sub
pop
jg
pop
ret
inc
mov
cld
rol
addr16
adc
sbb
cwtl
cli
cmp
stc
and
inc
js
sbb
sbb
add
mov
pop
mov
inc
cmp
stos
sbb
cmpsl
pusha
jno
mov
cmp
cmp
cmp
call
jno
sub
or
into
scas
inc
loopne
cmp
lahf
push
cld
mov
cmp
iret
jns
and
jmp
lds
adc
subl
inc
or
or
nop
xchg
and
and
mov
pop
std
pushf
pop
push
data16
cmp
test
cmp
add
out
dec
sahf
pop
or
cwtl
dec
sbb
dec
cmp
add
xchg
sar
and
pop
add
mov
cmp
mov
sahf
cld
test
dec
notl
into
mov
lds
push
notl
xchg
clc
fwait
js
mov
pop
push
mov
int3
lcall
cli
cltd
jle
bound
mov
cwtl
add
das
fnstsw
ficompl
negl
or
lcall
sbb
sbb
std
ficoml
jge
jmp
jb
js
add
and
sbb
inc
jle
sbb
fimull
add
clc
jg
sbb
push
pop
and
mov
xor
fcoml
std
fidivrs
scas
adcb
pushf
cmp
jp
lret
sti
sbb
mov
add
cmp
jbe
cli
movsb
repnz
bound
pop
pop
sbb
sbb
mov
and
aam
inc
cmp
cmp
adc
cmp
adc
loop
sbb
mov
sahf
jge
pushf
stos
test
pop
cltd
sbb
mov
adc
out
add
inc
mov
and
fstpt
cmpsb
cmpsb
sbbb
jle
cltd
arpl
js
stc
fs
adc
negl
pop
popf
add
sbb
push
push
rorl
cmpb
add
pop
cwtl
mov
into
movsb
inc
and
stc
in
sbb
inc
scas
jge
inc
inc
mov
fs
test
negl
or
fldt
test
js
and
std
scas
xchg
clc
sbb
mov
sbb
mov
sahf
addb
out
clc
ficomps
jl
cmpsb
jp
daa
pop
sahf
add
inc
stc
pop
arpl
mov
cmp
fwait
out
sbb
push
cmp
mov
add
jo
lods
fdivp
cld
stc
sbb
je
in
jle
xor
sti
jge
sbb
sbb
sahf
sbb
add
lret
or
push
pop
adc
cmp
inc
pop
sbb
sub
into
lret
pop
sub
ficomps
xchg
cmpsb
mov
out
jle
sbb
ret
pop
std
adc
mov
fdivrs
sub
addr16
dec
out
fistps
and
sbb
loopne
out
mov
or
mov
mov
adc
popf
sbb
aam
inc
inc
cmp
clc
sahf
shl
push
js
sbb
sahf
rorb
jbe
stos
pop
mov
cmp
shrl
inc
scas
inc
pusha
popa
push
jp
cmp
sbb
jle
sti
cwtl
sbb
mov
mov
cmpsl
jae
and
jmp
pop
jmp
mov
mov
jge
or
mov
sti
clc
and
dec
pusha
sbb
sahf
lods
adc
push
push
push
pop
pusha
add
add
mov
ret
inc
jae
add
cmc
inc
mov
jbe
shrl
xchg
decl
pop
call
and
sbb
inc
js
sbb
leave
inc
test
mov
aaa
jno
cmc
push
pop
sti
inc
pop
jns
int3
mov
or
inc
adc
sbb
out
fnstsw
jne
psubd
std
cmp
push
pop
cmpb
xchg
inc
adc
lods
inc
sbb
cltd
mov
mov
sbb
aam
sti
cltd
sbb
mov
pusha
or
sbb
and
shlb
pop
fcomps
push
pop
movsb
inc
decb
clc
push
xlat
fsubs
lcall
cli
inc
ficoms
mov
ljmp
clc
fcmovnu
inc
jp
lcall
shll
push
mov
cwtl
jno
pop
insl
cld
popf
xor
sar
sbb
push
pop
jl
inc
cmp
std
cltd
pop
xor
push
lods
pop
cmc
inc
mov
sbb
mov
mov
leave
orl
outsl
inc
mov
inc
xlat
inc
rcrl
incb
clc
cwtl
pop
cltd
mov
sahf
mov
sti
adc
mov
cmc
shrb
or
gs
mov
aas
lcall
daa
pop
lods
test
xchg
sti
cli
into
cli
fcmovu
popf
cltd
pop
lds
std
mov
and
dec
iret
gs
fcmovne
roll
mov
inc
rorl
jbe
inc
pop
jmp
mov
insl
cmp
cmp
push
mov
fistpl
fstpl
mov
js
pop
in
push
sub
sbb
mov
aas
sbb
popf
mov
lock
mov
xchg
adc
popf
xchg
sbb
and
and
std
lds
mov
shr
xchg
fistpl
mov
ficompl
repnz
loope
cmp
lret
jecxz
jns
dec
jbe
and
enter
cmp
ljmp
pop
pop
out
sbb
jge
sub
pop
ljmp
fstpl
sarl
sbb
cmp
mov
mov
and
fldenv
mov
pop
repnz
sub
pop
inc
or
rolb
arpl
daa
dec
xor
pop
sub
mov
jmp
mov
cmpsb
scas
sbb
popf
out
mov
iret
adc
cmp
jb
jmp
cmp
push
pop
sbb
mov
sbb
mov
fdivrs
lcall
jl
sbb
mov
pushf
push
popf
sbb
pop
inc
cmpsl
into
fmuls
adc
outsb
fdivs
fcompl
and
ret
lcall
push
mov
jg
xchg
push
test
pop
stos
rclb
dec
xchg
xchg
jle
xchg
ficoml
pop
sub
out
lds
adcl
sbb
cltd
daa
xchg
fcompl
call
xchg
jl
xor
dec
xchg
sbb
out
jecxz
mov
xchg
pop
int3
jbe
pop
jl
and
dec
cmc
cmp
aam
cmp
cmc
cld
jl
scas
jle
aaa
sbb
mov
pop
cltd
sub
lcall
adc
dec
mov
pop
cli
jno
add
cmpsb
xchg
leave
outsb
mov
std
xlat
cld
cltd
loope,pt
int3
pop
inc
pusha
mov
sarl
push
and
popf
jl
pop
dec
mov
push
mov
sahf
pop
cmp
out
pop
pusha
pop
lret
mov
add
dec
out
arpl
out
lret
int
fisubl
loop
sarb
cmp
mov
push
fwait
sbb
sti
mov
add
add
in
cmp
scas
popf
jmp
and
mov
clc
sub
nop
push
inc
jmp
daa
cmpsl
cs
mov
pop
jo
push
fisttpl
cli
mov
test
sbb
mov
or
dec
sbb
gs
mov
sbb
hlt
inc
fimull
fidivs
cli
dec
sub
mov
lock
push
lea
xchg
sbbl
packssdw
cmp
cmp
adc
jp
mov
pusha
arpl
mov
jle
jp
jb
pop
sbb
lcall
aad
dec
lds
pop
sbb
mov
not
sbb
pop
stc
xchg
lods
inc
loopne
aad
xlat
out
cmp
mov
clc
cmp
test
fmulp
cmpsb
divb
inc
inc
sbb
lods
rcrb
and
in
movsb
ljmp
popf
sbb
cmpb
push
push
sbb
cmpsl
sbb
popa
sbb
ffreep
fisubl
jne
xchg
pop
dec
push
mov
or
cmpb
ljmp
mov
and
fsubs
pop
shrb
jle
clc
and
adc
lcall
loopne
sbb
frstor
mov
adc
frstors
pusha
sarl
call
cmp
mov
fisttps
js
push
fsubs
adc
jle
mov
pop
sbb
sar
mov
aas
or
outsl
sbb
add
mov
jp
inc
out
mov
sbb
inc
fcomps
das
pop
int
andb
repnz
and
stc
dec
and
icebp
movsb
jl
cmp
inc
mov
pop
sbb
inc
xlat
std
imul
idivl
xchg
sub
sar
fstpl
pop
movsb
mov
xchg
push
cmp
popf
mov
mov
idivl
mov
mov
js
fisubs
sub
aas
jns
or
negl
lahf
sbb
ds
stc
cmp
xchg
cmp
cs
lea
fidivrs
mov
jmp
pop
or
sbb
dec
cmp
jp
stc
cmpsb
pop
mov
ret
sahf
gs
mov
cmp
lods
mov
daa
xlat
lods
adc
std
cli
repnz
jp
xchg
and
fadds
in
sbb
mov
cwtl
sbb
mov
sbbb
push
pop
cmp
xchg
cs
scas
pop
push
inc
sbb
adc
adc
jp
sub
sub
and
add
inc
or
leave
cmp
insb
popf
fldt
test
add
rolb
divps
js
out
sub
sbb
shl
cli
mov
pop
call
lds
aaa
mov
cmpb
cmp
mov
mov
cli
adc
cwtl
cld
aam
outsl
or
inc
jle
xlat
lods
sbb
sbb
or
jne
pop
mov
xor
sub
pop
mov
or
inc
bound
fadds
pop
rclb
lea
in
jl
or
adc
mov
push
popa
mov
mov
adc
aam
cmp
xor
inc
arpl
pop
cmp
pop
mov
add
lcall
xchg
add
lods
jl
popa
add
flds
dec
rcrl
cli
div
sbb
std
cmp
ds
jnp
fldenv
vpmacssdd
out
xor
add
addr16
cmp
addb
push
pop
jae
push
xchg
popa
and
xor
loope
fmul
stos
sbb
pop
push
adc
jge
inc
std
iret
mov
cld
int3
lcall
xchg
int3
ds
sarl
int
push
dec
add
jle
jl
fst
push
cli
pushf
dec
fldl
pusha
std
sbb
sbb
fadds
or
aam
push
sti
sbb
cmp
pop
les
inc
popa
jbe
pop
adc
cmp
popf
das
fistps
movb
sahf
scas
out
cmp
cld
push
neg
inc
addr16
scas
pop
add
cmp
cmp
fcomp
lcall
js
jns
fidivl
pop
push
inc
aaa
jo
pop
add
jbe
mov
adc
fdiv
popf
rolb
stc
shlb
mov
shrb
cli
dec
sbb
cmpsb
add
or
fimuls
cmpsl
notb
jl
cmp
mov
pushf
loopne
sbb
jl
jae
movsl
pop
popf
cmp
xlat
push
loopne
fsubrl
cld
adc
adc
adc
jg
clc
data16
cwtl
pop
lahf
pop
outsb
inc
loopne
sbbb
adc
pop
stos
fsubl
pusha
hlt
lahf
fwait
xchg
inc
pop
mov
lcall
das
cwtl
sbb
sbb
jg
inc
popf
out
bound
push
pop
pop
push
popf
mov
sbb
pop
pusha
stc
clc
pop
adc
cmp
or
pushf
shl
mov
push
pop
sbb
int3
fcmovnu
js
stos
cmp
jbe
out
fcomps
add
jle
pop
bound
sbb
pop
and
jle
mov
fsubl
cli
add
inc
in
jp
pop
addr16
fstp
xor
cmp
dec
add
js
pop
mov
xchg
ds
or
jl
mov
inc
out
pop
fisttpll
test
fcompl
cmp
xchg
cmpsl
mov
cmp
lods
inc
jbe
leave
or
inc
loopne
and
mull
mov
xlat
and
pop
mov
jl
sti
pushf
jle
lock
cld
sbb
adc
inc
cmp
sti
aaa
into
out
jne
xchg
mov
fsubs
mov
int
dec
div
loopne
sbb
shlb
fcoml
inc
shr
clc
cmpsb
out
into
outsl
sbb
mov
pop
sub
adc
mov
jl
incb
andl
mov
popf
add
mov
push
cmp
and
inc
sahf
out
sti
mov
js
mov
js
mov
pop
and
mov
add
xchg
loopne
jmp
and
cwtl
mov
mov
fdivrl
mov
addb
dec
cwtl
cmp
push
mov
pop
clc
movsl
sub
inc
sbb
popl
sbb
movsb
cld
sub
clc
aaa
repnz
mov
divb
std
mov
mov
pop
stc
sbb
and
pushf
fs
inc
jp
sbb
xor
mov
or
lds
xor
ljmp
cli
cmp
add
fisubl
push
lahf
stc
add
or
sub
jle
xchg
js
pushl
fwait
ss
pop
repz
and
jge
push
xor
pop
cld
stc
inc
inc
sbb
or
push
mov
mov
and
xor
xor
jno
addr16
fstl
in
push
fstpl
pop
aaa
jge
cld
pop
and
pop
inc
and
sbb
fwait
popf
mov
rcrb
cwtl
cltd
sti
adc
fimull
mov
push
nop
lret
pop
or
jp
js
cli
and
dec
lcall
loopne
mov
cmpsb
pop
mov
cs
add
adc
stos
fimull
sub
pop
mov
cld
cmp
push
js
out
lcall
jl
cmpsb
cltd
popf
jp
jne
out
nop
pop
push
adc
cli
push
push
pop
mov
mov
sarb
dec
pop
pushf
cmp
dec
adc
xor
popf
push
shl
jg
cmp
xchg
sbb
dec
daa
ss
xchg
stos
sarb
mov
gs
fcmovnu
mov
add
sub
pushf
ficoms
xor
adc
mov
mov
sub
rcl
idivl
or
js
cltd
stc
push
sti
xor
xchg
or
sbb
cltd
mov
sub
imul
sbb
sbb
in
rcrl
xlat
lcall
sbb
cmp
inc
jecxz
dec
mov
les
test
adc
pop
das
or
std
sbb
js
clc
xor
pop
inc
cmpb
mov
lret
add
xor
insb
subb
or
push
cli
je
dec
and
xadd
mov
js
es
loopne
cmp
sub
jo
mov
cwtl
fimuls
lods
loopne
inc
mov
pop
sbb
add
pop
je
fbld
jle
cmp
das
mov
xor
pop
mov
andb
pushf
sar
rcrb
fisubrl
pop
pusha
cmp
or
fcoml
lods
inc
shl
mov
js
inc
ss
mov
popf
clc
out
pop
sahf
pusha
rorl
insl
cmpl
xchg
jp
out
cli
jb
mov
arpl
mov
mov
dec
js
rol
les
cmp
xchg
data16
xor
lock
mov
int3
or
fcmovb
sbb
sbb
sbb
push
cmpsl
sahf
hlt
repnz
lret
mov
mov
cwtl
fdiv
cmp
sbb
inc
cmp
fsubrl
mov
add
dec
cmp
jge
popf
out
cmpsl
fistpl
clc
dec
fs
inc
sub
movsb
push
rcll
mov
cld
jns
pop
cwtl
fcomps
mov
dec
jecxz
push
cmc
mov
jg
jbe
or
sbb
mov
mov
arpl
and
sbbl
stc
into
fs
add
xor
push
adc
push
add
xchg
pop
cmp
ror
inc
cmp
pop
pushf
pop
cmp
js
pop
dec
call
and
fsubrl
cwtl
pop
shrb
or
cld
inc
adc
jns
sbb
int3
in
xor
xchg
mov
popf
popa
incb
sbb
and
lcall
cmp
and
js
mov
adc
fstl
std
insb
out
jp
out
add
push
mov
or
adc
pop
sti
push
cs
sbb
add
aam
and
or
fwait
xlat
jp
mov
int3
xchg
dec
xchg
fidivrs
das
xchg
addr16
and
cmp
fcomps
cli
xor
fnstsw
and
mov
fcompl
jnp
or
mull
push
add
fcompl
pushf
cli
in
cli
and
adc
mov
int3
inc
out
mov
cmp
inc
cmp
cwtl
sti
cli
and
pop
rcr
cmpsl
clc
outsl
pop
stos
sbb
pop
adc
popa
stc
pusha
inc
movsb
pop
scas
inc
cmp
aaa
paddsb
sbb
das
add
jp
sahf
sub
fwait
cmp
lret
stc
pop
arpl
mov
mov
push
jp
in
sbb
inc
inc
loopne
sbb
mov
pusha
outsl
jbe
adc
mov
mov
xchg
mov
or
scas
sbb
cmp
js
cmpsl
fimuls
mov
loopne
xlat
rorb
pop
fcmovbe
and
cmp
cwtl
mulb
mov
jp
loop
xlat
xor
add
stos
jle
rcll
xlat
sbbl
jge
fwait
xlat
mov
gs
movsl
mov
loopne
inc
inc
rcr
cmp
push
cltd
sub
outsl
pop
ret
mov
std
rcrb
cwtl
inc
cltd
inc
clc
xchg
jns
adc
sbb
ret
fldenv
pop
cltd
pop
mov
aaa
pop
push
jl
popf
xchg
xor
jo
pop
dec
popf
cmp
adc
loopne
psubd
sarl
pop
jg
jl
sbb
cld
gs
mov
div
jns
fnstenv
fadd
mov
fucomi
jp
in
std
and
inc
fsubs
mov
jg
pop
jl
push
inc
sbb
pop
lods
fdivs
xor
sbb
popf
mov
add
cmp
cli
imul
adc
lds
cltd
fdivl
push
ficoml
sti
adc
mov
out
aas
fisttpll
push
arpl
pop
push
mov
jo
xchg
adc
inc
out
and
jno
or
fdivr
jo
xchg
jns
rorb
cmp
lods
push
pop
call
fadds
sbb
out
pop
popf
fisttpll
pop
and
mov
sbb
push
or
adc
inc
jp
rcrl
adc
mov
test
pop
pop
popf
and
mov
xchg
mov
pop
push
insl
negl
adc
test
into
push
aam
mov
sbb
cmp
mov
adc
cltd
in
jns
outsb
cwtl
leave
scas
lods
sti
sub
js
stc
adc
sub
rcrb
sbb
adc
or
arpl
mov
cmc
fs
dec
adc
mov
lods
push
mov
xchg
out
add
pop
mov
pop
push
xlat
and
add
pushf
add
jbe
fstps
test
std
js
adc
popa
mov
mov
xlat
jae
push
jb
jp
jg
and
jne
cmp
test
jno
out
mov
test
sbb
sub
xchg
cmp
mov
xchg
je
pop
mov
or
cmp
pop
pop
pushl
into
or
ret
je
fadds
and
xchg
and
ffree
fsubl
pop
cmp
ds
cwtl
push
mov
dec
jns
mov
pop
sti
inc
inc
rcll
inc
cmp
mov
push
mov
stos
adc
cmp
jg
cwtl
mov
mov
scas
iret
jno
ficompl
scas
ja
cmpsb
add
cmp
jge,pt
mov
jmp
sbb
fdivrp
sbbb
and
mov
in
mov
push
pop
push
lahf
fsubl
out
dec
lcall
int
xchg
aas
xchg
sbb
pop
mov
pop
nop
ss
jbe
js
xchg
cltd
pop
sbb
sbb
jge
xchg
jle
cwtl
jae
leave
sarl
push
pop
pop
adc
inc
clc
cli
ficompl
jle
dec
scas
scas
mov
cli
sbb
mov
dec
push
dec
mov
pushf
test
adc
into
push
cwtl
pop
clc
imul
sbb
dec
testb
cli
clc
jns
outsl
sub
rorl
sbb
sub
mov
shll
and
mov
jp
cli
jae,pn
shll
dec
stos
js
mov
gs
mov
cmp
push
sahf
out
push
sbb
fisubs
incb
sbb
cmp
popf
icebp
clc
push
xorb
xchg
add
mov
sbb
sbb
test
popf
js
jb
mov
cmp
aaa
mov
cmp
xchg
pop
imul
movsl
xchg
sarl
call
sbb
push
cld
xor
mov
nop
xchg
mov
pop
fstl
push
lock
and
in
shl
mov
pushf
push
rol
leave
loopne
sti
mov
pop
xlat
fidivrl
push
mov
scas
inc
and
movsb
je
aad
repnz
jb
mov
mov
push
dec
xchg
jb
fstl
xchg
cmp
push
sahf
and
sahf
xlat
inc
mov
shll
popa
push
and
insl
xchg
xlat
lock
in
popf
cmpl
xor
pop
jo
push
test
fcoml
pusha
mov
jge
loopne
push
fdivrl
cmc
push
pop
imul
mov
xchg
out
and
aad
rcrb
push
je
sbb
jns
ret
xchg
mov
insl
jne
push
cld
mov
pause
jne
mov
repz
adcb
leave
jo
xchg
inc
repz
repz
add
push
xchg
xchg
jg
cmp
shrb
push
insb
frstor
lods
not
adcl
outsb
xchg
enter
pop
pop
xchg
scas
cltd
dec
scas
fstps
test
xchg
dec
cltd
push
inc
jg
cltd
jnp
mov
cltd
or
shr
sti
mov
xor
push
mov
xlat
cmp
dec
int3
fs
pop
popa
dec
xchg
xchg
leave
pushf
int3
xchg
mov
hlt
xchg
fwait
daa
bound
push
cld
fwait
xchg
adc
adcb
mov
sahf
cwtl
lods
xchg
popa
int3
mov
pop
int
ja
xchg
xor
pop
sahf
mov
fnsave
loope
xchg
sahf
leave
stc
xchg
adc
jl
shlb
cmp
xlat
sti
cmpsl
out
inc
sbb
ja
imul
xchg
mov
mov
ss
sahf
negb
fstp
and
into
pusha
mov
dec
imul
std
push
ficomps
inc
cwtl
jge
mov
arpl
add
pop
pop
aaa
push
sbb
pop
pop
stc
loopne
sbb
std
testl
popf
ljmp
js
loopne
mov
fiaddl
shll
fmull
jge
pop
lcall
or
sahf
mov
dec
mov
jns
rcrb
mov
cli
pop
fstps
fstpl
mov
in
movsl
inc
sbb
in
jns
inc
xor
loopne
mov
sbb
dec
in
jmp
sbb
push
dec
fdivr
ret
mov
loopne
add
and
or
xchg
cld
jge
jl
adcb
pop
jp
fsub
adc
sahf
jp
pop
or
add
js
fsubs
fdivr
push
loopne
fldl
cltd
data16
mov
imul
fs
fistpll
inc
imulb
inc
sbb
jecxz
fmull
rolb
sti
sbb
xchg
fidivrl
pop
and
cmp
inc
mov
push
cmp
std
addb
mov
test
push
pop
mov
push
sbb
xchg
sbb
rcr
push
fdivrs
pop
mov
mov
mov
fincstp
fmuls
mov
pop
loopne
cmp
cmc
cwtl
popf
inc
je
loopne
jns
dec
mov
clc
cmp
inc
mov
xlat
mov
in
nop
jno
adcb
movsb
jl
mov
and
frstor
mov
inc
lea
in
cmpsb
in
sarl
xchg
loopne
inc
mov
cmp
daa
std
shrl
push
mov
jae
xchg
adc
mov
xlat
pop
push
jae
cmp
lcall
dec
dec
in
nop
or
sbbb
jno
jne
sar
fisubrl
in
fwait
jmp
fdivr
vcvtdq2pd
dec
rcrl
sbb
sub
lcall
bound
fstpt
loop
hlt
mov
fdivrs
mov
adc
sbb
jmp
pop
inc
aam
mov
outsb
mov
add
lcall
add
sbb
dec
mov
fdivrs
xchg
jecxz
add
pop
lcall
or
sti
dec
jae
pushf
push
push
fcompl
push
es
loope
xchg
mov
icebp
jb
push
fcoml
xchg
popa
shll
sbb
pop
sahf
fidivrl
push
frstor
jge
gs
cli
push
lahf
pop
add
sub
cmp
mov
cmp
xor
mov
rcrl
testl
dec
xlat
test
or
rolb
mov
push
mov
popf
jge
and
stc
sub
cmp
sbb
mov
or
repnz
ficompl
clc
xor
stc
popf
and
sub
int3
cmp
fistl
or
test
jp
setns
jle
xchg
adc
shll
lcall
jl
cwtl
sbb
inc
ficompl
or
pop
lods
iret
and
sahf
fisubs
icebp
push
mov
rcrl
jmp
adc
push
jp
fistpl
fisubl
ficomps
rclb
pusha
cmp
lret
call
lds
adc
sbb
xchg
into
and
mov
jle
sbb
jp
adc
pop
negl
jge
sbb
xchg
in
stc
repnz
fistpl
add
sub
and
mov
jge,pt
and
mov
inc
mov
sbb
dec
adc
and
popf
fwait
cwtl
ficompl
insb
cli
mov
mov
cmp
pushf
jp
int3
fwait
adc
loopne
pop
cltd
in
pushf
mov
std
xlat
ja
pop
mov
sarl
jl
fldl
xchg
xor
mov
cmp
popf
fdiv
pop
cmp
jp
gs
mov
xor
lahf
arpl
js
sbb
mov
loopne
pushf
dec
jecxz
push
pop
jns
fisubs
push
ffree
ficoml
cmp
pop
cmp
push
fimull
sbb
pop
adc
mov
inc
cmp
or
inc
cwtl
xlat
sbb
sahf
fdivrs
mov
pushf
cmp
jp
std
jle
lcall
inc
cli
iret
aam
or
xlat
xchg
mov
stos
fldenv
pop
cli
stc
in
rcrb
popf
fadds
pusha
clc
xlat
add
push
std
mov
mov
gs
sahf
mov
nopl
in
sarb
jne
xchg
mov
fwait
divl
adc
mov
jl
movsl
cmpsl
add
cmp
jl
loope
movsl
cwtl
sti
cmp
xchg
jge
stc
push
jl
cli
sbb
decb
ficompl
mov
push
pop
cmpsl
push
movb
jp
pop
xor
adc
dec
lcall
inc
mov
fdivl
inc
in
pushf
std
fisubs
mov
pop
cmp
jns
js
mov
mov
jns
cmpsb
loopne
sbb
jle
scas
mov
push
mov
cmp
ficoms
pop
cmp
sbbb
mov
bound
pop
inc
rcll
jb
cmp
jl
mov
inc
mov
in
fildl
in
fldl
mov
shll
mov
fistl
sbb
fdivrs
sbb
cltd
push
lcall
fldenv
arpl
inc
xlat
adc
jp
mov
mov
js
fidivs
out
push
pop
and
stc
or
fwait
sahf
pmaxub
popa
jns
pop
sbbb
mov
sahf
and
jp
lods
jae
mov
ficoms
sbb
testl
test
xchg
inc
pop
enter
xor
and
pop
or
mov
fdivr
xchg
jecxz
or
inc
inc
jbe
out
fcomps
cld
sbb
loopne
nop
enter
add
cltd
fistpl
fxch
xchg
adc
clc
cmp
js
insl
faddp
or
jae
cmp
jecxz
pop
sbb
lds
decl
push
cmp
mov
sbb
daa
push
jb
xchg
out
add
and
or
adc
stc
cmp
mov
shl
mov
sbb
iret
stc
ficoml
sbb
rcl
inc
sbb
jp
mov
mov
dec
in
jle
xchg
pop
pusha
outsb
xchg
push
call
sbb
sti
arpl
mov
or
mov
sub
xchg
fs
sbb
out
fidivrl
orl
stos
fistps
std
pop
cltd
pushf
sbb
add
push
leave
jns
call
inc
sahf
popf
xchg
jno
and
pop
pop
add
fdivr
mov
inc
pop
and
inc
adc
adc
add
pop
outsb
pusha
sbb
inc
enter
sbb
fdivr
fdivrl
xor
mov
rorl
mov
lahf
sbb
cmp
fcmovnu
fdivrp
out
adc
pusha
push
cmp
mov
xchg
sbb
enter
cmpsb
inc
fs
mov
jp
sbb
fstpt
stc
or
add
or
add
lea
and
sub
in
fisubrl
cmp
cmp
sbbl
xchg
movb
js
pop
pop
add
fildl
fdecstp
sbb
adc
pop
mov
cwtl
mov
fdivrl
fimuls
sbb
sub
push
sbb
enter
std
lcall
push
mov
dec
stc
loop
sbb
vmaskmovdqu
shl
fldenv
dec
push
inc
cwtl
add
mov
pop
ds
mov
xlat
add
clc
jbe
stc
dec
jnp
cmp
fildl
scas
sbb
jge
sar
jne
cmp
sbb
fnstsw
popw
sbb
loopne
mov
lods
in
sahf
push
daa
insb
ud2
sbb
sbb
mov
inc
fstpt
adc
jns
lock
jge
cmp
scas
jbe
jbe
outsl
cmp
inc
inc
xchg
shlb
or
sbb
mov
rcrl
lcall
cmp
jle
cmp
mov
sbb
cwtl
mov
cmp
rolb
sbb
fcompl
and
mov
mov
arpl
cltd
mov
sahf
mov
xchg
inc
sahf
sbb
add
sti
jge,pt
cmp
ret
nop
ds
mov
push
inc
pop
jle
scas
clc
idivl
sbb
add
divb
mov
ficoms
cmp
sahf
mov
bound
mov
ss
pop
lcall
pop
out
sbb
mov
fnsetpm(287
pushf
rcr
dec
inc
lea
cmc
and
xchg
cmp
mov
jge
sbb
sbb
push
ja
mov
popf
pop
sahf
pusha
sbb
pop
iret
xchg
push
arpl
out
cld
fsubs
mov
cmp
cli
pop
jns
cmp
fstps
popf
fcoml
lea
pop
cmp
cwtl
fidivl
les
arpl
and
aas
pushf
js
fdivr
mov
push
cwtl
push
lahf
mul
js
pop
popf
add
ds
sub
cmpb
push
fisubs
cmpsb
sbb
and
cli
popf
xchg
ficomps
and
fdivr
js
lret
adc
mov
and
xchg
cmp
mov
mov
sbb
ficomps
insb
arpl
stc
ss
insb
mov
jae
sbb
jl
mov
ja
mov
inc
inc
mov
or
sti
fistpl
and
mov
leave
pop
fstpl
or
pushf
sti
pop
cltd
jl,pt
xor
mov
push
pop
aaa
dec
lcall
aaa
loopne
pusha
popf
arpl
les
mulb
sbb
mov
fistl
sar
mov
mov
or
fsubrl
push
xlat
cmp
mov
pushf
push
out
sbb
cli
mov
or
pop
popf
jns
mov
lcall
pop
mov
sbb
xor
sti
icebp
mov
inc
jbe
cmp
lock
sbb
gs
int
xor
sub
fsubrl
movsb
call
sub
mov
popf
outsl
dec
cltd
pop
push
or
cmp
sti
and
cltd
add
adc
jge
cld
sahf
fnstsw
pop
mov
and
cli
vdivps
inc
lods
inc
scas
xlat
sbb
out
push
stos
bound
bound
lods
jecxz
xchg
push
xor
adc
pop
pop
faddl
mov
adc
sbb
lcall
push
enter
rcrb
push
jmp
clc
lods
es
jp
insl
movsl
jb
cld
fildl
mov
sahf
jge
dec
cmp
push
or
fcmovbe
jl
fcomi
js
not
aas
fstpt
and
jne
and
adc
push
add
fdivrs
inc
inc
lods
movsl
push
cwtl
jbe
jp
fidivrs
xbegin
cmp
pop
into
mov
inc
pop
cmp
xor
inc
repnz
cmpb
popf
sahf
fisubs
fwait
mov
std
xchg
test
mov
and
cli
repnz
mov
pusha
sbb
call
cmp
add
adc
pop
punpckhbw
scas
jl
dec
stc
xbegin
in
push
stos
negl
push
imul
outsb
inc
cwtl
divb
lcall
into
fcomps
jge
lods
lods
cli
and
cmp
rcrl
add
or
mov
pop
jl
sbb
and
or
sub
std
mov
jmp
mov
push
cmp
das
fimull
mov
pop
xor
ss
mov
dec
and
pop
dec
inc
pop
ficompl
xchg
pop
jmp
sbb
jp
xlat
adc
lcall
inc
adc
pusha
cltd
jae
add
or
loope
mov
jmp
sbb
cmc
inc
mov
jp
xchg
fiadds
cmovb
jns
cmp
mov
out
push
mov
lahf
int3
xlat
popa
pop
pop
and
fstpt
pusha
sbb
jmp
mov
mov
mov
sbb
xchg
dec
fidivl
pop
xrelease
pop
mov
mov
mov
fwait
pushf
jbe
scas
ds
out
or
andb
inc
jae
mov
popa
and
loopne
gs
fsubl
std
scas
xchg
scas
jl
fisubrs
sahf
mov
inc
cmp
mov
push
fimull
inc
cli
sbb
pop
jo
xlat
rcr
push
lret
scas
jp
jle
popf
into
jae
ja
mov
inc
idivl
cli
adc
inc
xlat
fisubl
idivb
add
cmp
jns
sti
or
push
mov
jge
or
xchg
jns
pop
jp
add
out
adc
adc
and
stc
pushf
jo
jmp
inc
or
pop
ds
inc
jle
jp
and
sti
and
sbb
xchg
inc
leave
dec
xchg
sbb
sbb
jp
push
dec
mov
sbbb
and
adc
lahf
pushf
jns
cwtl
and
andb
sbb
mov
pop
in
jl
mov
popf
mov
repnz
outsb
test
adc
clc
cmp
cmp
sahf
sbb
xchg
fstps
ficoms
bound
imul
movsb
cmp
sbb
mov
fsubp
sub
cwtl
pop
pop
push
imull
popf
js
aaa
push
adc
pop
cld
mov
cltd
aam
pop
and
add
movsb
jle
and
cmpl
pushf
cmp
inc
jbe
inc
pop
dec
cs
js
dec
mov
outsb
mov
xor
sbb
aad
inc
jecxz
cmpsb
out
fistpl
jmp
mov
pop
outsl
stc
in
dec
add
cltd
sbb
cmp
lcall
stc
pop
sbb
xlat
jns
or
fs
pop
jge
ret
push
adc
cmc
push
inc
outsb
lds
cmp
fwait
inc
sub
xlat
cwtl
cmp
gs
js
popa
push
stc
xchg
gs
cmc
pop
mov
and
out
ret
sahf
js
pusha
mov
jg
mov
loopne
sbb
add
cld
fnstsw
cwtl
loopne
cltd
fwait
jnp
mov
push
lahf
pop
cwtl
mov
fs
mov
gs
call
push
jg
and
jae
mov
jae
mov
jns
clc
sarb
or
cmp
jns
lahf
sahf
push
repnz
and
push
ds
jp
ja
mov
stc
add
loopne
pop
lods
std
cld
pushf
inc
inc
sbb
pop
cmp
shll
loopne
sbb
mov
sub
jne
push
test
sbb
mov
xchg
adc
arpl
cmp
fldenv
dec
jne
fcomps
fnstcw
sbb
jo,pt
jnp
and
jge
pop
cs
push
and
xor
xchg
stos
dec
lea
pop
stos
mov
xchg
test
xchg
pop
into
jecxz
lods
and
pop
or
jae
jb
call
mov
and
cmp
sti
xlat
popf
adc
inc
sbb
aad
dec
adc
sub
mov
push
and
mov
das
xchg
sbb
add
xorb
mov
push
sbb
mov
pushl
enter
repz
rorl
xchg
and
jns
mov
lret
push
cwtl
fsts
push
ffree
adc
pop
sti
xor
and
jae
mov
gs
mov
cmp
lock
in
repnz
jmp
pop
and
les
push
inc
gs
fcmovb
jge
cltd
sti
imul
jb
jp
js
lock
pop
mov
dec
mov
sbb
movsb
or
ja
std
rcrb
hlt
gs
mov
lds
mov
inc
cs
js
insl
and
into
mov
into
gs
inc
jl
jne
cmp
pop
push
push
js
mov
loope
add
pop
notb
std
repnz
add
movsb
pushf
pop
mov
lcall
mov
aaa
dec
enter
add
pushf
sbb
sbb
cltd
push
ret
shll
outsl
inc
push
mov
xchg
cmp
icebp
std
sti
mov
js
in
cld
daa
inc
pop
loopne
sub
pushf
pop
mov
stos
andl
in
aaa
xchg
pop
sub
negl
sub
ret
push
xchg
inc
or
in
pusha
shll
push
loopne
fcoml
adc
mov
mov
pop
lahf
sti
ficompl
pop
inc
aaa
pop
xchg
pop
push
and
mov
mov
pop
mov
or
sahf
mov
rcrb
fisubs
sbb
or
arpl
sbb
pop
xlat
outsl
pop
rcrl
repnz
popa
xchg
jmp
popf
mov
js
cli
dec
mov
cltd
ljmp
sbb
imul
addps
pop
cmpsl
sbb
incb
fwait
aam
cmp
idiv
sub
mov
jns
pop
addb
sbb
push
cmp
sbb
loopne
mov
pop
inc
mov
jns,pn
cwtl
xchg
js
ds
inc
fstpt
jle
jne
sti
shll
inc
xchg
cmp
pop
lcall
inc
or
or
sbb
sbb
repnz
pop
and
clc
popf
cmp
pop
fiaddl
push
sahf
cmp
add
test
into
mov
pop
nop
sti
cld
sbb
mov
pop
lcall
clc
mov
ss
lcall
insl
inc
mov
std
ljmp
stc
sbb
mov
xchg
mov
sbb
pop
cli
repnz
and
cmp
fadds
jmp
pop
jp
loopne
js
mov
fdivp
cmp
cmpsl
aaa
sbb
xchg
xlat
pop
mov
repz
mov
sarb
bound
jae
inc
mov
cmc
fistps
das
cmp
mov
in
stc
addr16
pop
jns
out
and
sti
cmp
popf
daa
jecxz
or
pop
dec
lds
and
ficompl
inc
mov
mov
fistps
popf
addr16
sahf
sbb
pusha
sub
lcall
mov
or
call
cmp
in
rcll
sub
movsb
ds
jl
add
pop
jbe
cwtl
addr16
mov
xor
sbb
mov
mov
cmp
lock
sbb
sbb
popa
xlat
dec
jge
push
mov
cli
sbb
inc
pop
addr16
mov
mov
jle
sti
xlat
jns
adc
adc
cli
adc
incl
jge
jle
jp
mov
fstpl
js
mov
mov
mov
idiv
loopne
xchg
ror
std
rclb
fimuls
mov
sbb
movsb
pushf
lcall
test
mov
cmpsb
js
fsts
fwait
bound
pushf
lds
inc
add
test
idiv
dec
cwtl
mov
xchg
aas
cltd
pop
in
or
sbb
ds
mov
cmp
mov
sbb
cs
pop
sbb
sbb
adc
js
adc
xchg
xchg
fstps
pop
fs
idivl
loopne
sbb
jb
push
and
and
adc
jp
rcll
and
rcr
frstor
popf
dec
jbe
cld
jns
out
idiv
sahf
add
add
xchg
dec
xchg
jp
adc
cs
in
mov
push
out
popf
pop
lcall
pop
popa
push
mov
push
pushf
cmpsl
xchg
notb
lds
push
lcall
rcrl
add
pusha
popf
or
jns
shrb
in
push
adc
shl
ss
sub
jmp
xor
xchg
test
sbb
popf
outsl
movsb
inc
cmp
cmp
inc
stc
sti
shlb
mov
push
cmp
cltd
fs
adc
adc
dec
div
sbb
jns
cltd
das
or
sub
fdivrl
fcmovne
cltd
bound
inc
nop
test
xchg
adc
cli
incl
pop
jge
inc
mov
push
std
and
stc
loopne
data16
add
mov
inc
adc
fdivl
lret
cli
xchg
and
xlat
or
jl
rcll
mov
jae
push
ffreep
mov
pop
cmp
add
rolb
cmp
pushf
cwtl
inc
fdivrl
jp
mov
stc
mulb
push
mov
inc
add
push
mov
lods
add
pop
jge
jge
sti
inc
mov
dec
inc
fstps
mov
and
jle
inc
pop
cmp
cmp
and
and
das
sbb
or
pushf
pushf
or
sahf
pop
ftst
push
mov
data16
mov
flds
shll
mov
pop
insl
insb
or
sbb
aam
and
cmp
daa
or
pop
rcr
add
popf
sahf
mov
faddl
mov
shlb
in
inc
push
stc
fsubrp
cmc
pop
aad
cmc
mov
mov
xchg
push
or
sub
lods
cmp
inc
sahf
mov
sarb
adc
loopne
nop
cmp
xor
lds
pop
inc
sti
push
mov
pop
rcll
fisubs
push
flds
shl
add
daa
mull
mov
sub
pop
inc
enter
je
cmp
mov
jp
cmp
aam
push
jle
add
mov
fld
cmpsb
arpl
fst
out
fnstenv
sbb
push
sahf
out
xor
fst
stos
out
pop
cltd
shrl
negl
loope
aaa
add
divl
jns
ja
mov
int
pop
in
mov
cmp
sti
xchg
cmp
or
fs
fnstsw
lds
addr16
inc
pop
sbb
mov
jmp
leave
popf
movsl
sbb
push
cmp
clc
jge
loope
ficomps
mov
pop
sbb
in
movsl
ljmp
scas
lahf
pop
or
jp
into
and
fdivrl
pop
imul
add
int3
xchg
sti
popf
sbb
sbb
mov
lods
inc
xchg
add
inc
cmp
shl
cmp
aas
mov
imul
mov
pop
movsl
inc
sar
mov
popf
cli
hlt
cmp
sub
xchg
loopne
das
stos
rcrl
sti
cwtl
sbb
inc
sbb
sub
xchg
pop
pop
lcall
adc
jge
in
rcrl
push
sbb
mov
clc
adc
cwtl
enter
negl
sbb
jge
xor
inc
mov
xchg
xchg
addr16
xchg
cmp
cltd
cli
sub
cli
hlt
add
js
sti
xlat
ficompl
lds
lock
dec
popa
cmp
mulb
loopne
sbb
into
cmp
sub
mov
in
cld
add
test
shr
xchg
data16
push
cltd
lcall
mov
das
enter
outsb
lds
stc
sbb
cli
out
add
xchg
stc
std
mov
sarl
out
sbb
sahf
push
clc
sbb
jns
xchg
rorb
rcrl
adc
repnz
stos
pop
inc
push
mov
pop
cmp
adc
mov
mov
mov
xchg
loop
sbb
mov
add
mov
pushf
jg
cltd
clc
and
cs
jle
mov
outsl
les
jecxz
pop
sbb
loopne
xlat
dec
mov
jae
mov
dec
addr16
in
xlat
fidivl
sbb
or
int3
xchg
mov
push
scas
lea
enter
movsl
push
xchg
ja
popa
faddp
adc
pop
push
or
cmp
fidivrs
insb
fisubrl
inc
add
dec
sbb
ror
inc
loopne
sbb
xor
mov
enter
mov
pop
add
push
movl
aad
pop
xor
loopne
rcl
jns
pop
sub
jp
out
cwtl
jo
mov
shlb
stos
push
sub
sbb
jg
xchg
flds
mov
popf
mov
aam
jbe
pushl
movsl
outsl
pusha
sarl
mov
fistpl
and
pop
inc
xor
xchg
xor
insl
mov
or
pop
xchg
icebp
pusha
and
or
fadd
jns
in
or
mov
int
xor
test
xor
push
or
push
sbb
sbb
push
cli
out
inc
sbb
jmp
xchg
sbb
nop
sbb
addb
and
push
fldt
cmpsb
mov
rclb
push
lcall
or
outsl
cmp
fwait
decl
xchg
pop
int3
arpl
daa
into
aas
inc
sub
testl
pusha
jl
cs
pop
mov
pop
sar
ret
jne
nop
outsb
mov
ret
jbe
inc
or
sbb
fwait
add
or
into
pop
mov
mov
and
or
lcall
xor
push
out
xor
push
sub
inc
sbbb
pushf
or
loopne
outsb
xlat
mov
jge
sbb
in
stos
insl
sub
incl
jle
cltd
cmp
jp
inc
or
cmp
ds
mov
pop
jno
int
sbbb
in
sbb
xchg
jge
xor
sbb
jb
out
sub
xchg
or
popf
sbb
ds
fucomip
adc
mov
rcll
dec
fneni(8087
mov
xor
xchg
aad
popf
add
jp
pop
loopne
js
jno
xchg
lcall
pop
jo
mov
aam
xor
icebp
dec
dec
mov
frstor
add
jns
mov
dec
push
negl
in
mov
in
xchg
in
lods
sbb
dec
in
mov
mov
fwait
adc
jno
xor
add
sbb
jl
pop
inc
dec
and
pop
cmpsl
inc
adc
std
cmpsl
movsb
aas
sbb
fstp
mov
mov
pusha
fldt
in
and
sub
dec
mov
sbb
pop
stc
sub
in
xchg
cmp
fsubs
fwait
jmp
ret
lock
loop
neg
xchg
mov
outsl
rolb
dec
inc
fs
js
mov
mov
iret
aam
cmpb
fs
out
dec
sar
or
dec
sti
fucomp
std
jnp
in
sbb
sbb
mov
push
repz
xchg
pop
jp
ds
movsl
pop
call
mov
xchg
mov
jp
dec
dec
inc
inc
cmp
inc
insl
sti
ret
sbb
fistpl
fmuls
daa
xlat
inc
mov
fsubs
mov
or
mov
xchg
arpl
adc
insb
repz
repnz
cmp
adc
or
fldl2t
mov
pusha
fwait
jne
jge
gs
xchg
add
xchg
arpl
adc
xchg
pusha
or
jns
pop
aad
xchg
dec
leave
sbb
pop
sarb
out
cld
fadds
xlat
sub
pushf
iret
loop
mov
inc
mov
stc
push
xchg
stc
jle
aam
ficoms
cmpl
fnstenv
pushf
jmp
xchg
sbb
push
sub
pop
popf
js
push
arpl
sub
sarb
push
xlat
insl
out
push
fimuls
mov
and
jle
mov
adc
mov
mov
dec
jmp
dec
cmp
mov
xchg
popa
mov
fsubl
adc
adc
jmp
add
mov
sahf
lcall
in
cmp
sub
push
sti
add
jl
into
testl
addr16
cmpsb
and
cmp
cld
pop
sub
add
dec
sti
cmp
loopne
mov
scas
inc
pop
or
push
cld
mov
popf
insl
pop
sti
pop
or
push
pop
dec
pop
scas
sahf
and
xchg
and
xchg
pop
pop
cld
jae
test
mov
sbb
call
in
cmpsb
cld
pushf
loope
into
sbbl
insb
movsb
loopne
sbbl
mov
sbb
cmp
pop
orl
cmp
gs
ficomps
and
cmp
rcrb
fldcw
and
loopne
inc
cmp
orb
aaa
popf
or
cmp
into
jmp
stos
test
jle
push
xor
cli
in
vaddss
sbb
repz
or
or
bnd
lods
stos
mov
mov
push
fnstcw
cwtl
pop
sarl
xor
pop
cli
repz
sbb
and
rcrb
fsubr
add
pushf
lea
fs
mov
xlat
loopne
sbb
jae
pop
sbb
neg
sahf
sbb
adc
dec
rcl
sbb
pop
dec
in
and
mov
sbb
setae
rcrb
cmp
dec
and
jp
rcrl
xchg
fs
sbb
inc
fcompl
cmp
mov
mov
ss
mov
fcomps
popa
sbb
xchg
sbb
movsl
inc
cwtl
and
sbb
inc
cmp
call
faddp
std
gs
fstpt
inc
and
push
inc
and
icebp
stc
sub
sub
stos
scas
cmp
clc
sarb
sub
cwtl
test
movsb
jle
cwtd
and
inc
lcall
addb
pop
sub
setl
fstps
mov
decl
and
inc
cld
cmp
inc
movsl
mov
ficomps
mov
dec
sti
or
loopne
in
add
test
sarl
loopne
mov
mov
sbb
pop
cld
clc
jge
cmp
jmp
mov
scas
dec
and
fmull
ja
xlat
add
push
test
cltd
cmp
stc
mov
out
lret
cwtl
and
std
daa
mov
adc
mov
sbb
pushf
xlat
lods
lcall
mov
sub
imull
jmp
mov
inc
movsb
cmp
test
enter
lock
mov
sbb
clc
add
pop
or
cmp
js
pop
push
cmp
lods
pop
add
jle
xchg
inc
cmpsl
sub
idivl
sbb
enter
jmp
aam
mov
xchg
mov
mov
or
xchg
and
inc
fidivrl
push
pop
jl
sbb
cld
inc
xchg
cli
pop
out
lret
inc
sbb
cs
fidivrl
fisubrl
ss
sub
inc
cli
sarl
adc
popf
cltd
adc
adc
pop
and
mov
jns
jp
jge
push
pop
data16
ficompl
fsts
adc
popf
sahf
out
push
fcomps
fnstsw
sti
ficoml
sub
ja
std
adc
mov
js
fistpl
sbb
popf
push
lds
sub
xor
ljmp
sahf
cli
sahf
cmpsl
push
xlat
imul
sub
cmp
lcall
add
mov
cmp
mov
sbbl
movsl
fs
pop
neg
popf
loopne
js
or
fcoml
stc
mov
popa
pop
fsubs
pop
mov
mov
outsl
pop
scas
pop
pushf
jle
xchg
stc
in
fs
sub
mov
pusha
out
cld
mov
fiadds
mov
fimuls
pop
cmp
xchg
repnz
mov
add
rcrl
pusha
sahf
ds
xchg
les
gs
inc
xchg
lret
cmp
popf
pop
mov
mov
outsl
and
mov
or
mov
sbb
and
cwtl
mov
mov
cli
and
sbb
sub
js
xchg
and
repnz
fcmovne
je
mov
push
loopne
cmp
cltd
jbe
mov
cmp
pop
pop
sti
out
cltd
sbb
loopne
shll
cli
notl
fcmovu
loopne
scas
xor
std
pop
sbb
pop
mov
mov
cmp
sbb
xchg
sbb
xchg
scas
xor
sbb
add
jns
jo
and
aaa
fcomp
fidivrl
lods
cs
mov
pop
flds
test
sbb
out
jl
icebp
fiadds
aas
push
and
pop
mov
mov
dec
dec
out
cwtl
inc
fnstcw
dec
loopne
mov
add
pop
cmp
mov
stc
adc
dec
xchg
mov
push
clc
js
mov
aaa
pop
popa
fdivrl
jnp
or
cmp
mov
xchg
clc
sub
pop
jge
mov
sti
and
or
and
sbb
dec
push
mov
push
pop
sbb
gs
sub
cmp
out
into
push
push
iret
inc
leave
pop
rorl
pusha
cltd
and
sub
fldl2e
clc
cmp
or
js
sbb
lods
inc
inc
pushf
and
push
fs
xchg
insb
or
adc
daa
scas
fwait
cmp
in
js
sti
ds
mov
jae
fsubr
sbb
and
adc
fwait
pop
popf
jns
js
inc
decb
mov
add
push
sbb
mov
out
repnz
mov
jle
sbb
xor
sahf
fidivs
pop
lcall
sbb
cs
imul
dec
into
and
sti
sbb
aam
mov
mov
imul
in
lcall
push
xchg
sbb
addr16
sbb
mov
fnstcw
pop
in
cwtl
clc
fists
push
mov
jbe
in
cmp
out
mov
fisubs
jb
inc
inc
pop
rcrl
lcall
ds
pushf
fldcw
mov
stc
mov
lds
sbb
fiaddl
jne
stos
call
add
lds
popf
jp
jl
lcall
cli
mov
inc
xchg
daa
adc
pushf
xchg
shrb
idiv
popa
mov
push
fidivrs
adc
lret
movsb
cltd
pop
adc
jmp
xchg
mov
cmp
xorb
pop
cmpsb
sbb
aad
and
sbb
add
hlt
cmc
adc
jnp
push
pop
dec
std
lcall
shll
dec
fisttpl
xor
out
inc
mov
xchg
cmp
push
fsubrs
and
fcoms
xor
imul
xchg
out
cmp
sbb
add
sar
or
and
adc
pusha
pop
sbb
adc
pop
mov
pop
jg
arpl
sub
lcall
and
gs
std
or
adc
pop
fcmovnb
cmc
mov
mov
je
sbb
sti
xlat
dec
or
pminub
and
daa
mov
mov
or
adc
call
clc
mov
jle
mov
jo
dec
fimuls
clc
lds
sbb
pop
adc
jl
cmp
repnz
popa
std
mov
pushl
dec
inc
pusha
loopne
mov
inc
jle
imul
sbb
jl
dec
stc
sbb
and
xchg
cmp
jae
mov
pop
ja
sub
mov
leave
xchg
inc
out
mov
clc
cli
inc
xchg
cwtl
and
and
in
mul
sbb
fnstsw
push
cmp
push
and
pop
sbb
jp
push
popa
mov
xlat
pop
pop
stc
test
cmp
insb
fcomps
movsl
arpl
or
mov
fcompl
jl
xchg
jle
bound
mov
fistps
cli
or
and
movsb
cli
rolb
popf
mov
mov
test
jle
js
mov
out
pop
mov
inc
sbb
jnp
das
gs
jle
mov
mov
mov
jnp
stc
jbe
imul
push
cmp
fcmovb
ficomps
inc
jle
sbb
or
mull
adc
faddl
sbb
inc
sbb
jp
pop
pop
cwtl
jge
ficoml
push
andl
into
sub
sahf
xchg
mov
aaa
jo
dec
pop
cs
clc
sbb
shl
stc
pop
pop
pop
mov
mov
push
in
pop
inc
jle
sub
jge
stos
imul
sub
or
bound
aam
pop
imul
cmp
fadd
sti
loopne
bound
mov
inc
out
and
jle
inc
dec
mov
fisubs
std
adc
aaa
sbb
mov
jl
scas
cwtl
dec
push
and
mov
hlt
mov
jns
cli
push
jle
scas
jg
pop
fwait
sarb
mov
inc
pop
out
mov
and
mov
mov
mov
xchg
bound
sbb
aaa
adc
out
pop
shlb
mov
mov
sbb
xchg
push
push
adc
mov
pop
hlt
and
sti
negl
push
mov
sub
icebp
cmpsb
sbb
fdivrl
stc
inc
addr16
pop
adc
cmp
js
push
jno
jmp
cmp
xor
incb
loopne
aaa
add
add
test
push
cmc
pop
push
out
cld
pop
fnstsw
jmp
in
sbbb
mov
idivl
mov
fdivrs
pushf
adc
aas
mov
cld
cli
icebp
and
js
js
and
rcrl
les
std
add
add
mov
add
fistps
jl
pop
xor
sti
and
xchg
std
clc
mov
cmc
cmp
mov
outsl
or
mov
or
pop
push
rcrl
outsl
push
lahf
bound
incl
pop
inc
cmp
cli
rcrl
fstpl
lods
pop
inc
adc
and
xchg
and
cld
rcr
push
cmp
stc
pusha
mov
inc
jl
mov
lods
pop
mov
nop
add
adc
mov
pop
movsb
in
mov
or
pusha
mov
popf
out
pop
fdivrs
int
loop
cwtl
pop
lret
sti
outsb
dec
xchg
pop
js
mov
ficompl
ljmp
cmp
xchg
sbb
inc
ficompl
fcomps
bound
pop
fs
jno
fdiv
cvtps2pd
in
mov
fldt
jo
push
pop
mov
cltd
mov
jp
sbb
inc
cmp
xor
inc
pop
stc
fdivl
pushf
jp
ds
dec
lcall
inc
daa
mov
ds
mov
roll
cmp
xor
add
fimuls
pop
cmp
adc
xchg
add
cwtl
mov
cmp
sahf
cmpb
xor
test
cmp
push
test
add
in
inc
adc
or
rorb
jge
jle
mov
outsl
sbb
pushl
in
add
sahf
xor
adc
test
jle
mov
cs
jg
sbb
add
ret
aad
mov
jge
cwtl
xchg
pop
mov
pop
sbb
inc
pop
sbb
xor
gs
or
fnstcw
and
push
stc
sbb
lods
adc
lds
pop
mov
lods
ds
jp
cmp
mov
cli
popf
dec
sahf
shrl
popf
mov
ds
sahf
jge
push
rcll
pop
stc
jbe
test
sarl
std
pop
add
jp
mov
adc
fstl
stc
leave
and
cmp
mov
xchg
xor
pop
cmc
adc
add
testl
fidivl
cltd
das
inc
in
fs
rcrl
inc
add
fmulp
movsl
fldl
fnstcw
add
jp
push
lcall
sbb
cmp
cmp
cwtl
cmp
adc
sbb
push
mov
in
lds
cld
aad
xlat
push
xchg
add
pop
mov
adc
push
xchg
mov
dec
inc
flds
sub
pop
xchg
dec
inc
mov
adc
mov
and
sbb
sti
push
pop
jp
in
push
and
jle
sbb
xchg
sbb
xchg
sar
negb
les
ficoml
sbb
push
jle
cmpsb
sbb
stc
das
loop
cld
jbe
pusha
std
cmp
aaa
add
lock
dec
cmp
scas
inc
mov
pop
pop
sbb
mov
jle
jle
repz
adc
insl
cld
add
inc
jle
int3
daa
roll
outsl
sbb
cmp
xchg
aaa
loop
ds
lcall
mov
xor
sbb
in
inc
jecxz
adc
dec
test
cltd
mov
push
popf
xchg
daa
in
pop
dec
pop
pop
inc
idivl
fisubrs
leave
inc
sub
mov
insl
hlt
sbb
sbb
je
popa
stc
out
or
xor
mov
popf
clc
inc
shll
fs
xor
mov
js
push
mov
rolb
inc
nop
jp
cli
into
cmc
sbb
int
cli
pop
add
pop
sbb
mov
pusha
call
jle
inc
mov
lcall
adc
sbb
andb
inc
mov
fnsave
es
ret
jge
jo
xchg
sar
jg
sbb
and
fmul
js
popf
movsl
jle
rcll
cmp
fnstcw
jg
push
or
pushf
xchg
jl
push
lcall
push
pop
sbb
mov
iret
sahf
fstpl
inc
cld
das
divb
out
pop
sub
xlat
mov
sbb
int3
aaa
or
push
or
jp
mov
and
loopne
mov
fstpl
pop
cmp
idivl
repz
mov
mov
xchg
fadd
dec
popa
fdivrl
imul
inc
out
mov
push
in
inc
sahf
cwtl
and
and
mov
mov
lcall
jl
lcall
fdivr
add
setns
cwtl
sti
lcall
mull
jl
cwtl
fidivrs
sbb
cmp
lock
add
mov
or
mov
sbb
cmp
pop
cmpl
push
xor
push
cmp
adc
sbb
pop
mov
call
mov
sbb
cmp
sahf
jns
xchg
adc
fdivr
pop
ds
test
leave
arpl
mov
fisubl
loopne
loope
mov
xchg
popf
rcl
fdivrl
jmp
cli
pop
mov
iret
mov
xchg
xor
xor
and
shll
out
jmp
mov
and
cmp
jl
outsl
pop
arpl
js
jge
fldz
jp
push
lret
lcall
mov
and
js
pushf
adc
sti
fwait
popf
insb
inc
jp
fstpl
fstps
fbstp
repnz
mov
sti
sahf
cmpsl
pop
sarb
adc
ds
lea
fwait
mov
xlat
cmp
lidtl
sbb
call
mov
in
add
cmp
pop
gs
adc
cltd
add
adc
push
xor
enter
sti
xor
adc
fstps
jp
pop
ds
mov
jle
cmpsb
insb
clc
adc
sub
and
aas
sbb
xchg
jge
xchg
xchg
mov
or
jg
sbb
cmpb
cmp
cld
jb
lret
xchg
add
xor
add
pop
xchg
fdivrl
mov
js
mov
lcall
mov
loopne
inc
pop
sbb
fistpl
std
pop
inc
mov
mov
clc
into
lcall
fstps
ret
xchg
xchg
fildl
sub
mov
and
and
rcrb
jo
mov
call
sbb
mov
mov
ficoml
ja
inc
inc
popf
pop
mov
mov
sub
sbb
fldenv
sbb
ljmp
js
sti
std
pop
lahf
js
cltd
cmp
cmp
mov
scas
sbb
addr16
mov
inc
fcomp
cmp
cmp
cltd
xchg
rorl
push
sbb
and
xor
out
cli
inc
pop
stos
cld
jecxz
pop
fcoml
add
insb
cmp
scas
xchg
fiaddl
or
sbb
cmp
pushf
call
or
fimull
add
ja
lahf
jle
test
fdivs
fidivrl
and
inc
scas
cld
popf
jecxz
mov
inc
sub
sbb
jp
std
inc
add
cltd
outsb
ds
dec
rcrb
cmp
lock
enter
ds
repnz
cmpsb
lret
pop
mov
fidivl
scas
pop
cli
push
pop
sbb
test
clc
fdivrl
lock
sbb
cli
mov
cld
sahf
xlat
pop
pop
dec
inc
fistl
adc
stos
pop
leave
cwtl
pop
cmp
incl
ss
pop
mov
lahf
cmp
lcall
je
arpl
orl
cltd
clc
adc
fimull
insl
jl
cli
cmc
cli
sbb
std
loopne
pop
sbb
pushf
inc
mov
fdivr
mov
pop
bnd
fisubs
sti
xor
in
bound
sbb
inc
mov
xchg
dec
fnstsw
aad
icebp
repnz
in
and
dec
loopne
notb
cwtl
insl
sbb
pop
sbb
popa
sahf
mov
inc
clc
pop
push
movsb
pop
pop
js
fdivl
mov
mov
cli
js,pn
inc
adcb
faddp
inc
pop
cltd
xor
jg
rcrl
add
mov
sub
cld
inc
mov
loopne
pop
adc
test
pop
aas
mov
cltd
adc
stc
pop
and
push
inc
clc
aas
sarb
cmp
sbb
into
fstpt
cli
jl
rcrb
pop
lea
cmp
nop
mov
add
pop
jns
cli
cmp
xlat
mov
sub
fsubp
or
and
lret
fnstcw
jae
lods
pop
and
xchg
cwtl
sub
sar
inc
lcall
mov
adc
adc
jns
sbbl
fiaddl
sbb
loopne
and
sbb
mov
sbb
jle
pushf
cmp
fcomps
cli
sbb
pop
fstpl
cwtl
sbb
mov
xchg
ss
jecxz,pt
mov
iret
xorl
into
sub
mov
pop
sbb
xchg
andb
mov
out
sub
mov
sbb
push
fdivrs
cmp
pop
fstpl
lcall
mov
fcompl
adcl
cwtl
mov
push
pop
sbb
sti
stc
cmp
dec
sbb
fiadds
imul
xchg
movsb
push
fnstsw
and
pop
lods
sbb
push
adc
inc
pop
fcoml
adc
cmp
gs
ficomps
fadd
pop
sbb
mov
mov
test
sbb
and
dec
lds
inc
orl
cmp
add
pop
pusha
add
sub
pop
or
cmp
sahf
data16
sbb
sub
cmp
popf
stc
loopne
add
mov
cmpsl
xor
aad
mov
ret
jns
pop
and
std
pop
cmp
clc
jl
sarb
and
pusha
cli
xlat
sbb
fdivrs
fistl
stc
dec
cmpsb
andb
fsubs
dec
les
pop
and
clc
push
jl
mov
js
mov
test
cli
fwait
jle
cld
imul
mov
out
push
notb
jl
sbb
sar
pop
fstpl
pusha
sbb
xor
mov
lock
sbb
mov
movsb
pop
pushf
pop
inc
cld
xlat
xor
jmp
cmpsl
mull
push
fistpl
lret
mov
pop
fwait
xlat
inc
js
pop
push
mov
push
inc
mov
sbb
std
shlb
fadds
pusha
cld
cmp
and
inc
inc
cmp
and
xor
rcrb
cmpsb
xlat
clc
pop
sbb
cmp
sbb
call
pmovmskb
std
rcrl
out
inc
jns
dec
cmpb
insl
xchg
mov
enter
fistps
cmp
adc
sbb
cld
popf
inc
cld
ja
cmp
lcall
cmp
jnp
sti
push
sbb
test
sahf
cmp
clc
sbb
mov
and
cld
ret
xor
cli
adc
testl
adc
push
push
fldl
int
cli
pop
jnp
jbe
fmul
fcomps
into
cld
out
sub
and
and
sbb
pop
cli
jbe
xchg
adc
mov
test
or
inc
mov
aam
jg
pop
rolb
push
jp
inc
pop
xchg
lcall
cmpsb
dec
mov
dec
lret
pop
sti
rolb
fistpl
outsb
add
sbb
leave
cmp
stc
pop
aam
adc
std
jns
and
test
mov
aas
fnsave
xlat
into
cld
xchg
inc
jecxz
ja
das
pop
in
jns
jl
cmp
js
xchg
out
inc
int
push
out
shlb
int
mov
cmp
iret
and
jo
and
gs
cmp
mov
pop
push
insl
jns
pop
pushf
push
mov
and
cwtl
mov
dec
mov
cli
xlat
pop
cmp
xchg
sbb
and
push
jge
fcmovnu
jl
into
fstpl
ljmp
mov
cwtl
ds
mov
nop
loopne
outsl
sbb
pop
sbb
adc
jp
sbb
stc
push
push
cmp
add
adc
inc
pop
jl
popf
mov
enter
mov
mov
into
pop
rol
pop
clc
inc
pop
fiaddl
cmp
push
insb
xchg
xor
nopl
xchg
push
pop
notl
pop
sbb
pop
pop
lock
and
mov
jle
aas
movsb
repnz
fs
sbb
call
sbb
cmc
cmp
add
sbb
cmp
jns
pop
loopne
xlat
fstpl
pop
xchg
fstps
dec
mov
lcall
arpl
cmc
mov
mov
ret
popa
push
mov
lcall
and
add
in
mov
dec
leave
mov
fs
les
ljmp
xchg
pop
fmull
sbb
stc
sbb
jmp
lcall
les
js
mov
rcrb
std
push
push
cmp
jne
roll
and
lret
mov
sbb
scas
sbb
jl
ds
std
fmul
loopne
mov
and
mov
lds
shl
mov
shll
inc
jecxz
into
sarl
aam
pop
sbb
cwtl
inc
cld
cmp
mov
out
sbb
loopne
xchg
inc
push
pop
mov
pushf
add
shrb
sarb
popf
lcall
and
sar
and
cmp
inc
out
and
mov
cmp
cmp
jmp
jne
sbb
lock
cs
adc
pop
testb
std
cld
mov
adc
popf
cmp
xlat
das
add
stos
fdivr
ror
ljmp
mov
push
icebp
adc
add
jecxz
xchg
aad
jnp
aam
enter
push
in
jg
idivl
dec
pop
sub
pushf
cs
js
jp
mov
cli
mov
clc
pop
sbb
jp
mov
lret
lahf
popa
jge
mov
add
fdivrs
jno
ds
rorl
addr16
jmp
sbb
out
mov
cwtl
std
and
fsubl
inc
mov
sahf
clc
pop
or
pop
cld
pop
and
push
test
add
aad
pusha
xchg
mov
js
movsl
ret
adc
mov
cmp
addr16
into
aad
mov
scas
add
cmpsb
fistl
pop
mov
mov
jo
xor
adc
pushf
mov
cli
xlat
inc
sub
iret
cmp
mov
cmp
icebp
bnd
pushf
clc
clc
mov
xor
sti
std
cs
popa
out
pop
cmp
cwtl
out
pusha
fistpl
data16
cli
sbb
lret
mov
pop
inc
imul
xchg
sbb
arpl
inc
push
fnstenv
pop
adc
addl
movzwl
mov
inc
pop
popa
sbb
inc
pushf
pop
push
movsl
xchg
jge
and
lret
fiaddl
inc
jns
pushf
inc
jmp
xchg
xlat
sarb
ss
dec
inc
shrl
movsb
inc
jg
dec
fsubs
mov
stos
mov
js
inc
pop
jle
and
daa
popf
das
stc
out
sbb
mov
dec
pop
and
cld
add
jp
ljmp
fwait
jns
push
sahf
neg
cmp
pop
int3
dec
jns
cmp
pop
cld
pop
mov
ficomps
push
xor
ss
cwtl
pop
adc
mov
jns
or
pop
std
repz
and
cld
add
push
sahf
cli
add
push
cmp
shlb
dec
xchg
jge
cmp
xchg
mull
cmp
pop
fidivrl
mov
push
cltd
dec
pop
popf
sarl
sarb
pop
cmp
js
inc
or
push
fsubr
fistpl
aad
andl
and
outsb
sub
roll
mov
sbb
clc
sbb
jae
mov
sbb
inc
sarb
xlat
stc
in
fstpt
jns
fsubs
cmp
test
pushf
fwait
cli
addr16
cmp
loopne
jge
jmp
sbb
rcrb
add
cwtl
negl
sbb
in
loop
loopne
or
adc
mov
js
cltd
loopne
jp
sbb
jge
popf
stos
aaa
mov
frstor
adc
sub
gs
test
pop
into
dec
shlb
js
cmpl
sbb
jg
inc
adc
sbbb
pop
pop
iret
idivl
mov
pop
or
cld
or
cmp
gs
pop
sbb
and
out
mov
lcall
add
pop
cmp
xlat
fs
sub
ds
int
pop
out
pop
daa
popa
pushf
inc
cmpsb
and
mov
sahf
cmp
leave
pop
punpckhdq
adc
add
sbb
cmp
push
xchg
push
mov
xchg
and
and
out
stc
pop
testb
cli
mov
cmp
leave
das
dec
fwait
add
mov
pop
loopne
sahf
sbb
addb
js
or
lret
jle
push
jge
cmp
aaa
pusha
sub
pop
push
cmp
pop
jae
cmp
cmp
push
test
mov
aas
mov
mov
add
mulb
mov
inc
cmp
sbb
pop
div
mov
mov
inc
rcrb
sti
adc
cmpb
push
push
pop
mov
mov
add
lret
mov
dec
mov
fsubrs
mov
mov
xchg
xchg
enter
lcall
pop
xor
cltd
and
into
xor
cmp
fmull
sbb
into
mov
and
sbb
mov
sub
push
js
and
jp
in
mov
pop
xor
popf
cwtl
mov
pop
pushf
rolb
mov
sbbb
mov
into
pusha
pop
pop
clc
sbb
std
shlb
sbb
adc
inc
sbb
and
cmp
mov
mov
in
nop
dec
sbb
fwait
sbb
in
jns
lcall
setns
fldl
pop
cmp
jp
pop
test
sbb
adc
sbb
mov
cld
outsl
xchg
lahf
and
sbb
in
inc
addb
loopne
dec
std
pop
cmc
jl
pop
pushw
sbb
xlat
notrack
mov
dec
rcl
cmc
inc
push
inc
xchg
and
mov
mov
movsl
add
inc
pop
jo
ds
pop
jae
jle
or
fstpl
popf
addr16
add
pop
inc
mov
fucomi
sub
sbb
sarl
fldenv
dec
sti
adcl
fwait
pop
fcmovnbe
xchg
mov
stc
out
xchg
js
loope
sbb
xchg
sbb
inc
jl
sbb
movntq
pop
pop
aam
adc
mov
push
lret
jns,pt
and
or
cmp
and
sbb
mov
bound
jl
push
xlat
les
pop
cmp
and
xlat
decl
call
sbbb
stc
fcompl
pop
popf
cld
negl
and
aam
xchg
inc
add
das
cmp
sarb
ss
scas
push
jns
iret
jmp
gs
fadds
sti
pusha
orl
sbb
sub
test
push
in
clc
and
push
inc
popf
popf
bnd
int
adc
notb
cmp
mov
inc
cmp
dec
jp
pop
fldl
xor
pop
out
sub
clc
sti
popa
cmp
rcrb
sbb
push
daa
lds
aad
xchg
dec
arpl
mov
mov
inc
cmp
xlat
and
out
cwtl
mov
leave
and
rol
gs
cmp
xchg
inc
pushf
xchg
add
stos
sbb
mov
sbb
rorl
xchg
std
fisubrs
bound
outsl
jle
std
sahf
mov
loopne
sarl
cmc
fildl
pop
pop
xlat
fdivrs
iret
jg
mov
sar
cmp
mov
mov
push
add
neg
cmp
sarl
pop
push
ds
and
cmp
jno
cmpsb
aas
cli
out
sahf
faddp
lret
ja
daa
into
jnp
xchg
xor
cmpsb
mov
call
stc
pop
fimull
nop
xchg
mov
jl
jb
sbb
pop
arpl
cmpsl
iret
cwtl
xor
cmc
mov
mov
adc
lds
or
push
mov
std
int3
jp
outsl
jge
dec
sbb
mov
mov
scas
loopne
aaa
sbb
in
mov
push
fnstsw
pushl
rcr
pop
fcompl
mov
push
aam
frstor
popf
mov
fidivrl
sbb
in
cltd
shlb
std
mov
call
and
cltd
sbb
leave
movsb
fcoml
push
data16
cmp
pop
sbb
fwait
push
mov
std
in
js
pop
insb
jle
pop
mov
in
jp
adc
push
adc
pop
mov
lcall
xchg
inc
js,pn
xor
jns
inc
jbe
in
mov
idivl
out
push
leave
jge
rcrl
cmpsb
ljmp
xchg
fdivr
sbb
mov
push
mov
ja
sbb
shlb
xchg
lods
pushf
in
pcmpgtw
cmpsb
cmp
inc
cwtl
rclb
cmp
adc
adc
aaa
inc
push
jle
jp
pop
or
mov
jne,pt
mov
cmp
addb
out
cmp
in
sahf
push
arpl
mov
cmpsb
repnz
mov
ljmp
mov
add
lods
popf
loopne
cli
cmp
cld
cwtl
jl
cli
cmp
mov
mov
fnstcw
sbb
js
cmp
sbb
push
jp
add
fs
xchg
ds
jae
cmp
and
lret
cltd
jp
push
sbb
push
sti
adc
movsl
jge
sbb
fnsave
and
pop
jo
popf
scas
int
popf
std
and
xchg
xlat
sbb
jle
stc
cmp
sahf
inc
popf
clc
jge
dec
ds
js
inc
cmpsb
pop
jle
outsb
imul
push
dec
jl
adc
clc
sbb
in
cli
pop
sti
sub
fidivrl
mov
pushf
mov
sbb
das
out
sbb
xchg
cmpsb
sar
xor
or
mov
idivl
sahf
or
aas
sahf
inc
popa
inc
mov
fs
pop
sbb
push
popf
out
pop
jl
std
cmc
inc
stc
jb
pop
pminsw
jle
adc
xor
pop
ds
mov
xchg
das
aad
xor
shlb
xlat
inc
mov
or
jae
repnz
sbb
cmp
mov
enter
sbb
sbb
pop
jge
pop
push
xor
ret
fstl
rcr
inc
inc
or
movsl
cmp
jns
mov
cli
mov
push
adc
sub
jae
mov
das
cli
pop
sbb
jmp
mov
pop
mov
fisubl
ficomps
pop
cmc
into
lds
in
adc
mov
sahf
and
mov
xor
cwtl
jae
aaa
add
dec
fsts
ds
je
xchg
jl
jbe
xchg
dec
xchg
add
pop
sbb
clc
pop
les
inc
xorl
jecxz
push
push
sar
frndint
pop
cwtl
jp
dec
ljmp
sbb
clc
cmp
sti
sbb
lds
mov
fstpt
pop
pop
mov
jno
in
loopne
fstl
outsb
jge
or
jl
les
cmpsb
adc
pusha
xchg
dec
inc
push
mov
mov
leave
inc
pop
cmp
fadds
or
testl
ds
lock
ljmp
dec
shlb
and
jl
fdivr
adc
ja
cmp
inc
clc
mov
daa
and
cltd
sbb
lea
mov
leave
xor
fstpl
mov
pop
testl
cwtl
arpl
fmuls
popf
jle
mov
rorb
cltd
in
cmp
push
cltd
jle
cli
arpl
mov
mov
dec
pop
outsb
cmp
inc
sahf
mov
cmc
mov
inc
in
cwtl
add
cmpsb
out
cmp
inc
fcmovnbe
or
inc
pop
mov
push
inc
int3
mov
ds
cmp
mov
cmc
test
mov
pop
xchg
ljmp
fsub
idivl
pop
sbb
sbb
cmp
jg
std
adc
fnstsw
adc
cli
pop
dec
out
fdivrs
imul
add
inc
adc
stc
adc
mov
sbb
adc
mov
aam
in
mov
clc
and
int3
sbb
xor
inc
mov
and
push
fistps
pop
ror
mov
out
loop
idiv
sarb
jle
push
push
push
mov
pop
dec
mov
mov
jbe
leave
cmpsb
push
mov
popa
sbb
jp
or
mov
mov
mov
out
add
inc
js
stos
fdivrl
fnstenv
aam
fmuls
mov
fldl
fs
les
and
mov
xchg
shrl
push
mov
cwtl
lret
lahf
push
cli
xlat
lcall
mov
cmp
cwtl
sbb
dec
push
mov
add
cmpsl
xor
lret
in
mull
das
popf
in
jle
movsb
fscale
cmpsb
fidivrl
movsb
push
sbb
mov
cmp
pop
sbb
lcall
add
adc
adc
sbb
dec
inc
sbb
inc
pop
push
icebp
fistpl
mov
popf
lods
cmp
cli
fnstcw
mov
cmpb
outsl
aad
repz
push
xor
loopne
pop
lret
inc
pop
enter
popf
std
popf
cld
xchg
jl
cmp
inc
out
mov
cli
les
xchg
inc
pop
xor
fisubs
jno
pushf
fldenv
pop
push
cmpb
cli
jp
out
cld
cmpb
nop
sbb
inc
lcall
enter
and
or
fcoms
mov
xor
sbb
repnz
inc
or
sbb
inc
sbb
jb
aaa
fnstsw
cmp
fisttpll
add
add
fidivrl
mov
sub
cmp
setno
call
lahf
push
push
popf
mov
pop
mov
cmp
mov
lcall
ljmp
and
pop
cmp
lds
pop
dec
sub
flds
jge
jnp
rcrb
mov
pop
cltd
jl
jns
fldenv
add
je
mov
lds
ficomps
mov
daa
aas
jp
js
repz
xor
loope
pop
cld
and
jp
xchg
enter
loopnew
in
dec
js
dec
cltd
and
adc
cmp
pop
sbb
inc
and
xchg
sahf
or
clc
cltd
jl
lcall
cmp
outsb
pop
jbe
adc
and
in
add
jns
inc
ficoml
mov
sub
mov
ds
mov
testl
sti
inc
dec
pop
repnz
adc
pop
sbb
in
cmc
daa
sarb
push
push
popf
adc
popa
sbb
pop
mov
in
fiadds
pushf
lret
cltd
or
jmp
js
orb
ds
lds
xor
sbb
fnstsw
fcmovnbe
cmp
push
sbb
mov
xchg
jnp
js
sub
or
adc
cli
sbbb
cmpb
ss
add
das
xchg
lock
mov
adc
faddl
add
ficompl
adc
rcl
jns
dec
mov
sbb
scas
movsl
mov
and
fidivs
cwtl
xchg
divl
clc
out
into
jbe
cld
xchg
mov
or
or
mov
fcoms
lcall
mov
std
cmp
js
mull
pusha
fcoml
cmpsl
mov
xchg
pop
pop
imul
inc
ljmp
push
mov
cmp
pusha
fstps
mov
out
pop
cwtl
mov
xchg
jge
std
ss
sbb
sbb
lcall
fidivs
mov
inc
popf
js
or
pushf
dec
lret
pop
js
mov
lock
std
stc
cmp
out
mov
pop
fwait
cmp
sbb
mov
and
cmp
scas
jle
mov
or
jns
cli
push
mov
rol
adc
cltd
adc
popf
cmp
jp
fistps
lea
popa
sbb
jg
jge
out
fdivrs
and
mov
sbb
jnp
push
lret
jp
test
std
sti
testb
jns
sbb
push
cmp
dec
daa
sbb
xchg
sub
in
cld
lcall
push
fcomps
cltd
jge
sbbl
sbb
in
mov
mov
push
pop
mov
enter
fldl
ljmp
or
daa
xchg
and
adc
or
mov
and
mov
dec
pop
add
mov
sbb
inc
mov
push
cli
mov
pop
cli
jmp
mov
pushf
mov
jge
cs
gs
cmp
popf
inc
ds
and
movsl
push
sarb
insl
xchg
cmp
push
in
adc
ror
sub
mov
stc
inc
cs
sbb
mov
pop
adc
cmp
pop
std
orl
icebp
mov
sbb
pop
jns
cmc
lcall
cwtl
subb
mov
add
sahf
movsb
adc
cmpsl
out
sahf
dec
adc
and
fidivrs
gs
push
clc
add
lret
fcompl
adc
pushf
popf
mov
pop
adc
cmp
es
jbe
pop
shl
mov
mov
jp
clc
cmp
mov
ja
test
sbb
cli
sbb
and
cmp
inc
sti
arpl
in
mov
mov
mov
sub
sub
aad
sub
pop
cmp
cwtl
arpl
int3
cmp
sbb
fidivrs
or
sbb
clc
lcall
pop
sahf
sbb
mov
cmp
push
cmp
add
testb
mov
and
mov
cli
mov
push
jp
andb
enter
xchg
and
xchg
mov
subl
and
dec
repz
push
popf
scas
pop
sahf
aad
and
aad
jl
mov
fadd
sahf
aas
js
push
fcmovnu
push
jle
cld
pop
std
and
sbb
inc
mov
jle
ss
or
pop
clc
jne
dec
movsb
rcr
decl
cmp
idivl
inc
pop
imul
pop
or
std
sbb
idivl
and
lcall
pop
pushf
jae
mov
mov
xor
js
jl
sub
pop
and
cmp
adc
pop
jl
xchg
push
sub
fs
nop
push
inc
mov
out
js
sub
leave
into
popa
and
mov
rcrl
xchg
popf
inc
fsubl
xlat
cmpsl
pop
aam
jge
addr16
pushf
insb
jle
mov
ds
sbb
push
loope
jp
in
add
fldl2e
xchg
cli
jl
fs
fldenv
je
cltd
pop
je
xchg
sar
sbb
adc
dec
cli
repz
mov
xchg
popf
push
into
idiv
pop
and
lcall
addb
ljmp
xchg
cmp
xor
mov
mov
movsb
and
xor
cld
jns
sbb
popf
stc
and
cli
push
sti
push
dec
frstor
mov
cmp
movsb
add
xchg
popa
fadds
inc
fisttpl
fimull
rcr
cmpsb
fdivrl
sbb
or
lods
lods
das
in
icebp
sbb
div
sahf
mov
inc
fdivp
cld
xchg
aaa
add
call
jg
mov
sbb
mov
push
adc
sbb
out
in
std
repnz
add
mov
xchg
pop
cld
sarb
sbb
push
add
inc
fsqrt
and
push
je
sbb
out
or
inc
sbb
jge
fwait
js
in
fnstcw
inc
sar
pop
sbb
cld
xlat
pushf
dec
popf
das
xchg
mov
mov
jns
and
mov
inc
mov
jns
sub
mov
sbb
mov
cmp
dec
popf
mov
out
loopne
cltd
sbb
les
scas
mov
mov
fdivrl
ja
pop
fdivp
cmp
mov
fisubl
test
mov
fstpl
bound
lds
aad
add
sbbl
inc
cld
pusha
pop
fisubl
cmp
sbb
sub
or
fldcw
pop
jl
cmp
push
fs
in
les
ja
jle
xor
cwtl
sahf
adc
sbb
sub
in
rcrl
adc
mov
mov
jecxz
fidivl
hlt
cmp
and
cmp
pop
stc
pop
cmc
data16
scas
jg
test
fnstenv
add
inc
xor
sarl
inc
sub
setle
pop
rorb
loopne
push
lcall
and
fstpt
mov
int3
jbe
inc
testl
lret
insb
push
mov
jle
fstps
lcall
pop
mov
xor
in
fstpt
push
je
les
mov
xchg
cli
cmp
call
repnz
xchg
mov
cltd
lds
repnz
cmp
ficomps
nop
pop
mov
icebp
jns
repnz
test
add
sub
jnp
les
sub
into
inc
sahf
scas
addr16
cmc
sbb
and
in
pop
pushf
decl
and
mov
sbbl
jne
sbb
mov
add
in
jmp
clc
test
sbb
adc
cmpsl
dec
scas
and
cli
fldenv
pop
inc
adc
push
js
cwtl
addb
mov
xchg
pop
outsb
jo
mov
cmp
sbb
fistl
fcompl
add
sub
popa
push
inc
popf
sub
mov
pop
fwait
jle
sti
cli
fisubrl
das
fsubrs
sbb
pushf
lcall
fldl
mov
adc
pop
aam
mov
cmp
mov
add
fildll
sbb
or
xlat
adc
cmp
xchg
cltd
sti
push
cmp
and
std
mov
cwtl
xlat
pushf
in
sbb
pop
sti
pop
mov
stos
cmp
mov
push
cmp
xchg
pop
mov
fmull
xor
rcrl
sbb
sti
pop
arpl
pop
pushf
daa
popa
and
jg
std
cwtl
xlat
dec
cmp
loopne
stos
inc
cld
flds
inc
ljmp
add
js
push
mov
add
outsl
add
sbb
int3
pop
dec
pop
rcrb
inc
fcmovnb
gs
fiadds
into
mov
mov
or
pushf
loopne
cmp
std
inc
fildl
call
jp
pop
pushl
push
lcall
mov
pop
cmp
cmp
ds
jmp
cmpsb
sbb
mov
and
dec
add
lcall
and
cld
loope
popa
cmp
adc
cmp
pop
add
cmpb
mov
in
xchg
into
jbe
xor
in
jp
mov
pop
mov
mov
imul
mov
mov
dec
std
test
aad
add
add
pop
cld
js
cmp
pop
ja
xchg
pusha
sbb
inc
mov
pop
sbb
fimuls
sti
test
outsb
mov
jmp
inc
test
pushf
mov
cltd
lcall
and
adc
ficomps
cmp
loopne
jne
xchg
pop
or
jge
mov
jo
and
jnp
dec
sti
in
in
add
fstpl
cmpsb
out
pop
cs
xor
jp
stc
jbe
cmp
mov
lcall
add
clc
jns
fistpl
popl
cmpb
inc
cwtl
sbb
cli
cmpb
jl
xchg
mov
push
add
fsubs
pop
cmpb
add
add
pop
pop
lods
xchg
lock
daa
out
arpl
add
jl
cli
ret
and
and
mov
cld
add
subb
movsl
cmpsb
std
pushf
jl
mov
es
flds
gs
idivl
mov
cmp
fistpl
insb
inc
rcrb
pop
rcrl
and
push
cmp
lret
dec
mov
sub
imul
xlat
inc
fcmovu
out
sub
mov
lcall
cli
and
push
cmp
adc
cmp
mov
add
popf
jno
sbb
je
andl
pusha
pop
jo
add
fdivr
sbb
inc
fbld
dec
jp
addr16
cli
jmp
popf
sbb
sbb
jns
push
pushf
mov
cli
faddl
xlat
mov
fidivrs
mov
xchg
cli
mov
out
cmp
adc
std
pop
or
add
adcb
dec
std
sbb
mov
mov
and
inc
adc
loopne
mov
imul
xor
out
sbb
cld
in
mov
fdivrl
out
jl
push
add
cmc
push
cwtl
lret
test
mov
and
sub
bound
mov
jns
pop
or
fcomp
lods
int3
fistl
and
jbe
js
movsbl
and
arpl
aam
sti
leave
xchg
cmp
stos
js
out
movsb
rcll
inc
comiss
jp
fidivrl
mov
dec
pop
pop
mov
stc
inc
push
sbb
and
mov
and
stc
push
add
and
mov
mov
sahf
adc
adc
inc
or
pushf
jns
les
mull
pusha
adc
stc
pop
fnstsw
repnz
sub
notb
and
xlat
mov
ds
test
pushf
jp
dec
xor
das
xor
adc
adc
mov
pop
enter
cmp
mov
gs
stc
inc
pop
pop
sub
fcomp
pop
mov
mov
pop
and
pop
sbb
addr16
dec
xchg
xchg
mov
add
nop
add
pop
pop
pop
sbbb
mov
int
sarb
cs
mov
inc
fiadds
fldenv
dec
sbb
fidivrl
pop
pop
popf
jae
aas
jbe
mov
sbb
cltd
cmp
sbb
outsb
sbb
dec
sarb
mov
pop
ficomps
mov
push
lods
in
sbb
push
mov
pop
and
sbb
rcrb
and
aam
fwait
js
fsubl
pop
ficompl
push
shlb
mov
sbb
cmp
mov
andb
lahf
mov
xchg
mov
in
test
fsub
pop
or
loope
sbb
pop
adc
sbb
mov
cwtl
sahf
or
notb
pop
ss
fnstcw
add
sbbl
inc
notl
fwait
pop
cmp
popf
dec
gs
inc
icebp
stc
add
fcompl
adc
outsl
sbb
stc
faddl
cwtl
idivb
cmp
mov
cmp
mov
or
roll
push
in
jo
clc
fucomip
int3
in
push
xchg
fsincos
and
in
fdivrp
jl
push
into
or
fcomp
cltd
push
dec
add
in
flds
pop
cmp
mov
pop
popa
test
std
xchg
cmp
and
les
or
pop
std
cwtl
sbb
xor
cmp
out
xlat
shl
push
lods
mov
jl
movsb
fs
inc
push
clc
loope
adc
mov
test
ljmp
fs
add
push
pop
and
xor
mov
add
pusha
loopne
sbb
clc
adc
add
sbb
mov
idivl
inc
arpl
jns
iret
and
sub
inc
mov
mov
test
dec
xchg
sbb
or
mov
stos
and
lock
adc
jns
pop
cltd
push
idivl
scas
popa
icebp
fcompl
pop
in
inc
cmp
sub
cmp
xchg
bound
arpl
repnz
cwtl
sti
dec
cld
jecxz
xchg
lcall
mov
dec
movsb
gs
mov
inc
hlt
and
cmc
addb
pop
pop
lret
lcall
jbe
mov
js
aas
idivl
mov
add
fiaddl
cli
add
sarb
in
in
or
ficompl
cmp
cmc
les
inc
push
mov
scas
lods
jmp
ficompl
cmp
iret
mov
inc
cwtl
pop
and
aas
cmp
mov
out
pop
sbb
mov
fldenv
jo
movsl
pop
sbb
popf
addl
aas
mov
jo
je
sti
cmp
xlat
adc
lret
add
fcmovne
lds
inc
sbb
fwait
cmp
add
adc
iret
cmc
in
sbb
lcall
lret
punpcklbw
inc
pop
fneni(8087
inc
fmuls
lret
add
fnstcw
in
ret
sbb
sub
xchg
push
das
xor
add
inc
popf
sbb
pop
mov
xor
xchg
pusha
popf
pop
pop
pop
sbb
cmp
bound
or
mov
cwtl
popf
rcr
inc
loope
inc
mov
mov
pop
fcmovnu
imul
daa
cwtl
lds
cli
fucom
std
jecxz
fdiv
outsl
xchg
fprem
or
add
bound
push
fs
sbb
int3
inc
pop
ljmp
adc
cmp
enter
jp
rclb
adc
dec
jp
bound
test
mov
xchg
push
idiv
add
jbe
sbb
mov
pop
adc
mov
or
shll
sbb
inc
cli
mov
fiaddl
sub
iret
inc
sbb
xchg
pop
dec
into
inc
cmpb
mov
sahf
cld
popa
divl
cmpl
cld
pop
jb
fdivrp
idivb
lcall
xlat
ja
ss
frstor
ficoml
fcomps
xlat
sbb
mov
bound
adc
das
test
cmp
loope
ds
and
adc
cmp
jns
pop
out
loopne
xchg
pusha
pop
mov
mov
out
sti
mov
insl
mov
lock
mov
cmc
jne
push
sti
sarb
arpl
pop
scas
int
popa
cld
out
js
sub
sbb
bound
fnstsw
jl
aas
andb
mov
cli
and
lods
sarb
pop
lcall
or
inc
popf
mov
pusha
add
fidivrl
jns
jbe
push
sbb
jle
inc
sbb
clc
mov
sub
aad
cmp
mov
add
adc
fdivl
push
lahf
inc
fcmovbe
out
mov
mov
mov
insl
sbb
cld
push
lds
cmpsb
rolb
inc
rcrb
sub
inc
jp
icebp
push
mov
mov
pop
mov
hlt
cs
mov
sbb
or
jg
jns
pop
or
and
out
fldcw
xchg
sahf
fstpl
mov
mov
and
gs
sub
clc
jp
imul
call
outsb
in
dec
mov
ds
cmp
fwait
or
fs
dec
scas
inc
lcall
pop
add
and
jns
movsl
fldcw
cmc
outsl
push
fisttpl
fdivs
jg
minps
cmp
mov
negl
fnstcw
or
sbbb
fs
jmp
and
xchg
addr16
and
mov
mov
pop
sbb
adc
sbb
test
fisubl
imul
cmp
lret
sub
cmp
cmp
mov
loop
xchg
or
jns
pop
xlat
push
xchg
mov
mov
int
aaa
and
sbb
push
jmp
xchg
fiaddl
pop
rolb
xchg
pop
push
mov
popf
scas
cmp
xchg
sbb
scas
mov
pop
push
push
shll
xor
and
shrb
jge
cld
xlat
lahf
mov
mov
gs
loop
cwtl
fidivs
movlps
js
pop
cs
push
pusha
fstpl
not
pop
and
sarb
jp
or
xorps
inc
sahf
sbb
fcomps
adcl
mov
lcall
stc
popf
sti
push
std
imul
jp
push
jp
movsl
pushf
cmovp
fsubrs
mov
in
cmpsb
mov
loopne
sbb
push
clc
leave
pop
jmp
jmp
pop
jge
xor
push
jbe,pt
sbb
sbb
out
pop
mov
push
adc
stos
sbb
fadds
scas
jle
jecxz
cwtl
xlat
sbb
fcompl
pop
ficoml
enter
jae
xlat
in
flds
mov
cwtl
outsl
pop
inc
std
rorb
ss
sub
dec
int3
add
ficoml
mov
sbb
dec
out
push
fdivrp
imul
lods
fdivrs
pop
out
sarl
jl
push
in
add
pop
sbb
and
fisttpl
mov
inc
fimull
out
iret
sbb
add
enter
fdivrs
jns
mov
bound
loop
mov
aam
into
pop
fiadds
test
xchg
jno
cmp
cmc
jns
jno
mov
addr16
sarb
dec
fisubl
inc
orl
fiaddl
push
mov
jp
cltd
rcrl
dec
in
dec
int3
out
push
inc
cwtl
ss
js
mov
pop
add
sbb
lret
mov
test
cmp
je,pt
sbb
sbb
jle
adc
mov
jns
cmp
push
lea
mov
pop
dec
push
pop
xlat
clc
jge
jle
push
cli
dec
inc
fmuls
mov
fcmovnu
cltd
pop
fcompl
adc
popa
sbb
pop
mov
fsubrl
push
xchg
xchg
push
sub
sahf
add
mov
outsb
jno
negl
adc
fsubs
enter
mov
jecxz
jb
loop
fstp
xlat
pop
inc
pop
cli
sti
lcall
adc
shll
fcompl
int3
push
inc
push
arpl
imul
xor
xchg
sti
cs
std
mov
pushf
ficoml
push
mov
jl
inc
jo
idiv
ds
pop
pop
iret
dec
adc
fwait
inc
xchg
or
and
popf
pop
js
or
fnstcw
xchg
je
pop
cmp
xlat
pop
pop
jp
clc
adc
xor
aas
jnp
mov
adc
lahf
imull
pop
ret
xor
leave
cmp
sbb
imul
stc
outsl
xor
mov
or
xor
call
sbb
cmp
pop
mov
fcoms
xor
stos
mov
sbb
push
js
mov
hlt
fcompl
and
clc
cld
arpl
and
imul
xchg
mulb
adc
and
mov
cmpsb
jno
jbe
ss
pop
pop
cmp
shll
fnstcw
adc
mov
pop
mov
adc
bound
jns
popa
and
out
pop
pushf
cmp
pusha
mov
or
je
orl
jns
shrl
fisttpl
aas
sarl
sub
into
call
pusha
fimuls
xchg
cs
stos
into
aam
cwtl
lock
cmp
in
mov
ret
sub
lea
cmp
add
stc
test
sbb
sbb
loopne
mov
mov
and
xchg
outsb
and
mov
jl
dec
and
shlb
sbb
push
aam
ret
out
ds
push
in
xchg
mov
cmp
aam
pushf
scas
xor
cld
ret
xchg
xlat
push
sub
xor
cmpsb
adc
lock
adc
pushf
fmul
lcall
lods
fucomi
sbb
jle
cmpb
sbb
cmp
push
sahf
sub
jle
in
dec
xchg
fldl
or
push
sbb
movsb
jns
mov
gs
add
pushf
sti
cmp
mov
xchg
push
mov
mov
test
xor
mov
rcl
into
xor
adc
sahf
cwtl
jp
rcll
fcmovnu
jge
mov
sbb
inc
xchg
popf
jno
or
jp
cmpl
adc
fcoms
sub
popf
inc
mov
push
inc
cmp
sbb
inc
cwtl
stc
dec
sbb
fnstsw
mov
mov
jnp
mov
rorb
mov
fcmovbe
jle
push
idivl
fdivrs
add
fisttpll
pop
popf
adc
push
pop
cmp
mov
xchg
shrl
subb
inc
pop
dec
cmp
xchg
adc
js
or
lock
mov
lcall
pusha
pop
adc
inc
aad
mov
orb
fiaddl
lcall
test
inc
insl
pop
inc
push
syscall
loopne
sbb
imulb
and
push
mov
pushf
jmp
imull
stos
add
fsubl
inc
lcall
inc
xchg
rcll
and
fisttpl
dec
add
addb
call
pop
mov
cwtl
clc
loopne
mov
lds
cmp
jmp
fcmovb
test
push
mov
mov
cmp
cmp
push
clc
aas
fidivrs
jp
inc
push
rolb
pop
test
mov
and
push
add
mov
fldenv
cmpsb
adc
and
cmp
mov
xchg
mov
mov
daa
stos
adc
xchg
sub
mov
cmp
movsl
inc
cld
jp
sahf
scas
fsubrs
inc
fdivr
xchg
testl
add
mov
sbb
movsl
int3
xchg
dec
rcrl
xchg
repnz
loop
add
xor
pop
fcmovne
adc
dec
arpl
adc
pop
mov
ds
mov
rcr
pop
fstpl
pushf
sbb
jns
das
jecxz
mov
gs
pop
inc
stc
xchg
and
notl
mov
xlat
shrl
scas
pop
dec
stc
loop
or
jbe
pop
dec
sbb
mov
pop
cli
or
rclb
adc
mov
adc
mov
rcr
or
mov
mov
jo
negb
daa
add
or
xchg
add
push
popl
pop
jns
mov
sbb
fstpt
fsubl
push
xor
int3
cmpsb
mov
jp
sbb
ficoml
data16
inc
pusha
jg
ds
add
test
sub
mov
cwtl
les
jle
mov
dec
mov
sub
push
sahf
bound
lds
or
popf
or
mov
fs
mov
lea
std
clc
mov
sbb
call
jbe
mov
jl
push
les
and
pusha
cmp
aas
mov
sbb
lods
sbb
cwtl
fdivrl
int3
jp
cmp
sbbb
in
loopne
aam
fcoms
aam
fs
rol
in
jae
jecxz
add
pop
inc
mov
int
out
pop
and
mov
sbb
lcall
sbb
mov
fiadds
dec
mov
movsl
sbbb
jg
loopne
cld
cwtl
mov
pushf
out
fistpl
sub
mov
sti
mov
xlat
cmp
repnz
push
xchg
pop
iret
std
test
adc
add
mov
in
pop
cmpsb
sarl
xchg
int
sub
fstpt
pop
or
jns
rcrl
add
mov
outsb
mov
push
mov
scas
pop
cmp
mov
xchg
inc
fsubrp
pop
jns
outsb
sbb
pop
xor
movsl
jnp
jle
sti
push
sti
std
inc
ficoml
out
pusha
popf
loop
sbb
sti
sbb
pop
shlb
sbb
mov
pop
orb
sti
pushf
fnsave
mov
ss
rorl
clc
pop
dec
mov
mov
int3
incb
jns
imulb
mov
subb
call
push
mov
sbb
mov
mov
and
fdivrl
cld
cmc
nop
leave
jge
sbb
mov
mov
pop
mov
mov
inc
out
jbe
inc
sbb
sbb
pusha
pop
js
dec
lcall
or
inc
stos
push
movsl
cmp
lret
push
aad
movsl
xchg
and
lea
ljmp
ficompl
cmc
sti
inc
sar
xlat
imul
adc
rcr
movsl
cs
ds
cmp
push
aam
mov
pop
fidivrl
icebp
movsl
fidivs
hlt
fildl
xchg
fdivrs
fldt
jecxz
hlt
fistl
xchg
and
insb
xchg
pop
fisttpl
xor
xchg
popa
arpl
sbb
add
dec
mov
jmp
xchg
pop
lcall
cmp
xor
cmp
push
jp
popa
push
and
sbb
fldenv
out
xchg
sarl
sbb
pusha
adc
xchg
pop
mov
fnstcw
jge
outsl
pop
pushf
lcall
das
gs
fsubl
cmp
add
stc
mov
pop
lcall
adc
fdivrl
gs
fnstcw
pushf
mov
or
pusha
push
push
call
dec
inc
pop
sahf
pop
popf
sbb
pop
stc
popf
scas
cld
inc
jns
xor
inc
rclb
xchg
js
sbb
pop
cwtl
cmp
and
cmp
cltd
sub
daa
mov
sbb
pop
lds
mov
sti
or
fistl
loop
cli
adc
cld
fwait
mov
fisubrs
add
sub
pop
das
loope
xchg
add
cmp
call
push
pushf
sbb
fcmovnu
mov
push
cwtl
and
imull
mov
shl
pop
aaa
pop
mov
adc
mov
dec
push
bsr
inc
test
xchg
or
mov
mov
lret
push
cmp
dec
inc
aas
inc
pushf
push
adc
fidivrs
test
sbb
push
out
and
mov
adc
xchg
cmp
inc
pushf
cmp
cmp
leave
and
and
cltd
fcmovnb
js
mov
mov
cmp
in
dec
or
fs
push
ret
pop
pop
test
and
pop
arpl
cs
cltd
int3
mov
sbb
xchg
mov
and
fdivrs
xchg
ret
daa
test
add
cmp
pushf
test
mov
pop
cltd
xor
mov
pop
pop
outsb
loope
sbb
in
and
jae
in
cmp
mov
mov
cmc
cld
sbb
push
push
pop
push
cmp
push
add
sti
sbb
jp
sbb
out
sbb
or
movsb
pop
add
cltd
jo
adc
clc
and
sbb
ja
std
pusha
mov
popf
xchg
push
imul
testl
bnd
jmp
pop
pop
shlb
repnz
js
inc
lret
ror
stc
lcall
and
andl
and
pop
xlat
fldl
cltd
sbb
shrl
jl
movsb
jle
xor
in
xchg
cmp
mov
push
jb
mov
lahf
mov
xor
adc
shll
inc
push
arpl
pop
cli
push
mov
scas
or
clc
mov
in
jle
loopne
mov
js
add
sarl
adc
ds
or
cmp
xchg
aas
aas
mov
mov
xor
cmp
pushf
pushf
cltd
mov
cld
jecxz
pop
cmp
sbb
fwait
sti
push
adc
xchg
pop
cmp
cltd
cld
add
std
notl
mov
loop
ds
jp
push
sti
jns
rcrl
xlat
pushf
cli
mov
movsl
cmp
sti
jg
jp
jmp
cmp
stc
xor
cwtl
inc
addl
mov
test
mov
out
jae
out
call
insb
cmp
sbb
jle
and
jp
lock
jne
cwtl
into
cld
mov
mov
xchg
mov
adc
fisttpl
or
jge
mov
bound
or
inc
imul
mov
repnz
pop
xlat
ljmp
out
adc
or
push
sbb
pop
mov
jns
jl
lods
mov
jmp
sbb
mov
adc
pop
mov
clc
std
lcall
js
cmpsb
mov
movsl
cltd
jns
int
xchg
pushf
pop
or
clc
inc
pop
stc
mov
mov
int3
sbb
rol
cltd
addr16
iret
sbb
push
cmp
adc
cltd
jmp
idivl
gs
or
fnstsw
sbb
or
sbb
push
cwtl
sub
xor
mov
sbb
mov
pop
xlat
sub
ds
rclb
test
xchg
movsb
cwtl
mov
sbb
ficoml
mov
cld
and
std
ficoms
insb
xchg
imul
loopne
fldenv
cmpsb
aas
pop
cmp
out
jge
jle
loopne
or
in
or
sbb
js
stc
cmpsl
add
stos
arpl
pop
sbb
mov
mov
arpl
jl
lea
call
pop
mov
mov
js
cmc
push
sub
mov
or
sbb
cwtl
dec
cmp
filds
push
fmuls
das
or
out
xchg
pop
fildl
stc
ja
cmp
fstpl
notl
mov
add
fsubl
sbb
pop
xchg
bound
xor
sbb
cmpsl
js
sub
lret
jp
fnstsw
cltd
aas
jle
xlat
dec
xchg
and
loope
cmp
cli
mov
and
and
jp
int3
cld
ljmp
push
and
xchg
mov
cwtl
mov
idivl
inc
adc
shlb
in
mov
and
xchg
cli
lcall
mov
push
pushf
lds
jge
les
pusha
or
jp
adc
dec
mov
jbe
in
pop
popf
lcall
or
xchg
sbb
jns
dec
or
pop
mov
mov
test
mov
cmp
add
mov
clc
addr16
aaa
rcll
inc
sbb
pushf
or
std
sbb
adc
fnsave
mov
lds
out
cltd
push
and
out
jle
cmpsb
sbb
dec
inc
out
jecxz
mov
into
sti
sbb
fs
mov
mov
mov
add
jle
cli
sbb
pop
lahf
aam
fcmovb
add
stc
cmp
sub
or
sbb
gs
dec
cmpsl
fs
and
inc
sbb
std
inc
push
or
and
jle
mov
cmovnp
mov
popf
xlat
sti
std
jo
push
cld
filds
clc
pushf
mov
popa
cmpb
xchg
mov
in
xlat
or
mov
enter
in
and
sbb
sbb
lea
imul
fwait
cmp
insb
mov
or
inc
push
sbb
or
pop
adc
fcomp
sbb
push
lock
std
loopne
xchg
cmp
push
sbb
jbe
sbb
or
push
xor
shrl
and
mov
mov
cmp
lcall
iret
pop
fstps
clc
pop
cld
mov
or
jle
mov
pop
and
mov
out
mov
out
cld
fmuls
sub
xlat
jge
and
mov
sub
jmp
adc
aaa
add
out
fidivrl
loope
sbb
dec
loop
inc
test
add
inc
sbb
mov
js
rcrl
sahf
mov
jno
pusha
and
into
cld
cmp
mov
add
sbb
repz
divl
and
push
or
cli
dec
xchg
std
cmp
mov
sbb
or
sbb
mov
mov
jnp
mov
xchg
xchg
sbb
mov
mov
popf
mov
jb
and
movsb
inc
imul
scas
andb
data16
push
mov
add
adc
jb
pusha
cmp
inc
dec
addr16
add
add
fcomps
dec
andl
push
stc
lret
xchg
dec
fstpt
push
add
pop
mov
fcomps
popf
decl
pop
sub
out
push
sub
add
xchg
pop
out
popa
fistpl
stos
rcrl
jle
cmp
dec
imul
dec
les
pushf
mov
lcall
adc
sbb
je
out
fiaddl
movsl
or
jp
pop
adc
cs
icebp
lret
mov
xor
lods
and
jge
add
mov
stos
lahf
insl
inc
sbb
jb
add
lret
insb
mov
rol
cli
jl
jge
pop
dec
or
js
popf
loope
fistl
jge
and
cli
rcrl
testl
inc
adc
faddp
adc
pop
pusha
jl
sbb
sbb
sub
jne
and
js
xchg
aas
fiadds
cltd
sbb
sbb
clc
xchg
and
decb
fsubp
add
xlat
pop
pop
lcall
arpl
mov
sahf
fst
or
icebp
imull
ficoms
flds
mov
jp
mov
sub
jb
xchg
and
pop
fwait
sbb
test
pop
stc
cmpb
jmp
sbb
add
mov
cmpsb
pop
cmp
fnstenv
aas
pop
loopne
sti
cwtl
cmp
cld
push
mov
stc
popf
mov
cli
pushf
push
js
ss
setge
mov
lahf
adc
jge
fistpll
popf
pusha
movsb
outsl
dec
fistpll
mov
pop
dec
mov
sbb
xchg
rcrb
xchg
add
mov
mov
cli
outsl
fmuls
pop
push
adcb
push
popf
popf
xor
push
mov
cli
aaa
loop
cwtl
sti
lret
xor
enter
pop
aas
push
mov
inc
cmp
mov
push
jae
cmp
xchg
sar
lea
ficompl
sbb
pop
shl
rcl
mov
pop
aas
or
and
sbb
push
and
rcrb
mov
xchg
ljmp
and
sbb
xchg
pop
push
jl
mov
pop
push
pop
clc
pop
popa
jle
ret
xchg
mov
fstpt
gs
mov
and
xchg
sbb
fmuls
cmp
pop
cmp
cmp
sbb
lock
bound
add
push
dec
fisubs
mov
ja
pop
sbb
rcr
inc
fimuls
pop
fcomp
bound
les
sahf
pop
cs
divb
pop
std
fsubs
cld
cltd
push
xchg
ret
and
mov
int3
lds
mov
jb
or
sbb
jne
scas
and
pop
pop
mov
sbb
enter
rcr
and
rcrl
test
adc
popa
cmc
dec
push
enter
nop
inc
xchg
movsb
add
push
mov
cwtl
push
pop
add
lret
cmp
mov
mov
loope
adc
in
sti
and
pop
cmp
xchg
jl
stos
notb
sub
cmp
bnd
mov
mov
iret
stc
and
jns
xchg
inc
cld
and
cmp
mov
cwtl
sbb
jg
mov
fiaddl
std
inc
fcompl
arpl
cmp
out
and
fucomip
dec
fstpt
loopne
sbb
pop
jns
jp
jge
pop
in
add
sub
push
and
sbb
pop
loopne
cmp
sbb
mov
jns
sbb
cmpsl
xchg
cwtl
stos
push
insb
add
test
xchg
jg
addb
dec
scas
jae
lret
bound
gs
sbb
bound
sub
lods
ds
xchg
loope
faddp
mov
in
gs
fisttpl
xlat
lahf
fcomi
mov
je
jge
lcall
testb
sbb
mov
and
faddl
insl
fcoms
cmp
test
stc
mov
mov
xchg
jae
repz
mov
dec
insb
mov
mov
leave
cli
sub
out
fdivrl
xchg
fs
js
jp
sti
xlat
cmp
int3
ficomps
xchg
icebp
push
bound
in
movsb
fimull
sti
leave
sti
sbb
js
and
sbb
repz
adc
gs
adc
ficompl
bound
dec
pushl
pop
pushf
mov
pop
push
add
pop
jge
sub
or
call
aas
movsb
xchg
call
mov
mov
jns
sbb
pusha
dec
mov
xchg
or
jmp
push
pop
pop
arpl
xchg
cmp
frstor
fsts
shl
add
js
out
rcr
mov
xor
cmpsl
cmpb
das
push
mov
cwtl
xchg
lahf
insl
stos
and
clc
pop
cmp
lods
ja
mov
sbbb
sahf
and
mov
inc
lahf
loopne
icebp
jge
popf
pop
xor
in
iret
fmul
jecxz
jbe
sahf
inc
sbb
adc
mov
mov
in
mov
mov
xor
and
sti
mull
ljmp
pop
pusha
in
or
aaa
out
idivl
pusha
push
mov
sbb
pop
inc
lcall
pop
add
cmp
mov
pop
shlb
mov
fdivrs
mov
jle
pop
pop
iret
xlat
out
idivl
decb
cmpb
hlt
jns
mov
shrb
push
sti
inc
xchg
adc
dec
add
push
rclb
in
popf
adc
mov
inc
mov
fisubrl
adc
cld
push
ss
outsb
jp
jo
mov
add
mov
cmp
pop
sahf
sbb
pop
out
js
mov
mov
leave
add
inc
mov
and
ds
out
fs
cmpsb
pop
push
fidivrs
or
decb
pop
mov
test
test
lds
mov
out
jle
pop
sbb
pop
fsubl
xchg
and
mov
sbb
fstp
and
inc
inc
out
pop
cld
ss
daa
push
test
sarl
pop
stc
mov
data16
sbb
sbb
mov
push
xchg
jle
lods
mov
inc
cmp
inc
test
cmp
fdivp
sbb
xchg
ds
jns
sbb
pop
std
rcrb
lcall
clc
adc
shll
inc
ds
sbb
sbb
popa
sbb
sahf
jp
mov
pop
out
clc
add
xchg
enter
adc
xor
sub
ds
fsincos
cmp
xchg
pop
arpl
pop
frstor
popf
outsb
insb
xor
sbb
cmp
int
stos
lea
fildl
or
mov
mov
out
mov
mov
cli
stos
sahf
nop
in
popf
add
fcomps
in
xchg
ss
mov
mov
mov
aam
jns
std
pop
enter
add
fcomp
sahf
lock
cmpb
xchg
rcr
fistl
adc
pop
pusha
lods
mov
clc
cmpb
mov
call
or
inc
add
sbb
lods
inc
mov
fstpl
xchg
pushl
sub
inc
push
std
dec
lds
xchg
mov
inc
fstpt
je
adc
ds
add
inc
fstpt
cmp
pushf
sbb
adc
push
std
pusha
clc
cmp
mov
xor
xlat
add
add
pop
pand
cmp
sti
lods
xchg
sahf
push
add
pushf
cld
iret
sbb
fimuls
jb
jl
cltd
mov
sbb
cld
loopne
pusha
sti
inc
push
cmp
add
mov
or
sbb
add
xor
gs
cltd
inc
std
cs
mov
jecxz
xchg
sbb
sti
cld
sbbb
xor
fdivrl
clc
popf
negl
cmp
sbb
fisttpl
fcomps
testl
xlat
mov
sbbb
sbb
scas
jmp
stc
mov
pusha
adc
dec
cli
pop
pop
sbb
clc
cltd
xchg
dec
ss
pop
or
test
aas
bound
cmp
insb
pop
mov
aad
and
stc
fstpl
cltd
jge
mov
repnz
fistpll
popf
lcall
sti
mov
clc
inc
dec
inc
fnstcw
cmc
cmp
mov
mov
mov
rcrl
stc
fistpl
add
js
pop
jne
lea
pop
dec
jge
mov
push
push
std
jns
cli
mov
adc
adc
rclb
adc
movb
fcomps
nop
jns
mov
mov
sbb
pop
xchg
or
movsb
pop
sbb
mov
stc
mov
sarl
pop
sbb
nop
mov
imul
fdivr
adc
sbb
mov
pop
xchg
sbb
aas
xchg
cmp
pop
jbe
cld
fildl
xorl
and
mov
pop
lds
push
cwtl
js
cld
pop
sarl
sahf
fsubrs
cmp
sub
jno
sti
fcomps
lret
push
sbb
or
mov
or
xchg
idivb
adc
std
fdivrs
mov
cmp
ja
nop
mov
mov
pusha
pop
aam
inc
cmp
cli
sub
jecxz
sahf
cwtl
clc
lret
mov
repnz
jbe
fisttpll
sbb
stc
fmulp
mov
aam
xor
js
pop
inc
and
add
jns
outsb
ja
jnp
mov
loopne
fimuls
mov
mov
out
lcall
cli
jo
xchg
scas
mov
and
mov
dec
in
out
ds
mov
push
fisubs
js
loop
pop
mov
cs
clc
cwtl
sbb
je
mov
loopne
push
mov
push
mov
cmp
stos
sub
jmp
inc
cmp
pop
cmp
pop
imul
inc
pop
cltd
mov
mov
sbb
mov
pusha
idiv
xor
sbb
mov
and
mov
adc
popf
jg
sbb
adc
lcall
in
sahf
idivl
std
push
and
test
push
pop
imul
jge
mov
popf
sahf
pop
sbb
push
dec
popf
jae
sbb
loopne
ficoms
mov
xor
ds
and
out
inc
popf
out
pop
sahf
test
adc
pop
in
mov
inc
pop
jns
scas
jl
in
cmp
cwtl
xchg
cmp
dec
cmp
loopne
std
arpl
cmp
test
sub
inc
mov
xlat
das
lds
pop
imulb
sbb
cmp
es
lea
mov
mov
jl,pt
mov
pushf
lds
pop
mov
rcrb
xchg
xchg
cmp
jp
int
cmpsb
mov
testb
adc
fwait
out
mov
into
lret
cmp
daa
in
push
pusha
out
jl
mov
xchg
pop
pop
ja
mov
and
pop
cwtl
sbb
sbb
dec
les
nop
adc
sub
cltd
fisttpl
adc
sbb
jbe
xchg
cs
pushf
inc
jle
leave
sbb
fcmovbe
sbb
fistpl
inc
cmp
mov
imulb
sahf
clc
jmp
xchg
call
sbb
sbb
push
mov
ficompl
dec
cmp
pusha
in
cld
cmp
mov
sti
and
sbb
out
sahf
push
add
sbb
inc
pop
fsqrt
mov
fsubp
stos
jmp
sahf
xlat
mov
ds
pop
inc
pop
jmp
mov
dec
cmp
cmp
xlat
pop
mov
push
push
inc
cld
stc
call
addl
pop
sti
std
push
jns
mov
sbb
jg
adc
cmp
adc
and
xor
and
inc
cmp
cli
adc
fistpl
sbb
insb
adc
sbb
std
xchg
sbb
add
outsl
repnz
popa
sbbb
pop
push
adc
cld
jp
cltd
cmp
clc
mov
mov
fidivs
sbb
pop
sahf
pop
adc
jle
cmpsl
add
cmp
xchg
and
lahf
sbb
mov
sti
loopne
push
das
int3
mov
push
and
shll
pop
inc
fdivrs
sub
cmp
stc
sbb
into
sbb
adc
lret
gs
stc
pop
pop
sbb
xchg
inc
stos
into
cmp
mov
std
mov
lcall
jp
mov
pop
lahf
incl
daa
and
std
sbb
sarl
cmp
ljmp
inc
jge
ret
mov
sbb
mov
mov
mov
pop
mov
shrb
enter
sbb
inc
sub
popf
pop
pop
in
faddl
and
cmp
cmp
pop
out
pop
xlat
cmp
pop
sub
in
flds
mov
cli
addr16
sbb
nop
sbb
mov
pusha
jl
mov
push
addr16
pcmpeqd
inc
cmpsb
ds
xor
jne
cmp
shll
test
cs
xor
fistl
pop
add
gs
outsl
mov
sbb
inc
insb
pop
sbb
fstl
pop
dec
and
mov
fnstcw
js
jg
test
pusha
sti
cmp
inc
cmpsl
orb
mov
push
std
rolb
xlat
call
xchg
aas
adc
pushf
mov
or
cmp
xor
sti
sbb
movsb
incb
xchg
fisubrs
fcoml
rclb
dec
pop
imul
push
lahf
adc
andb
js
out
push
pusha
jns
add
insb
cld
enter
sbb
sbb
mov
std
loopne
mov
adc
sarb
ds
into
out
pop
cwtl
loopne
fdivrs
mov
jge
iret
mov
pusha
lcall
adc
fwait
mov
bound
cmp
test
cmp
mov
pop
faddl
lcall
push
sbb
iret
inc
xchg
or
fdivrp
jo
aad
mov
pop
cwtl
add
and
rcrb
dec
data16
mov
jge
clc
or
sbb
lcall
fildl
mov
mov
aaa
sbb
cld
movsb
or
shl
cmc
daa
in
mov
decl
xlat
xor
mov
loopne
out
popf
adc
mov
push
and
cmp
pop
rcrl
lcall
sub
movsb
sub
inc
pusha
xlat
or
cwtl
dec
sahf
mov
bound
and
cmpsb
mov
pop
dec
fsts
xlat
cmp
dec
pop
xor
pop
addr16
int3
pop
in
sbb
jmp
bound
lahf
or
jle
mov
pop
mov
xor
add
popf
ret
sbb
sbb
mov
sti
bound
pop
push
fstpt
mov
data16
sbb
js
andb
cmp
cltd
jnp
inc
cli
cmp
xchg
mov
push
cmp
cmp
jge
cmpsb
fiadds
or
mov
andnps
cmp
adcb
sbb
imull
mov
and
mov
pop
std
jge
xchg
fsubl
iret
mov
push
inc
js,pn
xor
cmp
push
sbb
mov
sbb
pop
faddp
js
movsl
dec
pop
pusha
lret
xchg
mov
mov
loopne
aas
mulb
popf
pushf
pop
mulb
mov
jl
loopne
lock
inc
add
inc
inc
mov
test
fcmove
push
pop
dec
or
lret
shll
fs
inc
adc
push
cmc
mov
pop
negl
cltd
add
mov
in
inc
adc
popa
shrb
pop
mov
sbb
sarl
mov
sbb
xchg
and
mov
mov
mov
sbb
idivl
push
sbbl
jge
leave
mov
gs
fldcw
pusha
outsb
inc
pop
mov
into
xchg
lods
ficoms
sbb
cmp
mov
lret
aas
push
cmpsl
jp
pushf
dec
ljmp
sbb
clc
xor
ss
pop
inc
pop
pop
sbb
jge
fnstsw
cmp
std
sahf
shll
cmpsb
clc
sbb
inc
decb
cs
fs
mov
es
lahf
js
ds
jmp
movsb
push
or
mov
jp
or
shll
and
loope
dec
xchg
pop
add
xlat
sbb
mov
mov
insb
stos
out
cwtl
mov
dec
sbb
inc
pop
sub
fstpl
sbb
or
cmp
sbb
fisubl
cwtl
xchg
incl
pop
movsl
lcall
mov
jno
negl
ljmp
lea
cmp
lret
xchg
aad
fimull
push
sti
mov
shr
inc
pop
clc
xchg
inc
rcr
add
pop
std
sbb
popf
js
clc
mov
cmp
xchg
add
cmpsl
imul
inc
push
and
cwtl
rcll
gs
cwtl
sti
dec
movsb
or
xchg
jns
outsb
cmp
add
out
cld
mov
pop
sbb
inc
fwait
clc
mov
jle
stc
and
mov
xchg
xlat
push
mov
push
loopne
pushf
xchg
js
fistpl
cmp
imul
mov
fcoml
addr16
or
fimull
push
jle
jl
cltd
inc
clc
cmp
add
inc
xor
clc
push
pop
std
cmp
mov
rolb
or
lahf
fwait
cmp
sbb
out
xlat
pop
add
and
incl
fstpt
mov
stos
sbb
xlat
xchg
negl
out
bound
jbe
pushf
push
mov
sub
sub
add
leave
sbb
and
adc
cmp
out
fcompl
xchg
je
pop
ds
repnz
frstor
outsb
loopne
adc
mov
arpl
in
and
push
pop
ficoml
cltd
add
pop
xchg
les
fnstenv
out
cmp
fstpl
adc
xchg
mov
cltd
fadds
xchg
xlat
mov
jns
sbb
out
popf
js
pop
xor
shlb
pop
add
rolb
hlt
add
add
cmp
jge
inc
cltd
mov
add
or
lcall
adc
movb
pushf
cmp
xor
xlat
mov
in
sbb
or
mov
mov
cmp
in
inc
in
sahf
idivb
pop
lcall
fcompl
xchg
push
loopne
cli
ret
add
insb
lcall
mov
sbbl
dec
cmp
frstor
xchg
stc
or
sahf
jns
gs
loop
loopne
outsb
sbb
popf
adc
ret
cli
add
cmp
push
jecxz
and
or
cmp
push
sti
out
pop
fdivrl
mov
cmp
cmp
inc
push
pushf
fsincos
js
pop
cld
ljmp
mov
std
fincstp
and
jp
sbb
test
pop
fstpt
stos
imul
lahf
add
out
jns
sub
push
mov
cwtl
push
in
xchg
cmpsb
cld
mov
xor
pop
and
popf
nopl
in
not
xchg
sbb
shll
inc
fucom
or
mov
daa
daa
ss
pop
push
fisubl
sbb
sbb
inc
scas
and
pop
mov
xlat
mov
in
cltd
fdivrs
out
andb
fs
and
clts
jne
pusha
lcall
pop
sbb
jns
ljmp
sub
mov
sub
and
gs
stc
cmp
repnz
mov
stc
and
clc
pusha
shl
mov
jmp
adc
fisubs
and
lcall
and
push
pusha
cmp
testl
rcr
or
fst
adc
adc
imul
in
fbld
sub
jl
xchg
fldt
lcall
sbb
jge
mov
pop
js
xor
adc
stos
dec
adc
cmp
push
xor
jge
xchg
arpl
add
mov
inc
and
push
pop
sbb
aaa
fcompp
shll
jae
inc
fcomps
stc
in
sbb
js
cmpsb
jl
std
ss
jge
pop
fldenv
jp,pt
gs
cmp
mov
popa
xchg
mov
stos
mov
stc
inc
xchg
and
push
ret
sarl
jp
sbb
scas
cmp
push
and
cli
inc
fstpl
arpl
pop
pop
mov
bound
sbb
ficoml
mov
cmpsb
jl
cwtl
sarl
popf
int3
jle
pop
cld
mov
popf
sbb
pop
fcomps
and
sub
inc
lcall
fstpl
ja
push
into
mov
xchg
dec
xlat
bound
cld
mov
dec
mov
cvtdq2ps
inc
mov
xchg
mov
mov
ficoms
and
or
mov
pop
cmp
push
and
cld
xlat
push
fstpt
mov
cwtl
jbe
lcall
sub
rcll
pop
pusha
sbb
jle
dec
out
orl
in
or
mov
mov
incb
xchg
lods
mov
xor
xchg
nop
dec
cli
or
adc
add
in
aam
adc
push
mov
cli
popf
cwtl
les
mov
sub
test
repnz
and
adc
adc
sbb
scas
sti
sbb
std
cltd
cmpsl
fimull
adc
cmpsl
inc
cmp
pop
movsb
js
cmp
push
mov
pop
dec
mov
ficompl
xlat
sbb
mov
sbb
mov
push
pop
mov
jp
cwtl
sbb
push
popf
cmp
mov
lcall
jg
adc
das
mov
pusha
mov
ds
jae
sahf
sbb
insl
cmp
popa
sbb
cmp
sahf
xor
sbbb
inc
popf
call
mov
clc
fldl
cltd
std
cmc
cmp
xor
jle
cmp
ds
inc
mov
push
pop
and
adc
adc
xabort
pop
jp
mov
sahf
mov
into
and
cmp
enter
jno
lds
pop
fistpl
pop
adc
mov
mov
push
imul
inc
fcompl
add
pop
int3
lds
pusha
push
in
mov
xchg
cmp
fsubs
fcom
jns
inc
and
cmp
cmp
fisubrs
mul
mov
fsts
movsl
mov
adc
clc
sbb
add
mov
gs
dec
repz
cltd
ficomps
pop
aaa
mov
mov
les
pop
andb
shlb
ds
mov
fcomp
adc
add
div
cmp
sbb
cmp
mov
clc
in
pop
nop
mov
cwtl
enter
stos
pop
nop
add
push
lcall
faddl
pop
mov
cwtl
pop
xlat
dec
fisubl
jle
cmp
sub
popa
sbb
add
cs
pusha
cmp
popf
mov
nop
ss
sub
mov
lcall
dec
sbb
pop
outsb
repnz
lock
clc
cmp
and
add
xchg
movsb
std
or
push
xorl
clc
mov
ljmp
negl
xchg
mov
cli
push
mov
xor
inc
cmp
push
mov
pop
cmc
add
sti
cmpsb
pop
shlb
mov
fidivl
push
mov
inc
into
mov
push
sbbb
popf
testl
mov
jo
inc
pop
mull
and
mov
lods
mov
xchg
jle
add
mov
faddl
jge
mov
call
lcall
mov
mov
add
xchg
in
loopne
mov
lret
jl
mov
test
and
ljmp
lods
ficoms
cld
clc
xchg
ficompl
xchg
jle
sahf
movsb
jge
mov
rorl
mov
xorb
fidivrl
sbb
std
and
movsb
mov
popa
stos
and
aaa
loopne
inc
sub
pop
or
or
loopne
push
fistl
inc
fstps
xlat
and
fidivrs
inc
inc
sbb
sbb
leave
fnsetpm(287
js
mov
mov
out
stos
sbb
sbb
nopl
js
clc
sti
sbb
mov
sbb
mov
mov
notl
dec
xor
adcl
add
pusha
out
push
fcompl
cli
pop
jecxz
loopne
jns
stc
add
popf
pop
mov
shll
push
mov
mov
enter
loope
sub
jecxz
mov
or
mov
sarb
bound
add
sbb
test
pop
push
push
add
jp
or
pop
sti
das
in
pop
mov
mov
jge
lcall
popf
inc
rorl
or
inc
out
loope
push
sbb
inc
in
movsb
add
adc
testb
jle
add
in
push
pop
rcrl
xchg
mov
clc
lea
sbb
idivb
adcb
int
fdivrs
cmp
pop
ret
sbb
mov
inc
stc
jl
lds
call
pop
xchg
pop
in
dec
fs
fdivl
cmp
mov
inc
and
dec
cli
mov
repnz
push
cmp
bound
jle
inc
pushf
mov
addb
dec
push
insl
sbb
xlat
mov
lahf
adc
mov
sahf
mov
cmp
push
clc
adcb
add
insb
inc
repz
adc
clc
iret
negl
sbb
pusha
cmpsb
sbb
xchg
jp
pop
sahf
or
dec
cltd
leave
cmp
mov
daa
mov
ljmp
sbb
and
pop
fstpt
in
mov
inc
ds
cmpsl
jb
neg
cli
cmp
inc
jns
sahf
cltd
mov
bound
xchg
xor
dec
ds
adc
or
pop
js
cmpsl
aas
cwtl
jle
call
sbbb
loopne
pushf
in
cmc
mov
rcrb
cli
lret
popf
mov
por
cmp
add
jb
in
fstpt
push
into
hlt
sar
cmp
icebp
jp
sbb
push
sbb
dec
lahf
sbb
insb
jecxz
lahf
xchg
mov
adc
or
pop
pop
loopne
ss
mov
sbb
add
add
sti
mov
inc
std
mov
adc
mov
std
sbb
mov
cs
dec
mov
jno
dec
fsubl
xor
or
jns
inc
mov
xchg
std
or
in
lods
fistpl
je
aad
cli
and
cmp
movl
rcr
pop
mov
push
add
bound
inc
pop
push
fiadds
ja
cmp
jle
pop
cmp
sbb
adc
mov
cmp
push
cli
sub
push
arpl
mov
mov
iret
sbb
jp
clc
pop
mov
pop
add
pop
pop
cld
cwtl
lea
or
cltd
sbb
mov
add
inc
mov
pop
pop
hlt
and
hlt
and
ja
je
adc
shrb
or
and
orl
fidivrl
hlt
xor
stc
sbb
sbb
fstpl
pushf
xchg
fistpll
push
cmp
cltd
jl
std
add
pop
imul
fcmovnu
mov
xlat
ret
pop
testb
andb
sbb
xadd
jns
das
inc
sub
fisttpll
js
sahf
cmp
test
fdivrs
inc
ja
sub
add
xchg
lds
jns
pushf
inc
push
jp
fcmovnbe
push
push
add
sbb
adc
inc
sbb
push
lock
mov
sti
mov
add
insb
or
pusha
or
repnz
lcall
jno
jne
dec
lea
negl
inc
inc
xchg
cmpl
aaa
add
repz
xchg
pop
or
lcall
and
cwtl
test
xor
movsl
cmc
pop
ficoms
or
pop
pop
pushl
inc
outsl
adc
mov
pop
clc
push
mov
in
rcr
push
sbb
xchg
fstps
jmp
inc
je
xchg
sbb
jle
cmp
sahf
iret
mov
fmulp
sti
fidivs
out
jle
sbb
sbb
push
and
fadds
fs
sahf
sbb
fs
in
les
pop
fld
fldenv
rolb
xlat
and
popa
jp
pop
in
dec
gs
and
shl
cmp
sbb
ficoml
xchg
add
loop
mov
ds
push
rcr
std
sbb
xchg
fiadds
xchg
rol
push
xchg
sar
cwtl
lea
add
xchg
mov
clc
dec
pushf
mov
sbb
adc
adc
adc
mov
mov
jno
cmp
movsb
decl
inc
rorb
fdivr
pop
inc
cmp
andb
fistpll
jp
pop
jp
cmp
cli
fisubs
or
add
ss
dec
mov
or
pop
test
adc
sbb
push
adc
jmp
popf
pop
sarb
loopne
pop
cmp
negb
pop
cwtl
sahf
lcall
sti
fstp
mov
pop
dec
cmp
cmp
aas
popf
adc
cmp
inc
pushf
roll
mov
push
xchg
sbb
popf
mov
cld
stc
cmc
fistps
cld
mov
push
ret
fcomps
cmp
and
mov
fbld
mov
jp
fisubrs
pop
pop
or
addr16
add
fiaddl
rcl
cli
int3
sbb
in
sbb
and
mov
call
pop
xchg
sbb
pop
push
sbb
jnp
cmp
adc
mov
xlat
sbb
sbb
loopne
jmp
mov
mov
js
cmp
push
cmp
std
pop
addb
daa
shrb
and
cmp
add
push
mov
iret
mov
pop
cmp
and
cmpsl
sbb
cmp
rclb
mov
clc
pop
fmull
adc
les
cmp
notl
dec
pop
sbb
pop
cmpsb
cmp
cwtl
and
pop
ficoml
cmp
xchg
hlt
cmp
pop
cmpsl
add
ds
push
ss
mov
jp
dec
inc
cmp
std
mov
fnstsw
addr16
rcll
mov
mull
mov
js,pt
ds
cli
xor
sub
cmp
adc
fst
jge
pusha
pop
daa
mov
call
ja
stos
call
or
adc
sbb
add
fnstcw
inc
jle
xor
xlat
loopne
inc
fidivrl
fcomp
push
rcr
and
repnz
pop
popf
daa
fidivrl
cvtps2pd
pushf
std
mov
mov
pop
shr
cwtl
ja
adc
lods
mov
enter
sahf
sbb
fdivrl
outsb
mov
jno
xchg
lds
gs
inc
xor
sbb
adc
pop
inc
jne
pop
push
mov
sti
lcall
sbb
loopne
divl
cld
mov
mov
cld
jge
mov
sbb
sub
bound
jp
movsb
cmp
mov
dec
inc
rolb
mov
rcr
jg
sbb
jp
cltd
xchg
cmp
incb
sub
nop
fildl
cmp
cmp
rcrl
adc
adc
jne
jp
jge
aad
and
cli
push
lret
shl
mov
mov
lods
mov
sahf
cwtl
mov
sti
adc
adc
rorl
cmp
rcrb
insb
sub
loopne
lcall
ficomps
mov
loopne
daa
adc
out
cmp
int
fcmovbe
xorps
adc
mov
shll
pop
lahf
cmp
movsl
clc
sbb
adc
mov
imul
mov
mov
pop
adc
push
sbb
pop
fisubl
data16
push
movsl
and
push
cwtl
dec
popa
pushf
andl
sbb
push
jns
fstpt
sahf
lret
stos
ficompl
dec
adc
mov
inc
sbb
mov
sahf
sbb
stc
inc
pop
fsubr
mov
cmp
xchg
lock
les
call
xchg
icebp
sbb
xchg
adc
clc
or
mov
inc
fdivrs
jns
cmp
cltd
fs
add
imul
fdivrs
leave
scas
or
cld
cli
adc
cmc
mov
pop
cwtl
out
xchg
jge
cmp
cmp
push
insl
cli
mov
mov
dec
cmp
lea
add
pop
testb
and
or
xchg
sbb
or
and
dec
movsb
mov
or
or
fstpt
inc
pop
roll
sahf
sbb
inc
xor
fstpl
cmp
fdivs
or
and
idivl
daa
lret
inc
cmp
mov
mov
aam
cmp
cmp
xlat
leave
lret
test
clc
popf
movsb
ds
inc
push
notl
mov
pop
cli
out
pop
cmp
inc
fiadds
or
cmpsl
lea
mov
lret
fidivs
std
fcoms
xchg
cwtl
subb
add
pop
push
jle
popa
ds
gs
loopne
sbbl
pop
xchg
mov
andb
sub
mov
popa
stc
jns
mov
add
mov
pop
mov
ret
cmp
fdivrl
lcall
mov
mov
sbb
nopl
xchg
popf
adc
sbb
ds
push
imul
pop
rcll
jmp
pop
cmp
jmp
adc
rcl
cmp
stos
push
cld
fidivrs
xlat
xchg
int
ss
mov
addb
mov
aaa
cmp
sti
xlat
cwtl
inc
xchg
out
cwtl
mov
pop
fldenv
lcall
js
es
push
sar
aam
mov
mov
push
jge
sub
lds
pop
adc
cmpb
adc
jl
adc
and
ljmp
mov
mull
mov
stc
inc
fistpl
ds
push
or
inc
int
cmpb
pop
divl
repnz
dec
stc
add
cmp
fdivrp
cmp
jle
or
cmp
js
mov
test
loopne
xlat
add
add
jl
cmp
mov
jp
ficomps
push
ss
lcall
add
bound
and
fstp
xchg
mov
cltd
sbb
xchg
mov
fidivrl
dec
sbb
aas
int3
push
dec
fidivrs
mov
inc
pop
adc
sbb
or
sbb
mov
mov
add
inc
cmp
inc
xlat
mov
in
xchg
orb
xchg
inc
cmp
pop
mov
jns
or
mov
jge
inc
pop
scas
in
inc
cmp
and
jbe
or
popa
sbb
and
std
aam
xchg
rcr
sbb
jl
loopne
icebp
sbb
jns
mov
fisttps
loopne
mov
sbb
pop
loopne
jl
cmp
int3
and
fsubl
and
in
sbb
scas
pop
adc
cmp
loopne
mov
dec
and
mov
fld
xchg
popa
cltd
cli
fidivrs
enter
pushf
or
fdivp
adc
je
push
pop
sahf
mov
idivb
fcomps
daa
cli
push
and
add
cmp
nop
sbb
mov
push
cmp
in
push
pop
inc
cmp
rcrb
fisubl
cmpsb
mov
pop
iret
ss
or
jmp
mov
fisttpl
mov
lock
or
inc
stc
sbb
cmp
jl
clc
loop
adc
cmc
and
mov
jl
ds
cmpb
xor
sbb
add
mov
loopne
or
clc
push
fstl
lahf
pop
mov
pop
mov
insl
fcomps
cs
fsubrs
js
decb
push
fcomps
mov
ljmp
lret
and
push
lods
mov
xchg
pop
jg,pn
jns,pt
mov
sbb
xchg
scas
pop
fnstcw
ljmp
xchg
jns
sahf
ror
stc
sbb
idivl
inc
js
and
push
fnstsw
cwtl
add
out
and
cmp
cmp
pop
add
es
mov
js
push
ljmp
adc
ficomps
inc
je
mov
shrb
add
pop
ljmp
fdivrl
ljmp
sbb
pop
dec
pushf
cld
jle
in
pop
dec
test
sti
pop
jb
mov
pop
cmp
mov
pop
sbb
mov
mov
fisubl
lea
test
inc
push
jne
les
sbb
fstps
sbb
stc
sub
cmpsl
add
mov
pop
mov
sbb
not
pop
daa
sbb
push
mov
sbb
mov
inc
xchg
negl
aad
fldenv
dec
pop
subl
xchg
push
inc
mov
roll
sbb
ds
mov
add
sub
ljmp
mov
push
sbb
push
adc
fistps
outsb
sub
push
lcall
fcomp
repnz
jle
clc
add
dec
enter
push
mov
fwait
and
jge
js
mov
mov
mov
jl
dec
aaa
mov
frstor
jmp
lea
cli
ret
xchg
sbb
in
mov
cmpsl
pop
mov
cmp
sbb
loopne
enter
ljmp
fdivr
pop
mov
aaa
push
bound
pop
sub
notb
pushf
aas
xor
test
inc
xlat
fidivrl
data16
mov
jge
jl
lds
std
lcall
inc
jle
pop
push
fldenv
loopne
mov
out
cs
xchg
lods
das
stos
pop
lahf
inc
fdivrs
mov
mov
dec
inc
aad
into
fsts
roll
mov
sbb
push
jg
cltd
sbb
mov
sub
insl
sahf
adc
iret
xor
sbb
movsl
add
add
arpl
and
setge
mov
pop
mov
mov
jp
jge
repz
jnp
and
cli
int3
add
cwtl
xchg
or
inc
jle,pt
testl
mov
fdiv
and
sbbl
pop
jl
pop
jecxz
std
fsubrs
mov
aas
cmp
sub
xchg
adc
sbb
mov
and
jno
sbb
clc
fcomip
push
sub
lcall
sbb
pop
adcb
popf
pop
mov
es
xlat
js
sbb
addr16
pushf
push
sahf
xchg
mov
jecxz
xor
cld
ds
add
mov
dec
mov
sbb
cmp
in
pop
loope
add
fistps
sbb
fnstsw
arpl
jns
adc
into
js
sahf
imul
xchg
push
xchg
and
and
xchg
iret
lds
mov
and
std
js
adc
mov
sahf
stc
inc
sub
inc
jne
sbb
scas
fcmovu
mov
cli
popf
adc
idivl
roll
pop
mov
mov
push
pop
shl
dec
pop
adc
popf
mov
fcoms
std
idivl
cli
and
push
push
fs
add
add
gs
jmp
cmc
leave
sub
pusha
lret
stc
cmp
popa
mov
add
push
cmp
std
sbb
imul
xchg
lcall
sbb
push
inc
inc
aaa
mov
mov
jns
sbb
add
and
daa
or
cmp
sarb
sub
sub
popa
cltd
mov
out
shr
out
sbb
xchg
mov
pop
loopne
or
cwtl
jp
xor
daa
xor
pop
cmp
mov
popf
jge
cmp
cwtl
xchg
pop
ljmp
cli
cmp
jmp
add
cli
fidivl
repnz
and
mov
pop
and
das
fsts
mov
fwait
pop
cmpb
test
lret
scas
jne
aad
mov
pop
sbb
clc
and
jmp
sbb
js
mov
sub
jmp
lds
mov
sarl
jae
dec
daa
fimuls
push
adc
ds
fcomps
sbb
clc
std
fidivrl
clc
frstor
pop
lock
js
loopne
div
aas
fdivrl
sbb
aas
cmpsb
pop
jge
mov
pusha
les
xor
sbb
pop
ljmp
sar
mov
pop
jecxz
clc
dec
sbb
testb
add
mov
addr16
jg
sti
jbe
add
sbb
mov
and
js
stos
mov
std
jns
sbb
push
cmp
mov
mov
adc
rolb
dec
mov
sbb
pop
and
not
pop
adcb
sub
pushf
sbb
xlat
pop
cltd
adc
sbb
sbb
cmp
mov
push
push
lcall
jae
popa
jne
ljmp
lret
pop
aaa
pop
adc
jge
sbb
fsubrp
inc
lcall
sbb
sbb
mov
int
bt
out
inc
fidivrl
push
add
psrlq
popf
stc
std
fdivs
pop
loopne
sbb
xchg
adc
loopne
pop
outsb
inc
and
rcrl
pop
pop
aas
jbe
les
rolb
adc
aaa
jecxz
or
pop
stc
mov
mov
loopne
xchg
cmp
cli
and
cwtl
push
popf
movsb
fimuls
jle
fildl
fcompl
or
std
cli
mov
or
mov
pop
popf
fidivs
fcomp
mov
push
mov
xlat
dec
js
jno
popf
sbb
xor
sbb
mov
or
sbb
mul
imul
xchg
out
jl
cwtl
cli
sarl
popf
pop
mov
cs
cmp
lods
adc
lcall
xorb
mov
ljmp
xchg
test
ds
aaa
call
ficompl
inc
mov
scas
xchg
loopne
fs
cmp
push
mov
mov
pop
ret
fstpl
pusha
cmp
sahf
in
fdivrl
cltd
ficoms
cmp
adc
xchg
xchg
cmp
or
xchg
cmpsb
dec
jl
sub
int3
cltd
and
sbb
cwtl
leave
or
inc
mov
jmp
xchg
cltd
inc
js
lcall
bound
jbe
jle
push
sbb
pop
cld
fucomi
faddp
rcrb
jl
sbb
pop
mov
and
dec
repnz
jl
xchg
mov
add
fstl
movsb
jns
lahf
cmp
mov
jmp
in
push
sub
sbb
roll
cmpb
jg
push
fstps
sbbb
jo
xchg
pop
add
sti
std
sbbl
mov
fsubr
stc
mov
and
adc
jge
idivl
pop
cmp
mov
punpckldq
xchg
mov
jl
dec
mov
pop
sbb
fstps
lret
cmpsb
mov
ss
mov
shrb
mov
push
adc
lcall
mov
clc
imul
dec
xchg
dec
rcll
pop
pop
cld
popf
fimuls
jg
mov
xchg
pop
sbb
mov
push
xchg
sbbb
xchg
push
in
popf
ficompl
mov
jo
lahf
popf
cltd
adc
inc
dec
or
inc
jle
idiv
lahf
push
pop
push
sbb
fldenv
insl
arpl
scas
inc
push
pop
ja
pop
push
sbb
sbb
jo
inc
cmp
aaa
pop
fstpl
sbb
xor
scas
or
rcrl
push
cwtl
jge
std
pop
xlat
ljmp
std
test
sbb
cmp
rolb
repnz
jbe
jle
js
cmpsb
push
popf
lcall
cmpsl
cmc
xchg
pop
roll
sbb
loopne
fwait
cmp
mov
add
in
sbb
stc
pushf
movsl
sbb
sti
sbb
lahf
testb
jp
mov
or
jbe
rcll
pushf
dec
mov
fmuls
mov
and
adc
pop
pop
loopne
pop
and
pop
stc
mull
pop
fadds
cmp
jnp
xchg
in
xchg
sar
adc
mov
sti
fstp
cld
pop
xchg
movsb
outsb
aaa
push
adc
and
add
rcrb
data16
jge
cmpsb
mov
mov
arpl
pop
std
add
cwtl
inc
pop
pop
lcall
sahf
cmp
out
int3
pop
dec
daa
xchg
psubsw
fdivs
fld
jp
sbb
movsb
pop
fcoml
xchg
cld
cmp
fcomp
test
lea
test
or
mov
xchg
cmp
pop
mov
cmp
in
inc
test
cld
ror
insb
xchg
stc
out
adc
clc
sbb
mov
push
sbb
cmpsl
arpl
mov
jge
cmp
pop
pop
insl
mov
cld
jb
dec
fstpl
sub
loop
int3
jl
xor
add
mov
mov
out
sbb
pushf
mov
pop
sbb
xchg
sbb
std
mov
cs
lods
xchg
cmp
stos
emms
ficomps
fidivrl
push
loop
xlat
into
mov
imul
cmp
arpl
sbb
je
mov
fsub
dec
loope
jb
ljmp
aam
jo
or
add
fldl
cmp
fldenv
sbb
ret
ja
adc
pop
stos
aaa
adc
pop
fwait
pop
xchg
mov
xchg
jmp
das
or
out
xchg
std
mov
xchg
loope
mov
stc
mov
jbe
xchg
push
fsub
xchg
cmp
lock
xlat
pop
or
adc
jle
std
add
popf
clc
pusha
pop
sbb
aas
scas
mov
xlat
cmp
ds
adc
jle
and
cld
mov
mov
xor
aas
and
add
add
adc
adc
adc
cltd
dec
mov
cwtl
dec
fbstp
cmp
inc
stc
test
data16
divl
cmp
mov
pop
test
fdivrl
inc
pop
iret
aam
daa
fiadds
push
add
clc
test
cmp
mov
inc
add
fsubl
fistl
sti
out
mov
lea
mov
mov
test
pop
or
xchg
inc
sbb
inc
ffreep
cmpb
fs
xlat
pop
data16
mov
ds
or
inc
outsl
fisubs
popf
xlat
std
pop
adc
clc
sti
cwtl
jbe
mov
notb
xor
inc
enter
xor
jge
jmp
cld
jbe
jecxz
dec
fwait
adc
mov
push
sahf
push
fnstcw
rcr
mov
or
rcrl
lods
ja
or
mov
adc
mov
loopne
bound
movsl
cwtl
sbb
adc
jp
xchg
sbb
add
sbb
clc
arpl
dec
pop
popf
jp
add
sbb
xchg
sbb
sub
cmpb
fldcw
into
pop
into
xchg
out
popf
mov
mov
adc
jnp
inc
mov
xor
mov
icebp
leave
cmp
aad
dec
mov
sti
sbb
mov
clc
jmp
addl
clc
loopne
cli
pop
mov
sbb
loope
js
fiadds
cmp
mov
aaa
stc
ds
test
sbb
cmc
sbb
lods
mov
sarb
into
xor
daa
pushf
shrb
ds
int3
mov
pop
call
add
ss
sti
mov
ljmp
mov
into
mov
push
and
add
mov
gs
mov
and
popf
sub
xchg
add
and
mov
or
pop
pop
sbb
pop
mov
pusha
cmp
dec
mov
cwtl
mov
stos
lds
jge
ljmp
js
cmp
mov
fcom
mov
push
pop
jge
pushf
sahf
movsb
sbb
pop
or
fcomp
lcall
mov
inc
mulb
inc
and
jns
pop
jle
jmp
clc
iret
mov
fsubs
sbb
or
xor
adc
xlat
fcompp
sbb
stos
add
std
push
fcmovnb
pop
fnstcw
les
xchg
insb
popf
stos
sbbl
and
inc
and
xor
into
pushl
mov
cltd
jl
jae,pn
pop
in
lcall
add
and
int3
pop
pusha
adc
inc
mov
movsb
dec
movsl
adc
call
and
xchg
mov
js
jge
add
out
adc
gs
mov
cmp
sbb
jae
pop
shlb
ficomps
stos
jne
into
psubd
jns
sahf
pop
mov
cmp
pop
out
fstps
sbb
sbb
mov
loopne
pop
and
cmp
jle
xchg
sbb
pop
out
jl
pop
and
push
loopne
fistpll
pop
jnp
jle
and
fldl
test
xor
pusha
cmp
loopne
ds
fwait
cltd
cmpsb
rcrl
out
push
mov
push
sahf
jp
xchg
cmovg
pushf
cmp
js
movsb
leave
xor
filds
or
sub
loopne
xchg
xor
cli
ficoms
mov
ret
fbstp
lcall
and
scas
cld
jbe
fidivrs
xchg
cmp
jb
fisttpll
js
popf
faddl
sbb
adc
adc
dec
sbb
fistpl
add
stos
mov
fldl
pop
sbb
xchg
xchg
shr
jge
loope
inc
movsb
pusha
inc
add
inc
sub
incl
lods
loopne
push
sbb
xchg
pop
mov
mov
outsb
fucom
js
cld
mov
popf
lcall
pop
out
or
stc
mov
cwtl
dec
lret
mov
xor
and
jmp
sbb
fidivrs
loop
mov
sbb
fs
js
cmp
sub
fidivl
cmpsb
add
xor
cltd
cmp
xor
sahf
sub
mov
adc
popa
js
adc
sbb
shr
cmp
xchg
cmp
pop
mov
cld
and
sahf
fiaddl
mov
repz
lds
mov
xor
movsb
add
mov
imul
repnz
or
and
mov
fwait
sbb
cld
push
add
jo
dec
cmp
out
fildl
inc
push
dec
bound
jg
jns
or
push
lds
jae
aam
or
sub
fmull
stc
cmp
add
add
or
push
sti
leave
xchg
mov
dec
cmovnp
mov
pushf
das
sbb
sahf
inc
ficompl
fimuls
outsb
mov
jle
popa
setl
push
hlt
sbb
loop
sbb
xor
popf
cmp
xchg
pop
fsub
cli
repnz
mov
fstpt
sub
pop
fstps
lcall
arpl
jp
aad
and
sbb
inc
cmp
imul
adc
mov
pushf
rcrb
std
mov
ja
cli
jl
sbb
fdivrl
push
mov
into
shrb
xadd
sbb
inc
pushl
jg
fidivs
sbb
les
pusha
and
push
movsb
stos
popf
inc
pop
jge
cmp
cmpsl
dec
mov
push
popf
sti
cmp
mov
stc
js
out
cmp
jge
cmp
pop
jle
mov
in
fs
mov
fcmovbe
addb
cmp
and
pop
mov
pop
cmp
inc
int3
sbb
scas
sub
dec
ret
pop
dec
jg
mov
pop
js
sbb
std
adc
inc
xor
ffreep
xor
mov
pop
and
fmuls
out
and
cmp
xlat
movsl
lds
mov
movsb
lcall
sbb
cmp
xlat
pushf
test
sarl
mov
mov
dec
rorb
pushf
js
push
mov
out
or
dec
ljmp
jbe
cltd
sbb
and
sbb
mov
add
in
cltd
test
push
das
loopne
repz
mov
jl
andl
test
or
xor
sti
push
lcall
hlt
testl
adc
mov
sbb
cmp
sbb
mov
adc
and
repnz
and
cli
xor
je
xchg
sbb
add
pushf
xlat
jle
pop
inc
aam
sahf
sbb
cld
mov
xlat
mov
dec
lcall
movb
jle
orb
cmp
pop
pushf
and
dec
ljmp
fstpl
inc
mov
sbb
mov
cmc
movsb
sti
popf
gs
aam
scas
hlt
shl
mov
mov
sbb
mov
loopne
ds
mov
mov
ficomps
icebp
adc
cmpsb
std
pop
cli
mov
jge
mov
add
cltd
pushf
fidivrs
adc
sub
lds
cmc
adc
sarb
xor
push
xor
pop
inc
stos
pusha
sbbb
fidivrs
sbb
jnp
imul
mov
negb
mov
pop
sbb
jns
add
xchg
fldenv
and
inc
mov
cmp
mov
int3
loopne
imul
jp
fdivrp
mov
jle
and
or
cmp
mov
mov
and
cli
pop
mov
sbb
fs
xchg
dec
mov
cmpl
pop
pushf
cmp
jle
iret
les
cli
repnz
pop
jp
mov
cmp
fcoms
cmc
fs
std
sbb
xchg
jge
repnz
and
sahf
loopne
cmp
mov
mov
testl
or
push
lds
rolb
jno
add
mov
sahf
xor
mov
mov
inc
pop
or
pop
fcmovb
stc
lcall
cmc
pop
fcomps
popf
cmp
add
dec
mov
pop
push
pop
mov
dec
testb
inc
or
sbbb
pusha
push
jb
jge
pusha
and
pop
sbb
add
cwtl
cmp
call
add
pushf
and
hlt
cmp
movsl
rclb
scas
loopne
rcl
mov
les
sahf
rorb
push
cmp
fstpt
mov
adc
jle
mov
loopne
lcall
xchg
outsl
pop
ds
cltd
push
fcompl
mov
mov
xchg
lret
scas
nop
imul
lahf
sbb
push
push
inc
pop
pop
popf
popf
xchg
mov
faddl
mov
movups
fs
cmp
les
pop
adc
mov
sub
lods
pop
jnp
inc
jp
mov
cmp
sbb
adc
sar
fdiv
mov
out
in
out
movsb
jns
inc
cmp
push
mov
popa
bound
inc
jl
sbb
jmp
lret
cmp
sbb
lcall
and
xchg
mov
shl
pop
cmp
idiv
ljmp
and
adc
test
xchg
ds
dec
lcall
pop
idiv
cmp
loopne
or
jp
nop
and
adc
ja
or
sbbb
pop
pop
pop
in
jp
popf
inc
call
mov
mov
arpl
fists
jle
stc
std
mov
mov
sbbb
sar
ja
mov
cmc
insb
pop
insl
lcall
andl
clc
jae
lcall
cmp
js
cwtl
cmp
add
sbb
call
inc
clc
loopne
fadds
loope
push
repnz
or
and
jge
or
push
pop
adc
out
pop
stc
rcr
jmp
inc
dec
xchg
orl
pop
sbb
and
mull
mov
mov
pop
js
pop
xor
fyl2x
push
push
les
arpl
jle
add
add
sub
cmpb
pop
lds
pop
cwtl
sar
mov
sub
sub
xor
hlt
pop
inc
fcomp
ficompl
push
bound
mov
mov
jl,pn
sbb
xchg
mov
fs
movsb
add
jp
aad
sbb
leave
pop
pushl
dec
testl
jle
jns
dec
scas
jge
pop
nop
rcl
rcrb
aaa
mov
jbe
mov
and
sti
jmp
xor
pop
cmpsl
negb
and
pop
mov
cmc
and
cld
or
adcb
sbb
rolb
xchg
fldl
out
mov
mov
and
mov
adc
and
xchg
stc
in
xchg
cli
sbb
aaa
jecxz
sahf
add
xchg
mov
mov
lds
pop
pop
mov
cmp
mov
pusha
jns
in
inc
jb
pop
inc
rol
cld
repnz
adc
jl
adc
add
inc
test
out
mov
sbb
mov
or
sbb
inc
fs
fcomp
mov
adc
mov
push
adc
daa
dec
insb
cmpsb
sbb
mov
mov
or
adc
pushf
cmp
push
js
in
aad
jle
cmp
push
sbb
ret
pushf
sar
lret
in
push
fwait
sbb
inc
and
inc
and
push
add
jae
and
sti
sbb
js
jb
lea
add
xor
pop
popa
frstor
sarb
daa
clc
fdiv
xchg
stc
pusha
cmc
mov
cwtl
mov
ljmp
and
sarl
jae
gs
sti
idivb
ret
push
pop
cmp
mov
ds
xor
fistpll
add
cli
cmp
daa
cli
fdivrl
xchg
jecxz
jmp
out
fsubr
enter
cmp
jge
pop
pop
daa
adc
inc
outsl
mov
mov
cmp
bound
pushf
push
inc
mov
ds
pusha
stc
jp
aad
mov
dec
xor
mov
int3
mov
sub
push
sbb
pop
lds
or
sbb
sub
sbb
in
js
adc
sahf
adc
ficoml
mov
mov
rorl
fwait
stc
cmc
mov
mov
lcall
pop
dec
scas
inc
bound
dec
ret
fstp
adc
sahf
dec
add
jle
cmp
lock
pop
xchg
cmc
adc
pop
mov
cli
jae
fdivrs
pop
add
sbb
sbb
dec
or
mov
ficoms
mov
sbb
push
dec
stos
pusha
sub
fstpt
stos
das
sub
sbb
mov
rcl
inc
rcrl
popa
push
pop
mov
pushf
mov
adc
inc
clc
sbb
fiadds
sbbb
push
pop
xlat
adc
mov
cmp
fcompl
insb
lods
aam
in
or
pop
cltd
into
out
pop
scas
jl
inc
jle
ficomps
inc
fsubl
and
sub
es
sbb
cmp
dec
aam
xchg
pusha
cmp
pop
inc
jl
mov
incl
data16
jae
and
popf
xorb
xlat
lds
mov
inc
inc
sarb
cmp
pushf
cwtl
and
pop
std
cmp
negl
lods
ficomps
sub
push
pushf
rcll
add
cltd
fstps
mov
mov
push
inc
xchg
xchg
dec
and
sbb
pop
sbb
inc
ds
cwtl
pop
sahf
fldenv
testb
add
js
pop
sbb
push
inc
or
sbb
popf
push
jl
imulb
cli
mov
faddp
cli
sbb
fidivrl
sarb
es
sub
and
push
sub
mov
jge
sbb
cmp
in
inc
xlat
pop
loopne
sbb
jl
and
mov
mov
mov
and
cmp
pop
mov
int
push
leave
mov
and
cmp
sub
xor
cli
mov
or
add
sub
aad
jns
cmp
add
xlat
adc
push
pushf
mov
fstpl
cltd
cmpsl
pop
scas
cmp
mov
adc
xlat
fistpll
nop
adc
cmpl
push
pop
lcall
push
rcrb
popf
sbb
sbb
js
das
les
mull
testb
fmull
cltd
xchg
inc
or
adc
rcll
push
pop
mov
cld
mov
and
adc
adc
sbb
clc
or
sti
shlb
cmc
ret
std
add
push
pusha
push
mov
fdivrs
clc
int
mov
lret
scas
cld
inc
add
and
movsb
fidivl
js
mov
sub
pop
std
inc
fnstsw
pop
icebp
arpl
mov
mov
decb
push
dec
and
cmp
aaa
jnp
sahf
fisttpl
scas
jecxz
sbb
ljmp
filds
or
fisubs
adc
mov
lcall
xlat
popf
leave
popf
aam
pop
shll
ds
sbb
mov
sub
outsl
clc
pusha
adc
jg
stc
mov
fimuls
cmc
push
mov
adc
sbb
lret
or
cmp
xchg
cmp
push
jne
sahf
mov
mov
and
pop
test
out
sti
cmp
pop
fbld
adc
mov
leave
pushf
pop
jge
js
and
adc
xor
fimull
ss
je
scas
data16
push
popf
inc
pop
mov
pop
add
cmp
sbb
pop
adc
call
sbb
sbb
popf
sbb
lea
popa
mov
pop
push
out
sbb
cs
std
pop
sbb
andl
enter
cli
sbb
enter
xchg
mov
movsb
pop
adc
dec
and
popf
add
inc
inc
push
cwtl
cmp
fcoml
and
fstpt
sub
fstps
xor
rcrb
mov
mov
js
or
xor
add
mov
and
fidivrl
pop
mov
sahf
pop
std
orb
cld
test
fidivl
outsb
xchg
std
idivl
cmpsb
pop
push
lcall
and
mov
loope
stos
push
clc
idivl
cltd
mov
ja
outsb
js
cli
inc
flds
jnp
push
fistpll
std
out
arpl
fstpt
ret
call
fstpl
xchg
cmp
ss
addr16
sub
fiaddl
loope
jns
adc
pop
fcompl
push
aaa
pop
adc
mov
mov
scas
xchg
dec
pop
les
cmp
fchs
adc
in
sti
jp
enter
push
push
repnz
add
xchg
jns
xor
iret
mov
cwtl
sbb
cmp
repnz
or
cwtl
adc
xor
dec
inc
sbb
loopne
adc
test
ds
shl
fcompl
lahf
pop
pop
cmp
cmp
mov
xchg
fstps
xor
jns
pop
daa
nop
scas
inc
pusha
stos
jp
lea
pushf
test
pop
inc
mov
xchg
sbb
sbb
in
adc
push
hlt
shlb
sbb
pusha
pushf
fisubrs
setno
push
sbb
int
push
cmp
mov
lcall
sbb
mov
xlat
sbb
cld
xchg
mov
pusha
pop
bound
mov
xchg
pop
rcrl
ljmp
jp
sbb
aam
mov
pandn
push
add
inc
and
fldt
outsb
push
xchg
gs
jns
flds
arpl
inc
cltd
in
add
incl
mov
fnstsw
popf
cmp
jle,pt
cltd
and
lcall
pop
mov
mov
mov
arpl
mov
inc
fbld
arpl
and
popf
and
cli
cmpl
sbb
inc
dec
cwtl
arpl
pusha
pop
idiv
push
adc
fcomp
cltd
inc
dec
mov
outsb
cmp
stc
out
loopne
and
sbb
pop
xor
arpl
imul
lret
popf
cmp
push
cmp
fcmovu
jge
leave
pop
fstl
mov
rcl
int
lret
mov
sbb
clc
mov
stc
cmp
fdivr
test
lahf
flds
lret
movaps
sbb
jb
fidivl
or
ffree
xchg
add
stc
mov
lret
into
fdivr
lret
scas
add
loopne
add
xchg
xchg
xor
jno
sbb
and
cli
mov
push
dec
pop
jns
mov
and
mov
mov
lcall
pop
inc
fstps
sarl
xchg
inc
jno,pt
addr16
call
in
pop
or
inc
sbb
dec
add
dec
sub
mov
cli
popf
mov
inc
fld
pop
or
fldl
cmp
mov
leave
jge
mov
leave
inc
and
xchg
pop
jno
jp
sahf
loopne
jns
inc
adc
adc
mov
out
pand
subl
cli
push
sbb
pusha
aad
sbb
gs
enter
jge
mov
dec
clc
cld
pop
aaa
inc
sbb
into
ficoms
push
fmull
and
jmp
pop
js
pop
mov
xor
ja
pop
sbbb
cmc
push
xor
fldt
into
repz
jnp
push
stos
mov
adc
inc
and
and
sti
xor
lds
sarl
dec
mov
pop
out
mov
push
ret
xchg
cs
inc
inc
mov
jbe
les
out
cwtl
jl
cli
and
lea
push
jnp
inc
pop
lcall
add
push
outsl
sbb
stos
rcr
sbb
cmp
or
fcmovu
sbb
subb
mov
or
sub
mov
pop
fstpt
pop
lds
rcr
cltd
jns
sar
test
fldenv
mov
aaa
popf
cmp
jmp
xchg
shl
mov
fistl
mov
jo
sarb
movsl
scas
adc
xchg
lcall
adc
jle
fcmovbe
loopne
mov
bound
and
mov
and
mov
pop
inc
jge
das
add
pop
js
mov
xlat
xchg
pop
pushf
add
and
jno
mov
sti
cld
fildl
arpl
pop
inc
fcompl
pusha
cli
jge
lds
in
push
in
cmpsb
add
fmul
jecxz
sbb
push
fsubrl
sub
pop
ffreep
jl
cltd
pop
roll
adc
hlt
fadds
add
push
pop
movsl
sbb
andb
popl
cwtl
mov
sbb
mov
pushf
inc
stc
cld
ficoms
pop
shlb
mov
stos
mov
and
cmp
cmp
mov
adc
fldenv
clc
adc
jmp
push
mov
loopnew
mov
mov
pop
mov
pop
jmp
or
js
inc
fidivl
int
xchg
inc
pop
xchg
mov
mov
and
xlat
push
xchg
les
add
mov
fsubrl
cmp
xlat
aad
out
jp
cli
mov
adc
mov
xchg
shll
or
shr
push
in
fcomi
and
inc
les
and
lahf
repnz
sub
lcall
mov
repnz
imul
pop
sahf
sbb
cltd
sbb
jge
xor
cmp
movhps
push
aas
sbb
int
lcall
mov
sahf
pusha
arpl
clc
cmp
and
pusha
dec
adc
cmp
xlat
push
mov
sti
dec
and
int3
or
ret
mov
mov
pusha
or
ljmp
fwait
sbb
sbb
ja
mov
stc
xchg
adc
wbinvd
cwtl
pushf
cmp
cmp
je
in
ficomps
cmc
add
ds
adc
mov
mov
mov
or
sbb
add
push
jecxz
lret
aaa
xchg
cmpb
outsb
sbb
and
cmpl
mov
idivl
sti
dec
lahf
and
push
sbb
jbe
xchg
mov
mov
cmpsb
fistps
sbb
jbe
adc
mov
loopne
cltd
dec
cli
xchg
mov
pop
mov
orb
and
add
int
lock
sbb
push
mov
loopne
xchg
xlat
dec
gs
bsr
jp
test
cmp
fisttpll
outsl
out
lcall
cli
and
jle
test
sbb
adc
or
scas
loope
daa
loop
lcall
sub
fdivr
cli
cmp
pusha
cmp
fcmovnu
push
mov
pop
sbb
jmp
pop
sbb
xchg
sbbb
fcmovu
mov
popf
mov
fs
ds
mov
cwtl
aas
pop
pop
test
pop
shlb
loopne
pop
jns
les
mov
int3
mov
dec
mov
ljmp
sti
les
jge
ficompl
insb
sbb
add
movsb
and
arpl
cwtl
jle
sbb
push
aam
mov
out
xlat
sbb
ret
inc
das
cmc
sbb
outsb
movsl
xchg
stc
shr
sarb
or
jb
gs
jp
pop
cmp
jmp
std
dec
push
arpl
jl
mov
fucom
add
lea
into
cwtl
and
adc
mov
cld
fisttpl
mov
jecxz
sti
stos
imul
pxor
mov
mov
out
jns
pop
std
mov
mov
mov
lds
mov
and
add
icebp
and
dec
gs
cmp
inc
cltd
in
inc
mov
cmp
jecxz
mov
aas
jl
or
sbb
inc
sbb
sti
adc
sbb
jae
sbb
cmpsb
movsb
mov
mov
rorb
fldenv
dec
shlb
fadds
xchg
cmp
sbb
and
movsl
cmp
pop
fwait
js
inc
cmp
fistpl
jl
sbb
mov
negl
adc
and
pop
mov
mov
pop
add
fisubl
xchg
lcall
cmpsl
clc
cld
sahf
mov
cmp
inc
mov
cmp
ficoms
popf
call
not
sub
and
lock
cmp
mov
inc
sbb
sahf
aad
addl
pop
out
mov
pop
rolb
push
add
mov
in
mov
cmp
push
les
rcrl
out
cmp
fcomip
ds
std
popa
cmp
or
cltd
xlat
inc
inc
pushf
incl
sahf
jbe
fiadds
addr16
mov
mov
xchg
inc
cmovae
adc
dec
lods
js
cli
sarl
jmp
cli
sub
cmp
inc
jns
xor
inc
adc
or
pop
sbb
add
fnstcw
mov
aaa
adc
add
mov
stc
xlat
gs
mov
les
jp
mov
pop
sbb
imul
inc
cld
cmp
pop
cli
inc
leave
jns
in
or
dec
sbb
adc
pop
js
add
outsb
loopne
stos
pop
adc
and
xchg
pop
add
imul
aas
sbbb
sahf
cltd
cs
inc
or
mov
add
test
pop
popf
xchg
pop
andb
fnstcw
pushf
jns
inc
xor
sbb
clc
sbb
faddl
inc
lcall
stc
movsl
sbbl
sbb
and
or
pushf
call
push
ljmp
pop
fdivs
cmp
xchg
sti
adc
or
popf
adc
sbb
pushf
sarb
mov
sub
mov
pusha
push
sbb
ffreep
sti
pop
dec
inc
fistpl
push
mov
pushf
pusha
sahf
ds
adc
cmpsb
sbbb
and
mov
pop
cmp
pop
add
jecxz
and
rorl
add
adc
mov
repnz
bound
and
dec
and
pop
add
jns
loopne
paddsb
cmp
aas
bound
pop
sbb
cmp
inc
pop
pop
cmp
cld
jns,pt
fmuls
or
pop
cwtl
fsubl
cli
pop
imul
aas
repnz
aaa
xchg
lahf
sbb
shl
push
ficompl
mov
inc
fnstcw
pop
xor
mov
mov
push
popf
and
add
movsb
idiv
sub
das
push
sbb
cmp
into
js
aas
mov
dec
pop
and
adc
sub
adc
inc
jp
std
xchg
popa
sahf
cmp
xchg
mov
int3
rolb
fidivrs
inc
adc
push
cmpsb
inc
rcrb
dec
fdivl
push
sti
sub
iret
pop
loopne
cmp
cld
jmp
std
and
clc
arpl
mov
in
cmp
add
arpl
xor
mov
cmpl
pushf
les
fincstp
mov
xor
lea
rcrl
pusha
dec
daa
push
std
sarl
inc
ljmp
call
pop
das
sbb
popf
fisubl
adc
cltd
mov
int
lcall
pusha
dec
cli
sbb
test
pushf
cmp
mov
mov
pop
icebp
pop
cltd
dec
pop
imul
mov
lret
sbb
sbb
mov
cmp
sub
outsl
mov
in
frstor
sbb
inc
mov
out
pop
lcall
sub
mov
in
inc
fldenv
cli
adc
xchg
cmp
jb
and
sbb
js
ss
scas
fnstsw
sub
adc
stos
jl
js
sti
sarb
inc
and
xlat
adc
fisubl
adc
cwtl
mov
mov
fmulp
xchg
movsb
sub
inc
cli
sarl
or
arpl
pop
lret
sbb
in
mov
xlat
stc
cmp
mov
cmpb
sahf
lock
xlat
mov
rorb
clc
rcr
loope
pop
icebp
inc
test
popf
inc
js
add
fdivs
and
inc
pop
jge
aam
fmulp
push
aaa
sbb
sbb
fildl
sti
pop
cli
add
pop
fidivrl
or
clc
ss
sbb
rcl
jge
sub
or
inc
adc
rcrl
sub
sarl
pusha
cs
sub
div
dec
mov
cltd
pop
mov
cmp
cmp
lret
loop
xchg
sub
cs
mov
xor
lcall
in
pop
jp
jp
push
adc
cmpl
sar
sbb
lcall
enter
std
dec
cld
push
inc
aaa
outsb
roll
cs
cmp
ds
imul
jns
sbb
inc
cld
popf
xor
sub
std
inc
js
leave
pop
sysenter
push
sbb
popf
pop
jne
adc
and
loopne
push
sbb
cld
push
mov
cmp
mov
fsin
into
sahf
pop
dec
cmpb
mov
movsl
mov
push
lds
imul
push
cmp
clc
ds
push
dec
cmp
cmp
or
cld
popa
sbb
cltd
repz
jecxz
dec
and
ficomps
cmpsl
in
js
mov
out
push
cwtl
addb
daa
xor
movsbl
jle
cli
dec
or
insl
pusha
int
or
sbb
sbb
stos
pop
sahf
push
xchg
cmp
inc
cld
xlat
cs
das
cmc
js
mov
xchg
xchg
int
push
mov
fcmovu
adc
inc
cmp
fdivrl
mov
pop
inc
push
std
pop
cld
clc
xor
out
xchg
cmp
or
fs
test
inc
or
sbb
and
call
push
push
clc
sbb
leave
cs
inc
adc
cmp
shll
ficomps
jle
mov
in
push
clc
sub
inc
idivb
pop
test
loop
hlt
inc
fisubs
mov
mov
cmp
cwtd
jge
popl
sbb
pop
ficomps
clc
mov
scas
sbb
mov
stc
jne
rcrl
mov
and
sub
fistps
arpl
fdivrs
popf
xlat
fwait
jl
movsb
cmp
pop
cwtl
or
dec
adc
sbb
cmp
mov
pushf
fimull
sbb
addr16
inc
dec
dec
mov
and
rcll
ret
jge
adc
cmp
jb
sbb
mov
mov
cwtl
add
sbb
jp
adc
dec
addl
sbb
sti
push
popf
adc
sub
jge
les
and
lcall
std
pushf
cmp
sub
rcrl
leave
mov
sub
xchg
fidivrl
push
and
fstp
sbb
js
std
mull
pusha
mov
dec
fcmovb
cld
pop
fidivrs
cli
and
pop
adc
cmpl
mov
add
imul
or
jns
jbe
mov
clc
cltd
sbbb
cwtl
adc
mov
or
sti
cmp
or
pop
std
fildl
mov
pushf
lret
fmuls
fsts
xlat
cmpsl
mov
and
pop
mov
jle
dec
adc
imul
inc
jp,pt
push
popf
sbb
mov
sbb
sbb
mov
push
mov
fucomp
mull
daa
leave
out
fdivrl
pop
enter
rclb
fs
inc
pushf
pop
xor
inc
inc
ljmp
and
lcall
leave
mov
xor
sbb
popa
cld
jns
add
fimuls
movsb
shl
andb
or
andb
scas
lcall
or
pop
cwtl
and
mov
repnz
pop
inc
daa
xor
pop
loopne
pop
or
notb
mov
lcall
fstpt
rcll
sub
push
cli
or
jp
or
pop
jge
lret
sbb
sub
gs
xlat
cli
out
lcall
or
sbb
pop
adc
xlat
mov
add
pop
jmp
inc
and
js
shll
pushf
xor
jp
jge
mov
cmp
les
jge
xchg
mov
sbb
cwtl
std
mov
pop
in
jge
push
cmp
adc
cmpsl
gs
sbb
sub
pop
pop
lds
inc
dec
clc
neg
popf
ror
or
mov
adc
loopne
mov
gs
adc
mov
mov
loopne
hlt
mov
mov
scas
test
and
fwait
push
sti
mov
dec
ror
mov
loopne
add
sarl
inc
pushf
sbb
mov
cli
sbb
shlb
std
aad
adc
push
sbb
into
sub
jp
mov
das
xchg
cmp
cli
popf
mov
pop
mov
pop
aaa
imul
sbb
jp
mov
popl
pop
push
cmpsb
nop
add
aaa
scas
jb
and
cmp
cmp
jo
cli
cmpsw
jmp
jmp
adc
sbb
mov
push
sti
cmp
mov
cmpsb
jp
dec
pop
loopne
xchg
xchg
pop
xchg
mov
inc
pop
mov
jmp
fidivrs
lret
std
mov
inc
sbb
bound
sbb
add
mov
nopl
or
pop
jns
sbb
pop
xchg
dec
lds
inc
std
jne
fistpl
sarb
sub
sbb
pop
pop
pop
loop
loopne
stos
mov
into
add
mov
sti
stc
pop
pop
fdiv
mov
insl
pop
ficomps
mov
adc
mov
pop
and
or
pop
stc
fld
inc
mov
movsl
inc
ja
ds
mov
jmp
out
idiv
mov
aad
repnz
inc
and
cmp
jbe
cvtps2pi
sbb
or
cli
sub
mov
sbb
js
mov
sti
outsb
clc
dec
sub
mov
into
jno
jl
adc
dec
arpl
faddp
jb
clc
call
inc
adc
test
pop
cli
sbb
cltd
jbe
and
jns
std
and
rorl
incl
push
imulb
mov
outsl
cwtl
add
popf
pop
inc
jl
stc
cmp
sahf
xchg
cmpsb
xlat
or
lods
push
xchg
sub
cmp
inc
popf
xor
sbb
fsubl
out
inc
mov
inc
fs
movb
cld
pop
push
xor
test
cltd
lods
mov
or
mov
and
and
into
inc
add
mov
ffree
pop
ds
xchg
xchg
int
add
aas
pop
cld
xor
out
std
push
cmpsb
xchg
fstpl
push
dec
jae
push
adc
cmp
cld
push
test
lcall
and
sbb
cmp
cmpsb
jle
cwtl
push
sbb
push
std
stos
inc
cmc
cmp
pop
popf
sbb
or
sub
inc
jle
sub
fs
scas
fistps
mov
insb
and
lcall
xchg
fdivrl
sti
out
mov
shl
pop
fidivrs
mov
cmpsb
sbb
ror
cmc
enter
das
fcompl
clc
cmp
cmp
test
xchg
lea
pop
adc
fldl
sbb
mov
sahf
dec
pop
cli
or
test
repnz
aaa
into
add
mov
fldenv
cld
sbb
stos
jp
sbb
andb
mov
xor
cmp
cld
cld
xchg
inc
ljmp
popf
andb
bound
cmpb
sbb
cmp
and
rcr
pop
pop
std
pusha
adc
cli
adc
push
rorl
xlat
adc
xor
jp
js
ds
lods
or
mov
sbb
cmp
xchg
mov
xchg
int3
fdiv
lds
mov
fdivl
sbb
dec
aad
aas
cli
ss
cmp
gs
push
pop
xchg
arpl
filds
jmp
jmp
aam
cmpsb
add
cmpsb
popf
add
and
aas
jmp
sbb
out
mov
pop
cmp
fs
fs
or
cld
cwtl
mov
lock
inc
sbb
mov
shlb
mov
cmp
sbb
mull
jno
sbb
or
cld
into
setl
popa
ds
adc
mov
pop
jle
and
mov
incb
pusha
pop
imul
sbb
fs
xchg
mov
sbb
sarl
inc
hlt
or
and
sbb
flds
mov
pushf
push
ss
and
movsl
or
xchg
xlat
adc
cld
and
fucomp
jg
push
pop
sahf
cmpl
fmuls
popf
mov
test
bound
dec
decl
cmp
adc
xor
jno
loop
and
mov
xlat
stos
sub
pop
pusha
inc
test
ficompl
ljmp
cmp
add
cmp
xchg
mov
into
lea
xor
in
sbb
jge
test
fsubrl
mov
outsb
cmovle
and
popf
icebp
fs
pop
mov
sahf
leave
ss
cmp
fcomps
pop
or
jle
sbb
mov
xchg
in
jbe
les
jne
out
mov
mov
push
xchg
movl
outsb
test
pop
pop
clc
xorb
adc
cmp
add
adc
add
jbe
inc
cmp
fadds
sahf
ss
mov
cmp
add
pop
pop
shll
inc
mov
pop
les
and
loopne
mov
sbb
sbb
rclb
fcomps
mov
sbb
jle
cltd
push
jecxz
cmpsb
sub
mov
sti
pusha
mov
movsl
mov
pop
adc
sbb
flds
pop
cltd
test
pushf
popa
jecxz
in
and
jge
sbb
imul
rclb
fs
and
inc
xor
js
test
or
or
popf
inc
adc
inc
lea
in
sbb
clc
sbb
fld
dec
inc
notb
dec
loopne
in
cltd
js
lds
fidivl
stc
test
popf
push
lret
pusha
xor
rcll
xor
adc
jno
fdivrp
das
cmp
pop
shlb
inc
and
xchg
sbb
pop
fstps
sub
mov
mov
fcomip
inc
jl
pop
mov
stos
pop
inc
xor
dec
mov
clc
sbb
inc
or
mov
jns
ss
shll
sbb
pop
adc
cli
pop
cwtl
mov
lcall
cmp
cli
fsts
clc
sbb
pop
jbe
test
adc
xchg
push
or
bnd
and
popf
inc
xor
push
clc
inc
pop
rcrb
cltd
sub
push
lcall
sbb
idiv
pusha
and
sbb
mov
inc
shlb
out
cwtl
pop
pusha
inc
cld
pop
loop
std
mov
jae
popf
cmp
push
pop
sbb
flds
dec
jp
std
and
pushf
xchg
bound
movsb
fsubr
pop
iret
cmpsb
mov
cmp
cmp
rcr
cmp
dec
inc
aas
int3
cmp
sbb
imul
fildl
cmp
mov
cmp
xchg
and
adc
es
mov
out
fidivrl
sbbb
add
ss
stc
outsb
mov
cs
adc
mov
xchg
adcb
pop
cld
ret
add
clc
popa
pop
pushf
lods
pop
mov
leave
clc
sti
leave
fsubp
push
add
inc
and
jmp
cwtl
mov
jb
mov
mov
push
fbld
sti
cmp
mov
jmp
add
cli
or
jl
xor
das
inc
jmp
stc
or
sbb
mov
or
jmp
sbbb
xchg
xchg
adc
cmpb
adc
pop
inc
popf
sbb
sbb
dec
push
adc
pop
xchg
mov
scas
sbb
ds
cld
fsubrs
dec
sahf
mov
add
xor
notb
in
adc
pop
enter
and
adc
push
jns
sbb
inc
ljmp
adc
and
not
mov
imul
ds
pop
jns
cli
jl
xchg
sub
dec
adc
out
cmp
or
pusha
out
jge
fcompp
pop
sub
cli
jae
mov
jns
lds
cmpsl
vpavgw
jmp
jl
flds
mov
movsb
pop
cli
cltd
nop
popa
loopne
in
mov
or
and
cwtl
push
pushf
mov
dec
in
rcl
cmp
cmc
sub
js
sbbb
fadds
std
cmp
scas
cltd
mov
cmp
aam
xchg
fcmovnb
adc
or
or
add
sbb
jns
inc
or
cs
loop
cmp
or
pop
std
pop
stos
js
rorb
fs
loopne
mov
push
std
test
jle
clc
adc
data16
cmp
xchg
pop
sbb
stc
fstp
push
arpl
and
xlat
mov
push
inc
mov
mov
lret
pop
sbb
adc
inc
mov
mov
sub
into
sub
or
mov
int3
or
sarb
lret
sti
pop
adc
pop
adc
iret
add
jge
xchg
xlat
pop
pop
inc
or
lcall
and
dec
ss
clc
xchg
xchg
flds
and
cmp
or
adc
or
je
in
rol
lcall
mov
push
sti
sbb
adc
sahf
mov
dec
cli
xchg
sbb
sti
mov
std
fcmovnu
add
add
ss
push
outsb
sub
into
mov
pusha
stc
in
and
cmp
cli
gs
sbb
sub
mov
mov
testb
outsb
mov
rcll
adcl
mov
xchg
cltd
or
sbb
pusha
pushf
sbb
cmp
lcall
push
xchg
ficomps
popl
pop
sbb
pop
cmp
fdivrl
rclb
cmc
stc
jp
mov
add
clc
pop
pop
sbb
adc
lcall
jge
js
and
mov
mov
movsl
fwait
testl
xor
xchg
pushf
jl
out
push
pop
mov
cmp
popf
inc
dec
xlat
adc
icebp
inc
cmp
sbb
cmp
mov
cmp
jno
pop
outsl
or
adc
pop
out
cmp
testb
pop
enter
fisttps
int3
pop
fwait
stc
xor
aas
imul
sbb
jns
fdiv
inc
adc
popf
push
adc
cltd
xlat
pop
fstps
xchg
jno
aam
inc
push
inc
or
and
pop
sbb
cmc
lcall
outsl
pop
fs
sbb
push
mov
clc
or
call
cmp
cmc
fdivrs
jl
xchg
idiv
sub
fnsave
arpl
sysret
jp
rcrb
xor
push
cmp
idiv
sbb
std
inc
jge
nop
mov
pop
ffreep
rcrb
scas
mov
cltd
push
jecxz
outsl
mov
mov
fisttpll
mov
xor
sbb
and
loopne
add
sbb
jns
lcall
cltd
cli
mov
lret
cmp
sbb
mov
fdivrp
scas
test
jb
push
xchg
cmp
fdivrl
fiaddl
scas
pop
xor
mov
jns
imul
popf
cmpsb
repz
jge
fstpl
push
adc
cmp
pop
add
mov
inc
cs
repnz
pop
sbb
xor
jnp
insb
pop
or
xchg
xchg
push
mov
sahf
adc
mov
cld
jo
and
daa
dec
loop
loop
mov
pushf
mov
sbb
push
inc
std
jle
leave
into
push
cld
mov
add
aad
sbb
sub
call
inc
in
jns
add
xor
mov
ficompl
pop
dec
push
enter
sbb
lret
adc
popf
pop
xor
lcall
cld
and
test
mov
rorb
popf
fs
fidivrs
cs
cmc
push
xchg
loopne
sbb
xchg
ds
imul
push
repnz
and
jns
jl
sbb
cmp
js
movsb
pop
pop
shll
dec
add
jbe
mov
push
mov
sbb
es
cmp
inc
rcrl
loopnew
repz
adc
inc
push
sbb
push
mov
push
mov
jle
lds
or
in
ds
mov
fistps
enter
jmp
bound
cmp
add
mov
fdivl
inc
inc
sbb
lcall
lds
add
scas
add
and
idiv
out
or
js
adc
popa
sahf
pusha
popa
bound
pop
fidivrs
orb
jp
pusha
pop
repz
sub
and
in
inc
pushf
sbb
fdivrl
cmc
pop
inc
jl
out
cmp
addr16
and
jp
cld
adc
ja
popf
into
pop
jl
xor
pop
pusha
loopne
mov
sarl
add
sbb
and
sahf
jbe
sbb
scas
popa
sbb
les
sub
cmpsl
pop
out
sbb
sbb
mov
xchg
sbb
in
rcrb
xchg
pop
lahf
lcall
xor
jge
pop
xlat
fstps
adc
lcall
sbb
in
sti
fmuls
jne
or
lock
pusha
mov
sti
ljmp
xor
dec
cmp
push
sbb
lea
inc
sahf
pop
mov
cli
cmp
cwtl
cmp
adcb
and
rclb
adc
xlat
pushf
addr16
adc
loopne
mov
icebp
push
inc
shl
cmc
mov
jo
ret
jl
lock
pop
mov
popf
call
loop
sbb
mov
add
mov
cli
rorb
pop
cltd
lahf
sbb
push
cmp
sarb
je
push
out
sbb
pop
xor
frstor
push
cmp
xor
or
pop
mov
fstpt
cmp
cwtl
add
xlat
xchg
pop
or
cwtl
pop
pop
mov
stc
loopne
out
mov
xor
mov
mov
pushf
and
mov
or
aam
pop
pop
mov
adc
jne
and
sbb
mov
cmp
fnstcw
aam
inc
lds
inc
push
dec
adc
clc
cmp
pusha
and
cli
fst
add
popf
gs
pop
mov
inc
sbb
and
mov
movsl
pusha
fprem
loop
cmp
mov
dec
pop
inc
fdiv
jns
pop
scas
cli
sbb
loopne
call
clc
js
push
cwtl
cmpl
dec
loopne
mov
call
cmp
das
cmp
movsb
fxch
orl
cmp
cwtl
cmp
mov
lcall
flds
mov
mov
sarl
popf
idivl
in
arpl
mov
clc
loopne
xchg
mov
les
out
cmp
out
ds
sbb
std
clc
sub
pop
mov
call
inc
pop
cli
xchg
cltd
in
out
jns
idivl
mov
cli
std
xchg
scas
sbbl
or
mov
sbb
ficoms
and
add
push
cmp
pop
mov
ljmp
and
pop
pop
cltd
cmp
shl
gs
add
cli
in
mov
clc
je
add
dec
fdivs
cmpl
cmp
and
cwtl
pop
std
mov
mov
icebp
aam
adc
inc
jge
sub
fnstcw
clc
pop
enter
sub
daa
or
cli
jl
dec
inc
mov
pop
xor
pop
pusha
adc
mov
xchg
pop
clc
push
mov
mov
inc
imul
pusha
fisubrs
sub
rcll
arpl
fdivl
xchg
outsb
cmova
in
cmp
cli
fidivrl
jns
lods
sbb
adc
cwtl
cmp
dec
enter
loopne
add
adc
sarb
sar
mov
inc
aaa
adc
cwtl
jle
fistpl
pushf
adc
repnz
cli
and
mov
adc
mov
fisttpl
rcrb
fstpt
imul
cli
and
lock
loopne
sahf
mov
mov
jbe
pop
and
cltd
pop
cmp
sahf
jle
pop
sbb
pushf
cwtl
fnstcw
sbb
mov
sbb
sbb
pop
aaa
cmp
mov
mov
fidivl
data16
inc
gs
cmp
and
pop
fisttpl
sub
sub
subl
jge,pt
add
pop
pushf
sbb
sbb
lcall
adc
cmp
into
iret
pop
or
adc
xchg
ret
adc
push
dec
sbb
xlat
pop
jge
inc
sub
xor
jmp
jl
bound
jmp
std
cli
pop
das
cmp
aas
xchg
pop
in
gs
mov
sbb
cmp
inc
mov
mov
xlat
or
vpsubw
popf
push
mov
lret
data16
pop
pop
cmp
pushf
sbb
cli
sahf
or
sbb
sbb
fcompl
xchg
cld
pop
mov
jnp
push
push
mov
rcrb
in
and
cld
xchg
ffreep
cltd
xor
and
mov
pop
xchg
cs
sti
push
testl
xchg
lds
out
cmp
xlat
clc
enter
repnz
or
ficompl
loopne
stc
sbb
jl
dec
fisubrl
sbb
clc
rcrl
mov
cmp
dec
inc
pop
sbbl
cmp
mov
sub
clc
sbb
cwtl
scas
jecxz
pop
mov
outsl
jns
adc
popa
xlat
sahf
rol
rorb
fadds
mov
inc
xchg
incl
jns
pop
mov
rorb
pop
mov
pop
add
sbb
mov
jecxz
clc
sahf
pop
pcmpgtb
mov
dec
pop
jmp
pop
lea
adc
ds
push
mov
je
mov
pop
sti
ret
mov
cli
add
out
cwtl
stc
pop
clc
inc
fldenv
lret
mov
inc
dec
adc
push
cli
rcrb
clc
lret
sahf
daa
jmp
pop
out
pop
cltd
sbb
scas
add
push
ljmp
fistpll
jle
loopne
pop
sbb
bnd
scas
cld
fcmovu
sub
out
rorl
and
ficomps
pop
cmp
sbb
inc
loopne
pop
cld
pop
pop
popf
cmp
sbb
call
fstps
sbb
rcl
sbb
jecxz
xchg
mov
dec
jnp
fcomps
pop
sbbb
push
and
imul
mov
mov
or
lahf
pusha
mov
in
and
xor
pop
rolb
pop
mov
fldt
sbb
inc
js
push
cwtl
and
mov
cli
dec
mov
fisubs
cmp
repnz
xor
insb
cmp
add
mov
mov
inc
cli
pop
sbb
bound
adc
pop
inc
sbb
idiv
adc
sub
xchg
xchg
push
out
sar
dec
leave
scas
lret
sbb
fsubl
cli
jb
push
insl
and
or
mov
scas
inc
and
fildl
clc
cltd
sbb
add
and
cmp
pop
mov
push
mov
icebp
popf
imul
inc
cmp
pop
and
sbb
sbb
test
cltd
or
pop
adc
inc
jge
sbb
xchg
arpl
lcall
icebp
sbb
jmp
jmp
cltd
or
pop
outsb
cltd
xchg
fdivr
notb
fs
stos
scas
imul
in
clc
in
in
xor
push
mov
ds
pop
mov
sub
sahf
pop
ja
jo
andl
xchg
arpl
stos
xchg
sahf
or
inc
pop
xor
daa
jne
lea
pop
pop
push
repnz
gs
push
sbb
sbb
jle
lds
sar
cmp
inc
sbb
test
mov
ss
cmp
jg
cmp
jb
jno
lret
fsts
outsb
sbb
or
xor
inc
pop
cmp
int3
fidivs
push
push
fs
and
fnsetpm(287
mov
cmp
sbb
lods
jl
mov
fcmovb
inc
adc
nop
int3
rclb
and
ficomps
cmp
sbb
and
pop
mov
data16
fimuls
lcall
mov
sbb
inc
pop
sbb
addr16
roll
idivl
aaa
sbb
out
xlat
and
jl
sbb
aas
add
add
lret
cmp
and
inc
incb
adc
gs
rol
fidivl
fsubrl
mov
cld
fcomps
lahf
inc
popf
pop
cwtl
add
inc
popf
cmp
pop
mov
xchg
jmp
cmp
and
sbb
dec
mov
jl
sbb
and
lods
cmp
loopne
pop
sti
add
jmp
cli
cmp
rcrb
sub
or
sbb
lret
jge
pop
lcall
incl
jl
bound
stc
sbb
cmp
push
pop
pop
aas
pop
fdivrl
cli
std
sbb
mov
andb
in
adc
inc
idivl
in
loopne
mov
cmp
and
mov
pop
xchg
pop
xchg
fdivrs
bound
mov
ds
scas
js
daa
or
pop
fnsave
mov
inc
pop
sbb
dec
sbb
jmp
adc
imul
ficoms
fcomps
mov
fiaddl
push
xor
nopl
mov
or
fistps
fildl
mov
shrb
pop
fisubs
mov
and
addl
movsb
ds
xor
gs
pusha
shl
xchg
mov
fsincos
cltd
jbe
rorl
adc
cmpsb
cli
pop
cmp
jg
mov
negb
sbb
xchg
arpl
nop
xchg
jp
popf
inc
fistpll
xchg
insl
arpl
xchg
pop
inc
add
jns
negl
inc
shll
sbb
push
mov
jns
mov
push
sbb
je
popf
sbb
fwait
pushf
leave
mov
mov
and
dec
sar
mov
or
jnp
xlat
in
add
jmp
loopne
add
jle
sbb
bound
mov
pop
cld
mov
sbb
jnp
push
push
xlat
lods
cwtl
mov
pop
adc
mov
jle
addr16
jmp
cli
call
pop
cmc
fnstcw
rol
rcr
cmp
pusha
xlat
push
mov
sahf
cmp
das
scas
stc
fidivl
xchg
jle
mov
fimull
mov
mov
and
pop
inc
fnsave
adc
adc
clc
stc
and
frstor
fistpl
or
jle
sub
cmpsl
rorb
mov
inc
xlat
or
stos
dec
add
sbb
pop
inc
adc
mov
mov
and
mov
xchg
movswl
jle
push
frstor
lcall
push
in
fwait
in
pop
dec
mov
pop
inc
adc
fistps
lods
js
movb
shl
aam
push
and
cmp
lods
or
cmp
or
jl
mov
cmp
mov
adc
adc
mov
fistpl
mov
pop
loopne
mov
xor
pop
into
jne
out
loope
fcomps
sbb
add
or
sbb
bound
xchg
pop
mov
pop
jne
mov
andb
jns
andnps
and
idivl
sbb
pop
lcall
pushf
jle
bnd
dec
cmp
lahf
sbb
xchg
imul
or
push
mov
lcall
mov
pop
fcompl
jp
inc
sti
or
pop
mov
mulb
mov
sbb
enter
pop
cmp
bound
mov
jo
push
pop
inc
cli
popf
fidivrl
fistl
push
clc
mov
push
in
mov
cmp
icebp
mov
arpl
cli
mov
jge
std
jp
or
andb
incb
pop
mov
mov
jecxz
xchg
sbb
cwtl
pop
and
je
and
fcomp
pushf
cmp
xchg
mov
adc
jp
shrb
mov
arpl
clc
in
lds
sub
add
test
sub
lcall
ficoms
xchg
jns
stos
add
inc
sbb
xlat
mov
adc
push
adc
inc
ffree
or
popa
jns
stc
sahf
push
pop
jmp
std
stc
cld
dec
pop
pop
xchg
shlb
mov
dec
and
sahf
or
movsb
cmpb
sbb
dec
fsubl
and
sbb
mov
cmp
push
je
push
and
jle
ret
adc
jns
mov
insl
pop
cmpl
add
adc
adcb
pusha
pop
rcrl
dec
sbb
cmp
fildl
fcmovu
jecxz
push
out
mov
xchg
outsb
cld
std
xor
rolb
add
xchg
pop
sbb
push
and
or
js
lcallw
gs
cwtl
pop
dec
mov
jo
push
mov
push
cmp
int
and
push
cmp
pop
push
add
int3
aad
sti
stc
and
clc
loopne
sahf
loop
lds
rcrb
jns
mov
inc
cld
mov
rorb
push
call
sbbb
inc
sahf
pop
push
cmc
push
dec
aaa
aas
sbb
xchg
sbb
rcrl
enter
inc
fstpl
ficomps
divl
lret
mov
pop
inc
rcrl
std
addr16
cmp
outsl
and
sets
std
data16
xor
cmp
cmp
fs
gs
jnp
es
stc
cltd
ja
shrb
xlat
pushl
push
dec
sbb
cmp
lcall
inc
adc
jo
fidivrl
mov
pop
andb
sbb
jg
jle
sbb
fcompl
shlb
bound
sbb
mov
clc
ficomps
adc
loopne
clc
lods
mov
sbb
js
sbb
mov
sbb
cltd
clc
movsb
mov
sbb
cmp
shlb
pop
push
call
jns
inc
xlat
xor
mov
add
cmp
adc
jmp
cmp
pop
fadds
push
mov
mov
mov
inc
mov
pcmpgtb
sbb
dec
or
dec
sbb
outsl
inc
or
sbb
mov
adc
scas
pop
fistl
outsl
or
push
sti
adc
enter
and
and
cmp
faddl
movb
mov
out
rcrb
cwtl
sbb
xchg
ds
sahf
fadd
fisubl
pop
lds
in
call
or
sbb
pop
movsb
sahf
sbb
add
rcrb
adc
iret
loopne
lret
jo
insl
pop
cli
cmp
xchg
mov
mov
jle
lcall
mov
push
push
mov
mov
adc
cld
aam
sbb
cli
js
pusha
xchg
lret
adc
fistpl
jl
in
call
les
cltd
cmp
mov
cmp
adc
popf
fxch
nop
lcall
pop
mov
cmp
decl
outsl
faddl
push
pop
sbb
je
sbb
pusha
sbb
aas
inc
dec
or
mov
imul
in
push
das
int3
add
shlb
loopne
lods
fidivrs
lsl
inc
rcrl
inc
inc
sbb
inc
pop
pop
and
sar
push
jmp
inc
cmp
jns
sbb
sahf
and
lds
fstpt
stc
mov
in
sbb
cld
adc
add
pop
mov
inc
sarl
inc
in
sahf
inc
arpl
cmp
std
insl
movups
xor
jno
mov
sahf
clc
ds
into
jecxz
mov
incl
psllq
ds
clc
iret
sub
mov
int3
lret
add
cmp
test
bnd
fistpl
mov
fsubs
pop
sub
fnsave
sub
inc
mov
cmpsb
neg
fwait
stc
std
mov
sarl
fdivp
pop
mov
sbb
sahf
mov
cmp
sub
nop
cmp
cwtl
fs
popl
mov
cli
inc
aas
cmpsb
mov
or
stc
pop
pop
inc
popa
jle
cltd
into
movsb
mov
pop
add
cli
stos
push
push
adc
inc
decb
daa
lret
sbb
sbb
ljmp
cld
imulb
fs
cmpsb
ret
out
out
lcall
pop
pusha
fistpll
cmp
pop
pop
jl
pop
sbb
pop
iret
lcall
flds
sbb
popa
stc
fisttpll
mov
sub
or
cmp
jge
cli
sbb
mov
es
and
ret
je
out
psubq
cmp
inc
aas
cli
dec
mov
push
ljmp
lcall
push
sub
add
mov
push
push
scas
and
cmp
andl
cmp
cmp
outsb
cmp
pusha
faddl
rcrb
fildl
sbb
dec
dec
push
pop
xchg
adc
pop
dec
xchg
mov
pop
mov
fdivrl
sbbb
jmp
sbb
push
mov
lea
or
movsb
push
sbb
and
mov
inc
lret
mov
inc
sbb
or
pusha
cwtl
xor
push
fcomp
clc
fnstenv
fcmovb
cmp
mov
cltd
mov
cmp
sbb
enter
sbbb
sbb
mov
cmp
pop
stc
mov
mov
mov
push
pop
fidivs
inc
into
push
fcomps
adc
lcall
xchg
lret
les
inc
cwtl
lock
dec
push
aad
pushf
lcall
jbe
pop
jbe
jbe
xorl
jns
and
mov
cmp
sbbl
cld
xchg
push
movsb
mov
cwtl
sbb
jge
pop
and
cwtl
cltd
lods
in
add
shl
stc
sbb
push
push
into
push
adc
jns
notl
cmp
cmp
lds
sbb
pop
pusha
adc
cli
fisttpl
fidivrl
and
imul
clc
mov
fidivrl
xchg
inc
sbb
rol
rcll
fdivr
xchg
bound
sbb
jl
fstl
cmc
sbb
negb
cli
jle
data16
sbb
sbb
das
add
std
cmp
sbb
or
or
mov
ljmp
or
pop
sbb
push
or
pop
fistpl
xlat
clc
or
cmp
and
cltd
fstpl
ror
jge
mov
fbld
mov
pop
fs
mov
xchg
mov
push
outsb
incl
gs
jle
in
ss
mov
sbb
cmovb
cmp
popf
fcompl
inc
cli
je
testb
imull
mov
sbb
inc
std
adcb
mov
mov
inc
pop
mov
sarl
cli
inc
cld
push
bound
pop
mov
cmp
imul
lcall
push
mov
xlat
fiaddl
adc
in
inc
jecxz
lea
push
std
mov
and
cld
cld
les
jge
pop
add
cmc
popa
jl
add
ja
test
jl
aaa
stc
jns
jae
lcall
mov
out
fsubs
sarl
cli
sti
mov
cli
les
inc
or
mov
hlt
sbb
je
addl
out
push
sbb
or
leave
addl
sub
cli
aam
std
cmp
xchg
aas
out
pop
daa
cld
inc
push
mov
xchg
sbb
ss
inc
sti
mov
gs
fisttpl
pop
les
add
lahf
mov
mov
fcompl
int3
rorb
pop
pushf
add
pusha
push
jl
xchg
inc
inc
mov
mov
cmp
dec
jg
add
pop
sub
cmp
sbb
fs
popf
cmp
repnz
ja
xor
xchg
push
pop
pop
cmp
push
adc
or
mov
scas
rcrl
mov
ss
loopne
int3
imul
cmp
ljmp
pusha
loopne
adc
cwtl
sbb
sbb
shrb
insb
xchg
push
sahf
scas
pop
cld
push
pop
rol
cltd
jns
push
or
lcall
test
sahf
imul
dec
cltd
lret
mov
pushf
outsb
adc
mov
xor
jle
sbb
pushf
ror
pop
mov
xchg
adc
std
mov
cmp
xchg
fsubs
mov
xlat
pushf
popf
cltd
stos
ja
cmpsb
jp
xor
cmp
pop
cmp
mov
lods
sbb
jb
add
popl
and
scas
or
jbe
cmpsl
scas
dec
imull
repz
lcall
inc
cltd
jp
mov
cmpsb
popf
mov
into
add
cmp
fimull
adc
adc
negl
cwtl
into
pusha
add
pop
clc
and
jp
orb
daa
xchg
sbb
rcrl
dec
add
pushf
mov
lea
in
rorl
fucom
and
ficompl
sbb
xchg
and
sbb
cld
push
jne
fcompl
ljmp
mov
or
fcompl
stc
adc
mov
sbb
loopne
dec
adc
push
jp
clc
xchg
popf
pop
jns
into
idiv
cmp
fcmovnu
sti
fdiv
xchg
cltd
cmp
lret
jbe
cmp
dec
pop
insb
fimuls
or
repnz
fiaddl
sbb
pop
jl
mov
mov
xchg
mov
sub
cmpsb
cmp
fcompl
pop
jnp
and
outsl
sbb
jp
jbe
cmp
cmc
sbb
jge
push
cltd
and
clc
inc
and
push
push
subl
cmp
pop
rcr
pusha
xlat
inc
xchg
sbbl
cmp
mov
jp
and
or
cmp
pop
imul
pop
sahf
xor
pop
aaa
ljmp
frstor
out
and
cmp
cli
mov
sbb
pop
jmp
fadds
jp
cmp
jl
cmp
lcall
cmpsb
cmpb
fldenv
mov
jns
xchg
add
stc
and
cltd
lcall
addb
pop
or
daa
jmp
test
dec
roll
negl
test
jle
xchg
mov
or
sbb
pop
cmp
lcall
pop
outsb
push
fcomps
xchg
adc
pop
add
pop
pushf
rcll
xchg
or
sbb
in
inc
ds
push
fidivrs
add
pop
stc
sbb
adc
mov
mov
pop
dec
lds
ss
sahf
icebp
popa
divb
cmp
xor
popa
stc
pop
inc
push
push
sbb
cwtl
add
xchg
jmp
add
lcall
stc
ds
xchg
sub
jg
push
push
cmp
js
add
imull
and
mov
incl
insb
aaa
call
inc
sbb
sbb
pop
inc
inc
lea
popf
adc
mov
and
dec
adc
int
cmp
mov
add
js
mov
mov
cmpsl
and
add
jle
dec
dec
pop
fstpl
and
ficompl
and
jno
les
hlt
and
ljmp
sbb
push
mov
jge
rcrl
mov
stc
fmul
mov
iret
push
jl
xchg
fidivrl
pop
mov
cmp
out
test
push
mov
push
dec
sahf
and
push
xchg
sbb
jne
push
add
sbb
add
inc
ljmp
inc
mov
and
jle
jge
dec
mov
inc
add
pop
ficompl
rorb
sti
pushf
jns
mov
mov
ret
dec
pop
dec
lret
shll
into
sbb
cmp
loopne
sbb
lock
cs
js
pushf
sbb
mov
sahf
mov
push
xchg
push
popf
popf
out
negl
mov
mov
popf
sbb
jl
rcll
dec
and
push
xlat
sahf
es
jns
and
mov
scas
stc
inc
in
popa
insl
xchg
cli
mov
cmc
mov
sahf
sub
or
push
loopne
inc
adc
lcall
popa
jp
pusha
aaa
popf
and
hlt
mov
sbb
mov
js
arpl
ds
mov
push
popa
pop
std
test
xchg
sbb
lds
inc
lods
dec
and
and
pop
xlat
push
xchg
sbb
sar
pop
jns
iret
mov
daa
cs
pop
fidivrs
xchg
mov
popf
cmpsb
adc
testl
fiadds
inc
sbb
adc
jns
addl
adc
adc
fldl
roll
arpl
sbb
daa
cmc
pop
mov
sbb
xor
gs
sbb
sbb
fnstsw
pushf
push
xchg
inc
cmp
sbb
sbb
fwait
and
pop
lahf
pop
popa
loopne
outsl
fcompl
cmp
push
jno
lds
push
cld
out
jmp
loop
popa
lcall
mov
pop
cmp
adc
in
imul
sbb
xchg
arpl
dec
int3
adc
sbb
mov
dec
outsb
mov
mov
mov
xchg
add
jg
popa
frndint
add
cmp
xchg
inc
popf
test
cmp
mov
jns
pop
and
inc
aaa
pop
lcall
cmp
cmp
xchg
nop
mov
and
scas
sbb
fadd
fidivrl
cmp
sbb
loopne
pop
xchg
rcrb
xor
add
xor
gs
inc
inc
into
xor
xlat
sub
sahf
jle
cltd
hlt
mov
js
adc
fmull
loopne
xor
incb
cwtl
xlat
add
and
sbb
shl
xor
lahf
popf
jns
sbbl
outsl
or
addr16
out
loope
pop
fiadds
pushl
divb
pop
mov
and
and
cli
cmpsl
cmp
mov
js
jns
dec
fneni(8087
mov
mov
pop
cmp
cwtl
add
xlat
mov
loopne
or
sbb
xlat
popf
out
and
mov
movsb
orb
sti
pusha
pop
pop
cwtl
adc
js
mov
sahf
jge
fsubr
cld
decl
xchg
mov
sbb
xchg
testl
imul
popf
out
adc
dec
lcall
add
cmp
cmpsb
ficompl
and
mov
divl
mov
arpl
xchg
pusha
fcmovu
shrl
testl
adc
cwtl
fld
clc
cli
mov
dec
sbb
cli
cld
sbb
or
pushf
cld
cmp
mov
mov
inc
cli
inc
jbe
arpl
in
pop
lea
sahf
pop
cli
out
loopne
cld
fdivrs
out
pop
fcoml
clc
mov
push
mov
sbb
cmp
dec
jmp
mov
sarl
dec
and
aas
mov
add
and
xlat
jns
cwtl
mov
daa
outsb
sbb
mov
lahf
addr16
pop
pop
pop
cwtl
jp
mov
xchg
loopne
sub
inc
aad
dec
dec
and
stos
jle
adc
fnstenv
xchg
les
sbb
jl
jp
cmp
mov
or
and
popf
lea
popf
in
fcmove
fdivrs
add
loopne
lods
decb
cwtl
jg
cld
sarl
sti
xchg
xchg
dec
mov
fstpl
sbb
jmp
jge
jle
cmp
mov
bound
mov
inc
mov
sbb
ret
cld
fimull
pusha
and
mov
push
inc
sbb
pusha
loopne
and
cld
orb
incl
fldt
or
stc
mov
aaa
movsl
test
xchg
lret
push
push
dec
mov
jle
in
fs
out
sahf
cmp
dec
pop
and
sbb
and
fstps
gs
imull
dec
out
dec
int
push
mov
bound
inc
bound
jl
xchg
mov
idivl
pop
pop
cli
sarl
inc
xchg
loopne
push
pop
inc
call
lods
lret
lds
mov
pop
adcb
cld
stc
fisttpll
aad
mov
mov
out
jle
sbb
or
add
sub
int
rcrl
add
sbb
pop
cld
adc
cmp
cmp
fs
cli
mov
fidivrl
movsl
setge
pop
add
xor
cld
sbb
xor
stos
arpl
push
jmp
xchg
and
cmpb
int
jp
iret
les
mov
mov
xchg
pop
sbb
clc
das
or
sbb
jo
mov
ds
fcomps
fisubl
inc
dec
xor
and
push
sbb
mov
sbb
jmp
and
ds
stc
sbb
pop
aam
inc
decb
dec
sbbb
cmp
sti
hlt
pop
cmp
pusha
cmpsl
or
fdivrs
hlt
pop
stc
clc
or
data16
cmpsb
clc
cmp
clc
add
cmc
ja
mov
cld
inc
popf
mov
dec
int
mov
repnz
dec
xchg
sbb
cmp
pop
sbb
mov
and
popa
mov
sbb
aas
adc
xlat
sbb
cltd
inc
pop
pop
mov
sarb
and
mov
cmp
sbb
fucomp
cmp
cltd
cmp
mov
in
jle
pusha
and
mov
arpl
cmp
mov
dec
sbb
shlb
inc
dec
push
and
mov
push
fisttpl
fistl
mov
add
xchg
and
sarb
inc
ficomps
jbe
jp
push
mov
mov
jnp
lock
jns
fsts
dec
xchg
pop
js
in
sbb
shlb
mov
popa
jp
inc
mov
pop
mov
mov
cli
pop
dec
pop
add
pushf
popf
jle
outsl
or
sbb
sbb
cltd
lret
jp
pop
xchg
sbb
push
ja
cmp
and
cmp
stos
rcrl
pop
inc
jno
xchg
loopne
pushf
roll
or
pushf
aam
cs
loopne
cmp
jle
sbb
divl
sub
pusha
in
inc
add
sub
popf
jp
mov
mov
mov
cmp
rcrb
mov
mov
dec
cmp
inc
add
sbb
pop
cli
cmp
mov
and
ds
cltd
sar
mov
negl
pop
pop
sbb
jp
sbb
rcrb
cmc
mov
sbb
add
mov
fildl
pop
xor
mov
dec
xchg
dec
mov
cmp
idiv
std
cwtl
pop
and
sbb
jl
fadd
jp,pt
push
cmp
sbb
mov
sub
in
jl
pop
pop
fcmovnu
insl
sub
mov
add
jecxz
roll
mov
lret
jmp
andb
shlb
add
inc
shlb
sbb
fsubs
std
sbbb
sbb
pushf
sti
xchg
jns
or
notl
mov
das
or
fstpt
pop
or
cwtl
aad
pop
out
inc
mov
out
pop
sbb
adc
adc
cmp
fnstsw
fimull
push
xor
scas
pop
push
fstp
adcb
sub
mov
jns
sbb
xadd
mov
jl
mov
enter
mov
addb
cmp
or
into
rcrb
fdivrs
push
sarb
movsb
je
push
mov
addl
dec
clc
fdivr
cld
pop
sbb
and
in
sbb
push
sahf
pop
cli
adc
lods
cmpsb
jecxz
mov
cmpsb
inc
mov
jb
into
sub
fiaddl
dec
cmp
pop
pop
inc
xlat
jbe
mov
add
movl
pop
cld
fcompl
xchg
iret
mov
fnstcw
into
jecxz
or
cwtl
pusha
xchg
shlb
adc
sahf
pushf
pop
jns
pop
loope
adc
js
imul
sbb
mov
lret
outsb
rclb
cwtl
sub
pop
xor
pop
sbb
pop
cmp
repnz
cli
push
sub
mov
mov
aas
cld
shll
mov
psrld
sub
sarl
cmpl
mov
cltd
mov
ljmp
aas
lcall
and
iret
sbb
mov
movsb
sbb
js
fwait
pushf
in
rcpps
pop
cmp
call
xchg
pop
cli
jge
outsb
mov
mov
sbb
add
call
mov
subb
adc
sbb
inc
mov
stos
xlat
cmp
inc
sbb
jae
jmp
outsl
pop
inc
inc
cmp
pop
cmp
testl
cltd
cld
pop
add
addr16
mov
jns
push
mov
lcall
popf
pusha
pop
cmp
push
mov
adc
fimull
cmp
negl
add
cmpsl
les
xchg
int3
popa
mov
clc
scas
and
dec
push
and
int3
or
and
sub
fstps
inc
xor
pop
adc
pop
mov
fistpl
frstor
adc
sahf
rclb
mov
cmp
jb
push
mov
mov
mov
stc
js
sbb
and
push
shrl
jl
outsb
js
adc
or
in
dec
sbb
fnstsw
push
xor
aaa
dec
daa
mov
fstp
adc
negb
pop
pop
xchg
out
and
dec
pop
xlat
sbb
cltd
pop
sbb
rcrb
adc
mov
cmp
xchg
sbb
lcall
cli
mov
hlt
mov
sahf
lahf
lcall
movsb
and
cmp
in
inc
lcall
jp
bound
and
insb
ds
jmp
stc
pop
or
xor
push
test
jns
xlat
xchg
mov
dec
mov
pop
ret
mov
test
push
pop
and
js
mov
sub
cltd
enter
mov
rcrl
psrld
mov
sub
or
push
xchg
push
test
mov
lcall
xchg
pop
mov
jle
add
xchg
sub
jge
jns
mov
arpl
ljmp
arpl
mov
or
sarb
mov
incl
stc
sbb
and
int3
sar
out
into
cld
loop
lds
sbb
cli
inc
js
cmp
mov
lods
loopne
vpand
add
sbb
clc
cmp
inc
mov
pop
cli
clc
cmp
or
leave
or
bound
jle
cld
sub
pop
adc
mov
pop
cwtl
cli
sahf
jge
add
jle
mov
mov
fmuls
ja
mov
inc
dec
cld
bound
add
mov
loop
mov
mov
mov
mov
sbbb
cmp
fcompl
jns
clc
fldenv
sub
shr
fimuls
pusha
push
notl
mov
adc
popf
cwtl
xchg
mov
adc
mov
jns
add
lds
cmpsb
jle
mov
jbe
xchg
popa
out
inc
arpl
out
bound
dec
inc
sbb
cld
sbb
add
mov
cld
cld
clc
push
cli
add
sbb
xlat
cmp
lock
cmp
xor
aaa
jno
jl
and
lds
out
or
cwtl
cmp
frstor
jg
dec
push
mov
rorl
cwtl
js
push
pop
mov
push
mov
sbb
sbb
mov
fs
cltd
enter
push
fadd
sbb
js
xchg
sbb
xchg
cmpb
xor
cmp
sbb
mov
jnp
fnstsw
push
std
ret
push
pop
fidivrs
add
inc
cmovge
mov
sbb
sbbb
decl
leave
fdivr
cli
mov
in
fdivrs
in
mov
sbb
fidivrs
pop
cli
mov
and
mov
add
sbb
xchg
adc
ss
and
inc
mov
pop
mov
cld
pop
inc
std
jl
les
mov
js
fcmovbe
push
popf
pop
mov
imul
and
inc
cld
data16
pop
mov
pop
stos
mov
fidivrl
fsubrl
pop
popf
cmp
jp
mov
push
jns
std
pop
mov
fdivrs
xchg
mov
clc
call
push
mov
sbb
mov
lcall
movsb
jl
mov
sub
sti
fidivrl
add
cmp
pshufw
imul
notl
jecxz
xchg
cmp
in
adc
or
sub
into
sbb
mov
inc
cmp
fcoms
fs
fsubrs
fstpl
pop
add
xor
cs
ss
push
repnz
rcrb
into
adc
jl
mov
push
out
es
fsincos
mov
pop
fdiv
test
and
jbe
mov
and
push
shlb
scas
int
clc
sbb
rorb
mov
adc
cwtl
inc
fwait
cmp
sbb
jmp
inc
mov
bound
pop
cli
fisttpl
push
ja,pt
jmp
sbb
cmpsl
pushf
and
fstps
push
addl
fisubs
cmp
or
mov
sbb
ss
cmc
aas
in
and
cmp
int
xchg
sbb
or
xor
lods
jae
fwait
mov
push
cmp
std
les
jp
movsl
dec
mov
in
jo
outsl
testl
add
cmpsl
sub
fmuls
aas
cmp
sbb
pop
fcomps
rcll
les
fmuls
hlt
mov
and
cmp
lahf
push
rolb
dec
sbb
rcr
js
jae
mov
outsl
iret
fsubl
into
or
rcrb
add
pop
add
or
in
pop
sbb
push
loopne
push
adc
jo
add
std
push
inc
int3
cmc
pop
paddb
mov
push
jp
sti
jnp
push
sub
dec
std
stc
call
popa
sbb
cwtl
cwtl
and
xchg
mov
and
js
xor
lods
test
xor
lods
js
in
pop
push
push
add
test
mov
xor
sbb
fstpl
cld
cmc
and
gs
adc
xchg
andl
dec
insb
out
in
jl
pop
xchg
adc
fbld
test
sbb
ficomps
ficompl
ds
jge
push
stc
mov
or
adc
pop
push
repz
aas
cwtl
pop
lcall
pop
pop
pop
jp
jl
push
xlat
std
leave
movsl
push
pusha
sahf
mull
and
cltd
sti
rcr
sahf
mov
popf
sbb
lcall
test
lods
inc
rolb
dec
mov
add
loope
fcmovb
jns
mov
fnstcw
pop
and
and
mov
fnstcw
mov
pop
mov
sbb
jl
or
fcompl
sub
leave
inc
lret
xlat
in
jge
ljmp
bound
add
push
push
adc
out
cltd
pop
faddl
lcall
and
and
add
sar
sbb
and
lock
pop
scas
clc
fdivrs
adc
mov
mov
sbb
negl
sbb
sbb
pusha
adc
lcall
fsubl
or
jg
and
roll
mov
pop
out
pop
js
sbb
rol
push
lret
add
out
cmp
out
pop
jp
lock
mov
fiadds
mov
repnz
sahf
sbb
mov
mov
les
cmp
fstps
jp
pop
loop
mov
movsb
adc
pop
cmp
popf
pushf
iret
cmp
fs
mov
add
adc
ss
add
jge
sbb
cmpsl
movsb
sbb
mov
inc
daa
frstor
cmp
pushf
pop
jns
pusha
pop
sahf
fadd
mov
xor
stos
out
cmp
mov
in
mov
adc
cltd
sbb
loope
sbb
jns
aam
std
xchg
fdiv
das
in
mov
xchg
jge
sahf
stc
arpl
movsb
lret
fimull
sarb
pop
mov
out
loopne
adc
fsubrl
stc
fdivp
cmc
into
sub
fdivs
outsl
in
adc
cmp
cmp
pop
in
cld
mov
fstps
mov
xor
xchg
pop
enter
fidivrs
lds
push
inc
pop
cmp
fmul
cld
pushf
stc
roll
pop
mov
or
mov
mov
inc
jbe,pt
clc
out
fsincos
sbb
daa
pop
insl
js
inc
pop
and
cwtl
push
loopne
testl
pop
mov
mov
shl
jl
mov
xlat
or
loopne
or
mov
fcomps
pop
sbb
fistl
inc
jmp
loopne
cmpb
adc
stos
sub
dec
pop
mov
pop
xor
and
cmp
stc
jge
frstor
cmp
lcall
and
pop
mov
pop
or
clc
jae
push
js
add
mov
jge
mov
jmp
cltd
dec
add
cmp
mov
pop
inc
sbb
mov
inc
mov
add
jge
enter
jle
xchg
mov
out
inc
jns
jnp
fcmovnbe
pop
fdivrl
insb
or
sbb
pop
cli
fcoml
out
inc
clc
lcall
push
gs
sbb
popf
push
cmpb
xchg
in
inc
sbb
cmc
ffree
fwait
xlat
in
out
js
sub
xor
pop
movsb
jl
mov
mov
ja
and
aam
dec
or
fdivrs
cli
xlat
pop
and
clc
sarb
cmpb
daa
jbe
sbb
jle
adc
mov
clc
or
outsl
fdivrp
mov
or
pop
std
pusha
mov
jmp
or
int3
inc
popa
std
push
mov
cld
jmp
mulb
sbb
mov
adc
xlat
pushf
rcrl
cmpsl
les
loopne
repnz
mov
shlb
mov
popf
loopne
add
jle
sbb
in
pushf
out
cmp
sbb
sbb
inc
jno
cmp
or
inc
popf
add
inc
mov
xor
and
push
jl
frstor
sbb
clc
push
and
pop
adc
inc
popf
sbb
fsubrl
xor
sbb
cmp
push
les
adc
fidivs
scas
mov
cs
push
fadd
sbb
sbb
clc
or
loopne
fisubrs
or
pop
call
fimuls
sub
mov
add
dec
inc
js
out
sbbb
add
cmpsb
push
ffreep
cmp
or
and
cmp
lds
pushf
pop
mov
adc
fcompl
lea
adcb
mov
js
orb
inc
faddl
jns
cmp
or
push
mov
pop
xor
or
sbb
adcb
ficoms
pop
fisttpl
mov
jge
lahf
scas
jb
sbb
pop
imul
fscale
hlt
fs
push
mov
cmpsb
stc
fcomps
cmp
cld
movsb
mov
sarl
xchg
scas
add
sarb
jl
aad
je
add
call
into
push
mov
les
sahf
in
arpl
stc
inc
std
sbb
fiadds
in
daa
negl
xchg
push
arpl
cmpsb
lcall
lock
add
cmp
push
dec
frstor
jg
fcmovu
sub
cmp
and
mov
scas
xchg
inc
rcrb
pop
mov
or
rcr
pop
adc
dec
lcall
pop
cmc
rcl
sbb
pop
popa
mov
gs
sti
xchg
clc
inc
dec
xor
pop
add
add
faddl
cli
loopne
inc
sbb
sbb
fwait
and
cmp
cmp
sbb
aam
inc
cltd
pop
mov
pop
pushf
jns
dec
cmp
sbb
mov
fdivs
pop
insb
add
jg
rcr
rorb
and
dec
jecxz
jae
xchg
loopne
pop
js
lock
jl
push
cltd
imul
mov
into
aad
ljmp
flds
jae
idivl
ficoml
jmp
xchg
add
xlat
jno
in
xchg
sbb
fidivrl
cs
sub
js
cltd
cmpsl
cmp
pop
mov
pop
inc
push
jp
jle
fs
pusha
pop
xchg
stc
cmp
dec
xor
pop
sbb
es
push
arpl
fs
sahf
popf
lds
ret
pop
xchg
and
sbb
adc
sbb
and
fistps
sbb
inc
fstps
pop
push
jle
jl
pop
inc
mov
cld
pop
pslld
sbb
sub
adc
jle
clc
test
xchg
adc
push
fsubrl
fucomip
sub
lcall
sub
pusha
lock
inc
out
and
push
pop
sbb
cmp
inc
pop
jge
clc
jmp
sub
jae
mov
fsqrt
jae
jns
aaa
mov
push
push
or
daa
add
jle
xor
xchg
adc
sbb
sahf
cmp
call
inc
xor
shr
cli
ds
notb
arpl
sbb
add
in
inc
cmp
movsl
rcrb
cmp
clc
and
lds
cmp
imul
dec
inc
adc
rcr
cmp
and
mov
mov
jl
xchg
jle
mov
mov
sbb
ja
sbb
mov
popf
int3
or
mov
push
sbb
jg
scas
pop
adc
sbb
pop
sbb
stc
pop
push
adc
push
fidivs
jg
lea
pop
cmp
add
fstpl
decb
inc
cwtl
fisubl
jbe
pop
mov
xlat
mov
pop
and
lcall
or
lahf
xor
fdivp
and
dec
out
mov
cmp
sbb
popa
out
cmp
mov
mov
inc
fstp
cwtl
mov
pop
jns
mov
jg
test
popf
xchg
pop
sbb
cltd
sbb
ljmp
rclb
int3
xor
loopne
sub
pop
sbb
fcompl
sub
cmp
mov
fistl
xor
mov
fsubrp
sbb
mov
fistpl
fcmovu
dec
fistpl
add
loopne
lcall
cli
js
leave
lret
adc
adc
push
insb
in
cmp
xlat
sbb
mov
lcall
out
mov
fcmovne
and
sbb
jg
mov
sbb
je
cmp
or
pop
mov
adc
sarb
xlat
rolb
adc
pop
lcall
pop
repz
std
sbb
imulb
neg
jle
arpl
mov
mov
inc
pushf
cltd
add
pop
out
cmpsl
cmp
add
js
inc
loopne
sahf
ds
sbb
and
pop
cltd
test
jle
jbe
in
sub
jae
inc
jns
dec
jp
into
lods
cwtl
sbb
sbb
popf
sarl
mov
add
pop
jg
cltd
or
loopne
mov
push
out
cmp
stc
mov
push
shl
dec
mov
pusha
push
sti
lcall
daa
adc
popf
pop
fstpt
inc
sbb
subb
push
sbb
fistl
sub
adc
pop
cld
inc
fdivrl
pop
pushf
adc
fnstenv
fidivl
mov
sbbb
dec
inc
in
xchg
dec
mov
inc
pop
cmp
xchg
int
add
and
or
fcoml
xchg
sti
mov
cmpsb
mov
daa
sbb
sbb
xchg
bound
push
aam
sbb
inc
outsb
inc
or
sahf
aam
and
scas
jg
jle
xchg
inc
lds
call
sbb
arpl
dec
xor
data16
mov
mov
cmp
jge
bound
sub
sti
pop
push
sbb
add
or
pop
out
repnz
sbb
or
lcall
clc
cmp
shll
adc
fidivrl
cmc
pop
lcall
stc
cwtl
cwtl
adcb
aas
mov
lret
cs
fdivl
movswl
mov
fisttpll
xlat
ja
popf
sbb
stc
pusha
daa
inc
dec
add
pop
pushf
mov
std
jns
inc
fistpl
sti
inc
pop
jmp
pusha
pop
popf
fstps
add
jge
xchg
fiaddl
dec
adcb
fwait
push
push
ds
add
pushf
mov
call
daa
test
cmp
inc
sub
sbb
clc
or
cli
mov
xlat
adc
xlat
sahf
adc
ss
pop
loopne
ret
fwait
or
sbb
mov
clc
cmp
insb
imull
and
jmp
pop
rol
and
adc
call
xor
dec
inc
pushf
adc
pandn
incl
cltd
mov
cmp
pop
pop
idivl
jge
lods
pop
pop
sbb
js
cmp
mov
jmp
and
call
mov
jno
pusha
inc
arpl
xchg
pop
jnp
pop
mov
mov
ja
frstpm(287
jae
lods
movsl
jge
stc
addb
xchg
mov
or
cwtl
shlb
pusha
std
cltd
push
cwtl
enter
enter
aad
outsb
loopne
repnz
mull
cmpsl
out
mov
or
cmp
cli
pop
cmpl
sbb
cmp
jp
and
jge
push
mov
ficoms
fs
adc
xchg
fcomps
or
and
testl
stos
fcmove
std
pop
sub
cmp
pushf
jp
adc
jns
mov
cltd
inc
xchg
xlat
mov
lahf
jp
push
jle
sbb
jmp
imul
shl
dec
ljmp
into
call
jmp
cwtl
in
or
push
or
stc
cltd
pop
stc
dec
cld
loope
adc
mov
movsb
or
sahf
push
jl
lret
int3
test
std
leave
mov
xlat
mov
pop
js
stos
jl
mov
sarl
cmpsl
cli
dec
push
and
stc
popf
sbb
pop
int
into
cmp
test
mov
out
lahf
inc
loopne
mov
clc
out
inc
lcall
js
shl
sbb
and
pop
sbb
stos
add
cltd
sti
and
adc
and
mov
adc
xlat
sbb
js
sub
fnstcw
fstpl
out
pusha
cmp
je
clc
mov
jns
mov
adc
shl
clc
fdivrs
into
aas
mov
add
push
push
pop
pusha
incb
dec
mov
mov
cltd
sbb
xor
outsb
lcall
mov
cmp
cmp
pop
push
rcll
fldenv
cmp
mul
mov
jle
or
and
pushf
cld
sbb
std
sti
add
bound
push
mull
pop
sbb
push
mov
ror
out
add
and
lcall
roll
mov
jl
push
fwait
sbbb
pop
cwtl
nop
lods
mov
gs
push
mov
push
subb
std
loope
enter
lods
pop
inc
cwtl
add
pop
adcl
shr
insb
idivl
int3
loopne
or
jle
jo
mov
xor
lds
js
mov
sarl
in
lcall
push
fisttpll
into
push
pop
unpckhps
xor
adc
cltd
pop
sbb
jns
shlb
xchg
div
or
test
sub
out
stc
and
adc
jo
cld
pop
cmp
incl
sbb
aam
xor
into
sub
in
cltd
dec
cld
pop
sbb
adc
jle
fcoml
movsl
fdivrp
push
fcmovnu
add
fsubr
in
cltd
push
or
sbb
fnstsw
les
and
sbb
dec
pop
les
lds
xchg
push
lret
inc
inc
shl
ljmp
jge
pop
cmpsl
dec
mov
sahf
cld
je
xchg
inc
mov
sbbl
xlat
mov
fstpt
cmp
cmp
sbb
mov
popf
inc
aas
jle
ds
cmp
xor
cld
pushf
popf
subb
shll
lea
mov
dec
push
cmp
adc
add
cmc
ficoms
repz
push
rcll
loopne
cmp
mov
push
mov
dec
andb
pop
cltd
sbbb
mov
es
imulb
fcompp
pop
sub
ds
cld
add
mov
cmp
pushf
cmp
sbb
bound
in
in
lock
fcompl
in
inc
daa
mov
adc
pop
fdivr
rcll
adc
jp
xchg
pushf
push
sahf
jbe
push
testb
ds
sbb
mov
into
cs
inc
push
mov
sbb
xlat
call
fldt
xchg
out
adc
mov
dec
inc
sbb
mov
and
pop
adc
and
cltd
dec
sub
push
jns
pop
pop
mov
test
stos
out
cltd
pop
sahf
sbb
mov
cwtl
mov
mov
fimull
jae
dec
std
gs
in
cltd
ret
fldt
neg
in
sbb
fcom
jae
mov
dec
dec
cmp
cmpsb
and
xchg
fs
rol
clc
cmp
cmc
int3
ja
loope
lcall
sti
push
fdivrs
pushl
adc
and
sbb
pop
stc
push
jge,pt
pop
add
data16
daa
sti
clc
das
mov
inc
nop
push
in
shlb
jp
or
jge
popf
jmp
pop
lcall
faddp
cli
insb
fcompl
bound
cmp
aaa
cmpl
into
popf
pop
mov
outsl
sbb
fwait
push
push
push
cmpsb
mov
dec
enter
pushf
loopne
jp
and
push
sbb
popa
jae
loopne
or
cmp
into
pop
and
and
pop
fistpl
mov
xchg
sbb
or
mov
cmc
dec
aad
mov
and
in
mov
sbb
sahf
mov
negl
std
sbb
cmp
lret
jbe
inc
jge
cmp
add
cli
and
fwait
mov
fcoms
mov
ja
lock
cmp
ljmp
imul
sbb
jg
popf
ret
test
mov
jg
popf
std
mov
jl
jle
mov
xchg
inc
jbe
in
movsl
mov
and
or
cmp
pop
ja
pusha
pop
neg
sbb
sahf
insb
inc
cmp
add
movsl
std
ficomps
pusha
push
jmp
cmp
sub
lock
mov
and
xchg
popf
add
lret
lcall
call
sbb
adc
cltd
sbb
shlb
cs
mov
clc
mov
rcl
jbe
aaa
bswap
sarb
out
fucompp
and
mov
mov
punpcklwd
cld
es
xchg
sbb
fsubl
add
cmp
mov
inc
popf
sbb
pop
ja
sahf
orb
xlat
rcrb
imul
inc
and
fsubl
jae
outsl
test
mov
lahf
pushf
sti
mov
sbb
sbb
movsb
js
fsts
cld
ficoms
push
jge
xlat
jmp
les
jp
das
in
xorl
idivl
ds
cmp
adc
add
or
and
jmp
call
add
aaa
fwait
xlat
mov
cwtl
gs
jnp
rcrl
xorb
adcl
pop
dec
and
or
inc
jle
sarb
movsb
iret
mov
orb
mov
cmp
aam
cmp
rol
pushf
jmp
or
cld
inc
les
subps
lcall
sbbb
pop
sbb
sbb
adc
jl
pop
dec
xchg
xchg
popa
sbb
pop
cld
fcompl
cs
mov
into
in
pop
mov
cmp
xchg
sti
fdivrl
out
pop
mov
mov
cltd
cld
sbb
outsl
lcall
pop
pop
jns
sarb
cltd
scas
je
mov
fcmovb
push
mov
xchg
loopne
xchg
sbb
pop
xlat
inc
xchg
sbb
mov
daa
mov
lret
pop
cli
clc
cmp
mov
push
mov
aas
adc
xor
jl
xchg
pop
fcomps
mov
fstpt
bound
pop
sbb
and
jp
andb
push
fwait
mov
loopne
and
in
sbb
cmp
sbb
mov
popf
movsl
jp
pop
loopne
mov
push
dec
gs
pop
lds
xor
add
ffree
in
sbb
fsts
nop
pop
cli
adc
fwait
cmp
gs
sbbb
sahf
repz
dec
pushf
fstpt
shll
fs
mov
and
loopne
pusha
adc
mov
inc
into
lods
mov
adc
inc
loopne
sti
int3
stc
in
add
xor
scas
into
push
mov
ljmp
pop
mov
das
cli
jbe
cli
pop
push
mov
pop
adc
pushf
jbe
imul
test
rcrb
cmpsl
out
fisttpl
stos
test
loop
jp
pop
adc
mov
cld
fbld
cltd
loopne
pop
test
dec
pop
cmp
sbb
lcall
sbb
xlat
faddp
fstpl
les
cmpsl
inc
fsubp
addr16
fcoml
jns
std
and
pop
mov
fld
popf
sbb
mov
xchg
add
fstps
mov
jge
sbb
out
sahf
sti
add
push
ja
adc
sbb
xchg
pop
sahf
mov
test
dec
xlat
xor
out
mov
loopne
lcall
pop
adc
add
std
dec
xchg
mov
pop
mov
and
pusha
adc
stc
or
or
cltd
gs
sarb
es
sub
cmp
sbb
ss
addr16
add
pop
lea
js
add
jl
incl
fisubrs
dec
xchg
pop
inc
push
xor
cld
cltd
add
sahf
and
mov
cltd
dec
push
mov
mov
movsl
test
mov
jns
pop
movsb
pop
fmul
mov
inc
ds
in
cmp
push
pop
adc
pop
cltd
and
das
cmp
int3
js
sbb
aaa
dec
adc
inc
pop
mov
mov
cmp
mov
popf
cmp
les
arpl
sub
into
dec
jbe
leave
inc
pushf
js
mov
out
cmpsb
ds
ficomps
sbb
pop
inc
pop
fcmovu
pusha
or
sti
cld
pop
jmp
jbe
mov
testl
insl
fisubs
std
adc
sti
lcall
pop
mov
cmp
std
cmp
stos
jp
pop
fmulp
mov
addb
push
xor
mov
std
mov
orl
and
sahf
shrl
mov
jnp
inc
mov
in
test
inc
leave
sbb
add
lods
mov
shlb
pusha
cli
addr16
cltd
daa
pop
xchg
pushf
inc
std
dec
jge
push
sbb
sub
divb
ds
mov
in
cmp
rcrl
out
clc
sahf
aaa
jbe
orb
scas
pop
sub
jp
inc
cld
mov
rcrb
mov
inc
test
cltd
aaa
js
lcall
cltd
and
loopne
pushf
or
ljmp
mov
cmp
decb
sarl
sbb
clc
pop
aad
sahf
mov
jecxz
sbb
mov
mov
pushf
idivl
aad
into
xchg
mov
mov
push
cmp
bound
add
ficomps
and
loop
mov
jle
dec
xlat
cltd
mov
out
mov
sbb
jae
mov
fwait
cmpl
push
lcall
rcrb
mov
stc
add
cmp
mov
sti
push
dec
xor
gs
fistps
mov
inc
cmp
mov
cmp
cwtl
call
pop
scas
testb
mov
xchg
js
in
movsb
xchg
add
cwtl
adc
fdivrs
push
push
testw
test
cmp
jp
fisubl
cmp
mov
pop
or
sarb
cs
jecxz
mulb
imul
sbb
jmp
ficoms
shll
jp
stc
mov
ficompl
sbb
and
pop
lcall
add
pop
fs
and
fcomps
addl
cmp
jns
jne
shrl
adc
adc
std
sti
pushf
pop
fidivrl
push
into
xor
outsl
pop
stc
neg
mov
fstpl
and
fcomps
sbb
out
mov
addr16
add
adc
adc
clc
fiaddl
popf
dec
jp
sahf
jbe
divb
pop
fiadds
sti
pop
mov
jge
pop
or
in
and
pop
add
imul
dec
fs
aaa
bound
out
pushf
add
cmp
xchg
sarb
xchg
fwait
mov
std
mov
aad
jno
ljmp
sbb
push
jae
jle
mov
outsl
push
sub
add
sbb
cmp
jmp
jp
js
sbb
pop
mov
cmp
es
xchg
fidivrs
adc
pusha
cld
fcompl
sbb
push
mov
mov
mov
loopne
cwtl
and
pop
mov
sbb
mov
pushf
ficoml
sar
cld
jge
loop
pop
pop
sbb
fnstsw
cmp
fiaddl
and
sbb
mov
stos
jno
pop
cld
rorb
inc
xchg
or
xor
and
mov
adc
xor
ret
inc
movsb
jb
rcrl
les
arpl
lcall
idivl
inc
xor
cmp
adc
mov
inc
cwtl
or
popf
xchg
inc
mov
push
pop
fisttpll
push
inc
jle
mov
js
xor
cmp
pop
mov
jns
dec
xchg
icebp
or
cwtl
jge
fisttpll
jo
popl
push
sbb
and
and
jns
mov
mov
sbb
sbb
cld
xlat
mov
fdivr
xchg
xchg
or
jecxz
mov
or
add
adc
outsb
jl
bound
sbb
sbb
add
xchg
fsubl
out
sar
cmovae
adc
gs
cmp
mov
pop
inc
fcmovnb
ds
stc
pushl
in
and
sbb
fcomps
leave
les
adc
test
pop
mov
cld
sbb
cmp
and
xlat
ss
cmp
loopne
mov
fadds
xchg
fistpll
xor
outsb
in
idivl
js,pt
cmp
and
fmull
outsb
adc
push
mov
fsubl
std
lret
pop
fstps
sbbl
mov
adc
jl
inc
or
adc
rcrb
pop
sbb
mov
mov
inc
cmpsb
das
cld
and
pop
pop
int3
mov
and
out
cmp
cmp
and
sbb
js
mov
fwait
cwtl
sarb
nop
testb
pop
in
cmp
mov
dec
mov
and
inc
adc
repnz
pop
fs
faddl
and
popa
sbb
pop
jns
pop
fidivrl
and
scas
lret
adc
lcall
call
ss
mov
nop
sar
cli
stos
pop
xlat
les
out
jge
cltd
pop
pop
fisubl
inc
cmc
mov
fiadds
pop
and
pop
lods
inc
cli
dec
sbb
fsts
jne
mov
mov
inc
dec
push
jnp
mov
into
inc
adc
adc
sbb
pop
sub
sub
mov
sar
inc
inc
arpl
imul
xor
lret
cwtl
sub
dec
push
and
cli
xlat
leave
cmp
pop
push
jge
mov
add
lcall
xor
mov
and
mov
ljmp
mov
and
pop
popf
cwtl
lea
adc
adc
cmp
jnp
inc
jle
pop
ds
sahf
rcll
xor
aas
popf
jp
push
inc
cmp
loopne
cltd
pop
mov
mov
or
cmpb
jbe
cmp
cli
jecxz
cli
jb
cli
addb
pop
cmp
lea
into
or
jl
clc
cmp
xchg
cmp
pushf
out
sbb
fimull
fisubrl
inc
adc
scas
inc
mov
sbb
and
mov
cmp
cwtl
fstpl
fldlg2
rcrl
adc
add
inc
cmp
fcompl
scas
fidivrl
shrl
jp
andb
xchg
xchg
pop
mov
adc
pop
mov
inc
mov
fnstsw
test
inc
cmpsb
sar
fcoml
jmp
mov
pop
mov
out
jbe
and
mov
and
mov
adc
arpl
and
and
add
xlat
fmull
fdiv
pop
stos
sub
stc
adcb
les
pop
inc
pop
push
clc
pop
inc
insl
pop
cmp
loopne
cmp
lret
loop
cmpsl
mov
fs
scas
rcrb
cmp
into
fdiv
vphaddubw
sbb
rclb
pop
std
fstpt
xor
sbb
cmp
pop
sub
sbb
sub
and
jle
pop
js
jp
fwait
rolb
cmp
sbb
gs
movsb
add
mov
mov
popf
loope,pt
fpatan
test
sbb
fisttpll
cli
cmp
or
movsl
add
and
mov
aas
into
xchg
ficoml
jmp
jbe
pop
cmp
rcrl
jmp
out
rorb
out
stos
std
cmp
pop
dec
les
add
inc
cld
sub
cmpsb
mov
into
and
sub
jmp
fdivrp
sbb
xchg
ss
cmp
pop
mov
inc
adc
push
fld
lcall
fstl
and
mov
adc
pop
negl
incb
cmp
jns
pop
add
cmp
call
xchg
in
xlat
push
adc
sti
mov
pop
fucomp
pusha
fsts
cwtl
ficomps
mov
fisttps
adc
pusha
pop
adc
out
push
xlat
out
or
jle
test
jbe
adc
loopne
sbb
inc
fdivrl
pop
and
mov
xchg
outsb
fcmovbe
jns
sub
push
lahf
mov
or
cmp
jl
jp
xlat
out
jnp
mov
inc
sub
mov
mov
stc
insb
jbe
bound
cs
pop
push
sbb
push
or
push
popf
pop
xor
sahf
cli
test
or
sbb
mov
loopne
sti
xlat
fnstsw
stos
adc
or
or
clc
fwait
sbb
pop
pop
pop
fdivrs
and
clc
jmp
pop
sbb
mov
pushf
mov
push
cltd
cmp
push
sbb
xchg
or
sbb
rcll
cmp
adc
loopne
test
add
fcompl
pop
sti
and
push
pop
pusha
scas
cmp
clc
fistpl
inc
popf
sbb
ds
aam
jecxz
pop
daa
es
adc
sub
mov
les
std
fsub
sbb
pushf
mov
lods
inc
sbb
arpl
pop
mov
xlat
cmpsl
imul
cli
dec
mov
cmp
add
mov
jle
pop
pop
push
fsubrp
clc
jge
cld
adc
or
sbb
cmp
sbb
sbb
inc
roll
int
into
inc
daa
into
push
push
cmp
inc
jnp
fistpl
add
movsl
fstp
inc
enter
popa
mov
sar
sbb
fstpt
mov
cltd
pop
loopne
ja
jg
insl
sub
push
stc
scas
call
popf
std
fwait
cmp
pop
mov
jmp
adc
fldenv
lcall
and
test
idivl
gs
mov
jae
imul
dec
sub
outsb
stc
push
xlat
adc
fcomp
cmp
jb
fnstsw
jge
decb
sub
jns
sti
or
js
rorb
ss
adc
add
lea
cmp
inc
stc
add
add
dec
sbb
stc
int
pop
test
fcomps
mov
rcl
inc
inc
test
mov
call
xchg
ret
jcxz
push
xchg
xor
sbb
inc
pop
clc
inc
dec
scas
sbb
loopne
lcall
mov
fs
sbb
add
dec
test
cmp
dec
fadds
fadd
clc
cwtl
fidivrl
pusha
jns
arpl
das
test
mov
mov
into
and
and
pop
sti
jmp
jp
cwtl
mov
mov
rolb
std
xlat
cwtl
gs
and
mov
mov
fidivrs
clc
fidivs
add
pop
aad
jge
mov
into
bound
dec
jle
jge
push
adc
and
cmp
adc
mov
fidivrs
sbb
shlb
pop
pop
and
inc
mov
cltd
fcompl
loopne
xlat
sbb
cld
xchg
pop
jle
stc
ss
fadds
sahf
cmp
idiv
and
or
jp
xchg
sbb
cmp
fcoms
adc
adc
cwtl
and
cmp
js
shlb
add
out
cli
jmp
fcompl
adc
mov
inc
mov
cmp
lret
sarl
insb
xchg
dec
into
out
sbb
xchg
cli
jl
mov
push
adc
cld
ja
add
mov
jmp
and
adc
adc
inc
cmp
xchg
add
mull
fstpt
fdivrl
out
js
push
aas
add
adc
js
cmpsb
xor
inc
mov
mov
mov
pushf
shl
fisttpll
cli
cmp
cmp
sbb
mov
cmp
lret
std
push
mov
mov
clc
pop
imulb
pop
jns
sbb
pop
cmp
lods
popa
jle
gs
testl
cli
cltd
push
fldcw
inc
pop
mov
cmp
std
shll
fmull
and
jmp
sbb
in
jle
ds
stc
out
mov
or
cmp
cmp
arpl
mov
fcomps
mov
inc
fnstsw
cmp
rcll
or
fwait
cld
pop
sbb
or
inc
ja
gs
adc
xchg
js
inc
cmp
mov
mov
xor
sbb
inc
and
clc
mov
cmp
jge
add
call
gs
mov
jg
and
cltd
std
cmpb
cmp
add
lds
inc
mov
bsr
adc
das
sbb
out
pop
outsb
inc
pusha
xchg
sar
cld
mov
sbb
xchg
mov
loopne
jl
mov
imul
rol
jp
loopne
push
jns
fcompl
les
sahf
repnz
stos
daa
jp
outsb
sub
aas
mov
xlat
xchg
lds
mov
gs
in
cmp
cmc
prefetchw
or
sbb
in
add
cmpb
jbe
hlt
repz
cli
int
ficompl
test
insb
fsts
sti
leave
mov
add
jl
mov
inc
and
lcall
fidivl
call
jae
add
cli
movsl
sbb
pop
out
aaa
out
push
loopne
pop
adc
and
xlat
cltd
rcr
call
sbb
rcrl
scas
sbb
xor
or
fidivl
pop
sbb
neg
pop
sbb
fstpl
inc
fs
dec
outsb
ds
into
insb
sahf
xor
inc
cmpsb
xchg
sbb
jle
sbb
aaa
ficoms
scas
inc
pop
aaa
orb
cld
les
clc
or
pavgb
jns
sbb
mov
pop
popf
inc
pop
sbb
cmp
sbb
cmp
jg
mov
push
push
push
clc
cld
mov
scas
loopne
cwtl
mov
adc
push
cmp
mov
js
aad
lcall
cltd
fdivs
fstps
lret
or
cwtl
idivl
sbb
dec
std
enter
jl
or
add
jl
and
pop
xlat
jbe
inc
and
pushf
pop
sbb
inc
ficoml
push
imul
popf
call
cmp
push
sub
arpl
std
fdivp
fsubs
pop
arpl
imul
inc
cmp
and
arpl
sub
cmp
into
fstpl
sahf
sbb
mov
arpl
inc
mov
sbb
adc
adc
rcrl
fstpl
sarb
inc
int3
xchg
mov
sbb
cli
inc
pop
jns
cmp
arpl
mov
insb
cmc
mov
add
jbe
pop
movsb
repz
add
les
cwtl
negl
cltd
rcrl
inc
sbb
pop
fstp
cli
sti
mov
jp
and
setbe
testl
sbb
aas
fs
sahf
repnz
inc
in
fmull
sbb
adc
pop
pusha
inc
adc
cmp
int3
pop
and
and
add
add
mov
fildl
lahf
add
push
pop
inc
fstpl
jns
cmp
aas
add
sub
add
ds
ja
mov
and
movsb
loopne
cmp
jns
cmc
lods
cmc
fdiv
shl
scas
inc
imul
loop
or
sti
sbb
adc
sbb
mov
cltd
adc
rcl
mov
cmp
mov
jns
push
into
pushf
clc
mov
movsb
cmp
and
jp
fcomp
fs
mov
out
jecxz
and
mov
andl
jmp
and
mov
fcmovu
xchg
push
fidivrl
fldt
into
pop
stc
sbb
sbb
popf
pop
popf
sbb
rcll
xchg
adc
ds
jl
push
or
mov
std
cltd
in
fs
add
jo
vpunpckhqdq
xor
push
jle
clc
sub
cmp
inc
pop
mov
cwtl
lcall
out
sub
scas
xchg
dec
incl
cwtl
sbb
subl
cld
pop
imul
fimull
jns
pop
sbb
sbb
lcall
mull
xchg
in
cmp
jecxz
push
cmpsb
xchg
outsl
and
and
pop
adc
adc
pop
mov
xlat
subb
mov
fstl
cwtl
jl
and
lcall
cmp
das
sbb
pop
sbb
push
fwait
cmc
cmp
lock
sub
adc
pop
and
pop
xchg
cltd
mov
cmp
loopne
mov
out
idivl
fidivrs
rcll
in
jl
sub
ficoml
das
or
and
fcmovnbe
into
mov
insl
arpl
mov
pop
pop
cmpsb
pop
mov
pop
stc
fisttpl
mov
sahf
leave
jbe
mov
cmp
ds
mov
lea
stc
dec
jecxz
pushf
mov
sub
mov
pop
push
int
cld
push
and
lcall
cmp
and
sbb
jl
push
mov
pop
jge
pusha
push
cmp
jge
rolb
add
jl
sbb
cmpl
sbb
frstor
adc
clc
lds
loopne
adc
js
popl
inc
or
and
dec
inc
cmp
lods
fiadds
mov
lods
ljmp
shlb
leave
push
ss
mov
xchg
outsb
out
inc
fldl
xor
and
pop
push
and
fsubrs
xchg
jp
jle
cmp
scas
cltd
and
and
lahf
sahf
in
sbb
sahf
enter
pop
push
pop
loopne
sbb
mov
rolb
std
sub
sub
fcmovne
shrl
jbe
and
iret
out
xlat
cmp
sub
out
mov
cmpsb
mov
dec
ss
inc
adc
sbb
rcll
sbb
or
insb
mov
and
lcall
fisubs
sbb
popa
adc
push
push
mov
insb
notl
dec
cmpsb
out
pop
pop
jge
stos
cmp
push
loopne
sbb
cmp
xchg
fisubrl
sahf
mov
pop
in
fisttpl
xchg
mov
or
popf
pop
js
adc
mov
outsb
iret
jns
xchg
pop
fistpll
cmpb
mov
mov
fwait
mov
ja
fsubrs
push
cmp
add
nop
pushf
cmpb
out
ds
lcall
cmp
jb
popf
lds
roll
sub
pop
pop
arpl
mov
pusha
sahf
je
inc
inc
pop
pop
add
fld
aas
iret
cmp
pop
mov
movsb
cmp
shll
pop
and
fimuls
sbb
pop
out
inc
and
mov
mov
mov
cmpsb
ljmp
adc
jge
cmp
mov
mov
adc
sbb
cld
dec
mov
in
fcomps
sbb
mov
jl
shlb
fwait
cmp
inc
sbb
imul
pop
jl
xchg
and
rcl
fisubl
inc
or
cmp
mov
sbb
and
outsl
std
loopne
pop
popf
adc
idiv
cmpsb
jmp
cmp
insl
mov
sbb
add
cmp
push
inc
inc
jl
fnstsw
or
ljmpw
cmp
pop
adc
pop
ds
sbb
sbb
stc
ret
push
pop
jnp
xchg
bound
and
mov
fdivrs
popf
insl
pop
pushf
dec
mov
jl
adc
inc
mov
mov
mov
mov
stc
sbb
popa
sbb
cmp
fdivs
sbb
lahf
testl
pop
jl
mov
sbb
cmp
mov
sahf
pop
shlb
lcall
fcmovu
sbb
js
cmp
xchg
cli
in
sbb
loopne
pop
ficomps
out
xor
fiaddl
shrl
xor
cld
icebp
out
jle
js
dec
cli
inc
adc
jns
push
xchg
int
data16
sbb
add
inc
out
pusha
and
imul
in
lds
jle
xor
incb
xchg
cld
in
push
fcomi
push
cmp
pop
xchg
leave
popf
mov
arpl
pop
sti
call
xchg
dec
into
out
xlat
sbb
dec
ss
das
jmp
mov
jns
gs
push
mov
sbb
add
aas
or
sahf
xchg
cmp
mov
paddsw
cmp
fstps
fimull
arpl
inc
sbb
inc
sti
ds
arpl
push
adc
cmp
lds
mov
test
clc
push
jns
jmp
repnz
std
addr16
add
add
xchg
cmp
jl
adc
mov
outsl
sbb
clc
inc
xor
and
dec
pop
out
mov
mov
sub
adc
aam
into
cmp
fidivs
pop
pop
dec
sbb
sti
mov
cmp
lahf
lcall
sub
pushf
mov
sbb
decb
xchg
sbb
xchg
add
sub
rolb
xchg
js
adc
and
fstps
push
push
sub
push
pop
mov
jge
cld
out
mov
push
adc
fcmovnu
and
ret
idivl
imul
nop
pusha
pushf
pop
fs
mov
sbb
xlat
sbb
pop
out
mov
lcall
mov
sub
out
out
ljmp
fwait
and
push
pop
stc
fists
and
sbb
pop
dec
mov
pop
in
sti
jns
mov
cmp
fs
or
std
adc
or
nop
fstps
and
int
jl
hlt
inc
sarb
stos
pushf
pop
mov
mov
js
cli
pop
push
std
dec
add
std
sarb
out
sbb
in
mov
adc
xor
ljmp
fistpl
sbb
sarb
leave
pop
sub
add
ss
test
mov
or
jle
iret
lcall
into
fcomi
xchg
inc
cmp
jp
enter
push
movsl
lret
mov
xor
mov
cld
stc
xor
dec
sbb
xchg
add
mov
mov
xlat
fdivrl
popa
jns
loopne
mov
addb
mov
out
pop
sti
scas
lret
scas
and
sahf
sbb
into
mov
sbb
sbb
xor
clc
clc
jle
lret
mov
sub
fs
and
push
inc
pop
or
mov
ficoml
movsb
cmp
ja
fsub
pushf
pop
popf
xchg
pop
cwtl
push
lock
js
lcall
mov
adc
jecxz
fdivr
xchg
push
jo
push
ficoml
idivb
xlat
pusha
in
cmp
gs
aad
stos
inc
mov
and
outsb
xor
adc
push
loopne
pop
flds
or
popf
test
mov
push
and
notl
fistpl
sbb
ss
lret
xor
rclb
mov
cmp
jns
sbb
call
jecxz
push
stc
jb
clc
loopne
test
cmp
xchg
cld
shl
cli
sub
xlat
xchg
sub
cwtl
inc
pop
je
xchg
jb
pop
push
andb
jb
mov
fwait
cmp
push
rclb
ret
sbb
jp
sbb
fstpt
jnp
cmpb
out
xlat
mov
dec
fs
push
inc
pop
sbb
and
mov
pop
sarl
inc
push
lcall
ficoms
jle
movsb
rcrl
mov
bound
iret
or
pop
mov
bound
dec
sbb
cld
hlt
cmpsb
ret
negl
pop
lcall
push
cmpsb
cld
sbb
data16
fnstenv
xor
cmp
rorl
push
shrl
cwtl
sti
cmp
mov
cmp
sub
jnp
cmp
cmp
dec
inc
mov
std
loope
stc
jge
pandn
mov
or
scas
fcoms
xchg
pushl
sbb
pop
sbb
pushf
clc
sti
cs
sbb
lret
sahf
dec
imul
adc
xchg
jno
push
jl
jg
pushf
lods
adc
push
gs
aam
daa
inc
gs
cli
push
std
and
mov
rcrl
push
pop
sbb
add
jp
xchg
shrl
mov
and
mov
and
lock
inc
js
inc
mov
xor
clc
or
test
add
cld
cli
or
cld
and
or
pop
clc
adc
out
sbb
fstpt
sti
sub
mov
shlb
pop
jns
pusha
and
jge
scas
pop
add
movsb
xlat
mov
in
jns
jle
out
jl
mov
sahf
pop
std
sbb
shlb
or
clc
fimuls
sbb
pop
push
mov
pop
and
or
loope
mov
push
movsb
and
xchg
out
or
sti
outsl
minps
pusha
push
mov
sbb
xchg
call
jg
jns
adc
jmp
cwtl
popf
xchg
pop
cmpb
push
mov
stc
xlat
cli
sbbb
mov
pop
mov
xlat
arpl
cmp
cld
cwtl
pop
sahf
fnstsw
inc
std
mov
cltd
fidivrs
sbb
cmpb
fsubl
pop
mov
lea
js
test
cmp
push
addb
inc
and
pushf
jle
dec
rorl
shlb
js
inc
fdivrl
fstpt
sbb
sbb
push
clc
mov
cli
pop
pop
sbb
push
jp
pop
adc
adc
std
pop
shll
popf
cmp
pop
add
icebp
push
aam
inc
int3
leave
cmpsb
dec
fdivrs
cmp
pushf
jl
popf
cmp
jns
idivl
jle
inc
mov
sbb
adc
pushf
add
xchg
jp
xor
loopne
clc
popf
push
je
pop
in
jle
idivl
fdivr
std
cwtl
sarb
and
fisubs
lcall
out
push
push
lea
addb
cltd
sub
inc
gs
sub
push
js
and
popf
mov
jl
sbb
les
ficompl
fldenv
imul
sti
adc
adc
cmp
xlat
sbb
xor
mov
adc
mov
pop
xchg
clc
leave
mov
fimull
lret
sti
jp
ljmp
lcall
popf
jle
stc
pop
cmp
mov
cmp
or
sbb
fldz
mov
or
xorb
negl
jp
sbb
xchg
dec
sub
rcll
xchg
fcoml
test
pop
jl
out
cmp
cmpb
test
xchg
ja
or
inc
cmp
jl
daa
cld
daa
sbb
jns
push
rolb
mov
fcmovnu
cmp
rclb
sti
jl
push
sbb
lret
js
loop
test
dec
pop
xor
sbb
mov
cld
adc
arpl
cltd
sti
jns
lcall
push
fbld
inc
add
pop
rolb
sub
cwtl
fstpt
nop
insb
out
inc
sti
cmp
sub
and
xchg
and
mov
orb
cmp
scas
addr16
fidivrl
push
pushf
push
in
adc
cmp
push
pop
ficomps
cltd
cwtl
movsb
rcr
aam
lcall
pop
insl
stc
pop
push
pop
loop
faddl
mov
dec
xchg
push
pop
loopne
idiv
sbbb
sbb
fistps
mov
popf
jl
fcmovu
inc
jmp
xlat
inc
cmp
fisttpll
popf
std
add
mov
out
sbb
mov
dec
push
loopne
mov
cli
jl
push
pop
cld
sbb
xchg
leave
ja
popf
lcall
adcl
ds
mov
mov
sbb
inc
mov
adc
hlt
dec
mov
mov
in
cmpsb
movsb
sahf
cltd
scas
pop
cmp
add
clc
incl
cmp
pop
push
cmp
inc
fcmovb
pop
adc
cmpsl
jmp
pop
in
das
lds
sbb
ret
data16
pop
mov
in
mov
jl
dec
and
cli
mov
addr16
push
adc
inc
inc
mov
xor
je
aaa
push
pop
cmpsb
js,pt
push
jbe
pop
inc
mov
adc
push
cwtl
and
mov
mov
pop
mov
pop
sbb
dec
rclb
insl
mov
icebp
push
pushf
clc
scas
pop
xor
jns
pop
popf
fstpt
clc
pusha
lret
adc
add
mov
cwtl
clc
xlat
xchg
sbb
dec
cvttps2pi
sbb
sahf
in
incb
jo
inc
mov
addr16
mov
leave
sti
test
cmp
mov
fimuls
sub
cmc
xchg
jge
fcompl
scas
andb
lcall
and
push
mov
inc
cmp
sbb
mov
fidivrs
cmc
shl
ljmp
popa
inc
fstpl
pop
in
inc
lret
mov
add
sti
shlb
clc
sarb
sete
jno
adc
adc
and
rcr
mov
popf
dec
or
sbb
enter
shrl
in
lds
jbe
and
adc
sbb
repz
pop
xchg
xchg
add
jbe
inc
mov
scas
and
and
outsl
clc
cmp
cld
sbb
jbe
pop
mov
negb
mov
outsl
cli
pop
insb
sti
sbb
mov
mov
cld
adc
mov
fisubrs
idiv
pop
stc
lods
pop
xchg
sbb
jge
js
daa
lret
imulb
fnstcw
cmpsb
popf
sbb
loopne
lret
jo
sbb
cltd
xorl
cmp
add
loopne
cwtl
popf
pop
pop
fisubrl
add
sahf
xchg
pop
pop
stc
sti
fucompp
push
mov
or
clc
adc
jp
inc
mov
in
in
fcoml
cltd
sub
lods
mov
mov
inc
popf
push
dec
push
inc
bound
mov
fs
inc
roll
pop
xor
ficompl
lods
xchg
incb
aam
jl
cltd
mov
stos
cmp
fadds
pusha
stos
inc
in
pushf
fstps
jg
adc
dec
mov
cmp
addb
push
adc
out
jp
jo
push
cmp
clc
mov
std
loopne
dec
ret
cld
pop
add
cmp
mov
scas
pop
mov
stc
sbb
neg
cmp
push
add
cli
sub
cmc
flds
incb
and
adc
sbb
adc
sub
and
mov
pop
lret
lcall
mov
mov
incb
and
and
sbb
mov
fdivrp
ds
sti
aas
jns
out
sahf
xchg
js
gs
scas
ret
pop
xchg
dec
sti
mov
lcall
test
fsubs
lret
mov
rolb
pop
popf
arpl
pushf
mov
jge
jle
sub
fnstsw
sub
popf
add
les
mov
mov
test
add
loopne
sarb
jge
sahf
cmp
ficomps
popfw
pop
cld
mov
fidivs
pusha
inc
mov
sti
xor
js
shrl
xchg
arpl
fildl
xchg
jecxz
pop
prefetch
testl
bound
cltd
add
movsl
insb
sbb
fwait
sbb
jp
icebp
mov
sbb
out
cmp
into
ds
mov
jnp
cmp
lret
add
pop
setnp
std
js
adc
xchg
mov
rcr
stc
lcall
push
pushf
cmc
push
in
idiv
test
fcomps
cmp
arpl
adc
inc
sbb
adc
pop
mov
cmp
push
sbbb
push
imul
sbb
cmp
add
ds
jo
lods
lock
mov
into
add
sbbl
push
inc
or
sub
insl
xchg
aaa
adc
lcall
inc
jbe
test
lahf
nop
popf
lds
rcll
xchg
pop
xchg
aas
jp
jo
sbb
cmp
adc
mov
jl
mov
xchg
lcall
mov
jp
sti
popf
add
pushf
pop
sbb
fstpl
and
or
and
jno
add
sbb
cwtl
mov
adc
shlb
pop
xchg
xchg
sti
fwait
xlat
add
in
jns
arpl
xchg
push
in
add
cltd
xchg
lret
fdivrl
add
pop
push
rcrl
jae
mov
bound
add
jl
sbb
rcr
pop
jns
mov
sbb
subb
sti
sahf
jmp
inc
mov
lods
and
loopne
jle
lock
test
popf
fsubrp
std
xlat
repnz
jp
push
xchg
gs
popf
cmp
inc
stc
mov
js
jle
scas
mov
cltd
insb
movsb
push
ja
or
xchg
xor
orb
pop
jmp
data16
mov
xor
adc
jbe
add
push
pop
fsub
std
cmpl
inc
fyl2x
xor
aam
fdivl
movsb
cmp
pop
jle
and
std
dec
pop
aam
adc
xor
rcll
cmp
decb
shlb
mov
xchg
xchg
shr
mov
jecxz
xchg
cmp
push
fstps
mov
or
ret
pop
fildl
lret
rcll
mov
cmp
std
mov
aam
fs
mov
sbb
pop
xor
mov
push
aam
mov
xchg
std
shll
pop
pop
cmp
mov
lret
xchg
inc
std
mov
push
sarl
inc
lahf
mov
ds
pushf
lock
fildl
stos
arpl
xor
into
jae
incl
and
cli
adc
shrb
rcl
xchg
sub
cwtl
jo
js
lea
dec
jl
cmp
add
pop
sbbb
cmpsl
pop
mov
adc
mov
jmp
jne
cmp
push
adc
pushf
sbb
shll
popf
adc
sti
xor
mov
stc
sbb
stc
adc
mov
cmp
popa
das
fdivs
sbb
mov
pop
pushf
pop
mov
filds
fwait
scas
cld
mov
lahf
inc
sahf
inc
or
cmpsl
mov
add
call
and
ficompl
cmc
push
js
rcrl
fsubl
pop
inc
mov
pop
and
fiadds
sti
clc
js
xchg
in
cmp
cld
jl
add
cli
sbb
pop
adc
cltd
jp
pop
je
inc
js
add
jge
xchg
jl
jne
mov
adc
fdivrs
clc
inc
ficompl
or
mov
sbb
sbbl
mov
cmp
xchg
jo
nop
lcall
pop
stc
and
jg
jle
mov
inc
popl
mov
push
mov
pushf
dec
cli
rolb
mov
mov
loopne
inc
pop
stos
mov
mov
push
jae
mov
mov
sbbl
cld
std
xlat
cmp
pop
mov
pop
gs
mov
in
add
mov
xchg
clc
arpl
fidivrl
cmpsb
cltd
cmp
mov
inc
divl
pop
pop
jle
adc
in
cmp
push
pop
icebp
xor
mov
pop
add
pushf
mov
negl
sub
lcall
pushf
ds
mov
ficompl
push
js
xchg
xlat
pusha
sbb
sbb
sub
adc
scas
data16
mov
jae
cmp
cmpsl
xchg
dec
call
jge
iret
push
inc
sbb
sbb
sub
arpl
lcall
push
sar
fisttpll
movsl
mov
cwtl
fcompl
lds
cld
inc
ljmp
push
adc
cmp
mov
pop
mov
fstpt
mov
dec
sbbb
cmp
hlt
mov
or
and
xchg
add
or
pmaxsw
stos
add
push
mov
andb
cmp
pop
sarb
xlat
cld
stc
in
ret
pop
rorb
jmp
cmpl
mov
sti
adc
xor
dec
rcrl
push
push
sahf
jl
jecxz
add
sarb
jle
sbb
cld
lcall
jmp
xchg
stc
cld
pop
jmp
jmp
pop
inc
push
pushf
fisubs
adc
loopne
pop
imul
sbb
xchg
xlat
cmpsb
add
pop
sahf
ficoml
adc
imul
repnz
inc
cmp
into
dec
pop
jmp
cmp
cld
pop
sti
fistpl
repz
cmp
and
lahf
jge
lds
popf
pop
mov
cmp
jl
inc
cli
sarl
xor
cmp
iret
mov
clc
ficompl
dec
div
and
shll
push
cwtl
aaa
std
popf
cmp
js
mov
fcoms
fs
dec
sbb
sbb
pusha
jle
push
out
jne
mov
in
pop
movsb
inc
out
aaa
test
call
jnp
and
sarl
and
jb
shlb
cmc
sbb
sahf
js
add
pop
cmp
ror
cmp
sbb
cwtl
mov
jne
fadd
pop
adc
lods
pop
mov
pop
enter
mov
jb
pop
jge
cltd
xchg
cmc
push
sbb
jl
mov
cld
push
mov
ljmp
popf
and
aaa
sbb
je
cli
sbb
jle
sbb
bswap
cwtl
mov
sahf
jb
pushf
out
sbb
xchg
sub
mov
cmp
mov
ljmp
js
popf
xor
ds
mov
mov
mov
pop
popf
mov
and
lcall
mov
adc
lods
adc
bound
pop
and
addr16
fidivrs
std
std
test
push
inc
dec
repz
loope
filds
cli
sti
pop
jle
cmp
push
jnp
and
fsts
xchg
test
adc
cmc
mov
js
loop
dec
lock
mov
cwtl
pop
cmp
outsl
mov
cmpsb
pop
into
roll
add
stc
add
cld
sbb
in
and
mov
sbb
div
mov
pop
xlat
sbb
fs
cmp
fistpll
jnp
cwtl
jl
xor
pushf
decb
fimull
aam
scas
jnp
fwait
pop
ds
sbb
xchg
fstpl
ret
cmp
loop
jnp
mov
push
mov
movsb
and
icebp
sub
push
sbb
mov
mov
inc
popf
rcrl
sbb
aaa
fcompl
jp
jle
testl
jmp
rcll
inc
adc
adc
jns
test
flds
negl
sbb
pop
mov
fsubs
and
orb
das
mov
fcomi
ficoms
add
push
lcall
mov
mov
push
popf
ja
imul
cld
mov
xchg
jle
and
mov
push
adc
addr16
cmpsb
dec
xchg
bound
popl
cmp
xchg
out
push
fdivrl
sub
and
stc
jle
das
fisubrs
mov
sub
add
lcall
lret
cwtl
fidivrs
xor
data16
mov
clc
mov
pop
sub
xchg
cmp
aam
jge
ljmp
sbb
push
cmp
in
loopne
cmc
push
cli
fnstcw
jbe
adc
cmp
mov
pop
rcrl
sahf
dec
cmp
fstps
or
insl
mov
inc
sbb
sbb
lcall
mov
movsl
cltd
pop
push
sbb
pop
fxch
fs
sub
dec
das
push
stc
jge
movl
sbb
clc
xchg
and
and
out
jns
jbe
sbb
or
mov
js
cmp
cli
sbb
scas
pop
sbb
mov
movsl
aas
push
xchg
popf
inc
pop
fistpl
rorb
sbb
int
mov
or
jge
sub
pop
ficoml
bound
jmp
mov
xchg
gs
cltd
ficompl
sbb
and
into
test
and
or
lods
pushf
dec
sbb
cld
add
jle
cmp
push
in
xchg
negl
test
pop
push
rcrl
fidivrs
mov
jno
scas
pop
mov
sbb
mov
mov
fmull
adc
jo
cltd
clc
xor
adc
push
inc
ss
cmp
outsb
adc
jle
pop
sbbl
add
adc
jl
cld
adc
test
and
in
cwtl
or
fstpl
js
mov
or
stos
fistps
popf
jg
in
sbb
fcompl
pop
mulb
dec
jnp
pop
sbb
sbb
fcoms
inc
in
and
mov
lds
pop
frstor
iret
ljmp
mov
sbb
sbb
xchg
ds
add
cmp
mov
sub
cmp
std
mov
cltd
pop
mov
fs
add
sbb
sbb
in
std
js
stc
push
inc
ja
xor
cmp
dec
cmp
in
cltd
cwtl
fnsave
xchg
fnstenv
pusha
or
or
sbb
sbb
movsb
mov
sbb
mov
xor
cmp
cmpsb
inc
dec
inc
and
mov
inc
cld
add
push
xchg
pop
cmp
mov
js
fwait
or
pop
out
loopne
sbb
fstpt
fstps
mov
adc
add
sbb
sub
jl
das
pop
and
clc
cwtl
out
ljmp
push
pop
and
mov
push
mov
or
and
pop
xlat
sahf
rcrl
imul
lret
cltd
aam
cmpsl
lcall
stc
cmpsl
sbb
sbb
sbb
add
out
sbb
iret
mov
out
cld
pop
fcmove
mov
cmp
inc
mov
js
or
cmc
cmp
loopne
fdivp
sar
and
enter
fmulp
xlat
sbb
pop
stc
mov
cld
sbb
sbb
aaa
ljmp
flds
cld
inc
enter
mov
xchg
cs
adc
andl
cmp
ds
aam
cmpsb
mov
lcall
int3
out
pop
into
and
ljmp
pop
aaa
enter
pop
sti
pushf
xchg
pop
popa
cld
lcall
test
pop
movsb
mov
sti
les
movsb
and
bound
in
decb
xor
rcr
sbb
into
dec
add
xchg
loopne
jno
mov
movsl
scas
addr16
mov
mov
lcall
mov
stc
jl
and
ficoml
clc
sbb
popf
adc
fs
jns
dec
sahf
pop
jbe
jle
sbb
mov
adc
cmp
adc
neg
push
sti
and
roll
or
push
out
or
jae
in
mov
gs
aas
cld
jp
jge
mov
idivl
jns
frstor
movsb
pop
repnz
cmpsb
add
xlat
jge
inc
lcall
cmp
int3
jp
pop
cmp
movsb
fnstsw
lcall
jo
and
inc
ds
ficomps
and
data16
sbb
test
pusha
pop
inc
enter
add
enter
push
imul
pop
cld
jbe
mov
and
mov
jl
call
xchg
xor
mov
sbb
in
clc
fdivrl
lods
les
push
addr16
pop
in
lcall
cmp
movsl
stc
inc
mov
rclb
cld
sti
testl
inc
pusha
icebp
mov
popf
lcall
hlt
sbb
xchg
jns
jge
popf
xlat
inc
idivl
in
sbb
dec
push
bound
into
and
mov
pop
inc
xchg
std
mov
mov
sbb
std
hlt
mov
stos
lret
cwtl
cmp
pop
push
and
pushf
mov
cmp
lcall
adc
and
call
inc
repnz
cltd
clc
lcall
lcall
push
repnz
adc
pop
fcomps
mov
fwait
mov
fwait
jmp
pop
cli
shlb
adc
addr16
sub
rcrb
aad
pop
jns
push
sbb
jl
stos
push
movl
popf
mov
repz
and
adc
clc
aaa
pop
adc
cmpb
cli
adc
add
js
cmp
stc
lds
xchg
popf
mov
ljmp
daa
in
bndstx
add
pop
cmpb
sub
fldenv
fwait
sbb
mov
int3
cmp
add
pushf
cmp
ret
lcall
out
ficompl
idiv
cmpl
dec
cli
neg
out
punpckhdq
stc
jo
out
and
adc
fistps
mov
cmp
fnstcw
xlat
cmp
mov
mov
ficompl
xlat
and
ds
jg
mov
pop
add
das
sbb
add
fcompl
stc
pop
mull
dec
sti
sarl
xor
notl
outsl
pop
sbb
loopne
mov
sub
xor
leave
ljmp
aaa
xlat
mov
pop
pop
in
btr
cmp
out
pushf
sbb
jge
std
mov
pop
fmul
sbb
mov
mov
xchg
jmp
sbb
stc
dec
xchg
lahf
lea
push
fwait
pop
sbb
adc
sbbb
add
push
inc
inc
std
les
mov
and
adc
fiaddl
mov
adc
xlat
jb
call
sahf
pop
ss
repz
inc
fcomps
clc
inc
lahf
mov
or
cmpb
out
mov
sbb
jb
sbb
repnz
loopne
pop
std
fidivrs
jl
outsb
and
mov
rcrl
mov
push
jge
pop
cmpl
dec
shrb
add
push
inc
ficompl
pop
jl
sbb
push
or
push
pop
fcomp
jns
imul
inc
add
mov
fcomi
jp
xchg
cli
mov
mov
imul
ficompl
mov
cmp
dec
xlat
mov
mov
js
fsubrp
pop
mov
stc
cld
pop
mov
adc
cmp
sbb
ds
sub
sbb
mov
cli
lahf
ficomps
mov
mull
fnsetpm(287
cmp
lahf
fucomip
adc
clc
sbb
popa
mov
in
mov
nop
sub
mov
inc
insl
inc
fsub
sub
insb
cmpl
lcall
aaa
mov
xlat
xchg
out
fisttpll
xchg
mov
mov
jge
pop
sbb
push
mov
xlat
add
sbb
mov
mov
mov
rcrb
add
fstpl
cli
das
or
fcomi
and
jmp
xchg
adc
addb
in
and
adc
xlat
jl
jmp
mov
lods
add
cmc
cltd
jp
aad
push
and
pop
lcall
adc
add
aaa
or
out
std
cmp
jbe
xlat
scas
into
rcrb
repnz
push
xchg
sub
and
sub
mov
out
rcrl
add
rorl
mov
jl
clc
fs
test
push
lret
xor
roll
adc
insb
pop
clc
out
pushf
xlat
jmp
adc
xchg
mov
mov
movsl
lcall
xor
daa
pop
mov
mov
xchg
cs
pusha
lea
cmpb
xor
and
nop
xor
arpl
aas
xor
int3
inc
pusha
mov
sbb
or
sahf
pop
mov
test
jp
xchg
aas
sbb
outsb
aam
mov
fisubrs
out
hlt
shlb
js
div
repz
xor
je
pop
add
popa
and
inc
mov
xor
nopl
inc
call
and
sar
lds
xchg
fsts
es
xchg
add
ror
jns
xchg
fnstcw
mov
jmp
loopne
sbb
mov
xchg
or
pushf
hlt
cwtl
pop
testl
xchg
mov
cmp
adc
sbb
jp
fmul
ficoml
pop
add
fwait
outsl
xor
and
movsl
pop
cmp
in
add
sub
push
xlat
pop
stc
clc
pusha
lcall
cli
call
dec
mov
pop
aam
mov
fstp
dec
cli
cmp
mov
and
fisubs
jbe
inc
leave
sar
loopne
lods
fldcw
setne
sbb
adc
adc
cmpsb
mov
das
or
sbb
jl
or
movsb
in
lock
ss
mov
and
ficoml
js
dec
cmp
xlat
or
sub
pushf
faddp
and
clc
popf
negl
and
aaa
push
lcall
inc
sbb
arpl
mov
xchg
popa
sahf
std
std
inc
sbbl
call
dec
clc
pusha
and
rcrb
pop
inc
and
inc
lcall
pushf
lret
pushf
loop
sbb
fs
dec
and
and
cmp
mov
mov
xchg
sahf
adc
sbb
xlat
or
push
cltd
std
popa
popf
bound
cmp
leave
fsubp
scas
cltd
or
pushf
cwtl
dec
mov
sbbl
or
outsb
lds
sbb
cmp
lret
push
out
cltd
pusha
fisubrs
jle
inc
cmpsl
jp
mov
les
inc
mov
fstpl
movsl
mov
jns
js
lret
dec
sbb
fimuls
sbb
dec
xchg
mov
sbb
into
stc
loopne
js
pop
inc
popf
in
lcall
insb
in
fs
adc
dec
ds
push
ret
dec
push
sbb
leave
out
sbb
pop
pop
insb
mov
cmpsb
jns
jp,pn
out
jp
xor
sbb
adc
clc
mov
cmp
in
pminub
cli
dec
push
push
cld
or
loopne
and
std
mov
or
mov
popa
js
and
testb
and
stc
fnsave
cltd
xor
pop
lods
sbbl
sti
fs
inc
push
xchg
nop
cmp
in
pop
insl
fs
or
pop
jp
dec
sbbb
adc
pushf
mov
cmp
pop
xlat
xor
or
sbb
insl
testb
sub
scas
repnz
adc
or
mov
mov
mov
hlt
pop
fnsetpm(287
ljmp
adc
daa
mov
ffreep
xor
push
mov
sbb
pop
sahf
fs
mov
push
xchg
jns
and
mov
jge
sbb
and
xchg
hlt
mov
cmp
ficoml
and
xchg
sahf
ss
xchg
lcall
cs
and
out
xchg
cmp
lds
jg
clc
stc
andl
enter
fists
or
mov
sbb
sbb
sbbb
inc
notl
adc
adc
xor
leave
cli
enter
mov
cmp
inc
and
loopne
sahf
sbb
or
sub
dec
dec
xchg
push
test
jl
and
sbb
sub
cltd
jecxz
mov
sbb
shl
mov
fs
test
inc
inc
popf
sbb
xor
sub
jle
cmp
or
testl
sbb
pop
jecxz
pop
movsb
cltd
mov
xlat
stc
xchg
loope
pop
repnz
inc
and
cwtl
inc
sbb
fstps
inc
and
push
pop
and
popf
pop
cmp
ja
add
xor
lcall
xor
pop
jo
fs
out
std
jle
mov
inc
mov
dec
mov
push
or
test
js
mov
push
mov
jbe
out
cs
sbb
pop
mov
pop
lds
pop
sbb
clc
cmp
push
jns
sub
push
fdivs
cli
ja
mov
sar
test
cwtl
xor
stc
fistpl
mov
mov
outsl
dec
cmp
popa
aaa
in
in
pop
pop
inc
pop
mov
jl
bound
lock
pop
sahf
inc
lcall
pop
imul
dec
add
mov
lds
aam
inc
aaa
out
enter
pop
and
pop
insb
and
fcoml
mov
clc
sbb
mov
fs
add
test
mov
adc
sbb
imul
cmp
pop
test
sbb
mov
jg
sbb
sbb
sbb
daa
or
cmp
cmpsb
jns
pop
std
mov
mov
aaa
adc
pusha
and
fcomp
popf
pushf
push
leave
sbb
xor
pusha
xchg
pusha
outsb
daa
jbe
add
lds
sub
xor
ret
jmp
cld
dec
stc
mov
and
std
loopne
sahf
cmp
adc
inc
sbb
js
test
into
xchg
cmp
outsb
bt
and
in
lret
mov
sbb
sub
das
inc
ds
pop
mov
inc
fcmovnu
clc
push
daa
test
leave
cwtl
mov
rclb
mov
pop
xchg
mov
push
xor
iret
mov
sub
rcrb
add
mov
mov
outsl
push
std
inc
stc
rcrb
bound
loopne
jl
mov
pop
cmpsl
cmp
fstpt
fsubrl
dec
adc
adc
push
cmp
xor
sbb
push
xchg
add
sbb
imul
fcompl
inc
leave
cmp
stc
sti
pop
adc
ds
call
adc
pop
mov
nop
std
pop
cmp
sbb
push
pop
add
and
or
xchg
insb
mov
negl
movsl
pop
stc
rclb
mov
cmp
inc
dec
cmpsb
sbb
jge
pop
cmpsb
loope
and
xchg
cli
cmp
pop
jns
sbb
jl
mov
pop
dec
fcompl
repnz
and
mov
push
mov
pop
xor
mov
adc
add
stos
cmpsl
mov
xchg
pop
pop
roll
xchg
js
incb
adc
enter
cmp
mov
fsubs
pop
popf
test
cmp
mov
mov
pop
jns
out
pop
clc
fsqrt
loopne
das
adc
sbb
das
fsubs
in
and
push
pop
inc
cwtl
adc
mov
or
push
sbb
pop
cmp
pop
fldl
stos
pop
adc
push
xor
aas
add
cvtps2pd
test
sti
inc
mov
inc
mov
jle
pushf
sbb
rolb
cli
xchg
dec
cli
fwait
arpl
js
popf
cmp
popf
mov
cmp
stc
sbb
sub
and
push
aaa
jp
push
mov
adcb
mov
xlat
sbb
cmp
xchg
and
sbb
add
adc
fdivrs
sti
push
mov
jo
sbb
fdivp
cltd
mov
dec
cwtl
stos
pop
mulb
jp
int
or
pop
cltd
fwait
mov
cmpsl
div
imul
mov
cmc
mov
jg
xchg
mov
imulb
cmp
cwtl
sbb
mull
and
shlb
sbb
mov
pop
sub
aam
push
jbe
test
loopne
sub
push
lcall
dec
sbb
fcomps
pusha
mov
idivl
pop
ss
cltd
fidivl
xlat
mov
or
push
pop
std
inc
inc
pop
into
sbb
or
adc
pop
loopne
sbb
sbb
or
cmp
cltd
gs
loop
cmp
ljmp
or
icebp
cmp
and
cmp
adc
adc
mov
add
into
add
mov
jmp
test
in
roll
lea
sti
mov
inc
js
testl
arpl
cmp
cmpb
cmpl
pusha
into
cmp
push
pop
mov
sbb
jns
loope
insb
sti
inc
cmc
mov
jp
mov
dec
or
cld
ficoms
std
mov
cs
mov
dec
and
dec
sbb
fdivr
jmp
popf
jbe
pop
mov
imul
cmp
cmpb
sbb
dec
ljmp
sbb
fdivp
rcrb
popf
fdivr
movsb
popf
mov
sahf
jae
dec
in
outsb
pushf
jbe
xchg
fsubl
stc
fnstcw
jg
cld
or
sbbb
cmpsb
pushf
mov
fdivr
into
xchg
mov
gs
cmc
imul
mov
mov
fadds
mov
cmpsl
jge
cmp
aas
sar
push
pop
sbb
jl
into
push
push
das
sti
jne
cli
fcmovbe
dec
cli
mov
sbb
enter
mov
sbb
popf
popf
sbb
popa
cltd
pop
rcr
mov
cmp
cwtl
aam
jp
ja
cmpsl
and
or
adc
mov
cmp
aas
sbb
sarb
movsb
sub
add
push
and
jge
push
loopne
mov
inc
lcall
out
fdivr
insb
movntps
popf
pusha
iret
mov
sbb
xlat
cwtl
mov
cmpb
and
test
sbb
sbb
aas
sbb
sbb
xchg
sbbb
sub
cmp
es
pop
int
mov
add
push
push
pop
fprem
mov
aaa
cmp
pcmpgtb
ficomps
sbb
inc
popf
mov
movzwl
adc
js
push
push
sbb
and
lods
pop
pusha
test
inc
in
in
mov
xor
out
sbb
xchg
popf
mov
call
cld
sbb
out
mov
xor
clc
jl
jl
dec
cmp
sbb
push
pop
neg
push
pop
mov
lret
ljmp
cmc
cmpsb
sahf
and
ss
add
dec
int
dec
aad
inc
loopne
fcmovnu
xlat
add
incl
mov
and
dec
dec
pop
in
gs
jae
lcall
lret
cwtl
jnp
xlat
pop
popa
in
pop
push
and
out
stc
cmp
rcr
fstpl
mov
test
aas
sbb
cltd
js
sbb
jge
movsl
fiadds
stc
sti
sbb
sarl
sar
out
sarl
and
sti
sub
sbb
ljmp
sbb
mov
pop
sbbb
mov
int
sbb
cltd
jl
pushf
mov
cli
lods
xor
add
mov
imul
lds
cli
sti
dec
xlat
testl
add
or
scas
and
mov
ret
sti
mov
aam
mov
mov
lahf
add
mov
in
cmp
inc
sbb
sub
cs
test
mov
and
fstpl
ja
adc
mov
pop
sbb
mov
jns
rcrl
ds
js
mov
add
cmp
push
adc
out
cld
pop
xor
or
adc
std
sub
fnstcw
xchg
negb
pop
cwtl
xlat
loopne
in
fiadds
mov
and
stos
pop
or
addr16
push
add
hlt
adc
sti
pop
sub
cwtl
aaa
std
adc
fprem1
xor
cmpsl
das
ss
stos
sbb
pop
std
cwtl
out
fs
xchg
sbb
cld
leave
sahf
push
test
adc
mov
or
cmp
fstpt
or
ret
fcoms
das
or
xchg
aas
inc
cli
fsubrs
mov
insb
pop
pop
jns
cmp
into
xchg
je
or
pusha
jle
sbb
dec
outsl
dec
sar
mov
jle
insb
pop
inc
stc
jge
mov
sbb
pop
data16
rcr
ljmp
sub
mov
adc
dec
ror
mov
adc
rcrb
lds
addr16
push
adc
mov
sbb
cmp
test
adc
les
jns
into
xor
fisubs
hlt
idiv
adc
cwtl
incb
add
add
cli
fwait
sub
jo
add
mov
std
xor
fcmovnu
sub
loop
fsubl
and
lret
sar
fwait
cwtl
jmp
pop
lcall
jne
sbb
or
sbb
in
pop
mov
cmp
or
sahf
imull
mov
sti
sahf
sbbl
cmp
jns
inc
rcrb
outsl
pushf
loopne
sbb
push
add
xor
mov
out
lret
cmp
pop
pop
mov
lds
ljmp
incb
pop
xchg
mov
stc
xchg
daa
lods
sbb
out
cmp
mov
jle
std
inc
pop
lds
push
sbb
cld
imul
sbb
sahf
outsb
sahf
push
fcomps
xor
mov
sbbb
pushf
lock
mov
pop
mov
fimuls
jns
jle
cmp
sub
and
fs
inc
inc
jae
iret
push
popf
popf
sbb
lcall
lahf
add
or
jns
fstpt
adc
mov
mov
cmp
or
out
inc
mov
and
push
pop
pop
lahf
sub
and
push
fadd
les
fadds
sahf
outsl
rcrb
sbb
dec
subps
fnstcw
inc
mov
or
push
mov
mov
sbb
sbbl
pop
push
les
gs
fstp
push
jl
into
mov
fisubrs
cmp
cmp
and
inc
mov
mov
push
adc
adc
sbb
scas
sbb
out
pusha
mov
sahf
rolb
sbb
std
cmp
std
mov
cmpsb
sbb
incl
pop
repz
mov
in
sub
fisttpll
rol
sbbb
iret
pop
lock
add
lea
rcll
mov
decb
or
sti
adc
dec
movsb
xor
mov
fidivrs
xchg
bound
lcall
cmp
int3
sbb
repnz
xor
and
std
sbb
adc
mov
fs
sbb
imul
popf
inc
pop
es
fistpl
pop
testb
lds
dec
mov
jle
cltd
jge
clc
sbbl
pop
lock
jp
jp
inc
xlat
ficomps
sbb
stos
jge
mov
bndldx
ljmp
pop
pop
loopne
push
xchg
jge
inc
or
movsb
mov
sbb
lods
pop
mov
es
dec
incb
sbb
pusha
fstps
pushf
pop
clc
pushl
js
mov
js
clc
clc
adc
pop
fisubs
mov
enter
test
inc
and
pop
clc
loop
jb
sbb
adc
and
mov
xchg
inc
not
clc
shrl
out
add
cwtl
scas
div
repz
cmp
rcrl
jg
pushf
cmp
ds
aam
fcomp
cmp
lret
sahf
inc
fidivrs
jae
jnp
mov
sbb
jl
jns
mov
cld
test
add
xchg
fsubrs
and
pusha
bound
mov
push
pop
cmp
into
lods
mov
xchg
xchg
test
sti
into
pushf
jne
mov
ret
xchg
sbb
fs
cltd
push
leave
clc
mov
mov
push
popfw
mov
into
fiaddl
xlat
fmuls
xchg
push
and
pusha
ficomps
sbb
aas
fcomps
roll
cmp
mov
popf
and
sbb
cli
cmp
push
sbb
popf
xchg
lcall
aam
mov
pop
popf
pop
adc
push
and
jo
mov
test
mov
sti
inc
push
inc
pop
xchg
popf
out
mov
mov
fs
stos
fdivrs
cmp
lahf
pop
jl,pt
jo
movsl
cld
jo
push
cmc
mov
add
add
adc
pushf
cmp
aaa
or
push
jae
cld
xor
scas
add
inc
cmp
sbb
lea
jns
hlt
std
pop
lahf
dec
mov
fisubs
lcall
popf
sbb
pop
sbb
jp
xchg
pop
leave
jno
ds
cmovbe
cli
notl
out
pop
wbinvd
stc
fdivrs
mov
fdiv
cli
xlat
adc
adc
pop
lock
enter
sbb
out
add
enter
xchg
xchg
lahf
shlb
inc
std
fcmovnb
xor
pop
into
cmp
mov
sti
sbb
movsb
jge
js
popa
push
adc
out
jno
ficoms
sbb
pop
mov
popa
pop
inc
mov
mov
add
push
mov
lds
js
dec
ds
iret
ja
mov
sahf
faddl
clc
ljmp
inc
pop
sbb
jp
xor
lds
call
ds
iret
xchg
cmp
mov
push
xor
mov
mov
push
cmp
mov
cli
adc
cld
lcall
fadd
xchg
xor
and
cmc
and
divb
mov
and
pop
stos
jmp
daa
insb
xor
sbb
into
shlb
cmp
xchg
cltd
sbbl
mov
sbb
aaa
xchg
mov
xchg
inc
repnz
dec
js
cld
and
lcall
mov
test
loopne
mov
sub
pop
xlat
push
in
mov
cmp
mov
bsr
xchg
lcall
sbbl
and
sbb
sarl
jmp
mov
testl
fisubrs
test
ror
pop
mov
and
cmp
mov
stc
cli
jns
or
and
sbb
sbb
cmp
push
clc
and
dec
add
dec
data16
pusha
aas
sahf
cli
xchg
inc
fistpl
in
cwtl
push
jbe
cltd
stc
mov
loope
in
inc
cmp
cmp
aas
sbb
cltd
cli
sub
andl
idivl
adc
pop
cli
repnz
mov
sub
cmc
jge
gs
cwtl
gs
cmp
sbb
pop
mov
cmp
cwtl
sbb
popa
and
rcrb
mov
add
pop
or
cmp
mov
bound
into
xchg
out
pop
and
rcrl
popa
sahf
scas
cmpsb
rcrl
xor
std
incl
orb
mov
insb
scas
mov
fincstp
and
jb
popf
fisubrl
cld
dec
lret
bound
pusha
sub
jp
inc
arpl
xorb
xor
in
andl
adc
mov
sbb
xchg
ss
sbb
or
std
cmp
dec
subl
out
cmp
fs
shll
add
jle
adc
ficomps
les
out
fdivr
cmp
leave
pop
mov
lea
jecxz
mov
fs
mov
lret
jle
scas
jns
lods
pop
pop
dec
push
xor
xorl
dec
jbe
outsb
mov
dec
out
xor
lcall
mov
sub
frstor
jnp
adc
stc
and
stos
lea
out
jne
into
fcoml
insb
addr16
pop
sbb
fisubrl
nop
mov
inc
dec
cmc
rcr
inc
and
cli
fcomps
and
fidivl
mov
mov
or
adc
rorb
mov
sbbb
cwtl
sti
ja
mov
xor
and
mov
xor
movsb
and
fildl
and
and
ja
mov
stc
adc
mov
fs
xchg
loopne
cmp
sub
dec
or
jl
jg
fs
mov
xchg
sub
inc
sti
cltd
jno
fs
loopne
fnstsw
sahf
iret
bound
aas
or
shlb
lds
inc
mov
movsb
cmc
sub
punpckldq
aas
jne
fildl
rcrl
sarl
sbb
js
add
cmc
and
lds
cmpsb
adc
addr16
and
jl
push
imul
stos
xchg
dec
cmpsl
inc
cld
cmpb
push
cmc
pop
lcall
leave
rcrb
pop
popa
pop
mov
pop
pop
sbb
inc
mov
int3
aaa
pop
xchg
xor
sbb
add
mov
mov
outsb
cs
pop
sahf
stc
cwtl
jae
frstor
cmpb
pop
and
testb
mov
lcall
dec
mov
mov
sti
movsb
jns
sbb
arpl
pop
xchg
and
js
inc
pop
cmp
pop
sar
in
jns
cmpsl
xchg
mov
jbe
sbb
jns
xchg
pop
xchg
jns
cli
adc
fmul
popa
sbb
stc
jnp
aas
sar
lcall
gs
bound
xorb
sar
and
addw
nop
and
je
xchg
cmc
mov
std
mov
movsl
and
pop
sti
cmp
add
jle
pop
popf
jbe
xchg
repnz
or
js
xlat
popf
sub
cmp
mov
xor
js
pop
pop
jns
cwtl
loopne
fstps
push
idiv
pop
add
sti
mov
mov
lods
bnd
dec
ljmp
sbb
cmp
pop
pop
inc
xchg
adc
sub
mov
cltd
xchg
popa
jle
movsl
fnstcw
adc
adc
or
mov
sbb
push
je
mov
fadds
mov
inc
inc
add
sub
lods
sbbb
scas
test
out
and
adc
jmp
sub
std
adc
cmp
cld
mov
pop
pushf
pop
sbb
fadd
fists
out
sbb
xor
pop
inc
pushf
cwtl
iret
xchg
loopne
daa
cs
inc
dec
mov
pop
data16
jp
int3
mov
loopne
pop
inc
js
sbb
ss
loopne
sbbb
jl
mov
ficompl
lcall
imul
sbb
mov
mov
movsl
lds
cmp
xchg
inc
loopne
and
mov
bound
mov
std
xlat
adc
out
push
fcoml
cmp
mov
pushf
and
mov
mov
mov
in
add
flds
cmp
sbb
testl
movsb
jl
movsb
xchg
add
lock
sarb
mov
sub
inc
mov
cli
pop
neg
and
jge
loop
jp
cmpl
cmp
rcrb
sbb
in
or
ss
rcr
jge
add
popf
cld
fisubs
les
push
mov
jns
or
add
sbb
cmp
cmp
xor
cli
mov
adcl
pop
cltd
mov
popa
sti
xlat
push
inc
ds
dec
dec
hlt
arpl
pop
sbb
cmp
cmp
fnstsw
fdivs
pop
sbb
and
sbb
out
add
cmp
sbb
fsubl
adc
push
and
outsb
movsb
jbe
call
fdivr
into
jne
out
out
mov
sbb
and
icebp
cmp
lret
and
mov
jge
lcall
and
fstpl
xor
inc
sbb
fldt
pop
cmp
cltd
pop
rcll
sarb
and
in
jb
iret
fs
jp
mov
cmp
vpaddw
adc
cmpl
xchg
cmp
jo
arpl
cmc
fnstsw
lret
or
mov
test
pop
cmpsl
mov
pop
push
cld
fcompl
movsb
cmp
idivl
lcall
mov
sbb
shrb
sbb
pop
cmp
fisttpl
lea
dec
out
sbb
cmp
adc
xchg
jecxz
js
cmpsb
mov
popf
ds
mov
pop
bound
jmp
mov
inc
mov
daa
xor
push
sbb
bound
push
xchg
pushf
pop
push
loopne
sbb
jae
pop
testl
int
loopne
js
cmpb
push
ds
push
loopne
int
pop
fdivr
icebp
pop
add
idivl
lret
mov
inc
jp
add
cli
mov
insb
inc
out
sub
mov
jg
rcrb
cmp
mov
out
std
adc
sti
add
mov
into
test
aad
sub
fs
data16
cld
fwait
add
pop
adc
pop
and
cltd
sarb
in
sbb
movsl
mov
dec
adc
sbb
cmp
cmp
imul
fsub
jne
xlat
cli
js
and
stc
shl
enter
jl
mov
into
leave
push
bound
or
fcoms
xor
mov
mov
rorl
not
daa
cli
jp
add
femms
sarb
mov
cli
cltd
test
pop
ja
jp
pop
adc
mov
fwait
inc
inc
cmpsb
push
stc
push
inc
pop
in
sbb
pop
inc
loopne
cmp
or
dec
pop
jbe
fistpl
sbb
pushf
cmp
jmp
out
fistpl
jae
aas
adc
mov
notl
add
jl
dec
cmp
mov
mov
push
xchg
mov
inc
mov
push
sahf
mov
pop
and
add
jbe
jns
scas
xor
jmp
push
lds
inc
mov
sbb
adc
jl
pop
fisubl
pop
dec
pop
fdivrp
daa
jbe
and
pop
mov
test
into
push
pop
arpl
ds
inc
inc
loop
jl
imul
aaa
pop
iret
sbb
hlt
and
clc
xlat
cmp
sbb
xor
in
clc
fildl
jl
push
mov
or
fldenv
jp
lods
sbb
jae
dec
cmpsb
cmp
pop
iret
mov
pop
daa
and
negl
sbb
sar
dec
pop
shlb
repz
and
jb
in
pop
loopne
xchg
js
sahf
add
sbb
pushf
popf
dec
xchg
fwait
movsb
andb
and
out
cld
inc
dec
into
xlat
add
jne
push
cmp
push
adc
sbb
incb
pop
cmc
push
xchg
fcmovnb
push
nop
js
fsts
and
inc
stc
cltd
jns
cld
jge
dec
flds
mov
bound
js
pop
xchg
lcall
cmp
sar
jle
in
sbb
mov
sub
add
cmpsb
rcrb
icebp
push
mov
jge
fstl
setge
mov
and
inc
mov
cmp
mov
frstor
pushf
mov
adc
pop
or
adc
jg
fisubrl
or
sbb
aaa
xchg
add
into
cltd
sbb
mov
popf
or
idiv
gs
fiadds
cli
add
sub
test
mov
mov
incb
add
adc
js
sbb
pop
mov
mov
add
cwtl
fdivrl
nop
add
loopne
add
cmp
cld
shrl
jecxz
fcompl
mov
and
sbb
and
test
ss
clc
xchg
pop
into
repz
into
pop
pop
xor
rcrb
into
sbb
push
lcall
adc
pop
enter
lret
fistpl
addr16
mov
subb
jb
mov
sbb
movsb
pop
mov
sbb
xor
pop
rcrb
mov
into
sbb
and
fdivrs
iret
pop
cmp
cmp
call
push
mov
pop
adc
mov
out
push
mov
push
push
js
sbb
xlat
fcmovne
mov
push
jns
pushf
fisubrl
cmp
fadd
jle
push
clc
lea
repnz
adc
mov
mov
or
xlat
pop
and
loopne
fsubp
cli
ds
popf
add
cmpb
outsb
mull
dec
xlat
xchg
xchg
mov
mov
adc
ljmp
sub
mov
pop
popf
mov
adc
sbb
inc
sahf
in
pop
mov
adc
mov
jmp
popa
sbb
fildl
and
dec
int3
je
in
jne
pop
cmp
aad
cld
push
pop
adc
cmp
pop
fidivs
inc
cmp
test
lcall
adc
and
xchg
adc
pop
std
movsl
cltd
loopne
notl
pop
cld
pop
das
cmpsb
mov
and
lods
pushf
aaa
inc
or
push
fs
mov
sbbl
pop
jnp
mov
lahf
pop
call
jns
call
and
sbb
push
stc
mov
pusha
out
jge
cltd
cli
add
aaa
jle
je
lahf
mov
repz
push
out
int
cmp
add
sbb
push
sbb
sbb
outsb
ds
je
mov
add
pop
repnz
or
mov
xchg
mov
sbb
inc
xchg
cmc
pop
aam
pop
fs
inc
jp
push
cmp
xchg
and
loopne
iret
cltd
cmp
pop
aas
jle
mov
clc
adc
loopne
int3
enter
adc
sub
and
mov
dec
aam
lock
insb
inc
adc
fnstsw
loopne
or
fwait
loop
les
xchg
cmp
shr
pop
or
cli
popf
cwtl
imul
adc
and
sbb
je
jp
adc
or
cmp
xor
sbb
pop
jl
popa
mov
xlat
andl
call
enter
mov
clc
mov
sbb
lods
push
cltd
cli
sbb
out
fdivrs
lea
cmp
cmp
xchg
inc
das
mov
pop
fcmovb
rcrb
into
xor
orl
outsl
jp
lock
sti
jno
mov
push
xor
lods
mov
lods
xchg
orb
jle
stc
cmp
mov
into
movsl
cmc
add
sbb
cld
cwtl
fadds
push
ljmp
js
jge
pop
int3
loopne
xchg
sbb
jp
sti
cmp
rolb
jb
sbb
mov
ja
pop
cmp
cld
mov
mov
jge
or
sub
mov
in
mov
pop
cwtl
inc
xchg
adc
sub
push
dec
xor
fistpl
pop
leave
cmp
and
popf
cli
fdivr
cmp
xor
pop
xlat
cmp
adc
pop
lcall
jns
out
pop
popf
and
sbb
outsb
adc
mov
lods
sbb
fisubrl
fidivrs
cmp
pop
pushf
setp
fadds
mov
jns
pop
out
and
fsqrt
inc
sbb
xchg
mov
push
pop
pop
pop
mov
pushf
mov
push
or
push
mov
into
inc
jge
mov
out
inc
mov
pop
adc
lcall
pop
and
fistpll
lock
insl
fdivr
xor
mov
mov
std
add
inc
jns
sbb
cwtl
lds
pusha
adc
dec
mov
mov
sbb
hlt
pop
mov
bound
pop
stos
pop
xor
mov
incl
negl
cmp
add
daa
sbb
rol
xor
mov
cld
cmp
test
push
std
jne
xchg
aas
xchg
adc
add
inc
push
inc
xor
sbb
es
xor
cwtl
fidivrl
shl
cli
jmp
sbb
pop
adc
jl
std
pop
adc
cmp
mov
pushf
dec
dec
idivl
ja
xchg
and
and
cmp
pop
cmovne
lret
and
add
push
inc
cwtl
mov
fdivl
into
sbbb
stos
lcall
pop
dec
xchg
cmpsb
pop
pop
std
mov
js
fs
in
movsb
clc
push
gs
cmp
jmp
jns
xor
or
cltd
ficompl
arpl
push
xchg
sub
jnp
pop
call
pop
popf
je
add
dec
jbe
push
mov
xor
or
jl
cld
js
jge
stc
ja
sub
lock
and
pop
sub
je
lods
pop
cld
cmc
sbb
stos
and
or
fadds
pop
and
sahf
sub
lahf
cmc
jle
cli
jl
pop
pop
sbb
or
clc
lea
lcall
popf
mov
stc
or
cmpsl
sub
inc
and
mov
mov
inc
xorb
adc
pop
xchg
dec
insl
gs
cmc
andb
push
pop
popf
adc
std
sti
xchg
pushf
notl
mov
xchg
and
pop
iret
aam
inc
push
shrl
push
scas
in
jmp
fcomps
shl
mov
std
inc
or
les
sbb
add
stc
out
fnstcw
push
and
out
arpl
jns
pop
pop
pop
adc
mov
cmp
or
movsb
jns
push
popf
arpl
fs
mov
bound
mov
out
cmp
into
add
mov
inc
mov
mov
aam
xchg
call
mov
popf
jns
out
sbb
cwtl
adc
popf
out
lret
lods
stc
cltd
jns
pop
fnstenv
cli
or
and
jge
pop
pop
insb
movsb
jle
fs
sarl
lcall
jecxz
pop
cmc
sub
fildl
cmpb
cltd
push
lahf
push
push
fs
add
and
and
ja
xchg
cmpsb
movsb
mov
cmp
out
cmp
lret
cmp
adc
and
jl
leave
popa
or
push
xchg
frstor
cmp
pop
cmp
sbb
mov
cmc
push
add
into
clc
fsubrp
push
ror
icebp
mov
sbb
mov
cmp
jle
faddp
pop
adc
sbb
sahf
std
sbb
pop
roll
cmc
sarb
aam
iret
mov
sbb
mov
jl
xchg
cli
fcompl
test
mov
mov
and
cmp
sahf
sbb
mov
xchg
pop
pop
adc
cmp
xlat
sbb
pop
arpl
cmp
jmp
sbb
adc
sbb
mov
loopne
fcmovbe
sahf
pop
loopne
outsl
lds
cld
push
stc
icebp
jl
xor
or
dec
sub
push
jbe
sbb
sbb
pop
in
cwtl
in
addl
aad
loopne
ficoml
popf
jle
std
mov
jp
mov
ret
lcall
inc
frstor
ja
out
cli
ret
xor
adc
and
adcb
idivl
sbb
adc
mov
pushf
mov
lret
mov
test
sbb
pop
mov
lds
lcall
mov
loopne
fisttpl
and
mov
xchg
mov
cld
pop
in
mov
mov
xchg
ljmp
cmp
cmp
cwtl
jmp
mov
mov
mov
push
fbld
mov
out
sbb
arpl
pop
mov
pop
call
js
repnz
clc
lahf
sub
mov
stc
fstl
inc
arpl
fistpl
insb
imul
inc
jmp
dec
insb
push
pop
sarb
fmulp
xchg
xchg
sahf
jb
fwait
mov
dec
xchg
xor
sahf
mov
divl
into
xor
push
cmp
mov
testl
adc
pop
mov
popf
cli
cltd
adc
and
js
pop
cwtl
std
push
daa
jmp
mov
cmp
pop
xchg
pop
cld
fs
mov
cmp
mov
add
cmp
sbb
faddp
pop
push
out
fnstsw
stc
ljmp
push
cli
sbbb
mov
ss
cs
cwtl
nop
cmpsl
pop
insl
mov
xlat
fsubrs
call
cmp
mov
fs
mov
jo
mov
cmp
mov
and
cmp
inc
pop
ret
mov
cmp
sbb
out
push
cmp
fwait
cmp
mov
mov
lret
pusha
js
fistps
xor
xchg
data16
adc
addb
lcall
shll
cmc
loopne
add
cltd
fstpl
and
xor
repnz
cwtl
ficompl
clc
cmpb
jo
pop
mov
adc
jmp
jns
sbb
lret
mov
cmp
sbb
filds
cwtl
jo
sbb
sbb
xchg
xchg
sub
fdivr
aam
xchg
sbb
lods
sahf
sbb
adc
pop
cmpb
mov
sbb
lcall
mov
loope
fisttpll
aas
fdivrp
dec
xlat
mov
pop
inc
enter
inc
aas
push
sahf
push
sbb
sbb
dec
xor
lea
popa
sub
adc
ds
out
add
stc
cwtl
pusha
adc
cmp
cld
cmp
push
les
in
xchg
add
out
push
out
cmp
pop
fistpl
mov
fldcw
in
mov
cmp
lcall
cmp
cmc
cld
pusha
add
push
int3
xchg
daa
rcl
test
insb
pop
pushf
repz
pop
cmp
pusha
cmp
cmpsl
add
dec
pop
mov
dec
dec
xchg
xor
or
dec
dec
dec
xchg
int
paddb
hlt
imul
gs
fcoml
notl
fcmovu
jne
lea
adc
dec
inc
mov
xchg
fstp
shrb
fcmovbe
pusha
cmp
or
popf
fdivrl
loopne
outsl
sbb
xor
pop
xor
lock
cmp
les
xchg
out
sbb
stc
and
out
mov
xchg
lret
xchg
mov
cmpsl
filds
push
int3
jnp
xchg
ss
jge
lds
leave
sbb
mov
xlat
rcll
js
xchg
loope
adc
dec
jl
mov
jmp
add
push
lret
lcall
pop
sahf
jge
ss
sbb
mov
fdivrl
fdivrs
in
add
dec
nop
xor
mov
sub
outsl
cld
out
xchg
or
xchg
mov
mov
sbb
jge
xlat
aad
adc
ja
mov
cmp
push
idivl
dec
movsl
pop
cltd
int3
jge
fistpl
ja
xor
imul
cli
mov
mov
cmp
enter
enter
mov
jge
xchg
pop
cmp
jns
stc
cltd
jl,pt
loopne
adc
mov
xchg
mov
out
cld
fadd
jl
jns
xor
sbb
jle
cwtl
add
call
addr16
out
cmp
push
and
xchg
pop
sbb
push
lahf
lcall
xlat
pop
mov
mov
sbb
inc
cmp
cs
gs
pop
sti
sbb
fdivrl
jae
mov
mov
cs
adc
sbb
fdivr
cmp
enter
aas
xor
imul
ficomps
scas
ds
test
add
mov
xlat
fisubl
movsb
sbb
and
push
cltd
dec
pop
js
jae
jge
decl
rcrb
in
xlat
pop
das
mov
aad
jge
mov
cmp
add
mov
pushf
in
cltd
pop
cmp
mov
mov
ja
mov
xor
sbb
mov
cmp
xor
add
pop
pop
jp
icebp
and
dec
jl
ficoml
push
inc
xlat
xchg
fadd
fsts
cmpsb
cmp
pop
or
inc
cmp
sub
cmp
xchg
push
lret
ds
aaa
test
bound
mov
jns
cwtl
jmp
fcompl
adc
sbb
ror
inc
sbb
pop
gs
cmp
jns
popf
cli
arpl
push
pusha
adc
ja
adc
sbb
fadd
jp
loopne
fcmovu
std
mov
cmpb
jae
sti
cmp
sahf
xlat
push
popf
clc
aaa
mov
inc
jp
cmp
adc
lock
enter
add
cli
cld
push
mov
leave
loopne
pop
js
ds
pop
cmp
sub
cmpl
and
shr
jns
adc
out
sbb
popf
stc
pop
andb
cmp
ds
les
movsb
add
jg
pop
sahf
mov
pop
xchg
outsl
or
mov
and
and
fs
pop
xchg
mov
xchg
je
sub
adc
cld
divl
repnz
add
cld
cmp
xchg
push
cmp
push
pop
sti
sbb
sbb
test
pop
sbb
out
ficoms
sub
mov
cmp
sub
stos
out
ffreep
inc
or
mov
cli
loopne
shl
out
cld
mov
js
sti
xchg
mov
fisubs
and
sbb
dec
pop
xor
ja
sbb
jle
punpckhbw
mov
cmpsb
out
std
cmp
mov
paddd
xchg
fidivs
movsb
mov
pop
scas
pop
loopne
cmp
lods
jmp
sbb
sbb
lds
pop
das
pop
fwait
jb
or
push
pop
pop
jge
add
push
xchg
std
jle
mov
push
or
pushf
fstpt
add
pop
pop
lds
push
inc
mov
pop
pushf
sub
pop
push
outsb
dec
dec
and
add
mov
loopne
cmp
jne
jmp
jbe
cwtl
outsb
lds
loope
mov
cli
repnz
mov
xor
int
jae
jns
jp
sbb
popf
sub
sbb
cmp
pop
std
bound
lods
mov
test
pusha
and
xchg
adc
push
out
cld
cmp
mov
sbb
adc
cmp
fnstsw
mov
or
mov
push
mov
clc
sbb
fcmovu
loopne
lods
ss
mov
mul
and
cld
pop
jl
fisubrl
scas
cwtl
fists
fcomps
pop
push
inc
add
mov
wbinvd
jl
sti
mov
cmp
push
push
clc
xchg
cmp
aad
cmp
adc
movsb
cmp
push
mov
jge
cmpb
push
clc
pop
imul
das
in
test
stc
fnstcw
into
inc
add
movsl
xorb
inc
fucom
mov
cwtl
cli
sbbb
mov
cmp
data16
popf
dec
and
xlat
inc
and
fdivrs
inc
mov
cmp
stc
sbb
cmp
push
pop
adc
mov
lahf
movl
daa
into
lcall
mov
and
push
jo
bswap
fidivrl
iret
inc
jp
xor
inc
push
or
sub
cmpsb
iret
mov
stos
cmpsb
mull
mov
pusha
fimuls
inc
je
add
sbb
add
ds
mov
cli
pop
or
cmp
sbb
xchg
mov
pop
jle
dec
jl
xchg
mov
mov
dec
loopne
fstpl
pop
xchg
pop
xor
rcrb
pushfw
sti
fadds
fisubl
popf
shlb
and
jge
mov
inc
and
cwtl
fistpl
pop
mov
fwait
add
pushf
pop
xlat
sbb
jns
clc
pop
pop
sbb
push
fistps
mov
pop
inc
cmp
testb
sbb
adc
sbb
sti
pusha
movsl
inc
fcomps
lock
sarb
push
call
in
scas
movsb
xor
ja
push
inc
in
pop
fidivrs
add
ljmp
out
sbb
pop
xor
cmp
push
cli
mulb
mov
faddl
or
lcall
xor
gs
out
ret
or
bound
pop
or
xor
cmp
mov
sbb
sbb
les
and
mov
lds
push
fcomps
pop
inc
xchg
cltd
or
inc
sarb
push
xlat
jnp
loop
movsl
pop
and
aam
outsb
dec
jle
test
mov
pop
add
sbb
adc
cwtl
pop
adc
lcall
mov
cmp
scas
add
inc
popf
clc
adcb
and
and
insb
jbe
cmp
sbbb
mov
inc
ja
sub
sbb
mov
xlat
gs
sbb
pop
int3
fdivs
jl
xorb
ds
sbb
insb
cli
jmp
cmp
xchg
lahf
sbb
jle
inc
xchg
cs
lahf
cli
in
mov
push
and
pop
mov
push
aam
clc
mov
ja
negl
pop
pop
xchg
test
pop
sbb
adc
stos
sbb
fidivrs
fdivrs
push
idivb
clc
cwtl
sbb
push
icebp
add
xchg
mov
adc
add
xlat
repz
sbb
lahf
pop
fsubs
pop
mov
and
jge
int3
cmp
pop
pop
loopne
mov
inc
fnstsw
ljmp
adc
sbb
mov
cmp
mov
fstps
fdivrs
lcall
cltd
fcompl
pop
cwtl
test
cmp
fincstp
cmp
mov
rol
add
or
push
idivl
sbb
fcompp
adc
inc
push
arpl
out
mov
mov
cltd
aad
xchg
mov
push
fnstcw
fdivrp
dec
mov
fwait
popa
inc
fadd
jp
loopne
cmp
pop
mov
sar
ficompl
stc
mov
jae
sbb
inc
sarb
enter
pop
shr
pop
pop
pop
dec
add
mov
pop
scas
fcoml
idivl
mov
cwtl
in
sbb
cld
fistpl
iret
popf
mov
lcall
jns
clc
bound
ret
in
pop
sub
fldl
addb
lds
inc
cmc
xchg
jbe
cmp
std
stos
pop
fsubr
add
lcall
rcr
arpl
mov
sbb
cmpsb
fwait
call
imul
jge
mov
cmp
dec
js
les
testl
cld
cmp
xchg
outsb
negb
mov
fdivl
clc
push
and
adc
mov
call
nop
sahf
pushf
pusha
mov
and
lret
aam
lcall
cmp
stos
pop
ficomps
jb
dec
pop
rcll
lock
fcomps
xchg
fldl
mov
dec
fistpl
into
ffreep
jl
stc
sbb
repnz
dec
scas
push
sti
or
cltd
pop
in
ficompl
push
pop
std
sahf
pop
lret
jge
fcomps
xchg
aam
inc
inc
dec
cmp
fadd
fstpt
and
ja
or
sbb
fimull
in
aas
pop
pop
xlat
pop
push
stc
rolb
sbb
xor
ljmp
add
dec
xchg
sbb
std
idivb
xchg
loop
test
sbb
push
xor
inc
cmpsb
inc
jl
inc
xchg
mov
pop
fistl
adc
popa
xlat
pusha
ja
cmp
inc
lds
jnp
xchg
cmp
gs
fnstcw
lret
sbb
mov
or
xchg
jge
stc
fsub
jno
nop
sub
push
sbb
jl
sbb
fdivs
lcall
arpl
or
jns
inc
adc
cmp
fstl
xchg
mov
pop
mov
dec
add
sub
inc
inc
pushf
and
mul
pop
jle
sbb
mov
sbb
ja
push
dec
movsb
jns
sahf
xchg
inc
fstpl
in
xlat
fsubs
fcompl
fistpl
not
mov
adc
pop
xor
cli
cmp
and
push
xlat
mov
inc
adc
mov
sbb
mov
std
mov
or
add
mov
adc
das
xor
pushf
xor
mov
and
cmp
lcall
push
mov
jns
cli
lcall
pop
lret
mov
int3
sbb
ficoms
mov
cmp
and
leave
sbb
mov
sbb
daa
lds
lds
leave
cmp
and
loope
leave
inc
sbb
adc
push
out
push
cmp
pop
push
jge
dec
ret
inc
pop
xchg
inc
mov
std
pop
les
mov
add
cmp
and
mov
pop
lcall
cwtl
adc
sbb
cmpsb
cmp
stc
into
mov
loopne
sbb
or
cli
mov
dec
mov
mov
fdiv
decb
lcall
movsb
mov
jp
jmp
ss
outsl
movsb
lcall
adc
mov
bound
mulb
pop
fisubrs
pandn
pop
enter
mov
cltd
sub
mov
jne
lcall
and
popa
pushf
iret
and
test
out
cmp
add
mov
push
sbb
stc
cwtl
mov
sbb
push
mov
scas
sarl
cltd
test
rcrb
inc
fdivp
jae
lock
xchg
insl
ljmp
int
sub
sbb
out
ljmp
clc
cmpsl
xchg
fcompl
mov
int
pop
mov
repnz
js
cli
rcrb
mov
nop
jmp
cmp
dec
jo
mov
or
sbb
cmp
fcmovne
jle
jge,pt
cwtl
and
arpl
pushf
pop
mov
mov
rorl
fistpl
cltd
sar
cmp
repnz
jb
or
out
jge
and
ficoms
in
cmp
cmp
sbb
adcb
mov
pop
push
aam
aaa
xor
dec
les
mov
push
pushf
adc
mov
sarb
pop
mov
cld
mov
lds
imulb
mov
aas
loop
sbb
pop
and
fisubrs
push
pop
xchg
push
loopne
std
fmulp
icebp
cmp
inc
mov
jmp
add
sbb
jge
mov
mov
xchg
loope
jo
clc
cli
sub
sbb
pop
sahf
mov
loopne
int3
push
pop
mov
sahf
adc
mov
and
pop
shlb
js
pop
into
cltd
jns
sbb
pusha
fstps
adc
add
stc
or
fidivs
mov
in
fsubs
sbb
mov
dec
imul
push
jae
cli
cmpb
faddp
push
out
pop
inc
sbb
pmaxub
mov
xchg
stc
ljmp
inc
sarl
mov
sbb
call
mov
xor
mov
cmp
pop
ficoms
mov
jo
enter
popf
addr16
xchg
lret
cmp
popf
clc
cli
gs
jns
push
xchg
int3
mov
fldl
movsl
jb
fcompl
jns
mov
pop
into
sbb
fimull
push
push
out
fcmovnu
pop
sbb
notl
jle
push
xchg
std
gs
mov
fidivrs
jmp
js
inc
outsl
mov
sub
mov
pushf
and
add
clc
out
inc
add
addr16
in
jle
push
jo
cwtl
flds
repnz
sbb
pop
mov
sub
mov
sub
sub
cld
push
cmp
nop
inc
push
pushf
arpl
xchg
push
fnstsw
imul
mov
sbb
aas
stos
adc
xlat
and
fs
jge
xor
ss
mov
les
sbb
pop
in
fimull
fiaddl
fdivrs
sti
fnstcw
push
sbb
ds
popf
pop
inc
inc
jle
clc
nop
mov
cmp
mov
xlat
jp
popf
pop
gs
jl,pn
mov
cmpb
inc
sahf
and
xchg
cli
pop
js
into
shrl
arpl
mov
add
test
fistps
mov
bound
les
fnstsw
jo
cmp
push
pop
js
mov
out
fwait
out
mov
and
jns
pop
cmp
cld
sbb
mov
add
jb
sbb
or
out
xchg
xlat
mov
fdivrs
jle
inc
clc
mov
xchg
pop
or
mov
popf
mov
cld
sub
adc
sbb
cltd
cmp
or
rol
fdivrl
pop
pushf
add
test
sbb
and
mov
inc
out
sbb
push
fisttpl
andb
jl
cld
pop
hlt
inc
fiaddl
repz
cmp
xchg
test
mov
js
inc
loopne
sahf
cmpsb
push
clc
cld
mov
out
fildl
or
fistl
fwait
mov
inc
cld
jge
cli
or
lock
rcll
mov
nop
lds
mov
adc
pop
cltd
iret
sbb
push
bnd
jp
inc
outsl
leave
je
push
xlat
pop
inc
rorl
loope
xor
inc
cmp
and
pop
cmp
push
testl
ud1
cmp
cli
jbe
mov
inc
paddb
add
cmpsb
adc
jbe
adcl
inc
jns
cld
into
cmp
xchg
pop
clc
jp
pushf
pop
lds
adc
mov
and
loopne
stc
jns
mov
adc
loopne
sbb
mov
push
xchg
inc
popf
aad
bndldx
jl
scas
mov
fistpll
fstpl
sub
adc
add
mov
pop
pop
mov
mov
cmp
mov
jmp
xlat
xchg
mov
fdivp
cli
push
fadd
inc
add
jbe
cwtl
out
out
inc
sbb
mov
push
push
test
mov
jae
jle
fbstp
and
fchs
pop
push
dec
pop
fisttps
inc
add
sbb
cli
pop
cmp
adc
fcmovnbe
in
out
cmpsb
mov
cmpsb
xor
iret
inc
insl
arpl
out
inc
sbbb
fistpl
movsb
sbb
inc
into
sbb
dec
pop
and
cmp
cmp
jle
std
fsub
cmpl
sub
sbb
lea
and
mov
adc
sbb
push
and
cld
xchg
insb
fidivs
pop
or
jae
mov
int3
cld
je
inc
ud0
rorb
mov
out
xchg
mov
adc
inc
sub
lds
lock
mov
cmp
mov
fcoml
jl
cwtl
cmp
push
testb
adc
inc
loopne
cmp
inc
stc
fcompp
mov
mov
jns
mov
pop
mov
cltd
push
mov
fwait
xlat
repz
mov
sbb
fdivrl
mov
test
pop
adc
jl
mov
mov
fdivrs
fisttpl
pop
adc
push
cld
sbb
fnstsw
fstl
andb
pop
mov
sbb
popf
test
vpaddw
push
out
lds
mov
insb
cmpsl
cmp
cwtl
popf
sbb
dec
pop
push
pop
push
pop
dec
js
jle
cli
mov
xchg
sahf
sbb
fidivs
ja
sbb
lds
lcall
push
adc
and
andb
mov
fwait
mov
adc
sarb
cmpsb
fdivrl
sbb
and
or
ss
hlt
fcomp
pop
popa
test
or
test
jge
sbb
sub
inc
dec
sti
enter
fcomps
repz
adc
test
notl
adc
adc
rorb
pushf
js
mov
add
cmp
sbbb
mov
mov
cmp
sbb
sbb
daa
pop
insb
mov
ss
cs
jge
mov
fsubs
fwait
jl
sbb
jg
popf
sbb
gs
fidivrl
cmp
ret
xchg
dec
jae
js
les
sbb
mov
add
push
inc
jge
xor
mov
xchg
mov
lea
xchg
in
int3
pop
xchg
inc
sbb
mov
xlat
neg
negb
mov
mov
adc
adc
cli
cmp
mull
into
cmp
aaa
lcall
fstps
sbb
and
and
js
loopne
negl
cld
shlb
adc
cmpsl
in
xlat
add
pushf
and
inc
adc
idivl
mov
jp
or
cmp
iret
fcmovu
cmp
fs
les
jne
out
daa
gs
movl
cmovae
idivl
adc
sbb
cmp
cmp
bound
sbb
cmp
dec
mov
cmpsb
mov
ds
sub
jl
jb
mov
sbb
and
cld
push
pop
and
pushf
mov
push
and
inc
popa
cmp
inc
dec
mov
cmp
cmp
sbb
jl
fwait
pop
xchg
fsubrs
mov
dec
mov
mov
push
scas
negb
roll
jne
out
cli
cmp
pushf
sub
enter
adc
mov
push
les
inc
shlb
sub
xor
push
sahf
mov
cltd
cs
jge
rolb
push
sbb
negb
sbbb
aas
lock
push
pop
jns
into
jecxz
or
jmp
fdecstp
fdivrl
rorb
sbb
sbb
push
jecxz
jp
std
loopne
jle
mov
mov
pusha
pushf
mov
cmp
pop
loope
loope
js
xchg
pop
sar
cmp
cmpsl
push
dec
test
pop
sti
pop
rol
push
pop
movsl
pushf
lcall
cmp
ffree
add
inc
cltd
fstpl
popf
cmpsl
int3
inc
push
mov
je
push
mov
pop
cmp
fstp
or
shrl
xchg
roll
mov
sarb
sbb
stc
lahf
in
push
push
jae
cld
add
pop
cli
testl
sbb
cs
sbb
sbb
cld
mov
pop
sti
mov
jle
cmp
jle
and
mov
xchg
push
outsl
xchg
out
jle
mov
negl
pop
fcoml
enter
jl
mov
jno
sub
or
cwtl
fwait
mov
pop
ds
or
pushf
sbb
add
mov
scas
std
sub
js
das
push
nop
mov
cmpsl
adc
push
sbb
mov
nop
setb
in
sarl
loop
sbb
mov
and
cli
jge
mov
stc
ret
mov
dec
movl
cmp
push
jge
sbb
fistpl
xchg
int3
fcompp
fdivrl
nop
cld
inc
adcl
loopne
jge
or
rclb
xchg
cmp
jne
push
jbe
popf
bound
push
sti
add
fidivs
pusha
jbe
xchg
and
scas
push
sub
imul
fdivrs
inc
jle
pop
popa
pushf
andb
frstor
xor
pusha
or
testl
sbb
sbb
fistl
in
jns
push
push
jp
stc
push
imul
fdivrl
ss
bound
jmp
and
sub
cld
inc
sbb
inc
rcrl
xchg
pushf
ds
out
mov
xor
leave
pop
lret
dec
movl
shlb
out
mov
aam
fcomp
mov
cmp
popa
mov
test
ja
cli
cmp
mov
ss
lahf
cwtl
sahf
and
cmp
cmp
leave
fnstsw
or
xchg
mov
les
lock
movsb
je
gs
pop
negb
orb
inc
std
scas
fcomp
ds
jb
xchg
mov
xor
fs
pop
sub
cmp
or
pop
or
fnstsw
sbb
or
sub
push
es
jae
fisubl
cld
dec
in
sbb
push
fsub
add
aam
sbb
popf
mov
into
filds
jb
xchg
rorb
fdivr
std
sbb
sahf
pop
pop
out
and
cmp
push
cld
xor
jge
cmp
repz
lahf
sub
pop
cli
rcll
imul
and
cld
xchg
stos
jle
das
jbe
mov
shll
push
mov
adc
pop
jne
stc
cwtl
std
and
push
jl
fistpl
clc
ficomps
cld
cmp
mov
stc
dec
cli
pusha
dec
fisubs
decb
cmpsl
imul
xchg
leave
mov
mov
jmp
mov
xor
cli
pop
iret
subl
aas
inc
icebp
popf
fmull
sbb
cmp
mov
ss
sahf
or
pop
pop
repnz
gs
dec
stc
ja
xchg
inc
cld
mov
pop
xchg
mov
cmp
inc
jl
ficompl
arpl
jp
xchg
repz
mov
repnz
push
mov
mov
pop
push
sbb
incb
nop
dec
jnp
jecxz
cli
fcomps
jge
cmp
mov
ds
pop
addr16
clc
shrl
lahf
sahf
push
xchg
fstpl
mov
jnp
fs
cmp
shll
push
cmp
cmc
sub
test
xor
jbe
shll
mov
stos
out
push
and
loopne
movsl
loopne
sbbl
and
mov
popa
jno
gs
test
sbb
lds
jg
inc
xchg
lcall
rcll
xchg
popf
fwait
lock
lret
imul
sbb
leave
push
ret
jae
fistpll
xchg
sbb
std
and
idiv
fisubs
pop
mov
xor
or
xchg
stos
xor
cmp
add
mov
or
fs
inc
push
jge
aas
lcall
int
lods
push
mov
sahf
xchg
xor
jmp
cmp
popf
fcomps
js
push
gs
xor
cmpsl
in
aam
jl
out
mov
addr16
push
xchg
sahf
pop
js
cmp
out
mov
out
clc
pushf
faddp
out
cltd
jp
setne
fdiv
dec
mov
cmp
sbb
jbe
xorl
sahf
mov
and
xchg
cli
aaa
stc
or
cmp
popa
pop
sbb
adc
or
std
add
fcomps
push
mov
jno
aam
cli
xor
shrl
gs
adc
cmp
add
cmc
adc
inc
hlt
pop
test
jle
sub
sub
cmp
xor
cs
jg
pop
inc
std
loopne
fwait
aam
pop
in
cltd
lods
addb
leave
stos
nop
rcrl
insb
or
pusha
cmp
mov
pop
and
mov
jp
adc
pop
cli
fstl
clc
and
sbb
lret
xchg
mov
cmp
js
pushf
dec
mov
pop
cwtl
sbb
sub
std
cltd
xlat
inc
jecxz
cld
fstps
lds
mov
inc
orb
adc
cltd
and
cmp
fstpl
push
pop
cltd
lods
cltd
popf
push
pop
jns
int
lret
xor
stc
cld
push
mov
cltd
cmpb
cmpsb
mov
cmp
fmuls
add
cltd
or
dec
je
movsl
shl
call
movsl
adc
cltd
shrb
insb
movsb
pop
push
pop
cli
outsl
or
mov
jp
ja
arpl
push
fisubl
data16
jp
in
ljmp
adc
jae
dec
arpl
mov
cmc
cld
inc
sbb
sbb
cwtl
xlat
stc
ds
pop
aad
fisubl
sti
pop
cmp
mov
ds
sahf
clc
jle
add
outsb
jnp
js
cmp
enter
push
aad
sbb
inc
dec
add
loopne
flds
pop
sahf
jge
mov
dec
cmp
punpckhbw
cltd
pop
dec
mov
sbb
jecxz
xchg
xchg
add
mov
js
pop
pavgb
dec
xchg
inc
inc
cmp
cld
adc
cwtl
fnstsw
lock
sub
pop
adc
notb
in
cmp
cmp
add
add
js
arpl
dec
or
popf
xlat
mov
sbb
divl
xchg
js
sub
xor
cmp
sbb
gs
dec
rclb
lcall
sbb
sti
fdivrs
jnp,pt
mov
repnz
out
fld1
call
cmp
cmp
fwait
xor
fcmovu
pusha
out
and
ds
fbstp
jae
inc
pop
sahf
lcall
inc
dec
xchg
popf
push
push
lods
out
sti
mov
int3
pop
sbb
in
flds
pop
mov
adc
mov
jl
cmp
adc
adc
cmp
js
aaa
out
pop
mov
pop
and
in
and
daa
mov
jl
fists
mov
sbb
mov
mov
push
mov
sbb
cltd
xor
cwtl
cmp
jp
and
sub
insl
inc
pop
jns
inc
clc
adc
inc
fisubs
inc
adc
push
sahf
cmp
xor
jge
rcrl
sbb
bound
inc
mov
lds
mov
pop
xor
fs
out
fidivrl
dec
sub
aas
test
sbb
clc
dec
pusha
iret
rcrb
and
in
rcrb
jg
jns
les
leave
push
movsl
pop
gs
dec
or
fstpt
in
cwtl
or
xor
cmp
xor
jns
cmc
mov
scas
subb
out
lret
mov
jge
out
sbb
clc
jle
dec
sbb
movsb
sti
cmc
lcall
add
jns
sbb
cmpsl
dec
lcall
xchg
into
cmpsb
clc
cwtl
mov
je
mov
pop
push
jecxz
sbb
sub
pop
into
rol
xor
pop
mov
pop
adc
fstpl
jge
sbb
cmpl
dec
cmp
mov
mov
inc
jl
stos
mov
xchg
adc
and
and
mov
xchg
jbe
dec
not
mov
cmp
sbb
pushf
add
cmp
ds
ss
mov
sub
sbb
int3
pop
adc
mov
cmp
sub
dec
sbb
addr16
mov
add
inc
jmp
cmp
add
inc
adc
mov
sbb
js
cltd
fiadds
fwait
cmp
mov
mov
inc
jp
js
sub
cmp
xor
mov
mov
rolb
and
xor
xchg
arpl
enter
push
arpl
rcrl
ja
in
cmp
and
sti
and
inc
faddl
fnstcw
xchg
mov
push
sbbb
jbe
cmpl
sahf
cmp
xor
jns
pop
mov
dec
or
mov
sbb
pusha
iret
bound
xor
std
pop
and
jl
testl
sbb
rcrb
mov
leave
bound
jnp
cmpsl
ds
sbb
or
adc
inc
cmp
stc
sti
xchg
jo
push
icebp
pop
jns
or
popf
in
fs
mov
sbb
sarl
adc
stc
jge
and
incl
lea
inc
push
cli
fwait
lcall
ds
xlat
shll
clc
dec
inc
hlt
icebp
jbe
add
mov
sub
insb
pop
cmpl
cmp
pusha
fiaddl
mov
mull
fs
pop
hlt
push
xchg
popa
cwtl
sti
pop
mov
inc
inc
and
inc
mov
adc
xchg
cltd
cmpsb
enter
inc
xor
pop
mov
pop
testl
xchg
shl
mov
ds
push
push
cmp
imul
or
inc
std
mov
clc
cltd
jge
cwtl
imul
cmp
stos
mov
cwtl
clc
xlat
adc
cltd
jl
mov
mov
out
sti
cmp
mov
cmpsb
cmp
pop
ficomps
and
sbb
mov
add
int
testb
lock
sbb
cmpb
cmpsb
pop
add
mov
roll
adc
rcr
cmp
xlat
cmp
add
js
cvtps2pd
cli
xor
aam
jl
cmp
mov
js
fistps
out
mov
repz
cltd
pop
sbb
fdivr
arpl
popf
sbb
mull
cli
fidivrs
push
mov
movsb
fistpl
mov
andb
adc
inc
fdivrl
fcoms
adc
outsl
fbstp
add
jae
dec
mov
jp
leave
faddp
cli
inc
and
and
adc
sbb
std
sub
adc
outsb
js
xlat
rclb
ja
cmp
add
push
ss
std
mov
inc
out
sub
sbb
add
iret
xchg
pop
popf
call
cmp
das
fisubrl
mov
push
mov
cli
lret
push
fcomp
mov
and
pusha
xchg
or
cli
xor
mov
imul
xchg
clc
negb
rcrl
std
pusha
add
dec
pavgb
adc
cmp
mov
pusha
mov
xor
push
cld
fnstcw
mov
inc
outsb
and
mov
vshufps
mov
mov
bound
pop
jbe
mov
sbb
clc
lcall
in
jge
adc
dec
fadds
popf
ds
test
mov
fistpl
scas
sbb
sar
lahf
inc
repz
loopne
cwtl
frstor
pop
xor
xchg
sti
imul
out
out
jbe
xor
xor
add
inc
loopne
jp
stc
pop
pop
add
adc
cmp
pop
lret
int
mov
lcall
cmp
and
xchg
sahf
fisubrs
xchg
pop
push
loopne
dec
mov
outsb
in
dec
les
in
xor
rol
scas
push
inc
mov
fmuls
mov
push
mov
xor
pop
lock
mov
sbb
in
sbbl
inc
pop
add
and
popf
das
fmuls
sbb
inc
sbb
lcall
mov
rcl
negl
in
xchg
pop
ficoms
andl
mov
test
fstl
inc
pop
pop
sbb
cmp
out
je
dec
cmc
push
add
push
jl
and
jge
cmp
js
fdiv
adc
xlat
cli
dec
aas
adc
adc
pop
pop
fs
sbb
and
mov
js
inc
inc
rcrb
sbb
sbbb
mov
or
sbb
xlat
rorl
sti
ljmp
out
cmp
or
inc
cmp
cltd
add
ret
pusha
daa
neg
cmpb
push
lcall
fs
sti
test
js
ja
bound
or
sbbl
pop
mov
sbb
sbb
clc
addr16
stos
sbb
mov
inc
sbb
mov
inc
push
neg
inc
pop
mov
call
jl
cmp
int3
movsl
jp
xlat
lcall
jns
shl
and
jp
fsubs
js
clc
sahf
adc
popf
pop
pop
sbb
push
scas
popf
lcall
mov
in
inc
xor
cmpl
cmp
push
pop
fcomip
aaa
cli
push
mov
clc
mov
pop
sbb
ds
sbb
sbb
inc
pop
inc
fs
iret
pop
xor
out
ljmp
pop
loope
cmp
lds
inc
jp
mov
clc
inc
pushf
push
jns
pop
push
add
sti
mov
int
add
daa
lds
cli
pop
xor
lcall
jl
out
out
pop
xlat
jns
jge
pop
mov
mov
mov
pop
jl
jbe
and
cmp
mov
sbb
push
or
add
dec
jl
dec
aaa
ljmp
test
popf
fcompl
sahf
mov
mov
mov
imul
or
xchg
fildl
cmp
loopne
stc
dec
sub
jge
jle
popf
pop
std
pop
ffree
pop
dec
sbb
js
push
xchg
or
aas
bound
ljmp
out
xlat
cmpb
sti
mov
and
pop
sahf
addr16
pop
and
stos
in
pop
mov
mov
sbb
cmpsb
ds
cmp
into
push
or
xlat
xlat
dec
fs
mov
std
sbb
cmpl
bound
pop
rcrl
out
cli
add
fcmovnu
mov
xor
out
mov
aaa
sbb
and
incb
ret
sahf
pop
in
inc
inc
mov
repz
imul
inc
js
push
pop
pop
sbb
xchg
addb
pop
scas
sbb
adc
adc
clc
cltd
negl
and
mov
jl
cmp
mov
mov
inc
pop
outsl
lret
fdiv
or
inc
into
addl
push
mov
adc
loope
jge
adc
js
cmp
imul
sub
lret
xor
fdivrs
pop
repnz
and
jle
sbb
aaa
mov
sub
push
incl
cmp
jge
sbb
fldl
std
stos
mov
cmpsl
jle
sbb
stc
fiadds
std
cmp
frstor
xor
clc
jns
pusha
add
in
andl
in
cmp
stos
cli
cld
jae
push
jle
xor
lds
sbb
mov
sbb
push
jl
ljmp
mov
jge
or
popa
std
sbb
out
cli
cmp
push
push
xchg
lahf
push
sbb
fstpl
mov
sti
mov
push
fdivrl
mov
dec
cld
xchg
push
xchg
icebp
and
fldcw
sbb
pop
cltd
adc
sbbb
mov
loope
sbb
xor
jns
cmpl
sahf
neg
sbb
and
int3
push
cmpsl
and
pop
xchg
mov
cmpb
xor
push
lock
inc
dec
inc
cmp
outsb
pop
outsb
repz
adc
fwait
mov
lcall
mov
sbbb
xchg
jle
into
scas
pop
xor
push
adc
pop
dec
add
cmp
faddl
cld
push
mov
push
pop
std
sbb
sahf
popf
scas
push
or
loopne
and
adc
adc
scas
sbb
cltd
sahf
xlat
js
cmpsl
add
mov
push
popf
in
sbb
ss
fwait
xchg
aas
jle
mov
or
sbb
ja
sti
aaa
lcall
inc
jge
fisubrs
inc
pop
pop
xchg
dec
adc
cmp
cli
mov
xlat
sbb
pushf
mov
pushl
mov
sarb
in
fidivrl
jbe
cmp
mov
push
jns
int
add
cld
pop
mov
mov
add
or
adc
adc
pop
inc
mov
popf
pusha
dec
pop
ficompl
lods
and
cmp
ljmp
pop
fsubl
fsubs
out
or
cmp
popf
pushf
mov
aad
les
sahf
pop
sbb
mov
ljmp
sbb
mov
jp
push
enter
dec
sbb
fldenv
xor
lods
repnz
sbb
pop
popl
out
pop
cwtl
decl
adc
sub
mov
mov
in
incl
fstp
jp
aas
sub
pusha
mov
and
dec
xchg
pop
mov
mov
iret
sub
clc
mov
cmp
stos
mov
dec
into
mov
fcomps
adc
mov
sbb
mov
jge
adc
xlat
xchg
sbbb
pop
movsb
in
cmp
push
cltd
cli
xchg
mov
xchg
rcll
add
pop
jns
xor
dec
push
repnz
mov
sbb
sbb
dec
cmp
lcall
dec
lea
aaa
adc
int
cwtl
nopl
jae
add
ds
cmp
sbb
clc
shr
addr16
mov
sub
cmp
mov
lods
out
bound
jae
and
js
and
mov
sbb
gs
mov
inc
repnz
shll
jge
push
mov
sbb
pop
mov
add
xchg
push
testb
xchg
mull
inc
ficompl
fstpl
sbb
lods
fisttpl
fcoms
fisubl
popf
inc
jp
sub
fdivrp
sbb
adc
mov
enter
mov
xor
xorb
loop
sti
fisttpl
cmp
je
push
pop
mov
mov
out
push
js
imul
and
insb
out
rcrl
mov
idiv
mov
jp
mov
mov
out
cmp
xchg
faddl
cmp
jl
sar
popf
mov
sbb
adc
stos
outsb
mov
jmp
fisubl
orb
in
dec
inc
xchg
mov
sbb
fdivl
imul
popf
rol
push
cmp
cltd
shlb
lcall
test
jl
leave
or
and
imulb
cmp
cli
or
sbb
sahf
mov
ss
xlat
mov
popf
xor
mov
aas
jle
call
call
cld
movb
into
js
jno
cmpb
in
adc
and
pop
cmpsb
push
pop
mov
mov
sar
xlat
or
fldl
sbb
adc
push
in
jns
inc
out
in
pop
lds
clc
inc
fbld
cltd
ja
lcall
cmp
xchg
push
test
popf
loope
pop
mov
sub
pushf
ds
pop
sub
or
mov
sbb
inc
popf
clc
cmpsb
stos
sbb
test
pop
jns
mov
cmp
sbb
ja
xchg
cld
lahf
enter
sbb
pop
mov
sbb
push
lds
cmpsb
jns
dec
aam
loopne
fistl
stos
jge
sbb
fxch
sahf
xbegin
stc
jge
mov
int3
fwait
cmp
bound
pop
in
cmpsl
jle
mov
pop
lods
ret
inc
stos
jge
and
jb
stc
sub
popf
fcoms
fs
sub
mov
pop
dec
rcrl
jp
and
mov
out
fcompl
mov
cmp
pop
mov
pop
push
sahf
testl
jbe
daa
int
int
mov
pop
fstp
stc
sub
inc
lcall
and
sar
jge
pop
js
fnstcw
sub
popf
aam
inc
push
mov
movsb
adc
push
aaa
inc
fimuls
pop
mov
jp
into
scas
push
fidivrs
sahf
dec
cmpsl
ss
pop
cwtl
into
and
pop
mov
inc
cwtl
pusha
mov
cltd
push
out
xor
fmul
xchg
adc
je
mov
pusha
in
ret
fistl
sbb
jp
int3
imul
add
aas
sub
aad
mov
cmp
cmc
push
mov
sbb
jge
sub
xor
pop
cwtl
mov
sbb
cli
sahf
cltd
pop
les
inc
mov
int3
lds
rcrb
cli
cwtl
clc
add
gs
pushf
dec
lods
mov
jge
cmp
push
and
mov
pop
loope
pop
insb
sti
clc
fistpl
or
out
and
jmp
aad
mov
mov
scas
inc
and
decl
xchg
mov
xor
mov
mov
dec
popf
adc
lcall
and
mov
into
mov
adc
andl
sbb
adc
sbb
add
negb
ja
pop
pusha
gs
mov
jmp
jge
lsl
shr
into
add
ds
or
pop
pushf
mov
test
mov
jge
xchg
adc
or
ficompl
fstps
pop
jns
sbb
aaa
loop
sti
cwtl
push
sbb
clc
aam
adc
mov
sub
sub
inc
neg
adc
jns
mov
stos
xchg
fwait
inc
pop
ds
out
push
adc
fidivrs
push
cltd
mov
xor
fcmovu
sarl
xchg
cld
jb
dec
xchg
in
cltd
outsb
mov
mov
mull
cltd
sti
out
sub
add
inc
fisubs
sbb
and
cmp
mov
cs
cmp
aad
sti
and
stc
add
sbb
mov
pop
mov
xchg
or
scas
and
std
and
cmpsl
clc
push
mov
inc
jns
inc
ficompl
shrb
push
mov
icebp
sahf
in
test
jp
cmp
stc
sub
sbb
xchg
fwait
dec
or
in
popf
sti
lcall
stc
and
fstpl
adc
sub
mov
cmp
sti
sbb
dec
ljmp
int3
mov
mov
push
cld
jnp
fsub
sbb
rol
rolb
stc
daa
fs
vmovss
shrb
add
sarl
loopne
movsl
or
cwtl
sbb
xchg
js
pop
and
fldt
jbe
lcall
inc
add
in
fidivrl
pop
addr16
pop
mov
scas
daa
std
or
sbb
scas
jge
mov
xchg
popa
in
scas
fs
xor
push
lock
into
xorl
mov
inc
pop
adc
cmpsb
add
imul
mov
fimull
jp
js
dec
arpl
mov
notl
sahf
shrb
incl
lahf
in
fildl
inc
sbb
inc
inc
and
adc
cmpsb
int
cmovs
cwtl
jmp
and
adc
sbb
inc
pop
sbbb
jo
sub
xchg
add
mov
push
xchg
shl
xlat
enter
dec
pop
or
push
in
imul
xor
pop
insb
inc
and
and
jl
mov
int3
cltd
push
repz
xor
test
js
xor
popf
scas
add
sar
loopne
fisubrl
push
pop
jb
sbb
pop
lcall
les
ss
mov
insl
mov
pop
rcrl
sub
negb
imul
xor
xor
adc
fwait
adc
fstp
adc
pop
mov
fisubs
inc
data16
mov
push
test
lcall
popf
js
mov
add
jae
outsb
xor
sahf
fimuls
negl
mov
cmc
mov
xchg
pop
cmp
cmp
jle
outsl
int3
fildl
ds
pop
fidivl
sbb
jns
inc
cmp
mov
cmc
pop
ficoms
mov
sub
push
mov
sub
mov
fprem
das
into
das
ficompl
sbb
popf
sbb
add
pop
sbb
sub
std
rcrb
test
aad
incb
insl
in
push
imul
sbb
dec
jbe
pop
cmc
xlat
mov
popf
inc
loop
push
imul
lcall
stc
push
cwtl
add
cmpl
adc
sbb
mov
dec
pop
push
loopne
cmp
or
mov
aas
add
mov
ds
mov
gs
pop
negb
fistpl
clc
mov
cmp
dec
cmp
sub
xlat
iret
cli
scas
adc
mov
sbb
fwait
std
out
and
popf
jo
sar
adc
jp
andl
test
push
les
dec
inc
pop
fst
push
cli
loop
mov
lock
cs
adc
sbb
icebp
lcall
xchg
popf
mov
fidivrs
pop
cmp
pop
sbb
cld
xchg
dec
scas
push
xchg
mov
pop
out
sti
mov
leave
movl
fidivrl
jp
cld
dec
into
test
mov
inc
orl
gs
cli
pop
stc
arpl
cmpsl
bound
and
add
sahf
movhps
cmp
sbb
into
xchg
stc
cmp
add
xor
cmp
fmull
cmp
test
dec
or
sahf
inc
pop
negl
sbb
pop
lods
dec
cmp
xchg
stos
mov
pop
out
mov
ss
stos
mov
mov
pop
pop
mov
mov
sbb
inc
push
mov
cltd
in
test
xchg
push
dec
cwtl
or
push
mov
inc
lcall
cli
test
cmp
ficoms
pop
add
push
negb
fnstcw
data16
adc
pusha
mov
xchg
in
cwtl
movsb
insl
rcrb
fcompl
cmp
fiadds
fcmovne
mov
push
stc
bound
mov
pusha
pop
or
cmp
movsb
cwtl
pop
pop
adc
je
fsts
jg
ljmp
mov
iret
sahf
mov
scas
in
dec
mov
lcall
lds
loopne
mov
shlb
inc
add
add
push
cmpsl
fs
or
jl
jp
imul
adc
cmp
sub
jge
adc
notb
pop
fmuls
mov
stc
cmp
js
sub
cs
loopne
dec
imul
pop
cmc
pop
jge
mov
sub
lcall
cmp
cmp
cmp
imul
cmp
outsl
and
adc
mov
adc
jns
adc
sub
jp
enter
jbe
sbb
sar
pop
xor
insl
idivl
and
daa
lds
push
pop
jbe
mov
cmp
fldl
pop
cmp
cwtl
adc
vminss
sahf
sti
adc
sub
mov
mov
les
mov
addr16
jae
or
pop
mov
mov
xor
aam
rcrb
int3
inc
inc
pushf
jle
sbb
jns
lcall
int3
pop
xlat
pop
sbb
jns
inc
repnz
mov
mov
ss
jle
xchg
stos
jbe
das
scas
jb
mov
or
test
or
mov
lret
aaa
cld
adc
sbb
lods
mov
gs
jns
inc
inc
push
sbb
fcoml
dec
sbb
or
sbb
mov
fwait
jge
and
ss
sahf
mov
ret
cwtl
sbb
ljmp
pop
push
mov
cmp
cltd
cli
stos
cmp
sbb
loopne
fidivrs
sub
popa
sbb
pop
lcall
sar
imul
pushf
daa
pop
sub
push
shlb
cmpsl
scas
frstor
mov
sub
pop
sti
sub
mov
xchg
jp
nop
pushf
fcmovu
jle
test
js
mov
cmpb
xor
std
inc
mov
mov
push
sahf
mov
pop
std
mov
pop
daa
cld
cmp
fsubl
push
les
cmp
wbinvd
pop
jl
lcall
pop
repz
dec
jns
push
fistpl
sti
adc
mov
out
jle
and
stc
push
xchg
loopne
mov
or
std
aas
clc
arpl
in
push
std
fcomps
lcall
add
idivb
cmpsb
scas
mov
adc
push
and
ja
mov
std
cltd
stos
push
clc
fildl
cmp
mov
mov
sbb
lcall
jle
mov
fidivrs
imul
cmp
clc
stc
push
sub
cmp
fdivrs
jp
push
sbb
cld
cmp
dec
pop
cmp
les
adcl
sbb
xlat
and
and
lods
mov
jge
pop
adc
inc
sbb
pop
mov
add
push
mov
xor
pop
jl
outsb
data16
fsubs
je
sub
rcrb
ljmp
cmp
sbb
mov
pop
fcompl
incb
fnstsw
pop
pop
dec
inc
js
sbb
int
jae
push
adc
mov
mov
add
push
or
les
test
data16
sub
sbb
cwtl
negl
out
aaa
push
ja
pop
jge
add
adc
add
divb
bound
sti
pusha
clc
cwtl
jge
std
sbb
dec
cmp
dec
js
mov
mov
sarb
sbb
mov
enter
leave
sahf
mov
cld
xlat
adc
pushf
adc
or
adc
clc
cmp
cmp
popf
insb
mov
cld
imul
and
inc
adc
leave
pusha
lds
neg
or
jl
pop
and
sub
in
mov
cmpsb
inc
stc
divl
icebp
jbe
js
mov
loopne
orb
and
add
adc
pop
jae
mov
pusha
inc
in
cmp
push
pop
mov
aaa
adc
into
pushf
adc
loope
mov
mov
std
pusha
addb
add
cld
cwtl
xlat
adc
lret
add
fcmovnu
cmp
shl
fwait
pushf
mov
inc
push
fidivrs
sbb
cltd
aad
pop
sub
in
pop
sbb
sarb
cli
sbb
ss
es
mov
mov
lcall
mov
inc
stc
jl
leave
jg
incb
lds
pusha
pop
or
out
lcall
or
cmp
ficomps
inc
neg
popf
std
int
push
dec
xor
mov
xchg
scas
fsts
mov
lret
inc
lods
xchg
mov
pop
cwtl
jp
push
loope
fcomi
popf
dec
and
out
repz
cmp
pop
lret
pushf
sbb
sti
sahf
mov
out
jp
scas
sbb
cmp
orl
xchg
add
jae
fincstp
and
mov
sbb
clc
cmp
dec
cmp
mov
fwait
sti
adc
inc
jmp
sbb
insb
push
aaa
adc
sbb
sbb
sbb
pushf
ficoml
xchg
lret
loope
jp
inc
fcmovu
sub
pusha
js
in
inc
add
pop
cmp
test
lds
std
sbb
push
add
mov
mov
sbb
outsb
aad
rclb
cmp
jns
test
inc
mov
fcompl
cltd
xor
iret
cs
dec
out
mov
mov
loop
jnp
mov
cli
xchg
push
mov
mov
mov
mov
das
lds
iret
lds
push
movsb
add
sbb
adc
sbb
pop
jge
loopne
or
xchg
fcmovbe
rcr
adc
or
imul
sub
jbe
cmp
mov
lcall
cmp
xchg
cli
sar
repnz
fsubrp
insb
pop
nop
pushf
jns
jp
cli
lods
addr16
js
fisubl
shll
cmp
int3
mov
out
mov
jmp
cmp
daa
rcrb
lea
mov
add
mov
adc
loopne
fdivrl
pop
lds
pop
xchg
push
popf
stos
fsubr
idivl
out
pop
pop
sub
cli
sbb
xchg
pop
lcall
push
loopne
popf
sbb
sahf
cmp
mov
jge
and
add
clc
clts
xchg
clc
std
add
fsubr
popf
add
jnp
hlt
sahf
mov
sti
pop
jp
sbb
popf
sbb
test
cmpsb
mov
pushf
push
sar
adc
push
cmp
cwtl
pop
cli
pusha
bound
sahf
dec
aam
out
clc
sti
loopne
mov
insb
out
repnz
sbb
imul
cmp
adc
cwtl
sbb
out
cwtl
and
add
mov
ds
cmp
jl
xor
adc
adc
jle
idiv
cmp
pop
sarl
pop
and
cmp
jge
sbb
addb
mov
sbb
mov
pusha
lds
faddl
movsl
cltd
pop
cmp
addr16
call
rcll
cmp
insb
add
or
js
adc
aaa
add
jl
or
inc
dec
or
or
inc
cwtl
rcrb
aaa
inc
fwait
pusha
ret
clc
and
ds
cmpsl
inc
fcmovnu
mull
sub
adc
fcoms
adc
cmp
clc
adc
inc
inc
sbb
sub
push
fstl
icebp
cmp
xlat
mov
or
clc
jb
mov
mov
mov
mov
cltd
mov
jo
mov
push
cmp
rorl
sbb
movsl
rcr
rclb
sbb
into
push
stc
mov
inc
pop
std
mov
cmp
inc
push
ds
inc
aad
pop
nop
pop
xchg
xchg
mov
sbb
cmp
rcrb
in
xchg
addb
dec
push
pop
push
mov
pop
sahf
mov
lret
inc
dec
sub
pop
adc
aas
into
dec
aaa
add
pop
adc
mov
rol
xor
mov
clc
mov
cmp
adc
lret
mov
ficoms
in
push
cmp
add
pop
cli
mov
or
adc
jns
adc
in
js
mov
mov
sti
mov
adc
fstpl
inc
fsub
and
lcall
std
loopne
out
leave
sbb
punpckhbw
cmp
jns
jle
sahf
push
sub
shl
clc
cld
cli
push
pop
ss
fyl2xp1
mov
mov
icebp
fstl
stc
xchg
pop
icebp
stc
shlb
jnp
lret
mov
cmp
movsb
pushf
dec
fcmovb
ss
fstl
jge
arpl
jg
jp
negl
mov
mov
sti
mov
popf
jns
xchg
mov
mov
xchg
cwtl
ffree
fidivrl
fistpl
out
cmp
std
rcrb
out
adc
sbb
mov
xlat
ds
pop
push
push
and
sbb
js
sub
mov
push
inc
sahf
fcmovbe
fists
in
lds
cmc
add
loop
nop
jmp
mov
test
cwtl
fdivrs
and
sbb
adc
call
mov
jp
ficoms
test
ljmp
cmp
negb
mov
popf
push
sarb
sbb
pusha
cli
in
sub
aam
add
cli
sub
xchg
bound
mov
and
cmp
gs
fnstenv
das
iret
mov
and
fstpl
das
jb
das
sub
fidivrl
dec
dec
cmp
sti
cld
sub
mov
add
cmove
fstpl
bound
loop
cmp
lods
pushf
cmp
cld
cltd
sbb
inc
fwait
call
mov
jl
clc
or
cmp
jg
and
dec
fildl
cwtl
sar
jno
pop
push
mov
cwtl
sahf
jmp
cld
sub
xlat
mov
pop
or
les
popf
pop
sti
fs
mov
sbb
mov
lock
mov
xchg
fs
pusha
mov
xchg
pop
xchg
mov
cmp
ficoms
sbb
xchg
jg
mov
adc
sbb
stc
ficoms
mov
dec
sti
jnp
xor
cmp
xlat
mov
xor
les
adc
ret
pop
cmp
sbb
lret
cmp
fidivrl
rcll
jg
inc
std
fstps
lock
cmp
jp
pop
and
or
and
or
sbb
sti
pop
sbb
popa
out
testl
nop
outsb
mov
cld
fldz
mov
adc
rcl
xchg
popf
ror
sbb
ljmp
js
lds
je
inc
lahf
xchg
xlat
xlat
inc
sbb
mov
daa
lds
incb
rcrl
cmp
and
push
pushf
inc
stc
adc
jg
or
popf
sbb
cs
jge
xchg
gs
lahf
add
mov
pop
inc
mov
popf
clc
pop
cmpl
je
popa
lods
fidivrl
inc
iret
lcall
ljmp
sbb
loop,pt
pusha
sbb
sbb
dec
sbb
dec
cli
negl
cs
pushf
pusha
cltd
sahf
or
inc
fnstcw
cmc
jno
push
pop
mov
add
push
cmc
and
test
test
ret
int3
dec
sub
mov
test
pand
push
mov
mov
sbb
data16
cmp
adc
rclb
aam
cld
sbb
gs
jns
fldcw
mov
dec
fnstcw
mov
shll
sti
loopne
cmpsb
dec
clc
cmp
jl
andb
mov
mov
cwtl
pop
xchg
inc
push
repz
cmp
and
and
ficomps
pop
fdivrl
ds
cmp
mov
cltd
arpl
and
or
push
fstps
cmp
clc
jno
mov
das
sub
jmp
pop
xlat
movsb
lea
add
sbbb
fwait
mov
ljmp
pop
mov
popa
js
lahf
xor
inc
mov
sbb
add
orb
sbb
jge
sub
mov
adc
fildl
pop
mov
mov
xchg
fiaddl
fwait
cmp
and
mov
push
cs
repz
aam
cmp
loopne
xor
mov
and
mov
out
scas
pop
std
sbb
xor
xor
cmpsb
iret
popf
fcmovnbe
jb
fsubrp
mov
or
pop
and
repnz
jl
sbb
rcrl
jmp
add
std
cmp
sbb
mov
pop
cmpb
mov
sbb
xlat
fwait
push
cld
aaa
add
add
sbb
mov
adc
aas
popf
xlat
sub
fistl
xchg
jge
out
fisubrl
mov
cmpsb
inc
sar
jle
into
sarl
push
push
add
adc
adc
inc
sarb
dec
dec
lds
cwtl
jl
jns
fmull
pushf
xchg
shlb
cli
jg
sub
std
adc
pop
clc
mov
in
repnz
sarb
jl
sti
jle
fisubl
add
sbb
rcr
jno
dec
out
fs
mov
or
and
lcall
jge
scas
sub
xchg
jl
loope
mov
add
clc
cld
and
mull
jp
and
and
std
in
fisttpll
push
inc
lcall
rcl
jle
xor
cmp
gs
mov
mov
sahf
sub
sub
repz
sahf
dec
adc
sbb
mov
shl
test
mov
adc
add
stos
les
mov
loopne
popf
pop
insl
sbb
sbb
sbb
cwtl
shll
vpsubw
sbb
mov
push
std
iret
fs
cmp
ss
fidivs
and
xchg
mov
jge
lret
fstpt
mov
fdivr
int3
cmp
adc
ds
jl
aaa
xor
mov
mov
cmp
push
sbb
mov
xlat
repnz
and
ds
das
movsb
xor
add
idivb
dec
adc
fistpl
iret
xlat
jo
pop
notb
sbb
jge
popf
cld
inc
pop
mov
mov
imul
dec
repnz
faddp
js
inc
mov
fildl
cmp
pop
popf
fwait
sbb
mov
std
pop
loope
rcrl
and
pushl
enter
fistpl
xchg
xchg
adc
mov
sub
testb
gs
les
and
push
jle
adc
scas
and
mov
or
cmp
inc
mov
fcoml
pop
sti
ds
fstpl
jb
pop
push
pop
xlat
movsb
shlb
cmpsb
mov
test
push
jns
push
sub
mov
loopne
adc
in
cmp
jl
rcrb
fs
lds
fstpl
les
dec
lds
fsubs
outsl
push
xchg
bound
stos
inc
mul
mov
xor
mov
je
mulb
inc
pushf
pop
pop
add
sbb
arpl
fsubs
push
shll
scas
adc
call
cltd
push
sti
cmc
aaa
addr16
sub
mov
push
pop
cmc
fiaddl
lds
sub
jbe
mov
add
mov
fadds
add
cwtl
xchg
inc
mov
jle
adc
adc
xlat
push
lock
jl
pop
idivb
push
jge
aas
pop
stc
clc
or
testl
and
jbe
cli
fldenv
mov
jmp
loopne
jns
ss
fdivrs
and
imul
pop
push
shll
mov
adc
clc
shll
xchg
cmpsb
sub
mov
push
mov
sbbb
xchg
aaa
or
sti
popf
std
cmp
roll
inc
add
movsl
xlat
pop
cs
fsubrp
push
mov
and
or
inc
aam
push
ds
pusha
jns
mov
jp
sub
out
mov
mov
mov
fimuls
push
icebp
and
xchg
jns
add
pop
outsl
push
lods
clc
mov
insl
mov
test
sbb
push
fdivrl
xlat
sbb
cli
push
jl
xor
sbb
xchg
mov
sub
cmp
sbb
cli
pop
cmp
pop
std
sbb
mov
pop
sbb
xchg
xor
mov
jle
dec
rclb
mov
repnz
xchg
mov
xchg
mov
fsts
mov
xchg
outsl
fcomps
xlat
fwait
int3
xchg
rcrl
pop
xlat
xchg
hlt
sbb
xlat
mov
add
repnz
xchg
mov
add
pop
out
xchg
xor
das
dec
xchg
ss
fdivrs
xlat
mov
xlat
out
xchg
xchg
mov
fcoms
fsubrs
xlat
mov
xchg
jle
cwtl
xchg
xlat
int3
xchg
rcrl
pop
xlat
xchg
hlt
sbb
xlat
mov
pop
inc
in
aas
punpckldq
rcrl
fnstenv
ret
pusha
and
pop
jns
cwtl
mov
je
add
popf
inc
sti
pushf
jle
pop
cmp
and
and
jae
sbb
push
ds
or
cmp
fmulp
xchg
aaa
outsb
pop
xlat
sti
cli
adc
pop
mov
mov
fcompl
fcomps
cli
xlat
cmp
cmp
rclb
sbb
js
aad
ds
sub
iret
cmpb
sub
jle
or
add
xor
cli
mov
push
fstp
jp
andl
cmp
pop
cmp
or
jle
and
mov
xchg
decl
fstpt
rcrb
shll
shll
rorb
std
pop
cmp
fcmovb
cwtl
push
pop
rcrb
cmp
xchg
inc
mov
adc
stc
fstps
loopne
cmp
pop
out
mov
in
clc
cmpl
and
rcrb
cmp
pop
dec
repnz
clc
xlat
es
clc
movsb
rorl
fwait
mov
sbb
lcall
sub
paddusb
lret
cmp
test
mov
out
daa
lret
push
push
mov
mov
xchg
add
sar
mov
push
shl
mov
icebp
dec
and
out
loopne
cmp
add
fildl
sarb
frstor
icebp
js
stos
sub
int3
mov
and
sbb
xor
fdivrl
mov
add
out
sbb
data16
adc
mov
icebp
and
push
jno
dec
xchg
ss
cmpsl
cmp
iret
or
xchg
dec
faddl
xchg
in
loope
shrl
xchg
int
mov
loopne
xor
daa
in
and
mov
test
sbb
mov
jp
mov
jbe
and
js
in
xor
xchg
rcrb
mov
ds
shl
xlat
cmp
xchg
mov
xchg
ret
mov
dec
xchg
jb
jge
loopne
mov
cmp
aad
xchg
std
jecxz
in
shrl
test
pusha
insl
and
mov
ret
inc
push
mov
xchg
js
shll
pop
fwait
mov
dec
lock
jns
mov
loop
lods
add
mov
jle
xor
xor
or
bound
ficomps
xor
repnz
test
loopne
cmc
jp
sahf
ret
mov
cmp
mov
aaa
mov
cld
inc
and
cwtl
mov
inc
jns
clc
iret
in
rcrb
jge
repnz
stos
lahf
enter
mov
sahf
sbb
jbe
pop
lcall
mov
or
mov
pop
and
mov
lcall
xor
and
sbb
sbb
sarb
mov
mov
fs
inc
xor
xor
pop
mov
clc
js
pusha
or
sbb
or
fldcw
xor
push
leave
sarl
inc
mov
sarb
sub
pop
andl
insl
shlb
not
fistpll
jg
sahf
xchg
mov
sbb
cmpl
mov
aam
dec
dec
pop
and
or
inc
add
pop
pop
and
leave
jl
icebp
or
fmull
pop
repnz
popa
dec
xchg
push
inc
sbb
or
lock
popa
sbb
ret
loopne
ret
test
aaa
sahf
add
pusha
jbe
inc
cmp
int
pop
inc
pop
decl
lahf
hlt
int3
lahf
popf
aaa
iret
jns
popf
into
popl
mov
cmp
add
xchg
out
jp
mov
test
sbb
and
in
add
roll
sti
and
pusha
pop
fiadds
and
push
xchg
icebp
movsb
sti
loopne
sbb
rol
mov
shlb
movsb
adc
mov
mov
int
movsb
pop
fiadds
sub
pop
faddp
mov
add
mov
mov
add
sti
and
movsb
in
pushl
add
loopne
fdivs
mov
pusha
lds
inc
pop
fisubs
enter
push
shll
rcrb
push
sbbb
enter
and
and
movsb
push
add
loopne
rolb
int
adc
push
lods
mov
fsubp
enter
mov
sbb
and
pop
fiadds
enter
rorb
add
xchg
inc
mov
sbb
and
movsb
or
in
pushf
cli
mov
in
pusha
jp
mov
and
add
add
pop
clc
add
ficomps
sti
sahf
clc
add
jno
fidivs
pop
outsl
out
sbb
and
call
out
fstp
fsubl
mov
jecxz
and
fidivl
shll
sbb
imul
mov
cltd
in
mov
cltd
jno
fnstenv
sbb
pop
jno
lcall
jno
fnsave
push
and
xor
jb
fucom
add
push
sbbb
pop
xchg
push
pop
fwait
shlb
dec
test
ficoml
fsubrl
mov
pushf
lock
std
je
bound
jp
mov
dec
fdivrs
in
xor
bound
jp
in
xor
into
fwait
repz
fdivrs
in
xor
bound
jp
in
add
jge
add
mov
pop
dec
add
mull
lds
and
adc
mov
push
pusha
sub
testl
clc
rorb
testl
int
mov
cltd
pusha
xchg
jg
push
jns
popl
hlt
lea
popa
mov
adc
fldenv
andl
shlb
inc
adc
mov
mov
loope
and
mov
inc
and
jae
aam
dec
dec
cmc
and
push
sahf
and
and
xor
inc
int3
mov
fwait
cmp
stc
call
and
and
add
add
add
add
push
add
add
in
cmp
lahf
fcmovnb
loopne
sbb
nop
xchg
int3
imul
xchg
xchg
out
sbb
jno
xchg
iret
imul
loop
adc
or
mov
xchg
inc
add
adc
hlt
into
mul
rcr
sbb
int
mov
mov
jmp
cmp
sbb
inc
or
imul
fstpt
jl
mov
cs
enter
mov
inc
sbb
ficompl
inc
adc
inc
mov
add
rolb
shrb
jp
ror
enter
aas
or
aam
aad
add
bound
mov
mov
js
mov
cmp
popa
lcall
fsubr
push
cwtl
fwait
loopne
scas
and
aam
ror
shr
mov
loopne
pop
in
add
fdiv
add
pushf
hlt
pop
loopne
jns
or
jnp
jmp
movsb
push
adc
sbb
repnz
popa
aad
popa
pop
aam
gs
add
nop
leave
mov
push
and
scas
pop
inc
gs
sub
das
fldl
sbb
nop
loope
shlb
cld
adc
mov
cmp
repnz
jp
xlat
mov
repz
cld
cmp
std
call
mov
mov
and
and
push
add
pop
mov
mov
and
mov
sbbb
add
sbb
adc
mov
jns
mov
inc
cmp
pop
add
sahf
pusha
sbb
in
mulb
jb
movsb
xchg
mov
adc
psubsb
fwait
je,pt
adc
and
adc
mov
and
cmp
and
cltd
mov
cmc
outsl
jp
mov
mov
jp
std
ffreep
in
loop
jp
pusha
mov
scas
mov
push
inc
xor
mov
shl
mov
jecxz
add
jp
lahf
push
sbb
cld
push
and
jbe
xchg
mov
outsb
cld
lahf
mov
mov
push
fdivrp
add
jnp
push
xchg
xchg
cmpsb
or
sahf
shlb
pusha
fbld
and
sti
and
push
std
push
pop
rol
jle
sbb
cmpsb
inc
pop
xchg
jmp
pop
mov
xchg
push
pushf
pusha
fisubl
push
rcrl
mov
insl
push
sub
cmc
pop
dec
cmp
fcompl
mov
adcb
sbb
pop
pop
cld
fsubr
pop
stos
sbb
pop
push
imul
or
pop
sbb
cmp
fwait
call
shl
je
pusha
cmp
and
jmp
adc
xchg
jp
inc
or
iret
fdivl
in
jne
or
or
mov
aad
add
and
and
mov
and
xchg
xchg
pop
shl
ret
pop
outsb
mov
in
pop
gs
inc
sahf
mov
dec
mov
ror
test
jbe
jle
xchg
dec
pop
dec
adc
adc
push
mov
loopne
in
and
aaa
cmc
bound
jp
pusha
pop
pop
adc
movsb
fwait
pushf
sbb
mov
je
and
lcall
jge
arpl
loopne
jecxz
sub
ret
ficoms
test
loopne
aam
mov
or
mov
xchg
popf
or
je
lahf
lds
loopne
bound
cltd
mov
cltd
push
mov
adc
or
rorb
and
leave
movsb
loopne
and
push
cmp
std
sbb
insl
jle
push
and
push
and
loopne
dec
cmpsb
insl
inc
adc
fistps
jmp
rcr
outsb
adc
cltd
push
xchg
ja
sbb
int
dec
mov
adc
cwtl
std
fdivr
adc
sbbb
cmp
lea
push
call
sti
adc
int3
clc
loopne
xor
and
std
popf
sbb
in
dec
repnz
loopne
cmpsb
scas
adc
xchg
dec
popa
out
mov
mov
cmp
adc
adc
cmp
add
aad
loopne
imul
push
pop
movsb
pop
and
push
sbb
cld
inc
add
jae
fsubrp
and
sbb
int3
jns
mov
xor
push
cmc
add
and
sbb
pusha
adc
sbb
push
dec
adc
jp
push
and
mov
fsubrs
int3
rcll
mov
push
nop
push
movsl
pushf
int3
fcompl
push
xchg
insb
clc
hlt
pop
pop
sub
outsl
push
and
and
sbb
mov
repnz
lret
sti
test
in
iret
pop
jmp
ds
pop
jl
inc
mov
pop
mov
sub
roll
lahf
in
fcoms
dec
sbb
mov
cmpsb
aad
cld
push
jecxz
out
xchg
or
cld
jmp
pop
or
mov
dec
xchg
pop
loop
xchg
sbb
sbb
push
push
jno
clc
fwait
xchg
pop
and
std
adc
mov
call
sti
or
dec
bound
lret
sbb
repnz
xchg
xchg
outsb
rolb
lret
and
lds
add
mov
and
popa
lods
loopne
jge
push
cs
cmc
mov
in
test
xchg
dec
rclb
loopne
loope
sahf
out
push
lock
repnz
or
sub
fnsave
lea
jp
mov
fbld
mov
xchg
fstpl
jp
mov
fmuls
inc
rorl
mov
pushf
cmpl
pop
int3
mov
int3
jne
jecxz
push
mov
cltd
cmpsl
nop
pop
jecxz
pop
xchg
xchg
dec
outsb
and
fucom
sti
int3
mov
mov
add
pop
sbb
aam
sbb
or
out
pop
scas
cmp
and
and
push
jl
inc
or
lahf
xchg
fdivl
push
push
out
sti
js
das
mov
push
fcomp
int
mov
cltd
sbb
inc
pop
lds
pop
xchg
std
lcall
and
cmp
cmp
dec
xor
jbe
sahf
loope
jmp
rorb
sbb
rcll
mov
add
insl
enter
and
jne
or
lahf
pushf
lcall
push
and
jge
leave
pop
mov
ret
mov
push
shlb
push
dec
aad
lods
mov
mov
out
xchg
and
mov
clc
xchg
pop
mov
loopne
jne
call
int
arpl
mov
cmp
pop
fsubp
jmp
inc
xchg
lahf
and
dec
inc
and
inc
mov
pop
sbb
cmp
fmull
out
xchg
in
hlt
ficompl
xchg
pushf
fcmovnbe
lcall
xor
hlt
std
cld
sub
lret
jl
mov
pop
mov
sbb
mov
and
and
lods
pushf
frstor
loop
and
int
and
pushl
pop
call
repnz
mov
cmp
push
filds
push
lods
stc
mov
jp
out
sbb
shlb
push
movsb
mov
jne
fsubrl
and
clc
mov
push
call
lds
cltd
fcmovb
push
jns
xchg
or
fmull
and
mov
cltd
dec
test
push
dec
inc
push
mov
hlt
inc
pop
add
xor
sub
lret
mov
sahf
loope
pushf
and
pop
inc
fdivl
xor
push
push
cmp
sub
sarl
pop
push
sub
mov
iret
aad
scas
push
push
nop
fucom
loope
push
popf
mov
lret
loop
ljmp
je
xlat
int3
sbb
or
jg
sub
lahf
dec
rclb
les
insb
ja
xlat
icebp
fwait
testl
hlt
xchg
mov
clc
push
clc
fwait
not
enter
add
std
xchg
insb
inc
mov
aad
mov
cltd
mov
pop
idivb
cmp
scas
fisubs
popf
aad
xlat
lds
outsl
in
push
pop
xlat
pop
aaa
cltd
dec
pusha
or
push
jle
jp
and
cmp
dec
xlat
and
dec
push
xor
xchg
cmpsb
fst
sarb
outsb
mov
pusha
push
xchg
dec
je
sti
ret
and
and
rorb
js
add
iret
int3
int3
pop
loopne
and
lcall
loope
sti
inc
cmpl
adcb
iret
mov
inc
push
sbb
insl
iret
xchg
pop
xor
xchg
jp
mov
repz
shr
adc
adc
icebp
push
je
iret
out
int
sbb
call
lret
iret
adc
mov
ficompl
or
or
adc
adcl
sbb
xor
push
push
test
sbb
sbb
out
sbb
gs
cltd
fdivs
in
inc
pushf
int
xor
push
inc
fs
sbb
sar
movsl
mov
sahf
loopne
gs
mov
and
scas
or
pop
idivb
xchg
rolb
sbb
loop
pop
xchg
dec
pusha
fdivl
cmp
int
mov
lret
cwtl
outsb
cltd
cmp
sbb
mov
pusha
popf
and
mov
cmpsl
adc
mov
mov
pop
int
pop
mov
add
movsb
inc
and
into
push
testl
jns
sarb
and
push
clc
mov
xchg
adc
movsl
xchg
mov
fs
cld
lret
stc
mov
nop
mov
push
adc
fs
cmp
in
and
mov
bound
pop
out
push
in
hlt
lods
mov
pop
pop
pop
push
imul
fucom
outsb
rolb
cmp
xchg
stos
or
xor
jbe
fbstp
mov
pop
mov
andl
mov
nop
xchg
pop
cmpsb
jl
pop
mov
mov
dec
add
popa
mov
jmp
sub
loopne
sbb
or
inc
or
xor
sahf
nop
and
or
fs
mov
and
ffreep
jl
sarl
in
inc
stos
pop
inc
cltd
mov
jl
sbb
shlb
or
dec
jns
dec
lahf
sbb
push
gs
pop
in
adc
dec
fdivrl
repnz
int
lds
movsb
ffreep
and
loop
sub
push
inc
push
push
push
pop
jo
mov
xchg
mov
mulb
xor
insb
enter
jne
xchg
jns
pop
adc
vmulss
sbb
fcmovbe
movsb
lahf
cwtl
pop
adc
xchg
pop
sbb
movsb
mov
and
mov
mov
lods
jns
les
push
xchg
hlt
adc
adc
mull
xchg
lret
xchg
or
pushf
imul
mov
fstl
adc
test
lods
pusha
popf
and
dec
push
popa
mov
xor
outsb
push
jb
fs
andl
lahf
adc
mov
mov
or
inc
fwait
roll
popfw
cltd
cmpb
jns
int
mov
stos
xchg
push
xchg
es
je
dec
mov
lea
cltd
push
pcmpeqb
and
pcmpeqb
lcall
xchg
cmp
dec
lods
add
popa
loopne
pop
sbb
mov
sti
push
in
nop
dec
adc
jae
or
add
das
jbe
adc
mov
cwtl
inc
cld
push
push
sub
sti
dec
pop
and
mov
xchg
inc
xchg
pop
add
mov
mov
or
loopne
jge
out
jp
cmp
mov
test
lret
out
mov
pop
aaa
mov
cmp
or
nop
fcmovnb
int
mov
dec
adc
push
mov
inc
xchg
rol
je
pop
js
sbb
je
or
add
cmpb
mov
jne
div
mov
mov
fsub
xchg
dec
loopne
sbbl
mov
mov
inc
and
in
jmp
in
cmp
sub
cmc
pusha
push
aad
dec
mov
gs
ja
shlb
mov
add
mov
lahf
sub
iret
sbb
sbb
jmp
bound
frstor
ds
pop
fwait
adc
fneni(8087
js
cli
dec
fxch
dec
xchg
mov
notl
push
push
or
movsb
xlat
dec
push
or
rclb
pop
jbe
pop
in
fs
pop
insb
dec
sti
adc
inc
nop
cltd
outsb
loopne
pop
into
out
negl
lcall
cld
adc
push
pop
outsb
sbb
push
dec
push
int3
ljmp
pop
lret
push
andl
push
xchg
fadd
pop
and
ficoml
aad
xchg
ja
sar
mov
inc
std
out
fists
sbb
xchg
xchg
int
cld
shlb
fistl
fidivs
or
sub
mov
inc
jmp
sbb
xor
xchg
out
mov
mov
sbb
adc
xchg
mov
adc
in
sbb
fmul
fstps
pop
mov
aad
push
hlt
fsts
pusha
mov
mov
cmpsb
jne
fdivr
cmp
cltd
inc
lods
xlat
ss
clc
jno
sahf
and
mov
inc
push
fildll
and
sub
or
and
mov
cmp
pusha
clc
icebp
dec
pop
std
ds
mov
sti
fistps
mov
mov
in
int
sbb
movsl
lcall
std
lahf
in
stc
sti
xchg
or
les
mov
adc
and
fwait
cmp
or
pop
add
mov
mov
jp
mov
lcall
pop
xor
and
dec
pushf
hlt
lea
loopne
jecxz
pop
movsl
add
fsubs
mov
cld
ret
fwait
xchg
push
cli
mov
in
mov
lret
stos
es
pop
pushf
cmp
aam
jns
sub
je
and
pop
imul
xor
fisttpll
xor
mov
fadd
movsb
pushf
outsb
es
cmc
imul
dec
mov
inc
fsubl
adc
adc
sbb
nop
xor
movsl
pop
lahf
jmp
inc
mov
stos
dec
das
push
mov
cmp
repz
cmc
mov
fisttpll
xchg
adc
ret
xchg
xchg
xor
xchg
dec
xor
lods
mov
jmp
push
lcall
jmp
mov
push
fnstcw
pop
dec
pop
jg
outsl
into
loope
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
inc
and
rorb
stos
pushf
lea
jmp
pushl
cmc
cmp
jmp
mov
pushf
call
jmp
jmp
push
lock
std
std
lea
xchg
insl
loop
jns
daa
jo
inc
fs
jge
adc
pop
add
xor
sbb
cld
or
add
add
add
loopne
sub
test
mov
ficomps
add
and
in
xchg
push
push
scas
hlt
jne
rcl
stos
add
lret
jb
inc
enter
aad
jmp
pushf
jmp
movl
jmp
pusha
cwtl
not
mov
pop
pushl
movsbw
lea
lea
lea
jbe
pushf
pushl
pusha
movl
pusha
call
mov
pop
aas
mov
not
mov
sbbb
andb
sub
and
push
lea
fyl2x
and
lea
sub
je
shlb
xor
out
gs
sub
inc
dec
or
xchg
stc
popf
push
mov
icebp
lea
movsl
inc
jnp
or
dec
jmp
jno
mov
int
pop
jmp
push
add
je
in
xor
lods
in
jg
jns
lahf
sbb
loope
mov
popf
mov
or
and
mov
add
push
push
push
push
jecxz
inc
xchg
pop
push
sahf
icebp
xor
insb
add
imull
or
imul
std
nop
mov
add
sbb
rcll
or
mov
xor
cmp
sub
xor
rcll
inc
in
dec
adc
pop
pushl
decb
dec
xchg
add
pop
inc
jecxz
mov
xor
cmp
insb
test
cmp
adc
imul
add
test
cli
jmp
iret
bsf
mov
pushf
stc
add
jmp
push
bt
sub
stc
cmp
stc
stc
pushl
popl
cmc
cmp
jmp
pusha
call
fisubl
add
fimull
mov
into
sbb
cmpsb
lods
inc
sub
and
mov
jns
inc
and
pcmpgtb
pop
mov
loop
mov
mov
xor
nop
xor
ja
mov
cmpsl
iret
or
lret
dec
jge
leave
add
xlat
or
dec
dec
addb
sbb
lcall
xchg
jl
mov
add
jl
fwait
sbb
pop
cmp
sub
inc
or
push
sarl
push
fnstcw
lret
and
je
sbb
mov
es
lock
movl
mov
push
pusha
mov
movl
pushl
ret
clc
neg
clc
cmp
sete
mov
lea
call
ds
mov
outsb
mov
pop
jnp
movnti
mov
lret
fwait
je
mov
stos
sarl
mov
adc
pop
lret
cmp
or
leave
pop
adc
cmc
xchg
xlat
loopne
jmp
fmulp
mov
test
out
xor
cmp
pop
pop
pop
sbb
std
ds
popa
xlat
mov
pushf
stos
mov
stos
outsl
or
pushl
xchg
in
repz
sub
gs
adc
into
stos
mov
data16
stos
pop
mov
fwait
xor
push
push
pop
outsb
pop
dec
mov
cs
jg
imul
shlb
icebp
cli
decl
test
sar
ror
shl
shl
mov
jmp
cmp
call
push
clc
test
pushf
or
call
cmpb
pushf
lea
jne
bt
shr
movsbw
mov
pusha
add
push
jmp
push
pusha
rep
pushf
mov
pushf
push
mov
pushl
lea
jmp
cmp
jmp
adc
sbb
scas
xchg
mov
mov
in
sbb
lods
loope
push
mov
insb
out
pop
dec
mov
lret
hlt
mov
sub
icebp
es
pop
psraw
and
push
or
pop
cmp
or
subb
das
je
loopne
into
xchg
mov
jne
or
mov
addr16
mov
test
push
out
xor
aas
add
ror
mov
pop
adc
xor
pop
sbb
sub
lea
repz
dec
sbb
and
notl
fs
fs
fwait
mov
mov
adc
mov
imulb
bnd
ror
and
pop
sbb
adc
mov
mov
outsl
dec
pusha
dec
call
dec
mov
sbb
jne
push
in
jo
fs
mov
mov
in
jns
pop
or
push
aas
mov
add
sub
mov
pushf
pusha
push
movl
pusha
jmp
add
aaa
mov
dec
sub
add
dec
sub
jg
mov
bt
cmc
pushf
test
pushl
lea
je
stc
push
movw
sub
pusha
stc
clc
cmp
push
lea
ja
jmp
pusha
pushf
pushl
popl
mov
pushl
ret
sbbb
pop
dec
inc
fbstp
outsl
or
fbld
sbb
jbe
dec
addr16
jns
mov
hlt
push
leave
push
xchg
incl
dec
cmp
pop
mov
adc
push
lea
cmp
fldenv
and
cld
aaa
cmp
lea
lret
mov
lds
push
push
lock
pop
loopne
mov
popa
inc
xchg
lret
orb
pmuludq
jb
daa
xor
inc
add
iret
inc
pop
loopne
mov
int
inc
pop
adcl
xor
inc
rcrb
mov
pushf
cmp
fidivrs
and
loope
mov
in
movl
loopw
inc
outsl
sub
inc
mov
stos
daa
movsl
xor
rcll
or
and
jb
add
inc
pop
pop
mul
and
xchg
adc
movsl
mov
mov
xchg
arpl
mull
mov
xchg
mov
lods
sbb
mov
mov
data16
cmp
jg
jbe
and
daa
add
xchg
xor
and
daa
xor
inc
add
ret
outsl
pushf
cs
dec
cmp
ljmp
jns
sbb
mov
adc
xchg
cmpl
fstpt
adcl
mov
rorb
in
push
fcmovnu
and
jbe
insl
inc
call
jmp
stos
pushf
pusha
seta
mov
pushl
call
and
iret
int
aas
pop
sub
jmp
xor
inc
push
add
xor
xchg
push
mov
inc
negb
add
inc
jp
push
add
push
xor
stc
jl
test
push
inc
icebp
push
adc
dec
add
inc
add
loop
mov
adc
jg
ja
dec
add
add
push
add
adcb
repz
add
add
add
movl
mov
mov
push
lea
jmp
mov
lret
out
dec
aad
push
and
aas
or
lahf
test
pushf
dec
mov
adc
subl
ret
test
mov
outsb
icebp
cmp
andb
xor
dec
add
sbb
cmp
mov
insb
idivb
mov
stos
pop
lea
ret
bswap
shr
mov
cmp
stc
bt
sub
jmp
cmp
add
add
jl
clc
bt
mov
clc
stc
cmc
test
pusha
call
push
lea
ja
call
pushf
lea
je
pusha
lea
jmp
out
sbb
sub
xor
mov
jb
clc
dec
lret
movsl
push
inc
cli
dec
mov
lods
jno
jl
xchg
or
jecxz
xor
lods
push
fsts
lds
stos
orb
fcmovnbe
add
bswap
push
seto
mov
mov
bswap
not
setne
lea
movb
pushf
mov
movsbl
movzbw
call
jmp
xadd
xor
inc
setle
mov
cmp
shr
mov
rcl
mov
bt
mov
cmc
neg
cmc
pushf
rol
cmp
call
movb
mov
push
pushf
pushf
pushl
ret
lea
jne
stc
call
mov
movsbl
not
pop
pusha
push
pushl
ret
setbe
jmp
bsf
adc
lea
mov
rol
shld
not
shl
add
movsbw
pusha
mov
movb
call
lea
jae
setb
ror
mov
sub
mov
jmp
jmp
lea
je
mov
call
lea
jne
shl
pusha
aad
xor
sbb
btc
mov
sub
pushf
cmc
shr
add
add
ror
pushf
mov
cmp
clc
test
call
lea
jne
shl
mov
js
clc
cmp
cmp
jmp
pushf
pushf
lea
je
clc
push
add
cmc
cmp
stc
cmp
movb
push
push
call
cmp
push
jmp
movb
jmp
std
inc
std
sbb
dec
push
les
sarb
xor
std
add
xchg
xor
cmpsb
hlt
popa
mov
xor
mov
ret
pop
inc
movl
pop
xlat
pop
mov
adc
pop
sub
sub
hlt
das
push
ret
cmp
movsl
xchg
jecxz
popf
push
popa
ja
adcl
and
dec
jne
adc
xor
ljmp
sbb
hlt
add
lock
sub
pop
pop
cli
hlt
add
cli
pop
ss
and
add
aas
in
loop
jg
jb
rorb
das
das
loope
mov
mov
pushl
lea
jmp
call
mov
jmp
rcll
push
pop
pop
lea
in
mov
sahf
test
push
jp
or
push
stos
adc
mov
lock
xor
int
mov
adc
pop
push
in
push
xchg
push
pop
mov
mov
jae
push
add
lock
ss
ja
in
cmp
xor
out
sub
add
dec
addl
add
jb
add
stos
sbb
out
pop
xchg
addr16
sahf
jne,pt
mov
or
lods
jp
xchg
mov
sub
add
subb
sub
mov
mov
mov
int
push
lret
aaa
sbb
std
dec
lods
mov
push
aad
jmp
enter
mov
hlt
in
cld
xor
mov
push
sbb
jns
inc
xor
insb
dec
lock
cmp
fnsave
aad
push
or
or
xchg
pop
xor
mov
xor
bound
sti
pop
sahf
xchg
nop
movl
out
mov
push
out
popa
jmp
pop
ret
into
jae
fwait
add
jnp
jmp
sahf
dec
int
and
scas
sub
pop
arpl
mov
jmp
lahf
inc
jae
push
ss
out
dec
adc
dec
and
hlt
lcall
jecxz
xchg
test
adc
and
stos
lods
stos
addr16
call
lds
sbb
adc
shl
jle
ret
std
add
or
xchg
into
mov
cmpl
cltd
sub
cmc
loop
jbe
repnz
mov
sarb
xlat
xchg
pop
out
cmp
cmpsb
mov
cmp
fsts
jp
stos
dec
adc
mov
xchg
xchg
lea
jecxz
aad
and
sub
out
jge
pop
pop
es
bound
dec
insl
pop
inc
xorl
push
mov
and
lock
popf
sbb
jge
stos
mov
pushf
or
test
pop
add
xchg
and
repz
inc
inc
data16
dec
or
js
popf
cmp
adc
push
insl
in
int
adc
or
lahf
push
data16
mov
in
mov
mov
insb
pop
cmp
insb
xor
imul
das
nop
jg
mov
fs
jne
scas
jne
cmp
cs
dec
sub
jecxz
roll
xor
and
mov
push
ljmp
nop
sub
sti
jne
cld
xor
dec
repz
jns
cs
jg
lods
cs
clc
lret
mov
fiaddl
jg
sbb
insl
stos
mov
mov
sti
push
neg
outsb
lahf
jg
jle
sub
push
push
lea
jne
bsr
sub
push
pusha
mov
pushf
pushf
lea
jmp
push
lea
je
mov
sub
test
shld
daa
mov
lea
mov
shl
not
test
shr
stc
mov
push
cmp
or
pushf
pushf
lea
je
shl
add
push
pushf
sub
rcr
bt
shr
rcl
stc
xadd
btr
mov
sar
sub
add
inc
add
lea
shl
bsf
xor
mov
cmc
cmp
shr
cmc
clc
cmc
cmp
pusha
jmp
push
mov
call
jmp
mov
jmp
movl
push
pushf
jmp
cmp
jmp
test
mov
cmp
cmp
lahf
mov
lea
lahf
bswap
mov
call
inc
or
mov
sahf
out
hlt
and
or
mov
xor
jns
dec
mov
aas
xchg
pop
outsl
sub
xor
xor
iret
or
sub
mov
addr16
andb
mov
es
mov
loopne
adcb
adc
loope
pop
inc
or
lock
outsl
lock
add
lea
scas
push
add
or
jg
xchg
je
movzbl
movl
lea
not
pop
movzwl
pushf
jmp
jmp
cmpb
jmp
sub
neg
bts
sbb
mov
pushf
cmpb
call
push
call
dec
xor
mov
dec
inc
cmpsb
nop
inc
sarl
rcll
sbb
push
pusha
xchg
cmpsb
repnz
mov
adc
dec
into
mov
in
xor
mov
das
aad
mov
lods
jge
aad
pop
hlt
rcll
jne
or
icebp
enter
lods
cmpsb
testl
cmp
dec
xor
idiv
shl
or
pop
lahf
xchg
enter
adc
xchg
jnp
outsl
push
pop
outsl
lock
daa
adc
pop
cli
stos
in
push
dec
push
fptan
jp
fdivrl
jns
jg
js
or
mov
add
cmc
push
bsr
jmp
movl
pushl
pushf
pushl
lea
jmp
mov
push
pushf
pushl
ret
mov
imul
mov
push
out
jne
mov
push
or
pop
out
mov
dec
xchg
push
sub
lret
mov
lahf
jmp
cmc
and
pop
movsl
jecxz
mov
lds
testl
in
gs
jne
fwait
and
and
sbb
movsb
xchg
or
and
fistps
rcrl
dec
mov
pop
mov
outsb
cmpsb
mov
push
in
cmc
mov
mov
dec
call
cmc
arpl
dec
movsl
out
lods
dec
pop
call
pop
dec
mov
cs
pushf
movsb
lahf
dec
inc
test
dec
pop
push
push
out
mov
or
daa
dec
out
testb
sbb
adc
adc
test
inc
mov
add
adc
inc
and
inc
dec
push
dec
daa
and
pop
mov
rcrb
iret
dec
gs
sbb
movsl
pushw
add
xlat
dec
pop
jne
push
mov
mov
sbb
sbb
or
bound
mov
xchg
pop
bswap
add
dec
pop
daa
or
scas
lret
pop
or
femms
sbb
test
inc
into
dec
or
mov
or
xorb
insb
xchg
gs
dec
xlat
adc
adc
pop
cmc
mov
dec
push
rclb
dec
ret
push
in
and
pop
mov
mov
or
mov
pop
pusha
pop
xchg
pop
cli
int
xchg
lret
data16
or
push
jmp
movsb
je
cmp
aas
cs
or
inc
xchg
in
out
decb
lods
or
out
or
xchg
sub
dec
in
jmp
std
mov
fcompl
lods
dec
pop
cld
adc
adcb
mulb
jmp
outsb
add
mov
bound
pop
jmp
in
dec
sbb
fs
mov
and
dec
into
jb
lret
js
push
mov
imul
bswap
data16
movsb
and
lret
dec
fbld
mov
inc
xor
jp
daa
ja
test
jecxz
mov
mov
and
or
jbe
cld
sub
cmp
sub
nop
sub
aas
add
int3
inc
inc
imul
mov
sbb
out
inc
inc
push
cmp
idiv
cmp
xor
jmp
or
in
and
negl
dec
inc
pop
cld
xor
add
test
add
aad
sbbb
in
add
loop
bound
or
push
lock
arpl
jne
pop
mov
out
jmp
in
pop
inc
sbb
sbb
and
push
mov
push
xchg
xor
enter
adc
test
add
push
cmp
xchg
jbe
shll
pop
aad
pop
lret
ret
or
movsb
icebp
in
mov
fdivl
rorb
mov
push
popf
outsb
repz
movsl
das
xchg
or
shlb
cmpsb
popf
jmp
or
sub
cmp
mov
mov
sbb
and
push
jge
cs
jmp
pop
mov
popl
or
sbb
adc
bound
push
push
push
mov
cld
or
out
mov
or
or
insl
add
lods
pop
mov
mov
or
pop
add
aam
dec
ds
into
sbb
insb
bound
dec
jmp
out
data16
jnp
mov
in
and
and
cmc
popa
lahf
push
fwait
in
dec
pop
popa
lds
pop
push
xchg
aaa
mov
cltd
jno
inc
lcall
jb
cmp
mov
and
pop
idiv
adc
fcmovnbe
in
sbb
and
psadbw
inc
or
gs
mov
bound
add
xchg
or
int
xor
push
bound
inc
outsb
or
into
mov
movsl
inc
aad
push
sub
push
inc
es
dec
pop
std
xor
and
push
sbb
dec
and
or
and
pop
loop
and
pusha
test
push
vmovaps
and
push
inc
jge
or
mov
dec
aam
out
sbb
mov
rcr
std
jbe
js
aaa
push
cmpsb
sub
out
popf
sti
fisttpll
sbb
fsubr
push
mov
arpl
sub
jle
shll
lahf
push
lahf
jno
adc
fnsave
sub
in
mov
testb
or
push
mov
mov
mov
cli
mov
pop
pop
push
sub
xor
jb
add
jp
push
xor
adc
push
mov
mov
sbb
dec
cmp
lods
mov
and
adc
mov
subb
jge
jmp
aam
shlb
xor
add
out
add
jp
insl
sbb
insl
pop
dec
fsubrp
pop
mov
and
push
pop
pusha
insl
mov
fldcw
sbb
insb
push
lods
adc
sbb
int
jge
repnz
sbb
pop
sbb
mov
pop
sbb
pop
mov
shlb
out
xor
pop
pop
sbb
insb
vsqrtpd
ret
mov
in
sahf
cmp
iret
aam
mov
sbb
cltd
scas
mov
inc
pushf
lods
xor
jne
imul
xchg
mov
mov
cltd
imul
cld
je
jmp
mov
fbld
jmp
xlat
inc
rcrb
sbb
gs
ljmp
pop
or
shl
stos
and
bound
arpl
mov
jmp
xchg
jae
push
mov
ss
adc
adc
add
and
xchg
out
pop
into
adc
fs
loop
out
repnz
das
mov
mov
jmp
sahf
jmp
cmpsl
or
ja
bound
test
imul
adcl
es
inc
sar
loope
mov
adcb
adc
int3
idivb
sub
stos
fimull
int
sahf
out
loope
jmp
mov
outsb
hlt
pmaddwd
int3
mov
iret
mov
loop
jne
xor
sub
add
jbe
cs
and
and
jne
xchg
mov
out
sub
or
fmull
add
adc
mov
inc
popl
aam
mov
daa
out
pop
xor
sbb
dec
gs
je
sbb
negb
movsb
gs
adc
in
test
push
and
sbb
push
int3
mov
bound
dec
xor
outsb
mov
ljmp
xchg
das
push
arpl
jbe
mov
dec
cmc
xor
popf
sbb
bound
out
loopne
sub
int3
adc
sti
xchg
ret
and
data16
sbb
adc
adc
pmulhw
inc
push
test
xchg
pop
jne
int
sarl
lds
mov
ljmp
test
adc
gs
int3
rclb
fs
or
add
outsl
int
mov
and
pop
mov
push
in
push
rolb
fildl
rclb
mov
popa
inc
mov
filds
xchg
xor
fs
push
pop
or
hlt
clc
pop
mov
fisubs
or
adc
jo
sbb
ss
jmp
in
dec
int3
cltd
xchg
lret
sub
mov
adc
mov
adc
movsl
jecxz
add
dec
dec
push
xchg
adc
or
addr16
imul
and
out
imul
std
sbb
fs
in
push
and
xor
imul
mov
push
incb
or
fs
sbb
pop
or
push
lret
int3
and
sbb
add
push
or
mov
pop
pop
sub
lock
sub
jg
dec
int3
mov
cmp
roll
jecxz
jg
cmc
sbb
add
and
xchg
test
out
in
inc
mov
mov
xor
lods
or
or
inc
or
push
pop
inc
lea
sub
or
or
arpl
ds
pop
pusha
cmc
and
or
arpl
pop
xchg
dec
cs
movsb
popf
mov
sub
xor
cli
jne
movsb
mov
pop
stc
xchg
les
mov
enter
nop
dec
cld
movsl
adc
sbb
adc
lods
mov
out
js
and
inc
xor
mov
pop
aad
pop
push
fdiv
xchg
test
and
stc
mov
frstor
xchg
bound
adc
or
mov
or
sub
inc
sbb
lea
ss
pop
in
into
cmc
lret
mov
cmp
xor
add
jmp
inc
pop
push
add
imul
repnz
cmc
jecxz
cmp
ds
pop
jno
xchg
mov
movsb
hlt
jp
sti
repnz
inc
mov
dec
sbb
push
pop
push
inc
mov
push
sbb
in
stos
jne
jo
push
jg
adc
adc
out
insl
lcall
in
jecxz
imul
mov
dec
frstpm(287
add
jbe
sbb
or
sbb
dec
add
pusha
mov
push
lds
int3
mov
mov
push
fmull
lods
or
sbb
mov
aam
jmp
das
mov
and
jle
inc
mov
add
xchg
mov
cmpsb
jne
lds
pop
cmovnp
or
outsb
inc
out
sti
insb
lcall
dec
mov
int3
test
pop
jmp
stc
leave
xor
mov
jge
loop
and
data16
inc
adc
or
movl
or
sbb
mov
sub
data16
aaa
jecxz
int
mov
xchg
jns
lods
movsb
sbb
andl
dec
loopne
inc
jnp
ljmp
push
lcall
jae
and
ja
call
inc
jne
sbb
push
cmpsb
cld
or
push
push
incb
sbb
loopne
cmp
scas
jbe
push
add
push
mov
aas
push
dec
adc
pop
mov
or
xadd
xchg
imulb
dec
int3
enter
data16
hlt
adc
popf
and
aas
movsl
rcrl
inc
xchg
daa
dec
pop
jno
push
push
mov
ret
and
fadds
jnp
imul
jbe
inc
cmpsb
inc
mov
and
das
jle
pop
fs
shlb
lret
xor
mov
cmpsb
movsl
not
and
pop
xor
fiaddl
xor
or
cld
and
es
in
inc
pushf
mov
sti
fsub
out
jno
xchg
jle
es
pop
xchg
cltd
loope
push
mov
pop
rorb
mov
enter
in
xchg
and
aad
adc
in
ret
lahf
push
sbb
adc
and
lret
es
in
and
es
int
aad
mov
movsb
and
inc
push
and
fisubrl
fisubl
cmp
xchg
and
push
popf
into
cld
or
xchg
lds
xchg
les
mov
mov
add
push
add
dec
pusha
bound
cmpsb
xchg
add
xchg
add
sar
sbb
rcrb
in
push
push
adc
popf
test
adc
pop
test
mov
pop
add
and
xor
jecxz
or
add
mov
bound
mov
movsb
jbe
push
or
sbb
and
and
rolb
in
lcall
loop
test
xchg
xchg
or
xchg
popf
adc
mov
adc
pop
and
cld
and
mov
ds
and
adc
sbb
adc
xchg
and
insl
syscall
cmpsb
sahf
nop
jmp
xchg
test
xchg
xchg
push
pop
sbb
push
add
and
es
push
xchg
push
pop
ret
adc
pop
sahf
mov
lahf
add
and
mov
adc
or
popa
jne
xchg
test
into
xchg
mov
xchg
movsl
mov
lock
xor
gs
pushf
and
xchg
inc
rorb
xchg
addb
out
push
pop
or
add
pop
movsb
outsb
inc
dec
sbb
sahf
sti
inc
es
mov
sahf
pop
adc
cli
jae
movsl
lret
bound
sub
mov
arpl
lea
lcall
je
or
inc
cli
leave
mov
fwait
pop
pop
push
dec
cmpsl
sbb
fistpll
lds
or
stc
sbb
mov
sbb
pop
adc
pushf
into
mov
lock
mov
ljmp
fs
data16
dec
and
inc
mov
xor
push
icebp
and
or
adc
jmp
push
mov
sub
add
push
stos
fdivrl
add
sub
mov
or
mov
adc
inc
jne
imul
sbb
sbb
xchg
aam
mov
add
cmpsl
movsl
lods
push
das
daa
arpl
or
sub
pop
outsb
in
cmpsb
adc
dec
mov
adc
cmc
sub
push
cmpsb
mov
stos
pop
test
pop
in
push
je
pop
mov
mov
pop
inc
iret
jmp
push
div
ljmp
push
jmp
mov
inc
rcrl
cmovbe
lock
jecxz
stc
fsubp
mov
pop
orps
sbbl
cs
movsb
mov
lock
ficoml
xchg
or
mov
mov
lret
loopne
mov
mov
and
mov
and
fst
pop
and
adc
scas
or
xor
push
les
xchg
inc
sub
ficompl
xchg
inc
fldl
xchg
sbbl
sub
lret
or
jae
int3
fdivrs
out
out
dec
sbb
or
ljmp
or
cmc
sbb
xchg
punpckhbw
stos
inc
sub
adc
sbb
subl
int3
pop
jmp
in
add
jge
xchg
fisubrl
cmp
mov
cmc
repz
jno
and
sbb
test
int3
call
stc
in
and
and
cld
xchg
call
cmc
arpl
fisubl
inc
xor
cld
roll
mov
pop
outsl
sub
out
or
test
cmp
je
cmpsb
fcompl
into
or
lock
and
mov
mov
sbb
mov
inc
mov
cmc
mov
data16
jmp
or
lret
add
or
movsb
or
movsl
repnz
scas
in
and
mov
mov
add
push
mov
mov
outsb
addr16
shll
dec
or
sub
and
dec
add
inc
int
mov
rorb
repz
adc
int3
sub
addr16
out
jae
das
xor
sub
add
nop
pushl
add
aas
into
xor
in
push
lahf
xchg
mov
push
add
push
lret
jmp
jbe
es
jbe
scas
cmp
nop
es
test
pop
push
mov
sbb
std
inc
stos
add
pop
data16
mov
xchg
mov
xchg
sbb
call
leave
fwait
sbb
divl
adc
movsb
inc
jo
mov
inc
xchg
imul
movsl
enter
les
sbb
pusha
dec
inc
loop
ficompl
fbld
testl
and
push
inc
dec
or
mov
movsl
test
jb
and
std
mov
cmp
gs
xchg
pop
mov
pop
sub
pop
lds
out
xor
mov
add
inc
bswap
fxam
adc
movsl
pop
out
adc
mov
popf
fbld
lds
popa
shlb
jmp
fwait
cli
data16
inc
ss
iret
push
shlb
in
aad
lret
jmp
pop
in
or
mov
out
xchg
aam
sbb
sbb
cmp
fldt
push
push
fiadds
dec
cwtl
pop
push
xor
lret
or
adc
lds
xchg
and
push
add
shlb
inc
jo
pop
dec
adc
std
xchg
call
std
es
sub
cmc
jmp
mov
mov
inc
dec
aam
pop
in
fsubp
cmc
mov
lahf
push
scas
sahf
out
mov
aad
fs
jmp
pusha
decl
cmp
stos
add
cmpl
cmp
and
sub
andl
loope
mov
lahf
mov
sub
push
ret
das
mov
mov
lahf
fs
inc
mov
daa
mov
add
sbb
dec
jnp
enter
and
or
mov
call
cltd
fsubl
or
push
and
dec
xchg
jnp
xchg
popa
push
or
lahf
push
and
inc
nopl
or
pop
ds
outsl
sub
mov
lret
out
inc
mov
jae
push
pop
incb
cld
xorl
shr
lds
shll
mov
sbb
in
je
bound
add
mov
mov
popf
out
testb
bound
add
loope
xchg
pop
adc
shl
pop
pop
dec
xchg
or
mov
sbbl
sbb
xchg
test
gs
xor
cmp
int3
mov
iret
push
mov
in
adc
jo
cld
movsl
or
mov
xor
xor
adc
jecxz
or
and
lahf
dec
pop
sbb
xchg
cmp
xchg
and
int
push
int3
or
add
mulb
jecxz
in
adc
or
push
xor
daa
xchg
test
mov
sub
push
mov
ljmp
xchg
popf
xchg
mov
xlat
or
jno
pop
mov
aad
or
loop
pop
dec
mov
dec
sahf
pop
push
or
iret
cmp
dec
in
dec
out
jmp
or
pop
rcr
movsb
je
mov
xor
adc
ds
movsb
cmc
xchg
stos
cmp
sbb
mov
lds
mov
mov
je
mov
dec
add
aam
or
fbld
cmpsl
sbb
add
out
mov
mov
xchg
jecxz
pop
test
or
dec
xchg
sbb
cmpsl
push
shlb
mov
inc
testb
fisubs
xchg
pop
arpl
mov
push
daa
jecxz
in
shl
sub
negb
mov
xchg
jl
dec
push
ljmp
imul
int3
or
into
jp
sti
cmc
std
mov
xchg
jne
loopne
sahf
lret
pushf
adc
mov
enter
es
sahf
and
inc
push
mov
mov
xor
les
jg
ret
xchg
repnz
in
mov
mov
addr16
daa
jbe
sbb
mov
or
mov
pop
daa
clc
ss
shlb
dec
and
bound
movsl
movsb
cmp
pop
xchg
fcom
sub
out
mov
or
and
pop
int
ss
sub
and
movsb
mov
into
xchg
sub
movsb
and
push
cmc
xchg
pop
loope
icebp
add
invd
add
xchg
jle
out
push
mov
in
push
push
mov
jmp
leave
aaa
push
pop
sbb
es
or
scas
cmp
jmp
out
push
fistpl
fstl
in
pop
mov
sub
mov
cmp
xchg
push
inc
push
insb
cmpb
cwtl
cmp
sbb
outsb
lret
mov
loop
add
and
es
push
xor
inc
movsb
jg
repz
jecxz
add
sbb
mov
mov
repnz
xchg
xor
mov
lds
fimull
dec
into
out
cwtl
push
cmp
int
mov
add
sbb
and
push
out
testb
sub
sub
pop
pop
mov
iret
mov
or
adc
push
in
pop
cmpsb
decb
push
mov
subb
es
xchg
aad
pop
xor
mov
icebp
loop
data16
adc
add
and
aaa
jnp
dec
pop
inc
fcom
push
lahf
repz
movsl
xchg
int3
or
imul
adcl
faddl
movsb
mov
mov
and
fcoml
or
push
sbb
inc
jb
movsb
xor
push
add
mov
into
and
push
adcb
pop
and
popf
jnp
and
or
push
jmp
pushf
or
inc
mov
pusha
aad
mov
sbbl
xchg
leave
mov
inc
loope
mov
xchg
and
das
hlt
jg
add
aam
test
dec
cmpsl
push
or
jmp
pop
sbb
insb
ljmp
and
loop
repnz
dec
push
dec
dec
mulb
push
jecxz
subb
cwtl
mov
out
push
jmp
sbb
mov
sbb
jae
jecxz
adc
cmp
mov
cmp
add
stos
testl
je
sti
cmp
pop
push
pop
inc
sahf
insb
lahf
dec
mov
push
data16
int3
mov
lods
shr
mov
pop
daa
inc
sbb
bswap
shll
sbb
sub
leave
lea
dec
jae
jp
dec
pop
push
mov
adc
push
or
push
lock
adc
xchg
stos
or
daa
enter
popa
dec
push
outsl
out
mov
and
popl
push
inc
jno
lods
mov
enter
dec
cld
jae
dec
jmpw
arpl
sub
jne
push
cmpsb
or
and
imul
hlt
lock
loop
mov
inc
int
in
pushf
dec
shll
loop
adc
and
test
and
cmp
xchg
cmpsb
pop
int3
or
inc
es
or
aaa
and
sub
xchg
mov
mov
push
les
mov
push
xor
mov
fs
cmpsb
cmc
push
and
in
sub
dec
dec
xchg
aad
sbb
jne
xchg
cmp
sub
fwait
scas
test
mov
and
sbb
rcrb
pop
jne
cltd
pop
or
jb
inc
or
in
rcr
fs
xchg
add
mov
or
aas
lods
push
movsl
imul
in
std
sti
int
inc
gs
jne
mov
lcall
or
lret
or
inc
insl
pop
xor
pop
inc
das
aam
dec
mov
call
sbbb
in
adcb
es
fs
int3
out
add
pop
xor
test
lock
aam
add
mov
adc
cmp
inc
cld
push
movsl
out
mov
in
xor
bound
adc
sub
scas
xchg
cli
and
stos
xchg
or
test
pusha
imulb
mov
mov
mov
push
mov
xlat
lds
shrd
out
stos
aam
out
dec
sub
cs
aaa
mov
std
or
push
push
or
lods
push
mov
outsb
and
in
and
les
into
leave
pop
and
pop
mov
mov
jg
inc
mov
es
mov
std
mov
nop
inc
sub
push
dec
or
ucomiss
popf
pop
in
out
mov
and
add
cs
jne
inc
push
andl
xor
imulb
jns
mov
mov
into
popf
and
mov
cmp
fildl
icebp
test
xchg
sub
jns
enter
mov
and
imul
jmp
lods
outsb
push
cmp
cmc
lahf
inc
pop
push
jle
xlat
mov
lea
sahf
or
mov
add
xchg
pushf
ljmp
ret
or
and
mov
xchg
sti
mov
roll
pop
in
xchg
les
icebp
lcall
xor
addr16
or
sub
inc
mov
cmp
mov
push
leave
sub
pop
cmc
test
mov
mov
sbb
in
inc
dec
and
jb
cld
repz
push
in
mov
popa
xchg
je
sbbl
imul
clc
cmp
lahf
cs
pop
push
andl
inc
std
testb
shll
xor
jp
push
and
fisttpll
call
jg
pop
dec
mov
lea
mov
add
fcompl
cmc
es
push
mov
outsb
nop
cmp
inc
aam
add
lahf
and
cmpb
in
sbb
fnsave
push
in
test
test
int3
add
mov
and
dec
or
cmpsb
out
cmp
jno
cli
xor
cmc
sub
pop
fdiv
out
mov
out
cmp
scas
fists
or
xchg
icebp
jns
adc
xchg
xor
test
push
and
xchg
addl
into
cld
data16
mov
add
into
xchg
add
outsb
fs
push
cmc
jbe
xlat
mov
pop
push
mov
mov
jge
jbe
sbb
loopne
sbb
add
and
adc
push
out
scas
dec
rcrb
into
dec
insl
mov
sti
call
cmpsb
or
push
mov
testl
mov
push
push
push
inc
dec
push
hlt
inc
scas
and
xchg
or
outsl
hlt
leave
in
sbb
cmpsb
xchg
and
jne
scas
jmp
xor
cmpsb
movsl
lret
and
and
mov
mov
repnz
in
mov
and
xchg
shrl
jmp
outsl
sub
enter
dec
and
pop
call
dec
lods
jnp
test
lahf
data16
je
mov
inc
daa
sub
xchg
and
push
rcr
decl
jno
loop
push
pop
sbb
in
stc
jl
push
push
daa
sub
loop
or
push
sahf
sbbb
sbb
insb
mov
shlb
xorb
or
and
mov
daa
sub
push
cmpsb
add
adcl
cmc
testl
movb
les
pop
lds
xor
add
ret
inc
mov
cmp
xor
int3
xchg
sub
pop
sbb
inc
push
aad
pop
popf
mov
paddq
add
sub
xor
test
leave
cld
inc
or
outsl
jno
fildl
into
pop
les
fbstp
pop
cmpsl
out
mov
fs
out
cmpsl
iret
cmp
inc
int
and
push
xchg
insb
and
in
lret
out
cmovnp
leave
negb
sarb
out
mov
jbe
cmp
ret
mov
cmp
pusha
pop
and
es
test
sti
push
mov
leave
add
mov
je
cli
fistpl
push
inc
or
mov
mov
adc
jbe
ljmp
in
pop
es
xchg
sbb
mov
mov
movaps
or
sub
mov
pop
inc
sub
int3
push
add
pop
sbb
loopne
sub
jbe
adc
pop
pop
jle
jg
icebp
jno
xlat
add
sahf
push
lcall
aam
hlt
imulb
ret
mov
cld
pop
jmp
xchg
inc
cmp
sbb
shlb
outsb
pop
sbb
push
out
ja
cltd
mov
es
loope
mov
jle
jb
inc
aam
ljmp
test
rcr
cltd
or
loope
pop
cmp
je
and
add
das
shll
cmp
or
adc
fwait
lret
lret
sub
cltd
shr
fistl
jl
mov
dec
mov
es
filds
add
or
ret
xchg
adc
rcll
jmp
ljmp
or
iret
std
aas
mov
xor
sahf
and
fildll
mov
mov
mov
repz
or
outsl
or
ljmp
clc
adcb
sbb
dec
mov
imul
jno
dec
out
lds
jb
sub
cs
sub
xor
xor
les
aas
mov
xor
pop
and
bound
cmpsb
out
pop
sub
popl
les
jmp
inc
mov
add
lods
adc
sub
mov
cmc
add
shrd
cmpsb
inc
ljmp
pop
push
fbld
pop
mov
xchg
xchg
aaa
jmp
sub
mov
scas
bound
cmp
push
lahf
lea
xor
cld
dec
out
imul
das
scas
test
dec
daa
sbb
mov
notb
into
out
and
in
pushf
mov
iret
inc
sub
movsb
mov
roll
sub
sub
mov
jne
test
mov
dec
loop
xchg
insb
insl
sub
add
loop
pusha
pop
repnz
stos
movsb
int3
jnp,pn
lcall
xor
jnp
sbb
int3
fidivl
enter
mov
es
cmp
sbb
push
sbb
jne
imul
lds
in
push
movsb
into
js
pusha
in
sub
mov
push
sbb
or
in
inc
jg
out
lds
ja
test
dec
in
int3
or
dec
push
in
xchg
push
mov
jp
aad
mov
cmc
mov
pusha
xchg
cs
mov
nop
and
pop
icebp
sbb
in
repz
cmpsl
adc
dec
stos
xor
movsb
sti
addl
push
push
bound
test
notb
or
sub
mov
dec
mov
int
xchg
stos
fsubrl
mov
es
cli
xchg
std
mov
jp
mov
ret
jne
xchg
mov
arpl
cmc
and
outsb
or
xlat
loope
add
js
dec
mov
aam
in
or
mov
add
mov
lcall
pushf
pop
adc
jp
movb
push
sub
icebp
repz
out
cmc
popf
out
adc
int3
sub
ret
mov
frstor
cmp
pop
sub
push
jmp
filds
scas
int3
mov
imul
mov
mov
sbb
and
mov
cld
lea
or
push
repz
insl
int3
sub
jp
dec
sbb
and
add
mov
pop
cmpsb
xlat
or
lods
out
ret
push
sbb
std
push
pop
xor
pop
add
int3
call
cmp
or
popaw
pop
mov
jbe
int
fcoml
cmp
push
adc
out
xor
cmp
push
inc
xchg
insb
cltd
rcr
mov
leave
cwtl
fsubrp
stc
outsl
mov
pusha
ss
repnz
cmp
jmp
xlat
addl
pop
jbe
lods
jne
sbb
mov
push
stos
adc
jmp
pop
xchg
gs
jp
adc
cld
mov
and
fldcw
xor
int
jae
je
push
repnz
jle
orb
subb
mov
fistpll
or
dec
mov
inc
test
xchg
pop
addl
or
jno
dec
cmp
hlt
mov
ljmp
lahf
sub
movsl
or
in
mov
mov
subb
andb
or
outsl
push
outsb
jmp
addb
push
gs
sbb
and
xor
cmp
addb
outsl
mov
imul
sbb
call
jmp
les
lock
jno
std
popa
movsl
stc
adc
test
or
dec
test
cltd
or
stc
sahf
mov
movsl
rclb
loopne
dec
in
dec
jl
repz
or
loope,pn
dec
into
clc
int3
dec
out
ficomps
pand
fimuls
movsb
cmp
movl
cmpsb
arpl
insb
mov
ljmp
scas
fdivrl
jbe
xchg
cmc
dec
pop
jg
test
and
in
outsb
or
in
adc
mov
shll
testl
orl
mov
xchg
mov
loopne
loope
js
dec
sub
cld
mov
loop
divb
mov
add
mov
lds
cmpsb
jl
mov
cli
or
lock
inc
popf
cli
out
mov
loopne
repz
mov
ss
push
loop
mov
inc
cmpsl
fisubl
stc
leave
fistps
nop
addr16
sbb
mov
sub
sub
shr
sub
clc
in
xchg
outsb
and
sbb
cs
test
decb
dec
or
out
or
sub
sahf
or
xor
in
insb
pop
mov
adc
aad
iret
add
and
dec
lds
xchg
fs
jle
sub
fstl
sbb
cmpb
or
push
add
xlat
movsb
lods
sub
in
testb
mov
aad
les
testb
xchg
in
scas
fdivrl
jmp
push
adc
and
add
dec
jns,pn
movsb
push
adc
or
mov
cmc
mov
jge
jo
aam
and
or
ds
jmp
into
fs
adcb
pop
lcall
xlat
jmp
inc
dec
into
sbb
je
out
sub
xchg
pop
mov
push
ljmp
gs
test
add
bnd
in
sbb
xchg
mov
hlt
mov
xlat
imul
comiss
insl
sub
pop
jae
sub
and
insb
lds
mov
les
mov
mov
inc
cli
nop
cmc
pop
sub
jmp
in
or
mov
ljmp
jns
mov
push
xchg
cmc
cli
dec
repnz
cli
mov
sbb
mov
xchg
dec
lds
dec
mov
sub
stc
mov
cmp
jo
mov
aam
shlb
cltd
or
lcall
cmp
push
aas
pop
xlat
frstor
cmp
fdivs
ret
in
xchg
pop
sti
or
andb
pop
jge
lea
ficomps
out
fcompl
and
mov
outsb
xor
les
and
add
sti
adc
or
or
cs
out
out
insl
cli
jmp
and
jmp
in
cmp
or
sub
pusha
aas
cmp
dec
mov
add
es
scas
xor
fs
adc
imul
loope
loopne
sub
clc
xor
adc
cmp
dec
sbb
popa
xchg
mov
fs
add
and
inc
iret
xor
lret
mov
xor
cmp
dec
and
repz
and
pop
push
dec
std
adc
das
popa
push
dec
cmp
xor
push
add
push
xlat
sbb
outsb
cmp
inc
bound
setne
inc
add
enter
mov
sbb
je
inc
lds
inc
pop
sti
cmpb
sbb
outsb
add
push
mov
adc
mov
dec
xchg
add
jae
adc
test
mov
into
and
adc
out
jbe
es
out
jl
repnz
dec
pop
adc
loope
xchg
pop
cwtl
dec
lds
pop
insl
loope
dec
push
fisubs
addr16
outsb
sbb
cmc
inc
cmpsb
mov
aas
sahf
sbb
xchg
or
cmpl
addr16
xchg
push
and
sbb
cmp
sub
or
fwait
adc
inc
mov
and
mov
push
xchg
in
mov
stos
je
mov
movsl
insl
negl
mov
dec
fsubl
pop
or
pop
jbe
lods
mov
subl
xchg
inc
mov
cmpsl
or
xor
or
stos
inc
and
jmp
les
adcl
push
mov
dec
sarb
outsb
enter
int
fnstsw
or
cmpsb
into
in
add
and
inc
pop
subl
push
hlt
shlb
bound
pop
insl
sbb
cmpsl
inc
mov
xchg
mov
or
cmc
inc
dec
mov
jg
lahf
pop
push
sbb
inc
data16
mov
push
ljmp
xchg
imul
call
imul
movntps
loopne
or
push
gs
cmc
je
mov
inc
sbb
jmp
cmp
push
inc
cld
push
fsubrp
rcrl
lock
or
xchg
xchg
shl
bound
fnsave
pop
lea
pop
sti
adc
jae
cmp
cmc
test
dec
loop
mov
enter
add
adc
ret
dec
pop
pop
mov
mov
incb
popa
test
or
pop
sarl
adc
add
cmp
xlat
or
pop
mov
dec
jne
lock
or
scas
push
sbb
sbb
adcb
and
xchg
int3
xor
adc
pop
xchg
pusha
and
in
out
movsb
push
or
fsub
lret
movsb
adc
pop
xchg
pop
add
pop
out
pop
pop
sbb
mov
and
lret
jmp
fcmovu
inc
or
adc
mov
push
fcmovbe
insl
and
pop
imul
add
and
pop
push
into
insb
push
lcall
and
xchg
pop
add
or
xchg
sbb
jnp
add
push
and
sbb
xchg
mov
mov
xchg
lea
imul
out
mov
rclb
sahf
and
mov
xchg
mov
or
addr16
in
es
add
std
out
and
sbb
cs
mov
pop
push
roll
es
popf
jge
test
bnd
or
xchg
add
sar
fwait
xchg
lea
sbb
movsb
lret
add
and
mov
fisubs
fcoms
cmpsb
jl
add
mov
sbb
movsl
and
add
mov
mov
xchg
xchg
push
pop
mov
and
rorb
xchg
mov
push
es
pop
std
into
pop
rcll
mov
pop
push
lea
push
mov
push
mov
shlb
xchg
movsb
adcb
xchg
popf
fisubs
add
and
sbb
adc
shrl
adc
pop
adc
xchg
sbb
adc
or
or
es
insl
adc
fwait
decb
add
jns
sti
adc
ret
xchg
xchg
push
or
or
xchg
mov
and
mov
es
add
add
adc
stc
pop
cmpsb
xchg
or
pushf
xchg
jl
andb
xchg
push
rcll
cltd
mov
pop
and
repz
mov
in
mov
mov
dec
lds
into
mov
aaa
xor
mov
mov
inc
int3
inc
mov
jo
leave
mov
adc
dec
xorb
dec
add
daa
jbe
pop
jmp
movb
xchg
jecxz
addb
xor
sub
cmpsb
jnp
mov
jae
mov
mov
sub
or
fbld
mov
adc
mov
xor
pop
or
inc
pop
jb
enter
inc
int3
movsb
je
mov
movsl
paddq
add
jmp
inc
or
call
adc
out
insl
loopne
or
sti
leave
or
inc
xchg
loope
and
sbb
dec
pop
jl
bound
xchg
adc
jnp
mov
xchg
das
mov
dec
pop
sbb
xor
and
or
or
jbe
inc
outsl
or
mov
dec
dec
ds
cwtl
in
mov
in
and
and
mov
xchg
out
push
scas
cmpsb
inc
jno
jbe
pop
fcompl
mov
das
pop
push
sbb
sbb
xchg
mov
and
cmc
negb
add
out
in
sbb
xchg
cli
aas
adc
and
push
test
and
ret
push
inc
pusha
pop
inc
sbb
and
push
or
inc
and
pop
add
jmp
sub
orl
outsb
jno
jecxz
push
pushf
inc
aad
test
xchg
sbb
and
dec
or
push
jmp
je
loope
adc
push
mov
out
int3
ljmp
pop
push
sbb
and
xchg
mov
or
push
in
sbb
lods
sub
call
fucom
jl
xchg
bound
out
pop
xchg
icebp
or
mov
inc
mov
out
jb
cmpsb
fsubs
pushf
test
dec
jmp
lds
add
ds
or
mov
push
mov
pop
iret
fisttps
pminub
and
lea
ljmp
scas
jne
mov
cmp
rcrb
xchg
jmp
in
push
sbb
insl
jge
pop
dec
and
in
jecxz
jle
cmovl
cmpsb
xchg
fcompl
mov
or
inc
jmp
jmp
js
mov
pusha
popf
add
repz
stos
jo
jbe
push
bound
repnz
xor
pop
ss
pop
sti
adc
dec
mov
sub
dec
and
cli
cmp
xor
sbbb
mov
imul
adc
ret
mov
mov
sub
les
int3
daa
movsl
ret
xor
inc
lcall
ss
jnp
jle
jb
sbb
les
xchg
pop
jmp
pop
or
jns
push
mov
shll
cmp
pop
or
jmp
jb
movsb
adc
xor
ljmp
pop
mov
inc
mov
out
add
fisttpll
setle
xchg
or
jne
data16
jmp
xchg
xchg
shl
sbb
dec
mulb
pop
divl
pop
xor
jmp
inc
bound
repz
lock
and
fstpt
xchg
fsubs
push
add
sbb
orb
sub
push
dec
and
repz
add
push
mov
scas
push
pop
test
cld
scas
imul
cmc
lret
add
mov
or
xchg
mov
stos
stos
xchg
setne
das
lcall
and
push
int3
push
add
and
pop
adc
loop
mov
bswap
cmp
outsb
ljmp
bound
xor
mov
mov
jno
jmp
xchg
jecxz
in
in
cld
lcall
insb
dec
fmull
addb
mov
adc
pop
push
fdivrs
mov
sti
mov
frstor
cwtl
jns
movsb
adc
pop
jle
or
cmpsl
sub
mov
cmp
pop
or
test
push
pop
subl
push
push
mov
jno
and
cmp
movsb
or
scas
pop
enter
or
dec
xor
mov
dec
not
adc
push
sbb
xor
mov
fmull
fiaddl
and
pop
ret
or
popf
sarl
mov
je
mov
rcrb
pop
shrb
pushf
adc
jne
or
ret
mov
sbb
lcall
mov
aam
mov
or
jb
cmc
imulb
pop
mov
test
jl
mov
dec
add
sarl
and
pop
xor
and
inc
mov
inc
lret
sub
mov
mov
out
sbb
jnp
push
into
fnsave
data16
int
mov
mov
xchg
xor
pop
sbb
cmpsb
add
cmpsb
inc
adc
out
es
add
mov
jne
lret
or
daa
je
sub
out
lds
adc
out
xchg
int3
xlat
xchg
cmp
stos
pop
push
scas
outsl
pop
jb
and
mov
mov
jb
pop
imul
lret
and
aam
aam
in
mov
addl
sahf
adc
xor
or
xor
cmpsl
fldenv
pop
xlat
sbb
mov
or
pop
fdivp
xor
inc
in
jne
xor
cmp
push
push
sbb
iret
out
xor
ret
int
repnz
lods
or
or
or
push
push
pusha
mov
out
sbb
out
mov
insb
sub
or
mov
lds
mov
xchg
les
inc
lods
enter
inc
mov
sbb
std
jecxz
dec
leave
cmp
adc
xchg
jmp
shrb
mov
sbb
in
outsl
push
cmp
sbb
negb
cld
jmp
add
sbb
pop
into
in
je
and
cmp
sub
and
rorl
adc
push
push
outsb
lret
in
xor
sahf
fs
sub
cmp
add
jne
sub
lret
loop
repnz
dec
das
mov
lds
scas
mov
and
push
inc
dec
xchg
clc
lret
dec
cs
sbb
push
cmp
jmp
mov
inc
jbe
out
test
mulb
or
aaa
and
rcll
movsl
ja
lock
add
mov
jo
int
mov
or
test
frstor
push
mov
xchg
fs
cmp
xor
and
aaa
jmp
mov
mov
jl
and
mov
and
mov
in
xor
inc
ljmp
ds
push
ror
cmp
in
inc
adc
xor
scas
movdqu
lods
lods
gs
xchg
popf
pop
outsl
inc
adc
lahf
ss
test
xchg
in
roll
sbb
jno
je
into
or
jno
mov
pop
loopne
and
int
sub
pop
jnp
sahf
lret
mov
js
icebp
pop
adcb
mov
popa
bound
dec
add
adc
inc
sbb
xlat
ss
imul
arpl
enter
cmpsl
mov
imul
add
xchg
and
and
mov
ret
mov
vpunpckhdq
lods
sub
add
sub
xor
movsl
adc
ja
push
or
jge
imul
sbb
das
in
into
mov
add
lret
pop
insl
xchg
push
xor
inc
mov
add
lret
es
mov
cmp
mov
and
mov
cmp
rep
das
sbb
sbb
inc
movsb
aaa
xchg
sub
lods
repz
out
movsb
and
arpl
cmpsl
mov
sub
jo
inc
enter
jo
fiadds
jmp
xchg
xchg
sub
jb
mov
dec
rcrl
push
or
les
popa
cld
enter
xor
sbb
fs
and
xor
enter
sbb
mov
fimuls
dec
in
dec
das
aam
or
inc
xchg
pop
sbb
mov
pop
and
pop
aad
jae
lcall
stos
sub
popf
add
or
lret
mov
push
ds
add
inc
jo
push
cltd
rcrl
mov
mov
scas
inc
stos
aad
xor
fcmovnb
push
outsl
stos
mov
and
pop
xchg
out
insb
push
js
push
adc
jne
push
xor
mov
cwtl
hlt
je
mov
add
add
ljmp
or
mov
fwait
mov
fbstp
incl
pop
sbb
jecxz
fisttpll
push
cmp
sbbl
mov
sbb
lret
or
xchg
addb
aaa
rorl
add
test
cmpsb
inc
xor
lret
xchg
int
and
js
mov
jle
or
or
fldl
enter
in
lock
mov
push
mov
sbb
add
jmp
iret
dec
xchg
adc
lods
fldcw
and
fstpt
jnp
and
ret
rcr
popf
movsb
or
sbb
cmp
hlt
or
movb
dec
and
pop
addr16
fdivrs
jo
sbb
clc
in
sub
xchg
in
mov
and
fdivl
out
movsb
push
xchg
sub
add
mov
int3
sti
sbb
mov
daa
cmp
push
mov
inc
push
pop
inc
and
dec
jmp
mov
mov
pop
mov
sub
add
sub
or
lods
add
sbb
repz
out
insl
cmp
orb
fidivs
adc
push
fstpl
bound
aam
pop
and
push
shll
pop
jge
cmp
or
sbb
inc
or
scas
bswap
stos
out
stos
and
cmc
bound
cmp
jmp
std
cld
out
add
sbb
inc
dec
adc
jecxz
lods
rcrl
xchg
test
orb
ds
add
cmpsb
dec
cli
cmpsb
sub
cmpsb
jmp
mov
jo
cmp
xchg
and
mov
and
adc
jnp
and
nop
cmovg
and
xchg
add
xlat
and
std
and
and
cmpsb
inc
sbb
sub
mov
fwait
pop
and
fst
es
mov
pop
test
movsb
push
pushw
push
stos
dec
and
xchg
pusha
movsb
negb
roll
sahf
and
add
sbb
adc
pop
es
sbb
sbb
and
add
adc
addr16
pop
xchg
xchg
ret
cld
pop
and
mov
xchg
mov
cmpsb
or
push
cmpsb
movsb
std
push
mov
sub
cli
sahf
lret
push
adc
or
and
and
sbb
and
stc
lret
lahf
or
es
adc
and
sti
mov
and
jb
cmpsb
push
mov
cltd
adc
pushf
int3
nop
sub
adc
sbb
aad
mov
in
sbb
frstor
lods
rclb
mov
adc
xchg
push
xchg
rclb
in
in
ficomps
pushf
add
pop
xchg
movsb
pop
mov
add
adc
scas
adc
push
sbbb
fwait
lcall
pop
and
lahf
jns
sti
mov
pop
icebp
std
adc
xchg
sbb
and
mov
and
adc
mov
bound
loopne
adc
and
pop
aad
fiadds
loopne
cmc
adc
sahf
fisubs
sbb
pop
ret
sbb
sahf
and
jle
adc
popf
mov
sbb
pop
ficompl
adc
test
fisttpll
roll
xchg
lahf
adc
mov
sti
xor
int3
or
push
in
stos
pop
dec
mov
nop
cmp
repz
sbb
sbb
pop
je
and
cmp
push
mov
insb
aad
push
call
mov
out
in
inc
pop
or
or
jae
inc
jmp
push
fiadds
push
test
cmpsl
pop
jp
out
or
jne
addr16
mov
in
cmpsb
sti
or
dec
pop
in
adc
xchg
out
pop
ljmp
aas
mov
pop
jne
jnp
mov
insb
pop
mov
lods
mov
stos
inc
or
rcll
xor
mov
add
mov
mov
int
or
sahf
cmc
enter
sub
cmc
xlat
inc
loope
push
adc
add
dec
and
iret
mov
cmp
fimull
add
scas
and
movsb
sti
int
cmp
das
imulb
and
xchg
push
mov
daa
jne
lret
in
enter
mov
dec
mov
dec
dec
or
les
int
or
out
mov
push
push
dec
fstpl
aam
xchg
mov
or
or
xor
pop
inc
mov
faddl
jg
les
adc
pop
push
aas
add
push
xchg
and
jmp
cltd
xchg
jl
pusha
push
stc
jno
test
decl
mov
jb
dec
and
and
aad
int
sbb
xor
int
push
xor
cmp
sbb
in
dec
or
mov
vsubsd
iret
rorb
jno
jmp
pop
test
out
fistpl
stos
les
addb
xor
int3
adc
adc
pop
movsl
clc
scas
pop
daa
lret
dec
jmp
out
xchg
and
mov
leave
fdivr
std
push
incb
mov
rcrb
mov
push
sarl
ret
sub
inc
inc
xchg
int
xor
xchg
out
leave
jnp
jbe
mov
mov
inc
xor
sub
mov
dec
fcmovb
popf
mov
sbb
sbb
sbb
mov
pop
mov
lret
outsl
mov
inc
mov
data16
insl
aam
jecxz
push
lods
dec
sbb
ficompl
push
jne
cs
cltd
call
mov
int
loop
inc
dec
out
aad
and
insl
leave
mov
lea
in
push
dec
lret
in
nop
xchg
int3
cmc
ja
inc
or
mov
xchg
fucomi
std
cmp
and
and
add
mov
stos
xor
test
cmpsb
rcr
fbld
movsl
popa
lret
enter
mov
xor
mov
cld
into
les
pop
std
cmp
loopne
cmp
lahf
push
or
sti
cld
add
mov
fadds
data16
dec
aaa
std
lock
les
push
psubsw
inc
jl
or
leave
push
das
push
stos
pop
xchg
shrl
add
call
int
test
jae
movsl
nop
lods
or
pop
xchg
ss
mov
add
jecxz
cmp
inc
sti
or
repz
xchg
pop
or
lea
repnz
lcall
xchg
mov
dec
aam
sbb
jb
xor
das
pop
sbbl
sub
jae
jnp
mov
lret
mov
xchg
out
push
loope
scas
out
sar
and
mov
test
fdivl
mov
mov
jbe
mov
loopne
dec
dec
es
shlb
mov
jmp
ss
inc
sahf
xchg
or
adc
in
pop
lcall
fwait
and
lret
push
sbb
cmp
push
mov
imul
std
test
ja
jbe
xchg
call
lret
or
mov
out
mov
movsb
mov
adc
and
xchg
inc
lahf
xchg
or
cmc
fsts
pusha
adc
xchg
outsb
push
mull
cmp
pusha
shl
push
sahf
sbb
int3
lret
adc
cmp
insl
or
repz
pop
leave
xchg
and
iret
stc
adc
push
in
xchg
pop
or
jp
test
inc
jbe
out
fnsave
mov
scas
sbb
push
xchg
fs
jp
jno
xchg
test
outsb
mov
out
cmp
das
sbb
sbb
popa
dec
lret
sbb
xchg
push
and
cld
inc
xchg
sahf
movsl
add
inc
cmp
mov
into
mov
jmp
xor
into
enter
faddl
fnstenv
xlat
in
call
push
cmp
loope
add
jbe
enter
js
repnz
repz
jmp
repnz
mov
test
jns
adc
inc
mov
fs
loopne
xchg
push
or
cmpsb
inc
xor
mov
lock
mov
push
sub
or
xor
ljmp
push
lcall
jle
nop
inc
mov
std
pop
rcll
adc
jae
xchg
or
and
mov
pop
push
jl
sbb
fildl
pop
cmp
mov
mov
jmp
lea
outsb
ja
outsl
mov
adc
jmp
xor
mov
lret
lahf
push
sbb
xor
inc
and
xor
insl
xchg
ja
cmpsb
dec
jmp
cmc
pop
es
lds
sbb
push
jl
in
push
jmp
xchg
leave
push
jo
mov
pop
es
mov
push
idiv
popa
cmc
scas
mov
dec
adc
fsubrl
push
jp
or
fisttps
adc
inc
inc
loope
out
inc
and
xchg
add
push
leave
mov
mov
fsts
rorl
add
mov
movsl
loope
inc
sub
jecxz
cmpsl
out
sub
ss
sub
jb
int
outsl
in
stc
insl
add
mulb
loope
lods
inc
mov
pushf
int3
sub
insb
popf
addr16
push
mov
inc
push
jp
add
out
mov
fstpl
add
jmp
es
or
add
pop
and
xchg
mov
scas
sbb
je
mov
xlat
in
xor
push
jp
mov
loopne
pop
cmp
add
out
cli
mov
mov
mov
mov
in
inc
loop
lret
pop
xor
push
fcomps
les
gs
lcall
xchg
mov
adc
xor
aas
xchg
push
aaa
das
pop
cmc
xchg
scas
stos
shrb
mov
test
mov
pop
mov
pop
sbbb
inc
gs
or
adc
xchg
cmp
mov
sbb
cmpsb
lea
cmc
stc
shrl
sub
cltd
mov
pop
in
jae
aam
and
jmp
and
add
mov
fidivrs
es
push
add
orb
sub
xchg
les
cmp
pop
and
jl
loope
hlt
sub
xor
pop
iret
xchg
adc
mov
pop
mov
dec
or
into
add
mov
xchg
push
add
xor
jae
add
sbb
sbb
xor
mov
mov
pop
std
jecxz
xchg
mov
pop
lret
cwtl
push
imul
sub
inc
cmp
sub
xchg
or
fists
sahf
push
sub
cmpsb
sbb
loopne
inc
add
in
imul
ss
xchg
test
jo
gs
adc
mov
push
cmp
mov
out
inc
inc
xor
xchg
jne
mov
repnz
pop
and
cli
rcrb
out
outsb
fcoms
sub
out
add
jb
xchg
mov
gs
aam
add
mov
fsubs
test
and
shlb
pop
adc
inc
cli
fdivrp
rcr
mov
inc
add
scas
je
mov
cmc
mov
lret
imul
adcl
fcmovnbe
xchg
outsb
jnp
stos
pop
cmp
jmp
loop
into
sbb
sub
push
movsl
jno
es
add
call
mov
mov
leave
or
push
movsl
push
movsb
out
jle
push
or
lcall
inc
int3
insl
dec
in
inc
mov
pop
xchg
mov
out
out
stos
dec
mov
inc
into
pop
into
test
mov
mov
jecxz
mov
xorb
into
sahf
push
sub
cmc
xor
in
sub
sbb
xchg
in
movsb
sahf
add
pop
in
hlt
or
mov
lds
in
shll
sbb
jmp
mov
fwait
shlb
ljmp
mov
adc
xchg
lods
out
in
insb
push
jmp
mov
mov
loope
dec
clc
loop
and
imul
jae
enter
mov
adc
pop
adc
xchg
or
lds
or
pop
sbb
pop
pop
pop
sbb
dec
imul
pop
inc
fsubrl
jbe
cmc
dec
aam
mov
lock
sbb
arpl
mov
sbb
xchg
lds
dec
push
or
push
or
pop
pop
ja
adcb
xchg
pop
and
add
lahf
xchg
sbb
mov
pop
mov
or
jge
sbb
sahf
or
movsl
mov
sbb
in
aas
and
nop
mov
out
or
mov
movsb
adcb
movsb
and
sub
cld
mov
out
cwtl
in
xchg
push
or
dec
or
sahf
inc
push
xchg
pop
arpl
hlt
adc
and
and
mov
clc
mov
xchg
push
cmc
jbe
incb
cmp
xchg
in
dec
out
lret
ja
shrl
pushf
pop
rorl
popa
mov
pop
repz
enter
sbb
daa
pop
leave
pop
enter
ficompl
je
push
mov
sbb
lcall
syscall
lret
jecxz
shr
adc
push
es
rorb
leave
inc
or
je
mov
push
imulb
pop
and
jl
inc
inc
arpl
mov
mov
mov
lds
xor
or
sub
js
jmp
cmp
push
jge,pn
or
lea
cld
dec
push
mov
sbbb
pop
mov
adc
pop
decl
jne
mov
mov
mov
add
pushf
push
adc
add
loopne
push
out
ret
mov
dec
cmp
pop
push
in
xchg
inc
push
sbb
jg
testl
and
sbb
and
dec
cmp
call
dec
divl
xor
sbb
jmp
or
cmpsb
out
cltd
fwait
mov
add
sub
test
sub
mov
and
cmp
and
or
jmp
ret
mov
jns
adc
mov
outsl
mov
cmpsb
icebp
and
and
ja
repnz
cmpsb
aam
sbb
sbb
lods
loopne
lds
dec
out
dec
in
pop
dec
pop
push
dec
push
xchg
jbe
jle
inc
push
or
xor
and
jo
mov
pop
and
test
inc
fsubr
and
xchg
cmp
push
insl
mov
pop
dec
add
jnp
roll
aam
xor
jl
cld
xchg
arpl
xor
aad
in
into
cmp
fcoml
sbb
jns
pop
jno
dec
fbstp
sahf
push
push
xchg
cmp
cmp
or
outsl
bnd
jle
lret
cltd
xlat
mov
sti
push
out
aam
cmp
shll
fwait
mov
cmp
cmp
pop
adc
and
popl
sbb
or
push
adc
cwtl
out
pop
or
pop
aam
dec
idivb
movsb
daa
hlt
pop
adcb
add
loope
or
inc
es
dec
jbe
push
add
adc
push
aas
cmc
in
lret
fcmovnu
or
xor
inc
push
and
push
out
mov
movsl
fsubl
sbb
push
xor
out
xor
pop
imul
sub
pushf
mov
inc
xchg
loopne
sbbb
sbb
mov
jl
jp
add
incl
push
jecxz
inc
push
add
sahf
fsubs
ljmp
xchg
leave
cld
inc
das
add
cmp
mov
les
mov
fcmovbe
out
mov
inc
jno
ss
xor
lock
add
jmp
loop
mov
jns
cmc
scas
movsl
jmp
adc
mov
or
sub
imul
or
mov
sbb
push
adc
ret
call
adc
mov
out
repz
mov
inc
das
hlt
pushf
xor
test
adc
jge
jbe
push
add
std
sub
es
knotw
pop
out
xor
data16
in
cmp
jne
pop
test
push
mov
jae
jns
adc
adcl
sbb
and
push
mov
xor
cli
xchg
mov
loopne
pop
ror
xlat
pop
mov
pop
dec
sbbl
in
stos
mov
jmp
or
mov
lcall
dec
into
xor
negb
dec
testb
mov
add
mul
sub
pop
inc
inc
xchg
stos
out
dec
xchg
dec
sub
lock
out
shll
or
pop
pop
xor
inc
push
sub
and
cmp
cmpsl
pop
inc
lock
sbb
xchg
and
fnsave
cmc
or
add
inc
mov
lea
lds
push
jp
mov
lret
jg
ss
dec
sub
jbe
or
jne
xchg
mov
daa
mov
and
popa
add
jne
popf
movsl
pop
gs
or
aaa
ljmp
enter
jecxz
les
dec
mov
test
cwtl
pop
in
out
adc
jl
or
xor
jae
adc
icebp
xor
jecxz
out
xchg
dec
in
adc
and
sahf
sti
push
aas
lea
xchg
lods
xchg
out
mov
add
mov
out
pop
adc
out
movsl
ljmp
mov
inc
and
xchg
xor
pop
cwtl
push
push
jno
lcall
iret
out
imul
sbb
lock
pop
fwait
xchg
inc
daa
sbb
nop
mov
fnsave
popf
scas
dec
or
mov
nop
insb
add
out
lock
push
jecxz
pop
pop
cmpb
jecxz
or
cs
nop
xor
or
aad
sbb
and
sub
cld
fistl
pop
je
mov
pop
into
daa
pop
push
loopne
mov
cmpsb
addr16
and
loop
cli
mov
mov
xchg
hlt
pop
adc
das
incl
jns
mov
sahf
dec
outsl
pop
das
sbb
stos
and
stos
movaps
out
lods
es
adc
icebp
jmp
or
sbb
adc
xlat
xlat
pop
roll
and
loope
xlat
sub
xor
loope
mov
adc
adc
cmovl
fwait
lods
or
pop
cmpsl
fwait
sbb
enter
xor
and
pop
and
adc
sahf
sub
cmp
sbb
sub
xor
and
cmpsb
sbb
out
out
movsl
ja
push
mov
pusha
sub
xor
cmp
cmp
mov
imul
int3
popa
pop
inc
and
jns
jg
out
xchg
or
inc
xorb
aaa
movsl
mov
mov
xchg
or
adc
hlt
ss
pop
out
cmp
xor
shll
or
negb
mov
mov
cmpsb
cmpsb
sbb
adc
test
lods
ja
cmp
pop
orl
lcall
pushf
or
clc
inc
ss
popf
cmc
imul
pop
iret
loopne
divb
and
dec
dec
jl
inc
sbb
cmp
jne
faddl
cltd
inc
mov
jbe
xchg
dec
add
push
add
ja
sbb
jmp
lcall
mov
lods
scas
cli
sub
mov
xor
push
test
push
jl
out
test
je
push
xor
ret
leave
inc
sbb
pop
ja
in
add
fwait
adc
into
sbb
xchg
repz
aad
push
or
cmp
popa
or
mov
nop
jmpw
mov
mov
adc
xchg
enter
iret
pmaxub
add
sti
out
mov
xchg
out
jmp
mov
mov
mov
jmp
aam
ss
repnz
movsb
jbe
jns
ljmp
inc
mov
out
or
imul
push
in
mov
or
neg
out
sbb
xchg
fisubrl
xchg
and
sbb
mov
daa
stc
rorl
cmpsl
decb
ljmp
iret
adc
and
std
fsubrl
sub
test
in
lret
outsl
sahf
hlt
into
add
bound
into
in
jae
movsb
sbb
push
ds
outsl
imul
cmpsb
fsub
inc
insl
jae
jne
in
pop
dec
adc
xchg
enter
xchg
jl
sub
fistps
lds
rcrl
clc
fisttpl
test
lahf
mov
les
xchg
xchg
pushf
xor
or
imul
push
inc
mov
pop
jo
cmp
jnp
scas
sahf
lret
int3
pushf
gs
es
mov
adc
mov
out
icebp
lcall
loope
loope
jmp
xchg
into
int3
int
or
fidivs
cmp
test
popf
inc
add
or
lods
pushf
cmc
mov
es
xchg
pop
pop
movsb
mov
sbb
adc
sub
xchg
xor
sub
add
sahf
jmp
decb
and
scas
pushf
xchg
ljmp
or
out
mov
cmc
lret
inc
test
in
mov
inc
ss
or
push
mov
cwtl
push
popa
sub
pop
gs
adc
dec
and
or
pushl
mov
rcrl
scas
push
pop
inc
repnz
and
xlat
jge
aaa
mov
out
sbb
pop
mov
loop
xlat
cmpsb
inc
testb
cmp
pop
in
fwait
aam
jmp
dec
mov
mov
jg
push
sbb
sbbb
sbb
das
dec
and
xor
push
call
adc
pushf
lods
addl
xchg
jbe
xchg
aam
add
mov
sbb
xchg
push
or
mov
repz
pop
int3
in
icebp
lods
and
or
gs
fcompl
int3
inc
popf
popa
lea
and
imulb
xchg
pop
out
push
out
push
fwait
inc
pop
in
lods
or
dec
mov
mov
xor
cli
int3
mov
xchg
jbe
scas
mov
mov
shll
and
cld
sbb
in
stos
into
mov
fs
xor
clc
adc
or
fadds
push
test
push
test
sub
jae
inc
cld
stos
lret
cli
xor
cld
add
pop
mov
or
enter
jns
loope
lea
push
cmp
sub
mov
pop
xchg
adcb
pushf
mov
inc
test
xchg
sbb
mov
lcall
cmp
mov
pop
add
or
xor
cmp
ja
int3
lock
aam
out
in
or
add
dec
sar
push
out
rcll
and
jns
ret
repnz
xchg
cmpsl
jmp
pop
nop
xchg
or
jle
sub
cmpsb
inc
data16
scas
sub
stc
pop
jl
ret
mov
loopne
ljmp
push
mov
pop
outsl
jp
jl
fdivs
aad
inc
loop
lcall
orb
sbb
loopne
clc
sbb
jae
pop
sbb
ret
out
movsb
inc
push
push
lods
xchg
or
sbb
jle
scas
push
int3
movsl
pop
push
lcall
sub
outsl
lret
push
incl
mov
fcoms
lahf
rclw
dec
loopne
mov
push
sti
xchg
popf
mov
xchg
insb
fidivrl
inc
sbb
push
das
vmwrite
pop
sbb
jnp
cmp
add
aam
addb
adc
popf
rolb
xchg
xorb
sbb
enter
pop
mov
fcompl
cld
int
ljmp
inc
pop
shll
sbb
inc
sahf
ret
push
lds
push
outsl
sarl
ret
cltd
pop
xor
pop
decb
mov
iret
sub
shr
xchg
sbb
das
and
dec
or
rcll
enter
dec
cld
nop
decb
jnp
fisubs
add
sbb
sub
mov
es
call
or
jo
or
insb
std
cmp
das
jle
xchg
mov
pop
imul
enter
cld
out
inc
push
push
insl
pop
pusha
outsb
pop
popa
cltd
xchg
xchg
and
out
cld
jmp
punpckhbw
dec
push
push
popa
int
pop
orb
sbb
or
std
add
dec
lret
gs
scas
sub
insb
mov
mov
pop
nopl
pop
mov
mov
das
or
inc
imulb
lods
jmp
out
enter
not
mov
mov
ret
aad
mov
add
push
les
push
inc
sbb
and
dec
inc
dec
mov
pop
push
out
orb
adc
xchg
fs
xchg
push
fwait
cmp
xchg
inc
or
and
clc
testb
stos
mov
pop
mov
dec
inc
enter
sbb
pop
or
shll
imul
cmp
in
aas
shr
sub
mov
sbb
lock
jle
loope
pop
fists
cmc
neg
in
nop
pop
push
adc
push
sbbl
roll
outsb
jg
test
out
sbb
mov
sbb
push
movsl
pop
pushf
fisttpl
jae
rcr
out
push
dec
cwtl
icebp
scas
daa
addr16
shll
push
xchg
and
push
hlt
mov
call
negb
mov
sbb
aam
shlb
scas
pop
jmp
xor
xor
push
dec
push
pop
rorb
sbb
jp
movsb
mov
or
call
sbb
jmp
ret
lahf
mov
mov
into
xchg
pop
fwait
test
dec
iret
mov
cmovb
fsub
mov
pop
jnp
call
jae
lcall
or
icebp
or
stos
adc
or
jmp
imul
lret
xchg
mov
outsl
mov
sub
xchg
jo
cld
sub
mov
inc
add
fldt
inc
hlt
mov
rolb
mov
pop
rcrl
incl
xor
test
rorl
mov
cmpsb
testb
add
repnz
movb
sbb
or
lret
insb
rcll
sahf
xchg
into
scas
lret
fdecstp
shll
cmp
pushf
and
mov
cmp
addr16
xchg
fcompl
popf
adc
cmpsb
fnstcw
cmpsb
inc
cld
xchg
in
out
incb
push
or
mov
out
ljmp
jno
or
das
adc
ljmp
or
mov
ja
arpl
out
sbb
orl
lcall
jbe
mov
into
cmp
hlt
fwait
stos
je
jecxz
fwait
cmp
mov
inc
fmull
mov
std
sbb
and
loop
sbb
adc
fbld
repz
sub
clc
mov
jl
xchg
jmp
out
mov
sbb
addb
jmp
cmc
divb
in
loop
leave
add
inc
or
popf
mov
mov
movsl
out
lds
in
cs
add
cmc
add
lcall
cmp
lods
jge
or
cwtl
in
inc
in
cmp
sar
add
stc
test
scas
dec
xchg
jb
repnz
pop
mov
inc
push
cmc
mov
sti
mov
bound
mov
dec
arpl
outsb
jnp
faddl
adc
jmp
aas
lcall
adc
xor
push
or
frstor
cli
jg
ficoms
xchg
xchg
insl
xor
test
lds
mov
sub
into
stos
sbb
aam
mov
jne
daa
sub
ljmp
lret
dec
mov
push
pop
push
scas
inc
or
cmc
or
mov
xchg
lods
or
orl
and
lea
dec
fistpl
push
je
push
xchg
in
or
xor
leave
stos
xchg
and
out
inc
xchg
rcrb
bound
aam
xor
pushw
pop
lret
or
xchg
sbb
std
jnp
fildl
ds
and
adc
dec
pushf
ret
je
data16
mov
xchg
xchg
stc
addr16
mov
test
pop
inc
push
jp
out
mov
in
stc
mov
out
jmp
imul
xchg
in
in
ljmp
rorb
or
test
dec
imul
and
out
jb
add
mov
pop
stc
and
and
cmp
and
lea
outsb
out
lea
push
mov
inc
jmp
test
cmpsb
popf
pushf
dec
mov
out
mov
shrb
sbb
ret
cmp
push
out
int
dec
dec
outsb
and
roll
fs
es
cmp
or
dec
mov
insb
loopne
pop
sbb
mov
dec
jecxz
jl
test
dec
add
add
cld
add
mov
cmc
dec
mov
aaa
js
out
mov
insb
sbbb
inc
movsb
xor
sti
push
mov
test
pop
cmp
repnz
mov
or
out
test
repz
mov
jmp
fstps
dec
cli
lret
insb
jno
sub
pop
addl
lcall
cmp
mov
xorl
rcr
mov
ljmp
shrb
mov
ljmp
mov
pop
ret
lret
fdivl
lcall
fisttpl
and
mov
and
mov
pushf
sarb
sub
fdivrl
aad
pop
in
mov
xchg
ljmp
xor
bound
xchg
mov
sarb
out
ja
jo
cmp
xor
lret
in
xor
andl
mov
jbe
rdtsc
inc
int
mov
or
mov
mov
add
jae
mov
inc
inc
push
fsubl
sbb
arpl
stos
jns
cmpsb
int
lods
les
test
mov
xor
cmc
lret
jge
mov
cmp
cmp
in
sbb
cwtl
out
stos
jg
add
stc
sub
sub
lods
inc
cmp
add
cmc
mov
mov
out
cmc
inc
pop
fcmovnb
lcall
jmp
loop
lock
jo
out
loope
xchg
add
dec
mov
or
adc
and
cmp
fcoml
jnp
call
mov
push
fdivl
jne
jns
push
and
imul
push
je
ja
mov
lcall
into
mov
add
xchg
inc
dec
mov
pop
movsb
jl
sub
and
jmp
xchg
pop
sbb
in
stos
pusha
lcall
sub
fmull
sbb
jle
or
mov
movsb
lock
xchg
clc
cs
sub
cwtl
mov
cmp
jmp
pop
push
pop
adc
ret
adc
cmpsb
mov
push
insl
into
dec
test
xchg
add
xacquire
and
inc
push
aas
pop
pop
mov
sbb
jmp
adc
sbb
pop
rorb
sbb
sbb
into
and
and
and
out
sar
or
or
dec
xor
sbb
pop
dec
movsb
sub
dec
hlt
dec
adc
cltd
jmp
add
jno
inc
shlb
in
xchg
add
out
lret
sub
pop
dec
jp
xor
push
lds
inc
inc
pop
popf
mov
lods
cmpsb
mov
jae
jns
mov
enter
fimull
mov
fwait
push
adc
jno
jbe
mov
sub
xor
in
into
xorb
psubsw
and
jns
lahf
pop
pusha
lea
repz
movsb
jmp
lods
leave
test
fisttpl
test
xor
jns
dec
jnp
or
je
xor
or
push
jmp
cmpsb
jmp
enter
xchg
xor
mov
pushf
jo
mov
and
mov
sub
dec
adc
xchg
fstl
out
sub
ficomps
push
and
in
stos
mov
sbb
cmpsl
test
jmp
add
mov
xchg
mov
outsb
mov
in
arpl
psubsb
adc
cmc
xchg
sbb
jbe
mov
in
mov
out
sub
or
lods
xlat
adc
xchg
adc
test
xchg
lods
adc
xchg
push
xor
xor
sbb
shll
jae
sbb
scas
jbe
or
out
lcall
sbb
inc
aaa
pop
fistps
cmc
lock
jmp
pushf
inc
outsl
das
in
xchg
mov
sbb
paddsw
cmpsb
fbld
call
dec
sbb
mov
test
cmc
jp
jns
xchg
add
inc
test
adc
mov
mov
xor
sub
inc
lret
scas
xchg
jmp
inc
scas
xchg
dec
mov
pop
mov
jns
xchg
pushf
add
cmp
sahf
jnp
inc
push
dec
adc
pop
push
pop
lock
mov
inc
in
fisubrs
dec
repz
test
push
sbb
out
push
or
adc
pop
xor
xor
inc
add
xchg
jb
pop
stc
int3
sbb
ret
loopne
xchg
arpl
icebp
test
inc
jno
mov
pop
sar
add
or
pop
int
inc
outsb
inc
cmc
out
xchg
shld
daa
sub
sbb
jmp
add
mov
pop
mov
mov
rorb
lret
xchg
pop
push
xchg
pop
es
push
das
jl
cmp
or
cld
cmp
in
lahf
pop
mov
xchg
insb
je
cmpsl
jmp
or
lds
dec
lds
shl
or
pop
and
pop
xor
jl
aad
inc
xchg
ror
dec
mov
push
dec
adc
inc
xor
pusha
and
push
test
cli
push
insb
push
ja
mov
int
cmp
in
lds
mov
mov
xchg
or
push
stos
lret
lret
popf
sahf
sbb
scas
mov
cmpb
and
popf
jl
xor
mov
dec
andl
popa
and
lret
xor
sbb
in
push
pop
icebp
stos
xchg
sub
or
leave
sbb
dec
pop
es
push
imul
sbb
add
jmp
xor
es
fiadds
cmpsl
es
addr16
test
or
pop
and
fcomps
into
cli
push
adc
out
mov
push
stos
cmpl
imul
jecxz
sbb
sbb
mov
pushf
xchg
add
es
push
and
fcoml
mov
xchg
push
and
es
pop
ja
pop
push
lock
hlt
enter
cmpsb
adc
inc
push
je
mov
mov
and
mov
popf
fcoml
pop
test
test
std
sbb
xchg
add
fwait
nop
add
adc
es
movsb
xchg
dec
in
adc
aad
popa
repnz
pop
jle
xchg
and
xchg
test
call
es
mov
add
ja
fwait
inc
pushf
sahf
cld
xchg
fwait
jle
iret
repnz
xchg
inc
sbb
sti
mov
and
in
or
cltd
cmp
add
subl
adc
and
pop
jl
mov
add
and
xchg
rclb
xchg
fldenv
jp
in
cli
sahf
xchg
dec
push
mov
or
jle
pusha
mov
xchg
fwait
rclb
jns
bound
popf
xchg
adc
adc
and
ficomps
es
push
sti
cmpsb
xchg
jne
adcb
jl
sbb
dec
sbb
sbb
shll
in
add
and
test
or
and
adc
xchg
icebp
and
or
es
repnz
mov
xchg
sbb
ficoms
mov
pop
push
and
and
and
les
pop
and
or
notl
out
mov
mov
rcll
mov
lea
sub
loop
lcall
pop
pushf
filds
movsl
stos
sub
add
cmpsb
xchg
xchg
iret
pop
jmp
daa
sbb
pop
adc
mov
mov
mov
sbb
mov
inc
and
loopne
mov
or
jae
movsb
mov
je
sbb
xor
mov
aaa
jmp
je
clc
push
cmpsl
push
adc
outsl
mulb
xchg
lods
or
sbb
xchg
aaa
aam
in
jmp
cmpl
sbb
je
hlt
sub
or
js
mov
ljmp
push
push
push
or
sub
pop
cmpsl
inc
jmp
sub
add
sub
and
xchg
cmpsb
mov
rolb
je
iret
loopne
mov
lcall
jbe
dec
xchg
pop
xor
cmp
les
adc
and
sub
test
adc
cmp
pop
mov
sub
pop
stos
bound
call
dec
loope
in
leave
cmp
aaa
les
stos
in
fmull
push
ljmp
in
mov
sbb
int3
or
in
push
loop
mov
jbe
sbb
nop
xor
fs
mov
aaa
fsubs
aam
iret
test
xor
das
cmc
in
insl
les
pusha
aad
dec
scas
mov
dec
sbb
out
push
xchg
mov
dec
in
stc
sub
lock
mov
cmp
or
cwtl
pusha
bswap
scas
dec
mov
cmp
inc
dec
popf
mov
inc
push
enter
rorb
xchg
out
cs
cmpsb
push
jl
jb
pop
dec
sahf
jl
insl
add
and
and
push
xchg
mov
into
movsl
add
iret
rcr
adc
outsb
xor
enter
mov
pcmpgtb
ss
leave
sbb
mov
call
sub
mov
imul
sbb
mov
fwait
jae
out
sub
insl
aas
popf
push
enter
mov
enter
cmp
fisttps
daa
into
mov
or
and
movsb
pop
xchg
pop
loope
cwtl
mov
sub
dec
pop
mov
sub
aad
adc
roll
or
bound
mov
outsl
stos
xchg
push
mov
arpl
and
mov
fldcw
pop
pop
mov
cmp
lcall
push
loopne
mov
mov
inc
push
clc
jno
xlat
int
inc
dec
clc
and
cmp
xchg
xor
in
aaa
aam
icebp
fidivl
gs
les
scas
scas
aad
and
aas
test
push
outsb
aas
cmpsl
mov
insb
pop
dec
in
mov
sti
sbb
in
enter
call
sbb
lea
movsb
mov
fs
in
icebp
mov
int
stos
nop
ficomps
es
out
outsl
adc
mov
lds
or
incb
testb
ss
pop
cmp
cmp
out
mov
pop
mull
out
jae
das
jg
cmp
cmc
cmpsb
jmp
int3
sbb
dec
or
mov
aam
push
sub
mov
cwtl
mov
xchg
cli
sbb
dec
in
repz
popf
xchg
call
xchg
mov
in
aam
insb
pop
add
es
xor
push
add
lods
fcoml
sbb
mov
leave
jle
dec
int
dec
jno
sbb
xchg
jnp
and
jmp
data16
or
popa
out
mov
push
push
testb
push
dec
pop
fidivrl
and
ljmp
fdivrl
pop
mov
xchg
in
xor
andl
xchg
aad
cmp
or
and
inc
aaa
jbe
cmp
std
or
jmp
hlt
dec
dec
mul
loop
and
or
xchg
cwtl
loopne
adc
push
pop
es
sub
dec
xchg
sbb
negl
cmp
dec
add
repz
leave
mov
cmp
imul
fdivrs
test
int3
push
xchg
test
rol
into
push
cmc
add
dec
sbb
jecxz
dec
mov
movsb
mov
outsl
aam
mov
and
xlat
orl
std
or
jmp
ret
jo
cmc
sbb
cmc
movl
shl
push
xlat
pop
pop
aam
lds
or
cltd
xchg
and
lods
mov
ficompl
jl
mov
jnp
movhps
in
or
sbb
mov
mov
sub
ja
and
wbinvd
and
adc
popf
xchg
pop
and
jge
push
cmp
mov
clts
test
sub
rolb
jl
dec
lcall
jbe
xchg
dec
adc
pop
or
movsb
lret
mov
xchg
pop
sbb
scas
jb
lcall
add
mov
mov
mov
cs
pop
enter
fwait
cs
jl
sti
repz
pop
jne
and
stos
sub
push
lods
fcmovnbe
loopne
inc
dec
fwait
mov
leave
pop
pop
lahf
neg
xchg
pop
jmp
int3
lods
call
xor
pop
fisubl
mov
adc
int
hlt
push
dec
mov
dec
mov
psllw
movsl
testb
in
sbbl
inc
cmpsl
adc
lret
xor
inc
loopne
sbb
lock
add
decb
or
loope
mov
and
sbb
and
test
jno
fisttpll
fnstsw
lds
or
mov
std
pop
sbb
cmp
iret
dec
pop
inc
jmp
icebp
pop
rcr
push
negb
inc
enter
jo
mov
mov
in
add
jmp
inc
mov
lock
in
data16
movsl
push
negb
outsl
into
test
sahf
and
fstpl
test
sbb
popa
and
sbb
sbb
sbbl
xchg
in
cmpsl
hlt
imul
fistpl
cmp
and
aam
add
jecxz
cli
cld
mov
push
rcrb
std
pop
fs
dec
rcr
in
inc
push
add
wbinvd
jnp
pop
in
into
int3
pushf
inc
xor
jge
fisubs
pop
adc
sub
call
lcall
hlt
ret
cmc
pop
push
inc
scas
mov
add
xchg
xor
adc
jle
cli
subl
mov
adc
aad
add
lds
stos
adc
inc
movsl
sub
mov
std
jmp
cmc
in
sub
add
and
cmp
lea
enter
fs
mov
pop
int3
adc
pop
sub
repnz
lds
pop
ja
pushf
xchg
sbb
shlb
frstor
inc
xchg
and
addr16
jl
sbb
movsl
dec
fs
mov
stc
xchg
mov
xchg
scas
test
and
and
cwtl
movsb
mov
adc
cmp
pop
shll
loopne
out
mov
jbe
pop
push
mov
mov
mov
sbb
xlat
sbb
dec
dec
mov
push
jmp
leave
adc
lds
nop
in
aas
sar
in
inc
xchg
pop
pop
ss
jge
xchg
lods
out
adc
pop
fldt
aaa
push
push
and
sbb
enter
cs
decb
std
jb
pop
push
mov
sbb
lea
cmp
pop
mov
add
in
mov
outsb
out
call
and
inc
es
push
mov
pop
shl
aaa
lcall
iret
mov
and
push
dec
mov
les
shrl
scas
jg
xorb
jae
clc
inc
pop
and
mov
je
inc
pop
add
out
xor
push
imul
pop
int3
shrl
in
push
and
cmp
nop
lods
icebp
jmp
add
test
cmp
int
sbb
and
or
or
mov
jle
push
xchg
es
lods
jne
jl
stc
adc
sbb
or
rcll
xchg
fucomi
andb
jae
xchg
movl
mov
and
or
fstpl
mov
xchg
cmp
lods
jmp
mov
js
and
fdivl
sub
add
pop
jno
sub
push
flds
fidivrl
dec
push
sub
cmc
adc
or
lock
jbe
and
sbb
stos
fwait
repz
pop
xchg
push
or
ds
mov
in
lods
push
push
divl
pop
push
es
xchg
scas
mov
cmc
dec
lds
sub
adc
adc
dec
xchg
push
adc
mov
out
js
mov
js
add
rorl
or
jecxz
cmpsl
mov
push
push
bound
dec
jnp
daa
roll
ds
testb
inc
dec
in
or
pop
sbb
jns
push
shrb
sbb
negb
pop
xor
bound
add
pop
stos
mov
push
inc
add
insb
fbstp
pusha
and
leave
push
dec
and
jle
and
sbb
ja
push
js
mulb
jge
jo
inc
push
nop
lds
scas
add
xchg
fildll
mov
out
out
adc
or
add
out
jg
push
mov
sbb
cmp
addr16
jecxz
sbb
adc
ror
and
out
outsb
pop
xchg
xchg
lret
add
or
mov
mov
mov
leave
cmp
and
in
int3
push
orb
call
or
in
jb
bound
and
ds
shlb
aaa
mov
sub
movsl
push
addl
inc
mov
and
orl
testl
loopne
and
mov
shl
ret
jae
imul
jno
mov
dec
and
fs
imul
push
add
or
xor
inc
inc
mov
cltd
in
pushf
in
and
aad
iret
aam
hlt
aaa
inc
int
nop
aad
lds
daa
inc
sbb
or
movsb
push
mov
cmp
xor
jle
repnz
xchg
push
cmp
pop
adc
in
out
jae
in
inc
inc
dec
mov
dec
xchg
cmpsb
and
ljmp
jb
dec
stc
and
cmc
pop
mov
sbb
jmp
popf
xchg
lds
xorb
sub
or
or
scas
push
pop
cmpsl
cmp
es
dec
inc
ja
jo
mov
andb
stc
lret
adc
jne
stos
scas
cmp
adc
add
pop
insl
cwtl
lock
add
scas
fidivs
test
fs
out
mov
inc
push
out
adc
mov
push
movsb
and
xchg
xor
sti
or
lcall
sbbl
inc
call
outsl
popf
jne
mov
push
cmp
or
dec
sbb
flds
adc
mov
jbe
aas
lods
dec
idivb
pop
add
or
jno
cwtl
mov
push
mov
cs
data16
sbb
shlb
jne
adc
pop
adc
add
fwait
out
in
cmp
and
cmp
insl
mov
call
inc
or
inc
dec
lea
adc
adc
rclb
mov
fs
push
sub
mov
punpckhdq
inc
or
in
pop
in
ficompl
or
pop
outsl
insl
dec
or
xlat
sbb
and
mov
push
push
xchg
fstpl
mov
push
aas
fdivl
dec
mov
out
and
pop
out
pusha
fld
insb
repz
jo
sbb
pop
enter
dec
dec
stos
leave
into
je
arpl
leave
rcrb
stos
in
add
sbbb
movsb
cmp
mov
mov
jb
sbb
inc
cmp
andb
lret
fmull
aaa
mov
push
sub
adc
pop
clc
mov
jecxz
pop
mov
adc
sahf
pop
sbbl
jns
push
xchg
in
int
add
pop
inc
hlt
stc
fsubl
pop
cmc
fucom
add
mov
jmp
and
or
cmp
or
and
imulb
or
cld
xor
inc
gs
shrl
dec
iret
dec
mov
jns
adc
movsl
icebp
bound
pop
stc
adc
std
jb
and
jbe
cmp
jo
mov
sti
addb
out
test
xchg
xor
inc
xor
xchg
inc
push
mov
or
push
sbb
sub
jmp
lret
lds
mov
ds
ss
sbb
jbe
loope
push
or
adc
inc
adc
decl
push
pop
out
mov
repnz
or
sbb
jp
xchg
std
adc
repnz
je
push
loop
aaa
cmc
je
addr16
lahf
out
add
clc
movsl
xchg
stc
or
in
push
test
sar
adc
jle
xchg
or
jb
movsb
les
nop
adc
inc
bound
inc
in
dec
mov
mov
push
xchg
xchg
into
pushf
xchg
rcll
or
or
sbb
inc
mov
push
push
inc
fsubr
popf
nop
iret
mov
and
mov
adc
les
and
mov
mov
incb
jp
out
sbbb
xchg
loop
repz
sbb
and
pop
add
out
mulb
cmpsl
enter
inc
jb
sbb
cwtl
add
cmp
je
push
push
xor
mov
dec
es
add
mov
in
push
adc
mov
repz
je
scas
dec
dec
jno
inc
xor
test
push
insb
add
jnp
dec
cmc
icebp
dec
xor
dec
test
gs
packsswb
test
es
sbb
xchg
xchg
outsl
aam
sub
or
pop
sub
mov
ljmp
pop
decl
dec
popf
dec
out
mov
out
lods
xlat
insb
and
xor
or
jecxz
jbe
sub
inc
rcll
incb
cmc
and
mov
in
mov
fwait
and
xchg
outsb
xor
sub
add
mov
out
jmp
mov
push
lcall
aad
lcall
pushf
cmpsb
sbb
xorl
or
rol
cmpsb
sbb
and
and
enter
pop
cmp
push
pop
cmpsl
std
mov
vsubsd
cmp
orb
inc
sbb
push
jo
gs
and
push
xchg
and
inc
sub
cmove
pop
jg
aaa
sbb
or
ljmp
int
enter
or
cwtl
int3
fisttpl
sti
addb
ljmp
lret
mov
adc
leave
adc
jmp
dec
mov
pop
pop
insb
or
cli
mov
out
in
cmpsb
leave
lds
fiaddl
inc
rcl
ret
jecxz
jle
stc
inc
lea
mov
out
xor
adc
addr16
xchg
lahf
iret
les
dec
adc
pop
pop
cmpsl
test
outsb
sub
ljmp
push
lods
jnp
insl
in
arpl
inc
add
or
repnz
lods
xlat
cmc
push
sub
cmp
sti
push
inc
aam
and
push
out
rclb
popf
jb
iret
aad
mov
or
ss
lret
fmul
push
lods
jne
std
lea
aam
test
push
les
out
rol
test
insl
mov
out
xchg
push
sub
push
pop
or
ficoml
decl
mov
sub
mov
adc
outsl
mov
stos
sbb
lcall
inc
push
mov
adc
or
adcl
into
jbe
sub
aas
mulb
mov
adc
push
mov
lea
ret
mov
out
cmpsb
lock
pop
es
bound
xchg
insl
mov
mov
montmul
cmpsb
inc
lods
push
add
sbbb
int
popf
xlat
adcb
xor
sbb
sbb
test
push
test
enter
and
xchg
pop
inc
sahf
rorb
jg
mov
js
int3
lahf
aaa
push
xchg
mov
stos
cs
pusha
xchg
lret
int3
sbb
jae
cmp
lcall
inc
jmp
int3
sub
in
push
xchg
cmpsb
mov
lds
fadds
inc
inc
or
xlat
and
jmp
sbbb
shll
pop
lea
cwtl
arpl
out
push
jnp
cmp
aas
xchg
pop
mov
icebp
dec
loop
pop
pop
movsb
mov
js
bound
mov
inc
ret
push
pop
insl
shl
and
cmpsb
cmc
adc
les
pop
adc
lret
in
rcr
aaa
loopne
sahf
aas
in
out
and
sbb
int
mov
out
adc
lret
sbb
pop
mov
lcall
out
test
push
dec
mov
push
sbb
jg
cmp
ja
dec
push
and
mov
jle
outsb
mov
mov
lcall
icebp
ficoml
push
xchg
xor
out
pop
imul
shr
js
add
aad
dec
mov
lret
pop
mov
loope
and
mov
pop
xor
jg
dec
mov
sbb
xchg
arpl
mov
stc
mov
jno
popa
or
cmp
pushf
test
ja
or
push
aas
in
out
mov
dec
cwtl
arpl
add
or
repnz
fbstp
sti
sbbb
sbb
pop
mov
cld
adc
pop
dec
andb
jg
jae
sub
dec
dec
and
sbbl
mov
and
enter
push
and
imul
mov
pop
xchg
inc
add
inc
mov
and
or
dec
pop
pavgw
mov
in
mov
xchg
ficoms
push
fisttpll
sub
punpcklbw
fbld
enter
sbb
xchg
and
leave
ficomps
int
rcr
mov
cmpsb
bound
aam
inc
cmp
rcrb
mov
sbb
pop
mov
mov
dec
jmp
ljmp
jno
adc
out
pop
or
dec
orl
inc
sbb
and
stos
ljmp
jg
adc
out
repz
add
adc
enter
jb
add
dec
cmp
or
jmpw
popf
mov
jge
xchg
pop
scas
jne
gs
and
jb
xlat
xchg
xor
xor
fstps
and
lods
pushf
negb
fmuls
pop
mov
ds
push
jb
xlat
repnz
out
xchg
in
mov
mov
les
xchg
enter
or
lahf
xor
pop
pusha
xor
fadds
pop
pop
push
and
fmull
mov
cmp
je
add
cwtl
jmp
mov
sbb
mov
push
and
add
cmp
jne
xchg
fsubp
or
movsb
in
mov
pop
test
pop
and
les
lds
push
fistpl
and
xchg
dec
aad
popa
pop
pop
std
jnp
sarl
cs
inc
sahf
or
add
sbb
inc
jmp
insb
or
adc
mov
jp
jae
in
mov
out
adc
test
or
int
and
adc
inc
insl
sbb
jmp
or
fwait
cmc
mov
jge
pop
popf
sbbl
mov
and
ljmp
pushf
icebp
jl
rcll
addl
xchg
xchg
and
in
dec
out
inc
jl
les
sub
lahf
and
in
outsl
mov
mov
mov
pop
jno
sbb
jae
sbb
cwtl
dec
lret
jmp
adc
and
insl
and
inc
cld
lock
and
push
and
js
jge
jb
pop
lret
cwtl
cmpsb
pop
push
int3
lods
into
iret
fiaddl
xchg
int
jne
mov
pop
jbe
out
lret
add
insb
xchg
push
jmp
xchg
mov
mov
dec
ret
jmp
mov
scas
cmovo
mov
fldt
out
filds
mov
enter
add
add
inc
sbb
sub
leave
loope
xor
sub
shll
cltd
xor
sbb
in
dec
pop
or
and
mov
outsb
cmp
jp
pusha
push
sahf
pop
cmp
mov
and
push
mov
push
xchg
lds
stos
out
das
mov
je
lea
mov
xor
jne
sub
lea
shll
scas
fsubrp
push
in
popa
orb
out
inc
shl
sbb
das
mov
imul
mov
mov
or
lahf
jecxz
push
out
mov
mov
nop
sbb
sub
cmp
mov
mov
cld
cmpsb
std
insb
add
nop
push
ds
inc
dec
dec
popa
into
jno
mov
sbb
dec
jb
adc
lahf
push
dec
xchg
cmp
mov
aaa
nop
pop
out
sti
add
and
jb
xchg
xor
lret
or
jmp
xchg
or
fnstsw
fldcw
pushl
jmp
or
lahf
and
xchg
inc
push
mov
sub
cmpsb
cmp
dec
mov
xchg
into
arpl
inc
sahf
dec
mov
pop
leave
sysenter
push
pop
adc
dec
mov
or
cld
xorl
adc
das
add
popa
sub
and
xchg
aaa
push
popa
dec
out
or
xchg
push
std
fwait
jge
iret
ljmp
cmpsb
cld
fldenv
xchg
push
fbld
test
cld
popf
mov
outsl
jmp
mov
push
pop
scas
pop
mov
mov
pop
loop
daa
sub
rep
adc
xor
jae
mov
mov
mov
lods
mov
shll
in
mov
and
jno
das
insl
popf
addr16
rorb
loope
add
lds
ljmp
inc
and
xchg
in
std
hlt
inc
js
dec
sub
sbb
bound
push
outsl
mov
xchg
out
sub
dec
test
dec
movsl
out
outsb
jle
pop
fdivrp
jnp
pusha
jo
fstps
fldenv
imul
std
ficomps
jne
dec
js
xor
jle
lea
or
jle
jb
xorb
sbb
cpuid
add
sbb
in
icebp
dec
ljmp
dec
adc
daa
mov
mov
insb
je
jno
adc
mov
je
inc
int
and
out
lret
cmpsb
xor
sbb
mov
imul
inc
into
mov
jb
fisttpl
add
xor
adc
test
dec
dec
wrmsr
xchg
loop
xor
fidivrs
insl
xchg
sub
into
or
xor
jae
shll
call
outsb
push
shll
and
rcrl
lret
push
jg
lcall
add
call
leave
inc
push
iret
xor
add
push
jb
add
xor
in
pop
nop
insl
sahf
cmc
out
or
outsl
and
sbb
inc
xchg
sbb
sbb
mov
mov
sahf
xchg
cli
mov
decl
dec
clc
push
out
loope
into
inc
out
cmc
dec
cmc
add
pop
xor
or
shrl
and
xchg
repz
adc
pop
and
ss
cltd
push
sbb
cwtl
jo
ret
out
in
lods
dec
insb
dec
xchg
pop
cld
or
fs
mov
or
inc
or
pusha
and
mov
cmp
popa
out
test
cmp
inc
addr16
jnp
ja
jne
je
mov
and
cmp
xchg
fmul
pop
imul
pop
xor
in
xchg
ljmp
xchg
fs
dec
cli
int3
mov
call
or
cmp
iret
mov
add
int
testb
cltd
leave
and
out
cmpsb
insb
out
hlt
pop
jmp
out
pop
cltd
aam
mov
inc
popa
in
mov
scas
ljmp
push
push
js
outsl
pop
addb
mov
sub
jmp
mov
inc
cmp
jg
aaa
push
push
mov
shll
aas
dec
sub
outsl
or
mov
mov
sbb
push
cmpsl
rcr
icebp
sbb
icebp
fst
cmp
mov
lods
adc
ja
inc
and
sbb
lods
inc
popf
test
xor
mov
xchg
add
out
out
or
js
filds
outsb
adc
stos
out
pusha
push
and
cld
repnz
dec
fnstsw
xlat
shlb
stos
mov
cmp
or
pop
jnp
test
sub
cmc
and
es
push
loope
lcall
cwtl
mov
xchg
cmpsb
or
in
cmp
pop
je
bnd
cltd
adc
invd
out
cmpsl
pop
mov
sbb
ds
subl
iret
popa
adc
inc
in
xchg
sbb
int
inc
adc
and
insb
insb
sbb
into
imul
in
jbe
out
jmp
lret
sbbl
in
ja
orl
cmp
cmp
fnstcw
bound
mov
mov
mov
push
clc
jl
leave
int
pop
sbb
or
popa
xchg
adc
ret
jo
lds
ljmp
inc
jno
stc
sbb
adc
pop
imul
mov
push
pop
mov
inc
add
pop
inc
js
into
sbb
out
movsl
adc
mov
pop
mov
leave
fnstcw
mov
jmp
push
sub
jge
int3
jae
add
jmp
inc
loopne,pn
jo
int3
stos
movaps
pusha
stc
pop
das
pop
lods
dec
sub
sbb
cs
int3
adc
lods
lret
inc
or
fcoms
rorb
movsb
or
jmp
and
lds
je
arpl
inc
dec
mov
nop
adc
sbb
pushf
jae
pop
or
sbb
inc
in
popa
mov
and
leave
ret
adc
ret
add
in
cmp
push
das
mov
les
add
push
popf
insl
or
adc
cld
xchg
push
dec
adc
and
dec
es
movsb
sub
in
andl
adc
popf
pop
sbb
pop
pop
repnz
add
mov
mov
stos
xchg
cmpb
dec
and
lds
fwait
lods
sub
mov
js
inc
idivb
or
mov
daa
in
mov
sub
repz
sbb
sbb
pushf
call
and
scas
shrl
or
or
mov
push
xchg
shrb
add
xchg
xor
fidivrl
lods
xchg
dec
sub
push
je
test
fs
xor
fdivs
sub
add
mov
dec
pusha
jecxz
ficompl
mov
enter
cmp
push
or
decl
sub
andl
jl
mov
dec
cmc
or
daa
xchg
clc
cs
pop
call
or
or
mov
sbb
nop
jne
lds
movsl
in
iret
push
or
popf
cs
cmpsb
nop
xchg
inc
int
loope
jo
push
fildll
shlb
jge
dec
xor
test
mov
lret
push
icebp
pop
jns
push
clc
dec
out
jl
das
cmp
ljmp
mulb
mov
stos
out
pop
out
sbb
icebp
jns
fs
push
pop
lods
pop
sbb
inc
adc
or
and
or
sub
cmpsl
lds
iret
inc
sbb
testb
outsb
push
mov
test
or
push
jle
cmp
fldl
dec
cmp
mov
jnp
cmp
shlb
je
pop
cmp
and
dec
jle
add
outsl
ss
xchg
or
lret
mov
in
jmp
or
fcom
lds
loop
mov
in
sbb
int
pop
faddl
ficomps
bswap
in
cwtl
pmullw
fstp
pushf
fcompl
and
dec
cs
hlt
jmp
push
dec
addb
xchg
cmp
fcompl
mov
cmp
outsl
bswap
jg
jmp
jmp
pushf
les
dec
jno
mov
jno
les
push
xor
xchg
xor
push
sub
mov
sbb
add
popf
into
popa
sbb
int3
out
enter
int3
sbb
sahf
mov
inc
add
or
int
dec
psubsw
loop
mov
and
inc
daa
mov
inc
or
outsl
jno
xor
fwait
rcrb
push
flds
gs
aam
repz
test
mov
outsb
cli
inc
pusha
inc
in
outsl
and
dec
iret
divb
mov
fimuls
stos
and
lea
pop
sbb
fs
mull
mov
dec
outsb
fwait
xchg
hlt
mov
cmp
enter
aam
ud2
les
mov
test
mov
mov
aam
std
inc
ds
add
aas
movsl
sub
add
or
or
scas
and
push
dec
into
xchg
or
adc
jmp
inc
jmp
mov
imul
mov
cmp
call
dec
pop
cmp
stos
cmp
push
pop
in
or
mov
dec
imul
mov
xor
adc
adc
xor
jne
sbb
pop
cmc
or
and
xchg
mov
inc
aas
rcrb
xorl
sub
xchg
lods
popf
push
or
add
sbb
and
or
in
mov
sti
mov
sti
shr
mov
cmp
aam
div
movsl
add
clc
pop
jnp
insb
lock
pop
movsl
jp
out
or
call
mov
mov
dec
outsb
adc
jge
mov
dec
iret
cmp
mov
jne
sub
outsb
rol
push
dec
or
inc
xchg
icebp
jmp
movsb
inc
mov
push
pop
cmpsb
mov
inc
in
dec
popa
sub
std
or
in
push
rolb
std
push
fstps
cmp
lock
sbb
lcall
jmp
or
ds
cs
add
packuswb
jmp
jmp
sub
loop
lahf
dec
in
sbb
push
jno
jo
repnz
nop
inc
mov
fs
ret
iret
cmpsl
and
pop
mov
lods
and
cmp
lods
out
rsm
add
push
insl
sub
xchg
pop
jae
loope
dec
insb
pop
imul
sbb
jp
mov
fldl
bound
and
inc
std
lds
imul
adc
shl
cmc
dec
adc
and
dec
and
fcoml
or
xor
fldl
xlat
jecxz
int
or
pop
mov
repnz
or
lcall
cvttpd2dq
push
scas
mov
pop
inc
leave
pop
out
xchg
std
sbbl
inc
push
push
adc
addr16
xchg
testb
adc
push
fiadds
sbb
loop
and
or
popf
dec
shrb
xchg
ss
jne
fsubs
mov
stos
mov
stos
and
sub
loopne
cmp
addb
out
movsl
leave
and
scas
push
or
and
mov
and
and
mov
scas
pop
mov
lahf
cmp
test
out
gs
mov
and
jle
xchg
pop
pop
xor
push
popa
je
shrl
adc
cmp
inc
xchg
or
jmp
in
adc
and
pcmpgtw
scas
mov
dec
in
ljmp
movsl
aaa
gs
xchg
dec
sub
cmpsb
std
lret
adc
pop
movsl
data16
and
inc
mov
cmp
xchg
fsubs
repz
jmp
push
rcr
push
dec
call
inc
push
and
mov
sbb
pop
outsl
and
pop
cmc
pop
mov
clc
testl
es
lcall
mov
and
sbb
dec
adc
shll
pop
jl
fsubl
and
pop
es
stc
sub
sarl
dec
and
add
lcall
or
and
fsubl
roll
and
cwtl
and
lahf
inc
adc
popf
or
std
mov
popf
in
push
insl
adc
sahf
cld
mov
push
pop
rcll
in
out
pop
fucom
jbe
rclb
test
push
nop
es
mov
ja
sbb
pop
jp
adc
xchg
xchg
push
or
pop
xchg
cld
xchg
sti
fwait
icebp
jmp
popf
add
and
and
xchg
fsts
and
and
mov
cmpsb
test
std
in
mov
add
mov
xchg
es
into
jae
out
call
and
sbb
mov
push
push
movsl
mov
mov
mov
push
mov
sbb
lea
cwtl
xchg
popf
mov
adc
adc
or
in
popf
mov
mov
xchg
pushf
and
adc
sbb
or
loope
aad
aad
pop
push
and
lret
and
in
or
adc
and
fwait
les
movsb
lcall
fsubl
decb
sti
and
mov
jb
and
mov
jmp
cmc
jmp
sbb
mov
bswap
mov
fwait
sbb
leave
ret
nop
ret
sbb
leave
aaa
sub
or
je
sub
push
cltd
out
or
xchg
mov
mov
sub
cmp
out
cmc
mov
or
jne
cmp
rolb
sti
sbb
stos
ja
push
xchg
aas
in
mov
out
dec
addl
dec
push
jmp
dec
jecxz
push
fcmovnb
mov
lods
or
outsb
fwait
xor
mov
mov
xorl
jno
mov
xor
imul
cmp
in
loopne
sahf
mov
dec
ficoml
pushf
sti
cmc
mov
mov
shl
fs
mov
jp
push
cmp
or
xchg
jo
sub
testb
add
aas
cmp
loope
test
jbe
test
inc
std
cmpb
pop
or
insb
cmpsb
lds
into
and
push
mov
call
xchg
sti
or
test
adc
sbb
out
cmp
addl
imul
sahf
mov
mov
pushf
adc
shrb
xor
mov
or
add
and
inc
add
mov
mov
mov
sub
inc
mov
mov
nop
subl
add
mov
sub
inc
out
lea
sbb
outsb
sub
or
stos
and
lahf
and
in
mov
insl
mov
out
movsl
jbe
dec
cld
push
pop
stc
cmpl
jno
cmpsb
dec
cmp
sub
and
mov
xchg
cmp
lcall
mov
cwtl
aas
xor
push
and
rcr
mov
lock
push
inc
sbb
jae
gs
cmpsb
lcall
movsb
jmp
outsl
cmovb
mov
sub
clc
mov
stc
mov
mull
mov
fcmovnbe
mov
cwtl
arpl
int3
fstpl
test
inc
loop
dec
pop
mov
cmp
leave
push
pop
frstor
addb
push
inc
pop
jge
pop
xchg
or
call
or
pop
xchg
imul
loop
rorb
loope
xor
lods
dec
subl
xorb
or
enter
sbb
add
lock
mov
and
cmp
jecxz
pushf
or
dec
mov
cs
inc
xor
popa
push
sub
cmp
and
fildl
les
pop
or
addl
or
sahf
jle
cmp
pop
out
xchg
sub
addb
push
jne
push
mov
sub
mov
jge
push
push
sbb
jne
in
xchg
mov
or
ds
xchg
cmp
ret
fs
inc
adc
repnz
insl
aaa
ja
xchg
xchg
rol
adcl
push
lret
pop
dec
mov
pushf
fcompp
jbe
pop
int3
stos
or
aaa
jmp
sarb
dec
mov
in
test
pushf
xchg
cmovne
mov
sbb
aad
jle
shlb
sbb
xor
lret
in
dec
mov
mov
fucomi
jo
sbb
mov
aad
push
cmc
dec
cmp
arpl
dec
in
aam
jnp
jo
dec
push
or
addl
adc
pushf
pop
sub
mov
cmp
jns
mov
outsb
push
test
lods
mov
jmp
mov
bound
sbb
insl
cwtl
xchg
xor
lahf
sub
sarb
dec
mov
cmpsl
frstor
add
outsb
loop
and
idivb
out
inc
inc
pop
cmpsl
sbb
out
iret
jno
pop
cld
out
int3
pop
jge
dec
sub
es
lods
lret
int3
cmc
bswap
xchg
sbb
jmp
xchg
out
lcall
add
testl
sahf
jecxz
mov
jo
or
shl
sbb
jne
das
rcl
jl
test
push
ljmp
pusha
orl
and
dec
fucomp
in
sub
in
popa
push
mov
mov
add
jne
add
repnz
jo
mov
and
lahf
in
sahf
xchg
inc
jno
sbb
fisubs
pop
xchg
bound
xchg
popf
jmp
adc
testl
fcomps
adc
cmpl
lahf
jo
faddl
loope
pop
or
sbb
or
jbe
xchg
xchg
jmp
orb
inc
or
push
fcompl
pop
aaa
mov
andb
sbb
push
dec
mov
test
pushf
cmc
jl
and
xchg
sbb
in
adc
jmp
cmc
popf
jo
call
popa
or
ret
cltd
test
adc
mov
or
addr16
and
pop
cs
scas
sbb
pop
jne
lahf
fdivr
mov
push
dec
addr16
cmp
outsl
dec
mulb
cmp
mov
mulb
adc
adc
movsb
pop
add
xlat
cmp
sbb
aam
xlat
sahf
jns
sbb
shl
hlt
addr16
jbe
jne
out
lods
push
ret
xchg
inc
or
mov
xor
or
pop
hlt
mov
xchg
and
mov
pop
push
xchg
pop
xor
push
sbb
ds
adc
pop
insl
int
ss
std
mov
cli
repz
je
stos
cmp
jg
jbe
xorb
fs
rorb
subb
add
sbb
es
mov
std
cmp
inc
sub
push
mov
cli
int3
mov
enter
or
xchg
shlb
arpl
cmc
mov
packssdw
jbe
or
inc
jbe
fs
int3
dec
pop
lea
push
dec
iret
ja
popa
jae
add
sbb
dec
or
std
mov
out
negl
popf
movsl
add
out
push
es
mov
pop
scas
je
and
sub
into
xor
mov
mov
out
mov
aas
sarl
and
adc
push
aaa
push
stos
add
mov
add
jmp
pop
inc
sbb
adc
sub
dec
or
pop
or
std
pop
inc
les
mov
leave
adc
in
cmc
lret
dec
push
rclb
jecxz
movsl
aas
add
test
scas
or
movlps
adc
loope
data16
movsl
jmp
xchg
mov
or
outsl
std
into
jo
fwait
sub
fistps
leave
and
add
or
test
jns
outsl
pop
adc
push
mov
ror
aaa
xor
jmp
mov
in
push
popa
or
and
in
sahf
mov
xchg
iret
mov
in
jmp
and
out
cmpl
cmp
fisubl
adc
loop
sahf
xor
pop
lret
or
push
in
cmpsb
ja
popa
push
pop
sub
push
aad
js
add
pop
pushf
mov
lahf
push
leave
pop
pop
xor
and
mov
cmp
mov
mov
inc
loop
jne
dec
lret
in
or
cs
mov
lock
out
push
sarb
loop
adc
or
shll
add
xchg
xchg
imul
xchg
dec
jp
test
push
dec
stos
xchg
nop
les
jecxz
sahf
jle
lds
arpl
inc
es
sbb
dec
sbb
and
test
rcll
or
mov
mov
mov
leave
or
ficoml
xchg
in
mov
mov
pop
enter
xchg
or
rcr
popa
in
iret
bndldx
push
imulb
dec
enter
xor
je
mov
roll
mov
out
cli
or
decl
sbb
or
push
cld
xlat
inc
fimull
sub
lods
lods
inc
pusha
inc
stos
cwtl
cmpsb
add
loop
dec
push
adcl
int
pop
add
cmp
xchg
roll
dec
addr16
imul
or
daa
mov
inc
mov
adc
push
pop
int3
jbe
cmc
imul
or
mov
dec
pop
cmp
cmp
leave
xchg
sub
cmp
or
adc
push
test
mov
ss
leave
xchg
cvtps2pi
leave
and
movsb
int3
jo
mov
outsl
sub
add
or
addb
push
push
cltd
add
inc
mov
cwtd
pop
jno,pn
or
xchg
push
imul
jecxz
jmp
pop
sbb
imul
std
push
scas
mov
in
mov
in
aaa
mov
mov
pop
out
mov
sbb
lea
push
fstps
pop
xchg
test
inc
pop
in
inc
jae
add
pop
xchg
aaa
and
int3
push
out
dec
out
sbb
subl
lcall
sub
ljmp
xchg
jge
dec
inc
and
outsb
mov
inc
lahf
lds
mov
mov
imul
cmp
sbb
lcall
jnp
sub
pextrw
sbb
ficompl
out
pop
sbb
pop
cmp
sub
lods
jmp
sub
je
ffree
add
push
popf
pop
fidivrs
cmp
outsl
clc
and
inc
dec
mov
xchg
push
jmp
pop
arpl
and
push
icebp
inc
mov
mov
adc
pop
and
mov
sti
mov
and
out
enter
push
mov
das
test
add
popf
into
pushf
xor
mov
cli
pop
add
sbb
pop
jbe
orb
or
sbb
out
out
roll
mov
pushf
xor
fmul
fisttpll
push
lcall
ja
cmpsl
mov
por
stos
enter
mov
in
movhps
xchg
cmpsb
cmp
in
xchg
out
sbb
sbb
mov
das
or
or
pushf
add
je
add
dec
mov
adc
dec
mov
or
imul
hlt
out
orl
sub
insb
sbb
negb
xor
je
cmc
mov
imul
jecxz
jmp
testb
loop
cld
in
mov
rcrb
jmp
or
mov
or
and
fmull
adc
cmpsl
popa
xchg
iret
std
cwtl
sbb
xchg
cld
popf
pop
dec
pop
jae
pop
or
ja
addl
jl
les
pop
inc
pop
xor
les
pop
xchg
dec
push
xchg
or
fmull
push
inc
mov
mov
mov
dec
lods
dec
inc
les
xor
popa
ficoml
jb
cmpb
cmc
loop
pop
cmp
jbe
jmp
adc
and
xlat
dec
ljmp
inc
into
inc
in
std
repnz
adc
je
jl
and
mov
lcall
adc
aam
and
mov
adc
push
leave
icebp
int3
stc
lcall
push
sahf
in
sbb
call
cmp
into
and
ret
movl
jae
int3
scas
aam
sub
mov
ret
in
inc
test
insl
out
imul
lds
mov
shlb
jmp
cmp
adc
out
jle
adc
jl
es
icebp
jle
xlat
nop
mov
mulb
or
mov
pop
cmp
es
xchg
and
cmp
push
mov
out
dec
push
divb
xor
cmc
jge
jg
inc
pop
mov
cmp
adc
mov
xchg
sub
mov
lcall
cmp
cli
nop
shlb
cmp
sbb
push
add
cli
in
pop
rolb
xchg
sub
int3
or
or
push
adc
push
pop
jg
lcall
sbb
mov
dec
mov
sbb
mov
pop
mov
xchg
and
sub
inc
push
add
inc
jp
pop
repnz
mov
cltd
repz
inc
push
stos
xor
cli
push
cmp
pop
xchg
pop
cmp
aad
dec
jo
in
out
and
pop
or
jmp
mov
fstl
cmp
jmp
ret
cmp
jmp
lahf
dec
dec
out
mov
lret
inc
mov
xchg
je
fcompl
pop
fmuls
jns
add
mov
cmc
data16
das
stos
and
lods
xchg
push
xchg
push
pop
fs
cld
psrlq
dec
out
push
mov
jb
pop
xor
sub
out
punpcklbw
or
xchg
mov
pop
jl
sbb
enter
lock
inc
mov
fucom
shlb
push
push
or
mov
lds
sahf
dec
cmp
jne
pop
mov
notl
aad
clc
dec
xor
dec
daa
jle
test
addb
fdivl
rclb
sub
jmp
pop
std
mov
dec
cld
or
add
loopne
pop
test
xchg
xlat
test
aam
xchg
mov
ficompl
or
jbe
xchg
inc
nop
not
mov
out
pop
mov
mov
in
mov
sbb
int3
ljmp
les
shlb
adc
push
mov
movsl
sahf
mov
cvtdq2ps
mov
push
pop
jae
cmp
scas
or
lds
pop
mov
push
loop
js
insl
pop
xchg
out
adc
cmp
push
mov
movsb
aam
rolb
fsubl
test
fs
cmc
xor
rcr
pop
mov
ljmp
sbb
or
aad
add
out
lods
inc
jo
xor
adc
sahf
insl
jge
ja
inc
jae
pop
jno
fldl
add
and
and
inc
iret
pop
je
popa
mov
imul
mov
sub
in
mov
cmc
cmp
loope
in
jno
ds
fsubp
and
and
out
xor
push
mov
mov
rcrb
in
aas
aas
enter
addr16
in
add
out
frstor
mov
lods
cmp
push
jp
cli
xchg
cmpsb
mov
inc
push
jmp
imul
in
add
lret
lcall
imul
mov
bound
xor
add
or
adc
cltd
mov
jle
inc
movsl
sbb
shl
outsb
cmpsb
sub
hlt
push
daa
pop
outsb
pop
decl
mov
std
lcall
out
jmp
je
add
imul
sbb
xor
lds
mov
xchg
and
push
lods
ja
sar
pop
call
jmp
sub
daa
jle
and
mov
sub
cmc
dec
popa
test
inc
popf
jmp
cmpb
ss
sbb
sub
cmp
popa
negb
dec
xor
push
rcrl
fistpl
sarl
jle
jb
jmp
ja
mov
out
cmp
sti
xchg
and
jo
pop
jmp
mov
mov
bound
cwtl
inc
jno
mov
mov
cmp
sbb
cmp
xlat
in
xchg
fnsave
or
js
add
xchg
loope
js
pop
sbb
sti
arpl
cmp
cmp
jae
inc
mov
add
fnstenv
subb
add
testl
xlat
loope
jae
out
lds
fnstcw
subps
jnp
popa
insb
adc
add
sub
cmp
inc
xor
jo
dec
jbe
mov
adc
and
or
jmp
ljmp
and
movsb
mov
push
cmp
faddl
pop
lods
shlb
ljmp
adc
sub
sub
mov
lods
cmc
fildll
pop
jg
mov
jne
inc
pop
mov
cmp
sub
mov
cmc
push
fsubrs
pop
inc
out
sub
jo
pop
adc
gs
out
xchg
out
jbe
or
jb
leave
sub
push
adc
sub
lods
pop
lods
push
pop
or
int3
sbb
cmp
scas
ficoms
std
lahf
dec
push
jmp
add
jmp
les
mov
inc
push
repz
push
adc
sarb
stos
or
jmp
scas
fs
in
jbe
fucomip
pusha
sbb
ds
pushf
add
or
in
sbb
repnz
inc
adc
int3
imul
sub
adc
pop
pop
int3
mov
mov
sbb
jmp
out
in
ljmp
sub
shr
push
mov
dec
imul
pminsw
xchg
sbb
or
fidivs
and
cmc
jmp
idivl
add
not
mov
or
jl
mov
in
lea
xor
or
scas
mov
gs
fs
add
sub
call
shrl
xchg
sbb
jmp
mov
fistps
mov
enter
and
dec
int3
pop
pop
inc
scas
add
mov
xchg
enter
mov
lds
or
mov
inc
add
pushl
sbb
sbb
rorl
pop
xchg
imul
loopne
xchg
or
div
pop
jbe
sbb
je
dec
xor
jns
fmuls
in
dec
cwtl
dec
cmc
ret
es
mov
bnd
fsubs
movsl
sahf
pop
out
insl
dec
lahf
add
xchg
mov
dec
bound
data16
fwait
or
sbb
mov
dec
into
jo
cli
jge
cmpsl
and
mov
jmp
shrb
movsl
jmp
or
sub
cli
ja
push
add
push
cmp
adc
push
add
jle
repnz
hlt
jnp
push
xor
mov
or
into
inc
mov
or
sahf
das
and
jl
pop
cwtl
xor
scas
sub
in
push
mov
idiv
jl
adc
sti
fucomp
lret
int3
jo
jge
loope
aas
lds
cmc
dec
lahf
cmp
sub
push
xchg
push
into
data16
and
aaa
xchg
inc
push
sbb
mov
ja
cmp
xor
xchg
in
nop
jmp
bound
cwtl
push
cld
or
ror
enter
xchg
movsb
xchg
divb
sub
pop
sbb
mov
lea
cld
mov
push
lret
pop
jno
pop
dec
fcomi
mov
push
jbe
and
xchg
push
cmpsl
push
das
xchg
ja
lods
fld
lret
fdivl
add
out
in
mov
jmp
adc
dec
out
inc
xchg
mov
or
push
out
adc
test
jmp
and
loope
dec
xor
dec
lcall
insb
outsl
lock
out
adc
std
aas
outsb
mov
daa
mov
pusha
addr16
inc
dec
sbb
ror
and
lahf
or
fwait
mov
into
mov
cmp
jmp
mov
pop
dec
repnz
jne
pop
cmpsl
movsl
fsubrp
push
push
add
imul
add
out
inc
jp
mov
decb
sbb
fcoml
sbb
dec
cmpsl
imul
pop
push
add
sti
scas
dec
sarb
pop
out
and
out
dec
out
lahf
rclb
inc
dec
add
adc
xchg
inc
mov
pop
test
addr16
loop
push
lret
dec
inc
popl
ss
add
hlt
leave
inc
cmp
cmp
push
xchg
call
pop
and
sbb
cmpsl
mov
cmp
rcl
cwtl
cmpsl
pusha
fs
call
adc
cmpsb
cmp
in
insb
inc
in
repnz
movsb
sbb
pop
lcall
loope
frstor
mov
orb
lret
mov
sti
cmc
push
and
pop
lahf
aam
fs
in
xchg
js
popf
ljmp
dec
outsl
push
push
insl
in
adc
inc
sub
pop
sbb
rolb
sbb
scas
aam
cli
mov
xchg
clc
push
out
inc
and
xchg
jbe
out
dec
mov
leave
push
pop
sub
xchg
dec
xchg
inc
jl
ja
pusha
cmp
movsl
xchg
lods
add
sub
scas
mov
or
jmp
push
xor
and
or
add
out
lock
xlat
cli
sbb
mov
lds
fwait
aam
and
xor
into
mov
or
mov
sahf
sub
or
lahf
sbb
mov
adc
xchg
imul
jb
dec
in
mov
push
or
xchg
arpl
lock
fisubrl
sub
cs
pop
insb
andb
decb
and
xchg
fcomi
push
pop
sbb
dec
in
push
inc
jns
scas
cmc
sub
jge
cmp
std
movsb
push
shl
sbb
cmp
test
in
popl
test
lods
sub
xor
popf
sbb
sub
jg
aam
das
xchg
adc
mov
xchg
or
aad
pop
popf
scas
repnz
or
xchg
lcall
mov
loopne
add
jae
or
and
mov
pop
mov
mov
and
pop
mov
sub
shrb
shrl
or
push
sbb
pop
pushf
add
mov
bound
jmp
push
lods
std
clc
pop
xchg
push
fdecstp
sbb
inc
mov
add
es
les
iret
mov
out
push
pop
xchg
jg
out
mov
xorl
mov
aam
fs
je
rorb
jne
insl
jae
push
adc
dec
out
gs
stos
fldln2
mov
cmp
and
or
into
lods
pop
xchg
cmc
xor
and
pavgb
lret
fwait
subl
jle
add
inc
aas
mov
xchg
in
ret
outsl
scas
jnp
or
cmp
into
fucom
mov
in
jno
push
pop
test
mov
rolb
into
into
scas
jmp
jns
test
insl
call
push
inc
xor
lret
in
lods
xchg
data16
cmp
xchg
push
jmp
pop
and
cmp
adcb
inc
inc
lcall
dec
rorb
push
leave
adc
jl
in
imul
insb
push
or
dec
xchg
int3
add
adc
sbb
adcl
js
call
mov
imul
xchg
fs
call
out
xchg
jnp
fs
add
xor
mov
ja
or
and
bound
ja
out
sbb
cld
stos
inc
popfw
or
data16
mov
fsubl
or
in
out
bound
push
mov
or
fistl
in
add
cli
jno
dec
sbb
dec
je
mov
cmp
je
jae
push
push
and
int
aaa
inc
jno
inc
sub
mov
jbe
out
clc
mov
daa
bswap
test
push
or
and
les
push
test
fldl
cwtl
sbb
add
test
add
pop
ljmp
adc
dec
ljmp
orl
or
cmp
cmp
fimuls
popf
mov
xchg
int3
outsl
adc
loope
sbb
and
sahf
mov
add
adc
je
sub
in
dec
fwait
incb
push
inc
mov
pushf
pop
adc
jo
addr16
jo
mull
xchg
and
inc
push
ljmp
or
inc
mov
cmpsl
pop
dec
adc
dec
mov
lds
xchg
or
sti
in
pop
int
movsl
mulb
insb
dec
pop
arpl
inc
les
repnz
lret
xchg
mov
fwait
push
push
das
xor
lods
fnstenv
out
jb
int3
push
sub
ja
cmpsb
movsb
and
xchg
xor
imulb
or
mov
inc
cwtl
lret
shlb
or
fisttpl
call
xchg
xchg
jbe
sub
or
neg
nop
lcall
es
mov
icebp
mov
stc
and
sub
sbb
pushf
xor
adc
test
mov
jmp
mov
dec
aad
sbb
and
sbb
aas
sbb
fs
inc
aaa
adc
push
mov
test
fcmove
xor
addr16
idivl
call
leave
mov
or
or
mov
sbb
bound
xchg
movsb
cmp
inc
fstl
hlt
push
jnp
lods
push
pop
cmp
mov
pusha
clc
pop
cltd
sbb
movsb
sub
aam
in
xlat
pop
dec
imul
lcall
je
outsl
and
rcr
outsl
xor
cmp
int
xchg
cli
mov
int
jmp
inc
or
jbe
jae
cmc
das
push
into
and
std
in
jae
add
push
jno
insl
subb
mov
cld
fistpl
fs
cmpsb
push
xor
mov
add
mov
pop
lds
bound
ja
in
or
xchg
or
or
lds
mov
mov
popa
jmp
or
test
aas
test
dec
pop
cmp
xlat
call
cmpsl
sti
ficoms
push
dec
lret
xor
mov
mov
cmp
add
sub
aaa
cmp
aam
sahf
dec
inc
fidivs
insl
mov
addr16
jmp
add
lods
xchg
ja
or
sbb
mov
fsts
lret
jle
and
xchg
mov
sbbb
push
mov
fisttpl
addr16
inc
adc
pop
imul
sbb
push
lahf
push
lahf
mov
mov
pop
mov
mov
xchg
xor
mov
mov
pop
stc
cmc
sub
shl
ljmp
lods
insb
jmp
pop
sbb
movsb
and
clc
sbb
lret
and
pop
movsb
fisubl
inc
ja
mov
mov
mov
enter
inc
imul
pop
mov
cmp
push
sbbb
bound
cmp
fldl
mov
addr16
int3
daa
shl
sbb
insl
xchg
lahf
dec
cmp
test
pop
dec
lcall
mov
ds
iret
sbb
push
outsb
push
jo
jp
xchg
cmpsl
clc
sub
sbb
sahf
adc
pop
sbb
cld
fimull
mov
sub
xchg
cmp
push
ja
int
cwtl
scas
xor
xor
cmp
jg
fs
sbb
fnstsw
fcompl
mov
mov
dec
je
inc
mov
xchg
das
fdivrs
adc
pushf
inc
decl
sbb
mov
icebp
sub
in
push
xchg
jle
pusha
cld
loopne
inc
or
cmp
pop
adc
fstpt
repz
dec
jmp
and
xor
and
int3
popa
xchg
bound
inc
jbe
push
xchg
and
dec
dec
imul
cld
and
jmp
shlb
mov
mov
adc
int3
xlat
xor
inc
negb
in
add
pop
scas
mov
into
enter
sbb
dec
mov
in
scas
shll
pop
or
movsl
ljmp
jmp
xchg
xor
dec
loop
das
fidivl
push
pop
xor
push
sbb
jmp
adc
add
cmpsb
movb
push
sar
pusha
in
mov
inc
add
dec
das
pop
bsf
mov
adc
pusha
sub
mov
inc
jne
shl
and
xchg
push
sahf
cmp
cwtl
pop
fdivrl
push
int
adc
stos
aaa
repnz
shrl
scas
into
bswap
leave
xchg
sub
iret
pop
mov
notb
jmp
and
add
sbb
inc
mov
inc
adc
je
adc
shll
add
push
call
movsl
jmp
and
and
mov
testl
add
mov
push
cmpsb
cmp
mov
cmpsb
movsl
jmp
loope
cmpsl
ret
inc
out
adc
pop
subl
stos
dec
xchg
cmpsl
xchg
xor
loop
jmp
or
xlat
xchg
dec
and
pop
rcrl
dec
scas
pop
add
scas
fsubl
mov
sahf
loop
add
mov
mov
lock
inc
jge
mov
pop
shl
jmp
repnz
cmp
jbe
out
and
xchg
add
jecxz
arpl
pop
imul
or
sub
ljmp
jne
fcoml
fnstenv
xchg
sub
imul
cmpsb
mov
cmp
cli
or
sbb
popa
in
xchg
adc
inc
hlt
mov
cmp
clc
mov
push
pop
or
xchg
cmpsb
mov
add
and
xor
adc
sbb
add
adc
push
and
jl
std
dec
add
xchg
iret
or
mov
mov
mov
notb
pop
cmpsb
sti
xor
ds
cmp
addr16
lds
cmc
test
dec
enter
pop
out
sahf
out
pop
dec
call
pop
call
dec
xor
js
adc
push
add
repz
xor
sub
mov
out
xchg
mov
or
dec
mov
or
inc
jp
or
or
pop
xchg
and
sbb
out
loop
inc
push
fdivrl
lret
mov
testb
cld
data16
divb
shrb
mov
lret
jb
or
xchg
popa
mov
fwait
jnp
sub
xchg
inc
mov
enter
adc
fstpt
aas
pop
lea
inc
fmuls
and
hlt
pop
dec
test
cmpsb
movsb
addb
cmc
lret
enter
push
sub
mov
negb
jo
lds
add
sahf
jne
fildll
xor
into
ret
push
testl
or
sbb
fwait
aas
mov
jp
xchg
or
inc
mov
aam
mov
adc
pop
insb
pop
mov
inc
shll
jmp
dec
ficoms
cmp
mov
mov
xor
fs
jl
add
out
xor
loopne
aam
fidivrs
add
fdivs
pushf
xchg
int3
jmp
push
je
stos
add
sbb
scas
adc
or
aaa
iret
mov
sbb
ss
inc
push
or
lret
out
je
mov
enter
mov
psllq
add
inc
bound
inc
bndldx
sub
pop
out
and
mov
imul
xchg
inc
inc
sbb
inc
out
addr16
xor
sub
inc
dec
pop
inc
sub
and
push
push
or
sarb
test
push
push
sbb
xor
dec
pop
in
pop
aad
popaw
xchg
outsb
push
xchg
int3
or
cli
adc
jmp
mov
or
mov
inc
xor
mov
ljmp
sbb
mov
test
hlt
push
cmc
into
and
out
xchg
dec
enter
enter
mov
push
jmp
in
leave
xor
orl
jge
lds
je
les
mov
fbstp
or
pop
mov
add
pop
lods
sub
sbb
xchg
arpl
ljmp
aad
out
fiadds
sub
jecxz
mov
sahf
pushf
mov
addr16
rorb
insl
inc
sbb
pop
pop
mov
repz
sub
jmp
and
sbb
or
push
lds
lahf
xor
int3
outsb
inc
mov
or
repz
cli
sbb
push
or
or
movsl
xchg
fiadds
test
leave
inc
pop
aam
leave
sti
add
jmp
xor
pop
dec
or
mov
cltd
push
push
jne
pop
sbb
or
addl
mov
lret
push
inc
test
ret
cltd
pushf
inc
sbb
pop
pop
out
insl
mov
or
sbb
js
jmp
orb
aas
xor
mov
cmp
xchg
loope
inc
call
add
call
or
cmp
lret
cmp
dec
mov
sbb
sbb
dec
fisubl
popf
push
ficoml
adc
fistpl
imul
xchg
mov
aam
ljmp
sbb
and
int
in
lcall
xlat
dec
dec
or
daa
push
mov
clc
jecxz
push
xor
adc
add
lds
pop
or
push
aam
subb
fisubrl
rcrl
dec
add
cmp
and
pop
pop
out
mov
add
sbb
lds
int
mov
or
and
pop
inc
enter
adc
mov
mov
test
jae
jmp
sahf
and
or
xchg
xorl
dec
mov
add
cld
insb
std
repnz
push
aas
add
pop
push
cld
fisttpll
movsl
mov
leave
push
leave
and
sbb
lcall
enter
jne
sbb
mov
fwait
xchg
jb
and
mov
fcmovbe
cmp
or
ss
xor
mov
or
inc
in
push
sub
mov
xchg
pop
jbe
leave
push
inc
fwait
pop
push
addr16
push
clc
mov
mov
push
ficompl
fldenv
insb
sbb
mov
dec
adc
add
push
sbb
sbb
aam
mov
push
pop
pop
mov
cmp
in
mov
inc
adc
mov
xchg
inc
mov
or
xor
shlb
jmp
movsb
jmp
or
jb
enter
mov
push
dec
inc
sbb
adc
cld
aad
rorl
pop
jecxz
cmp
xor
orb
int
sub
in
pop
test
fcmove
mov
cmovs
movsb
adc
inc
add
mov
sahf
and
lds
mov
xchg
mov
add
add
testl
out
pop
pop
sarl
xchg
enter
idiv
push
xchg
repz
shlb
jl
xchg
cltd
fmul
sbb
sbb
mov
sbb
loope
scas
jo
loop
fidivrl
popa
cmpsb
mov
js
lcall
sub
repnz
arpl
mov
inc
xchg
pushf
pop
out
into
or
inc
or
sbb
sahf
cmp
lcall
sbb
dec
fisttpll
lds
add
je
mov
inc
data16
sbb
adc
mov
jnp
adc
dec
std
or
loope
or
mov
jne
lret
dec
aad
cli
or
mov
incb
lds
cmovp
add
adc
fdivl
mov
in
inc
in
addr16
pop
fldl
sub
movsl
fs
dec
xchg
lds
mov
ret
movsb
adc
push
inc
bnd
cltd
in
add
cmp
sbb
jp
data16
pop
popf
mov
xchg
nop
mov
jmp
lret
in
scas
repnz
inc
hlt
inc
push
xor
sbb
and
lods
pop
adc
fs
out
icebp
push
mov
incb
pop
loope
xchg
icebp
inc
cmp
inc
add
cmp
cld
jae
fimuls
and
sti
arpl
movsl
pop
int
mov
or
sahf
xor
adc
add
add
lcall
sbbl
adc
shl
adc
push
data16
or
inc
mov
out
mov
sahf
xchg
scas
les
jne
ds
lea
mov
insb
fcmovne
sub
adc
or
adc
add
les
xchg
or
push
fs
xor
stc
add
push
xchg
mov
mov
dec
adc
scas
inc
fisubrl
lods
ds
pop
xor
dec
pop
fs
push
lcall
and
jnp
loop
lret
jg
hlt
xor
stc
fsubl
mov
leave
xchg
dec
pop
mov
cmp
sub
mov
add
add
adc
int3
or
ja
cmp
adc
adc
xor
testl
mov
outsb
add
pop
pop
mov
push
fldl
cmp
adc
push
sbb
inc
adc
mov
outsl
inc
xchg
popa
xchg
jno
pusha
sub
or
ror
mov
lds
sbb
xchg
mov
xchg
mov
adc
out
shl
fsubrs
pop
hlt
mov
out
add
cmp
cld
and
es
in
out
les
or
popf
mov
mov
pop
jb
add
cmpsb
mov
sbb
es
mov
or
fisttpll
sbb
xchg
nop
xchg
inc
outsl
nop
cmc
mov
mov
cmpsb
mulb
addps
dec
aam
xchg
enter
in
add
xor
and
shll
push
jmp
rorl
test
mov
jbe
sbb
adc
lret
add
pop
jecxz
in
push
mov
dec
insb
cmpsl
add
inc
popl
loope
sbb
jmp
push
pmaxub
ds
pop
fs
dec
cwtl
push
leave
stos
inc
jmp
mov
push
icebp
xor
pushf
xchg
mov
inc
or
jmp
and
loope
push
or
fchs
push
scas
inc
xor
xchg
mov
sub
add
xor
fdiv
popa
mov
cs
sub
and
push
sbb
scas
push
mov
and
out
sbb
outsb
or
jl
rclb
xor
sub
daa
sbb
les
or
push
mov
fisttpll
sbb
mov
pusha
jmpw
jmp
inc
sbb
mull
sub
dec
int3
ss
pop
mov
jne
cmp
xchg
adc
rorb
popa
or
pop
mov
in
mov
pop
aas
mov
mov
ljmp
push
jl
and
stos
and
mov
mov
inc
jp
push
enter
add
xor
adc
xchg
adc
mov
jle
xor
movsl
in
cld
out
xchg
pop
out
xor
sti
les
pushf
cmp
mov
fwait
sarl
jne
jb
push
js
push
push
pop
cmpxchg
mov
in
or
lea
jne
leave
jl
aam
or
mov
fsubrp
sbb
sbb
mov
xor
fildll
jns
in
xor
mov
fcomps
sbb
inc
inc
mov
lds
loope
scas
jg
fld1
dec
xchg
or
loop
out
adc
shlb
in
out
mov
cmpsb
rorl
push
mov
icebp
mov
sbb
mov
dec
jns
push
inc
xchg
mov
xchg
mov
mov
pop
aad
fldenv
inc
int3
push
lcall
or
insl
clc
inc
aas
mov
icebp
pushf
imul
leave
inc
push
or
daa
lret
and
popa
add
popf
xor
inc
pop
ljmp
idivb
lret
sbb
mov
cmp
jnp
cmp
aam
cmp
mov
rcrl
das
ret
xor
jmp
add
leave
mov
and
insl
lods
cmp
sbb
push
mov
idivl
test
xchg
xchg
or
adc
shrb
int3
pop
and
int
in
leave
xchg
and
or
push
in
inc
mov
inc
dec
mov
leave
and
xchg
lret
cmpsl
jcxz
cmp
cmp
push
enter
jbe
fs
xor
mov
mov
inc
adc
lods
and
pop
adcl
mov
decb
rcll
gs
sub
ss
dec
inc
push
sbb
mov
std
push
mov
mov
add
pop
push
sub
dec
sbb
orb
sub
jo
loope
sub
cmp
int3
and
xchg
mov
jg
push
mov
and
imul
call
gs
into
pop
push
jbe
adc
sbb
add
rcrb
fwait
add
adc
jmp
in
push
jo
imul
ss
adc
js
aad
fsubl
pop
pop
inc
mov
and
arpl
dec
test
or
jbe
pop
aam
movsb
pop
lret
pop
fwait
outsb
pavgw
mov
loop
and
mov
insl
xchg
and
imul
shr
mov
das
jecxz
out
arpl
dec
cs
sbb
xchg
or
icebp
cltd
sbb
notb
sub
and
decl
cld
mov
xor
and
pop
sub
pushf
cmp
daa
shl
mov
loope
and
pop
sbb
adc
leave
add
cli
cmp
insb
popa
dec
sub
or
and
fisubl
lods
or
xchg
push
mov
and
mov
mov
add
sar
push
loopne
sub
inc
cmp
xchg
iret
les
imul
clc
or
xchg
cmpsl
out
sti
lods
xchg
fdivr
out
xlat
fcmovb
or
mov
movsl
push
mov
pop
mov
loopne
cmp
pop
dec
sahf
dec
sub
and
sub
mov
iret
pop
iret
sbb
cmp
xor
out
push
or
popa
jo
adc
mov
pop
and
and
xchg
addr16
pop
scas
jbe
sbb
xchg
mov
mov
jo
ret
leave
xor
xchg
cld
xchg
xchg
or
or
cmp
ret
jmp
jle
imul
scas
test
call
or
mov
in
sbb
out
jns
movsl
setne
cmp
jns
cmp
rolb
sbb
push
insb
xchg
xor
lret
jnp
dec
add
test
push
ljmp
push
jbe
add
mov
mov
inc
popf
sub
lahf
sub
push
stos
cmp
sbb
scas
add
or
outsb
xchg
gs
int3
jae
inc
sbb
dec
out
orl
xor
dec
mov
xchg
in
popa
sbb
sbb
push
or
mov
out
or
adc
test
or
sbb
sbb
jecxz
xchg
add
pushf
mov
sti
movsl
out
mov
cmc
mov
sbb
in
test
fnstcw
mov
sbb
or
mov
push
inc
jbe
and
fstp
in
test
negb
inc
shl
jne
and
inc
push
inc
test
cmpsb
mov
fadd
xchg
push
and
fmull
inc
cmc
mov
inc
or
adc
inc
xorl
xchg
xchg
adc
mov
leave
stos
add
adc
adc
or
es
fwait
insb
jae
adc
pop
jnp
lods
scas
pushf
dec
mov
bndldx
sti
pop
xchg
ds
mov
push
xor
aam
add
sub
fcoml
cli
sbb
imul
daa
jecxz
pop
adc
fs
aaa
jmp
jle
or
in
test
jne
lcall
and
incb
idiv
xchg
dec
add
rcrb
adc
out
xchg
cmp
xor
iret
or
xchg
xchg
cmp
sbb
jg
hlt
ja
in
or
pop
popf
or
sbbl
push
mov
icebp
xchg
push
jbe
out
movsb
add
arpl
mov
subl
sbb
sbb
test
mov
loope
js
inc
test
mov
push
into
adc
lret
std
mov
xchg
and
cmpsb
cmpsl
bound
lahf
nop
sub
stos
cli
dec
mov
iret
adc
xchg
mov
dec
call
out
fmul
dec
imul
int
pop
push
or
out
data16
inc
enter
sub
push
pop
lods
outsl
or
stos
sbb
mov
inc
mov
mov
inc
shll
sub
into
int3
mov
mov
test
mov
xchg
fsubrs
pushl
mov
insl
and
inc
js
add
mov
dec
dec
std
push
sbb
call
sbb
and
ficompl
push
inc
outsb
int
mov
les
push
mov
add
jp
inc
add
in
xor
jae
cmc
xor
jmp
loop
jo
inc
add
insb
out
mov
outsl
dec
pop
into
jp
or
enter
roll
jne
shlb
and
insb
sete
out
sbb
leave
or
lret
frstor
mov
testb
adc
xor
or
push
cmp
sbb
repnz
mov
aaa
lods
ja
and
jmp
push
push
fdivr
call
hlt
and
add
loopne
cmp
fwait
inc
add
bound
pop
dec
aam
movsb
loope
or
and
and
xor
insb
cmp
mov
mov
pop
cmp
movsb
aam
dec
aaa
fisubs
enter
and
movsb
push
shrl
out
shll
insb
out
dec
icebp
rorb
jo
cmp
shlb
jle
test
sub
test
pop
mov
jne
jp
adc
scas
pushf
add
or
outsb
push
int
mov
fadds
inc
mov
icebp
dec
fwait
add
jmp
std
mov
fdivl
hlt
fwait
jmp
sub
inc
sub
imul
sbb
mov
mov
cmp
data16
xchg
xchg
cmc
cmpsb
addr16
mov
repz
out
or
jne
sub
inc
nop
test
dec
adc
mov
imul
cmpsb
mov
dec
jecxz
ret
pop
in
inc
mov
adc
cmp
dec
push
std
add
dec
inc
or
sahf
and
test
xor
and
mov
pop
xor
xchg
xchg
and
sahf
push
lock
xchg
pop
daa
lahf
or
dec
and
inc
or
pop
testb
dec
in
sub
push
xchg
mov
push
es
stos
inc
je
pop
movsl
dec
mov
sti
mov
ja
pop
out
push
pop
int
test
outsb
xor
decb
out
cmpsb
cmpsb
and
and
or
inc
adc
mov
or
cmpsb
xchg
jno
sub
lcall
sbb
or
mov
es
jmp
push
pop
and
addr16
and
in
fnsave
push
and
sahf
and
add
mov
mov
add
mov
cwtl
mov
xchg
push
sbb
test
mov
push
jb
movsl
jp
icebp
setb
pop
sbb
fists
or
int3
and
or
pop
xchg
mov
push
addl
add
fiaddl
loope
mov
jle
and
movsb
sahf
and
ds
pop
and
fcompl
mov
sti
pushf
cmpsb
adc
add
mov
xchg
rorb
add
xchg
pop
or
outsb
loop
push
shll
pop
orb
jge
jp
add
sbb
addr16
nop
lea
add
sbbb
adc
aad
sahf
mov
mov
popf
mov
repz
push
cld
mov
mov
mov
ficomps
and
mov
and
bound
mov
or
xchg
xchg
xchg
pop
shlb
rolb
xor
pop
mov
fisubs
mov
add
mov
pop
out
std
sahf
std
pop
stos
mov
cmc
and
in
cltd
sahf
or
and
in
fimuls
les
pop
or
xchg
xchg
xchg
lea
les
setbe
xchg
frstor
dec
jmp
adc
pop
arpl
outsl
or
cwtl
enter
out
mov
mov
sbb
and
imul
and
or
add
mov
movsb
ljmp
sti
test
insl
cs
movsl
fisubl
call
dec
subl
test
fdivrl
mov
or
sub
xchg
fs
dec
insl
stos
dec
ss
jmp
sbb
jecxz
inc
insl
mov
movsl
sbbl
inc
add
adc
lock
and
ret
in
push
pop
test
loop
and
sbb
jne
roll
push
xchg
cmp
lock
push
ljmp
dec
fidivrs
rcrb
jbe
pop
pop
cmp
mov
jecxz
neg
mov
jmp
pusha
mov
clc
jne
cld
lock
jbe
dec
or
mov
aas
dec
or
cmpsb
iret
push
cmpsb
mov
or
hlt
mov
mov
jmp
jmp
ss
sbb
scas
sub
inc
add
mov
xor
das
jl
loop
inc
add
nop
rcll
outsb
insl
mov
outsb
inc
sub
pavgb
dec
sub
dec
cmp
iret
sbb
or
cmp
push
or
pop
outsb
scas
pop
push
insl
test
loop
push
mov
aam
fmull
stos
popa
lcall
push
fistpl
lcall
sub
mov
mov
dec
mov
iret
ret
jmp
adc
adc
in
and
ss
in
or
pop
sbb
into
lcall
cwtl
jnp
xchg
push
pop
icebp
push
lods
sbb
mov
pop
mov
jnp
out
sbb
test
loopne
in
jecxz
out
jmp
jno
divl
into
mov
jb
sarb
cmp
icebp
out
and
or
outsl
jmp
es
or
sbb
or
mov
in
or
in
aaa
lret
lahf
out
subl
cld
mov
push
xchg
mov
and
push
push
inc
sbb
stos
push
xchg
dec
pusha
lods
mov
leave
jmp
ljmp
xor
xchg
or
rclb
cmp
into
dec
es
or
inc
sbb
sub
je
mov
xor
cmp
jle
pop
dec
ss
cmp
or
mov
dec
scas
les
pop
daa
sbb
sub
and
ret
mov
push
dec
add
jg
xchg
push
and
daa
xlat
sub
push
sub
adc
sub
push
add
and
cmpsb
loopne
mov
adcl
cwtl
inc
outsl
mov
mov
stos
adc
inc
pop
push
sti
addr16
or
sub
mov
or
adc
enter
mov
jmp
or
inc
mov
je
shlb
push
xor
rcrl
or
pop
pop
sbb
and
out
lock
xchg
bswap
mov
stc
cmp
loopne
mov
adc
mov
mov
sbbl
and
je
xchg
sbb
cld
cli
sbb
xchg
filds
mov
cmpsl
and
or
dec
cmpsb
notb
inc
stos
inc
ror
scas
sahf
sbb
insb
int3
or
cmovnp
push
sbb
xchg
mov
inc
pmullw
inc
je
xchg
test
daa
or
insl
xchg
mov
repnz
out
cmp
in
mov
out
push
rcrb
adc
loop
orb
or
jl
lods
sub
mov
push
jge
mov
xlat
jne
sbbb
push
test
sub
pop
movsl
rorl
shl
dec
or
mov
jge
lock
and
loopne
aaa
cmp
push
outsb
in
rcll
cmc
sbb
aaa
movsb
sbb
inc
jb
and
adc
repz
popf
or
or
xchg
fldenv
adc
sbb
add
cmp
or
xlat
xor
add
fcmovu
and
sbb
popa
popf
sbb
rcll
mov
mov
lcall
mov
add
cwtl
out
aaa
jmp
and
subb
jl
mov
mov
sub
loop
lret
pop
mov
movsl
in
push
cmp
aam
or
addb
push
cmpb
inc
es
lahf
adc
push
les
iret
enter
jbe
push
cmpsb
das
dec
aaa
and
or
mov
div
test
es
in
mov
orb
or
js
sti
xchg
call
lahf
xor
in
cli
fisttpl
les
mov
fadds
cs
sbb
lds
xchg
xchg
xlat
mov
leave
inc
stos
sbbl
add
out
andb
push
je
ja
push
push
leave
lret
sbb
int
bound
mov
imul
jg
fstl
out
into
inc
jbe
lds
xchg
icebp
push
inc
cmpsl
pushf
out
inc
sbb
sub
pop
addr16
mov
ffreep
add
pop
sbb
movsb
or
mov
lret
pop
inc
addr16
push
bound
insb
pop
pop
mov
test
into
out
inc
and
mov
mov
scas
lea
jb
ljmp
xlat
out
dec
ret
dec
test
sbb
and
mov
jge
push
icebp
idivl
xchg
xchg
movl
cmp
adc
add
sbb
cmp
decb
xchg
cmp
pop
loope
cmc
dec
dec
mov
xchg
sbb
jge
xchg
lea
sub
fildl
inc
mov
push
or
pop
out
adc
outsb
lcall
roll
mov
clc
cmp
push
call
pop
movsl
aas
push
loopne
mov
negl
or
dec
jo
mov
adc
out
xchg
rolb
add
repz
add
or
push
and
aaa
inc
outsb
negl
pop
add
sub
jmp
pushf
xchg
into
movsl
test
mov
jnp
fcmovne
std
ret
xchg
es
jb
add
or
enter
sbb
sarl
xor
cmp
ljmp
inc
xor
ljmp
pop
xor
mov
inc
jno
push
inc
bsf
leave
mov
xchg
pop
popl
mov
les
andb
mov
movsl
filds
and
pop
add
xor
lods
or
bswap
data16
sbb
pop
outsl
sub
pop
in
icebp
mov
mov
leave
pop
dec
faddl
dec
or
dec
push
outsl
dec
fs
fistl
fistpl
and
movb
pop
xchg
add
mov
push
cmp
adc
jmp
pushf
pop
ret
pop
push
mov
sbb
das
insl
js
addr16
mov
aaa
fcmovnbe
xchg
mov
mov
jnp
or
cld
sub
add
jge
jae
inc
pushf
out
mov
pop
dec
mov
mov
lret
dec
andl
movsl
dec
scas
mov
mov
mov
and
mov
arpl
adc
or
xchg
mov
into
xchg
inc
lahf
in
add
ja
sbb
mov
or
lret
fcmovnu
loope
or
and
sbb
fwait
or
inc
and
pop
push
sbb
mov
xchg
fmull
or
mov
ljmp
into
test
movsl
pop
pop
inc
cmp
and
mov
in
in
sti
mov
mov
xchg
push
jne
jl
jge
lret
lods
jmp
in
jecxz
inc
pop
and
xor
ret
jns
sarl
push
int3
es
je
add
inc
enter
sub
inc
daa
rcl
insb
push
and
mov
pop
shll
xchg
pop
sbb
orl
es
pop
sti
jg
sub
xchg
mov
fidivrl
inc
in
jl
pushf
imul
out
xorl
addr16
popa
and
call
iret
or
xchg
sbb
sahf
orb
rclb
and
stos
nop
push
inc
dec
ja
mov
push
ficoms
sahf
lods
jbe
jns
xchg
jmp
cmp
pop
jmp
add
xor
out
jbe
xchg
out
fucomip
xor
dec
cld
rcrb
ds
pshufw
insb
jmp
mov
cmpsl
push
cmp
push
cmpsb
xorl
mov
xchg
jb
pop
pop
mov
jmp
cs
or
xchg
mov
jne
pop
popa
or
or
mov
pop
pop
xchg
xchg
pop
jl
jne
ret
push
cmp
xchg
add
push
sub
add
cli
sbb
adc
insb
sbb
std
shll
lcall
inc
mov
rcl
pop
lret
insl
hlt
loope
scas
mov
stos
sbbb
xor
jne
adc
adc
push
jl
cmp
imul
adc
inc
aas
or
fildll
jbe
push
lods
sbb
add
dec
push
add
jp
scas
cli
leave
sahf
push
xchg
inc
leave
fwait
adc
jmp
pop
xchg
scas
test
xchg
ljmp
dec
or
or
jmp
pop
lods
lods
or
mov
sub
inc
dec
sbb
mov
xchg
push
push
jbe
fisttpll
pop
cmc
xor
or
xchg
lahf
loop
jno
dec
test
adc
int3
or
inc
cmp
repz
mov
outsb
dec
push
xor
and
fucomip
add
mov
popa
adc
imul
cmpsl
mov
mov
adc
push
mov
fisubs
bound
int
xchg
cmpsb
add
leave
adc
xchg
mov
aad
ret
mov
test
into
int3
aaa
adc
stos
arpl
sbb
in
push
jmp
push
int3
xchg
pop
mov
jp
das
adc
out
and
pop
aas
sbb
mov
cmp
push
andb
lahf
push
popf
pop
das
and
and
aas
sahf
inc
or
loope
mov
inc
or
jo
ja
mov
and
je
adc
and
push
rcrb
jae
mov
cmpsl
andl
call
pushf
cmp
out
add
mov
or
movsb
add
push
inc
push
loope
or
add
movsl
movl
adc
lret
in
loope
pop
xchg
adc
sbb
xchg
and
push
and
push
or
fsubrp
int3
orl
xor
test
or
or
pop
push
and
subb
testl
xor
xor
in
shr
dec
dec
xor
js
jb
int3
int
idiv
outsb
insb
mov
shll
into
fs
xor
mov
push
dec
mov
or
ret
std
test
jo
sbb
cmp
push
xchg
inc
mov
adc
pushf
into
push
adc
ss
jmp
lds
pop
xor
pop
add
roll
mov
xchg
sub
pop
sub
sbb
mov
rclb
aas
pop
inc
mov
cmc
sbb
pop
mulb
mov
add
add
sar
and
shll
push
hlt
mov
inc
dec
cmpsb
sbb
pop
mov
stos
popa
lds
outsb
dec
jmp
xchg
in
or
and
push
mov
call
dec
mov
rorb
movsb
xchg
lea
or
xchg
negb
lret
aad
popa
lcall
mov
xor
or
std
dec
xlat
mov
push
push
stos
into
lds
test
xchg
int3
push
cmc
pop
and
sbb
lret
pop
adc
out
sub
cli
push
inc
push
inc
add
mov
sbbb
sti
pop
jbe
mov
mov
cmp
and
cmpsl
aaa
movsl
cmc
inc
jle
xchg
inc
push
xchg
lea
adcb
inc
andps
sarb
xchg
sub
clc
lcall
xchg
jmp
push
outsb
out
or
ss
imulb
jae
imul
cwtl
out
inc
push
cmp
cs
pop
div
mov
jle
mov
jae
push
push
sbb
int
push
pushf
mov
mov
sub
shl
mov
sbb
out
scas
ljmp
xchg
out
inc
pop
mov
xchg
xchg
mov
inc
popf
movsb
out
mov
rcrl
cmp
dec
lcall
rcrb
scas
into
add
xor
mov
in
cmp
je
daa
sub
mov
loopne
xlat
and
sbb
aas
mov
outsl
aam
pop
jl
mov
lods
inc
sbb
jl
ja
cwtl
inc
jmp
rorl
unpckhps
cmpsl
insl
fs
mov
xchg
sub
cmp
mov
adc
pop
pop
mov
push
dec
or
je
cli
inc
xchg
aas
cs
test
jl
jp
adc
mov
adc
xchg
sbb
adc
jp
cs
mov
movsl
ljmp
xor
daa
out
rol
dec
or
adc
outsb
inc
or
pop
dec
sub
in
adc
mov
xchg
enter
mov
adc
lods
sub
insl
popf
imulb
mov
rolb
sub
pop
push
pusha
jecxz
lahf
and
mov
dec
ja
aas
out
sub
sahf
adc
and
out
jnp
push
daa
lret
cmp
mov
aaa
out
in
mov
cmpsb
xor
cmc
out
int3
add
jp
push
sti
mov
pop
ret
lret
mov
sbb
fsts
jae
insb
fistpl
into
dec
pushf
jmp
or
mov
lret
dec
fdiv
es
push
push
mov
mov
aam
push
into
jb
into
sbb
mov
out
hlt
cltd
dec
imul
sbb
stos
inc
xchg
int
dec
push
mov
pop
pushf
cmpsb
lcall
sbb
inc
sub
inc
aad
dec
int
rorb
lock
add
xlat
mov
xor
sbbb
in
jp
dec
and
les
int3
push
les
mov
mov
lea
mov
or
mov
add
scas
outsl
es
adc
aaa
addb
test
mov
jge
mov
cmp
jbe
xchg
push
loop
pop
cmc
aas
push
fucomip
jle
mov
cmpsb
popf
or
mov
mov
or
into
imul
scas
mov
lds
xchg
sub
pusha
pop
or
popf
test
movsb
int3
js
and
stos
cmp
push
in
mov
xchg
jmp
inc
rol
sub
jnp
cmc
nop
enter
inc
add
jb
push
and
mov
notb
sbb
scas
xchg
xrelease
cld
xchg
cmpsb
push
hlt
cmp
and
dec
int
jl
jmp
imulb
test
and
popa
sub
pop
cmp
dec
out
pop
fsubrs
or
mov
sbb
mov
mov
pusha
fwait
je
loopne
inc
sahf
mov
mov
push
mov
inc
inc
jmp
test
ljmp
hlt
mov
aam
adc
mov
orl
jne
stc
mov
or
insb
xchg
push
pop
shlb
mov
std
aaa
add
cwtl
jne
in
pop
insl
out
inc
outsb
mov
inc
pop
cmc
and
int3
aas
mov
cmp
cmp
or
std
xchg
push
jg
jno
add
int
loopw
mov
mov
int3
outsb
fsubs
out
in
in
jecxz
pop
sahf
test
mov
mov
pop
leave
jnp
das
pop
and
fwait
cmp
out
inc
ds
ss
dec
in
jmp
dec
movsb
jnp
mov
xor
fists
adc
cwtl
out
push
inc
sbb
out
rcll
aaa
cmpsb
inc
lds
arpl
addr16
aam
cmp
stc
idivb
inc
pop
or
out
repz
and
cmp
mov
or
pop
dec
in
xor
xchg
flds
std
js
adc
cli
cmp
jp
jnp
xlat
jb
fnsave
ret
push
adc
mov
and
inc
push
cs
push
cwtl
pop
pop
xorl
mov
jne
push
xchg
mov
inc
jbe
fisubl
les
inc
fnstsw
bswap
in
jl
xchg
or
cmovns
or
push
pop
in
pop
or
sub
mov
sub
into
pop
cmp
or
add
in
cmp
jecxz
or
imul
aam
jecxz
imul
sahf
loop
mov
jmp
loopne
pop
inc
mov
aas
cmp
cmpsl
xchg
imul
jae
repz
xlat
repz
inc
gs
shll
fistl
bound
mov
pop
fisubl
jbe
mov
xor
sbb
and
pop
xor
insl
jmp
fsub
fcoml
mov
push
xor
out
in
xor
xchg
cmp
jb
sbb
pushf
mov
inc
cmp
mov
jge
mov
je
or
repnz
jae
int3
cmc
or
or
cmp
push
dec
adc
jae
jecxz
jne
push
inc
xchg
fucom
jno
mov
out
scas
sub
daa
rorb
fsubrl
faddp
dec
sbb
inc
mov
imul
or
cmp
ja
jo
dec
cmpl
inc
cmp
mov
or
jp
xchg
out
cmp
jmp
or
push
adc
mov
add
pop
dec
cmp
or
sti
jmp
sbb
pop
fimull
jbe
sbb
or
mov
mov
in
rcrb
pushf
sti
lods
rcll
jnp
aam
adc
xchg
scas
adc
sbb
jg
loop
mov
cmpsb
mov
fistl
stos
sbb
scas
inc
sbb
mov
arpl
jb
sbb
and
pop
xchg
rcrb
nop
jo
push
addl
xorl
inc
push
pop
add
or
cld
push
lock
les
sbb
inc
cld
jbe
pushf
sahf
adc
and
mov
dec
xor
sarb
dec
add
xor
jl
add
dec
mov
pop
divb
xchg
xchg
jmp
jb
mov
or
jo
ret
mov
cs
mov
in
adc
ds
pop
daa
outsb
outsb
ss
or
xlat
sub
inc
mov
test
in
xchg
mov
cmc
movsl
xchg
inc
pop
popf
sub
cmp
stos
pop
jo
or
cmpl
and
popa
mov
sbb
jb
and
rorl
movsl
jmp
in
in
or
jnp
inc
add
push
inc
int3
or
xchg
jae
mov
dec
in
fadds
mov
inc
xchg
mov
push
inc
lds
addr16
cld
xor
leave
les
addl
out
xchg
mov
lods
dec
sahf
fsts
inc
es
push
test
push
pop
lahf
adc
pop
sub
data16
cmp
push
push
ss
cmp
sub
fimull
fiaddl
xchg
movsb
sarb
je
hlt
dec
test
cs
sub
pcmpeqw
add
push
sbb
clc
fcmovb
cmp
lock
jg
sub
leave
sub
adc
xchg
lret
xchg
sarl
xchg
ficomps
andb
pushf
fs
mov
nop
ds
bound
jb
jg
lret
insb
lods
pop
les
les
add
adc
sub
mov
ficompl
es
out
push
loope
dec
imul
vunpcklps
out
or
lea
push
inc
or
xor
inc
jmp
dec
mov
xchg
int3
rcll
sbb
or
sbb
test
mov
or
sbb
and
sub
push
push
xchg
xchg
ljmp
stos
sbb
out
xchg
xchg
std
add
cmp
testl
rcrl
das
clc
jmp
sub
add
mov
xchg
hlt
push
or
sub
shrb
aas
sbb
add
pushf
fiaddl
sbb
inc
or
jbe
inc
sbbb
clc
mov
push
andb
sbb
call
test
shlb
dec
adc
mov
pop
and
sbb
scas
cld
mov
or
std
xchg
fidivs
mov
andb
fisubrl
add
inc
inc
adc
inc
pop
addr16
in
leave
cmc
adc
mov
xor
sbb
xchg
cmp
dec
bound
inc
push
adc
mov
in
mov
inc
and
xchg
shlb
imul
inc
adc
and
dec
or
inc
mov
adc
es
int3
jb
leave
mov
insb
das
lock
loope
jl
xchg
into
cmp
ljmp
or
jns
sub
push
mov
xchg
jbe
sbb
sets
dec
out
out
cmp
cmc
push
and
push
sub
xchg
data16
mov
mov
cmp
inc
repnz
adc
pushf
xchg
inc
ficompl
jl
mov
dec
xchg
push
sub
loop
and
adc
pop
cltd
fstpt
add
mov
cwtl
dec
mov
add
loopne
or
mov
loopne
std
sbb
xchg
add
aam
mov
push
popf
sub
xchg
test
mov
mov
inc
stos
adc
mov
xchg
pop
push
cmpsb
bound
jl
out
or
cmpsb
sbb
jmp
fs
or
adc
pop
cmovns
or
sahf
cmp
xchg
test
mov
push
add
cmpb
xchg
cmp
adc
jecxz
sub
lcall
add
or
mov
les
jg
mov
leave
in
rcr
cld
insb
mov
jb
and
imul
xchg
leave
ffree
je
push
push
je
enter
jo
push
push
xor
adc
xor
adc
pop
jg
dec
dec
cmpsb
icebp
and
je
sub
xchg
daa
into
xchg
cli
movsl
and
out
insb
gs
jb
repz
insl
jl
adc
pop
sarl
mov
xor
lret
loope
pop
jmp
fneni(8087
xlat
or
sti
mov
xchg
add
or
scas
jnp
out
sub
adc
add
lods
iret
cltd
or
test
in
mov
in
test
add
cld
insl
xchg
pop
out
mov
outsl
lea
or
out
fcmovne
pop
dec
jmp
subl
mov
call
mov
jne
mov
lea
jmp
aam
rol
cld
sbb
mov
xor
xor
xor
cmovne
inc
fldt
push
mov
aaa
pop
cltd
mov
push
jae
xchg
sub
sub
push
clc
sbb
shl
lods
cmp
in
inc
and
and
push
push
jb
cmpsl
pop
aaa
loop
pop
ja
loope
mov
add
push
pop
mov
xchg
mov
in
and
mov
jmp
sub
mov
mov
pop
or
xor
push
or
xor
loopne
negl
dec
adcl
mov
test
inc
push
pop
mov
or
jno
comiss
mov
mov
out
mov
jl
push
add
orl
lea
pop
mov
mov
pop
dec
add
lea
jl
xchg
repz
mov
mov
push
mov
mov
dec
mov
nopl
test
jmp
pop
int3
je
lret
inc
xchg
insl
cmpsb
filds
aas
test
xchg
int
xor
shlb
inc
enter
xchg
adc
out
outsl
and
dec
rcrl
mov
fsts
inc
push
pushf
stos
cmp
xor
or
ss
xchg
push
mov
into
cmpsb
ss
adcb
out
ljmp
and
dec
jne
add
pop
jnp
fdivrl
jae
dec
push
cmp
lea
sbb
pcmpgtb
out
adc
or
xor
inc
enter
dec
out
mov
lds
jo
mov
mov
sub
sarb
sbb
jl
xor
jmp
jle
icebp
insb
inc
lret
fistl
es
xchg
pop
sbb
inc
repz
mov
pushf
xchg
sub
sahf
sbb
dec
sub
pop
mov
mov
push
mov
int3
out
stos
inc
xchg
lcall
out
int
sbb
je
xorl
aam
popf
jge
in
adc
cmpsb
dec
push
int3
push
test
cmp
pop
aad
adc
sti
ljmp
cmp
mul
add
les
inc
cmpsl
imul
aaa
push
insb
in
std
inc
rol
call
fs
scas
pop
fs
lds
ljmp
cmp
cmpsb
pop
ss
lock
add
mov
sbb
push
jbe
incb
sub
push
mov
mov
cmpsb
push
jmp
neg
ficompl
xor
sub
inc
loopne
std
cwtl
adcb
mov
test
xor
sbb
lds
or
aam
fsubs
std
das
enter
rcrl
imul
mov
inc
fldt
mov
push
and
stc
push
andb
xor
mov
sti
lds
cmp
sahf
mov
sub
sti
lock
movsl
jne
out
cmp
and
es
and
xorl
and
inc
mov
scas
add
sahf
sub
sub
push
sbb
adc
or
lea
add
cmpsb
cmp
setb
outsl
pop
int3
pushf
mov
xchg
cmc
into
cld
aaa
fcos
orl
cmpsb
adc
mov
jp
lea
stos
hlt
mov
and
outsl
or
mov
pop
adc
hlt
data16
imul
test
test
sbb
sbbl
enter
push
andb
out
mov
or
loope
movsl
adc
add
cmpsb
xchg
push
mov
jmp
inc
and
test
shlb
inc
add
mov
clc
inc
test
lods
popf
out
call
sub
sbb
les
or
hlt
inc
xchg
push
pushf
pop
sbb
mov
fcoml
push
cmp
movsb
iret
sbb
xor
cmpsl
nop
outsb
jb
dec
stos
xchg
inc
push
pusha
jp
int
test
icebp
cmpsb
or
xchg
lods
pop
in
inc
cmpsb
and
leave
cmp
jnp
dec
or
xchg
cmc
loopne
inc
or
pop
sub
inc
lods
call
rcr
or
push
pop
repz
add
xchg
daa
cmpsl
dec
xorb
or
inc
adc
fwait
aam
sub
lret
ficoml
mov
or
or
dec
and
std
cld
loopne
or
out
std
xchg
mov
mov
xor
mov
fnstsw
dec
push
push
les
or
cmp
fists
dec
in
or
push
mov
xor
out
adc
push
inc
xchg
stos
pop
xchg
loope
je
cmpsl
popa
enter
push
movsb
xchg
sub
jmp
xchg
into
out
in
mov
ret
xchg
fnstcw
jle
pop
sbb
repz
cmp
sbb
inc
cltd
pop
push
imul
inc
mov
pop
out
outsb
fwait
or
mov
int3
outsb
movsl
xchg
in
xchg
sub
data16
add
pop
cmp
sbb
ret
push
mov
aam
fwait
xchg
iret
mov
mov
or
dec
fidivl
sti
push
jg
sbb
add
std
cmpsb
dec
outsb
cld
int3
je
sbb
mov
loope
in
sub
mov
inc
nop
and
fwait
mov
sub
dec
mov
xor
mov
adc
add
or
sarl
sub
iret
dec
sub
cmc
inc
pop
cli
loop
push
imul
xorb
aas
pcmpeqd
add
xchg
mov
jo
jge
add
push
dec
mov
cli
addb
shr
dec
stos
mov
jnp
mov
loop
popf
roll
jle
adc
and
mov
iret
add
shr
fs
sbb
sbb
inc
xchg
add
lret
and
in
or
lahf
inc
in
out
mov
xchg
sub
cmp
dec
loope
pop
rclb
fistpll
movl
fcmovnb
shrb
int
inc
and
push
or
mov
pop
pushf
test
xlat
sub
or
pop
dec
and
mov
mov
add
pushf
push
mov
out
pushf
sub
jb
leave
inc
jge
pop
in
pop
mov
in
insl
or
mov
fstpt
adc
jnp
sti
mov
adc
das
jg
mov
lret
cmp
add
inc
js
sbb
xchg
enter
pusha
inc
sub
pop
inc
mov
push
roll
imul
fnsetpm(287
and
add
daa
mov
adc
adc
xor
dec
test
cltd
sbb
es
pop
ret
dec
mov
dec
movsl
adc
sub
lret
fisttpll
fldenv
adc
pop
pop
xor
and
insl
int3
dec
inc
decl
in
ret
into
in
sub
pop
jmp
add
mov
dec
mov
repnz
mov
movsl
das
aad
lahf
jae
jmp
xlat
xor
jecxz
sub
dec
fidivs
sub
xor
out
mov
repz
test
jl
pop
jbe
les
cmp
and
repz
daa
jecxz
testl
imul
inc
imul
inc
xchg
ljmp
jno
je
push
fstpt
jo
adc
iret
mov
mov
adc
jmp
adc
outsb
cmpsb
push
and
and
icebp
adc
pop
and
clc
aam
and
or
test
pop
xor
cwtl
int3
fsubr
inc
cmp
bound
adc
sbb
mov
mov
xchg
sub
daa
add
and
push
shll
fcompl
outsl
inc
jle
push
lds
or
and
xor
cmc
add
out
mov
pop
and
or
cmp
sub
add
in
dec
in
and
call
push
in
loopne
pop
jae
xor
add
or
cmc
push
mov
gs
jno
or
or
inc
lret
jmp
xchg
pop
or
push
or
jne
test
or
pop
mov
fst
push
add
cmp
stos
mov
aaa
add
in
aaa
and
push
sbb
in
xchg
test
mov
jno
call
outsb
mov
icebp
inc
out
cmpsb
sbb
xchg
mov
xchg
xor
adc
or
lahf
addr16
aam
repnz
pop
adcb
call
adc
sub
pusha
stos
popa
hlt
ss
mov
outsb
add
lock
rcll
mov
mov
test
mov
test
les
lock
xor
mov
cmc
call
mov
mov
jmp
sbb
cmp
adc
mov
mov
xchg
test
iret
insl
mov
mov
xor
dec
out
test
popa
jle
into
imul
lds
dec
inc
sbb
movsl
mov
enter
dec
cmpsb
mov
cmp
jb
dec
int3
and
pop
mov
scas
sbb
add
roll
jmp
sbb
pop
xchg
lcall
arpl
add
cmp
lcall
xor
jmp
adc
and
cltd
mov
rcr
add
sbb
rorl
fcmovnb
fwait
jbe
ja
jbe
lret
mov
ret
ljmp
mov
imul
les
outsl
pop
repnz
daa
iret
jbe
into
mov
gs
out
and
inc
out
cmc
sub
jne
adc
ja
pop
imul
movsl
xchg
and
insl
adc
mov
div
testl
sub
incl
daa
rcll
repz
mov
inc
lods
adc
sbb
clc
mov
dec
lahf
in
inc
mov
jle
and
cmp
insl
and
cmpsl
add
call
ret
pop
fs
sbb
iret
mov
jo
lret
js
repnz
cmp
enter
cmc
mov
or
fcompl
mov
mov
mov
repnz
rcll
push
add
xor
sbb
inc
fwait
pop
cld
sbb
sbbb
shl
mov
cmc
and
in
push
xor
dec
jnp
mov
aas
int
shll
sbb
jo
mov
aam
mov
sahf
outsb
mov
cmpsb
mov
and
das
xchg
leave
add
rolb
push
or
mov
push
adc
pop
mov
out
inc
pop
movsb
outsl
pop
out
mov
jmp
sbb
lret
mov
gs
add
aam
xor
mov
dec
xchg
and
fsubl
out
mov
push
xlat
insb
xchg
sbb
or
cmp
hlt
fisubrs
lcall
nop
xor
cmp
dec
push
inc
cli
add
sbb
jae
dec
shl
mov
das
inc
pop
xchg
xchg
mov
dec
dec
aam
or
popf
sub
ja
inc
mov
push
test
movsl
ja
and
and
in
cmpb
or
xorl
dec
inc
and
jge
jecxz
push
test
and
mov
out
lcall
sub
test
and
arpl
int
aam
ds
xchg
daa
test
fidivl
pop
mov
push
add
int
xchg
cmc
or
pop
ja
icebp
sub
jb
imul
jne
jle
adc
mov
addr16
out
subl
or
mov
adc
sbb
jmp
repz
fdivs
and
sbb
insl
rcrl
jmp
inc
mov
pusha
xor
dec
imul
in
pop
fimuls
mov
push
loopne
ja
incb
aam
push
xlat
xor
add
and
movsl
pushf
jo
aam
xchg
cld
xchg
jge
pushf
out
inc
push
andl
dec
addb
mull
nop
test
sub
mov
leave
push
dec
cmp
popf
mov
xchg
jne
xchg
popf
xchg
push
in
or
dec
push
inc
movsb
inc
xor
int3
mov
xchg
cld
punpckhbw
push
dec
int
push
pop
push
adc
cmc
fcoml
std
test
add
sub
sbb
popf
into
xchg
jbe
movsl
jbe
add
and
mov
je
rolb
leave
mov
sub
mov
pop
scas
or
inc
imul
adc
das
or
das
std
dec
lock
jbe
push
add
add
push
in
daa
xchg
out
repnz
and
jnp
movsb
jbe
insb
pop
jae
inc
add
mov
pop
in
sbb
dec
adc
inc
xor
mov
xchg
outsl
sbb
sub
roll
lret
shr
and
or
xchg
push
or
lods
mov
jnp
dec
mov
movd
dec
loopne
cmpsb
xchg
or
call
mov
bnd
push
fimull
daa
xchg
cmc
repz
pop
adc
std
ljmp
mov
add
xchg
xchg
sbb
inc
mov
cvtpi2ps
and
pushf
push
mov
das
xchg
rcrl
shlb
push
inc
sarb
daa
mov
dec
or
lds
push
sub
adc
les
daa
pop
push
shll
addr16
sbb
fildll
add
sbb
xor
fwait
test
jnp
fsqrt
xchg
sbb
imul
jno
and
cmp
daa
cmp
stos
scas
inc
cmpsb
call
jle
mov
adc
into
or
rolb
add
cmc
bound
mov
dec
ja
sub
cltd
add
add
rorl
push
fs
dec
lods
fcmove
call
arpl
imul
mov
out
mov
jmp
mov
sbb
adc
rorb
xor
repnz
or
jmp
inc
cmc
xor
cmp
out
dec
lds
xor
andl
dec
je
inc
add
mov
ficompl
in
or
out
shll
and
inc
push
jae
push
in
dec
xor
mov
fsubrp
fldt
jmp
cld
push
push
ret
imul
push
into
popf
lds
and
data16
and
call
pop
adc
adc
cmpsb
xchg
push
xchg
xchg
pusha
andb
andl
mov
gs
in
mov
std
test
mov
loope
aas
xor
push
sub
xor
ret
xor
ja
pop
fwait
sahf
and
add
push
lcall
pusha
xchg
addr16
sbb
pop
mov
sbbl
push
lret
inc
jae
and
mov
push
mov
addr16
xchg
cmp
push
scas
dec
es
inc
sbb
jecxz
inc
hlt
dec
pop
xchg
out
outsb
fbstp
shll
idivl
dec
stc
jb
das
adc
ss
push
jno
sub
nop
dec
sub
test
pop
mov
pop
jne
jno
jg
shrb
and
dec
mov
jmp
in
push
fsubrs
and
dec
shl
jo
inc
icebp
mov
inc
pop
popa
into
xchg
leave
pop
and
mov
pop
inc
inc
outsb
xchg
cmpsl
inc
or
pop
or
mov
mov
cmp
cmpsb
push
xor
fidivrs
mov
sbb
xor
push
lret
shrd
cmp
adc
and
ret
repnz
daa
xchg
mov
orl
push
int3
mov
cmp
push
mov
xchg
inc
xchg
mov
out
sbb
mov
scas
cmp
loopne
mov
mov
inc
aaa
clc
push
stos
mov
loopne
cmc
xor
sbb
mov
fs
adc
inc
mov
xchg
ljmp
add
mov
add
negb
out
lcall
fcompl
xchg
data16
nop
mov
fnstcw
sub
lcall
clc
pop
nop
movsl
inc
out
fldenv
pop
test
dec
rcll
mov
sub
and
cmp
inc
or
rorl
lock
sub
adc
subb
adc
and
add
xchg
or
test
in
aad
insb
test
mov
push
mov
jg
cmc
loop
mov
mov
and
jecxz
push
xlat
lahf
jmp
jle
mov
test
jne
fcmovnbe
dec
pop
aaa
fdivs
cmp
add
jbe
inc
int3
test
hlt
cs
add
sbb
filds
jmp
hlt
xlat
inc
or
lds
or
xchg
xchg
outsb
pop
roll
popf
popf
lods
fistps
inc
lds
adc
js
dec
push
jno
sbbl
ret
stos
mov
lret
sbb
out
out
enter
movsl
push
movsl
mov
lock
popa
dec
clc
data16
popa
and
imul
lods
pop
stc
test
inc
xchg
lret
jle
sub
pop
leave
into
adc
jmp
imull
adc
add
sub
bound
scas
mov
dec
ret
mov
or
push
adc
sub
and
jbe
dec
xlat
xor
dec
mov
rcll
les
sbb
pop
cmpsl
and
scas
pop
cs
das
or
int
or
mov
adc
fisttpll
xchg
in
dec
xor
sbb
sbb
jle
sbb
out
mov
test
jg
fs
pop
xchg
sub
lahf
or
or
arpl
into
jmp
lea
xchg
mov
cwtd
push
mov
mov
lcall
push
mov
ficompl
movsb
mov
xor
fcoms
dec
popa
jle
in
sub
inc
cmpsb
xchg
mov
outsb
icebp
dec
adc
cmpsb
sbb
in
xor
test
push
or
inc
sub
dec
dec
fimuls
mov
and
inc
jo
push
movsb
jne
leave
pop
lods
stos
sahf
lret
rcl
outsb
xchg
fdivrl
push
and
adc
aam
lds
jmp
jmp
imul
call
mov
sbb
inc
pop
rcll
pushf
cld
pushf
xor
daa
cmp
cmp
movsl
ss
test
or
mov
scas
fnsave
cmp
cmp
lock
pop
cmp
push
add
mov
mov
xor
shlb
add
movsl
add
sub
mov
or
xchg
dec
mov
pop
les
sbb
out
mov
call
lcall
sbb
adc
pop
in
rorl
mov
testb
int3
adc
int3
jne
mov
test
sbbl
sar
sbb
arpl
jo
cmc
dec
xchg
sbb
jl
hlt
lret
scas
push
jae
insl
sti
aaa
rclb
mov
adcl
data16
sub
xorb
in
ret
adc
xor
mov
ljmp
stc
lods
mov
cwtl
loopne
add
xor
fiaddl
lret
out
jno
cmp
mov
out
int3
in
push
out
fsubl
push
cmp
das
pop
xor
sub
push
mov
mov
mov
lret
repnz
sbb
pop
mov
mov
cmp
cmpsb
popa
addr16
ljmp
mov
test
or
add
pop
js
mov
xlat
inc
fwait
cld
outsl
fs
push
and
mov
sbb
xor
inc
mov
test
sub
rorb
inc
add
adc
and
inc
pop
fidivrs
pop
or
fxch
fbstp
inc
adc
fldt
sbb
push
gs
sete
imul
insb
das
fsubr
das
inc
mov
xchg
sbb
or
cmp
insl
add
dec
pop
jge
addr16
mov
imul
and
pusha
fsubrl
arpl
dec
test
xchg
mov
stos
cld
test
inc
outsb
fcoml
in
or
pop
lock
inc
or
mov
mov
aaa
psubusb
adc
xorl
or
test
aam
ljmp
mov
push
fistpl
mov
dec
inc
and
adc
mov
push
lret
pop
push
es
cmp
or
or
das
cltd
cmp
sbb
out
fs
into
sbb
add
enter
inc
sub
cmc
pop
and
sbb
mov
ret
sub
inc
mov
movlps
mov
sub
stc
popa
enter
daa
iret
inc
sbb
lods
or
pop
fwait
rcrb
les
push
aas
in
xchg
call
mov
push
aad
popa
sbbb
pop
pop
jae
and
scas
inc
rcr
adc
imul
movsl
insl
ds
inc
and
sahf
xor
ss
dec
cltd
pop
in
popa
pop
iret
ret
cmc
and
daa
icebp
sub
shll
insl
or
add
sbb
ja
push
rcrl
adc
out
inc
mov
negb
adc
mov
push
push
popa
mov
mov
cmpsl
subb
mov
mov
out
push
bound
and
or
jge
pop
dec
pop
cmpsl
sbb
testl
shl
xchg
test
les
dec
ljmp
cmp
cmpsb
jbe
addb
xchg
clc
push
out
cli
movsl
out
inc
inc
es
inc
cmpsb
or
mov
int3
inc
jmp
aam
shlb
dec
mov
inc
jb
jge
or
mov
sbb
mov
adc
je
cmpsb
sbb
xor
and
in
mov
or
imul
adc
sbb
cmc
aaa
movsl
xor
divl
mov
lea
dec
aaa
add
aas
jmp
add
mov
out
cmp
fiadds
and
cmp
push
and
enter
or
fldt
xlat
testb
outsl
call
test
jecxz
imul
mov
sbb
dec
popl
push
jo
lods
es
push
or
cmp
roll
js
lahf
paddsb
push
in
into
xor
rolb
and
enterw
xchg
dec
or
sbb
or
push
adc
ljmp
stos
out
push
mov
mov
in
sbb
aam
and
es
and
adc
pop
lret
adc
scas
pop
into
mov
dec
pop
adc
cvttps2pi
shl
ds
pop
dec
scas
inc
inc
test
mov
mov
daa
shrb
mov
add
outsb
in
cld
shll
sbb
inc
movsl
add
fwait
cmp
jl
dec
mov
adc
loop
fmull
mov
lods
or
and
test
in
dec
in
rcrb
cld
sbb
mov
jbe
imul
stos
and
push
adc
jl
and
mov
test
pushl
inc
or
or
je
movsb
in
xor
shll
sub
xchg
xchg
mov
push
xchg
jae
adc
xor
ret
popa
mov
mov
sbb
xchg
add
jecxz
cs
sub
aaa
hlt
movsb
pop
mov
cmp
lds
stos
repz
dec
push
fstpt
xorl
xor
in
fimuls
pop
xchg
inc
jl
lret
xchg
pusha
and
adc
ret
cwtl
loop
cwtl
lret
dec
call
sbb
mov
faddl
sbb
cmp
into
inc
adc
mov
adc
lds
or
js
pop
mov
pop
js
push
mov
dec
or
cmp
add
ret
add
out
jae
int3
fimull
mov
dec
add
cmp
sbb
test
dec
lds
cmpsl
or
mov
ljmp
enter
in
outsb
inc
into
mov
dec
scas
test
add
jge
xchg
es
out
mov
movsl
addr16
and
test
movsl
fwait
inc
and
jmp
xchg
test
push
pop
popa
push
sub
and
aam
jge
andl
xchg
and
jb
in
sahf
push
mov
push
sub
es
sbb
xor
dec
and
rorb
and
mov
mov
or
dec
frstor
lret
sbb
sbb
rclb
add
loopne
fisubl
lahf
inc
icebp
cmp
lcall
mov
test
roll
pop
add
xor
ja
bound
adc
mov
repz
nop
cmp
in
push
xchg
ficomps
repz
cld
addr16
dec
adc
or
mov
inc
fistl
fcoml
mov
dec
fdiv
cltd
sahf
or
add
fwait
add
cmp
push
adc
adc
xchg
add
cltd
mov
movsb
mov
pop
pop
mov
pop
or
adc
insl
pop
bound
lahf
int3
pop
scas
sbbl
cld
jmp
es
jl
lahf
pushf
adc
xchg
and
jbe
adc
popf
and
mov
mov
adc
pop
icebp
sbb
jecxz
shll
dec
in
add
or
xchg
push
xchg
shll
jecxz
icebp
xchg
loopne
ficomps
rcrl
aam
xchg
sbb
pop
adc
adc
cmpsb
jns
sti
xchg
mov
push
and
mov
and
rorb
xchg
and
adc
lcall
sbb
mov
xchg
sbb
jp
test
or
sbb
and
and
mov
fcomps
xlat
sbbb
add
rcr
add
movsl
pop
and
imul
inc
pusha
adc
push
pushf
xchg
adc
xor
jb
and
dec
or
mov
lret
fwait
mov
xchg
or
add
cmp
insb
and
pushw
pop
sbb
fs
mov
push
mov
add
scas
pop
and
je
cld
and
mov
dec
cmpsb
adc
inc
mov
pop
sub
cs
adc
repz
dec
xor
and
in
mov
movsl
add
test
lahf
push
lds
push
cmp
or
rcl
xchg
gs
mov
and
xor
pop
sbb
cmpsb
add
push
push
inc
popa
rol
mov
xor
dec
in
dec
aaa
adc
jne
jo
mov
insl
and
sub
sub
loopne
dec
in
xlat
clc
cld
dec
jbe
imul
mov
add
call
iret
and
dec
imul
sub
movb
fcomi
lds
inc
and
fdivr
test
pop
push
mov
dec
mov
mov
lret
nop
adc
mov
popa
mov
push
sbb
xchg
adc
mov
movsb
adc
jae
mov
lea
inc
subb
loop
outsl
mov
aas
and
sbb
push
xor
xor
sub
cmp
sbb
adc
pop
into
mov
dec
movsb
inc
pop
jecxz
add
dec
cmpsb
cmpsb
sbb
in
mov
push
cmp
shlb
cmp
push
loope
cld
std
mov
popf
ficompl
lds
lock
test
ds
cmc
stos
aas
adc
ss
jne
dec
mov
or
jne
xchg
in
call
mov
aaa
jae
arpl
jmp
adc
daa
out
dec
mov
ljmp
popa
dec
pop
cmc
lret
xchg
fcmovb
lret
cltd
stos
jge
dec
pop
add
stos
das
or
repnz
mov
push
lock
stos
pop
sub
cmpsb
daa
mov
or
lods
inc
jl
test
and
push
push
dec
and
cmpsb
add
icebp
neg
cs
std
dec
adc
mov
pop
and
out
add
loope
rcrb
sahf
mov
dec
aas
cmpsb
cmc
sub
pop
xor
inc
lahf
xor
inc
shlb
cmp
push
pop
inc
dec
jbe
je
inc
cld
xchg
repz
shlb
cwtl
xor
out
mov
mov
sbb
pop
or
pushf
mov
jg
pop
mov
push
insb
push
aaa
adc
test
hlt
pop
mov
aas
inc
push
inc
xchg
sbb
les
je
mov
push
iret
mov
jo
iret
dec
cmpsb
xor
mov
or
scas
or
out
and
and
dec
jae
call
repz
out
repz
push
lahf
into
outsb
aas
sub
pop
sbb
addr16
sbb
dec
enter
mov
fadds
data16
aam
sarb
pop
dec
loopne
pop
xchg
xchg
fsubrs
or
call
cwtl
lods
test
adc
adc
fimuls
sbbl
sbb
xor
mov
jno
and
enter
fcmove
adc
dec
aaa
xor
push
adc
in
push
std
jae
cmp
popf
sbb
pusha
add
pop
jecxz
repnz
adc
push
jb
pop
or
lds
xchg
sbb
fcompl
pop
mov
and
int3
mov
fisttpl
cld
and
imul
int3
inc
sbb
sbbb
cmp
lods
subb
aaa
test
push
outsb
mov
ljmp
jg
mov
fidivl
idivb
jno
inc
dec
outsb
jmp
in
mov
pop
mov
mov
pop
mov
inc
jmp
lcall
lods
inc
sbb
cmp
pop
push
pop
cmp
xor
adc
popa
add
mov
aaa
icebp
or
inc
pushf
adc
aad
add
xchg
dec
into
ljmp
sub
rolb
pop
sbb
push
and
aam
push
push
movsb
leave
in
mov
adc
sarl
xlat
xchg
xchg
rcr
in
dec
adc
mov
addl
sbb
dec
icebp
jge
in
sub
out
adc
in
sti
xor
repz
sbb
mov
out
adc
xorb
mov
sub
mov
push
js
lock
fcomp
sub
or
cmp
mov
je
fimull
shlb
inc
shll
scas
mov
push
fwait
mov
mov
mov
daa
pop
xchg
dec
push
inc
or
adcb
ss
jns
push
hlt
xchg
andb
movsb
jmp
and
aas
mov
add
adc
sub
pop
popa
stc
dec
dec
inc
fs
dec
sti
test
xchg
cmp
out
or
jmp
pop
or
cmp
xchg
ljmp
test
or
fildll
cwtl
int3
je
inc
loopne
in
es
xorl
mov
sbb
aaa
dec
push
mov
mov
mov
out
jmp
push
lret
pop
add
jo
dec
cmp
push
push
sbb
js
and
incb
mov
push
sub
scas
aaa
xorb
ljmp
pop
sbb
xchg
adc
inc
sbb
sti
adcb
jl
scas
mov
mov
cmp
sub
jg
inc
outsl
add
adc
add
shl
outsl
mov
dec
subb
cmpsb
xchg
jo,pn
lahf
xchg
inc
push
imul
hlt
out
jmp
aas
dec
lds
call
fs
dec
jbe
jne,pn
incb
add
adc
addr16
aas
xchg
and
inc
sub
mov
mov
and
xchg
jae
adc
adc
push
mov
jnp
cmc
cmp
loop
mov
cmp
mov
mov
sbb
out
arpl
and
clc
mov
out
mov
push
xchg
cmp
dec
cli
fildll
cmpsl
pushw
movsl
pop
cmp
stos
and
mov
add
mov
test
inc
xchg
mov
jo
xor
lea
dec
xchg
in
nop
push
je
fadd
in
mov
jbe
aad
pop
xor
pop
sub
les
and
jg
xor
mov
or
xor
dec
loopne
enter
out
dec
imul
out
jg
or
in
sbb
and
imul
push
scas
repz
inc
push
or
std
jp
int
or
fbstp
lret
aaa
mov
cmpsb
sbb
stos
or
fsubl
mov
inc
xchg
push
mov
mov
and
out
aad
data16
mov
jnp
sbb
cmpsb
mov
dec
loope
subl
inc
je
out
inc
addb
decb
test
mov
xlat
rorl
lods
outsl
lcall
push
or
xchg
sti
cld
sbb
inc
mov
cmp
or
lds
jno
insb
ljmp
test
jmp
dec
dec
push
out
cmp
iret
test
or
test
xor
xchg
mov
scas
in
mov
jne
add
insb
fdiv
jae
dec
mov
pushf
in
push
pop
add
mov
and
mov
push
adc
popf
fdivl
sub
sahf
xchg
mov
push
imul
stc
in
dec
nop
mov
rcrb
out
xchg
insl
lds
fbstp
lcall
and
outsb
std
inc
cmpsl
xchg
pop
test
mov
jnp
push
lds
popa
jno
fisttpl
cmp
lods
dec
jnp
add
inc
mov
cld
into
out
dec
xchg
lcall
lcall
dec
sub
outsb
shlb
pop
aad
cmp
daa
scas
add
dec
out
jae
mov
push
push
or
push
jp
mov
mov
in
and
xor
scas
or
dec
pop
and
outsb
imul
outsb
test
aam
add
adc
aad
movsl
push
fstps
pushf
out
mov
mov
xor
cli
in
xchg
mov
and
and
jno
xchg
mov
sbb
jnp
inc
stos
adc
cmp
cmc
sbb
icebp
sub
pop
cmp
dec
push
cmp
jmp
jne
das
fisubl
jbe
ja
jl
adc
out
andl
mov
pop
xor
cmp
push
xchg
mov
jmp
mov
lods
sub
ret
xchg
int3
add
jmp
and
mov
mov
inc
push
rol
rorb
xchg
adc
out
pop
ljmp
or
cmp
push
sbb
fistpll
cmc
int
fsubs
inc
stos
cmp
and
push
incb
test
xchg
leave
inc
jns
sbb
das
adc
loop
addl
pop
cmp
int3
pop
xchg
push
fcomps
aad
xchg
and
mov
test
stos
xor
jb
lret
out
pop
sbb
inc
mov
fsubl
stos
cld
data16
adc
or
and
out
iret
test
push
es
xchg
lea
lret
pop
std
dec
mov
add
mov
xchg
lahf
movsl
or
and
cmp
cmpsb
push
push
jne
rclb
and
mov
inc
or
and
ja
and
fcoml
and
loope
mov
xchg
leave
and
mov
fistl
stos
mov
sub
xchg
cwtl
fadd
or
sbb
cmp
sbb
or
adc
movsb
loopne
lcall
mulb
or
and
mov
push
popl
es
adc
and
mov
dec
cmpsb
sbb
es
movsb
lcall
xchg
xchg
add
outsb
imul
mov
mov
jbe
loop
pop
cmp
sti
xchg
push
mov
sbb
pushf
jge
sti
es
mov
sbbl
aaa
dec
adc
pop
outsb
and
fsubs
mov
mov
adc
xchg
cmpsb
cmpsl
pop
mov
push
pop
ficoms
pop
and
and
and
push
lcall
std
adc
push
mov
mov
add
or
fisttpll
jge
add
and
xchg
int3
adc
mov
and
add
mov
sub
xchg
mov
and
mov
movsb
mov
mov
xchg
mov
rcrl
cltd
push
xchg
mov
push
xchg
aam
xchg
lcall
cwtl
sbb
or
cmpsb
sbb
and
pusha
popf
cld
adc
nop
and
cwtl
xchg
adc
cltd
mov
or
insl
add
test
add
or
cmp
fildl
pusha
clc
jb
dec
inc
cwtl
fmul
xor
dec
add
add
jmp
shr
sahf
inc
push
cmp
sarb
pop
data16
insb
jmp
xor
imul
cmc
outsl
insb
cwtl
mov
dec
orl
or
add
xchg
outsb
movsl
inc
push
repnz
in
cmpsb
insb
enter
push
int
or
jmp
insb
mov
data16
mov
bound
pop
pop
test
mov
push
mov
test
xor
adc
or
or
fimull
xor
das
add
pop
adc
cmp
jle,pt
or
out
xchg
and
xor
or
lods
das
dec
int
sbb
bound
lahf
inc
pop
mov
inc
call
fucom
or
xchg
in
shll
pop
add
mov
or
outsb
xchg
scas
lret
mov
and
fistpll
mov
push
inc
push
sbb
int
pop
add
xchg
lret
xchg
mov
clc
or
sbb
enter
cwtl
in
lcall
fcoms
lahf
add
push
aam
adc
lret
dec
insb
cmp
jmp
orl
pop
loopne
inc
mov
mov
jmp
aas
into
pop
adc
mov
outsb
dec
insb
inc
ret
pop
aaa
mov
jne
mov
call
xchg
lea
insl
cmc
jg
out
xor
xchg
jmp
inc
mov
mov
cmp
pop
lds
rol
in
pxor
mov
pusha
ja
int
push
lods
out
cmc
pop
aam
lods
push
scas
out
je
jns
cmp
and
sbb
rorl
pop
int3
push
mov
stos
es
mov
stc
aaa
enter
leave
jl
out
mov
push
imul
jo
sbb
push
leave
ja
or
mov
loopne
cs
lods
lret
xchg
mov
cmp
sbb
mov
xchg
sub
or
ds
inc
adc
loope
fdivrl
xorb
es
adc
movsb
inc
std
mov
push
aas
pop
pop
jne
out
int
pushl
das
imul
outsb
or
lea
inc
push
xchg
dec
jmp
int3
mov
roll
xchg
fsubl
je
or
add
lret
out
pop
pushf
sbb
pusha
iret
mov
repnz
mov
jecxz
and
and
iret
xor
pop
lret
add
popf
cld
cmpsb
xor
ret
ret
imul
xor
loop
push
or
call
fcoml
pop
sbb
ds
xchg
into
xor
pop
mov
frstor
aas
sbb
mov
lcall
mov
jmp
mov
cmc
fxch
pop
inc
lahf
push
mov
or
sbb
arpl
je
xchg
jns
arpl
mov
adc
sub
xchg
push
xchg
stc
out
inc
roll
lods
imul
loope
scas
inc
adc
fisttpll
or
and
pop
add
test
adc
jl
sbb
inc
ja
test
movsb
push
mov
add
ficompl
xchg
enter
das
mov
xor
lret
es
std
mov
sbb
cmpsb
pop
call
push
dec
jno
in
cmc
out
dec
outsb
add
or
pop
or
imul
scas
inc
je
cwtl
pop
mov
pmulhw
and
in
mov
pop
xchg
stos
dec
out
cwtl
push
jmp
int
mov
out
jbe,pt
je
nop
xor
sbb
jb
jne
repz
jo
push
jp
mov
hlt
cmp
add
jl
mov
dec
mulb
jl
repz
adc
cmp
xor
jge
pop
jle
push
sahf
mov
test
mov
inc
or
jl
xchg
fildll
in
int3
pop
xor
ret
xchg
das
or
int
lock
fsubrl
pop
xor
out
iret
or
mov
jl
outsb
int3
or
movsl
int
mov
idivl
cmp
in
jle
insb
pop
mov
adc
mov
ret
cmc
xorl
hlt
or
add
pop
inc
sbb
lcall
aaa
in
aaa
in
sbb
push
xlat
in
inc
dec
jl,pn
dec
add
pop
das
and
fisubl
dec
cmp
xor
ljmp
push
xchg
fldt
and
push
es
addb
push
xor
push
xor
jmp
or
sahf
jp
mov
mov
adc
in
or
loopne
sbb
mov
jmp
mov
pop
jae
add
dec
stos
cmc
push
pop
xor
aaa
pop
aaa
pop
out
sbb
xor
imul
jnp
jge
mov
ret
out
sbb
push
jle
lock
fldcw
sbb
sub
ficompl
js
jnp
jp
fistpll
leave
jnp
std
nop
sbb
outsl
add
cmpsb
or
sbb
adc
cs
out
popf
pop
repnz
cmp
mov
lcall
fsubp
mov
sub
xchg
add
push
mov
xchg
dec
or
sub
and
and
mov
test
adc
xchg
cmp
testb
or
loopne
in
cli
cmc
arpl
cld
add
lds
in
adc
shlb
mov
push
movsl
jae
sysret
movb
bound
jb
clc
in
mov
mov
and
pop
addr16
pop
mov
daa
push
js
xchg
lock
imul
addr16
insl
gs
test
pop
xchg
cmc
pop
push
xchg
or
or
or
call
lret
and
pop
mov
lahf
outsl
jno
or
es
dec
and
fsubs
or
and
pop
dec
mov
and
cmp
lahf
add
jl
push
and
aad
mov
sub
clc
pop
insl
icebp
pop
fadd
and
fstpl
push
xlat
mov
es
cmpsl
ljmp
and
and
stc
mov
adc
pop
xchg
or
xchg
sbb
fstl
and
add
stos
fdivr
sbb
adc
ret
adc
inc
movsb
ds
frstor
aad
jl
push
cmpsb
mov
xchg
sbb
sbb
and
cmpsb
push
sbb
mov
sub
punpckhbw
lret
sbb
dec
cli
xchg
and
es
pop
jp
ljmp
ljmp
hlt
pop
adc
xchg
adc
xchg
rcrl
rclb
popf
ret
and
sbb
push
out
and
cltd
test
mov
fwait
cld
mov
repnz
xchg
and
loope
mov
and
popf
and
mov
jns
aam
push
aam
es
xchg
push
and
aam
and
xchg
and
jbe
cmp
xchg
pop
xchg
add
adc
push
les
std
adc
movsl
decb
add
add
in
jp
and
mov
mov
pop
shll
in
fstl
and
and
cwtl
add
mov
insl
and
adc
or
adc
xchg
mov
and
mov
xchg
pmaxub
pop
pop
fldenv
adc
and
xchg
add
add
push
xchg
sbb
pop
roll
xchg
sbb
scas
xchg
and
cld
or
xchg
fwait
mov
fcmovnbe
lret
in
mov
clc
adc
inc
repz
leave
push
push
aas
xorl
xchg
in
mov
inc
stc
sub
add
xlat
cmpsb
mov
iret
sub
dec
mov
lar
sbb
js
lds
push
mov
mov
movsb
iret
jns
imul
pop
out
pop
jle
sub
dec
out
mov
hlt
stc
sahf
cmp
out
int3
push
out
pop
mov
dec
scas
sub
xor
cld
add
and
sbb
push
cmp
out
clc
fstl
cld
hlt
pop
xchg
insl
sbb
jle
xor
adc
and
pop
sbb
or
and
out
cli
test
addb
shll
lods
test
int3
jbe
add
and
add
xor
or
les
call
jmp
inc
dec
out
mov
mov
outsb
xor
and
in
inc
lcall
xlat
mov
sbb
inc
adc
pop
hlt
shl
sbb
and
clc
pop
dec
xchg
push
or
push
pop
push
sub
pop
jmp
in
les
imul
dec
or
mov
or
xchg
ja
insl
dec
lds
mov
sub
add
cli
xchg
and
orl
or
inc
stos
cmp
mov
fimuls
fsubrl
lock
inc
jbe
xor
inc
das
lcall
push
jae
push
popf
enter
iret
mov
ret
push
cltd
lea
xchg
fxch
lret
cmpsl
xchg
in
or
mov
inc
xor
mov
jmp
fsubrl
xor
cmpsb
inc
xor
and
jmp
sti
mov
ret
xchg
mov
pop
loop
pop
das
dec
js
pop
pop
fildll
mov
sub
cli
sbb
call
or
and
movsl
test
lds
scas
movups
movb
dec
or
mov
pop
loop
or
enter
outsl
lods
out
or
mov
out
movsl
mov
notb
mov
cmpsb
push
scas
pop
scas
popa
ds
int3
fsub
jl
push
cmp
mov
int
lret
push
leave
dec
js
and
push
iret
fildl
xchg
mov
or
ja
lret
sbb
cli
dec
out
dec
sbb
cmp
adc
jne
push
xor
and
mov
pop
mov
jne
or
jnp
addr16
pop
push
inc
xchg
enter
popa
out
outsb
imul
loopne
sbb
or
imul
mov
icebp
into
repz
jle
out
fildll
clc
sbb
pop
pop
nop
lods
push
shl
sahf
int
xchg
into
mov
js
cmp
imul
jmp
movsl
mov
inc
cmp
ret
hlt
cwtl
pop
pop
in
or
mov
inc
sbb
or
scas
sbb
mov
leave
out
and
add
pushf
aad
lret
ds
fnstcw
lock
loopne
jmp
adc
push
sbb
out
cmc
ss
cld
lods
mov
add
rcr
mov
push
cwtl
es
mov
inc
push
imul
cmp
into
out
pop
mov
lahf
in
or
or
mov
shlb
inc
sub
dec
movsl
int
popf
push
dec
cli
adc
sbb
cmp
xchg
out
cmp
add
addr16
std
dec
imul
gs
bound
adc
and
xchg
loope
decl
and
notb
mov
mov
daa
jbe
jmp
aad
stc
jns
sub
jle
pop
stos
jno
in
ret
jb
popa
in
cmpsl
outsb
je
adc
in
push
scas
xor
cmpb
cwtl
fst
movsb
orb
dec
daa
mov
and
sbb
cld
mov
loope
sti
push
popf
int3
daa
popf
aam
dec
lds
fiadds
cmc
pop
jnp
mov
jno
or
sub
repnz
in
pop
xor
adc
sbb
sub
inc
xchg
mov
push
push
mov
psubusb
push
jecxz
lcall
in
pop
and
and
dec
xchg
xchg
add
ljmp
data16
das
dec
add
je
iret
cld
sbbb
or
inc
sbb
outsb
mov
mov
mov
leave
and
mov
xor
das
xchg
cwtl
xor
pop
imul
rcr
xchg
dec
out
into
and
mov
leave
adc
jp
push
cmp
mov
adc
les
jmp
outsl
mov
xchg
hlt
dec
inc
or
push
mov
add
mov
mov
adc
inc
sbb
cmc
jne
pusha
dec
push
adc
je
stos
sbb
add
mov
pushf
in
test
jbe
cmpsb
or
xor
adc
pop
xor
lods
in
pop
inc
jns
nop
xchg
adc
mov
fimuls
pop
sbb
or
lahf
jo
stc
pop
cmc
mov
inc
sub
popf
xchg
mov
out
pushf
dec
push
cmp
xor
lret
pop
xor
mov
jmp
int3
or
add
cli
or
lods
xchg
adc
ljmp
imul
addr16
out
outsl
lods
dec
add
out
in
loop
movsb
ss
loopne
dec
hlt
or
and
jmp
cmc
and
xchg
lret
push
pusha
push
popw
pop
dec
sti
pop
test
or
or
stos
mov
and
outsl
push
pop
and
pop
out
movl
xlat
jecxz
or
into
arpl
cmp
daa
leave
inc
scas
testb
pop
repnz
int3
pop
imul
or
pushf
dec
xchg
ljmp
dec
lods
cmc
rolb
mov
repz
jbe
add
pop
jle
addr16
sbb
adc
sbb
mov
or
inc
lds
jmp
rcl
cwtl
cmpsb
roll
lret
and
loopne
mov
jbe
scas
dec
mov
popf
jmp
sub
cmc
imul
mov
jmp
movsl
inc
push
pop
mov
fnstcw
pop
push
decb
dec
mov
sbb
aam
pop
mov
jp
arpl
mov
or
inc
pop
out
dec
xor
jae
into
inc
add
and
mov
mov
int3
outsb
jae
nop
mov
addr16
movsl
daa
in
add
cmp
sahf
sub
sbb
mov
cmp
jecxz
add
sbb
jmp
cmp
sub
and
mov
aam
or
les
out
cmpsb
shrl
lret
sub
mov
and
push
mov
pop
lods
pop
adc
dec
mov
rcrb
fs
mov
xor
sahf
bound
lds
or
xchg
xor
jnp
frstor
sbb
push
push
sbbb
ja
movsl
cmp
scas
jae
cmpsl
movsl
adc
and
subb
mov
fs
sbb
jae
loope
xchg
fs
loopne
add
pop
xchg
outsl
stos
mov
add
ret
fcompl
stos
or
sbb
fsubrl
cmp
adc
in
cld
mov
rorb
scas
lds
fsts
and
xor
cmp
mov
mov
mov
imul
mov
mov
adc
adc
sbb
stc
mov
sub
rol
js
cmc
and
cmc
xor
jne
xchg
push
outsl
mov
cmp
add
and
pop
fs
inc
and
addr16
mov
sbb
popa
dec
pop
cmp
add
cmp
movlps
xlat
ret
jecxz
sahf
pop
negb
fsubrl
xchg
jno
int3
sub
dec
cmpsb
inc
push
lret
add
sbb
sbb
sub
sbb
loop
test
cmp
add
adc
out
cs
stc
sub
movl
cs
inc
or
iret
xor
mov
pop
repnz
mov
leave
mov
aaa
mov
inc
lds
insb
dec
jnp
cltd
adc
xchg
test
jmp
arpl
sub
aaa
lret
rorl
lret
cmpsb
ror
int
mov
addb
insl
andl
cmp
sub
pop
jmp
or
cmp
in
add
pop
mov
jmp
push
pop
mov
or
mov
dec
cmp
sbb
mov
lcall
popf
and
leave
push
popf
in
shl
push
push
out
mov
jo
xor
or
inc
dec
pop
std
movsl
out
bound
mov
push
das
aam
and
jno
sub
inc
mov
out
mov
push
popa
sub
mov
and
lods
push
xchg
mov
jns
xor
lcall
pop
ds
ret
cmp
jnp
gs
xor
cld
jne
push
inc
adc
mov
sub
push
push
pop
push
in
addr16
push
adc
movsl
ja
inc
call
inc
adc
out
outsb
orl
and
repnz
sti
jns
fbstp
or
jmp
sti
lods
gs
movsl
scas
jg
jae
aaa
xor
jmp
jmp
mov
fsubl
inc
enter
cmc
adc
pop
icebp
and
adc
das
mov
xchg
cmc
jl
daa
int
test
sbb
or
xor
xchg
push
xchg
pop
pop
in
add
cmp
cld
inc
stos
dec
imul
gs
mov
sti
or
push
or
mov
fldenv
jno
stos
pop
pop
out
fisttpll
test
enter
aaa
rolb
dec
inc
lcall
mov
int3
sub
lret
in
sub
sarb
enter
test
adc
jnp
in
jb,pn
scas
in
sbb
rclb
jle
imulb
cs
cmpsl
xchg
mov
in
push
cmp
inc
gs
sub
insb
test
in
push
xlat
pop
loopew
pop
dec
dec
es
add
aad
dec
outsb
jecxz
add
das
push
fstpl
jmp
dec
jle
subl
cmp
push
fists
adc
mov
and
mov
stc
sbbb
xchg
insb
push
lds
sub
inc
or
xor
mov
dec
mov
mov
call
mov
sbb
cmp
jl
adc
es
adc
leave
mov
mov
test
push
push
jo
fwait
and
xchg
jb
jo
fwait
pop
in
ret
cmp
pop
in
pop
enter
call
sbb
inc
popf
push
aad
or
dec
and
stos
sahf
xchg
xchg
and
paddd
pop
push
and
mov
es
in
and
push
test
cli
xchg
xchg
push
rcrl
out
test
mov
fisubs
mov
mov
push
loop
push
test
lahf
adc
jae
aam
and
xchg
sbb
and
mov
rcrb
test
and
dec
push
loopne
sbb
mov
sbb
and
mov
add
nop
clc
lret
sbbl
and
jne
pop
cmpsb
push
pop
or
xchg
or
cmpsb
fsubl
adc
add
sahf
and
mov
aad
es
cmpsb
ds
pop
mov
push
adc
imul
adc
and
jge
add
mov
or
and
pop
add
fists
cld
adc
pop
das
cmc
jecxz
adc
and
sbb
andb
sbb
sbb
xchg
in
jge
jge
test
es
hlt
cmpsb
cmc
mov
loopne
aad
adc
in
cld
xchg
add
mov
or
adc
fsub
and
push
sti
adc
arpl
rsqrtps
and
mov
sahf
pushf
rep
cmpsb
adc
sbb
add
xchg
adc
movsb
xchg
adc
and
adc
mov
popf
and
mov
mov
and
adc
or
adc
or
rorb
add
adc
add
sti
mov
sbb
mov
lahf
sahf
cwtl
andb
and
jl
mov
sbb
idiv
imul
mov
outsl
in
push
loope
aas
xor
adc
sbbl
pop
pop
adc
fisttpll
out
push
int3
outsb
push
ds
data16
ss
int
xchg
adc
xorb
shrb
mov
pop
in
incl
push
cmpsb
popa
pop
outsb
xlat
push
or
push
lret
call
leave
shrb
xchg
or
je
push
jb
movl
xchg
insl
sbb
mov
jo
imul
aad
pop
or
fucomp
call
or
mov
pcmpeqw
je
jb
je
or
pop
push
inc
cmp
jecxz
jp
inc
cli
insb
fsubr
dec
mov
popa
ljmp
xchg
mov
sub
outsb
paddq
das
or
hlt
cmpsl
cmp
inc
cli
testb
push
pop
push
clc
test
out
arpl
xor
mov
cmp
or
negb
in
jbe
dec
jmp
inc
push
add
lods
std
mov
or
lcall
push
jle
and
fwait
insl
mov
add
inc
jmp
jl
push
roll
enter
leave
mov
sbb
seta
jl
add
lock
add
fsubr
jmp
popa
cmpsl
loop
xchg
pop
jne
popa
and
leave
mov
cltd
inc
sub
es
nop
in
gs
test
and
sub
and
fiadds
jp
cmpsb
sbb
pop
adc
mov
jmp
addr16
call
roll
dec
xor
imul
nop
add
loopne
int
pop
xbegin
test
es
ss
loopne
dec
push
push
jmp
mov
sub
in
fisttpl
scas
outsl
jg
in
cld
lcall
enter
xchg
sub
pushf
insb
cmp
pop
sbb
mov
fstp
stos
fistps
out
fstl
xor
int3
jl
pop
dec
push
imulb
aaa
cmp
nop
jbe
mov
js
js
ljmp
mov
mov
jnp
jae
cmpsb
xchg
es
xor
mov
call
mov
or
mov
push
test
rcr
clc
rorl
add
dec
add
mov
int
pop
fisttpl
scas
test
test
mov
cmpsb
xor
ljmp
pusha
scas
in
push
sbb
xchg
mov
or
add
or
sbb
js
xlat
imul
dec
jl
bound
and
mov
mov
xor
ja
jp
mov
je
lret
aad
add
push
push
lds
jbe
push
dec
lret
fisttps
das
mov
stos
inc
sub
cmp
and
rorb
pop
pop
cmpsb
jne
xchg
lods
xor
pop
pop
les
sbb
or
jbe
leave
mov
pop
inc
pop
dec
or
xor
fildl
outsl
cmp
test
arpl
iret
jmp
jae
xorl
jl
inc
loop
and
or
fcomps
mov
pusha
pop
in
push
push
and
hlt
bswap
xchg
out
ds
out
pushf
aaa
sub
mov
jb
fwait
sbb
xlat
add
xchg
mov
fstps
and
leave
sub
in
in
pop
pop
jl
stc
mov
fnsetpm(287
inc
clc
sub
mov
mov
movsb
cmp
sbb
pop
xor
mov
mov
sbbl
mov
jne
or
addr16
mov
pusha
push
or
daa
and
insl
mov
jl
pop
std
imul
shlb
jmp
int3
loop
push
dec
add
nop
inc
push
adcl
add
lds
sub
lea
jp
ret
jbe
mov
into
lahf
or
pop
iret
inc
cmp
cmc
pop
insb
gs
js
add
and
movsb
jmp
or
ljmp
int3
ljmp
fbstp
push
push
mov
outsb
leave
xor
mov
dec
cs
ja
and
push
pop
xor
push
loopne
les
cmpsl
jb
into
pop
leave
testl
cmp
xor
insl
dec
xor
xchg
scas
pop
cmp
or
push
rclb
inc
and
aaa
mov
push
addr16
pop
faddl
jge
aas
xchg
jle
xchg
and
cmp
loopne
cmp
movb
mov
out
mov
cmpsb
jge
fs
ds
push
ss
xchg
mov
pop
cmpsb
ss
add
pop
sbb
loope
sub
test
ds
dec
push
fs
adc
pop
andl
lahf
lds
cmp
fimuls
mov
and
in
mov
dec
lods
cld
sbb
mov
cmp
mov
adc
dec
mov
inc
repnz
pushf
sub
cmpsb
call
xchg
in
imul
xor
cmp
mov
lds
dec
push
push
ljmp
std
add
inc
jle
lahf
add
test
add
rcll
js
mov
sbb
andb
mov
rcl
push
pop
sbb
sbb
and
sbb
lea
sti
mov
aam
inc
add
mov
sub
sbb
in
mov
incb
jne
adc
lods
xor
pop
imul
pop
mov
inc
mov
into
adc
xchg
mov
cmp
insb
xor
fistl
jae
cmp
xor
push
pop
add
sbb
push
mov
xor
and
lods
mov
or
cmp
sbb
jp
mov
xor
xchg
add
inc
add
movsl
add
mov
push
xor
movsb
cmp
dec
mov
adc
inc
or
cmp
out
sub
lds
and
pop
xor
es
xchg
les
loop
or
mov
mov
sti
fstl
sub
dec
into
xchg
pop
mov
xchg
insb
in
movsl
sbb
mov
negl
loop
scas
sub
cmp
call
arpl
out
loope
cmp
js
xor
lock
or
mov
pop
pop
int3
test
add
cmpsb
stc
cmp
sbb
test
mov
jb
ds
adc
and
es
pushf
xchg
insb
loope
push
jp
jge
aaa
or
mov
bound
out
fdivrp
rcrl
cli
sbb
test
mov
adc
and
xor
sahf
call
fnsave
pop
insb
lea
mov
xor
scas
push
sub
shlb
lea
pop
or
adc
push
push
ljmp
xor
cmp
rclb
shlb
xchg
imul
dec
sbb
aam
mov
dec
xchg
fstpt
cmp
or
imul
pop
fisttpl
imul
divb
cli
test
jns
and
fsubrl
aad
mov
pop
dec
shlb
sbb
add
or
pop
test
leave
popf
or
loope
inc
jae
cli
adc
sub
in
idivb
je
aaa
mov
pop
scas
push
ds
in
push
incb
leave
jae
fbstp
and
std
insb
lcall
iret
outsl
jmp
mov
pop
or
fdivrl
mov
insb
sti
pop
mov
push
inc
mov
and
lds
aas
adc
out
jne
sbb
sub
xor
dec
lods
dec
and
or
fsubs
push
cmpsb
hlt
out
mov
adc
loopne
xor
pop
sbb
xchg
pop
and
enter
bt
lods
dec
out
and
enter
and
dec
and
pop
sbb
imul
lret
sbb
ljmp
popf
jmp
decl
imul
imul
movsb
or
out
inc
pop
mov
push
out
fldl
xchg
fimull
sbbl
or
mov
dec
xchg
xchg
outsl
lret
jmp
xor
je
jge
sub
push
cmpsl
int
jge
sbb
test
add
mov
adc
dec
xchg
sbb
dec
adc
lea
dec
div
dec
dec
inc
repz
cltd
and
out
out
lret
inc
arpl
imul
adc
enter
push
sbb
das
mov
or
xor
pop
xlat
or
pop
and
test
rorb
inc
adc
and
xor
pop
and
testb
xor
ljmp
pop
xchg
faddl
int
push
cld
jmp
sub
mov
clc
dec
dec
movsb
orl
test
inc
sbb
scas
outsl
imul
or
add
jno
xor
nop
fucomp
jno
push
jae
lret
jnp
out
sahf
ljmp
ret
jne
sbb
scas
int3
ja
mov
sub
dec
sbb
inc
aas
mov
and
mov
sbb
or
das
push
pop
mulb
and
fbstp
mov
je
push
popl
pusha
jo
data16
or
and
test
out
imul
movsb
and
test
cmp
cmpsl
jmp
subl
mov
or
lcall
and
in
pop
scas
and
xchg
pushl
imul
test
insl
cmp
jnp
cmp
sub
lds
sbb
in
bound
insb
push
sbb
lds
adc
pop
rcrl
bound
ja
rcll
movsb
mov
dec
cmc
mov
push
cmp
inc
test
inc
js
inc
scas
pop
icebp
loopne
into
fisttpll
inc
movsb
add
fildll
sbb
add
push
repnz
or
out
jnp
push
pop
jne
mov
dec
pop
cld
in
cmpsb
mov
outsl
lea
out
sub
decb
aas
inc
inc
ss
sub
call
cwtl
pop
jns
rcll
push
dec
outsl
cmpsl
lret
and
or
pop
rcr
fistpl
cmp
xchg
loop
pop
adc
push
pop
dec
andb
sbb
shlb
xchg
std
adc
inc
push
pop
out
add
lds
popf
insl
pushf
jo
int
push
jmp
incl
adc
pop
and
jmp
hlt
test
loopne
mov
inc
int3
or
adc
push
or
add
imul
jb
adc
jns
mov
lret
movaps
lea
xchg
test
xchg
sub
out
popa
es
sbb
mov
hlt
scas
sbb
sbb
pop
cwtl
or
xorb
jle
sbb
out
push
xchg
dec
enter
push
js
adcl
or
and
repz
xchg
and
call
push
fildll
lods
lret
cld
icebp
in
jmp
mov
cmpsl
lods
and
and
jbe
jecxz
mov
adc
shlw
out
dec
sti
popf
pop
aad
popa
mov
js
jle
aam
lock
cmp
mov
fdivs
xor
sub
or
sbb
int3
dec
inc
movhps
sbb
xchg
cmpsb
inc
dec
cmovl
inc
addr16
or
enter
testb
add
push
push
jmp
mov
and
aam
and
mov
sbb
fwait
outsl
lods
aam
aas
mov
xlat
and
mov
sbbb
sub
sbb
dec
shrb
mov
adc
inc
mov
cmpsb
inc
inc
int3
dec
arpl
mov
les
inc
das
cmpsb
dec
int3
dec
sub
fcmovb
ljmp
jmp
imul
sbb
pop
outsb
xor
jg
leave
bound
mov
lret
xorb
inc
mull
mov
mov
mov
pushl
lret
and
popa
lahf
data16
mov
add
cs
sub
cmpsb
pop
xchg
test
lods
mov
push
inc
das
push
leave
lret
fistpll
push
ffree
out
fiaddl
push
or
outsb
adc
mov
push
and
pushf
cmc
mov
adc
fwait
mov
cmpsb
stc
xor
into
imul
test
sbb
or
cmp
adc
pop
sbb
sbb
jb
dec
cmpsb
xchg
adc
ljmp
push
loopne
mov
jae
xchg
dec
loope
jbe
popf
xchg
jmp
scas
add
mov
mov
and
adc
fstpl
adc
fidivrs
jl
orb
push
mov
or
add
loop
mov
fwait
ss
and
push
nop
test
inc
repz
mov
scas
dec
xchg
mov
gs
fcompl
adc
cmp
inc
mov
int3
push
dec
mov
mov
inc
jge
push
mov
sbb
mov
out
inc
enter
fsubrl
mov
mov
icebp
mov
cmpsl
pop
lahf
sarl
lods
jnp
mov
sar
gs
mov
int3
leave
rcrb
pop
lret
enter
scas
mov
sbb
shll
sbb
jecxz
out
shll
cld
mov
mov
mov
or
xlat
sbb
rcr
aas
add
xchg
pop
out
ja
pop
incb
or
aam
lea
imul
mov
mov
leave
cmp
add
sbb
jae
fdivrl
dec
pop
sbb
xchg
ss
and
addl
loopne
shrl
sbb
mov
xor
and
push
or
nop
repnz
mov
bound
ja
out
dec
mov
pop
out
fs
outsl
leave
and
push
cmpsb
jae
mov
mov
adc
clc
inc
sbb
jmp
dec
addr16
aad
xchg
iret
xor
frstor
dec
jge
std
cmp
xchg
in
outsb
inc
ja
jae
loope
cmc
cltd
pop
sbb
and
pop
pop
std
push
cmp
mov
je
lock
clc
push
xchg
jl
pop
pop
neg
add
fildll
int3
mov
dec
xor
imul
fs
xchg
cmpsl
push
test
test
inc
or
adc
push
leave
sbb
out
jl
inc
xor
and
dec
lea
mov
adc
push
mov
js
aas
movl
pop
sbb
and
das
push
mov
fidivrl
cmp
or
inc
mov
cmpsl
mov
mov
inc
xchg
pushf
icebp
cmp
into
inc
in
dec
mov
xchg
jmp
in
xchg
popf
jae
jno
rcrb
xor
xchg
push
xor
cld
push
sub
lret
pop
sbb
xor
ja
lret
mov
aaa
cmp
xor
pop
fadds
xchg
cli
outsl
sub
inc
ret
fmuls
addr16
cmp
imul
pop
ror
outsl
fcomps
or
or
xlat
enter
mov
inc
adc
lds
mov
dec
sbb
lods
pop
jb
dec
addl
rep
int
mov
out
aaa
xchg
sbb
and
addr16
push
std
cmp
dec
dec
push
inc
test
cmpsb
jns
cmp
test
test
shlb
sahf
cmpb
push
or
pop
hlt
mov
mov
add
mov
fs
daa
xchg
lahf
mov
pop
sbb
lea
pop
inc
cmp
pop
call
orl
jle
rcll
shl
inc
cmpsb
idivb
xor
jbe
sbb
sbb
les
and
jo
lcall
sahf
sbb
fmul
xlat
cld
in
je
mov
outsb
pop
dec
adc
and
lds
and
cld
out
fnstenv
inc
cmp
add
push
mov
fs
push
or
aas
lahf
int3
mov
fnstcw
pushf
rolb
or
cmpsb
push
repnz
into
lcall
cmp
in
fisubl
js
jp
mov
jp
sahf
shrb
lcall
sub
stc
out
mov
outsb
xor
or
daa
add
loope
cmp
jmp
push
sbb
in
cltd
sarl
and
jmp
popa
lds
jbe
cmpsl
push
xor
jns
xchg
push
sbb
imul
ror
inc
jne
adc
cmp
pop
in
lret
add
xor
es
sbb
mov
inc
sub
jns
popa
loop
out
mov
pop
push
sbb
shrl
jne
jae
cwtl
mov
pushf
sbb
std
push
sahf
adc
test
outsl
dec
sbb
divb
imul
jae
aas
jno
cwtl
popa
repz
out
out
jge
lods
test
out
cld
xchg
in
adc
lods
mov
xchg
dec
jb
mov
mov
jb
std
roll
cmpsl
std
cmp
mulb
sar
inc
xchg
xor
mov
es
std
fnstsw
lcall
jg
jmp
mov
fisubl
add
nop
jo
test
adc
mov
sbb
into
das
add
push
mov
push
aad
push
push
pop
dec
les
jge
iret
mov
add
fcoml
pop
sub
movsb
and
mov
enter
test
mov
pop
daa
and
xchg
mov
or
out
adc
sbb
sub
inc
in
sti
shlb
xlat
shrl
popa
divb
lods
test
push
push
int3
and
add
outsl
dec
mov
dec
int3
inc
xor
outsl
addr16
es
pop
sub
jo
js
cmpsl
add
pushf
mov
mov
mov
test
cmpsb
test
sarb
aam
hlt
sahf
enter
leave
test
or
pushf
pop
imul
dec
out
add
pop
add
ds
orb
xchg
xor
and
adc
orb
cmp
pop
xorl
decl
in
leave
mov
sbb
repnz
dec
add
movsb
mov
arpl
cmp
jae
lea
xchg
jmp
pop
xor
sbb
mov
sub
or
pushf
inc
mov
movsl
mov
sbb
inc
rol
cwtl
cld
sbb
jno
sub
sbb
data16
ficompl
sahf
mov
inc
fildl
nop
cmp
mov
mov
int3
add
lret
push
cmp
add
dec
lahf
push
or
cmc
arpl
add
push
les
xchg
add
lods
sub
adc
lahf
ror
rcl
arpl
les
es
jbe
in
inc
adc
mov
icebp
and
xor
adc
dec
xlat
jecxz
jge
jno
or
movsl
fsubs
mov
popl
mov
lds
cmpsl
xor
push
adc
mov
lods
test
pop
repnz
pop
push
lods
cmpsb
inc
cmp
lock
sti
jg
cltd
inc
loop
sbb
sub
xchg
pop
pop
lods
mov
and
inc
inc
lods
movhps
fdivr
negb
cmp
lods
daa
pop
cld
sbb
push
fistl
movsl
cmpsb
adc
subb
mov
fadds
incb
fwait
or
loop
mov
testb
ss
sti
and
inc
inc
adc
mov
adc
lock
cmp
pop
xlat
loope
cmp
movsl
aam
pusha
adcl
mov
pop
notb
repz
mov
add
or
outsl
pop
aaa
into
add
movsl
jbe
js
pand
stc
movsl
mov
push
cmpsb
cmp
pop
mov
sbb
pop
into
and
repz
xchg
dec
out
cltd
jle
xchg
push
cmpsb
leave
addr16
sbb
xchg
push
or
mov
mov
xchg
jbe
inc
popf
and
adc
and
add
inc
pop
es
mov
add
fsubrl
daa
jo
jmp
inc
pop
shlb
dec
test
outsb
repz
les
jnp
or
movsl
sbb
add
mov
les
pop
lock
loop
sbb
cltd
enter
xor
gs
out
cmpsb
pop
fisttps
lods
add
or
push
pop
out
inc
mov
inc
lock
das
and
cmpsb
jmp
push
rol
push
movsl
dec
insl
or
pop
push
call
stc
push
lahf
mov
cmp
and
and
and
add
testl
vsubps
pop
loop
test
and
gs
cmpb
xchg
push
mov
pop
les
xor
movsl
fisubs
les
out
imul
adc
dec
jne
jmp
andb
dec
xchg
inc
cmpsb
sbb
out
xor
xchg
and
imul
push
jg
es
jmp
push
js
push
pop
fimuls
and
nop
cmpsb
adc
cmpsb
pop
dec
pop
lds
sub
cmp
int
mov
insb
les
daa
push
push
pop
aam
ror
stos
pop
in
sahf
mov
ds
in
xchg
cmp
cmc
jmp
aaa
push
in
incb
pop
sub
xchg
sahf
adc
gs
mov
es
jle
push
xor
cmc
pop
les
dec
aaa
jecxz
pop
into
sar
add
push
testb
inc
add
js
pop
paddd
es
in
push
lds
dec
je
sbb
mov
in
mov
or
cmpsb
inc
push
icebp
daa
test
and
sahf
pop
adc
push
gs
lahf
jnp
push
nop
sarl
sub
shrb
cld
cmp
sbb
jmp
dec
scas
jns
lret
jo
loopne
sub
cmpsl
push
psraw
les
out
and
pop
push
jmp
or
dec
inc
in
or
loop
mov
jmp
pop
imul
lods
cmpsl
and
in
imul
scas
mov
xchg
lods
pop
stos
pop
lds
and
aam
or
movsb
dec
or
and
add
fiadds
jae
mov
sub
and
test
in
repz
lods
mov
icebp
andl
xor
push
xchg
and
jae
loope
inc
hlt
into
inc
aam
shl
mov
pop
mov
cmp
cmp
out
mov
addr16
push
push
bnd
or
xchg
fsts
test
adc
cmpsl
out
jo
rorl
mov
pop
xor
arpl
icebp
pop
xchg
into
insb
inc
adc
pop
loop
mov
dec
insl
out
jle
les
gs
mov
testb
iret
adc
ljmp
pop
out
out
or
mov
sub
mov
push
movsl
sbb
outsl
add
mov
shrb
sub
mov
out
inc
and
das
or
rolb
movsb
testb
jge
movhps
loop
test
push
cmpsl
test
push
je
push
and
dec
pop
mov
fdivl
scas
popf
pop
mov
loope
bound
les
ss
or
and
outsb
in
in
adc
fs
cmp
in
push
push
mov
lods
outsl
cld
pop
pushf
add
cmpsl
and
xor
hlt
imul
add
popa
and
mov
movsl
add
push
cmpsb
repnz
lcall
xadd
mov
or
stos
cmc
call
daa
cmpsb
movsb
sub
lods
mov
xchg
ljmp
adc
xchg
daa
les
test
inc
and
lret
push
ds
orb
int
es
inc
call
les
insl
mov
add
sbb
movsl
loope
shl
sbb
lret
lods
es
fsubrs
inc
mov
sbb
mov
les
push
lcall
nop
and
jns
stos
pop
pop
shlb
stos
cli
jmp
adc
repnz
out
fstpl
jecxz
inc
push
outsb
mov
push
fildl
cmp
lcall
or
xor
repnz
jecxz
sub
pinsrw
mov
pop
lods
mov
push
sarb
sbbl
and
scas
jmp
push
sub
pop
or
cld
cmpsb
movsb
add
fisubrs
insb
cmpsb
es
test
xchg
in
add
sub
and
gs
dec
leave
push
push
cmpsl
in
ret
and
cmc
xchg
add
push
into
inc
inc
inc
dec
loope
cmp
push
movsb
adc
xor
adc
pop
mov
out
push
loopne
and
jl
xchg
and
add
mov
mov
in
adc
add
sub
loop
daa
lea
insl
rcrb
in
pop
jg
mov
mov
out
xor
push
pop
rcrb
testl
xor
inc
or
pop
ret
pusha
and
jecxz
pop
cmp
mov
add
cmc
and
push
add
adc
rcll
mov
and
mov
les
push
add
test
inc
inc
out
mov
or
cmp
movsb
push
push
push
adc
add
stos
js
xor
aaa
push
push
mulb
mov
mov
in
sbb
xlat
adc
clc
xor
notb
stos
inc
je
adc
mov
or
test
daa
xchg
pop
sub
imul
cmpsl
out
xchg
dec
lea
movsb
or
cmpsb
jns
sbb
sub
jno
out
add
adc
dec
jle
add
xchg
fiadds
xor
add
fistl
or
shll
aam
lods
fildll
jb
das
jp
pop
dec
in
push
inc
int3
daa
movsl
push
add
cmc
mov
cmpsb
cmpsl
stos
pop
int3
cs
sti
push
and
shr
mov
or
pop
dec
add
mov
out
cmpsl
iret
jmp
mov
xchg
or
and
mov
xchg
addr16
nop
and
cmpsl
lret
add
xchg
or
cmp
pop
inc
loopne
cmp
pop
mov
sbbb
andl
inc
push
loop
or
xchg
pop
add
inc
data16
dec
sub
inc
lahf
mov
mov
mov
dec
outsl
pop
xorb
mov
loope
xor
mov
and
and
rcll
mov
inc
mov
addr16
sub
bound
mov
mov
call
insl
cmpsb
mov
jecxz
in
out
addr16
cmp
jmp
iret
and
push
hlt
inc
add
xchg
cmp
outsb
push
movsl
aas
inc
dec
jecxz
lret
jg
repz
pushf
sbb
or
icebp
push
movb
push
and
out
xor
add
mov
ljmp
jg
pop
mull
dec
mov
lcall
add
or
jae
push
pop
fs
addr16
jp
pop
inc
pop
enter
adc
pop
movsb
mov
xchg
test
cmpsb
inc
lds
sbb
jns
and
addr16
sbb
pop
sub
jmp
pop
and
popa
inc
roll
and
in
js
or
arpl
je
jge
pop
inc
lcall
arpl
push
or
es
inc
push
inc
mov
mov
pop
sbb
cmpsl
es
cli
xchg
pop
sbb
out
cmpsl
test
jns
daa
jp
mov
pop
fsubrs
dec
cmpsl
fldt
mov
sbb
dec
jbe
insl
mov
clc
sub
sbb
pop
pop
mov
xchg
ljmp
push
push
int3
outsl
pop
cwtl
mov
or
xchg
pop
rcr
adc
xchg
lret
mov
js
sbb
sbb
adc
aas
push
jmp
xor
cmpsb
loopne
pop
aaa
sub
cmp
ljmp
xlat
and
in
test
out
adc
push
daa
es
int3
mov
divl
fldcw
lahf
pop
mov
sub
nop
and
push
mov
or
cmpsl
dec
arpl
mov
sbb
jb
pop
mov
pop
mov
ljmp
inc
inc
std
adcb
loopne
pop
ret
outsb
roll
pop
cmp
out
mov
mov
xchg
sub
cmp
pop
jl
sub
push
gs
pop
fwait
inc
inc
and
test
sub
mov
xchg
fwait
jg
mov
lea
pop
sbb
xchg
sbb
testl
xchg
enter
cmp
cmpsl
es
push
pop
sbb
sti
xchg
xchg
cmp
ss
loope
pop
pop
push
iret
daa
clc
enter
xor
inc
ja
xchg
xchg
test
icebp
jb
adc
divb
mov
and
adc
sub
mov
pop
inc
xor
fildll
lahf
adc
xchg
enter
icebp
lret
xchg
or
push
push
aam
clc
insb
and
inc
lahf
xor
xchg
sahf
mov
jae
xchg
out
add
cmp
push
jno
addr16
pop
stos
push
mov
and
fnsave
adc
adc
and
adc
or
sub
sbb
es
inc
rcrb
push
movsl
xchg
lret
pop
adc
jo
out
and
sar
or
add
pop
outsl
cs
xor
testl
pop
dec
mov
pop
jo
out
dec
fldt
sarb
pop
scas
push
pop
and
adc
sub
xchg
mov
stos
xor
jbe
sub
xchg
sbb
pop
or
mov
push
test
mov
addr16
mov
dec
es
das
cmpsb
shlb
mov
push
dec
dec
xor
in
mov
and
in
daa
dec
or
mov
inc
mov
add
dec
shlb
pop
push
test
mov
in
insb
sub
clc
leave
adc
lods
dec
xchg
in
out
lret
or
push
xor
xlat
sub
pop
mov
or
add
lea
fwait
cmc
mov
pop
hlt
lods
addr16
dec
out
jae
pop
add
xchg
pop
inc
pop
push
pop
or
out
xchg
push
xchg
cmpsl
mov
mov
es
adc
or
out
mov
cmp
daa
sbb
adc
jg
xchg
and
lahf
ljmp
pop
dec
je
or
stos
js
jmp
lods
mov
aas
popf
mov
rcrl
repnz
adc
or
addr16
adc
mov
add
push
xchg
aad
gs
cld
xchg
and
pop
test
and
loopne
test
cmpsl
sbb
lods
pop
or
inc
int3
and
cmpsl
repz
fld
cmp
cwtl
inc
out
cli
cmpsl
dec
cmpsb
xchg
inc
fwait
mov
and
push
daa
sahf
xchg
jne
sbb
cmpsl
fbstp
addr16
push
les
nop
into
and
pop
test
orl
inc
sub
mov
xchg
iret
and
mov
inc
popf
lss
out
out
dec
and
mov
stos
mov
cmp
mov
out
inc
dec
adc
pop
insb
mov
adc
nop
jmp
pop
ja
mull
es
repz
sub
or
ljmp
jl
push
lds
dec
jnp
or
pop
sahf
or
aam
faddl
imul
xor
add
adc
and
pop
sub
dec
dec
hlt
pop
pop
xchg
mov
push
es
pusha
inc
jmp
inc
movsb
jmp
stos
inc
adc
pop
pop
stos
out
xchg
pop
jns
or
push
je
xchg
divl
leave
lahf
or
inc
mov
cmp
aam
mov
cmpsb
sub
in
mov
lret
sub
les
pop
sbb
out
dec
cmp
out
and
pusha
and
stos
fs
inc
inc
sbb
pop
dec
mov
rorl
inc
daa
mov
loope
sub
xchg
jl
popa
roll
pop
in
out
jne
in
call
add
mov
inc
add
sbb
inc
fmuls
fmulp
mov
mov
int
in
cli
cmpsb
xchg
pop
jg
sub
out
xchg
loopne
dec
insl
and
shlb
fcoml
sbb
sub
lds
xchg
lea
fildll
inc
sbb
arpl
and
jb
ljmp
lods
xchg
and
xchg
push
fldl
and
pushw
xchg
mov
push
cmpsl
xchg
jl
pop
leave
ljmp
outsl
repz
xchg
pop
movsl
push
out
and
test
dec
pop
fidivs
out
and
out
sbb
cli
push
mulb
mov
push
fs
pop
adc
adc
filds
pop
inc
movsb
lret
sub
pop
cmp
test
inc
subl
out
out
xchg
or
dec
pop
enter
es
lret
rep
jns
andl
add
mov
in
arpl
or
cmpsb
psubd
imul
mov
mov
lcall
ret
notb
inc
push
sub
icebp
xor
movsb
mov
sub
cmpsb
sbb
out
fdivrl
out
dec
xchg
push
pusha
addr16
pop
push
daa
leave
and
cmp
add
sub
gs
out
dec
and
mov
xor
dec
fstpl
push
out
cmpsl
scas
push
or
or
js
sbb
shlb
cmp
mov
mov
jle
mov
js
cmpsb
aas
push
mov
xchg
xor
dec
jno
iret
pop
in
push
dec
fs
divl
adc
mov
cltd
adc
repz
sbb
pop
mov
and
mov
inc
clc
out
daa
or
mov
mov
popa
cmp
popfw
xlat
sbb
push
cwtl
into
inc
sahf
mov
and
mov
es
in
push
pop
sbb
xchg
jno
pop
leave
notl
es
cmp
or
inc
sub
mov
cmc
test
std
out
daa
es
cld
lea
subl
out
dec
imul
addr16
inc
mov
pop
jge
inc
shll
lahf
cmpsl
pop
ss
pop
mov
sub
into
jno
das
mov
mull
or
pop
inc
or
inc
roll
cmp
es
notb
cmp
pushf
pop
lret
btc
ljmp
cmp
push
jp
pop
mov
push
shll
out
cltd
inc
push
pop
cmpsb
mov
stos
test
pushf
addr16
xor
lds
in
cld
daa
outsb
popf
pop
push
out
sub
fwait
push
inc
sbb
sti
or
pop
push
dec
enter
jnp
popa
xor
mov
in
outsb
addr16
adc
out
xchg
adc
pop
fisttpl
loopew
mov
pop
mov
sbb
sbb
sbb
dec
mov
pop
adc
add
xchg
aad
addr16
push
vmovhpd
int
cltd
clc
pmulhuw
xchg
and
push
mov
cmpsl
dec
aas
scas
adc
pop
shll
jbe
je
adc
popa
push
jae
adc
sahf
scas
ret
int
inc
dec
cmp
inc
pop
jnp
das
push
xor
sbb
call
cltd
add
mov
cmpsl
outsl
sub
push
mov
loope
pop
iret
icebp
sbb
leave
jne
mov
jns
mov
loop
and
jne
xor
shll
test
repnz
jne
jno
pop
adc
andb
mov
in
pushf
mov
in
xchg
jbe
push
xchg
dec
inc
push
adc
adc
pop
xchg
pop
call
es
sbb
cmpsl
addr16
mov
loopne
cmpsb
mov
fsts
daa
xchg
int3
and
or
and
pushf
repnz
mov
jl
xor
cltd
mov
lahf
call
cmpsl
pop
or
je
push
iret
outsb
inc
and
sahf
outsl
gs
movsl
push
lcall
mov
scas
xchg
aam
hlt
in
jo
dec
sbb
shrl
stos
loopne
sbb
je
std
xchg
divb
pushf
or
rcrl
inc
outsb
lods
push
mov
lods
movsl
shl
es
jmp
xchg
push
sbb
in
mov
dec
xor
enter
test
lea
movsb
loop
mulb
das
jmp
movsl
mov
loope
xchg
into
out
scas
lds
jb
aam
es
pusha
sti
push
pushf
in
lods
mov
movsb
mov
jle
xorb
and
into
sahf
pop
push
and
aaa
push
sti
pop
sbb
aam
and
fisttps
pusha
xchg
sarb
mov
mov
mov
sub
movsl
cmpsb
cmpsl
add
push
inc
pop
cmc
xor
pushf
and
mov
popa
xor
jae
pop
inc
js
jmp
es
cmc
cmp
aad
or
outsb
das
mov
jecxz
jne
mov
in
cltd
sub
xor
es
and
mov
add
adc
add
or
adc
fwait
lds
insb
mov
inc
int
iret
cmpsl
xor
filds
dec
lcall
roll
or
arpl
dec
jmp
inc
aas
cltd
loop
push
pop
int3
mov
inc
scas
scas
movb
adc
cmp
lret
nop
int
bound
dec
lahf
rclb
or
test
lds
or
cltd
stos
inc
mov
xor
in
in
aaa
fwait
jne
popl
mov
ja
cmpl
sti
xor
xchg
inc
adc
lods
inc
adc
lret
outsl
mov
pop
push
rolb
pop
nop
sbb
pop
xchg
iret
lds
mov
mov
aaa
pop
movb
jnp
mov
lret
mov
cmp
mov
popa
or
call
adc
cltd
xchg
shufps
rolb
aaa
repz
cmpsl
or
popa
inc
imul
aad
xor
inc
pusha
js
cltd
push
pop
ljmp
stos
pop
bswap
add
or
mov
lahf
outsl
push
arpl
ret
ds
or
inc
cwtl
movzbl
sti
bnd
ds
pushf
add
cmc
push
xor
pop
pop
pop
mov
push
xchg
aas
push
scas
pop
jo
sahf
lods
mov
cmc
lahf
aaa
fidivrl
inc
out
dec
pop
mov
insb
cli
or
inc
loopne
call
aas
pop
jl
add
jnp
pop
jg
sbb
xor
lds
fnsave
cli
dec
pop
lods
scas
and
out
std
and
mov
or
pop
mov
out
mov
shl
ss
pop
faddl
jns
repnz
pop
xor
aam
mov
cmp
mov
cmp
out
out
mov
push
sub
jecxz
dec
sbb
pop
ja
js
mov
cmp
jmp
sub
jecxz
push
and
push
aad
lods
addl
xor
or
pop
jne
ss
imul
inc
fidivrl
shlb
adc
bnd
mov
pop
in
xchg
cmpb
add
movsl
sub
lret
adc
std
out
xchg
jge
or
mov
xor
pop
leave
inc
outsl
mov
test
daa
ficoml
addl
pop
loope
cli
sahf
inc
popa
jnp
dec
in
lock
aaa
dec
add
mov
jb
pushf
pop
addl
push
in
aas
sub
pop
xchg
fdivrs
movsl
pop
lock
mov
inc
adc
and
mov
xor
mov
idivl
xchg
mov
sub
and
pop
add
insl
jae
sbb
mov
jmp
out
xor
lret
adc
sbb
adc
rcll
or
pop
fs
xlat
lods
inc
mov
or
and
mov
xchg
or
mov
dec
add
es
pop
pop
hlt
popf
pop
outsb
stos
jno
inc
ds
movb
repz
pop
mov
movsl
outsb
sbb
fimuls
pop
pop
or
xor
loop
arpl
pop
fcomps
jb
ds
pop
sbb
addr16
xchg
cmp
lods
gs
movsb
mov
and
or
pop
inc
and
inc
in
push
ficomps
mov
jne
add
lds
xchg
pop
jmp
and
int
mov
push
jg
hlt
pop
jmp
sub
arpl
out
mov
sbb
mov
fxch
in
xchg
loop
inc
pop
sub
xchg
leave
xor
xchg
stos
lahf
outsb
sub
fs
pop
lea
call
sub
test
mov
pop
cltd
test
cmp
sub
mov
cmpb
inc
adc
mov
push
inc
push
in
mov
lcall
aaa
in
call
sbb
sbbl
scas
push
push
lods
and
rorb
shrl
mov
nop
rcrb
aad
push
stos
push
movsl
inc
sbb
cmpsb
aaa
or
out
pop
add
outsl
outsb
pop
adc
sbb
ljmp
fnstenv
pop
ficomps
fdivrs
sub
je
mov
xchg
inc
inc
sti
cltd
pop
cltd
movl
or
cmp
adc
pushfw
sub
cwtl
dec
jmp
xchg
pop
sub
mov
inc
jae
pop
sbb
cwtl
pop
mov
fistpll
es
data16
cmpsb
inc
cmc
movsl
lds
mov
clc
inc
popf
and
test
test
add
dec
jl
aad
pop
or
pop
fs
xor
lds
jne
adc
or
dec
push
ss
test
mov
jp
xchg
pop
sbb
mov
xchg
pop
mov
in
lret
dec
mov
std
sub
test
or
pop
sub
xor
movsl
pop
xor
call
or
pop
sub
stos
pop
fisubl
loop
jl
out
repz
popf
pop
ror
cmp
nop
imul
mov
mov
mov
mulb
jae
dec
pushf
inc
xor
sub
dec
mov
cmp
fadd
mov
xchg
addr16
cmp
incl
notb
xor
jb
ss
subl
int3
pop
pop
add
mov
fbld
enter
sahf
stc
outsb
inc
lret
stos
inc
push
mov
mov
xor
adc
sub
xor
dec
mov
cmpsl
hlt
out
fidivs
mov
push
jecxz
inc
test
jmp
jb
out
mov
sub
xchg
insl
pop
sbb
es
repz
pop
xor
aas
ja
mov
pop
adc
adc
out
xlat
loopne,pn
cltd
pop
sub
sbb
cli
into
cmp
and
xor
pop
cmp
adcl
mov
xchg
addr16
lods
pop
imul
lock
mov
sbb
rorb
cmp
mov
push
fdivr
push
sub
dec
inc
xchg
scas
pop
bound
cmp
lds
pop
cmpsb
test
and
mov
aam
into
int3
dec
int
xchg
in
adc
jno
and
pop
push
and
mov
push
cmpsb
xchg
jge
push
popa
mov
xor
add
cmp
pop
je
pusha
test
gs
dec
movsl
sbb
fsubrs
push
movsb
xor
jg
insl
test
mov
cwtl
xor
dec
mov
inc
fldt
inc
insl
mov
pop
mov
in
jo
rol
push
test
sahf
out
mov
cmp
out
setl
pop
mulb
cmp
pop
xchg
pop
mov
movsb
push
lea
out
jo
push
movsl
sub
das
pop
movb
fisttps
pushf
push
add
xor
lock
xchg
mov
xor
sbb
adc
into
xchg
repz
push
scas
pop
scas
sbb
ljmp
fadd
fiadds
pop
sbb
mov
pop
push
cmp
lahf
push
jge
adc
aaa
and
cmp
adc
insb
sbb
push
inc
ss
xor
lds
xchg
push
cmc
leave
stc
dec
jp
fmuls
pusha
or
dec
imul
push
pop
pop
push
outsl
xor
cmp
inc
int3
xor
ds
and
push
jnp,pn
loope
sbb
pop
and
cmp
test
mov
inc
jp
or
movsb
fisttps
jmp
pop
inc
pop
jl
mov
pusha
sahf
outsb
test
pop
push
adc
pop
mov
and
rol
pop
aas
cmp
inc
sub
les
mov
push
fwait
jl
and
pop
or
insb
pop
test
fsubl
inc
pop
int
dec
inc
mov
arpl
add
jmp
fs
jg
push
int
mov
imul
adc
pop
lret
ds
pop
push
cltd
rol
xor
and
xchg
imul
pop
dec
insb
daa
pop
icebp
or
fwait
int
or
ljmp
adc
mov
push
bound
dec
dec
xchg
push
mov
filds
push
jge
xor
mov
pop
les
xor
cmc
push
or
add
inc
icebp
pop
fs
inc
frstor
int
pop
push
test
imul
sbb
movl
icebp
dec
cmp
pop
dec
adc
sbb
movl
outsl
or
xchg
std
xchg
mov
jae
mov
pop
loope
out
inc
mov
or
xor
popa
fiaddl
fld
xor
ss
xor
pop
mov
jae
dec
cmp
dec
mov
repnz
out
fs
and
adc
sbb
mov
inc
mov
jnp
rorb
mov
or
or
or
inc
mov
es
es
push
out
and
nop
mov
data16
jb
xchg
movsb
pop
mov
pop
in
out
pop
sub
dec
dec
popf
pop
dec
lods
inc
pop
ljmp
cmc
mov
mov
daa
fisubs
scas
sbb
aaa
mov
sbb
mov
inc
rcll
dec
adc
lock
cmp
lds
cmpsb
cmp
pop
mov
cmpsb
outsl
insl
jmp
xchg
test
cmpsl
das
movsb
push
jbe
jno
push
sub
fs
popl
dec
out
and
push
repnz
nop
jae
mov
jmp
mov
pop
stos
dec
sub
mov
sbb
adc
mov
movsb
push
adc
test
mov
push
and
and
inc
data16
inc
pushf
adc
in
add
inc
xor
imul
aaa
data16
or
fs
lds
or
std
cmp
stos
cmp
enter
jb
pop
test
push
pop
or
dec
sub
xor
or
pushf
xor
in
fcmovnbe
int3
add
movsl
xchg
iret
mov
jmp
jo
push
repnz
xacquire
icebp
fsubrl
xor
pop
pop
rcl
mov
or
js
sbb
jmp
sbb
mov
or
jmp
arpl
xor
add
pop
pop
mov
nop
lock
xlat
cmc
mov
mov
mov
or
inc
pop
sbb
imul
xor
jne
jae
repnz
xor
mov
push
xchg
sahf
adcl
dec
movsl
pop
or
gs
inc
adc
jne
mov
imul
call
add
popf
nopl
adc
pop
ficoml
push
addr16
ljmp
arpl
fdivs
xchg
pusha
fdiv
dec
mov
inc
jbe
aad
pop
fldcw
incb
ljmp
push
sub
jbe
out
pop
ljmp
pop
jo
push
rolb
testb
dec
inc
pop
jbe
lods
jmp
loope,pn
push
aam
inc
sbb
xor
and
dec
pop
fisttps
or
addl
lea
pop
push
cmc
xchg
aas
hlt
jle
bound
movsb
inc
fs
popf
or
nop
pop
inc
push
and
push
lret
shrl
aas
lcall
pop
mov
sbb
shrb
push
mov
cld
adc
xchg
and
popa
lcall
shll
sub
cltd
repnz
in
and
fiaddl
loopne
fs
pop
dec
add
jbe
pop
leave
sub
sbb
mov
cmp
inc
pop
cwtl
test
fisubrl
dec
or
add
leave
push
aam
push
cmpsb
xchg
aaa
mov
sbbb
adc
sub
push
inc
pusha
repnz
outsl
xchg
or
jns
out
enter
int
mov
dec
push
xchg
outsl
sub
inc
push
or
lds
dec
push
cld
fadds
dec
mov
adc
xor
pop
gs
pop
lock
pop
cli
push
inc
cmpsl
es
loope
lcall
out
outsl
jmp
cmp
xorl
fiaddl
imulb
lods
dec
out
push
push
pop
inc
xor
mov
lds
xchg
xchg
mov
rcrl
test
fsubs
out
mov
mov
notb
push
inc
pop
sub
fists
cmp
jmp
icebp
mov
xor
pop
fwait
sbbb
mov
gs
push
and
mov
mov
add
inc
pushl
das
andl
shufps
and
sti
mov
add
or
mov
gs
fs
aas
pop
jg
add
pop
mov
testb
inc
into
sbbl
das
out
mov
pop
pop
imul
mov
or
inc
dec
push
push
pop
cmc
pop
push
adc
pop
lea
call
inc
mov
adc
pop
mov
scas
loopne
in
lods
jo
mulb
pop
pop
bound
arpl
sub
pop
test
jecxz
xor
pop
ljmp
mov
rclb
xlat
fsubp
popa
inc
pop
cmp
xorl
scas
xchg
mov
push
sub
cmc
rolb
adcb
sbb
xor
jp
lods
aad
push
roll
cmp
leave
mov
pop
xor
xlat
jl
dec
psadbw
movsl
in
dec
dec
js
or
pop
inc
jo
cmp
adc
addb
pop
sub
mov
adc
or
mov
or
jecxz
push
pop
incl
mov
sub
pop
js
lret
sub
dec
out
pop
jp
shrl
fsubp
and
push
mov
test
sbb
dec
dec
or
jl
mov
push
mov
mov
pop
repnz
test
aam
xchg
adc
fildll
pop
cmp
jb
fnstcw
xchg
ret
ds
pop
mov
iret
jmp
sub
jecxz
add
push
xor
or
mov
pop
mov
add
mov
sbb
push
les
push
movsl
jp
jns
xchg
enter
out
outsl
inc
lds
shrl
and
and
insb
jno
inc
dec
jb
xchg
daa
inc
inc
mov
xchg
cli
pop
xchg
aaa
push
scas
inc
jno
add
fiadds
fwait
or
pop
jnp
push
cmp
pop
pop
pop
addl
sbb
xor
mov
sbb
es
adc
inc
rcll
xchg
and
pop
out
or
jns
arpl
nop
push
test
arpl
and
imul
push
push
pop
jne
in
jmp
sub
bound
filds
mov
add
mov
dec
int
add
adc
pop
jae
sbb
cmp
mov
fs
jbe
mov
pop
adc
pop
addr16
lret
out
push
aad
sti
pop
pop
jbe
ret
cmpsl
test
adc
adc
test
mov
lcall
sub
pop
fs
and
pop
insl
jns
mov
jnp
int
jl
push
sub
pop
lcall
shlb
orl
pop
aam
pcmpeqd
mov
fldcw
notb
adc
lock
cld
pop
push
ljmp
bound
psubsw
mov
cli
push
mov
pop
jbe
adc
and
lods
es
das
pop
xor
loop
pop
push
aam
inc
aaa
dec
mov
pop
test
jnp
fcomps
jae
mov
mov
push
inc
lahf
pop
out
or
fdivrl
xchg
es
ljmp
sbb
lcall
out
pop
pop
mov
mov
and
roll
cmp
sti
push
adc
loopne
adc
mov
mov
pop
int3
and
pop
xorl
shrl
arpl
stc
push
pop
or
dec
pop
mov
mov
mov
movsb
push
gs
xlat
icebp
xchg
or
cmp
enter
jg
aas
xchg
pop
and
cmp
xchg
pop
cli
jmp
pop
adc
pusha
fdivr
pop
mov
mov
loop
in
pop
add
addr16
ljmp
scas
pop
mov
dec
hlt
bound
add
popf
push
add
inc
sti
out
loope
mov
add
lret
nop
faddl
push
ja
pop
xchg
cmpb
add
pop
fcmovnu
jne
scas
pop
pop
pop
mov
cmp
pop
add
cld
adc
lock
cmp
jle
mov
xor
pop
loopne
cltd
sbb
bound
mov
addb
aad
fildll
sar
jmp
pop
mov
cmp
pusha
mov
or
jecxz
pop
mov
rcll
pushf
adc
pop
stos
mov
or
mov
in
movaps
push
stos
cmpsb
or
pop
push
or
aas
pop
dec
inc
and
pop
jecxz
cli
iret
clc
int
xor
push
mov
cld
add
cltd
pop
mov
push
in
jb
jae
out
mov
dec
dec
lea
pop
ret
lods
scas
pop
push
das
bound
and
cmpsl
lea
mov
adc
xor
push
rol
out
jne
jb
clc
movups
cltd
insl
stos
sub
in
push
or
test
dec
mov
add
push
lret
dec
add
insl
sbb
push
lret
push
mov
addb
scas
addr16
repnz
mov
mov
adc
xchg
dec
jge
mov
adc
sub
enter
and
sahf
pushf
popa
mov
dec
inc
pop
push
xchg
mov
rcrl
fiaddl
fs
or
cmc
int3
push
aam
lahf
mov
in
pop
inc
mov
xchg
and
mov
xchg
and
mov
pop
inc
ja
mov
sbb
lods
jb
jl
adc
jo
pop
cmp
fdiv
bnd
fnstsw
addr16
cmc
mov
movsl
test
pop
movsb
mov
inc
pop
jb
add
pop
enter
or
movq
add
test
cmp
out
and
adc
aaa
gs
popa
push
jne
aad
ljmp
dec
mov
out
xor
das
sub
rolb
fiaddl
xchg
pop
mov
dec
lds
sbb
cmp
sbb
jnp
sub
imul
sbb
push
pop
mov
cmpsl
xor
push
pop
or
lock
cli
pcmpgtd
xchg
pop
jbe
in
xchg
cwtl
out
lcall
test
imul
rclb
pop
or
dec
mov
dec
in
cwtl
mov
xor
add
push
fiaddl
add
into
xadd
rorb
xchg
cld
pop
clc
aas
push
mov
xor
sub
int
xchg
and
mov
dec
and
out
inc
or
pop
ss
adc
out
gs
xor
aaa
dec
mov
shll
mov
sbb
inc
add
inc
stos
push
pop
sbb
call
push
or
pop
sbb
jnp
lods
cmp
je
adc
push
pop
ret
jl
or
pop
fstpt
xor
mov
push
pop
jne
div
xchg
repz
adc
outsl
clc
sbb
mov
out
out
ficompl
inc
daa
ljmp
jnp
sub
or
inc
mov
sbbl
or
das
sahf
insl
pop
mov
push
lds
sbb
jmp
inc
fnstcw
pushf
xor
dec
test
in
enter
pop
or
cmp
ljmp
popf
sbb
aas
fisttpl
fs
and
movsl
mov
cmpsb
test
arpl
xchg
scas
adcb
mov
add
movl
or
dec
dec
mov
ret
idivb
outsb
aas
daa
pop
mov
mov
or
out
shlb
pop
jnp
fadd
cmpsb
bound
mov
adc
inc
loopne
add
enter
into
pushf
xchg
sbb
adc
pop
mov
fmuls
push
adc
jo
int3
mov
sbb
ds
imul
sbb
jae
cmp
hlt
iret
lods
xorb
jb
add
pop
into
das
mov
test
nop
or
daa
stos
cli
mov
adc
or
xlat
cwtl
inc
add
and
fadds
adc
pop
hlt
mov
aad
notb
jge
fmuls
mov
movsl
or
dec
cmc
nop
jno
xchg
adc
pusha
cmp
sti
dec
arpl
mov
pop
movsb
inc
or
mov
loop
mov
pop
cmp
sarb
out
std
xchg
mov
xor
push
cmc
iret
cld
nop
jbe
cmp
rolb
ss
cs
jmp
mov
ret
int
addl
sahf
xchg
cmp
push
mov
and
les
adc
inc
movsb
ret
mov
fstpt
mov
pop
aam
push
push
sbbl
ret
mov
jbe
push
xor
push
stos
push
and
mov
xchg
sbb
xor
popa
inc
pop
push
cld
lea
insl
or
mov
pushf
push
adc
sbb
lock
out
and
pusha
pop
rclb
fmuls
and
inc
pop
and
fdivrl
outsb
pop
or
imul
jle
xchg
cwtl
in
sbb
sbb
into
movsb
and
arpl
sub
push
pop
xchg
aam
add
pop
sub
mov
pop
dec
jno
push
mov
sbb
pop
mov
xchg
xchg
outsb
pop
lods
nop
es
jg
out
cmp
jle
cld
mov
cmp
adcl
lcall
pop
inc
sbb
mov
pop
fisubs
mov
pop
jmp
aad
lret
cmc
aam
and
or
mov
enter
xlat
push
shlb
pushf
fs
mov
das
nop
in
lret
sub
imul
data16
cs
mov
pushf
scas
mov
cwtl
add
loop
mov
cmp
pop
dec
jnp
cmpsl
dec
xchg
in
inc
inc
adc
pop
icebp
shrb
adc
xchg
popf
fwait
mov
inc
dec
cmp
add
cmc
adc
adc
sub
sbb
or
pop
mov
int
cs
sub
enter
fmuls
scas
mov
mov
sbb
pop
std
push
in
sbb
or
iret
rorb
xor
and
andb
add
xchg
mov
push
fsubl
arpl
jnp
pop
jmp
add
inc
mov
mov
add
mov
hlt
pop
fsts
cmp
sti
imul
sub
mov
dec
pop
std
fwait
sub
xlat
repnz
hlt
mov
aad
pop
cmc
popa
lods
or
pop
sarb
sub
in
pop
mov
shr
test
sbb
jg
loop
outsb
aaa
dec
pop
and
or
jp
push
push
cltd
mov
adc
push
pcmpgtw
mov
adc
ficoms
frstor
sbb
or
pop
idivl
sub
mov
mov
aas
push
mov
adc
push
cli
pop
in
lret
jecxz
push
insl
outsl
pop
inc
sbb
and
mov
push
or
mov
xor
pop
roll
cwtl
pop
mov
inc
pop
fidivs
xchg
sbb
pop
push
lcall
jg
icebp
movb
pcmpgtw
or
sub
push
pop
push
faddl
ljmp
cmp
out
jle
inc
repnz
or
shl
aas
pop
int
inc
push
jns
sbb
pop
mov
inc
movsl
enter
mov
push
dec
adc
dec
pop
sbbb
or
fisttpl
jnp
mov
pop
imull
dec
mov
cmp
inc
jmp
arpl
and
js
lahf
cmp
and
sub
aas
or
pop
xchg
mov
rolb
jge
aaa
dec
out
mov
mov
jbe
or
fs
sbb
pusha
xor
mov
and
iret
in
mov
sub
mov
mov
dec
jecxz
push
or
sub
push
stos
leave
or
popa
lods
jle
xchg
and
js
das
adc
xchg
sbb
andb
inc
insl
sbb
sbb
dec
mull
std
popf
daa
adc
mov
outsl
icebp
cmp
std
sbb
jmp
add
mov
int
sub
jecxz
das
cli
and
sbb
data16
push
xorb
add
xchg
add
std
jle
scas
out
jb
test
xchg
pop
jne
jl
mov
or
outsl
and
fmull
cld
cmp
movsb
pop
pop
dec
stos
mov
mov
repnz
push
enter
addr16
pop
or
movb
or
jo
inc
arpl
stos
mov
jne
jno
ljmp
cmp
sbb
xchg
push
test
inc
sub
adc
adc
xorl
jbe
pop
mov
dec
and
mov
mov
sbb
fsin
inc
imul
inc
lods
add
adcl
push
cmpsl
das
jmp
pushf
push
mov
pop
pop
or
enter
movsl
scas
aam
pop
and
shlb
lahf
js
or
verr
aas
aaa
lea
inc
and
xor
inc
xchg
pop
vmovshdup
les
push
fwait
insb
inc
add
inc
outsb
stos
cwtl
inc
inc
push
jb
testb
test
fbstp
or
shll
in
sahf
mov
mov
sub
out
add
or
stos
adc
sbb
icebp
sbb
push
xchg
and
imull
mov
icebp
or
cmpb
xlat
movsl
jg
sub
push
inc
stc
push
add
pop
push
jmp
or
mov
shl
xchg
fs
jl
sbb
pop
xchg
sahf
inc
movsl
jb
xchg
dec
or
inc
ds
sub
fcmovnu
inc
add
xchg
jnp
dec
je
addl
int
lret
mov
movsb
xchg
xchg
movsl
xchg
les
pmuludq
push
fsubs
add
dec
adc
adc
je
sbb
dec
ds
mov
mov
scas
loop
mov
adc
sub
dec
xchg
test
pop
stos
iret
push
add
int3
insl
push
jecxz
and
cmp
clc
xchg
and
hlt
add
or
mov
fisubs
fcompl
inc
add
xchg
loop
pop
push
or
ja
xchg
mov
imul
sbb
sub
mov
popf
mov
push
pushf
or
imul
or
add
je
or
div
sub
in
pop
fcmovne
paddw
push
les
push
pop
and
xchg
push
mov
xchg
cmpsb
outsb
scas
ljmp
movsb
cmp
push
std
mov
jge
jo
and
icebp
stc
lods
cmpsb
ljmp
mov
add
testb
cmpb
sub
push
imul
sahf
aam
adc
cltd
aad
xchg
jns
ficoml
lcall
mov
push
cmpsb
sti
jmp
xchg
imul
dec
xor
fwait
ret
sbb
insl
mov
sbb
cmp
dec
mov
gs
sbb
xchg
inc
mov
lea
cmp
mov
lahf
imul
or
sub
das
rorb
jp
daa
call
getsec
mov
das
or
and
pusha
adc
into
adc
jmp
popa
icebp
adc
xchg
cmc
lds
push
or
add
data16
mov
enter
stc
xchg
out
scas
jmp
ss
jl
fwait
push
jns
cld
jmp
lock
sbb
sub
mov
into
and
push
out
jmp
jg
add
inc
rclb
insl
aas
dec
push
jne
jb
sub
push
pop
or
aaa
scas
jmp
sbb
mov
enter
xchg
fdivs
mov
jno
and
cmpsb
jmp
das
or
mov
sbb
jae
lds
pop
pop
cmp
test
add
pusha
andb
sbb
xor
mov
insb
add
popf
mov
sti
inc
adc
repnz
cltd
mov
out
ss
orb
es
mov
ja
jge
pop
shrl
inc
inc
das
mov
in
insb
mov
push
mov
subb
movsb
movsl
cmpsl
js
pop
mov
mov
mov
pop
scas
outsl
jnp
pop
out
mov
rcrl
jae
inc
and
mull
insb
dec
in
cmpsb
mov
das
lret
ds
and
movsb
or
aad
rclb
ror
arpl
lret
das
call
mov
jo
test
or
dec
mov
sbb
cmp
sub
sti
sub
int3
pop
test
iret
mov
mov
cmc
out
add
les
jmp
popf
ja
in
fnstcw
sbb
jnp
sbb
jb
mov
jae
fs
stc
inc
sbb
mov
cmc
lret
cmpsl
lods
scas
mov
or
ljmp
cmp
cmp
or
xchg
sub
mov
jns
fsts
out
and
mov
xor
cwtl
pop
int
and
mov
or
data16
clc
or
cmpsb
sahf
mov
and
call
push
xor
and
dec
movsl
mov
fldl
inc
movsb
push
stos
or
scas
scas
xchg
into
pusha
add
adc
mov
mov
dec
les
xchg
out
xor
jb
es
js
add
shll
xor
mov
and
mov
test
inc
ror
pop
pop
sbb
into
sbb
and
arpl
sub
or
out
lcall
push
cmpsb
icebp
sbb
jmp
stos
mov
xchg
hlt
das
push
sbb
in
repz
mov
lock
dec
cwtl
cmpl
xchg
fsubrl
xchg
stos
les
fs
shr
inc
xchg
rorb
dec
jo
jge
sbb
and
and
in
xor
fstl
sbb
lret
adcb
je
fstpl
out
and
adc
int
sbb
adc
inc
sub
iret
fsubr
mov
xchg
lds
xchg
pop
xchg
adc
loope
xor
or
xchg
xchg
dec
mov
inc
xchg
push
or
mov
cmc
dec
mov
outsl
pop
sbb
push
xor
xchg
xor
gs
sbbb
cmpl
and
jb
push
sbb
mov
push
clc
add
pop
movsl
sahf
loop
mov
jl
sub
mov
inc
adc
fucomip
fiaddl
push
fcompl
add
xchg
pop
jge
cmc
inc
es
ret
sub
lods
mov
mov
push
es
or
pop
dec
pop
lret
lcall
jg
or
push
out
out
push
cmpb
xor
mov
mov
fldenv
mov
cli
xor
xchg
push
dec
xchg
inc
aas
xchg
in
in
andb
ret
cmpl
pop
js
nop
imul
into
sbb
pop
lret
and
mov
dec
push
movsb
inc
in
adc
mov
rclb
sbb
imul
jmp
push
and
cmp
mov
sbb
fwait
sti
std
and
aad
mov
rorl
xor
sti
push
add
aam
inc
xchg
mov
sbb
ror
sbb
adc
into
cmp
add
mov
push
in
xchg
xlat
leave
add
sti
repnz
xchg
dec
das
cmpsl
pop
je
pop
lock
dec
dec
mov
shll
inc
repz
dec
out
movb
movsb
aam
shrb
sbb
pop
sub
testl
adc
cmpsb
mov
mov
or
mov
push
cli
sbb
jae
les
xor
xlat
rol
fcomi
lds
sbb
les
mov
das
fiadds
xor
std
and
xor
sbb
cmp
ds
imul
punpcklwd
shrb
lods
add
sbbb
leave
sbb
stos
xchg
xchg
push
push
aas
mov
out
and
stos
rcrl
nop
movsb
jl
xchg
push
dec
add
cmp
dec
adc
imul
mov
lds
mov
call
sahf
mov
pop
in
nop
add
lds
push
cmpsl
adc
test
hlt
addr16
or
push
jecxz
movb
inc
add
and
idiv
jne
cmpsb
test
mov
push
mov
mov
fisubrl
lods
sbb
fwait
adc
test
shlb
mov
enter
rcrl
or
push
mov
movsb
mov
ljmp
add
imul
and
jl
sub
enter
adc
sbb
add
popf
std
pop
mov
sbb
lds
and
ror
dec
aas
jmp
sar
cli
lret
call
mov
leave
cmp
add
in
pop
cmp
loopne
inc
jmp
out
jg
pop
jmp
movsl
leave
sub
pop
imul
pop
aaa
pop
cmp
mov
cld
add
mov
dec
mov
and
jne
cmc
les
shlb
and
ss
insb
dec
insl
cs
out
jl
adc
test
mov
and
cmp
aam
push
cmp
stos
dec
xchg
push
sub
fcomi
adc
mov
and
pop
add
fcompl
addr16
sbb
mov
or
and
and
xchg
fldl
js
push
adc
sub
mov
fisubrl
ss
js
cmpsb
dec
out
or
or
in
popa
scas
scas
scas
cmp
sub
sbb
mov
clc
mov
in
lret
mov
xchg
inc
xchg
pop
pop
xchg
sbb
jmp
stos
iret
inc
js
mov
add
inc
mov
jb
push
out
jmp
push
mov
repnz
shrl
sbb
movsb
xor
scas
push
jmp
outsb
xchg
push
inc
test
les
xor
andb
sahf
sbb
mov
outsb
or
xchg
sbb
mov
pop
aam
adc
out
sbb
scas
notb
push
jae
mov
dec
imulb
inc
mov
mov
cmp
push
mov
enter
sub
stos
mov
ds
cmp
nop
dec
add
aas
movsl
repz
rcll
lret
jl
ljmp
add
xor
mov
nop
push
cmp
iret
inc
sub
mov
ljmp
inc
jmp
dec
out
sbb
ficompl
xchg
xchg
sahf
pop
pop
lods
xchg
scas
subb
sar
mov
and
and
adc
and
ja
ffree
jmp
lods
lds
jg
mov
cmp
aad
mov
test
mov
arpl
movsb
jne
xor
mov
mov
push
mov
imul
icebp
lea
push
jno
cmp
outsl
icebp
dec
adc
cwtl
jmp
iret
aas
xchg
mov
sbb
pop
movsb
adc
xchg
outsl
aas
jmp
cmpsb
xor
xor
mov
ret
sbb
pushf
jae
cwtl
pop
fistl
into
and
imul
xchg
and
cmp
adc
iret
mov
into
jmpw
test
xchg
cmpsb
shl
pop
mov
and
aam
imul
mov
xchg
stc
pop
pop
sbb
das
or
loop
in
xor
mov
pushf
or
jo
shr
cs
mov
xor
clc
adc
les
out
test
pop
inc
frstor
jbe
stos
lods
ficoms
js
jl
or
fsubs
xor
dec
icebp
xchg
in
dec
mov
push
mov
ja
mov
jbe
ror
mov
jmp
lahf
or
lea
jge
std
inc
imul
es
or
pop
and
fimuls
or
les
pop
outsl
lock
sub
and
sub
xchg
cmp
lret
pop
cmp
fisttpll
xchg
movsl
cs
pop
jp
push
out
dec
nop
push
jl
lods
and
xchg
mov
test
enter
insl
jbe
or
sub
add
pop
adc
add
mov
sbb
lret
hlt
pop
push
mov
mov
cmp
sahf
dec
sahf
cmp
outsl
and
mov
insb
inc
fidivrl
pop
xchg
notl
cltd
and
aam
or
adc
test
sbbl
sub
push
cmp
scas
movsl
jae
int3
daa
pop
sub
ljmp
cld
xchg
push
push
mov
or
mov
pop
jno
cmp
push
mov
cmpl
pushf
jmp
and
push
icebp
mov
pop
aad
jmp
xlat
pop
jne
ja
push
add
mov
pop
sbb
push
aas
lret
jno
fisubs
cmp
cmp
fwait
std
jle
das
jb
js
xor
inc
movsl
mov
dec
in
test
mov
or
mov
pop
lahf
jl
jo
pop
outsl
movsb
jmp
pop
add
sbb
xor
fsubl
lahf
sti
mov
or
mov
lds
jb
pop
pop
popf
mov
cmp
pop
data16
sub
xchg
cmp
cwtl
inc
jb
call
inc
pop
lcall
loope
ficompl
inc
or
mov
mov
std
add
jmp
mov
push
push
out
push
dec
into
jl
jmp
mull
inc
lret
test
dec
lock
adc
iret
je
sbb
test
dec
mov
in
out
cmp
std
ss
inc
dec
push
outsb
fsubl
gs
iret
sbb
or
adc
js
mov
mov
daa
push
sub
xchg
and
pop
pushf
sbb
scas
pop
sbb
fdiv
mov
and
dec
xchg
jle
jb
sub
mov
sahf
ss
and
ret
or
movnti
out
movsl
xchg
push
jmp
adc
adc
add
fucomip
outsl
xchg
push
rcrb
xor
and
and
pop
adc
adc
cmp
jmp
cmp
faddl
int
jp
cmp
adc
xor
push
and
test
cmpl
lea
pusha
std
push
int3
fnstsw
add
lds
or
adc
fadd
dec
insb
out
shl
cld
lcall
test
mov
pop
out
into
mov
stos
aad
aam
cmpsb
sahf
dec
lea
jmp
xchg
les
imul
fdivs
mov
mov
sti
and
jge
dec
movsl
xor
or
sbb
mov
jecxz
jge
cmp
xor
sti
insl
xor
mov
adc
or
push
pushf
mov
aas
stos
leave
jb
inc
out
leave
dec
mov
sahf
cmp
sti
sbb
mov
jns
iret
insb
pop
imul
in
es
push
out
insb
xchg
dec
push
inc
sbb
and
sbb
sarb
sub
sbb
inc
jbe,pt
push
and
mov
jne
shll
or
pop
mov
out
sub
pop
sub
call
aaa
stos
sahf
es
xor
or
lahf
xchg
shrl
bound
or
mov
andl
enter
add
aad
std
popa
rcl
sbb
movsl
ret
xchg
aaa
add
lret
mov
pushf
imul
out
jmp
lcall
pop
inc
xor
imull
cltd
jle
mov
gs
pop
in
ficoms
sbb
cmp
cmc
xchg
sti
divb
push
movsl
xchg
shld
mov
stc
jge
push
neg
or
subb
xchg
sbb
iret
lea
xchg
jmp
icebp
lods
jb
sbb
mov
out
adc
jmp
mull
or
insb
decb
aad
pop
adc
pop
mov
loope
enter
adc
jnp
or
stc
std
or
in
insb
into
pop
mov
movsb
les
mov
jo
loopne
popa
sub
xchg
cmp
or
outsl
xor
clc
std
dec
imul
sahf
test
arpl
sti
test
jno
and
jae
push
fwait
int3
js
xchg
mov
or
andb
dec
or
mov
dec
rcrl
sub
push
divl
mov
mov
cmp
push
dec
aaa
popa
pusha
jle
sbb
pop
std
adc
cmpsl
and
inc
mov
push
jge
pop
push
cmp
inc
sbb
pop
dec
xchg
or
movsb
shlb
cmp
jle
pop
pop
inc
sbb
jae
in
xchg
xchg
mov
sub
or
pop
cmc
inc
aam
inc
nop
pop
into
pop
out
and
int
pop
cmp
cmp
xchg
das
inc
pop
repz
inc
shll
int
aad
pop
in
xor
add
and
dec
pop
mov
out
xchg
addb
pop
push
imul
mov
mov
jl
push
in
out
pop
or
loopne
sbb
test
cmp
sbb
nop
jg
mov
pop
pop
lcall
frndint
pop
data16
inc
sbb
xor
repnz
pop
jge
push
data16
mov
insb
pop
xor
pop
sub
cld
lret
jge
push
mov
pusha
divl
jo
sbbb
adc
xchg
sbb
fldl
mov
aam
pop
add
push
into
mov
inc
clc
insl
sub
sbb
sub
out
xor
sbb
push
and
lods
mov
cmp
inc
jmp
mov
inc
in
rclb
add
pop
push
push
mov
xor
push
xchg
out
push
xchg
ficomps
movsl
ss
cmp
pop
call
and
daa
mov
jnp
cltd
add
inc
xor
inc
ja
sub
imul
sub
add
jle
call
lea
dec
sub
test
adc
setne
push
jnp
add
divps
les
es
and
rclb
pop
mov
inc
jbe
aam
pop
nop
sub
inc
pop
sbb
sahf
push
and
mov
inc
inc
fimuls
or
ja
mov
pop
mov
mov
es
sub
adc
push
inc
xchg
insl
pop
and
clc
dec
in
movb
icebp
mov
push
mov
pop
jb
mov
sub
fcompl
or
xchg
inc
adc
nop
fxch
pop
pop
or
in
dec
xor
jno
pop
in
and
stos
xor
data16
add
es
mov
cld
mov
or
addr16
pop
insb
loop
xor
push
fadds
std
mov
std
mov
in
js
mov
push
es
mov
jg
arpl
aam
pop
adc
into
push
icebp
vmread
mov
jnp
loop
call
inc
scas
pop
sbb
xchg
and
ja
mov
push
les
nop
fisubs
pop
scas
inc
in
dec
adc
mov
xchg
fs
test
mov
xchg
das
push
mov
push
lods
pop
dec
shlb
faddl
jne
and
loop
pop
xchg
out
lods
movsl
adc
mov
inc
or
ds
pop
outsb
push
inc
imul
sub
inc
sbb
imul
pop
mov
in
pop
sub
mov
pop
inc
xchg
or
jg
in
pop
sbb
ss
mov
enter
adc
push
push
test
jl
inc
pop
pop
mov
or
jno
jle
pop
repnz
sub
pop
jl
lcall
sbb
loope
jl
pop
mov
inc
bound
push
jg
dec
fadds
aam
dec
icebp
jecxz
sub
mov
sub
arpl
repz
out
lret
and
push
cmpsb
and
sub
jnp
imul
mov
loope
pop
mov
xchg
xor
or
sub
js
es
in
nop
filds
jecxz,pn
inc
ds
fdivrl
test
icebp
std
pop
mov
and
dec
or
jbe
decb
pop
stos
call
hlt
jns
out
mov
adc
cmp
mov
insb
sarl
out
loopne
sbb
fistps
lret
cmp
pop
xor
or
dec
js
pop
cmc
sbb
out
stos
loop
pop
ret
adc
pop
adc
popa
cld
test
add
iret
push
mov
mulb
roll
inc
cmpsb
sbb
xchg
decb
lret
ret
out
xchg
xchg
mov
in
addl
aas
adc
mov
in
push
sub
in
pop
addr16
jae
dec
fs
sub
pop
stos
mov
pop
sbb
lods
adc
imul
inc
xchg
neg
into
sbb
pop
xchg
jmp
out
xor
clc
mov
cltd
cmpsb
cmpsl
jno
aam
sahf
lods
or
in
inc
dec
sahf
mov
pop
dec
leave
xchg
pop
icebp
pop
add
adc
pop
inc
sub
mov
outsb
nop
push
xor
sub
xlat
push
dec
mov
and
pop
movd
fsubrl
cmp
adc
xchg
mov
in
pop
jmp
lret
cmp
jne
sarb
ret
aas
icebp
stc
add
add
pop
popa
mov
jge
push
push
es
in
jnp
jmp
roll
outsl
xchg
into
loopne
loop
lods
inc
xchg
arpl
ds
pop
mov
imul
inc
mov
lods
inc
mov
scas
push
dec
andl
data16
arpl
sarl
popa
jmp
sub
pop
and
xor
ret
sub
or
sbb
lods
ds
and
inc
and
add
xchg
mov
ss
pop
jae
imulb
arpl
rol
les
pop
mov
xchg
loop
insb
inc
and
mov
cmp
int
add
jb
xor
mov
sbb
sub
int
nop
in
mov
pop
sbb
push
in
inc
ficoml
inc
mov
mov
in
sbb
sub
push
cmpsl
pop
jg
mov
jl
stos
or
xor
mov
dec
and
sarl
cmpsl
dec
test
and
sub
pushf
pushl
xchg
fadd
cmpsl
ficomps
push
push
testb
loop
cld
ja
xor
cltd
mov
in
push
pop
scas
and
xor
mov
add
jae
out
jns
aaa
jmp
dec
cmp
or
in
out
dec
and
dec
mov
out
fmull
sbb
pop
mov
pop
out
or
inc
push
mov
icebp
fcomps
int
pop
mov
xorl
arpl
cwtl
and
mov
in
les
or
repnz
jg
jb
pop
sub
pop
mov
pushf
dec
jge
xor
adc
adc
dec
or
out
nop
loope
mov
pop
js
mov
mov
jg
repz
outsb
std
cmp
mov
ljmp
or
push
jbe
add
je
imul
mov
pop
pop
cmc
inc
dec
fisttpl
pop
in
jnp
imulb
aam
mov
cmpsb
mov
pop
push
pop
lods
mov
cld
jg
jb
push
mov
rolb
cmovns
inc
cmp
repz
mov
cmpsl
gs
pop
testb
sbb
aas
mov
test
aas
cld
and
stos
int
xor
out
or
sbb
lea
jl
repz
popa
mov
lods
and
jg
imul
je
xlat
movb
cltd
in
adc
dec
pop
sbb
sub
out
mov
inc
pusha
and
cmp
xorl
stos
shr
inc
or
mov
cs
inc
pop
in
inc
es
jno
popa
pop
add
mov
xchg
rorb
push
xor
stos
pop
cmpsl
addr16
cmc
and
jnp
pop
push
shr
arpl
add
dec
inc
and
or
loop
push
out
mov
push
outsl
pop
sub
xor
pop
test
pop
inc
daa
jnp
shlb
push
into
out
cs
xor
push
jae
add
inc
movb
ret
inc
mov
test
cmpsb
xchg
dec
jae
mov
mov
roll
fwait
jecxz
pop
in
loop
mov
sub
int3
lods
out
push
stos
and
cli
inc
pop
jo
rcr
pop
xor
mov
push
mov
jl
clc
hlt
sti
pop
inc
sarl
fwait
out
pop
adc
jns
dec
stos
out
push
jnp
in
xor
out
and
jb
out
dec
inc
sbb
sub
out
pop
mov
daa
lret
or
dec
loope
std
mov
push
rcrl
xchg
stos
adcl
mov
pop
mov
pusha
dec
mov
and
pop
mov
std
insb
fldt
jp
pop
decb
notb
or
scas
mov
xchg
pusha
aaa
pop
mov
aam
cmp
out
je
or
lds
les
into
mov
ds
adc
jbe
sub
or
out
cld
insl
sahf
cmp
lods
xchg
inc
das
dec
and
out
hlt
pop
mov
lds
mov
js
adc
addl
jp
aas
shll
sub
pop
ja
or
das
pop
push
sbb
fstpt
mov
in
sbb
push
pop
inc
jbe
inc
push
push
rorl
or
pop
jb
imul
inc
mov
popa
scas
jo
pop
mov
scas
sahf
sub
inc
lds
sub
xchg
scas
mov
out
pop
gs
jno
repz
sbb
aas
iret
es
nop
shll
mov
les
mov
add
lea
jl
por
scas
dec
pop
pop
push
call
cmpsl
pop
sub
cmc
mov
fwait
or
or
inc
and
and
les
mov
pop
imul
cli
and
popf
dec
jl
testb
cmc
pop
mov
mov
sbb
pop
add
out
push
lods
sub
stos
pop
cmp
cs
ret
mov
mov
push
test
in
loope
ljmp
dec
out
ja
lea
inc
jle
pop
add
inc
fs
movsb
mov
inc
pop
shlb
or
ds
pusha
ret
pop
push
xor
addr16
pop
mov
sbb
dec
cltd
push
mov
inc
sbb
xchg
sub
push
and
aas
cli
out
mov
inc
pop
push
ljmp
lcall
and
lret
push
mov
ljmp
arpl
jno
dec
pop
loopne
arpl
fdivrl
push
mov
push
in
orl
xor
xchg
jae
and
push
out
push
adc
pop
imul
mov
jne
dec
cmc
pop
lods
or
in
cld
add
outsl
xor
mov
mov
mov
mov
or
ret
mov
pop
shrb
enter
xor
fisttpl
pop
leave
push
mov
out
pop
dec
jecxz
fnstsw
inc
mov
jmp
gs
sbb
ljmp
outsl
aas
gs
inc
sbb
mov
xchg
push
ror
dec
pusha
xor
mov
fcmovu
aaa
bound
pop
mov
mov
rclb
loop
pop
mov
out
adc
jbe
outsb
dec
or
je
outsl
jg
sbb
adc
mov
adc
out
mov
mov
aas
call
xor
addl
add
inc
lods
unpckhps
inc
fsubl
inc
cmp
ds
cli
sbb
sbb
cmpsb
and
addr16
pop
pop
adcb
jmp
fbstp
push
aas
adc
push
xchg
or
clc
sub
or
in
pushf
xchg
mov
and
ffreep
push
or
adc
fdivs
adc
stos
mov
inc
ja
fistps
in
sbb
push
jle
push
sahf
and
inc
add
mov
adc
faddl
mov
and
lret
fucomip
push
jle
fidivrl
in
xchg
pop
add
mov
arpl
or
inc
jmp
cmpsl
or
movl
mov
mov
mov
xor
jmp
mov
cwtl
jp
popf
pop
and
rorb
xchg
pop
mov
or
gs
pop
dec
mov
hlt
pop
sbb
popl
pop
inc
sbb
sbb
jb
fmuls
sbb
and
ret
and
loopne
out
and
decl
push
pop
in
and
ja
push
add
in
or
sbb
xchg
loop
adc
cwtl
inc
int3
inc
cmp
das
inc
jmp
ud0
jp
cltd
ss
adc
notb
mov
mov
jle
hlt
pop
rorb
mov
pusha
adc
jge
fdivrs
inc
nop
xchg
in
adc
in
inc
andb
xchg
cltd
push
add
push
sarb
jns
fdiv
in
mov
mov
scas
loop
or
adc
loopne
mov
push
cli
and
pop
jp
mov
and
loopne
jle
shlb
pop
pop
pop
subb
aas
push
push
rolb
mov
mov
inc
mov
xchg
mov
adc
mov
fists
push
pop
ficompl
mov
cld
jbe
or
shlb
xchg
ss
jle
add
and
popf
or
adc
jmp
fucomip
gs
xor
mov
inc
cmp
add
add
mov
addl
insl
ss
ds
and
in
int3
or
jae
inc
mov
pop
dec
lahf
xor
push
xchg
mov
clc
repz
push
and
ret
jmp
insb
pop
shlb
imul
push
ja
sysret
rcr
rcr
rcr
xor
push
stc
push
sar
cmp
bswap
push
pusha
cmp
neg
mov
push
xadd
sub
mov
stc
shld
mov
rcl
mov
push
inc
bt
xor
lea
not
pusha
mov
lea
jle
lods
bt
neg
shl
setbe
not
shr
sub
call
pusha
pushl
push
adc
pushf
pushf
lea
jmp
repz
xchg
test
stos
cmpl
inc
cwtl
sbbb
and
xchg
stos
pop
mov
int
cmpsl
xor
test
jbe
outsl
in
div
out
stos
pop
les
add
cwtl
push
pusha
std
iret
scas
inc
mov
aad
ret
push
roll
fwait
jp
add
je
jg
stc
jb
sbb
fs
jae
btc
xadd
movzbl
movsbw
mov
mov
neg
bt
mov
ror
sar
bt
mov
cmp
cmc
pushf
xor
cmc
repnz
movw
pushl
push
call
pushl
popl
pusha
push
cmp
pushf
call
cmc
and
jo
and
into
insb
sbbb
push
addr16
inc
ljmp
ss
loope
lock
cmpsb
sti
cmp
jg
adc
mov
lds
mov
stc
cltd
xchg
je
das
mov
xchg
sub
add
add
jle
xchg
jp
test
cmp
scas
jge
adcl
push
or
push
pop
stc
mov
shrb
ficompl
rorb
aas
aam
add
fs
mov
jmp
fnsave
add
cli
xchg
mov
repz
scas
jecxz
dec
inc
sbb
je
push
hlt
fisubrl
divb
movq
xlat
cmp
cmpsb
fnstcw
ds
pop
fisubrs
jge
push
xchg
mov
fimuls
cmp
cmp
dec
leave
js
mov
insl
push
and
sbb
mov
dec
pop
imul
movsl
ficomps
jns
clc
jl
pop
or
mov
test
add
sbb
iret
cli
sub
mov
pop
sbb
loope
lret
sbb
jg
adc
out
fwait
add
mov
outsl
mov
jecxz
cli
inc
sub
sub
mov
xchg
cmp
lret
call
xor
jg
cli
fmul
mov
dec
pop
test
sbb
cmp
dec
out
pop
and
testl
cmp
add
repnz
icebp
hlt
ja
push
cmp
dec
jno
mov
fisubl
mov
xor
aas
fbstp
jmp
int
pop
lock
push
cmp
xchg
fxch
xor
mov
mov
jl
xchg
push
sbb
loopne
rolb
push
sub
ret
fnstenv
or
cmp
mov
scas
mov
imul
jb
test
mov
jmp
push
les
xchg
mov
xor
outsb
mov
cmp
std
addb
test
mov
jg
sti
sbbb
nop
je
call
jge
jnp
jnp
dec
jnp
sti
int3
jnp
sub
mov
or
dec
xor
add
fs
ja
jmp
lods
xor
stos
cmpsl
push
mov
lret
cmp
out
lret
lock
pop
xchg
xchg
dec
push
int
les
into
std
push
shrb
pop
xchg
sub
sub
repnz
hlt
test
aas
pop
dec
in
cs
out
xchg
lret
rol
mov
nop
cwtl
pop
mov
cmpsl
imul
jbe
dec
jl
jno
lock
xor
stos
mov
iret
sub
dec
xchg
ds
movsl
pop
jne
enter
out
and
cld
in
jmp
sbb
daa
mov
add
pop
leave
inc
call
pushf
pusha
lea
jae
push
xor
pushf
pushl
lea
call
pushf
mov
lea
jae
stc
pusha
xor
call
ss
adc
jge
sbb
adc
into
movsb
pop
and
and
adc
popf
push
lret
hlt
sub
scas
mov
jb
push
mov
inc
lds
mov
inc
lcall
int
mov
mov
sub
xchg
or
test
inc
ret
repnz
loop
fisubl
jg
add
pushf
call
pushf
jmp
inc
stc
bt
cmc
xor
jmp
pushf
push
lea
call
pusha
adc
pushl
pusha
movb
call
mov
sarb
repnz
cmc
xor
sub
mov
mov
ja
dec
mov
mov
cmp
ret
add
push
lret
andb
or
push
sbb
testb
or
sub
ljmp
stc
mov
add
inc
and
jmp
inc
jmp
rep
pushf
movsbl
pushf
mov
pusha
pushl
pushf
lea
jmp
sbb
dec
inc
ret
in
movsb
ss
push
clc
inc
mov
pop
popl
push
testl
pushf
sub
mov
orl
out
lods
ljmp
test
scas
mov
icebp
sub
push
pop
xor
mov
shl
mov
pusha
jo
pop
jne
cld
adc
lret
lods
dec
cmp
aad
jb
mov
xor
idiv
jno
cmp
pop
inc
sbb
test
bound
push
adc
jecxz
inc
test
xor
iret
push
ror
mov
sub
addl
jmp
movsb
movl
mov
sub
and
mov
call
pushl
lea
mov
mov
jmp
lea
jne
shld
not
mov
cmp
pushf
dec
sub
xor
lea
push
push
lea
mov
pushf
sub
pusha
jmp
cmp
pusha
bt
movzwl
shl
ror
mov
mov
mov
jmp
daa
dec
outsb
xchg
cld
rorl
test
lods
out
movsb
in
sub
add
push
repnz
aaa
lods
ret
or
or
dec
int3
cmp
pop
dec
push
cmp
fwait
loope
dec
clc
scas
out
cmp
jo
push
shr
das
adc
ds
jg
pop
lret
out
push
lea
call
push
adc
jmp
call
lods
inc
neg
sbb
sbb
sub
rcl
stc
ror
dec
movb
jmp
mov
bt
bt
repnz
pusha
pushf
movb
lea
jne
not
pusha
movb
pop
mov
mov
lea
lea
pushf
push
call
cmp
pushf
pushf
lea
jae
clc
mov
mov
shld
mov
bsf
pushf
mov
jmp
lea
jb
test
cmp
jmp
push
call
pushl
lea
jne
cmp
stc
sar
mov
neg
sub
ror
mov
jmp
push
mov
mov
inc
pushf
lea
jmp
mov
xor
dec
test
mov
stc
repnz
movb
lea
jne
call
push
clc
add
cmp
jmp
call
fimull
sbb
jle
mov
adcl
lahf
jg
loop
inc
mov
cmpl
adc
nop
lods
aaa
pop
pop
mov
shlb
popa
sbb
in
pop
ficompl
leave
push
into
jbe
fwait
test
arpl
decl
fdivl
xchg
mov
cmp
cld
cmp
xor
mov
jnp
andl
shl
cwtl
jne
sub
mov
sti
xchg
push
adc
push
push
movq
add
in
add
add
rcr
xor
cmp
mov
clc
mov
pusha
pusha
cmp
repnz
pushl
call
not
movsbw
mov
mov
push
not
lea
pusha
pusha
movl
jmp
pop
mov
jmp
jmp
clc
stc
push
shld
shrd
dec
bswap
mov
test
clc
jmp
mov
movl
mov
mov
lea
jmp
call
movl
call
pop
or
or
cmpsb
pop
cmp
enter
mov
stos
pop
rcrl
movq
xchg
and
adc
andb
shlb
inc
xchg
aas
sbb
jbe
mov
dec
jle
call
jnp
out
cmp
or
mov
mov
sbb
ljmp
outsl
pop
aad
icebp
and
mov
mov
lret
negb
cltd
jb
sbb
xchg
ret
mov
mov
jg
add
add
pushl
pushf
pushf
movb
inc
test
pushl
xor
pushf
push
stc
jmp
stc
or
call
lods
call
rorl
jns
dec
inc
sti
fdivrp
pop
sub
mov
out
adc
pcmpgtd
pop
mov
pop
xchg
cmpsl
xchg
adc
mov
test
mov
int3
mov
pusha
loop
add
xchg
and
push
fbld
outsb
test
mov
std
data16
or
icebp
pop
jecxz
test
mov
or
push
loope
fdiv
cmp
loopne
lods
xchg
bound
inc
mov
sahf
repz
mov
mov
jae
test
mov
sub
cld
jg
add
setb
push
not
inc
not
not
mov
pusha
pushl
pushf
lea
call
push
call
repnz
push
jne
dec
cmc
xlat
shll
cmp
test
sarl
push
inc
adc
cmovno
xchg
idivl
sahf
push
loope
jl
xchg
inc
pop
jecxz
fwait
pop
xchg
xchg
iret
add
shrl
das
hlt
adc
jl
xor
and
pusha
bound
sti
xchg
cmpsl
stos
mov
shlb
add
fimull
es
cmp
repnz
or
fs
fbstp
cmc
fidivl
xchg
daa
notb
mov
loope
xchg
sarb
or
xor
and
and
pushf
mov
ds
jp
or
sbb
push
sbb
jg
add
stos
push
push
adc
jmp
pusha
test
cmpb
push
push
jmp
popf
rdtsc
nop
jmp
adc
shrd
adc
mov
pusha
pusha
jmp
pusha
jmp
pushf
pushf
lea
ja
pushf
cmp
add
call
pushf
bt
imul
pusha
call
adc
inc
call
mov
lret
fistpll
pop
xchg
int3
sahf
ffreep
pcmpgtd
and
pop
mov
dec
nop
jno
mov
and
push
pusha
jnp
fisttpl
cmp
rclb
inc
testl
jmp
sahf
fidivl
pop
mov
inc
and
repz
xor
mov
les
mov
cmp
mov
in
push
mov
dec
pusha
inc
push
adc
pusha
lea
jae
pushf
pusha
pusha
jmp
lea
call
jbe
pushf
lea
jne
setl
mov
pushf
movb
pusha
lea
jmp
pushf
jmp
sub
jmp
movl
pushf
movl
movb
push
pushf
pushf
lea
jmp
ror
test
call
cwtl
seta
pushl
popl
not
jmp
jne
neg
bsf
and
mov
pushf
add
push
movzwl
pushf
shl
mov
call
cmc
cmp
cmp
pusha
pushl
pusha
push
lea
jae
jmp
pusha
jmp
shrd
ret
roll
imul
mov
fmulp
out
std
mov
jns
mov
pop
negl
loop
jno
sbb
mov
movsb
jnp
inc
sbb
inc
imul
jnp
sbb
xchg
jb
repnz
dec
or
push
jo
jmp
rcrb
jmp
test
add
jmp
lea
call
call
pusha
mov
movl
movl
jmp
pusha
sub
movb
cmp
jmp
test
pushl
popl
test
cmc
clc
stc
cmp
call
pop
adc
repnz
push
mov
leave
ret
lods
mov
cltd
jae
xor
outsb
clc
xchg
loop
outsl
lahf
aaa
adcl
in
sub
sub
sti
mov
dec
lods
daa
jo
or
xchg
pop
scas
repz
push
xchg
xorl
inc
out
cmp
out
dec
ds
jg
lods
in
xchg
xchg
pop
jge
xchg
sti
cmp
sub
insl
xor
pop
jnp
and
repnz
jecxz
sbb
lods
cli
dec
popa
dec
mov
jmp
xchg
incb
test
xor
test
iret
movq
pop
jmp
rolb
inc
mov
xor
mov
push
cmp
nop
daa
sbb
inc
in
mov
dec
sbb
dec
ret
mov
loope
inc
inc
and
loopne
in
dec
adc
test
fdivl
mov
ljmp
fwait
rcrb
ror
mov
mov
lcall
mov
push
jp
repnz
dec
pop
inc
out
pop
push
lods
cmp
rorl
xchg
jo
and
xor
xor
pavgb
pop
mov
not
or
sahf
call
pop
rcll
add
cld
ss
xor
stos
mov
cltd
sahf
stos
add
mov
dec
add
pop
out
mov
imul
out
cmp
punpckhbw
add
sbb
add
add
add
add
add
add
sub
add
sbb
add
add
add
xor
lcall
js
xchg
daa
cmp
inc
ja
xchg
enter
pop
test
fs
xchg
mov
push
sbb
shll
sub
add
int3
insb
stos
aad
xchg
sbb
in
pop
push
xor
sub
popf
xchg
cmp
loopne
pop
lea
test
outsl
push
mov
cmp
cmp
insl
inc
pop
add
mov
push
adc
xchg
mov
inc
in
pop
pushf
dec
push
inc
inc
and
inc
sbb
fisubl
xchg
jge
imul
xor
dec
mov
adcl
lds
and
stc
into
mov
mov
mov
xchg
jmp
std
ficoml
fwait
mov
in
fmulp
adc
mov
test
pop
lea
mov
in
int3
pusha
push
je
pop
jae
push
jp
pusha
stos
push
sub
mov
in
fwait
pop
or
pop
xor
jne
adc
int
sub
adc
inc
aas
pop
bound
ds
cmp
jns
and
push
xchg
xchg
pushf
nop
mov
pop
ds
xchg
enter
lret
out
mov
daa
sub
sub
pop
mov
and
int3
fsubrl
cmp
outsl
loope
cltd
sub
divl
fmul
pop
sbb
inc
jns
sbb
xor
xchg
sbb
pop
mov
dec
or
jp
iret
jbe
or
cmovno
int
addb
add
mov
or
xchg
mov
sub
pop
sbb
add
xchg
test
fwait
aam
mov
adc
pop
in
xchg
mov
or
or
adc
inc
xor
xor
sub
std
filds
dec
mov
jne
sti
pop
cltd
dec
shrl
or
mov
stos
gs
cmp
adc
cmpsl
pop
jp
pushf
out
xor
in
repz
mov
hlt
dec
pop
fadd
lret
xor
pushf
lret
nop
mov
gs
add
cwtl
add
sbb
adc
ss
test
mov
mov
data16
mov
and
popf
sub
xchg
xlat
je
arpl
or
mov
imul
incb
xor
cmc
pop
xor
sub
call
scas
mov
gs
adc
mov
ret
fsubrs
daa
aam
iret
repnz
sahf
and
out
setg
mov
cli
cs
roll
gs
cmp
les
cmp
fnstsw
lret
mov
in
lds
test
mov
repz
in
in
fdivrl
pushl
jne
sbb
fistpll
add
call
enter
xor
cmpsl
jnp
cmpsl
cli
popf
inc
cmp
outsb
stos
jmp
cmpb
adc
push
jns
sub
xchg
sub
das
push
cld
sbb
fdivp
lea
push
mov
cmp
xor
and
mov
insb
pop
das
cmp
mov
push
mov
enter
mov
xchg
ret
adc
push
in
dec
fnsave
jno
das
inc
aam
aaa
pop
jle
mul
sbb
stos
out
fdivs
xchg
aam
orl
rorl
adc
xorl
fs
mov
cld
and
or
cmc
xchg
stc
cmpsl
sbb
daa
decb
fsubrs
add
aas
pop
mov
into
inc
fidivrl
jmp
aas
lret
jbe
and
and
int
xchg
push
push
jne
xchg
add
adc
ljmp
sbb
das
cs
aam
scas
out
pop
or
mov
aas
cmp
xlat
hlt
jbe
das
mov
jg
hlt
testl
pop
jp
or
into
and
pushl
repz
inc
ret
loope
and
lcall
cmp
push
mov
push
adc
mov
lods
fwait
lcall
xchg
pop
and
pop
les
ja
sub
dec
mov
stc
mov
sbb
out
bound
cmpsb
lock
sbb
mov
or
add
cmc
adcb
in
cmpsl
push
mov
xor
iret
ds
loopne
loope
aaa
lcall
ficoml
rolb
jno
bound
fs
xchg
cmpsl
sub
sbb
xchg
add
arpl
insl
icebp
adc
in
inc
or
out
cmpsl
int3
xchg
rorb
jmp
mov
pop
repz
outsb
lahf
mov
insl
adc
xchg
push
pop
inc
cmp
gs
out
xorb
cmp
fmul
sbb
xchg
xchg
shl
mov
pop
and
mov
hlt
push
sbb
incb
stos
ljmp
aaa
inc
stos
fcmovnbe
scas
lret
push
jecxz,pn
and
xchg
pop
aas
sbb
leave
jecxz
outsl
pop
data16
sub
mov
andb
jnp
cwtl
cmp
aaa
push
shll
mov
movsb
imul
inc
sbbb
and
mov
inc
and
hlt
aaa
push
mov
push
iret
mov
inc
icebp
sub
jl
fimuls
popf
mov
stc
stc
in
loope
add
and
or
jmp
shrl
inc
rolb
out
dec
jnp
lcall
push
nop
push
mov
mov
or
pusha
mov
popf
sahf
inc
dec
std
loope
sub
push
popf
ret
dec
pop
int3
or
mov
adc
aad
mov
negl
xchg
loop
movsl
pop
add
mov
imul
in
push
jmp
fstp
fadd
dec
addr16
sbb
rcrb
inc
sbbb
or
xchg
out
out
push
xor
mov
xchg
jle
mov
cmpsb
out
dec
fiadds
mov
add
out
mov
int
mov
shl
out
popf
dec
jb
test
lds
sti
adc
stos
jbe
mov
popa
pop
lods
and
jno
fnstenv
xchg
out
cmpsl
bound
xchg
jmp
fmull
insb
jle
fistpl
imul
xor
inc
mov
adc
das
lea
int
jne
dec
ja
fs
jp
ja
or
mov
ljmp
mov
iret
mov
adc
addr16
imul
negl
jl
lret
insb
pop
leave
lea
and
push
leave
dec
cmpsb
mov
jl
sub
lahf
sbb
sub
pop
cld
lods
pop
movsb
mov
inc
fnstcw
lcall
push
cmp
sar
pop
inc
test
mov
mov
mov
test
fst
inc
push
ss
lock
daa
mov
jle
ja
lea
xchg
lahf
push
jmp
cmp
fwait
leave
sbb
sub
aam
push
rclb
xor
xchg
mull
scas
aas
movsb
push
orl
lret
cli
ds
jecxz
dec
mov
outsb
iret
clc
mov
imul
insb
xor
push
jbe
push
pop
or
sub
lea
and
lret
push
adcb
and
xchg
and
pop
push
pop
mov
scas
pop
mov
push
push
clc
imul
je
sbb
or
cli
out
fbstp
jmp
push
mov
jmp
test
push
pop
xchg
cli
bnd
ljmp
pop
jno
popf
jecxz
jl
imul
mov
or
jmp
cmpsb
stc
dec
mov
cli
jnp
cmp
jns
fbstp
sbb
jne
push
into
xor
add
into
push
xchg
jb
or
mov
sub
fadds
cwtl
and
inc
mov
loop
jne
scas
out
sub
cli
lcall
inc
push
gs
outsl
imul
xchg
xchg
push
aam
pop
jae
ret
jge
movsl
lds
fiaddl
ds
out
shll
xorl
pop
pusha
push
aad
test
cmp
mov
xlat
push
lock
shlb
sar
mov
or
addr16
mov
xchg
decl
jp
stos
sub
mov
cltd
fchs
or
divl
icebp
pop
push
jb
hlt
mov
adc
mov
mov
ret
push
test
xor
pop
je
or
outsl
clc
out
leave
inc
in
jl
push
jg
dec
sub
loope,pt
scas
adc
sub
jp
ficompl
add
mov
sub
repz
push
pop
add
adc
std
std
arpl
and
pop
sbb
pop
xor
push
cmp
icebp
out
rol
notl
addr16
popf
inc
jae
ds
aam
xchg
stc
jmp
stos
inc
lods
test
pop
cmp
sub
push
imul
roll
jno
scas
lahf
fildl
jmp
dec
and
push
scas
js
ja
lods
movsl
pop
jae
xor
nop
dec
push
mov
and
fcoms
fmuls
inc
clc
inc
or
test
adcb
mov
mov
sub
stc
adc
fdivl
in
xchg
test
xor
sbb
dec
sahf
push
mov
test
and
in
push
jne
or
fcmovnbe
lret
rcrl
repnz
push
sbb
data16
insl
and
mov
mov
mov
or
jmp
das
adc
sub
pop
adc
jns
inc
or
jmp
sub
scas
push
push
xchg
mov
arpl
dec
jl
mov
sar
divb
je
popl
xor
outsb
sti
imull
je
out
pushf
std
push
fistps
xchg
add
pushf
cmc
push
mov
mov
inc
or
aaa
dec
lods
iret
xchg
mov
daa
xor
adc
mov
cmpsl
iret
jb
mov
xor
das
lods
inc
jl
jge
and
xor
dec
mov
mov
mov
inc
sub
mov
dec
in
mov
pusha
or
pop
adc
sub
dec
jecxz
and
mov
adc
dec
mov
scas
ret
push
add
and
adc
clc
push
imul
daa
and
out
push
icebp
jmp
cltd
dec
xor
jnp
mov
lock
adc
sbb
mov
call
mov
iret
inc
pop
arpl
lcall
cmp
mov
sub
sbb
lock
mov
mul
pop
mov
test
mov
xor
insb
or
xor
push
cmpsb
mov
shl
es
insb
aam
std
jle
sub
inc
or
shrb
push
ja
mov
mov
dec
mov
aas
xchg
push
push
sub
shrb
mov
aad
dec
fsubl
jge
repz
in
dec
rcrl
dec
je
inc
adc
fimuls
add
add
mov
or
aam
add
cmp
jae
mov
xor
mov
xchg
pop
xchg
dec
sbb
sub
movsl
pop
mov
xor
test
mov
outsl
push
aad
jnp
stc
or
test
cmp
lea
iret
sbb
in
test
fwait
out
mov
call
pushl
pushf
stos
movb
pusha
pushf
lea
jmp
fdivs
fimull
pop
mov
loop
mov
mov
repnz
adc
xchg
mov
hlt
adc
add
or
pop
imul
xor
movsl
mov
nop
std
sbb
dec
cld
adcl
push
xor
sub
iret
sbb
lea
jne
bswap
bts
shl
movsbw
sub
btc
daa
sar
rcl
mov
stc
jmp
sbb
mov
xor
mov
sub
pop
jbe
adc
stos
test
fdivrp
adc
pop
nop
loope
lds
adc
fisttpl
or
add
jmp
push
call
rorb
jno
into
lcall
mov
mov
add
dec
xchg
out
lods
ljmp
mov
shrb
cmc
hlt
jg
inc
mov
dec
outsl
and
in
xchg
jae
mov
jmp
and
cmp
jg
sbb
mov
pushl
popl
movb
mov
pushl
ret
lea
jne
rol
clc
mov
bts
push
movzbl
bsf
sub
shr
lea
pushf
push
mov
sub
movw
pushl
popl
call
mov
test
push
cmc
jmp
xchg
popa
pop
push
jne
jmp
lcall
leave
ja
lock
mov
inc
fwait
sbb
cltd
or
push
cmp
lods
cmp
add
lahf
cmp
inc
inc
add
je
and
fstl
xor
cwtl
pop
xchg
enter
sbb
cmp
mov
enter
add
jg
push
cmc
test
jae
stc
bsf
jmp
adc
ret
pop
mov
dec
add
cmp
xchg
faddp
and
mov
adc
cmp
jbe
dec
popa
jle
cmpl
or
test
mov
jg
push
mov
ss
je
mov
stos
mov
popa
loopne
aad
ss
mov
jle
sbb
sti
loopne
jns
add
movsl
xlat
cli
faddp
js
adc
pop
push
js
pusha
or
enter
popf
cmp
push
movsl
aam
xchg
gs
mov
mov
pop
inc
mov
pop
test
jle
fidivrs
pop
lret
out
add
bt
stc
call
xor
push
dec
sub
mov
xchg
xchg
cltd
jnp
in
das
punpcklwd
adc
sub
hlt
jge
lahf
pusha
and
push
insl
cld
adcl
add
mov
mov
shl
dec
adc
mov
outsl
cmpsl
movl
lods
mov
fsubrl
dec
rclb
in
xchg
rorl
iret
add
popa
addl
mov
rol
imul
test
stos
addr16
cltd
cwtl
fldl
cmp
sub
add
shr
pop
stos
xchg
cwtl
repz
popf
mov
add
nop
je
arpl
mov
sbb
in
mov
in
push
pop
or
adc
pushf
pop
dec
dec
cld
int
dec
xchg
gs
nop
fs
and
popf
fsubs
inc
cld
in
cmc
xchg
hlt
scas
jnp
jnp
jne
in
push
jg
sbb
fiaddl
inc
sub
mov
jb
in
lret
xor
popf
out
cmp
cld
in
cmc
cld
dec
je
call
mov
leave
lods
jne
bound
or
jecxz
pop
push
mov
mov
xchg
xlat
lods
jmp
sub
mov
jae
cld
sub
movsb
mov
cmp
dec
iret
stc
rcrl
adc
xlat
lods
pop
mov
in
aam
scas
cmp
pop
ss
in
push
stos
sub
jo
mov
sarb
lret
lcall
xchg
out
push
fldenv
and
sbb
dec
push
push
das
dec
addr16
nop
inc
stos
out
dec
int3
in
pop
clc
lahf
and
and
pushf
pop
mov
jmp
jne
jnp
rsm
popa
jg
sbb
push
movl
jmp
lea
jne
pusha
pusha
jmp
pushl
mov
movl
pushf
mov
push
pushl
ret
push
cwtl
and
roll
cwtl
rcr
mov
pop
inc
das
loope
adc
ud0
cmpsb
push
push
or
fists
subl
mov
movsb
push
sub
cmp
cmp
mov
xchg
jge
pop
mul
js
and
add
ficoms
iret
sbb
inc
ret
adc
mov
rcrl
xchg
test
adc
rclb
or
mov
adc
add
mov
sub
dec
or
jns
and
push
mov
sti
hlt
fildl
or
cmp
jp
repz
mov
cmp
imul
lods
fmulp
dec
ret
mov
ret
cltd
sbb
popa
fdivs
jnp
imul
inc
inc
test
fistpl
adc
jae
pop
dec
push
ds
lahf
pop
mov
push
fs
int3
xchg
in
sbb
or
jb
mov
xor
test
cmp
out
stos
adc
pop
push
mov
sbbl
imul
dec
inc
jae
xchg
shlb
movsl
lret
in
lret
sub
sbb
xor
arpl
scas
cmpsl
fnstcw
fcmovb
jne
mov
xchg
addr16
test
lds
test
in
inc
and
das
and
adc
inc
test
decl
adc
outsl
jge
or
mov
push
mov
dec
cmc
insb
sbb
movsl
xchg
jb
fsubrl
lods
mov
iret
sbb
aaa
push
movb
lea
jne
movzbl
lea
not
mov
pushf
lea
jmp
call
lea
je
mov
call
stc
pusha
pushf
add
movl
mov
push
push
pushf
pushl
lea
jmp
mov
pushf
pop
pop
pushf
pusha
pushl
ret
lea
jae
sbb
mov
pushf
bts
mov
test
bts
bt
rcr
mov
mov
clc
sub
test
test
push
repnz
mov
push
jmp
mov
lea
jne
bt
pushf
sub
mov
pushl
lea
jmp
pusha
lea
jae
push
pusha
pusha
lea
jmp
lea
jb
test
stc
cmp
pusha
push
push
movb
lea
jmp
and
or
ror
mov
stc
mov
repnz
call
lock
jns
and
dec
dec
mov
aad
call
xchg
or
push
mov
fmulp
hlt
pop
repnz
mov
rorl
mov
and
hlt
popf
jbe
jg
and
jne
movsl
xchg
xchg
inc
or
cld
pop
aaa
or
ret
mov
bound
push
mov
insb
cmp
sbb
xchg
push
mov
pop
subb
dec
or
mov
push
push
rclb
dec
push
inc
fsubl
xor
test
pop
cs
adc
out
test
movsb
andl
sbb
cltd
and
push
mov
shlb
pop
sub
out
pop
sub
pop
mov
out
movsb
fstps
or
jns
gs
mov
imul
aad
xchg
outsb
aas
adc
and
fs
jge
pusha
lea
call
push
call
jmp
pushf
push
lea
ja
push
pusha
imul
cmc
stc
add
pushf
lea
jmp
cmp
sub
adc
lea
sub
test
push
sub
pushf
pushl
popl
push
clc
cmp
pushl
call
int
ljmp
into
fildll
xor
pop
pop
fwait
ds
repnz
jne
inc
scas
pop
mov
sub
movsb
xlat
lods
dec
xor
sbbl
push
addl
dec
sbb
orb
int3
mov
mov
movb
mov
movsb
sbb
inc
enter
add
xchg
mov
shrb
or
inc
mov
xchg
jl
adc
xchg
xchg
out
arpl
iret
es
push
add
and
jb
clc
cmpb
jno
push
pushf
lea
jne
xor
mov
push
cmc
bt
pushf
add
bt
pushf
call
push
popa
inc
mov
fs
popa
sahf
cmp
movsl
sbb
arpl
aas
clc
xchg
stos
dec
subl
iret
mov
hlt
scas
call
jle
sub
lods
pop
dec
xchg
push
mov
adc
adc
test
in
das
aad
dec
and
sahf
xor
ret
fwait
mov
adc
and
sub
sub
cvtps2pd
jo
mov
imul
inc
cmc
shlb
out
dec
inc
clc
lea
in
les
ja
ss
js
fsubrs
jl
pop
clc
mov
push
roll
subb
xchg
jne
jg
jg
daa
add
xchg
invd
lea
bound
add
cld
ljmp
scas
les
imul
push
push
in
call
pop
movsb
push
lods
push
inc
js
xchg
mov
add
sub
pop
das
lret
data16
sub
or
add
sbb
sbbb
add
call
loop
add
mov
add
pop
pop
loop
add
nop
lods
pushf
dec
dec
sbb
daa
xor
mov
and
lods
or
pushf
pusha
call
clc
push
test
cmp
jmp
shl
mov
call
pushf
lea
je
stc
pushf
stc
sub
jmp
and
pushf
inc
inc
out
mov
test
or
stc
mov
mov
rolb
cmpsb
adc
ret
adc
add
mov
inc
jle
pop
addl
mov
inc
mov
jp
xor
push
sub
push
dec
or
pop
std
std
mov
insb
and
inc
mov
ret
lret
cs
cltd
adc
aad
xor
and
fsubr
jge
cltd
in
enter
and
aam
push
lret
add
in
es
test
aaa
lea
add
and
inc
inc
mov
xchg
push
push
mov
in
iret
push
enter
aad
movl
movl
pushf
call
call
call
cmp
push
lea
jae
stc
or
mov
xor
movzbw
pusha
sar
mov
sete
movzbw
bt
mov
jmp
pushf
jmp
lea
jb
pusha
pushf
movw
push
pushl
ret
bswap
not
lea
pop
pushf
push
mov
movb
pushf
jmp
call
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
lea
jae
add
mov
bts
mov
neg
mov
shld
mov
push
test
cmc
clc
sub
pushf
bt
push
repnz
lea
jl
pushf
pusha
lea
jne
pushf
bsf
bts
pop
mov
or
rcr
add
sub
sub
rcl
btr
shld
mov
cmp
stc
stc
sub
pushf
clc
stc
pushl
popl
call
loop
addr16
pop
roll
arpl
mov
xor
sub
pop
inc
mov
and
mov
lods
mov
sahf
jmp
pushf
pop
jbe
lret
jg
scas
inc
invd
lea
mov
ljmp
ret
dec
cmc
lods
lea
and
and
and
dec
dec
in
fs
xor
jmp
xor
fists
mov
outsl
rol
dec
in
out
mov
pop
push
cltd
lea
sub
hlt
data16
or
push
mov
stc
cld
mov
int
out
cmp
jbe
cwtl
in
sub
fisttpll
lahf
in
push
push
sbb
mov
dec
popa
popf
ja
in
mov
adc
je
dec
adc
imul
cltd
lock
jge
push
mul
pop
clc
movsb
sbb
and
inc
addr16
insl
sbb
push
pop
jg
and
test
call
movl
push
mov
pushf
movb
pushl
ret
data16
addb
add
mov
add
add
sbb
jns
adc
pop
movsl
sbb
pop
enter
mov
add
lret
add
add
or
call
jmp
pop
fwait
out
mov
jne
les
cld
mov
add
sarb
je
in
ret
sub
or
lds
push
dec
sbb
push
lods
sbb
insb
fld
inc
inc
inc
add
clc
popl
xchg
loop
movsl
push
adc
sbb
mov
je
jl
cmp
rol
mov
sub
cli
popf
and
dec
scas
lret
jg
and
xchg
dec
add
xchg
sbb
popa
sub
leave
jnp,pn
mov
inc
es
cmp
jmp
cwtl
sar
sbb
les
sbb
xor
sbb
add
and
mov
sahf
lods
mov
pop
jp
dec
cmp
lock
xchg
cmp
out
xchg
sub
imul
mov
sarb
inc
sub
mov
adc
jg
sub
sub
shr
shld
shld
rcl
mov
pushf
and
pushf
stc
pushl
add
push
pushf
pusha
lea
jmp
push
pushf
pushl
inc
cmp
jmp
pushl
mov
push
bt
test
call
cmpb
pushf
call
lahf
out
out
pop
dec
dec
xchg
or
inc
pop
decl
test
lods
adc
rcrl
dec
jne
jno
loop
lods
lea
shl
push
pop
movsb
frstpm(287
aad
xchg
ficompl
out
popf
dec
xchg
fs
loope
dec
mov
mov
scas
fwait
push
aaa
movsb
jnp
loop
xor
std
dec
mov
dec
push
movsl
jle
int
sbb
das
jge
cmp
push
mov
pushf
inc
daa
int3
out
jg
bound
xchg
push
dec
adc
jg
sub
mov
lcall
bound
lea
jmp
pusha
movl
mov
pushf
pushf
movb
pushl
popl
movw
movw
pushl
ret
push
movw
call
jnp
mov
lret
lcall
mov
jns
inc
std
pusha
les
mov
add
or
pop
shll
stc
test
adc
pop
jns
push
pop
pop
xchg
mov
enter
aam
pop
inc
lcall
icebp
gs
iret
sub
insb
jl
ret
and
mov
xchg
cmp
faddl
ret
shrl
jno
iret
cs
cli
fsubrl
lcall
and
jmp
lret
pop
push
dec
dec
mov
push
cmc
pop
mov
test
call
fbld
pushf
jno
lods
mov
in
mov
xchg
repnz
xchg
fcmovnu
cmp
outsb
mov
ja
sbb
mov
mov
cld
and
loope
mov
es
sub
jns
lods
xchg
pop
pop
adc
clc
or
insb
xchg
lcall
mov
outsb
sub
xchg
push
js
movsb
or
push
xor
mov
ds
mov
leave
push
mov
inc
sub
mov
or
and
mov
insl
lods
in
lods
cs
stos
bound
aam
jecxz
rorl
mov
rolb
jecxz
add
test
movsb
push
pushf
pop
lods
mov
and
pop
mov
xchg
out
fsubrl
pop
or
push
inc
stc
pushl
lea
jne
jmp
cmp
div
sti
inc
mov
jg
lcall
xchg
nop
fs
cmpsw
jns
xchg
bound
mov
mov
cli
in
scas
push
xor
mov
mov
arpl
mov
or
addr16
inc
sub
and
jp
mov
mov
dec
mov
mov
dec
jg
mov
jae
in
push
sbb
mov
orl
das
pop
push
cmp
jne
not
pusha
pop
lea
jge
movb
jmp
movl
pusha
movb
lea
jmp
sub
mov
cmp
sarl
xor
clc
mov
out
inc
popa
or
popf
loope
in
mov
js
jae
push
mov
cli
xchg
mov
fildll
or
push
sub
mov
sbb
ret
nop
ja
xor
mov
bswap
sbb
in
push
sub
and
jg
sub
loopne
pop
mov
lods
xchg
roll
fwait
push
or
in
inc
push
cmpsb
js
cmpsb
add
mov
pop
into
movsb
inc
cmpsb
fcmovnb
pop
aad
es
das
xor
andb
enter
inc
hlt
js
iret
int3
loope
sbb
sub
mov
xchg
lcall
jg
sub
and
jb
cmc
cmpb
jmp
mov
call
jo
pop
lods
xchg
scas
rorl
cmp
jg
test
dec
fistpll
or
inc
mov
ret
lods
or
test
aam
imul
sbb
pop
insb
cltd
jp
ds
dec
jmp
iret
sub
out
jmp
pushf
lea
movzbw
pushf
movw
bswap
movzwl
pushf
movzbw
lea
lea
pusha
jmp
mov
pushf
pushl
ret
cmp
call
call
rol
mov
push
cmc
clc
clc
test
movw
push
mov
lea
je
jmp
call
pusha
inc
call
jmp
push
inc
pushl
pusha
jmp
mov
push
pushl
pusha
pushl
ret
call
sbb
dec
mov
add
dec
aam
pop
cli
sahf
inc
push
fsubrp
xchg
scas
sarl
movsl
cmpsl
xchg
es
pushf
jnp
pop
dec
pop
xor
popa
leave
out
pop
push
addr16
stos
loope
sbb
cmp
push
sub
lods
repz
ja
scas
cmp
mov
fildl
in
dec
xor
xor
lahf
scas
int
ljmp
cmp
pop
mov
add
mov
sub
push
sub
out
jno
xor
push
scas
test
or
push
mov
les
adc
iret
sub
fwait
mov
inc
lock
cmp
cmc
imul
push
push
sbb
leave
loope
shrb
xor
mov
loope
ds
inc
and
sub
sbb
push
cmp
add
ret
add
and
cs
push
insl
xchg
fdivrs
xchg
sbb
sub
pop
pop
push
pushf
xchg
setbe
call
xchg
dec
and
push
aas
aas
cmp
je
adc
jo
hlt
in
mov
cli
or
xchg
scas
mov
repnz
daa
fcom
push
jne
adc
xchg
mov
out
jp
repnz
cmpsb
std
les
fwait
inc
sysret
mov
loop
xor
flds
adc
mov
in
and
xchg
xor
push
dec
mov
dec
push
push
test
iret
cmp
enter
jl
arpl
insb
iret
mov
jne
and
and
mov
mov
movb
jmp
pop
hlt
loop
jle
dec
lret
inc
clc
fsubr
jle
add
mov
into
lods
sub
addr16
or
imul
stos
ret
loopne
jg
or
xor
popf
jae
int
xchg
bnd
mov
iret
mov
inc
inc
inc
sbb
jns
xchg
scas
jb
jg
sub
jns
rcrb
mov
pop
mov
adc
js
rcrb
cli
jne,pn
mov
push
fadds
adc
xlat
insb
cmp
mov
jge
push
sbb
push
and
xor
push
push
cmp
dec
or
push
movw
lea
jne
cmp
rcr
mov
rcr
bts
bswap
sub
push
lea
bt
sub
jg
pushf
sub
pusha
pushl
popl
clc
cmp
jmp
call
stos
or
inc
xchg
scas
jns
stc
xor
push
jmp
mov
es
and
cltd
ret
repz
fstpt
daa
cmp
jle
sarl
jb
sub
test
mov
int3
jno
push
cmp
repz
pop
jg
xor
bound
clc
lcall
or
clc
clc
jmp
lea
jb
cmp
pusha
pushf
cmp
pusha
pushf
lea
jmp
call
jmp
pushf
lea
je
cmc
cmp
pusha
jmp
bswap
mov
test
clc
cmc
stc
cmpb
jmp
into
mov
fstpt
or
or
sbb
int3
or
mov
sbb
or
mov
sti
int3
mov
or
mov
sti
cmp
or
sub
dec
jnp
in
sti
in
jl
mov
add
ret
pusha
setno
lea
call
movb
lahf
mov
setl
pusha
bswap
lahf
lea
call
ror
sete
lea
je
setns
inc
call
pushf
bt
ror
jmp
lea
call
push
pushf
call
cmp
pusha
movb
movb
mov
lea
jbe
btr
dec
inc
sub
call
push
lea
pop
mov
stc
call
adc
pusha
jmp
sub
shrb
mov
mov
js
sbb
cwtl
ficoms
xor
cmp
mov
pop
mov
shrb
andb
fcmovnb
jmp
outsl
and
sub
xchg
lcall
int
dec
clc
test
mov
lea
mov
mov
pop
movl
cwtl
cwtl
pop
bswap
lea
pushl
pushf
movl
call
jmp
call
mov
pop
call
ror
pushl
bt
neg
cmp
jmp
movl
call
in
pusha
push
pusha
call
cmc
jmp
push
lahf
mov
sub
fwait
inc
int3
pusha
xor
sub
mov
aas
jns
mov
fidivrl
lds
repz
lret
hlt
add
inc
dec
cmp
call
test
push
je
inc
repnz
sbb
dec
outsb
push
mov
dec
stos
icebp
jb
dec
xor
call
cmp
mov
sbb
lock
push
fs
clc
mov
inc
repz
inc
dec
sbb
fsubl
ljmp
test
outsl
lea
jb
cmp
pusha
cmc
cmp
jmp
jmp
mov
pushf
pushf
pushl
push
pushl
ret
lea
ja
pusha
sar
sub
dec
sar
shl
call
add
cmc
mov
cmc
test
jmp
call
lea
jae
push
mov
lea
jne
pusha
pushf
jmp
cmp
jmp
inc
pusha
lea
jnp
push
mov
inc
mov
pusha
movl
lea
jmp
adc
outsb
xlat
pusha
mov
xchg
dec
push
jmp
lds
cmp
out
push
and
leave
jo
pop
ret
push
sbb
aaa
out
aaa
ficompl
outsl
mov
scas
xorb
movsl
add
cmpsl
repz
flds
mov
cs
ljmp
movsl
pop
xchg
lods
dec
jecxz
push
xchg
lret
cmp
fstp
mov
jp
xor
repnz
dec
out
xchg
aad
inc
jns
fwait
addb
lock
and
gs
push
hlt
adcl
out
sahf
sub
lret
xor
inc
adc
pop
enter
gs
xor
or
in
dec
xlat
sub
in
shlb
add
xor
iret
xor
push
les
ds
jg
test
mov
aam
out
jbe
je
lea
aad
cmpsb
and
lods
icebp
or
cmpl
test
xchg
pop
out
lods
scas
push
push
sub
les
lretw
lret
shl
add
inc
out
sbb
pop
clc
mov
mov
cmp
fsubs
pop
xchg
outsl
mov
fidivs
xor
aad
mov
dec
sbb
loop
push
test
cmp
loop
inc
dec
loope
cwtl
dec
stos
sbb
lds
int3
push
imul
testl
push
movsl
sub
fabs
arpl
lret
mov
test
add
lock
dec
aam
xor
pop
popf
jmp
pop
push
xor
fistl
fadd
cmpsl
and
adc
out
je
jecxz
sub
jb
jge
nop
insl
daa
jno
inc
add
nop
stos
mov
jp
outsb
in
scas
rol
jg
xor
add
add
pushl
jmp
bsf
call
pusha
movb
lea
jae
push
push
call
xor
pushf
pop
fsubs
in
fwait
cmp
das
cmp
jae
lret
stos
mov
inc
xchg
push
xor
scas
loopne
and
cmpsb
mov
sub
pop
mov
addr16
out
out
movsl
in
ds
test
lahf
test
mov
je
pop
in
add
xor
hlt
scas
cmc
loope
ret
ds
push
repnz
nop
xchg
mov
push
mov
in
lret
push
xor
loope
sub
xchg
dec
jg
xor
sub
pushf
xchg
pusha
pushl
dec
call
add
inc
gs
outsl
fs
gs
imul
add
mov
push
push
stc
decl
sahf
mov
mov
jns
jle
xchg
xchg
jl
jb
scas
mov
cld
adc
xchg
cmp
fwait
dec
pop
jne
lock
mov
lods
imul
into
and
fisttpl
dec
dec
inc
push
inc
jmp
shrb
cmp
and
pusha
dec
jecxz
notl
cmc
mov
push
xchg
jmp
mov
cltd
je
pop
movsl
adc
xor
jle
leave
je
ret
in
jb
xor
dec
jns
insl
das
pop
movsb
fistps
shll
sub
imul
sarl
cwtl
and
ds
out
mov
hlt
enter
jle
test
ret
sub
stos
cwtl
int
lods
adc
in
lods
mov
ja
repnz
sbb
fsubl
ja
aad
mov
lds
xchg
mov
call
push
or
or
test
add
push
ja
add
and
push
sub
mov
test
jae
rorb
push
sbb
or
xchg
clc
inc
scas
stos
push
mov
mov
aas
fadd
inc
int
cs
lahf
push
movsb
fstpl
jg
cmp
add
xor
mov
cmp
clc
repnz
pushf
push
call
pusha
pushl
lea
pushf
mov
call
dec
inc
inc
inc
sbb
xchg
sar
mov
pusha
rol
rol
and
mov
pushf
xchg
clc
shl
and
sub
jge
mov
test
stc
push
sub
pushf
movw
rep
lea
mov
pushf
push
push
lea
jmp
pushf
lea
call
pusha
pusha
lea
jmp
or
cmc
xor
ror
mov
pusha
stc
call
xor
add
cmp
rorl
int
in
mov
sub
fisubs
cmp
xchg
scas
nop
mov
das
push
or
sub
push
mov
cmp
lods
sub
jge
pop
jno
mov
jae
cmp
sbb
in
cli
lods
mov
movsb
jne
xor
jg
cmp
sar
xor
movw
lea
jb
cmp
cmp
push
pushf
lea
jae
ror
inc
mov
seta
btc
xor
mov
shl
mov
stc
xor
stc
repnz
push
pushf
mov
lea
jne
and
bswap
cmc
pusha
mov
jmp
mov
pushf
stc
cmp
and
mov
sbbb
mov
cmp
mov
sbb
mov
push
push
cld
fisttpll
stos
insl
and
cmp
mov
stos
outsb
and
adc
arpl
test
out
repz
ds
xor
lock
lret
mov
aas
add
sahf
mov
cltd
and
xchg
pop
add
mov
lret
push
jno
cwtl
test
bound
mov
mov
mov
inc
pop
fistl
push
add
mov
dec
les
scas
repnz
sbb
sbb
adc
ret
imul
adc
fsubrs
call
sub
inc
push
jmp
mov
incl
xor
xor
cmpsb
test
and
adcb
lret
jae
sub
icebp
adc
sub
in
fidivrs
xchg
push
xchg
loope
pop
xchg
push
pop
inc
mov
call
mov
dec
jmp
xchg
scas
es
jns
push
mov
xor
aam
popa
enter
scas
or
push
insl
pop
sahf
out
out
inc
rorb
push
mov
cmpsl
pusha
fidivrl
call
testl
cld
mov
inc
and
dec
mov
and
lods
aaa
and
in
enter
mov
xchg
popa
xor
iret
aas
cmp
lea
call
pusha
movw
lea
jb
push
pushl
push
pushl
ret
mov
jmp
lea
jne
dec
mov
mov
not
rcr
sub
sub
btr
cmc
mov
stc
call
push
call
movzwl
bsr
mov
jmp
lea
je
call
dec
or
aaa
dec
imul
outsb
push
stos
mov
jg
jne
push
mulb
sub
out
scas
ret
mov
xor
dec
mov
lods
sbb
mov
jmp
imul
add
fisubrs
inc
pop
adc
jmp
adc
push
mov
icebp
flds
pop
or
pop
sbb
dec
cwtl
and
setge
push
addr16
shll
inc
popf
jno
push
jns
sbb
shrb
pop
and
push
jne
push
mov
or
aad
and
xchg
xchg
sti
out
jecxz
inc
sbb
push
movsl
and
fdivs
leave
cli
leave
out
call
mov
pop
cmp
call
iret
cmp
fcoml
mov
push
popf
aaa
cwtl
jmp
movsb
leave
out
addr16
nop
jbe
mov
dec
xchg
and
flds
fldcw
dec
mov
loop
push
fmull
lret
test
test
cs
lahf
lcall
pop
xchg
nop
mov
sbb
pop
ja
adc
or
es
lods
and
dec
stc
jg
cmp
add
bsr
add
rcl
btr
shr
or
cmc
shr
sub
js
mov
and
not
cmp
add
movsbw
mov
call
movzbl
lea
pushf
mov
push
jmp
lea
ja
ror
add
pusha
shl
rol
xor
mov
pushf
jmp
call
mov
pushf
jmp
pusha
call
push
bswap
mov
push
pushf
mov
movzbw
movzbw
push
mov
movb
pushl
ret
xor
push
pushf
lea
jmp
insl
leave
dec
mov
outsl
aas
adc
das
movsl
jno
lods
dec
xchg
and
test
cmc
insl
mov
ret
lret
mov
xor
sub
jge
lods
mov
sbb
hlt
mov
repnz
mov
clc
jecxz
jge
or
pop
push
cmc
test
mov
lea
je
push
stc
add
stc
pushl
pushf
cmp
pushf
pusha
lea
jb
call
pushf
movl
jmp
fstpl
dec
inc
stos
xorl
sub
je
in
daa
es
cld
add
setnp
xor
sbb
push
pop
movsl
or
xchg
push
arpl
fstl
xchg
sub
stos
cwtl
popf
gs
lret
push
add
cwtl
shl
int
nop
sub
repnz
stos
mov
repnz
nop
pop
xor
fnstcw
out
sbb
jle
push
ja
ret
sub
test
sti
dec
pop
or
jge
cmpsl
inc
dec
call
push
shll
dec
cmp
pop
sub
fdivrl
dec
add
mov
loope
mov
add
test
mov
dec
mov
adcb
nop
repz
push
stc
mov
cwtl
sbb
iret
cmp
mov
call
and
add
jmp
add
mov
jne
xchg
mov
fldl
and
adc
add
push
mov
adc
inc
cmp
in
pop
mov
mulb
pop
mov
dec
add
xchg
out
into
jb
pop
xchg
jns
push
or
imul
in
pop
cmpsl
lahf
sbb
mov
out
or
into
cmpsl
mov
adc
mov
mov
sti
pusha
pop
xor
xchg
sti
pop
fistpl
add
out
add
pop
fisttpll
pusha
pop
mov
nop
add
dec
bound
es
iret
mov
outsl
js
cmp
sub
push
std
lret
push
dec
loope
lock
xchg
cmpsb
rcl
mov
jnp
mov
inc
xchg
sub
xor
mov
mov
into
sub
add
jbe
enter
dec
adc
xchg
jle
stc
mov
dec
add
and
ret
xlat
inc
repz
adc
adc
sbb
nop
scas
push
std
jmp
sti
fs
pushf
sub
jbe
es
dec
or
sub
push
and
iret
cli
lret
mov
iret
ja
fs
mov
addl
and
mov
jae
loopne
pop
addl
xchg
dec
cs
int
pop
xchg
inc
idiv
jl
iret
inc
test
and
xchg
pushl
lea
jmp
repz
mov
cs
cmpsb
out
iret
out
aad
pusha
nop
scas
mov
mov
insb
dec
fistps
xchg
lcall
adc
jb
dec
sbb
mov
xor
rcrl
insb
sbb
aad
jmp
pop
push
mov
mov
inc
add
leave
push
cmp
inc
dec
jbe
dec
fadd
mov
lock
ds
mov
jecxz
jbe
daa
aad
fldcw
push
mov
jo
add
add
bound
pusha
shrb
adc
push
fcmovb
mov
lahf
and
xchg
out
add
mov
fists
or
jmp
pmaxsw
jmp
jnp
cmp
xchg
out
jle
je
loopne
push
sub
mov
sahf
jg
sbb
jmp
and
cmp
cld
lcall
jns
xchg
jne
mov
aad
xor
pushf
ljmp
jbe
sti
ds
icebp
fcmovnu
loope
pusha
ret
daa
push
scas
cmp
xor
stc
pusha
inc
cmp
jo
mov
imul
jbe
dec
push
flds
jecxz
xor
push
stos
adc
sti
dec
jnp
push
pop
adc
push
stc
and
or
aas
repnz
cs
decl
sbbl
push
bt
call
arpl
dec
inc
in
dec
push
arpl
dec
hlt
cmpsl
mov
sbb
scas
add
xor
aam
jge
pop
cmpsb
stos
das
mov
js
and
or
and
aas
popf
and
push
lods
inc
dec
mov
pop
pop
gs
mov
jbe
data16
fdivrs
mov
ja
cltd
les
pop
adc
mov
pop
test
add
ror
push
jns
adc
sti
add
loop
and
sbb
lahf
fiaddl
mov
sbb
rcrb
add
fs
jne
push
movl
push
push
movl
push
movb
pushf
pushf
lea
jmp
pusha
dec
mov
call
shll
mov
xchg
inc
int
fistpll
inc
addl
clc
xor
mov
jno
stc
in
ret
pop
jo
mov
xchg
test
addl
in
pop
add
addr16
jecxz
cli
dec
pop
ret
mov
and
movsb
push
pop
aas
dec
jg
inc
xlat
jnp
not
lahf
call
mov
push
movl
mov
movb
lea
jmp
movb
pusha
lea
call
pushf
lea
jae
push
jmp
out
jo
pop
push
sahf
in
rorb
nop
fcoml
addr16
and
fists
jecxz
mov
cmc
test
sub
xor
out
sbb
fdivrs
adc
xor
mov
lds
mov
nop
inc
cli
mov
lea
fcomp
or
imul
jns
ret
call
push
lcall
mov
shr
aam
add
call
push
mov
pushl
pushl
ret
lea
jb
cmc
bt
pushf
movl
cmpb
jmp
call
mov
scas
rorl
subb
mov
scas
pop
xchg
pop
and
shrl
dec
flds
sbb
push
jmp
dec
add
sbb
scas
add
add
mov
jge
clc
ja
fs
push
sbb
sub
cmp
mov
scas
jg,pt
inc
imul
cld
pop
pushf
call
cmpb
jmp
mov
pushf
pushl
pushl
ret
bt
cmp
jmp
lea
je
push
add
test
cmp
pushf
pusha
lea
jb
test
cmc
cmp
jmp
bt
test
sub
cmc
stc
call
push
pusha
pushf
lea
ja
rcl
shr
rol
sub
rcl
btr
add
or
neg
mov
or
test
mov
cmp
stc
repnz
jmp
pushl
movl
pushf
call
fidivrl
sbb
stc
mov
ljmp
sub
daa
cltd
repnz
cwtl
bound
xchg
add
out
push
insl
jne
ss
cs
dec
shlb
jmp
aad
add
mov
jg
iret
adc
mov
jp
adc
mov
lcall
inc
inc
pop
or
mov
xchg
add
std
adc
nop
cmp
mov
mov
ret
xor
mov
mov
inc
add
aas
pop
pusha
mov
shlb
inc
jne
push
mov
test
pop
addb
add
je
int3
mov
sub
pop
pushf
test
pop
ds
mov
jno
sub
leave
push
bswap
popa
xor
pushf
lock
sbb
pop
clc
les
jle
and
ds
fcmovu
enter
testb
cmpsb
pusha
lea
jne
lahf
setb
call
inc
xchg
xor
call
push
adc
inc
cli
clc
fisubs
cmp
outsl
repnz
sub
jne
repnz
dec
adc
aad
inc
ficomps
outsl
adc
xchg
mov
sbb
sti
aad
mov
imul
mov
movsl
xchg
jmp
andl
cmp
xchg
mov
aad
dec
leave
jbe
pop
lahf
push
imul
jp
out
cmc
data16
fmuls
stos
pop
notl
in
push
jg
jno
adc
mov
sub
jg
inc
sbb
in
pop
mov
or
or
lcall
add
mov
sbb
mov
insl
xchg
in
sbb
sarl
aaa
mov
and
cmpsb
jmp
lahf
test
mov
movsl
out
xlat
push
inc
movsl
inc
into
cmc
pop
mov
pop
and
stos
sub
or
movsl
mov
pop
and
movsl
and
pop
pop
cmc
movsb
mov
scas
and
in
mov
jmp
and
mov
gs
movsb
fmulp
lret
movsl
xchg
push
pop
push
mov
xchg
mov
loop
add
add
jnp
outsl
inc
mov
jmp
push
and
sbb
or
pop
xchg
imul
and
loopne
adcl
inc
daa
adcb
pop
mov
loopne
sub
aas
movsl
xchg
stos
and
mov
std
pop
sub
loope
popa
sahf
test
cmp
dec
loop
in
fdivrl
jle
lcall
movsl
clc
push
pushf
das
jg
nop
mov
mov
rolb
movsl
add
inc
add
pop
or
ljmp
icebp
lea
orb
mov
xchg
ret
sbb
inc
inc
cmp
pop
shlb
cmp
jl
aad
and
mov
cmpsb
sbb
popf
add
pop
fistps
mov
xchg
ret
sub
mov
adc
sbb
and
push
rcl
mov
movsl
dec
loop
mov
dec
add
xchg
cwtl
insl
or
out
push
and
dec
in
xchg
testl
cmp
aaa
movsb
xchg
sub
pop
pop
cmp
xchg
mov
lea
lcall
add
or
fisubl
sbb
sbb
in
cmpsb
es
iret
or
es
out
insb
das
int
jns
out
jmp
and
jnp
in
sbb
add
jbe
push
and
or
adc
pop
jb
daa
inc
push
es
xchg
iret
and
movb
sub
mov
add
and
fwait
push
and
push
insb
data16
fimull
push
popf
sbb
data16
mulb
es
nop
das
gs
dec
ds
or
bound
insl
in
movsb
iret
test
out
or
lret
mov
fbld
rolb
popf
movsb
mulb
into
adc
jmp
movsl
ds
test
cmpsb
fs
and
pop
mov
sub
adc
sbb
and
or
mov
xchg
add
and
int3
sbb
std
sbb
mov
pop
fsubl
cmpsb
lea
add
lea
add
xchg
or
arpl
movsb
mov
jmp
add
cmpsl
add
iret
mov
movsb
movsl
in
fbld
andl
mov
xchg
and
lcall
mov
nop
movsb
jmp
xor
rsm
lcall
loopne
add
bound
sbb
popf
mov
adc
xchg
sahf
xchg
mov
pmulhuw
push
sub
cmc
sbb
push
nop
hlt
mov
or
and
cltd
mov
or
cli
lea
lea
or
and
pop
jns
mov
test
sub
hlt
add
pushf
repz
jecxz
lds
scas
push
sbb
out
loope
loopne
inc
pop
and
sahf
call
xchg
cltd
loope
jmp
pop
add
xchg
add
fs
into
pushf
inc
decb
and
das
movhps
fcompl
jecxz
cmpsb
pop
ficomps
rcrb
and
lea
xchg
add
jge
pop
aam
push
jp
add
in
xchg
push
mov
sti
add
out
loope
lcall
add
lock
dec
negb
movsl
add
and
sbb
testb
sbb
iret
mov
and
insl
ret
add
or
adc
cltd
pop
mulb
test
inc
and
or
and
lcall
lock
push
mov
or
hlt
lcall
and
or
push
orl
sbb
popf
cmp
xchg
stos
es
sbb
lahf
insl
out
push
or
or
int
add
mov
popa
mov
mov
mov
nop
scas
clc
movsl
push
dec
ljmp
movsl
or
movsl
and
repnz
enter
fwait
scas
es
push
add
and
pop
loop
and
mov
push
cmc
lock
popf
cmc
adc
aas
add
lahf
adc
adc
pop
add
movsl
hlt
mov
or
mov
mov
mov
adc
or
or
inc
adc
add
lret
mov
adc
nop
add
cmpsl
push
or
je
or
movsl
sbb
or
idivb
ret
sarb
mov
pop
sbbb
in
mov
and
mov
mov
adc
and
xchg
or
xchg
dec
cs
and
xchg
mov
add
adc
inc
popf
adc
pop
and
mov
and
sbb
and
out
xchg
or
xchg
mov
push
cmc
nop
cmc
add
pop
inc
jbe
repz
data16
mov
sub
mov
sub
xchg
cwtl
sbb
adc
sahf
push
add
xchg
jb
xor
mov
es
popf
les
xchg
adc
pop
clc
xchg
mov
jecxz
pop
mov
ret
push
adc
cmpsb
cmp
adc
mov
and
jecxz
loop
push
add
adc
mov
fcoml
adc
mov
and
or
pop
ret
or
and
sbb
fwait
cmc
sbb
cwtl
loope
pop
and
sahf
push
mov
add
hlt
add
xchg
push
cltd
add
push
add
xlat
adc
adc
lods
xchg
mov
xchg
dec
lods
es
cmpsb
jmp
cwtl
pop
mov
and
fwait
cli
and
nop
or
and
xlat
lds
jge
andl
mov
xchg
push
insb
and
and
xchg
and
movsl
and
lock
or
inc
and
xchg
es
cmpsb
lcall
dec
xchg
sbb
imul
mov
ret
sbb
and
adc
add
mov
sahf
or
and
push
xchg
mov
adc
ds
ret
adc
and
push
push
ret
add
push
fwait
mov
push
mov
xchg
mov
dec
xchg
ds
pushf
clc
xchg
popf
loop
adc
fiadds
jmp
jle
outsb
and
mov
add
and
pop
mov
shlb
jb
imul
lcall
sbb
hlt
xchg
add
jp
frstor
or
sahf
dec
jne
push
rcrb
mov
mov
femms
add
add
cli
or
adc
cmc
xchg
lds
or
jbe,pt
mov
sbb
or
dec
call
cmpsb
out
rorl
or
adc
sahf
or
and
sub
sub
and
test
dec
xchg
loopne
add
adc
negb
rorb
popf
or
inc
scas
movsb
fsubl
aam
and
movsb
or
sub
into
or
sbb
cmp
mov
jmp
out
sahf
sarl
cmpsb
js
ficoms
jge
xchg
in
and
es
mov
shll
jge
sahf
in
sahf
lea
hlt
push
and
stos
mov
in
dec
lods
adc
or
es
and
mov
hlt
fwait
loop
xchg
mov
and
cmpsb
std
sub
mov
mov
test
add
daa
inc
sbb
shlb
test
jecxz
dec
pushf
and
mov
dec
cmpsb
and
movsb
es
pop
pushf
negb
test
adc
faddp
sbb
cmpsl
jg
mov
test
and
sbb
pop
andl
add
stos
dec
lret
jns
xchg
pushf
xchg
push
mov
pop
mov
push
mov
idivb
cltd
mov
es
cs
out
iret
and
and
push
in
push
xchg
and
cs
dec
mov
je
pushf
add
adc
loop
push
dec
cmp
add
inc
cmp
inc
fadds
data16
cmp
cmp
add
or
dec
add
jnp
xlat
add
popa
out
pop
out
fidivl
or
setnp
and
popf
decb
loop
bound
fwait
icebp
test
sbbb
hlt
mov
or
push
sub
or
sbb
pusha
adc
incl
mov
xchg
cmp
pop
mov
and
add
arpl
rorb
inc
jmp
stos
mov
loope
sub
sahf
mulb
paddusw
adc
roll
sahf
add
fimull
jnp
repz
repz
mov
movsl
inc
testl
cld
xchg
lds
int3
mov
out
cmp
xchg
ret
dec
out
loop
mov
inc
and
xchg
sub
or
xchg
nop
sti
push
add
je
lahf
or
ffreep
adc
add
loop
or
add
push
add
mov
clc
cmpsb
int
movsl
stc
xchg
xchg
and
mov
stc
mov
push
and
lcall
lcall
push
movsl
adc
inc
add
inc
mov
stos
and
popf
lret
push
cmpsb
mov
sbb
xchg
test
and
lock
in
sbb
movsl
add
into
sbb
mov
xchg
push
and
lret
jmp
dec
or
lds
out
pop
sbb
mul
add
and
jp
mov
mov
mov
sbb
or
rclb
sbb
nop
fwait
lret
lea
adc
adc
sbb
and
pushf
or
mull
cmpsb
test
fimull
pop
adc
and
push
insb
sbb
stos
xchg
adc
out
or
xchg
adc
pop
xchg
dec
mov
jle
xchg
shlb
mov
dec
and
mov
xchg
push
in
pop
hlt
inc
cmc
cmc
nop
cmpsl
xchg
pushf
jp
testl
sbb
icebp
mov
int3
fwait
push
cmp
lods
mov
dec
pop
jmp
or
xchg
sti
clc
sbb
std
popf
pop
add
mov
lcall
repz
adc
movsb
mov
and
mov
scas
xchg
adc
add
push
pop
sbb
push
and
cli
push
adc
xor
movsb
and
repz
dec
mov
mov
cld
cli
push
mov
inc
and
push
mov
push
mov
jns
in
and
push
and
or
and
negb
xchg
cld
hlt
movsl
in
repz
mov
cld
and
push
hlt
out
fisubs
cmpsb
in
xor
adc
movsb
dec
cmpsb
add
and
adc
pushf
loope
fwait
and
dec
jo
adc
cltd
outsb
and
lods
mov
sahf
dec
mov
negw
cmc
pushf
int3
setge
xchg
mov
xchg
mov
movups
in
mov
or
lea
push
add
movsb
xchg
mov
icebp
jmp
adc
hlt
add
cwtl
xrelease
mov
pop
pop
or
mov
adc
sahf
mov
add
add
hlt
add
loop
xchg
or
cmpsb
sti
call
fsubl
adc
aad
xchg
dec
adc
lcall
and
add
sbb
add
bsf
pop
mov
add
add
loop
pop
and
and
mov
mov
or
sbb
iret
adc
mov
and
pop
popf
pop
adc
bound
and
dec
pop
jle
dec
std
add
in
std
les
or
sbb
mov
pop
lods
mov
pop
cltd
mov
movsl
in
lods
movsl
mov
mov
add
and
xchg
jmp
gs
andl
cwtl
and
outsl
and
outsb
movsl
mov
push
js
pop
faddp
lahf
js
push
std
out
push
and
push
sti
jmp
mov
jg
bound
pop
sbb
insb
pop
ljmp
loopne
push
mov
pushf
cmc
loopne
pop
sbb
mov
push
sbb
fdivs
adc
in
push
mov
orb
out
xchg
or
xchg
or
sbb
cs
mov
cmp
add
in
gs
cli
or
fsubp
mov
sbb
loop
incb
pop
cmc
inc
je
es
push
out
pushf
jle
out
movb
cli
mov
ficoms
xchg
adc
or
pop
int
stos
adc
dec
in
subb
mov
data16
es
and
mov
cmpsb
mov
mov
xchg
pop
xchg
movups
sahf
iret
jge
mov
mov
and
out
insl
xchg
ss
jp
out
mov
paddb
xor
shll
add
mov
xchg
sbb
jl
sbb
sbb
addb
jae
mov
push
or
vexp2pd
jb
pushl
pop
push
pop
dec
fbld
imul
pop
add
jp
pop
out
adc
xchg
sahf
movsl
mov
repnz
out
push
mov
test
adc
sub
repnz
and
sbbb
and
nop
movsb
ficompl
adc
sahf
xchg
pmaddwd
xchg
in
mov
mov
jne
cwtl
adc
rcl
lock
mov
mov
seto
movsl
rclb
shlb
and
fisttpl
pop
or
add
fldl
and
adc
mov
cli
adc
std
adc
xchg
rolb
cwtl
sahf
push
xchg
cmc
xchg
movsb
mov
lcall
decb
add
mov
repz
or
xchg
cld
shld
add
xchg
mov
and
add
loop
sahf
pop
adc
and
adc
psrad
mov
out
and
and
and
sbb
cltd
sahf
sbb
mov
psrad
or
xchg
es
cmpsb
movsb
push
and
pop
loop
jle
mov
mov
xchg
loopne
push
add
xchg
mov
add
add
sarl
xchg
pop
push
repnz
or
fimull
and
adc
push
es
fbld
cwtl
mov
adc
mov
and
mov
fwait
lret
mov
ficomps
aad
sbb
movsl
sbb
lods
clc
movsl
adc
gs
mov
movsl
movsb
jne
movsl
les
add
ficoml
xchg
add
rcll
or
push
out
stc
leave
or
push
pminub
mov
xchg
sahf
movsb
cmpsb
push
into
pop
xor
sbb
iret
adc
adc
fisttpll
roll
or
mov
movsb
sbb
inc
mov
mov
fwait
bswap
cltd
ljmp
and
mov
lcall
adc
mov
adc
jbe
punpcklbw
les
into
dec
mov
lahf
cmpsb
adc
jp
inc
aas
dec
add
lea
or
call
push
inc
and
mov
add
inc
movsl
decb
int3
and
or
add
lcall
insl
sbb
sbb
or
cmp
and
mov
fcomp
lods
push
mov
movsb
push
out
add
push
and
mulb
mov
stos
sbb
mov
sbb
pop
and
es
add
or
mov
fimull
add
mov
add
mov
xchg
movsl
push
hlt
push
loop
sahf
adc
push
es
jmp
add
push
push
adc
adc
nop
sahf
mov
add
add
sub
mov
push
movsl
or
mov
mov
mov
andb
mov
in
es
push
and
lcall
dec
add
adc
push
pushf
sub
or
mov
int3
fisubl
cltd
add
mov
xchg
leave
out
imul
and
rcrb
stos
and
cwtl
add
push
jmp
and
int
iret
hlt
popa
pushf
clc
in
add
movsl
ficompl
push
mov
lcall
xchg
dec
mov
mov
adc
and
mov
jle
stos
mov
int3
gs
addr16
lods
gs
leave
gs
mov
and
ljmp
ljmp
ljmp
movsl
jle
lahf
fwait
out
loope
jb
push
mov
sti
push
out
test
mov
sbb
and
fs
or
mov
mov
adc
jg
dec
jne
rorl
adc
lods
icebp
or
and
pop
mov
std
andl
shll
pop
movsl
fimull
lahf
xchg
and
cmc
sub
and
and
mov
cltd
dec
xor
xor
sub
cld
fwait
lcall
cmp
adc
and
mov
mov
jno
cmc
and
or
orl
mov
mov
icebp
xchg
add
sbb
xchg
push
push
rcrb
push
loop
adc
xchg
push
sbb
xor
sahf
sahf
lea
add
out
pop
cmc
loopne
add
jmp
or
lret
push
pushf
adc
sbb
and
insl
add
xchg
add
rclb
add
pop
add
add
add
add
mov
mov
dec
add
pushf
and
push
pushf
pop
and
and
and
add
add
add
or
or
sbb
pmuludq
cltd
inc
sbb
and
cltd
stc
out
mov
inc
xchg
adc
mov
add
and
es
movsl
add
dec
and
scas
es
adc
mov
ds
mov
lahf
nop
rolb
movsl
mov
movsl
nop
scas
pop
movsl
lods
push
movsl
in
stos
movsl
lret
test
movsl
mov
jbe
push
aam
repz
repnz
sti
xchg
mov
mov
or
loop
and
aas
sbb
daa
mov
rolb
adc
dec
and
es
mov
or
or
xchg
bound
jge
pop
lret
sbb
push
sti
adc
or
inc
add
sti
cmpsb
add
inc
add
jle
or
sti
sub
push
sbb
cmp
push
or
fisubl
cltd
and
popa
adc
xchg
sub
orl
add
or
cmc
pop
in
or
pop
sbb
jecxz
or
mov
sahf
xchg
jno
pop
out
xchg
clc
lcall
mov
cmpsb
pop
popf
lea
add
mov
or
aas
mov
inc
adc
cli
movsl
sbb
lea
lea
mov
mov
sbb
nop
pop
pop
fisttpl
mov
mov
xchg
mov
pop
adc
and
xchg
mov
or
or
sbb
es
cmpsb
les
pop
mov
adc
cltd
push
adc
sub
dec
mov
adc
and
and
lret
ljmp
push
cli
loope
sti
sbb
jecxz
push
mov
sbb
mov
and
adc
jae
and
push
adc
mov
jmp
stos
gs
in
and
gs
mov
movsl
cld
jmp
movsl
jle
mov
xchg
adc
lcall
lcall
lcall
gs
gs
andl
mov
movsl
adc
stos
push
and
or
pop
iret
or
push
fisubs
bound
stos
adc
pushf
push
fisubl
sub
sbb
xchg
and
fwait
inc
push
frstor
mov
or
in
ljmp
lea
mov
lea
jbe
xchg
frstor
lret
adc
xchg
mov
push
xchg
mov
stos
shll
lcall
add
adc
cld
push
cwtl
stc
dec
nop
lret
jl
and
cmp
inc
push
pop
adc
lea
sti
lret
add
and
in
mov
or
jnp
or
data16
and
cli
adc
cmc
jbe
xchg
fmull
and
mov
into
adc
add
sahf
adc
sbb
out
pop
sahf
movsb
out
push
push
cmc
cmpsb
lods
mov
mov
adc
inc
popf
pop
or
pop
rolb
sub
aas
pop
and
push
mov
std
or
push
push
add
pop
negl
stos
popf
pop
mov
rorb
or
mov
mov
iret
jbe
mov
pop
xor
mov
push
out
adc
jb
movsb
es
add
mov
movsb
push
or
mov
push
pop
and
add
std
testb
xchg
mov
pop
push
fildl
jne
and
mov
sub
mov
sbb
sbb
sbb
inc
mov
rclb
xchg
popf
cmc
adc
scas
or
add
add
mov
aam
mov
mov
and
mov
sbb
mov
add
xchg
popa
lea
movsl
or
and
mov
or
push
hlt
jle
hlt
add
sbb
mov
xchg
stos
shlb
add
loopne
adc
mov
mov
and
pop
loop
add
fwait
sahf
cltd
sbb
xchg
in
mov
loop
sahf
or
cmc
add
popf
push
fwait
hlt
sbb
cwtl
sahf
pop
adc
mov
or
mov
movsb
cmc
and
and
sbb
sbb
in
mov
mov
or
cmp
jb
xchg
test
test
and
add
sbb
xchg
hlt
add
and
cld
fmuls
add
xchg
hlt
mov
sbb
mov
xchg
loop
sahf
adc
cmc
push
in
mov
es
add
fs
and
int3
xchg
xchg
sbb
dec
xchg
sbb
pushf
sbb
add
sub
and
mov
sbb
and
add
lea
and
test
es
es
pop
bound
scas
or
mov
add
dec
es
push
xchg
mov
es
es
mov
lahf
repz
inc
jne
and
xchg
sbb
jmp
add
movsl
mov
mov
into
sbb
sbb
sub
pop
or
mov
jo
and
and
push
insl
mov
shrb
imul
pushl
es
bound
sbb
ss
push
movsl
roll
xchg
xlat
jl
xchg
pop
mov
fimuls
fisubs
mov
jmp
push
lahf
adc
sbb
jp
sbb
jns
sbb
js
sti
arpl
fsub
movsl
je
movsl
jl
andl
in
push
iret
or
add
and
push
xchg
cmp
sahf
fidivrl
xchg
or
lcall
sahf
loopne
mov
add
lcall
or
cwtl
lea
xchg
add
jbe
or
int3
xchg
sbb
add
dec
lea
adc
cmc
mov
or
inc
add
mov
call
cmp
lock
std
sti
cwtl
outsl
stc
add
adc
add
add
nop
mov
sbb
and
add
lahf
xchg
cmc
xchg
repz
add
add
enter
add
sbb
mov
adc
mov
pushf
cmp
inc
ret
mov
mov
cld
pop
sbb
or
movsb
int
and
repz
pop
lahf
add
movsl
popf
cmc
sbb
add
adc
cmc
adc
lea
lds
loop
sahf
sahf
sbb
cltd
in
mov
loop
sahf
mov
cmc
movsl
cs
sbb
xchg
sahf
adc
cmc
pmulhuw
adc
in
add
sbb
push
xchg
std
lret
mov
or
add
sbb
adc
adc
mov
movsl
inc
out
hlt
add
cltd
xchg
cmc
adc
nop
mov
jge
push
loop
and
andb
pop
cmpsb
pop
sbb
pop
xchg
cmc
adc
adc
lea
or
add
movsb
mov
pop
loop
sahf
sbb
cmc
xchg
in
mov
loop
sahf
mov
cltd
in
add
push
mov
xchg
loop
sahf
adc
mov
movsl
les
loop
sahf
lahf
sbb
mov
xchg
loop
sahf
mov
xchg
and
and
in
mov
xchg
loop
pushf
cltd
adc
cmc
or
mov
es
and
mov
sbb
cwtl
mov
adc
sysenter
sub
push
sbb
mov
popa
xchg
es
xchg
xor
mov
andb
adc
mov
add
xor
add
and
cmp
adc
push
mov
sbb
out
mov
mov
std
test
iret
iret
pop
push
mov
stos
and
mov
andb
in
and
jns
and
sub
pop
nop
and
outsb
movsl
in
insl
movsl
mov
movsl
jle
andl
push
movsl
cld
xchg
cltd
subb
lea
notb
mov
andb
pop
movsb
cmpl
fcoml
ret
es
add
popf
and
and
sbb
or
rorb
loop
mov
notl
mov
pop
mov
mov
xor
or
mov
ficompl
add
sti
cwtl
mov
cmc
xchg
aam
sub
sbbl
mov
adc
fisubs
adc
push
and
lds
pop
mov
or
push
cwtl
xor
and
mov
jge
push
pushw
xor
adc
in
ljmp
sub
xchg
push
cld
sysenter
lock
mov
cmpsb
inc
add
jl
or
and
push
jl
inc
and
pop
and
inc
mov
or
adc
sbb
xchg
and
stos
add
add
add
mov
push
xor
mov
mov
adc
je
sbb
cmp
test
sbb
push
movsb
adc
sbb
xchg
das
add
out
in
or
fcompl
cwtl
int
pop
cmp
xchg
sbb
adcb
dec
sbb
in
jp
ficoml
addl
lock
add
sbb
jp
inc
movsb
xlat
cmp
lahf
add
ficomps
jb
and
mov
ficomps
fs
sub
mov
aas
add
sub
cmpl
fiadds
ret
in
sti
and
sbb
push
mov
cmc
xchg
adc
inc
add
mov
sbbl
fs
bound
cltd
sub
cwtl
mov
mov
or
add
pop
enter
in
test
inc
cmpsb
popf
mov
bound
jo
or
mov
std
lods
and
lahf
mov
popa
orl
xchg
ljmp
movsb
rcrb
or
shlb
or
and
movaps
dec
es
rep
add
loope
cmpsb
add
cs
jge
push
mov
adc
and
cld
and
jmp
mov
and
and
cmpsb
ss
push
int
and
and
add
cmc
and
mov
mov
mov
fwait
data16
mov
or
and
mov
fstpl
mov
ret
adc
and
rcll
fwait
adc
and
push
xchg
and
sub
cmpsl
add
ret
mov
push
ss
mov
mov
cmc
adc
popf
jp
shll
sahf
push
mov
decl
mov
push
sahf
pop
ret
and
and
xchg
mov
in
jnp
adc
mov
inc
xchg
rorl
xchg
mov
fcomps
rcrl
dec
popa
mov
xor
push
pushf
adc
test
pop
adc
jle
mov
mov
cld
movsl
jnp
insb
push
cmpsb
movsl
aas
or
push
add
jno
xchg
sbb
lock
popf
add
add
or
outsl
fbstp
fldenv
and
fnsave
hlt
std
or
insb
movl
pop
aam
arpl
data16
cmp
mov
rcr
xor
sahf
xchg
movsb
add
int
cli
mov
pop
pop
inc
daa
inc
out
fwait
outsb
aas
pop
mov
push
shrb
and
cwtl
jle
pop
sbb
std
sub
iret
cmp
jmp
pop
rcrl
inc
fstpt
pusha
fisttpl
jmp
lcallw
push
push
int3
cmp
loopne
inc
and
arpl
ret
and
ljmp
scas
and
mov
cmc
repnz
mov
push
lcall
in
les
negl
sar
xlat
shl
adcb
and
xchg
fiadds
out
pop
add
jl
mov
incb
jge
mov
popf
popa
xor
pop
test
jns
cwtl
cltd
xchg
rcr
es
cmp
out
add
sbb
loopne
or
xchg
dec
in
or
cmc
shl
and
adc
add
into
rcrl
inc
es
xchg
mov
gs
push
xor
outsb
inc
sub
jno
addr16
pop
ficoms
pop
sub
mov
andl
or
mov
xchg
out
push
mov
sbb
repz
outsl
sub
fimuls
out
mov
xor
lock
loopne
jl
xor
sbb
jae
cmp
cmp
and
xchg
clc
push
out
out
cmpsb
movsl
add
jle
and
or
cmp
xchg
mov
sahf
sahf
pusha
xchg
sbb
ljmp
pushl
push
mov
ret
sbbl
mov
inc
fcmovu
loopne
jnp
popa
and
and
sti
out
lret
and
jle
add
add
and
outsl
imul
push
minps
adc
and
in
inc
bound
and
mov
mov
add
or
pop
jno
popf
aad
cmp
push
xchg
sbb
popa
lcall
push
popf
add
pushf
loope
cmp
sahf
mov
cmc
mov
mov
xor
rol
insl
pop
lret
cmp
ficomps
es
inc
mov
lds
add
nop
xchg
daa
pop
addr16
sbb
outsl
nop
and
es
mov
mov
adc
in
out
cli
sbb
or
pusha
es
pop
cmp
and
loopne
shlb
fs
push
and
pushf
sti
ficomps
shl
loop
cli
ficompl
mov
fs
ja
into
sub
and
sub
mov
pop
cmpsb
out
dec
jecxz
mov
adc
inc
test
cmpsl
ss
enter
in
add
push
or
pop
push
popa
aas
call
mov
subl
adc
pop
mov
mov
rorb
mov
and
mov
mov
jne
lret
mov
push
pop
sub
xchg
fnstcw
std
mov
push
push
cld
loopne
dec
mov
pause
and
xorl
mov
loopne
decl
push
and
pop
mov
incl
in
test
and
mov
scas
adc
filds
cmc
inc
hlt
ds
cli
sub
or
adc
scas
cmpsb
push
pop
dec
lea
adc
js
xchg
ret
es
jp
mov
dec
mov
adc
cwtl
xchg
and
dec
xor
popf
xor
dec
xchg
inc
or
add
cmp
and
sub
and
dec
jae
mov
adc
in
sub
sbb
scas
cwtl
sbb
lcall
in
movsl
add
sbb
sub
inc
adc
xor
lcall
popf
repz
std
sbb
cmp
shlb
or
ds
and
es
xchg
add
notb
jp
sbb
xchg
mov
xchg
mov
std
or
sbb
and
movsl
test
ficompl
sbb
push
int3
pop
lahf
inc
push
mov
pushf
sbb
fwait
lds
sbb
jp
cld
cltd
andb
in
out
push
and
mov
push
out
lret
ret
lds
sahf
popf
xchg
cmp
sbb
adc
mov
fwait
into
dec
adc
nop
cld
pop
push
call
add
pushf
push
pushf
sub
and
fisttpll
mov
rcrl
out
cwtl
mov
mov
cmpsb
mov
lahf
adc
or
sbb
adc
lcall
pushf
cltd
sahf
adc
add
loop
cmpsl
and
sahf
ret
mov
fwait
mov
xchg
sbb
fisubl
jns
pushf
jle
aas
push
movsb
mov
movsb
pop
cmp
or
xchg
adc
ficompl
xor
xchg
cltd
mov
xchg
xchg
adc
jnp
mov
in
sahf
outsl
popf
lret
je
les
je
je
xchg
mov
xor
mov
mov
jb
adc
pop
sti
xchg
fcompl
lods
sti
sbb
in
out
lret
lock
xlat
aad
push
sbb
lock
fwait
sbb
clc
mov
jp
pop
and
inc
fs
lcall
lods
and
lea
orb
jns
xchg
ljmp
ret
add
jge
jg
mov
clc
cmpsb
movsb
jns
lcall
push
push
and
cmpsb
inc
nop
mov
sub
fs
mov
xchg
popf
cmp
and
insb
shlb
adc
pop
movsl
js
cmp
mov
dec
xchg
in
and
and
mov
mov
clc
ss
mov
xchg
mov
sbb
cmp
nop
fwait
sub
mov
subb
inc
lret
mov
push
nop
mov
fadds
jg
cmc
push
mov
mov
cmp
arpl
xchg
mov
ret
xchg
or
cmpb
loope
add
cwtl
push
mov
and
sbb
push
cwtl
enter
adc
sets
movsl
lcall
jns
ljmp
ljmp
mov
push
mov
inc
and
loopne
xor
test
cmp
inc
jle
into
dec
cwtl
adc
fwait
pop
mov
jbe
cmp
fwait
add
jno
push
or
int
cltd
pop
jbe
xchg
mov
orb
cmp
int
mov
sbb
cld
and
popf
in
or
popf
sbb
mov
sbb
rcll
jno
jmp
mov
adc
clc
mov
cmp
push
mov
aad
mov
movsl
jo
fwait
mov
xchg
cmp
xchg
mov
out
lret
xchg
in
jbe
mov
popf
jbe
push
les
sbb
jae
lcall
or
xchg
fisubrs
adc
negl
and
cmc
inc
addl
in
mov
xchg
cmp
adc
mov
and
xor
mov
jg
mov
jecxz
add
lcall
call
mov
jge
pop
ret
and
lods
sbb
and
and
lcall
add
in
adc
call
andl
xor
movsl
xor
add
add
cld
adc
xchg
lea
icebp
xchg
push
adc
mov
std
in
pop
loop
daa
rcrb
mov
xchg
dec
dec
lea
and
and
mov
mov
and
nop
lea
inc
xchg
shlb
mov
lds
popf
lea
pop
rclb
jae
xchg
add
fcmovnu
out
add
ja
pop
xchg
fistl
popa
mov
xchg
lret
push
xchg
lods
xchg
and
and
cmp
or
jns
push
sbb
add
and
jmp
add
push
cmc
movsb
dec
xchg
and
pushf
stc
mov
aaa
xchg
inc
xchg
lret
cmp
xchg
adc
loope
inc
and
mov
es
in
dec
adcl
cltd
nop
push
mov
lret
adc
and
sbb
sub
lods
mulb
data16
mov
hlt
xor
mov
das
sub
movsb
mov
lcall
adc
pushf
roll
xchg
push
cmp
testb
mov
cmpsb
xlat
xor
lea
cwtl
mov
mov
dec
cmp
or
pop
mov
lea
ficompl
divb
xchg
mov
fisubl
or
sahf
pop
push
jbe
inc
adcl
dec
movsb
rcll
movsb
inc
xlat
movsb
mov
and
in
xchg
daa
movsb
dec
ljmp
nop
jbe
xchg
xchg
ljmp
dec
movsb
sbb
ljmp
xchg
xchg
movsb
sbb
fs
xchg
movsb
cltd
movsb
mov
adc
mov
sub
xchg
xchg
mov
and
call
les
push
push
out
adc
xchg
or
cmp
or
ds
xrelease
mov
xchg
imul
add
sbb
adc
xchg
mov
outsb
or
enter
pop
lahf
add
add
out
add
inc
adc
das
push
xor
sbb
cmc
inc
mov
call
dec
pop
add
push
adc
out
cwtl
das
dec
push
xchg
fwait
das
pop
xchg
call
adcl
repz
xchg
int3
jmp
repz
sti
sbb
push
cmpsb
andb
push
iret
and
sbb
and
sbb
and
popf
mulb
cs
lahf
punpckldq
in
or
mov
or
add
and
mov
mov
cltd
sahf
mov
cli
sbb
stc
jmp
popf
mov
push
outsb
mov
and
cmpsb
mov
xchg
movsl
xchg
fistl
mov
sbb
rclb
ds
es
and
jecxz
sbb
and
sbb
into
in
les
pusha
xchg
lcall
add
push
lcall
cmc
into
cltd
into
stos
xchg
mov
enter
mov
js
or
push
sbbl
fs
imul
cmpsb
mov
adcl
cwtl
and
mov
and
ds
add
and
xchg
xchg
xchg
fsubs
movsb
or
pop
orb
jbe
xchg
je
iret
stc
or
pop
mov
jbe
into
andb
push
jbe
es
inc
push
lea
add
test
mov
imul
int
cwtl
imul
jne
fisubs
xchg
xor
xchg
sbb
mov
mov
inc
popl
jne
cmp
fsubs
pop
cmp
and
jbe
fcompl
push
sub
push
popf
jmp
fstl
xchg
jb
dec
push
or
dec
aad
popf
jnp
and
mov
aaa
jp
pop
sbb
or
pop
lock
mov
xchg
xchg
and
adc
movsb
lods
fisubs
or
nop
arpl
xchg
lds
ret
dec
sbb
cmpl
test
mov
in
push
mov
or
and
cwtl
pop
pop
add
cmp
and
mov
mov
mov
es
mov
lea
and
xchg
jp
add
loopne
in
pop
mov
push
or
movsb
push
orl
xchg
dec
mov
fisubl
aaa
sbb
mov
adc
mov
add
add
mov
repz
repz
mov
lea
and
fcoml
mov
and
push
dec
dec
pminub
decl
mov
sbb
dec
or
sbb
test
add
rclb
inc
in
dec
sbb
int3
pop
mov
in
loope
sub
xchg
and
inc
and
pushf
and
lcall
add
xchg
and
sbb
sahf
in
and
adc
and
sub
dec
add
inc
mov
data16
cmc
pop
je
push
cmpsl
aaa
adc
cmpsb
push
mov
xlat
ljmp
push
lods
lcall
test
adc
test
push
mov
push
and
popf
mov
push
outsb
mov
add
or
pushf
dec
pushf
add
xor
mov
sbb
in
or
and
xor
sbb
adc
sbb
ret
pop
dec
sbb
lret
mov
lcall
pop
adc
xchg
and
or
sub
lret
pushf
mov
add
add
add
and
push
mov
and
and
arpl
push
loop
mov
mov
xchg
repz
aam
fcomps
add
and
add
cld
add
ret
mov
and
and
mov
add
mov
add
and
and
and
adc
cmpsb
lods
popa
cltd
movsb
push
pop
mov
sbb
xor
mov
lahf
or
loop
mov
xchg
lea
xchg
mov
nop
jno
push
adc
gs
sbb
loopne
cld
call
and
pop
pop
push
mov
xchg
adc
loope
in
or
fbstp
test
adc
sub
in
pop
sbb
daa
add
push
push
es
hlt
mov
cmp
mov
xor
stos
loop
and
xor
in
popa
in
pop
fwait
cmp
lcall
lcall
inc
mov
push
in
cmpsb
cmp
xchg
cmp
cmpsb
hlt
fwait
cmp
adc
pushf
pop
lar
call
cmp
or
mov
sahf
popf
xchg
popf
mov
xchg
cltd
mov
xchg
call
jbe
mov
pop
push
ds
jbe
mov
cwtl
shlb
dec
sahf
call
inc
add
jbe
fimuls
jb
lcall
xchg
adc
mov
xchg
popf
mov
mov
lds
push
inc
mov
int
sbb
mov
mov
sbb
adc
mov
faddl
inc
outsb
adc
xchg
insl
fs
cwtl
movsb
and
movsb
addb
sahf
push
call
out
movsb
sbb
fstl
movsb
andb
add
fwait
in
push
and
xchg
aam
dec
aaa
loope
fstl
add
push
int3
enter
into
mov
in
fwait
movsb
adc
in
les
ss
sbb
push
shlb
sub
dec
xchg
add
xchg
movsl
repnz
cwtl
scas
or
or
xchg
ret
es
or
dec
mov
inc
and
and
lds
in
and
add
xchg
xchg
dec
add
adc
push
mov
mov
mov
mov
mov
movsb
mov
and
and
and
fwait
and
dec
xchg
adc
dec
xchg
inc
mov
add
in
pop
cmpsb
dec
push
mov
les
cli
sbb
movsl
mov
ffreep
jns
mov
mov
jle
xor
mov
jmp
xchg
adc
test
mov
or
adc
popf
xor
mov
sbb
add
ja
mov
clc
or
nop
leave
xchg
popf
lea
pop
mov
mov
es
and
jno
lea
xchg
nop
sbb
cltd
aaa
push
sahf
inc
sbb
sub
or
or
pop
in
adc
std
xor
mov
and
test
or
xchg
sbb
es
push
cmpsb
leave
push
adc
push
xchg
and
and
jecxz
sbb
popf
and
xchg
mov
lret
pop
sti
inc
movsl
in
and
addl
adc
movsb
and
sub
icebp
mov
push
fwait
icebp
lret
ret
lods
sub
mov
nop
and
mov
xchg
jae
mov
lcall
shl
arpl
xchg
shl
mov
xchg
ljmp
or
cmpsb
add
or
in
loopne
add
push
and
sbb
and
push
pop
sbb
mov
lcall
add
lods
popf
fwait
sbb
xchg
jecxz
add
xchg
xchg
xchg
lods
out
dec
add
cltd
mov
and
and
cmp
or
jae
cltd
ret
or
repz
mov
adc
push
sbb
es
add
xchg
xchg
lods
imul
adc
or
fwait
inc
push
push
jmp
lcall
mov
push
test
les
mov
add
pop
inc
xor
mov
std
lret
mov
fisubl
adc
movsl
adc
pop
lahf
fcompl
lcall
cld
sbb
mov
and
adc
mov
pop
adc
cwtl
and
push
add
loopne
add
lock
sbb
adc
and
lock
add
and
add
adc
and
rorb
inc
popf
and
push
movsl
orl
push
mov
cli
push
mov
mov
lcall
mov
mov
xchg
lcall
inc
les
mov
xchg
int
and
jno
lock
je
adc
inc
sbb
aad
lcall
mov
xchg
add
sbb
mov
push
pop
and
lea
xor
in
mov
inc
push
add
loop
sahf
mov
aaa
mov
scas
loop
sahf
stos
sub
lds
mov
xchg
sbb
loope
lahf
lock
mov
aad
sbb
sbb
outsb
movsb
push
xlat
lcall
popa
popf
rorb
inc
sbb
mov
sbb
mov
mov
std
sti
mov
xchg
test
pop
cmpsl
ret
ss
movsb
or
xchg
cmpsb
mov
adc
xchg
call
add
sbb
xchg
fstpl
push
daa
adc
cwtl
pop
ficoms
enter
fmull
adc
daa
cmc
and
sbbb
sub
push
clc
sbb
pop
jbe
fcoml
jo
adc
jp
aad
xchg
pop
jb
test
push
cltd
shl
or
bound
and
push
aas
or
pop
xor
jp
lahf
mov
xor
out
bound
sti
lcall
push
clc
and
mov
mov
push
sbb
push
mov
adc
outsb
adc
cltd
rcrl
push
or
mov
aad
mov
movsb
xor
out
xchg
fcoml
or
xor
mov
pushf
shll
xchg
test
push
sbb
push
xchg
sti
or
xchg
into
out
movsb
sbb
test
fcoml
std
or
xor
out
enter
and
nop
fisubs
out
sbb
icebp
enter
in
enter
dec
sti
sbb
out
mov
cld
adc
add
add
das
decb
and
test
sbb
adc
mov
add
or
lcall
int3
and
push
popf
mov
push
cmp
es
and
cmpsb
insb
out
imul
outsl
testb
xchg
lods
sbb
sbb
and
mov
mov
addb
lahf
and
lret
and
sub
add
add
sbb
pop
xchg
and
loopne
mov
xchg
dec
mov
push
cli
ret
sbb
ret
xchg
jle
popf
pop
jle
sbb
mov
xchg
and
mov
jbe
or
imul
pop
sbb
pusha
sbb
and
loop
fisubs
or
pop
cmpsl
or
sbb
cmpsb
das
and
and
movsl
sti
push
xchg
lea
pop
movsb
xchg
mov
lcall
cli
and
ss
mov
into
xchg
or
sbb
xchg
cli
and
lds
or
aad
adc
add
add
sbb
and
ds
and
and
and
pop
lret
mov
lret
cmp
into
lahf
das
cmpsb
movb
popf
mov
sub
test
sahf
int
inc
or
cwtl
les
ficomps
add
lcall
push
or
jle
popf
or
add
pushf
dec
jns
pop
or
push
lcall
movsb
sahf
inc
mov
mov
sbb
push
loopne
cltd
cli
out
xchg
repnz
mov
sub
dec
cwtl
cli
sahf
lds
pop
dec
sbb
arpl
sub
and
and
pop
mov
aad
xchg
repnz
in
fstl
adc
push
lahf
mov
sar
mov
sbb
jbe
adc
pop
cwtl
popa
out
sahf
or
push
cmp
adc
movhps
push
dec
psubw
push
insb
into
adc
cmp
or
adc
pop
add
pop
pop
fcomps
cli
fs
fdivrp
mov
sbb
jge
and
inc
pop
js
sbb
adcb
cli
cltd
push
cmp
add
mov
mov
fidivrs
adc
cmp
pop
loop
cld
ficompl
pop
or
negl
js
mov
and
loopne
mov
sbb
sbb
std
push
outsb
cs
nop
arpl
mov
aaa
and
js
lods
stos
sbb
outsb
cli
fidivrl
cmp
nop
xchg
and
push
fisubs
sbb
jno
aam
cmp
add
push
cmc
mov
sbb
xor
mov
es
mov
and
pop
push
rcl
pop
sahf
mov
adc
add
dec
xchg
xchg
jo
xor
pop
call
inc
cli
jecxz
mov
mov
dec
shrl
mov
pop
or
mov
pop
push
adc
or
fistps
cmp
testl
and
cmp
sahf
cltd
xchg
ljmp
fmuls
add
adc
xorl
fldcw
adc
sbb
add
icebp
lds
scas
imul
xchg
fsubrs
aad
insb
sub
pop
sbb
mov
add
pop
cmp
sub
fwait
shr
lods
mov
and
jg
xchg
xchg
sbb
and
clc
jo
lcall
add
mov
jp
push
movl
bound
push
mov
lcall
and
pusha
arpl
popf
xor
xchg
sbb
loop
sahf
add
xchg
pop
notb
xchg
xchg
je
fidivrl
hlt
jne
add
cwtl
ds
stc
and
repz
mov
mov
vmovhpd
mov
leave
push
sbb
jp
and
sbb
push
es
stos
loope
xchg
negl
pushf
adc
loopne
or
adc
pop
rcl
fs
fwait
mov
sbb
fstpl
adc
or
jmp
es
pop
in
frstor
or
cwtl
jmp
and
out
inc
adc
jl
and
mov
rcrb
jns
repnz
and
js
data16
fimuls
movsl
mov
and
xor
scas
or
or
dec
shlb
frstor
es
ds
jecxz
adc
pop
arpl
pop
add
in
mov
pop
cmc
out
mov
fs
and
mov
clc
js
or
pop
mov
sahf
loopne
adc
adc
cwtl
out
or
cmp
and
mov
adc
cwtl
push
into
lahf
mov
xchg
jecxz
xchg
mov
sbb
lcall
dec
or
or
mov
add
repz
cmc
xchg
popf
sbb
jne
adc
nop
xor
adc
bound
cmp
sbb
call
xchg
aad
cmp
jmp
adc
cmp
xchg
adc
mov
pop
movhps
mov
add
jbe
pushf
sbb
lock
and
aam
idiv
jb
movsb
xchg
pushf
push
in
mov
adc
sub
enter
cltd
int3
xchg
roll
or
mov
sahf
or
xchg
cltd
pop
xchg
cli
arpl
mov
enter
in
cmp
add
dec
push
mov
mov
lcall
mov
hlt
add
inc
mov
xor
int
adc
lcall
enter
fdivr
add
ret
jge
xchg
ret
pop
xor
arpl
pushw
mov
mov
cs
es
and
enter
pop
js
mov
in
loopne
push
repz
movsb
jecxz
mov
lock
cmp
cwtl
fs
pop
notl
popf
hlt
and
and
xchg
in
popf
adc
cmp
add
push
push
mov
mov
xor
and
pop
sub
and
stc
adc
push
sti
mov
lock
pop
cmp
pusha
xchg
push
mov
popf
ss
push
movsb
and
cmpsb
in
movsb
sbb
add
xchg
mov
ret
ficomps
ret
fwait
rcrb
rol
std
mov
test
push
in
xchg
lcall
jecxz
sbb
mov
loop
or
mov
cwtl
mov
out
bound
popa
popf
sub
mov
decb
xchg
ficoml
mov
mov
mov
pop
sbb
cmp
xchg
add
push
hlt
xchg
rclb
adc
add
push
hlt
adc
adc
outsb
pushf
or
mov
nop
xchg
lods
ficoml
xchg
and
sbb
and
sbb
adc
sbb
fnstsw
pop
aam
pop
cli
out
repz
pop
into
in
fstpl
cmp
push
pop
sbb
mov
adc
ret
mov
inc
fidivl
and
add
into
fcompl
jp
adc
xchg
pop
mov
mov
pushf
inc
popa
lds
fldcw
shrl
or
sahf
or
add
mov
inc
push
ds
fwait
cmp
lea
cmp
mov
or
mov
adc
mov
cli
add
fstpl
or
insl
and
cwtl
xchg
pop
incb
stc
adc
pop
std
js
rcrb
arpl
inc
gs
sbb
push
push
and
add
test
notb
and
adc
data16
mov
pushf
jecxz
pop
nop
cmp
pop
add
cld
aaa
mov
push
add
xorb
pop
out
mov
fwait
insb
or
hlt
adc
fiaddl
cmp
xlat
xor
out
sbb
add
clc
adc
jae
pusha
clc
sbb
and
popa
pushf
pop
push
cmpsl
xchg
repnz
cwtl
sbb
lock
testl
pusha
dec
mov
int
mov
sahf
sbb
lret
push
mov
in
jmp
movsb
fnstcw
mov
mov
jo
and
cmp
add
pop
inc
sbb
nop
frstor
es
nop
fwait
pop
sub
loop
sbb
movsb
inc
daa
adc
lea
jle
jge
repz
out
ret
hlt
fists
fldenv
hlt
lahf
std
fcomps
cltd
jecxz
fwait
push
ret
fdiv
inc
in
mov
insl
pop
out
mov
es
mov
push
cwtl
xor
into
xchg
and
pop
adc
adc
or
int3
rorb
cli
in
loope
push
pop
cmpsb
test
sbb
les
sbb
movsl
sub
out
pop
push
adc
cmp
and
mov
sbb
adc
inc
dec
cmpsb
adc
pushf
add
sub
cmpsb
and
push
pop
lock
add
pop
rclb
sbb
cltd
push
xchg
mov
or
cld
and
mov
lea
push
lcall
daa
inc
xchg
mov
es
xor
push
xchg
or
pop
or
add
out
adc
pop
cmc
daa
rcrb
dec
jl
stc
mov
cmp
or
pop
dec
js
xchg
hlt
fsub
pushf
mov
sbb
add
cmp
pop
cld
add
pop
add
xchg
push
jmp
and
inc
xor
push
sahf
dec
mov
or
sub
jmp
div
jle
lahf
sbb
pop
pop
jns
pushf
inc
push
lret
sub
cmpsb
jae
and
sbb
daa
mov
movsl
xor
fidivrl
sbb
xor
in
dec
inc
cmp
sbb
scas
adc
mov
pop
aam
xlat
and
mov
pop
mov
xor
dec
sarl
sub
mov
sbb
pop
mov
xchg
and
es
sbb
es
js
mov
and
lahf
addb
fwait
xchg
sahf
rolb
sub
cld
test
movsl
repnz
and
inc
call
das
xchg
cltd
fwait
pop
mov
ss
cmc
push
subl
movsl
sub
out
mov
sbb
or
pop
aaa
add
and
push
sbb
sbb
ja
fidivl
adc
loope
mov
loopne
lret
rol
pop
lahf
push
popf
pop
or
push
xchg
mov
or
popf
cmp
scas
loop
add
pop
shll
or
cmp
out
mov
test
push
or
or
push
insb
cltd
es
out
mov
mov
add
loope
mov
pop
addl
call
cmp
inc
lcall
fadds
repnz
add
push
add
pop
xchg
or
adc
fisubl
mov
pop
pop
mov
dec
dec
out
loopne
cmp
or
dec
cmpsb
repz
mov
or
push
es
lods
mov
test
xchg
enter
je
adc
cwtl
sbbl
cwtl
jp
inc
cmp
or
and
push
gs
repnz
popa
fcompl
jecxz
sbb
fs
mov
xor
inc
and
leave
loop
pop
add
inc
pop
cwtl
andl
push
xchg
xchg
mov
dec
pop
and
mov
mov
fs
push
fadds
push
sbb
sbb
inc
call
lcall
mov
in
movsb
mov
sbb
add
mov
adc
mov
mov
test
and
pop
jp
daa
pop
fidivrl
add
or
movd
cli
loope
aaa
add
bound
fstps
and
ficoms
fwait
sbb
push
cmpsb
push
sahf
mov
stc
nop
sahf
pushf
sub
enter
loope
adc
int3
and
fwait
dec
mov
mov
jb
jle
movsb
fimuls
mov
and
mov
bndldx
fs
push
pop
sbb
movsl
inc
pop
fisubl
sbb
xchg
movsl
mov
pushf
or
and
mov
adc
push
daa
sbb
mov
dec
mov
sbb
pop
jno
repnz
lret
enter
lcall
or
pop
fs
pop
enter
or
cmp
xchg
xchg
test
adc
sbb
mov
movl
cmpsb
cmpsb
movsb
std
int
aad
fsubp
push
sub
fbld
jns
add
lcall
sbb
dec
jp
je
xchg
mov
push
bound
gs
sti
push
xor
cltd
mov
sbb
mov
mov
cmpsb
decb
popa
add
ljmp
shll
jge
mov
test
movsl
cmpsb
mov
and
and
and
nop
inc
mov
jmp
movsb
cmc
jge
repz
aad
add
jmp
mov
lds
jmp
movsb
hlt
fwait
pop
push
shlb
dec
xchg
pop
jno
hlt
popf
add
lret
push
and
and
and
adc
mov
fcomps
mov
push
mov
pop
and
mov
sbb
in
sbb
test
adc
inc
js
dec
xchg
push
out
jne
jle
outsb
or
fwait
stos
sbb
es
call
fnstenv
mov
push
add
mov
xchg
pop
mov
add
jmp
cltd
in
cwtl
gs
aam
in
sahf
fstl
ss
enter
lea
xchg
push
xchg
sbb
cmp
popf
stc
test
mov
mov
jle
dec
call
pop
xchg
movsl
repz
jo
push
sahf
adc
add
enter
push
fiadds
mov
mov
loope
and
popa
je
lahf
adc
sahf
adc
clc
jle
mov
xchg
shrl
xor
movsl
mov
shrb
into
jmp
loope
psubw
and
dec
pop
std
push
or
cmpsb
lret
add
pushf
sti
push
pop
leave
orl
mov
ss
jo
shlb
inc
andb
inc
push
fdivrl
or
imul
dec
push
es
dec
and
jo
xchg
xor
loopne
fmuls
ficomps
lock
add
jecxz
bswap
sbb
or
jmp
leave
push
jmp
sahf
adc
mov
cmpsl
mov
cli
inc
mov
cmp
cmp
gs
out
and
mov
and
daa
mov
add
sbb
or
and
adc
or
sbb
xchg
pop
mov
mov
lcall
pop
std
std
and
sbb
movsb
jnp
pop
call
push
add
pop
mov
ljmp
in
pop
clc
mov
ret
dec
xor
jae
pop
lock
mov
mov
dec
test
fidivrs
sbb
sub
mov
lds
int3
outsl
and
add
or
push
mov
xchg
cmp
frstor
dec
adc
neg
cmp
sti
shl
push
add
cld
sbb
mov
hlt
and
in
lahf
mov
cltd
mov
pop
rclb
icebp
and
jmp
or
pop
mov
pop
lods
pop
jle
dec
mov
xlat
sub
mov
or
lods
cmp
scas
and
xor
push
stc
orl
jge
or
mov
ja
inc
or
or
adc
in
push
mov
and
popf
fisubs
pop
int
sbbb
stos
mov
pop
in
es
rclb
in
xlat
repz
les
pop
and
fisubrs
sub
mov
and
lret
loop
push
out
jbe
jb
jne
loope
mov
mov
subb
pop
pop
lods
int
or
mov
pushf
popa
setge
imul
fucomip
dec
dec
push
pop
insb
sub
roll
xor
aaa
push
cltd
fcomp
popf
mov
sbb
mov
addl
mov
lock
xchg
js
mulb
sbb
cmp
sbb
ret
mov
push
sbb
addr16
mov
jge
bnd
push
xchg
test
call
add
addr16
inc
push
cli
in
das
enter
stos
adc
icebp
imull
test
enter
pop
icebp
xor
xor
lods
and
sahf
shl
int
movsl
mov
and
jmp
and
popf
out
push
mov
mov
pop
shlb
cwtl
add
and
and
mov
test
fists
popf
movsl
mov
clc
push
ja
xchg
cmp
adc
xchg
add
push
xchg
andl
adc
fiaddl
les
and
ret
and
rolb
jbe
xchg
addb
fsubr
popf
pop
sub
pop
adc
pop
inc
pushf
adc
dec
dec
aam
push
jecxz
and
es
fwait
cmp
push
and
sbb
dec
sbb
or
out
xchg
mov
sahf
mov
jo
mov
pop
movsl
lods
sbb
cwtl
jg
mov
roll
cmp
jg
in
and
add
and
pop
pusha
and
pop
notl
movsl
movsb
lret
hlt
fs
int
lcall
and
popf
cmpsb
xchg
pop
aad
pop
and
es
jp
dec
mov
and
mov
pop
lret
jb
add
xchg
and
shll
shlb
add
bound
add
out
out
sbb
inc
data16
sbb
and
mov
lahf
jge
imul
pop
adc
push
mov
push
movsb
jecxz
jno
adc
add
add
xchg
aad
sbb
cmp
pop
lock
inc
ficompl
es
xlat
and
add
xchg
jge
enter
pop
mov
pop
fs
orb
hlt
cmp
or
daa
cmp
push
ficomps
mov
jp
je
dec
and
fsubrl
adc
hlt
lock
inc
fwait
sbb
loop
movsb
pop
fisubs
mov
repnz
add
sbb
fisttpll
push
mov
cwtl
xor
xchg
or
sarl
and
sti
and
jns
xchg
sbb
iret
dec
jb
dec
in
jecxz
movsl
and
or
es
add
add
mov
movsl
mov
test
pop
and
sarb
aam
and
sbb
andb
loopne
movsl
popf
jbe
mov
fisubl
movsl
xchg
jbe
in
mov
pinsrw
adc
lods
rcr
shl
xor
xor
fsubl
adc
xchg
js
and
cmp
push
sbb
clc
jbe
lahf
in
jns
cltd
lea
aam
xchg
add
movsl
add
movb
fidivs
sbb
ficompl
movsb
push
and
fwait
and
inc
test
mov
pop
inc
js
pushf
test
jp
push
push
or
xchg
or
cmp
inc
cmp
dec
adc
in
adc
pop
sahf
mov
les
shll
add
pop
divl
pop
mov
add
in
or
fdivrs
or
in
jp
push
fwait
jecxz
pop
xor
and
cmp
and
pop
mov
pop
adc
es
fcomip
xchg
fld
mov
pop
cwtl
push
mov
pop
xchg
inc
pop
repz
and
adc
adc
mov
mov
je
xchg
and
fsubl
cld
add
test
pop
mov
cmp
jmp
mov
and
sbb
xchg
mov
lgs
and
lahf
repz
mov
mov
movq
aaa
xor
xor
add
cltd
xchg
scas
outsb
xor
movsl
insl
push
hlt
dec
stc
and
pop
sahf
xor
flds
popf
adc
mov
mov
mov
inc
sar
xor
and
outsb
daa
dec
sbb
xor
divl
inc
xchg
pop
scas
and
arpl
mov
inc
popf
insl
pop
add
loop
push
out
test
jne
mov
mov
pusha
fmull
out
aaa
movsl
and
sub
or
cmp
push
pop
sbb
mov
mull
test
test
in
lock
out
and
xor
or
pop
and
add
pop
push
mov
jmp
lea
loopne
and
arpl
jnp
xchg
mov
dec
mov
and
ljmp
lcall
xchg
add
rcrb
fcoml
and
push
repnz
cmp
sbb
pop
and
fidivl
or
mov
int3
ficoml
es
xlat
push
xchg
and
loopne
push
xchg
fistl
dec
adc
inc
and
es
hlt
cmp
jg
cmpsb
inc
add
loope
aas
push
xchg
hlt
and
sahf
mov
xchg
adc
mov
pop
push
dec
sbb
test
popa
fbstp
inc
inc
pop
inc
sbb
mov
push
int3
cmc
fcom
and
cltd
xor
cltd
fistps
es
adc
xchg
xor
add
ret
lahf
iret
movsl
inc
mov
sbb
cltd
ftst
cli
or
faddl
mov
add
clc
out
fsubs
and
js
adc
scas
push
rcrl
movsw
fdivp
cmp
sbb
out
std
xchg
test
les
xchg
outsl
sbb
fstps
sbb
dec
xchg
cmp
addl
mov
mov
sti
int
movsb
push
fwait
imul
test
inc
mov
xchg
les
push
enter
sbb
pop
sub
int3
fdivs
mov
add
pop
rcr
enter
mov
sahf
cmc
aam
push
xchg
mov
mov
push
adc
xchg
loope
cmp
adc
cmp
fsts
add
mov
mov
jl
and
mov
iret
movsb
test
add
and
push
push
mov
or
push
nop
and
sbb
sbbl
nop
push
and
xlat
andl
pop
sahf
and
pop
pop
je
adc
xlat
mov
and
sbb
es
xchg
call
mov
cmp
aam
pop
orl
inc
movsl
xchg
pushf
adc
add
sbbl
addb
push
in
loop
sbb
mov
sarb
negl
out
and
or
pop
pusha
int
mov
inc
and
and
add
add
cmp
and
adc
push
and
outsl
pop
int
lret
in
scas
pop
fdivp
and
in
out
sub
sbb
es
inc
mov
and
lcall
lret
fisubs
push
cltd
jns
lret
repnz
rcl
clc
sbb
loope
rol
push
cmp
mov
and
mov
mov
xchg
cmp
and
inc
jl
es
ficoms
pop
mov
and
nop
mov
inc
xor
cmp
jle
cmp
nop
loope
ret
and
emms
pop
cwtl
sbb
je
lcall
pop
cmp
xchg
hlt
and
adc
sahf
out
int
popf
es
mov
push
mov
imul
lods
sbbb
mov
lret
or
cmp
cmp
xchg
enter
xchg
push
notb
sbb
mov
pop
insb
or
push
sarb
imul
adc
inc
cmp
xchg
mov
dec
xchg
sbb
xchg
sbb
test
sbb
sbb
pop
mov
pop
pop
pop
aad
fstp
into
insl
jmp
and
aam
dec
cwtl
mov
in
and
cltd
mov
add
movsl
mov
dec
sbb
sbb
jb
repnz
adc
fsubs
and
pop
inc
fistpl
jbe
repnz
pop
jns
or
fstl
mov
xchg
incl
addb
xlat
add
scas
and
fstpl
and
push
or
popa
sbb
push
lods
dec
rcl
daa
or
movsb
add
sbb
test
adc
inc
pop
push
pop
sbb
sti
or
add
faddl
aam
add
loope
mov
lcall
sbb
fsubl
mov
cwtl
call
or
fidivs
mov
add
and
ljmp
mov
cli
jecxz
lahf
popf
and
and
adc
pop
dec
cmc
sbb
je
lcall
cld
mov
es
fdivrl
mov
dec
gs
jne
dec
nop
cmp
lahf
mov
lods
mov
pop
insl
push
mov
lods
mov
pop
insl
xlat
mov
in
xchg
or
push
pushf
pop
mov
cmp
cwtl
mov
movsl
push
movsb
mov
mov
push
repz
sbbl
movswl
into
mov
push
out
fdivrs
cld
jle
pop
enter
int3
fdivl
or
frstor
js
mov
leave
lds
ret
pushf
in
xchg
pop
xchg
fcoml
push
cld
push
xchg
cmp
movsb
les
dec
sbb
and
mov
movsb
add
movsb
das
jg
in
xlat
xchg
mov
mov
or
roll
out
and
xlat
pusha
fdivrl
and
cmp
and
push
xchg
lahf
sbb
mov
dec
pop
dec
xor
mov
sbb
xor
and
inc
sti
and
and
push
cmp
jbe
adc
xchg
out
push
enter
push
gs
sbb
mov
adc
adc
sbb
cmpsl
mov
xchg
xchg
xchg
xchg
bound
push
int
push
push
push
mov
mov
xchg
fstps
fmull
jno
cwtl
loop
adc
and
adc
pop
push
mov
xchg
inc
sti
mull
cltd
and
pop
and
arpl
lahf
adc
gs
and
mov
and
loop
mov
push
add
aaa
movsb
es
pop
fwait
sbb
jbe
into
push
xlat
and
cmpsb
jle
rcll
push
lock
xchg
jb
in
xchg
pop
fdiv
mov
pop
and
movsl
adc
out
xchg
sbb
outsb
into
and
movsl
mov
pop
mov
and
test
mov
pop
fldl
or
popf
adc
fdivl
movsb
pop
and
lcall
movsb
rorb
mov
xor
mov
nopl
cli
xchg
jno
fwait
in
xchg
sbb
push
xchg
shlb
mov
add
and
push
mov
inc
movsb
pop
or
rolb
hlt
call
call
arpl
hlt
jmp
loope
out
movsb
or
repz
test
cld
add
test
push
push
push
dec
adc
pushf
ficoms
pop
and
faddl
sti
push
pop
mov
xchg
and
jecxz
insl
es
pushf
cmp
int
pop
mov
and
push
xor
add
push
adc
cmp
fbld
jno
push
and
sbb
notl
jp
mov
and
jl
mov
push
cmp
xor
loop
mov
and
jb
add
in
je
xchg
fs
sbb
pop
outsl
aaa
and
xchg
mov
popf
push
push
movsl
test
adc
lcall
and
or
dec
adc
adc
add
and
sti
stos
pop
push
or
pop
jmp
push
or
in
sbb
mov
outsb
and
mov
jecxz
popf
jne
negl
cmp
mov
inc
push
push
pop
mov
sub
pop
add
loopne
cld
loope
cmp
add
jp
jns
and
xchg
add
and
pop
and
xlat
fdivr
adc
push
pushf
lret
and
es
adc
lcall
cmp
pop
cltd
mov
push
fwait
adc
xchg
fisubs
fwait
xor
leave
jge
das
push
fsubrs
in
arpl
loope
outsb
insb
js
aad
pushf
and
ljmp
jnp
xchg
or
rcll
mov
push
add
notl
pop
and
pop
or
mov
je
or
sbb
lret
cmp
out
mov
xchg
call
jmp
rcr
pop
sbb
add
movsl
mov
xchg
add
jecxz
add
std
xchg
mov
sbb
push
sti
sbb
mov
loope
cmpsb
xchg
jp
adc
pop
cmpsl
mov
or
popa
push
push
call
fdivrl
inc
ss
xor
or
inc
push
in
dec
xchg
testl
in
and
fcomp
or
fimull
lahf
idivw
xchg
push
fsubs
loop
adc
outsb
cmp
adc
int
inc
fwait
and
pop
push
stc
push
and
pushf
mov
es
pushf
or
aam
fcomp
out
mov
and
cwtl
stos
and
mov
call
loopne
mov
aad
sbb
movsb
fistpl
mov
jp
mov
dec
mov
xchg
in
pop
pop
je
or
nop
aaa
cmc
xchg
adc
mov
xor
imul
test
mov
pop
lods
or
cmp
std
mov
mov
or
in
fisubs
in
push
jle
add
lcall
es
jp
push
pop
jp
dec
push
mov
fwait
xchg
and
movsl
mov
xchg
pop
fwait
notl
and
jns
frstor
int
andb
ficomps
mov
jb
sbb
int3
xchg
cld
sbb
fsubl
gs
xchg
cmp
push
adc
imul
cli
or
inc
pop
and
xchg
xor
popf
es
pop
mov
sub
movsb
ja
sbb
fs
sub
xchg
adc
push
adc
xchg
std
mov
cmp
vmovups
rol
popf
push
push
mov
mov
adc
or
cltd
inc
lds
mov
xor
adc
push
sbb
pop
in
fcompl
push
in
lahf
sbb
ds
and
fsubs
dec
mov
gs
add
push
mov
pop
shlb
aad
fisubl
push
adc
inc
jne
dec
adc
xchg
into
pop
mov
and
fisubrs
lea
movsl
out
push
xorl
push
xchg
aas
cld
sbb
decl
sub
pop
cmp
mulb
lcall
mov
test
pop
sbb
ljmp
mov
mov
xchg
das
lock
gs
imul
push
cmp
sbb
cmp
es
loopne
add
and
shll
lcall
lcall
add
push
sbb
push
jbe
mov
mov
mov
movsb
mov
pop
aam
iret
in
cwtl
sub
pop
pop
ljmp
and
inc
fsubl
mov
mov
add
push
xchg
lret
gs
pusha
les
cwtl
mov
pop
mov
sub
jb
inc
and
mov
sub
repz
movsl
sbbl
adc
in
or
and
fwait
je
fistps
dec
and
sbb
aad
add
int
pop
fdiv
mov
jno
packsswb
js
sbb
pusha
xchg
xlat
es
ss
cmpsb
fs
in
cmp
pushf
push
sbb
movsl
jb
cld
xchg
pop
les
pop
pop
pop
mov
int
xchg
int
mov
jg
fstpl
xchg
fdiv
popf
push
jle
xchg
adc
andb
mull
cmp
sbb
fstl
mov
cwtl
rorl
lahf
push
mov
and
jnp
fmull
push
jno
clc
fwait
add
fldz
mov
push
mov
fcomps
fstps
lret
sbb
repnz
outsl
push
arpl
je
js
cltd
repz
mov
mov
popa
pushf
xchg
mov
and
mov
lahf
sub
sbb
js
xchg
mov
pop
jb
mov
out
pop
pushf
mov
cmc
add
xchg
sahf
lcall
mov
add
sbb
cmpsb
xchg
or
nopl
cmpsb
test
adc
xchg
cli
mov
mov
mov
dec
fsubl
rcll
lret
jp
push
pop
cmp
ja
xor
fdivl
pop
pop
and
pop
and
cmpsb
and
pop
dec
movsb
adc
fistps
pushf
jbe
cmp
iret
in
notb
hlt
add
movsb
adc
sbb
push
adc
or
and
dec
mov
bound
or
in
movsl
mov
divl
pop
push
loopne
pop
mov
push
idivb
pop
pandn
gs
adc
nop
push
or
and
and
dec
hlt
fisttpll
cmpsb
dec
adc
cmp
xchg
movsl
xchg
mov
and
inc
mov
aad
adc
xchg
sbb
xor
cld
cmpxchg
call
and
jne
push
mov
dec
imul
add
mov
shlb
push
outsl
fcomps
sbb
xchg
out
and
pop
fstl
fisubl
xchg
pop
sbb
push
shrl
mov
pop
popa
xchg
mov
fcomps
cltd
xchg
jb
fisubs
ficoms
pop
and
pop
xchg
jl
clc
jmp
gs
pop
fwait
cmp
mov
cmovne
mov
int
sbb
ret
jns
outsl
aaa
fisubrs
push
rclb
mov
nop
adc
mov
sbb
lods
or
pop
inc
xchg
dec
pop
and
cmc
xchg
add
and
cmp
mov
lcall
xor
and
out
mov
mov
xchg
nop
mov
rcll
fistps
rcl
fidivrl
stos
rorb
mov
and
or
les
cltd
rcrb
and
cmp
push
xchg
lock
pop
cmp
xchg
fs
adc
test
add
push
lahf
inc
and
jecxz
in
mov
cs
pusha
mov
mov
xchg
sbb
mov
fwait
sbb
sbb
xor
arpl
sti
pop
xchg
dec
andl
in
cltd
push
pushf
bound
dec
in
cmp
enter
js
or
notl
and
and
adc
iret
mov
fdivl
push
fst
adc
adc
cmp
sbb
sbb
mov
add
popa
nop
push
jecxz
mulb
fnstcw
pushf
popa
mov
dec
add
in
and
mov
stc
sahf
sbbb
lcall
outsb
adc
stc
or
sbb
and
cmp
xor
movsl
mov
xlat
dec
add
fistpl
test
addr16
mov
jo
xchg
movsl
pop
mov
rorb
xchg
movsb
in
out
sbb
pop
imul
or
push
push
in
pop
and
repz
cmp
dec
adc
or
mov
and
dec
mov
lcall
xchg
pushf
jae
fidivs
movsb
jecxz
mov
lea
cmp
notl
cmp
xor
shl
mov
rcrb
fists
std
cmp
sti
push
pop
div
fidivrl
pushf
add
cltd
sarl
sbb
fisubl
and
es
xchg
shr
mov
mov
sbb
adc
cmp
mov
push
mov
fs
popf
js
and
mov
aad
data16
inc
mov
mov
loop
push
and
fwait
mov
push
int
mov
pop
enter
fwait
dec
jae
push
or
adc
test
mov
enter
push
movsb
cmp
jmp
mov
int
nop
push
xor
jns
mov
cmp
jmp
or
std
jl
or
pop
frstor
pushf
sbb
jno
mov
jle
jae
aas
mov
mov
pusha
sbb
dec
mov
xlat
int
shll
mov
push
push
cmpsl
jns
fsubl
cmp
and
pop
sbb
and
xchg
push
loope,pt
aad
mov
jp
pop
pushf
push
pop
or
clc
gs
xchg
rcrl
or
or
out
dec
cmp
mov
aad
std
mov
incb
inc
mov
jnp
xchg
and
push
jbe
test
push
outsb
data16
in
and
jle
mov
jno
outsb
lahf
add
pop
xchg
jo
dec
js
mov
movsb
loopne
and
loopne
xor
out
mov
into
rcrb
aaa
pop
js
lods
cld
jmp
fldl
rolb
addl
pop
push
adc
leave
ret
and
lea
xchg
scas
fldenv
loopne
andb
les
pushf
and
inc
inc
and
fisubs
jp
sbb
arpl
out
sub
or
mov
pop
xchg
icebp
add
and
mov
mov
push
sub
movsb
sarl
and
and
pushw
xchg
movsb
or
popf
add
pop
loop
cmp
add
push
mov
cmp
cs
push
sub
jle
add
std
xlat
stc
test
add
jp
and
mov
add
outsl
lds
jle
jae
in
iret
inc
inc
add
adc
repnz
fisttps
mov
arpl
or
aad
out
mov
sbbl
testb
movsl
cmpsl
testb
cli
ret
and
gs
mov
sbb
xlat
out
and
mov
cmpb
pop
out
rcrl
sbb
jecxz
adc
inc
mov
idivl
pop
mov
dec
sub
adc
adc
les
fldcw
aas
mov
pop
rol
aam
lret
mov
adc
stos
shlb
push
movsb
es
test
or
inc
lret
lahf
movsl
xchg
decb
jle
pandn
push
and
adc
mov
or
jne
popf
ja
adc
xchg
sar
ja
inc
add
or
dec
adc
movsl
add
int
mov
mov
jns
in
ja
movsl
adcl
fidivrl
mov
mov
cmc
sbb
add
adc
adc
inc
pop
jnp
adc
montmul
cmpsb
inc
lds
movsl
popf
ljmp
aad
in
xchg
jmp
and
inc
adc
insb
add
sbb
movb
lea
xor
xchg
xadd
and
mov
fidivs
movsb
add
mov
and
and
and
cmpsb
aad
in
cpuid
clc
aad
cmp
sbb
aad
lcall
mov
frstor
cmc
mov
popa
adc
movsb
movsl
mov
inc
mov
ficoms
push
arpl
repnz
mov
sbb
mov
jno
clc
adc
ficoms
adc
inc
shr
hlt
out
shlb
pusha
repz
sbb
ljmp
inc
out
jecxz
lods
pop
mov
push
xchg
and
ds
loop
mov
stos
mov
mov
push
jns
inc
loop
sbb
mov
addl
dec
pop
sbb
push
adc
inc
pop
mov
int3
ss
arpl
sbb
sub
add
movsb
popf
or
and
sbb
js
add
sbb
shl
xchg
lods
adc
loope
or
mov
sbb
sbb
add
xchg
push
in
rorb
sbb
pop
inc
mov
sahf
and
or
or
inc
int3
setge
xchg
or
negb
fcompl
adc
and
add
pop
push
add
mov
jbe
in
sbb
sahf
pop
movsl
add
iret
and
cmp
cwtl
and
dec
xchg
and
add
mov
or
adc
push
mov
push
sub
ret
or
cmp
or
push
add
loopne
push
les
add
fcom
push
and
andl
pop
daa
test
lcall
pusha
popa
sub
data16
and
and
movl
pop
outsl
out
stos
xor
xor
addl
in
mov
scas
sbb
fimuls
shl
icebp
hlt
add
mov
outsb
jno
sbb
mov
int3
sbbb
rcr
lock
cmp
ds
cmp
nop
pop
fnstenv
xchg
int3
sub
fwait
sbb
jb
fidivs
jnp
ja
pop
or
sbb
paddb
mov
sub
jmp
adc
xabort
nop
push
jns
xor
in
pop
lret
xor
movl
lret
imul
jbe
mov
and
pop
or
or
push
sbb
push
test
jp
imul
xchg
fldenv
test
or
lds
in
adc
adc
sub
clc
adc
xchg
adc
cmpsl
or
mov
movsl
jnp
mov
pop
stos
inc
jae
sbb
lret
repnz
sub
test
dec
jp
fistl
pop
daa
insl
pop
pop
add
dec
scas
and
cmp
mov
repz
jp
mov
adc
sbb
mov
mov
repnz
pop
mov
gs
ret
nop
cmc
icebp
mov
xchg
adc
sahf
iret
repz
js
sub
pop
add
push
in
push
clc
mov
in
and
pop
pop
jno
outsb
or
and
bound
leave
mov
pop
jae
add
sahf
daa
xchg
mov
and
movl
imulb
inc
xor
in
xlat
jge
stos
gs
les
fcoml
jns
push
jo
push
movb
ljmp
pop
sbb
lret
mov
clc
and
mov
xlat
sbb
inc
sub
test
addl
sbb
push
clc
out
insb
stos
mov
int
cmpsb
sbb
add
jle
int3
sub
add
xchg
jbe
mov
mov
clc
cmp
lcall
loope
push
add
xchg
outsl
mov
call
push
cmpsl
fistpl
testl
jge
cmp
in
out
pop
insb
xchg
and
call
adc
jb
outsb
rclb
gs
mov
push
cmp
les
jecxz
cli
nop
mov
pop
push
jns
nop
and
aad
out
xor
lahf
adc
cmc
andb
adc
out
push
pop
cmp
cmc
outsb
std
push
cmp
pop
lahf
add
pop
lahf
adc
ss
shrb
adc
mov
ds
mov
and
push
push
push
cmpsb
mov
fs
mov
add
bound
cld
cmp
lds
int3
inc
movsl
pop
in
push
jae
add
push
es
pop
fisttps
lods
jo
or
pop
out
fwait
shll
ja
scas
mov
cmpsb
pop
in
adc
or
ret
cmpsb
sub
int
ret
add
sub
jae
jmp
ret
es
test
imul
les
jecxz
lock
cmpsl
popf
andb
outsb
arpl
addb
outsl
add
and
rcrl
aam
movsl
xor
es
pop
stos
pop
adc
add
mov
shr
lds
in
in
cmpsl
aad
pop
and
lods
mov
testl
cli
das
cmp
lret
cmpsb
out
imul
cmp
or
orl
and
jg
cmp
mov
inc
xor
test
mov
fimuls
aaa
pop
bound
ss
insl
daa
lahf
out
in
fcmovnb
dec
loop
adcb
dec
sbb
test
inc
pusha
daa
sahf
push
loopne
movsb
pop
push
sub
pop
pop
sbb
in
les
ljmp
lcall
pop
xchg
push
pop
test
adcl
dec
out
xchg
mov
scas
sbb
aam
cmpsb
cmp
push
lods
and
daa
xor
les
or
push
lods
stos
sub
fsubs
fwait
idiv
in
pop
xor
lods
dec
ret
test
fmuls
mov
es
mov
sbbb
push
or
push
sbb
and
push
adc
push
mov
mov
jne
loopne
add
test
mov
or
rorl
adc
mov
sbb
testb
adc
inc
cmpsb
inc
xchg
mov
ja
fildll
xchg
call
fdivrl
cmp
sbb
movsl
pop
out
add
pop
out
pop
cmpsb
cmpl
jl
fwait
cmp
in
cmc
fninit
ffree
inc
xchg
cmpsb
mov
lahf
pop
pop
loop
mov
bound
and
lods
popa
mov
or
sbb
or
lret
out
jecxz
and
sub
inc
and
mov
mov
sahf
in
and
dec
fiadds
loop
das
pop
and
add
mov
inc
sbb
or
outsl
jecxz
das
in
inc
pop
popl
or
scas
or
int
aas
mov
inc
add
pusha
push
out
or
fs
inc
and
cmpsb
ds
xchg
pop
loopne
addb
push
add
push
push
xchg
jle
mov
adc
test
mov
and
or
lock
or
fisttps
cmpsb
loope
into
les
insl
fwait
add
sbb
dec
lret
xchg
add
push
movsl
bound
aas
cs
adc
scas
and
lahf
cmp
cmpb
inc
and
pop
sub
cmp
dec
hlt
addb
mov
sbb
xchg
stos
inc
mov
das
fidivrs
add
loop,pt
xchg
cmp
faddp
push
data16
mov
push
sahf
addl
jecxz
ret
push
loop
add
add
test
jo
mov
out
dec
mov
enter
xor
xchg
xchg
lods
stos
sbb
inc
push
and
add
leave
mov
in
out
or
es
loop
lahf
test
dec
scas
or
mov
test
mov
xchg
ret
push
jmp
jecxz
inc
fadds
inc
arpl
nop
ret
es
push
inc
rorb
dec
sub
int3
call
jae
sub
pop
sub
in
in
adc
cmc
cmpsb
push
loope
fstpl
jnp
or
mov
mov
call
fucom
cltd
xchg
mov
lea
in
or
xor
repnz
lods
pop
insl
add
xor
push
mov
or
cmp
mov
pushf
out
data16
xor
sub
sbb
inc
popf
fimuls
pushf
push
ret
shl
cmp
fiaddl
out
mov
repnz
jb
sub
outsl
push
sbb
add
mov
shrd
pop
movsl
es
add
repnz
mov
shl
sbb
push
mov
and
push
xor
outsb
push
rol
mul
es
inc
inc
pop
fdivrl
popa
inc
inc
les
xchg
push
icebp
popa
sahf
cmpsb
inc
and
frstor
push
in
and
mov
inc
add
lds
adc
push
cmpsb
xor
icebp
jo
lds
ret
in
add
xchg
pushf
jo
sbb
mov
popa
dec
and
mov
add
es
test
and
mov
lcall
xor
mov
jno
loope
fisubrl
adc
vunpcklps
fisttpll
cmpsb
jno
or
mov
rol
aaa
mov
cmpsb
sbb
popl
mov
cmp
add
sub
dec
js
mov
inc
mov
xor
test
outsl
lods
icebp
sbb
mov
pushf
jb
rcrb
xchg
mov
inc
into
js
sti
inc
iret
xorl
cmpsb
pop
inc
sbb
inc
pop
dec
mov
movsb
mov
jae
lret
fstpt
loop
je
movsb
mov
fsub
rcrl
add
movb
add
mov
pop
adc
arpl
mov
cmc
push
xchg
loop
mov
jg
int
shll
pop
in
mov
sub
movsb
inc
into
sbbl
mov
mov
lret
push
movsl
in
push
mov
cmpsb
in
out
test
lcall
scas
outsb
lret
cmpsb
pop
fsubrl
add
sub
cld
es
fisttpll
arpl
mov
pop
mov
add
jg
out
add
xchg
mov
dec
fstpt
jb
add
std
data16
in
test
fwait
fs
lahf
dec
sti
jmp
out
lcall
push
dec
and
in
xchg
cmp
dec
cs
in
out
xchg
inc
cwtl
fistpl
mov
sbb
js
cmp
clc
shlb
cmp
jge
add
scas
pop
pop
insb
sbb
sbb
xor
fwait
pop
sbb
andb
and
mov
jns
fldl
mov
push
jmp
mov
or
movsl
in
inc
data16
out
mov
and
movsb
fs
and
test
movsl
inc
pop
inc
and
dec
in
and
jle
push
stc
cmpsb
pop
add
sbb
cmp
in
es
aaa
mov
out
adc
pop
lret
xchg
push
xchg
adc
add
and
dec
add
sub
in
add
pop
data16
cld
cli
inc
loop
movsb
pop
loopne
hlt
bnd
pop
out
test
in
or
xlat
fs
das
add
andb
and
loope
andb
and
fistpll
fs
std
fldl
insl
jl
cmp
sti
pop
fstpt
sbb
fsts
js
cmp
not
mov
xchg
jbe
ss
cmc
aad
pop
mov
je
xor
repz
shlb
adc
pop
rcl
mov
jo
xor
pop
out
iret
into
scas
mov
cs
push
in
int
lods
mov
sub
jmp
ljmp
sub
jmp
test
push
xchg
or
sub
lret
ds
add
dec
mov
roll
or
cmp
sbb
sub
data16
cld
inc
cli
and
movsb
fmulp
and
add
test
mov
stos
push
lret
jbe
call
sub
aam
jl
inc
adc
inc
or
pop
pop
add
outsb
popa
xor
pop
ror
push
adc
pop
or
jg
xor
jg
dec
pop
lret
or
fmul
pop
dec
int
adc
inc
orl
dec
pop
call
ds
sahf
push
rcrl
cmp
insb
mov
cltd
pop
addb
fdivrs
mov
mov
insb
test
decb
and
jmp
rorl
or
ret
push
cmp
or
dec
cmc
gs
adc
adc
dec
and
dec
cli
sub
nop
cmp
pop
hlt
sbb
jb
fstl
jbe
push
adc
add
or
mov
mov
insb
sbb
dec
pop
xchg
repnz
mov
in
xchg
pop
push
dec
cmp
scas
mov
jo
xor
gs
or
ret
inc
inc
xchg
out
idivl
mov
push
lods
xchg
arpl
inc
lret
sbbl
nop
jg
mov
ss
push
movsb
inc
addr16
rclb
fistl
pop
add
mov
in
or
push
icebp
ja
inc
mov
push
into
lods
sbb
shrl
jp
fs
dec
lret
cmpsb
add
adc
mov
cwtl
lahf
push
or
cltd
pop
or
test
jnp
dec
mov
mov
call
dec
ja
dec
out
jo
jno
inc
movsb
repz
or
in
pop
sarb
bound
pop
cmp
pusha
xlat
sti
or
leave
cmp
stos
pop
sbb
scas
xor
jne
arpl
dec
stc
sbb
pusha
pop
or
cmp
xor
data16
mov
addb
movb
cmp
pop
inc
cmp
pop
call
imul
and
xlat
sub
sub
nop
rolb
shl
pop
lahf
sbb
hlt
dec
sub
mov
xchg
ret
aaa
mov
fbstp
cmp
or
jecxz
jae
xor
push
pop
mov
outsb
mov
hlt
ds
notl
repz
lea
pop
dec
mov
fadds
test
dec
test
and
jae
push
mov
gs
pop
inc
stc
call
cltd
push
mov
incl
in
and
dec
mov
dec
sbb
mov
in
sub
or
stos
mov
pusha
jno
jg
jae
stc
cmpl
push
notl
out
pop
ss
jp
xchg
adc
pop
lret
into
or
stc
aas
pop
orl
jnp
mov
and
mov
pop
xchg
mov
inc
lcall
lret
pop
test
mov
scas
xchg
rorb
test
inc
mov
jns
pop
or
popa
push
icebp
std
sbbl
loopne
jmp
mov
mov
aam
xchg
pop
popf
or
mov
push
inc
scas
sub
xor
pop
arpl
lods
nop
cmp
xchg
lahf
cmp
mov
push
push
push
lea
pop
cmc
xor
add
fadds
cmp
outsb
jecxz
scas
sub
xlat
mov
pop
ja
mov
pop
push
xchg
nop
ret
jmp
lock
shrl
or
les
xorl
and
fwait
lock
mov
stos
pop
mov
or
adc
jle
notl
adc
pop
popf
sub
in
cmp
cmpsb
pop
cmp
mov
add
mov
out
inc
aaa
mov
js
sbb
or
stc
fwait
pop
dec
test
adc
leave
pop
inc
cmp
jg
test
mov
push
cld
roll
pop
iret
and
jbe
lods
dec
cmp
cmp
ljmp
pop
inc
ret
sub
jp,pt
mov
sbb
dec
sub
lods
lahf
popa
mov
rorl
push
mov
pop
mov
push
inc
pop
mov
cmp
sbb
in
test
rorb
test
jns
mov
sbb
jbe
cmpsl
and
mov
scas
add
rcrl
xchg
test
pop
and
fbld
inc
into
cmp
lret
scas
cmp
mov
lret
and
dec
into
imul
sbb
and
rcl
lret
jle
sti
sub
pop
loopne
inc
mov
dec
stc
or
lret
mov
push
pop
emms
cmp
xchg
cmp
cmp
xor
incb
or
xchg
aam
in
xchg
pop
xchg
adc
jmp
mov
xchg
test
mov
aad
sbbb
test
inc
mov
sub
ja
cmpsl
stc
push
lds
xor
out
sub
sbb
jle
int3
loope
mov
jae
roll
out
jecxz
xchg
das
cmp
movsl
push
sub
mov
stos
mov
pop
mov
pusha
scas
xor
and
and
push
cmp
mov
popf
dec
into
imul
mov
sbb
cmp
lods
pushf
call
inc
lret
test
mov
sub
dec
mov
sarl
xor
pop
jmp
add
addl
fisubl
xor
jmp
dec
pop
out
lods
push
pop
test
sti
testl
loope
fildl
pop
push
mov
aam
ds
mov
cmpb
xchg
mov
and
stos
ja
into
adc
sub
push
test
sub
xchg
cld
mov
lret
jle
pop
mov
aas
movsb
and
es
ffree
push
xor
lret
push
sub
or
pop
pop
lahf
rcll
xor
mov
pop
jmp
fwait
sbb
cli
and
mov
xlat
pop
pop
aam
mov
xchg
and
call
lahf
pop
jmp
jg
ret
out
out
les
outsb
inc
test
pop
das
or
mov
cmpl
scas
ljmp
inc
pop
jae
adc
and
out
jno
iret
fwait
xor
leave
rdpmc
fcmovnu
addl
mov
call
outsl
fcompl
popa
adc
mov
xchg
pop
add
lea
xor
fs
pop
dec
loopne
mov
test
ljmp
sar
mov
stos
std
xor
sub
aaa
pop
and
mov
xor
icebp
xorb
xchg
pop
mov
fwait
sbb
into
mov
iret
lock
fsubr
push
adc
ret
mov
lcall
jmp
arpl
in
in
pop
cld
sti
movsl
and
aad
popf
cmpsb
sbb
shl
cmpsb
out
daa
jmp
mov
and
or
movsb
jnp
fs
and
inc
xchg
cmp
ficoml
xchg
pop
and
test
in
push
and
movsl
xchg
fisubs
inc
out
and
pop
lcall
testb
outsl
div
popf
lret
in
xor
sbb
fdivrs
mov
stos
inc
daa
or
hlt
mov
adc
xor
push
xor
ljmp
fsub
push
pop
mov
add
adc
ljmp
fdivrl
insb
xorb
add
in
and
add
mov
and
pop
pop
es
es
xchg
faddl
inc
cmp
cld
pop
stos
ret
aaa
xchg
sbb
hlt
sbb
add
cmp
inc
in
daa
push
xchg
icebp
xor
int
ret
sbb
out
push
and
inc
mov
pop
ret
or
pop
movsb
pop
cmpsb
sub
movsl
lcall
and
cld
xchg
push
xchg
add
test
es
call
data16
mov
lcall
and
mov
sahf
lret
in
inc
cmp
pusha
movsb
daa
ret
aaa
xchg
pop
xchg
push
fiadds
add
in
mov
or
movsb
in
shl
loop
and
xlat
dec
push
sbb
jl
xor
into
test
arpl
mov
outsl
adc
shll
andb
add
lods
scas
fwait
and
inc
mov
sti
fisubs
lcall
bound
ret
jge
fs
fstl
inc
xchg
fiadds
sti
adc
fisubs
adc
and
sti
ds
hlt
es
mov
ret
pop
add
mov
clc
mov
or
add
addl
push
arpl
arpl
clc
inc
inc
push
inc
jge
in
sub
push
lods
dec
sub
lock
xchg
adc
add
aad
sti
inc
scas
pop
xor
ficomps
push
and
xchg
inc
es
push
or
adc
lods
fs
jle
xor
outsl
or
and
adc
lcall
into
imulb
scas
pmulhw
lahf
scas
cmpsb
dec
in
shr
rcrb
movsl
inc
add
lcall
jb
out
mov
repz
movsl
inc
jne
in
call
loopne
movsl
nop
test
add
movsl
add
movsl
add
out
out
jmp
movsl
mov
movsl
ret
inc
add
cmpsb
addl
lds
cmp
adc
arpl
push
enter
ret
push
push
hlt
repnz
das
cld
and
add
out
pop
es
call
mov
aaa
xchg
cmp
fiadds
stos
mov
gs
add
testb
sti
arpl
in
push
int
push
loope
inc
sbb
pop
enter
ret
mov
cld
gs
mov
test
test
loope
loope
mov
jle
popf
push
in
inc
lahf
sti
addr16
frstor
negb
add
add
add
and
inc
add
xchg
push
xchg
xchg
popa
je
iret
pop
mov
mov
sub
dec
repz
int
sub
movsb
xchg
and
cmc
and
adc
imul
or
push
in
loop
add
in
pop
cmp
mov
inc
fiaddl
inc
data16
add
inc
in
sahf
mov
imul
sti
ret
dec
lock
int3
pop
fcomps
lds
into
dec
mov
out
cmpsb
inc
std
cmpsl
or
or
inc
xchg
lret
sti
cmpsb
pop
inc
inc
in
xor
add
insb
or
pop
xor
stos
imul
das
xchg
mov
pop
inc
dec
jae
jge
pop
cmp
mov
pusha
int3
dec
and
cmp
push
aam
pop
mov
jl
test
xor
sbb
and
mov
aaa
sti
call
pop
lcall
pop
orb
lds
mov
xor
aad
into
pop
inc
or
scas
test
add
sahf
std
popf
adc
pop
jns
mov
enter
pop
sub
inc
mov
mov
jp
cmp
popa
cwtl
jbe
orb
popl
pop
or
push
les
mov
jg
dec
xor
sbb
mov
mov
cmpsl
rcrl
dec
mov
pop
ss
stc
lret
and
fisttpl
icebp
fld
jo
repz
push
xchg
sahf
inc
inc
cmc
imul
dec
pop
sub
push
cmpsl
pop
repz
sarl
jbe
cmp
mov
pop
inc
or
lods
cwtl
cmpsb
insl
mov
cwtl
int3
insb
pop
es
outsl
xchg
std
mov
das
mov
mov
jle
push
movsb
jp
and
or
pop
insb
stos
jg
stos
mov
or
push
pop
lock
bound
jns
popf
insb
jo
stos
mov
jle
subl
das
lret
out
xor
ret
xor
pop
sub
fmul
gs
jo
pop
cmpl
out
mov
popl
mov
jmp
jno
jp
xchg
xchg
and
pop
movsl
push
idivb
fwait
inc
out
xor
mov
ret
and
push
ja
pop
fcoml
jge
lret
imul
adc
adc
sti
inc
push
mov
pop
icebp
cmp
xor
sub
aad
mov
popa
cmp
lods
out
or
pop
mov
sub
dec
mov
add
cmp
jnp
mov
hlt
ss
mov
std
mov
pop
or
dec
xchg
sahf
push
fwait
jb
add
lret
loop
pusha
mov
xor
xor
lock
add
pop
inc
dec
stc
cli
mov
loop
add
hlt
pop
push
arpl
xchg
fidivrs
cmp
hlt
mov
fdiv
outsl
jle
scas
and
outsl
outsb
ljmp
mov
loop
sahf
and
ljmp
ja
jbe
in
test
out
addr16
lods
pop
call
or
jb
or
aam
cli
mov
lcall
mov
pop
leave
mulb
movsl
adcb
ret
fs
push
xchg
addb
add
and
sub
jg
into
jl
mov
inc
xchg
fwait
push
popa
jle
out
enter
add
shrl
jecxz
test
vshufps
loop
mov
xchg
lock
cmp
ss
xor
and
aad
cmp
cmpsb
inc
push
cmpsb
inc
or
int3
es
jecxz
mov
jecxz
cmp
xchg
repz
lret
xchg
cmp
mov
mov
mov
loopne
mov
js
fbld
inc
outsl
in
pop
mov
mov
mov
mov
sahf
add
and
add
lgs
mov
add
pop
mov
int
loopne
iret
lcall
fcoms
sub
sbb
push
loopne
sbbb
mov
pop
push
add
jecxz
stos
push
pop
pop
hlt
insb
mov
sbb
and
dec
sub
inc
stos
stos
inc
xchg
add
insb
fsubs
add
sarl
out
sub
or
insb
jl
or
testl
popa
clc
cmpb
ljmp
push
dec
xor
add
mov
stc
jnp
push
jb
pop
lcall
add
call
and
sbb
out
ljmp
inc
mov
sbb
mov
inc
and
or
and
sbb
mov
cmp
enter
lret
fs
cmpsb
lods
fwait
adc
or
mov
push
out
adc
sbb
and
inc
sub
or
adc
xor
or
movsb
xor
add
xchg
pop
jbe
jo
adc
lds
es
xchg
mov
adc
and
sub
mov
shl
int3
js
and
sahf
mov
cld
pop
arpl
movsb
sahf
imul
adc
stc
mov
pop
jg
xchg
mov
cmp
gs
add
cmpsb
mov
movsb
divb
data16
mov
ret
push
cli
push
and
xchg
mov
test
adc
cld
in
loope
xor
int3
into
add
mov
xor
inc
in
push
or
inc
test
rcll
stc
sub
inc
cld
mov
and
sahf
xchg
leave
stc
filds
or
pop
dec
in
or
ret
push
xchg
cmp
rcrb
jle
ret
jb
add
pop
jmp
cmpsb
ucomiss
dec
sbb
jo
mov
xchg
xor
dec
shlb
dec
movsl
out
cs
movsl
inc
push
and
fisttpll
and
xor
xchg
leave
xchg
and
in
roll
cmc
mov
inc
clc
push
in
mov
rclb
add
pop
sbb
fisubl
loope
pop
adcb
imul
cwtl
pop
xor
dec
pop
js
rolb
or
lock
adc
jmp
pop
lret
add
mov
rcrb
inc
cwtl
fs
fiadds
or
bound
bound
clc
andb
xor
repnz
mov
or
imul
fidivrs
mov
aam
mov
xchg
xchg
dec
mov
sbb
xchg
hlt
mov
mov
jge
xor
xor
add
into
enter
filds
push
cmc
cmp
mov
movl
inc
data16
jnp
insb
ja
xor
in
xchg
sbb
xchg
add
mov
and
mov
in
sbb
cmp
bound
lods
repz
inc
popa
mov
mov
inc
mov
ja
inc
es
lcallw
pop
enter
adc
push
pop
pushf
mov
inc
xchg
ja
imul
inc
cmpsl
popa
xor
mov
enter
mov
dec
or
ja
mov
dec
push
add
push
xor
out
clc
cmp
lret
aaa
inc
sti
sbbl
mov
fwait
sbb
push
pop
add
pop
shlb
or
nop
je
sbb
int3
mov
xchg
sbb
xorl
cmc
es
mov
ja
mov
sti
es
rorl
mov
sub
xor
popf
pop
gs
xor
sub
xor
jge
in
jmp
xchg
add
lret
pop
gs
mov
mov
and
inc
cmpsl
xchg
mov
ss
test
testl
nop
pop
shrb
and
sbb
mov
add
in
add
mov
loop
fildl
sti
adc
stc
aam
outsl
jo
add
xor
sahf
fs
shrl
bound
ror
test
ret
movsb
pop
sub
lea
mov
add
dec
rolb
push
aas
xor
push
pop
es
inc
gs
in
adc
cmpl
sub
mov
pop
sub
cmp
out
jnp
fs
rclb
add
add
cmc
and
mov
add
data16
shlb
pop
andb
data16
incl
add
divb
repz
lret
lahf
daa
add
xor
push
sub
mov
repnz
and
push
and
push
lcall
or
insl
cld
adc
pop
push
mov
jae
sub
andb
pop
or
add
vcmppd
or
or
add
sti
and
push
add
cmpsl
add
inc
fisubl
aaa
je
mov
mov
mov
xchg
js
fstpl
movsl
jge
adc
test
ds
sub
and
dec
shll
jecxz
and
mov
arpl
inc
mov
fdivs
in
xchg
xchg
sbb
push
lds
xchg
loop
fnstsw
nop
and
inc
fwait
lods
stc
std
lahf
mov
in
and
out
sbb
pop
mov
sub
aaa
es
in
sub
xchg
sub
aaa
call
adc
cwtl
ror
cld
sub
loope
cmp
loope
lcall
insl
dec
ret
and
fisubs
mov
mov
or
sahf
test
sub
in
xchg
and
jl
sub
push
and
popa
sub
in
xor
xchg
inc
push
cmp
stc
js
jae
es
ljmp
push
fiaddl
les
aas
mov
mov
cmp
frstor
jmp
sbb
fwait
pop
in
xchg
sbb
ss
or
pop
push
adc
lock
fistps
aaa
pop
mov
leave
sub
outsb
adc
xchg
repnz
inc
add
loopne
adc
std
mov
loope
mov
push
xchg
sbb
inc
xor
jecxz
stc
call
mov
cmp
ds
mov
incb
mov
in
cmp
inc
xor
xchg
inc
push
xchg
pop
pop
or
call
lret
cltd
cmp
mov
xor
subb
mov
clc
paddq
lcall
mov
cltd
push
aas
cmpsl
adc
or
pop
sbb
movsl
jnp
add
xlat
xor
lret
orb
mov
shrl
mov
lods
mov
pop
sub
push
pop
jnp
dec
sbb
out
clc
lahf
push
push
pop
dec
xor
pop
adcb
outsl
cmp
mov
inc
js
and
pop
ret
push
cmc
and
cmpsl
gs
add
add
movsb
or
enter
inc
push
mov
pop
jmp
repz
mov
pop
xchg
pop
jecxz
mov
or
inc
imul
rcl
pop
push
xchg
aad
pop
xor
fcoms
int
lahf
rcrl
or
pop
sub
mov
push
es
mov
xchg
xchg
inc
pop
sub
scas
push
mov
cmp
xor
lods
mov
push
mov
xor
pop
fisubs
repz
mov
pop
imul
mov
adc
inc
adc
xchg
js
pushl
jns
cmpsl
dec
iret
jbe
or
aam
subb
fistpl
aaa
mov
push
pop
xchg
dec
push
in
pushf
pop
mov
cli
lret
pop
mov
jecxz
aas
outsb
xlat
sub
inc
sub
insl
inc
lret
into
sarl
fidivrs
stos
enter
cmp
fstpl
shll
mov
jmp
mov
sbb
inc
add
stos
pop
mov
pop
lods
scas
jecxz
push
lret
dec
or
or
nop
inc
pop
push
sub
pop
jp
cmpsb
enter
aad
repz
adcb
sub
pop
inc
fists
inc
imul
push
sbbb
sbb
jecxz
dec
hlt
mov
or
push
pop
mov
popf
jecxz
push
inc
ficoms
adc
or
add
enter
test
cmc
and
sub
push
xorb
dec
adc
add
pop
ds
sub
mov
dec
pop
dec
mov
mov
jmp
ud1
sbb
push
lods
incl
js
or
shrl
scas
cmp
or
adc
in
jne
into
fistpll
aad
cmp
add
ret
mov
clc
or
subl
jns
ss
out
dec
mov
shll
rcll
pop
dec
mov
or
cmp
sub
mov
push
inc
xchg
roll
mov
pop
xchg
int3
dec
add
in
mov
xchg
ljmp
push
pop
or
inc
pop
dec
addl
mov
sahf
int3
scas
loopne
mov
pop
adc
aas
ret
mov
inc
push
mov
cltd
jb
push
cld
insb
cwtl
stc
push
cmp
pop
leave
and
push
pushf
adc
mov
aad
pop
xchg
pop
mov
sahf
neg
add
push
fistl
into
aad
adc
cmpsb
jmp
and
shll
out
les
sarl
pop
call
inc
fstpl
sahf
mov
mov
rorl
sub
shl
mov
dec
orl
and
cmpb
lds
gs
call
and
cmpsb
cmp
lds
cld
inc
sbbb
push
cs
loop
pop
out
adc
push
in
cmpsb
sub
stos
mov
sbb
mov
fmul
es
cmpb
push
inc
mov
and
ror
lock
push
sub
mov
and
sahf
fisubs
pop
and
fs
insl
out
imul
sbb
orb
mov
ljmp
dec
shrb
jmp
es
pushf
test
inc
data16
jmp
lret
scas
scas
lods
or
cmc
das
js
cmp
aaa
outsw
pop
push
mov
inc
test
lds
mov
xchg
inc
xchg
mov
in
mov
outsb
cmpsb
sub
mov
cmpsb
es
arpl
mov
jo
sbb
mov
mov
and
outsl
push
sbb
lcall
movsbl
inc
jecxz
xchg
outsb
inc
leave
sub
rorl
pop
dec
xchg
out
pop
lcall
sahf
mov
mov
dec
and
into
cmp
and
addl
mov
les
lds
jmp
test
sub
mov
jnp
sub
mov
xchg
pop
inc
aad
loopne
adc
cmp
jbe
leave
cmp
sbb
arpl
lods
leave
jp
cltd
sub
cwtl
pusha
mov
in
and
adc
lret
pop
adc
sahf
add
negb
jmp
mov
in
in
out
sbb
hlt
cmp
xchg
into
xor
test
ret
mov
loopne
cmpsl
nop
fildll
sub
add
dec
jb
rolb
sub
outsl
inc
or
sbb
hlt
and
lahf
dec
mov
fiaddl
sahf
stc
cli
cltd
mov
inc
loope
dec
sti
iret
scas
dec
inc
jg
pop
add
out
adc
cmpsb
push
lahf
cmpsb
sbb
je
repz
mov
in
ja
incb
fisttps
add
stos
in
or
loope
sub
bnd
stos
cld
fiadds
xchg
push
dec
and
mov
mov
movaps
inc
xor
push
cmpsl
cwtl
pusha
mov
dec
mov
bound
mov
add
addps
dec
jmp
mov
testb
nop
sub
pop
insb
imul
pop
scas
dec
xor
aam
jp
sbb
push
fistpl
push
adc
pop
sbb
mov
jle
pop
or
mov
gs
push
pop
cmp
data16
jecxz
mov
iret
sub
xchg
aam
jmp
xor
fstl
mov
pop
aam
cmp
enter
arpl
jp
sub
arpl
jecxz
imul
mov
in
dec
rorl
lea
lcall
jae
cli
mov
aam
mov
push
add
push
pop
push
iret
int
in
lea
lahf
pop
or
stos
mov
pop
cmp
aaa
les
pop
or
mov
lods
js
mov
aas
jno
movsb
mov
outsb
pop
aad
cs
nop
hlt
imul
stos
xchg
dec
inc
lcall
add
filds
cmp
dec
push
arpl
lods
cmpb
add
xor
dec
xor
jecxz
std
mov
xchg
jp
or
mov
jle
push
loope
dec
pop
outsl
cmpsl
ret
pop
insl
lret
je
mov
lret
sbb
mov
dec
mov
pop
pop
sbb
ja
cmp
mov
push
cwtl
pop
out
hlt
arpl
add
das
lcall
dec
cmp
cmp
pop
out
aas
xchg
push
mov
ss
mov
jmp
jae
outsb
je
lods
out
mov
inc
hlt
pop
test
ficoms
mov
inc
adc
lret
test
mov
pop
aaa
add
arpl
data16
pop
sub
jns
pop
dec
mov
insb
or
dec
bound
es
pop
jns
mov
mov
push
ds
shlb
pusha
popa
inc
in
cltd
mov
push
sbb
bswap
pop
jb
mov
std
inc
inc
shll
cmc
cmp
lret
cli
outsl
jp
in
pop
pop
hlt
mov
xchg
push
popf
rolb
mov
imul
jns
pop
cwtl
sub
orl
mov
xor
jno
insl
outsl
mov
in
dec
push
or
stc
and
pop
pop
insl
std
push
sti
cwtl
sub
pusha
pop
mov
adc
mov
mov
jo
cmc
xchg
adc
pop
in
ficoml
add
xchg
mov
push
std
pop
mov
mov
dec
bound
sbb
mov
ficoml
in
in
pop
lock
hlt
mov
adc
ljmp
pop
scas
test
mov
pop
push
mov
cmpsl
lcall
rorl
gs
lea
and
mov
or
jo
xchg
or
pop
data16
icebp
cmp
pusha
fs
cmpsl
jle
sub
xor
and
mov
push
por
adc
add
pop
movsl
adc
aad
pop
xor
adc
inc
mov
adcb
movsl
testl
push
ret
xlat
test
jg
arpl
call
xchg
cmp
data16
dec
jg
pop
std
mov
mov
pop
inc
ds
adc
cli
pushf
xchg
and
xchg
insl
adc
stos
cmp
or
mov
decb
pusha
jbe
or
dec
add
xchg
call
addr16
stc
sub
pusha
dec
dec
push
mov
mov
sub
cmpl
in
jge
cvttps2pi
push
lods
push
mov
dec
cwtl
or
mov
push
hlt
scas
js
ljmp
jns
ss
push
push
cmp
pop
jl
mov
add
hlt
push
inc
test
aaa
jecxz
sbb
out
cwtl
outsl
mov
cs
sbb
mov
dec
add
int3
xor
roll
cmp
and
test
push
orb
cmp
fists
xor
inc
movzwl
sbb
sbb
and
int3
nop
pop
shrb
mov
roll
mull
sti
cmp
mov
cmp
mov
push
pop
je
pop
pop
sbb
or
xor
or
mov
lahf
ret
test
jcxz
inc
sbb
shl
in
rorl
jmp
cmp
jg
mov
push
mov
or
mov
sbb
jmp
pusha
call
cmp
flds
mov
mov
ljmp
sbb
mov
inc
stc
jg
cmpsl
pop
xor
or
in
add
cmp
inc
pop
or
jne
dec
mov
sub
loopne,pn
xlat
mov
xchg
mov
enter
sbbl
pop
pushf
push
cmpsl
shr
pop
enter
hlt
cmpsb
push
and
adc
lret
push
int3
or
imul
test
enter
jno
imul
stos
pop
scas
lods
pop
mov
outsl
xor
pop
insl
jns
xchg
enter
pop
mov
xor
call
ljmp
enter
test
aaa
outsb
fisttps
clc
jo
cmp
arpl
xor
mov
int
push
inc
mov
pop
enter
scas
xor
dec
cmp
mov
loop
pop
xlat
int3
cmpsl
dec
push
test
outsb
mov
repz
fwait
mov
inc
stos
mov
stos
fldenv
jne
dec
scas
push
pop
popf
mov
je
push
and
xchg
add
cmpsb
adc
pop
mov
add
xor
or
out
sub
movsb
jmp
xor
sub
or
and
scas
sbb
mov
out
fs
inc
jmp
imul
fsubrl
pop
ljmp
out
cmp
xor
pop
lods
mov
insl
popa
dec
bnd
fisubl
pop
push
in
mov
pop
les
outsb
push
add
out
pop
push
in
adc
call
xor
lret
pop
ss
jns
std
in
cmp
mov
and
pop
imul
inc
sbb
xor
push
add
pop
rcr
je
repnz
or
test
movsb
in
fisubl
adc
push
add
imul
cmp
xchg
add
or
push
lock
pop
inc
pop
cmp
or
test
push
fmull
test
fbld
or
sbb
xor
movsl
xchg
in
sbbl
ret
mov
or
push
sbb
pop
push
adc
cmp
mov
cmp
fcmovne
pusha
mov
pop
mov
push
adc
lcall
mov
cs
rcr
jns
aad
mov
adc
fs
xor
or
int3
add
xor
mov
js
push
int
leave
add
fisttpl
or
sarb
jnp
pop
jae
dec
push
iret
push
ret
mov
sahf
ds
sub
push
cmpl
lods
pop
dec
mov
mov
std
clc
cmp
test
pop
and
push
rcll
in
jnp
inc
or
inc
dec
adc
call
aas
mov
shrl
pop
inc
push
pop
ja
into
lret
dec
out
cld
xor
popl
xor
lahf
out
inc
sub
adc
jmp
pop
push
fwait
fs
pop
mov
roll
xor
sbb
sub
in
xor
mov
ss
pop
movsb
xchg
dec
xor
inc
mov
scas
cmp
fidivrs
pop
sbbl
pop
sbb
xor
jge
xchg
call
push
test
jmp
mov
inc
sti
sbb
gs
add
pop
cmp
xchg
or
femms
hlt
into
mov
mov
inc
repz
xor
mov
es
or
roll
mov
icebp
jnp
cmp
sarl
xchg
and
cmp
mov
mov
mov
test
dec
cmp
cmp
and
jbe
lahf
std
xchg
mov
mov
mov
pop
rorl
bnd
jp
pop
cmp
and
dec
fistps
pop
pop
loop
dec
jnp
inc
leave
xor
push
dec
add
sbb
pop
push
into
shrl
pop
sbb
stos
ljmp
sbb
aad
mov
push
out
dec
push
sub
bound
cmpsb
pop
ljmp
xor
stos
sub
inc
lcall
pop
loopne
xor
into
fld
outsb
jecxz
lea
sbb
lret
pop
negl
pop
fildl
jb
adc
or
xchg
inc
mov
loopne
pusha
scas
pop
into
fistl
ds
movsb
fmull
push
ret
lcall
in
xchg
repz
adc
adc
mov
movsl
sbb
lods
scas
xor
jg
addr16
inc
pop
or
cmc
xchg
jle
pop
leave
jecxz
jbe
mov
adc
notl
pop
int3
out
jne
lret
gs
aam
adc
pop
mov
pop
ljmp
arpl
inc
xor
dec
cmpl
cmp
mull
or
lret
jno
fistpl
sub
addr16
lods
icebp
imul
and
rolb
es
mov
arpl
inc
and
xor
cmp
mov
mov
fwait
lahf
dec
fistl
stos
and
pop
mov
and
pop
mov
jb
or
mov
popl
cltd
cwtl
ret
nop
mov
mov
into
or
pop
shr
push
addl
mov
outsb
pop
lea
push
je
mov
fnsave
pop
xor
sbb
subb
pop
nop
popa
jb
mov
inc
pop
inc
add
dec
mov
hlt
out
std
lock
lret
pop
out
xchg
test
lret
cmpsl
pop
movzbl
pop
adc
lock
lea
lahf
mov
pop
jno
mov
nop
out
jo
sub
pop
sar
push
inc
push
push
cwtl
inc
pop
or
inc
inc
cmc
mov
jp
pop
je
lret
jns
nop
pop
and
push
sbb
in
out
jl
popa
dec
and
pop
jns
mov
movsl
fucomip
aas
pop
cmpsl
xor
dec
dec
inc
adc
sub
loope
into
dec
es
xor
xorl
in
cmp
or
adc
rorl
mov
mov
fistl
inc
pop
in
add
fiaddl
push
mov
pop
rcll
xor
jg
in
cmp
jbe
pop
sbb
sbb
stos
repz
inc
xor
in
loope
cmpsb
dec
jno
stos
jle
jge
ret
inc
or
in
mov
inc
gs
and
cmpsl
inc
pop
dec
mov
call
pop
lods
inc
loopne
pop
mov
mov
dec
movsl
aam
jmp
pop
sub
mov
cmp
addl
inc
rorl
inc
add
and
inc
pop
lret
dec
jecxz
aas
xor
roll
dec
mov
mov
addl
cli
lock
hlt
subl
ss
aad
adc
les
lds
lret
mov
call
mov
xor
xchg
inc
movl
xchg
roll
sti
add
mov
sbb
fdivrs
pop
pop
hlt
scas
xchg
bound
in
repnz
mov
scas
or
cli
inc
ljmp
aas
popf
sub
lret
mov
fmulp
sahf
clc
push
pop
push
inc
adcb
ds
je
mov
lods
xor
fcoms
ret
js
pop
jmp
cmpb
sbb
push
xchg
inc
pop
fildll
cmp
pop
mov
and
mov
push
lret
roll
ret
int
add
xor
pop
mov
or
jnp
pop
rorb
or
pushf
mov
aaa
aaa
pop
jnp
mov
in
inc
mov
mov
xchg
es
push
mov
pop
inc
pop
insb
nop
aas
test
jo
mov
jge
mov
mov
jmp
xchg
lock
dec
popf
pop
or
movsb
mov
pop
adcl
push
pop
in
xorb
pop
mov
mov
xor
stc
and
mov
pop
mov
lretw
aam
mov
pop
dec
or
cmp
jno
ret
pop
stc
lahf
sub
popf
pop
add
add
pop
scas
xchg
ds
es
add
es
mov
filds
jnp
lret
xchg
cmp
xor
xchg
loopne
push
test
pop
lret
out
js
jne
mov
fldt
sub
cmp
adc
push
mul
add
lea
xchg
cmove
ljmp
pop
add
cmp
push
int3
loop
call
push
pop
sarb
dec
pusha
repnz
mov
imul
stos
add
lea
jo
mov
xchg
and
mov
out
xchg
orl
inc
dec
mov
outsb
mov
sub
ret
xchg
inc
hlt
jnp
fstp
push
pop
dec
push
call
pop
std
pop
jmp
jae
cmpl
call
test
movsl
inc
ret
push
dec
mov
pop
jae
pop
stc
add
jne
mov
mov
addb
testl
jle
xorl
shrl
addr16
xchg
pop
leave
lret
and
cmp
rorb
dec
xlat
inc
cmp
jns
mov
xchg
cmp
sbb
test
clc
fwait
pop
fisttps
aam
xchg
out
dec
jb
movaps
mov
lods
repnz
mov
int3
fiaddl
in
sub
stc
sbb
cs
dec
sti
adc
inc
vpmaddwd
mov
xchg
and
inc
pop
xchg
push
aaa
out
aas
cmp
xchg
pop
mov
pop
scas
test
lods
inc
jnp
ja
inc
mov
dec
lret
scas
cmp
gs
test
adc
loopne
movsl
fwait
mov
push
jge
or
add
or
mov
push
insb
cs
dec
das
xchg
pop
sbb
or
out
or
jae
arpl
jo
mov
cltd
decl
mov
push
mov
lock
jle
cmp
cmpsl
insl
out
pop
jbe
mov
push
insb
fldt
cmc
gs
out
dec
arpl
mov
pop
bound
ljmp
pop
or
inc
divl
cmp
lret
inc
movsl
shl
jae
orl
psubusw
es
cmpsb
hlt
in
inc
push
in
aad
das
adc
sub
and
rolb
test
addr16
jo
jmp
mov
sub
jmp
pop
xchg
mov
int3
push
out
push
insl
popa
arpl
or
clc
clc
mov
mov
es
push
sbb
pop
aaa
stc
mov
inc
fldcw
mov
pop
pop
xlat
in
mov
pop
fld
jmp
mov
push
lcall
adc
test
mov
divl
push
imul
les
jmp
adc
in
lret
cmp
push
jnp
inc
jg
leave
dec
inc
push
mov
mov
xchg
inc
mov
movsb
pop
push
movsl
in
std
mov
push
push
or
ljmp
ss
fs
push
aaa
adcb
jb
sbb
inc
xchg
push
sub
cmp
repnz
mov
sar
pop
and
push
cmp
iret
or
push
push
and
imul
test
popa
inc
sbb
outsl
dec
arpl
jo
xor
mov
sbb
mov
hlt
or
push
mov
xor
mov
in
pop
pop
inc
call
jmp
lret
repz
xchg
xor
sbb
mov
push
mov
sarb
lods
ret
sbb
int3
or
sbb
rcll
fnstenv
mov
sbb
in
cmp
mov
int3
fstps
bound
orl
mov
pop
xor
xchg
es
out
aad
mov
adc
xor
mov
es
call
imul
cmpl
stos
pop
cli
jb
pop
aam
lret
add
mov
popa
lods
jge
sahf
xlat
xor
inc
stos
xor
call
sbb
pop
mov
lock
arpl
lea
mov
aam
pop
jecxz
ja
movsb
cld
out
push
pop
adc
ss
and
aaa
sub
mov
inc
or
ss
pop
inc
dec
fisttps
mov
pop
inc
mov
scas
mov
jb
das
push
jne
test
imul
mov
cmp
mov
jne
adc
mov
scas
es
push
and
stos
movsb
popf
test
and
sbb
movsl
xor
and
ret
mov
cmpsb
bound
pop
jbe
inc
sub
pop
mov
xor
mov
mov
daa
cmp
cltd
mov
rclb
fsubrs
pmulhuw
push
cltd
fstp
inc
scas
add
test
stos
jmp
or
add
data16
loop
clc
cmpsb
xor
dec
nopl
jecxz
in
and
sub
and
mov
add
and
ljmp
add
mov
mov
inc
cmp
xchg
pop
fs
and
mov
adc
inc
lea
adc
sub
iret
push
or
add
jb
mov
and
add
call
arpl
pop
shll
sbb
insl
lret
das
test
xor
jo
movsb
rorl
leave
sarl
int
inc
dec
imul
out
pop
test
pop
add
fldt
pop
mov
pop
xor
orl
adc
out
mov
fisttpl
xor
sub
movsl
sbb
add
add
in
out
data16
fisubs
xchg
es
gs
js
or
cmpsb
ljmp
cmpsb
and
pop
adc
popl
in
int
xchg
fsubs
dec
sub
out
push
and
clc
inc
rorb
lret
cld
pop
dec
cs
scas
test
into
adc
pusha
xchg
ds
xchg
cltd
mov
push
adc
aas
or
ja
scas
xor
data16
movsl
cmp
mov
lods
cmp
adc
repnz
scas
out
cmp
sub
test
rol
out
test
add
jae
sahf
sbb
and
add
add
nop
enter
cld
dec
cmp
and
addr16
mov
filds
addr16
js
push
cmc
addb
add
cld
stos
aas
cs
mov
cmp
stos
and
lret
fwait
pop
int
inc
loope
test
jecxz
ss
add
bound
and
sub
test
lods
sub
xchg
and
outsl
xlat
in
je
adc
cmpsb
movsl
push
mov
ret
lds
push
ficomps
incl
sti
ret
out
pop
mov
je
mov
inc
in
jno
sub
sti
mov
lds
dec
and
test
xor
test
les
and
aas
adc
ficoms
les
mov
and
sbb
leave
lcall
iret
test
cmpsb
lea
rcrl
and
inc
les
lock
scas
out
dec
nop
enter
mov
les
xor
repnz
sbb
add
push
mov
popf
or
lock
dec
sub
imul
cli
fldenv
xor
mov
es
enter
test
mov
pop
test
sbb
les
iret
xchg
adc
ljmp
fldenv
cmp
iret
fs
stos
lea
xchg
test
filds
jb
inc
in
mov
in
mov
sub
mov
sub
adc
or
loope
sub
vfrczps
mov
push
out
lods
mov
push
loopne
sub
inc
mov
data16
xchg
cmp
and
pop
jns
mov
and
test
in
out
inc
mov
es
xchg
xchg
add
mov
fisubs
pop
mov
pop
add
and
cmc
dec
in
push
sub
sub
cmp
sub
into
cld
push
lret
pop
fstpt
inc
pop
pop
ja
sbb
push
stos
in
jne
into
and
mov
lret
add
aaa
jne
into
lahf
pop
mov
stc
dec
and
lds
cmpsb
lods
mov
dec
movsl
in
mov
sbb
das
push
fbstp
or
adc
sub
lret
sbb
cmpsb
movsl
and
movsl
loope
jle
inc
scas
or
jb
and
andb
mov
add
pop
ljmp
sahf
cmpsb
inc
add
cld
xor
pop
sub
andb
pop
jbe
xchg
movmskps
xchg
dec
add
add
data16
movsl
popf
ljmp
mov
cld
movsb
inc
cmc
movsb
cmp
rorb
popa
push
inc
xchg
fldl
mov
and
push
sti
movsl
frstor
mov
es
cld
lds
and
mov
mov
insb
ret
mov
iret
outsl
lret
out
mov
into
push
sub
dec
dec
sub
mov
and
bnd
ja
push
or
mov
push
add
cld
add
push
sub
pop
scas
pop
inc
lods
sub
xchg
nop
test
mov
pop
loop
and
lds
mov
mov
nop
dec
out
jmp
cmp
pop
or
scas
or
dec
adc
jo
mov
sub
pushf
add
shl
sti
mov
loopne
add
jecxz
subl
sub
fsub
movsb
mov
cmpsb
outsl
jo
in
sbb
int
and
pop
inc
loopne
in
cli
adc
ljmp
fsubr
pop
scas
xchg
cmpb
lds
out
jmp
packuswb
push
sub
xchg
inc
jb
fnstcw
movsb
sbb
inc
divb
jl
adc
xor
out
adc
cmp
jl
sbbl
or
push
push
add
xchg
adc
cmpsb
sbb
push
sub
out
sbbl
adc
imul
dec
dec
into
stos
in
int
imul
xchg
cmp
push
mov
in
mov
cmpsb
out
push
jbe
cmpsb
insl
dec
or
mov
xor
add
adc
ret
lahf
out
jecxz
nopl
pand
popf
rcrb
cmp
pop
fldt
wrmsr
pushf
sbb
outsl
mov
lret
movsb
enter
fiadds
fidivrl
adcl
gs
fisubl
out
dec
fcoml
js
test
pop
icebp
rorl
xor
mul
popa
xchg
and
or
inc
fs
filds
out
mov
cmp
push
les
adc
push
sbb
mov
push
rol
lahf
sbb
test
add
stos
filds
shl
pop
xchg
test
aaa
rcrb
and
push
add
mov
or
cmp
sbb
jno
or
mov
pop
jb
sub
pop
cs
dec
leave
jmp
mov
pop
dec
fmull
cmpsl
aam
pop
clc
and
inc
movsb
bound
dec
inc
cltd
aaa
nop
mov
mov
pop
or
pop
cmc
xor
data16
dec
ds
mov
pop
jge
fcomps
xchg
pop
std
outsb
xchg
cmp
sbb
cld
pop
or
push
repz
cmc
pop
lahf
add
dec
lods
pop
ljmp
stc
pop
jno
adc
jmp
mov
mov
ljmp
sbb
dec
pop
add
insb
stos
out
sbb
dec
pop
outsl
pop
or
out
fcom
pop
jno
cmp
imul
xchg
cwtl
mov
rcl
pop
dec
add
lods
mov
xchg
adc
inc
add
sbb
out
xchg
bound
clc
mov
or
ret
pop
or
mov
rolb
dec
xor
lds
mov
push
xor
cmc
inc
in
pop
cmp
lahf
adc
cmpsb
and
push
xchg
xchg
inc
mov
dec
gs
jp
data16
push
inc
movsl
jmp
mov
push
mov
jnp
movsb
clc
leave
shrb
mov
idivl
inc
jle
push
mov
movsl
or
xchg
cwtl
sbb
jns
scas
arpl
adc
push
and
mov
cmp
mov
mov
lret
xor
pusha
ljmp
out
xor
adc
xchg
add
adc
xor
lea
aas
sbb
pop
in
rolb
inc
pop
jmp
cld
add
push
mov
test
movsl
mov
fcmovbe
xchg
fnstenv
adc
in
mov
in
xchg
adcb
test
jmp
xchg
mov
inc
movsl
les
in
push
inc
adcl
lcall
jbe
and
mov
popf
aad
adc
lea
lods
scas
lods
fdivl
pushf
jo
pop
jge
mov
xchg
fwait
out
push
in
addb
es
cmpsb
mov
inc
lahf
daa
inc
add
cmp
add
enter
sub
repnz
sahf
nop
xor
or
repz
out
arpl
ret
inc
pop
add
push
pop
fs
int
iret
mov
mov
sbb
js
pop
arpl
in
enter
push
sarl
pmaxub
ds
pop
and
push
fmull
clc
add
lds
mov
adc
sti
lret
sahf
bound
shrb
inc
loop
aaa
test
cmp
out
orb
loop
data16
loop
cmp
mov
loop
sbb
jle
and
rolb
loop
and
mov
sbb
mov
xor
int
bound
sbb
mov
in
sub
call
ret
outsl
xlat
or
or
xchg
int3
push
jno
test
jbe
mov
inc
xor
xchg
sub
add
loop,pn
sub
dec
aaa
adc
les
and
cmp
sbb
adc
jl
and
inc
cmpsl
cld
jae
subb
faddp
out
add
ja
push
dec
push
loopne
frstor
add
fdivrs
shlb
and
mov
and
es
outsl
icebp
sbb
iret
and
push
and
mov
cmp
adcl
movb
les
jmp
xor
push
out
and
dec
mul
push
mov
repz
dec
testl
mov
jb
shrb
jb
adc
iret
mov
push
icebp
fmul
aad
shlb
jae
imul
fldenv
push
sbb
and
fsubl
fs
add
push
je
popf
jp
push
loopne
push
sub
movsl
cmp
mov
mov
pop
jae
pop
and
sahf
rep
mov
push
dec
pop
adc
arpl
movsl
cmpsl
jno
push
pop
push
icebp
mov
stc
fisubrl
add
loope
dec
dec
pop
enter
mov
xor
idivb
in
lods
rolb
ss
and
dec
das
cmpsl
fmul
pop
dec
push
sub
repnz
pop
pop
ret
clc
scas
lahf
pop
sub
add
push
fistl
inc
inc
hlt
shll
fcompl
cwtl
pop
mov
jno
sub
or
pop
sub
push
inc
out
or
mov
dec
cmp
sub
xor
xchg
adc
lods
in
outsb
add
or
pop
inc
stc
adc
inc
push
xchg
push
leave
shll
addr16
in
pop
ret
add
pop
dec
fildl
pop
xchg
pop
or
xchg
flds
fs
and
pop
pop
jnp
test
mov
inc
adc
lods
jns
and
add
mov
cmpsl
repz
mov
jbe
add
pop
sub
xorb
pop
sbb
clc
jno
lahf
mov
dec
js
inc
mov
hlt
in
mov
jmp
ss
and
jno
ret
dec
pop
outsl
icebp
sbb
pop
test
bound
push
insl
addr16
mov
mulb
and
mov
xchg
or
xchg
sbb
pop
push
in
jae
inc
pushf
lock
scas
sbb
divl
mov
arpl
out
aas
xor
pop
or
popf
mov
pop
pop
jl
ljmp
jns
mov
or
xchg
pop
rol
pop
pop
jnp
xorb
lods
mov
jg
sub
aas
lret
and
dec
jno
arpl
aas
out
xchg
jge
adc
xchg
push
adc
and
out
js
call
dec
or
arpl
sub
pop
push
sub
pop
addr16
mov
sbb
enter
and
sbb
pop
aad
ss
mov
sbb
mov
insb
inc
mov
popa
pop
mov
mov
roll
imul
inc
pop
lock
aam
and
call
inc
pushf
xchg
pop
pop
test
lret
xchg
xlat
rorl
sbb
jo
lods
bound
les
mov
iret
dec
push
push
movl
movb
dec
stc
or
sbb
out
or
pushf
xchg
mov
pop
popa
shrl
mov
bound
jnp
mov
jge
pop
xchg
inc
pop
pop
aam
insb
mov
clc
iret
pop
shr
int
fwait
push
nop
jns
loopne
fs
loop
jmp
ffree
and
pop
jp
or
mov
jno
ds
sbb
pop
mov
and
cmp
dec
incl
mov
hlt
les
xchg
sbb
pop
mov
or
pop
inc
aaa
or
lret
outsb
dec
add
pop
js
dec
not
leave
add
push
push
xor
inc
adc
cmpsb
inc
xor
ret
pop
dec
dec
sti
xor
push
add
imul
leave
sub
arpl
pop
mov
or
sahf
rol
pop
pop
aam
xchg
lods
xchg
inc
and
arpl
lahf
pop
pop
sub
pop
sbb
xchg
mov
lock
test
dec
sub
push
ds
repnz
pop
mov
mov
addr16
outsl
pop
pop
push
sub
sbb
jg
aad
and
sahf
xchg
das
sbb
add
in
aaa
jle
stos
mov
fwait
pop
xor
fucom
loop
ljmp
orl
lret
pop
es
ret
ja
dec
dec
or
mov
jae
jo
pop
pop
andl
push
inc
mov
push
pop
ljmp
inc
stos
int
ret
cmp
cmp
lret
cli
cmp
pop
adc
mov
cwtl
outsb
sub
pop
fsubrl
sbb
pusha
clc
cmc
pop
stc
add
rolb
out
int
push
mov
pop
sbb
outsb
inc
and
dec
mov
jecxz
pop
jb
mov
sbb
xor
mov
inc
sbb
sub
sbb
sbb
in
dec
cmp
dec
das
jae
test
pop
cs
fldenv
jle
outsl
movsl
add
flds
jge
inc
mov
or
adc
nop
scas
movsl
dec
mov
sbb
cli
aad
mov
jl
notb
pop
popa
pop
in
dec
adc
cs
stos
icebp
imul
pop
push
inc
testb
xchg
scas
push
or
sub
popl
shll
xor
pop
orb
insl
pop
dec
fistl
push
jle
imul
mov
pop
inc
lret
pop
inc
or
pop
ljmp
flds
jecxz
xlat
xchg
lret
jle
addl
in
cltd
push
sbb
cli
mov
out
loope
test
sbb
mov
xor
adc
data16
inc
inc
scas
fistl
leave
push
repnz
aaa
lcall
pop
sub
arpl
jae
nop
xor
xchg
pop
fwait
ds
outsl
jno
loop
pop
xchg
das
push
sub
imul
push
mov
lock
aaa
into
ja,pt
push
xor
pop
pop
lds
xor
xchg
sbb
mov
or
aad
in
fldl
xchg
push
dec
and
jecxz
jmp
js
pop
addr16
popl
xchg
push
cmpsb
or
jbe
ficoms
jne
cmc
cltd
sti
or
inc
mov
push
xchg
push
cld
cmpsl
xor
xchg
pop
scas
add
push
ret
sti
addr16
pop
jnp
test
xchg
scas
mov
mov
xlat
pop
pop
cmpsl
mov
incb
lahf
stc
jb
sbbl
pop
scas
pop
shl
or
lods
or
pop
scas
rorl
bound
xchg
xchg
sti
adcb
inc
mov
xor
add
inc
sar
ret
cmovo
mov
int3
pop
adcb
aad
scas
sub
or
mov
iret
inc
cmp
cmpsl
push
push
sbb
dec
xor
jb
aaa
or
adc
dec
or
or
enter
xor
cmpb
in
scas
pop
push
int3
or
pop
jle
mov
scas
mov
pop
rcrb
mull
inc
fninit
pop
push
push
dec
in
mov
add
int
andl
pop
xchg
inc
jns
cmp
sbb
xchg
or
scas
pop
lcall
fwait
pop
insl
mov
nop
iret
pop
sbb
jle
lods
hlt
jns
fisubrl
mul
jbe
insb
mov
ja
dec
adcl
or
push
test
sarl
sbb
bound
shrl
push
pop
jnp
ret
jge
pop
and
jl
xchg
adc
inc
jp
or
cmp
dec
mov
inc
mov
popa
jae
pop
jmp
xorb
push
mov
enter
jnp
sub
inc
aam
flds
sub
mov
fwait
hlt
mov
mov
sub
cmpsl
pushf
or
pop
sub
pop
mov
inc
lret
js
test
xor
nop
push
pusha
mov
jp
jle
cli
fsubrs
cmp
bound
out
jbe
cmpsl
cs
das
out
nop
sti
push
in
mov
mov
loop
xchg
pop
aaa
adcl
lock
jne
mov
clc
iret
inc
inc
dec
inc
les
jg
mov
arpl
jbe
pop
push
or
mov
and
jmp
ret
add
roll
call
jno
rolb
mov
jecxz
ret
lds
cmpsb
leave
jge
and
sbb
pop
inc
int3
xchg
js
fildll
scas
pop
sbb
cmp
test
push
mov
or
fadds
ret
lods
pop
out
stc
and
out
mov
jle
push
inc
and
add
and
push
mov
xor
fsub
inc
lahf
pop
sbb
or
or
pusha
jns
daa
jmp
jp
leave
cli
sub
ret
sbb
push
add
sbb
in
shr
or
push
inc
push
fnstenv
xchg
sbb
xor
mov
add
in
cvttps2pi
add
mov
fcomps
push
int3
cmpsb
pushf
pushw
jmp
out
cmc
xchg
inc
fs
stos
push
sub
cmpsb
pop
movsl
addl
sti
cmpsb
xor
mov
pop
inc
cmpsb
mov
mov
idivl
pop
in
sub
and
push
cmp
inc
call
pop
sbb
push
jno
mov
leave
fyl2xp1
imul
gs
ret
ljmp
stos
mov
or
pop
test
push
ljmp
ret
mov
pop
pop
inc
or
insb
xchg
ret
sub
add
push
mov
inc
ret
push
mulb
jmp
and
jbe
bound
leave
xor
ret
and
xor
push
shll
mov
xchg
adc
addr16
stc
loopne
adc
add
xor
cmp
mov
out
jmp
shufps
push
mov
fstpl
jns
pop
test
mov
shl
adc
add
mov
lret
es
sub
push
and
dec
mov
jne
and
cmp
dec
scas
jnp
cmp
int3
lods
sub
and
add
mov
cld
inc
ret
cmpsb
in
addr16
and
and
push
sbb
rol
push
popa
or
or
mov
adcl
xor
dec
mov
mov
clc
rol
xor
bound
rcl
js
dec
mov
pop
shll
cltd
and
es
jmp
push
jl
pop
jl
sub
cmp
xlat
clc
pop
loopne
inc
add
into
cmp
cmp
loope
imul
mov
ret
lds
ljmp
add
ljmp
sbb
inc
faddl
inc
dec
jl
ror
movsb
jle
dec
cmp
outsl
inc
dec
stos
push
repnz
push
cli
lcall
cmpl
xorb
add
lds
ret
mov
cmp
lahf
in
das
cmp
xchg
push
lahf
lret
loop
or
mov
imul
or
ret
pop
mov
enter
pop
or
mov
cmpsb
fmuls
movl
xor
push
popf
scas
ss
adc
dec
push
pop
iret
je
aad
hlt
mov
push
jl
mov
sub
or
test
xchg
in
dec
ret
sbb
scas
xor
jecxz
xchg
xchg
mov
pop
jle
outsl
lods
popa
js
and
mov
inc
adc
sar
out
imul
pop
jl
aam
xchg
scas
mov
pop
xchg
push
lahf
ss
dec
sbb
negl
jnp
cmp
jecxz
sub
jmp
cmpsl
xorb
push
test
mov
cmpsb
push
fcomps
lods
int
pop
sahf
stc
dec
xchg
in
mov
or
add
and
ret
es
mov
sub
or
push
add
lea
pop
add
pop
fldenv
stos
fwait
not
inc
hlt
js
pop
add
loope
add
jo
cmp
xchg
xor
pop
aas
adc
mov
cmp
lods
push
jae
aad
and
mov
jecxz
xchg
je
loope
mov
mov
sub
xchg
mov
push
repz
mov
icebp
std
adc
iret
xchg
out
mov
mov
xor
lock
pop
loopne
sbb
rclb
sbb
push
mov
aas
call
sbb
pop
pop
mov
push
int
sub
dec
mov
mov
stos
jo
cmp
dec
sbb
testl
popa
pop
push
xor
ljmp
leave
roll
sbb
pop
jg
js
shlb
xchg
pop
out
xchg
insl
stc
cmpsb
icebp
xchg
es
mov
inc
lock
cmp
pop
mov
les
pop
sub
inc
subl
popa
pop
arpl
lret
cmp
jnp
push
mov
cmp
cli
dec
std
sub
lret
pop
jle
pop
hlt
addr16
pop
inc
jmp
add
and
mov
jl
pop
jbe
inc
pop
jo
rolb
scas
fs
fists
ljmp
cwtl
adc
jo
xchg
fwait
cmc
cmpsb
pop
popw
mov
cmp
and
mov
pop
xchg
popl
cmp
xor
ss
movsb
fsts
das
or
push
mov
lds
leave
dec
fwait
sbb
pop
mov
testl
fidivl
sbb
ds
lret
jp
inc
dec
mov
mov
push
inc
out
xor
lret
cmp
or
aas
fldl
or
icebp
mov
cmp
pop
addr16
or
push
roll
into
ret
hlt
scas
mov
pop
pop
xor
mov
fiadds
push
sti
popf
xorl
xor
inc
mov
mov
xchg
iret
pop
add
mov
pop
adcb
adc
pop
xor
push
cli
jp
scas
movb
les
or
mov
and
sub
xchg
leave
dec
pop
out
cmp
lods
nop
rcrl
xor
mov
jecxz
sahf
cmp
mov
dec
cmp
add
xor
xchg
aad
cmp
pop
aas
add
iret
dec
jae
pop
dec
scas
aaa
and
scas
std
fadds
mov
test
sahf
mov
mov
cltd
xchg
push
inc
out
mov
fwait
xor
xlat
pop
mov
ret
das
sbb
xchg
orb
or
in
push
jbe
pop
imul
cs
adc
push
dec
int3
data16
pop
adc
test
inc
hlt
and
or
sbb
popl
sub
addr16
xchg
mov
jecxz
sub
pop
movsl
sub
nop
in
imul
xchg
sbb
fs
fcompl
cltd
out
sbb
sub
in
bound
shrb
xchg
dec
imul
xchg
popf
movl
pop
add
add
sbb
cli
dec
outsl
and
pop
mov
fcmove
subb
dec
outsl
or
sub
in
push
loopne
sahf
test
pop
sti
jno
mov
pop
nop
jmp
out
aam
add
das
adc
cltd
pop
movsl
hlt
sbb
lea
add
pop
jo
xchg
flds
or
mov
cltd
or
fistpll
push
xchg
add
push
inc
cmp
xor
xchg
xor
aam
pop
mov
rclb
dec
jmp
jecxz
popa
push
mov
sub
pop
je
xacquire
sbb
sub
pop
pop
stos
add
adc
jecxz
pop
xlat
faddl
pop
cli
fbstp
push
or
sahf
jg
testb
inc
in
push
test
cmp
stos
call
lret
inc
mov
fwait
or
sbb
stc
fdivrs
dec
ret
icebp
js
sub
add
xor
inc
jge
loopne
imul
add
mov
out
push
lock
jbe
pop
jecxz
xor
subb
pop
into
and
mov
pop
hlt
pop
lods
or
movsl
cmp
mov
outsl
push
pop
lock
xor
adc
mov
dec
fwait
cmpb
test
inc
add
pop
lret
sbb
mov
push
mov
adc
add
subl
pop
sbb
aam
pop
movsb
mov
push
rorl
xor
insb
pop
xchg
arpl
or
test
sub
cwtl
imul
and
repz
mov
sbbl
arpl
mov
addr16
sbb
mov
pop
dec
push
jge
hlt
add
pusha
aam
scas
pop
sahf
add
cmpsl
cmpsb
in
imul
jns
add
pop
add
mov
stc
jae
call
inc
pushf
sub
ss
jecxz
sbb
and
shr
das
nop
sub
les
pop
es
xchg
xor
cmp
xlat
fistpl
pop
inc
mov
cwtl
fcomps
lods
or
fsubrs
in
xor
push
lret
xchg
test
xchg
adc
outsl
and
sub
fisttps
call
ss
pop
push
popl
mov
jle
sbb
or
in
add
pop
mov
mov
or
pusha
pop
pop
mov
movsl
int
testb
lcall
xor
add
out
fs
xchg
mov
sub
movsb
lock
dec
call
fs
push
mov
test
add
xor
xor
and
mov
and
cld
inc
ret
push
xchg
cmp
fidivs
popa
stos
mov
ret
xor
push
pop
mov
ret
or
cld
rol
rol
pushl
lock
loope
mov
xor
adc
xchg
pop
sbb
lea
scas
nop
icebp
mov
outsb
data16
add
jno
call
sbb
int
adc
inc
push
push
pushf
inc
sub
fisubrl
sbb
lret
adc
fstpl
push
fistps
xlat
jge
jne
xchg
loopne
xchg
inc
pop
ljmp
data16
pop
push
inc
mov
and
in
inc
incl
pop
sub
outsl
int
and
inc
dec
xchg
and
scas
push
inc
stos
add
fcomi
fisttps
xor
pop
sbb
nop
scas
ja
adc
adc
in
test
inc
sahf
add
lea
mov
sbbb
adc
add
js
out
movsb
mov
out
mov
jns
das
imul
pop
rorl
mov
push
es
mov
in
mov
pop
mov
cmp
fsubp
xor
arpl
negb
into
out
data16
add
in
push
jnp
jo
inc
iret
ja
jge
cmp
mov
push
psubw
icebp
je
fdiv
out
out
push
adc
inc
jo
xchg
add
add
mov
sarb
xor
inc
cmp
xor
lret
movsb
add
and
push
ficoms
mov
or
sbb
into
loope
lret
addr16
mov
testl
aam
add
xchg
xor
imul
and
cmp
mov
and
mov
push
jbe
cmp
ja
jmp
mov
sub
ljmp
das
mov
jb
add
sub
loopne
jmp
es
out
inc
pop
jecxz
adc
adc
out
lret
loop
inc
and
add
scas
outsl
int
sub
jl
xor
cmp
lahf
add
add
jmp
push
xchg
loopne
pushaw
addr16
jbe
push
sub
aad
shll
jmp
hlt
mov
in
andl
xor
mov
pop
movsb
sub
shl
lret
mov
arpl
jmp
dec
mov
jmp
or
and
out
push
fwait
push
dec
int3
mov
push
push
lahf
push
or
dec
xchg
or
jbe
cmp
push
mov
test
mov
add
xlat
pushf
jno
cmp
mov
ret
in
rol
addr16
mov
into
and
movsb
and
lds
ljmp
xor
push
loopne
jle
jg
sub
ds
sub
xlat
mov
mov
or
loopne
ds
loop
pop
add
push
or
loope
sbb
fnsave
mov
ret
fs
mov
shufps
cmp
dec
js
pop
and
jb
jo
cwtl
aad
ret
test
fxch
movsb
pop
inc
sub
sub
in
inc
ds
lcall
hlt
add
add
in
in
notl
lds
xor
cmp
out
test
mov
push
test
ljmp
sarl
inc
ds
iret
lods
out
xchg
and
fcmovne
clc
and
inc
arpl
cli
pop
push
aas
sarb
sbbb
or
sbb
aad
sbb
iret
and
add
mov
mov
inc
jns
sbb
int3
push
add
stos
push
cmc
ljmp
lods
shrb
add
xor
iret
int3
cmp
and
cmpsb
xor
sbb
pop
add
mov
out
in
out
pusha
daa
xchg
sti
dec
pop
cmpsl
lcall
mov
and
mov
mov
xchg
iret
xchg
lods
bound
lret
cmpsl
imul
leave
bound
dec
imul
push
inc
lret
aaa
leave
sahf
sub
jl
decl
stc
inc
dec
imul
mov
notb
cmp
xor
and
mov
ret
in
movsl
and
gs
add
inc
faddl
out
cmpsb
rcl
scas
fisttpll
xlat
cmp
sti
add
jno
xchg
ret
xchg
bound
cmp
add
cmp
cwtl
wrmsr
cld
jne
in
cmp
loope
sub
and
test
push
inc
stos
mov
aas
movsl
movsl
pop
push
xchg
call
loope
in
pop
mov
mov
add
pop
movsl
sub
es
es
mov
sub
test
ror
sbb
mov
and
cmpsb
xor
mov
jle
mov
or
movsb
sub
xchg
adc
cmc
mov
addr16
and
push
cld
daa
sub
push
ficomps
sbb
adc
xchg
ret
loopne
jmp
pop
ss
pop
or
jns
add
into
add
imul
jmp
and
jne
sbb
jl
dec
dec
sub
aaa
fs
ja
push
pop
add
sbb
ljmp
xor
dec
int
mov
loopne
xchg
xor
sub
xor
popf
ja
xchg
daa
xchg
fs
inc
sub
jle
push
add
imul
sbb
in
pop
sahf
ret
sarl
pop
movsl
int
ret
jns
and
out
cld
sarl
and
andl
das
pop
vmulps
enter
stos
sarb
loop
add
leave
add
xor
and
mov
dec
or
outsl
outsb
mov
dec
or
movsl
fnstenv
and
clc
sahf
outsb
stc
and
data16
retw
loopne
mov
imul
movsb
cmp
shl
lds
movsl
pop
ss
mov
jp
sti
mov
mov
push
sbbl
jnp
mov
lds
add
gs
push
inc
add
sti
sahf
and
add
cmpsb
lds
lcall
gs
mov
cmpsb
pop
es
cltd
movsl
add
lods
mov
popf
add
lcall
cmp
mov
paddusb
mov
fcompl
fiadds
push
movsb
push
nop
pop
fsts
sahf
and
and
push
cmp
sbbb
jg
adc
or
scas
cmp
popa
sbb
lods
rcr
or
lret
dec
int3
adc
movsb
das
pop
hlt
dec
scas
fsub
fs
cmp
and
sub
add
xor
mov
test
jb
dec
pop
popa
ret
shrl
sbb
xchg
outsb
mov
adcl
jp
fnstcw
add
movsb
out
add
movsl
sbb
add
hlt
mov
mov
xchg
leave
clc
arpl
inc
push
in
mov
lds
sti
aam
xchg
in
add
daa
ljmp
outsb
nop
pop
adc
lcall
sti
sbb
add
test
pusha
inc
lahf
daa
es
movsl
inc
xor
fwait
and
push
adc
lock
nop
popl
daa
fs
mov
sbb
out
push
add
js
scas
push
sar
fdivrl
fs
or
lods
pop
sub
sti
lea
and
fdivl
sti
add
cmp
lods
fwait
mov
dec
ret
xchg
loopne
pop
je
test
dec
xchg
das
mov
aad
pop
lods
sub
cmp
jp
inc
dec
sti
jo
cmp
jb
cmpsb
ret
push
out
pop
inc
lock
das
shl
or
push
les
inc
xor
ret
daa
cld
das
mov
mov
cmpsl
mov
insb
add
ret
dec
scas
or
lret
mov
pop
mov
xor
loop
testl
ret
or
dec
jp
or
test
xchg
aas
or
cltd
pop
imul
push
popa
ss
sub
lret
and
mov
mov
lea
addr16
shlb
adc
lds
mov
or
mov
addr16
mov
and
aam
mov
adcl
inc
mov
fdivs
cwtl
arpl
mov
rcll
sbb
iret
rolb
jbe
gs
in
scas
es
adc
xor
mov
inc
into
loopne
and
xchg
cmc
rol
add
enter
dec
lcall
repnz
pop
in
xchg
push
and
in
les
outsl
or
insb
push
mov
imul
add
dec
lods
and
shll
lcall
or
call
in
mov
dec
movsb
test
add
cmpsb
xlat
lret
insw
xchg
ss
xchg
fs
mov
add
add
xor
pop
push
mov
inc
jle
dec
mov
sub
jb
test
jae
rep
btc
pop
pop
les
pop
fadd
call
sbb
xchg
insl
mov
mov
push
add
rol
jecxz
fidivrs
add
pusha
xlat
dec
jns
lcall
adc
pop
daa
xor
lahf
in
je
ds
sbb
fiadds
jo
push
xchg
jnp
icebp
jecxz
fdivr
cld
add
xor
add
test
and
inc
mov
jl
jl
jecxz
cld
inc
mov
push
movsb
xchg
vpternlogd
cmp
jl
shll
shll
shl
shll
mov
movsl
icebp
xor
pusha
std
and
sub
xor
arpl
fucom
push
inc
mov
xchg
test
inc
sbb
inc
stos
fidivrs
fs
addr16
loop
test
inc
fdivrp
adc
rclb
and
push
arpl
or
inc
cmp
add
inc
push
out
push
adc
push
mov
cmp
lock
loope
scas
fsubl
les
dec
in
jecxz
mov
pop
mov
jl
inc
je
icebp
rorl
test
cmp
push
ret
mov
inc
ret
fs
in
daa
out
sti
shr
insb
ret
adc
popf
jecxz
lret
std
aas
dec
xchg
xchg
jl
jl
jl
mov
or
sub
dec
std
cmp
sub
mov
inc
test
inc
and
xor
roll
inc
roll
pop
shlb
mov
addb
daa
jmp
sti
data16
jl
cmpl
mov
movsl
xorb
mov
daa
flds
jl
cmpl
lahf
add
cmp
inc
roll
ja
inc
aaa
int
sti
loop
jl
ds
inc
out
sbbb
fisubl
push
inc
pop
push
ffreep
adc
test
mov
mov
stc
pop
sahf
jl
lcall
movsl
push
fiadds
insb
fnstsw
xlat
movsl
sbb
imul
in
stos
fninit
loope
or
imul
aad
mov
add
out
pop
movsl
in
mov
andl
add
hlt
stos
pop
mov
mov
cs
dec
ds
lcall
dec
push
fldl
lcall
clc
out
xchg
jno
add
adc
mov
fucomi
movsl
push
and
test
xchg
add
movsl
in
cltd
divl
cmp
pop
cld
loopne
nop
mov
push
add
pushf
jge
cmpsl
xchg
sbb
cmpsb
sbb
es
jmp
fstp
cmpsb
push
or
neg
nop
enter
into
lcall
ja
sbb
loop
push
sbb
push
lcall
fwait
int
jle
adc
xchg
push
adc
loop
out
insb
jbe
inc
ficompl
and
inc
fistpl
les
data16
push
adc
cmc
push
sub
lahf
fdivrp
mov
jbe
push
lahf
push
lcall
mov
ficomps
out
adc
adc
add
rcl
mov
js
lods
shll
popf
aad
int3
mov
lahf
jo
adc
fs
sbb
mov
push
iret
in
jp
nop
and
cmp
addr16
pusha
mov
pusha
push
dec
push
lcall
lahf
outsl
cwtl
ret
in
call
jae
adc
push
or
push
jge
push
dec
dec
enter
add
xchg
stc
out
insb
push
mov
test
and
loopne
pop
mov
cmp
pop
xor
sbb
adc
and
add
pop
sbb
js
cmc
aaa
cmp
jecxz
faddl
setl
js
cmp
rcl
push
push
sbb
notb
xor
mov
and
leave
jle
es
pop
aas
add
cwtl
mov
mov
fcmovu
push
test
daa
std
jle
into
mov
out
aam
push
or
xor
mov
push
jmp
mov
add
loop
test
mov
sbb
out
or
push
and
xchg
lods
repnz
pop
cld
js
into
pop
stc
cmp
pause
mov
xchg
xor
and
add
movsl
sbb
sub
ret
dec
in
jp
add
sbb
int
mulb
fadds
sbb
and
pop
scas
sti
aad
adc
mov
cmc
push
dec
fs
imul
pop
gs
rol
addb
daa
jle
add
jmp
xchg
adc
mov
int
push
sti
inc
push
in
fisubl
xchg
les
out
xchg
ss
adc
rclb
pop
push
shl
arpl
les
xlat
imul
xchg
xchg
push
cmp
or
lahf
push
xor
sub
push
jg
pop
shll
decl
ret
faddl
ljmp
pop
sub
adc
lods
test
in
js
xchg
out
inc
pop
stos
stos
xadd
lods
ja
cwtl
mov
mov
pop
call
inc
jmp
pop
in
lahf
jns
test
cmp
pop
pop
mov
iret
cltd
std
test
pop
add
xchg
pop
add
ss
jl
xor
push
sub
pop
mov
sbb
mov
pop
cltd
mov
fisttpl
sbb
int
repz
jns
mov
negb
jl
ja
icebp
jg
sub
jmp
inc
or
pop
rolb
pop
and
scas
mov
xor
mov
xor
pop
rorb
mov
cltd
dec
mov
dec
pop
jne
inc
pop
hlt
sub
push
mov
arpl
inc
dec
das
xor
jne
scas
sub
pop
pop
loop
dec
jb
xor
pop
shll
xchg
mov
pop
jmp
cmp
fnstsw
pop
sub
outsb
xchg
dec
pushf
stos
add
xchg
and
aas
add
out
inc
dec
outsl
ss
das
test
and
sbb
adc
pop
dec
mov
or
jno
stc
test
out
cmp
push
pop
xchg
pop
mov
loop
pop
pop
add
and
enter
lods
jl
xor
xchg
data16
aaa
mov
pop
xor
sub
jno
lods
sbb
ljmp
lds
movsb
fwait
push
shlb
repz
xchg
gs
cmc
lret
inc
pop
xorl
push
sub
pop
les
pop
mov
mov
pop
push
out
ficoml
jne
popa
inc
andl
out
mov
jg
lds
mov
mov
lcall
popf
xchg
repnz
out
es
out
jecxz
pop
pop
push
fsts
cmpsl
mov
and
inc
xor
adc
pop
into
add
pop
clc
and
cs
pop
lret
lods
sbb
xchg
inc
stc
dec
xor
sti
pop
or
mov
inc
push
mov
dec
in
stc
mov
pop
cmpsl
lods
cmc
fs
inc
sub
mov
xchg
shrb
jne
xor
xor
pop
push
xor
pmaxub
enter
adc
push
scas
sub
push
dec
inc
test
hlt
jo
pop
push
fcompl
sub
mov
sti
mov
sub
test
and
in
filds
inc
scas
cmc
dec
jae
xor
test
sbb
mov
pop
cmp
loope
push
orl
loopne
mov
pop
repnz
or
ja
and
mov
jno
lret
mov
and
jmp
int
push
mov
and
outsb
pop
and
pop
xor
push
add
shrb
adc
xor
das
rcrb
out
test
cmp
inc
lret
inc
mov
pop
jns
xor
ja
call
imul
ret
shlb
xor
fiadds
roll
movsb
cld
jle
into
aad
and
out
lods
inc
cmp
leave
fstl
out
ret
test
cmpsb
push
add
es
mov
sub
nop
in
push
out
xor
cmpxchg
or
mov
or
sub
lret
into
lret
sub
and
ret
pop
push
jp
mov
scas
std
pop
cmp
and
pop
sbb
out
dec
pop
jecxz
lret
cmp
or
scas
std
or
or
pop
incb
js
pop
in
outsl
mov
mov
cmp
insl
shl
push
push
pusha
or
scas
pop
inc
xchg
pop
es
xchg
ds
pop
insl
inc
mov
mov
leave
iret
mov
ja
jle
adc
imul
aad
fisttpl
xchg
push
mov
sub
das
mov
xchg
inc
call
lret
lods
inc
cmp
jnp
dec
roll
mov
pop
iret
mov
mov
xchg
or
add
clc
mov
sub
inc
fistps
je
and
cs
add
call
or
inc
inc
jecxz
imul
jno
xlat
dec
into
add
push
sub
pusha
enter
cmc
inc
fsts
adc
popa
pop
imul
add
sti
mov
cld
lahf
cmp
ja
pop
inc
jae
rcr
pop
arpl
pop
dec
mov
mov
adc
inc
mov
push
call
popa
das
cmp
inc
pop
adc
adc
gs
dec
cmp
xor
fwait
jo
sub
popf
cmp
pop
icebp
das
pop
sarl
nop
hlt
pop
jae
pushf
push
or
fmull
push
xchg
fisttpl
sti
pop
mov
mov
ljmp
adc
sbbl
jo
cwtl
subl
idivb
lea
int
repz
push
es
adc
mov
out
lds
pop
les
xchg
call
mov
nop
pushl
push
xor
and
fwait
mov
aaa
xor
stc
aam
push
fdivrl
pop
fistpl
lods
mov
test
add
sub
dec
cmp
outsl
pop
inc
addb
inc
aas
push
or
popa
dec
xor
xor
repz
and
add
mov
sub
or
mov
ljmp
or
or
popf
subb
cmp
or
pop
dec
push
cs
stc
inc
sub
decl
mov
push
jecxz
dec
pop
movsb
push
dec
mov
xlat
lods
pop
movsl
call
inc
ret
xor
and
sub
sbbl
mov
lret
push
pop
jp
inc
leave
push
push
add
jge
mov
inc
mov
getsec
inc
xchg
pop
or
push
sub
mov
pop
ds
lods
repnz
mov
out
and
mov
push
repz
ret
push
inc
sarb
mov
mov
arpl
sbb
sub
fdivrs
fisubl
cmpsb
rorb
inc
cli
bts
out
inc
push
xchg
rclb
out
xor
ret
out
iret
cmc
add
scas
or
inc
cmpsb
dec
and
ljmp
push
and
push
enter
shll
cmpsb
test
adc
fs
loopne
adcb
addr16
out
fbstp
lea
out
cmpsl
pop
repnz
mov
inc
sub
xor
and
fdivs
call
shr
pop
cwtl
mov
push
inc
push
cmp
push
add
dec
pop
dec
cmp
mov
mov
ret
lret
ljmp
push
and
sbb
out
loope
and
add
stos
xchg
loope
push
movsl
mul
mov
jl
cmp
fstpl
jp
xor
dec
xchg
fistpll
fldt
sahf
orl
cmp
mov
sti
sti
push
out
or
in
mov
bound
addr16
lds
out
mov
andb
inc
pusha
addr16
dec
movsb
mov
dec
loope
andl
pop
sbb
bnd
adc
xor
stos
aaa
add
incl
mov
push
cs
lods
dec
call
xchg
push
push
mov
outsl
rorl
movsb
and
inc
insb
int
outsb
mov
fwait
lret
arpl
mov
stos
or
and
push
mov
xor
and
add
cld
mov
cmpsb
out
add
inc
inc
lds
adc
scas
or
adc
clc
cmp
js
out
mov
inc
test
sbb
dec
adc
push
call
xor
repnz
ss
adc
add
andl
ret
push
pop
sub
ret
fiadds
xor
xor
clc
adc
cmp
stos
pop
mov
lret
dec
ret
or
inc
outsl
mov
daa
push
mov
roll
sbb
jne
push
cmpsl
orl
mov
std
inc
push
dec
mov
pop
jns
pop
inc
pop
push
push
inc
fadd
jb
cwtl
lret
or
in
jecxz
imul
sbb
jnp
pop
data16
mov
sbb
pop
push
addl
pop
aad
push
push
fsubrp
popa
mov
push
fwait
orb
mov
scas
or
ljmp
adc
call
sub
hlt
aaa
into
add
mov
addr16
mov
aas
lret
cmp
scas
xchg
push
ss
cmpsl
cmp
out
lret
xchg
imul
add
cld
aas
xor
shll
xor
cmp
jno
test
push
cs
das
dec
pop
ffree
jnp
fdivr
mov
lock
scas
pop
bound
xchg
adc
and
lcall
inc
cs
pop
inc
ss
ljmp
mov
fsubs
xlat
jl
pop
mov
lock
jmp
mov
pop
popf
inc
mov
or
fbstp
imul
call
cld
ja
pop
pop
in
lahf
adc
sahf
shrb
pop
fdivrs
in
push
inc
mov
inc
and
jg
add
das
flds
or
and
js
inc
cmc
jno
dec
mov
adc
push
lock
jo
mov
outsb
sbb
jp
push
pop
jne
add
ljmp
xor
pop
cmp
pop
or
call
ss
mov
leave
movsb
dec
inc
jns
pop
fistpll
std
pop
fdivrs
push
stc
adc
push
mov
fidivl
push
in
inc
and
push
mov
pop
xchg
or
bnd
negb
imul
cmpsb
ja
or
cmovne
fbstp
mov
sbb
repnz
pop
xchg
adc
xor
xor
fldl
dec
pop
xor
js
mov
pop
jno
insl
popa
push
mov
cmp
mov
outsb
mov
pop
lahf
add
enter
and
sbb
fstpl
push
cmp
mov
mov
aam
mov
pop
sub
arpl
out
scas
inc
fstps
pop
push
sbb
jmp
pop
dec
ja
mov
subl
scas
ss
dec
pop
call
mov
cmp
pop
mov
mov
jl
dec
hlt
test
fcomps
fimuls
pushf
aam
dec
inc
fistpll
arpl
mov
or
das
push
pop
call
test
enter
mov
mov
and
mov
jno
movsb
shll
loop
movb
enter
jmp
pop
inc
xor
pop
lods
mov
leave
arpl
loop
insb
aas
mov
or
cwtl
push
or
dec
dec
and
pop
ss
nop
imul
jecxz
into
lret
fiaddl
pop
shrb
cltd
insb
xor
sub
xchg
scas
fiadds
jge
int
push
jne
and
or
pop
fcomps
cmpsl
mov
lods
jp
decb
sub
mov
ljmp
pusha
sub
repnz
cmp
cmp
or
leave
movb
push
das
notl
or
divl
outsb
out
dec
push
add
subl
out
xor
mov
call
outsb
and
iret
jbe
adc
pop
jne
sbbl
and
jge
cltd
andb
push
mov
lahf
inc
fsubrp
dec
cld
pop
mov
jg,pt
lds
cwtl
sbb
lods
gs
lret
dec
adc
pop
pop
lods
popa
jno
sub
pop
fnstenv
icebp
mov
jp
int
mov
repnz
and
mov
ja
stos
test
push
or
xorl
xor
mov
roll
pop
cwtl
cmp
push
fwait
push
inc
popf
stos
mov
xor
mov
lds
fwait
call
xor
mov
sar
xor
push
test
mov
clc
int
daa
ss
push
mov
ficoml
in
dec
pop
iret
loope
adc
ss
or
lret
bound
sub
push
mov
movb
lods
addr16
pop
fstpl
push
stos
jns
push
pop
xchg
mov
popa
add
sub
fsubs
xor
inc
test
cwtl
mov
in
rcll
cmpsb
xchg
fnstsw
lea
dec
sub
jo
dec
pop
test
jl
in
xchg
and
pop
cmp
mov
and
lock
adc
int
sub
gs
daa
or
mov
jmp
insb
test
icebp
mov
fadds
and
mov
mov
xchg
gs
subl
fisubs
mov
adc
dec
or
xchg
mov
lahf
inc
dec
fcmovu
sub
ds
add
push
pop
xchg
jo
aas
adc
inc
outsl
dec
sarl
iret
sbb
mov
mul
and
seto
lods
incl
xorl
add
frstor
add
push
loop
inc
mov
dec
mov
pop
loopne
dec
cld
dec
sbb
lea
push
das
in
int3
mov
dec
rclb
push
push
pop
imul
add
mov
pop
shlb
or
or
adc
sub
cmpsl
mov
push
mov
outsb
das
adc
sbb
ljmp
mov
ror
out
dec
iret
insb
sbb
mov
shlb
sbb
movups
mov
mov
sub
mov
mov
mov
xchg
dec
pop
aam
dec
jg
loopne
cltd
mov
inc
ret
pop
add
lods
push
sahf
sbb
gs
xor
push
cmp
adc
cmp
sub
mov
fisttps
mov
lds
cmp
mov
mov
adc
ss
cmp
negl
lcall
aad
fidivs
sub
sub
pop
push
xchg
sbb
and
movsb
lds
pop
mov
inc
or
sub
mov
and
in
insl
mov
dec
aam
ficomps
mov
pop
fcmovbe
cli
xor
mov
stc
xor
pmulhuw
cmpsl
enter
and
mov
orl
mov
cmpsl
das
lret
cmc
cmp
cmp
js
pop
fxch
dec
into
int3
mov
pusha
adc
mov
cmp
sub
mov
or
cmp
cmp
xor
cmp
xchg
push
cli
adc
ret
pop
mov
mov
hlt
in
sbb
adc
loope
aam
sub
or
out
fistpl
jmp
pop
push
iret
cmp
jo
mov
pusha
pop
lods
xchg
dec
inc
inc
fwait
mov
mov
pop
lret
in
clc
mov
dec
in
pop
pcmpeqw
out
movsl
movsb
and
or
inc
mov
xor
lahf
test
inc
add
push
aaa
adc
pop
fistpll
xor
je
pop
pop
xchg
xchg
mov
jae
insl
into
mov
cmpsl
adc
sahf
out
sub
xor
sbb
lds
adc
arpl
pop
nop
dec
xor
pop
sub
push
mov
popf
sub
pop
pusha
dec
aam
dec
push
mov
shrl
in
sbb
dec
test
xchg
sti
stos
inc
mov
xor
jg
ds
push
pop
mov
jnp
mov
hlt
cmp
cli
fldcw
movsl
sysret
fwait
and
fisubrl
loope
push
xor
stos
or
ljmp
sub
cmp
test
pop
sbb
ror
std
or
lods
push
nop
sarl
add
jmp
mov
jne
mov
pop
pop
fsubp
xchg
in
and
mov
dec
jbe
push
pop
outsb
cltd
jo
cmp
movsl
cmpsl
out
movsl
sub
stos
push
sbb
jne
aam
sbb
popa
sub
adc
aas
push
loopne
inc
add
mov
shll
enter
negl
sarl
sub
ret
dec
andl
roll
mov
lret
push
pop
inc
mov
imulb
lock
in
lods
jbe
push
stos
xlat
ss
outsl
dec
inc
sbb
pop
aam
jmp
push
mov
push
or
or
add
pusha
ret
push
xchg
andb
pop
dec
push
loop
out
ret
pop
mov
les
das
xchg
inc
xor
mov
and
dec
movsl
out
mov
mov
fisubl
pusha
addr16
sbb
ljmp
test
test
push
xor
xchg
lds
aas
mov
add
xor
push
or
cmpsl
test
aad
dec
or
sub
cmp
add
jnp
xchg
dec
adc
das
gs
pop
add
xchg
lahf
sti
inc
or
dec
pop
sub
jne
js
xchg
push
pop
pop
aad
push
pop
dec
je
mov
lock
pop
fsubs
xchg
xor
cmpsl
mov
xchg
cmp
subb
pop
sete
jne
pop
adc
xor
pushf
push
or
loopne
mov
dec
xchg
xor
int3
and
and
fiaddl
or
stos
cmp
loop
sbb
mov
push
xor
lock
pop
movsb
aas
fcmove
push
dec
and
out
push
mov
mov
xor
adc
dec
jns
dec
pop
paddusw
sbb
cmp
xchg
mov
scas
add
out
sbb
dec
adc
lock
nop
imul
sbb
pop
xchg
out
adc
pop
jbe
xor
mov
push
push
dec
xchg
ss
and
aad
mov
mov
fwait
mov
push
pop
fisttpl
icebp
xor
sti
stos
adc
jmp
cmp
pop
xor
pop
hlt
push
fpatan
xchg
mov
getsec
push
pop
test
or
dec
hlt
inc
xchg
cwtl
sub
fsubr
das
stos
pusha
enter
adc
mov
xor
pop
mov
jle
lahf
and
mov
jecxz
pop
cmc
repnz
mov
mov
call
adc
test
mov
push
push
mov
xchg
into
xor
lcall
mov
inc
insl
inc
out
or
outsb
jb
cmp
pop
imul
dec
pop
mov
cld
inc
pop
aad
in
loop
add
in
fidivrs
test
pop
dec
add
loope
enter
insb
sub
out
je
movsb
scas
popa
lds
fwait
test
add
movsl
movsl
inc
sub
insb
cmp
xchg
inc
and
out
int3
scas
js
jae
or
fisttpl
add
xchg
sahf
cmpsb
shr
ficoms
lds
gs
scas
popw
jo
pop
ret
jecxz
sub
int3
lret
iret
push
rol
xor
xchg
and
lret
scas
dec
adc
mov
fs
jno
adc
sbb
stos
aas
adc
dec
scas
mov
sbb
loope
or
xchg
pop
push
arpl
rclb
push
jg
sub
cmp
jmp
adc
je
or
fs
xor
loopne
test
jl
push
pop
or
adcb
adc
test
or
arpl
xchg
loope
aaa
adc
nop
adc
adc
daa
or
add
add
insb
push
aam
leave
loop
fidivrl
and
and
cmp
iret
jge
inc
aam
pop
cmpsb
cmp
cmp
cmpb
scas
fisubrl
and
add
inc
scas
cmp
psubsw
sbb
sahf
movb
leave
cli
mov
mov
add
sub
mov
adc
jo
psubusw
add
cmpsb
mov
xchg
jecxz,pn
orb
mov
movsl
sub
sbbl
movsb
lods
or
inc
adc
iret
lods
dec
lea
pop
ds
push
cmpl
pop
xor
push
in
scas
dec
movsl
adc
loopne
and
push
mov
hlt
xor
ficomps
add
and
push
inc
cmp
xor
xchg
inc
add
int3
dec
dec
ret
or
loopne
dec
dec
fs
call
out
inc
fidivrl
addb
fiadds
cmpb
clc
add
addr16
jo
clc
dec
cmp
pop
xor
popf
adc
xchg
pop
shll
cmpsl
ja
mov
mov
data16
add
in
xchg
adcl
das
or
ret
or
sub
incl
adc
dec
xor
icebp
or
inc
mov
clc
add
rorl
mov
sub
cmp
lods
mov
out
add
mov
pop
push
adc
inc
adcl
stos
test
push
mov
pop
lahf
fs
adc
inc
fnstsw
or
outsb
xchg
inc
ds
divl
jb
leave
or
ljmp
nop
add
into
les
add
out
mov
push
push
xorb
mov
loop
roll
adc
lods
rorb
xchg
andb
and
xor
cmp
scas
xchg
ja
xor
lods
xor
mov
jns
adcl
or
pop
and
mov
ret
cmc
inc
mov
xor
jb
gs
adc
mov
cmp
cmpsl
mov
mov
inc
mov
xor
cli
push
movsb
stos
push
outsb
push
push
cmpsl
shlb
or
mov
std
loop
dec
jge
mov
mov
dec
aam
or
popa
arpl
dec
lock
or
in
icebp
repnz
shll
mov
fcmovne
jns
loope
inc
adcl
cltd
int
or
push
test
add
jecxz
movsl
inc
pop
dec
int
mov
out
jmp
mov
xchg
sub
mov
and
push
cmpsb
xchg
mov
in
lock
jo
and
sahf
push
xchg
arpl
or
outsb
cmpsb
imul
fsubl
jp
xor
dec
lea
mov
in
fcomps
insl
das
mov
fstpt
jmp
add
stos
cmpsb
ucomiss
rorb
mov
and
sub
shlb
and
das
insb
jno
adc
decl
and
es
dec
mov
dec
xchg
lahf
in
adc
jo
and
lock
xchg
xchg
es
insb
or
or
sub
insl
jno
add
pushf
pop
aaa
and
sahf
xchg
inc
pop
gs
sub
es
lcall
or
in
call
and
dec
ss
test
inc
push
dec
lret
movsl
dec
leave
scas
shld
scas
out
es
jmp
insl
sbb
movsl
loope
cmpsb
iret
aaa
jb
test
or
and
nop
push
int3
icebp
push
movsl
dec
push
test
in
loopne
in
loopne
jecxz
cmp
mov
repnz
nop
sbb
inc
popa
addl
data16
lds
inc
aas
scas
sahf
and
imul
ret
push
xchg
cmp
ss
test
jecxz
addr16
or
xor
and
adc
pusha
addr16
and
loop
inc
pop
rcrl
popa
sbb
add
aas
ret
es
lcall
xlat
mov
clc
jne
push
into
enter
or
sub
js
mov
ja
xchg
and
xchg
push
notb
xchg
fisubl
add
and
adc
adc
push
mov
lcall
out
icebp
and
pushf
andl
ret
rcl
inc
and
and
shlb
mov
sahf
xchg
dec
mov
int
out
das
out
loopne
add
push
je
fidivs
loope
inc
rclb
push
roll
push
xor
es
and
dec
push
test
adc
and
adc
dec
mov
repz
lock
add
ret
cmp
cmp
icebp
sti
cli
les
das
fisubs
push
sub
push
cs
pop
hlt
xchg
in
push
in
outsl
into
push
cmpsb
stos
mov
leave
in
push
sbb
xor
out
data16
inc
les
and
inc
cmp
pop
lahf
jo
jno
hlt
arpl
or
inc
push
push
test
inc
mov
mov
ret
das
fisubs
cld
inc
push
xchg
adc
jno
and
in
int3
ror
les
scas
or
jo,pt
stos
jmp
dec
pop
or
pop
xor
shl
je
pop
fdivr
insb
jecxz
inc
fcmovu
mov
cmp
pushf
and
pop
insb
pop
cmp
xor
scas
xchg
xor
dec
ds
xchg
shrb
insl
add
cwtl
dec
pop
adc
or
pop
dec
scas
jmp
pop
clc
cltd
sub
xchg
push
int
es
imul
iret
sahf
shl
xchg
jl
pop
push
ror
push
arpl
mov
pop
in
mov
out
push
nop
addr16
sub
rcl
mov
and
cmc
lcall
loopne
popa
int
xor
add
test
je
daa
mov
in
jae
adc
mov
imul
jnp
jo
dec
dec
push
lods
dec
dec
hlt
pusha
push
push
or
popf
pop
push
cmc
popa
xor
or
adc
lock
out
ss
fdivp
popa
add
incl
shlb
jo
int3
icebp
pop
xchg
sub
lods
lods
lea
and
cwtl
adc
fsubs
inc
les
xchg
xchg
dec
repnz
xchg
or
xchg
popa
mov
add
mov
inc
add
and
int
or
rclb
bound
xor
cmpsb
je
loopne
dec
fcomps
sub
icebp
pop
out
cmc
test
and
inc
and
mov
push
in
add
les
mov
push
pop
pop
adc
cmp
popf
lcall
or
add
hlt
loop
inc
sahf
jns
ss
dec
into
mov
mov
and
loope
leave
cmp
sti
in
loope
cld
or
mov
pop
mov
xchg
and
dec
mov
imul
or
push
setle
sbbl
mov
and
push
push
mov
fisttpll
sti
enter
add
mov
add
adc
cmpsl
les
inc
push
and
xchg
out
sbb
or
ja
xchg
xchg
les
add
add
jl
push
or
popa
push
add
movsl
in
shrl
and
dec
mov
test
insl
and
je
ja
and
inc
loope
xor
xorb
inc
and
and
ret
movsb
jl
pusha
int3
pop
pop
popf
pop
clc
outsl
movb
add
inc
xor
mov
mov
mov
xor
test
xchg
frstor
mov
rol
lahf
xor
ficoms
inc
mov
or
inc
hlt
addl
jb
jp
cmp
aad
aam
and
inc
dec
test
inc
lds
sbb
push
hlt
and
and
nop
lea
aam
mov
jo
mov
loopne
and
outsb
pushf
push
sarb
into
mov
pop
ret
inc
pop
adc
lods
dec
repnz
cmp
movsb
xchg
pop
repz
xchg
push
cmp
dec
int3
mov
loop
mov
fdivr
lods
sub
ja
ja
dec
jge
sbb
jmp
test
nop
push
add
aad
or
sarl
cmc
cmp
lea
gs
mov
push
jb
repnz
stos
and
cwtl
dec
loop
cmpsb
mov
sbb
cmp
ss
mov
xor
cmpl
mov
call
sbb
ljmp
icebp
cmp
jne
inc
mov
mov
loope
ficoms
leave
sti
aam
and
fisubrl
or
sbb
das
lock
es
push
testb
bswap
add
mov
jno
jne
sbb
cmpb
or
sbb
frstor
push
jle
jle
cmp
daa
stos
inc
and
jmp
jae
mov
sub
xor
loopne
ds
gs
andb
jp
jns
popf
pop
and
popa
jge
mov
mov
fisubl
or
pop
bound
adcb
es
aas
movsl
add
sub
int3
pop
dec
xchg
int3
lock
or
push
cmc
mov
push
push
and
movsl
xchg
and
inc
in
add
into
add
popa
out
adc
xchg
cld
sbb
fstp
add
lds
push
lods
jmp
adc
sub
push
push
or
cs
xor
enter
and
add
add
pop
roll
mov
aaa
pop
loopne
jno
subl
test
jmp
dec
fiaddl
nop
push
js
xchg
and
lods
out
or
mov
data16
pop
mov
bound
adcl
xor
in
in
movsl
cmp
mov
addb
in
cmp
jl
cli
notb
inc
sbb
ljmp
fdivrl
sub
inc
ljmp
pushf
gs
sub
add
xor
dec
aad
loop
pop
test
sub
mov
xchg
or
popl
jl
adc
leave
cmp
sbb
sub
fistpl
das
jle
cmp
or
and
inc
push
cmp
jp
cmc
mov
or
dec
lds
lcall
es
in
dec
lds
cltd
jecxz
in
ds
push
cwtl
jo
int
lcall
xor
push
imul
mov
popa
fidivrs
mov
fldenv
out
addr16
lods
leave
out
popa
xor
in
mov
sbb
dec
xor
xor
mov
xchg
pop
push
and
inc
mov
stos
dec
jb
mov
cmpsb
mov
and
jbe
in
inc
gs
bound
mov
out
pop
cmp
mov
leave
mov
stc
out
pop
xor
shl
and
add
sahf
xchg
data16
pop
push
rcr
fidivrs
push
xchg
lcall
imul
jp
les
out
and
push
mov
xor
mov
ja
popf
sbb
inc
fiaddl
adc
inc
cli
fiaddl
sbb
lcall
and
cld
inc
inc
and
push
popf
pop
pop
add
push
and
es
xchg
fnstsw
jg
dec
in
add
pop
jnp
or
repnz
mov
rolb
push
arpl
inc
mov
aaa
dec
push
pushf
pop
outsb
or
in
movsb
mov
mov
sahf
push
js
pop
ds
push
int
out
push
xchg
lds
and
jae
push
ds
pop
scas
scas
sub
roll
into
mov
add
add
mov
or
dec
xchg
stos
fwait
out
pop
push
data16
dec
mov
setg
lds
and
xchg
xor
push
dec
loop
pop
sbb
jbe
dec
mov
jmp
jbe
fwait
dec
mov
pop
bswap
lock
negb
icebp
pushf
sti
aam
xchg
lds
andb
xor
xchg
js
into
cmpsl
xchg
es
jns
mov
femms
dec
lret
xchg
inc
mov
pop
push
xlat
mov
rorb
cwtl
punpckldq
cltd
mov
push
add
jecxz
out
pop
aad
sbb
repnz
insl
iret
push
dec
dec
push
in
stos
adc
inc
sti
in
mov
jecxz
les
or
or
mov
sub
into
lea
or
loopne
inc
mov
loopne
in
addr16
cmpsb
lds
mov
sub
add
inc
cmpb
fcoms
pusha
addr16
ds
push
cmpsb
mov
add
mov
lea
mov
mov
xchg
jl
lcall
jecxz
lcall
test
pushf
data16
xchg
xchg
jl
mov
loope
into
mov
cmp
pop
movsl
add
and
push
mov
mov
rcrb
mov
dec
pop
pop
pop
nop
jbe
dec
mov
shlb
pusha
addr16
push
cld
movsl
ret
push
xor
ret
push
add
das
incl
outsb
mov
pop
subl
adc
addr16
stc
into
push
movsl
jbe
shll
push
ret
and
jne
cld
stc
movsl
ret
add
xor
pop
mov
cmpsl
cmp
fwait
leave
imull
cs
scas
jae
pushf
fwait
out
in
js
and
mov
push
and
mov
xor
ret
and
push
mov
sti
inc
es
push
outsb
sti
add
test
or
push
out
add
lret
jae
pop
movsb
lods
lods
jmp
sbb
iret
xor
inc
and
imulb
nop
enter
pop
xchg
int
or
aam
pop
cmc
fbld
orl
xor
push
lret
in
cmp
test
repnz
push
fcoms
arpl
inc
dec
pop
xorb
or
rol
push
add
and
lock
gs
arpl
xor
shll
out
xchg
imul
inc
push
mov
mov
loopne
adc
rorl
push
stc
fdivrl
xchg
gs
scas
add
cmpsb
roll
jl
ret
in
repnz
cmp
nop
sti
jae
gs
inc
push
ds
addl
mov
ljmp
in
jge
loope
cmpsl
lret
sbb
xor
adc
sbb
popf
test
lds
out
mov
adc
jno
push
ljmp
daa
add
in
mov
sub
rorl
fsubp
daa
out
in
mov
les
mov
jle
mov
sahf
and
lds
sahf
clc
popa
es
jne
pop
or
repnz
mov
sbb
or
mov
lret
jns
ja
add
icebp
mov
inc
test
mov
adc
in
loopne
and
xchg
push
iret
jae
add
add
leave
imul
sti
jnp
pop
scas
sub
lret
lods
outsb
sub
in
ljmp
mov
mov
jmp
lcall
xor
ret
fisubs
pop
jne
ret
inc
and
push
push
jae
pop
push
nop
test
lret
fsubl
push
ret
or
pop
cmp
push
add
xchg
pop
cli
mov
mov
mov
mov
scas
pop
mov
icebp
out
lea
cli
pop
dec
cmpsb
fwait
test
xchg
mov
stos
mov
jns
out
movsl
sbb
and
repz
inc
movsl
xlat
stc
dec
out
in
cmp
int3
push
outsl
adc
int
mov
out
in
insb
int
out
add
insb
test
or
xchg
or
pop
inc
push
mov
hlt
test
sbb
xchg
cmp
xor
testl
pop
fnsave
aad
movsl
out
and
push
adc
lds
add
fisubs
mov
movsb
in
fiadds
inc
lcall
sub
ret
adc
addr16
cmpsb
inc
loopne
movsb
pop
bound
repnz
das
ficoms
inc
stos
push
loopne
push
and
or
sub
scas
lahf
or
sub
and
andb
cmp
and
test
jg
add
gs
or
es
ret
push
adc
call
mov
in
and
inc
scas
xor
addb
addr16
mov
adc
test
and
sahf
mov
aaa
fs
test
out
loopne
cltd
outsb
pop
in
cmc
and
dec
lcall
inc
aas
push
mull
add
xor
add
into
out
or
mov
mov
dec
lret
inc
cli
xor
xor
adcl
data16
mov
sub
adc
rcll
divl
jge
push
adc
xchg
sahf
fsubl
xchg
cwtl
addl
lcall
mov
lods
icebp
out
dec
pop
fcompl
fistpll
orl
cld
xor
mov
cmpsb
lds
in
xor
sbb
rcrb
add
in
cmp
pop
and
pop
call
add
in
add
jecxz
sbb
hlt
inc
dec
rcrl
add
lods
add
imul
sbb
mov
and
xor
lahf
sbb
lahf
fmull
mov
adc
jns
fnsave
add
sbb
cmpsb
xor
fs
mov
orb
jo
jmp
outsl
sarb
dec
adc
mov
push
sti
std
arpl
filds
sub
out
jmp
sahf
std
inc
xchg
or
mov
mov
mov
fcoml
or
and
xchg
pop
lock
xchg
push
lock
mov
scas
clc
mov
stos
sbb
lds
sub
fcomip
xchg
lcall
aam
inc
stc
xchg
push
jb,pt
into
xchg
push
adc
cmp
mov
pop
fmulp
popf
mov
clc
test
dec
or
icebp
fidivl
loope
das
popa
mov
les
in
dec
je
out
push
cmp
fisubs
xor
leave
ret
test
xchg
mov
lds
mov
mov
add
ret
xor
ficoms
inc
add
fdivs
push
jecxz
push
dec
adc
jno
outsb
inc
add
and
xor
and
mov
test
push
stc
jecxz
in
jge,pt
mov
jmp
and
mov
rol
lcall
xchg
pop
xlat
push
sbb
popa
out
in
decb
lret
incb
push
push
ret
xchg
pop
aad
fidivs
fdivp
mov
jbe
mov
es
mov
adc
jo
adc
adc
loope
cmpsb
out
or
es
push
inc
add
in
pop
fadds
pop
es
mov
rorb
ds
dec
fwait
or
sub
add
dec
mov
sbb
mov
enter
mov
adc
andb
push
push
cld
add
pop
sbb
inc
test
pop
push
mov
or
jecxz
push
mov
movsl
push
push
mov
test
push
and
jne
jb
rcrb
mov
pop
push
lods
adc
sar
enter
or
fwait
aam
fs
das
inc
mov
loopne
out
outsb
push
rolb
or
add
ds
lds
movsb
mov
add
fidivrs
loope
adc
sahf
mov
sub
sub
fs
jo
gs
cmp
out
fiadds
leave
mov
inc
sbb
xchg
hlt
sub
outsl
out
lods
xchg
aas
pop
or
sahf
inc
cmp
sub
cmp
mov
cmp
aaa
push
inc
stos
mov
movsb
pop
fs
es
test
fisubs
ret
jns
add
dec
add
in
les
or
pop
in
cmp
nop
fwait
cmp
movl
cmp
add
pop
lock
sub
leave
int
dec
scas
not
cltd
idivl
pop
mov
test
cmpsb
add
add
nop
lea
das
insl
out
push
mov
pop
jae
and
and
addr16
and
mov
jp
add
xchg
pop
push
mov
mov
dec
cli
data16
out
fists
or
mov
mov
or
cmpsb
nop
das
in
aad
mov
xchg
cmpsb
int3
add
cmpsb
pushl
addr16
pushf
cld
ret
das
jmp
xchg
mov
dec
frstor
aad
ret
es
jo
adc
cmp
push
in
mov
out
data16
hlt
cld
xor
and
add
or
movsb
in
lods
xor
mov
pop
rcrb
and
dec
mov
fdivrl
clc
andl
dec
mov
push
mov
inc
mov
xchg
lods
jbe
imul
pop
push
dec
sbb
imul
clc
inc
ret
push
xchg
inc
pop
inc
mov
sbb
lahf
daa
out
movsb
fisubrs
test
jo
push
daa
out
lods
out
add
arpl
push
cmpsb
xor
or
nop
outsb
vsubps
call
ret
push
pop
ljmp
shlb
push
stos
mov
cmp
xor
lahf
dec
cmp
insb
dec
and
pop
lahf
dec
out
xchg
and
mov
into
idivb
fstpt
mov
and
mov
repnz
jbe
lea
xor
push
sti
and
rolb
xchg
clc
or
push
aam
fdivs
dec
add
sub
jno
push
and
add
arpl
mov
fs
call
movsl
pop
lcall
or
jp
jp
ljmp
jns
movl
xor
out
sahf
and
lret
dec
push
negb
xlat
or
cmpsl
das
xlat
popf
mov
and
mov
sbb
add
orb
mov
daa
push
gs
arpl
movsb
push
xor
adc
lret
lahf
in
call
mov
dec
outsb
fisubl
cmpsb
sub
lods
fadd
push
mov
mov
sbb
jp
add
or
nopl
out
fidivrs
ret
faddl
stos
sbb
sahf
mov
sbb
hlt
stos
iret
and
lret
addr16
ljmp
ret
push
sbb
fdivs
add
ret
mov
xchg
jg
arpl
xor
outsl
lock
sbb
xor
fidivrs
xor
ret
test
jb
inc
mov
rolb
ja
push
ds
int
adc
and
int3
pop
nop
dec
cltd
pop
add
pop
mov
jp
out
xchg
push
loope
cmp
shll
fs
test
xorl
inc
push
pop
xor
mov
movsb
jns
inc
push
and
fisttps
pop
xlat
sub
sarb
inc
or
loopne
mov
sarb
lahf
ret
pop
pop
sub
inc
mov
jl
adc
es
sub
mov
sahf
stos
xchg
cs
mov
mov
mov
and
add
sbb
pusha
outsb
hlt
dec
cmpsb
loopne
mov
nop
sahf
mov
xchg
cli
inc
gs
cmp
cmp
mov
sub
movsl
cmp
in
addb
hlt
add
inc
inc
and
lcall
dec
mov
mov
int
lcall
xor
push
cmp
cmc
mov
mov
pop
adc
sbb
cld
jl
movsl
push
xchg
pop
or
dec
mov
movlps
or
or
and
rorl
icebp
shll
out
or
aas
ret
outsb
sub
shrb
sbb
arpl
aas
add
ret
scas
test
and
adc
out
sahf
sub
frndint
xlat
out
sub
jge
movsl
out
test
rol
push
rorl
dec
sub
inc
pop
hlt
sbb
rcrl
cmp
push
mov
push
or
lds
out
push
pop
test
subl
mov
fnsave
jae
sbb
repz
xor
enter
cmp
mov
iret
mov
mov
pop
rorb
mov
in
call
adc
sahf
inc
push
push
pop
mov
jle
andps
jb
fcomps
clc
dec
push
push
loopne
fldcw
nop
pop
fsubs
mov
xlat
in
imul
mov
sub
push
add
xor
push
inc
lahf
cmp
adc
gs
loop
ja
mov
cmp
imul
pop
sbb
movsl
add
or
in
notl
mov
lds
out
inc
lahf
mov
mov
mov
xchg
lds
pop
fsubl
rol
imul
xchg
call
ret
sbb
gs
das
les
pop
ljmp
push
enter
lret
fisubrl
pop
out
sub
leave
inc
adc
inc
add
enter
sahf
pop
pop
push
movsl
fwait
rcll
insl
xchg
imul
ror
arpl
or
mov
push
adc
mov
xchg
test
pop
sub
sub
loopne
clc
pop
dec
jge
mov
pop
cmp
icebp
scas
and
fidivs
repnz
push
inc
fldt
pop
subb
cltd
cmp
faddl
jge
inc
lea
add
mov
pop
mov
loope
or
loop
lahf
test
addr16
jbe
scas
pop
sbbl
sbb
pop
call
and
lret
add
jne
adc
mov
and
push
loop
push
mov
sub
call
lret
inc
jbe
sahf
insb
inc
and
aam
sbb
sbb
aaa
gs
gs
jp
pop
dec
mov
xor
xor
xchg
jp
dec
cmp
dec
inc
mov
inc
leave
lret
data16
lahf
jecxz
addr16
adc
aad
cmp
mov
lret
add
cmp
pushf
push
push
pop
int
xor
test
call
insl
dec
pop
hlt
arpl
jg
mov
inc
pop
ss
jns
lock
fsts
shlb
lea
jmp
pop
pop
and
pop
xchg
mov
mov
xchg
mov
rcrl
jp
mov
xor
adc
adc
std
sahf
and
out
jle
pop
fdivl
stos
cmp
or
dec
sub
or
mov
outsl
testl
stos
imul
in
js
fsubl
movb
push
fstl
pusha
enter
xor
adc
inc
cmp
xor
addb
pusha
mov
test
rolb
jmp
xchg
mov
mov
aad
lea
adc
dec
push
push
dec
dec
push
pop
and
aam
cwtl
adc
stos
inc
aad
imul
dec
movsl
sbb
rolb
cmp
mov
sub
jg
sub
jae
push
and
sbb
pushf
clc
add
cmp
mov
pop
jno
or
inc
xor
xchg
imul
or
inc
jg
stos
adc
sbb
cmp
enter
lods
andb
shr
sub
std
pop
cld
adc
dec
inc
fisttpl
mov
and
movsb
sbb
inc
loopne
and
and
add
aam
or
add
add
jmp
out
push
es
push
dec
add
popa
mov
ret
out
xacquire
pushf
xor
or
ficoms
sbb
pushf
xchg
icebp
loope
test
ja
lahf
pop
sbb
pop
and
addl
jb
jno
out
loop
cmpsb
mov
pusha
test
leave
xchg
popa
out
push
jnp
inc
frstor
dec
sti
loopne
inc
add
fwait
lret
xlat
add
xor
jmp
inc
arpl
dec
jne
inc
fadds
and
inc
push
gs
xor
push
dec
inc
ret
mov
inc
pop
add
jns
push
and
mov
jmp
in
sub
sti
loope
dec
adc
inc
pop
sbb
push
sbbl
dec
xchg
aaa
ds
xor
shufps
into
and
pop
ds
ljmp
fs
daa
es
movsl
in
xor
cmp
jmp
add
lahf
daa
add
dec
jmp
into
and
mov
lcall
push
fisttpl
enter
enter
mov
mov
das
mov
pop
lods
inc
ret
imul
movsb
mov
xchg
ret
loopne
movsb
pop
mov
int
cs
stos
mov
mov
and
cs
mov
add
ds
es
scas
and
sahf
shlb
inc
mov
data16
shlb
and
inc
xchg
add
add
stos
push
ljmp
add
shl
sub
fists
ds
xor
jb
adc
rolb
daa
mov
jl
inc
sub
push
sub
call
xor
push
jno
arpl
xchg
add
adc
lahf
daa
es
push
mov
add
dec
cmpsb
xor
and
add
adc
arpl
xchg
cwtl
das
ss
adc
xchg
add
stc
fadds
loopne
jg
rorb
adc
stos
loop
push
adc
lock
scas
test
or
mov
inc
add
insl
xor
int3
popa
fsubs
ret
push
test
sbb
jp
fiaddl
fs
adc
loopne
push
adc
inc
fwait
out
xor
lds
pop
pop
add
sub
ret
mov
xor
xor
pop
ss
add
push
xor
ret
gs
mov
loop
pop
jge
xor
ret
or
mov
loop
push
xchg
or
pop
pop
popf
sub
mov
ret
or
push
lahf
push
jo
jbe
jle
lret
pusha
addr16
mov
nop
inc
cmc
sbb
sar
addr16
shl
pusha
incb
adc
add
xor
std
es
add
out
and
pop
ret
jns
in
jle
jns
into
pusha
ljmp
cmpsl
test
add
ljmp
mov
push
movsw
fidivs
push
xor
sar
and
add
je
daa
ret
jle
add
es
aas
mov
in
mov
aad
push
mov
icebp
add
push
lods
xchg
andb
lret
notb
lods
lahf
sbb
mov
mov
cmc
and
lcall
lock
inc
push
in
jge
in
jne
fimuls
dec
add
in
sub
sbb
pop
push
mov
mov
add
mov
es
add
xorl
cld
rolb
and
mov
inc
add
jno
xchg
add
rcrl
add
cmpsb
loop
enter
xor
adc
sub
frstor
movsl
popf
je
pop
xchg
sbb
inc
icebp
dec
xor
cmc
ror
cmp
cmp
rol
xor
mov
xchg
and
push
pop
sub
add
xchg
daa
mov
ret
xchg
mov
or
inc
add
mov
and
fmuls
or
or
in
cmpsb
arpl
out
adc
sbb
loopne
movsb
imul
add
sub
aad
aaa
stos
mov
inc
and
inc
push
out
xchg
in
out
aaa
push
hlt
pushf
pop
xorb
push
test
xchg
pop
lret
aaa
push
arpl
lahf
mov
push
mov
xchg
loop
aaa
ljmp
add
aaa
into
lahf
out
pop
push
stc
aaa
into
lahf
ljmp
inc
mov
outsb
mov
loopne
push
and
sbb
push
lahf
cld
inc
jl
outsb
lcallw
mov
sbb
jl
in
jbe
and
jnp
loopne
movsb
mov
sbb
jl
movsb
push
ss
or
inc
and
mov
sbb
jl
in
movsl
mull
cmpb
lds
test
test
mov
mov
dec
mov
xor
ret
pushf
test
fstpl
das
pop
sub
push
or
cmpsb
xor
test
hlt
xchg
or
pop
sbb
and
mov
or
repnz
ljmp
cmp
mov
cmpsb
ret
push
je
mov
test
ret
loopne
lahf
pop
cmpsb
sub
mov
mov
mov
xchg
sbb
sub
pushf
repz
mov
insb
je
mov
inc
add
mov
inc
add
and
cmc
push
jecxz
add
inc
add
leave
lcall
leave
sub
popf
loop
jne
pop
adc
mov
mov
jns
les
cld
es
push
pop
sbb
add
push
xchg
in
push
mov
jns
out
pusha
mov
and
lea
sbb
in
add
sbb
pop
addl
ret
cmp
dec
or
in
cmpsb
ret
pushaw
pop
testl
aaa
rcrb
call
jb
add
mov
adc
mov
jbe
mov
inc
fwait
mov
pop
inc
es
inc
xchg
mov
cmpsb
adc
push
gs
shll
es
inc
ficoms
std
add
lret
andl
cmp
jne
and
xor
fadds
xchg
mov
je
xor
div
mov
ficompl
push
test
sub
cmp
fadds
pusha
cmp
or
pop
sbb
pop
popf
pop
fldl
dec
aas
xor
scas
push
dec
xor
xorl
sub
dec
add
and
pop
and
mov
je
rolb
push
rcll
icebp
repnz
fcmovnb
dec
and
jle
add
in
push
mov
push
addr16
out
mov
push
inc
adc
mov
loope
xchg
xorb
and
jbe
or
data16
data16
subb
inc
bound
and
and
sbb
and
push
rclb
test
jge
push
imul
xchg
shl
out
movsb
fstpl
cmpsb
test
outsb
mov
lock
dec
mov
mov
dec
dec
mov
das
cmp
jo
fisttps
aas
icebp
add
in
test
pop
add
sbb
pop
mov
push
std
mov
and
gs
push
je
inc
xchg
xor
pop
sahf
lds
jns
sbb
add
pop
pop
das
pop
add
movsb
mov
push
in
jg
cmpsl
adc
add
outsl
pushf
stc
jns
jp
add
and
inc
es
ljmp
loopne
xor
jle
imul
pop
sbb
fdivrs
stos
mov
arpl
ds
xor
and
movb
jle
stc
pop
and
xchg
inc
imul
orb
ret
fwait
movsl
and
jle
xor
xchg
fcomps
ss
mov
add
and
cmp
jp
and
mov
mov
pop
loope
sub
loopne
add
lods
ret
inc
shlb
cmp
cli
adc
std
sbb
cmp
test
sbb
sub
cltd
in
adc
or
jnp
leave
nop
push
inc
arpl
aas
mov
pop
aaa
test
fwait
aad
sti
sbb
jl
popf
dec
and
daa
imul
xchg
dec
test
sbb
pop
icebp
loopne
out
xchg
js
jae
add
add
sarl
ja
and
pop
cmp
sub
push
sub
mov
test
dec
movsb
dec
xlat
cld
xchg
movsl
sarb
icebp
jle
lahf
xor
icebp
test
mov
aas
cld
xor
pushf
imul
roll
mov
mov
mov
test
inc
lahf
add
add
cld
cli
mul
data16
daa
pop
imul
pop
out
fcmovb
mov
pop
inc
adc
or
call
fs
mov
sahf
pop
mov
lcall
inc
int3
jl
jp
mov
pop
scas
lods
js
test
inc
xchg
fwait
xchg
dec
pop
je
mov
outsb
insb
push
pop
pop
pop
push
pop
push
push
push
dec
dec
dec
dec
inc
pop
ds
cmp
xor
xor
sub
sub
xor
push
roll
in
adc
clc
loop
les
sub
mov
aam
fadds
data16
inc
bound
mov
adc
jl
movsb
cwtl
jp
mov
pop
add
in
inc
pop
or
xor
filds
xchg
pop
stc
out
dec
ror
jge
cmp
movups
or
pop
or
pop
cwtl
cmpsl
xor
dec
inc
sbb
push
xor
dec
mov
insl
lret
mov
mov
incb
fsubl
sbb
pusha
sbb
push
sbb
std
cltd
pop
push
and
sbb
cmp
inc
adcb
add
mov
pop
jmp
add
out
rclb
dec
add
sbb
out
push
pop
notl
aam
and
inc
or
cmp
dec
ja
pop
xor
ljmp
ss
cltd
mov
pop
jb
arpl
out
clts
pop
sub
lock
dec
sub
into
pop
test
push
fwait
clc
and
pop
xor
addr16
inc
mov
pop
fstps
cmpsl
pop
insl
push
mov
mov
adc
and
or
inc
push
jge
inc
mov
stc
rolb
adc
inc
dec
jno
sub
mov
cwtl
mov
dec
or
xchg
inc
jns
subl
fadds
cmp
lock
xchg
arpl
xchg
mov
std
sahf
or
sub
sub
es
pop
das
jl
iret
pop
mov
push
ja
push
jg
sysret
call
jp
imul
push
scas
xchg
int3
fwait
ret
adc
mov
add
pop
gs
xchg
fxam
shll
cmp
pop
dec
call
in
movb
jecxz
xor
xor
hlt
pop
cmp
mov
pop
mov
mov
push
pop
mov
inc
clc
xor
or
add
pop
mov
mov
sub
fimuls
mov
cmpsl
jg
rclb
push
mov
sahf
xchg
scas
pop
iret
add
pop
fcomip
mov
int3
clc
iret
aaa
inc
sbb
adc
push
jo
pop
cmp
mov
gs
aas
jmp
leave
aaa
out
and
xchg
addr16
lods
test
int
cs
outsl
insl
ret
xchg
lret
dec
aad
mov
dec
xor
jge
pushf
dec
jmp
xor
test
jle
sti
cmpsb
rol
stos
pop
dec
outsl
push
or
pusha
inc
addr16
cld
ljmp
pop
rclb
sbb
mov
jg
lods
and
mov
cs
push
dec
sub
lods
in
push
scas
and
pop
xchg
xchg
pop
xchg
pop
es
cmp
outsl
sbbl
add
and
lods
adcl
mov
inc
bound
xor
or
sub
pop
xchg
sub
mov
jbe
cmp
mov
pop
test
data16
jno
push
scas
pop
jg
outsl
call
les
jmp
xchg
js
out
mov
sub
push
sub
stos
pop
out
stos
xchg
pop
js
add
cli
sub
mov
pop
cmp
enter
and
int
pushf
cltd
out
mov
js
repnz
mov
pop
leave
popa
xchg
imul
lods
or
xchg
ds
iret
mov
js
orb
mov
mov
pop
jp
je
sub
jo
pop
popf
mov
pop
insl
mov
ja
arpl
pop
ja
xor
push
add
xchg
push
mov
or
push
sub
mov
push
dec
jne
mov
aas
jnp
dec
push
push
shrb
sbb
dec
pop
mov
or
jnp
cmpsl
pop
lds
pop
out
lods
filds
int
xchg
das
js
sub
aam
or
jp
mov
xlat
pop
sub
mov
pop
or
mov
leave
pop
rcrb
sub
imul
mov
pusha
rorl
ds
push
outsb
mov
int3
and
mov
add
cmpsb
xlat
pop
jbe
sub
jnp
lods
adc
pop
into
or
inc
push
jmp
push
pop
stos
and
mov
pop
andb
add
mov
pop
iret
addr16
out
adc
mov
jmp
mov
mov
adc
lcall
add
popa
push
mov
int3
scas
popa
in
cmpsl
or
pop
sub
rcrl
mov
push
push
xchg
pop
ss
loopne
jne
sub
inc
movsb
lret
xchg
jmp
fs
gs
push
and
jo
push
ja
jae
xchg
or
fwait
insl
pushw
lock
xor
jg
gs
jnp
test
fstl
pop
insl
xchg
sub
cltd
and
push
mov
mov
test
cmp
ud2
orb
mov
cmc
sub
data16
dec
addr16
xlat
pop
xchg
cmp
mov
aas
fiaddl
pop
lahf
js
fdivrp
inc
mov
cmp
or
and
sub
decl
inc
or
jl
mov
clc
or
mov
mov
and
fmul
shrl
pop
loop
pop
mov
arpl
cmpsb
clc
mov
mov
mov
lea
pop
dec
std
inc
clc
test
xchg
in
mov
mov
dec
xlat
adc
xchg
arpl
lahf
inc
sub
pop
inc
fisttpll
test
jbe
xchg
cwtl
pusha
mov
pop
sti
mov
out
sub
inc
sub
imul
mov
push
int
mov
nop
xor
pop
imul
mov
mov
pop
insl
jmp
dec
lea
xchg
sbb
sahf
into
cs
or
push
sbb
pop
pop
aam
xchg
mov
fcmovne
lds
scas
outsl
inc
clc
sub
jo
sub
shrb
jmp
xchg
rcr
cmpb
pop
test
xchg
sbb
and
push
movsb
push
mov
rcr
faddp
imul
mov
jecxz
mov
xor
test
test
push
into
cmpsl
sub
and
insl
sub
xchg
mov
or
pop
das
mov
out
xor
lret
mov
jnp
pop
xchg
je
xchg
inc
test
pop
stos
outsl
or
mov
leave
xchg
pop
lcall
cltd
stos
xchg
imul
mov
repnz
jmp
imul
jne
mov
and
cwtl
inc
rorb
pop
jge
dec
dec
xlat
sub
testl
test
or
inc
cmc
push
adc
popf
jg
mov
stos
inc
dec
sbb
xchg
aaa
dec
xlat
fsubs
inc
lret
scas
sub
sbb
loop
pop
inc
push
cs
pop
jae
ja
addl
cmpsb
outsl
aas
nop
mov
cmc
push
sbb
out
dec
mov
je
divb
mov
sahf
ljmp
sbb
lods
rcl
or
cmpsl
adcl
sub
pop
nop
add
pop
js
fildll
dec
out
cmp
icebp
repz
ja
pop
xchg
xor
push
stos
jge
adc
andl
aad
das
out
mov
lods
adc
scas
pop
loopne
dec
popa
and
addr16
aaa
mov
test
gs
jns
or
filds
jae
inc
pop
sub
add
into
pop
lods
jae
xor
inc
int3
sub
cmp
push
sub
mov
adc
loope
addr16
int3
xlat
mov
push
ja
xor
loopne
ffreep
jg
push
dec
aas
repnz
cmp
and
pop
xlat
jo
nop
cltd
addr16
inc
inc
cmpsl
ja
in
jl
je
xor
pop
jp
nop
push
decl
xchg
shrb
mov
inc
addr16
pop
nop
pop
mov
dec
or
roll
imul
and
pop
sbb
pop
imul
cmpsl
push
pop
ret
and
pop
or
mov
stc
xor
push
sbb
sub
inc
cmc
aam
dec
into
inc
int3
or
mov
scas
inc
cmp
sbbl
incb
pop
push
clc
push
sub
popf
test
pop
dec
sti
inc
cmp
aad
xchg
mov
subl
and
pop
pop
dec
lock
xchg
xchg
rorl
inc
lahf
mov
push
leave
mov
xor
mov
push
je
pop
add
mov
pop
cmp
call
pop
and
cmp
mov
enter
std
pop
or
outsl
ret
add
jb
dec
mov
mov
xor
xchg
push
sub
stos
mov
jae
in
mov
in
gs
outsb
lret
into
jb
punpckhdq
shlb
loopne
out
incb
sbb
or
insl
sub
pushl
int3
lock
shrb
pop
loopne
cmp
adc
adc
pop
int3
dec
pop
dec
xor
bound
test
jae
popa
cmp
cmc
xchg
leave
jg
inc
or
push
scas
inc
xchg
test
and
das
dec
jb
sub
test
subb
pop
dec
or
sub
adc
push
push
pop
fwait
lret
xor
shll
sbb
loope
jb
push
aad
mov
mov
mov
pop
adc
fstpl
gs
xchg
stos
inc
cmp
cld
das
in
cmovno
ret
push
cli
sub
mov
mov
dec
jbe
xlat
movsl
inc
cmp
push
mov
fs
dec
mov
sub
inc
jo
mov
mov
jnp
cmp
xchg
inc
or
cwtl
push
pop
xor
sti
mov
jp
push
les
mov
pop
out
xchg
ret
imul
cmpsl
xorl
xor
insb
mov
xlat
cs
push
aad
adc
pop
sub
pop
into
sub
push
dec
xchg
movsl
cmp
js
das
ds
aas
out
sti
leave
xlat
cmc
adc
jb
mov
pop
pop
sahf
pushf
inc
mov
or
mov
sub
inc
lret
and
inc
pop
lods
fsubl
jno
inc
imul
mov
mov
jae
aaa
js
call
cmp
subl
pop
pushl
push
xlat
cmp
dec
pop
dec
aas
jge
jmp
or
cld
cltd
stos
sub
js
scas
movsb
fldenv
push
inc
cmp
lods
jp
pop
push
cmpsl
ss
sub
call
mov
icebp
push
push
jno
cmp
insb
mov
ja
ja
dec
cli
test
sub
xchg
inc
sub
push
jg
aas
insl
jo
pop
aam
push
jp
loopne
mov
pop
arpl
ljmp
jge
push
pop
jp
and
jns
in
cli
mov
lret
sti
mov
jo
out
xchg
mov
repnz
jge
mov
push
adc
pop
in
insl
ret
pop
dec
out
pop
mov
and
pop
idivl
jnp
jns
lods
add
imul
cwtl
pop
push
lcall
pop
or
sub
iret
pop
pop
inc
lret
mov
outsb
adcb
pop
mov
fldt
jno
mov
aaa
cmp
and
pop
mov
into
pop
xor
aaa
lods
pop
jns
mov
jo
sahf
xchg
pop
stos
sarb
arpl
xchg
pop
fisubrl
inc
leave
xor
ja
inc
loopne
inc
lock
stc
in
dec
test
inc
pop
dec
sub
pop
xor
test
scas
bound
pop
adc
add
or
lds
outsl
imul
sti
adc
lods
inc
cltd
jo
pop
push
lds
jl
stos
pop
es
sub
mov
dec
pop
mov
mov
push
call
jle
inc
sub
sub
xchg
ds
in
in
mov
or
aas
in
shlb
xchg
mov
cmp
fists
lds
jb
stos
mov
ficompl
sbb
cmp
pop
imul
pop
jb
and
shr
insl
pop
adc
imul
pop
sub
sbb
bound
imul
pop
cmp
dec
lcall
jg
adc
insb
fisubrl
cld
int
in
pop
add
sbb
cli
push
jnp
rcll
or
clc
inc
dec
sub
xorl
out
arpl
jnp
pop
pop
mov
and
push
lds
imul
addl
sub
insb
push
das
sbb
sti
mov
shll
test
lcall
pop
mov
fs
inc
std
mov
test
adc
jge
jbe
addr16
loopne
jl
xor
pop
lahf
lcall
fmul
mov
inc
or
jmp
pop
xchg
fisubl
lds
jae
stos
mov
cmp
loopne
sarl
std
and
inc
adc
sub
stos
jge
pop
mov
cmp
inc
insl
inc
aas
insb
int3
test
mov
stos
lds
fildl
cli
sub
arpl
xchg
test
mov
sub
pop
aas
rol
xchg
jne
dec
scas
and
push
mov
cmp
negb
or
int
and
pop
xor
push
dec
add
sbb
sbb
push
adc
pop
mov
sbb
push
jae
test
cmp
mov
push
mov
jne
adc
xor
pop
test
pop
pop
dec
shrl
pusha
aad
int3
cs
sbb
jo
mov
insl
dec
xor
ja
test
push
lcall
ja
jno
mov
and
repz
or
lods
aaa
pop
pop
cmp
xchg
cmp
lea
outsl
push
mov
pop
or
mov
aas
pop
ds
jno
dec
mov
dec
inc
scas
inc
out
das
xor
outsb
cmp
jge
inc
adc
lock
push
sarb
mov
inc
mov
loop
mov
push
test
add
jecxz
sub
mov
int3
adc
xor
cwtl
adc
das
add
adc
je
movl
mov
out
sbb
js
inc
shl
push
cmc
or
sarl
mov
jmp
test
push
pop
xor
clc
sub
ucomiss
xchg
enter
and
pop
lcall
call
test
inc
fiaddl
inc
decl
lods
pop
dec
jb
sti
sbb
cmp
add
lea
lods
push
push
add
ljmp
push
bound
fiadds
mov
jns
test
jnp
mov
cmp
loope
pop
das
mov
jl
mov
pop
jmp
cmp
cmp
faddl
jp
pop
jo
leave
cmp
xchg
lahf
lea
stos
rolb
mov
inc
and
mov
sub
sub
fsubr
mov
push
and
stos
xchg
imul
lea
inc
dec
push
adc
test
clc
push
jg
mov
mov
mov
pop
mov
sub
scas
xchg
cmp
cli
ja
jp
je
sbb
dec
dec
lods
cmp
pop
and
mov
mov
stos
push
mov
adc
push
addr16
lea
mov
push
orl
idiv
jo
inc
mov
pop
imul
out
pop
mov
pop
nop
ja
cwtl
cmp
test
xchg
mov
push
pop
cmpl
iret
push
jg
xor
arpl
pop
or
adc
iret
cmp
jbe
jl
test
fstps
addl
das
sub
cli
xchg
push
add
into
sbb
xchg
sub
push
dec
sti
ret
add
sahf
sbb
push
pop
pop
pop
push
gs
inc
cmp
mov
shll
jns
adc
adc
rcl
loope
dec
sub
aaa
mov
test
sub
in
push
and
mov
lret
mov
insb
scas
mov
inc
mov
insl
outsl
pushf
sbb
push
das
sub
gs
loopne
pop
iret
stos
pop
mov
dec
cs
test
es
scas
dec
enter
cmp
sub
lds
adc
stc
stos
scas
pusha
pop
sub
inc
jle
pop
add
lock
in
pop
push
adc
pop
push
push
add
mov
aam
and
pop
inc
push
xor
push
out
out
adc
inc
fs
push
loop
jg
fldcw
stc
dec
insb
icebp
int3
mov
lret
sbb
or
popa
ret
push
imulb
fs
sarl
or
dec
fisubl
mov
data16
enter
cs
loopne
cmpsb
jmp
out
add
std
cmpsl
adc
xor
xchg
rolb
or
in
das
xchg
pushl
pop
sbb
sti
sbb
mov
inc
mov
pop
leave
pop
pop
aad
jno
mov
xchg
dec
pop
pushf
xchg
loop
into
pop
fwait
jne
mov
pop
cmp
jno
sub
call
sub
push
lahf
pop
jne
mov
sub
aaa
scas
pop
out
xchg
aas
shll
bound
mov
out
inc
xorl
mov
outsl
lds
adc
shlb
inc
xchg
inc
pop
clc
cli
lods
sub
cmp
es
aas
rep
mov
lcall
lret
out
movzbl
int
jmp
or
mov
xchg
stc
push
sbb
adc
iret
pop
sub
xrelease
or
sbb
clts
push
jno
in
ja
sti
add
and
out
stos
call
xor
jge
pop
adc
mov
cmp
mov
jae
and
add
outsl
inc
icebp
sbb
dec
adc
cmc
loope
push
pop
addr16
push
adc
push
lods
pop
in
jl
stos
pop
sub
pop
pop
mov
mov
cli
add
test
xor
mov
es
cld
data16
lock
cmp
mov
repz
sub
xchg
test
pop
lret
shll
das
test
movsb
outsl
mov
and
pop
mov
mov
or
filds
dec
mov
sub
jecxz
pop
lea
push
pop
loop
sbb
pop
sub
bound
pop
lods
jp
jg
out
jns
lret
imul
shrb
pop
jne
loopne
xor
pop
movsb
lock
or
insl
ds
jo
push
xor
scas
stos
imul
aaa
jb
push
push
rcll
mov
pop
and
push
dec
inc
xchg
pop
cltd
xor
sub
mov
adc
pop
jg
push
ret
fwait
test
jb
add
xchg
sub
jnp
jl
dec
xor
in
xor
std
pop
mov
fs
rolb
mov
iret
xor
inc
sub
pop
loope
bound
jl
fsubr
mov
arpl
mov
pushf
mov
cmp
pop
pop
push
xchg
adc
pop
in
inc
test
fldl
push
lahf
aas
xchg
pop
mov
mov
pusha
enter
mov
ret
adc
cli
jmp
pop
cmp
pop
mov
inc
xchg
pop
sbb
leave
and
ret
mov
gs
and
xlat
or
push
mov
xor
xlat
pop
push
scas
dec
xor
sub
std
inc
lret
adc
and
push
mov
push
pop
insb
push
cmpsl
loopne
clc
xchg
jo
adc
les
jp
outsl
inc
insb
jl
or
in
adc
pop
xchg
hlt
or
xor
pop
lods
cmp
cwtl
jge
pop
dec
pop
pop
aas
xchg
mov
and
xchg
fistps
in
sub
ljmp
loopne
dec
arpl
push
pop
jle
jle
outsl
push
ja
test
sub
inc
inc
sbb
pop
test
loope
push
negl
and
or
cltd
sub
dec
pop
ja
movl
xor
push
mov
or
add
in
pop
sub
sbb
insl
int3
fwait
dec
cmp
fildll
jge
inc
jnp,pn
or
xor
sbb
xchg
stos
pop
jae
lea
inc
pop
ss
sti
cmpsl
mov
pop
jg
into
inc
xor
loope
inc
lret
cs
sbb
push
dec
push
xlat
mov
ja
adc
sbb
mov
ror
lret
sub
int
cmp
xchg
xchg
mov
insl
popf
inc
push
xchg
jns
and
or
and
fisttpll
rcl
adc
cmpsl
sub
xchg
in
popa
xor
cli
pop
xor
pop
pusha
mov
scas
push
lods
data16
lret
sub
cmp
into
xlat
stc
dec
outsl
pusha
ljmp
mov
dec
test
test
sti
pop
mov
sub
jp
cpuid
mov
mov
out
mov
dec
inc
cmp
inc
push
aaa
pop
sub
mov
mov
xchg
loopne
pop
sub
ret
out
ficoml
insb
fwait
sub
jne
lods
dec
popl
js
hlt
pop
add
lret
cli
inc
clc
dec
pop
enter
sarw
xchg
fwait
sbb
int3
lcall
imul
xchg
cmp
adc
push
dec
test
cmpsl
sbb
divb
imul
xor
cld
mov
fdivr
bound
add
lods
ja
push
sub
out
aaa
decl
mov
adc
fbstp
in
pop
sub
mov
and
sub
stos
jmp
imul
push
pop
sub
lods
dec
xor
stos
jge
hlt
cwtl
pop
mov
push
xor
sub
lcall
xchg
icebp
dec
pop
mov
lahf
mov
sbbb
scas
cmp
xchg
push
xlat
nop
mov
cmpsl
pop
std
fwait
scas
pop
ja
dec
pop
dec
mov
into
inc
inc
sub
das
dec
loope
pop
subb
sub
stos
xor
inc
repnz
rcrl
cwtl
sub
push
mov
mov
xor
jl
push
inc
out
dec
pop
mov
xorb
pop
jg
and
aas
cmp
imul
test
inc
bound
cwtl
cmp
orb
and
ljmp
mov
push
xor
ss
xor
jmp
jl
mov
xor
dec
test
ds
lds
mov
pop
insl
jo
adc
xor
sbb
add
xor
jecxz
ja
in
sub
pop
or
xor
mov
insl
in
dec
je
cmp
mov
adc
mov
shlb
and
std
jge
sub
push
and
imul
loopne
mov
add
cld
arpl
and
test
add
jle
mov
adc
les
push
testb
loopne
cltd
test
pusha
and
ror
loopne
hlt
fistpl
add
pushf
or
or
push
call
mov
adcl
arpl
pusha
sbb
mov
rclb
and
and
cmpsb
pop
filds
mov
xor
repnz
jns
xlat
in
lds
hlt
push
int
and
pop
js
cltd
cmc
out
data16
cmpsl
addr16
xchg
faddl
cwtl
add
pushf
lods
jp
repnz
cmp
popf
movsb
jp
cwtl
and
jns
shlb
int3
sbb
and
mov
fistpll
popf
mov
xor
je
mov
jle
std
sahf
mov
bnd
cmp
fists
into
jns
andl
movsb
cli
add
ds
neg
call
divl
sbb
pop
in
in
jecxz
jns
std
and
mov
js
or
hlt
in
jge
cmp
out
data16
cltd
cwtl
cmpsl
sarb
push
movsb
cld
gs
iret
clc
sbb
jge
xor
add
es
add
fcom
repnz
loop
push
inc
outsb
push
pop
inc
inc
and
int
and
mov
call
inc
in
out
mov
jnp
xchg
rcr
add
ss
pop
pushf
pop
mov
cmp
mov
std
xor
aaa
aam
xor
stos
sbb
pop
sbb
cmpsl
mov
sahf
add
push
dec
push
sbb
push
rolb
add
add
inc
or
sub
dec
out
mov
push
aam
add
inc
or
or
or
and
sbb
cwtl
add
push
mov
and
mov
push
daa
ljmp
inc
lds
popa
cli
xlat
push
mov
dec
sbb
add
mov
mov
mov
inc
sub
lcall
inc
sbb
xlat
fdivs
mov
pop
lcall
fisttps
cltd
cli
and
rcrb
jnp
adc
inc
sbb
ret
mov
cmpsl
lret
jg
stc
int
inc
or
pop
shr
add
cmp
mov
inc
xlat
mov
lcall
cmp
dec
cmp
cwtl
popa
jmp
sbb
mov
lahf
and
fmuls
imul
negl
mov
outsb
sbb
inc
loopne
stc
stos
dec
imul
sbb
dec
jns
outsb
and
xor
add
lds
iret
sbb
ljmp
and
cmp
pop
mov
mov
in
and
cwtl
pusha
scas
xchg
inc
mov
or
jecxz
cmp
das
add
mov
mov
pusha
pop
dec
test
mov
into
cltd
sbb
test
push
and
sbb
fwait
jecxz
jne
and
loopne
add
push
loopne
test
add
jo
push
inc
rcrb
sub
pop
pop
or
nop
mov
fistps
stc
xchg
movsb
fsubs
negl
jbe
push
das
sub
push
ds
imul
jp
arpl
pop
movsb
push
add
sbb
rclb
add
inc
mov
sti
movsb
push
jl
mov
pop
xchg
repnz
fdivs
enter
sbb
sti
call
jbe
test
sahf
add
cmp
and
aaa
shrl
mov
mov
sbb
jge
lcall
dec
icebp
ss
loope
jg
push
inc
lcall
mov
push
sbb
mov
xchg
iret
dec
jge
push
push
xlat
sub
cmc
mov
lds
cmp
std
int
sti
fwait
mov
mov
add
lret
jg
sub
in
mov
in
cmc
cmovg
outsl
jp
xchg
ss
call
mov
add
cmp
fstps
lods
jo
shlb
adc
movsb
mov
shlb
fstpt
jp
dec
mov
mov
mov
cmp
lret
jae
sahf
out
jbe
and
enter
adc
pop
lret
mov
mov
inc
data16
dec
mov
ja
push
and
inc
out
aaa
mov
fwait
lock
cmpsl
data16
aam
add
cmp
out
xlat
inc
add
mov
add
add
mov
clc
mulb
hlt
addb
xacquire
fsub
pop
add
in
addb
pusha
pop
call
mov
ds
jecxz
into
pop
int3
lret
mov
mov
pop
jp
mov
lods
stos
add
out
test
loope
fbld
into
aaa
daa
fcmovbe
daa
fstps
lcall
pop
lods
rcrb
fldcw
stos
sbb
pop
lods
rcrb
fcmovu
add
fldt
data16
insw
jns
out
inc
add
sub
pop
loop
daa
pop
inc
loopne
movsb
clc
pop
es
ret
fdiv
out
rolb
fmuls
inc
fs
mov
bound
addb
pusha
jle
inc
in
mov
and
jl
js
pop
inc
xchg
jbe
sbb
xchg
nop
xlat
leave
out
ds
and
dec
jo
jns
push
sbb
sbb
adc
adc
push
or
or
std
pop
sti
stc
div
repz
out
in
pop
jmp
out
fcmovnu
pop
xlat
aad
ror
int
leave
das
cmpsl
test
loope
xor
and
pop
sti
xchg
in
cmp
repnz
fprem
subb
stos
or
icebp
cmpl
cmpsl
push
arpl
pop
dec
xchg
sub
call
ret
pop
in
mov
jb
xchg
icebp
mov
inc
jnp
pop
inc
push
cmpsl
insl
pop
sbb
and
clc
test
fbld
sub
push
stos
inc
mov
out
mov
ds
leave
push
pop
sbb
cmp
mov
dec
aam
jl
mov
in
cmp
clc
dec
and
mov
pop
cmp
lods
cmpsl
nop
xchg
mov
jg
pop
fs
sarl
pop
add
sbbb
pop
mov
pop
enter
pop
adcl
dec
jns
fs
mov
inc
insb
leave
jne
bound
jle
lods
fdivrl
scas
ds
stos
and
sbb
jno
or
bound
adc
xchg
jne
and
pushf
pop
inc
andl
inc
loop
dec
ds
out
lock
mov
pop
ja
sub
lret
push
xchg
hlt
adc
or
add
inc
out
lret
lds
push
imul
in
xchg
inc
in
hlt
mov
cmpl
stos
loope
or
pop
movsb
outsb
xchg
jl
in
fs
inc
add
and
mov
mov
mov
xchg
xchg
and
sub
mov
pusha
push
inc
or
pop
scas
enter
sub
jbe
lea
mov
es
js
hlt
test
jmp
mov
pop
iret
jns
stos
loop
pop
and
cmp
rolb
mov
ljmp
pop
mov
and
pop
sub
mov
addb
jp
mov
push
fwait
pop
xchg
mov
icebp
fs
das
adc
lea
pop
mov
mov
jp
repnz
pop
push
xchg
sub
loop
jmp
je
jb
in
push
jns
cmpsb
lret
cmpsl
mov
inc
jle
out
adc
xchg
lcall
pop
bound
jecxz
xor
pop
ja
push
repz
mov
push
mov
fsubl
ret
jae
lahf
push
adc
xchg
mov
xor
leave
xchg
rolb
pop
push
inc
rcrl
pop
push
sahf
xor
push
call
scas
ss
or
adc
pop
scas
dec
gs
push
and
push
cmovs
dec
xchg
mov
jns
mov
pop
pop
pop
push
add
test
pop
ret
mov
in
pop
mov
out
xchg
loop
xor
xor
xchg
add
cmp
test
xchg
jb
fistpl
pop
fdivp
lcall
push
xchg
pop
imul
out
repz
js
mov
sub
mov
loopne
enter
adc
loop
push
xor
push
mov
dec
cmp
mov
mov
dec
sar
sbb
jbe
iret
xorb
mov
pop
pop
add
repnz
stos
jnp
std
push
mov
cmpb
adc
xchg
je
push
push
test
fucomp
adc
pop
xchg
test
pop
in
dec
dec
hlt
push
fdivrs
inc
pop
adc
cmp
push
dec
and
jp
pop
popa
aas
sbb
or
out
cmp
pop
imul
lds
jbe
cmp
lcall
pop
hlt
and
aam
rcrl
pop
ret
lock
push
pop
fstpl
push
dec
loopne
add
lea
pop
fcmovnbe
mov
ja
ds
addr16
pusha
inc
mov
lods
stc
pusha
pop
sub
mov
lahf
mov
dec
arpl
cmc
pop
fisttpl
push
shl
pop
or
fcmovu
shr
mov
mov
push
mov
mov
inc
sub
fsubl
and
enter
fisubrl
mov
xlat
roll
sub
dec
aaa
xor
pop
or
icebp
jns
and
lea
ret
inc
je
fimuls
mov
jmp
add
cmpsl
xlat
js
jns
pop
jbe
sbb
iret
lcall
add
icebp
pop
xor
dec
sarl
cmpsb
push
pop
sti
and
push
xchg
jne
cld
out
roll
into
inc
or
push
push
jno
lods
out
adc
cmc
and
cld
jge
lock
pop
pop
push
adc
rol
pop
jmp
fmuls
ja
pop
pushf
pop
xchg
loopne
fwait
sub
insb
or
lcall
test
aas
sbb
orl
jle
sub
nop
xor
push
adc
es
testl
aam
inc
pop
cmp
adc
mov
inc
dec
xchg
fwait
pop
sbb
int
sbb
mov
adc
jg
out
pop
mov
in
into
mov
fs
dec
xchg
sub
inc
sti
pushf
int
or
xchg
ljmp
pop
pop
pop
push
jo
pop
stos
mov
lret
mov
pop
movsb
in
xchg
sub
ret
flds
scas
cmp
cld
inc
adc
cmp
iret
dec
data16
std
cli
andb
jmp
xchg
xor
cmp
stc
data16
loope
xchg
pop
push
sbb
lret
out
in
mov
mov
cmpsb
pop
loope
movsb
hlt
aam
lods
xchg
sub
jle
jne
scas
jge
adcl
fisubs
stos
dec
aaa
outsb
xor
movsl
das
mov
aad
movl
pop
pop
in
pop
fdiv
xchg
jge
pop
adcb
push
push
mov
inc
xor
jne
or
loope
pop
aaa
testb
mov
jnp
jmp
roll
push
cmpsb
pop
xchg
out
cmp
xor
pushf
nop
pop
icebp
jg
mov
xchg
cltd
cmpsb
mulb
imul
dec
insb
imul
cmp
pop
sub
or
push
mov
inc
push
jge
gs
mov
maskmovq
mull
outsb
sub
jne
inc
shrb
pop
mov
aaa
sbb
imul
mov
lea
pop
neg
mov
push
imul
mov
sbb
clc
outsl
inc
cmp
xor
call
pop
mov
fprem
ret
mov
gs
ret
pop
loopne
lock
fadds
cli
adc
or
inc
cs
or
ja
lock
jmp
mov
popa
outsb
outsl
mov
stos
scas
addb
push
js
add
pop
cli
xchg
pushf
lods
mov
outsb
xlat
add
pusha
mov
mov
pop
push
push
push
mov
jb
cmp
push
pop
cmp
jmp
cmovne
pop
in
jl
loopne
lods
jb
pop
pop
in
lea
push
inc
push
mov
dec
mov
fs
xlat
pop
sbb
or
mov
push
inc
push
arpl
hlt
jae
call
pop
sub
and
cmp
sub
fs
sub
lret
shll
add
push
test
inc
push
push
add
ljmp
lock
jge
inc
stos
fsubrl
mov
pop
xor
jns
sub
pop
ret
jp
insl
mov
jae
test
inc
int
inc
ljmp
push
mov
mov
test
add
dec
scas
jbe
lock
xchg
lds
lcall
pop
scas
call
sti
dec
arpl
add
dec
push
or
dec
int3
adc
xor
pop
fldenv
xchg
cltd
imul
add
pop
insl
cmp
sbb
jg
aam
pop
in
sub
inc
push
jmp
ret
mov
dec
mov
ds
pop
shrl
ret
nop
cld
pop
fidivs
lea
ds
push
imul
sbb
xchg
cltd
and
js
popa
add
adc
pop
jae
pop
ror
insl
scas
cmp
dec
bnd
cmpsl
pop
pusha
mov
insb
fdivrl
dec
pop
lahf
xchg
xor
push
pop
dec
cmpsl
shrl
testb
cmpsb
push
xor
out
push
sub
xor
jmp
mov
push
mov
xor
pop
and
movsl
outsb
pop
jecxz
and
inc
ds
fbld
sbb
sub
mov
push
jge
jnp
mov
fldl
dec
pop
jmp
push
push
es
int
pop
sahf
lea
ror
cmpsl
fcmovu
xchg
pop
adc
cmp
dec
dec
fbstp
test
adc
pop
aaa
inc
nop
outsb
andb
xor
lods
std
movsb
js
cmpsb
pop
jb
pop
aam
int
movsl
mov
lea
pop
insl
iret
orb
call
pop
popw
aad
sbb
cmp
cmpsl
mov
imul
xchg
lcall
icebp
addl
mov
mov
xchg
push
sti
andb
sbb
pop
xchg
mov
mov
jae
cld
out
repz
call
movhps
sarl
mov
sub
pop
fmuls
call
scas
mov
movsl
mov
test
decl
pop
cmp
cmpsl
pop
jge
loopne
xchg
push
sti
pop
pop
sahf
add
roll
insb
ret
mov
cmp
push
add
mov
test
or
xlat
add
icebp
sti
push
cmpl
mov
nop
ljmp
gs
pop
mov
pop
das
lahf
dec
lods
sbb
addb
iret
pushf
or
test
cmpsb
aaa
mov
test
dec
sbb
or
cmp
in
pop
fistpl
idiv
bound
pop
aad
test
rcll
aam
decb
xchg
fldl
imul
sbb
lret
popf
push
mov
xor
int3
pop
xchg
pop
sub
jnp
xor
fmull
inc
pusha
mov
loopne
aam
dec
call
sub
cltd
pop
fwait
xor
push
enter
mov
icebp
adc
out
lods
imul
inc
sub
sub
mov
jecxz
into
mov
cwtl
int
and
fadd
or
in
pop
jmp
sub
dec
popa
mov
jge
dec
push
in
pop
push
mov
push
sarl
mov
mov
pop
jl
mov
jae
sti
lret
sbb
fadds
xorb
outsb
ljmp
movsl
sbb
stos
js
mov
mov
inc
jae
sbb
pop
jmp
push
sbb
cmp
push
sub
scas
lcall
mov
out
mov
lret
pop
outsl
pop
pusha
and
in
inc
cmp
and
push
popa
mov
sub
mov
outsl
add
pop
adc
pop
lcall
jl
addr16
jbe
push
outsl
ds
out
pop
pop
inc
cmp
ss
ljmp
push
popa
cmp
rcll
in
pop
inc
and
popf
pop
mov
sbb
popa
mov
sti
pop
pop
inc
jmp
stos
ljmp
jae
xchg
push
adc
repz
dec
cwtl
adc
cmp
pop
sbb
not
pop
js
push
in
inc
sbb
scas
mov
hlt
mov
mov
arpl
popf
lds
cmpl
rolb
outsb
sub
adc
sub
mov
xchg
aas
xlat
fwait
pop
mov
inc
xchg
pop
leave
push
pop
cmp
inc
roll
popa
sub
mov
or
cmovbe
mov
sbb
mov
inc
out
jns
dec
pushf
pop
mov
mov
lods
mov
dec
and
hlt
cmp
das
pop
addb
ja
push
mov
leave
jmp
pop
je
fidivl
ret
and
mov
dec
stc
sarb
lods
mov
mov
jge
pop
hlt
adc
adc
shlb
push
fbstp
pop
stos
fstpt
hlt
cmp
inc
cmpsb
add
jle
shl
repnz
push
add
push
pop
sbbl
in
push
xor
jp
xchg
inc
sub
push
pop
xchg
sbb
pop
dec
mov
ss
adcb
hlt
std
enter
rolb
mov
xchg
lock
mov
and
pop
push
cmp
out
or
stc
pop
jge
movb
inc
les
or
xchg
bound
pop
outsb
mov
push
insl
aas
pop
in
push
cs
pushf
xchg
call
or
shrl
pop
fcomip
mov
arpl
sbb
push
pop
or
stos
repz
jbe
mov
insb
popa
and
adc
mov
pop
mov
and
xor
add
lods
pop
jp
gs
push
leave
inc
shll
lahf
push
in
push
inc
sbb
das
mov
pop
pop
imul
add
xlat
aad
mov
cld
cmpsb
addb
pop
pop
aam
push
pop
subl
xlat
ret
pop
and
pop
mov
mov
jl
movl
jecxz
repnz
add
jl
test
pop
sahf
clc
mov
iret
scas
cltd
pop
dec
mov
and
clc
and
imul
outsl
jne
push
or
adc
pop
in
bound
mov
xchg
inc
pop
fisubrl
sub
xor
int3
jle
pop
mov
push
mov
bsf
sbb
enter
pop
outsb
movsb
mov
add
mov
adc
jge
lret
int
dec
mov
nop
pop
hlt
fsubl
pop
mov
out
scas
add
pop
push
pop
loope
sbb
pushf
pop
pop
push
jnp
sbb
aaa
sbb
jge
mov
je,pn
xchg
xchg
and
push
shll
or
fsubs
test
cltd
pop
jns
sub
xor
dec
inc
or
cld
adc
pop
mov
inc
pop
mov
xchg
xchg
inc
add
add
inc
adc
add
push
push
dec
pop
dec
ret
stos
les
mov
mov
sub
xchg
pop
xchg
cwtl
and
jl
pushf
mov
lods
jg
or
pop
push
popa
push
sub
dec
mov
jo
data16
flds
inc
rclb
dec
sub
push
pop
sti
pusha
insl
push
call
repz
push
sbb
icebp
lret
xlat
add
inc
cmc
pop
xor
fimuls
mov
adc
lret
push
ja
xchg
sub
jl
xchg
pop
mov
jnp
lea
lods
inc
loopne
pop
scas
dec
out
cwtl
push
insl
imul
movsl
inc
imul
or
enter
mov
pop
das
mov
addb
in
pop
jno
test
stos
loopne
xchg
filds
jnp
imul
pop
movsb
lods
cwtl
mov
clc
xchg
add
push
cmp
mov
xor
loopne
and
es
div
cmpsb
imul
or
out
push
jnp
daa
or
fidivrl
je
pushf
rcl
cmp
std
aas
jnp,pt
and
pop
mov
inc
push
push
outsl
inc
or
push
mov
add
ja
idivb
and
pop
in
xchg
stos
out
mov
add
dec
xchg
xor
lea
adc
fwait
pop
je
out
arpl
xchg
push
outsl
mov
addb
fnstcw
adc
mov
pop
jns
ret
cwtl
xchg
inc
push
mov
in
lea
pop
mov
mov
dec
aad
popf
pop
mov
js
lret
push
cltd
inc
sub
pop
mov
pop
stc
loope
stos
inc
out
push
sbb
sub
imul
aaa
xchg
lret
arpl
cli
in
xchg
mul
mov
arpl
xor
stc
push
cmp
movsl
js
cmpsl
mov
shll
pop
or
push
cwtl
nop
bndldx
ja
pop
pop
push
insb
lds
ljmp
xchg
sbb
movsb
imul
rcrb
or
xchg
stc
pop
pop
mov
js
popf
pop
xor
jne
movsl
sub
cwtl
add
roll
mulb
lods
mov
icebp
dec
test
mov
and
push
xchg
clc
push
das
arpl
pop
outsl
jp
cmp
stc
pop
pop
cltd
dec
bound
movsb
in
je
and
fistpll
cmp
xor
jo
jns
cli
rcrb
adc
dec
lods
outsb
pusha
sub
roll
and
mov
fistpll
xchg
ret
pop
aam
cmpsl
lods
int
dec
lret
lcall
push
out
jg
sarb
jo
cmp
cmpb
test
scas
nop
mov
xor
mov
in
in
pop
dec
fisubs
aaa
push
bound
inc
adcb
imul
mul
mov
xchg
scas
or
mov
fistl
movsb
leave
aas
lods
lret
lds
lcall
rorl
aaa
outsb
pop
in
ss
pop
ret
push
sbb
scas
mov
cld
and
mov
push
hlt
loopne
sbb
dec
gs
movsb
pop
sbb
jecxz
inc
cmp
sarl
xor
sub
jl
pop
adc
scas
cmp
pop
mov
mov
adc
fcomps
mov
adc
cltd
mov
sub
pop
lds
iret
sbb
xor
rcrl
and
jns
shlb
push
ljmp
inc
adc
jg
pop
or
pop
cmp
movsl
xchg
call
out
mov
jne
add
mov
es
stos
cwtl
test
push
xor
xor
pop
mov
hlt
push
fadds
aaa
mov
clc
and
adc
aam
pop
add
xor
or
out
jg
mov
decl
mov
out
adc
repnz
cltd
popf
mov
xor
jo
mov
rorb
fildl
dec
sub
aad
cmp
imul
shll
ja
push
inc
sub
imul
pop
dec
lods
je
xlat
leave
push
push
push
incl
mov
push
inc
dec
gs
sbb
std
movq
divl
xchg
xor
mov
stc
pop
sbb
dec
seto
jmp
sub
movsl
sub
pop
add
cmp
cmpsl
mov
cmp
leave
sbb
les
and
xchg
fsubrs
xor
aaa
or
loopne
pop
imull
push
add
scas
xchg
insl
jle
in
xchg
ss
lock
fldl
mov
out
push
gs
lea
sbb
jns
sti
xor
inc
ds
mov
push
popf
push
cltd
movnti
mov
sub
fisubrs
pop
mov
push
inc
push
dec
lock
outsb
das
imul
mov
xchg
pop
aaa
in
in
add
cmc
xorl
movsl
cmp
adc
mov
pop
jnp
cmp
int
mov
pop
cs
jecxz
lcall
aaa
lods
add
arpl
adcl
ds
push
sub
inc
mov
mov
xor
add
out
inc
inc
sub
push
cmp
aas
in
pop
movsl
jne
jp
push
and
inc
add
inc
repnz
pop
and
test
mov
xchg
adc
lds
in
test
add
incl
flds
push
xchg
orb
je
out
inc
or
push
jne
notb
negl
in
or
inc
stc
jge
mov
lahf
shufps
push
adc
lock
pusha
jg
mov
ret
or
lds
sub
stos
out
or
xorb
xchg
pop
test
mov
in
inc
xor
push
dec
in
dec
rolb
mov
addr16
fiaddl
mov
inc
mov
aaa
inc
or
mov
out
pop
sub
dec
pop
xor
jo
movsl
mov
mov
idivb
mov
jmp
stc
mov
outsb
out
mov
pop
mov
pusha
dec
mov
pop
xor
pop
sbb
adcl
pop
sub
stos
pop
mov
int
xchg
jge
mov
aas
mov
sbb
sub
adc
xchg
inc
lods
push
test
push
gs
adc
and
dec
mov
mov
das
int3
lret
cwtl
pop
xor
into
inc
inc
aaa
sub
xchg
pop
cmpl
pop
push
dec
inc
dec
negb
pop
fcmovb
cmp
mov
test
pop
arpl
bts
jmp
pop
fdivrs
mov
mov
mov
push
mov
adc
cs
or
jnp
jg
pop
xchg
scas
pop
lret
out
inc
insb
jmp
jo
xor
aad
push
xchg
xchg
and
adc
adc
in
pop
adc
xchg
int
imul
jmp
push
aad
mov
cld
rorl
sub
repnz
push
dec
orb
dec
out
pop
or
push
inc
pop
ds
movsl
je
sbb
add
insb
stos
popf
aaa
or
addr16
mov
pop
inc
mov
sbb
jbe
fstps
push
xchg
add
lret
in
loope
inc
jb
push
dec
or
fmuls
movsl
js
and
std
sahf
loopne
fldenv
push
pop
inc
enter
stos
lea
sbb
sbb
pop
xchg
test
stos
jns
sub
lret
orb
call
aaa
int
rcr
add
pop
jg
fmul
inc
repnz
pop
jl
sbb
xchg
inc
mov
xor
cs
cltd
sub
mov
arpl
mov
or
xor
pop
call
addl
mov
mov
mov
pop
dec
push
xchg
lret
dec
in
inc
or
mov
ret
cs
cmp
ljmp
mov
addr16
push
call
push
scas
push
cmp
sbb
sub
pop
and
xor
insl
pop
add
stos
dec
ror
dec
dec
push
imul
push
jnp
xchg
dec
cli
arpl
adc
pop
cmovnp
jns
push
out
add
das
add
add
cmpsl
push
stos
mov
pop
push
xchg
sti
scas
adc
aam
cmp
hlt
rolb
fcoms
outsb
fs
mov
mov
popl
sti
inc
and
std
mov
jle
repnz
adc
pop
mov
dec
mov
aas
pop
outsl
mov
mov
dec
or
push
push
fadd
dec
pop
test
mov
inc
or
es
adc
mov
aaa
pop
popa
cmpsl
mov
jmpw
inc
jns
hlt
stos
mov
cmp
mov
mov
inc
mov
sub
jbe
lcall
xchg
cwtl
adc
pop
push
je
or
add
sti
and
popf
cwtl
movl
lret
push
pop
push
mov
sbb
lods
mov
mov
xchg
mov
jnp
call
aam
dec
dec
mov
loope
lods
cltd
in
ss
and
sti
mov
mov
das
push
xor
sub
pop
andl
mov
jl
js
sub
out
push
mov
jp
mov
sbb
dec
pop
insb
fwait
pop
mov
roll
sbb
jo
test
push
xor
rcrl
jecxz
loop
xchg
add
mov
xor
add
lret
scas
dec
popl
imul
push
sbb
xor
scas
hlt
adc
cmc
mov
out
out
inc
cld
sbb
rorb
inc
pop
addl
pop
push
pop
push
fimull
fmuls
dec
arpl
pop
dec
sti
jnp
stos
rclb
jmp
cmpsl
arpl
or
movl
xchg
mov
adc
jb
or
pusha
dec
mov
fs
test
pop
testl
addb
xchg
aam
jl
adc
or
cmp
jo
dec
push
push
sarl
outsl
out
cmpsl
adcb
mov
int
scas
shrl
xor
imul
xchg
test
mov
xlat
or
int
mov
stc
leave
inc
jae
in
sub
cmc
cwtl
fiaddl
mov
imul
push
mov
pop
cld
out
pop
insb
pminub
and
mov
aas
cmp
pop
mov
xchg
pop
insb
fbstp
dec
jp
inc
addl
jle
cmp
and
inc
pushf
lahf
jns
outsl
sub
mov
popw
mov
stc
ja
pop
push
jb
aad
test
and
xcrypt-ctr
cmpsl
sbb
popf
lea
xchg
iret
fisubl
pop
inc
mov
nop
cwtl
xchg
addr16
cwtl
jmp
adc
dec
adc
pop
inc
xlat
push
sub
push
lods
mov
je
loope
sbb
push
pop
push
insb
testl
addb
mov
mov
aas
push
shrb
jl
mov
adc
mov
inc
imul
lret
inc
ja
outsl
fistps
xlat
mov
lcall
rolb
mov
loopne
pusha
xor
mov
out
pop
fabs
scas
sub
js
fmull
cmp
mov
ja
es
pop
pop
add
aaa
sbb
test
outsl
nop
xchg
or
pop
or
dec
filds
lock
sbb
repnz
add
pop
mulps
shr
jp
xchg
std
ds
push
shlb
and
sub
int3
in
jno
or
loope
dec
sub
arpl
pop
out
pop
mov
mov
outsl
pop
xor
jge
add
pop
fcomps
shrd
leave
fiaddl
push
dec
aad
pusha
notl
fdivr
mov
mov
or
jbe
pop
jne
xor
hlt
ret
or
icebp
xor
push
xlat
mov
not
and
sub
out
or
roll
or
call
cmp
jb
test
cwtl
adc
pop
cmpb
sbb
push
mov
mov
movb
leave
and
mov
and
xlat
dec
xchg
rcl
in
push
out
pop
push
js
inc
ret
or
jmp
dec
addr16
inc
sub
cmp
pop
or
xchg
fstpt
push
lock
arpl
mov
push
sbb
sbb
sub
jle
jb
in
pop
pop
dec
sbb
cmpsl
lds
xchg
lock
shr
adc
mov
xchg
inc
cmp
or
fadd
subl
out
sbb
or
cmp
mov
std
and
stos
shrl
pop
cmpsl
mulps
insb
insl
sub
jg
in
inc
jne
adc
hlt
outsb
jb
xchg
stc
add
and
push
scas
push
imul
push
inc
add
and
in
pop
add
mulb
stc
roll
add
mov
pop
jg
cmp
and
or
aas
xor
mov
jns
dec
sub
inc
pop
xchg
jno
testb
stos
mov
xor
lret
pop
or
sbb
adc
jno
pusha
ret
dec
pop
or
sbb
push
lahf
xor
mov
mov
and
cmpsb
xchg
hlt
pop
imul
inc
fwait
aaa
xor
push
inc
sub
gs
js
lods
jmp
std
sbb
lock
mov
sub
inc
pop
lret
stos
pop
out
jne
mov
adc
mov
xor
inc
inc
dec
sbb
lea
outsl
movsb
enter
and
mov
lret
pushf
or
sub
or
pop
jnp
mov
add
testb
clc
leave
lds
sub
je
addr16
pop
pop
in
std
and
movsl
rolb
pop
push
mov
mov
adc
dec
mov
push
fldl
arpl
jmp
nop
mov
iret
sub
pop
insb
adc
adcl
fstpl
fwait
in
pop
jecxz
lock
mov
scas
rolb
arpl
sub
jge
sbb
xchg
je
stos
loope
cmp
ja
mov
fsubs
out
das
pop
lret
popa
xchg
mov
xchg
std
add
icebp
pop
sub
fildl
add
mov
mov
sub
fs
push
and
xchg
inc
push
cwtl
out
mov
clc
lahf
das
rclb
xlat
mov
cmp
stos
pop
sti
ljmp
test
sbb
lcall
adc
xchg
fs
mov
sub
ja
sub
jne
add
pop
jae
inc
ljmp
or
outsb
jge
jecxz
push
sbb
pop
mov
jl
mov
sub
fisubs
ficoml
sbb
inc
scas
hlt
adc
inc
enter
and
dec
arpl
iret
add
jl
sahf
nop
je
movl
popa
cmp
ret
inc
dec
fldpi
inc
stos
mov
cmp
push
movl
and
outsb
jle
xor
popa
jnp
add
mov
mov
repnz
bound
pop
or
pop
xchg
jnp
jmp
push
mov
pop
push
or
xor
sub
test
pushf
mov
push
rcll
stos
pop
mov
push
lock
xchg
jne
bound
inc
mov
xchg
push
pop
pop
test
jae
mov
jno
jnp
mov
ss
fstps
pop
pop
xchg
cmp
xor
fisttpll
pop
push
dec
xchg
cmp
mov
lcall
add
push
sub
lahf
pop
enter
idiv
xor
lds
stos
aam
jb
pop
pop
jno,pt
dec
xor
and
mov
out
ja
nop
mov
lea
mov
cli
adc
rcl
cmc
inc
data16
cmpsb
scas
hlt
int
in
jge
aaa
push
pop
in
mov
pop
dec
and
out
mov
sbb
push
pop
enter
jmp
jns
cltd
cmp
imul
pop
fnstenv
clc
xor
inc
out
sub
imul
scas
sbb
jecxz
sbb
or
mov
mov
mov
ret
pop
lds
mov
gs
mov
mov
sbb
test
pop
sbb
es
mov
cmc
pop
xor
lods
jae
scas
mov
pusha
inc
mov
mov
je
out
lahf
jge
xor
sub
scas
inc
cltd
pop
xchg
ds
jns
jbe
and
fsts
movsb
sbb
pop
mov
lcall
lahf
pushf
out
rcrl
into
dec
fimuls
lcall
dec
ret
dec
push
jno
sub
cmp
adc
stos
jbe
pop
roll
lds
cmp
outsb
sbb
and
pop
aaa
out
sub
xor
pop
jnp
je
add
mov
aad
jle
or
pop
jge
sbb
xor
clc
jg
in
mov
mov
mov
inc
fs
xor
jg
cmp
pop
stos
xor
mov
and
notl
popa
out
fdivs
ljmp
lods
pop
mov
mov
mov
fbstp
pop
sub
cs
dec
inc
stos
mov
or
pop
push
jecxz
xchg
clc
imul
movsb
decl
adc
jne
test
xchg
testl
into
das
aam
pop
int
mov
jg
and
jno
cmp
addb
fnstcw
adcl
pop
push
subb
ret
aas
pop
hlt
pop
or
enter
into
pop
pop
repz
pop
pop
xor
rolb
negl
or
push
aad
pop
xor
inc
enter
mov
mov
mov
test
adc
lods
xchg
or
or
push
idivl
push
and
movsb
mov
aad
or
sub
out
movb
inc
stos
xchg
shlb
roll
test
and
dec
cmp
mov
jecxz
push
lahf
sub
mov
jmp
inc
pop
std
push
mov
or
flds
imul
shll
dec
lcall
cmp
ja
mov
cld
pop
adc
pop
and
imul
je
repz
movsb
mov
leave
aaa
aas
ficoms
xor
int
rcrl
js
pop
jge
aas
cmp
stc
pop
mov
mov
jno
int3
pop
sub
sbb
xchg
fdivs
arpl
push
xorps
mov
subl
stc
lods
stos
xchg
adcl
andl
pop
ja
mov
pop
adc
pop
bound
pop
cltd
push
dec
dec
popa
mov
xchg
mov
push
mov
inc
jno
das
xor
cmpsl
shll
mov
jg
sbb
in
in
test
jge
iret
mov
xor
push
pop
ljmp
insl
inc
jmp
imul
pop
lcall
cmp
in
sub
vprotb
scas
pop
shlb
dec
mov
pop
sub
lea
push
xlat
xchg
addr16
jne
int
aas
ret
sbb
nopl
add
add
dec
or
or
jo
jb
mov
enter
mov
nop
sub
jle
movsl
cwtl
aaa
pop
test
add
sub
inc
inc
call
enter
int3
les
das
sub
imul
mov
add
jl
adc
adc
pop
mov
imul
cwtl
stc
xlat
ss
fnstenv
mov
repnz
pop
cmp
sti
lret
mov
or
mov
in
inc
shll
ljmp
and
fadds
jb
inc
dec
out
orl
xchg
rcr
push
test
fldcw
jmp
inc
xlat
js
out
out
dec
popa
int3
lods
sub
cmp
lods
lea
into
int3
insl
test
es
mov
inc
pop
adc
pop
div
xchg
jge
outsb
sbb
testl
pop
lea
sti
sbb
adc
nop
mov
pop
mov
mov
aas
pop
popa
push
lods
out
js
cmp
pop
xchg
lret
cmp
iret
lea
gs
xor
adc
imul
clc
jp
jmp
inc
xchg
fldl
fcmove
loopne
cwtl
sbb
mov
sub
loope
push
pop
xchg
int3
mov
and
mov
add
mov
arpl
pop
xor
cmp
jp
dec
andb
in
adc
sbb
scas
push
fistps
fs
test
and
cmp
adc
adc
ss
mov
test
cmp
mov
sub
jnp
jo
stos
adc
lock
xchg
pop
inc
xor
mov
aad
popa
dec
or
push
leave
and
sbb
mov
loope
jmp
pop
ficoms
pop
jne
mov
mov
lahf
and
dec
jle
mov
pop
jno
dec
mov
push
lods
xchg
mov
cmp
lock
les
mov
cmp
jbe
jle
sbb
and
orb
call
pop
jmp
into
cmp
pop
xor
rorl
push
rolb
cmp
pop
jge
movsl
mov
add
filds
fstps
add
in
mov
cmp
dec
clc
mov
aad
jl
inc
fisubl
pop
enter
cmpsb
cld
mov
sub
iret
xlat
popw
ret
jne
dec
dec
xchg
push
pop
bound
adc
and
xchg
andl
pop
popa
xchg
cs
add
pop
or
xchg
mov
sbb
cwtl
ja
xchg
dec
or
xchg
pop
pop
aaa
adc
mov
pop
xor
jb
in
lea
rcl
jbe
pop
hlt
and
sbb
pop
xor
push
jle
es
in
jl
clc
pop
add
movsl
pop
jmp
cli
pop
insb
add
mov
cld
mov
imul
jnp
bound
jle
test
jg
stc
pop
pop
xchg
shll
clc
push
orl
dec
imul
dec
vmwrite
push
or
pop
pop
dec
mov
mov
mov
xor
test
jle
loope
cli
sub
pop
int
nop
fistpll
test
or
jns
inc
inc
pop
xchg
std
mov
inc
pop
cmp
fcmovne
dec
mov
pop
enter
insb
dec
pop
outsb
testl
push
pop
sub
lcall
sub
mov
or
push
cmpsl
xor
fcmovnbe
jg
shll
out
lahf
dec
ret
pop
jl
shrl
push
dec
out
arpl
adc
mov
mov
jmp
jb
scas
jbe
fildll
push
pop
jne
loopne
aad
stos
xlat
jge
pop
nop
jmp
stos
ffreep
adc
cld
adcb
pop
adc
cmovne
stos
pop
push
pop
sti
cmpsl
in
jno
mov
std
pop
in
cld
hlt
lea
and
xor
test
pop
push
bnd
icebp
jmp
dec
jnp
stos
fadds
dec
imul
cli
jg
movsl
mov
inc
movsl
mov
lahf
popa
pop
mov
or
icebp
mov
insl
fwait
push
sarl
jmp
loope
xchg
cmpl
sbb
pop
fdivrl
inc
pop
jmp
or
cli
mov
gs
pop
cmpsb
sti
fisubs
sub
ds
mov
lock
mov
loop
lret
pop
cmp
dec
push
or
pop
mov
icebp
lret
fisttpll
nop
pop
push
jae
push
pop
mov
jbe
test
data16
fildll
and
sbbb
add
testl
pop
or
call
inc
jne
mov
pop
pop
stos
jmp
xchg
mov
out
pop
or
into
imul
leave
or
popa
mov
lea
push
or
js
jle
movsl
pop
sbb
mov
mov
cmp
popa
dec
mov
cmc
jb
ljmp
adc
push
xor
nop
adc
int3
out
fmul
pusha
jmp
dec
inc
stos
push
dec
push
mov
pop
aas
inc
xor
je
push
mov
orb
addb
adcl
xabort
xlat
push
push
movsb
cmc
stos
sub
sahf
outsb
pop
cs
andl
loop
pusha
push
xchg
pop
sti
xchg
les
cli
sub
pop
aad
xor
jp
sbb
inc
popa
jecxz
cmovo
pop
aaa
test
aam
pop
mov
sbb
cmp
push
dec
push
sti
repnz
pop
jecxz
mov
mov
or
ret
add
pop
out
add
xor
clc
sub
mov
jno
xor
hlt
pop
test
pop
pop
out
ja
pop
jge
arpl
je
mov
inc
push
lret
scas
mov
aaa
pop
jb
inc
sti
sub
dec
mov
fadds
lea
adc
cld
popl
movsb
xchg
shll
test
mov
pop
mov
pop
mov
jg
pop
push
adc
js
out
xor
inc
jno
dec
ret
popf
adc
bound
dec
jne
pop
or
fdivl
xchg
xor
mov
mov
mov
pop
dec
into
inc
sub
jae
repnz
mov
pop
dec
mov
std
adc
pop
stos
mov
aam
pop
loopne
mov
call
pop
es
inc
je
mov
push
rclb
add
cld
xor
pop
add
xchg
pop
out
stos
push
mov
lea
mov
test
xor
and
out
jb
or
enter
dec
cmp
jo
xor
jge
shrb
jns
push
mov
xor
jmp
test
and
sub
xlat
arpl
push
sbb
xchg
pop
filds
outsl
imul
or
add
pop
pop
stc
sbbl
ss
test
jnp
pop
xor
mov
mov
push
lods
clc
pop
les
pop
loopne
pop
pushf
mov
jnp
pop
and
int3
xor
cld
outsl
pop
adc
imul
sub
push
stos
stc
fxtract
lcall
pop
lea
fcomip
pop
test
in
jl
mov
inc
or
mov
cmp
hlt
fwait
mov
aad
push
repnz
ds
dec
jae
inc
ret
mov
cmp
pop
popa
and
out
cs
addr16
pop
lods
cmp
rcrl
adc
push
loop
mov
subb
lahf
dec
js
adc
push
ds
push
lods
push
popa
or
pop
call
pop
cmpl
jns
out
imul
adc
pusha
or
pop
loopne
ret
mov
mov
lret
pop
xor
pusha
push
sub
mov
pop
adc
xchg
xchg
add
push
rorl
pushl
dec
push
repnz
pop
xchg
stos
loop
sub
pop
pop
mov
xchg
push
aam
ret
test
cld
adc
jns
inc
pop
sub
mov
and
pop
mov
inc
sub
sub
jo
xor
fsubr
push
dec
testl
or
mov
adc
pop
or
inc
push
iret
pop
ret
fnstcw
ss
stos
mov
clc
cmp
dec
add
adc
jno
popa
lret
loop
arpl
xchg
cli
pop
jmp
std
jl
jp
outsb
pop
mov
cwtl
pop
add
jno
lret
dec
int
xchg
add
sbb
pop
pavgw
sub
xor
adc
jge
push
call
cwtl
dec
pop
flds
push
mov
and
addr16
mov
add
inc
leave
pop
call
add
sub
adc
subl
jne
pop
lret
mov
add
or
xlat
fildll
pop
mull
mov
ljmp
lds
divl
or
aad
pop
jb
clc
sub
dec
jle
xor
push
mov
pop
dec
sub
int3
pop
xchg
sbbb
mov
jo
lret
mov
jb
pop
jno
xor
cmp
fnsave
loop
mov
xchg
pop
sbb
fs
cwtl
fnstcw
xor
repnz
data16
leave
mov
jge
jns
pop
jg
js
aas
into
mov
daa
pop
loopne
test
outsb
pop
mov
loop
stc
sbb
cmpsl
leave
cwtl
test
sbb
fnstsw
pop
aam
mov
inc
push
pop
bound
push
int
loopne
xlat
fstps
fwait
mov
out
lods
cmp
notb
cmp
gs
jmp
xor
xorb
mov
mov
mov
roll
cmp
test
pusha
rolb
ljmp
dec
push
pop
sub
das
js
roll
dec
cmp
cmpsb
and
pop
and
mov
cmp
xor
stos
jle
aaa
fstl
test
or
scas
aaa
xlat
gs
cmp
insb
and
sbb
pop
sysret
stc
stos
inc
fiadds
adc
inc
test
add
pop
and
inc
push
repnz
sete
nop
cwtl
decb
lods
ja
push
sub
dec
pop
pushf
in
add
inc
je
push
les
lea
mov
dec
rorl
pop
lcall
mov
lods
xchg
xchg
adc
les
cli
pop
jns
mov
cmp
adc
cmp
mov
lods
adc
mov
push
xor
add
das
iret
inc
sbb
xchg
sbb
cld
inc
mov
lock
fiaddl
cmp
cmp
addl
in
das
xchg
std
loopne
mov
fs
push
push
push
in
lock
clc
int
out
adc
inc
xor
popa
xchg
clc
mov
jne
aam
aad
add
pop
sbb
aaa
pop
ja
add
clc
int3
pop
outsl
popf
or
push
inc
xchg
or
adc
loopne
pop
mov
fidivs
addr16
shll
cli
nop
jne
pop
jge
add
movsb
xor
hlt
push
and
pop
add
ja
add
lret
jg
pop
pop
shll
les
cmp
loopne
cld
pop
jecxz
sahf
push
enter
lret
jae
pop
inc
or
cmp
dec
addr16
enter
push
jmp
inc
adc
dec
xlat
test
insw
cmp
adc
pop
shll
in
aas
xor
pop
stos
call
inc
push
pop
pop
push
xor
jle
inc
outsb
or
adc
ss
fdivs
mov
pop
and
mov
cmp
fbld
mov
adc
cld
pop
out
mov
mov
push
pop
movsb
aad
aam
incb
dec
cli
ja
out
push
sub
pop
pop
imul
pop
ficomps
pushf
and
addb
notl
pop
dec
push
xor
cmp
and
fidivl
dec
pop
jno
popa
push
test
add
xchg
mov
xor
mov
sub
pusha
push
sub
dec
dec
mov
frndint
cmc
push
push
js
into
pop
arpl
test
mov
ja
and
adc
fwait
pop
mov
rclb
or
xor
fiadds
cmp
pop
rcrb
pop
movsl
idivl
mov
add
repnz
add
and
xlat
scas
filds
jbe
xchg
leave
mov
cmp
dec
outsw
or
ss
xor
and
pop
mov
push
addr16
pop
sub
call
enter
lock
mov
or
xor
inc
jno
and
pop
lods
andl
cmpsb
inc
push
xchg
pop
sbb
pop
sub
sub
or
loope
int
rcll
sbb
pop
pop
add
add
mov
sub
jg
cmpsl
iret
enter
mov
jb
adc
int
or
mov
or
pop
sbb
dec
sub
imul
loope
dec
sbb
je
bound
jbe
arpl
dec
mov
push
cmp
jl
sahf
xchg
pop
mov
sbb
ja
imul
movsl
pop
das
dec
adcl
pop
push
ja
pop
xor
call
pop
pop
shll
cmpsb
push
cmpl
or
cmp
cmpsl
mov
mov
pop
and
push
xchg
jle
sub
inc
dec
incb
stos
out
fisttpll
push
cmp
arpl
push
jl
push
xchg
fs
mov
mov
xchg
mov
cmpsl
mov
xchg
xchg
adc
pop
push
outsl
jg
in
mov
jo
lret
orl
clc
pop
lret
or
inc
cmp
fcmovne
and
imulb
push
dec
pop
jnp
mov
fsubs
sbb
sub
dec
jl
lcall
xor
and
inc
stos
fmull
jp
mov
cwtl
or
cs
cs
jle
mov
add
push
inc
lods
pop
or
sub
adc
jne
and
outsb
push
inc
lahf
sbb
pop
call
lods
sbb
js
mov
or
inc
push
and
pop
insl
iret
push
xchg
or
cmp
jno
lret
xchg
imul
inc
mov
aad
sub
add
lods
cmp
icebp
push
test
enter
pop
fistpl
pop
xchg
cld
push
pop
ljmp
dec
inc
stos
std
orl
aas
orl
xor
adc
pop
push
popa
cmp
xchg
fstp
pop
call
pop
mov
ret
pop
aas
pop
mov
sub
inc
dec
inc
mov
ret
and
lods
pop
xlat
xor
bound
icebp
pop
int3
push
jae
sbb
adc
pop
jl
movsl
cwtl
push
dec
adc
rcl
out
inc
jmp
or
bound
lods
fmuls
jno
pop
insb
pop
cmp
push
ja
xor
dec
mov
leave
jle
pop
nop
pop
fisubl
jmp
xchg
mov
in
mov
ret
rcll
and
inc
clc
imul
cmpsl
jmp
jg
jbe
clc
inc
cmp
rclb
lods
lods
inc
jmp
mov
mov
adc
sub
cmp
mov
fldl
jo
fdivp
roll
push
mov
pop
dec
push
sbb
dec
mov
mov
mov
add
xor
pop
pop
push
leave
lcall
idivl
adc
push
stos
pop
jbe
in
out
pop
psubsb
push
pop
jp
insb
pop
mov
mov
or
xor
xchg
mov
outsl
scas
and
adc
arpl
mov
js
idivl
clc
mov
push
or
ljmp
inc
cmpb
repnz
lods
push
mov
sti
fstl
dec
rcll
pop
inc
xchg
out
cmp
lods
xor
clc
mov
bound
push
add
scas
call
inc
in
insl
mov
pop
lods
sub
inc
push
test
pop
sbb
pop
fst
cmp
pop
repz
enter
push
mov
mov
and
pop
pushf
cmp
xchg
cltd
repz
push
pop
leave
aad
enter
mov
push
fsubrl
ja
cmpsl
pop
pop
jo
adc
cli
or
or
fdivs
ds
lods
mov
loop
adc
push
aad
add
or
push
pop
mov
add
mov
inc
rorl
call
leave
dec
sbb
jecxz
add
cmp
repnz
ud2
movb
loope
fisubrl
lea
stos
mov
fwait
dec
xchg
pop
sub
dec
cmp
outsl
repnz
pop
scas
aad
incl
pop
jns
test
pop
mov
lcall
sub
xchg
inc
pop
push
call
addr16
or
adc
dec
in
clc
mov
enter
stc
movsb
xor
and
lods
popf
in
cmp
call
push
push
inc
jb
mov
pop
repz
into
pop
popa
mov
stos
mov
jge
leave
out
imul
jne
pop
sub
pop
sub
adc
and
sti
dec
dec
push
sub
jmp
out
int
cltd
pop
jnp
or
jae
das
enter
gs
imulb
stc
call
pop
lea
push
adc
jle
pop
andb
dec
bound
sysret
mov
das
adc
mov
lods
shrb
pop
sbb
add
cmp
enter
pop
jnp
pop
mov
leave
scas
jae
icebp
pop
push
add
xchg
lahf
adc
loopne
in
gs
mov
sub
cmpl
jno
adc
pop
les
inc
jo
add
xor
pop
mov
je
xchg
push
push
rclb
mov
sar
adc
push
enter
dec
addr16
int3
pop
pop
mov
subl
rclb
inc
mov
xor
mov
hlt
pop
dec
adc
mov
dec
jo
scas
dec
jne
lods
pop
adc
cmp
mov
pushf
jecxz
adc
jno
adc
out
pop
pop
ret
pop
xor
cltd
pop
pop
loope
es
ds
pop
fmull
arpl
adc
or
stos
mov
mov
inc
lea
mov
mov
iret
pop
adc
dec
jl
lds
adc
pop
mov
push
dec
aaa
xchg
js
add
outsl
sub
pusha
arpl
lret
mov
cmp
push
xchg
shr
or
mov
fisttps
xor
push
or
pop
jbe
aad
sub
ret
and
push
movsb
cmpsl
add
clc
jp
out
hlt
or
loope
pop
jle
push
add
movsl
addl
lret
clc
xor
mov
pop
pop
sub
xchg
push
inc
jle
dec
sbb
stos
fildl
mov
xor
lods
push
cmpsb
addb
sarl
or
inc
pop
aad
sub
sbb
hlt
push
pop
add
pop
pop
rorl
pop
lods
sub
fsub
and
pop
enter
ret
sub
pop
push
xor
sub
push
jnp
das
or
xor
pop
insl
inc
sar
stos
aaa
push
fwait
cld
sbb
lock
mov
mov
sub
dec
push
jecxz
dec
push
xor
pop
pop
fldcw
in
sub
adc
cli
jp
pop
cmp
rcll
jge
popa
pop
push
outsl
pop
cltd
cwtl
js
cmc
jo
lods
pop
mov
sbb
push
inc
xchg
iret
push
add
xlat
mov
inc
sub
inc
cmp
fnstsw
shrl
js
scas
pop
int
inc
test
popa
shlb
je
iret
or
imul
cld
xor
lock
sbb
or
pop
pop
mov
ja
fsubrs
sbb
pop
pop
mov
mov
pushf
pop
cmpsb
adc
pop
sub
out
adc
inc
inc
jb
test
ljmp
cld
dec
aaa
push
insb
cs
xor
nop
pop
lock
mov
xchg
sbbl
pop
inc
push
xor
cmp
pop
push
adc
aam
jp
pop
lods
sbb
fisubrl
pop
mov
aaa
outsl
fbld
mov
adcb
stos
adc
push
lods
jle
ss
and
sbb
jg
mov
sbb
sub
pop
dec
rcrl
out
or
addl
sbb
sbb
push
test
icebp
jmp
jge
xor
out
les
push
pop
mov
mov
fadds
int3
mov
pop
outsb
jecxz
adc
andl
pop
inc
push
leave
mov
adc
add
movd
mov
mov
mov
or
mov
call
inc
xor
xor
mov
pusha
pop
ljmp
ffree
mov
inc
pop
in
or
jecxz
out
pop
imul
pusha
jmp
jns
outsl
inc
cmp
fildl
mov
adc
xchg
dec
and
fadds
xlat
jae
in
mov
mov
jo
inc
fwait
cmpsb
and
or
inc
xor
xchg
test
testl
dec
lods
ja
dec
imul
mov
xor
add
xor
xchg
out
sub
inc
pop
stos
lods
dec
xor
dec
mov
jl
adc
pop
add
sub
mov
incl
mov
adc
mov
pop
scas
fcompl
addl
mov
mov
mov
push
les
pusha
orl
int3
mov
fdivrs
out
pop
lods
fcoms
pop
or
repz
adc
pop
hlt
or
roll
sbb
jb
or
adc
pop
mov
pop
pop
pop
gs
or
xor
xor
pop
dec
mov
and
cwtl
repz
pop
pop
xor
or
pop
jmp
mov
enter
adc
inc
movsb
cmpsb
idivb
mov
inc
dec
mov
add
and
jo
inc
mov
in
push
sbb
pop
lods
push
inc
shl
mov
negl
lret
cltd
insb
js
lds
clc
mov
sub
arpl
xchg
push
xlat
icebp
lahf
xchg
pop
mov
outsl
pop
inc
outsb
mov
and
sub
pop
dec
push
adc
mov
and
sbb
dec
pop
stc
mov
push
or
sub
in
push
and
sbb
or
adc
sub
mov
sbbl
js
pop
pop
mov
and
sbb
pop
mov
jg
inc
cli
or
inc
jge
or
jae
pop
nop
mov
aas
adc
out
mov
sbb
shll
nop
enter
pop
dec
xchg
dec
pop
mov
bound
insl
jmp
xor
das
mov
sub
addr16
sub
cmp
out
sub
mov
jo
iret
jg
movsb
fbld
sub
cmpsb
mov
and
lret
jle
push
lock
push
bound
cli
push
cmpsl
mov
dec
movsl
and
call
ss
aad
xor
cmpb
ss
dec
insb
pop
ret
adc
cmpsl
inc
jmp
mov
or
push
fstpl
pop
bound
pop
fbstp
cmc
jg
cmp
add
ss
mov
cld
push
inc
mov
pop
jp
data16
arpl
ja
cmp
dec
fcmovnb
xchg
and
ret
inc
adc
fadds
sarb
push
mov
sub
andl
faddp
shl
jnp
mov
xchg
add
jecxz
push
sub
pop
push
stos
incb
cmp
test
inc
addr16
jb
cmpsb
fcomps
jbe
cwtl
jnp
popf
pop
shlb
mov
xor
or
dec
ljmp
add
xchg
std
mov
lods
sbbl
push
mov
repnz
mov
dec
pop
jae
out
shrl
jge
pop
sbb
mov
aas
pop
or
jle
sub
xor
out
stos
cmp
xor
nop
gs
or
cmpl
in
mov
mov
sbb
popa
aas
cs
sub
dec
pop
cmp
fwait
jo
mov
inc
sub
and
std
es
pop
nop
jne
mov
pop
repnz
mov
pop
add
inc
popa
std
ja
pop
sbb
mov
pop
jmp
pop
xor
rcrl
fadd
jnp
and
or
sahf
cmpsb
pop
mov
mov
lea
leave
dec
pop
jge
mov
cmpsb
loope
mov
sub
cmp
sub
cltd
or
subl
jl
call
dec
push
add
mov
les
loop
xchg
negl
fdivs
mov
out
subl
sti
repnz
es
mov
jne
dec
pop
mov
js
sub
mov
mov
pusha
stos
leave
pop
pushf
mov
mov
adc
mov
inc
sbb
lods
adc
in
adc
pop
mov
sub
mov
pop
jge
scas
stc
out
pusha
sub
xor
mov
faddl
sub
fcmovne
jbe
addr16
lds
stos
lcall
inc
mov
out
dec
mov
sti
pusha
sbb
xor
push
sbb
mov
push
pop
sbb
dec
fadds
or
push
pop
lea
sahf
das
out
inc
xchg
pop
call
pop
mov
pop
push
cmp
mov
jl
inc
movsl
jae
mov
ljmp
or
pop
push
cmp
add
or
push
push
xor
push
or
arpl
mov
jmp
sbb
mov
xchg
and
inc
std
cmp
sub
sarl
leave
gs
cmpsl
cmp
xchg
pop
cwtl
incl
dec
cs
mov
aaa
xor
pushf
dec
mov
pusha
rcrb
sbb
cmp
jp
mov
das
lret
xor
jbe
pop
stos
hlt
jmp
jle
mov
test
lcall
xchg
and
mov
cmc
stos
in
pop
mov
pop
mov
or
inc
pop
or
lahf
pop
or
jne
push
movb
out
add
dec
scas
lods
or
pop
xlat
sbb
mov
xor
enter
sub
lea
mov
sub
pop
gs
ds
adc
inc
xor
adc
out
jecxz
ucomiss
jmp
and
das
inc
jmp
pop
pop
lods
repnz
sysret
sub
mov
dec
push
pop
das
imul
push
mov
out
lret
jp
ja
inc
adc
mov
inc
adc
or
dec
je
xor
hlt
jne
push
xor
inc
sub
mov
and
sub
nop
xchg
mov
repnz
in
insl
movsb
jno
push
testb
pop
jle
sbb
leave
pop
iret
cmpsl
push
dec
mov
pop
pop
jo
mov
xor
pop
mov
dec
mov
adc
test
dec
pop
dec
inc
fnstenv
mov
movsl
repz
mov
push
movsb
jo
or
shrl
pop
mov
int
rolb
jmp
cs
mov
pop
lds
into
adc
adcl
xchg
aas
jae
jo
and
in
dec
dec
jmp
aam
fildl
dec
fsubs
xor
jecxz
gs
mov
xor
jb
mov
iret
repz
xor
mov
faddl
add
into
test
push
outsb
fst
lods
sbb
inc
jmp
js
mov
pop
inc
xor
int
xchg
iret
jp,pt
dec
inc
arpl
adc
mov
out
dec
cmp
in
imul
fists
mov
inc
sub
dec
aam
or
adc
hlt
stos
or
inc
push
in
cmp
test
inc
jns
jl
fiaddl
xchg
lea
jae
or
jo
fsubrl
dec
and
pop
sub
scas
pop
ljmp
xor
mov
mov
cltd
push
rcrb
xchg
fs
in
stos
int3
inc
fistl
push
jecxz
and
inc
neg
in
lods
xor
scas
or
in
pop
jge
call
push
pop
cltd
push
das
push
xor
xchg
mov
adcb
cmp
faddl
inc
fs
js
xor
pop
cmp
adc
cmc
faddl
int3
ror
nop
dec
jmp
decl
js
pop
orl
add
cmp
incl
insl
mov
mov
inc
mov
push
aaa
addl
mov
dec
ss
jp
xchg
mov
dec
roll
push
test
adc
pop
js
call
adc
xchg
loop
faddl
lods
cmpb
gs
jg
mov
pushf
pop
sub
sahf
jecxz
pop
inc
adc
dec
in
inc
das
idiv
pop
adc
mov
mov
xor
scas
das
call
sub
pop
stos
mov
sti
jns
push
xchg
out
and
and
mov
mov
test
xor
or
push
inc
mov
addr16
adc
adc
pop
mov
cltd
lods
adc
addr16
cli
rcrb
rclb
pop
pop
push
int
mov
pop
ljmp
sbb
add
pop
and
pop
jecxz
jg
push
icebp
aas
xor
add
dec
pop
fcoms
cmp
outsb
stos
pop
or
xchg
mov
mov
pop
adc
dec
xlat
xchg
pushf
sub
lods
pop
movsl
gs
stos
mov
mov
cld
rorl
mov
sbb
sbb
mov
lods
xor
mov
adc
pop
jmp
fstpt
pop
insl
xor
mov
aas
ss
imulb
xor
mov
xchg
mov
addb
mov
mov
inc
pop
jnp
xor
cmp
cmp
inc
stos
repz
push
pop
mov
dec
mov
pop
mov
lods
mov
icebp
mov
sbb
pop
outsb
cld
push
std
pop
add
es
call
push
imul
ffree
pop
mov
ret
pop
dec
sahf
pop
pusha
jmp
testb
add
sub
adc
xlat
jle
pop
dec
mov
int
dec
les
adc
mov
fldcw
pop
and
insl
inc
cmp
jmp
rcr
cwtl
in
push
or
jg
sbb
int
js
jge
push
inc
movb
mov
push
mov
or
std
jno
pop
cmpsb
inc
lahf
sbb
add
aas
lods
mov
pop
sti
push
icebp
mov
pop
dec
or
ljmp
mov
clc
or
dec
pop
sub
pop
into
cltd
xchg
fwait
jnp
out
cwtl
jae
mov
adc
jl
xchg
and
push
insb
or
pop
lret
jmp
add
mov
jge
sti
push
push
icebp
xchg
mov
pop
aad
lea
aaa
addb
int
mov
adc
sbb
test
xchg
or
pop
ret
fldl
fnstenv
xchg
stos
lods
mov
stos
jnp
push
add
ds
shll
or
sar
test
lahf
and
cmp
inc
xchg
mov
sbb
lock
sbb
inc
mov
loope
dec
popa
or
adc
mov
or
pop
mov
mov
adc
inc
out
pop
jecxz
mov
dec
popa
pop
mov
xchg
shl
movsl
bound
leave
mov
out
pop
data16
add
push
pushf
sbb
mov
push
mov
pop
sub
cmpsb
mov
psubq
xchg
jae
lcall
dec
inc
ljmp
loope
mov
dec
scas
shrb
xor
cmp
pop
fistps
das
popa
xchg
test
dec
ds
fmul
sahf
inc
sbb
and
fs
inc
pop
xor
pop
mov
push
dec
push
adc
jmp
pop
insb
jne
hlt
pop
or
in
movsb
xchg
imul
mov
mov
in
ret
push
mov
lret
pop
leave
mov
jne
pop
adc
xchg
mov
mov
mov
test
mov
mov
inc
ds
pop
jg
mov
sbb
and
leave
popa
lret
adc
adc
xor
outsl
jns
mov
fwait
cwtl
jnp
pop
mov
mov
test
pop
mov
gs
rolb
jno
mov
mov
bswap
pop
or
sub
pop
ret
fistl
popa
or
pop
pop
lret
mov
sub
jecxz
roll
ljmp
sbb
pop
mov
sbb
lea
subb
sbb
jge
inc
negl
std
inc
mov
push
inc
sub
js,pt
jge
fadds
inc
sub
xchg
insb
int
data16
test
pusha
imul
jno
outsb
sbb
pop
mov
cmp
xor
arpl
sub
roll
scas
stc
dec
mov
pop
push
or
mov
lahf
cmp
lods
lea
loopne
add
pop
mov
sub
or
movsl
cld
rcll
cmc
mov
push
pop
lock
mov
jo
mov
add
int3
adc
fs
enter
pop
push
inc
or
mov
incl
sti
mov
bndldx
pop
inc
out
fldl
ret
jne
lahf
out
pop
stc
rcrl
pop
mov
or
pushf
or
fsub
pop
es
add
hlt
push
mov
decl
ljmp
pop
and
pop
jb
and
out
js
xchg
adc
jns
ret
adc
sbb
dec
xor
push
gs
fstpt
jnp
mov
rorl
sti
movsl
jl
adc
add
pop
xor
scas
lds
cmp
ja
dec
mov
sti
sub
popf
call
rcr
fdivs
movzwl
mov
sub
pop
in
jns
js
pop
push
add
das
push
xchg
cmp
inc
cmp
cmp
pop
lods
shll
mov
insl
pop
lcall
inc
sub
cmp
js
xchg
insl
popf
add
pop
xor
enter
and
push
ljmp
js
lret
or
aas
xchg
lock
xor
mov
test
dec
xchg
or
inc
sub
pop
repz
iret
aaa
out
repnz
sub
pop
frstor
dec
cmp
xor
mov
pop
inc
jo
mov
jl
pop
jecxz
jmp
lods
cs
xor
sub
sub
push
mov
loope
and
cmp
int3
outsl
pop
popa
repz
xor
xlat
dec
sbb
sbb
cmp
and
pop
call
adc
pop
pop
xor
mov
sub
mov
push
pop
xchg
out
cs
fldl
adc
xlat
loopne
inc
add
pop
pushf
lret
adc
inc
jne
pop
cmp
pop
enter
lahf
fcoms
enter
adc
dec
pop
xchg
aam
ljmp
jle
nop
adc
pop
gs
xchg
stos
test
push
in
sbb
outsl
adc
or
mov
pop
roll
mov
sub
push
rorb
jmp
hlt
jae
and
int
pop
cs
les
in
jecxz
pop
mov
aad
xlat
pop
sti
lock
cmp
pop
mov
and
adc
push
es
out
sbb
imul
insl
adc
nop
lret
push
mov
aad
jg
sub
pop
notl
or
or
mov
in
test
loope
push
cmpsb
mov
pop
xchg
mov
in
popa
cltd
push
adc
das
or
adc
mov
idivb
stc
cs
push
fisubrs
out
adc
pop
adc
jne
sbb
pop
les
addl
aas
mov
jl
pop
fwait
hlt
adc
aad
iret
test
in
jo,pt
lcall
fs
dec
stos
pop
adc
lock
xor
pop
add
mov
mov
jns
xor
jne
pop
in
inc
adc
pushf
sbb
sbb
outsl
pop
scas
lret
mov
xchg
push
dec
push
into
push
sbb
cmc
xlat
mov
pop
xchg
push
mov
pusha
mov
push
fistl
cli
mov
push
pop
mov
jp
or
and
cmp
imul
inc
stos
bound
out
outsb
cmpsl
repz
dec
sbbb
cli
ret
xchg
and
lret
push
imul
popa
fdivrl
arpl
lock
pop
je
pushf
push
mov
int
nop
icebp
mov
out
subl
imul
testb
inc
adc
jmp
pop
lcall
decl
inc
loop
sub
or
ror
pop
mov
adc
add
idiv
enter
dec
popa
pop
push
sub
sbb
in
mov
ss
pop
push
push
jae
mov
rcr
movsl
js
pop
pop
pop
mov
ljmp
sub
or
mov
test
sub
push
fistpll
rclb
mov
loope
cmpxchg
dec
push
pusha
jne
push
pop
mov
addl
and
mov
leave
pop
fdivr
add
mov
pop
pop
xor
flds
cmpsb
or
dec
cwtl
push
or
push
popw
lcall
popf
inc
mov
xchg
cs
xor
arpl
stos
inc
mov
test
adc
aas
lahf
push
cmpsl
ud2
fs
mov
mov
test
out
mov
mov
lret
dec
lods
lock
jb
xlat
aam
pop
dec
xor
mov
pop
psubsw
add
ja
xchg
push
jne
sub
dec
pop
nop
mov
cmp
jmp
dec
ja
ja
rsqrtps
push
xlat
cld
fmul
inc
lods
call
sub
cmp
addl
fwait
xor
js
sub
jmp
jo
mov
in
mov
pop
jb
pusha
inc
cmc
dec
jle
packsswb
int
pop
cs
ss
jo
sbb
push
xchg
adc
pop
call
jle
clc
xchg
lock
fadds
dec
in
jb
cmpsb
inc
push
mov
lcall
adc
outsl
fwait
inc
mov
faddl
pop
sub
fisubl
clc
cli
pop
outsb
jns
pop
lret
xchg
xor
aam
rolb
cs
sbb
lea
icebp
inc
pop
push
adc
pop
movsb
and
aam
jne
pop
rep
push
mov
mov
mov
push
adc
and
mov
push
pop
pop
jae
pop
leave
cmpsl
xor
int
xor
dec
push
sbb
inc
insb
jb
jne
cmp
nop
out
mov
lds
sub
mov
sub
mov
or
sub
cltd
rorl
mov
ljmp
aam
mov
insb
ficoml
xchg
pop
mov
xor
pop
pop
sti
or
mov
pushf
mov
jg
pop
scas
stc
sbb
sbb
or
scas
adc
test
cmp
inc
inc
call
sbb
scas
mov
xlat
push
adc
pop
push
sub
sub
test
movb
dec
lret
int3
dec
push
inc
bound
pop
sub
or
iret
pop
int
pop
mov
in
cld
xchg
add
negb
push
sbb
pop
clc
add
ss
sahf
and
mov
mov
pop
repz
lock
stos
adc
jbe
sub
mov
cltd
mov
loopne
adc
loope
aaa
pop
add
test
push
ror
and
adc
push
push
lock
imul
jae
xchg
seta
add
pop
outsl
cmp
xchg
cld
dec
mov
adc
test
inc
and
shrl
loope
hlt
loopne
add
mov
iret
lds
adc
rorl
pushl
xlat
jne
fisubs
pop
pop
mov
and
dec
pop
scas
dec
aaa
xor
in
pop
dec
rorl
push
mov
fisttps
cmp
in
mov
addr16
mov
insb
mov
je
lods
dec
es
or
and
aam
popf
inc
enter
inc
repz
pop
mov
dec
loopne
fdivs
dec
data16
fildl
pop
out
mov
pop
jp
in
sbb
aaa
out
pop
lods
out
jge
jp
fildl
push
ror
dec
or
and
add
out
add
mov
scas
push
insl
js
fstpl
nop
adc
rcrb
or
mov
cmpsb
mov
pop
mov
aam
addl
lret
sub
mov
pop
jno
mov
stc
pop
leave
shr
xor
adc
jns
jmp
lea
test
push
pop
dec
sbb
pop
in
lods
xchg
adc
test
dec
mov
iret
pop
mov
xchg
rcl
xor
jne
popf
xor
mov
push
lahf
inc
xor
icebp
jmp
push
jecxz
je
adc
outsl
add
gs
movsl
push
and
pop
add
xor
cmp
clc
cmp
gs
pop
aaa
ljmp
arpl
int3
jae
dec
xor
dec
pop
bndstx
push
push
adc
jnp
add
rorl
cltd
or
aam
cs
pop
jp
xor
jge
into
in
add
or
sti
icebp
flds
mov
sbbb
fcoms
push
xor
cld
sbb
adc
mov
adc
fadds
xor
test
outsb
out
xchg
push
cmp
jae
or
pop
push
enter
lock
dec
lahf
jle
sub
mov
cmp
into
mov
lret
sti
lods
xchg
pop
cmp
xchg
jle
pop
aaa
clc
in
ljmp
cmc
inc
into
fnstsw
ret
pushf
push
sbb
xor
imul
cmp
cld
icebp
enter
mov
outsb
nop
in
pop
sarb
fwait
test
test
xor
sub
imul
cmp
cmpsl
sub
sub
out
pop
xchg
mov
and
xor
pop
into
stos
adc
test
shll
sub
imul
loopne
fcoml
and
aam
push
sahf
out
xor
testl
xor
mov
fidivrl
jno
inc
sti
lds
lock
pop
jbe
enter
pop
dec
inc
fwait
xor
sub
pushf
adc
xchg
cld
pop
pop
xor
adc
stos
sub
insb
subl
push
vmwrite
fmul
lahf
ret
lock
cltd
fldz
jl
movsl
out
popf
jns
xchg
mov
lods
cwtl
cli
fsubrs
lahf
pop
pop
push
sarl
lret
add
mov
aaa
pop
scas
cltd
xor
addl
jbe
fwait
jmp
pop
xchg
add
inc
call
faddp
jae
mov
cltd
mov
mov
pop
mov
add
cmp
incb
js
pusha
dec
dec
pop
pop
out
mov
pop
fists
mov
push
cmpl
mov
cltd
xor
fildl
pop
sti
imulb
mov
ja
cld
jle
mov
push
jp
fdiv
pop
shll
push
andl
xchg
jno
fdivs
push
in
nop
sbb
scas
movsb
loopne
shll
std
adc
dec
arpl
ss
xlat
push
pop
jno,pt
repz
shrl
call
scas
xor
pop
pop
inc
xor
fildll
dec
aas
inc
mov
std
jge
cmpsl
mov
jae
mov
outsb
push
inc
cmp
pop
mov
jo
xchg
add
push
je
mov
lods
fprem
inc
clc
pusha
pop
and
mov
dec
je
sub
sbb
in
push
jnp
movsb
and
ficoms
aas
addr16
inc
mov
push
jnp
jne
test
push
jge
stc
mulb
leave
push
cmp
push
dec
xchg
or
inc
pop
fsubrl
sbb
pop
push
push
testl
lock
loop
inc
push
xchg
shr
fists
mov
xorl
mov
inc
pop
stos
cmp
pop
xlat
mov
jns
in
mov
addr16
out
testl
test
inc
xor
sub
dec
iret
or
xchg
pop
push
shll
aam
push
jne
pop
mov
pop
sti
push
movsb
jo
imul
pop
add
in
loope
addb
movsl
mov
pop
outsb
jns
cmp
xor
cmp
ret
pop
mov
scas
pop
sbb
jo
call
add
pop
push
jns
cmp
cwtl
pop
mov
dec
cmpsb
stos
pop
xor
int3
adc
xchg
aad
jecxz
pop
mov
sysret
call
mov
dec
out
jns
mov
popa
push
lods
cld
in
cmp
cs
jae
jl
jle
adc
popf
or
pop
clc
cmpsl
pusha
cmova
pop
out
jp
mov
ds
adcl
das
fistpl
jp
leave
push
insb
or
sub
cmp
outsb
dec
push
ja
ficomps
xorl
inc
inc
add
pop
pushf
pop
inc
push
hlt
fsubrl
pop
mov
aaa
sbb
pop
roll
lahf
cmp
repz
inc
subb
add
push
subl
pop
and
adc
inc
pop
jo
sub
add
pop
jns
clc
jp
add
mov
push
sub
and
add
enter
cmp
mov
pop
cs
pop
mov
int3
sbbb
add
pop
mov
jb
mov
mov
jle
xchg
xor
ret
aaa
in
push
fsubrp
adc
or
push
mov
shlb
loope
cmp
or
inc
nop
dec
cmp
pop
loopne
dec
mov
cs
pop
fs
roll
adc
push
roll
pop
pusha
mov
mov
adc
push
jnp
out
ljmp
mov
pop
mov
push
add
aam
jg
dec
inc
test
out
jecxz
mov
ja
cmovne
inc
sbb
addl
jmp
lea
pop
mov
bound
push
out
adc
jl
cs
stos
sbb
or
pop
out
jbe
mov
xchg
inc
push
int
dec
sub
pop
cmp
sbb
out
test
jae
pop
adc
imul
dec
dec
mov
arpl
roll
btr
sub
pusha
loop
pop
scas
std
xchg
rolb
in
incb
mov
rcr
or
gs
mov
mov
push
dec
xchg
int
divb
ja
mov
or
movsl
pop
rolb
pop
adc
es
jbe
aas
cmc
out
test
cltd
xchg
adc
insb
lods
cmp
mov
jge
pushf
vblendmpd
mov
lret
sub
mov
imul
push
sbb
add
and
iret
inc
mov
pop
outsl
ljmp
arpl
push
push
jne
and
ds
lret
mov
inc
lock
fldt
rcrb
dec
filds
pop
jle
fidivs
add
xor
cmp
lahf
int3
and
lcall
or
pop
jle
mov
aas
cmpl
stos
pop
bound
adc
dec
and
jmp
pop
pushf
xchg
xchg
sahf
lahf
or
outsb
xchg
movsl
mov
aam
pop
inc
mov
dec
imul
adc
pop
jmp
lahf
jg
mov
pop
mov
push
stos
test
cmp
flds
lods
pop
or
cmp
pop
mov
sbb
nop
aas
inc
adcb
repz
xchg
adc
aaa
std
roll
ja
repz
mov
inc
cli
push
or
mov
and
data16
or
cmp
dec
sub
loop
leave
mov
jno
jns
gs
pop
leave
dec
pop
push
cwtl
mov
decl
or
out
pop
imul
mov
add
push
mov
dec
pop
clc
dec
mov
dec
addb
inc
aad
push
call
sbb
xchg
add
adc
sbb
loop
in
xor
and
imul
pop
mov
sub
cmp
gs
pop
sub
popf
pop
mov
pop
mov
xchg
mulb
pop
in
mov
mov
jbe
pop
inc
scas
inc
pop
pop
out
pop
xor
sbb
adc
mov
loope
add
repz
inc
pop
outsb
iret
inc
mov
pop
movsl
xor
cli
ficomps
pop
lahf
cmpsl
fbstp
fnstenv
pop
std
out
iret
push
mov
mov
out
xor
ja
sbb
and
in
fsubs
mov
jns
imul
lds
lahf
sub
cmpsb
sub
and
ds
sub
out
leave
out
pop
sbb
cli
shll
sbb
lahf
test
xor
adc
sbb
aas
pop
je
hlt
fwait
loop
pop
int3
data16
mov
inc
fadds
imul
adc
popf
arpl
decb
lods
mov
add
pop
std
test
ja
sbb
mov
ret
xchg
js
in
xlat
inc
pop
push
push
pushl
ret
xchg
add
loope
mov
subb
mov
add
xor
sti
mov
jmp
cs
pop
dec
inc
adc
movsl
sub
cmc
or
or
push
movl
nop
mov
and
pop
add
arpl
mov
sbb
dec
iret
jnp
imul
xor
mov
icebp
and
lods
jg
rcrb
movsb
in
adc
sti
idiv
clc
adc
mov
sbb
push
jge
stos
or
js
aad
mov
lods
adc
lods
sbb
or
dec
jbe
in
jmp
and
xor
je
bound
incb
inc
pop
jb
sub
lods
lret
pop
andb
leave
nop
xor
xchg
js
ja
ja
pop
ljmp
je
inc
cmpsl
sub
imul
adc
cmpsb
out
or
popf
cmp
sarb
pop
arpl
fdivl
lods
addr16
lahf
sub
pop
xor
jle
fbld
lock
and
les
adc
dec
jae
outsl
mov
and
xor
call
pop
hlt
imul
arpl
pop
ror
sbb
js
pop
cmpsb
gs
inc
lods
xchg
loope
push
jbe
aad
pushf
in
pop
jne
jle
adc
pop
pop
lahf
lcall
sbb
mov
and
sbbl
xchg
ret
inc
inc
adc
mov
add
aad
inc
pop
mov
adc
test
mov
stos
sub
lahf
pop
fs
fsubrs
mov
inc
fbstp
mov
or
mov
xchg
outsb
pop
in
sbbb
jb
ja
pop
ret
fs
jo
clc
inc
adc
adc
add
loopne
bound
loop
pop
int3
dec
cmp
ss
inc
fmull
inc
sbb
fs
and
inc
inc
lock
aad
popa
push
cli
ret
test
push
mov
inc
and
sbb
pop
inc
and
xor
mov
movsb
incb
imul
pop
test
dec
mov
add
xor
imul
sub
xchg
faddl
mov
leave
mov
push
jo
arpl
imul
xor
in
pop
and
mov
jbe
rcl
adc
push
das
jecxz
mov
mov
mov
jl
sahf
cmp
xchg
sbb
xlat
fsubrs
jae
stos
fnstcw
ds
iret
add
movsl
jbe
pusha
mov
aaa
mov
jge
xor
enter
sbb
pop
scas
inc
mov
ljmp
inc
test
pop
les
jb
lea
adc
push
stos
mov
push
outsb
mov
adc
std
and
rorl
shr
jb
lret
dec
jl
sti
shlb
test
pop
or
xor
pop
jge
lret
mov
push
mov
and
pop
pop
int
stos
or
adc
dec
imul
loope
xlat
ja
lods
cmpsl
mov
xchg
push
imul
xchg
pop
mov
icebp
aam
mov
inc
xchg
shrb
ficomps
cld
testl
and
aam
push
js
sub
bound
pop
or
jne
push
mov
xchg
xor
sub
stos
and
das
jo
ss
imul
test
outsb
dec
aas
xchg
dec
es
pusha
mov
lods
mov
scas
sbb
das
int
icebp
push
dec
ss
pop
cwtl
popf
or
fucomi
or
leave
stos
adc
add
cmp
lcall
scas
bound
clc
jb
ds
stos
subb
and
fidivl
mov
inc
out
dec
ds
jae
sti
cld
ja
arpl
cmp
fisttps
lcall
pop
jle
jecxz
xchg
icebp
hlt
pop
mov
mov
pusha
jo
imul
clc
mov
mul
sub
cmp
lods
adc
fwait
dec
cmc
jb
adc
enter
mov
mov
inc
pusha
in
imul
int3
or
pop
pop
iret
out
jns
movsl
mov
bound
cmp
or
add
lods
pop
sarb
insl
mov
mov
sub
push
dec
ret
pop
mov
xor
jle
sbb
hlt
movsl
imulb
pushf
or
cmpsb
test
mov
jne
mov
not
lcall
inc
pop
test
jmp
sbb
aas
pop
out
js
inc
dec
test
jo
fnstcw
jle
idivl
xchg
divb
sbb
mov
push
pop
xor
mov
or
push
pop
xchg
push
insl
and
mov
jle
outsb
clc
popa
insb
sbb
repnz
add
cmpsb
pushf
cmp
sub
iret
push
arpl
cmp
ret
inc
inc
push
push
cmp
or
sbb
pop
das
stc
add
xchg
pop
dec
out
pop
stos
xor
xor
mov
pop
mov
cld
pop
dec
sbb
push
mov
inc
andl
mov
loope
mov
pop
adc
iret
jle
lock
movsl
push
cmpb
repz
addb
mov
sbb
mov
mov
xchg
pop
out
xorl
push
xlat
aam
cmp
fdivrs
stc
jo
imul
or
arpl
and
js
stos
and
iret
push
pop
sbb
pop
ds
ljmp
pop
add
inc
sub
dec
pop
push
xor
jmp
pop
pop
adc
rcrb
loop
rcll
mov
mov
mov
pop
jno
pop
in
in
arpl
or
xchg
hlt
jo
jne
addr16
aas
stos
add
pop
leave
cmp
pop
or
inc
pop
mov
lods
mov
lds
or
fdivs
out
lods
cs
jnp
pop
inc
xchg
cld
bswap
cmp
cmp
pop
inc
ret
aad
push
mov
cwtl
pusha
insb
in
lret
aam
cmp
popf
push
loop
inc
icebp
das
out
pushf
dec
out
jecxz
sarl
xchg
dec
pop
pop
sub
bound
sbb
fsin
cmpb
push
leave
pop
lcall
outsl
scas
or
gs
jnp
jne
ds
or
aas
testb
sbb
pop
leave
or
adc
push
xor
xor
test
adc
or
pop
fldz
mov
fsubl
rclb
push
dec
push
pop
and
inc
pop
lods
jno
xor
cld
ds
icebp
pop
in
repz
stc
jmp
mov
mov
xor
and
sub
cmp
cmp
fisttps
push
pop
push
fistl
pushf
movsl
pop
ret
lds
xor
dec
aaa
mov
or
jmp
insb
cmp
push
cmpsb
xchg
das
xchg
pop
bsf
cs
pop
outsl
ss
shrb
push
lock
aaa
test
mov
leave
pop
out
add
push
mov
outsb
sub
cmpsb
cltd
dec
mov
and
pop
sbb
test
cmpsb
and
lcall
divb
cmp
mov
pop
scas
fnsave
push
in
xor
pop
dec
xchg
popf
adc
fcoms
pop
xlat
push
loope
ja
inc
inc
xchg
mov
push
mov
adc
lds
sbb
ss
imul
pop
push
cmp
pop
pop
inc
cmpsb
lea
pop
mov
decl
adc
int
jp
outsb
mov
add
pop
adc
aas
mov
push
insb
add
pop
aaa
test
sbb
pop
iret
mov
cmp
out
pop
subl
fs
sub
mov
icebp
mov
jg
rorl
int
mov
test
mov
dec
or
jl
pop
and
in
outsl
jge
pop
repz
stos
add
cltd
pop
aaa
pop
or
xor
mov
lret
ja
push
int
inc
and
je
dec
das
mov
pop
xchg
cwtl
aaa
imul
adc
push
int
int3
mov
aam
jp
mov
push
repz
jmp
mov
fisubrs
js
pop
pop
fmull
pop
nop
cmpsl
leave
xor
mov
jp
mov
push
fucomip
jo
mov
mov
insl
cmpsb
mov
or
sbb
cmp
dec
adc
cmpsl
dec
test
cmp
push
call
test
jmp
adc
jmp
mov
stos
cmp
testb
push
shl
jecxz
testl
jg
les
lods
pop
dec
leave
dec
pop
stos
stos
cmpsl
sub
adc
or
pop
push
pop
xor
bound
pop
and
aad
outsb
mov
loope
movsb
pop
or
xchg
shr
es
push
cs
and
in
push
dec
add
push
inc
push
xor
inc
push
fisttpl
fmuls
mov
inc
mov
or
xor
mov
xchg
cmpl
xorl
inc
fcmovne
mov
xlat
pop
mov
test
fdivrl
add
push
fistps
lea
shl
push
jb
mov
and
pop
xor
jno
jecxz,pt
gs
pop
cmp
cwtl
mov
shll
and
and
sbb
add
orl
fsubp
jbe
cmp
mov
cli
mov
xchg
jge
enter
lods
or
je
out
fnsave
in
stos
dec
mov
sub
inc
and
rcrb
mov
pop
mov
cmpsl
mov
hlt
push
push
pop
aas
xor
ja
cmp
jle
add
aas
hlt
pop
sbb
pop
lock
dec
sbb
int
adc
fnstsw
mov
pop
imul
test
movb
dec
fwait
xor
popa
cmp
pop
xchg
cmp
xlat
mov
dec
stos
add
sbb
outsb
mov
xlat
daa
dec
push
in
dec
rcl
rcl
sbb
nop
jp
cmp
jbe
hlt
std
add
out
mov
mov
or
incb
cmpsb
inc
or
xor
rcll
inc
pop
adc
sbb
mov
roll
stos
dec
and
fldenv
cld
pcmpgtw
xor
jg
incl
pop
and
xchg
push
and
and
jg
adc
cmpsl
xor
cmp
mov
xchg
sbb
pop
fdivrs
and
xor
jg
adcl
or
or
aaa
pop
sub
dec
push
hlt
pop
pop
iret
icebp
out
cmp
inc
ret
pop
add
push
sahf
nop
xchg
pop
clc
mov
jae
addr16
sub
enter
stc
pop
jo
xor
push
mov
lret
stc
push
push
jp
mov
xor
mov
jb
js
pop
rol
mov
inc
push
pop
mov
push
cltd
adc
mov
cmpsb
gs
sub
outsl
bound
std
mov
aas
push
mov
cli
xchg
pop
mov
push
adc
xchg
pushf
inc
int3
out
dec
ret
mov
rorb
push
or
gs
adc
adc
ja
sbb
pop
sar
scas
movsl
arpl
sbb
sysret
aam
sub
pop
push
faddl
inc
pop
inc
or
ja
pop
dec
add
ljmp
cmp
xchg
xor
scas
into
pop
mull
pop
push
xor
lods
or
pop
fisubrl
pushf
or
xor
pop
stc
dec
xor
jp
aam
mov
mov
mov
adc
or
xor
cmc
into
add
xor
mull
mov
cmpsb
loopne
push
xchg
ss
ds
cmp
pop
jmp
pop
fsubrs
adc
push
inc
insl
pop
jns
cmp
nop
test
xor
push
sbb
int3
mov
cmp
jno
pop
icebp
mov
ja
movsl
push
lea
test
fmuls
jle
jg
pop
pop
xchg
sar
adc
adc
inc
scas
sbb
stos
inc
mov
lods
out
inc
int3
inc
xlat
pop
or
dec
push
jmp
add
jo
inc
sub
adc
lcall
inc
pop
push
sbb
fdivs
mov
je
int3
pop
mov
pusha
imul
mov
add
dec
in
imul
pop
lods
jg
or
sub
jl
and
ja
roll
xor
pop
movsl
pop
jnp
insl
cld
pop
sbbl
cmp
xor
pop
push
xchg
and
cmp
addr16
mov
imul
pop
es
stos
std
outsb
xlat
hlt
sbb
push
dec
scas
xchg
xor
out
mov
stc
call
pop
jp
popf
loopne
icebp
leave
pop
gs
sbb
xor
pop
das
mov
and
fistpll
movl
jbe
cmp
xchg
arpl
push
stc
pop
mov
repz
lods
fisttpl
xor
push
mov
int3
in
add
sbb
pop
pop
jl
xor
sub
mov
pop
fildll
pop
mov
sub
mov
shll
jno
mov
das
cli
jmp
jecxz
or
mov
and
subl
pop
lock
mov
mov
jg
in
adc
inc
stc
sub
nop
loope
pop
pop
xor
out
inc
in
testl
push
cs
sub
xor
pop
jle
lds
shr
mov
adc
jns
inc
stos
xchg
lea
or
cmp
jnp
jae
jmp
mov
sbb
arpl
lods
mov
mov
out
js
and
sbbl
lods
push
outsl
addr16
xor
loop
loope
push
cwtl
mov
pop
jo
es
inc
faddl
push
add
ret
pop
push
xchg
pop
mov
cmpsl
add
pop
aad
mov
mov
in
inc
dec
lock
stc
push
pusha
mov
mov
mov
xlat
sub
nop
pop
jl
mov
fcomps
xchg
sub
mov
xchg
push
mov
leave
and
mov
sbb
stc
ds
clc
or
je
lea
mov
addr16
scas
inc
orb
pushf
xor
and
mov
sub
sub
cmp
add
gs
int
and
push
mov
or
xor
pop
xchg
inc
push
cmp
xchg
inc
mov
dec
jae
fildll
out
jno
incb
loopne
pop
mov
arpl
adc
sbb
sbb
push
cmp
jle
stos
adcb
inc
mov
push
jno
mov
fsubs
lock
out
mov
sahf
push
movsl
mov
push
sub
outsl
mov
push
dec
fiadds
insb
sbb
mov
jl
push
push
cmpsb
pushf
inc
pop
dec
push
add
inc
add
in
pop
pop
pop
cmp
inc
dec
jg
push
loope
push
jp
push
popf
stc
jmp
push
sub
or
fdivl
cmp
adc
pop
sbb
mov
and
repnz
icebp
addr16
pop
decl
into
fisttpl
pop
inc
sub
inc
xchg
int3
sub
xchg
jp
fstps
shrb
adc
cli
jmp
stos
mov
xchg
add
cli
add
inc
in
lods
xorl
cmp
ds
pop
dec
ret
and
dec
in
mov
cmp
xchg
cmp
cmp
or
outsl
mov
jg
adc
xor
lret
push
sub
push
call
bound
rorl
aam
cs
push
pop
lods
jne
dec
push
test
sub
mov
pop
mov
sbb
pop
iret
jb
mov
push
std
aam
int
fsts
mov
cmp
adc
pop
xor
jnp
dec
ficoms
sbb
xor
hlt
or
jl
mov
jmp
in
ror
movsl
mov
cmc
repnz
out
mov
inc
movsb
sbb
shlb
pop
mov
aaa
loopne
push
add
lods
cmpsb
jge
shll
pop
test
pop
mov
jmp
es
fisttps
das
in
xor
popw
dec
or
enter
cmpsl
out
dec
xchg
imul
sub
push
sub
adc
jb
cwtl
push
mov
xor
call
xlat
adc
repz
adc
pop
jl
pop
push
cli
push
mov
pop
outsl
cltd
and
or
push
out
push
mov
jge
insb
cmc
out
in
pop
pop
filds
cmpsl
clc
push
arpl
shrl
push
jl
int3
ljmp
and
adc
enter
les
xor
pop
cs
sbb
movsl
dec
mov
pop
mov
filds
leave
roll
push
js
pop
std
jne
mov
inc
adc
mov
in
jns
pop
movsl
loopne
dec
add
mov
pop
mov
xor
adc
lret
aas
mov
or
adc
pop
mov
cmp
in
imul
lret
sbb
inc
popf
dec
pusha
pop
xor
imul
xchg
lods
std
inc
int
hlt
cmovl
clc
popf
pop
pop
jle
pop
dec
ror
in
int3
xor
or
add
add
pop
jl
lock
rcrl
cmpsb
repz
daa
pop
aad
adc
pop
mov
mov
cmp
dec
rcr
inc
dec
adc
outsl
pop
jmp
icebp
push
add
loop
push
adc
pop
inc
mov
or
jmp
fwait
xchg
roll
mov
adc
lahf
fcoms
jecxz
cwtl
push
push
pop
les
lret
cmpsb
dec
cmp
inc
pop
jmp
push
jg
sbb
xor
mov
outsb
cld
js
mov
xchg
add
push
jp
sahf
setl
push
pop
ret
or
pop
je
gs
adc
or
or
sbb
rcr
repnz
mov
loope
mov
pop
xor
lock
nop
mov
jo
adc
jnp
in
repnz
mov
xchg
popf
pop
mov
lret
jge
jge
lods
inc
out
pop
pop
sbb
and
pop
cmc
add
aam
xor
xchg
lods
je
lock
cwtl
pop
ret
adc
movb
leave
xchg
pop
into
outsl
ret
test
fwait
cmp
jmp
add
pop
mov
xor
sbb
stos
pop
xor
jns
das
or
pop
lahf
dec
xchg
arpl
adc
scas
out
sub
int3
cs
or
roll
sub
mov
or
ret
ret
cmp
out
lock
cmp
lea
xchg
cmpsb
imul
in
add
xor
rorb
shl
js
inc
jmp
mov
stos
fcomps
fdivrp
jl
add
xchg
adc
enter
cmp
inc
ljmp
in
xor
repz
mov
pop
sarb
test
jno
imul
ret
fs
subps
pop
sbb
sub
lahf
imul
add
pop
mov
cwtl
sahf
arpl
jbe
pinsrw
outsl
jno
fists
sbb
jp
pop
jmp
dec
fs
and
mov
inc
or
arpl
xor
lcall
ret
adc
clc
aam
push
and
adc
add
mov
lcall
in
push
out
jp
jno
mov
jg
test
mov
adc
in
bound
sbb
pop
add
cmp
outsb
sub
mov
enter
fwait
mov
mov
call
or
outsl
inc
cld
jnp
andb
pop
jae
out
clc
mov
mov
jnp
sti
xchg
cmp
lret
adc
push
rolb
in
pop
pop
mov
dec
pop
scas
sbb
push
vsubsd
mov
popf
xlat
or
dec
pop
clc
aas
popa
xchg
mov
arpl
push
mov
xchg
decb
pop
out
xchg
push
enter
rclb
imul
subb
cmpxchg
xor
dec
sub
or
inc
cmp
mov
call
icebp
gs
sbbb
test
pop
loope
xor
xchg
lahf
push
ret
mov
out
or
pop
ficoml
and
xor
imul
out
add
loope
insl
pop
aam
add
int3
jp
cmp
int
mov
jg
dec
lret
or
xor
popf
mov
sbb
jmp
push
or
xor
pop
add
or
cs
pop
add
inc
dec
sbb
loopne
sbb
pop
cmp
mov
std
add
cmpsb
xor
ljmp
repnz
pop
ljmp
cmp
pushl
xor
in
outsl
add
mov
mov
adc
mov
adc
push
inc
push
push
int3
sbb
negl
mov
adc
pop
je
outsl
push
out
iret
fwait
and
pop
lret
dec
sbb
movsb
loopne
jae
pop
neg
pop
cmp
adc
jns
mov
ret
sbb
clc
lret
mov
popf
aas
ret
or
inc
fdivr
movsb
pop
fldenv
loopne
fstl
mov
int3
cmpsb
popf
les
addr16
pop
push
insl
push
test
rolb
outsl
xor
push
mov
je
out
in
int
in
lret
sbb
pop
shll
push
and
cmp
in
cs
xchg
mov
cld
mov
out
in
adc
mov
pop
xchg
fs
jnp
cmp
scas
jae
adc
pop
out
push
insb
lahf
mov
scas
push
adc
outsb
pushf
jmp
stc
je
or
out
daa
sub
adc
xor
addr16
in
push
push
dec
mov
inc
lcall
scas
xchg
jmp
inc
pop
inc
addr16
out
lds
fstp
addl
pop
inc
pop
push
pop
xor
das
dec
ja
les
mov
xor
movsb
cs
hlt
push
jle
jge
mov
into
mov
sub
pop
sub
mov
pop
hlt
aam
sub
pop
xor
addr16
inc
imul
adc
fwait
push
push
sbb
sti
adc
in
mov
and
inc
dec
incl
jmp
xor
stos
imul
jp
push
ds
mov
pop
jno
inc
or
pop
cmp
pop
adc
je
pop
inc
adc
stos
pop
out
into
ret
push
mov
je
pop
loope
mov
aaa
mov
xchg
pop
cmpsl
and
rcl
std
inc
pop
ljmp
orb
lea
je
adc
xor
add
mov
es
inc
pop
mov
int3
enter
aad
andl
fwait
add
xchg
sbb
loop
jle
cltd
pop
addr16
mov
jge
leave
dec
pop
jno
sub
pushl
or
and
inc
xor
adc
fistps
loope
push
in
add
es
or
or
dec
rcr
aas
pop
lcall
imul
xchg
add
dec
pop
icebp
addb
sbb
mov
mov
xlat
xchg
int3
cmpsl
inc
push
pop
stos
outsl
cmp
mov
cmp
cmp
pop
and
adc
dec
scas
mov
insl
xor
push
push
negl
inc
dec
dec
pop
jl
sub
xchg
in
sbb
sti
or
inc
aam
divb
bound
sbb
dec
mov
mov
mov
dec
mov
es
jb
mov
pop
mov
jbe
loop
mov
shlb
aam
jg
aas
adc
pop
pop
mov
sbb
in
pop
rorl
cli
inc
push
aas
pop
push
outsl
es
pop
mov
pop
ds
clc
and
mov
out
lcall
jle
sbb
fbld
pop
f2xm1
ljmp
ss
sub
dec
pop
in
push
mov
gs
sub
push
adc
sbb
sysret
jg
mov
das
pop
sub
xor
xor
adc
into
loopne
lret
icebp
sbb
pop
lret
std
and
gs
xchg
ja
pop
icebp
call
xor
nop
pop
push
pop
repz
ljmp
inc
faddl
cs
call
int3
dec
push
lods
adc
cmc
inc
jp
aam
mov
repnz
jmp
mov
ljmp
xor
sbb
incl
xor
rcrb
xchg
mov
dec
push
push
enter
xlat
cmp
roll
pop
dec
imul
xchg
rcrb
push
pop
gs
mov
jecxz
lret
push
pop
popa
rclb
pop
and
fisttps
cs
pop
add
movsb
out
pop
int
lock
inc
icebp
iret
push
into
fadd
xor
or
adc
dec
sub
lea
punpcklbw
aam
inc
imul
pop
pop
insb
lret
repz
jmp
dec
jmp
pop
sub
push
pop
add
in
lcall
sbb
arpl
pop
mov
movl
je
rcr
and
push
add
push
test
mov
addr16
stos
lea
add
in
adc
inc
dec
sbb
and
sub
das
mov
int
popa
pop
sub
ljmp
cli
add
andb
lods
mov
push
jae
enter
jl
push
repz
pop
rcl
outsl
loopne
pop
xchg
out
xor
or
inc
ficomps
fcoml
test
mov
in
xchg
stos
mov
and
das
jnp
cmc
mov
xchg
mov
pop
jo
cmpl
sbb
jns
pop
insl
cmp
loope
jb
pop
or
arpl
sub
loop
mov
hlt
inc
movsl
dec
gs
push
mov
xor
loopne
imul
dec
add
push
mov
add
mov
leave
andl
jbe
xchg
adc
rorl
enter
icebp
jns
jge
lahf
std
cmp
adc
jmp
iret
pop
push
aad
add
xchg
rclb
fsubs
ss
pop
aaa
mov
andl
pusha
sub
rolb
dec
fs
cmpb
movsb
movsl
rcll
mov
mov
adc
and
sbb
roll
adc
jns
xchg
and
bound
and
sti
xchg
xor
pop
in
and
xchg
gs
jb
xchg
and
decl
push
arpl
push
mov
into
adc
dec
and
std
lods
pop
dec
movsb
int3
ret
sub
test
pop
lods
repnz
jmp
les
mov
movsb
pop
imul
les
leave
jle
test
sbb
pop
or
xor
inc
push
inc
test
cmc
scas
push
dec
pop
mov
aam
ljmp
ret
mov
push
or
insl
jge
pop
test
mov
popl
pop
testb
pop
lret
push
stos
stos
mov
jecxz
pop
sbb
xlat
pop
push
lods
add
add
add
adc
aas
push
jae
jnp
push
cmp
pop
cmpsl
imul
dec
sub
stc
or
xlat
cltd
push
pop
adc
sub
jae
mov
mov
mov
ds
sub
pop
sbb
xchg
lahf
dec
ret
or
loop
and
jae
movsl
push
out
icebp
cmpsl
pushf
or
bound
aad
leave
jecxz
adc
pop
scas
fs
push
xor
jns
pop
fcomp
int3
aaa
cmp
inc
fistpl
sbb
and
and
jp
inc
je
dec
sbb
mov
mov
into
sbb
jbe
ret
int3
mov
pop
and
jle
mov
nop
negl
iret
push
rcrl
xlat
mov
sbb
sbb
push
out
xor
jecxz
lret
jle
pop
xor
lods
sbbb
rolb
jmp
adcb
faddl
push
adc
pop
insb
aad
jmp
or
cmpps
inc
jns
mov
popa
mov
cwtl
adc
pop
imul
outsb
dec
cmpsb
mov
sub
sbb
push
pop
mov
inc
mov
inc
lods
pop
add
repz
rolb
in
cltd
xlat
xchg
aad
dec
sbb
push
lcall
and
fwait
shll
adc
xor
enter
inc
mov
add
xchg
xor
fidivs
jae
outsl
clc
into
out
xor
mov
mov
and
or
sarb
xor
jle
pop
add
int3
cmp
bound
insb
sub
test
popf
iret
out
dec
out
movsl
and
pop
cmp
xchg
mov
loop
scas
cmp
repnz
dec
popf
pop
or
dec
sbb
js
cwtl
je
pop
lret
pop
repnz
popf
insb
fdivs
outsl
mov
pop
mov
xchg
jne
stc
jae
lcall
pop
xor
call
int3
ds
loope
dec
add
inc
inc
mov
or
inc
fs
xor
push
fisttps
fldl
in
outsb
push
lret
ret
aaa
xor
xchg
mov
aam
xchg
pop
inc
jne
inc
ds
test
les
in
mov
dec
shl
xor
jmp
icebp
push
inc
mov
aas
dec
cli
cltd
sbb
insb
enter
or
inc
out
inc
movsb
jae
sub
push
xor
mov
cli
adc
mull
adc
out
ds
aaa
out
jno
popf
orl
pop
aaa
xchg
adc
mov
in
push
jno
xchg
hlt
jne
adc
mov
xchg
dec
sahf
dec
rcll
dec
cld
jb
mov
cmp
push
rorb
filds
imul
push
jmp
or
mov
pmuludq
in
jo
jno
push
pushf
pop
lret
push
jnp
int
and
pop
pop
push
mov
cld
xor
pop
xor
popa
mov
mov
ret
in
xor
adc
loope
sub
cmp
cmp
pop
cmp
sub
aad
shlb
lcall
sbb
repnz
sbb
sahf
icebp
pop
test
int
pushf
shrb
inc
decl
mov
and
ja
push
pop
add
out
std
leave
fwait
pop
mov
dec
add
addl
xor
jmp
movsb
repz
popf
cs
clc
push
sar
fwait
pop
sbb
subl
dec
or
or
adc
outsl
icebp
pop
sbb
sti
rolb
adc
cltd
pop
pop
mov
sbb
in
icebp
repz
dec
shl
mov
mov
out
push
std
cwtl
push
fiaddl
cld
add
or
mov
push
mov
dec
jb
int3
lret
adc
mov
jmp
les
sbb
jg
lret
subl
push
iret
adc
pop
jnp
aad
add
xor
outsb
pop
pop
push
mov
inc
call
mov
lret
xchg
push
inc
pop
push
popf
xchg
xlat
push
das
inc
dec
pop
cmpsl
loope
sub
pop
inc
add
sti
aad
cmp
loope
xchg
or
lods
js
mov
push
dec
mov
cmp
iret
inc
mov
pop
pop
imul
lods
pop
mov
mov
loop
insl
ds
jge
add
popf
enter
xchg
mov
pop
test
mov
push
inc
test
add
orb
das
add
sub
pop
shlb
in
mov
pop
enter
out
pop
orl
sub
xor
and
flds
inc
stos
jg
jl
mov
xabort
loopne
sub
xchg
xor
cmp
pop
mov
nop
arpl
sub
mov
cld
mov
xchg
fsts
push
rcl
nop
pop
ljmp
pop
pusha
inc
mov
push
inc
cmp
stc
data16
icebp
out
adc
mov
loope
push
xchg
mov
pop
jo
nop
or
xorl
in
mov
int
pop
fwait
rcr
jno
adcl
xchg
pop
xchg
fmuls
jmp
and
xchg
or
add
sbb
adc
mov
push
or
scas
sub
pop
testl
sahf
inc
jge
pop
in
pop
pop
int3
outsl
mov
daa
in
in
jno
push
sub
aaa
inc
sub
and
xchg
inc
sub
mov
call
push
jae
pop
inc
push
xchg
test
push
insl
lods
out
dec
xlat
pop
lahf
xor
dec
inc
and
sub
pop
mov
xchg
jnp
jne
push
pop
stc
push
jb
push
insb
inc
add
int3
je
xchg
sbb
inc
jg
int
sub
outsl
or
aas
cmp
xchg
pop
sbb
jmp
xchg
mov
push
je
fs
pop
mov
lds
xchg
stos
jmp
int3
add
push
and
rcll
push
ja
xchg
xlat
nop
arpl
xor
lock
push
in
adc
mov
in
mov
pop
outsl
insl
das
or
mov
or
dec
rcrl
sbb
aaa
xor
inc
jno
push
rolb
push
ds
outsl
lahf
lcall
xchg
cmpsb
sub
iret
or
imul
imul
sbb
frstor
or
xchg
cmp
jb
out
sbb
std
ja
or
mov
and
pop
ret
pop
test
sti
jns
add
or
pop
push
pop
inc
push
mov
xor
jmp
sahf
aad
adc
pop
mov
jnp
push
cmp
test
mov
lahf
out
and
pop
mov
clc
mov
push
insl
inc
pop
pop
shrl
jg
adc
shld
ds
push
xor
pop
lock
loopne
in
or
mov
js
aas
adc
popa
repnz
jg
xchg
mov
cmp
int3
sub
pop
sarl
fmull
inc
inc
nop
push
jg
or
dec
xchg
pop
add
lcall
ja
lea
sub
jmp
sbb
add
das
cmpsl
ljmp
or
movsb
sub
scas
jmp
mov
pop
jbe
outsl
inc
add
pop
mov
in
jno
aas
cmc
scas
pop
imul
jbe
adc
loope
mov
loop
sub
mov
jnp
push
fisubl
scas
sbb
mov
inc
aad
mov
outsb
incb
push
push
int
cwtl
pop
pop
testb
mov
adc
sub
cmc
xchg
pop
movsb
xchg
push
outsb
pop
jecxz
xchg
and
fdivrl
out
pusha
popa
fwait
ja
mov
mov
adc
push
mov
mov
imul
dec
pop
fsubr
inc
mov
aad
dec
pop
adc
rclb
loop
mov
mov
int3
adc
std
jne
pushl
fisubl
js
or
inc
add
inc
jae
xor
pop
push
xor
fdivrs
test
cmc
pop
jnp
sub
add
insl
sub
jmp
dec
mov
scas
pop
lret
fsubrs
rcrb
jns
jne
jl
dec
ds
push
mov
xor
lcall
mov
push
pop
push
inc
sub
xor
mov
xchg
pop
pushf
push
jb
mov
jo
shrl
cmpsl
sub
imul
int3
mov
in
pop
push
cmpsb
sbb
std
iret
adc
data16
and
push
xlat
push
push
scas
imul
pop
inc
aas
push
outsb
dec
or
mov
dec
sbb
pop
sbb
sbb
pop
pop
loopne
push
gs
mov
adc
pop
test
out
movl
rcl
add
rclb
push
pop
sub
imulb
xor
fwait
mov
push
mov
lret
xor
or
xchg
push
bnd
cli
addl
pushl
sub
cmp
push
jp
out
fisttpl
repz
cmp
xchg
in
pop
jae
inc
pop
ret
pop
ficompl
cmp
jl
inc
pop
add
cmc
mov
je
pop
repnz
into
mov
popf
negl
enter
add
test
out
mov
jg
xorb
xchg
psllq
mov
inc
mov
jns
lret
jl
pop
aaa
sub
adc
inc
mov
inc
pop
pop
push
xor
xor
xchg
mov
clc
gs
loope
sti
mov
push
inc
dec
je
inc
in
mov
push
dec
adc
out
jbe
push
test
jge
adc
in
pop
or
sbbb
fists
mov
addl
in
mov
stos
mov
cld
cmp
icebp
mov
pop
adc
mov
push
shl
fistpl
in
push
and
push
mov
xchg
push
cmovo
pop
inc
mov
in
enter
jb
in
insb
pop
mov
aad
pop
add
xchg
inc
int3
push
jge
push
push
mov
fwait
leave
cmpsl
inc
add
sbb
loope
inc
cmp
or
pop
shrb
jnp
adc
repz
inc
jno
mov
pop
push
aaa
and
add
inc
pop
icebp
imul
adc
test
mov
mov
movnti
rolb
leave
adc
popa
mov
cmp
and
aas
adc
mov
sbb
adc
popf
dec
dec
loop
or
lods
inc
pop
ss
pop
dec
pop
mov
pop
std
adc
push
into
lods
jns
xlat
stos
pop
xchg
mov
or
xor
jmp
adc
sbb
adc
inc
pop
in
cmc
mov
xchg
pop
arpl
mov
lret
jl
pop
call
mov
xchg
mulb
mov
add
or
inc
or
or
fldl
call
iret
xchg
das
pop
jns,pt
not
push
cli
rolb
cmp
paddusb
aaa
xlat
push
or
iret
cmp
pop
sub
insb
push
push
mov
sti
or
popf
ds
pop
fsts
mov
pop
push
call
fildl
mov
adc
test
mov
or
sbb
rcr
dec
and
das
aad
push
inc
xchg
lock
into
fs
es
push
pop
or
add
xor
mov
outsb
pop
jnp
sti
inc
out
xchg
push
mov
stos
dec
sub
mov
mov
vmwrite
mov
sti
aad
pop
dec
pop
out
lcall
pop
or
rcrb
jns
pop
loopne
cltd
xchg
mov
pop
pop
es
loop
imul
inc
cmp
jecxz
addb
mov
mov
stos
dec
pop
cwtl
jo
push
movsb
sbb
lahf
out
mov
and
xor
and
out
lahf
cmpsl
sub
push
dec
mov
xchg
dec
mov
push
sub
xchg
or
pop
xor
xchg
mov
and
pop
push
mov
ret
jg
push
jae
aaa
mov
push
and
xchg
scas
add
mov
cwtl
in
ljmp
adc
inc
pop
cs
std
lret
xor
hlt
ljmp
test
aaa
sbbl
push
cmp
adc
cs
xchg
cltd
pop
mov
mov
pop
shlb
sbb
pop
movsl
dec
lds
sbb
pusha
and
insb
std
sub
and
call
lods
push
mov
jmp
lds
pop
loope
adc
mov
mov
sub
cmp
cld
xchg
mov
add
pop
int3
test
das
pop
and
dec
fdivl
stos
pop
lcall
xor
pop
or
adc
mov
and
pop
xchg
cmpsb
mov
scas
pop
cmpb
pusha
sub
outsb
cmp
mov
pop
or
iret
mov
enter
lods
out
psubw
test
mov
bound
pusha
or
inc
int3
pop
inc
inc
out
or
fists
pop
pop
cmp
adcl
pop
rcrl
in
mov
adc
inc
or
adc
mov
add
stos
push
sub
inc
loope
xchg
popf
stc
pop
jp
jmp
cltd
mov
rcrl
adc
dec
and
jmp
xchg
call
rorl
gs
push
mov
xchg
inc
jge
jo
sti
lods
sbb
inc
lahf
xor
push
or
pop
movsb
aas
xor
sub
pop
xchg
stos
ss
cwtl
adcb
jne
outsl
dec
jp
incl
int3
add
clc
ljmp
push
mov
cld
dec
pop
pop
jge
add
mov
pop
mov
js
mov
pop
movsl
mov
lret
in
in
adc
adc
mov
das
jns
pop
or
out
jbe
rcrb
rcrl
dec
mull
ja
iret
mov
push
pand
push
lret
addb
cwtl
pop
xlat
inc
mov
clc
lret
addr16
loopne
popf
mov
fisubrs
out
fnsave
sub
inc
out
outsb
ds
cmpb
vhsubps
mov
pop
std
lcall
popa
adc
lods
andl
push
repz
pop
cmp
fsubrl
or
stos
mov
mov
jne
in
les
add
mov
cwtl
jbe
sub
lret
dec
in
inc
fsubrl
jnp
mov
mov
mov
sbb
xor
inc
pop
arpl
andb
lods
incb
shll
imul
sti
aam
adc
mov
out
inc
mov
xchg
mov
in
push
jge
jno
rcll
enter
inc
jae
frstor
cmp
pop
cmovns
lret
xor
sti
in
out
test
xchg
test
inc
addb
std
jmp
pop
xlat
inc
je
sub
mov
jno
jnp
cld
dec
cwtl
jg
imul
jl
mov
mov
xchg
xchg
inc
adc
les
mov
sbbl
call
fucom
xor
push
out
sub
inc
mov
pop
xlat
push
ud1
pop
not
pusha
push
push
aas
pop
std
push
gs
les
lock
mov
mov
lcall
pop
out
xor
mov
movb
adc
xor
adc
cmp
les
in
mov
pop
pushf
aam
cs
adc
stos
movl
js
push
leave
cmp
sahf
gs
pop
push
push
inc
cmc
sub
add
sub
loop
das
xor
in
sbb
jb
mov
cmp
push
je
add
mov
mov
pop
and
movsb
jmp
insl
outsb
push
popf
into
xchg
pop
outsl
imul
icebp
stc
jo
mov
sbb
mov
mov
or
fildl
pop
mov
mov
cmpsl
pop
ret
js
dec
mov
adcb
mov
adc
sub
bnd
jno
push
aad
js
push
fwait
dec
mov
cmp
mov
mov
movsb
mov
insb
rolb
hlt
pop
imul
adc
sub
insl
or
inc
lret
sub
inc
das
push
mov
push
lahf
jns
popf
cmp
push
push
test
ljmp
pop
sub
push
pop
in
rorl
out
repz
adc
insb
and
cmp
cmpsb
fidivl
mov
xor
sbb
out
fwait
imul
xor
iret
out
hlt
push
and
cmp
pop
cld
adc
push
test
mov
xor
out
pop
ret
xchg
mov
mov
jg
sub
pop
fisttps
and
or
and
pop
test
mov
pop
lret
adc
cltd
dec
sub
mov
push
shlb
pop
jl
icebp
xchg
inc
call
add
out
aas
jae
insl
inc
pop
pop
pop
dec
mov
or
or
repnz
mov
jo
adc
imul
leave
in
mov
scas
cli
je
inc
and
out
mov
bnd
orl
dec
dec
xor
push
xor
pop
mov
lods
jmp
xor
mov
adc
or
loop
mov
imul
xor
std
pop
cmpl
lock
sarl
xchg
jl
fcoml
mov
lods
mov
pop
test
and
lahf
movsb
inc
jmp
in
jnp
es
mov
outsb
andb
fistl
arpl
xchg
pop
pop
push
out
lds
gs
xchg
pmulhuw
jecxz
mov
cmc
xor
or
int
adc
and
fdivrl
push
pop
xchg
add
mov
mov
popf
add
mov
pop
xor
test
pop
rcrl
sbb
pusha
pop
outsb
stc
cmp
push
cs
sar
leave
pop
sub
enter
mov
sub
hlt
xor
push
xchg
push
cwtl
ds
mov
je
mov
andb
cmp
or
adc
and
push
popa
pop
ss
adc
push
js
pop
xor
loope
or
sbb
cld
jmp
inc
dec
inc
xor
mov
adc
sub
inc
push
push
sub
xor
or
repz
addr16
xor
pop
pusha
pop
roll
xlat
mov
jge
mov
jbe
push
push
push
stc
frstpm(287
sti
fldcw
mov
sub
stos
dec
scas
test
insb
or
adc
pop
repz
hlt
out
xchg
pop
adc
std
or
cld
popf
pop
nop
inc
push
popw
shlb
mov
addr16
push
pop
fistpl
pop
dec
xor
arpl
imul
jmp
mov
sbb
addr16
dec
sti
dec
jo
mov
cmp
pop
add
mul
lahf
xchg
stos
pop
test
insb
push
ds
pop
cmpsb
dec
inc
or
int3
pop
pop
shll
pop
faddl
std
add
in
aad
lcall
mov
out
cmp
sub
adc
pop
mov
pop
fistps
pop
jo
jmp
mov
push
sbb
xor
add
test
cmpsb
repz
adc
icebp
pop
adc
fcompl
push
xor
mov
mov
icebp
mov
mov
arpl
rol
inc
xchg
iret
data16
push
xchg
call
pushf
dec
sub
jbe
or
xor
cmpsl
inc
mov
pushf
pop
rolb
mov
mov
fidivrl
lret
fucomp
pop
jae
addl
fimull
aam
jecxz
stos
enter
imull
and
xor
push
movsb
mov
pop
push
and
leave
xchg
ret
aaa
xor
jns
inc
ljmp
leave
aas
adc
ja
adc
pop
jb
inc
cmp
or
mov
jge
pop
call
cmp
pop
adc
fisubs
bound
push
cmpsl
inc
sub
pop
jnp
push
jle
push
cli
jge
or
movsb
cwtl
pop
lcall
addb
inc
aad
out
std
lea
pop
cltd
xor
stc
push
mov
leave
enter
adc
ljmp
movb
inc
arpl
mov
dec
or
lcall
dec
loope
push
xchg
jp
addr16
cmp
and
jae
pop
mov
in
ja
jo
add
cli
sbb
pop
out
rorl
fildl
inc
add
inc
test
outsb
scas
xchg
mov
dec
ljmp
add
shll
cmpsb
or
and
pop
xorl
mov
push
or
and
pop
mov
aas
lret
mov
push
push
push
mov
or
xor
mov
push
mov
pop
pop
sub
sbb
or
inc
mov
xor
jnp
sub
or
sarl
adc
push
scas
push
mov
xor
das
je
pop
pop
pusha
push
aaa
pop
fidivrl
pop
imul
in
pop
lods
push
mov
out
into
pop
sbb
std
pop
pushf
mov
xchg
cmp
inc
mov
and
cmc
pop
test
dec
aam
nop
stos
cmp
mov
xchg
cmp
dec
jmp
mov
adc
xchg
inc
pop
dec
or
sbb
clc
ljmp
outsl
lahf
lods
cmpsb
insl
mov
lea
cmc
stc
aaa
pop
jp
out
clc
gs
fldl
lods
mov
cmp
inc
dec
dec
adc
jp
fwait
push
mov
into
in
sub
sub
pop
jge
rolb
mov
pop
cmp
ret
insb
pop
push
les
jo
nop
or
mov
fdivrp
pop
adc
xor
lods
out
mov
push
jl
mov
cmp
lea
fwait
scas
push
push
mov
stos
movb
adc
or
in
add
adcl
mov
push
enter
fst
push
lods
std
jg
add
movsl
dec
and
inc
aam
fnstenv
mov
mov
jp
dec
stos
jle
cs
push
xor
test
add
scas
sub
cmp
mov
pusha
mov
jo,pt
pushf
scas
cmp
mov
inc
les
stc
inc
pop
or
pop
or
mov
repnz
enter
push
and
imull
mov
leave
sbb
sub
cs
mov
out
pop
negb
pop
out
sbb
call
enter
lea
jns
out
mov
mov
shl
aas
push
pop
nop
pusha
stos
fst
clc
xor
call
xor
stos
iret
xchg
sarl
test
mov
mov
test
push
mov
or
clc
inc
cld
popf
adc
pop
int
aam
push
and
outsl
orl
and
jl
push
xchg
jmp
mov
repz
leave
imul
cmpl
cmp
cld
insb
and
xchg
xchg
add
ja
arpl
sbb
iret
push
cmp
mov
rolb
dec
jp
outsb
stos
pop
or
les
pop
sti
adc
xchg
xchg
roll
ja
mov
pop
add
and
popa
imul
or
inc
pop
or
arpl
mov
mov
shrd
pop
push
push
imul
and
push
call
jno
cmpsl
xchg
fimull
or
lcall
outsb
cmp
lret
insb
stos
or
out
mov
sub
xchg
sahf
push
aaa
scas
pop
and
pop
cld
lods
aad
push
ljmp
nop
ja
gs
ret
push
addl
lahf
les
and
jmp
lcall
mov
mov
hlt
xor
pop
outsl
shlb
push
mov
push
xor
cltd
add
pop
fnstsw
ret
mov
or
inc
adc
xchg
imul
test
dec
call
cs
pop
mov
rcll
into
fadd
mov
pop
in
es
jl
aam
jae
push
sbb
cmp
jmp
push
mov
jge
inc
xor
sbb
stos
pop
xchg
bound
sub
outsl
mov
jl
fsts
xor
cmp
clc
mov
mov
pop
sub
push
stos
sub
into
jns
xor
in
mov
icebp
lret
neg
xchg
inc
lods
sbb
dec
rorb
pop
mov
mov
movb
das
xor
xor
fisttpll
pop
adc
arpl
repnz
aas
enter
cli
or
inc
cmp
xor
jecxz
icebp
ss
push
stc
and
jno
shll
inc
cltd
std
scas
enter
mov
loope
cmpl
push
xchg
pushf
push
mov
sub
test
inc
sti
sub
xorl
and
push
dec
push
jb
and
mov
lds
dec
jg
pop
dec
or
jecxz
adc
lods
dec
mov
cwtl
mov
cmp
pop
or
inc
sti
repnz
repz
pop
fsubl
mov
push
dec
pushf
cli
popa
loopne
push
inc
jmp
xorb
imul
jno
push
in
add
jns
xchg
cwtl
inc
pop
int
sub
dec
cmp
adc
test
xsaveopt
jb
inc
ss
dec
jle
cmp
push
outsb
rcrb
fisubl
call
mov
imul
jmp
stc
mov
test
jp
pop
loopne
sub
or
inc
jmp
lods
mov
pop
push
jo
lods
lcall
sbb
ja
push
xchg
xchg
jns
and
xor
test
insb
aad
pop
lods
std
cmp
mov
pop
in
lahf
divb
sbb
roll
insl
rorl
or
and
std
pop
adc
out
inc
fsubrl
cmp
sbb
ffreep
lahf
pop
mov
lea
xor
xchg
out
loop
mov
jbe
pop
mov
scas
bound
insb
mov
je
push
xchg
pop
ret
inc
sbb
push
adc
lods
jno
aas
addb
lea
fldl
adc
jmp
sbb
adc
das
push
loop
js
adc
and
mov
dec
or
pop
lret
xlat
cmpsb
mov
pop
lds
push
loope
call
lods
adc
inc
stos
repz
and
cmp
cmp
adc
lret
ret
mov
adc
stc
hlt
jg
and
pop
in
dec
notb
pop
jns
jmp
clc
adc
aas
push
pop
aam
pop
dec
push
mov
pop
sbb
pop
xchg
shll
in
sub
push
out
cmp
sbb
fldl
andb
iret
inc
pop
pop
in
loope
push
imul
cltd
push
pop
in
pusha
js
data16
pop
mov
jecxz
rolb
icebp
jp
push
jmp
int
outsl
mov
adc
or
lods
inc
bswap
push
mov
jb
and
in
push
sub
sub
xchg
cmp
or
gs
inc
cmpsl
dec
cwtl
lock
cmpsl
or
cmp
stos
jae
nop
andb
out
adc
pop
pop
insl
rorb
jne
jnp
xchg
mov
or
inc
jne
lcall
ss
pop
xchg
sub
insb
mov
std
push
mov
pop
repz
mov
dec
dec
xorl
mov
jge
jle
or
sarb
hlt
ss
or
xchg
test
sar
jo
inc
loop
pop
add
mov
and
sbb
push
pop
rorl
jp
mov
xor
push
sub
dec
mov
pusha
pop
outsb
mov
lahf
pop
imul
andb
clc
repz
scas
push
rclb
ret
adc
stos
push
in
dec
inc
mov
pop
pop
adcl
scas
sbb
push
cmpsb
in
pop
gs
divl
pop
dec
xlat
pop
rcr
enter
sbb
mov
cmp
pop
mov
adc
pop
jns
pop
dec
or
test
inc
mov
cmp
lds
push
push
cld
pop
pop
imul
mov
cmp
jno
pop
stos
lea
add
and
push
pusha
adc
fwait
xor
or
movsb
in
mull
fdivrl
mov
jmp
cmc
jb
mov
stos
stc
jne
pop
pop
push
push
movsb
lds
pop
dec
in
out
cltd
pop
inc
xor
inc
or
ja
jl,pt
paddusb
mov
or
push
outsl
adc
mov
repnz
ljmp
dec
and
cmp
stc
pop
fldenv
stos
sub
dec
out
mov
arpl
lock
scas
xor
xchg
mov
das
and
imul
jge
in
outsl
cmp
pop
mov
dec
inc
popa
sub
dec
mov
pop
aas
jns
loope
add
and
push
js
cmpsb
push
pop
les
sub
and
mov
cli
gs
lcall
adc
clc
pushf
push
jg
insb
mov
dec
pop
cmp
hlt
inc
jmp
mov
out
pop
xor
fldt
jge
ret
mov
mov
dec
mov
gs
nop
shlb
fwait
js
std
pop
jmp
cmp
pop
sub
mov
push
lock
mov
and
adc
pcmpgtb
xchg
cld
push
int3
movb
sub
mov
insb
sub
cmp
int
mov
outsl
enter
sbb
pop
ljmp
mov
dec
inc
stc
or
sub
push
mov
rol
xchg
pop
fdivl
stc
pop
push
stos
push
pop
unpckhps
jbe
fstl
enter
je
push
repz
inc
mov
insl
mov
adc
mov
aaa
xor
out
dec
mov
add
int3
or
stos
cltd
or
ret
enter
aas
sbb
outsb
clc
sbb
sti
mov
sbb
cli
xor
push
shll
femms
pusha
fdivl
mov
iret
xchg
cld
subl
pop
out
aaa
enter
dec
inc
jns
cmp
mov
aad
outsb
sbb
lret
enter
pop
xchg
decl
adc
pop
xor
sub
std
mov
mov
arpl
mov
test
pop
xchg
es
add
mov
arpl
cmpsl
jns
gs
mov
mov
outsl
cmp
push
jmp
adc
ficoms
scas
pop
sbb
add
mov
mov
mov
iret
pop
sub
pop
and
stos
or
pop
mov
and
dec
fcoml
xchg
cmp
pop
jmp
fistpll
leave
jno
adc
mov
pop
push
clc
mov
push
pop
popf
pop
aas
jno
andl
fs
xor
fistps
mov
pop
mov
xchg
mov
dec
cmp
inc
mov
test
dec
and
pop
outsb
dec
or
outsl
iret
pop
rcrl
or
pop
add
nop
cmp
mov
pop
rcll
repnz
gs
sub
dec
adc
jp
outsl
dec
dec
fs
adc
adc
sbb
cs
inc
mov
sar
inc
scas
js
or
jle
adc
cmp
jnp
pop
stos
mov
scas
or
addl
pop
sub
dec
sub
fnstcw
andb
pop
and
push
test
mov
pop
cwtl
jl
jp
mov
cs
pop
cmp
xchg
call
fwait
test
and
or
outsl
imul
test
mov
jo
popa
jns
dec
arpl
punpcklbw
cmp
in
and
fneni(8087
cmp
stos
mov
mov
sbb
scas
rol
xchg
cmpsl
lods
imul
cltd
xchg
pop
inc
ret
subb
jno
mov
pop
push
pushf
mov
clc
jnp
add
inc
or
and
cltd
imul
xor
js
dec
cltd
pop
bound
mov
xchg
push
pop
sarl
not
pop
xor
test
adc
divb
lock
insb
jno
sbb
fsubrs
dec
lods
in
jne
dec
sub
jno
add
js
xchg
das
dec
aad
mov
ret
cmp
adc
dec
add
adc
add
fisubl
sub
dec
sub
cmp
sub
lfs
cli
push
mov
outsb
mov
fnstenv
int3
xchg
inc
pop
sbb
mov
or
xorb
adc
out
xor
cmp
sbb
in
jge
pop
test
movsl
push
push
stc
add
pop
arpl
adc
pop
test
sahf
mov
repnz
sub
fimull
nop
mull
rcl
cmp
mov
push
shll
or
mov
mov
scas
mov
outsl
lret
or
sub
xchg
iret
mov
nop
loopne
js
mov
adcl
rcr
dec
fildll
pop
dec
pop
jmp
cmp
mov
stc
mov
ret
clc
test
add
push
xchg
push
rolb
adc
int3
arpl
out
mov
scas
cmpsl
mov
aaa
mov
xor
pop
cmp
pop
std
dec
in
dec
out
sti
push
call
stc
jns
icebp
loopne
out
push
push
or
bound
lret
rclb
out
pop
fs
mov
dec
ja
test
mov
clc
pop
push
out
imul
xor
push
dec
fwait
adc
mov
stos
popa
sbbb
pop
std
push
inc
mov
rcpps
sbb
pop
pop
fidivrs
pop
enter
mov
jo
inc
sbb
popf
rorb
repnz
pop
and
clc
mov
roll
mov
js
pop
xchg
enter
or
popl
outsl
jns
inc
inc
mov
pop
andb
cs
xorl
or
mov
lock
ror
pop
jns
push
push
pop
dec
sbb
pop
pop
add
xlat
push
cmp
xor
xchg
popl
jnp
mov
xor
popf
mov
sbb
add
mov
lds
leave
inc
gs
push
adc
rcll
sbb
out
xor
sahf
mov
pusha
jb
movsl
jle
mov
frstor
stos
in
aad
lods
lock
rorb
push
rol
pop
inc
pusha
mov
pop
in
inc
arpl
mov
pop
int3
jno
lahf
xor
stos
jnp
and
sbb
roll
arpl
pop
cli
das
add
out
sarl
in
cmp
xchg
mov
adc
adc
in
cwtl
hlt
mov
mov
dec
orb
pop
mov
pop
test
xchg
pop
insl
lea
stc
push
test
aas
and
into
inc
pop
int3
pushf
jno
mov
call
aaa
mov
pushl
xlat
adc
leave
fsubrs
fwait
xchg
dec
mov
mov
xor
xor
sub
fsubrs
dec
xchg
aas
pop
test
or
add
sub
xchg
cwtl
shrb
shlb
pushf
jne
or
pop
std
cmpsb
sbb
mov
mov
lock
cs
insb
ja
pusha
leave
aas
xor
stc
movsb
sub
mov
sbb
xor
insl
add
push
aaa
pop
mov
ret
fisttps
pop
add
imul
mov
stos
outsl
leave
lods
jecxz
in
into
xor
and
adc
pmulhuw
xor
pop
jle
leave
dec
pop
xchg
jns
push
pop
test
das
scas
sbb
adc
clc
mov
mov
and
fldl2t
dec
mov
mov
mov
dec
rclb
or
pop
mov
xor
fwait
stos
dec
mov
out
sbb
dec
scas
loop
lods
fimuls
aad
jns
out
push
adc
inc
test
mov
mov
loopne
cltd
pop
insl
xor
push
mov
push
mov
pop
push
mov
leave
or
push
mov
pusha
push
inc
push
ja
dec
adc
or
aaa
mov
adc
lret
fidivrl
stc
sub
mov
inc
cld
pop
out
mov
adc
add
push
push
movsb
nop
mov
dec
pop
mov
les
jle
outsb
loop
repz
rorb
mov
pop
sub
pop
cltd
xchg
int3
pop
add
jg
stos
jge
lea
jecxz
jnp
mov
mov
inc
ja
cltd
cmp
sbb
mov
bound
push
sbb
aaa
arpl
pop
btc
jecxz
or
mov
inc
dec
aam
pop
repz
xchg
mov
aad
sbb
fimull
cwtl
ja
and
into
jo
out
sub
jnp
les
testb
push
cmpsl
lret
adc
rol
mov
dec
push
add
mov
inc
xor
cld
cmp
lcall
sub
pop
or
push
mov
inc
aas
outsl
arpl
mov
scas
cmp
lea
pop
dec
leave
mov
add
or
loop
push
ss
mov
imul
dec
fwait
sub
enter
das
mov
adc
lea
and
dec
pop
cmpsb
pop
pop
push
push
inc
pop
test
inc
mov
pop
shll
rcr
sbb
dec
push
pop
ss
xchg
in
ficoml
xchg
and
iret
imul
pop
arpl
outsl
jp
hlt
fldt
jmp
inc
stc
test
aad
test
repnz
inc
adc
ds
jno
and
dec
mov
mov
pop
mov
push
mov
dec
push
dec
aaa
bound
cmpb
push
aaa
sbb
ja
pop
out
mov
jmp
popf
lcall
adc
lret
js
xor
mov
mov
cmc
pop
sub
aaa
pop
cmp
test
addr16
mov
movsl
adc
punpckhbw
lahf
scas
loope
cltd
imul
stc
mov
cmp
xlat
fcmovne
and
movsl
js
pop
loope
repnz
sub
rcll
dec
cmp
push
ljmp
and
aam
mov
inc
push
lahf
int
pop
mov
js
pop
dec
xchg
or
mov
rcr
dec
lea
jne
mov
jle
lret
jns
xor
mov
aas
adc
imul
pop
es
repz
jns
pop
fs
mov
jbe
jno
out
js
push
in
sar
push
sbb
ds
cmp
popf
cmpsb
mov
or
fidivrs
or
sub
lcall
cwtl
pop
mov
dec
insl
sub
pop
dec
fwait
dec
sub
pop
mov
imul
cld
mov
mov
fldl
xchg
sub
gs
xchg
outsb
in
sub
adc
pop
mov
into
test
push
psrad
inc
dec
push
mov
leave
and
inc
jae
movsl
int3
or
mov
fwait
push
pop
mov
push
mov
dec
in
leave
mov
aad
push
imul
push
adc
xchg
jb
mov
xor
mov
jae
sub
xor
out
mov
dec
jns
pop
imulb
rcrb
push
rclb
or
out
pop
mov
pop
mov
xor
in
push
outsb
pushf
mov
mov
and
pop
ja
pop
cmp
fldt
mov
inc
pop
ds
outsb
push
ja
js
pop
push
cli
inc
insb
mov
mov
inc
into
mov
cmp
in
push
arpl
sarb
cmpsl
cmp
imul
cld
sub
push
loope
mov
icebp
pop
or
out
lahf
arpl
pop
jecxz
pop
fcmovnb
cmp
cld
inc
sar
loop
push
out
pop
pop
adc
jno
mov
outsb
gs
fidivrs
lahf
mov
dec
icebp
scas
movsb
xor
or
push
push
inc
pop
fists
mov
dec
adc
pop
iret
out
inc
lcall
int
xor
adc
fistps
pop
xor
rcl
lea
dec
sarb
xlat
out
or
es
fsubl
movsb
clc
cmpsl
shlb
pop
jnp
cmc
pop
test
les
push
xchg
mov
pop
mov
iret
rol
lods
sub
enter
repz
and
cmp
cmp
idivb
in
clc
fdivs
sbb
mov
jle
lcall
gs
pop
mov
add
repnz
inc
loope
add
xchg
mov
dec
or
inc
and
xchg
inc
mov
dec
xchg
pop
mov
sbb
adc
int3
mov
fdivp
and
fsubs
cli
addb
mov
fmull
imul
cld
push
adc
loop
loope
or
insb
mov
cmc
out
loopne
pop
sbb
dec
mov
inc
iret
pop
adc
xor
pop
fists
or
cmp
pop
mov
in
movsb
pop
cmp
push
popa
and
or
repz
push
pop
or
jge
scas
push
adc
gs
fldenv
dec
xchg
mov
or
fs
xchg
pop
les
mov
cltd
mov
out
sub
or
loop
mov
mov
cwtl
pop
or
mov
push
push
xor
pop
nop
adc
js
loopne
loop
inc
and
xchg
enter
lds
mov
mov
mov
pop
cli
stos
xor
mov
pop
jae
xchg
xor
icebp
push
cltd
and
lods
mov
xor
xchg
outsl
cltd
shl
inc
xor
xor
std
sub
sub
ds
jns
mov
lret
cmp
pop
dec
mov
mov
mov
clc
cmp
pushf
enter
push
cld
adc
push
xchg
push
push
add
je
adc
xor
scas
pop
mov
shll
adc
add
pop
inc
aaa
scas
cmp
xchg
xchg
sub
imul
push
jg
lea
add
idivl
mov
dec
add
out
xor
rorl
fcompl
mov
mov
mov
sbb
or
dec
jmp
out
sbb
les
push
adc
stos
lret
fidivrl
sbb
pop
test
jno
test
jno
mov
fldcw
mov
aas
addl
ret
inc
sub
pop
pop
pop
inc
dec
outsb
lret
xchg
pop
das
test
psrad
cld
pop
and
fstps
roll
mov
mov
inc
cwtl
movsb
jmp
rorb
int
dec
mov
loop
rcll
mov
push
xor
pop
dec
mov
dec
loopne
push
in
pop
or
xchg
push
cmp
or
imul
into
xor
pop
stos
or
xchg
mov
push
lods
jmp
sub
push
stc
and
mov
test
mov
inc
mov
adc
dec
dec
pop
fsts
cmp
pop
les
roll
cs
jecxz
push
sub
gs
ljmp
mov
push
fimull
mov
push
arpl
lret
pop
out
imul
mov
push
jmp
inc
cs
in
popa
xor
outsb
stos
into
or
je
outsl
push
mov
sbb
and
sbb
lock
xchg
xor
push
sbb
cltd
inc
test
xchg
nopl
ret
inc
mov
in
cmpsl
inc
pop
mov
out
pop
pmullw
mov
pop
fnstenv
rcll
xchg
inc
pop
or
test
enter
xlat
xor
pop
sbb
sub
or
or
stos
frstor
adc
sbb
sbb
lcall
jg
jl
jne
nop
mov
stos
adc
sbb
inc
ja
mov
xor
adc
mov
adc
rorb
mov
leave
lea
inc
sbb
aam
pop
or
fiadds
mov
popa
mov
adc
adc
or
call
daa
and
into
dec
push
mov
jp
das
adc
xor
sub
or
pop
leave
stos
ret
iret
arpl
inc
ja
mov
mov
dec
adc
pop
mov
sarb
xor
push
lods
or
pop
or
in
lea
out
lret
je
inc
lock
gs
addr16
jbe
push
pcmpgtd
lret
cmpsl
pop
ret
jno
sarb
ret
test
loopne
mov
jne
test
cmp
xchg
rcrl
sub
pushf
ljmp
xorb
mul
push
jae
data16
add
and
pop
lcall
mov
test
lahf
nop
jmp
jmp
imul
lret
sbb
cmpsl
js
xor
inc
sub
rcr
scas
xor
pop
pop
xchg
popf
add
pop
pop
neg
mov
cmp
bnd
sub
rorl
dec
and
mov
sahf
jl
mov
lcall
decl
sysret
pusha
or
call
and
pop
xchg
stos
call
shll
xor
mov
js
inc
fisubrl
mov
adc
push
insl
test
and
outsb
adc
rolb
popa
xlat
mov
out
sub
mov
mov
xor
jae
dec
cmp
repz
fstpt
push
or
mov
mov
or
inc
sub
dec
pop
imul
in
outsl
stos
cmp
and
nop
testl
pop
mov
pop
ljmp
sub
pop
stos
stos
ret
sub
xchg
js
in
pusha
push
int3
orb
cmpsl
lcall
test
gs
pop
and
in
push
adc
js
pop
sub
xor
andb
push
pop
jp
lahf
pop
jmp
xchg
sub
iret
sub
fsubl
mov
mov
and
push
out
stc
je
hlt
push
pop
mov
lcall
incl
das
mov
push
dec
sti
sub
addl
and
mov
mov
pop
scas
je
pop
sub
cld
sbb
mov
mov
imul
mov
xchg
xchg
sub
pop
je
mov
cltd
cmp
repz
mov
mov
inc
cmpsb
je
xor
sbb
pop
add
aad
rclb
cmp
outsl
push
xlat
pop
addb
pop
dec
dec
stos
inc
xor
cmp
push
out
push
xor
mov
scas
cltd
pop
dec
arpl
fs
sub
inc
sbbl
pop
mov
dec
pop
js
push
push
fbld
inc
dec
mov
gs
mov
cmc
mov
push
cmp
outsl
xchg
lods
lahf
or
repnz
mov
inc
inc
jmp
jle
popf
cmpsb
cltd
cmpsb
lods
push
fnstsw
cmp
dec
xor
popf
inc
and
pop
lcall
outsb
pop
xchg
pop
xor
mov
fisubl
inc
jns
adc
push
and
gs
pop
std
in
roll
repnz
mov
shll
js
pop
rolb
loope
clc
inc
jnp
stos
out
and
fyl2xp1
sub
rcll
pop
iret
adc
xor
insl
push
aam
pop
push
push
std
arpl
push
mov
in
sub
dec
in
inc
cmp
sbb
xchg
cmp
and
jb
and
mov
movsl
mov
mov
xchg
movb
push
xor
mov
add
sub
imul
mov
adc
pop
and
fcompl
pop
shl
push
jle
pop
push
or
pop
orl
lods
fcompl
xorl
sbb
cmp
pop
jg
fisttpl
pop
push
lret
hlt
pop
mov
mov
pushl
sub
mov
sub
mov
stos
mov
xor
out
aad
jmp
out
push
sub
cmpb
adc
adcl
leave
or
xchg
js
xor
aaa
outsl
pop
sub
enter
test
push
imul
rep
push
jae
in
ret
lods
int3
cmp
ret
pop
mov
or
pop
xlat
jge
cmpsl
xor
pop
call
shrl
out
inc
add
mov
mov
inc
jae
popf
inc
dec
int3
jge
dec
pop
aam
jmp
mov
fwait
nop
mov
xor
fildll
cmpsb
lods
mov
inc
fcoms
push
dec
dec
lret
mov
cli
ljmp
enter
cmp
or
dec
push
enter
sbb
pop
addr16
push
repnz
scas
pop
les
and
imul
outsl
jne
btr
pop
xor
aam
jge
in
data16
mov
pop
mov
cmp
aad
xchg
out
pusha
ljmp
pop
stos
ret
pop
mov
pop
jg
sub
mov
test
inc
movsl
mov
push
mov
adc
popf
ret
or
push
loope
test
fcompl
add
adc
out
scas
mov
stos
pop
cmp
or
inc
sub
sarl
inc
cli
mov
mov
push
lret
roll
cmp
pop
pop
filds
not
sub
sbb
adc
inc
dec
push
add
in
adc
insb
aam
adc
lock
ret
fldl
jmp
pop
icebp
mov
stos
loopne
xchg
aaa
dec
inc
xor
dec
mov
and
push
js
shrb
mov
push
push
xchg
inc
inc
adc
xchg
push
mov
or
ret
push
aaa
idiv
out
xor
xchg
or
push
lock
xchg
pop
call
mov
cli
pop
push
in
in
push
dec
jae
mov
sub
mov
mov
pop
dec
fadds
stc
stos
xor
popf
push
xchg
scas
pop
adcb
rcll
mov
sbb
pop
jne
adc
and
mov
movw
loopne
sbb
sbb
mov
imul
std
push
fiaddl
cltd
pop
pop
push
mov
jle
loope
pop
mov
test
fprem1
cld
push
loop
xlat
xchg
pop
push
iret
hlt
pop
inc
sbb
in
cmpl
pusha
insl
pop
mov
out
push
inc
and
cmpsb
mov
nop
pop
pushf
and
dec
pop
cmp
mov
sbbl
jp
cmp
js
pushf
ja
mov
in
iret
clc
test
stos
shll
cmpsb
pop
insb
add
lea
pop
cmp
lret
int
pop
fldenv
dec
in
test
pop
enter
xchg
and
xor
adc
mov
cmovs
shll
pop
mov
insl
adc
cmpsb
in
or
lock
push
or
mov
mov
push
lahf
imul
ffree
jl
cld
mov
or
and
ret
cmp
sub
int3
mov
jp
sbbb
pop
ljmp
xchg
pop
je
pop
adc
stc
mov
pop
pop
icebp
inc
jb
subb
mov
lods
push
imul
mov
ficomps
incb
adc
pop
or
pop
jmp
xchg
or
scas
out
jbe
popa
mov
in
sbb
inc
gs
call
pop
sbb
das
rolb
ds
inc
arpl
pop
imul
cld
cmpsl
aaa
xor
filds
and
add
es
inc
jnp
rorb
sbb
ds
jno
lret
mov
mov
sbb
sub
cmp
or
push
and
dec
pop
aas
jecxz
test
inc
lock
or
push
test
push
push
mov
jb
rol
das
and
mov
in
sbb
or
or
jbe
aad
jl
push
pop
lahf
cmp
insb
mov
mov
pop
fwait
imul
aas
insb
adc
mov
inc
jne
xchg
sbb
push
inc
js
mov
scas
and
gs
mov
dec
scas
ds
out
jbe
lods
xchg
faddp
ret
pop
cmp
lods
test
push
in
das
out
pop
idivb
stos
inc
scas
xchg
xchg
lret
ud1
push
push
gs
add
jmp
push
ds
dec
xor
sbb
out
sbb
adc
arpl
clc
xchg
push
hlt
mov
out
xchg
jno
mull
flds
rclb
aas
xor
and
jecxz
in
xor
xchg
orl
xchg
add
jne
inc
xchg
nop
jae
pop
pop
push
cmp
add
adc
filds
and
lock
subl
mov
xor
xchg
push
andl
push
loop
pop
rcll
fwait
fs
lret
xchg
inc
xor
jp
call
bnd
dec
xchg
aam
loopne
mov
sub
mov
sub
sub
in
mov
aad
xor
adc
imul
dec
pop
inc
jne
cmp
sbb
add
cmp
mov
ret
lods
mov
lea
int3
pop
call
loopne
jg
push
add
add
push
xchg
aaa
insb
sub
or
adc
rorl
xchg
lcall
lea
lods
add
sbb
sbb
js
push
fwait
icebp
dec
rcll
into
or
push
sbb
repz
pop
xor
dec
push
xchg
stos
lea
fsts
ss
mov
es
in
xor
xor
sbb
sub
push
pop
sbb
pop
enter
orl
sbb
and
arpl
xchg
xchg
push
and
roll
pop
mov
fcompl
inc
push
repnz
pop
or
jne
loope
cmp
pop
fst
sub
pop
out
movb
sub
inc
dec
xor
pop
out
sub
jg
mov
fisubl
xchg
lret
jae
adc
or
nop
stc
and
push
sysret
dec
test
hlt
in
pop
cs
cli
xlat
xchg
push
inc
jle
mov
mov
or
hlt
pop
cmp
push
arpl
mov
lea
sub
mov
xchg
loopne
mov
roll
test
mov
leave
jge
rclb
mov
cmp
xor
roll
push
repz
popa
adc
pop
or
pop
gs
jae
mov
je
inc
sbb
sub
sub
sti
insl
mov
mov
sub
orl
ds
jnp
cmc
xchg
icebp
mov
orb
mov
sbb
inc
jg
push
xor
imul
push
ror
sbb
push
push
mov
or
test
out
push
aam
dec
jb
insb
push
adc
pop
movsl
inc
or
inc
push
pop
cmp
add
or
mov
test
xor
sbb
mov
in
push
popa
pop
xor
fucomi
mov
push
cmp
dec
pop
cmp
xlat
pop
or
or
inc
adc
cmp
inc
xor
jle
stos
insl
ret
mov
pop
scas
or
mov
pop
sub
scas
lods
push
out
fsubrs
xor
insb
stc
jl
fs
xchg
sbb
cmp
fbstp
push
pop
es
fsubrs
pop
xlat
mov
cmp
push
jge,pt
rcrl
mov
ja
jno
mov
sbb
enter
mov
out
cmc
or
jae
icebp
push
adc
stc
stos
cmpsl
pop
cmp
dec
popf
xor
cmp
lock
outsb
in
lret
ror
pop
in
mov
push
in
adc
stos
lcall
mov
ret
push
jne
into
pop
jg
dec
and
cwtl
sti
arpl
mov
sub
add
add
out
mov
imul
fwait
jo
adc
stos
dec
adc
mov
dec
pop
popa
or
jecxz
in
inc
clc
pop
and
push
shl
test
mov
add
mov
lcall
fstpt
add
lret
pop
dec
mov
aas
xor
dec
push
imul
push
test
pop
mov
lods
psrad
xchg
ljmp
and
dec
jecxz
outsl
movsb
pop
sbb
pop
mov
pop
jp
pop
mov
or
leave
or
xor
ds
lods
and
push
jle
in
insb
into
filds
push
mov
sub
call
fadds
ljmp
stos
mov
insb
ret
lcall
mov
dec
push
xchg
lahf
jbe
pop
imul
je
pusha
iret
sysret
mov
xchg
pop
jecxz
loopne
push
in
inc
cmp
js
fs
mov
pop
scas
loop
and
sub
pop
jg
push
mov
dec
sahf
push
jp
adc
test
pop
lea
and
movntq
out
mov
or
mov
sbb
pop
jmp
movsb
push
mov
adc
push
stos
pop
mov
mov
shrl
out
ds
pushf
xor
shrl
push
mov
imul
jo
dec
pop
lahf
or
cmpsl
xlat
push
jns
inc
mov
mov
add
and
xchg
cmpsb
fbstp
shlb
out
inc
xchg
pop
jg
adc
sbb
cmp
jnp
dec
pop
scas
xor
jns
add
pop
add
sarl
dec
call
pop
push
push
pop
pop
stos
xchg
lahf
scas
test
xor
sbb
and
pop
pop
mov
pop
imul
lds
arpl
mov
gs
addl
add
push
loope
sti
sub
xor
adc
cmc
jge
ss
or
test
add
js
pop
std
push
sbb
scas
aad
in
and
xor
adcl
out
adc
cwtl
out
push
mov
stos
in
popa
adc
rcl
aad
xchg
xor
cmp
pop
ret
in
dec
sub
dec
pop
jmp
clc
mov
imul
xor
out
jns
sbb
arpl
sbb
rcl
pop
iret
dec
xor
stos
pop
out
lock
lods
stos
sbb
pop
loope
ror
jp
rcll
loop
lret
mov
aam
jno
ja
pop
into
clc
dec
mov
and
xchg
scas
dec
mov
or
cmc
pop
lcall
xor
pop
icebp
enter
ret
pop
dec
inc
sbb
aaa
js
pop
popa
in
sbb
jo
mov
pop
data16
dec
ds
sbb
lcall
cld
jns
jg
xchg
outsb
stos
mov
inc
add
mov
scas
xchg
pop
fstl
mov
mov
add
cmc
sbb
lods
scas
leave
pop
icebp
pop
lcall
lods
or
dec
mov
mov
js
pop
fisubrs
fsubrs
and
pop
cmc
mov
jg
inc
popa
jmp
dec
insl
pop
xor
sahf
js
or
call
adc
mov
pop
and
fsts
pop
adcb
mov
out
negl
mov
ret
insb
sub
pop
fs
ljmp
lea
pop
test
jo
int
xlat
pop
pop
dec
mov
mov
cltd
jnp
call
xchg
push
xor
pop
mov
mov
andl
mov
pop
push
pop
movsl
pop
arpl
cmp
stc
pop
jb
sbb
mov
imul
popa
int3
pop
xor
sti
or
pop
cli
cmp
cmp
lret
push
icebp
pop
xor
xchg
pop
sahf
pop
push
sbb
or
pop
shlb
add
int3
pop
shl
mul
dec
xor
scas
test
pop
inc
fistps
xor
cmp
repnz
mov
push
pop
inc
mov
sbb
js
iret
xchg
hlt
jns
pop
xor
mov
or
ds
js
push
in
pop
pop
and
popa
pushl
mov
pop
xchg
push
aaa
xor
lods
inc
sub
inc
xchg
outsl
mov
scas
bound
dec
or
mov
int3
mov
or
imul
lds
stc
add
int3
dec
xor
icebp
cs
or
pop
imul
jb
xor
cmpsl
sbb
daa
mov
cmpsb
dec
stos
jmp
pop
xor
leave
pop
inc
sub
lret
scas
imul
jle
addl
xchg
loopne
repnz
mov
mov
cmpsl
dec
mov
push
cmpl
dec
fwait
mov
aas
out
pop
lock
enter
jg
jle
lds
mov
movsb
or
pop
lea
cmpb
sbb
movsl
pop
ja
imul
insl
sbbb
test
outsl
or
jae
push
jno
pop
dec
out
aaa
insb
pop
addr16
mov
mov
orl
fwait
sub
pop
test
ret
mov
push
cmp
movsl
jns
adc
lret
jl
out
fisttpl
pmulhuw
fsts
scas
pushf
push
lds
insb
bound
pop
cli
add
xor
jmp
js
cmp
inc
lods
add
dec
stos
mov
pop
inc
mov
repnz
pop
clc
mov
jl
pop
xchg
xor
das
cmpl
stos
push
mov
int3
dec
ret
sbb
mov
fnstenv
mov
xchg
nop
fcomps
mov
leave
jnp
push
mov
jbe
sub
rcl
seta
out
inc
dec
je
mov
sub
sbb
sub
inc
gs
or
or
jae
jle
mov
xor
popa
mov
lods
pushf
outsb
push
lcall
test
pop
add
inc
les
aas
mov
scas
inc
loopne
sbb
andl
pop
jp
dec
insb
and
pop
jno
or
add
pushf
cli
mov
pop
loop
mov
shll
inc
pusha
fmuls
adc
mov
mov
pop
popa
push
rolb
test
adc
pop
push
rclb
add
xchg
inc
lods
pop
outsl
je
ja
xor
dec
pop
pop
addr16
pop
jns
lahf
mov
orl
gs
aas
xchg
push
pop
adc
push
and
jge
pop
fdivp
shrl
jae
lea
mov
in
mov
pop
lahf
sub
jns
pop
push
dec
mov
jle
mov
out
mov
loop
mov
add
ficomps
push
add
outsl
mov
fsubr
pop
je
jno
movsb
cmc
mov
pop
cli
xchg
in
loop
icebp
jne
pop
mov
mov
adc
push
dec
addr16
jno
pop
xchg
cmp
mov
mov
pop
in
insb
mov
bound
xchg
push
sbb
or
xchg
mov
rorb
leave
push
pop
xor
ds
inc
mov
inc
dec
jne
adc
popl
push
or
ficoml
jnp
gs
mov
xchg
jno
add
int
mov
or
mov
lds
out
ja
jne
adc
pop
popf
or
jmp
mov
xor
fists
inc
ja
adc
pop
das
push
push
sbb
cmpsb
sbb
pop
adc
add
mov
push
in
pop
inc
lds
je
mov
adc
jne
mov
adc
and
pop
sub
fsubrs
stos
cmp
mov
fisubl
push
insb
mov
xor
pop
arpl
loopne
xchg
pop
mov
cmp
pop
sub
test
xor
decl
sub
lret
roll
or
popf
add
pop
push
xchg
jno
cmpsb
adc
lret
int
cs
push
mov
mov
icebp
imul
sbb
mov
in
mov
je
push
movsb
pop
pop
push
fs
decb
sbb
enter
adc
mov
push
mov
sub
fdiv
or
inc
sbb
pop
jl
scas
movb
pop
cmpsl
fs
pop
popf
insl
bound
jmp
out
xorl
shrb
mov
lahf
lss
aaa
inc
mov
jne
xchg
out
cmpsl
pop
popf
jno
clc
mov
pop
add
enter
mov
push
pop
fs
hlt
sti
out
jmp
or
lea
pop
cmp
jnp
mov
push
xchg
inc
fs
mov
adc
pop
hlt
loope
in
jnp
mov
cwtl
pop
mov
mov
sti
pop
fsts
xor
jg
adc
rorl
mov
je
adc
aad
pop
xor
xchg
jnp
pop
shlb
push
pushl
push
adc
insb
jge
shl
sbb
pushf
pop
adc
es
repz
je
sbb
jl
cmp
push
lock
lea
pop
enter
dec
lods
push
mov
mov
xor
ds
in
or
lahf
and
and
loope
pop
es
ret
rclb
cmpsl
pop
push
std
jbe
idivl
pop
xor
push
jns
dec
pop
mov
in
mov
fstpt
add
pop
pop
lds
ljmp
pop
push
sti
or
scas
mov
out
fs
jecxz
pop
push
sbb
inc
clc
pop
cmp
adc
push
xor
inc
subl
sbb
imul
and
mov
or
inc
adc
test
xlat
push
jbe
adc
or
pop
pop
mov
cmp
stos
push
and
roll
sbb
aad
pop
es
fsubp
mov
pop
mov
cmp
or
adc
add
pop
inc
mov
dec
or
sub
les
sbb
outsl
dec
lods
pop
cmp
hlt
cld
mov
pop
adc
push
lret
push
addr16
loope
or
mov
pop
setns
outsb
sub
pop
lret
jns
add
pop
cmc
inc
and
subb
cwtl
sbb
or
in
pop
sub
xor
stos
rcrb
jno
bound
push
pshufw
push
cmp
and
or
xlat
and
stc
cmc
leave
pusha
cmpsl
pop
push
mov
shlb
sbb
pop
cmpsl
xor
out
sub
mov
or
movsb
fs
and
push
mov
mov
lods
adc
mov
je
add
sub
push
push
push
cmpsl
jl
fadds
test
adc
push
push
sbb
adc
movb
mov
jnp
sarl
pop
arpl
mov
dec
outsl
stos
notb
push
out
imul
mov
pop
rcl
subb
nop
xchg
cs
dec
loop
test
lods
pop
in
sub
pop
xor
sbbb
mov
cmp
mov
cltd
iret
push
mov
cmp
pop
sub
sbb
pop
ret
lock
icebp
outsb
pop
stc
repnz
cmpsb
push
cmp
ds
outsl
xor
out
dec
sub
pop
rol
divl
jno
xchg
add
mov
pop
push
pop
lds
adc
rclb
fcomi
pop
cli
jae
pop
cmc
into
jnp
xor
push
xchg
mov
ret
popa
mov
pop
addr16
mov
into
sbb
jo
sub
sar
shr
inc
or
cmp
xor
pop
bound
dec
sub
mov
pop
sbb
xlat
ja
pop
cmpsb
mov
add
ret
sti
jp
hlt
jecxz
xchg
fbstp
sub
and
punpckhwd
or
sbb
xchg
sbb
scas
pop
mov
add
mov
sbb
xor
gs
push
test
cmp
loopne
addr16
lret
insb
push
dec
addl
in
test
jnp
jne
shll
imul
push
stc
in
lret
dec
push
push
out
insl
push
mov
cs
loop
sub
mov
pop
cmp
adc
mov
pop
aad
mov
adc
pop
cmpl
cmpsl
orl
test
mov
cwtl
xchg
and
add
insl
adc
push
pop
fisttps
mov
pop
xor
inc
push
ljmp
inc
inc
std
mov
pop
sub
mov
enter
or
xchg
jecxz
movsb
int3
inc
mov
mov
jbe
pop
fwait
xor
jns
pop
mov
xchg
mov
pop
push
in
pop
fsubl
sbb
sub
xchg
call
dec
int3
fnstsw
push
loope
pop
jo
jl
lods
fisubs
mov
mov
fsubrl
pop
jno
movl
decb
fsts
push
in
xchg
jle,pt
jg
lahf
cmp
or
jl
pop
push
push
jge
mov
imul
roll
ret
lods
or
movsb
inc
cs
int3
scas
fnstsw
adc
jno
pop
add
test
push
pop
ffreep
aas
push
push
jnp
adc
pop
fistps
adcl
inc
add
pop
mov
pop
mov
jbe
jno
imul
pop
sub
or
addl
sahf
xchg
and
xor
mov
xchg
movsb
clc
inc
push
inc
and
pop
fildl
jae
dec
pop
insb
xor
cmpsl
or
sub
pop
pop
sbbb
cmp
push
cs
sub
mov
loop
inc
sbb
sbb
pop
dec
enter
loopne
shlb
adc
lret
push
add
popf
enter
pop
push
iret
mov
in
or
pop
insb
jp
test
stc
outsb
imul
in
xor
xor
in
pop
add
lahf
pop
pop
fdivp
mov
and
push
int3
pop
test
jg
sub
arpl
in
rcrb
and
mov
push
das
lods
sarb
pop
imul
dec
enter
scas
mov
xor
fsubrp
push
loop
mov
outsb
xchg
data16
lods
xlat
sub
xor
sbb
int
fwait
push
push
les
imul
pop
cmpsl
iret
mov
or
fdiv
pop
icebp
jp
xchg
mov
jb
ds
pop
mov
cs
dec
dec
jns
jmp
pop
add
push
xchg
adcb
jg
jno
push
fstl
adc
pop
arpl
jle
push
mov
testb
lods
pop
pop
aad
mov
jbe
aam
pop
movsb
adc
jno
out
and
stos
xlat
or
or
cmp
push
push
mov
filds
das
cmp
mov
adc
push
push
leave
dec
pop
loop
es
add
pop
push
mov
sub
sbb
mov
mov
idivl
stos
pop
dec
lods
dec
mov
lcall
pop
adcl
add
and
clc
gs
pop
int
sub
lahf
dec
adc
pop
mov
es
push
adc
add
popa
push
lret
inc
mov
out
fwait
jne
lcall
xor
icebp
mov
xor
loopne
ja
cmp
jle
pop
xchg
cwtl
push
aam
rorl
and
scas
lret
loope,pn
filds
jecxz
mov
xlat
inc
add
or
xchg
xor
pop
lret
or
mov
inc
iret
mov
aas
jns
dec
outsb
test
mov
dec
xor
lret
cmp
leave
add
pop
pop
jl
cmc
fsubrs
in
out
mov
test
and
das
arpl
aas
addl
mov
cmc
and
sbb
ficomps
mov
data16
dec
push
mov
nop
psrad
pop
test
xchg
out
repz
out
mov
mov
in
push
inc
jge
outsl
pop
jmp
enter
mov
stc
inc
test
fs
cltd
xchg
stos
ds
jo
or
mov
jp
push
sbb
rclb
pop
stos
call
jb
mov
subb
das
cmpsl
mov
out
add
pop
or
mov
dec
push
dec
test
pop
mov
outsb
adc
adc
aaa
sbb
lods
sbb
push
dec
adc
mov
mov
push
pop
repz
dec
cmc
jmp
inc
pop
cmp
add
movl
cmpsb
mov
pop
add
repz
inc
jnp
gs
inc
lds
lret
pop
into
xor
out
ds
pop
cmpsl
sub
push
xchg
mov
jl
pop
mov
ror
inc
xchg
gs
xchg
lea
dec
pop
into
stc
sahf
sub
pop
pop
pop
jnp
outsl
xchg
and
inc
pop
mov
adc
pop
rcrb
js,pt
mov
jmp
insl
pop
mov
fldenv
mov
gs
mov
mov
faddl
push
pop
movlps
into
pop
cmp
mov
pop
push
xor
or
popa
aas
xchg
pusha
outsl
cmc
jb
or
cmpsl
popf
fisttps
rcrl
mov
imul
sbb
pusha
sub
flds
jmp
dec
in
push
mov
hlt
aad
les
and
mov
stc
pushf
inc
lret
jae
dec
sarb
dec
sub
es
pop
add
push
xchg
pop
and
push
cltd
test
pop
leave
in
dec
lods
stos
scas
pop
mov
mov
mov
xlat
fistpl
addr16
stc
push
cld
dec
jo
and
sahf
push
sar
jl
pop
sbb
jle
pop
mov
sbb
pop
in
and
push
pop
mov
leave
adc
fs
out
xchg
adc
pop
lcall
testl
and
loope
xchg
pop
fdivp
dec
mov
scas
es
and
arpl
in
push
jg
scas
pop
jle
xor
xor
lret
fistps
xchg
push
icebp
stos
or
les
jno
loop
cmp
adc
shrl
xor
cmpsl
pop
push
negl
push
dec
outsb
popa
pop
adcb
les
push
and
xor
scas
xor
adc
mov
int3
pop
enter
xchg
in
add
push
dec
push
pop
fdivrl
cmp
scas
xor
xlat
or
mov
and
mov
imul
cs
adc
pop
loope
jno
add
jmp
mov
rcr
test
inc
into
dec
pusha
ficompl
rorb
pop
decb
pop
inc
nop
push
jo
sub
push
pushf
or
outsl
outsb
in
pop
in
adc
sbb
pop
fisubrl
andb
clc
fnstenv
sub
mov
sbb
jnp
xchg
icebp
cmpsl
push
pop
stc
ljmp
fsubrs
hlt
jge
jne
push
pop
fbld
cmc
jb
fs
and
pop
mov
or
adc
repnz
add
dec
lock
movd
pop
in
push
clc
jnp
inc
out
sti
pop
mov
jae
jmp
mov
inc
fimull
cld
jecxz
jmp
push
mov
mov
inc
cmp
jb
adc
push
xor
sbb
lahf
xchg
pop
mov
sub
pop
sbb
pop
loopne
popf
lcall
push
jns
mov
sbb
imul
in
xor
xchg
sbb
pop
mov
mov
pop
gs
fisttpll
mov
or
call
leave
test
leave
sub
mov
mov
jns
adc
insb
outsl
sub
mov
aaa
xchg
lret
mov
xor
mov
mov
jp
dec
jg
pop
test
pop
add
ret
add
cld
dec
pop
sub
and
sarl
inc
cli
loop
popa
jl
push
pop
scas
dec
inc
mov
fldln2
and
pop
adc
jbe
inc
inc
jl
push
dec
lcall
imul
adc
mov
sub
out
cmp
lock
aam
das
fmuls
xchg
or
ficoms
lods
pop
xchg
out
hlt
mov
xchg
lret
or
cmp
xor
scas
cmpsb
cmpsl
mov
fbstp
cmp
sub
sar
xor
mov
push
or
dec
mov
xor
xlat
loope
rorl
loopne
popa
fiadds
pushf
insb
in
ja
sub
dec
das
pop
sub
pop
shlb
adc
and
xor
cmp
out
cmp
sub
xchg
xchg
out
dec
pop
inc
imul
or
xor
mov
test
pop
out
or
mov
xor
xchg
leave
xchg
mov
pop
dec
push
je
xor
stos
pop
std
int
inc
pop
pop
mov
mov
mov
pop
ljmp
arpl
cmpsb
insl
orl
xor
and
loop
or
fcomps
mov
imul
jg
push
dec
mov
push
hlt
out
loope
stc
arpl
test
jne
or
mov
xchg
or
mov
add
mov
and
push
mov
cmp
mov
xlat
sub
sub
sub
mov
mov
dec
or
gs
jne
xchg
and
sarl
aas
push
loope
lods
sub
dec
test
popa
jns
pop
pop
dec
mov
xor
stc
xorb
pop
jnp
push
add
rorl
xor
sbb
mov
xchg
jle
mov
and
adc
pop
les
inc
push
jecxz
push
pop
testb
mov
cmpsb
imul
jle
pop
fwait
push
cmp
xchg
inc
insl
in
mov
out
add
jbe
pop
jae
mov
loop
fistpl
cmp
adc
addr16
push
popa
cmc
pop
and
inc
push
and
sbb
ret
mov
roll
lahf
sub
pop
iret
je
pusha
sbb
adcb
ljmp
mov
push
sbb
pop
xchg
xor
add
sahf
pop
pop
div
jnp
cmp
addb
lret
sub
pop
dec
inc
push
scas
lahf
jle
xor
xchg
mov
arpl
daa
insb
in
push
emms
and
incl
ja
sbb
dec
rolb
jbe
xor
or
gs
gs
je
inc
in
test
inc
inc
ret
or
mov
js
push
inc
sbbl
loopne
pop
stc
lods
pop
jno
aaa
mov
dec
aad
les
in
pop
push
stc
icebp
mov
ret
pop
mov
cmp
pop
ficoml
insl
xchg
xchg
inc
js
loope
pop
adc
cli
rolb
sub
out
inc
pop
xorb
and
adcl
cli
jae
int
or
pop
or
imul
pop
jg
dec
adc
pop
pop
mov
imul
pop
cmp
cmpsb
push
imul
pop
dec
mov
adc
cli
call
pop
inc
dec
mov
loope
bound
mov
or
int3
pop
js
div
lret
call
sahf
test
pop
dec
push
cmp
js
jns
stos
pop
pop
mov
dec
dec
mov
xchg
hlt
dec
pop
imul
pop
test
in
add
pop
sbb
mov
dec
icebp
push
in
add
rolb
jbe
mov
jae
aam
pop
sbb
aad
xor
call
cmpsl
rcll
inc
sbb
mov
mov
mov
mov
dec
cmp
adc
pop
addr16
xchg
pop
and
jmp
lahf
pop
pop
pop
mov
fyl2xp1
lcall
in
sti
lds
mov
jne
movsb
dec
xor
xchg
mov
clc
jb
mov
xchg
jg
inc
pop
mov
aad
dec
push
pop
push
push
pop
aam
hlt
xchg
mov
mov
dec
cmp
push
leave
cmpsw
inc
inc
or
dec
pop
cmp
cmc
lea
sahf
scas
xchg
pop
jb
sub
lret
pop
or
fildl
add
loopne
pop
jbe
out
sarl
sub
jge
sub
cmp
out
and
jmp
mov
dec
imul
mov
push
add
pop
jl
gs
mov
pop
aam
and
pop
ffree
cld
jbe
jl
fisubl
mov
lcall
pop
sbb
shlb
subl
pop
xchg
adc
dec
and
pop
cmc
add
test
inc
stc
movsl
loopne
imul
out
push
scas
mov
or
mov
popf
xchg
xor
rcl
pop
jecxz
add
fistpl
sbb
fadds
and
lock
sbb
cmp
testl
push
subb
pop
das
les
mov
fistps
inc
fnstsw
ljmp
pop
nop
and
call
loopne
cmpsb
inc
test
pop
xchg
add
mov
aas
mov
stos
sbb
pop
cmp
fs
pop
cmpsb
pop
shlb
jnp
test
aad
hlt
sti
das
push
push
out
sbb
mov
cmc
imul
sub
mov
pop
test
scas
jp
lods
ds
adc
and
test
iret
cmpsl
mov
lret
push
out
scas
aas
mov
sub
sub
in
das
lds
inc
jmp
xor
pusha
pop
inc
pop
mov
pop
push
mov
mov
enter
repz
imul
pop
fst
testb
xor
mov
pop
cmovg
sti
sub
jg
notl
pop
push
inc
xchg
rclb
mov
pop
pop
mov
je
fadd
movsb
shrl
mov
notl
cmp
dec
mov
lods
mov
add
sahf
jmp
or
roll
int3
mov
cld
movsb
scas
ret
pop
fsubl
add
mov
repnz
and
data16
aad
lock
sbb
mov
insb
scas
rcrb
arpl
or
and
loopne
push
insb
sbb
pop
mov
xchg
js
jp
sub
in
sbb
jecxz
push
loope
adc
scas
pxor
xchg
xor
ja
push
pop
push
loopne
or
sti
pop
sbb
xchg
stos
or
scas
pop
mov
les
xchg
pusha
mov
loope
mov
push
icebp
jnp
add
jge
pop
js
mov
or
mov
jnp
pop
inc
aaa
push
inc
outsb
cmp
mov
add
cwtl
dec
aaa
xor
stos
inc
popf
outsl
pop
pop
lods
cs
push
les
jo
cmp
pop
lret
lock
cmp
call
mov
fldl
mov
pop
inc
dec
jb
cmpsl
cmp
push
mov
cmc
push
lcall
inc
add
mov
mov
mov
insl
ficomps
pop
rcrb
add
dec
mov
adc
mov
aam
lods
les
adc
fnstcw
in
mov
inc
add
sahf
pop
inc
add
pop
lret
test
mov
xorl
jae
push
and
dec
cmp
sub
mov
insb
pop
popf
push
jns
inc
lods
adc
iret
inc
icebp
mov
mov
popa
fstl
rol
mov
in
mov
fcoms
addr16
sbb
pop
ja
aam
inc
cmp
pop
fwait
cmp
lret
mov
push
push
mov
lock
push
cmp
dec
inc
ss
jle
shll
into
pop
cmp
push
xchg
sbb
mov
add
pop
repz
subl
sarl
call
inc
in
je
dec
sub
iret
cmp
aas
inc
mov
sbb
pop
test
inc
jmp
mov
mov
cmp
sbb
test
and
xchg
popa
aas
dec
outsb
cmp
or
pop
icebp
lock
mov
push
nop
iret
or
out
aaa
lea
adc
pop
mov
stos
int3
inc
in
ret
pushl
pop
xor
lret
jle
cs
stos
push
stc
cli
aam
fmull
cltd
pop
clc
mov
pushf
loopne
loop
jb
sbb
les
sub
scas
insl
cmp
lcall
rcrb
pop
mov
mov
mov
mov
mov
movsb
test
cld
fs
ret
popa
popa
mov
pop
jle
cmp
test
jecxz
rorl
popa
jne
pop
jmp
sbb
loope
xor
es
div
push
mov
add
aas
scas
mov
cmpsl
pop
cmp
and
pop
sbb
hlt
sbb
adc
xchg
stos
into
jae
or
jecxz
imul
lock
std
rcr
scas
sbb
xor
out
xor
adc
xchg
push
xchg
pop
jno
ja
in
test
mov
inc
add
or
mov
mov
outsl
out
mov
push
pop
repnz
mov
sahf
bound
pusha
pop
xor
out
or
fistl
jmp
aad
out
je
pusha
xor
inc
cmp
imul
repz
mov
mov
push
jecxz
dec
loop
into
icebp
pop
sub
pop
lods
lods
mov
push
mov
int
mov
popa
jge
adc
mov
loopne
sbb
fisttpl
xchg
xor
mov
dec
ror
popf
fs
inc
inc
sti
repz
add
in
mov
loope
add
pushf
push
jl
das
jg
add
nop
sub
es
sub
mov
or
sub
mov
pop
mov
inc
inc
xchg
aam
adc
ret
popf
int3
addr16
cld
adc
and
push
lcall
pop
andl
pop
lea
dec
insb
pop
mov
push
call
and
pop
pop
dec
in
jp
jb
adc
fcoml
inc
pop
mov
fldenv
pop
pop
and
popa
imul
je
push
ljmp
cmp
mov
xchg
pop
dec
insl
adc
int
push
push
repz
xor
mov
push
pop
pusha
sub
incl
sbb
int3
pop
ret
pop
sbb
insb
mov
push
pop
lret
push
mov
icebp
adc
push
je
loop
fs
mov
pop
fdivrl
lea
push
in
iret
cmp
movsl
inc
cld
loopne,pn
mov
cmpb
mov
mov
cmc
and
pop
cltd
loop
cmp
jnp
lds
mov
add
mov
std
stos
dec
dec
lahf
hlt
mov
mov
adcb
inc
lods
pop
pop
fwait
outsl
cli
out
lahf
clc
addr16
fimuls
pop
inc
adc
and
xchg
pop
pop
movsl
in
jbe
inc
mov
sub
iret
in
lahf
aaa
inc
xchg
pop
jne
cs
arpl
mov
std
and
ja
popa
xchg
hlt
fcmovb
mov
mov
in
inc
pop
test
aas
pop
into
inc
fstp
pop
xor
push
shlb
pop
adc
pop
popl
add
loope
sub
ret
stos
inc
mov
lret
cmpsl
shrl
scas
cmp
sbb
popf
push
xchg
pop
imul
add
pop
icebp
and
ret
jecxz
shl
ja
xor
subl
nop
and
pop
fcompl
sbb
push
or
mov
lret
jnp
adc
fmull
icebp
ljmp
rorl
test
cmpsb
rolb
add
or
sub
sbb
pop
pop
arpl
jg
and
mov
lcall
out
enter
push
nop
pop
mov
ret
test
mov
push
dec
jmp
xor
repz
pop
je
fidivrl
stos
pop
pop
dec
mov
push
pop
fdivp
pop
fistpl
fldenv
adc
loopne
dec
repz
lods
and
jp
sarb
mov
pop
or
ficoml
sbb
sub
subl
imul
sti
pop
push
loope
in
in
movsl
pop
call
push
mov
cltd
pop
jmp
jnp
adc
or
stos
loopne
subb
mov
xchg
adc
xchg
gs
in
adc
pop
idiv
adc
gs
arpl
mov
adc
jns
sub
pop
cmp
aam
enter
je
js
xchg
xor
cmpsl
or
mov
fwait
test
or
and
lods
adc
repnz
stc
pop
jo
mov
or
das
enter
popf
push
les
fdivr
cld
std
push
adc
inc
inc
mov
xchg
call
cmpl
xchg
leave
adc
stc
pop
dec
aad
icebp
movsl
xchg
inc
xor
jnp
xchg
out
mov
add
insl
aad
outsl
shlb
adc
pop
and
loopne
pop
jne
xchg
and
adc
push
mov
jae
inc
stos
push
mov
dec
dec
xor
adc
ljmp
push
ret
pop
ja
fldenv
outsl
and
or
jg
pop
pop
popf
inc
inc
test
mov
sbb
and
loope
sbb
lods
jns
and
or
pop
mov
cmpsl
pop
push
loopne
pop
pop
sbb
loope
mov
xchg
sbb
scas
pop
sub
cmp
mov
subb
pop
stc
pop
adc
outsb
pop
fwait
popf
sbb
mov
or
and
or
mov
stos
clc
jnp
or
nop
pop
insl
rclb
std
lcall
loopne
inc
aaa
jp
jo
add
mov
icebp
sub
pop
aam
enter
pushf
mov
or
push
dec
xchg
sub
xorl
pop
mov
ret
ret
pop
mov
push
imul
jg
pop
loopne
aam
adc
addr16
inc
gs
aad
xor
in
std
pop
sahf
mov
inc
popf
pop
hlt
mov
jbe
inc
lret
pop
sub
dec
xchg
shlb
xorl
xchg
mov
mov
bound
jo
dec
fists
sub
divl
insl
iret
or
push
or
mov
negl
loop
push
call
cmpb
pop
push
xchg
mov
hlt
dec
lea
in
sbbb
fs
fsubs
add
pop
call
iret
or
pop
jmp
aad
sbb
scas
gs
mov
or
pop
fs
jbe
pop
adc
out
bound
repnz
fnsave
es
adc
jg
flds
pshufw
xorb
pop
leave
or
jnp
sub
ljmp
test
mov
das
rcl
rorl
adc
pop
cmc
jg
test
push
std
pop
insb
sti
jae
lock
enter
inc
decl
or
push
mov
pop
add
jl
xor
add
sti
sbb
stos
jle
jp
setp
sbb
mov
shrl
pop
inc
dec
loopne
push
mov
popa
push
gs
mov
arpl
pmulhuw
insl
cmpsb
xor
mov
jecxz
fldenv
pop
loop
cs
push
mov
rcrb
cmp
rol
mov
imul
pop
adc
push
lods
cmpsl
lds
out
clc
idiv
add
aam
js
pop
loopne
or
pop
lock
mov
out
adc
mov
push
mov
push
pop
cmp
mov
and
aam
add
sub
jno
inc
and
jns
pop
lods
push
nop
ret
adc
pop
pop
shrb
jo
sbb
jl
adc
inc
push
rorb
cmp
or
imul
lret
fwait
push
int3
stos
rorb
adc
shlb
insl
mov
rol
mov
adc
cmp
pop
or
pop
and
adc
dec
sbb
jmp
popf
pop
lret
repnz
xchg
pop
inc
dec
mov
fs
push
pop
mov
or
dec
js
pop
insb
ret
mov
lret
cmp
fdivr
test
pop
add
mov
sub
ret
inc
xor
jl
addr16
push
mov
and
cmp
cmp
cmp
or
out
std
sub
xor
stc
scas
ret
cmp
sbb
jnp
adc
std
push
pop
push
push
push
fstp
xchg
dec
enter
jl
dec
push
je
mov
pop
lock
xor
pop
sbb
int
xchg
push
pop
popf
fsubr
xor
jg
pop
pop
jnp
repz
jp
fistl
pop
xchg
cmp
mov
lahf
rcrl
push
mov
adc
mov
add
scas
xchg
pop
fidivl
bound
cmpl
fdivrl
cmp
imul
xor
lods
and
cltd
mov
bound
outsb
cmp
inc
xlat
test
lods
add
stos
out
mov
aaa
mov
cmp
ret
pop
scas
mov
push
in
clc
stos
or
enter
das
mov
lret
push
data16
shlb
in
mov
fidivl
cmpsb
pop
add
mov
je
mov
sbb
mov
lret
xor
pop
fisubs
add
mov
pop
push
sbb
mov
mov
test
jae
mov
bound
jno
adc
movq
xor
push
pop
add
mov
ljmp
bound
xchg
cmpsl
ss
mov
arpl
data16
outsb
cmp
jmp
and
popa
stos
out
mov
push
jg
add
lds
icebp
or
orb
inc
pop
adc
mov
out
mov
or
nopl
adc
fs
roll
pop
adc
pop
push
pop
out
xor
jl
out
xorb
testl
and
mov
inc
mov
fs
push
xlat
or
or
sbb
push
ds
cs
xchg
popaw
je
adc
inc
pop
mov
sub
fstl
cmp
mov
movsl
mov
movsb
stc
leave
pop
icebp
fcoms
scas
pop
loope
jno
mov
dec
dec
pop
test
dec
mov
test
mov
push
pop
andl
sbb
mov
nop
jns
xchg
jecxz
push
mov
cmpb
stos
dec
sub
movsb
xchg
insb
and
mov
inc
lock
sbb
xchg
pop
loope
add
cmp
mov
shrl
imul
pop
adc
sbb
jnp
das
mov
add
imul
faddl
sbb
stos
cwtl
dec
add
cmp
mov
out
sub
sub
mov
mov
imul
and
pop
mov
clc
xor
in
add
xchg
dec
sti
push
xor
mov
pop
push
inc
jge
jbe
cli
std
pop
shl
mov
in
test
cmp
subl
adc
nop
gs
test
movsl
stc
mov
addl
sub
pop
cmp
pop
inc
test
push
scas
stc
mov
in
xlat
sub
sahf
add
pop
les
inc
in
push
pop
mov
inc
or
or
jb
dec
jmp
push
mov
lcall
adc
stc
cli
push
and
je
cmpsb
in
dec
pop
sub
dec
enter
imul
dec
pushf
pop
mov
sahf
clc
dec
mov
add
lds
mov
add
mov
fisttps
xchg
xchg
stc
into
aad
shll
mov
cmc
sbb
int
xor
xchg
pop
outsb
rclb
test
icebp
xchg
push
xor
cltd
jns
xchg
lret
lea
pop
in
int
jle
lahf
inc
lock
xor
pop
add
mov
cli
leave
test
adc
lods
mov
mov
xchg
mov
mov
inc
add
sbb
icebp
dec
lock
sbb
arpl
jbe
mov
dec
cmp
adc
mov
popl
mov
and
sbb
mov
aam
inc
pushf
imul
gs
ret
push
jb
pop
test
fcmovbe
das
xchg
mov
cltd
xchg
test
jbe
pop
sbbb
pop
stc
jle
pop
cs
repz
bound
pop
or
xor
lret
lahf
mov
pop
sub
jae
sub
sbb
test
mov
xchg
jmp
imul
pop
dec
incl
loop
cmpsl
shrb
sub
call
subb
lods
cli
pop
pop
flds
dec
sbb
rol
sub
stos
xchg
mov
gs
ljmp
imul
lcall
insl
lahf
clc
pushf
pop
mov
xor
or
call
cmc
aaa
mov
xor
mov
inc
bound
frstor
arpl
jg
xor
xlat
inc
pop
cltd
cmp
ss
adc
mov
aaa
fnstcw
xchg
int3
lcall
cwtl
lret
mov
sbb
cmpsb
xchg
and
ret
jnp
shll
push
outsl
and
mov
lret
pop
test
dec
mov
in
cmc
pusha
pop
test
loope
arpl
gs
lahf
push
push
xchg
sbb
push
sub
ret
stos
pop
pop
aaa
nop
sub
insb
cli
mov
adc
push
jmp
loopne
pop
push
hlt
push
stos
imulb
sbb
mov
pop
fistpl
xor
push
pop
xchg
dec
cltd
sub
xlat
lods
out
xchg
das
inc
into
test
adc
or
lods
cmp
or
iret
pop
pop
adc
mov
std
dec
push
sub
dec
shll
popa
jns
or
movsl
pop
inc
push
lret
mov
xchg
in
inc
mov
jecxz
inc
cmc
xor
aaa
ja
sbb
pop
ret
xor
icebp
clc
nop
mov
aam
jle
loopne
push
sti
fstps
inc
mov
mov
enter
lock
mov
outsl
adc
clc
cmp
mov
dec
cltd
jg
pop
inc
lea
aad
pop
cmovp
adc
pop
jecxz
nop
jo
pushf
aad
mov
pop
mull
fwait
shll
das
repz
ljmp
mov
pop
inc
mov
hlt
dec
dec
mov
adc
push
xchg
je
sarl
aaa
push
pop
fs
mov
pop
or
sahf
scas
lret
sub
cmp
adc
dec
ja
sbb
mov
mov
stos
imul
loop
lea
scas
ja
sub
fcomp
ljmp
xor
dec
outsb
testb
pop
call
mov
pop
cmpl
jl
arpl
pop
cmp
jmp
push
mov
pop
mov
dec
outsl
jo
pop
rorb
cmpxchg
pusha
push
int3
pop
mov
jl
sbb
xor
stos
jb
inc
out
pop
push
imul
jg
cli
pop
dec
cs
cmp
pop
xchg
aad
jo
mov
pop
in
mov
add
int3
or
mov
push
pushf
cmc
test
aas
or
mull
fmuls
adcl
xchg
or
fs
out
mov
add
jne
cmpsb
add
pop
in
xchg
xor
cli
jp
mov
cmp
ds
rorl
pop
loope
mov
jns
xchg
test
pop
repnz
inc
nop
mov
jecxz
mull
imul
rolb
cmc
add
push
mul
movl
das
test
push
dec
or
int
sub
fsubrl
pop
aam
aad
xchg
pop
lcall
into
fildl
jl
add
insb
xchg
mov
mov
dec
pop
lret
mov
aam
jns
ja
in
pop
mov
ss
int3
jl
subl
pop
cltd
jb
in
cmp
push
jae
ret
sbb
arpl
pop
mov
jg
mov
inc
aaa
mov
andl
sbb
stos
pop
vpsllw
jo
or
imul
dec
outsl
pop
adc
mov
inc
rolb
pushf
xor
outsb
ret
je
imul
in
inc
call
movsl
push
dec
rcll
cld
cmpsl
fcomp
insb
or
fxch
pop
frstpm(287
inc
lahf
cmp
repnz
shlb
fadds
stos
pop
dec
pop
dec
das
dec
imul
sbb
jbe
addl
xchg
popl
jge
outsb
xlat
adc
cs
or
mov
pop
outsl
fimull
adc
sti
idivb
in
je
push
cmpsb
pushf
pop
or
stc
js
dec
aas
xchg
test
lds
inc
push
jb
xchg
sub
test
mov
xchg
push
mov
or
jle
pop
loopne
leave
mov
pop
adc
outsl
sub
xchg
xchg
ret
pop
xchg
lods
mov
pop
lcall
imul
out
cmp
gs
sbb
not
pop
push
outsl
push
xor
mov
adc
push
add
dec
dec
lcall
cld
mov
out
xchg
cmovnp
ret
push
ja
test
sbb
pop
bnd
sub
cmp
insb
repz
jno
adc
push
mov
hlt
mov
mov
push
and
pop
mul
testl
jmp
pop
mov
call
sub
in
rcll
cmp
aam
adc
addl
pop
push
pusha
cmpsl
push
push
pop
inc
in
and
cmpsb
cli
cwtl
xor
or
jnp
pop
popf
repz
sbb
into
jae
enter
scas
cwtl
mov
dec
test
lret
pop
fwait
mov
stos
scas
lahf
roll
mov
or
ljmp
pop
mov
iret
sarb
imul
mov
xchg
and
enter
iret
fcomps
xor
ja
xchg
push
mov
filds
xor
push
pop
loopne
test
cmp
cvtdq2ps
push
lsl
xor
div
out
jo
mov
fistpl
iret
xchg
in
pop
pop
insl
cld
rclb
test
sarl
push
cltd
lahf
push
ret
xor
shr
and
pop
mov
jmp
and
nop
adc
test
pop
jnp
aam
jp
rcr
adcl
fidivs
push
stc
inc
stos
mulps
inc
xor
mov
sub
pop
pop
vmovhps
stos
and
push
and
popf
gs
push
addr16
jae
inc
repz
inc
inc
les
adc
sahf
imul
nop
pop
lret
sub
cmpsb
arpl
pop
aad
mov
js
sub
mov
in
jecxz
push
fiaddl
cltd
xchg
imul
test
pop
test
fisubl
sub
pop
mov
rcrb
scas
mov
mov
gs
mov
inc
xchg
arpl
cmp
push
dec
pop
sub
mov
dec
jecxz
scas
ja
mov
jge
fs
xchg
dec
jae
pop
cmp
xor
ret
mov
ljmp
aaa
mov
dec
xor
lea
pop
pop
das
cltd
mov
pop
fldenv
jge
mov
pop
shll
xchg
and
mov
adc
iret
adc
cmp
or
jge
mov
xor
lcall
scas
adc
push
pop
sbb
incl
push
dec
cmp
test
jne
scas
aas
popf
aaa
pop
stos
mov
fs
cmp
push
mov
xchg
mov
lret
and
movsl
cld
test
bound
enter
pop
mov
xor
mov
dec
cmp
jns
push
mov
jecxz
cmp
mov
bswap
adc
scas
pop
mov
adc
mov
lret
jmp
jae
jbe
aaa
sbb
mov
popa
mov
outsl
cmpsl
xor
pop
fidivs
dec
inc
pop
mov
in
daa
setb
fdivrl
add
fidivrs
inc
sarl
stos
xor
sbb
iret
dec
jg
mov
stos
das
pop
sub
ljmp
pop
mov
pop
dec
outsl
repnz
and
mov
cld
dec
adc
jl
mov
fmuls
pop
mov
cwtl
jb
xchg
lret
adcb
cld
push
push
cmc
jl
lock
push
jno
addr16
mov
xlat
xorl
pop
jo
icebp
repnz
sbb
popa
adc
sub
dec
imul
out
mov
lods
jge
pop
push
rcll
pop
test
out
outsb
or
mov
xchg
cmp
lea
dec
pop
mov
jbe
lret
sub
ss
int3
mov
aas
pop
or
mov
dec
dec
test
mov
cld
fisttps
adc
jb
adc
movb
xor
lea
xlat
insl
imul
fs
jbe
pop
sub
cmpsl
fnstenv
pop
inc
mov
dec
out
pop
fldl
outsb
and
nop
pop
jmp
idiv
test
movsb
sbb
jne
sbb
adc
loopne
testb
push
pop
ja
ret
mov
push
rcrl
aas
ret
arpl
cwtl
pop
cmp
mov
loopne
pop
mov
jo
into
cmpsb
out
sub
aas
out
rsm
push
cmp
inc
jle
imul
pop
mov
xchg
repnz
dec
xor
mov
cmp
push
inc
fmuls
mov
pop
gs
int3
lahf
jg
iret
pop
out
mov
int
rolb
dec
cmpsl
inc
xor
pushf
cmp
insl
out
pop
mov
mov
fcompl
call
push
or
in
dec
sbb
les
mov
pop
lock
addl
mov
mov
push
movsl
lock
pop
imul
mov
sbb
cmpsb
lods
push
add
in
pop
add
mov
cmp
outsl
out
mov
sub
or
mov
cmp
adc
inc
mov
pop
mov
in
cmp
sbb
or
insl
push
mov
aad
shrb
js
add
pop
pop
inc
mov
lahf
mov
popa
push
lret
xor
pop
arpl
into
xchg
testb
jge
dec
mov
rcrb
imul
mov
push
or
xchg
adc
popf
sbb
mov
loope
jno
mov
outsl
or
pop
sbb
outsb
scas
pusha
enter
jle
ret
iret
push
dec
and
lahf
jne
out
mov
aas
rorl
call
imul
adc
cmp
data16
inc
mov
or
pop
and
in
aam
shl
movlps
int
inc
pop
sbb
mulb
aaa
xchg
sub
stc
add
jo
push
loopne
push
xchg
mov
addl
movsb
out
mov
aas
mov
xchg
mov
jp
pop
mov
pop
fxch
lahf
push
scas
movsl
cwtl
insb
pop
dec
aam
jae
pop
pusha
cltd
pop
push
fcmovnbe
adc
into
fildll
mov
mov
sub
imul
imull
aad
sbb
cmp
std
orb
scas
push
inc
ja
adc
push
xor
adc
mov
rcrb
ret
sub
dec
imul
hlt
dec
ret
lea
stc
cmpsb
loop
add
rcll
pop
movsl
clc
jg
xlat
cmp
adc
push
cmp
jno
xchg
outsl
add
pop
hlt
iret
inc
jecxz
pop
fsubs
addr16
lret
and
pop
jmp
pushf
pop
cmp
cs
in
adc
pop
cmp
add
iret
fdivs
sub
outsl
cmp
inc
xlat
in
pop
mov
repz
stos
mov
xor
adc
test
dec
sub
sbb
jo
push
dec
pusha
outsl
adc
pushf
shlb
xchg
pop
xchg
jns
aam
xchg
dec
push
fildll
dec
cmp
test
test
push
ss
push
scas
sub
cmp
sbb
es
cmpl
sub
ret
push
das
adcl
inc
ret
stc
mov
mov
jecxz
sub
pushf
add
stc
add
fcomps
sub
in
mov
mov
fs
jmp
add
jl
cli
or
stc
and
repz
add
and
test
addb
aas
fs
xor
adc
mov
outsl
std
mov
push
lret
pop
jne
insl
xor
lods
mov
xor
dec
sbb
cs
sbb
and
jbe
pop
shr
sbb
xor
xchg
pop
bound
xchg
gs
dec
fcoml
je
inc
or
pop
arpl
sub
mov
addr16
mov
insb
pop
scas
inc
sbb
inc
movsb
mov
lret
jge
hlt
jne
je
mov
and
fxch
add
movsl
pop
xlat
mov
cli
test
and
mov
dec
sub
movsl
jl
pop
push
sbb
js
mov
add
inc
ja
mov
pmulhuw
cmc
aas
xchg
pop
dec
sbb
fwait
inc
pop
mov
jecxz
push
pop
fmulp
and
rclb
mov
sub
xchg
stos
cld
xchg
mov
inc
nop
leave
rclb
xchg
push
pusha
popa
xor
push
and
imull
int
insb
lods
adc
sbb
icebp
push
dec
hlt
jb
lds
pop
cmp
in
lahf
arpl
fsts
mov
push
add
nop
int
mov
push
push
push
sub
insb
push
mov
jbe
scas
pcmpeqd
cmp
jns
jg
inc
les
rclb
adc
mov
push
jb
in
fdivrl
leave
dec
push
insb
mov
mov
loop
pop
cmc
and
sbb
in
into
sub
mov
xor
call
dec
pushf
inc
stos
mov
pop
aam
mov
fyl2xp1
insb
mov
inc
dec
clc
out
int3
cmpsl
aas
pusha
adc
ret
lods
pop
pop
pop
test
hlt
repz
add
push
rolb
mov
fucom
out
mov
test
pop
cwtl
shrb
icebp
xchg
pop
decl
lds
repz
sbb
push
fistl
xchg
jmp
ljmp
pop
nop
andl
xor
inc
std
xchg
mov
in
fcompl
or
mov
arpl
xchg
aad
and
pop
jecxz
and
pop
cmpsb
je
inc
cmpsb
mov
test
ret
cmpsl
movb
in
jp
or
fldcw
mov
pop
les
adc
sbb
out
js
xor
jnp
pop
xchg
adc
cmp
shr
fstps
cmp
push
push
insl
pop
popf
fwait
insb
les
xchg
scas
pop
cs
mov
sbbb
or
mov
pop
out
cmp
lret
sbb
mov
dec
xor
mov
xchg
cmp
mov
or
mov
pop
out
in
test
cmpsl
bound
push
cmp
aad
adc
aas
push
repz
pop
or
cmpsl
pop
std
test
sub
mov
sub
inc
stc
mov
arpl
or
pop
clc
jl
in
cmp
pop
inc
pop
test
cmp
and
push
sahf
inc
popf
leave
cmp
fcomps
insl
and
or
add
and
xor
je
jnp
ss
sbb
mov
or
push
xlat
test
and
lret
in
int3
insb
mov
dec
push
cmp
adc
adc
pop
push
inc
dec
dec
mov
mov
cs
or
movsb
jno
enter
mov
xor
or
aaa
cmp
fsubr
pminsw
imul
or
notl
jb
sub
mov
insb
xor
sahf
roll
out
in
or
push
js
xlat
jl
push
sub
test
adc
mov
inc
imul
out
mov
das
pushf
pop
jg
rcr
nop
mov
adc
adc
hlt
cltd
pop
push
aas
mov
inc
adc
push
inc
fwait
jge
pop
sbb
imul
sbb
mov
jg
mov
mov
inc
xchg
push
push
test
xchg
dec
or
mov
xor
addl
imul
xchg
cs
out
scas
xchg
pop
out
mov
popf
imul
push
enter
adc
jmp
mov
dec
pop
imul
mov
mov
push
push
roll
push
sbb
push
insl
jb
int3
pop
std
mov
movsl
cmp
pop
sub
add
adc
mov
pop
pop
or
inc
pusha
pop
sar
mov
bound
mov
or
mov
push
aam
mov
xchg
sahf
inc
subb
punpckhwd
adc
push
jge
mov
pop
rorl
mov
lret
push
fcoml
sbb
cmpsl
mov
cmp
out
jb
pop
insl
mov
cmp
nop
rorb
lcall
sbb
pop
je
cmp
popl
mov
outsb
jne
xchg
push
pop
pop
pop
xchg
mov
adc
and
pushf
and
jg
cltd
mov
pop
xor
clc
sbb
fidivs
pop
mov
in
test
or
insl
fistps
pop
add
mov
out
xchg
pop
lret
iret
fcmovu
aad
hlt
jae
incb
sbb
mov
sbb
push
popf
xor
pop
push
fwait
lahf
jb
sbb
pop
sahf
mov
out
sub
push
inc
iret
push
pop
subl
mov
xor
gs
pop
mov
inc
mov
cli
sbb
scas
mov
adc
cmp
push
mov
cs
inc
sub
pushf
xchg
cwtl
bswap
adc
es
mov
mov
push
jnp
pop
mov
aam
aas
inc
movsl
pusha
add
in
add
and
xchg
xor
ja
adc
push
into
movsl
mov
lahf
and
ret
lea
aaa
scas
cmp
or
fadds
cvttps2pi
add
fldenv
aas
xor
jo
push
imul
xchg
inc
movsb
ret
pop
xor
inc
loope
mov
mov
icebp
clc
mov
jge
mov
dec
insl
in
cmp
pop
stos
push
jg
dec
scas
les
sub
mov
lds
ja
dec
mov
mov
loop
add
scas
mov
sbb
pop
mov
sub
sub
dec
leave
sub
inc
mov
je
add
call
cmp
push
add
inc
push
add
outsb
adc
push
cs
mov
jl
cmp
mov
or
fwait
push
loope
push
inc
add
or
sarb
add
roll
jge
and
or
pusha
inc
call
scas
pop
in
ror
inc
inc
sub
mov
leave
xor
repnz
pop
loop
adc
aam
xchg
inc
aas
inc
fsubrs
scas
mov
fstpt
or
ret
pop
stos
pop
add
mov
addr16
push
sbb
outsl
rorl
or
in
filds
pusha
stc
adc
mov
mov
push
pop
jnp
data16
add
push
sbb
push
test
stos
dec
mov
mov
sub
insb
mov
pop
xor
gs
pop
cwtl
xchg
sub
xor
cmp
push
cmp
sbb
pop
cmc
cmp
sbb
insb
pop
pop
push
shll
cmpsb
cmp
mov
pop
mov
incl
inc
lahf
mov
jecxz
pop
fiaddl
js
popf
xor
pop
loope
sbb
add
dec
cmp
jbe
ret
pop
ja
sti
adc
lods
in
pop
pop
xchg
mov
lds
stos
add
push
divl
dec
sub
jmp
pop
pop
loope
mov
pop
fsubs
cmp
popa
pop
fwait
mov
cltd
test
cmc
pop
jp
adc
mov
mov
add
mov
or
test
dec
test
push
pop
mov
pop
mov
int3
lock
aaa
inc
pop
stos
mov
fldl
and
pop
jae
pop
pop
in
mov
inc
sahf
sub
pop
cmp
xor
shlb
mov
shl
add
sbb
ret
pop
or
fcomi
mov
mov
test
jge
pop
cmp
popa
cld
pop
dec
jg
outsl
mov
pop
lods
lahf
js
dec
in
jo
add
insl
pop
pop
sub
ss
fsubs
mov
negb
js
scas
inc
cmpsl
dec
sbb
test
dec
pop
jmp
addr16
push
test
cmp
adc
cmpsb
test
pop
pop
movsl
incb
roll
xlat
inc
aas
insl
mov
fstps
cmpsb
adc
adc
mov
ja
dec
in
sti
mov
cmpsl
sub
repnz
pop
sbb
push
jnp
pop
adc
cmp
xchg
cmp
mov
dec
mov
pop
add
xchg
out
cmovbe
mov
jg
dec
repnz
stos
imul
or
andb
bnd
arpl
in
pop
and
stc
or
mov
jl
xlat
nop
cmp
cmpsl
rolb
arpl
out
lea
xor
stc
ljmp
cmp
inc
loope
or
jl
sbb
mov
stc
lcall
xchg
push
pop
mov
imul
pop
or
xor
xchg
add
in
cmp
or
sub
mov
xor
mov
sti
mov
adc
aas
test
scas
mov
pop
pop
and
push
sub
dec
cmp
jns
or
dec
lret
push
ret
pop
test
int3
repz
out
jb
outsb
dec
pop
stos
insb
testl
dec
aad
sbb
jmp
mov
mov
xorb
sub
pop
jmp
ret
mov
sbb
add
and
bound
bswap
and
jne
pop
and
push
ljmp
sbb
pop
adc
or
mov
ja
fists
mov
fiadds
in
pop
fidivrl
sbb
pop
inc
cmp
or
sub
sub
xor
into
mov
incl
push
iret
and
pop
push
dec
pop
xor
mov
test
or
das
jl
clc
xlat
aam
ss
xor
sbb
adc
dec
pop
mov
pop
push
fwait
inc
mov
mov
or
jmp
cltd
into
loopne
roll
lahf
and
idivl
aam
dec
xchg
or
pop
inc
and
js
fs
int3
jbe
jge
jmp
out
add
jecxz
jl
adc
adcb
adc
or
pop
xchg
xor
jge
scas
stos
scas
data16
pop
hlt
push
xor
sub
pop
lock
mov
cltd
push
dec
insl
push
sbb
mov
mov
or
arpl
insl
scas
ds
ret
mov
push
cs
popa
xorb
pop
sarb
fwait
xchg
cld
inc
cltd
ss
pop
sbb
sub
add
pop
mov
fsubrs
dec
xchg
pusha
punpckhdq
sbb
adc
inc
cmp
aaa
enter
ljmp
popf
pop
cli
js
rcrb
xor
inc
inc
imulb
in
mov
iret
mov
pop
ds
aam
outsb
pop
pop
nop
pop
dec
and
adc
and
push
jb
scas
mov
sbb
mov
cmpsl
cmpsb
xchg
mov
and
movsl
lea
movsb
mov
lds
in
sti
mov
cmpb
jnp
sbb
pop
cmpl
jne
mov
sub
pusha
ret
mov
jmp
lcall
ljmp
sbb
adc
in
add
sub
pop
push
push
sub
mull
sub
xchg
stos
out
cli
adc
fcompl
pop
mov
imul
imul
xchg
push
jle
mov
jno
mov
cmp
fs
mov
lods
out
push
mov
movsl
fs
or
js
jno
inc
pop
ljmp
inc
outsl
mov
adc
and
je
push
pop
lret
jae
xchg
or
cld
pop
movsb
scas
idivb
int3
pop
aad
jmp
cmp
enter
mov
aaa
leave
pop
ror
leave
shll
mov
pop
shrb
dec
in
pop
sbb
mov
jb
icebp
std
stos
add
sbbl
push
frstor
pop
fbld
xor
push
out
fwait
mov
gs
mov
mov
xchg
xchg
loopne
and
sar
jp
punpcklbw
jns
adc
xchg
sti
jmp
sbb
inc
lods
pop
xchg
jne
adc
repz
test
xchg
inc
test
pop
jp
jg
addr16
pop
or
data16
inc
arpl
mov
loopne
in
aaa
pop
outsl
cmp
pop
js
mov
shlb
inc
les
sub
push
sub
xor
clc
aaa
mov
pop
sub
in
rorb
nop
jbe
filds
xchg
jnp
fcmovu
inc
mov
mov
mov
dec
adcl
scas
pop
adc
inc
imul
pushf
cld
add
clc
add
dec
pop
jecxz
push
lcall
scas
push
sub
push
aaa
nop
fwait
je
add
sbb
fcmovnb
or
lds
add
lds
pop
popa
adc
pop
xorl
std
push
mov
push
aas
or
mov
pop
pop
rorb
jmp
push
inc
lock
icebp
xchg
or
pop
mov
js
push
ljmp
nop
mov
push
icebp
dec
push
jb
cmp
scas
pop
and
add
lret
inc
push
inc
or
jg
pop
les
leave
int
lods
cwtl
and
mov
or
sbbl
inc
lret
pop
push
sbb
out
sbb
js
xchg
adc
aas
cs
sbb
rol
rcll
jg
add
loope
lock
mov
fwait
add
jecxz
mov
in
arpl
pop
into
push
xorb
icebp
jae
pop
xor
out
mov
into
dec
aad
xchg
pop
mov
test
and
or
mov
pop
pop
sbb
imul
sti
repnz
loop
push
xor
pop
mov
fistpl
out
pop
inc
push
aam
ret
xor
aad
hlt
pop
roll
inc
loope
pop
flds
stos
pop
jp
arpl
lret
xor
add
pop
or
pop
xor
sub
das
cs
or
and
jns
xor
jbe
xchg
and
test
imul
sub
std
add
stos
sbb
inc
out
ret
mov
adc
js
mov
stos
push
test
add
sbbb
aad
sbb
dec
cmp
and
lret
pop
push
test
roll
inc
dec
adc
dec
cwtl
add
jne
adc
jecxz
pop
push
cld
dec
repnz
insl
sub
pop
fcomps
ret
scas
adc
dec
fiaddl
loopne
lods
or
call
outsb
jle
xchg
into
ljmp
pop
cmpl
add
ret
aad
int
sub
mov
sbb
or
mov
mov
pop
inc
mov
ss
adc
out
out
out
aam
pop
sbb
inc
pop
ljmp
mov
and
clc
cwtl
inc
pop
mov
dec
repz
inc
mov
vpaddw
int
push
addl
or
ror
nop
or
cs
mov
insb
sti
push
inc
stos
fiadds
jl
sahf
jecxz
cmp
xor
sub
jae
pop
push
jl
pusha
xchg
fsubrl
adc
movsb
dec
fadds
insb
pop
pop
js
dec
jnp
mov
imul
add
sbb
aad
jb
fs
sbb
pushf
movsl
sub
fwait
pop
loope
add
into
lock
hlt
or
and
and
pop
jl
pop
adc
rcl
pop
sbb
call
rorb
mov
push
mov
call
mov
or
fdivrl
gs
push
js
jne
in
in
int
jb
mov
sub
xor
jbe
roll
aas
jecxz
xchg
fnsave
pushf
pop
arpl
aad
js
sbb
inc
flds
sub
dec
addr16
inc
sub
sub
out
loopne
dec
hlt
pop
push
jb
mov
pop
lods
sar
mov
fs
out
xlat
rcl
div
stos
push
negl
push
mov
loope
push
cmp
dec
mov
adc
imul
pusha
pop
adc
dec
dec
mov
pushf
into
cmp
out
pop
in
hlt
ljmp
or
mov
scas
les
cmpsl
pop
sbb
mov
bound
stos
push
mov
push
das
insb
adc
dec
push
ja
pop
push
shll
pop
jo
and
out
out
mov
out
jnp
or
lea
shrb
pop
push
dec
mov
xor
lcall
in
sbb
bound
pop
adc
ljmp
cmpsl
aas
loopne
adc
filds
adc
nop
iret
xchg
dec
les
pop
xchg
mov
fnstenv
sbb
aad
lods
jge
icebp
pop
mov
jg
cmp
inc
xor
add
mov
aaa
ret
pop
jle
dec
outsl
mov
imul
mov
sub
stos
push
sub
notb
mov
dec
ja
pop
test
mov
pop
insl
jge
pop
stc
push
mov
out
cmp
loope
nop
jecxz
push
add
pop
fwait
das
xchg
pop
jg
std
pop
add
inc
test
call
decl
xor
push
ds
fildl
aas
pop
rcrb
fcompl
je
dec
push
cmp
mov
or
mov
jg
std
rclb
ja
pop
out
call
mov
mov
pop
jns
lock
xchg
dec
rorb
mov
add
arpl
mov
stos
pop
mov
jle
std
cld
movsl
out
fucomp
rcl
add
lret
das
mov
xchg
xor
inc
rcrb
sub
jb
or
std
mov
mov
pop
mov
bound
push
shrl
mov
xor
mov
mov
sarb
sub
add
out
pop
gs
cmpsb
stos
shll
call
je
sub
outsb
clc
nop
or
or
xchg
pushf
dec
sub
out
push
sub
incl
lods
dec
imul
push
lret
les
cmpsb
jge
mov
pop
lods
rol
xchg
fcmovnb
pop
fisubs
ret
mov
pop
mov
push
mov
and
ja
fbstp
mov
add
icebp
pop
mov
lret
gs
sbb
js
stos
pop
mov
adc
test
arpl
adc
mov
or
pop
scas
mov
js
pop
add
loope
lock
and
pop
push
nop
or
and
xchg
dec
ljmp
push
pusha
pop
ficomps
dec
lret
push
es
pop
inc
stos
pop
cmc
fdivr
xor
pop
vmwrite
cmp
in
and
xlat
and
push
imul
aad
and
pop
xchg
das
xor
cld
push
jmp
out
addr16
and
inc
sbb
or
mov
or
mov
xchg
in
int3
in
mov
lods
rclb
outsb
bound
adc
mul
out
pop
mov
push
lds
mov
loop
outsl
lahf
add
push
enter
or
popf
movl
jecxz
mov
jmp
jo
dec
mov
and
and
xchg
sub
insb
adc
pop
ret
jne
popa
jae
inc
pop
call
mov
cmp
adc
add
bound
inc
adc
stos
pop
fdivrs
test
adc
adcb
fmull
ljmp
jns
mov
jno
xor
mov
stos
scas
sbb
pop
sbb
in
cmpsb
sarb
pushf
adc
mov
out
scas
xor
pop
inc
outsl
fdivr
shlb
fwait
pop
fbstp
mov
sbb
adc
cmp
and
pop
iret
fisttpl
sub
arpl
mov
incl
mov
mov
and
jmp
jge
pushf
push
movsl
and
mov
xor
insl
xor
jo
mov
lcall
pop
nop
mov
sarb
push
mov
adc
pop
or
cmp
or
xlat
out
loopne
mov
sbb
inc
aad
or
pop
xor
jb
pop
fdivrl
lock
lods
shrb
mov
xor
pop
fists
mov
cmpsb
push
push
std
enter
add
sub
xor
pop
dec
mov
mov
outsl
or
aas
xor
pop
sub
pand
inc
pop
addb
lahf
push
jns
and
call
pop
cmp
aad
or
ljmp
cltd
and
inc
jl
mov
pop
shrb
and
popf
xor
int3
outsb
lds
addb
loopne
dec
and
mov
arpl
cmpsb
out
sbb
lds
int
pop
dec
inc
cmpsb
push
sbb
xor
xchg
imul
jo
in
lods
mov
movb
mov
and
dec
inc
sbb
pop
ret
pop
inc
push
inc
mov
lea
push
leave
mov
inc
pop
pop
aam
mov
push
cmp
out
pop
ret
xor
sub
pop
mov
push
inc
lods
pop
xor
add
orl
stos
repnz
loopne
xchg
mov
iret
pusha
push
pop
push
push
cld
and
pop
mov
push
inc
clc
adc
xchg
les
fucomp
and
mov
xchg
inc
adc
pop
xlat
jmp
dec
cld
in
sbb
push
roll
jg
xchg
adc
push
faddl
fmuls
subb
mov
xchg
mov
arpl
jo
out
mov
testb
add
fs
cmp
imul
aam
cmpsl
mov
icebp
arpl
nop
ds
imul
inc
jno
adc
in
push
dec
mov
pop
mov
mov
push
enter
pop
loope
stos
cmovnp
lret
sahf
mov
sbb
xor
lds
pop
fs
stos
mov
or
lahf
mov
out
xchg
mov
gs
xor
in
jecxz
pusha
push
push
cld
inc
mov
sub
sub
jns
pop
arpl
cmp
push
addr16
fisubrs
push
test
mov
xchg
sub
or
aam
pop
out
out
push
jl
mov
fbld
pop
cld
ljmp
sbb
inc
push
cld
adc
pop
fbstp
jmp
movsl
mov
inc
or
push
push
jg
addb
sbb
push
dec
mov
ret
fwait
scas
push
sub
cmp
jl
mov
aaa
ljmp
push
add
xchg
pop
sub
cmpsl
sti
in
inc
fwait
test
sbb
pop
test
std
cmp
xchg
add
jne,pn
flds
jge
push
lock
push
mov
jnp
scas
fildll
pop
enter
mov
and
inc
adc
pop
movsb
sub
stos
mov
scas
pop
xor
and
stos
iret
rcl
dec
lods
into
int3
pop
cltd
mov
and
xchg
pop
fwait
push
rcrl
push
lock
pusha
dec
dec
mov
popl
pop
adc
fldt
adc
dec
cmc
sbb
pushf
xchg
dec
sub
ds
pop
sti
mov
jb
iret
loopne
pop
mov
popa
popf
push
test
sub
aaa
pop
sbb
sahf
in
jb
pop
pop
push
fs
xchg
mov
icebp
mov
adc
adc
pop
inc
sbb
addb
xchg
iret
pop
push
lret
stos
scas
lds
pop
inc
cmp
ja
pop
jl
pusha
jae
leave
lods
gs
int3
sahf
mov
fstps
je
xchg
jl
test
cmpsl
scas
cmpsl
jg
inc
adc
lret
pop
lea
mov
push
mov
fwait
stos
pop
adc
cwtl
pushf
pop
mov
xchg
jecxz
insb
mov
pop
sar
dec
sub
lret
gs
jge
inc
dec
pop
xor
out
mov
dec
pop
scas
andb
jne
lahf
negb
jle
sbb
loope
les
push
or
pop
mov
sti
pop
dec
adc
jb
js
dec
adc
je
pop
iret
es
cmp
arpl
jl
loope
fmuls
sub
fists
mov
jb
enter
cli
mov
out
pop
fwait
mov
popa
or
ljmp
mov
pop
iret
shlb
xlat
adc
cmp
sub
inc
pop
xor
mov
pop
mov
xchg
xchg
xchg
xchg
mov
hlt
lcall
out
insb
mov
jg
or
inc
testl
iret
jge
rol
dec
mov
mov
or
cmp
push
nop
enter
mov
mov
aam
mov
push
data16
ret
in
pop
sub
adc
mov
jns
enter
test
int
sbb
and
pop
pop
adc
inc
outsl
test
dec
out
mov
pop
stc
fs
sbb
roll
jl
faddl
xor
insl
or
pop
js
xorl
stos
push
pop
push
aad
outsb
push
fbstp
incl
je
xchg
push
rorl
or
ljmp
lock
aad
hlt
pop
std
dec
inc
and
dec
xor
int3
sub
out
rcll
sbb
pop
jg
icebp
loop
in
lds
inc
cmpb
xchg
and
pop
sbb
shrl
push
or
dec
adc
pop
movsl
xor
dec
loope
mov
or
dec
push
aam
ljmp
out
cmpsb
test
leave
fwait
sbb
xchg
xor
mov
sub
or
ret
pop
lods
and
mov
jge
clc
jmp
push
incl
rorb
jl
mov
stc
loop
andl
jp
jne
int
mov
adc
out
xor
push
shll
and
pop
and
loope
movsl
rdpmc
fldl
or
dec
aaa
lret
outsl
stos
dec
ja
sbb
sbb
pop
sub
out
lcall
pushf
test
jle
mov
in
aaa
inc
and
pop
lret
mov
mov
arpl
je
lods
fildll
push
push
in
mov
mov
dec
fidivrs
clc
ret
in
and
pop
push
dec
jns
sub
jge
mov
pushf
iret
push
loop
in
or
pop
xchg
flds
nop
jg
or
jge
jns
lods
sub
or
xchg
xor
push
notb
xor
jbe
inc
pop
js
add
jp
enter
xor
inc
xor
pusha
test
mov
pop
fnstenv
mov
imul
dec
mov
fadds
lahf
addl
adc
loop
adc
add
cmc
mov
and
xor
mov
js
jl
pop
pop
bound
aam
xchg
fnstcw
leave
repnz
sub
idiv
mov
cmpsl
xchg
mov
mov
cmp
pop
cmp
ret
pop
xchg
and
cmp
test
sbb
jo
pop
sbb
cmp
mov
add
jge
jae
mov
mov
ds
or
xchg
data16
frstor
stos
pmaxsw
nop
mov
adc
movsb
js
mov
pop
jmp
cmp
sub
dec
ljmp
pop
loop
lock
rolb
js
or
rcrl
rcll
shll
push
and
xor
sti
addr16
mov
pop
inc
push
sbb
pop
js
orb
jnp
xchg
mov
adc
pop
mov
push
sub
adc
pop
outsb
scas
stos
rorb
mov
xor
adc
mov
sub
cli
shll
das
pop
repz
cmpsl
pop
sbbl
jp
add
pop
push
jne
jae
cmc
icebp
mull
cltd
gs
pop
jnp
pop
inc
or
fsubrl
mov
clc
mov
fisttps
mov
mov
shrl
imul
pushf
addr16
mov
pusha
orl
sub
roll
cmp
cld
cmpsb
add
jmp
nop
add
xchg
fcmovnb
or
filds
push
fisubl
xchg
in
stc
cld
jle
adc
jmp
dec
inc
pop
addr16
pop
lds
cmp
pop
push
leave
sbb
pop
add
mov
sub
adc
pop
push
fldl
into
jne
and
mov
stos
jg
adc
jmp
jge
outsl
lock
lock
add
aad
jo
int3
pop
push
mov
mov
lock
pop
mul
icebp
loopne
insb
sbb
push
add
adc
mov
lea
pop
pop
dec
pushl
ret
mov
xchg
rcrb
pop
lcall
dec
pop
push
jbe
fsub
scas
pop
push
pop
mov
xor
mov
fildl
insl
push
into
mov
filds
pop
push
inc
jns
pushf
repnz
in
add
xlat
xor
sbb
jns
mov
mov
mov
xor
jae
aad
jl
sar
std
fdivl
jnp
pop
lahf
cmp
sbb
xor
sbb
stc
pop
sub
outsl
mov
push
cwtl
inc
dec
imul
lcall
mov
in
push
pop
mov
cmp
cmc
jo
nop
inc
mov
xchg
es
in
push
or
mov
sbb
mov
iret
push
cmp
rolb
pop
loopne
fwait
lahf
cltd
mov
jmp
ljmp
xchg
inc
jbe
mov
jmp
cmp
inc
out
push
flds
shll
or
in
int
in
enter
fidivrs
popl
inc
sbb
adc
pop
in
or
jb
lock
sbb
mov
dec
out
adc
lahf
pop
inc
in
aad
sti
add
mov
mov
fwait
les
xor
inc
imul
dec
cmpsl
xchg
in
and
or
insb
inc
cmp
jecxz
and
jmp
sahf
pop
or
lcall
pop
dec
cmc
jl
push
xor
inc
mov
adc
repnz
mov
insl
cmpsl
fistpll
mov
mov
mov
aas
xor
pop
dec
dec
loopne
mov
mov
cmp
pop
pop
pushf
jecxz
mov
hlt
addr16
cmpsl
pop
mull
test
pop
enter
das
xchg
mov
aas
pop
push
mov
dec
inc
fdiv
inc
lods
xchg
mov
or
or
xor
push
mov
das
aam
mov
pop
xchg
xchg
xor
jbe
movl
xor
inc
dec
pushl
ss
jecxz
or
mov
imull
mov
cmp
mov
xor
cmc
mov
mov
cwtl
sbb
dec
push
xor
xchg
push
push
adc
mulb
adc
jge
loop
pop
mov
leave
mov
lcall
xlat
lahf
sbb
call
mov
insb
pop
hlt
cmp
stos
dec
roll
mov
jnp
push
pop
and
je
int
pop
pop
arpl
sub
adc
je
pop
ljmp
ret
dec
outsl
setl
xchg
pop
add
jbe
jno
cmp
adc
pop
lcall
xor
fstl
mov
pop
or
sub
mov
imul
mov
bound
out
pop
imul
sub
mov
pop
scas
sbb
cmpsb
or
pop
inc
std
rcl
ljmp
stos
push
xlat
bound
imul
inc
aam
jae
or
cmp
in
rolb
mov
sub
inc
jnp
mov
das
sbb
imul
dec
ret
jo
and
test
ficoms
popa
jle
sbb
xor
nop
out
adc
enter
xlat
pop
pop
xchg
mov
sub
sub
mov
int3
ja
pop
jo
sbb
bound
or
stc
clc
adc
fistl
mov
mov
mov
popf
cs
js
inc
out
test
fs
or
out
aam
push
pop
in
jmp
popf
cwtl
lret
pop
xor
ror
mov
ds
adc
mov
cltd
cmp
inc
jno
mov
pop
mov
push
aaa
loope
pop
subb
sub
jno
stos
adc
jmp
and
ja
adc
inc
shll
out
adc
aad
inc
mov
or
mov
sbb
shrl
dec
pop
cmp
jno
out
aam
lret
xchg
push
call
mov
push
into
aaa
pop
in
mulb
je
dec
cmpsl
cmp
imul
pop
fisubrl
dec
mov
sbb
mov
fcmovnbe
test
mov
sti
add
int3
enter
lds
sub
imul
pop
bound
pop
add
fwait
fs
scas
adc
pop
add
pop
es
jmp
lret
mov
push
loopne
push
ja
pop
loop
jae
or
adc
jle
dec
out
or
cmp
fmuls
lods
fcomps
xchg
aam
xchg
xchg
fwait
gs
cli
cmpl
inc
dec
pop
pop
leave
int
push
shrl
dec
test
inc
jns
xchg
insb
lods
dec
mov
sub
pop
add
mov
cld
mov
out
loope
pop
fisttpll
icebp
xchg
pushf
jne
scas
cli
push
mov
mov
vpshaw
lret
xor
jae
mov
psubsb
jg
pop
lcall
mov
ss
aam
orl
mov
jge
sbb
jno
adc
push
scas
test
data16
movsl
cmp
jge
pop
insl
fimuls
jmp
xor
cltd
pop
xorl
mov
stos
jae
ror
pop
lret
outsb
roll
sbb
jge
movsb
push
add
rcll
adc
pop
dec
add
cmovle
mov
fadd
push
cmc
imul
inc
cwtl
adc
jge
leave
sub
pop
mov
sbb
jnp
pop
loopne
jl
enter
jns
sbb
sbb
call
sub
setle
sbb
filds
loope
test
jle
push
pop
adc
jbe
nop
std
inc
sbb
cmpsl
out
inc
in
lods
loop
les
clc
call
sub
pusha
insb
repz
sbb
std
mov
or
dec
scas
dec
mov
das
aam
jle
adc
xor
pop
cmpb
mov
mov
jbe
aas
jge
movsl
dec
in
add
ss
adc
pop
mov
rcll
test
pop
jecxz
inc
xor
xor
and
pop
mov
xor
mov
jb
addr16
add
push
xchg
or
mov
insb
imul
mull
cmc
sbb
out
xchg
cs
int3
std
and
pop
repz
sub
stos
push
popf
gs
pop
mov
in
pushf
push
les
fmuls
or
pop
jne
negb
loop
sub
adc
je
sub
arpl
pop
mov
movsb
cmp
push
fucomi
mov
or
fiadds
jle
lods
enter
mov
add
sub
sub
mov
jmp
pop
loope
mov
ret
jge
stos
xor
cmpsl
pop
lds
cmc
cmp
aad
inc
lods
sbb
jo
mov
adc
jae
xchg
mov
aad
fadds
lea
sub
pop
das
inc
les
std
or
stos
mov
jae
insl
cmp
test
jno
adc
rcl
cmpsl
cmp
lret
sbb
add
aad
mov
bound
mov
inc
push
push
fmul
push
sbb
leave
mov
hlt
popf
push
fadds
mov
rcrb
or
add
pop
xchg
add
stos
rolb
loopne
jle
cmp
xor
jg
push
pop
xchg
cltd
adc
lret
xor
jp
clc
je
mov
in
add
filds
xchg
cs
or
xor
push
aam
stos
xchg
xorb
pop
dec
mov
jns
lahf
sub
out
dec
ljmp
sbb
xchg
movlps
test
pop
xlat
cwtl
mov
fiaddl
lret
jecxz
xchg
mov
out
imul
bnd
cmp
cmpsl
popf
pop
insb
mov
push
sbb
pushf
mov
sub
aad
mov
pop
sbbb
push
filds
jecxz
cmp
xchg
inc
in
push
adc
inc
sbb
jae
mov
adc
jmp
subb
adc
mov
pop
mov
xchg
shlb
push
mov
stos
dec
cmc
movsl
enter
add
aas
and
adc
imul
lods
lods
fisubl
sub
sbb
out
xchg
sbb
mov
xchg
test
cld
lods
push
sub
add
out
pop
sbb
sbbb
adc
mov
dec
cmp
push
sub
add
pop
mov
mov
gs
shrb
or
or
stc
iret
fcmovnb
stos
sub
sbb
sahf
adc
pop
pop
pop
jae
xchg
imul
loopne
ss
lock
adc
scas
mov
jp
xchg
or
js
push
xlat
push
rol
fcmovnb
mov
or
dec
stos
dec
pop
in
aaa
and
dec
xchg
jno
fisttpl
add
pop
and
xlat
mov
xchg
je
pop
mov
mov
sbb
push
andl
ss
testl
sbb
add
and
xchg
or
mov
incb
data16
cmc
push
pushf
in
mov
insl
dec
and
aad
imul
pop
inc
push
jne
notb
xor
aas
loope
pop
adc
ss
or
mov
dec
iret
ljmp
lods
pop
and
roll
sbb
iret
add
pop
imul
and
sarb
or
lods
xor
push
dec
xchg
cmp
popa
jg
or
fs
push
pop
dec
cld
inc
in
pop
out
aas
dec
inc
stos
push
js
mov
cmp
sub
ss
cmpsl
inc
lds
add
lret
test
jno
mov
mov
pop
out
mov
xor
pop
cld
gs
mov
scas
pop
scas
mov
icebp
push
xlat
repz
cwtl
push
int3
inc
shl
loopne
pop
push
stos
jb
mov
xor
jl
repz
out
pop
nop
lret
pop
add
je
mov
enter
stos
arpl
sbb
xor
js
pop
iret
aam
mov
pop
stos
lods
movsb
cmc
push
lret
pop
in
xchg
sbb
incl
and
cmpsb
jecxz
pop
sti
inc
xor
outsl
push
mov
fsubrs
scas
inc
insl
mov
pop
int
adc
and
inc
incb
movsb
hlt
icebp
inc
stos
std
incl
fimull
ret
insb
mov
lret
jno
mov
xchg
faddl
aam
mov
sbb
pop
mov
mov
nop
gs
push
mov
jae
aas
push
in
dec
outsb
jl
xchg
jmp
mov
push
mov
xor
std
dec
and
mov
cmp
les
rolb
lahf
dec
adcl
dec
loopne
sbb
dec
out
or
imul
imul
add
fisubrs
dec
pop
push
mov
insl
mov
icebp
mov
pop
inc
mov
es
fadds
stc
xor
ds
pop
pop
cmp
lea
fcoms
mov
sub
inc
ljmp
mov
sbb
ja
xor
inc
push
cmp
sub
sub
jae
mov
adc
dec
in
jge
dec
mov
cmp
cmp
test
stos
mov
sbb
in
ss
lods
mov
sbb
mov
out
adc
mov
ljmp
inc
aas
lret
xor
pop
pop
addr16
mov
fs
adc
dec
flds
movsb
jae
int
sbb
bound
mov
ja
arpl
cwtl
lock
ret
cmp
mov
pop
mov
mov
scas
loop
inc
sub
ss
sbb
dec
pop
xchg
outsb
lods
hlt
incb
cltd
dec
mov
adc
pop
ja
nop
mov
add
lcall
fisttpl
pop
jbe
xlat
pop
jecxz
adc
add
mov
leave
ds
cmpsb
fwait
add
sub
stos
dec
dec
insl
xchg
push
pop
std
mov
test
push
rcl
fst
mov
push
repnz
mov
ja
push
adc
mov
push
mov
push
sub
stos
fwait
shl
lods
jno
adc
jb
ljmp
gs
mov
outsl
and
test
js
inc
cltd
sub
ret
aad
jo
pop
dec
xchg
std
hlt
mov
pop
add
pop
cltd
adc
dec
cmp
add
ja
sbb
pop
mov
fnstenv
push
scas
bound
movsb
std
rol
js
ror
mov
push
cmp
pop
jle
mov
push
je
push
push
push
stos
mov
cmp
scas
clc
mov
aad
dec
hlt
pop
mov
je
or
and
rcl
and
scas
lcall
add
xchg
test
setns
inc
pop
jle
rclb
jbe
mov
out
push
loope
xchg
test
fiaddl
pop
cmp
les
push
lret
fcompl
enter
pop
repnz
std
cmp
shll
inc
xchg
pop
push
and
fsubl
movsb
leave
icebp
push
pop
outsb
pop
insb
rorl
pop
pop
imul
pop
popa
mov
loop
cmp
addl
sbb
adc
fstpt
pop
jb
inc
lods
mov
dec
adc
jae
enter
sub
pop
sub
movsl
mov
lea
pop
int3
jno
jge
push
pop
mov
lods
inc
sbb
mov
pop
or
subl
scas
mov
pop
jge
jno
inc
jne
mov
dec
sbb
jbe
fmuls
adc
cmp
ljmp
nop
dec
pop
cltd
hlt
mov
testl
pop
mov
or
lds
cmpb
stc
and
cbtw
dec
addr16
sub
mov
inc
cmp
mov
jo
pop
pop
imul
fcomps
out
push
ljmp
sti
mov
push
xchg
cmp
add
push
fwait
sub
clc
testl
pop
stos
pop
mov
cli
mov
dec
and
lret
inc
gs
sbb
and
push
ds
xor
lea
cmpsl
outsb
sub
cs
pop
loop
mov
pop
xchg
dec
mov
mov
fmul
pop
test
gs
movsb
sti
xor
sub
or
pop
loop
mov
jae
push
xor
sub
mov
lods
pop
data16
loop
gs
lods
unpcklps
jmp
fwait
insb
mov
inc
cmpsb
je
adc
pop
insl
test
sub
dec
jns
mov
jae
movhps
lds
push
aad
mov
and
push
jg
xchg
cwtl
and
pop
inc
divl
insl
cmc
maxps
adc
inc
mov
sbb
inc
xlat
or
movb
out
movsb
xchg
out
cld
jmp
sub
inc
push
enter
iret
cs
jecxz
pop
js
cmp
ficoml
pop
jo
add
pop
mov
dec
sbb
mov
pop
std
jp
push
arpl
push
xor
sbb
mov
daa
adc
cli
sbb
fwait
xchg
movl
aad
cmp
insl
jecxz
lods
pop
push
cmpsl
leave
sbb
xchg
dec
stos
push
sub
or
mov
jp
xchg
dec
stos
pop
scas
ret
ficoms
out
sbb
inc
enter
pop
jae
sub
mov
test
sub
lea
clc
inc
mov
sbb
jmp
mov
push
popa
roll
sti
push
cmp
fwait
sbbl
jle
mov
cmpsb
inc
mov
push
pmaddwd
ror
pop
cmp
push
jnp
pop
pop
lock
mov
mov
jno
int
push
jo
and
cmc
cld
adc
xchg
test
sub
add
pop
fldt
xchg
jns
jae
mov
mov
ds
and
inc
call
insl
sti
mov
pop
insb
push
ss
stos
pop
mov
std
clc
popf
pop
xor
pop
cld
pop
mov
mov
mov
hlt
outsl
pop
xchg
mov
divb
mov
pop
cmpsb
movsl
cld
ljmp
cs
and
aam
dec
test
lcall
std
gs
jecxz
pop
shl
out
or
lods
dec
inc
push
pop
or
pop
push
lret
push
stos
sub
iret
mov
cmp
jp
xchg
dec
sub
add
sub
or
push
xor
out
push
pop
adc
fisubrl
inc
insb
movsl
call
mov
lock
ret
mov
or
orl
loope
cli
nop
pop
pop
stc
stos
fstl
pop
dec
mov
push
pop
pop
idivl
xor
mov
pop
stos
add
incl
stos
jo
add
xor
add
fisubl
out
push
and
lods
insb
das
ljmp
or
mov
and
pop
jno
jg
or
mov
ss
pop
xorl
jns
cmc
in
ss
adc
test
xchg
mov
pop
mov
mov
sbb
ss
lret
jno
hlt
inc
jae
xor
cmp
dec
outsl
dec
sub
pop
push
shrl
and
adc
pop
jne
add
push
loope
pop
fists
cld
das
popl
idivl
cs
lds
jg
push
leave
pop
in
jns
out
mov
mov
cmp
or
sub
cmpsl
lea
pop
push
das
out
jge
jmp
pop
scas
xor
sbb
pushf
mov
sub
and
adc
jmp
xchg
nop
pop
repz
and
into
mov
fildl
in
stc
mov
lods
mov
sub
popa
aad
and
xchg
inc
ret
roll
fisttpl
push
push
jns
loop
inc
xor
mov
lods
mov
rcrl
cmpb
sbb
pop
or
pop
cmp
inc
js
pop
notb
repnz
inc
test
sub
push
or
xchg
dec
rolb
xorl
adc
ljmp
pop
in
out
aam
js
in
and
stos
jmp
dec
sub
lret
test
mov
mov
sbb
subb
insb
ret
pop
sub
adc
cmp
popf
pop
in
add
pop
fiaddl
and
into
imul
jp
mov
fldl
xchg
pop
fwait
ss
lahf
jp
data16
pop
push
xorb
gs
pushf
lahf
push
int
xchg
and
das
pop
pusha
in
sub
mov
enter
js
lea
lods
xor
addl
or
or
loopne
xor
and
hlt
or
mov
sbb
mov
pusha
and
sub
addl
stos
pusha
stos
xchg
mov
es
rorl
aas
stc
ja
sbb
js
pop
sub
lret
pop
push
divl
pop
push
push
rorl
sbbl
loopne
and
pop
negb
pop
scas
ljmp
outsb
dec
xor
addl
jne
dec
fsubrl
xor
ret
mov
xor
push
push
xor
adc
pop
iret
stos
jnp
mov
les
enter
jae
pop
pop
mov
push
mov
ja
push
mov
insl
clc
stos
cmp
jnp
jg
mov
popf
fcoms
fmulp
jl
adc
xchg
iret
mov
dec
stos
mov
jo
and
mov
mov
jge
les
outsb
cli
dec
pop
pop
push
mov
pop
xchg
lret
test
or
lock
fwait
pop
out
or
int3
fmull
or
pop
ret
arpl
inc
pop
jg
xchg
out
loopne
cmp
mov
lods
mov
adc
sub
outsl
out
xor
sbb
pop
mull
cli
std
ljmp
sbb
and
pop
pop
push
xor
jns
adc
pop
into
pop
sub
mov
les
pop
das
inc
and
xchg
ficoml
mov
dec
leave
adc
mov
lcall
adc
test
call
mov
mov
mov
scas
pop
inc
xchg
xor
and
xchg
mov
mov
jge
hlt
in
mov
ret
out
aad
lcall
lret
andl
andl
dec
rcll
movsl
mov
push
inc
sbb
xor
mov
pop
sub
nop
pop
aas
dec
add
xcrypt-ctr
test
pop
ds
out
shll
lds
leave
xor
daa
or
imul
mov
xchg
sub
xchg
fdivs
adc
pop
xor
jle
push
sbb
cmp
xchg
fs
ja
cmpsl
pop
push
imul
pop
movl
and
xor
push
lahf
inc
inc
sbbb
or
pop
std
test
xor
imul
test
outsb
mov
xchg
lahf
fisubs
cmp
pop
xor
mov
sub
push
mov
add
mov
mov
sarb
inc
xor
fs
jge
mov
call
xchg
ret
lret
mov
add
xchg
mov
mov
enter
add
pop
sub
sub
hlt
sub
popa
sbb
fs
pop
mov
pop
js
lahf
add
xor
test
sub
outsl
mov
icebp
pop
dec
mov
out
inc
in
nop
cmpsb
add
fistpll
jl
pop
and
pop
jge
out
out
shr
pop
data16
insb
xor
pop
inc
jg
pusha
pop
imul
xchg
rcrl
fisttps
jmp
mov
lret
test
cmpsl
sbb
out
jl
pcmpeqw
je
aam
lds
repz
rol
sub
inc
adc
leave
pop
movb
push
roll
imul
sub
pop
lret
lock
sti
ljmp
pop
mov
mul
adc
gs
inc
lock
sbb
pop
popa
fidivs
fiaddl
sti
test
adc
or
cwtl
into
insb
cmp
pop
es
jns
std
pop
loope
pop
in
rcll
shll
popf
outsl
adc
mov
lock
sbb
inc
xchg
stc
pop
jne
push
push
mov
pop
lahf
loopne
lret
inc
out
mov
fnstenv
sbbb
sqrtps
pop
js
stos
test
cmpsb
shr
pop
fstl
outsl
mov
mov
xchg
jl
std
sbb
mov
lcall
jns
sbb
lret
pop
jb
inc
pop
lret
adc
and
paddd
lock
mov
jmp
sub
stos
add
out
sub
mov
loop
mov
push
pop
mov
adc
pop
pushf
mov
mov
sbbb
pop
pop
fs
jb
mov
scas
jecxz
ljmp
inc
pop
rcll
sbb
aaa
shlb
adc
test
into
arpl
adc
push
ljmp
and
icebp
inc
lea
into
inc
movsl
jbe
sbbb
jno
imul
call
out
mov
setns
pop
sbb
inc
sarl
jmp
fidivrs
cs
aad
push
adc
je
or
mov
fistpl
pop
jb
cmp
mov
stos
push
pop
andl
ljmp
shl
cmpsl
add
push
mov
pop
xor
mov
inc
pop
ss
push
jbe
push
scas
cmp
jmp
lods
mov
les
fidivrs
sub
mov
lahf
pop
mov
pop
sub
xchg
in
xchg
aaa
pop
clc
and
mov
pop
push
mov
imul
push
push
in
cmp
push
stc
inc
mov
jecxz
dec
addr16
push
or
lahf
push
ss
test
and
aaa
add
enter
xchg
lret
adc
stos
test
pop
mov
scas
sbb
repz
or
add
xchg
aaa
pop
orb
sub
jmp
or
jae
push
adc
mov
push
cltd
pushf
sahf
cmc
rorl
and
pop
cmpsb
push
es
ret
adc
and
cmc
xor
call
add
inc
mov
sub
mov
aam
cmpb
inc
out
inc
addl
aam
fstl
shlb
pop
arpl
xchg
push
adc
out
push
pop
ljmp
mov
mov
pop
jae
jg
xor
dec
scas
xor
pop
fadds
fwait
push
shl
lea
cmp
adc
cld
jl
inc
jecxz
out
ss
and
outsb
pusha
popa
shlb
fstpl
mov
inc
sarb
shrb
pop
fcompl
shl
cwtl
jns
in
imul
enter
cmpsl
xlat
xor
out
fucomip
loopne
cmp
mov
xchg
mov
leave
scas
pop
jl
jae
sub
inc
or
or
rcl
mov
scas
cmpb
arpl
mov
sbb
add
int3
xchg
sbb
mov
icebp
fisttps
push
pop
inc
push
inc
xchg
mul
xchg
iret
loope
bound
mov
pop
mov
lods
xor
cmp
mov
insl
pop
jo
scas
mov
pop
pop
dec
das
cmp
mov
pop
jnp
scas
jl
mov
les
push
jp
inc
test
loopne
js
arpl
loope
adc
lock
cmpsl
xchg
sbb
jnp
movl
xchg
dec
int
inc
fs
lods
loope
stos
test
jge
out
lcall
xor
cltd
adc
pop
mov
inc
and
push
int
popf
lahf
scas
gs
xor
lea
mov
inc
push
cs
inc
lds
pop
mov
add
pop
scas
cmp
jl
fisttps
cmp
pop
insb
cmpsl
pop
or
js
imul
test
popa
insl
or
inc
or
mov
add
ds
in
xor
and
adc
ja
inc
dec
pop
out
and
lods
push
add
jne
scas
inc
adc
jmp
push
dec
fstl
ret
pop
jecxz
imul
add
cwtl
pop
fwait
push
pop
push
rcr
loope
rclb
xchg
cmp
leave
psadbw
insb
loope
sbb
loop
in
mov
sbb
out
aas
jmp
push
dec
ss
loopne
adc
ja
pop
sub
push
add
lahf
pop
vcomiss
mov
xchg
cmp
mov
adc
in
pop
mov
iret
mov
out
push
mov
cmp
pop
orl
cmp
mov
jnp,pn
pop
xchg
add
mov
adc
sbb
inc
rcrl
xchg
xchg
fstl
enter
cmp
pop
data16
push
cmp
xor
add
sub
stc
cmpsl
clc
bound
int3
dec
mov
jmp
imul
add
and
pop
test
outsb
lods
aaa
xlat
push
pop
jge
mov
inc
jp
rolb
mov
mov
in
testb
xchg
into
mov
inc
mov
idivl
pop
sbb
jns
pop
cmp
je
pop
hlt
andb
add
std
mov
cmp
insb
mov
pop
xor
jmp
sbb
or
lea
leave
mov
or
inc
pop
sub
insl
lods
xor
dec
mov
adc
mov
or
mov
fdivrl
out
loop
repz
test
ja
mov
pop
in
inc
jle
mov
pop
jl
bound
popa
std
or
dec
pop
fs
xchg
add
jns
stos
pop
sub
mov
push
mov
cld
adc
sbb
enter
cmp
pop
jbe
jecxz
and
dec
fbld
mov
jge
out
enter
test
cmp
mov
test
dec
adc
dec
and
loop
addb
test
and
pop
xchg
mov
outsb
pop
xchg
push
insl
jg
dec
inc
movl
push
out
jmp
scas
out
jnp
lods
setns
sbbb
insb
and
test
movl
pop
imul
icebp
insb
jb
mov
push
fmuls
add
jl
testl
pop
shlb
repnz
js
sub
aam
pop
ljmp
mov
fstps
pop
ret
leave
xor
pushf
jo
cmp
test
xor
dec
cwtl
mov
mov
cwtl
cmpsl
stos
mov
sub
outsb
xor
lock
pop
pop
fsubrp
push
mov
inc
pop
mov
or
pop
cmp
xchg
push
xchg
sbb
jbe
sbb
pusha
pop
imul
stos
clc
push
pop
in
and
sub
xchg
inc
rcrb
or
xchg
mov
daa
jmp
ret
or
in
inc
jecxz
inc
fiadds
ret
cmovo
cmpsb
popa
cltd
cwtl
mov
xchg
push
push
and
and
or
add
lea
and
push
gs
out
xchg
movsb
add
inc
test
pop
gs
int
xor
aad
push
out
les
sbb
and
dec
add
out
les
mov
or
or
push
loop
das
pop
and
add
mov
inc
sbb
or
outsl
jecxz
das
in
inc
pop
popl
or
inc
mov
push
jp
push
mov
add
pusha
push
aaa
mov
outsl
jg
into
cmp
nop
inc
ret
into
pop
add
xchg
test
inc
push
ficoms
pop
insl
sti
adc
push
loope
or
cltd
loopne
jl,pn
lds
cmpsb
cmc
mov
scas
movsb
cmpsb
sbb
jne
in
in
inc
and
inc
push
addb
adc
lods
dec
lea
ret
popf
xchg
stc
and
or
repz
daa
fsubl
or
in
push
std
pop
jp
clc
shll
test
push
leave
popa
and
fiadds
add
add
cmpsb
hlt
aam
push
fsubr
sub
sbb
add
in
mov
sahf
add
add
into
mov
mov
pushf
push
sti
test
sahf
cltd
cmp
add
xor
push
xor
testl
mov
lret
xchg
loop
push
cmp
push
mov
pusha
out
jp
mov
cmpsb
and
pop
cmpsb
fsubrl
dec
add
xchg
cld
jo
into
outsb
inc
adc
sbb
sbb
sbb
jp
jb
repz
inc
in
cs
imul
es
gs
push
lahf
sbb
fisubrl
out
mov
mov
inc
adc
stos
gs
movb
shr
test
xor
pop
mov
inc
daa
sbb
das
les
inc
inc
mul
sbb
orl
cmpl
cmp
stc
pop
and
js
pushf
cmpsb
lahf
repnz
adc
push
inc
and
bound
mov
pushaw
out
std
shufps
aas
loop
mov
add
pop
dec
push
out
negb
scas
xchg
pop
stos
in
adc
cmpsb
inc
xchg
sub
out
xlat
pop
movsl
push
cwtl
into
movsl
in
es
scas
movsb
sub
movsb
test
movsl
inc
pop
inc
and
dec
in
and
jle
push
stc
cmpsb
pop
add
sbb
cmp
inc
push
gs
and
push
loop
sti
sub
sub
stc
and
outsb
popf
mov
sbb
das
and
ja
push
adc
in
add
data16
cld
cli
pop
inc
loop
movsb
loopne
hlt
repnz
es
out
test
in
or
and
fs
xchg
jecxz
bound
psrad
and
fistpll
ds
std
fldl
repz
cmp
out
fstpt
cwtl
mov
xchg
data16
xchg
push
push
es
mov
xchg
in
mov
sarb
into
mov
int3
mov
ljmp
in
enter
and
or
sub
gs
add
cmp
addl
xchg
cmp
mov
data16
cld
inc
es
clc
movsb
fisubs
ret
or
mov
stos
mov
jno
lret
fs
or
insb
sub
push
xchg
sub
jo
outsl
das
cmc
aas
inc
nop
pop
or
lahf
std
adc
xchg
cltd
insb
popa
imul
lods
mov
pop
les
movsb
push
std
dec
fs
mov
pop
sti
or
ljmp
dec
jo
test
pop
jge
ja
imul
sarb
cmpsl
sbb
sbb
mov
pop
dec
pop
mov
aas
mov
cwtl
inc
push
sub
nop
or
pop
cmp
adc
mov
out
pop
mov
cwtl
or
fcoml
out
pop
mov
jmp
jnp
outsb
iret
pop
gs
or
ret
push
leave
dec
sub
out
lods
stos
pop
xor
scas
adc
mov
push
bound
mov
shll
ljmp
jecxz
mov
xor
sub
jae
inc
mov
or
jns
sub
jecxz
xor
cmp
gs
adc
push
mov
shrl
mov
ret
imul
inc
lret
dec
inc
sbb
scas
push
mov
cmp
push
enter
negl
sub
mov
outsb
jl
push
fsubrl
pop
cmpsl
mov
test
insl
stos
cmp
addr16
roll
xchg
lods
cwtl
cmpsl
sti
jno
mov
mov
mov
repz
cmp
int3
mov
orb
cmpsb
imul
adc
mov
lds
pop
stc
sarl
lahf
xor
or
movsl
add
xchg
scas
pop
push
cmp
rclb
fisttpl
sbb
flds
jbe
pop
jbe
adc
xchg
mov
sbb
inc
adc
movsl
lcall
add
loop
pop
adc
and
sbb
mov
in
lods
scas
scas
pop
xor
push
xor
mov
out
arpl
popa
out
rcrb
rolb
nop
or
cmp
fiadds
adc
sub
mov
outsb
in
adc
xlat
sbb
push
push
xchg
enter
pop
add
dec
call
and
hlt
xorb
loope
ss
fimull
shlb
mov
dec
jo
sbb
lret
pusha
xchg
cwtl
jmp
mov
movsb
cmpsl
arpl
ss
and
and
add
sbb
aaa
and
adc
in
testb
add
pop
xchg
add
lret
add
xor
inc
and
movsb
mov
ret
scas
mov
outsb
add
test
xchg
loopne
mov
adc
inc
add
hlt
arpl
mov
data16
add
rolb
add
and
in
jmp
fs
testl
sbb
rcll
mov
movsb
ds
or
lret
daa
sbb
clc
rolb
ljmp
inc
out
jne
pop
in
movsb
ds
aam
aad
push
and
xor
lcall
ret
adc
sbb
inc
in
sarb
mov
out
push
inc
jne
and
add
add
inc
nop
icebp
and
inc
mov
inc
pop
outsb
adc
push
jbe
pop
fwait
mov
inc
es
stos
mov
mov
mov
push
inc
loopne
xlat
leave
lahf
addr16
call
ret
das
xor
jne
mov
pop
cmp
rorl
test
mov
dec
stos
or
push
inc
mov
rorb
mulb
jp
fstps
cmpsl
js
xor
mov
mov
out
jecxz
pop
outsb
scas
jnp
test
test
push
in
cmp
mov
fstpt
push
jecxz
pop
jo
jge
out
sub
pop
xor
enter
cmpsl
pop
mov
out
ret
and
test
xchg
outsb
xor
sub
sub
inc
in
or
xchg
or
inc
test
insl
dec
sub
adcl
mov
pop
pop
cs
add
sub
sub
punpcklbw
imul
lcall
sbbl
and
jecxz
or
cld
outsl
pop
fcompl
popa
adc
pop
add
push
lahf
ds
test
pop
jno
scas
xchg
or
pop
es
iret
dec
adc
push
out
shr
add
movsl
mov
add
xchg
pop
aas
test
add
inc
and
dec
inc
lock
scas
pop
in
push
mov
es
and
in
jne
add
jns
std
and
sbb
aam
sti
jo
popa
jp
push
adc
mov
sub
lods
mov
cmp
pop
jns
mov
loopne
push
add
stos
or
pop
ud0
js
or
dec
mov
cmp
insb
nop
mov
rolb
stc
mov
dec
fs
jne
loop
loope
mov
jnp
push
leave
jle
pop
ret
scas
dec
and
pop
in
ss
rcrl
jp
push
jmp
adc
repnz
fidivs
sub
rclb
adc
adc
gs
aad
jbe
out
mov
xchg
mov
mov
subl
lods
nop
push
jno
popf
je
xchg
stos
push
notl
mov
cmp
pusha
aas
movsl
aam
mov
stos
push
add
fmull
push
push
lret
jp
shll
or
mov
cld
int
pushf
cmp
hlt
pop
lds
incl
aad
and
out
mov
addb
shl
mov
inc
xchg
fdivrl
mov
dec
sbb
push
aaa
es
test
add
jg
pop
outsl
xchg
in
mov
cmpsl
jb
into
decl
es
stos
test
mov
sbb
into
mov
loopne
sbb
lcall
out
push
jge
scas
es
fistl
pop
jbe
lds
movsb
sub
sbb
inc
sbb
das
nop
sub
or
adc
pop
mov
data16
sarb
mov
ret
cld
scas
aam
adc
shl
cli
sti
and
popa
mov
xor
js
daa
rol
jnp
js
push
or
pop
jb
mov
inc
push
cli
je
ja
icebp
pop
inc
imul
and
ss
repnz
in
cwtl
and
lods
and
push
sub
inc
and
jecxz
arpl
mov
rcrl
lahf
ljmp
arpl
add
xchg
push
add
cmpsb
sbb
and
push
rclb
xchg
and
or
bound
xor
sbb
aaa
inc
ljmp
and
sub
add
inc
in
dec
testb
or
or
and
lea
add
push
add
lds
inc
movsb
pushf
outsl
pop
cmp
sbb
jle
arpl
add
data16
sbb
ficoms
jbe
out
jle
dec
shlb
femms
adc
and
sub
lea
in
and
push
sahf
cmovle
add
and
mov
in
cmc
les
push
lcall
push
jecxz
les
fiadds
adc
push
ret
jns
mov
xchg
es
out
daa
mov
rolb
pop
hlt
lahf
movsl
cmp
and
xor
lahf
mov
ficomps
mov
add
rorl
addr16
push
adc
sbb
dec
pop
mov
cmpsb
lcall
add
cmpsb
nop
loope
add
dec
or
push
mov
mov
mov
aaa
pop
insl
mov
add
mov
lcall
sbb
pop
arpl
push
ds
ret
popf
loop
repz
jns
pop
push
or
mov
and
jb
in
mov
and
push
mov
or
ss
pop
fwait
mov
pop
out
inc
in
shlb
adc
xchg
ficomps
repnz
in
inc
push
nop
push
pop
mov
push
in
xor
jle
pusha
cmc
pop
leave
mov
dec
insl
fcmovne
jns
aad
in
mov
pop
push
add
gs
clc
es
and
push
add
pop
pushf
add
or
sbbb
and
push
cmpsb
jb
or
xchg
ret
inc
and
push
sahf
mov
push
push
cmp
ret
cmpsb
je
inc
xlat
mov
fisubrs
repz
pop
xchg
in
aam
and
fisubl
and
pop
and
or
cmp
push
xor
out
and
cmp
mov
icebp
jp
pop
jle
xor
dec
cmc
and
or
es
cltd
push
push
cmp
fwait
jecxz
in
mov
test
inc
and
xchg
pop
and
cmpsb
mov
aam
pop
dec
mov
xchg
lods
jle
and
cmpsb
test
add
pop
ficomps
loop
ret
cwtl
cwtl
mov
clc
adc
adc
adc
popf
sub
out
cmpsb
push
inc
jb
and
mov
add
loop
ret
or
lcall
int
and
popf
cmpsl
ret
loopne
rcrb
cmp
xchg
enter
in
xchg
dec
xor
daa
enter
in
mov
in
addl
fimull
xchg
mov
add
test
aaa
rcl
movsb
xor
sbb
in
mov
mov
xchg
pop
fisubrs
mov
jne
stc
mov
sbb
adc
mov
xchg
gs
push
add
adc
call
add
jo
mov
rorl
push
pop
cmpsl
sub
clc
sbb
arpl
into
ret
pop
sbb
and
movsl
inc
sbb
xchg
jbe
out
stos
mov
and
fiadds
cmp
add
push
and
jecxz
add
call
add
dec
mov
or
fistps
adc
mov
push
daa
ja
lahf
scas
push
ljmp
mov
in
lds
das
test
adc
adc
ficompl
popa
xchg
sahf
movsb
xchg
pop
adc
xchg
mov
cltd
inc
add
cmp
ljmp
pushf
lret
andb
outsb
xchg
enter
cltd
jp
ret
inc
xchg
es
mov
mov
lds
mov
sbb
loope
xor
push
cmpsb
std
add
and
xchg
out
and
les
fwait
in
pop
sbb
add
aam
aas
and
add
cmp
daa
adc
pop
leave
and
xchg
adc
out
mov
adc
rol
daa
fimull
in
add
push
loopne
movsb
mov
int
clc
icebp
repnz
push
in
push
lahf
pop
add
mov
lret
sbb
daa
test
mov
mov
popa
fcompl
xchg
fs
jne
movsl
cs
adc
movsl
lock
loopne
cltd
mov
ret
out
and
mov
test
repz
xchg
cwtl
and
js
push
pushl
and
ljmp
ljmp
cmp
mov
and
cmp
sbb
mov
or
sbb
and
filds
mov
fs
and
push
and
push
arpl
popf
popa
testb
xorl
inc
pop
pusha
adc
es
or
sahf
sarb
aad
or
cld
and
fisubs
xchg
sbb
shll
fisubs
lcall
mov
sbb
push
lahf
movsl
jbe
sbb
adc
mov
and
add
aad
and
push
sbb
add
pop
loopne
mov
push
cmp
iret
mov
pushf
ror
mov
mov
and
sbb
adc
popa
loopne
and
call
mov
xor
hlt
push
shlb
lods
loop
xchg
ret
movsl
push
push
dec
into
xchg
mov
movsb
mov
inc
or
es
test
fs
push
arpl
and
test
rcrb
cmpsb
mull
cmp
fmuls
xchg
mov
sub
mov
cwtl
jge
popf
pushf
das
cltd
aam
push
jge
inc
mov
addr16
cli
out
xchg
mov
and
pushf
out
pop
arpl
add
lahf
insl
sbb
out
cld
inc
ret
cmp
hlt
push
loopne
push
mov
std
data16
and
xchg
adc
mov
rorl
orb
mov
add
xor
cmpsb
push
lahf
or
mov
cwtl
leave
sbb
fnsave
inc
and
cmp
pop
xor
mov
dec
cld
setge
sahf
push
getsec
and
rol
movsl
mov
mov
and
aam
aam
adc
out
movsl
cmpsb
push
lea
xchg
scas
jle
mov
fwait
arpl
add
pop
add
add
and
movsl
mov
lea
repz
movsl
xor
push
adc
cmp
lret
add
sbb
imul
jb
dec
fcompl
xor
clc
lcall
xchg
out
mov
bound
mov
ret
mov
dec
ficomps
jbe
dec
xchg
xor
sbb
or
sbb
jecxz
pop
xchg
or
push
repz
aam
lods
xor
loopne
adc
not
movsb
xchg
js
mov
pop
aas
xchg
cmp
int3
sbb
in
xor
sbb
push
mov
mov
sbb
ret
pop
or
mov
rcrl
push
lock
gs
sbb
jb
loop
aad
jb
movsb
jg
mov
sarb
imul
shll
push
cld
xchg
xchg
xchg
mov
mov
std
insl
inc
adc
cmp
sub
in
pusha
pop
out
sahf
jle
cmc
xor
sub
lahf
and
ja
xchg
jmp
add
outsl
sub
push
es
and
fsts
push
les
inc
les
imul
shl
pop
mov
ljmp
iret
test
mov
mov
push
rcrb
inc
xchg
cmc
cmpsb
or
inc
test
sbb
test
std
bound
dec
jecxz
mov
cmpsb
movsb
std
fwait
std
mov
push
xchg
call
out
popf
out
mov
sti
push
jbe
cltd
and
es
sbb
es
mov
mov
pop
xchg
push
add
aaa
push
and
mull
nop
nop
push
and
cmpsb
mov
ret
popf
cmpl
inc
cltd
mulb
aaa
loop
sub
sbb
repz
cmp
pop
add
rcrb
cmc
popf
and
xchg
jbe
and
movsb
movsb
in
xchg
inc
push
cmpsb
sbb
ss
test
xchg
jl
test
push
fwait
and
xchg
and
pop
fbstp
add
mov
sbb
retw
cmp
cmp
pop
lods
sbb
sbb
xchg
int3
pushf
or
sahf
mov
cmpsb
mov
sti
test
and
and
push
pop
sub
mov
mov
mov
dec
jb
lret
mov
and
pop
in
jne
adc
mov
jle
add
add
pop
and
sbbb
push
pop
add
pop
and
in
xchg
ficompl
or
js
movb
jns
ret
jb
pop
es
and
adc
in
popa
mov
add
and
cmp
mov
out
mov
fadd
adcl
push
mov
mov
aad
push
jecxz
cltd
mov
out
inc
mov
mov
jb
and
mov
shlb
jmp
arpl
and
movsl
fidivs
add
fdivr
sbb
mov
stc
add
pop
add
xchg
mov
cwtl
stc
dec
mov
mov
push
mov
cltd
and
iret
popf
sub
xchg
pop
mov
adc
mov
mov
fisttpl
subb
and
sahf
in
cmpsb
repz
dec
fsubrs
mov
cld
loopne
rclb
in
daa
fnstsw
movsl
dec
lret
and
push
adc
push
movsb
bound
outsb
mov
mov
je
out
adc
mov
push
sub
push
fdivrp
push
cli
mov
das
inc
jecxz
fdivs
inc
mov
test
and
and
mov
in
mov
test
les
mov
cmp
pop
in
mov
mov
inc
lds
rolb
add
adc
andb
mov
and
sbb
xchg
sbb
out
rcrb
lcall
aad
ret
jge
andb
sbb
xchg
mov
pop
pop
imul
xchg
fidivrs
mov
aad
xor
inc
addr16
jge
arpl
push
clc
adc
arpl
lcall
push
pusha
popf
cmp
sub
cmp
mov
sbb
sahf
lds
movsl
push
mov
adc
mov
cmpsl
dec
or
push
bound
ret
pusha
and
cltd
gs
sbb
sbb
xchg
repz
aam
push
adc
and
mov
sbbl
mov
xchg
fisubs
insl
bnd
and
mov
and
cmc
arpl
push
inc
dec
push
xchg
sahf
push
xchg
mov
lds
in
xor
and
rclb
mov
std
sbb
sbb
jb
mov
and
cmpsl
xchg
mov
leave
insl
cmpsb
mov
and
sahf
add
movsl
adc
pop
popf
xor
loopne
testl
sbb
and
icebp
int3
xor
pop
lds
cld
nop
jg
sbb
add
inc
fisttps
bnd
popa
inc
cltd
lods
mov
adc
sub
incb
cmp
scas
js
das
or
pop
movsl
xchg
sbb
jmp
push
add
hlt
arpl
addb
sbb
fwait
stc
or
add
sahf
repnz
add
add
popa
pusha
jne
fcompl
and
inc
mov
pop
in
push
test
ljmp
jb
push
jge
pop
ficoms
sub
cmp
push
add
mov
and
in
enter
sbb
and
pop
mov
adc
sbb
push
ret
inc
loop
sahf
shlb
addr16
xor
inc
adc
mov
mov
adc
adc
cmp
nop
lret
adc
and
daa
js
sub
jbe
les
daa
mov
gs
mov
movb
sbb
dec
leave
lcall
andb
mov
pop
sbb
lcall
push
inc
pop
cltd
xor
mov
lcall
js
mov
cmp
xchg
in
es
add
mul
out
cmpsb
lahf
lahf
in
jg
sti
movsl
inc
adc
pop
movsb
and
pop
pop
mov
lds
inc
adc
sbb
ljmp
jnp
sbb
mov
rcrl
sbb
sbb
xorl
andl
in
inc
and
cld
cmpsb
xor
stc
adc
xor
leave
iret
xor
mov
jp
jmp
aam
sbb
xchg
jecxz
mov
inc
cmp
hlt
and
es
jmp
out
cmpsb
insl
cltd
out
pusha
movsl
dec
cmpsb
lods
lcall
out
ret
shr
sub
xchg
add
int
jle
loopne
fwait
cmp
and
mov
pushf
and
lods
pop
mov
and
lcall
pushf
or
push
and
mov
arpl
fsub
add
ds
push
jg
sbb
arpl
cld
inc
mov
outsb
pop
jb
and
sbb
loop
pop
push
pop
lahf
ficomps
mov
fcompl
clc
aas
xlat
push
movsb
repnz
adc
xchg
stc
xchg
arpl
popa
push
jnp
fidivl
andl
jbe
mov
dec
mov
push
push
movsl
in
data16
int3
in
paddb
jg
aas
orb
rorb
push
push
push
xchg
pop
test
out
out
arpl
xchg
inc
or
and
daa
fbld
push
xchg
jo
aas
ret
pop
sbb
cld
add
les
mov
fwait
in
lds
pop
or
and
enter
cmpsb
cmpsl
add
jg
ret
popa
pop
in
mov
pop
ret
dec
push
in
bound
mov
mov
mov
jno
inc
xchg
imul
pop
mov
sbb
sbb
cltd
and
xor
in
cmp
xchg
jo
cmp
adc
loop
in
add
push
mov
fisubl
pop
stos
orb
shlb
add
lea
or
push
lea
nop
add
enter
je
and
cmpsb
call
ret
lods
jg
add
add
frstor
and
fwait
push
mov
and
sbb
arpl
inc
push
and
fwait
cmp
imul
inc
sbb
inc
lods
sahf
jbe
mov
push
add
and
inc
mov
sub
push
sub
cli
js
fmulp
xchg
movsl
lds
enter
jge
aas
mov
inc
addl
inc
and
jle
mov
add
inc
lods
xor
pop
hlt
xchg
xor
push
cmc
xchg
sbb
gs
js
loope
ret
push
cmp
push
xchg
mull
and
ds
push
in
and
lcall
jg
and
es
and
pushf
pop
ret
mov
jns
xchg
mov
shlb
das
push
push
in
mov
rcrl
push
push
sbb
ret
jnp
mov
cs
ret
inc
js
imul
push
loop
cmp
movsb
add
xchg
jl
mov
fdivs
pop
mov
adc
pop
lea
add
pop
jno
bound
inc
or
repz
int
sbb
test
loop
aad
nop
jbe
pop
adc
sbb
xchg
jae
popf
ret
xor
sbb
int3
mov
inc
ret
dec
xchg
jg
ljmp
nopl
xchg
lods
ljmp
xor
stc
jge
or
pop
sbb
dec
xor
lret
inc
add
shlb
data16
je
add
jle
insl
jno
addr16
out
and
pushf
insl
clc
loopne
nop
and
and
cmp
test
mov
rcl
stos
cwtl
loopne
pop
push
ja
add
add
jmp
xchg
sub
pop
and
data16
out
pop
and
pop
orb
cmpsl
test
push
popf
jnp
cwtl
mov
inc
andl
mov
mov
std
outsb
arpl
out
mov
mov
xchg
xchg
cmpsl
mov
cmpsl
cmpsb
xor
and
test
mov
pop
or
mov
sbb
shlb
shlb
pop
das
pop
adcl
cli
arpl
jle
or
popa
lods
cltd
cwtl
fbld
sbb
movsl
das
pop
in
adc
out
add
gs
mov
add
rorl
lahf
cmp
rclb
les
andl
test
daa
and
test
insb
pop
add
push
mov
cmp
test
out
test
fnstenv
add
mov
flds
cmp
loop
inc
and
jae
shll
adc
les
push
xchg
leave
pop
push
xchg
xchg
popa
sbb
stc
add
lea
xchg
mov
aam
pop
vrcpss
out
es
mov
pop
lcall
flds
sbbb
lcall
xchg
lds
mov
movsb
les
fnstsw
sbb
and
sbb
adc
mov
mov
and
xor
and
cmpsb
imul
fistps
in
shlb
add
lcall
repnz
push
xchg
mov
jge
fsubrs
call
mov
bound
lea
sbb
xchg
mov
adc
repnz
movsb
test
negb
lcall
cmpsb
ret
fistps
pop
cmp
mov
arpl
loopne
rorb
mov
mulb
xchg
inc
loop
adc
cmpsb
and
popa
mov
cwtl
mov
push
shl
mov
or
ds
cwtl
adc
lcall
cmpsl
and
xor
clc
shl
repz
cltd
movsb
push
sahf
sbb
loopne
and
xor
popf
lods
lahf
push
and
xchg
inc
mov
pushf
in
bound
inc
mov
push
adc
cltd
xor
pusha
int3
xchg
fldl
roll
pop
lret
and
loop
and
add
hlt
es
mov
dec
lcall
js
data16
cvtps2pd
mov
push
and
lea
dec
inc
inc
cmp
and
inc
je
jns
pop
mov
inc
enter
and
sbb
and
fnsave
and
popa
dec
sbb
or
mov
imul
in
loop
pop
jp
shl
pop
pop
rcrl
cmp
aam
imul
push
sbb
sbb
sbb
sbb
popf
add
push
and
sub
enter
arpl
and
jl
dec
cwtl
nop
mov
std
les
push
cwtl
test
es
cmp
lahf
or
dec
or
mov
mov
test
aam
and
and
pushf
or
subb
jp
mov
push
bound
xchg
scas
and
and
and
sbb
jbe
push
popf
in
pop
adc
add
cmp
sbb
push
inc
pop
stos
inc
jge
aam
adc
loop
cmc
cmpsb
jb
or
and
aaa
ret
jbe
jno
fs
les
sbb
in
icebp
arpl
xor
mov
jp
cwtl
xchg
push
push
xchg
xor
lea
adc
and
out
xchg
outsl
cmc
pop
mov
call
out
and
sbb
jo
fldl
xchg
lahf
cmp
xor
insb
mulb
pop
inc
subb
xchg
movsb
popa
and
jo
jg
jne
arpl
mov
or
adc
mulb
lods
sbb
xchg
mov
adc
pop
rorb
aam
std
xchg
clc
xchg
xor
cltd
repz
xorb
dec
push
cltd
les
aad
push
lcall
ljmp
in
repz
lcall
popa
pop
xchg
scas
push
loop
arpl
lret
insl
inc
adc
cli
lcall
inc
stos
shlb
fs
dec
pop
dec
fimull
adc
inc
cltd
std
fcoml
inc
fistps
cmpsb
sub
adc
mov
in
shlb
xchg
inc
and
lahf
addb
lock
xor
sub
push
mov
stc
rorl
mov
popa
mov
jge
imul
push
mov
loopne
fsincos
mov
adc
xchg
or
or
fwait
push
push
pop
xor
stc
cwtl
xor
data16
cmpsl
jb
movsl
daa
shl
push
jns
adc
adc
pop
lcall
inc
cmpsb
fisubl
aam
in
jae
and
and
cmp
sub
lds
fistpll
das
loope
cmp
mov
push
and
xchg
pop
sbb
xor
inc
mov
mov
lcall
icebp
xchg
cs
sti
sbb
push
sbb
mov
enter
loop
xchg
dec
sbb
mov
mov
mov
add
mov
inc
mov
movsl
xchg
ljmp
inc
hlt
jb
add
sub
push
cmpsl
sbb
xlat
add
mov
sbb
mov
lret
cmp
pop
movsl
or
andl
jbe
ljmp
xchg
jbe
js
adc
adc
inc
call
cmpsw
aaa
xchg
dec
jl
andb
sahf
push
push
arpl
out
xchg
jle
shll
inc
shlb
jnp
shrb
dec
mov
and
xchg
ret
add
loop
loope
pop
in
das
jecxz
cmp
repz
sahf
movsb
outsl
into
add
inc
sbb
clc
xchg
pop
push
out
adc
or
sahf
mov
rcrb
cs
xchg
jge
lcall
mov
inc
loop
data16
push
add
fiadds
mov
fcoml
mov
repnz
mov
jl
pop
cmpsb
cmp
ret
aaa
shll
sbb
arpl
neg
mov
fxch
cmp
fcompl
push
pop
xchg
sbb
cmp
mov
pop
dec
test
mov
mov
repz
jbe
mov
jge
add
or
sti
or
in
mov
in
les
nop
push
xor
jecxz
stos
mov
lcall
mov
iret
adc
mov
push
sbb
or
lret
mov
push
mov
pop
enter
add
lcall
or
ja
or
mov
adc
xor
fwait
aas
inc
dec
addb
sub
jb
pop
mov
jb
push
or
mov
imul
outsb
test
popf
ret
mov
addb
imul
push
lods
sbb
adc
sbb
mov
lcall
inc
push
ljmp
test
cmpsl
nop
dec
cmp
jecxz
dec
push
xor
and
jns
xchg
lcall
pop
pop
pusha
dec
insb
cltd
ror
lret
xor
test
push
jle
repz
and
pop
scas
popa
fcoms
and
ret
cmp
nop
outsl
iret
push
jns
add
loop
fsubrl
and
sbb
cwtl
jae
mov
test
lcall
lds
and
movsl
and
sbb
cmp
cmpsl
cmpsl
bound
jae
test
sbb
les
mov
pushf
push
andb
mov
jmp
leave
lds
aad
sahf
scas
stc
andb
dec
xchg
lahf
lds
mov
xchg
mov
in
dec
or
sub
and
xchg
in
fsubrl
mov
add
push
bt
dec
mov
push
pop
jecxz
add
inc
mov
cmpsb
fdivp
lcall
xor
hlt
mov
insb
jg
data16
pop
mov
fdivp
push
ret
decl
mov
jp
mov
lods
sub
nop
mov
mov
std
add
sahf
jb
jmp
sti
adc
mov
in
inc
out
push
push
inc
inc
out
jp
and
inc
shlb
jnp
test
loop
andb
cli
movsb
cmpsb
gs
test
sub
pop
push
pop
in
loope
cmp
popa
ficompl
fsubl
hlt
stc
lds
inc
push
negb
pop
pop
jne
mov
ret
fwait
les
pop
and
push
mov
out
sti
cwtl
in
jmp
dec
push
cmp
outsb
mov
mov
rcll
dec
xor
jne
lahf
adc
mov
add
xchg
loope
incb
sahf
and
push
pop
aas
fucomi
scas
in
int3
sbb
cmp
push
pushf
shll
xor
out
xchg
dec
test
mov
mov
inc
xor
out
jg
xor
aad
mov
jg
push
xchg
xchg
sbb
adc
ret
mov
sahf
rcrl
jae
push
and
xor
adc
cmpsb
loopne
cmpsb
out
lahf
xchg
cmp
ss
scas
enter
out
arpl
outsl
push
add
mov
xor
mov
ja
adc
aaa
pop
mov
lods
adc
mov
and
loopne
pop
cltd
lret
cmp
out
out
xchg
stos
decb
iret
sbb
push
loope
ss
dec
jae
enter
repz
das
push
pop
push
and
in
ret
add
out
out
stos
cltd
sahf
lods
nop
mov
enter
clc
mov
dec
add
adc
push
and
movsl
and
xor
movsb
cmc
sbb
ficompl
mov
mov
lock
andl
cmp
sub
push
ret
mov
jnp
mov
dec
inc
das
hlt
ljmp
mov
mov
pop
mov
jns
xchg
ljmp
in
dec
movsl
or
and
or
mov
xchg
or
shlb
mov
adc
hlt
inc
ss
lcall
in
pop
cmpsb
enter
add
cltd
pop
shrb
adc
fwait
and
and
mov
pop
push
push
pop
add
jl
into
sub
aaa
lahf
mov
mov
ret
das
out
call
inc
push
push
add
and
and
pop
sbb
jg
lds
and
das
xor
sahf
lret
iret
cmpsb
popf
push
clc
inc
mov
and
les
mov
hlt
inc
in
inc
adc
hlt
lahf
in
push
xchg
rcr
push
inc
icebp
cmp
es
ljmp
sbb
loope
or
rcrl
push
and
cmp
add
and
mov
ljmp
repnz
scas
std
add
inc
sbb
pop
xchg
shll
adc
std
and
fwait
mov
and
aas
rol
lret
cmp
not
and
into
adc
rclb
ret
leave
inc
jp
std
gs
in
dec
pop
mov
push
or
or
mov
stos
pop
pop
lahf
outsb
jne
add
and
loop
sub
xchg
fs
sub
loop
add
dec
arpl
lds
xchg
cmc
mov
inc
and
repz
jno
jae
cmpsb
shlb
add
loopne
out
and
sbb
add
ret
mov
inc
repnz
lcall
pusha
dec
inc
pop
addb
adc
cmpsb
lds
fs
mov
and
and
jnp
and
pusha
movsb
rcrl
loop
push
inc
xchg
aam
fwait
lcall
sbbb
fisubs
rorb
lds
xor
adc
pushf
shrl
lahf
hlt
or
xor
bound
rclb
arpl
aad
lcall
inc
inc
cld
adc
fimull
jnp
nop
inc
aad
es
jle
ja
lods
mov
push
jg
insb
sbb
test
test
test
test
test
test
test
jle
add
inc
stc
push
mov
or
mov
sub
adc
lods
sahf
xchg
cmp
sub
loop
fisubs
es
nop
cmp
sbb
or
int3
pop
add
jo
mov
inc
fisttpl
ljmp
scas
cmp
aad
push
stc
repz
add
sbb
in
dec
cli
stos
jae
mov
int
loop
jmp
addb
pushf
push
in
xchg
mov
je
stos
jo
jge
arpl
mov
int3
fs
push
ds
mov
and
push
xchg
mov
in
push
and
fisttps
cltd
mov
hlt
mov
pop
pop
std
gs
daa
adcb
mov
stc
inc
cmp
mov
test
xchg
idivb
inc
cmp
cmp
or
andb
out
lcall
call
fistpll
jecxz
inc
mov
add
and
jo
in
ret
int3
out
push
in
jg
andl
stc
hlt
sbb
xchg
jbe
in
xor
es
in
mov
cmp
dec
jae
mov
xor
aas
pop
jnp
fiaddl
popf
and
aaa
add
jmp
cmpsb
aam
cmp
add
mov
std
sbb
ja
in
lcall
loope
loop
jbe
push
xchg
push
int
mov
cmpsb
jno
cmp
aas
or
inc
sbb
and
imul
sub
and
lret
xchg
push
add
pop
jecxz
pop
sbb
push
addr16
rcll
cmp
outsl
inc
mov
lcall
sbb
loope
mov
and
or
lds
loopne
and
jmp
mov
xchg
nop
in
mov
and
fs
fildl
push
roll
and
stos
cmpsb
xchg
mov
xchg
stos
lahf
je
push
or
in
stc
mov
icebp
lods
frstor
mov
xor
mov
and
add
fwait
lret
cltd
and
scas
daa
cmp
xor
popa
shrl
jge
in
sbb
rcrb
enter
xor
mov
stc
loopne
cmpsb
daa
or
sahf
or
jmp
int
dec
cmp
and
cltd
xchg
fs
ja
daa
pop
mov
clc
or
fildl
and
mov
inc
xchg
pop
insl
and
mov
or
mov
add
xchg
out
lds
or
pop
mov
push
mov
test
add
dec
xor
jno
adc
lret
push
lcall
and
lea
inc
sbb
ret
mov
es
out
insl
nop
fcmovb
push
adcl
xchg
mov
xchg
sbb
mov
add
outsl
mov
std
dec
sti
or
mov
rcr
addr16
inc
dec
out
adcb
loopne
jnp
and
jo
inc
mov
adc
or
and
pop
xorl
movsb
sahf
mov
je
sbb
jmp
and
pop
aas
lahf
mov
cmp
enter
push
xor
into
test
adc
mov
mov
mov
jb
sub
mov
cmp
push
sahf
mov
or
dec
jecxz
jbe
mov
decl
ficomps
cltd
int3
and
and
or
mov
out
es
jl
loop
cmpsb
loop
sbb
mov
and
loop
pop
inc
dec
scas
clc
lahf
mov
sub
nop
pushf
pusha
sahf
lahf
push
xor
adc
test
xchg
ja
cmpsb
icebp
mov
cmpsb
add
rol
sti
adc
out
sbb
jmp
xchg
inc
fwait
pop
lcall
pop
add
in
mov
xchg
daa
mov
cmpb
and
jg
xorb
xchg
dec
ljmp
and
imul
orb
mov
insb
add
inc
inc
popa
jbe
xchg
xchg
mov
mov
sbb
fists
push
add
in
out
and
repz
lea
mov
fsubl
cmc
movsl
push
mov
inc
das
add
and
addr16
sub
fldcw
dec
loopne
cmp
mov
lds
cmp
rorb
ljmp
cmc
rcrb
fnsave
imul
cmp
mov
addb
adc
adc
rclb
xor
imul
movsb
jecxz
and
cmp
dec
mov
pop
jmp
gs
pop
cmpl
clc
cwtl
test
pop
push
inc
xor
fisubs
js
xchg
push
iret
aaa
test
xchg
mov
sti
out
fcmove
lcall
pop
push
sub
add
pop
js
mov
and
pop
adc
pop
jns
rcrb
add
rcrb
or
and
lcall
xchg
jb
mov
cmp
fscale
pop
push
outsb
subb
out
mov
push
ficomps
push
push
push
andl
dec
adc
lret
lock
test
xchg
xchg
xchg
adc
mov
jge
and
mov
fst
mov
adc
scas
inc
sub
das
movsb
insl
stos
adc
cmpsb
add
jle
pop
imul
loope
loopne
inc
mov
xlat
loopne
bound
and
jno
mov
test
xchg
ljmp
movsb
mov
outsl
pusha
clc
and
jae
inc
pop
pushf
mov
pop
shll
pushf
inc
mov
jbe
jge
flds
lret
pop
jns
adc
shlb
and
push
ret
xchg
sbb
lret
lahf
xchg
cmp
aaa
movsl
fidivl
mov
and
repz
data16
inc
rol
lret
mov
movsl
imul
xlat
ljmp
pop
xchg
pop
in
mov
vcvtsd2ss
movsl
repnz
jecxz
addb
and
arpl
in
fsubs
mov
xchg
and
test
les
pop
adc
mov
or
and
mov
xor
cmovne
rorb
ffreep
lret
movsb
sbb
aas
int
xor
jmp
or
pop
fdivl
sbb
into
lds
fs
cltd
sub
mov
sbb
xchg
repnz
xor
es
lods
xchg
xchg
mov
mov
lahf
push
std
dec
and
cmp
xchg
cld
cmpsb
xchg
sub
jbe
pop
mov
es
add
aam
add
cmp
lret
xor
dec
lcall
adcb
in
outsb
int3
sub
cmpsb
fldenv
pop
orl
mov
pop
mov
andb
mov
andl
dec
nop
inc
xor
mov
arpl
aam
and
mov
mov
mov
mov
sbb
cmp
inc
in
cmp
out
mov
adc
push
mov
push
xchg
pop
cmpsl
gs
jmp
mov
rcrb
push
fstpt
inc
aad
lcall
push
mov
arpl
shlb
xchg
movsb
or
outsl
lret
andl
subb
mov
cmpl
mov
mov
es
xor
add
shll
push
jmp
das
xchg
pop
mov
movsb
sub
mov
jne
mov
adc
mov
pusha
das
lea
jecxz
jne
push
mov
pop
jnp
test
mov
jb
xchg
aam
xchg
movsl
in
add
sbb
sbb
enter
sahf
fstps
mov
or
xchg
loope
sbb
jmp
lcall
xor
mov
and
sbb
add
jle
cmp
popf
push
call
inc
mov
dec
adc
pushf
cwtl
cmp
mov
or
out
aad
mov
into
jne
pop
dec
mov
call
pop
mov
in
add
cmc
xchg
inc
push
pop
mov
imul
pop
push
ds
lcall
cmpsl
sub
xchg
mov
inc
fstl
xchg
call
ficompl
adc
lret
jmp
arpl
outsb
add
pop
adc
xor
shrl
adc
cmpsl
and
hlt
in
outsb
movsl
adc
push
test
add
es
mov
in
add
lds
add
ds
inc
adc
xchg
push
scas
add
and
shrl
leave
push
mov
lcall
lcall
xchg
je
or
xor
mov
mov
outsl
sti
loopne
and
cwtl
push
es
mov
inc
mov
pop
leave
pop
nop
mov
mov
jmp
call
pushf
xchg
loope
inc
pop
and
addr16
mov
cli
xlat
add
jno
cli
inc
leave
sbbl
ret
lcall
adc
fstp
mov
sbb
repz
mov
int3
outsl
pop
ret
cltd
ficompl
rorl
mov
pop
lock
in
arpl
jle
mov
lcall
mov
jmp
dec
popf
sbbb
sbb
adc
fnsave
mov
sbb
stc
pop
ljmp
cmp
mov
loop
call
xlat
or
pushf
push
mov
mov
jb
sbb
cwtl
int3
or
xor
mov
mov
and
es
pusha
loopne
les
rorb
sub
fmuls
es
add
mov
mov
aaa
lahf
xchg
arpl
enter
jb
or
push
xchg
aad
movsb
pop
cmp
cmp
lahf
xchg
and
lea
ret
sbb
loop
and
shlb
test
hlt
adc
push
push
pop
xchg
lods
cltd
or
cwtl
sar
in
shll
test
push
and
sbb
mov
jbe
pop
into
and
mov
out
ret
loop
mov
out
jg
lret
xor
mov
cltd
add
xchg
shrl
mov
push
clc
call
ficompl
sbb
flds
and
repz
enter
xchg
pop
mov
mov
fists
fs
fcmovu
out
sahf
sbb
sahf
pushf
jnp
mov
mov
ret
push
xchg
dec
data16
dec
dec
fimuls
dec
fdivr
es
mov
stc
add
mov
cmp
jno
or
cmp
sbb
cmp
or
mov
cld
arpl
add
push
in
test
sub
out
stos
jo
subb
xchg
pop
testb
jmp
dec
push
movsb
add
cmpsb
sbb
xchg
sahf
and
pop
pop
mov
fidivl
std
arpl
clc
push
arpl
fs
mov
xchg
pop
scas
xor
jl
and
pop
addb
jno
adc
xchg
mov
cmpsb
and
inc
xchg
inc
loopne
add
scas
push
mov
adc
jnp
xchg
fstpt
mov
cwtl
ss
fld
test
les
xor
dec
adc
in
sbb
pop
lcall
ja
nop
adc
xor
xchg
fwait
loope
shll
dec
in
mov
pushf
and
sbb
lcall
pop
shl
cld
fdivrs
dec
addr16
cmp
dec
rorb
stos
fidivrs
cmp
test
add
pop
loop
jg
or
outsl
mov
pop
push
mov
je
mov
cmp
or
das
push
sbb
fdivrl
dec
std
stos
fstpl
mov
les
adc
sbb
or
mov
or
pushf
jmp
add
popf
push
cmc
mov
jecxz
fwait
into
fisubl
addr16
loopne
loopne
cmp
std
jne
jb
clc
sub
cmp
sub
lcall
into
insb
jp
jp
loopne
adc
inc
pop
jp
jmp
xor
xor
stos
sub
cmc
pushf
lods
sarl
jg
filds
lcall
fwait
cmpsb
xchg
lcall
andb
jl
lahf
jmp
aad
cmp
inc
addw
push
add
lret
add
fldt
fdivl
inc
mov
xchg
iret
push
jge
mov
ficompl
pop
adc
inc
and
add
pop
std
popf
push
sbb
sahf
mov
cmpsb
pop
add
or
and
and
push
les
xchg
or
xchg
push
jg
jb
jnp
sbb
mov
push
cmp
mov
and
cmp
aam
aaa
call
jo
repnz
ljmp
lods
mov
xchg
sbb
ret
add
sti
js
jecxz
bound
fistps
mov
sub
pop
in
sub
fstp
sbb
sbb
sbb
out
xchg
mov
sbb
pop
fnsave
nop
loop
pushf
sbbb
ret
push
jns
in
and
dec
adc
xor
stos
inc
movsl
aam
js
or
outsl
mov
fistps
sahf
mov
adc
rcrb
in
push
lahf
jge
cmpsl
addr16
arpl
inc
arpl
sub
xchg
enter
out
std
pop
loope
fisttpll
movsb
cmp
jno
cmpsl
ret
jae
ret
fwait
jbe
sbb
les
bound
neg
and
fimull
bound
ret
xchg
add
jo
js
pop
mov
xchg
daa
pop
fs
add
lahf
mov
test
lods
sbb
mov
mov
sub
mov
push
pop
add
out
push
xor
aad
cli
mov
stos
inc
dec
cmp
mov
mov
mov
or
int3
movsb
test
adc
mov
dec
out
push
mov
inc
or
sbb
bound
icebp
gs
mov
mov
pop
cmp
sarb
in
cmp
mov
popa
icebp
fwait
jbe
xor
movsb
test
pop
mov
sbb
lret
add
repz
arpl
xchg
fisubl
xchg
fsubrs
sub
xchg
pop
push
pop
add
lcall
stc
push
daa
xchg
add
push
enter
mov
movsb
and
mov
mov
fsubs
lahf
out
in
xchg
inc
sbb
xchg
add
sahf
cmp
dec
lods
dec
pop
inc
pop
loop
push
sbb
loop
movsl
orl
pop
sub
jo
jmp
out
lods
cwtl
mov
in
xor
mov
in
andb
daa
inc
sbb
push
stos
fwait
out
mov
fiadds
inc
fldl
ds
mov
xlat
mov
int
xchg
push
and
jg
jns
aam
inc
add
into
addr16
and
mov
ja
push
sub
jbe
ficoml
jns
clc
mov
push
in
js
mov
add
orl
inc
dec
js
or
mov
and
and
inc
push
movsb
fdivrl
cmpsb
pop
sahf
ret
lahf
ret
mov
push
and
mov
int3
movsb
stos
rcll
cmp
mov
cld
cmp
cmpsb
push
xchg
mov
nop
imul
addr16
mov
cld
and
add
int3
jmp
ret
popf
rcll
pop
jge
xchg
and
and
pop
out
inc
and
cmp
sbb
xor
cld
or
nop
out
inc
and
mov
es
xchg
daa
mov
ret
jl
push
lds
movsl
inc
adc
cmp
movsb
jbe
mov
sahf
je
and
pop
push
ret
sahf
inc
mov
mov
jbe
arpl
and
and
inc
ficoms
pusha
push
pop
fidivs
lret
shl
add
fldt
and
inc
inc
mov
or
test
mov
inc
sti
mov
flds
inc
dec
fidivrl
sti
mov
adc
and
mov
daa
dec
inc
inc
and
mov
pop
out
jbe
dec
and
inc
push
mov
out
push
mov
sbbb
inc
or
push
cmp
pop
sbb
add
mov
je
mov
jle
mov
faddl
mov
xor
mov
inc
es
test
xchg
pusha
rorb
sarb
mov
push
iret
aaa
jl
xchg
and
loop
xor
lods
cmp
rcll
or
out
mov
mov
push
cmpsl
xchg
lahf
nop
ficoms
fsubrl
lea
push
clc
sbb
out
lahf
popa
mov
xchg
mov
sahf
cmp
xchg
mov
and
ficomps
and
pop
adc
and
fsub
pop
cmpsb
push
cltd
mov
pusha
sub
aad
adc
add
adc
nop
lcall
cmp
into
and
pop
jno
negl
xlat
es
mov
sahf
mov
es
pop
add
movq
cmpsb
sbb
test
sahf
in
push
xor
in
xor
push
sahf
fidivs
push
nop
inc
outsl
hlt
or
das
jg
mov
outsl
cmpsl
enter
popa
mov
sahf
sbb
call
lea
jo
or
pop
cltd
pop
in
add
test
mov
out
and
mov
add
arpl
xor
int3
repnz
push
arpl
inc
jmp
fsubl
cli
lds
add
jns
lds
mov
cmp
mov
lret
dec
adc
pushf
outsl
lds
push
xchg
adc
stos
mov
add
popf
xchg
adc
dec
add
adc
aad
sbbb
inc
cmp
in
data16
aas
dec
fisttps
out
push
jl
std
arpl
inc
loop
cmpb
add
and
cwtl
mov
ret
sahf
loopne
pop
add
movsl
or
out
lret
dec
mov
mov
call
jge
cmp
jmp
mov
sarb
jnp
add
out
js
aam
jo
and
add
pop
sub
pop
jmp
loop
and
push
cmpsb
test
mov
test
addr16
add
mov
adc
out
lahf
xlat
ss
loop
cmp
xchg
scas
pop
dec
scas
add
sbb
jecxz
push
inc
pop
cmc
or
mov
mov
xchg
ret
mov
lret
and
and
push
lret
push
pop
and
and
xchg
inc
push
je
push
or
adc
jbe
xchg
sbb
cwtl
lods
gs
xchg
xchg
push
mov
subl
jns
push
popa
js
fs
sbb
cmp
adc
adcl
imul
jg
mov
pushf
notl
loopne
sbb
xchg
dec
cmp
andl
push
popf
andl
jns
mov
gs
ret
rcrb
mov
cld
or
cltd
movsl
in
mov
sbbb
lcall
pop
push
jae
mull
movsl
xchg
ds
xchg
cmpsb
and
sahf
xor
lods
clc
mov
mov
test
cmp
lcall
mov
mov
fdivrs
pop
and
xchg
loop
cltd
movsl
outsl
add
mov
hlt
push
cmp
pop
movsl
out
mov
adc
or
fucompp
in
inc
in
sub
jbe
shlb
adc
mov
push
fwait
add
fidivrs
in
test
adc
fidivs
shl
add
push
test
adc
xchg
xor
pushf
mov
and
inc
push
fstpt
ds
aam
lret
lahf
lock
movsl
iret
orl
xor
out
mov
mov
mov
les
push
adc
mov
mov
sahf
daa
in
cmpsb
bound
data16
js
xchg
mov
jmp
adc
inc
cmp
jno
lods
mov
je
inc
in
test
mov
pushf
adc
fsubrp
dec
aaa
pop
arpl
lcall
jmp
shrb
lahf
shl
mov
testb
and
das
pusha
iret
aaa
fstpl
notb
popa
cltd
in
das
mov
inc
sbb
cmp
lfs
push
xchg
inc
movsl
push
jae
cmp
sbb
movsb
mov
fwait
adc
mov
mulb
les
sub
mov
mov
inc
jle
xlat
inc
mov
lahf
cmp
fcmovne
mov
inc
mov
xor
ljmp
cmovne
inc
and
inc
mov
mov
popl
daa
jge
in
mov
int3
or
pop
nop
nop
mov
mov
add
pop
pop
pop
loopne
in
js
sbb
lret
cmp
and
movsl
and
and
outsl
outsb
loope
pop
and
lahf
loope
xchg
jno
jo
loope
popf
dec
lret
sub
mov
xor
inc
push
jo
inc
imul
mov
pop
push
cmp
and
jge
cmp
iret
sub
das
andl
popl
sbb
movsb
lds
and
add
in
sbb
std
pop
push
xor
and
inc
cmpsb
inc
sti
loop
mov
icebp
xchg
push
cmp
shl
sbb
push
call
mov
ja
fwait
jae
mov
push
mov
xlat
push
push
mov
add
int3
xor
in
and
adc
scas
mov
lret
fnstsw
push
adc
daa
sbb
and
and
ret
aas
pop
mov
test
shlb
je
orb
loop
pusha
sbbb
mov
mov
add
movsl
mov
pop
out
arpl
loop
shll
stos
add
pop
clc
sbb
aam
fbld
push
fwait
mov
add
stc
cmp
mov
testl
and
ljmp
cwtl
movsl
and
mov
pop
dec
lcall
sbb
jne
lcall
push
sbb
into
ljmp
cs
mov
mov
les
das
imul
arpl
dec
dec
mov
fwait
ret
jle
mov
xor
lcall
fidivrs
xor
daa
jnp
das
pop
int3
dec
sbb
pop
nop
mov
or
into
cmp
sbbl
ret
dec
stos
or
shll
and
dec
push
aad
lds
movsb
shrl
test
das
mov
out
aam
cmpl
push
lcall
clc
outsl
loop
xchg
bound
cwtl
inc
sti
movsl
adc
xchg
fnstenv
adc
or
add
pop
and
lods
outsl
mov
dec
push
push
mov
fldcw
inc
dec
loopne
inc
push
outsl
cli
or
xor
adc
mov
mov
jns
add
icebp
jl
ret
or
mov
scas
mov
push
sbbb
popa
mov
adc
lcall
mov
pop
mov
mov
arpl
sub
or
lds
mov
sti
mov
cmpsb
jg
adc
out
enter
sbb
pop
jo
scas
add
and
push
add
loop
insb
jp
nop
arpl
mov
clc
jb
jo
xor
ret
ljmp
aaa
inc
daa
jb
lods
push
cmc
mov
lret
push
jl
sti
movsl
movsb
dec
mov
out
popf
or
xor
dec
mov
sbb
nopl
shr
or
add
add
push
movsl
rcrb
shlb
add
hlt
fwait
ret
sbb
and
adc
smsw
mov
movsl
hlt
or
and
mov
js
pop
js
or
leave
cmp
mov
mov
mov
add
popf
movsb
mov
aas
and
adc
cmpsb
lods
in
mov
add
mov
mov
sahf
push
movsl
mov
rcrl
jp
popf
shlb
repz
add
cmc
sbb
mov
out
and
ficompl
decb
sbb
mov
sahf
cltd
aad
fwait
cmpsb
ljmp
lcall
fmull
sahf
setns
negl
xchg
rcrb
ja
mul
mov
sub
pop
xor
aad
cltd
pop
sbb
lcall
mov
pop
push
jo
mov
mov
add
push
sahf
popa
inc
sub
in
inc
lds
sbb
jno
test
dec
sahf
fsubs
loop
xchg
push
jl
adc
pop
enter
mov
fidivrl
inc
sbb
mov
jae
pop
sbb
int
ja
jp
jb
mov
jmp
fdivr
jecxz
pushf
in
push
jno
push
dec
fisubl
mov
add
es
and
and
sbb
xchg
xor
adc
cltd
jb
cli
inc
leave
jbe
xchg
int3
test
cmpsl
js
cmpsl
loopne
les
stc
pop
stos
cmpsl
incl
pop
xchg
add
pop
fidivs
pop
fisubs
leave
jno
push
rcrl
lahf
mov
sbb
lcall
shlb
ja
movsb
and
jmp
aaa
xlat
and
fdivrl
imul
test
mov
hlt
jne
incl
cmp
inc
xchg
mov
sbb
inc
and
mov
mov
adc
hlt
mov
push
fnstenv
add
push
cwtl
sbb
push
mov
inc
cltd
add
add
shlb
cli
sbb
sub
mov
add
popa
subb
fldl
fucomp
dec
add
and
stc
or
sub
jb
and
add
movsl
jge
aas
in
loope,pt
mov
xor
mov
testl
push
daa
mov
cmp
loop
xchg
dec
pushf
and
inc
sub
push
psadbw
push
les
sbb
sbb
xchg
or
adc
mov
pop
add
cmp
stos
mov
adc
arpl
and
rorb
pop
es
mov
shll
jno
inc
pop
fcmove
insb
in
cld
ret
or
adc
aad
jecxz
sub
cwtl
iret
repz
je
repnz
push
pop
lds
daa
mov
push
lret
cmp
inc
sahf
dec
and
mov
pop
add
sub
mov
mov
aam
xchg
aam
jae
pop
cltd
and
or
iret
and
push
pop
or
addl
mov
mov
sub
mov
fs
mov
leave
faddp
xchg
cmpsb
cld
lcall
rcrb
ljmp
sbb
mov
lds
repz
ds
cmpsb
imul
cmp
mov
adc
in
aaa
es
aaa
and
dec
jo
and
inc
xchg
lret
sbb
xchg
test
adc
ja
outsl
cmpsl
lods
pop
xchg
pop
std
pop
dec
xor
and
pop
mov
pop
pop
loop
ret
lret
mov
and
jmp
adcb
mov
stc
or
mul
and
cmc
pop
cwtl
stos
cld
sbb
sbb
push
test
push
mov
ret
sbb
imul
gs
mov
in
push
mov
xorb
in
xchg
lahf
inc
pop
push
cld
shlb
ret
xchg
xchg
jbe
xor
popl
jmp
negl
jb
and
ret
xor
mov
cmpsb
cmp
loop
int
mov
ret
pop
dec
je
xchg
mov
test
and
sbb
cli
test
mov
test
loopne
mov
xchg
jge
dec
mov
xorl
adc
aad
stc
les
hlt
enter
cltd
std
inc
bound
shll
cmpsl
cmp
movsb
cwtl
les
and
jg
add
xchg
fstpl
fadd
cli
js
cmp
mov
leave
push
mov
loope
dec
shll
inc
repz
sarl
and
stos
mov
push
aad
sbbb
cmp
xchg
mov
xchg
test
arpl
inc
add
push
inc
sahf
test
sbb
and
push
mov
cmp
es
sbb
pushf
push
add
into
jle
in
xor
ret
cmpsl
fwait
mov
sti
js
out
loopne
adc
mov
push
jns
lret
fs
push
sbb
pushf
jb
xor
or
shlb
in
add
mov
pushf
out
xchg
push
popa
rcrb
xor
or
sahf
ss
fsubrs
push
and
mov
push
nop
mov
jb
jbe
xlat
stc
jmp
inc
or
jbe
sbb
xchg
push
jle
sahf
ficomps
sbb
dec
hlt
sti
cltd
adc
add
push
sahf
jg
rorb
pop
lahf
cmp
fidivrs
sbb
cltd
es
sbb
sbb
js
sub
fildll
ret
mov
push
movsb
and
push
dec
mov
fdivrs
inc
je
pusha
jo
cmc
in
imul
fwait
push
inc
cmp
ljmp
push
push
cmc
sbb
push
push
add
push
mov
imul
add
inc
mov
pop
andb
rolb
mov
adc
dec
incl
ss
arpl
mov
pop
and
dec
add
out
adc
in
pop
call
mov
adc
jl
xchg
mov
frstor
test
inc
cltd
lods
pop
and
lcall
mov
push
fs
pushf
cmpsl
add
ja
mov
popf
test
fnstcw
mov
data16
push
sbb
inc
push
jge
cwtl
pop
pop
jl
mov
xchg
fisubs
xchg
in
imul
inc
mov
cltd
mov
scas
lods
xchg
insl
popa
sbb
jns
sub
or
cmpsb
ja
dec
out
push
mov
lods
cmp
out
test
and
popl
adc
and
or
or
push
sub
les
pop
pop
loope
in
mov
add
hlt
lcall
repz
push
lahf
mov
push
push
mov
pushf
ret
fisttpll
pop
iret
jne
movsl
js
mov
cwtl
add
sbb
cmp
sub
mov
sbb
movsb
pop
add
testl
xchg
aad
pop
aad
xor
stos
add
push
add
hlt
or
xor
pop
shll
push
das
xor
push
push
xchg
out
in
call
fists
pop
dec
lds
mov
movsb
xchg
outsl
lods
mov
push
or
movsb
xchg
es
jp
sahf
cmpsb
popf
mov
jle
into
insb
test
add
js
cmp
pop
mov
adc
sbb
call
mov
lcall
cmc
sbb
and
and
mov
sub
arpl
pop
and
out
jle
add
mov
or
mov
xor
xor
and
push
mov
sbb
adc
pop
push
pop
mov
xchg
or
in
bound
pop
xchg
xchg
and
cmp
mov
je
test
push
shll
pop
cmp
sti
arpl
cwtl
sub
sub
push
sub
xor
orl
and
xchg
ljmp
fsubl
ret
and
lret
cmc
mov
jb
mov
ficompl
sub
mov
pop
add
jno
cltd
popa
jno
cltd
lret
movsb
mov
rcr
and
and
add
arpl
in
mov
ja
lods
or
test
loop
in
and
dec
mov
or
pushw
shl
insb
and
push
out
sub
pushf
lods
cmp
pushf
cmp
or
test
movsb
fsubrs
mov
cmp
out
ret
stc
push
aam
push
mov
xor
imul
push
imul
andb
pop
mov
lret
or
and
shrl
and
stos
add
pushf
xchg
adc
outsl
je
pop
movsb
loopne
xor
mov
and
inc
dec
inc
cmpsb
cmpsb
mov
fcomi
add
mov
dec
mov
fisubrs
add
inc
leave
jecxz
add
push
jnp
xchg
push
sbb
dec
push
stc
pop
cmp
pop
pop
rorb
add
xchg
xor
imulb
imul
fwait
pop
sbb
ljmp
test
in
adc
roll
icebp
scas
dec
cmp
mov
iret
jecxz
cmc
movsb
pop
sbb
mov
mov
sbb
mov
fwait
xlat
mov
clc
pushf
lcall
push
pop
fstl
cmp
sti
add
pop
sbb
sub
rcrb
idiv
push
inc
lahf
pop
mov
in
ret
xor
aam
sbb
fisubs
add
out
jno
in
xor
sbb
pop
aam
mov
arpl
mov
jae
faddl
inc
push
push
mov
fcmovne
push
mov
cmp
jne
cmp
and
push
mov
xor
jnp
cli
cld
pop
fisubl
adc
adc
xlat
add
cmp
stos
adc
std
cmp
enter
jne
in
cmp
mov
cs
cmpsb
or
and
sbb
sub
clc
sahf
popa
dec
pop
inc
outsb
lahf
dec
jae
test
loope
ljmp
jecxz
les
jle
ret
push
popf
lcall
in
xor
add
mov
cmpsb
add
outsb
lods
push
sbb
pop
test
or
lret
sahf
fwait
std
sbb
test
icebp
push
int
push
add
mov
mov
scas
cltd
push
sbb
lea
mov
inc
adc
cmp
into
mov
xchg
xor
xor
test
imul
bound
inc
movsb
adc
pop
in
lods
sbb
cmc
lds
lcall
cmp
pop
mov
dec
add
aaa
iret
xchg
test
repz
fs
adc
ja
mov
mul
popa
xor
mov
jl
lds
stos
ja
jns
nop
jecxz
arpl
or
push
cmp
xchg
cmp
mulb
cwtl
mov
orl
mov
sbb
ror
xor
pop
and
stc
mov
mov
pop
mov
mov
nop
mov
sbb
xchg
mov
xchg
jb
mov
mov
in
mov
sti
mov
push
lea
outsb
mull
pop
sbb
and
cmpsb
cmp
mov
sbb
mov
dec
xor
or
fsubl
and
movsl
add
mov
shll
lcall
rcrl
aad
idivb
lahf
push
and
shlb
xor
or
pushf
mov
add
cmp
pusha
das
orl
fisttps
lret
jnp
cwtl
and
inc
mov
xchg
int3
inc
sbb
mov
je
mov
test
adc
mov
pop
pop
in
pusha
fbld
test
inc
imul
mov
movsl
out
lahf
mov
in
and
movsb
in
cmpsl
and
add
stos
or
and
mov
ret
xchg
and
xchg
sbb
add
adcb
adc
and
cmp
or
jne
mov
mov
imul
push
add
arpl
fmulp
idivb
cmpsl
fldt
and
sub
push
and
cmc
nop
rclb
popa
pop
push
lcall
pop
in
test
jg
pop
xchg
add
out
pusha
mov
aas
pop
xchg
pop
daa
bound
or
push
andb
faddl
cltd
pusha
in
in
or
push
sbb
ss
fdivrs
bound
das
fisubrl
push
or
adc
lahf
sti
sti
in
adcl
xchg
pop
xor
mov
sbb
and
roll
mov
lcall
popa
push
mov
cltd
cwtl
mov
mov
lods
daa
rcrl
xchg
and
and
hlt
xchg
loop
xor
rdmsr
dec
mov
xchg
mov
mov
ret
cmp
push
ffree
jmp
xlat
in
jp
ljmp
pop
pop
subb
roll
mov
and
fwait
pop
pop
sub
cmp
fistl
fdivs
or
jno
xor
pop
cmpsl
lret
sub
pop
push
daa
xchg
movsb
rolb
mov
in
xlat
xchg
xchg
movsb
cwtl
inc
push
xor
mov
lds
xlat
or
fisttpl
int
sub
xchg
push
popf
push
cmp
mov
les
sbb
mov
lahf
loopne
lret
hlt
pop
mov
fwait
or
fucomp
mov
sub
jmp
and
aas
outsl
cld
jno
mov
and
cmp
test
mov
xor
pushf
xor
sub
or
inc
lea
pushf
adc
sbb
jmp
ds
movsl
lcall
pop
mov
ja
js
fs
icebp
mov
dec
aas
push
and
push
or
icebp
in
movsb
lret
cmp
push
ja
fs
ss
sub
movsl
in
repnz
and
in
mov
sub
push
arpl
mov
mov
xchg
es
ficoms
arpl
pop
and
inc
fisttps
dec
inc
cmc
or
cld
inc
ss
movsl
fldl
add
cltd
cmc
sbb
add
sbb
cmpsl
lods
aas
pushf
mov
inc
or
das
mov
out
push
jnp
hlt
ret
add
xor
ficompl
xchg
gs
ss
and
mov
lods
mov
cmp
jmp
cmp
push
data16
sub
loop
mov
xor
sbb
mov
std
and
sbb
and
sbb
xchg
leave
rcll
loop
shl
sbb
sbb
sbb
add
or
cmpsb
int3
adc
imul
cmpsl
add
jp
loope
enter
jbe
imul
jecxz
jge
cmp
fbstp
and
xchg
pop
xchg
negb
clc
mov
loop
mov
sub
mov
cmp
add
dec
fisttps
or
orl
movsl
inc
ljmp
addr16
lahf
sbb
aad
sbb
decl
jb
arpl
int
sbb
mov
cli
lcall
push
fucom
jae
repz
bound
aaa
add
lods
inc
js
push
outsb
add
shlb
inc
push
loop
mov
jecxz
jbe
inc
fiaddl
sbb
sbb
cs
add
add
sbb
lret
sub
push
fldt
and
sbb
adc
cltd
aam
pop
sub
cmpsl
mov
and
push
aam
push
jns
daa
test
xchg
xor
and
pop
fisubs
jno
loop
ja
loop
adc
mov
inc
adc
es
cld
cmp
insb
gs
rcrl
in
cltd
aaa
lret
stc
imul
push
or
frstor
sbb
jle
repnz
loop
and
mov
fnstsw
xchg
ss
jmp
inc
mov
push
mov
orb
dec
ljmp
pop
or
mov
mov
nop
js
xor
popf
out
out
aaa
les
call
push
fmuls
les
push
mov
pop
sub
push
fs
xchg
xor
movsl
aaa
dec
addr16
in
je
dec
in
pop
add
inc
addr16
inc
es
xchg
pop
push
std
negb
push
cmp
arpl
xor
cmp
pop
rorl
dec
xchg
daa
sub
pop
stos
mov
xchg
xchg
xor
push
add
add
push
and
inc
cmp
sbbb
fimuls
xchg
add
lret
pop
fwait
in
int
pop
inc
test
cmpsb
frstor
xchg
in
mov
sahf
pop
xchg
push
inc
mov
and
pop
shll
popa
or
sti
inc
shlb
jb
aam
es
mov
das
movsb
ss
adc
push
add
cmp
mov
lods
and
js
addr16
fs
je
and
dec
loope
das
cltd
mov
sbb
and
inc
repnz
pop
adc
push
addb
lahf
movsl
pop
popf
and
aam
add
clc
or
out
and
sbb
mov
test
test
add
xchg
notb
mov
mov
movsb
sarb
pop
or
or
xor
mov
sbb
into
pushf
sub
xchg
mov
mov
das
jns
adc
sbb
or
xor
adc
dec
adc
in
subl
fs
sub
pop
dec
out
xchg
cli
or
fs
lcall
jo
mov
mov
xchg
sbb
lcall
bound
add
fimuls
sub
mov
xor
hlt
es
push
jae
shrl
mov
movsl
flds
lahf
add
and
and
cmpsb
les
sahf
push
adc
xorl
xchg
addr16
jb
rcrl
and
sahf
sub
je
mov
movsb
pop
xor
aas
movsl
dec
mov
int
xchg
add
or
lods
sahf
mov
sbb
adcl
or
repz
mov
loop
or
or
arpl
mov
movsb
jle
popa
jne
xchg
mov
mov
repnz
rclb
rep
dec
icebp
push
test
data16
in
sub
je
inc
repnz
and
popf
inc
add
addr16
cltd
bound
outsb
jge
and
jnp
es
inc
stos
lret
ror
jnp
ljmp
inc
mov
andb
ljmp
jb
adc
fucomip
out
int
test
and
push
push
lcall
negl
push
mov
in
lahf
es
es
test
and
push
and
ljmp
pushf
sub
or
cmp
roll
and
out
add
fs
into
cmp
mov
add
sbb
sbb
lahf
out
mov
in
mov
rcll
andb
adc
cmpsb
and
push
cmp
mov
add
sbb
and
out
sbb
pushf
adc
fadd
scas
aad
push
cltd
and
shll
jno
sub
jecxz
push
cltd
lcall
mov
shll
data16
or
mov
insl
fwait
inc
jno
adc
outsb
in
fdivrl
push
shrl
js
arpl
add
arpl
fwait
xor
dec
xchg
fadds
lahf
vcvtps2dq
sbb
push
and
gs
mov
test
add
sbb
inc
les
lock
out
cmp
xchg
mov
mov
dec
lcall
and
push
mov
xor
mov
pop
jnp
stos
sub
xor
xchg
test
test
sti
outsl
stos
sbb
jns
out
xor
arpl
out
push
push
out
jmp
mov
ss
sahf
cmpsb
ja
adc
pop
push
add
iret
clts
stos
and
push
incb
dec
and
fsubp
push
movb
movsb
cmp
sbb
movsl
xchg
mov
mov
add
lods
mov
add
sub
cwtl
fimull
fcompl
movsb
data16
and
fbld
mov
xchg
push
cltd
cmp
push
imul
out
mov
fldt
and
and
shrb
roll
mov
mov
jnp
push
cmp
and
add
jbe
mov
popa
push
inc
cld
and
add
sahf
inc
and
hlt
stos
sbbb
test
mov
sahf
pop
sbb
adc
xor
inc
or
or
xorl
or
jle
test
xlat
shrb
hlt
cmp
fisubrs
push
popa
inc
fcomps
in
dec
lods
aaa
mov
in
sbb
jnp
jle
sub
dec
add
sbb
adc
ja
or
jle
and
add
rol
xor
lcall
xchg
cmpb
dec
push
jge
lds
mov
add
mov
rolb
lcall
out
pop
fcoml
mov
mov
test
addl
or
sbb
sub
out
cmp
stos
cmpl
sub
xchg
sbb
es
add
jmp
fdivr
sub
in
movsl
add
ss
mov
inc
add
popf
mov
cmpsb
shlb
sub
or
mov
push
sahf
stc
fwait
push
loop
push
movsl
std
inc
pop
repz
pushf
mov
push
in
inc
pop
pushf
add
push
push
test
ret
in
mov
adc
mov
aam
mov
int
fstl
pop
movsl
push
ss
loop
incb
es
mov
adc
jo
sbb
cmpsb
xor
add
mov
and
and
sbb
loopne
icebp
or
mov
test
and
in
or
xchg
mov
push
outsb
adc
rcrl
lcall
or
int
aaa
lds
imul
sub
rcrb
or
in
shrl
inc
insl
inc
mov
fisubs
stos
push
subl
jl
add
scas
std
push
into
inc
js
cmpl
addl
or
cmp
mov
mov
push
mov
sahf
stc
sbbl
lea
jnp
lahf
dec
sbb
sti
hlt
pop
jg
mov
sbb
and
jae
push
loopne
add
pop
mov
aad
xchg
push
repz
in
repz
mov
das
sahf
mov
dec
jne
sub
push
pop
jno
cmp
xchg
adc
xchg
dec
outsb
push
and
mov
push
popf
ss
dec
lret
sahf
mov
xchg
push
xor
push
push
movsl
fiadds
es
cmp
aam
and
push
sbbb
out
enter
sub
fistps
cmpl
jb
and
jnp
cmc
mov
fsub
add
test
inc
xor
push
lcall
loop
outsl
in
xchg
mov
outsb
cwtl
iret
sbb
sbb
fincstp
sbbb
fnstsw
movsb
test
push
xchg
popa
es
aad
ret
push
mov
inc
ljmp
in
sbb
cmpl
pop
mov
add
lods
mov
cmc
cmp
jae
mov
sbb
dec
movsl
inc
movsb
testb
sbb
sti
out
dec
int3
jecxz
bound
cli
or
sti
and
fdivs
push
dec
jp
stos
cmpsl
in
and
add
out
and
jae
and
and
xchg
out
jge
fisttpl
and
pop
fbld
popa
inc
inc
pop
lcall
cmovne
outsl
fmull
cli
lcall
xchg
gs
adc
je
adc
sub
les
bound
inc
or
ret
sbb
mov
gs
pop
dec
into
xchg
xchg
test
jae
pop
bnd
imul
movsb
jge
mov
stc
hlt
ret
push
and
sbb
jecxz
xchg
ja
pop
or
mov
enter
cmp
test
adc
lods
xchg
push
aaa
mov
sbb
pushf
popa
jmp
sbb
push
dec
test
jp
xchg
jbe
hlt
lds
cli
dec
arpl
pop
fldl
inc
adc
nop
xchg
fcoms
mov
and
adc
mov
out
call
push
add
bnd
cmpsl
orl
sbb
xchg
jmp
cltd
jg
cmp
lods
and
xchg
cmc
sahf
pushf
and
xor
int3
inc
pop
bound
adc
imul
outsb
inc
inc
xchg
mov
inc
out
mov
idiv
mov
shrl
into
mov
cmp
jecxz
sbb
inc
shlb
xor
push
pop
loop
jp
into
add
jns
add
in
cmp
xchg
insl
cld
aaa
xor
xor
mov
lea
loope
notb
push
outsb
fs
pushf
imul
dec
orb
cmp
mov
xor
icebp
xor
jge
mov
pop
jl
mov
xchg
daa
fcompl
add
sub
rcrl
lock
push
lcall
xchg
push
ds
arpl
xor
push
mov
pop
cwtl
xchg
mov
push
sbb
in
rcrb
es
jb
mov
mov
push
push
xchg
stc
push
mov
aam
mov
adc
fwait
push
ds
inc
xchg
adc
pop
std
fwait
mov
pop
sbbl
fldt
xor
out
sbb
mov
jbe
add
in
adc
xor
test
loopne
test
mov
enter
in
in
add
add
adc
fidivrs
rolb
lcall
adc
fisubrs
in
sbbl
pusha
push
inc
pushf
mov
and
loopne
test
mov
jge
bnd
pop
loopne
test
mov
ja
cmpsl
sti
mov
pop
mov
xor
pop
inc
outsl
mov
mov
mov
or
add
popl
popa
adc
cmpsb
pop
lcall
fisubl
adc
xchg
sarb
rorl
adc
jns
fwait
loopne
test
inc
jle
hlt
sahf
add
ret
jge
and
mov
cmpsb
adc
dec
push
pop
mov
movsl
pop
decb
ret
bound
push
cltd
cmpsl
mov
push
sbb
mov
xor
push
mul
mov
test
and
pop
xchg
out
mov
out
mov
popa
test
je
popa
decb
sarl
mov
dec
sbb
mov
fbld
stos
dec
add
shll
cltd
int
stc
push
daa
pop
xor
push
mov
xor
jl
cmpsl
ret
negb
mov
ja
int3
fwait
cmpsb
mov
sahf
dec
je
push
mov
shl
cltd
mov
jnp
adc
lahf
pop
loop
cwtl
add
and
mov
movsl
xor
xchg
nop
push
or
mov
lret
xchg
orb
rcrb
sbb
jo
dec
jp
or
lahf
idivl
jle
xchg
aam
sbb
sbb
out
mov
iret
out
mov
mov
and
cmp
add
jmp
sub
mov
test
mov
fiadds
out
mov
and
fimuls
mov
xchg
loop
mov
mov
cmp
popa
xor
sahf
cltd
rcll
lcall
push
movsl
icebp
jne
out
add
hlt
rcl
in
mov
movb
and
pushf
popa
fadds
mov
add
cmp
or
das
and
in
data16
lock
inc
push
mov
add
mov
dec
adc
mov
cld
xchg
push
test
fwait
xor
js
orl
sub
aam
in
inc
mov
push
sbb
and
popa
add
jno
dec
and
clc
addr16
and
mov
lret
test
jnp
lahf
pop
mov
popf
mov
adcl
push
popl
dec
add
ds
ret
mov
mov
xor
sar
sbb
push
sbb
sbb
mov
sahf
cwtl
push
ret
ds
mov
out
dec
nop
aas
push
xor
push
inc
loop
out
out
ret
sub
pushf
inc
in
sbb
clc
adc
push
lcall
xchg
inc
lods
out
cltd
gs
cwtl
jns
push
fwait
mov
cmp
add
mov
fidivs
sub
or
lcall
mov
cld
push
loope
jecxz
mov
cli
sbb
cmpb
sbb
iret
mov
or
mov
push
push
push
and
xchg
arpl
pop
xchg
xor
cwtl
test
xchg
mov
cltd
jno
cltd
pop
mov
cltd
sbb
xchg
lds
add
fsubl
aas
adc
stos
movsl
test
stos
mov
rcrb
gs
push
pop
jbe
mov
sbb
scas
ficoml
pop
hlt
dec
arpl
repz
rclb
fiadds
and
shlb
out
ret
fnstsw
push
adc
mov
nop
jmp
adc
outsl
mov
and
pop
dec
lcall
frstor
lahf
popa
lods
cmpsb
pop
sbb
in
in
push
sub
cld
pop
scas
enter
pop
pushf
jo
and
fldcw
lcall
mov
inc
mov
push
lock
pop
scas
insb
mov
xchg
push
packuswb
and
ja
das
sti
xchg
and
sub
addb
mov
jb
xor
js
jns
cbtw
mov
in
and
pop
and
sbb
push
sahf
and
and
or
pop
push
inc
mov
mov
loop
mov
das
inc
push
jecxz
mov
adc
push
nop
dec
or
mov
jns
pop
xchg
push
iret
lcall
scas
andb
loopne
cmpsb
outsb
mov
push
aas
and
gs
cltd
loop
cld
popa
jle
mov
fwait
add
push
roll
push
inc
loope
or
adc
loop
adc
sbb
scas
push
cmpsb
pop
fiadds
push
enter
push
lret
test
test
inc
dec
sbb
xorb
popw
pop
and
lcall
popl
in
test
push
orl
xor
dec
ja
cli
push
fwait
lods
nop
leave
imul
sbb
push
mov
mov
dec
and
leave
daa
andl
push
cmc
adc
push
bound
add
and
add
pop
xchg
pop
pop
and
popa
sub
sub
outsl
je
loop
cltd
push
pop
and
cmpsl
out
dec
pusha
add
cmp
sub
stos
mov
out
loope
sbbb
test
mov
pop
les
and
inc
mov
add
adc
dec
scas
jno
add
shlb
mov
andl
ljmp
mov
cmp
mov
insb
add
aas
push
mov
mov
shlb
shlb
movsb
aas
cmpl
sub
les
bound
add
test
xor
mov
ret
movsl
ja
pop
pop
push
ret
gs
jo
xor
sbb
xor
imul
mov
xchg
inc
daa
lahf
je
adc
cmp
fs
testb
aam
test
cmp
mov
jbe
lcall
fidivrs
xchg
js
leave
loopne
and
decl
add
lods
int3
popf
push
pushf
cmpsb
xor
push
cltd
fcomps
pop
push
push
jns
fists
push
loopne
and
notl
sahf
cltd
mov
pusha
jle
push
jle
and
adcb
enter
and
mov
mov
sbb
lret
cmpsl
sub
addr16
sub
gs
mov
pop
nop
add
outsb
push
loopne
xchg
ja
inc
test
cltd
fsts
lcall
xchg
jp
and
mov
xchg
mov
mov
and
dec
ret
cmp
pop
icebp
movsb
repz
out
testl
adc
push
xchg
push
dec
lret
sbb
push
pop
orb
sahf
nop
xchg
cmc
xchg
inc
push
pop
frstor
add
mov
inc
mov
and
fs
push
arpl
jp
movsb
out
sbb
call
std
sbb
mov
lea
sub
inc
pushf
xchg
mov
lods
push
inc
mov
ds
jge
ret
xor
or
mov
stos
aas
mov
inc
sbb
sub
frstor
in
imul
es
sbb
fs
pop
popf
pop
sahf
lock
popf
ljmp
mov
pop
in
es
cmp
pop
ja
loopne
add
mov
mov
jp
adcl
adc
aas
dec
mov
ffree
xchg
fbstp
ljmp
lds
and
push
popf
in
mov
aas
addb
and
lds
push
movsl
arpl
push
and
ds
lahf
push
mov
cmpsb
clc
pushf
in
iret
cmp
push
mov
sub
fsubl
jl
test
sbb
popa
aas
icebp
or
and
out
pop
jge
sub
cmp
pop
filds
sahf
cmp
loopne
inc
fwait
movsb
and
ffree
int3
adc
arpl
push
insb
inc
jns
rorb
jnp
int
es
sbb
adc
mov
fisubrs
mov
mov
js
mov
enter
loop
cmp
shl
movsl
iret
jle
test
mov
loop,pt
stos
and
pop
ret
push
xor
dec
or
std
jbe
cwtl
cmp
mov
pop
loop
out
movsb
dec
mul
inc
mov
scas
sbb
arpl
in
mov
push
int
dec
mov
sbb
cmpsb
cli
fisubl
push
cltd
mov
and
mov
rcl
and
mov
repnz
mov
mov
mov
ret
mov
mov
mov
xchg
lods
dec
mov
push
fmull
xor
in
mov
add
xor
pushl
es
xchg
es
pop
and
and
scas
sbb
lret
lock
ret
gs
insl
enter
jle
xchg
fwait
les
or
loope
cmpsb
in
mov
mov
loop
outsl
xchg
sub
lahf
fisubs
jmp
pop
and
sub
xlat
cmp
mov
sub
mov
jg
mov
sahf
and
test
int3
xchg
and
shll
pushf
dec
fistpll
add
push
icebp
and
xlat
movsb
push
pop
xor
jg
and
mov
pushf
sbb
dec
cmpsb
and
insl
lea
and
cwtd
cmc
sbb
cli
daa
dec
push
test
outsb
fidivl
cs
loopne
add
loopne
mov
sub
outsb
xchg
jle
sub
mov
mov
push
lcall
cld
mov
push
fsubl
push
mov
cmpl
adc
add
cld
outsl
adc
mov
int
ss
repz
add
mov
addl
sbb
add
jbe
mov
mov
shlb
dec
lret
push
adc
lret
nop
mov
repz
ret
mov
sbbl
push
pop
mov
roll
fcoml
push
sbb
mov
cli
icebp
out
fnsave
aad
push
movsb
incb
out
ret
sbb
push
adcl
pop
dec
cmp
push
mov
cmpsb
sbb
mov
pop
inc
xor
fs
and
scas
aas
and
dec
or
sahf
mov
sub
cwtl
lahf
in
dec
ficoml
inc
sbb
divl
fdivl
pop
adc
aad
inc
mov
inc
pop
outsb
xor
inc
sub
lds
addr16
cltd
mov
mov
xchg
xor
cli
mov
das
rcll
push
sbb
and
cltd
cmp
mov
lds
fisttps
loop
test
leave
jae
enter
fiadds
dec
jmp
aas
push
inc
inc
mov
add
rorb
cmp
dec
lock
lcall
fdivrp
sahf
icebp
mul
std
dec
mov
adcl
out
aaa
pop
pop
cmpsl
mov
sub
pop
or
es
in
fisubs
repnz
mov
cltd
fdivr
addl
push
in
movsb
pop
xchg
inc
fadds
pop
outsl
add
and
popf
pop
lahf
add
cld
push
xchg
fdivl
mov
gs
movsb
inc
mov
sbb
mulb
aas
mov
pop
adc
enter
sbb
mov
subb
fiaddl
movb
mov
cmc
push
negl
clc
movsb
or
inc
loop
clc
imul
in
jbe
es
out
inc
in
fwait
imul
shlb
jno
int3
mov
mov
idivl
and
pop
and
cmpsl
les
lcall
lock
mov
cmp
addl
pusha
pop
das
adc
jns
jl
adc
ss
daa
jbe
shll
xlat
cmpsb
in
fsubrp
aam
adc
mov
leave
xor
adc
mov
mov
aaa
lcall
outsl
lcall
aaa
ja
adc
sahf
adc
in
rcrl
xchg
mov
aaa
movsb
push
bound
add
inc
fisttps
xchg
xchg
or
xchg
add
and
add
mov
popf
ret
mov
stos
dec
int3
jns
push
pop
outsl
fisubs
cmp
loope
stos
cmp
int
mov
push
ds
fsubp
add
loop,pn
mov
mov
dec
add
jmp
addr16
rcll
push
push
mov
xor
jmp
sbb
mov
and
inc
lds
ficompl
sub
mov
in
es
jno
mov
in
push
das
les
dec
ja
mov
xor
mov
push
shlb
add
pop
rcrl
push
pop
cmpsb
fsubp
and
ja
xchg
push
push
add
faddp
hlt
mov
dec
mov
aad
add
in
fistps
mov
icebp
adcl
mov
xchg
dec
xor
sbb
push
das
in
xor
movsl
in
mov
mov
in
mov
cmpsb
sbb
ds
sbb
add
popf
mov
jo
mov
sbbb
cltd
mov
test
xchg
popa
loop
dec
cld
add
insb
mov
les
jl
popa
pop
xchg
add
mov
icebp
movsl
mov
or
arpl
popa
sub
dec
jbe
xbegin
jge
ljmp
cmp
add
je
dec
test
ficomps
scas
bound
push
pop
cmp
ljmp
arpl
mov
out
les
add
sub
scas
movsb
int
addr16
pop
test
gs
and
icebp
jp
fs
mov
jmp
lret
stc
aad
aas
stos
and
in
les
pop
dec
xchg
xchg
adc
sub
out
decb
js
cmpsb
int3
ja
sbb
sub
pop
lcall
imul
andb
movsb
ret
dec
jge
and
sub
es
pop
dec
mov
lahf
cmp
or
arpl
out
negl
sahf
lods
sub
rcll
mov
stc
lahf
and
addl
mov
aas
icebp
pushf
outsb
pushf
cli
fwait
ret
inc
mov
insl
dec
add
and
outsb
or
sbb
sbb
rcrb
mov
inc
adc
add
out
lcall
ficomps
mov
loopne
gs
popa
sbbb
in
lcall
frstor
mov
inc
loopne
and
cs
add
xchg
fdiv
arpl
mov
imul
xchg
ret
sub
mov
pop
inc
movb
ds
mov
and
je
shll
pushf
fcompl
jecxz
popa
add
xor
sahf
test
adc
xor
jb
xchg
sbb
lods
sbb
outsl
and
xchg
mov
and
lods
xchg
jno
pop
pop
sbb
rcrl
mull
xor
sbb
sahf
popa
add
std
xchg
notb
xchg
jo
dec
inc
imul
aad
push
lahf
sahf
data16
inc
test
mov
cmp
jne
popfw
loope
jbe
fcomip
enter
push
mov
leave
in
dec
fdivs
out
nop
inc
lds
lcall
lcall
pop
mov
fiadds
cmp
mov
sahf
fcoml
sarb
and
mov
mov
gs
insb
mov
fistps
dec
push
fwait
in
stos
test
mov
in
sub
ret
push
rcrl
cmc
and
sbb
push
pop
lcall
fstps
lcall
ds
pop
fidivrs
push
pop
cltd
outsb
push
sbb
sub
shlb
rcl
imul
sub
xchg
mov
sahf
in
test
xor
adc
pop
xor
stc
cmp
lret
lahf
dec
add
pop
sbb
sub
jmp
and
rorl
lahf
in
aad
fidivrl
dec
lock
xor
adc
push
inc
insb
dec
adc
jbe
lds
movsb
mov
mov
mov
jmp
pop
fsub
test
push
subl
xchg
add
lahf
inc
andl
test
rdmsr
cmp
es
popf
sar
inc
cmp
data16
add
repz
mov
loop
xor
cs
and
pop
pop
mov
and
jp
jmp
xchg
popf
es
mov
pushf
fstpl
push
mov
mov
push
or
mov
ss
xchg
loopne
and
and
sub
pop
inc
mov
push
mov
jp
out
push
mov
loopne
lea
or
outsl
lods
push
and
mov
jb
sbb
mov
movsb
lods
pop
cli
sub
loop
mov
pop
add
adc
inc
inc
cmpsb
mov
sub
les
mov
imul
leave
xor
insl
inc
mov
pop
xor
inc
push
dec
mov
les
fxch
add
into
sub
movsl
dec
xor
in
dec
fsubp
pop
loope
frstor
cld
outsb
lods
mov
xlat
sub
add
mov
cmp
gs
pop
adc
add
pop
das
lds
jmp
repnz
std
jmp
adc
or
pop
cli
mov
sub
incl
ljmp
inc
push
out
mov
xchg
in
jnp
jmp
scas
jmp
mov
in
bound
adc
rolb
jae
imul
cwtl
fcoms
sbb
sar
imul
xchg
repnz
or
nop
stos
xchg
jno
xchg
xchg
mov
stos
push
movsl
pop
cmp
mov
fisubl
pushf
insb
test
out
or
test
push
das
fiadds
add
mov
negb
ret
dec
int
inc
fistpl
mov
pushf
fisubl
sbb
add
xor
sbb
leave
xchg
dec
ljmp
test
enter
jne
lcall
sbb
mov
addr16
xchg
sarl
adc
or
repz
popa
std
idivb
add
aam
cs
in
pop
rol
sbb
adc
sahf
rorl
and
adc
mov
sti
mov
push
cmpsl
daa
jge
aad
xchg
push
adc
dec
pop
shll
mov
dec
sbb
orl
and
mov
mov
cmpl
pop
fsubp
cwtl
shl
mov
fwait
xrelease
jae
mov
aad
dec
clc
movsb
test
adc
xchg
push
push
fmull
push
in
in
das
fldenv
push
clc
and
fcompl
ja
hlt
test
jno
xchg
mov
cmp
adc
fwait
out
cmp
mov
push
test
cmc
lcall
adc
adc
jmp
fiaddl
sbbb
mov
aam
pop
into
popa
je
repnz
into
loope
mov
mov
dec
add
sub
push
xor
ret
loope
sbb
fidivrl
mov
out
addb
fwait
xchg
add
repnz
push
pop
mov
jp
fsubr
mov
push
fsubl
jmp
mov
cmp
push
dec
xchg
jo
inc
or
in
leave
xor
cwtl
xchg
lret
sbb
inc
icebp
cld
cmp
cmpsb
movb
popa
sahf
and
jbe
shl
dec
sahf
jo
sahf
jb
ljmp
jge
and
sbb
pop
mov
mov
add
and
faddl
loop
scas
pop
xchg
pop
jne
loope
into
xchg
cs
pop
mov
lret
adc
lcall
pop
fistl
lret
and
pop
xchg
test
inc
adc
or
dec
inc
mov
mov
pop
and
fisttpl
ja
xchg
ja
pop
inc
andb
lret
movsl
mov
loope
jnp
fisttps
mov
inc
idivb
loop
mov
xchg
add
ffree
sbb
fadd
lds
adc
add
push
jns
adc
pop
fistps
xchg
ret
mov
push
std
push
ret
fisubl
inc
mov
mov
xchg
loop
jg
je
cltd
pop
mov
adc
cmp
push
cmpsb
adc
jge
andl
adc
fidivrl
arpl
in
call
jnp
xchg
cltd
push
aad
popf
mov
js
daa
xchg
mov
jbe
push
xchg
adc
pop
push
pop
in
pop
gs
and
das
adc
lds
movsb
enter
mov
add
dec
and
movsl
pop
stos
push
int
fucom
je
data16
push
xchg
or
lock
adc
nop
loop
sahf
xchg
adc
xchg
in
ror
push
mov
inc
pushf
xchg
xlat
cmp
and
in
cmp
xorb
push
lds
cmpsb
int3
xchg
shll
stos
push
jmp
aaa
mov
sbb
mov
cmp
xchg
jbe
sub
cmc
js
sahf
push
inc
jno
js
es
mov
addr16
mov
push
jae
sbb
add
sub
les
daa
rclb
fst
shll
lahf
fdivrl
add
push
sahf
sbb
sbb
adc
mov
sbb
andb
roll
push
fdivl
adc
add
and
lcall
lret
incl
imul
or
repnz
inc
enter
sbb
mov
js
xchg
add
std
ja
lea
push
inc
xchg
test
out
mov
dec
inc
es
and
jge
or
cmc
test
mov
mov
inc
enter
arpl
add
call
xchg
popa
jmp
mov
int
sub
inc
inc
mov
jmp
lds
lea
call
roll
in
jp
adc
lcall
dec
dec
leave
test
jnp
aas
nop
pop
jmp
pop
and
test
sbb
cmp
lret
das
add
out
jl
jl
or
cli
mov
jne
movsb
sub
fwait
nop
mov
push
ljmp
cmpsb
lcall
movsl
and
add
arpl
paddusw
add
in
mov
les
fdivrl
insb
cli
and
idiv
imul
and
inc
movsl
dec
mov
inc
lcall
mov
movsl
rol
xor
pop
add
lahf
add
addr16
popf
aas
mov
negb
and
push
sahf
test
stos
pop
cltd
sub
cmp
dec
vmwrite
js
lahf
xor
pop
fisubrl
inc
cmp
xchg
dec
lcall
pop
mov
mov
and
cmp
xchg
cmpsb
xchg
xlat
add
mov
std
into
pop
and
in
dec
mov
in
mov
gs
lret
push
jae
cmp
in
ljmp
in
mov
xchg
mov
and
movsb
cmp
stos
xor
and
es
out
mov
je
dec
in
shll
mov
test
push
mov
and
pusha
clc
ja
nop
in
cmp
hlt
pop
sub
inc
cwtl
movsl
inc
sub
fadd
push
adc
mov
into
pop
divb
popf
lock
out
fwait
xor
jecxz
xor
sahf
test
ret
mov
cmp
push
shl
es
out
lret
call
sti
je
cmpl
loop
stos
mov
lahf
aaa
mov
push
pop
fisubl
ret
test
sbb
std
push
add
push
aam
insl
add
in
add
adc
cs
jo
bound
and
jl
pop
adc
lahf
add
mov
xchg
fwait
lcall
test
add
int3
or
ficomps
lahf
orl
scas
mov
pop
rcrb
fiadds
shll
pushf
push
clc
cs
sbbl
jo
dec
sbb
out
mov
inc
fldt
scas
add
xchg
cmp
push
add
push
popf
pushf
sbb
test
lret
cmpsb
mov
add
fs
fsubrp
cmp
scas
fucomi
gs
adc
rcll
daa
jmp
push
adc
cld
lcall
not
cltd
adc
pop
sbb
mov
mov
lcall
jbe
adc
movsl
in
cmpsl
dec
or
arpl
fcomp
mov
es
mov
pop
and
mov
mov
push
add
fwait
xor
stc
test
jb
lock
lahf
sbb
rcrb
and
nop
loope
xchg
lret
out
mov
imul
inc
das
cmp
add
movsb
jo
lods
insb
dec
sub
pop
pop
push
lcall
jecxz
ret
repnz
scas
xor
les
loope
jne
insl
addr16
push
inc
lea
cmpsb
jl
shll
dec
in
xor
xchg
jnp
inc
int3
and
arpl
insl
lock
lahf
movsb
push
jb
ljmp
fcomps
push
mov
mov
pop
push
push
inc
push
roll
xor
sub
pop
mov
xchg
mov
sbb
cmpsb
xchg
lahf
pushf
jl
test
dec
cmpsb
lret
inc
push
inc
stos
sub
adc
fsubp
sub
cmp
in
and
xor
push
mov
aaa
and
pop
push
and
push
in
filds
cmp
lock
mov
sbb
fsubs
pop
bound
clc
pop
out
and
jo
or
into
lcall
notb
es
std
jecxz
cld
mov
int3
or
lock
and
imul
fisubs
add
call
xchg
hlt
incb
loope
fnstsw
aas
into
xchg
mov
mov
in
mov
daa
jns
and
xchg
jg
arpl
xor
nop
jb
mov
fisubl
in
push
cmp
fisubrl
cmpsl
and
mov
add
lcall
inc
or
jb
cwtl
sub
dec
push
adc
test
pusha
cmpsb
in
push
jmp
dec
dec
ficomps
orl
mov
push
ljmp
mov
jg
mov
xor
cltd
pushf
add
sbb
add
int3
leave
repz
mov
jns
pop
jno
cmc
cltd
sub
repnz
and
dec
loop
adc
jle
fidivs
loopne
sarb
es
mov
dec
mov
negb
push
mov
sahf
mov
cld
mov
mov
cmpsw
dec
leave
cmp
int3
filds
lods
clc
mov
lods
ret
xchg
sti
test
jbe
int3
es
pushf
sti
jl
cmp
frstor
xchg
dec
fildl
jae
xchg
jge
shrl
arpl
sub
movsb
lret
sbb
enter
movsb
pop
cli
push
cmp
arpl
push
mov
inc
add
dec
add
jne
mov
js
push
dec
sbb
lods
jge
lods
into
movsb
adc
mov
aad
dec
push
inc
adc
adc
mov
nop
sub
lahf
xor
dec
es
adc
fdivrs
repz
mov
push
gs
mov
cmp
enter
mov
mov
cmp
add
cmp
xchg
int3
dec
lea
lahf
mov
rolb
mov
mov
jle
jne
shll
xor
cmp
or
add
mov
push
jmp
mov
and
dec
push
push
and
iret
mov
sub
loope
into
out
iret
mov
mov
dec
pop
popa
sbbb
fwait
mov
fstl
roll
sahf
pop
jae
lcall
loop
sbb
ds
fwait
jns
push
pusha
insb
lahf
ficompl
sbb
pop
out
sarl
sbb
lret
mov
cwtl
lock
retw
add
inc
fistl
in
fistpl
ficomps
jae
inc
lock
popa
std
fiadds
push
inc
inc
and
jns
loop
cld
or
aam
sti
test
test
push
std
and
sbb
cwtl
dec
dec
stos
test
lea
xor
outsl
leave
sub
arpl
test
negb
mov
sbb
pop
sbb
aam
push
xor
movsb
sbb
cmpsb
loopne
arpl
cmpsl
cmpsb
add
loop
test
andb
and
xchg
inc
loope
mov
cmp
and
ljmp
jo
and
cltd
mov
fisubs
je
add
lcall
mov
sbb
or
pushf
dec
es
mov
lods
popf
mov
xchg
xchg
sub
repz
aad
test
sbb
mov
and
dec
cmpsb
movsb
push
push
push
lds
and
sbb
push
mov
and
daa
insb
loopne
int3
inc
push
cmpsb
mov
mov
mov
arpl
adc
lea
cld
adc
outsl
repz
add
insl
and
and
lret
mov
sbbl
or
fs
testl
scas
push
sbb
hlt
dec
loope
not
insl
sbb
ss
sti
mov
or
pushf
test
test
pop
jno
mov
sbb
shll
jno
mov
clc
out
mov
aaa
jg
into
sarb
movsb
in
mov
ret
out
shrl
mov
movsb
lcall
sbb
push
sbb
fcompp
mov
add
popa
rcrb
inc
bound
call
out
mov
mov
push
pop
xchg
fstpl
mov
mov
sbb
sbb
push
xchg
scas
mov
fcmovb
aad
cwtl
aam
rcrb
adc
mov
movsb
xchg
loope
das
and
push
in
pop
ffree
xchg
sub
adc
pop
adc
test
pushf
aad
pop
and
mov
movsl
xor
mov
ret
sbb
out
icebp
add
arpl
mov
and
add
push
push
shr
sbb
push
lcall
mov
aam
popf
ja
arpl
push
jnp
iret
out
xchg
xchg
ret
add
or
push
cmp
pop
push
push
sbb
movsb
push
push
push
cli
sahf
loopne
add
xchg
es
in
cltd
mov
push
pop
int
lcall
cltd
jp
pop
roll
pop
sahf
push
es
dec
inc
push
pop
mov
push
mov
ds
ret
pop
cmpsb
into
and
and
scas
mov
inc
stc
int3
add
out
and
in
push
arpl
cmpsb
mov
ds
ret
cmp
dec
cmpsb
int
adc
push
test
mov
lods
mov
cmpsb
in
push
jecxz
fdivr
lcall
fidivrs
jmp
ret
add
pop
rcll
pop
aad
lods
rcll
cmpsb
mov
stc
pusha
fidivrs
and
push
add
movsb
rcrb
add
out
pushl
arpl
push
push
xlat
xchg
pop
and
mov
sbb
popf
hlt
push
aam
dec
lods
pop
scas
pusha
sbb
jns
sub
das
test
rolb
mov
popa
rolb
lret
push
inc
and
repz
jecxz
and
out
pushf
pop
rcr
clc
mov
xor
inc
out
sub
ficomps
cmpsl
inc
and
les
lcall
jnp
shrb
cmp
lahf
xor
xor
add
cwtl
jbe
jge
daa
aad
push
sti
fwait
mov
out
or
stc
pop
jns
mov
cmp
std
and
gs
in
and
sbb
pop
push
pusha
cmp
mov
fisttps
sarl
mov
xchg
cmp
dec
fiadds
popl
sub
js
xor
inc
fwait
je
xor
mov
sub
mov
xchg
mov
popf
icebp
popa
int3
and
pop
xor
fs
dec
cmpsl
cltd
sub
jg
fidivrl
stos
hlt
arpl
add
popf
fisubs
sbb
shlb
out
mov
popa
jge
fists
out
movsl
xchg
fistpl
cmp
sub
sti
inc
push
mov
jl
adc
in
insb
mov
leave
push
scas
ret
pop
and
push
fisttpll
pop
push
lcall
aam
mov
cld
lock
les
mov
fnsave
cltd
lds
cmp
dec
mov
xchg
fstpl
movsb
mov
in
mov
icebp
cli
dec
xchg
jecxz
push
fstl
stc
and
aam
mov
and
aam
pusha
data16
jecxz
out
fldl
and
into
mov
jns
cltd
xorl
fscale
jp
jecxz
xchg
fs
fisttps
mov
inc
popf
aaa
in
js
cltd
dec
pop
ret
mov
fstpl
faddl
xor
nop
add
inc
pop
pop
mov
jo
andb
cmp
jg
stos
mov
insl
clc
movsl
dec
hlt
inc
cltd
dec
jle
mov
repnz
das
pop
xor
cs
or
rcll
inc
jbe
andb
and
cmpsb
or
es
pushf
jns
lahf
add
sub
or
inc
loop
sbb
dec
bound
mov
repnz
gs
test
fldl
jecxz
push
jbe
push
xchg
fs
mov
lahf
adc
sahf
out
jg
jb
cmp
push
and
and
ficoml
je
adc
pop
and
lea
cli
xor
mov
xor
xor
fs
insl
lea
adc
mov
push
sbb
mov
xchg
movsl
add
and
add
movsb
inc
test
xor
push
popf
repnz
movsb
ret
pop
test
pmulhw
lods
test
in
cmpsb
loopne
or
lahf
hlt
cmp
or
mov
jle
add
mov
mov
ror
jbe
rolb
mov
mov
jl
stos
and
pop
pop
out
mov
into
xchg
les
cmpsb
jg
cmp
sub
in
pop
jl
in
insl
fdivrl
frstor
sbb
je
sbbb
xchg
pop
xor
ss
lretw
mov
cmp
out
pop
fiadds
and
xorl
loope
es
imulb
mov
inc
in
test
xchg
movsb
push
sbb
cli
es
push
inc
add
and
mov
jg
les
cmpb
push
icebp
mov
mov
and
loopne
pushf
in
lea
cld
and
push
inc
out
push
inc
fcoms
inc
lods
fstpl
cmp
mov
fimuls
mov
movsl
add
adc
outsl
movsl
sbb
xchg
icebp
mov
jle
test
popf
sub
mov
adc
add
jns
repz
loop
cmpsb
mov
leave
add
out
arpl
clc
and
mov
sbb
data16
movb
xor
mov
sbb
loopne
mov
pop
add
fnstsw
push
sbb
orl
aad
add
test
loopne
mov
sbb
cli
adc
sahf
sub
aaa
loopne
add
out
mov
adc
jecxz
lret
inc
enter
and
test
ret
cmpsb
push
add
sahf
sub
mov
pop
es
xchg
inc
add
add
ret
add
push
sub
add
adc
fidivs
push
xchg
sahf
jl
iret
divl
dec
cmpsb
outsl
loop
aaa
lock
mov
mov
pushf
jo
cltd
jb
push
fmuls
cmpb
daa
outsb
rorb
int
outsb
popf
mov
lcall
sarb
dec
gs
push
fsubrs
lea
gs
cmp
or
push
fstpl
int
mov
daa
sub
pop
aaa
scas
notl
and
pushf
push
cld
aas
pusha
or
add
cmp
loope
lock
sbb
lret
subb
sbb
add
add
sbb
fs
pop
mov
sahf
push
in
adc
inc
mov
or
inc
mov
movsb
popf
out
xchg
pusha
loopne,pn
pop
stos
sahf
fistpll
lret
push
add
testl
or
xchg
and
inc
adc
rolb
add
aaa
xlat
test
aaa
dec
mov
pop
mov
lods
and
insb
lds
jnp
add
and
mov
jbe
cmpsb
or
out
fsubl
or
push
mov
inc
movsb
add
xchg
sbb
mov
ja
addr16
gs
mov
cmc
or
inc
aas
xchg
cli
push
pop
inc
in
push
mov
imul
push
rcll
push
mov
hlt
inc
and
or
or
das
mov
add
cld
and
xchg
lea
dec
and
lea
ret
cmp
outsb
fstpl
add
aam
mov
dec
fs
repz
rcr
jge
add
adc
inc
nop
xor
push
xor
mov
add
lahf
mov
loopne
loopne
pop
shlb
pop
mov
xchg
mov
jge
and
cli
add
adc
sbb
cmp
cwtl
mov
mov
xor
mov
xchg
lcall
or
add
sbb
dec
cld
adc
and
xor
mov
push
push
inc
adc
mov
out
fsubrp
in
ret
fwait
pusha
jmp
ret
cs
xchg
pushf
fcoml
aad
cmp
leave
mov
sbb
and
push
loop
test
jno
push
or
popa
ds
add
mov
loopne
add
fldl
push
xor
fs
xlat
lods
sbb
imul
iret
and
daa
ss
push
vcvtps2ph
addr16
or
loop
data16
lcall
int
pop
xor
jmp
popa
push
test
test
out
rcrl
scas
ds
fcoms
cmpsl
xlat
loope
cmp
in
stc
jnp
sbb
mov
data16
cmp
mov
aam
movsl
jns
push
inc
outsl
pop
sahf
test
arpl
out
push
pop
push
int3
lret
inc
pop
mov
sbb
add
pop
add
push
xor
inc
cmp
fdivrs
mov
bound
ret
les
addb
roll
add
cmp
dec
jne
sar
lar
shl
sahf
loop
shlb
inc
in
sub
inc
jl
hlt
out
mov
call
in
leave
int3
icebp
jge
sbb
pop
nop
pop
sbb
adcl
xorb
and
and
cs
vpunpckhqdq
sti
lahf
data16
and
mov
sbb
add
add
mov
enter
jg
add
ret
inc
das
cmp
cmp
xchg
subb
and
adc
jmp
pop
stc
cmpsb
xor
aas
pop
add
stos
add
ret
add
add
or
dec
pop
adc
jge
les
mov
and
fcoml
mov
das
out
cmpb
sahf
xorb
push
test
xchg
es
mov
jnp
arpl
movsb
in
lds
fsubs
sahf
pop
aam
jnp
rcrb
cmp
outsb
and
jnp
jecxz
out
cmpsb
and
dec
dec
mov
loopne
and
sbb
mov
push
shlb
jae
pop
and
test
ret
movsb
out
inc
adc
jbe
inc
mov
pop
jo
adc
pop
dec
inc
dec
cmpsb
ret
mov
pop
mov
lds
popf
ljmp
loopne
mov
and
mov
fldenv
inc
call
fwait
paddsw
add
cmp
sahf
test
sbb
and
bound
mov
fstpt
gs
js
and
and
xchg
inc
mov
sub
insb
mov
pop
in
jecxz
add
movsb
inc
mov
fldenv
pop
out
mov
movsl
push
pop
cltd
lcall
jns
pop
inc
call
pop
pop
mov
or
cmc
cltd
cmc
sbb
dec
fstp
mov
pusha
movsl
mov
cmp
dec
xchg
pop
pop
repnz
pop
push
mov
and
popa
in
mov
and
mov
jbe
cmpsb
jb
add
add
stos
aad
aam
mov
loopne
iret
jmp
and
movsb
mov
sarb
sub
loopne
or
and
cmpsb
mov
bound
ret
ret
test
push
and
cwtl
xchg
and
popa
lcall
inc
mov
mov
loop
mov
pop
mov
cmp
stos
inc
push
push
js
arpl
test
mov
inc
push
pushf
aad
pop
pop
push
mov
push
sbb
add
mov
gs
ffreep
sbb
jne
cmp
repnz
or
clc
arpl
fs
jb
loope
sub
and
iret
les
int3
or
sbb
dec
popf
cmp
xor
and
add
sahf
lods
and
lea
and
xchg
xor
inc
mov
sub
adc
add
or
icebp
add
cli
movsl
outsl
dec
mov
cmpsl
dec
mov
adc
sub
push
aad
arpl
ret
loopne
test
into
or
int
movsb
fsubl
inc
mov
or
jl
sbb
and
ljmp
out
cmp
test
popa
arpl
mov
movsb
inc
xor
mov
push
or
cmp
or
jecxz
or
and
bound
push
sbb
mov
cmpsl
in
xorl
gs
push
sarl
shll
rdmsr
mov
cmp
jle
inc
pop
lods
movsb
lds
stos
popf
push
pop
aam
adc
mov
xchg
int
xor
and
imul
arpl
mov
mov
jmp
fsubr
mov
mov
cmp
frstor
icebp
jge
data16
imul
popf
bound
arpl
pop
leave
orb
aas
mov
and
lahf
or
pop
mov
int3
outsl
stos
gs
xchg
jb
insb
xchg
adc
shlb
adcb
fs
sbb
adc
push
jge
rcr
jo
jp
in
push
dec
clc
cmpb
dec
rclb
movsl
jecxz
testb
test
adc
out
jp
cmp
mov
mov
into
scas
movsl
sub
pushf
in
fwait
mov
es
sub
or
mov
xchg
lcall
xchg
loope
cwtl
xor
lods
xchg
and
xchg
movsb
je
push
lods
cmp
adc
push
xchg
cmpsb
pop
sbb
push
rcr
xchg
adc
sahf
dec
xchg
fnsave
add
loopne
sub
pop
mov
and
das
mov
in
adcb
cld
and
fildll
pop
sub
sbb
js
cs
inc
lahf
pushf
outsl
out
inc
shlb
mov
aaa
ficoml
outsl
in
rcl
arpl
jp
inc
rcll
inc
andl
dec
mov
sbb
inc
movsb
lahf
mov
and
mov
in
repz
pop
push
push
outsl
dec
xor
mov
ja
jp
mov
pop
pushf
push
xchg
lds
adc
rclb
and
xor
adc
cmp
xchg
int
jg
xlat
in
pop
jns
repnz
mov
loop
sbb
cmp
cmpsl
ret
pop
in
fwait
popa
lods
divl
repz
aaa
stc
jnp
mov
mov
cmp
push
stc
pop
ficomps
cwtl
jne
adc
push
sbb
test
mov
push
xchg
lds
lea
les
decl
push
dec
pop
pop
nop
pop
stc
xchg
imul
mov
call
mov
fnstsw
and
xor
mov
mov
inc
lds
push
je
sbb
adc
in
arpl
in
jecxz
pop
xchg
and
pop
es
or
sbbl
inc
adc
adc
add
inc
outsl
xor
adc
mov
xor
dec
popl
je
fstps
dec
pop
xor
add
cmpb
sub
pop
sbb
jno
and
xchg
cmpl
stos
sbb
loope
pushl
enter
or
sarl
and
cmpsl
ffree
and
shlb
fdiv
loopne
mov
decl
and
sbb
mov
loopne
gs
aam
jbe
shlb
pop
sbb
mov
add
jbe
xchg
adc
xchg
arpl
jecxz
mov
test
mov
and
out
out
inc
in
inc
daa
arpl
xor
test
arpl
add
adc
mov
mov
loop
dec
xchg
sbb
push
jmp
sub
pop
out
sbb
adc
es
aad
jle
out
movsb
dec
mov
sub
push
adc
sbbl
lcall
push
xchg
xchg
movsb
movsl
xchg
xor
xchg
mov
adc
mov
pop
movsl
fwait
xor
call
adc
stc
add
inc
imul
sahf
rcrb
add
cmp
data16
pop
cltd
fs
and
jne
cmp
mov
mov
mov
std
call
out
push
fistpl
ret
int3
dec
test
mov
cmpsl
lcall
sub
andl
xor
xchg
leave
fiaddl
push
hlt
fstl
int
inc
sbb
add
into
cmp
rcll
faddp
and
mov
and
xor
mov
mov
call
fidivs
jle
cmpb
out
movsl
mov
adc
pop
lea
mov
outsb
andl
dec
je
xor
arpl
add
jl
add
sbb
ret
adc
and
cmp
movsb
cmpsb
enter
rcr
sbb
nop
rol
cmpsb
mov
add
test
adc
cltd
and
xchg
out
fwait
push
into
adc
and
xor
out
repnz
loope
xchg
push
xchg
gs
icebp
xchg
jge
add
ret
mov
mull
shrl
push
dec
jae
popf
adc
pushf
lcall
orl
gs
pop
sub
cmpsl
out
cmp
mov
loopne
add
das
mov
jbe
cmpsb
test
ljmp
loop
jb
out
add
call
xchg
popf
jl
xchg
fsubl
jbe
pushf
loopne
dec
ss
lahf
and
imul
xor
and
stos
idivb
and
jbe
es
pop
or
das
jns
sbbb
sbb
clc
pop
stc
jnp
push
inc
lret
jbe
leave
sbb
sbb
mov
push
rcrl
xor
xor
lcall
and
mov
ficomps
fidivrs
cmp
push
rcrl
adc
fists
fiadds
lock
mov
out
shlb
push
cs
popf
inc
sbb
inc
pop
notb
and
pop
inc
jne
pop
mov
cmp
mov
fcomps
adc
sbb
adc
push
lods
ficomps
fcmovne
and
mov
lret
mov
test
nop
pop
cwtl
out
in
lea
pushf
sahf
sbb
xchg
loop
inc
roll
popf
arpl
ds
jl
sbbb
dec
cmpsb
sbb
fwait
add
xchg
mov
sub
sbb
mov
xor
pop
mov
or
xchg
or
pop
cmpsl
in
scas
bound
daa
repz
sbb
sbb
push
cltd
sbb
daa
xchg
das
outsb
push
stc
cmp
mov
sub
and
out
lahf
lods
andb
pop
sbb
mov
push
pop
fwait
popf
cmc
sbb
rcrb
mov
and
pop
imul
xchg
inc
lret
das
fldcw
push
ret
push
movsb
sbb
mov
popf
outsl
push
or
mov
and
aam
popf
mov
mov
in
mov
popa
mov
or
cmc
in
push
sub
icebp
cwtl
xor
cmpl
mov
push
jb
xor
fwait
out
push
xlat
add
fdivrp
enter
mov
inc
shrl
and
je
es
push
movsl
ljmp
notl
ficompl
xchg
aas
lea
mov
aas
mov
mov
pop
xchg
aas
sbb
aas
jge
xchg
sbb
aas
push
adc
xchg
pop
adc
aas
adc
mov
xchg
das
sbbl
lock
xchg
xchg
stos
adc
add
push
leave
dec
lret
cwtl
sbb
and
shl
leave
adcb
mov
movl
aas
lret
jmp
mov
xchg
or
stc
mov
cwtl
movsb
jns
rolb
rorb
out
mov
aam
notb
or
test
movsb
push
cwtl
dec
bound
xchg
sbb
test
outsl
xchg
add
data16
loopne
ret
dec
or
iret
rolb
addl
pop
stos
lds
in
xchg
push
sahf
adc
pop
mov
cmpsb
lahf
and
push
mov
test
dec
dec
push
dec
sar
arpl
push
add
mov
ret
call
sbb
out
fldcw
mov
sbb
or
cmpsb
outsl
test
fcmovne
popf
cmp
test
int
loop
ljmp
add
mov
sbb
inc
testb
cmpsb
cs
subb
or
mov
mov
data16
in
roll
out
cmp
pusha
push
xchg
cmpb
jo
xor
ret
popf
in
mov
push
cmpsl
in
movsl
jb
and
jb
mov
cmp
aaa
js
xchg
in
hlt
xchg
xchg
in
cmpsb
lcall
lcall
nop
xchg
pop
stc
and
ja
inc
aad
popf
xor
push
aad
pop
lock
sub
pop
sahf
cmpsb
xor
rorl
outsb
mov
push
sbb
xlat
sbb
jmp
leave
xchg
and
jge
pop
jne
aas
shlb
fidivs
add
or
jno
mov
sub
pop
int3
fnstsw
xchg
mov
insb
xchg
or
sbb
mov
out
popa
cmp
xchg
gs
xlat
inc
mov
xchg
jb
lock
rcrl
in
mov
xor
jb
mov
cs
push
push
movsb
and
and
lahf
iret
mov
inc
mov
stc
mov
cltd
iret
pop
xchg
xchg
push
mov
subl
mov
cmp
inc
inc
xchg
imul
xor
outsb
hlt
sbb
lret
mov
sbb
mov
adc
push
movsb
std
push
test
in
sbb
ret
xlat
push
push
movsl
hlt
out
jns
fs
ss
clc
movsb
inc
xchg
imulb
in
and
pop
mov
adc
adc
inc
pusha
call
push
lds
mov
xor
mov
fcompl
arpl
mov
or
mov
adc
sub
fsts
in
and
mov
xor
and
inc
cmpsb
and
dec
xchg
sub
fst
movsb
sbb
aad
jle
xchg
push
es
add
in
sub
clc
loopne
mov
jno
les
sahf
pop
mov
jcxz
mov
mov
adc
push
inc
mov
pop
enter
sbb
mov
mov
or
scas
xchg
inc
mov
and
decl
jno
fisttpll
and
inc
lcall
pop
adc
jbe
leave
aad
cmp
lds
stc
js
jns
cmp
rorl
adc
sbb
cld
xlat
std
add
cmc
mov
jle
popf
popa
cli
sbbb
in
fsubrl
inc
mov
inc
mov
push
dec
std
mov
hlt
and
jb
gs
push
mov
pusha
add
and
loopne
lcall
xchg
add
pop
popa
jp
repnz
ds
adc
aam
xchg
xchg
xchg
mov
call
int
and
shlb
clc
and
cmp
and
dec
jecxz
mov
les
das
xchg
shl
cmpl
movsb
hlt
lods
push
sub
push
lea
repz
add
test
popa
xlat
lret
mov
popa
ret
mov
andb
sub
and
loope
sub
adc
push
xchg
fwait
adc
mov
cmpsb
add
sbb
es
add
mov
xchg
and
mov
inc
or
push
cmpsl
lret
lahf
push
xor
inc
pop
bound
pop
pop
pushf
sub
and
repz
sbb
ljmp
inc
daa
std
adc
and
adc
push
ja
mov
mov
xchg
mov
mov
inc
mov
or
lret
jmp
jb
jp
in
push
push
push
sub
mov
test
lahf
pushf
and
mov
push
jno
in
fnsave
inc
xor
xchg
fiaddl
xor
insb
popf
lcall
inc
push
inc
movsb
jb
in
pop
mov
neg
lahf
aaa
int3
dec
into
push
add
call
xchg
jo
pop
cmp
push
cmp
add
mov
addr16
inc
fisttpll
out
fs
mov
add
fisttpll
ret
cmp
adc
addr16
aas
out
mov
out
push
push
push
arpl
jbe
xchg
xchg
loopne
mov
faddp
das
ret
sbb
pop
out
push
add
add
sbb
add
sbb
jne
dec
decl
outsl
xor
push
addr16
xor
adc
dec
arpl
fsubl
pop
ljmp
mov
jae
daa
loop
pop
mov
or
aaa
jne
sbb
sbb
and
jae
call
sbb
lahf
add
stos
icebp
loope
sbb
shl
xor
xchg
mov
les
lea
js
and
pop
mov
sub
sahf
insl
or
sub
jno
mov
iret
xchg
in
push
daa
add
js
iret
sbb
ret
repnz
mov
int3
es
in
sbb
pop
inc
and
or
cs
insl
and
push
and
xchg
fidivrl
jge
pushf
inc
aam
iret
jne
lret
iret
and
cmpsl
rcll
lock
addb
mov
iret
pop
pop
cmpsl
mov
repnz
inc
lcall
xor
pop
mov
sbbb
xorb
dec
cmp
jp
sar
jecxz
addb
dec
sub
ljmp
mov
pavgw
fs
out
loop
iret
mov
or
cmpsb
xor
andb
push
jecxz
or
xchg
mov
loop
cltd
and
inc
xor
jg
repnz
hlt
pushf
mov
jle
mov
clc
and
push
andb
sub
sahf
movsb
inc
or
xor
mov
mov
add
push
movsl
es
lret
fisubs
or
mov
int3
add
gs
push
cmpsl
xchg
hlt
jnp
inc
inc
test
fstpl
or
xor
inc
sbbb
and
dec
fcmovb
and
mov
aad
test
lods
mov
nop
cwtl
stos
cmp
ret
add
inc
mov
out
mov
cld
movb
mov
pop
jp
mov
ljmp
out
mov
sbb
dec
cmp
cwtl
add
and
nop
and
xchg
jp
mov
mov
cwtl
inc
cltd
xchg
pop
xchg
add
xchg
and
sbb
sbb
cld
pop
mov
popf
add
gs
push
dec
sbb
pop
leave
inc
inc
jmp
dec
pop
mov
and
sub
es
push
xchg
andb
push
pop
sbb
mov
sub
pushf
test
adc
in
jae
mov
loope
pop
xchg
lcall
pop
mov
sbb
xchg
pop
out
shlb
popa
adc
mov
aas
xchg
sub
out
mov
or
mov
cmp
dec
add
push
mov
jae
ret
dec
fimuls
inc
cmp
mov
mov
xor
pop
ds
cwtl
ds
inc
mov
aam
fimuls
jp
aam
subl
mov
fiadds
sbb
sahf
or
sub
insb
mov
xchg
mov
mov
cmp
cmpb
push
jp
cmpsb
loop
xor
in
arpl
fwait
push
orb
push
out
lret
mov
dec
mov
shr
mov
das
and
sahf
or
mov
xchg
jg
xor
addr16
shrl
aaa
adc
mov
js
repnz
ss
jle
xchg
xorl
jns
repnz
dec
out
roll
cmp
adc
push
adc
mov
outsl
push
push
andb
in
pop
or
ret
sub
out
xchg
add
and
push
mov
test
jae
adc
lea
push
movsl
sahf
cmc
push
xchg
cmp
fsubl
mov
sbb
or
push
push
fcoml
mov
dec
and
pop
adc
dec
inc
jno
add
out
or
and
fiadds
mov
mov
xchg
insb
adc
push
outsb
xchg
inc
jae
shlb
in
in
mov
ss
arpl
les
mov
in
icebp
popa
adcl
fisubrl
xchg
out
popf
mov
fcomi
mov
sbb
outsl
out
xor
es
sbb
lahf
xchg
and
les
mov
lahf
std
or
popf
into
nop
mov
fldenv
mov
test
negl
or
adc
xchg
roll
mov
jecxz
mov
push
aaa
inc
push
shrb
mov
iret
or
sti
cmc
or
sbb
jle
call
jo
jp
xchg
sahf
stos
cmp
mov
xchg
ds
cmpsb
adc
sbb
cmp
out
lods
jno
sub
or
push
rclb
rolb
decb
sub
mov
add
out
cmp
mov
test
cmpsb
xchg
mov
cltd
push
and
sbbb
into
incl
cwtl
les
js
cmp
stos
mov
stc
xchg
fimull
inc
or
inc
and
rcrb
push
mov
xor
pop
pop
int3
push
cmp
out
arpl
loope
test
scas
cmpsl
sub
xchg
sbbl
and
mov
mov
xchg
sub
push
shl
test
test
lcall
call
loope
dec
push
ss
idivl
es
cmpl
jle
mov
lock
sub
mov
and
in
push
insl
sbb
add
add
jl
les
mov
outsb
mov
lods
dec
xchg
inc
or
mov
cld
adc
and
push
lods
popa
xchg
fisttps
mov
inc
mov
push
hlt
aam
add
sbb
sbb
nop
mov
adc
and
arpl
lcall
loopne
test
daa
xor
pushf
lcall
andl
add
shll
clc
imul
sarl
jb
lcall
pop
loope
mov
mov
ret
fdivl
pop
test
mov
loop
fs
and
in
std
adc
es
add
repz
cmpsb
mov
sti
out
sbb
inc
subb
mov
cmp
mov
xchg
and
shld
lds
xchg
daa
and
add
movb
lahf
sahf
push
cmp
or
mov
std
and
cmp
fimuls
xor
and
mov
xchg
mov
verr
add
mov
pop
and
stos
adc
sbb
pop
inc
negb
mov
xchg
adc
xchg
sub
and
and
jecxz
lret
arpl
pop
lcall
fists
aaa
jbe
or
cmpsb
lods
xchg
pop
or
int3
loope
xor
lcall
dec
mov
cmp
dec
aas
mov
push
shl
pop
sub
ds
incl
jl
add
in
push
lock
mov
sub
ja
or
leave
push
hlt
ret
sbbb
ljmp
lahf
dec
popf
addr16
mov
push
push
loopne
out
in
fldcw
mov
test
es
xor
adc
xor
addr16
imul
mov
adc
clc
mov
enter
dec
pop
shrl
out
sarb
nop
jecxz
xor
push
push
decl
inc
push
cmp
jne
inc
xor
xchg
out
faddp
xor
mov
insb
inc
mov
xchg
fistl
pop
adc
xor
imul
mov
aaa
push
call
ret
add
cmpsb
roll
cmpsb
push
loop
xor
hlt
sbb
xor
divl
pop
cmp
jno
push
push
push
test
negb
jae
fildl
push
fwait
lret
movsb
ret
pushf
sarb
rcl
jp
mov
cmc
sbb
mov
add
mov
jg
xchg
ds
test
adc
jecxz
pop
cmp
xor
lock
add
fldt
sti
nop
nop
fsubrs
xchg
sahf
push
xchg
cmpsb
xchg
xchg
icebp
adc
pop
mov
and
and
mov
aaa
popf
dec
pushf
cmc
sbb
pushf
sbb
mov
dec
mov
sub
push
lods
shll
sbb
mov
sbb
in
mov
cmp
pop
xor
push
pop
sbb
and
xor
xor
mov
ret
sbb
pop
inc
lcall
insb
xchg
cmpb
sbb
rclb
pop
mov
in
jbe
add
pop
fstpl
test
es
cmpl
fbld
and
movsl
arpl
xchg
movsl
pop
lret
push
push
sahf
mov
std
nop
inc
test
or
push
jno
mov
test
insb
cmc
ficoms
push
sahf
popf
es
inc
jae
gs
push
adc
sbb
sbb
sahf
mov
pop
cwtl
mov
repz
fwait
sbb
pop
and
scas
xor
scas
pop
cmc
mov
cmc
push
add
mov
cmc
sub
mov
call
ds
mov
jnp
jno
ss
movsb
out
test
call
pop
push
inc
les
xchg
pop
and
scas
sti
pusha
addr16
xor
and
jns
ret
inc
in
mov
and
and
je
loopne
insb
arpl
popf
xchg
mov
sbb
jl
jnp
stos
roll
movsl
push
xchg
xchg
push
movsb
and
and
pusha
iret
pop
call
in
outsb
aam
sahf
adc
negb
andl
test
mov
stc
in
andb
out
push
fbld
insb
mov
add
add
ret
add
rolb
mov
jecxz
pushf
out
jo
xchg
pop
and
in
and
push
push
mov
or
cmp
jbe
push
pop
cmp
jae
mov
rolb
xchg
test
leave
ret
loop
movsl
push
mov
test
add
data16
aas
sub
or
gs
jp
xchg
inc
xchg
pop
mov
mov
push
sahf
loopne
and
outsb
stos
loop
movsb
pop
jmp
and
cld
xchg
add
jo
pop
mov
jo
and
pop
push
cmp
sbb
or
mov
sbbl
cwtl
or
insb
pop
pop
pop
mov
mov
push
or
xor
add
loopne
add
pop
test
cmp
or
loope
mov
hlt
sbb
push
push
stc
aaa
cmp
cmp
lcall
sub
adc
push
xchg
adc
es
out
push
cwtl
and
cmpsb
aad
shll
push
cmpsb
ret
xchg
call
and
shl
ret
mov
inc
fisubs
and
popf
aaa
push
mov
xor
xchg
inc
sub
cmp
xor
mov
and
sahf
data16
mov
sub
test
negl
loop
add
in
psrld
std
gs
cltd
sbb
xor
lcall
jmp
pop
push
shrb
lcall
sub
and
scas
movsb
dec
add
outsb
pusha
cmpsb
sbb
lahf
mov
or
add
rclb
push
movsb
jge
sbb
xchg
lea
mov
pop
sbb
or
popf
and
inc
xor
and
pop
movsb
mov
rolb
sbb
sbb
sti
push
push
fs
jno
mov
fcmovbe
dec
jg
repnz
xor
adc
in
adcb
pop
pop
and
adcl
in
pop
aad
addr16
rolb
add
es
nop
lahf
loopne
out
adc
inc
mov
sbb
pop
add
faddl
cmpsb
xor
cmp
pusha
sub
jb
out
xor
cs
jo
scas
fucom
test
orb
icebp
and
and
faddl
test
pop
popa
cmp
and
shll
mov
adcb
pushf
mov
mov
aam
lock
fsubr
in
cmp
cmpb
arpl
pop
add
sti
inc
jae
mov
adc
jmp
movsb
and
aas
gs
out
movsb
aas
push
cmpsb
lahf
in
shrb
in
add
push
inc
jae
mov
and
dec
xor
mov
sbb
cltd
push
push
es
xchg
fwait
das
out
insl
mov
xchg
imul
in
js
mov
inc
aam
int
and
push
xchg
mov
or
cmc
sbb
fstpt
add
push
xchg
or
cmp
data16
jmp
mov
dec
rorb
iret
stos
pop
filds
xor
fadds
popf
into
xor
in
push
adc
mov
sub
rorb
pop
and
jno
inc
cltd
add
mov
iret
rorl
mov
ja
xor
fidivs
loop
sbb
push
pop
mov
ret
push
fwait
lcall
mov
outsl
jmp
je
mov
and
icebp
ret
and
in
sbb
shlb
mov
jle
rorl
lret
out
mov
add
arpl
loope
adc
add
dec
cmp
pop
mov
push
inc
jle
cmp
dec
andb
movsb
mov
sbb
lea
ret
aas
jnp
push
jl
call
add
test
out
lcall
inc
jge
mov
ret
push
rcrl
sub
test
inc
movsl
nop
lahf
repz
and
jecxz
sbb
ficoml
push
mov
mov
sbb
and
leave
mov
adc
mov
jle
adc
das
test
stc
dec
cmp
sbb
out
sbb
mov
push
ficomps
out
loopne
jge
lock
loope
sbb
and
fwait
mov
ffreep
popf
bound
js
and
mov
and
test
inc
xchg
addr16
xor
scas
lea
jnp
icebp
lods
sahf
dec
dec
push
lahf
xor
mov
adc
rorl
cmp
push
cmp
or
lock
inc
fnsave
lods
mov
mov
lea
push
mov
mov
sub
mov
test
cmp
mov
scas
cmc
mov
rcrw
and
fcompl
nop
mov
outsl
pop
xchg
sbb
data16
ret
and
in
icebp
sub
ss
stc
or
cld
and
sub
int
arpl
shl
xchg
out
xchg
and
xor
push
and
mov
mov
mov
and
rcrl
push
ret
mov
sub
and
push
and
mov
push
lret
sbb
data16
movsb
dec
ds
push
cmp
fadds
inc
adc
jmp
out
movsb
pop
out
movb
bound
pop
sub
cmp
xchg
loopne
jo
ljmp
and
xchg
jmp
mov
inc
mov
je
jo
addr16
loope
icebp
adcl
rcrb
add
or
data16
mov
inc
push
and
add
jne
sbb
cmc
lret
pushf
xlat
add
mov
mov
in
loop
mov
into
xor
xorb
out
pop
mov
sbb
popf
jg
mov
cmp
sbb
fstpt
rcr
and
int
dec
pop
leave
ret
sbb
lods
xchg
add
in
movsb
shrl
lret
fistpl
fwait
or
adc
je
bound
xchg
push
mov
repz
sbb
popa
or
fstpl
sub
mov
imul
mov
data16
and
inc
xor
arpl
jo
mov
push
dec
je
add
inc
lds
dec
push
ds
inc
adc
mov
pop
and
adc
add
popa
or
sub
adc
cmpsb
inc
add
xchg
lret
cltd
lcall
loopne
imul
mov
popf
and
sub
push
add
mov
test
mov
sub
test
rorb
aad
add
sbb
loopne
ljmp
popf
ret
xor
fisubl
lret
arpl
lods
out
sub
and
mov
cld
and
iret
add
pusha
inc
mov
pop
in
lcall
movsl
in
xlat
out
aas
fildll
shrb
int3
mov
inc
sbb
arpl
fisttps
pop
mov
cltd
cli
mov
mov
mov
stos
and
push
or
jb
add
sub
movsl
sti
xchg
inc
sbb
xor
stc
sahf
push
inc
and
in
popf
sbb
sbb
adc
xor
je
dec
mov
dec
sbb
xchg
push
jns
into
and
cwtl
bound
out
push
es
lahf
mov
inc
cmp
ret
jecxz
jno
jg
jp
sbb
sbb
pop
cmpsb
cmc
inc
add
dec
jmp
out
push
aas
pop
clc
popf
dec
mov
sbb
fwait
dec
inc
lcall
movsl
xchg
adc
insl
andb
push
adc
cltd
xchg
cmc
out
mov
push
imul
out
dec
mov
in
call
dec
bound
push
xchg
sub
jge
inc
push
hlt
add
inc
add
popf
jne
push
andl
sub
pop
out
sahf
push
pmuludq
mov
and
daa
popa
xchg
jae
test
out
push
addr16
aaa
sbb
je
sbb
in
ficompl
jo
xlat
adc
out
xor
fisttpl
divb
movsl
mov
xchg
in
aam
fbld
fistpll
ja
enter
add
and
and
in
xchg
mov
jnp
sahf
insb
aas
addr16
and
out
pop
add
gs
mov
sbb
and
mov
add
mov
fcompl
pusha
into
jl
pop
sbb
sbb
fwait
fwait
add
sub
push
insb
hlt
pusha
or
jbe
test
icebp
in
scas
std
xchg
leave
fisubrs
push
fwait
cmp
mov
cmc
push
imul
dec
aaa
mov
je
loopne
out
in
xchg
push
dec
int3
ret
and
or
add
inc
repnz
and
jge
int3
and
shrb
das
xchg
mov
lahf
sub
lds
inc
push
and
rcrl
fcompl
sahf
lcall
and
lods
add
add
cmp
and
pop
pop
jo
cwtl
clc
mov
test
rcrb
inc
jg
xchg
pushw
xor
jno
pusha
jbe
jp
cmp
inc
jg
into
rcrb
imul
dec
ficoml
loopne
aam
or
sbb
shl
push
movsb
mov
push
cmp
pop
sbb
lcall
jns
add
rcrb
sub
orb
subb
jae
movsb
fwait
jae
aad
and
shll
inc
mov
sbb
out
aaa
inc
ljmp
pop
lds
mov
fcmovnu
mov
cmpsl
fimuls
lahf
arpl
ret
ljmp
and
jne
enter
mov
or
mov
fidivs
aad
push
bound
and
or
mov
sub
inc
addr16
notb
xchg
rcrb
lock
pop
sbb
fs
xor
mov
xchg
xchg
cmp
ss
xchg
sub
ror
out
xlat
pop
out
fistl
jmp
and
pop
inc
inc
adc
sub
pop
stos
and
ret
fucomip
lcall
cmp
sbbb
loopne
pushf
xchg
dec
pop
adc
push
loopne
push
cmp
cmpl
movsl
xor
mov
push
add
movsb
mov
ret
and
fs
test
imul
arpl
sbb
mov
cmpsb
lds
sbb
and
push
mov
inc
sbb
push
cmc
mov
xchg
insb
cmc
stc
xchg
and
lahf
cmc
sub
cmpsl
dec
lock
sti
and
inc
data16
test
unpcklps
dec
cltd
add
out
pop
xchg
mov
add
jne
pop
repz
lcall
pop
and
ret
or
ret
lds
inc
inc
mov
dec
inc
jns
fs
test
mov
addl
inc
mov
test
add
sbb
add
lahf
inc
adc
cmc
inc
lahf
mov
mov
sbb
mov
in
shlb
mov
adc
popf
sub
mov
sbb
sub
mov
mov
lods
and
mov
in
outsl
xchg
inc
pop
mov
and
xor
insl
xor
test
aad
fstl
scas
loope
add
daa
pushl
sub
cmpsb
into
ret
into
push
push
mov
pop
mov
je
movsb
xchg
push
inc
inc
mov
jmp
in
fiadds
dec
xor
pop
pop
mov
sahf
sbb
push
sbb
add
dec
add
jmp
sub
push
lock
mov
daa
push
mov
jo
add
adc
pop
add
mov
mov
hlt
xlat
xchg
dec
imul
outsb
jp
and
jbe
in
shl
jg
cmp
jmp
inc
dec
adc
xlat
out
pop
xchg
jbe
les
lds
iret
rorw
imul
mov
xchg
adc
adc
mov
adc
push
enter
jbe
mov
mov
daa
mov
fwait
xor
push
mov
cmc
xchg
adc
xchg
cld
sbb
dec
inc
in
enter
push
mov
sbb
data16
fs
push
aaa
test
out
sti
sbb
jmp
adc
out
lret
adc
sbb
in
jl
and
adc
cmp
xor
ror
mov
outsl
cwtl
outsb
jg
or
in
test
lods
les
mov
mov
mov
mov
loop
rcrl
adc
ds
inc
shll
mov
sti
inc
pop
push
jecxz
movsb
movsl
stc
lods
negl
lods
pop
fsub
int3
ror
sbb
push
inc
push
mov
add
or
cmpsb
adc
push
sbb
loopne
js
mov
or
cmp
popf
repz
aam
mov
lcall
negb
xlat
push
cmpsb
cmp
sub
add
jbe
adc
cmp
add
imul
test
mov
adc
xlat
inc
cmp
sub
inc
sub
addr16
jmp
mov
add
xor
loop
sub
sbb
dec
lahf
aam
xor
in
pop
cld
fimuls
push
lds
mov
mov
xchg
cmc
mov
shll
bound
std
movsb
mov
add
nop
loopne
test
mov
fs
push
pop
jno
repnz
addr16
shll
das
repnz
ja
xchg
incb
and
add
mov
xchg
xorb
inc
sti
sbb
xchg
repnz
mov
mov
dec
jbe
mov
fstl
xchg
mov
in
rcrl
sahf
call
out
clc
sbb
and
add
test
lret
in
stos
sub
add
pop
add
sbb
lea
cmpsb
dec
cmp
jnp
jb
repnz
adc
aad
mov
cmpl
push
stc
mov
mov
pop
into
sbb
pop
sbb
xor
adc
mov
inc
arpl
add
mov
mov
mov
pop
movsb
arpl
pop
and
xor
data16
arpl
xchg
repnz
add
idivb
popa
rorb
arpl
adc
imull
xorb
repz
andb
mov
mov
dec
sbb
orb
icebp
inc
mov
push
inc
mov
dec
arpl
jge
lds
sbb
sub
cmc
jnp
pop
pop
xchg
inc
pop
sbbb
sbb
addr16
pushf
jo
sahf
in
sub
mov
es
and
lds
inc
ret
int3
dec
sub
adc
popf
fs
outsl
test
xor
xchg
and
sbb
inc
das
jmp
jae
cmp
imul
push
and
clc
cwtl
push
out
push
fnstcw
mov
inc
mov
sbb
and
and
sub
pop
sahf
mov
cs
out
xchg
inc
and
mov
pushf
jmp
and
fmull
sbb
jbe
cmp
cmc
sbb
xchg
in
andl
push
lds
addr16
and
in
jg
xor
pop
or
xchg
in
test
mov
loop
xor
movsl
ret
js
dec
add
and
daa
or
loopne
lcall
sbb
pushf
loopne
mov
movsl
xorb
ljmp
shll
pop
jae
mov
bound
adc
pushf
xchg
push
mov
fst
sbb
push
fnsave
ret
cmp
xchg
movsl
mov
sbb
xchg
xchg
inc
js
adc
aam
in
ljmp
xor
repnz
shlb
mov
sarl
divl
add
cwtl
frstor
cltd
shl
add
imul
cmp
lcall
arpl
sbb
test
rolb
cli
jmp
cmp
arpl
out
lcall
std
sub
mov
adc
test
mov
ds
cmp
pusha
mov
lret
and
or
mov
in
in
fcoms
out
es
clc
xor
movsb
jmp
pop
inc
and
adc
std
icebp
pusha
cmpsl
jne
lds
add
pop
aas
mov
test
aas
arpl
test
xchg
das
mov
sbb
enter
xchg
mov
mov
or
ficompl
mov
inc
popf
sub
xchg
insb
iret
sub
mul
into
push
xor
jecxz
orb
popf
pushf
ret
add
push
mov
out
andl
fmul
fisubs
in
aaa
inc
cmpsl
pop
mov
and
dec
xor
adc
jne
push
loopne
inc
adc
mov
sbb
cltd
lcall
movsl
push
add
xchg
movsb
daa
cmp
adc
mov
or
jge
scas
movsb
xor
dec
mov
mov
or
fcomp
inc
addr16
mov
into
or
pusha
xchg
push
xor
jecxz
jmp
out
leave
and
ljmp
lret
mov
xlat
lods
xor
cwtl
pop
adc
and
cmc
cmpsb
into
inc
repnz
shlb
jne
orb
add
mov
test
shrb
sub
add
lcall
add
mulb
roll
push
aaa
mov
mov
dec
mov
cld
inc
addr16
jno
fisttps
add
or
dec
sub
xor
movsl
negb
jl
push
push
pop
pop
dec
mov
in
push
mov
mov
and
mov
add
adc
sub
loop
xchg
cmc
or
pusha
xchg
mov
and
pop
pop
mov
aaa
aaa
hlt
lods
push
pop
jl
fisttpl
sub
movsb
arpl
adcl
ret
inc
out
rclb
icebp
popf
jo
pop
sbb
clc
loopne
adc
sbb
inc
push
mov
in
push
jl
sub
imul
sub
fdivrp
insb
add
add
nop
jecxz
aam
push
out
cltd
mov
push
cmpsb
xlat
jl
lds
roll
roll
loope
mov
data16
dec
mov
xchg
cmpsl
or
and
inc
jb
xor
call
jecxz
jp
inc
lret
fwait
int3
and
xlat
mov
fistpll
cmpsl
and
data16
pop
mov
dec
fldcw
push
repz
mov
add
arpl
addr16
xchg
fsts
mov
dec
aam
pop
fadds
inc
inc
mov
stos
inc
insb
xchg
sbb
popf
inc
pop
pop
das
mov
mov
fsubr
xchg
mov
push
mov
cmpsb
dec
cmp
jb
mov
lahf
test
dec
out
cmp
loope
mov
push
hlt
mov
or
dec
mov
sbbl
dec
mov
fidivrs
xor
or
leave
gs
push
pop
add
pop
inc
sbb
cld
cmp
fisttpl
cwtl
andb
pop
popa
pop
je
mov
xlat
lahf
push
das
xlat
xor
and
and
pop
arpl
cmp
cwtl
sub
lea
fwait
mov
push
push
lock
pop
std
cmp
mov
dec
fwait
ds
inc
and
sub
int3
dec
fsubs
negb
movsl
jno
fnsave
rclb
sbb
xchg
mov
xchg
jecxz
js
mov
jnp
mov
xlat
ficompl
mov
push
in
popf
jno
push
loopne
cmp
xor
gs
lods
ja
lcall
xchg
mov
aam
push
aam
aad
popa
cmp
lds
ja
or
arpl
ja
pop
jmp
std
pcmpeqd
bound
jbe
sub
dec
jmp
sbb
cmp
jbe
fcomps
and
sub
mov
adc
pop
dec
mov
aaa
negb
inc
inc
add
imul
outsb
or
mov
sub
pop
loope
shrl
and
sarl
xor
mov
iret
fldt
mov
nop
aad
and
adc
mov
call
rcl
out
jge
daa
and
lds
outsb
loopne
cmp
cld
popf
scas
mov
andl
inc
xor
cmp
adc
fs
and
push
in
fsubrl
enter
pop
int
ret
pop
mov
jbe
shl
mov
cs
mov
xchg
daa
adc
ss
in
in
cmp
mov
pop
inc
add
sbb
into
adc
add
imul
es
cmpb
sub
inc
outsl
inc
shll
push
ss
inc
jecxz
daa
mov
je
in
push
test
test
sbb
cltd
add
push
or
jo
xor
inc
mov
stos
xchg
mov
idivb
cmp
and
jg
jl
inc
pop
add
pop
int3
xchg
adc
sbb
test
pushf
xchg
dec
loopne
imul
les
aas
popf
mov
mov
mov
lods
lcall
push
adc
push
aas
fsub
dec
jnp
xor
pop
sub
hlt
push
mov
add
roll
cltd
pop
mov
test
hlt
jno
cmpsl
in
jge
daa
mov
mov
sbb
fldt
sbb
cmp
sbb
mov
jne
insl
and
add
fisttpl
fisttps
loopne
pop
or
push
out
shlb
ljmp
lock
mov
lock
movsb
mov
mov
pop
mov
lock
les
mov
mov
cwtl
scas
fdivl
andl
xor
push
cmpb
pop
xchg
arpl
sbb
imul
jge
mov
mov
xchg
or
push
divb
xor
rorl
imul
mov
mov
cwtl
mov
stos
cmp
or
inc
pop
orb
mov
sti
sbb
or
scas
lret
aaa
dec
cmpxchg
jl
sti
stos
adc
pusha
decb
fsubr
xchg
data16
pusha
jnp
sahf
push
loop
test
fwait
mov
fwait
ja
stc
push
js
cs
push
daa
fisubs
sub
xchg
js
mov
es
fs
aas
js
or
leave
add
inc
jns
iret
in
mov
shl
mov
arpl
mov
js
inc
sahf
loop
push
jbe
pop
cltd
sbb
inc
inc
inc
int
jns
inc
arpl
xchg
mov
xchg
pop
adc
inc
out
pop
cmp
dec
sbb
clc
int3
jb
sar
inc
xlat
push
or
xchg
sbbb
stos
adc
sbb
iret
jns
popa
xor
lods
cmpsl
adc
mov
addr16
into
mov
and
add
fdivrl
ljmp
inc
push
test
mov
frstor
cmp
and
int3
rol
adc
xor
movsb
and
jmp
fwait
les
fsubl
popf
lea
push
mov
movsb
add
adc
pop
leave
xor
mov
adc
icebp
mov
stos
jb
and
aad
adc
mov
push
add
push
mov
jnp
dec
pop
jbe
out
fsubrl
jmp
iret
sti
cmpl
out
out
xor
cmpsl
pop
jecxz
xchg
dec
mov
xchg
ss
mov
es
adc
push
ret
adc
in
hlt
sbbl
out
andl
mov
ret
inc
int
adc
lds
mov
faddp
and
mov
dec
inc
ja
loope
dec
out
mov
sti
bound
inc
jnp
in
fildll
popa
lods
sbb
nop
leave
or
mov
rcrb
fsubrl
mov
outsl
out
mov
or
mov
gs
and
mov
loopne
adc
loopne
mov
add
fdivr
fstl
mov
nop
mov
in
sahf
mov
jecxz
sarl
in
es
lcall
rorb
xchg
lcall
mov
sub
push
xchg
mov
nop
loope
pushf
inc
outsb
pop
add
pusha
adc
lret
fstpl
fdivs
xchg
xchg
mov
xchg
movsl
and
add
mov
icebp
xchg
inc
test
sbb
or
call
cmc
cltd
mov
jb
cmc
and
xchg
push
pop
xlat
andb
call
add
sarl
xchg
sbb
lds
aas
aad
ffree
sbb
push
mov
pop
push
std
lahf
adc
in
ljmp
or
outsb
jns
mov
js
les
cwtl
aad
insl
mov
xchg
push
cmp
pop
xor
cltd
and
cmc
cwtl
aaa
sub
adc
loopne
js
mov
and
or
xchg
mov
mov
mov
sbb
pop
or
in
lcall
and
mov
sbb
xchg
jg
and
push
pop
mov
inc
bound
pop
test
pusha
xchg
dec
in
xchg
out
dec
add
in
mov
sbb
pop
jbe
mov
pop
jecxz
xor
add
lret
adc
push
test
dec
rorb
push
jl
dec
fnstenv
sub
and
movsl
aam
call
pop
cwtl
shll
sbb
inc
stos
ret
sbb
mov
aas
push
addr16
fidivs
add
sub
les
lret
push
xor
xchg
shlb
mov
and
sahf
adc
cmpsb
mov
cmp
out
mov
push
fimull
out
sahf
and
out
lret
inc
jle
testl
and
push
mov
jp
outsl
sbb
lret
mov
hlt
xor
pop
pop
add
dec
ret
cmp
ret
mov
rcrl
lret
sbb
mov
pop
cwtl
sbbl
es
rcrb
mov
xchg
jl
jae
mov
das
ss
pushf
mov
xor
imul
xor
dec
add
lods
outsb
inc
jno
cmovne
loop
inc
es
lret
test
icebp
outsl
mov
pop
sub
adc
push
lods
dec
pop
leave
or
mov
mov
jecxz
mov
enter
lods
push
shl
push
mov
loop
or
jne
mov
mov
and
data16
mov
lcall
frstor
dec
movsl
shll
repnz
mov
dec
outsl
and
test
out
mov
ljmp
mov
outsl
sti
push
movsb
mov
xor
in
mov
fildl
icebp
mov
movsb
sub
mov
or
testl
sti
lods
movsb
arpl
mov
sub
xorl
add
sahf
int
jo
ja
add
in
stos
or
ss
push
rorb
fcmovu
inc
es
insl
and
push
sbb
mov
mov
ficompl
out
xor
pop
inc
int
mov
jmp
std
arpl
inc
test
rol
mov
sbb
popf
mov
add
das
push
sbb
sbb
imul
pop
push
mov
xor
jl
add
sub
leave
xchg
test
mov
push
sbb
fstl
adc
sahf
or
jno
push
test
mov
cmp
push
and
pop
out
push
mov
movsb
out
sahf
fwait
loop
inc
and
push
outsl
mov
xchg
push
push
pop
and
shll
fildl
sbb
call
add
gs
cmp
into
adc
lcall
je
cmp
test
push
popf
adc
or
push
aaa
or
xor
fistpl
gs
jecxz
jge
out
push
call
add
sbbb
xor
and
xchg
sub
ret
out
popa
or
cli
mov
test
or
pop
jle
mov
xchg
loop
xchg
imul
xor
je
ljmp
push
mov
xor
mov
pop
xchg
pop
je
jnp
ds
sahf
jbe
mov
lds
xchg
aaa
mov
xchg
pop
loop
fisubl
mov
mov
out
cs
xchg
add
loope
movsl
cld
lahf
jecxz
jbe
lahf
inc
pop
ret
push
jb
mov
aam
les
mov
pop
jnp
or
movsl
adc
pushf
xlat
inc
adc
mov
fstps
mov
push
sbb
sbb
inc
test
lea
fwait
std
daa
push
sar
cld
out
rolb
pop
call
inc
pop
cld
sub
mov
cs
sbb
fidivs
mov
hlt
pop
lcall
and
arpl
fidivrs
mov
push
sbb
or
push
ljmp
nop
loop
pop
add
lds
and
mov
mov
cmp
clc
mov
inc
inc
mov
and
xchg
adc
add
and
add
dec
push
add
and
iret
dec
lcall
mov
lds
in
mov
sti
adc
pop
test
add
mov
inc
or
push
inc
push
int
rclb
and
and
mov
mov
mov
cmp
in
add
js
cmp
pop
fs
mov
dec
ficoms
push
jbe
jg
cld
add
add
xor
xor
jmp
adc
adc
push
int3
sarb
and
jg
add
dec
cmpsb
mov
bnd
push
xor
movsb
inc
jmp
xchg
shlb
lock
mov
push
pop
out
adc
pop
out
fistl
mov
mov
ds
add
xor
popl
mov
xchg
and
jae
iret
xchg
test
and
imul
das
pop
imul
cmp
inc
and
notl
adc
jmp
mov
cmp
xchg
lds
cltd
cmpsb
and
jg
cmpsl
or
aam
pop
and
cmpb
and
push
and
mov
divb
pop
sbb
mov
test
xchg
roll
xchg
inc
mov
scas
mov
push
cwtl
decl
arpl
lods
cmpsb
jno
test
and
mov
fisttps
mov
push
cmpsb
adc
sub
rorl
std
jnp
and
ror
add
test
mov
outsb
test
movsl
aam
repz
popf
jmp
cmpsb
inc
cmp
rorl
mov
shrw
cwtl
sbb
xchg
aam
xor
adc
popf
aam
rcll
push
mov
je
adc
in
rcrl
jge
gs
es
leave
mov
push
stos
shll
lods
jbe
lea
and
fdivr
int
clc
lahf
inc
push
jbe
jg
enter
stc
ljmp
sub
adc
mov
mov
jp
mov
jne
mov
repz
jbe
shl
cmpsb
push
jmp
insb
pop
les
roll
stos
adc
push
and
push
insb
jb
mov
sti
mov
cmp
or
daa
cld
in
fyl2xp1
adc
push
das
mov
clc
imul
mov
scas
sbb
jp
dec
dec
and
push
jo
push
in
mov
xchg
add
lahf
or
fildl
cmpsb
xchg
iret
dec
mov
fwait
adc
jae
add
out
mov
mov
mov
dec
xorl
imul
sahf
addl
and
cmp
popf
sahf
mov
pop
inc
cmp
mov
iret
cmp
or
cmp
push
repnz
sbb
fmulp
mov
adc
rcl
cmc
push
lds
jae
test
jnp
jbe
cmp
jae
and
test
xchg
sbb
and
jb
in
cmp
inc
jno
shl
iret
fdivl
and
push
fcompl
cmp
pusha
out
loopne
jo
xchg
test
sub
jae
aad
in
pushf
sbb
subl
mov
shrl
inc
mov
jge
mov
daa
out
xchg
push
arpl
sahf
les
into
mov
loopne
movsl
xchg
lret
add
and
ret
jle
mov
xchg
sub
sahf
and
xchg
pop
adc
or
sbbb
ds
cltd
movsl
cmp
jl
xlat
mov
mov
xchg
inc
push
addb
notl
stos
cwtl
aas
int3
loopne
int3
in
movsl
test
jmp
xchg
jno
push
lea
insl
fisubs
push
push
sbb
ficomps
dec
dec
je
movsl
cmp
in
test
aad
and
add
dec
dec
xchg
xor
in
es
outsb
leave
mov
fdivp
sbb
sub
loope
push
mov
lret
and
add
mov
cmp
inc
movsb
and
sahf
mov
cmp
cmc
xchg
add
fs
fcoms
mov
ret
lcall
xchg
and
std
add
fs
xor
pop
in
fwait
test
ds
fidivs
pop
andl
imul
enter
fiadds
popf
cld
or
xchg
enter
dec
mov
cmpsb
in
ljmp
sbb
mov
or
enter
fstpt
cld
leave
dec
adc
push
in
cmp
add
ja
jb
jns
lret
loopne
loope
pusha
mov
cmp
xor
shlb
push
cltd
lcall
mov
mov
aas
adc
cmc
mov
sbb
fs
lods
popa
shr
jge
lcall
pop
mov
jo
xchg
aas
xchg
popa
dec
fldt
and
ret
add
arpl
rorl
enter
mov
cwtl
out
add
cmp
sbb
fwait
daa
loopne
movsl
add
mov
lods
pushf
nop
test
fs
data16
sbb
fwait
mov
add
dec
repz
xchg
cmpsb
loop
testb
sub
add
sbb
ret
bound
push
inc
pusha
and
mov
pop
mov
inc
cmpsb
sti
mov
cwtl
aad
push
pusha
stos
dec
adc
fsubs
or
push
das
dec
dec
add
fs
mov
xorb
leave
sarb
call
call
inc
js
lret
mov
loope
repnz
sub
add
out
xor
lds
in
sar
sbb
jge
push
pop
lahf
gs
jle
into
mov
xor
loop
mov
add
fdivrp
mov
outsb
or
pop
pop
push
ret
imul
loope
inc
in
push
add
inc
jecxz
or
jle
inc
or
sti
in
push
clc
lds
pop
inc
cmp
lods
mov
arpl
gs
jae
mov
sub
jns
ret
and
lods
sub
inc
xchg
flds
imul
and
mov
loopne
add
xor
pushf
test
movsb
sbb
adc
sub
movsl
sbb
in
mov
or
xor
hlt
and
mov
outsl
int
out
inc
inc
lock
lret
lcall
lahf
je
inc
adc
dec
cmp
notb
jne
pop
clc
and
sub
or
ret
mov
jecxz
jmp
roll
data16
ljmp
ret
pop
imul
jo
outsb
lcall
push
js
jns
arpl
or
jp
xchg
pop
bswap
and
sub
test
adc
mov
repnz
mov
popa
mov
cs
add
cmp
mov
addl
std
cmp
adc
or
mov
popa
mov
inc
jge
cli
or
add
cld
pop
inc
in
fcomps
fwait
mov
aas
out
jnp
xchg
call
mov
and
fiadds
sub
fs
pop
pusha
stos
gs
pop
ja
push
ret
adc
xchg
mov
ret
xchg
es
jp
out
aam
dec
dec
insb
lret
lds
in
je
add
shlb
xchg
clc
pusha
pop
ds
inc
loope
test
cltd
sub
idiv
dec
cmpsb
xor
jecxz
xor
es
mov
fists
pop
or
and
int3
cmpsw
hlt
ret
pop
loop
fcmovnb
std
clc
ds
arpl
push
cli
shl
pusha
es
jo
lcall
ss
arpl
fisttpll
push
test
push
aaa
jb
aad
push
inc
lds
fs
pop
inc
cmp
das
adc
sahf
pushf
add
inc
push
pushf
sbb
out
xchg
into
push
es
lods
cmpsb
stos
sahf
aad
es
std
cmp
adc
out
hlt
jno
popf
push
mov
mov
in
inc
sub
pop
pop
movsl
mov
cld
adc
mov
lcall
sar
sbb
and
and
pop
lods
sub
bound
hlt
cmp
ret
mul
nop
cmpsb
lret
dec
or
repnz
mov
fcoml
push
push
jmp
es
testb
mov
sbb
mov
add
push
ljmp
pop
xchg
sub
lcall
pusha
fdivp
and
mov
mov
out
hlt
fwait
inc
scas
adc
mov
xchg
cwtl
mov
or
fsub
ret
sahf
rcrb
orps
gs
frstor
jns
enter
jne
and
aad
sbb
push
enter
push
loopne
cwtl
sub
mov
jo
popf
scas
aad
fcomip
jb
adc
cmp
in
lahf
jge
add
rcl
add
adc
outsb
xor
xlat
pop
lock
push
xor
mov
or
sub
pushf
sbbl
pop
lret
rclb
adc
add
movb
sub
or
fistps
test
push
add
mov
push
and
lcall
cwtl
in
mov
in
cli
js
pop
inc
lea
mov
ret
cwtl
insl
icebp
mov
scas
clc
sub
cld
ficoms
push
fistps
push
xchg
mov
cs
in
mov
sbb
shlb
dec
cwtl
push
leave
or
fbld
pusha
fidivs
and
movsl
fcoml
inc
in
xchg
out
movsb
into
in
arpl
push
repnz
push
cwtl
adc
sbb
sbb
xchg
fistps
push
sarb
xor
std
call
sti
push
and
lock
mov
lahf
cwtl
imul
fisttps
cmp
iret
rol
add
pop
mov
mov
pop
mov
mov
fiadds
adc
call
mov
ljmp
jb
leave
add
xchg
dec
lret
xor
push
mov
add
push
cwtl
xchg
mov
xor
add
shlb
add
out
cld
pusha
xchg
cmp
mov
pop
xor
icebp
sahf
adc
outsl
sbb
push
movsb
sbb
adc
shll
int3
mov
xor
push
into
inc
mov
pop
out
push
adc
inc
inc
es
shlb
mov
nop
and
ss
inc
mov
sub
sbb
repz
cs
push
gs
mov
adc
fs
adc
sub
mov
repz
dec
mov
pop
lahf
xchg
add
add
and
mov
scas
cmpsb
dec
cltd
nop
xchg
pop
jmp
jne
outsb
lock
fildl
xor
or
adc
and
mov
out
sub
mov
sbb
pop
jge
pop
scas
or
mov
adc
mull
fisubl
xchg
adc
aad
inc
and
imul
aad
sub
in
fs
int
mov
aad
jmp
lods
cmp
fs
xor
fs
sbb
add
stc
and
shrb
sub
int3
sbb
mov
inc
push
mov
or
mov
aad
xchg
rorb
adc
sbb
mov
add
and
xchg
sahf
notl
call
mov
and
xchg
pop
in
test
enter
mov
test
je
xchg
ds
push
clc
mov
and
enter
outsl
fs
or
cmp
add
cmpsb
xor
lret
std
std
cmp
mov
dec
sbb
cmp
sbb
mov
fcmovnbe
fs
daa
in
jl
jbe
and
ss
test
add
data16
lcall
mov
and
sub
in
add
ljmp
xchg
out
fs
out
xchg
push
pop
xor
rcr
pop
addl
dec
jmp
lret
add
jno
mov
inc
andb
out
jbe
int3
adc
xor
xor
iret
inc
xor
xchg
mov
and
lretw
les
and
and
mov
cmp
xlat
hlt
ret
call
adc
jl
add
daa
pop
dec
mov
and
mov
or
jg
mov
push
add
and
test
push
loope
lcall
pusha
mov
add
out
les
jo
add
leave
inc
fnstcw
hlt
es
mov
xchg
arpl
mov
mov
mov
mov
push
in
inc
xchg
insl
inc
mov
xchg
js
rcll
jg
adc
and
or
popa
loop
mov
add
lret
dec
aaa
push
mov
sub
cltd
aam
int3
in
jp
and
add
outsb
aaa
mov
fidivrl
xchg
call
sbbb
jle
aaa
mov
cmpsl
fstl
sahf
pop
insb
mov
inc
mov
or
fisubl
pusha
xchg
cltd
push
arpl
test
das
mov
jo
mov
mov
call
bound
arpl
pop
mov
in
loop
lcall
sub
les
mov
xchg
cwtl
fwait
jbe
dec
adc
mov
out
mov
es
cltd
addl
in
and
js
es
outsb
xchg
arpl
sarl
xchg
sbb
mov
out
or
add
rol
movsb
push
movsl
loopne
mov
int3
lock
add
sbb
push
inc
pop
inc
xchg
clc
sbb
sub
jp
bound
push
adc
add
inc
bound
pop
or
sub
push
ret
cs
aad
fldt
movsb
push
xchg
jb
and
or
sbb
push
in
pop
sub
jp
cmp
jle
call
lock
loop
aad
ret
into
clc
fwait
jle
arpl
shrb
dec
xor
mov
push
sti
stc
out
out
sbb
mov
adc
aas
arpl
in
xchg
es
movsl
negb
push
xchg
pop
sub
push
in
inc
cwtl
call
xor
push
gs
sbb
mov
push
mov
adc
mov
push
fstps
xor
stos
lds
icebp
jnp
mov
arpl
push
xor
in
lcall
mov
dec
mov
jno
jp
xor
ja
mov
insl
aad
inc
sbbb
mov
daa
std
xchg
sub
xchg
pop
and
in
in
add
or
push
loope
sbb
cwtl
push
pop
and
jle
adc
xor
xchg
inc
pushf
add
loop
pop
cmp
xor
xchg
int3
movsl
repnz
fwait
xchg
inc
add
mov
mov
inc
test
and
pushf
xchg
lcall
xchg
add
scas
push
and
cs
hlt
and
sbb
lahf
sub
adc
popf
dec
stos
sbb
arpl
insb
sbb
jnp
adc
in
or
and
pop
inc
and
pop
lret
les
jecxz
add
divb
in
cmp
pop
xor
enter
iret
sub
and
js
add
jb
mov
outsl
add
inc
adc
arpl
mov
roll
je
jnp
add
jb
lcall
and
and
jnp
mov
cmpsb
pop
push
fiadds
sbb
pop
mov
addr16
sub
inc
test
mov
fnstsw
dec
and
sbb
mov
sbb
ss
cwtl
xor
mov
sub
mov
rcrl
jg
loopne
inc
inc
fwait
cmp
mov
mov
inc
or
add
popf
add
push
adc
sub
mov
inc
sbb
inc
inc
cld
mov
test
or
sub
xor
jnp
cmp
push
add
jecxz
aam
bound
shll
lcall
inc
and
sbb
popf
es
repnz
adc
repnz
div
sbb
add
inc
dec
imul
xchg
jecxz
into
imul
test
cwtl
in
and
movsb
sbb
mov
fisttpl
mov
xor
add
inc
es
push
inc
es
ficoms
sbb
fsubl
inc
in
adc
clc
xchg
jle
loopne
xchg
nop
adc
popa
xor
clc
jmp
rolb
cld
cs
xchg
and
xor
aas
fisubs
add
pusha
inc
lock
sti
mov
cmp
insl
loop
mov
add
or
fbld
bound
rep
sahf
inc
mov
movsl
xor
jne
jb
notl
adc
mov
mov
xchg
js
loopne
mov
out
push
jp
out
movsl
fs
shr
jge
push
sub
cmp
and
test
stc
nop
sub
fidivs
xlat
pusha
addb
nop
fnstsw
mov
fiaddl
in
cmp
jnp
aam
add
bound
fstpl
sbb
outsl
std
cmpsb
movsb
addr16
pop
mov
stc
and
std
movsb
ficomps
mov
lods
xchg
outsb
or
pusha
xchg
fmull
lock
outsb
pop
in
nop
xchg
and
enter
sbb
mov
pushf
add
dec
add
pop
int3
push
les
adc
lds
push
fimuls
inc
push
cli
insb
and
loope
add
mov
cmp
xchg
inc
sub
scas
mov
fwait
mov
mov
adc
shl
push
mov
les
push
cmp
jo
arpl
ss
xchg
mov
xchg
aaa
stos
es
or
ret
stc
cmp
cmp
imul
loop
outsl
push
xchg
clc
pop
push
add
inc
xor
lods
xchg
in
and
lea
xchg
hlt
mov
cmpsb
int
scas
pop
js
and
cmp
rcr
jnp
mov
sbb
add
mov
mov
xor
fdivrl
mov
dec
and
ret
dec
insl
dec
push
in
das
add
int3
pop
les
xor
lret
cmp
or
fsubs
je
addb
adc
pop
out
and
jno
push
fildl
arpl
mov
jmp
jb
jmp
bound
mov
adc
push
add
inc
sahf
push
push
xor
and
xor
imul
movsb
or
adc
push
scas
sbb
xchg
andb
jnp
inc
sahf
es
mov
add
sarl
mov
das
nop
pusha
and
sub
loopne
and
push
jecxz
clc
push
inc
sahf
sbb
push
pusha
mov
inc
repnz
movsb
mov
and
or
jo
mov
pop
jmp
add
pop
xor
jge
mov
fs
movsl
jb
jl
in
repz
push
jl
inc
xchg
inc
push
xor
sbb
ds
jecxz
movb
pop
inc
ja
jne
mov
out
mov
fldcw
data16
in
jne
dec
fildll
mov
push
inc
mov
ss
arpl
fisubs
xchg
ret
mul
mov
std
aaa
les
insl
xchg
fsubl
test
xchg
or
mov
outsb
sbb
js
cmpsb
adc
mov
and
inc
lret
repz
es
jbe
mov
ss
lret
divb
sbb
aam
pop
inc
sub
popf
shll
sahf
or
and
sub
rclb
imul
test
lcall
xchg
pop
sub
inc
cmp
add
fists
in
sub
xor
jg
shlb
inc
jb
push
mov
pop
out
fcmovnbe
push
jb
jae
out
mov
addr16
aaa
out
dec
xor
cltd
movsb
inc
call
add
push
and
sahf
add
nop
xchg
sub
jne
lret
out
sub
add
movsl
and
ljmp
adc
pop
ret
pop
loope
mov
add
xor
cmpsb
js
jg
fucomi
adcl
xlat
lods
mov
mov
cltd
mov
es
out
pushf
stos
cmpsl
loop
or
mov
dec
add
sti
jl
pop
sub
into
arpl
ficomps
jecxz
cltd
loope
sbb
jb
pushw
mov
push
xor
int
cmpsb
ret
and
cmpsb
mov
dec
movsb
sub
mov
stos
or
cltd
int3
arpl
insl
fsub
dec
gs
icebp
mov
lea
repz
xchg
es
and
in
cmp
mov
jecxz
pop
enter
or
cmpsb
inc
cmp
jecxz
ret
lcall
sahf
fwait
sbb
aas
pop
adc
enter
lea
sbb
pop
fstpl
ret
scas
ficomps
mov
orl
les
sub
mulb
push
lcall
xchg
testb
or
and
sub
xchg
mov
and
les
sub
mov
adc
iret
dec
or
cwtl
jle
xchg
lea
in
add
stos
mov
xchg
cmpsl
ficoml
push
add
popf
cltd
movsl
push
dec
iret
in
imul
jecxz
and
mov
mov
xchg
ds
sbb
xchg
out
add
or
xchg
es
xchg
cmp
adc
fwait
dec
loop
popf
add
mov
or
movsl
es
xchg
jle
adc
push
lret
cltd
xchg
ds
sbb
xchg
out
add
or
xchg
es
sahf
xchg
cmp
adc
fwait
dec
loop
popf
fcoms
mov
or
movsl
cmp
xchg
push
push
shlb
pop
add
or
xchg
es
xchg
cmp
adc
xchg
dec
loop
cltd
mov
cmc
popf
out
add
or
mov
cmp
adc
cmp
push
dec
and
jle
and
push
xchg
fidivrs
xchg
sahf
xchg
negb
xchg
push
call
loop
mov
sbb
and
sahf
movsl
negb
xchg
sbb
ds
jle
and
and
sahf
xchg
idiv
es
push
call
loop
mov
push
lahf
sub
mov
sahf
movsl
neg
xchg
sbb
cmp
ret
adc
sub
xchg
faddp
ret
sahf
xchg
neg
es
push
call
loop
mov
xlat
push
lahf
sub
mov
sahf
movsl
idiv
xchg
sbb
sahf
sub
jle
and
push
xchg
ficomps
ret
sahf
xchg
idivb
es
push
call
loop
mov
inc
push
lahf
sub
mov
sahf
movsl
negb
xchg
sbb
cli
sub
jle
and
push
xchg
ficomps
xchg
sahf
xchg
idiv
es
push
call
loop
mov
pusha
push
lahf
sub
mov
daa
pusha
inc
scas
jns
pop
fsts
frstor
loope
xlat
push
xor
push
cld
cld
cmp
add
inc
jle
movsb
inc
add
inc
sahf
push
and
cmpsb
ljmp
out
and
cmpsb
repnz
push
jmp
sub
in
push
cs
out
push
xor
icebp
push
xor
repz
xor
cmc
push
ss
negl
cmp
stc
push
cmp
sti
push
cmp
std
push
ds
lcall
inc
push
add
inc
push
add
inc
push
add
or
dec
aas
into
add
inc
into
add
inc
into
add
inc
into
push
fisubl
fisubrl
fisubrl
fisubrl
sbb
add
add
add
add
and
fwait
out
or
xchg
in
mov
push
adcb
scas
rorb
test
test
or
or
push
cli
jmp
cli
sub
in
out
popa
pop
xchg
mov
jge
jle
lret
ds
xchg
xor
arpl
inc
pop
inc
push
fstpl
loopne
lahf
arpl
jg
das
xchg
push
cmpsb
outsb
inc
sqrtps
rolb
push
lock
lods
dec
add
xor
and
add
movsl
pop
fcmovnb
cmp
pop
ds
jns
xchg
dec
xchg
loop
inc
cs
and
adc
mov
push
dec
xchg
push
adc
insl
movsl
sub
jl
cmp
cmpsl
add
pushf
pop
out
out
cld
jecxz
movb
xchg
jno
aaa
test
int3
inc
movsb
add
test
mov
orl
mov
or
inc
out
lods
jecxz
or
in
jnp
les
rol
sahf
push
in
inc
insl
lcall
ficompl
je
and
je
pusha
hlt
loope
and
sbb
jb
loope
sarl
cmp
bound
mov
stc
pusha
loop
add
arpl
mov
xchg
adc
ffree
adc
adc
xchg
nop
xchg
push
out
dec
cmp
and
or
fwait
mov
or
pop
xchg
loopne
shlb
xor
mov
addr16
arpl
call
int
stos
pop
in
movsl
aam
das
stos
movsb
loop
fisttpl
hlt
xchg
adcb
add
mov
mov
loop
inc
push
dec
jle
inc
hlt
xchg
mov
cmp
out
push
dec
jle
popa
add
lea
inc
push
dec
jle
inc
hlt
xchg
mov
cmp
out
push
dec
jle
mov
inc
push
dec
jle
inc
hlt
xchg
mov
cmp
out
push
dec
jle
inc
hlt
xchg
cmc
movl
xchg
mov
cmp
out
push
dec
jle
inc
hlt
xchg
mov
cmp
jle
int3
inc
add
mov
cmp
out
push
dec
jle
inc
hlt
xchg
mov
cmp
out
push
hlt
or
out
push
dec
jle
inc
hlt
xchg
mov
cmp
out
push
dec
jle
mov
inc
push
dec
jle
inc
hlt
xchg
mov
cmp
out
push
dec
jle
add
das
out
add
ret
mov
push
and
or
je
iret
jbe
mov
lods
lcall
out
add
or
xchg
es
xor
nop
movsb
sub
pop
pushf
fidivl
mov
popf
push
mov
and
movsb
mov
cmp
xor
adc
mov
in
cmpsb
loop,pt
mov
mov
xchg
and
add
cwtl
fcompp
ret
sahf
pushf
idivb
push
call
add
dec
loop
movsb
cmp
and
sbb
lcall
push
nop
and
add
xchg
fdivp
ret
sahf
cwtl
not
es
loop
mov
cltd
push
mov
ficomps
test
mov
loop
mov
inc
mov
and
add
xchg
ret
sahf
cwtl
neg
es
loop
mov
fstl
mov
ficomps
push
test
mov
sbb
sub
mov
mov
cmc
nop
out
add
or
xchg
es
xchg
cmp
adc
lcall
test
es
adc
notl
mov
je
aas
mov
sarb
adc
sub
nop
add
or
xchg
dec
lods
ret
sahf
cwtl
neg
es
loop
mov
mov
and
add
or
shlb
adc
and
pop
nop
inc
xchg
ds
sbb
xchg
out
add
or
cwtl
es
sahf
lcall
add
dec
loop
mov
mov
movsb
and
mov
mov
add
incl
dec
loop
nop
adcb
out
add
or
cwtl
stos
cmp
dec
jns
arpl
jecxz
sar
aad
add
inc
rolb
aad
add
inc
rolb
es
call
es
and
lock
repnz
and
lret
into
xor
repz
mov
stc
mov
cmp
std
mov
inc
mov
add
inc
and
shrb
aad
sub
jmp
sub
xor
addr16
inc
les
les
call
les
in
les
lock
repnz
hlt
les
clc
les
cli
les
cld
les
lcall
adc
aas
mov
fwait
out
sub
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
aas
sahf
fildl
and
out
mulb
cmpsb
sbb
loope
xor
clc
mov
test
mov
and
lcall
cmpsb
out
pushf
sub
xlat
jnp
or
xchg
inc
mov
sub
hlt
jecxz
cmc
movsl
xlat
dec
movsb
jae
push
jbe
ljmp
adc
rolb
clc
sbbl
loopne
xchg
movsl
jbe
jg
or
mov
mov
xor
jmp
xor
inc
xchg
jp
and
sub
es
ret
jns
arpl
mov
ds
movsb
shlb
fs
repnz
std
and
pop
or
stos
or
sbb
loope
sahf
imul
xchg
sbb
subl
or
mov
pop
push
xor
jne
pop
std
aam
bound
andb
push
movl
xor
dec
popa
xor
bound
call
sub
add
pop
insl
and
fsubp
in
push
or
int3
nop
mov
lahf
sahf
xchg
hlt
and
mov
jo
in
out
andl
mov
fcmove
jl
pop
ds
call
lret
xchg
loop
mov
inc
mov
imul
jbe
xor
pop
mov
mov
and
inc
inc
and
sbb
adc
daa
dec
sahf
test
loop
pushf
sahf
sahf
mov
mov
notb
push
dec
jle
inc
hlt
xchg
mov
cmp
out
push
dec
jle
inc
hlt
loop
jmp
enter
mov
cmp
out
push
dec
jle
inc
hlt
xchg
mov
push
cmpsl
iret
jle
inc
hlt
xchg
mov
cmp
out
push
dec
jle
inc
hlt
xchg
mov
cmp
out
popa
hlt
sbb
inc
push
dec
jle
inc
hlt
xchg
mov
cmp
out
push
dec
sahf
out
xchg
pop
loop
inc
push
dec
jle
inc
hlt
xchg
mov
cmp
out
push
dec
jle
inc
hlt
loop
jmp
enter
mov
cmp
out
push
dec
jle
inc
hlt
xchg
mov
push
sub
jle
inc
hlt
xchg
mov
cmp
out
in
cmp
pop
add
in
jg
dec
add
cmp
cltd
mov
jg
cs
pusha
movsb
loop
js
mov
adc
mov
rcr
bound
cltd
in
add
in
and
and
les
dec
fnsave
sub
cmp
movl
cmpsb
push
ja
push
nop
loopne
mov
mov
mov
fadd
push
jb
xor
xor
pushf
rcrl
into
lcall
test
xchg
dec
in
ficomps
fsubl
sub
xchg
cli
cli
pop
pop
dec
lret
lcall
testb
orb
mov
ljmp
cwtl
loope
ret
and
xchg
gs
push
and
rolb
cmpsl
and
mov
loop
adc
lret
rolb
sub
ret
dec
xor
rcrb
mov
cmp
mov
add
and
inc
pop
mov
push
sub
out
inc
jbe
mov
popf
js
shll
ja
js
lods
jge
xor
ret
add
inc
and
mov
dec
test
add
popa
cmp
cmp
or
scas
test
mov
ds
or
sbb
loop
data16
sbb
sbb
sbb
xchg
dec
nop
sbb
data16
xchg
fstps
test
sbb
or
loopne
out
test
jbe
mov
and
popf
icebp
push
mov
addr16
push
jmp
sbb
imul
sbb
mov
mov
sub
sub
fcomps
push
sarb
sbb
mov
mov
movsb
cmp
push
aad
inc
in
js
inc
aad
faddl
std
dec
and
test
lds
shr
fstpt
and
sbb
jb
test
test
inc
inc
leave
stc
and
loopne
hlt
stos
cmc
add
jmp
insb
test
add
cmc
mov
lret
in
cld
push
or
xor
sbb
in
xor
mov
fidivl
mov
inc
lret
sti
mov
mov
xchg
cmc
movsl
pusha
popf
mov
mov
jge
mov
bound
pop
jne
leave
leave
and
xchg
test
psrad
cld
mov
and
mov
push
and
lea
out
add
inc
inc
loopne
mov
daa
in
jle
mov
mov
iret
jmp
movsb
enter
fildl
pop
jmp
jle
add
mov
ds
mov
or
in
pop
adc
fiadds
nop
push
sub
xor
cmp
ret
mov
and
lcall
inc
add
ficoms
pop
nop
std
mov
fdivr
cmp
out
into
cltd
pop
movsl
pop
hlt
mov
cld
cld
push
pop
lret
adc
xor
stos
mov
movsb
push
cmp
sbb
sub
movsb
xchg
and
or
jmp
mov
popf
push
and
and
jl
sbb
dec
add
push
lds
adc
cmp
ret
outsb
jo
mov
xchg
nop
adc
mov
out
int
in
jbe
test
les
mov
movsb
inc
mov
movsl
push
mov
je
pop
mov
inc
jo
movsl
inc
mov
lcall
cwtl
mov
lret
mov
or
fldt
cltd
add
loope
je
sbb
mov
xchg
adc
enter
jne
shlb
adc
mov
inc
xchg
inc
loop
sub
cmc
addr16
imul
out
push
inc
sbb
mov
in
cmp
std
imul
xadd
in
or
xor
movsb
mov
xchg
xchg
fs
pop
adc
scas
lret
iret
jmp
dec
jecxz
test
mov
jne
jb
or
cmp
in
imul
shl
dec
xor
in
cmpl
cmp
loop
add
fstpt
add
pusha
mov
and
ljmp
xchg
loope
pop
xchg
xchg
xor
sbb
jne
mov
ret
in
push
sti
pop
insb
pop
subl
pop
xchg
cmp
adc
test
lods
sub
xchg
popf
aas
inc
insb
incl
cld
in
pop
cmpsl
pop
ret
adc
and
insl
popa
cltd
xlat
sub
repz
movl
add
cmpsl
jg
test
mov
test
cwtl
add
mov
lcall
in
dec
arpl
push
adc
sahf
out
xchg
ror
aaa
push
and
fld
push
jecxz,pt
flds
mov
add
pop
mov
cmpsl
arpl
inc
test
xor
arpl
xchg
xlat
mov
lods
mov
push
dec
repz
pop
xlat
mov
lods
leave
negl
xor
cwtl
xchg
stos
in
arpl
ljmp
pop
jge
ret
add
into
les
pop
fs
xchg
in
pushf
mov
push
rcrl
xchg
hlt
loopne
out
es
cmpsl
pop
pop
flds
lret
mov
xor
loop
mov
in
rolb
push
xchg
xchg
ljmp
push
mov
adc
clc
rcl
lds
movsl
xchg
xchg
add
push
data16
lret
outsb
lds
std
and
rorb
stos
int
jns
and
xchg
xchg
adcl
orl
mov
xchg
inc
repnz
movb
inc
subb
mov
cld
idivb
out
mov
aad
and
add
ret
filds
xchg
in
arpl
inc
int3
or
in
jge
inc
cmc
sbb
loopne
push
add
push
pop
xchg
adc
xor
mov
pop
cmp
jae
sub
adc
lea
das
out
ret
and
sub
xchg
or
xchg
xlat
negb
popa
push
add
js
outsb
add
popa
push
jecxz
add
movsb
popa
mov
add
adc
idivl
jbe
add
fstp
popa
pop
mov
insl
xchg
loopne
pop
or
mov
jne
pop
inc
fistps
or
fs
sbb
lods
or
andb
in
sbb
mov
cltd
movsb
jno
outsb
mov
lcall
sbb
and
and
and
mov
test
xor
add
stos
pop
les
inc
fisttpll
jge
or
and
cmp
adc
das
dec
lahf
stc
push
test
mov
mov
sahf
inc
add
mov
fbld
out
mov
lahf
and
mov
mov
push
pop
in
vshufpd
cmp
mov
push
or
call
and
mov
loopne
xor
in
pushf
jne
in
pop
fisubs
notl
and
and
ret
mov
popf
sub
push
mov
push
push
fimuls
and
add
inc
xor
jo
pop
out
repz
sub
xor
pop
pop
pop
mov
mov
push
adc
and
daa
addb
lock
fwait
cli
push
push
xor
testb
adc
mov
clc
pop
les
clc
pop
nop
add
add
push
mov
mov
cltd
loope
sbb
cbtw
cmp
xchg
pop
xor
lahf
shlb
bound
mov
mov
sbb
mov
mov
bnd
mov
stos
in
inc
sub
xor
xor
mov
in
arpl
add
jge
push
aaa
sahf
jne
and
out
outsb
mov
or
movsb
fistps
push
loop
inc
xchg
nop
mov
ret
inc
sbb
mov
imul
testl
push
push
adc
push
ficomps
mov
add
inc
add
in
out
mov
cmpsb
roll
push
mov
es
in
jge
enter
xor
xchg
out
es
push
cmc
pop
rorb
pop
out
add
out
cltd
cmp
aaa
sub
cmc
adc
xchg
roll
mov
jbe
lret
inc
cld
xchg
es
push
cmc
jg
dec
xchg
mov
sbb
push
enter
push
jg
cmp
ss
add
sbb
sbb
cmpsb
sti
das
mov
sbb
fsubp
ret
mov
lds
xor
gs
rclb
ds
mov
add
clc
jp
bound
hlt
in
cmpsb
push
pop
cmp
jns
aam
inc
xchg
ds
out
pop
in
cmpsb
push
out
mov
lcall
adc
mov
jne
out
pop
orb
push
bound
mov
rclb
or
xchg
daa
adc
fcomps
inc
and
mov
sub
lret
pop
fidivs
rcl
sbb
cltd
sbb
lock
mov
jns
rcll
mov
mov
pop
jae
xor
mov
add
in
inc
cmc
sti
or
pop
dec
in
pop
add
inc
adc
sahf
sub
pop
sub
mov
inc
shll
inc
push
mov
aam
jle
pop
jb
mov
jge
movups
sbb
fwait
mov
jecxz
clc
and
mov
les
pop
inc
loopne
and
bound
push
jae
inc
add
sti
hlt
inc
and
xchg
lds
xor
add
pop
push
imul
les
or
into
cmc
movsl
add
jbe
add
in
pop
add
bound
xor
xchg
add
add
add
add
faddp
test
add
in
into
shl
and
fisubrs
ljmp
pop
mov
sahf
xchg
mov
add
jp
mov
loope
mov
out
in
jg
shl
dec
in
sbbb
jno
enter
inc
in
lds
mov
xchg
in
lds
es
out
sti
lds
enter
fnstsw
ret
popa
arpl
lcall
pushf
fimuls
push
mov
movsl
in
ret
pop
bound
movsl
xchg
jns
movsl
push
xor
adc
js
movsl
sbb
icebp
xchg
shl
add
mov
xor
or
dec
bound
mov
and
std
and
es
mov
push
add
movsl
cwtl
mov
mov
lahf
frstor
lea
es
movsl
xchg
test
and
sbb
adc
mov
dec
les
dec
inc
jg
out
lahf
sub
adc
inc
inc
mov
add
ficompl
pop
xchg
aam
or
jo
lret
jecxz
sbb
rcll
cmpsb
inc
push
addr16
into
inc
adc
fs
and
lret
rcll
mov
mov
mov
sbb
popa
sub
mov
xchg
in
outsl
push
mov
mov
adc
mov
xchg
mov
daa
mov
xchg
sbb
and
push
jno
and
xor
xor
hlt
or
pop
mov
jae
add
and
mov
xchg
xlat
rcrb
ficompl
or
push
fstl
mov
mov
data16
lret
and
push
inc
out
jae
mov
pop
sbbb
xchg
xor
js
add
pusha
outsl
andl
negl
or
or
int3
or
fmul
fcoms
test
sbb
add
movsl
lret
icebp
fcmovnb
cmc
mov
mov
dec
je
push
add
cmp
cwtl
push
xchg
push
mov
mov
out
jne
arpl
test
lcall
je
in
std
xor
pop
mov
aad
mov
clc
and
pop
fsubrl
pop
xchg
into
mov
mov
mov
mov
xlat
loope
arpl
cmp
shl
xchg
add
lret
subb
dec
mov
insb
lcall
lods
mov
cli
lods
push
iret
imul
js
fisubs
psubq
in
sbb
fcomps
outsb
or
sahf
add
movsb
jno
mov
in
fldenv
adc
and
test
data16
push
inc
sbb
mov
mov
cld
and
and
sbb
and
dec
or
xor
lds
lds
jae
xchg
xor
mov
ljmp
cmpsb
cwtl
push
xchg
rsqrtps
lds
repnz
je
ja
inc
stc
shrb
push
mov
dec
lahf
xchg
imul
mov
pop
imulb
sbb
push
or
lahf
movsb
dec
loope
decl
ds
or
aaa
dec
mov
arpl
or
bound
out
dec
outsl
jae
cmp
imul
jno
inc
test
add
sub
or
dec
xchg
mov
inc
arpl
inc
adc
int3
popa
sub
dec
stc
or
fsub
xchg
sahf
inc
and
and
mov
mov
out
xor
xchg
xchg
and
imul
xchg
aam
sbb
fcoms
fiadds
mov
call
mov
lods
sub
push
adc
sbb
shll
add
push
pop
ret
sahf
mov
pop
aam
in
push
dec
cmp
data16
mov
addl
jb
mov
mov
inc
add
mov
jo
movsl
lds
in
adc
in
stc
cmp
movsb
fimuls
pop
jbe
xchg
in
add
pusha
roll
push
data16
xor
mov
sbb
jecxz
xchg
ficompl
cmpsb
add
fwait
sub
movsb
fsubrl
sub
sahf
sahf
mov
sub
bound
sub
ss
iret
scas
push
jne
add
push
movsb
test
xor
out
inc
or
pusha
adc
adc
gs
in
movb
lcall
mov
sbb
cmp
xchg
mov
mov
lret
jo
cs
push
sub
cltd
add
or
or
cmpsb
jbe
cmc
and
nop
repnz
dec
imul
mov
ja
or
pop
ljmp
and
cmpsb
push
pusha
dec
and
test
loope
add
mov
repnz
data16
movl
aad
sub
clc
mov
cltd
dec
insb
sbb
push
mov
lds
sahf
out
push
dec
adc
cmp
cmpsb
addb
jbe
mov
lods
mov
jl
pop
outsl
xchg
ds
or
movsb
popf
and
fwait
jmp
pop
mov
adc
xchg
add
add
pusha
loope
adc
inc
ret
les
in
ret
jb
mov
xchg
cmpsb
insb
inc
dec
out
mov
das
lret
jecxz
cld
xchg
fsubs
inc
and
mov
xchg
pushl
mov
pop
sbb
in
lret
in
and
arpl
sti
push
sbb
pop
jecxz
xor
movsb
bound
push
js
jle
stos
jbe
adc
es
or
mov
sub
movsb
push
mov
mov
pop
cmp
lods
mov
movsb
and
movsl
sub
ret
mov
jecxz
cmp
stos
push
mov
loope
xor
or
mov
push
or
movsl
dec
adcb
add
and
sub
pop
icebp
lds
in
insl
rorb
xchg
das
mov
lret
bound
cmp
mov
ficoms
mov
push
inc
roll
mov
outsl
inc
mov
adc
call
pop
mov
cmp
inc
js
cwtl
jbe
call
das
in
ror
lcall
inc
or
push
ficompl
sub
ss
test
popf
jnp
push
jmp
es
xor
mov
stc
dec
push
adc
push
sub
push
movsl
movsb
or
push
subb
dec
jbe
xlat
inc
mov
ret
mov
cld
or
arpl
xor
inc
jge
mov
pop
sbb
icebp
push
pop
test
gs
push
dec
leave
dec
lahf
lods
cs
cmpsb
lahf
jb
je
jnp
test
jmp
pop
pop
out
pusha
pushf
dec
lcall
dec
xor
fimull
and
push
push
cltd
sbb
gs
mov
jmp
add
sahf
fdivr
pushl
inc
mov
aaa
and
mov
cmp
std
dec
cmpsb
into
and
sti
push
sbb
fdivs
push
pop
mov
aad
cmp
jp
add
pop
sub
cmpsl
mov
pop
sbb
cmp
lahf
sub
sbb
shrb
ret
push
push
sti
divb
sbb
js
sti
sbb
push
ja
add
jl
push
in
jo
push
push
test
adc
lahf
adc
push
or
dec
mov
xor
lds
mov
negl
add
fdiv
ja
loop
pop
imul
js
popf
sub
adc
and
xchg
ds
rcrl
jmp
mov
cmp
mov
push
pop
loop
out
sbb
jle
mov
cmpsl
mov
xchg
negb
inc
and
leave
adc
pushf
outsl
mov
lahf
rcll
and
lahf
jno
rcrl
cltd
jmp
lea
cmp
iret
and
mov
popa
negb
cmc
and
adc
subl
aam
or
mov
xor
push
rorb
fs
lcall
loop
cmp
pop
cmc
fs
ja
dec
mov
dec
jne
dec
scas
fcomi
out
mov
push
push
pop
adc
movsl
add
xchg
sbb
and
jbe
pop
cmpsb
adc
inc
lahf
pushf
mov
ret
push
test
mov
sahf
push
sbb
scas
push
dec
movsb
fbstp
test
push
push
testl
mov
mov
ret
and
in
add
dec
aas
into
loopne
add
loop
xor
add
sti
test
clc
sub
shlb
test
xchg
pop
mov
jbe
pop
je
data16
movsl
fiaddl
inc
sbb
jno
inc
movsl
stos
repnz
xor
mov
aas
jne
stos
cwtl
pop
dec
or
pushf
into
mov
pop
sub
inc
pop
in
icebp
movsl
cmp
push
sub
sahf
movb
cmpsb
rcr
dec
cwtl
std
icebp
jle
and
pop
mov
push
xchg
jg
in
push
sub
jl
fistpll
adc
aas
xchg
movsb
repz
inc
and
xchg
ss
xor
xor
int3
adc
loopne
fdivl
inc
je
dec
and
sbb
int3
lahf
jb
movsl
mov
xchg
mov
mov
ss
inc
mov
insb
xor
xor
jns
out
pop
pop
lret
add
popf
cmpsb
ds
xchg
fdivs
add
fisubs
in
add
inc
pushf
lods
in
and
lret
cld
cmp
inc
mov
pushf
leave
jle
dec
jae
and
std
aaa
dec
shlb
mov
jnp
add
cmc
movsb
test
xor
rcll
sbb
inc
stc
inc
mov
ja
add
pop
sub
inc
xchg
cltd
jno
gs
ljmp
pop
pushf
das
enter
shlb
inc
int3
or
pop
mov
xor
dec
xchg
adc
push
hlt
cmpsl
and
lcall
xor
jl
aad
lock
push
and
gs
sub
mov
push
fwait
out
inc
and
mov
je
popf
clc
pushf
popa
dec
xchg
mov
daa
jns
adc
xchg
out
mov
dec
leave
lea
push
mov
xchg
push
ret
hlt
into
bound
jl
cltd
mov
jae
dec
std
fwait
sbb
push
and
jno
out
imul
addl
iret
mov
xchg
xor
sbbb
roll
loope
stos
push
jnp
faddl
and
out
xor
lds
cmpsb
adc
pop
test
popf
rcrl
lret
mov
pushf
imul
xchg
jne
sbb
dec
sub
sahf
mov
shll
pop
sbb
mov
es
sahf
sahf
fmul
arpl
jmp
shlb
cmpsb
adc
dec
arpl
sarb
push
xor
jecxz
dec
cmp
pop
xchg
sub
cmp
shrb
js
adc
mov
sbb
sub
lds
ret
sbb
sbb
push
xchg
stos
mov
and
lahf
add
nop
pop
sbb
orl
repnz
out
andl
add
cmpl
jb
int
cmp
jae
push
aam
ret
sbb
bound
add
dec
mov
mov
in
xor
frstor
push
ficoms
in
cli
and
sbb
lahf
js
dec
cmp
mov
sbbb
dec
add
sti
mov
mov
push
inc
xlat
xchg
adc
jge
enter
cmp
and
ja
push
jg
ss
and
nop
repz
inc
ja
dec
push
jns
nop
fldenv
xchg
pop
or
jg
dec
out
xchg
or
jbe
mov
jle
and
shlb
mov
sub
stos
ss
pop
sahf
pop
push
or
dec
cmp
dec
pop
inc
loop
mov
jg
out
add
mov
inc
inc
addr16
repnz
mov
jne
xchg
data16
andb
pop
fisubs
add
pop
pop
movsb
mov
cmpsb
sub
inc
add
mov
out
insb
ja
inc
mov
fwait
pop
adc
mov
and
lcall
add
push
cld
inc
mov
push
test
pop
and
inc
add
dec
test
into
mov
in
xor
in
or
in
add
add
jnp
dec
ret
lcall
in
pop
add
pushf
stos
in
flds
mov
and
push
inc
sbb
repz
lahf
pop
add
or
ror
ror
mov
std
js
pop
movsl
push
mov
movsl
enter
popf
fists
lahf
jg
pop
movsl
inc
push
fnstcw
mov
iret
dec
mov
mov
push
pop
xchg
fildl
push
mov
gs
in
int3
xchg
mov
sub
scas
mov
loope
push
jae
mov
sub
lret
scas
jns
mull
xor
push
addl
add
mov
arpl
mov
mulb
pop
insb
ror
pop
add
test
jbe
dec
mov
and
rorb
pop
push
test
sub
lock
ret
ds
loopne
inc
addl
js
aas
cmpsb
and
sub
adc
and
add
and
push
in
rcrl
popf
xlat
in
shrb
and
out
mov
sbb
mov
cmpsb
movsl
inc
loope
or
inc
sbb
daa
and
mov
dec
rcrl
sub
sbb
sahf
data16
and
dec
adc
sti
mov
jecxz
inc
es
fwait
aas
sahf
adc
cwtl
clc
andl
and
lcall
inc
dec
xchg
popf
adc
sbbb
sti
fistpl
cmc
test
mov
cmp
es
add
pusha
cwtl
xor
scas
and
push
inc
movsb
fildll
lcall
rorb
in
roll
or
and
in
cli
mov
mulb
xchg
les
dec
push
mov
jb
adc
ds
pop
cmc
mov
jo
or
hlt
or
les
sti
cs
ja
cmpsb
mov
repz
pop
mov
jg
push
mov
sbb
mov
pop
test
xchg
sbb
mov
push
jo
adc
popa
gs
std
rol
js
and
inc
fistps
and
popf
or
mov
or
push
fiadds
leave
push
jb
insb
mov
pop
pushf
or
popf
test
repz
xor
ljmp
pop
adc
int
push
push
cld
lea
mov
inc
adc
xchg
mov
mov
xor
xchg
mov
es
xchg
inc
and
rcrb
in
inc
into
pop
push
cltd
shlb
xor
sbb
cli
jo
push
mov
dec
and
xor
ljmp
popf
push
add
and
or
js
dec
int3
les
leave
fidivrl
bound
pop
mov
adc
or
xchg
pop
cwtl
movsb
ss
mov
int
popf
push
cld
sbb
in
xchg
clc
and
and
mov
xchg
stos
mov
mov
fsubs
jns
pop
add
mov
loop
daa
mov
push
fs
mov
data16
add
loopne
jno
mov
popw
mov
dec
int
dec
jp
sbb
xchg
mov
add
adc
into
xchg
lds
pop
and
pop
insb
sahf
push
jo
dec
jo
jne
xor
fstps
fnstsw
fnop
in
mov
leave
test
outsb
fisubrs
mov
sahf
stc
or
sbb
pop
movsb
xchg
inc
jge
pop
mov
out
sub
cmp
or
xchg
mov
sbb
jnp
xor
pop
loope
mov
andb
mov
rclb
es
ljmp
pop
lods
addr16
xchg
sbb
adc
mov
outsl
cmpb
pop
mov
mov
lcall
loope
insb
jne
sbb
inc
hlt
add
mov
fdivrl
and
xchg
adc
ret
loope
jle
movsb
repnz
lds
mov
lret
cmp
sbb
add
cld
es
call
stos
rclb
in
xor
xchg
xor
xor
sti
adc
outsl
add
bound
pop
popf
ljmp
pop
and
add
ficoml
or
cld
or
mov
add
test
scas
mov
dec
sub
or
add
mulb
and
and
das
or
xchg
sbb
adc
das
lods
int
add
sub
lahf
xor
xchg
mov
test
jge
loop
and
es
neg
sarl
sbb
mov
mov
sub
les
sti
sub
xor
in
mov
fwait
add
sbb
aad
sub
pop
or
push
jnp
and
popa
inc
nop
push
add
jb
sbb
fsub
inc
jnp
adc
fwait
inc
mov
outsb
sti
shlb
cwtl
popa
repz
iret
ficoml
or
push
push
xor
sahf
lcall
add
and
stc
cmc
add
add
push
cwtl
fstpl
das
loopne
mov
mov
inc
push
dec
movsl
mov
fwait
dec
inc
popf
dec
int
add
daa
sbb
rcrb
jo
jp
xchg
inc
loopne
pushf
test
in
insb
test
int
fisubl
ret
cmpl
fists
jmp
pop
jbe
addr16
das
fcmovne
lahf
dec
mov
popf
daa
pop
rcrb
mov
out
add
icebp
or
mov
lods
xor
jbe
xorl
stc
and
jne
pop
sbb
fsubs
xor
push
stc
js
lcall
xor
into
jb
pop
cmpsl
add
in
fsts
add
jle
xchg
shr
stc
add
xlat
jb
test
stos
cltd
sbb
adc
dec
rolb
sub
fcomp
popa
es
in
and
and
add
jmp
jecxz
test
cmc
fwait
arpl
and
and
and
loopne
jbe
ret
push
shlb
pop
mov
repnz
sub
jp
add
adc
sbb
or
jbe
ds
push
daa
testl
sbb
add
fucom
and
imul
ret
enter
and
popa
shl
gs
mov
popa
xor
sbb
sti
inc
lds
or
es
cld
jl
fiaddl
push
movsl
lods
xchg
in
sub
add
test
xor
fcmovu
sub
add
gs
fwait
cmpsb
inc
repz
js
mov
dec
sbb
rcll
leave
and
cwtl
inc
jle
mov
pop
inc
add
push
pop
and
pusha
add
mov
test
add
js
pop
xchg
xor
push
mov
dec
sub
inc
mov
fldt
orb
add
pushf
imul
mov
arpl
xor
add
cmpb
or
inc
and
xor
fwait
xchg
rcrb
aad
popa
pusha
aam
cmp
in
add
mov
jecxz
lret
inc
mov
cmp
xchg
lret
imul
jecxz
mov
test
mov
subb
jae
and
adc
neg
lock
jp
lods
test
ret
inc
rolb
inc
jo
push
jb
in
leave
add
inc
ret
enter
ficoms
and
xchg
insl
jecxz
bound
jo
sbb
ret
fsubl
in
ds
mov
jne
push
mov
clc
les
inc
les
ret
inc
out
sbb
frstor
adcb
and
std
ret
and
loopne
out
fadds
push
gs
push
mov
inc
dec
pop
xchg
rcr
jno
mov
and
stos
dec
sbbb
push
cltd
xchg
lret
jnp
inc
das
mov
outsl
out
xchg
pop
mov
lods
leave
ret
out
gs
neg
cwtl
jb
jae
addr16
jge
mov
nop
gs
and
mov
mov
sahf
in
sbb
cmp
push
sbb
mov
iret
add
fnsave
adc
sbb
aaa
mov
enter
mov
push
cmp
push
fcoml
divl
and
mov
adc
inc
push
je
mov
fnstcw
and
jl
stc
cmp
push
add
xchg
lahf
sbb
push
or
in
sbb
imul
or
push
movsb
cli
and
or
cltd
in
out
in
cwtl
push
test
loope
gs
out
ret
in
out
imul
fadd
xchg
les
push
std
rclb
jb
lahf
aaa
roll
mov
ljmp
cmpsl
jbe
movsb
stos
pop
push
inc
pushf
mov
or
add
add
add
loopne
jecxz
jmp
lods
daa
popf
adc
sbb
sbb
nop
add
add
fwait
dec
push
mov
add
fwait
jnp
aad
jg
lret
orl
mov
ficoml
mov
ds
movsb
arpl
push
sub
jne
js
mov
add
xchg
jl
scas
andb
mov
pushf
mov
jae
loope
les
in
lock
add
mov
cmpsb
mov
ret
or
and
in
push
lds
js
pushf
fsubr
repz
xchg
cmpsl
in
es
icebp
leave
pop
dec
aad
push
jnp
and
mov
mov
ficomps
stos
faddl
js
inc
ss
sbb
decb
cld
mov
inc
clc
or
cmp
dec
pop
jae
or
in
out
push
push
and
xchg
xor
sbb
lds
filds
sbb
inc
and
movsl
mov
mov
xchg
ret
nop
test
movsl
popa
and
out
cmp
repnz
cltd
les
test
jno
and
push
test
sub
xor
fdiv
loopne
jo
ret
cmp
mov
mov
or
loope
jbe
push
ds
js
jo
mov
test
add
cmc
cltd
add
mov
cmp
fwait
mov
xchg
stos
loop
int
push
inc
or
fdivrl
xchg
fdivp
pushf
xor
andl
aam
xchg
std
subb
mov
ret
pop
xchg
fildl
test
pop
out
jbe
pop
lcall
and
pop
add
mov
inc
in
add
mov
enter
and
mov
sbb
movsl
out
and
cwtl
pop
jp
movsb
mov
add
fiadds
sahf
xchg
push
ds
sbb
xchg
out
add
or
cltd
fcomps
mov
add
mov
cltd
xchg
mov
cmp
jp
into
add
inc
and
sbb
out
pop
mov
fidivl
es
out
pop
pop
xchg
push
call
ret
sahf
movsl
add
in
pop
xchg
mov
or
imul
jns
xchg
loopne
arpl
xchg
xchg
xchg
xor
fwait
push
in
sub
cmc
sbb
mov
cmp
adc
and
cwtl
pop
sti
pop
scas
xchg
loopne
arpl
add
movsl
out
mov
pop
sbb
out
pop
or
rcrb
pop
mov
cmp
sbb
ficomps
xchg
mov
jne
movsl
or
pop
insb
or
ret
or
push
out
lret
and
cltd
out
add
or
popf
loopne
lahf
mov
cmp
push
sub
mov
hlt
out
loop
push
call
xchg
xchg
xor
xchg
push
in
sub
cmc
sbb
pop
repnz
xor
pop
xchg
shlb
imul
into
add
inc
and
sbb
out
and
pop
cmp
ss
add
pop
shl
arpl
xchg
fwait
xchg
xor
mov
push
dec
ds
push
call
sub
pop
or
fsubs
rorb
mov
push
pop
xchg
pop
cmp
ss
mov
test
cmpsl
push
es
outsl
dec
mov
rcrl
dec
dec
cmp
test
pop
push
add
fcomps
addb
inc
adc
add
mov
fincstp
push
sbb
inc
push
inc
xchg
jl
jle
dec
push
repnz
push
pop
cmpsl
sub
pop
inc
icebp
inc
mov
movsl
cltd
sbb
xor
push
mov
dec
push
gs
cltd
inc
sbb
sub
int3
jecxz
cmp
xor
pop
mov
cmpsl
addr16
sub
out
pop
mov
addr16
adc
cltd
adc
data16
pop
sub
dec
or
pop
pusha
in
pop
daa
ficomps
movsb
das
es
or
sbb
add
inc
and
add
inc
rcr
shll
or
push
mov
lret
pop
mov
add
idivl
lds
and
and
in
cmpsl
cwtl
outsl
aad
out
mov
cmpsb
jecxz
mov
push
fildl
inc
inc
add
fcomps
mov
mov
aam
fwait
pop
mov
and
fwait
add
lea
mov
stos
lahf
les
stc
popf
test
mov
push
movsb
add
aas
and
xchg
loopne
push
pusha
pop
mov
inc
push
xchg
nop
add
sub
adc
ret
lcall
adc
mov
sbb
rclb
out
push
push
jmp
mov
loop
lods
int
lret
lahf
cmp
aas
outsl
sbb
xchg
inc
pop
movsb
test
shrb
sub
jae
push
loop
addr16
call
mov
sub
xorl
lds
nop
gs
mov
mov
sbb
and
and
int
cs
and
adc
mov
or
sbb
cmp
sbb
add
outsl
pusha
fidivs
push
nop
sahf
jnp
das
lret
ret
outsb
test
push
rcr
in
xor
out
dec
dec
lea
out
push
inc
and
scas
hlt
mov
in
xchg
sub
mov
addr16
or
push
aad
and
inc
adc
push
aad
jle
push
jns
aad
push
mov
inc
mov
lea
mov
outsl
cmovle
mov
sbb
ret
adc
push
add
int
das
inc
cli
arpl
add
lds
out
mov
and
mov
icebp
ret
sub
scas
rol
pusha
pushf
dec
fbstp
xchg
icebp
mov
inc
or
jne
cwtl
ret
das
sbb
es
sub
and
sub
mov
sahf
sub
lds
mov
xchg
xchg
mov
das
pop
ds
pop
arpl
in
fists
imul
dec
or
jb
into
push
xchg
dec
int
fistpll
cmpsl
mov
or
ret
scas
roll
in
test
mov
movsb
xchg
sub
pop
add
sbb
fisubl
inc
fst
mov
das
pop
arpl
inc
and
mov
andl
lds
cs
lret
outsb
xor
imulb
push
jmp
and
xor
or
pop
fstp
ja
xchg
cld
repz
lds
cmp
aad
ret
int
xchg
dec
popa
jecxz
cmp
fdivs
pop
mov
hlt
cmp
xchg
mov
das
mov
mov
aaa
adc
stos
cmp
addb
xlat
pop
std
addb
in
and
pop
mov
lds
cmp
in
in
pop
dec
mov
sub
or
scas
fmuls
mov
imul
or
loope
pop
inc
imul
bound
cmpsb
xchg
addb
jl
loopne
ror
add
adc
mov
je
cmpsl
arpl
and
xchg
das
xchg
mov
mov
dec
outsb
jns
pop
or
clc
aam
in
das
cmc
aas
jg
xchg
es
mov
icebp
in
inc
jne
es
dec
icebp
inc
and
dec
xlat
hlt
jg
test
cs
fmuls
mov
pop
sub
icebp
fimuls
pop
or
in
pop
cmp
and
fdivr
jmp
test
fidivs
jno
clc
or
sbb
jbe
jp
xchg
fdivp
jg
sub
mov
ret
ficompl
stos
mov
mov
inc
push
ret
push
add
xchg
add
xchg
adc
inc
pusha
jp
pop
imul
aad
inc
push
data16
dec
idivl
mov
sbb
lock
test
mov
cmp
mul
cld
jmp
pop
mov
xor
rcr
hlt
and
lea
sbb
jle
add
or
cmp
sub
enter
orb
lds
ljmp
jae
lcall
and
out
xchg
lea
lret
cli
jle
inc
shlb
in
sub
mov
add
ffree
add
ss
in
fisubs
inc
lds
das
sahf
and
and
lds
movsl
ret
jmp
mov
shlb
xchg
lahf
iret
pop
xchg
push
pop
insb
fscale
push
and
adc
nop
push
rcr
jae
sub
mov
ret
lock
fldt
cmc
and
inc
cwtl
push
cmc
sbb
lahf
fmuls
ret
test
es
daa
mov
loope
mov
shrb
mov
ret
fistps
cmp
jns
cwtl
ret
sub
pop
negl
jo
fwait
negb
cmp
sbb
xchg
xchg
shll
ret
add
push
push
jbe
lods
insb
pop
shlb
pushf
int3
insl
mov
into
loope
fcomp
inc
jg
sub
xlat
jne
mov
nop
push
xor
enter
ret
mov
sbb
or
fiadds
test
mov
mov
add
and
sbb
icebp
test
push
sahf
mov
mov
jb
mov
das
mov
dec
pop
add
sti
inc
cmpsl
dec
add
and
test
dec
xor
mov
andl
xlat
jmp
aad
dec
inc
repnz
mov
ss
jl
rorl
jbe
adc
and
ret
mov
divb
addl
lds
lcall
stos
mov
jne
scas
filds
mov
repz
mov
dec
adc
and
rcrb
cmp
mov
fiadds
and
lds
inc
cltd
cmp
fcomip
es
daa
test
in
inc
ret
ficompl
sbb
mov
xchg
mov
les
cmp
mov
mov
adc
add
jnp
adc
aad
ljmp
loop
and
xchg
push
and
cmpsb
adcb
sub
aas
push
mov
jmp
sbb
mov
std
add
adc
gs
rcl
sub
sbbb
cmp
mov
lret
ret
add
ret
sbb
cmpsb
mov
ss
movaps
push
push
out
movsl
sti
imul
and
jae
xor
stos
xchg
in
and
sarl
js
pop
in
lcall
sbb
jno
popl
icebp
mov
push
mov
sahf
xchg
movsl
xor
lds
frstor
jge
gs
and
dec
outsl
leave
mov
and
mov
mov
and
add
pop
ljmp
popf
call
jecxz
and
add
or
xchg
and
push
push
bound
loope
sub
xchg
push
add
sub
add
dec
pop
scas
sbb
push
and
arpl
dec
fadd
repz
pop
dec
inc
mov
in
jg
mov
pusha
adc
arpl
ds
ret
cli
movsl
movsl
test
andb
push
adc
es
xchg
adc
ficompl
mov
mov
cmpsb
data16
les
and
imul
sbb
sub
inc
dec
pop
pop
or
ljmp
fstpt
sbb
inc
sbbb
test
push
push
ret
js
add
fsubs
xchg
fisubs
push
movsl
in
pop
push
add
jge
lret
out
je
mov
jg
push
je
mov
sbb
jbe
sahf
int
mov
in
add
ret
jno
or
pop
push
and
int3
aaa
add
add
push
jns
aam
loope
push
pop
mov
nop
and
les
test
push
out
ror
lcall
gs
sbb
in
lods
dec
fiaddl
and
and
push
mov
push
cli
out
mov
roll
inc
jno
idivb
or
sahf
lahf
adc
cmp
test
lods
std
adc
dec
jecxz
lock
addl
mov
push
inc
push
and
xor
in
push
adc
test
add
fs
jge
cltd
in
mov
cltd
mov
pop
jge
inc
add
int
gs
xchg
jge
cmpsl
stos
pop
and
test
stos
mov
aaa
or
insl
mov
adc
adc
push
loopne
push
insb
ret
lahf
jbe
data16
push
shlw
cmp
sub
mov
gs
xchg
push
sbb
decb
pusha
in
jne,pt
jbe
pcmpgtb
sbb
and
aam
or
fldl
push
fsubs
fldenv
fcomps
fdivrp
adc
sbb
add
lcall
and
jle
in
in
add
push
cmpsb
xchg
cltd
lods
mov
imul
mov
mov
and
add
sbb
xor
frstor
jecxz
sbb
mov
inc
and
pop
enter
lahf
popf
iret
mov
mov
xchg
loopne
icebp
jne
dec
dec
jp
addr16
xchg
lds
jno
loope
mov
lcall
adc
push
rol
adc
cmp
mov
jae
cmpsb
xchg
sarl
lock
shlb
jl
out
out
rorb
fimull
cld
cmp
adc
les
mov
out
jne
cmpsb
push
arpl
mov
inc
loop
out
xlat
cld
xor
push
inc
ret
inc
std
mov
sub
pop
jmp
pop
ss
cmpsb
data16
jle
jb
xchg
mov
xor
and
inc
aad
cld
pusha
out
mov
popf
sbb
jle
popf
insb
push
adc
push
vpmulhuw
out
fwait
in
add
dec
add
push
addr16
cmpsl
testl
ds
mov
push
es
pop
fwait
sbb
popa
in
daa
loopne
jg
mov
inc
ja
pop
test
and
mov
push
mov
and
mov
jne
imul
and
and
mov
movsl
pop
cmpsl
sbb
sub
fists
cmpsl
lahf
adc
sub
pop
loopne
adc
push
mov
mov
adc
out
les
and
mov
push
ja
cld
adc
cmpsl
lods
add
pop
lret
pop
in
pusha
lcall
lahf
popa
xchg
lret
dec
pop
rcrb
add
lret
sbb
sub
stc
push
popf
push
and
in
jle
in
and
stos
push
sahf
or
shl
jp
nop
dec
rcll
stos
adc
jns
fwait
sbb
movsl
ljmp
mov
aaa
repz
std
xchg
movsl
pop
icebp
scas
jmp
mov
loopnew
and
inc
inc
rolb
dec
adc
add
mov
dec
sub
out
mov
jp
xchg
push
arpl
andb
and
inc
mov
adc
into
or
rclb
pop
std
xor
adc
cwtl
and
jp
fimull
test
or
lea
es
ja
out
sub
cmp
and
dec
pop
lahf
jb
jne
mov
xchg
push
and
mov
ficoml
pop
in
mov
mov
and
movsl
into
cmp
es
sbb
inc
jae
repz
push
add
adc
xchg
xlat
mov
mov
xchg
mov
aaa
jmp
xor
jmp
or
sbb
fimull
pop
and
mov
adc
in
jb
les
fisubrl
movsb
pop
out
mov
es
cmp
out
arpl
push
les
xchg
aas
jbe
and
inc
push
pop
stos
addb
add
out
rcrb
cmpsb
cltd
add
sbb
inc
and
mov
pop
pop
loop
sahf
xchg
scas
sub
out
xchg
add
dec
dec
hlt
pushf
arpl
pop
jb
aam
jecxz
jnp
mov
cmpsb
sahf
mov
inc
jge
inc
jecxz
out
push
in
test
cmpsb
loopne
repnz
sub
fbld
das
mov
loopne
movsb
sbb
xor
mov
xchg
iret
mov
dec
cmpsb
cmpsb
push
sbb
bound
sub
xchg
sub
cli
mov
test
push
test
pop
or
cs
or
sbb
sbb
sbb
and
int
xchg
sbb
out
cli
xchg
mov
adc
xchg
and
repnz
out
test
pop
sbb
jno
xchg
sub
xchg
push
cwtl
cmp
popf
mov
sub
xchg
inc
sub
mov
cmp
mov
fwait
in
mov
jnp
cmp
mov
lea
or
push
popa
shr
xchg
jmp
insb
adc
sbb
mov
cli
sbb
lahf
or
ja
push
sbb
mov
and
and
clc
fiaddl
mov
or
outsb
pop
xchg
push
insb
or
stc
ret
push
push
js
mov
push
pusha
dec
shlb
outsl
dec
and
arpl
shll
mov
xchg
mov
xchg
fisubs
pop
adc
push
xor
jae
jnp
xlat
mov
sahf
push
iret
add
es
mov
pusha
mov
rolb
jecxz
and
lock
cmpsb
aad
rcll
fsubs
or
or
popw
jae
filds
and
inc
mov
inc
ds
sbb
shlb
andl
movb
nop
arpl
xchg
mov
adc
lahf
jmp
in
xor
imul
mov
push
enter
data16
shll
repnz
nop
in
fbld
in
push
cld
cld
outsb
add
xchg
out
aad
in
popa
xor
leave
mov
sub
call
addl
push
inc
push
jg
sti
mov
inc
in
test
lods
test
lret
sbb
inc
mov
sbb
ret
sti
stc
push
mov
xor
jns
mov
add
cmpsb
cmpl
clc
nop
xchg
jb
push
imul
pop
mov
push
scas
es
repz
add
mull
fisubrs
xchg
sbb
int
gs
leave
push
insl
loopne
cmpsb
ret
or
mov
out
rcr
pop
rolb
inc
arpl
nop
addr16
sbb
popf
fsubrs
mov
incl
out
imul
repnz
pop
jmp
and
pop
dec
int3
mov
jle
pop
and
lcall
and
mov
add
in
shl
movb
icebp
and
fisttps
push
add
ret
sbb
sub
mov
ffree
sub
xchg
cmp
add
and
jp
mov
mov
jbe
ds
mov
test
clc
sbb
scas
push
mov
mov
ljmp
sbb
mov
ret
testl
cmp
lock
sub
in
mov
and
push
je
daa
jecxz
clc
jno
aaa
fldl
mov
sub
sbb
movsl
xchg
test
arpl
xchg
shr
out
mov
fimuls
pop
cs
cmpsl
int3
les
xlat
mov
and
sub
scas
cmp
cmpsb
in
and
mov
in
cmc
inc
pop
mov
testl
sahf
movsl
cltd
pusha
mov
popf
jle
maxps
or
add
fidivs
addb
fucomip
daa
cs
mov
es
mov
and
jge
fucomip
sbb
xchg
sahf
jge
shlb
mov
push
xchg
cmp
into
cld
and
fcompl
mov
jo
ret
mov
leave
inc
test
push
pushf
adc
adc
cs
add
fisttps
add
imul
jl
mov
pop
xchg
in
cld
cmp
mov
jb
cmp
test
decb
imul
jmp
inc
outsb
fs
in
jno
push
pop
sub
out
fistl
in
shll
in
mov
test
jns
lret
lds
mov
cmc
lea
scas
cld
movsb
pop
inc
adc
iret
fisttps
in
call
and
sbb
movsb
push
push
inc
cmp
jns
mov
fs
loopne
loop
out
mov
shlb
fisubrs
in
sbb
adc
xchg
push
xlat
sbb
mov
js
pop
arpl
lahf
sub
cmpsb
xor
mov
mov
das
stos
adc
xchg
add
lahf
mov
push
and
les
cmc
sbb
pop
mov
cwtl
xchg
or
das
sbb
test
ret
ds
jle
and
inc
xchg
lret
and
add
or
movsb
lret
scas
or
adc
add
push
sbb
add
sbb
sbb
mov
pop
adc
and
call
mov
addr16
in
and
cltd
dec
sbb
enter
es
loop
push
call
ret
mov
push
dec
and
jle
pop
pop
out
lret
push
mov
es
loop
push
call
ret
mov
push
dec
and
jle
popf
pushf
mov
push
enter
and
and
call
mov
dec
sarb
or
push
out
lret
push
add
add
dec
sbb
mov
outsb
sbb
movsb
push
adc
and
pop
and
xchg
ds
mov
in
pop
mov
idivl
hlt
dec
loop
push
call
ret
mov
push
repnz
hlt
sbb
pop
sbb
ds
cmc
push
enter
and
push
call
and
out
in
and
dec
sbb
sub
add
dec
sbb
push
movsb
call
and
sbb
cmc
push
mov
and
and
lret
dec
or
shll
mov
movsb
mov
push
and
add
adc
leave
test
sahf
sbb
push
xchg
sbb
push
sbb
add
push
mov
and
push
hlt
and
and
add
push
dec
sub
mov
movsb
or
dec
loop
push
cwtl
xchg
adc
cmc
adc
in
lcall
or
sbb
lock
jge
lret
int
outsb
and
push
xor
rorl
and
dec
loop
inc
push
and
or
and
ret
sub
fstpl
adc
pusha
and
je
test
push
leave
dec
int
push
sarl
aad
push
fstps
shrb
aad
sub
aad
xor
repnz
aad
xor
aad
cmp
cli
sarb
aad
cmp
aad
inc
and
lcall
push
daa
call
add
add
inc
add
add
add
out
sub
jmp
add
in
add
add
add
add
add
add
add
cmc
add
add
add
add
and
adc
or
repnz
xor
cmp
cli
lds
cmp
lds
lds
add
inc
lds
call
bound
in
bound
fcoml
or
push
in
adc
clc
sbb
push
jg
xchg
fmuls
cwtl
or
push
sbb
xlat
adc
sbb
push
sbb
cli
cmp
fcmovb
push
cli
pop
fidivrs
jnp
mov
or
mov
jbe
pop
outsl
dec
jb
xchg
ljmp
sbb
jnp
cmp
pop
data16
inc
and
les
sbb
fnsave
mov
xchg
cltd
movsb
ffree
push
mov
in
ret
cmpsb
cmp
sti
cmp
mov
adc
or
sbb
mov
sarl
add
in
movsb
mov
sbb
fwait
lcall
movb
xchg
lahf
mov
les
sbb
xorl
sbbl
xchg
sbb
adc
mov
inc
adc
mov
in
push
frstor
gs
inc
fisubs
push
sbb
push
cwtl
mov
popf
movsb
addr16
pop
pop
xchg
mov
pop
xor
sbb
lret
xor
mov
xchg
loope
jge
dec
movsb
xchg
imul
aam
roll
or
cmpsl
in
jl
aad
jmp
mov
repnz
xor
sbb
int
and
mov
mov
cmpsb
mov
je
mov
into
subb
les
icebp
jp
add
push
repz
adc
and
fistpl
roll
or
mov
xchg
jns
pop
and
addr16
in
aas
sbb
mov
pusha
movsl
pusha
fst
lods
xchg
add
mov
or
mov
cmpsl
mov
aam
jecxz
mov
cltd
sbb
dec
adc
hlt
shrl
outsb
sahf
adc
lock
mov
lods
xchg
or
movsb
stc
je
loope
push
jp
cmpsb
xchg
inc
cltd
sbb
mov
aam
sbbl
fs
jnp
xor
nop
mov
out
in
sbb
adc
and
xlat
test
xor
push
into
sbb
add
xor
sub
jno
add
xlat
add
out
out
out
and
sti
push
ret
sbb
mov
add
mov
hlt
mov
out
in
push
addr16
sbb
mov
sbb
mov
test
push
xor
shlb
fsubl
shll
push
add
sarb
mov
cwtl
xchg
out
enter
fisubrl
lcall
jle
in
and
dec
xchg
in
cmp
lds
aad
and
shl
sbb
aad
sub
sbbb
jecxz
out
lcall
xlat
sub
jecxz
lahf
xlat
sub
and
out
ret
cmpsb
int
mov
pushf
out
rcr
add
movsl
sbb
pop
ds
pop
sbb
inc
inc
and
leave
subl
dec
and
fisubs
adc
jnp
lds
push
loop
pop
or
xchg
cmc
adc
xchg
pop
sbb
xchg
stos
or
add
cmc
adc
adc
push
push
sbb
sbb
sbb
push
and
and
and
es
or
dec
jle
inc
hlt
xchg
mov
cmp
out
push
dec
jle
inc
hlt
xchg
mov
push
cmpsl
iret
jle
inc
hlt
xchg
mov
cmp
out
push
dec
jle
inc
hlt
xchg
mov
cmp
out
popa
hlt
sbb
inc
push
dec
jle
inc
hlt
xchg
mov
cmp
out
push
dec
sahf
out
xchg
pop
loop
inc
push
dec
jle
inc
hlt
xchg
mov
cmp
out
push
dec
jle
inc
hlt
clc
mov
pop
fisubl
enter
mov
cmp
out
push
dec
jle
inc
hlt
loop
jmp
enter
mov
cmp
out
push
dec
jle
inc
hlt
xchg
mov
push
dec
iret
jle
addl
inc
adc
loopne
mov
ret
sbb
loop
mov
sbbb
push
out
cmpsb
decl
inc
out
aaa
sbb
cld
mov
clc
inc
adc
jge
pop
fldenv
xchg
sub
pop
sub
xchg
mov
cmp
jle
push
xor
bound
push
pop
sbb
fcoms
sbb
cmc
inc
add
ja
add
lds
movsl
ja
test
gs
repz
ja
sbb
mov
aam
xchg
loopne
pop
and
in
add
mov
mov
in
adc
outsl
in
xchg
inc
cmp
xchg
inc
lds
les
pop
loop
xchg
leave
es
mov
imul
ret
inc
in
mov
hlt
sub
notb
es
jp
out
in
arpl
push
popa
pushf
lret
sbb
enter
pop
mov
pop
in
or
inc
arpl
xchg
inc
scas
int
sbb
mov
and
jbe
mov
sahf
andb
jbe
fisubs
add
inc
inc
adc
push
clc
add
push
sub
ret
nop
push
add
adc
adc
iret
call
cmp
addr16
iret
out
sbb
test
dec
adc
cmp
sbb
loope
and
xchg
mov
xchg
inc
es
push
adc
ds
xchg
xchg
mov
jnp
add
lds
jbe
mov
and
jmp
add
push
mov
push
push
aaa
and
cmp
and
xchg
jne
mov
mulb
xchg
inc
mov
xchg
fiadds
xchg
repz
mov
inc
out
xchg
out
gs
hlt
inc
and
mov
pop
inc
push
pop
aaa
and
cmp
sbb
and
jmp
cmc
inc
xor
movsb
aas
iret
xchg
inc
pop
cmp
push
dec
es
and
pop
lcall
jl
adc
mov
sbb
inc
and
cmpsb
roll
push
mov
xor
mov
test
into
pop
or
adc
in
fcmovu
or
cmp
cld
lret
lcall
aas
fistps
lahf
mov
lds
cli
out
pushw
jg
aad
sbbb
loop
cmp
rolb
es
xor
scas
push
lds
in
movsl
xor
push
cmp
and
pop
jmp
fisttpll
fildll
inc
mov
sbb
push
in
repnz
lds
jo
lea
sbb
mov
xlat
push
adc
fildll
inc
jg
add
sti
sbb
ja
data16
icebp
shrl
xchg
mov
cmp
jmp
inc
xor
push
inc
push
cli
mov
pusha
pushf
xor
push
adc
hlt
jl
insl
loopne
dec
fxch
das
lcall
push
out
lret
xchg
push
and
gs
ret
nop
adcl
xchg
gs
cmpsb
movsb
jae
xor
mov
into
icebp
out
les
out
stc
shlb
mov
loop
es
xchg
mov
add
insb
sub
fstps
repz
pop
xor
pop
mov
loopne
loopne
and
repnz
fisubs
and
ret
stos
inc
insb
pop
mov
in
aam
in
mov
or
inc
mov
mov
cltd
repnz
mov
mov
fsubs
mov
ds
xor
mov
in
aam
imul
test
loop
xchg
lret
dec
in
xor
shl
stos
lcall
jae
cmp
jmp
dec
fdiv
push
push
pop
xchg
daa
rorb
add
push
es
jne
mov
pop
xchg
lds
mov
push
hlt
shr
jp
push
mov
out
movsl
sahf
sbb
pop
pusha
xchg
lds
fisubs
or
loop
xchg
in
js
clc
mov
jae
nop
in
ficomps
ret
lret
lock
hlt
or
arpl
inc
lods
sbb
test
je
les
aad
js
aas
xor
gs
or
popf
clc
movsl
jb
or
lods
notb
pop
in
and
mov
inc
add
cli
xchg
push
inc
mov
add
repnz
addr16
movsb
mov
sbb
loope
mov
lds
clc
jecxz
in
jmp
ds
sbb
jbe
pop
and
xchg
data16
add
in
cmp
lods
int
movsl
and
in
mov
lcall
xchg
pusha
sbb
mov
test
adc
clc
loop
call
insl
lea
jbe
arpl
pop
neg
mov
data16
xlat
loope
mov
lods
fsubl
fldenv
pop
push
popa
insl
not
aas
add
cmovo
or
jmp
insl
outsb
add
into
push
and
sub
cwtl
and
push
js
sbb
sub
cmpb
clc
cltd
jmp
jle
jl
mov
add
lods
mov
lds
mov
cmpsb
mov
jo
xor
push
das
clc
dec
loopne
push
popa
xchg
cmp
repz
jb
outsl
fdivp
movsl
pop
inc
jbe
push
jp
je
imul
in
xchg
adc
xchg
push
pop
loopne
mov
add
repz
and
pop
mov
in
mov
incb
loopne
incb
jo
lods
push
mov
out
cmp
das
std
dec
and
decb
fmull
or
vxorps
mov
adc
fisttps
mov
gs
lret
and
xor
cmp
cmpsl
in
sarl
and
lret
jge
pop
xor
fprem
push
scas
cltd
or
jo
push
lret
dec
mov
xchg
loope
mov
out
popf
mov
and
stc
add
fisttpl
xchg
and
push
call
out
rorl
cmp
add
xchg
out
cltd
and
jmp
sbb
add
cwtl
jno
repnz
roll
adc
push
adc
cmc
ds
in
push
ret
xchg
ss
movsb
mov
push
xchg
repz
pop
sbb
fistps
mov
lahf
aam
mov
mov
out
fs
add
cmc
cmc
add
mulb
push
icebp
xlat
jb
popl
cltd
cmp
add
addb
push
inc
loope
mov
lods
sbb
and
cltd
lea
cmp
dec
and
or
pop
inc
mov
inc
sub
inc
adc
cltd
mov
mov
shrb
fsubs
add
inc
xchg
je
fistl
xor
adc
cmc
dec
sub
lahf
icebp
pop
aaa
push
lea
fidivs
push
es
or
movsb
pusha
es
lret
loopne
je
stc
mov
jmp
and
pushf
dec
test
dec
jbe
pop
mov
add
leave
divl
cmp
popa
push
test
pop
pop
icebp
in
sahf
out
pop
mov
push
sbb
bound
shll
movsb
das
add
add
add
inc
sti
fldl
or
cwtl
and
xchg
popf
fbld
xchg
mov
mov
jmp
mov
mov
aad
notl
les
lcall
loop
jno
mov
bound
add
or
lahf
lea
sub
mov
fdivrl
jg
outsb
in
je
pop
pop
lret
mov
fidivl
add
xchg
test
hlt
pushf
jl
pop
pmaxub
xchg
add
neg
test
ret
pop
push
scas
adc
jns
push
aas
pop
xchg
cwtl
arpl
mov
fwait
xor
mov
sbb
sahf
fs
arpl
mov
arpl
sub
outsl
cmp
push
dec
mov
pop
mov
xor
pop
sbb
lea
pop
icebp
gs
data16
pop
sbb
dec
lret
iret
xor
xor
xchg
loop
xchg
cmp
pop
sbb
xor
push
aam
push
or
ret
pop
popa
mov
lea
and
push
mov
and
add
aam
jecxz
cmpl
cmpsb
inc
adc
jp
mov
int3
and
fisubrs
and
xchg
mov
jne
out
gs
in
fs
shr
cmpsb
mov
insl
bound
in
push
bound
fs
loop
mov
ss
mov
mov
inc
lods
pop
jle
mov
xchg
pop
mov
ds
add
xor
leave
cs
push
scas
lds
inc
xchg
jne
pop
jecxz
loop
xchg
adc
mov
and
xchg
hlt
mov
popa
ficoms
stos
push
fdivl
mov
xlat
lds
aam
pop
xchg
lsl
pop
inc
sbb
mov
mov
cmpsl
jg
inc
push
cmp
loopne
fs
jae
add
jb
xchg
loopne
cwtl
xor
xchg
or
mov
cmpsb
sbb
cmp
lods
or
jnp
rcrb
repz
push
xor
in
cmp
mov
sbb
or
mov
cld
xchg
cmc
cltd
stc
mov
rorl
out
rcll
pop
xchg
add
arpl
pushf
mov
je
rcrb
loopne
cmp
pushf
jmp
pushf
rclb
xchg
sbb
adc
fbstp
push
hlt
sbb
sbb
dec
mov
pop
jne
mov
lahf
jecxz
lcall
inc
or
fcmove
pop
adcl
inc
mov
jp
je
sub
add
out
arpl
pushf
inc
cmp
pop
call
data16
and
lret
outsb
add
and
cmc
cmp
repz
lahf
cltd
mov
fnstcw
push
mov
bound
mov
in
test
cmp
mov
adc
push
sahf
and
jmp
hlt
fld1
pop
jecxz
popf
nop
pop
push
and
pop
xchg
mov
loop
addr16
movsb
hlt
out
inc
pop
hlt
push
jmp
neg
cmp
xor
jne
icebp
push
xchg
pusha
mov
cmpsb
fcmovnu
mov
out
mov
pop
add
jmp
push
mov
sbb
aaa
or
ss
sbb
icebp
xchg
mov
jnp
cmp
mov
and
pop
mov
push
mov
adc
lcall
jmp
gs
or
mov
and
add
mov
adc
mov
mov
fcomps
mov
add
std
adc
movsb
in
sti
int3
in
jnp
mov
cli
lcall
fs
addr16
insl
fwait
cltd
cltd
ja
pop
inc
inc
xor
test
adc
or
push
test
enter
in
lcall
inc
testb
rcll
inc
pusha
sar
fs
in
mov
push
or
sub
lahf
cmpsl
jmp
adc
mov
out
in
mov
dec
fwait
cmpsb
subb
mov
gs
push
decl
hlt
mov
dec
jg
adc
aas
push
out
test
addb
in
and
arpl
inc
xlat
ret
inc
adc
mov
loopne
sub
lea
ds
dec
bound
cmp
je
inc
adc
psraw
and
test
and
out
sub
in
mov
daa
faddl
sbb
fdivp
add
addl
clc
push
call
add
adc
fildl
in
loopne
push
mov
inc
repnz
mov
mov
or
sti
lds
shrl
adcb
dec
add
dec
andl
movsl
mov
mov
inc
ret
cmp
stos
jns
push
adc
sti
mov
cmp
in
ljmp
scas
cmp
xor
aam
ja
pop
aas
outsl
xchg
in
xlat
and
mov
outsl
mov
pop
sahf
push
mov
sarb
fimull
and
addr16
add
sbb
xor
sahf
test
mov
push
sbbb
fstl
call
lcall
sbb
test
xchg
cwtl
and
sbb
shl
out
test
add
cmp
test
add
sbb
xchg
sarb
lret
mov
fs
fs
outsl
pop
or
mov
ficoml
les
scas
rclb
imul
fildl
in
popa
cmp
sbbl
and
int3
ret
mov
pop
mov
movsb
push
mov
pop
and
mov
loope
imul
aaa
mov
mov
repnz
mov
adc
test
out
cmp
cwtl
and
pop
pop
sbb
fwait
insb
hlt
movsl
pop
add
adc
int3
mov
lcall
xor
push
pop
mov
xchg
cs
xor
or
xchg
pushf
es
cltd
je
inc
jns
fs
adc
and
xchg
ljmp
aaa
xchg
sbb
and
adc
addr16
stc
aam
xchg
sub
and
or
cli
push
jb
andb
inc
lcall
xor
push
sbb
adc
repnz
mov
int3
mov
inc
sahf
inc
jns
fstpl
inc
push
into
mov
movsl
inc
and
roll
sbb
loopne
adc
xlat
gs
aad
add
jecxz
call
and
in
movsb
and
in
test
pusha
and
xchg
loop
cmpsb
jno
jge
int
bound
movsl
jbe
nop
push
arpl
mov
fs
inc
enter
inc
negb
data16
bound
cmp
and
fwait
jle
jne
cmp
adc
pop
adc
fisubrl
insl
pop
push
subb
mov
add
jge
push
mov
adc
xlat
push
out
incl
and
clc
data16
addr16
mov
sbb
mov
and
test
inc
pop
mov
lcall
inc
addr16
cmpsl
xor
shlb
xchg
loop
push
int3
fisttpl
and
and
pop
and
mov
or
add
dec
mov
pop
cld
data16
in
sub
fwait
push
and
cmpsb
push
add
into
xlat
aam
lret
cld
cmp
pop
jge
inc
pop
in
lock
or
ret
pop
sub
aas
std
cltd
pop
popa
out
pop
push
dec
push
jae
inc
test
test
lret
pop
and
out
imul
sarb
sbb
push
out
cmpsb
adc
xchg
shlb
push
test
cmpsb
leave
cmp
out
adc
mov
jo
add
or
add
ja
cwtl
iret
outsb
push
lods
jbe
xchg
inc
or
mov
ret
jp
push
sarl
cmpl
in
add
inc
and
add
mov
iret
sarl
push
pop
push
rol
inc
lcall
dec
fadd
stos
popl
push
fisubs
xchg
mov
mov
adc
adc
xor
or
outsl
sbb
push
add
mov
or
addr16
stos
loope
movsb
and
les
xor
cmp
inc
adc
dec
and
out
lcall
xlat
outsl
push
gs
lcall
fdivs
adc
and
and
mov
and
mov
xchg
sub
gs
fadds
cld
mov
fcom
add
lcall
add
add
in
ljmp
mov
orb
push
leave
add
sub
sub
movl
in
inc
sbb
aas
push
sub
vpaddb
jb
and
inc
rcl
movsl
xchg
adcb
fidivrs
or
fs
es
mov
ret
pop
or
test
movsl
mov
in
pop
fwait
push
repnz
gs
cmpsb
les
cmp
nop
pop
push
inc
sbb
dec
sahf
sbb
mov
sbb
in
cltd
ja
adc
sbb
push
scas
stos
mov
dec
and
add
rcrl
dec
fnsave
jg
ret
inc
loop
pusha
fiadds
jne
aas
push
xchg
aaa
es
into
aaa
xor
add
ret
clc
ret
inc
push
in
lahf
sahf
aas
test
dec
cld
ret
push
es
add
out
in
pop
inc
les
mov
es
aaa
out
pop
sub
inc
test
es
push
fsubp
adc
ret
jbe
inc
push
push
push
push
and
cmpsb
repz
les
sarb
les
pop
test
jge
les
repz
les
les
repz
les
les
jge
rol
dec
jge
les
jge
rol
dec
jge
les
jge
add
pop
sarb
xchg
bound
ffreep
add
lret
add
stos
push
fs
lret
aam
jge
int3
in
jge
nop
in
add
les
les
les
out
add
cmpsb
push
push
push
xorl
push
and
or
addr16
xchg
popf
daa
cmp
and
into
cmpsb
cmc
mov
sub
mov
push
iret
adc
out
pop
pushf
loopne
inc
icebp
xor
mov
cmp
xchg
mov
cltd
enter
cmpsb
adc
pop
mov
cmpsb
lea
movsl
add
jg
imul
xchg
mov
inc
jbe
enter
pop
clc
clc
mov
sbb
dec
cmp
les
stos
divl
repnz
test
sbb
lcall
mov
pop
xor
or
push
sbb
out
stos
lahf
sbb
mov
xchg
ds
push
fstl
jne
dec
dec
outsl
lret
mov
ljmp
in
xchg
push
mov
loope
ss
data16
and
ret
push
je
addr16
jecxz
or
pop
stc
inc
rolb
sahf
mov
lcall
and
sub
cmc
ss
jecxz
loop
adc
andb
adc
ja
adc
mov
inc
sbb
std
dec
pop
push
adc
andb
xchg
add
popa
repnz
mov
pmulhuw
lret
adc
fistpl
bound
and
inc
frstor
pop
adc
cs
sahf
jmp
add
pop
adc
and
push
in
es
hlt
inc
adc
and
pop
jne
push
cmpsl
lods
sub
jmp
jecxz
dec
insl
ljmp
dec
inc
inc
scas
inc
lcall
mov
mov
imul
stos
icebp
cmpsl
ret
or
pop
inc
adc
out
mov
pop
aad
loope
lock
out
inc
daa
mov
insb
inc
testb
aam
shll
in
insb
out
cli
jae
mov
mov
and
mov
in
push
or
and
pop
adc
sub
inc
jne
sbb
in
negb
das
dec
inc
rolb
mov
ja
pop
adc
inc
repnz
pop
jbe
sub
xchg
add
mov
inc
lcall
dec
pop
push
inc
mov
or
out
jp
pop
xchg
mov
loop
mov
in
les
loope
cmc
in
and
les
sbb
mov
inc
and
call
mov
mov
les
pop
scas
sti
mov
pop
adc
lea
jne
ja
sub
ss
jecxz
in
jnp
jbe
shlb
and
push
adc
inc
lcall
or
mov
test
div
add
pop
inc
xor
mov
push
mov
adc
mov
jne
scas
int3
sub
ss
jecxz
hlt
lods
push
test
pop
loop
das
sbb
cmp
inc
push
mov
test
inc
imul
mov
into
jno
mov
push
cltd
cmp
jle
movsb
call
fwait
gs
inc
cmp
stos
pop
clc
or
push
xor
addr16
shr
ret
pop
mov
sbb
mov
xchg
scas
push
and
lret
mov
adc
xchg
cld
mov
mov
das
mov
xchg
movsl
pop
cwtl
out
fwait
das
mov
lret
es
mov
cwtl
dec
and
jb
pop
sub
popa
mov
ret
and
sahf
in
imul
add
jnp
ret
add
ret
sahf
lods
jg
sub
loopne
lahf
pop
hlt
arpl
xorl
out
add
mov
scas
mov
sbbb
sbbb
and
mov
push
xlat
pop
in
xor
pop
pop
jbe
and
mov
inc
jne
sub
dec
xor
frstor
es
add
loopne
daa
rorb
lretw
lock
add
test
mov
or
movsb
add
pushf
sbb
sbb
cltd
out
pushf
add
dec
and
les
xor
xchg
ret
andb
xchg
std
sub
cmp
xor
je
bound
sbb
pop
ds
add
pushf
xor
cmpsb
cld
cmpsb
sahf
lahf
pushf
jbe
adc
in
add
lret
pushl
push
pusha
aad
cwtl
fwait
xchg
xor
ss
in
sbb
in
imul
pop
imul
shrb
cwtl
push
lcall
movsb
xor
mov
push
cltd
aaa
adc
inc
cmpsb
xor
pushf
outsl
fstpt
cmp
jl
popf
mov
inc
fwait
add
xchg
cld
pushf
ret
jb
negl
jns
add
outsb
ret
lahf
rorb
sti
ds
shl
sbb
aas
cmp
xor
add
or
clc
sbb
xor
mov
lods
jbe
sahf
outsl
and
lds
pop
inc
mov
sahf
and
out
jns
loop
adc
jb
jmp
gs
xlat
pop
repz
sub
leave
add
sarl
das
ret
jnp
scas
add
cld
shll
and
out
popf
popa
push
and
xlat
fdivl
mov
jg
data16
jmp
fwait
fs
dec
fnstsw
cmp
dec
fwait
push
and
fs
cld
sub
fsubl
mov
fs
add
gs
xlat
call
es
sti
js
add
cmpsl
pop
adc
xor
mov
lcall
test
je
cltd
adc
insb
repz
cmp
xchg
pop
push
int
mov
push
lcall
inc
es
xlat
jnp
xor
pop
xor
sbb
clc
aas
arpl
push
movsb
and
push
sbb
out
inc
in
adc
movsl
loopne
sub
stc
adc
mov
orb
dec
xor
xor
jg
jecxz
mov
mov
and
sub
cld
dec
call
ret
jne
flds
and
bnd
je
sahf
arpl
or
mov
cld
and
mov
dec
aaa
sbb
adcl
and
ret
pop
cmp
bound
cs
mov
cmp
jae
in
mov
ficompl
add
ds
inc
test
and
mov
sti
enter
adc
adc
fstpl
es
xchg
lret
cmp
mov
and
outsl
adc
inc
int3
mov
in
and
inc
loopw
aam
and
xchg
mov
and
mov
push
fdivrl
imul
and
mov
pop
sub
mov
mov
mov
cmc
jge
xor
sbb
into
lods
jo
sub
lods
sub
jge
mov
out
fisttps
loop
test
xchg
lods
cwtl
xchg
push
cmp
fidivl
in
fisubl
inc
jns
adc
movsl
pop
dec
popf
jmp
popf
add
push
daa
push
dec
adc
mov
bound
dec
or
xchg
push
pop
sub
mov
add
fstpl
mov
xchg
sarl
jg
xor
fucom
orl
adc
push
mov
xor
repz
mov
adc
mov
es
clc
sbb
mov
sbb
fwait
inc
and
clc
push
mov
xchg
xchg
inc
adc
ds
sbb
xchg
mov
jmp
sub
gs
es
and
mov
shlb
stos
jbe
or
pop
jbe
mov
adc
xchg
adc
stos
xchg
push
jns
xchg
fcomi
xchg
add
sbb
inc
sbb
das
and
cmpsb
cmpsb
push
pusha
movsl
insl
jo
xchg
arpl
aas
push
movsb
outsl
jmp
jp
mov
cwtl
add
and
jle
xchg
outsl
or
mov
push
sub
std
mov
in
jg
pop
outsl
hlt
jg
pop
outsl
hlt
jg
pop
outsl
hlt
jg
pop
outsl
hlt
jg
aaa
outsl
enter
or
dec
pop
cld
pop
es
es
sbb
ds
push
and
ljmp
mov
pop
insb
mov
nop
jb
loope
pushw
add
lock
es
hlt
adc
sbb
in
mov
mov
or
mov
les
pop
mov
xchg
loop
pop
cltd
scas
lea
and
mov
aad
sub
loop
pop
xchg
iret
loopne
movsb
mov
mov
lds
xor
cmpl
and
cmpsb
fsubrl
mov
mov
fs
sbb
sbb
test
ficompl
mov
fimuls
and
fldcw
add
jb
push
popf
xchg
inc
cmpsb
pop
cmp
loop
add
cmp
xor
mov
push
sbb
add
fcompl
jg
cmp
mov
xchg
mov
xchg
and
pop
mov
leave
int3
inc
in
and
add
fildll
decl
and
addr16
leave
cmp
lods
cmp
je
inc
nop
cld
mov
repz
pop
mov
pop
sahf
and
adc
sahf
pusha
pop
mov
outsb
daa
loopne
mov
xorl
or
inc
sbb
dec
xor
sahf
and
fmull
movsb
jge
jne
jl
mov
fcompl
popa
icebp
fwait
test
push
stos
add
xor
sbb
arpl
jmp
sub
sbb
inc
jmp
adc
push
and
call
outsl
test
add
in
int3
int3
sar
cmp
out
out
test
xchg
ret
lock
loopne
sub
add
xchg
xchg
fdivrl
in
jno
mov
push
jge
shl
jb
and
data16
ret
mov
loope
lret
rol
insl
add
or
repz
loop
fucomp
jo
popf
stc
push
push
and
scas
sbb
add
sbb
xchg
add
or
add
sbb
sub
or
sbb
fisubs
push
test
dec
add
lcall
in
sub
dec
test
dec
arpl
fistl
rcrb
test
mov
inc
cmp
das
mov
lds
frstor
inc
out
or
daa
ja
add
pop
cmp
push
lret
lea
loopne
sahf
scas
xchg
les
cmpsb
add
mov
daa
scas
dec
inc
cmp
pop
add
mov
lods
roll
aad
lock
pop
fdivrl
add
js
mov
loop
rcrb
aaa
mov
ret
in
and
inc
push
pop
push
mov
push
jl
pushf
jae
pushl
sbb
aad
jb
sbb
ss
push
and
xchg
add
std
ret
add
and
ret
sbb
and
pop
cmp
lea
xor
xor
inc
cmp
inc
push
roll
lahf
or
push
into
and
les
rcll
xchg
cmpsb
adc
hlt
mov
mov
add
sbb
adc
movsl
sub
inc
lods
jns
popa
pop
pop
test
xor
loop
fbld
test
pop
adc
movsl
cld
popa
xor
adc
or
loop
sub
jne
lahf
cltd
es
daa
loopne
mov
mov
push
xchg
mov
push
les
enter
and
xchg
and
popa
aam
jg
adc
ret
insb
xor
mov
jg
inc
xor
fildl
cmpl
xor
sbbb
lea
rcll
xchg
addb
add
mov
repnz
inc
cmp
mov
gs
fidivs
fs
test
addr16
push
gs
lods
jne
sub
je
mov
push
cmp
inc
les
adc
dec
popf
inc
fisubrs
inc
push
and
ss
popa
aad
mov
jg
fcomps
lahf
and
push
inc
pop
rolb
adc
bound
in
stc
mov
push
jno
push
decb
fs
popf
cltd
in
mov
xlat
in
mov
mov
in
sbb
arpl
jno
jbe
sbbl
adc
jecxz
fstl
pop
push
and
pop
int3
fistps
inc
in
clc
push
mov
inc
jbe
inc
in
shrl
mov
xchg
jb
jle
cs
cmc
mov
jno
shll
ret
inc
jo
push
flds
dec
sbb
mov
xchg
mov
cmpsl
xchg
cwtd
lods
jns
sub
movsb
in
mov
movsb
cmp
pusha
push
int3
mov
in
adc
stos
in
ficoml
mov
fiadds
xchg
popa
arpl
push
adc
add
and
int
sbbb
hlt
int3
jp
sub
add
jecxz
out
in
push
into
pop
push
lods
pop
je
in
arpl
xchg
pop
jg
jl
call
push
sahf
xor
or
int3
fs
insl
jns
and
xchg
jp
inc
add
sbb
test
cmp
mov
cmp
fisubl
pop
jne
xchg
sub
xchg
ret
push
or
add
aas
ret
shl
mov
jmp
lret
pop
test
jg
roll
test
incb
ljmp
or
fs
and
xor
lods
fs
xor
call
sbbl
dec
and
and
mov
xor
and
lahf
add
xor
add
fidivrs
and
cmp
mov
xorb
jecxz
cwtl
mov
sbb
sbb
mov
es
and
add
ret
sub
adc
pop
ret
movl
cmp
testb
pop
jmp
add
fistpll
mov
xchg
or
cli
nop
ret
mov
jecxz
sbb
cmpsb
jge
pop
dec
and
pop
sbb
pop
pushf
mov
cmp
mov
mov
clc
lea
mov
adc
jne
mov
and
sbb
into
je
adc
push
pop
ds
add
push
inc
call
add
cld
push
fdiv
mov
es
test
sbb
and
bound
push
add
hlt
mov
in
repz
hlt
add
sbb
cmc
insl
les
inc
sahf
xchg
jbe
jg
jno
lcall
pop
in
mov
loop
jle
xchg
pop
cmc
sub
push
push
mov
testb
int
stos
pop
and
out
push
cmpsb
jmp
and
and
mov
inc
cmp
jecxz
inc
dec
or
andb
sahf
mov
mov
sbb
pop
jge
push
xchg
mov
mov
test
mov
adc
dec
pop
mov
pop
iret
nop
mov
jl
push
cmpsb
sbb
push
popf
lcall
mov
pop
fwait
mov
daa
or
ret
int3
and
or
gs
adc
xor
xor
pop
lea
ja
pusha
call
call
mov
lea
movzbw
pop
pushf
pushf
pushl
pushl
ret
pushf
lea
ja
call
inc
lret
aad
roll
xor
cmp
cmpb
inc
adc
add
pop
test
fistl
mov
js
and
sbb
xchg
mov
icebp
or
dec
pop
insb
dec
jo
sbb
push
in
cltd
mov
inc
inc
dec
jg
add
mov
fs
jb
call
neg
jmp
lea
ja
pusha
lea
jb
pushf
cmpb
pusha
movl
pushf
lea
jne
shl
mov
test
clc
cmp
add
pushf
push
stc
movzwl
lea
stc
bsf
clc
mov
pusha
add
call
test
jecxz
mov
in
mov
repnz
out
jo
mov
cmp
or
push
xor
add
sar
cmp
cmp
adc
rorb
les
mov
add
jge
daa
cli
stc
in
fidivrs
add
gs
inc
mov
stc
pop
cmp
int3
mov
xchg
adc
stos
pop
repz
xor
inc
inc
push
dec
ficoms
and
mov
mov
push
cmp
lahf
je
mov
leave
adc
movsl
jo
fisttpl
in
lret
add
in
cli
cmp
test
jmp
pushf
lea
je
cmp
jmp
lea
jne
ror
mov
bts
or
rcr
sub
mov
shrd
cmc
mov
test
test
call
jmp
pushf
lea
jne
movsbl
bswap
rcl
pushf
mov
rol
sbb
pusha
sub
sub
rcr
lea
pusha
pushl
sub
bt
movb
call
xchg
std
pop
lcall
cmpsl
movsl
lea
add
or
jmp
pop
ljmp
mov
cmp
push
and
shrl
mov
lcall
xor
sub
fildl
jo
rorb
xchg
roll
inc
icebp
jns
xlat
pushf
pop
push
lret
test
adc
mov
dec
push
lods
imul
andl
inc
inc
fwait
pop
and
arpl
inc
jg
or
lret
push
add
add
pusha
call
lea
je
call
ror
pusha
pushl
inc
movw
shr
movb
movl
pushf
jmp
pop
movsbw
pusha
lea
pushf
movl
pushf
movw
pushl
call
bt
test
sub
ja
push
inc
lea
pusha
call
mov
movw
lea
ja
jmp
push
adc
ret
jp
sub
add
scas
dec
xor
cmovb
lcall
sub
mov
pop
pop
xchg
jmp
xchg
push
lock
push
adc
and
pop
pop
dec
aam
enter
pop
shlb
cltd
mov
push
loope
push
ljmp
aam
adc
cmp
or
popf
mov
bound
mov
sub
and
fldln2
scas
enter
pop
aam
dec
push
cmc
subb
js
cmp
xchg
arpl
mov
and
into
cwtl
ficoms
call
jg
ja
mov
jb
inc
dec
jle
adc
iret
stos
ret
xchg
push
into
std
fdivp
xchg
push
ret
push
insl
sbb
test
ret
fstpl
cmp
lods
push
daa
or
mov
xor
and
pop
out
mov
xor
sbb
sbb
pushf
ficoms
mull
jge
ret
bnd
fbstp
or
cmp
addb
xor
and
rorb
mov
pop
adc
nop
test
loop
cld
arpl
mov
fs
imul
aad
cmp
sub
mov
mov
lret
inc
cmpsl
pop
dec
xchg
aaa
pusha
or
mov
aaa
gs
mov
jle
call
loope
xchg
into
inc
push
or
pop
lods
mov
cmc
mov
popf
loop
inc
daa
cmp
ss
push
test
lret
push
call
and
mull
cmpb
in
rol
fwait
push
mov
jno
mov
or
cmpsl
pop
mov
push
or
push
ss
cmpsb
jae
mov
rolb
pop
inc
addl
arpl
ljmp
xchg
inc
das
adc
dec
pop
lahf
sub
jg
bswap
jecxz
pushf
movl
jmp
lea
je
not
bswap
rcr
add
not
sar
and
sub
mov
stc
cmc
pushf
bt
add
push
bt
pushl
bt
mov
stc
mov
jmp
pushf
pusha
mov
stos
pushf
not
call
push
pusha
movl
pusha
pushf
lea
jmp
mov
dec
cmp
cmc
mov
clc
jmp
push
push
movb
test
jmp
sub
pusha
lea
jmp
lahf
pushf
cwtl
not
mov
lea
pusha
lea
xchg
movb
mov
jmp
lea
je
push
movsbw
not
lea
jne
lea
movzbl
call
clc
add
push
lea
jmp
test
xchg
or
cmc
pop
enter
cmp
shrb
ret
dec
sbb
cltd
int
pop
dec
xbegin
add
sahf
mov
add
jmp
jae
inc
cmc
ljmp
pop
dec
add
lahf
aad
mov
push
push
outsl
adc
dec
jl
fists
or
mov
addr16
push
mov
lcall
test
dec
fs
cli
movsb
inc
dec
aad
pop
or
into
fisubl
loopne
cld
cld
pop
inc
push
cltd
jle
setb
ud1
or
je
daa
sub
push
cmpsb
adc
out
cli
stos
in
into
sarl
xchg
mov
xchg
adc
sbb
ret
loopne
mov
push
mov
sbb
push
inc
or
cmp
mov
jne
jecxz
int
adcb
fisubrs
mov
jg
or
mov
pushl
lea
ja
call
mov
pushl
test
pushl
jmp
imul
gs
xor
cs
insb
add
push
cmc
neg
pushf
clc
cmp
lahf
lea
lea
lea
jmp
push
or
lea
jb
push
pusha
movb
lea
je
movzbl
lea
mov
lea
movzbw
pushf
cwtl
mov
cwtl
setp
lea
jmp
shld
mov
clc
test
cmc
add
cmp
mov
clc
call
addr16
in
into
push
add
in
loop
cmp
xlat
je
inc
xchg
ret
mul
out
les
push
cmp
or
dec
jns
fsubr
or
ret
and
lock
in
outsb
jnp
push
pop
rcll
rorb
iret
les
pop
fs
mov
cmp
cwtl
fs
mov
cmp
lret
or
in
aaa
cmc
call
neg
mov
pusha
add
push
push
pushf
mov
lea
jmp
pushf
mov
pushf
popl
call
pushf
popl
push
call
rcr
sub
cmp
mov
shl
mov
jmp
clc
sub
push
pushf
pushf
mov
pusha
pushf
push
pushl
ret
pushf
mov
jmp
cmp
clc
cmp
neg
call
shld
lahf
bt
mov
cmc
pushf
call
cmc
pushl
sub
jmp
pushf
popl
lea
jbe
pusha
pushl
pushl
popl
pushf
pushf
pushf
lea
jmp
lea
jns
push
pushf
popl
pusha
pushl
popl
pushf
pushf
pushf
movw
lea
jmp
cmp
rol
mov
pushf
clc
mov
call
cmp
shl
rcr
mov
aam
jmp
jmp
call
mov
call
push
lea
jle
mov
push
jmp
push
pushl
mov
movb
jmp
cmp
cmp
push
pushf
add
push
push
lea
jmp
add
movb
pushf
mov
pushf
mov
lea
jmp
xchg
and
mov
rol
not
rcl
rcr
mov
cmp
push
pushf
sub
cmp
cmc
jmp
mov
push
lea
jmp
clc
sub
push
pusha
call
pusha
neg
cmc
clc
cmc
sub
clc
clc
rol
lea
jns
dec
pusha
pushf
add
call
mov
pushf
popl
jmp
pusha
call
mov
lea
jge
push
pushf
popl
pusha
movb
jmp
mov
mov
movl
movw
movb
lea
jmp
mov
mov
lea
jmp
inc
mov
rcr
cmp
mov
stc
sub
stc
shr
call
or
movzww
clc
clc
call
mov
pushl
mov
pushf
pushf
lea
jmp
pushf
lea
jne
inc
stc
mov
pushf
clc
jmp
pushf
pushl
lea
jmp
add
jb
sub
pushf
mov
pushl
lea
jmp
jmp
jmp
rcl
shl
mov
clc
add
push
lea
jmp
push
pusha
mov
mov
lea
jmp
pushf
popl
pushf
movb
pushl
pushl
pushl
popl
movw
mov
movb
mov
lea
jmp
mov
movzbw
call
rdtsc
daa
sets
rcl
mov
lea
bts
sub
mov
test
mov
test
add
pusha
cmc
cmc
shld
call
adc
mov
lcall
push
mov
pushl
mov
jmp
addr16
push
mov
mov
pop
mov
pushl
mov
lcall
push
mov
decl
mov
pushl
push
mov
cmp
imul
pushl
mov
fistps
pushl
mov
out
bound
jmp
popa
mov
lcall
mov
call
mov
cmp
jmp
push
mov
fcoms
decl
mov
jnp
mov
pop
mov
jmp
push
mov
lcall
bound
jmp
addr16
push
mov
lcall
mov
decl
pop
mov
pushl
mov
decl
push
mov
out
bound
jg
mov
decl
mov
incl
mov
push
mov
decl
push
mov
pop
mov
lcall
pop
mov
decl
mov
pushl
mov
pushl
mov
lcall
pop
mov
pushl
pop
mov
call
addr16
push
mov
decl
arpl
incl
push
mov
lcall
mov
decl
push
mov
fcoms
fistps
pushl
mov
decl
mov
jg
mov
dec
imul
push
push
mov
jmp
mov
incl
mov
incl
mov
lcall
mov
pushl
mov
decl
arpl
call
jo
push
push
mov
decl
mov
push
mov
call
mov
decl
arpl
call
mov
lcall
mov
push
push
mov
jmp
mov
out
bound
pushl
mov
pushl
push
mov
push
push
mov
call
mov
call
outsl
mov
call
mov
decl
mov
call
mov
decl
mov
call
mov
inc
pop
mov
jg
mov
pushl
pop
mov
jmp
push
mov
lcall
incl
mov
out
bound
pushl
mov
pushl
mov
pushl
pop
mov
pushl
push
mov
ljmp
arpl
call
push
mov
decl
arpl
pushl
jno
incl
push
mov
lcall
push
mov
jmp
outsb
mov
fistps
fistps
call
mov
incl
mov
pop
mov
pushl
mov
lcall
mov
pushl
jno
cmp
fcoms
push
mov
lcall
pop
mov
jmp
addr16
jo
call
pop
mov
pushl
mov
push
push
mov
pushl
push
mov
call
mov
push
mov
lcall
xchg
push
add
decl
pusha
push
lea
jne
jmp
btr
mov
bswap
bt
btr
inc
mov
cmc
cmp
bt
stc
add
jmp
sub
pushf
rol
sub
xor
call
btr
sub
jmp
clc
clc
mul
call
mov
setbe
movzbl
stc
push
clc
add
bt
cmc
call
mov
call
sub
jmp
push
xor
pushf
test
jmp
bt
neg
call
mov
pushf
pushf
pushf
pushf
lea
jmp
shr
jmp
movzbl
bts
xor
clc
mov
bt
jmp
pusha
movw
pushf
mov
jmp
and
mov
clc
setno
mov
btc
dec
mov
push
sub
jmp
pushf
lea
jmp
cmp
clc
xor
pusha
cmc
xor
bt
not
call
sub
jmp
mov
pusha
pushf
lea
jmp
call
das
mov
sub
pusha
sbb
push
mov
pushf
cmp
cmp
cmc
sub
call
call
bt
pusha
sub
jmp
pushf
jmp
jmp
clc
jmp
or
ror
rol
movsbw
mov
pushf
add
mov
pusha
mov
lea
jmp
and
mov
pusha
cmp
add
clc
pusha
rol
mov
bt
mov
cmp
xor
push
bt
neg
stc
test
cmc
cmc
add
bt
test
clc
jmp
pusha
pushf
pusha
lea
jmp
mov
add
call
add
cmc
cbtw
mov
cwtl
test
sub
cmc
cmp
movl
add
push
mov
lea
jno
pusha
mov
movl
push
lea
jmp
mov
cmp
add
pushf
mov
push
lea
jmp
mov
call
test
bt
clc
add
pushf
shrd
pushf
pusha
mov
jmp
push
jmp
pusha
jmp
bswap
push
lea
not
movzbl
bswap
repz
not
push
call
rcl
add
mov
mov
push
sub
add
inc
rcl
btr
neg
call
jmp
pushl
popl
pushf
movb
mov
pushl
lea
jmp
pushl
lea
push
movb
mov
push
inc
push
bswap
jmp
lea
jmp
push
clc
cmp
add
push
pushl
xor
cmc
call
xor
daa
dec
mov
jmp
push
pushf
popl
jmp
pushf
pushf
popl
call
dec
btc
clc
mov
test
call
pusha
pushl
popl
pusha
mov
mov
lea
jmp
pushf
dec
cmc
mov
test
clc
sub
call
push
pushl
popl
pushf
pushf
pushf
push
lea
jmp
push
mov
push
pusha
pushf
push
lea
jmp
pushf
pushl
popl
mov
push
pushf
lea
jmp
btr
shrd
mov
cmc
bt
add
pusha
push
push
lea
jmp
call
push
mov
mov
mov
push
pusha
lea
jmp
movl
pushf
popl
jmp
bt
jmp
bswap
rcl
clc
mov
bt
cmc
stc
add
pushf
mov
push
push
lea
jmp
add
add
mov
add
mov
mov
add
test
pusha
jmp
pushf
call
das
inc
neg
mov
mov
push
mov
mov
jmp
cmc
test
cmc
add
pusha
mov
mov
movb
pushf
popl
pushf
pushl
popl
pushf
pushl
mov
lea
jmp
mov
mov
movb
pushf
lea
jmp
lea
call
mov
seta
movzbw
pusha
mov
setns
movzbw
mov
lahf
mov
mov
mov
xchg
jmp
pusha
jmp
not
lahf
mov
rcr
rcr
stc
rcr
mov
pusha
sub
call
jmp
adc
mov
sbb
rcr
mov
cmp
add
push
pushf
mov
movw
lea
jmp
mov
pushf
popl
call
call
mov
pusha
jmp
pushf
popl
jmp
add
jmp
push
and
pusha
bt
push
mov
cmp
lea
jne
jne
bswap
rcl
adc
or
xorb
bswap
pop
push
pushf
lea
jmp
dec
pusha
push
mov
clc
clc
cmp
jmp
lea
jne
call
mov
mov
mov
movb
movl
lea
jmp
push
push
call
pushf
pushf
pushl
popl
mov
lea
jmp
pushf
popl
lea
not
push
pushf
std
cld
mov
cld
lea
jmp
test
bt
movb
add
mov
mov
push
lea
jmp
pusha
pusha
lea
jmp
pushf
call
jmp
pushl
popl
pusha
push
movb
push
lea
jmp
movsbw
bt
mov
stc
mov
call
sub
btc
rol
xchg
mov
stc
rcl
mov
call
jmp
dec
bsf
mov
pushf
sub
lea
jnp
push
pusha
pushl
mov
pushf
pushf
push
pushl
lea
jmp
pushl
popl
pushf
pushf
push
mov
lea
jmp
inc
cmc
rol
pusha
lea
movb
xor
cmc
shrd
add
and
xor
movzbw
rcl
movzbl
dec
bsf
bsr
shl
mov
push
neg
call
rcl
jnp
test
mov
clc
rcl
mov
cmc
pusha
stc
sub
test
call
pushf
push
mov
jmp
pushf
popl
push
pushl
popl
mov
pushf
pushl
lea
jmp
call
push
push
xchg
pusha
call
pusha
pushl
mov
jmp
mov
movb
mov
pushf
xchg
xchg
pushl
mov
pop
pushf
pushf
mov
xchg
lea
jl
push
pusha
pushf
bswap
repz
popl
mov
mov
not
movw
seto
pushl
popl
pop
movl
call
mov
movl
pushf
lea
jmp
neg
push
cmc
sar
movzbl
movsbw
add
pushf
cmc
lea
rol
bt
and
xor
bsf
test
neg
test
test
add
lea
dec
shrd
movzbl
pusha
mov
mov
bt
cmp
or
call
jmp
pushf
popl
push
pushl
popl
pushf
push
lea
jmp
jmp
jmp
pushf
pushf
popl
jmp
pushf
lea
cpuid
push
stc
push
sub
pushf
clc
cmpl
pusha
pushf
pushf
mov
mov
jmp
pusha
call
push
clc
add
pushl
pushf
pushl
mov
mov
movb
push
pusha
lea
jmp
shl
or
xor
shl
bswap
bswap
shr
sub
sbb
and
rcr
bswap
sub
mov
test
test
sub
pushf
movb
jmp
push
mov
pushf
mov
call
push
lea
jmp
call
or
movsbw
and
btr
mov
sub
cmp
pusha
mov
call
mov
jmp
sub
jmp
jmp
call
mov
movb
pushf
push
push
lea
jmp
mov
push
pushl
push
push
lea
jmp
mov
push
push
lea
jmp
lea
jne
pushf
btc
pushf
bsr
xorb
not
movzbw
mov
pusha
pushl
pushf
movw
lea
jmp
bsr
add
inc
cmp
cmp
inc
xor
movsbw
jmp
call
call
lea
jmp
cbtw
aam
mov
push
sbb
jmp
movb
pusha
mov
push
pushf
lea
js
pusha
mov
movb
push
movb
lea
jmp
call
mov
cmc
bt
cmp
test
sub
mov
pushf
call
jmp
mov
lea
jne
stc
pushf
cmc
xor
call
aam
setae
lea
mov
rcr
movzbw
cmc
pop
bt
pop
aad
and
aaa
pop
pushf
setno
pushl
popf
movsbl
lahf
lea
call
pusha
pushf
xor
push
push
push
inc
pushf
pushf
decl
pushf
mov
lea
jne
pusha
jmp
jmp
pushf
pushl
popl
pushf
cmp
add
stc
cmc
cmc
pushl
popf
pusha
pushl
lea
jmp
sub
call
mov
mov
call
pushf
dec
call
ror
mov
call
push
call
pushf
movl
pushf
jmp
test
dec
mov
test
add
pusha
pushf
lea
jmp
rcl
bts
mov
dec
mov
pushf
test
call
pushl
pusha
movb
xchg
call
mov
pushf
movb
movb
mov
pushl
ret
call
mov
pushl
mov
movb
mov
jmp
shr
push
mov
pushf
call
mov
pushl
pushf
movw
lea
jmp
add
mov
pushl
call
mov
push
movb
pushf
lea
jmp
pusha
mov
mov
pushf
mov
pushf
call
shl
shl
jmp
bswap
sub
mov
rol
mov
sar
add
setl
push
jmp
pushf
mov
pushl
pusha
mov
movw
lea
jmp
sub
jmp
pusha
add
push
shrd
sub
sub
xor
inc
mov
cmp
clc
shl
cmp
test
pusha
bt
shr
pushf
test
or
sub
jl
pusha
pushf
xor
push
push
pushf
lea
je
inc
push
pusha
pusha
decl
jmp
lea
je
stc
pusha
xor
pushf
test
stc
xchg
mov
clc
jmp
pusha
pushf
mov
std
cld
call
shld
mov
clc
clc
add
pusha
pushf
movl
pushl
lea
jmp
movb
mov
pushf
movw
mov
mov
lea
jmp
call
pushf
inc
pusha
jmp
pushl
mov
jmp
mov
pushf
popl
push
call
stc
cmc
add
call
pusha
pushf
div
lea
jl
pushf
pushf
pusha
mov
pushf
pushf
movb
mov
jmp
movb
call
jmp
jmp
pushl
pushl
popl
pushf
lea
jmp
pushf
mov
mov
test
call
call
pusha
pusha
jmp
xor
btc
xor
bswap
add
pushf
lea
mov
stc
add
neg
rol
add
movsbw
movsbw
pop
inc
bt
pusha
rcl
ror
rol
sub
xor
pop
rcl
rol
add
movsbw
pushl
ror
shr
movzbl
neg
mov
push
pusha
pushf
test
neg
pushl
movw
add
clc
bt
jmp
mov
push
mov
jmp
mov
test
bt
cmp
bt
sub
clc
jmp
lea
jmp
push
mov
pushf
pushf
mov
push
lea
jmp
push
pusha
jmp
pusha
mov
pushl
pusha
push
lea
jmp
pushf
lea
jmp
pushl
popl
mov
lea
jmp
push
pushl
clc
not
test
xor
cmc
pushf
cmp
stc
sub
mov
push
mov
pushf
mov
mov
lea
jmp
or
mov
pusha
sub
pushl
pusha
mov
pushf
pushf
lea
jmp
pusha
pushf
pushf
jmp
notl
add
mov
movw
bt
sub
cmp
cmc
test
and
pusha
mov
movw
pushf
popl
movb
mov
push
pushl
popl
push
lea
jmp
cmc
xor
jmp
add
rcl
mov
mov
mov
rol
add
jmp
push
pushf
mov
mov
pushf
movb
pusha
lea
jmp
push
jmp
bt
clc
popf
pusha
pushl
pusha
mov
lea
jmp
pushf
push
pushl
popl
push
pushf
pushf
lea
jmp
and
pusha
mov
rcl
not
btr
mov
clc
not
clc
jmp
stc
sub
push
call
pusha
lea
mov
mov
pushf
pushf
movb
lea
jmp
pusha
call
jmp
lea
jmp
jmp
sar
cmp
lea
test
pushf
cmp
push
pushf
push
lea
ja
lahf
mov
push
lea
sar
sub
aam
daa
lea
lea
and
neg
bt
and
bswap
sub
push
jmp
bt
add
pushf
pusha
pusha
mov
call
shl
inc
mov
push
clc
pushf
add
push
rol
cmp
cmc
bt
stc
xor
test
movw
cmc
pushl
neg
jmp
dec
push
dec
inc
shl
sar
dec
adc
bswap
btr
sub
neg
and
lea
cmc
sub
xchg
shrd
ror
pushf
lea
add
btc
btr
setge
movsbw
mov
bsr
je
add
sub
mov
rcr
add
call
mov
mov
push
lea
jmp
pushf
dec
pushf
add
test
pusha
cmc
mov
stc
call
neg
adc
bsf
mov
bts
mov
pusha
pusha
pushf
add
pushl
mov
pushf
movw
lea
jmp
pushf
bt
mov
clc
jmp
xchg
cmc
pushl
stc
test
sub
cmp
push
pushf
neg
cmp
call
pushf
jmp
call
add
jmp
call
not
pusha
setg
mov
pusha
jmp
decl
mov
lea
jne
jmp
neg
add
call
shl
jmp
shl
rcr
ror
mov
bt
pusha
sub
pusha
add
push
call
add
add
cmp
bswap
jmp
pushl
popl
push
push
mov
mov
lea
jmp
clc
xor
pusha
call
mov
mov
sub
call
mov
std
std
push
cld
jmp
pushf
mov
movw
jmp
movw
mov
mov
pushf
mov
pushf
mov
push
pushl
pushf
pushf
lea
jmp
jmp
mov
dec
push
push
sub
pushl
sub
bt
cmp
cwtl
bt
stc
call
pushf
popl
jmp
add
pushf
jmp
pushf
mov
call
jmp
mov
mov
pushl
ret
push
pushl
rep
ror
or
cld
mov
clc
mov
add
jge
cmp
popf
pusha
lea
jmp
shrd
mov
pusha
sbb
dec
shl
mov
jmp
movw
cmp
sub
push
and
movl
pushf
mov
pushf
movw
pushl
pushf
popl
pusha
pushl
popl
push
pushf
pushf
pushf
lea
jmp
call
push
pushl
pushf
lea
jmp
call
pushf
pushf
shr
movb
pushf
mov
jmp
aaa
call
pushl
mov
jmp
pushf
pusha
mov
pushl
pushf
lea
jmp
mov
pusha
cmc
sub
cmc
cmp
bt
stc
shl
pushf
movb
mov
pushf
pushf
popl
lea
jp
pusha
push
pushl
popl
mov
push
push
lea
jmp
mov
movw
pushf
lea
jbe
cmp
add
jmp
pusha
push
movb
push
lea
jmp
not
pushf
stc
bt
bt
not
jmp
mov
push
push
mov
mov
lea
jmp
pusha
pushl
jmp
call
lea
jmp
mov
pusha
pushf
lea
jmp
pushf
pushl
popl
push
pushf
pusha
lea
jmp
xor
mov
pushf
add
pushf
pushf
pushf
lea
jmp
movzbw
push
pushf
mov
mov
movb
movb
movb
pushl
ret
pushl
popl
lea
mov
bswap
movzbw
push
inc
pushf
mov
not
inc
and
not
cmc
bswap
add
cmc
neg
ror
shr
rol
lea
bt
xor
sub
adc
not
mov
ror
xchg
stc
add
mov
push
or
add
bts
sbb
sets
bts
mov
movsbw
and
add
movzbw
jmp
stc
add
pushf
sub
mov
mov
pushf
push
pushl
pushl
pushl
ret
push
mov
mov
mov
pushl
lea
jmp
mov
pusha
call
ror
test
rcr
mov
bt
cmc
jmp
pushf
pushf
pushl
popl
pusha
mov
pushl
mov
lea
jmp
jmp
jmp
pushf
cmp
mov
sub
jb
stc
add
pusha
pusha
mov
lea
jmp
mov
call
jmp
sub
call
lea
jmp
btr
movsbw
movsbl
mov
pushf
cmp
cmp
bt
add
pusha
mov
pushf
lea
jmp
jmp
pushf
jmp
jmp
pushf
mov
movb
pushf
lea
jmp
bt
clc
test
add
pushf
mov
pusha
pushf
mov
push
lea
jmp
aad
movsbl
mov
sub
mov
add
setge
xor
mov
call
not
mov
pusha
pushf
mov
mov
mov
mov
lea
jmp
rcl
mov
and
sbb
rcl
mov
push
add
jmp
sub
jmp
pusha
bswap
pushf
mov
push
mov
push
mov
movb
divl
push
call
sub
jmp
sete
rcr
rdtsc
bt
jmp
mov
bswap
mov
jmp
pushf
jmp
pusha
mov
pusha
lea
jmp
push
lea
jmp
push
lea
jmp
pushf
pushl
popl
pushf
pushl
lea
jmp
cmc
mov
shrd
btr
xor
or
ror
inc
xor
sub
rcr
not
shld
shl
movzbw
push
add
sbb
bts
pusha
inc
xor
movzbw
dec
movzbw
stc
jmp
test
lahf
inc
ror
mov
pusha
cmp
cmc
xchg
cmc
pushf
pushl
pushf
sub
jmp
push
jmp
not
pushf
bt
call
jmp
inc
stc
clc
setg
rol
cmc
or
xor
pop
lea
ror
or
add
bsr
inc
bsf
jmp
stc
shl
call
and
push
mov
push
call
call
call
