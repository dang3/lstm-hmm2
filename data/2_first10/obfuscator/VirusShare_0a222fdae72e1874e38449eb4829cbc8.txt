jmp
seta
lea
pusha
mov
pusha
jmp
inc
pushf
stc
call
rep
xadd
setp
dec
mov
xor
cmc
neg
mov
clc
bt
test
add
jmp
not
xchg
bswap
pop
call
pushf
stos
cmp
sub
clc
cmc
push
rol
push
pushf
jmp
movb
call
xchg
pop
pushf
xchg
pusha
mov
mov
lea
mov
pop
jmp
call
pop
mov
xchg
ja
setnp
mov
mov
push
pusha
call
jmp
call
push
call
jmp
cmc
add
mov
pushf
movb
pushf
popl
jmp
movw
lea
je
cmp
stc
test
jle
popf
pushf
pusha
pusha
movb
lea
jmp
mov
push
jns
mov
or
aaa
jb
mov
idivb
cmp
mov
and
mov
es
mov
mov
push
sti
popa
nop
push
loopne
repnz
sbb
mov
jns
dec
loop
cmp
enter
enter
jle
xor
ret
xor
call
or
add
subl
sbb
inc
fbld
dec
cld
mov
jl
add
jne
jbe
mov
imul
sub
push
sub
xchg
dec
mov
imul
shr
bound
andl
ljmp
mov
mov
add
scas
pusha
dec
push
mov
push
mov
pop
adc
cmp
inc
int3
loope
push
jo
mov
xor
or
in
mov
cmpsl
mov
lods
aam
push
sbb
into
mov
ja
dec
jl
or
mov
sbb
cmp
test
jecxz
push
cs
add
in
repz
data16
push
popa
jg
fsubs
add
add
ljmp
dec
mov
sarb
or
imul
inc
push
xor
stos
lea
jns
mov
mov
jp
mov
jnp
pop
mov
mov
xchg
jle
mov
call
ret
push
pop
jmp
sbb
cmp
mov
mov
xchg
pop
and
pmaxsw
cmc
mov
mov
pop
mov
cld
dec
in
dec
xchg
mov
jae
pop
arpl
sahf
pop
cmp
sar
arpl
or
ljmp
inc
xchg
mov
js
jge
cli
imul
clc
lock
movsl
inc
push
aas
mov
les
fisttpll
mulb
push
mov
push
fs
or
cld
jl
jne
ss
cmpb
mov
push
testl
and
leave
push
sub
jno
pop
mov
mov
inc
ret
aad
rol
cmc
pop
stc
lds
mov
imul
sti
add
push
sti
rol
fst
cmp
pop
fwait
mov
xchg
mov
add
aaa
cmp
dec
pusha
scas
out
cmp
sbb
mov
xor
push
outsb
int
adc
movsl
mov
xchg
or
pushf
movsb
loopne
pop
add
cmp
lcall
je
idivb
sub
sbb
ret
jecxz
lret
pop
cmp
into
fwait
test
lcall
jl
adc
sbb
adc
popa
divb
mov
sti
int3
pop
je
pop
stos
push
test
lret
xchg
sub
fists
mov
es
inc
sti
dec
xchg
fdivs
pop
sub
xor
dec
popf
add
js
push
cmpl
outsb
mov
push
sub
orb
sbb
pop
add
xor
insl
aam
test
xchg
add
movsb
or
mov
sarl
cwtl
push
cmpsl
mov
call
lds
push
mov
push
fimuls
dec
fwait
add
jl
or
push
cld
xor
ret
test
test
sbb
add
add
popa
mov
mov
xchg
cmc
pop
rcl
out
push
adc
fs
std
fdivs
mov
in
sti
cwtl
push
mov
xchg
add
dec
ds
pop
mov
xor
in
cmp
lret
xlat
jbe
insb
movsl
inc
dec
mov
mov
aam
mov
sti
dec
arpl
mov
dec
adc
aam
mov
hlt
insb
incl
aam
mov
sarb
inc
aam
mov
popa
sbb
insb
cltd
mov
mov
ret
push
shlb
jne
xor
out
ret
mov
fiaddl
test
mov
add
mov
nop
cmp
dec
std
jns
movsb
cli
jnp
data16
loope
aam
mov
ja
loope
add
adc
cmp
and
or
and
jo
sub
dec
and
sbb
add
insb
into
popa
and
dec
and
jmp
dec
and
out
add
xchg
inc
mov
jbe
insb
stc
stc
and
popa
ret
aam
mov
xchg
cmp
mov
jmp
mov
cmpsl
les
aam
mov
rorl
aam
mov
nop
mov
mov
les
mov
lods
das
pop
adc
andl
testl
aam
mov
repz
movsb
aam
hlt
insb
pop
push
pushf
call
mov
jbe
insb
sbb
xor
insb
pushf
xchg
and
iret
in
xor
jbe
in
aaa
mov
mov
inc
mov
mov
inc
sub
insb
xor
aam
mov
push
cli
insl
icebp
lods
jbe
insb
subl
mov
xor
mov
jnp
sbb
cli
insl
pop
mov
leave
push
jae
aam
mov
jns
sbb
aam
mov
or
daa
aam
mov
and
mov
sbb
mov
out
imul
lahf
nop
inc
fdivl
insb
push
out
xor
jg
sbb
aam
mov
jle
into
imul
mov
pop
cmp
mov
jbe
insb
jmp
push
iret
aam
mov
stos
and
aam
mov
sub
mov
push
or
insb
ds
in
pop
mov
add
mov
repnz
mov
adc
jbe
insb
add
mov
stc
ficoms
jnp
push
sbb
es
loopne
inc
xor
dec
mov
ss
adc
aam
mov
inc
in
pusha
xchg
jbe
lods
sahf
sub
aam
mov
rclb
aam
mov
dec
clc
pop
push
aam
mov
jb
je
aam
mov
mov
jbe
insb
jp
stc
sub
jbe
insb
sub
pop
aam
mov
sub
sub
jbe
insb
outsb
jne
rcl
mov
out
xchg
push
aam
mov
addl
aam
mov
add
iret
js
and
jbe
insb
je
push
pop
aam
mov
nop
pop
xor
aam
mov
hlt
xor
mov
aas
movsl
push
aam
mov
andl
mov
inc
jp
rcl
jbe
insb
pop
imul
stos
aam
mov
xchg
insb
les
mov
pop
test
push
fcoml
and
loopne
insb
sbb
jbe
insb
add
cmp
jbe
insb
fsub
and
aam
mov
popf
shlb
and
out
in
aam
mov
scas
mov
mov
xor
sub
insb
lods
shlb
insb
inc
sbb
adc
jbe
insb
clc
clc
in
aam
mov
lds
jle
jbe
insb
movsl
jae
not
jbe
insb
data16
mov
jl
subb
mov
int3
cmp
mov
dec
jecxz
add
pop
adcl
cmp
mov
dec
shll
nop
aam
mov
jbe
aam
aam
mov
jge
mov
insb
lahf
jb
mov
jbe
insb
adc
aam
mov
mov
xchg
aam
mov
jl
int
aam
mov
ret
jo
pop
aam
mov
out
add
inc
sbb
and
adc
mov
insb
shlb
aam
adc
enter
push
nop
add
xchg
pop
cmp
or
xor
xchg
jo
cmpsb
dec
mov
lret
xor
xchg
popa
fxch
mov
or
mov
push
fstl
adc
adc
mov
lret
ljmp
dec
xchg
shll
mov
sbb
sbb
dec
sbb
cmp
push
pop
in
dec
aaa
shlb
jne
jo
in
cmpsb
andl
ret
shlb
mov
je
add
fwait
outsb
add
mov
rcrb
fnsave
fdivs
or
cmpsl
adc
sti
adcl
mov
mov
pop
mov
mov
pop
mov
rolb
clc
lods
xchg
data16
je
mov
mov
mov
add
sbb
push
mov
lret
add
stos
pop
adc
jl
pop
out
gs
inc
hlt
orb
jb
data16
out
dec
int
fmul
fdivrl
insb
sub
jbe
dec
fidivs
jb
cmp
mov
dec
push
lret
arpl
mov
mov
ja
test
mov
call
adc
jo
add
dec
insb
movsl
insb
jge
cmp
sbb
dec
xchg
inc
push
mov
int3
mov
mov
adc
scas
ds
mov
pop
mov
into
out
jbe
push
stos
jmp
rcll
mov
loop
jb
mov
mov
jo
jb
in
ret
jo
push
xchg
jno
jg
mov
rcrb
enter
ja
into
push
inc
ja
addr16
cmp
pop
test
das
out
xlat
add
xchg
sbb
int
sbb
fisubrl
mov
adc
ficompl
mov
jo
scas
nop
pop
stc
arpl
in
pop
shrl
mov
aam
mov
push
jmp
jno
adc
dec
mov
inc
jmp
or
mov
mov
stos
enter
sbb
lret
adc
popf
mov
outsb
mov
fwait
mov
jle
lods
out
insl
jge
stc
iret
imul
cmp
mov
fcomps
mov
mov
pop
pop
ret
shlb
mov
add
add
xrstor
mov
cmp
mov
xlat
dec
jno
xor
add
je
ja
sub
cltd
ja
btl
cltd
insl
rorb
fnsave
imul
sbbb
int3
outsl
scas
stos
mov
push
int
xlat
jmp
aam
into
cwtl
data16
test
cs
jns
outsb
mov
shlb
mov
or
mov
sbb
movl
imul
in
or
lods
jns
rorb
xchg
inc
cmpsb
add
pop
nop
jle
push
pop
add
mov
fnstenv
sbb
adc
pushf
icebp
ja
push
repz
dec
clc
imul
enter
ss
lods
adc
xor
xlat
sbb
xchg
mov
stos
xor
or
pop
push
stos
adc
sbb
mov
mov
push
mov
mov
jne
outsl
les
das
int3
jae
push
jae
or
leave
sbb
ja
mov
mov
jne
sbb
inc
aam
add
push
push
int3
aas
lods
jle
jl
or
out
jmp
sbb
jp
xchg
sar
ss
addr16
sub
cmp
int3
in
push
fisttps
mov
xchg
pop
mov
mov
pop
shll
sub
into
leave
cmp
mov
adc
in
cmpsl
add
imul
jne
and
pusha
movsb
lret
hlt
jns
xor
icebp
std
jp
mov
stos
dec
add
push
enter
or
or
adc
pop
mov
sbb
paddusw
shll
sbb
mov
mov
adc
sbb
add
fistpll
std
nop
push
jg
test
mov
sbb
push
ds
mov
andl
imull
jge
or
mov
sbb
daa
insb
imul
mov
daa
add
mov
xchg
mov
mov
or
xchg
imul
rep
call
add
fsubrl
mov
mov
or
minps
sub
push
out
sbb
add
sub
rol
ja
fnstenvs
sbb
mov
lea
stmxcsr
sbb
arpl
jo
sbb
test
pop
mov
or
dec
dec
adc
insb
ret
pushf
sub
mov
repz
lret
ja
int
add
adc
ja
enter
mov
mov
mov
stos
inc
add
insb
push
movsb
lods
lsl
arpl
shll
xchg
xchg
subl
xchg
and
mov
jp
mov
shll
dec
lret
jne
int3
lret
outsb
movsb
add
test
iret
xlat
in
inc
pop
cmpsl
or
add
pusha
test
loope
push
aam
insb
shlb
js
inc
pop
data16
lds
stos
loopne
arpl
jbe
mov
xchg
lcall
bound
push
scas
ja
xchg
xchg
lret
xchg
ss
mov
mov
in
sarb
jge
xchg
jp
or
fiaddl
jbe
lret
leave
je
add
jo
adc
or
jg
mov
dec
es
mov
mov
jmp
sub
jl
push
shlb
je
popa
pushf
pop
arpl
fstpl
enter
les
jg
jne
mov
data16
ret
movsl
or
cs
add
mov
adc
js
mov
ret
je
fistl
out
inc
mov
jbe
test
jg
ss
mov
adc
das
and
sub
mov
xchg
pop
add
sbb
sbb
scas
rclb
fwait
sub
shlb
rcl
std
adc
add
add
bound
ss
mov
add
stos
xor
test
jns
push
lret
imul
call
adc
gs
rcr
loope
dec
les
repnz
stos
jb
push
fdivrl
daa
faddl
les
mov
test
mov
fists
imul
movsb
inc
sbb
sbb
or
sbb
notb
sbb
adcl
adc
add
cmc
mov
or
popa
mov
sbb
daa
into
in
add
mov
mov
jns
mov
repnz
fmuls
shrl
fistpl
push
mov
insb
sub
sub
fistpll
mov
scas
fstp
and
cmp
pop
xor
js
sbb
hlt
add
out
test
jno
shll
dec
mov
aaa
mov
sub
fwait
lods
sbb
scas
lock
jo
add
or
dec
dec
cmpsl
sbb
js
sbb
mull
enter
sarb
cmpsb
add
jns
mov
mov
mov
out
push
cmp
sbb
dec
aam
insb
mov
imul
adc
movsb
push
insb
movsl
je
mov
mov
push
imul
pop
pusha
insl
xlat
add
or
ffreep
adc
js
sbb
or
shl
jo
imul
fnstcw
mov
mov
push
test
inc
cmp
fists
mov
push
mov
rorl
mov
lods
xlat
jmp
movsb
dec
fbld
shr
inc
insb
mov
mov
imul
into
cmpsb
adc
push
mov
aaa
xchg
ss
fldl
or
adc
add
mov
cmc
jge
enter
adcl
stos
test
shlb
imul
outsb
shlb
jle
iret
sbb
push
stos
jne
mov
je
pop
popf
ret
mov
aam
popa
call
adc
mov
jp
or
add
arpl
or
jle
mov
mov
cltd
les
adc
ss
fsubrs
pop
or
fcompl
add
jo
inc
sbb
fiaddl
dec
xchg
popa
jns
je
filds
fistpl
pop
mov
mov
push
fnstcw
xor
aas
push
mov
fimull
xchg
push
ret
pop
adc
mov
aaa
jp
test
iret
lret
mov
push
fmulp
std
stos
out
jbe
push
aad
push
mov
jno
jae
pop
lahf
daa
adcb
cmc
lahf
aam
sbb
sub
adc
in
sbb
dec
jg
jp
pop
lcall
in
xchg
inc
add
test
shll
push
push
shll
into
push
iret
adc
push
xchg
mov
jmp
into
in
xchg
pop
iret
or
loopne,pt
mov
mov
adc
jle
cmpsl
mov
sbb
adc
in
dec
cmp
jno
outsb
rcrb
mov
mov
int
mov
rolb
mov
push
enter
mov
call
pop
lock
shrl
lcall
xlat
out
out
jns
mov
enter
movsb
adc
add
pop
sub
mov
insb
lret
xorl
js
pop
mov
adc
jmp
and
popa
paddusw
dec
loopne
lahf
js
insl
ret
in
xchg
adc
mov
rorl
or
jge
dec
xchg
jl
xchg
mov
sbb
add
or
fsubr
insb
push
mov
shll
mov
push
insl
jae
test
into
insl
mov
jnp
push
sti
sar
mov
pop
insb
or
add
movsl
or
pusha
call
loopne
adc
adc
outsb
call
outsb
mov
push
jmp
pusha
fstps
fmull
sbb
jl
pop
push
xor
or
ja
scas
pushf
dec
movsl
or
popa
mov
adc
gs
das
add
jg
movsb
xor
pop
xlat
das
and
jl
gs
xor
mov
sbb
cld
cwtl
lret
pusha
rolb
mov
fstpt
imul
lret
pop
lea
and
enter
xchg
popa
fcomps
test
mov
imul
aas
addr16
jo
dec
or
push
mov
jne
jl
sub
fsubs
clc
sbb
add
decb
sbb
add
jno
jo
arpl
jo
sbb
scas
xor
add
push
arpl
outsb
jg
pop
jae
mov
mov
shrb
test
imul
sar
roll
adc
cmc
fsubs
shll
imul
mov
cmpsb
fsubrl
jbe
adc
add
repz
or
jmp
xchg
or
pop
dec
adc
sbb
cmpsb
jg
mov
jmp
mov
dec
mov
outsb
mov
in
pop
dec
inc
adc
aad
insl
mov
repnz
lret
jno
ss
jmp
shl
or
pop
imul
shlb
movsb
push
mov
cmp
add
push
rcrb
fnstcw
mov
mov
cld
push
add
push
test
jns
or
imul
jb
jnp
pop
fsubr
jp
icebp
ja
add
pop
add
jbe
dec
test
stos
push
or
in
fnstsw
jnp
jne
std
nop
sbb
fnsave
sbb
test
lods
cmp
xor
imul
pushf
adc
pop
dec
ret
or
ljmp
fildll
fists
inc
and
xlat
ss
mov
ret
insb
jecxz
int
sar
adc
push
mov
add
push
mov
gs
rolb
sub
mov
cmpsb
mov
xchg
into
mov
or
jge
jle
sbb
aaa
fisttpl
cmpsl
addr16
mov
lds
shrd
dec
adc
jp
jnp
push
mov
mov
mov
dec
int3
js
pop
mov
sub
je
sbb
out
mov
mov
fcompl
rorb
sbb
ljmp
loopne
dec
les
jmp
mov
mov
les
xor
out
mov
mov
fwait
mov
jl
or
mov
les
enter
cmpsb
imul
fstpt
adc
repz
ss
popf
sbb
pop
jl
add
iret
in
les
pusha
movb
push
xchg
sti
sbb
cmpsl
pusha
ss
and
movsl
adc
push
sub
fs
mov
mov
scas
cmp
xor
ret
pop
pop
sarb
fistpll
adc
dec
ret
pop
fcmove
mov
adc
sub
jnp
addr16
xchg
arpl
push
adc
add
pop
push
jle
or
pop
push
and
mov
lods
out
shlb
mov
mov
mov
pop
enter
sub
add
pusha
mov
and
sbb
pop
shl
dec
ja
xlat
adc
xchg
add
adc
adc
mov
mov
sbbb
jne
push
insl
xchg
sbb
jb
adc
jg
iret
jle
in
out
mov
push
hlt
stc
lods
jg
jnp
fcmovnbe
test
test
jl
xchg
push
mov
add
int3
pop
adc
mov
jbe
add
fwait
mov
leave
vunpcklps
shlb
fs
popa
mov
xchg
cmp
push
fistpl
cs
dec
sarl
push
ficompl
imul
xorl
mov
sbb
jno
add
daa
adc
mov
adcb
ret
add
push
ret
jl
aad
or
cmp
jae
imul
adc
mov
enter
fldl
mov
outsb
lret
inc
aaa
push
mov
faddl
mov
mov
inc
shll
test
cli
fnsave
shll
cmpsl
adc
sbb
sub
rorl
mov
sbb
mov
movsb
adc
mov
add
arpl
jns
sub
outsl
mov
aaa
lret
icebp
fdivrs
test
arpl
shl
insb
leave
fs
jns
push
movsb
aad
pop
mov
sub
aad
and
mov
pop
mov
repnz
sbb
or
xchg
aam
je
add
pusha
das
sbb
push
sbb
mov
shl
xchg
xor
popa
mov
mov
sbb
sub
adc
jno
push
mov
mov
adc
insb
sbb
cmp
push
insl
cmpsb
add
mov
push
rcrl
std
pop
xchg
outsb
aam
fmull
lds
mov
testl
add
sbb
imull
push
dec
or
rcl
cmpsl
xor
aam
add
mov
mov
mov
aam
fmull
adc
movsb
movsl
cmp
fsubs
ret
cmc
gs
jl
xor
xchg
dec
sbb
sbb
out
cmpsb
push
enter
xchg
and
mov
sarl
cmp
fiadds
clc
rcrb
leave
mov
mov
mov
jbe
fiadds
adc
scas
and
ss
lods
or
mov
cmp
mov
adc
xchg
jbe
aam
xchg
pop
adc
or
add
or
ret
das
pop
push
scas
jbe
jp
leave
sub
mov
mov
movsb
sub
cmp
ja
movsl
jo
clc
in
outsl
mov
lret
push
sar
lds
mov
insb
xchg
add
cli
imul
or
or
pusha
dec
in
push
adc
xchg
into
adc
jle
xchg
stos
cs
push
push
fnstenv
movsb
sub
ret
call
mov
repnz
addr16
fdivrs
mov
ds
sub
je
repnz
jnp
add
xor
add
adc
jle
mov
imul
pushf
sti
add
sarb
pop
xlat
sub
sbb
mov
ja
xorl
dec
rcll
aam
fstpl
xchg
or
pop
sbb
add
and
popa
jns
pop
stos
dec
loop
or
pop
shll
icebp
in
popa
mov
lods
movsl
xchg
pop
or
add
rorb
movsb
pop
sbb
xor
mov
mov
fidivrl
jae
xor
sbb
mov
add
sub
xor
add
add
call
rcrb
mov
adc
add
sbb
mov
ja
jae
call
lret
subb
sbb
pop
mov
gs
inc
or
fbstp
shll
scas
or
out
sbb
insb
fnstsw
pop
cltd
int3
jp
add
mov
mov
push
cmp
stos
add
mov
ret
push
stos
jecxz
das
sbb
leave
push
mov
push
adc
mov
ss
mov
lret
lock
add
cmp
xchg
push
jg
jp
mov
mov
rorl
or
ljmp
fistpl
xchg
add
jl
outsb
ret
mov
or
sti
jns
jge
mov
aam
sbb
outsl
movsl
pop
mov
mov
repnz
repz
popf
sbb
lods
mov
sub
push
into
add
adc
scas
iret
ss
mov
enter
xlat
xor
mov
or
bswap
jno
jg
mov
gs
push
mov
pop
mov
pop
jle
xor
mov
pop
sahf
push
or
pop
insb
mov
ljmp
sarb
test
adc
aaa
sub
sbb
pusha
frstor
rolb
icebp
pop
fildl
lret
lods
xchg
add
sbb
fs
insb
pop
imul
outsl
fistpl
rorl
mov
add
or
sbb
lock
push
aam
aas
jnp
ss
bound
imul
mov
or
popa
rclb
mov
mov
sub
pminub
fildl
xor
mov
xor
fistps
sbb
sbb
push
mov
xchg
insb
adc
xchg
sbb
xor
repz
pop
lock
or
jnp
lock
test
xchg
sbb
movsl
les
arpl
aad
insl
iret
arpl
mov
aam
sub
sbb
push
lods
mov
mov
add
jo
mov
jecxz
jl
imul
pop
sbb
pushf
in
nop
aad
mov
cld
prefetch
or
faddp
xor
push
rolb
push
movsl
popa
rorb
int
mov
sbb
int3
mov
mov
jns
dec
repz
jl
jne
outsb
dec
and
push
enter
addr16
add
fwait
js
rorl
jno
mov
repz
js
fs
jp
sub
pop
roll
ret
sbb
mov
fndisi(8087
push
sbb
adc
add
jae
adc
sbb
arpl
xchg
cmpsb
sub
sbb
arpl
pop
xchg
add
sarb
loopne
int
test
insb
push
xor
or
call
jbe
mov
sbb
add
adc
dec
adc
insb
flds
cs
bound
cmpsl
inc
repnz
mov
fs
and
mov
rcrl
xchg
in
pop
test
leave
aad
imul
push
xchg
adc
mov
mov
adc
mov
rclb
aas
popf
insl
cmc
pusha
mov
pop
es
adc
mov
mov
xchg
stos
inc
dec
inc
mov
mov
filds
adc
xor
mov
xor
insb
or
cli
jl
jg
or
sbb
sbb
jg
lock
insl
into
jnp
movsl
pop
mov
add
nop
sbb
push
add
mov
jae
add
mov
lock
jle
dec
push
mov
dec
xchg
jg
sbb
jge
testb
push
jb
orl
outsl
push
push
add
mov
lods
and
mov
adc
pmaxub
aas
mov
filds
hlt
xchg
jbe
mov
rclb
mov
xor
lea
sbb
js
fisttpll
jl
jns
pusha
mov
scas
xchg
insb
push
mov
ret
les
dec
fldl
inc
xchg
sbb
test
cmc
push
pop
mov
lret
into
testl
mov
mov
in
push
divb
shlb
loopne
jae
or
ficoml
adc
pop
fstps
insb
call
dec
mov
movsb
out
movaps
call
push
test
xlat
mov
adc
jne
sarb
sbb
les
lret
test
daa
jns
sbb
imul
jae
add
sbb
or
ret
mov
into
loop
pop
movb
nop
bound
fisttpl
adc
mov
jns
sbb
mov
jb
jbe
and
retw
outsb
filds
leave
outsl
mov
sti
jp
into
adc
jle
dec
fcom
lret
add
daa
adc
scas
push
or
popa
stos
adc
imul
gs
pop
mov
fsts
rol
lods
arpl
das
adc
add
jnp
xor
jno
adc
jp
pusha
movsb
jge
arpl
fbld
or
mov
fs
inc
mov
rolb
jnp
into
mov
add
fildl
rclb
jp
data16
sbb
inc
cmpsl
cwtl
push
jno
lret
rolw
mov
insb
sarl
pop
out
jbe
mov
add
fistl
insl
dec
push
movsl
lar
or
in
sbb
outsl
push
inc
test
mov
shl
rclb
mov
add
outsl
ret
loopne
rorl
jp
jbe
mov
pop
mov
adc
pop
shll
std
lds
lahf
jg
jge
cld
adc
mov
out
mov
add
rclb
sarb
pop
in
je
fisubrs
sarl
or
fnsave
xchg
lds
lds
jp
cwtd
sub
pop
mov
lods
outsl
incl
decl
je
scas
xor
lds
fisttpl
stos
push
add
cli
adc
mov
push
mov
aam
mov
shlb
adc
lfs
mov
mov
or
add
out
insl
add
or
fs
add
xor
cltd
or
push
mov
outsb
int
fsubrs
push
repz
sbb
or
mov
mov
data16
ret
mov
bnd
bound
add
xor
filds
mov
imul
scas
sbb
aad
imul
imul
mov
jge
pop
cmp
pop
add
popa
fiadds
sub
adc
push
mov
dec
mov
shr
addr16
testl
ljmp
leave
xor
sub
pop
mov
mov
mov
data16
mov
or
dec
push
add
sbb
add
xchg
arpl
or
adc
and
aam
das
mov
sub
jbe
mov
push
pop
fstpt
ret
cmpsl
or
sarb
test
mov
jecxz
push
or
sub
xor
jg
sbb
lret
or
imul
jge
gs
pop
mov
cld
lods
sbb
mov
pop
jl
cmpsb
pusha
fisttpl
fs
jae
je
mov
aam
fs
aam
jl
jns
lock
movsb
add
fnstenv
push
push
dec
mov
enter
xchg
jns
fs
faddp
dec
push
xchg
adc
test
cmpps
out
imul
scas
stos
out
sbb
xor
or
cmp
scas
dec
xor
pop
push
fstl
and
add
cmp
xchg
add
cmp
mov
mov
popa
cmp
enter
and
adc
pop
rolb
mul
repnz
fs
fcoms
rolw
imul
mov
ret
jl
sub
adc
in
sbb
jne
fwait
arpl
jle
adc
pop
data16
mov
jae
fldt
ret
mov
test
push
jnp
or
cmc
cs
cmp
je
pop
test
or
out
lods
test
ret
jnp
pop
jmp
imul
fisttpll
or
repz
jbe
insb
mov
in
adc
dec
push
movsb
ret
lock
mov
test
idivl
movsl
xchg
mov
ss
mov
xor
jae
xor
mov
lods
pop
lods
imul
mov
push
divl
mov
dec
lret
or
imul
into
int3
ja
adc
sub
arpl
ficoml
mov
jb
insb
loop
mov
mov
jmp
incl
pop
mov
dec
insb
and
mov
mov
inc
pop
in
mov
and
addl
mov
jno
in
cmc
xor
lock
arpl
jns
out
jne
insb
lock
pop
push
rcrl
push
pop
xor
xchg
jg
cwtl
mov
ljmp
test
inc
lahf
xchg
in
cmp
cmp
adc
ret
mov
push
std
push
mov
jbe
daa
mov
outsb
pop
push
scas
stos
pusha
sub
cmp
cltd
xchg
call
xor
and
inc
fldcw
enter
js
jne
or
dec
xlat
jae
inc
pop
fscale
scas
inc
outsl
inc
sbb
inc
jg
repz
aas
pop
cwtl
les
arpl
adc
jnp
push
jle
mov
xchg
cmp
sbb
shrl
lea
enter
leave
sub
jae
add
dec
psubb
cmp
scas
cmp
cwtl
mov
sbb
lcall
or
jb
jmp
and
daa
cmp
aaa
mov
ss
sub
jp
hlt
out
sub
out
push
sub
push
dec
add
xor
insl
mov
out
lret
mov
cs
popa
in
mov
mov
int
push
sarb
scas
or
aas
pop
lret
icebp
cmpb
les
outsl
clc
in
mov
in
and
ret
sub
mov
in
lcall
sahf
mov
push
xor
aas
pop
leave
in
mov
andb
pop
mov
cli
add
pop
pop
dec
sub
cli
sub
sub
loopne
adc
repnz
xchg
cld
pop
jne
lret
adc
fwait
push
dec
scas
mov
int
mov
es
cli
jg
dec
movsb
psraw
adc
insb
inc
sub
mov
add
rol
out
dec
xchg
mov
mov
stc
xlat
push
mov
fwait
push
xchg
rol
stc
loop
stc
aas
stos
sub
push
and
push
add
orb
shlb
adc
push
aas
and
loopne
popf
sbb
push
daa
mov
mov
in
push
cmp
repnz
mov
dec
insl
dec
ficomps
sarl
jbe
jb
xor
mov
xlat
push
push
pop
jno
ficoms
mov
popa
mov
mov
fcomip
and
adc
arpl
cmp
or
movsb
mov
in
mov
in
dec
mov
lea
mov
das
jne
mov
mov
jns
sbb
enter
leave
out
in
arpl
xorl
sbb
aam
jno
add
mov
flds
into
bound
or
adc
jne
loopne
pop
fldt
mov
ja
or
push
std
jb
btr
fstpl
mov
je
adc
fldenv
pop
mov
fcoml
sbb
pop
adc
cmpsl
popa
shlb
sub
xlat
push
stos
insl
pushf
add
les
rcrb
adc
cld
or
pushf
jns
gs
sub
mov
adc
push
aam
inc
adc
popa
sti
mov
mov
std
fcompl
add
mov
xchg
arpl
sbb
nop
les
push
cmp
js
int
pop
ret
add
fs
xchg
popa
mov
lods
fisttpll
push
aam
fistpl
rcll
xor
aas
jo
scas
adc
into
shlb
sbb
jb
data16
sahf
sub
ja
dec
dec
xor
gs
bound
jbe
loope
lods
sti
jg
pop
stos
xchg
mov
popa
mov
sbb
add
mov
inc
inc
sbb
xor
xchg
or
mov
lods
outsb
or
jbe
mov
movsb
push
mov
mov
mov
add
sbb
insb
mov
push
outsb
pushf
loope
mov
mov
popf
mov
imul
fmull
or
test
xor
aad
mov
int
icebp
ret
mov
int
mov
jne
push
xchg
je
movb
pop
out
push
dec
scas
pusha
insb
ja
mov
jg
jb
test
jp
addr16
pop
pop
les
out
lahf
inc
jno
mov
lahf
imul
rcrb
out
outsb
enter
sbb
leave
dec
pop
xchg
cmpsl
or
sub
push
or
imul
imul
xchg
jb
jb
add
xchg
adc
jnp
shrb
stos
pop
jnp
mov
insb
inc
add
icebp
jb
je
inc
rcl
dec
xchg
jb
mov
and
or
je
sbb
adc
dec
les
cli
mov
or
movsl
and
inc
or
or
pop
int3
jno
xor
pop
fsubl
adc
xor
mov
rcrl
fldcw
cs
outsb
mov
arpl
aaa
imul
mov
jno
add
push
push
imul
fidivl
test
push
mov
xchg
jnp
adc
push
insb
jo
test
rolb
call
bound
jbe
pop
decl
daa
jb
pop
add
stos
pop
pop
int3
or
jb
ja
pop
sbb
mov
push
call
js
mov
int3
push
shl
cmp
push
mov
ja
outsb
shrb
imul
push
iret
insl
iret
out
mov
insb
jle
dec
sub
ja
pop
cmp
jo
lfence
cmpsl
roll
enter
fisttps
fmull
push
fidivl
inc
jl
jg
push
mov
mov
jo
pop
push
sbb
push
mov
mov
outsb
test
add
into
test
lret
add
push
rcll
mov
inc
pop
cltd
pop
leave
add
fwait
xor
jae
jne
sbb
push
stc
or
dec
pop
shll
fists
fildll
int3
sbb
bswap
ja
enter
mov
jb
push
rcll
mov
fnsave
xchg
push
xor
jns
push
lods
inc
repz
sub
sbb
inc
and
mov
push
mov
bswap
or
movsb
jae
push
scas
cmpsb
jae
ficomps
insb
or
jbe
insb
inc
dec
imul
push
pop
adc
test
jge
push
mov
adc
out
xchg
ja
inc
xchg
cli
xlat
outsb
fdivs
xchg
fadds
les
mov
and
lds
cmpsb
mov
mov
lods
data16
enter
fadd
scas
xchg
sub
insl
movsb
inc
push
and
inc
cmpsb
in
mov
loop
mov
mov
aaa
push
xchg
jo
sbb
dec
mov
and
sarb
repnz
adc
arpl
insb
xchg
xchg
movl
leave
insb
scas
inc
js
sbb
outsb
pop
clc
sbb
push
pop
ss
insl
call
shrb
sub
pop
test
mov
adc
rorb
mov
jo
xchg
aam
mov
ss
sbb
repz
jg
pop
lods
xor
enter
jb
and
sub
dec
mov
lret
add
mov
aam
sbb
fdivl
pusha
mov
mov
dec
add
test
jns
rcrl
mov
sbb
fsubrl
jbe
aas
pop
or
fstpt
loopne
ret
rolb
or
pushf
xchg
sbb
jb
loopne
mull
push
adc
jl
sub
adc
cmp
lods
xor
push
mov
or
fidivrs
mov
sbb
sbb
mov
pop
lret
scas
stos
loope
xchg
addr16
data16
ret
adc
jne
adc
iret
jnp
test
dec
dec
icebp
push
adc
jae
shlb
mov
mov
out
icebp
push
repz
inc
adc
shl
cmp
ljmp
inc
notb
or
push
je
cmpsb
inc
roll
imul
xor
mov
int3
addps
add
fdivl
ss
iret
test
rcrb
jmp
dec
stos
push
icebp
add
mov
pop
dec
mov
jg
dec
mov
mov
xlat
cs
mov
stos
pop
mov
xor
push
andb
insl
fistpll
inc
insb
jo
xchg
pop
cmpsb
and
movsl
adc
test
mov
aas
sbb
inc
arpl
fs
les
xor
into
scas
loop
iret
cmp
stc
ret
jne
xor
push
ja
jle
iret
push
mov
rclb
and
sbb
add
or
movsb
es
mov
into
shrb
mov
popf
fiadds
sub
andl
test
daa
mov
ljmp
cmp
and
out
and
or
fidivrs
sbb
lock
xchg
push
inc
lock
and
shld
sub
jmp
inc
pop
mov
xor
xor
and
lahf
out
sub
jnp
mov
mov
dec
and
xchg
movsb
data16
adc
sub
std
aas
test
std
inc
xchg
movsl
cmp
dec
stc
push
sub
shlb
repnz
aam
mov
out
jbe
or
adc
pusha
sub
sbbb
shrl
push
cmp
popa
and
jbe,pn
insb
cld
les
sbb
in
mov
or
push
mov
add
es
fisttps
and
sub
ret
pop
out
sub
pop
jbe
mov
and
sub
out
add
addl
dec
mov
pushf
xor
inc
insb
jmp
fwait
lds
shll
sbb
fstpt
adcl
fsub
adc
add
or
push
aam
leave
jo
pop
mov
push
add
cmp
addb
push
cmp
out
rcll
insb
xchg
decb
out
mov
inc
in
jne
and
sti
and
fbstp
subl
pop
add
mov
cmp
adc
jbe
insb
dec
xchg
stos
jge
add
or
and
movsb
mov
shl
push
sbb
mov
sarl
jbe
sbb
call
pop
out
mov
cli
popa
inc
popa
test
cmp
aam
and
daa
sub
test
pop
add
cmpsb
test
lret
jecxz
mov
jg
sub
mov
mov
sbb
push
out
dec
push
mov
push
jle
leave
rolb
bound
std
loopne
push
sti
scas
jbe
cmp
dec
push
out
cwtl
lret
mov
out
pusha
mov
shl
loopne
testl
or
testb
mov
push
push
push
and
lods
mov
sbb
cmp
xor
lahf
sub
sbb
fs
jp
cwtl
and
std
lahf
test
dec
lods
in
jbe
outsl
es
decb
sub
ja
push
mov
fcomp
sub
in
add
add
jbe
mov
enter
jp
ror
aam
inc
insb
ret
xor
scas
jbe
and
mov
insb
mov
pusha
lcall
dec
sub
pop
jmp
cmp
xchg
mov
mov
shl
mov
leave
aaa
ds
aam
sub
sub
add
and
mov
dec
fdivrl
cltd
dec
loopne
enter
pop
test
mov
into
imul
adc
out
into
or
loop
pop
xchg
push
xchg
sbb
cltd
push
loop
int3
lds
fdivs
div
add
dec
mov
jbe
jl
dec
and
sbb
fdivs
and
push
jbe
pop
add
mov
mov
in
call
dec
pop
push
pop
dec
xchg
hlt
in
testb
mov
mov
cmp
das
imulb
icebp
pushf
popa
and
add
or
push
repz
in
insb
add
dec
in
jp
inc
arpl
push
mov
jp
cmp
mov
sbb
out
aas
cltd
insb
mov
jbe
insb
mov
dec
insl
xchg
jo
push
dec
fwait
in
aaa
popa
and
or
jae
dec
sbb
aad
rcrb
lret
loopne
push
fbstp
daa
bound
shrl
sub
lret
push
mov
insl
aam
push
sub
in
sbb
rorb
adc
cld
pop
sahf
repz
cld
scas
jbe
xor
jmp
cli
xchg
int3
cmp
roll
jge
cwtl
push
pushf
stos
sahf
clc
pop
push
jbe
andl
negb
ds
aam
rcll
sub
push
insb
pop
dec
out
dec
rcrb
cwtl
sarb
in
aam
subl
into
push
cmpsb
in
xchg
rolb
sbb
mov
scas
mov
aad
push
sub
lret
aam
ficoms
popa
push
xchg
mov
in
jbe
sarb
xchg
fwait
mov
push
aaa
dec
mov
mov
push
insb
cli
xorl
mov
cmp
fsts
adc
stos
dec
repz
movsl
pop
jbe
jecxz
ret
shlb
les
mov
pop
insb
or
push
incb
es
test
jbe
sub
xchg
mov
and
push
fcmovbe
es
js
cmpsb
inc
pop
mov
rcll
ret
mov
sbbl
sahf
repz
sub
mov
cmp
cmovae
jl
cmp
mov
sahf
push
or
fwait
out
lahf
add
insb
mov
mov
xor
arpl
and
xor
stos
ja
jbe
out
dec
fs
cmp
and
jl
insb
or
jb
aam
popf
aas
xchg
dec
inc
ljmp
or
mov
cmc
and
adc
test
or
fdivr
mov
es
imul
es
adc
test
and
dec
lods
xchg
mov
jl
xchg
shrl
into
je
pop
cmpsb
fisttpl
loop
sbb
inc
inc
mov
jbe
pop
lret
sub
aas
mov
bound
cmp
push
clc
xor
mov
roll
cmp
cmp
pushf
inc
jbe
xchg
jno
insb
daa
pop
cli
cli
and
ss
mov
cmpsb
arpl
jo
push
ljmp
pusha
test
pop
xchg
sub
fs
sbb
dec
out
ror
outsl
xchg
jo
cli
jno
dec
fwait
std
popf
shl
inc
and
xorl
pushl
mov
into
adc
mov
and
and
adcb
cs
addr16
add
out
stos
outsl
pushf
pop
lret
sbb
icebp
xor
out
pop
fldt
ret
jbe
push
sbb
pop
daa
aam
repnz
es
adc
dec
lret
mov
push
mov
xor
iret
add
aas
sarb
icebp
or
push
xchg
and
xchg
add
mov
pushf
insb
repnz
inc
movl
popa
dec
ljmp
mov
movsl
mov
dec
push
mov
mov
inc
mov
mov
mov
jl
imul
jnp
sbb
int
cmovae
mov
pop
pop
rorb
in
push
sbb
mov
push
mov
sub
lock
imul
xchg
out
cmpsb
mov
adc
rorb
and
push
xchg
nop
fldcw
repz
test
enter
loop
ljmp
and
sub
test
lea
cmp
pop
and
aam
inc
cmp
aam
xor
sub
stos
aam
cmpl
lret
xor
cs
inc
cwtl
adc
fcoml
jecxz
mov
sbbb
dec
xchg
test
sbb
mov
sahf
pop
inc
test
sti
stc
negb
jge
cmpsl
mov
je
ds
mov
mov
lds
push
outsl
ficoml
insb
in
aam
mov
mov
jbe
insb
dec
sub
cwtl
mov
mov
sti
loopne
mov
cld
add
mov
js
pop
loop
mov
adc
mov
ljmp
pop
iret
ds
adc
jecxz
sbb
dec
mov
jno
pop
loopne
cmp
dec
push
dec
push
xor
xor
insb
ss
push
popf
jbe
stc
pop
xor
pop
xchg
lahf
divb
psrlw
test
add
mov
push
lcall
pop
push
inc
inc
or
ljmp
sub
nop
jbe
loopne
push
jmp
aam
sahf
ds
aad
test
push
jle
xor
fistpl
pop
iret
jg
cld
cwtl
add
les
loopne
jae
cmp
push
mov
adc
cmp
mov
xor
test
in
fdivs
mov
sahf
xor
add
or
xchg
clc
mov
push
insl
arpl
mov
cmp
mov
push
lcall
dec
dec
mov
sub
outsl
mov
imul
pop
mov
push
lcall
pop
mov
out
sahf
mov
jmp
hlt
iret
cmp
adc
xchg
cli
xchg
imul
mov
ss
mov
mov
adcb
jns
xchg
xor
and
mov
shll
push
inc
jbe
push
xor
or
movsl
and
mov
cmp
xchg
ss
int3
cmp
outsl
xor
stos
push
int3
sbb
add
test
insb
xor
sub
out
sahf
sub
jbe
arpl
cmp
inc
dec
mov
out
out
ja
jbe
insb
fisubrl
mov
cmp
add
or
shr
push
mov
fsubrl
call
in
jmp
std
cmp
xor
mov
xchg
xor
pushf
cmp
fistps
xor
push
push
insb
shl
dec
mov
data16
in
mov
cmpsb
xchg
jl
xor
jmp
rcrb
icebp
and
push
jno
cwtl
jns
and
sbb
std
sbb
mov
insl
jg
adc
in
neg
jne
jae
popa
jae
mov
sbb
insb
call
and
cmc
xchg
inc
pop
lret
insb
negl
fldl
inc
xor
scas
cld
out
cmp
inc
aam
sub
xchg
cmp
imul
and
jp
xor
or
xchg
xor
mov
jmp
sar
repnz
ret
xchg
fmull
pop
repz
jle
movsl
jl
insb
les
mov
ja
mov
pop
inc
mov
inc
push
and
and
outsl
gs
fs
jl
aam
test
pushf
inc
push
fildl
xchg
or
hlt
sub
jb
pop
fwait
jbe
sub
bswap
std
or
rcll
pop
sbb
lret
repnz
mov
std
aam
mov
ror
jbe
aas
inc
jbe
mov
pop
out
int3
pop
lods
jbe
pop
lds
cmpsb
push
incb
fimull
rorb
jno
inc
movsb
mov
jno
test
aam
inc
cld
sbb
sub
mov
and
mov
rorl
cmpsb
es
dec
jne
mov
xchg
inc
sti
fs
cmp
sbb
or
ja
cmpb
adc
test
mov
fdivl
jno
inc
pop
mov
aas
fs
cmp
fsubrs
and
add
inc
inc
test
sub
dec
aam
hlt
insb
clc
mov
andb
out
aam
fistpll
scas
pop
frstor
test
jbe
insb
shrl
imull
and
xor
cld
xor
inc
and
mov
push
mov
testl
or
push
iret
fistpll
daa
dec
insb
fisubrs
inc
pop
out
fnstsw
jb
push
ja
in
or
jmp
dec
push
push
sbb
ficomps
int
mov
pop
aas
jbe
outsl
sub
mov
insb
cs
fdivrs
cmp
cmpsl
dec
jo
aam
mov
sub
jns
adc
shll
into
pop
lcall
push
popa
lea
pusha
push
ficompl
in
inc
cmp
push
jmp
nop
pop
xorl
imul
xchg
ret
mov
mov
imul
dec
push
stos
mov
and
cmpsl
aam
out
outsl
cmpsb
test
xchg
fdivs
int
sub
ret
mov
cmp
test
outsb
sar
inc
dec
pop
xor
jmp
inc
mov
in
inc
jmp
dec
cs
fsub
or
add
add
int3
popf
jbe
pusha
repnz
cmp
dec
jecxz
and
mov
aam
daa
sbb
cmp
xchg
aam
mov
jns
push
mov
xor
pop
mov
insb
mov
in
mov
loope
xor
mov
mov
pop
jmp
std
xchg
cltd
cmp
ds
jbe
inc
mov
icebp
xchg
mov
mov
cltd
mov
sti
jae
aam
pushf
insb
mov
inc
cmp
out
arpl
push
push
daa
push
xor
inc
insb
dec
and
das
mov
mov
inc
fbstp
ljmpw
push
mov
cmpsb
mov
xchg
and
cmp
inc
fstps
xor
rolb
insb
pop
pop
dec
movb
mov
scas
or
fistpl
icebp
lea
xchg
xor
cmpsb
div
arpl
jbe
insb
lcall
dec
or
loope
mov
bnd
fildl
imul
cmp
icebp
imul
sub
mov
mov
and
jbe
pop
jbe
dec
or
sub
loope
jbe
insb
fs
sbb
aam
addl
sub
andb
lret
inc
call
jbe
jl
adc
xchg
push
inc
leave
insb
sub
sub
lods
dec
adc
mov
mov
add
push
insb
xchg
sbb
js
cwtl
xor
pop
sbb
loop
jbe
iret
test
cs
xchg
sub
hlt
pop
inc
add
sbb
mov
fs
or
inc
movsl
int3
jnp
in
cli
and
div
or
test
mov
xchg
and
emms
fcoms
ds
imul
adc
hlt
or
cmpsl
pop
push
mov
inc
fsubrl
sub
cmp
lds
mov
cli
loop
mov
and
stos
dec
fdivl
aam
inc
decl
shr
jl
sub
stc
dec
add
jnp
mov
mov
movsb
or
push
ja
sahf
add
mov
int
xor
in
aam
push
sahf
fwait
sub
pop
icebp
out
pop
incl
lods
inc
push
cli
cmpsb
jle
xlat
pop
shll
inc
jbe
insb
add
mov
aad
lret
fwait
and
xchg
push
mov
lods
push
cmp
std
sti
or
mov
jbe
insb
sub
jp
aam
pop
loope
pop
sub
inc
mov
in
jb
mov
lcall
inc
ljmp
test
mov
fdivl
push
scas
mov
repnz
sub
insb
imul
sbb
push
jns
out
mov
mov
pop
mov
push
jne
popf
cwtl
jecxz
and
jbe
pop
stc
imulb
inc
incl
mov
adc
in
mov
jbe
lds
das
out
sub
sub
mov
mov
pop
popa
sub
popa
sbb
xchg
inc
fwait
ret
xchg
mov
out
and
pusha
push
outsl
cmp
mov
sub
push
data16
subb
sub
insb
call
push
mov
push
nop
pop
sti
pop
stos
mull
imul
out
mov
inc
dec
inc
scas
xor
push
ret
mov
mov
lret
mov
fists
xor
dec
jbe
insb
cmp
test
push
insb
add
mov
ds
insb
xor
push
aam
pop
cld
adc
pushf
pop
push
cs
mov
sbb
ficompl
and
fs
pop
jbe
insb
jmp
jbe
inc
pusha
repz
insb
das
dec
push
cmpl
push
mov
mov
dec
ret
pop
dec
notb
lret
mov
mov
imul
insb
or
jbe
insb
mov
jbe
pop
es
pop
or
out
xor
cmc
repnz
jmp
add
es
jl
lods
sbb
aam
ljmp
jbe
insb
imul
rcl
jecxz
lock
shlb
pop
lea
and
rorb
jnp
pop
loope
enter
dec
aam
pop
loop
dec
cmp
cmp
inc
insb
add
imul
jmp
out
and
mov
pop
mov
aas
cltd
into
add
out
mov
add
sti
addr16
enter
and
push
jbe
inc
loope
jno
in
cmpsl
mov
enter
aam
mov
mov
push
jmp
icebp
and
lock
cmpsb
mov
aam
sti
inc
xor
add
lods
lock
dec
push
fnstenv
sbb
rolb
pop
shlb
stc
inc
xchg
insb
clc
pop
fstpt
inc
xlat
in
xor
jns
xchg
je
jbe
and
and
cwtl
cmc
insb
stos
ficomps
insb
icebp
out
ror
xorb
in
mov
in
shlb
push
mov
mov
and
jbe
xor
sub
hlt
push
cwtl
or
loopne
sti
or
rcll
adc
test
cltd
jbe
pop
std
rorb
jbe
out
push
es
aam
xor
scas
jbe
insb
call
out
pop
sbb
dec
mov
inc
adc
fnstcw
mov
dec
pop
pop
dec
rcll
jl
inc
loopne
pop
adc
stc
xlat
sub
test
xchg
mov
jbe
bound
mov
ret
mov
mov
push
mov
movsb
insb
add
in
clc
loop
addr16
lds
aam
mov
sbb
mov
andl
adc
push
pop
cli
inc
hlt
repnz
pop
rcl
loopne
jg
in
shll
jns
sbb
cmp
inc
out
andl
out
insb
jmp
repnz
les
cltd
push
aam
jmp
imul
test
std
mov
addr16
or
xor
ss
push
cmp
or
test
test
stos
invd
int
jae
repnz
mov
addr16
add
subl
adc
test
rcrb
test
sub
lock
hlt
dec
mov
call
movups
lds
pop
pop
out
mov
icebp
out
mov
popf
add
xor
hlt
addr16
andl
pushl
insb
jns
clc
shl
jbe
add
lea
cmp
add
sti
ds
adc
imul
stos
jbe
jge
mov
popf
daa
test
cli
mov
mov
xchg
es
add
push
mov
jbe
mov
aam
mov
movsl
nop
test
les
ds
and
xor
mov
mov
push
test
fwait
out
mov
jmp
movsl
add
mov
rcll
inc
xor
mov
dec
sbb
mov
xor
popf
and
jae
mov
inc
xchg
pop
and
pop
outsl
fidivs
dec
push
inc
clc
jno
fdiv
scas
loope
xorl
push
fsubrl
dec
icebp
psrld
xor
call
add
out
push
js
fildl
insl
pop
outsb
ret
and
add
mov
test
fwait
mov
shlb
push
gs
inc
mov
and
push
sbb
jb
aam
inc
insb
cld
push
cltd
and
xchg
bnd
mov
fsubrp
cwtl
add
push
sarl
xor
xor
sbb
test
shll
mov
inc
aam
xchg
cmp
cmpsl
fwait
add
adc
xchg
clc
test
lahf
insb
mov
sub
cmp
jne
xchg
movsb
add
js
and
shrb
out
arpl
cmp
fyl2xp1
loopne
mov
push
jge
nop
sbbb
cmp
or
mov
icebp
loope
arpl
aam
test
mov
or
out
mov
iret
arpl
into
dec
mov
out
dec
push
ret
daa
js
push
loopne
jbe
data16
pop
pop
sub
mov
sbb
or
inc
out
movaps
xchg
mov
call
fstpt
push
push
xchg
call
xor
js
lds
rorb
stos
js
fcoml
insb
push
sbb
out
fbld
mov
push
rorl
mov
sub
cmp
jg
lea
test
loope
mov
push
xor
mov
cmpsl
aam
lea
pushf
jbe
arpl
test
pop
mov
fwait
cld
pop
or
pop
jp
sbb
dec
mov
nop
into
cmp
cmp
ja
sub
push
jne
cmc
aam
mov
outsb
scas
push
ret
push
or
stos
mull
mov
cmp
loop
loop
jbe
insb
xchg
call
repz
ja
mov
nop
xor
movsl
aam
aad
fwait
out
mov
das
mov
cmp
insb
loopne
mov
cmp
mov
pop
inc
insl
and
aam
fisttpll
xor
imul
fsts
insb
or
lcall
inc
imul
inc
inc
dec
push
xchg
test
pop
push
mov
adc
mov
lds
pop
sarl
pushf
lods
cltd
mov
insb
arpl
jmp
mov
das
and
adc
popf
mov
mov
or
mov
or
mov
and
pop
xchg
data16
insb
mov
mov
mov
negb
xchg
mov
sub
mov
pop
in
aaa
jbe
insb
mov
fwait
dec
push
dec
mov
insb
xchg
cwtl
mov
mov
add
mov
pop
lea
imull
cmpsl
nop
jge
cld
jbe
cmp
cmp
jo
adcl
sahf
dec
shlb
clc
aam
cli
inc
shlb
hlt
jbe
insb
adc
cmp
popf
outsb
push
rol
jbe
inc
gs
push
jbe
mov
insb
dec
fwait
lea
cmpsl
outsb
jmp
dec
jecxz
add
sti
mov
mov
mov
out
nop
fldenv
das
insb
sbb
dec
mov
rcll
xchg
cmp
adc
lcall
in
inc
test
rcrl
rcll
std
insb
sahf
lds
mov
push
xchg
pop
nop
pusha
jo
push
fwait
jns
mov
cmp
shl
push
insb
add
shlb
push
arpl
testl
cmpsb
insb
inc
mov
int
sbb
repz
test
out
add
in
cmp
dec
sub
mov
pop
sub
xchg
sub
inc
nop
jbe
test
lock
push
mov
pop
aas
jl
mov
jbe
pushfw
ja
pop
aas
ss
int3
popa
loope
mov
addb
sbb
pop
cltd
dec
arpl
hlt
stc
inc
arpl
aad
addr16
aad
fisubl
in
sub
shrl
in
jge
sub
push
shrl
shlb
inc
ret
aam
mov
jno
pop
sub
dec
out
cmp
and
mov
ror
insb
adc
mov
daa
jns
ds
inc
jbe
movsl
mov
push
aam
xchg
pusha
mov
mov
xor
jp
rorb
mov
jbe
inc
cmpsl
sbb
xchg
movsl
in
mov
mov
leave
jnp
cli
lds
dec
decb
cs
pop
jbe
insb
fcoms
pushf
jbe
and
inc
pop
xchg
jo
pop
mov
imul
test
std
mov
cmp
mov
pop
jnp
ss
jbe
or
xorb
cwtl
jp
pushf
inc
mov
mov
dec
in
add
adc
inc
cmp
addl
and
xchg
mov
dec
cmp
nop
mov
test
sub
insb
jne
sub
jbe
insb
sub
mov
jbe
js
sbb
mov
add
aam
mov
inc
or
cli
dec
xor
push
aas
lret
testb
ljmp
sub
ret
jbe
insb
pusha
jb
test
daa
inc
sarl
jg
push
inc
adc
scas
cmp
mov
pop
inc
jecxz
sub
adcl
sub
sti
and
inc
aam
cmp
dec
mov
lods
jmp
cmpsl
jmp
out
push
es
xchg
mov
sub
stc
push
or
sub
aam
mov
jb
dec
lock
fs
sub
mov
push
cmp
dec
push
mov
xor
dec
and
cmp
inc
mov
ds
jnp
jbe
or
adc
arpl
xchg
aaa
mov
xchg
aaa
or
aam
mov
daa
shl
mov
sub
stos
insb
mov
xor
push
jb
cmp
cld
push
push
jbe
inc
dec
mulb
xor
clc
pushf
loope
push
push
outsb
pushf
outsb
lods
xchg
mov
mov
pop
mov
push
jbe
cmpb
or
ret
xorb
call
jbe
push
inc
mov
pop
mov
jp
add
shll
insb
test
into
xchg
pop
fsub
dec
xchg
mov
out
add
and
adc
pop
mov
std
cld
lock
aam
mov
movsb
inc
mov
pop
idiv
insb
stos
mov
test
insb
enter
je
mov
mov
push
sub
out
jmp
pop
loop
mov
loopne
test
or
push
and
mov
gs
orl
pop
or
pop
decl
sbb
push
jns
mov
cs
ds
add
aaa
cmpsl
insb
and
cli
mov
rorl
mov
pop
sti
bound
and
insb
gs
add
push
loope
dec
roll
loop
dec
sub
fs
inc
mov
sahf
add
dec
sarb
popf
test
push
stc
insb
aas
dec
stos
xchg
int
in
mov
dec
dec
jne
lea
inc
addl
insb
add
mov
aam
lock
mov
jo
shrb
xor
insl
pop
aaa
dec
mov
or
or
xor
add
jge
push
jne
xchg
aaa
cld
push
inc
push
push
mov
stos
insb
mov
push
dec
mov
add
cmp
divb
mov
lahf
imul
aaa
fdivs
push
cs
fwait
adc
enter
push
std
gs
nop
xor
sub
ljmp
lock
test
mov
add
in
rorl
int3
sub
les
jbe
push
add
jmp
mov
test
fsub
aam
mov
pop
push
or
adc
push
mov
sti
dec
dec
roll
and
jae
arpl
jne
scas
jbe
and
adc
push
test
add
xchg
push
inc
and
cltd
jmp
inc
stos
push
mov
push
push
dec
dec
jns
mov
push
pop
push
fs
lret
and
enter
icebp
loopne
adc
add
cltd
push
add
aam
aam
in
inc
xchg
mov
cli
jbe
cmpl
sub
iret
fidivs
push
jbe
insb
addr16
pop
aam
mov
sbb
jbe
pop
mov
adc
mov
sbb
sbb
or
and
jecxz
pop
xlat
jbe
mov
mov
fwait
rolb
stc
lods
jbe
jge
push
mov
insb
nop
je
cmpl
add
mov
mov
test
push
adc
inc
sbb
lret
jbe
and
mov
std
std
mov
push
rcrb
rcll
shll
or
mov
in
lret
push
or
mov
xlat
xchg
pushf
das
icebp
out
jno
dec
jbe
mov
mov
ss
cmc
negl
xor
hlt
enter
jbe
cmp
sbb
mov
cmp
jmp
bound
sub
sti
jbe
insb
into
sub
test
mov
fldl
inc
mov
pushw
gs
lret
insb
push
sbb
fpatan
shrb
insb
inc
mov
dec
insb
push
mov
dec
or
mov
jbe
dec
in
inc
add
or
and
mov
rol
in
and
cmpsb
adc
das
test
xlat
ror
aam
mov
xchg
and
cmp
and
outsb
aam
push
jg
in
inc
mov
mov
rcrl
fprem
aad
pusha
push
xchg
aaa
out
push
test
out
aaa
aaa
enter
out
mov
aam
lret
jl
push
mov
fnstsw
mov
pop
jl
fldenv
pop
jnp,pn
xor
dec
rol
push
push
mov
inc
jg
aaa
aam
mov
cmpsb
scas
add
test
subl
mov
fbstp
aad
jbe
popf
push
arpl
insb
sub
leave
pop
je
adc
cwtl
outsb
and
leave
clc
das
lahf
mov
call
xchg
push
sub
adc
popa
cmp
xor
insb
jecxz
dec
jmp
jbe
mov
jg
inc
enter
xor
push
push
mov
dec
mov
fistpll
add
mov
std
pop
sbb
aaa
inc
shll
in
sub
nop
loope
mov
sbb
xchg
psrlq
mov
pop
aam
mov
bound
mov
les
call
adc
mov
subb
shlw
imul
in
faddl
add
stc
jbe
mov
aam
xchg
insb
je
mov
jo
pop
insb
dec
add
insb
cmp
jbe
in
xchg
les
loopne
mov
push
mov
mov
mov
push
loope
in
pop
dec
sub
sbb
push
cwtl
in
comiss
or
sub
scas
cmp
and
or
scas
sub
shl
mov
fwait
jmp
pushf
mov
sub
lods
scas
rcll
xchg
pop
popa
aad
jg
aam
mov
mov
loopne,pn
push
mov
mov
jbe
dec
pop
in
mov
fisttpll
hlt
mov
jg
ds
repz
jo
sub
pop
xorb
add
inc
jbe
pusha
or
mov
stc
add
dec
aam
dec
push
sarb
lods
adc
and
or
mov
mov
lret
adcb
ljmp
out
and
in
mov
fnstsw
sub
rorl
fsubs
or
xor
repz
cmp
xor
mov
add
or
jbe
orb
ljmp
movsl
mov
flds
ret
in
loop
pop
ja
xchg
imul
push
xor
push
lret
inc
jo
jl
jp
cwtl
cmpsb
jbe
or
into
data16
pop
out
push
fcoms
xchg
insb
jg
mov
ja
inc
adc
stc
jbe
insb
sub
adc
ja
and
xchg
xor
jp
loope
mov
jg
add
into
jae
pop
cmp
inc
aam
lock
scas
cltd
xchg
mov
adc
cmp
xor
xor
adc
cmp
sub
cmp
pop
loope
add
inc
stc
test
jo
dec
lret
inc
pop
jmp
xor
call
dec
xor
xor
cmp
pop
out
xchg
adc
out
adc
and
mov
shll
mov
popa
out
insl
shll
jno
jno
inc
aam
mov
cmpsl
out
jns
dec
mov
fdivs
ret
jg
movl
divl
shlb
push
jg
jno
lret
loopne
shrb
sar
fdivs
fsubrl
pop
sub
shlb
pop
jmp
mov
fdiv
filds
xchg
repnz
inc
xor
jae
in
pop
mov
inc
mov
pop
push
frstor
repz
stos
loop
mov
lock
xchg
cmp
mov
add
jecxz
stc
fstpl
jo
lds
push
nop
pop
or
push
cmc
dec
adc
or
mov
repnz
push
mov
dec
xor
fwait
mov
pusha
test
maskmovq
sbb
lret
jbe
jecxz
stc
fiadds
sahf
cld
mov
andl
add
repnz
pop
mov
lsl
in
cld
imulb
and
or
aam
mov
pop
or
push
jp
push
dec
adc
cmp
call
mov
inc
sti
les
pop
lock
out
jle
inc
nop
mov
adc
adc
inc
cmc
fdivs
mov
or
inc
popf
adc
add
ljmp
js
xchg
xor
cli
push
mov
mov
call
inc
sti
insb
mov
fsub
cmp
cmp
jbe
scas
mov
ljmp
inc
and
sub
sub
aam
lock
jbe
insb
mov
aaa
mov
sub
int
jle
pop
je
je
sti
sbb
icebp
int3
je
and
jmp
loop
dec
xor
enter
mov
cmp
movsb
aam
mov
out
mov
out
lret
mov
and
pop
cmc
pop
stc
in
insb
push
jo
sbb
jbe
inc
jb
jmp
xchg
imul
jbe
fbld
sub
or
insb
lods
cmp
aam
mov
fwait
ss
dec
aam
fwait
push
leave
mov
out
and
scas
aam
jecxz
push
in
fs
jbe
inc
leave
xor
jne
push
mov
daa
mov
stos
dec
std
ret
psllw
loope
mov
fisttpll
xorb
cmc
push
test
subl
pop
shrb
mov
dec
sub
outsl
out
inc
mov
out
jmp
adcl
jbe
sbb
mov
add
fnsave
xchg
jle
ficoms
mov
fiadds
fstl
int3
or
xor
push
mov
jbe
push
pop
push
jl
sbb
or
jo
xchg
aad
in
aam
int
jmp
mov
cld
jbe
shll
xor
leave
movl
add
jge
jbe
xor
incb
sbb
nop
data16
mov
inc
xchg
push
mov
push
push
aam
adc
ret
pusha
mov
js
daa
ljmp
inc
aam
cmc
push
pop
mov
inc
cmp
mov
add
imul
lock
test
push
mov
pop
test
sbb
dec
push
lahf
xor
adc
aam
roll
jmp
xchg
aas
dec
mov
jg
ja
shl
add
sbb
cs
pop
pop
xchg
movsl
imul
lcall
lock
mov
xchg
jno
data16
daa
adc
dec
clc
cs
xchg
adcb
or
scas
xor
xor
insb
fistpl
out
popa
push
push
pop
pop
jbe
imulb
pop
dec
enter
scas
sahf
out
subl
push
aaa
xchg
jbe
push
push
and
dec
bsf
icebp
addr16
cli
mov
js
insb
mov
fs
xor
cmpsb
push
lea
cmc
sub
icebp
std
sbbl
cld
cld
ret
js
push
loope
ss
dec
imul
in
icebp
xchg
int
xchg
xchg
icebp
jns
push
inc
dec
pop
arpl
pop
lods
push
imul
pop
cmp
mov
mov
jbe
adc
aas
sub
lret
jno
inc
push
jge
es
rol
loope
jp
jbe
add
push
dec
aas
jecxz
fwait
pop
sarl
pop
xchg
icebp
xchg
js
sarl
repnz
mov
add
out
and
jae
pop
out
aad
int3
pop
jmp
rorl
cmpsl
push
js
popf
dec
xchg
jbe
push
sbb
scas
mov
jg
sbb
jbe
cmp
dec
mov
shlb
or
js
sbb
aam
and
add
jno
adc
mov
ds
xchg
push
mov
test
and
cmp
das
push
jg
cmp
rclb
adc
repz
inc
lods
dec
imul
mov
push
test
lret
jno
scas
xor
insb
loope
jae
dec
push
cmc
adc
inc
cs
inc
out
and
mov
insb
jns
add
int3
dec
mov
mov
push
cltd
out
aam
fstpl
movsl
xor
adc
lock
xor
addb
jnp
test
xor
ds
sbb
add
aam
sub
jp
push
aas
shlb
jno
jbe
adc
lock
dec
cltd
arpl
pop
stos
fsubr
xchg
repnz
jbe
or
dec
inc
fdivrl
fists
mov
les
mov
jns
movsl
mov
mov
sbb
mov
mov
test
test
push
sbb
test
jbe
inc
popa
xor
jge
and
lcall
sub
fs
lds
jo
and
or
subl
mov
xor
lock
stos
and
cmp
data16
pop
inc
xor
inc
popa
out
outsb
xlat
mov
sbb
test
loopne
in
aad
add
inc
inc
dec
sub
adc
jbe
fsubl
push
cld
into
jnp
std
sbb
dec
aam
mov
jns
das
inc
mov
test
fildl
pop
push
insb
xchg
andl
cmp
or
aam
inc
add
jno
movsl
sub
test
lds
sbb
cmp
jno
cmp
lahf
imul
xchg
cltd
fiadds
insb
xchg
popa
inc
jae
fwait
lea
bound
ret
out
mov
xor
or
pop
out
mov
push
loop
push
aam
and
rorb
ja
cs
int3
dec
icebp
nop
push
fcompl
pop
int
insb
jmp
mov
lods
xor
push
ret
insb
fs
sub
lret
insb
dec
mov
hlt
or
repz
fs
mul
push
out
sbb
pop
mov
xchg
cld
jbe
pop
out
sub
insb
pop
popf
mov
imulb
hlt
sub
adc
bound
out
sbb
dec
ss
pop
out
out
jl
cmp
loope
stos
aam
inc
outsb
es
lret
pop
mov
inc
cmp
aam
leave
insb
outsl
imul
push
jmp
xor
testb
outsb
out
leave
aam
xor
int
mov
dec
ljmp
and
popa
ret
pop
or
mov
fcoml
insb
in
popa
ja
shrb
mov
pushf
aaa
lahf
lahf
jbe
push
jecxz
mov
xchg
jp
faddl
fidivrl
rcr
dec
dec
xor
xor
cmp
sbb
jle
scas
push
aam
mov
shll
jl
inc
and
xchg
cli
imul
pop
loope
sub
insb
adc
movsb
dec
xchg
mov
jp
push
sbb
in
jp
or
ljmp
xchg
jbe
outsl
fmulp
insl
sub
test
shll
aam
lods
jno
mov
shll
xorb
in
insb
and
mov
lds
pop
cmpsb
aam
dec
push
inc
xchg
in
sbbb
push
xchg
inc
mov
cli
scas
sti
ficoml
mov
addr16
pop
mov
out
aam
cmpsb
or
sbb
insl
rorl
mov
cmpsl
or
repz
into
mov
inc
dec
mov
insb
sub
lock
jbe
pop
rorl
lret
sbb
add
in
iret
inc
mov
xor
aam
loopne
pop
or
cmp
insb
adc
push
into
in
sbbl
lds
pusha
mov
mov
sarb
shll
ficompl
sub
pop
dec
push
fistps
insb
adc
mov
loopne
or
sub
int3
push
jnp
push
push
sub
cmp
xor
or
aam
cmpb
je
cmp
mov
rorl
ljmp
xorb
int3
cltd
ds
lds
jle
pop
rorl
cmp
insb
fdivrs
insb
push
mov
inc
loop
xor
or
cmp
outsb
add
loop
and
por
idivl
jbe
mov
int
test
outsl
push
sub
clc
fmul
jecxz
and
mov
inc
insb
popf
jb
pop
add
loopne
mov
leave
insb
sahf
decl
mov
ficomps
add
shlb
movsl
add
mov
in
jb
pop
mov
pop
mov
leave
or
pushf
adcl
cmpsb
arpl
push
sub
sbb
mov
sbb
test
in
fs
jbe
push
sbb
ljmp
aam
mov
xor
enter
xor
mov
lret
sahf
dec
mov
lcall
insb
mov
repz
testl
mov
sbb
or
cmp
sbb
aas
daa
dec
lret
insl
xchg
dec
mov
adc
mov
es
mov
lods
sub
lcall
lock
lret
adc
cmp
mov
dec
or
cmp
mov
xchg
outsb
scas
pop
push
and
insb
and
insb
test
inc
mov
sbb
mov
push
and
ja
gs
idivb
lock
sub
jb
pop
aam
rclb
dec
mov
insb
inc
stc
fnsave
pop
fwait
cmpsl
mov
sub
imul
xor
push
cmp
loopne
inc
loopne
sbb
into
xchg
jl
imul
pop
dec
out
pusha
mov
or
inc
xor
xor
mov
pop
arpl
lahf
out
inc
movl
mov
into
jbe
insb
into
mov
push
das
jbe
lcall
push
scas
or
cmp
push
lods
call
xor
push
imul
outsb
xor
mov
push
sbb
mov
es
cmp
es
and
js
sarl
inc
bound
push
pop
sti
xor
insb
into
jbe
cmpsb
jbe
add
or
or
jbe
or
daa
jbe
add
inc
push
adc
lods
mov
gs
mov
push
cmp
cld
test
outsb
and
jbe
aas
lock
std
arpl
arpl
push
inc
xor
or
xchg
xor
je
and
dec
jp
movsb
shll
das
stc
sub
sub
xchg
pusha
sbb
test
add
push
addl
imul
aam
push
imul
lret
insb
mov
sahf
movsl
pop
scas
fcoml
cmp
shrl
aam
enter
mov
std
xor
mov
inc
mov
mov
add
inc
les
sbb
add
repz
mov
cli
insb
aad
xor
std
std
jecxz
test
je
aam
xor
outsl
in
jbe
sub
repnz
aam
aad
jecxz
out
inc
add
jbe
insb
mov
pop
hlt
pusha
dec
mov
test
repnz
pushf
fsubrs
insb
xor
aam
jecxz
add
adcb
xor
loopne
jle
dec
nop
push
stos
out
in
mov
rorb
icebp
insb
fmul
adc
fnsave
insb
divb
mov
insb
jns
mov
dec
xlat
jecxz
pop
and
jne
inc
test
jo
mov
and
lock
add
aam
inc
pop
lahf
aad
jno
cmp
aaa
sbb
xor
insb
or
or
sbb
mov
and
jl
jb
sub
cmc
sub
dec
mov
inc
fsubs
xlat
lock
loopne
imull
fucomi
mov
scas
jecxz
movb
mov
pusha
addr16
xorl
inc
cmpl
push
jbe
xchg
push
push
nop
subb
out
scas
jae
push
mov
mov
mov
xor
adc
ja
push
outsl
popf
insb
clc
ljmp
je
adc
lock
adc
push
int3
jg
cltd
mov
pusha
test
pop
call
loop
jle
pop
loopne
femms
push
mov
dec
mov
shrl
stos
lahf
and
insb
push
jbe
insl
dec
cmp
push
fsubrs
ret
jg
jbe
data16
std
cmp
push
cmp
jbe
inc
inc
pushf
fmull
icebp
in
adc
popa
push
jbe
es
or
out
jbe
pop
data16
mov
xchg
mov
xor
dec
out
aas
adc
shrb
int
movsl
lock
xlat
aas
dec
and
insb
fadd
mov
test
aas
aam
enter
jmp
cmp
inc
cld
bound
push
aam
loope
cmp
aad
xchg
pop
loopne
adc
fdivrl
push
mov
mov
push
jmp
mov
push
sbb
mov
outsl
pop
pop
lcall
ljmp
stos
pop
sub
jbe
jnp
movsl
cmp
cwtl
push
imull
add
pushf
fsub
jne
ds
xchg
pop
jle
cmp
inc
xchg
in
pop
mov
in
ret
mov
insb
movsl
iret
jo
mov
push
mov
repz
fidivs
mov
push
lock
jbe
add
aas
push
mov
mov
push
loop
mov
mov
jnp
jg
inc
cwtl
gs
adc
lock
pop
outsb
jbe
add
sub
sub
fbstp
jbe
pusha
mov
sub
ret
std
mov
or
cmp
loope
and
aam
push
out
jb
inc
insb
daa
jbe
jns
adc
pop
rcrl
pop
dec
mov
stc
and
inc
movsl
imul
insb
rolb
insl
mov
js
fisubrl
xor
xorb
sub
rolb
addr16
add
aaa
cmp
jp
xchg
jbe
xchg
mov
jbe
jb
popa
xlat
bound
jnp
mov
dec
cmp
jl
or
cmp
fldenv
jbe
jmp
inc
ja
cmp
adc
popa
cmp
dec
xchg
inc
dec
xlat
push
imul
dec
aam
mov
fdiv
neg
iret
jbe
insb
xor
adc
arpl
mov
sub
lret
add
cmp
sbbb
pushf
aam
pause
add
mov
daa
or
sahf
pop
sbb
stos
add
jbe
cmc
push
dec
inc
pop
mov
mov
mov
jbe
inc
dec
repz
stc
pop
dec
lcall
add
mov
js
adc
faddl
insl
pushf
scas
mov
dec
mov
clc
jg
push
insb
xchg
testl
add
mov
test
or
jbe
fistpl
lods
jbe
push
push
ret
mov
insb
dec
sbb
bound
stos
lret
fwait
sbb
sar
leave
push
jle
push
sub
sarl
jne
pop
ja
or
add
or
or
xor
data16
push
aaa
mov
and
das
or
mov
pop
insb
lret
push
xchg
xor
jbe
cmp
sub
ret
inc
sub
sbb
lret
inc
dec
clc
xchg
sbb
clc
dec
cwtl
xlat
xchg
scas
jbe
jns
push
cmc
in
xlat
in
and
sahf
scas
pop
lret
jbe
outsb
push
mov
pop
aam
pop
insb
sbb
xchg
xchg
adc
adc
pop
xor
dec
movsl
imul
rorl
insb
lods
ret
mov
dec
outsl
cli
rcrb
add
mov
hlt
and
insb
lcall
test
jbe
insb
fwait
imul
jmp
insb
call
push
mov
inc
fmull
mov
insb
mov
jbe
push
stos
ljmp
nop
dec
cmc
inc
bound
dec
lret
push
stc
pop
or
push
and
xor
dec
mov
mov
pop
pop
push
sahf
sub
loope
test
mov
dec
dec
insb
popa
les
aam
subl
lock
cltd
xchg
cmp
minps
iret
push
insl
test
adc
or
aam
shll
rcrb
xchg
or
and
lea
clc
in
mov
fldl
pop
inc
and
les
adc
inc
xor
and
adc
and
insb
ret
stos
lret
and
test
mov
ss
shll
mov
and
jge
test
aam
adc
sbb
xor
cmp
cmc
push
lea
out
and
adc
fcmovnb
xor
sbb
das
repz
mov
addr16
mov
jbe
inc
xchg
jae
test
jbe
inc
mov
outsl
mov
cltd
pop
mov
cmp
push
dec
aam
test
push
mov
je
cli
sbb
aam
lea
mov
lods
mov
dec
popa
cmpb
incl
int3
hlt
imul
adc
adc
xchg
dec
fstpt
and
cmp
adc
mov
dec
mov
out
aam
xchg
insl
icebp
mov
mov
fimull
jns
icebp
cmp
jge
mov
and
inc
xchg
ljmp
nop
add
or
in
aam
inc
insb
pop
mov
xor
scas
aas
fsubl
jae
jmp
push
sahf
cmp
popf
jg
fmuls
add
daa
cmc
mov
sbb
cwtl
pop
movsb
push
stos
insb
and
or
push
shll
enter
test
stc
icebp
rcl
js
js
dec
sarl
mov
mov
pusha
jbe
insb
fdivl
fcoml
cmpsb
insb
ljmp
push
add
das
enter
je
scas
mov
aam
mov
lds
push
and
inc
mov
sbb
movsb
pop
shrb
mov
jg
in
mov
or
push
pop
jp
icebp
sub
stos
xchg
add
lahf
xor
or
ljmp
xor
add
and
jae
sbb
aad
ljmp
insb
sbb
cvtpi2ps
cli
mov
or
setp
call
jb
stos
mov
insb
sbb
rcrl
scas
imul
and
in
ret
cld
lds
adc
xor
insb
jae
sub
je
out
pop
inc
mov
ds
and
cmp
les
jbe
call
aam
out
ret
xchg
dec
push
mov
lret
cwtl
loopne
loope
xor
nop
dec
aad
mov
cmp
push
add
dec
mov
cli
and
jl
add
push
arpl
jbe
das
jb
mov
mov
mov
jle
sub
jbe
cs
cmpsb
insb
in
je
in
xlat
incb
dec
mov
aas
fisubrl
dec
out
mov
aam
jnp
in
fs
fdivp
pop
out
adc
push
dec
mov
mov
addr16
add
xlat
mov
iret
lcall
shlb
jmp
daa
pop
adcl
dec
sbb
mov
dec
test
mov
ljmp
sbb
pushl
pop
imul
shrl
rcrl
ret
stos
aam
lods
insb
lds
xchg
sub
and
xchg
arpl
cmp
inc
movsl
push
fwait
das
push
cltd
icebp
cmp
push
in
repnz
adc
jbe
push
pop
rol
cmpsb
shlb
xor
cmp
loopne
and
nop
add
popa
lahf
cli
pop
out
xlat
iret
sbb
aam
mov
adc
stos
or
xor
mov
test
ret
pop
ss
xor
pop
lcall
pop
adc
add
aam
fdivl
or
pop
stc
int3
dec
or
movsl
testl
aad
cmp
xchg
jnp
push
mov
mov
push
mov
orl
aam
mov
rorb
popf
aam
mov
aas
cmp
push
icebp
loopne
xor
pop
sbb
pop
cmpsl
bound
jbe
xchg
ret
mov
sbb
push
push
mov
dec
mov
push
mov
xor
sbb
rorl
mov
and
test
loope
rcll
pop
push
pop
sbb
xchg
mov
or
mov
insb
stc
xchg
pop
xor
and
call
dec
xchg
call
cmp
ror
inc
pop
xchg
push
mov
dec
cltd
lahf
inc
cs
xor
sub
xor
inc
mov
ss
cmp
leave
inc
nop
enter
mov
mov
lods
cmp
jbe
pop
sbbl
mov
pop
das
lds
mov
test
mov
xlat
movsl
aaa
and
fs
insb
movsb
mov
insb
lods
scas
mov
pop
or
insb
scas
jo
nop
dec
mov
mov
mov
mov
jbe
or
test
insb
lcall
insb
bound
dec
dec
add
mov
push
or
imul
aaa
inc
xor
loop
inc
lods
arpl
mov
testl
jbe
mov
jbe
mov
jns
mov
push
sarl
call
push
in
xlat
xor
jmp
in
into
inc
or
add
in
or
daa
into
mov
adcl
jbe
mov
insb
jecxz
movsb
xor
mov
xchg
and
sbb
push
and
enter
mov
jecxz
movsb
mov
mov
insb
stos
test
inc
shrl
insb
jmp
pop
mov
xchg
cmp
jns
inc
inc
or
int3
push
sti
insb
pop
mov
and
jno
and
sub
mov
lods
mov
inc
aaa
push
gs
movb
mov
lret
jbe
popf
or
push
fldt
and
jbe
cmpsb
jmp
insb
jno
fwait
cmc
aam
mov
dec
pop
xchg
mov
insl
mov
jecxz
push
aas
repnz
out
adc
adc
mov
push
push
push
in
cli
push
hlt
insb
xor
xor
jne
sti
mov
cs
mov
inc
jo
aam
lret
sbb
es
pop
test
xor
jnp
repnz
popa
aam
ret
cmp
popf
cmp
inc
outsl
xor
in
orb
cmp
inc
adc
fs
xchg
mov
cmpsl
fadd
movsb
mov
cmp
jne
fcmovb
test
notb
mov
and
xchg
test
adc
and
xor
jp
insb
movsb
inc
jb
lret
mov
out
imul
aas
cwtl
push
jo
push
sbb
xor
iret
packsswb
jl
fld
xor
inc
adc
shll
int
cmpsl
mov
insb
lahf
imul
ds
rcr
xor
jb
test
ds
andl
inc
pop
inc
mov
inc
mov
sub
in
in
xor
sbb
mov
cwtl
dec
mov
jge
je
xor
ret
jbe
insb
and
dec
fisttpl
dec
inc
cmpsb
xchg
stos
jbe
dec
dec
movsb
xor
add
inc
mov
imul
pop
pop
mov
cld
lcall
dec
insb
into
ljmp
push
cmp
jne
mov
sahf
xchg
fwait
sarb
mov
in
jne
pop
adc
dec
mov
loope
adc
scas
pop
rcll
aam
ret
or
jb
lods
addl
mov
jg
lds
adc
pop
sbb
outsb
xorl
adc
testb
in
xchg
outsb
psubq
in
jg
sub
pop
cwtl
xchg
stc
mov
mov
insb
pop
ja
cmp
imul
dec
outsb
mov
inc
out
cmp
aam
mov
cli
xchg
push
andb
rol
jns
inc
cmpsb
jns
sub
pop
std
cmpsb
mov
out
jmp
bound
dec
call
data16
shrb
push
xlat
jbe
pusha
insb
sbb
aam
cld
insb
sub
cltd
jbe
xchg
loope
sbb
jns
jno
sbb
push
loope
lods
inc
fistl
lcall
daa
insb
sub
pop
mov
in
cltd
adc
insb
or
aam
stos
cli
cmpsb
sbb
xchg
or
scas
ss
arpl
into
mov
enter
sahf
sbb
dec
mov
pop
aam
ret
fldt
mov
mov
rorb
out
push
mov
icebp
xchg
push
popf
inc
sub
insl
frstor
pop
xchg
das
sub
test
xchg
sti
cmp
and
jp
sbb
scas
in
mov
leave
ret
jnp
aam
mov
push
loope
add
dec
cwtl
add
int
fists
jae
hlt
ret
xor
rolb
ljmp
arpl
jbe
ljmp
call
sbb
fbstp
sahf
pop
sti
sbb
mov
xchg
aam
hlt
cwtl
mov
or
test
pop
sbb
dec
add
ds
popa
sbb
dec
pop
insb
ss
dec
cmp
mov
sbb
jbe
or
cmc
or
push
pushf
jp
aam
inc
psrld
lret
xchg
stc
or
jge
aaa
jnp
mov
mov
push
stc
pop
lods
lret
or
daa
xor
jge
jmp
mov
ss
pcmpeqd
cmpsl
xchg
dec
mov
sub
mov
test
mov
insb
mov
push
lods
or
int3
xchg
mov
jmp
adc
int3
test
outsb
cltd
gs
in
or
call
lahf
sbb
inc
xor
and
jbe
insb
jo
ret
cmp
hlt
mov
push
sbb
lret
dec
push
sahf
push
in
dec
sub
ja
cmp
test
mov
xor
and
addr16
lds
outsb
cld
pop
orl
jbe
push
and
jbe
addr16
test
mov
add
xchg
pushf
sub
push
cmp
pop
aam
add
pusha
test
xchg
ds
inc
sub
in
gs
out
mov
subps
aam
leave
and
fmul
mov
rolb
and
lret
lcall
dec
and
inc
mov
aam
mov
add
test
and
arpl
jbe
mov
jno
aam
icebp
push
push
clc
out
and
dec
repnz
lock
imul
jbe
pop
sbb
movsl
popf
clc
lcall
sub
cli
gs
jne
dec
inc
or
js
jmp
pop
mov
adc
pusha
mov
xchg
pushf
or
sbb
ror
in
scas
aam
xchg
mov
inc
xor
jnp
xorl
pusha
push
jbe
andl
pop
in
clc
es
or
loop
stos
rorl
dec
mov
fs
lret
int
imul
aam
lods
dec
lock
test
nop
sti
mov
sahf
inc
iret
out
incb
dec
inc
je
pop
xor
xchg
movsl
jbe
push
outsb
cwtl
xor
lcall
daa
aam
and
xor
dec
popl
inc
pop
int
rolb
call
js
or
lock
sub
cmpsb
mov
mulb
loopne
aad
xor
xchg
mov
loope
in
mov
jecxz
push
mov
inc
repnz
dec
clc
push
push
arpl
insb
hlt
and
mov
sbb
stos
repz
inc
or
subl
xchg
call
bound
repnz
in
mov
jmp
and
jbe
xchg
lock
mov
jno
outsb
xchg
mov
nop
mov
lods
addb
in
clc
inc
repz
jae
xor
pushf
je
inc
dec
enter
jp
pop
adc
pop
sbb
xor
fidivl
out
adc
or
insb
outsl
mull
insb
stos
push
daa
or
int
push
movb
xchg
cmc
xor
push
dec
out
xor
inc
lods
movsl
mov
mov
mov
push
sbb
insb
fistpl
ljmp
jae
aad
insb
test
aam
mov
and
jbe
insb
xchg
fimuls
adcl
movsb
data16
jmp
mov
inc
pop
int
mov
cmp
aam
out
inc
negl
jae
cmc
or
jle
sbb
int3
jp
adc
add
push
sbb
pop
jbe
dec
mov
scas
cli
cwtl
jmp
loope
setbe
adc
pop
icebp
aas
and
movl
or
insb
mov
pushl
shrl
cmp
push
aam
ficompl
sub
loope
inc
pop
outsb
jecxz
cmp
and
cmp
aam
xchg
dec
fs
es
inc
jbe
pushf
ljmp
mov
jmp
mov
sti
andl
jbe
xor
inc
in
jmp
popa
mov
cs
ljmp
popf
add
int3
aam
ret
aam
xor
icebp
in
je
pop
idivl
mov
push
cmp
lcall
lgs
xor
push
push
lahf
divb
inc
jnp
pop
iret
in
cltd
ret
add
jbe
xor
sub
insb
icebp
hlt
testl
mov
push
sub
in
out
mov
jmp
xor
loope
enter
sahf
dec
or
xchg
push
repnz
loop
lds
aad
sbb
dec
andl
mov
arpl
lcall
ljmp
cmc
test
shrl
int
fists
test
sbb
mov
imul
adc
add
gs
mov
pop
push
and
dec
adc
in
mov
mov
pop
into
ja
push
cmp
adc
mov
push
les
jae
lret
jnp
loopne
or
xchg
pop
mov
cltd
pop
xchg
jbe
mov
jle
xchg
cmp
cmp
clc
pop
mov
test
inc
js
inc
movsb
insb
dec
dec
push
rcl
lret
fs
adc
leave
mov
cbtw
out
mov
pop
cltd
dec
lds
and
popa
or
je
push
fmull
repz
or
xchg
cmpsl
xchg
popf
or
rol
in
inc
lret
sbb
add
push
loopne
push
push
rolb
cmp
sbb
aam
aam
mov
in
and
mov
test
inc
cs
pop
mov
push
xlat
or
xor
rol
js
fidivrs
arpl
jbe
data16
jns
add
lods
loop
jmp
insb
sbb
xchg
and
aas
loopne
clc
jmp
mov
jno
movsb
clc
jns
inc
pop
sbb
mov
jbe
sar
and
enter
enter
repnz
mov
ljmp
stos
pop
mov
loopne
and
arpl
aam
mov
jge
sub
ret
js
push
imul
jbe
loopne
pop
mov
dec
push
xchg
enter
inc
pop
pop
mov
loope
mov
xchg
imul
int3
insb
jmp
push
add
movsb
mov
adc
stos
int
pop
or
or
jo
fs
insb
lea
and
movsl
or
lea
enter
xor
xor
pusha
mov
shll
fadds
js
jo
adc
sahf
dec
or
je
mov
fsubrl
xor
cs
insb
dec
pop
cmp
nop
data16
jg
fbstp
jge
icebp
adc
mov
cmpsl
js
jge
sbb
insb
jnp
dec
pop
mov
cltd
xchg
icebp
ficoml
jns
fimuls
in
xor
add
movl
add
push
jp
cmp
cmp
pop
cld
sahf
fsub
cmp
in
pop
cld
in
mov
ret
js
addr16
cmc
or
jbe
lods
dec
in
ds
test
sbb
dec
mov
in
dec
xlat
sbb
sub
jmp
xor
fs
dec
add
dec
push
mov
cmp
data16
jbe
arpl
jg
aam
fiaddl
dec
pop
jno
lret
mov
daa
mov
insb
mov
cmp
jmp
dec
adc
jbe
pextrw
es
mov
mov
std
and
aam
push
inc
jae
add
enter
push
cmp
mov
inc
xorl
xor
jp
insb
mul
push
hlt
pop
sbb
clc
outsb
test
sbbl
in
lods
sbb
xchg
dec
or
insb
das
and
mov
in
sbb
dec
imul
aam
mov
push
mov
push
jbe
cmc
stc
sbb
mov
dec
cmpsb
dec
int3
in
stos
int3
insb
stos
out
xor
stc
inc
pop
pop
push
dec
and
xchg
push
notl
das
push
adc
insb
mov
lret
rcrb
aam
mov
icebp
jg
and
xchg
push
pop
movsl
gs
mov
aad
mov
ret
or
sbb
cmc
loop
fsubs
mov
lahf
aam
mov
jo
cmpsl
in
xor
sbb
aam
and
pop
nop
xchg
xchg
jbe
jo
fnstcw
lods
xchg
sti
insb
aad
fsubs
xchg
cmpsb
aam
mov
loop
dec
cmp
jbe
adc
mov
pushf
sti
push
outsl
call
or
lret
cmp
pop
mov
jp
clc
and
ret
filds
nop
mov
call
pop
movsb
sbb
adc
movsb
sbb
xchg
dec
in
sbb
iret
loope
mov
mov
jle
push
mov
pop
jae
arpl
out
inc
aam
clc
xor
sub
xor
shrl
aam
movsb
nop
gs
cmp
sub
cmp
add
dec
xchg
pop
cld
push
xor
insb
aas
stos
test
int3
jbe
sarb
mov
loope
inc
jecxz
mov
addr16
inc
in
sarb
in
jg
sbbb
ret
js
fcmovnbe
sbb
add
ljmp
jle
aam
popf
and
jae
mov
add
mov
outsl
mov
mov
jp
test
inc
push
mov
aas
jmp
xor
and
stc
clc
and
and
jbe
loopne
seto
aam
ss
xchg
mov
jbe
pushf
push
adc
xchg
sub
pop
cmp
in
push
adc
xchg
mov
fs
shll
icebp
and
testb
insb
mov
test
aam
hlt
insb
sub
outsl
std
aam
mov
sbb
and
mov
mov
xlat
jge
sbb
pop
icebp
sahf
in
add
dec
dec
mov
sti
popf
lret
stos
add
stos
adc
jbe
insb
cld
mov
lods
xchg
pop
in
mov
mov
insl
mov
adc
jl
jbe
xchg
mov
xlat
rcrl
imul
lods
bound
movsb
jo
push
repnz
mov
add
rclb
daa
fcmove
lret
fdivl
sub
test
aas
lock
scas
xchg
test
push
lods
bound
jbe
push
xchg
or
pop
push
ret
dec
loope
jecxz
mov
mov
mov
int
movsb
jp
int3
pop
jns
sub
xchg
ret
push
mov
mov
hlt
pop
ret
push
pop
clc
insb
and
scas
in
in
push
sbb
adc
mov
fidivl
repz
or
lret
push
stos
inc
je
stos
or
add
into
mov
add
pop
mov
fsubs
orl
or
js
add
icebp
mov
pop
in
mov
inc
scas
adc
imul
insb
and
outsl
mov
sub
pop
pop
mov
mov
clc
mov
and
jbe
sub
pushf
push
fwait
mov
icebp
xchg
je
fisttpl
dec
xor
lods
mov
xchg
adc
and
xor
cltd
hlt
and
outsl
mov
je
mov
and
jnp
xchg
xchg
cmc
in
dec
mov
into
pop
jno
lods
outsb
mov
ret
jbe
xchg
jecxz
iret
xchg
inc
hlt
inc
inc
lcall
sbb
rcr
cltd
mov
cmp
jns
cmp
inc
btc
cmp
in
add
xchg
sub
xchg
out
jp
mov
mov
mov
stos
sti
in
lds
out
mov
stc
sbb
and
sub
pushf
xchg
jmp
insb
es
inc
aam
mov
and
loope
cmp
sub
jle
jbe
mov
pop
push
rcl
cli
pop
pop
push
add
idivl
push
movsl
gs
aam
loope
fldl
mov
es
int
jbe
sbb
mov
fidivrs
insb
mov
mov
addr16
gs
xor
add
xorl
aas
loopw
push
xor
push
icebp
cli
ds
cmp
jle
dec
out
and
rcrl
stos
add
jle
popf
ss
leave
mov
pop
xor
pop
inc
add
mov
aaa
std
push
push
sbbl
sbb
stos
ljmp
std
lds
lahf
ljmp
insb
dec
test
fwait
insb
mov
stos
js
push
sub
cld
adc
adc
mov
adc
scas
loop
dec
testb
mov
inc
dec
add
jbe
fnstsw
xchg
jmp
mov
dec
push
cmpsb
push
add
inc
adc
add
xchg
test
aam
mov
into
fildl
insb
gs
js
push
mov
dec
dec
inc
test
aam
loopne
inc
xchg
dec
scas
aam
xchg
lock
icebp
mov
js
inc
out
mov
jb
insb
repnz
xchg
aam
pop
inc
adc
and
dec
mov
mov
jg
leave
dec
repz
icebp
add
imul
aam
lock
int3
xchg
xchg
jbe
push
mov
and
stc
dec
mov
jmp
imul
push
out
cmp
not
je
repz
pop
iret
cmp
popa
mov
lret
xlat
dec
call
xlat
in
jns
stos
in
dec
cmp
cmp
push
mov
shld
xchg
mov
pop
insb
xchg
int3
lds
aam
dec
adc
mov
mov
andl
popf
insb
and
lock
pop
loope
xchg
mov
sub
movsl
mov
dec
scas
ss
clc
adc
cltd
mov
jbe
jns
fwait
test
test
push
adc
rcl
xchg
cmp
in
mov
sahf
cmpsl
divb
xchg
mov
stos
dec
xchg
push
cltd
lcall
sbb
sub
std
ljmp
mov
outsl
loop
sub
ficompl
dec
nop
cld
insb
adc
push
xor
mov
popa
jbe
jg
shlb
pop
mov
mov
test
fadds
outsl
sbb
loop
xor
push
jmp
scas
xor
lock
addr16
or
or
lock
xchg
lods
ss
mov
inc
out
mov
loope
aam
inc
jge
pop
mov
enter
xor
sbb
imul
mov
cmpsl
cmp
iret
repz
push
addl
adc
mov
xchg
mov
cld
test
mov
and
insl
jge
subl
adc
jbe
xchg
inc
bound
jge
in
cmc
xchg
and
add
pop
push
mov
in
inc
fcom
add
cltd
sbb
mov
out
lahf
divl
ljmp
call
lock
mov
push
icebp
mov
push
aam
mov
sub
sbb
push
cld
shll
test
xor
in
stos
scas
mov
sahf
xlat
xor
jmp
xor
fisubrl
lret
push
jle
ficoml
out
jns
movsb
out
scas
jae
dec
imull
inc
insb
pop
jmp
pop
dec
and
mov
jno
pop
daa
mov
aam
push
test
pop
dec
pop
inc
sub
jmp
inc
aam
pushf
dec
imul
xor
std
dec
cmp
insb
in
fldenv
xor
fcomi
lcall
jmp
lahf
aaa
cltd
dec
aam
lods
pop
lds
jbe
or
xor
jmp
out
out
xlat
aam
xor
xor
dec
addb
popa
in
cmp
jge
jbe
push
scas
sahf
icebp
clc
test
sub
jbe
cmp
mulb
push
jbe
jae
das
or
jbe
insb
jge
incb
mov
lds
jb
add
pop
pop
dec
fwait
adc
iret
clc
mov
sbb
cmp
push
ss
fisubl
mov
movsb
add
rclb
std
jno
jl
jnp
pusha
mov
xorb
jp
push
out
in
aam
ret
sbb
aam
or
and
std
push
xchg
es
jbe
stc
dec
scas
xor
test
adc
or
xor
sarb
test
in
pop
cmpsb
mov
insb
test
jbe
jo
addr16
int
test
fildll
inc
fistl
int
rol
cmp
jg
hlt
loope
jo
jbe
sub
adc
sub
xor
out
repnz
repz
jns
mov
mov
and
lret
or
imul
loope
cmp
js
daa
jge
dec
lock
jno
clc
xchg
dec
notl
jl
popf
scas
fisttpll
scas
mov
gs
sbb
jle
jns
push
xor
shll
gs
jbe
insb
sub
sti
pop
cltd
sub
ret
mov
data16
lahf
xlat
push
push
and
das
and
cmp
clc
lret
imul
mov
push
jge
sbb
jbe
insb
mov
loope
icebp
fmull
lret
inc
add
dec
mov
arpl
pop
cwtl
in
pop
xor
arpl
les
mov
jbe
out
jl
mov
sub
and
add
push
mov
rcl
das
mov
cmpsl
loop
ds
repz
aam
in
jmp
subb
imul
mov
repnz
ds
shll
sub
or
sub
mov
push
cwtl
cmpsl
push
pop
mov
or
adc
push
test
jl
sbb
pop
test
les
popf
mov
mov
scas
push
inc
imul
inc
es
cld
jae
fistps
outsl
jg
out
fnstenv
aam
js
test
pop
rorb
xor
jl
popa
xor
es
xchg
insl
jmp
jbe
insb
clc
or
movsl
sub
dec
insb
int
dec
stos
aam
mov
popf
pop
jbe
insb
sbb
mov
push
inc
push
rcll
xchg
inc
dec
dec
xchg
pop
les
and
in
into
xor
int
shrb
mov
mov
ljmp
cmpsl
aam
fs
sub
cmp
sub
adc
fmull
pop
cld
jns
pop
into
sar
jbe
pop
mov
mov
adc
jbe
aam
cmc
arpl
mov
mov
mov
cmp
mov
shrb
xor
js
push
xor
icebp
sbb
push
jb
sahf
dec
jo
inc
add
jo
dec
pushf
or
in
mov
jp
clc
inc
iret
jne
pop
inc
lahf
or
fistpll
loope
ja
cmp
adc
adc
inc
mov
and
cmp
cmpsl
jbe
mov
push
xchg
push
xchg
cltd
cmpsl
pop
fistpl
jge
inc
sti
ds
mov
adc
stos
mov
cmp
mov
sti
clc
mov
pop
jbe
inc
and
fnstcw
cltd
push
xor
enter
add
lock
pop
mov
fs
mov
aam
push
rcrl
and
jbe
dec
push
mov
in
xchg
mov
mov
pop
cltd
fiadds
pop
dec
xchg
lcall
add
loopne
ljmp
stos
jecxz
inc
leave
xor
cmc
pop
push
push
adc
sahf
mov
xchg
and
sbb
popl
incl
cmpsb
jbe
je
push
ds
inc
dec
mov
or
lcall
stc
aam
les
lea
push
inc
mov
insl
xlat
jbe
stos
mov
mov
test
repz
aam
hlt
movsl
leave
data16
insb
jg
cmpsl
daa
test
clc
add
mov
mov
xchg
mov
sub
adc
inc
and
inc
jbe
pop
ljmp
ficomps
scas
in
pop
mov
sbb
int
scas
pop
mov
pusha
cld
adc
mov
loope
scas
push
hlt
repnz
adc
outsb
push
dec
mov
fisttps
pushf
loop
inc
mov
push
lret
pushf
cmpsl
aam
insb
imul
loop
ss
fists
mov
lock
aam
mov
popf
or
mov
dec
jb
cmp
jmp
or
fs
mov
dec
jns
inc
xor
inc
push
repnz
inc
xchg
jne
icebp
and
sti
cmp
and
mov
imul
push
cli
jge
in
mov
mov
movsb
insb
cmp
push
mov
mov
xor
insb
faddl
rcr
inc
fwait
insb
jl
inc
xor
jbe
insb
pusha
xor
push
inc
lock
insb
sbb
out
xchg
pop
mov
cmp
and
cmp
lds
lcall
xchg
fstpl
into
dec
lcall
mov
sarl
dec
mov
mov
test
inc
out
xor
push
repz
cmc
jp
cmpsb
mov
cli
jecxz
cli
dec
ds
scas
fwait
jp
jge
pop
dec
add
jp
xchg
push
dec
mov
push
aas
icebp
push
cmpsl
jbe
in
sbb
je
xor
jne
andl
xor
mov
jge
jbe
pop
jge
lods
arpl
mov
enter
notb
push
hlt
or
dec
sub
inc
ljmp
dec
popa
popl
pop
leave
test
jbe
insb
ds
mov
ja
pop
jne
mov
mov
dec
inc
pushl
pushf
xor
pushf
inc
std
divb
call
mov
lret
mov
or
push
mov
stos
aaa
inc
jecxz
jne
insb
in
adc
jb
imul
sub
dec
fcompl
das
das
inc
jp
jbe
push
ja
cmpsb
aad
lea
aam
mov
icebp
loope
vmovaps
insb
ss
lret
rcrl
mov
rcll
popa
xlat
dec
xor
jmp
iret
insb
aas
jge
ss
mov
pop
lock
jno
add
cmp
int
push
and
fcmovnbe
sbb
and
shlb
popf
mov
and
add
push
mov
mov
ljmp
loope
leave
adc
out
xchg
aam
jecxz
mov
xchg
iret
aam
icebp
adc
in
xchg
jbe
insb
or
and
push
insb
lret
sub
fs
inc
xor
insb
pop
mov
aam
mov
pushf
or
pop
iret
ret
mov
add
dec
aas
xor
in
testb
pop
jl
push
xor
mov
call
cmp
cmp
sahf
arpl
insb
dec
dec
popf
fdivs
pop
push
mov
mov
sub
add
jbe
pop
outsl
mov
mov
cmp
cmc
repz
mov
or
cmp
mov
aas
jbe,pn
inc
mov
pop
sub
dec
lds
fstpt
data16
pop
pop
pop
xchg
cltd
add
aam
dec
pop
mov
mov
insb
imul
je
jbe
cmp
out
xchg
pop
push
mov
adc
pop
movsb
or
mov
pop
scas
cmp
xchg
icebp
pop
lret
mov
lea
aam
dec
insb
xor
aas
jno
inc
roll
mov
push
inc
add
xchg
iret
jbe
popa
mov
loopne
lods
mov
test
fstl
sbb
ss
and
idivl
add
aam
and
mov
in
pop
imul
cmp
push
push
add
popa
mov
jbe
insb
inc
adc
jbe
dec
jmp
jg
test
push
cmp
je
add
mov
pop
mov
ret
push
ret
adc
ret
in
insb
xchg
std
sbb
jbe
imul
aas
call
out
inc
ja
sti
pop
mov
mov
inc
mov
imul
jbe
xor
enter
test
add
and
nop
lea
testb
fstpt
shrb
mov
mov
xchg
insb
adc
in
repz
adc
adc
sbb
push
and
outsl
jbe
push
aas
fisubl
popf
arpl
cmp
jbe
adc
dec
mov
pop
xchg
hlt
shrl
mov
adc
inc
cmpsl
das
inc
insb
fimuls
mov
pop
arpl
push
inc
jbe
insb
aad
ljmp
dec
data16
jbe
push
xor
jbe
and
aam
call
mov
adc
insb
mov
jbe
gs
outsl
mov
jno
sub
iret
outsl
and
pop
loopne
mov
negl
sahf
sbb
popf
aam
xchg
inc
push
cmpsb
popf
aam
xchg
and
xchg
std
mov
insb
cmp
jbe
hlt
xor
pop
pushf
insb
pop
or
jecxz
sub
inc
aam
and
sub
mov
iret
loope
jno
pushf
pop
sbb
mov
and
jp
psubd
aam
stos
push
outsb
dec
in
mov
pop
repz
xor
data16
mov
jbe
add
pop
lods
or
lds
test
jbe
add
dec
mov
adc
icebp
adc
jecxz
mov
lret
adc
pushf
ret
sub
inc
mov
dec
popf
jmp
mov
pushf
lods
mov
xlat
sbb
fs
iret
or
adc
xor
lods
pop
pop
sub
mov
lea
aam
orl
dec
mov
addr16
loopne
fistpll
mov
push
add
andl
lods
fdivrl
ds
jbe
jle
lcall
sbb
dec
vsqrtss
outsl
ficoml
pop
push
inc
adc
insb
test
nop
out
imul
roll
adcl
insb
xchg
jg
leave
cmp
fisubs
mov
mov
xchg
mov
mov
mov
pushf
push
aam
dec
insb
lock
xlat
jbe
in
popf
negb
sbb
insb
pop
aam
cltd
insb
xor
jbe
addr16
dec
mov
xor
push
test
push
cmovae
jbe
sbb
popa
adc
add
mov
js
lret
xchg
add
shll
mov
add
push
gs
jecxz
subb
inc
jnp
add
jecxz
lds
add
mov
lods
jl
jmp
fldt
xor
mov
lods
mov
sbb
dec
cmp
and
cld
loopne
inc
mov
aam
insl
jnp
test
xor
outsb
jecxz
mov
xchg
mov
jb
data16
add
lcall
dec
sub
dec
sub
loope
mov
cmpsb
shlb
aam
decl
adc
bound
hlt
mov
dec
std
mov
insb
jae
arpl
pop
adcb
std
jno
or
cli
rcrb
jbe
sub
outsb
loop
mov
pop
fs
sub
ljmp
addr16
jp
jge
addb
cmpsl
es
push
insb
cld
jmp
mov
test
shrl
xchg
repz
push
fwait
pop
pop
shll
ficompl
mov
roll
mov
fstp
lds
jl
insb
push
lock
stc
call
sub
stos
mov
cmpsl
js
xor
inc
aam
in
push
insl
xchg
popa
icebp
cltd
insl
std
popa
addr16
add
sub
insb
pushf
push
jge
adcl
jo
jns
arpl
mov
lret
arpl
dec
mov
push
jae
ret
std
sub
nop
xchg
jmp
insb
push
mov
push
dec
inc
jmp
paddq
xchg
mov
pushf
gs
fucomi
push
push
insb
inc
fistps
addr16
lods
adc
lods
in
aad
arpl
push
jg
pop
nop
aam
mov
inc
daa
xlat
into
sbbl
push
pop
jecxz
pop
mov
pop
lea
and
xor
in
popa
or
lret
pop
insb
cmovp
insb
hlt
inc
in
lods
jge
adc
aam
lock
or
rcr
cmc
fdivrp
mov
leave
adc
inc
jmp
hlt
test
push
incb
insb
js
test
inc
mov
repnz
pop
sahf
and
push
inc
jbe
pop
and
bound
es
xchg
sub
mov
out
add
insb
outsb
push
and
insb
movsl
mov
sub
mov
jbe
insb
mov
int3
or
out
div
divl
xor
icebp
add
cmc
xchg
mov
fsubrp
inc
test
cld
test
std
sahf
cs
loopne
lds
mov
pop
jnp
cmp
inc
xor
and
mov
scas
lcall
sbb
push
out
pop
loope
xor
loope
in
das
and
mov
pop
rol
adc
insl
aas
push
scas
inc
sub
icebp
jnp
lods
mov
mov
cs
lahf
jbe
adc
rorb
mov
sbb
aam
in
test
push
cmpsb
adc
push
push
dec
daa
jns
pop
sub
imul
and
push
gs
add
push
repz
cmpsl
rcr
mov
cmp
icebp
jp
push
insb
add
in
mov
xchg
ss
dec
jmp
roll
and
test
movsl
pop
dec
ja
insb
inc
add
loope
loop
insb
cmpsb
pop
adc
aam
int3
sub
mov
pushf
xchg
dec
push
rcr
dec
cmc
jbe
pop
and
sbbb
stos
ret
in
pop
add
push
dec
inc
jmp
mov
mull
dec
jbe
inc
jmp
jg
dec
loope
mov
insb
jmp
in
out
andl
imulb
and
ficomps
xchg
mov
push
pop
in
push
testl
xor
insb
add
test
add
jle
addr16
imul
addb
sub
in
mov
mov
push
mov
pop
jb
repnz
cmp
ds
sub
test
sub
mov
orb
dec
push
daa
jbe
jge
in
jae
mov
and
aad
sar
pop
ffree
scas
arpl
xchg
pusha
sub
aam
dec
xchg
fisubrs
mov
lock
cmp
lock
or
mov
mov
xchg
scas
cmp
pop
pop
lret
aam
sbb
inc
movsl
mov
ljmp
mov
stos
and
inc
dec
mov
sti
insb
cmpb
cmp
jnp
test
or
xchg
in
push
stos
mov
mov
pop
daa
aam
xlat
push
add
add
popa
ss
add
mov
or
int
cmp
es
adc
cwtl
lods
nop
popf
call
jg
pop
mov
popa
mov
in
popf
not
inc
pop
cs
aam
stos
inc
adc
mov
mov
mov
pop
lahf
out
push
inc
hlt
push
cld
iret
jnp
mov
subb
push
flds
mov
out
call
and
aam
mov
push
subl
int
aad
js
push
dec
add
addb
gs
lahf
out
jmp
xchg
insb
das
cwtl
sti
and
ficompl
dec
insb
lcall
insb
jb
aas
push
aam
mov
jmp
movsb
pop
repz
test
clc
insb
mov
mov
push
xor
rcrl
mov
popa
mov
pop
int
mov
push
mov
mov
out
mov
mov
jbe
sub
jbe
cmc
adc
push
aam
mov
push
dec
xorl
lods
ja
jg
push
xchg
mov
mov
jbe
test
lods
dec
in
jbe
pop
mov
or
pop
sub
adc
jg
xor
sbb
xor
xchg
ret
scas
aam
sbb
adc
sar
cmpsb
pop
mov
mov
add
cmp
cmpsb
pop
push
push
insl
enter
push
push
aas
mov
jbe
out
es
in
mov
std
mov
cmc
push
pop
enter
add
push
and
fildll
mov
rcl
dec
gs
mov
pandn
inc
sbb
insb
shll
inc
in
inc
push
cmp
out
fwait
fwait
aam
cmp
cmp
push
mov
jmp
std
bound
test
out
or
ret
mov
aam
jbe
adc
sbb
ja
xor
insl
mov
imul
and
push
mov
or
sbb
pop
pop
cmp
sbb
icebp
push
call
jbe
loopne
lahf
jno
aam
ss
jecxz
and
int3
xlat
push
rcll
inc
sbb
sbb
arpl
ljmp
inc
aam
lods
pop
in
xor
aam
mov
cmp
dec
lods
jle
or
out
aam
mov
xor
xchg
or
enter
sub
cmp
les
repnz
jae
loope
into
mov
and
aam
xor
pop
js
xchg
jbe
imul
movl
mov
sub
fistps
fadds
rcll
mov
pop
inc
jle
repz
push
andb
xor
in
jge
xor
outsb
jmp
sub
mov
push
mov
adc
incb
sub
outsb
mov
rclb
aas
shlb
enter
cmp
fdivs
sbb
insb
fdivl
sub
aam
mov
clc
stos
mov
sub
movb
cmpsb
jb
dec
popf
lret
jle
mov
testb
xor
jbe
insb
pop
es
cmc
mov
out
push
mov
xchg
inc
repnz
or
mov
dec
mov
and
das
aam
mov
cmp
popf
addl
test
fs
dec
cmpsb
jbe
cmpsb
movsl
mov
sbb
and
sbb
add
sahf
lds
std
insl
jae
push
adc
pushf
cmc
push
aad
push
insb
dec
shrl
inc
pop
jns
rorl
insb
adc
mov
insb
js
cld
pcmpeqd
add
xchg
out
outsb
lret
insb
popf
lds
aam
pop
sti
clc
mov
gs
bound
addr16
mov
ss
pop
fisubl
out
icebp
loop
loop
mov
aaa
push
mov
dec
test
mov
cmpb
insb
insb
mov
rcl
ret
or
div
aam
in
negl
dec
mov
mov
imulb
insb
mov
jge
cmp
jmp
lds
ljmp
fnstenv
and
aam
loop
mov
pop
mov
jmp
fisubl
jno
push
out
sbb
ds
andb
push
cmp
xchg
hlt
dec
adc
aas
inc
cmp
bound
add
jbe
insb
scas
or
mov
loopne
dec
pop
cld
jae
cmp
xorl
adc
dec
jmp
push
mov
inc
je
imul
add
loope
aam
sar
sahf
jmp
sub
mov
sub
divb
lfs
push
dec
stc
lret
cmp
cwtl
mov
sub
xchg
inc
and
adc
pop
lock
inc
loopne
dec
ret
in
jbe
dec
push
adc
ss
mov
cmp
enter
push
adcb
xchg
clc
or
es
mov
popf
jae
mov
xchg
add
cmpsl
cmp
or
cmp
cmpsl
aam
test
lret
and
leave
pop
call
ds
rorl
and
mov
jmp
sbbl
fdivrs
mov
loope
mov
in
adc
pushf
mov
adc
add
aas
stc
xchg
pop
or
xor
mov
cltd
icebp
cmp
cli
insl
sbb
push
fisttps
out
out
xchg
xor
jbe
mov
in
xchg
dec
add
sar
aam
sub
out
dec
jmp
insl
inc
jbe,pn
ret
btc
jbe
add
xor
push
inc
pop
fcoml
jmp
jle
cmp
ficoml
mov
or
cmp
in
inc
push
lahf
push
stos
and
mov
js
mov
sub
pop
jno
and
arpl
push
stos
xchg
enter
mov
mov
test
jbe
imul
daa
repz
xchg
xchg
pusha
mov
sbb
std
adc
mov
adc
sub
lods
cwtl
mov
and
test
cmp
repnz
and
gs
ret
test
push
aas
sub
pop
ja
mov
test
adc
pop
pop
repnz
pop
dec
jg
push
insb
or
addps
in
sub
xor
orb
ficoml
mov
mov
cmp
sbb
and
aam
lods
orb
repnz
pusha
mov
pushf
insb
outsb
xchg
in
pop
xor
and
aam
mov
and
jbe
add
aam
loopne
push
mov
jne
divl
xor
or
lcall
mov
lret
aas
pop
cld
inc
cli
cmpb
push
icebp
stos
cmp
jbe
jp
or
jno
seta
out
mov
push
add
outsb
aam
mov
imull
xchg
xchg
or
cs
and
adc
add
dec
mov
sub
pop
jae
lea
jno
outsl
adc
xchg
mov
mov
dec
dec
mov
xchg
lds
mov
sti
xorb
mov
mov
push
imul
test
sbb
xlat
gs
lds
aam
pushf
les
cmp
loopne
jo
mov
cmp
jo
stc
sbb
dec
pop
pop
push
cmpsl
xor
rep
mov
lret
nop
xchg
lods
jno
outsl
aas
shrl
jbe
or
jg
insb
aaa
pop
roll
sti
or
loop
stos
dec
pop
pop
dec
mov
stc
xorb
repz
scas
push
pop
mov
mov
dec
loop
test
int
adc
fidivl
dec
in
loop
jmp
add
arpl
push
inc
dec
add
inc
aam
or
add
imul
popf
pop
aad
out
xchg
sarl
in
fwait
icebp
jno
mov
je
insb
adc
call
in
add
cld
lock
ds
jg
cmp
shl
lods
aam
pushf
jbe
sbb
sub
adc
scas
daa
das
outsl
jecxz
inc
mov
mov
sbb
sbb
js
sub
mov
js
shlb
fwait
xor
sbb
aam
pushf
clc
fwait
andb
jbe
pop
outsb
or
sub
jbe
add
stos
jbe
insb
lret
ss
mov
pop
and
fnstenv
bound
mov
pushf
adc
xor
mov
jecxz
add
xor
pop
xchg
push
ja
inc
mov
mov
xchg
stos
sbb
jbe
dec
mov
jbe
push
sahf
push
cmpsb
jge
cmp
arpl
dec
xor
add
mul
sbb
jecxz
imul
dec
adc
test
jbe
mov
and
xor
out
and
add
fs
pushf
mov
aam
adc
fsub
nop
sbb
adcl
and
ret
sar
fs
cltd
mov
adc
pop
test
xchg
and
stos
cwtl
mov
in
pop
mov
inc
mov
imul
cmpsb
insb
adc
scas
insl
lods
inc
std
aad
mov
je
mov
mov
lcall
cmp
insb
sbb
add
mov
add
addl
jmp
in
cltd
jbe
lahf
jne
inc
push
mov
sub
cwtl
aam
or
mov
ljmp
mov
or
xchg
or
lea
mov
adc
jae
clc
jmp
cltd
mov
xlat
pop
mov
push
jns
sub
mov
or
gs
aam
and
data16
sbb
jbe
pusha
xchg
shll
in
fs
in
dec
adc
roll
aam
ret
frstor
in
mov
cmp
xchg
sbb
jo
mov
mov
xchg
or
scas
cmpsl
inc
mov
aam
cmpsl
leave
in
jmp
lock
sub
dec
mov
aam
mov
cmp
mov
bound
or
arpl
jbe
pop
cmpsl
outsb
pop
xor
jo
cwtl
mov
bound
std
xor
cmc
mov
sub
and
daa
xchg
mov
out
insb
sbb
movsl
test
pop
repnz
imul
jnp
into
mov
insb
iret
insb
mov
and
insb
xchg
cmpb
aam
jmp
push
lds
mul
gs
xchg
dec
iret
daa
lds
xchg
cli
push
xchg
add
xorb
add
and
data16
adc
sti
mov
stos
mov
lfs
je
movb
dec
dec
out
push
and
jp
push
dec
aam
xlat
adc
push
insb
stos
add
push
cmp
mov
lret
xchg
mov
push
dec
mov
push
and
fmull
inc
scas
cltd
into
xlat
aam
pushf
insb
test
push
mov
inc
notb
sub
and
push
loopne
popa
cmp
jo
cwtl
pushf
sub
cwtl
test
push
imul
sub
in
push
aam
dec
bound
mov
out
mov
aas
insb
aad
and
insb
ret
mov
jmp
sbb
adc
fldl
add
jbe
in
mov
std
jge
jl
insb
lret
mov
outsl
es
push
sahf
ret
shlb
aam
dec
insb
cwtl
aam
iret
test
rorl
out
xchg
insb
negb
fs
xor
fwait
sub
add
jne
jecxz
jbe
sub
cwtl
inc
imul
lret
lods
pop
add
dec
cli
xchg
icebp
fidivrs
jbe
inc
stos
mov
mov
push
out
test
jae
jg
lret
and
aam
repz
inc
push
adc
sub
fisttps
in
xchg
std
dec
fbstp
cmp
push
shlb
xchg
add
cmc
mov
sub
loop
rorb
dec
xchg
dec
inc
loopne
sub
insb
inc
pop
xor
into
push
xchg
cld
aam
mov
pop
pop
ss
push
adc
add
xor
aad
shll
jmp
push
and
mov
jbe
inc
jnp
and
addb
inc
or
cmp
lret
adc
cmpsb
aam
adc
pop
push
je
sub
jbe
inc
add
add
fists
push
orb
pop
jecxz
hlt
pop
and
inc
ja
loopne
sub
adc
mov
cmp
ja
push
flds
rcr
jl
jae
jbe
jg
out
insb
aad
mov
push
pop
inc
jb
aam
icebp
inc
fcmovnu
jae
aam
leave
add
adc
clc
xchg
sbb
jo
adc
stos
insb
dec
adc
test
pop
int3
fadd
loop
mov
inc
out
xchg
iret
fmulp
xor
push
aam
orb
or
mov
nop
rcrl
aam
fmull
shll
loope
cli
mov
xchg
pop
mov
gs
sub
sub
jbe
pop
imul
mov
ds
mov
pop
int
xor
test
mov
xor
mov
out
add
shlb
arpl
xchg
jmp
inc
into
popa
insl
mov
enter
aam
sub
cmp
mov
push
adcb
sbb
je
and
loopne
psubsb
rcll
xchg
xchg
xchg
adc
xchg
mov
xchg
xchg
cmc
inc
jb
out
dec
sbb
mov
insb
add
push
aam
data16
aaa
inc
jne
aam
ja
xor
fucom
jecxz
sahf
daa
roll
adc
cmp
fildl
hlt
jbe
push
inc
jmp
pop
insb
repnz
mov
flds
scas
sub
in
push
fdivl
xor
and
fcomps
jg
dec
stc
jno
ljmp
fwait
or
in
adc
imul
sub
or
mov
cmp
fmull
jo
mov
pop
in
cltd
ljmp
cltd
cmp
add
mov
fwait
cmpsl
insb
fadds
inc
insb
cmp
add
jnp
bound
cmp
icebp
cmpsb
sbb
mov
and
sbb
xor
in
inc
push
leave
jbe
pop
iret
mov
cmp
or
cwtl
mov
sbb
push
outsl
dec
test
cwtl
inc
clc
pushf
shlb
pop
jns
push
aam
stc
or
sti
or
add
roll
ss
xor
or
dec
push
jp
sahf
popf
sbb
rcll
jle
xor
jae
jbe
decb
dec
add
repz
les
lock
and
das
in
xchg
sahf
call
js
add
sbbl
xchg
repnz
adc
aam
dec
insb
add
jmp
out
sub
or
mov
mov
lahf
cld
xchg
jmp
mov
insb
or
add
sub
test
cli
test
mov
pop
xor
inc
shll
fsubrs
aaa
mov
jbe
insb
hlt
lds
mov
inc
mov
mov
mov
aam
mov
or
outsl
push
std
jbe
and
jge
mov
cmp
inc
inc
and
dec
idivl
aam
loope
inc
ljmp
les
push
gs
neg
mov
xchg
pop
and
inc
mov
lods
ja
lret
aam
icebp
pop
gs
ja
testb
push
insb
dec
jae
jecxz
lret
sar
xchg
inc
dec
mov
repz
test
add
dec
mov
cmp
fxch
push
cmpsl
cli
gs
inc
pop
fldt
push
mov
or
or
je
in
mov
cltd
mull
insb
jecxz
xchg
ljmp
adc
in
mull
les
in
push
loop
jecxz
loop
test
xorl
int
js
aam
incb
push
mov
fst
pop
mov
mov
dec
adc
in
and
insb
in
pop
aad
jbe
pusha
and
in
or
inc
minps
in
shlb
aam
inc
add
repz
ror
xor
inc
xchg
imul
mov
lret
or
out
mov
jo
xchg
dec
xor
pop
and
sub
lods
test
sbbb
jle
mov
dec
insb
in
push
sbb
push
imulb
xchg
push
jle
fstps
jbe
nop
aam
and
mov
pop
mov
flds
insb
ss
inc
cmp
inc
adc
cltd
cmp
pop
std
lds
dec
loope
cs
sub
lahf
adc
insb
adc
mov
lock
and
xchg
aad
icebp
aam
mov
xor
inc
mov
popf
mov
mov
pop
lea
sarb
jbe
cmp
shlb
popf
fnsave
sub
out
add
repz
jmp
movsl
xchg
popf
lea
call
lods
in
jae
pushf
jg
add
mov
jo
add
xor
js
enter
inc
out
wrmsr
mov
dec
pop
inc
jo
cmp
inc
jbe
push
mov
jbe
cli
xor
and
xchg
inc
pop
rolb
jbe
jns
cmc
int3
fimull
jmp
or
inc
test
push
push
out
dec
mov
jne
or
pop
jno
testb
call
in
dec
dec
insb
pop
test
add
roll
add
jg
cmp
lahf
je
dec
lcall
testb
adc
aam
shrb
pop
xor
ficoms
aam
mov
in
sbb
sahf
mov
leave
insb
icebp
xchg
les
jbe
pop
or
mov
icebp
xchg
shl
sbb
add
and
out
jo
jbe
insb
daa
out
push
aam
fmul
popa
sbb
stc
pop
jbe
add
jno
jbe
inc
ss
push
jmp
leave
sbb
push
aam
mov
lea
aad
xchg
push
leave
add
jbe
pushl
dec
sub
int
pop
in
push
lods
fs
fcmovu
lcall
push
lret
les
inc
and
pop
shl
mov
add
lahf
popf
jbe
insb
add
push
pop
xchg
sbb
lea
xchg
cmp
es
inc
push
push
adc
push
fld
aam
and
jne
leave
dec
repnz
mov
inc
insb
ret
sahf
ja
mov
popa
fs
test
jecxz
add
jbe
nop
mov
pop
mov
sub
ss
aam
push
insb
call
pop
mov
lods
mov
inc
scas
jbe
adc
rorb
xor
mov
jne
xchg
sub
mov
cmp
mov
aam
pop
push
rcll
out
xor
cwtl
jno
add
push
in
aam
pop
insb
jl
jl
aam
mov
cmpsb
std
jbe
je
pop
incb
aam
hlt
insb
inc
fnstenv
add
or
js
sub
mov
lretw
cmp
xor
jbe
push
add
in
iret
and
cs
adc
cltd
xchg
push
jl
pop
cmp
out
mov
clc
xor
xchg
insl
stos
mov
jbe
pushl
jmp
cli
fsub
fmuls
cmp
test
mov
add
icebp
jbe
push
inc
sti
xchg
lds
jbe
push
xlat
and
ljmp
pop
ss
cmp
xchg
cmp
dec
lock
fbstp
pop
mov
cmp
push
adc
repnz
pop
jnp
mov
inc
adc
and
mov
cmp
pop
into
mov
push
jmp
sub
mov
inc
xchg
js
lret
sub
insb
fs
iret
aam
movsb
mov
jmp
notb
aam
dec
xchg
xlat
and
cwtl
xchg
jbe
push
jmp
push
pop
aam
sub
pop
mov
xchg
insb
ss
xchg
fimuls
mov
cmpsb
cmp
jp
inc
mov
jbe
jo
int3
loope
das
mov
cmp
xor
mov
lea
shl
and
fcomip
mov
pop
cmpsl
or
cmp
int3
outsl
stos
icebp
push
ret
test
mov
cmp
cmc
mov
inc
pop
movsl
adc
ljmp
mov
xchg
push
je
daa
aam
push
jbe
sub
loopne
mov
lcall
inc
loop
mov
loopne
por
xorl
xchg
mov
out
pop
jbe
xchg
pusha
mov
fidivs
loope
add
cld
fwait
jbe
adc
xor
aam
loope
pusha
jmp
xor
add
xor
ret
xchg
inc
and
scas
in
loopne
int3
daa
aam
mov
mov
sub
and
icebp
rcll
sbb
xchg
in
xor
cmc
push
cmp
in
lcall
pop
inc
andb
sti
out
xlat
jmp
aas
nop
cwtl
je
sbb
jbe
push
iret
scas
and
sub
insb
sub
sbbb
popf
and
xorl
div
jecxz
aam
bnd
bound
jecxz
mov
fdivrp
xchg
mov
adc
mov
out
pop
arpl
jns
dec
repz
cld
or
insb
xor
mov
pusha
loopne
xor
mov
insb
push
push
test
or
pop
out
jbe
insb
and
cltd
flds
js
fstl
aam
mov
mov
dec
mov
enter
jbe
mov
rcl
pop
mov
inc
and
stos
pop
fldl
sarl
das
jne
jo
xor
xchg
mov
sbb
insb
ret
outsl
addl
popf
insb
aam
or
lea
push
jecxz
xchg
sub
in
mov
out
out
push
adc
pop
inc
gs
add
andl
pushf
mov
ljmp
push
push
inc
gs
push
hlt
ljmp
icebp
sbb
aaa
jge
push
out
dec
rorb
pop
mov
pop
pop
fwait
imul
stos
stc
dec
dec
outsb
xor
cmc
in
insb
popa
dec
aam
ret
enter
or
mov
ljmp
mov
push
dec
adc
into
stos
subl
and
xchg
adc
jbe
adc
adc
insb
mov
push
inc
xorb
out
fidivs
push
inc
in
pop
insb
popa
cmp
jae
mov
mov
ss
fisubs
mov
sub
sub
mov
out
dec
and
aam
orl
int3
jbe
insb
mov
in
or
push
jl
fstpl
sub
and
mov
cmc
mov
arpl
inc
loopne
stc
fldl
xchg
ds
and
dec
call
mov
and
and
call
jle
mov
js
or
and
lahf
add
adc
xchg
aam
shrb
movsb
cli
cld
push
xor
ret
pop
jg
push
insb
add
sbb
loopne
stos
mov
xchg
and
xor
loopne
or
adc
sub
pop
push
pop
pushf
push
daa
jns
repnz
add
dec
hlt
lods
sbb
ljmp
sbb
out
adc
push
xchg
xchg
jg
or
loope
push
xchg
pusha
xchg
push
in
push
inc
or
repnz
insb
mov
in
sar
stos
sub
sbb
mov
setge
pop
bnd
in
jecxz
pop
mov
cs
lds
jmp
aad
inc
fisubl
push
adc
add
xor
stos
xchg
test
pop
repnz
xchg
pop
int
push
rcrl
pcmpeqd
popf
sti
lock
xor
adc
pop
mov
pop
push
div
or
dec
insb
sub
stos
insb
cld
gs
and
nop
mov
inc
fbld
xchg
inc
and
stc
fidivs
icebp
pop
call
sti
insb
cwtl
into
mov
aam
inc
push
push
xchg
or
in
and
shrb
movsb
aas
fs
insb
aaa
cwtl
or
leave
jbe
popf
inc
es
insl
push
xor
lods
jge
imull
jbe
inc
jno
cmp
cmp
hlt
js
clc
js
fildll
pop
fcoml
inc
insl
mov
add
xchg
sbb
in
rep
push
mov
mov
pop
inc
push
outsl
or
mov
mov
loop
cld
push
das
lret
sub
lret
divl
clc
mov
push
scas
fnstenv
in
xchg
xorb
push
out
sub
shr
dec
aam
cmpsb
pushf
mov
or
or
fs
pushf
mov
and
mov
js
aas
dec
mov
divl
pop
pop
cmc
das
in
sti
insb
shr
int
aam
in
xchg
outsl
mov
push
insl
addr16
xchg
pusha
ljmp
call
push
xor
aam
sti
push
or
push
inc
stos
mov
or
loop
insb
mov
push
jmp
mov
dec
arpl
jbe
push
xchg
fstps
lret
icebp
int
jp
repz
enter
imul
icebp
cmpl
xchg
push
shll
adc
aaa
adcb
lock
adc
pop
mov
adc
xor
fdivrl
xchg
stc
repz
sbb
xchg
cmp
cld
add
jno
push
fsubr
push
cs
fildl
jae
sbb
stos
jg
mov
cwtl
or
daa
jbe
out
fadds
pushf
das
adc
push
stos
xchg
aas
shr
push
int3
fnsave
dec
adc
enter
mov
imulb
fistpll
outsl
stc
lock
sbb
xchg
or
mov
jle
hlt
pop
stos
cmpsw
insb
mov
roll
call
cwtl
cmp
sbb
and
in
outsl
call
std
sbb
add
imul
jbe
insl
test
adc
dec
test
pop
pop
ljmp
jg
mov
pop
jbe
push
std
xorb
jae
and
lods
jnp
rorb
stos
ds
push
mov
or
xor
mov
jge
xchg
sub
fs
insb
add
add
shlb
jbe
insb
pop
jp
xchg
jbe
xor
xor
test
and
outsb
cld
dec
xor
jecxz
xor
jne
data16
jbe
and
jecxz
fwait
aam
and
loop
xchg
add
mov
shll
aam
mov
fs
loope
push
ret
pop
dec
xor
cmp
lds
repz
decl
sub
sbb
mov
mov
pop
mov
mov
orl
mov
jmp
mov
lahf
outsl
sahf
aad
cmpsb
aam
pop
push
iret
negl
add
scas
inc
push
jl
sarl
add
inc
pop
mov
inc
js
dec
xchg
push
inc
shll
xchg
sub
add
cmp
push
fldenv
int3
dec
fwait
and
es
adc
daa
add
insb
test
dec
test
pop
jmp
call
testl
outsl
dec
dec
push
test
mov
mov
mov
xchg
insb
push
mov
and
jae
ret
jbe
mov
imulb
sub
call
rol
in
movsb
dec
std
sub
popa
dec
jbe
cltd
insb
adc
lods
jbe
inc
insl
mov
mov
dec
lds
add
jne
aam
jbe
test
inc
inc
xlat
xchg
jae
xchg
aam
adc
push
fsubrl
and
in
push
js
push
push
mov
dec
mov
in
pop
int3
out
xor
aam
lret
xchg
iret
mov
xchg
fisubrl
enter
ljmp
jbe
push
aam
xor
mov
cld
inc
std
dec
sbb
jle
inc
pop
sub
insb
cmp
mov
adc
pop
les
add
sub
jbe
adc
xchg
inc
push
dec
subl
pop
insb
ss
out
sti
and
aam
pop
bound
jbe
adc
aaa
xchg
loopne
sbb
add
pop
xor
sub
push
cli
pop
subl
ret
jbe
arpl
jbe
adc
sub
inc
stos
pop
ret
aas
scas
imul
cmpsl
xor
push
mov
fst
icebp
repnz
in
mov
xchg
pop
ss
inc
shll
fwait
inc
sbb
cmp
jo
push
push
jne
fnstsw
mov
icebp
inc
mov
push
aad
mov
nop
pop
mov
pop
fidivrs
mov
dec
loop
insb
cltd
add
lcall
call
xchg
mov
lea
cmp
pop
ljmp
mov
cmp
lock
arpl
fcomps
add
dec
jnp
arpl
sub
insl
push
xchg
aad
call
pusha
aam
mov
popa
mov
cmp
sbb
inc
aam
shll
sarl
mov
inc
sub
insb
loop
push
jmp
pop
dec
pop
add
jnp
dec
imull
mov
sbb
mov
cwtl
sahf
mov
cs
cmp
adc
inc
vmovdqa
aam
loopne
test
jecxz
mov
inc
pushf
and
sbb
jbe
insb
ret
mov
xorb
fs
xor
shlb
call
lret
jmp
leave
aam
mov
int
div
aam
mov
pop
mov
aam
std
xchg
lcall
out
inc
pop
adc
xlat
xor
pop
sti
pop
sbb
das
das
mov
fwait
mov
sbb
adc
div
test
dec
mov
or
ljmp
mov
ds
jns
icebp
pop
mov
sub
call
adc
pop
mov
xor
cmp
dec
sub
ficompl
jbe
and
push
insb
int3
test
shrl
int
cmp
sub
movsb
cmp
inc
sub
xchg
inc
fcoml
cld
aam
incl
ret
xor
insb
inc
jne
loope
mov
cmp
dec
in
lret
adc
jo
jbe
xor
sub
fldcw
mov
enter
add
jmp
cltd
test
fmull
sti
jb
sar
mov
xchg
inc
insb
pop
xor
jmp
cmp
stos
sbb
sbb
inc
mov
mov
inc
addr16
and
lahf
int
ret
sbb
in
test
jno
and
in
mov
xchg
inc
das
aam
lret
mov
or
inc
ds
pop
sub
popf
aam
stos
cwtl
add
fimull
dec
mov
adc
out
aam
cs
xlat
lcall
xchg
roll
daa
fcmovu
sbb
aam
mov
xchg
sbb
pop
mov
and
inc
gs
jno
dec
xor
jne
mov
insb
and
and
mov
loop
fildl
cmpsb
ja
adc
lret
jg
or
mov
jp
or
lahf
test
add
sub
xchg
jbe
iret
cltd
push
jae
in
dec
sbb
fmull
add
int
inc
fnsave
es
cmp
jbe
mov
mov
arpl
sub
int
fdiv
jno
and
dec
repnz
test
test
out
shrb
pop
loope
jbe
sub
inc
xchg
jbe
imul
pop
andl
out
jns
pop
sbbl
inc
pop
and
call
xchg
sti
push
rclb
dec
cmpsl
cmp
adc
adc
mov
inc
fbstp
shlb
aam
dec
pushf
jg
dec
out
das
add
sbb
cmp
dec
aam
in
dec
jp
jmp
pushf
ljmp
inc
testl
rcrb
dec
dec
mov
std
jle
push
xchg
addl
mov
xchg
in
and
ret
inc
pop
inc
insb
lahf
pop
cs
insb
std
das
call
mov
cmp
pop
push
movsb
push
ret
rcl
cmp
pop
in
push
lods
xlat
fdiv
dec
mov
xor
dec
push
mov
pop
scas
inc
xchg
aam
dec
jne
xchg
inc
xchg
ret
jae
mov
mov
fwait
mov
add
in
gs
mov
lods
mov
aam
inc
roll
ret
stos
addr16
movsl
sub
inc
xlat
dec
xor
ret
inc
xor
push
cli
and
popa
aam
mov
mov
int3
jmp
dec
push
jp
xor
xchg
ds
jl
mov
mov
daa
pusha
cmc
jmp
mov
adc
sub
icebp
sub
out
rcrl
xchg
cmc
push
fdivs
xchg
es
xchg
loopne
jno
pop
xor
push
add
jo
lds
insb
lea
shrl
nop
or
mov
sbb
mov
add
add
xor
push
push
xor
int
mov
repnz
pop
push
iret
pop
mov
mov
xchg
dec
mov
in
roll
clc
or
cmp
xor
xor
push
dec
mov
push
movsb
or
popf
pop
bnd
and
sbb
sub
lcall
lods
adc
mov
jbe
or
xchg
dec
jl
cmp
in
dec
push
std
in
adc
orb
mov
dec
jmp
push
inc
aaa
jmp
and
fs
dec
mov
add
mov
or
shlb
pusha
mov
test
sbb
lret
sub
dec
xlat
out
mov
pop
orb
mov
test
jno
xor
insb
sub
mov
sahf
fisubl
aam
sub
jmp
test
in
out
subl
jae
or
rclb
cmpsl
jl
push
es
mov
xchg
adc
test
jbe
data16
icebp
sbb
insb
rcrb
ret
decl
std
sahf
xchg
outsb
sahf
jmp
ss
sahf
or
ja
pop
int3
scas
mov
cmp
cmp
insb
adc
pop
xchg
insb
imul
aam
mov
sub
and
inc
sub
je
mov
fldenv
dec
jle
fnsave
dec
jbe
xor
aam
sub
jmp
xchg
mov
fstp
sbb
lods
in
add
push
rep
xchg
dec
mov
xchg
push
inc
lods
cmc
rcrb
sbb
rcll
xor
or
into
sub
loop
dec
pusha
xor
stc
mov
popa
pop
mov
pop
jmp
jmp
popf
and
pop
lea
sub
aam
popa
shll
jne
pop
mov
sub
not
and
mov
pop
pop
dec
adc
aam
and
lock
lds
and
out
mov
addr16
push
lret
out
aam
mov
rol
std
jnp
adc
mov
adc
aam
fisttpl
xor
jbe
inc
aas
mov
sub
pushf
daa
frstor
pop
inc
arpl
popf
int
and
add
inc
mov
cltd
mov
lods
xor
rcl
rcrl
mov
aam
sub
jbe
xchg
cmpsl
jecxz
movsl
sti
jbe
rcrb
jbe
jbe
test
in
add
jno
fsubs
std
or
inc
fimull
in
lods
enter
sti
push
push
sbb
stos
test
ds
dec
lods
sbb
insl
cmp
stos
cmpsl
inc
mov
arpl
sbb
aam
mov
ljmp
insb
inc
lea
ljmp
lea
jb
shlb
dec
dec
cmp
lcall
pusha
xchg
sbb
lea
daa
mov
fcmovbe
es
out
outsb
lahf
xchg
push
sbb
je
and
mov
jbe
daa
mov
jp
pop
jbe
sbb
pusha
push
jnp
out
pusha
movsb
je
cmp
arpl
in
fs
insb
push
call
aam
shrb
aad
cmp
rep
gs
das
inc
ret
and
mov
xor
les
insb
sbb
cmp
xchg
mov
cli
mov
jbe
mov
mov
lahf
js
pop
push
push
mov
xchg
call
decl
je
out
sti
ret
orl
fidivs
jnp
mov
dec
sar
mov
aam
sti
mov
mov
ficoml
std
or
and
jne
arpl
adc
lahf
cmpsl
mov
mov
mov
add
insb
lods
inc
mov
xor
ss
mov
ret
or
arpl
add
loop
mov
and
adc
jae
insb
mov
out
aaa
jnp
in
mov
push
or
mov
dec
ficoml
cmp
pop
sub
aam
cmpsb
insb
leave
pop
inc
dec
aam
cwtl
sub
jne
loopne
shlb
and
push
mov
sbb
jbe
insb
cmp
xchg
mov
mov
repnz
inc
cmp
pushf
cmp
insb
xor
insb
mov
pop
xor
sub
inc
pop
insb
pop
mov
add
daa
loopne
mov
stos
jns
aam
ret
lret
std
jbe
insb
push
mov
mov
cltd
or
jne
mov
cmpsb
ds
adc
xor
pop
gs
das
jp
es
push
fistps
xorl
adc
jbe
pop
jno
orl
inc
add
inc
out
ds
mov
ss
push
push
mov
cmp
push
out
lock
lds
jbe
sub
mov
lahf
out
lea
mov
sbb
jne
cmp
sti
add
mov
fwait
push
ret
xchg
xchg
lea
sub
sbb
cmp
es
movsl
mov
fnstenv
insb
and
push
stos
std
xor
add
and
dec
cmp
mov
pop
imul
movsl
aam
xchg
xor
ret
repnz
push
ja
adc
aam
fbld
insb
lret
jmp
aam
mov
sbb
mov
or
sub
xor
jb
insb
xlat
clc
adc
xchg
inc
rcrb
jnp
vphaddwd
aad
dec
ljmp
dec
andb
mov
push
mov
jbe
adc
inc
mov
inc
incb
mov
sub
divl
iret
ss
adcl
in
testl
push
in
adc
sbb
and
aam
cli
lret
imul
or
add
cmp
and
sti
arpl
aam
jmp
add
popa
aaa
lock
cmp
and
inc
dec
cmp
sub
cs
aam
test
ror
insb
out
pop
scas
cmp
hlt
mov
es
jns
cmp
cltd
jbe
push
aad
cmpsl
cmp
into
dec
and
pop
test
rcr
mov
dec
mov
dec
fs
xchg
test
xor
push
or
cmp
xlat
xor
jecxz
in
xor
mov
insb
jecxz
pop
jge
inc
pop
insb
push
cmp
inc
testl
add
xchg
mov
rcrb
js
jbe
insb
mov
mov
push
or
arpl
jbe
pop
out
cmpb
jbe
sahf
pop
pop
les
dec
mov
sti
mov
inc
pop
mov
insb
pop
add
pop
sub
jle
fmulp
aam
xor
cmp
call
das
mov
scas
mulb
fmuls
out
sub
int
stos
pop
out
in
insb
mov
loope
cmpsb
loopne
dec
mov
pop
or
cmp
pushf
int
add
jbe
mov
ja
stos
or
xor
xchg
in
dec
mov
std
imul
lea
inc
shl
adc
int3
pop
or
cmc
cld
jp
mov
sbb
shlb
and
aam
std
push
fiaddl
mov
lds
sarl
aad
enter
rcll
or
cmpsb
lods
inc
dec
insb
jg
out
jmp
mov
add
adc
cmp
pop
add
jnp
adc
lret
inc
insb
mov
add
cmc
or
mov
cltd
aam
hlt
rorb
pushf
clc
scas
inc
jl
ror
es
fistps
loop
movsl
popf
aam
aas
and
sbb
test
daa
xchg
cltd
mov
fwait
add
dec
xorl
bound
stos
popa
cmpsl
daa
cltd
pop
aam
mov
test
pop
addb
gs
fdivl
iret
pop
test
scas
sahf
or
fdivrs
push
mov
sub
push
sub
pusha
icebp
xchg
int3
imul
insb
leave
dec
shll
push
jbe
cmc
std
sbb
inc
repz
xor
insb
push
cmpsl
das
fldcw
push
mov
lret
mov
add
in
ds
pop
adc
in
pop
mov
jmp
sub
jbe
dec
xor
mulb
sbb
scas
push
mov
pop
shl
into
jbe
insb
add
fisubrs
outsl
iret
pop
jbe
add
dec
cmp
insb
clc
xor
divb
in
jbe
adc
jnp
gs
fs
cmp
es
movsl
pop
sti
mov
daa
mov
cmpsb
mov
mov
movsb
pop
xor
mov
stos
gs
icebp
xchg
lcall
insb
inc
fadds
and
mov
jbe
push
jle
fldcw
inc
mov
rorb
or
orb
and
and
stos
cmp
sbb
mov
insb
ljmp
aam
and
sub
fdivl
loope
mov
add
insb
inc
fnstenv
jbe
cmp
dec
popf
lds
xor
cs
nop
and
out
sub
jg
push
out
cmpsl
jnp
cmp
call
movl
pop
and
xchg
sbb
cli
es
mov
stc
push
jns
enter
dec
lock
and
sbb
mov
int
push
xor
ffreep
xor
jnp
cmp
dec
mov
xchg
xchg
clc
cmp
stos
scas
dec
mov
dec
jae
adc
push
lea
xchg
sub
xchg
mov
dec
xchg
ja
rcr
push
mov
adc
add
lea
mov
test
sbb
push
cmpsb
xchg
call
jmp
jnp
pop
mov
jl
pop
inc
adc
pusha
repz
imul
adc
hlt
adc
pop
pop
aam
imul
lret
jno
insb
clc
pusha
mov
les
adc
and
cmp
pop
cwtl
in
insl
out
push
arpl
sub
nop
insb
or
jmp
sbb
aam
xlat
jno
pop
sub
jle
mov
push
jne
popf
lds
jmp
dec
mov
cmpsb
mov
mov
jne
incl
vandps
mov
inc
mov
aas
adc
mov
orl
aam
lea
into
rol
sbb
mov
ds
insb
fwait
xchg
lret
cmc
adc
inc
dec
push
inc
push
adc
sub
lds
mov
add
adc
mov
adc
pop
mov
in
push
mov
int
mov
adc
push
mov
push
sub
xor
push
loope
jo
in
sbb
and
insb
adcb
add
xchg
xchg
pushf
js
sub
lods
repz
loop
inc
std
data16
dec
ret
out
sub
dec
std
mov
enter
es
jb
test
decb
xlat
jbe
insb
shll
mov
es
lahf
jle
aam
jb
mov
pop
mov
mov
dec
movd
mov
mov
cmp
push
dec
insb
lods
addb
mov
mov
imul
rep
test
add
adc
dec
sub
es
insb
pop
popf
mov
dec
repnz
cmpsb
sub
bswap
jbe
push
je
int3
inc
ljmp
mov
pop
subl
push
mov
arpl
mov
pop
sub
mov
lock
pop
push
insb
pop
scas
adc
push
nop
add
fs
sbb
cmp
fs
mov
les
pop
fidivs
pop
sub
push
clc
mov
lock
lret
stc
shr
xchg
sbb
aam
lret
dec
scas
test
adc
jp
adc
movsl
jae
insb
add
jbe
insb
call
jne
or
pop
pop
and
aam
pop
cld
sbb
sbb
pop
lahf
insb
mov
and
insb
stc
inc
faddl
out
fsubl
adc
pushl
adc
mov
pop
outsb
mov
jno
mov
lods
sarb
popf
sbb
icebp
mov
inc
outsb
insb
stos
mov
jne
xor
dec
sbb
jle
add
mov
mov
imul
dec
in
xor
mov
pop
dec
out
mov
mov
into
cmp
into
stc
jp
lods
mov
mov
or
mov
bswap
stos
or
andb
jbe
mov
jecxz
xor
mov
push
mov
jbe
push
pop
xor
adc
sub
sbb
dec
mov
insb
loop
fstl
jbe
cmp
dec
sbb
pop
hlt
push
pop
sub
push
and
out
leave
cwtl
mov
insb
sbbl
movsb
in
mov
mov
adc
add
insb
ret
in
cld
xchg
sub
insb
mov
push
insb
add
xchg
xchg
das
in
push
xchg
push
fistps
add
imul
aad
and
sub
xchg
cwtl
jecxz
mov
mov
in
nop
loope
gs
pop
push
cli
data16
pop
xchg
push
aaa
lock
and
call
mov
in
mov
xchg
fbld
inc
repz
movsb
sbb
push
mov
inc
push
ljmp
jbe
or
adc
scas
mov
ja
ret
cmp
sub
mov
data16
pop
stos
fbld
cmc
insb
int
lret
ret
pushf
dec
pop
sbb
das
imul
push
cmp
jg
dec
dec
mov
sbb
add
cmp
in
mov
fs
jmp
pop
daa
adcb
mov
push
sbb
mov
adc
adc
push
lret
aam
lock
lods
push
loope
push
mov
jnp
push
movb
push
sbb
and
mov
sub
add
push
cld
mov
or
mov
data16
lea
adc
and
xor
js
mov
insb
jbe
inc
vpcmpeqd
gs
ret
fistpl
jbe
adc
sub
mov
pop
jbe
add
lahf
jbe
rolb
or
mov
xor
push
mov
test
pushf
mov
mov
xor
add
cmp
adc
cmc
jns
fistpl
rcrb
push
xchg
cli
aad
sbb
push
cs
addl
mov
jbe
mov
fidivrl
add
mov
mov
push
sub
jne
sbb
or
add
jb
jae
scas
iret
dec
std
insb
addr16
cwtl
out
push
pusha
je
leave
cmp
push
mov
into
out
icebp
jo
mov
mov
adc
add
fsubrs
mov
inc
and
jbe
adc
out
and
push
imul
xor
std
lods
jbe
nop
cli
cltd
loop
out
js
fimuls
and
fnsave
xorl
push
jbe
ja
loop
jns
push
andb
xor
cltd
adc
pushf
pop
dec
fs
mov
mov
jbe
cli
mov
xor
mov
fildll
test
aam
in
test
loop
and
int
xchg
xor
aam
test
jle
ret
lds
cmp
pop
mov
inc
jbe
fsubrl
lods
imul
push
pop
xchg
push
stos
inc
pop
dec
loope
jne
rcl
data16
insb
mov
xchg
cli
aam
faddl
push
jbe
cwtl
jnp
cmpsb
mov
stos
push
sub
mov
lret
das
aas
inc
xorl
aaa
aad
mov
cmp
int
push
jnp
cmp
push
or
insb
aam
push
adc
jge
inc
test
pop
sbb
gs
insb
lods
sarb
push
insb
inc
mov
mov
and
adc
push
jl
rorb
out
pop
mov
aam
and
sub
jecxz
cmc
out
and
pop
push
cmp
xor
inc
jle
mov
fs
movsl
sub
cli
ja
dec
stos
aam
mov
bound
stc
add
sbb
inc
cld
fbld
jbe
push
dec
jno
dec
repz
sbb
push
out
lods
orl
and
inc
movl
dec
mov
leave
shrb
sub
loop
sbb
pop
rcr
cltd
insb
or
sahf
aam
shrl
imul
inc
jecxz
sub
daa
cmp
jge
stos
je
xchg
push
mov
push
sub
cli
aam
fwait
insb
inc
fistl
cmpsl
jecxz
mov
rclb
aam
mov
sarb
iret
push
filds
inc
iret
mov
mov
rolb
rolb
cmp
or
mov
adc
cmp
jbe
and
pop
sub
pusha
sti
cli
pushf
jne
lds
rolb
pop
mov
scas
jbe
mov
daa
fs
or
mov
or
dec
jbe
mov
dec
addl
pop
aas
jbe
push
xchg
movsl
add
mov
and
test
loop
jbe
insb
stc
popa
mov
fcomps
inc
mov
jbe
insb
enter
fwait
inc
xchg
ja
movsl
shrb
cmp
in
out
dec
cli
in
pop
insb
push
xchg
stos
subb
add
icebp
dec
sub
loopne
inc
test
insb
xor
cltd
mov
sbb
mov
jmp
les
frstor
xchg
push
adc
cltd
sub
jge
rolb
mov
test
in
pusha
mov
adc
repz
cltd
inc
lock
pop
mov
popf
mov
stc
mov
cmp
dec
clc
xchg
loope
xorb
rclb
sarl
scas
xchg
loopne
jmp
daa
jecxz
dec
xchg
xor
sbb
subl
inc
rcll
push
addr16
iret
and
cmp
mov
push
hlt
inc
mov
adc
mov
aas
aam
mov
mov
xchg
int
fdivrl
filds
int
cmp
jbe
aad
int3
loop
cmp
rolb
scas
outsl
mov
pushf
repz
stos
jbe
or
repz
sbb
mov
cmp
leave
mov
or
mov
xor
dec
sbb
aam
int3
icebp
xlat
push
sbb
scas
out
xchg
push
xor
sub
add
mov
rorl
aam
ror
jbe
inc
sub
add
pop
fs
jbe
out
pop
xor
cmp
ror
push
sahf
dec
jecxz
mov
xchg
mov
mov
xor
les
jmp
enter
adcl
sbb
clc
cltd
movsl
dec
orl
call
insb
out
inc
push
in
jbe
cli
loop
mov
loopne
xchg
adc
nop
push
testb
mov
lods
and
push
sbb
dec
lds
push
inc
insl
mov
cmp
sbb
pop
scas
push
icebp
mov
nop
lret
inc
stos
aam
sbb
aas
aam
xlat
add
mov
push
adc
dec
fstpt
xchg
mov
je
add
jbe
inc
leave
rorl
xchg
jno
dec
pop
mov
sahf
add
cwtl
icebp
add
adc
jle
test
mov
push
insb
stos
loop
push
push
or
clc
sti
cmpsl
popf
inc
inc
testl
lock
movswl
out
aas
jae
sub
daa
paddq
lock
sbb
adc
pop
sub
test
xchg
clc
mov
and
jnp
insb
dec
adc
btr
mov
cli
push
sbb
ds
push
ficomps
jmp
ret
loope
data16
adc
xor
arpl
jbe
insb
mov
adc
dec
mov
lcall
aam
cmpsl
adc
add
or
cmp
mull
dec
push
ljmp
jbe
or
andb
xchg
pop
mov
jg
cli
cltd
aam
les
jl
pusha
or
es
lahf
mov
mov
push
cmp
or
in
scas
mov
mov
test
nop
mov
cmp
inc
mov
outsl
xchg
mov
popf
adc
jbe
mov
dec
and
jbe
xor
and
sbb
xchg
repnz
fs
cmp
cltd
xor
jp
fisttpl
mov
mov
or
sbb
aaa
insb
movsl
sub
jns
dec
mov
je
mov
mov
sub
sbb
mov
inc
mov
inc
insb
and
test
cmp
inc
out
adc
dec
int3
mov
add
outsb
fildl
lds
mov
sub
movsl
rcl
pop
clc
adc
leave
jmp
movl
aam
mov
adc
mov
cmc
and
lea
roll
jns
pop
pop
es
aam
movsb
icebp
lock
dec
sahf
or
loope
add
or
pop
imul
inc
sub
xchg
push
cltd
icebp
add
lock
push
jae
lods
dec
addr16
insb
inc
jecxz
jbe
in
xchg
pop
popa
fimuls
jae
icebp
mov
xor
cltd
insl
dec
xorb
jbe
push
adc
pushl
fnstcw
es
cli
add
mov
es
stos
aam
in
inc
mov
xchg
scas
jbe
ljmp
movsb
xchg
insl
push
jbe
sbb
pop
xor
test
lods
test
mov
mov
incl
nop
mov
shll
pushf
mov
insb
ljmp
or
cwtl
xor
sub
int
mov
sub
mov
inc
test
cli
cmp
mov
push
mov
in
adc
jbe
insb
sbb
inc
loope
dec
loop
cmp
mov
popa
mov
hlt
lcall
sbb
push
rorl
cwtl
pop
mov
pandn
ds
int3
xchg
clc
imul
push
push
shll
cmc
loopne
lock
jbe
stc
sub
or
cltd
inc
test
outsl
outsb
inc
aam
push
cwtl
in
xchg
out
dec
or
sti
jecxz
or
repnz
or
mov
hlt
sbb
mov
fs
enter
rolb
xchg
push
insb
sub
or
cmp
insb
out
mov
mov
dec
jns
mov
push
fmuls
insb
ret
data16
sub
jns
inc
and
dec
std
sub
push
xor
ljmp
cmc
dec
mov
jbe
je
nop
and
jae
mov
jle
lahf
aad
mov
stos
idivl
xchg
ja
fwait
inc
jbe
mov
jo
xor
lock
pop
rcll
or
jb
adc
out
mov
mov
fbld
out
jno
dec
mov
dec
mov
and
in
mov
dec
pop
add
into
dec
rcl
or
xor
push
hlt
repz
dec
icebp
jae
cmpsl
aaa
roll
rcrb
shlb
insb
shlb
inc
and
mov
and
sub
push
mov
into
and
sti
outsb
mov
pop
aaa
xchg
aam
rcll
and
dec
xchg
inc
lret
aam
mov
xor
std
pushf
aam
rcrl
sahf
pop
jb
mov
mov
dec
aad
mov
fidivrl
mov
inc
dec
and
jecxz
enter
pop
sbb
jo
in
sbb
sbb
aam
pop
dec
mov
or
loope
call
insb
xchg
inc
pop
xor
xchg
jne
jp
pop
xchg
mov
imul
iret
and
and
stos
ret
jbe
inc
inc
pusha
cmpl
jo
mov
cmpsl
and
test
roll
stc
push
inc
stc
fwait
or
inc
ret
ljmp
xchg
xorl
mov
shlb
repnz
jbe
or
jno
aam
rorb
aas
adc
mov
pushl
or
insb
lds
xor
fildl
xchg
mov
lods
cld
ja
mov
into
in
jnp
jnp
and
mov
push
ret
hlt
aas
lcall
xchg
push
sub
andl
shl
ds
aaa
sahf
lret
pop
mov
xor
in
jbe
dec
push
push
xchg
push
lods
inc
jp
cmp
insb
mov
or
sub
stc
xor
test
mov
sub
jns
sbb
aam
mov
jo
xchg
jno
in
pop
pop
add
lcall
pop
mov
push
aas
mov
sub
shrl
push
add
loopne
mov
aas
test
stos
push
mov
insb
push
mov
fwait
dec
mov
mov
jbe
cmp
cwtl
jnp
es
cmp
in
dec
jp
push
loope
fidivrs
jl
jnp
xchg
mov
leave
sbb
xchg
aad
jl
push
iret
pop
testb
lcall
mov
jle
push
icebp
pop
cmc
jbe
pop
orl
out
push
push
pop
aam
mov
mov
pop
dec
sub
cld
sub
jb
xchg
lret
xorb
daa
lea
insb
fcomps
xchg
mov
jbe
insb
cli
lret
jo
dec
addr16
add
aam
loopne
pop
sub
in
mov
or
jbe
shll
jle
dec
popa
gs
jo
and
loop
cwtl
shrl
into
xchg
dec
inc
cmp
push
fs
lcall
not
jbe
push
inc
lcall
jg
arpl
in
movsb
insb
mov
push
and
movsb
jge
mov
lds
fnstenv
cmp
dec
adc
fiadds
cltd
pop
aam
mov
test
jbe
insb
xchg
fisttpll
insb
iret
push
fwait
testl
jbe
insb
push
insl
push
sbb
pop
std
cli
lret
and
jbe
jne
jle
jge
lahf
mov
ss
stos
cmc
andl
push
repz
in
inc
hlt
ja
mov
pop
adc
aam
filds
jmp
jmp
insl
mov
sarl
pop
xor
int
arpl
and
negl
insb
rcrl
jbe
pop
jmp
popa
das
je
insb
nop
push
dec
mov
popa
subl
mov
leave
daa
mov
insb
push
inc
lds
push
cmp
neg
push
arpl
cmp
test
add
in
and
jp
inc
pushl
mov
cs
stos
mov
jecxz
mov
loope
popa
cmp
imul
mov
cmp
inc
cmp
fildll
inc
fbstp
add
adcl
in
sbb
mov
aam
and
ljmp
in
adc
shl
cli
sahf
jle
jns
imul
pop
sbb
aam
repz
lods
stos
pusha
int
pop
into
inc
lahf
mov
mov
insb
hlt
out
and
mov
jns
lds
fildll
shrb
pop
xor
aad
aam
loope
aaa
repnz
lds
mov
shlb
repnz
mov
and
or
pop
aam
lahf
push
cmp
mov
out
imul
cmp
mov
imul
fdiv
test
jns
and
cmpl
jp
loopne
jg
sub
loop
inc
push
out
aam
js
insl
xchg
aaa
mov
vmread
cli
jbe
pop
andb
xchg
aam
mov
cmp
insb
add
addr16
insb
out
jae
negl
cwtl
lock
sbb
pop
jbe
out
pop
call
in
mov
cld
aam
loopne
int
ret
sub
insb
adc
jno
cmp
pop
mov
push
and
dec
lds
in
and
push
dec
sbb
scas
jmp
xlat
sbb
aam
push
insb
dec
jo
cmp
imul
nop
dec
js
aam
call
inc
call
lahf
jne
out
in
push
outsb
int3
out
and
ja
sub
inc
aam
imul
adc
rcll
scas
adc
pop
jge
shr
jmp
inc
insb
int
mov
int3
or
insb
call
loop
insb
mov
push
jmp
xor
mov
mov
cld
add
jne
clc
and
ret
adc
pop
call
mov
dec
xchg
lods
mov
lret
mov
jmp
repz
jl
dec
loope
or
push
outsl
sub
frstor
aaa
dec
push
jo
stc
add
int3
mov
push
xor
xor
jbe
shll
mov
mov
scas
mov
xchg
cs
aam
mov
aad
add
scas
daa
dec
adc
mov
jo
push
aam
push
inc
mov
xor
das
pop
mov
aas
add
jbe
xor
xchg
arpl
sbb
sahf
ret
outsl
ljmp
pushf
sbb
enter
mov
inc
aas
and
ds
mov
setg
or
aam
push
mov
jbe
jl
or
aam
xlat
and
dec
mov
cmp
arpl
repnz
jno
mov
idivb
enter
mov
jbe
jge
push
shll
sbb
insb
inc
add
cmc
cltd
mov
pusha
test
cmp
jl
sahf
aaa
jmp
mov
and
sub
jbe
push
jle
adc
repz
test
das
jne
mov
insb
mov
pop
outsl
popa
jmp
iret
mov
add
push
hlt
xchg
push
cwtl
push
jne
mov
mov
aaa
sub
aas
jge
inc
fstpl
mov
scas
jcxz
inc
enter
and
shl
shlb
icebp
inc
sub
mov
nop
sub
nop
incb
cmp
ds
int3
cmc
xor
es
pop
out
sbb
rcll
mov
lds
adc
jl
imul
adc
movb
mov
cmp
dec
das
in
mov
fcmovnbe
dec
mov
mov
hlt
push
aam
jb
nop
jp
loope
int
pop
int
fmul
mov
mov
hlt
sub
lret
fisubrl
jo
jge
aam
clc
aam
fnsave
cmp
inc
dec
mov
jae
or
in
sub
fs
not
ret
or
lds
stc
inc
pop
jns
imul
inc
sub
push
add
orl
test
insb
add
xchg
mov
das
lret
or
push
arpl
add
insb
push
adc
mov
push
orl
aam
loop
jb
pop
push
fidivrl
jae
lcall
xchg
aam
test
mov
je
inc
push
in
int3
insb
jl
pusha
in
push
sub
inc
mov
xchg
movsb
pushl
add
inc
fimull
mov
cs
push
cltd
jbe
add
stos
push
mov
call
adc
mov
and
std
addb
jmp
loop
pop
cmp
pushf
test
or
arpl
xor
out
cmc
icebp
aam
icebp
insb
pop
push
stos
mov
sub
push
mov
sub
aam
call
xlat
mov
test
loope
jbe
cwtl
sti
jne
mov
outsl
inc
fisubs
push
in
stos
mov
push
and
call
das
aaa
out
jbe
pop
aaa
repz
cmp
scas
sbb
sub
out
dec
aam
cmpsl
fs
cmp
sub
lods
push
pushf
insb
arpl
mov
push
mov
inc
divb
insb
sbb
pushf
xor
lsl
pop
fisubl
xchg
cltd
scas
pop
fisttpll
cmp
in
add
outsb
and
ds
and
dec
mov
hlt
xchg
add
cwtl
testb
xorb
ret
gs
lret
stos
cmp
mov
jecxz
es
and
enter
and
test
lret
xchg
in
call
lret
insb
inc
mov
insl
dec
dec
insl
insb
aas
xchg
adc
repnz
and
daa
fadds
aam
icebp
insb
inc
fwait
icebp
cwtl
xchg
hlt
das
pop
and
ror
imul
stc
aas
aam
daa
insb
adc
cmpb
push
xchg
aam
mov
mov
cmp
insb
jp
dec
xor
mov
ss
sub
lock
mov
aam
in
or
jbe
pop
int
push
inc
outsl
inc
ljmpw
dec
fsubrl
jp
dec
mov
js
and
roll
notb
fwait
pop
dec
stos
push
or
sub
push
sbb
mov
je
push
xor
pop
mov
push
hlt
popf
cmp
xchg
jno
mov
sub
xor
loopne
pop
fistpll
pop
in
sbb
insb
adc
sbb
jle
divl
inc
lds
loopne
ja
push
xor
dec
add
xchg
les
mov
or
pop
adc
decb
dec
ljmp
ds
ror
enter
or
mov
cld
test
jle
fwait
pop
scas
lods
std
xchg
pop
push
out
iret
fbstp
adc
out
shll
cmp
mov
mov
add
outsb
pop
pop
insb
in
aam
fdivl
pop
fs
sbb
sub
mov
mov
push
push
cwtl
push
dec
popa
xchg
mov
aas
pop
push
mov
mov
mov
sub
jbe
jo
fwait
xor
jno
mov
insb
cli
scas
fnstsw
inc
ja
test
ret
and
cmp
mov
or
mov
aam
mov
rcrb
cwtl
test
pop
popa
push
cmc
mov
int3
popa
jne
rol
cltd
inc
sbb
xchg
daa
adc
fcomps
insb
sbb
push
lahf
dec
jbe
pop
adc
mov
push
cld
popf
lods
ss
sbb
mov
ret
aam
mov
mov
pop
mov
add
add
testl
scas
jge
mov
jnp
lods
and
pop
push
sub
insb
mov
test
jge
cmp
cmp
jbe
inc
add
dec
idivl
and
lret
mov
fdivs
mov
aas
push
aad
sub
push
cmpsl
and
fst
insb
aas
jl
add
cwtl
hlt
xchg
mov
iret
push
mov
sbb
mov
xchg
orb
mov
sub
xchg
add
jnp
mov
sub
mov
cmp
sbb
dec
ss
xchg
dec
push
xor
fmull
jge
std
iret
jbe
or
adc
mov
sub
pop
xchg
mov
in
inc
icebp
ljmp
mov
insb
inc
fs
xor
dec
icebp
push
loopne
xor
jbe
push
test
ss
mov
or
cmpsl
jbe
push
clc
cmp
xchg
pop
out
ret
dec
mov
dec
inc
adc
inc
ds
out
mov
es
int
adc
mov
and
pop
jbe
sbb
mov
cmpsl
aaa
cwtl
out
push
stc
insb
aaa
sub
xchg
push
ss
scas
jbe
insb
mov
add
cmp
stc
sbb
dec
dec
testb
test
rcr
lahf
add
fs
cmp
in
int3
scas
xor
cmpl
or
outsl
negb
mov
lds
sbb
out
loope
loopne
add
jbe
loopne
jg
push
pop
out
movsl
adc
mov
mov
mov
stos
out
clc
mov
add
xorb
cltd
sub
jbe
outsl
scas
sbb
mov
push
and
pop
repz
ljmp
or
inc
sub
pusha
jmp
fisubrl
ja
cmp
lahf
rorb
lods
std
test
inc
dec
lret
or
inc
pop
in
sti
cmp
mov
xchg
xchg
into
pop
stc
nop
jno
cld
push
push
mov
insb
out
dec
ret
pop
aad
dec
mov
lds
pop
rorb
lock
push
xchg
cs
inc
jo
sbb
pop
in
hlt
test
inc
popf
push
mov
sbb
xor
xor
dec
rol
fcmovu
in
pop
fsubrl
scas
xchg
jbe
sbbb
stc
and
inc
mov
aad
jb
hlt
and
pushf
jnp
or
push
out
call
aad
or
fiadds
mov
dec
mov
dec
insb
or
testb
test
aam
out
adc
imul
aam
out
pop
shll
adc
jbe
daa
test
adc
adc
aam
stos
pop
jp
add
dec
clc
movsb
aam
push
jbe
jb
sub
cli
pushf
cmp
or
cmp
test
fcompl
pop
int3
and
and
rclb
and
sbb
inc
xchg
sbb
in
mov
xchg
daa
push
or
sub
ljmp
dec
sbb
test
dec
icebp
push
sti
test
sbb
dec
mov
push
nop
test
cmp
mov
lcall
popa
push
mov
inc
popa
cmp
fwait
je
jns
popa
mov
mov
popa
ds
lret
sub
call
mov
pop
icebp
stos
sbb
les
stc
insb
dec
or
push
lret
jp
bound
jp
iret
jle
mov
stc
aam
pop
sti
jp
bound
aas
imul
rcll
shlb
jp
int
loope
mov
mov
xlat
xchg
sbb
jns
push
in
fcompl
test
in
pop
jp
bound
inc
bound
adc
aam
xor
fisttpl
xchg
cmp
dec
mov
jp
bound
mov
bound
mov
bound
stc
insb
xor
and
jnp
arpl
sarb
aaa
fstpt
arpl
add
jmp
shll
in
sti
jnp
arpl
push
cmp
and
arpl
push
shll
push
push
mov
mov
ret
popa
inc
jnp
insb
lea
mov
outsl
xor
push
arpl
jnp
arpl
jnp
arpl
ljmp
incl
arpl
jnp
arpl
jnp
arpl
std
aas
push
xor
arpl
stc
das
cltd
fsub
or
mov
shll
fcom
jmp
shll
gs
insb
jb
adc
repz
sbb
xor
or
jge
enter
cmp
fldenv
sbb
xchg
pop
cmp
or
outsb
pushf
mov
mov
or
repz
push
fcomp
repz
insb
dec
fmull
shl
add
sub
inc
pause
lds
mov
insb
out
xor
fdiv
jbe
insb
inc
in
xchg
cmp
scas
or
pop
les
mov
repnz
stc
out
js
fs
mov
repnz
insb
ffreep
push
sbb
jae
adc
adc
or
loope
cli
repnz
cmp
mov
les
sahf
imul
and
inc
stos
repnz
insb
push
xchg
jbe
jbe
hlt
add
in
out
xchg
ss
insb
dec
and
les
nop
les
fbstp
mov
ljmp
aad
bound
cmp
dec
mov
rclb
stos
icebp
push
mov
fs
loopne
psllw
insb
push
mov
sbb
les
sarb
cmp
jns
jle
xor
sub
std
push
insl
cmp
mov
fadd
insb
xchg
imul
icebp
jbe
hlt
jge
push
aam
clc
in
mov
insb
popa
add
xor
add
jp
ss
icebp
nop
insb
jp
add
mov
jbe
insb
xor
mov
push
mov
pop
movb
gs
cmpsl
daa
lock
fs
sub
insb
jmp
insl
ljmp
mov
lock
or
mov
cmp
push
sbb
xor
sub
das
sub
mov
aam
int
mov
fadd
insb
int
cmp
hlt
xorb
lock
in
cwtl
gs
mov
insb
out
sub
push
lock
add
insb
cmp
cmp
xchg
or
lock
insb
lock
fs
cmp
xor
push
nop
xor
imul
js
js
push
je
adc
and
mov
lcall
xor
mov
lcall
sbb
cmp
sub
mov
fcoms
or
insb
int
jl
in
leave
clc
std
movsb
cld
xchg
pushl
pop
jmp
hlt
leave
nop
int
test
data16
pushl
mov
jmp
leave
insb
xchg
insb
pop
mov
pop
hlt
into
lret
popa
pop
enter
or
js
out
movsb
inc
mov
scas
clc
js
push
je
adc
add
add
nop
adc
xor
and
and
lahf
pop
cmp
sub
notb
or
jbe
fadds
fmul
insb
stos
mov
clc
mov
xor
mov
scas
mull
xchg
hlt
enter
xchg
mov
inc
pop
xchg
mov
aad
movsb
enter
xchg
jns
jbe
insb
aad
mov
pop
incb
call
stos
data16
std
or
push
mov
pusha
mov
setno
pop
mov
insb
ficompl
lret
mov
lret
pop
cmp
sbb
sti
gs
or
jbe
inc
btrl
in
int3
in
aam
jp
cmp
sarb
mov
insb
lock
clc
pop
into
insb
mov
jecxz
out
inc
mov
mov
mov
insb
les
mov
xchg
push
clc
pop
mov
insb
sarl
xchg
push
xor
imul
sbb
divb
les
pushf
adc
sti
inc
insb
push
push
test
call
ret
cltd
data16
stos
test
jbe
pop
lea
push
and
ret
xor
test
std
rep
mov
aas
or
mov
addr16
jecxz
jbe
movsl
imul
out
repnz
les
or
pop
jbe
insb
call
jge
insb
in
aad
xchg
data16
add
fidivl
ds
sbb
pop
adc
fidivrs
sarb
adc
lea
xorb
loope
sti
mov
lret
rcl
add
out
mov
mov
lret
inc
ds
fmulp
xchg
jp
loop
cmp
xchg
mov
jg
insb
inc
sub
clc
jb
cmp
outsl
or
loope
insb
pop
xor
movsl
cmp
mov
testl
sub
divl
insb
mov
mov
insb
lret
dec
negl
stos
aas
negl
insl
pop
movsb
add
out
cmpsl
stc
pop
pop
jbe
aas
pop
or
cmc
push
ret
jne
inc
pop
adc
jg
insl
and
daa
mov
das
bnd
cmc
and
and
and
insb
rorb
mov
enter
outsl
test
or
enter
lret
subl
and
cltd
dec
stc
xchg
nop
cmc
lahf
fs
push
inc
repnz
les
fisubrl
repnz
lret
xor
jns
cmp
stos
icebp
pop
es
mov
cmp
testl
insb
or
inc
movb
pop
lock
sbb
popf
les
push
mov
loopne
dec
inc
aam
push
dec
push
or
test
ja
mov
pop
push
jo
push
sub
adc
xchg
icebp
ljmp
fsubl
mov
scas
and
pusha
and
push
fs
cmpsl
jb
push
mov
aaa
aam
imul
add
cmp
push
and
js
xorl
fidivl
push
icebp
cwtl
popa
inc
je
insb
jnp
add
aam
in
push
insl
lcall
or
fdivr
jbe
hlt
sub
insl
lock
jbe
mov
jle
xchg
cli
jbe
push
push
inc
out
stc
iret
adc
stc
xor
fildl
inc
into
jns
cmp
mov
pusha
inc
lahf
clc
push
into
cmp
test
into
les
nop
into
insb
gs
xor
es
insb
dec
pop
test
repnz
cmp
pusha
jp
mov
pusha
cmc
cmpsl
addr16
aam
xor
testb
cmp
cmc
js,pt
popa
js
loope
jmp
mov
jne
out
popa
pop
clc
ret
jns
popa
ret
repz
and
pop
xchg
jns
bound
fsubs
fdivp
cmp
bextr
jg
sbb
and
ljmp
hlt
push
mov
add
popl
jo
adcl
ret
icebp
jbe
xor
add
pop
dec
fcomps
lock
cmpsl
push
inc
jbe
popf
cwtl
mov
lret
enter
xchg
xchg
imul
jno
notl
dec
test
inc
jmp
sub
gs
mov
lret
or
lock
mov
or
jp
sbb
shrb
jbe
test
mov
iret
js
mov
stc
cmp
insb
insb
div
jo
cmpsb
iret
insb
leave
sahf
dec
cmp
out
into
cld
pop
shrb
clc
jbe
sbb
fdiv
inc
cmp
push
rorl
xchg
ret
aam
sbb
adc
fcomi
jp
fsubl
xor
in
aam
ret
jns
dec
hlt
xor
hlt
xchg
ret
lock
xchg
jl
fs
fsubrl
incb
or
adc
sbb
mov
jae
xor
aam
xor
repz
sub
jo
push
aam
mov
xchg
jp
sar
push
push
cmpsl
js
xlat
jae
insb
sbb
jae
imul
xor
jbe
imul
pop
aam
icebp
insb
or
je
insb
ret
add
faddl
mov
lret
mov
js
popa
scas
rcrl
mov
vfrczsd
cltd
pushl
les
jp
bound
jp
das
xchg
repnz
insl
mov
mov
adc
nop
aam
mov
pmuludq
mov
scas
and
push
out
lds
push
inc
mov
shlb
stos
xlat
out
pop
repz
sub
fs
add
jbe
aam
adc
lods
lock
cmp
cmp
mov
cmpsl
sbb
fmuls
shrl
enter
mov
or
push
jae
insb
pop
push
test
lock
sti
imul
push
in
mov
es
lods
dec
je
insb
sbb
je
insl
fcomps
xchg
ja
add
insb
jo
ljmp
sub
add
pop
insl
sub
jbe
gs
jne
dec
lock
mov
test
repz
pop
dec
jbe
outsb
out
ss
addl
mov
insb
and
into
jb
jb
or
jo
sbb
loopne
jns
ds
sub
movl
jl
push
and
sahf
into
insb
repnz
cs
jbe
insb
insb
sbb
cmpsb
je
push
lret
inc
scas
notw
xchg
add
jbe
insb
imul
pusha
sub
nop
or
cmp
loopne
js
pusha
fwait
aad
into
lret
jbe
lea
jbe
popa
dec
mov
call
aam
shlb
cld
shlb
lahf
mov
lea
push
loope
xor
add
xchg
cld
mov
sbb
lea
data16
or
mov
jg
arpl
jp
dec
jo
insb
jae
lea
aam
sub
je
push
decb
enter
movsb
xor
nop
jl
xchg
std
aaa
lret
insb
es
sbb
out
lret
cld
mov
stos
imul
push
push
adc
aas
loopne
test
mov
in
movsb
mov
scas
lret
gs
cld
dec
int
iret
mov
or
lcall
aam
xchg
pop
int3
insb
jmp
xchg
int3
insb
dec
inc
repnz
stc
ja
cmp
jg
mov
sub
jbe
jae
jl
push
repz
jno
aam
sbb
adc
jae
lock
dec
pop
inc
daa
push
les
mov
jns
popa
sbb
shr
cmp
scas
repz
dec
jns
popa
int3
pop
xlat
cmp
sbb
mov
jp
bound
inc
cmp
bound
jl
aaa
in
fsubs
ljmp
add
aam
test
or
xor
jbe
insb
outsl
filds
mov
jbe
inc
and
push
sub
aaa
push
div
cmp
mov
push
jnp
sahf
les
add
ljmp
push
shl
adc
cltd
call
sub
inc
je
sub
push
out
push
add
repz
adc
iret
outsb
sarb
sub
cltd
mov
push
test
push
shlb
dec
fmull
pop
loope
jnp
test
push
int3
jae
cmp
cmp
clc
jns
push
into
mov
xor
aam
das
cmpl
fs
inc
lods
jns
push
out
or
das
mov
arpl
or
xor
cmc
xor
insb
packuswb
cmc
dec
ret
loop
imul
leave
jp
aam
je
data16
call
icebp
push
scas
sahf
lea
sbb
cmp
mov
push
dec
stos
clc
shll
insl
test
iret
insb
adc
icebp
dec
cs
lahf
mov
or
insb
jg
aam
mov
test
and
scas
sub
insb
mov
lds
bound
repz
cmp
and
ds
push
ljmp
out
std
inc
vdivss
inc
xchg
out
jecxz
imul
lock
mov
xchg
xor
pop
test
jo
push
cmp
pop
cmp
pop
xchg
movsb
bswap
pop
cmp
dec
mov
jbe
xchg
insb
pushf
cltd
insl
std
loope
xchg
mov
mov
std
imul
cmp
xor
mov
scas
les
cmp
insb
jle
shll
jo
or
ds
loope
pushf
jbe
nop
decl
inc
in
dec
xchg
sub
movsb
push
add
xor
std
push
and
scas
xor
dec
inc
xchg
push
out
nop
add
or
sahf
mov
sub
dec
ret
imul
xchg
xor
jmp
dec
pop
pop
out
sbb
icebp
imul
jmp
mov
inc
insb
mov
sub
imul
cmp
mov
jae
insb
or
movsb
and
ja
outsl
fs
popa
mov
mov
mov
out
cmpsb
cmp
xor
rol
add
insb
cmp
ret
imul
jno
sub
mov
sub
ljmp
or
hlt
push
mulb
cmp
jecxz
cmp
jmp
sub
mov
outsl
xor
dec
mov
cmp
cmp
insb
movsl
pop
mov
ret
cmc
fsubp
pusha
mov
mov
test
nop
test
sbb
popf
daa
pop
jmp
mov
adc
inc
icebp
icebp
mov
mov
ss
dec
cmp
roll
xlat
xchg
pop
push
sbb
cmp
push
outsl
xchg
jmp
or
jg
cmp
jae
fsts
sub
insb
mov
popl
aam
add
mov
cmpb
divl
jnp
arpl
mov
xchg
add
aam
ss
dec
dec
aam
pop
jbe
in
popa
sub
rcrb
xchg
dec
mov
insb
fisttpll
cld
jbe
dec
jo
push
test
mov
push
cli
pop
int3
and
add
cli
cltd
int3
xchg
aaa
data16
cmpsl
int3
insb
negb
int3
push
dec
sbb
pop
aam
ljmp
jbe
outsb
and
outsb
pop
mov
sahf
mov
adc
call
adc
add
jbe
lahf
mov
or
insb
inc
cltd
data16
clc
cs
cmp
or
das
out
jne
imul
rcll
push
xorb
mov
shrb
pop
xchg
aam
xchg
pop
loop
inc
push
imul
and
sub
ds
cmpsl
cmpsb
inc
xor
cmc
push
jmp
mov
jg
jnp
cmp
les
mov
jge
gs
mov
pop
gs
dec
inc
aam
lret
outsl
das
jg
jae
adc
ljmp
push
fistpl
inc
jae
add
fwait
in
mov
jecxz
les
fnsave
pop
ljmp
and
mov
pop
fiaddl
cli
call
push
fisubs
and
out
cmp
mov
mov
mov
sbbl
xchg
mov
add
add
enter
add
incb
xchg
mov
icebp
add
xor
adc
out
xlat
cwtl
and
pop
push
mov
sub
popf
lret
dec
dec
cli
sti
insl
int
insb
sub
inc
comiss
js
pusha
call
cmp
and
push
pop
call
in
test
notl
xchg
xor
and
insb
or
and
addb
push
aaa
dec
insb
jno
cmp
push
mov
cmpsl
aam
dec
insb
cmc
sarb
aam
cmp
push
loope
loopne
pushf
add
cmc
sub
add
mov
jge
enter
jbe
push
inc
push
dec
pop
aam
test
or
jle
sti
imul
pop
aas
lea
pusha
mov
daa
xchg
insb
push
or
cmpsl
jns
divl
mov
inc
or
outsb
mov
jns
popa
insl
adc
xchg
or
test
insb
jae
xor
movsb
int
xor
jbe
jl
hlt
out
es
adc
mov
cmp
aam
rcll
sbb
cmp
stc
inc
ds
fstpt
or
mov
pop
pop
stc
pop
sti
sahf
sbb
aad
jb
gs
xlat
dec
int3
mov
adc
test
adc
repz
scas
push
lret
and
add
xchg
enter
fadds
inc
or
pusha
ret
xchg
jbe
hlt
stos
leave
call
pop
push
mov
inc
inc
mov
jns
out
adcb
or
push
inc
xorb
jbe
scas
sahf
sbb
inc
sti
mov
sub
sbb
jbe
jg
loope
dec
aam
pop
loop
push
sbb
outsl
shlb
test
lods
and
out
in
ret
pushl
aam
mov
xor
and
mov
add
and
nop
jno
cs
mov
daa
out
test
cmp
movsl
push
test
in
aam
xchg
push
pop
sbbb
lds
or
inc
jecxz
inc
iret
adc
scas
das
mov
testl
sub
int3
mov
and
fcmovnb
sub
cmp
push
lcall
fildll
aas
stc
aam
enter
cmpsb
ror
xchg
mov
ds
dec
fcoms
scas
pop
mov
mov
gs
stos
or
push
stos
mov
push
mov
orl
out
jbe
repz
rorl
xchg
insb
inc
cmp
xchg
insb
lret
ss
ret
repz
push
jl,pt
xchg
insb
and
cmp
out
mov
pop
jge
adc
arpl
scas
mov
bound
jg
xor
mov
dec
ds
aam
bound
adc
mov
inc
mov
push
xor
hlt
xchg
or
aad
mov
mov
inc
mov
jno
fs
mov
dec
xor
mov
jo
push
shlb
imul
mov
jnp
leave
shll
insl
pop
pop
cmp
xchg
xor
push
in
xchg
shll
data16
sub
gs
xor
lret
mov
sahf
notl
insl
mov
cltd
test
or
mov
cmp
outsl
xor
mov
sbb
jl
fs
daa
ljmp
xchg
add
fs
jne
insb
sbb
xchg
in
aam
mov
repnz
cmc
dec
shlb
push
aad
mov
lcall
imul
mov
mov
jae
insl
sti
stos
inc
xor
jne
push
int3
aaa
aad
ja
insb
jae
push
je
outsl
xchg
xor
outsb
xchg
pop
xchg
fidivs
gs
jmp
gs
push
shlb
insb
fcomp
add
sarb
outsl
loopne
jno
aad
mov
mov
je
insb
pop
lods
push
lods
fnstsw
push
xlat
insl
mov
dec
jl
dec
shll
data16
imul
mov
jae
outsb
push
adc
aam
mov
mov
jae
insl
sbb
je
cmp
lods
xlat
jg
gs
sbb
fdivl
outsl
ja
inc
scas
fdivl
imul
jo
outsb
shl
sub
shlb
cmp
mov
jne
loop
aad
mov
mov
js
fdivl
outsl
and
xlat
fdivl
insl
and
inc
shlb
insl
pop
jno
je
jle
push
sarb
mov
bound
jne
push
ja
stc
fnsave
shll
mov
nop
aad
mov
push
ds
fdivl
data16
mov
scas
cwtl
sub
jne
imul
mov
add
mov
shlb
int
in
fdivl
fs
or
jg
imul
sub
shlb
push
int
push
shlb
fimuls
shlb
gs
sub
aad
mov
call
je
insb
movsb
insl
sbb
sbb
jle
push
fdivrl
fs
jb
outsb
pop
jo
insb
fnsave
push
aad
mov
and
cld
test
js
or
call
je
outsb
cmp
cmpl
adc
imul
insl
sbb
jae
outsb
mov
mov
fdivl
push
enter
gs
lahf
or
jno
imul
int3
pop
jne
outsl
pop
das
and
shlb
outsl
push
push
cmpsl
fdivrl
data16
jle
push
adc
jno
push
shlb
outsb
decl
inc
xlat
jg
imul
jle
gs
cmpsl
adc
jo
push
xchg
je
aam
mov
arpl
mov
xchg
mov
and
je
insb
ds
lock
aam
mov
xchg
ja
insb
div
repnz
jbe
insb
leave
imul
cwtl
mov
ljmp
in
rcr
jno
insl
xchg
push
aaa
jb
outsl
loopne
push
fnsave
adc
sarb
push
shlb
insb
add
stos
dec
fidivrs
xlat
leave
add
outsl
addr16
cwtl
sub
jno
push
lret
shll
insb
out
test
ja
outsl
mov
jb
insl
leave
sbb
imul
mov
icebp
clc
cmc
sarl
fs
jo
insl
mov
sub
jae
push
fidivs
ss
cwtl
xlat
ja
inc
lret
xor
pop
call
mov
fldl
mov
es
cmp
xor
cmp
jno
fs
call
mov
xlat
sbb
inc
cmp
js
ja
push
aad
mov
push
jle
insb
jg
lret
or
jae
gs
insb
mov
xchg
ja
outsl
dec
jl
xlat
shll
imul
mov
mov
jg
gs
cwtl
xchg
jae
outsb
aad
rcrb
mov
mov
daa
and
push
fnsave
adc
out
shlb
pop
inc
out
xlat
ja
insb
mov
jo
imul
push
sub
outsl
sub
ja
outsb
out
xchg
sti
shll
gs
push
fsubrs
jae
outsl
popa
cs
jo
insb
adc
ja
insb
push
in
in
pop
fdivl
repz
inc
aad
mov
cld
shll
gs
cmpsb
rcr
jae
push
jg
imul
mov
add
enter
mov
mov
jl
outsl
pop
pop
and
and
mov
rol
rcl
jg
imul
icebp
shlb
push
gs
shlb
insl
mov
jbe
fs
adc
mov
stc
out
or
jne
outsl
rcll
mov
insl
sub
mov
jne
outsb
scas
fsubs
jne
push
aas
fs
cwtl
out
movsb
fst
jne
insl
mov
gs
aad
jl
fs
das
popa
push
jl
fs
push
fcmovnb
sarl
insl
bound
mov
test
fwait
mov
jae
push
scas
pop
mov
jae
push
xlat
ja
insl
pusha
subl
cmpsb
test
imul
sbb
sbb
insb
xchg
jb
outsb
fcoml
mov
jp
jb
fidivs
outsl
cmp
shlb
imul
daa
sub
jbe
insb
adc
mov
or
mov
es
ja
jl
gs
pop
adc
data16
shll
jbe
imul
jp
xlat
jbe
fs
lret
jae
insb
arpl
dec
jne
imul
mov
cmpsl
add
inc
jne
imul
inc
mov
pop
jmp
aaa
fdivrl
insb
dec
and
gs
lret
enter
mov
insl
cld
xlat
pop
xlat
jno
insb
fwait
movsb
cltd
data16
imul
mov
mov
cmp
into
xchg
xlat
jne
push
popf
and
gs
cmp
mov
data16
xlat
jne
mov
je
push
mov
jne
insb
cmp
arpl
jle
imul
mov
adc
sbb
jl
imul
jmp
outsl
push
jbe
imul
lods
jg
mov
ja
outsb
fucompp
adc
jno
xchg
xor
mov
repz
xchg
sarb
mov
jecxz
xlat
jno
insb
xchg
and
mov
jno
outsl
call
jl
push
jno
imul
mov
sbbl
mov
inc
and
aam
mov
xchg
push
xchg
sub
jae
gs
pusha
jg
jb
insl
into
es
shlb
gs
lds
jne
push
pop
inc
cs
mov
shlb
jo
insb
or
jbe
outsb
repz
jl
lods
insb
inc
shll
imul
mov
mov
lahf
in
arpl
movsl
dec
mov
imul
paddusw
insl
out
add
insl
aad
mov
stos
js
inc
aad
mov
mov
jg
imul
xor
jbe
outsb
cmp
mov
mov
je
push
jns
add
jo
outsl
push
and
shll
fs
sbb
sub
or
mov
adc
mov
pop
pop
cmc
shlb
imul
fmuls
sarl
push
shlb
fs
xchg
iret
fidivs
jmp
fs
sbb
fnstsw
sbb
xchg
shlb
outsl
sbb
ja
outsl
dec
mov
push
sarb
popa
aam
mov
xchg
mov
into
jmp
mov
or
jae
imul
insb
sbb
into
cmc
fnsave
outsb
gs
in
jl
jg
insb
into
xor
mov
aad
mov
dec
fdivl
outsb
mov
jbe
gs
jg
insl
push
push
dec
sbb
jle
push
ja
imul
mov
out
lret
fidivrs
imul
data16
mov
fwait
cld
pop
sbb
jb
lfs
in
adc
popf
stos
or
jle
push
in
leave
shll
imul
mov
stos
mov
mov
inc
into
ds
jbe
push
sarl
int
pusha
push
jl
outsl
jne
mov
jno
imul
mov
adc
mov
ficompl
mov
mov
xor
mov
jb
insl
andb
mov
int3
mov
jg
dec
add
out
je
insb
aam
jnp
sarb
leave
push
push
push
fnsave
insb
jle
fs
je
outsl
rcll
fs
jbe
neg
jl
push
xlat
jg
outsl
loopw
neg
jg
insb
stos
dec
mov
push
xlat
jo
insb
popf
pop
xchg
add
je
push
shll
insl
mov
push
xchg
fnsave
imul
xchg
jbe
imul
mov
mov
and
mov
pop
movsb
ss
ja
imul
mov
inc
adc
aad
mov
scas
shll
push
xlat
jle
insl
hlt
fcmovne
int3
jno
push
pop
pop
fnsave
imul
mov
cmp
mov
loop
sub
fidivs
push
cmp
fnstsw
push
jae
push
sub
gs
sbb
fdivl
outsb
cmp
mov
aas
lcall
adc
ja
outsl
and
rclb
jl
insl
jb
add
push
sarl
outsl
out
push
in
fidivrs
imul
je
fnsave
push
sarl
addl
insb
push
or
ja
je
outsb
cwtl
bound
aad
mov
mov
jl
lahf
aam
jl
fs
pop
pop
shlb
mov
xchg
ja
push
mov
gs
jno
insl
std
dec
out
xor
je
imul
les
aad
mov
sti
jae
fldenv
mov
add
insl
mov
inc
jns
dec
sarb
imul
mov
mov
jl
fs
loope
rcl
jg
imul
shll
imul
mov
mov
in
sbb
outsb
jp
inc
movsb
je
imul
cmp
mov
jne
insl
push
xchg
sub
outsb
jb
ljmp
int3
jle
shlb
insb
addr16
xchg
rcl
jae
imul
addl
mov
push
jne
jg
jl
push
aad
mov
mov
push
gs
pop
xlat
dec
aam
mov
ja
addr16
jae
gs
xchg
push
jnp
in
jo
insl
cmpb
insl
je
insb
lods
mov
cmp
jne
imul
jae
push
andl
nop
fistl
push
test
mov
push
enter
jle
push
xlat
jg
insl
mov
je
imul
jo
push
sub
jg
push
daa
gs
ja
outsb
mov
jb
push
mov
fidivs
imul
adc
mov
aas
fdivrl
imul
mov
scas
sbb
insl
and
xor
mov
in
adc
imul
je
push
idivl
gs
jle
outsl
mov
cmp
aad
mov
pop
enter
insl
jg
jg
jb
push
insl
int
fnstsw
fs
and
cmp
jg
dec
cmp
test
arpl
movsb
lret
fnsave
mov
inc
inc
aad
mov
adc
jo
fs
inc
cmpsb
push
aam
mov
fadds
sti
mov
jne
imul
lret
ja
imul
fs
cmp
sub
jbe
insl
xchg
cld
pop
shll
mov
cmp
xlat
jbe
push
mov
mov
ret
rcl
jbe
pop
push
mov
fwait
int3
aam
shll
outsb
mov
outsb
rcrl
mov
mov
mov
xchg
jb
insl
xchg
jg
adc
jo
imul
jb
imul
or
shlb
imul
fmull
in
sbb
aad
mov
mov
jg
or
mov
inc
fadd
mov
jle
outsl
push
mov
insb
shll
outsb
mov
js
xlat
jbe
push
shll
push
sbb
xchg
aad
mov
lods
shlb
imul
jae
insb
lret
test
movsl
aam
mov
sub
ret
mov
xor
aas
in
aad
mov
adc
jp
aad
mov
leave
push
fidivrl
sarb
insl
dec
adc
sub
jle
outsb
insl
fwait
jnp
shll
outsl
add
adc
push
add
inc
fnsave
insb
insl
addr16
jle
push
aaa
inc
inc
aam
mov
dec
add
jle
push
or
ja
insl
fadds
shlb
imul
xchg
shll
insl
fstps
jecxz
fdivrl
insl
sahf
aaa
push
scas
shll
and
mov
pop
mov
mov
push
inc
in
xchg
fidivs
imul
cld
sbb
ja
imul
scas
xlat
jae
imul
je
imul
jl
gs
pop
push
popa
shlb
outsb
insb
and
cmp
jb
insb
push
dec
and
gs
jle
sarw
mov
std
aad
mov
push
aad
mov
sub
jmp
jbe
insl
pushf
mov
mov
add
je
push
aad
mov
fwait
aam
mov
rcl
mov
ret
fnstsw
outsl
jecxz
mov
insb
sub
jns
sarb
imul
mov
das
sarl
data16
add
aad
mov
push
xlat
jne
outsl
jl
ja
fidivs
into
shll
gs
push
cld
fnsave
data16
insl
mov
test
mov
aad
jb
push
daa
bound
ja
push
aad
mov
gs
aad
mov
sahf
rcll
mov
mov
add
mov
imul
loopne
jbe
insb
movsl
adcl
sarb
sbb
sarl
fs
fisubrs
shlb
imul
mov
mov
jg
data16
mov
push
dec
sbb
sbb
cmp
imul
sub
xor
and
mov
sbb
adc
jno
push
shll
imul
jno
fidivs
push
fidivrs
outsb
ljmp
fs
dec
arpl
jbe
orl
mov
jb
je
imul
mov
jbe
insl
xchg
xlat
jbe
imul
mov
push
ja
mov
xchg
arpl
jle
gs
lea
popf
fnsave
insl
push
mov
xchg
xlat
jae
insl
hlt
and
xchg
fdivl
fs
fwait
xchg
mov
jae
insl
inc
stos
sti
xchg
sarb
pop
rcll
mov
mov
test
jg
fdivl
gs
rclb
xlat
je
push
sub
sarl
sbb
push
daa
shlb
fs
out
mov
jle
imul
aas
fnsave
outsb
arpl
push
aam
mov
mov
xorl
in
sbb
aam
mov
xchg
cmp
imul
lds
mov
or
jno
insb
jecxz
adc
hlt
cmp
mov
mov
je
insb
lret
in
adc
fidivs
add
cmp
sarb
push
addb
fidivs
push
mov
aad
add
ja
shll
imul
sub
mov
jl
mov
outsl
pop
fiadds
fnsave
outsb
outsl
inc
pusha
sbb
jg
imul
sub
je
imul
jno
insb
ror
dec
dec
aam
mov
popa
adc
shll
imul
jle
gs
add
xlat
jne
push
shlb
insl
inc
stos
ja
sarb
push
add
xlat
jg
popfw
jp
inc
shlb
fs
lret
shll
push
mov
mov
fstl
testl
mov
mov
push
mov
mov
dec
adc
fdivl
insb
lcall
outsl
push
mov
mov
sbb
jg
insl
dec
mov
repnz
mov
mov
roll
mov
inc
xchg
inc
shlb
or
lods
push
sarb
insb
sub
gs
leave
add
jo
insl
test
dec
jle
jg
imul
jo
outsb
pop
xchg
fdivl
gs
mov
mov
rcl
cmpsl
fidivs
outsb
xchg
or
std
aad
mov
outsl
jno
gs
jb
outsl
inc
xchg
enter
mov
sbb
or
fidivs
push
push
jns
jae
imul
jle
rorw
push
aam
mov
mov
mov
sarl
imul
lret
jl
insl
jno
dec
adc
jno
fs
jecxz
fidivs
outsb
movsl
sbb
retw
mov
jne
imul
mov
rcll
mov
movsb
cmc
push
pushf
fnsave
insb
or
jne
push
aad
mov
cmp
ja
scas
out
lret
shlb
imul
cmp
ja
push
shll
insb
lret
mov
jo
insb
lret
call
jno
outsl
lret
cld
jae
shll
addr16
jae
jno
gs
jb
push
fnstsw
push
xchg
jle
shll
stos
mov
std
sarb
xor
mov
outsb
sub
daa
hlt
ja
push
mov
movsl
fdivl
inc
std
aas
into
fidivs
imul
push
sub
jle
outsl
jl
popa
lret
aad
mov
sarl
fs
push
mov
dec
fnstsw
pop
out
xchg
jbe
outsb
xchg
dec
mov
fidivrs
outsb
icebp
gs
ja
push
shlb
insb
jp
fcoml
into
fnstenv
sarl
push
xlat
jg
mov
and
jb
outsl
and
mov
aam
jb
push
cmpsl
push
mov
jg
data16
mov
inc
jne
sbb
jbe
insl
push
pop
xchg
mov
jne
outsl
mov
gs
rol
jno
imul
hlt
sarb
popf
xor
push
jae
insl
add
gs
jbe,pn
je
gs
ds
push
in
adc
gs
xchg
sub
jbe
insl
adc
mov
xor
and
outsb
xor
cli
nop
fnsave
outsl
sub
jo
imul
mov
mov
je
imul
ja
imul
mov
cmp
jo
push
jne
push
fnstsw
outsb
pop
popa
loop
jl
insb
nop
fbld
sarl
fs
data16
jle
imul
jl
outsl
jno
aad
mov
pop
shlb
outsb
test
push
xchg
fidivrs
data16
in
mov
jo
insl
scas
dec
shlb
jg
sbb
shll
push
insb
jns
shlb
xchg
inc
nop
xchg
xlat
ja
push
sarb
imul
mov
inc
jbe
inc
fnstsw
imul
add
jl
outsl
mov
jg
imul
outsl
dec
adc
mov
jg
imul
loope
jl
insb
push
xor
push
shlb
fs
inc
daa
sarl
insl
int3
out
rcl
mov
mov
je
insb
imul
shlw
mov
mov
jb
outsl
cmpsb
add
aad
jbe
push
sbb
test
jne
jmpw
jge
jg
insb
xchg
pop
xchg
jg
push
jp
nop
shll
push
shlb
push
stos
lcall
fnsave
imul
jne
gs
mov
mov
int
push
jecxz
jb
push
adc
mov
cltd
sarl
sbb
jg
insb
sbb
jle
ja
push
aam
mov
clc
fidivs
loope
scas
inc
sarl
xor
call
jne
push
shlb
insb
pop
xor
mov
xor
push
insl
lods
iret
sbb
sti
dec
mov
iret
std
dec
mov
xlat
cld
and
outsl
and
push
push
ja
insl
scas
mov
sbb
jae
fs
lcall
scas
outsl
cmc
mov
jg
fs
add
fnstsw
push
ljmp
mov
pop
shlb
gs
outsl
jg
jle
insl
mov
mov
fdivl
push
fdivrl
aad
mov
outsl
aaa
movsl
adc
jne
gs
roll
jl
fs
sub
jo
data16
jae
sub
data16
pushf
stos
leave
sarb
es
scas
sahf
xlat
jg
push
sarl
outsl
fdiv
sti
std
shll
shlb
shlb
outsl
cmp
dec
push
sarb
insl
jnp
push
std
shlb
push
xlat
jg
cmp
ja
shlb
outsb
lds
rcl
jae
outsl
jo
jle
shll
outsb
lret
adc
jle
push
sarl
sahf
je
sub
and
pushf
mov
and
in
mov
ja
insl
jbe
and
shlb
push
add
imul
les
in
xor
shll
outsb
jle
push
xor
je
imul
mov
push
popa
jb
shlb
imul
imul
js
jl
push
aad
mov
push
jne
push
sarl
imul
mov
xchg
aam
mov
std
lea
sarl
les
mov
pop
xchg
or
adc
mov
mov
sbb
mov
sbb
jae
sarl
outsl
mov
jno
imul
mov
mov
ja
outsl
subl
mov
leave
fnsave
outsw
pop
dec
call
jg
imul
outsl
xor
jbe
outsb
lahf
clc
sbb
jo
data16
mov
mov
ja
imul
mov
adc
mov
jbe
jo
and
mov
mov
jl
sbb
dec
fidivs
pop
jb
or
jb
insb
mov
insb
je
imul
push
sarb
cmpsl
push
pop
push
aam
mov
adc
sbb
jbe
push
aad
mov
in
jne
imul
outsl
cmp
gs
jo
fcom
jg
outsb
mov
jbe
fs
and
aad
mov
mov
adc
jbe
push
aam
mov
inc
in
pop
push
shlb
push
xlat
jno
insl
pop
sub
ds
mov
mov
je
sarb
insb
push
jbe
dec
aam
mov
addr16
fnstsw
mov
sarb
mov
push
aam
mov
cmpl
mov
fcomip
fidivs
xor
sub
je
pushw
and
sarb
push
xchg
inc
mov
fstl
push
in
push
push
fidivrs
subb
fs
jg
in
jae
imul
mov
cmpsl
ljmp
stc
dec
pop
inc
fnsave
insl
outsb
jae
insb
shll
gs
bound
sarb
outsb
xchg
adc
xlat
je
outsb
pusha
lret
ljmp
inc
xor
xlat
jbe
push
or
jae
imul
pop
popa
jae
xchg
cmp
imul
mov
pop
stos
xcrypt-cbc
cmpsl
shlb
insb
sub
mov
shrb
data16
push
adc
insl
cmpsl
sbb
fidivs
data16
scas
stos
fnsave
imul
jne
push
aam
mov
data16
jb
aam
mov
daa
addr16
shll
push
jle
outsb
ds
pop
aad
mov
inc
cmpsl
dec
sub
sub
jb
insl
out
adc
fs
inc
test
xor
rorb
repnz
fnsave
insb
jle
push
pop
shlb
imul
pop
jae
shll
fs
lock
jbe
push
xlat
jo
imul
mov
jl
insl
pop
cmp
mov
and
jl
push
mov
mov
push
shll
imul
mov
mov
hlt
fs
fidivs
insl
popa
xor
xchg
jmp
mov
scas
dec
test
shlb
push
les
fidivs
data16
enter
jae
fs
repnz
jl
jb
fs
adc
je
sbb
mov
xchg
push
out
jne
push
stos
mov
xlat
jb
outsl
and
jbe
sbb
xor
jno
outsl
ds
addr16
je
insb
inc
in
inc
fdivl
imul
push
jecxz
xlat
jae
imul
jo
gs
fs
mov
ja
jne
data16
mov
imul
mov
push
push
mov
shll
outsb
je
dec
pushf
xlat
jo
outsl
insl
lahf
pushf
adc
mov
loop
hlt
cmpsb
aam
mov
lcall
push
lods
sub
imul
jl
imul
mov
xchg
sub
fs
stos
jbe
sarb
push
lods
ljmp
sbb
imul
mov
and
xchg
jns
ja
outsb
push
insb
or
aad
mov
insl
lcall
mov
lds
jo
outsl
and
popf
enter
data16
hlt
cwtl
sarb
fs
ljmp
xchg
jb
fnsave
push
fs
mov
fnsave
push
movsb
inc
jne
fs
and
jb
insl
inc
repnz
out
fdivl
data16
sarb
sahf
sub
sarl
gs
ret
pop
fidivs
imul
insl
fdivl
imul
mov
or
pop
je
ja
push
dec
pusha
pop
fidivs
imul
push
fidivs
lods
sbb
data16
lahf
jae
pop
adc
mov
idivb
shll
insb
mov
mov
mov
jae
imul
je
insl
fisubl
mov
mov
jle
fs
mov
mov
outsb
out
fcompl
scas
sub
inc
fnsave
mov
pextrw
mov
pop
call
mov
xorb
push
jl
outsl
dec
les
data16
aas
repz
jb
outsb
rorb
jg
insl
popa
mulb
lretw
ds
mov
or
dec
out
fdivl
push
xchg
push
xchg
hlt
jnp
jbe
outsb
negb
fstp
jg
outsb
and
cmpsb
daa
fdivl
adc
mov
stc
cld
cmpsb
cli
shll
mov
mov
insb
xor
hlt
xlat
jae
push
loopne
into
fidivrs
outsb
inc
dec
push
pop
shlb
outsb
pop
xor
imul
aam
jg
insl
jnp
jl
fnsave
rorb
push
aad
mov
cmp
push
fidivrs
cmc
out
xchg
mov
enter
aam
mov
or
jno
imul
jne
gs
mov
lret
lret
mov
jl
cmp
imul
gs
hlt
mov
shll
insb
xchg
add
jl
push
test
jnp
jo
outsl
xor
jbe
insl
pop
lock
jbe
outsl
mov
aad
mov
mov
mov
xchg
xlat
jo
push
mov
imul
or
jbe
outsb
decl
mov
or
lods
mov
ja
imul
lods
mov
jp
add
outsb
add
mov
mov
je
outsb
mov
push
hlt
fnstsw
push
pop
pop
pop
aad
mov
call
test
jl
outsl
insl
int3
dec
lock
outsl
mov
jne
outsb
repz
fdivrl
imul
ljmp
and
mov
jle
insb
jb
and
fs
popf
scas
jne
insb
and
mov
cs
mov
inc
sub
shlb
push
clc
dec
rcl
mov
push
imul
insl
shll
inc
stos
nop
outsl
aam
mov
mov
push
imul
jl
gs
insb
shlb
dec
inc
sbb
jo
gs
dec
jmp
jo
push
jg
outsb
xor
mov
lock
sbb
jne
imul
jbe
push
xlat
jle
outsb
testl
xor
ja
cmp
sub
jae
insb
cmp
push
inc
shll
gs
dec
pop
push
sarb
fs
sub
insb
dec
and
aad
mov
pop
push
notb
jbe
push
mov
data16
mov
mov
jae
cltd
aad
jg
gs
xchg
mov
int3
inc
fbstp
push
cmp
mov
add
outsb
shlb
imul
xchg
pop
lock
mov
add
xchg
push
aam
mov
mov
rcl
mov
push
je
loop
jbe
insb
jg
in
xor
jbe
insb
xchg
push
push
imul
mov
add
paddq
insb
repz
pop
aam
mov
mov
jbe
insb
popf
sbb
loop
jbe
insb
ljmp
insb
adc
aam
mov
cli
push
or
aam
mov
icebp
mov
pusha
aam
mov
pop
cmp
insb
shrl
and
insb
mov
jmp
sbbb
rcrb
insb
rolb
test
pop
mov
xor
adc
pop
mov
cmpsb
test
pop
pop
pop
mov
inc
or
fs
mov
push
jae
add
insb
stos
in
push
sub
insb
jl
test
negb
insb
aam
aam
sahf
pop
mov
and
js
cmpsb
pop
mov
pop
mov
dec
pop
mov
xchg
jo
sub
mov
jb
or
in
iret
aam
enter
mov
pop
mov
test
mov
insb
dec
xchg
out
and
mov
sbb
mov
inc
icebp
sub
xor
insb
push
sbb
jno
inc
mov
adc
mov
push
adc
jnp
inc
mov
dec
dec
stc
ret
mov
fistpl
repnz
insb
jo
cwtl
inc
cmp
insb
stc
enter
inc
mov
xchg
mov
jbe
inc
mov
fs
pop
mov
mov
mov
inc
mov
or
push
sbb
mov
lods
mov
dec
ss
mov
mov
inc
mov
mov
mov
lock
mov
add
inc
mov
enter
mov
jle
pop
inc
inc
mov
outsb
inc
mov
push
mov
xor
mov
or
mov
sar
scas
jge
inc
mov
pop
in
add
dec
jg
mov
out
mov
dec
inc
mov
dec
add
inc
push
nop
xor
insb
leave
loop
mov
inc
mov
and
push
stos
cli
inc
mov
or
inc
mov
in
add
insb
aam
leave
jecxz
inc
mov
and
inc
mov
out
inc
sti
addr16
mov
mov
test
lock
sbb
xchg
inc
mov
adc
mov
mov
insb
out
adc
insb
notl
mov
fwait
mov
lods
push
inc
mov
repz
sarl
mov
int
cmp
inc
mov
and
fst
xchg
inc
mov
fildll
lret
inc
mov
mov
sub
mov
push
scas
mov
inc
mov
mov
inc
mov
sub
cwtl
cmp
mov
sti
push
mov
int3
inc
mov
divl
push
out
inc
mov
adc
pop
sub
cli
outsl
push
inc
mov
and
dec
cmp
mov
mov
mov
shrb
jbe
ds
mov
ds
test
dec
mov
xor
sbb
in
mov
pop
push
in
push
xchg
insb
mov
repnz
movsb
dec
mov
cmp
sbb
dec
mov
inc
fimuls
dec
mov
imul
mov
push
enter
insb
hlt
aas
jno
ret
insb
and
dec
in
dec
mov
mov
dec
mov
dec
rol
cmp
dec
mov
cmc
leave
pop
aas
jp
mov
nop
sbb
popf
sbb
sub
mov
dec
push
stc
pop
lret
insb
lock
aad
dec
mov
and
and
mov
mov
cmpsl
dec
stc
dec
inc
dec
mov
imul
insb
movsb
scas
cmp
dec
mov
mov
dec
mov
dec
jb,pt
loopne
mov
cwtl
addr16
mov
insb
mov
jo
pop
dec
mov
test
dec
insb
dec
mov
shlb
or
dec
mov
data16
xchg
and
insb
imul
sub
jl
les
insb
push
mov
popa
jl
mov
mov
dec
mov
outsb
push
jmp
dec
mov
push
push
inc
hlt
dec
mov
xor
dec
mov
sub
mov
push
xor
inc
jl
mov
out
mov
lock
insb
or
xchg
sbb
dec
mov
stc
xchg
test
dec
mov
aas
dec
or
insb
dec
pop
int3
pop
mov
insb
lock
addr16
jbe
insb
es
popl
insb
outsl
mov
das
js
mov
jp
inc
int3
push
dec
mov
jge
dec
loop
dec
mov
xchg
add
mov
subl
insb
push
or
mov
insb
jl
add
jns
les
and
dec
mov
jg
sbbl
cmp
lret
insb
lcall
insb
fistpl
mov
mov
fs
ss
sbbl
push
pop
adc
int3
pop
jmp
insb
daa
out
xchg
into
aaa
mov
or
fdivrs
out
clc
insb
mov
les
insb
mov
imulb
adc
leave
add
mov
sbb
cmp
xor
insb
pop
sbb
mov
fs
fiadds
jno
mov
xorl
insb
and
mov
sub
xor
insb
mov
pop
shlb
inc
or
xor
sbb
xorb
push
stos
xor
pop
mov
and
adc
cmp
sahf
insb
aam
mov
or
repnz
cs
inc
adc
xor
sub
pop
out
scas
xor
add
insb
cld
cmp
test
gs
xor
rcrb
sbb
or
push
test
js
mov
mov
xor
pop
aam
mov
fsubrl
pushf
clc
xor
add
cmp
pop
push
xor
xorl
or
xor
pop
cmp
mov
add
iret
jp
xor
or
hlt
andb
cmp
insb
out
lods
lds
push
xor
divb
xor
pop
ds
mov
imul
hlt
jne
jae
ds
push
dec
ds
cli
mov
mov
and
roll
es
jnp
xor
insb
add
movsb
aad
aas
mov
jne
pop
mov
mov
ljmp
insb
xor
mov
popa
out
subb
insb
stc
lahf
scas
insl
aam
mov
cmp
loope
lcall
push
cwtl
add
insb
sub
inc
xchg
or
dec
add
test
aaa
add
mov
in
sti
jne
mov
jecxz
sub
fisubl
mov
aam
mov
stos
xchg
aaa
loopne
inc
mov
inc
pop
or
add
and
mov
push
mov
popf
inc
xchg
daa
aam
mov
clc
lds
inc
lods
dec
mov
xor
mov
lea
loope
jbe
insb
lea
mov
pop
lods
jb
aam
mov
xor
ret
push
nop
cmp
insb
fmuls
adc
jbe
insb
cmpsb
out
aam
mov
lea
add
mov
lods
mov
mov
inc
mov
dec
rcrb
insb
pop
sbb
xchg
pop
mov
ss
fmuls
inc
mov
pop
pop
mov
inc
push
push
fs
mov
mov
pop
mov
jae
jnp
sub
insb
mov
dec
negb
insb
cs
push
xor
xor
popf
cmpsb
pop
mov
jl
dec
test
xchg
push
pop
or
mov
ret
jl
pop
mov
mov
pop
mov
or
sbb
cwtl
pop
mov
lret
mov
jns
lods
inc
pop
mov
mov
push
mov
and
cli
repnz
insb
inc
jae
arpl
inc
mov
outsb
add
xor
inc
mov
pusha
fstps
stc
mov
pop
pop
aas
dec
inc
mov
loopne
xchg
mov
inc
mov
sbb
xor
inc
mov
sbb
inc
mov
int
and
inc
mov
andb
inc
inc
mov
fstps
imul
mov
insb
pop
inc
inc
mov
inc
mov
test
inc
shl
inc
mov
jecxz
pop
test
dec
jb
mov
mov
mov
mov
inc
mov
es
fstl
xchg
test
rolb
insb
jg
hlt
ja
inc
mov
cmpsb
test
pop
nop
inc
mov
imul
insb
sub
lret
inc
mov
sub
inc
add
inc
mov
adc
inc
jne
inc
mov
out
int3
lahf
sub
inc
mov
or
jmp
cli
inc
mov
in
lods
dec
inc
mov
insb
dec
sahf
inc
icebp
pop
inc
mov
mov
inc
mov
mov
inc
mov
push
dec
lea
inc
mov
inc
pop
int3
pop
rolb
pushf
and
in
xchg
inc
mov
cli
fs
nop
mov
insb
sahf
ljmp
xor
inc
mov
testl
mov
data16
jmp
inc
mov
push
flds
fadds
insb
add
daa
xchg
inc
mov
roll
mov
test
inc
mov
rcrl
lahf
test
inc
mov
xlat
push
mov
mov
inc
mov
lret
sbb
daa
call
mov
mov
inc
mov
dec
pushf
dec
push
push
inc
mov
repz
jbe
mov
call
inc
mov
pop
int3
addl
inc
mov
aaa
dec
mov
insb
push
dec
dec
data16
mov
loopne
pushf
add
jle
jae
dec
mov
push
imul
movsb
lcall
cmp
mov
and
movsb
pushf
sub
mov
sti
clc
in
add
test
mov
std
out
mov
insb
inc
sbb
mov
mov
dec
mov
pushl
cli
push
dec
mov
sub
dec
mov
insb
dec
dec
dec
mov
mov
dec
mov
pusha
int
mov
mov
rorl
insb
pusha
je
jns
dec
mov
mov
dec
mov
rolb
xchg
fimull
insb
fildl
insb
int
mov
mov
cmc
add
mov
sbb
jb
dec
mov
jle
mov
push
dec
mov
lods
popa
sbb
and
insb
xchg
mov
xchg
mov
daa
into
jl
push
dec
mov
std
addr16
jl
mov
pop
jmp
inc
or
insb
push
ror
aam
mov
sbb
scas
hlt
dec
mov
lds
push
dec
mov
pop
mov
mov
ja
lahf
stos
jl
mov
xchg
jg
stos
add
insb
leave
adc
insb
int3
sahf
cmp
ret
insb
rorl
dec
mov
jb
mov
mov
insb
push
inc
sbb
jbe
insb
dec
xchg
xchg
aad
dec
mov
imul
mov
pushf
pop
stc
add
dec
mov
push
add
mov
mov
nop
test
dec
mov
sarl
mov
cli
pop
mov
insb
dec
jnp
je
dec
mov
cld
popf
fnstsw
mov
leave
or
mov
pop
lods
sbb
dec
mov
ss
dec
ss
and
mov
xchg
ss
insb
je
lock
test
or
mov
xchg
or
jle
ss
lods
adc
insb
fimuls
jg
sub
mov
hlt
cmpsl
dec
imul
add
mov
cmp
aaa
mov
inc
xor
inc
aaa
mov
sbb
xchg
dec
pusha
aaa
mov
orb
pop
add
mov
sahf
jp
cld
shlb
jecxz
xor
insb
mov
xor
insb
imul
insb
push
jbe
orl
insb
or
mov
insb
stos
mov
out
xor
insb
and
mov
popf
in
adc
xor
mov
insb
and
mov
jecxz
xchg
xor
insb
cmpsb
fcoms
outsb
xor
leave
mov
xor
mov
pop
daa
adc
xor
jnp
xor
lahf
scas
xor
aas
xor
jmp
xor
hlt
xor
scas
sahf
xor
sti
cmpsb
xor
arpl
mov
enter
or
mov
cmp
mov
xor
loope
xor
xorb
insb
cltd
adc
push
xor
sub
xor
jge
xor
data16
mov
test
or
xor
lahf
xchg
xor
xor
inc
into
dec
xor
pop
push
xor
insl
xor
mov
scas
sub
pop
ds
sbb
and
sti
int3
mov
mov
mov
push
pop
dec
ds
push
dec
xlat
sbb
ds
jp
popa
sahf
es
fistpll
popf
sarb
insb
sahf
sti
outsb
fsubr
aas
mov
fsubrl
mov
insb
jbe
add
aas
mov
std
push
mov
insb
mov
pop
sti
sub
mov
call
jbe
insb
jo
dec
xlat
mov
out
push
fnsave
xchg
or
aam
jbe
push
sbb
out
add
xchg
sbb
cld
or
in
cmp
sbb
add
pop
int3
cmp
jbe
push
fstps
rolb
adc
insb
shlb
test
pop
pop
insl
cmp
mov
test
std
add
mov
mov
shll
mov
fldcw
in
das
mov
rcrl
mov
jbe
insb
call
sbb
pop
cmp
dec
insb
mov
sub
xor
xchg
cmpsb
sbb
sbb
stos
icebp
ja
or
call
mov
or
insb
insb
and
shlb
lcall
pop
ret
std
ja
sbb
test
sub
dec
imulb
adc
xchg
adc
sub
adc
in
loop
fimull
int3
aaa
and
xchg
shll
xor
push
mov
mov
js
jnp
sub
dec
test
ljmp
sbb
or
stos
out
cmpsl
cmp
push
push
push
les
add
adc
add
repz
mov
mov
lock
aas
lock
jmp
inc
lahf
jecxz
adc
or
repnz
mov
ds
aam
insb
icebp
push
sub
idivb
pop
stos
outsl
cmp
fwait
sbb
sub
inc
das
das
mov
daa
je
cmpsl
jbe
insl
jns
xchg
cmpsl
and
adc
or
sbb
das
repz
mov
push
aad
adc
sbb
mov
sbb
iret
adc
mov
mov
rorb
aam
jno
add
pop
and
shll
lock
mov
rcrl
or
movlps
xchg
xor
cmp
inc
xchg
fmuls
xor
add
or
jo
xor
mov
sub
pop
jb
cmpsb
adc
sbb
sbb
push
jp
es
pop
fimull
pop
subb
adc
insb
int3
js
loopne
adc
cmp
cli
imul
sti
loop
stos
jbe
push
nop
in
jmp
mov
mov
mov
sti
add
popa
pop
dec
mov
fsubrs
inc
cmp
pop
movl
mov
fadds
bound
sti
add
or
push
mov
in
pop
insb
aam
aam
adc
sbb
or
adc
test
fwait
sbb
das
imulb
pop
mov
fldl
mov
mov
add
add
sub
ret
out
je
sbb
sbb
inc
pop
in
mov
fmuls
mov
int3
or
cli
mov
mov
push
mov
mov
pop
cmp
adc
rorb
mov
in
xchg
sti
mov
roll
dec
mov
and
jbe
insb
fstpl
pop
mov
sub
ss
adc
and
jmp
sti
or
jle
aam
scas
insb
mov
adc
add
nop
sbb
sub
in
lds
mov
sub
mov
or
push
push
jbe
add
and
adc
push
shlb
sub
pop
dec
js
jbe
push
mov
add
or
scas
mov
xor
add
push
sub
cmpsb
cmpsb
test
out
es
xlat
or
pop
sub
nop
stos
xchg
and
add
mov
sarl
add
in
bound
negl
rorl
push
ret
fidivrl
loope
jp
sbb
das
mov
xor
add
xor
cmp
lret
xor
xor
push
cld
mov
xchg
lock
test
xor
popf
sbb
or
add
das
push
xlat
orb
jbe
insl
hlt
ss
popf
mov
fmuls
mov
lahf
jg
cmpsb
add
ljmp
mov
testl
mov
in
cmp
mov
dec
mov
rcrb
xchg
add
and
dec
rclb
mov
xchg
js
popf
cmp
movaps
insl
daa
mov
mov
mov
jg
xchg
pop
rorl
jbe
insb
hlt
aam
lea
add
push
std
fmul
shlb
mov
ficompl
sbb
or
mov
movb
shl
mov
push
insb
or
cmpsb
les
cltd
push
adc
stos
int
mov
lret
lods
aad
mov
mov
cmpsl
mov
fildl
shll
pusha
mov
mov
testl
mov
aas
and
inc
rep
push
xchg
sbb
or
xlat
xor
stc
or
aam
fildl
lods
mov
insb
pusha
mov
popf
mov
lock
imull
push
insl
mov
lds
pop
push
mov
xor
push
jecxz
push
fdivl
mov
and
xchg
hlt
je
add
adc
stc
or
sbb
test
dec
subl
add
push
jecxz
push
sub
mov
jge
add
fstpl
adc
mov
lret
mov
fbld
or
xchg
or
faddl
in
jbe
insb
mov
xor
cwtl
add
addr16
push
cmpsl
mov
imul
pop
incb
icebp
loope
xchg
sbb
pop
lods
cmp
outsb
aam
in
xchg
mov
and
imul
insb
mov
sbb
test
add
add
xchg
adc
cmp
fscale
xchg
pop
and
push
jbe
or
in
stos
cmpsb
psubd
int
inc
mov
add
push
and
nop
nop
adc
or
sbb
cmp
adc
pop
xorb
leave
es
nop
xor
inc
insl
movsb
paddw
or
jo
je
or
mov
dec
mov
testl
mov
shrb
sub
aaa
mov
pop
arpl
add
pop
mov
add
fstl
or
mov
mov
enter
add
adc
or
pop
dec
cltd
cmpsb
add
js
mov
mov
fimull
lret
int
pop
popa
je
add
shrb
add
je
or
es
jne
add
and
or
call
add
subb
cld
fs
adc
sub
push
xor
cmpsl
add
push
mov
ja
or
inc
leave
pop
mov
shrb
mov
jno
cmp
lods
add
mov
cmpsl
pop
rorl
in
push
mov
xchg
sbb
add
loop
mov
fldl
insb
loop
mov
in
outsl
mov
mov
shrb
stos
mov
jecxz
and
or
sbb
push
shl
movb
add
and
jbe
insl
and
test
aaa
jp
push
cmpsl
jbe
insl
xchg
mov
call
inc
jns
jb
sbb
add
xchg
clc
mov
xor
into
xchg
lcall
lods
lock
std
xchg
xchg
dec
mov
mov
sti
inc
push
lods
mov
dec
pop
mov
adc
insl
sub
add
add
sbb
pushf
push
pusha
aam
xor
adc
pop
xchg
mov
aam
cmp
ja
or
cltd
dec
movsb
adc
or
mov
mov
roll
je
lahf
xor
jbe
insl
ljmp
or
mov
icebp
add
and
cwtl
jbe
add
push
int3
mov
fmuls
ja
pop
movsb
cmpsb
and
push
mov
sbb
mov
repz
xor
pop
mov
cmp
and
or
rorb
lea
outsb
cmp
shrl
cmc
mov
bound
mov
icebp
adc
mov
fwait
xchg
push
fstpl
es
int
mov
pop
mov
sub
add
insb
pop
and
jns
and
push
cmc
into
outsb
repz
fistps
sub
ja
or
sbb
push
inc
mull
add
and
popf
lahf
aam
jnp
sub
inc
cmp
add
pop
hlt
popa
push
stos
lcall
inc
mov
inc
inc
imul
pop
mov
clc
pop
lea
push
subl
loopne
dec
sub
int3
insb
pusha
mov
psrld
ja
or
outsl
or
mov
movsl
add
add
xor
mov
jne
insl
xchg
sbb
add
cmp
xor
idivl
cmp
jge
jb
sbb
or
add
add
mov
jmp
pop
fimull
lret
mov
lock
sbb
mov
xchg
inc
mov
test
insb
lret
mov
add
pop
mov
push
dec
rcl
jbe
outsb
in
mov
fmull
mov
mov
jl
rcll
add
or
mov
mov
or
pop
inc
mov
sarl
mov
std
add
xchg
or
and
or
or
or
adc
les
add
xchg
mov
cmpsb
adc
insb
xor
adc
push
aad
dec
sub
add
push
xor
out
jb
adc
mov
and
sub
inc
mov
mov
jecxz
xor
pushf
jmp
mov
imul
or
cmpsl
xor
sbb
imul
xchg
sbb
sbb
cmp
insb
pop
adc
inc
mov
scas
repz
cmp
adc
mov
out
push
hlt
sbbl
or
add
add
call
push
cld
or
icebp
adc
insb
je
xchg
add
or
popf
and
add
jbe
insb
pop
xchg
mov
sbb
adc
fistpl
iret
arpl
push
mov
jg
xchg
adc
cmp
and
mov
roll
insb
pop
test
nop
adc
sbb
decl
mov
shrl
inc
mov
rorb
pop
xlat
jo
add
add
push
lds
shlb
mov
andl
je
or
cmpsl
or
pop
sub
xchg
add
add
jae
sbb
xchg
push
xchg
fs
pop
int
mov
in
shlb
mov
jecxz
ret
mov
mov
lcall
add
mov
mov
sarb
test
daa
mov
inc
adc
andl
mov
xchg
je
call
pop
mov
sub
adc
mov
les
dec
daa
shll
fistpl
dec
xchg
aam
mov
test
push
sarl
daa
adc
rcl
ds
mov
sbb
jb
sbb
insb
push
mov
jne
or
jl
outsl
movsb
add
or
xor
mov
mov
test
fidivrs
mov
test
dec
xchg
lods
mov
popa
clc
cld
mov
repz
mov
dec
pop
aam
loopne
filds
fsubrs
aam
mov
or
or
mov
fwait
xor
in
or
lret
jecxz
push
hlt
call
pop
jge
jns
mov
pushf
bndldx
adc
sbb
call
or
cmpsb
add
fisubs
orb
insb
cmp
mov
je
or
cmc
cli
mov
mov
pop
test
sub
aad
push
bound
mov
xor
push
mov
outsb
mov
cs
or
mov
shrb
pop
sbb
dec
leave
cmpsb
sbb
or
jne
or
sbb
or
mov
out
aas
mov
and
inc
cwtl
pop
fimull
or
into
popf
add
pop
pop
mov
rorl
aam
lea
adc
fstpl
call
pop
sbbb
or
lock
add
push
hlt
and
dec
mov
xchg
jbe
outsb
adc
mov
push
or
pop
pop
addb
mov
lcall
xchg
push
jno
mov
fildl
ja
push
xor
or
ret
sbb
aas
lret
cmp
mov
jecxz
push
cmpsb
arpl
add
cmp
add
mov
push
add
jg
sbb
or
fldenv
and
daa
mov
aas
fimull
jl
cmp
add
add
repnz
sbb
js
jno
add
sbb
inc
inc
xchg
sbb
or
je
add
aad
xor
push
mov
stos
insb
pop
ds
lret
insb
daa
mov
push
xchg
add
mov
pushf
cmp
mov
mov
cmp
add
std
icebp
in
mov
les
fnsave
or
jp
or
mov
or
imul
cmp
xchg
push
mov
adcb
mov
sbb
das
pop
repz
mov
je
lds
pop
ja
in
mov
repz
xchg
pop
jne
in
mov
faddl
insl
lock
mov
das
push
subb
xor
stc
jb
or
push
xchg
mov
sarl
add
mov
push
loope
and
push
mov
mov
push
pop
xchg
pop
pop
push
xor
sub
cwtl
sbb
or
mov
shrl
mov
das
lret
pop
fistl
cmp
ror
mov
mov
adc
or
aam
cli
outsb
sti
cmp
add
add
mov
rolb
adc
in
mov
shrb
push
mov
mov
cltd
sbb
or
cs
add
add
inc
xor
fwait
shlb
mov
inc
mov
fimull
xchg
lahf
bound
ror
js
push
ja
or
add
add
lcall
sbb
movsl
xchg
jbe
outsl
cltd
lret
mov
shrb
adc
aaa
outsb
sub
cmc
or
and
add
aaa
mov
cs
fisttpll
xchg
add
sbb
mov
sbb
jle
mov
adc
sbb
mov
in
mov
jl
pop
mov
rorb
enter
jbe
push
mov
imull
movsl
aam
loop
lret
lds
loop
test
cwtl
pushf
sub
outsl
mov
push
sbb
xchg
adc
sub
cmp
stos
inc
daa
or
cmp
fidivs
test
ja
pop
ret
dec
add
mov
sahf
xor
pop
fildl
cmp
inc
popf
xchg
sbb
sbb
in
mov
enter
adc
push
xor
aad
jbe
mov
push
or
cmpb
cmp
push
add
add
cmpsl
xor
sub
fwait
add
sbb
adc
add
xor
push
mov
mov
add
jo
add
or
mov
int3
insb
or
pop
mov
inc
lods
mov
xchg
ljmp
push
std
pop
aam
add
inc
push
cmp
loop
mov
pop
mov
sbb
outsb
jnp
xchg
adc
das
subb
pop
mov
push
mov
cmpsl
mov
jb
lds
mov
cmp
sbb
pop
push
pop
add
push
arpl
xchg
adc
sbb
int
mov
inc
cmpl
cltd
add
sbb
idivb
and
cmp
pop
insb
imul
rcrl
mov
aam
mov
pop
mov
aad
icebp
mov
int3
insb
inc
mov
xchg
cmp
pushf
aam
shrb
and
sbb
sbb
negb
test
in
fcmovu
jbe
add
xor
jo
xor
add
or
mov
int3
sbb
sbb
insb
sahf
andl
cmpsb
xor
sbb
push
inc
loope
pop
rolb
add
push
imul
jbe
or
fistpl
or
in
sub
add
adc
push
std
pop
jmp
lock
aam
fwait
insb
add
shrb
or
movl
lock
sbb
sbb
xor
and
and
mov
icebp
insl
add
and
out
out
roll
aas
sbb
mov
movsl
jle
data16
shlb
dec
and
push
pusha
fnstsw
mov
aad
jne
push
and
jb
sbb
fstpl
fs
in
jbe
insb
jmp
in
pop
pop
movzbl
mov
mov
sub
xor
dec
jae
ja
sbb
dec
mov
and
call
pop
popa
xchg
jecxz
jbe
and
jmp
cmc
insb
movsl
testl
mov
ret
rclb
outsl
js
mov
iret
in
xor
adc
pop
add
fs
aam
fsubrl
xchg
pmaxub
fwait
aam
mov
jnp
shlb
and
insl
push
das
inc
mov
xor
or
add
rorb
xlat
adc
mov
mov
out
and
fisttps
mov
jbe
or
xchg
sbb
sbb
push
shrl
addl
xor
lret
sbb
fwait
test
rorb
cmp
addl
add
stos
cmpsl
push
cmpsb
movntq
repnz
decl
aam
pop
outsb
out
ja
sbb
add
sbbb
sbb
rcrl
lret
ja
sbb
cmp
repz
out
push
repz
sub
aaa
mov
and
xchg
imul
inc
rcll
xchg
outsb
loopne
add
or
mov
fstl
pop
sarb
mov
fimuls
sbb
or
xorl
add
mov
xchg
push
and
test
rolb
adc
cmpsb
adc
sbb
cmp
aam
insb
push
sub
fcoml
push
aaa
adc
mov
push
mov
sbb
movb
fnsave
sbb
mov
mov
push
pop
fidivrl
xchg
push
xorl
mov
jmp
mov
loopne
fildl
aam
xor
cld
les
in
dec
sbb
mov
daa
insb
lahf
xor
lahf
xchg
mov
xorl
dec
dec
sbb
popf
add
in
xorl
and
sbb
sbb
jns
mov
lahf
and
add
cmp
xlat
ficoms
mov
mov
rorb
imul
mov
jbe
insb
mov
adc
or
mov
imul
ret
mov
int
lcall
insb
jp
or
cmpsl
push
movb
jbe
insb
adc
flds
movsl
inc
jbe
mov
cmc
insb
fstps
movb
in
dec
mov
ficompl
push
lret
mov
xor
xchg
xchg
sbb
add
addr16
mov
mov
scas
andl
xchg
adc
mov
jb
dec
aam
and
xchg
sub
nop
adc
cmp
push
inc
xchg
sti
sbb
push
and
loop
js
jbe
insb
rcrb
cltd
pop
fisttps
lahf
mov
jecxz
mov
rcrl
lea
jne
cmp
aaa
xchg
test
rolb
mov
ss
aam
jbe
and
sti
dec
xchg
lahf
adc
cmp
lahf
sbb
add
jbe,pt
push
push
pop
test
stc
xchg
sub
cmp
push
icebp
aam
pop
insb
aas
xchg
inc
dec
mov
rorl
mov
dec
mov
loope
push
adc
rcl
jbe
insl
inc
sub
ficompl
ret
jno
xchg
jo
out
arpl
mov
xchg
sbb
sbb
fiadds
sub
lock
mov
dec
popa
lret
xorl
imul
loop
add
cmp
data16
xchg
push
jecxz
negb
sarl
andl
xchg
insl
inc
jg
stos
mov
out
sti
mov
lcall
push
rorb
push
gs
mov
push
sahf
sbb
push
mov
sub
mov
fnstenv
push
mov
ds
dec
cmpsl
mov
jbe
insl
jb
cmp
fs
stos
out
and
cmp
outsb
push
xor
test
mov
leave
fs
stos
inc
dec
scas
mov
cmp
push
loope
adc
sub
cmpsl
aaa
fadds
add
je
xchg
adc
fnstcw
mov
rorl
sbb
loop
add
sub
ja
or
xchg
call
add
adc
add
or
xchg
xor
adcb
sbb
pop
pop
scas
je
or
data16
mov
decl
ja
add
cltd
mov
sbb
sbb
adc
add
mov
push
cltd
inc
xchg
add
sbb
shrb
popf
mov
insb
std
mov
ret
sbb
push
insb
ds
add
mov
sarb
mov
idivb
add
mov
rcrl
movsl
jns
out
mov
int3
cmp
add
add
xchg
xchg
mov
movl
xchg
push
les
pop
jno
sbb
call
cli
or
out
jbe
sbb
std
scas
cmc
mov
inc
mov
push
sbb
mov
push
cmp
aad
fwait
insl
fiaddl
jmp
adcl
dec
popa
add
mov
dec
call
insb
sbbb
or
cmp
sbb
fwait
rcr
mov
xorb
xchg
adc
sub
ja,pt
push
fidivl
fstpl
pop
dec
outsl
clc
mov
rorl
pushl
cmp
adc
cmp
orb
in
das
lret
stos
xchg
xlat
sbb
scas
add
outsb
in
out
mov
vpmacsdql
add
sub
xlat
add
jge
inc
gs
or
add
sbb
add
sbb
stc
jbe
cmpsb
sbb
sbb
andb
add
sbb
cmpsl
rcrb
test
sbb
movsl
stc
scas
xchg
jbe
insb
insb
mov
cwtl
and
mov
or
adc
jno
popf
lahf
adc
insb
fdivs
int
pop
push
sahf
mov
testl
xchg
jbe
insl
dec
orl
add
sbb
sbb
mov
dec
adc
push
and
mov
mov
jbe
insl
outsl
mov
icebp
mov
adc
movb
jbe
sbb
add
cmp
clc
insl
mov
and
mov
ret
cli
or
mov
xchg
fs
mov
adc
and
fnstenv
mov
mov
push
add
mov
rcrl
push
cltd
lret
adc
cmp
add
sbb
sbbb
add
and
movb
fisubs
sbb
lahf
xchg
mov
jbe
insb
mov
push
and
adc
insb
xchg
xchg
pusha
mov
lret
mov
xchg
out
lods
push
shrb
or
cmc
lods
add
or
jbe
outsb
in
mov
rcrl
int3
mov
xchg
sub
insl
lock
mov
sub
add
or
jbe
outsb
mov
leave
add
add
cmp
enter
aaa
rorl
aam
js
adc
add
icebp
les
cmpl
pusha
push
popf
cmp
add
cmp
jbe
in
mov
loopne
or
fisttps
movsl
addr16
add
push
fisubrl
hlt
jbe
pop
xlat
or
add
repz
and
jle
lahf
adc
and
fdivl
aam
jle
mov
and
dec
outsb
test
or
fwait
push
roll
fcomps
stos
mov
xor
xchg
sarb
mov
ja
add
and
fwait
ja
or
lret
add
insb
push
xchg
xchg
mov
cmc
sbb
add
insb
push
jbe
and
push
add
mov
add
add
sbb
enter
pop
or
in
dec
mov
shrb
adc
aas
inc
xor
sub
fstpt
cmp
aaa
mov
lods
lock
mov
push
or
shrb
imul
andb
mov
roll
arpl
rcll
lods
xor
mov
and
sbb
push
icebp
out
jbe
insl
fs
fidivs
fwait
inc
test
adc
sub
xchg
sbb
push
or
push
in
outsb
or
test
and
cmpsb
pop
fldcw
icebp
cmpsl
mov
rcrl
jae
int3
sub
xchg
adc
aas
fsubrl
push
mov
sbb
cltd
mov
frndint
insl
mov
lods
jb,pn
push
roll
jg
out
lret
mov
repnz
nop
adc
or
cmc
lret
in
cmpsb
add
pinsrw
add
std
into
mov
xchg
mov
or
mov
cmc
subps
inc
xchg
adc
dec
mov
cmp
mov
jecxz
dec
fwait
or
or
fistpll
pop
mov
sub
cmpsb
aaa
mov
ja
push
les
test
hlt
lahf
adc
and
xchg
into
aam
shrl
mov
or
das
ljmp
sbb
insb
out
cmp
mov
testb
add
add
jbe
insl
add
mov
jns
jnp
add
or
jbe
insl
sub
in
mov
and
mov
xlat
movlps
out
pop
arpl
adc
add
sbb
jg
mov
ljmp
frstor
outsb
mov
les
cmpsb
add
push
bsr
shlb
cmpsl
sbb
or
movsb
sbb
pop
aad
int
adc
pop
addr16
xorl
addr16
sub
iret
push
mov
add
add
cmpsl
adc
cltd
adc
mov
sub
cli
adc
add
clc
in
fst
jbe
insb
data16
dec
aam
mov
repnz
add
aam
mov
pop
jns
push
aam
mov
xor
imul
mov
xchg
fucomip
inc
aam
mov
clc
xor
mov
aas
xchg
cltd
pop
aam
mov
pop
xor
xchg
aam
mov
cli
test
aam
mov
leave
sub
aam
mov
fsts
aam
mov
mov
aam
mov
hlt
xchg
insb
mov
jbe
insb
fstl
out
jbe
insb
faddl
sbb
jbe
insb
add
cmp
aam
mov
sub
aam
mov
jge
ret
jbe
insb
pop
shrb
out
sub
insb
mov
push
add
jbe
insb
gs
rcl
jbe
insb
inc
sbb
aad
jbe
insb
jg
in
insb
aam
mov
shrb
inc
aam
mov
stos
xchg
inc
adc
jbe
insb
push
cltd
or
and
mov
int
xorb
mov
pop
jl
pop
aam
mov
incb
mov
sahf
jae
cmp
jbe
insb
adc
loopne
jbe
insb
nop
loope
mov
jbe
insb
mov
jbe
insb
xor
fistl
aam
mov
cmp
pushf
aam
mov
xchg
loope
jbe
insb
scas
cmp
or
jbe
insb
jmp
sub
aam
mov
stos
sbb
dec
aam
mov
or
jbe
insb
jns
iret
jp
jbe
insb
leave
imul
xchg
jbe
insb
push
jbe
insb
push
ljmp
and
mov
jbe
insb
sbb
mov
dec
add
mov
movsb
mov
mov
mov
jbe
insb
push
dec
insl
mov
sahf
insb
mov
ret
or
arpl
das
insb
repnz
popf
aad
jbe
insb
and
jbe
insb
and
mov
jbe
insb
sahf
in
out
aam
mov
mov
jge
aam
mov
ss
sbb
xchg
out
fcom
jbe
insb
mov
ficomps
aam
mov
pop
fldl
insb
loop
sarb
divl
xor
jbe
insb
aaa
fistpl
pop
aam
mov
mov
push
aam
mov
jmp
jbe
insb
push
mov
inc
aam
mov
inc
mull
aam
mov
mov
insb
mov
rcl
jbe
insb
mov
jbe
insb
test
inc
aam
mov
pop
jg
mov
lea
jecxz
jbe
insb
mov
jbe
insb
int3
xchg
or
jbe
insb
in
rcl
jbe
insb
popf
xchg
cmp
aam
mov
std
out
fsubl
les
insb
insl
xchg
cmp
insb
scas
cltd
das
add
pop
mov
insb
push
or
sbb
jbe
insb
add
jbe
insb
fildll
mov
and
jbe
insb
xchg
int
xchg
aam
mov
std
mov
mov
into
mov
mov
push
push
aaa
or
jbe
insb
inc
mov
aam
mov
es
sbb
jbe
insb
and
mov
mov
hlt
lods
aam
mov
mov
jbe
insb
pushf
icebp
pop
mov
or
jbe
insb
mov
mov
jbe
insb
repnz
sti
aam
mov
lret
pop
ret
jbe
insb
imul
pop
aam
mov
xor
insb
inc
aam
mov
lods
std
sbb
aam
mov
push
shrl
insb
jns
adc
aam
mov
push
lahf
sub
jbe
insb
and
jbe
insb
sub
and
aam
mov
daa
sti
stc
dec
aam
mov
lret
mov
push
jbe
insb
pop
inc
popl
aam
mov
test
mov
fistps
jne
jbe
insb
hlt
popa
jae
aam
mov
and
push
aam
mov
adc
movsl
adc
jbe
insb
inc
rcr
aam
mov
mov
mov
mov
cmc
jbe
insb
cmp
insb
cld
mov
jbe
insb
out
xor
fcom
jbe
insb
test
leave
aam
mov
fbld
icebp
aam
mov
sbb
sub
jbe
insb
cmp
ljmp
out
inc
aam
mov
testb
jbe
insb
pop
xor
insb
add
rcl
jbe
insb
jp
or
aam
mov
enter
aam
mov
mov
mov
insb
dec
jo
nop
aam
mov
hlt
pop
xchg
movsl
aam
mov
mov
jbe
insb
loope
and
aam
mov
sbb
js
aam
mov
jl
inc
pop
aam
mov
int3
xlat
cmp
aam
mov
sub
add
flds
mov
push
sub
insb
or
xor
jbe
insb
addr16
mov
std
pop
sbb
jbe
insb
jb
jae
jbe
insb
repnz
xchg
push
aam
mov
mov
mov
mov
lret
lahf
aam
mov
adc
mov
cli
xchg
xorl
mov
stc
jge
popa
aam
mov
push
cmp
insb
movsl
subl
aam
mov
pop
jle
jecxz
jbe
insb
rolb
mov
leave
iret
push
jo
jbe
insb
mov
push
sbb
jbe
insb
cmp
pop
popf
aam
mov
call
jbe
insb
mov
xchg
aam
mov
insl
fdivrl
jns
jbe
insb
scas
das
sub
jbe
insb
xor
jb
aam
mov
mov
jbe
insb
lret
movsb
aam
mov
imul
insb
jmp
inc
aam
mov
adc
jbe
insb
stos
mov
mov
sub
mov
dec
push
ret
aam
mov
and
inc
inc
aam
mov
push
mov
mov
xor
mov
mov
jbe
insb
mov
xor
cmp
pop
rcl
jbe
insb
inc
cmp
jbe
insb
dec
pop
fcomi
aam
mov
mov
aam
mov
sub
mov
sub
mov
out
aad
mov
sti
icebp
xchg
sbb
jbe
insb
add
jbe
insb
fists
aam
mov
jne
shrb
aam
mov
je
sahf
out
aam
mov
mov
push
stos
aam
mov
cmp
push
rcl
mov
inc
and
mov
inc
aas
ds
jbe
insb
inc
cld
xor
aam
mov
pop
outsl
sbb
aam
mov
mov
xor
aam
mov
cmp
mov
pop
ljmp
lea
test
jbe
insb
imul
aam
mov
loopne
mov
aam
mov
sbb
ret
jbe
insb
or
cmp
mov
sahf
call
mov
or
jbe
insb
dec
xchg
mov
aam
mov
jb
adc
insb
push
mov
mov
insl
sbb
mov
jbe
insb
xor
jbe
insb
aas
sbb
aam
mov
or
jmp
jbe
insb
dec
lret
jbe
insb
addl
insb
std
push
outsl
aam
mov
iret
sbb
sbb
jbe
insb
cli
test
mov
and
aam
mov
adc
lds
jb
xchg
aam
mov
andb
insb
mov
stc
lahf
aam
mov
cmp
lods
aam
mov
mov
jbe
insb
out
ds
aam
mov
ret
push
xor
jbe
insb
pop
and
pop
aam
mov
sbb
repnz
jbe
insb
mov
jbe
insb
push
ljmp
jbe
add
aam
mov
push
cmpsb
pop
aam
mov
and
pop
aam
mov
mov
mov
ljmp
insb
lahf
adc
insb
call
jbe
insb
testl
insb
ret
adc
jbe
insb
loope
fdiv
aam
mov
test
outsb
aam
mov
mov
gs
aam
mov
xor
jg
aam
mov
enter
aam
mov
fisubl
inc
pop
aam
mov
test
idiv
aam
mov
mov
insb
outsl
mov
mov
mov
xchg
fst
jbe
insb
out
xchg
aam
mov
repz
xor
aam
mov
pop
push
aam
mov
sbbl
mov
sub
inc
aam
mov
sub
repnz
mov
cmpsb
movsl
cltd
mov
pop
hlt
add
inc
xchg
pop
sub
aam
mov
ficoml
and
je
push
insb
hlt
pop
aaa
ds
mov
mov
jbe
insb
cmp
jbe
insb
loope
xor
aam
mov
mov
jbe
insb
sbb
sub
aam
mov
lods
rol
sahf
aam
mov
pop
mov
push
aam
mov
lock
insb
mov
out
jl
jbe
insb
gs
scas
xlat
aam
mov
xor
adcb
add
jbe
insb
shlb
inc
aam
mov
sbb
jbe
insb
push
cltd
out
xor
jbe
insb
cmp
mov
inc
roll
push
jl
clc
aam
mov
ds
mov
sahf
repz
aam
mov
adc
iret
aam
mov
nop
repz
mov
jbe
insb
jnp
aad
aam
mov
jnp
fistl
aam
mov
lret
pushf
aam
mov
ja
in
add
jbe
insb
scas
jp
pop
aam
mov
jecxz
test
insb
fwait
sbb
rcl
jbe
insb
or
jbe
insb
jge
iret
jp
jbe
insb
leave
jno
or
jbe
insb
pop
sbb
mov
mov
push
ljmp
arpl
mov
aam
mov
fwait
stos
pop
aam
mov
sub
mov
movsb
mov
mov
mov
jbe
insb
push
notb
jne
jbe
insb
rcrb
insb
adc
mov
sub
mov
and
jbe
insb
sub
mov
jbe
insb
sahf
in
xor
jbe
insb
ss
adc
mov
inc
insb
mov
out
aam
mov
repz
rcrb
aam
mov
pop
pop
pusha
adc
jbe
insb
loop
jne
aam
mov
xor
jbe
insb
jp
push
das
aam
mov
xor
stos
aam
mov
cmp
rcl
mov
outsb
test
loopne
jbe
insb
inc
aaa
xchg
ja
jbe
insb
ret
std
and
pop
jb
mov
jbe
insb
mov
jbe
insb
js
and
aam
mov
pop
xor
mov
lea
jbe
insb
pop
movsl
data16
jbe
insb
mov
jbe
insb
inc
mov
mov
pop
jmp
adc
jbe
insb
stos
out
fcompl
jbe
insb
lea
mov
push
jbe
insb
movsb
cltd
fildll
jbe
insb
pop
xchg
loopne
ret
fcom
jbe
insb
test
js
aam
mov
movsb
push
aam
mov
mov
jbe
insb
xchg
int
in
aam
mov
scas
sahf
dec
aam
mov
xor
insb
cmp
pop
rcl
jbe
insb
add
cs
es
enter
insb
and
aam
mov
mov
mov
aam
mov
fcomps
pusha
aam
mov
xchg
jecxz
mov
std
cmp
mov
dec
jae
push
repnz
push
push
aam
mov
jp
inc
adc
jbe
insb
enter
aam
mov
das
jmp
mov
mov
aas
aam
mov
push
mov
insb
jns
out
aam
mov
out
in
aam
mov
pushf
ss
lds
mov
pop
fdiv
dec
aam
mov
test
sub
jbe
insb
push
jbe
insb
inc
inc
inc
out
jbe
insb
arpl
mov
fdivrp
es
jbe
insb
and
jo
aam
mov
mov
jbe
insb
adc
xchg
or
jbe
insb
test
xchg
aam
mov
arpl
mov
sbb
cmc
ja
jbe
insb
add
sahf
pop
aam
mov
mov
jbe
insb
scas
popa
sub
aam
mov
adc
mov
aad
movsb
jmp
jbe
insb
sbb
mov
jmp
ljmp
dec
add
aam
mov
es
lock
mov
cld
lock
mov
jmp
dec
aam
mov
jno
mov
aam
mov
mov
int
aam
mov
xchg
adc
insb
xor
in
aam
mov
repz
mov
jbe
insb
inc
xor
aam
mov
cwtl
cmp
rcl
jbe
insb
jp
sub
aam
mov
leave
or
aam
mov
arpl
mov
fnstenv
aam
mov
out
sahf
gs
mov
mov
jbe
insb
imul
insb
sbb
xchg
imul
aam
mov
repnz
gs
mov
jge
jg
aam
mov
rcrb
scas
loope
jbe
insb
xchg
sbb
lret
mov
add
mov
xor
mov
insb
inc
pop
sbb
insb
scas
add
mov
xor
mov
fcoms
mov
sub
xchg
aam
mov
cld
int
cmp
jbe
insb
int3
adc
aam
mov
stc
push
push
aam
mov
mov
cmpsb
inc
aam
mov
pop
jecxz
mov
xchg
mov
dec
iret
je
aam
mov
mov
jbe
insb
ljmp
insb
test
fcoml
test
fdivrl
mov
mov
insb
imul
insb
stos
xchg
out
aam
mov
add
ret
aam
mov
push
std
mov
insb
lds
scas
in
jbe
insb
pop
mov
mov
inc
pushf
and
aam
mov
adc
jbe
insb
push
mov
mov
adc
mov
dec
sbb
aam
mov
and
mov
push
mov
mov
add
jno
aam
mov
mov
lea
jbe
insb
out
push
sbb
aam
mov
sbb
lahf
aam
mov
add
jbe
insb
push
popa
or
jbe
insb
ljmp
insb
xor
paddq
insb
ss
mov
out
call
mov
imul
ds
mov
push
dec
or
ja
mov
jbe
insb
testb
aam
mov
js
mov
insb
shll
aam
mov
push
inc
xlat
lret
mov
pusha
and
mov
push
jbe
insb
inc
dec
adc
jbe
insb
pop
pop
fistpl
aam
mov
loop
out
aam
mov
mov
jbe
insb
pusha
mov
mov
xchg
out
sub
jbe
insb
mov
jbe
insb
loopne
sti
jbe
insb
xchg
mulb
jbe
insb
loop
mov
insb
mov
jbe
insb
psubusw
fst
jbe
insb
xchg
data16
aam
mov
repnz
mov
sbb
push
aam
mov
add
jmp
aam
mov
xchg
jnp
inc
aam
mov
insl
xor
scas
jns
push
jbe
insb
push
dec
adc
jbe
insb
xchg
orl
mov
std
jge
xchg
aam
mov
iret
adc
addr16
mov
mov
nop
aam
mov
hlt
mov
aam
mov
mov
jbe
insb
icebp
in
in
jbe
insb
mov
cmp
jbe
insb
inc
mov
popf
aam
mov
pop
mov
cmpsl
aam
mov
out
add
jbe
insb
fxch
cmp
jbe
insb
lds
push
outsb
aam
mov
pop
int3
pop
dec
aam
mov
insb
sub
aam
mov
leave
mov
dec
cmp
xchg
jbe
insb
jae
inc
jns
jbe
insb
mov
cmpsb
push
aam
mov
and
sbb
jbe
insb
mov
jbe
insb
adc
jbe
insb
test
or
out
add
insb
cmp
js
jbe
insb
inc
add
insb
insl
cmc
aam
mov
scas
popa
push
aam
mov
push
aad
inc
aam
mov
je
movsb
out
aam
mov
push
mov
mov
sti
and
ljmp
cld
cs
mov
es
lods
lret
mov
jl
dec
mov
addr16
paddq
insb
repz
mov
aam
mov
mov
jbe
insb
aad
mov
aam
mov
xor
pusha
xchg
jbe
insb
loopne
xor
aam
mov
xchg
ss
aam
mov
inc
mov
xchg
aam
mov
pop
mov
mov
jp
sti
fcmovnbe
jbe
insb
leave
lret
stos
and
jbe
insb
imul
aam
mov
iret
je
add
fists
test
jbe
insb
xchg
mov
mov
adc
jbe
insb
sbb
fistps
jbe
insb
or
jbe
insb
out
aam
aam
mov
jge
cmp
insb
dec
or
insb
aaa
push
lret
lret
mov
inc
mov
mov
sbb
repnz
mov
inc
pop
ljmp
add
aam
mov
mov
out
aam
mov
rcll
mov
sti
mov
aam
mov
cld
insl
int3
sbb
jbe
insb
int3
push
dec
movsb
aam
mov
jns
std
add
into
andb
repz
insb
mov
jbe
insb
adc
je
aam
mov
mov
jbe
insb
int
xor
outsb
pop
sbb
aam
mov
mov
mov
int
aam
mov
imul
push
aam
mov
stos
lret
dec
jp
jbe
insb
imul
rcl
mov
es
mov
jbe
insb
iret
ret
test
aam
mov
jae
add
insb
rolb
mov
adc
jbe
insb
mov
jbe
insb
inc
mov
mov
dec
mov
mov
cmpsl
bound
aam
mov
ss
jns
aam
mov
inc
add
insb
fcmovb
jae
aam
mov
mov
jbe
insb
enter
aam
mov
fs
je
aam
mov
jl
xchg
ss
mov
cli
jecxz
sub
jbe
insb
sub
aam
mov
sub
stc
aam
mov
outsb
shll
insb
and
xchg
paddq
insb
repz
mov
mov
jbe
insb
mov
shl
aam
mov
jne
and
aam
mov
js
xor
lds
pop
aam
mov
dec
movsl
inc
clc
aam
mov
pop
addr16
mov
jbe
insb
inc
sub
insb
pop
lret
mov
insb
push
mov
insb
sbb
mov
pop
lods
sbb
jbe
insb
xchg
shl
push
ja
xchg
loopne
mov
insb
mov
call
insb
inc
call
mov
movsb
sbbb
jbe
insb
pop
insl
aam
mov
scas
xchg
jae
aam
mov
xor
mov
sbb
mov
cmp
out
aam
mov
gs
out
aam
mov
sahf
push
sbb
jbe
insb
jnp
jno
aam
mov
mov
stos
arpl
jbe
insb
fwait
jecxz
aam
mov
or
dec
cmc
aam
mov
push
setg
adcb
jbe
insb
ljmp
insb
test
sbb
insb
xor
mov
lods
repnz
rcl
jbe
insb
jbe
cltd
pushf
aam
mov
rcrl
movsl
aam
mov
or
lock
mov
aam
int3
cli
aam
mov
leave
and
aam
mov
mov
aam
mov
inc
push
mov
sbb
cmp
aam
mov
dec
stos
mov
aam
mov
jno
lds
aam
mov
outsb
add
dec
aam
mov
and
xchg
jno
jbe
insb
mov
fimuls
inc
divb
aam
mov
rcrb
aam
mov
pop
ss
jbe
insb
sbb
jbe
insb
add
jbe
insb
into
movsb
repz
jbe
insb
mov
jbe
insb
inc
out
jge
aam
mov
push
push
mov
aam
mov
jp
lret
adc
imul
insb
or
mov
jmp
cmpsl
call
cmc
les
insb
sahf
not
jbe
insb
shll
stos
aam
mov
push
in
ret
mov
pushf
mov
sbb
jbe
insb
inc
scas
in
int
jbe
insb
outsl
add
inc
aam
mov
mov
aam
mov
lret
sub
insb
and
aam
mov
pop
mov
mov
mov
lea
jbe
insb
mov
jbe
insb
pop
cmp
aam
mov
mull
mov
ret
xor
jbe
insb
pop
ret
aam
mov
or
jbe
insb
mov
cmp
mov
inc
pushf
and
or
sub
jbe
insb
ficoml
pusha
aam
mov
xchg
sub
jbe
insb
dec
insb
jg
jbe
insb
outsl
push
mov
aam
mov
cmp
or
out
ljmp
mov
inc
xchg
aam
mov
insl
add
rcl
jbe
insb
mov
nop
jae
jbe
insb
mov
jbe
insb
dec
mov
insb
lock
roll
jbe
insb
push
jle
mov
inc
es
aam
mov
pop
ret
push
cwtl
aam
mov
pop
movsb
in
aam
mov
popf
into
push
insb
ds
ds
mov
push
fistl
aam
mov
mov
xchg
aam
mov
loop
enter
mov
inc
cmp
std
aam
mov
arpl
insb
push
mov
test
aam
mov
sbb
aam
mov
lock
aam
mov
mov
xchg
test
lea
mov
jecxz
shrb
das
add
xor
mov
insb
mov
jbe
insb
push
sbb
ds
mov
push
and
mov
jne
xchg
aam
mov
push
test
insb
mull
popa
jne
jbe
insb
mov
jbe
insb
push
inc
mov
insb
pop
icebp
dec
push
aam
mov
addr16
fs
aam
mov
jb
mov
jbe
insb
xlat
dec
gs
jbe
insb
sahf
xor
jbe
insb
loopne
sbb
xchg
fsubr
aam
mov
lea
xchg
aam
mov
cwtl
mov
mov
out
sti
or
jbe
insb
mov
jbe
insb
pop
into
mov
insb
dec
fisubrl
aam
mov
out
imul
xchg
adc
jbe
insb
push
rcr
je
jbe
insb
mov
jbe
insb
dec
mov
mov
cmp
or
jbe
insb
push
mov
jle
lret
mov
jbe
insb
shrl
mov
xor
insb
sahf
xchg
sbb
fidivs
mov
xchg
fidivrs
aam
mov
xchg
outsb
adc
insb
xchg
xlat
dec
aam
mov
addr16
sbb
jbe
insb
mov
jbe
insb
aam
mov
into
fcmovbe
aas
aam
mov
push
adc
aam
mov
jp
mov
push
mov
popa
aam
mov
xchg
cmp
jl
jbe
insb
int
sub
aam
mov
outsb
mov
mov
jbe
insb
cmp
mov
imul
mov
dec
leave
mov
jbe
insb
popa
or
aam
mov
call
jbe
insb
cmpsb
xlat
test
jbe
insb
rol
jbe
jbe
insb
push
jnp
aam
mov
shrb
sbb
jbe
insb
mov
jbe
insb
push
jbe
insb
sub
pusha
bswap
mov
pushf
sbb
lea
mov
inc
dec
add
clc
stc
pusha
mov
bts
add
rol
lea
rcl
mov
movzbw
xchg
shl
mov
sub
bswap
add
add
stc
mov
pusha
sub
jnp
add
bt
pushf
cmc
xor
lea
jmp
bt
clc
test
jmp
mov
mov
lea
pop
not
mov
setnp
rep
jmp
mov
mov
movl
push
pushf
pushl
ret
mov
pushf
pushl
ret
bt
mov
clc
test
pushf
sub
test
test
pushl
add
call
pusha
pushf
movl
mov
call
push
mov
not
movsbw
pop
pusha
mov
call
popf
pushf
pushf
pusha
push
lea
jmp
pop
call
mov
pusha
pushl
ret
shl
inc
mov
stc
clc
inc
mov
call
jmp
stc
call
bswap
movzbw
lahf
mov
bswap
cwtl
mov
mov
mov
pusha
lods
jmp
call
clc
call
add
movb
mov
pushf
pushf
popl
movb
mov
dec
push
pushf
call
pusha
mov
movb
movl
mov
mov
movw
pusha
push
mov
pushl
ret
cwtl
mov
lea
push
jmp
call
pushl
lea
call
not
mov
shl
ror
mov
cmp
push
sub
clc
bt
pushf
add
movb
pushf
jmp
lea
pusha
bswap
mov
pop
not
not
not
mov
pusha
pop
mov
movzbw
lea
setne
mov
rep
setle
mov
clc
dec
mov
stc
test
jmp
jmp
bswap
pushf
push
rep
push
mov
clc
mov
call
mov
pushf
push
movl
pushl
pushf
jmp
mov
mov
push
pushl
ret
movl
mov
mov
push
pushf
movb
pushl
ret
pushf
jmp
call
add
jmp
pusha
mov
pushl
pop
mov
bswap
call
pop
mov
movsbl
push
pop
mov
pushf
mov
pushl
mov
push
lods
bts
movzbw
mov
jmp
stc
sub
not
lahf
mov
rol
aaa
add
bsf
call
pushf
pushl
movl
pushl
pushl
pusha
pushf
mov
push
mov
pushl
pushl
pushl
ret
dec
call
movw
push
lea
jne
pusha
pushf
bt
xor
call
dec
pusha
movb
call
cmc
push
pushl
popf
movl
pusha
lea
jmp
jmp
push
mov
jmp
call
xor
call
enter
sub
adc
pop
insb
stos
ljmp
fistpl
shll
xchg
fistps
popf
shr
xor
and
pop
mov
test
clc
.byte
scas
.byte
pop
rep
test
mov
pusha
pushf
call
mov
push
push
pushf
push
pushl
ret
movb
mov
movb
pusha
pushf
pushf
pushl
ret
jmp
lea
push
lods
cmp
bt
jmp
pushl
popf
push
lea
jmp
movw
mov
movb
pusha
pushl
ret
call
call
clc
xor
jmp
call
mov
movw
call
pusha
dec
push
cmp
jmp
call
bts
mov
lea
shrd
add
test
mov
stc
add
shl
dec
sbb
mov
or
xor
clc
or
add
bswap
shld
bts
mov
or
sub
or
sbb
mov
bswap
sbb
bsf
push
bsf
not
pushf
mov
xadd
or
mov
dec
btc
add
mov
shl
add
jmp
mov
call
std
push
std
cmc
pushl
popf
pushl
pusha
pushf
lea
jmp
jmp
call
pushf
mov
call
bswap
pop
bswap
mov
call
mov
lea
jne
push
cmp
clc
xor
movw
pushf
mov
lea
jae
je
push
pushf
popl
call
pop
xchg
pop
push
mov
pusha
pushf
mov
jmp
call
mov
jmp
mov
cmp
clc
test
add
mov
movw
jmp
jmp
pusha
push
pushl
lea
jno
push
jmp
movb
stos
clc
clc
cmp
sub
bt
bt
pushf
rol
pushf
call
pusha
call
setb
dec
aaa
setb
bts
shrd
shl
xchg
add
clc
neg
not
mov
ror
bt
rcr
rcl
mov
dec
bswap
xchg
or
add
bswap
lea
mov
setp
push
lea
popa
pusha
pusha
movb
pushl
ret
push
mov
lea
lahf
call
movzbw
setbe
pushl
mov
pushf
pushf
movb
movl
pushf
mov
mov
pushf
mov
lea
call
pusha
rcr
movb
mov
bt
clc
sub
jmp
stc
sub
movl
jmp
lea
lea
jmp
pushf
pushl
mov
pusha
pushl
push
lea
jg
push
pusha
movl
lea
jbe
pusha
movb
mov
pushf
push
jmp
stc
call
pusha
movl
movb
mov
pushf
push
pushf
pushl
ret
mov
push
pushf
pushl
mov
push
movl
mov
mov
mov
mov
mov
pushl
ret
call
pushf
call
call
mov
pop
bswap
lea
jle
rep
shl
rol
stc
mov
cmp
mov
pushf
bt
mov
clc
add
pushl
mov
pusha
movb
pushl
ret
jmp
pusha
pusha
movl
pushl
jmp
pusha
add
push
pushf
pushf
movl
mov
movl
push
mov
pushf
pushl
ret
jmp
pusha
pusha
rol
pushl
push
pushl
xor
mov
push
call
push
push
mov
movb
push
push
movb
mov
pushf
call
call
push
pusha
mov
pusha
pushl
ret
stc
pushl
popf
pushl
pushl
lea
jmp
call
pushf
movb
dec
pushl
jmp
lea
jne
push
pushl
movl
add
bt
pop
stc
bt
cmpw
pushf
pusha
lea
je
push
pushf
jmp
lea
not
lea
pop
bswap
push
mov
lea
mov
mov
call
inc
clc
clc
cmc
cmpb
jmp
test
popf
push
push
lea
jmp
movw
movb
mov
pushf
pushf
pushf
pushl
ret
rol
bt
xor
jmp
mov
add
clc
call
mov
jmp
sub
pusha
pushf
pusha
lea
jmp
movb
mov
lea
je
pushf
pusha
pushf
popl
call
call
movb
pop
mov
movsbl
movzbl
not
rep
xadd
pushf
adc
shrd
mov
adc
shld
not
mov
call
and
push
pusha
pushf
pushf
lea
jmp
movl
pusha
call
mov
jmp
add
call
push
cmc
test
cld
pushl
popf
push
mov
lea
jmp
jmp
std
clc
cmp
cmp
popf
push
pusha
lea
jmp
lea
je
call
xor
push
pusha
lea
jmp
movl
push
mov
push
pushf
pushl
ret
clc
add
call
rep
lea
rcr
xor
mov
mov
stc
setno
clc
mov
cmc
add
call
jmp
movzbw
mov
lea
rep
bsr
movw
shl
mov
movb
lea
bswap
mov
pushf
cmp
add
jmp
test
cmc
xor
pushf
push
lea
jmp
pushf
mov
pushf
movl
movw
movl
push
call
mov
jmp
movb
pusha
lea
je
bt
cmc
popf
push
push
push
mov
lea
jmp
bt
add
call
call
call
pusha
cmpb
mov
call
pushf
movb
push
movl
lea
jg
push
pusha
mov
pushf
lea
call
dec
stc
jmp
mov
lea
jge
push
pusha
pusha
push
movl
call
jmp
pushf
movw
push
lea
je
push
pushf
pushf
mov
pushf
popl
pushf
pusha
pushf
dec
call
mov
mov
call
pushl
movb
dec
push
call
pushf
mov
jmp
mov
mov
jmp
lea
je
clc
call
lea
je
pushf
cmp
clc
pushl
popf
push
pushf
pushf
push
lea
jmp
pusha
movl
pushl
mov
lea
jno
pushf
mov
jmp
movl
push
call
call
