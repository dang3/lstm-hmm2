xor
add
dec
push
in
imul
lret
imul
xor
pop
out
ja
inc
sarl
ja
ret
jo
cmpsb
add
in
sarb
addb
ss
lods
xlat
test
add
pop
mov
ss
xor
xor
inc
mov
mov
cmp
mov
xchg
stc
aas
scas
call
cmp
mov
sub
fcomp
pop
jns
pop
sub
mov
mov
aaa
or
jmp
dec
lods
cmp
je
das
insb
mov
xor
dec
cli
in
sti
es
push
pop
adc
es
ret
dec
bound
lea
test
mov
mov
or
mov
mov
jge
pause
adc
jp
test
jae
adc
movsb
lahf
fbstp
cs
jge
xor
int
pop
xor
mov
out
test
adc
hlt
imul
loopne
jmp
xorl
inc
out
push
testl
movlps
adc
movsl
or
xor
es
lods
pusha
sub
cmp
xchg
cmpsl
push
jae,pn
inc
lods
cmp
ljmp
adc
andb
xor
inc
insl
push
mov
pop
hlt
fists
xor
jle
push
pusha
movl
call
pushf
cmc
call
lea
je
pusha
add
mov
pusha
pushf
pushl
lea
jmp
movl
mov
pushf
lea
jmp
push
lock
std
std
xorb
insb
dec
mov
ret
jno
aas
push
mov
mov
mov
pop
shlb
lret
and
jae
in
mov
mov
add
jecxz
daa
adc
test
jo
pushf
and
jb
inc
inc
repz
xchg
push
jbe
xchg
jne
pop
les
subb
fldl
loopne
jmp
pushf
mov
push
pushl
lods
jmp
call
mov
cmpsb
ret
cmp
mov
mov
mov
push
cmc
syscall
insl
xor
ror
cmp
cs
inc
pop
mov
out
stos
popf
testb
xchg
pop
arpl
lods
add
push
sbb
adc
jns
inc
xchg
sbb
out
gs
push
jge
mov
cmp
xor
adc
nop
and
cmc
es
mov
mov
push
mov
fwait
adc
mov
xchg
lods
or
pusha
lea
jne
ror
bswap
mov
clc
or
jmp
dec
push
mov
push
add
jg
adc
jae
in
add
cli
sub
daa
push
jae
icebp
and
fwait
and
ja
push
inc
mov
dec
mov
lds
pop
mov
ss
mov
mov
cmp
inc
in
mov
sbb
incl
in
jae
inc
push
in
and
fwait
jno
into
cwtl
push
out
mov
adc
and
sti
push
stos
mov
sbb
xor
add
aad
hlt
cmpsl
int
add
mov
movl
lea
jmp
mov
mov
out
addl
rorl
jmp
cmc
insb
sbb
movsl
jl
ljmp
sbb
cmp
test
jp
mov
lock
mov
rclb
in
cld
fisubs
cld
out
insb
pop
dec
pop
add
push
cld
hlt
cmpsb
push
popf
mov
pushf
pushl
lea
jmp
adc
repz
lret
ds
adc
test
ljmp
pop
add
jmp
pushf
xchg
inc
lds
addl
sub
pop
pop
fisubrl
test
imul
inc
fidivs
sub
dec
jl
popf
xchg
notl
out
stc
daa
xchg
jo
bound
hlt
hlt
movsl
xchg
or
fwait
push
sbb
sbb
rcl
lret
in
push
cld
cmp
push
cmpsl
fwait
xchg
iret
xchg
stos
mov
fildl
xchg
xchg
fwait
xchg
fwait
xchg
xchg
fwait
xchg
stos
xchg
xchg
mov
iret
mov
jmp
lcall
mov
push
jmp
jmp
mov
movsb
jno
outsb
filds
daa
mov
adc
sbb
mov
sbb
pop
cmp
rolb
fimuls
sbb
pop
stos
dec
adc
out
loope
dec
shrl
in
testb
cld
jl
imull
xor
sti
pop
xlat
shrl
hlt
movsl
mov
out
add
push
lret
mov
mov
and
inc
dec
mov
pop
js
sarl
mov
pusha
fiaddl
push
sbbl
imul
xlat
sub
push
jnp
and
mov
insb
ret
ret
repz
sbb
mov
jmp
pop
pop
cmp
fiaddl
inc
pop
daa
int3
push
push
sbb
jae
jno
inc
iret
push
pop
push
xor
adc
mov
or
cmp
es
addr16
mov
lods
lahf
int
fstpt
dec
mov
enter
mov
mov
scas
mov
push
inc
xchg
les
mov
xchg
dec
lret
xor
inc
dec
and
mov
in
out
mov
dec
int3
xlat
cmp
inc
add
add
mov
pop
mov
sbb
adc
jecxz
cmpsb
or
push
inc
dec
fidivrl
mov
mov
dec
lock
jle
dec
sub
fldcw
add
cwtl
call
negl
mov
shll
mov
mov
out
adc
ret
pop
mov
fisttpl
insb
cmpsl
sbb
cmpsb
inc
shlb
testl
adc
aas
cwtl
imul
cli
sbb
pop
aas
popa
ret
lea
inc
mov
mov
fldl
cmp
sbb
cmp
mov
out
cltd
mov
jne
testb
je
mov
mov
or
sub
popf
aaa
and
push
nop
xchg
sub
clc
hlt
jl
bt
push
cmp
call
bt
mov
test
and
bt
bt
clc
add
bt
jmp
pushf
inc
lea
jnp
pusha
pushf
pushl
lea
call
call
jmp
push
je
scas
or
jne
or
jl
xlat
imul
mov
lahf
fsubl
inc
ljmp
stos
ljmp
jbe
ficoml
inc
dec
sbb
xor
xchg
cmpl
aas
sub
jle
lret
aas
xor
pop
iret
ds
es
es
repnz
in
fstl
dec
add
push
xor
xlat
stos
fidivrs
jge
lock
cwtl
push
cltd
dec
jecxz
pushl
call
pop
sti
stos
xchg
sub
jg
dec
into
xchg
jge
and
lret
data16
cmp
outsl
jp
push
mov
jge
xchg
in
adc
pop
inc
iret
dec
in
test
mov
mov
je
mov
push
xor
dec
xor
mov
mull
and
hlt
mov
cmp
push
les
add
push
xor
adc
cmpsb
daa
test
sbb
jmp
daa
andb
pop
jo
mov
xchg
mov
cld
adc
inc
std
jns
ret
inc
int
add
int
push
pop
inc
and
out
outsl
push
int
mov
mov
push
or
push
test
jbe
adc
mov
push
inc
repnz
dec
pop
je
push
mov
test
jg
jl
sbb
div
pop
scas
xor
hlt
mov
add
aam
add
cmpsl
xlat
pop
jo
cwtl
adc
das
aas
xchg
and
popf
test
or
mov
xchg
sbb
inc
out
push
sbb
cmpsl
push
push
addl
mov
xor
jl
cmp
push
shll
out
fmuls
xor
jmp
push
popf
rcr
adc
dec
fisttpl
ds
stc
loopne
mov
xor
hlt
mov
and
or
inc
mov
setge
mov
push
lea
mov
lea
dec
mov
jmp
jmp
movl
push
movl
mov
push
movb
lea
jmp
mov
sbb
lods
add
les
fadd
dec
mov
lret
in
mov
adc
xchg
aaa
scas
icebp
cmp
sbb
pushf
cmc
jne
fcoms
imul
mov
push
lds
sub
or
gs
mov
xor
pop
lods
inc
in
or
icebp
pop
pop
cmp
push
iret
dec
mov
hlt
pusha
xchg
clc
in
ja
pop
popa
rcl
xchg
rcl
test
inc
cld
hlt
mov
mov
repnz
ja
hlt
xchg
push
call
push
cmp
lods
jl
xor
ror
xor
pop
push
lods
cld
pop
pop
adc
sbb
mov
jns
jecxz
out
leave
hlt
sbb
push
mov
out
push
inc
cmp
scas
flds
sub
std
mov
sti
ds
movsb
cmpsl
add
rcrb
xorb
nop
into
xchg
mov
adc
xor
mov
cld
hlt
mov
mov
je
or
push
movl
xor
lea
jmp
imul
test
clc
add
pusha
movw
lea
jmp
jmp
jmp
movl
push
lea
jmp
cmp
test
and
push
push
repz
pop
je
pusha
lock
pushf
mov
repz
sbb
in
adc
iret
fsubl
push
lock
cmp
and
stos
jecxz
jbe
xchg
jns
mov
sub
adc
ficompl
cmpsl
or
daa
adc
jge
pushf
lea
jb
pushf
bt
cmpb
jmp
jmp
ror
mov
bsf
sar
bswap
mov
add
shld
rcl
mov
bt
xor
push
jmp
cli
ljmp
fnsetpm(287
xlat
pop
pop
lret
fmull
mov
cmp
mov
cmp
rep
dec
cmp
ja
fs
jge
pop
dec
mov
adc
sahf
imul
xor
scas
stos
mov
adc
mov
push
xchg
ja
pop
inc
out
mov
push
cmp
inc
pop
aas
mov
out
lds
les
cld
hlt
sahf
mov
pop
cmp
je
jae
xchg
mov
test
shrd
lea
mov
neg
sub
mov
test
call
dec
call
movl
pusha
pushf
push
movl
pushf
pushf
pushf
lea
jmp
pusha
mov
call
outsb
push
push
jnp
testb
dec
ret
cmp
cmpsb
sub
sbb
adc
add
dec
add
xchg
mov
jno
mov
scas
mov
or
push
jno
mov
mov
pusha
data16
int
popl
shlb
dec
xchg
or
xor
ret
pusha
sti
sahf
mov
xchg
add
mov
shrb
std
adc
fildl
sbb
jne
in
lods
add
imul
aam
test
adc
push
cmp
jmp
jo
dec
mov
in
fadds
negl
ds
inc
enter
mov
fisttpl
adc
cs
sahf
movsb
xor
repz
fcomip
cwtl
cmp
es
add
xchg
icebp
cmp
pushf
dec
jo
ss
dec
adc
mov
es
dec
mov
cs
es
sub
xor
mov
popa
hlt
je
jl
icebp
jo
sbb
cmp
mov
repz
add
push
mov
shrl
popf
sbb
into
pusha
push
lea
je
xchg
lea
pushf
movsbw
movzwl
movsbl
lea
movzbw
lea
mov
jmp
jmp
push
pusha
mov
mov
jmp
jb
fidivrs
cmc
adc
add
ds
adc
or
dec
call
adc
push
bound
push
imul
nop
push
movsb
adc
in
int
in
mov
stos
sbb
xchg
add
frstor
scas
add
scas
arpl
fiadds
ljmp
sub
repz
or
and
mov
aaa
fnstenv
negb
les
xchg
fnstcw
pop
and
push
cmc
enter
mov
ljmp
dec
jmp
inc
scas
inc
lea
jl
in
jnp
lock
mov
aam
xchg
cwtl
sbb
xor
or
hlt
fcmovnu
mov
xorb
lods
and
xchg
pop
frndint
je
rolb
adc
xchg
mov
idiv
pop
or
jne
mov
cld
hlt
fwait
je
test
vmulsd
dec
cld
jmp
arpl
push
push
jge
lods
adc
or
test
cld
ud0
imul
and
js
enter
pushf
pop
cmp
out
imul
nop
sub
rcrl
mov
push
jge
mov
cmpsb
xchg
inc
rol
or
outsl
and
add
ja
jns
jmp
shll
je
add
test
dec
dec
mov
sbbb
xchg
jg
outsl
cld
hlt
fwait
dec
dec
icebp
in
xlat
loope
hlt
adc
das
aas
xor
popf
popl
or
mov
mov
push
loope
jp
sub
add
cmpsl
adc
jbe
idivl
xor
outsl
add
push
inc
mov
cs
pop
xchg
hlt
sbb
inc
pop
fmull
aam
test
inc
movsb
popf
idiv
hlt
lcall
sub
subb
add
call
inc
mov
movb
lea
jmp
jmp
in
call
call
pushf
call
cmp
sub
bt
cmp
test
movb
cmp
pushf
jmp
mov
pusha
movl
pushl
pusha
pushf
movl
pushf
lea
jmp
repnz
push
jmp
add
stc
cmp
call
push
xchg
movzbl
movw
movsbl
pop
movl
call
out
call
inc
int3
fmull
xor
lods
mov
sbb
lods
fs
add
sub
sub
mov
pop
pop
push
subb
xor
push
jmp
ror
adc
jns
push
jl
rol
jne
mov
fs
es
mov
popa
add
fimull
mov
cltd
stc
mov
daa
mov
ret
cmc
sub
fnsave
fdivr
sahf
jg
mov
dec
xchg
setg
push
gs
punpckhdq
sub
ror
cmp
xor
dec
scas
xchg
adc
popa
aam
mov
lcall
cli
imul
fsubs
mov
aad
inc
aaa
hlt
imul
mov
xchg
inc
mov
stos
and
sub
xchg
jge
pop
fcom
dec
jl
flds
testb
add
and
mov
inc
sbb
cmpsb
cld
hlt
cltd
sahf
push
aam
inc
and
mov
add
ficomps
mov
call
ljmp
mov
inc
and
xchg
sbb
sbbb
push
adc
mov
ja
jmp
and
mov
jmp
arpl
lret
test
loopne
popf
pop
jmp
call
push
pop
lret
xor
and
jle
loopne
xor
lahf
mov
lods
cmp
sub
test
jle
pop
push
push
sub
sub
pop
je
add
pusha
test
insb
pop
lock
add
pushf
xchg
add
jmp
das
lcall
call
jmp
pushf
lea
jne
lea
bts
mov
xor
sbb
bt
mov
sub
pushf
lea
bt
sub
pusha
test
bt
pusha
pushl
popl
pushf
call
mov
jmp
pushl
pushf
lea
jne
cmp
mov
adc
mov
sub
rcr
shr
mov
jmp
ja
setg
lea
lea
pop
setg
mov
call
test
push
jmp
jmp
shrd
sub
test
mov
pushf
jmp
cmpl
jg
gs
lret
popf
lods
scas
mov
xchg
dec
ss
cmp
repz
jo
leave
jnp
iret
fisubl
ss
outsl
jbe
jle
aad
inc
mov
stc
pop
mov
pop
sti
xchg
ja
jmp
sbb
or
pop
rcll
jbe
push
into
ret
sahf
jg
cld
hlt
xchg
call
fiaddl
add
add
das
not
pushl
dec
pushf
bt
neg
test
add
call
jmp
lcall
jno
push
sbb
jo
rcll
ret
call
jnp
lods
repz
sbb
stos
or
dec
rcll
pop
stc
and
sti
xor
add
jle
jae
cmpl
xchg
cli
fs
popf
sbb
xlat
lock
rcr
or
dec
pop
insb
sub
jno
fdivr
hlt
xchg
mov
and
add
js
mov
fisubs
lock
push
rcr
enter
into
outsl
lret
push
fisttps
pop
les
rcr
icebp
push
jmp
pop
add
inc
mov
test
insl
dec
inc
inc
add
popf
shlb
xor
cmp
pop
pop
or
pop
fnsave
in
je
inc
push
mov
cmp
cmp
fidivrl
and
xchg
pusha
pop
in
call
aaa
push
sahf
shrl
mov
sahf
lods
popf
sahf
mov
popf
test
add
mov
lret
rcrl
push
lods
fs
push
push
sbb
xchg
pop
dec
mov
imul
into
loopw
es
popf
add
xor
push
lcall
enter
or
imul
fwait
in
inc
mov
inc
mov
lock
jae
sbb
lret
scas
ljmp
mov
fnstsw
xchg
lock
icebp
jno
stos
inc
jmp
mov
sarl
push
cwtl
cltd
stc
aam
push
xchg
mov
lds
adc
xchg
cmpsb
cmp
pop
or
out
mov
push
dec
inc
pop
adc
dec
mov
pop
cmp
or
inc
movsl
xchg
cld
hlt
xchg
div
adc
pop
lea
mov
cmc
outsb
mov
imul
push
outsl
call
fistl
adc
pop
xchg
in
add
add
jb
jne
mov
mov
adc
push
push
sub
xchg
push
sub
adc
fdivs
mov
inc
or
mov
mov
je
mov
sbb
cltd
neg
stc
add
test
clc
pushw
popfw
jmp
cmc
cmc
push
or
push
call
bsf
pusha
add
bts
movl
stc
bts
rcr
movzbw
mov
sub
test
test
push
test
cmp
jmp
fimull
jg
in
outsl
pusha
aam
add
fisttps
or
lods
dec
mov
push
ret
scas
out
adc
push
sub
sub
test
mov
push
hlt
fimuls
hlt
xchg
inc
clc
add
push
sbb
or
xchg
xor
and
fists
push
push
and
js
lds
jecxz
es
and
adc
adc
mov
lret
arpl
jmp
aas
mov
mov
cmp
imul
push
cmp
pop
or
rcrb
xor
outsb
loope
mov
hlt
xchg
jle
sbbb
jae
stc
fldenv
arpl
push
cmp
je
add
int
ret
loope
test
dec
xchg
and
sarb
mov
xor
inc
xchg
sbb
add
and
dec
popf
adc
sti
mov
adc
test
push
ss
jno
es
xor
outsl
into
push
sbb
ffreep
scas
or
cmpsb
jno
inc
je
stc
jae
cmpsl
push
stc
movsb
cmp
jb
roll
xchg
jae
fstl
hlt
xchg
ss
mov
test
adcl
decl
je
mov
xchg
jae
cmpsl
repz
pop
leave
add
aad
pop
cmpsb
pop
or
out
aam
mov
xchg
mov
or
or
xor
dec
inc
xchg
cld
popa
jecxz
mov
mov
pusha
cld
hlt
xchg
pop
or
or
lea
jae
pusha
cmp
pushf
pusha
pushl
pushf
lea
jae
push
jmp
pop
sub
insl
pushf
lods
test
jg
pop
jle
cld
imul
xorl
fs
cmpsl
sbb
out
cld
inc
mov
sub
or
dec
mov
sti
sub
sbb
popa
repnz
xchg
mov
cmpsl
jo
clc
mov
test
lds
mov
test
ror
mov
loopne
xchg
ds
fisttps
pop
dec
jb
sbb
pop
dec
add
or
in
xor
jne
ficompl
sbb
lret
and
in
ljmp
icebp
in
push
out
iret
xlat
aas
int
ja
popf
xor
add
jns
mov
imul
or
inc
int
xchg
shrl
test
mov
fwait
xchg
out
jb
imul
lods
xchg
mov
aad
repz
jg
pushf
stos
lret
jecxz
popf
in
mov
gs
cmp
fadds
addr16
fnsave
push
mov
stos
pop
jp
js
xchg
cmp
jecxz
in
stc
in
mov
lods
adc
sbb
in
push
mov
and
cmp
rol
into
pop
mov
adc
aas
test
pop
sbb
sub
dec
cmpl
aaa
test
pop
je
mov
aas
mov
daa
push
jmp
push
lods
lahf
or
hlt
lds
mov
cld
hlt
xchg
fcmovbe
cli
pusha
mov
js
lea
pop
pusha
pushl
ret
pusha
cmp
clc
pushf
add
call
lea
jne
call
movl
push
mov
push
pushf
mov
movb
pushl
ret
sub
paddusw
pop
nop
mov
jg
jns
loope
jl
jp
dec
add
lret
xchg
aad
jnp
fnstenv
ds
sahf
mov
dec
shrl
push
pop
shll
addl
dec
mov
ret
jne
push
ret
dec
insl
inc
sahf
push
xchg
add
add
mov
push
fmuls
clc
nop
testb
adc
push
repz
sbb
rorl
or
cs
arpl
dec
xchg
data16
and
dec
cmp
inc
test
std
sbb
insb
sar
sub
and
pop
movsb
fs
mov
cltd
push
repz
inc
jno
flds
adcb
mov
lods
orl
mov
fadds
jbe
rorl
jbe
je
xchg
andl
mov
and
sub
jg
xchg
movsb
scas
mov
lcall
pop
roll
data16
xchg
in
popf
inc
movsb
mov
mov
arpl
cmp
push
lods
adc
aam
sub
sbb
jb
scas
and
cmp
fwait
in
or
es
aam
mov
stos
pmaddwd
sub
or
adc
gs
fs
cs
outsl
std
test
mov
inc
push
inc
sub
push
hlt
mov
pop
pop
adc
or
out
clc
lds
dec
lods
pop
je
or
out
pusha
test
cli
and
in
out
push
mov
lcall
sub
mov
fs
ja
pusha
pusha
jmp
les
inc
into
insb
or
sbb
xchg
sbb
sbb
cwtl
adc
push
mov
sbb
imul
sbb
lds
inc
mov
sarb
mov
push
xlat
test
mov
sbb
jecxz
push
clc
in
es
stc
mov
rclb
mov
pusha
ds
xlat
xchg
sbb
mov
jmp
aas
dec
and
xchg
jp
rolb
mov
repnz
incl
add
je
outsl
fs
gs
imul
add
add
xor
jmp
xchg
outsb
and
popa
sub
subl
pop
enter
push
adc
and
xchg
push
lret
dec
dec
cs
inc
push
push
lea
aad
pop
cmpsl
adc
test
ficoms
or
std
ja
lods
dec
jno
mov
scas
mov
lods
stc
adc
add
xor
vmwrite
sbb
std
cld
hlt
dec
adc
jno
jecxz
pop
or
popf
mulb
sub
imul
sbb
xor
loop
jmp
imul
addb
add
sbb
push
add
add
add
add
add
rclb
add
inc
adc
add
call
add
add
add
xor
lea
jmp
jmp
pushf
lea
ja
setl
push
dec
inc
lea
not
inc
jmp
pushf
movl
pushf
call
or
icebp
mov
sub
add
imul
fisubrl
jns
insb
aam
pusha
cmpsl
pop
dec
jg
mov
or
cmp
pop
push
pop
les
aaa
test
imul
jge
leave
ds
xchg
add
xchg
cld
hlt
mov
or
add
inc
pushf
pushl
push
mov
lea
jae
pusha
lea
call
call
pushf
push
push
stos
movb
pusha
push
lea
jmp
movb
jmp
adc
nop
add
xor
outsb
pop
lret
pop
cmp
je
ss
sub
cmp
clc
mov
pusha
dec
cmp
loop
pop
les
insb
insl
call
lea
aad
inc
adc
sub
data16
pop
sub
rcrl
popa
mov
fists
push
mov
adc
cs
xchg
sbb
jne
rclb
rolb
jmp
xlat
jp
test
mov
adc
xlat
mov
xchg
jne
push
inc
mov
xlat
and
sub
sub
cmpsl
mov
daa
dec
inc
xchg
pop
ret
sbb
and
push
rcrl
add
xchg
pop
inc
and
popa
daa
pop
pusha
mov
pop
cld
cmp
xlat
aam
adc
mov
pop
xor
hlt
mov
outsb
lea
pusha
push
pushf
jmp
pusha
or
pushf
jmp
push
call
mov
lea
jne
jle
pushf
pushf
mov
push
mov
pusha
mov
call
shl
xor
lea
push
pop
pop
not
call
or
jmp
out
sub
sub
movsl
sub
xchg
cwtl
adc
and
dec
mov
mov
add
mov
and
adc
cmp
inc
cs
jmp
mov
rorl
mov
add
popa
pushf
lea
jne
cwtl
mov
pushf
lea
jmp
dec
lods
data16
out
in
inc
cmp
sbb
push
sub
or
roll
loop
fsubl
adc
repz
pop
lea
ror
mov
xchg
es
inc
add
pop
xchg
sahf
incl
dec
add
mov
mov
sub
inc
movsb
sets
hlt
mov
inc
call
pushf
mov
test
mov
add
pusha
cmp
test
mov
mov
lea
jne
jmp
movb
movb
push
lea
je
pusha
pushf
pushl
pushf
lea
jmp
aaa
adc
mov
xor
fadd
fistpll
sarl
dec
dec
lds
iret
dec
xor
rcl
in
and
cltd
iret
dec
mov
lds
mov
and
fildll
mov
xorb
test
lds
popf
inc
jge
sbb
cli
in
repnz
in
xchg
sub
mov
or
sub
movsb
xorb
pushl
push
xchg
stos
ret
sarb
xchg
mov
mov
adc
hlt
mov
dec
movzbw
movsbw
call
push
lock
std
std
mov
data16
ret
jo
dec
adc
lret
pop
pop
sub
pushf
mov
pop
test
xor
xlat
in
jge
mov
dec
aas
and
aam
push
leave
add
loopne
and
test
ljmp
add
xchg
inc
jbe
push
in
xchg
push
mov
rol
test
or
jmp
sbb
inc
mov
pusha
movw
movb
lea
jmp
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
inc
pusha
pushf
lea
jmp
push
call
cmc
stc
bt
sub
pushf
pushf
lea
call
pusha
lea
jae
mov
setb
mov
push
setne
inc
jmp
jle
push
push
push
jmp
pusha
push
mov
pushf
inc
cmc
clc
clc
movl
rol
jmp
cwtl
fisubrs
ror
rcrb
dec
mov
pusha
push
scas
inc
fbstp
fistpll
fsubrl
popf
add
mov
out
push
insl
push
insl
or
or
hlt
and
mov
cmpsl
or
cmp
cmp
ljmp
imul
push
dec
adc
inc
cld
hlt
mov
leave
fcos
jne
popl
push
jmp
inc
sbb
loope
add
out
add
pop
fldcw
in
out
pop
mul
xchg
jb
push
cmp
inc
push
jbe
or
aam
jae
dec
imul
push
xor
add
fdivr
lcall
sbb
pop
and
in
es
cmp
xor
xchg
aaa
sbb
add
push
inc
icebp
ljmp
xor
cltd
pop
imul
xchg
adc
loope,pt
mov
dec
loop
clc
enter
inc
enter
sub
mov
je
push
imul
test
fcomps
mov
xchg
arpl
push
fisubs
dec
sub
out
movsl
adc
xlat
loopne
add
inc
sub
or
mov
lret
dec
push
pop
stos
loope
adc
lcall
scas
push
loope
add
push
lret
jb
popa
sbb
pop
mov
ds
rcrl
int3
mov
iret
xchg
aad
push
lods
decb
and
lcall
lea
lea
jmp
fidivl
leave
in
lahf
add
pop
pop
out
push
jno
inc
mov
adc
lods
or
jno
sar
mov
aas
es
push
mov
fs
jne
xchg
je
repz
adc
dec
pop
repz
and
cmpsl
shll
mov
inc
mov
pop
rorb
out
mov
pop
push
idivb
sub
pop
test
inc
mov
inc
push
xchg
xor
fwait
std
jns
ss
inc
xor
repnz
sub
cld
hlt
xchg
clc
clc
pusha
mov
jmp
pushf
lea
jb
jmp
call
seto
movl
lahf
cwtl
jmp
lea
mov
mov
lea
lea
pushf
jmp
call
sbb
in
mulb
inc
daa
pop
scas
adc
loopne
xchg
xor
clc
xor
sbb
repz
inc
es
mov
dec
bound
test
cmpsl
mov
fwait
xor
arpl
xor
dec
js
aas
pop
sub
mov
inc
ret
lods
xor
push
jbe
cs
cmpsb
pop
mov
cld
adc
pop
dec
jp
push
pop
ss
data16
and
inc
enter
scas
push
jg
cmp
cli
add
or
out
loope,pn
ds
pop
xlat
sub
xchg
clc
pop
or
ret
and
pushf
push
push
scas
arpl
mov
push
xchg
mov
inc
xor
inc
xchg
insl
shll
xchg
xor
add
sub
jo
je
xor
xchg
jle
out
jbe
in
add
jb
roll
sbb
loop
jp
pop
and
test
mov
in
dec
je,pt
jbe
mov
lret
out
outsl
pop
inc
pop
daa
xor
adc
lods
jno
repnz
push
xor
and
jp
in
int3
jnp
fbld
inc
movsl
mov
mov
bswap
rorl
lahf
inc
addr16
loope
xor
lret
mov
mov
inc
lock
mov
or
sub
cs
stos
int3
add
movsl
pushf
sti
dec
inc
in
mov
xor
repz
test
insl
leave
clc
add
push
arpl
ud2
enter
dec
dec
push
push
xchg
mov
es
xor
mov
mov
jbe
repz
test
dec
incb
out
not
push
mov
cwtl
daa
sub
pop
ja
jmp
stc
out
or
push
out
sti
sub
test
push
movsb
mov
mov
adc
paddq
ja
lods
scas
sbb
ja
jns
dec
scas
dec
enter
ds
cvtps2pd
xchg
or
outsb
jbe
sub
cmp
dec
mov
jecxz
repnz
divl
dec
ljmp
lds
in
and
mov
sub
sbb
lret
mov
push
and
stc
xor
cmp
add
push
cmp
ffreep
leave
jp
push
movl
je
enter
mov
sub
mov
xchg
fildl
js
ret
outsb
ss
cmpsl
xchg
lea
stc
push
mov
dec
mov
push
sub
pand
dec
imul
in
scas
insb
sbb
inc
cmp
cmpsb
fwait
daa
xor
in
addl
maskmovq
mov
mov
push
ret
jo
pop
mov
add
leave
adc
test
pop
nop
inc
mov
cmp
cmp
lahf
into
xor
pop
sbb
stos
stos
pop
stos
mov
mov
cmp
lock
mov
stos
ret
les
pop
out
clc
clc
sbb
mov
sbb
cmp
mov
jecxz
das
push
pop
push
shlb
xchg
inc
or
mov
popa
add
testb
jns
inc
data16
mov
add
pop
lock
mov
xor
sub
rolb
lock
cmp
lods
sub
pop
and
sete
mov
pusha
cmovb
add
add
sarl
mov
cmp
aam
std
mov
dec
xchg
sub
sub
jb
mov
jnp
nop
jns
pop
push
pmovmskb
out
push
push
pop
cmpsb
jl
out
xor
in
sub
sysret
int3
lods
hlt
xor
xchg
mov
scas
js
xor
mov
sub
ss
inc
xor
mov
js
xchg
mov
cmp
repnz
add
sbb
sub
jp
insl
scas
dec
xchg
mov
test
cmp
push
and
ja
test
mov
inc
repnz
adc
lret
imulb
daa
inc
mov
jge
mov
test
mov
xor
mov
cmp
push
mov
add
shrl
fstpt
xchg
jge
movsb
xchg
ljmp
ret
sub
out
bound
push
in
inc
mov
pop
mov
mov
leave
fbld
testl
hlt
push
push
setge
sbb
cwtl
xchg
out
sub
fwait
mov
into
jns
or
mov
aam
mov
fidivrl
imull
and
lods
push
repz
pop
add
cmp
inc
bnd
add
or
pushf
adc
das
pop
in
out
mov
sbb
push
out
mov
stos
cmp
dec
dec
out
push
js
push
mov
fs
popf
scas
stos
shrl
inc
out
or
mov
in
sti
jmp
test
divb
mov
push
sub
xor
scas
jbe
cwtl
sub
rdpmc
sahf
push
inc
cmp
aaa
int3
xchg
mov
test
lds
popf
push
xchg
xchg
lahf
ret
scas
cli
push
mov
mov
mov
sub
mov
and
mov
mov
movsl
inc
inc
je
movsl
fists
xor
mov
add
inc
pop
push
xor
jno
jl
dec
jl
lahf
data16
pop
add
arpl
push
sub
xor
ret
and
movmskps
xchg
mov
or
push
dec
dec
push
psrlq
mov
sub
push
or
scas
lock
mov
stac
mov
jb
dec
xchg
xchg
insb
scas
inc
fnstenv
ret
cmp
dec
sar
aas
jp
pop
dec
imul
jl
mov
dec
mov
cmp
fwait
dec
inc
xchg
inc
fsubrp
mov
mov
mov
pusha
js
cmp
in
dec
fld
movsb
and
xor
lods
mov
clc
fs
push
mov
pushf
sti
xchg
addl
inc
adc
flds
add
xchg
imul
or
ret
scas
daa
xor
inc
inc
mov
push
into
stc
mov
jg
adc
sub
insb
and
clc
lods
sub
sbb
pop
dec
jmp
call
inc
mov
in
roll
mov
stos
out
lcall
out
xchg
pop
and
cmpsl
mov
fdivs
shlb
call
negb
dec
pop
push
xlat
jge
loope
jmp
push
push
mov
aas
pop
adc
sbb
add
icebp
dec
push
orb
jb
fldt
xchg
mov
push
divb
pop
inc
xchg
pop
aas
push
push
mov
cmp
es
sbb
dec
lahf
fidivrs
pop
pop
out
push
mov
xor
ret
stc
dec
cmp
adc
lock
jle
rcr
inc
jo
outsl
inc
pop
cs
push
jp
stos
mov
jns
insl
call
adc
jge
push
pop
shlb
jl
cmp
test
fstps
popf
xor
aas
push
push
pop
movl
cltd
inc
jb,pt
push
or
push
sbb
or
push
cmp
xchg
stos
cwtl
sub
mov
sub
push
xor
jg
arpl
mov
inc
jmp
roll
imul
jg
icebp
ds
in
loopne
idiv
mov
fistps
mov
mov
test
movsb
daa
lcall
mov
mov
dec
into
cmp
dec
or
sub
xlat
lahf
pop
mov
aas
jp
outsb
mov
shll
push
mov
imulb
negl
addr16
mov
adc
out
and
in
iret
mov
mov
adc
inc
scas
mov
cmpsl
mov
cmp
nop
pop
sbb
adc
xor
xchg
dec
sub
scas
push
adc
mov
or
rol
add
push
push
lods
xor
push
mov
inc
mov
dec
pop
pushf
add
mov
or
mov
test
mov
lods
adc
pop
inc
push
push
lods
stc
jbe
push
push
dec
xchg
cmpsl
les
pop
dec
mov
or
mov
lret
insl
sub
stos
pop
incl
clc
adc
push
sub
push
scas
add
pushaw
cmpsb
cmp
insl
push
push
popa
in
cmovge
iret
jns
jp,pn
xor
shl
aad
pop
sub
mov
xor
pusha
xor
mov
and
dec
cs
sub
mov
lret
stos
jno
test
lret
jno
arpl
lds
and
pop
or
inc
xor
scas
scas
stos
xchg
out
icebp
popa
dec
pop
jp
insb
jo
js
bound
xor
mov
iret
push
mov
adc
jns
fcomps
lcallw
or
mov
lods
out
mov
push
push
sub
inc
minps
dec
inc
or
mov
dec
pop
dec
dec
daa
mov
mov
rol
xor
sub
jmp
inc
sbb
xchg
sub
addr16
cmpl
cmp
sbb
imul
in
insl
sahf
das
out
call
pusha
cs
dec
mov
ljmp
cmovnp
inc
fcomi
pop
out
daa
push
cmp
or
push
lahf
xchg
cmp
xor
or
mov
pop
ljmp
xor
dec
push
mov
je
pop
jecxz
lock
jb
adc
in
nop
cmpsl
inc
in
jg
xor
fidivrl
in
std
sub
pop
push
scas
or
scas
dec
das
cmp
orb
xor
adc
cmp
inc
outsl
add
mov
add
lcall
mov
mov
mov
scas
xor
or
jecxz
xchg
sti
imul
das
mov
leave
add
mov
pop
out
cmpsb
pop
leave
negb
push
outsb
das
mov
cmp
les
daa
lds
xor
dec
js
add
push
sub
cmp
lcall
aas
fmull
add
mov
daa
dec
cmp
ret
lahf
pop
mov
pop
pop
out
mov
dec
cmpl
out
sub
or
data16
xchg
jl
cltd
push
shrl
and
mov
dec
divb
and
scas
or
push
inc
call
lahf
mull
adc
sbb
out
or
test
sti
movntq
xchg
dec
mov
push
inc
jl
push
dec
cld
shlb
xchg
pop
lcall
push
mov
pop
das
jb
mov
pop
mov
jmp
loopne
xor
pop
gs
lods
add
test
push
ret
xchg
mulb
pop
mov
cmc
sub
movsbl
repnz
cmp
test
or
sbb
call
mov
jns
das
xor
and
xor
mov
pop
jle
inc
ds
test
scas
ds
sub
lods
mov
and
lea
xor
aam
or
mov
sbb
jns
orb
sub
test
jo
es
sub
out
cmp
cmp
mov
sub
pop
icebp
sbb
das
das
dec
jmp
dec
sbb
jae,pn
cmp
sbb
xchg
push
push
out
fsubrl
or
das
cs
xor
dec
cli
js
sbb
cmp
xchg
insb
mov
cmp
scas
ss
xchg
jb
add
adc
daa
scas
jmp
sbb
ficoms
cmp
cmc
lock
in
pop
xchg
inc
stc
sbb
push
decb
or
inc
add
adc
xor
clc
cld
cmpsb
nop
mov
insb
ss
push
push
jecxz
mov
es
push
jmp
push
mov
xchg
arpl
movsb
cmpsl
mov
sub
xchg
roll
inc
push
sub
bound
out
aad
xchg
push
inc
fisubl
pop
sub
jge
and
imul
pop
hlt
sub
adc
xlat
push
stc
pushw
cmpsb
mov
push
add
jmp
mov
jle
scas
push
xchg
cmpsb
aas
jbe
pop
cs
mov
xchg
imul
popf
push
imul
out
mov
push
fistl
dec
push
pop
cs
pop
imul
stos
sub
jle
les
add
xchg
xchg
add
xor
das
add
aad
addr16
pop
cmp
pop
lcall
imulb
rclb
or
ss
stos
ficomps
ds
sub
cmpsb
popa
cs
jmp
mov
pop
jecxz
out
jns
repnz
and
inc
jbe
xchg
popl
imul
fimuls
inc
mov
push
cltd
gs
xor
lods
and
cmc
pop
sahf
mov
xchg
outsb
cmc
es
xchg
dec
push
inc
pop
pop
push
subb
xor
outsb
shl
int3
shrb
es
dec
xchg
dec
cs
mov
into
ficoms
lcall
jns
push
jnp
jae
cmp
jp
adc
xor
dec
jnp
dec
shrb
adc
inc
stos
ljmp
out
leave
mov
dec
incl
jae
jp
pop
fidivl
push
insb
xchg
js
mov
jnp
lret
lret
jecxz
lret
shlb
lcall
push
stos
inc
test
dec
xor
imulb
outsb
mov
dec
inc
enter
ss
sub
jg
jo
addr16
out
cmp
into
push
nop
dec
push
adcb
mov
ljmp
lret
pushl
orb
jns
mov
ds
lret
mov
inc
push
test
dec
ret
mov
mov
lods
pop
bound
pop
pop
subl
sbb
mov
bound
cld
pop
inc
jp
cmp
mov
push
int3
add
je
out
pop
rol
sub
dec
incl
pop
sub
stos
or
jno
cwtl
or
push
push
mov
xor
cmpsl
or
sub
adc
lods
pop
lods
pop
push
jl
xor
loope
xor
lea
xchg
sbb
rolb
sti
inc
push
std
rorl
inc
cmp
test
stc
or
repz
xchg
test
jge
and
push
out
insb
bound
fcmovnu
xchg
inc
mulb
cmp
or
xor
push
out
das
or
xchg
loope
pushf
xchg
mov
das
leave
and
xchg
es
clc
sbb
mov
cmp
ljmp
mov
push
push
cmp
jmp
out
xor
dec
loope
lods
sub
sub
js
fiadds
ret
pop
lods
ret
enter
paddsw
sbb
ds
adcl
mov
cltd
adc
in
jbe
cs
xchg
shll
int3
push
arpl
push
clc
int
movsb
aad
les
jg
pop
sbb
push
into
loope
mov
fists
dec
mov
es
imull
clc
pop
ss
daa
cmpb
xor
push
pop
notb
loope
idivl
push
pop
jbe
sbb
jne
mov
push
pop
fcoml
int
out
addr16
sub
pop
hlt
scas
bound
movhps
pop
cmp
inc
mov
or
lods
call
add
mov
push
faddl
stos
sub
jmp
cli
pop
lock
sub
xor
xchg
data16
add
or
daa
aam
repz
cs
mov
sbb
mov
popf
cmp
dec
out
add
xchg
mov
pop
push
outsl
push
andb
clc
movq
dec
jmp
scas
out
out
sub
imul
sti
xchg
inc
xor
call
mulb
and
jb
mov
daa
stos
sbb
adc
pushf
stos
arpl
aam
and
add
push
je
pop
push
sub
cmp
dec
out
hlt
cmp
je
inc
fcoms
sbb
insl
pop
sbb
ljmp
jb
mov
call
mov
dec
mov
push
repnz
mov
pop
mov
ds
sub
cmpsl
aaa
mov
outsl
lahf
addl
clc
sub
ret
xor
cmp
adc
mov
cmpsb
cmp
call
rcrb
xchg
pop
test
xor
pop
cmp
ljmp
push
fwait
cmp
or
div
xchg
push
mov
call
jnp
push
inc
adc
adc
sub
add
inc
cmp
in
xchg
imull
ss
xchg
jge
and
xor
pop
leave
jle
pop
add
xchg
jne
insl
test
add
push
inc
je
inc
es
mov
jae
faddp
movsl
lds
inc
xchg
dec
xchg
mov
xchg
das
data16
outsl
inc
lods
pop
andnps
mov
js
mov
or
jbe
iret
mov
bound
scas
sbb
and
and
out
je
ret
jbe
add
mov
xor
and
adc
mov
cltd
mov
and
bound
repnz
in
btl
pop
or
jno
pusha
fsubl
test
mov
jge
fucomp
cmp
ret
stos
repz
stc
out
cmp
sbb
inc
sbb
pop
xor
sub
out
repnz
std
ja
sub
adc
iret
xlat
sbb
sub
divl
jge
aaa
push
jns
andl
jmp
push
sub
pop
cmp
shlb
stos
rorl
repz
xor
lret
faddl
mov
jnp
lods
jb
jbe
iret
movsb
push
mov
scas
push
das
add
inc
aam
adc
push
scas
adc
cmpsb
out
clc
adc
jg
push
insb
loope
iret
mov
cmp
clc
push
sbb
ret
stos
sbbb
xor
jg
in
fs
pop
enter
push
and
ds
pop
push
sub
rcr
fiaddl
out
mov
push
sbb
dec
hlt
ret
repz
in
xchg
fildll
sub
mov
stos
push
shr
sti
stos
sub
pop
cs
push
orb
xor
sbb
ret
dec
in
fcoms
or
sub
xor
inc
push
aad
clc
scas
xor
out
pop
daa
push
mov
loopne
pop
out
lcall
clc
testb
sbb
dec
sub
test
shl
rolb
xchg
stc
lret
xchg
pop
cltd
inc
outsl
mov
mov
bound
out
sbb
cli
mov
mov
das
cs
mov
lods
dec
xor
fldenv
clc
cmp
jp
frstor
rorl
cmc
mov
jge
out
pop
and
pop
sbb
out
push
ret
pop
sub
xor
jmp
js
cmp
fisubrs
cmp
xchg
lods
daa
sub
ret
call
dec
loope
and
insb
add
loop
mov
scas
lcall
dec
sbb
jne
push
lock
inc
fdivs
mov
ljmp
das
adc
ds
push
xchg
and
jb
or
stos
lret
push
xchg
sub
leave
jmp
dec
push
inc
stos
cmp
mov
or
fwait
in
ret
inc
adc
xor
stc
and
popf
push
lock
rol
push
mov
movsl
aaa
and
ret
push
sar
out
xchg
xor
std
pop
in
jbe
ss
negb
jnp
daa
outsb
fcoml
cmpsb
mov
je
jmp
es
jge
jp
inc
jo
push
xchg
loop
dec
ss
push
push
add
dec
les
add
pop
sbb
cmp
aad
scas
in
mov
scas
mov
sub
cli
les
mov
mov
xchg
pop
mov
insb
int
addr16
std
lret
out
test
ret
sub
mov
scas
je
inc
les
ret
xor
mov
repz
fcmovnu
xor
and
xchg
push
jle
movsl
out
jns
jg
jl
mov
aad
push
pop
outsb
inc
pop
sub
inc
and
mov
aam
push
test
jbe
fldt
lea
int3
adc
outsb
bts
into
cmp
inc
addr16
je
pop
jbe
jnp
xchg
mov
test
jae
pop
dec
icebp
loop
push
inc
dec
fldt
pusha
test
xchg
shld
push
xor
mov
mov
cmp
js
or
stos
imul
xchg
push
ljmp
sub
cmp
ret
dec
cs
adc
dec
push
cmp
sbb
rclb
sub
mov
push
mov
out
mov
ja
mov
push
and
ljmp
inc
sbb
push
mov
pop
push
pusha
mov
and
mov
sbb
in
out
sub
dec
mov
mov
lahf
stos
out
loopne
daa
psllq
roll
adc
sahf
stos
sub
repnz
and
sbb
sub
push
and
jns
call
cld
cmp
xchg
sbb
cmpsb
add
jne
inc
dec
cmp
out
pop
xor
jae
loopne
cmpsb
pusha
or
push
ds
lldt
pop
das
clc
add
and
adc
test
cmpsb
cmpb
dec
xor
pushf
int3
outsl
sahf
or
pop
movsb
mov
paddusw
idivb
push
lods
and
sub
jbe
add
lret
cld
leave
fsubrs
rorl
outsl
cmpsl
inc
mov
adc
pop
mov
int
push
mov
das
call
cli
or
push
shlb
test
ds
test
inc
lret
pop
faddl
outsb
mov
ss
push
jns
cmp
leave
push
data16
popf
mov
mov
add
addb
test
ret
mov
push
out
xor
cmp
das
das
push
adc
mov
aaa
cmpsb
xchg
mov
pop
mov
out
outsl
ss
mov
xor
cli
iret
movsb
aas
push
pop
inc
jmp
pop
je
ljmp
adcl
dec
ret
comiss
or
mov
and
xor
push
scas
xchg
push
xor
rcrb
push
sub
out
push
loop
push
out
and
int
lds
or
pop
adc
jns
rcrb
dec
outsl
je
cmp
sbb
repnz
stc
cmp
inc
xlat
ss
out
dec
sti
pop
inc
jae
icebp
jg
mov
and
es
idiv
sbb
ret
mov
es
sbb
dec
push
gs
jnp
scas
test
inc
fnstcw
daa
cmp
push
xchg
pusha
sub
pop
ret
add
call
mov
sub
cmp
loopne
xor
je
out
mov
es
mov
jo
push
mov
mov
jnp
sub
aam
adc
dec
loopne
outsb
mov
jns
mov
jbe
mov
out
sarl
fcoms
or
push
and
cltd
pop
fiaddl
scas
lret
arpl
fldcw
sbb
jmp
pusha
pop
pop
jo
and
mov
jl
xor
jbe,pt
jbe
xchg
inc
sub
jbe
leave
or
js
in
cli
outsl
sbb
scas
stc
jbe
dec
hlt
mov
push
mov
add
and
out
aaa
or
sahf
push
movsl
data16
push
sub
inc
sub
mov
in
push
addb
es
insb
sub
jo
xlat
icebp
inc
pop
cmc
xchg
test
xor
push
mov
out
xor
xor
sub
mov
pop
ds
or
xor
call
dec
les
push
mov
jecxz
xchg
mov
dec
xlat
or
insb
outsl
stos
xor
pop
cs
dec
pop
insb
xchg
inc
push
aas
sub
mov
mov
mov
push
jns
push
mov
xor
dec
into
ret
fsub
cmp
push
pusha
shrl
sub
repz
lcall
dec
movsl
jo
fstp
pop
scas
cmp
mov
call
adc
add
mov
mov
loope
cmpsb
daa
out
pop
cld
in
jmp
scas
in
out
ret
das
stos
add
jecxz
lret
mov
das
jmp
adc
rclb
xor
js
cmp
sub
sarl
sbb
pop
xchg
lea
mov
cmp
mov
dec
rorb
call
xchg
and
push
aad
mov
mov
xor
lea
subb
or
dec
cmp
sbb
shll
cmpsb
fisttpll
pop
ret
das
clc
insl
adc
mov
repz
jne
inc
xchg
fdivr
mov
cmp
or
lods
leave
mov
sub
cmp
ljmp
mov
sarl
out
or
mov
xor
inc
outsb
leave
shl
jle
loop
mov
inc
and
push
fnsave
and
scas
lds
sub
add
xchg
gs
jmp
pop
adc
cli
xchg
fiaddl
adc
push
outsl
push
lret
push
dec
jne
test
push
cmp
add
cmp
in
or
lret
jp
ret
stos
movaps
enter
mov
pushl
scas
fwait
and
fmuls
push
stos
fnsave
jae
dec
push
cmp
jge
aas
std
push
rclb
daa
aaa
xor
lock
push
or
xchg
aas
jp
test
inc
push
xchg
mov
push
outsl
arpl
push
push
inc
leave
sub
push
lea
lock
mov
jb
loop
scas
and
xchg
pusha
in
loop
jne
mov
sti
jns
cmpsl
imul
xor
std
outsb
adc
andb
in
push
cmp
push
pop
push
das
sbb
stos
mov
stos
call
cmp
jbe
out
mov
std
xchg
int3
aam
mov
sbb
loope
pop
push
pop
push
pop
divps
jo
out
outsb
push
cmc
or
and
add
ret
push
sbb
jl
xchg
pop
shl
jmp
dec
mov
fistpl
repz
push
push
jge
or
shlb
add
pop
fistpll
lock
mov
out
mov
or
sub
idivl
outsl
sbb
out
and
loopnew
rclb
xchg
jo
sub
push
push
push
adc
cmpsb
cmpsl
std
cwtl
sub
add
cmp
pop
test
xchg
jecxz
in
call
outsl
leave
stos
jg
sub
sahf
cmpl
xchg
mov
rolb
int3
loop
cmp
lret
mov
fwait
ret
test
jnp
stos
idivl
xchg
je
leave
mov
and
push
push
ljmp
int3
xlat
push
mov
mov
mov
xchg
sub
imul
lds
mov
enter
inc
das
idivb
test
lods
push
test
cwtl
jb
pop
xor
loop
mov
out
xchg
sub
cmpsl
out
out
scas
push
cmpsb
push
or
mov
outsb
shlb
xchg
imul
and
movsb
cltd
sbb
movsb
test
xchg
push
out
push
jmp
sbb
popf
pusha
mov
stos
pop
sub
andb
mov
dec
shrl
inc
or
fwait
add
test
je
pop
outsb
push
outsb
jecxz
xor
dec
xor
mov
jo
test
cwtl
jns
inc
push
sub
gs
stos
nop
pop
daa
sub
jns
hlt
xor
stos
in
xor
pushf
sbb
cmpsl
or
mov
fdivrl
jbe
out
mov
je
mov
aaa
arpl
mov
sahf
xorl
inc
loop
cmpsl
mov
sub
mov
fwait
xchg
leave
mov
mov
and
jo
imul
scas
dec
cwtl
data16
mov
jmp
movsl
pop
mov
mov
push
out
dec
or
mov
das
out
inc
sbbb
jge
xor
movsl
cld
test
jl
sbbl
ret
paddq
into
clc
or
sub
mov
rorb
lock
clc
or
dec
in
das
mov
or
ss
js
mov
pop
das
je
xor
or
in
sub
lret
add
cmp
dec
repz
or
test
cld
push
test
outsb
loopne
and
jg
fwait
push
cli
pusha
fldcw
pop
hlt
mov
daa
sbb
adc
cwtl
out
in
imul
sub
sub
testb
les
mov
adc
pop
dec
es
decl
mov
mov
mov
sbb
gs
int
mov
pop
repz
push
sub
xchg
cmp
xor
jp
add
out
in
sbb
add
out
mov
sbb
scas
sbb
push
mov
push
xchg
mov
and
je
lret
popf
scas
mov
sar
loop
nop
shlb
loop
les
add
cmp
mov
push
clc
mov
andps
pusha
mov
js
into
nop
jns
inc
sbb
sub
jns
jno
test
hlt
les
sub
int
inc
add
sar
pop
out
rorb
adc
dec
out
imul
pop
dec
push
mov
sti
sub
mov
mov
push
out
pop
aas
sub
aaa
stos
adc
mov
xchg
xchg
decl
and
push
lret
nop
imul
pop
repz
mulb
mov
push
mov
sub
push
cmp
adc
aaa
or
dec
inc
mov
jmp
cld
and
sbb
inc
cmp
jmp
ss
xchg
icebp
and
push
ljmp
ss
inc
mov
inc
inc
and
push
mov
sub
xor
sbb
pop
jbe
adcl
mov
xchg
cmp
jp
mov
push
rorl
mov
rorb
pop
stos
ds
jl
pusha
and
scas
cmp
movsl
cld
inc
sbb
dec
ds
mov
ljmp
inc
cmp
mov
imul
cli
cmpsb
jp
push
addr16
das
ret
mov
ss
stos
mov
fisubs
mov
dec
dec
scas
mov
dec
test
imulb
mov
push
mov
or
ja
fldenv
sub
cltd
and
sub
mov
adcb
fwait
ljmp
jb
push
dec
mov
outsb
mov
and
mov
notb
mov
stos
mov
ljmp
mov
arpl
jge
dec
into
stos
lret
inc
dec
push
push
ljmp
add
cmp
mov
xor
xor
fldl
sar
test
pop
lret
out
mov
jle
es
push
out
push
sub
cmp
mov
stos
mov
into
ss
ret
jo
push
jbe
xchg
lcall
out
dec
xor
mov
cmp
add
jg
sub
and
out
mov
cli
push
stos
fildll
mov
imul
dec
dec
ja
dec
mov
cmp
mov
mov
out
rcrb
mov
mov
sahf
jb
mov
sbb
pop
ljmp
sub
mov
pusha
lock
cltd
dec
pop
movsl
or
jmp
out
clc
pop
negb
js
inc
loop
nop
dec
ret
xor
jns
ret
sti
aad
aaa
in
rorb
jo
daa
int3
xchg
jl
push
dec
push
ss
lock
cmpsb
push
out
mov
cs
lret
es
mov
test
js
dec
in
pop
loopne
call
adc
cmp
sbb
fcoms
mov
sub
dec
test
ljmp
sbb
inc
call
dec
test
push
cmp
hlt
xor
add
enter
addr16
fcompp
inc
lcall
jbe
ss
dec
cmpsb
push
aaa
mov
fnstenv
iret
lds
shr
mov
clc
pusha
out
sub
cmpsb
pop
pushf
lahf
push
push
out
mov
jbe
icebp
mov
cmpsl
js
daa
pop
sub
inc
imul
dec
cs
xor
psubb
sbb
jo
cmp
push
sub
lret
pop
sub
loope
popa
mov
jmp
mov
add
out
out
sub
clc
push
adc
daa
sbb
cmp
xchg
or
xchg
lods
in
push
jl
jo
negl
mov
out
in
ret
pop
xor
scas
sub
mov
mov
movsl
sub
sbb
jae
pop
outsb
inc
cmc
imul
faddp
xor
ljmp
or
arpl
pminsw
or
mov
mov
dec
push
xchg
out
jns
sub
pusha
push
sar
in
stos
jo
fisubs
mov
scas
lock
or
les
andl
scas
lcall
push
add
sbb
nopl
and
xchg
inc
mov
and
fldt
mov
stos
xlat
stos
stc
cmp
or
das
cmp
add
call
iret
mov
mov
dec
push
inc
push
mov
incb
hlt
xsha256
cmpsb
adc
cmp
cmc
sub
inc
int
call
ss
imulb
ljmp
lock
mov
es
xchg
sub
and
fsubrl
cmp
and
test
xor
lahf
adc
cmp
call
call
and
fildl
out
cmp
sti
ss
dec
cmc
fnsave
or
stos
pop
mov
dec
pop
jno
ja
outsl
ljmp
pop
jle
clc
sub
jno
out
and
add
sbb
sub
stos
mov
fisubrs
pop
out
inc
out
and
xor
sbb
add
test
lock
stos
pop
lods
push
push
jl
pop
push
jecxz
outsb
push
cwtl
xor
mov
shr
push
loop
mov
xchg
mov
jo
or
inc
fildl
inc
or
bound
sbb
mov
xchg
jle
jmp
enter
rcrb
xor
push
clc
hlt
sub
fldt
sbb
dec
dec
push
pop
cmp
rorb
bound
aaa
je
fcomps
gs
pop
mov
das
gs
mov
adc
mov
nop
mov
lea
sbb
mov
add
dec
inc
mov
mov
aaa
cmc
stc
jb
jle
ret
lret
push
out
std
push
and
popf
cmp
mov
imul
sub
adc
cmpsb
or
lock
and
subl
pop
push
call
jl
push
jecxz
push
mov
push
cmpsb
and
outsb
divb
in
ret
and
dec
imul
js
mov
inc
fldenv
xor
adc
out
and
jb
popl
xor
negl
inc
xchg
cltd
xlat
imulb
cmp
and
push
jmp
call
sbb
mov
cmc
in
sbb
rol
dec
data16
popa
out
out
daa
scas
ss
repz
and
xchg
adc
or
mov
ss
push
pop
and
outsb
aad
sub
lcall
sub
je
pop
call
sub
test
cmp
lods
setns
scas
cmp
fcomip
fdivs
orb
sti
dec
mov
mov
lods
lds
jbe
push
outsl
cmp
mov
imul
push
sub
call
loop
ret
stos
in
dec
imull
pushw
bound
adc
loop
roll
dec
and
fimuls
xor
out
ret
scas
ljmp
sbb
scas
dec
cwtl
adc
outsb
outsb
jae
das
imul
idivb
mov
cmc
popa
push
sahf
out
out
shrl
jns
movsl
cmpsb
pop
mov
mov
dec
out
int
xchg
dec
das
jg
pop
xor
adc
movsb
jo
scas
add
adc
xchg
dec
repnz
mov
js
dec
test
cvtps2pi
xchg
test
mov
adc
cmpsb
xor
jb
cmp
sub
xchg
push
nop
outsl
popl
incl
call
push
push
xchg
cmp
mov
sub
jecxz,pt
pusha
lea
lods
xchg
jg
cld
cmp
imul
jp
out
mov
xchg
cwtl
mov
xchg
sub
cmp
lcall
mov
mov
pushf
mov
xor
addb
leave
push
pop
testb
mov
mov
test
movsl
adc
lcall
stos
out
out
sub
sbb
clc
add
push
pop
xor
dec
and
and
ss
dec
jns
dec
insl
push
sbb
cmp
stos
pop
xor
inc
jecxz
sub
adc
fs
ljmp
xchg
cmpsb
or
mov
mov
lock
inc
sub
repz
fisttpll
push
and
push
push
inc
out
xor
sub
jns
or
daa
xchg
faddl
fmul
sub
mov
test
push
sub
adc
out
mov
cmpsl
rclb
idiv
movsl
rcrl
mov
mov
and
movaps
jmp
cmpb
test
jmp
ret
adc
scas
out
cmp
sub
xchg
daa
call
cmp
pop
ret
jp
sub
out
jo
das
aam
jl
leave
es
mov
bound
xchg
cmpb
add
sarb
or
push
push
jge
push
push
inc
sbb
pop
cmpsl
push
push
xor
inc
and
inc
in
sbb
cmp
push
adc
xchg
xor
out
loopne
ja
sbb
sub
sub
adc
add
fwait
cmp
dec
cmp
lods
daa
mov
testl
mov
iret
or
fdivl
incb
inc
cmp
dec
das
pop
ss
inc
shll
in
outsl
jo
lret
push
aas
mov
sti
icebp
lret
cmp
mov
cmp
js
sbb
pusha
stos
test
jne
das
lock
andl
mov
ljmp
cld
rorb
or
stos
movsl
sbb
orb
xchg
sti
fcoms
ja
xchg
cmp
xchg
jne
fadd
mov
test
or
mov
mov
lahf
js
loop
jnp
xchg
stos
mov
orb
cmp
scas
js
push
dec
add
mov
mov
push
sbb
addr16
xchg
nop
inc
sub
sub
enter
sub
clc
jnp
lock
repnz
push
mov
cmpsb
and
sbb
adc
mov
and
jp
stos
sti
pop
push
movl
sub
clc
push
adc
ret
sub
negb
por
jl
out
sub
push
ljmp
mov
repnz
outsb
push
push
arpl
loop
mov
and
ret
push
mov
jno
lcall
sahf
sub
jbe
int
jbe
mov
sub
add
mov
outsl
mov
mov
clc
sbb
cmpsb
sbb
jnp
push
fiaddl
sti
dec
jo
int3
mov
cs
sbb
sti
pusha
inc
icebp
and
xorl
mov
sub
sub
js
je
pop
sub
sub
loope
and
push
out
jecxz
jge
fimull
xchg
das
jmp
cmc
inc
call
xor
das
and
test
or
push
mov
cmp
iret
or
ss
sub
cmp
or
sub
iret
mov
cltd
mov
cmp
and
add
fimuls
cmc
fwait
dec
xchg
cmp
out
ja
or
push
cmc
rclb
jg
push
add
jb
sbb
lcall
jo
outsb
bswap
jae
ss
pushf
jmp
inc
mov
cmp
inc
xchg
lods
lret
ds
mov
sub
int
aad
jp
mov
push
jbe
mov
mov
les
cmovbe
push
lods
out
into
inc
jl
jb
inc
mov
fadd
out
mov
in
and
sbb
mov
mov
cmpsl
push
or
pop
xchg
cmp
aad
jb
int3
popa
test
push
jmp
and
iret
or
std
or
mov
pushf
pop
pushf
xchg
xor
dec
int3
pop
xchg
ds
cmp
std
and
cli
lahf
in
cmp
pop
cmpsl
fidivrl
je
out
mov
sub
loope
sub
and
daa
adc
push
cmpsb
sub
mov
hlt
stos
mov
in
dec
xor
cs
xchg
jnp
popf
push
xacquire
dec
sbb
dec
xor
sub
mov
and
xchg
pusha
mov
push
sub
sahf
mov
out
sbb
stos
xor
outsl
and
pop
scas
dec
sub
leave
in
out
adc
sarl
gs
inc
insl
push
pop
mov
std
sahf
scas
mov
pop
or
sbb
insb
in
movsb
pop
sub
out
adc
jno
js
pop
jns
jbe
out
adc
sbb
add
xchg
pop
xchg
jno
test
push
jnp
inc
sub
loop
test
xchg
ds
shrb
sbbl
fcomi
movl
pop
xchg
mov
push
adc
xchg
push
lret
pop
mov
sub
loope
push
push
push
mov
clc
dec
inc
dec
shrb
mov
int3
mov
out
daa
and
sub
adc
ljmp
mov
push
or
adc
test
mov
pop
add
lea
aam
xor
in
jmp
adc
add
aad
les
aaa
mov
mov
outsb
push
lahf
dec
rol
cwtl
lret
out
cs
add
mov
stos
fidivrl
imulb
mov
mov
cmp
push
xchg
pop
cltd
add
ljmp
jb
mov
dec
scas
sbb
cmp
jae
mov
aaa
mov
jle
bound
jg
ret
adc
leave
fisubs
dec
or
mov
daa
sbb
mov
repz
out
sbb
or
and
xchg
sub
xchg
shrl
arpl
adc
cli
popf
sbbl
push
xlat
addr16
out
add
and
out
stos
push
jl
mov
sub
pop
testb
jne
adc
push
push
mov
ret
cmp
iret
and
clc
cmp
in
ljmp
scas
je
push
mov
data16
cmp
dec
or
mov
addr16
jl
sub
cmp
mov
pop
lods
mov
or
inc
mov
adc
bound
xor
adc
and
and
inc
sbb
nop
dec
es
in
xchg
mov
xchg
rcrl
xchg
outsb
and
mov
adc
mov
push
sbb
jge
movsb
dec
sbb
and
jns
pop
mov
addr16
jmp
push
dec
sbb
mov
mov
test
pmulhw
push
lock
test
jae
ret
sbb
mov
out
cmp
leave
push
daa
jmp
pushf
and
mov
in
ret
xchg
dec
mov
sub
loop
mov
incb
sbb
adc
ret
loope
sbb
xor
push
xor
loope
cltd
pop
and
jg
push
mov
lods
push
sub
pushf
xor
jecxz
jnp
arpl
loope
sbb
repnz
scas
cli
jbe
fsub
xchg
cmp
jb
stos
test
mov
sub
in
push
addr16
pop
push
insl
xor
add
icebp
test
xchg
stos
jl
jle
push
dec
and
and
psrad
inc
xor
and
push
es
stos
add
sbb
lret
cmpsb
rorb
add
cmp
cmc
icebp
gs
shr
mov
stos
mov
pop
and
mov
nop
pop
pop
xchg
mov
mov
mov
dec
stos
and
xchg
jns
arpl
das
bound
and
insb
rorb
push
and
bound
out
pop
sbb
jo
stos
mov
push
sbb
das
jnp
inc
mov
rolb
nop
mov
pop
in
hlt
pop
fsubl
or
push
sar
push
jge
ret
call
cmp
xchg
or
jmp
cmp
je
addl
rorl
out
push
in
sub
push
cmp
add
call
lret
filds
pop
cmp
jmp
or
dec
outsb
ret
lock
notl
gs
mov
sub
scas
mov
mov
adc
xorb
mov
jae
cmp
push
hlt
out
push
outsb
or
rcr
out
push
inc
sbb
sub
sub
dec
cwtl
scas
js
daa
out
stos
repz
lret
aam
push
bswap
in
xchg
mov
push
fisubrl
js
pop
bound
movsbl
sti
push
je
pop
imul
or
jne
clc
push
lea
jb
cmp
xchg
xchg
cli
cmp
ljmp
mov
push
push
cld
jb
xchg
and
mul
add
scas
mov
addl
xlat
ss
test
insb
cmp
daa
stos
negl
lods
push
push
mul
pop
stc
xchg
sub
and
dec
mov
ss
mov
dec
call
out
out
xor
and
das
jg
fwait
pop
ja
sub
int3
mov
push
jecxz
adc
call
shld
mul
mov
clc
clc
jnp
loope
das
pop
pop
cmpb
pop
xor
fsts
bound
inc
jl
idivl
xor
adc
sti
rcr
das
and
xchg
cld
push
mov
adc
lcall
jb
pop
scas
popa
pop
mov
into
sahf
pop
es
pop
inc
dec
cld
push
mov
mov
mov
scas
sahf
addr16
sti
push
movsl
ljmp
ret
enter
aaa
or
ds
cmp
mov
stos
adc
ss
push
push
aas
xchg
sub
aad
inc
mov
push
dec
inc
pusha
aas
stos
push
fs
das
or
roll
aad
cmpsl
sti
cmpsb
mul
push
das
ret
dec
inc
xchg
out
mov
sub
rcrb
jmp
inc
jnp
push
leave
loope
in
jb
mov
test
test
scas
jecxz
and
xchg
sub
cmc
mov
pop
and
mov
leave
out
mov
xlat
pop
mov
lret
add
dec
push
movsb
sbb
jnp
cwtl
orl
pop
cmp
in
or
xor
dec
inc
push
mov
pop
add
inc
repz
verr
mov
push
pop
fwait
dec
add
mov
jge
scas
pusha
sbb
jp
push
dec
xchg
pop
mov
cwtl
dec
cmp
pop
push
mov
bound
adc
orb
out
xor
decb
pandn
inc
xor
std
test
xchg
rclb
out
andnps
adc
mov
je
enter
mov
mov
fidivrs
ret
loopne
sub
push
push
mov
int
je,pn
sti
cmovae
inc
mov
in
or
cmp
jle
or
cltd
cmpsl
cmpsl
cwtl
pop
mov
ds
es
xchg
mov
rorb
push
sti
std
ja
scas
fcos
or
daa
jecxz
cmpsb
pop
inc
sbb
mov
cmpsb
jb
or
cmp
imul
sub
loopne
jle
jp
cs
sbb
xchg
cmp
add
test
cmp
je
in
add
sbb
mov
dec
enter
push
ss
add
xchg
cmp
xchg
sub
stos
xor
inc
pop
pop
xchg
push
jl
test
jle
ljmp
push
data16
cmp
pusha
bound
jl
and
push
xor
push
mov
adc
sub
cmpsb
incl
push
scas
negl
push
outsb
push
sti
jno
push
shl
enter
cmpsb
pop
dec
inc
loope
les
mov
ret
dec
xchg
and
mov
outsb
jbe
fisubrs
lea
xchg
in
adc
lret
mov
outsl
jg
repnz
fimuls
call
and
cmpsb
add
lret
negl
jp
and
sarb
fdivrp
cmc
xor
inc
xchg
sub
inc
int3
stos
or
sub
dec
or
fsubrs
mov
mov
test
je
bsr
jno
mov
dec
inc
lret
aaa
mov
adc
mov
mov
mov
cmpsl
mov
pop
into
mov
or
push
sub
setns
xor
dec
ficoml
enter
add
jle
pop
cmp
stos
xchg
mov
popa
cmpsb
lcall
sub
in
dec
mov
iret
push
stos
push
sub
adc
les
repnz
jo
mov
mov
dec
inc
and
mov
push
lods
mov
dec
adc
cmpl
mov
movsl
and
testb
adc
mov
cmp
or
std
leave
xor
mov
jae
xor
adc
pusha
push
jge
jne
mov
xor
jecxz
dec
aad
iret
push
push
jp
xrelease
inc
push
lcall
nop
or
popf
dec
in
add
hlt
jnp
into
adc
push
mov
stc
in
xor
sbb
or
mov
push
xor
push
mov
out
and
sarb
adc
xchg
push
mov
outsl
stos
in
iret
mov
cmc
jne
jge
xor
jb
outsl
cmp
sub
dec
cltd
sub
ljmp
inc
std
mov
inc
xchg
sbb
cmp
sti
lods
push
mov
mov
lret
jae
and
add
stos
ja
sbb
scas
or
mov
pop
cltd
and
daa
sbb
sbb
test
or
test
loope
test
insl
sub
xor
fstl
cs
mov
xchg
or
mov
push
jb
or
pusha
sub
cmp
sub
fldcw
sub
and
push
lcall
xor
xchg
sub
xor
mov
push
fsubrs
inc
imulb
xchg
orb
daa
fstpt
cli
gs
sub
jmp
xchg
adc
lea
xor
pop
inc
rorl
lret
movsl
pop
pop
data16
or
jle
mov
enter
mov
mov
cmp
lock
shl
push
test
push
test
ljmp
pop
orl
cmp
inc
bound
add
fucomi
push
or
sub
inc
jmp
xchg
push
sbb
xchg
cs
jle
add
mov
roll
outsl
inc
sub
cmp
sahf
cmpsb
scas
jle
dec
push
sbb
mov
and
scas
adc
stos
lock
or
sub
push
and
fwait
clc
jnp
clc
mulb
pop
std
ret
scas
xchg
or
xchg
and
arpl
testb
and
mov
push
mov
pop
add
lods
jmp
add
data16
sub
js
jae
lret
push
jge
divb
int3
push
fldt
pushf
sbb
mov
clc
cmp
fdivrp
js
ds
or
outsb
fimuls
pop
adc
push
sbb
movsl
cmp
cld
dec
mov
xor
aas
mov
scas
dec
mov
stos
or
dec
xchg
dec
iret
jp
popf
add
clc
cld
test
stos
fistps
sub
lock
dec
mov
stos
push
pop
lods
cmp
jl
cmp
dec
sub
or
pop
fisubl
test
gs
mov
lret
sub
iret
dec
addr16
and
lret
push
dec
pop
jmp
xchg
jo
jp
inc
mov
pop
mov
sbb
out
push
ss
push
js
cs
inc
sub
adc
mov
je
pop
loope
push
mov
and
adc
invd
sbb
aaa
sub
pop
inc
ss
sahf
pop
bound
mov
and
sub
insl
out
fidivrs
push
in
lcall
in
jp
xor
pop
ja
xor
sub
daa
outsb
test
lock
dec
sahf
sbb
int
pop
scas
das
in
cli
jno
ss
out
mov
mov
mov
shll
in
and
xchg
push
jmp
ds
out
cmp
aas
or
addr16
lock
sbb
push
scas
mov
mov
mov
dec
leave
test
out
daa
std
data16
push
sbb
and
cmpl
sub
ficoms
out
dec
sub
sbb
jp
sar
sbb
push
mov
inc
mov
push
fidivrs
push
test
scas
adc
dec
mov
push
ss
dec
xchg
adc
add
push
pop
daa
sbb
jns
in
xor
lea
mov
sbb
stos
jne
mov
cmp
cmp
sub
dec
testl
loop
ljmp
cmpsb
cmp
cld
push
rcrl
xor
fmul
fwait
lock
out
pop
xchg
sbb
push
dec
repnz
test
lock
testb
jno
popa
mov
sbb
test
jge
xchg
pop
test
jl
adc
mov
inc
mov
out
int3
jmp
je
ret
lock
inc
adc
sbb
filds
xor
mov
mov
or
loope
test
rep
mov
fsub
aad
imul
or
daa
pop
xor
js
ss
mov
les
xchg
xor
jno
sub
fucomp
cmc
sbbb
dec
add
jno
in
inc
dec
repz
xlat
cmpsl
push
mov
lock
mov
add
sti
test
fxch
jbe
push
jge
sbb
in
aad
jecxz
or
xchg
jne
add
icebp
pop
pushf
orb
outsl
mov
jo
fbld
cmpsl
mov
push
lret
mov
cwtl
orb
add
fcmovnbe
sbb
lret
in
test
mov
nop
mov
and
and
lret
outsb
out
lock
adc
orl
adc
ljmp
mov
push
lahf
mov
push
jne
rorl
jae
dec
dec
mov
cli
xchg
xor
xor
push
lret
pushf
xlat
test
cmpsl
adc
or
pop
sahf
xchg
inc
inc
add
imul
xchg
mov
jbe
out
cmpsl
push
sbb
mov
dec
lds
dec
jbe
push
pop
mov
jae
jge
stos
mov
lods
lcall
mov
sbb
cmp
enter
pop
mov
testl
lods
inc
in
dec
xor
sbb
in
cld
clc
jmp
cmp
and
mov
inc
xchg
das
ret
repz
cmp
sbb
enter
ja
jg
mov
and
sbb
push
xor
xchg
adc
arpl
daa
and
test
and
sub
pop
push
enter
loop
pop
ror
xchg
adc
xor
push
push
xchg
mov
je
push
inc
in
shl
das
decl
repz
jo
in
das
movsb
lcall
push
lods
xchg
fucomip
in
push
je
lahf
mov
push
cmpsb
mov
sbb
pop
sbb
cld
cmp
clc
adc
push
sbb
cmp
mov
push
xor
cmp
dec
jae
hlt
or
or
mov
cmp
dec
loop
mov
add
movsb
outsl
and
sbb
js
jne
fucomp
cmp
mov
cmovbe
repnz
mov
lods
sbb
pop
ljmp
push
inc
adc
jo
add
sbb
or
xchg
rep
adc
inc
outsl
rorb
popf
movntq
sbb
shll
btc
push
popl
mov
pop
cmp
cmp
and
pcmpgtb
clc
pusha
mov
dec
icebp
movsb
call
adc
mov
and
push
xchg
xchg
and
cmp
pop
pop
outsl
or
pop
ret
hlt
cmp
pushf
scas
sub
pusha
push
add
pop
negl
psubw
push
rcl
jns
sarb
outsl
xchg
mov
ljmp
sub
sbb
je
push
jnp
aas
inc
and
push
xor
sub
xchg
mov
loop
divb
hlt
pop
pop
and
das
lret
adc
cmp
sbb
push
std
clc
sbb
cltd
jne
jno
push
inc
call
divb
shlb
pop
jns
sub
sub
aad
mov
pop
adc
xor
das
xor
subps
imul
daa
adc
roll
lret
pop
ret
mov
xor
cvtps2pd
sub
pop
fldl
cmp
aad
cmp
xor
in
mov
je
inc
repz
pop
clc
seto
adc
decl
repz
sbb
xor
push
cmp
mov
mov
mov
and
in
sahf
aad
mov
pop
clc
fists
out
enter
test
xchg
sbb
or
fsubl
roll
mov
cmp
dec
rcrl
fdiv
xorl
das
cmp
jmp
push
test
aad
gs
shlb
jmp
test
clc
bound
insl
xchg
cmpb
mov
fimuls
or
push
push
outsl
xchg
cs
xchg
or
jbe
es
fildll
adc
jg
xlat
mov
in
pop
mov
or
ja
push
pop
push
ja
jbe
mov
test
out
jns
push
daa
mov
les
lret
loop
mov
dec
jp
dec
stos
scas
sbb
in
in
js
ljmp
push
xor
fiaddl
add
push
adc
das
stc
add
mov
clc
in
and
sahf
rcll
and
in
arpl
pop
pop
mov
sub
mov
loope
je
pop
mov
gs
scas
mov
jo
aam
and
ret
cmp
jne
mov
cmp
lods
imul
push
push
lahf
pop
xor
into
mov
es
and
xchg
xor
stos
shll
out
add
xchg
push
xor
jnp
mov
or
push
push
sbb
lds
jb
dec
inc
mov
pop
mov
data16
and
mov
ret
ja
dec
mov
stc
mov
mov
inc
mov
jmp
out
aad
and
das
or
mov
add
loopne
jmp
inc
push
and
and
mov
sub
fsub
cmp
cmpsb
xchg
adc
mov
call
lea
movsb
je
or
scas
mov
loopne
push
xor
and
test
xchg
leave
sub
lcall
ret
lcall
jnp
mov
fmull
push
or
js
xchg
mov
adc
movsl
les
mov
dec
dec
loope
shll
sbb
aad
jns
dec
cwtl
jge
sbb
xor
incb
xor
call
aad
cld
push
or
fwait
jno
ljmp
add
fcoms
out
cmpsl
add
mov
adc
dec
push
sub
ret
aas
mov
push
pop
adc
jp
push
cli
pop
sub
ret
dec
mov
repnz
aaa
or
loop
leave
call
and
xor
in
int3
pop
sub
cmovp
and
dec
mov
jo
test
xor
xchg
loopne
pop
stc
sub
arpl
in
sub
sub
call
setnp
add
push
int
into
cmp
jns
lret
or
xchg
mov
inc
daa
sarb
xlat
test
pop
fistpll
out
push
or
mov
nop
fwait
addl
lods
pop
ret
cmpsb
push
inc
mov
call
pop
aaa
xlat
scas
lret
addr16
cmp
mov
in
outsb
xor
test
cmp
jge
adc
mov
roll
enter
push
out
std
pusha
fsts
lahf
aas
pavgb
hlt
sbb
or
jecxz
pop
mov
mov
pop
icebp
das
sub
cmpsb
sbb
cmpb
mul
mov
fisttpl
aaa
movsl
out
popf
ret
stos
sbb
push
cld
xchg
scas
popl
sbb
iret
and
xchg
fsubl
xor
sbb
cmp
in
imul
or
push
daa
cli
adc
or
xor
mov
pop
ret
mov
mov
iret
cmp
mov
cvtps2pd
iret
inc
or
gs
jmp
lods
adc
imulb
xchg
mov
mov
adc
inc
or
imul
loope
and
inc
xchg
inc
into
jb
jbe
jmp
mov
mov
in
out
adcl
inc
xor
xor
in
out
inc
push
fadd
dec
fdivs
mov
sub
dec
fcoml
cmp
fdivrs
mov
xor
mov
mov
mov
pop
shlb
mov
test
sbb
int
jp
ret
jge
jle
mov
fstps
insl
push
inc
out
cmpsl
sbb
fnstsw
xlat
dec
inc
mov
mov
ds
xchg
add
dec
imul
jp
shl
mov
mov
enter
jae
lret
jl
sbb
jmp
xor
ds
cmp
jb
mov
das
push
popa
andb
aas
fcompl
fistpl
fcos
fimuls
mov
sti
xchg
clc
or
sub
sbb
adc
shrl
shll
sub
and
stos
jnp
rorb
sbb
adc
pop
lods
dec
clc
call
enter
mov
or
outsb
sub
fsubl
push
cwtl
in
daa
mov
jae
or
shrb
jge
fwait
scas
mov
pop
pusha
mov
cld
pushf
adc
jns
aas
cmpsb
fldenv
clc
in
and
mov
call
cld
mov
int
mov
faddl
sbb
stc
out
addr16
push
mov
mov
stos
ds
and
daa
out
call
test
pop
sub
idiv
scas
pop
popf
dec
jne
mov
xchg
adc
test
inc
and
cmpsb
icebp
lods
jg
lods
sub
out
xor
cmp
xor
adc
mov
xchg
dec
jle
out
ret
inc
les
cmp
shufps
mov
repz
jnp
adc
lock
aaa
xor
leave
jb
or
dec
inc
in
lock
cmp
movsb
rorl
sub
fwait
inc
ja
sti
xchg
ds
adc
mov
out
daa
mov
mov
fstps
sub
jae
mov
mov
pop
ret
mov
cmp
mov
sbb
stos
out
outsl
mov
loopne
push
pop
xchg
and
jmp
ds
cmp
xor
loopne
sbb
mov
aad
mov
lret
push
dec
mov
pop
xor
pop
push
jp
sub
mul
jmp
sub
scas
scas
cmp
lret
dec
daa
ss
mov
sbb
jno
int
addr16
mov
movzbl
jmp
pop
and
adc
jp
sbb
movsb
xor
test
sbb
inc
out
js
lret
sbb
mov
test
lods
sub
dec
inc
or
es
insl
lahf
push
or
in
dec
cmpsb
icebp
push
jne
jecxz
out
xchg
mov
dec
pop
inc
lahf
xor
push
mov
call
and
sti
jae
mov
das
jl
mov
or
or
fucomp
popa
inc
pop
es
or
dec
sti
lret
push
out
scas
clc
mov
mov
xchg
stc
push
push
lods
mov
and
push
outsb
or
sbb
add
jbe
ret
push
dec
xchg
push
xor
pop
aas
pop
in
fisttps
xchg
outsb
jle
cmp
rcrl
adc
outsl
fildll
cs
jns
jp
push
aad
shlb
inc
inc
push
mov
nop
iret
push
jge
imul
clc
shlb
cmp
das
mov
fistl
jbe
sahf
loopne
mov
stos
xchg
or
fs
cmpsl
stos
adc
lret
subl
test
push
testl
xor
fadd
pop
int3
sub
sarb
xchg
aas
rorl
js
cmp
push
clc
jbe
dec
mov
push
leave
lds
push
out
or
pop
and
cmpsl
dec
iret
xchg
inc
mov
sbb
mov
xchg
adc
jbe
inc
mov
lea
xchg
adc
out
jle
xchg
sub
je
add
sub
inc
mov
lret
clc
push
and
jo
icebp
xor
add
or
mov
sbb
jle
mov
cmpsb
repz
adc
mov
lret
or
daa
fincstp
cmpsl
adc
add
sub
xchg
inc
clc
cmp
sbb
push
incl
daa
mov
sub
inc
out
mov
xchg
dec
fimull
pop
xor
in
je
adc
movsb
jae
insl
xchg
test
add
cmp
inc
push
aam
xor
das
stos
inc
inc
adc
xchg
push
mov
jp
mov
sub
inc
mov
mov
xchg
mov
jne
push
adc
dec
cmp
xor
push
sbb
mov
mov
aam
dec
push
repz
lods
jmp
push
rclb
daa
aam
ljmp
push
addr16
pop
push
add
fadds
jo
lret
dec
add
mov
add
movsb
cmpsl
testl
decl
in
clc
sub
shlb
xchg
mov
mov
pop
sbb
fsubr
and
jl
and
xor
mov
or
sbb
dec
mov
xchg
cmp
push
add
stc
das
sub
in
jo
mov
sbb
out
leave
negb
mov
addr16
int3
mov
popa
shr
gs
xor
or
test
mov
dec
ljmp
mov
addr16
cli
push
or
mov
pushf
dec
cs
lock
int
shr
int3
sub
and
lea
mov
daa
cmp
mov
cmp
mov
cs
mov
cld
icebp
ss
xor
inc
out
ljmp
dec
jp
mov
cs
mov
shlb
inc
mov
test
ds
ss
inc
jbe
add
cmpsl
cmp
xlat
ss
xor
hlt
outsb
stos
cmpsb
mov
adc
cs
push
xor
aas
cs
mov
lret
dec
ss
mov
mov
addr16
stos
movsb
sub
xor
xor
enter
cli
addr16
sub
ss
mov
bound
ds
mov
ss
mov
cs
cmpsb
ss
mov
lock
outsb
into
outsb
push
inc
cmp
mov
mov
hlt
mov
push
subb
dec
xchg
sub
pop
scas
cs
divb
imul
cmpsl
pop
xchg
clc
xor
lods
sbb
jo
push
shrl
fsubrs
sub
arpl
pop
dec
mov
ljmp
push
daa
mov
sub
push
stos
into
stos
mov
dec
out
pop
mov
mov
ss
xchg
jb
cmp
mov
addr16
sub
xor
add
mov
mov
rorb
outsl
cmp
jbe
popa
adc
dec
mov
in
mov
vmread
enter
sub
sub
outsb
out
cmp
dec
push
lret
xchg
fwait
sub
sarb
ss
test
jle,pn
outsb
inc
dec
testb
mov
sub
rcrb
outsb
dec
out
adc
dec
lret
test
push
mov
dec
push
inc
xchg
ljmp
cmp
mov
ss
dec
mov
pop
mov
xchg
ljmp
cmp
js
lock
sbbb
pushf
cmp
push
jns
scas
pop
lahf
xor
xchg
or
xor
push
divb
sub
pop
sbb
or
jae
lock
dec
xor
movsl
cmpsl
mov
repz
pop
nop
loop
je
cmp
mov
xchg
dec
jne
cmc
mov
push
mov
or
mov
mov
mov
pop
inc
int
pop
fsts
test
test
adc
xchg
push
das
jmp
dec
loope
sarl
lcall
idivl
sub
sbb
sub
or
icebp
psubsw
fs
in
dec
call
and
adcb
out
push
lds
pusha
negl
xchg
scas
adc
stos
pop
repnz
cli
push
lock
test
test
or
rorb
add
push
jmp
dec
dec
adc
mov
ss
xor
mov
mov
mov
inc
out
sub
xchg
mov
jl
dec
fwait
nop
jp
mov
jp
les
outsl
inc
arpl
xor
or
ret
mov
negb
scas
inc
add
loope
cmpsl
pop
xchg
out
push
cmp
std
stos
movsl
ja
mov
stc
jl
dec
xlat
or
out
add
push
mov
shl
pop
test
dec
jge
int
xor
sahf
stos
xor
in
jl
ret
pusha
in
data16
dec
and
call
data16
ret
loope
mov
pop
sub
jge
scas
xchg
aas
jl
dec
shld
scas
repz
cmp
sarl
mov
clc
jmp
push
cmpsl
mov
sbb
lds
int
push
or
add
push
xor
jecxz
es
dec
and
pop
shlb
cmpsb
sti
aam
out
ljmp
insl
pop
outsb
sub
xchg
psubb
in
cmp
xchg
stos
inc
sub
sbb
pop
sub
xchg
rorl
fsubrs
dec
pushf
inc
mov
repz
stc
or
sar
incb
xor
scas
inc
movsb
cmp
cmpsl
cmp
push
push
lret
or
cmp
pop
leave
fiadds
and
push
stc
sub
xchg
mov
inc
push
pop
dec
dec
jl
sysret
mov
push
cmovno
test
js
adc
sbb
gs
scas
pop
repnz
cmp
cmp
fnstsw
add
scas
ss
loope
pop
mov
fwait
mov
movsb
dec
lahf
inc
in
int
mov
ja
in
adc
mov
jmp
jb
mov
popf
pushf
sbbw
scas
test
jnp
jno
popf
dec
es
sbb
ret
repnz
sbb
pop
xchg
jmp
sbb
mov
sbb
push
lock
nop
bnd
sbb
xchg
inc
popa
sbb
dec
cmc
dec
inc
dec
dec
out
mov
popa
mov
scas
std
or
scas
fmuls
rclb
idiv
adc
adc
loop
stos
xor
jle
loopne
ret
cmpsl
pop
and
stos
push
daa
dec
std
dec
adc
cmp
inc
and
fidivs
inc
mov
xor
or
iret
mov
pop
out
push
inc
mov
das
das
data16
lret
fincstp
popa
dec
dec
push
movsb
lret
aad
fcmovu
jns
dec
cld
out
clc
iret
aam
push
sbbb
push
sbb
cltd
xchg
push
xor
dec
pop
xorl
ljmp
xlat
xchg
push
test
leave
sbb
nop
pop
push
js
mov
push
enter
or
out
inc
mul
push
lahf
fidivrs
scas
push
in
inc
ret
repz
stc
scas
xchg
sub
jmp
cmp
stos
not
add
pop
mov
rcll
sbb
andl
inc
adc
jmp
jecxz
jle
stos
push
mov
xor
insb
push
and
pop
dec
lds
fcomps
mov
add
scas
sub
clc
push
lods
push
lret
test
arpl
cmp
fcompl
aam
jo
leave
jno
fdivrp
dec
shl
test
push
sbb
das
js
das
out
outsb
jle
std
loopne
ret
xchg
ss
jl
movsb
mov
out
in
and
pop
test
shrl
or
and
pop
cmpsl
pop
adc
xor
outsb
cmc
add
incl
ret
or
mov
call
bound
ds
cmp
or
adc
loope
aaa
push
out
xor
mov
dec
adc
clc
cmp
add
leave
add
dec
push
scas
data16
jmp
ljmp
lahf
test
sub
jb
xor
xchg
xchg
je
xchg
xor
add
scas
sti
mov
cmpsb
aad
push
dec
sub
movsb
mov
xchg
push
mov
fsubrl
outsb
std
outsb
mov
mov
lahf
mov
xchg
jo
in
jecxz
jecxz
push
lds
repnz
cmpsl
sti
scas
sub
mov
imul
pop
xchg
sbb
mov
jg
jmp
fisttpll
stos
push
mov
rolb
cmp
xchg
pop
mov
es
out
xor
fidivrs
mov
stos
lods
clc
ljmp
adc
out
sub
mov
das
out
adc
mov
notb
push
pusha
jl
jge
sbb
pop
lret
dec
cmp
sub
pusha
in
pushf
sbb
dec
add
test
sbbb
xchg
out
mov
jge
push
push
iret
mov
xor
pop
sbb
dec
push
fidivrs
ljmp
ds
daa
and
mov
inc
and
or
outsl
pop
inc
nop
add
cmp
cmovge
mov
push
or
fs
ljmp
idivb
xor
sbb
fbld
dec
mov
sbb
out
dec
movsb
dec
cmpb
lea
bound
scas
dec
jbe
sub
ret
leave
aas
push
ja
xor
jns
out
sbb
ret
inc
cmp
dec
jle
adc
mov
jb
inc
mov
sub
push
pop
daa
jmp
inc
adc
push
sub
fisttpl
jbe
movsb
in
imul
dec
data16
xchg
pop
aad
dec
sub
test
push
ret
shrb
inc
jae
sub
mov
jbe
mov
fldl2e
adc
mov
and
mov
sub
sbb
aas
out
fidivl
insb
aas
xor
cli
and
jb
or
push
xor
popl
stos
dec
adc
and
sarb
fldt
into
jg
and
outsl
sub
pop
cmp
xor
push
leave
std
bound
mov
sub
mov
mov
sub
pop
xchg
in
inc
stos
loopne
sub
xchg
pop
xlat
jge
jns
sbb
add
inc
sbb
fstl
sbb
inc
ret
insb
or
jle
jl
cld
cmpsl
mov
dec
jnp
pop
je
push
les
push
ret
in
lahf
push
mov
sub
addr16
outsl
bound
out
push
aas
into
repnz
ds
jbe
fisttpl
stos
fsubs
push
scas
xchg
mov
pop
scas
xlat
mov
cmp
push
mov
inc
mov
jg
test
push
sbb
jmp
popa
mov
ret
mov
hlt
jne
out
cmp
shlb
jecxz
fistpl
fdivrs
decb
fisubs
repz
pop
sbb
and
fnsave
imul
mov
clc
push
mov
push
xchg
in
repnz
inc
and
dec
mov
mov
loope
clc
outsb
cmpsl
mov
and
nop
cltd
ds
mov
pop
jo
pop
aas
rcll
or
je
mov
xor
xchg
sub
push
cld
mov
and
or
xchg
jne
mov
repz
lret
pusha
mov
lcall
xorl
sbb
adc
aaa
je
dec
js
dec
sbb
sub
cmpsl
mov
je
notl
testl
fstps
popa
mov
and
mov
mov
dec
orb
insb
sbb
jge
dec
xor
push
insb
xchg
xcrypt-cfb
cmpsl
xchg
icebp
inc
dec
jl
imul
in
pushw
sti
shrb
popf
sbb
dec
mov
enter
out
pusha
push
sbb
mov
scas
loopne
sub
inc
push
dec
or
mov
ss
fucomi
test
out
xchg
jnp
add
mov
aas
xchg
int
in
dec
in
mov
push
popa
in
test
lcall
push
mov
mov
cmp
sub
jo
ret
jbe
cmp
ret
push
and
sbb
out
das
nop
mov
call
mov
jb
sbb
bound
jle
xchg
clc
jae
rol
jg
scas
sub
arpl
jmp
add
push
jno
fldcw
add
arpl
jmp
jbe
ds
loopne
push
jg
adc
test
mov
push
js
test
sbb
pop
es
inc
int
pushf
ret
das
pop
cmpsb
jb
fsts
and
adc
bound
imul
fstpt
lds
push
in
jb
sub
jl
dec
nop
fnstsw
aam
lock
mov
pop
sub
push
mov
hlt
mov
add
subb
and
das
pop
jns
mov
aad
movsb
fildl
fildll
sub
jno
sbb
dec
adc
mov
adc
aad
ljmp
call
cmp
shll
arpl
adc
push
in
fstl
lahf
xchg
push
add
pushf
xor
divb
daa
mov
inc
sbb
xchg
or
add
add
repz
fcoml
dec
xor
xchg
and
cmp
data16
pop
jae
xor
idivl
xchg
sub
iret
push
and
adc
inc
loop
mov
mov
lahf
cmpsl
ror
aaa
jp
jb
ret
cmp
pusha
inc
adc
icebp
jbe
lock
sub
mov
aas
pusha
dec
push
scas
cmpl
or
adc
cmp
push
push
lahf
inc
cmp
loopne
ror
jp
mov
xchg
aas
dec
sub
push
xchg
fistl
inc
ret
xchg
mov
pop
and
mov
pop
idiv
movsb
das
out
stos
and
jmp
jbe
and
hlt
bound
dec
mov
or
icebp
jb
mov
push
stc
adc
mov
rclb
xchg
sbb
sub
add
mov
imul
dec
fstpl
cmp
or
scas
cs
gs
sub
out
sub
cmpl
mov
xchg
jle
test
cmp
daa
sbb
or
call
jb
and
push
scas
xchg
mov
xlat
filds
in
sbb
xchg
pushf
mov
es
xor
adc
mov
fs
push
fdivrl
hlt
scas
xor
xchg
or
js
mov
lcall
clc
fidivl
xor
dec
push
pusha
dec
cwtl
xor
dec
daa
push
mov
icebp
pop
test
ror
sub
xor
sbb
out
filds
jle
mov
push
mov
call
das
cmpsl
and
sub
insb
ret
call
mov
or
push
adc
mov
push
pop
jbe
cmpsb
dec
cmp
icebp
pop
mov
imul
iret
jno
cld
or
out
sbb
xchg
xor
ds
sbb
jmp
sahf
and
jo
loopne
sbb
xor
dec
push
std
and
cmp
dec
sar
xor
inc
xor
or
subl
sbb
ljmp
in
ret
leave
repnz
push
xor
push
sub
mov
nop
dec
clc
or
stos
cmp
jnp
fsubl
ret
and
jecxz
test
xor
loopne
dec
push
loop
jno
sub
mov
dec
shl
cmp
cmpb
pop
xchg
fsubr
cmp
cli
jbe
repz
pop
mov
rorl
iret
push
inc
pusha
jbe
cmpsl
pop
and
cmp
cmp
sub
mov
cmp
in
cltd
inc
repnz
testl
xor
ret
mov
xor
sbb
gs
roll
es
jmp
sbb
lcall
out
sub
mov
or
push
lock
and
pop
cld
cmp
dec
rcrl
clc
inc
xchg
out
pop
mov
lock
movsl
ret
inc
pop
es
mov
cmpsb
out
and
call
mov
adc
cmp
mov
xchg
outsb
std
mov
and
push
jb
sub
inc
add
cmp
xlat
adc
or
jmp
adc
sbb
jmp
lahf
outsb
sub
jo
orw
sub
maskmovq
negl
pop
je
out
jne
mov
das
xlat
outsb
dec
cmp
adc
fnsave
sub
pop
in
data16
pop
mov
daa
and
shrl
lahf
movsl
pop
xchg
rolb
add
ret
test
jmp
shr
cmp
popa
push
das
jno
dec
loopne
lret
push
cmpsb
and
adc
mov
leave
or
xor
gs
inc
push
test
or
ds
cmp
mov
hlt
xlat
or
data16
pop
ret
sbb
test
cmp
movsb
mov
sub
push
dec
insb
adc
cs
stc
xchg
pop
sub
jnp
add
in
ss
lahf
add
cmp
mov
insb
pop
fwait
jnp
mov
arpl
sub
push
rorl
jae
jp
or
sete
inc
jge
mov
mov
paddw
pop
shr
xor
orl
add
in
cs
popa
cmp
dec
test
adc
add
aad
dec
in
dec
and
jecxz
cmpsl
sbb
cmc
and
adcb
add
or
test
inc
push
test
xor
pusha
out
and
mov
sbb
mov
fstps
dec
mov
sub
jnp
sti
mov
inc
je
sbb
mov
mov
sbb
push
repnz
jne
fdivrp
lock
dec
das
xor
cmp
and
dec
push
dec
das
test
je
jbe
fistl
mov
bound
stc
add
pop
test
test
cld
clc
cld
sub
daa
and
push
hlt
xor
jo
stc
and
pop
rcll
mov
sub
xor
lds
scas
push
mov
test
popa
xor
jb
lea
icebp
push
sti
mov
xor
inc
fwait
andl
jno
adc
cmp
mov
jnp
or
mov
pop
jno
jns
mov
dec
xor
in
cmp
xchg
xchg
cmpsb
jp
mov
lds
dec
add
xor
push
or
cs
sbbb
rclb
ss
stos
adc
or
or
ja
pop
inc
nop
mov
cmp
cmp
lds
fwait
push
xor
dec
jmp
mov
lods
aas
cpuid
lret
das
cmp
jecxz
adc
cmp
push
xchg
test
lds
lret
daa
jge
loopne
stos
icebp
movsl
pop
jnp
ss
pusha
add
flds
lahf
cli
loop
scas
in
scas
mov
dec
cmp
test
out
add
push
or
mov
push
adc
std
push
mov
out
and
inc
mov
in
inc
push
jb
pop
cmc
mov
out
stos
adc
xor
shll
fdivs
sub
add
sbb
mov
loop
sub
and
cmp
cmp
sub
xchg
rcll
bound
and
clc
push
xchg
sbbl
outsb
xor
sbb
jno
fistl
xchg
dec
sub
push
and
push
xchg
leave
and
push
or
cmp
test
sub
pop
or
neg
sbb
lret
cmp
jl
xchg
jo
loop
stc
pop
xchg
imul
inc
push
fidivrs
daa
push
movsl
push
mov
lds
jl
xchg
and
stc
push
idivb
or
sbb
add
fldt
mov
sub
push
pop
das
mov
int3
icebp
jbe
inc
paddsw
push
jmp
dec
aam
je
sbb
pop
pop
popf
sbb
xor
xor
or
pop
cwtl
loop
mov
pop
psrlw
jb
pop
mov
aas
outsl
daa
xlat
ret
stc
push
nop
mov
mov
jp
xchg
enter
sbb
push
jno
dec
add
push
adc
cmp
cmovnp
pop
ljmp
jno
call
cmp
and
sbb
test
mov
mov
jmp
rcrl
pusha
imul
sbb
jno
test
push
adc
mov
es
jmp
xor
out
jg
lret
add
cmp
addr16
gs
xor
cmpsl
or
xchg
daa
cmp
sub
cmp
push
push
lock
clc
or
and
lret
call
scas
mov
sbb
add
pop
ror
fnstcw
xor
mov
into
fnstsw
dec
decb
xor
xor
sub
int
cmpb
out
dec
insb
cmp
cwtl
push
dec
pushw
fisttpl
scas
pop
mov
mov
xchg
pop
jb
repnz
pop
mov
jg
int
out
adc
jb
pop
iret
xchg
in
stos
jecxz
push
push
cmc
push
and
out
cmpsl
sbb
scas
adc
pop
orb
cmp
mov
in
xor
xor
adc
add
stos
or
stos
cmovs
adc
bnd
sub
mov
inc
mov
cmpsl
and
rcll
xor
sbb
or
cmp
pop
fisubrs
jecxz
xchg
push
ljmp
outsl
bswap
cld
movsb
orb
shll
cmpsb
and
test
vmptrst
ret
jbe
in
mov
and
add
mov
js
imul
and
data16
inc
jle
inc
lcall
push
mov
pop
bound
jp
lods
jb
jmp
push
mov
pmuludq
out
fmulp
xor
pushw
cmp
cmpsb
repnz
jbe
push
push
test
movsb
je
mul
sbb
push
xor
cmp
and
repz
imull
out
jb
pop
xor
push
adc
jl
push
ds
hlt
test
out
xor
push
loop
push
pop
sub
mov
cmc
xor
push
je
inc
inc
pop
adc
data16
lds
cld
es
dec
clc
pop
out
pop
xor
testb
jb
sub
add
jge
push
jns
jo
xchg
mov
mov
scas
add
or
fiadds
sub
jo
scas
ss
cmp
xchg
ja
std
mov
push
enter
cmpsl
ds
push
push
fnsave
cs
imul
jmp
ss
or
sub
scas
roll
xchg
data16
push
dec
or
inc
add
ss
xor
ss
out
popl
jl
sub
dec
std
negb
xor
adc
lret
ror
inc
sbb
bound
ss
mov
xchg
push
mov
xor
das
dec
sub
mov
xchg
mov
inc
jns
dec
adc
fidivrl
inc
inc
imul
push
repz
ret
fidivs
adc
mov
cmp
rolb
push
pop
mov
pop
cmp
lods
scas
or
stos
or
fdivrl
mov
add
lret
bound
stos
dec
stos
ss
or
out
dec
and
shlb
insb
dec
push
mov
add
ds
mov
fidivrs
shrb
cmp
repnz
repnz
jecxz
dec
dec
repnz
pop
repz
inc
cmp
ss
cs
dec
mov
test
mov
inc
fisubrl
ss
dec
outsb
xchg
outsb
lock
dec
fiaddl
dec
bound
dec
ss
inc
xor
cmp
cmp
push
jp
adcb
inc
bound
cmpsb
inc
xor
mov
dec
push
stos
sub
idivl
pop
outsb
inc
lret
ss
push
mov
mov
int3
into
mov
add
lock
sbb
push
cli
sub
mov
xor
bound
stos
scas
dec
xchg
shl
xchg
lcall
fdivrs
ds
push
stos
dec
test
fdivs
fisubl
test
mov
jb
test
jo
mov
ljmp
scas
stos
push
cmova
lret
sub
out
push
inc
sbb
lods
inc
or
fistl
push
popa
sbbl
push
scas
mov
mov
dec
sub
std
jns
mov
inc
xlat
jecxz
dec
ljmp
ret
xor
mul
sbb
shrl
or
mov
and
jmp
stc
cmpsl
es
rcr
mov
dec
push
fistl
lret
adc
sbb
cmp
std
mov
test
mull
xchg
call
bound
inc
dec
jbe
clc
popf
mov
sbb
or
pushl
add
lret
mov
push
dec
inc
lods
ljmp
fdivr
out
sub
loop
push
in
cld
add
fwait
adc
push
inc
adc
xor
and
or
test
inc
pop
pop
test
fwait
jmp
je
repz
or
mov
adc
pop
vmread
pop
inc
dec
dec
cmp
ret
mov
faddl
movnti
push
ja
push
test
cmpsb
xor
les
xadd
bound
out
or
ret
adc
mov
pop
add
aaa
cmpsb
mov
inc
or
stc
push
popf
outsb
cwtl
out
push
dec
jne
daa
stos
out
sub
ret
pushf
sub
lods
or
pusha
cs
fs
lods
jge
xor
jnp
aaa
decl
popa
fcomps
mov
jp
punpcklbw
imull
inc
stos
mov
je
fcoms
das
cmpsl
jp
cmp
mov
add
mov
call
insb
movsl
inc
lahf
cmp
adc
cmpsb
mov
pop
sbb
call
cmp
sbb
xor
rcrl
in
sbb
pop
mov
push
mov
jmp
pavgw
lods
rcll
add
test
jb
imul
fiadds
sahf
adc
push
ficompl
sarb
mov
dec
loop
test
inc
pop
movsl
adc
pop
dec
jp
lds
cmovp
fsubrs
cmp
dec
xor
jnp
pop
push
lahf
cmp
sub
sub
inc
xchg
repnz
filds
aam
daa
jmp
lret
mov
or
inc
xchg
sub
and
popf
aam
push
sub
xchg
cmp
mov
sbb
xchg
cmpb
xchg
test
ljmp
sbb
sub
inc
pop
divb
out
dec
in
push
pop
jne
mul
scas
push
push
xchg
cmpb
and
xchg
inc
movsb
rcr
push
movsl
push
xor
and
jp
loope
xchg
push
cs
push
loope
jae
cmp
cmpsb
and
jbe
shlb
pop
xchg
cs
pop
jb
fcoml
sbb
cli
cld
subb
inc
repz
ret
out
xor
cmpsb
mov
jne
xlat
test
les
je
fistps
lahf
xor
ud1
lock
pop
movsb
mov
jns
xchg
mov
mov
insl
loop
or
mov
out
jl
or
xor
insb
stos
lock
dec
adc
lret
xor
push
fcomip
mov
hlt
lods
ud2
mov
xchg
sbb
push
mov
xchg
push
push
neg
mov
lahf
lods
fcos
inc
iret
mov
dec
mov
push
push
mov
cmp
sub
lock
inc
test
dec
int3
xchg
gs
stc
lret
dec
int3
add
jmp
pop
add
xchg
jnp
mov
mov
sub
push
cmp
fisttpll
addr16
stos
lahf
loope
dec
push
cs
addr16
divl
jmp
mov
push
aam
adc
sti
sub
inc
adc
mov
mov
andps
mov
jnp
out
mov
xor
das
movlps
aad
sar
xor
mov
cmp
pop
adc
push
xchg
fsubr
mov
pop
mov
cmp
fadd
imull
addr16
jmp
dec
sti
mov
clc
add
inc
sbb
sub
pop
lods
add
mov
call
adc
sub
sti
sbbb
dec
mov
shlb
sub
pop
movsb
push
je
cmp
fwait
sbb
xchg
jmp
push
jbe
xlat
loope
cmc
cmc
push
mov
call
jl
cmp
adc
andl
cmp
push
sbb
das
idiv
sbb
lock
test
xchg
loopnew
push
sub
pop
loopne
cmp
sub
mov
mov
loope
jge
mov
cld
inc
aam
dec
fisubs
ret
es
mov
xor
push
addl
push
imul
xchg
cltd
mov
sbb
lock
sbb
into
push
test
cmp
mov
in
mov
aas
icebp
inc
and
popa
jb
insb
jo
imul
pop
sub
add
pushf
xlat
push
fdivrp
stos
test
adc
shrl
repnz
lds
jmp
fists
push
push
push
loopnew
jge
int3
adc
xor
push
testb
out
sub
jo
lret
push
and
loopne
pop
test
in
rol
int3
lds
xor
lret
roll
mov
dec
pop
enter
outsb
jmp
pop
clc
fwait
xchg
jo
sbb
test
ds
or
decb
rol
cmp
jne
std
ss
and
xchg
inc
dec
in
test
push
mov
mov
inc
adc
mov
sbb
in
pop
dec
cmpsb
xor
ss
inc
jmp
ret
adc
xor
push
in
sbb
leave
push
cmp
dec
jl
cmc
std
lret
sub
jmp
imul
leave
addr16
repz
cmp
xchg
stc
jmp
xchg
dec
daa
dec
jbe
mov
pop
xor
ja
shl
aad
sub
movsb
xchg
in
xor
push
mov
pop
jo
fdivrp
fdivl
ss
push
bndldx
cmp
sbb
lods
stos
cmpl
dec
jle
mov
xchg
mov
or
cmpsl
test
jae
dec
aas
sub
adc
ss
sbb
hlt
pop
push
cmp
jno
shrb
and
or
test
pop
mov
inc
sahf
adc
inc
outsl
pop
lret
js
adc
mov
push
pop
popa
repnz
jae
xchg
jl
adc
ret
push
outsb
lods
out
mov
sbb
les
daa
sbb
push
xchg
mov
cltd
adc
mov
xchg
jb
faddl
popa
ds
pushl
jae
sarb
leave
loop
jb
idiv
push
cs
cld
sub
push
das
push
clc
decb
dec
mov
pop
jg
dec
adc
xchg
lret
mulb
popw
hlt
ret
out
cmp
dec
pop
in
lret
cmc
dec
push
push
enter
cli
adc
inc
cli
daa
dec
jno
fadds
test
out
ret
push
loopne
cmp
sbb
add
and
mov
pop
ljmp
xchg
mov
push
xchg
sti
fs
ret
cmpsb
out
cltd
inc
cmp
adc
aad
fisubrs
add
xor
cmovl
mov
dec
lock
cmp
pop
pop
sti
cmpsl
test
hlt
lods
push
push
in
lret
sub
cmp
test
imul
xor
adc
push
mov
insb
mov
punpckhdq
push
mov
cmpsl
sub
js
int
aad
dec
arpl
jno
or
decb
ret
bswap
sbb
cltd
mov
ret
xchg
scas
sub
div
jecxz
cmp
je
mov
ss
int
jmp
ss
frstor
scas
cmp
loope,pn
sbb
mov
int3
dec
rol
cs
cs
inc
cmpsl
jge
cmp
inc
stos
ds
mov
call
fwait
cmpsb
leave
push
xor
inc
lods
jbe
cs
cs
arpl
lods
cmpsb
jg,pn
lret
mov
xlat
adc
mov
mov
outsb
xor
dec
imul
repz
jl
push
sti
add
jb
push
aaa
cmp
inc
ss
mov
and
inc
idiv
cmpsb
shrb
xor
in
inc
insb
cs
std
insl
mov
stos
ljmp
shr
lret
push
xor
lret
ss
insb
scas
insb
ss
cmc
mov
lods
movsb
ss
repz
adc
jb
ret
push
mov
mov
dec
loop
pop
fsubl
mov
push
notl
dec
ss
inc
ja
das
outsb
daa
mov
inc
sub
lcall
shll
xchg
inc
ds
scas
push
les
jb
stc
jb
sub
repz
jg
cmp
push
lods
loop
out
mov
mov
xchg
outsl
fstpl
ja
je
cmp
data16
jl
cs
outsl
pop
jp
mov
outsb
cs
mov
ds
repz
aas
mov
outsl
repnz
dec
xchg
dec
ljmp
loop
adc
outsl
ja
mov
or
push
push
sbb
mov
cmp
push
mov
jae
mov
sti
pop
scas
sarb
adc
push
push
pop
xchg
cmp
enter
mov
stos
stos
xor
cs
lahf
test
mov
ja
dec
je
and
sub
xor
loop
push
jno
ret
lds
daa
daa
cld
mov
aad
inc
lods
lcall
fs
fs
mov
pop
lcall
ss
sub
sbb
dec
inc
sub
inc
into
sbb
mov
pop
mov
pop
dec
imul
pop
ja
insl
fwait
jg
cmp
mov
roll
enter
sbb
pop
push
mov
das
fsubrp
mov
scas
pop
mov
mov
inc
ret
outsb
sbb
push
dec
dec
ss
insb
lret
cs
jl
repnz
ds
cwtl
jl
mov
jbe
jb
addr16
outsl
dec
push
dec
inc
inc
jbe
push
add
push
pop
push
jl
push
ja
aas
ljmp
ss
outsl
inc
lcall
fisubrs
sub
sbb
push
gs
cmpb
bound
jle
add
or
add
into
test
cmp
push
cmpsb
out
cli
push
fimull
push
imul
loop
and
out
das
stos
imul
lds
mov
scas
jl
push
mov
cmp
cmp
out
inc
push
jl
mov
jle
ds
pop
dec
mov
cli
aas
daa
pop
mov
outsl
cmp
out
js
mov
int
outsb
push
jbe
ds
into
call
push
dec
dec
ret
dec
push
inc
push
mov
dec
push
popf
jb
sub
pop
outsl
pop
fidivrs
stos
mov
mov
addr16
jbe
xchg
js
push
dec
mov
xchg
mov
inc
mov
int3
push
stos
dec
test
jb
lret
lret
cmp
xchg
mov
mov
cmp
jbe
dec
dec
outsb
ss
inc
ja
test
stos
pmaxsw
sbbl
add
push
adc
or
jg
xor
mov
outsl
mov
addr16
sbb
xchg
jno
gs
push
xchg
jns
rol
adc
mov
jo
adc
mov
dec
and
push
push
rol
fsubr
jg
adc
xchg
mov
sbb
push
jl
pop
aad
out
pop
out
icebp
xchg
mov
push
mov
test
jl
inc
inc
xorb
sub
inc
push
iret
sub
dec
movb
jp
dec
sub
loop
addr16
push
xor
popf
mov
mov
out
dec
wbinvd
mov
inc
xor
lods
pusha
mov
mov
cmp
cmp
test
sti
daa
cmp
pop
sbb
push
push
jns
sub
pop
lock
out
sub
sahf
adc
loope
push
dec
mov
add
xor
lea
mov
sub
adc
or
ret
mov
mov
pop
mov
sub
add
repnz
shlb
jno
and
jnp
sbb
mov
js
jne
and
mov
jbe
push
adc
lds
and
aaa
cmovb
xor
push
xor
loop
ljmp
test
lods
push
sbb
sub
jg
xchg
pop
xchg
pop
mov
push
or
outsl
inc
xor
sub
ret
push
fwait
xor
sbb
cmp
pop
scas
jno
adc
sub
imul
adcb
testb
mov
imul
fdivrl
sub
aad
cmp
xor
ljmp
adc
push
pop
cmp
xor
mov
add
pop
cmp
xchg
int3
in
mov
cli
cmp
pop
stc
ljmp
bound
push
rolb
pusha
into
xchg
stc
iret
push
es
mov
sub
das
mov
pop
xchg
adc
add
scas
shrl
sub
xor
cmp
jbe
sbb
ds
mov
xor
add
mov
mov
pop
arpl
leave
aam
mov
mov
stos
fdivrp
aam
pop
sbb
lods
xchg
int3
out
jbe
stc
fisttpl
push
sbb
inc
pop
sub
xchg
jae
leave
mov
shr
jo
push
push
mov
and
imul
cmp
insb
loope
xor
arpl
call
jp
mov
fnstsw
subb
cmp
sub
adc
cmp
arpl
or
test
sbb
jbe
lods
dec
mov
xchg
mov
and
insl
loope
sbb
mov
mov
test
cmc
sub
and
and
cmp
jne
sarb
mov
inc
std
sub
dec
lods
sub
jno
out
ljmp
cmp
jecxz
xor
mov
jl
mov
out
xor
jno
sbb
add
or
sbb
lret
jne
int3
outsl
cmp
mov
jnp
add
test
sub
mov
je
bnd
and
scas
add
stos
lret
sarl
fsub
std
push
push
stos
or
or
loop
mov
mov
mov
mov
cmp
clc
hlt
ja
scas
neg
movsb
jbe
add
pop
aad
xor
inc
or
fdivr
negb
sbb
test
pushf
andnps
cmp
negl
push
dec
xchg
int3
add
mov
gs
sbb
dec
jo
je
daa
or
ja
sub
int
jb
jb
mov
sub
and
mov
shr
or
adc
clc
push
pop
xor
loop
cmc
sub
popa
int
test
jno
lahf
lcall
aaa
add
cld
adc
add
iret
lock
sbb
mov
xor
push
imul
cmpsb
or
lret
adc
jg
cmpsl
out
cli
mov
push
adc
push
mov
cmpsl
mov
movsb
movsl
xor
std
lret
rorb
test
loopne
aam
or
dec
jmp
out
cmp
dec
jg
clc
mov
dec
out
inc
sub
shl
data16
stos
adcl
pop
pop
das
mov
ss
mov
outsb
jnp
in
setbe
adc
or
and
call
push
outsl
xchg
cmpsl
imul
lcall
iret
call
push
add
es
cmpsb
and
mov
divb
fnstenv
xor
lds
fwait
mov
in
in
mov
cs
push
cmp
adc
pop
fwait
pop
dec
mov
les
mov
data16
xor
imul
ret
sub
jbe
pop
jo
clc
les
xor
or
fwait
dec
jns
push
outsb
mov
jb
xchg
jo
jno
ja
icebp
out
lret
sti
inc
lds
push
mov
dec
shlb
sbb
xorb
push
std
faddl
mov
cmp
push
clc
ljmp
push
mov
fnstsw
dec
not
xor
and
clc
pop
xchg
hlt
call
orl
and
pop
incb
push
inc
insb
inc
daa
xor
loopne
inc
bound
dec
jecxz
imul
xchg
loopw
stos
pop
mov
and
xor
inc
xchg
repz
mov
and
sahf
xchg
je
leave
xor
pop
shlb
push
push
inc
jns
out
push
cmovnp
xor
push
jns
scas
push
xor
imull
aas
fistpl
sti
dec
push
popf
ret
jl
mov
push
stos
popa
ret
stos
mov
les
test
jmp
jbe
in
mov
mov
clc
add
pop
mov
lret
call
dec
les
pusha
mov
mov
pop
sbb
dec
mov
pop
jb
jne
mov
inc
xor
lret
icebp
in
mov
adc
setge
lret
inc
lods
push
cwtl
ret
ljmp
inc
jnp
xchg
and
xchg
xor
jne
mov
jl
push
and
lret
add
jne
dec
notl
repz
aas
cmp
nop
mov
jecxz
push
repnz
pop
mov
bound
rorb
and
push
mov
in
cmpsb
dec
in
sbb
jno
jl
inc
call
sub
dec
cmpl
out
mulb
cmp
loopne
scas
and
push
pop
xlat
ret
adc
add
ljmp
aaa
fstl
popa
fldt
movsl
dec
push
push
aam
sub
jne
out
shlb
mov
mov
sarl
or
cld
aad
std
adc
inc
cmpsl
xor
imul
mov
cld
push
push
jbe
inc
clc
aaa
adc
fwait
popa
ss
sbb
in
stc
sbb
add
popw
push
dec
out
jns
push
add
stos
addr16
add
scas
or
and
sub
out
inc
jge
aam
adc
clc
mov
and
lds
push
xchg
shll
inc
xor
ficomps
mov
jp
xor
rcr
dec
fldcw
es
xor
mov
push
cmp
aam
or
inc
xchg
inc
sub
or
clc
ds
out
pop
mov
sub
lahf
int3
mov
adc
out
jecxz
push
fistps
push
or
int3
push
rorl
scas
push
dec
pop
push
mov
mov
cmp
loope
mov
push
outsb
push
xchg
jo
shlb
mov
mov
addl
and
mov
test
in
add
out
sub
stos
mov
push
shrl
mov
push
dec
hlt
jnp
scas
mov
icebp
adc
sub
fisubl
xor
fucomp
popa
pop
in
scas
inc
mov
inc
or
decb
mov
push
and
push
add
movsl
or
xchg
movsb
test
cmp
orl
les
in
xor
rclb
xor
sbb
jl
cmp
clc
aaa
dec
cmp
je
jmp
addr16
and
adc
jmp
fnsave
add
jno
mov
push
call
push
mov
dec
aad
movsl
mov
adc
pop
sbb
jl
mov
sub
pop
ret
jbe
es
cmpsl
or
and
dec
into
push
mov
jns
adc
xchg
das
clc
std
std
push
adc
mov
cwtl
cmp
jno
insb
push
ret
call
insl
ss
push
dec
aam
jp
or
cmpsl
mov
std
and
fists
enter
ds
faddl
cmp
mov
dec
sub
xchg
jne
cmovl
bound
aam
roll
scas
mov
push
jns
idivl
sahf
iret
sub
dec
cmpsb
stos
sbb
xchg
inc
dec
or
imul
scas
jmp
dec
dec
and
stc
mov
adc
orb
aam
insl
sub
sbb
inc
mov
test
jnp
jmp
setge
lret
or
jmp
jl
xchg
out
jmp
dec
sbb
pop
and
dec
push
push
aad
idivb
in
out
or
xor
loop
sbb
xchg
inc
fstps
cmpsb
mov
inc
popf
add
xchg
cwtl
inc
sub
mov
cs
add
xchg
jg
cwtl
xor
mov
dec
mov
ljmp
stos
pop
xor
inc
mov
cwtl
lea
lods
push
xchg
pop
cmp
xor
ret
or
subb
jecxz
in
inc
pop
cs
jne
adc
mov
pop
cs
push
cmp
xor
pop
ss
push
sbb
fisttpll
push
orl
pop
sub
sub
xchg
out
mov
xchg
push
xchg
dec
ss
jg
and
sbb
ffreep
mov
adc
dec
lock
js
and
negb
push
pusha
lods
push
out
fs
pop
ss
cmpsl
and
xlat
mov
imul
mov
sbb
jge
fdivrs
push
outsl
scas
lods
test
sub
fcoml
cmpl
out
adc
daa
loop
mov
and
dec
int
fwait
call
jp
sbb
lea
push
repz
xchg
sbb
cmp
iret
repz
negl
sbb
in
hlt
popf
addr16
push
aam
xor
int3
loop
ret
and
cli
adcb
lret
xor
mov
adc
scas
scas
jb
in
push
insl
jle
fstl
cmpsl
and
es
orl
and
dec
mov
push
push
or
add
cwtl
dec
or
repnz
stc
cmpsl
js
mov
or
movsb
or
add
xorb
inc
mov
mov
gs
arpl
cld
inc
movsl
ljmp
xchg
push
mov
movsl
sbb
bts
cmpsb
sub
sub
in
mov
cmp
repz
imul
cmpsb
scas
push
dec
sub
lea
push
je
sbb
jae
add
into
sub
sub
outsl
lcall
test
lea
mov
das
pop
popf
out
push
push
dec
insb
icebp
mov
push
xlat
or
arpl
mov
push
or
rol
mov
sub
ljmp
dec
test
sub
sbb
invlpg
ret
adc
pop
bound
rorb
sbb
push
iret
jo
cwtl
divps
cmpb
mov
cmp
mov
fcomps
mov
adc
or
das
fildl
push
and
and
mov
mov
test
cmc
aad
ffreep
push
xor
sarb
lods
ja
jbe
mov
cmpsl
movsl
lea
push
std
and
and
jo
andl
dec
jmp
ret
lret
add
data16
jle
jae
xchg
sub
pop
jbe
dec
mov
or
out
in
lahf
sub
stos
push
or
incb
cmpsb
fdivs
xor
push
out
fstps
mov
xor
cmp
jns
les
xor
mov
push
cmovnp
mov
jmp
in
xor
ret
adc
idiv
int
pcmpeqd
enter
ds
sbb
mov
and
push
mov
adc
je
repnz
jl
pop
imul
je
jbe
pop
cmpsl
loop
icebp
inc
xor
scas
sbb
test
orl
pop
roll
add
popf
test
push
hlt
adc
dec
inc
mov
lret
mov
push
cld
and
push
mov
xor
push
mov
scas
pop
mov
stos
jno
or
jo
aas
mov
addr16
loopne
dec
int
aam
xor
sbbl
cmpsb
out
out
xor
mov
xchg
stc
mov
hlt
add
and
cmc
pop
add
movb
sbb
movaps
xor
jo
cmpsb
lds
lahf
pop
push
mov
and
cmp
into
daa
and
es
ds
mov
mov
sub
mov
push
mov
jo
cmpsb
test
pop
mov
push
push
imul
mov
cmp
sarl
stc
test
call
cmp
sbb
mov
xchg
pop
pop
out
adc
bound
mov
shrl
scas
stos
or
in
fidivl
mov
pop
inc
test
addr16
leave
adc
inc
js
and
sbb
pop
lret
push
lcall
cld
sub
sti
mov
dec
cmp
cld
jg
test
aaa
dec
pop
sbb
xor
push
push
add
stos
cmp
dec
imul
cmp
adc
inc
clc
and
nop
cmpsw
cmpsl
jl
outsl
cmp
inc
adc
adc
xor
push
arpl
fistpl
cmp
ds
roll
cmpsb
mov
inc
jne
stos
jo
cwtl
sub
pop
or
lods
xor
ds
adc
push
xor
pop
xchg
adc
dec
or
loope
xchg
xor
mov
xor
outsl
in
mov
cmp
inc
xor
sub
adc
mov
adc
mov
xchg
jg
inc
cmp
scas
mov
cltd
pop
imul
jns
and
js
add
mov
hlt
imul
dec
es
or
adcl
inc
xchg
test
fsts
push
sub
gs
add
loop
js
lock
out
jl
shll
add
mov
xchg
mov
jb
stos
gs
mov
jo
adc
xchg
and
je
mov
push
push
sub
jb
in
push
std
ja
pop
cmp
or
push
xor
sbb
dec
pop
mov
dec
clc
call
cmpsb
out
inc
call
stos
aaa
pop
nop
inc
push
leave
or
hlt
xchg
pushf
jo
test
inc
jns
cli
mov
das
dec
add
and
sub
js
xchg
aaa
cmp
jmp
aam
mov
je
arpl
jmp
add
cltd
mov
adc
jmp
in
mov
jecxz
outsb
int
pop
ret
push
push
mov
ljmp
inc
fistps
mov
lods
and
lret
mov
enter
xchg
cld
addb
repz
loopne
jp
dec
aad
mov
and
push
iret
movsb
pusha
dec
scas
lret
and
dec
mov
lock
aad
mov
scas
inc
push
inc
fs
mov
out
or
mov
divl
subl
sub
daa
icebp
pop
inc
or
mov
test
pushf
mov
mov
sub
adc
out
imulb
and
subl
arpl
cmc
xchg
sahf
mov
aaa
fiadds
mov
cmpsb
or
daa
xorl
mov
jmp
test
lods
cli
pop
jne
sbbl
inc
pop
sub
test
scas
pop
loop
cld
xchg
les
xchg
stos
pushl
push
cmpsb
cmp
push
ret
psubusb
lds
movsb
dec
mov
movsb
cmc
stos
ret
ficoml
jecxz
out
inc
add
cmp
leave
xchg
ficoms
adc
mov
cmpsb
out
xor
imul
cmp
push
rorl
mov
add
jnp
sti
daa
js
int3
ret
int
add
jg
bound
pop
inc
adc
pop
cmp
sbb
ss
out
dec
scas
adc
push
jnp
into
jmp
ja
data16
push
mov
mov
fwait
jne
daa
jle
mov
dec
es
pushf
push
je
push
push
out
clc
enter
ret
pop
movb
stos
add
adc
jmp
movsl
stos
jo
cmpsb
pop
sbb
rclb
movd
xor
sub
inc
sarb
ret
jne
lret
iret
addr16
mov
push
dec
ljmp
mov
sbb
outsb
jp
stos
and
mov
sahf
cmc
daa
push
out
mov
dec
cmp
iret
fidivs
cmp
cmp
fisttpll
mov
stos
mov
push
rcrl
push
fsub
ss
mov
mov
or
stc
dec
int3
pcmpgtd
mulb
test
add
push
arpl
mov
loope
out
sub
add
add
test
es
outsl
out
imul
xlat
iret
shl
mov
dec
lods
xchg
cs
aad
lods
push
lcall
out
mov
sub
clc
adc
leave
icebp
cmpb
aam
dec
fwait
in
pop
pop
xchg
and
dec
cmp
or
jbe
movsb
xor
pop
xchg
mov
xchg
adc
mulps
outsb
jno
mov
popf
cmp
push
js
fs
mov
push
jo
push
adcl
mov
mov
and
je
pop
stc
inc
stos
push
xchg
loopne
movsl
lret
and
push
sbbl
aas
setg
push
adc
aam
push
rolb
or
in
lds
orb
cli
cmpb
mov
push
jbe
sub
jne
dec
mov
sub
aam
cmc
push
xchg
pand
mov
inc
jge
lret
fimull
mov
cmp
adc
bnd
cmp
push
enter
pop
sub
pop
xchg
sbb
mov
loop
push
dec
jae
outsb
clc
inc
and
in
or
cs
pusha
xor
addr16
pop
out
daa
imul
xor
scas
dec
pop
dec
xor
inc
fisttpll
ss
iret
ds
loop
adc
sub
mov
cmp
fcmove
xor
or
sub
pop
mov
mov
packsswb
mov
ds
std
sahf
divb
lock
clc
ret
sbb
cmpsb
ss
push
data16
std
addr16
cmp
outsl
sub
pop
fidivl
mov
lea
mov
jmp
and
les
lds
cmpsb
cs
xor
lahf
mov
xchg
int
inc
mov
out
test
cmp
imull
sub
or
idivb
or
mov
mov
push
enter
inc
cs
bound
imul
stos
jl
aas
mov
insb
sub
lods
cmpsb
inc
not
xchg
mulb
mov
ds
sbbb
cs
inc
sub
mov
loop
xchg
jb
xchg
and
fidivs
cli
sub
pop
xchg
outsb
jg
sub
mov
stos
pop
enter
cmpsb
lock
mov
movsl
jl
rclb
stos
lret
stos
cmpsb
cmp
sub
dec
outsb
cmp
mov
es
ss
fisubrs
jbe
xor
enter
out
mov
inc
jns
shrb
testl
pop
jle
push
ja
orl
push
dec
inc
iret
lods
mov
stos
xchg
test
xchg
bound
stos
mov
into
rolb
lcall
lods
out
dec
cmp
jae
inc
dec
lret
inc
rclb
negb
ljmp
mov
jl
mov
ljmp
dec
dec
ss
sub
lahf
pushf
in
mov
lret
jmp
dec
jne
push
ljmp
scas
sub
mov
push
ret
mov
cmp
faddl
mov
das
sub
stos
jle
loopne
lahf
cmpsb
and
dec
fldt
ret
add
in
lcall
call
das
jno
push
fst
movsb
cmp
sbb
pop
or
stos
out
adc
add
loopne
mov
pop
loop
dec
mov
jo
je
pop
push
pop
sub
xor
imul
mov
mov
sbb
add
push
jne
int3
jg
push
repnz
and
inc
xchg
test
rcr
jo
scas
movsl
cwtl
mov
imul
xor
jmp
sub
dec
push
xor
and
aam
pop
and
jmp
xchg
into
jno
stc
pushf
and
jl
daa
xchg
in
stos
cmp
clc
out
push
icebp
test
outsb
xorl
sbb
adc
int3
xchg
push
popf
pop
test
loop
sub
xchg
mov
lods
jecxz
stos
sub
rorl
mov
orl
dec
jl
loopne
pushl
xor
aam
cmp
scas
mov
pop
and
or
mov
aad
fsubrl
in
repnz
jecxz
cmp
mov
aas
sahf
popf
ss
movlps
mov
dec
ret
push
popa
movsb
ds
inc
push
mov
jge
and
pushf
fisttpll
xchg
push
addr16
xor
sub
inc
movsl
mov
adc
test
mov
orw
sti
cwtl
fidivrs
mov
inc
clc
cli
mov
gs
jbe
in
adc
mov
push
adc
adcb
xor
pop
push
fcmove
ss
pop
mov
sub
push
jne
mov
stos
nop
outsb
stc
xor
mov
add
pop
cltd
in
fwait
mov
movsb
inc
sub
call
push
pop
cmc
add
loopne
fwait
aam
xor
mov
jns
out
outsl
cmp
xchg
loope
jmp
jmp
stos
ss
mov
cmp
pop
xchg
daa
ret
jge
lock
mov
adc
mov
pop
adc
pop
aas
push
insb
jmp
jbe
or
movsl
nop
repnz
push
lret
xchg
call
sbb
jecxz
mov
push
dec
jl
test
fsub
xor
out
pop
data16
push
adc
pop
imul
mov
lock
clc
cmpsb
and
inc
push
es
ds
xor
test
add
cmp
enter
das
cltd
aad
ret
and
sahf
mov
imul
jnp
gs
mov
outsl
cmp
int3
sbb
insb
add
push
pop
add
sbb
inc
xor
in
imul
add
das
dec
in
jb
popl
icebp
pop
push
into
jo
mull
adc
cli
cmc
jns
push
mov
add
cmp
mov
enter
int
test
dec
push
popf
testl
push
cmp
xchg
addr16
and
lods
ret
lds
pop
stc
push
rcll
rcrb
sub
in
mov
je
les
cmp
adc
test
cmp
outsl
cmp
std
xchg
mov
push
cld
xchg
xchg
inc
add
pop
dec
xchg
shll
lds
inc
shll
push
pop
mov
sbb
repnz
push
jge
ficoms
add
movsb
decb
ret
sub
cmpl
push
mov
arpl
cmp
sbb
mov
sbb
rol
push
sub
test
xor
je
xor
je
stc
sub
sbb
scas
adc
dec
subl
push
cmpsl
std
scas
mov
and
adc
add
ret
pop
enter
out
adc
aas
sbb
xchg
repz
cs
pop
cmp
sbb
xchg
pop
pushf
mov
in
pushf
mov
cmp
cmp
out
push
loope
mov
mov
sbb
test
sub
jp
mov
sub
mov
out
and
and
decb
pop
mov
jmp
lods
arpl
or
aad
xchg
pop
rorl
jecxz
es
test
orl
and
pop
sti
addr16
out
cwtl
mov
adc
cmp
stos
ss
ds
ja
cmp
mov
lahf
cmp
xchg
push
sbb
data16
fstp
dec
lods
sahf
lods
jae
cltd
mov
int
lods
imul
pop
adc
jmp
js
lret
xchg
inc
in
or
push
pop
test
jbe
iret
std
mov
in
push
arpl
push
mov
data16
sbb
mov
sub
lods
adc
pop
call
dec
xlat
sub
push
sub
push
out
push
fcomp
mov
mov
maskmovq
testl
ds
popf
adc
sub
and
xchg
call
testl
outsb
pop
flds
in
imul
push
sbb
dec
pand
test
mov
fbstp
push
ss
loop
shl
push
jne
jp
pop
mov
roll
sti
test
push
test
sahf
jle
inc
jecxz
or
movsb
outsl
dec
fdivrl
fwait
out
push
call
das
scas
or
lret
sub
ss
xorb
cmc
outsb
orb
fistpll
repnz
daa
stos
fimull
nop
xor
dec
mov
outsb
mov
and
pop
das
je
shll
add
mov
sub
mov
or
sbb
jp
sar
cmp
xchg
sarl
jmp
clc
popl
xor
add
test
cld
sub
enter
stc
ss
lret
js
mov
lods
and
out
push
mov
lahf
inc
push
idivl
mov
inc
ljmp
sub
shrl
cmp
push
dec
testl
aam
mov
adc
xor
xchg
jno
sub
decb
div
xor
and
jbe
mov
xchg
mov
fdivr
cmp
mov
inc
sub
mov
shld
insl
lods
cmp
das
mov
dec
in
jbe
pop
pmaxsw
and
into
outsb
or
xlat
ret
aas
mov
xor
sub
insb
sub
cmpsl
sti
lar
or
jo
mov
inc
inc
pmaxub
ljmp
sar
sahf
or
lods
sub
movnti
push
mov
or
jo
leave
popf
mov
ja
in
lcall
fistpll
je
inc
mov
ret
mov
mov
adc
into
fistpll
pop
mov
cmp
stc
dec
pop
inc
fildl
mov
cmp
leave
stc
mov
or
scas
add
jl
adc
mov
psrld
mov
adc
bnd
mov
pop
xchg
cld
inc
jge
jbe
push
dec
data16
insl
lret
idivb
add
stos
or
clc
sbb
loopne
out
push
pop
jp
and
cmp
js
in
out
or
daa
mov
call
xchg
sub
enter
push
out
xor
mov
sbb
mov
stos
and
pusha
stc
test
and
in
test
ror
or
sbb
xor
sub
push
hlt
movsl
mov
mov
jb
in
stos
xchg
sarb
nop
jae
or
stos
jmp
xor
stos
loope
xchg
jnp
xor
rclb
adc
xor
iret
xchg
inc
leave
jl
jbe
popf
sub
clc
jge
test
pushf
push
out
xchg
daa
or
icebp
scas
jno
push
mov
js
setbe
pop
in
fcoms
mov
imull
out
fst
adc
push
mov
in
leave
mov
and
and
daa
orl
adc
dec
orl
add
cli
fmuls
out
jg
adcb
jnp
sbb
lahf
pop
xor
hlt
push
std
daa
jp
mov
jnp
or
fstps
aaa
sub
sbb
in
sti
push
add
aaa
lcall
sbb
jl
or
aaa
mov
scas
ja
sub
data16
inc
add
cmpsb
pop
mov
inc
jns
out
cmpsl
call
mov
jae
lods
jns
cmp
movsb
sub
mov
roll
push
mov
jl
lgs
aad
cmp
pop
repz
sbb
popf
and
icebp
dec
add
xchg
pop
jae
ret
and
push
or
pop
repnz
xor
ljmp
cmp
xchg
lock
subl
call
enter
js
cmp
lahf
mov
xor
pop
mov
and
dec
sbb
adc
int
push
scas
cmp
stos
cld
sub
leave
in
into
mov
cmp
pop
sbb
mov
popf
jae
dec
push
push
clc
mov
or
shrd
imul
cmpsl
mov
and
xchg
push
push
adc
cmp
mov
sbb
mov
pop
push
lock
test
jno
pop
or
lds
fsubrs
pop
ljmpw
inc
sbb
sub
out
cmpsl
jbe
push
xchg
cmovnp
push
inc
les
xor
jecxz
push
hlt
cs
dec
push
movsb
dec
dec
pushf
cmpb
sub
cmc
push
xchg
add
xor
xchg
repz
int3
adcl
js
add
sarl
nop
outsb
pop
cmc
xchg
dec
sbb
lock
das
scas
aas
add
pop
imul
jle
pushf
push
mov
jb
add
push
pop
add
aas
outsb
out
jno
lea
jmp
das
insl
scas
add
mov
shll
sbb
and
inc
mov
into
jb
jge
loop
out
sbb
cmp
in
dec
out
xor
mov
inc
fildll
scas
out
sbb
xor
das
shll
jmp
mov
test
ss
test
sub
mov
jns
mov
dec
lods
push
stos
in
cmp
cmp
movsb
push
push
xor
mov
dec
into
xchg
push
in
leave
add
seto
cmpsb
push
and
ret
dec
inc
scas
adc
aas
jg
notl
clc
xor
xchg
into
add
out
fldenv
stc
xchg
aaa
cmc
iret
pop
rcrw
shrl
clc
out
sub
inc
cmpsb
adc
mov
push
push
ret
stos
addl
cmp
cmpb
mov
daa
fdivr
mov
xor
lea
mov
pusha
stos
sub
push
sub
js
jg
inc
jnp
das
sbb
push
xor
clc
adc
cmpsb
inc
hlt
mov
lds
repz
push
cmp
test
inc
mov
sub
push
andl
jp
les
loop
and
mov
lea
dec
test
popf
aad
add
outsb
add
aas
mov
pop
cmp
sbb
cmp
mov
lods
or
pop
or
repnz
push
or
cld
xor
and
mov
mov
mov
xchg
push
iret
dec
dec
out
jb
cmc
test
ret
daa
jge
mov
or
adc
mov
push
pop
stc
cmpsb
or
push
lock
sti
lock
add
mov
push
clc
sub
push
mov
scas
pop
sarl
push
scas
subb
mov
je
test
sub
add
mov
test
add
lea
dec
jae
sub
ret
pop
pop
and
stos
jl,pn
dec
loope
stos
addr16
popa
pop
loop
inc
jae
cmp
dec
jl
mov
xchg
aas
mov
and
loopne
add
sbb
cmp
in
jle
mov
test
sbb
xor
push
sbb
mov
negl
ss
imull
gs
cmpsl
mov
loopne
daa
push
flds
cmp
push
adc
adc
call
insl
fs
in
cmp
shlb
or
pop
mov
push
imul
inc
test
out
xor
xchg
in
mov
fsubr
out
gs
pushf
pop
aaa
push
test
xor
rorl
popa
jl
cmp
sub
stc
add
test
sbb
stos
lock
cltd
bound
mov
push
loope
add
lea
and
mov
fadds
sub
dec
jae
ds
mov
jp
cmp
popf
movsl
clc
adc
cmp
push
loope
and
lods
rorl
mov
fnstsw
sti
xor
subb
cmp
lods
ljmp
push
jno
shlb
mov
nopl
loopne
dec
cs
xchg
dec
mov
ds
push
push
stos
out
nop
cmp
inc
mov
jl
push
scas
pop
push
je
sub
loopne
out
dec
jne
rcll
js
shr
sub
sarb
dec
mov
scas
or
jb
push
jne
aas
mov
call
test
les
ret
push
cmpb
sub
lds
enter
xor
js
outsb
xchg
dec
clc
push
push
pop
xor
loope
jns
inc
test
sbb
imull
add
push
add
pushl
add
adc
daa
mov
sub
mov
repz
or
aad
sub
rorl
xchg
push
sahf
or
cmpsl
pop
rol
mov
fnstsw
jne
xchg
aad
dec
out
sbb
cmp
clc
je
lret
stc
outsb
cmc
in
lods
fisttpll
dec
sub
xchg
aad
and
push
adc
or
jo
push
inc
dec
xlat
and
test
js
aad
xchg
in
sarb
js
jmp
das
push
shrb
aas
popa
clc
jns
ja
cs
xchg
mov
jne
mov
and
dec
push
test
clc
clc
in
jbe
mov
pop
call
xchg
mov
cmp
push
sbb
movsb
xchg
and
es
ja
add
xor
jno
int3
mov
enter
in
jbe
push
lret
imul
mov
dec
add
mov
xchg
sub
or
scas
mov
out
roll
daa
gs
xchg
push
loope
inc
stc
push
ret
ss
enter
adcb
push
daa
mulb
hlt
ja
out
sarl
dec
call
loop
xchg
mov
pop
aad
dec
ss
jbe
sbb
test
std
xor
frstor
jo
pop
cmp
mov
cli
bnd
sub
loope
and
pusha
xchg
add
jmp
fs
ljmp
stos
jmp
mov
jp
or
cmp
hlt
jecxz
cmp
add
xor
jmp
cmp
sbb
mov
inc
mov
clc
push
xchg
arpl
mov
xchg
stc
push
xchg
lret
jb
and
hlt
fidivrs
stos
fsubp
fsubl
movsb
mov
mov
cmpsb
out
into
adc
clc
mov
cmp
and
inc
std
repnz
sahf
fdivrs
sub
jnp
stc
cmpsb
or
repz
mov
and
dec
movlps
add
or
xchg
aas
mov
push
jmp
and
mov
pop
hlt
fs
push
js
or
adc
add
pop
in
ret
push
and
fsubrs
push
push
or
or
jo
arpl
sbb
jns
in
jg
inc
sbb
adc
xlat
cli
leave
xchg
add
push
mov
into
leave
test
movsl
jo
aaa
ja
sbb
xchg
cld
dec
mov
movsl
mov
leave
data16
sbb
lock
mov
mov
int3
aas
xchg
sbb
pop
push
xor
xlat
std
dec
mov
inc
ljmp
push
sub
mov
daa
add
scas
or
cld
xor
cmc
push
sarl
or
xchg
dec
cli
or
add
scas
mov
adc
mov
cs
movsl
ds
loop
cwtl
dec
jno
out
dec
pop
sti
or
sub
xorb
test
call
push
orl
cmp
ljmp
sbb
xchg
sbb
jmp
push
or
pop
xor
or
cmpsl
stc
or
pop
cmp
push
or
sub
xor
xor
jge
dec
add
mov
jno
outsl
es
cmpsb
add
dec
sub
mov
adc
andl
inc
mov
xor
loope
test
mov
or
daa
lods
data16
es
and
fstps
push
ret
outsb
inc
test
sub
mov
inc
cmc
lcall
push
jmp
stos
mov
sub
lock
xchg
pop
jno
jge
mov
inc
mov
mov
rorb
shrb
mov
push
test
adcb
push
mov
ljmp
data16
data16
xchg
stc
rolb
pushf
sbb
imul
rcll
test
mov
cli
inc
dec
rcll
cmp
xchg
outsb
xchg
negb
ss
and
psubsw
fdivs
movsb
in
ja
pop
dec
push
and
in
shl
scas
rcrl
loopne
fwait
mov
dec
mov
cmp
mov
add
push
pop
sbbl
loopne
sbb
and
adc
fisttpl
push
add
dec
outsb
imul
add
xchg
jnp
in
repz
fldpi
dec
outsl
dec
push
movsb
push
xchg
jo
mov
je
mov
cmpsl
mov
and
mov
jp
mov
cmpsb
ljmp
lock
addr16
or
dec
loop
lahf
sbb
out
sbb
ror
xor
sub
cmpl
jo
aam
sub
mov
je
lret
xchg
xor
mov
push
shll
fdivs
mov
out
xor
cmp
xor
xchg
xor
jmp
sub
ss
pop
push
inc
into
xchg
push
arpl
mov
movb
scas
out
push
leave
add
icebp
idiv
addl
outsl
pop
cmpsl
cmp
sbb
in
aas
inc
clc
sbb
mov
mov
ja
xchg
push
cltd
sbb
mov
test
lahf
cwtl
mov
out
iret
pop
ret
add
push
jne
or
jbe
das
data16
xchg
inc
adc
shll
cmp
jo
sarl
jne
or
cmp
ljmp
sbb
xor
cmc
xchg
ffreep
mov
in
rcrl
xchg
jbe
xchg
add
test
mov
add
mov
xchg
push
repz
push
repz
push
shlb
and
repnz
mov
insb
mov
rorb
stc
test
or
sbb
fwait
cs
out
push
arpl
sub
loopne
in
inc
outsb
or
push
push
or
mov
mov
push
xchg
es
ret
mov
adcl
stc
xor
xor
pop
add
addr16
lret
sti
mov
fwait
pop
push
sub
and
sub
xchg
jb,pt
jg
dec
xor
sbb
cli
adc
sub
xor
mov
ljmp
ss
loop
stos
int3
jbe
leave
xchg
push
pop
ja
sub
bswap
adc
mov
notb
das
js
out
inc
ja
out
call
xchg
or
mov
fistl
mov
xchg
popw
or
push
das
push
cmovle
lods
out
jne
mov
push
pop
xor
jg
loop
lock
fs
insl
ja
aaa
popa
loop
cmpsb
mov
jbe
add
or
imulb
adc
pushf
xchg
call
sbb
fcom
and
xchg
and
and
add
andb
pop
push
mov
push
imulb
test
rdmsr
movsb
sahf
xor
jbe
cld
mov
aaa
mov
in
xchg
pop
rdmsr
cli
lods
jmp
mov
popa
icebp
push
pop
pop
add
mov
aam
bound
out
dec
jmp
xchg
bnd
fldl
pushf
jp
push
scas
jb
push
out
xchg
add
loope
bound
cmc
add
adc
dec
pcmpgtb
arpl
idivl
std
mov
jg
dec
mov
punpckhbw
mov
stos
mov
outsb
fdivl
jl
mov
idivb
insl
pop
std
mov
sub
pushf
insb
mov
mov
movsb
mul
push
loope
push
insl
cmp
lods
fimull
push
loop
je
push
pop
cmp
jge
iret
lds
xchg
or
mov
and
xor
sub
xchg
in
cmp
and
jno
push
scas
mov
in
or
jae
fwait
adc
dec
lds
dec
push
pop
and
out
ud1
push
clc
xchg
xor
loopne
or
hlt
arpl
adc
fnstsw
stos
jbe
push
addr16
pop
ret
outsl
ljmp
jno
scas
sbb
mov
push
xchg
ror
jbe
setb
jp
test
in
fisttpll
jne
fldz
cmpsl
lret
sub
shr
xor
adc
push
mov
add
mov
das
testb
fs
movsl
sub
and
jo
lock
xor
sub
insb
cltd
andb
cmpsl
es
shlb
insl
jecxz
ret
lds
push
pop
sub
std
dec
xor
and
xor
adcl
call
cwtl
ljmp
adcl
in
xchg
adc
push
lds
loop
mov
cwtl
mov
jo
lahf
out
xchg
fdivrl
dec
mov
test
sbb
sbb
insb
xchg
and
add
sbb
xchg
mov
je
pushf
lcall
rep
dec
cltd
mov
adcl
push
js
lods
xor
testb
aad
scas
out
inc
daa
xchg
jmp
add
es
inc
push
pop
ds
ret
cmpsl
xchg
outsb
test
or
jno
lret
add
cmp
cs
inc
outsb
push
fdivs
cmovl
cmpb
js
xlat
push
rcrb
test
sub
std
movsl
ljmp
mov
setne
or
sbb
pushl
jnp
mov
outsb
imull
and
popa
ds
jge
sub
and
xchg
fldl
aam
into
scas
ret
and
and
xchg
sbb
xor
sti
push
sahf
cltd
jp
imul
out
sub
movsl
cs
fwait
mov
lfs
sub
pop
lahf
mov
cmp
adc
xchg
scas
dec
sub
or
bound
les
dec
dec
or
ljmp
jo
cli
dec
mov
jmp
push
add
stc
mov
jns
fwait
rclb
inc
push
dec
fcoml
outsb
add
idivb
push
test
push
out
sub
scas
sub
push
mov
cli
cmp
inc
push
jbe
std
inc
sbb
jg
das
xor
push
jne
ljmp
pop
pop
adc
and
jbe
push
jg
sub
push
stos
push
popf
fildl
add
testb
mov
xchg
sub
fwait
test
xor
lret
icebp
push
jg
sbb
cmp
stos
scas
cmp
pop
cmp
xchg
and
cmp
outsl
xchg
sub
adc
xchg
sbb
jge
imul
test
fwait
in
jne
inc
ret
subb
sbb
push
dec
outsb
mov
mov
cmp
xor
sub
scas
jmp
mov
mov
dec
mov
push
out
and
jbe
adc
dec
mov
loopne
sub
sbb
mov
sub
mov
loope
inc
push
iret
adc
loopne
push
addl
cmp
pop
loope
pop
push
dec
xchg
mov
push
testb
filds
jae
pushf
adc
mov
es
mov
sbb
popa
lods
sti
xchg
and
call
dec
sbb
and
xor
mov
and
push
je
les
das
addr16
les
mov
out
sub
push
jo
outsl
push
push
push
lods
fwait
sbb
ja
add
or
mov
out
js
xchg
lret
cmp
ds
int
and
pop
icebp
push
ficompl
cmpsb
push
imull
data16
mov
inc
test
jnp
and
fs
mov
mov
frstor
addr16
cltd
ror
push
mov
aad
cmp
fists
andb
test
jnp
repz
inc
adc
je
xor
ja
call
stos
pop
jecxz
pop
cmp
pop
jp
out
cmp
roll
subl
and
jp
sub
gs
mov
adc
and
inc
fldcw
ret
arpl
in
je
mov
scas
icebp
xor
inc
das
mul
mov
gs
cltd
jg
out
cmpsl
testl
out
sub
sbb
shrb
adc
repnz
aaa
rol
push
mov
or
in
adc
mov
lret
mov
mov
aam
pop
test
inc
push
ds
or
out
xor
cli
adc
pusha
pop
inc
jno
in
and
sahf
sbb
adc
mov
cmp
pop
outsb
cs
jg
jle
push
in
imul
ljmp
stc
loop
mov
sbb
or
jmp
adc
sbb
xchg
outsl
fnstenv
mov
stos
sub
into
xchg
stos
cmp
dec
xchg
lea
xchg
xchg
mov
add
clc
stos
push
pop
jne
cmp
and
mov
shl
outsb
dec
ss
push
sub
into
stc
push
lods
mov
iret
mov
scas
sbb
stc
xlat
inc
int
decb
fndisi(8087
sbb
mov
clc
js
lahf
dec
cs
ja
mov
cs
xorb
sub
lret
aad
sub
stc
daa
mov
xchg
fisttpll
xor
sbb
jle
aam
repnz
pop
jne
incb
aad
and
fstpt
sbb
push
loop
dec
cld
in
lds
jne
cmp
sbbb
sub
dec
push
clc
addb
mov
xchg
mov
repz
inc
pop
mov
enter
or
dec
xchg
pop
vpmaxsw
lret
repz
sub
sub
test
fstpl
sysret
mov
inc
test
pop
jne
adc
sbb
xchg
adc
mov
scas
dec
scas
addb
stos
call
test
scas
add
push
ljmp
dec
js
cmp
inc
inc
stos
pop
inc
es
imul
repnz
cmp
sbb
push
out
cmp
or
push
xchg
pop
mov
pop
push
imul
psubsb
sub
mov
mov
sub
mov
imull
cmp
cmp
sub
adc
sub
mov
out
push
repnz
mov
xchg
push
es
shll
das
push
cmp
adc
xor
ds
and
test
adc
sbb
mov
hlt
sbb
push
repnz
dec
or
das
pop
xchg
lahf
mov
sub
nop
push
xchg
mov
inc
ret
mov
jmp
xor
ds
in
lods
movsb
push
sub
pop
cmpsb
and
adc
pop
jnp
sahf
push
cli
cwtl
pop
adc
std
jbe
push
rol
pushf
add
stos
and
cmpsb
cmp
cltd
addb
fisttpll
push
lea
sbb
sbb
out
aam
jb
fmul
jmp
scas
fstps
scas
ret
shrl
ja
lods
repnz
mov
sub
mov
sub
or
loopne
das
push
push
xchg
testb
out
cmp
nop
add
xchg
add
jnp
add
jb
fdivrs
add
or
mov
mov
jl
inc
stos
mov
xor
pop
lret
loop
ret
pop
jbe
test
in
push
mov
movsb
mov
mov
outsb
cmpl
mov
ret
or
lds
inc
int3
pusha
lcall
jecxz
sub
cwtd
mov
cmp
jae
jnp
mov
mov
xchg
jmp
mov
nop
jl
push
out
sub
inc
pop
mov
jnp
jb
xchg
pushf
shlb
mov
in
sub
mov
out
dec
or
mov
mov
mov
je
scas
adc
out
ljmp
sbbl
sub
mov
pop
in
cmp
enter
bndstx
pop
push
lock
xchg
dec
ucomiss
movsl
sub
fcoms
sbb
mov
ljmp
sbb
jl
arpl
clc
or
mov
or
dec
andb
push
mov
mov
sbb
mov
in
jmp
sub
and
cmp
pop
xor
sti
and
push
stc
mov
mov
ljmp
mov
jmp
sub
mov
push
mov
imull
mov
scas
cs
rcr
sub
mov
insl
pop
je
cmpsb
in
pop
push
push
or
inc
data16
xchg
push
mov
jo
jnp
jp
lock
cmc
das
out
addr16
and
adc
into
cmp
inc
scas
das
scas
sub
mov
cs
stos
mov
sub
addr16
add
mov
cwtl
sbb
mov
pop
movhps
push
scas
jmp
cmp
shl
sub
clc
xchg
sahf
shr
xchg
mov
sti
dec
sahf
movsb
test
lahf
inc
push
adc
xchg
lcall
xchg
pusha
mov
test
push
pop
cmp
nop
or
mov
into
jb
jb
icebp
dec
ja
and
push
addb
xchg
iret
fnsave
xor
push
std
aas
hlt
pop
lahf
daa
pop
cmp
sub
popl
cmp
fldl
xor
cmp
cmp
adc
add
icebp
sbb
mov
outsl
cltd
push
cmp
loop
fisubrs
inc
das
repnz
lods
cs
xchg
push
iret
push
mov
packuswb
adc
push
lahf
sbb
repz
or
aas
or
inc
repnz
and
lahf
movsl
jo
jl
daa
scas
sub
dec
push
push
mov
mov
push
xor
mov
or
cmp
sbb
mov
arpl
out
dec
rorb
push
jnp
push
jno
scas
cld
out
sub
xor
sbb
popf
sbb
shrl
ficoml
aaa
jo
aad
adc
push
mov
mov
push
lret
push
xor
jle
dec
hlt
daa
mov
add
fmull
add
jle
mov
sub
incb
add
je
int3
inc
add
movsl
cs
adc
ror
push
lcall
cmp
and
mov
sub
es
jmp
ss
push
push
dec
mov
mov
stos
jo
fwait
sub
xchg
stc
mov
ret
jo
add
in
lret
leave
push
stc
xchg
xchg
dec
sbb
shl
mov
clc
pop
add
cli
xlat
loop
rcrb
data16
outsl
bound
push
and
and
outsl
dec
sub
jnp
jae
sbb
fdivrl
jg
mov
jge
fmuls
push
sbb
movsb
sub
xchg
aam
scas
jp
pop
and
sbb
cmp
mov
dec
adc
or
outsb
cs
aad
es
adc
divl
movaps
mov
loop
clc
dec
sbb
ret
lods
mov
adc
imul
jo
stos
iret
cmpsl
clc
icebp
out
sub
stc
scas
jne
loope
shl
push
or
jno
mov
ljmp
popf
inc
mov
jnp
or
push
dec
mov
or
sub
pop
mov
cmpsl
popf
pusha
cmp
aad
cli
out
ret
jg
dec
popf
enter
and
stos
js
xchg
test
das
mov
mov
fsts
push
pushf
pop
mov
push
mov
movsb
push
push
imul
dec
clc
test
aas
mov
add
in
dec
fs
je
and
mov
test
in
push
xor
mov
inc
mov
sbb
dec
add
push
push
xchg
repnz
std
inc
mov
lods
dec
insb
es
push
xchg
out
sub
xchg
movsb
pop
out
loop
fs
mov
push
std
rcr
add
jmp
inc
loopne
sub
dec
pop
mov
mov
xor
xor
and
jmp
arpl
push
in
pop
fisubl
pop
ret
lods
xchg
xchg
sub
out
mov
push
das
lret
push
stos
cli
push
repz
xor
pop
leave
xchg
movsl
sbb
add
nop
and
pop
es
std
mov
arpl
fsubr
xchg
push
and
out
sbb
icebp
jmp
imul
cmp
dec
inc
ret
lcall
jl
movsl
repnz
adc
mov
bound
mov
sub
rorb
xchg
inc
xchg
movsb
cmpsb
sbb
cmpsl
ss
scas
decl
push
pop
ja
xor
sbb
inc
xchg
shlb
pop
pop
mulb
dec
xchg
iret
shll
pop
out
les
push
outsb
stos
imul
mov
data16
or
fucomip
daa
jl
jg
adc
outsl
sahf
xchg
xor
dec
add
xchg
cs
inc
push
testb
stos
das
sahf
inc
fidivrs
push
insb
cmpsb
mov
mov
emms
sahf
mov
daa
fadds
jno
outsb
outsb
call
into
imul
mov
mov
inc
sbb
out
inc
add
or
dec
xchg
add
data16
push
dec
stos
scas
mov
ss
mov
addr16
pop
outsb
out
push
xchg
lret
shl
mov
push
stos
dec
mov
lret
rcl
dec
jp
xchg
jl
cmp
xchg
cmp
jbe
repz
leavew
pop
mov
or
data16
add
xchg
jp
push
fdivrp
inc
jg
cmpsb
xor
mov
mulb
fisubrs
shrb
mov
ss
mov
mov
and
dec
lcall
movsl
int3
xchg
test
push
test
fdivs
mov
pop
lock
inc
pop
sahf
mov
ss
data16
push
sub
xor
sub
xchg
data16
outsb
cmpsb
insb
rorb
cli
fdivp
push
aas
cmpsb
sub
push
insb
rorb
lcall
ror
or
lret
pop
cs
xor
pop
xor
push
pop
es
ljmp
jg
inc
and
mov
scas
mov
dec
out
inc
dec
cs
aaa
or
jecxz
pop
adc
cmp
mov
nop
dec
testl
das
xchg
inc
xchg
mov
rol
xchg
mov
jmp
or
push
jbe
xorb
mov
daa
hlt
mov
dec
mov
cmpsl
pop
mov
stos
enter
and
sub
sbb
stos
arpl
sub
aad
jne
inc
mov
push
and
push
out
stos
cmp
adc
scas
and
mov
test
lock
je
xlat
adc
js
dec
data16
scas
outsb
lods
pusha
int
push
test
test
loop
dec
mov
push
enter
sti
ffree
dec
mov
push
out
cltd
dec
push
repz
ret
rcll
or
sti
mov
cmp
push
and
std
pop
sbb
or
or
lods
cmp
shlb
xor
mov
sub
lea
int3
addr16
nop
iret
mov
mov
dec
push
xlat
and
mov
out
dec
jge
push
ret
out
dec
nop
mov
push
sub
add
loop
stos
push
xchg
adc
mov
cmpsl
pop
dec
pop
cmpl
pushl
shll
sbb
xor
mov
shrl
dec
scas
out
cs
out
js
les
adc
insb
std
ds
mov
sub
out
add
jo
ljmp
shll
jl
adc
test
daa
and
clc
decl
mov
ja
push
test
popa
clc
fwait
mov
mov
clc
cmc
out
sub
aaa
aam
inc
cltd
dec
mov
inc
mov
fcom
fwait
nop
mov
xchg
bt
cmp
or
mov
rcll
ret
push
mov
bound
cmp
int3
inc
outsb
push
cmp
je
out
or
push
jge
outsl
jno
scas
lods
cmpsl
je
stos
inc
rcrl
mov
dec
mov
sti
clc
roll
inc
xchg
or
pop
push
adcb
lcall
scas
jle
jo
data16
ss
push
movsl
jne
iret
ret
cs
or
jg
jno
and
in
clc
js
mov
daa
jno
push
cmp
gs
sti
popf
adc
or
xor
mov
xor
sub
push
mov
jno
adc
leave
jbe
cmp
cmp
ret
push
addr16
pop
imul
cmp
sub
and
push
loop
xor
cmovne
jg
jbe
add
or
int
mov
pop
out
sub
insl
daa
pop
pop
and
inc
scas
out
mov
push
cld
sub
in
mov
xchg
aaa
jnp
jmp
mov
jns
mov
cmpsw
and
retw
sub
xchg
lret
mov
aad
in
jns
mulb
mov
jle
mov
mov
pop
xchg
ret
andb
xchg
cwtl
xchg
push
inc
adc
fidivrs
push
das
insl
lods
push
es
push
dec
lea
sbb
and
lret
xchg
xor
jp
in
loop
push
mov
test
aam
fnstenv
fcomps
pushf
and
andb
bound
das
clc
push
and
cmp
pop
daa
xchg
test
stc
sti
xchg
xchg
out
inc
ds
dec
mov
sbb
bound
sbb
stos
call
scas
outsl
in
imul
repnz
mov
jmp
mov
fdivl
mov
jbe
jecxz
inc
cmp
fcoms
fimuls
or
data16
aad
in
icebp
mov
inc
ret
loopne
addr16
inc
inc
dec
mov
icebp
ret
push
pop
loopne
jno
decl
mov
pop
sub
xchg
mov
fildll
pop
push
sub
jge
repnz
mov
aas
test
lea
fwait
test
xor
inc
pmuludq
pop
outsb
sub
dec
les
scas
sub
mov
outsb
mov
jbe
inc
clc
das
sbb
das
scas
ja
mov
scas
enter
lahf
dec
pop
dec
pop
repnz
pop
jbe
enter
and
pushw
jbe
and
in
xor
mov
xchg
xchg
sub
in
cmp
arpl
add
mov
mov
movsb
cli
stos
inc
push
adc
xor
popa
gs
shll
or
hlt
das
pop
and
and
and
cli
rorb
out
sub
movsb
jecxz
push
ret
mov
sub
in
adc
mov
inc
mov
outsl
fnsave
push
out
fwait
mov
inc
js
outsl
ds
out
testb
mov
inc
push
and
enter
mov
test
repnz
ret
stos
lret
out
mov
mov
ret
scas
mov
and
das
out
repnz
mov
or
xor
inc
ss
mov
push
neg
out
fs
adc
jmp
dec
and
insl
das
cmp
xor
lret
in
ljmp
or
out
rorb
repz
add
jmp
pop
stos
cmp
cmp
pop
adc
dec
lret
jp
arpl
fisttpll
insl
jne
out
movsl
dec
fwait
ds
into
add
pop
movsb
mov
ds
shl
mov
add
cmp
sbb
std
inc
das
in
pop
sbb
push
std
std
mov
dec
dec
icebp
loopne
jecxz
out
hlt
fwait
jno
pop
or
aas
enter
ljmp
sub
jmp
out
fsubl
jo
out
out
pop
cmp
push
inc
mov
out
mov
and
test
aaa
clc
js
pop
cli
and
test
cmpsl
cvttps2pi
test
pop
lret
push
push
mov
lret
sbb
xchg
push
jae
subb
jmp
out
sub
inc
add
addr16
pop
sahf
mov
cmp
mov
scas
jmp
push
jg,pt
mov
jecxz
ds
jb
ret
push
insl
mov
cmpsb
mov
mov
mov
mov
jl
mov
in
add
inc
mov
mov
pop
inc
fs
push
mov
sub
ficompl
and
dec
dec
in
stos
movsbl
test
in
jae
out
inc
jmp
sbb
mov
mov
scas
adc
cmpsl
shl
sbb
outsb
dec
sub
xchg
fbstp
ret
subb
aad
and
cmpsb
imull
ss
jmp
clc
sub
cmp
xchg
xchg
cld
das
dec
push
push
sbb
out
push
lock
lods
push
dec
out
pop
adc
dec
fistpl
sub
xor
jp
lcall
add
or
scas
std
ret
out
pop
cmpsb
and
cmp
pushf
test
bound
mov
lret
sub
push
lcall
pop
dec
mov
push
mov
jg
inc
loop
scas
mov
mov
mov
outsl
or
inc
test
cld
add
mov
ret
pop
lods
scas
sub
push
arpl
arpl
outsl
into
clc
push
or
cmpsl
mov
pop
loopne
lret
jp
gs
rolb
in
loopne
mov
test
pop
mov
push
lods
dec
pop
or
adc
mov
and
inc
adc
ja
add
mov
inc
jno
xchg
aaa
dec
or
in
dec
sti
push
fildl
loopne
aas
cmpsb
mov
outsb
sbb
dec
pop
sub
xor
sbb
aad
ja
test
punpckhwd
scas
mov
mov
cmp
lea
mov
out
sti
cmp
push
cmp
outsl
subb
in
ret
mov
clc
loopne
fs
push
daa
fiaddl
pop
xchg
mov
add
ja
je
testl
scas
sub
add
sub
out
sub
insl
ret
push
mov
jle
pop
jmp
and
dec
ret
push
cmpb
test
aam
shl
pop
dec
pop
sbb
daa
mov
cmp
cs
jnp
dec
jbe
mov
jo
mov
or
sub
cld
cltd
je
sub
aaa
xchg
mov
mov
xor
jecxz
push
and
out
mov
jbe
pop
std
sti
dec
cs
sub
pause
std
pop
mov
mov
ds
cli
or
ret
iret
sahf
inc
and
jp
cmp
fsubrl
push
xor
test
sbb
push
xlat
inc
cmove
sbb
jb
xor
push
pop
pop
mov
test
pop
das
push
in
sti
ss
out
dec
out
js
push
lods
push
mov
or
push
je
cmp
test
fistps
add
dec
out
pop
adc
fnstsw
stos
daa
add
push
push
enter
clc
mov
push
push
repnz
xchg
jecxz
dec
outsl
add
mov
push
xchg
rorl
dec
fcompl
les
adc
jae
pop
inc
cld
dec
int
sarb
mov
stos
jmp
cmp
sub
jl
stos
sbb
jmp
pop
mov
mov
ss
push
dec
cmp
outsl
js
popa
lret
stc
mov
ljmp
cld
xchg
lahf
loope
mov
test
pop
mov
jb
lods
jae
pop
adc
es
jo
cli
pop
push
mov
xorb
icebp
xchg
lods
daa
cmc
xchg
dec
and
lret
sbb
pushf
sub
add
ret
out
scas
ret
jo
push
pop
jb
mov
popa
xor
out
sub
mov
mov
push
out
clc
mov
cmp
into
push
xchg
ret
sub
jmp
xlat
push
inc
dec
out
push
mov
stos
outsl
adc
xchg
lret
mov
inc
cmp
stc
xor
lods
add
addl
jg
jecxz
push
mov
jbe
scas
mov
push
inc
mov
mov
push
mov
movsb
mov
enter
fildl
jbe
jno
push
pop
dec
ljmp
ret
jecxz
ds
mul
in
jnp
mov
insb
jo
stc
jl
fisubs
icebp
enter
jbe
sub
cmpb
outsb
xchg
mov
nop
mov
sub
sub
fcomp
xchg
mov
stos
dec
bound
orb
mov
in
loope
cmp
mov
loopne
xor
or
adc
jecxz
rcrl
jp
mov
xchg
xor
pop
dec
testl
sbb
push
pop
mov
aas
mov
xor
out
push
stos
in
outsl
ret
loop
pop
push
lods
stc
xor
push
call
xor
cmp
push
sbb
sbb
iret
sub
cmpsb
and
mov
subl
cmp
arpl
imul
out
outsb
sub
stos
push
divl
pop
or
idivb
ds
lea
pop
cmpsl
lds
in
mov
xchg
push
jnp
in
adc
fistl
cmp
mov
xchg
adc
cmp
lds
mov
stos
enter
rorl
xor
inc
mov
das
cmc
cmpsb
and
push
rcrl
jbe
mov
lock
sbb
lds
in
push
sbb
dec
lods
sbb
test
xchg
cmp
pusha
mov
sub
or
sbb
pop
pop
xabort
mov
jnp
cmc
dec
notl
das
push
dec
xlat
sbb
inc
push
jns
mov
insw
cmp
ljmp
sub
stc
hlt
out
sub
call
push
pop
lods
push
mov
xchg
call
lret
push
fistps
cmp
call
adc
xor
fs
cmpb
lds
js
out
lcall
mov
fldcw
ret
adc
je
jnp
xchg
inc
add
ljmp
sbb
adc
fisttpll
mov
jo
cmpsb
pop
cltd
fmuls
pop
dec
adc
and
fistl
mov
stos
inc
push
imul
pop
inc
xor
popa
jle,pn
mov
jecxz
cs
addr16
aas
inc
inc
inc
and
bound
xchg
lds
xchg
lret
jb
inc
add
cmp
jns
aas
ss
mov
add
cs
mov
push
cs
jl
jg
ss
xchg
icebp
mov
inc
pop
enter
sub
mov
lret
push
cltd
and
hlt
ss
push
ds
arpl
xlat
mov
inc
mov
rclb
lret
and
lret
mov
cs
data16
xchg
lret
ret
into
out
dec
inc
inc
stos
inc
loop
inc
pop
test
cs
aas
xchg
aaa
into
mov
cmc
inc
mov
mov
dec
cs
inc
dec
loope
xor
cmp
cmp
mov
ja
das
ss
into
sub
dec
xchg
sub
adc
mov
cs
ss
test
stos
leave
jg
mov
mov
and
fidivl
push
aas
into
daa
lods
ret
sbb
jbe
cltd
push
sti
scas
mov
ss
movsl
je
cmpsb
ss
daa
mov
sbb
inc
mov
mov
into
sbb
ljmp
jnp
inc
inc
sub
inc
mov
outsl
sahf
sub
pop
push
enter
pop
jb
notb
mov
sahf
jg
leave
mov
pop
xlat
pop
push
dec
xchg
stos
ss
stos
xchg
ss
jle
imul
xchg
dec
dec
xchg
push
cmp
clc
sub
xchg
mov
insb
jle
ss
clc
scas
mov
jle
cli
lret
push
cmp
ret
rclb
dec
xchg
ror
and
lret
xor
out
scas
jnp
test
xchg
xor
cs
push
mov
dec
sub
mov
push
sub
jbe
shl
fidivl
lret
push
aas
mov
pop
add
movnti
shll
mov
fmulp
cmpsb
mov
inc
rcrl
push
fwait
ds
nop
dec
cmpsb
or
sbb
sbb
dec
dec
cld
and
xor
cmove
sahf
jl
dec
ret
pop
xchg
test
push
and
push
test
cvttps2pi
sub
bound
mov
mov
fwait
test
or
sbb
out
xor
push
subb
bound
sub
push
xchg
adc
outsl
pop
fbstp
xor
rcll
daa
add
jne
cmp
int
xor
ljmp
call
xchg
loope
xchg
loopne
jno,pn
cmp
imulb
in
push
dec
jnp
sbb
mov
or
in
pop
xor
hlt
scas
add
push
cld
xchg
clc
dec
dec
cld
int
xchg
rcll
push
sub
and
xchg
xor
rcrb
ret
xchg
pop
push
mov
and
push
int
dec
xchg
pop
mov
test
inc
cwtl
lds
mov
xchg
xor
inc
sbb
pop
mov
cmp
push
push
adc
push
sub
pop
jmp
decb
hlt
mov
data16
ret
rcrb
inc
mov
lret
xchg
cmp
push
xchg
and
in
cmp
imul
insb
push
lahf
je
stos
pop
adc
mov
pop
adc
fcompl
mov
sti
movsb
pop
push
andl
or
add
jmp
inc
push
push
sub
xor
mov
cltd
cmp
push
mov
jo
in
jae
xchg
psadbw
push
sub
or
das
daa
push
mov
sbb
cmpsl
or
out
push
sti
insb
into
sub
add
jg
sti
push
das
sbb
push
cmp
jl
jbe
cmp
ficomps
stos
out
scas
push
js
xchg
jne
iret
adcl
dec
push
filds
push
sub
pop
sarl
mov
jecxz
cmp
fisubl
cmp
cld
lods
mov
outsl
sub
jno
pop
and
imul
xchg
sbb
aam
sbb
int
rorb
mov
sub
xor
iret
mov
leave
sub
inc
xchg
stos
pop
mov
ret
pop
sub
cmpsb
decb
les
les
outsl
mov
mov
push
and
push
pop
outsl
scas
mov
pop
mov
push
push
xchg
xchg
push
js
out
cmp
repnz
and
sbb
dec
jbe
fiaddl
jo
mov
sub
js
iret
push
push
mov
and
mov
sub
scas
into
testb
aaa
popf
in
clc
jl
aad
repnz
mov
pop
adc
add
or
add
ja
into
or
push
cld
jne
tzcnt
adc
xchg
loop
mov
lods
aam
cld
fiaddl
inc
es
jl
jecxz
dec
data16
jp
mov
cmp
stc
pop
jl
rcll
or
popf
lret
lds
das
ret
ss
pop
call
iret
xchg
mov
cmpsl
stc
das
addb
scas
push
push
push
sub
stc
popf
insb
stos
mov
stos
adc
das
stc
jp
rorl
cwtl
jno
inc
stos
in
xchg
pushf
add
sub
stc
adc
addr16
hlt
stos
adc
ret
lods
cmp
jp
sbb
mov
scas
outsl
push
inc
inc
inc
and
aas
xchg
fists
adc
mov
sahf
adc
jp
push
or
mov
repz
je
pop
negb
sbb
jmp
sub
cmp
pop
mov
std
cmc
sbb
mov
flds
out
mov
lock
xchg
pushf
mov
clc
hlt
pop
pop
xor
jl
mov
test
repz
stos
add
mov
add
aaa
push
dec
repz
xchg
pop
jp
push
fisttpll
cltd
daa
inc
movsl
mov
xor
mov
pusha
add
das
jp
enter
pop
push
pop
jo
add
daa
or
xchg
gs
and
mov
add
cmp
and
mov
sbb
lods
sbbl
dec
push
iret
scas
movsl
stc
shrw
lret
js
dec
out
push
scas
inc
aam
sbb
sahf
jae
pop
ss
rorb
push
cmc
and
loopne
add
xchg
xchg
cltd
mov
ljmp
inc
mov
mov
xadd
mov
jns
push
jne
mov
out
push
aam
or
mov
cmp
mov
and
xchg
sbb
mov
push
mov
jecxz
mov
sahf
add
dec
stos
psubb
jbe
inc
shlb
in
sti
push
push
inc
jae
pushf
cmp
pop
push
dec
lock
and
sub
es
push
push
inc
push
into
pushf
fiaddl
int
in
push
push
mov
repnz
and
xor
or
sti
daa
fistpl
mov
popa
pop
ja
leave
xchg
add
push
pop
cli
bound
movsl
push
lahf
imul
mov
mov
dec
mov
xor
push
scas
or
adc
gs
sub
adc
stc
inc
dec
and
inc
inc
rcll
shlb
movsl
outsl
arpl
add
xchg
ljmp
pop
fidivrs
pop
cmp
dec
fimull
dec
jo
aad
popa
push
push
shufps
test
and
cmpl
pop
or
pop
sbb
mov
pop
aas
xchg
fisttpl
mov
lret
adc
ja
int3
push
jecxz
sub
iret
mov
cmp
lea
inc
test
orl
or
pop
xor
aaa
or
adc
cmpsb
rol
daa
pop
movnti
xchg
mov
pop
adc
fmul
push
xchg
mov
lea
mov
and
ja
addb
ljmp
scas
sbb
xor
inc
sub
cmp
es
mov
loopne
or
ja
xor
dec
leave
jnp
insl
fnsave
dec
cmp
cmp
or
fxch
stos
push
subl
xchg
xchg
fldt
ror
loopne
dec
clc
insl
das
push
or
sahf
sbb
sti
dec
icebp
dec
lret
cld
mov
lock
xchg
iret
cmp
loope
inc
cmpsb
and
ljmp
pop
movsl
or
sub
cmp
call
mov
push
rcrl
aam
cmpsl
je
jae
push
pushf
cmpl
incl
outsb
cmp
add
sbb
scas
adcb
enter
test
inc
inc
push
cmp
movsl
shl
stos
jnp
push
sbb
fidivrl
jno
sbb
incl
sbb
daa
daa
push
rorb
inc
mov
jnp
inc
testl
lods
pop
cwtl
imul
xor
sub
cmp
sbb
leave
push
xor
push
test
rolb
in
xor
es
lret
or
cmpsb
push
and
mov
mov
add
inc
jle
mov
mov
mov
sbb
inc
adc
sbb
sbb
add
je
push
pop
sub
jo
pop
pusha
fldl
sbb
dec
cmp
sti
je
jae
outsl
out
add
xor
mov
scas
mov
push
mov
in
mov
jbe
inc
jp
cmp
push
js
ret
in
call
out
arpl
fnstenv
and
fildl
insb
push
push
sahf
xchg
movsl
mov
mov
fldl
mov
dec
sbb
cmpl
cmp
rcr
push
xchg
stos
fwait
outsl
lock
aaa
and
out
jmpw
or
mov
adcl
aas
pop
sub
mov
js
sub
add
ret
ljmp
movsl
push
mov
inc
das
clc
hlt
mov
push
lock
loope
mov
sbb
cmp
sbb
dec
ds
ja
xchg
xchg
dec
pop
cmc
addl
in
aaa
xchg
add
mov
xchg
jl
shrl
mov
aaa
data16
push
or
jmp
addl
pop
scas
push
jo
outsl
xor
lcall
stos
jae
or
rcrb
inc
andps
push
fisubrl
xor
xor
mov
lahf
sub
scas
in
jnp
out
sbb
addb
lods
cmp
out
nop
dec
pop
mov
adc
fsubrl
lds
cltd
roll
call
push
test
inc
push
mov
orl
movsl
addr16
mov
fs
dec
out
sub
add
repnz
sbb
ds
sub
xchg
mov
cmp
stos
cmp
lretw
sub
roll
and
das
sbb
add
mov
sub
adc
xor
lock
stos
clc
sbb
sub
js
mov
ljmp
mov
xor
fistl
jle
call
imul
icebp
jnp
push
ret
dec
out
mov
pop
xchg
or
outsl
aad
mov
xchg
aaa
loop
fs
pop
sub
lcall
jnp
stc
mov
add
divl
lock
lret
push
mov
popw
mov
pushf
int
mov
inc
mov
mov
sbb
data16
dec
sub
or
mov
mov
bound
push
push
scas
xor
and
push
mov
lcall
mov
and
ret
hlt
xchg
jo
mov
cmpsl
fisttps
xor
and
jbe
dec
rcr
data16
pop
or
movsl
jge
mov
repnz
ds
or
stc
orb
out
sub
popa
cmp
push
fwait
cmpsb
mov
and
mov
scas
scas
pop
add
push
jnp
jle
mov
jg
sub
sarl
icebp
add
dec
mov
into
xor
leave
ljmp
ss
sub
add
and
pop
push
mov
punpcklwd
push
inc
dec
int3
mov
scas
popa
adc
push
xor
cmpsb
test
push
lret
cs
divl
xor
nop
je
dec
out
cmp
icebp
push
in
sbb
dec
mov
jnp
sbb
repz
xchg
cmp
int
cmpb
jge
mov
cmp
rol
in
int3
out
push
sbb
push
fiadds
stos
repnz
scas
add
push
popw
mov
fwait
clc
addr16
roll
ret
adc
jg
scas
push
cwtl
popf
dec
push
pop
and
loopne
out
das
ljmp
cli
or
lret
inc
mov
xor
sahf
or
or
sub
sub
fisubrl
push
pop
daa
push
ja
fwait
inc
fwait
ret
loopne
lods
sbbb
outsl
push
xor
cmp
lret
cmpsl
xchg
fldz
sbb
push
inc
push
into
ss
push
mov
shlb
or
jecxz
xlat
lret
cmovl
mov
clc
and
out
sub
jo
sbb
loope
xor
jmp
sbb
outsb
and
aaa
push
mov
clc
adc
xchg
int
aad
xchg
xor
in
cs
pop
sbb
int
sub
jae
into
mov
lock
mov
orl
fstpl
mov
sti
mov
into
mov
xor
xor
push
add
imulb
stc
sarb
pop
mov
pop
je
add
jge,pt
scas
jae
cld
jmp
push
xchg
pop
insb
xchg
dec
xchg
gs
imul
sub
clc
xchg
loop
out
push
les
scas
in
sbb
mov
es
xchg
and
fwait
mov
cmpl
or
inc
xor
pop
mov
xor
adcl
scas
mov
sbb
sub
xchg
pop
adc
cmpsb
and
inc
shll
loopne
sub
call
xchg
dec
gs
je
mov
xlat
push
std
pop
xor
adc
inc
out
cmpb
sbb
out
add
xchg
ljmp
adc
sbb
mov
mov
je
xchg
dec
push
nop
stos
sub
adc
xchg
stos
cmpsl
sbbl
arpl
add
jle
das
clc
in
dec
sbb
maskmovq
or
inc
pusha
call
sub
popa
jle
jne
loope
xor
push
xor
pop
or
jecxz
mov
shl
xchg
or
mov
stos
push
xchg
and
dec
mov
cmp
fcompl
mov
xchg
into
into
and
inc
and
ficoms
inc
push
mov
lods
sub
pop
das
sbb
jecxz
pextrw
jle
scas
divb
xor
sbb
mov
jecxz
jge
push
mov
add
stos
push
pop
cmc
and
es
push
nop
jmp
and
cli
mov
sar
sbb
inc
imul
in
cmp
cmp
pop
sub
push
inc
add
ret
in
insl
dec
inc
test
xchg
clc
sub
pop
sub
mov
cmp
lods
adc
loop
sbbl
ffreep
mov
test
lods
cmp
xor
cli
dec
aad
les
ret
insl
sub
dec
mov
ret
xchg
sbb
int
lret
insl
in
ja
fdivrs
dec
imul
je
es
pop
dec
jmp
jecxz
inc
mov
setne
outsb
dec
cwtl
sub
sbb
leave
outsb
lds
push
and
dec
mov
dec
cmp
clc
and
inc
out
fstpt
mov
fildll
cmp
imul
insl
push
and
std
sub
int3
andl
sub
jg
push
aad
fwait
push
pop
mov
and
pop
minps
cmp
inc
loop
pop
xchg
lahf
in
cmp
jne
jne
add
and
or
push
es
sbb
push
or
repnz
sub
dec
sar
cmc
adc
or
fwait
icebp
xor
ret
adc
cltd
mov
dec
jecxz
mov
mov
lds
mov
ljmp
hlt
imulb
xor
cs
or
sbb
mov
dec
and
int
pop
int3
xchg
push
adc
insb
fwait
xchg
sbb
ret
sbb
shlb
jae
jno,pt
sarb
sahf
rorb
test
xchg
arpl
lock
push
jmp
cwtl
in
imul
mov
adc
mov
jp
sti
out
sbb
push
cmpsb
and
jno
aas
xchg
push
imul
xor
dec
sarl
js
test
lahf
xor
xchg
ja
adc
pop
lcall
lret
popa
xor
mov
int3
and
ljmp
cmpb
xor
jp
insb
aam
rorb
adc
mov
cmpsl
xor
cmp
pop
shrb
pop
sbb
movsb
mov
imul
sbb
jp
and
adc
pop
cmpsb
dec
or
bound
inc
jge
xor
and
or
out
push
or
and
add
fisttps
mov
lock
mov
insl
jns
mov
popf
sub
push
dec
cs
pop
sbb
sub
sbb
xchg
mov
out
sbb
pusha
adc
push
outsb
in
adc
jbe
lds
mov
xor
push
push
pop
cmpb
mov
or
xchg
mov
sti
push
pop
pop
push
xor
pop
push
ja
push
push
sub
adc
leave
inc
or
jns
xor
mov
in
pop
mov
sub
adc
cwtl
outsl
mov
das
xchg
shl
in
mov
int3
ds
cmp
lahf
jmp
idiv
adc
jae
jno
or
dec
xchg
fisubs
sbb
sbbl
mov
mov
in
mov
jecxz
lahf
push
stos
les
sbb
jmp
iret
push
add
ret
pop
out
mov
jae
ret
stos
js
test
pop
ss
dec
std
into
movsl
mov
and
push
mov
push
loop
and
jge
cwtl
push
inc
cmc
xabort
push
les
sbb
das
push
lret
mov
mov
test
cmp
mov
cmp
sbb
add
mov
xlat
movsb
or
cmpb
push
push
imul
cmp
stos
ja
in
inc
push
sub
dec
pop
cmpsb
sub
mov
xchg
jns
sub
insb
inc
mov
jg
shrb
xchg
ret
mov
ds
mov
or
inc
lock
rclb
ret
pop
movsl
adc
and
sbbb
out
out
jnp
fbld
dec
mov
dec
pop
bound
scas
mov
imul
lds
push
xchg
mov
sbbb
cmpsb
and
and
pusha
or
mov
stc
mov
das
pop
or
dec
and
in
jge
repz
xchg
push
pop
sub
mov
stos
jo
fsubr
stos
pop
lock
pop
jl
sub
mov
xchg
movl
and
enter
int3
jmp
das
cmp
stc
push
aam
pop
popa
adc
call
outsl
movsb
sub
sbb
sahf
cmp
test
push
push
mov
pop
je
mov
cmp
and
aam
enter
mov
or
test
arpl
stc
dec
dec
push
mov
sbb
das
push
ret
int
dec
cmp
call
xor
stos
dec
test
rorl
sub
popf
add
push
pop
out
fstpl
push
out
scas
push
xor
mov
cmp
pop
fistl
dec
fnsave
push
addl
mov
sahf
cmpsb
sbb
outsb
fsts
aad
lcall
jbe
pop
jno
push
mov
pop
stos
sub
inc
jecxz
pop
dec
cld
mov
cltd
xchg
cs
sbb
xchg
rclb
inc
add
cmpsl
orl
lds
out
sub
stc
out
and
mov
lcall
push
mov
repnz
mov
and
adc
cmp
add
addr16
inc
push
inc
sub
iret
or
jg
repz
mov
lods
stc
jmp
push
adc
andb
mov
loop,pn
sub
stc
cmp
sbb
cmpsb
cmpsb
and
jmp
in
lret
scas
or
or
sbb
sub
and
push
ret
inc
push
add
xlat
jae
mov
mov
shl
dec
mov
andb
in
test
out
inc
mov
fldt
mov
dec
mov
cmp
rclb
cmpsb
mov
mov
adc
enter
sub
aaa
xchg
xlat
cmp
sbb
xor
testb
adc
outsl
cmpl
ljmp
push
repnz
mov
jns
aaa
or
das
out
sti
sub
in
sahf
jno
xor
fucomi
sub
in
push
mov
dec
stos
sti
das
mov
movb
mov
push
cmp
or
and
rcll
adc
pop
std
imul
daa
mov
into
cwtl
xchg
leave
sub
in
pop
adc
data16
push
fiadds
and
cmp
push
pop
add
ret
pop
inc
sbb
jl
js
aaa
outsb
mov
mov
push
insl
xchg
xchg
bound
and
in
inc
addr16
and
sti
outsl
sti
pop
sub
add
dec
jecxz
push
and
and
pushl
sub
stos
addr16
add
les
ret
mov
movsl
push
loope
nop
cmpsl
sbb
or
movsl
adc
daa
fidivs
or
scas
push
ljmp
sbb
push
call
insb
mov
std
rolb
push
mov
dec
or
shufps
xor
jl
push
je
xchg
insl
cmp
and
pop
jmp
pusha
hlt
scas
lcall
push
pop
mov
adc
loop
add
fisttpl
out
fldl
lock
addr16
clc
adcl
jge
adc
xor
push
icebp
jno
fisttps
mov
out
inc
sub
cmp
mov
js
jge
das
dec
xchg
ja
pop
sub
mov
aas
mov
mov
inc
push
popa
ss
mov
dec
je
fisubrl
call
ret
ja
push
clc
sub
adc
sbb
scas
sahf
mov
out
mov
dec
dec
pushf
dec
xchg
pop
sub
cmp
into
stos
fcmovu
push
je
ficoml
push
add
mov
daa
jmp
insl
lods
sub
mov
and
cmp
dec
or
enter
mov
dec
jo
pop
push
scas
addr16
mov
add
scas
pop
repnz
xchg
out
inc
out
stos
push
push
jl
lret
jns
push
leave
mov
or
mov
stos
je
xor
inc
test
xor
push
and
aaa
rcll
js
push
sub
in
es
mov
in
popa
dec
jns
dec
pushl
aad
dec
movq
jmp
jp
ret
inc
sub
daa
das
adc
xor
stos
pop
push
sub
jo
lcall
mov
scas
dec
popf
dec
aad
sub
sbb
or
into
sub
int
push
stc
hlt
adc
rcrb
ret
push
xor
call
movsl
jbe
out
mov
mov
fistl
cmp
pop
out
out
adc
popf
push
push
or
mov
adc
push
xor
push
cmp
and
pop
inc
lods
jge
fwait
insl
std
out
scas
jb
or
push
repnz
call
loopne
jno
test
xchg
out
push
inc
jo
pushf
xchg
adc
or
xorb
imul
xor
xlat
enter
movsb
inc
xchg
add
mov
cmc
mov
cmp
add
enter
push
or
cli
xlat
out
jo
mov
push
sbb
std
sbb
shl
imul
fsubrl
xchg
xchg
sbb
outsb
mov
pusha
testb
jmp
adc
push
cmp
fwait
cmp
push
sbb
fs
mov
outsl
jle
jne
rorl
mov
cld
jns
cmp
orl
dec
ja
add
push
jg
adc
into
nop
jno
enter
in
add
add
pop
xor
push
xor
cmpsb
push
jmp
loopne
gs
shlb
adc
mov
mov
mov
movsb
scas
push
add
arpl
xlat
sub
and
loop
xor
cmpsl
les
bound
mov
cmp
mov
pop
lahf
test
cmp
enter
inc
loop
ljmp
mov
outsb
ret
imul
loopne
icebp
sbb
mov
sar
das
stos
negl
test
fisubl
and
jecxz
scas
push
xor
adc
cmpsl
pop
imul
psrlq
fwait
xchg
loopne
pushf
cmp
scas
xchg
push
dec
stc
push
test
mov
jne
push
inc
sahf
cmp
pop
add
or
add
lcall
stos
adc
cmpsb
or
testb
mov
lcall
xchg
and
xor
or
inc
mov
push
push
mov
inc
dec
add
call
cmp
stc
and
dec
stos
mov
add
adc
int
mov
add
imul
jnp
and
loopne
in
js
test
lret
loop
into
jno
out
daa
adc
and
adc
repnz
test
pop
inc
dec
insb
add
pop
and
jno
cmpsb
stc
or
sub
add
or
cmpsb
orb
clc
xor
aad
xor
shlb
xor
sbb
pop
push
out
ds
inc
sbb
jl
mov
cmpsb
loope
stos
cmpsb
pop
or
testl
adc
cmpsb
xor
cli
sub
fwait
push
dec
out
cmp
mov
stos
or
out
psraw
insb
sub
lret
add
fisubs
fisubl
push
pop
push
jns
and
or
notb
sbb
mov
cmp
jb
ja
inc
mov
xchg
mov
lock
lret
xchg
jmp
pop
cvttps2pi
inc
ret
sub
pop
sahf
xor
jo
jno
scas
dec
dec
inc
sbb
cld
dec
jne
sub
daa
or
push
push
mov
pcmpeqw
xchg
je
loopne
jne
push
cmp
inc
lret
add
cmp
inc
aad
ja
and
push
fisubrs
fstpt
cmp
xchg
pop
cld
test
push
push
pop
inc
xchg
data16
mov
sub
mov
jmp
movsb
cli
jnp
or
xchg
jl
daa
dec
std
fidivs
xor
aas
pop
push
dec
sbb
push
psubusw
stc
cmpsl
outsb
push
jnp
nop
leave
daa
mov
xlat
xchg
push
lds
pop
jmp
jbe
fxch
push
scas
mov
xor
cmp
push
dec
call
stos
add
inc
xchg
lret
sbb
loope
xor
and
xchg
dec
mov
pop
mov
cmp
adc
adc
in
clc
jecxz
dec
insb
xchg
imul
mov
jp
sub
and
loopne
xchg
cmp
or
les
scas
jne
mov
and
outsl
push
mov
mov
pushf
or
std
data16
gs
jb
or
jne
and
xor
pop
pop
and
dec
cmovl
sub
data16
insb
cltd
cmpsb
jb
shlb
cs
outsb
sub
xor
sbb
jno
es
jmp
add
inc
or
adc
daa
mov
xchg
or
mov
mov
pusha
les
cld
pop
xlat
mov
in
sub
cld
pop
mov
in
xchg
daa
xchg
das
mov
push
pop
repnz
push
dec
sub
movsb
loop
repnz
sub
fxtract
xor
std
inc
outsb
stos
mov
popf
ds
add
add
out
xor
es
mov
pop
rorb
sbb
stc
jbe
int
shlb
rorb
imul
out
pop
or
push
mov
fcoms
sub
xchg
and
frstor
in
pop
outsb
call
or
jb
sub
cmp
inc
jo
pop
hlt
push
pop
jns
push
fcomi
xlat
lret
xor
pop
push
push
dec
mov
les
daa
cmc
shl
xor
rol
mov
push
xchg
shlb
push
adc
pmaddwd
xchg
aas
adc
jae
pushf
pop
int
aaa
add
cmp
jecxz
jle
cmp
cmp
test
pop
sbb
push
push
push
push
push
outsb
sbb
push
out
and
push
aaa
cmp
dec
cmp
insl
cld
dec
rcl
leave
adc
test
call
jle
sbb
sub
push
or
jb
sbb
scas
dec
and
inc
cs
adc
dec
push
scas
mov
dec
inc
or
je
ficompl
push
push
into
dec
cmpsl
adc
test
and
and
je
mov
lds
push
fwait
ds
int3
std
jecxz
dec
mov
sbb
cmp
ja
bound
push
mov
push
dec
xchg
lods
or
xchg
inc
add
jne
scas
nop
lods
in
push
subl
and
inc
rorl
out
cwtl
cld
push
sub
cmp
lret
ficomps
xchg
enter
inc
mov
sub
ja
fiaddl
cmpsl
xor
ret
pop
out
xor
jmp
push
xorb
jg
add
hlt
mov
push
sub
and
and
adc
pusha
daa
mull
push
data16
je
out
push
in
mov
mov
jbe
icebp
arpl
add
and
dec
iret
adc
ljmp
add
push
lods
adc
mov
imul
xor
imull
lock
clc
or
jno
in
rcl
push
lret
mov
in
fnstcw
imul
cmovnp
inc
add
xchg
bound
jle
jne
and
scas
and
sub
xor
call
push
rorl
bound
ja
mov
idiv
add
lods
push
aas
or
or
inc
stc
psubusw
push
int3
jb
jl
sub
dec
pop
inc
cmpsl
sub
pop
mov
add
fbld
sbb
push
scas
mov
xor
insb
cmp
pop
cmp
pop
imul
mov
pop
pop
xchg
sbb
xor
insl
mov
scas
fisttpll
pop
cvtpi2ps
cltd
jo
adc
mov
out
push
mov
clc
pop
xor
div
out
incl
orb
mov
lret
xor
push
fwait
insb
sub
adc
dec
adc
lret
mov
cmp
cld
fildll
jo
cli
pop
push
dec
lds
mov
cmc
test
pop
inc
testb
push
mov
loopne
pop
mov
mov
flds
fdivs
pop
jb
rep
out
add
xchg
arpl
dec
push
lds
je
adc
aam
ds
icebp
sbb
mov
dec
fisubrs
cmp
sub
loopne
pop
dec
das
lahf
out
cmpsb
cmp
jns
push
cmp
das
stos
in
pop
aad
add
fstpl
loope
pushf
inc
movhlps
cmp
fsubs
wbinvd
jp
cmpsb
lds
mov
out
sub
sub
mov
mov
lahf
xor
mov
xor
mov
add
pop
call
cmp
cmp
sbb
insb
nop
inc
mov
push
sbb
scas
cmp
adc
fsubrl
mov
mov
and
mov
enter
dec
xor
movsb
inc
imul
xchg
xorl
mov
stc
mov
sbbl
in
cmp
mov
sbb
fiaddl
mov
inc
test
jge
adc
sbb
test
les
fmuls
lds
ljmp
sbb
push
and
mov
mov
jp
imul
xchg
repz
loopne
mov
sbb
cwtl
roll
jl
outsb
adc
sbb
sbb
and
outsb
jo
xor
push
insl
adc
stc
out
outsb
mov
push
ret
mov
dec
mov
xchg
mov
push
cmpsl
push
cmovae
lcall
das
in
jge
es
in
cmp
mov
leave
cmc
dec
and
out
mov
and
or
out
sub
hlt
pop
and
leave
dec
xchg
push
xor
jl
dec
xchg
adc
cmp
pop
ret
xchg
popa
das
cmpsb
dec
and
and
inc
pop
push
dec
decb
push
push
push
mov
sub
pop
cmp
rol
xchg
adcl
lds
lahf
dec
xchg
mov
mov
ljmp
imul
imul
push
mov
mov
icebp
push
and
test
scas
clc
mov
jge
movsb
mov
out
scas
int
test
or
jb
test
das
out
sbb
pop
sub
cwtl
iret
pusha
lcall
scas
mov
sbb
aad
adc
jecxz
pop
gs
pop
xor
xchg
pop
cmpsl
sub
stos
sti
or
adc
sbb
out
clc
push
jecxz
out
jge
mov
stos
adc
stos
cli
es
xor
xor
mov
repz
xchg
data16
in
push
call
adcl
ja
daa
fstp
pop
ja
xchg
sub
addr16
jge
mov
jmp
outsl
pop
mov
out
mov
xchg
fcomps
jbe
mov
punpckhdq
mov
fldcw
jl
outsb
cli
inc
sub
add
mov
scas
mov
push
pop
add
in
and
sarl
mov
outsb
xchg
push
je
inc
sbb
and
outsl
lret
sbb
push
shlb
ret
jns
ss
mov
aam
pop
ja
xchg
push
subb
cmp
xchg
ss
cs
scas
cmc
cmpsb
inc
and
daa
test
mov
addr16
or
insb
pop
and
imul
xor
je
xor
jg
shll
pusha
test
adc
int
pop
daa
sbb
dec
sub
call
jge
cmc
inc
rcl
fwait
mov
xor
stos
sbb
jmp
aam
pushf
mov
cltd
bound
xor
dec
movsl
or
sub
push
iret
cli
adc
cli
push
jb
pusha
icebp
mov
push
inc
sbb
jmp
addr16
idivl
je
mov
dec
and
and
shrb
fbstp
call
adc
cmp
dec
push
lods
cmpsl
adc
outsb
shll
jecxz
jle
out
xor
clc
bound
aam
ret
push
xor
pop
or
es
or
push
out
sub
add
inc
inc
addr16
shr
fists
jecxz
cmp
sti
xor
pop
push
in
inc
sbb
cmpsl
or
or
inc
das
adc
ret
arpl
es
mov
pop
jne
sbb
data16
xchg
lea
cmp
mov
push
sub
enter
mov
mov
push
jl
mov
or
lret
les
add
jl
xchg
mov
outsl
fwait
push
aas
push
cltd
dec
mov
push
jp
jne
test
repz
das
cmpsb
sbb
xchg
movsl
or
aas
push
shrb
fmull
jo
loope
outsl
popa
sbb
add
xchg
add
cmp
sbb
and
ret
cmp
sbb
out
push
repnz
lock
cmpsl
mov
ret
aad
pop
mov
hlt
push
pushf
ret
or
jle
and
cvtdq2ps
xor
cltd
jmp
xchg
cmpsl
into
jae
adc
int
and
nop
subb
cwtl
xchg
mov
ds
cs
jge
mov
adc
out
inc
ret
pop
and
js
fwait
mov
jge
xor
in
insl
das
pop
cmpsl
xchg
xchg
and
hlt
popf
dec
adc
inc
ljmp
sahf
and
es
mov
xchg
insb
int3
adc
mov
pop
lods
in
es
mov
in
btc
jecxz
rolb
jp
xchg
mov
outsb
test
js
fcoml
ret
leave
outsl
bound
psrad
dec
cmpsl
push
pop
push
cmc
inc
js
popa
out
sbb
xchg
inc
add
testl
mov
push
outsb
jmp
testl
push
pop
jae
das
sbb
das
daa
out
mov
mov
ret
sub
movsb
vmread
fs
xchg
movsl
push
mov
hlt
xchg
shrw
xchg
mov
mov
jg
repz
pop
pushf
call
xchg
inc
mov
out
mov
inc
bswap
xchg
lret
cwtl
rolb
xchg
mov
mov
or
inc
gs
in
out
pop
sub
mov
insb
mov
push
inc
sub
and
lds
sbb
push
dec
test
lcall
in
sub
fstpt
lods
pop
push
in
in
outsb
pop
cwtl
add
or
cmpb
push
or
je
stc
scas
push
mov
mov
movsb
movsl
mov
jl
push
xchg
dec
sub
jg
pop
sbb
mov
lds
loop
les
and
es
jae
nop
or
mov
dec
xchg
mov
ja
fisubrl
js
pop
test
jno
popf
mov
pusha
adc
fwait
jne
cmpsl
mov
jmp
lcall
push
dec
cmp
clc
aad
xor
rolb
pop
mov
adc
mul
xor
xor
sbb
shrb
xor
fidivrl
push
stc
sbb
fsubrl
outsb
push
pushf
jne
cltd
jne
ror
test
jne
cmp
pop
and
sbb
test
test
ljmp
subl
subl
mov
xchg
cmp
aad
push
test
outsl
mov
add
enter
mov
jecxz
xor
and
jb
cmp
and
test
push
mov
lcall
mov
lret
or
sbb
outsl
sub
arpl
es
mov
push
mov
jle
pop
sbb
adc
dec
push
ss
sub
cmp
ret
loope
and
test
inc
cmpsb
data16
stc
jecxz
push
orl
cmpsb
xchg
mov
mov
push
dec
in
clc
insb
adc
ss
cvtps2pi
pop
rolb
xlat
push
sbb
xchg
out
jbe
pop
push
sub
adc
or
pushf
mov
inc
cmpsl
push
pop
orb
into
ret
sahf
dec
cmp
dec
sub
ja
minps
xor
pushf
or
repnz
mov
scas
lret
lcall
cltd
or
lods
out
clc
test
sbb
test
imulb
inc
cmpsb
inc
adc
lret
ja
test
dec
sbb
fmull
scas
cmp
sbb
test
clc
lock
and
pop
or
xchg
jno
addr16
out
hlt
push
ljmp
sbb
jecxz
mov
imul
sub
ret
pop
mov
shrl
fprem
pop
pop
cmp
sub
push
cmpsb
cld
aaa
test
add
out
aas
sub
push
clc
push
scas
enter
sub
idivb
jle
cmp
cmp
xor
adc
clc
out
sub
cmpsb
pop
cmp
outsl
lds
push
int3
lods
or
push
bnd
dec
mov
lds
cmpb
dec
or
ljmp
sbb
cmpsb
cs
sbb
js
jle
push
mov
fs
mov
mov
mov
dec
cltd
xchg
jo
jecxz
xor
and
fcomp
iret
jle
or
jnp
inc
shll
out
or
clc
add
push
sbb
and
je
mov
pop
push
mov
mov
stos
in
adc
mov
pop
dec
sub
add
push
sub
lcall
das
stos
dec
fs
sub
push
in
jo
and
ds
aas
daa
jns
fistps
stos
push
or
arpl
or
ja
popf
push
mov
sub
call
sub
xlat
jae
sub
in
faddl
inc
out
mov
test
dec
into
dec
je
or
add
dec
mov
push
xor
sbb
arpl
cld
jle
outsb
inc
cld
pop
cmp
rorb
cli
dec
ljmp
cmpsl
lret
call
enter
in
xor
out
sub
loope
push
mov
adc
push
ds
fwait
cs
aas
add
or
and
cld
inc
shl
test
cmp
mov
cmovnp
cmpsl
test
loop
clc
pop
sub
outsb
enter
mov
or
and
scas
jp
inc
mov
movsl
add
dec
inc
test
xchg
outsl
xchg
gs
paddw
andb
je
fisttpll
cmp
ss
popf
add
mov
jno
push
push
stos
xchg
push
stc
notl
fiadds
mov
lret
mov
jl
insb
push
das
orb
in
call
push
mov
inc
enter
cs
std
mul
mov
mov
push
aam
sub
in
movsl
jl
dec
jo
add
outsl
lret
sti
ret
mov
nop
dec
idivb
mov
into
xchg
mov
mov
xor
mov
mov
mov
movsb
ljmp
sbb
sub
fiadds
xchg
dec
negb
adc
adc
pop
testl
jno
push
and
setg
xchg
push
fwait
cmpsb
test
sbb
test
movsb
sub
and
mov
push
imul
sub
sbb
lods
outsb
popf
jg
ja
test
jecxz
push
loope
push
jecxz
mov
xchg
xchg
sub
loop
mov
push
or
or
and
jno
bound
sbb
cmp
mov
sbbl
ret
mov
push
push
enter
mov
mov
jno
fisubs
dec
dec
lahf
xchg
scas
sub
xor
ds
addr16
test
jmp
mov
pop
xchg
ficoml
sbb
addb
rolb
sbb
repz
bound
mov
push
or
lock
faddp
dec
mov
mov
pop
in
mov
loopne
stos
call
and
xor
push
lods
push
jp
push
jbe
int
das
popf
mov
fs
das
das
sbb
jl
shld
in
mov
daa
ds
loop
or
mov
subb
rdpmc
cmp
in
icebp
cmp
mov
clc
cmpsb
cmc
sbb
test
mov
rolb
lods
pop
movsb
inc
test
mov
sub
cmp
js
jge
ljmp
xor
pop
mov
mov
mov
mov
shl
dec
daa
adc
pop
stos
xchg
out
sub
iret
stos
daa
icebp
sbb
or
ja
pop
jbe
mov
sub
rorl
rep
xor
lock
ss
push
push
dec
lret
je
fs
add
test
xor
sub
mov
pop
xchg
dec
sbb
and
sti
mov
dec
jl
dec
lods
push
ja
sub
jmp
pop
je
dec
dec
std
dec
cmp
cmpsl
in
je
subb
out
pop
mov
lock
cmp
add
fidivrs
push
mov
push
sub
and
hlt
addl
daa
sub
adc
push
pop
popf
daa
xchg
rcrb
push
in
jecxz
rclb
cmp
repnz
cltd
in
fstp
lret
xchg
jg
inc
xchg
jnp
loope
cmp
cmc
out
mov
mov
addl
jo
movb
mov
add
xchg
ljmp
xchg
mov
xchg
adc
testl
sahf
rorb
sub
das
and
fwait
xchg
push
enter
ficomps
lock
pusha
data16
mov
sub
fadds
ret
inc
xchg
testb
pop
in
or
sti
cmp
adc
dec
and
jg
into
jo
mov
or
addr16
and
inc
ret
repnz
and
or
add
ss
push
cmpsb
bound
dec
sbb
jne
lock
push
out
sub
cmpsb
mov
or
mov
pushf
out
wbinvd
add
int
sub
ss
lds
std
ud1
out
cmc
adc
popa
adc
js
jns
shll
add
pushf
push
xchg
jo
test
sub
mov
imul
adc
loop
jp
xor
sbb
sub
cmpsl
or
jmp
dec
jl
mov
xor
add
ss
xorps
rcll
movsl
leave
ss
sub
push
je
inc
lret
jecxz
mov
lods
xchg
pop
mov
test
pop
or
push
fldt
xchg
adc
push
cmpsl
rol
int3
int3
lret
jecxz
push
mov
clc
adc
imul
test
jnp
push
push
xchg
inc
ret
call
mov
xor
sbb
lea
insl
bound
xchg
fwait
insb
jle
rolb
adc
je
cmpsb
scas
out
dec
clc
pop
mov
and
in
sub
add
sub
xchg
jmp
data16
push
jo
xchg
jne
xor
jge
xchg
in
outsl
mov
sub
lds
xor
in
pop
loope
cmp
loope
movzbl
push
pop
pop
jb
mov
jecxz
xchg
test
mov
cmpsl
mov
or
dec
adc
lock
dec
ljmp
in
xlat
into
push
out
dec
mov
lahf
ds
notb
daa
mov
push
ja
nop
cmp
leave
sbb
mov
or
mov
mov
movzbl
push
test
hlt
stc
adc
dec
and
fisubrs
stos
xchg
or
cmpb
out
cltd
popa
push
and
jl
scas
push
fimull
daa
ret
sub
out
cli
loope
es
hlt
dec
push
mov
rcll
pop
sub
out
mov
test
or
lret
shrb
cmp
sub
in
mov
aad
adc
inc
push
ret
mov
mov
cld
ficoms
orl
in
adc
jp
enter
je
fidivrs
fistpl
fs
dec
sub
sub
cmp
imul
xor
mov
pop
jp
ss
mov
fwait
push
je
xor
clc
jno
mov
mov
jp
cmp
mov
mov
andl
adc
imul
in
pop
sbb
ret
lea
or
into
ljmp
xchg
mov
push
cmpsl
sbb
mov
mov
and
xchg
adcl
push
xor
pop
sbb
adc
std
mov
pop
int3
ja
mov
arpl
push
mov
bsr
inc
out
testb
ret
icebp
das
setge
js
in
cmc
cmp
sub
jl
aaa
sub
and
mov
dec
test
loopne
push
adc
mov
adc
sub
popl
or
test
out
loope
enter
xor
dec
ret
in
mov
dec
push
scas
das
push
add
std
dec
stos
sti
std
lret
adc
mov
mov
and
fadds
inc
xor
xchg
aaa
scas
xchg
mov
sub
in
inc
adc
ss
repnz
push
sub
in
push
xchg
pop
mov
lret
call
sub
inc
pop
cmp
jg
je
mov
sbb
repnz
jmp
or
mov
scas
dec
outsl
jo
lret
push
sahf
and
fisubrl
lret
popf
mov
mov
fstp
and
fidivs
sub
out
or
jmp
daa
repz
jne
movsb
sub
pop
out
sbb
push
je
adc
jg
adc
mov
shl
xor
pop
push
inc
aaa
pop
and
mov
sub
xor
inc
stos
push
push
mov
dec
les
enter
das
xchg
movsb
cmp
adc
pop
push
bndstx
repz
pop
shll
out
fwait
aam
ret
ljmp
add
subl
xor
mov
sahf
icebp
jp
pop
into
lds
push
cmp
mov
mul
mov
fistl
mov
mov
mov
in
clc
bound
hlt
and
addr16
pop
adc
fiadds
and
pop
jmp
mov
insb
xchg
outsl
jb
iret
jmp
popf
and
sub
aad
or
cli
add
dec
sbb
cmp
dec
div
dec
cs
xor
pop
scas
es
sub
and
sub
out
data16
inc
cmc
in
add
cmp
loop
jbe
mov
cmp
pusha
and
cld
push
cli
add
push
xchg
dec
dec
inc
bound
jbe
mov
xchg
shlb
inc
out
andl
adc
add
sbb
test
push
outsb
jb
pop
jle
aas
movsb
jno
repz
iret
vshufps
pusha
loopne
test
fidivl
push
jnp
stc
push
and
add
clc
out
mov
jge
insl
push
or
pop
cmp
clc
int3
in
sub
pop
cltd
inc
vmread
adc
cmpsb
sub
inc
aam
mov
out
adc
inc
imul
push
jbe
add
dec
xchg
sbb
cmpsl
dec
into
fidivl
test
fidivrs
fs
jbe
stc
adc
xlat
push
fisttpll
fcmovnbe
ljmp
and
mov
pop
mov
xor
mov
sti
jo
push
inc
add
pop
jnp
sbb
cmp
enter
or
xor
push
and
js
ja
bound
jno
or
add
dec
or
test
into
cmc
jge
daa
dec
mov
inc
lahf
adc
aaa
aas
adc
loopne
cs
packssdw
pop
repnz
inc
aad
mov
push
jnp
xchg
jnp
loope
dec
cmpsb
ja
pop
aad
cli
cmc
repz
pop
repnz
sbbl
das
xor
push
faddl
xor
and
js
test
add
ja
jmp
lret
stos
int
push
xchg
mov
mov
push
cld
subb
filds
shlb
lcall
xchg
dec
add
gs
jmp
daa
mov
mov
adc
xchg
xchg
ljmp
adc
xor
mov
pusha
mov
cmpsl
inc
sub
push
hlt
sbb
repnz
test
aas
out
sub
lret
cmpsl
daa
pop
aad
adc
push
ret
pop
scas
and
insl
loope
sbb
fisubl
cmp
rdtsc
test
je
push
xor
ds
sub
sarl
pop
xor
push
movsl
sbbb
iret
sti
push
pop
add
mov
inc
xor
lret
pop
xor
pushf
mov
and
je
fidivs
popf
outsb
scas
sbb
jno
fisubs
mov
or
push
pop
orl
test
out
lock
sub
rcl
outsb
mov
mov
lahf
push
inc
mov
scas
ja
sub
or
leave
imulb
aaa
std
test
jl
mov
adc
dec
cmpsl
test
and
pop
aad
mov
ds
imul
and
clc
mov
add
sti
jbe
sbb
js
mov
push
sbb
lret
das
push
test
out
std
cmpsl
mov
addb
sarb
or
orl
cld
sbb
mov
xor
mov
jmp
sub
push
adc
sbb
mov
xchg
inc
mov
incb
stc
das
out
or
outsl
cld
nop
sub
pop
ret
inc
test
repz
jl
iret
sub
sub
repz
xor
sub
iret
lods
mov
jo
dec
adc
mov
push
adc
idiv
imull
por
mov
das
andb
loop
push
sub
pop
push
fiaddl
jecxz
addr16
scas
jbe
inc
push
stos
cmp
mov
ljmp
xor
gs
jns
dec
fldl
dec
scas
outsl
mov
ret
xor
mov
jnp
cmpsl
cmp
mov
add
call
xor
xor
xlat
add
xchg
pop
cmpsb
xor
jg
xchg
sti
xor
lds
dec
mov
pop
mov
jo
test
sbb
clc
xor
in
dec
test
pusha
xchg
sub
stos
xor
stc
sti
daa
jecxz
out
sub
mov
and
and
frstpm(287
pop
adc
test
jb
ret
stc
mov
mov
stc
fwait
cmp
pop
pop
inc
ror
xor
xor
lea
pop
popf
push
jmp
out
pop
cmp
aaa
das
push
cmp
lret
cmp
dec
adc
xor
pushf
repnz
iret
jmp
test
mov
adc
jl
mov
shll
pmuludq
and
adc
push
sarb
scas
inc
xor
filds
push
pop
sti
test
inc
fildl
mov
jge
mov
mov
test
cmpsb
in
xchg
stos
arpl
in
popa
das
hlt
pop
mov
xor
mov
xor
bound
sti
push
xchg
ss
or
or
cld
and
push
xchg
jle
jb
cli
mov
stos
movsl
xor
mov
jns
imul
mov
xor
jle
data16
xor
adc
icebp
mov
bound
jo
jecxz
ss
inc
das
push
jb
mov
jo
stos
pop
push
xrstor
dec
pusha
cs
lock
mov
cmp
cwtl
inc
test
add
xchg
repz
cld
test
incb
test
jmp
fmull
repz
mov
cmp
and
or
xchg
lret
cmp
es
sub
jmp
adc
push
mov
lcall
cwtl
mov
push
jmp
fs
adc
add
add
mov
lods
lea
mov
clc
testl
xchg
mov
cmp
popf
scas
dec
out
pop
xchg
mov
clc
add
jb
ss
xor
leave
or
sub
pop
aas
cmp
push
mov
push
cmp
in
and
cld
mov
in
scas
or
pop
cmp
clc
test
out
and
dec
mov
das
inc
test
mov
data16
mov
cs
mov
sbb
cli
push
sbb
adcb
mov
dec
psrlw
das
aaa
push
mov
outsl
or
lods
cmp
aam
xor
rcrb
cwtl
orl
out
lods
adc
dec
mov
inc
test
mov
push
das
movsb
gs
lret
ret
xchg
iret
leave
fwait
test
mov
cli
jg
mov
and
loope
cmp
ret
repnz
jae
pop
sti
sahf
lcall
orl
mov
clc
stos
xchg
or
push
mov
pop
or
pop
cmp
and
adc
add
add
xchg
dec
xchg
push
mov
jecxz
push
push
and
sbb
dec
divb
and
mov
dec
adc
pop
sti
adc
and
data16
sub
mov
mov
lahf
pop
cmc
pop
andb
and
imul
lahf
clc
movsl
out
aas
add
cld
enter
inc
xor
nop
mov
fsub
ret
jmp
repnz
adc
fwait
adc
rcrl
jno
sbb
and
sub
pop
jno
jno
clc
cmp
lock
cmpsb
in
addb
sub
repnz
stc
cmp
pop
dec
cmp
imul
iret
daa
xor
mov
jge
cwtl
gs
test
insl
pop
adc
push
cmpsb
lret
mov
js
sub
lahf
cld
scas
xchg
push
inc
scas
mov
sbb
jmp
stos
cli
adc
popa
dec
jae
ljmp
dec
add
int3
sbb
mov
jmp
mov
mov
pop
push
jle
sbb
xor
scas
mov
pop
add
push
mov
loope
or
dec
in
add
ret
rorb
sbb
mov
rcrb
sub
or
sub
jns
xor
cmpsl
and
fnsave
aaa
and
repz
fcoml
mov
test
es
out
cld
adc
add
push
test
adc
fnstcw
pop
push
dec
and
push
or
mov
or
push
movsl
mov
lret
fildll
pusha
mov
sbb
push
mov
mov
jne
and
xor
iret
dec
mov
push
fmulp
mov
xchg
pushw
ja
inc
in
dec
ljmp
fcmovbe
mov
mov
lods
push
rcpps
leave
enter
jns
jmp
rolb
push
stos
or
sbb
iret
xchg
cmp
test
mov
xchg
xchg
sub
imull
push
dec
pop
mov
push
iret
out
hlt
adc
dec
ret
ud1
push
push
cld
movsl
test
jge
stos
mov
mov
orb
daa
add
scas
mov
mov
mov
sub
pushf
js
sbb
jno
ss
int3
jne
dec
pusha
jo
push
ret
sub
mov
mov
adc
cld
stos
in
and
jno
sbb
jge
sub
xchg
lcall
mov
bound
sub
dec
shlb
out
in
cs
ret
jbe
sub
or
jmp
push
insb
jae
insb
add
fisubrs
fcoms
cmp
es
mov
imul
jo
ljmp
test
cs
dec
lcall
or
scas
or
stos
inc
push
ljmp
clc
sub
ds
add
dec
clc
sub
push
add
bound
lds
jne
jp
mov
cmp
xchg
inc
in
ja
or
testl
addr16
stos
fs
lods
fisttpl
ljmp
mov
dec
out
andb
loopne
movsl
mov
inc
push
pop
xchg
sub
insb
adc
xchg
xor
cmp
mov
movsl
shll
loop
push
and
jo
pop
mov
out
inc
push
and
mov
imul
xor
inc
sbb
or
jb
addb
stc
adc
jmp
sbb
data16
and
sbb
fisttpll
out
popf
lock
or
xchg
or
add
mov
outsl
lcall
xchg
push
pop
xor
jbe
scas
xor
dec
xchg
pop
pop
jle
aas
push
sti
ljmp
ss
mov
stos
or
pop
pop
cmp
pop
push
int3
aad
adc
push
stc
fwait
inc
push
cld
mov
nop
mov
js
aad
nop
pop
or
test
dec
dec
xchg
mov
rclb
jo
push
xchg
mov
cmpsb
sbb
pop
mov
push
and
add
in
outsb
fld1
test
ds
sub
js
hlt
ja
mov
add
push
shrb
outsb
and
add
clc
std
sub
xor
cmp
out
rep
push
adc
pop
dec
sub
fcmove
lret
jp
push
sahf
ljmp
mov
inc
pop
lock
call
jo,pt
mov
dec
ja
int
shr
jmp
rorb
js
mov
mov
mov
mov
cld
jecxz
jp
mov
in
das
sti
sub
packssdw
adc
out
mov
lods
and
ljmp
dec
sbb
cmc
cmpsb
rclb
je
adc
push
ret
xchg
push
mov
imulb
cmp
cs
mov
aas
stos
mov
cs
mov
adc
mov
clc
push
lahf
repz
sbb
pop
xchg
divl
push
cmpsl
fdiv
mov
mov
jo
test
addr16
xchg
fwait
dec
stc
dec
or
stc
adc
and
push
jo
das
push
mov
cmp
adc
gs
push
sub
das
shll
adc
sbb
push
push
hlt
jp
mov
pop
sbb
xor
push
inc
and
and
cmp
and
add
movl
setno
mov
pop
inc
xor
outsl
cmpsb
jge
ljmp
popa
and
jne
sub
lahf
sbb
mov
iret
cli
andb
mov
fs
xor
jle
and
push
loop
cmpsb
add
cld
fs
cltd
sub
je
fcmovnu
ja
sbb
stos
addr16
mov
and
sbb
pop
cld
repnz
insb
mov
xchg
lret
jbe
sub
mov
arpl
and
sahf
mov
test
jo
inc
jecxz
push
fmul
and
cld
das
sub
and
call
movsb
mov
cmp
xlat
neg
mov
pop
xor
ss
jmp
push
push
jnp
cmp
xchg
jp
stos
mov
test
out
fucomp
xor
add
dec
mov
iret
inc
add
dec
pop
mov
push
lea
and
repnz
das
push
mov
xor
ret
and
clc
cwtl
sbb
movsb
jl
push
mov
push
dec
mov
out
xchg
jp
rorb
cmp
mov
xchg
ficompl
sub
jp
ja
push
jmp
and
mov
scas
mov
push
push
outsl
js
cmc
ret
inc
push
int3
incb
jno
inc
inc
xorl
faddl
mov
fldenv
and
addr16
jp
jecxz
xor
dec
adc
ljmp
pop
jle
push
fsubs
xor
push
ret
movsb
cmpsb
mov
aaa
lret
aaa
ret
mov
bound
flds
add
outsb
es
jecxz
popf
cmpxchg
push
lods
lcall
mov
dec
dec
out
cmpsb
jne
sti
or
out
sub
mov
inc
cmp
cmp
cmp
or
pop
inc
ja
jb
dec
inc
cmp
sti
xchg
add
mov
cmp
xchg
test
repnz
iret
xor
fsubp
pop
push
loop
cmp
lods
mov
mov
push
adc
pop
lcall
iret
cs
cmp
gs
test
xchg
daa
mov
push
scas
loope
dec
cmp
cmp
lea
cmpl
sub
loop
add
jb
jl
andb
inc
out
xor
mov
dec
dec
repnz
xor
fnsave
dec
or
cmp
or
cmp
fimuls
lfs
push
fnsave
movb
fwait
outsb
cmp
ljmp
cmpsl
rolb
sbb
mov
dec
pop
lret
mov
adc
mov
inc
or
mov
stc
fistl
ds
fstpt
jne
scas
enter
add
hlt
dec
std
aaa
sub
jge
imul
ljmp
test
mov
outsb
sbbl
and
sub
clc
sub
cmpsb
and
push
dec
out
mov
pop
ljmp
pop
jmp
fldcw
and
lods
sub
sbb
inc
das
lahf
add
sbb
mov
push
or
xor
js
mov
ds
in
ds
push
pusha
and
lds
lea
mov
pop
and
dec
mul
xor
sbb
shlb
hlt
cs
xchg
dec
add
xchg
mov
mov
jmp
xchg
subb
push
xor
and
imull
pop
push
pop
dec
cli
cmp
push
fwait
xor
and
sbb
sub
data16
in
fisttpll
sub
mov
jp
movsl
movsl
fucom
add
nop
mov
inc
sbb
mov
push
in
adc
jb
popf
and
pop
sti
xor
leave
adc
out
or
es
sbb
aam
jmp
incb
push
mov
ja
mov
dec
aam
fld
xor
push
lar
push
pop
jmp
adc
testl
add
and
es
mov
cmp
sbb
sbb
aam
loope
clc
das
cld
sbb
shrb
pop
ds
lock
or
dec
or
das
pop
stos
lea
call
test
out
jns
adc
fdivl
aas
sub
pop
aas
ljmp
lret
je
out
push
mov
mov
stc
and
sub
daa
xor
or
mov
cmpsl
mov
mov
adc
dec
push
or
cmp
fimuls
pop
fbstp
addl
insb
into
mov
je
inc
aaa
or
mov
dec
push
das
xlat
lahf
int3
dec
xchg
sub
das
push
shrb
sbb
mov
sub
in
out
loop
inc
and
js
inc
insb
aaa
add
and
and
daa
hlt
push
pop
push
and
pop
mov
dec
or
mov
into
sub
insb
mov
pop
add
cmpxchg
scas
je
std
and
push
shr
or
adc
mov
pop
add
ss
sbb
mov
xor
cmp
insb
dec
pushf
xchg
ss
or
lret
aaa
dec
out
mov
aam
cmp
push
cmp
pop
pop
aam
lods
mov
inc
out
imul
mov
je
pop
aad
mov
pop
sbb
cmp
push
addl
jge
andb
in
sti
in
and
in
repnz
adc
in
les
in
sbb
jno
push
jp
out
ret
rclb
jmp
imul
mul
pop
mov
stos
inc
and
je
cmp
out
je
and
jecxz
cmp
subl
mov
fst
mov
loope
push
mov
cmpsl
and
out
add
add
pop
mov
les
lock
and
pop
mov
mov
outsl
adc
mov
xchg
push
jge
dec
push
ds
sbb
pop
jmp
xchg
sub
sbb
sbb
adc
rorb
insl
setl
add
cmp
je
cs
into
sub
xchg
ss
add
iret
sub
xorb
idiv
ds
mov
cs
movsb
inc
outsl
scas
inc
lock
jbe
in
jle
into
data16
jl
sub
push
sub
enter
inc
jne
xor
mov
jae
aaa
xchg
adc
cmpsb
adc
push
js
ss
ss
xchg
into
and
ss
outsb
data16
pop
repnz
sahf
scas
mov
outsb
or
push
lods
out
ds
test
divb
ss
lods
jns
ss
data16
mov
cs
jmp
and
pop
or
mov
mov
xchg
repz
push
pushf
iret
push
ret
mov
insb
jno
inc
or
and
out
pop
add
sub
pop
iret
cmpb
out
jp
mov
iret
xor
sti
sub
mov
je,pt
mov
aas
movaps
mov
xchg
out
cmp
rorl
dec
cli
mov
and
xchg
fiadds
ss
loopne
call
imul
push
lcall
xchg
push
test
cli
outsb
push
inc
sub
dec
data16
out
inc
repnz
enter
mov
daa
xchg
jns
ja
cs
data16
dec
cmp
jae
xor
inc
push
ss
rcl
bound
in
jp
mov
jo
push
dec
pop
inc
mov
cmp
repnz
rolb
rcr
jb
mov
pop
jbe
out
insl
subb
dec
ss
ds
cli
fidivrl
ja
sahf
jb
jl
jnp
xor
inc
es
inc
cmp
xchg
aaa
mov
into
jle
fidivrl
mov
lock
dec
ror
data16
adc
inc
push
negb
rorb
test
jb
test
fnstenv
dec
push
stos
xor
inc
sub
push
mov
ret
negb
push
icebp
sub
clc
sbb
dec
pop
outsl
out
mov
dec
mov
test
stos
jo
mov
cmpsb
mov
add
ds
cmpsb
adc
in
xchg
icebp
movsb
lea
out
lock
fiadds
jmp
sub
and
subl
jmp
inc
cmp
das
bound
ljmp
and
ror
cmp
sbb
pop
mov
mov
bound
pcmpgtb
and
scas
leave
jo
inc
test
sbb
dec
std
sub
or
ljmp
loopne
cmovge
nop
mov
push
outsb
test
enter
adc
shr
sbbb
lock
pop
pop
test
jns
xor
aad
push
pop
mov
fwait
ljmp
loope
mov
dec
pop
out
ret
dec
clc
pop
les
fisttpll
sbb
pushf
aaa
mov
cmpsb
bound
jbe
jg
sub
add
sbb
and
icebp
ret
add
xor
add
das
fwait
jnp
stc
xchg
mov
gs
sbb
adc
pushl
repnz
mov
xchg
lea
into
mov
dec
mov
xor
and
movsb
xchg
movsb
push
or
stos
push
push
loopne
adc
in
inc
inc
and
out
push
mov
jmp
repnz
fs
sub
push
mov
lods
pusha
sbb
or
push
lock
call
scas
sub
das
dec
jmp
and
and
sbb
and
jne
in
mov
loop
mov
xchg
call
lods
jae
adc
jnp
pushf
mov
je
jne
aad
pop
out
sub
test
rol
jge
clc
arpl
mov
mov
mov
scas
stc
ljmp
sti
sbb
aad
mov
sbbl
push
dec
fcmovb
or
cmp
push
sub
cmp
mov
mov
adc
push
out
xchg
rorl
push
ret
testl
btc
popa
push
jge
mov
je
scas
jno
jne
out
jge
mov
mov
rep
and
out
inc
dec
and
add
subps
sbb
jecxz
stos
je
das
or
cli
gs
psraw
mov
arpl
and
lds
or
fmuls
or
popa
mov
pop
imul
add
mov
std
push
mov
and
sub
sbb
sti
pop
cmpsl
xchg
xor
enter
imul
lret
stos
lock
sub
lret
xchg
sbb
push
jnp
leave
xor
sbb
jnp
outsl
test
mov
rorl
ds
add
jb
cmp
inc
inc
sub
fsts
ret
xchg
imul
and
dec
sbb
hlt
cmovge
inc
push
pop
mov
test
xor
out
stos
fsubl
jns
sub
imul
fadd
inc
cmp
scas
or
jb
ss
and
scas
jmp
dec
test
xor
popa
jecxz
inc
cwtl
xchg
ret
mov
out
mov
and
cmp
sub
sbb
mov
push
mov
cs
mov
js
sbb
inc
cmovae
stos
mov
test
mov
jb
mov
xor
arpl
and
and
inc
xor
fscale
stos
bound
xor
inc
sbb
cli
out
xor
and
test
sbb
icebp
stos
icebp
mov
jecxz
add
rclb
popa
sub
adc
fisttps
cmp
jns
js
das
fwait
push
or
das
cmp
or
add
mov
ljmp
lret
push
sub
add
dec
sub
add
sub
jl
pop
cli
mov
sub
xor
sbb
jmp
cmp
lds
sbb
dec
mov
xchg
lcall
sub
mov
ljmp
mov
call
add
outsb
and
cmp
insb
jge
push
mov
test
and
call
pushl
mov
ds
loop
ss
and
ss
mov
jae
jnp
push
loopne
into
adc
and
mov
inc
rcrb
mov
loopne
dec
fistpll
mov
sti
adc
es
sub
dec
je
popf
mov
leave
or
jnp
test
bound
jnp
cli
push
nopl
sub
adc
ss
mov
sarl
fistpl
xor
push
lcall
into
mov
notl
mov
wrmsr
dec
out
dec
push
cmp
xor
pushf
mov
adc
loopne
cmp
and
in
into
dec
mov
in
cmp
push
test
pop
cld
inc
mov
cs
push
dec
or
sub
inc
cmp
gs
sbb
imul
jbe
dec
push
push
push
aaa
mov
inc
mov
ret
aas
and
gs
pop
cmp
sbb
sub
ds
scas
mov
pusha
das
cmp
mov
ljmp
cmp
pushf
add
pop
out
push
push
scas
les
popa
cmpsb
lock
lret
pusha
fidivs
mov
mov
push
cmp
in
je
cmp
ds
dec
jmp
clc
add
xchg
cmp
adc
mov
arpl
xor
jno
sti
ljmp
out
gs
jecxz
cli
enter
lret
sbb
mov
cmp
mov
fcmovnb
mov
aam
test
and
gs
push
or
loope
pop
dec
icebp
adc
mov
push
test
add
sub
push
mov
and
ljmp
add
mov
fs
mov
xor
jno
xchg
scas
dec
cmp
lods
xchg
aad
push
incl
je
sub
icebp
xchg
mov
inc
daa
lret
decb
mov
addps
cmpsl
xor
out
ret
mov
xlat
adc
inc
rorl
inc
jecxz
jno
fstpt
out
dec
movzwl
mov
and
call
jbe
mov
cmc
mov
imul
popf
sbb
dec
add
das
mov
inc
dec
cmpsl
hlt
mov
mov
inc
adc
dec
adc
cmp
das
cmpsb
xor
ret
setle
in
push
ret
xor
add
in
jno
sahf
jmp
test
jb
jne
loopne
push
cmovs
std
stos
pop
add
xchg
scas
fisubl
loop
gs
outsl
pop
jne
sti
sub
sbb
xchg
pusha
lahf
sbb
dec
mov
es
ja
add
sbb
lds
cli
add
xorps
rcl
and
sub
xchg
fidivs
mov
pop
sbb
das
ficompl
and
xchg
int3
movsl
arpl
packssdw
loop
push
test
fdivs
pop
adc
and
xor
in
dec
xchg
add
mov
sbb
jnp
mov
je
jp
adcl
test
sbb
shrl
sub
gs
iret
xchg
pop
lds
jno
mov
or
loop,pt
loopne
jns
test
fidivs
and
jbe
jae
mov
pushf
push
mov
or
xchg
scas
pop
and
pop
pop
mov
fsubrl
lea
jo
mov
imul
jmp
or
test
push
xchg
cmpsl
adc
repz
icebp
js
mov
es
mov
push
andnps
sbbl
lds
outsl
out
lahf
sub
jb
stc
cmc
cmpsl
adc
push
inc
jae
rclb
push
sbb
mov
add
dec
or
add
push
or
push
loop
popf
push
and
add
mov
incb
das
xor
adc
pop
xchg
lret
xor
sbb
mov
into
cmp
outsl
orb
mov
jo
and
xor
cltd
mov
push
jg
mov
xor
hlt
jp
jge
movsl
jbe
call
mov
push
movsb
push
push
push
xor
pop
das
sbb
mov
mov
in
jnp
jp
push
lret
mov
inc
jo
mov
dec
test
push
or
mov
dec
mov
das
xchg
outsl
cmp
mov
push
or
push
into
pushf
cmp
insb
test
cmpsl
fisttpll
inc
loope
mov
xor
sub
movsl
dec
aad
xorb
sub
scas
ljmp
inc
push
sub
scas
rorl
push
dec
and
xor
dec
push
inc
push
push
in
dec
arpl
sub
or
and
idiv
cmp
sbb
and
je
shl
dec
pop
movsb
daa
push
negl
jae,pt
bound
lods
mov
xor
repz
stos
mov
repz
popa
cmp
ja
repz
and
pusha
mov
push
divb
notl
cmpsl
sub
cwtl
fdiv
mov
sbb
and
sub
xor
inc
dec
jb
dec
push
mov
cmpsw
or
and
in
rorb
fstpl
repnz
es
mov
push
sar
hlt
inc
sbb
mov
loop
and
or
adc
pop
push
ds
and
add
lock
push
cld
and
stc
sub
not
loopne
cs
or
add
lahf
repnz
pushf
subl
lods
sbb
adc
mov
mov
mov
ret
jnp
adc
push
cmpsb
push
lods
sub
or
aam
xor
xchg
loope
mov
mov
dec
pop
mov
loope
stos
out
cld
fsts
loope
imull
rclb
in
dec
testb
ret
xor
imul
push
rorl
mov
cli
call
data16
xor
mov
add
cmp
cld
out
push
pop
repnz
out
pop
sbb
jo
outsb
out
orb
clc
sub
sbbl
inc
xchg
pop
cmc
lret
jmp
push
subl
clc
and
aad
cs
ss
xorl
xor
lret
mov
xchg
sub
push
ljmp
sbb
sub
jmp
or
fcomps
aam
loop
data16
adc
mov
rorb
dec
jle
mov
stc
ja
flds
and
addl
je
movsl
sbbl
lcall
cs
jl
add
push
jp
shlb
out
inc
push
pop
sub
dec
mov
leave
test
jns
int3
aad
nopl
syscall
out
jecxz
mov
call
pop
sti
push
pop
lahf
pop
es
stos
jg
out
pxor
cmp
loope
inc
mov
add
outsl
mov
mov
int
push
sti
outsl
lcall
mov
jns
or
js
xor
and
sar
xchg
push
pop
lret
test
add
imul
test
dec
dec
mov
je
jp
daa
xor
mov
or
cli
mov
outsl
iret
repnz
jge
les
movsb
adc
xchg
aaa
cmp
test
clc
pop
loopne
xchg
stos
jg
ljmp
leave
xchg
es
xchg
icebp
stos
lcall
shlb
lcall
gs
cltd
push
movsl
lret
icebp
sbb
scas
cmp
and
aam
and
mov
push
mov
push
adc
mov
ljmp
lret
movsl
push
out
out
mov
cmp
jp
add
xor
xor
jbe
pop
insb
push
jmp
lcall
sbb
mov
fsubs
cmp
push
sub
aas
mov
xlat
push
jge
out
fcmovbe
mov
jne,pn
in
inc
inc
mov
fildl
popf
sub
cwtl
inc
test
jp
push
cld
adc
mov
sub
mov
lds
inc
or
push
xor
js
sub
add
sbbb
and
stc
cld
pop
out
lcall
nop
fisttps
inc
cmp
cmp
test
cmpsb
push
lret
outsb
shrl
sbb
lods
stos
jmp
add
jmp
jb
push
xchg
loop
cmpsb
out
stos
mov
je
add
xor
cltd
push
in
iret
lret
fcmovne
fldenv
pop
stos
pop
rolb
and
ret
movb
push
jecxz
inc
aam
sbb
mov
and
jns
adc
mov
es
ret
dec
ss
lret
popf
testl
in
or
dec
cmp
jae
push
ss
sbb
mov
aas
xor
inc
dec
pop
cli
ret
dec
adc
movb
lods
sti
cmc
push
or
push
mov
sbb
cmpsb
stc
push
push
jae
scas
jb
bound
cmp
bswap
inc
mov
dec
and
cmpsl
mov
mov
dec
icebp
add
mov
ljmp
and
dec
or
icebp
push
stc
or
lret
add
inc
jmp
mov
jb
fisttpl
outsl
mov
insb
pop
sub
xchg
mov
ss
icebp
cmp
out
adc
push
mov
lahf
lds
mov
or
xchg
dec
daa
clc
push
jge
xor
shl
mov
nop
xchg
cmp
cmp
out
mulb
ja
pop
and
xlat
mov
jp
xchg
das
out
stos
add
pop
xor
mov
cmp
sbb
arpl
sub
mov
and
stc
inc
jecxz
push
xor
pop
adc
adc
aas
lahf
jo
lahf
jl
cmp
test
xchg
ljmp
test
dec
test
leave
pop
cmp
hlt
imul
in
stc
and
dec
and
dec
sub
lret
cld
xor
xor
js
imul
sub
or
js
push
jl
jnp
or
decb
cwtl
popa
cli
hlt
sub
adc
outsl
in
lcall
je
jl
mov
dec
pop
pushf
push
data16
push
and
loopne
pop
mov
sbb
in
mov
add
mov
mov
adc
and
adc
cs
push
aam
fnstenv
std
lcall
das
mov
bound
jne
sbb
push
mov
out
jp
sbb
dec
ss
sbb
jecxz
stos
sub
and
out
sub
imul
idiv
out
test
and
sbb
xchg
dec
not
addl
cld
lret
cmpsb
ljmp
clc
leave
or
mov
push
mov
fimull
cmpsl
je
dec
xchg
push
push
insl
and
cmp
repnz
push
sub
dec
jae
nop
pop
add
push
lods
adc
lods
add
daa
xchg
jnp
cli
add
jmp
push
cli
cmpsb
cmpsb
aam
jg
outsb
push
in
mov
push
jnp
loop
adc
mov
jl
jg
rcrl
pop
cli
fwait
jo
in
sbb
mull
xadd
mov
movsl
clc
into
stos
fcomp
and
lods
and
dec
dec
cmp
aad
pop
jecxz
dec
scas
sbb
lgs
ror
push
cmp
inc
dec
or
push
mov
sbb
xlat
das
mov
sbb
cmpsb
and
jge
lods
jae
iret
out
fwait
sarb
mov
cs
fsubr
adcl
lods
cmp
aad
or
enter
sbb
or
jbe
addr16
xchg
mov
push
cmp
aam
xchg
pop
insb
adc
sub
dec
cmpsl
and
sbb
jp
jmp
inc
sbb
xor
xor
fdivrs
sub
and
push
and
outsl
mulb
jnp
push
setb
lods
mov
lahf
and
sub
out
mov
adc
inc
je
add
sbb
lods
push
cli
inc
xor
daa
stc
clc
mov
les
cmp
popf
xchg
xor
mov
shlb
loope
mov
sbb
rol
dec
scas
out
jge
sahf
lds
pop
outsl
jno
and
mov
xor
cmpl
or
std
cmp
test
repz
cmpsb
adc
aas
and
push
mov
scas
outsl
mov
ret
int3
enter
out
fwait
dec
push
es
mov
xor
xor
stos
inc
sub
push
mov
dec
xchg
jo
addr16
jnp
test
jb
addr16
fs
js
jge
mov
aam
xor
xor
popa
sbb
pop
cmc
inc
outsb
push
aas
shll
iret
out
leave
lds
mov
iret
mov
jle
mov
push
inc
jb
xchg
clc
and
cld
lds
jnp
mov
jns
insl
sbb
pusha
leave
ja
sub
pop
and
sub
leave
mov
movl
cltd
je
inc
outsb
dec
mov
mov
dec
into
xor
call
mov
xor
cmpl
sbb
data16
jo
mov
mov
ror
int3
test
jl
imul
bound
iret
loopne
mov
hlt
and
sgdtl
movsl
cs
sub
hlt
aad
adc
lret
aad
jnp
fcomi
xchg
and
rcrl
jo
repz
insl
cmp
dec
xor
psrld
aad
jp
mov
call
xor
jg
mov
dec
inc
lock
test
lret
mov
push
flds
stos
sub
repz
pop
lods
mov
adc
sbb
daa
mov
inc
or
pusha
fsincos
out
les
fnstcw
and
fst
pop
dec
stc
punpckldq
imulb
push
push
push
and
iret
cmp
dec
scas
pop
sub
movsb
inc
jo
mov
test
pop
andb
add
insl
jp
fsubrs
mov
std
dec
inc
iret
jl
out
daa
in
lret
jae
popa
inc
dec
dec
int3
daa
mov
dec
jge
js
fwait
lret
or
sbb
and
jmp
cmp
mov
popa
andl
inc
arpl
or
cmp
sbb
lods
repz
fidivrs
stos
jb
push
nop
mov
cmp
inc
nop
fadd
outsb
sbb
mov
test
in
or
mov
outsb
mov
pop
dec
jo
in
aaa
imul
stc
sbbl
idiv
or
pop
jle
andl
mov
push
popf
dec
loope
enter
mov
scas
rep
push
popf
jp
int3
xchg
xchg
cmp
pop
sbb
and
pop
jne
or
lahf
divb
bound
movsl
mov
ret
or
dec
repz
in
xchg
sub
leave
incb
popf
sar
popf
dec
and
xchg
iret
mov
ret
outsl
cmpsb
push
push
psubusw
sbb
cmp
jge
push
inc
dec
add
mov
sbb
sbb
mov
cmp
push
arpl
xor
and
lcall
or
or
mov
hlt
add
shr
and
addl
mov
jp
imul
cmpsb
insl
movb
shl
pushw
xlat
mov
mov
xor
sub
mov
push
out
or
add
jbe
call
and
pusha
repnz
inc
sbb
call
cmpl
es
sub
ja
push
xor
aas
sbb
mov
aad
inc
push
push
pop
outsl
jno
pop
mov
mov
push
push
scas
outsb
dec
mov
xor
and
outsl
or
sbb
dec
or
std
repnz
push
adc
repz
mov
pop
sbb
mov
or
and
clc
and
rcrb
pop
sub
movsl
repz
push
aaa
jns
xchg
pop
mov
sbb
data16
into
mov
in
in
in
das
imul
jg
adc
fwait
adc
test
jl
push
xchg
pop
dec
pop
inc
insl
ret
out
dec
xchg
mov
notrack
shlb
iret
add
out
cs
int3
jle
popa
push
shll
and
jb
pop
repz
jmp
jbe
cmp
stc
and
ret
pop
mov
mov
adc
jbe
cmp
enter
out
sub
insb
stc
mov
xchg
pop
cmp
stc
addl
seta
out
sbb
cmpsl
add
test
stos
jmp
stos
pop
or
fsubrp
and
repz
sbb
or
or
das
cmp
inc
pop
dec
into
pushf
mov
and
test
jmp
cwtl
stos
xchg
mov
sbb
jo
fisttpll
push
out
in
jl
pop
cmp
and
pop
pushf
gs
or
lcall
int
cmp
cli
outsl
enterw
aad
jle,pt
push
jb
mov
sub
rcll
int3
pop
push
rcll
and
pop
icebp
repz
scas
into
push
lret
out
cmpsb
js
pop
pop
lock
mov
push
jo
pushf
mov
repz
dec
pop
xorl
inc
cmp
mov
cltd
mov
push
push
mov
sti
push
lock
fldcw
shlb
jbe
in
mov
sbb
aad
push
fs
hlt
stos
dec
sarl
jnp
mov
out
xor
in
jnp
mov
jns
mov
stos
jne
mov
fldt
jne
repnz
pusha
rdmsr
or
or
mov
adc
mov
out
xor
sub
and
xchg
inc
cli
je
movsl
jp
lcall
push
out
or
jg
lea
out
xchg
push
daa
jmp
xchg
aas
xor
stos
or
lcall
addl
inc
pop
adc
or
jbe
ficoml
sbb
loope
aaa
daa
stos
adc
ret
add
or
mov
lahf
mov
imul
mov
push
jecxz
mov
cmp
sub
push
and
daa
sarl
push
sub
fcompl
call
stos
inc
or
or
xlat
cmpl
push
test
jne
das
mov
cli
js
mov
jp
cli
popa
sbb
push
nop
mov
or
jecxz
xchg
aas
and
cld
push
jbe
adc
pusha
push
add
aas
js
push
push
pop
out
cs
sub
out
xor
sahf
idiv
adc
pop
push
pop
enter
hlt
sub
sub
sub
sbb
repz
shr
mov
movsl
adc
das
aaa
adc
push
test
jnp
out
fisubrs
lahf
xor
jle
pop
stos
mov
pop
dec
sub
and
lods
cmp
pop
ss
mov
pop
jns
lds
idivl
jb
scas
adc
jmp
xchg
dec
icebp
fiaddl
stos
sub
jae
lods
add
adc
push
loope
cmp
dec
lock
push
jge
xor
push
test
xor
mov
adc
jo
pop
dec
test
mov
imul
add
enter
int3
mov
mov
out
push
mov
js
cld
lret
loop
inc
stos
adc
stos
std
cmp
cmp
mov
fld
push
cmp
fsubrs
repz
sbb
popa
into
out
dec
xchg
mov
fdiv
dec
cmp
jne
jno
jnp
cs
notb
sub
cmc
push
xor
loope
outsb
push
shll
repz
lods
push
add
int
add
leave
mulb
push
jne
mov
or
das
call
dec
xor
xchg
mov
push
dec
ljmp
sti
fstpt
ljmp
arpl
rcl
dec
test
cmp
mov
in
lret
adc
lock
hlt
sub
and
movhps
sbb
mov
xor
repnz
mov
xchg
xchg
imul
out
addr16
jne
mov
xadd
daa
lds
xchg
ljmp
adcb
mov
daa
loope
aas
es
mov
test
shll
lock
cmp
or
cmp
and
add
pop
push
pop
adc
scas
cmp
sbb
out
sub
and
cmp
cld
out
xchg
data16
sub
xor
mov
mov
aas
sbb
cmp
repnz
loop
jae
pop
mov
push
ret
xor
jns
sub
xor
fwait
insb
lds
negb
pushf
and
xor
andl
outsb
cmc
dec
adc
pusha
cmpsb
cmp
mov
add
inc
cmp
clc
hlt
dec
pop
outsl
lock
dec
jmp
or
mov
push
cld
xor
in
pop
sub
push
cvtdq2ps
mov
rcll
call
sbb
mov
jp
and
testl
push
test
sub
push
push
dec
mov
push
sbb
aaa
mov
andl
mov
mov
sub
push
rorb
push
fsubrs
or
dec
xchg
bound
fs
stos
sub
dec
arpl
push
mov
pop
pop
push
adc
mov
add
fcomps
cmpsb
and
pushf
pop
jo
or
cltd
and
mov
scas
stos
repnz
es
inc
mov
test
pusha
icebp
lahf
divb
jp
clc
out
jb
andl
stc
test
flds
arpl
test
jbe
push
ret
sub
pop
adc
arpl
scas
jl
out
cmp
lcall
movsl
adc
xchg
cmp
pop
clc
inc
fs
les
aam
mov
cmp
xor
push
cs
in
xorl
stos
jbe
filds
pop
cs
adc
das
repz
jp
pop
test
mov
xchg
xor
outsl
mov
cmp
or
out
cmp
or
sub
sub
xchg
jl
dec
fwait
push
cmp
in
hlt
mov
pop
sub
nop
scas
iret
jge
pop
dec
adc
insb
clc
xor
sub
lods
loopne
js
lods
push
das
test
inc
mov
shr
xor
mov
mov
repz
das
cmc
scas
lret
stc
push
push
dec
mov
jmp
inc
std
add
mov
subl
cmpsb
mov
int3
mov
dec
push
jae
mov
push
je
leave
cmp
add
mov
cmpsb
dec
lret
dec
insl
clc
xchg
je
rolb
push
ficomps
cwtl
push
sub
mov
sbb
out
aaa
ljmp
repz
es
push
cmpsb
pop
inc
mov
pop
icebp
jno
movsb
jb
cmp
ja
push
sarl
addps
push
xor
test
psubq
push
jae
jbe
nop
mov
loope
add
cmp
and
push
je
icebp
xchg
loopne
add
cmp
ficomps
pop
adc
mov
xor
repz
mov
popf
cmp
xchg
jnp
fcomip
ds
mov
dec
insb
insb
lock
ja
ss
lahf
jecxz
sub
inc
cmp
outsl
xlat
repz
cmp
push
push
cli
loopne
js,pn
pusha
in
test
lret
paddw
out
pop
jae
fcoms
adc
cmp
std
and
loop
push
fldenv
sbb
test
jmp
xchg
pop
pop
mov
test
pop
push
adcb
addr16
push
iret
into
test
jl
sbb
addr16
rsm
lds
inc
mov
lds
push
xor
gs
stos
lds
cmpsb
roll
jecxz
sbb
push
stos
sti
jge
jmp
mov
dec
mov
lods
fldcw
es
pop
push
and
jo
or
cli
out
sub
dec
negl
jge
pushf
xchg
lret
sbb
sub
add
mov
cmp
add
inc
std
call
aad
pushf
rorl
adcl
xchg
rcr
stos
arpl
or
xor
add
cmp
jge
mov
push
rcll
push
mov
fcoms
lods
xchg
pop
jno
pusha
leave
pushf
outsb
or
mov
push
out
push
inc
shrl
push
push
mov
imulb
and
jae
aam
fisubrs
sbb
pop
pop
testl
out
sbb
cmc
test
dec
lahf
mov
mov
aas
push
hlt
jmp
pop
fdivr
icebp
shrl
inc
pop
test
and
fisubl
nop
icebp
enterw
loope
jg
mov
mov
test
lret
loope
and
jmp
andl
mov
loope
jg
mov
push
mov
jp
outsl
fadds
cmp
mov
cs
movsb
jo
out
or
push
aas
imull
cmpsb
and
dec
rorl
cltd
add
scas
lret
push
out
xchg
mov
cs
lret
cmp
jbe
pop
shll
jno
or
push
cmpsb
mov
xor
push
in
jnp
dec
call
mov
mov
pop
ret
iret
inc
xor
inc
sub
in
cmc
ret
movsb
dec
sahf
pop
mov
les
push
fdivs
dec
lea
lcall
pop
mov
loop
mov
or
ss
adc
mov
ret
inc
int
into
dec
daa
ds
jne
mov
lods
mov
das
movsl
repnz
in
xchg
ret
test
nop
test
jne
fistpl
cli
jno
je
mov
mov
les
out
mov
push
lds
scas
popf
jg
scas
push
or
insb
out
push
cmc
nop
sbb
jns
sub
xor
mov
outsb
cmpsl
and
inc
mov
inc
inc
jecxz
data16
sti
addb
xchg
push
dec
add
add
hlt
fsin
scas
add
imul
xorl
push
xchg
pushf
les
jne
ficomps
sub
dec
in
fs
pushf
dec
pop
mov
xor
les
ret
push
jno
inc
mulb
sub
jecxz
mov
das
std
jae
jno
sbb
push
adc
push
out
je
xchg
push
mov
rorl
mov
cmpb
sbb
xchg
sbbl
add
stos
cmp
aam
ljmp
outsl
cmc
sbb
mov
addr16
das
cld
mov
jmp
adc
scas
or
cltd
push
push
shrb
aas
add
jmp
shrl
push
ljmp
andl
xor
xchg
xor
push
sub
fwait
mov
rclb
sbb
ljmp
lds
cmc
scas
mov
movsb
incl
das
je
stos
out
ret
rcr
icebp
cmp
loope
fists
movsb
shr
push
pop
clc
cmp
mov
cmp
je
fwait
jne
shlb
cmpsb
sub
addr16
test
mov
out
and
into
jbe
jmp
sbb
imul
int3
push
sbb
jecxz
cmpsb
mov
jmp
jle
xchg
sub
mov
das
jno
mov
or
scas
scas
add
daa
push
jnp
xchg
cmovge
int3
ds
push
arpl
das
xlat
jmp
mov
insb
adc
scas
sub
cmp
mov
shll
jecxz
ljmp
jb
lret
sbb
mov
sarl
stc
push
test
out
xor
clc
sub
paddusb
push
inc
rcr
aaa
sarl
xor
adc
push
jae
jge
dec
fildl
outsl
js
mov
push
mov
popf
in
mov
pop
out
mov
ss
mov
dec
fwait
mov
mov
dec
popf
roll
adc
and
mulb
jge
aad
mov
jecxz
sbb
mov
cmpsl
fists
dec
je
jg
fbstp
jmp
and
ss
in
adc
test
or
cwtl
daa
pusha
lods
leave
push
daa
cmc
out
mov
push
int
sbbb
hlt
sahf
mov
jge
scas
cmc
push
sbb
sub
add
es
and
sub
push
in
clc
scas
xchg
push
scas
sbbl
xor
cli
je
lock
jno
xor
lds
fs
outsl
test
jne
out
xchg
outsl
sub
nop
cmpsb
andb
jns
leave
stos
ljmp
ss
jecxz
aad
test
test
adc
daa
cmpsl
and
pop
and
cmpsb
stc
push
mov
push
shl
movsl
push
mov
imul
outsb
lret
mov
add
cmpsb
cld
push
cmpl
shrb
orb
adc
pop
sarl
cmpsb
test
mov
push
int3
xchg
xor
and
pop
in
mov
clc
aas
call
cmpsl
test
adc
scas
sbb
das
sbb
push
sub
xchg
movq
js
js
imul
loop
and
xlat
inc
popa
adc
test
sbb
movb
xor
xchg
aad
repnz
adc
lock
mov
jle
dec
es
insl
adcb
outsb
jp
sub
out
ficoms
sbb
scas
leave
push
mov
jo
jns
lea
je
and
mov
cmpsb
leave
in
sub
mov
popf
inc
stos
push
pop
jmp
fisttps
or
hlt
test
lret
jl
push
mov
aam
mov
cmp
sbb
or
aam
mov
adc
xchg
mov
inc
mov
enter
addl
pop
pushf
pop
fistpll
mov
ret
adc
in
js
ljmp
adcb
scas
jns
jp,pt
push
stos
or
das
dec
pop
ds
je
outsl
inc
mov
xor
sbb
leave
jo
pop
in
les
out
mov
fstpl
data16
xor
inc
out
cmp
push
mov
pop
jne
and
mov
in
lret
popf
pop
pop
stos
sbbl
les
mov
in
das
jno
cmpsb
jno
and
xor
pop
icebp
push
ss
add
add
sub
mov
lea
movsb
jle
bound
xlat
push
fimull
shlb
mov
stos
sbb
cmpsb
push
pop
jne
fbstp
sahf
das
pcmpeqw
pop
aam
or
push
pop
or
fisttpl
sbb
adc
mov
mov
mov
mov
data16
out
jb
pop
les
movsl
or
scas
or
inc
hlt
xchg
mov
fwait
cld
loope
aas
insl
jecxz
mov
cmp
and
mov
mov
int
push
ss
test
mov
mov
mov
xchg
cmpsl
xchg
add
jnp
aaa
jmp
add
inc
out
sub
push
mov
cmp
sbb
arpl
les
pop
into
dec
les
ret
sahf
sbb
scas
add
scas
pop
and
mov
or
daa
jmp
mov
test
cmovnp
inc
add
xchg
mov
mov
test
iret
mov
adc
fwait
int
sub
mov
add
cmp
mov
aam
cmp
fisttpl
cmp
pop
popf
push
call
es
ds
push
dec
push
or
addb
pop
sub
xor
xor
sub
add
out
sub
movw
dec
push
arpl
rorl
lock
or
in
and
ret
out
pop
imul
movsb
sub
mov
movsb
aam
or
dec
cli
aam
rorl
cmpsl
fldl
dec
mov
xor
dec
jb
inc
push
add
vmovq
pop
inc
sub
in
sub
cmp
ret
add
outsl
test
sbb
sub
mov
sahf
sbb
mov
dec
dec
push
push
shr
mov
out
sub
ljmp
hlt
or
negl
add
mov
in
js
shl
jmp
add
shll
mov
inc
je
xchg
add
xchg
adc
js
sbb
xchg
sbb
cmovae
cmp
je
fnstcw
pop
adc
aam
push
sub
rclb
cmp
mov
clc
sbb
and
std
push
mov
and
mov
adc
das
js
dec
jecxz
push
jg
leave
fwait
push
or
push
mov
mov
nop
mov
in
cld
icebp
loop
or
dec
lock
sbb
sbb
aas
sbb
sub
jo
out
and
mov
leave
mov
dec
lret
xor
xchg
xlat
pop
dec
add
sub
push
adc
out
jg
adc
stos
mov
fcom
stc
cmc
das
or
mov
fwait
scas
pushf
sbb
cmpl
test
popa
test
mov
clc
je
in
pop
adc
das
sbb
pop
and
shlb
jb
push
les
stc
in
adc
faddp
pop
movsl
test
out
icebp
mov
addr16
movsl
inc
mov
mov
mov
lahf
jno
push
mov
xor
jno
popf
dec
ljmp
jnp
call
mov
arpl
stos
xchg
repz
xlat
test
and
mov
lods
cmp
js
inc
xchg
rcrl
sub
imul
mov
mov
add
xor
cmp
cmpsb
pop
ss
push
jmp
call
es
cmp
fs
nop
mov
cmp
movsl
and
and
popa
xchg
xor
pop
jl
sub
push
lret
es
lds
inc
bnd
ret
dec
incb
inc
retw
pop
xchg
push
les
xchg
push
insl
and
xor
js,pt
stos
inc
add
aad
loop
push
jg
add
ret
add
fstpl
pop
sub
iret
mov
aaa
jno
aad
add
sub
test
cmp
inc
sub
mov
cltd
pop
lahf
cltd
sbb
adc
out
pop
ret
movl
and
adc
loop
scas
inc
es
mov
adc
fistpl
inc
je,pt
xor
pop
jns
and
cmp
sub
insl
ret
jno
loopne
dec
fldenv
sub
sahf
or
mov
sub
dec
or
xor
repz
cmp
xchg
dec
cli
cmp
xor
or
int3
sbb
push
fimuls
sub
xchg
fs
popf
movsl
jl,pn
out
pushf
shll
xchg
mov
sub
push
sbbb
mov
fisubs
addb
dec
leave
and
loop
cmpsl
pop
jb
push
mov
xor
popa
outsl
jmp
js
pop
xchg
cmp
scas
and
and
or
daa
mov
sub
loop
test
lret
lahf
and
pop
adc
or
insb
cwtl
iret
push
or
xor
sub
pop
or
sub
or
cld
sub
inc
shll
push
or
inc
cs
aaa
adc
scas
into
sbb
dec
sub
mov
mov
subl
dec
gs
subl
rdmsr
insl
sub
and
aam
mov
dec
push
cmp
in
stc
loope
jmp
push
les
xor
fwait
add
in
aaa
sub
daa
dec
shlb
mov
cmpsb
dec
mov
into
out
mov
or
add
in
flds
mov
dec
or
insb
xor
inc
pop
mov
inc
sti
sub
lods
mov
mov
mov
cs
scas
xchg
adc
in
cmpsl
xlat
bound
adc
xor
sbb
outsb
clc
loop
cmpsb
xor
add
xor
test
fsts
cmp
sti
sub
out
outsl
sub
fcoml
pop
xor
daa
cmp
pop
mov
lock
sub
inc
inc
leave
sub
les
mov
andl
mov
mov
sub
dec
and
inc
into
xchg
inc
jns
shll
fldt
and
sub
in
outsl
sub
xorb
adc
fs
inc
and
out
mov
fsubs
es
outsl
xchg
repz
lea
subl
sub
or
cmc
lds
xor
xor
cmp
loopne
xchg
out
es
push
cmpb
and
out
dec
jmp
ljmp
pop
mov
pop
pop
push
leave
sub
xor
movsl
lods
jle
mov
ljmp
cmp
dec
xchg
pop
inc
das
jnp
pop
sub
inc
enter
mov
mov
jnp
notl
or
xchg
push
cmp
xchg
rorl
add
mov
cmp
outsl
fisubrs
cmc
mov
orb
adc
sub
les
pop
xor
shll
mov
out
dec
in
mov
or
jg
clc
add
push
js
hlt
ja
enter
xor
ja
mov
stc
test
sub
icebp
xor
mov
sbb
inc
aad
sbb
adc
mov
pop
sbb
mov
das
add
shll
cmp
cmpsb
enter
xor
stos
and
addr16
push
flds
push
fidivs
sbb
fsubrl
cmp
mov
lahf
pop
sbb
cwtl
mov
and
or
mov
inc
pop
xlat
movsl
xor
adc
sbb
rol
out
xor
jg
sub
xchg
sbb
stos
sbb
cmp
pusha
ljmp
ffree
popf
mov
sub
je
test
xchg
push
lcall
pop
fptan
xchg
in
test
loop
xchg
std
and
mov
xchg
push
addr16
movl
pop
cmpsb
test
xchg
fisubrl
mulb
xor
sbb
sub
pusha
stos
mov
pop
cmp
test
jmp
inc
cmpsb
mov
sbb
xchg
cmpsb
sub
mov
test
lahf
sbbb
popa
enter
xor
pop
pop
xor
mov
xor
ret
xchg
dec
scas
icebp
repz
xor
cmpsl
imul
scas
lods
jb
xchg
or
mov
or
sub
lret
inc
sub
jno
aaa
das
fstl
into
leavew
movsb
sub
cli
xor
push
dec
mov
movsl
rolb
andb
ss
dec
or
loopne
mov
fiaddl
fcomip
dec
test
gs
test
cmpsb
cmp
push
inc
mov
daa
rorl
mov
jne
mov
jle
std
cmp
sub
mov
js
or
dec
scas
mov
cmpsb
pop
xor
sbb
mov
aam
pop
sbb
sub
ja
leave
movsb
sbb
xor
in
sub
fldt
dec
pop
xchg
leave
add
gs
jle
imul
arpl
ds
sub
and
push
mov
fcompl
push
pop
xlat
cmp
nop
or
add
dec
cmp
sub
sbb
inc
inc
sub
dec
mov
mov
aaa
ss
adc
addr16
repnz
shlb
das
pop
add
loope
xchg
lret
cmc
call
into
scas
jmp
leave
push
in
and
xchg
cmpsb
outsl
sbb
addr16
cli
push
hlt
mov
xchg
mov
or
lcall
ljmp
push
lret
movsb
insl
outsl
ss
cmc
fisubl
fwait
sub
adc
les
test
cmp
cmp
jecxz
sub
andl
mov
enter
jns
outsl
repz
xchg
outsl
inc
xor
cmp
sbb
fisubs
or
ret
outsb
subb
jmp
and
mov
and
sahf
call
enter
nop
pop
xchg
repnz
cmpsl
sub
adc
mov
scas
xor
rcll
and
call
es
sub
adc
sub
dec
in
leave
lods
out
push
xlat
or
sub
and
daa
lea
nop
push
mul
es
mov
daa
xor
int3
out
cmpsb
xchg
xchg
sbb
dec
push
punpcklwd
sub
or
mov
dec
xchg
inc
or
aaa
aad
mov
adc
loopne
out
popl
lods
mov
rolb
jmp
cmc
mov
in
cmpsl
repnz
js
xor
and
les
sub
xor
mov
xchg
movsl
je
and
push
pop
push
int
cmp
cmpsl
and
lret
shlb
push
jmp
imul
sbb
cmp
jp
jmp
inc
inc
and
js
arpl
xchg
inc
push
jmp
je
repz
cmp
cmpsb
cmp
roll
xor
cmc
mov
mov
daa
pop
gs
es
cmp
dec
and
sub
mov
mov
andl
pop
xor
sub
inc
sub
xchg
fldcw
es
sbb
sub
push
cmpsb
ljmp
int
test
ds
stc
dec
cmpb
cmp
popf
imul
dec
andl
cmp
and
dec
xor
ficompl
data16
aas
sub
adc
jecxz
es
fwait
shl
fcmovu
add
mov
enter
mov
dec
adc
push
dec
jmp
cmp
fwait
mov
push
sbb
and
in
shll
mov
movsl
scas
cmp
cmpl
jle
and
add
inc
outsb
nop
test
mov
movsb
sub
rorl
xchg
jge
aam
mov
inc
xor
gs
outsb
shrb
xchg
inc
and
out
andl
sbb
sbb
sub
sbb
xor
dec
sub
test
in
lods
outsl
sbb
iret
enter
pop
cmp
sub
and
lcall
and
jp
push
add
shll
xor
push
add
jge,pn
jecxz
je
gs
inc
popa
es
mov
push
pop
adc
adc
rorb
inc
sub
jp
aad
outsl
sub
jle
dec
mov
xor
dec
adc
push
mov
es
jo
adc
sub
and
lea
jmp
rcrb
mov
inc
mov
shlw
lods
inc
test
movsb
sub
sub
xchg
sbb
cmp
fists
cmp
sub
dec
adc
fmull
repz
sbb
or
dec
daa
sbb
jno
jge
xorl
shr
mov
mov
dec
movsb
mov
pop
and
push
push
dec
imul
cld
ret
sub
shlb
test
add
push
xchg
push
adc
jno
xchg
inc
adc
into
xchg
xchg
dec
inc
xchg
mov
leave
das
fsubs
jbe
or
int
imul
insl
inc
add
daa
or
sbb
pop
sub
jmp
pop
cmp
pushl
outsb
lock
insl
hlt
filds
push
lcall
mov
jnp
push
adc
cmp
cmp
mov
lods
or
dec
push
dec
lahf
lcall
mov
add
popf
loope
and
jge
stos
sub
jno
and
push
in
xor
data16
or
cmp
sub
add
and
xor
dec
popf
and
fdivp
jg
into
lahf
sub
lret
in
pop
xor
andb
pop
sub
sbb
pushf
and
cmp
rcll
ljmp
cmpsl
and
sub
xor
jb
and
push
aas
lock
sbbb
mov
movsb
out
sbb
mov
inc
cmp
fucomp
xor
enter
das
add
push
loope
pop
inc
dec
lcall
mov
movsl
pop
bound
inc
in
popaw
push
sub
cltd
cmp
ss
mov
outsb
cli
xchg
inc
data16
cmp
xchg
cmp
sbb
sbb
push
insl
pop
sbb
dec
and
xor
pop
inc
sub
push
subb
mov
pusha
lcall
and
xchg
mov
and
dec
sbb
sub
lret
dec
cwtl
dec
xchg
outsb
jns
lea
mov
orb
inc
andl
sub
and
lds
shr
daa
pop
fidivrl
sbb
dec
ljmp
and
cmp
push
jge
dec
push
sub
fmuls
pop
fwait
mov
aaa
pop
repnz
sub
pusha
inc
stc
push
sub
and
pop
mov
mov
iret
xchg
and
lds
and
mov
pop
out
push
inc
cli
loop
daa
movsl
sbb
bound
ds
out
cmp
pop
movsb
add
sub
imul
cmpsb
xchg
scas
ss
ret
pusha
or
jbe
inc
dec
pop
pop
xchg
sbb
sbb
cs
xchg
roll
push
xorl
lahf
sub
clc
xchg
sbb
inc
movsl
popf
and
ret
or
sub
js
sub
leave
xor
inc
cmp
and
xchg
movsl
and
popa
mov
out
int
sbb
cs
loop
mov
inc
xor
outsb
inc
push
xlat
ljmp
mov
fnstenv
je
and
push
arpl
ljmp
push
dec
shrl
bound
ljmp
pop
and
mov
out
xchg
daa
subb
bound
lahf
sbb
xor
sbb
mov
loope
dec
jo
jge
add
sub
push
popa
and
cwtl
xchg
jbe
sub
sub
lods
rorl
sub
fbstp
pop
movsl
and
mov
mov
xchg
push
or
xchg
popl
outsl
rcrb
pop
mov
arpl
xor
lods
dec
and
mov
or
and
ja
stos
and
push
frstor
neg
add
inc
lods
insb
xchg
rolb
sub
inc
cmp
pop
push
test
roll
insl
and
xor
mov
sub
dec
mov
and
adcb
inc
imulb
mov
imul
mov
inc
inc
xchg
sbb
sub
cmp
ds
xchg
pop
lods
and
ret
jno
cmp
xchg
shll
insb
dec
add
add
outsl
cli
arpl
pop
ss
popa
pop
dec
cmp
popf
clc
out
lods
sbb
adc
xchg
pop
sbb
sub
dec
xchg
ljmp
push
and
lds
mov
xchg
mov
sub
dec
test
xchg
out
push
fwait
les
jns
aaa
pop
mov
add
js
shrl
bound
sub
movsl
push
pop
testl
popf
pop
push
lahf
subb
dec
ret
outsl
enter
or
xor
pop
mov
dec
adc
pop
cs
pop
shll
test
pop
sub
jecxz
and
sbb
imul
sbb
jno
cmp
xchg
ret
adc
std
inc
rolb
and
fdiv
lods
and
sti
xor
in
rol
outsl
adc
dec
rep
mov
loop
cmpsb
and
lods
add
cmp
das
pop
adc
sbb
push
scas
xchg
cmp
lds
xchg
xchg
mov
out
mov
daa
mov
leave
sub
mov
and
inc
mov
sub
inc
out
xchg
movsb
into
not
dec
mov
xor
loopne
sbb
sub
enter
sub
icebp
mov
or
add
xor
or
popa
lods
lods
xchg
mov
and
inc
mov
inc
adc
pop
pop
sub
hlt
push
bound
and
inc
dec
and
push
push
inc
cmpsl
test
xchg
sti
sbb
loop
mov
push
xor
sbb
adcl
repz
and
loop
mov
sub
adc
stos
ret
ficompl
and
shll
stos
insb
adc
pop
sahf
and
dec
loope
sbb
push
out
sub
sahf
jp
mov
push
push
outsl
sub
aam
mov
cs
outsb
mov
mov
cmpsl
inc
data16
add
imul
pop
bound
dec
cmc
shll
and
xor
or
movsl
pop
push
jp
movsb
mov
and
cmpsl
lea
mov
and
push
loope
pop
fld
enter
adc
and
bound
fcomps
dec
xor
xor
inc
std
mov
pop
clc
pop
add
or
cmp
add
sub
xchg
dec
das
sbb
mov
fildl
push
movsb
and
fimuls
loope
and
in
movsl
and
sti
negl
loop
lret
xor
cmp
fdivs
mov
aad
addr16
mov
in
mov
xchg
or
call
inc
lea
outsl
aaa
mov
movsb
data16
negl
insl
cmp
xchg
nop
inc
pop
xchg
push
cmpb
incb
andl
lea
std
cmp
push
mov
cmpb
add
bound
and
hlt
sbb
fisubrl
daa
and
ror
cmpsb
pop
and
in
addr16
movsl
sbb
dec
inc
sub
mov
fisubrl
and
fs
int
dec
push
dec
les
cmp
add
mov
rorb
and
jns
pusha
xor
mov
fcomp
or
cmpsl
pop
les
inc
cmc
ds
jo
aam
cmpsb
gs
xchg
dec
adc
popf
sahf
outsl
lahf
popf
push
mov
cmp
std
aas
and
add
jp
inc
fisubrl
mov
push
push
push
fdivl
nop
das
add
adc
pop
jno
test
fwait
dec
sbb
inc
and
lahf
stos
inc
xor
popf
fcmovb
sbb
xchg
gs
movsl
jb
xchg
pop
pop
inc
and
push
and
sahf
das
rorl
mov
sub
sbb
and
inc
and
pop
stc
cmp
pop
xor
cmpsl
and
loop
cmpsl
sbb
nop
pushf
repnz
test
xor
lds
inc
cmc
addr16
xchg
push
sub
or
dec
lds
xor
push
lods
out
and
or
fwait
push
pop
ljmp
orb
push
add
and
cs
jo
popa
inc
and
mov
fldcw
sbb
enter
mov
out
addr16
sub
into
dec
xor
inc
daa
xor
outsl
pop
add
movsb
fisubl
mov
and
dec
sbb
push
cs
lock
push
cs
sub
xchg
mov
add
xchg
xchg
xor
icebp
inc
das
rcrl
rolb
sub
xchg
cmp
decb
xchg
sahf
mov
pop
and
ffree
in
daa
mov
sub
decl
ja
loopne
mov
dec
dec
or
test
in
mov
shl
mov
cmp
jecxz
pop
sub
mov
movb
adc
mov
xchg
mov
cmp
mov
sub
cmc
mov
mov
fwait
sub
mov
jo
sbb
sbb
xor
out
rorl
inc
shrl
movsb
add
int3
scas
push
fisttpl
add
xor
orl
jbe
push
orb
les
xlat
daa
int
ja
mov
sbb
xchg
es
repz
jb
xchg
push
es
or
push
xlat
popa
scas
ljmp
and
inc
out
push
mov
push
mul
es
leave
or
insl
stos
jnp
sub
jl
xchg
mov
xor
int
mulb
cmpsb
ds
xor
mov
ficomps
mov
fwait
mov
or
es
movsl
lret
mov
out
cs
add
mov
cmpsl
or
jne
daa
dec
sub
es
cwtl
ss
es
enter
pop
les
es
sbb
orb
outsb
cwtl
leave
inc
cmc
lock
jg
lret
xchg
test
inc
pushf
scas
xchg
cmp
lea
sub
ss
es
in
cmp
sub
cmpsl
push
push
sarl
xor
sub
cmpsb
push
jnp
mov
loop
jb
xchg
clc
test
adc
inc
jp
inc
xor
add
pop
cmp
or
cmpsb
add
cs
ja
movnti
cmp
js
stos
sub
pop
or
andb
imul
mov
enterw
cmp
shll
xchg
adc
js
add
and
xchg
mov
mov
mov
inc
sbb
test
pop
mov
adc
cmp
out
pmulhw
aad
jnp
push
jae
push
xor
js
xor
cmc
xor
xchg
cmovb
dec
sub
sub
inc
iret
je
push
lds
fldenv
scas
cltd
enter
push
jle
mov
cmp
sub
sub
inc
cmp
fsubs
outsb
cmp
vmread
mov
in
xlat
aad
rcrl
xchg
jge
cltd
imulb
xadd
shll
daa
and
imul
xchg
js
or
mov
mov
jge,pt
test
xchg
call
sbb
mov
xchg
in
in
pusha
loope
jb
xchg
call
dec
daa
sub
cmp
sti
pop
mov
es
gs
in
dec
mov
push
ss
inc
mov
inc
cmp
ds
and
imul
inc
jae
stos
bound
fidivrs
data16
outsb
mov
push
xchg
pop
mov
mov
adc
mov
mov
jmp
jle
mov
mov
roll
fsubrp
cmp
sbb
pop
xor
xor
push
push
mov
js
xor
jbe
das
in
and
cmp
cmc
or
mov
enter
sbbb
mov
sbb
rclb
mov
mov
mov
inc
js
mov
cmp
das
sbb
sti
imul
inc
dec
mov
enter
xor
inc
jecxz
popl
mov
jnp
scas
jbe
inc
ret
lahf
fmul
xchg
mov
andl
inc
mov
xchg
cmp
mov
add
out
dec
gs
cli
xchg
ss
push
dec
test
addr16
jl
push
imul
mov
and
xor
jge
mov
ja
mov
out
es
mov
xchg
cmp
xchg
inc
jg
sbb
push
jecxz
jge
gs
mov
stc
adc
es
and
xlat
pop
push
mov
cmpsb
loopne
cmp
push
cmp
enter
jbe
and
mov
add
push
call
cmpsl
jge
rcrl
sub
fwait
aaa
pop
jmp
sbb
pop
dec
xchg
jecxz
aas
test
fcompl
leave
sti
sbb
dec
jl
inc
cmp
dec
shlb
push
ds
cmp
cltd
push
inc
inc
dec
sub
mov
xchg
push
jb
es
lret
jo
push
das
orb
loopne
mov
mov
icebp
jmp
cli
push
es
les
push
popf
push
cld
es
arpl
fwait
sub
mov
add
imul
shll
pop
addr16
xchg
decb
es
out
sahf
sbb
imul
out
mov
es
inc
into
cld
imul
movsb
sub
and
jecxz
xor
test
or
es
mov
jg
mov
cmp
mov
or
mov
push
cmpsl
cmpsb
cmpsb
push
packssdw
sub
and
push
out
pop
xor
push
gs
shl
adc
inc
fildl
pop
mov
cmc
cmp
mov
pushl
push
es
add
leave
es
sti
insl
mov
add
jo
cmpsb
mov
jne
pop
shl
shr
es
pop
and
add
cmpsb
int
into
es
inc
lods
pop
xlat
cmp
or
lds
jns
sub
movsb
pop
test
movsl
cmpsb
adc
mov
xchg
daa
sub
sbb
daa
cmpsb
mov
enter
inc
xor
dec
out
pop
add
out
pop
fdivrl
jp
data16
inc
aad
push
es
pop
scas
push
xor
roll
jg
sarb
loop
maskmovq
divl
or
test
mov
jle
pop
mov
popf
jo
lret
adc
sarl
mov
imul
add
cs
xchg
enter
je
cld
out
out
es
sub
cmp
or
ljmp
dec
dec
cmp
sub
adc
into
dec
jmp
and
jb
fldenv
or
es
cmc
mov
or
es
mov
push
aam
lock
das
std
xlat
sub
push
stc
add
outsl
adc
adc
and
push
in
es
adc
leave
ficoml
or
es
fs
add
nop
outsb
add
cmpsl
fisttpll
popf
inc
daa
dec
nop
aam
shll
ljmp
add
stos
sahf
cmp
push
iret
or
out
xchg
inc
enter
xchg
test
es
lret
inc
xchg
push
xor
lea
push
sub
sbb
es
add
sahf
adc
jns
nop
add
ljmp
lret
xor
sahf
xor
fdivrl
ljmp
xlat
push
or
loope
push
aam
xor
jnp
mov
call
es
push
and
or
test
mov
addl
pop
cs
js
lcall
jb
aaa
pop
cmc
es
add
ds
dec
xchg
leave
push
inc
mov
mov
dec
dec
in
inc
pop
pusha
lahf
adc
es
shll
daa
sbb
insb
jo
mov
aam
fnstcw
sub
lock
sahf
aad
push
es
into
dec
test
jb
movsl
xor
inc
faddl
xor
js
pop
mov
dec
jbe
jle
imul
adc
out
out
xor
bound
add
test
out
es
aaa
clc
sub
pop
es
pop
add
aas
leave
es
cmp
test
adc
mov
push
es
mov
sub
xchg
lods
mov
cmp
sti
push
scas
daa
idivb
pusha
push
lods
push
daa
inc
sbb
push
inc
andl
aas
cmp
inc
or
cmpsb
sbb
lret
sbb
stos
adc
addr16
out
add
test
mov
mov
ret
mov
mov
push
out
daa
push
sbb
mov
sbbb
es
jmp
filds
ljmp
out
out
or
or
cli
cmc
repnz
shll
xchg
push
push
ja
lret
sub
cmp
fwait
xchg
fstl
and
je
xchg
orl
xchg
mov
jmp
cmp
fwait
es
cmc
fdivrl
test
xchg
or
es
stos
inc
jae
adc
es
hlt
pop
data16
and
ss
mov
sbb
push
xchg
and
mov
pop
sub
arpl
sub
testb
rcrb
je
es
daa
inc
jae
data16
inc
pop
sarl
inc
jo
test
mov
scas
pop
aam
je
ja
shrb
enter
arpl
push
dec
int
add
pop
mov
mov
mov
push
jo
addl
mov
pop
jmp
lret
je
inc
cmp
adc
pop
repnz
push
es
insb
xor
es
enter
inc
mov
sub
xor
pop
je,pn
push
mov
incb
shl
push
xor
dec
push
pushf
imul
and
shlb
cltd
es
push
pop
aaa
addr16
inc
mov
outsb
pop
das
fisubrl
andl
test
push
int3
mov
dec
xor
sti
cmp
mov
jo
jbe
imul
push
adc
sahf
cmp
sub
and
mov
out
and
ficompl
sub
fwait
push
clc
push
into
out
mov
test
shl
fcomp
xchg
les
xor
push
or
ret
faddl
insb
or
in
jmp
stc
jb
sbb
scas
in
add
in
push
or
cmpsb
cmp
mov
inc
xchg
add
mov
cmp
es
jno
test
es
lret
sub
stos
es
mov
ja
mov
lods
jns
in
enter
mov
dec
ret
ljmp
fcomps
dec
clc
jecxz
sahf
mov
push
fwait
sub
es
rcrl
leave
mov
aad
mov
es
mov
cmpsb
lods
daa
mov
jl
mov
sub
xchg
pop
movsl
sti
jp
mov
sub
xchg
push
dec
mov
inc
nop
fadd
bound
cli
out
pop
sub
mov
nop
and
adc
cmp
loop
pop
lea
xchg
incb
scas
cs
lods
es
add
push
fcomps
pop
es
ljmp
sbb
test
and
pusha
inc
jp
stc
cltd
and
es
les
jle
pop
mov
not
xor
repnz
push
lods
or
xchg
pusha
sti
call
mov
add
xor
out
stos
xchg
outsl
les
cmp
std
sub
jmp
mov
pop
and
imulb
loopne
lods
cmp
mov
scas
dec
fimull
mov
cmpsb
outsl
sahf
cmpsl
mov
push
es
add
int
mov
sub
lahf
jg
mov
mov
icebp
movsb
jbe
mov
xchg
cmp
sbb
bound
aam
mov
jns
mov
pusha
push
es
pop
pop
dec
lods
cmpsb
push
xor
lcall
push
pusha
jg
sbb
or
daa
push
dec
mov
sbb
xchg
sbb
sbb
cmpsl
adc
sub
jb
cmp
es
add
ljmp
jecxz
in
xlat
enter
fiaddl
and
xor
sub
inc
add
mov
test
stos
lcall
fistl
push
or
out
adc
es
pop
fwait
es
sbb
adc
mov
outsl
pop
sub
ja
push
inc
cmp
and
shrl
imul
xor
in
imulb
adc
mov
cwtl
enter
sbb
sbb
sub
adc
add
lret
xor
nopl
xchg
ficoms
mov
inc
mov
push
aas
inc
push
daa
inc
fwait
sub
test
sti
ljmp
inc
xchg
mov
es
ss
outsl
notb
in
nop
xchg
xchg
jno
cwtl
popf
repz
mov
fisttpll
in
lock
mov
outsl
daa
and
and
dec
gs
xchg
ljmp
jne
jb
sbb
or
xor
scas
shll
inc
lods
mov
sbb
mov
or
jb
sub
outsl
push
inc
es
push
lods
adc
jnp
daa
xchg
movsl
or
push
fucom
mov
pusha
fstps
fidivrs
mov
xchg
idiv
mov
in
adc
adc
es
jnp
mov
mov
cmp
clc
jne,pt
inc
and
pop
cmp
pop
and
sbb
adc
out
xor
adc
es
xor
popf
cmp
pop
adc
scas
gs
sub
or
push
sbb
and
shrl
shr
cmp
push
add
mov
cmp
xchg
std
sbb
sub
lahf
ret
arpl
cmpsl
push
sbb
cmp
jge
cwtd
push
es
or
faddl
pusha
dec
data16
xor
xchg
mov
stos
cli
jno
lods
lcall
mov
mov
jp
fwait
mov
test
insb
sub
push
je
repz
scas
push
shr
xor
mov
fwait
movsl
ss
bound
in
out
mov
in
mov
ret
cmp
lret
call
jecxz
out
adc
lock
cli
call
fwait
push
orl
adc
jge
cltd
es
xchg
push
fcomp
sti
sahf
dec
add
sbb
and
into
stos
inc
xor
sub
sbb
dec
mov
cmp
jp
add
dec
cmpsb
jg
fistps
outsl
sub
mov
sub
out
dec
mov
es
pusha
aas
fistl
pushf
es
cltd
iret
es
sbb
jnp
sub
aas
out
packssdw
dec
xchg
sbb
es
inc
xchg
adc
fadds
adc
ficompl
push
jnp
cmp
mov
xor
inc
fs
addr16
fdivr
test
jl
dec
movsb
and
es
mov
sbb
es
scas
mov
fmuls
dec
mov
inc
jne
lcall
push
es
out
mov
jbe
add
push
rcr
sbb
lahf
jle
in
cmp
adc
and
mov
pop
out
pop
push
adc
es
mov
pop
dec
gs
jge
xchg
add
jmp
mov
xchg
mov
sti
jbe
scas
adc
test
lods
aam
jg
jge
mov
leave
ret
mov
sub
outsb
pusha
fisttps
ret
inc
lds
mov
jo
jns
fldenv
sub
pop
hlt
shll
xor
jl
inc
out
jge
mov
gs
stc
sub
andl
add
out
es
mov
dec
pop
ss
ds
mov
lds
dec
jno
sub
ds
jo
arpl
mov
es
out
push
adc
scas
daa
push
imul
movsb
mov
jno
mov
rorb
pusha
repz
imul
mov
mov
jle
ljmp
std
sub
adc
push
ret
dec
xor
rcrl
aad
xor
dec
jbe
cmpsb
xchg
dec
out
inc
pusha
es
inc
and
xlat
dec
mov
dec
jbe
mov
test
cmp
inc
psubusb
sbb
es
mov
insb
aad
mov
mov
sahf
es
arpl
lret
je
mov
ds
mov
lods
and
mov
sub
aad
inc
inc
incb
push
es
adc
dec
sub
cmp
jecxz
xchg
cmp
scas
mov
pusha
and
jg
es
cmpsb
sub
adc
or
jbe
les
enter
sub
call
jp
fs
sub
jns
jg
cmc
add
imul
pop
push
and
call
cwtl
int
insb
fs
leave
js
mov
hlt
sub
into
xor
sbb
mov
mov
dec
es
outsb
jne
ljmp
mov
lahf
lods
lcall
int3
inc
addb
mov
insb
and
rep
mov
popf
repnz
sbb
cmpb
xchg
lret
pushf
sub
adc
cwtl
cld
mov
jb
adcl
add
mov
adc
inc
es
push
aaa
or
mov
es
adc
or
andl
test
dec
mov
or
dec
or
push
data16
scas
xchg
cmc
sub
daa
push
cmpsb
int3
push
stc
xlat
push
scas
enter
xchg
or
sub
iret
push
pop
xchg
inc
inc
data16
sub
jnp
fstp
mov
sbb
fwait
pop
add
push
stc
mov
push
std
adc
xchg
xor
mov
cmp
in
pop
insl
imul
popf
ss
jb
fdivrs
xor
cmp
das
add
mov
call
jae
push
lods
das
jge
fistps
mov
psubsw
test
pop
int
test
dec
orl
ja
jp
mov
push
ret
jge
mull
xor
cmp
mov
in
lods
setae
sub
mov
pusha
sarb
int3
cli
xlat
out
push
ret
pop
dec
enter
das
xor
sarl
jle
sbb
mov
adc
mov
leave
stos
mov
xor
rcl
ficoms
jge
push
fadds
and
pop
mov
out
int3
cmpsb
xor
mov
call
push
test
cmp
adc
xor
pop
out
fs
jg
repz
lods
jge
faddl
test
inc
daa
ss
outsb
dec
add
mov
xlat
xor
mov
push
out
lock
loopne
inc
pusha
sub
dec
add
jl
inc
push
fs
mov
loop
jp,pt
stc
loopne
fsubrs
inc
mov
xor
imulb
adc
mov
jle
sbb
xor
scas
jg
mov
jle
pop
lret
push
dec
cmp
repz
ret
notb
inc
xor
divps
icebp
gs
cld
scas
push
and
cmpsb
mov
sbb
jne
add
das
mov
xlat
xchg
orb
and
cld
xor
lods
cs
push
jbe
dec
sub
push
mov
inc
push
and
cmc
xor
xor
push
dec
push
and
xchg
mov
mov
jmp
push
sbb
es
xchg
imul
fwait
jae
es
or
cmp
sub
pop
enter
cmp
js
xorb
or
add
lcall
pop
fisttpll
pop
std
lods
lock
int
data16
jo
push
insb
adc
sub
jno
pop
ret
bound
pop
enter
cld
sbb
out
vmwrite
scas
xchg
mov
clc
and
or
dec
xchg
iret
mov
in
int
dec
and
sub
add
cltd
std
sti
sbb
jle
scas
xchg
negl
inc
or
xor
jnp
sub
mov
mov
xchg
jp
pop
mov
daa
js
push
hlt
adc
cmp
in
jo
mov
popf
mov
adc
mov
test
es
and
cmp
pop
cmc
xor
es
and
lret
xlat
ljmp
inc
pop
jbe
fwait
mov
cmpsl
or
xchg
jae
sbb
in
in
jne
pushf
sub
or
xchg
dec
scas
clc
jl,pt
ja
in
sub
lock
xchg
fmuls
inc
std
lock
inc
pop
lods
pop
out
and
lods
es
lret
xchg
xor
sub
add
hlt
and
push
fprem1
es
jb
out
mov
daa
cmpsl
sarl
inc
jne
out
fidivrs
pop
movsl
jae
shll
adc
push
es
rcrl
pushf
pop
es
sbb
inc
rcl
jge
fisubs
and
insl
xor
test
dec
push
pop
push
daa
leave
fistps
int3
fisubl
cmpsb
idivl
pop
or
or
in
cmp
lcall
setl
jecxz
das
push
sbb
sbb
push
or
sub
mov
mov
js
sbb
inc
cmpl
aam
pop
es
pushf
xchg
mov
daa
ret
mov
jp
sub
cmpsb
cmp
hlt
mov
es
jns
mov
int
xor
inc
mov
outsl
dec
jo
push
mov
mov
lret
scas
sbb
in
es
and
es
andl
mov
es
paddsw
inc
call
cmpsb
jmp
imul
dec
loopne
xchg
push
xchg
call
and
push
push
movsl
mov
ret
int
push
repnz
sub
lea
jmp
mov
push
sub
or
xchg
mov
pop
popa
push
test
cmp
sbb
inc
inc
es
in
add
xor
sub
inc
inc
aas
mov
dec
push
mov
jae
fbld
decl
insb
es
jge
jnp
mov
es
sbb
and
sub
ss
mov
xorb
sbb
cld
adc
sub
or
leave
mov
jnp
es
std
sub
cmp
addr16
adc
xchg
mov
fs
mov
xor
pop
sub
out
scas
sub
xchg
pop
mov
int3
mov
jecxz
or
dec
rol
dec
cmpsl
push
xchg
es
fisttpl
xchg
sub
jae
jmp
lea
icebp
sbb
jno
push
sub
and
and
out
roll
lds
or
clc
mov
shlb
pop
aad
das
adc
xor
mov
cmpsb
rolb
add
imul
xor
popf
es
shlb
xor
jo
in
add
add
outsl
sub
les
mov
jo,pn
test
sub
jmp
int
inc
vsqrtpd
and
lods
adc
cs
shlb
sub
std
xchg
sub
jns
xchg
sbb
fisubrs
pop
sub
mov
addr16
out
es
into
inc
aas
jg
push
es
les
dec
test
jns
lock
dec
loopne
in
adc
test
mov
stos
inc
cmp
fldl
in
dec
or
mov
fadd
sbb
cltd
int3
cmp
pop
xchg
xchg
es
adc
cmc
call
add
movsl
call
and
xchg
cmpsb
pop
jbe
mov
push
pop
sub
xchg
mov
sub
sbb
mov
cli
or
out
lods
lods
jb
dec
dec
pusha
cmp
mov
sbb
sub
xor
in
clc
into
or
loope
subb
into
adc
sub
inc
outsl
pop
lods
cmp
ja
out
aaa
sub
stos
ljmp
push
mov
add
andl
les
mov
inc
push
insl
mov
mov
inc
pushf
rcrb
xchg
rcrl
sub
lret
add
xchg
xchg
pop
xchg
xchg
pop
xchg
push
dec
out
call
lock
stos
pop
jmp
daa
push
jne
sbb
loop
sub
lret
mov
es
lret
sbb
jae
sbb
imul
push
js
arpl
push
lcall
mov
mov
mov
andl
or
sbb
xor
and
sbb
push
push
in
mov
inc
lea
call
fwait
jg
mov
xchg
loope
sub
add
sbb
push
pop
out
call
int
cmp
dec
and
aaa
lods
push
sbbl
pop
mov
dec
mov
mov
mov
or
in
xor
mov
das
jl
push
mov
pushf
mov
jbe
pop
sbb
sub
aas
xlat
pop
aas
scas
add
stos
mov
out
xor
mov
inc
mov
dec
push
add
lret
mov
loope
cmp
ja
loop
movzbl
xor
je
arpl
xor
dec
jecxz
daa
lock
sub
imul
xor
cs
inc
rol
leave
xor
fisubs
mov
push
enter
ffreep
out
in
stos
es
jle
jnp
movsb
mov
mov
dec
jp
popf
stos
test
mov
lahf
in
pop
outsl
insl
lcall
sbb
inc
popf
jae,pt
cld
or
addr16
daa
mov
sub
or
ss
and
pop
pop
fwait
mov
repz
out
mov
lods
xor
xlat
or
repz
cltd
aaa
sbb
in
loope,pt
outsl
and
and
aas
testb
push
aaa
pop
jmp
imul
push
jbe
xchg
sbb
test
pop
xchg
fldenv
ret
out
arpl
cmc
mov
xchg
scas
jg
sub
jo
outsl
inc
fdivr
xchg
fwait
mov
in
aas
cs
jns
sub
dec
lahf
es
outsb
pop
lock
ds
xchg
movsl
es
ret
loope
in
push
push
sbb
iret
pushf
pop
xlat
mov
push
and
dec
adc
push
mul
and
mov
xchg
into
stos
or
imul
push
jp
or
jp
ret
imul
fildll
je
pop
shlb
lods
int
ds
rorl
mov
ds
xchg
cli
scas
movsl
inc
call
aad
mov
xor
pop
ffree
push
xlat
xorl
fstpt
ficomps
pop
out
es
lcall
icebp
sub
popf
cld
in
push
ds
cmp
dec
adc
fwait
jmp
test
ficompl
sub
aas
stos
inc
in
and
cs
sbb
arpl
rcll
scas
mov
xchg
lret
movsl
push
ja
adc
cmc
aas
jp
jae
in
outsb
jnp
jecxz
jle
xor
test
xor
aad
jbe
push
cmp
jp
ret
xchg
sub
lods
mov
fldt
xor
subl
jmp
mov
pop
jae
out
sbb
imul
cmp
cmp
repnz
mov
test
cli
scas
dec
dec
icebp
stos
fisubl
cmp
rorl
mov
gs
mov
jns
lea
outsb
sub
mov
mov
push
pop
std
pshufw
inc
orl
mov
add
and
xor
ret
shll
cmp
iret
in
imul
cmp
out
cmp
mov
ret
std
gs
jno
faddl
push
pusha
fidivrs
addb
popf
dec
push
pop
into
mov
les
push
ljmp
movsb
icebp
push
das
cli
sub
outsb
icebp
es
push
mov
and
loop
inc
cmp
lea
or
ret
jbe
es
in
pop
dec
enter
in
sub
cmc
test
mov
insb
inc
sub
cmpb
push
xadd
push
test
rorb
inc
enter
jle
addl
cmpb
nop
daa
roll
inc
add
idivl
mov
decb
adc
or
dec
bound
dec
jp
out
mov
lods
mov
mov
imull
test
repnz
push
xchg
mov
sbb
sbb
jl
mov
cvtpi2ps
cmpsl
negl
lahf
or
lret
sbb
daa
les
imul
popa
xchg
mov
xor
fs
xor
icebp
push
rorl
call
and
fs
mov
jo
clc
sub
inc
gs
push
cmpsb
movb
xchg
inc
bound
pusha
push
mov
stc
or
in
jl
andnps
mov
cld
add
scas
mov
test
pop
sub
out
jo
lret
test
lret
cmp
jne
fdiv
add
ja
std
ffree
test
in
call
mov
pop
out
ja
test
pusha
mov
mov
cmc
pop
jge
push
mov
inc
push
cmpsb
mov
in
mov
mov
pop
or
mov
adc
add
in
sub
mov
ss
imul
pop
cmpsl
aam
xchg
je
loope
clc
and
out
sub
data16
mov
arpl
pop
mov
push
int3
xchg
pusha
imul
jno
insb
cmp
shll
fimuls
add
popf
jg
sahf
outsb
test
outsb
push
mov
roll
xor
sub
andb
out
es
inc
lea
in
and
jns
js
rcrb
pop
icebp
int3
cmpsb
jl
inc
xor
frstor
rcrb
jmp
fisubrl
mov
ja
push
cmc
insb
add
cwtl
es
dec
inc
mov
cmpsl
and
test
mov
and
mov
jno
insb
jg
in
inc
jl
out
mov
mov
xchg
outsl
into
pop
cmpsb
iret
sahf
pop
dec
fisubl
sub
in
fs
daa
adc
lahf
and
mov
ds
stos
add
out
hlt
imul
out
in
xor
out
sbb
sbb
xchg
fists
outsl
adc
pop
icebp
arpl
daa
hlt
out
adc
cmpb
sub
dec
cmp
insl
dec
repnz
xor
pop
enter
mov
cmpl
rcrl
cmp
mov
sub
inc
inc
xchg
js
cmpb
shll
nop
andl
jmp
push
out
dec
stos
sub
push
daa
dec
das
xchg
fldenv
inc
push
repnz
mov
sub
xor
fldenv
sbbb
pop
xchg
stc
mov
xor
inc
clc
inc
leave
fsubrl
dec
pop
cmpsb
cmp
add
sub
or
es
int
sti
out
arpl
les
out
call
es
inc
iret
in
jp
es
mov
add
or
xor
or
es
dec
ljmp
fildll
mov
ret
mov
xor
in
bound
xor
add
sub
ljmp
stos
fcoml
jle
xor
xchg
or
mov
push
xchg
adcb
add
pop
push
xor
mov
ja
jmp
es
dec
lods
out
test
sub
addr16
push
incb
es
sahf
add
pushf
sti
sbb
mov
lods
fucomp
jbe
sub
stc
repnz
xor
es
pushf
push
push
jl
es
xlat
dec
lret
aam
jno
mov
xchg
dec
push
push
push
js
push
stos
pop
mov
scas
adc
out
dec
or
into
mov
cmp
sub
mov
pop
idivb
cmp
ss
xor
add
mov
mov
or
xor
fsubrs
andl
fisttpll
lds
pop
or
and
xor
mov
es
cmpsb
mov
addr16
mov
shrb
fimull
xor
jo
popa
mov
inc
mull
mov
sub
out
ret
add
test
sbb
mov
push
mov
divl
xchg
jl
insl
xchg
cmp
pop
or
jb
adc
and
cwtl
adc
fwait
xorb
shll
mull
pop
push
nop
clc
enter
imul
xchg
pusha
push
add
arpl
cmpsb
xchg
bndldx
popl
test
xor
fwait
mov
mov
mov
dec
mov
lahf
xor
xchg
in
stc
loop
jo
repz
adc
fldcw
mov
out
xchg
mov
xor
jmp
xchg
and
insl
fisttps
daa
sub
xchg
test
mov
push
or
es
jae
cmpsb
jge
es
mov
xlat
xor
imul
rorl
mov
inc
jl
fsubs
sub
daa
cmp
cmp
mov
nop
lds
adc
repz
cmpsl
testl
pop
in
ds
dec
std
dec
lea
sbb
jl
ja
gs
cmpsb
adcb
cmp
sbb
int
test
sub
ljmp
pop
adc
inc
ret
out
outsl
in
and
push
es
jae
inc
cmp
jle
lods
es
repz
dec
out
call
fsubrl
ds
pop
sub
notb
clc
aas
data16
mov
mov
and
mov
pop
idivl
push
out
divb
push
mov
test
jmp
into
adc
repnz
jbe
popf
adc
lea
or
xor
dec
jl
sub
xor
dec
es
xor
xor
pop
mulb
iret
andb
sub
ljmp
es
inc
enter
and
lcall
jae
mov
je
cmpsb
stc
jle
imul
mov
in
test
in
jp
shl
lods
dec
repz
or
mov
popa
sarl
daa
sbbb
ds
push
pop
lcall
cmp
sbb
xor
xchg
es
sar
lods
inc
and
push
movsb
popf
test
es
push
sbb
dec
push
sub
out
or
je
ja
and
rcll
int
bound
in
mov
jnp
mov
leave
mov
enter
aam
cmp
mov
sub
es
pop
sahf
sbb
jnp
cltd
dec
loop
adc
fldl
into
xor
movsl
andl
fimull
xchg
push
push
scas
dec
mov
cmpsb
pop
hlt
inc
out
aaa
and
add
mov
aam
xchg
fwait
popa
iret
cmp
dec
into
rcrl
adc
stos
std
outsb
rorl
nop
fldenv
les
es
fldl
xchg
add
es
sbb
es
fdivs
es
clc
out
sub
popa
insl
lds
jl
in
daa
and
jns
andb
mov
pusha
inc
xchg
mov
mov
cwtl
jecxz
es
xor
xchg
pop
imul
adc
cmp
mov
lcall
shll
and
outsb
cli
pop
mov
mov
movsb
notb
popf
es
dec
push
es
push
push
les
mov
mov
or
add
daa
int
sbb
xor
ficompl
rcrb
scas
xchg
repnz
fldcw
add
sub
inc
and
xchg
out
inc
es
popf
and
fidivrl
xor
sbb
jne
out
cmc
inc
push
cmp
adc
xchg
popa
arpl
mov
dec
push
mov
sbb
cmpsl
lock
jl
sbb
xor
jle
sub
loop
in
mov
call
inc
cmpsl
loop
icebp
inc
xchg
je
xchg
mov
sbb
mov
jnp
in
sbb
daa
adc
ret
mov
jl
cmp
mov
es
aad
xchg
mov
mov
xchg
xchg
pushw
push
push
subb
xchg
and
pop
xchg
scas
mov
xor
fwait
cld
dec
les
sub
test
dec
fisttpll
popf
aam
push
pop
lcall
push
sbb
cmp
enter
add
lea
mov
dec
jle
in
test
cmp
lock
pop
bound
in
aad
ds
dec
fcomps
ds
push
pop
push
fcoms
cld
mov
inc
mov
mov
xor
sbb
shlb
xor
xchg
push
add
data16
rcrb
outsb
pop
popf
out
jge
pusha
rorl
cs
xchg
test
push
push
mov
add
mov
mov
pushf
sbb
subb
int
xchg
ret
shlb
cs
lahf
shrb
mov
pusha
mov
roll
xor
ja
sub
sti
mov
or
mov
fbld
push
jo
int
aaa
jbe
es
sub
es
mov
push
jno
fdivrs
pushf
inc
adc
movsl
cmpsb
inc
lock
imul
dec
jecxz
lds
sub
jg,pt
div
scas
xor
jecxz
mov
repz
pushf
and
out
inc
adc
lahf
xor
lods
mov
in
les
outsb
adc
lods
inc
xchg
es
mov
push
test
aaa
sub
ss
pop
es
inc
or
adc
cld
push
repnz
sub
jmp
cmp
pushf
repnz
fwait
inc
mov
es
cmpsb
lock
mov
dec
int
stos
sbb
stc
or
data16
mov
sbb
mov
sub
popf
xor
fildll
cmp
icebp
bswap
or
jmp
enter
fwait
mov
pop
shrb
mov
sbb
mov
jns
cwtl
cmp
sbb
mov
or
push
outsl
mov
ds
ss
mov
jmp
cmp
pop
daa
jbe
inc
and
mov
das
mov
or
jb
xchg
jmp
cmc
arpl
xchg
ret
xor
cmp
cmp
lock
push
jl
shlb
arpl
sahf
je
jo
dec
jns
jbe
push
sub
and
es
cmp
mov
cmpsl
push
mov
sub
inc
xchg
dec
insb
pop
sub
pushf
lret
imulb
test
stc
pop
test
pop
repz
adc
xchg
mov
mov
adc
sub
es
jmp
xchg
pop
out
add
sub
mov
inc
vorps
addr16
jg
lock
or
dec
es
dec
stos
pop
mov
test
dec
mov
mov
pop
lea
daa
cmpsb
jmp
out
add
lods
mov
mov
es
dec
sub
ljmp
xor
frstor
cwtl
pop
or
aaa
outsb
je
dec
add
cli
cmpb
adc
mov
sbb
lds
aam
sub
in
dec
jmp
or
mov
out
dec
js
push
add
sti
insl
lods
outsb
test
jle
fisubl
pushf
xchg
lock
cmp
pop
test
iret
or
mov
dec
movsb
add
repnz
inc
cmp
outsb
mov
cmp
pop
mov
sub
bound
stos
inc
mov
roll
mov
es
sti
imul
sbb
movsl
es
pop
xchg
lock
out
xor
popa
out
inc
cmp
push
data16
xchg
fisubs
outsl
sbb
cli
jns
iret
add
add
es
mov
sbb
pusha
ret
mov
sub
cs
cmpsb
movsb
pop
or
sbb
bound
cmp
es
jge
mov
call
sbb
out
out
add
xlat
sub
dec
add
ss
data16
jne
repz
into
dec
je
jmp
add
and
or
mov
jbe
xchg
mov
call
mov
sub
push
movb
subl
daa
lret
icebp
outsb
pop
mov
call
xor
scas
mov
fcmovb
call
push
push
lock
mov
ss
pop
inc
daa
lea
test
jb
cwtl
jg
or
je,pt
orb
cli
jl
jmp
inc
incb
dec
lods
pop
es
mov
sub
cmc
fisubrl
sahf
cmpsb
sbb
dec
mov
daa
and
push
or
add
stos
sub
call
loop
jmp
cmc
mov
dec
xchg
inc
sub
dec
shll
push
sub
test
adc
mov
dec
push
dec
ret
ja
out
or
daa
mov
divl
loope
sub
inc
sub
popf
jmp
imul
fwait
addr16
in
push
xchg
aaa
fmuls
mulb
imull
add
sub
je
cmp
pop
adc
push
sub
sub
leave
or
xchg
push
stos
mov
inc
xor
sbb
das
cwtl
pop
sbb
es
dec
push
es
dec
and
fwait
sbb
lcall
mov
xor
mov
jae
adc
mov
push
jp
pop
addl
enter
push
push
dec
cld
lods
cltd
es
fidivl
and
cltd
cmp
loop
movsb
and
sub
dec
arpl
sti
cmpl
add
es
push
fistpl
mov
jns
jmp
loope
dec
inc
pop
cmpsb
xor
in
cmp
pusha
xorb
sbb
sbb
outsb
mov
sub
pusha
stos
shlb
inc
push
and
add
ret
dec
ja
mov
xor
dec
es
push
xor
sbb
sub
out
es
mov
jo
es
dec
mov
xor
cwtl
repz
cltd
scas
adc
daa
imulb
mov
inc
xlat
push
adc
dec
push
sub
es
push
push
dec
pop
out
bound
nop
cmp
jg
notb
shll
mov
movb
pop
cmpsl
test
mov
daa
imul
movsl
daa
fdivr
ss
in
pop
sub
es
mov
es
in
push
cmp
rol
ret
add
xor
xlat
es
cmp
std
movsl
sbb
shll
adc
jg
mov
pop
dec
mov
addr16
outsb
jbe
scas
lods
es
lret
stc
pop
or
bound
sarl
int
pop
dec
lcall
mov
add
scas
vcvtdq2ps
icebp
js
pop
stos
insl
xchg
xorl
push
je
jb
fstl
push
orl
in
sub
push
out
adc
sub
pop
pushf
sub
jbe
incl
lods
dec
mov
pushf
mov
jb
movsl
jle
adc
dec
imul
test
es
or
pop
xchg
sub
mov
repz
es
cwtl
sti
mov
sub
pop
out
sub
add
es
adc
lahf
xchg
xchg
xchg
sbb
and
xchg
lret
push
mov
push
imull
scas
cli
push
adc
arpl
push
es
jnp
xchg
mov
cmp
add
pop
fldcw
jmp
fiaddl
cmp
lahf
pop
outsb
sarb
xchg
call
scas
mov
mov
lods
xchg
lock
adc
sbb
cmp
fcmovnbe
lahf
ss
insl
push
cs
dec
xor
sbb
es
addr16
int3
test
stos
pop
xchg
add
outsl
mov
inc
sbb
xor
jb
scas
dec
cmpsb
aad
adc
imul
jnp
repnz
or
shlb
mov
dec
ucomiss
into
adc
das
imul
stc
shlb
fs
pop
es
movsb
imul
rcrb
mov
ljmp
cwtl
cmp
hlt
shlb
mov
es
insl
xchg
inc
lods
pop
xchg
sub
xchg
daa
rcl
ss
es
push
jp
add
out
sar
and
push
push
ja
jecxz
ret
mov
fdivs
add
es
sbb
es
std
fs
bound
jge
fwait
das
addr16
sub
dec
mov
xchg
pop
adc
arpl
pop
imul
xor
ss
mov
sub
clc
push
and
jne
push
mov
jb
dec
sub
popa
jno
out
in
sbb
cmp
jne
ret
pop
push
and
cmp
adc
sub
test
ss
sti
es
aas
mov
push
xchg
xchg
add
push
fwait
inc
adc
addr16
movsb
bound
lret
adc
pop
ss
mov
aam
icebp
out
nop
push
sub
es
in
mov
ja
push
and
es
jecxz
pop
je
andb
sub
leave
movsb
out
xlat
imulb
aaa
lods
jle
pshufw
cmp
lret
enter
mov
dec
div
inc
fistps
inc
cmp
jne
mov
fs
icebp
imul
dec
xor
sub
cmpsl
outsb
mov
out
pop
adc
das
and
sbbb
or
fld
sub
push
cmp
dec
cmpsb
test
sbb
sar
es
mov
sbb
movsl
bound
outsb
xor
pop
jle
lods
jb
sub
mov
es
faddp
cltd
lods
test
inc
dec
das
shrw
popa
sub
es
inc
ret
es
lods
dec
xchg
dec
sub
test
dec
adc
cmp
sub
fadd
ret
xchg
pop
cmp
cmp
sub
mov
mov
vmovaps
data16
cmp
int
adc
cmp
jae
mov
adc
es
outsl
xchg
xor
fwait
data16
mov
aaa
dec
out
scas
sbb
mov
repz
es
stos
outsl
jg
ret
sarb
add
cmc
lea
outsb
out
popf
push
sub
mov
es
adc
fs
mov
dec
add
testl
cmp
pop
and
into
lods
or
jge
or
aam
repnz
push
cmc
ss
xchg
es
jns
cwtl
or
push
sbb
dec
stc
mov
imul
andl
es
add
cs
add
push
mov
pop
cmc
data16
mov
sub
in
out
sub
mov
sbb
es
mov
icebp
push
dec
pcmpeqd
sahf
lods
popa
jo
lds
andb
push
or
ss
sub
ljmp
pop
xor
xor
jg
mov
push
xchg
es
add
daa
aaa
lea
adc
es
cwtl
cs
in
lods
mov
out
sub
stc
push
ljmp
jecxz
mov
add
push
loopne
dec
add
in
popf
inc
cmp
rolb
mov
arpl
jp
cvtdq2ps
out
pop
add
cmpsl
pop
xor
cli
pop
or
adcl
enter
idivl
jns
push
cmp
js
es
lea
push
add
out
mov
fldl
adc
icebp
test
outsl
and
pop
jne
les
cmp
xchg
loopne
es
stc
ret
bound
repz
popa
daa
or
cmpsb
mov
daa
lcall
xchg
push
daa
mov
mov
cmc
es
mov
jmp
xor
cmp
sub
mov
mov
hlt
in
mov
fld
aas
inc
es
ss
hlt
iret
inc
adc
or
push
dec
dec
inc
adc
mov
loope
movsb
out
add
pop
mov
es
jl
push
mov
out
fisubrs
mov
sarb
xchg
pop
in
out
daa
xor
sub
and
es
mov
out
sub
out
mov
add
or
pop
adc
movsb
pop
xor
push
inc
jnp
dec
adc
sbb
lods
jge
cmp
mov
xchg
fs
es
and
call
subb
mov
test
test
sbbl
sahf
cmp
data16
ret
dec
ja
jae
xchg
fadd
test
mov
xchg
push
cmp
shrb
mov
lcall
fisubrs
scas
aad
push
xchg
ss
repz
mov
adc
cmp
pop
dec
add
pop
jg
out
out
outsb
cmp
cmpsl
pusha
mov
sub
inc
sub
notl
out
loopne
cwtl
ljmp
pop
daa
pop
and
bound
pusha
adc
imul
lds
es
sbb
pop
cwtl
gs
repnz
mov
pop
addr16
outsl
pusha
jg
xor
add
mov
push
push
jb
pop
jnp
inc
xchg
pop
mov
inc
ds
pop
out
sbb
and
flds
gs
inc
psubusw
dec
jle
inc
inc
push
and
into
pop
mov
out
repnz
pop
sub
or
pop
arpl
dec
sub
xchg
popa
push
inc
or
sbb
dec
mov
cmpsl
mov
shl
pusha
push
push
xchg
out
inc
lods
dec
pop
outsb
dec
push
pop
negl
ss
daa
mov
inc
arpl
cmpsb
pop
sbb
popa
jns
leave
lods
hlt
xor
mov
cs
push
mov
xor
pop
aas
cmpb
data16
lock
int3
pop
jecxz
pop
in
xor
popa
adc
bound
mov
fs
mov
inc
pop
push
imul
xchg
daa
outsl
out
cmpsb
jnp
xchg
or
push
and
pop
mov
lcall
mov
cmpsb
popa
sbb
aad
cwtl
in
sub
popa
mov
mov
mov
inc
sub
sbb
pop
sbb
imul
xchg
push
mov
adc
xlat
pop
out
mov
pop
movsb
out
ss
cwtl
jae
xchg
mov
xchg
push
call
mov
and
mov
pop
inc
mov
pop
xor
sti
addr16
hlt
inc
mov
pop
mov
cwtl
pop
arpl
cwtl
lcall
lret
push
stos
mov
es
pop
adc
bound
mov
sub
jne
in
mov
sub
fs
jbe
jp
pop
xchg
add
pop
cmc
pop
xchg
pop
sub
or
ret
dec
ficoms
cmp
xchg
divb
push
or
push
pop
test
inc
xor
ret
sahf
dec
movsb
inc
adc
bound
imul
pop
daa
pop
cmp
pop
or
sbbl
pop
gs
add
das
ljmp
mov
pop
cmp
out
and
in
pop
inc
mov
popa
lahf
bound
imul
xchg
mov
adc
jno
cwtl
xchg
lcall
lods
cmpsl
and
pop
sbb
inc
fucomi
fs
repnz
rcl
adc
lea
add
cmp
dec
push
sub
int3
push
add
sub
and
mov
pop
cwtl
add
xchg
arpl
inc
std
cwtl
xchg
pop
cmp
sub
or
mov
pop
int3
pusha
or
inc
hlt
mov
gs
push
jb
xor
push
xor
pop
add
pop
shr
repz
pop
andb
aad
es
push
sar
push
bsr
shl
push
bsr
movsbl
xor
push
not
mov
dec
mov
shr
mov
jmp
popf
cpuid
nop
pusha
pushf
pusha
jmp
mov
pusha
pusha
lea
jmp
pusha
movl
lea
js
pusha
pushf
movl
pusha
lea
jmp
stos
pusha
lea
jmp
pushl
jmp
push
movl
call
movl
pusha
lea
jmp
pushl
popl
pushf
pusha
pushl
ret
clc
sar
test
xchg
push
bts
cmp
movzbw
mov
sar
sar
ror
mov
sub
pushf
mov
pushf
mov
cmc
sub
push
rep
call
push
or
icebp
repz
pop
fcmovne
js
ficoml
popa
enter
jo
negl
pop
dec
sbb
xlat
popf
add
inc
movsb
fdivrl
aas
mov
inc
xor
mov
iret
outsl
mov
inc
stc
inc
movsl
dec
popa
js
xchg
jmp
push
mov
xor
dec
mov
add
inc
scas
cld
repz
pop
and
not
lea
movzbw
movl
jmp
add
dec
gs
popa
addr16
outsl
js
add
mov
mul
out
insl
push
pop
push
push
leave
ror
jmp
ret
les
mov
and
adc
repnz
je
jl
frstor
pushf
mov
pop
mov
mov
sarb
sub
jno
loopne
mov
lods
sub
mov
stos
adc
rcll
sbb
lret
push
loope
in
fsubrl
aas
outsb
push
mov
lret
adc
and
xor
jnp
adc
jmp
es
lods
stos
xchg
push
gs
xor
orb
cld
repz
out
inc
and
or
jno
pusha
push
push
lea
jmp
add
add
movsbw
dec
push
stc
not
cwtl
mov
btr
test
sub
test
push
bswap
inc
push
das
call
jmp
add
dec
cmp
add
add
add
cmp
add
add
adc
add
add
add
pop
add
add
adc
add
add
add
hlt
push
add
call
cmp
cmp
sub
call
test
push
push
sub
add
test
clc
or
pushf
lea
je
movsbl
pushf
lea
call
lea
ret
sbb
test
in
inc
dec
push
rcl
cmp
enter
adc
mov
or
pop
jb
lret
sbb
jle
sbb
push
sub
push
ds
push
or
jp
jp
je
mov
rcrl
add
ret
daa
push
push
test
push
hlt
jb
xchg
sub
scas
sub
mov
stos
scas
cltd
jae
push
sarb
repnz
push
or
repz
pusha
mov
lea
je
jmp
dec
lret
ljmp
lods
cmp
xchg
cmpsl
push
xor
enter
pop
cli
cltd
movsb
jno
outsl
or
push
xchg
fistl
cltd
sti
pop
repnz
adc
mov
cmp
test
add
int
pusha
mov
xor
sub
rcll
mov
outsl
sub
sub
xchg
cmp
in
mov
and
pushf
push
ficoml
sbb
inc
push
popf
pusha
fs
jge
mov
insl
lods
mov
hlt
xchg
cmc
xchg
jb
mov
xor
gs
and
jo
push
popf
inc
pop
mov
dec
ret
ficoml
popf
rclb
stc
jo
in
divl
adc
jno
repnz
push
fisttpll
add
sbb
inc
and
dec
call
add
dec
outsl
arpl
inc
jb
add
inc
and
pop
sbb
aaa
mov
movw
pushl
pushl
lea
jmp
add
jae
adc
inc
movsb
dec
pop
sarb
inc
popf
and
cmpsl
mov
cs
dec
scas
mov
cwtl
inc
cld
scas
dec
in
xchg
and
std
imul
jno
xor
mov
int
cmp
sti
and
sbb
jp
inc
cmpsb
cmp
negb
cmp
mov
aaa
cmpb
aad
das
in
add
jae
outsb
pop
inc
stos
cltd
cli
mov
bnd
faddl
pop
fdivl
push
jne
sbb
cmp
cld
repnz
cltd
xchg
mov
pop
jno
in
inc
or
enter
loope
pop
enter
loop
push
inc
icebp
xchg
sbb
xlat
fsubrl
sbb
outsb
dec
les
call
xlat
or
adc
sub
outsl
or
popa
ljmp
mov
fidivrs
dec
cld
repnz
inc
aas
pop
add
pushf
call
push
call
call
lea
not
movw
lea
pushf
mov
mov
pusha
lea
call
pusha
pushf
call
addb
dec
das
inc
mov
andb
mov
mov
dec
adc
loope
and
cltd
out
lahf
jl
into
pushf
jmp
adcl
aaa
xchg
mov
nop
fdivs
dec
mov
xchg
dec
addr16
mov
xor
insl
mov
ds
jp
movsb
inc
loop
add
mov
sbb
sti
pop
fidivrl
repnz
out
movsb
cwtl
popf
rdtsc
nop
pushf
movl
call
jmp
push
cmpsl
fwait
xchg
iret
ret
xchg
fwait
xchg
fcmovne
fwait
xchg
xchg
ret
stos
mov
xchg
xchg
fwait
xchg
fwait
xchg
xchg
fwait
xchg
stos
xchg
xchg
mov
iret
mov
jmp
lcall
push
xlat
mov
xchg
lea
mov
lea
mov
pushf
mov
bswap
not
pusha
mov
mov
pusha
movw
mov
pushl
ret
movb
movl
jmp
jmp
movl
pusha
movl
pushf
lea
jmp
pushf
lea
jne
push
pusha
mov
lea
call
pusha
pushf
lea
jmp
push
or
movw
lea
je
cmp
stc
cmp
pusha
call
jmp
shll
mov
int3
out
xchg
idivb
div
jecxz
dec
aad
inc
pop
imul
fsts
sbb
jmp
push
aam
xlat
xor
into
das
nop
scas
fimull
repz
jl
xor
fisubl
adc
sbb
shll
pushl
mov
out
push
jb
sbb
inc
ficoml
sbb
mov
popf
push
push
or
or
mov
clc
fimuls
mov
pop
jb
mov
sbb
repz
sti
ljmp
pop
jmp
xchg
fildl
popl
rcrl
mov
mov
mov
pushf
pusha
bswap
mov
pushf
pushf
pushf
push
pushl
ret
add
dec
outsl
popa
fs
imul
add
fs
je
push
push
movl
push
pushf
mov
lea
jmp
lea
je
shl
ror
add
add
adc
pusha
rcr
mov
bt
cmc
pusha
add
mov
call
sub
and
sub
lea
jle
insl
fcoml
push
loop
jmp
das
pop
pop
jne
mov
pop
outsl
lock
lock
sahf
push
xchg
mov
xchg
mov
jo
test
mov
fildl
mov
adc
pop
adc
out
mov
mov
push
pushf
pop
inc
xchg
test
mov
jns
pusha
leave
out
adc
and
cld
adc
dec
cmp
scas
mov
or
lret
in
jne
and
jp
fsts
or
in
cwtl
mov
xor
push
fidivrl
jnp
jle
adc
iret
pop
mov
js
dec
test
mov
jns
sbb
sub
js
in
jle
popl
pushf
popa
push
out
fwait
stos
imul
sti
test
xor
ds
push
xchg
dec
jp
or
int
test
movsl
xchg
pushl
push
push
js
loope
test
repnz
mov
stc
lcall
xor
mov
pusha
movb
pushf
pushl
ret
mov
call
lea
jne
neg
neg
xor
shr
sub
and
mov
and
add
shl
xor
sar
adc
mov
cmp
test
jmp
push
pushf
lea
call
jmp
notb
jnp
jno
fnstenv
lcall
lock
jecxz
jns
stc
dec
push
sbb
les
outsb
lcall
push
push
sbb
lds
shlb
push
pop
xor
test
cwtl
lock
mov
repnz
shrl
or
ret
jnp
or
mov
jno
push
jo
adc
sti
jle
out
orb
pop
inc
jnp
xchg
outsb
outsb
push
xlat
lea
adc
testl
inc
xchg
lods
negb
mov
and
shr
jg
push
fidivrl
jg
ss
sub
push
push
enter
mov
fsub
pop
xor
push
sub
cmp
add
pusha
ret
mov
imul
push
inc
shrl
xor
mov
jmp
inc
cmpsl
popf
fdivrs
mov
loop
mov
mov
or
mov
imul
sbb
sbb
and
inc
cmpsl
test
rclb
cs
fwait
or
pop
stc
mov
ljmp
or
push
shrb
add
mov
mov
fimuls
ret
dec
cltd
pop
inc
es
js
fimull
add
xlat
jae
add
pushf
pushf
pusha
pushf
movl
pushf
pushl
mov
pushf
push
push
pushl
ret
pushf
pushf
dec
cmc
stc
clc
jmp
jmp
lea
push
movb
movw
movl
movl
push
mov
pushl
popl
pushf
pushl
ret
push
push
not
pushf
dec
call
cmpb
call
push
pushf
pushl
lea
call
pusha
jmp
pushf
pushf
movl
mov
movb
pusha
movw
lea
jmp
lea
je
stc
sub
jmp
lea
je
rcr
add
pusha
sar
sub
shrd
adc
shr
rol
mov
setne
sbb
mov
rcr
add
btr
shl
add
sub
shl
jmp
mov
mov
push
jns
cli
or
loope
jmp
dec
dec
jg
out
loopne
add
mov
sbb
xchg
out
gs
mov
jne
jb
push
js
stos
aaa
push
sub
mov
jnp
lahf
add
and
push
lcall
lock
test
loop
sti
lods
and
js
or
sub
pop
scas
and
loope
push
adc
xchg
push
mov
jge
inc
jb
pop
mov
add
mov
loope
xchg
fisttpll
adc
jo
rorl
repnz
fsubs
and
call
je
pusha
call
lea
jbe
mov
bsf
sub
sub
or
lea
mov
bt
mov
btr
pushf
add
bsf
rol
xadd
movsbl
shr
rol
mov
stc
test
add
lea
bswap
mov
not
mov
lea
pushf
call
or
xchg
sbb
dec
and
aas
inc
dec
sub
mov
xchg
imul
aad
adc
dec
and
push
data16
test
jge
sub
sbb
inc
outsb
lea
test
cli
push
in
stc
mov
add
addr16
addr16
pop
mov
std
push
pop
cmp
rol
cmp
or
push
divl
fnclex
adcb
mov
xchg
out
orl
push
mov
dec
scas
pop
mov
and
or
scas
mov
cltd
sti
sub
enter
stc
shll
cld
repnz
xchg
jl
add
sub
mov
out
mov
stos
ret
mov
ret
iret
xchg
jmp
bt
sub
clc
stc
clc
cmp
call
lea
jae
pushf
lea
jmp
fisttpl
jnp
dec
xchg
or
icebp
mov
lds
sub
lds
mov
sahf
pushf
pop
mov
inc
and
mov
mov
fs
sbb
ja
adc
push
push
int
dec
fwait
mov
xor
and
or
lret
cmp
mov
ret
das
cmp
pop
mov
mov
jae
pushl
cltd
fistps
xchg
cs
scas
sbb
subl
jnp
sub
mov
xchg
add
movsb
and
ret
ds
jo
push
and
stos
stos
inc
cmp
mov
push
xor
push
pusha
imul
cwtl
and
out
js
pop
ret
or
sbb
inc
leave
lea
stos
dec
test
mov
xlat
fmuls
loopw
or
push
in
adc
sbb
jnp
inc
sub
mov
mov
mov
loope
xchg
jno
jae
add
neg
movsl
inc
mov
mov
sbb
dec
clc
pop
divl
dec
shll
lods
std
imull
out
call
or
mov
sub
mov
ja
mov
inc
shll
xor
mov
add
mov
inc
movl
sub
dec
hlt
jle
pop
xorl
push
test
roll
and
mov
shl
push
jnp
push
sub
out
icebp
mov
sbb
daa
sbb
adc
leave
mov
sub
in
cli
ret
test
addl
and
cmp
inc
out
repz
testl
clc
mov
cmpsl
or
pop
lret
pop
xor
cmp
sbb
inc
lcall
fiaddl
adc
sbbl
inc
in
jbe
cmp
and
mov
jne
add
in
push
pop
sub
ja
lds
mul
repz
mov
sarl
out
outsb
mov
pop
push
lock
dec
mov
cld
mov
lret
dec
cmp
pop
dec
or
sbb
jno
std
push
xchg
sbb
test
mov
and
into
xor
xor
mov
bsf
pop
sub
or
dec
inc
add
fs
and
shll
mov
mov
jo
xlat
add
push
fcomps
je
inc
cmpsb
and
pop
enter
aaa
cmc
data16
int3
idivb
adc
std
sub
in
pop
nop
cmp
jle
arpl
xchg
and
mov
in
pop
cld
mov
shlb
fstl
lahf
leave
roll
sub
jecxz
sub
jne
insl
inc
sahf
fisttpll
xchg
xchg
mov
std
iret
xor
push
and
sbb
in
ds
int3
dec
inc
push
mov
dec
fisubrs
test
lds
mov
outsb
fcomip
mov
mov
outsb
icebp
cwtl
ficoms
jecxz
fsts
fsubs
aas
leave
cmp
iret
jo
adc
dec
inc
jo
mov
popf
test
and
push
or
into
xor
push
test
pop
lret
mov
lods
sbb
dec
adc
ret
dec
jge
ret
cltd
adc
cltd
mov
lock
lcall
add
pop
cmp
fs
sub
enter
adc
rorl
cmp
cmp
mov
jbe
cmp
iret
or
js
pop
nop
mov
pop
in
add
xor
rorb
jbe
xor
jno
mov
mov
repnz
repnz
jno
mov
cli
xchg
loop
ds
movsb
test
fisubl
fwait
sbb
repnz
jae
or
push
out
pusha
jno
pop
mov
dec
dec
mov
and
inc
inc
loope
mov
sub
push
dec
jecxz
fsubl
adc
test
test
xchg
popf
dec
test
iret
inc
sahf
mov
shrb
sub
insb
fcmovb
enter
repnz
stos
pop
cld
repnz
lods
push
mov
btc
push
push
cmc
neg
lea
lea
dec
mov
sbb
push
sbb
push
jmp
pusha
movl
push
pushf
lea
jmp
call
cmp
pushf
pushf
lea
ja
test
xor
clc
rcr
add
sar
mov
push
pushl
pushf
push
cmp
movb
lea
jb
pusha
jmp
sub
mov
push
pop
rorl
roll
inc
out
das
or
push
adc
sahf
dec
in
lock
inc
pop
push
mov
lcall
mov
sbb
stos
insl
cmp
jne
mov
dec
fcompl
loope
popa
inc
insb
jle
sub
scas
mov
fcomps
outsl
and
jle
jae
xor
add
or
gs
jg
or
add
mov
fimull
pushf
xor
inc
jo
add
jb
rcr
mov
fs
pushl
leave
and
stos
in
adc
push
mov
mov
ja
jb
lcall
stos
sub
out
ljmp
pop
or
or
mov
movlps
lea
ret
pop
aas
jg
dec
push
xlat
push
movsl
mov
pop
mov
aam
out
mov
out
in
es
mov
xchg
test
test
outsl
in
out
xchg
mov
ljmp
or
add
inc
mov
sahf
push
pop
lea
cli
or
mov
negl
adc
jmp
push
mov
mov
dec
push
dec
mov
pusha
xchg
dec
push
sub
loope
inc
push
add
cld
repnz
imul
sub
inc
and
mov
fs
jmp
stc
test
movw
pusha
lea
je
clc
pusha
stc
call
dec
cmc
clc
movb
cmc
cmp
lea
lea
movzbw
jmp
jmp
mov
call
adc
lea
pusha
pushl
ret
and
xor
rcr
adc
mov
call
cmp
pushf
lea
ja
cmp
jmp
add
add
push
add
push
add
adc
rcr
add
add
add
bts
mov
jmp
movl
push
pushl
pusha
lea
jmp
adc
pusha
call
call
and
sub
inc
es
pop
cltd
lea
cltd
or
cli
ret
movsl
cmp
xor
mov
jo
idivl
addr16
ljmp
push
mov
nop
jle
insb
fcoml
iret
xorb
pop
aam
and
call
lcall
inc
inc
pop
clc
cmp
jmp
add
scas
jmp
add
add
add
add
add
add
add
fists
add
add
add
xchg
fists
add
or
negb
jl
dec
push
lret
cltd
mov
cmp
jle
stos
mov
clc
push
test
lret
je
mov
daa
es
lods
gs
je
mov
sti
notl
sbb
idivl
sub
mov
shr
dec
je
pop
lret
in
pusha
push
popa
cltd
cmova
sub
lods
decl
fucomi
push
loop
sub
xor
orb
imul
repnz
pop
sbb
xchg
push
rolb
and
mov
and
loope
fwait
imul
xor
inc
jge
addb
mov
and
aaa
daa
in
ds
fisubs
add
jbe
add
orl
pop
sbb
and
mov
mov
aas
mov
sub
testb
inc
jge
out
add
and
mov
adc
aaa
aam
cmp
xor
das
ss
imul
pop
fdivr
mov
mov
rcr
jne
mov
mov
cmc
xchg
inc
out
sbb
push
mov
sbb
js
xchg
mov
pop
rolb
mov
pop
jno
sub
xchg
xchg
push
pop
lock
mov
cwtl
sbb
sbb
and
outsb
cmp
inc
inc
jb
es
fiaddl
sbbb
daa
rcl
ljmp
jns
pop
lock
and
js
adc
and
clc
movsl
outsb
adc
mov
neg
call
daa
movl
lret
ss
pushf
sbb
imul
cwtl
out
adc
dec
aad
add
push
inc
inc
dec
je
mov
fisttpl
and
cmpsl
xchg
push
hlt
ljmp
adc
iret
sti
je
insl
dec
test
mov
jae
jbe
inc
filds
inc
xor
pop
subl
int3
dec
lock
leave
loope
or
mov
ss
out
mov
mov
lods
mov
js
in
or
aam
and
cmpl
xor
xchg
ds
out
xchg
out
ljmp
mov
js,pn
jae
xchg
lret
and
mov
or
jge
xor
out
hlt
sbb
dec
flds
or
outsl
sub
adc
in
push
test
in
inc
adc
callw
or
hlt
mov
pop
ret
ss
outsb
insl
adc
and
mov
outsl
push
adc
sbb
or
cmc
add
push
pushf
test
lcall
inc
addr16
rolb
arpl
insl
push
jnp
cmc
jno
outsl
mov
or
insl
pop
in
mov
test
jmp
shll
xor
or
or
sbb
dec
cld
cmp
outsl
setg
adc
mov
cmp
adc
adc
add
xor
adc
lock
cmpsb
mov
fisttpl
popa
jmp
fisubs
xchg
dec
lds
jmp
push
in
rclb
sbb
test
out
and
in
adc
ret
inc
dec
imul
or
jo
push
xchg
pop
inc
lea
ljmp
or
or
or
add
cmp
or
adc
xchg
push
inc
adc
mov
daa
sbb
movsb
ljmp
mov
sub
inc
xor
xor
adc
popf
pop
jmp
cmpsb
addr16
push
and
ss
and
dec
or
ret
call
stos
out
jno
pusha
push
aaa
and
lcall
sub
push
pop
sti
mov
call
and
loop
in
rorb
and
inc
mov
xchg
pop
leave
mov
sub
mov
test
mov
aam
sbb
loop
rorb
popf
mov
clc
adc
mov
sub
inc
adc
inc
test
shl
pusha
clc
clc
xchg
and
lret
clc
adc
dec
add
fwait
stos
nop
sub
mov
int3
mov
iret
push
inc
and
lahf
push
cltd
sub
les
pushf
xchg
aaa
push
jno
adc
mov
pushf
cmpsl
cwtl
adc
sub
pop
rorl
adc
imul
inc
movsb
int
fst
leave
mov
xor
jmp
push
sbb
test
test
in
dec
ljmp
adc
lcall
jecxz
push
scas
loop
cmp
and
into
or
nop
stc
mov
pop
test
out
xchg
stos
xchg
sub
pop
dec
xor
cs
adc
inc
sar
push
sti
mov
pop
inc
xchg
jmp
fsubl
scas
test
jns
add
test
in
dec
out
jle
mov
fsubp
push
out
pop
loope
inc
pop
stos
adc
push
push
sbb
jl
js
mov
addb
scas
mov
mov
xchg
add
mov
push
sbb
sub
scas
cs
pop
dec
jecxz
add
xor
mov
ret
mov
adcb
iret
jno
or
in
stos
dec
xchg
xchg
lret
insl
adcl
xchg
cli
iret
decb
pushf
mov
sub
jnp
outsl
mov
lods
in
xchg
mov
sbb
and
test
add
iret
dec
pop
push
inc
bound
sti
int
adc
push
xchg
in
xor
test
inc
in
jnp
mov
ja
mov
inc
bound
jmp
call
hlt
inc
or
and
pop
inc
pop
cmc
jle
or
cmp
adc
fwait
dec
sbb
aaa
sub
jg
aam
sti
dec
js
mov
lcall
push
mov
dec
andb
inc
addr16
jecxz
push
cmp
fdivrl
pop
scas
fmuls
mov
repz
mov
imul
pop
push
test
pop
adc
enter
dec
rclb
mov
cmc
fdivrs
rolb
lahf
subb
jae
je
xor
ds
xor
inc
inc
sub
in
adc
push
jmp
jno
sbb
shlb
mov
test
cmp
or
xchg
lret
sbb
mov
das
push
in
iret
mov
and
scas
pop
jbe
sub
pop
push
jp
outsb
mov
pop
add
das
or
or
xchg
xchg
dec
xchg
or
stos
out
xchg
dec
addr16
test
add
pop
popw
andb
stos
or
lock
or
adc
pop
movsl
sahf
mov
inc
test
adc
dec
rorb
xchg
mov
add
popa
scas
xchg
add
mov
mov
dec
sub
sub
sub
imull
push
dec
cmp
and
xlat
pusha
xchg
jge
pop
imul
and
mov
mov
sub
fs
ljmp
jno
mov
fists
les
jle
movsl
xchg
addr16
test
je
add
lea
push
and
lds
or
mov
gs
add
inc
and
popa
sub
or
rcr
test
lds
and
out
jno
xchg
pop
insb
inc
pop
inc
push
mov
cmp
pop
fisttpll
sub
or
and
pushf
in
or
stos
idiv
outsl
hlt
sbb
icebp
popf
imul
pushf
std
adc
sub
xor
sub
add
arpl
aaa
jbe
test
insb
pusha
cmc
outsl
push
mov
jne
cltd
mov
inc
fsubrs
ret
jns
mov
mov
popa
icebp
pop
mov
in
cltd
imul
lock
enter
sub
sub
lea
xlat
and
dec
repz
frstor
mov
jp
movsb
cmp
xor
sbb
and
mov
mov
or
or
jg
mov
lock
xchg
mov
sbb
mov
push
jp,pn
int
jbe
ja
sbb
mov
xchg
jl
out
sub
mov
push
cs
dec
sbb
mov
jbe
repz
mov
xchg
out
stos
inc
sub
mov
loop
inc
sub
arpl
lock
shll
iret
push
mov
jg
jbe
fmull
jmp
popa
fnsave
pop
mov
dec
dec
pop
call
mov
push
pop
cli
sbbb
repz
xchg
stos
jl
jno
fcmovne
daa
or
shlb
lret
aas
xor
jne
arpl
ja
mov
add
aaa
insl
mov
test
xor
pop
jbe
imul
inc
mov
addr16
insb
shll
stos
sbb
dec
pop
push
xchg
dec
in
xlat
call
cmp
adc
paddsw
mov
rorb
mov
clc
jb
arpl
mov
arpl
jg
repz
pop
jge
jmp
mov
ljmp
lahf
loope
shl
mov
test
std
fs
jle
addb
aad
lea
jae
mov
mov
lods
and
out
aas
jmp
imul
lods
cmp
ret
sbbl
test
fsts
sbb
and
adc
subl
insb
pop
mov
iret
cmpsl
mov
test
jns
jb
aas
in
mov
ret
rol
addr16
test
push
inc
adc
xchg
mov
or
daa
andl
pop
xor
ror
sbb
mov
out
sub
mov
inc
repnz
and
or
xchg
fidivrs
jle
lret
dec
es
loop
adc
aam
mov
fmul
pop
xlat
cmp
or
scas
ret
shlb
mov
mov
out
idivb
scas
pop
adc
ds
ficomps
and
mov
xchg
pop
mov
sbb
loopne
stc
and
push
push
out
ljmp
and
push
imul
cmp
insb
xchg
jge
jp
loope
and
inc
cmp
add
in
cmpsl
out
pop
enter
insl
inc
idivl
push
jo
ja
test
adc
jg
sub
xchg
lods
cmc
xor
ficompl
xchg
sub
sbbb
inc
dec
xchg
push
push
sbb
in
cmp
jge
insl
call
jg
xchg
test
cli
div
or
test
aaa
cs
jp
cmpb
add
ds
xchg
xor
mov
xchg
mov
pusha
rolb
jecxz
lods
stc
mov
pop
scas
and
insb
shr
mov
mov
inc
faddl
cld
lret
xchg
cli
data16
inc
mov
es
mov
pop
insb
and
push
sbb
add
add
push
dec
ss
rorl
pop
sbb
mov
aaa
vshufps
pop
xchg
add
sbb
xchg
mov
out
repnz
mov
xor
dec
les
dec
rorb
xchg
pop
out
inc
mov
inc
pop
shr
mov
pop
fstl
jp
lock
adc
cmpsb
sbb
in
push
movsl
sbb
xchg
fs
cmp
aad
js
stos
xor
fcmovne
sub
ja
fadd
movsl
test
xchg
sub
cmp
movzbl
xchg
pushf
insl
jae
push
xorl
or
repnz
pushf
lea
in
mov
xchg
subl
sbb
das
and
xchg
xchg
cmpsl
add
in
rorl
jb
cmp
popf
mov
in
xor
es
jle
pop
push
and
push
test
dec
sahf
and
mov
outsb
push
ret
cld
repnz
mov
lahf
or
sub
out
jmp
sub
sub
xchg
fimull
lret
repz
pop
pop
popa
xor
push
cltd
xchg
xchg
inc
jb
add
push
cmp
push
inc
testl
aam
fcomp
mov
pop
sbb
neg
imul
lods
mov
and
int3
inc
lods
xlat
mov
push
push
inc
xor
xchg
leave
cld
sub
into
sub
pop
jb
xchg
sahf
jns
lret
out
pop
adc
and
jne
dec
iret
sbb
fs
repnz
shlb
cmp
mov
pushf
shl
movb
lea
je
push
call
movl
movw
movl
pusha
pusha
push
mov
lea
jmp
popa
lret
fcomps
sbb
xchg
jne
clc
lock
pushf
mov
or
adc
xor
dec
push
shrb
lret
lret
jb
iret
pop
mov
lret
cwtl
push
push
pop
jmp
ret
ljmp
pop
out
popa
popa
mov
add
push
adc
popf
dec
adc
dec
inc
jo
jnp
rcl
aas
nop
jnp
jno
inc
test
fdivr
cmc
xchg
jae
test
push
pushl
xor
jmp
movl
pusha
movb
pushf
pushf
lea
jmp
pushf
lea
call
push
movw
call
aam
ss
out
iret
pop
sbb
jl
addr16
in
jecxz
push
pop
in
scas
inc
pop
dec
not
scas
jbe
xchg
dec
loopne
xchg
xchg
in
std
cmpsl
mov
dec
xchg
test
repnz
ret
aas
mov
adc
clc
pop
xchg
inc
cmp
mov
jmp
lods
repnz
std
cwtl
ds
mov
xchg
cmp
and
jne
or
shrl
mov
cwtl
jae
cmpsb
stc
xchg
cmp
test
std
and
filds
aas
dec
jge
sbb
imul
push
fcmovb
cs
push
push
push
notl
ret
cmp
jecxz
cli
sub
sub
and
xlat
sub
loope
adc
lock
sahf
sbb
mov
js
fistpl
jecxz
rclb
pop
add
out
pop
mov
fwait
insb
adc
lcall
adc
mov
fistpll
jns
cmp
sub
nop
hlt
scas
dec
mov
loope
sub
push
mov
xchg
jmp
outsb
in
cmp
jp
adc
es
out
fdivl
pusha
jmp
xchg
pop
out
inc
ficoms
or
frstor
imul
push
mov
icebp
aam
and
stc
stos
push
sbbl
fdivl
test
call
mov
fimull
or
out
dec
sarl
pusha
add
call
cmc
ljmp
xor
shlb
xchg
cltd
pop
or
push
cs
and
das
xchg
aaa
mov
cmpsl
xor
mov
mov
xchg
jmp
lds
das
adc
jecxz
aam
das
cs
cld
imul
orb
xor
enter
clc
es
add
xchg
flds
sbb
dec
xor
stos
icebp
mov
lods
and
loope
cmp
dec
cmp
sbb
mov
sbb
push
adc
sbbl
dec
test
add
repnz
stos
orb
call
out
sub
jp
repnz
fiaddl
icebp
pushf
jmp
sbb
inc
repnz
adc
or
pop
mov
mov
pop
pop
inc
xlat
xor
and
cvtps2pd
out
sbb
pop
mov
ja
inc
das
add
jbe
rorb
in
stos
cmc
pop
jno
jae
mov
jmp
jg
fimuls
hlt
imul
xor
cmpsb
leave
sbb
xlat
mov
xor
movsl
dec
cmp
cmpsb
jno
shrb
mov
inc
jp
jge
add
ret
mov
mov
lods
xlat
adc
stos
cmp
sub
jno
or
mov
sub
sbb
sarl
jg
add
push
les
scas
add
cmp
adc
lock
push
or
mov
aad
cmp
lcall
out
jp
movsb
mov
mov
stos
push
xchg
cld
repnz
mov
add
jmp
sbb
mov
sub
sbb
mov
mov
mov
xor
lds
out
ss
mov
inc
adc
jmp
sub
scas
mov
inc
mov
icebp
gs
push
lret
add
popa
ss
shl
aaa
push
ficoml
and
xchg
xchg
ds
ds
int3
test
cmc
outsl
push
scas
sbb
les
mov
data16
push
inc
xchg
sub
flds
fcoms
xor
xor
lea
jne
call
cmpsb
xchg
push
stos
adc
jno
rcrb
into
mov
inc
movsl
sub
push
lahf
jo
sbb
stos
testl
imul
sbb
stos
std
cmp
add
inc
dec
movsl
mov
jnp
dec
push
add
scas
xor
subl
jp
cmp
cmpsb
mov
sub
xchg
or
add
rorb
add
add
mov
fs
add
pushl
mov
lea
jmp
pushf
lea
je
push
adc
pushf
pusha
pushf
lea
jmp
add
cmp
sub
cmp
adc
outsl
int
leave
mov
dec
mov
xor
push
or
inc
loopne
pop
pop
inc
pop
and
lahf
mov
mov
xor
ds
out
int3
sub
repz
in
rcr
dec
outsl
dec
adc
pop
dec
dec
sbb
sti
jge
cld
repnz
int3
orl
xchg
inc
int3
ffree
aad
mov
sbb
sbb
sbb
aam
leave
adc
out
imulb
or
imul
sub
add
leave
popf
push
pop
insb
adc
cmp
mov
push
xchg
mov
lods
inc
inc
or
lods
inc
cli
in
mov
xor
push
hlt
jb
mov
xor
xchg
sbb
mov
xlat
movlps
jns
push
jp
repnz
jb
orl
aas
aad
jmp
pusha
pushl
popl
push
pushf
pushl
ret
add
imul
addb
add
sbb
push
add
add
add
add
add
rclb
add
inc
adc
add
call
add
add
add
pushf
push
call
mov
inc
sbb
mov
shll
dec
inc
dec
leave
ret
mov
rorb
jmp
sbb
cmpsb
lahf
les
rcl
js
add
out
jle
inc
mov
adc
ficoml
dec
mov
repnz
dec
adc
or
mov
ljmp
ficompl
mov
repz
cmp
scas
xor
mov
mov
push
dec
ret
sub
push
and
push
gs
adc
jae
xchg
ljmp
pop
cmp
loopne
push
inc
out
sbb
std
and
inc
xor
cltd
inc
daa
pop
inc
xchg
sbb
cmp
mov
xchg
stc
je
dec
and
pop
sub
stos
sbb
jmp
adc
pop
inc
cmc
fistps
sub
lds
cmp
fcmovu
stos
push
ja
insl
lock
shlb
outsb
lcall
mov
aad
test
lea
int
daa
pushf
xchg
lahf
sbb
push
lds
aam
lods
icebp
push
mov
aam
mov
add
push
push
mov
jecxz
push
jp
inc
mov
add
fcomps
addb
test
and
or
cld
repnz
mov
pop
mov
fwait
jns
loopew
pop
mov
xor
cmp
enter
movsb
and
push
mov
dec
ljmp
lods
mov
outsl
movb
xor
xchg
incl
hlt
pop
rcrl
icebp
pop
pop
aaa
test
ret
pop
or
xchg
add
loop
ja
or
mov
lcall
stos
sti
adc
outsb
popf
leave
insl
mov
mov
mov
bnd
cmp
and
cmp
hlt
push
cmp
xchg
mov
cld
repnz
inc
pop
push
push
cmp
and
pushf
pushf
clc
pushf
add
pushf
mov
mov
lea
jmp
call
jae
push
mov
cs
pop
inc
les
mov
pop
sub
test
inc
enter
push
icebp
jbe
les
push
pop
dec
les
adc
call
inc
adc
addr16
fstpt
mov
add
fdiv
push
fcmovb
imul
fisubl
xchg
mov
hlt
pop
sbb
fisttpl
roll
in
rorb
insl
lea
mov
sbb
push
mov
movsl
nop
out
mov
sbb
outsb
push
mov
fisubl
push
adc
lret
lods
mov
pop
push
lods
cld
repnz
roll
xchg
xchg
push
pop
mov
call
dec
fildl
jno
loope
mov
sbb
mov
or
into
imul
inc
mov
mov
adc
push
pop
jb
mov
dec
xlat
or
daa
mov
hlt
mov
iret
xor
mov
sub
out
subl
stos
inc
push
insb
test
push
gs
push
inc
rcll
adc
ud0
enter
push
icebp
lret
push
xchg
repnz
movl
jmp
xor
scas
loop
xchg
movsl
adc
test
addl
add
dec
adc
and
push
std
lods
popaw
mov
add
xchg
jge
clc
lret
lock
popf
sbb
ja
mov
ljmp
mov
ret
mov
adc
js
adc
ds
repnz
in
xchg
data16
mov
divl
push
daa
mov
repnz
adc
mov
jns
lahf
jle
xchg
movsb
sub
jnp
lods
inc
das
mov
mov
leave
push
jb
add
jne
mov
bound
ret
dec
pop
and
mov
xchg
xchg
add
dec
cmpsl
popa
mov
out
xlat
adc
jmp
enter
or
xor
call
cmp
dec
repnz
rol
rorl
jle
mov
inc
scas
xor
push
test
gs
push
mov
cwtl
add
fcmovnb
sub
jae
push
xor
scas
adc
or
dec
fcmovu
dec
mov
repnz
lds
insb
lea
lahf
aas
dec
push
push
dec
test
pop
call
mov
jne
inc
push
aam
and
jae
cmp
aas
adc
push
jbe
stos
arpl
fsubp
add
inc
mov
jb
cmp
lahf
jo
outsl
jmp
hlt
je
jae
in
aaa
pop
pop
mov
push
cld
repnz
add
testl
inc
sub
or
cld
jb
xchg
fidivl
jo
aas
lret
or
jnp
fs
push
lahf
ret
xchg
je
idiv
jmp
inc
repnz
adc
mov
stc
dec
jbe
repnz
xor
push
jnp
imul
sar
mov
push
mov
pushl
popl
pushf
mov
pushl
ret
cmp
sar
mov
push
call
cmp
hlt
in
jns
hlt
and
les
lods
es
mov
dec
movb
dec
popf
xlat
inc
pop
call
imul
mov
mov
dec
push
repnz
mov
cmc
mov
stc
ja
insb
or
fdivrs
fidivrs
aas
dec
lea
lds
ja
jle
lret
sbb
fst
mov
lock
imul
loopne
jbe
pop
leave
sub
inc
sbb
push
sub
add
cmp
fistpll
imul
aaa
outsb
or
pusha
cmp
dec
jb
push
shll
popf
mov
in
xchg
jl
adc
int
dec
jmp
pop
std
sub
fdivs
sub
repnz
sbb
stc
pop
call
outsb
mov
sbb
adc
pop
movsl
adc
add
add
mov
inc
hlt
push
daa
rorb
test
hlt
lods
xchg
or
in
inc
xchg
xchg
out
adc
js
ficoml
movsl
pop
nop
les
fidivrl
cltd
and
gs
repnz
or
gs
int3
pop
int3
pop
out
gs
or
xor
add
stos
xchg
loopne
cmp
enter
dec
inc
or
mov
mov
or
sti
mov
insb
push
dec
bound
push
aaa
adcl
dec
dec
repz
push
mov
adc
xlat
shl
sub
lea
or
xchg
adc
cmc
add
movsl
and
pop
lcall
cmp
xor
ret
sub
adc
add
mov
push
lret
test
dec
lods
sbb
mov
icebp
jbe
jb
mov
lods
idivb
das
stos
xor
testl
rcr
cmpsl
movsl
cli
cld
repnz
repnz
test
hlt
pushf
pusha
lea
jmp
mov
or
lods
push
jno
push
inc
mov
jo
fcom
js
adc
arpl
cmp
cmpsl
jmp
jle
in
mov
inc
in
inc
mov
sub
and
ss
or
inc
sti
int3
insl
pop
mov
int3
ret
dec
or
in
das
orb
pop
mov
sub
fmull
leave
xor
lea
and
repz
adc
mov
fwait
mov
xchg
std
mov
aas
scas
inc
movsb
dec
lret
pop
pop
dec
inc
xor
sti
je
shrl
loopne
int
sbb
rcrl
adcb
push
test
inc
shrl
ret
mov
jne
dec
int
sub
xor
adc
sbb
ja
and
push
imul
es
push
ja
xlat
push
and
adc
and
pop
test
mov
repz
xlat
lret
sub
fwait
mov
dec
aad
xor
repnz
shlb
fucomip
ss
or
push
movb
push
inc
push
movb
pushf
jmp
mov
mov
pushf
pushf
push
lea
jmp
into
movsl
cmp
loop
mov
ds
adc
sbb
mov
mov
ret
into
sbb
hlt
jge
and
call
mov
inc
and
ja
loop
mov
cld
repnz
popa
negb
add
push
idiv
call
pushf
pushf
movw
movl
pushl
movb
pushf
lea
jmp
mov
pushf
mov
pusha
pusha
lea
jmp
cltd
jle
inc
mov
test
mov
mov
cs
mov
jnp
cwtl
push
mov
in
jns
pop
ret
scas
insb
or
leave
push
xor
push
sbb
neg
ror
js
jl
aaa
sbb
xchg
shll
int
push
testl
fwait
inc
pop
je
in
aaa
sbb
bound
fs
pop
xchg
in
xlat
dec
test
cmpsb
pop
les
pop
leave
cld
popa
add
inc
ds
stc
sbb
and
jl
icebp
xchg
pusha
rcll
xor
and
mov
lcall
repnz
lret
rcrb
les
and
pop
insb
xlat
cld
repnz
iret
lret
in
bswap
pushf
lea
jmp
push
pusha
push
adc
pushl
pushf
jmp
pushf
jmp
movl
push
call
add
inc
js
je
jb
arpl
jae
add
jb
adc
pop
pop
mov
and
sbb
cmp
ss
mov
sbb
ficompl
aad
xchg
adc
adc
sbb
loope
sub
in
pop
and
cmp
inc
pop
cmpsb
mov
inc
sub
inc
mov
xchg
jb
mov
mov
xor
push
jns
pop
rcrb
adc
and
adc
sarb
xor
jb
lret
sbb
or
filds
ret
into
push
lea
das
lods
movsl
jnp
dec
inc
ss
popf
in
popa
cld
repnz
out
ljmp
out
or
stos
or
sahf
mov
adc
mov
push
pushf
sub
mov
addr16
mov
and
scas
fdiv
mov
pop
lods
mov
jge
mov
lret
test
inc
insl
mov
daa
push
movsl
cld
sbb
lock
fcomi
pop
adc
and
lods
shll
sbb
hlt
cmp
icebp
inc
lea
cmp
pop
fdivrp
pop
or
gs
ret
pop
adc
pop
push
jae
mov
jl
mov
ss
mov
out
or
mov
jecxz
inc
dec
rolb
repnz
and
push
mov
cld
and
mov
repnz
xor
iret
fisubrl
mov
sub
adc
adc
jb
adc
xchg
lahf
imul
incb
pop
adc
popf
setp
push
pop
mov
insb
pop
mov
mov
mov
mov
jmp
and
mov
lcall
inc
mov
xor
sbb
icebp
push
inc
ljmp
enter
int
inc
pushf
sub
or
pop
pop
cmp
and
in
mov
je
add
lea
jae
pushf
pushf
lea
jg
push
lea
jne
jmp
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
push
push
jmp
mov
mov
xor
xchg
or
sbb
bound
dec
in
push
xlat
iret
sahf
inc
mov
bound
in
push
inc
movsl
jecxz
roll
imul
or
push
push
push
jge
imul
cs
mov
push
outsl
cmpsl
incl
div
les
pop
arpl
imul
in
inc
dec
int
outsb
std
add
or
dec
rclb
dec
sbb
or
loopne
pop
dec
mov
adc
dec
arpl
xchg
add
negb
iret
sub
add
sbb
xor
cs
stc
das
xor
repnz
popf
jns
es
inc
shrl
ja
adc
cmpsl
movsb
popl
mov
scas
push
adc
adc
sbb
daa
daa
in
push
imul
jns
inc
pop
add
mov
stc
scas
jo
jg
pop
fstps
add
pop
aam
les
aad
mov
adc
mov
dec
push
push
mov
xchg
mov
in
scas
inc
mov
mov
int3
jae
out
mov
movsl
or
lds
xchg
jb
adc
push
inc
jecxz
popa
pop
arpl
repnz
add
add
lahf
popf
and
movsb
daa
ret
movsl
push
outsb
push
sahf
push
and
and
jb
and
scas
jno
in
or
stos
and
stc
in
sbb
rcrb
cld
mov
adc
xor
in
clc
adc
std
cld
mov
loopne
cmp
jb
jno
jge
pusha
sbb
pop
out
pop
and
dec
jns
stos
in
pop
pop
cmp
cld
repnz
imul
and
jmp
push
cmp
aam
cltd
push
out
insb
ja
popa
fsubrp
insb
xlat
push
pop
jg
xchg
imul
jb
cld
pop
sbb
mov
sbb
imul
dec
mov
adc
dec
mov
popa
fisttpl
lods
adc
mov
aad
pop
shll
out
lods
cmpsb
or
orb
dec
cmp
jg
insl
loop
mov
repnz
in
call
fidivs
inc
aam
xchg
pop
js
repnz
push
je
adc
arpl
lahf
or
hlt
sbb
jbe
ljmp
insb
cmpsl
inc
scas
stos
mov
outsl
adc
repz
push
and
add
mov
inc
mov
pop
dec
sub
test
cmp
jbe
loop
jb
and
pusha
sbb
xchg
sbb
mov
stc
lahf
sub
fcom
mov
test
repnz
adc
pushf
mov
not
lods
mov
pushf
jmp
pusha
mov
pushl
movl
movl
movw
call
movl
pushf
push
pushf
lea
jmp
shlb
sub
pushf
or
icebp
divb
pop
repz
push
push
jecxz
out
mov
test
ret
inc
dec
jp
and
test
xchg
outsb
jecxz
add
insb
lock
dec
mov
sbb
aas
xor
sbb
cld
repnz
mov
pushf
movl
call
and
bound
iret
mov
push
std
jle
out
in
es
aaa
lods
xchg
add
cmp
xor
scas
scas
pop
xchg
insb
jl
scas
test
pop
stos
sub
sbb
lea
fs
cmp
or
pop
and
xchg
xor
pop
mov
xchg
add
gs
pop
xchg
call
insl
cli
jle
mov
dec
xor
and
mov
popa
mov
mov
sub
adc
out
ljmp
dec
inc
push
mov
repz
daa
add
loopne
mov
xchg
xchg
lock
dec
scas
in
hlt
jb
sub
dec
daa
rolb
aam
mov
xchg
cld
repnz
add
push
scas
lods
lcall
lds
sbb
mov
sbb
out
pop
fs
fcmovnbe
jb
daa
in
int
mov
inc
xchg
mov
cmpsl
adc
js
fmull
fmuls
add
out
xchg
lock
push
nop
adc
ljmp
ret
scas
enter
test
add
scas
ficomps
out
popa
cld
repnz
xchg
sbb
outsb
jle
pop
gs
fs
dec
dec
int3
int3
rep
loopne
xor
test
loopne
mov
jle
mov
test
push
dec
pop
xlat
fnsave
arpl
jns
lret
mov
push
jp
mov
repz
xchg
jno
lcall
fadd
popa
int
sbb
movsb
or
repnz
decl
int3
shrb
or
movhps
vmulps
pop
mov
cmp
sbb
or
pop
add
mov
stc
mov
cmpsl
pop
roll
inc
stos
inc
sbb
or
pop
lock
insb
or
pop
push
or
cmp
arpl
pop
pop
xor
mov
dec
imul
push
mov
or
sbb
or
pop
adcb
inc
arpl
stos
pop
lods
aam
cmp
jp
or
pop
add
imul
pop
jp
jbe
imulb
or
and
mov
filds
lcall
pusha
je
imul
push
inc
lea
jp
imul
push
inc
cmp
shrb
popa
stc
push
pop
mov
imul
pop
and
mov
insb
or
pop
rolb
arpl
call
sub
add
or
pop
in
push
jo
lahf
jns
or
and
pop
in
test
out
pop
stos
push
jae
movsl
imul
jnp
mov
jg
jg
insb
or
test
push
imull
sbb
or
lods
jno
push
arpl
mov
cmp
cmp
in
imul
push
outsb
push
mov
insb
or
pop
pop
mov
fcomps
pop
mov
test
and
jns
or
jle
lea
pop
mov
cmp
push
arpl
mov
test
or
xor
add
jp
or
pop
bound
mov
insb
or
pop
mov
imul
pop
pop
std
pop
das
xor
loope
pop
xchg
mov
and
insb
or
rcll
pop
loopne
stos
cmp
or
pop
push
gs
push
mov
or
int
cli
or
in
loope
insl
or
mov
dec
push
scas
add
popa
mov
or
dec
jns
xchg
daa
call
loop
ficompl
fwait
stos
sbb
jmp
jb
loope
pop
clc
jnp
jo
out
jl
cwtl
dec
into
pushf
out
mov
or
lods
ds
leave
mov
test
add
xchg
jns
es
ljmp
bnd
lret
mov
or
xor
loop
ds
rol
push
aad
mov
sbb
mov
fadd
insb
and
fcomp
push
lods
loopne
adc
femms
add
scas
movsl
adc
test
cs
repnz
out
bound
shlb
ljmp
das
je
aam
and
jbe
pop
dec
iret
or
lods
jle
out
bswap
stos
aam
mov
popf
rorl
insl
dec
rolb
mov
add
imul
mov
pop
mov
imul
cmp
cmp
xor
mov
mov
test
xchg
out
cld
mov
loopne
out
fsub
mov
icebp
push
inc
xchg
outsl
loop
je
sbbl
popa
shrl
dec
dec
sub
mov
add
frstor
repnz
or
js
jecxz
hlt
addr16
lcall
jb
scas
popa
fcoms
popa
into
addr16
lcall
pop
mov
add
pop
call
inc
cmpsb
cmp
jbe
mov
and
push
ret
sbb
mov
pop
cmp
jno
and
adc
push
out
pop
xor
push
lods
mov
add
prefetch
pop
cs
cld
repnz
inc
mov
add
leave
pop
dec
push
fnstenv
dec
mov
out
pop
lods
jl
adc
ds
fists
pop
push
aam
repz
shl
out
push
adc
jne
sub
inc
fstpl
rorb
std
ja
sub
ds
mov
xor
cmp
outsl
cmp
cld
dec
sub
ret
push
fsubs
test
dec
rol
inc
mov
jb
mov
mov
xchg
clc
xor
mov
loopne
lcall
mov
push
out
jae
push
aad
pop
outsl
and
inc
or
mov
push
push
pop
push
push
lret
repz
mov
outsb
xchg
cltd
and
pushf
cmp
out
aad
mov
lret
iret
or
test
or
xor
nop
int3
mov
jecxz
test
movsb
fiaddl
mov
test
mov
xor
outsl
sbb
sbb
jnp
outsl
enter
push
cmp
xchg
daa
movl
pushf
jmp
fcmovne
inc
je
jmp
daa
subl
stos
mov
nop
mov
aas
lea
sbb
insl
push
mov
outsb
outsb
pop
outsb
lcall
mov
dec
xor
add
mov
aam
loop
xor
or
and
cld
repnz
and
ljmp
lcall
add
or
add
mov
jb
cltd
fwait
adc
mov
adc
xchg
setge
push
int
iret
sub
loopne
sub
pop
es
fwait
mov
bound
shrb
mov
loopne
sub
int3
xchg
ljmp
pop
add
inc
adc
cmp
pmulhw
mov
fidivrs
xor
enter
push
adc
dec
in
add
ja
mov
pop
inc
xchg
pop
ja
repnz
cld
cmpsl
dec
pop
movl
pushf
movl
pusha
movl
push
lea
jmp
push
jmp
push
push
not
call
mov
pusha
pushl
ret
lods
lock
or
inc
jae
js
add
inc
fadds
push
int
insl
aad
sahf
cmp
sub
jb
push
into
lods
sbb
jns
xchg
fldcw
add
push
jae
jg
sbb
test
rclb
mov
and
jle
loope
jae
leave
sub
pop
mov
fldt
fsubl
mov
pop
sbb
push
jns
inc
cmpsl
out
in
dec
xor
dec
dec
aad
jmp
imul
lea
loopne
divb
fsubs
mov
mov
pusha
mov
xadd
sub
mov
jbe
cmpsb
and
or
inc
pop
cmp
xor
dec
repz
cli
call
nop
pop
inc
clc
cwtl
and
cmpsl
dec
mov
fldt
out
sub
xchg
adc
arpl
lret
pop
hlt
push
popf
add
je
rorb
xlat
and
es
and
pop
arpl
push
jbe
loopne
test
lcall
xorl
call
lea
jae
ja
add
jmp
mov
xchg
mov
inc
and
add
out
xor
icebp
mov
sahf
and
in
xchg
mov
shlb
ret
jae
cwtl
insb
insl
call
xchg
mov
adc
jns
rcrb
cmp
add
int
push
dec
mov
nop
adc
adc
xor
push
jle
roll
in
pop
icebp
inc
jecxz
push
pop
sbb
fucomi
gs
pop
sub
xchg
pop
aad
sub
stc
subb
pusha
cmpsb
pop
inc
das
nop
adc
push
mov
adc
push
mov
inc
sahf
aas
adc
dec
js
stos
cwtl
xor
add
notl
adc
pop
lods
fmull
fwait
icebp
nop
in
jae
push
inc
loope
loope
pop
jb
lds
int
add
sbb
sub
mov
dec
lret
lds
mov
test
mov
ss
dec
inc
lods
dec
inc
loopw
xchg
cmc
adc
dec
adc
jecxz
add
imul
shrb
mov
push
pusha
or
sbbl
scas
cmp
ror
nop
adc
repnz
jmp
clc
dec
call
and
scas
push
add
int
push
int3
mov
int3
das
in
jae
cmp
shlb
mov
xor
sub
out
dec
mov
jge
enter
inc
jmp
mov
push
jmp
lea
das
mov
mov
fmul
push
add
mov
sbb
xor
call
aas
ficoml
push
adc
out
lea
icebp
jnp
imul
pop
adc
arpl
and
adc
jp
dec
aaa
jmp
push
xlat
add
and
mov
cwtl
sti
loopne
movsl
cld
repnz
sbb
test
or
adc
lock
and
xchg
mov
mov
cld
bnd
xchg
or
or
ja
jne
mov
rcr
adcl
hlt
out
mov
cld
repnz
mov
jmp
sti
shl
jl
adc
inc
aas
dec
ss
mov
xchg
add
inc
pop
cwtl
jae
jge
cmp
sbb
mov
addb
js
cs
enter
gs
cs
jge
ret
add
xor
push
cli
jmp
je
jno
stos
movsl
fcompl
inc
pushf
cmp
or
imul
dec
ja
cmp
gs
test
fbstp
cmpsl
std
iret
insb
fbld
es
ss
dec
dec
xchg
pop
pop
mov
icebp
cwtl
ds
sbb
data16
push
dec
hlt
dec
mov
movsl
lcall
xlat
mov
push
cmp
adc
out
and
mov
mov
mov
sbb
or
insb
lret
cld
rcrl
or
sub
aam
cli
ret
pop
ds
pop
and
xor
cs
out
jl
push
cld
jb
into
dec
rolb
jno
cmc
inc
push
mov
test
mov
cld
repnz
insl
lret
iret
sbb
add
mov
movsl
adc
cld
jb
jno
fistps
nop
or
scas
and
repnz
dec
mov
sub
add
ffreep
sbb
popf
fs
js
ret
pop
fimull
jmp
pop
add
nop
cli
cld
leave
aas
cmpsb
cld
repnz
cs
lods
nopl
js
jge
out
pop
mov
jne
jmp
pop
movsb
cwtl
outsb
mov
stos
cmpl
fildl
sbb
lcall
pop
and
loope
jmp
loopne
sbb
sarl
mov
mov
lods
gs
dec
aad
arpl
inc
mov
pop
insb
outsb
aaa
and
push
pop
mov
xchg
inc
shl
cmp
xor
pop
fistpll
jb
jnp
jnp
ja
adc
pop
lods
or
bnd
mov
push
lods
clc
clc
neg
pusha
call
mov
cld
pop
jg
sahf
xor
imul
in
pop
push
fdivrl
xchg
repnz
ret
fldl
push
and
cmp
xlat
sbb
mov
imul
ss
add
push
cld
repnz
cwtl
scas
call
movzbl
push
bts
aam
shrd
mov
not
sar
sub
bswap
cmc
btr
push
test
sub
xor
push
aaa
push
bswap
push
bsr
aaa
sub
mov
clc
bt
test
pushf
lea
je
stc
not
and
rol
mov
neg
cmp
xor
shl
add
bswap
rcr
mov
clc
cmc
stc
jmp
adc
lea
cld
shl
dec
mov
cmp
mov
cmpsb
and
push
outsb
sbb
xchg
out
xor
shlb
pop
mov
jb
xor
jmp
mov
sub
adc
repz
cld
repnz
inc
int
mov
test
dec
mov
mov
sbb
inc
mov
scas
add
mov
adc
xor
and
pop
stc
lahf
test
sub
mov
jnp
jg
or
push
mov
test
cltd
sbb
push
mov
stos
xchg
loop
push
push
push
mul
dec
mov
into
sbb
mov
mov
mov
add
test
add
fdivs
insl
int3
int3
pop
rorb
fists
cmp
dec
add
push
vunpckhpd
mov
shrl
add
iret
dec
jecxz
mov
in
lds
cld
repnz
or
cmovb
push
cmp
ret
test
xor
insl
and
daa
mov
jb
cmpsl
sub
inc
rolb
sti
bound
xchg
out
xor
sub
test
xor
mov
out
mov
add
xorl
push
pop
mov
scas
gs
jne
push
adc
cmp
xchg
and
in
ret
in
sub
in
popf
push
pmuludq
push
adc
or
jl
out
push
popf
out
ljmp
add
test
inc
add
in
mov
fs
jbe
jne
xor
sbb
cmc
xor
xchg
pop
adc
xor
repnz
xor
push
push
repnz
aas
outsb
mov
data16
push
xchg
incb
pop
das
fmull
mov
les
jbe
ds
sub
callw
push
add
and
sub
xor
dec
outsl
mov
xchg
push
iret
mov
mov
jl
jp
dec
push
pop
xor
sbb
int3
out
cmpsb
jb
mov
ss
cmp
das
pop
aam
es
xchg
mov
sub
mov
and
fptan
push
mov
ficompl
sub
aaa
dec
or
cmpsb
out
push
or
push
push
mov
push
mov
mov
bound
fildl
jne
daa
daa
pushf
sbb
lea
mov
stos
push
daa
inc
mov
push
jb
jl
es
inc
push
inc
pushf
mov
mov
imul
xor
sub
xor
push
cmp
push
das
jns
pop
inc
mov
jb
paddsb
push
aaa
pop
pop
ljmp
inc
movsb
dec
das
stos
js
scas
push
jns
lahf
dec
xchg
mov
aas
sub
dec
fdecstp
dec
das
xor
dec
ja
mov
mov
sub
jp
shlb
out
cs
ss
mov
loop
test
add
les
test
icebp
sub
push
es
mov
aaa
inc
mov
or
sub
stos
pop
cmc
sub
push
in
mov
inc
push
pusha
test
les
mov
aaa
fldt
xchg
xor
push
cs
js
sub
add
das
pop
add
imul
push
inc
sbbl
mov
mov
pop
out
mov
cmp
dec
pop
out
jae
outsl
je
sub
jle
dec
xchg
mov
pop
mov
call
jo
mov
xchg
jns
daa
xchg
scas
loop
cmp
xchg
cmp
outsl
mov
test
inc
pop
push
cs
jle
cmpsl
shlb
mov
aaa
ret
pop
sahf
das
mov
aas
outsb
fidivrs
repnz
mov
pop
aam
das
fidivl
push
pop
loopne
out
das
mov
addr16
mov
sahf
dec
dec
jb
outsl
mov
push
in
scas
out
inc
repnz
out
cmp
pop
das
clc
aas
decb
add
or
bnd
aaa
inc
pop
inc
data16
iret
out
cmpsb
std
push
ss
inc
dec
pop
fdivs
das
pop
dec
jbe
enter
scas
cmp
mov
dec
incb
pop
pop
cmp
pop
test
push
jle
rcrb
fidivrs
cli
pop
aas
mov
into
dec
fidivl
cmpsb
dec
sbbb
cmp
xor
pop
lds
je
ret
ljmp
sub
sub
insl
push
data16
daa
mulb
sub
fildll
pusha
and
xor
cli
outsl
xchg
ljmp
sub
cs
inc
mov
arpl
sbb
push
xchg
inc
mov
sahf
lock
inc
cmc
dec
push
mov
ds
sbbb
push
pusha
out
jb
mov
push
lea
pop
cmp
pop
push
or
mov
mov
and
mov
bound
xchg
adc
mov
mov
inc
jb
mov
xor
stos
inc
mov
mov
push
scas
cmp
push
daa
mov
dec
outsb
cmp
outsb
mov
pusha
push
add
orb
sbb
ss
or
inc
jg,pn
mov
aaa
and
mov
cmp
adc
hlt
push
aas
jp
ja
loopne
addl
aaa
pop
cmpl
aas
xchg
push
shlb
inc
out
mov
inc
fisubrl
imul
data16
mulb
sub
das
inc
sarb
pop
aaa
ja
xor
inc
cmp
push
pop
mov
or
rcrb
xlat
jle
into
lcall
lcall
bound
mov
into
out
das
cli
shrl
les
push
xor
xchg
cs
mov
mov
cmp
out
dec
out
das
repnz
xchg
jo
push
mov
repnz
lcall
dec
imulb
ficomps
das
push
subb
sub
sahf
mov
gs
adc
das
fisubrl
sub
scas
aaa
xor
ret
push
push
scas
and
mov
mov
mov
pop
lret
rorb
ljmp
cmp
ja
sub
inc
mov
inc
jb
add
loop
sub
imul
cwtl
inc
ss
cmpsb
aaa
sbb
sub
sub
fisubl
push
bound
push
ficoms
pop
dec
subb
dec
push
xchg
or
xor
cmp
inc
inc
inc
pop
mov
mov
scas
push
push
inc
js
dec
out
mov
into
inc
cs
push
dec
dec
cmp
push
sahf
inc
cmp
dec
fidivrs
ds
mov
imul
mov
sub
insb
inc
dec
mov
mov
xor
int3
cmpsl
dec
ret
lods
scas
push
dec
jmp
pop
ds
or
bound
dec
lret
das
out
push
adc
ds
into
push
div
inc
cs
jle
dec
cmpsl
cmp
sarb
dec
rcrb
dec
adc
dec
insl
inc
sub
orb
jae
sub
pop
sub
sub
sub
xor
scas
orb
ja
xor
dec
loop
imul
dec
ja
jbe
out
xor
pop
cmp
lods
mov
out
dec
mov
or
bound
insb
dec
dec
push
insl
sub
mov
pop
push
ds
scas
cmp
mov
cmp
lret
testl
sahf
sub
push
xor
mov
add
xor
inc
sub
lock
cmp
dec
dec
cmpsl
push
cmp
or
mov
inc
inc
scas
push
scas
pop
dec
pusha
push
insb
cs
ja
mov
dec
adc
xchg
imul
pop
outsb
ds
inc
icebp
das
add
push
sub
push
outsb
imul
cmp
dec
cmc
outsb
or
dec
inc
push
insl
scas
sbbl
push
aaa
mov
pop
cmp
xchg
decb
add
and
push
add
push
sbb
jp
shrb
and
and
mov
fmul
cmp
repnz
inc
mov
insl
daa
stos
inc
inc
movsl
cmpsb
or
pop
xchg
xor
std
mov
aad
loop
xchg
jge
xor
out
xchg
out
pop
movsb
stos
daa
add
mov
dec
stos
xchg
mov
and
mov
test
xchg
push
dec
inc
stos
call
divl
add
test
mov
testb
mov
and
ret
sbb
arpl
loopne
dec
mov
fs
popf
jmp
push
stos
cs
mov
push
xor
inc
jb
or
dec
add
lret
mov
outsb
cmp
mov
fsubrs
mov
ds
imul
sbb
pop
push
inc
ljmp
rolb
cli
xor
fisubrl
mov
mov
dec
xchg
lret
cmp
enter
lret
xchg
fidivl
mov
dec
data16
lds
lea
dec
data16
sbbl
imul
shld
enter
sub
dec
loop
movb
call
ret
jnp
jb
ds
push
mov
cmp
dec
cmp
sub
xor
iret
ds
xor
pop
xor
cmp
mov
outsb
push
test
jae
mov
inc
insb
xor
xchg
add
loopne
add
call
push
push
cmp
push
push
outsb
jecxz
mov
jno
cwtl
pop
jae
je
jne
in
ja
js
jns
jp
jnp
jl
jge
jle
jg
and
xchg
xor
mov
xor
xchg
xchg
xchg
xchg
nop
jne
jmp
test
add
xchg
inc
cwtl
cmp
push
sbbb
mov
pop
sub
pop
mov
cltd
push
push
lods
xchg
xor
lea
sub
lret
mov
pop
inc
aad
out
mov
cwtl
jne
jmp
mov
addr16
in
pop
inc
daa
xor
lcall
mov
jg
adc
movsl
and
mov
out
insb
xchg
mov
das
xchg
popf
mov
jbe
pop
imul
xchg
cltd
xchg
in
stos
cmp
mov
je
xchg
and
jp
jae
lock
cli
xchg
aaa
adc
aas
mov
mov
jbe
mov
or
jmp
dec
push
mov
imul
mov
adc
xchg
jns
jg
enter
jp
xor
xor
mov
xchg
xchg
cmpsl
subb
shlb
sbb
dec
repnz
enter
notl
imulb
add
mov
mov
jns
inc
xchg
into
addr16
ss
ljmp
push
pop
inc
cmp
stos
les
jp
inc
cmpsb
mov
scas
or
pop
xchg
xchg
lret
lret
jns
iret
push
xor
imulb
push
lahf
push
add
sbb
imul
repnz
mov
mov
in
insb
xor
mov
pop
inc
xor
dec
imul
xchg
mov
jl
dec
inc
xor
inc
aaa
jge
cmp
pusha
xor
jns
push
add
mov
mov
imul
orl
pushf
pop
and
fidivrl
dec
push
icebp
cmp
das
fwait
sub
mov
pop
pop
cmp
insb
mov
cmp
ds
test
jp
xor
daa
jl
addr16
push
push
in
mov
dec
shrb
es
arpl
and
das
mov
int
es
push
pop
xchg
fstpt
imulb
pop
jb
cmpsb
daa
lahf
jne
rcrl
mov
aaa
ffree
rcl
xchg
mov
jl
loop
jbe,pt
mov
pop
mov
imul
or
xchg
sahf
neg
pop
sbb
xchg
testb
arpl
jo
clc
or
clc
mov
or
sub
outsl
inc
ss
leave
ficomps
fdivp
push
movsb
es
rcll
mov
sub
addr16
sub
stos
sbb
je
mov
sti
jno
xchg
xchg
add
bound
data16
jle,pn
mov
data16
pusha
xorb
xor
inc
dec
inc
cltd
ret
jae
mov
cmpsb
pop
lcall
popf
xchg
adc
iret
inc
pop
pop
xor
test
xor
add
das
ret
pop
mov
inc
push
lock
and
cmpsb
lods
jle
mov
jo
xchg
in
inc
cmp
mov
mov
jge
je
jne
jns
cltd
lahf
push
sub
xchg
lods
cltd
mov
roll
call
jle
sbb
inc
lock
cmpsb
push
add
out
xchg
test
cs
outsl
jle
inc
sub
lcall
pop
mov
pop
jbe
clc
sarl
jbe
popa
push
dec
cwtl
lea
pop
xor
fisubrl
jbe
mov
pop
jb
pop
stos
pop
cmp
or
mov
mov
pop
sbb
mov
jno
enter
mov
mov
cmp
negb
push
dec
push
mov
jg
adc
jnp
cwtl
pop
pop
das
bound
outsb
outsb
mov
dec
jbe
jp
scas
cmpb
dec
mov
mov
dec
xchg
push
sahf
push
sub
xor
mov
ljmp
dec
fs
shlb
repnz
cmp
fbld
fmuls
or
mov
jns
dec
insb
cmp
jbe
dec
mov
cmp
cmp
push
cmp
cmp
scas
mov
cmp
jb
jl
jb
cmp
jl
dec
pushf
xor
stos
out
adc
popf
mov
mov
es
test
in
push
mov
and
data16
sub
add
xchg
adc
mov
sti
xchg
in
cmp
xor
jl
lcall
and
stos
repz
jp
mov
mov
ja
mov
push
mov
jo
jp
xchg
aaa
mov
ja
ljmp
jae
cmp
sub
divb
es
mov
mov
sbb
mov
outsb
ja
frstor
jo
sub
sbb
test
pop
xchg
mov
push
xchg
xor
inc
cmp
es
mov
lcall
lock
ja
push
ljmp
pop
ss
daa
clc
mov
ljmp
jno
push
cwtl
lods
nop
mov
xor
sti
mov
int
dec
xchg
loop
xchg
xchg
add
popf
mov
fidivl
cmp
icebp
mov
dec
scas
cmp
int3
jb
pop
fidivl
xchg
xchg
mov
or
mov
sub
test
xor
call
mov
data16
xor
mov
dec
cmp
push
es
mov
cmp
jb
fwait
xor
and
outsb
cwtl
jg
daa
pop
sbb
stos
mov
ja
push
mov
stos
test
sub
jle
mov
cmpsl
jo
lret
outsb
pop
inc
cmp
mov
movsb
jg
xorb
sarb
push
cmp
fidivs
out
cmpsl
jb
std
xor
mov
test
xchg
jmp
sahf
mov
jne
mov
mov
sahf
dec
mov
xchg
jae
jp,pn
xor
movsl
jne
fwait
xlat
loop
jb
test
adc
mov
mov
popf
divl
xor
jp
cmpsb
icebp
jns
xchg
nop
mov
sbb
pop
cld
dec
aam
add
or
movsb
push
mov
into
cmp
inc
sti
pop
dec
lret
dec
dec
sub
rorb
xor
test
call
js
dec
xchg
lahf
push
cmp
cmc
stos
mov
cs
or
sar
sbb
iret
or
xor
sub
mov
into
jbe
dec
fistpll
xchg
and
inc
hlt
lods
loopne
mov
sub
mov
ja
ja
fwait
mov
jp
movl
out
jns
xchg
cld
orb
andb
push
push
iret
and
cmp
jle
inc
xlat
xchg
cmp
pop
cbtw
in
xlat
cmpsb
push
cwtl
lahf
mov
mov
xchg
jp
xor
push
jp
iret
mov
mov
push
je
insb
das
loop
cmp
in
add
push
enter
add
xchg
mov
push
pop
loopne
rcll
push
outsb
outsb
stos
imul
in
cld
jecxz
sahf
cmpsl
xor
sub
sub
adc
inc
xor
mov
sub
cmp
test
xchg
xchg
cmpb
dec
xchg
jae
mov
mov
leave
mov
jb
mov
inc
jg
adc
jns
xlat
jl
bound
cmp
test
cmp
pop
jp
push
cmpsb
jle
sub
sti
xchg
mov
mov
mov
lret
les
cwtl
inc
mov
aaa
push
dec
adc
outsl
loop
cs
inc
xchg
gs
out
clc
out
mov
push
pop
bnd
mov
lcall
fcomps
stos
cmp
mov
sbb
fadds
movsb
lret
mov
inc
hlt
je
int3
inc
lock
jo
js
xor
inc
xor
scas
lret
gs
dec
mov
cmp
xchg
mov
in
cmp
adc
push
sbb
lret
dec
loope
dec
push
jnp
mov
jne
jae
out
pop
jb
fs
fisttpl
fwait
mov
test
push
rolb
lret
and
test
dec
dec
out
aaa
in
and
fstpl
shl
cbtw
xlat
push
int
push
ret
stos
test
cmpsb
jmp
sbb
inc
in
jle
or
int3
in
dec
jp
pusha
test
subb
sub
rcrb
int
pop
outsb
imul
xor
push
xor
adc
mov
jp
mov
mov
out
sub
repnz
xor
addb
mov
cmp
pushw
xchg
push
lcall
push
js
ds
xor
sbb
aam
int
ret
repnz
mov
mov
push
jbe
stos
mov
js
or
je
out
jp
xchg
mov
cmp
sahf
lret
inc
push
out
push
mov
je
cmp
mov
inc
test
or
mov
cmpsb
dec
dec
mov
sbb
insl
mov
dec
or
lcall
push
jle
test
xchg
ret
fldl
lret
mov
lret
lock
add
gs
dec
shrb
pusha
lea
lcall
xchg
dec
push
and
mov
push
mov
in
popa
sbb
cmp
cld
push
out
aas
daa
lcall
push
xchg
mov
pop
stc
xor
cmpsb
pop
jle,pn
inc
dec
jb
aaa
test
mov
into
hlt
sub
dec
xchg
ss
mov
inc
pop
jnp
push
stos
out
jo
enter
fsts
inc
ja
cmpsb
xlat
push
inc
sub
sub
cmp
repnz
notb
mov
pop
outsb
imul
jbe
stc
dec
mov
pop
pop
or
notb
push
pop
and
mov
incb
cltd
ds
mov
push
testb
cs
pop
hlt
push
cmp
in
in
outsl
imul
sahf
inc
lcall
fidivrs
push
dec
inc
pop
bound
push
leave
mov
jbe
inc
orb
mov
in
jbe
dec
or
dec
lcallw
fucomp
cmpsl
repnz
repz
ja
ds
mov
hlt
rclb
xchg
ss
inc
push
inc
mov
mov
test
out
int3
mov
repnz
rorb
cs
or
ljmp
dec
push
dec
hlt
cs
push
mov
pop
jp
dec
repnz
add
xchg
lea
push
jns
testb
pop
clc
ficoml
ljmp
mov
adc
outsb
ret
jnp
ret
xchg
jmp
mov
inc
lret
jg
ds
pop
jle
and
int3
scas
add
push
out
lock
loop
jbe
push
outsl
jb
dec
inc
pop
fldenv
push
pop
repnz
nop
push
xchg
loop
inc
insl
sahf
scas
int
add
mov
push
push
and
push
outsb
testb
push
mov
push
out
dec
xchg
ficompl
xchg
add
aas
mov
cmp
jg
mov
loop
add
sub
sub
scas
lcall
fstpt
pop
xchg
xor
scas
add
push
xor
ss
out
cmp
xlat
mov
cmp
push
lea
aas
aaa
inc
cld
flds
inc
js
xor
pop
scas
pop
push
or
cwtl
or
test
or
rcl
in
mov
push
mov
mov
outsl
add
hlt
ficomps
in
mov
hlt
jg
cs
mov
cli
add
inc
aam
adc
dec
push
or
pop
or
inc
inc
jnp
ret
cmpsb
aas
or
cld
jns
notb
pop
dec
mov
lcall
pop
push
lret
loop
mov
test
cmovbe
add
scas
cmp
inc
outsb
pop
push
dec
xchg
lods
cli
cmp
out
rolb
xchg
into
dec
push
hlt
cs
lock
stos
movl
inc
push
fs
divb
xchg
in
lods
jo
ss
add
mov
mov
out
mov
mov
push
stos
dec
in
jo
out
mov
test
mov
jp
add
outsl
xchg
cld
mov
fldt
mov
sub
test
mov
into
dec
pop
test
push
sub
call
pop
inc
push
inc
xchg
ds
pop
cltd
cmp
inc
xor
push
aas
lods
xor
and
cmp
mov
pop
inc
loop
cmp
mov
test
fs
aaa
mov
lods
aaa
sub
stos
insl
push
adc
es
scas
insl
adc
mov
in
movsb
cmpsb
xlat
mov
gs
mov
rclb
das
jbe
shll
sub
mov
sub
inc
les
adc
idivb
inc
scas
sub
dec
pop
inc
into
xor
cmpsb
mov
scas
cmp
sub
dec
movsl
mov
call
mov
iret
sub
sub
cmp
cmpsb
jbe
sahf
mov
cmp
dec
mov
sub
cmpsb
and
inc
scas
aaa
sub
mov
add
fiadds
mov
shrb
lret
movsl
sbb
cmp
aam
sub
lods
lods
and
push
imull
leave
mov
or
mov
into
insb
inc
xor
push
lods
jbe
adc
mov
sub
sub
aad
xchg
lods
dec
cmp
movsb
cmp
pop
daa
lods
mov
roll
orb
lods
movsl
aam
rolb
sub
add
lcall
sub
cmp
test
push
inc
jmp
imul
scas
out
xor
ds
pop
ror
mov
arpl
aaa
xor
push
cs
pop
pop
stos
inc
xor
cmp
mov
rclb
fidivrs
das
scas
xor
mov
lret
or
test
ds
mov
xchg
inc
js
movsl
mov
sub
jmp
mov
hlt
push
adc
sub
shrb
adc
int
lret
xor
mov
xor
xor
cmpsb
popf
mov
cmpsl
pushf
cmp
imul
rdmsr
sub
and
sub
stos
jg
dec
test
leave
mov
mov
xor
mov
jbe,pt
stos
scas
mov
jmp
mov
aaa
mov
mov
int
test
fwait
cmp
xor
pop
sub
push
aaa
mov
sub
in
cmp
lods
dec
push
xor
mov
cmp
mov
xor
mov
shr
stos
inc
imul
xchg
mov
push
dec
sub
jmp
aas
aaa
mov
aas
arpl
push
scas
mov
mov
mov
sub
mov
inc
sub
dec
xchg
cmpsb
leave
cltd
inc
dec
jae
xchg
dec
jb
inc
adc
mov
jbe
das
aam
lahf
push
lret
lcall
outsb
xor
pop
xchg
dec
sbb
pop
ds
dec
xor
mov
test
cmpsl
mov
mov
xchg
lret
push
jle
push
jmp
cmp
cs
dec
xchg
inc
jno
adc
out
inc
cmpsl
dec
in
enter
sub
in
sub
xor
mov
testl
out
pop
or
loop
adc
pop
insl
fwait
stos
lods
das
xor
or
cmp
pop
sbb
inc
daa
mov
push
stos
aas
sub
xor
cmp
aaa
mov
repz
mov
mov
mov
aad
jle
bound
jl
inc
lds
and
xchg
pop
stos
xor
iret
sbb
lret
pop
lods
sar
daa
outsb
repnz
imul
loope
cmp
popf
add
sbb
in
outsb
lock
push
leave
add
das
addr16
lret
pop
lcall
mov
mov
fistl
xchg
inc
jnp
jmp
lods
pop
xchg
movsl
stos
aam
fcomps
aaa
fnstcw
jmp
or
sub
int3
not
jo,pt
aaa
mov
aaa
dec
stos
lods
add
pop
push
mov
sub
inc
call
lret
jnp
call
das
cmp
outsb
push
popf
cmp
inc
mov
sub
xor
aas
sub
jnp
sbb
or
mov
cli
outsl
jl
aad
dec
mov
test
or
cmp
aaa
stos
rcl
xchg
dec
sub
aad
lea
jbe
jl
inc
enter
jl
sub
outsb
aaa
xor
lret
push
push
mov
jl
inc
xlat
das
inc
jne
xlat
mov
aas
ficomps
xchg
inc
cmp
in
adc
pop
sti
aam
mov
movsb
les
and
or
into
lods
xlat
out
test
das
mov
icebp
out
mov
pop
or
mov
push
dec
inc
movsl
sub
ds
sub
dec
xlat
mov
push
push
ds
sub
push
popf
pop
xchg
fwait
aam
or
mov
insl
clc
xchg
cmpsb
xor
sub
adc
cmp
cmp
xor
push
cmpb
mov
in
xor
sub
xor
fwait
pop
add
xor
xor
add
lods
aaa
pop
aas
popa
pop
cltd
jo
sub
jmp
subl
mov
xchg
mov
imul
xor
out
xor
and
xchg
xor
or
push
mov
add
jns
pop
imul
add
fisttpll
aam
and
and
popf
xlat
add
leave
jl
insl
ds
cmp
call
mov
sub
cltd
das
inc
lret
fwait
mov
jbe
xor
and
daa
pop
and
lods
addl
inc
scas
cld
xorb
js
push
leave
cmp
dec
frstor
cmp
sub
adc
shll
dec
mov
xchg
mov
in
mov
push
or
mov
notl
mov
jle
xorb
scas
xchg
lret
ss
stos
insb
test
mov
push
cmp
leave
xor
inc
scas
sub
sub
pop
lret
mov
push
inc
sub
mov
and
std
sbb
jecxz
cmp
mov
jp
sub
inc
xor
dec
mov
jle
in
mov
jns
shrb
shll
jp
sub
loope
rorb
addb
and
xor
lahf
enter
sbb
mov
clc
jb
daa
imul
daa
xor
push
pop
ljmp
stos
iret
mov
push
jbe
cmpsb
mov
cmc
push
xor
mov
jno
mov
test
push
cmp
test
lods
xor
scas
lcall
aaa
lods
je
pop
daa
popa
mov
imul
imul
pushf
clc
cmp
movsb
aam
jb
insb
jb
fstp
mov
push
jno
fmull
sub
scas
sbb
and
mov
aam
ss
mov
lahf
mov
sub
sbb
add
mov
stos
mov
jnp
mov
cwtl
pop
fwait
mov
and
shll
bnd
aas
sub
mov
pusha
cmp
pop
sbb
dec
sub
pushf
ss
mov
mov
push
fdivrs
push
mov
jge
rol
pop
mov
xchg
push
adc
int3
cmpsb
aaa
aaa
xor
das
adc
sub
int3
cmpsl
jge
lock
push
xor
inc
dec
ret
xorb
call
push
lods
lret
pop
scas
jg
ljmp
iret
lret
stos
cmpsl
or
cmp
repz
and
mov
cmpsb
popf
call
push
mov
mov
fisubs
mov
cmp
sahf
cmp
nop
mov
aaa
fldl
js
repnz
call
push
mov
sub
ret
cmp
in
pusha
or
push
sub
or
ljmp
imul
out
xor
sub
push
imul
dec
pop
cmpsb
das
imul
cmp
lret
jg
inc
daa
push
push
xor
or
xchg
push
xorl
fdiv
xchg
dec
imul
sub
push
sub
and
push
stos
xor
inc
push
ret
jae
insb
cmpsb
or
lods
cld
xor
fucom
mov
outsl
dec
push
scas
les
test
test
dec
mov
mov
ret
mov
xchg
iret
push
imulb
movsl
mov
jo
int3
pop
mov
add
fildl
sub
mov
and
mov
pop
stos
bound
enter
addl
xor
loop
inc
les
ds
movsb
data16
stos
jg
push
xor
insl
cltd
imul
ljmp
cmpsb
dec
push
cmpsb
dec
xchg
mov
cmp
dec
lds
pop
sub
ds
and
inc
aad
mov
shr
in
cld
loop
sbb
shll
ds
insl
addr16
mov
mov
in
sub
mov
push
xor
and
stos
xor
les
mov
sarl
daa
pop
iret
xor
inc
call
stc
cmp
movsl
loope
xor
ret
pop
out
aas
mov
aaa
cltd
jge
pop
cmpsl
std
lds
mov
sarb
cli
jb
jb
mov
or
jo
cmpsl
pop
cli
mov
cs
movsl
dec
cmpsb
cli
jl
popa
ljmp
cmp
gs
xor
ret
leave
mov
push
sub
test
daa
push
test
pop
xor
lods
popa
out
cmp
sub
icebp
sub
fisttpll
das
stos
mov
fs
les
into
aam
mov
push
repnz
das
pop
push
adc
cmpsb
call
ficoms
shl
test
xchg
cmpsb
call
lods
scas
aaa
mov
inc
cmp
push
leave
cmp
mov
pusha
leave
stos
mov
imul
jno
stos
sub
mov
and
dec
mov
test
movl
push
test
pop
or
divl
inc
daa
pop
mov
xor
pop
test
scas
scas
lret
loop
das
mov
lods
jecxz
xor
or
shll
cmp
cs
fadds
push
aaa
push
aaa
push
ficompl
sar
sub
xchg
xlat
cmp
mov
inc
jno
add
shrl
mov
cs
cmpsl
xchg
and
xor
lret
call
mov
dec
mov
push
loop
push
lods
sub
movsb
rcr
lea
lds
inc
inc
lret
mov
dec
ret
test
push
movsl
fwait
out
cmp
dec
mov
fstpt
inc
daa
jae
mov
imul
sub
mov
sarl
jl
cmpsb
loope
sbb
sub
push
lret
lds
push
push
cmpsb
cmpl
push
jge
aad
pop
paddsw
popa
dec
sub
sbb
pop
rcll
movsb
xchg
xlat
mov
mov
sub
cmpsb
adc
push
stos
movsb
daa
lret
scas
jge
cmpsb
adc
scas
movsl
and
xor
aaa
dec
xor
adc
push
scas
cmpsl
cmpsb
and
push
mov
jecxz
pop
cmpsb
and
sub
inc
push
sub
and
test
loope
and
jge
ss
gs
sbb
cmpsl
fs
out
call
push
jmp
bound
pop
jmp
xchg
xchg
gs
xchg
insb
inc
out
lods
jp
daa
mov
sub
push
mov
sub
sub
cs
or
ds
inc
inc
movsl
aaa
das
fadds
sbb
sub
mov
sub
and
in
xor
or
push
sub
arpl
test
and
xchg
push
data16
push
movsb
sbb
mov
inc
jmp
in
push
gs
cmp
and
stos
push
sub
jmp
pop
ss
stos
orb
inc
inc
gs
inc
lret
push
je
jp
scas
sub
jne
inc
and
out
mov
push
fwait
cmpsb
jb
out
sub
das
lret
jns
and
jo
mov
cmc
mov
mov
and
mov
ss
aam
sbb
push
stos
enter
dec
and
inc
stos
mov
cmp
jns
sbb
add
out
fidivrs
daa
aam
sbb
lret
mov
mov
ss
mov
mov
bound
icebp
push
xor
les
xchg
cmp
in
ss
mov
fdivrl
lods
jge
scas
and
push
sub
or
mov
cmc
inc
movsl
xor
outsb
and
mov
ss
jmp
and
mov
inc
and
in
pop
dec
lods
push
scas
repnz
out
inc
jmp
cmpsb
sub
and
pop
out
sub
adc
ss
cmpsb
pop
inc
movsl
inc
in
mov
ret
pop
mov
push
sub
cwtl
push
inc
mov
pop
roll
dec
cmpsl
fadds
jo
push
mov
adc
movsl
mov
cmc
xchg
mov
push
ss
aam
xor
sub
adc
cmpsl
mov
pop
ss
inc
cli
xor
cs
rcrl
fstps
inc
inc
ds
dec
dec
and
jb
sub
jmp
and
lea
adc
or
xor
cwtl
xchg
mov
sub
mov
outsb
enter
push
je
and
cmp
arpl
enter
xor
sub
outsb
out
push
xor
jecxz
mov
js
sub
mov
mov
sub
int3
aam
cmp
or
mov
out
and
sahf
push
mov
pop
and
daa
outsl
add
addr16
or
jb
and
cmp
stc
out
in
jno
jecxz
pop
sub
sub
sub
mov
imul
mov
mov
inc
push
mov
dec
pop
negl
outsl
movsl
dec
jle
cmp
pop
or
mov
cltd
ds
mov
mov
hlt
dec
aaa
pop
ss
jmp
push
inc
mov
and
pop
dec
push
in
pop
pop
pusha
sbb
mov
pop
in
pop
ss
pop
inc
or
sahf
cs
dec
clc
mov
je
xor
iret
dec
scas
xchg
xchg
xor
ds
ss
fsqrt
sti
sahf
out
pop
data16
lods
mov
sti
dec
pop
repz
jb
stc
iret
sti
jl
ss
daa
xchg
test
push
repz
ret
cltd
push
dec
mov
iret
repz
stc
pop
ret
lcall
ss
ss
mov
rcr
pop
pop
or
inc
xor
pushl
gs
jno
and
push
push
pop
scas
pop
mov
outsb
ss
jmp
rorl
jmp
or
push
ret
addb
sub
popa
jg
pop
cli
in
mov
sti
aaa
jnp
ret
cli
shl
aaa
std
mov
xor
ja
mov
pop
cmp
xchg
cld
ficomps
inc
repz
cs
xchg
jb
push
das
and
out
push
mov
imul
pop
addr16
das
pop
mov
sub
push
sub
inc
mov
mov
jb
imul
dec
ja
pop
enter
cmp
data16
mov
jae
sub
pop
int3
inc
insl
lock
pop
ret
cltd
jns
pop
dec
pop
mov
dec
stos
mov
inc
sub
pop
shll
dec
sub
sub
fisttps
bound
sub
outsb
mov
jp
mov
dec
stos
pop
sub
push
mov
or
jbe,pn
scas
mov
jno
fadd
data16
into
mov
decb
ss
mov
out
mov
push
sub
sti
mov
mov
outsl
lock
cmc
orb
jbe
jmp
pusha
enter
sbb
ja
xor
push
adc
ds
and
ret
or
jg
pop
mov
jno
push
imul
push
ret
xchg
pushw
repz
sub
inc
fldt
out
stc
das
clc
in
std
cmp
cs
xor
xchg
xchg
inc
cmpsl
xor
test
pop
pop
inc
pop
sub
lods
xchg
into
lcall
cmp
mov
test
add
ficompl
jge
jle
cmp
addb
ficoml
das
ss
xor
test
call
insb
xchg
push
addr16
cmp
data16
ja
jno
stos
cs
push
lods
fadds
pop
lret
inc
ss
outsl
jo
test
outsb
imul
xor
mov
push
xchg
push
inc
imul
dec
dec
fldt
cmp
dec
data16
imul
pop
pop
pop
push
mov
cmp
mov
mov
bound
in
dec
pop
scas
push
rorl
push
inc
or
sub
jo
mov
aaa
sub
dec
dec
jnp
fisttpll
testb
cmp
sbb
add
cmp
cmpsb
inc
jl
inc
cmpsl
xor
cmp
cmp
cmp
xor
cmc
mov
sub
lcall
gs
add
mov
xchg
in
xlat
xor
xor
and
sbb
add
or
lea
xchg
in
vmovntdq
adc
push
popa
adc
idivb
mov
mov
ret
pop
push
add
insb
hlt
js
mov
inc
cltd
sub
lds
adc
jns
sub
ss
or
push
jbe
cs
push
cli
sbb
ljmp
pop
pop
loope
push
xor
sub
push
or
je
outsb
cmpsb
ds
xchg
or
cmp
cwtl
and
fists
dec
int3
lret
hlt
mov
pop
aaa
clc
pop
fcomip
out
scas
push
jae
cwtl
out
pushf
lret
mov
add
cmpl
xor
daa
cs
inc
sub
xchg
dec
sub
add
mov
push
cwtl
lcall
hlt
addb
jns
xchg
dec
cmp
jns,pn
xchg
dec
das
mov
testb
sbb
dec
dec
mov
lock
or
test
ret
sbb
jns
outsb
dec
cmp
xchg
data16
adc
pop
lock
mov
mov
jb
cmp
stos
jge
mov
cmp
cs
xchg
dec
cmp
mov
out
sbb
pop
nop
jb
lcall
dec
xchg
dec
cmp
or
sub
repnz
xchg
xor
fdivrp
ret
mov
mov
pop
stc
inc
inc
idivb
ds
cs
lock
sub
mov
add
lock
unpcklps
shrb
dec
jp
mov
cmp
pop
xchg
cmp
mov
pop
cmp
xor
push
mov
jge
ret
push
or
jbe
mov
sub
cmp
mov
dec
adc
xor
jle
xchg
push
roll
cld
or
aaa
mov
dec
xor
inc
inc
das
shlb
dec
inc
inc
das
ret
sarl
xchg
mov
jl
cmp
cmp
loopne
cmpsl
mov
lcall
jno
pop
mov
ss
iret
and
not
sub
dec
out
je
movsb
in
das
lds
and
push
gs
cmc
or
add
pop
pop
shrl
leave
sbb
and
push
and
xor
xchg
lcall
sbb
jns
add
inc
das
push
je
inc
pushf
jp
xor
xor
addl
idiv
sahf
daa
jle
xchg
xor
ss
sub
push
dec
out
popl
sub
push
jo
fcmovu
push
push
mov
scas
sub
add
adc
mov
sub
out
and
sbb
int
repnz
leave
dec
add
push
jo
stos
mov
fistps
jae
dec
testl
std
aad
in
jnp
in
jl
xchg
sub
mov
enter
js
dec
imull
cmpsb
and
push
mov
andb
mov
scas
std
xor
dec
add
and
xor
fstpt
inc
push
insl
cld
daa
pop
inc
sub
shlb
xor
xchg
jnp
out
and
addr16
outsb
pusha
inc
scas
dec
mov
fidivs
loope
mov
dec
hlt
jne
and
out
je
bound
std
aam
mov
inc
sub
sbb
out
daa
dec
clc
mov
push
xchg
ljmp
or
dec
or
pop
idivb
add
daa
das
mov
insl
repnz
dec
repnz
dec
imul
mov
dec
add
mov
jmp
out
sub
jbe
scas
add
pop
loop
jge
add
sub
scas
lds
jp
and
push
pop
mov
and
sbb
loop
dec
xchg
rolb
outsb
or
mov
sub
lret
push
lcall
jbe
jns
dec
or
mov
ja
cmp
aam
sahf
sub
jnp
add
fimull
seta
push
in
or
outsl
sahf
and
or
mov
or
loop
movsb
inc
xor
daa
stos
xor
sub
sti
jb
xor
sub
scas
std
jns
data16
jl
push
mov
dec
add
jmp
dec
add
popa
in
adc
push
mov
repnz
popw
into
dec
mov
and
pop
sub
imul
clc
stc
push
xorb
aam
andb
sub
cmp
pop
test
and
jle
jbe
pop
fisubl
adcb
sub
bound
popa
lea
add
inc
push
jno
enter
cmp
dec
pop
ret
jg
repnz
sbb
mov
into
cmp
js
je
in
xor
gs
sti
lret
dec
jle
jp
imul
jle
fisubs
pop
out
push
sub
fidivrl
mov
push
mov
es
add
sbb
or
mov
mov
sub
idivb
mov
out
jns
cmpsb
mov
imul
fidivl
movb
sub
or
push
in
xchg
jge
add
outsb
lods
push
add
cwtl
lcall
out
sub
xchg
add
xchg
pop
pop
add
fimuls
and
xchg
lret
add
aam
push
xchg
imul
stos
cmc
out
clc
push
and
sti
ljmp
test
dec
cli
jnp
das
sti
mov
ljmp
xor
sahf
lea
inc
loop
jae
add
outsl
adc
cmpsb
std
fdivrp
fnsave
jle,pt
jge
mov
scas
xchg
xchg
enter
fiadds
push
sub
stc
sar
sbb
push
inc
in
xchg
addl
add
jecxz
insb
rorl
inc
xchg
insl
lods
cmp
add
sub
fildll
dec
or
push
and
cmpsb
mov
and
mov
xchg
sub
clc
mov
xchg
cld
xchg
cmpsb
idivb
bound
mov
add
mov
ficoml
loopne
cli
push
mov
sub
outsl
xchg
add
xchg
add
jle
icebp
rorb
bound
and
mov
jmp
rcrl
pop
aad
pop
cmp
push
xchg
das
shlb
mov
push
jb
sub
ret
jno
das
dec
test
repnz
bnd
subl
add
ss
test
add
add
mov
xor
shlb
or
and
xchg
ljmp
arpl
daa
clc
xor
fidivrl
loop
fdivrp
pop
or
jno
xchg
sbb
xchg
cmp
adc
push
mov
xchg
aam
pop
adc
push
jbe
mov
ret
xchg
or
xor
clc
sub
pop
pop
ljmp
cwtl
stos
xchg
xor
mov
sub
outsb
xor
pop
gs
shrb
in
inc
std
test
test
and
xchg
xchg
xchg
jp
mov
sub
stos
add
jbe
clc
outsb
daa
push
push
add
repnz
pop
and
cmp
xor
dec
cmc
push
dec
jbe
div
jno
cmp
je
mov
int3
xchg
add
pop
mov
aaa
mov
das
leave
loop
ljmp
subb
pusha
cld
jle
inc
decb
lcall
jp
popf
cmp
sub
lods
out
dec
push
rcrl
dec
dec
mov
pop
into
sbb
and
ret
jle
clc
push
and
stc
fs
std
clc
mov
jmp
push
or
scas
jo
shl
rorb
das
or
sub
xor
les
pushf
test
fwait
sbb
idivl
xor
imull
lods
sub
das
dec
out
lock
out
dec
dec
imulb
notl
es
push
bound
cli
mov
cmp
jmp
mov
inc
push
add
or
pop
iret
aad
out
std
sub
lret
aaa
cld
orb
ds
cmp
xor
push
or
dec
push
mov
inc
mov
das
jne
out
jle
sub
daa
and
sbb
pop
jbe
test
lcall
push
xchg
fucomip
ljmp
adcb
mov
jns
insl
xor
aas
in
mov
mov
inc
sub
xchg
mov
mov
out
movsb
push
into
out
jb
or
sahf
outsb
jp
xchg
push
add
scas
scas
mov
std
sub
or
outsb
sbb
mov
xchg
sub
xchg
repz
cs
xchg
idivb
mov
shll
in
xor
sub
outsl
jmp
push
push
mov
lret
xchg
faddl
mov
imul
mov
mov
push
sub
test
stc
push
xchg
sbb
jmp
rcll
mov
pusha
jge
int3
push
jecxz
ss
inc
lret
sarl
fidivrl
inc
cmp
adc
sub
cli
dec
ljmp
sub
add
ljmp
ret
fwait
adc
mov
outsl
imul
ljmp
push
jmp
mov
adc
outsl
cli
pop
stos
ret
xchg
sub
xchg
dec
mov
push
test
dec
scas
dec
pop
xor
lret
xlat
push
dec
sub
push
movsb
in
jbe
sarl
sub
push
aam
xor
xchg
incl
mov
stos
enter
lret
mov
daa
push
sbb
into
ds
jb
sub
cmc
fcomps
outsl
out
adc
or
je
je
movsl
dec
pop
sub
and
push
push
mov
mov
mov
jmp
call
dec
in
add
clc
sub
cli
mov
push
mov
repnz
sbb
lret
fiadds
sbb
fmuls
jo
push
push
loope
jge
cli
mov
mov
clc
icebp
push
sub
lret
cmp
xchg
mov
daa
popa
inc
out
mov
ds
add
cmpsl
dec
or
call
push
lock
das
jmp
sub
or
push
inc
and
mov
pop
push
add
push
push
ljmp
iret
loop
pop
es
mov
loop
leave
out
js
out
out
daa
cmp
mov
hlt
mov
push
and
scas
inc
sti
push
dec
mov
lret
into
outsb
push
cli
pop
xchg
mov
push
ljmp
jbe
mov
pop
mov
call
sub
ss
or
scas
repnz
outsb
pop
sti
daa
xchg
insl
outsl
std
mov
add
test
clc
sub
loop
xchg
pop
divl
mov
pop
mov
rclb
adc
mov
test
cmp
jb
adc
cmp
push
pop
out
data16
ds
jle
push
stc
push
sub
scas
outsb
jno
xor
jp
dec
dec
and
jmp
push
pop
sub
js
in
test
std
cmp
xchg
aas
sub
clc
push
pop
mull
popl
hlt
test
pushl
stos
jle
pop
outsb
pop
bound
xchg
mov
aaa
jo
data16
mov
mull
das
mov
cli
xchg
shrb
or
pusha
push
xor
stos
clc
or
incb
data16
repz
or
mov
cmp
add
es
scas
cmpsb
xchg
dec
imul
push
mov
divb
ret
inc
outsb
push
pop
mov
cli
jae
xchg
into
mov
xor
dec
mov
test
addr16
xchg
dec
mov
cmpb
push
xchg
xorb
pop
lock
mov
mov
push
insb
cmp
jle
push
cmc
dec
pop
and
inc
ja
mov
cli
movsl
xchg
push
mov
sarl
call
mov
cmp
out
fsubrs
or
pop
push
loopne
mov
out
insb
test
fbld
mov
pop
jb
adc
add
jle
test
mov
dec
ja,pt
push
out
push
dec
rclb
xor
sbb
cld
cmp
lcall
sub
cmpsb
inc
or
addl
dec
shl
xchg
mov
jp
cmp
idivl
xorb
dec
sbb
xchg
scas
lcall
out
push
enter
cmpb
int
push
and
mov
sbb
pop
int
rorb
sub
inc
bound
mov
sub
and
mov
push
mov
dec
inc
lret
push
dec
cmp
addb
cmp
cmp
out
sub
nop
out
push
dec
xor
mov
lret
dec
add
pusha
clc
xchg
scas
bound
hlt
inc
scas
testb
xcrypt-cfb
cmpsl
es
inc
movb
sub
inc
ret
test
mov
add
ds
xchg
mov
xor
or
mov
jo
jae
popf
testb
test
mov
into
xor
outsl
fs
cmp
repz
pop
sub
pop
sbb
repnz
ficoml
mov
mov
jecxz,pt
ds
mov
sub
data16
mov
adc
mov
mov
sub
cmc
xor
js
loop
sub
push
ret
test
pop
inc
stos
and
std
sub
pop
jne
add
mov
sub
lret
lea
nop
add
test
lock
inc
out
pop
jno
cs
inc
or
scas
out
dec
cmp
cmp
ds
adc
lret
faddl
and
js
adc
outsl
mov
xchg
push
mov
shr
orb
add
addr16
sub
std
jle
jle
stos
ret
imul
test
xor
adc
js
push
jb
add
sub
mov
dec
outsl
scas
push
jp
fisubrl
fidivl
addr16
dec
loop
stos
jp
push
sti
test
xor
adc
adc
repnz
push
lods
cli
ds
pop
mov
cmc
sahf
sub
mov
stc
pop
andl
iret
mov
mov
inc
std
sti
stos
jno
andb
or
xchg
lods
inc
or
sahf
sti
mov
into
mov
jle
add
pop
add
ja
mov
mov
sub
add
jg
popa
aaa
jbe
sbb
sub
xchg
mov
ds
mov
jo
fcomp
dec
mov
sub
sub
inc
daa
dec
cli
clc
cpuid
aaa
mov
adc
outsb
inc
rorb
or
lahf
out
into
outsl
adc
xlat
lods
push
cli
loope
xor
icebp
stc
jo
jg
sbb
dec
inc
mov
mov
push
cmp
pop
mov
sub
adc
cli
inc
push
xchg
faddl
push
fstps
daa
outsl
xlat
push
pop
div
xor
dec
cld
jae
outsb
inc
mov
push
inc
bnd
sub
imul
mov
dec
ficompl
dec
hlt
dec
jb
adcb
pop
cmp
xchg
sub
imul
sub
bound
add
push
mov
cmp
fildll
cmp
popf
sub
push
outsl
fisubs
mov
sub
sub
mov
cmp
loop
mov
lret
xchg
lds
xchg
out
lret
sbb
scas
fdivp
ljmp
add
sub
ds
xor
loop
pop
ds
divb
clc
ds
jp
cmp
push
cmp
xchg
pop
fnstsw
mov
jmp
xchg
mov
stos
out
into
sub
test
repz
ss
pop
and
test
ret
inc
out
push
shl
out
outsb
sub
cld
dec
dec
jo
pop
sbb
jb
or
mov
mov
pop
xchg
mov
popf
pop
rorl
lret
mov
lcall
mov
clc
mov
sub
outsb
xchg
jne
into
test
sbb
or
mov
add
mov
cli
scas
push
daa
mov
push
dec
push
outsb
rol
sub
jne
jo
sub
shrl
sbb
xor
mov
divb
das
icebp
fsubs
lret
lret
xchg
jne
lock
mov
loop
fdivp
xor
outsb
test
dec
dec
push
add
inc
or
daa
adc
push
sahf
push
xor
or
ds
mov
jae
rclb
mov
lahf
into
mov
xchg
shlb
cmpsb
jg
sahf
pop
enter
jo,pt
sti
or
outsb
loop
mov
mov
push
das
fiaddl
jp
jmp
mov
inc
mov
push
or
push
outsb
scas
cmp
dec
daa
hlt
jne,pn
and
pop
and
and
mov
lcall
test
sub
add
loop
stos
pusha
out
pop
mov
jle
mov
or
adc
inc
xchg
adc
xor
dec
daa
test
fidivs
xchg
cmp
mov
cli
jno
adcb
sbb
sbb
out
push
push
shll
cs
loop
int
push
cmp
sahf
lds
push
jno
inc
push
add
ret
add
jne,pt
xchg
lods
mov
jo
loope
pop
and
lahf
jle
sub
ss
outsl
sub
cld
scas
lret
sub
es
push
pop
mov
imull
int
lret
push
push
stos
mov
push
jmp
call
dec
testb
cli
popf
mov
sbbb
cli
dec
outsb
je
loope
imul
inc
add
pushf
ds
jl
mov
into
in
imul
inc
sbb
dec
or
or
lds
jnp
cs
and
pop
test
push
bound
into
pop
push
gs
mov
sbb
jmp
pusha
and
xchg
sub
xor
mov
cmc
pop
pop
inc
stos
and
inc
inc
pop
ja
fucomp
xor
push
loopne
and
xchg
outsb
mov
push
or
sbb
and
les
daa
loop
and
adc
or
add
push
lea
nopl
or
movsl
ss
push
push
adc
test
sahf
push
or
cs
ss
xor
pop
adc
dec
scas
xor
xchg
cmc
cmpsb
cmp
or
xor
mov
or
mov
mov
push
das
jo
or
int3
das
sbb
xchg
mov
xchg
cmc
faddl
aad
push
das
mov
cld
sub
mov
pop
add
cmpsb
sbb
div
xor
mov
push
cld
dec
sbb
fisttpll
daa
xchg
lret
bound
in
xchg
pop
in
jp
cs
daa
out
xchg
pop
loop
outsl
js
mov
rcrb
xor
xchg
xchg
mov
cmpsb
fidivrl
xchg
xchg
scas
inc
les
shll
jne
push
pop
jno
mov
neg
repnz
push
jl
test
out
repnz
repnz
sahf
jle
dec
ret
cmpsb
mov
pop
ljmp
fiaddl
into
mov
mov
dec
or
jne
jp
jnp
es
clc
negb
jno
test
je
cmp
call
popl
sahf
mov
mov
je
addr16
push
ljmp
mov
movsb
add
cmp
cmpsb
cli
faddl
or
mov
xorb
fiaddl
add
cmp
mov
das
testl
push
inc
push
cld
mov
das
sti
outsl
push
dec
orb
cli
push
mov
push
addr16
addr16
imulb
adc
aas
xchg
mov
lahf
push
jl
push
subb
scas
add
test
push
mul
push
call
mov
xor
mov
mov
mov
out
sbbb
mov
ss
cmp
aam
dec
scas
or
mov
dec
lcall
pop
push
test
call
add
or
sub
sub
in
xorb
outsl
ret
sub
mov
mov
dec
out
dec
push
ljmp
dec
push
imul
fsubs
sarb
sti
mov
cmc
sub
into
cmp
jne
idivl
out
jne
and
sub
test
push
popa
ss
sbb
cltd
dec
repnz
inc
jnp
add
sahf
mov
xchg
repnz
cld
or
inc
stc
lahf
insl
repnz
mov
push
hlt
int
and
sub
jne
lcall
fst
stos
out
test
push
push
jb
xchg
mov
outsb
add
mull
push
sarl
ss
cmp
ss
cmp
sub
mov
cmp
jb
jnp
sti
shrb
sarb
in
ljmp
and
sahf
subl
in
lcall
jnp
cs
sub
cmp
repz
pop
icebp
mov
dec
add
into
js
cmpsb
mov
push
cld
dec
std
dec
sahf
out
push
mov
jle
in
jbe
addl
pop
xor
std
call
jnp
pop
das
and
out
into
scas
mov
mov
inc
out
das
jle
mov
dec
ds
out
jg
ljmp
out
sub
pop
jno
mov
inc
cwtl
jns
jno
and
sbb
scas
cli
push
cmpb
mul
pop
sub
lret
int3
push
jecxz
dec
insl
addr16
movsb
mov
mov
dec
mov
rcrb
test
imul
or
add
push
xchg
push
mov
stc
xor
mov
and
dec
shlb
mov
xchg
xchg
mov
dec
mov
push
andl
mov
adcl
je
outsl
es
mov
pop
cmpsb
push
mov
sub
ja
xchg
sbb
push
jp
xchg
inc
imul
push
pop
lds
jge
sbb
push
stos
push
inc
mov
daa
stc
mov
in
sub
decb
mov
pusha
mov
pop
stos
shlb
push
into
ss
and
test
xchg
outsl
xor
scas
daa
mov
ss
push
outsl
jp
and
push
mov
rol
cmp
cmp
mov
sub
inc
push
xchg
push
cmp
push
iret
int3
dec
stos
fdivrl
mov
lahf
es
sarl
js
fisttpl
das
jo
test
mov
inc
jb
dec
mov
outsl
sub
add
jb
sahf
jne
cmp
and
xor
outsl
pop
mov
mov
or
or
add
shrb
mov
and
jb
mov
icebp
pop
add
sub
fidivrs
icebp
pop
aam
mov
mov
cld
sub
std
push
imul
clc
test
xlat
pop
push
jno
lds
repz
adc
notl
outsb
xchg
std
insb
inc
inc
dec
notl
pop
dec
into
mov
es
out
das
daa
mov
ja
xor
insb
pop
mov
push
dec
or
mov
ljmp
or
rolb
mov
inc
xchg
movsl
xor
outsb
cmpsb
mov
int3
cmpsb
sahf
dec
repz
jbe
je
cli
scas
mov
ljmp
hlt
jne
jns
retw
add
out
out
dec
in
notb
mov
sub
je
dec
mov
mov
clc
mov
js
outsl
loop
sbb
divl
and
cs
xchg
movsb
scas
test
mov
pop
ds
ds
mov
cmc
mov
xchg
scas
pushl
pop
cmp
push
movb
xchg
or
repz
jbe
loopne
lods
jecxz
loop
cmp
push
add
cmpsb
sub
cmpsl
xchg
mov
dec
xchg
sub
sahf
sub
repnz
or
outsl
mov
jno
fwait
push
lcall
mov
jp
ds
mov
sarb
mov
or
ret
adc
sub
scas
adc
shlb
and
inc
xchg
fisttpl
sub
cmpsb
out
sahf
lret
mov
fisubrl
ss
mov
dec
inc
cvtpi2ps
in
sub
jbe
push
inc
inc
push
jmp
repnz
out
adc
out
xlat
and
mov
ret
adc
notb
imul
cmpsl
fsts
sub
ds
inc
std
jg
push
nop
rorb
mov
decl
dec
jle
test
and
inc
adc
jle
mov
xchg
lret
outsl
inc
xchg
ds
in
fisubrl
outsl
aaa
testb
jbe
xchg
cmpsb
mov
add
mov
push
jae
pop
outsl
jp
push
fisttpl
sahf
dec
cwtl
xor
repnz
loop
mov
mov
xlat
xchg
dec
pop
inc
daa
mov
loopne
stos
jbe
jb
mov
cmp
jb
cmp
pop
js
xchg
jbe
subb
ljmp
lock
movsl
cmovp
push
les
das
jns
iret
push
int3
outsl
mov
int
cli
div
mov
jbe
mov
out
pop
ljmp
stc
inc
jp
call
mov
push
std
mov
mov
subb
dec
setb
xor
lret
js
jo
xor
add
mov
or
scas
inc
push
xor
sub
cs
mov
repnz
ss
push
rcrb
dec
mov
sub
cltd
mov
add
dec
mov
mov
push
push
addr16
sub
into
jl
dec
hlt
jecxz
lret
xchg
ret
mov
xor
jae
cmp
jbe
sbb
mov
push
call
sbb
pop
pop
xor
push
xchg
daa
cmp
inc
stos
push
and
push
aaa
outsb
imul
in
pushf
push
jnp
sbb
cld
and
rol
dec
jno
jle
pmullw
nop
cwtl
add
xchg
arpl
sbbb
adc
mov
andl
mov
sub
add
adc
loop
mov
and
dec
sub
lock
sub
xor
std
add
ret
jo
stos
addb
rorb
lcall
pushf
xchg
inc
rclb
repnz
inc
imull
cmpsb
jle
ret
jmp
loop
cmp
das
jbe
pop
pusha
movsl
into
std
adc
aam
xchg
xlat
mov
cld
jno
inc
lret
sub
cli
mov
sub
xchg
push
or
cmc
jnp
mov
lds
push
cmp
loop
stos
stos
push
pop
push
pop
mov
or
mov
es
push
sub
mov
test
sti
jb
mov
or
jbe
test
sub
inc
data16
outsb
add
jno
cmpsb
sub
mov
dec
cli
inc
push
aaa
mov
sbb
ljmp
add
ljmp
sub
cs
imul
push
cld
jp
orb
sti
push
std
in
sahf
push
mov
inc
ds
ss
mov
mov
insl
movsl
stos
divb
cmpsb
pop
jl
cmp
imul
xor
ds
outsl
decb
cmp
or
and
pop
push
mov
xor
lods
repnz
mov
mov
data16
xor
ds
and
enter
jg
adc
mov
jecxz
dec
mov
mov
shll
aaa
mov
mov
pop
mov
jne
sbbl
push
outsb
notb
pop
pop
xchg
seto
pop
rcrb
dec
push
dec
push
loop
push
daa
cmpsl
aam
mov
xlat
mov
out
imul
lock
out
ja
js
pop
push
iret
sub
sbb
loop
mov
push
lods
fdivp
xor
in
jo
ljmp
jb
fsub
pop
xchg
mov
sub
andb
cli
xor
pop
mov
cmp
push
xchg
adc
stos
lret
sub
test
js
lret
push
insb
mov
mov
rorl
mulb
push
add
dec
cwtl
xchg
es
shll
push
test
inc
outsl
ljmp
in
mov
aas
addr16
mov
jbe
jp
sbb
cmpsl
push
pusha
jg
call
js
andl
cmpsb
pop
out
andb
clc
loop
scas
pop
pop
dec
add
xchg
out
mov
das
cmpl
dec
pop
cwtl
shl
pop
shrb
mov
dec
pop
scas
add
push
sub
xchg
xchg
push
out
sub
dec
ds
jno
notb
out
mov
mov
inc
jp
inc
test
mov
mov
lea
jp
mov
enter
lcall
cmp
jp
std
data16
outsb
push
or
mov
cmp
mov
pop
xchg
pop
popf
into
ret
ficomps
jno
adc
pop
mov
mov
pop
push
ror
out
aas
sub
daa
insb
sub
out
add
mov
xchg
fiaddl
cmp
mov
sub
xor
inc
mov
pop
add
incb
sub
sub
sahf
out
pop
out
scas
jl
xor
xchg
inc
addr16
enter
daa
lods
mov
sub
sub
xorb
hlt
es
in
fisttpl
mov
inc
lret
or
xor
aaa
stos
push
and
pop
xor
push
mov
lods
call
xlat
ss
sub
ljmp
jno
sub
dec
in
mov
push
pop
sub
sub
and
sbb
sbb
pop
and
inc
jo
outsl
ds
sahf
icebp
pusha
push
push
jmp
das
imul
dec
pop
mov
popa
adc
sub
enter
mov
inc
xorb
push
dec
int3
dec
push
push
pop
add
jne
mov
xor
movsl
je
popa
testb
mov
test
mov
pushf
mov
xchg
leave
imul
mov
pop
push
push
pusha
pusha
push
pop
sub
inc
adc
pop
pop
mov
lret
sub
push
sub
xor
adc
aam
adc
loope
sti
out
and
insb
dec
ret
push
movsl
push
aam
dec
das
scas
jbe
outsb
xchg
jge,pn
rorl
and
jmp
rolb
shlb
stos
lea
sub
je
and
loopne
cmp
add
pop
jge
movsb
pop
loop
jle
lds
psllq
loop
sbb
sub
pop
pushf
lret
addr16
fwait
data16
mov
daa
dec
lret
adc
adc
cs
gs
pop
and
fisubrs
add
xlat
outsb
jle
das
rcrl
test
pop
sub
inc
addr16
sub
inc
fsubs
xor
aaa
lods
bound
push
mulb
xchg
es
xchg
cmpsl
pop
sub
mov
xlat
push
out
es
pop
cwtl
test
imul
cltd
pop
es
fsubrs
mov
leave
lcall
mov
fldcw
or
insb
dec
mov
mov
lret
jmp
or
jl
pushf
lods
es
or
pop
es
jge
popf
lods
mov
std
or
jge
inc
mov
pop
test
sub
test
dec
cmp
cs
cmpsl
mov
out
notl
xor
mov
test
cmp
pop
cmp
dec
sub
cmpsb
sub
into
stos
leave
cmp
cmp
xchg
test
dec
test
add
jp
cmp
mov
xchg
and
fldenv
and
rolb
daa
and
jae
in
jno
sbb
aas
mov
sbb
pushf
es
cli
pop
dec
add
mov
xchg
js
pop
push
sbb
add
add
xchg
cmc
jns
sub
fs
inc
and
es
lret
dec
stos
clc
in
es
xchg
paddb
std
cmp
es
xchg
or
gs
rcl
int
subl
xchg
xchg
decb
movsb
int3
inc
add
push
jg
jge
cwtl
xor
js
pop
mov
add
sbb
out
adc
adcb
pop
mov
dec
or
std
inc
jno
push
mov
sarl
jecxz
push
mov
movsl
lock
xor
out
and
mull
add
pop
jmp
jnp
movsl
arpl
lods
data16
mov
mov
mov
sbb
and
fnstcw
adc
pop
or
inc
add
cmp
roll
add
fwait
jne
into
mov
mov
leave
cmp
icebp
in
es
pop
jl
jb
and
xchg
leave
add
and
inc
add
scas
inc
sub
mov
hlt
dec
es
leave
jg
push
push
sub
pusha
mov
jmp
fwait
ja
cld
xor
les
mov
mov
mov
es
imul
imul
mov
fidivl
in
mov
push
xchg
xchg
lahf
jb
loop
mov
mov
in
sub
push
adc
hlt
popa
enter
mov
xor
jne
ljmp
and
es
push
and
iret
pop
push
es
in
fnsave
lahf
cmp
pop
adc
movsl
mov
test
imull
mov
sbb
cmp
mov
dec
shr
sub
out
hlt
mov
lret
out
es
pop
mov
xchg
xor
es
stc
fldenv
inc
pop
adc
cmpsl
jmp
inc
pusha
loop
out
sub
popf
shr
es
loope
sbb
jl
dec
mov
loop
xchg
insb
ss
in
and
sbb
in
iret
mov
add
jne
outsl
fildl
sub
dec
scas
movsl
adcb
lsl
int
out
out
mov
mov
adc
es
js
adc
fs
lods
stos
setl
cwtl
cmpsb
incl
mov
fsubs
cmpsl
mov
insl
mull
mov
jne
adc
sbb
xchg
xlat
ret
es
sbb
arpl
movsb
shll
rcrl
fucom
mov
mov
in
and
es
mov
add
adc
push
in
pop
push
inc
push
lcall
arpl
sbb
es
or
sbb
mov
cmpl
aad
loope
xchg
xchg
sbb
enter
sub
ret
insb
vaddsubps
stc
sub
push
mov
pop
cs
and
shld
mov
push
mov
xor
pop
cmp
xor
push
insl
aam
jl
aas
in
xlat
lcall
in
fbld
adc
cmpsb
and
shll
adc
mov
jae
test
daa
in
aad
push
jmp
mov
mov
xor
popa
cmpsb
and
add
enter
shll
imul
adc
xor
mov
test
sub
das
dec
enter
roll
mov
lea
pop
mov
push
es
add
and
std
adc
es
pop
imul
sub
loopne
adc
addl
push
cli
in
and
es
aas
loopne
mov
mov
or
add
mov
xchg
es
mov
push
fcmovnbe
mov
shll
adc
ja
mov
cmp
stc
dec
es
scas
in
js
es
insb
add
xor
pop
xchg
add
mov
scas
test
gs
add
lods
add
ljmp
jbe
inc
jp
rcrl
mov
mov
mov
jge
in
lods
into
xlat
frstor
and
ds
sti
mov
ficoms
push
movsl
pop
loopne
rorl
and
adc
out
add
loopne
callw
jmp
sub
rol
stos
inc
daa
in
lret
loope
sbbb
xchg
inc
data16
movups
movsb
sub
xchg
lahf
lahf
xor
add
xchg
daa
xchg
test
sbb
dec
mov
push
fidivs
aas
xchg
int3
pop
repnz
scas
cwtl
add
fs
dec
lods
inc
js
mov
adc
daa
mov
dec
adc
dec
fisubl
pop
shr
frstor
aad
xchg
es
sbbb
ffreep
xor
jo
jbe
dec
mov
movsb
imul
xchg
popa
sub
add
movsb
aad
dec
add
popf
imul
or
adc
std
mov
pop
in
and
int
in
vpshaw
into
mov
cs
dec
mov
pop
jmp
fsubr
xor
jmp
mov
and
mov
jns
test
inc
out
sub
cmpsb
cmp
cs
dec
push
sti
xchg
sarb
fsubp
addl
fs
and
ret
es
adc
adc
mov
fwait
xor
push
es
lds
and
rclb
ficoms
outsb
dec
xor
jmp
pop
xor
mov
mov
adc
enter
daa
shlb
and
mov
inc
sub
pop
insb
inc
ds
bound
mov
push
and
stc
sub
adc
cmp
sub
sbb
inc
mov
es
or
push
xor
dec
jp
es
in
clc
paddd
push
sub
insl
es
es
mov
fadd
es
ss
xor
dec
and
and
in
inc
sbb
ja
adc
popa
gs
lods
popf
ds
cmp
jge
xor
fsubp
push
mov
xchg
inc
subb
es
or
lret
pop
xchg
xchg
xor
and
shlb
mov
call
fs
daa
lcall
push
shlb
repz
repnz
sbb
inc
pop
cltd
cmc
and
or
sub
mov
sbb
xor
stos
test
in
cli
mov
pusha
sub
and
into
and
inc
mov
jecxz
inc
or
dec
and
loop
adc
cmp
and
loop
rolb
mov
pop
push
sahf
je
lret
mov
and
inc
js
in
daa
movsl
mov
jl
and
hlt
fs
xorl
sti
xchg
jp
and
stos
scas
xchg
ret
add
or
xor
cmp
pop
push
sub
xor
aad
es
movsl
clc
nop
sbb
pop
xlat
or
xor
data16
push
xchg
xchg
es
jecxz
adc
jb
push
popf
sbb
pop
aad
mov
xor
loope
lea
adcb
push
pop
das
push
shr
mov
sub
push
push
mov
jg
cmp
aas
xor
cmp
pop
stos
sub
pop
lret
iret
ss
inc
sub
lock
pop
jmp
dec
pop
xor
xor
dec
mov
dec
lcall
mov
xchg
mov
cmp
jp
sub
mov
cmp
push
lods
dec
jp
push
pop
xchg
xchg
js
daa
sbb
add
sbb
push
sub
sub
inc
inc
mov
mov
push
dec
sub
or
sub
test
cmp
rcrb
push
push
roll
sub
data16
xchg
dec
fwait
xchg
add
movsb
sub
mov
mov
lret
cmpsl
lds
jp
ret
xchg
xor
mov
in
xchg
lods
les
mov
mov
xor
mov
jl
jb
xchg
lock
cmp
push
das
sub
orb
xchg
cmp
pop
icebp
and
cmp
imul
jne
call
lods
mov
pusha
or
mov
jb
xor
outsl
xchg
lea
es
sub
jle
jne
dec
cmp
cltd
lea
xchg
lcall
leave
loope
xchg
sub
outsb
cwtl
jae
mov
gs
aas
jl
cmp
cmpsl
cmp
lea
aaa
xor
dec
sub
push
clc
cmpsl
push
pushf
inc
pop
or
cmp
xor
mov
push
lods
fs
xchg
outsb
das
dec
cmp
mov
dec
outsl
inc
cmp
xor
and
dec
xor
mov
outsb
dec
lret
and
push
js
scas
aaa
mov
add
pop
xor
das
lret
mov
add
fcomps
dec
mov
sbb
xor
cli
xchg
sub
add
mov
inc
jbe
mov
lcall
jnp
dec
int3
dec
mov
sub
and
mov
inc
xchg
cltd
push
xchg
outsb
xchg
xor
sahf
push
push
repnz
out
mov
movsb
arpl
adc
xchg
push
or
insl
outsb
mov
je
mov
xchg
repnz
mov
dec
gs
pusha
out
xchg
xchg
or
xchg
add
inc
imul
push
imull
pop
jle
jbe
jmp
push
adc
push
pop
bound
xor
xchg
mov
dec
add
cmpsb
mov
jne
inc
xchg
pop
ficomps
xchg
jle
fcomps
sub
pop
inc
push
imul
xchg
cli
sahf
pop
xchg
jb
mov
adc
add
mov
xchg
push
cltd
mov
in
cmp
xchg
fs
ret
mov
push
pop
pusha
push
push
ret
fistpll
aam
and
sti
sbb
pop
and
and
xor
movsb
jae
dec
mov
cltd
mov
mov
push
popf
inc
sub
xor
jns
movsb
xor
pop
pop
pop
mov
pop
push
bound
out
push
or
xchg
jle
iret
xor
shlb
testb
jg
pop
pop
push
xor
xor
inc
test
mov
sti
pop
inc
inc
pop
leave
scas
or
mov
fldenv
popf
lahf
fs
iret
cmp
in
out
lods
mov
ficompl
mov
pusha
mov
inc
pop
mov
scas
lds
and
jle
enter
fwait
ja
pop
push
fisubrl
push
jg
or
push
mov
cmp
push
adc
sti
popa
rolb
call
push
fs
clc
jmp
xor
inc
jp
mov
pop
push
and
ss
fldcw
arpl
or
sub
push
xor
dec
adc
pop
loope
xor
stos
xchg
fs
ret
push
sbb
stos
jg
in
jne
cmc
test
scas
cltd
xchg
xchg
mov
outsl
jno
pop
xorl
mov
out
cmp
or
cmpsl
sbb
push
push
std
call
pcmpgtb
fs
out
dec
jecxz
cwtl
lret
cltd
pop
lock
aas
push
pusha
mov
inc
mov
cmpsl
xor
stc
enter
push
pop
cmp
pop
daa
andb
cld
xorl
xchg
test
popf
add
dec
lahf
or
push
sub
daa
jbe
sub
adc
sub
inc
daa
les
loope
push
cs
sub
or
test
pop
sub
sub
add
inc
xor
inc
sub
or
or
ss
addl
sub
inc
sub
jge
or
test
cld
pop
and
in
in
mov
shlb
or
ja
cmp
sub
pop
pop
es
push
dec
cwtl
test
dec
imul
cltd
es
leave
fstps
jp
lcall
test
es
jl
jnp
dec
inc
sbb
sbb
mov
mov
cmc
pop
outsb
jle
sahf
es
mov
push
push
es
pop
outsl
jg
lahf
scas
mov
decl
pop
push
pusha
es
nop
mov
das
lock
and
cltd
sub
jecxz,pn
mov
sub
fsubrs
es
xlat
push
cmp
aad
es
pop
pop
dec
es
imul
call
or
test
shll
dec
pop
imul
loop
pop
sbb
in
jmp
aad
jecxz
loope
pop
insb
push
hlt
inc
insb
fcmovu
xchg
fnstenv
imul
pop
mov
cmp
pushf
push
adc
rcl
jge
mov
jmp
xor
imulb
outsb
jbe
sub
cmpsb
popf
pop
into
es
cltd
out
inc
sbb
inc
stos
std
pusha
roll
add
mov
fs
stos
pop
pusha
imul
in
mov
fdivrp
sti
cmp
int
add
mov
not
cmp
fsubs
in
pop
negl
xchg
and
sub
pop
push
repnz
es
inc
xchg
sub
es
pop
mov
pop
or
add
es
jmp
xchg
notl
fstl
subl
add
mov
add
test
and
scas
in
mov
pop
inc
mov
mov
es
jmp
dec
jle
movsb
sub
adcl
pop
arpl
cwtl
insl
jle
ljmp
fwait
xchg
scas
mov
addl
fcmovu
mov
mov
jne
scas
les
cmp
inc
stc
pop
stos
scas
rcl
outsb
adc
push
out
mov
leave
sub
scas
scas
push
push
or
cmp
fdivs
push
test
daa
add
clc
fildl
cmp
es
push
scas
es
cmc
rorb
pop
cmp
mov
cld
mov
repnz
jno
movsl
das
add
pop
es
insb
jg
es
inc
inc
aas
mov
movsl
mov
inc
jno
pop
daa
bound
mov
enterw
inc
sbb
out
sbb
xchg
pop
xor
es
out
aad
sbb
outsl
in
loopne
ror
cmp
fildll
sti
mov
xlat
mov
clc
mov
jo
lahf
jg
imul
pop
fisubrs
add
xor
shr
mov
fadd
sbb
or
mov
adc
out
mov
out
ret
fldl
xchg
lret
inc
cld
bound
call
and
std
or
out
push
cmc
sub
push
xchg
sbb
rcr
add
loopne
xchg
andb
fdivl
es
rolb
lock
xchg
in
adc
sbb
sbb
shr
and
fs
add
lea
pop
inc
loopne
pop
push
jmp
lods
cmp
outsl
xchg
jae
push
lock
insl
mov
or
in
mov
sbb
out
repnz
dec
fs
roll
rorb
xchg
cmpsl
mov
pop
es
iret
xchg
cltd
fbld
add
stos
dec
jbe
mov
test
xor
test
adc
es
inc
ljmp
arpl
push
fnstsw
in
jecxz
mov
lds
xor
sub
pop
cmp
adc
scas
adc
sub
enter
xchg
push
or
movsl
inc
push
mov
and
mov
es
rorb
push
es
inc
sarl
and
das
ds
lods
hlt
andps
into
es
jmp
les
mov
dec
es
add
fs
jbe
out
insb
pop
mov
cmp
xor
je
in
daa
mov
test
loop
jmp
hlt
data16
out
mov
ret
lahf
mov
lock
addl
lahf
icebp
notl
in
xor
xchg
xor
mov
fs
mov
fmull
adc
push
pop
adc
add
mov
pusha
xchg
sub
pop
out
mov
and
mov
mov
sbb
cmp
or
mov
repz
movsb
aad
aam
ss
daa
mov
push
imul
movsb
mov
dec
andb
inc
es
push
fiaddl
ret
cwtl
xor
cld
movsl
test
add
lock
jecxz
inc
fld
pop
xor
push
jp
xor
aaa
push
add
cmp
sub
and
pop
sarl
xchg
jecxz
or
and
mov
int3
fimull
mov
in
outsl
sub
ljmp
push
dec
sarl
sub
fisubs
es
mov
fs
aas
lods
mov
fisubs
xchg
es
push
xchg
pop
popa
aad
sub
push
cmpsb
mov
jge
jae
sti
push
mov
out
aaa
fs
es
outsl
ja
cld
sub
or
or
aas
es
push
pop
and
xor
dec
leave
ficoml
es
icebp
mov
stc
lods
xchg
sar
pop
test
xor
dec
mull
iret
jne
pop
push
jae
xchg
es
repz
pop
cltd
ljmp
lret
xchg
test
es
lock
mov
mov
incb
setge
bound
lcall
dec
add
or
shrl
gs
lds
jp
aad
or
xchg
push
push
int
sub
ljmpw
add
roll
es
leave
push
idivl
pop
mov
int3
sarl
scas
cmp
outsl
or
enter
test
lods
sub
pop
adc
push
movsb
sub
testl
es
pop
ja
aam
test
dec
cmp
std
or
xor
adc
push
sub
mov
fs
es
data16
mov
xlat
shll
lods
test
inc
push
lock
imul
cmp
sbb
mov
mov
push
rcrb
xor
out
sar
mov
es
pusha
daa
inc
sub
sahf
data16
pop
add
fs
insl
push
pop
data16
cs
in
bound
int3
daa
cmp
xchg
pop
xor
lods
rclb
dec
lock
or
es
es
jle
inc
mov
leave
pop
stos
jnp
cmp
sub
sahf
xchg
orps
or
mov
adc
or
jns
shll
fs
cmpsb
jmp
cmpsl
mov
jne
ja
sub
sbb
xchg
mov
and
push
fdivr
pusha
daa
int
shlb
es
sbb
cmp
nop
mov
movsb
dec
ret
insb
sub
mov
scas
cmp
es
add
fwait
mov
imul
shrb
bnd
dec
cmpsb
subb
mov
jecxz
pop
ljmp
sbb
or
ret
xchg
pop
test
add
sbb
fwait
jge
pusha
xor
std
bound
push
outsl
mov
fsubl
adc
jp
and
aam
int
or
mov
xchg
adc
xor
test
aaa
in
inc
int
lods
and
dec
jbe
insb
test
ret
fucom
sbb
jno
pop
fnstenv
jmp
jae
les
insl
sbb
ret
sub
mov
jg
cmpsb
inc
sub
ss
dec
mov
pop
adc
dec
in
push
inc
popa
pop
outsb
push
mov
push
mov
pop
xor
ret
and
mov
sub
shrb
test
adc
mov
jb
jl
mov
mov
sahf
rcrl
lods
aaa
lds
int3
jbe
cltd
iret
es
test
adc
mov
repnz
xor
daa
imul
ljmp
aam
les
sbb
lea
mov
push
xlat
fcompl
cmp
push
orb
pop
idivb
fldenv
push
adc
cmp
addl
pop
das
inc
das
inc
popf
cmpsb
shll
or
cltd
jmp
data16
jb
sub
repnz
dec
es
sbb
inc
movsl
jge
sbb
or
cmp
add
es
dec
pcmpeqw
cmp
mov
or
and
push
cmovbe
test
mov
fstl
or
mov
mov
jne
xor
cld
pop
cmc
movsw
hlt
je
test
adc
sub
inc
xchg
sbb
out
mov
inc
pop
es
xchg
lods
or
adc
mov
es
xchg
jmp
push
es
outsb
adc
xchg
cmc
popf
fisubl
icebp
lret
out
sbb
jns
daa
pop
mov
sbb
scas
out
out
push
les
inc
lret
or
mov
mov
in
outsl
rol
add
lods
mov
mov
stc
dec
or
arpl
or
inc
out
jg
sub
pop
mov
int
mov
and
push
xchg
xchg
nop
filds
add
andl
out
dec
xor
bound
inc
inc
mov
mov
outsb
jmp
mov
nop
aam
es
add
arpl
or
mov
or
push
es
adc
xor
hlt
jle
das
rcll
es
adc
mov
sbb
mov
es
or
adc
es
pop
mov
pop
sub
fwait
jne
clc
push
mov
add
addb
out
sti
fists
add
out
mov
das
inc
dec
mov
decl
cs
jmp
inc
daa
mov
cmc
gs
test
add
stc
sbb
push
or
add
mov
pop
jmp
movsl
cmp
jp
fsubs
les
shll
xchg
ret
xchg
mov
clc
insl
daa
sbb
or
adc
mov
add
rorb
aas
or
or
cmp
outsl
push
or
jne
inc
lds
es
xlat
stc
jb
andl
icebp
insl
sub
outsl
xchg
fs
xchg
xchg
push
and
and
dec
icebp
mov
loope
test
pushf
mov
rcrb
or
sti
ret
push
pusha
out
or
imull
xlat
dec
mov
lahf
sbb
jecxz
les
xchg
sub
andl
mov
xor
jge
repnz
or
mov
jb
je
call
adc
or
pop
sbb
xor
cld
in
fmuls
insb
dec
pop
lds
leave
mov
scas
out
mov
inc
xor
js
cmp
sbb
daa
push
mov
mov
movsl
es
add
mov
test
cli
es
or
mov
fs
xchg
mov
shl
fdivrl
ds
and
xchg
mov
outsl
push
out
cltd
out
push
mov
daa
ljmp
cmpsb
mov
out
mov
mov
imul
jge
aaa
loopne
shll
pop
lds
int
imul
fildll
sbb
lahf
xor
sub
cmpsb
pop
push
cmp
inc
mov
dec
inc
or
xchg
flds
es
lea
push
inc
sbb
xor
je
fimuls
test
xchg
aam
es
push
dec
and
mov
jbe
fisttpl
out
arpl
lcall
xchg
or
rcl
add
in
cmp
pushw
xchg
or
dec
xchg
ja
es
pop
push
loopne
lock
mov
sub
add
and
adc
sub
jecxz
lds
jle
jno
sub
es
into
scas
mov
sub
stos
mov
call
xlat
pop
int
lretw
stc
dec
repz
pop
cmpsb
pop
lods
sbb
or
adc
xorl
jno
fists
mov
push
or
mov
gs
mov
fisubs
fcoms
scas
or
dec
add
std
lret
pop
out
xchg
push
push
cmp
jmp
jne
jle
xlat
or
lea
das
mov
mov
data16
mov
sbb
sbbl
shl
popf
hlt
gs
mov
pop
aad
lahf
xor
sub
pop
inc
arpl
push
addl
cmp
cmp
push
sbbl
imul
cmc
dec
cmp
mov
jns
push
pop
lret
daa
movsl
mov
loope
pop
das
repnz
enter
inc
push
pop
imulb
xor
shl
lret
std
or
pop
inc
or
cmpsb
ror
lahf
mov
lock
jl
sbb
adc
pop
cmpsb
push
jecxz
mov
mov
je
mov
lcall
push
sub
test
mov
es
adc
lea
inc
bound
aaa
push
es
mov
aas
fidivs
adc
adc
loopne
jle
inc
pop
gs
mov
iret
shlb
es
mov
fbstp
mov
sahf
andl
pop
xor
out
es
inc
stc
pop
lahf
in
pop
mov
cmp
adc
inc
mov
sbb
fmull
out
insl
scas
push
dec
es
pop
dec
gs
cmp
hlt
fs
movsb
test
je
pusha
stos
add
popa
pusha
mov
pop
ss
iret
jnp
addr16
aam
push
shrb
call
fsts
xchg
pop
pop
xchg
push
push
pop
es
mov
adc
inc
insb
dec
push
cmpsb
ds
es
fdivs
sbb
pop
or
sub
aad
mov
push
out
xchg
popa
iret
cmp
sub
mov
adc
push
or
repnz
xor
sub
mov
dec
adc
inc
or
mov
cltd
das
adc
call
mov
pop
pusha
cmp
cwtl
outsb
movsl
ret
movsb
bound
mov
xor
push
xor
cmp
xor
stc
and
adc
cmpsb
movsb
stos
push
cmp
fisttps
js
dec
xor
es
pop
push
mov
pushf
test
sub
push
lock
outsl
bound
dec
dec
inc
movsb
add
xchg
shl
das
clc
xchg
in
push
out
ljmp
mov
jmp
ljmp
mov
les
out
int3
or
fidivs
in
sbb
cwtl
push
dec
movsl
or
loope
cli
in
xchg
mov
push
int3
jmp
xchg
outsb
xchg
dec
nop
inc
push
xor
push
xor
nop
es
ljmp
jns
sub
icebp
sbb
or
fsubs
mov
pop
sbbb
data16
das
stc
gs
es
or
es
push
xorb
inc
push
int
fdiv
es
icebp
sbb
clc
pop
in
scas
insl
es
lcall
push
repz
xchg
movsl
mov
sbb
out
jmp
mov
push
and
jg
jl
adc
inc
xchg
movaps
sbb
in
mov
mov
std
lock
sbb
out
cmc
dec
outsl
xchg
dec
add
jmp
xorl
mov
frstor
popl
mov
adc
jp
push
in
dec
or
inc
pushf
xchg
cmp
pop
xchg
es
pop
add
arpl
adc
dec
adc
cld
test
stos
movsl
mov
addl
jp
loope
lea
imul
repnz
and
es
ljmp
bound
push
daa
adcl
xchg
push
imul
arpl
das
imul
lahf
gs
mov
es
lahf
mov
jns
add
cld
icebp
and
pop
xor
out
add
cmpsb
xor
insl
loopne
inc
adc
cmpsl
cmp
push
mov
sub
insl
or
adc
es
lds
lret
in
mov
cmpsb
arpl
mov
pop
cmp
inc
push
jb
jp
mov
lret
sub
xchg
arpl
mov
repnz
and
data16
lods
int
icebp
je
dec
push
aaa
mov
xchg
movsl
sti
jne
ss
mov
mov
push
jg
inc
or
pusha
adc
call
dec
adc
dec
mov
stc
es
fiaddl
hlt
popf
adc
cmpsl
lcall
clc
and
adcl
pop
popf
repz
sbb
es
jae
cmp
dec
arpl
movsb
repnz
ljmp
stos
jecxz
inc
xlat
out
sub
inc
es
in
jmp
push
mov
dec
ret
es
rcrl
mov
or
aam
mov
cmpsb
xchg
push
or
jecxz
dec
es
popa
out
out
mov
jae
dec
pop
pop
mov
es
inc
loope
arpl
xor
xchg
dec
aaa
ss
push
pop
stos
cmp
cwtl
sub
sbbl
mov
cltd
repnz
lods
scas
lea
mov
pop
xorl
sub
out
rcll
std
es
out
mov
repnz
xor
jp
cwtl
mov
push
orl
pop
aas
cmp
mov
xchg
clc
nop
popa
popf
sub
lea
syscall
and
aad
andb
loopne
cmp
push
insb
add
lret
inc
sub
cs
xor
xchg
mov
xchg
es
lods
push
imul
enter
push
jae
inc
stos
push
mov
inc
into
je
pop
jmp
out
adc
sub
es
fwait
shr
and
lock
les
adc
xchg
adc
mov
sub
out
dec
sbb
mov
mov
sub
int
add
addr16
shll
xlat
xor
sub
xchg
inc
nop
bound
into
stos
es
pop
pop
jae
sub
mov
pop
jne
xchg
and
pop
dec
inc
add
xor
es
imulb
xor
xor
mov
cmp
pop
dec
and
insb
sub
inc
lea
sub
or
pop
push
cmp
enter
ja
push
daa
daa
xor
nop
int
out
sub
sub
cs
sub
out
ss
push
and
lret
sub
mov
ja
popf
nop
mov
in
dec
push
jg
xor
dec
inc
and
stos
push
dec
adcb
and
mov
pop
pusha
push
sbb
and
inc
mov
sub
push
ss
push
lea
push
outsb
out
ljmp
cmc
xor
xor
and
push
or
fidivs
sbb
stos
sub
sub
out
das
inc
scas
aas
and
daa
fsubrl
jg
jecxz
call
popa
jmp
sub
scas
bound
cmp
mov
sub
sub
fwait
fwait
and
sub
sub
adc
jg
pop
pop
cmp
stos
inc
jo
inc
ljmp
data16
xor
xor
daa
inc
adc
cmp
ss
sub
push
xor
daa
xchg
xchg
fisttpll
clc
loope
push
or
xor
sbb
lods
daa
xor
insb
mov
cmp
push
out
icebp
mov
repnz
lods
test
fadds
push
xor
mov
mov
fdivs
pop
pop
xor
adc
fmulp
cld
and
mov
sub
cltd
sbbl
js
inc
sub
aaa
sub
dec
je
leave
repz
insb
aaa
push
in
pop
das
insb
and
ds
or
mov
xor
movlps
add
mov
dec
cwtl
imul
pop
lcall
inc
push
sbbb
movsb
mov
jo
fwait
jae
xor
popf
adc
cmp
jl
popf
cwtl
cmp
dec
cmp
jg
mov
sti
pop
sub
in
lret
filds
or
cli
mulb
sbb
dec
fsubp
jo
repnz
dec
daa
call
enter
lea
mov
mov
aas
pushf
adc
cmp
push
pop
dec
cmp
inc
dec
fisubrs
and
ret
cmc
ljmp
jg
in
xorb
mov
cli
ret
stos
mov
mov
subl
cmovs
rorl
fistps
rcll
push
sar
icebp
or
ds
or
push
lret
adc
push
xor
or
sbb
jmp
repnz
js
mov
pop
cmp
cmp
dec
push
lods
inc
mov
lret
daa
sub
hlt
repnz
adc
or
and
cwtl
rclb
xor
push
pushw
cmp
orl
sub
daa
sub
pop
shrb
jnp
mov
ds
fdivs
dec
cs
cmpsb
mov
push
xchg
mov
pop
aaa
mov
dec
sub
scas
and
mov
push
jb
scas
xchg
inc
imul
sub
pop
xor
cmp
call
pop
in
mov
lcall
push
cmp
jg
ds
mov
stos
push
stos
mov
cmp
out
sub
inc
push
xchg
subb
fmuls
dec
pop
inc
sub
sub
popa
mov
cmp
insb
mov
dec
pop
jp
fwait
or
pop
sub
add
mov
adc
popa
lret
daa
cmp
aad
pop
and
cmp
mov
cld
xor
inc
movsb
cmpsl
data16
sbb
repnz
inc
sbb
push
inc
cmp
pop
xchg
dec
sub
out
aaa
cs
stos
push
sbb
sub
sahf
loope
cmp
xor
add
testb
hlt
jae
xchg
sub
dec
add
ds
sub
lcall
nop
dec
aad
fidivl
inc
dec
inc
mov
sbb
xor
mov
ret
sub
xor
mov
jp
pop
cmp
lret
dec
push
sub
mov
push
daa
fwait
in
movsl
or
or
inc
dec
das
xchg
lret
test
dec
add
dec
and
je
pop
push
nop
fadd
jb
daa
mov
ss
push
jp
ds
negb
xchg
ds
lret
jbe
repnz
aas
into
mov
ds
inc
jns
xor
insl
lcall
fidivs
jle
jmp
sbb
shlw
or
and
dec
jnp
adc
inc
rcrl
dec
aas
xlat
aaa
xchg
cs
xchg
sub
mov
inc
cmp
ljmp
nop
pop
mov
jl
nop
pushf
lods
aas
outsb
das
pop
cmp
jno
cs
xor
xlat
in
mov
inc
sub
sub
xor
dec
adc
or
xchg
mov
mov
out
fwait
dec
mov
testl
inc
dec
mov
jg
sub
cmp
stos
inc
mov
fdivrp
dec
and
pusha
jb
stos
sub
bound
sub
movsl
insb
xchg
inc
stos
sub
push
inc
push
dec
lcall
testl
push
cli
or
dec
pop
addr16
fs
repz
pop
mov
stc
mov
xchg
add
push
inc
fisubrl
xchg
mov
ret
mov
inc
add
test
sbb
sbb
mov
aam
dec
cmp
stos
test
mov
pop
xchg
dec
xor
in
in
mov
gs
cmp
ja
mov
das
int3
mov
dec
push
inc
mov
insb
gs
mov
in
and
std
sub
rolb
sub
cmp
pushf
cmp
cs
push
jecxz
aas
push
test
xor
ljmp
cmpsb
jecxz
pop
jp
outsb
xor
hlt
cs
pop
cmp
inc
cmpsl
adcb
data16
jecxz
into
ss
and
jmp
sarb
pop
shl
enter
orb
mov
add
jo
sub
cwtl
mov
das
jle
jp
jbe
jb
mov
pop
das
xor
dec
or
loope
cmp
pop
shl
push
cmp
inc
mov
inc
xor
mov
pop
cld
sahf
jecxz
dec
xchg
iret
mov
dec
cs
call
sbb
ljmp
lods
push
xchg
cs
mov
mov
cmp
movlps
mov
out
orl
lock
xchg
jge
dec
sub
decl
push
mov
xchg
mov
jle
jo
or
jge
aas
push
dec
jns
pop
pop
sbb
adc
push
cltd
mov
sub
sub
mov
imul
js
cmp
fbstp
mov
mov
push
cli
inc
push
dec
push
xor
ss
aaa
das
cli
xchg
xchg
xchg
lcall
push
push
ror
push
mov
int3
insb
ds
imul
push
mov
out
sub
sahf
and
xor
int
test
cltd
ret
gs
scas
sub
xchg
push
sub
xchg
aaa
pop
bound
pop
pop
push
and
mov
ss
push
sub
andl
push
or
inc
xchg
mov
xchg
inc
adc
jl
pop
jnp
cmp
inc
and
cmp
mov
xor
pusha
dec
fstpl
aaa
insb
in
repnz
sbb
mov
cmp
inc
mov
xchg
push
xchg
add
fistpll
pop
fsubrl
jno
dec
out
stos
cld
or
ss
cmp
mov
inc
lcall
sbb
adc
dec
cs
loopne
addl
inc
xlat
push
mov
mov
and
into
pop
xor
pop
imul
imul
cmp
push
xchg
inc
es
aas
cmp
das
cmp
sub
into
outsl
mov
pop
ss
add
add
mov
pop
pusha
cmp
xchg
outsb
bound
mov
pop
lods
imul
pop
scas
push
cmp
dec
das
push
inc
fisttps
sub
sub
adc
and
je
outsb
sub
mov
mov
jae
dec
cmp
mov
push
add
mov
sbb
es
and
cwtl
outsl
daa
movsb
mov
ret
in
inc
bound
insb
jmp
xor
sti
dec
pop
inc
mov
fstps
inc
push
jb
pop
inc
nop
daa
push
xor
sbbb
jl
cmp
subb
push
bound
jno
in
roll
mov
orl
sub
out
mov
and
dec
inc
mov
xor
test
jmp
test
test
mov
and
into
and
dec
xchg
mov
ss
xchg
inc
xchg
jb
or
jo
scas
pushw
push
xchg
xor
add
mov
cli
push
test
data16
mov
xor
add
pusha
stos
jns
pop
cs
daa
pop
incl
jb
orb
sbb
pop
push
and
pusha
lds
das
sub
dec
das
cli
push
repnz
xchg
sub
lret
clc
or
cmp
push
cmp
add
push
loop
sbb
add
add
sub
stc
sub
dec
xchg
push
push
sub
in
xor
ficoms
dec
lahf
jnp
shl
pop
loop
imul
jle
add
xor
cmp
push
push
xchg
test
dec
outsb
dec
sub
mov
out
xor
dec
fcomp
insl
pop
push
jmp
sub
or
test
cli
roll
negb
or
sub
add
mov
xor
xlat
aas
inc
scas
fmuls
aaa
lods
jp
mov
or
sarb
arpl
inc
mov
pop
inc
add
inc
test
cmp
mov
push
xchg
push
pop
lods
rolb
jecxz
jg
or
cmp
xor
jb
pop
sub
cmp
dec
ror
dec
fsubrl
test
ret
aaa
ret
enter
add
out
pop
mov
fdivrl
or
push
jb
adc
mov
outsb
addr16
scas
cmovp
sub
mov
sub
pop
out
repz
mov
dec
pop
repnz
dec
dec
roll
mov
jno
js
add
push
fdivs
sahf
and
xchg
testb
addb
dec
mov
sub
pop
jle
orl
xrelease
and
arpl
adc
je
pop
cli
test
loopne
out
xchg
mov
sti
pop
imul
cld
jp
jno
outsb
xchg
outsb
mov
sub
sahf
cmpsl
sub
and
xor
mov
lea
iret
stos
and
or
inc
out
imul
dec
in
scas
inc
mov
or
or
cmp
mov
push
dec
gs
fadds
xor
mov
pop
js
orb
fcoml
push
outsl
cmc
inc
iret
loopne
ret
sub
inc
jne
into
sbb
bound
dec
cmp
cmp
out
mov
inc
inc
or
sub
xor
push
add
add
ret
into
sub
lcall
inc
adc
mov
mov
sbb
inc
mov
mov
and
ret
in
inc
mov
adc
jo
movsl
inc
repnz
xor
rolb
pusha
dec
pop
call
sbb
inc
les
loop
gs
sub
push
adc
jle
scas
xor
xchg
cmpsb
xor
jae
xlat
and
jle
mov
push
and
sub
inc
xchg
outsb
jp
stos
xchg
or
pop
ds
mov
pushf
cld
and
mov
das
sub
mov
xchg
and
mov
cltd
add
lock
or
cmp
aad
ljmp
or
adc
mov
or
add
dec
cmp
xchg
adc
lahf
ljmp
ja
push
fimull
push
inc
ss
in
bound
xor
sub
data16
cmp
mov
sub
push
test
inc
cmp
xor
inc
inc
push
xchg
lock
cmp
int
ss
jl
ss
xor
push
imull
cmp
ljmp
xchg
repnz
test
fiadds
loop
pop
dec
leave
cmpsb
sub
xor
dec
mov
pop
aaa
mov
divb
shlb
push
loopne
mov
cs
push
xchg
or
and
ljmp
pop
and
clc
mov
inc
sahf
scas
sbb
push
outsb
dec
jnp
sbb
or
into
xor
sbb
inc
stos
aam
bound
lahf
imul
sub
out
pop
pushf
mov
jnp
xchg
or
mov
dec
or
mov
in
jg
lock
push
jae
xchg
jae
dec
cmp
fidivs
stos
mov
orb
test
ret
cmp
gs
dec
fsubp
cmp
add
push
jle
test
les
jp
insl
daa
sbb
pop
or
movsl
dec
sub
mov
out
sub
xchg
cmc
fld
idivb
or
dec
shrl
sub
rcrb
leave
sbb
outsb
inc
jecxz
and
cli
push
call
scas
push
fcomps
jg
push
pop
dec
pop
jns
lds
mov
xchg
enter
dec
add
fidivl
lret
push
enter
lea
shr
dec
imul
aaa
xchg
ljmp
and
insb
xchg
out
jp
sub
push
and
mov
xchg
cmp
mov
jns
inc
push
lcall
inc
dec
and
decb
jo
push
adc
pop
xor
xor
fadds
cmp
imul
xchg
jl
xchg
and
jb
outsb
outsb
jb
push
sub
aam
lea
push
xor
jo
dec
push
dec
push
lcall
dec
mov
clc
out
adc
flds
lcall
js
mov
inc
lret
shrb
dec
stos
sahf
imul
pop
pop
sub
sub
inc
pop
jg
test
scas
pop
jge
mov
pop
stos
mov
mov
test
fcomps
mov
or
mov
fsubrs
fildll
popa
cmp
stos
lahf
xorb
out
imul
inc
arpl
andl
lret
xchg
outsb
push
inc
xor
sub
fs
xchg
inc
push
mov
pushw
mov
xchg
inc
xorb
sbb
inc
xor
jb
mov
mov
bound
insb
pop
cmp
sahf
cmpsl
cmp
inc
mov
dec
out
imulb
je
adc
push
sbb
sbb
insb
mov
cs
outsb
ss
push
inc
pop
add
shrl
dec
jl
and
loop
sbb
aaa
ss
inc
inc
cmp
jle
out
mov
outsb
inc
sbbl
push
push
mov
data16
addb
js
xor
pop
rorl
subb
push
cmp
loop
push
and
push
outsb
out
sub
xor
cmp
test
xor
cmp
lcall
mov
sbb
mov
lods
stc
fnstcw
test
push
mov
sub
dec
mov
sub
and
jb
nop
mov
scas
test
jle
icebp
xor
sub
in
adc
dec
sti
cs
sbb
xchg
ss
mov
inc
or
adc
xchg
mov
jb
mov
jmp
push
sub
fidivrl
xor
les
sbb
sarb
aam
mulb
cmc
pop
dec
scas
lea
adc
push
xchg
ret
fmull
inc
sbb
rcl
fs
sbb
or
adc
pop
and
jb
xchg
orl
lahf
xchg
lds
sub
mov
ljmp
repz
push
push
push
dec
or
push
xor
jne
add
loope
xchg
shlb
lea
sub
mov
xchg
dec
dec
lods
ljmp
cmpsl
aas
sub
xor
jno
outsl
push
in
int
or
ret
or
jns
hlt
mov
pusha
add
sub
jg
fists
xor
data16
jg
cmp
ljmp
arpl
jecxz,pt
cs
sub
and
popf
sub
pop
arpl
sbb
movl
pop
mov
cwtl
inc
les
dec
aad
adc
adc
loop
xchg
daa
jbe
and
call
fadds
push
sub
sub
iret
cmpsb
clc
sbbb
aaa
pop
dec
dec
test
mov
lret
mov
pop
cmp
push
inc
push
pop
xchg
xor
mov
adc
out
push
xor
jnp
adc
imul
push
ss
inc
push
or
jns
dec
jbe
push
jl
dec
add
mov
sub
pop
inc
cmp
outsl
sub
rorb
in
inc
inc
les
cs
adc
dec
sub
dec
push
out
stos
insb
xchg
out
dec
mov
mov
xchg
push
xchg
mov
dec
sub
insb
add
cmp
jbe
addr16
rorb
mov
push
iret
xchg
sub
jbe
or
inc
popf
fidivrs
fmuls
outsb
xchg
mov
push
inc
mov
push
lods
into
cmp
xchg
xchg
loope
mov
daa
mov
inc
inc
imul
fwait
sub
or
cmpb
mov
sti
leave
or
cmp
shrl
jmp
mov
sub
sbb
or
xchg
ss
mov
int3
fsubr
xor
hlt
cld
mov
sub
arpl
cmp
xchg
lcall
xchg
pushf
inc
push
in
stos
sub
jle
mov
cmp
out
scas
fstps
sub
test
je
pop
pop
xor
inc
jnp
xor
sbb
jmp
push
pop
adc
das
xchg
xor
jmp
lds
je
ds
cmp
shl
xor
lahf
cmp
dec
and
in
cmpsb
and
cltd
lcall
out
dec
xorl
xchg
fbld
push
fstps
push
outsb
addr16
fldt
sub
mov
loopne
stos
loop
iret
pop
sbb
mov
or
iret
imul
sbbl
adc
inc
sub
pusha
arpl
cmp
pop
daa
sub
gs
js
or
adc
jmp
test
enter
jo
cmp
adc
adc
pop
mov
cltd
test
test
inc
lods
sub
sub
dec
out
dec
jo
test
das
sub
push
aaa
sub
push
dec
jmp
add
sub
xor
repnz
fcmovnb
movsl
adc
cld
sub
pop
sub
sub
stos
insl
sub
stos
xchg
sub
stos
shrl
pop
sub
insl
or
call
imul
sub
cwtl
sub
lret
mov
mov
out
ljmp
or
xor
mov
repz
inc
addl
lahf
jbe
into
pop
mov
ss
sub
push
inc
mov
jmp
xchg
ss
adc
inc
popa
pop
mov
mov
adc
das
data16
shlb
sub
bound
add
movsb
sbb
jle
push
ljmp
fs
add
imul
nop
add
inc
xor
movsl
and
inc
xchg
mull
mov
repz
dec
add
pop
xor
mov
mov
xor
inc
in
jl
xor
push
test
xor
push
mov
cmpsl
push
dec
faddl
xor
inc
pop
cmp
ret
lret
test
and
fcoml
xchg
stc
sar
jecxz
mov
pop
xor
imul
jns
outsb
sbb
sbb
mov
mov
jbe
xor
std
cmp
xchg
punpcklbw
pop
pop
or
imul
sub
push
inc
ret
sub
jl
gs
adc
inc
mov
lahf
xor
lcall
xor
mov
fsubrs
push
out
cli
sub
inc
dec
mov
inc
pop
lret
fs
hlt
xchg
dec
xchg
and
das
ret
sub
ljmp
das
ss
push
iret
mov
mov
outsb
lock
xor
push
addr16
xchg
pop
pop
and
mov
dec
push
add
movsb
mov
dec
fucomp
pop
push
cmp
push
xor
inc
lret
lret
idivl
or
clc
aam
jle
jp
and
push
les
jmp
das
lods
cmp
sbb
xchg
inc
jle
and
sub
inc
rolb
mov
sbb
sbb
inc
inc
mov
sbb
lret
mov
mov
jbe
out
and
or
xor
push
dec
inc
aas
pop
js
data16
jne
inc
push
leave
or
xor
imul
int
inc
inc
addr16
jb
sub
js
inc
cmp
pop
outsb
pop
mov
sub
inc
inc
inc
rcll
mulb
stos
jge
inc
ficoms
insb
or
lcall
testl
add
test
mov
mov
ss
out
cmp
movb
pop
and
test
movsb
mov
lea
outsb
data16
dec
fisttpll
lret
push
push
push
inc
xlat
push
pop
mov
add
mov
mov
mov
shrb
dec
xchg
hlt
call
dec
scas
icebp
pushf
mov
insb
pop
cmpsl
add
pop
neg
sarl
faddl
or
sbb
jns
add
sub
add
fcomps
sub
push
jae
push
pushf
mov
pushf
stos
push
lret
and
sbb
lea
mov
mov
aaa
dec
push
xor
xchg
insb
imul
dec
iret
cmc
pop
pop
mov
leave
add
mov
jbe
jl
enter
ljmp
out
add
pop
sahf
pop
fs
imul
and
jle
pusha
scas
mov
mov
dec
push
xchg
adc
cmp
cmpsl
push
pop
push
cmp
sub
jle
outsb
cmp
jp
das
cmpsl
cs
pop
cmp
pop
fmull
idivb
out
cmp
mov
xor
mov
mov
pusha
fsub
rolb
les
fidivrl
ss
js
mov
popa
loopne
xchg
leave
push
rclb
cmp
fiaddl
push
rcrl
and
ss
sarb
insl
rcrb
pop
ja
scas
test
mov
cmp
and
enter
lret
mov
dec
imulb
pop
insb
push
dec
jle
rcrb
xchg
mov
cmp
outsl
ljmp
push
mov
xor
loopne
push
adc
stos
cmpb
inc
add
movsb
imul
clc
inc
loopne
xchg
js
mov
mov
jmp
inc
xor
xor
sarb
sbb
or
push
dec
sub
sbb
mov
sbbb
pop
inc
push
jge
push
push
jnp
mov
inc
xchg
push
test
movsb
xor
fidivl
inc
ret
xor
mov
or
cmp
jp
inc
xchg
jbe
insb
inc
out
jb
dec
xchg
outsb
stos
push
inc
add
dec
dec
lods
push
popf
and
sub
dec
mov
sub
xchg
push
and
outsb
dec
inc
push
addr16
arpl
test
push
dec
cmp
sub
or
dec
cmp
mov
sub
inc
arpl
lock
add
outsb
sub
int
ficoml
inc
inc
add
or
je
in
inc
add
inc
scas
jp
ss
in
inc
add
or
push
push
scas
dec
popf
aaa
dec
push
xorb
ss
xchg
clc
xor
mov
mov
sar
popa
pop
ficomps
inc
push
imul
inc
xchg
rorb
push
xchg
pop
imul
outsl
jge
mov
mov
imul
pop
jbe
mov
sbb
push
mov
inc
dec
ja
xor
ljmp
jle
imul
cmp
inc
mov
or
insl
mov
dec
rolb
outsl
dec
imul
int3
lds
inc
cmp
dec
xor
adc
push
mov
mov
jo
sarb
cmp
test
rorl
or
push
cwtl
dec
dec
dec
inc
insl
add
mov
outsb
mull
outsl
mov
sub
jl
test
jno
dec
xor
pop
jo
jg
xchg
cmc
leave
xchg
sub
inc
lret
cmp
dec
or
and
enter
jb
mov
pop
cltd
inc
push
cli
adc
jle
dec
inc
jb
push
lock
aad
mov
inc
xchg
mov
cs
dec
cmp
lret
cmc
cmp
cli
in
inc
inc
je
test
sub
xchg
sbb
mov
dec
sbb
xchg
pop
arpl
cmp
cmpsb
jl
sub
ret
or
cld
fiaddl
cmpb
push
ss
out
jmp
arpl
push
dec
xor
imulb
cmp
push
jns
scas
sahf
arpl
xor
xlat
pop
divb
outsb
shll
mov
imul
stc
cmp
sbb
cmpb
dec
out
pop
pop
ret
push
addb
gs
mov
and
or
xchg
jnp
das
cmp
cli
int
cmp
cmp
cmp
mov
pop
pop
movl
push
cmp
dec
jge
xchg
jmp
cmp
test
stos
insb
cmp
mov
dec
push
hlt
aaa
sbb
mov
inc
xchg
cmp
mov
insl
dec
fsubrp
cmpsb
and
or
jmp
ljmp
in
mov
mov
push
push
cmc
leave
xor
cmp
aas
dec
and
cmp
dec
and
cli
les
pop
jbe
scas
test
push
hlt
lock
shll
cmp
add
or
insb
cmp
cmp
cmp
cmovno
xor
push
xor
pop
insb
xor
mov
add
push
dec
cmpsl
mov
ret
or
fsubl
xchg
pusha
fsqrt
jecxz
rcr
ja
jle
fiadds
jg
leave
pop
add
jge
mov
add
sub
xchg
cmp
lea
out
outsl
and
jg
nop
mov
subb
dec
lcall
je
fcompl
lret
je
push
jnp
lcall
pop
out
push
das
push
dec
dec
outsb
dec
mov
dec
inc
push
cmp
or
jo
shll
ljmp
mov
dec
pop
imul
fwait
cs
fisubrs
jle
pop
mov
push
push
sbb
inc
push
xor
and
jnp
xchg
aaa
popa
and
mov
inc
mov
jb
cmpsb
adc
mov
ja
aaa
js
jns
jl
cs
xor
mov
and
pop
cmp
les
mov
jo
cs
das
in
pop
aas
test
xchg
jb
dec
cmp
dec
shll
or
mov
ss
push
es
mov
ret
lcall
push
mov
fwait
dec
mov
ds
mov
push
cmp
data16
xchg
addb
movsl
jmp
dec
jbe
pushf
int3
lret
ds
cs
and
cmp
lret
push
add
aas
popa
int3
mov
lea
or
mov
push
push
jb
adc
enter
out
cld
mov
scas
push
pop
repz
inc
in
dec
xor
xchg
cmp
push
cli
jae
icebp
repnz
mov
inc
pop
es
out
test
xchg
test
outsb
adc
daa
and
xchg
lret
das
testb
and
xorb
out
insb
xlat
jae
rcrl
test
pusha
adc
sub
clc
test
xchg
xor
cli
jo
into
sarl
lea
mov
ljmp
jns
xor
testb
test
test
mov
fwait
add
nop
je
jecxz
cs
in
xor
mov
repnz
dec
fdivl
sub
dec
fnstcw
rol
sub
pushf
sub
jp
inc
hlt
popa
nop
mov
mov
aaa
xchg
xchg
push
addb
fisttpl
pop
mov
fstps
cmp
test
pop
stos
repz
mov
mov
mov
jmp
inc
cld
icebp
out
pop
xchg
mov
ljmp
pop
cmc
sbb
outsl
push
stc
cmp
in
push
cmp
dec
cmp
jbe
pop
jmp
pusha
mov
movl
mov
movl
pushf
lea
jmp
cmc
repnz
jmp
and
xor
mov
adcl
add
data16
addb
cmpb
lods
adcl
dec
idivb
aad
ss
fldt
fldl
repnz
jns
int
inc
or
mov
add
sub
add
dec
call
jno
push
pop
rcrl
adcl
adc
fcoml
out
hlt
addr16
xchg
decl
and
inc
dec
jnp
fsubs
dec
cmp
dec
cmc
mov
div
cmpsl
test
pop
and
jno
imul
pop
and
add
dec
lds
adc
jecxz
in
cmpl
stc
pop
sub
lods
aam
cld
jge
in
lock
xor
stos
xor
stc
cmp
ja
cmp
inc
pusha
mov
dec
mov
cltd
mov
shl
pop
push
dec
lds
hlt
dec
arpl
push
xor
mov
mov
in
pop
repnz
mov
jmp
enter
dec
int3
jnp
mov
xor
xchg
jecxz
loop
je
jbe
shrb
into
sbb
in
dec
mov
and
or
xor
fisttpl
jne
mov
pop
lahf
lcall
testl
test
cmp
aaa
lea
rol
adc
es
sbbb
xchg
xor
add
mov
hlt
jno
shr
adc
xchg
adc
sbb
jne
sub
sbb
xchg
lahf
sub
test
fldl
fs
mov
adc
and
xor
xchg
jae
insb
mov
es
inc
and
jno
xlat
repnz
xor
test
cmc
jle
orb
es
ret
push
pop
xor
sbb
les
inc
rcrl
and
cld
lahf
adc
xchg
sbb
fsub
xor
or
cmpsb
jl
filds
push
add
ret
repnz
shrb
jb
pop
jmp
movb
lea
call
push
cmp
cmp
pushf
mov
mov
call
cmp
lcall
adc
mov
sbb
addl
fadds
leave
push
mov
jne
adc
push
sub
out
pop
mov
mov
fstl
test
and
out
imul
xor
subb
mov
xor
shrl
pushf
ud1
sbb
jne
sub
ljmp
std
push
fildll
mov
add
cmp
mov
fnstcw
push
sbb
sbb
xchg
stc
aaa
mov
cli
call
cs
aaa
rol
leave
test
sub
mov
adc
gs
or
jnp
jnp
stc
in
cmp
jno
test
fldcw
xor
dec
sbb
sti
jmp
mov
imul
and
add
lea
and
or
mov
jno
push
leave
xor
imul
dec
dec
std
pop
mov
repnz
inc
dec
mov
adc
mov
lret
testl
sbb
mov
jg
repz
inc
jno
fwait
jmp
stos
imul
cltd
sbb
sbb
hlt
jmp
daa
mov
repnz
pusha
sbb
test
and
decl
aas
lea
movsbl
movzwl
call
cmpb
pushl
call
xor
fistpll
push
pushf
call
pushl
popl
stc
mov
cmp
pusha
mov
lea
ja
cmc
ror
and
sub
sar
add
pushf
shld
mov
neg
and
pusha
mov
mov
jmp
cmc
add
test
test
call
lea
call
push
mov
lea
jb
push
pushf
pushl
movb
pushl
ret
xchg
push
xchg
mov
movsbw
xchg
xchg
mov
bswap
pushf
mov
push
mov
pusha
pushl
ret
mov
lea
pusha
lea
movzbw
mov
lea
lea
mov
call
stc
not
pushl
ror
call
movsbw
mov
not
bsr
setno
shrd
push
movzbl
not
push
sar
dec
lea
mov
bts
cmp
mov
bsr
rcl
sar
or
mov
clc
clc
call
push
lea
call
jmp
pushl
popl
mov
movb
pushl
ret
out
pop
bound
adc
fs
dec
cmp
lods
lods
sbb
das
xchg
aam
xchg
loopne
inc
fwait
call
fs
insl
mov
pop
inc
sbb
rcll
jge
push
out
outsb
aam
cmc
pop
or
pop
cmpl
push
es
jne
jecxz
stc
popl
into
mov
cmp
leave
sub
rcll
dec
and
fsubrl
pop
ret
and
push
pushf
push
movl
lea
jne
pushf
pusha
movw
pushl
popl
movb
push
push
push
pushl
ret
pusha
movl
push
movb
movw
lea
jmp
sub
test
inc
aad
stc
cltd
cmpsl
mov
mov
pop
lcall
mov
es
mov
mov
sbb
dec
ss
and
popa
and
in
pop
rcll
daa
cmp
insb
inc
aam
dec
rolb
push
push
int3
scas
inc
fadd
mov
push
call
hlt
jno
push
in
pushl
sbb
imul
int3
jp
sub
mov
lock
ret
mov
repnz
adc
push
mov
jo
outsb
jno
jae
je
push
rorl
xor
les
and
push
xor
sub
aad
call
seta
in
ret
jb
test
xchg
hlt
popa
icebp
daa
push
adc
leavew
stc
sbbl
out
xor
rol
and
repnz
ror
stc
call
push
mov
call
cmc
cmp
jmp
cmp
or
mov
dec
cmc
sub
pusha
pop
loope
hlt
fnstsw
xchg
or
xchg
addr16
loop
cld
and
roll
jmp
mov
jmp
out
inc
push
adc
mov
scas
mov
hlt
loopne
mov
push
mov
inc
ret
lock
adc
mov
dec
and
fisubrl
popf
test
cmpl
xchg
pusha
mov
icebp
loopne
mov
sub
mov
pop
adc
adc
movsb
repz
repnz
out
xor
mov
mov
adc
sbb
popf
mov
fdivl
iret
push
loop
ds
sbb
sbb
popf
xchg
cmp
push
push
lea
mov
sbb
pop
lret
mov
pop
mov
repnz
and
push
xchg
add
sbb
mov
jmp
mov
and
loope
push
fildl
shlb
inc
imul
and
sub
and
sub
out
adc
mov
pushw
sbb
jns
sbb
or
ds
cmp
lds
stos
repnz
mov
jg
sbb
mov
mov
fists
shlb
rcr
mov
or
sarl
sub
adcl
cmp
icebp
das
cmp
testl
std
add
into
cmp
pop
out
jmp
xorb
repnz
cltd
test
mov
and
push
sarb
clc
fistps
xchg
or
outsl
jae
dec
xor
lahf
sbb
icebp
inc
cld
mov
jnp
dec
ss
adc
popa
inc
cmp
push
ljmp
lea
mov
cmp
mov
inc
mov
mov
arpl
icebp
inc
cld
shr
pusha
out
in
pushf
push
rclb
lahf
mov
inc
ljmp
stos
cli
rolb
xor
lahf
nop
cmp
push
icebp
inc
std
xor
sub
sub
sbb
shlb
test
cld
repnz
sti
xchg
pushf
pushf
sub
test
clc
bt
jmp
setl
pusha
mov
lea
pushf
movw
mov
movzbw
pop
mov
jmp
int3
popf
pusha
lea
jle
pusha
movl
push
jmp
jae
xorb
das
xchg
and
daa
callw
push
sub
daa
fisubrl
repz
sbb
jb
xor
cltd
inc
xor
cwtl
xchg
lea
insl
xchg
inc
jne
or
fwait
test
movsb
jns
xchg
xchg
mov
dec
jb
mov
mov
add
adc
fs
enter
sahf
dec
imul
mov
inc
mov
jb
sub
mov
cmp
cmpsl
xor
pop
cmp
jo
mov
xor
cld
lock
push
imul
push
dec
ja
ds
sti
sub
push
cs
xor
push
dec
int3
jns
jge,pn
and
sub
push
jbe
lcall
inc
mov
inc
mov
push
mov
das
aam
lret
sub
daa
outsb
loope
out
cwtl
cltd
mov
sbb
inc
xchg
lea
push
pop
push
push
push
or
frstor
add
leave
cwtl
pop
das
xor
sub
enter
sub
in
xor
sub
xchg
jmp
mov
sbb
inc
sub
sub
mov
outsb
jo
scas
aaa
ret
outsl
cs
divl
sub
push
imull
scas
cs
adc
lcall
data16
mov
sbb
lods
mov
hlt
cs
shrb
insl
aas
outsb
scas
sub
loopne
scas
jl
cmp
mov
in
mov
push
pop
pop
arpl
pop
jb
jo
xchg
data16
das
mov
push
xchg
pop
in
ficomps
mov
mov
xor
adc
push
dec
aaa
add
jnp
bound
push
xor
sub
daa
bnd
cmp
dec
sub
das
push
pop
js
inc
dec
daa
sub
sub
pop
cmp
and
inc
dec
xchg
dec
fdivs
jp
bound
fisubrl
jle
ljmp
xor
sub
sbb
lret
pop
scas
aas
push
xor
lods
imul
out
into
mov
cli
aas
jbe
lods
imul
pop
repnz
inc
xor
lods
imul
out
pop
pop
aas
push
xor
imul
out
xor
or
aas
xor
imul
cmpb
fs
push
adc
mov
mov
out
pop
bound
xor
or
jb
pop
cmp
ret
xorb
cltd
lcall
and
je
adc
mov
loopne
es
or
adc
cmpsb
rcrl
jno
mov
out
es
jne
pop
sub
xor
mov
lahf
das
push
inc
sub
insb
xchg
cwtl
xchg
cmp
xor
es
and
call
cmc
inc
aas
mov
mov
test
mov
jbe
cmp
gs
pop
and
pushf
imul
adc
xor
sbb
aad
bound
inc
fsubrs
fiaddl
jnp
sub
daa
aaa
je
mov
and
cmpsl
sub
mov
inc
data16
aaa
inc
out
inc
imul
mov
push
mov
icebp
or
push
cs
cmp
push
pushf
mov
cltd
push
mov
enter
bound
push
cmp
ss
mov
mov
mov
adc
pop
cs
inc
movsb
dec
das
stos
js
scas
sbb
sub
mov
inc
outsl
cmp
xchg
dec
cs
fcompl
testb
cli
pop
mov
mov
lods
frstor
mov
adc
inc
stos
sub
shll
push
bound
inc
je
data16
out
in
fisubrs
jle
cmp
lea
aaa
xor
mov
xchg
cmp
mov
cmpb
dec
ja
ds
das
add
cmp
dec
hlt
das
cli
mov
daa
inc
clc
pop
daa
xchg
mov
mov
dec
sub
sub
push
mov
pop
nop
push
sbb
mov
dec
xchg
sub
aas
sbb
mov
push
pusha
aaa
mov
rorl
cmp
sbb
outsb
cwtl
movsb
push
xor
cmp
cmpsl
rorl
lods
addl
scas
je
cmp
aaa
mov
jb
push
push
push
jle
or
inc
push
fucom
add
int
popa
lahf
test
out
mov
shrb
jb
pop
fisubrl
or
jp
xor
xor
push
imul
jge
ja
stos
ss
push
push
mov
sbb
sub
lods
es
enter
push
es
mov
push
jo
mov
jg
gs
push
pusha
push
imul
scas
push
arpl
and
and
mov
int
out
pop
sub
jbe
add
insb
xchg
mov
inc
and
std
pop
fwait
xchg
mov
xchg
sbbb
pop
xchg
pop
push
jne
sbb
mov
sub
das
push
repnz
mov
idivb
add
sbb
mov
mov
jo
push
sub
mov
pop
inc
pop
jb
mov
sbb
pushf
push
mov
cli
jno
movl
lcall
fidivrs
sbb
js
xlat
inc
cwtl
mov
das
jb
int3
dec
sub
mov
sub
dec
add
push
inc
mov
outsl
lahf
jb
xor
das
ss
push
lcall
xchg
mov
das
mov
cmpsl
repnz
out
cmp
lret
xlat
push
clc
les
xchg
cmp
sbb
mov
divb
xchg
xor
stos
repnz
testb
lahf
dec
dec
dec
sub
dec
mov
and
sub
sub
and
sub
hlt
test
mov
mov
jnp
addr16
xchg
lahf
xorb
and
mov
call
jae
xor
mov
jl
mov
fwait
xchg
inc
nop
jg
bound
jne
nop
jb
inc
lcall
mov
mov
imul
xor
lcall
pop
ss
xchg
xchg
int
mov
pop
outsb
dec
cmpsb
rcll
dec
mov
popf
pop
mov
mov
adc
pop
or
adc
inc
xchg
or
addr16
jae
push
xor
js
outsl
xchg
cltd
lcall
inc
daa
cmp
inc
cmp
sub
pop
jne
push
insb
sub
xchg
inc
push
enter
push
inc
aas
out
ret
insb
ds
jo
or
dec
xor
push
fldcw
dec
cmp
fistpll
shlb
lret
iret
fs
jb
mov
xor
test
mov
popf
jbe
scas
dec
cs
jb
jl
sbb
push
arpl
push
fwait
and
cltd
inc
and
xor
sub
ss
fidivs
in
sub
cmpsb
in
push
scas
mov
cmp
jae
insb
mov
test
enter
xor
int3
sub
xor
push
into
lods
xor
pop
or
js
cmp
mov
mov
jbe
inc
push
jge
loop
xor
push
cmp
iret
dec
mov
ja
nop
sub
cmp
mov
sbb
and
lcall
jmp
mov
push
inc
sub
sbb
test
xorl
test
mov
daa
data16
push
inc
cmpsl
adc
cs
inc
mov
adc
xor
adc
in
or
inc
outsb
jp
cmp
cmp
pop
add
mov
ljmp
sub
sub
and
jecxz
push
mov
lods
enter
cmp
pop
fwait
sbb
push
push
arpl
loop
es
js
add
popa
in
cmp
push
aas
jge
jo
das
fbld
mov
add
ja
pop
dec
fisttpll
dec
mov
cld
mov
inc
jbe
lds
sub
pop
ja
cmp
stos
inc
mov
mov
js
push
jbe
inc
add
mov
loop
and
mov
pop
cmp
stos
fldz
xchg
scas
stos
out
cmp
js
aas
sub
ja
push
jbe
mov
shrb
dec
iret
sub
push
sub
cmpl
fwait
loop
mov
leave
cmpsb
ret
mov
std
mulb
insl
test
pop
cmpsl
jbe
aas
mov
inc
pop
xlat
scas
push
fwait
push
mov
pop
loopne
ja
aas
scas
dec
stos
push
lahf
mov
jns
push
cmp
inc
cmp
xorb
jnp
xchg
ja
cwtl
stos
xor
subb
lret
lods
mov
jbe
pop
into
imul
xchg
jge
or
sarb
scas
inc
jp
cmp
cmp
ja
xor
fiadds
not
outsb
rorl
out
inc
add
ja
fdiv
ss
insb
js
out
test
jg
pop
cltd
test
mov
sti
jmp
stos
repnz
xlat
lock
mov
nop
sub
dec
mov
fisubrl
loop
ds
mov
ja
xchg
adcl
ds
mov
mov
rcll
test
stos
dec
add
stos
in
cli
mov
outsl
and
fdivl
push
movq
stc
jbe
pop
icebp
aam
pop
adc
sub
sub
adc
cmp
mov
adc
jnp,pn
js
dec
movsl
jge
mov
mov
add
push
cmp
pusha
jns
fidivrs
fimuls
idivb
cwtl
xchg
adc
arpl
adc
imul
jg
in
inc
out
jbe
dec
aas
test
mov
mov
ja
adc
lcall
pop
scas
jae
fdivrp
bound
outsb
mov
inc
scas
in
aas
xchg
out
mov
in
inc
jecxz,pn
mov
mov
mov
cld
aaa
insb
cld
jb
xchg
shlb
imul
mov
push
rcrl
imul
mov
sub
and
fucomp
jb
scas
scas
mov
mov
outsb
mov
xor
rorl
jae
and
test
jmp
fidivl
fistps
rclb
je
xchg
sub
das
sub
into
dec
mov
daa
xchg
jbe
push
stos
mov
aas
mov
into
in
xchg
xor
in
xorl
out
push
push
out
sub
fs
mov
xor
adc
push
inc
push
fsubl
stc
pop
hlt
pop
push
lds
jo
bound
xchg
pop
imul
scas
push
repnz
data16
mov
das
test
xor
cmp
cli
ja
cmp
fisttps
mov
loop
inc
fsubl
xchg
outsl
push
jle
mov
rcrb
mov
ja
insl
dec
pop
jns
xchg
and
idivl
inc
lret
outsb
mov
cwtl
mov
mov
sub
outsl
mov
daa
ljmp
loop
repnz
mov
cmp
dec
outsb
adc
dec
cmp
pop
scas
push
orb
test
ja
sub
mov
scas
jns
fmuls
push
push
scas
adc
sub
mov
das
aaa
addr16
out
aaa
les
jle
aas
scas
mov
movsb
dec
das
mov
push
fidivl
push
push
scas
sub
cs
dec
dec
pop
push
test
sbb
xchg
dec
aas
mov
mov
mov
dec
fimuls
sub
imul
xchg
xchg
lcall
sbbb
lock
push
push
mov
xchg
pushf
sbb
icebp
mov
mov
push
pushf
lcall
dec
mov
sub
pop
mov
push
clc
or
notb
push
pop
add
cmp
jp
cltd
and
xchg
insl
rcrb
cltd
inc
sub
cmpsl
je
test
sti
jno
mov
js
mov
xchg
imul
cld
mov
je,pt
and
xchg
subb
fiaddl
xchg
cwtl
lcall
cwtl
lahf
loop
xchg
mov
cli
mulps
mov
cwtl
xchg
sbb
add
pop
leave
push
mov
pop
outsb
mov
je
cmc
leave
je
jecxz
mov
dec
incl
lcall
cmp
sti
push
ja
xchg
fwait
clc
mov
cmp
mov
dec
xchg
push
shl
push
sub
sub
dec
aaa
pushw
dec
mov
dec
xchg
daa
or
cmpsb
ret
ds
shll
push
repnz
pop
aaa
out
scas
pop
cmp
mov
js
mov
mov
sbb
mov
ss
push
push
aaa
sub
data16
dec
xchg
inc
dec
daa
call
sub
cmpsb
insl
xchg
aas
daa
lret
into
jl
jns
test
xor
js
outsl
out
out
loop
mov
insb
ds
dec
jecxz
push
adc
fidivl
bound
aad
fiadds
sbb
lods
insb
mov
je
jb
iret
inc
dec
jns
jp
arpl
ss
cs
jbe
jle
jns
jb
lret
jo
push
jp
xor
pop
das
pop
aas
push
push
imul
test
push
stc
rcl
mov
bound
xor
pop
inc
or
and
sub
dec
cmpsb
ja
fsubrs
push
cltd
lds
fisttpl
inc
pop
imul
lcall
mov
scas
pop
bound
outsb
jne
hlt
lea
push
mov
pusha
cmc
int3
jne
mov
or
mov
xor
inc
ss
sub
outsb
push
mov
je
sbb
jb
loop
int3
push
mov
shlb
and
sub
cmp
xchg
out
pop
and
push
cmp
rcll
cs
ja
sub
jb
xor
xor
cs
mov
ret
xchg
xor
leave
das
fcoms
sub
mov
push
sub
push
sub
movsl
cmp
push
push
dec
dec
dec
ljmp
push
mov
sub
sub
shll
push
xor
movsl
pop
inc
xchg
pop
inc
push
scas
or
inc
adc
sub
out
xor
lods
and
pop
sub
push
movsl
daa
mov
lret
inc
movsl
dec
daa
and
sub
shll
js
push
pop
jno
xor
loop
cmpsl
jmp
sub
movsl
sub
cli
movsb
inc
out
and
jmp
cmp
mov
addb
daa
adc
pusha
or
call
out
out
cwtl
into
out
bound
std
pop
sbb
sub
dec
xor
sub
sub
xor
pop
daa
sub
dec
xchg
dec
push
jle
dec
fsubrp
sbb
cmp
xchg
aaa
pusha
or
add
xchg
mov
imul
sub
aad
loop
in
jbe
ss
mov
push
jl
jle
mov
xor
aam
inc
mov
sbb
icebp
ret
inc
je
out
call
mov
adc
fucomp
mov
cltd
xor
lock
cmpsb
mov
sbbb
sub
add
mov
mov
push
int3
cs
cmp
pop
inc
jns
and
xor
push
ljmp
outsb
test
xor
aaa
inc
dec
pop
push
jl
xchg
cmp
inc
outsb
xor
and
aaa
adc
push
fsubrl
mov
cmpsb
mov
dec
je
pop
inc
scas
xor
sub
loopne
or
mov
dec
fsubrl
mov
dec
lcall
push
inc
scas
xor
cs
sbb
aaa
or
push
loopne
sarb
les
outsb
sahf
mov
dec
jle
outsb
pop
scas
dec
cmp
dec
push
fisubrs
or
cli
mov
dec
shrb
mov
mov
outsb
jb
pusha
dec
push
push
ss
and
call
das
clc
cmp
dec
outsb
lret
loop
mov
aaa
testb
adc
dec
dec
ret
aaa
push
das
push
subb
xor
shlb
nop
scas
or
sbb
sub
sub
outsb
inc
mov
dec
pusha
push
subb
outsb
mov
push
push
scas
sbb
sub
sub
dec
dec
outsb
pop
mov
dec
jl
nop
push
repnz
aaa
mov
fimull
mov
jp
enter
das
inc
scas
bound
jo
xchg
mov
dec
shrb
out
scas
or
cli
dec
call
dec
mov
cwtl
aaa
push
call
dec
add
mov
dec
shrb
test
cwtl
cmp
mov
das
and
sub
add
movsb
cmp
mov
dec
dec
push
xor
jmp
mov
aaa
fdivl
push
ds
push
test
pop
dec
scas
inc
scas
das
in
aaa
adc
jp
loop
out
das
insb
mov
dec
dec
push
sub
cmp
dec
repnz
loopne
rorb
push
lods
scas
lcall
mov
dec
inc
push
push
in
scas
cli
cmp
enter
scas
xchg
cmp
dec
pop
push
inc
scas
xor
sbb
sub
dec
clc
outsb
out
dec
enter
scas
xchg
cmp
pop
dec
push
push
cmp
sub
dec
cli
outsb
call
push
stos
scas
lcall
xchg
outsb
and
daa
dec
stos
out
dec
fsubrs
mov
outsb
pop
mov
dec
cmp
out
push
scas
ljmp
lock
out
das
inc
mov
pop
mov
add
loopne
into
cmp
daa
pop
lret
das
aas
dec
xor
dec
cmp
ds
out
aaa
lret
dec
fnstsw
mov
das
leave
outsb
lock
dec
enter
scas
mov
jg
sub
scas
lret
mov
xor
aaa
xor
push
cs
das
cmp
dec
inc
jbe
stos
jbe
xchg
xchg
das
xorb
cmc
sub
outsb
sub
das
decb
push
into
scas
ret
dec
scas
jb
mov
out
das
stos
mov
dec
shrb
clc
scas
or
sbb
icebp
sub
outsb
dec
mov
dec
outsb
push
mov
les
mov
dec
lock
sbb
outsb
push
mov
dec
jb
jle
scas
xchg
cmp
mov
dec
in
lock
sub
sub
outsb
push
mov
dec
jo
adcb
int3
outsb
in
out
dec
add
and
dec
das
push
push
push
je
cmp
ja
imul
and
ss
push
inc
pop
in
les
in
aas
xchg
sub
inc
push
push
loopne
cmp
out
call
in
cmpl
sahf
inc
jge
mov
and
pushf
jle
sub
xor
lahf
cmpsl
xorb
jbe
imul
cmp
lods
inc
js
pop
aaa
sub
sub
ss
pop
jo
sub
mov
std
fisubl
ret
jmp
out
cmp
das
out
push
cs
hlt
test
imul
jl
jge
sahf
lock
fxch
leave
or
cmpsb
xor
mov
jb
pop
mov
mov
dec
aaa
fisubrs
mov
fs
adc
mov
xor
sub
test
pop
mov
aam
js
cmc
inc
and
xor
push
dec
stos
cltd
xchg
inc
push
xor
jle
in
outsb
pop
lcall
test
arpl
ss
sub
mov
hlt
sub
jl
cmp
cmpsb
test
popa
pop
mov
or
shr
xor
jb
pop
xchg
xchg
or
lcall
push
push
mov
inc
pavgb
rorb
jnp
mov
push
pop
mov
test
ja
or
sub
inc
inc
dec
fisubs
data16
pop
mov
mov
or
je
pop
lock
adc
dec
and
push
pop
hlt
inc
test
lcall
cmpsb
clc
xchg
das
cli
pop
mov
dec
mov
jle
adc
fstl
sub
jge
fs
mov
xor
push
data16
adc
dec
mov
mov
jne
cld
leave
sub
mov
pop
cmp
aaa
sub
xchg
xor
test
add
mov
dec
mov
in
cmpsl
out
in
sbb
movsb
bound
lcall
pop
mov
imul
cs
inc
stos
lock
out
xchg
stos
movsl
lahf
jmp
rcrl
jbe
xchg
sub
je
aaa
mov
ja
pop
jbe
cmp
rcpps
dec
cmpl
jns
push
pop
mov
in
imul
jge
fdivrl
jns
add
mov
inc
cltd
int3
push
push
popa
dec
movsb
ds
xor
and
xchg
repz
dec
mov
cwtl
inc
pop
xchg
xor
sub
dec
in
movsl
and
push
imul
xor
dec
data16
or
cmp
movsl
dec
jnp
aas
pop
aas
das
mov
cltd
dec
stos
outsb
mov
call
loopne
sub
push
pop
inc
pop
inc
ret
dec
stos
jb
outsl
xlat
repnz
subl
scas
pushf
in
or
jne
push
mov
xchg
shlb
jecxz
inc
cmpsl
cmc
aaa
scas
lds
adc
pop
ss
or
pop
hlt
daa
mov
aaa
xlat
inc
dec
out
push
dec
pop
mov
fs
pop
add
or
pop
mov
pop
sbb
insl
popa
out
bound
arpl
or
data16
sbb
push
clc
das
pop
dec
fs
sub
or
das
sub
shll
cmpsl
mov
jno
push
mov
mov
or
cwtl
mov
fs
or
inc
dec
adc
lea
imul
mov
pop
scas
lahf
inc
inc
dec
dec
push
fidivl
fistpl
fsubl
out
ficomps
outsl
std
pop
jecxz
xor
mov
sbb
insl
ja
jns
jnp
sub
dec
push
mov
insl
dec
out
dec
and
mov
pop
mov
mov
jp
es
out
mov
ret
add
mov
push
outsl
xchg
xchg
mov
insl
sahf
inc
insl
fstl
jbe
sbb
cmp
lahf
add
test
bound
xchg
fwait
xchg
xchg
and
jae
inc
testb
xchg
push
sbbb
mov
fmul
shlb
cmpsl
jns
shll
cwtl
jo
xchg
mov
inc
mulb
out
mov
adc
adc
lods
pop
mov
std
fcoms
jp
sub
xchg
add
cmp
xchg
pop
or
add
push
cmpsb
pop
push
jge
mov
xchg
and
or
fadds
lahf
inc
sarb
add
int
pop
push
push
or
dec
stos
pop
push
lcall
loope
dec
cltd
xor
push
xor
adc
cmp
inc
ret
cwtl
pop
mov
mov
dec
mov
fldt
outsl
xor
mul
das
inc
call
mov
imul
stc
in
stos
scas
dec
jle
cltd
pop
cs
push
xor
xor
add
test
cmc
lcall
adc
push
xor
push
xor
mov
divb
lock
cs
mov
inc
push
stos
jp
inc
lock
js
jns
outsb
fistpll
cltd
shll
leave
push
dec
jns
xor
call
inc
inc
ss
mov
movsb
mull
fildll
inc
dec
ret
out
cltd
jae
int3
inc
push
cwtl
insl
ds
and
push
subb
orl
mov
pop
pop
push
push
mov
mov
shr
push
retw
push
cmc
call
imul
popa
xor
dec
lods
adc
sbb
test
bound
cmpsl
js
test
ss
inc
jg
sub
sbb
fwait
add
jbe,pn
cmp
aaa
sbb
gs
insb
inc
test
outsb
scas
cmp
mov
push
in
clc
inc
pop
mov
jbe
mov
push
mov
jl
pop
nop
daa
dec
xor
int
into
and
mov
xor
jp
shl
and
repnz
jmp
arpl
pop
add
push
ja
jbe,pn
aaa
push
and
and
shlb
jmp
or
inc
sub
inc
daa
or
push
mov
fwait
sub
in
cmp
jl
adc
and
mov
jg
mov
mov
xor
and
mov
mov
pop
pop
sub
hlt
jge
cltd
lods
cmpsb
jo
std
pop
ret
aaa
jns
outsb
mov
jbe
dec
push
xor
push
jg
stos
jbe
scas
mov
sub
or
lea
xor
or
xor
fstpt
daa
cmp
fwait
or
pop
jle
mov
jl
mov
xor
jo
mov
jnp
inc
push
js
xor
subb
addr16
ja
sarb
adc
mov
ss
add
shlb
push
mov
incb
inc
xor
cmp
cld
mov
inc
xor
cmp
inc
outsb
into
and
push
jle
sub
aas
movsl
nop
lret
mov
test
popf
lret
flds
cmp
pop
dec
insb
xchg
outsl
popf
cmp
mov
stos
mov
inc
wrmsr
push
or
push
push
sbb
sub
prefetch
cmpsl
cmc
and
mov
add
seto
pop
call
pop
jge
and
xchg
ja
movsb
es
scas
andl
fsubp
subl
test
je
xchg
push
xor
inc
pop
inc
scas
lods
imul
inc
mov
cmpsl
pop
jne
push
dec
lods
push
or
inc
pop
push
ljmp
pop
aad
ds
mov
mov
jae
xor
arpl
ljmp
mov
mov
jno
adc
xchg
lcall
jmp
sbb
inc
cmp
lcall
ja
xchg
scas
addb
mov
popa
in
dec
lcall
int3
cs
imul
jp
adc
outsl
dec
mov
scas
pop
push
js
xor
cmpsb
mov
pop
daa
ds
divb
lcall
test
test
nop
push
aaa
push
mov
stos
xchg
dec
mov
daa
pop
cmpsl
in
data16
push
jae,pn
pop
cmp
and
nop
jae
fwait
scas
cmp
push
push
xchg
dec
xchg
mov
cmp
stos
js
out
sub
insl
lret
jp
cmp
cltd
out
push
inc
sub
daa
lahf
nop
inc
xchg
push
xor
sub
sub
mov
out
mov
outsb
bound
cmp
sarl
pop
test
inc
pop
imul
cmp
fdivrl
test
inc
emms
pushf
pop
addr16
adc
pusha
lods
mov
sti
push
dec
stos
out
repnz
push
sub
mov
mov
mov
push
daa
lea
mov
mov
jbe
stos
dec
adc
push
ss
lcall
push
into
subb
xor
xor
mov
inc
cmc
push
mov
and
xchg
jo
stos
out
fwait
dec
xchg
pop
in
xchg
iret
ljmp
outsl
outsb
dec
dec
or
mov
enter
xor
adc
push
mov
stos
lea
scas
in
sbb
je
stc
repnz
setnp
pop
xor
addr16
mov
xor
dec
outsb
ja
cmp
aaa
jne
or
fsubs
mov
stc
inc
inc
nop
cmpsb
repz
fimull
jbe
das
shll
jecxz
jmp
dec
in
ret
flds
mov
test
adc
jo
shlb
mov
dec
jge
cmpsb
int3
mov
cmp
mov
push
jge
mov
lcall
cmp
dec
mov
adc
outsl
cmp
fwait
mov
lret
mov
lea
shrl
call
std
dec
popa
lods
scas
in
mov
icebp
inc
jbe
cltd
mov
insb
mov
cld
imul
cmp
push
ret
cmovb
mov
iret
fldt
xor
sub
js
xchg
popf
jno
mov
mov
es
lock
cs
addr16
xchg
mov
rorb
or
jle
inc
mov
dec
mov
sub
cmp
mov
ror
push
popa
outsl
and
dec
adc
aam
cmp
cmp
cmp
xor
or
cmpsl
aam
movsb
inc
ljmp
cltd
xchg
push
aas
pop
dec
movsb
sub
das
mov
inc
adc
jns
dec
xorl
and
pop
inc
xchg
cmp
popa
pop
xor
cmpsb
push
dec
nop
mov
pop
js
or
push
sahf
sub
jb
jmp
outsb
dec
or
mov
test
stos
adc
fists
add
enter
jne
pop
icebp
push
pop
mov
sub
ja
lahf
outsb
mov
clc
sub
pop
out
dec
push
test
xlat
inc
mov
pop
sub
mov
insl
gs
mov
inc
fsub
and
imul
adc
ss
je
sub
cmp
movsb
cmp
dec
pop
into
pop
outsb
in
push
lds
or
xor
cltd
pushf
mov
lcall
adc
adc
add
lcall
decl
mov
cmp
inc
insl
push
inc
call
aaa
out
inc
mov
mov
jle,pt
nop
or
popa
ds
xchg
mov
sbb
ror
cmpsb
test
shll
mov
and
ficomps
jmp
sub
push
adc
insb
and
data16
xchg
hlt
sahf
cmp
mov
test
ds
mov
dec
jecxz
inc
xor
push
rolb
jg
in
xchg
jno
xorl
xor
lcall
sub
ds
inc
dec
pushf
dec
dec
jbe
cmp
mov
lcall
xor
mov
dec
movsl
sub
and
adc
fwait
and
in
test
popl
mov
fisubl
sub
movsb
outsb
mov
inc
mov
xor
xchg
xor
inc
mov
data16
inc
push
fiaddl
in
push
push
pop
inc
iret
insb
pop
inc
sbb
ja
xor
sarb
outsb
fwait
cmp
aaa
xchg
movsl
dec
xchg
lods
cmpsb
ds
dec
sar
xchg
jle
jbe
push
ficompl
ficompl
dec
adc
les
and
adc
or
pop
xor
stos
dec
push
pushl
jecxz
scas
fwait
lret
xor
jne
sub
lods
cmp
cmpsl
push
fs
push
stc
adcl
adc
shrb
cmp
push
data16
outsb
or
mov
push
cmp
das
test
stos
rorb
int3
or
call
js
negb
outsl
popa
pop
mov
or
push
push
cs
jmp
out
loop
jg
ljmp
sub
repz
mov
ss
mov
add
das
pop
pop
int
jbe
mov
mov
popf
inc
push
pop
dec
clts
mov
xchg
mov
mov
sti
hlt
dec
pop
or
sbb
inc
inc
fidivl
mov
cld
inc
pop
inc
fwait
popa
add
aaa
pop
call
test
shrd
xchg
cmp
xchg
cs
in
out
push
setae
mov
mov
je
adc
repnz
dec
loop
push
dec
xchg
not
mov
outsb
loopne
in
mov
out
mov
jae
mov
daa
cs
cmpsl
and
je
jbe
stos
mov
push
adc
aaa
inc
cmc
mov
lds
cmp
and
sbb
sbb
inc
xor
out
sub
inc
call
stos
or
dec
mov
cmp
mov
sub
aas
pusha
cmpsb
cmpsl
and
sbb
mov
movsb
jo
add
inc
psllq
pop
push
test
outsb
vmwrite
push
add
mov
pop
jae
les
dec
je
add
inc
jbe
test
xor
or
mov
in
dec
lahf
adc
cmp
cmpsb
mov
sbb
lock
je
cs
sbb
lretw
dec
fucomip
jne
push
mov
and
and
nopl
mov
adc
mov
shll
inc
out
pop
adc
xchg
test
sub
test
and
stos
fsubr
test
outsl
sub
mov
mov
scas
outsb
mov
pushf
mov
xor
pop
addr16
adc
pop
loop
mov
movmskps
imul
push
add
cmpsb
adc
dec
jae
sub
fwait
jns
std
ss
push
outsb
sbb
jmp
ss
lahf
jp
add
mov
fwait
aaa
sbb
ret
dec
out
or
inc
push
pop
add
pop
mov
push
rorl
xor
push
pushf
jmp
push
sub
fdivrp
jbe
outsl
adc
mov
out
fs
xchg
mov
movsl
lcall
cltd
lret
mov
pop
mov
dec
xchg
cmp
cwtl
mov
xlat
fwait
pop
sbb
cmp
push
push
movl
dec
aas
daa
jbe
fwait
dec
pop
jbe
dec
mov
jg
jne
and
in
popa
aas
testb
lock
cmp
push
pop
dec
xchg
sub
inc
push
inc
push
fwait
in
rolb
adc
scas
sbb
jecxz
in
repnz
or
into
lcall
outsb
xchg
jl
or
int3
xchg
jecxz
add
gs
xchg
mov
arpl
cmpl
and
push
imul
pop
sbb
imul
mov
leave
pop
push
lock
inc
fldl
divl
ds
push
dec
imul
inc
adc
mov
cmp
inc
sbb
aas
mov
add
inc
mov
adc
ds
movl
fwait
aaa
add
mov
nop
iret
jle
cmp
jbe
data16
lahf
xchg
int3
inc
dec
sub
sub
cmpl
inc
jae
dec
lcall
daa
cmovs
push
enter
push
mov
push
nop
fsts
pop
sub
sub
inc
push
push
stos
xchg
add
lock
icebp
and
jns
orb
sbb
das
and
inc
jge
push
sub
das
sub
test
jns
dec
sub
out
cmc
popa
aas
out
mov
mov
mov
movsb
mov
imul
ja
cmp
decl
scas
mov
mov
xor
fsubrs
in
imul
mov
movsl
pop
loop
subl
dec
out
push
test
push
test
scas
jecxz
imul
in
inc
xor
adcl
adc
xchg
out
jns
adc
push
mov
inc
push
mov
loopne
adc
jne
and
add
pop
enter
es
xor
mov
rclb
xor
cld
dec
jns
or
cmp
dec
and
nopl
ds
jge
jns
or
insb
xchg
int
jnp
jae
aam
jb
imul
cmpb
jge
daa
dec
or
hlt
inc
push
inc
jmp
mov
xlat
and
popa
dec
out
mov
dec
cmpb
test
inc
ss
lods
popa
mov
xchg
dec
out
lods
jge
mov
mov
push
xor
mov
cmc
lock
and
pop
out
mov
push
inc
sbb
mov
inc
cmp
dec
fwait
xchg
popa
cwtl
xchg
insl
pushf
ss
add
push
ss
je
addr16
daa
das
add
jae
cmpsb
inc
in
aas
mov
mull
movsb
mov
sub
mov
push
inc
adc
inc
pop
out
push
out
rorb
jne
int
add
pushf
mov
sbb
jbe
mov
sbb
cwtl
int
mov
scas
push
sub
lcall
scas
stos
cmpsb
movl
punpckhbw
call
sbb
das
hlt
sub
inc
das
push
addr16
insb
jmp
pop
aas
pop
sub
rcrb
pop
das
mov
mov
mov
pop
dec
decb
mov
das
mov
mov
mov
das
icebp
test
aas
xor
inc
push
dec
repnz
nop
das
mov
enter
and
bound
pop
adc
fdivl
fdivrl
jl,pn
stos
mov
fsubl
inc
scas
cmp
shlb
call
lret
mov
lahf
inc
out
fwait
aad
push
sub
sbb
fcoml
xor
lahf
pop
sub
ss
push
adc
adc
dec
das
pop
jge
xchg
popf
mov
arpl
add
ss
adc
mov
imul
pusha
dec
imul
inc
call
jp
cmp
jmp
xchg
pop
iret
xlat
lcall
movsb
xchg
outsl
dec
lret
leave
std
ss
dec
popa
sub
jle
rcll
mov
sbb
dec
test
aad
and
mov
jge
cmpsl
ds
in
mov
cs
cmp
dec
in
sbb
jnp
test
inc
mov
inc
dec
ds
leave
pushf
dec
mov
or
popa
pop
stos
mov
jmp
scas
push
fldcw
xchg
dec
xchg
repnz
mov
or
test
imulb
scas
cmp
cmp
inc
test
xchg
push
lcall
ss
sub
stos
cmp
lcall
pop
inc
jmp
data16
fs
or
mov
icebp
sti
mov
enter
js
jns
lock
data16
ds
jo
and
out
mov
xor
dec
in
nop
pop
aas
xchg
inc
cld
incl
mov
loop
jl
fwait
cmp
pop
pop
mov
add
mov
daa
fsubrp
and
gs
cmp
add
xorb
aaa
iret
xchg
ds
fwait
jae
mov
sbb
outsb
pop
sub
sbb
mov
jmp
sub
push
jbe
nop
xor
mov
xor
add
mov
push
jnp
pop
in
out
sub
xor
sub
fcomip
das
lcall
pslld
rcl
out
and
stc
mov
sarl
out
mulsd
adc
dec
xor
sahf
popf
dec
push
mov
inc
nop
and
jl
jg
out
cmc
inc
out
sub
or
xor
mov
lcall
outsl
sbb
mov
mov
dec
adc
das
daa
add
add
jbe
ret
mov
daa
cmpsl
sti
scas
cmp
lahf
ss
cmp
cmp
stos
sub
ror
and
pop
rorl
xor
loope
in
push
arpl
pop
xor
mov
stos
add
mov
add
xor
leave
xor
mov
dec
mov
fdivl
push
cmp
shl
scas
mov
dec
aaa
imul
xchg
adc
jecxz
mov
imul
and
notb
lcall
inc
test
xchg
mov
test
jge
test
sahf
push
or
cmp
idivl
adc
mov
push
addr16
fldt
push
mov
cmp
mov
test
je,pn
push
inc
insl
stos
jno
data16
sbb
lcall
fisttps
popa
fs
cmpsl
test
stos
xchg
push
mov
mov
insl
mov
xchg
sbb
iret
xor
lea
dec
cld
test
nop
lcall
outsl
mov
push
popa
movsb
icebp
es
test
arpl
dec
add
pop
dec
cmp
popf
hlt
push
push
and
jl
rcll
fsubs
sub
out
adc
inc
adc
arpl
andb
sub
lcall
or
repnz
pop
jge
inc
pop
in
lock
dec
jecxz
test
mov
dec
out
les
mov
pop
popa
and
dec
xor
aas
jmp
jge
mov
notb
xor
out
jno
movd
inc
in
xchg
shlb
outsb
lcall
sub
mov
and
popf
sub
push
test
mov
sub
jnp
or
inc
in
shrl
out
cmp
pop
into
ret
add
fldt
jbe
xor
jp
xor
test
movhps
in
sub
push
add
sbb
mov
dec
js
test
ljmp
ret
adc
data16
mov
sub
fcomip
in
push
cmp
sbb
mov
dec
xor
jno
in
insb
xchg
mov
in
add
imul
repz
sub
fists
or
adc
mov
mov
sub
nop
cmpsb
sub
mov
sub
add
decl
movaps
lret
dec
icebp
rolb
add
jmp
sbb
lods
push
mov
out
fsubl
pop
testl
scas
ds
adc
movsl
int3
scas
ja
adc
int
das
pop
notl
jns
jno
imul
in
enter
inc
gs
int
test
clc
cmp
popa
and
cltd
cs
scas
fdivrs
shrd
mov
stos
clc
push
xor
xchg
cmp
cmp
and
cmp
test
cli
insl
xchg
xchg
jo
add
xchg
scas
test
mov
pop
pop
addr16
push
cltd
lret
lret
or
cld
cli
jae
adc
les
mov
rolb
test
outsl
jmp
idivb
aad
or
pop
add
stos
enter
insb
cmp
or
pusha
pushf
cmp
or
inc
mov
lahf
fadds
jmp
ret
xor
int3
aaa
cs
cmp
fwait
insl
mov
adc
call
mov
cs
adc
lcall
and
push
pop
dec
add
mov
jge
mov
je
pusha
data16
inc
xor
popa
icebp
enter
fidivs
dec
sbb
xor
cmpsb
adc
mov
jg
cmpsb
jns
inc
mov
sub
bound
sbb
pop
add
dec
scas
ss
jmp
pop
cli
sub
ljmp
sub
fwait
cmp
pop
pop
xchg
ja
mov
ret
sub
adc
pusha
add
loop
mov
adc
ss
xor
dec
add
fldt
cmp
imul
scas
mov
cld
add
xchg
mov
mov
mov
pop
rclb
pop
enter
mov
out
scas
mov
repnz
cmp
test
push
adc
push
outsb
push
inc
xor
add
adc
aaa
imul
ret
mov
das
xor
mov
rolb
inc
addr16
movsb
insl
sub
xchg
dec
andb
hlt
mov
mov
popa
stos
inc
sbb
pop
inc
cmp
les
scas
or
cmc
mov
imul
push
imul
cmp
xor
dec
mov
fmulp
js
xchg
cmp
aam
stos
test
shll
cmp
test
out
cmpsb
nop
cmp
pop
iret
push
inc
fwait
les
jo
sahf
imul
xchg
pop
subb
mov
and
xor
fwait
inc
data16
sub
xchg
outsl
mulb
call
or
cwtl
dec
cmp
cs
cltd
inc
bswap
mov
cwtl
loopne
out
adc
push
ret
sub
inc
jae
pop
cmp
jb
lods
scas
lods
inc
mov
pop
push
pop
mov
jg
xchg
pop
das
push
sbb
pop
stos
mov
mov
mov
sbb
call
lret
mov
mov
movsl
pop
shrb
sub
push
mov
inc
pop
das
dec
aaa
in
out
sbbl
inc
cmp
lds
add
add
sbb
inc
bound
or
xchg
hlt
out
xorl
adc
push
sbb
jg
scas
xor
jb
loopne
rcrb
les
add
cmp
in
cmp
adc
int
ss
add
pop
out
jl
das
adc
pushf
popl
fcmovu
gs
fwait
arpl
xor
lcall
push
xor
shrb
jo
push
fcmovne
sbb
push
jecxz
out
pop
data16
out
out
jns
lahf
sbb
push
call
pop
push
dec
ss
adc
mov
ja
orb
insb
in
dec
push
add
imul
and
stc
xchg
push
or
lods
or
cmp
mov
xchg
xchg
data16
fimuls
jns
mov
dec
and
mov
dec
sbb
xor
fstps
iret
inc
lret
scas
sbb
loopne
cmpsb
mov
adc
std
add
inc
in
inc
daa
dec
cmp
fiadds
push
fisubl
dec
scas
daa
push
mov
cmpsl
xor
orb
mov
sub
ss
push
sbb
lcall
out
push
xor
pop
jl
hlt
mov
jbe
sti
push
loopne
fistl
aam
dec
out
xchg
mov
add
roll
mov
cmp
lcall
sub
shll
nop
jg
lcall
shrb
je
xor
test
cmp
je
jns
xor
outsl
push
sub
dec
nop
inc
sbb
clc
mov
movsb
cmp
mov
pusha
outsb
push
adc
ljmp
push
fdivrs
aas
xor
inc
inc
fisubrs
data16
jle
push
fwait
pop
mov
sbb
dec
xchg
outsl
repz
and
dec
aas
xchg
push
sbb
and
or
sub
cmc
lret
sbb
scas
push
stos
jb
push
and
fnsetpm(287
jg
jle
push
nop
or
popa
inc
xchg
push
xchg
pop
dec
test
xchg
mov
cmpsl
jl
frstor
testl
inc
fisubrl
adc
pop
int3
pop
scas
out
pop
js
mov
daa
dec
mov
sbb
cmp
incl
mov
xor
pushl
inc
movsl
adc
inc
aaa
mov
mov
imul
cltd
jp
jecxz
movsb
pushf
mov
ss
xor
test
das
or
or
inc
mov
int
movsb
jp
sub
mov
mov
in
mov
jno
pop
or
dec
push
daa
cmpsb
das
das
push
mov
loope
cmpsl
fdivl
mov
loop
dec
mov
mov
mov
enter
jge
jbe
or
xor
out
outsl
xchg
stos
xor
mov
aas
ja
lods
cmp
jb
fwait
add
jns
jae
insl
ja
xor
mov
lock
test
jae,pn
rorl
pop
sbb
push
std
sbb
sub
mov
push
insl
fsubrl
out
ret
shr
test
jbe
lret
jge
rcrb
adc
dec
add
insl
das
push
pop
ss
cs
mov
inc
push
sbb
cmpsl
icebp
push
jae
lahf
sub
popa
inc
lock
mov
xlat
arpl
bound
pop
push
mov
mov
cmp
and
pusha
dec
addr16
mov
popf
pop
int
popa
xor
adc
pop
push
adc
xchg
mov
js
out
jbe
test
jbe
cmp
jmp
sbb
daa
jne
das
cmc
test
data16
mov
movsl
sbb
outsb
adc
daa
or
popa
in
lcall
cmc
out
sub
xor
scas
addr16
notl
mov
sub
push
in
mov
out
ljmp
stos
cmp
imul
mov
xorb
movsl
xchg
push
dec
dec
sub
stos
mov
dec
gs
dec
out
sub
testb
ljmp
sbb
movl
add
scas
push
mov
xor
xor
in
dec
sarl
les
push
std
pop
mov
test
push
push
mov
lds
push
fwait
aas
push
xchg
mov
jle
lods
aaa
jle
add
outsb
sub
stos
mov
and
outsb
lret
sub
imul
out
test
loopne
lock
mov
sub
test
and
add
inc
push
test
push
cmp
out
push
mov
push
pop
cmp
js
sbb
and
push
scas
mov
imul
dec
fidivrl
scas
stos
add
pop
fwait
sub
mov
adcb
xor
mov
test
movsl
je
xor
sbb
arpl
mov
das
push
jge
jns
xchg
daa
insl
or
scas
pmulhuw
shrl
mov
pop
mov
push
test
push
sahf
mov
ret
pushf
enter
decb
je
int3
movsb
cltd
outsb
add
or
push
xchg
iret
xor
push
aaa
mov
fwait
das
jl
push
cmp
aas
xor
push
into
rol
out
dec
adc
xchg
push
cs
or
push
scas
shlb
scas
mov
push
js
inc
outsl
mov
sahf
data16
add
inc
and
fs
jns
add
xor
lret
mov
jns
mov
cmc
pop
pushf
push
sbb
mov
xchg
shll
push
ret
cmc
aaa
fcoml
aas
xchg
pop
push
mov
mov
mov
push
lcall
dec
jge
jns
xchg
adc
push
jge
gs
and
jb
lahf
out
das
and
sbb
scas
ret
cmp
das
fwait
jle
outsl
inc
std
cmpsl
cmpsb
xchg
mov
lret
cmp
mov
xor
sub
lea
xor
lods
mov
sbb
xor
cld
sub
cmpsl
das
mov
aas
lea
push
cmp
push
xchg
mov
mov
insb
jns
pop
data16
adc
and
scas
testl
ja
not
cmpsl
ljmp
mov
mov
cli
ret
test
jge
scas
pop
add
inc
clc
movsb
ja
cli
sbb
lret
stos
lret
pop
sub
rorb
xchg
jns
sub
sbb
stos
in
data16
push
js
mov
mov
inc
ss
jmp
dec
out
push
xor
cs
mov
xchg
out
push
inc
popf
xor
push
stos
sbb
xor
cmp
call
imul
pop
mov
jp
test
inc
mov
cs
arpl
sub
sub
test
bound
subl
cmp
or
mov
dec
ss
dec
in
xchg
lcall
jg
test
jne
mov
mov
xchg
or
mov
jo
test
popa
aam
and
jns
sub
ret
outsb
popf
mov
dec
mov
xor
jge
jg
dec
push
xor
inc
mov
sub
nop
sub
sti
push
into
xchg
xchg
fisubrs
sub
inc
cmpsb
mov
jne
fwait
jg
ret
ss
xchg
mov
xchg
enter
jne
imull
in
lds
cmp
sub
ss
cs
sub
jg
pusha
ret
cmp
stos
iret
fnsave
mov
jg
addl
gs
push
frstor
push
ds
ficoms
out
imull
sub
push
fstl
sbb
mov
pop
mov
sub
sub
mov
mov
hlt
mov
push
sub
andl
imull
pop
jno
cs
xchg
data16
mov
pop
inc
sub
add
xor
in
mov
roll
cmp
scas
insb
pop
cwtl
in
cli
inc
push
ja
add
aas
dec
dec
mov
dec
inc
push
push
bound
lods
cmpsb
and
sub
adc
dec
loope
jno
xchg
sbb
mov
push
addr16
pusha
and
and
sub
push
je
scas
jo
sbb
movsb
out
jns
aas
jnp
mov
stc
lcall
popa
xor
mov
dec
mov
cmp
bound
cmp
shrb
cmp
outsb
das
cmp
lcall
mov
mov
scas
lds
ret
mov
and
pop
js
lods
enter
sub
out
pop
adc
push
mov
xor
ds
or
adc
mov
cs
mov
fs
jns
dec
jns
sub
scas
inc
idiv
ret
push
and
xor
and
out
popf
sub
jbe
push
js
ret
or
and
xor
call
aad
lahf
testb
call
stos
ss
sub
jmp
pop
pop
mov
cli
aam
mov
xor
lcall
fstl
jo
push
inc
ss
test
sub
lahf
fidivrl
mov
push
cs
out
jp
push
mov
xchg
dec
adc
dec
shrl
test
xor
cwtl
orl
jns
mov
pop
bound
mov
in
cmp
scas
mov
push
dec
xor
push
jbe
sbb
addr16
scas
sbb
mov
cmp
dec
push
push
cli
cli
jecxz
test
outsb
shrb
dec
sub
sub
pop
xlat
js
cltd
inc
mov
pop
les
sub
scas
fmuls
mov
addr16
push
into
jp
add
push
inc
lret
or
scas
shlb
inc
cs
add
fs
decl
mov
jmp
cmpsb
mov
xchg
pop
or
lret
and
jbe,pn
js
and
jge
cmc
ss
fisubrs
test
nop
das
mov
add
sbb
dec
or
lods
xor
mov
mov
clc
movb
pusha
setl
mov
xchg
mov
mov
je
push
fmull
push
pop
add
add
loope
jmp
sub
push
dec
rcrb
mov
pop
cli
inc
mov
sub
push
mov
sbb
mov
jg
push
leave
rol
cmpsb
jns
jp
cmp
es
jge
iret
adc
push
mov
push
lcall
mov
repz
cmp
test
das
mov
mov
aas
call
cmp
jp
push
adc
in
cmpsl
addr16
inc
mov
lods
int3
mov
xor
into
stos
popa
out
sub
movsl
sub
push
popw
roll
stos
fwait
sub
and
pop
jle
xor
and
mov
jae
stos
push
xor
add
mov
movsb
jno
jmp
jnp
inc
call
jmp
pop
cld
in
repnz
mov
sbbb
mov
dec
fs
push
jge
bound
jmp
pop
stos
fwait
arpl
xchg
dec
pop
mov
xchg
subl
push
mov
insl
inc
jae
lock
push
cmp
push
xchg
cmpsb
jo
popa
mull
xchg
lahf
mov
loopne
jnp
hlt
xor
mov
push
clc
jns
or
lea
das
in
maskmovq
imull
push
in
or
fildl
andb
lcall
jns
xchg
and
dec
arpl
xor
lcall
icebp
mov
sub
mov
inc
inc
mov
adc
xchg
cmp
add
dec
setae
push
cmp
push
int3
out
cmp
loop
das
inc
push
rcrb
nop
sub
dec
adc
dec
sub
setno
pop
jg
iret
jb
mov
jecxz
cmp
out
movsb
outsb
jge
cmpsl
popa
out
movsl
jne
and
hlt
xor
cmp
bound
xchg
inc
xchg
mov
mov
mov
mov
cmp
sti
icebp
outsb
pop
outsb
sahf
adc
jo
test
jb
cmpsb
dec
inc
jl
cmp
into
xchg
pop
sub
cld
sub
inc
jo
sbb
test
cltd
daa
fsubrp
mov
push
or
cli
xor
xor
andb
add
pop
arpl
sbb
mov
and
xor
mov
cmp
aam
je
pop
clc
dec
jb
cmp
scas
arpl
xchg
xchg
mov
je
mov
or
push
fwait
nop
push
shll
dec
aas
andb
mov
inc
push
dec
jg
push
andl
pop
stc
adcb
cltd
push
mov
shlb
pop
mov
inc
js
repz
cli
daa
setp
cmp
jl
imul
icebp
stos
adc
jge
ss
fs
dec
push
scas
and
ss
test
dec
fwait
lds
cmp
popa
stos
xor
xor
ret
outsl
test
push
or
pop
xchg
lcall
js
push
pop
scas
and
mov
lods
jno
mov
mov
pusha
push
clc
rcl
inc
ss
stos
lods
mov
in
mov
out
dec
cmpsl
aad
shll
je
into
inc
test
sub
cmp
xchg
lcall
push
ja
adc
arpl
jg
into
movsl
dec
mov
js
xchg
mov
test
xor
jge
ljmp
jns
mov
fmuls
repnz
push
cwtl
adc
jge
mov
jge
in
jo
sbb
sub
mov
cmpsb
pop
push
negl
dec
pop
out
inc
dec
rcr
xor
imul
dec
cmp
loop
sahf
das
data16
lods
inc
stos
scas
fisubs
imul
repnz
mov
mov
mov
in
sub
push
inc
jbe
ss
push
sub
xor
sahf
outsb
pop
ljmp
stos
inc
jp
scas
jle
mov
lods
inc
mov
cmp
imul
dec
loope
fdivrl
push
mov
inc
mov
popa
adc
insl
js
xor
and
mov
mov
jbe
push
add
mov
outsb
mov
inc
xor
dec
adc
shll
out
xchg
sub
lods
imul
or
shlb
push
stos
lahf
iret
push
gs
test
push
outsl
pop
out
push
push
adcl
push
pop
xor
adc
sub
insb
pop
jbe
xor
imul
decb
jb
push
xor
jp
sub
orb
ss
call
test
mov
push
out
je
or
inc
outsb
sub
push
mov
scas
outsb
push
mov
inc
xchg
out
jle
ss
xchg
mov
pop
fcoms
xor
das
mov
mov
mov
pop
cmp
dec
sub
sub
lret
mov
xor
aas
mov
inc
inc
and
push
and
push
aad
cmpsb
ficomps
das
sbb
mov
adc
in
scas
je
test
cs
inc
push
in
repz
in
pop
push
inc
pop
imul
inc
cmp
aas
xor
daa
mov
out
fldt
and
or
ds
inc
xor
inc
inc
add
cmp
cmp
push
es
out
cs
push
dec
test
pop
jle
pop
xchg
ss
cmp
sub
ss
inc
dec
pop
cmpsl
data16
push
jbe
adc
jo
ss
mov
xor
sbb
push
pushl
xchg
jne
insb
test
mov
addr16
ret
mov
popl
movsb
out
jns
cmp
xor
test
sub
popa
ds
mov
jne
xchg
push
mov
mov
or
xor
iret
jg
dec
adc
insl
jp
xor
dec
push
push
por
and
daa
test
sbb
cmp
je
sub
stos
fwait
cwtl
mov
je
mov
jns
js
fisubs
test
out
mov
or
inc
and
mov
xchg
mov
leave
outsb
pop
scas
mov
pop
mov
push
data16
pop
imul
fbld
push
and
jno
mov
ss
out
sub
popf
xor
mov
sbb
xchg
lods
data16
cmp
int3
into
fisubl
mov
push
mov
and
push
and
push
pcmpgtw
mov
pop
je
test
test
jmp
int
mov
imul
inc
sti
arpl
cmp
jbe
out
out
push
adc
pop
jne
mov
sub
and
cmpsl
mov
nop
pop
test
sub
into
daa
lcall
jp
mov
icebp
mov
add
xor
lcall
push
cld
cmpb
mov
dec
shll
or
jle
mov
xor
shll
push
movsb
mov
inc
enter
icebp
cmp
addr16
cmpsl
call
movsl
xchg
aam
adc
mov
or
cmpsb
and
pop
sti
xor
loope
xchg
sub
out
lea
mov
out
nop
jge
testb
push
xchg
pop
pop
pop
push
or
lods
stos
and
inc
jg
sub
sbb
insb
push
push
test
xchg
lcall
add
roll
and
lahf
fcmovnb
dec
pop
aas
add
push
scas
daa
mov
stos
test
xchg
data16
push
xchg
adc
lcall
data16
les
dec
not
movsl
sub
pop
loopne
push
jne
sarb
rorl
sub
and
sbb
aad
incl
jcxz
mov
in
xor
nop
iret
cmp
jno
sbb
std
das
out
jne
pop
xlat
push
insb
lret
fsubs
in
xor
cmp
or
ds
andb
xchg
inc
sub
dec
fistpl
xchg
mov
xchg
ss
dec
and
out
sub
xor
jbe
std
sbb
adc
add
shrl
xchg
outsb
mov
aas
inc
ss
push
cld
stos
rcll
push
xchg
jae
cmp
sub
sbb
hlt
dec
popa
out
cmp
scas
out
lret
sub
adc
movsb
inc
jl
aad
int
xchg
add
lds
lcall
stos
sub
in
insb
dec
ss
scas
sub
shll
jmp
jp
jbe
dec
test
mov
sub
push
ja
pop
mov
push
daa
jge
inc
dec
lods
mov
jb
dec
dec
test
xor
cltd
cmpsb
scas
mov
fwait
mov
jae
sub
pop
adc
jle
pushf
xchg
jne
repz
inc
in
pop
push
pop
outsb
sbb
push
jns
ljmp
jmp
stc
ss
xor
cs
dec
inc
mov
cmpsb
pop
fwait
sub
cmp
imul
and
mov
mov
stos
cmp
jl
lods
popf
iret
daa
mov
sub
xor
orb
das
adc
mov
sub
xor
dec
fs
in
pop
cli
aas
out
sub
inc
mov
jmp
xchg
pop
push
fdivs
mov
insb
inc
mov
test
jns
rolb
xchg
sbbl
mov
ljmp
push
sbb
dec
push
jo
test
xchg
sbb
xchg
and
mov
mov
dec
repnz
cmpsb
mov
push
imul
mov
outsb
mov
jl
jbe
dec
mov
cld
mov
in
sub
xchg
inc
aaa
outsb
jle
sub
inc
scas
data16
mov
aas
outsb
and
jb
lods
ss
inc
stos
jp
push
jle
xor
mov
mov
mov
push
ss
repnz
mov
cli
adc
inc
repz
push
mov
jl
or
scas
les
xor
aas
push
je
stos
push
test
outsb
dec
nop
xor
mov
scas
xor
push
popaw
mov
int3
mov
xchg
cmc
repnz
repz
xchg
in
xchg
stos
dec
xor
and
outsl
xorb
sub
ss
inc
mov
outsb
jbe
aaa
lods
inc
ds
orl
or
sub
jp
push
push
push
inc
ljmp
into
sub
jle
sub
mov
adc
test
xor
test
std
adc
pop
mov
mov
ljmp
ljmp
jno
fisubrs
mov
dec
pusha
sub
jl
inc
mov
fnsave
xor
sbbl
ja
mov
dec
and
or
or
fdivs
data16
test
push
and
ljmp
pop
mov
jmp
push
or
into
push
test
mov
cltd
loop
loop
icebp
pushf
sub
cmpsb
xchg
sub
dec
mov
in
jg
mov
jae
ds
mov
xchg
out
int3
jne
pop
int3
dec
push
adc
mov
inc
ss
jle
das
pop
inc
sub
jecxz
xlat
sbb
or
sahf
arpl
pop
sbb
dec
inc
push
inc
push
in
jo
xor
cmp
test
out
add
sbb
adc
mov
lret
pop
jmp
stos
dec
adc
aas
fwait
jl
inc
xor
daa
jbe
or
cmp
push
xchg
mov
addr16
or
sbb
ret
movsl
nop
jo
sub
pop
cmp
or
adc
sub
cmp
data16
cs
inc
push
cmp
ljmp
or
jecxz
inc
adc
fcoml
jne
lea
adc
mov
arpl
mov
push
ljmp
mov
sub
pop
xchg
push
lock
lahf
mov
cs
mov
pushf
stos
orl
cltd
push
cld
negb
and
or
inc
sbb
adc
push
fs
jno
sub
add
push
mov
testb
xchg
aad
or
mov
clc
inc
test
outsb
push
jns
jecxz
cmpsl
inc
xchg
push
jbe
mov
xorl
inc
pop
xor
jmp
fisttpll
jb
xchg
popa
and
pop
fdivs
es
popa
jmp
lcall
push
adc
adc
scas
inc
insb
inc
xor
inc
mov
mov
dec
push
mov
sbb
jno
andl
clc
stc
cli
inc
mov
inc
mov
test
rcrl
lods
mov
in
sub
mov
insb
push
lret
cli
cmp
out
and
sbb
into
xchg
adc
jbe
sub
jno
shll
pop
push
xor
iret
dec
add
xor
dec
xor
or
js
push
mov
test
bound
out
xchg
adcb
push
gs
xor
cmpsl
mov
sbb
testb
daa
imul
cwtl
jae
push
jp
mov
xchg
scas
mov
sub
sub
pop
rolb
neg
mov
daa
mov
xchg
push
sbb
sbb
dec
aas
mov
stos
jnp
es
inc
nop
sub
dec
jbe
test
test
pop
out
cmp
cs
ja
cmp
dec
mov
lock
push
cmp
push
ds
bound
leave
inc
cmp
inc
mov
push
dec
das
insl
xor
mov
or
scas
add
cmp
aam
push
sub
pop
xor
inc
add
jmp
pop
pop
xchg
push
or
cmp
scas
ds
sbb
cld
cmp
arpl
mov
and
push
shr
inc
xor
jnp
jp
xor
imul
out
and
xor
fwait
xor
jbe
add
sub
push
addr16
sub
aam
aaa
nop
inc
pop
xor
pop
xchg
sub
mov
in
push
int
es
dec
mov
xchg
stos
aaa
imul
dec
mov
test
into
dec
push
enter
xor
and
mov
inc
negl
mov
addb
cmp
lcall
push
xchg
jbe
subb
inc
out
push
outsl
push
sti
and
cmp
mov
xor
cmp
cmp
fadds
jb
in
adc
sub
xor
and
push
ja
add
das
xchg
outsb
add
inc
sbb
pop
push
jno
imul
xchg
lods
sbb
data16
push
out
cli
mov
movsb
mov
nop
cld
mov
push
mov
push
call
lock
sub
frstor
sub
in
call
lret
lods
mov
mov
loop
movsb
daa
ret
mov
dec
mov
into
aas
mov
addr16
or
jb
pop
jne
leave
and
popa
out
icebp
mov
out
scas
adc
adc
call
push
xorb
cmp
sub
dec
sbb
aad
fidivrl
jmp
es
lods
cmp
dec
mov
jae
mov
mov
out
fnstsw
outsb
aaa
mov
into
cmpsb
fisubs
cmp
adc
pop
insl
xchg
sbb
add
int3
pop
test
sub
mov
inc
or
shll
sahf
orb
push
mov
and
add
shll
aas
out
sub
sub
sub
push
mov
add
push
mov
pop
cld
inc
into
adc
pop
negb
or
jmp
push
mov
clc
imul
ljmp
push
mov
push
repnz
lock
ds
sbb
adc
lods
ret
or
jl
movsb
jbe
jmp
aaa
cmc
jns
call
ss
mov
dec
push
and
cmp
imul
and
sub
gs
sbb
push
pop
jbe
fwait
sub
cmc
mov
mov
imul
out
cmp
mov
sub
sbb
pop
cmp
gs
mov
loopne
fnstenv
hlt
add
insb
sahf
movsb
pop
sub
dec
pop
test
lcall
cmp
or
fisttpll
imul
shll
sbb
sbb
inc
inc
mov
mov
lock
mov
daa
cmp
sbb
in
outsb
pop
pop
lcall
jmp
or
cmpsb
stos
cmpsl
sub
mov
in
cmpsb
popa
push
mov
inc
leave
lahf
sub
jle
mov
dec
mov
in
in
aad
loopne
jl
nop
mov
insb
xor
addb
test
jbe
lret
pop
stc
lret
xchg
add
ds
adc
scas
xor
mov
sbb
inc
pop
or
inc
ljmp
call
inc
inc
scas
lods
imul
popa
scas
pop
sbb
sub
or
pop
mov
inc
adc
sub
das
adc
xchg
and
dec
in
insb
mov
mov
cwtl
pop
jbe,pt
jo
leave
jno
sub
inc
lret
stc
inc
out
fldt
iret
stc
popa
out
mov
movsl
xor
xor
loope
test
idivb
push
dec
mov
or
popa
mov
mov
or
std
jbe
mov
scas
mov
jmp
xor
or
cmpb
bound
xor
lods
lods
and
pop
inc
mov
test
call
adc
push
fwait
ret
or
lods
inc
and
and
mov
cmp
ja
mov
jp
adc
int3
push
jl
fsubrs
pop
out
lcall
mull
add
js
loope
aam
loopne
js
and
jge
cmpsb
mov
and
stos
push
into
xor
mov
cmp
call
addl
pop
push
push
les
mov
sbb
dec
iret
das
movsb
xorb
addr16
push
nop
sub
nop
enter
jp
aad
mov
pop
dec
adc
scas
jo
adc
das
pop
out
mov
cmp
in
icebp
push
shlb
mov
cmp
std
xor
mov
push
outsb
rorb
mov
subb
mov
mov
mov
xchg
sub
mov
cmpsb
mov
dec
imul
pop
xor
jg
dec
xchg
shlb
xchg
cli
and
or
xor
or
and
scas
or
sub
lock
icebp
cmp
and
aad
xor
lock
pop
cltd
inc
int
insl
shr
testb
test
into
out
jnp
fwait
pop
ja
call
daa
movsb
jmp
insl
das
xchg
xchg
mov
dec
ret
pop
xchg
jae
jmp
xor
stos
xchg
add
sbb
dec
cmc
in
repnz
push
rcrb
repnz
push
data16
icebp
xchg
mov
fisubrl
xor
mov
and
mov
dec
and
xchg
mov
mov
adc
pop
cltd
xor
notl
cmp
adc
mov
pop
sbb
jnp
and
mov
call
dec
lock
movsl
cmp
mov
jp
outsl
idiv
sub
stos
dec
aam
cmp
fisttpl
enter
insl
js
push
adc
negb
getsec
iretw
jl
ficoms
xchg
imul
lcall
jbe
push
dec
mov
enter
or
bound
sub
sbb
outsl
mov
pushf
dec
push
call
mov
add
sbb
ja
clc
nop
mov
mov
and
int3
cwtl
mov
test
fcomps
test
nop
data16
fxch
push
adc
cs
loop
push
push
cmp
cmp
inc
adc
scas
jl
pusha
sub
push
out
and
out
in
hlt
adc
js
fidivl
push
decb
and
or
scas
dec
xor
cmp
or
lahf
imul
in
dec
les
mov
sub
mov
mov
add
xor
xchg
fwait
sub
les
adc
push
leave
and
jge
adc
jno
adc
in
adc
fdivrs
mov
stos
lret
xor
jbe
push
mov
clc
cmpsb
testb
ja
ficoms
dec
sub
stos
scas
insb
mov
mov
addr16
jp
adc
xchg
xlat
hlt
mov
int3
jne
sbb
xor
lods
lods
jae
das
outsl
ljmp
imul
ljmp
xor
out
mov
repz
lock
mov
int
icebp
cmp
test
repnz
cmp
das
mov
les
xor
mov
das
ss
jns
sub
pop
inc
loopne
ss
dec
jmp
out
lock
dec
scas
mov
push
or
push
ja
push
adc
dec
and
sub
inc
bound
cmp
fldl
aam
out
lods
push
test
adc
loop
dec
loop
inc
fcoms
cmp
jbe
jb
fbstp
into
xchg
addb
jb
jns
sbb
cld
scas
pusha
lret
in
sbb
cmpsl
lcall
test
push
daa
and
dec
mov
jmp
sub
xor
ss
jne
iret
inc
inc
ds
nop
sub
cmp
inc
pop
inc
sbb
sub
jne
pop
lcall
bound
xor
pusha
push
and
sub
add
inc
imul
add
cmp
lds
fnsave
jns
xchg
push
stos
inc
push
and
test
and
sbb
lods
and
and
les
nop
mov
and
sbbl
cli
add
mov
xchg
inc
inc
aas
cmp
cmp
and
dec
jne
repz
push
inc
push
sbb
dec
popa
adc
movsl
adc
neg
adc
pop
and
aam
loope
sub
mov
pop
shlb
xor
mov
sbb
pop
dec
xor
push
cmp
inc
fwait
xchg
xchg
sbb
andl
inc
pop
imul
mov
or
jl
je
sub
ljmp
cld
jecxz
dec
mov
loop
jno
push
addr16
mov
push
scas
mov
dec
jg
push
aas
jbe
inc
jle
sahf
notl
dec
inc
ds
inc
add
xorb
cmc
stos
mov
jb
scas
and
sbb
mov
addb
sbb
out
mov
sub
shl
add
xchg
das
clc
nop
xchg
sti
xor
insw
scas
out
notb
cmp
ss
dec
sub
shll
mov
rorl
ds
ljmp
inc
ljmp
imul
sub
ljmp
jmp
push
cmp
push
jb
push
jbe
xor
push
mov
ss
mov
lods
inc
mov
push
ljmp
xor
imul
add
or
adc
add
idivb
stc
fisubs
mov
shll
loop
cmpsb
push
ljmp
add
push
scas
les
xor
aas
xor
imul
cmpsb
mov
repz
mov
cmp
outsb
inc
lods
test
fdiv
pop
popf
mov
sub
jo
daa
pop
cmp
lret
jne
mov
xor
xor
push
dec
cwtl
inc
jg
sub
fidivl
inc
push
aas
jb,pn
out
jbe
cmpl
test
lock
xor
lahf
iret
mov
idivb
sub
xor
das
addb
jno
or
addr16
xor
jg
jl
ds
sub
xor
adc
dec
fidivl
icebp
xchg
hlt
mov
mov
jnp
fidivrl
sub
push
push
xor
gs
push
in
addr16
call
nop
das
out
sub
and
mov
push
xchg
sub
jne
cmc
push
cs
ret
xchg
icebp
push
and
jmp
cmpsb
ja
incl
or
sub
and
movsb
push
add
shrb
and
fiadds
stos
and
or
xor
xor
lret
jns
sbb
jns
or
or
ss
mov
push
sub
iret
sub
bound
ljmp
sub
test
dec
ljmp
icebp
lret
icebp
call
and
icebp
nop
mov
or
jae
cld
pop
lods
cltd
add
jl
test
push
ret
add
push
jle
jbe
dec
mov
cmpsl
push
ljmp
dec
test
and
mov
aaa
pop
jg
or
cmp
out
pop
ss
ja
scas
mov
jno
bound
fsub
and
lret
inc
sbb
stc
push
das
xchg
daa
mov
push
mov
mov
and
add
adc
lret
cwtl
sub
fwait
sub
pop
cmp
lahf
lahf
mov
ss
sbb
fwait
xor
out
sub
inc
sbb
sahf
daa
mov
jl
jns
shll
mov
mov
push
and
out
test
fdivrs
push
aam
push
mov
push
das
jo
mov
sti
jnp
push
cmpsl
addr16
scas
xlat
insl
dec
movsb
inc
sbb
popa
or
inc
test
sub
adc
jl
jmp
push
scas
jmp
sahf
mov
and
lods
push
adc
sbb
push
ss
pop
xchg
subb
leave
movsb
jle
addb
negb
mov
in
out
pop
jns
stos
xor
lcall
mov
pop
clc
std
fsubs
bound
add
sbb
inc
fisubrl
fidivs
mov
shr
mov
rorb
push
test
arpl
jmp
aad
in
cmp
loope
and
push
push
jo
clc
add
shll
mov
pop
fmull
sub
mov
xchg
xchg
lock
dec
pop
mov
pop
xchg
mov
fnstenv
out
mov
jmp
nop
push
xor
lea
out
lret
adc
jne
sub
add
mov
imul
in
loope
sub
adc
test
call
cs
jle
cmpsl
lcall
sar
xor
test
pop
fwait
divb
dec
cmpsb
adc
pop
inc
cmpsl
out
jne
daa
jbe
inc
cmp
xchg
loop
notl
stos
and
and
iret
xor
cmp
xor
sub
jmp
push
sub
xchg
rep
outsb
mov
in
imul
call
incb
inc
pop
jno
dec
mov
mov
pop
adc
sbb
push
sbb
dec
sbb
cwtl
cmp
pop
pop
add
adc
fmulp
ss
push
adc
xor
testl
jge
jno
jl
or
mov
pop
les
pop
xchg
ret
sub
stos
fdivs
xor
cli
aaa
inc
jmp
jno
jbe
loopne
cli
imul
ds
jo
out
fidivs
pop
pop
aam
hlt
call
dec
cmp
aaa
mov
shrb
lods
sub
xor
fwait
and
xor
xchg
jae
dec
outsl
sub
rcrb
mov
mov
fldl
pop
jl
and
ret
or
push
aaa
pushf
outsb
dec
pushf
mov
xchg
sub
cs
sub
dec
adc
dec
arpl
and
or
cmp
or
and
push
add
add
cmp
aas
ds
dec
and
sub
jge
and
mov
les
mov
aad
push
js
or
ja
test
sub
mov
enter
sub
ss
ljmp
ljmp
xor
push
pop
jbe,pn
mov
jle,pt
lods
inc
sbbb
outsb
mov
sbbl
push
push
enter
sub
push
xchg
fprem1
fidivs
mov
sub
enter
mov
and
dec
and
shlb
xor
ss
out
cmpsb
outsb
dec
stos
push
mov
loope
aad
pop
xchg
rolb
ffree
mov
test
lret
imul
cmpsl
inc
sub
mov
push
mov
xchg
dec
push
lea
adc
cmpsb
pop
mov
in
stos
shlb
out
and
xor
sub
ss
fadds
dec
dec
sbb
outsl
push
lahf
cmc
mov
or
loop
dec
iret
ljmp
push
dec
pop
xchg
dec
jge
jmp
jge
fiadds
sub
sbb
dec
lods
js
mov
jbe
mov
je
xchg
fwait
aas
cmpsb
je
jbe
enter
cmp
sub
mov
jb
cmp
cld
stos
jb
movd
scas
or
cmp
push
aaa
sub
mov
mov
pop
inc
cmp
cmp
jns
shlb
data16
sbb
imul
out
ss
stc
call
out
das
inc
add
xor
scas
push
push
jnp
leave
nop
das
imul
or
dec
fwait
mov
add
push
or
push
dec
lcall
dec
mov
adc
or
push
mov
cmp
outsb
inc
xchg
lods
push
jnp
imulb
xchg
sbb
jo
push
and
ret
or
repz
mov
dec
repz
or
test
popa
in
scas
mov
push
xor
test
push
add
mov
sbb
das
and
and
push
js
cli
push
sub
and
ss
sbb
popa
sbb
jg
mov
mov
out
mov
or
push
int3
sbb
cmp
rolb
sbb
xchg
xchg
test
mov
sub
jmp
cmpsb
in
pop
pop
mov
lea
aas
cmp
aad
leave
push
push
dec
les
jno
push
mov
insb
das
out
adc
lds
fldenv
xor
std
bound
fwait
xor
cs
ds
mov
pop
mov
rorb
aas
adc
sub
ds
lcall
or
in
add
in
ljmp
or
push
in
mulb
mov
sub
inc
mov
jns
cmp
push
mov
popa
cmp
lods
lcall
movsw
in
push
push
mov
jbe
pop
sarb
sub
stc
adc
mov
les
inc
not
rolb
or
test
movsl
ds
mov
add
imul
xchg
cmp
out
mov
data16
test
pop
int3
scas
js
repnz
jp
mov
addb
ret
mov
test
cmpsb
sbb
mov
in
lahf
pushf
mov
or
les
je
and
xor
push
std
xor
push
sahf
push
adc
mov
mov
mov
es
lret
cmpsb
xchg
in
sbb
cmpsb
push
scas
sub
sub
jbe
fdivr
mov
add
pop
out
ss
xchg
xor
jns
add
outsl
in
jge
mov
into
push
aam
cmp
ds
adc
in
ja
add
mov
inc
cmpsl
dec
out
dec
mov
push
xor
push
imul
mov
pop
xlat
xor
sbb
fcoms
dec
insb
lret
jo
add
dec
dec
mov
dec
jp
out
sbb
loope
push
mov
pusha
sbb
push
push
mov
mov
mov
push
sbb
cwtl
imul
int3
inc
mov
mov
cmp
sub
stos
mov
sahf
in
in
mull
test
lcall
insb
sarb
mov
mov
xor
addr16
xchg
shlb
lods
sbb
ret
jb
insb
jno,pn
cmp
mov
into
cmp
cmp
adc
pop
loope
pop
cmp
and
sub
je
mov
sbb
adc
jno
or
push
or
rorb
or
jge
das
push
cmp
fs
pop
scas
dec
mov
pop
cmp
or
mov
push
pop
scas
xorl
mov
pop
jns
dec
mov
mov
adc
and
dec
sub
cmpsb
sub
mov
insb
test
mov
bound
or
cmp
push
verw
sub
push
mov
dec
popa
out
push
ja
push
xor
ss
clc
std
das
pop
mov
aam
inc
and
sarl
mov
packuswb
sub
push
sbb
jns
test
xchg
sub
mov
add
bnd
jnp
loope
cmp
loop
ja
addr16
jg
lahf
bnd
dec
jo
pop
in
mov
xor
cmp
lods
cmp
data16
push
cmp
ds
iret
andl
cmp
jle
fwait
insb
imul
push
sub
or
outsl
in
and
xlat
scas
inc
dec
mov
test
cmp
xor
lods
in
push
mov
in
test
outsl
mov
jmp
imul
cmp
test
jp
cmp
and
vmread
cmp
stos
dec
mov
jno
fadd
stos
mov
mov
test
jl
call
imul
xchg
ljmp
dec
inc
fwait
mov
jae
popf
ja
testl
ljmp
sub
dec
dec
ljmp
pop
mov
pushw
imul
jl
mov
xor
jbe
push
into
pushf
sub
and
jle
sub
stos
push
daa
loope
mov
int3
push
into
adc
push
xchg
pop
repz
and
sub
mov
mov
lock
xor
mov
aam
mov
fwait
outsl
xchg
sub
test
push
arpl
ss
orl
dec
lcall
hlt
shr
jp
nop
pusha
lret
sbb
xchg
pop
cld
sbb
lcall
paddq
jnp
xchg
and
mov
out
rcrb
popf
mov
inc
jg
mov
insl
push
scas
lock
push
dec
psrad
push
outsl
jns
mov
cmp
jo
ficompl
adc
nop
and
inc
setae
push
cli
in
sbb
jge
pop
xlat
mov
push
or
roll
push
cwtl
ds
movsl
xor
inc
out
push
push
lahf
rcll
pop
int
fdivrs
call
mov
lahf
xor
mov
jmp
loope
sbb
in
clc
ds
sub
sub
addr16
in
cmp
xchg
das
sbb
jb
lds
test
inc
push
xchg
xchg
loope
inc
clc
inc
cmp
lods
decb
xor
jbe
jg
sti
dec
mov
lods
jl
jle
dec
test
mov
fstpt
dec
fcompl
push
push
xor
xchg
dec
inc
movsb
mov
das
test
cmpsl
lret
cmp
and
xchg
les
adc
out
cli
inc
adc
dec
add
xchg
dec
mov
loope
mov
leave
xorb
xor
xlat
roll
test
stos
jecxz
cmp
cmp
cmp
cmp
push
jecxz
leave
fcoms
pop
mov
arpl
xor
clc
insl
call
sbbb
sbb
lods
jle
imul
pop
pop
cwtl
push
sbb
out
daa
lcall
ss
dec
pop
stos
stos
imul
cld
lcall
xor
mov
cmp
jnp
inc
push
or
inc
cmovnp
dec
ljmp
push
jl
mov
xor
dec
daa
lds
test
test
nop
sub
xchg
mov
xor
out
dec
fwait
and
inc
and
dec
push
cmp
les
je
dec
cmp
pop
jge
nop
xor
sbb
or
test
pop
fs
fstl
xor
sub
outsl
jae
push
sbb
addr16
test
xor
shl
imul
pop
movsb
movzbl
shlb
pop
scas
test
jb
das
inc
inc
aas
aas
inc
sahf
stos
dec
aaa
cld
dec
movsb
adc
and
negl
cmp
mov
mov
call
push
cmpb
ret
popl
fldt
push
and
jge
test
out
lcall
scas
idivb
push
daa
sub
movsl
jno
mov
iret
sbb
addr16
int
jne
jg
rorb
testb
aas
in
push
jle
cmp
je
popa
and
sbb
bswap
mov
aas
pop
mov
cmp
dec
leave
mov
lcall
push
clc
rolb
mov
cmp
cmp
xchg
popa
add
mov
xor
test
sbb
pushf
inc
lock
xor
xor
mov
push
js
cs
fdivrl
ja
test
cmpsb
cmp
adc
add
popf
xchg
add
sub
inc
mov
ljmp
push
mov
push
inc
movsl
into
adc
mov
stos
jmp
dec
fmull
sbb
mov
sub
fwait
fs
xor
lods
xor
jnp
dec
sub
imul
sbb
mov
sub
test
cmpsl
ss
dec
xor
repnz
test
dec
cmp
cmpsl
add
adc
push
xchg
fwait
sub
lods
inc
cmp
adc
aam
add
sub
mov
cmp
pop
xor
in
cmpsl
pop
mov
outsb
leave
dec
cld
cmp
shll
data16
mov
shrb
jns
cmp
mov
mov
pop
jmp
cmp
cs
cwtl
cmp
lret
cs
nop
dec
sub
subb
jbe
fidivl
cmpsb
scas
cld
mov
jae
mov
cmpsl
fidivrl
xor
sub
andl
push
cmpsl
sbb
pop
inc
push
in
push
outsb
fwait
pop
addr16
jge
cmp
call
out
bound
cmp
cmp
dec
mov
das
ret
sbb
fildl
je
dec
push
adc
scas
sub
and
lret
hlt
sub
stos
mov
mov
popa
in
mov
sbb
dec
fbld
xorl
scas
xchg
mov
in
dec
pop
call
mov
jbe,pn
adc
pop
cmpsb
add
jmp
dec
jl
mov
cmp
stos
nop
call
cmp
sbb
pop
jl
das
movsb
enter
dec
sub
lock
push
mov
cmpsb
pop
ja
pop
mov
imul
xor
cmpsb
outsl
fmuls
movsl
ljmp
lods
jbe
jo
xor
xchg
and
push
mov
decl
cmp
xor
jmp
aad
insb
movsb
push
jecxz
ret
movsl
cmp
int
iret
lock
mov
add
push
dec
dec
cmp
sub
xchg
mov
mov
push
out
aad
ja
mov
add
outsb
inc
inc
add
xchg
fs
or
stc
inc
mov
mov
cmc
xor
mov
shrb
dec
mov
daa
adc
in
ja
add
outsl
mov
cmp
movsl
or
jne
push
dec
inc
jp
adc
decb
jge
fidivs
lahf
push
out
mov
cmp
push
mov
rcll
sti
mov
pushf
jne
scas
fistpll
in
dec
xchg
nop
lds
inc
test
dec
and
inc
push
push
mov
test
jge
push
pop
jo
jge
test
pop
call
inc
ficoms
push
mov
dec
fs
push
xchg
fcompl
insl
xchg
das
pusha
fsqrt
sbb
imul
iret
and
cmpsb
mov
stos
and
aas
data16
mov
xchg
inc
mov
ja
stos
shrb
xchg
add
sub
xor
cmp
cmc
sub
dec
jg
xor
push
ret
mov
lods
ja
sbb
dec
jmp
jo
mov
dec
ret
testl
ret
cmpsl
dec
imul
mov
dec
inc
mov
faddl
pop
shrb
or
mov
std
push
dec
ss
pop
sbb
mov
test
inc
scas
mov
mulb
pop
sbb
dec
cs
dec
xchg
ret
scas
and
inc
and
imul
mov
lret
jp
and
in
mov
xor
scas
add
mov
aad
push
mov
stos
in
pushw
mov
sti
ljmp
addr16
dec
jbe
mov
inc
movsb
and
sbb
pop
pop
pop
enter
xchg
cmp
popf
jb
adc
fwait
cmc
int
fisubs
sub
push
dec
lock
lahf
hlt
movsl
test
pop
cmp
and
das
push
pop
mov
push
sti
lods
rorl
cmc
adc
ss
cwtl
leave
fcmovu
sbb
xchg
jbe
gs
fwait
cmp
das
movl
pop
adc
push
cmpb
or
sahf
jp
ret
push
xchg
mov
xor
ljmp
imul
aaa
scas
adc
jbe
mov
loope
cltd
icebp
xor
sbb
cmp
jge
outsb
jmp
js
filds
xor
mov
inc
outsb
or
sbb
add
jo,pt
pop
sbb
push
lcall
push
or
adc
cld
and
jbe
mov
push
xchg
cmp
adc
es
jbe
mov
push
stos
je
fcomps
lds
pop
adc
inc
or
push
fwait
dec
jg
das
fldenv
gs
push
test
push
inc
mov
jl
or
popa
std
mov
dec
movsl
bnd
mov
aas
mov
rol
call
ret
add
jnp
ds
dec
icebp
cmp
cmp
outsl
fisttps
jmp
jge
jne
outsb
dec
lret
pop
pushf
add
pop
scas
mov
inc
push
xchg
addr16
pop
adc
orl
ret
sbb
add
sahf
jns
sahf
lcall
cmpb
ljmp
cli
sub
add
mov
cmp
scas
push
fsts
xchg
add
aas
rcll
mov
dec
push
adc
mov
pop
xchg
out
mov
ja
push
insb
lods
cmp
sub
add
push
xchg
mov
inc
mov
lret
ljmp
sub
jno
cmp
imul
mov
xor
cld
insb
mov
sbb
push
divb
inc
push
fmull
cwtl
sbb
je
jl
push
mov
into
jb
fwait
fs
test
loopne
xchg
out
das
in
bound
int
dec
mov
push
sbbb
stc
data16
scas
cs
mov
enter
mov
scas
movsl
dec
out
shl
fcoms
inc
adc
mov
xchg
stc
mov
push
lcall
scas
outsb
add
imul
sub
mov
xlat
orb
dec
popf
cmp
lock
jmp
dec
je
jmp
sub
mov
or
cmp
adc
popa
cmc
cmp
jge
ds
cld
subb
fwait
sub
arpl
aaa
jge
nop
dec
popf
ds
xor
mov
mov
push
push
push
cmp
xchg
ret
pop
ret
xchg
cmp
sbb
pop
popa
pop
pop
adc
int3
popa
das
mov
sbb
das
pop
add
das
mov
sahf
adc
repz
dec
rcrb
xchg
sbb
or
je
mov
out
sbb
inc
jae
ja
xor
enter
dec
icebp
xor
ret
pop
lcall
push
jb
sti
ret
pop
shll
inc
inc
ja
or
mov
dec
pop
push
adc
inc
push
fdivrs
mov
popa
cmp
xchg
sbb
stos
lret
cld
imul
push
testl
decb
sbb
je
stc
loopne
jecxz
aad
sub
fwait
pop
addl
mul
jle
add
pusha
mov
je
jl
dec
mov
xchg
lahf
mov
cmp
aad
outsl
pop
test
inc
xchg
push
sahf
movsb
lods
lods
test
andl
pop
outsb
cmp
ljmp
loopne
cmp
push
out
cmpsl
in
scas
mov
stos
sub
and
shl
lahf
dec
inc
fwait
cmc
xchg
push
enter
add
jg
icebp
sbb
loop
daa
ss
mov
imul
aaa
mov
aas
jle
cmpsl
adc
pop
xor
ficoms
cmp
fistl
insb
xor
pop
lds
push
dec
incl
xor
push
in
inc
sbb
push
scas
call
mov
sub
lds
bound
loopne
ret
inc
lods
dec
and
or
mov
push
cmp
dec
nop
or
mov
mov
inc
cltd
add
jecxz
add
inc
sbb
in
lcall
scas
sbb
jecxz
mov
bound
ret
push
dec
sub
daa
testb
clc
mov
mov
lret
lods
sub
cmp
fwait
jbe
xlat
mov
addr16
mov
insb
sub
dec
lcall
mov
or
adc
int3
and
mov
sbb
ds
pop
cmpsb
mov
and
adc
xor
jbe
int3
mov
out
xchg
fstl
rcrl
inc
sbb
jle
dec
test
mov
xchg
sbb
bound
rcrl
push
add
push
call
out
icebp
pop
movsb
mov
xor
fsubrs
cmpsl
mov
movsl
les
pop
inc
outsb
mov
pop
pop
scas
aas
pop
test
call
popa
mov
adc
scas
imul
cmp
push
gs
insb
cmc
andb
jb
sub
cli
dec
ret
shl
lock
pop
out
stos
push
mov
lods
pop
dec
mov
ds
cmp
mov
sub
inc
sbb
sbbl
add
push
adc
rcr
imul
mov
push
cmp
jecxz
test
and
pop
push
dec
and
sti
gs
mov
jne
cmpsl
mov
stos
loopne
xchg
cmp
pop
movsb
dec
mov
movsl
dec
out
xlat
jp
loop
push
addr16
enter
push
test
cmp
inc
push
outsl
sbb
cli
xor
dec
lock
in
pusha
and
adc
xchg
cltd
movsl
andl
jecxz
sbbl
pop
test
in
mov
xor
out
lock
jl
mov
gs
clc
pop
mov
add
ds
imul
cmpsb
into
or
shr
jno
jae
scas
addr16
mov
mov
aaa
cmp
lock
push
je
jle
cli
sub
push
and
fsubl
test
sub
aam
ds
and
les
imul
sbb
inc
das
leave
inc
cmp
mov
pop
inc
das
movsb
push
scas
dec
bound
cmp
sub
mov
testb
cmp
ds
jb
popa
jle
fisubs
inc
push
mov
out
lods
sub
mov
fadd
repnz
inc
mov
inc
push
cltd
mov
imul
movsb
dec
stos
jo
dec
pop
jbe
cmp
push
fwait
sub
shlb
imul
in
lea
les
mov
jno
cmp
jo
outsb
in
sub
pop
cmpsl
and
sbb
xchg
les
movsb
call
cltd
aaa
mov
cmpsb
pop
sub
mov
dec
mov
test
out
inc
push
in
inc
js
enter
ja
xchg
sub
xor
and
mov
and
cmpsb
jmp
rclb
cmp
add
repz
mov
mov
push
pop
push
cmp
and
push
das
push
inc
jno
mov
mov
cmp
out
fbld
and
jl
mov
mov
add
mov
jecxz
sub
aad
dec
iret
scas
scas
stc
cwtl
pop
and
inc
xor
stc
mov
pop
push
adc
jl
idivl
mov
xchg
dec
popa
nop
inc
out
mov
addr16
fldenv
ss
cmp
jbe
and
lds
dec
dec
lcall
adc
dec
addr16
and
push
push
out
mov
mov
xchg
push
dec
push
xchg
mov
adc
test
mov
sbb
lds
cmp
std
insb
out
test
cld
and
pop
mov
daa
aaa
sahf
dec
repnz
fnstsw
test
fisttpll
mov
cmp
clc
rcrb
mov
popf
ljmp
sbb
loop
das
adc
test
jge
pop
cs
sbb
movsb
ss
sti
mov
daa
sar
jmp
mov
inc
leave
pop
insb
bound
movsb
adc
mov
sbb
enter
xor
in
popa
pusha
xor
or
imul
mov
outsl
xchg
mov
int
dec
inc
scas
xor
push
je
or
cmp
mov
inc
leave
shl
push
mov
test
inc
mov
aas
mov
leave
jmp
ss
cmpb
mov
aas
popa
add
dec
js
xor
or
arpl
or
decl
dec
stos
sub
roll
fucomi
int
adc
inc
in
push
int3
dec
ja
cs
test
fwait
sub
movsb
push
xor
push
ret
fsts
gs
push
test
bound
mov
sbb
movsl
call
scas
int
and
fcoml
stc
cmpsb
movsb
sbb
sub
jmp
push
add
or
fwait
adc
push
stos
mov
neg
mov
movsb
hlt
mov
sub
xchg
xor
jns
push
push
and
std
das
mov
dec
incl
in
imulb
jnp
pop
jle
sbb
inc
push
add
push
sti
push
pop
or
mov
mov
jp
xlat
xorb
sti
xchg
ds
pop
scas
std
push
jp
push
dec
data16
sub
iret
pop
mov
test
and
lcall
in
add
test
ret
popl
sti
fisttpll
into
clc
cwtl
stos
xor
outsb
pop
ja
xorl
mov
mov
xchg
lcall
mov
mov
cwtl
push
pop
jb
mov
loop
cli
mov
aaa
bound
inc
ds
xchg
stc
repz
inc
daa
mov
lahf
popf
mov
mov
or
push
or
sub
or
fiadds
pop
incb
mov
xchg
inc
ret
test
sub
pushf
jp
cmpsb
loope
xchg
mov
mov
adc
jno
loopne
ljmp
xor
cltd
rcll
sub
scas
jl
loope
es
push
push
pushf
sub
cmp
inc
lds
pop
xchg
imul
add
jnp
adc
dec
jnp
in
shr
fwait
je
iret
movsb
incb
lcall
pop
xor
mov
pop
adc
push
negl
cmp
out
xorl
push
jbe
aaa
mov
cs
xchg
xchg
lock
sub
add
loope
inc
mov
mov
decb
data16
adc
mov
jne
outsb
sarb
test
cmp
jecxz
xorb
jne
cli
dec
mov
add
inc
xchg
or
bnd
out
push
ds
clc
insl
inc
insb
sub
imul
mov
pop
inc
ljmp
jbe
mov
test
pop
test
insb
mov
loop
das
and
inc
rclb
inc
in
inc
mov
fwait
ret
sbb
das
stos
or
inc
dec
out
dec
stc
mov
data16
mov
cltd
mov
outsb
cmp
cs
mov
stos
push
aad
pop
push
mov
add
pushf
test
jae
in
divl
sbb
push
nop
jl
inc
fiaddl
stc
test
sbb
and
in
das
addr16
out
inc
jo
outsb
inc
pusha
jmp
mov
imul
imul
das
cmpsb
xor
imul
jo
adc
popa
pop
cmp
lret
xchg
cmp
adc
in
inc
cmp
icebp
add
addr16
test
dec
popa
outsb
data16
push
cmc
pop
pop
or
fistpll
iret
ja
mov
js
je
filds
cli
fdivl
push
and
dec
pop
loope
jo
test
sub
jl
fdivr
mov
not
shll
aas
jmp
xchg
lods
das
xchg
mov
das
add
dec
data16
out
das
shufps
jecxz
mov
xchg
aas
das
jbe
addr16
mov
sub
jnp
test
sub
dec
popf
and
mov
ret
ja
ret
and
adc
mov
das
das
mov
sub
pop
and
imulb
scas
movsb
push
push
push
iret
in
cmp
and
je
push
push
push
inc
insl
adc
push
add
fisttpll
dec
sbb
jmp
jns
cmp
popf
arpl
add
insb
lock
lock
cmp
fistpll
xor
or
cmp
pop
sub
cmpsb
push
cltd
rorb
sbb
mov
lods
pop
cmp
mov
push
push
push
cmp
adc
jno
das
lcall
push
fldt
and
lret
mov
mov
and
mov
inc
or
adc
mov
insl
rcll
mov
cmp
loope
sarl
and
sbb
push
add
fidivrl
push
adc
loop
push
push
inc
pop
enter
jg
mov
push
fistl
aaa
data16
push
push
mov
or
mov
cmpsl
test
jmp
je
ljmp
movsl
fildl
loop
push
xlat
inc
jle
add
daa
mov
cli
push
stos
lods
movsb
imul
xlat
movsb
inc
jge
fisubs
and
sub
mov
sbb
scas
jbe
xor
out
sub
cmp
lahf
addr16
mov
sub
jp
das
ljmp
test
mov
clc
jo
pop
popa
push
mov
dec
jo
mov
aas
mov
daa
push
test
outsb
or
lock
out
fmulp
sub
mov
icebp
jb
mov
mov
push
in
lds
dec
xlat
mov
xor
sub
loop
sub
xor
aaa
sbb
sbb
pop
adc
jno
outsl
adc
in
hlt
adc
dec
mov
add
daa
or
fisubs
cld
xor
mov
cld
sbb
shrl
push
xchg
fistl
cld
and
popa
mov
fidivs
mov
test
mov
sbb
ljmp
adc
in
ud0
xchg
add
out
adc
test
pand
int3
mov
sub
sub
mov
das
and
fxch
das
outsb
jle
and
jbe
lods
arpl
mov
cmpb
punpckldq
data16
sub
in
sbb
mov
dec
push
mov
iret
pop
jmp
cmp
insl
sub
sbb
testl
repz
test
clc
aam
pushf
and
pop
adc
dec
sub
and
cmp
inc
daa
cmp
cmp
mov
xlat
or
push
movsb
out
sbb
sub
out
xor
push
fwait
decb
in
dec
out
dec
mov
cs
xchg
repnz
ss
jl
aaa
fidivs
test
jne
cmp
push
dec
daa
mov
cmpl
sub
cli
imul
cs
fbstp
lcall
push
ss
rcll
or
stos
xchg
loope
jb
push
imul
cmp
aas
jnp
mov
and
or
cmpsl
and
insl
inc
pop
mov
xor
das
lcall
mov
shr
inc
sub
and
inc
dec
xor
aaa
sub
sub
dec
ds
cmp
out
fwait
loop
lcall
icebp
pop
xor
dec
adc
mov
jae
je
sub
es
push
insb
adc
test
imul
mov
aad
xor
ja
fisttpll
mov
movsb
inc
cmc
mov
push
cmp
sub
xor
inc
mov
lods
popf
shrb
cmp
out
stos
repnz
xchg
out
sti
lcall
jae
in
into
lea
dec
jl
xchg
shl
push
dec
pusha
lcall
push
cld
and
cmp
pop
dec
push
dec
dec
dec
ds
aas
scas
or
fwait
jp
ss
int3
notb
cmp
jnp
xor
js
nop
cmp
dec
mov
sub
jb
inc
dec
mov
fdivrl
addr16
cmp
xor
bound
popa
sbb
push
and
adc
test
jg
imul
imul
jnp
das
or
cld
aas
xor
sub
aaa
ret
pop
dec
or
push
jb
dec
sub
pusha
adc
inc
ljmp
push
pop
cmpsb
sub
mov
mov
mov
in
or
sbb
mov
fmull
in
cmp
dec
repnz
pop
mov
fwait
mov
js
scas
js
std
outsb
add
negl
dec
or
fwait
push
adc
stc
add
adc
jbe
jmp
push
sbb
xor
mov
jmp
in
push
fwait
sub
notl
dec
pop
xchg
in
xchg
and
mov
mov
lret
daa
loop
repnz
mov
ror
mov
stos
in
mov
in
pop
push
push
dec
sub
mov
cs
scas
pushf
rorl
rolb
sbb
paddb
stos
jl
das
adc
aam
sbb
push
push
jo
jge
in
push
pop
mov
shlb
cmp
fidivrs
daa
adc
xchg
cmc
aam
addr16
ficomps
push
jb
add
xor
and
cmpb
mov
jo
jl
cli
inc
push
mov
lods
mov
push
mov
sbb
mov
inc
sbb
scas
dec
xor
fstpt
lods
or
mov
out
pop
push
sub
sbb
sub
cmp
out
and
sbb
pop
outsb
test
je
lock
insl
jp
arpl
xor
loope
pop
sbb
xlat
out
cmpsl
scas
sbb
jae
mulb
sub
pop
daa
mov
dec
shrl
out
push
icebp
inc
cmp
test
fldt
sub
xor
xor
stos
push
cli
icebp
cmp
push
push
push
push
call
outsl
sarl
xchg
and
adc
mov
lods
mov
pop
xchg
sbb
mov
popa
mov
add
mov
test
std
mov
dec
and
jp
insb
add
inc
cmpl
rol
push
movsb
xchg
push
rol
dec
xchg
loop
inc
sbb
and
mov
mov
sbb
mov
cli
pop
jle
pusha
mov
test
out
sub
fmull
adc
fmull
mov
sub
seta
add
movsb
hlt
addr16
xchg
jne
test
dec
sbb
mov
test
and
dec
cli
xchg
sarb
outsl
iret
push
cwtl
enter
movsb
leave
pop
jb
outsl
fs
inc
sbbl
mov
lcall
cs
inc
nop
jp
cmpsb
pop
insb
cmp
pop
cltd
xor
ds
popa
lock
mov
cld
mov
aam
xor
cmp
lret
jno
repnz
ret
cli
fucom
out
sbb
jb
sub
or
push
test
mov
jne
push
push
ds
insl
iret
and
cmp
mov
dec
icebp
sub
movsb
push
and
push
cmp
mov
jbe
pop
sub
dec
pop
in
scas
lods
fnstsw
fidivl
in
jo
mov
lds
add
js
into
gs
in
dec
push
lods
jo
or
lds
shll
mov
fsubrs
dec
adc
bound
aas
xor
ds
scas
sub
scas
dec
jmp
out
sub
pop
cmpsl
pop
hlt
lea
push
inc
or
jle
insb
inc
mov
mov
add
sbb
pop
mov
shlb
and
movsb
and
cmpl
pop
adc
pop
je
cmp
ficompl
mov
jnp
cltd
add
scas
aas
or
ficomps
mov
lods
push
leave
test
pop
aaa
movsl
je
and
adc
mov
into
mov
in
clc
lods
insb
dec
ss
aam
out
jnp
cmpsl
pusha
repz
arpl
cmp
test
sub
insl
or
enter
cmpsb
jae
pop
and
out
xor
scas
cltd
jl
push
mov
aaa
sbb
push
std
push
js
je
aaa
stos
jns
push
xchg
mov
push
pop
test
scas
test
sbb
lcall
mov
jbe
jo
cmp
mov
xor
out
rcrl
aaa
jg
mov
sbb
and
dec
popf
jl
adc
pop
shlb
adc
or
jbe
mov
in
dec
out
or
adc
xor
mov
xor
jne
mov
mov
dec
and
jecxz
sub
mov
sbb
enter
daa
xchg
xor
push
ret
lea
mov
in
xchg
int
shlb
cmc
lcall
lret
pusha
std
pop
cmc
aas
cmp
jo
pushf
rorb
scas
pushf
push
mov
aaa
xor
fldcw
push
xchg
xchg
scas
lds
mov
xor
push
int3
xchg
cmp
lock
push
sub
sub
push
sub
sub
rcrl
push
mov
jl
idiv
mov
lret
sub
mov
xor
imul
xchg
in
inc
pop
clc
cmp
call
or
jmp
cli
arpl
insl
mov
dec
mulb
les
sub
cmc
nop
call
test
test
mov
les
mov
aam
mov
cmpsb
mov
sub
rcrl
fwait
sub
xlat
mov
push
dec
mov
add
fmulp
std
cmp
rol
pop
xor
dec
mov
jno
pop
popa
nop
mov
dec
mov
sub
imul
and
mov
scas
imulb
in
xchg
imull
add
inc
movaps
mov
lcall
mov
xor
insb
push
inc
mov
cltd
dec
inc
or
imul
outsb
mov
jbe
loop
mov
pop
idivb
test
mov
aas
xchg
cmp
xor
push
inc
pop
or
push
das
lret
mov
pop
imul
lods
cmpsl
into
push
std
pop
jg
cs
cmp
jmp
cmp
sub
test
adc
jbe
sub
in
push
aam
fistl
add
fcoml
outsb
xor
insb
out
jge
adc
bound
sub
dec
movsb
mov
sub
pop
jbe
jno
sub
addb
xchg
pop
stc
mov
pushf
dec
nop
cmp
movsb
repnz
mov
pusha
inc
pusha
lock
push
sbb
orl
mov
jecxz
xchg
ficoml
mov
pop
xor
sub
hlt
inc
inc
out
outsl
mov
and
fs
xorb
scas
inc
mov
sahf
cltd
mov
ficoml
cmp
and
insl
dec
pop
inc
out
negl
push
cmp
test
out
out
mov
call
das
sbb
sbb
and
xbegin
jo
scas
pop
les
pop
movsb
cmp
mov
stos
sub
outsl
outsb
or
cmp
dec
rolb
ss
push
inc
mov
jno
inc
ja
cmpsl
mov
or
outsb
adc
inc
cwtl
loop
inc
push
inc
adc
subb
ss
leave
push
aam
add
xor
push
xchg
je
inc
fisubs
test
cmp
jl
dec
jge
cli
add
push
jecxz
dec
mov
arpl
addr16
fidivs
dec
data16
std
repnz
pop
cmp
pop
icebp
mov
jp
imul
std
outsb
outsb
aas
cmp
xor
mov
jb
addr16
jae
sbb
stos
cmp
clc
aam
xchg
clc
dec
in
add
clc
mov
ss
test
scas
ja
repnz
and
leave
mov
loope
sub
or
js
test
dec
cltd
xor
and
sub
jnp
cmpb
in
shlb
call
add
sub
pushl
mov
data16
cmp
mov
push
cwtl
sub
stos
xchg
repnz
test
aas
clc
push
push
adc
inc
jp
push
jecxz
jl
rcll
cmpsb
scas
sub
in
insb
cmp
int3
subb
dec
lcall
bound
inc
ja
cmp
jp
js
pop
xor
push
adc
cs
mov
das
push
jge
xor
sbb
mov
or
mov
pusha
jl
ds
popf
jnp
popa
inc
jbe
xchg
push
bound
mov
mov
addl
jae
sub
pop
push
xlat
mov
lds
mov
dec
push
sbb
jb
aas
mov
sti
lret
mov
std
dec
cmpl
data16
xchg
sub
xor
rcll
inc
jns
fcoml
sahf
sub
arpl
cmp
inc
push
pop
jg
leave
push
fistl
sub
imul
cmp
xor
push
in
push
mov
push
push
data16
sub
sahf
aaa
std
pop
pop
inc
stos
movsl
jge
push
dec
pop
decb
imul
jns
cwtl
mov
or
enter
test
mov
scas
insb
and
push
mov
sbb
mov
rcl
andl
in
and
fnstenv
xor
push
adc
cltd
push
scas
test
dec
stos
cmp
dec
sub
cmpsb
pop
popa
pop
cwtl
add
js,pt
or
ljmp
inc
mov
adc
ficomps
mov
xor
scas
xor
and
sub
push
cmp
pop
cmpsl
rorb
je
dec
xchg
or
shl
sbb
dec
out
mov
lcall
fwait
sbb
movsl
dec
xlat
cmp
push
jne
xchg
cmp
fwait
lret
mov
adc
mov
popa
fcmovnb
orl
nop
and
dec
fdivrs
cmp
cmp
push
inc
imul
movl
sbb
loopne
js
add
cwtl
cmp
fimuls
repnz
cmpsb
testb
push
push
dec
jo
mov
pop
ja
push
mov
and
push
addr16
fbld
cli
cmp
cmpsb
shrb
lods
ret
xchg
sub
xor
shlb
call
js
push
dec
push
adc
pop
aad
mov
jae
mov
clc
shll
mul
stos
shrl
mov
cmp
daa
stos
and
adc
pop
mov
dec
test
or
or
and
dec
cmpsb
gs
dec
imul
push
jbe
in
jb
dec
ja
mov
jns
mov
pop
inc
cmpsb
daa
mov
test
push
xchg
mov
xchg
adc
mov
fs
cmp
es
outsb
or
ss
push
icebp
xor
mov
outsl
xor
movsb
out
out
sbb
in
sub
push
dec
aam
subb
inc
mov
cmpsb
pop
dec
sbb
paddusw
insl
add
nop
shlb
stos
sar
xchg
sub
inc
lcall
xor
jecxz
out
cmp
test
xchg
scas
xor
adc
inc
aaa
pop
jg
fwait
mov
push
scas
mov
data16
popa
mov
lahf
daa
cmpsb
and
in
addl
xor
repnz
aad
cmp
adc
xchg
imull
movups
addr16
sub
insb
mov
imul
cmp
pop
ret
push
scas
sub
ljmp
ds
pop
out
mov
lcall
decl
scas
fstpl
into
dec
ljmp
fpatan
fcmovnu
cmp
je
test
xor
scas
push
adc
shlb
jg
insb
add
pop
lock
jbe
fsubrs
lods
stc
rcll
scas
fisubrs
aas
jns,pt
xchg
out
xor
daa
cmpl
cmpsb
shlb
pop
cs
sub
pop
push
arpl
stos
out
fwait
xchg
mov
jno
repnz
js
xchg
fsubrs
dec
xor
enter
sub
jnp
adc
xor
xor
ljmp
pop
and
sub
xorl
in
push
sbb
sbb
push
daa
in
xchg
out
lcall
call
inc
fnsetpm(287
shlb
cmpsl
dec
imul
jp
adc
adcl
scas
jl
pop
mov
in
pop
sbb
xlat
decb
lret
popa
call
push
loopne
popf
mov
inc
adc
xor
negb
adc
cmp
dec
in
jmp
inc
jl
pop
push
lcall
cmp
xchg
and
lock
stos
inc
imul
xchg
scas
xor
test
call
xor
sub
push
sub
loopne
sbb
out
inc
cmpsl
and
jmp
mov
or
push
fcmovne
bound
lods
and
stos
fwait
cli
in
and
xchg
adc
repnz
loopne
add
not
pop
mov
add
push
lcall
and
jl
mov
pop
leave
arpl
push
mov
push
dec
fcompl
sub
mov
push
jne
dec
cli
pop
leave
adc
imul
sub
cld
xor
fnstsw
push
jbe
mov
leave
xchg
push
fadd
adc
addr16
int
jbe
sbb
les
sbb
arpl
stc
idivb
test
test
pop
les
cmp
stos
ljmp
cmp
ds
insl
xchg
testb
or
ljmp
mov
addr16
subb
push
arpl
push
adc
pop
ljmp
inc
adc
cs
ds
push
inc
loope
and
mov
loop
xor
aas
ja
outsb
push
sbb
aam
lock
sub
lret
push
sarl
jmp
jl
pop
pop
shrl
add
mov
imul
or
xchg
fisttps
push
rep
mov
ss
repz
pop
aaa
dec
js
cmpsb
cmpsl
fildll
inc
adc
pusha
adc
std
in
jg
or
mov
mov
std
mov
in
mov
jl
shll
int3
cmp
mov
cmp
nop
adc
stc
sbb
add
push
ja
cmp
push
inc
insb
jnp
mov
aaa
and
pushf
sbb
jge
mov
pop
in
out
sbbl
pop
mov
movsb
push
pop
push
iret
shl
stos
mov
sub
sbb
fs
shrb
mov
sbb
aas
les
jbe
lcall
cmp
js
jb
ret
testl
aad
pop
cs
jp
fistps
mov
jbe
outsl
sub
cld
out
inc
push
push
loop
lcall
or
nop
cld
daa
aaa
cs
inc
bound
and
fstpl
push
notb
aas
lahf
repnz
mov
out
das
push
addr16
mov
mov
jmp
and
nop
scas
xchg
cs
jl
jnp
jecxz
insl
sarb
in
or
in
dec
xchg
adc
sub
jecxz
jle
cmp
fwait
and
jo
and
and
inc
cs
scas
sub
inc
pop
cmp
inc
bnd
scas
fldt
inc
jne
popa
cmc
cltd
inc
pusha
push
divl
xor
pop
addr16
cwtl
adc
loope
test
jo
lock
and
or
xor
jno
clc
jg
pop
sub
cmpsb
call
cmp
pop
xor
sbb
cmp
sub
fwait
xor
adc
test
cmp
mov
mov
sub
xchg
mov
aaa
add
pop
or
dec
sahf
jns
cs
and
mov
pop
inc
lcall
sbb
test
call
sub
imul
pop
aas
inc
pop
sub
push
imull
addr16
out
xor
mov
push
dec
ljmp
in
out
cs
jge
imulb
push
pushf
jno
lret
jne
and
xor
add
daa
cmpsb
popf
daa
mov
dec
jge
and
rorb
and
nop
xor
mov
push
pop
data16
push
lock
leave
imul
test
cs
ljmp
cmp
outsb
dec
pop
fstpt
cmpsl
sbb
sub
dec
push
and
or
pushl
ljmp
iret
shl
dec
outsb
add
jae
lods
cmp
adc
mov
lret
push
fistpl
test
push
movsl
lret
popf
jmp
in
aad
js
arpl
test
and
call
mov
sti
dec
aaa
and
dec
push
add
scas
or
push
dec
lcall
loope
scas
inc
addr16
or
jmp
inc
push
addr16
scas
gs
cmpsb
out
mov
pop
xchg
ds
pop
and
jno
popa
and
cmp
add
imul
pop
adcb
dec
mov
scas
ffreep
in
fildl
jae
cmp
and
push
sub
leave
lcall
push
pop
in
sbb
test
adcl
mov
lret
mov
cmp
xchg
and
dec
jge
and
pop
popf
or
sbb
mov
sbb
mov
out
push
mov
pop
and
and
xor
out
loopne
cld
lahf
js
mov
orl
int
jecxz
sbb
mov
mov
cmp
outsl
jge
sahf
push
cmp
dec
jne
mov
adc
add
jo
adc
aam
int
jbe
jge
arpl
addl
dec
cld
xchg
ss
mov
jne
int
xor
mov
pop
aas
cmpsl
cmp
int
push
daa
fidivs
push
cmp
mulb
hlt
imul
sbb
pop
out
sarl
cmpsb
test
cmp
sub
sarl
cmp
in
pop
pop
mov
cmpsb
outsb
mov
mov
mov
push
mov
jbe
mov
xchg
push
jp,pn
sub
scas
pop
xorl
pop
aad
jnp
xchg
mov
cs
push
xor
cmpsb
pop
outsl
pop
iret
jbe
jns
pop
mov
lods
cmp
add
jnp
outsl
xchg
pop
xor
imul
add
push
push
push
mov
movsl
push
jne
jb
cwtl
mov
add
cmc
scas
andb
iret
cmp
mov
jle
mov
stc
ss
out
or
xor
push
mov
inc
xor
push
xor
movl
pop
pop
push
jl
and
dec
popa
nop
pop
lcall
pushl
leave
xchg
xor
aaa
jbe
add
cmp
inc
dec
jl
scas
inc
popa
iret
push
cmp
das
xchg
ljmp
add
mov
daa
cmpsl
cmpsb
lods
mov
cmp
sub
mov
inc
jl
jle
test
fistps
scas
dec
das
loop
add
nop
push
push
in
scas
jbe
push
leave
pop
stos
jbe
xor
push
bound
aaa
lret
mov
adc
xor
out
push
out
pop
cmpsb
imul
lcall
lret
fidivrs
leave
jl
ja
xor
stos
ss
stc
push
shl
aaa
nop
dec
leave
xchg
loopne
fmul
in
dec
imul
add
aad
jb
mov
mov
dec
ja
mov
out
or
add
cs
dec
inc
jp
sahf
and
cs
pop
cmp
dec
stos
dec
dec
mov
push
test
mov
xchg
test
mov
xchg
call
pop
jne
push
cmp
aam
pop
mov
bound
loope
pushl
jl
and
movl
out
test
xchg
push
cmpsb
jns
outsb
jmp
les
jbe
cli
int
fisttpl
outsl
jnp
aad
push
daa
or
cli
cltd
jno
and
popa
and
push
lahf
hlt
daa
or
ljmp
dec
lahf
push
cmp
xlat
sub
push
loope
jge
adc
stos
test
test
pop
add
lods
cmpsl
sbb
div
adc
fdivrs
jge
js
mov
icebp
xchg
aaa
xlat
lret
dec
out
mov
cmp
ss
cmp
outsb
daa
inc
push
cmp
sbb
scas
push
scas
pop
xor
cli
out
cmc
dec
jl
jno
imul
xchg
testb
cmp
adc
xchg
push
js
xchg
push
fcoms
insb
cmp
jp
lds
sub
icebp
push
or
add
ficomps
mov
fldcw
ljmp
jmp
mov
int3
cmp
repnz
test
loop
es
imul
cli
shrb
test
xchg
je
out
adc
mov
inc
mov
add
test
push
pushf
xchg
sbbl
push
push
dec
add
add
xchg
jne
outsl
addr16
mov
popa
in
fcomi
pusha
lods
and
sub
sbb
scas
mov
sbb
fwait
out
sbb
inc
lahf
pop
fs
adc
mov
in
mov
jp
movsb
cwtl
in
ret
call
push
sub
aam
mov
push
inc
pop
jmp
or
mov
loope
aaa
test
ret
lahf
aad
add
jo
arpl
in
xor
jno
xchg
cmp
outsb
call
sub
jne
mov
arpl
and
jmp
dec
arpl
in
aaa
mov
jnp
or
fiadds
adc
mov
push
push
pop
push
sub
pop
je
out
mov
adc
xchg
insb
daa
inc
sahf
aaa
sub
in
sub
pop
out
xlat
inc
das
inc
cmp
pop
mov
sub
jae
testl
mov
imul
stos
in
cwtl
mov
lods
adc
dec
ja
sub
sbb
scas
xorl
push
lods
test
push
mov
jp
cwtl
popf
jb
pop
ret
or
addr16
add
cmp
loop
cmp
test
iret
xor
xor
stos
scas
mov
jle
lret
sub
outsb
cmp
out
cmpsb
scas
mov
mov
sub
or
scas
cmpsl
fidivl
cmp
jb
push
outsb
daa
popf
aaa
or
popa
cmpsb
pushf
cs
or
inc
das
cmpsb
repnz
ja
xor
out
fsubl
notl
mov
mov
nop
sub
pop
mov
leave
inc
mov
push
cs
dec
push
sub
lcall
pop
inc
clc
out
jae
pop
sub
push
mov
outsl
mov
inc
jnp
dec
bound
mov
mov
ljmp
popa
repnz
push
dec
or
jecxz
cmp
adc
adc
test
into
push
gs
jo
sub
in
test
xchg
lcall
stos
inc
cs
pushl
jge
test
aas
push
cmp
sub
test
dec
into
mov
dec
jae
outsb
mov
cmp
or
sub
psrad
popw
cmp
sub
adc
data16
sub
sub
mov
inc
mov
adc
jne
ret
push
sbb
fwait
xor
sub
je
mov
pushf
jle
jp
mov
xchg
push
adc
icebp
push
dec
cmp
adc
pop
mov
cmp
out
jbe
mov
cli
or
pop
inc
cmp
push
cmp
dec
cmp
push
pop
pop
mov
ss
ljmp
jae
int3
ret
push
jbe
insb
iret
jl
sub
xchg
adc
scas
mov
cs
xchg
stos
bswap
fisubl
decb
push
ds
push
fidivl
push
mov
fs
test
sub
loop
mov
jns
jnp
int3
push
out
inc
lcall
fidivrl
sub
insb
push
ss
cmovae
mov
lea
adc
inc
sub
imul
push
out
cmp
mov
xlat
ds
popa
ss
cmpsb
sbb
test
sbb
fwait
inc
pop
pop
std
jae
jb
stc
data16
xlat
out
cmp
dec
pushf
push
xor
add
scas
icebp
lret
lret
movsl
lret
in
mov
cmp
cmpsl
sub
or
imul
scas
jne
pop
add
sbb
sub
ds
add
dec
jge
out
inc
in
loope
pmullw
fstpt
mov
adc
ltr
div
das
dec
out
adc
ret
push
add
mov
xor
mov
mov
xor
rorl
int
fmul
cmpsl
sbb
fcomp
ret
dec
out
pop
incb
mov
xchg
inc
xor
jo,pn
out
mov
fs
jo
mov
push
jae
cmp
cmp
scas
jnp
mov
push
mov
cmp
xchg
push
lods
enter
add
mov
xchg
jnp
xchg
mov
adc
or
ja
inc
xchg
iret
sahf
push
dec
sti
rorb
mov
mov
dec
sub
shrb
out
fists
mov
add
push
cmpsb
fdivrp
pop
out
sbb
cs
or
mov
mov
push
cmpsl
lods
jmp
cld
xor
cs
sarl
push
bswap
cmp
adc
jne
fisubrs
ds
fs
sub
sub
or
imull
stos
jnp
pavgw
ds
nop
adc
add
xor
cmp
insl
push
shlb
jge
push
pushw
aam
xor
sub
push
es
pop
sbb
call
xorb
inc
cmp
mov
push
aaa
sub
stos
fwait
imul
mov
aad
inc
pop
sbbl
sti
sarl
cmp
outsl
mov
xor
push
push
pop
dec
mov
clc
cmp
std
mov
in
sbbb
adc
mov
dec
addr16
sub
pushf
sbb
pop
adc
ss
push
dec
jnp
fwait
ret
push
imul
sbb
aaa
cwtl
mov
adc
stos
popf
test
movsb
aad
mov
or
popf
jb
mov
xchg
mov
das
outsb
cmpsb
cmpsl
mov
test
cmp
dec
pop
sbb
cmc
aaa
add
das
jl
stc
xor
das
dec
mov
dec
shrl
pop
out
pop
sub
xor
jo
sbb
xor
das
jns
xor
push
or
das
out
inc
fdivrs
lahf
dec
mov
test
aas
push
mov
iret
push
adc
pop
mov
aaa
mov
aaa
pop
testb
scas
mov
ficompl
in
das
jbe
mov
pop
das
push
push
addr16
sub
dec
subl
jmp
jnp
adc
lahf
jae
mov
das
scas
dec
mov
stos
xchg
rcrl
sub
repz
je
js
adc
push
inc
adcl
xchg
in
shrl
jle
jnp
insb
cmp
sub
and
dec
in
rol
les
xlat
jl
pusha
add
outsb
vcvtdq2ps
adc
mov
aaa
fnsave
enter
and
daa
shlb
fisubl
cmp
xchg
int3
dec
adc
popf
jnp
cli
pop
ss
and
fwait
jne
sbb
xchg
or
test
jl
adc
push
mov
pop
negl
ja
pushf
cltd
pop
bnd
inc
xchg
arpl
sbb
jns
cmpsb
dec
sti
movsl
shlb
adcb
xor
push
stos
mov
pop
dec
fistps
sbb
clc
xchg
push
out
mov
bound
pop
xor
lcall
cmpsb
mov
sbbl
test
inc
pop
out
mov
xchg
mov
divb
lret
mov
fdivrs
pop
sub
pop
test
mov
adc
mov
scas
cld
push
in
out
scas
push
inc
pop
jg
xor
stos
mov
fdivrs
test
push
jbe
xchg
outsl
lcall
shlb
push
xchg
mov
imul
outsb
lret
ss
mov
inc
dec
lods
addr16
sub
mov
xchg
jl
les
stos
sbb
push
jne
dec
jne
or
or
jbe
pop
push
arpl
jno
sub
cmp
aam
push
push
jo
inc
inc
sbb
push
xchg
adc
fwait
mov
or
xor
jg
inc
mov
stos
mov
mov
div
loope
das
hlt
inc
sub
and
sub
mov
sub
mov
xor
mov
ss
and
test
cli
push
cmpsb
arpl
clc
fisubrs
jno
pop
fs
jge
imul
out
push
nop
add
mov
cmp
insb
test
add
into
jp
nop
xchg
test
jne
rorl
fidivrs
lcall
daa
mov
push
and
cmp
cs
lea
sub
test
jmp
xor
rclb
and
sbb
outsb
inc
jl
lock
std
mov
lret
and
out
cmpsl
or
adc
jbe
and
das
outsl
mov
dec
cmp
repz
shll
mov
mov
cs
cmp
call
pop
sub
stos
sbb
sbb
pop
dec
cmpsb
and
hlt
aaa
jmp
stos
or
and
pop
imul
inc
ss
adc
rcll
in
cmp
ret
sbb
add
push
and
xchg
lods
out
out
das
sub
scas
test
push
lret
shlb
insb
push
dec
xor
cmp
orl
inc
jbe
mov
sbb
inc
lret
jmp
aas
pop
imul
sub
sub
xor
pop
jl
xchg
out
loop
rcll
adc
pop
addl
or
xor
cli
and
out
jle
xchg
sbb
pop
adc
aad
push
sub
xchg
xor
test
adc
and
das
cmp
ficoms
insl
popa
push
mov
in
daa
in
dec
fld
outsb
je,pn
shll
jge
pushf
je
and
jbe
dec
sub
push
mov
imul
xor
dec
cmp
mov
std
movsl
or
fs
push
inc
jbe
cmp
add
mov
bound
cmpsl
dec
sub
aam
xorl
and
movsb
fwait
adc
pop
popf
adcb
push
mov
ss
popa
jl
and
stos
lea
jg
jne
and
pop
inc
jo
fimuls
mov
inc
sub
push
dec
cs
rcrl
mov
das
scas
jecxz
repz
popf
dec
xchg
aas
or
pop
ficompl
mov
or
pop
sbb
mov
lahf
test
dec
not
cmc
insl
mov
mov
inc
out
ds
mov
jbe
fmuls
adc
jp
jp
jo
loope
mov
mov
xlat
jbe
repz
hlt
push
pop
lcall
mov
sarb
adc
mov
sbb
dec
scas
ficoml
out
iret
sets
imul
fldl
ja
mov
dec
jp
dec
scas
inc
movsl
pop
shrl
or
lret
pop
sarl
add
sbb
dec
addr16
jbe
notl
nop
mov
lcall
gs
pop
adc
loopne
out
or
ss
fsubs
test
mov
cs
pop
push
adc
xor
and
sub
aam
mov
pop
push
and
and
push
and
dec
inc
rcrb
adc
ss
xlat
aad
lock
cmpsb
ljmp
jl
inc
cmp
in
movsl
aaa
push
dec
xchg
ret
sbb
jbe
add
mov
push
and
shrl
sub
std
mov
pop
mov
xor
out
sahf
andl
jo
in
mov
and
mov
jnp
js
push
movsl
ja
push
add
stos
mov
inc
ds
ret
and
inc
loopne
call
cltd
lret
cli
popa
idivl
cmpsb
std
and
push
popa
xlat
shrb
test
jae
push
dec
shll
scas
add
cmp
mov
insl
or
sub
loopne
ud1
mov
cmp
pusha
scas
jne
or
pop
icebp
clc
std
hlt
mov
nop
dec
sub
sbb
and
cmp
or
mov
jl
outsl
push
add
jns
ds
jo
xor
mov
les
data16
sbb
ss
add
shll
dec
mov
and
int3
push
jb
popfw
out
leave
adc
stos
outsl
push
mov
icebp
mov
mov
aas
js
xor
insb
dec
push
into
fwait
pusha
pop
jns
mov
and
popf
or
add
daa
lcall
das
jg
adc
setge
cmc
cmpsl
xor
jnp
movsb
xchg
js
dec
lods
lret
xchg
ds
xchg
fstpl
movsl
dec
je
sbb
ljmp
cli
js
cmc
lea
lcall
inc
sti
dec
jge
and
mov
fwait
jl
push
or
jmp
stos
jbe
xor
lods
data16
enter
sub
sub
dec
outsl
pop
or
mov
scas
loopne
inc
add
inc
fwait
into
mov
jmp
mov
cmp
mov
aaa
fwait
enter
inc
scas
inc
push
mov
scas
test
mov
inc
lret
js
in
in
push
pop
adc
loopne
dec
ss
push
cld
out
std
addr16
sub
pop
inc
and
pop
or
or
insl
inc
mov
aam
fadd
rcrl
push
xchg
ss
cmpl
loope
lcall
sbb
sub
sub
push
push
sub
sbb
and
sub
add
or
cld
sub
mov
rolb
fsubrl
out
sub
dec
ljmp
inc
mov
sub
stos
dec
stos
daa
sub
aaa
mov
stos
xchg
ljmp
inc
das
sub
pop
addr16
das
fs
pop
outsl
mov
push
mov
ficoms
aas
xor
addl
addr16
inc
cmp
push
cmp
xchg
xor
aam
imul
push
das
sub
addr16
cmp
stos
clc
cs
loope
jbe
repnz
fsubrs
lock
cmp
cmpsl
pop
cmp
dec
imulb
or
das
pop
xor
push
fimuls
pop
outsl
in
pop
mov
loopw
push
jb
lea
inc
pushw
cwtl
push
mov
repnz
jmp
jle
mov
jns
bound
dec
jle
inc
pushf
mov
dec
mov
xor
dec
hlt
jo
scas
pop
pop
into
cmc
scas
lahf
mov
cmpsl
aas
aas
ljmp
jle
sub
ds
das
jno
pop
pop
jge
xchg
dec
mov
add
mov
mov
cmpsb
stos
mov
and
fcmovu
divb
cmpsl
out
and
stos
push
movsl
sar
sbb
cs
xchg
push
sub
inc
xchg
scas
lret
cld
insb
adc
movsb
cs
sub
bound
outsl
in
aaa
jno
inc
fwait
jecxz
out
popf
out
ss
sar
das
push
aaa
jbe
mov
pushf
loopne
adc
push
mov
sub
xor
mov
lahf
rorl
mov
mov
popl
cli
outsb
sub
ficoml
push
and
andl
adc
cmp
dec
shll
sbb
push
outsb
push
lret
popa
push
jno
out
repz
xor
out
xchg
jg
in
ja
popf
xor
and
and
das
xchg
aas
ret
dec
jp
loopne
push
jmp
push
dec
push
insl
add
das
jo
fldt
pop
ret
cmovge
dec
mov
jns
divb
inc
xchg
jl
mov
daa
xor
lcall
je
scas
into
jb
xchg
xchg
je,pt
out
inc
jp
pusha
sahf
lcall
and
cmpsb
test
ja
insb
push
sub
fwait
gs
and
enter
xlat
xor
inc
sub
dec
fistl
es
pop
out
cmp
push
xor
rorb
jne
roll
push
lret
adcb
xchg
adc
ljmp
popf
dec
xor
mov
push
into
inc
mov
pop
sbb
cmp
scas
push
fwait
incb
leave
adc
jo
push
aad
adc
xor
mov
sub
add
movb
stos
ss
pop
jbe
mov
xchg
je,pt
nop
pop
out
xchg
xor
dec
sbb
bswap
icebp
push
pop
cmp
les
out
xor
mov
jge
cmp
pop
test
rorb
outsl
out
ds
or
xchg
imul
mov
jmp
js
ds
mov
add
subl
jle
cmp
das
xchg
pop
adcl
push
and
dec
and
pop
insl
sub
test
jo
repz
dec
loop
arpl
rcrl
lahf
adc
ret
loope
enter
adc
mov
dec
cmp
scas
xor
push
and
and
add
ljmp
inc
sahf
mov
xor
ds
and
into
xor
push
iret
sub
call
mov
xchg
jmp
test
mov
ja
clc
in
jb
ja
subl
sbb
mov
pop
push
xchg
pop
stos
mov
pop
out
dec
inc
jb
das
jbe
lea
addl
fwait
sarb
adc
add
sarb
xor
out
mull
das
sub
out
pop
and
push
sub
cli
lcall
out
pop
das
inc
cmp
pop
mov
test
jg
fdivs
push
mov
push
cmp
pop
pushf
aam
lret
nop
into
lea
decb
and
adc
cmpb
pop
rclb
jo
inc
test
cmp
mov
mov
xchg
rclb
mov
pop
push
push
or
xchg
or
adc
pop
push
dec
les
jb
pop
cmp
mov
test
or
loopne
xchg
loopne
jbe
push
inc
sub
repz
push
inc
sub
loope
xor
repz
push
imul
cmp
das
imul
and
pop
out
inc
sbb
cvtdq2ps
push
imul
popa
jp
fstp
jo
cmp
sub
test
int
fwait
fs
scas
ret
mov
test
inc
mov
push
mov
lret
rcrl
test
sub
adc
jl
push
ds
sbb
sub
leave
lret
movsl
shrl
xchg
scas
mov
jecxz
push
inc
dec
lret
adc
dec
adc
call
clc
loopne
lock
jl
jbe
sarb
add
jg
aaa
jnp,pn
jl
js
leave
push
add
mov
ficompl
out
sbb
inc
jge
lock
bound
pop
add
test
cmp
sbb
inc
call
cmpsb
loopne
cmp
xor
mov
aad
lret
pop
dec
cmp
movups
mov
push
insb
sub
adc
in
sbb
adcb
push
cs
xor
ljmp
scas
xor
push
shll
and
rcrb
dec
pop
mov
hlt
loopne
xchg
sub
pop
cmp
adc
in
dec
mov
iret
xor
mov
bound
ljmp
das
mov
movsl
xlat
cmc
push
lcall
cmp
sbb
xlat
mov
pop
std
pop
repnz
ret
lahf
into
cmp
xor
add
aad
out
mov
mov
or
mov
outsl
mov
sbb
jnp
cld
je
mov
sub
jg
aam
bnd
push
fidivs
mov
or
push
enter
das
imul
mov
test
bnd
pop
call
test
pop
sub
push
jmp
stc
call
mov
in
or
and
sub
ja
and
mov
and
pop
mov
out
lret
cmp
xor
adc
scas
stos
out
iret
sti
or
je
push
je
dec
hlt
sbb
mov
adc
xchg
adc
push
adc
outsl
cltd
mov
movsb
dec
xchg
xchg
cmp
inc
lock
pop
mov
sub
cmp
stc
dec
popf
lret
cmp
pop
pop
pop
aaa
data16
pop
add
das
daa
test
and
ds
xchg
cmp
sub
in
adc
iret
push
mov
jo
adc
mov
cmpsl
scas
cli
cmp
inc
push
mov
movsl
xchg
mov
addr16
ret
test
xchg
mov
aam
sar
std
imul
mov
dec
std
popf
jno
test
dec
xor
mov
fstpl
cs
cmp
xchg
inc
das
push
lret
mov
jbe
and
int3
adc
fsubrs
jns
sub
sub
andb
sub
out
lcall
in
aad
in
push
add
adc
jl
mov
enter
aaa
mov
cmp
and
inc
jle
pop
jbe
dec
test
sub
xor
xor
pop
daa
sub
mov
cmp
sbb
or
pop
cmp
push
rcrl
outsb
fwait
pop
pop
push
aas
outsl
cwtl
scas
dec
pop
ja
xchg
ret
add
sbb
sub
cmc
mov
roll
movsl
push
jmp
test
push
aam
imul
dec
dec
inc
adc
aam
and
cmp
sub
dec
push
push
fmuls
es
icebp
jae
pop
sbb
int
sub
popf
imul
jl
jnp
cmp
lcall
insl
data16
jnp
ficoms
insb
mov
cmp
jp
mov
daa
stos
pushf
test
fldcw
in
inc
jnp
das
scas
fiadds
dec
lea
dec
imul
mov
rorb
daa
popa
lods
adc
bound
outsb
aaa
add
mov
pushw
adc
js
xchg
add
lcall
xor
lods
push
mov
xchg
sbb
in
jns
rorl
fimuls
test
stos
xorb
ss
jbe
dec
and
mov
mov
ds
in
cmp
leave
jge
dec
push
shld
outsl
cmpsl
xchg
pextrw
stos
pop
inc
adc
dec
xlat
lcall
stc
dec
xchg
gs
aad
inc
cmc
jo
xor
imul
fisubrs
jae
inc
jecxz
insb
cmp
push
sbb
xor
inc
insb
mov
aam
lea
sbb
cmc
push
pop
or
jae,pt
cs
fnsave
shll
ss
call
dec
xor
push
sub
lods
adc
les
aas
cvtpi2ps
xchg
pop
inc
das
inc
das
adc
push
sub
add
push
cs
dec
fisubrs
ucomiss
mov
jmp
xor
jg
das
lcall
out
and
add
xlat
pop
sub
and
xor
mov
mov
fidivs
mov
xchg
pop
loop
jne
into
mov
mov
enter
shl
into
das
sbb
fimuls
cs
mov
mov
xchg
mov
fcompl
cmp
jl
jg
nop
cmp
xchg
push
jb
stos
rol
adcb
das
push
ss
inc
inc
das
dec
dec
cwtl
xchg
jp
push
and
das
sub
push
jb
cli
aas
add
das
push
lret
repz
or
addr16
out
hlt
ss
stc
sbb
and
xor
ja
cmpsb
push
inc
das
adcb
fdivl
fildll
jmp
repnz
ror
repz
or
addr16
outsl
cmp
jns
cs
mov
stos
xchg
fists
int
mov
ds
fists
jg
push
sbb
outsw
std
mov
push
fnstenv
jnp
dec
in
lds
adc
dec
xchg
mov
cmp
cmp
pop
jle
mov
jp
aaa
outsb
lods
push
cmp
jle
mov
call
and
sub
les
hlt
test
xor
decb
das
shrl
cs
test
mov
sahf
lret
push
mov
xor
mov
lcall
das
push
xchg
mov
mov
pop
xor
mov
jae
pop
ds
mov
push
dec
out
das
pop
mov
insb
into
lods
les
mov
movsl
data16
push
mov
or
pop
outsl
fisubrs
sti
dec
push
imul
fisubrs
sub
xchg
pop
and
and
mov
xchg
movsb
sbb
fwait
jo
sbb
xorl
cmp
aaa
jg
pushf
xchg
scas
pop
mov
bound
cmpsb
lcall
fisubl
call
test
popf
cmp
insl
in
mov
adc
jle
int3
cmp
icebp
mov
dec
bound
insl
jno
add
adc
stos
mov
ficomps
je
jne
push
iret
add
fildl
sbb
loop
mov
incl
sarl
cmp
add
test
in
lds
repnz
cmp
int3
cmp
dec
repz
mov
test
adc
mov
outsb
decb
lret
push
popa
mov
dec
out
jmp
pop
dec
inc
clc
rcr
xor
cmp
cs
data16
add
pop
and
or
test
cmpsl
push
daa
fwait
pop
pop
out
lahf
mov
and
mov
ds
push
aam
out
or
or
sub
cld
scas
mov
inc
pop
scas
xor
xchg
dec
adc
fwait
cmpxchg
imul
fwait
mov
scas
inc
pop
cmpsb
push
out
jp
push
cli
xchg
das
bound
iret
mov
mov
test
and
mov
mov
insb
dec
jns
loopne
mov
shlb
sub
mov
fmull
ret
xchg
leave
mov
mov
sub
lods
aam
into
pop
sar
jbe
je
sbbb
subb
fistps
fisubrs
push
cmp
mov
and
sub
dec
ds
das
mov
add
stc
repnz
push
das
adc
stc
xlat
xchg
mov
cmp
shl
fildll
in
mov
scas
mov
push
mov
stos
jmp
mov
rol
mov
dec
das
mov
mov
cmp
push
repnz
pop
das
fs
mov
aaa
cmp
imul
loop
in
addr16
adc
ret
push
shrd
je
jmp
push
or
lret
aaa
jns
or
stos
jno
mov
xchg
repnz
shl
ss
loop
das
in
lret
mov
loop
ret
int3
dec
pop
dec
and
ds
cli
clc
cltd
mov
or
mov
dec
lret
pop
shrb
mov
rcl
mov
imull
sarb
ljmp
jbe
and
jmp
ret
mov
addb
dec
scas
inc
push
jg
mov
dec
aas
into
mov
push
jb
das
xchg
and
jg
xchg
cmpsl
push
xor
outsb
adc
mov
push
fmul
leave
xchg
mov
cmp
pop
nop
xchg
dec
dec
mov
xchg
into
scas
push
nop
push
sahf
cmp
push
mov
push
test
addr16
ss
adc
dec
push
mov
sub
fwait
mov
loopne
je
sbb
cmp
dec
out
mov
sbb
push
add
movsl
fdivrs
or
push
call
rorl
dec
cmpsl
roll
loop
cmp
inc
andb
lahf
fs
push
scas
in
and
pop
jge
rcrb
or
lods
fidivrs
iret
repz
xchg
pop
test
pop
inc
mov
sub
inc
mov
lds
dec
movsb
push
test
adc
jns
push
dec
scas
mov
jns
out
adc
je
lcall
cmp
pop
lcall
push
pushf
and
sub
rcrl
enter
dec
rclb
je
shl
push
negl
scas
push
test
data16
fidivs
icebp
inc
cs
sbb
maxps
loopne
ficompl
testb
daa
and
dec
jmp
pop
addr16
pop
out
out
arpl
sbb
mov
cmp
pusha
mov
cmp
cmovns
insb
int
adc
adc
test
and
push
es
xchg
push
lcall
hlt
lahf
stc
je
ja
jb
sbb
xchg
js
mov
sbb
mov
cmp
and
scas
mov
lahf
inc
jmp
stos
push
push
push
xchg
lret
cmp
rclb
mov
mov
lret
inc
dec
cs
ds
mov
fwait
addr16
cmp
push
scas
push
mov
xor
stos
cmp
jns
addr16
mov
push
dec
xor
pop
test
pop
fwait
sub
push
inc
mov
or
sub
scas
shlb
fstpt
stos
mov
das
adc
loopne
inc
jns
jbe
pop
mov
mov
push
shr
icebp
test
xchg
inc
xor
das
add
cltd
sub
std
decb
inc
push
mov
mov
cmpsl
repnz
cmp
ret
xchg
das
les
in
aaa
je
rcrb
das
jecxz
out
and
dec
shr
dec
mov
lahf
adc
push
push
clc
scas
mov
or
scas
ss
sub
das
imul
push
push
cs
jp
jle
mov
mov
fistps
das
cltd
in
inc
flds
cs
pop
and
pop
les
mov
inc
xor
sbbl
cmp
hlt
sub
push
int3
sub
adc
scas
jle
inc
fsubl
mov
push
mov
inc
sti
in
pop
es
sbb
das
pop
bnd
cmp
pop
pusha
jns
dec
ss
sbb
pusha
cmp
test
pop
mov
nop
mov
pop
mov
aaa
test
shlb
outsl
mov
pushw
ds
mov
adc
pop
pop
pop
daa
xchg
dec
jg
inc
ficoml
mov
das
mov
pop
pop
pop
sub
scas
push
push
mov
dec
dec
das
push
imul
stos
and
xor
mov
pushf
sahf
mov
pop
jb
inc
das
jnp
std
adc
jg
push
mov
xchg
scas
popf
cmp
push
outsb
pop
mov
js
cmp
outsl
ret
jle
idiv
ja
cmpsl
aaa
imul
mov
out
mov
scas
mov
das
cld
outsb
pop
scas
mov
mov
push
mov
lds
fidivl
mov
repz
mov
aaa
or
cmpb
cli
fsubl
out
sub
out
add
xor
fs
lods
inc
and
mov
push
mov
jge
clc
fimull
xor
ret
add
into
ret
pop
sbbl
sbb
or
sub
lods
ljmp
mov
test
dec
inc
xor
scas
xchg
sbb
push
mov
inc
lods
scas
cmp
add
sbb
icebp
jbe
adc
ja
pop
std
shlb
scas
dec
ficomps
xlat
std
sbb
cmpl
push
inc
pushf
jge
push
jl
test
add
jbe
xor
adc
les
iret
xor
pop
pop
and
cmp
imull
push
xor
popa
out
push
push
xor
cmp
aaa
cmp
and
sti
inc
push
sbb
dec
sbb
ja
in
jge
fwait
mov
int3
fs
ja
call
cmp
pop
cmp
jmp
leave
push
push
ds
mov
dec
inc
rcll
bound
xchg
inc
xchg
icebp
mov
int3
daa
inc
je
xchg
in
cwtl
xor
sub
enter
pop
repnz
jns
cmpsl
jge
dec
cwtl
mov
jns
fildl
push
push
jmp
push
xor
lahf
subb
mov
add
pop
xchg
inc
push
mov
xchg
js
add
imul
inc
mov
pop
add
ss
dec
nop
cli
js
inc
rol
dec
dec
lcall
outsl
daa
out
daa
inc
adc
mov
bt
xchg
inc
nop
sub
mov
jg
setno
pusha
mov
stos
aaa
aaa
aam
xlat
lret
cli
push
out
negl
sbb
sahf
unpcklps
daa
sub
and
into
dec
fnstsw
out
sbb
push
jle
adc
cltd
daa
mov
loope,pn
push
mov
loopne
or
into
mov
das
push
loope
sbb
rcr
imul
sub
jnp
loopne
addps
lahf
in
outsb
fwait
inc
or
mov
mov
in
mov
das
push
addb
mov
adc
nop
out
pop
cmpsl
push
pop
push
icebp
sub
notl
shr
push
test
mov
push
and
aas
movsl
fildll
hlt
push
jbe
sbb
add
mov
dec
sbb
xchg
out
push
sbb
xor
sbb
lock
scas
int3
sub
mov
cmp
mov
insl
dec
in
cmp
xor
rcrl
inc
cld
adc
jge
dec
inc
jbe
aaa
push
cld
fincstp
cmp
int3
mov
jne
pop
xor
lds
ds
jbe
mov
cmp
mov
jle
outsb
dec
sub
jbe
mov
dec
test
subl
jo
pop
imul
inc
jbe
inc
outsb
leave
inc
popa
dec
inc
orl
jae
add
inc
ret
or
sti
inc
in
call
icebp
sbb
dec
dec
cmp
dec
sub
bnd
mov
adc
push
hlt
repz
dec
ljmp
ljmp
jb
je
cld
nop
test
in
or
add
bound
sub
or
mov
or
jb
xchg
xchg
sbb
das
xor
xor
cmpsl
cmp
cmp
sahf
lds
sbb
ss
arpl
mov
and
insl
cmp
xor
inc
mov
cmp
and
aas
insl
jecxz
daa
scas
sbb
add
push
xor
lods
dec
test
dec
aaa
imul
cmp
inc
lods
sahf
sub
imul
inc
inc
scas
and
mov
ja
gs
negl
imul
mov
mov
adc
cmpsl
mov
das
push
jbe
fildll
pop
les
lea
lcall
into
dec
mov
jae
das
adc
inc
gs
xchg
sub
clc
dec
aas
cmpsb
ss
scas
das
or
cs
jg
sub
aas
cmpsl
inc
leave
scas
das
pop
jle
ja
repnz
fwait
data16
stc
insb
movsb
push
mov
mov
jnp
aad
inc
cmp
filds
add
enter
xchg
sbb
sti
test
lock
pushf
mov
and
inc
push
out
jnp
mov
insb
out
imul
pop
push
jg
negb
cmpl
jle
popf
outsb
hlt
mov
pop
push
mov
das
dec
int3
aas
xorb
je
out
daa
repnz
xor
inc
mov
mov
faddp
in
out
inc
add
mov
out
cmpsl
lds
loop
push
in
das
testb
mov
aaa
in
pusha
out
jne
out
pop
mov
into
ret
out
mov
popa
jb
jle
mov
das
xchg
int
out
pusha
mov
cmp
out
jecxz
dec
addr16
scas
mov
outsb
out
inc
pusha
xor
imul
dec
or
lret
cmovno
sbb
inc
and
out
decl
mov
aas
xchg
mov
out
leave
aas
ja
push
ss
and
or
adc
cs
imulb
repnz
shr
imul
mov
sahf
jae
push
sbb
mov
cmp
mov
daa
ficoms
adc
or
mov
jbe
idivb
mov
mov
inc
fcoms
push
xchg
rol
loop
mov
and
pop
inc
mov
push
iret
into
cs
in
push
xchg
cmpsb
mov
pop
sub
aas
jge
scas
loop
ss
mov
out
cs
mov
lods
mov
lea
mov
mov
xchg
ss
cmp
dec
cli
outsb
push
jbe
aas
fisubrl
icebp
dec
bound
sbb
xchg
jle
loop
das
cmpsb
test
inc
dec
cmp
or
repnz
mov
scas
and
push
ficoms
cld
and
cld
and
arpl
and
mov
sti
and
ss
pop
jg
loope
adc
xchg
pop
ret
insb
jp
addr16
add
jle
aas
pop
ja
orb
std
mov
xchg
jbe
lods
mov
loop
mov
mov
out
fimuls
jp
into
adc
fisubrs
aam
imul
mov
cmp
mov
push
call
mov
loopne
mov
push
fcmove
sub
cmp
test
into
dec
in
out
das
fdivrs
cmpsb
fisubrl
negl
scas
daa
int3
cmpsl
ds
inc
ss
das
jg
sahf
jb
lods
adc
mov
enter
cmp
xchg
push
ds
in
mov
dec
xor
ret
bnd
das
out
xchg
mov
das
notl
mov
pop
mov
pop
mov
sbb
pop
das
inc
xchg
lret
mov
push
lahf
dec
fisttps
jae
xchg
das
or
js
cs
xor
dec
mov
xchg
sbb
leave
jno
dec
mov
lea
in
das
cwtl
lret
scas
cmp
mov
mov
rorl
cs
insb
shrb
int
push
xor
add
dec
or
stos
cmpsb
fwait
xchg
repnz
int
ss
push
sbb
mov
pop
xor
popa
movl
lret
push
inc
cmpsb
lcall
push
xor
rorb
fists
or
or
adc
js
xlat
test
pop
ret
dec
sub
test
jmp
xor
dec
outsl
pop
ret
jge
mov
push
sahf
jne
fisttpl
mov
aaa
inc
xor
lcall
mov
adc
and
fildl
mov
xor
repnz
leave
test
fwait
push
push
bound
mov
lcall
gs
xchg
and
ljmp
fs
ljmp
out
mov
pushf
fimull
out
cs
adc
mov
scas
push
mov
mov
aam
ljmp
shll
daa
xor
out
dec
cmp
lcall
dec
sub
dec
js
dec
pop
xor
inc
xchg
leavew
imul
cmp
scas
and
popl
inc
mov
dec
mov
and
pop
inc
outsl
inc
scas
insb
lds
sub
adc
adc
xor
inc
xchg
push
sub
inc
mov
jecxz
push
sub
xor
or
addl
adc
or
es
aaa
push
jecxz
xchg
jae
daa
aas
out
imul
jg
jne
xchg
or
sub
jp
dec
loop
jno
std
cmp
ret
or
xor
jle
sbb
adc
out
dec
hlt
or
cmpsl
push
popa
and
addr16
out
inc
push
pop
test
test
pop
movsl
hlt
or
mov
scas
aad
imul
test
fisubs
cwtl
loop
setle
jp
inc
repnz
in
jo
sub
call
inc
mov
push
rcrl
test
cmp
es
or
outsl
sub
push
sub
ljmp
addr16
mov
std
jge
in
insl
cld
inc
jae
popa
ficoms
js
shrb
mov
cld
mov
jbe
test
in
jmp
push
sub
lods
dec
ss
xchg
sbb
push
push
adc
inc
punpckhwd
stos
xchg
or
mov
je
and
mov
test
popf
push
xchg
push
push
push
ret
or
jg
jg
repnz
in
aas
mov
pop
mov
scas
test
mov
add
decl
push
dec
push
stc
ret
xchg
and
in
outsb
jbe
lods
mov
inc
push
jle
nop
mov
call
cmp
dec
test
mov
insb
mov
divl
inc
xchg
popa
outsb
sub
jge
popa
outsb
ss
arpl
cmp
fwait
bound
mov
cmpsl
or
and
cs
scas
sub
mov
les
cmp
inc
cmp
pop
rcrb
outsl
push
inc
das
pop
out
jb
dec
popaw
sbb
test
cltd
sbb
out
add
adc
xchg
push
in
rcrb
test
out
dec
out
out
nop
daa
mov
repnz
fisttps
scas
push
je
mov
into
dec
test
test
ret
imull
addr16
inc
out
mov
pop
sub
xchg
in
cmpsb
test
in
fwait
cmp
leave
mov
add
popf
and
mov
push
and
in
dec
les
inc
int3
nop
mov
push
rorb
movsb
inc
cmpsb
mov
xchg
leave
jl
cmp
rorb
add
jnp
rclb
and
movb
or
das
aas
outsb
fwait
inc
mov
xor
push
sarl
cmp
sub
arpl
je
sub
xchg
push
xchg
pop
pop
push
jne
aam
jae
mov
mov
mov
sahf
push
loop
xor
sub
xchg
cs
mov
test
pop
xchg
mov
fdivl
movsb
cmp
pop
cmp
lds
jge
andb
xor
repz
test
mov
test
pusha
push
es
sub
rorl
mov
repnz
push
pop
mov
dec
push
pop
mov
push
adcl
push
mov
jbe
or
push
or
rcr
daa
je
push
cwtl
loope
pop
popf
aas
daa
test
fcoms
jmp
out
outsl
inc
mov
andl
cmp
mov
adc
imul
mov
in
aaa
sbb
mov
xchg
cltd
sbb
cld
dec
pop
fists
enter
pop
fs
scas
cltd
sub
adc
pop
clc
push
sub
jno
pop
sbbb
scas
mov
mov
pop
mov
std
fdivp
sub
and
push
out
bound
mov
mov
std
mov
mov
fistpll
inc
movd
stos
adc
add
scas
mov
sub
pop
movsb
dec
fwait
cmp
in
fdiv
adc
ljmp
mov
cwtl
jmp
mov
sbb
repz
out
iret
mov
lods
cmp
loopne
jecxz
cmpsl
mov
fstpt
daa
jmp
jge
sub
dec
xor
adc
lds
scas
ljmp
call
aas
stos
mov
bnd
mov
aas
mov
xchg
and
xchg
ss
out
push
jge
test
xorl
arpl
jge
push
mov
cmp
dec
shl
sbb
nop
call
cmp
pop
mov
push
lds
jnp
cmc
jge
jae
movsl
xor
int
lcall
je
lods
insb
cmpsl
lds
cmp
jl
mov
and
pop
int3
push
subb
test
pop
xchg
bound
inc
inc
stos
push
test
fidivs
jb
mov
jp
push
jle
xor
ss
mov
stos
test
mov
inc
fidivs
repnz
scas
int
sbb
adc
dec
cmp
int3
dec
imul
bound
cs
push
sub
test
data16
ds
lods
inc
outsb
pop
scas
jb
xchg
sub
jp
out
ss
ljmp
mov
pop
mov
push
lods
fwait
popa
dec
cli
push
pmaxsw
sub
subl
mov
sub
ja
sub
push
pop
pop
inc
movb
lods
push
roll
or
in
pop
dec
xchg
repnz
mov
int
push
dec
add
push
out
push
outsb
call
sub
adc
cmp
idivb
xor
lods
push
ds
pop
mov
and
pop
das
adc
out
xchg
ja
lods
inc
xchg
mov
mov
in
rclb
cld
test
push
or
sbb
sahf
xor
mov
mov
mov
out
fimuls
adc
pop
push
xor
mov
or
movsl
shrb
std
in
fcmovnbe
cld
jb
inc
jecxz
xchg
push
sahf
pop
inc
jae
jl
sbb
je
dec
jg
or
fdivs
and
and
lret
cli
mov
and
stos
pop
loopne
mov
push
dec
sti
mov
push
mov
lret
and
pop
pop
mov
lds
sub
lcall
mov
ss
popf
out
jo
and
adc
or
push
push
jl
ds
mulb
test
add
incb
add
lret
hlt
addl
and
pushf
ds
adc
sti
mov
lcall
scas
xor
stos
xor
je
mov
xor
outsl
rolb
xor
movsb
ds
sbb
dec
fwait
ja
movsb
cs
inc
aad
lret
mov
push
jecxz
pop
xchg
movsb
push
push
jne
cmp
jae
nop
push
xchg
ljmp
sub
xor
xchg
jp
cmp
push
xor
ss
push
dec
lods
ja
xor
fidivrl
sbb
lcall
cmc
lahf
negl
adc
mov
fwait
pop
movsb
sarb
and
adcb
add
adc
xchg
cmp
cmp
cmp
jmp
out
test
jb
xchg
xor
lock
dec
cmp
cmpb
sub
popa
jmp
addb
repz
mov
outsb
aas
pop
inc
aam
dec
jae
push
aam
rorb
dec
jl
enter
sub
jb
push
pop
pop
pop
xor
xchg
cmp
dec
mov
mov
outsb
xor
or
push
cmp
jnp
mov
test
and
push
fldt
adc
sbb
sub
sbb
xchg
push
adc
cmp
xchg
add
data16
in
cwtl
jb
stos
pop
push
mov
mov
les
push
sub
in
sub
sub
mov
popa
imul
dec
aas
pop
jns
cmpsb
popf
add
lret
dec
dec
loope
icebp
inc
xor
stc
jb
stos
push
dec
test
stos
fmull
scas
mov
js
enter
sbb
ja
movsb
add
dec
or
adc
ja
icebp
orl
mov
adcl
mov
cmp
xor
cmp
call
pop
xchg
int
inc
push
jae
mov
push
dec
jo
inc
cmp
test
test
push
outsb
jbe
xor
out
clc
mov
imul
icebp
add
jle
mov
int
ds
iret
ljmp
mov
push
out
jecxz
adc
and
std
ja
xor
std
std
roll
data16
test
imul
dec
push
sbb
mov
inc
xor
adc
push
and
mov
xor
aaa
loopne
xchg
mov
addb
adc
rol
add
jge
cmpsl
or
shrb
sub
mov
enter
xorb
push
xor
adc
sarl
lcall
sub
sub
xchg
scas
in
pop
xor
movsb
inc
mov
cmp
jg
pop
sub
cwtl
jle
and
inc
and
popf
xchg
iret
mov
sbb
sahf
cmpsl
mov
stos
aas
psllw
push
pop
jb
sub
mov
push
adc
fisubl
cmc
dec
jmp
cmpsl
and
or
cmpl
data16
mov
mov
xorl
test
push
sub
push
loopne
push
mov
mov
ret
and
inc
mov
adc
or
stos
lods
test
mov
cmp
mov
mov
std
sbb
lea
int
ss
out
sub
cmpsb
cmp
mov
push
sub
cmpsb
je
data16
stos
movsl
pushl
xchg
fwait
lret
popf
mov
xor
pusha
push
add
push
repz
cs
mov
jns
or
sub
and
sub
or
pop
cvtps2pd
inc
fstps
sbb
xor
dec
aam
cmpsl
arpl
sti
cmp
dec
test
adc
not
enter
sahf
mov
in
orl
inc
jbe
xor
call
jbe
and
dec
sbb
ficompl
outsb
fst
cs
push
out
jp
daa
icebp
cmp
cmpl
mov
cmp
scas
mov
cmp
lods
xor
sbb
rorb
arpl
mov
mov
insl
aas
les
cmc
mov
inc
daa
cs
add
and
out
aaa
fstpl
jmp
xchg
inc
cmp
fwait
dec
mov
and
sbb
mov
nop
cmc
dec
mulb
into
cmp
pop
popf
push
mov
hlt
clc
in
mov
add
push
sub
and
sbb
and
insb
xor
inc
es
cmpsb
popa
popf
dec
dec
xchg
jmp
pop
xor
in
mov
and
mov
sub
out
pop
and
and
jle
jbe
inc
and
dec
add
adc
test
mov
test
test
enter
pop
lcall
push
ljmp
mov
inc
push
in
sbb
dec
movsb
inc
xor
dec
adc
in
push
sbb
cmp
pop
scas
loop
xor
sti
std
lock
add
ds
push
pushf
cmp
popf
xchg
cmp
add
cmp
cwtl
xchg
sub
and
jmp
pushf
popl
rclb
loop
out
push
call
popa
and
int3
in
inc
cmp
and
push
loopne
push
sub
jge
jb
xor
xchg
cmp
and
enter
int3
outsl
sti
xor
and
jbe
shlb
nop
sub
push
lahf
mov
fsubrs
xchg
mov
cmp
and
add
cs
pop
dec
rorb
mov
rorb
arpl
ds
nop
sub
scas
push
aas
pushf
inc
xchg
jle
test
jmp
inc
insb
mov
add
data16
stos
dec
jbe
cli
pop
stc
ficoms
cmp
std
jg
dec
inc
jno
mov
mov
lods
cmp
les
rcll
mov
les
mov
dec
test
mov
dec
push
das
cld
popf
cmp
push
mov
sub
std
mov
mov
cwtl
jg
scas
test
hlt
xchg
mov
xchg
adc
or
push
fbld
orb
push
cmpsl
pushf
in
ret
rorb
inc
xor
fdivrs
in
add
mov
cmp
adc
outsb
loop
dec
sbb
sbb
das
xor
mov
clc
movsl
sbb
int
mov
push
je
lea
pusha
jbe
and
adc
lcall
fdivs
int3
aad
aaa
test
lahf
mov
lret
mov
adc
mov
cmp
sbb
jl
enter
idivb
imul
in
mov
clc
mov
and
xor
scas
data16
jno
icebp
xor
outsb
sub
pushl
xchg
mov
jecxz
jmp
mov
add
lods
mov
aad
nop
xor
mov
inc
fs
jnp
inc
jne
jno
and
sub
xor
pop
push
sahf
and
popa
and
pop
jno
bound
push
lcall
dec
ret
mov
mov
mov
aaa
test
push
gs
jl
adc
mov
mov
lret
mov
mov
or
xor
cmpsb
stos
mov
pop
lds
subb
push
push
sti
hlt
push
imul
and
mov
das
sbb
jnp
cmpb
ss
daa
pop
push
pop
add
dec
mov
xor
shll
mov
jg
xor
adc
dec
inc
adc
arpl
das
fstpl
das
imul
insb
mov
hlt
ss
cld
ss
push
ss
fisubrs
pop
add
out
mov
jo
out
jmp
into
push
stos
dec
mov
sahf
shlb
call
mov
xor
test
leave
loopne
pushf
adc
insl
popa
inc
dec
mov
out
sub
sub
cmp
outsb
push
stc
stc
adc
xchg
mov
inc
sub
test
xchg
les
scas
inc
inc
mov
in
test
std
or
dec
xor
jg
mov
xor
inc
mov
ja
mov
pop
pop
adc
ss
xchg
xor
cmp
push
dec
lret
loopne
movsl
iret
add
and
mov
rolb
cmp
cld
mov
lea
and
jge
mov
and
inc
mov
outsl
fwait
imul
jb
xor
cmpsl
sub
sub
out
dec
inc
push
push
repnz
push
push
xor
cmp
ljmp
add
out
stos
lcall
mov
fildl
and
aaa
cmp
popa
rcl
cmp
mov
xor
jb
push
repnz
fcompl
mov
dec
ljmp
jbe
fwait
mov
lods
bound
sub
lahf
mov
jp
jno
mov
fwait
or
iret
xor
xor
test
repnz
out
push
loop
adc
into
in
mov
xchg
out
insb
xchg
popa
out
jge
sub
pop
cmp
fimuls
aaa
mov
dec
data16
mov
lret
jle
mov
pop
mov
imulw
pop
clc
sbb
out
mov
jmp
jnp
mov
mov
cmp
mov
sub
and
xchg
xor
mov
roll
cmp
pop
out
popa
ret
sub
dec
in
data16
adc
aaa
bnd
scas
ficoml
aas
inc
mov
cmpsb
lret
sub
testl
push
pop
jecxz
cmp
jnp
das
ja
cmove
cmp
adc
mov
lahf
jecxz
repz
repz
sub
imul
cmp
mov
mov
inc
popa
cli
sbb
push
push
or
data16
jo
adc
push
lret
scas
cli
mov
scas
filds
popa
test
pop
push
sti
cmp
sub
inc
jle
test
popa
add
dec
mov
push
fdivrl
pop
into
daa
push
mov
cmp
decb
in
xor
cmp
pop
pop
push
sub
lret
dec
fstl
fisubs
adc
sbb
xor
add
lahf
sub
sarb
jnp
in
sub
xor
cs
push
ficompl
and
adc
mov
dec
mov
adc
cmp
and
lahf
fs
sarb
sub
mov
mov
dec
mov
rcrb
push
test
push
movsl
sub
test
in
sub
lret
mov
jae
shl
mov
andl
inc
in
cmpsb
inc
sub
jne
push
pushf
cmp
aam
adc
in
pop
dec
stos
mov
sub
mov
mov
jnp
loopne
mov
mov
scas
jnp
sbb
mov
lods
xchg
aas
xor
aam
adcl
test
mov
xchg
cmp
movsl
xor
adcb
xor
into
adc
sub
shl
leave
mov
pop
inc
shrb
and
cli
sbb
decl
mov
lret
sub
ljmp
jno
dec
das
cmp
cmp
inc
es
jnp
scas
aaa
xor
lahf
mov
fadds
mov
pop
fildll
cs
mov
aaa
sbb
sarb
push
mov
mov
ds
popa
cmp
scas
scas
stos
push
mov
jbe
cmp
ljmp
push
mov
or
jg
mov
cmp
sub
mov
or
add
ficoms
das
or
push
mov
out
push
addr16
jge
add
sub
or
into
out
jo
sarb
in
push
inc
leave
mov
daa
fwait
mov
and
sub
decb
pop
xchg
add
adc
jge
jae
pop
push
dec
cmpsb
mov
les
pop
sub
test
mov
pop
imul
out
popa
divl
add
cmp
cltd
sub
iret
out
outsl
test
sahf
in
sbb
ds
cmp
std
cmp
jp
int
cmp
sbb
sbb
dec
inc
jbe
jno
sbb
cs
das
lret
and
int
cmp
test
loope
mov
jns
ss
out
loopne
xchg
sbb
out
xchg
jle
mov
pop
mull
adc
fucom
sbb
xchg
pusha
mov
popf
stos
data16
fwait
les
xchg
fcomps
je
lret
or
mov
jns
push
nop
das
movsb
mov
scas
jl
or
jmp
lods
pop
movsb
push
mov
or
repnz
push
outsl
outsb
sbb
test
adc
dec
push
inc
mov
inc
jbe
pop
dec
mov
stos
rcll
xor
pop
jne
cs
call
jecxz
lret
xchg
and
jae
jns
inc
xchg
dec
cmpsb
mov
arpl
in
pop
cmp
fs
inc
jb
inc
adc
fadds
subl
dec
loopne
aam
mov
in
adc
mov
push
xor
dec
test
fdivr
mov
aam
mov
inc
jno
pop
mov
jb
mov
push
ja
inc
andb
pusha
dec
data16
dec
dec
and
nop
mov
push
cmp
cmpl
lds
jle
and
mov
fidivrs
ss
mov
jo
in
push
mov
and
dec
adc
in
xor
inc
aas
mov
cmpsl
jge
cmpsb
pop
daa
repnz
xor
test
stos
fs
adc
pop
xor
je
stc
add
mov
or
sbb
mov
adc
sbb
jns
dec
out
jge
mov
hlt
pop
movsl
ljmp
dec
cmp
push
xchg
repnz
mov
dec
je
imul
mov
movsb
cmp
and
das
das
inc
fwait
xchg
nop
cmp
mov
mov
cmp
sub
out
pop
push
mov
push
jbe
lods
leave
dec
and
lret
sbb
outsb
fs
inc
inc
fs
sbb
jge
clc
ljmp
mov
pop
jnp
and
loop
int3
jle
sub
xor
or
test
addl
push
pusha
xor
in
jmp
jbe
frstpm(287
push
cmp
mov
dec
mov
popa
mov
outsb
es
push
mull
pushf
clc
movups
lods
out
in
sbb
inc
jmp
jle
scas
xlat
gs
jns
inc
or
sub
pop
push
jae
andl
jb
inc
add
sub
jne
js
enter
or
aas
push
cld
mov
and
out
jb
add
repnz
jae
popf
mov
cmpsl
loop
sbb
xor
fimull
xor
mov
mov
jmp
mov
push
lds
test
jae
inc
inc
loop
inc
repnz
sub
add
lret
scas
stos
cli
es
sub
adc
or
xor
sub
jmp
popa
sbb
je
scas
jae
add
lret
mov
lock
ficoml
fcompl
les
outsb
sub
mov
sarl
fnstcw
cmp
jmp
daa
inc
inc
jns
ret
inc
jle
movsb
sub
mov
ljmp
push
adc
push
mov
cwtl
sub
jmp
out
and
scas
out
sub
popa
mov
inc
scas
lods
cmp
subl
xor
mov
aas
push
adc
lret
je
jmp
movsl
int
ds
test
jmp
add
sub
sar
int3
out
pop
push
shrb
or
sub
push
jne
aad
inc
mov
cmpl
lret
cli
repnz
push
push
test
push
push
es
push
out
mov
test
lea
iret
and
mov
je
dec
daa
mov
data16
insb
outsb
inc
jl
imul
sub
add
in
push
fdivrp
je
or
sub
stc
scas
pop
cmp
loopne
add
fdiv
jb
and
frstor
das
push
ja
dec
arpl
int3
sarb
jo,pn
dec
and
inc
pushf
xchg
div
cs
out
add
stos
mov
and
add
xchg
sbb
sar
xor
add
and
movsl
loop
fsubl
dec
ret
aas
in
add
pop
sub
push
adc
cs
fwait
adc
dec
outsb
add
dec
lcall
test
imul
test
sub
and
outsl
push
sub
sahf
outsb
sub
xchg
push
jo
iret
lcall
mov
loop
out
xchg
int3
push
outsb
push
addr16
or
sbb
jp
sahf
fwait
mov
test
fwait
cmpsl
dec
fisubrl
mov
negb
stos
cmp
js
jbe
jo
cmpsb
jo
push
arpl
cmpsl
stc
movsb
jl,pt
fisubrl
dec
je
jbe
ss
cmp
test
jge
lock
jl
adcb
rep
mov
fisubs
cmp
xchg
cmp
gs
push
pop
dec
jl
lock
cs
arpl
divl
xchg
ss
adc
int3
mov
aas
dec
into
leave
mov
std
mov
repz
and
jnp
jmp
scas
inc
inc
jne
dec
bound
dec
or
push
jnp
mov
lret
pop
xor
xchg
push
adc
mov
stos
insb
movsl
jb
mov
push
xor
cmc
mov
idivl
nop
xor
stc
movl
jbe
subb
jb
xchg
xchg
xor
push
mov
ja
xor
adc
gs
xchg
aaa
cmp
test
scas
aaa
add
insb
popa
push
mov
cmpsb
push
mov
jl
iret
outsl
mov
daa
loopne
aas
jno
ja
inc
mov
icebp
cmp
or
mov
int
inc
fwait
adc
adc
pop
cmp
fildl
jno
xchg
cli
xchg
test
push
push
lods
xlat
lds
nop
stos
icebp
mov
dec
push
or
mov
pop
ss
lret
fsubs
adc
outsb
cmp
jne
inc
jmp
clc
pop
stc
cmp
adc
gs
repz
lret
fistl
push
movsb
sbb
lods
int
aas
mov
and
push
popa
pop
push
inc
scas
cmpsb
pop
sub
fwait
xor
add
in
in
pop
and
mov
pushf
inc
push
insb
stc
pusha
push
or
and
jne
sbb
nop
cmpsl
inc
icebp
mov
bnd
push
mov
dec
mov
loope
sub
xor
sbb
sbb
and
dec
sub
cmp
add
jbe
cltd
inc
jo
mov
push
loope
cltd
lahf
lahf
in
daa
popa
pop
cwtl
or
cs
cmp
enter
jns
scas
aaa
dec
dec
mov
leave
xor
inc
pop
inc
in
cld
dec
and
push
data16
and
push
stos
fldt
dec
aaa
ja
inc
cmp
add
dec
xor
push
jae
addb
in
mov
in
jp
frstor
push
mov
mov
lds
pop
clc
push
outsb
cmp
out
cld
cmp
movsl
push
daa
mov
sub
scas
push
in
nop
cmp
data16
lods
cmpsl
pop
push
xor
stos
mov
xlat
aaa
mov
jno
outsl
mov
xor
mov
mov
aas
fwait
or
jae
stc
and
cld
and
pop
fdivrp
jle
fnstsw
inc
dec
stos
loopne
dec
and
outsl
pop
xchg
pop
xchg
pop
mov
pop
pop
cltd
pop
lcall
cwtl
inc
dec
xchg
xchg
imul
lret
mov
mov
push
in
mull
mov
and
test
mov
inc
fs
nop
xor
jb
dec
lret
out
lds
shrb
push
xchg
push
sbb
inc
mov
adc
fisubrs
mov
jns
sahf
mov
out
sub
lea
push
dec
lock
hlt
popf
cli
je
push
sub
insb
lds
outsb
out
jmp
das
push
add
ljmp
ds
xor
jb
sub
mov
push
popf
bound
out
jns
sub
add
cmpsb
lds
data16
add
scas
fsubrl
pop
popa
jg
stos
sub
pop
lcall
mov
adc
das
sti
jg
subb
fwait
enter
mov
sub
dec
loope
jbe
nop
sbb
daa
push
push
shl
jbe
out
dec
das
adc
stos
sbb
out
dec
out
pop
adc
inc
dec
pushf
cmp
loope
in
push
into
xchg
imul
into
mov
dec
cmpsb
cmp
iret
push
mov
aad
js
int3
leave
xchg
xchg
fcmovbe
popa
stos
xchg
in
into
mov
dec
jbe
add
out
mov
adc
mov
fimull
mov
or
loope
mov
push
xor
jp
aas
or
jbe
iret
outsl
cmp
lods
les
ja
pop
sub
out
adc
dec
mov
imul
jb
inc
in
sbb
aad
aas
xchg
gs
clc
fucomi
adc
push
adc
sub
mov
jge
mov
cmpsl
push
lret
cs
inc
aas
aas
ss
jo
dec
cs
and
and
cs
popa
inc
cld
xor
int3
inc
lret
mov
aam
jge
mov
insl
aas
test
outsb
push
cmpsb
out
mov
jo
dec
pop
jbe
inc
lods
cmp
cmp
pop
mov
aaa
xor
pop
mov
mov
push
sub
iret
fbstp
adcb
inc
imul
xor
icebp
jb
jge
jo
mov
out
push
mov
icebp
mov
cmp
adc
mov
psubw
push
jae
sub
scas
lods
mov
xlat
mov
out
mov
scas
sub
xor
push
adc
psubsw
sub
aam
mov
paddq
pop
out
sub
mov
out
outsb
adc
das
xor
cmc
icebp
ret
jnp
inc
lock
and
jns
dec
jns
or
sub
mov
jnp
mov
xor
inc
call
sbb
notb
inc
jb
adcl
xchg
jbe
jmp
ja
rcr
daa
test
mov
lret
xchg
jae
lret
cli
pop
mov
dec
inc
das
cmpsb
lcall
sub
stc
push
je
loope
lret
cmpsb
pop
test
std
jns
inc
pop
je
shrl
cmc
inc
xchg
sub
lcall
lret
inc
xorl
das
push
jns
pop
cld
add
insb
push
cs
aaa
pop
jno
push
fwait
in
fisubs
mov
xor
es
mov
ss
popf
push
sbb
adc
ja
fmulp
and
inc
out
sbb
mov
shrl
push
iret
ds
sub
and
adc
mov
rcrb
inc
clc
jae
dec
pop
loop
out
nop
enter
adc
push
setle
xorb
scas
jmp
sbb
mov
jge
scas
cmp
fldt
sbb
das
pop
jge
pop
cmp
inc
cmp
rcll
push
dec
dec
ja
fmuls
cmp
addb
push
stos
movsb
fdivr
xchg
adc
out
testl
stos
rcr
fidivrs
in
push
or
sarb
popf
hlt
addr16
dec
dec
lcall
mov
out
pop
in
stos
adc
adc
in
dec
add
cmp
xchg
pushf
leave
std
jp
pop
cmp
cmp
arpl
pop
push
mov
cmp
pushf
push
or
pop
dec
mov
xchg
adc
lret
inc
das
fstl
dec
sbb
add
jg
or
mov
mov
jo
bound
test
push
xchg
mov
mov
push
inc
xchg
sub
jno
add
inc
in
mov
int3
dec
pop
add
sub
cli
push
arpl
outsl
dec
cs
pop
shrb
mov
leave
dec
cmp
aaa
xor
aaa
popa
sub
movsb
inc
test
pop
bnd
push
xchg
gs
sub
ss
xacquire
xor
scas
inc
push
adc
xor
cmpsb
dec
daa
mov
jmp
xchg
mov
ja
out
outsb
and
movb
in
in
push
aam
xchg
cmpsl
and
adc
push
pop
or
movsl
subb
and
dec
mov
sbbb
orb
mov
cwtl
in
mov
cmpsl
mov
pop
xchg
cs
push
aas
mov
dec
sub
pop
in
xchg
fcomps
or
movsb
test
xchg
mov
ss
cmp
ljmp
add
push
mov
les
stos
mov
cmpsl
sbbb
iret
ja
out
jb
cmpb
fucompp
pop
sbb
call
sub
mov
ljmp
bnd
jbe
or
movsb
movsl
pop
cli
push
dec
rcr
jmp
jbe
jbe
dec
imul
pop
mov
jge
ret
mov
inc
shlb
cld
adc
push
dec
movsb
in
rcrb
cmp
ja
xchg
or
push
jp
jno
mov
loopne
inc
out
jle
push
enter
test
sub
xor
mov
cmp
xor
jnp
popf
jnp
imul
mov
mov
add
push
pusha
xchg
cmp
arpl
dec
scas
das
dec
fwait
inc
sbb
and
aam
xor
pop
push
lret
jmp
je
lret
loop
insb
out
daa
inc
rclb
xor
test
add
xor
dec
sub
imul
adc
in
bound
bsf
sti
aad
mov
dec
jge
push
test
test
ret
jnp
scas
mov
xor
or
ja
int3
jno
cs
jge
mov
cld
frstor
jp
jbe
push
in
scas
lret
popa
and
and
cmp
push
jmp
mov
push
aad
pop
les
mov
mov
sbb
call
iret
out
stos
scas
in
mov
adc
mov
push
and
jae,pn
ss
push
insl
xor
aaa
das
stos
call
cs
jo
xor
pop
adc
pusha
or
mov
adc
scas
in
clc
jne
pop
adc
mov
leave
and
cmpsl
push
das
dec
fwait
scas
adc
cmp
cmc
cmpsb
xor
jg
repz
mov
inc
jne
stos
dec
mov
inc
mulb
push
loopne
adc
xor
jbe
inc
push
push
push
sti
mov
cmc
test
aaa
sbb
js
mov
or
ret
icebp
ss
enter
pop
sub
jge
jp
icebp
incb
lock
jb
inc
sub
or
ja
imul
pop
jns
daa
dec
inc
and
and
push
jmp
mov
dec
inc
jae
popa
add
inc
jno
add
mov
xchg
push
cmp
nop
das
inc
pop
push
je
adc
sti
push
pmulhw
out
stos
xor
mov
ss
pop
push
mov
mov
inc
push
push
or
ss
dec
sub
nop
jg
xor
push
jo,pn
jo
mov
sbb
paddsw
inc
add
int3
cli
daa
outsl
jge
test
add
mov
xor
mov
cmp
lahf
jg
repnz
popa
sbb
bound
jns
sub
xchg
pop
fdiv
or
jmp
mov
fcoms
sub
loop
push
lret
mov
ja
mov
sbb
lahf
fisubl
or
push
and
cmp
aam
es
fistpl
repz
xor
mov
mov
push
fwait
les
mov
mov
insl
inc
lahf
sbb
leave
test
mov
lcall
out
jb
adc
push
jbe
shlb
daa
sub
popa
aaa
into
inc
dec
jb
adc
movsl
cmp
ss
addl
scas
ss
loopne
push
into
adc
jo
test
xchg
fistps
sbb
xor
jne
in
sbb
iret
pop
or
lret
pop
push
popf
insb
push
stos
xlat
xor
dec
dec
scas
xchg
mov
je
ficoml
addr16
popf
mov
out
nop
xor
call
xor
les
jnp
dec
fisttpll
test
mov
jg
dec
xchg
inc
pop
or
cld
fcoml
leave
pop
dec
fwait
jne
xor
cmp
xchg
xchg
cmp
cmp
mov
adc
adc
jo
fmulp
test
ss
xor
sub
push
movsl
inc
data16
insb
xor
inc
push
xor
pop
push
mov
es
xor
and
sub
adc
jbe
popf
testl
jns
aam
addr16
mov
and
sub
sahf
nop
mov
adc
dec
fwait
or
repz
mov
movsb
outsb
push
je
jbe
gs
lods
and
pusha
adc
in
and
dec
sbb
into
pop
mov
movsl
mov
sbb
sub
mov
and
fistps
adc
das
mov
cld
pop
mov
test
cmp
popa
daa
mov
into
jno
pop
cwtl
mov
xchg
rorl
mov
and
and
dec
sbb
sbb
or
call
push
movsb
jo
inc
call
je
sub
jne
push
scas
test
test
or
inc
mov
data16
stos
cmp
push
inc
lcall
and
dec
scas
bnd
scas
inc
fstpl
jp
out
jb
mov
add
xor
scas
dec
in
cmp
mov
push
dec
cmp
stos
ret
lret
sbb
stos
push
sub
adc
xor
mov
in
lea
out
scas
popa
dec
lcall
or
scas
mov
rcrb
icebp
stos
mov
or
push
cmp
pop
mov
je
xchg
rclb
push
cmpsl
out
ljmp
cmp
mov
lcall
jg
in
sub
mov
inc
nop
inc
lret
arpl
mov
mov
sbb
lahf
pop
fwait
cmp
testb
cmp
pop
and
popa
xchg
xor
sub
add
xor
pusha
pop
test
or
daa
pop
mov
jae
sbb
fisubrs
scas
loop
sub
ljmp
leave
daa
push
mov
pop
shlb
fs
rcrb
dec
fsubrl
mov
xlat
jae
xor
xor
daa
jecxz
adc
dec
push
ljmp
sub
mov
leave
in
hlt
sub
test
mov
fdivrs
push
sub
aam
sub
in
and
push
push
push
xor
jbe
cmp
jg
inc
les
dec
test
fnstsw
jnp
mov
rcrl
push
add
sub
sarl
jnp
fadds
test
ljmp
mov
mov
jns
ror
sub
sbb
inc
push
mov
enter
inc
scas
jns
and
insl
popa
cmp
pop
mov
jp
cmp
push
in
push
sub
mov
cmp
fstpl
xchg
push
or
or
mov
add
stos
sbb
sub
jge
ret
andb
jbe
push
dec
lcall
andb
cli
addr16
mov
call
in
xchg
ljmp
mov
add
fbstp
in
inc
jg
jo
sti
or
or
movsl
fimuls
fcomps
jl
pop
dec
push
cmp
rcrw
cmc
inc
cs
lret
stos
xchg
inc
pop
into
jb
out
sub
cmp
sub
push
sti
fwait
fs
popa
cmp
lcall
jne
std
sub
sbbb
xchg
ljmp
movsl
jno
push
bnd
mov
and
cld
outsb
pop
ss
pop
dec
sbb
dec
adc
add
ret
stos
pop
cmp
xchg
inc
lock
cli
sbb
inc
jnp
and
jl
les
push
inc
inc
mov
and
push
outsl
ds
enter
cli
insl
addr16
sub
jl
dec
jo
mov
cli
fbld
push
daa
aad
sti
cmp
data16
test
std
adc
add
jne
bound
jo
scas
jno
add
mov
sbb
sbb
fcmovb
iret
push
subb
push
jle
xor
fisubs
adc
xchg
jge
cmp
push
jge
mov
sub
in
mov
stc
xor
sbbl
daa
dec
push
pop
sbb
dec
lcall
sub
std
mov
dec
lret
push
sbbb
aam
mov
cmp
mov
cmp
inc
adc
mov
jmp
shlb
or
dec
pop
stos
cmpsb
cmpb
inc
push
sub
addr16
pushf
js
mov
xor
inc
lcall
test
jge
inc
packuswb
push
test
in
ljmp
mov
push
sub
lcall
mov
inc
push
push
das
into
stos
rorl
ret
inc
xchg
jp
outsl
cmpl
adc
test
sub
push
sub
bnd
negl
dec
mov
orl
jno
dec
pushf
cmp
pushf
jbe
ss
ja
sub
adc
cmp
mov
out
jns
mov
sub
push
hlt
out
div
nop
movsb
imul
stos
jnp
pop
out
stc
mov
xor
push
lds
std
jp
dec
aad
jmp
push
dec
jbe
xchg
mov
inc
dec
mov
add
test
jmp
mov
cmp
cld
push
fadds
mov
push
xchg
jbe
mov
cwtl
adc
push
xchg
mov
push
push
jnp
inc
out
jp
adc
insb
stos
jl
outsl
lea
add
and
adc
jg
ret
or
fwait
jnp
fisubs
daa
setg
pop
pop
push
clc
mov
iret
fbld
and
dec
stc
push
sbb
cmp
mov
xchg
inc
test
or
cmp
or
dec
push
test
sub
sbb
mov
scas
mov
cmp
push
jae
cmp
inc
imul
fiaddl
subl
adc
lret
pop
data16
lods
mov
cmp
fiadds
cmp
test
dec
xor
inc
add
sub
call
cmp
xchg
and
mov
call
cld
aam
lret
in
pop
test
sbb
or
or
xor
mov
aas
jecxz
cmp
sbb
sahf
and
jns
mov
inc
ret
frstor
stos
sarl
sub
cmpsl
dec
bound
sub
mov
pop
js
push
jae,pn
push
mov
sbb
dec
cmpsb
dec
mov
jg
jge
sub
jge
leave
pop
mov
les
data16
pop
inc
fldt
hlt
stos
std
sbb
xchg
push
stos
jae
lcall
sahf
sub
in
push
push
cltd
xchg
push
pop
or
adc
lahf
mov
jg
pop
scas
cmp
and
mov
test
and
pop
stc
xchg
das
xchg
daa
push
movsb
sub
dec
jge
mov
adc
or
iret
pop
add
lea
jne
sub
aas
inc
push
lcall
lret
leave
dec
testb
pop
fwait
xor
scas
mov
jae
out
and
jbe
pop
lret
mov
jmp
ljmp
inc
in
mov
popa
jne
mov
and
fstpl
mov
mov
jne
jno
cld
inc
fs
pop
mov
lret
xor
mov
dec
das
imul
pop
mov
xor
push
arpl
ret
xchg
xchg
cmpsb
orl
sarl
mov
and
movzbl
and
into
inc
cwtl
orb
into
sbb
test
mov
jle
lahf
jge
inc
xchg
fadd
test
shrl
push
std
jns
mov
pop
cmp
dec
cmp
repz
nop
push
cmp
push
nop
fisttpll
in
jae
dec
mov
xor
cli
in
or
stos
addl
jp
adc
lret
dec
mov
fwait
dec
popa
inc
fsub
jnp
daa
mov
mull
jg
jcxz
push
push
shufps
mov
out
mov
call
mov
call
add
jae
ret
enter
rolb
ljmp
lods
mov
pop
les
mov
cmp
push
fisttpll
cltd
outsb
add
mov
out
loope
push
pushf
mov
cmc
pavgb
fmull
xchg
repz
ja
test
add
outsl
jbe
repz
int
jnp
in
mov
mov
dec
push
cwtl
push
xor
cmp
movsb
in
stos
sub
or
xlat
jbe
xor
xor
xor
and
mov
popa
outsb
jmp
out
mov
movhps
cld
xor
push
mov
mov
jmp
mov
dec
push
lea
stos
hlt
xchg
shl
inc
arpl
sbb
insl
xor
sub
out
jnp
es
push
dec
mov
je
mov
inc
dec
gs
jle
adcb
daa
nop
test
cmp
sahf
sub
addr16
push
push
xchg
or
andl
loop
test
xchg
adc
dec
sbb
push
test
xlat
movsl
mov
clc
and
mov
xor
mov
iret
pop
adcb
inc
cmpsb
lcall
stos
mov
out
cmpl
dec
cmp
out
in
mov
pushf
fistpll
xor
pop
pminsw
lds
leave
gs
outsb
inc
loopne
sahf
jne
decb
enter
outsb
push
out
push
dec
mov
rclb
loop
mov
rcrl
in
imul
aaa
les
mov
outsb
ja
adc
lock
and
jno
mov
jns
push
fisubrs
jnp
lcall
adcb
imul
pop
xchg
xor
cmp
lods
lret
popa
sbb
sub
mov
fwait
ds
xor
cli
push
dec
dec
mov
shr
push
jge
jle
out
jnp
xchg
stos
test
rcrb
xchg
lret
jge
mov
cmpxchg
jnp
jg
in
inc
jae
pop
dec
ds
mov
addr16
jnp
jb
push
out
push
sbb
cmpl
fcmovnb
xor
shrb
jns
out
aad
mov
je
adc
enter
mov
out
daa
xor
push
jns
and
adc
sub
mov
and
push
stc
jae
sbb
cmp
inc
repnz
cs
cwtl
sub
cmpsl
lock
movsb
push
sub
mov
lds
lods
cmp
leave
mov
inc
lods
ffree
nop
sub
subb
adc
in
mov
or
insb
cs
stc
xor
out
rcl
cmp
jae
jle
adc
cltd
mov
or
roll
adc
outsb
cmp
xor
xlat
lds
mov
mov
mov
pusha
scas
rcrl
push
mov
dec
jae
add
mov
dec
adc
movsl
js
test
sub
mov
lahf
xor
adc
into
cmpsb
pop
cmp
stos
cmp
mov
xlat
adc
push
sub
and
addr16
inc
pop
sub
xorl
popa
stos
int
or
push
adc
cmp
js
adc
pop
sbb
xchg
adc
sub
addr16
pushf
mov
loop
mov
rorb
lods
dec
lods
enter
js
pusha
scas
aam
outsl
les
daa
mov
xor
test
push
adc
mov
pushf
les
vmread
dec
ss
sahf
daa
call
test
pop
jo
or
call
inc
pop
jnp
lret
push
std
mov
xor
test
nop
pop
filds
into
push
test
jl
xchg
jnp
inc
subl
outsb
mov
push
push
test
in
push
repz
or
out
std
xor
sub
sbb
add
mov
insb
pop
pop
adc
and
aam
xor
dec
aas
push
out
bound
dec
cld
cmp
dec
add
jl
push
xchg
jbe
adc
push
and
cli
lret
orb
addr16
push
fidivl
mov
sub
stos
movsb
mov
mov
popaw
stos
sarl
dec
jmp
je
leave
push
sahf
jno
push
lea
popa
fwait
test
mov
test
lahf
pusha
loopne
fstps
jbe
out
insb
orb
cmpl
jbe
repz
movsb
shl
cs
sub
mov
add
lods
lods
xor
mov
out
fisttps
cmp
fwait
inc
in
mov
jnp
dec
movsb
sahf
mov
imul
push
ljmp
or
mov
sub
sbb
xchg
call
mov
test
imul
xlat
cmpsl
inc
cmp
sub
pop
out
notb
dec
pop
stos
sbb
and
mov
ljmp
mov
lret
and
dec
push
or
stos
movups
xchg
icebp
dec
mov
push
scas
mov
jg
jle
lcall
adc
mov
add
dec
dec
andl
push
imul
adc
test
inc
ss
leave
sahf
cmp
xchg
jle
mov
push
dec
add
lods
dec
adc
mov
mov
fwait
mov
test
addr16
test
cmp
pop
andb
out
mov
cmp
push
sub
push
ss
pop
jle
inc
ds
imul
and
and
pcmpgtw
loope
xor
xor
and
data16
mov
daa
xor
into
ret
cmp
insb
cmp
sub
aad
and
iret
mov
orl
mov
adcb
stos
cmp
cmp
scas
fwait
pop
inc
cmpsl
movsb
jbe
rolb
push
lods
cltd
mov
inc
sbb
test
or
and
mov
dec
push
pop
jb
or
gs
shrb
lret
sub
push
ja
inc
cli
lcall
and
xchg
iret
sub
test
xchg
push
cmpsb
in
push
in
mov
fcmove
lcall
fwait
pop
mov
sarb
call
cmp
mov
lea
nop
test
cmpsl
or
push
inc
insb
adc
fldenv
and
inc
test
lods
aad
mov
and
push
inc
mov
call
scas
movsb
sub
mov
imul
stos
cmp
sub
and
outsl
shl
repnz
sbb
dec
enter
sbb
clc
scas
std
mov
pop
push
pop
stos
mov
das
mov
scas
sub
ja
cmp
test
add
mov
xorb
push
lcall
das
scas
fs
je
ds
test
mov
out
xor
bound
inc
xor
int
dec
mov
jbe
pop
adc
repz
cmp
mov
test
jp
jg
rcll
popf
xchg
mov
clc
sub
push
mov
mov
cmp
mov
bound
insl
and
or
mov
xor
aaa
rorl
adc
xorl
nop
das
add
pop
pop
lret
push
add
sub
iret
sub
adc
sub
outsb
aas
jnp
cli
std
pop
aam
sub
stos
clc
scas
addr16
jno
in
or
sub
dec
adc
jge
xor
mov
jp
popf
outsl
jb
inc
adc
xor
popa
dec
test
mov
inc
jge
cmp
and
mov
fwait
add
addr16
sti
jns
mov
test
fadds
sbb
pop
outsb
push
movsl
pop
xor
loop
popf
xchg
inc
push
sub
sub
ss
into
les
cs
jbe
and
dec
sub
sub
adc
loopne
inc
push
lahf
adc
mov
push
inc
xor
andb
mov
ds
arpl
inc
xchg
mov
shrl
or
rcr
stos
jb
pop
push
mov
test
mov
aad
mov
js
insb
das
clc
mov
icebp
push
sbb
cmpsb
push
popa
cmc
mov
out
scas
pop
jbe
outsl
fwait
push
add
repnz
movsb
jno
int
ja
fisubrs
adc
sbb
xchg
das
out
in
xor
nop
scas
mov
dec
sbb
rcll
sub
test
test
ret
outsl
push
int3
ret
add
mov
fwait
xor
scas
lods
add
cmp
in
insl
sbb
mov
push
xchg
in
nop
lcall
inc
inc
push
mov
push
orl
pop
mov
cmp
adc
cmpsl
cmc
fcomi
pop
mulb
je
mov
pop
lret
or
cmpsb
pop
dec
rcrb
mov
fwait
inc
mov
dec
or
jno
pop
jns
adc
movsb
into
in
fwait
mov
outsb
xor
push
lcall
inc
adc
inc
outsb
fwait
sub
clc
stos
jmp
test
dec
mov
push
mov
add
shrl
xchg
sbb
ljmp
mov
dec
xchg
and
aas
test
das
push
cmp
add
adcl
inc
jno
pop
adc
inc
sub
dec
aaa
xchg
ds
xchg
cs
dec
sub
cs
lea
push
stos
fstl
divb
jmp
dec
fwait
dec
dec
in
mov
dec
leave
ret
pop
push
fldcw
pop
sbb
movsb
ss
xchg
sub
pop
ds
das
mov
fidivrs
cmp
mov
aas
pop
mov
push
subl
les
rcr
sbb
fiadds
xchg
cltd
mov
cmp
mov
daa
into
mov
sbb
mov
push
jnp
das
test
and
push
mov
cmp
mov
aas
das
dec
push
movsl
dec
pop
pop
jb
and
sub
or
fisubl
pop
inc
mov
scas
out
mov
ja
sbb
aad
es
xorl
add
mov
cmp
rcrl
mov
xchg
jno
mov
dec
mov
inc
sbb
mov
xchg
cli
jne
xchg
sbb
and
fneni(8087
or
outsl
sbb
dec
jne
mov
aaa
orw
rorb
mov
dec
xor
sub
test
push
lret
in
cs
hlt
data16
test
cs
xor
xchg
ds
repnz
push
or
push
iret
mov
adc
pop
mov
or
mov
dec
mov
das
fildll
aad
xchg
cld
mov
jg
out
cmpsl
scas
pop
pop
nop
das
lret
dec
sbb
mov
jg
movsl
mov
and
das
mov
mov
repnz
ja
scas
dec
sbb
mov
jbe
xchg
sub
rcll
mov
pop
inc
outsl
sarb
cmpsb
outsl
add
pop
jns
adc
xchg
lahf
mov
es
cmp
lock
movsl
or
mov
and
mov
das
in
cmp
xchg
das
stc
lahf
sub
in
xchg
mov
aaa
sbb
dec
pop
popf
ss
sahf
mov
das
sub
inc
aaa
fisubl
inc
mov
ljmp
push
das
shll
repnz
mov
dec
out
jg
push
mov
mov
cmp
or
pop
mov
dec
das
push
jl
push
ss
mov
test
mov
mov
cmc
dec
mov
movsl
lret
movsl
imul
cmp
push
dec
xchg
jne
or
dec
mov
inc
lods
inc
cs
daa
insb
ss
pop
gs
pop
adc
or
fcompp
inc
and
aaa
das
or
mov
inc
mov
rorb
dec
push
arpl
das
dec
or
cmp
cmp
xchg
ja
stos
out
xor
sbb
mov
ss
out
jbe
xchg
sbb
sbb
add
sub
test
jle
cmpsb
fiadds
jge
in
sub
jns
or
sbb
push
mov
pusha
mov
push
jle
ss
push
lds
into
xor
cmpsb
outsb
jmp
jbe
les
jp
lods
inc
jle
scas
adc
xchg
inc
mov
jbe
into
cmp
scas
ret
lds
push
cmp
je
sub
push
mov
test
adc
xchg
and
push
aam
jae
and
ss
shll
lods
inc
test
cmp
inc
fstpt
jmp
clc
lcall
aad
sbb
xchg
ficoms
fcmove
sub
xchg
add
cmp
test
xor
int
add
mov
lahf
inc
lahf
cmp
mov
outsb
aad
sbb
dec
push
popa
sub
outsb
mov
sub
jb
inc
mov
clc
ror
cmp
dec
stc
and
jge
jmp
lret
scas
cs
mov
jg
jmp
xchg
lret
data16
rclb
dec
push
xchg
jnp
jge
insb
push
and
push
insb
xor
cmp
dec
pushf
and
aam
inc
mov
xor
inc
xchg
stos
mov
inc
mov
sub
jo
dec
mov
xor
mov
lcall
jge
pop
insl
cltd
loope
mov
push
mov
cltd
cmpsb
subl
jl
ret
mov
lea
and
sbbb
bound
mov
sub
ret
mov
xchg
xchg
jbe
enter
cli
xor
pop
jae
sbb
das
xchg
mov
ss
mov
mov
movb
test
mov
sti
mov
test
sbb
xor
in
ja
sbb
jno
loope
lret
push
or
fwait
shl
sub
jg
outsl
test
mov
xchg
push
icebp
addr16
jle
mov
sub
imul
jbe
sbb
mov
mov
scas
push
jns
fadds
andl
mov
sbb
xor
dec
add
mov
aad
lret
call
push
adc
stc
dec
pop
mov
jbe
retw
push
cmp
fidivrs
test
ja
add
jo
dec
add
xor
test
mov
dec
and
hlt
push
scas
mov
jbe
outsb
fimull
push
not
outsl
adcl
movsb
out
cmp
jge
enter
into
test
jns
cmpsb
cli
sub
std
call
and
jne
lret
xor
aad
aad
pushf
pop
aad
mov
sqrtpd
cmpsb
jge
jae
pusha
dec
jg
or
test
mov
push
test
jle
push
mov
mov
sar
test
outsb
cmpb
add
inc
pop
arpl
lret
ret
ja
xchg
xchg
dec
in
ljmp
and
gs
or
cmpsl
das
adc
cmpsb
or
out
dec
xor
scas
cmp
movsb
sbb
jnp
inc
std
aad
inc
xchg
stos
loopne
jecxz
pop
sub
push
mov
cltd
jno
fsubrs
jne
jne
dec
daa
dec
movsl
fwait
out
sub
mov
cmpsb
or
lahf
je
test
outsb
icebp
mov
mov
test
hlt
and
xor
lcall
sub
and
aaa
adc
mov
mov
das
push
test
aaa
dec
je
lea
in
jle
jae
push
jmp
xlat
cmpsl
xor
xchg
adcb
test
add
stos
sub
pop
jge
nop
push
jns
or
ret
pushl
sub
pop
pop
xor
sub
push
data16
jge
push
dec
lcall
xor
loope
pop
xchg
ret
dec
jo
popf
adcl
jg
lret
shl
sbb
and
ret
pop
shll
cmc
xor
and
jmp
ljmp
popa
sbb
mov
jle
insb
sbb
loope
push
je
cs
jecxz
lock
mov
ljmpw
les
cld
inc
fcoms
ja
out
inc
adc
mov
in
insl
and
cmp
shll
add
repnz
das
and
push
sbb
insl
inc
jl
push
test
mov
into
mov
bound
fisubrs
pop
sub
and
dec
fidivl
push
add
sti
adc
lds
pop
or
mov
mov
cld
jno
inc
bound
aas
scas
outsb
push
cmp
pop
stc
rcl
or
jp
in
mov
jg
inc
sub
inc
call
sbb
out
aaa
add
dec
mov
ja
mov
mov
loop
test
repnz
xchg
divl
pop
ret
cmp
js
push
test
sub
std
sbb
aad
cmc
jb
insl
test
xor
jb
std
mov
jb
jp
outsl
add
add
dec
cmp
fs
das
sub
xchg
jno
pop
lods
hlt
jo
inc
fstpt
test
dec
lcall
cli
cld
sub
mov
ljmp
rorb
mov
je
adc
xchg
cmc
mov
pop
adc
cmp
jbe
fsubrl
lcall
dec
ja,pn
loop
imul
push
ja
call
loopne
mov
and
in
pushf
in
cmp
cs
sub
jge
push
std
stos
cmp
cmp
cmc
dec
inc
push
imul
push
pop
call
cmpsl
jp
cmpsb
andb
xor
sub
mov
jb
push
mov
scas
inc
push
jmp
push
inc
lret
loop
scas
mov
jo
hlt
xchg
cmp
sarl
jbe
pop
cmp
imul
cmp
sub
call
movsl
push
xorb
imul
ss
ljmp
mov
orb
push
sbb
and
xor
rcr
int
mov
adc
ss
add
out
mov
rclb
fwait
test
adc
test
cld
pop
pop
rcrb
sti
popa
jle
pop
aam
stc
push
sub
and
mov
or
stos
insb
lds
pop
push
cltd
in
daa
lahf
and
inc
dec
xchg
xor
dec
xor
lcall
push
push
sarb
fwait
push
or
pop
scas
push
in
out
push
inc
in
popa
scas
scas
stos
stos
aas
adc
out
push
outsl
push
js
bnd
lds
jnp
mov
mov
sub
jae
cltd
daa
xchg
add
popf
addr16
mov
xor
jge
into
mov
dec
scas
lcall
imul
arpl
mov
fistl
test
push
jp
add
fisttpl
mov
sub
dec
bound
jo
mulb
push
cmp
mov
mov
jnp
in
test
out
popa
std
cwtl
addb
movsl
dec
xabort
push
fcmovnbe
sarl
arpl
cmp
cli
rcl
jbe
adc
push
jno
lods
mov
mov
cmp
cltd
in
mov
jg
icebp
addr16
dec
mov
xor
pop
out
into
test
je
push
dec
add
pop
jbe
fcomps
enter
loopne
es
sub
movsl
mov
fdivl
fisubl
mov
popa
out
mov
mov
jmp
sarb
out
push
sub
mov
call
or
and
push
nop
cmp
lret
xchg
les
sub
mov
aaa
stos
mov
je
fucomi
mov
sbb
jno
das
adc
adc
sub
ss
cld
jmp
mov
jo
push
hlt
lock
sub
lcall
jge
out
inc
sub
mov
dec
pop
mov
push
pmulhuw
les
in
jmp
imul
mov
pop
jae
dec
fidivrs
fisubl
lods
mov
mov
mov
pop
sub
pop
dec
imul
jg
xor
lods
fildl
outsb
add
mov
loope
mov
mov
flds
cmp
daa
sub
outsb
mov
mov
dec
xchg
dec
jl
push
mov
test
das
jb
aaa
ss
nop
sub
jg
push
repnz
testb
cmp
mov
lods
sahf
arpl
lods
pop
addr16
inc
jns
scas
stos
and
and
push
push
or
inc
mov
test
xchg
xor
jge
xchg
or
fldt
decb
cmpsb
mov
mov
dec
bound
out
xchg
cld
arpl
pop
pop
in
test
popa
imul
inc
jns
std
aam
scas
mov
and
jbe,pt
and
jl
jle
xchg
push
push
iret
out
int
sbb
push
push
lcall
outsl
ret
out
jne
in
test
jmp
and
aas
movsl
xor
cmp
frstor
lret
movsb
cs
in
inc
pop
sub
and
mov
jge
pop
std
adc
adc
scas
cmp
mov
add
cmp
shr
push
push
je
out
je
popa
jae
cmp
pop
adc
idivb
sub
jmp
call
mov
jne
out
sub
cmp
in
xchg
inc
mov
aaa
nop
pop
pop
dec
inc
ja
into
sub
mov
setno
push
mov
push
cmpl
sbb
jbe
fidivrl
jae
outsb
out
cltd
push
mov
cld
adc
inc
jge
movsl
ja
dec
cltd
out
daa
cltd
xor
pop
sub
fwait
adc
jp
jmp
std
addr16
add
cltd
aaa
lret
lcall
cmp
push
push
ljmp
pop
movsl
in
push
xor
mov
aam
jp
loope
push
pusha
lsl
das
inc
mov
gs
outsb
and
aad
icebp
jno
cmc
lods
cmc
sbb
or
dec
sti
mov
jno
shrb
xor
jecxz
push
jno
lcall
dec
pop
jl,pn
repnz
dec
and
lcall
je
ficompl
cmp
jbe
fstpt
ret
jb
andl
aam
sti
repnz
jge
ror
adc
cmp
sub
test
sub
sbb
push
cmpsl
mov
fdivs
mov
cmp
pushf
pop
popf
push
in
call
sbb
jp
mov
and
cmp
jbe
push
nop
jno
stos
dec
xchg
mov
cs
std
mov
xor
fs
mov
sub
in
arpl
jg
es
test
dec
dec
jo
leave
jecxz
rorb
popf
cltd
loop
stos
cmp
fsubp
pop
pushf
adc
cmp
ljmp
addr16
decb
iret
add
push
push
data16
mov
shlb
fcmove
and
pushf
bound
or
fisttpl
mov
in
jmp
lock
fldenv
push
sarb
jne
subl
aaa
pushf
sbb
dec
inc
lcall
adc
xor
test
dec
mov
lea
sub
xor
cmp
and
xchg
div
xor
pop
rorl
arpl
push
dec
addl
add
sub
mov
sbb
jno
pusha
jbe
jo
rcll
xchg
mov
mov
stc
mov
out
push
jp
mov
in
lds
mov
dec
sbb
and
gs
test
stos
faddp
pop
loop
cmpsb
sbb
sbb
iret
sub
sub
cmp
dec
mov
fidivs
adc
shl
jge
sub
frstor
loope
or
rcll
shrl
xor
push
xchg
jne
inc
push
or
negb
jbe
dec
push
or
push
push
inc
push
dec
fisubrs
enter
xorb
xchg
xchg
stos
lods
imul
fadds
jae
xchg
xchg
clc
pushf
lcall
xor
ljmp
pop
adcb
aas
xchg
sahf
das
mov
loopne
xlat
cmpsl
jp
lea
inc
cmp
movsl
jmp
push
mov
enter
movl
xchg
int
or
dec
cmpsl
mov
sbb
sarl
xlat
in
or
push
es
xchg
jecxz
jge
jnp
sub
les
lahf
mov
popa
ss
pop
cmpsl
arpl
and
aad
jmp
push
int3
sbb
push
and
or
mov
je
imul
inc
xadd
cli
dec
lods
sbb
call
pop
push
sahf
mov
nop
ljmp
xchg
pushl
insb
push
add
icebp
popf
cmp
out
ss
iret
jnp,pn
into
xor
mov
add
jecxz
xchg
mov
add
dec
push
sbb
dec
add
pop
sbb
dec
sub
iret
ss
sub
dec
mov
mov
in
or
jle
add
mov
dec
and
and
pushf
rcr
cmp
outsl
lea
mov
fisttpl
inc
pop
lds
rorl
or
cmp
push
xor
in
push
aas
stc
push
das
inc
fs
push
daa
ds
sub
push
test
cmpsb
xor
fwait
xor
xlat
aas
out
push
and
dec
test
sub
in
mov
mov
pop
or
dec
fwait
aaa
sarb
or
into
and
bound
mov
jl
arpl
fiadds
mov
jno
lds
js
push
push
fisubrs
ficomps
dec
push
mov
shrl
aaa
sahf
stos
out
jo
popf
test
jb
enter
and
cmp
inc
xor
scas
fwait
mov
push
mov
adc
dec
cmp
pushf
dec
ucomiss
sub
stos
test
and
sub
loop
nop
push
mov
mov
mov
push
mov
testl
pop
push
push
add
pop
scas
inc
sub
jne
xor
addb
push
imul
cwtl
jo
aam
add
sti
dec
mov
ret
fwait
dec
jo
enter
ja
js
jge
std
gs
sets
xchg
xrelease
stos
and
stos
sub
adc
xchg
outsb
call
pop
push
roll
repnz
cmovbe
push
gs
xor
sbb
jecxz
xchg
inc
ret
mov
add
cmp
xor
add
cmpsb
pushf
pop
sub
in
mov
mov
mov
and
jg
mov
rcrl
dec
cmp
jbe
xor
push
call
outsb
rorl
cli
jbe
mov
pop
adc
ds
push
mov
stc
pushf
adc
xrelease
cwtl
push
scas
fisttps
mov
and
iret
mov
fsubrs
xorl
in
outsb
mov
mov
insl
test
cmpsl
out
cmpsb
popa
xchg
cmpsl
test
cld
sahf
lods
stos
push
je
cmp
rcrl
mov
sub
sub
mov
push
sub
jnp
daa
outsb
stos
xor
xor
dec
repnz
push
and
lock
xor
movsl
cmp
scas
push
lea
xchg
adc
fisubl
fxch
xor
mov
outsl
lcall
orb
pusha
sbb
stos
cs
fwait
repz
test
adc
mov
sub
hlt
jbe
pop
nop
je
push
lahf
cmpsb
push
enter
ja
les
lea
cli
xor
loopne
push
fwait
mov
push
adc
jnp
cmpsl
add
inc
dec
push
pop
setno
scas
lret
sub
mov
dec
imul
mov
and
jae
jae
addr16
jns
pop
jge
pop
mov
and
movsl
outsb
enter
jb
cmp
int3
cmovne
cmp
mov
mov
push
mov
add
push
xchg
mov
loope
sub
lods
xor
fwait
aaa
and
or
inc
sub
iret
das
mov
lods
stos
mov
cmp
push
and
bound
frstor
inc
or
inc
cs
jbe
jmp
data16
mov
test
pop
and
leave
mov
out
xchg
or
das
inc
dec
stos
pop
xor
fwait
mov
jle
cmp
add
lret
xlat
aas
mov
movsl
or
jb
sti
test
mov
stc
cs
mov
inc
aas
inc
push
cmp
sahf
insl
insb
jo
shlb
cmc
cmp
bound
cmpb
adc
sub
dec
fildl
push
mov
pop
push
inc
dec
lea
dec
xlat
push
mov
push
mov
adc
aaa
repnz
shll
test
lcall
fisttpl
jl
xor
dec
and
mov
push
mov
adc
out
cmp
adc
movsb
mov
adc
push
fwait
aaa
aad
decb
or
mov
cmpsl
dec
push
lcall
mov
dec
ljmp
into
pop
inc
lret
dec
stos
inc
cmpl
imul
or
jg
orl
ljmp
mov
add
push
pop
adc
ss
cmpl
fwait
leave
lret
jbe
xchg
ss
call
pop
imul
test
stos
mov
sbb
dec
adc
mov
jne
jmp
aaa
daa
mov
popf
divl
and
or
dec
and
push
xchg
test
push
mov
ljmp
jae
jle
lcall
pop
dec
xor
lret
jne
mov
inc
inc
lcall
in
inc
lds
fbstp
push
jl
fistpll
cmp
jp
lret
push
jo
add
mov
into
mov
xchg
xlat
pop
out
dec
inc
ret
nopl
push
xor
gs
pop
pop
adc
cli
and
sbb
and
adc
cmp
xor
mov
dec
sub
imul
xor
sahf
testl
movsl
nop
pop
sub
dec
sub
jnp
nop
add
movsl
mov
add
fstpl
mov
js
push
fwait
pop
outsl
jno
and
jp
call
pop
icebp
mov
mov
sub
jl
push
cmpsl
jno
jns
push
mov
icebp
das
cmp
int3
in
push
mov
pop
mov
lcall
bound
fiadds
ret
mov
call
xlat
popf
sub
andl
ucomiss
rcrb
stos
cmpsb
cs
ss
lods
cmp
dec
cmp
test
pop
pop
sub
pop
push
sbb
xchg
sbb
out
popf
fbstp
cmp
das
sub
and
insb
xchg
insl
stc
push
pop
aas
push
and
cmp
test
ds
inc
in
data16
movsb
jb
mov
leave
jmp
nop
das
jl
jge
pop
pop
rcll
and
stc
dec
sub
aad
shll
daa
outsb
je
cltd
mov
in
inc
push
dec
fcom
stos
push
cmpl
daa
jae
sarl
lods
popa
adc
hlt
ds
and
dec
xchg
rcrl
in
mov
ss
jo
test
xor
mov
mov
cwtl
push
nop
jp
add
or
sbb
xchg
jnp
dec
mov
and
and
ds
sti
mov
pop
pop
jb
push
cs
cmpsb
sbbb
xchg
leave
xchg
inc
out
dec
out
insb
sub
or
notb
iret
add
mov
dec
mov
fsts
iret
mov
insb
push
add
bound
push
cmpsb
mov
jecxz
pop
rorl
and
insb
inc
cmpsl
movsb
pop
mov
or
lcall
and
sub
subl
inc
jns
test
ret
lods
sub
adc
xchg
xchg
mov
jge
and
push
inc
sahf
jnp
cs
fcoms
mov
adc
xchg
xchg
data16
bound
dec
push
xchg
inc
mov
mov
sub
negb
out
ss
adc
jmp
dec
mov
adc
popa
notb
mov
push
insl
push
gs
ljmp
mov
rcrl
insl
sub
dec
sahf
sbb
ljmp
inc
fistpl
ss
cmp
mov
push
stos
xchg
les
sub
jle
dec
jne
ds
lret
xor
inc
cwtl
sbb
push
fsubl
push
dec
mov
mov
mov
cmp
cmp
pop
cmp
in
jne
push
movsb
push
cli
dec
scas
lock
aad
xor
dec
cs
shll
jne,pt
pop
mov
sub
outsl
call
cmp
push
mov
iret
shlb
push
sbb
jae
loopne
sub
add
fldl
cmp
nop
dec
pop
dec
mov
rolb
xchg
push
adc
scas
arpl
dec
sub
stos
testb
xor
jl
ds
aaa
into
push
in
dec
sahf
mov
push
inc
inc
mov
mov
pop
aaa
xor
push
fisubrs
jmp
mov
or
inc
vmulsd
fisubrs
lret
mov
sbb
cltd
or
das
mov
inc
mov
sub
outsl
outsb
cmpsl
lcall
mov
sarl
pop
mov
loopne
test
ds
sub
push
push
mov
adc
adc
pop
jle
scas
mov
cmp
inc
dec
test
jbe
inc
xor
dec
xchg
ljmp
cli
clc
hlt
daa
int3
sub
out
lret
imul
cmp
test
push
push
test
andl
or
cmpsb
dec
mov
in
dec
add
push
adc
daa
dec
imul
shrl
or
inc
cmpsl
shl
push
cmp
mov
mov
pop
mov
push
popa
fiaddl
pop
mov
int3
and
push
push
dec
adc
dec
shl
push
cmp
out
ljmp
sub
mov
lret
xchg
inc
adc
fdivrl
xor
lret
add
stos
lahf
xchg
and
push
ds
cmova
insl
enter
pop
sbb
lcall
cmp
lock
or
cltd
imul
mov
in
mov
push
out
cmp
jb
mov
mov
sarb
push
ret
push
mov
dec
mulps
std
and
scas
jle
test
sahf
push
mov
push
out
enter
je
jecxz
fxch
insl
pop
dec
dec
push
jno
cmp
aam
rcrb
dec
jp
cmp
or
jl
xor
lods
out
sub
test
daa
divb
adc
dec
xor
in
jne
xor
pop
xchg
push
sub
pop
and
outsl
sahf
test
and
xor
stos
dec
js
and
hlt
dec
inc
add
push
lcall
adc
pop
test
das
dec
mov
imul
scas
push
add
fwait
cld
mov
cmp
jge
cld
insb
pop
icebp
fdiv
sbb
cmp
stc
loope
or
push
stc
and
adc
and
call
push
cmp
sub
lret
or
in
push
addr16
fsubl
adc
jo
push
mov
sub
mov
push
sub
push
in
xor
test
cmpl
jle
je
jnp
mov
jbe
call
ficomps
das
das
adc
in
push
jecxz
push
xlat
loopne
xchg
stos
cs
and
mov
mov
inc
test
mov
iret
inc
sahf
or
lcallw
out
push
cmp
mov
insb
push
je
inc
and
pop
and
iret
ljmp
xor
lcall
cmpsl
xchg
aaa
nop
insl
lret
in
mov
popa
push
pop
leave
pop
push
out
xlat
jge
nop
dec
pop
ss
cli
jnp
imul
dec
int
mov
popf
jno
xor
mov
fcoms
inc
and
push
pop
cmp
outsl
jp
test
cs
fs
mov
push
fdivp
add
sbb
popf
xor
icebp
rclb
jns
test
mov
mov
cmp
std
and
movsb
or
xor
mov
ss
int
into
scas
jmp
test
icebp
and
jmp
int
push
push
sarb
jle
xor
stc
dec
push
inc
fs
shlb
std
jg
inc
and
sub
insb
movsb
and
lock
dec
into
xchg
pop
icebp
out
jbe
stc
into
ds
addr16
fidivrs
repnz
push
sub
in
out
aaa
mul
sub
mov
mov
sub
fdivp
repz
and
lret
jne
xchg
dec
and
jae
mov
or
xor
cltd
aaa
bound
push
js
cs
pop
fmuls
inc
daa
sbb
adc
stos
fwait
cmp
mov
sbb
push
nop
push
fwait
mov
pop
cmp
jnp
mov
pop
repz
rcrb
std
stos
xor
mov
test
push
int3
mov
adc
cld
xor
mov
cmp
mov
cmp
test
pop
outsl
xor
push
scas
push
sbb
inc
int
aad
out
sub
push
fwait
inc
jne
sub
inc
daa
mov
and
lahf
mov
fwait
mov
mov
jne
mov
mov
jno
push
stos
out
xchg
cs
xor
sbbb
xchg
leave
pop
jno
insb
push
mov
inc
rcl
jb
mov
outsb
popf
pop
cli
scas
cmp
pop
add
xchg
push
mov
mov
sbb
sub
cmp
push
jns
pop
cmp
orl
nop
push
stos
pusha
in
push
outsl
mov
daa
mov
cmp
dec
lcall
sarb
out
mov
iret
jl
sar
xchg
sub
push
test
xor
test
aad
cmp
outsl
out
or
inc
cmpsl
in
jbe
pop
repz
mov
daa
stos
cli
mov
sbb
outsl
mov
pusha
aas
rol
mov
pusha
in
mov
pop
pop
out
or
fnstcw
push
loopne
insb
cmp
daa
add
and
je
ja
sub
inc
je
mov
jno
scas
and
cmpsl
jae
and
inc
and
ffreep
nop
ret
pop
test
mov
sti
je
jl
ss
sub
add
das
int3
add
fs
dec
adc
xor
push
cmc
sbb
sbb
int
and
ljmp
out
daa
insl
jns
test
adc
adc
or
cmp
mov
lahf
divl
add
sbbb
mov
pcmpeqd
popa
stos
pop
call
cmpsl
or
js
testl
xchg
mov
pushf
lock
sub
das
jbe
ret
xlat
scas
or
cwtl
add
sbb
lcall
xchg
jbe
or
dec
ds
dec
roll
clc
jg
push
mov
mov
mov
add
push
stos
pusha
push
faddp
dec
sub
sub
movsb
sbb
cmp
adc
cmp
inc
imul
sub
adc
out
clc
test
ss
pop
out
mov
ret
pop
gs
and
loopne
out
inc
test
lds
jbe
xor
cmp
mov
jge
out
mov
mov
sub
jp
pusha
clc
cmp
imul
cmp
jg
pop
cvtpi2ps
inc
inc
cli
dec
loopne
test
sub
push
in
lock
flds
fsubrs
into
fadd
push
dec
mov
dec
jns
nop
jns
pop
pshufw
movsb
sbb
sbb
ja
push
clc
pop
mov
dec
xor
loope
push
push
jl
push
jge
cltd
jecxz
xor
jg
repz
scas
sarb
mov
dec
xor
and
and
xchg
addr16
and
jbe
scas
cmp
jb
lret
ja
enter
mov
loopne
cmp
into
out
in
stos
mov
out
add
imul
jb
cmp
jns
loopne
cmc
mov
push
pop
ret
shrb
rorl
ja
hlt
ljmp
xchg
dec
lods
sub
jae
xchg
pop
jno
and
xor
inc
add
pushl
int
call
movsb
xchg
cmpsb
mov
xchg
popa
dec
push
sub
rclb
out
fwait
iret
xchg
mov
mov
test
mov
test
sbb
stos
push
or
dec
cmp
imul
xchg
mov
mov
insl
add
push
pop
mov
push
inc
lds
push
jecxz
call
fcoms
sbb
dec
or
ds
xor
cmp
push
and
push
pop
pop
dec
ja
das
push
bound
add
inc
pop
out
xchg
ss
ss
bound
jp
dec
bound
stos
sahf
popa
mov
ret
ljmp
sub
pop
cs
data16
dec
cmpsb
orb
lds
insb
cmpsl
das
push
subl
aaa
out
push
ss
xchg
rorl
pop
jmp
sub
dec
data16
mov
shlb
scas
out
jbe
push
ja
sti
out
aaa
xor
mov
rcll
fisubrs
jmp
aam
out
popf
iret
scas
js
ror
or
out
stos
mov
js
xchg
out
jl
xor
mov
dec
das
mov
xorb
adc
out
fldenv
outsb
das
js
jge
out
mov
push
das
imul
out
sub
aaa
xor
cmp
jnp
out
or
adc
das
push
mov
mov
pop
outsl
fidivrl
lret
or
out
fnstenv
push
aad
jbe
dec
divb
ss
pusha
out
push
fcmove
sub
in
scas
addr16
gs
cmpsl
push
imull
in
xor
out
adc
data16
sbb
adc
lock
fidivrs
pop
push
sbb
leave
add
cmc
cli
sahf
clc
mov
movsb
or
mov
cmp
push
pusha
xchg
push
out
jp
sub
push
inc
outsb
mov
ja
mov
ss
adc
imul
loop
inc
push
int3
fsubl
out
das
mov
cmpsl
inc
jnp
lock
inc
mov
ds
lock
dec
je
jle
mov
aam
out
ljmp
push
lea
sahf
das
fnstenv
mov
into
sub
jg
dec
mov
jmp
popf
das
cltd
jg
aam
movsl
stc
dec
out
dec
xorb
in
mov
loope
pop
pop
dec
xchg
fcmovnbe
fisubs
jae
mov
cmp
cmp
adc
xchg
push
dec
inc
mov
lret
adc
sub
lret
sbb
xor
adc
and
testl
mov
aas
add
pop
cmpsl
inc
lret
cmp
push
imul
pushf
push
sbb
hlt
mov
mov
jl
xchg
out
pop
or
das
adc
ljmp
hlt
push
insb
pusha
cmpsl
jbe
and
in
sbb
sbb
and
cli
das
xor
jnp
into
sbb
mov
mov
cmp
aam
scas
cmp
push
and
divb
lods
mov
inc
sub
jnp
pop
sub
daa
xchg
push
jbe
mov
push
jl
xchg
push
cs
pop
out
mov
xor
jg
mov
ss
lock
cmp
push
cmp
sahf
mov
push
js
outsb
fisubl
dec
ret
push
add
sub
pop
scas
adc
and
xchg
mov
repz
push
mov
inc
data16
jge
inc
cmp
and
lock
aas
mov
das
mov
push
mov
sub
sub
sub
sub
das
xor
xor
daa
xor
cmp
cmp
mov
mov
cmp
and
shll
and
add
dec
and
out
std
sub
data16
mov
or
outsb
pop
movsb
je
add
adcl
adc
icebp
mov
dec
mov
out
mov
out
test
add
xchg
push
jmp
mov
inc
enter
mov
cmp
lods
sub
subb
pop
fs
lea
cmc
test
add
and
and
lea
cmc
neg
into
cmp
push
jb
push
adcl
popf
or
mov
mov
outsb
and
fisubs
aas
dec
ja
jbe
andnps
xchg
mov
mov
add
repnz
mov
mov
sub
scas
push
fwait
add
sbb
jge
lret
outsl
mov
ret
and
sarb
pop
movsl
sahf
pop
cltd
andb
out
mov
mov
mov
adc
sahf
ds
scas
and
test
leave
jnp
adc
inc
call
fwait
enter
pop
and
sahf
sbb
fisttpl
push
sub
xor
mov
pop
sub
neg
jmp
push
repz
mov
pop
pop
mov
dec
dec
xor
inc
mov
inc
xchg
testl
cld
in
scas
loope
aas
cmp
cmp
mov
fmull
not
jae
pusha
push
jb
iret
clc
std
or
cwtl
test
adc
popf
scas
sub
or
clc
stos
aad
and
pop
negb
push
jmp
and
stos
mov
mov
dec
push
cmovge
aaa
sub
xchg
aam
enter
in
repz
push
mov
cmpsl
push
xor
sbb
mov
repnz
fnstenv
cmp
push
sub
inc
fimuls
xor
fadd
test
xor
shll
scas
test
leave
jbe
sbb
jecxz
loope
or
xor
jg
xor
cmp
ss
stc
xchg
fisttps
push
scas
mov
dec
jbe
push
pop
or
push
jg
push
xchg
fbstp
jo
out
dec
sub
xorb
jp,pn
push
xor
pop
adc
cmpsl
mov
xchg
push
push
push
xor
push
adc
dec
ss
out
cmc
cmp
adc
cs
cmp
xor
test
scas
ja
fdivrs
test
ds
aaa
dec
jmp
and
es
dec
ss
pop
rolb
sahf
loop
lods
sub
adc
clc
in
push
repnz
out
mov
inc
cs
ss
sub
xor
dec
jno
adc
dec
xchg
stos
scas
jp
xchg
dec
adc
clc
in
dec
ljmp
inc
jg
repz
inc
push
or
mov
ljmp
and
sub
outsb
xor
je
popf
pop
push
sub
jnp
rcrl
leave
cmp
push
xchg
jb
cmp
fisttpll
loopne
insl
cmp
inc
push
insb
xor
jl
lret
movsb
ss
aas
or
outsl
xor
xor
scas
sahf
test
pop
insl
pushf
into
jns
cmp
sub
jg
jmp
out
push
add
cmp
inc
fnstcw
xchg
inc
sarl
daa
ss
xchg
sub
orl
aas
stos
stc
dec
in
inc
sub
fsubr
mov
lods
fimull
jbe
mov
pushf
mov
and
ret
lret
insl
mov
adc
sub
pushf
xchg
xchg
dec
fadds
add
xor
xor
add
xor
xor
mov
xchg
push
test
call
insl
dec
pop
je
xlat
mov
push
adc
into
test
dec
aas
jp
mov
ds
aaa
je
mov
pop
mov
mov
or
orl
push
decl
or
inc
mov
sbbb
imul
icebp
jo
cwtl
xor
add
sub
fwait
dec
and
je,pn
add
sub
dec
loopne
sub
sub
into
mov
shlb
sub
sbbb
cs
jl
sar
dec
push
sub
ss
scas
adc
jp
xchg
pop
scas
shrl
fldt
sbb
dec
aaa
xchg
mov
test
sub
push
push
jl
mov
push
push
fsubs
out
js
js
inc
popa
push
lock
push
fwait
cmp
adc
cs
pop
lret
mov
in
jo
leave
repnz
dec
jns
adc
popf
les
pushf
jno
fs
inc
mov
aaa
divb
pop
mov
mov
dec
pop
jge
jg
dec
popf
push
xchg
inc
pusha
cli
jnp
lock
dec
sbb
adc
test
adc
addr16
dec
lods
inc
ss
xor
subl
out
std
cmpxchg
popa
adc
mov
inc
dec
mov
mov
sarl
xor
aad
xor
xlat
xor
aad
test
and
push
and
xor
mov
fwait
arpl
fcompl
jne
push
popa
incb
sub
mov
jae
hlt
pop
add
cmp
mov
xchg
lcall
mov
sub
mov
push
js
adc
aad
ss
hlt
cltd
jp
inc
sahf
movsb
rcrl
iret
adc
pop
sti
cs
gs
aad
xchg
je
popa
lock
imul
dec
bound
js
mov
inc
jno
sub
xor
add
loopne
and
mov
push
cmpsl
jmp
add
xchg
mov
lds
add
into
aas
aad
orl
cwtl
xor
cmp
arpl
fcomps
je
cmpsl
in
jle
push
xchg
cmp
popf
dec
push
movl
pop
test
pushf
cmpsl
inc
outsb
lcall
cmp
ss
fwait
jbe
cli
jle
adc
jbe
sub
push
sub
adc
mov
add
or
adc
js
fwait
mov
fsts
jmp
outsb
mov
inc
inc
xor
mov
mov
cwtl
aad
sarb
cwtl
push
and
imul
mov
push
jb
jl
cmp
mov
enter
mov
int3
inc
pop
lods
popf
pop
sub
popa
cmp
jecxz
inc
inc
imul
cmp
fimuls
ss
outsb
repz
sti
push
insb
dec
in
mov
sub
push
xor
sub
pop
mov
inc
cmpsb
mov
cmp
adc
jo
xchg
or
pop
jbe
cmpsb
jno
and
xor
scas
arpl
add
push
lods
dec
dec
jns
movsb
mov
mov
cmpsl
cmpsl
xor
int
xor
cmp
dec
cltd
mov
jp
filds
in
and
or
mov
cmpsb
cld
jns
sub
bound
fsubrs
inc
mov
sahf
out
jno
fwait
shll
loope
gs
cltd
xor
aam
cmp
cmpsb
mov
jnp
in
dec
test
pop
push
adc
insb
pop
fwait
outsb
aam
cs
int3
mov
dec
pop
pushf
mov
xor
push
ds
lcall
dec
xor
std
cmp
repz
movsl
test
outsb
xor
scas
push
jge
nop
mov
cli
and
adc
add
add
inc
rorl
mov
adc
mov
cmp
sbb
pop
outsl
pop
int
stos
gs
lds
test
mov
test
imul
push
xor
push
dec
insl
sbb
fs
lcall
ds
or
cmp
mov
and
outsl
test
adc
das
xchg
mov
mov
popf
cld
in
mov
pop
sub
scas
jg
xchg
jbe
push
sbb
mov
cmp
and
das
sub
jo
std
mov
out
imul
into
add
push
push
mov
mov
xchg
iret
cs
xchg
aaa
test
and
jno
cmp
push
xchg
xchg
jmp
sub
add
icebp
dec
mov
outsl
stc
mov
push
xor
outsl
pop
sub
movhlps
jno
jno
sar
pop
xor
shl
idiv
mov
mov
or
mov
mov
mov
adc
scas
jno
bound
mov
dec
xchg
sbb
dec
mov
add
lret
xor
scas
mov
mov
push
popa
mov
outsb
pusha
xor
mov
mov
inc
mov
xor
dec
js
cmp
out
pop
sub
inc
jno
pop
les
mov
pop
movsl
mov
mov
js
sbb
and
sub
sub
mov
adc
cmpsb
mov
in
mov
pushf
xor
rcll
jg
push
imul
lret
lcall
out
lret
enter
aaa
pop
rorl
lds
push
and
inc
ss
les
ss
xor
scas
inc
aaa
psubb
les
aas
es
inc
mov
fwait
mov
mov
loope
xor
jle
xchg
push
push
nop
shlb
pop
out
aas
cmp
sub
push
dec
popa
imul
mov
mov
push
aaa
fildll
cmp
cmp
lcall
and
data16
push
xchg
fbld
inc
cmp
push
lcall
push
out
sub
imul
lea
add
inc
sub
popa
out
xor
je
mov
in
shll
fwait
xchg
test
xcrypt-ctr
cmpsl
pop
pop
nop
and
out
ret
sbb
inc
xchg
pop
dec
jmp
inc
andb
out
adcb
jl
call
out
push
cmp
out
ljmp
lds
push
mov
push
and
push
dec
xor
mov
fcomp
mov
adc
fwait
mov
or
adc
ljmp
sub
lcall
jp
xchg
sbb
push
or
ja
negl
xor
scas
addr16
push
aad
jns
scas
sbb
nop
das
mov
mov
jno
and
daa
mov
xchg
out
ljmp
sbb
and
outsb
add
test
insb
scas
sub
movsb
pop
jbe
pop
dec
inc
push
mov
cld
in
fbstp
bound
sub
cmpsb
movb
push
in
sahf
out
sbb
aam
push
mov
repnz
mov
imul
pop
adc
cmp
mov
xor
clc
add
stos
fsts
adc
adc
cmp
outsb
scas
cmp
sub
xchg
data16
sub
xchg
and
bound
outsb
ja
jbe
cmp
cmpsb
inc
ss
ss
sub
scas
pop
push
repz
xchg
or
jnp
push
adc
icebp
adc
mov
cli
mov
push
and
pop
negl
push
fwait
dec
add
xchg
ljmp
icebp
xchg
enter
cld
in
jmp
movsl
mov
adc
cmp
repnz
cmc
jp
jb
add
divb
testw
bound
or
jb
js
and
jbe
ds
push
sub
push
mov
aas
outsl
pop
out
fwait
xchg
das
xor
sub
sbb
in
pop
mov
mov
data16
adc
sub
orl
sub
and
dec
dec
push
or
xchg
mov
jbe
iret
sti
pop
je
out
mov
jle
sub
aas
scas
daa
test
jnp
sub
xchg
inc
xchg
xor
inc
je
cltd
mov
dec
pop
dec
cmp
in
push
sti
shlb
addb
lods
aaa
nop
dec
push
jbe
sbb
inc
insb
add
cs
test
fucomp
rcl
outsl
test
movsl
mov
cmp
dec
sarb
ss
bound
mov
dec
cmp
add
lcall
movsl
ret
mov
xor
hlt
out
les
test
xlat
add
rcll
test
lcall
icebp
cs
sub
jg
push
add
lret
insl
popa
adc
fstl
mov
dec
pop
data16
popa
aas
xchg
add
xor
lods
rcll
push
je
pop
outsl
sahf
push
push
cltd
ds
inc
frstor
scas
lcall
adc
mov
out
fiaddl
js
ss
add
rep
repz
jno
negb
cwtd
notb
xchg
test
dec
lcall
iret
jb
and
sbb
jno
sub
dec
xorl
inc
mov
xchg
scas
fwait
adc
fs
ss
test
sbb
pop
pop
sub
gs
xchg
push
repnz
xor
pop
nop
mov
roll
je
inc
dec
dec
add
mov
jbe
xor
lret
pop
repnz
or
nop
jl
ljmp
sarb
xchg
jg
aaa
test
int
dec
jp
add
fs
cltd
xchg
dec
pop
cmpsb
test
imul
mov
xchg
inc
push
lods
cmp
out
mov
push
cli
ss
push
xor
lret
pop
out
mov
stos
imul
test
xchg
add
cld
lret
daa
shll
fwait
inc
stc
cmc
outsl
mov
test
xor
je
mov
shlb
mov
ljmp
sub
adc
adc
rorl
je
bndldx
stos
imul
xchg
outsb
and
flds
dec
out
inc
adc
int
call
mov
mov
cmp
sub
xor
add
push
incb
sbb
mov
stos
clc
fwait
push
xchg
enter
inc
and
scas
sub
cmp
adc
sbb
scas
mov
cmp
in
sub
push
cmp
jne
mov
jl
dec
cmp
dec
push
xor
xchg
push
sub
notb
sbb
and
pop
sub
inc
ds
or
xchg
aad
inc
out
jnp
nop
mull
fwait
inc
push
loop
ja
mov
in
xor
call
inc
jp
les
ret
scas
dec
xchg
push
cwtl
xor
cmp
pop
ret
jge,pt
xor
adc
sbb
ret
jmp
out
cld
pop
mov
sbb
xor
inc
out
cli
loop
add
fcmove
in
and
lahf
mov
daa
inc
lahf
pop
jne
enter
andl
mov
cmp
pop
jnp,pn
push
negl
add
jl
adc
pop
enter
and
std
cmp
push
sub
les
jae
add
decl
push
inc
test
mov
fldenv
sti
pop
sub
xchg
jae
push
incb
jl
jbe
xor
pop
push
sbb
and
test
fcmovne
out
daa
mov
and
push
or
cmp
fidivs
cmp
dec
jl
pushl
jns
jns
aas
push
xchg
test
add
sub
les
insb
add
jecxz
lahf
mov
xor
and
outsb
nop
aas
out
push
xorl
fidivrs
jl
push
test
and
stos
mov
pusha
shlb
mov
insl
nop
inc
push
push
inc
xchg
popf
stos
jg
push
xchg
inc
xchg
push
cmp
xor
fwait
daa
lds
sahf
push
clc
sbb
fisttpll
fists
push
and
nop
inc
and
outsb
cwtl
or
inc
pushf
and
adc
or
dec
das
and
xor
dec
cmp
and
in
mov
das
mov
pop
or
ss
dec
xchg
push
sub
inc
sub
sub
shlb
and
jle
push
idivl
out
cs
ss
add
sub
repnz
aaa
data16
pop
popl
sbb
lahf
adc
xor
movsb
xchg
out
add
mov
and
popa
movaps
aaa
jle
or
and
out
mov
xor
das
xchg
mov
adc
mov
lret
popa
mov
pop
mov
dec
das
movsb
ret
out
data16
cmp
data16
or
dec
dec
das
pop
ret
out
cmp
xchg
lcall
pop
daa
pop
xor
adc
push
or
adc
aaa
mov
das
cmc
jns
pop
ret
aaa
int
das
xlat
ret
repz
outsl
cld
ljmp
mov
cmp
sbb
inc
punpcklwd
data16
insl
cmp
sarb
cs
pop
data16
fwait
cmpsl
push
outsb
xorl
xchg
ja
push
adc
popf
mov
inc
and
sbb
pushf
xchg
cld
mov
pop
repnz
xor
lock
mov
or
xor
adc
cmp
push
cmp
bnd
dec
aaa
mov
ja
out
mov
sahf
xor
adc
push
inc
divb
scas
ss
cs
mov
pop
xchg
das
xchg
push
insb
inc
inc
popw
pop
scas
popa
aaa
sub
mov
scas
aas
push
cwtl
xor
and
dec
repnz
adc
mov
cmpsl
or
das
dec
mov
das
imul
dec
jmp
mov
call
cltd
dec
fisttpll
idivb
pop
das
mov
inc
sbb
les
adc
mov
movsl
jg
inc
xchg
sub
inc
data16
scas
push
lea
mov
aas
jbe
jp,pt
push
ljmp
mov
mov
jle
leave
les
insl
arpl
mov
ds
inc
daa
inc
data16
imul
call
scas
sti
pop
sti
fimuls
andnps
jl
push
call
dec
add
jo
pop
cmp
xor
iret
or
mov
iret
test
sub
adcl
or
jge
fnstenv
popa
rolb
cld
cmp
in
push
fadd
mov
ljmp
lret
inc
xorb
xor
cmp
mov
loope
mov
and
lock
mov
push
and
scas
dec
outsl
lcall
push
or
jbe
sbb
test
dec
pushf
lret
jge
mov
cmp
mov
cmc
fbstp
add
jne
push
sahf
test
idivb
sub
cmp
push
mov
sbb
call
scas
test
int
jl
repz
push
sbb
mov
iret
mov
jnp
push
xor
js
cltd
xor
push
xor
mov
adc
addl
rorb
out
mov
or
jno
mov
xor
into
add
push
mov
jge
test
fisubrs
jo
push
fwait
mov
cmpb
sbb
addb
cmp
cmp
fwait
add
movsl
mov
mov
mov
faddl
add
push
fldenv
jg
test
add
push
mov
subl
jmp
fbld
mov
nop
sub
rcrb
leave
push
scas
dec
in
xor
lea
test
push
pop
jbe
daa
mov
push
fbstp
fstps
test
insb
mov
mov
std
nop
and
mov
pusha
fisubl
loope
aaa
inc
decb
in
sub
fisttpll
lahf
cmpsb
in
mov
fisttpll
movsb
mov
out
xor
inc
seta
pop
adc
insb
cli
mov
add
push
pop
popa
jmp
jno
add
cmp
mov
inc
lods
cli
dec
dec
push
bound
lret
xor
js
inc
dec
sbb
dec
cmp
pop
and
ds
imul
jo
add
ret
outsb
inc
dec
sub
das
out
jmp
mov
aaa
push
pusha
adc
pop
inc
fwait
dec
repnz
push
inc
jns
adc
mov
and
and
aam
imul
ljmp
jo
add
and
sub
movsl
lahf
push
sbb
push
and
out
fs
cwtl
sub
outsb
sub
add
xor
xor
mov
lds
mov
and
inc
sbb
add
add
nop
push
jle
out
shll
dec
addl
cwtl
xor
daa
cmp
mov
dec
outsb
mov
xor
push
mov
mov
xor
mov
aaa
lods
add
repz
mov
add
mov
inc
jge
cli
jbe
push
je
popf
aaa
push
insb
or
and
and
inc
mov
fildll
cmp
lods
adc
scas
aad
jne
push
sub
add
push
fs
pushl
in
jbe
mov
clc
xchg
xor
bound
int3
xchg
jmp
adc
pop
out
clc
mov
clc
xor
out
pushf
jle
lods
push
outsl
push
mul
das
adc
inc
jbe
ds
cmp
and
sbb
aam
or
aad
cmc
shrb
mov
bound
call
lds
pop
ss
adc
hlt
ljmp
push
fidivs
mov
cmc
inc
outsb
lret
mov
cmp
jnp
sar
sub
xor
cmp
into
stos
sbb
jne
mov
push
xchg
fdivs
cmp
pop
sub
xor
aaa
je
push
es
push
outsl
inc
ret
jns
lret
cmpl
push
push
mov
icebp
ret
lahf
popa
call
cmp
and
xor
mov
pop
mov
adc
lahf
ret
push
mov
test
leave
sbb
lret
sbb
ds
divl
je
dec
mov
mov
cli
sbb
ficomps
jecxz
fistl
and
push
mov
inc
dec
inc
mov
dec
daa
dec
pop
cmp
scas
cmp
rolb
sbb
popf
adc
fidivs
pop
ljmp
scas
xor
out
inc
mov
and
xchg
push
push
dec
daa
jns
stos
sbb
mov
adc
jnp
icebp
cs
mov
sti
sbb
push
out
imul
icebp
xor
add
mov
lods
scas
lcall
stos
push
jo
push
data16
mov
mov
push
and
adc
stos
inc
mov
test
jne
pushf
sbb
jle
stos
sub
sarb
jb
inc
outsb
daa
dec
test
mov
xor
cmp
fwait
adc
lcall
aas
insl
daa
pop
sub
jns
jg
mov
test
int3
mov
movb
leave
daa
cmp
add
cmp
inc
faddp
cmp
mov
filds
incl
ret
jns
xor
pop
dec
ss
fmuls
xlat
jns
lods
aam
push
pop
int3
dec
mov
cmp
push
pop
mov
arpl
ret
enter
dec
mov
daa
ret
mov
stc
sar
in
arpl
pop
mov
insl
xor
lods
bound
pop
xchg
push
mov
mov
add
loopne
ret
fs
dec
inc
out
dec
push
shrb
mov
aad
insb
ret
inc
lcall
dec
xor
mov
nop
test
xor
daa
pmuludq
jb
mov
mov
pop
fdivrs
pop
cmp
enter
inc
sub
mov
nop
cmpsb
dec
out
in
imul
push
out
lret
sbb
fsubrl
lods
and
mov
aam
pop
add
push
dec
fnstenv
lea
daa
inc
pop
mov
outsb
movaps
rorb
pop
stos
mov
mul
sbb
xor
aaa
push
out
dec
in
stos
dec
dec
push
mov
mov
aam
cmp
mov
push
ret
add
loopne
dec
testl
das
data16
push
pop
lret
sub
lea
cvttps2pi
pushf
lcall
movsb
mov
add
adc
jnp
data16
fbld
jns
cmp
std
sbb
loop
mov
into
imul
mov
dec
popa
inc
decl
jge
repz
fs
call
cmp
das
test
inc
repnz
xlat
mov
aas
xor
shlb
cmpsl
test
in
je
push
mov
repnz
xlat
aaa
int3
ret
jo
popl
jae,pt
mov
sbb
mov
xor
in
mov
ret
or
xchg
xor
sub
xor
popa
into
mov
shrb
dec
out
sub
stos
stos
mov
ss
outsb
jl
mov
dec
and
fsubl
ret
add
jmp
jl
ret
pop
push
scas
and
lret
lods
mov
gs
pop
andb
ljmp
je
mov
jo
mov
xchg
xor
mov
push
mov
push
adc
fwait
dec
outsl
ss
test
mov
daa
inc
jle
imul
dec
mov
cmp
mov
push
pop
vmread
stos
pop
fnstenv
xor
push
aad
xor
sti
imul
mov
inc
sbb
sub
push
scas
cmp
push
and
jle
cmp
into
aaa
mov
and
daa
out
aaa
scas
sbbl
pop
jmp
mov
push
idivb
mov
dec
add
insb
mov
dec
xchg
push
inc
rorl
push
jae
mov
cmp
jne
xor
dec
daa
dec
jns
std
pop
in
cmp
add
or
imul
sbb
sbb
test
cmpsb
arpl
lods
aaa
dec
imul
pop
insb
loop
lds
mov
dec
les
repz
ss
outsl
mov
das
mov
push
mov
xchg
sbb
and
aam
lcall
sbb
push
lahf
dec
push
lret
in
lds
mov
fistl
test
jecxz
test
sbb
fsubs
cmp
mov
or
mov
movsb
cmp
mov
inc
leave
xchg
fsub
popf
jbe
jno
dec
adc
add
xor
popa
shlb
xchg
mov
les
xor
mov
push
mov
data16
xchg
push
dec
cmp
xor
push
push
mov
lahf
imul
cmp
sbb
inc
test
cmc
add
xor
sub
xchg
fs
nop
lret
add
xchg
push
in
xchg
mov
jp
out
mov
fldenv
test
iret
scas
add
ljmp
stos
fwait
adc
int3
push
mov
mulb
push
dec
mov
push
movsl
xchg
or
lods
fisubs
sub
fiaddl
popa
stos
and
out
cmp
push
fwait
push
pop
inc
outsb
cmp
xor
and
mov
xlat
sub
inc
daa
jge
or
hlt
jle
cmpsb
adc
ret
add
mov
inc
xor
xor
sub
aad
ljmp
cmpl
lahf
js
pop
jge
aas
xor
jmp
sub
outsl
shlb
lock
push
mov
in
cmp
addr16
rclb
call
xor
push
sahf
mov
and
daa
into
mov
in
dec
hlt
cs
pushf
and
dec
sbb
test
movsb
call
lcall
nop
mov
in
cmp
jb
add
daa
popf
jae
pop
repz
mov
inc
mov
pop
cmp
cmp
and
pop
or
dec
popf
psraw
mov
rcll
in
out
sub
popa
andb
add
cmpsl
xor
sbb
fmulp
jmp
loope
cmp
pusha
mov
call
ljmp
andl
popa
adc
pop
push
jne
mov
in
mov
dec
sub
or
jns
sub
leave
test
out
cld
adc
lods
ret
fisttps
add
cmp
faddp
cmp
sub
lock
stos
gs
out
mov
stos
inc
and
cli
dec
sbb
into
data16
cmp
call
out
cmpsb
cs
xchg
popa
in
mov
mov
loope
cld
push
pinsrw
and
push
fwait
pop
fwait
jle
dec
adcl
mov
jle
ds
push
andl
outsl
mov
das
test
mov
mov
enter
dec
popa
test
aaa
xor
jg
mov
das
mov
daa
movsl
push
lock
dec
lods
push
cmp
fcoms
js
subb
lock
cli
adcl
jno
loopne
call
cmp
inc
adc
enter
adc
movsl
arpl
sbb
cmp
adc
fs
addr16
mov
out
push
lcall
lcall
repz
cmpl
push
jbe
cs
bound
dec
mov
inc
mov
mov
out
sbb
insb
mov
in
push
mov
sub
sub
mov
and
mov
cmp
aaa
push
daa
lahf
xor
jge
sub
cmp
xchg
loope
jnp
add
adc
mov
sbb
das
rorl
push
dec
in
and
xchg
cmp
dec
adc
sub
out
jle
jge
sbb
shrb
shll
push
xor
call
leave
popf
sbb
and
mov
xchg
sbb
pop
cld
aaa
xor
xor
idivb
push
jno
in
mov
mov
xorl
cmp
jge
mov
pop
decl
daa
fiadds
ja
dec
test
mov
daa
jp
sbb
ss
mov
lods
ss
mov
clc
insb
jecxz,pt
push
out
mov
xchg
insl
dec
inc
sub
add
or
scas
mov
test
out
psubsw
test
or
pop
xor
outsb
mov
lret
mov
cmp
add
dec
cmp
fadd
daa
test
sbb
sub
or
outsb
add
mov
cmp
insl
ja
sub
and
push
xor
jns
dec
ljmp
push
stos
jmp
cwtl
jo
mov
movsb
mov
ja
fbld
mov
mov
mov
and
out
push
xor
mov
aaa
cmp
jb
in
dec
test
and
jns
into
outsl
int
and
or
cmp
pushf
ror
jmp
aad
shlb
dec
test
xlat
fisubrs
lret
pop
mov
xor
or
push
scas
shrb
push
je
push
call
popa
xorb
and
aas
popf
xor
sub
or
dec
add
jbe
cwtl
outsl
push
les
or
dec
cmp
mov
sbbb
dec
mov
xchg
cs
xchg
xor
xchg
sbb
das
clc
stos
sub
into
das
sub
jge
adc
scas
pop
or
jle
and
test
mov
js
je
enter
imul
or
dec
mov
addb
lods
fwait
mov
push
mov
sbb
enter
cmp
loop
push
jbe
les
loope
sub
push
movsb
or
jno
xor
push
pusha
or
xchg
iret
jo
dec
dec
inc
push
shlb
dec
shrb
inc
adc
pop
nop
jns
jns
rorb
outsb
mov
adc
call
xor
loopne
inc
push
pop
fiadds
mov
fwait
pop
fwait
cmp
pop
xchg
stos
mov
and
ljmp
int3
insb
add
adc
test
stos
in
sahf
adc
fidivrs
xchg
dec
or
sbb
insl
cmpsb
mov
pop
aas
iret
fisubrl
push
mov
hlt
push
cmp
add
add
cmpl
mov
inc
imul
and
xor
stos
adc
das
jns
or
dec
xlat
xchg
sub
mov
inc
push
xchg
int
testl
push
out
mov
sub
shrd
shl
jb
jecxz
mov
fs
pop
mov
sub
call
jg
stos
mov
and
mov
lret
mov
inc
les
fwait
insb
subb
out
sub
lods
mov
cmp
mov
mov
inc
adc
mov
addr16
lods
fcom
lret
jbe
insb
int
mov
es
inc
loop
cmp
ds
mov
nop
inc
sarb
out
mov
repz
push
sar
pop
pcmpeqb
mov
mov
cmp
fwait
inc
mov
ss
sub
loope
mov
jmp
in
das
scas
cmp
mov
out
sub
or
push
fs
lds
sub
icebp
sbb
dec
xchg
cmp
xchg
rcrb
mov
jl
push
fsubs
out
das
sbb
dec
jmp
jbe
cmpsb
addl
adc
jmp
daa
push
das
sub
jb
aas
pusha
adc
mov
cwtl
roll
in
sub
sub
daa
jo
and
mov
ret
dec
push
gs
adc
movsb
and
fistl
mov
out
cmp
inc
je
and
jg
int3
mov
xor
ret
push
inc
cmp
pop
jbe
dec
ret
loope
mov
cs
mov
xchg
repz
adc
pop
ljmp
sti
jmp
dec
insl
jp
fdivrs
ret
nop
cwtl
fdiv
scas
jb
mov
jecxz
movsb
das
fbstp
and
or
icebp
cmpl
cmp
insb
sub
gs
mov
daa
push
std
or
jge
dec
jbe
lock
cmp
stc
jnp
cmp
mov
faddl
fnstcw
lods
int3
dec
dec
outsl
fldcw
subl
mov
aam
push
inc
out
inc
movsb
popf
and
mov
call
mov
dec
pop
mov
xor
jl
test
ss
fisttpl
sub
loop
pop
stc
push
jp
jae
fsubr
sub
fsubrp
mov
data16
xlat
jge
cmp
shlb
dec
xor
push
push
lea
cmpb
jbe
push
xor
fmull
sbb
push
daa
clc
cmp
repz
or
mov
pop
pop
fwait
adc
xor
les
out
lcall
xor
mov
dec
adc
add
loopne
mov
mov
mov
stos
push
shl
xor
push
xchg
and
push
scas
jnp
sbb
imul
cmpsl
pop
xchg
enter
cltd
inc
popa
test
adc
sub
sub
test
or
cmp
ljmp
popa
jge
movsl
gs
sub
jmp
sbb
dec
insb
pop
cwtl
push
movsb
sbbb
std
clc
fwait
fs
mov
mov
push
dec
mul
mov
stos
rol
ljmp
inc
aaa
lret
push
scas
push
insb
and
cmp
ret
pop
jg
mov
sti
xorl
js
les
jno
sub
xor
xor
xchg
cmp
mov
and
jne
jne
movsl
fisubrl
lods
addl
cmp
les
jae
xchg
mov
xor
adc
push
lret
mov
jae
lcall
stc
lret
les
ss
pushf
sub
dec
dec
push
data16
mov
jbe
mov
mov
xor
pushf
stc
rolb
sbb
mov
cmc
andl
test
fadds
push
adc
cmp
scas
insl
push
sub
xor
in
jo
and
mov
mov
push
pushl
out
aaa
adc
fs
mov
popa
call
movsb
mov
adc
cmp
xchg
push
jb
popf
imul
test
xorb
mov
inc
jge
jecxz
push
and
adcb
cmp
iret
xchg
cmp
cmp
lcall
push
movsl
dec
pop
adc
int3
xor
insl
ds
cmp
mov
adc
es
popa
icebp
lcall
cmp
xor
aaa
sbb
or
xlat
jnp
xor
mov
sub
lcall
ja
cmp
js
in
adc
add
sbb
xor
outsb
pop
push
ljmp
cmp
test
daa
mov
jge
rorl
pop
mov
xor
cld
jnp
dec
mov
mov
push
sbb
push
les
push
popf
ss
gs
imull
js
jne
out
mov
cmp
mov
fsub
inc
inc
outsb
pop
cvtpi2ps
dec
dec
dec
and
xor
int
roll
fisttpll
sub
push
adc
or
pop
sbb
and
or
repnz
dec
ss
je
and
ret
sbb
test
test
gs
jl
imul
and
aam
mov
das
in
jl
int
fldcw
shll
adc
mov
out
mov
sbb
add
xchg
popa
and
test
cli
insl
cmp
add
data16
xor
cmp
cmp
and
lretw
jno
lahf
add
leave
jne
test
sub
and
pop
aam
jmp
fwait
adcl
sub
mov
rcll
pop
imul
pop
imul
pop
inc
nop
sub
add
adc
inc
adcb
out
mov
xchg
jne
ret
xchg
push
dec
out
jo
mov
adc
dec
cmp
repnz
push
daa
jbe
add
xchg
pop
lock
add
sub
movsl
out
out
daa
push
cmp
pop
movsb
and
outsl
mov
xchg
xor
gs
add
inc
fwait
xchg
fidivs
scas
xor
mov
xor
mov
or
repz
call
fs
cli
pop
dec
mov
addb
push
or
subb
mov
in
cli
dec
push
movsl
and
sbb
sarb
loopne
jno
mov
mov
mov
mov
sub
mov
scas
das
adc
and
sub
lahf
sub
fs
mov
ljmp
out
mov
test
test
or
movsb
mov
inc
and
dec
das
lods
dec
cs
mov
mov
inc
or
push
leave
data16
xor
enter
mov
mov
cmp
dec
mov
popl
jns
data16
out
das
jge
add
and
scas
outsb
mov
movsb
stc
pop
outsb
mov
cmp
dec
out
das
push
int
data16
jns
xchg
push
stos
aas
pop
xor
sti
aas
data16
inc
shrl
xorb
repnz
out
das
or
pop
data16
inc
mov
das
in
jns
pop
mov
into
lds
cmpw
xchg
push
push
push
adc
push
shrb
add
xor
xor
push
mov
xchg
inc
cmp
and
jbe
cmp
pusha
mov
int3
data16
test
cmovne
dec
pop
cvtpi2ps
xchg
iret
fcmovu
int
pop
data16
xor
mov
pop
pop
stc
ss
data16
int
ds
xor
dec
ss
xchg
ucomiss
daa
jmp
nop
mov
jmp
lea
loop
dec
push
pop
mov
ss
jp
out
orb
inc
cmpsb
fs
cli
cmpsb
jbe
adc
xor
mov
je
mov
subb
mov
out
jo
inc
idivb
das
mov
cld
push
lods
xor
das
xchg
pop
push
push
or
push
ds
aaa
subb
inc
and
adc
test
ss
sub
push
inc
mov
das
push
jne
push
mov
outsb
mov
push
xor
inc
jle
mov
aas
xchg
mov
push
out
push
push
repnz
das
jbe
mov
lea
push
adc
push
push
lock
sub
pop
das
fsubrl
adc
mov
mov
das
xor
jnp
sub
cmp
adc
stos
dec
test
stos
xorl
leave
inc
leave
jg
cs
pop
mov
out
cs
mov
aad
pop
mov
jle
scas
and
mov
sub
dec
xorb
jae,pn
das
mov
push
lods
das
adc
pop
inc
jb
nop
dec
mov
incb
pusha
jmp
aaa
jmp
das
std
scas
rcrl
jecxz
in
jne
push
sets
or
and
scas
das
push
mov
stc
sti
sarb
cmc
ljmp
xor
pop
out
das
jl
pop
lahf
sbb
das
cmp
adc
mov
xchg
mov
or
ss
mov
ss
test
xchg
das
scas
das
mov
aaa
sbb
jle
call
mov
mov
or
test
aas
push
shrl
rclb
scas
dec
ret
popa
cs
icebp
aas
jno
loop
data16
ss
daa
cs
cmp
mov
das
jg
mov
int3
decb
cmpsb
fstps
aaa
xor
push
and
lds
cmpsb
dec
lods
call
outsb
mov
xchg
pop
ficomps
movsb
push
pop
cmp
repnz
xchg
outsb
mov
mov
xchg
outsb
jl
cs
sbb
dec
sbb
mov
outsb
repnz
inc
lret
mov
push
inc
push
dec
sahf
push
sub
mov
inc
dec
stc
dec
push
xor
lahf
cmp
out
popf
mov
out
mov
das
bound
pop
xchg
jbe
mov
movsl
xchg
mov
jb
mov
push
inc
mov
scas
sbb
push
pop
scas
and
ds
dec
push
and
pushf
aas
lods
das
push
clc
mov
inc
out
mov
mov
das
jae
mov
and
inc
pop
andnps
hlt
pop
dec
add
sub
aas
cs
lds
stos
out
xchg
mov
out
push
arpl
fidivrs
fcomip
or
lret
das
push
sti
scas
inc
mov
mov
mov
mov
mov
mov
mov
mov
sbb
inc
inc
fildll
add
cmp
push
fistpll
fs
cmp
sub
jl
cmpsl
iret
stos
mov
das
push
inc
inc
aad
push
iret
cs
sbb
and
jno
cmp
scas
lods
adc
test
mov
push
adc
dec
cli
xor
xor
push
cld
scas
nop
gs
dec
or
jg
roll
es
mov
sbb
pop
shll
xor
rcrb
adc
xor
ss
mov
into
daa
sub
mov
cpuid
mov
push
mov
dec
sub
std
jb,pt
xor
in
and
dec
sbb
inc
repz
push
ds
daa
movsl
rcrb
jo
xor
sbb
sbb
lock
andb
lcall
cmp
aad
mov
cmp
scas
outsb
jl
imul
cmpsl
std
loope
jg
mov
pop
cld
in
shlb
lcall
test
mov
addr16
xchg
push
push
ror
mov
nop
mov
or
jle
lock
mov
sub
jbe
mov
push
dec
pop
dec
or
mov
or
cmp
aas
inc
clc
mul
cmc
push
push
and
sub
ja
pop
data16
inc
mov
push
mov
jb,pt
lods
inc
jbe
scas
jp
mov
sbbb
pop
xchg
ljmp
jb
mov
scas
sbb
arpl
iret
mov
outsb
lret
cmp
imulb
stos
push
sbb
icebp
or
or
add
ss
mov
inc
inc
cs
ss
pusha
lock
sub
pop
sbb
pop
scas
out
idivl
jge
and
pop
mov
jbe
cmc
push
div
testb
mov
sub
jecxz
xor
mov
nop
testl
or
stos
fs
pop
xchg
xor
or
add
add
mov
sbb
adc
xor
xor
into
pop
xor
inc
xchg
outsb
push
push
inc
out
in
sub
ja
mov
dec
jge
in
push
leave
sarb
outsl
jnp
ret
aaa
ja
movsl
cmp
pop
mov
scas
aam
jno
repz
mov
mov
scas
mov
mov
ss
icebp
aas
push
adc
in
dec
nop
daa
cli
and
scas
sbbl
xchg
inc
jecxz
xchg
xlat
inc
scas
xchg
scas
sub
xor
orb
cltd
jl
xor
les
insl
push
and
mov
dec
cs
xchg
ret
les
test
rol
stc
inc
ja
xor
xor
subb
and
repnz
clc
popa
mov
jb
gs
cmp
jp
sub
shll
into
lods
sub
sub
scas
cmp
fwait
or
jl
rcrb
dec
fwait
out
mov
bound
and
cs
dec
inc
ffreep
fisubl
sub
imul
mov
jp
xor
sub
cli
dec
push
mov
sub
xor
out
xor
lahf
scas
xor
xor
mov
mov
aaa
or
pop
dec
lds
jmp
fstpt
ja
cmp
and
testb
out
inc
clc
dec
adc
cmp
and
push
jne
xor
scas
shlb
push
out
jl
addr16
imul
sub
sub
sub
adc
and
sbb
divl
inc
idiv
leave
rolb
mov
pop
sbb
mov
ljmp
psubusb
loopne
pop
and
mov
dec
test
mov
adc
and
lret
stos
push
and
test
lock
dec
and
cli
jns
stos
xchg
adc
inc
push
or
xorb
pop
shlb
push
nop
mov
jns
cmp
aaa
cmpsl
nop
inc
adc
lcall
and
adcl
lea
xchg
aad
mov
ja
pusha
push
cmp
cmpsb
jns
inc
test
mov
xor
sub
lds
jl
and
jnp
mov
and
push
loope
fistl
ss
adc
aaa
mov
fidivrs
int
sahf
cs
cmp
cmp
sub
mov
and
and
sbb
fisttps
daa
stos
or
or
and
subl
sti
je
mov
clc
add
jg
pop
daa
ja
xor
stos
test
out
test
test
cmpsl
or
pop
aaa
sub
pop
ss
cmpsl
or
and
inc
cs
cmp
and
cmp
inc
and
xor
cmp
dec
xor
dec
adc
inc
ja
xor
aaa
xor
inc
inc
push
dec
testl
mov
dec
int
and
testl
dec
jg
ss
std
sub
test
cmp
xchg
das
scas
outsb
cs
and
mov
popa
cs
mov
inc
js
pushf
bound
mov
leave
push
clc
jno
add
xchg
xchg
mov
test
inc
mov
outsl
and
scas
cmp
test
and
jae
iret
pcmpgtw
lds
bound
xor
std
fldl
mov
xchg
stos
bound
test
mov
jp,pn
mov
in
pop
sbb
fisubrs
dec
xor
sbb
mov
jb
and
aad
mov
jbe
add
sbb
lret
fcompl
test
pushf
and
andb
lret
fwait
stos
cmp
adc
or
das
mov
jp
lret
cmpsl
pop
out
dec
js
in
cmpsb
inc
sbb
fwait
lods
pop
sub
dec
out
xor
jne
imul
xor
mov
push
sub
push
fdivrs
dec
cmc
and
pop
inc
sub
mov
push
loopne
mov
jno
scas
lods
and
inc
dec
subb
push
fdivs
lcall
je
sub
push
rcrb
lds
loopne
cmp
lret
push
mov
mov
or
mov
jp
outsb
xor
js
add
out
xor
stos
insb
test
loop
aaa
scas
xor
cmp
sti
or
sub
ret
xor
pop
iret
pop
jno
loop
rcll
cmpsl
mov
jae
lods
lret
add
xchg
outsb
clc
mov
fidivs
pop
sub
out
push
cmp
mov
cmp
imul
insb
daa
addr16
adc
mov
popf
or
mov
out
daa
mov
xor
dec
adc
sbbl
ja
and
movsb
daa
xchg
and
rolb
shrb
sbbl
mov
jge
and
sbb
pushf
cmp
push
xor
and
scas
jbe
nop
push
iret
adc
or
ficompl
jge
mov
outsb
test
scas
ret
sbb
outsb
das
cmp
sbb
dec
ret
sbb
sub
xlat
mov
mov
dec
push
jmp
dec
push
dec
cmp
das
xor
mov
daa
mov
fwait
inc
mov
loop
stos
inc
bound
and
das
scas
xchg
mov
add
iret
pop
insb
cmp
arpl
cmpsb
dec
mov
js
mov
push
xor
int
scas
scas
xchg
xor
pop
test
and
dec
push
push
repz
adc
sbb
xor
data16
jno
movsb
das
mov
stc
fnsave
mov
sarl
insl
je
fs
pop
jns
push
or
mov
jge
bound
or
scas
bound
in
inc
cwtl
lea
lods
repnz
or
jge
push
cmp
lods
cmpsl
or
dec
insl
andb
mov
roll
loopne
push
mov
test
ja
gs
xor
jge
hlt
mov
inc
bound
sub
adc
adc
ret
jo
loope
popf
sbb
push
jecxz
iret
mov
nop
subl
sti
pop
sub
xchg
fldl
and
xchg
popa
pop
lea
xor
mov
cmp
mov
xchg
arpl
test
aaa
dec
jp
cmp
jne
cmp
cmpsl
cmc
or
test
pop
pop
ss
sahf
mov
je
fcompl
out
cmp
fmul
inc
sti
mov
jns
push
stc
stos
mov
out
and
mov
addr16
les
jbe
daa
cmp
outsl
rcrl
inc
in
imul
or
ss
pop
dec
dec
mov
std
adc
sub
adc
cmp
pop
data16
scas
jae
dec
lcall
fsubrs
xor
in
cmc
mov
cmp
pop
add
mov
je
pop
jp
mov
sbb
insl
and
insl
in
inc
add
push
jae
adcb
stc
mov
dec
dec
ds
dec
pop
icebp
sbb
inc
stos
or
dec
fistpl
dec
aas
imul
cmp
push
sbb
xor
sub
push
jno
inc
daa
pop
inc
imul
adc
dec
mov
pop
int
and
rep
fcmovbe
push
cmp
sub
add
in
inc
dec
lds
jg
mov
and
rcr
enter
push
aaa
jae
mov
cwtl
addb
add
lea
outsl
std
jmp
movsl
dec
incb
test
in
inc
push
imul
sub
rorb
push
or
sub
push
daa
dec
out
cmp
loop
cld
test
push
js
push
fwait
loop
push
sub
das
ss
xchg
push
imul
imul
hlt
ficoms
cmc
mov
cmc
outsb
div
pop
div
dec
div
ss
push
sbbl
dec
out
sbb
arpl
push
scas
cli
inc
push
xorb
push
push
xor
jmp
movsl
push
and
adc
test
jne
js
cmp
cs
cmp
xchg
in
cmpsl
imulb
inc
scas
inc
push
lret
call
mov
neg
inc
aaa
pusha
sub
loopne
imul
mov
and
mov
and
pop
sub
hlt
ja
cmp
lock
stos
scas
sub
sbb
out
data16
je
jp
in
arpl
data16
jbe
and
and
hlt
orl
mov
mov
inc
lahf
outsl
jge
out
clc
cmp
xor
enter
cmp
inc
loop
negl
xchg
dec
movsl
push
repnz
test
add
cwtl
cld
push
xchg
std
das
ret
incl
push
fstpl
ss
push
lret
cwtl
jns
cmp
xor
and
rorl
aas
mov
addr16
into
add
or
mov
push
hlt
inc
std
stc
stc
push
jmp
jnp
leave
dec
inc
cmp
dec
xor
xor
mov
dec
in
fmull
push
mov
inc
cld
aaa
push
jb
test
xor
ror
bound
iret
xor
sahf
sub
or
mov
lret
xchg
nop
ljmp
dec
imulb
out
and
lcall
sbb
cmp
rcrl
inc
fsub
lret
xor
addl
rclb
out
ss
pop
push
mov
pop
xchg
mov
loopne
dec
or
xor
jno
sbb
sub
popf
sahf
lcall
pop
xor
push
scas
jbe
jnp
pop
enter
lds
popa
sbb
insb
add
jmp
jge
adc
mov
cmp
js
adc
cmpl
push
call
loope
sub
push
jecxz
mov
inc
cmpsl
mov
subb
xor
mov
mov
aad
mov
cmp
jl
inc
or
loope
adc
inc
popf
nop
xchg
jns
scas
cmp
rcrb
les
push
dec
maxps
test
mov
outsl
ret
and
pop
push
sbb
ret
insb
cmp
stos
mov
scas
inc
out
xor
lock
xor
mov
pop
inc
sub
in
mov
or
push
xor
and
adc
push
push
fs
mulb
jns
cld
xchg
andl
shrd
stos
stos
popa
pop
fsubrp
jle
std
lcall
xor
mov
mov
cs
jnp
mov
in
cld
sub
adc
jbe
cmp
mov
add
and
fsubrs
lcall
mov
sbb
in
or
data16
int3
bnd
enter
xor
lcall
inc
add
push
add
addr16
mov
sbb
inc
mov
mov
adc
add
nop
sbb
dec
mov
mov
mov
adc
jnp
or
movsl
dec
daa
fbld
cmc
cmp
enter
dec
push
jno
adc
data16
test
out
clc
jp
jmp
adc
mov
cmp
xor
cmpsl
jge
pushf
stc
and
or
mov
pop
test
lock
jg
sbb
xlat
aas
dec
scas
mov
mov
out
sbb
sub
or
inc
xor
out
jge
cmp
mov
mov
push
push
dec
add
jns
sub
hlt
sti
outsb
pushf
mov
xorb
fwait
imul
ss
lods
stos
mov
mov
arpl
pusha
dec
cmp
jne
pop
cmp
mov
push
jmp
dec
or
and
imul
push
sbb
in
pop
adc
jbe
push
mov
push
inc
arpl
pop
ss
push
and
push
jbe
xchg
cmpsl
arpl
push
loop
inc
call
and
mov
outsl
in
mov
fmull
sub
ret
stc
les
les
leave
inc
mov
cmp
daa
rclb
jmp
push
push
fs
xorl
mov
test
push
hlt
xor
das
jb
scas
cmp
pusha
dec
or
rclb
sub
jno
in
or
shll
xchg
lcall
das
or
cmpsb
dec
data16
xchg
out
das
pop
int
push
mov
das
xchg
jne
xchg
sbb
inc
pop
das
insb
dec
add
mov
das
inc
je
push
ss
adc
or
das
and
orps
mov
cmp
xchg
out
jge
rcll
push
out
dec
das
stc
ret
or
shll
push
test
mov
mov
mov
xchg
push
push
andl
clc
fs
ss
pop
pop
clc
sbb
ja
ja
dec
jbe
pusha
push
and
loop
sbb
addr16
andb
int3
push
adc
cmpsl
pop
das
arpl
inc
addr16
xor
push
loope
cmp
lds
negl
mov
cli
bound
int3
push
and
loop
or
pop
mov
push
jae
decb
mov
lds
mov
imull
push
sub
and
iret
jge
ljmp
aas
leave
fisubs
cmpsb
gs
mov
stos
sub
jbe
mov
inc
arpl
xorb
scas
cs
sbb
mov
outsb
arpl
jno
das
jb
data16
jne
stos
add
fs
dec
push
das
dec
and
cmp
outsl
mov
test
and
mul
adc
xchg
dec
xchg
sub
pushf
sub
scas
addr16
stos
xor
sub
dec
data16
pushw
sbb
push
fldt
xor
bound
out
jmp
inc
sar
in
outsb
mov
aam
or
mov
movsl
int3
scas
xor
lcall
nop
mov
push
scas
push
push
adc
and
mov
lock
xchg
mov
xorl
mov
in
jge
ficoms
mov
jl
adc
loop
mov
mov
push
xchg
enter
push
aad
dec
or
pop
mov
mov
cs
xor
or
push
pop
adc
mov
jg
inc
cmp
or
imulb
add
dec
and
push
sbb
xchg
cmp
rcrl
sbb
inc
sub
mov
addb
ss
cmp
mov
das
inc
cs
add
out
inc
adc
scas
lea
xor
jp
adc
sub
call
push
xor
daa
push
dec
xchg
push
cs
lods
arpl
inc
and
ds
inc
push
pushf
in
ret
mov
cmp
bound
xchg
mov
loop,pn
push
mov
shrb
sub
pop
jecxz
and
adc
sbb
add
mov
fnstsw
jle
xchg
mov
loop
movsb
jmp
jmp
or
loopne
ret
push
jnp
inc
pop
les
popa
mov
jnp
nop
push
dec
xchg
lret
jl
jl
imulb
push
xorb
xor
dec
nop
xor
movsb
lgs
shl
js
nop
cmpsl
aad
adc
xor
and
repnz
jp
mov
cwtl
cmp
movsl
sbb
in
push
lods
xchg
add
push
jl
jle
aaa
stos
pop
fidivl
xchg
inc
mov
fdivrs
jbe
xor
and
out
xor
fdivs
mov
mov
aam
and
ds
jne
jns
sbb
cli
ljmp
fwait
out
test
pop
lret
sub
imulb
xor
jo
into
cltd
ljmp
lds
add
cmp
loop
rclb
xor
or
push
push
dec
addr16
ds
or
mov
inc
fidivrs
sarb
push
or
and
fstenv
popa
and
mov
sahf
mov
lcall
mov
fnstcw
imul
cmp
pop
and
mov
cs
cmp
or
sub
cmc
or
rcrb
xor
fwait
jl
jo
push
sbb
daa
pop
js
rclb
andl
add
ret
sub
push
cmp
mov
cld
jmp
out
insl
pop
iret
inc
test
cmp
daa
dec
dec
loop
cmp
and
ljmp
dec
jge
out
push
ja
push
push
inc
fisttpl
mov
aaa
nop
gs
lcall
lret
test
fisttpl
cmp
mov
or
cmp
inc
push
lahf
mov
into
out
adc
subb
loop
xor
sar
adc
push
cld
aam
shll
adc
mov
movq
sub
xor
sub
xchg
pop
mov
jbe
jmp
ror
rorb
pop
iret
cs
jl
push
fs
mov
inc
lods
adc
sbb
movb
inc
nop
orb
and
ret
cld
mov
and
addr16
inc
jmp
mov
adc
orb
jbe
cmp
daa
cmpsl
or
mov
orl
jo
rorl
out
fisttps
xchg
sub
xor
ss
push
sub
sub
fistps
pop
scas
ss
xor
dec
cmpsl
or
cs
mov
mov
fsubrl
jb
cmp
movsb
jns
mov
pop
stos
cmp
cmp
jecxz
jns
test
sarb
inc
dec
jmp
test
ss
cmp
pusha
adc
nop
stc
insb
pop
ret
popa
jmp
dec
jno
cmpsb
orl
sub
cld
xchg
insb
cs
mov
xor
stos
js
mov
fwait
inc
push
ret
add
shlb
jne
adc
arpl
insl
adc
pop
cmpl
lcall
mov
or
pop
into
mov
outsl
pop
mov
movsb
and
jge
out
cmp
mov
jae
mov
inc
cmpb
gs
or
das
js
fisubl
sub
push
or
xchg
push
add
mov
mov
jns
xchg
xor
dec
mov
pop
and
cld
das
sti
cwtl
inc
andl
and
jp
xor
lds
mov
xchg
inc
and
mov
mov
idivb
mov
das
in
aaa
daa
push
imul
lcall
xchg
or
inc
mov
cmp
mov
dec
outsl
call
mov
pop
cmp
lret
xchg
pop
mov
pusha
fisubl
cmpsb
inc
test
cmp
test
jno
sub
fsubl
cmp
xor
and
popa
popa
sub
ret
imul
mov
mov
cmpsb
scas
imul
je
inc
out
movsb
orb
fisttps
mov
outsl
dec
in
test
rclb
sarl
xor
lahf
inc
inc
xor
and
test
mov
pop
test
cmpl
xor
push
pop
scas
jnp
repnz
cmp
sbb
cmpsl
pop
adc
sub
jg
inc
das
popa
ja
sti
xor
mov
fimuls
negl
insl
adc
out
mov
pop
icebp
lcallw
dec
orb
subl
repnz
cmp
or
arpl
mov
inc
loopne
push
imul
push
in
cmp
mov
xor
sbb
pop
pushf
inc
sub
fwait
movsb
push
inc
mov
stc
mov
jl
int3
and
pushfw
mov
sub
xor
cmpsb
push
or
inc
lods
mov
inc
or
xchg
jns
cmc
outsl
push
mov
jne
outsb
fildl
push
sbbl
mov
push
dec
stos
xchg
test
fwait
in
sub
mov
dec
daa
sbb
jno
dec
int3
xor
and
push
addr16
pop
pop
mov
imul
push
cmpsw
sub
hlt
mov
cmp
lods
lcall
push
pop
mov
sti
jg
cmp
jae
jmp
in
int
xor
lods
das
adc
pop
mov
push
xor
push
lret
in
psrld
mov
loope
xchg
mov
insb
xchg
adc
pop
push
addr16
or
or
gs
je
loop
cmp
mov
inc
mov
adc
push
scas
je
push
push
push
and
cmp
popf
dec
ds
cmp
insb
inc
jno
mov
fldt
mov
lods
mov
out
inc
dec
inc
cli
mov
sub
out
jecxz
or
jmp
xor
scas
mov
pop
cmp
mov
cmp
cmp
repnz
fisubrl
or
adc
test
arpl
xchg
loop
ficoms
mov
xchg
sub
lret
lds
xor
fwait
das
jbe
or
imul
lcall
inc
adc
lcall
dec
dec
dec
and
ds
mov
or
jbe
pop
mov
sub
push
and
scas
nop
mov
adc
dec
sbb
push
cmp
hlt
cmovp
aas
in
enterw
adc
sbb
and
dec
lret
pop
dec
jns
ss
lods
or
dec
insl
pop
cmp
jle
mov
sub
cld
xor
ds
push
xor
test
repz
mov
js
cld
adcl
sub
lcall
outsb
cmpsl
test
leave
cmp
or
fisubl
pushf
fstpl
xchg
xchg
dec
dec
dec
and
xor
xlat
loop
or
sarb
lea
aam
and
xor
mov
pop
adc
stc
cmp
clc
mov
or
arpl
sub
in
or
cmp
js
lock
jo
clc
loop
ljmp
out
dec
mov
mov
jae
daa
pop
mov
push
push
jge
mov
les
jns
xor
sub
scas
jae
xor
push
fisttpl
lret
xor
fistpll
push
mov
daa
dec
fwait
inc
add
inc
jae
enter
push
arpl
data16
dec
mov
pop
or
out
popa
push
mov
adc
pusha
sbb
lcall
jp
mov
arpl
neg
mov
jmp
into
cs
cmp
xchg
inc
cmp
cmp
push
mov
in
adc
into
adc
adc
dec
test
add
je
cmpsb
mov
movsb
mov
daa
inc
pop
or
dec
imul
imulb
iret
enter
lahf
pop
scas
arpl
jl
icebp
mov
sbb
jmp
sub
cvtps2pi
or
fwait
mov
pop
lcall
out
jnp
out
inc
mov
fxch
pop
rclb
outsl
pop
add
aam
add
shr
fidivrs
jge
xor
xchg
xchg
divb
test
fsubl
scas
adc
jb
jno
andb
xorl
test
sbb
addr16
adc
pop
and
imul
pop
jnp
insb
mov
mov
cmp
in
mul
pop
xchg
mov
mov
xchg
dec
adc
inc
pop
mov
ret
xor
lods
pop
pop
std
hlt
mov
jno
nop
bound
sarl
in
mov
ljmp
test
jne
rep
bound
call
jbe
pop
rorb
out
cmp
mov
add
or
xchg
fildl
adc
mov
jp
nop
and
pop
jne
test
mov
mov
gs
and
loop
adc
test
and
and
arpl
dec
sub
or
popa
adc
lret
rcrb
xorl
jo
mov
add
addr16
repz
dec
xor
test
cmp
xor
ds
push
test
push
cmpsl
lock
push
cmp
xor
sti
dec
popf
lret
push
sub
and
sub
nop
inc
test
adc
outsb
sbb
ja
into
mov
cmpsb
sub
fwait
call
stos
mov
jae
mulb
jnp
repnz
js
ds
mov
cmpsb
fwait
lods
insl
push
imulb
js
adcb
dec
mov
cmpsl
jae
jp
push
out
and
ja
inc
cmp
inc
les
je
and
das
jbe
adc
bound
mov
and
roll
jb
xor
mov
jb
loopne
jge
jnp
xchg
mov
pmaxsw
mov
out
ficoms
repz
movsl
dec
sbb
lds
decb
ficompl
stos
push
jbe
or
pop
mov
aas
mov
cltd
rcl
inc
dec
sub
insb
lret
mov
and
pushf
stos
outsb
sub
ret
xchg
sub
fistl
or
leave
dec
xchg
icebp
in
mov
int
sub
data16
jbe
inc
popf
lods
inc
sub
push
adc
mov
sub
or
inc
jg
pop
pop
inc
sub
mov
data16
inc
and
push
jo
dec
mov
test
mov
data16
outsl
add
cmovg
or
jle
shrl
ds
out
sub
xor
in
jne
push
cmp
mov
popf
iret
movb
fwait
aaa
popa
sub
lods
mov
push
pop
mov
ss
daa
adc
jg
adc
mov
pop
ret
out
gs
fistps
enter
mov
jp
mov
jno
fcmovnu
inc
jbe
sbbb
adc
std
nop
sub
dec
jb
orb
ljmp
cs
adc
out
push
andb
xor
mov
cmp
jbe
push
mov
xchg
cmp
push
call
mov
daa
mov
sub
push
and
dec
dec
lret
imul
lcall
jae
cmp
adc
popa
cmc
ljmp
pushf
dec
fisubs
pusha
dec
pop
repnz
jmp
lock
sub
push
jp
or
dec
mov
lods
sbb
lcall
shlb
fs
jne
hlt
cmp
shrb
or
push
mov
pop
mov
sbb
inc
lock
adc
push
jmp
jns
xchg
jl
ds
cltd
dec
pop
int
cmp
lahf
inc
and
daa
ret
add
js
add
lahf
cmp
out
out
imul
pop
out
add
jge
test
sbb
lcall
sub
mov
pop
push
outsl
mov
mov
xor
loopne
icebp
and
lcall
lods
mov
pop
mov
xchg
mov
sub
lcall
shrb
cs
scas
pop
decl
aad
movsbl
jl
dec
aad
aas
jecxz
mov
lret
jo
shrb
jno
test
sahf
sub
shlb
mov
out
xchg
push
ret
xor
push
add
adc
fisttpl
dec
scas
std
inc
clc
dec
loop
mov
push
inc
pop
cmp
mov
js
dec
hlt
je
jnp
xchg
movsb
mov
das
push
xchg
lret
lret
adc
shrl
dec
ljmp
adc
push
dec
out
mov
into
mov
xor
aad
test
mov
in
scas
aam
mov
insb
push
cmp
mov
pop
adc
adcb
push
cwtl
cmp
in
mov
cmp
mov
pop
daa
pusha
rorb
adc
int
inc
cld
int3
sbb
shrl
bound
stos
sahf
jp
push
jne
std
pushf
and
int
aaa
sub
pop
sbb
add
xor
xor
and
clc
cltd
stos
cli
aaa
in
and
dec
adc
jecxz
and
add
stos
jbe
push
in
mov
inc
pop
and
push
jp
ja
and
loopne
ja
out
andl
jno
jmp
xchg
ljmp
mov
cmc
jo
loopne
test
rcrl
push
ret
mov
test
cli
push
daa
jb
push
fs
and
sub
dec
and
std
and
and
and
xchg
dec
pop
dec
and
imulb
jp
fisubrl
pop
inc
int3
ss
inc
scas
xchg
cmp
xchg
adc
movsb
mov
scas
jnp
mov
loop
loopne
or
mov
lods
sbb
scas
cmp
movl
incl
movsb
scas
rclb
dec
call
mov
cli
lea
mov
shrb
out
pop
lret
xchg
xchg
cli
lock
lea
aad
mov
sub
add
mov
cld
sub
pop
inc
mov
stos
cli
inc
lret
xor
lahf
js
outsl
dec
imul
and
dec
nop
sbbl
xorb
fcmovnbe
cmp
jbe
fwait
or
mov
fistpl
jg
into
cmp
mov
sub
adc
jnp
sbbl
xor
int
push
daa
aad
cmp
lds
lock
pop
mov
sub
mov
stos
insb
cmp
shrl
jns
rcr
add
cmpsb
add
in
int3
adc
pop
dec
dec
add
mov
sahf
out
cwtl
sahf
cmp
xchg
xchg
bound
out
ss
jmp
sahf
bound
xorl
sti
enter
cwtl
inc
jecxz
xchg
lahf
lahf
aas
jne
push
imul
fistpl
mov
cs
xor
and
mov
mov
pop
sbb
out
int
jl
cli
mov
mov
imul
sti
cmpsb
mov
popa
cmp
mov
lock
imul
loopne
mov
daa
sub
cmp
orl
xlat
sbb
jp
xorl
sub
int3
aas
les
cmp
push
js
push
cmp
dec
lcall
ret
and
sub
mov
cld
popa
stos
jp
ss
inc
mov
and
popa
inc
gs
add
inc
pop
test
out
mov
mov
out
mov
pop
cmp
sub
nop
sub
cmp
daa
es
sub
adc
test
mov
rorb
xchg
xor
push
mov
cmp
out
mov
ja
mov
mov
ss
push
ja
bound
xchg
stos
sbb
push
popf
lret
popa
fsubr
jb
pop
ds
jns
dec
jae
jno
stc
dec
and
dec
nop
mov
movsb
xchg
cmpsb
mov
call
testb
mov
push
sub
test
adc
mov
popf
and
pop
stc
xchg
stos
sub
mov
pop
inc
sub
outsl
das
inc
ret
mov
stos
mov
and
add
in
das
ss
mov
imul
ds
test
rclb
and
adc
lea
jne
adc
popf
in
in
cmpsb
fs
cmp
cmp
pop
inc
xorb
mov
pop
fwait
push
pop
test
stos
push
mov
jmp
sub
mov
sbb
pusha
out
lds
stc
push
movsb
xchg
call
cmc
push
fsubl
fistl
inc
nop
sub
mov
and
adc
lock
rsm
push
jbe
jo
lods
jae
cltd
pop
and
mov
sbb
sbb
je
fwait
out
xor
fdivrl
and
lcall
test
jl
push
js
adc
test
adc
xchg
insl
sub
mov
push
in
pop
les
outsb
inc
pushf
jmp
test
jge
int3
in
xor
and
in
jmp
jge
dec
pushf
sub
into
sub
push
dec
jle
inc
push
and
jmp
xchg
mov
nop
jecxz
cld
pop
out
mov
sbb
pop
inc
add
cmp
jmp
mov
sub
sub
mov
test
fldt
test
rcrb
clc
cmpsl
jno
mov
xor
int
xlat
sbb
mov
jb
mov
loope
add
mov
jecxz
adc
push
jg
pop
dec
sub
in
sbb
or
push
lcall
loopne
test
sahf
pop
lock
das
shlb
pop
int
xor
pusha
in
mov
mov
lcall
fiadds
dec
sbb
popf
scas
nop
scas
daa
dec
inc
dec
negb
cmp
push
sub
lcall
mov
outsb
pop
inc
daa
lcall
and
out
sbb
sahf
orb
scas
into
jge
sbb
lods
das
xchg
adc
pop
ss
xchg
in
inc
xor
scas
inc
inc
popa
hlt
lcall
dec
ja
ficoml
clc
stos
pop
daa
movsl
mov
sub
daa
dec
cmpsl
outsb
lods
mov
dec
stos
push
stos
scas
sub
sub
outsb
mov
mov
cld
out
es
mov
loope
add
sub
lret
cmp
xor
cmp
inc
mov
repz
dec
jp
mov
push
and
xchg
shlb
lret
popa
mov
loope
test
das
add
cmpsb
leave
sub
mov
xchg
leave
or
cld
pop
jle
ror
adc
and
jge
dec
jle
aad
push
sub
call
int
or
sub
sahf
lds
xor
lcall
cmc
fsts
adc
mov
pop
pop
push
jmp
mov
aaa
mov
out
out
das
das
sub
mov
xchg
fcomi
dec
jno
cmpsl
stos
jmp
mov
push
ds
mov
cmp
nop
clc
pop
sub
into
aam
fisubrs
sbb
xchg
ficomps
mov
movsl
aam
mov
testb
in
pop
mov
sahf
inc
adc
xor
jecxz
and
sti
adc
pop
sub
cld
jnp
aad
mov
outsb
xchg
std
fsubr
cld
and
insb
aad
hlt
push
pop
das
mov
inc
push
xor
jae
enter
dec
inc
inc
mov
mov
cli
jns
scas
hlt
imul
mov
inc
jecxz
mov
cmp
data16
lret
andl
and
fisttps
movsl
pop
inc
cld
inc
ss
dec
or
jbe
adc
jge
sbb
jge
mov
dec
ds
nopl
imul
test
ret
jno
out
and
lcall
mov
jae
fwait
jmp
jle
xor
movsb
push
out
push
and
add
pushf
inc
inc
out
sbb
pop
ds
push
test
mov
sub
lahf
mov
xchg
mov
out
lcall
adc
dec
test
je
nop
cltd
push
jl
scas
xchg
jb
popa
out
pushf
pop
imul
dec
push
mov
stos
inc
dec
mov
outsl
mov
cmp
lods
pop
inc
dec
adc
int3
fidivs
adc
and
shll
movsl
hlt
adc
dec
test
mov
push
xlat
lret
das
dec
dec
aaa
test
gs
inc
and
adc
mov
or
fisubrl
lret
out
fwait
imul
fimuls
adc
repz
sbb
pop
push
push
and
xor
jl
test
subb
lret
xor
clc
mov
sbb
pop
and
xchg
cmp
push
aam
sbb
ss
int3
dec
out
imul
inc
sub
mov
mov
in
pushf
pop
jb
jl
scas
pop
mov
movb
mov
jne
ss
push
add
push
dec
pop
lcall
scas
scas
mov
inc
pop
add
ficompl
insl
mov
leave
popf
cmp
das
sbb
mov
ret
inc
fsubs
pusha
sti
cmp
xorb
popa
std
mov
cmp
jo
int3
or
test
cmc
jnp
nop
int
inc
push
clc
movsb
push
prefetch
std
adc
cmp
aaa
cmpsl
mov
mov
lock
insb
lcall
or
das
adc
jb
out
popa
and
and
xor
mov
mov
xlat
decb
test
and
jecxz
xchg
xchg
loope
and
add
push
gs
add
cmp
sbbl
sub
and
out
mov
mov
xor
jae
ja
or
fstl
inc
rcll
jne
xchg
popa
or
cmp
jne
fwait
push
into
push
scas
and
lret
jmp
sbb
mov
adc
inc
mov
lret
cmp
cs
scas
lret
out
lcall
std
fcomps
mov
clc
lods
lcall
int3
mov
popa
lcall
stos
icebp
mov
push
clc
ror
cmpb
scas
in
mov
lds
in
xlat
pop
hlt
stos
push
mov
inc
nop
fsubrl
jg
scas
inc
push
xchg
xchg
and
ret
jge
pop
mov
push
and
sub
xlat
shrb
pop
dec
imul
xor
int
fnstcw
push
xor
jnp
jno
cmp
sbb
scas
sbb
in
scas
jns
mul
lcall
push
jp
out
js
daa
lret
or
jno
add
inc
xchg
out
scas
ljmp
loop
mov
lret
std
js
in
pop
push
dec
arpl
xor
call
and
push
push
aad
testb
or
rolb
adc
in
jo
and
sarl
scas
iret
pop
aas
nop
sbb
ja
scas
inc
add
scas
sub
dec
dec
lret
int3
testl
cmp
sub
jbe
daa
cmpsb
inc
lcall
sbb
jp
jbe
jge
scas
add
negl
test
sbb
inc
in
xchg
popf
imul
arpl
sub
scas
push
adc
push
into
sub
lret
dec
outsl
mov
jnp
mov
out
push
dec
js
mov
dec
inc
test
inc
fwait
xor
test
cmp
push
mov
jmp
and
pop
adc
jl
xor
sbb
jg
jecxz
test
loope
fbstp
lods
mov
xor
and
xor
pop
icebp
xchg
mov
scas
sarl
cmpsl
out
dec
and
xchg
inc
jne
inc
fisubrs
in
pop
ja
push
mov
push
shll
test
adc
das
lock
add
call
inc
das
les
push
push
and
jo
pop
inc
cwtl
sbbl
lods
pop
out
sbb
cmp
je
sbbb
push
je
lds
cmp
pop
jle
inc
dec
jl
jecxz
bound
lret
imul
jae
outsl
cmp
imul
push
jbe
stos
pop
movsb
cmp
mov
and
ds
enter
pop
cmp
lcall
mov
cmp
pusha
pushf
jg
bound
sbb
adc
mov
mov
icebp
xchg
je
mov
ljmp
test
mov
mov
pop
dec
loopne
pop
sbb
mov
xor
or
int
push
mov
xchg
ss
insl
test
mov
or
mov
cmp
scas
sub
sbb
jno
cmp
outsl
stos
dec
in
dec
push
stos
mov
fwait
mov
push
test
jle
test
decb
outsl
aam
stos
sahf
ret
mov
jbe
pop
add
leavew
xchg
scas
ret
push
mov
pop
clc
dec
fwait
shlb
inc
fldcw
pushf
dec
fwait
outsl
rcl
push
pop
jge
cmp
jno
scas
jae
sub
inc
pusha
jb
ja,pt
push
push
cmp
ljmp
cmp
sub
sbb
icebp
popa
inc
nop
mov
movsb
dec
sbbb
fsubp
das
test
cmp
jb
push
mov
repz
mov
fwait
adc
sub
inc
push
mov
test
cmc
push
xchg
mov
mov
sbb
movsb
inc
test
insl
rorb
aam
iret
push
push
cs
xchg
mov
sub
push
fwait
dec
cmp
mov
lods
lods
movsb
ss
xorb
cmp
out
xor
paddusb
movsb
push
push
sbbb
lcall
imul
add
out
adc
lea
add
cli
pushf
aas
or
jle
sahf
sub
call
in
dec
fadd
push
mov
repnz
jbe
lret
add
std
push
in
popf
imull
sub
mov
idivl
mov
ficompl
sbb
popf
mov
jbe
pop
dec
jb
inc
pop
outsb
push
inc
dec
xor
test
ss
fwait
sub
pop
pop
daa
mov
sahf
mov
sbb
mov
ret
shl
imul
sbb
xchg
sbb
mov
mov
dec
imul
sub
xchg
ds
loop
aaa
jbe
add
pop
mov
inc
sete
aas
test
mov
je
push
insb
lds
test
jp
stos
stos
adc
clc
scas
dec
sub
pop
popa
jl
pushf
std
js
push
aaa
jmp
jmp
pop
inc
mov
dec
xorb
popf
or
jl
jge
aad
das
xor
sahf
and
sbb
jp
ds
xor
xor
or
dec
sub
das
dec
add
push
and
incl
inc
int
jbe
scas
dec
ret
sub
xor
bound
das
and
mov
cmp
shr
rcll
lcall
sub
test
out
jge
xlat
sub
jo
mov
inc
faddl
cs
dec
movsb
scas
ret
into
push
int3
fisubl
mov
mov
je
test
les
nop
and
das
dec
andl
jno
xor
jg
sub
and
insb
and
fsubrs
add
xchg
pop
add
lock
jbe
add
aas
daa
xchg
mov
push
fwait
je
sub
inc
sbb
jo
mov
pushf
push
and
mov
xor
aaa
sub
xchg
test
fsubs
mov
and
lahf
fists
ret
sbb
fisttps
scas
pop
adc
sub
jb
xor
sub
xor
fnstenv
cmp
setne
mov
shll
ret
add
cmp
js
cmp
in
aad
je
flds
mov
scas
pop
inc
nop
or
scas
cmpb
cmpsb
cld
gs
bound
inc
lock
push
mov
loop
in
add
dec
fdivrl
cwtl
dec
inc
in
push
je
lea
lcall
adc
loop
mov
imul
std
ret
add
lcall
data16
adc
sub
jnp
lret
jne
mov
or
popa
cmp
cwtl
insl
xor
jbe
mov
jne
pop
fimull
inc
cwtl
fwait
das
mov
mov
push
or
daa
mov
fwait
adc
add
pop
test
popa
popf
cmp
cmp
std
push
aaa
clc
push
dec
sub
js
push
jge
mov
outsb
test
inc
mov
xchg
and
ds
cmp
dec
jle
lods
and
loop
roll
jg
dec
push
outsb
sbbl
sbb
push
je
xchg
adc
dec
adc
and
lds
aam
and
int
sbb
dec
adc
je
push
jno
push
jge
std
loope
pushf
xor
scas
test
in
pop
test
and
in
movsb
cld
pop
inc
xor
mov
test
nop
sub
cmp
pop
mov
push
mov
mov
pop
mov
lret
sbb
lods
or
mov
jp
adc
insb
mov
mov
xor
mov
mov
inc
mov
addb
mov
les
stos
popa
cmpsl
clc
sarl
test
mov
dec
aaa
insl
mov
adc
rdpmc
fnstenv
adc
add
dec
or
icebp
pop
and
push
ret
fcmovu
aad
fwait
das
movsb
jecxz
fwait
jnp
cmc
ljmp
pop
push
cli
adc
test
cld
icebp
mov
push
push
jae
ja
ljmp
sarb
adc
subb
jae
rclb
xchg
jge
in
repnz
and
repz
fcompp
sub
mov
lock
lret
nop
aad
mov
mov
xor
sbb
lcall
jl
rdtsc
mov
into
jno
dec
push
imul
pop
lods
mov
cmp
pop
sti
das
subb
or
mov
inc
xchg
insl
sahf
pop
cmpl
int3
ret
lods
test
fiadds
cltd
mov
fisttpl
sar
nop
mov
xor
sbb
fistpl
xchg
or
stos
mov
movsb
js
insb
aam
outsb
inc
imul
ficoms
adc
into
test
push
imul
das
cmp
divl
push
pop
stos
add
js
bswap
ds
arpl
lahf
sbb
xchg
insb
add
lea
or
cmp
xchg
imul
rclb
cmc
cltd
cmp
lcall
outsb
test
mov
sub
xchg
outsb
into
cmp
les
and
sub
int
inc
jp
std
mov
fisubl
mov
dec
stos
add
and
mov
scas
enter
mov
or
test
pop
lret
and
out
jne
ljmp
fwait
or
lea
rcll
ret
es
jns
and
stos
cmp
and
jns
inc
insl
hlt
sub
sub
daa
jo
inc
sub
push
loop
mov
adc
and
xchg
pop
test
aaa
stos
inc
cmpl
ret
sti
pop
sbb
jnp
mov
call
ds
pop
clc
call
or
jbe
mov
fistps
jne
push
pop
xchg
stos
adc
xchg
cld
popf
dec
xchg
cmp
insb
add
xor
pop
cmp
hlt
xor
sbb
push
dec
js
aad
cmpsl
jne
out
sub
shlb
rorl
dec
mov
loop
enter
cwtl
lahf
xor
jo
std
mov
push
rcr
pushf
and
pop
ffree
push
in
stos
scas
pushf
pop
push
jle
push
in
xlat
xor
add
hlt
std
inc
push
outsl
inc
sbb
into
mov
push
push
mov
ret
cmpsl
or
sbbl
push
test
xchg
inc
cmp
outsl
imulb
pop
xor
add
andb
jp
sarb
gs
jg
push
push
xchg
outsl
ja
rclb
xorl
nop
dec
lret
ss
call
clc
shr
scas
jmp
test
movsb
jmp
leave
pop
arpl
int3
or
je
jecxz
fsubrl
pop
mov
mov
pop
push
or
sbb
fadd
in
sub
popa
aaa
sub
fistl
lock
or
mov
scas
pop
xchg
dec
and
dec
push
adc
test
inc
addb
ss
mov
aad
ds
lods
and
xor
std
decl
jbe
xor
sub
cld
jne
cmp
fildll
inc
sbb
je
outsl
xchg
outsl
xchg
or
mov
dec
lds
mov
scas
das
js
out
xchg
test
xor
xor
sbb
ljmp
stos
push
mov
or
frstor
xor
pusha
into
lds
loopne
icebp
sbb
pop
cs
push
push
mov
mov
sub
inc
jne
ljmp
clc
loope
inc
cld
fstpl
mov
insb
push
push
jle
bound
push
ss
je
arpl
add
rcll
sarl
cwtl
mov
imul
pop
stc
add
lcall
stc
sbb
fstl
jp
test
test
pop
test
xorl
sarb
scas
or
aas
call
insl
inc
andb
dec
adc
and
push
or
adc
fstl
inc
mov
xchg
xor
sub
and
add
push
xchg
aaa
dec
imul
adc
test
test
ljmp
out
test
inc
adc
lret
dec
mov
out
in
test
int
push
jo
cmp
dec
stos
add
adc
test
push
outsb
mov
jb
or
adc
cwtl
jge
pop
lret
push
rorb
push
scas
in
test
test
sbb
sub
addr16
dec
inc
mov
fwait
dec
xchg
arpl
push
mov
dec
enter
and
sbbl
ds
mov
roll
test
sub
mov
adc
arpl
mov
xor
xor
in
cwtl
and
shlb
movsl
push
jo
in
mov
adc
or
insb
push
or
sbb
jo
aas
ss
pushf
add
popf
sbb
je
sbb
mov
xlat
xor
mov
stos
lret
addr16
test
xor
notb
xor
adc
lods
push
test
bound
cli
scas
and
pusha
cld
ljmp
test
icebp
add
sbb
jmp
int
jg
xchg
stos
int3
mov
dec
aaa
mov
mov
lret
dec
push
aaa
in
gs
repnz
incb
pusha
mov
adc
gs
inc
and
in
dec
aad
xchg
out
cld
js
das
daa
dec
fwait
pop
mov
fidivrs
mov
cmpl
lret
shl
int
aad
pop
negl
push
ja
test
mov
push
cmp
orw
mov
je
fidivrs
stc
negb
sub
cmp
jae
xchg
pop
sub
jp
sub
out
bound
dec
mov
sub
out
ljmp
imull
mov
lods
mov
push
pushf
testb
push
call
mov
push
aaa
mov
xor
mov
jmp
jecxz
inc
mov
jl
outsb
popa
or
mov
out
push
test
shr
cmp
dec
lcall
enter
mov
shrb
push
or
push
adc
jg
mov
inc
xchg
stos
inc
dec
call
mov
jne
lods
cmp
pop
push
test
shrb
add
sahf
and
mov
out
mov
insb
xor
xchg
inc
mov
push
sbb
push
adc
stos
jp
fists
out
orb
js
cmp
push
push
jo
fiadds
jb
fisttps
outsl
mov
push
je
jl
aam
jle
sub
mov
jmp
cld
mov
adc
sub
popf
cmp
push
pop
sbbl
testb
fwait
add
xor
mov
mulb
jl
push
mov
dec
das
in
loop
dec
and
push
push
dec
btc
mov
mov
push
cmp
ret
push
pop
xchg
mov
mov
into
scas
pop
das
push
andb
or
push
cvttps2pi
xchg
loop
push
movsb
mov
push
pop
jno
int3
push
dec
cmp
jmp
mov
and
inc
push
test
lods
jo
jbe
das
lcall
das
inc
jbe
scas
add
in
ret
push
bound
dec
jb
mov
mov
jl
ret
jne
lret
add
out
pop
lock
jne
das
pop
adc
mov
or
mov
in
inc
testb
in
mov
jnp
mov
mov
lock
mov
inc
inc
scas
xor
lock
sub
iret
push
mov
nop
sub
mov
test
shlb
popa
fucomi
xor
jo
ja
lods
jnp
and
in
sbb
inc
aad
ja
lret
mov
imul
sbb
jge
add
mov
jnp
movsl
jge
imul
pop
sub
cmpsb
sahf
jl
out
dec
imul
jecxz
lods
adc
mov
mov
out
inc
mov
push
xlat
cmp
pop
cmp
pop
insl
add
mov
adc
out
or
jecxz
mov
je
in
movsb
lods
stos
dec
cmp
or
adc
jmp
test
inc
ljmp
test
jno
out
in
dec
xorb
ja
bound
subb
xchg
mov
jl
mov
cmpl
pop
mov
xor
dec
rolb
lock
and
adc
jb
or
dec
pusha
aad
adc
mov
addr16
mov
stos
insl
fsubrp
out
lds
xor
jo
sub
ret
cmp
lcall
mov
inc
mov
ret
sbbl
dec
sbb
dec
push
aas
mov
and
dec
mov
cmp
outsl
mov
divl
xchg
mov
and
xchg
mov
neg
pmaddwd
je
mov
inc
xchg
mov
xlat
cs
inc
inc
dec
ss
ss
scas
out
mov
pop
inc
cmp
ret
jge
mov
cmp
and
gs
mov
into
out
mov
cmp
dec
mov
jl
jle
in
outsb
cmp
push
push
out
out
sub
nop
jg
mov
subl
inc
mov
pop
test
sub
std
mov
daa
mov
adc
cmp
xor
jne
add
jb
push
in
push
nop
mov
ja
add
imul
and
pop
outsb
movsb
mov
jle
in
out
push
mov
nop
pop
cmp
pop
outsl
std
inc
ficomps
jns
pop
pop
xchg
fistpll
test
mov
push
std
inc
negl
cmc
fiaddl
lods
adc
push
dec
sub
stos
cmp
mov
loope
loopne
cmpsb
or
sub
dec
push
enter
popa
pop
pop
lds
andb
lret
sbb
pop
add
cmp
push
les
imulb
test
popa
in
inc
mov
imull
sbb
mov
and
imul
leave
mov
stc
clc
sbb
cmpsb
mov
leave
divb
push
test
into
fimuls
adcb
mov
ret
or
sbb
ds
push
cs
outsb
das
popa
out
dec
in
sub
movsb
pop
cmpsl
pop
and
jmp
cmpsb
xor
cs
mov
push
cmp
sub
inc
mov
pop
push
mov
ja
push
and
ss
cmpsl
and
movsl
add
fsubrl
xor
fisubs
data16
and
jo
xor
pop
stos
dec
push
das
mov
rorb
lea
mov
inc
lcall
push
xchg
dec
adc
stos
mov
sub
or
adc
jb
bound
mov
or
cmpsb
test
and
mov
cltd
inc
cmp
test
js
cmp
in
pop
sub
mov
in
jge
mov
icebp
jecxz
enter
sub
test
mov
repnz
loope
dec
in
mov
stos
add
xchg
dec
mov
mov
push
ret
or
hlt
mov
les
mov
cmpsl
outsw
dec
cmp
in
push
dec
testl
mov
shll
out
inc
ss
fnstsw
insl
mov
lcall
dec
push
shl
in
call
jl
jge
push
shll
dec
pop
push
and
push
cmc
and
and
mov
test
sbbb
das
stos
fbld
mov
cwtl
addb
js
ret
test
mov
cltd
es
mov
dec
call
lcall
mov
rcr
mov
ja
pop
mov
push
cmp
pop
lods
std
ljmp
mov
stos
test
movsb
add
lcall
inc
incl
test
xor
push
in
stos
jmp
mov
popf
pusha
in
repz
push
icebp
push
jl
lods
xor
or
jno
cld
aad
mov
cli
cmp
add
mov
loopne
sub
les
addr16
jno
pop
pop
xchg
cld
dec
into
into
add
inc
add
js
fisttpl
and
inc
das
sub
addr16
lahf
sbb
xlat
loope
sub
mov
scas
jbe
dec
xor
dec
mov
add
sahf
inc
xchg
adc
fst
dec
insb
loop
pop
cmpsb
je,pt
jbe
icebp
lods
dec
xor
ss
pop
pushf
mov
push
cld
dec
outsl
mov
dec
jge
mov
pusha
out
sub
cmp
sub
adc
sub
dec
pushf
sub
insb
cmp
xor
jle
loopne
jg
rorl
clc
fcmovu
pop
outsb
sbb
cmp
mov
mov
pop
lcall
adc
push
test
sarb
sbb
sbb
lcall
xchg
int
jnp
adc
jl
imul
icebp
in
enter
mov
push
outsb
inc
stos
lcall
scas
rorl
repnz
stos
mov
subb
xlat
faddl
mov
iret
stos
leave
outsl
leave
push
enter
scas
cmc
in
shrb
lret
addr16
addr16
test
sub
imul
pop
jae
mov
call
pusha
cld
cmp
adc
mov
or
adc
cwtl
xor
int
xchg
inc
ret
fwait
mov
push
add
jl
addr16
push
fisubrl
pop
mov
pop
mov
int
inc
lods
fwait
mov
push
pop
adc
pushf
pop
jne
test
mov
out
cmp
subl
or
ljmp
jnp
inc
loopne
sub
shlb
das
subb
lahf
xor
rorb
xor
xchg
pop
out
pop
pusha
dec
jae
pop
pop
mov
nop
adc
sub
insl
add
inc
jns
shrb
mov
fwait
cmpsl
mov
imul
dec
sub
mov
push
shlb
jno
cmp
sub
outsb
cmp
gs
jg
rolb
or
cmpl
out
mov
popa
movsl
push
subl
push
inc
sbb
cmpl
mov
icebp
pushf
jmp
and
inc
out
sub
push
or
icebp
push
je
pushf
sub
sbbl
xchg
jb
mov
cmpsl
mov
xor
jo
out
imull
jl
in
call
daa
aas
cmp
adc
cs
enter
sub
sub
in
cld
adc
es
clc
fisubrs
je
enter
aaa
cmp
out
call
jge
fwait
adc
out
lea
mov
jbe
in
dec
cmp
sub
shl
mov
mov
push
rol
sub
orl
icebp
imul
or
xchg
je
push
lret
mov
xlat
dec
or
icebp
cmp
cs
pop
insb
outsb
ret
or
cs
movhps
in
das
or
cmp
xor
xchg
scas
sbb
orb
jle
push
and
cwtl
push
sbb
cli
repz
sub
and
leave
xor
ficoms
add
ret
sbb
lds
sbb
sbb
push
add
push
jbe
pusha
int3
cli
adc
shl
orb
cmp
js
cmp
ret
jnp
xchg
push
test
lcall
fsubrl
inc
jle
push
pop
bound
out
or
mov
jl
movsb
jae
test
je
fstpt
lods
dec
cmp
pop
sbb
xor
adc
enter
mov
and
jmp
mov
push
in
sub
test
jns
inc
sub
sub
or
mov
daa
sub
and
loopne
mov
shl
mov
ficoms
jle
jmp
jmp
enter
pop
loop
rclb
cmpsl
fisubrl
push
mov
aas
cmp
sub
repz
cmp
push
fwait
out
out
mov
loop
cmp
sub
and
rcll
divl
mov
loope
insl
inc
mov
sub
inc
xor
pop
mov
mov
xor
push
aam
popf
mov
daa
mov
inc
xor
xchg
aas
insb
repnz
mov
cmp
mov
inc
mov
or
addr16
daa
inc
fwait
test
and
sub
loopne
jmp
xor
in
xlat
scas
push
mov
leave
mov
fdivrs
dec
data16
stc
cld
pop
mov
push
shll
or
pusha
ret
pop
adc
xchg
data16
jecxz
popf
sahf
push
pop
pusha
cmp
push
xor
jns
dec
ja
mov
cmpsl
call
ja
dec
rcrb
aas
mov
sub
jns
add
xchg
pop
push
and
cmp
push
xchg
push
mov
fdivrl
cmp
scas
lods
fisubl
mov
jmp
aaa
mov
fldcw
sub
adc
xor
mov
cmpsb
or
pop
mov
mov
gs
pushw
or
daa
jo
jb
jne
inc
pop
inc
xor
jge
lods
and
jno
frstor
xchg
cmpl
fistps
mov
fwait
sub
daa
lcall
in
adc
push
jp
mov
mov
outsb
xor
pop
pop
mov
inc
lods
add
imul
bnd
dec
cmpsl
in
sub
sti
cs
test
int
cmp
sbb
add
dec
and
push
xchg
movsl
out
in
sub
sbb
and
in
cmp
ss
gs
mov
arpl
push
insb
sub
jbe
sub
mov
jp
push
inc
pop
ljmp
xor
or
clc
xlat
cli
lods
test
call
test
cmp
lret
scas
fsubl
imul
repnz
outsb
insb
lret
adc
xchg
sub
scas
stos
xchg
and
xchg
jbe
aas
push
sub
dec
iret
dec
xor
pop
mov
lcall
cli
add
fistpll
mov
inc
push
push
sahf
inc
rorb
je
adc
mov
jmp
movsl
test
adc
jnp
enter
das
dec
mov
aaa
decb
or
cmp
pop
inc
jmp
rclb
mov
jle
out
sub
sub
ljmp
std
jae
iret
jp
test
cwtl
cmp
pop
cmp
push
push
jge
mov
or
inc
scas
sbb
int
bound
xchg
jbe
jae
aam
sbb
add
push
push
mov
mov
notb
data16
mov
jge
iret
bound
scas
mov
arpl
out
int3
popa
lds
mov
xor
mov
out
push
mov
sbb
mov
xchg
dec
xor
lret
xchg
pop
cmp
adc
enter
rclb
xor
xchg
out
popa
cmc
test
cmpb
bound
aam
mov
jbe
mov
add
dec
mov
stos
nop
sub
or
lahf
ja
and
push
roll
imul
jl
xor
sub
outsl
in
mov
sub
ret
xchg
mov
insb
jns
cmpsl
push
xchg
xor
pop
mov
jp
cmp
and
inc
sub
insb
xchg
outsb
jbe
js
mov
mov
jp
pop
xor
mov
jne
lret
movsl
outsb
mov
or
jae
and
sbb
das
mov
mov
push
jbe
scas
pop
and
push
jnp
test
mov
xor
ljmp
scas
ss
sub
jmp
jp
push
adc
test
frstor
sub
cmpsb
lcall
push
jnp
dec
or
xchg
mov
push
incb
and
js
mov
lahf
dec
lcall
jge,pt
pop
pop
dec
lds
shlb
jge
and
dec
dec
pop
mov
mov
movsl
dec
repnz
xchg
nop
jne
push
cwtl
push
aaa
das
xor
movd
adc
popf
daa
outsb
sarb
daa
punpckhdq
popf
mull
aam
movsl
outsl
std
mov
and
je
push
sub
inc
insb
inc
rcll
pcmpeqd
daa
movsb
scas
adc
push
pushf
xor
data16
pop
pop
xchg
cmp
push
into
push
inc
and
mov
js
insb
mov
les
sub
je
jbe
insl
dec
out
fidivs
mov
rdtsc
pop
test
ret
dec
nop
add
add
mov
into
jno
popa
mov
mov
xor
aaa
loopne
in
inc
stos
movsb
dec
aad
jae
push
ljmp
add
aas
icebp
pop
dec
ss
test
popa
lcall
push
imul
ret
mov
insb
test
scas
pop
cwtl
pusha
scas
or
cmp
ds
adc
mov
jecxz
xor
sbb
mov
dec
cs
push
iret
xchg
les
mov
inc
das
loope
jle
sbb
inc
cmp
arpl
mov
lcall
pushf
aam
sub
insb
mov
dec
cmp
test
imul
or
push
mov
test
add
imul
or
mov
sbb
mov
xor
sub
sub
jno
inc
cmp
xchg
add
inc
xor
int3
in
imul
xor
adc
xchg
mov
test
lcall
jns
shl
ret
jbe
mov
cmp
xchg
sbb
aad
push
dec
cmpsl
push
cld
inc
scas
aam
mov
sbb
mov
xor
mov
jo
sub
inc
sahf
lds
and
mov
scas
repnz
test
jl
aam
sub
loope
shlb
test
sub
and
adc
mov
inc
push
rorb
movsb
jbe
ljmp
out
pop
cmpsl
in
enter
add
mov
mov
loopne
outsb
repz
mov
xor
lret
pushf
data16
xchg
fnstsw
adc
mov
fwait
adc
pop
ss
dec
mov
hlt
push
fiaddl
sub
daa
jg
ss
mov
les
add
ficoml
or
cmp
inc
dec
loopne
and
out
sub
test
add
mov
adc
arpl
lcall
lods
pusha
mov
test
les
in
mov
call
pop
ljmp
loope
and
not
repz
cmp
add
out
xlat
push
inc
cmp
jg
adc
jae
sub
mov
aad
jnp
jecxz
popf
pop
jbe
test
xor
hlt
dec
mov
xchg
xor
mov
ss
push
sbbl
fildl
roll
mov
jle
and
xorb
lods
fisubrl
adc
enter
sub
es
inc
pop
jb
pop
arpl
sub
xor
xlat
scas
push
pop
jo
and
dec
xor
call
push
push
clc
mov
cmp
das
insb
cmp
xchg
out
sub
xor
sbb
pop
jnp
fs
inc
sub
cmp
pop
mov
in
mov
je
imul
adc
cmp
lret
sub
sub
enter
cs
push
inc
ret
popa
sub
pop
out
mov
ret
push
and
sub
or
lcall
daa
push
insb
pop
lret
insl
sahf
sub
lcall
mov
lahf
jne
loope
push
push
add
movsl
jb
adc
mov
or
cmp
xchg
insl
jp
fwait
sub
mov
push
rcrl
scas
inc
inc
lds
xchg
mov
or
dec
subb
pop
and
pushf
push
cmpsl
jne
xor
cmpsb
cld
and
sub
mov
gs
sbb
pop
scas
jp
pop
inc
insl
sbbb
cli
jbe
fdivs
jp
out
cs
xchg
mov
daa
pop
xchg
nop
pop
and
sub
lcall
inc
in
xor
pop
jge
divl
push
outsb
dec
mov
add
subb
sahf
mov
dec
push
sub
jbe
push
lahf
addb
lods
mov
push
jge
repnz
nop
jmp
outsb
cmp
outsl
lods
aad
lods
outsl
scas
ds
bsr
xlat
push
jnp
or
mov
dec
psllw
cmp
inc
loopne,pn
xor
sub
shll
movsl
mov
xchg
push
dec
adc
jl
sub
lret
or
je
jl
fidivs
bound
add
dec
or
push
ja
mov
scas
or
mov
push
ds
fwait
jae
inc
in
jo
loope
mov
mov
lret
push
xor
psubusb
jl
cmp
push
adc
ss
test
adc
scas
xchg
add
sub
loope
ret
push
mov
repnz
mov
lcall
sub
in
inc
pop
push
add
mov
ja
push
cmp
adc
dec
add
lds
stc
push
lret
jge
adc
sbb
mov
sub
xor
xor
add
mov
and
cmp
cmp
popf
cmp
fidivl
add
dec
adc
dec
leave
mov
data16
mov
fdivrs
sub
sub
ja
xor
dec
push
lret
mov
loopne
out
ja
fildll
inc
out
cmp
cmp
inc
jl
sti
or
out
cmp
mov
lock
dec
daa
mov
sub
pop
fstl
add
pop
cmpl
in
jne
iret
mov
jge
cmp
les
mov
mov
das
call
inc
cli
jne
repz
mov
cmp
or
repz
cs
sahf
imul
faddl
cmp
adc
dec
and
sub
sub
cmp
sub
or
mov
jnp
jmp
out
and
pop
cld
test
jnp
ret
repz
in
mov
ljmp
popf
scas
loop
punpcklbw
imul
insl
jb
fidivs
mov
stc
lret
adc
ret
add
dec
add
je
popf
je
or
cmp
adc
mov
popf
adc
test
or
push
pop
lea
lods
mov
pop
xorb
sub
addr16
jnp
push
fwait
cmp
loop
leave
mov
enter
pop
pop
adc
lret
mov
sub
adc
fwait
adcl
ficoms
and
inc
mov
xchg
mov
jp
mov
xchg
cli
outsb
in
mov
repnz
frstor
ljmp
data16
fwait
sbb
daa
inc
cmpsb
lcall
mov
mov
jl
jge
xchg
scas
aam
clc
scas
out
mov
add
fcmovb
cmp
pop
pusha
imul
xchg
adc
jbe
imul
ret
jns
daa
inc
or
cmpsb
and
lcall
xchg
mov
dec
repz
test
or
adc
fs
out
and
inc
add
popa
or
xchg
popa
sbb
cld
test
xchg
cmc
jae
adc
inc
push
and
rorb
jo
pop
test
adc
jge
push
test
inc
loop
mov
daa
out
xor
dec
outsb
inc
cmp
push
rcll
fcomi
mov
cli
xor
xchg
das
js
push
jo
imul
ja
cwtl
es
cmp
packuswb
out
imul
push
in
pop
sbb
out
bound
es
ss
sbb
scas
jle
loopne
fwait
rorl
sub
push
ja
fistpll
cmp
sbb
sbb
fcomip
cltd
mov
sub
testl
daa
stos
stos
ret
ljmp
mov
sbb
sbb
idiv
lds
xchg
cmpsb
scas
test
ja
xchg
ljmp
jae
xchg
aas
popa
and
cmp
adc
es
mov
stos
and
push
shll
push
dec
xchg
mov
cmp
stos
cmp
lods
or
dec
repz
mov
jb
add
mulb
mov
mov
cltd
push
push
dec
test
lds
jl
mov
dec
inc
push
jle
inc
daa
push
lea
push
and
ss
bound
in
outsb
cmp
popa
dec
or
movsl
sub
push
rcrl
or
inc
jecxz
fidivs
add
pop
arpl
push
mov
stos
std
push
imul
jne
push
ja
mov
stos
test
or
push
cwtl
out
aad
addr16
leave
aaa
addb
je
jl
int3
mov
jle
sbb
xchg
xor
cmp
pop
aas
sbb
jns
repnz
sub
fsubr
fbstp
or
xchg
in
cmp
call
mov
cmp
rclb
push
outsl
push
push
das
lcall
jno
mov
add
xor
mov
push
xchg
mov
popf
mov
adc
dec
or
push
in
mov
pop
sub
or
call
and
mov
adc
pushf
out
loope
push
and
mov
ss
adc
leave
test
testb
ficoml
and
mov
lea
gs
adc
movsb
adc
sbb
gs
pop
dec
lods
adc
xchg
ret
push
mov
pop
mov
sub
leave
sub
das
vmwrite
sub
dec
push
in
movsl
faddp
push
movsbl
mov
in
pop
ficoml
ss
adc
cwtl
mov
jl
sbb
jne
pushf
pushf
adc
xorl
xchg
movsb
stos
lock
inc
jl
in
jnp
enter
jno
scas
sbb
out
mov
pusha
scas
mov
lcall
insb
aas
insl
cs
fsubrs
push
sub
dec
out
out
insb
gs
pop
pop
sub
mov
pop
dec
sub
or
cmp
icebp
in
sub
jne
jbe
in
xor
jno
enter
daa
jo
cs
inc
jnp
xchg
addr16
fs
xchg
dec
mov
das
loop
stos
mov
cmp
out
jbe,pn
popf
in
add
sub
testb
stc
mov
jmp
loopne
push
push
mov
inc
dec
adc
xor
push
xchg
and
out
icebp
xor
mov
imul
addl
push
lods
out
cmpl
ja
cli
xor
test
jle
inc
in
push
pop
in
lods
push
xchg
movsb
stos
mov
sub
inc
push
imul
inc
outsl
add
push
rcll
jbe
push
cmp
cld
cmpsl
arpl
scas
push
jg
inc
into
pop
dec
insb
mov
add
mov
cmp
jp
cmp
scas
jns
arpl
cmpsb
cmp
push
out
xacquire
cmp
mov
inc
cmp
xor
imul
cmp
movsl
jle
in
pushf
dec
mov
divl
adc
jae
dec
in
stc
push
lret
hlt
movsb
sbb
sub
add
fwait
xchg
mov
call
sbb
jo
imul
add
mov
cmpsl
add
stos
sti
pop
scas
mov
or
xor
inc
roll
push
fnstsw
cmp
pop
mov
je
mov
mov
push
rorl
push
icebp
xchg
pop
pop
cmp
inc
xchg
test
repz
cmp
in
sbb
mov
mov
mov
loope
cmc
jecxz
mov
fisttpll
ja
push
mov
sti
jge
pop
loop
adc
and
cmpsb
sub
addr16
jo
add
ds
fidivl
xor
sub
outsb
jae
sahf
mov
lea
mov
xchg
mov
cmp
fisttpll
push
push
pushf
jl
mov
test
push
mov
iret
mov
ss
lcall
sub
int
inc
sub
inc
xchg
out
mov
push
or
xchg
ds
scas
xor
inc
mov
cmp
jbe
rorl
cs
enter
addl
push
aad
adc
daa
pop
lcall
stos
mov
jmp
jmp
dec
shll
jo
repnz
outsl
aad
out
mov
jmp
xchg
sbb
xchg
adc
es
jno
adc
lds
push
mov
xor
pop
inc
jge
xchg
fwait
imul
xor
push
cltd
out
pop
test
jo
imul
imull
xchg
jno
xchg
xor
sti
and
out
push
mov
mov
cmp
push
jno
aaa
xchg
push
jns
mov
push
repnz
decl
notb
xchg
daa
fwait
int
mov
es
adc
jo
jecxz
jge
sarb
xchg
mov
cmp
and
repz
stc
fmuls
xor
jbe
dec
imul
sbb
cld
scas
aaa
add
sub
jmp
sub
push
scas
xchg
pop
test
sahf
popf
stc
push
pop
pop
mov
dec
daa
ss
stos
ljmp
hlt
mov
sarl
sbb
mov
and
push
daa
xchg
adc
sbb
mov
ss
enter
adc
pop
fsts
inc
fidivs
jns
hlt
pop
mov
xor
clc
ret
mov
mov
movsb
mov
mov
dec
push
dec
divb
movsb
scas
or
jo
stos
jae
mov
lret
sub
sub
sbbl
cmpsl
sub
in
and
push
cltd
mov
mov
sub
cmp
pop
push
push
arpl
test
and
mov
data16
dec
jle
sbb
xchg
xorl
daa
mov
push
sbb
outsb
push
xchg
test
bound
test
popa
ds
sub
lahf
aaa
cmp
inc
pop
sbb
xchg
orb
stos
adc
mov
dec
cld
mov
in
pushf
push
push
xchg
loopne
enter
dec
movsb
mov
lea
sub
jbe
xor
cmp
jp
mov
inc
bound
dec
push
pop
push
std
ret
xor
jl
shrb
into
popf
les
call
aam
lret
sub
and
push
pop
cli
lret
inc
xor
jne
jb
mov
in
js
xchg
dec
fdiv
push
popa
push
ret
mov
ja
mov
mov
add
or
mov
in
cmc
cli
loope
mov
aad
fsubs
ficoml
out
mov
lahf
add
sub
jle
outsb
xchg
push
insl
out
popa
ds
mov
mov
jp
testb
pop
clc
insb
call
inc
mov
stos
out
in
xchg
mov
inc
out
aas
addr16
and
dec
loop
stos
repz
fwait
xor
inc
mov
cmp
cmpsb
leave
out
cmp
inc
adc
xor
sbb
les
lcall
adc
pop
out
and
jmp
lcall
or
movsb
mov
dec
repnz
dec
lcall
inc
xor
bound
jbe
ret
lcall
cmp
xchg
dec
das
xor
mov
lds
push
cmp
addr16
pop
xor
fmulp
fs
data16
mov
aam
sbb
cmp
jle
je
clc
int3
dec
test
push
push
test
test
push
xlat
mov
cmp
mov
jecxz
test
test
mov
lcall
sub
cld
mov
stos
aas
mov
movl
aad
adc
in
add
sbb
sahf
push
push
cmovge
cmp
xchg
push
dec
inc
out
movsb
testl
loop
push
ret
ret
or
sbb
inc
mov
aad
push
imul
daa
nop
test
test
fsubp
into
cmp
enter
cli
mov
add
and
cld
dec
test
mov
adc
cmp
sahf
sub
jge
push
subl
ffreep
add
mov
rorb
mov
mov
mov
and
js
daa
and
outsl
mov
into
adc
adc
jp
out
outsl
mov
adc
cmp
repnz
movsb
cmp
push
xlat
mov
mov
dec
shlb
jge
stos
add
mov
xchg
out
dec
movsl
je
jge
fmull
mov
xchg
add
jne
cmp
mov
add
stos
scas
in
sti
jmp
repz
jne
cld
lret
rorl
mov
jnp
xor
dec
mov
mov
hlt
xchg
or
mov
test
ja
dec
jo
jbe
aas
daa
sub
andl
adc
incl
mov
insl
negl
gs
psubsb
cli
lods
xor
cmp
or
pop
popa
out
xchg
mov
push
jle
sbb
rorl
dec
mov
and
xchg
dec
mov
xor
fs
cmc
xor
add
dec
mov
sub
scas
sub
test
mov
decl
sub
cmpsl
jbe
jbe
popa
mov
pop
lds
mov
pop
push
and
push
mov
lret
out
stos
dec
insl
ja
jbe
sbb
imul
mov
scas
into
into
test
push
iret
imul
out
push
sub
sti
jns
pop
mov
lea
mov
imul
mov
xor
mov
aas
loopne
cwtl
lcall
aam
insb
je
nop
mov
pusha
int
sbb
push
lds
lds
lcall
add
or
dec
fists
clc
jns
xchg
out
movsl
jecxz
pop
push
inc
popa
je
cmp
and
inc
pusha
mov
sub
int3
sar
lahf
fildl
sub
out
pop
cmpsb
pop
push
ja
sub
jno
adc
adc
add
jge
adc
mov
fcmove
xor
mov
push
add
jae
push
mov
cli
add
loopne
add
dec
push
jecxz
push
lods
inc
adc
gs
sub
hlt
pop
mov
pop
movsb
lret
sub
ja
sub
es
popa
test
pop
adc
cmpsl
out
push
jmp
jbe
xchg
test
adc
xor
add
jne
jbe
jno
pop
mov
jbe
mov
inc
lret
inc
fwait
outsl
sub
lods
cmp
outsb
clc
jge
iret
sbb
adc
push
iret
ds
das
andb
push
popa
and
outsl
or
mov
out
inc
sbb
push
aas
jns
fisubs
cmp
fwait
test
cmp
fldt
shlb
jge
shrl
cld
cli
out
test
cmpsl
imul
sbb
mov
scas
aad
adc
ja
jbe
pop
sub
in
push
jno
arpl
imul
ds
imul
sbb
sbb
ds
jle
cs
js
cmp
pop
cli
stos
cltd
sbb
scas
xorl
sbb
add
stc
cmc
lret
popf
adc
lret
jne
dec
inc
inc
cmp
xor
pop
scas
mov
repz
push
scas
or
jb
pop
in
jnp
js
ss
dec
xor
fs
dec
or
lea
in
loop
cmp
jg
int3
jb
mov
fisttpll
dec
jne
decb
cld
scas
mov
clc
pop
lods
add
adc
sbb
mov
cmp
in
cmp
test
les
cld
mov
outsb
jns
push
int
popa
insl
mov
aaa
outsl
aam
aaa
jne
mov
jl
mov
stos
inc
sub
or
jl
xor
mov
lock
jl
and
sahf
fdivp
adcl
pop
pop
movsb
xor
push
sub
fcmovnu
xchg
loope
mov
mov
ja
dec
or
and
and
mov
movsl
iret
movsl
and
js
mov
popa
push
and
in
mov
push
push
pop
xor
or
sub
mov
adc
sbb
out
fiaddl
xchg
ret
inc
insl
and
mov
jge
adc
pop
mov
icebp
xor
add
fadds
stos
insb
test
sti
fsubrs
xchg
sarb
xchg
call
loopne
xchg
imul
mov
dec
ds
push
cmp
sbb
dec
dec
mov
addr16
or
xchg
andl
outsl
pop
and
ror
jmp
ret
mov
stos
ss
or
inc
mov
hlt
mov
dec
sahf
stos
or
add
inc
test
cmp
ffreep
nop
cmp
mul
xor
mov
xor
add
jno
ret
mov
pushf
jbe
mov
movsb
sbb
mov
push
xchg
insb
jns
rcrl
ja
add
pop
and
daa
into
jbe
or
ret
insb
rorb
scas
mov
andb
adc
std
xor
mov
cmpsl
aaa
pop
sbb
daa
mov
inc
cmpsb
cmp
jmp
imul
jb
push
dec
int
mov
add
imul
nop
ret
lret
push
lods
insl
fnstenv
pusha
sbb
fwait
add
pop
lret
xchg
dec
lods
es
sub
out
sub
dec
cltd
sub
mov
adc
sbb
cli
sub
in
mov
push
lcall
mov
cli
lds
mov
push
mov
push
sub
pusha
push
mov
xor
adc
jno
mov
rclb
sub
mov
cmp
adc
mov
dec
adc
sub
out
jge
or
jge
in
out
out
dec
jo
dec
mov
ss
cmp
pushf
push
out
cmpsb
bound
popa
stc
mov
pop
xchg
adc
mov
jns
sbb
push
xor
arpl
mov
push
jae
sub
popa
out
inc
push
xor
mov
mov
out
or
out
inc
cmpsb
cmp
test
xor
or
jnp
cmpsl
nop
fsubl
push
pop
ja
adcb
call
sub
fidivrl
cmp
jecxz
dec
and
push
std
push
jb
mov
enterw
ret
out
cmpl
ja
jecxz
shrb
pop
dec
das
test
dec
fwait
xor
inc
je
mov
scas
xchg
jmp
mov
arpl
jo
xchg
sub
pop
push
pop
jnp
pop
daa
stos
inc
cs
rcr
mov
mov
es
in
and
or
imul
hlt
data16
pop
sub
movsb
in
outsb
pop
lcall
xchg
mov
mov
push
orl
pop
scas
mov
aaa
arpl
pop
push
inc
sub
out
cmpsb
dec
cmp
cmp
and
pushf
sub
mov
pop
jge,pt
sub
push
sub
shlb
xor
cmp
xchg
jno
inc
mov
or
add
scas
imul
push
insb
stos
jg
movsb
jp
mov
ret
data16
das
cmp
bound
ss
push
lods
int
out
out
push
sub
push
sbbl
aad
lea
fs
push
mov
enter
fwait
push
jnp
sbb
jo
int
inc
mov
dec
jge
jno
inc
out
stos
xor
adc
xlat
test
or
fstl
jo
sbb
addr16
pop
jno
fiadds
push
jge
orl
cmpsb
sub
jo
sbb
repnz
test
out
test
cli
loopne
fwait
addr16
shr
push
fs
mov
xor
jbe
inc
or
xorl
call
mov
pop
fucomp
sbb
pop
xor
shrl
or
mov
dec
xor
ret
jp
bound
add
ds
lret
jge
scas
je
jecxz
pop
push
mov
jne
xor
loope
je
jmp
mov
push
jbe
test
xor
lahf
mov
setnp
dec
mov
xchg
mov
cmp
sbb
int3
into
outsb
xor
mov
xor
sbb
inc
adc
sbb
dec
dec
push
mov
inc
dec
inc
imul
loope
sbb
pop
xor
ja
aam
cmp
icebp
xor
bound
cmp
jb
cltd
adc
lcall
test
push
adc
aad
sahf
push
out
mov
out
add
mov
movsb
stc
divl
int3
push
mov
adc
xchg
enter
out
insl
jno
or
nop
cmp
or
stos
mov
mov
cmp
jnp
into
daa
imulb
sub
fwait
mov
bound
cmp
dec
fwait
jne
jno
or
pusha
lcall
addr16
insb
inc
dec
inc
dec
sbb
je
dec
push
inc
ja
lcall
jno
mov
adc
sahf
imul
mov
outsb
imul
das
dec
cmp
mov
add
jp
xchg
xor
pop
and
and
lret
pop
outsb
push
dec
jns
sbb
shlb
add
cmc
stos
daa
mov
cld
jl
cmp
jno
jg
cltd
mov
ffree
dec
or
mov
jp
decl
sub
push
js
ja
sti
ljmp
mov
add
lret
sar
in
inc
sti
repnz
mov
push
pusha
adc
xor
push
test
mov
sahf
iret
popa
int3
addr16
es
pop
add
addl
repz
int
cmp
fisubl
clc
inc
loopne
mov
sub
test
ret
or
cmp
pop
mov
ss
addb
mov
inc
xor
mov
and
cmp
lret
push
call
cmp
sbb
shlb
dec
jnp
xor
mov
inc
test
mov
fsubrs
dec
push
test
sbb
pop
call
ret
lock
dec
push
push
mov
dec
or
add
les
sub
int3
fiaddl
pop
in
icebp
das
jae
xor
xchg
jp
mov
sbb
std
cwtl
mov
test
inc
cmp
cmp
cmp
add
fnstsw
cli
xor
cli
inc
or
dec
dec
cmp
test
adc
int3
adc
push
inc
adc
test
aaa
dec
das
mov
push
jmp
sbb
jo
jmp
dec
sub
pop
daa
dec
sub
jnp
sti
cs
and
jae
sub
cmc
enter
cmp
aam
icebp
adc
xchg
xchg
or
test
jb
cmp
popa
pop
adc
les
cmc
dec
and
test
js
and
or
pop
subl
test
or
test
jecxz
bound
jg
sub
push
test
in
daa
arpl
in
mov
push
je
shrl
push
mov
mov
neg
inc
and
xor
push
jp
push
jbe
inc
push
daa
nop
cmp
ss
sub
push
jecxz
pop
and
cs
pusha
sub
das
adc
push
notl
popa
xor
adc
lock
inc
push
dec
jecxz
cmpsl
mov
out
fwait
cld
pop
xchg
cmp
jns
dec
cmp
or
pop
fcoms
ljmp
xor
sub
cmp
fcmovne
pop
les
aaa
pop
jbe
mov
lods
shlb
in
iret
lret
nop
stos
das
add
mov
and
cmpsb
pop
std
lcall
mov
sub
dec
push
jbe
jno
shll
jb
sub
lock
scas
fistpll
cmpl
cmp
repnz
les
or
xchg
lds
out
outsb
sbbl
jmp
popa
sub
sahf
jno
scas
ret
adc
jbe
push
xor
in
or
pop
roll
cmpsb
ret
in
bswap
ja
xor
pop
mov
xchg
mov
ret
das
sub
ljmp
jae
inc
lock
lret
in
pop
cmp
repz
xor
push
sub
push
push
inc
dec
mov
adc
push
pop
repz
dec
or
or
or
add
jne
mov
into
and
and
out
sub
ss
jl
push
and
test
cmpb
sbb
push
add
jmp
push
clc
pop
shrl
xor
jae
and
pop
or
ja
bound
or
cmp
stos
test
jnp
sti
push
cmp
cmp
stos
jno
jne
in
adc
sbb
js
mov
sub
ficompl
loop
movsb
inc
addb
xor
mov
dec
ljmp
outsl
aaa
xor
loop
popa
cmp
push
movsb
mov
data16
js
jle
jns
jnp
push
mov
cmp
lock
ja
jge
jbe
xor
popf
fs
jle
jp
shl
scas
push
int
push
push
cltd
int3
cmp
and
stos
roll
sbb
movsl
mov
pop
dec
and
lcall
jge
fdivrs
add
out
movsl
push
adc
aas
cmpsl
pop
mov
sub
jnp
enter
outsl
scas
nop
inc
repz
lret
cmpsl
pop
pop
inc
loope
fidivs
popa
and
dec
lods
hlt
add
pop
cmp
lods
cs
inc
sti
mov
dec
or
sub
leave
sub
xor
cmp
scas
add
lods
pop
addr16
dec
xor
outsl
add
rcll
push
dec
stos
pop
push
dec
addl
mov
mov
push
scas
test
xor
sbb
or
test
jns
pushf
mov
xchg
sub
aaa
fldl
fnstcw
clc
call
dec
aaa
cmp
popf
cmp
xor
bound
pop
mov
pusha
out
sbb
rcrl
aas
adc
push
cmp
sub
outsb
dec
inc
aaa
mov
pushf
negl
mov
adc
dec
iret
jne
scas
cmp
xor
lock
loope
sub
stc
shl
push
in
xchg
outsb
mov
inc
push
fidivrl
cs
inc
mov
pop
dec
mov
mov
and
inc
cpuid
aad
shrb
jo
sbb
out
mov
insb
js
aaa
ljmp
push
xchg
add
lds
hlt
xor
jmp
ret
inc
imul
loop
popf
shl
xor
cld
dec
push
popa
test
insl
outsb
cmp
mov
jle
mov
push
adc
lea
xor
mov
cmp
insb
sbb
les
sbb
das
ror
dec
sub
movsl
iret
push
adc
and
add
dec
pop
inc
orl
in
jle
out
lret
scas
push
xchg
enter
cmp
imul
ds
enter
dec
icebp
in
loopne
cmp
sbb
stos
cmp
scas
adc
in
sub
sbb
xchg
popf
xchg
popa
call
jmp
cmpsb
hlt
mov
leave
rclb
pusha
inc
push
fdiv
jo
sti
dec
enter
cmpb
sahf
cmp
push
cmc
in
das
sub
mov
in
jns
lds
std
pop
dec
push
movd
push
cmp
adc
loop
cltd
or
movsb
sub
or
call
in
add
xor
jae,pn
inc
out
adc
ds
cwtl
mov
pop
mov
sub
xor
fidivrl
or
andl
arpl
mov
out
jbe
add
xchg
lret
neg
dec
dec
ljmp
jbe
dec
mov
imul
gs
jle
pop
int
push
jp
int
fmull
add
lret
sub
outsb
xor
jb
jmp
das
cmpsl
in
repnz
jg
cmp
aaa
test
jbe
jge
fnstcw
sbb
jno
push
mov
mov
cmp
mov
mov
lcall
lcall
lods
pop
aaa
call
mov
pop
fs
inc
mov
aas
pop
into
push
hlt
lock
pop
les
fidivrs
loope
cmp
in
movsb
sbb
xorl
loope
mov
arpl
mov
sti
pop
jae
test
or
nop
test
dec
bound
jge
sbb
stc
pop
mov
push
fists
push
scas
movl
and
cld
in
nop
mov
repz
scas
dec
jns
roll
adc
pop
addr16
mov
pop
or
test
data16
and
out
stc
dec
pop
cmp
pop
mov
pop
add
xchg
enter
adc
jae
sub
xchg
ret
loop
mov
fiaddl
pop
xchg
hlt
flds
in
in
js
push
in
cmpsl
jge
imull
ds
test
inc
cmpb
movsl
mov
jg
dec
jo
push
and
or
mov
incb
hlt
int3
cmpb
cmp
icebp
xor
sti
dec
inc
gs
jp
scas
fwait
leave
dec
fwait
dec
out
mov
xchg
fisubrl
not
cs
aas
dec
sbb
lock
mov
cmp
fs
push
mov
das
ds
leave
test
pop
imul
mov
scas
lock
adc
xchg
scas
imul
xor
test
insb
cmpsb
mov
sub
dec
adc
pop
es
ret
test
inc
outsb
cmpsl
in
ss
sbb
and
xor
lods
sub
mov
inc
dec
push
mov
push
and
inc
test
cmpsl
mov
pop
lahf
inc
xor
stos
cmp
rcrb
push
mov
push
xor
ffree
movsl
cmpsb
sbb
jns
dec
cmp
xchg
cmpsb
adc
ljmp
frstor
pushl
gs
xor
cmpsl
lret
cmp
and
xchg
sub
pop
inc
jo
mov
gs
jmp
mov
je
add
jl
mov
cmp
fimuls
ja
mov
aam
lahf
dec
jae
cmp
jbe
lcall
cltd
js
ret
and
outsb
popa
js
cltd
std
loop
dec
outsb
test
inc
cltd
bound
shlb
in
shrl
pop
mov
out
popa
sahf
pop
mov
sbb
in
lcall
sub
daa
push
dec
xchg
jbe
das
stos
lds
jbe
push
jnp
insb
jl
sub
sub
jne
test
jl
mov
movsl
mov
imul
lret
icebp
xchg
cmc
in
scas
jp
adc
movl
jnp
sub
loopne
sub
in
inc
imul
and
out
dec
nop
outsl
jge
in
fsts
stos
sbb
fwait
xor
lcall
sub
cs
push
dec
lea
cmp
jg
xor
sbb
ja
lret
xor
movsl
lret
or
sub
mov
test
cld
fs
mov
out
insl
clc
out
popfw
movsl
out
test
fnsave
loop
mov
dec
dec
aad
mov
sub
dec
aad
or
mov
imul
or
cmp
stos
test
inc
inc
mov
fiaddl
sub
and
dec
push
ss
data16
cmp
inc
xor
aas
pop
push
test
clc
jbe
cmp
push
cmp
dec
pop
sub
into
mov
int3
lods
xchg
pop
pop
xchg
in
lgs
shrl
push
sbb
xor
mov
test
xchg
stos
nop
dec
mov
clc
leave
out
push
ret
xchg
add
mov
pop
adc
mov
dec
js
adc
adc
mov
imul
mov
data16
ja
dec
xchg
push
inc
cmp
xor
cmp
dec
add
cmp
cmp
adc
pop
scas
ds
mov
ljmp
sahf
push
insb
fwait
nop
rol
enter
dec
cltd
jb
inc
cmp
and
subl
sahf
jp
aad
dec
or
mov
cs
into
aad
lods
les
bound
outsb
pop
mov
setl
lcallw
test
pushf
js
mov
push
fimull
aaa
cli
rcll
bound
mov
inc
xor
flds
inc
push
or
inc
sarb
and
movsb
inc
xchg
dec
popf
in
lods
je
adc
mov
movsb
push
push
mov
mov
push
icebp
dec
push
pop
sub
mov
jns,pt
ljmp
cld
pop
nop
ja,pn
push
sbb
sti
popa
jno
inc
outsb
mov
rolb
or
ds
cmc
js
lret
xchg
test
jp
xor
sub
test
xlat
cmp
das
daa
cmpsb
testb
ret
stos
in
and
xor
cmp
fwait
mov
aaa
xchg
lret
fdivrp
or
jno
sub
jno
scas
and
ss
adc
lcall
ja
inc
dec
fdivrl
cmp
push
inc
int3
pop
dec
cmpsb
inc
jo
pop
adc
imul
jg
cmp
push
push
imul
xlat
xor
cmpsb
test
imul
mov
jns
push
dec
jl
cmp
sti
cmp
sub
sub
add
nopl
mov
imul
push
inc
cmpsb
push
dec
xchg
sub
out
ja
xchg
cmp
mov
mov
sti
adc
popf
cmp
pop
int
adc
inc
scas
lret
cmpsb
jb
popa
jmp
dec
test
jno
loop
jmp
xor
lcall
inc
insl
aad
mov
mov
jmp
adc
adc
jge
jno
xchg
dec
orl
mov
mov
cmpsl
sbb
push
dec
push
mov
pop
loope
push
inc
mov
fsubs
cli
cmp
mov
mov
imul
and
mov
pop
sar
lds
in
sbb
scas
insb
lcall
nop
loope
inc
and
xor
and
dec
lret
sub
push
mov
rorb
add
outsb
int3
sub
adc
and
insb
add
adc
mov
pushf
add
cld
inc
rcrb
jnp
sub
push
push
lret
lods
xor
push
pushf
and
ret
cli
push
xchg
in
std
fdivs
adc
dec
pop
adc
adc
dec
in
inc
pop
movsb
push
ss
iret
xchg
mov
outsb
xor
mov
push
das
inc
jne
in
jbe
shll
std
mov
cmpl
stos
mov
imul
test
xor
into
cmp
push
push
push
or
jo
fwait
push
jl
rcrb
icebp
pushf
data16
push
push
jle
cmpsb
mov
push
stos
jg
ud2
push
stc
jno
in
add
mov
jp
jne
loopne
sub
std
jg
dec
pop
push
sub
mov
cmp
mov
mov
test
js
out
lret
mov
fimuls
mov
jo
dec
sbb
xor
xor
fxch
leave
test
test
inc
orb
das
jp
imul
cmp
out
movsb
cmp
add
jle
and
orb
sahf
push
jbe
ja
lcall
inc
cmp
ja
jno
xor
mov
ds
not
scas
lcall
pop
divl
insb
and
ss
rorl
popaw
sub
insl
xor
aam
repnz
ljmp
push
add
stc
add
mov
in
dec
mov
aas
cmp
ss
dec
mov
inc
pusha
rclb
push
rcl
scas
inc
lods
push
stos
cltd
inc
orb
mov
cmp
aas
inc
jle
xor
mov
jns
inc
leave
inc
and
inc
adc
es
push
popa
push
mov
inc
sub
mov
mov
daa
lods
push
insb
adc
cmp
cmp
ja
cmp
sbb
nop
mov
popa
int3
and
mov
loopne
adc
mov
jg
repnz
nop
sub
xor
xchg
test
push
nop
rolb
movsb
xlat
int
fldcw
mov
jmp
lcall
subl
sub
stc
jg
adc
lret
repnz
cmpsb
pushf
pop
enter
fwait
and
pop
mov
mov
jno
mov
adc
ds
cmp
aad
push
shl
iret
mov
xor
add
out
aas
mov
push
enter
inc
out
jmp
jl
xchg
je
fidivrs
std
inc
push
jge
outsl
jge
and
clc
inc
stc
push
loope
cmp
neg
sub
push
and
cwtl
jge
out
test
ss
mov
stos
xchg
lret
jo
fidivrl
imul
das
mov
jg
sub
xchg
and
jns
lret
callw
cmp
mov
imul
cmpsb
mov
lcall
sbb
push
pop
pushf
push
test
xchg
testb
mulb
dec
fwait
push
adc
sub
dec
daa
mov
scas
sub
adc
cmc
ds
ret
dec
aad
jbe
cmp
in
or
mov
out
jbe
mov
shr
dec
mov
ret
push
or
stos
data16
jge
cli
jecxz
scas
outsl
sub
mov
addr16
xor
fs
ficompl
cmp
push
call
sub
ss
xor
bound
rorl
popa
mov
add
cwtl
out
push
in
mov
mov
adc
repz
popf
je
and
insb
fistpll
cmp
jbe
in
sub
mov
push
aam
sub
pusha
mov
into
push
xchg
jae
lods
mov
jnp
outsl
xor
stos
cmp
rclb
inc
pop
popa
call
out
xor
dec
cli
sub
shrl
mov
and
xchg
sub
cmp
leave
mov
mov
dec
push
mov
adc
call
ljmp
je
shlb
hlt
jne
mov
repz
mov
movsl
sbb
push
adcb
push
inc
push
lods
addr16
pop
mov
ds
insl
xlat
aas
sarl
js
or
retw
pop
movb
mov
data16
aas
xchg
sbb
cld
lea
test
inc
jnp
push
push
je
mov
pop
mov
leave
jp
shlb
adc
ret
adcl
pop
stos
int
or
mov
pop
imul
aas
jne
and
arpl
bound
cmp
sbb
inc
jne
movsb
xor
insl
or
push
push
jae
push
mov
rorb
gs
pop
repnz
push
xor
repnz
sub
jmp
push
dec
xor
test
cld
scas
xchg
sub
jp
sub
add
inc
xor
push
out
adc
outsb
push
nop
icebp
push
dec
idivb
sbb
or
daa
out
pop
jns
nop
ljmp
jecxz
sbb
loopne
scas
das
mov
lods
std
and
rorb
mov
aaa
sub
sbb
cmpl
mov
jb
int3
or
cmpsl
jbe
roll
cmp
adc
dec
sahf
pusha
inc
lods
fwait
aad
faddl
int
inc
xlat
xor
inc
shrl
fwait
cmp
mov
arpl
xchg
jnp
aad
sub
fistpll
ss
push
sbb
add
xor
xor
cmp
nop
add
xchg
in
test
cmp
mov
and
movsb
push
xchg
lcall
mov
jno
jg
dec
test
dec
ds
inc
orl
ds
test
pop
aad
rcrl
or
xchg
jmp
adc
dec
jl
sub
out
cmp
orb
stc
outsb
push
in
lret
lds
insb
mov
jle
dec
std
jbe
xorl
stos
jo
in
mov
jnp
dec
dec
inc
insb
jge
outsb
cld
out
and
pop
test
or
xor
in
cli
enter
dec
sub
inc
push
movsb
cmp
adc
cmc
or
mov
mov
xor
popl
scas
inc
mov
add
or
jb
ja
or
pop
and
mov
fildll
dec
stc
sarb
push
js
test
and
xchg
ret
cmp
cwtl
push
mov
cli
pop
mov
movsl
repnz
xchg
xchg
loope
lds
sub
hlt
stos
push
pop
mov
stos
outsb
dec
add
imul
lcall
aam
test
add
out
dec
pusha
lret
add
push
test
cli
imulb
js
add
push
jo
cmp
cmp
hlt
out
sbb
jbe
adc
andl
ja
mov
in
ss
mov
inc
flds
addr16
test
movsb
inc
stos
data16
mov
lcall
mov
test
push
mov
frstor
jge
sbb
mov
popa
out
and
lock
or
data16
scas
pop
movsl
outsb
push
jmp
jl
push
popa
out
cmp
addr16
xor
in
mov
rcll
call
xlat
mov
repnz
sbb
fisttps
jo
rolb
push
cwtl
pop
fisttpl
mov
test
fstp
stos
adc
and
push
repnz
xor
mov
cli
pop
scas
sbb
jo
adc
inc
mov
shlb
sub
subl
mov
into
xchg
lds
js
dec
dec
dec
fcomi
and
fiadds
scas
cmp
fsubrl
andl
in
mov
mov
inc
clc
movsl
mov
pop
fwait
cmp
push
xor
sbb
mov
cmp
mov
inc
cmp
xlat
call
ja
test
mov
flds
mov
pop
lock
pusha
aam
mov
push
mov
les
enter
sub
rolb
xchg
incb
push
xor
jg
aad
subl
stos
xor
fbld
mov
inc
jg
jbe
dec
mov
pop
cmpsl
sbb
lods
insl
cmpb
jo
jo
pop
push
lods
lcall
ja
or
stos
imul
mov
mov
pop
scas
movsb
cmp
out
dec
pop
js
sbb
jae
or
call
fldenv
dec
fwait
out
fsubl
in
xor
retw
lcall
cli
mov
dec
pop
push
xlat
push
lcall
fldl
xchg
jbe
cmp
cmpsb
fwait
pop
xor
jmp
sub
imul
subl
dec
fisubl
and
bound
sub
pushf
sbbb
inc
adc
fistpll
ss
mov
mov
sub
fwait
ret
nopl
addb
sbbl
cmp
test
jae
mov
stos
xchg
push
sbbl
cmp
les
lcall
dec
mov
call
mov
xchg
mov
mov
mov
jno
mov
mov
ret
jb
adc
test
rclb
sub
jecxz
lcall
mov
pusha
inc
push
sub
cmpsb
mov
lods
icebp
in
addr16
filds
xor
insb
enter
push
sbb
sub
cmpb
inc
jne
inc
fwait
ds
jecxz
mov
xor
lret
loopne
fwait
pop
xor
jle
xchg
imul
shll
push
mov
lret
lcall
adc
scas
jbe
cmp
ljmp
or
fwait
pushf
ss
jo
xor
ret
daa
ss
in
dec
mov
mov
xchg
jbe
int3
push
in
or
test
jge
push
and
pushl
stos
lock
mov
dec
dec
out
push
addr16
imul
cmp
imul
std
les
sahf
and
lods
leave
lods
lock
xor
push
insb
inc
mov
jb
pop
sbb
or
or
xor
loop
aas
cs
push
scas
mov
nop
xchg
cwtl
cmp
cmp
cmp
ds
insl
stos
lock
int3
aad
jle
data16
push
fwait
push
int
cmpsb
sahf
cwtl
outsl
rol
jg
subb
stos
xchg
jb
testl
lret
sub
xchg
or
mov
test
lods
cmp
cmp
sbb
aaa
outsl
xchg
mov
cmp
std
xor
mov
pusha
jo
inc
inc
mov
sbb
inc
sub
jnp
loop
mov
cmp
cli
dec
pop
pop
xor
lcall
outsb
pop
push
std
jae
in
dec
cmp
popf
jns
push
mov
mov
cld
push
adc
or
orb
jns
stos
lds
sub
push
push
push
pop
das
pop
add
repnz
cmp
mov
enter
decl
and
xor
mov
out
popa
sbb
sbb
movsl
push
outsl
or
dec
mov
dec
xorb
adc
mov
incl
aad
scas
sbbb
test
sbb
cmc
out
push
out
ret
in
push
loopne
out
mov
stos
push
mov
or
mov
mov
data16
sahf
mov
int
bound
push
mov
imul
jnp
pop
sub
xor
mov
outsl
lahf
mov
popa
mov
jle
aas
mov
mov
push
sub
inc
outsb
popf
lret
xchg
outsb
ds
inc
sub
sbb
jecxz
movsb
xchg
mov
mov
jnp
loope
js
ljmp
sub
cli
int
mov
aas
push
out
lahf
addb
dec
pop
inc
test
push
and
imul
clc
push
sub
fistps
popa
sbb
push
dec
xor
cmp
pop
inc
aaa
mov
test
js
push
jns
mov
pop
lods
pusha
repnz
cmpsb
cmp
pushf
iret
xor
xchg
push
movsb
jbe
mov
out
hlt
sti
outsl
cmp
push
pop
mov
das
jg
dec
add
sub
out
pop
add
out
popa
in
xor
jmp
lods
fstpt
in
push
mov
and
sub
push
call
ror
xor
jae
xchg
mov
ss
lcall
dec
daa
push
dec
cmp
nop
daa
scas
cmp
lods
insl
cli
ss
iret
push
adc
or
stos
lret
in
push
mov
loope
cs
sbb
mov
cmpsb
cmp
sub
sub
cmc
pushf
addb
lea
dec
sub
jne
sbb
inc
and
dec
out
jne
mov
mov
xor
shl
sti
ss
arpl
int3
mov
add
sub
or
es
sbb
mov
in
sarl
sub
cmpsl
test
stc
dec
mulb
mov
mov
cmp
fsub
enter
mov
mov
cld
and
jo
scas
sbb
js
mov
hlt
sub
dec
addr16
xor
gs
out
dec
sbb
outsb
dec
jns
aam
sbb
pop
lock
lcall
and
test
outsb
sub
xchg
mov
pop
data16
outsb
sbbl
sbbb
data16
mov
mov
jno
repz
lods
cs
aam
mov
push
mov
add
mov
insb
sbb
mov
or
insl
ss
aaa
mov
iret
aas
xchg
push
pushf
mov
jp
dec
inc
xacquire
jo
pop
xor
sbb
addr16
xchg
xor
lock
pop
ss
jno
loopne
sub
xor
jnp
cmp
nop
inc
mov
ja
xchg
cmpb
mov
ds
mov
mov
mov
adc
mov
xchg
push
test
aas
push
jl
xchg
out
adc
std
mov
or
sbb
mov
pop
jbe
mov
pop
outsb
sbb
out
add
jp
push
cmp
push
das
push
mov
ja
repnz
cmc
das
adc
mov
inc
das
imul
js
decl
mov
mov
cmpsl
or
xor
in
and
pop
push
popa
mov
neg
add
das
or
imul
xor
push
loop
in
cmp
ss
gs
ds
jg
into
mov
inc
je
aam
sahf
and
das
mov
lahf
push
adc
inc
insb
xorb
sub
inc
add
call
mov
cmp
push
mov
dec
dec
pop
std
xlat
push
sbb
jns
and
aas
cmp
dec
das
jns
adc
adc
push
scas
jmp
add
and
inc
push
sub
xchg
push
cs
jmp
test
arpl
push
xchg
sbb
cli
lret
push
push
xorb
and
das
popf
dec
stos
outsb
mov
in
les
mov
das
jl
imul
dec
jecxz
test
outsb
icebp
mov
fcmovbe
mov
xchg
sub
dec
xchg
pop
ss
cmpsl
sub
mov
xlat
pop
mov
push
insb
les
mov
pop
inc
cmp
push
and
ljmp
outsb
cmpsl
cmp
sbb
das
adc
mov
into
pusha
mov
push
dec
cli
ljmp
sub
aas
cs
or
in
inc
xchg
jns
test
dec
loope
cs
aas
pop
mov
aaa
inc
inc
sub
push
mov
sub
ret
mov
das
push
push
ljmp
mov
cs
push
loop
in
mov
push
fdivrl
inc
or
dec
pop
jg
pop
incl
test
mov
jge
pusha
mov
adc
dec
pop
mov
cmp
test
nop
cs
stc
stos
mov
add
sbb
pop
out
push
xchg
stos
xchg
fwait
jne
cmp
cmp
movsl
dec
dec
int
mov
mov
out
test
fdivrl
lods
jmp
sti
xchg
sbb
sub
out
xor
inc
fwait
xchg
cmpsb
repnz
cmp
fcmovbe
xchg
pop
orl
ja
ret
mov
add
test
mulb
xor
and
inc
test
ret
fwait
inc
lret
mov
mov
lcall
rcll
jbe
mov
and
jo
test
jp
sub
movsl
pusha
adc
out
mov
outsb
pop
out
adc
or
push
in
mov
xor
out
sub
jo
sub
test
dec
push
pop
cmp
cld
cmp
jne
and
xchg
cmpb
cmpsl
mov
rcrb
insb
fwait
xor
sbb
cmp
adc
sbb
mov
push
jg
mov
xchg
add
movsl
lds
data16
jg
mov
test
mov
push
mov
jnp
xor
cwtl
cmc
subl
in
or
fstp
mov
xor
jg
ss
mov
cmp
inc
or
adc
stc
cli
and
mov
into
aam
jae
popf
or
jb
sub
repnz
cwtl
insb
push
mov
dec
and
push
inc
dec
cmp
lods
xor
enter
iret
jecxz
sub
outsb
data16
mov
push
lds
or
test
lods
lcall
fwait
push
push
adc
pop
xorb
add
push
sub
imul
ss
aam
pushf
fxch
push
scas
popa
jge
xchg
push
test
mov
int3
popa
mov
xor
fwait
outsl
mov
or
sub
mov
imul
xor
pmaxsw
xor
or
jb
sbb
ret
repz
sbb
pop
pop
int3
addr16
call
es
push
jo
shl
push
aad
popa
xor
cltd
fildl
ljmp
in
and
sub
loopne
aaa
iret
fwait
ljmp
movsb
xchg
mov
aas
jno
adc
pop
dec
xchg
mov
sahf
cmp
ss
pusha
cmp
lcall
mov
and
lahf
or
incl
les
cs
xchg
push
cmpsb
mov
cli
sub
push
sbb
icebp
add
cmovnp
sbb
je
out
sbb
push
je
arpl
sahf
and
adc
divl
jns
cmp
mov
and
aam
lods
roll
sbb
dec
js
movsl
neg
int
or
and
mov
dec
andnps
stos
addr16
in
inc
popa
in
ja
inc
and
out
inc
out
jno
repz
rcrl
sub
push
pop
mov
sbb
popl
push
push
and
xchg
cltd
sahf
out
xor
mov
mov
pop
lcall
sar
outsl
jae
cmp
cmp
outsb
popa
sub
je
mov
ljmp
out
and
sub
clc
lret
aad
das
mov
xor
push
not
xchg
jo
scas
subl
or
adc
mov
dec
in
imul
xor
mov
scas
push
sbb
jno
mov
add
test
in
lods
cmpsb
mov
enter
hlt
add
ret
shrb
mov
idivb
push
push
push
mov
jle
push
out
cmpl
fs
xor
rcl
push
push
out
xor
push
sbb
dec
sbb
aas
lret
jl
xor
imulb
stos
sbb
movsl
inc
mov
test
sarl
pop
xor
cli
add
mov
fsubrp
push
ss
adc
adcl
addl
sbb
lcall
cld
xor
cltd
in
jle
dec
adc
mov
cli
inc
aad
test
mov
or
mov
lods
int
lea
jae
popa
mov
xchg
andl
mov
fstl
sub
push
and
add
lods
ss
ficoms
popf
lcall
and
repz
sbb
jo
and
out
enter
stos
pop
sarl
mov
push
jge
es
sbb
mov
loop
rclb
push
loope
inc
cmp
xor
movsb
xchg
jne
gs
push
in
adc
mov
pop
sub
xor
adc
sbb
xchg
std
aas
insb
mov
sub
loope
insb
inc
in
inc
cmpl
out
daa
sub
add
cmp
push
xor
add
inc
lock
inc
sub
adc
out
cmp
clc
adc
test
out
pop
mov
push
iret
loope
test
cmpsb
mov
push
out
outsb
push
aad
add
lds
sub
out
jbe
mov
mov
jg
rcl
mov
pop
dec
lods
and
push
cmp
ljmp
jno
ret
imul
jmp
inc
mov
scas
dec
inc
ljmp
sub
push
es
push
popf
xor
lcall
cmp
jecxz
cmpsb
mov
mov
shlb
imulb
pop
jge
in
push
jnp
icebp
in
jne
adc
and
les
mov
jge
inc
gs
fmull
arpl
jbe
outsl
mov
push
dec
inc
sbb
arpl
push
pop
enter
fwait
idiv
ds
nop
into
sub
xchg
xchg
jge
or
notb
mov
ss
push
add
cmpl
push
xchg
inc
icebp
push
test
mov
sub
push
dec
popa
and
inc
arpl
popa
lret
push
xchg
insl
adc
stos
cmp
cmp
xchg
mov
sub
adc
mov
cmpsl
test
aad
mov
mov
sub
stc
mov
xchg
paddw
push
or
mov
dec
into
sub
mov
sbb
inc
aaa
clc
inc
mov
mov
push
popa
push
and
push
in
jge
or
loopne
frstor
out
cmpsb
pop
push
data16
pop
and
sbb
in
add
push
push
mov
leave
nop
jle
mov
sub
mov
imul
cmpsl
and
inc
adc
mov
sub
aad
cli
cmpsl
cmp
jne
outsl
mov
lahf
add
ljmp
imul
push
repnz
daa
sbb
insb
loop
jne
jmp
ds
xchg
xor
push
lds
mov
pop
sub
pop
rolb
test
mov
jecxz
xor
xor
xor
stos
mov
divl
inc
and
into
fwait
mov
jmp
fldl
stos
xchg
sub
lcall
xor
addr16
arpl
fisttpll
add
leave
dec
js
and
add
cs
sti
mov
sub
xchg
cmpl
cli
dec
cmp
pop
stc
pop
shr
rcrl
mov
mov
sbb
dec
int
cs
mov
insb
add
lret
and
dec
fwait
pushf
shrb
push
cmp
test
xchg
mov
and
inc
jge
lock
and
lcall
push
mov
mov
pop
cmp
jl
xor
leave
mov
jb
xor
leave
dec
scas
mov
insb
nop
ret
sub
jnp
cltd
js
xchg
xchg
cmpsl
call
sub
test
xor
rcr
mov
pop
jbe
mov
sub
cmp
mov
movsl
jecxz
stos
scas
mov
dec
jge
push
cmp
add
sti
mov
lods
mov
inc
sahf
aaa
ss
cltd
aam
mov
fwait
jp
mov
iret
fisttpl
mov
mov
xor
cmp
mov
pop
cmp
jo
shlb
stos
subl
jb
xor
adc
outsb
xchg
jns,pn
adc
sub
sub
push
outsl
add
lret
push
into
mov
mov
xchg
mov
sub
scas
std
lcall
fisubrs
mov
pop
ljmp
mov
ljmp
lret
sub
push
push
stos
lahf
ret
loopne
test
mov
xor
pop
mov
sbb
outsb
jge
lds
mov
lods
and
in
xchg
loope
jne
shrb
inc
stos
inc
fidivl
and
jne
in
ja
and
test
mov
inc
push
popf
jle
mov
fsubrs
pop
xchg
adc
in
nop
dec
popa
out
mov
or
adc
jl
test
aad
jb
test
pushf
cmp
dec
or
aaa
pop
pushf
das
dec
dec
ljmp
sti
inc
aas
lahf
lods
pop
scas
inc
scas
fldt
mov
loop
lea
test
xchg
mov
sbbb
mov
xor
push
sbb
adc
dec
inc
jno
jo
data16
dec
mov
inc
test
mov
daa
jl
cmpsb
pop
jmp
stos
xor
or
and
cmpsl
dec
mov
lods
cmp
das
lahf
xchg
ss
ret
pop
pop
pop
jnp
lods
das
std
cmp
mov
push
pop
sbb
push
lock
sti
into
scas
mov
outsl
or
and
cmp
cmpsl
jns
and
mov
test
fwait
dec
pop
or
inc
and
jbe
adc
or
mov
adc
mov
int3
lcall
ljmp
stos
jo
pop
push
loopne
outsl
jns
bnd
push
inc
sub
cmp
out
jbe
int
sbb
cwtl
mov
ja
push
test
dec
hlt
mov
jno
fdivl
sub
pusha
xor
cmp
dec
mov
add
test
test
testl
lret
popa
cld
adc
mov
cwtl
xor
fstpt
outsl
jge
int
inc
stos
cmp
jns
jbe
in
and
sub
pop
outsb
and
jg
stos
je
pop
adc
in
cmp
jmp
mov
jnp
fwait
out
xor
jge,pt
subb
je
and
add
sahf
movsl
outsl
into
jmp
inc
jno
loopne
push
cmp
sub
pushl
mov
add
dec
adc
inc
jecxz
mov
cmp
sub
push
or
out
cmpsb
pop
inc
test
or
ret
stc
mov
hlt
insb
add
sbb
fwait
sub
jns
and
xchg
sbb
lds
jge
test
popf
adc
out
cmpsb
dec
daa
pop
sub
jg
aad
aas
cmp
ss
dec
lret
jnp
bswap
inc
les
jno
mov
adc
je,pn
subb
adc
push
cli
mov
push
ljmp
enter
out
push
jl
inc
push
sub
popf
mov
mov
dec
mov
gs
mov
mov
jge
push
cli
mov
dec
push
mov
and
adc
adc
aad
cmp
out
das
popa
insb
orb
xlat
xor
jne
mov
rol
push
aaa
fnstsw
sub
or
loopne
pushf
ss
sbb
jne
lock
lds
and
mov
mov
dec
pop
outsl
sbb
mov
je
adc
in
xchg
or
fs
nop
frstor
pop
jne
sub
xor
jge
hlt
mov
mov
or
push
lds
inc
push
into
sti
xchg
jns
jl
sub
or
mov
repnz
jno
in
sub
adc
mov
sub
mov
shlb
dec
fs
stos
mov
paddsw
lods
lods
lcall
cltd
rol
xor
xor
mov
out
jecxz
out
sbb
popa
push
out
xchg
mov
lea
scas
mov
ljmp
pop
lock
push
in
pop
mov
lret
xchg
mov
ja
sbb
sub
xor
fs
jbe
icebp
decl
shr
mov
cli
jne
sbb
in
in
mov
sbb
sub
das
addl
push
and
fsubl
enter
inc
pusha
in
lock
in
incb
cltd
test
inc
inc
aaa
mov
mov
pushf
sub
sbb
js
pop
jnp
fwait
sub
out
cmp
adc
dec
cmp
adcb
push
or
pop
fsubrp
sub
repz
arpl
sbbl
pop
outsb
push
inc
cltd
popf
dec
mov
sub
scas
mov
mov
stos
in
fnstsw
inc
jns
addb
fiaddl
in
icebp
shrb
push
cwtl
push
cmp
adc
pop
and
or
sbb
arpl
hlt
pop
dec
outsl
aas
insl
test
andl
dec
jbe
loopne
inc
loop
jne
pop
dec
inc
mov
jb
mov
xor
lock
jnp
adc
and
aas
stos
push
or
fisttpl
ljmp
dec
sbb
pop
lahf
xchg
lock
movsb
push
in
shlb
xor
ss
push
mov
push
stos
cmp
fwait
ds
loopne
jl
loope
aaa
adc
jno
cs
pop
pop
nop
sub
ljmp
cmp
cmp
dec
aam
sbb
sbb
dec
mov
sub
or
xchg
insl
pop
sub
mov
int
xchg
xchg
cs
jle
iret
imul
dec
test
jecxz
mov
xchg
ret
cmp
push
dec
cmp
in
push
data16
mov
cmp
je
hlt
lahf
out
cmc
andl
push
jecxz
lret
loope
bnd
loopne
jle
jae
or
lds
dec
push
dec
pop
out
ss
outsl
das
cs
sub
add
test
mov
int
and
adc
addr16
xor
outsl
into
pop
xchg
xchg
int
arpl
pop
repnz
sti
xor
jl
jb
mov
mov
ja
push
cmpl
cmp
pop
test
dec
add
sarl
scas
stc
xchg
and
out
cmp
jmp
lret
mov
enter
and
mov
sarl
dec
adc
push
cld
das
jge
inc
push
arpl
cmp
in
mov
mov
mov
pop
mov
leave
js
inc
jnp
push
aaa
mov
xor
int
push
lds
jge
je
jmp
cld
insl
adc
mov
enter
sar
pop
test
xor
xchg
cli
test
ret
dec
aaa
aas
xor
adc
adc
popa
sar
cmp
cmp
and
shr
or
adc
repz
push
or
push
mov
pop
dec
mov
dec
cmp
sub
decb
and
push
scas
je
mov
push
mov
jne
xor
int
push
call
fstpl
subl
cmp
repnz
popf
jb
test
or
repz
xchg
inc
sahf
add
push
xor
and
mov
ljmp
cmp
inc
cmp
insl
xor
ret
pop
stos
leave
cmp
or
push
mov
xchg
ss
push
rorl
push
fistpl
sub
shrb
or
enter
sub
jo
and
xchg
fsubrl
push
out
fs
jl
in
idivl
outsb
sahf
or
xor
dec
jge
mov
or
or
mov
xchg
nop
cmpsb
data16
push
out
jmp
data16
imul
arpl
lea
jns
inc
mov
push
xor
push
xchg
mov
cmp
cmpsl
shrl
or
ljmp
mov
jmp
lcall
ret
mov
ja
cmp
ja
das
adc
ljmp
js
fldt
out
jbe
gs
mov
mov
push
insl
mov
dec
repnz
pop
push
push
mov
xor
stc
cmp
pop
inc
xchg
leave
frstor
stos
aad
jecxz
pop
sub
int3
push
xchg
fwait
insb
mov
in
gs
push
inc
aaa
adc
roll
popf
mov
pusha
adc
fnop
sahf
sbb
int3
pusha
pushw
iret
mov
pusha
addr16
adc
sbb
fwait
nop
push
iret
mov
cwtl
xchg
ja
xor
sbb
xchg
jmp
jae
xor
ss
hlt
xor
test
pop
pop
popa
in
cwtl
push
push
adc
cld
and
stos
adc
or
push
mov
mov
fidivrl
dec
jno
inc
inc
enter
sbb
lock
push
push
loope
mov
sbbb
jno
out
xchg
mov
add
jp
sub
std
ja
mull
mov
mov
jmp
push
aas
jge
dec
mov
xchg
cmpsl
cmp
inc
repnz
insb
cmp
ja
jecxz
scas
xor
mov
test
push
cmp
jns
les
js
xchg
lds
xchg
dec
pop
mov
push
pop
leave
stc
shrb
les
mov
aad
in
mov
jne
sar
mov
sub
mov
adc
sub
mov
mov
loop
inc
jnp
sub
mov
repnz
lea
mov
ja
loope
pop
mov
sti
ja
pop
sbb
mov
mov
loop
imul
inc
xchg
ss
ds
add
incl
fimull
rcll
push
add
mov
into
pusha
iret
stos
ljmp
mov
scas
aaa
add
int
sbb
jo
flds
mov
jb
out
push
mov
sbb
stos
mov
mov
and
add
pop
jbe
cmpsb
push
jno
add
mov
mov
ffreep
push
pop
sbb
add
inc
dec
in
mov
xor
cmp
shlb
mov
jo
in
and
mov
ret
sti
cmp
cmp
shrl
stos
adc
addb
nop
addr16
lea
push
test
ret
dec
filds
mov
dec
cmp
dec
aad
jae
push
outsl
popa
sbb
jmp
push
scas
inc
sbb
inc
cmp
lcall
mov
lahf
fstl
jo
and
and
fnsave
xchg
jbe
cmpsb
dec
sub
fprem1
mov
jmp
dec
jno
xor
xchg
orl
into
cmp
adc
scas
dec
push
out
test
jmp
cpuid
adc
addr16
or
cltd
ss
sub
aam
or
pop
rolb
les
sub
and
into
icebp
scas
mov
fdivrl
cmp
cmp
call
in
popa
jo
out
mov
gs
dec
pushf
pop
popf
rorl
js
movsb
arpl
cmp
mov
mov
or
jae
or
fwait
adc
ss
jge
pop
test
into
jle
and
repnz
outsb
xor
rclb
jb
mov
jns
mov
add
mov
xor
jo
rorb
mov
nop
push
mov
outsb
mov
dec
add
sub
addr16
jp
xchg
mov
ss
jo
repz
pop
arpl
sarl
in
sti
loope
ret
fwait
pop
push
roll
mov
jl
sahf
int3
jno
mov
outsl
cmp
mov
pop
adc
push
scas
lret
outsb
cmpsl
pop
or
outsl
mov
in
call
and
cwtl
test
inc
jp
push
xchg
push
in
pop
fstpt
fwait
sub
jae
jbe
mov
cmp
xchg
inc
aaa
mov
inc
lds
sbb
test
jae
inc
dec
push
lret
shld
xor
fadds
icebp
jge
pop
adc
repnz
or
adc
loop
sbb
inc
test
mov
pop
cltd
mov
jge
and
mov
pop
jl
sub
fwait
stc
adc
xchg
mov
adc
mov
test
xor
cmp
pusha
mov
cmp
stc
lds
ss
sbb
pushw
cmp
mov
push
cmpsl
stos
and
inc
lock
outsb
lret
xor
xor
sti
jp
push
mov
in
lea
xchg
xlat
arpl
pusha
mov
or
cs
lea
xor
imul
jle
dec
pop
fwait
ds
insl
std
push
inc
rcrb
cmc
lahf
test
sbb
pop
movsl
and
cmp
fwait
pusha
adc
push
jge
lahf
scas
adc
lea
dec
popf
into
sbb
mov
or
mov
pop
mov
and
dec
jle
adc
pop
stos
and
pop
mov
test
add
inc
adcb
ja
ss
adc
addl
jge
push
dec
cs
jge
sbb
or
pop
mov
shll
xor
xchg
test
lcall
push
dec
adc
xor
clc
pop
sub
sbb
cmp
adc
and
push
xor
xchg
jnp
loopne
cltd
hlt
xchg
addr16
mov
cmc
fnstsw
mov
push
movsb
sub
loop
push
sub
or
inc
dec
cltd
ja
pop
xchg
and
push
call
pop
rcll
or
xchg
imul
mov
fidivs
add
pop
lret
aas
imul
ret
inc
cmpsl
into
sub
mov
mov
sub
push
xchg
lods
dec
rcrb
dec
loop
xor
lds
inc
mov
stos
mov
jnp
or
call
pop
mov
cs
fnstenv
xor
daa
ljmp
cmp
idivb
pop
xchg
xor
jg
and
or
fdivs
in
leave
popf
sahf
mov
addr16
add
cld
sub
push
nop
jg
ljmp
and
jbe
mov
pop
jg
dec
enter
xor
test
mov
cmp
fldcw
je
sbb
in
loopne
sete
jns
int
mov
popf
xchg
sbb
add
data16
push
sub
sbb
stc
in
das
sahf
loopne
jecxz
stos
addr16
sub
push
in
push
inc
cmp
dec
sub
rol
cmp
cwtl
xor
jb
aam
dec
cmp
test
mov
ljmp
ret
mov
outsb
push
add
ret
and
cmpsb
cli
jbe
jns
xor
sub
pop
in
push
dec
xor
fwait
test
push
or
mov
sub
mov
cmp
fidivs
or
jmp
jle
aam
pop
xlat
pop
push
scas
pop
mov
sbb
icebp
insl
fnstcw
ficoml
mov
mov
in
or
jb
pop
pop
mov
lods
scas
ss
xor
sub
fs
ja
test
cmpsl
or
out
add
into
sbb
inc
add
aad
inc
push
push
adcl
ss
add
ja
dec
mov
sub
fistps
xor
push
cmpsl
or
and
aas
jg
dec
lods
cs
insb
push
pop
in
cs
push
dec
add
loope
into
dec
fldcw
iret
mov
dec
into
cmp
loop
lret
gs
push
jns
push
test
sub
push
mov
cld
nop
sbb
inc
or
lock
jno
shll
cmp
push
ja
jno
jecxz
mov
sahf
push
and
clc
inc
ss
xor
mov
pop
inc
mov
std
push
test
sbb
mov
shrl
lret
movsl
sub
je
xlat
clc
out
insb
leave
sub
sub
cmp
mov
xchg
cs
mov
ja
cmpsb
or
call
nop
adc
ss
cs
and
adc
xchg
loop
dec
mov
ja
test
jnp
pop
lret
pop
add
sbb
jo
push
popf
inc
add
rorb
shll
add
std
jae
scas
test
js
inc
jns
repz
push
push
iret
arpl
pop
out
les
ret
int3
cs
cmc
cmpsl
popf
push
mov
adc
pop
jbe
push
mov
insl
dec
mov
arpl
lods
dec
mov
jecxz
xchg
push
mov
ret
jl
int
enter
in
mov
xor
jo
je
xor
shrl
and
jmp
xor
ficoml
in
xlat
das
or
mov
ds
lods
dec
fwait
adc
xchg
lock
push
mov
push
push
dec
add
cmc
in
je
jb
adc
ja
call
cmp
or
or
hlt
push
pop
cmovo
push
xor
cs
push
orl
js
fidivrs
outsb
push
rorl
scas
call
cmpb
jle
out
push
xor
pop
jnp
shlb
push
cmpl
std
xlat
cmp
cmp
stos
push
jns
fists
mov
mov
mov
popa
addr16
xor
nop
adc
das
cmp
rcrl
test
adc
mov
sbb
jno
sarb
cwtl
test
lret
or
xchg
fld
dec
cmp
and
fnstenv
jnp
adc
shr
add
in
add
and
dec
into
lcall
cmp
xor
fisttpll
cmp
fldcw
pusha
out
add
das
loop
xor
jo
xor
imull
movsb
mov
flds
into
mov
jbe
fstps
cs
jbe
imul
push
ficoms
push
push
pop
adcb
and
xchg
dec
cs
push
and
adc
movaps
leave
lock
repz
repz
cmp
jecxz
test
addr16
mov
xchg
mov
jne
cmpl
mov
ja
mov
push
mov
adc
or
xchg
call
pop
data16
or
imul
cmc
nop
repnz
adc
push
dec
add
jbe
out
sub
ss
fwait
dec
fnstcw
loop
pop
push
jbe
test
cmp
popf
loope
add
mov
add
jl
js
jmp
sub
push
cmpsl
inc
push
mov
push
xchg
dec
ja
xchg
push
sub
inc
mov
push
mov
divl
cmp
and
mov
negb
out
aaa
es
popf
xor
sbb
jb
ja
data16
lock
cmp
fidivrs
les
add
sub
pop
test
jo
loopne
fsubl
mov
pop
mov
arpl
cmp
scas
cmp
add
xchg
cmp
xor
cmp
cmp
push
jne
ss
push
pop
andl
dec
sbbl
adc
xchg
mov
push
mov
inc
test
push
dec
and
sub
sub
push
push
and
push
hlt
stos
jge
mov
jmp
sbb
je
and
stc
mov
fbstp
popa
imul
jns
imul
lcall
cmp
dec
add
sbb
cmp
and
and
loope
mov
std
mov
ficoml
push
sub
stos
jle
sti
mov
dec
fstps
inc
mov
hlt
inc
sahf
fisttpl
mov
scas
outsb
cs
subl
mov
cs
push
and
mov
mov
pop
lcall
aad
aaa
pop
frstor
daa
push
ja
scas
mov
pop
jecxz
pop
addr16
sbb
sbb
psubq
cli
inc
lods
mov
fwait
push
insb
rcr
mov
mov
push
fdivrs
lcall
jle
cmp
adc
push
jns
cltd
pop
fisubl
xor
nop
clc
inc
cmc
loop
lods
mov
xor
push
cmp
cmpsb
mov
push
outsl
imul
inc
scas
pop
push
jge
jl
loope
xor
push
dec
lahf
inc
inc
sbb
dec
mov
mov
or
mov
test
wbinvd
lret
aas
add
pop
mov
pushf
loop
stc
enter
push
fwait
out
dec
pusha
xorb
jp
mov
std
mov
jg
mov
lds
pop
lods
lods
mov
xlat
mov
push
cmpsb
mov
mov
ficoml
jb
call
mov
xor
loope
mov
insb
mov
adcb
adc
lock
push
aaa
jl
sub
mov
aaa
sub
cmp
cmp
adc
dec
inc
sub
push
xchg
daa
adc
orb
inc
xchg
xor
jg
adc
add
jle
pop
sub
stos
mov
out
das
jg
xor
stos
mov
out
xor
xor
stos
mov
out
xor
xor
mov
out
xor
stos
loop
inc
aaa
mov
cmp
dec
inc
cmp
es
test
inc
outsb
dec
jae
sub
and
adc
nop
push
sbb
pushf
mov
push
pop
jns
ret
ljmp
adc
bound
insb
cmpsl
jp
inc
data16
cld
ja
xchg
xchg
bound
mov
pushf
sbb
mov
popa
and
pop
inc
mov
mov
jg
inc
xor
popa
out
cmpsl
jno
sub
ljmp
pushf
aad
repnz
and
pop
sbb
cmp
subl
adc
mov
add
pop
jge
enter
pop
loope
jb
add
je
mov
pop
nop
cmp
pop
out
xchg
nop
push
mov
cmp
and
pushf
dec
sub
xchg
pop
add
pop
in
push
cmp
adc
in
and
inc
dec
mov
lahf
dec
test
fwait
cmp
aad
xchg
ss
jge
test
or
push
enter
inc
aam
btcl
push
mov
mov
inc
inc
cli
aaa
subl
dec
ss
xchg
les
outsb
jge
mov
sub
or
sti
test
out
adc
push
mov
imul
test
paddb
pop
push
push
mov
push
jp
inc
ds
in
push
dec
hlt
or
divb
jp
sub
dec
dec
jge
or
pop
sub
sarl
or
nop
mov
add
ja
jge
scas
xor
mov
std
outsl
jae
clc
loope
iret
jne
mov
mov
pop
pop
loop
jne
scas
js
mov
out
push
in
and
cld
sub
add
std
mov
push
nop
adc
jbe
js
jbe
push
adc
xchg
data16
xor
ds
mov
mov
inc
leave
sbb
jae
ficomps
aas
popa
out
inc
repnz
inc
mov
popf
jb
aas
mov
or
das
insb
dec
into
cmpsl
and
add
mov
push
bswap
icebp
sub
ror
inc
push
fildll
lret
xor
adc
jp
cmp
jge
cmp
and
jns
sub
cmp
cs
aaa
sub
lret
movsb
data16
aaa
cmp
lods
scas
test
and
mov
push
mov
pop
outsb
inc
sbb
xlat
pushf
gs
sub
dec
fildl
ja
pushl
scas
je
pop
inc
mov
or
jne
or
cmp
sti
dec
mov
push
jge
push
loope
out
mov
into
cmp
adc
hlt
sahf
loope
mov
adc
mov
sahf
push
pop
hlt
sub
nop
aam
mov
movsb
mov
inc
mov
mov
and
push
jmp
inc
aam
shll
push
inc
jno
and
xchg
cmpb
and
inc
push
in
mov
fistl
nop
test
sbb
pop
imul
lret
fs
icebp
int3
into
scas
scas
jge
sub
aaa
mov
mov
movsl
inc
jbe
dec
xor
cmpsl
jno
xor
adc
test
sbb
ss
push
adc
push
int3
add
test
int
scas
outsb
jmp
push
push
aad
cmpsl
jne
xchg
in
aas
popa
inc
test
inc
ret
xchg
mov
cwtl
test
mov
adc
sub
rcrl
xchg
and
mov
arpl
sbb
leave
inc
mov
popf
lock
inc
out
cmp
rcll
test
or
gs
je
loopne
jo
aad
and
std
pop
and
outsb
inc
jp
sbb
and
jo
scas
scas
push
push
jle
fdivrp
adc
iret
lret
sarb
aad
ss
cmp
loope
xchg
scas
ss
cs
pop
sub
pusha
sbb
pop
adc
aad
pop
call
mov
xchg
push
out
loop
push
cmpsb
cmp
int3
inc
addr16
dec
jne
mov
les
mov
adcb
mov
sbb
test
cmp
aaa
pop
cmp
mov
dec
mov
mov
inc
mov
mov
jmp
das
inc
xlat
outsb
mov
fnstsw
test
mov
insl
mov
das
pop
ss
mov
sarl
cmp
cmp
inc
aad
cltd
popa
mov
imul
setne
sbb
fdivs
out
scas
lock
push
pop
fsubrl
push
mov
xorl
mov
ret
push
aam
inc
lds
arpl
add
jns
push
mov
sub
fwait
jnp
sub
scas
xchg
inc
mov
pushf
xor
shlb
sub
jg
divl
jns
addr16
enter
inc
sbb
inc
mov
outsb
imul
fwait
enter
cmp
lcall
sbb
jecxz
xor
out
xor
dec
dec
sub
arpl
ret
hlt
push
fiadds
jo
fs
loope
push
cld
shrl
jae
xor
in
dec
add
add
in
mov
jno
jns
mov
int
sub
sub
pop
xor
pop
xlat
rcr
pop
cltd
mov
add
dec
in
jl
sub
pop
outsb
pop
xchg
jnp
push
movsb
dec
fwait
roll
dec
push
shrl
inc
lret
fimull
sbb
mov
das
adc
lock
or
mov
pop
inc
lods
shlb
shlb
add
xor
jo
in
sbb
outsl
and
adc
stc
icebp
and
inc
pop
push
nop
inc
andl
insb
xchg
fildl
pop
stc
and
inc
packssdw
mov
sub
inc
inc
fsubs
dec
shrl
jbe
imulb
adc
mov
movsb
cmp
icebp
outsl
je
stos
pushf
jp
lea
ret
pop
loope
into
dec
pop
inc
ja
cmp
adc
arpl
ljmp
push
xchg
xor
and
xchg
push
xchg
xor
arpl
jo
jmp
aad
lret
jl
data16
adc
std
rcll
lcall
jns
and
inc
mov
in
sahf
fidivrl
stos
mov
lods
add
daa
test
sbb
cmp
and
fs
mov
js
call
add
int
in
xchg
dec
push
lds
dec
xchg
push
cmp
sbb
movsb
mov
nop
sub
cltd
cmp
dec
icebp
fwait
mov
jge
jnp
jp
aad
jmp
loopne
xor
pop
cmp
aad
jne
leave
inc
lock
idivl
sub
pop
pop
dec
and
in
xlat
out
insb
dec
push
xchg
sub
and
out
mov
mov
cmc
jnp
xor
mov
daa
movsb
loop
int3
scas
mov
or
call
mov
fstps
gs
loop
sbbb
inc
xchg
jnp
add
icebp
stc
cmp
or
pop
das
enter
cmp
dec
mov
xor
cmp
xor
and
mov
add
inc
scas
push
adc
popf
jb,pn
dec
sti
rcrl
xor
pop
cs
cmpb
scas
and
push
daa
nop
sub
xor
aaa
xchg
mov
mov
dec
cpuid
shl
sarb
mov
sbb
add
mov
test
or
enter
orl
andl
out
dec
lret
jns
call
daa
std
dec
xlat
and
jl
lods
xor
andb
pop
and
push
jnp
mov
mov
xor
jno
jl
scas
push
fmuls
jecxz
mov
insb
and
lcall
pop
int3
and
inc
enter
cmpl
push
jge
push
adc
ret
mov
cmpsb
mov
jns
xchg
sarb
or
daa
subb
loop
mov
jo
cmpsl
in
dec
mov
jns
mov
shr
adc
out
xchg
in
icebp
cmp
sub
mov
lods
jns
inc
data16
nop
xchg
jb
cmpsl
ja
xchg
fwait
mov
mov
nop
hlt
xchg
sub
dec
shll
cmp
pop
imul
cmp
mov
pop
push
adc
test
pop
mov
js
sub
js
popa
mov
loopne
or
shr
adc
mov
data16
inc
sub
pop
test
xchg
pop
dec
nop
mov
dec
arpl
in
lret
mov
and
mov
and
aad
push
out
jmp
imul
loopne
popa
mov
repnz
lea
mov
gs
fwait
inc
pop
or
lock
pop
and
mov
xor
in
and
dec
cmc
in
sbb
unpcklps
jecxz
cmp
leave
fcoms
xchg
push
push
imul
cs
fdiv
lcall
and
mov
xor
outsl
push
negl
bound
out
adc
mov
lods
cmp
testb
scas
sbb
and
or
popf
into
imul
fcompl
jo
jg
insl
fs
scas
push
mov
sub
fisttpll
mov
and
cmp
cmpsb
dec
mov
outsb
mov
pushf
pop
sahf
loopne
push
in
xchg
cmp
mov
inc
pop
jl
cmp
push
daa
jbe
xor
mov
hlt
aad
sub
sub
in
inc
mov
popa
aad
xchg
aas
imul
movsl
jmp
push
mov
andl
and
adc
jno
mov
pop
cli
fdivs
cmpsb
sub
sub
lea
mov
fldt
inc
xor
xor
push
push
mov
push
push
inc
push
push
je
repnz
dec
insb
adc
popa
insb
mov
or
mov
test
jmp
incb
push
mov
pop
shr
jmp
arpl
push
push
out
xor
sbb
sub
scas
fnsave
cs
xor
push
and
and
mov
xchg
fidivl
jbe
xor
bound
lret
inc
out
push
mov
stos
sbb
fidivrs
mov
out
pop
mov
stos
testb
lods
nop
jp
lods
push
dec
fcmovne
inc
sub
mov
xor
dec
mov
ja
lods
in
subb
movsl
loop
push
movsl
pop
gs
cltd
pop
inc
pop
shrb
push
dec
inc
daa
sbb
mov
cmp
push
aas
sbbl
ja
push
and
cmp
and
mov
loope
xor
pop
fldcw
inc
loopne
pop
push
cs
mov
jno
je
in
sub
mov
bound
out
dec
and
xchg
mov
cli
jp
sbb
pop
cld
jg
or
pop
add
stos
je
push
mov
jo
iret
pushf
lcall
jno
ds
and
das
xchg
mov
push
xchg
mov
cmc
pop
loope
sub
scas
ja
aad
lods
scas
adc
push
bswap
movsl
mov
lret
out
pop
jns
dec
or
icebp
ljmp
adc
ds
adc
lock
aas
pop
aaa
push
loop
stos
push
sbb
fildl
loop
lahf
push
inc
dec
pop
push
pop
adc
fidivl
jo
jno
mov
pushf
adcb
outsl
stos
outsl
aas
cmp
in
xchg
mov
or
sub
push
dec
push
test
sub
inc
sub
fwait
and
and
inc
hlt
daa
mov
xorb
pop
stos
xchg
mov
movsb
shlb
mov
push
jp
movsb
js
jno
scas
insb
outsb
push
test
push
inc
call
sub
mov
add
xlat
mov
enter
pop
out
pop
xchg
inc
out
stos
sub
xor
xor
out
fisttpl
inc
inc
pop
and
adc
or
call
fs
push
in
sti
dec
xor
hlt
jo
test
icebp
decl
dec
cmpb
inc
popl
add
in
cmp
mov
adc
and
pop
push
mov
outsl
adc
movsb
loop
scas
pop
jno
ss
cld
sahf
mov
scas
xchg
adc
lock
xor
test
lret
xchg
push
rolb
jbe
mov
fstl
jmp
or
data16
test
sub
mov
sti
adc
adc
inc
neg
ds
popa
mov
mov
push
mov
sbb
dec
aaa
push
les
ret
stc
shlb
fldl
lods
push
lods
cmpsl
cmpsl
adc
pop
cmp
stc
inc
push
jp
inc
mov
imul
aam
and
ljmp
enter
xor
push
fsubrs
sub
leave
sub
bound
fldl
jbe
xchg
fstl
jp
imul
stc
ret
push
dec
lret
mov
pop
pop
stc
push
dec
sub
push
mov
mov
ss
xchg
movb
and
dec
mov
aam
call
lahf
jae
add
sub
push
mov
lahf
cmp
cmp
add
jne
mov
cmc
mov
sub
push
xchg
cmp
add
shll
sbbb
lret
cmp
sub
mov
out
push
pop
mov
cmp
leave
dec
inc
jns
or
and
data16
sbb
scas
movsb
pop
or
xor
or
mov
xchg
sub
jae
cli
cmp
mov
cmpsb
mov
and
xchg
mov
inc
jae
cs
pop
decl
dec
pop
test
or
ret
mov
sbb
scas
xchg
xor
fisttpl
pop
jbe
repz
rcl
sub
pop
dec
jmp
jg
push
mov
test
bound
vhaddps
cmpsb
jae
sub
mov
imul
das
push
lds
or
movsb
cmpsb
daa
sub
sub
lds
enter
xlat
or
and
push
fnstsw
fwait
scas
ja
iret
cmp
fldl
and
mov
adc
or
cmp
out
push
mov
cmp
mov
cmp
ljmp
in
and
cmpl
pushf
ret
inc
sub
pop
push
pop
pop
push
das
cmpb
test
jo
jecxz
cmp
jl
inc
bound
arpl
sub
mov
daa
fwait
pop
pusha
sub
and
sti
imul
dec
aaa
sub
add
mov
inc
popf
push
fnstsw
xor
sbb
fcmovb
or
daa
xchg
shrl
or
mov
lret
and
hlt
jp
inc
lcall
test
sbb
orb
icebp
mov
cmp
rorl
cmp
push
cwtl
loop
out
cmp
mov
test
mov
xor
mov
cmp
cmpsl
or
jo
lret
mov
push
scas
sbb
cmp
inc
cmpsl
cmp
inc
xorb
mov
imul
fs
xor
inc
ja
mov
mov
inc
cs
sbb
mov
push
and
mov
adc
rolb
pop
imul
inc
push
test
negl
insl
inc
popa
push
inc
imul
sub
sub
ljmp
cmp
rorl
cs
or
pop
pop
adc
lcall
dec
xor
sub
aam
enter
jo
das
test
adc
jns
dec
test
jo
xor
and
dec
and
imul
xchg
movsb
pop
movsl
lret
inc
lret
jl
cmp
sti
jne
ret
std
cmpsb
sbb
ret
lods
and
outsb
and
pop
mov
js
shl
fldcw
adc
xor
cmp
jmp
xchg
cmp
pop
movsb
enter
addl
lods
push
mov
cmpb
mov
push
jmp
cmp
mov
sahf
in
xchg
repz
jle
cmp
and
imul
shrl
or
insb
dec
and
sti
testl
push
mov
movl
or
movlps
push
arpl
jb
sub
fisubs
orl
and
xor
addl
stos
inc
outsb
movsb
cmc
sti
cmp
call
dec
shr
test
pop
and
xor
dec
jge
lret
push
sbb
imul
lcall
jne
pop
mov
inc
cwtl
subl
shll
sub
shl
lock
xor
fwait
lea
daa
jnp
loope
or
jno
push
testl
jb
cmp
fcmovbe
push
leave
clc
adc
cmp
xchg
push
je
into
or
in
mov
xchg
cli
ds
add
xchg
test
and
inc
sub
dec
xor
pop
sbb
ja
cmp
test
addr16
stc
and
test
pop
cmp
jecxz
in
mov
push
mov
inc
sbb
icebp
mov
fcmovnu
push
lods
mov
imul
in
movsl
into
xchg
fistl
loopne
adc
cmc
jno
or
jp
icebp
mov
push
jno
inc
call
pop
push
jmp
std
movsl
das
pop
add
hlt
cmp
aaa
ret
cmc
js
lcall
sub
sbb
mov
push
pop
cmp
into
mov
and
out
sub
addr16
xchg
jmp
jl
sbb
mov
sbb
in
mov
mov
sbb
cmp
addl
cmpsb
aaa
adc
sbb
sub
gs
xor
pop
mov
push
dec
fs
mov
mov
enter
jbe
ret
lds
fsts
loopne
xchg
adc
test
push
pusha
cmc
push
fwait
jp
inc
mov
cld
loop
mov
fiaddl
push
cmp
or
xor
cmpsb
test
pop
pop
bound
stc
push
mov
adc
mov
push
push
in
mov
sbb
imul
ja
cwtl
and
divps
lret
push
xchg
mov
je
loopne
jmp
jle
inc
pop
das
mov
jg
xchg
sbb
xor
push
in
hlt
inc
and
mov
push
cmovp
in
dec
lods
ljmp
ds
adc
and
adc
ret
test
jle
jecxz
jbe
rol
push
notb
ds
out
mov
adc
and
sub
sub
inc
jecxz
mull
mov
scas
data16
mov
inc
clts
in
jb,pn
out
jbe
ljmp
subb
imul
ss
adc
or
ljmp
pop
repnz
pop
dec
add
pop
xchg
cmp
sti
scas
out
push
or
pop
movsb
xchg
mov
sub
fists
cmp
stos
jecxz
and
lock
mov
sahf
stos
sub
imul
dec
push
inc
cs
jb
out
and
dec
adc
shlb
jmp
and
rorl
mov
rolb
fucomp
mov
push
dec
mov
sub
or
mov
pop
sbb
dec
or
sub
push
inc
add
pop
cmpsb
aas
stos
xor
mov
push
xchg
jl
and
push
lods
loope
jl
iret
mov
ret
inc
daa
jno
push
or
stc
data16
sbb
insb
and
pop
pop
stos
xor
mov
jmp
sahf
push
inc
daa
test
sarb
insb
out
call
or
daa
fwait
pusha
pusha
adc
out
inc
test
stos
mov
mov
ljmp
scas
add
imul
xor
insb
lcall
dec
mov
ds
xor
mov
and
cld
jo
sbb
mull
out
fnstsw
sub
and
in
xchg
stos
aam
out
fs
push
pop
push
mov
out
lock
pushf
adc
loopne
shrd
xor
cwtl
jge
mov
mov
mov
jge
roll
mov
arpl
jbe
push
dec
mov
das
push
loopne
and
mov
adcb
jl,pt
xlat
test
mov
add
add
pop
mov
jbe
fwait
inc
sub
sub
mov
outsl
push
test
pop
call
scas
cmpsl
inc
cmp
jl
or
inc
lea
imulb
les
shll
nop
imul
or
mov
jbe
and
cmp
mov
push
dec
das
xchg
mov
lea
inc
clc
popa
dec
popf
lahf
push
cltd
lods
lahf
cmp
mov
stos
add
daa
loopne
into
mov
and
adc
daa
scas
and
mov
data16
addl
add
push
ljmp
and
mov
push
push
and
mov
jne
popa
push
incl
pop
cmp
inc
mov
movsb
xor
ds
sub
xor
or
lds
cld
and
lock
call
inc
pop
xor
cmp
iret
xor
out
xchg
setns
or
cmpsl
pop
sub
xor
xchg
mov
ds
mov
pop
ss
mov
data16
scas
pop
xchg
aas
aas
in
aas
xor
inc
cmp
and
jne
and
jne
adc
mov
mov
es
mov
lcall
jecxz
mov
lods
jae
cmp
fildll
cmpsb
add
cld
fwait
inc
fisttpll
mov
test
dec
and
imul
sahf
ds
xor
sbb
sbb
mov
mov
sti
inc
ret
mov
push
sub
cltd
loopne,pt
pop
push
cmp
xchg
jno
mov
jp
loopne
clc
je
movsl
cltd
rcl
in
mov
rcrl
inc
mov
ret
mov
mov
pusha
sbbl
out
pop
lods
mov
lods
jne
jge
movq
out
out
lret
push
push
fisttpll
jg
sbb
scas
cs
xor
adc
cli
inc
cmp
jmp
xchg
bswap
jbe,pt
fisttps
mov
cwtl
pusha
mov
xor
test
cmp
push
fwait
jp
dec
xchg
dec
cli
out
xor
cmpsb
in
popa
push
les
leave
frstor
jge
ja
push
mov
push
in
jp
dec
push
and
xor
imul
inc
outsb
mov
call
sbb
and
jnp
jl
movb
sub
or
push
sub
test
xor
mov
cmp
call
lret
out
pop
inc
gs
bswap
xchg
add
test
shr
jnp
or
dec
das
ljmp
fbld
sbb
and
xor
add
inc
mov
insb
cmp
daa
and
mov
scas
xor
mov
xor
push
pusha
into
lret
jp
aas
lods
lret
push
xor
fs
and
inc
push
das
sub
stos
or
sub
pop
lcall
sete
cmp
mov
mov
or
sub
leave
aas
mov
lds
daa
sbb
pop
movsb
enter
ja
fs
mov
add
xor
lcall
dec
ljmp
jbe
scas
inc
outsb
mov
push
sbb
jecxz
insl
arpl
lds
xor
sub
jl
adc
lret
test
mov
push
fcoms
loope
pop
loopne
mov
adc
jle
rcl
sahf
push
xchg
push
fistpll
inc
jg
fdivl
shld
adc
enter
dec
int
dec
cmpsb
pop
scas
and
stos
jns
repnz
mov
lret
jnp
testl
cli
mull
js
xchg
ljmp
dec
dec
into
stos
inc
in
cmp
test
repnz
scas
stos
dec
mov
inc
mov
cmp
mov
mov
ret
aas
push
lret
jnp
sub
jge
and
movsb
enter
nop
cmp
sub
sub
cmp
adc
inc
jno
pop
scas
jae
jl,pt
push
ret
jp
into
fcomip
arpl
test
sahf
test
aaa
xchg
fwait
jge
or
popf
push
sti
in
dec
mov
dec
imul
dec
outsb
pusha
lea
mov
ljmp
push
sub
xlat
stos
mov
xor
or
push
xchg
lret
out
mov
out
xor
push
out
clc
jns
clc
xor
cmpsl
mov
lds
pushf
lahf
xor
jo
fs
pop
adc
inc
jnp
xchg
sub
test
aaa
loope
or
cwtl
cmp
outsb
jo
mov
lahf
mov
jmp
insl
ds
out
sub
mov
mov
mov
in
lret
cmp
push
cmp
xchg
fsubl
xor
in
ds
push
xor
pop
mov
cs
leave
rcrb
call
dec
in
fdivs
dec
mov
and
outsl
jo,pn
jne
std
lds
lds
iret
mov
lds
mov
ret
jl
icebp
sbb
mov
aad
push
aad
or
dec
popa
out
adc
mov
and
arpl
ret
scas
add
cmc
adc
lds
jl
push
mov
or
addb
cwtl
sub
mov
and
and
into
data16
stos
jp
sub
rcrb
ret
mov
ja
lret
jge
mov
push
jp
stos
stos
adc
sbb
in
xchg
bound
mov
cmpb
xchg
mov
pusha
push
pcmpeqb
dec
add
inc
xor
push
xor
sub
lcall
pusha
jns
pop
loope
andb
ja
sub
outsb
ss
pop
paddd
sbbl
mov
in
stos
outsl
addr16
jl
push
jp
xor
scas
fwait
int3
pop
inc
and
fwait
inc
cmp
sub
fisttpll
gs
fwait
testl
and
insb
pop
push
xorl
jl
mov
movsl
pop
inc
and
mov
xor
sbb
insb
scas
jns
push
cli
dec
outsl
cli
fs
roll
mov
and
xchg
cmp
test
movsb
xor
in
mov
ss
in
push
dec
mov
rcrl
adc
adc
push
sbb
dec
xor
inc
frstor
push
jg
dec
dec
ljmp
cmp
or
adc
lcall
sbb
das
push
and
lea
stc
call
andl
out
cmp
fwait
aas
decb
fdivrl
outsb
inc
movsl
pop
or
cmp
cwtl
adc
aad
xchg
dec
dec
sbb
pop
dec
cmp
aas
dec
mov
dec
imul
pmaddwd
mov
stos
fbstp
cmp
inc
mov
js
xchg
mov
inc
ficoml
xlat
lds
adc
fsubs
jecxz
fs
push
add
ss
fstpt
dec
in
mov
ss
sub
mov
or
mov
mov
jo
jecxz
test
loop
icebp
cmp
add
cli
adc
pop
dec
je
pop
popf
pop
push
into
popl
or
fwait
das
sub
shlb
ljmp
sub
pushw
sub
or
cli
in
cmp
popf
jp
cmp
enter
sub
and
cmpsl
mov
daa
sets
sbbb
imul
adc
pop
aad
data16
shll
push
into
fstps
ljmp
xchg
sub
insb
dec
stos
cmp
out
les
shrb
out
push
iret
pop
arpl
cmp
dec
in
mov
nop
lea
jp
lock
xor
mov
or
daa
mov
js
aad
lds
outsb
out
mov
ret
fwait
rorl
and
rorb
aad
pop
outsb
loopne
mov
mov
or
movsb
jmp
ficoms
dec
jl
mov
inc
dec
jmp
or
cld
xchg
sbbb
cmpsb
dec
or
pop
xchg
xchg
int3
out
jo
icebp
adcl
jl
and
push
sub
inc
push
jbe
daa
loope
mov
pop
sar
jbe
in
and
adc
sbb
scas
imul
push
movsl
daa
sbb
mov
cmpsl
dec
scas
sub
jne
hlt
enter
adc
in
xor
cwtl
xor
lret
dec
and
adc
xor
loopne
jl
jno
out
jae
nop
push
xchg
cmpl
and
xlat
ret
push
and
push
rcl
push
mov
rclb
mov
imul
mov
pop
jecxz
fnstenv
mov
out
adc
mov
xchg
hlt
push
enter
push
pop
mov
jmp
shlb
mov
movl
and
pop
inc
mov
cmp
scas
loopne
stc
scas
jmp
jne
loopne
pop
mov
jl
mov
push
adc
stc
mov
dec
xchg
pop
movsb
sub
xchg
jl
shll
cmp
mov
push
dec
mov
mov
or
fimull
je
stc
pop
mov
cmp
daa
cmpsl
ljmp
sbb
out
push
sbb
jae
mov
clc
jp
xor
scas
stos
shll
dec
insl
daa
mov
mov
bound
pop
mov
adc
jmp
and
xor
pop
sub
aaa
dec
jbe
push
jno
daa
daa
pop
out
imul
test
sbb
sub
scas
je
lcall
das
idivb
fs
and
mov
addr16
imul
aaa
aas
sub
call
call
jns
push
pop
shlb
sub
pop
adc
xor
fsubrl
out
jbe
ss
jmp
loope
xchg
mov
fistpl
and
mov
aad
adc
aam
push
pop
pushf
jb
jns
stos
popf
loop,pt
cmp
dec
jl
jns
ds
fwait
xor
xor
mov
push
push
mov
aaa
ficoml
in
test
inc
sti
mov
cmp
mov
lea
insb
stos
jge
rep
gs
mov
sti
mov
fdiv
enter
popa
push
lret
mov
jae
jbe
sub
mov
out
pop
pop
sbb
leave
mov
sub
xchg
or
add
stos
sbb
or
mov
movsb
inc
pop
rcl
mov
sub
pop
imul
mov
cmp
das
pop
push
stc
mov
xor
dec
dec
push
lods
mov
stc
ja
in
adc
cmp
fisubl
pop
sub
mov
movsb
cmpsl
jecxz
xorl
pop
push
mov
scas
cmpsl
push
daa
rcll
stos
ficompl
mov
aad
subl
inc
lea
cmp
in
sbb
jnp
out
imul
loop
ljmp
inc
loop
push
and
pop
push
push
cld
pushl
pop
sahf
cwtl
mov
mov
push
movsl
call
ss
jne
scas
in
mov
add
inc
js
adc
test
cmp
enter
cmpsl
in
mov
cs
shlb
pop
adc
fsubrp
xor
popf
jne
sti
sahf
daa
cmpsl
and
or
cmp
lds
xchg
dec
push
adc
mov
push
lret
inc
push
pop
lret
adc
hlt
jmp
testl
cwtl
xor
mov
inc
push
jmp
adc
imul
frstor
push
and
xor
add
test
sub
xor
enter
mov
fimull
insl
mov
mov
dec
cwtl
sbb
cmp
aaa
lods
dec
int
inc
test
aad
mov
lds
je
cmp
mov
fbstp
shl
inc
jae,pt
dec
bnd
jg
push
pop
cmp
imul
xchg
add
mov
lea
fwait
lahf
sub
push
xor
int3
std
adc
dec
lret
and
out
pop
in
lcall
adc
push
fldl
sbb
xchg
mov
hlt
ja
mov
xor
pop
inc
shll
outsl
js
add
lods
mov
lock
mov
stos
cwtl
rcll
push
mov
into
or
jns
rolb
mov
fisubl
xor
jmp
sub
push
mov
loop
cld
adc
popf
jl
lock
outsl
and
leave
jo
repz
iret
ljmp
dec
cli
adc
dec
jmp
pop
cmpsb
cmp
push
mov
jmp
loop
sbbl
jne
mov
std
dec
aam
mov
pop
jbe
nop
aaa
lock
adc
fistl
dec
jno
jp
int
bound
inc
push
aad
and
and
pop
clc
jmp
xor
pop
jnp
push
testl
sbb
stos
stc
addr16
jae
xor
adc
pop
dec
mov
inc
xor
out
adc
sbb
jl
mov
xor
xorl
fldcw
out
fwait
not
scas
cwtl
gs
pop
sub
imul
out
mov
fildll
ret
movsb
jle,pn
xor
je
ror
push
sbb
or
cmp
sub
popf
or
je
lret
ret
leave
inc
dec
outsb
rolb
xor
imul
jnp
fstp
lcall
adc
imul
leave
xchg
push
pop
pop
pop
cmc
xor
xor
mov
sarb
mov
mov
pushf
or
popf
jbe
pop
push
les
stc
mov
xchg
xor
push
lods
imul
aas
sbb
imul
cwtl
mov
loope
xor
movsb
lret
stc
repz
scas
cmpsl
xor
sbb
and
jns
outsl
imul
and
jnp,pt
mov
cmpsb
sub
insb
fnstenv
push
push
xor
mov
jmp
dec
cmp
inc
fistl
jp
dec
test
push
icebp
mov
loope
push
push
inc
scas
stos
adcb
gs
cltd
inc
fwait
xchg
cmp
mov
mov
push
mov
inc
lock
or
sbb
mov
pop
sbb
std
cmp
leave
pop
dec
and
push
lcall
fisubrl
jp
flds
xchg
sti
xchg
inc
mov
jns
loopne
popf
mov
sbb
push
cmp
dec
dec
pop
dec
imul
sbb
or
adc
in
push
xor
repz
dec
push
mov
cli
gs
push
jo
repz
push
imul
addr16
loopne
aam
jne
das
cli
clc
addr16
xor
and
xor
xor
pusha
gs
mov
inc
divb
cmpsl
mov
sar
aam
cmp
outsl
push
shll
test
popa
push
fucomp
push
test
sub
jle
xor
xor
faddl
cmpsl
shrb
pushf
pop
je
add
lcall
jbe
data16
test
mov
pushf
and
mov
imul
gs
push
out
xor
stos
dec
mov
cmpsl
sbb
adc
in
inc
lcall
leave
dec
in
xor
mov
dec
scas
stos
enter
mov
movsl
cmp
sahf
cmp
in
test
aas
xchg
inc
cmp
adc
fdivs
jne
fcoml
pop
and
push
jb
outsl
mov
xor
sub
jecxz
xchg
mov
imul
daa
xchg
jmp
xchg
xchg
mov
mov
inc
pop
cwtl
inc
pusha
cmp
inc
fldcw
push
xchg
and
stc
adc
adc
and
push
das
repz
orl
dec
in
xchg
sub
in
mov
jge
arpl
jp
cmc
fstpt
outsl
sti
ss
mov
test
push
addl
into
arpl
pop
push
movsl
ret
and
mov
and
ficoml
push
mov
cmp
push
cmp
jnp
mov
jno
pop
test
pop
dec
fwait
movsb
and
call
cmp
stos
cmp
data16
jnp
cwtl
jge
lods
sbb
fdivrl
aas
sbb
out
cwtl
jo
aam
lcall
jo
aam
pushf
out
dec
lcall
mov
frstor
cmp
sbb
pop
mov
pop
mov
jae
cmp
scas
push
jo
sub
jb
or
mov
jge
or
jg
xchg
add
push
dec
pop
fidivs
ja
test
ret
pushl
aad
sbb
xchg
outsb
je
sub
mov
sbb
cmp
in
xor
sbb
xchg
test
fwait
scas
mov
or
or
scas
popf
and
mov
ficomps
and
or
mov
rcll
imul
aaa
jl
lret
jp
mov
insb
int
sub
dec
pushl
fisubrl
and
fnsave
sahf
cmc
fwait
jbe
decb
dec
and
sbbb
cmp
mov
das
push
dec
insl
and
push
xor
out
push
push
mov
in
xchg
stos
push
xchg
daa
es
push
push
in
xor
loop
mov
test
jnp
cmpl
clc
mov
pop
add
aas
xchg
or
cmp
rcrb
cmp
cwtl
fbstp
push
jnp
add
cmp
pop
xor
sbb
arpl
dec
in
cld
ss
jge
adcl
cmpsb
dec
pop
outsl
dec
sub
daa
test
jnp
dec
cmpsl
enter
jl
das
xor
sbb
imul
lods
sbb
or
ss
lahf
sub
jbe
jo
adc
dec
loopne
xchg
mov
adc
fwait
adc
andl
inc
inc
push
lods
imul
lcall
divl
inc
mov
ficoms
cmp
inc
cmp
jmp
mov
mov
outsb
pop
jbe
xchg
enter
dec
mov
and
xchg
jno
jmp
xchg
out
stc
adc
rep
jle
or
dec
incl
cs
or
gs
in
and
jb
lods
test
inc
out
xchg
mov
test
push
fwait
inc
inc
mov
sbbb
jmp
cwtl
shrd
add
pmulhuw
sub
mov
inc
into
sub
dec
dec
scas
cmpb
movsl
mov
icebp
sbb
dec
notl
mov
test
stos
or
xor
mov
push
int3
vmovshdup
mov
test
repnz
nop
adc
daa
aad
test
rclb
cmp
mov
mov
or
cmp
xchg
cmp
push
add
lret
mov
mov
dec
test
out
pop
cli
sbb
push
fwait
lea
sub
xor
mov
xor
rcrb
int
add
nop
push
daa
scas
insl
ss
loopne
out
push
stc
cmpsl
cmp
cs
jge
fdivl
or
push
cmp
das
fwait
push
imul
rorl
xor
int3
das
xchg
xchg
gs
aaa
out
cs
adcb
or
js
adc
pusha
mov
jno
dec
arpl
cmp
fistl
mov
icebp
cmpl
lcall
jbe
add
inc
cmp
push
mov
aaa
inc
add
test
cmp
cld
out
test
push
jns
and
mov
lcall
and
dec
outsl
addr16
add
pop
push
das
fwait
sub
ljmp
sahf
lock
jns
test
popf
xchg
cld
xchg
xor
xlat
ss
jne
xchg
push
xor
fwait
lret
push
jbe
and
sbb
pusha
add
std
jmp
out
cltd
mov
push
mov
push
jb
unpckhps
frstor
push
push
add
stos
cmp
loop
leave
pop
mov
mov
in
lcall
mov
addl
popa
mov
mov
add
test
add
fcoml
cli
lods
jne
jbe
push
ret
jnp
in
lahf
mov
and
test
mov
or
inc
data16
push
je
std
mov
xor
mov
dec
mov
and
cmc
dec
enter
das
sarl
xor
mov
gs
inc
pop
sub
lcall
scas
xor
dec
cmpsl
out
lds
lds
or
fcoml
sarl
lods
xor
lds
addr16
cmpsl
in
imul
jmp
and
into
test
and
mov
push
fldenv
arpl
xchg
js
test
roll
cld
and
dec
andl
test
imul
jle
rcl
jge
xchg
cmp
lcall
push
iret
cmpsl
jnp
sub
test
push
adc
imul
jg
daa
nop
and
js
jae
adc
imul
cmc
fidivrl
ljmp
insl
sbb
mov
mov
movsl
mov
je
lods
push
movsb
push
outsb
lods
push
push
push
push
outsb
stos
jg
aaa
jecxz
xor
push
shlb
or
jg
pop
ja
ret
dec
test
cli
fwait
mov
pop
mov
test
push
test
fsubl
fimuls
arpl
movsb
inc
or
xor
inc
xchg
jecxz
mov
push
adc
and
jae
lahf
push
mov
mov
inc
mov
leave
pusha
and
aas
dec
mov
cltd
cltd
xor
cs
cs
sub
mov
add
int3
dec
cs
cmpsl
punpckhwd
and
xor
xor
add
popf
cmp
enter
bnd
mov
adc
dec
push
jmp
adc
cmpsl
xor
loopne
cli
sub
adc
push
ss
cmp
lds
ret
cld
loope
lods
jle
cmp
jge
push
pusha
ss
sbb
jl
test
push
jecxz
dec
pop
pop
dec
inc
call
push
lret
arpl
jns
mov
lcall
jo
and
mov
adc
in
dec
test
xchg
imul
dec
outsl
leave
sub
adc
dec
lcall
push
adc
and
test
xchg
fs
xor
in
stos
or
and
push
cs
add
outsl
cmp
sub
mov
sub
sti
popa
imul
xor
test
push
repnz
test
mov
mov
xchg
jg
push
movsl
movsl
outsl
scas
daa
fwait
inc
and
test
imul
test
push
add
mov
outsl
push
ret
jge
in
arpl
cmpsb
test
cmpsl
andb
test
sbb
or
jbe
xlat
add
push
and
mov
clc
or
sbb
fdivl
pusha
std
mov
xlat
sbb
xchg
dec
sub
push
xchg
jl
popa
fnsave
pop
mov
dec
subb
psrld
out
cmp
inc
jmp
das
and
outsl
jns
mov
cmpsb
pop
xchg
scas
pusha
mov
jo
out
dec
stos
inc
outsb
push
xchg
dec
fwait
jb
test
arpl
ret
and
mov
push
and
bound
mov
mov
or
data16
testl
adc
dec
jbe
xchg
ljmp
xor
and
lret
xchg
jo
aad
inc
fs
out
cmpsb
and
in
dec
lcall
daa
mov
mov
outsb
cmovb
stos
jecxz
lret
inc
popa
push
hlt
push
jle
loopne
dec
fdivr
jl
cli
je
leave
mov
xchg
ja
mov
enter
push
and
mov
jo
roll
out
cs
fwait
sbb
jns
mov
js
js
inc
xchg
inc
addb
jo
je
sar
data16
xchg
icebp
test
cmp
push
fmull
daa
mov
repnz
sbb
jg
sbb
aad
sub
shrl
pop
popa
int
cmpl
js
xor
cmp
xor
and
mov
sub
mov
stc
dec
dec
incb
cmp
ret
push
or
stos
cmpsl
mov
add
mov
push
repz
inc
cmp
cmp
mov
fwait
push
mov
mov
in
dec
mov
jnp
push
lret
dec
push
push
add
mov
and
outsb
in
ret
imul
imul
jge
inc
dec
sbb
lea
leave
imul
test
std
dec
push
mov
andb
enter
ljmp
scas
stc
les
and
fwait
add
sahf
mov
mov
js
nop
sub
mov
xor
sub
jns
out
mov
adc
push
pop
jecxz
scas
inc
popa
out
push
mov
mov
mov
scas
in
sar
sbb
rcl
outsb
pop
cmp
cmc
jp
movsl
mov
pop
cmpsl
test
cmp
or
cmp
push
adc
push
dec
push
xor
ljmp
outsb
or
xor
fnstenv
mov
int3
divb
lods
lds
inc
nop
jl
cmp
inc
xor
mov
push
and
mov
lds
sar
inc
lds
cli
inc
jmp
and
pop
mov
sbb
dec
aaa
cmp
cltd
mov
push
scas
sub
pushl
lods
pop
jge
jne
push
bswap
and
push
inc
push
or
insl
xchg
ret
dec
mov
jmp
jbe
bound
mov
dec
cltd
addr16
and
test
mov
inc
cs
mov
jmp
mov
and
out
sti
mov
outsb
inc
das
cmp
inc
cmp
inc
ds
arpl
cmp
push
inc
sbb
sbbl
lahf
mov
lret
cltd
or
xlat
mov
cmp
adc
sbb
or
cmp
dec
ds
in
xchg
mov
out
js
sbb
or
jno
dec
mov
cli
call
ja
xor
mov
adc
push
mov
adc
adc
sbb
test
lret
mov
and
stos
mov
push
ucomiss
imul
movsl
mov
cmp
adc
ja
push
fs
pop
out
mov
test
sbb
bound
sbb
dec
cmp
cltd
sub
dec
or
mov
mov
test
and
out
in
daa
push
pushf
scas
addr16
pop
lds
lahf
mov
and
mov
mov
rorl
or
inc
daa
lods
fistpl
test
das
cmc
scas
pop
pop
aaa
jbe
ds
scas
test
das
and
in
sahf
mov
cs
cmp
mov
das
pop
add
ds
mov
add
aas
cs
int
inc
mov
scas
aaa
push
aas
cwtl
das
xchg
mov
shlb
xchg
add
das
cmpsb
sarl
mov
and
xor
mov
dec
xchg
mov
jb
insb
scas
mov
out
push
scas
push
das
mov
sub
dec
cmc
loope
pop
loop
xor
push
xchg
das
movsb
sbb
sub
dec
push
sub
sub
fwait
pop
sbb
and
inc
in
push
and
mov
das
mov
fs
inc
jl
dec
push
push
push
jb
cmpsl
fldt
pop
cwtl
ss
dec
add
cmp
aaa
loope
jp
ds
sbb
repnz
ss
aaa
dec
loope
add
mov
mov
inc
cmc
das
add
sbb
repnz
dec
cs
adc
sub
pop
push
aam
fimuls
sub
shlb
mov
sahf
push
mov
mov
in
fldcw
dec
arpl
mov
mov
sub
dec
dec
lods
into
and
aaa
pop
cs
mov
jp
stos
daa
ja
aaa
push
das
pop
dec
lahf
stos
sub
ljmp
fisubs
idivb
lret
in
scas
jb
pop
outsl
stos
icebp
das
in
and
imul
mov
xor
sub
mov
cmp
xchg
sub
pop
aam
inc
sub
call
int
cmp
dec
js,pn
push
sub
jbe
aas
fsubr
das
lock
cmp
aaa
pop
dec
lea
daa
data16
daa
dec
rcr
adc
mov
adc
aaa
int
pop
outsb
inc
xor
sub
das
cmp
jle
ss
cwtl
cs
sub
add
jle
aaa
adc
sub
dec
das
jns
mov
outsb
sbb
stos
loop
jns
sarl
xor
dec
hlt
jo
jle
repnz
iret
lahf
cli
jle
imulb
push
cmpsl
aas
ljmp
out
sub
or
pop
in
das
fnstenv
jle
mov
pop
jge
xchg
dec
mov
rol
fidivs
mov
and
sahf
dec
jmpw
dec
das
push
iret
ret
inc
jg
jp
mov
or
aas
lret
scas
inc
jecxz
sti
mov
mov
xor
scas
jg
mov
imul
push
aas
aam
loop
cs
push
cli
outsb
xchg
push
fdivrs
dec
lret
testb
mov
jp
pop
les
mov
jno
pusha
inc
jecxz
out
mov
adc
push
scas
jbe
in
dec
pushf
loopne
inc
adc
push
mov
shrb
aas
adc
das
mov
add
adc
sahf
sti
test
jmp
pop
mov
pop
aas
test
les
sti
xchg
data16
jl
std
call
stos
das
push
mov
dec
insl
imul
dec
xor
sub
jns
rorl
or
mov
xchg
and
repz
ret
inc
pusha
ffreep
sbb
dec
adc
push
negl
das
sbb
inc
push
pop
les
fwait
decl
inc
orl
push
inc
ret
aaa
mov
scas
cs
fisubrl
inc
and
outsb
xchg
cltd
cmc
aaa
mov
test
icebp
push
out
inc
mov
out
test
push
testb
xchg
and
dec
mov
dec
jmp
ret
cmpsb
sub
lret
inc
mov
or
addl
cmpsb
mov
das
pop
pop
cli
outsl
push
pop
add
inc
jecxz
repnz
or
lcall
mov
push
insb
cs
mov
inc
out
mov
movsb
out
push
push
scas
cs
aas
add
call
pop
xchg
out
das
jle
fnsave
out
icebp
scas
jg
repnz
mov
xorb
test
push
push
ret
sbb
inc
into
sub
fiaddl
lods
mov
adc
push
das
popl
jne
sub
pop
scas
sti
mov
mov
pop
mov
jb
mov
out
fisttpll
ja
jno
test
ficomps
leave
cmp
dec
movsb
ja
call
pop
das
inc
xchg
sub
push
mov
mov
adc
and
xchg
call
fimull
sub
push
xor
inc
mov
and
add
incb
mov
mov
dec
sub
jmp
loope
cli
in
push
adc
or
mov
or
sbb
adc
pop
in
jl,pt
imul
insl
cmp
cmp
hlt
sub
dec
stc
out
push
push
cs
mov
cmp
stc
into
mov
mov
and
insl
inc
aaa
lock
outsb
test
inc
xor
push
jl
daa
mov
ja
adc
or
je
jb
and
xorl
mov
inc
adc
sbb
or
push
mov
xchg
jp
add
and
mov
cmp
jnp
es
cmp
bound
inc
aaa
mov
jae
adc
mov
in
xchg
dec
out
cmp
out
inc
mov
aaa
push
pop
add
pop
xchg
test
sub
jp
out
aaa
ret
aas
inc
sbb
jbe
and
sbb
mov
mov
mov
sbbb
js
cltd
push
sbb
mov
int
lods
xor
sub
fwait
xlat
popf
and
sahf
pop
cmovge
jp
add
pushf
xor
push
mov
mov
mov
repz
inc
fwait
sbb
mov
mov
xchg
push
adc
lret
call
das
push
sub
dec
adc
pop
imul
jnp
ret
dec
sub
cltd
icebp
inc
jge
ljmp
sbb
inc
push
adc
lods
icebp
popf
scas
out
outsl
push
jge
or
fadds
push
jg
or
popf
mov
inc
dec
and
mov
arpl
adc
and
enter
in
lds
or
ret
cltd
and
out
or
push
jno
and
enter
or
data16
push
fidivs
inc
out
scas
pop
std
cmp
mov
cltd
sub
inc
loop
pop
sub
stos
shll
pop
xor
into
imul
push
enter
and
jae
mov
js,pn
dec
sub
cmp
inc
nop
sarl
mov
jno
jb
sbb
cs
push
movl
retw
pop
jle
add
sbb
stos
clc
mov
jmp
add
out
push
scas
mov
jb
push
int
xchg
sub
xor
fidivrl
push
cmp
test
jl
lcall
push
leave
lret
js
inc
and
scas
repz
mov
js
cmp
pop
into
inc
sub
int3
jge
and
jge
std
mov
adc
add
cmp
call
adc
push
xchg
nop
cmp
adc
jg
mull
mov
das
imulb
lods
xor
mov
push
and
ds
sahf
sub
outsb
test
xor
sarl
mov
nop
fistpl
je
rorl
popa
ljmp
push
je
lea
inc
insl
lods
xchg
hlt
divl
mov
sti
cld
loope
scas
test
pusha
pop
cmova
or
test
das
insb
cmp
std
push
dec
adc
in
and
in
adc
adc
sub
push
jp
inc
mov
xchg
and
imul
or
adc
nop
sub
jno
fcmovb
sbb
arpl
jle
sub
and
stos
ficoms
lcall
jge
jb
ljmp
cmc
loopne
inc
mov
sti
xor
ds
test
in
sbb
jge
cwtl
fistpll
sti
inc
and
es
out
aas
push
ljmp
and
dec
cmp
or
aad
adc
push
cmp
sub
push
mov
push
sbb
aam
or
jno
inc
popf
cltd
push
sub
xor
pop
iret
and
push
jbe
inc
jno
aas
mov
xchg
js
popf
push
scas
dec
cmp
test
push
or
ss
iret
jle
cmp
push
jl
push
ljmp
inc
add
jbe
xchg
test
xchg
fwait
in
out
dec
pop
jno
fyl2xp1
je
shll
pop
adc
adc
dec
jge
xchg
or
test
xor
movsb
pop
pop
mov
ss
pushf
inc
xchg
out
push
push
loopne
das
xchg
mov
jecxz
inc
xchg
ds
lds
out
enter
out
outsb
and
lret
scas
clc
and
cmp
aaa
insl
cltd
pop
adc
xor
inc
scas
ds
push
nop
xchg
pop
xor
jl
dec
push
scas
add
inc
fidivrl
jnp
jbe
push
ljmp
test
dec
fs
cmp
ja
jp
pop
rcrl
test
call
out
negl
pop
sbb
ja
lahf
pusha
fcoms
add
dec
push
push
loope
pop
dec
mov
in
rcrl
ljmp
popa
fiaddl
shlb
sbb
insb
test
aas
pop
data16
cmp
pop
push
jae
lcall
pop
les
cld
mov
movsb
fsubp
les
adc
mov
cmp
dec
popf
jno
and
xchg
shlb
pop
push
in
adc
nop
xor
mov
mov
inc
rcll
in
insl
pop
push
dec
and
xor
add
mov
movsb
out
sub
sub
dec
pop
sub
and
or
decl
daa
adc
nop
imul
or
imul
mov
arpl
ds
jns
insb
pop
mov
dec
adc
dec
inc
fwait
adc
sbb
popa
sub
sbb
mov
shrl
call
lcall
ljmp
je
mov
or
and
push
pop
das
add
nop
repz
sahf
cs
movsl
cld
iret
add
dec
aaa
or
adc
mov
jno
mov
xchg
scas
mov
inc
mov
testl
sub
mov
arpl
dec
adc
and
push
call
pop
jno
daa
cli
sub
repz
lcall
mov
es
je
subb
or
test
push
push
ret
enter
cmp
loope
dec
movsl
sbb
xlat
xor
and
flds
jecxz
adc
popa
aad
adc
push
adc
repnz
mov
ficoms
cmp
cmp
cmp
pop
cmpsl
and
ds
dec
jle
xorl
pop
mov
popa
jne
mov
dec
xchg
out
push
pop
jp
in
mov
mov
ljmp
inc
lcall
jecxz
dec
mov
rorb
adc
dec
xor
fs
lock
push
inc
jp
jle
jo
sbb
test
add
call
testl
cli
test
push
nop
xor
jg
push
jo
scas
int
out
adc
pop
lcall
popa
push
jle
mov
ja
and
lea
test
dec
aad
lret
mov
std
inc
inc
push
fnstsw
cs
lds
movsl
cmp
mov
lahf
push
mov
fildl
push
and
pop
mov
sub
insb
cmpb
addr16
std
leave
push
cmpsb
inc
sub
pop
pop
ret
out
sbb
add
out
dec
sbb
push
jno
mov
pop
lcall
sahf
inc
push
push
and
mov
int
mov
inc
nop
and
pop
jno
inc
mov
push
call
fwait
mov
mov
dec
xor
cmpsl
jge
push
mov
jle
test
popa
xor
ret
ljmp
mov
mov
cmp
mull
movsb
mov
pop
push
cli
mov
icebp
mov
popa
cld
or
stc
mov
ss
mov
adc
mov
mulb
inc
sub
in
and
pop
popa
pop
add
mov
mov
in
mov
mov
inc
jns
or
test
leave
outsl
dec
rsqrtps
pop
sub
filds
dec
jmp
setae
out
pop
and
icebp
mov
sbb
push
jle
icebp
xor
and
xchg
inc
mov
imul
push
push
mov
jne
js
scas
popa
sbb
push
ret
sub
hlt
mov
mov
cs
cmc
or
psubw
dec
notl
in
les
in
icebp
lea
ljmp
add
icebp
jge
ljmp
xor
outsb
mov
mov
js
imul
xor
arpl
movsb
popa
mulb
dec
jg
jnp
cmp
sbb
aam
in
inc
cmp
inc
jge
xor
scas
subl
push
add
mov
push
sub
xor
xor
lcall
dec
dec
cmp
jmp
and
cli
sar
mov
testl
jmp
jo
sbb
outsl
xor
movsb
push
nop
pusha
rclb
xchg
push
xchg
ja,pn
test
hlt
jmp
mov
test
dec
mov
std
mov
stos
int
lret
push
cld
pop
sbb
hlt
sbb
pop
jle
das
lret
mov
movsb
lcall
sbb
push
std
and
icebp
imul
andl
scas
cmp
daa
aaa
inc
dec
mov
les
cmpsb
mov
pop
adc
inc
clc
popa
inc
ss
popa
rcrb
xor
cmpsl
pop
mov
jg
mov
insl
jmp
popa
sahf
call
dec
andl
addb
adc
xchg
test
push
inc
shr
mov
lea
lret
fisubs
gs
jl
pop
xor
lcall
scas
cmc
sbb
imul
test
mov
jne
push
subl
aas
mov
in
sbb
shlb
xchg
addb
cltd
inc
jbe
ret
mov
daa
push
jl
mov
stos
inc
jnp
scas
add
icebp
mov
js
and
leave
ja
adc
lcall
stos
push
sbb
repz
pop
pusha
xchg
pop
les
mov
not
xor
sahf
mov
in
or
fbld
push
repz
dec
push
and
sub
adc
inc
mov
divb
push
cmpsl
dec
leave
mov
aam
push
enter
push
cmp
shl
ss
xchg
or
mov
push
int3
dec
xchg
pop
mov
arpl
jo
nop
xor
outsl
xchg
sbb
pop
jns
mov
jle
mov
mov
and
nop
loope
fildl
outsb
out
iret
cmp
aas
lret
fstpl
arpl
or
sti
enter
add
fs
addb
popa
addl
push
cmp
test
jle
pop
xchg
cmc
dec
cmp
je
adc
push
addl
and
xchg
inc
sub
inc
or
jg
mov
jmp
adc
in
cmp
or
aad
or
enter
mov
cmp
ss
nop
dec
popf
imul
cli
cmp
and
outsb
call
cmpsb
mov
frstor
mov
ret
addb
out
decl
jp
mov
sub
roll
push
cmp
mov
mov
pop
mov
fucompp
out
out
jno
in
out
xor
push
jle
js
orb
lcall
jns
inc
out
or
jnp
fsubl
push
jno
sar
fldcw
xor
pop
cmp
iret
in
push
out
cltd
cs
out
mov
and
insb
pusha
je
in
mov
sub
push
test
aas
xor
nop
sub
sbb
inc
test
cmp
ret
xchg
loopne
and
sbb
or
xor
sbb
inc
inc
sub
popa
out
mov
inc
mov
ljmp
sub
mov
test
and
lret
xor
pop
nop
push
stos
mov
push
xchg
lret
test
adc
dec
lret
xor
xor
inc
xor
cli
ss
push
push
cs
sbb
xor
lcall
push
add
rcr
ljmp
dec
or
gs
push
stos
lcall
or
dec
or
sub
sub
scas
int
push
sub
push
sub
inc
jecxz
xlat
xor
mov
test
jl
testb
push
push
jnp
jecxz
scas
inc
inc
pusha
or
in
insl
mov
and
xlat
mov
cmp
enter
data16
mov
pop
mov
cmpb
mov
push
adc
or
imul
sbb
imul
sbb
mov
mov
aas
or
popa
ds
and
dec
div
fwait
inc
cli
gs
stos
lcall
dec
sub
add
mov
sub
imulb
lods
loopne
cmpsl
in
aam
fidivs
push
pop
mov
mov
mov
inc
adc
jbe
pusha
leave
imul
push
pop
sti
adc
cmc
loopne
jae
arpl
lcall
add
and
dec
nop
cs
test
adc
dec
cmp
adcl
mov
mov
sarl
sbb
cmp
xor
ja
dec
sti
cmp
imul
add
outsl
mov
push
push
adc
int
arpl
pop
out
push
jge
js
sbb
out
popf
js
push
cmpsl
and
jmp
push
add
adc
fwait
lret
and
jns
outsl
or
push
inc
lcall
adc
pusha
inc
adc
jne
push
call
xchg
call
pop
or
jp
sub
fwait
lods
pop
psllq
adc
add
test
xchg
fbstp
ffree
dec
mov
add
ss
and
test
push
jmp
jnp
or
cmp
cli
cmp
std
cmp
movsl
and
pop
pop
sub
mov
outsl
sub
test
dec
sbb
js
jo
repz
push
xchg
sarb
mov
jg
cmp
cmp
int3
stc
ss
mov
loopne
cmp
cmp
popf
mov
or
js
pop
ljmp
into
jecxz
sub
out
loope
decb
pop
inc
lret
mov
xor
xor
mov
stos
std
mov
inc
ds
outsb
xchg
mov
and
int
mov
mov
add
fnstcw
jg
out
test
jbe
adc
pop
mov
in
inc
push
mov
jns
jmp
mov
das
mov
push
add
mov
jp
dec
aam
xor
sbb
addl
daa
sbb
xchg
cmp
push
dec
sti
hlt
dec
shll
mov
stos
int
stos
imul
scas
dec
xchg
aam
stos
cmp
xor
xchg
cmp
int3
push
cmp
xor
loopne
insl
cmp
ss
push
into
jbe
xchg
dec
jno
ja
push
out
out
push
mov
inc
dec
xor
ds
cmp
add
outsb
dec
das
or
xor
fwait
jg
dec
test
popf
in
and
sub
jge
ljmp
cmp
push
lret
mov
and
mov
mov
jp
dec
push
jnp
rorb
push
pop
inc
in
dec
movsl
or
and
cmpsb
test
movsb
lds
lret
cmp
cmp
and
and
test
ds
xchg
daa
mov
mov
ja
sub
je
ss
sbb
notl
data16
push
pop
insb
out
pop
dec
in
sbb
mov
push
mov
mov
outsl
fwait
dec
dec
nop
sub
in
jp
dec
xchg
out
pop
jge
fistpl
dec
and
cli
out
mov
push
pop
inc
sar
cmp
lcall
fwait
pushf
or
pusha
dec
sub
pop
or
pop
test
out
std
mov
jp
icebp
popf
rorl
adc
mov
jg
inc
adc
popf
sbb
mov
add
outsb
xor
aam
mov
decb
dec
pop
add
imul
stos
insb
int
das
aad
loop
xor
push
pop
sub
push
dec
sub
imul
mov
fdivs
sti
rol
adc
inc
jno
push
idivb
ret
cmpsb
loope
cmpsl
inc
sub
xchg
push
pop
out
out
xor
cmp
repnz
scas
dec
xor
xchg
lds
scas
dec
mov
popa
sub
jae
and
cmp
and
fstp
clc
inc
orl
fdivrp
data16
stos
sarb
push
into
jne
and
movsl
lahf
inc
roll
or
push
cmp
loopne
and
js
mov
pop
jbe
mov
and
fnstsw
inc
adc
and
xor
sub
imul
xor
cmp
adc
sub
sub
leave
int
orb
cmp
outsl
pand
lock
add
loope
je
xor
ret
nop
movsl
enter
or
lcall
pop
imul
clc
dec
mov
int3
cmp
cmp
shr
push
aaa
ret
mov
xchg
loope
xor
and
je
fists
jno
mov
mov
test
cmp
lods
icebp
iret
xchg
in
js
ret
mov
imul
ljmp
pop
xchg
frstors
jbe
sahf
sub
mov
add
dec
into
and
fisubrs
mov
insb
xchg
dec
pop
dec
inc
cmpb
mov
out
xchg
and
cli
jb
out
ficoml
ja
jbe
das
sub
mov
mov
push
sti
push
push
rcrb
push
and
aad
and
adc
jle
inc
dec
fimuls
mov
mov
icebp
sub
sahf
sbb
mov
xlat
pop
and
and
popa
jns
pop
jnp
ss
jno
daa
mov
sub
dec
push
lahf
xchg
push
mov
pop
sub
mov
outsl
xor
sub
push
adcb
lods
dec
or
jl
mov
xchg
pop
adc
out
adc
mov
in
jns
dec
das
sub
cmp
out
mov
outsb
jmp
push
mov
pop
jae
call
leave
je
and
adc
bound
add
jmp
incb
fsubrl
inc
push
xor
call
out
sub
rcpps
fwait
adc
rcrl
mov
dec
je
push
adc
and
inc
and
inc
xchg
dec
cs
xchg
jbe
fsubrs
mov
stos
sbb
sub
mov
jns,pn
cmpsb
pop
cld
mov
xor
push
mov
mov
and
jbe
test
mov
sub
lods
sbb
jp
push
mov
mov
mov
js
jnp
dec
jns
inc
mov
jecxz
and
test
xor
popf
and
mov
ss
enter
mov
push
push
movb
and
lock
sbb
xchg
adc
insl
lahf
cmp
movsb
mov
jle
dec
inc
cmp
pop
or
pusha
and
nop
sub
sbb
push
testl
push
rorb
mov
xor
mov
lret
jnp
divb
pop
leave
and
push
jmp
pusha
mov
dec
mov
test
repz
sbb
mov
jne
jns
out
testl
mov
jne
adc
scas
mov
sbb
inc
xchg
ja
aaa
cli
sub
call
jo
jbe
push
cltd
mov
dec
stos
inc
stos
mov
das
dec
mov
mov
xchg
mov
and
and
xorb
push
clc
inc
mov
mov
fildl
cmpsb
int3
or
das
mov
mov
test
subb
xchg
adc
dec
mov
push
or
das
inc
lcall
out
dec
inc
outsl
call
popf
and
mov
negl
dec
aad
movsb
mov
pop
lods
mov
or
loope
jo
jo
cmp
jb
hlt
cmp
movsl
incl
out
mov
and
push
test
xchg
cmp
cwtl
out
insl
xchg
popf
scas
ss
or
mov
adc
das
push
iret
sar
sbb
pop
mov
aas
jecxz
cmp
data16
lods
data16
mov
sub
sbb
scas
test
cld
jecxz
jbe
dec
in
lds
mov
movsl
lahf
aaa
push
cli
pop
mov
popa
pop
test
ss
outsb
mov
ja
lods
stos
mov
int3
ret
dec
pop
xor
outsl
test
movsb
dec
sti
xchg
dec
add
arpl
add
inc
and
out
popa
cmc
dec
mov
sub
and
cmpsb
imul
xor
mov
sub
mov
xchg
sub
gs
cmp
inc
aaa
dec
sub
cli
xor
and
xchg
sub
jp
and
nop
popa
lock
dec
stos
mov
pushf
sbbl
pushf
imul
and
sbb
mov
or
hlt
jg
pop
sbb
sub
sahf
mov
sbb
out
outsl
xor
idivb
pop
movsl
sbb
aaa
cmpsb
cmp
outsb
add
insl
test
and
lock
stc
inc
dec
cmp
cmp
mov
jno
call
test
ljmp
inc
sbb
push
adc
dec
lods
xor
lret
mov
mov
xor
lret
scas
imul
cmp
enter
mov
sub
orl
out
or
xor
cwtl
outsb
ds
repz
sub
cmp
jle
xor
sbb
lods
pop
mov
add
sbb
jb
xchg
mov
xchg
xor
jns
cmp
adc
sar
or
insb
out
sub
cmp
mov
cmp
test
mov
cmp
mov
popa
lock
mov
and
cmp
inc
stos
icebp
push
jns
test
enter
jmp
daa
popa
loopne
in
les
pushf
pop
ds
ret
test
xor
or
in
cmpsl
sahf
xorb
movsb
pop
call
insl
push
sub
mov
lods
cld
test
or
stos
lret
push
lcall
push
test
and
lcall
ljmp
addr16
mov
shll
aas
sbb
or
xor
repz
push
sbb
add
push
ss
mov
adc
addr16
xchg
es
cmp
loopne
xor
pusha
mov
mov
dec
cmc
cmp
push
dec
inc
scas
stos
xlat
je
dec
icebp
push
jnp
xor
sub
leave
jb
into
popa
mov
jecxz
xor
xchg
aas
daa
out
adc
adc
movsb
mov
in
xlat
cmpb
lcall
cmpsl
jl
out
inc
gs
cmp
dec
lcall
push
mov
cmpsl
ss
push
sbb
data16
push
jnp
imul
fistpl
jb
ss
dec
mov
xor
popf
imul
in
clc
push
inc
cmp
js
mov
xchg
cmp
outsb
cmpsb
enter
adcl
inc
int3
push
iret
lahf
jnp
pop
sub
das
stos
addl
push
pop
pop
int3
cmpsb
sub
xor
cmp
bound
push
sbb
xchg
ljmp
orl
mov
jp
out
sub
syscall
lock
test
sub
aaa
popl
test
cwtl
rorl
push
fs
pushf
adc
stos
or
and
inc
push
xor
mov
sub
xor
nop
sub
js,pt
ficoms
pusha
push
hlt
idivl
dec
loop
mov
and
in
ret
scas
ret
dec
xor
mov
lret
frstor
outsb
scas
cmp
inc
pop
cld
pop
pop
mov
enter
scas
jle
adc
mov
mov
call
addr16
jno
stos
mov
dec
dec
stos
cmp
cmp
or
addr16
xor
xor
push
xor
mov
pop
lcall
mov
jne
xchg
leave
mov
daa
rclb
shrb
push
rcrb
jo
jg
sub
nop
ret
mov
mov
xchg
lock
fisubs
popa
jmp
mov
cs
scas
rcr
jnp
xchg
mov
sahf
jno
leave
cmp
mov
ss
xchg
jg
shrb
push
sarl
lock
jl
xchg
stos
ss
out
push
jp
push
dec
mov
cld
pop
aas
pusha
xor
ljmp
scas
jne
sbb
cs
push
movsl
lods
add
test
mov
mov
aaa
mov
pop
les
shld
inc
mulb
cmpsl
test
push
fidivs
inc
dec
out
jnp
mov
jno
xchg
stos
inc
inc
das
mov
dec
jo
sbb
in
clc
rolb
push
sub
dec
and
dec
and
test
jbe
out
xor
jge
leave
ja
ret
mov
sbb
vpmacswd
sub
sub
sbb
xor
push
xor
aas
mov
scas
cs
inc
ds
mov
push
sub
out
sub
xor
outsb
jno
sbb
in
cwtl
cmp
pop
xor
scas
fwait
jne
adc
push
cmp
shll
in
jb
jge
cmpsl
imul
sub
stc
jg,pn
das
out
dec
sbb
ljmp
cli
xor
rolb
sbb
pusha
sbb
popa
pop
or
popa
in
ljmp
inc
sub
add
sub
push
nop
inc
xchg
mov
sar
inc
or
in
ds
rolb
mov
xorb
shrb
inc
inc
icebp
mov
sub
inc
mov
and
mov
mov
bound
jge
inc
sti
scas
insl
jb
je
and
movsb
dec
mov
jbe
push
ja
push
dec
push
fldt
push
mov
scas
jl
dec
pop
push
arpl
inc
push
fnsave
xor
adc
dec
xor
xor
mov
mov
lock
lds
scas
out
repz
ja
dec
scas
jg
xchg
and
cs
push
jl
mov
scas
cmpb
cli
inc
mov
aas
dec
jge
es
add
mov
stos
fisubrl
loop
inc
jle
cmp
pop
jo
aam
jmp
arpl
inc
repnz
stc
cmpsl
push
push
cmp
jge
loop
and
dec
shll
pop
or
out
cmpsl
or
push
pop
mov
mov
dec
adc
sahf
shl
decb
xor
stos
mov
adc
in
stc
mov
push
inc
shll
cmpsl
fcmovb
pop
inc
mov
inc
adc
push
out
shr
jnp
adc
dec
hlt
xor
xor
push
dec
adc
scas
push
out
jle
stos
ss
push
jne
test
sbb
lea
imul
lahf
clc
pushf
sub
incb
loopne
jnp
xor
cmp
fcoml
repnz
ja
lcall
jg
imul
mov
cmp
pop
push
scas
dec
adc
outsb
nop
into
cmp
xchg
lea
xor
sub
dec
mov
repz
push
mov
pop
cmp
push
push
lock
lds
andb
dec
jmp
out
adc
repnz
inc
add
ds
push
in
xor
pop
loopne
test
cmp
test
push
rcll
push
loop
and
imul
pop
dec
leave
test
push
in
mov
mov
out
in
filds
addl
ds
xchg
push
scas
cmp
or
cmp
adc
rclb
cld
setbe
and
mov
mov
std
les
mov
mov
stos
in
mov
lds
pxor
jl
mov
ret
mov
jge
in
pop
inc
stc
xor
stos
mov
mov
loopne
andl
data16
mov
in
mov
sbb
cmp
dec
add
or
fidivl
sub
ds
loop
inc
cmp
lds
out
idivl
xor
or
push
jbe
mov
mov
xor
je
mov
fstpl
out
clc
inc
add
pop
adc
jge
aam
mov
test
repz
mov
stos
mov
cmp
dec
aaa
test
daa
jb
pop
push
fwait
data16
movntps
adc
cwtl
jnp
adc
lods
and
and
arpl
dec
xor
sub
dec
jne
fiadds
sub
cwtl
xchg
cmp
in
adc
mov
jge
movsb
inc
adc
jb
push
ret
out
inc
sub
cmpsl
rorl
daa
pop
stc
out
inc
mov
popf
jae
cli
push
cmp
aaa
xor
pop
jno
or
shll
sti
jae
pop
cwtl
cmp
xor
js
pop
sbb
test
lcall
loopne
cmp
mov
add
add
pushf
mov
in
and
jmp
lcall
xchg
pop
xor
push
push
mov
sub
xor
push
imul
aam
fidivrl
jmp
pop
sub
ds
stos
aaa
sub
sub
call
shl
cmp
loop
loope
das
inc
or
xchg
xchg
popa
xchg
and
pop
cltd
pop
ret
jp
ret
adc
cwtl
sbb
inc
fwait
cmp
mov
mov
decb
out
sub
dec
add
std
xor
testb
sub
jb
inc
pop
jecxz
popa
dec
mov
lods
lcall
scas
cmp
push
or
testl
pop
loop
adc
repz
adc
jmp
and
cmp
pop
pop
std
dec
cmp
mov
push
loope
cmp
icebp
sbb
popa
add
mov
outsb
push
jne
in
and
enter
xor
ds
sub
pop
popa
cmp
inc
xchg
pop
xorl
test
push
add
ret
push
cs
sbb
fisttps
pop
fcoms
popa
mov
sbb
cmpsl
aam
mov
push
cmp
cmp
mov
cmp
lds
push
in
insb
iret
xchg
flds
arpl
mov
lea
xor
or
sub
add
daa
stos
je
in
mov
jl
cmp
mov
out
inc
sbb
inc
xchg
movsb
iret
dec
xchg
mov
ficompl
into
clc
sub
outsl
pop
push
sub
cmp
fwait
arpl
data16
sbb
stos
inc
adc
popf
dec
mov
mov
or
dec
and
add
mov
clc
cmp
fsubrl
inc
in
lods
ljmp
in
push
mov
mov
pop
aad
push
mov
jo
out
les
decl
sahf
adc
int3
mov
in
mov
mov
in
mov
and
lea
std
bnd
cmp
or
and
xor
or
cmpsl
pop
push
mov
add
mov
adc
loop
adc
adc
push
sbb
aas
push
les
mov
daa
cli
pop
test
movsl
and
into
movsl
call
xchg
imul
xor
jle
mov
inc
cmp
insb
sub
jg
mov
dec
add
je
cmp
mov
test
add
stos
push
sub
dec
sahf
stc
je
sub
mov
push
adc
dec
sbb
enter
sbb
sbb
add
jmp
push
imul
push
mov
ja
cmpsb
mov
xchg
mov
sub
in
int
out
shr
sub
adc
and
jns
out
out
mov
loop
test
mov
lcall
xchg
mov
jb
cmpsb
cmp
mov
sub
outsl
fldl
scas
lcall
mov
mov
inc
push
dec
cmp
push
mov
aas
add
lea
ret
test
pop
stos
nop
jo
lret
mov
cmp
call
adc
call
xchg
outsl
sub
adc
rorb
push
cwtl
jb
shrb
ds
sub
cmp
push
push
gs
in
add
push
inc
push
cmp
rorb
cmp
subl
lcall
push
push
mov
std
out
ret
and
ret
cmpsb
test
pushf
sub
lods
and
inc
inc
push
mov
adc
lods
sahf
les
mov
shl
gs
fbstp
add
insl
scas
jno,pn
rdmsr
adc
dec
repnz
aaa
aam
mov
xor
adc
clc
loope
jecxz
into
outsb
sub
push
and
aam
sub
imul
cmpsl
out
cmp
inc
jg
popa
dec
loope
ljmp
mull
das
cld
pop
mov
clc
ljmp
add
cmp
out
jns
jmp
and
mov
pop
sub
xchg
dec
xchg
ficomps
inc
inc
and
out
and
push
out
mov
inc
jp
inc
ljmp
push
adc
xor
adc
cld
sbb
xor
ljmp
sbb
std
add
mov
fs
lret
pop
lcall
test
push
mov
rol
mov
cmp
add
fidivs
pop
dec
nop
sub
pop
inc
pop
sub
enter
add
jne
fdivs
repnz
iret
xor
js
adc
ds
add
xor
xor
jae
mov
jo
adc
mov
inc
test
pusha
ss
loop
insb
les
and
aaa
mov
cmp
pop
adc
fidivrl
popa
adc
fcmovbe
cli
jecxz
inc
dec
test
inc
dec
ds
jne
push
into
aam
repnz
mov
adc
jle
out
mov
dec
adc
lret
orb
add
add
lds
and
hlt
cmpsb
lcall
mov
jns
xor
rcll
add
cmp
std
mov
dec
jp
fildll
inc
mov
shr
aad
jmp
call
je
jbe
rorl
sub
nop
dec
faddl
dec
xchg
push
data16
sbb
mov
stos
push
or
inc
cs
sub
push
sub
jae
push
sbb
and
repnz
ret
lds
fcmovnbe
divb
stc
in
cwtl
push
cmp
and
mov
std
je
cli
test
cmp
mov
and
in
xor
inc
nop
push
jge
scas
jp
insb
push
popf
xchg
jo
lcall
jle
fwait
js
mov
push
cwtl
mov
pop
subb
sbb
push
nop
iret
mov
xchg
inc
mov
adc
cld
pushf
cltd
push
jmp
cmp
sahf
mov
popf
mov
addl
jge
mov
push
and
loopne
inc
cmp
rcrl
inc
ficompl
inc
mov
stos
sarb
mov
dec
daa
jae
pop
xchg
bound
cmp
popa
hlt
cmpsl
pop
or
mov
mov
dec
clc
cmp
jbe
dec
dec
out
inc
mov
sub
mov
mov
cs
jge,pn
adc
push
lods
mov
sbb
jbe
sbb
mov
xor
mov
ja
popa
mov
daa
jl
adc
mull
jbe
rorl
loop
push
jo
leave
xchg
out
push
and
adc
cli
sarb
mov
mov
mov
loope
xchg
mov
repnz
dec
ljmp
call
inc
inc
push
jge
push
cld
jp
lds
mov
les
cmp
sbb
mov
lahf
add
jae
mov
mov
and
popa
jge
out
mov
add
shll
and
pusha
nop
sub
inc
xor
dec
out
push
inc
out
jle
movsl
jecxz
inc
pop
sub
mov
pop
xchg
mov
mov
movsl
shrb
xor
jle
and
and
pop
mov
dec
xchg
xor
sub
pop
inc
gs
nop
incb
dec
fdivrl
cmp
adc
mulb
ja
push
adc
push
in
push
mov
mov
popa
jecxz
jo
jle
pop
mov
jo
fcom
ja
les
enter
jae
and
mov
pop
fimuls
fnsave
test
cltd
popa
cmp
mov
adc
lods
fwait
pop
sub
push
hlt
loop
push
adc
xor
jg
or
pop
xor
push
daa
stos
ljmp
repnz
adc
andl
pop
out
sarl
pop
roll
mov
push
jge
dec
out
cli
or
xchg
mov
jle
insl
ret
ror
icebp
movl
fnstenv
pop
mov
das
pop
leave
dec
lret
inc
jge
lahf
push
cli
and
cmp
xchg
jno
cs
pop
shll
jo
cmp
insb
gs
in
mov
cmpsl
insl
sub
js
insl
sti
mov
xchg
imul
in
and
ficompl
adcl
jl
insb
sub
test
mov
rcrl
inc
mov
popa
and
cmp
dec
adc
mov
mov
stos
rclb
jns
stc
pushf
adc
mov
xchg
stc
in
jle
fnsave
push
push
je
add
jae
mov
adc
leave
repz
aaa
int3
jno
pop
dec
bound
cmp
add
ss
push
gs
imul
mov
subl
cld
cmp
mov
push
aaa
call
inc
push
cmp
dec
aad
pop
in
mov
sub
lods
and
mov
inc
gs
pop
push
inc
lea
add
imul
jbe
aas
push
xor
mov
inc
inc
push
mov
fsubrs
addr16
and
lret
inc
pop
push
mov
pop
subb
movsl
loopne
jl
insl
and
pop
mov
repz
mov
cmp
dec
mov
pop
ret
sub
jp
sub
cmp
and
je
aas
adc
mov
cmpl
insb
push
stos
mov
ljmp
rolb
jns
jbe
and
fsubs
mov
mov
insb
sbb
shll
lret
dec
xchg
and
out
test
lods
movsb
push
fmuls
test
cmp
xor
outsb
jns
jo
jo
sbb
jo
shll
pusha
fwait
test
outsl
dec
jnp
xchg
and
adc
sti
out
xchg
cli
cmpsb
lods
insb
decb
dec
jnp
xchg
cli
adc
popf
push
mov
cmp
out
mov
mov
push
xchg
scas
stos
cmp
sarl
mov
adc
nop
lds
sub
daa
sarb
js
insb
adc
sbb
inc
cli
jbe
scas
add
dec
mov
test
popf
xchg
scas
ds
push
movsl
push
adc
mov
sar
mov
xchg
loope
mov
jns
cmp
and
mov
add
mov
fimull
cs
xor
cmpsb
pop
and
repz
sub
stc
or
xor
pop
lock
int3
int3
dec
inc
aaa
dec
lcall
jle
adc
xchg
push
in
daa
lods
or
out
push
lret
insb
stc
cmp
mov
xchg
das
xchg
enter
outsl
enter
push
xor
mov
inc
sub
shr
xchg
pop
stos
cltd
push
dec
mov
les
xlat
mov
mov
inc
jb
subb
jge
add
sbb
xchg
movsb
cmpsl
lret
aas
xchg
sbb
ss
fs
mov
mov
js
jle
jl
sub
mov
cltd
jne
in
lcall
sbbb
loopne
imul
or
stos
fnstenv
mov
push
mov
push
adc
jle
push
daa
loop
insb
mov
adc
sahf
push
test
daa
mov
dec
ds
sub
js
cmp
and
jns
int
cmp
push
mov
inc
jbe
daa
and
scas
add
xchg
pop
xchg
lock
das
popa
sahf
incb
push
sahf
test
mov
inc
inc
push
shlb
pop
mov
imul
orl
sbb
sti
inc
xlat
subb
pop
mov
sub
xchg
les
sbb
sarl
mov
mov
and
xor
popa
out
lods
cld
push
clc
jbe
pop
je
jb
inc
arpl
movsb
push
or
add
push
orb
mov
push
imul
arpl
loope
dec
lcall
push
mov
adc
lret
outsl
rolb
dec
aas
fwait
lahf
je
lock
loope
xchg
dec
xchg
mov
dec
sub
sub
xchg
cs
les
or
xlat
pop
test
scas
adc
cmp
pop
add
lcall
mov
mov
push
into
shrl
jne
loopne
push
mov
ret
jbe
cmp
fwait
aas
pop
lret
inc
mov
movsl
jns
and
outsl
dec
adc
adc
idivl
and
sub
cltd
scas
lods
int
adc
les
inc
fstpt
fmul
shrb
lcall
jns
and
dec
faddl
in
adc
bound
int3
adcl
lret
std
mov
mov
fstpt
pop
push
inc
sbb
dec
sub
ljmp
cmp
inc
insl
test
dec
xor
push
sbb
aaa
lods
dec
cld
or
jge
pop
mov
imulb
scas
lods
push
mov
push
and
add
push
xor
and
lea
sub
mov
push
ret
mov
mov
aam
test
bndstx
adc
add
inc
mov
outsb
fisttpll
ljmp
inc
ljmp
fildll
fistl
push
cmp
xchg
or
stos
aam
cmpsb
mov
pop
xchg
fsubs
inc
push
xor
sub
inc
push
pop
lret
ljmp
xchg
xlat
stos
ss
mov
sub
mov
stos
inc
mov
out
push
dec
push
pop
jp
jmp
int3
jmp
adc
das
jns
cmp
adc
fwait
push
and
mov
ds
psrld
push
test
aam
stc
rorl
insb
dec
aam
mov
push
gs
subb
push
dec
and
lret
cli
and
repnz
je
repnz
mov
cmpsl
sbb
fdivrs
sub
int3
les
cltd
addl
imul
and
in
and
sahf
int3
mov
movd
mov
nop
dec
daa
sbb
mov
nop
lods
adc
loopne
or
andl
fisttpl
xchg
add
in
ret
lcall
popa
lcall
sub
inc
js
push
sbb
add
scas
scas
inc
push
mov
orb
cmp
mov
out
add
test
movsb
subb
lahf
mov
cmpsb
cmp
mov
and
cmp
outsl
rcll
ja
inc
push
sub
fisubs
cmp
fwait
jp
nop
jmp
jg
pop
das
stos
hlt
cmp
lods
mov
pusha
xchg
inc
xor
cmpsb
pop
dec
cmp
cmp
adc
push
pop
dec
mov
jno
aaa
mov
fimull
imul
in
pop
outsl
movsl
xchg
int3
leave
stos
adc
pop
pusha
sbb
scas
ss
push
dec
push
mov
xor
cmpsl
cltd
inc
push
mov
into
dec
stos
fwait
das
loop
int
jb
xor
jns
adc
stos
sti
and
pop
stos
mov
pop
push
adc
call
sub
in
jnp
inc
sub
cmp
ljmp
addl
das
sub
bound
int
mov
imul
lcall
jg
lret
std
fdivrs
jge
lods
adc
inc
xchg
int3
push
test
or
jbe
mov
icebp
int
popf
mov
jnp
cld
cs
sub
pop
mov
shlb
ljmp
orl
pop
movsb
out
insb
ds
add
out
jb
int
jb
ffree
xchg
scas
andps
dec
and
or
test
andb
push
push
push
test
or
cmp
into
push
stc
push
mov
aad
xor
xlat
cmp
out
out
adc
and
mov
aas
jnp
pop
movsl
rorl
push
int
xor
adc
lret
sahf
ret
mov
fwait
sub
call
sti
push
test
test
icebp
xchg
ss
sarl
or
push
mov
cmp
test
adc
mov
mov
jp
addr16
adcb
add
adc
add
ret
sub
sub
imul
lock
adc
and
bound
out
cmp
movsb
and
adc
push
sbb
inc
mov
xor
and
aaa
lods
cmp
jo
or
xchg
pop
sti
aaa
dec
stos
sbb
loopne
xchg
stos
imul
jmp
fisubs
fwait
dec
nop
mov
enter
repz
mov
inc
inc
fwait
pop
jecxz
cmp
mov
and
cltd
lahf
sub
imul
loopne
std
in
scas
test
sbb
or
or
push
inc
xchg
push
cmpb
cmpl
inc
dec
test
mov
pop
mov
stos
xor
and
push
das
mov
lods
add
scas
les
jno
outsb
into
sub
xor
scas
inc
mov
dec
push
or
ljmp
test
rcll
xor
pop
cmpsb
jecxz
cmpsb
repnz
mov
test
sbb
push
dec
lock
insl
push
pop
xor
idivb
mov
mov
push
popf
cmc
jne
movsl
repnz
xor
mov
and
jecxz
ret
mov
int3
push
xor
sub
fcompl
pusha
xchg
cmp
sbb
push
jl
jg
xor
stos
xor
inc
lea
dec
lods
ja
jmp
dec
pushf
lods
out
and
cs
and
andb
fdiv
push
scas
sub
sbb
pop
adc
mov
sub
pop
mov
scas
dec
push
lret
test
jecxz
add
inc
push
int
cs
jo
rep
push
push
push
in
inc
sub
pop
js
mov
dec
mov
iret
push
fisubs
mov
xor
push
mov
data16
imul
jp
shrl
and
addr16
fwait
cwtl
mov
and
in
push
shrb
pop
femms
pop
jnp
jb
movsl
in
in
movsl
jg
es
fisttpll
mov
daa
repz
xor
imul
fwait
hlt
testb
out
rcrb
mov
mov
cmc
cmp
andb
scas
push
dec
dec
sub
cmp
pop
daa
sbb
push
push
mov
xchg
push
xor
insb
inc
xor
pop
scas
inc
dec
mov
ds
inc
sub
mov
bound
aas
data16
cmp
xlat
xor
sub
scas
sbb
sub
inc
jp
ss
mov
mov
in
xor
outsb
sbb
sub
fsubr
inc
pop
lret
and
xor
inc
mov
aas
popf
dec
push
aaa
jl
mov
aas
je
aam
adc
and
inc
pop
lock
daa
cmp
fisttpll
xor
aam
adc
push
das
pop
outsl
mov
or
scas
imulb
jge
mov
mov
push
fwait
dec
arpl
addr16
lret
mov
fadds
fldenv
jns
paddw
sub
vmread
xchg
and
push
mov
xor
mov
stos
push
mov
sub
imul
jno
push
nop
fnstcw
fxch
jae
nop
daa
mov
inc
orl
divl
test
popf
stos
dec
scas
lods
xor
insl
push
adc
cmpsb
xor
and
aaa
sub
das
les
dec
jns
dec
sub
or
and
aam
addl
push
sub
push
ret
mov
jecxz
lret
ret
insl
cmp
insb
jp
les
ja
outsl
test
pop
scas
mov
cmp
xchg
xchg
sub
sbbb
dec
jp,pn
and
mov
nop
shlb
shrl
fwait
jge
xchg
jnp
pop
ret
aam
xchg
add
mov
sub
pop
jl
mov
loop
mov
aam
pop
jbe
pushf
lcall
cli
mov
ss
scas
lds
push
jle,pn
dec
sbb
js
loop
cmp
incl
pop
popa
mov
add
dec
mov
fnstsw
gs
cltd
jg
out
ficomps
cmpsb
mov
bound
bound
jmp
setns
push
dec
mov
rol
pop
xchg
lods
lret
cld
jae
pop
popa
icebp
mov
inc
xor
ret
jg
pop
sub
shll
outsl
xchg
bound
or
xor
in
pop
jmp
insb
adc
imul
dec
push
inc
rorb
xchg
ds
mov
add
or
rolb
adc
add
mov
cmp
adc
pop
shrb
xchg
dec
les
push
add
arpl
aaa
scas
sti
mul
inc
jmp
cmpsb
out
dec
mov
cld
push
in
ja
cli
or
scas
lea
fwait
or
mov
and
nop
xor
adc
ss
aad
sahf
enter
xchg
pusha
sbb
je
push
test
sbb
cmpsl
or
pop
ret
mov
jb
das
stc
jne
pop
push
cmp
negb
or
ret
mov
mov
stos
test
lock
fldl
in
jbe
mov
jne
xchg
push
je
mov
jnp
cmp
loope
rcr
dec
ss
lods
das
pop
jecxz
add
mov
or
stc
xor
andb
push
add
cmp
stc
loopne
orl
arpl
dec
cltd
pop
pop
scas
sbb
add
sub
pop
jns
dec
xchg
aas
and
inc
mov
push
mov
pushf
inc
add
popa
push
jbe
push
fs
daa
mov
stos
out
sub
lea
and
mov
cmp
mov
and
insb
icebp
test
insl
dec
adc
push
leave
fildll
dec
cmpsl
dec
inc
pusha
adc
push
add
repnz
sbb
out
cmp
mov
call
push
fucomp
mov
sub
jle
scas
pop
shrl
mov
imul
inc
jns
dec
add
cli
dec
jecxz
jne
je
sbb
inc
mov
call
jno
push
sbb
dec
subb
ds
sbb
das
out
sub
je
movsl
sub
mov
jbe
test
mov
les
cltd
xor
daa
loop
imul
loop,pn
jb
std
adc
sbb
mov
push
rorb
movsl
ljmp
inc
mov
outsl
test
jne
sti
insb
test
cli
and
pop
mov
xchg
push
out
dec
test
mov
mov
push
sbb
jbe
push
test
xor
faddl
fdivs
sub
lds
notl
insb
mov
inc
insl
xorb
mov
or
cs
xchg
sbb
push
mov
xor
popf
fimuls
cmpsb
lock
mov
inc
adc
iret
dec
cmpsl
pushfw
sbb
mov
je
push
and
lds
fnstcw
out
jg
call
gs
lcall
mov
outsl
adc
push
cs
jae
and
or
inc
lea
jmp
int3
test
sub
fcomip
cmp
rolb
jmp
in
mov
mov
xchg
insb
dec
ds
out
outsb
inc
jae
gs
lahf
add
pusha
sub
aaa
dec
cmp
push
enter
stc
inc
jge
sub
lods
pop
imul
dec
sbb
aaa
dec
out
mov
or
cs
popa
adc
and
jmp
pop
sti
xchg
imul
push
ret
movsb
cltd
push
imul
cltd
sub
inc
fs
negb
push
xor
iret
stos
sbb
hlt
jbe
mov
ds
adc
call
sti
sbb
jge
std
rorb
nop
dec
jns
loopne
iret
daa
shl
movsb
push
pop
notb
dec
sar
push
mov
rorl
addr16
sbb
pop
adc
dec
adc
add
dec
adc
lcall
mov
std
jg
dec
mov
push
imul
mov
xor
mov
mov
jb
mov
out
mov
xlat
push
sub
icebp
iret
shrl
jne
test
fcmovne
xor
popa
mov
mov
and
adc
test
mov
clc
add
or
sub
mov
and
cli
xorb
aad
and
jmp
sub
and
mov
mov
in
mov
sub
cmp
pushf
mov
push
nop
andl
fnclex
jmp
jns
mov
push
push
movsl
dec
lea
jbe
cli
pop
cmp
mov
jecxz
daa
adcb
sbb
mov
or
out
xor
cld
xchg
loop
insb
inc
push
xor
stc
inc
dec
out
xor
dec
push
adc
add
and
into
add
or
ret
jne
cs
jo
push
leave
gs
xchg
cmp
adc
push
xor
dec
xchg
inc
fbstp
int
stos
mov
pop
fldenv
test
sub
daa
mov
add
pop
xor
mov
mov
shl
stos
fwait
aas
dec
mov
or
mov
push
jnp
sub
aad
push
shrd
scas
mov
cs
mov
mov
dec
adc
aad
or
movsl
shrb
je
and
push
stos
outsl
or
push
push
push
nop
mov
ret
mov
pop
outsb
das
cmp
jo
mov
aad
inc
les
xchg
leave
mov
and
insl
jns
scas
cmp
sti
insl
mov
push
and
loop
adc
pminsw
push
mov
outsb
mov
push
addl
sub
imull
push
gs
movsb
enter
mov
nop
pushl
scas
adc
sub
sub
add
js
xchg
lret
ljmp
sub
add
data16
je
cmp
and
clc
jb
aaa
insl
mov
arpl
pop
cli
dec
movsl
enter
mov
out
push
rorl
aaa
addl
hlt
aaa
jle
cmp
ret
sbb
mov
cld
fisttpll
cmp
sub
sub
or
mull
stos
jo
sbb
cmp
jae
iret
aas
pusha
and
out
cmp
cmovns
sbb
cmp
xor
ds
inc
or
dec
std
nop
dec
adcl
ret
jmp
push
cmp
daa
insl
xchg
scas
inc
pop
xchg
movsb
dec
divb
into
xlat
inc
push
mov
subb
daa
scas
jb
xlat
sti
mov
dec
mov
xor
cwtl
int
imul
mov
jnp
pop
mov
push
test
push
pop
add
clc
push
adc
test
adc
daa
push
adc
cmp
dec
and
push
scas
repnz
sub
or
pop
add
nop
test
insb
sbb
jo
clc
data16
movsb
mul
out
les
push
and
loop
sbb
sbb
stc
jo
and
adc
insb
ret
stc
cmpsl
rcrl
pop
dec
pop
movsl
scas
cld
dec
and
cmpsb
ss
rcrb
xchg
lea
sti
ljmp
sbb
std
dec
push
dec
cltd
xor
std
testl
pop
xchg
and
aaa
or
mov
inc
sub
fcoml
inc
xchg
dec
fs
test
aad
xchg
clc
inc
in
push
dec
sub
rorb
sub
insb
sahf
test
add
enter
lahf
shll
test
das
movsb
addr16
mov
enter
loope
in
orl
test
lahf
pushf
stos
xchg
push
enter
aad
leave
sub
adc
adc
mov
xor
cld
repnz
ss
sub
notl
cmp
loope
fadds
cmp
cmp
and
xor
cmp
js
ss
outsb
inc
cmp
mov
mov
hlt
test
jmp
stos
mov
mov
dec
sbb
int3
xor
in
cmp
push
div
jb
sub
out
out
pop
push
divl
sbb
daa
ljmp
inc
pushw
outsb
push
sub
mov
dec
cmp
sbb
lods
ss
sbb
addr16
pop
add
jae
push
cld
in
inc
out
shll
test
movsb
inc
push
lret
or
sub
das
bound
ja
mov
movsl
pop
sub
and
add
pushf
fwait
ljmp
jne
fwait
mov
jne
and
sbb
pop
lahf
add
xchg
push
cmp
mov
daa
test
shl
addr16
mov
xor
and
icebp
shlb
jno
aas
enter
cmp
loope
jnp
cmpsb
mov
push
imul
stc
push
mov
sub
popf
leave
adc
xor
nop
cs
lret
add
call
imul
ss
cmovns
adc
dec
sub
loop
fistl
stos
jo
push
jno
nop
mov
dec
jp
xor
xchg
scas
ret
add
push
scas
adcl
xchg
stos
inc
sarb
dec
shlb
and
sub
mov
js
inc
test
jns
or
je
inc
inc
dec
add
ja
xor
or
movsb
mov
movsb
stos
push
daa
push
xchg
insl
jge
stos
dec
or
ljmp
sub
movsb
lock
and
mov
cmp
aaa
in
xor
sub
out
cs
movsl
mov
repnz
lahf
mov
sbb
sub
scas
pop
movsl
push
pop
mov
mov
insl
add
je
nop
cmp
repz
data16
xchg
mov
push
mov
jp
mull
insb
xor
mov
sub
cmp
movsb
in
imul
xchg
arpl
dec
jnp
lea
pop
in
ljmp
addl
fsubrs
aad
pop
sbb
add
aas
in
popf
jl
xchg
inc
das
test
pop
cmpl
sub
jae
add
rcrb
push
inc
jg
and
call
lahf
lock
xor
adc
mov
stos
scas
and
sarb
out
adc
pop
push
imul
sub
dec
cmp
sbb
ljmp
stos
jle
ds
add
mov
mov
dec
sub
jl
jmp
pop
ss
sub
sub
icebp
icebp
popa
fstps
dec
loope
and
sarb
pop
cli
and
stc
scas
cli
scas
mov
push
pop
insl
pop
iret
cli
and
stos
test
cmp
pop
or
data16
mov
in
mov
pop
xchg
mov
ss
nop
mov
cmp
aaa
and
xor
sub
inc
pop
in
sarb
jp
xchg
mov
cltd
stc
cmp
sbb
mov
aas
inc
cmpl
xor
ficompl
dec
inc
push
out
mov
cmp
lcall
outsl
push
loopne
lret
cld
cmp
stos
pop
fsubrl
inc
push
stc
into
ss
out
xchg
stc
dec
lods
clc
cmp
cs
out
adc
mov
mov
jmp
dec
popf
or
das
das
mov
aaa
sbb
add
je
pop
lods
shlb
sub
inc
adc
dec
cmp
mov
jl
out
inc
popa
loopne
pop
inc
scas
outsb
lcall
ds
mov
mov
jl
cli
sub
stos
mov
mov
sbb
cmp
lods
ss
lods
jg
mov
fwait
push
push
jnp
add
push
xor
addr16
into
movhlps
xchg
add
pop
adc
xor
xchg
sub
jne
repnz
std
fnstcw
lds
psubsb
or
jno
sub
mov
sub
nop
adc
and
insl
test
sbb
iret
je
in
in
enter
and
outsl
popa
jno
mov
repz
mov
jno
lods
adc
ret
pushf
push
arpl
js
mov
ret
fwait
popa
jno
mov
dec
cmpsb
or
out
sub
mov
sbb
std
xor
add
iret
out
inc
inc
pop
or
nop
and
movsb
addr16
repz
mov
inc
outsl
cmpsl
and
push
arpl
jne
les
pop
adc
cmp
stc
mov
lret
dec
in
ss
mov
pop
or
test
dec
sbb
sub
lret
cli
pop
nop
pop
add
scas
sub
jmp
add
push
cmp
daa
fucomp
dec
je
stos
icebp
movsb
ljmp
pop
fmul
push
push
test
fcom
add
es
out
aas
jnp
sub
lahf
ret
jge
cmpsb
or
or
pop
cld
mov
outsb
cmp
clc
pop
icebp
adc
cmp
loop
inc
stos
cmp
pop
cmp
sbb
mov
test
jl
sub
and
mov
popa
lcall
push
loop
jno
arpl
push
jo
add
mov
xchg
arpl
int
and
pop
test
sbb
jge
movsl
jno
mov
pop
push
inc
and
dec
loop
mov
outsb
xor
sbb
in
gs
out
inc
in
mov
dec
lcall
nop
inc
sub
push
insb
nop
xor
das
gs
ljmp
je
negl
pop
sub
and
mov
lret
lock
cmp
ja
and
gs
aaa
int3
or
add
sbb
push
mov
movsl
cmpl
cmp
fisubrs
out
add
lcall
adc
dec
mov
pushf
jae
mov
outsl
cli
dec
mov
mov
daa
mov
push
mov
daa
cmpsb
pop
movsl
out
sub
jo
loop
push
inc
sar
jno
pop
pop
int3
lret
aaa
mov
jo
xchg
sub
lahf
outsb
mov
push
imul
mov
orb
and
xchg
add
out
push
cmp
jg
loope
pop
scas
hlt
pop
inc
jbe
ud2
mov
xchg
rcrl
mov
stos
inc
lret
fs
jp
dec
dec
add
dec
jb
lcall
push
loope
into
mov
xor
sub
call
lods
mov
mov
ss
ljmp
int
and
mov
lea
enter
sub
shrl
into
push
into
sub
popf
scas
test
xor
sbb
or
fdivl
dec
push
adc
in
movsb
inc
and
repnz
dec
cmp
aad
std
mov
jo
cld
cmp
adc
inc
dec
lret
mov
sub
fwait
dec
fs
adc
loopne
popf
xchg
aaa
sbb
and
cmp
sbb
or
icebp
mov
movsl
cmp
dec
jne
mov
jae
out
pop
lods
out
sti
stc
bound
mov
pop
je
cli
aad
nop
ljmp
and
pop
sbb
mov
xor
lret
xchg
scas
pop
scas
pop
push
inc
adc
std
sbb
add
xchg
popa
cltd
inc
sbb
or
lahf
dec
ljmp
inc
or
pmullw
mov
imulb
jg
fdivrs
sbb
inc
mov
mov
sub
sub
je
scas
shrb
mov
sbb
xchg
ret
xchg
pop
jl
call
xor
cmp
add
dec
xrelease
loope
push
jle
and
cmpsl
nop
xchg
sub
jb
inc
cmp
imul
gs
nop
jle
push
ficoml
and
mov
pop
xlat
aad
cmc
in
push
test
arpl
scas
inc
fwait
xor
push
adc
addr16
icebp
js
mov
ss
pop
shlb
adc
test
mov
or
and
and
dec
jp
addb
cmpsb
xlat
lret
pop
adc
lcall
jbe
addl
jle
call
xor
mov
pop
shl
test
stos
and
sub
sbb
fdivr
lahf
aas
fsubl
inc
mov
aas
jno
pop
fwait
or
push
jmp
push
test
mov
dec
xchg
push
push
xchg
xor
push
out
sub
daa
lods
push
scas
loop
ss
mov
dec
mov
mov
xchg
iret
insb
mov
and
lds
pop
lcall
clc
cmp
shrb
xchg
cltd
ja
push
movsb
ss
mov
stos
in
shlb
outsb
pop
aam
daa
jae
sub
out
push
fs
inc
push
inc
lock
cmp
mov
mov
pop
imul
mov
in
mov
rorb
cmpsb
cmp
sub
dec
or
and
ret
repnz
ss
scas
pop
pop
inc
mov
xor
push
lock
sub
sub
popa
out
jnp
adc
imul
mov
aad
add
mov
pop
cmp
mov
shrb
inc
test
push
xchg
scas
sub
imul
test
in
mov
scas
insb
push
mov
sbb
outsl
pop
fstpt
jp
inc
loopne
push
std
imul
imul
cwtl
fldt
jns
sbb
sub
repnz
push
fwait
out
dec
jp
jae
scas
dec
jne
jp
xchg
insb
enter
mov
push
cmp
aam
inc
and
pop
and
dec
movntps
dec
or
pushf
fisubrs
lcall
cmp
inc
mov
adc
test
inc
xor
imul
mov
and
int3
cmp
xchg
sub
and
loopne
test
mov
insb
add
test
insl
push
hlt
or
and
cmpsl
mov
mov
ja
dec
inc
sub
lods
push
outsl
negl
outsb
scas
mov
fbstp
pop
dec
cmp
popa
adc
mov
pushf
push
mov
xor
jo
jnp
sbb
cmp
test
pmuludq
inc
add
inc
jb
pop
sahf
and
jmp
xchg
xlat
scas
mov
aaa
daa
jb
ss
pop
and
mov
mov
in
jp
cmp
les
cmpsl
movsl
mov
loop
popf
lock
icebp
sarb
lcall
pop
stos
adc
adc
jg
sub
jo
adc
pop
jb
std
push
shrl
imul
jge
dec
iret
fnstenv
fldl
orl
inc
mov
lahf
cmp
inc
ret
popl
jb
aaa
popa
out
fwait
inc
loopne
sub
xor
into
push
xor
jae
mov
sbb
jnp
inc
daa
fstl
sbb
mov
inc
push
sbb
clc
xor
xor
xchg
stos
adc
and
mov
mov
dec
fldl
test
emms
fmulp
mov
rclb
outsb
pop
mov
aas
mov
ss
xor
jge
lret
sub
push
insb
std
add
ja
push
repz
aaa
cld
lret
pop
jp
dec
push
add
ret
jno
stos
cmp
and
mov
ds
push
repnz
pop
inc
jne
adc
int3
popa
cmp
stos
fwait
jo
out
xor
jo
das
pop
sbbl
adc
and
int3
shlb
mov
add
jbe
js
test
adc
and
jno
mov
xor
xor
in
dec
jmp
mov
mov
icebp
pop
aad
push
adc
cmp
lcall
subl
push
xor
pop
jecxz
jno
jecxz
cmp
xchg
cmp
xchg
mov
jecxz
mov
mov
jp
inc
ret
sti
inc
insb
pop
iret
jle
and
lret
stos
div
pop
mov
push
aaa
push
jno
je
jge
push
adc
xchg
cmp
fmuls
in
leave
add
popf
out
fwait
jo
xor
das
data16
sub
inc
inc
scas
sarl
mov
push
push
push
mov
jbe
aas
fs
dec
cmp
inc
imul
imul
mov
mov
pop
adc
and
xor
dec
and
push
push
adc
repz
mov
out
pop
pop
mov
mov
add
dec
inc
xor
cs
fimuls
push
push
test
push
push
mov
ja
jns
fists
rolb
das
sub
lahf
rorb
lret
std
push
inc
jp
mov
dec
cmp
adc
or
dec
scas
push
xchg
lcall
test
xor
scas
repnz
dec
ljmp
lcall
push
pushf
lret
loopne
stos
dec
pop
mov
ljmp
out
sub
push
jno
mov
addr16
pusha
push
xor
mov
inc
mov
sub
inc
xor
push
jbe
push
dec
xor
aaa
pop
xchg
cmp
insb
mov
mov
aam
dec
stos
sub
adc
adcl
test
scas
js
das
jp
fwait
xchg
mov
insl
adc
rcrl
push
jns
sub
ds
das
out
push
or
sub
popa
fdivs
test
fcoms
xlat
inc
or
jns
lret
pop
mov
push
lcall
test
fsubrs
pop
cmpl
adc
mov
cmp
nop
xchg
hlt
fwait
enter
es
sub
adc
mov
mov
shlb
push
mov
fwait
jle
pop
imul
scas
test
mov
loope
insl
mov
sub
pushf
sub
outsb
mov
add
inc
mov
fisttps
lret
xchg
fidivrs
cmp
inc
pusha
outsb
pop
pushf
and
cmp
pause
pop
cmp
and
call
mov
fstpt
in
aam
loopne
test
gs
js
push
mov
mov
fildl
or
mov
lods
inc
xor
mov
sub
outsl
sahf
mov
push
xchg
into
jbe
aam
ljmp
xchg
mov
xchg
fsubrl
push
sar
ds
loopne
popa
call
push
inc
mov
dec
divl
add
cmp
fcoml
mov
cmp
out
lods
push
stos
mov
or
clc
cmovl
data16
sbb
cmp
aas
sbb
popa
xor
sbb
sub
dec
mov
nop
dec
out
adc
push
sbb
jl
dec
sbb
data16
mov
mov
cmp
lods
jg
mov
mov
mov
jns
and
mov
lcall
stos
imul
movsb
fsubl
loopne
addr16
in
cld
jo
clc
push
aad
xchg
das
sbb
fwait
jne
mov
jle
inc
insl
and
and
xor
test
sbb
fwait
sub
cmp
test
jle
jns
leave
mov
loop
push
insb
push
inc
xor
rcrb
cmp
jl
or
jge
divl
sub
int
clc
jno
xor
mov
dec
and
ret
or
adc
pop
add
xchg
push
les
mov
inc
inc
or
inc
xor
insb
dec
adc
popa
repz
ds
je
mov
xor
adc
fistps
cmpsb
mov
sub
mov
mov
addr16
ret
test
inc
push
cmp
dec
and
scas
pop
cmpsb
mov
xchg
mov
jmp
mov
push
out
in
inc
test
movb
loopne
test
and
sar
pop
push
clc
aad
mov
js
rcrl
or
gs
jl
outsb
clc
push
outsl
test
and
into
jmp
rorl
mov
cmp
daa
push
loopne
sub
xchg
inc
cmpsb
or
and
jle
and
sbbl
mov
inc
lahf
xor
mov
lds
int
bound
fisttpl
loope
jbe
add
push
outsb
daa
in
cli
pop
ds
ljmp
dec
cmpsl
and
push
push
mov
test
ja
push
push
jecxz
mov
mov
mov
inc
push
push
mov
cltd
cs
cmp
rolb
outsl
aam
fwait
ds
xor
test
clc
cmp
jmp
ficomps
jo
adc
loop
or
repz
push
setno
dec
clc
adc
repnz
fcoms
fwait
mov
cmp
xor
aaa
out
jbe
push
push
nop
and
pop
push
scas
out
in
xchg
lock
jge
adc
xchg
subb
push
movsb
jnp
vpcomuw
pop
pushf
jno
or
cmp
pop
add
adc
mov
scas
outsb
sub
push
ss
fiadds
inc
lcall
fsubs
pop
pop
cld
ds
jns
pop
test
push
push
jmp
pop
mov
inc
mov
xor
sub
lods
out
out
pop
adc
dec
cltd
fdivl
insl
inc
subl
popa
adc
sub
and
cmp
sbb
enter
or
cmp
jbe
sbbl
insl
outsb
sbb
sti
xor
ret
and
jl
inc
shlb
test
adc
push
out
mov
pop
adc
stos
fsubrl
push
cmp
iret
cmpsb
jecxz
mov
dec
add
sbb
sub
popf
inc
scas
jbe
stc
imul
jo
dec
mov
stos
jp
push
cmp
dec
adc
dec
jmp
pop
inc
dec
stos
dec
push
jl
sub
xchg
xchg
adc
lea
sub
xor
test
or
out
sub
mov
jnp
adcl
dec
mov
mov
mov
cltd
mov
and
into
adc
imul
fnstsw
rorl
mov
popa
inc
push
pop
hlt
sahf
icebp
pop
lock
lahf
cli
inc
out
jl
shr
cmp
jp
pop
push
push
sti
jge
test
movsb
mov
subb
inc
aaa
inc
fnsave
mov
xchg
fs
mov
nop
push
mov
mov
test
sub
outsl
scas
out
lcall
push
jge
inc
jbe
aad
mov
inc
subl
aam
fbstp
sti
sbb
in
mov
mov
xchg
inc
mov
add
push
add
inc
cli
movsl
dec
mov
js
scas
cs
jge
push
adc
cld
or
mov
mov
and
add
sbb
shrb
and
arpl
ja
jl
call
daa
iret
fs
stc
xor
lret
sub
adc
sub
adcb
xor
adcl
sbb
das
stc
mov
fwait
out
push
or
ret
sbb
ja
cmp
mov
js
push
sub
inc
adc
push
negl
mov
pop
mov
jno
int3
aad
sbb
push
pushf
cmpsb
dec
lahf
or
aam
imul
adc
pop
pop
cmp
sbb
shl
jne
push
cs
sbb
jp
je
int3
xlat
sbb
pop
daa
ret
rcr
repz
pop
rep
and
add
adc
jb
pop
inc
mov
aaa
and
lret
jmp
lcall
or
mov
jmp
mov
je
cmp
pop
pop
jle
jno
shl
push
je
icebp
aas
jg
test
xor
popa
jmp
push
adc
lahf
lods
fs
jmp
cmp
pop
push
sbb
test
and
dec
sbb
mov
sub
hlt
adc
popa
xlat
call
mov
inc
out
cmpsb
dec
pop
daa
out
sbb
out
pop
jb
sub
cmp
inc
ja
xor
mov
push
sub
ja
mov
imul
and
fxch
roll
lock
pop
out
push
shl
mov
jle
mov
push
ds
aas
mov
adc
xor
mov
shl
leave
xor
push
jo
ficoml
scas
pop
jnp
js
out
cs
lahf
loop
push
inc
push
inc
xchg
sarb
lcall
adc
or
inc
jle
xor
jb
mov
push
outsl
push
push
dec
enter
sub
mov
jo
jge
leave
pop
mov
jbe
fcompl
jne
and
insl
and
fcompp
pop
icebp
fbstp
inc
mov
lea
cmp
cld
int3
stos
daa
lcall
or
imul
inc
aas
add
sub
xor
inc
add
into
adc
pop
add
xchg
stos
cmpb
paddq
pop
aaa
dec
stos
fs
stos
ret
fsubrs
cmp
jl
dec
push
scas
icebp
ret
test
cld
js
dec
mov
popa
fwait
or
mov
add
mov
sub
mov
push
sbb
sub
lds
out
mov
push
and
les
xchg
ja
adcl
rcr
cmp
push
test
or
dec
scas
fwait
xchg
lahf
cmp
jb
fsubrs
jecxz
jb
cmp
push
cmp
scas
mov
add
insl
ss
push
lcall
jp
ljmp
rcrb
out
std
mov
test
jge
icebp
adc
repnz
jmp
xor
dec
out
and
repnz
and
cmpsl
cmpsl
xchg
pop
ljmp
dec
fs
add
xchg
xchg
xor
out
lcall
mov
add
pop
dec
push
leave
push
stos
aas
jns
insb
shlb
jl
insb
pop
cmp
or
push
sub
jno
js
lcall
loop
outsb
lock
and
sbb
inc
and
pop
pop
push
in
popa
push
outsb
rorl
mov
adc
imul
dec
test
outsl
insb
adc
sbb
fldenv
mov
mov
mov
push
jge
and
sbb
pop
aaa
int
inc
xlat
clc
jmp
mov
outsb
insb
das
fwait
xor
sub
jbe
hlt
inc
lea
push
je
rcrb
sub
insb
adc
pushf
push
clc
pop
or
push
cwtl
outsb
or
and
outsb
add
scas
std
pop
ret
push
js
cwtl
adcl
push
shrb
dec
leave
mov
dec
sbb
push
xchg
xchg
test
and
test
int3
push
sahf
test
and
movsb
mov
pusha
sbb
and
icebp
arpl
outsl
sub
dec
jbe
xor
sub
mov
in
insb
xchg
add
jns
mov
xchg
xchg
dec
pop
cwtl
popf
push
mov
xor
lock
lcall
xchg
idivl
xchg
jl
imul
mov
stos
fwait
dec
jbe
mov
mov
testb
in
std
jge
negl
xlat
xor
scas
ss
dec
xchg
dec
jg
outsl
pushf
test
popf
scas
mov
dec
add
stc
ljmp
cwtl
sarb
outsl
daa
cmp
inc
or
cmp
aaa
mov
and
mov
sub
or
inc
xchg
mov
mov
insl
cmpsl
push
sbb
repnz
pushl
mov
sub
stos
shlb
test
mov
push
cmp
mov
gs
mov
movsb
adc
mov
rcrl
adc
lock
pop
dec
sbb
push
fwait
xchg
or
jp
jge
and
cs
mov
or
and
ss
popa
push
cmp
jo
adc
xorl
mov
shlb
fldcw
adc
mov
mov
lahf
xor
sbb
lahf
nop
xchg
lods
push
xor
aaa
insl
push
xchg
ss
pop
cmp
arpl
mov
das
scas
inc
cwtl
mov
push
push
xchg
jb
or
stos
inc
scas
push
arpl
dec
fwait
pop
push
test
push
jbe
ss
loopne
xor
aas
cmp
xchg
cmpsl
bound
pop
icebp
push
dec
arpl
mov
movzwl
mov
push
insb
jecxz
push
cs
push
cmp
scas
mov
sub
pop
add
cmp
js
sbb
cmp
adc
cmp
mov
mov
mov
sub
jno
inc
mov
dec
xor
mov
lock
cwtl
or
in
push
and
cld
addb
enter
ds
mov
or
aaa
mov
jmp
in
adc
cmpl
xor
nop
fwait
cmp
push
xor
loop
mov
add
out
sbb
shlb
mov
adcb
cli
shr
xor
fidivrs
jns
pop
add
in
popa
lahf
xor
lcall
out
daa
js
ljmp
and
sbb
addr16
lea
pop
mov
xorb
pop
jl
aaa
mov
xchg
add
push
dec
jmp
imul
and
push
das
push
jnp
sti
ss
sbb
push
jno
pushl
mov
pop
in
add
aaa
out
push
daa
in
into
lods
ds
movsb
xchg
dec
or
nop
xorb
fs
dec
push
mov
sub
outsb
pop
push
dec
loop
or
push
push
mov
mov
xor
push
loopne
lret
jb
adc
lcall
shlb
add
out
orb
ljmp
js
mov
inc
inc
pop
pop
sub
mov
stos
scas
sub
cmpsb
dec
inc
ss
pop
sub
xor
cmp
mov
jb
inc
push
cmp
jle
jmp
sarb
inc
leave
movsl
ds
emms
xor
movsb
inc
mov
popa
and
add
scas
mov
mov
mov
popa
push
pop
data16
addr16
pusha
cmpsl
pop
pop
clc
xchg
jae
pop
flds
and
int
out
sub
lock
scas
dec
jbe
loope
pop
rorb
not
dec
push
sti
imul
fisttpl
cld
fldcw
jbe
cmp
push
mov
fwait
inc
repnz
push
cli
xlat
out
fmuls
decb
sarl
or
in
jmp
push
sub
cmp
mov
movsl
push
in
call
adc
add
adcb
dec
loopne
mov
ljmp
out
inc
pop
pop
xchg
lods
movsl
dec
lahf
ja
jl
scas
ja
and
mov
daa
sbb
mov
addb
push
cs
sbb
ljmp
aaa
push
leave
push
and
cmp
fwait
cmp
scas
dec
sub
sub
add
ja
sub
and
in
dec
or
ja
inc
adc
push
mov
jnp
stos
cmp
and
nop
push
out
adc
test
je
mov
push
mov
push
push
inc
dec
pop
nop
sub
dec
fcompl
sbb
mov
push
test
cmp
les
or
push
dec
xchg
daa
push
outsb
add
mov
jae
rcrb
fwait
mov
cmp
repz
inc
aas
cwtl
inc
test
cmpsl
cmp
dec
sarl
in
popa
out
mov
cmp
fwait
push
addr16
imul
lock
push
mov
pop
cmp
mov
in
cmp
push
test
ficomps
stc
mov
sbb
leave
stos
xor
adc
jge
je
andb
pop
push
aaa
dec
sbb
outsb
mov
push
lods
xchg
and
dec
cmp
aad
add
dec
insb
bound
adc
xor
pop
mov
dec
jb
dec
icebp
push
inc
inc
push
cld
fs
jmp
testl
xorb
inc
push
jge
aas
sub
jne
and
sub
mov
imul
mov
pop
scas
adc
jbe
pop
inc
jo
or
mov
je
inc
add
scas
not
inc
imul
push
ss
mov
inc
addl
sub
js
out
loop
and
es
cmpsb
or
push
jg
jp
enter
mov
sahf
push
ljmp
lahf
fimuls
int3
mov
pusha
enter
dec
push
pop
cmpsb
inc
push
xor
add
or
ret
in
out
aad
push
lret
push
nop
push
and
jge
das
jecxz
pop
mov
out
lcall
loope
mov
mull
jbe
aas
jb
mov
mov
mov
xchg
daa
imul
cmp
scas
cmp
jnp
dec
stos
sti
cmpsb
mov
push
rorl
mov
adc
mov
cmpsl
push
and
jnp
cltd
rorb
hlt
nop
jge
xor
mov
lcall
inc
out
pop
mov
push
shll
pop
cmp
inc
add
imul
cmp
mov
ret
movsl
aaa
testb
movsb
push
js
jg
ret
shll
dec
ja
insb
and
mov
mov
scas
sub
loope
arpl
in
and
ret
jns
push
out
test
mov
out
dec
nop
mov
repnz
fdivs
xor
loop
jge
mov
imulb
xor
test
repnz
ja
cmpsl
fs
movsl
push
push
mov
out
mov
cli
cs
cmp
sub
pop
arpl
dec
popf
sahf
add
aam
mov
sar
push
out
aas
push
stos
loopne
repz
lds
and
sbb
lcall
xlat
mov
pop
sub
loop
jo
fwait
mov
dec
test
or
pop
enter
cmp
pop
shll
mov
jmp
js
out
ret
xchg
cmp
add
inc
mov
rorl
push
jge
adc
jge
int
and
jge
std
push
leave
pop
cs
xor
pop
aaa
outsb
ds
popl
dec
and
scas
movsl
sub
ds
inc
sub
nop
js
loopne
dec
push
sarb
outsl
ss
sub
jge
jle
mov
fisttpl
xor
test
lock
cmp
andb
push
add
inc
insb
cmp
aam
repnz
stos
dec
sarl
outsb
mov
xabort
pop
aaa
call
jmp
ja
adc
mov
test
js
int3
jno
push
xor
jge
mov
jns
xor
in
out
mov
inc
and
int3
jl
test
stos
adc
pop
mov
sub
nop
push
and
in
mov
xchg
inc
mov
jle
das
xchg
mov
mov
jmp
shll
push
test
ret
push
into
push
jno
push
jbe
jbe
test
scas
mov
xor
and
outsl
sub
push
xchg
mov
js
pusha
scas
outsl
into
popa
repnz
out
dec
jmp
test
hlt
cli
loop
into
dec
data16
bound
dec
inc
push
sub
mov
pop
scas
sub
dec
mov
inc
dec
mov
bound
jge
addr16
push
push
movsb
lods
dec
or
cmc
mov
fs
cmc
push
fs
out
stos
xor
pop
adc
mov
cmp
pop
sbb
lret
add
jo
cltd
mov
orb
mov
scas
jb
lret
mov
andb
cmpsl
in
dec
lock
mov
dec
orb
movl
xchg
mov
push
push
out
int3
sbb
arpl
inc
test
cmp
out
jge
lret
push
mov
jo
js
imul
in
add
addr16
sti
pop
push
push
sbb
inc
inc
shll
jno
pop
sbb
cmp
gs
int3
jge
push
lret
add
ja
sub
stos
xor
push
mov
loop
and
rcrl
push
cwtl
mov
movsb
ljmp
inc
push
scas
sub
cmpsl
push
pop
inc
lcall
or
add
movaps
fdivrl
enter
cmp
popa
scas
mov
out
in
mov
dec
pusha
add
testb
and
incb
imul
sub
arpl
mov
sub
dec
fiaddl
lcall
add
sbb
lret
imul
or
lock
inc
dec
test
mov
insb
outsl
adcb
jl
addb
push
mov
and
pop
fmull
aaa
nop
sub
or
push
jl
ja
ja
pop
xchg
fstpt
cld
cwtl
jle
jns
mov
dec
lock
add
jg
xor
mov
mov
pop
mov
inc
out
pop
cmp
jmp
push
ljmp
sbb
and
mov
jno
scas
jae
in
movsl
out
cmp
or
sahf
imul
insb
dec
mov
pusha
cmpsb
push
jl
sbb
sub
scas
push
sub
dec
imul
iret
mov
scas
mov
ss
cmp
jp
sub
sub
js
bound
lods
inc
pop
mov
mov
pop
inc
in
or
movsb
test
rcrb
push
push
push
std
adc
in
popf
mov
cmp
mov
outsl
pop
lahf
ljmp
addb
cwtl
push
mov
enter
call
mov
cmp
in
fidivrl
movsl
jbe
ljmp
out
add
jns
scas
and
add
out
pslld
jns
mov
xor
jnp
shlb
popa
outsb
bound
and
lcall
out
fldl
jp
mov
cmp
das
cwtl
inc
fwait
sbb
dec
lcall
js
movl
push
mov
stos
aam
sbb
sbb
and
ss
insb
popa
rcll
mov
fsubrl
adc
pop
push
mov
pop
jg
adc
loop
popa
scas
aas
int
adc
iret
call
dec
outsl
iret
test
push
jbe
stos
out
push
movsl
mov
jo
push
test
sub
shrb
inc
outsl
jp
push
stos
ret
sub
sub
insl
push
add
jne
cmp
mov
jecxz
pop
out
call
insb
popa
xor
adc
mov
data16
imul
jge
lods
or
test
bound
sub
fwait
jge
mov
push
aas
leave
cwtl
lcall
xor
not
mov
das
xor
inc
outsb
dec
inc
adc
cmp
xor
mov
movsb
clc
dec
cs
cld
cmp
ffreep
add
ja
or
dec
bound
fadd
test
insl
ds
add
add
inc
mov
inc
sarb
sub
dec
jae
das
movsb
push
cmp
cmp
cmp
outsb
inc
out
sub
xor
in
inc
testl
sub
sbb
arpl
and
scas
js,pt
leave
lret
xchg
test
pop
sti
mov
push
push
mov
out
inc
dec
lret
call
pop
mov
pusha
lods
loopne
adc
cmp
adc
add
or
test
je
xchg
push
mov
mov
cltd
pop
test
dec
and
dec
fldt
cmpsl
xor
adc
cmpsw
pop
fisubrs
jo
push
es
and
dec
mov
or
and
es
xchg
addr16
dec
cmpsb
repnz
fmul
cmp
xchg
rolb
dec
cli
mov
out
jmp
stos
in
inc
cwtl
cmp
cmpsl
rdmsr
dec
push
sub
daa
sub
ljmp
popa
dec
jbe
push
in
mov
add
adc
jb
outsl
push
mov
pop
pushf
push
fs
push
popf
xchg
insb
adc
imul
mov
push
dec
or
arpl
out
mov
mov
pushf
cmp
pop
push
push
dec
sbb
pop
xor
insl
xor
inc
and
pop
clc
daa
jae
jbe
popa
sub
cltd
mov
data16
test
xchg
add
cmp
aas
test
test
jae
jb
lea
dec
xor
xchg
inc
xor
pop
and
je
push
push
lods
mov
or
inc
jl
sbb
loop
mov
cmp
stos
mov
stos
outsb
or
repz
in
sub
xchg
fsubp
ret
xor
arpl
movsb
or
sub
pop
outsb
test
jns
cmpsl
ss
jmp
js
rcrl
ret
sbb
mov
inc
mov
dec
sbb
fdivs
dec
and
and
dec
dec
mov
xchg
cmp
dec
jno
cmp
and
push
mov
scas
pop
ljmp
cltd
cmp
sub
dec
sbb
ja
lcall
setg
out
lret
icebp
push
mov
jbe
jp
and
mov
repnz
cmp
and
mov
pop
mov
test
mov
dec
xchg
pop
lea
dec
pushf
ja
mov
pop
psubusw
jo
out
out
aas
cmpsb
adc
loopne
inc
scas
outsb
inc
mov
scas
or
repnz
addr16
add
stc
mov
push
insb
out
hlt
sub
fistl
jb
jne
ud0
fidivs
sub
cmp
mov
sti
in
push
or
rorl
lret
outsb
lahf
in
mov
out
lret
movsl
push
mov
xor
xchg
out
mov
cmp
jnp
dec
scas
lret
orb
gs
push
sbb
jae
movsb
or
js
and
cld
cmp
mov
xlat
add
frstor
aad
and
pop
and
sub
movsb
and
jno
dec
cmpsb
mov
ret
jb
pop
emms
roll
call
inc
push
ljmp
or
pop
jl
cmp
ret
fcoms
fdivrl
inc
or
and
add
sahf
paddd
inc
pop
dec
xlat
jne
mov
mov
mov
cmp
mov
push
or
fidivrl
jo
cli
push
repz
mov
ljmp
push
push
mov
sti
pop
lods
sahf
btc
jle
adc
mov
outsb
push
cli
aaa
xor
addl
mov
sub
ret
repnz
lret
cmp
shr
ja
xor
cltd
insl
ret
repnz
sub
leave
mov
mov
cli
push
cmp
inc
enter
jl
push
sub
push
jecxz
dec
xor
mov
aam
pop
repnz
xor
jmp
adc
push
mov
and
pusha
scas
test
cmp
int3
add
jbe
dec
mov
addr16
call
rcl
push
and
sbbb
in
ja
mov
mov
sbb
pop
and
pop
jle
xchg
jge
dec
in
into
lds
and
call
adcl
mov
jg
dec
popa
pop
out
mov
ss
fistpll
popa
sub
cmp
add
popa
inc
popa
push
push
mov
xor
mov
test
js
cltd
cmc
dec
xchg
pop
popa
add
add
test
jecxz
arpl
cmp
outsb
out
leave
fidivl
cmp
xor
pop
cmp
and
lcall
sbb
inc
in
cmovl
and
or
pop
cmp
scas
inc
xor
xchg
ja
dec
xor
cmp
or
das
jnp
sub
fdivrs
call
mov
add
jmp
dec
dec
cltd
repnz
inc
cmpsb
outsb
cmp
cmp
mov
fstpt
gs
in
std
ret
adc
in
stc
push
cld
sub
outsl
test
dec
fisubrl
je
js
cli
dec
test
jne
push
jecxz
aaa
es
loop
cmp
rolb
cmpb
push
mov
out
decb
mov
jnp
cmc
das
pop
mov
jmp
mov
lds
cmpsl
out
test
pop
cmp
lea
lahf
mov
jg
stos
xchg
sub
out
sub
xor
inc
dec
inc
dec
insb
jp
inc
push
ljmp
xchg
xchg
mov
push
mov
out
dec
cmc
or
ds
daa
scas
inc
and
incb
push
mov
movsb
jmp
lods
ss
cs
subl
lds
aas
out
jmp
push
push
lock
mov
adc
mov
bound
pop
mov
mov
inc
jecxz
mov
xchg
mov
lods
xor
push
leave
test
mov
lock
cs
iret
fdivrs
inc
cmpsb
cmp
clc
sbb
or
stos
inc
jbe
xor
scas
cmp
rcrb
nop
xor
in
imul
das
jnp
cmpl
in
scas
das
mov
cltd
imul
arpl
aad
jo
addr16
dec
add
ja
lds
xlat
jb
jne
jns
test
cltd
xor
dec
cmpsl
dec
cmovae
dec
and
sub
dec
push
xor
xor
das
dec
push
jmp
or
xor
sub
sbb
repnz
dec
jns
dec
sbb
mov
inc
in
jbe
pop
mov
dec
scas
inc
sti
xchg
sub
or
out
push
into
dec
fisttpl
ss
loop
jno
sbb
push
imul
xchg
jbe
ret
xor
inc
push
pcmpeqd
mov
add
lock
pop
sbb
xlat
xchg
xchg
xchg
out
sub
pushf
scas
push
mov
jne
mov
inc
xor
xchg
lds
int
movl
test
or
in
push
sbb
in
nop
jbe
jb
repz
data16
lds
icebp
pop
subl
daa
call
fisubrl
dec
inc
out
data16
shrb
loopne
mov
imul
mov
inc
insb
mov
mov
dec
mov
sub
scas
ss
lods
bswap
cmp
pop
cltd
loope
popf
rcll
lds
fsubrs
jb
stos
dec
test
inc
das
xlat
mov
ljmp
aaa
fstp
and
jge,pn
add
subb
imul
adcb
mov
sbb
mov
cs
add
imul
adc
ja
xchg
int
inc
push
mov
cmpl
adc
pop
jecxz
sub
jge
ds
data16
ljmp
and
inc
cmp
fldt
je
add
ss
sub
cmpsb
mov
add
pusha
adc
mov
mov
dec
mov
mov
sbb
xor
repnz
cmpsb
int
xchg
pop
sub
cmp
ror
pinsrw
das
sbb
js
add
xchg
cwtl
outsl
sarb
ds
sti
inc
and
jo
and
mov
imul
aam
sbb
cltd
sbb
or
mov
in
sub
push
cwtl
imul
sub
sbb
mov
data16
jecxz
push
dec
loope
add
xlat
outsb
pushf
push
stos
test
cmp
jecxz
inc
insb
pop
popa
mov
xor
pushf
push
mov
fisubrl
cwtl
arpl
push
mov
fldenv
sub
push
cli
or
cmpsb
gs
xor
mov
cmpl
popf
dec
repz
dec
ss
in
pop
inc
test
lock
cmp
mov
xor
fisubrs
imul
je
mov
jg
jecxz
stc
ja
aaa
test
insl
mov
jne
cltd
pop
mov
pop
mov
adc
sahf
inc
stos
cmp
fwait
jno
inc
cmpsb
mov
mov
pop
fistps
roll
das
push
and
sub
out
mov
sub
dec
adc
nop
sbb
aas
daa
std
cmp
cmp
push
in
fmuls
ss
dec
out
sbb
mov
aaa
push
loope
aas
jne
jb
jge
adc
rorl
adc
lods
dec
popf
jge
mov
sub
mulb
mov
inc
xor
mov
mov
mov
mov
inc
imul
ja
iret
sbb
andb
adc
loop
fcmovnu
movsb
lret
push
inc
mov
xchg
sub
xor
insl
mov
mov
iret
cmp
pop
arpl
cmpsl
stos
pop
inc
dec
inc
add
out
outsb
ret
push
js
xor
sbb
mov
leave
xchg
dec
push
mov
pop
pop
mov
mov
dec
jns
insb
notb
iret
sti
xor
cld
ficoms
jle
pop
xlat
imul
mov
movsl
jbe
insl
sub
fiadds
and
jecxz
mov
dec
jne
mov
fwait
mov
scas
push
mov
loop
enter
aad
lock
bound
and
xchg
sbb
dec
lret
pop
stos
sbbb
adc
jnp
iret
sub
stos
int3
into
mov
pop
out
mov
dec
jnp
pop
jae
jbe
pop
movsb
inc
xor
lcall
lods
sbb
mov
mov
clc
push
and
insb
or
clc
mov
pop
xchg
and
iret
ret
iret
and
addb
dec
sub
adc
ds
xor
mov
test
bound
mov
mov
push
jl
cmovbe
push
nop
cmp
scas
test
rclb
xor
mov
sarb
adc
rcl
mov
out
aaa
jp
adc
and
sbb
jle
xor
mov
test
enter
push
adc
jo
aam
movsl
jo
cld
mov
or
push
and
popf
inc
mov
cwtl
xchg
lret
rolb
inc
jno
imul
loop,pn
sub
out
lcall
mov
sarl
cs
lods
notl
xlat
cpuid
lret
dec
add
adc
mov
in
pop
lds
inc
addr16
inc
cmc
jns
fwait
cld
lods
aad
mov
jle
das
test
inc
mov
jmp
push
decb
sahf
stos
loope
out
mov
mov
stos
ja
and
cs
pop
xor
dec
xor
test
imul
push
cmp
and
xchg
inc
cmp
bound
fwait
add
push
xchg
push
sub
fwait
xor
jge
stos
aam
ljmp
sub
cwtl
jo
mov
inc
and
nop
mov
pop
out
adc
in
pop
jo
scas
rolb
fisubs
dec
jl
jne
ds
mov
push
test
psadbw
dec
inc
mov
xor
push
dec
sbb
push
adc
lods
xlat
fsubs
cltd
pop
mov
push
jns
xor
add
das
jo
orl
xchg
xor
and
mov
lea
lds
int3
mov
cmp
push
in
sub
aaa
das
pop
cmp
ds
fwait
push
add
push
in
jae
mov
add
loopne
jbe
add
sbb
mov
pop
shrl
cmp
pop
pop
push
sub
cmp
mov
ss
daa
aaa
dec
cs
ss
fwait
out
xor
jns
lds
rcll
cmp
dec
mov
stos
loop
mov
in
mov
fdivrs
push
ret
or
leave
lods
jg
mov
jp
outsl
push
adc
inc
or
imul
pop
jle
jge
cs
jns
ljmp
repz
test
mov
inc
shl
rorb
rcr
and
pusha
stc
nop
sar
jle
xchg
cld
xchg
inc
das
loop
cmp
enter
cltd
aad
jo
xchg
fistps
lds
xchg
loop
and
mov
in
int
loopne
jns
sbb
in
test
das
cmp
sbb
push
insb
pop
dec
in
aam
pop
dec
lret
mov
xor
jno
enter
xor
mov
push
xchg
in
imul
sti
xor
push
bound
stos
aaa
leave
sbb
mov
enter
cltd
mov
scas
js
fists
adc
shrl
mov
add
xchg
mov
inc
add
cmpsl
pop
out
aad
sbb
clc
cltd
scas
add
aaa
pop
push
xchg
data16
push
jae
and
add
and
lods
xchg
ljmp
loope
jbe
lods
sub
push
in
inc
orl
stc
popa
sub
jg
cmp
loope
inc
scas
mov
add
jmp
jecxz
jae
mov
sub
sbbl
mov
ficoms
cs
sub
repnz
scas
push
mov
clc
push
dec
subb
cmp
and
lea
lcall
scas
aas
nop
mov
test
in
xor
cld
mov
sbb
sub
xchg
loopne
xchg
adcl
fs
xchg
ss
ret
jae
push
push
movsb
out
inc
scas
mov
addr16
inc
xor
sar
cli
mov
push
adc
call
and
popa
jbe
out
mov
xor
adc
imul
sub
and
insb
cmp
repnz
push
inc
and
pop
and
dec
or
and
jl
mov
mov
xchg
dec
add
add
daa
jmp
and
testb
cmovae
mov
int3
pop
jae
lahf
mov
out
sub
into
adc
jbe
jg
mov
mov
xor
insb
xchg
and
jbe
fidivs
repz
add
jns
das
jns
sarb
cltd
jp
cmp
sti
clc
dec
push
mov
aam
push
scas
inc
out
cmp
lahf
stc
dec
loopne
mov
sbb
xchg
cmp
adc
enter
jl
ja
xchg
mov
mov
dec
insl
mov
cmc
push
inc
push
mov
out
dec
lcall
mov
jne
xchg
xchg
stos
fsts
outsb
pusha
dec
int3
and
mov
push
push
cmp
popf
push
jns
add
or
fmul
cmpsb
sbb
adc
jp
pop
or
in
out
cmp
call
scas
push
cmpsl
seto
mov
ljmp
jle
inc
xor
fistpl
sbb
in
por
pop
jecxz
sub
mov
psubusb
jp
outsl
jae
mov
lods
mov
mov
mov
pushf
imul
cltd
aam
dec
mov
sbb
xlat
int3
dec
mov
nop
or
add
out
stos
or
scas
push
sbb
mov
sbb
pop
jae
ret
or
xor
xchg
js
scas
dec
cld
cmp
push
inc
aaa
mov
push
out
orb
inc
movl
mov
inc
loopne
xchg
mov
mov
sub
mov
test
or
adc
out
cs
lds
lea
mov
push
in
inc
repnz
cli
ret
ss
movsb
xorb
jae
cli
ss
cmpsb
out
cs
aam
pop
out
aam
test
outsb
sub
movsb
jne
data16
out
fidivl
inc
aas
dec
aad
pop
aas
insb
dec
xchg
ficoml
cmp
out
lods
stc
in
data16
mov
cli
lret
push
inc
mov
pushf
rclb
jge
cwtl
test
or
sbb
movsb
push
mov
mov
cs
daa
and
mov
movsb
mov
mov
add
mov
cmp
cs
push
add
je
lock
mov
jmp
add
and
notl
ret
or
adc
scas
in
or
loop
sbb
clc
pop
jp
mov
jle
clc
je
sub
mov
cld
cmp
pop
xchg
ret
aas
lcall
adc
rcll
movl
cmpsl
jl
push
adcb
mov
dec
jb
inc
mov
loopne
ret
push
fidivrs
cmp
mov
ret
out
xchg
and
rcrb
pushf
and
ljmp
lcall
rol
mov
js
and
jmp
es
push
cmp
int3
and
cmp
add
insb
mov
popf
outsl
and
xor
push
add
xor
xor
jl
cmp
pop
adc
sbb
adc
mov
adcb
cmp
cmc
fwait
mov
cmp
scas
popf
dec
xor
add
mov
mov
test
scas
roll
push
mov
dec
jle
xchg
dec
xchg
scas
jmp
cmpl
aad
sbb
dec
fcoml
cmpsl
fisubrl
pop
stos
mov
jl
push
pinsrw
int3
loopnew
mov
push
roll
in
pop
jns
int3
lret
inc
push
clc
cmc
inc
pop
lret
mov
or
movsl
ficompl
dec
outsl
inc
out
push
daa
jne
inc
mov
mov
push
and
aaa
mov
dec
into
jge
int
xor
in
lds
mov
adc
call
mov
pop
insb
jmp
dec
mov
bound
ficompl
shlb
aaa
mov
cld
dec
out
test
scas
data16
jp
scas
mov
fsubrl
lret
or
sub
xchg
mov
lods
dec
insb
pop
andb
lret
dec
lahf
and
or
cmp
dec
mov
push
repnz
pop
xchg
sub
lods
jmp
in
mov
lahf
and
inc
sub
mov
setns
mov
and
jl
xor
mov
pop
xchg
xlat
jge
andl
jnp
push
cmp
cltd
sub
imul
sub
adc
cld
cmp
add
push
jg
movsl
inc
cli
xor
pop
dec
cmp
adc
movb
lods
imul
repz
push
ljmp
and
lret
push
fcmovb
and
inc
mov
inc
nop
sub
push
mov
mov
subb
jp
inc
or
xchg
fstpt
fildl
push
pop
aaa
xor
stos
sub
ret
push
lds
push
popf
jl
lods
orb
stos
mov
ds
jno
pop
xor
addb
test
adc
enter
aad
stos
mov
in
mov
mov
push
int
scas
lcall
mov
aas
addl
lods
xor
cmp
scas
xor
dec
ss
stos
or
cs
inc
xor
ss
mov
push
out
mov
and
fisttpl
mov
out
jg
int3
mov
inc
test
pop
leave
in
jmp
and
jnp
fucomip
mov
fs
adc
mov
and
lret
mov
mov
orb
cmp
aam
into
jns
jnp
loope
push
orl
push
outsl
stos
xchg
or
cmp
test
cmp
pop
push
pop
xchg
aad
ljmp
push
ds
jl
mov
fld
fwait
aaa
jbe
jns
test
fisttpl
mov
in
jg
add
pop
std
fsubl
xor
and
mov
call
push
inc
push
lods
std
dec
bswap
mov
inc
adc
dec
xor
cli
inc
push
jns
imul
mov
dec
cmp
cmp
cmp
test
jg
insl
jmp
addr16
pop
inc
pop
sbb
jns
push
adc
fldcw
nop
mov
sub
je
sub
prefetcht1
adc
rorl
popa
pop
sbb
lea
cmp
test
lock
inc
xchg
inc
xchg
inc
and
stos
lahf
mov
pop
aaa
aam
xor
mov
push
xchg
xor
mov
inc
inc
test
aas
bound
dec
mov
je
and
scas
xor
cmp
ss
scas
inc
push
dec
cmp
xor
sub
out
enter
fwait
je
int
mov
cmp
and
cmp
cmpsl
xchg
jle
mov
leave
rcll
mov
inc
lret
sub
cmpb
inc
cmc
inc
movsl
mov
xor
in
adc
xor
mov
orb
shlb
jnp
or
rorl
cmpl
sarl
jne
iret
mov
jecxz
movsl
outsb
pop
clc
sarb
jo
jmp
push
ja
scas
mov
out
cmp
add
push
jbe
push
pusha
push
push
inc
xor
cmp
and
loop
mov
in
ret
mov
aaa
fwait
pop
fistl
adc
bound
jbe
fldcw
add
fcmove
mov
ret
dec
push
stc
test
orps
cmp
cli
adcl
push
mov
fidivs
jae
cmp
push
call
adc
scas
ljmp
sbb
or
jae
or
aam
sbb
repnz
mov
int3
imul
dec
xor
enter
mov
pop
idivl
and
add
icebp
push
clc
imul
ss
mov
test
xchg
iret
push
pop
mov
outsb
call
or
stos
inc
mov
test
cmpsb
ret
je
outsb
lcall
sub
fisttpll
cmp
push
test
shll
scas
add
imul
roll
cmp
aaa
add
fwait
xor
sub
mov
cli
xchg
arpl
xor
clc
dec
aaa
adc
addl
sbb
mov
mov
pop
test
bound
sub
add
js
adc
imul
adc
sti
outsl
popa
aas
or
inc
dec
xchg
mov
mov
fdivrs
aas
ficoms
jl
jb
imul
movsb
fidivl
push
push
loop
push
mov
test
mov
push
jge
mov
andl
and
jnp
bound
outsl
push
stc
mov
push
xor
mov
imul
cwtl
lds
and
push
dec
xchg
and
sbb
cld
int
lock
or
test
mov
fistps
addr16
pop
push
pop
sub
or
jbe
rol
or
xorl
push
pop
or
loope
sbb
aas
cmp
sbb
inc
stos
jecxz
push
dec
push
push
fs
jae
pop
cmpsl
loope
js
setne
fstps
and
and
stc
int
movsb
pop
mov
lret
xchg
lods
decb
jecxz
cmp
xchg
movsl
out
arpl
and
jp
xor
jbe
inc
pop
lods
jbe
xor
dec
add
inc
repnz
imul
adc
jns
clc
fwait
dec
adc
into
sahf
icebp
mov
stos
lret
sub
push
jbe
pop
ja
jmp
mov
pop
mov
jge
pop
out
fildl
movsb
and
xchg
arpl
xchg
jns
xchg
mov
jns
imulb
jp
dec
orl
aaa
pop
mov
push
and
rol
sub
and
fdivs
aas
jno
xchg
imul
adc
mov
sahf
inc
or
fimull
in
and
sub
push
dec
sub
bound
dec
sbb
sahf
pop
test
sub
add
bound
mov
cli
scas
push
nop
pop
out
jl
shlb
mov
daa
stos
add
pop
insl
xchg
loop
mov
and
iret
mov
or
lock
incl
sub
cmp
adc
pushf
add
mov
dec
push
test
stos
stos
cs
sbb
xchg
sahf
mov
mov
std
mov
push
shrl
mov
cmp
push
pop
dec
cli
inc
dec
inc
loope
pushf
ficoml
dec
das
jae
out
pop
bound
mov
movq
xchg
in
je
and
and
xorl
out
stos
dec
pushf
call
fildl
adc
int
pusha
ss
int3
xor
and
and
int
dec
push
fisttpll
push
les
inc
mov
in
fmuls
cmc
aas
test
dec
push
pop
mov
out
insb
fisubrs
push
jnp
jle
rcll
or
adc
jl
mov
mov
nop
xor
mov
push
sti
sbb
push
lret
dec
pop
push
adc
repnz
inc
mov
mov
fwait
cmp
jnp
popf
lock
dec
mov
adc
test
mov
pop
sbb
add
int
add
ds
addr16
mov
test
mov
mov
jmp
lret
cmp
mov
jne
inc
sbb
and
aam
fildl
xor
shl
adc
dec
xor
cmpsl
mov
xchg
pop
lods
push
ud1
xlat
ljmp
mov
jno
ljmp
cld
or
dec
mov
jle
and
int
insl
repnz
and
inc
into
aad
jne
in
fwait
imul
in
sbb
sub
std
popa
xor
aas
cmpsl
mov
lock
ss
cs
jo
ss
mov
jle
jbe
cmp
sahf
into
cmp
nop
inc
sub
jns
mov
aaa
aam
xor
insb
into
js
leave
popa
fld
adc
jae
fmul
and
add
mov
fiaddl
movsb
inc
pop
sub
jg
mov
push
mov
daa
mov
inc
mov
and
mov
xchg
mov
das
jnp
insb
subl
add
dec
cld
mov
push
xchg
mov
xsaves
shrl
mov
loope
in
and
aas
mov
pop
cmp
mov
and
mov
sbb
dec
xor
sahf
and
sbb
cltd
jne
adc
pop
push
fwait
jb
push
das
inc
pop
dec
xchg
dec
test
mov
out
mov
ss
dec
inc
in
mov
push
in
jbe
in
pop
stos
addl
sub
xor
das
pop
sbb
inc
pop
dec
cmovbe
dec
dec
movsl
sbb
xor
mov
ss
test
outsl
add
and
out
insb
xchg
pop
stos
clc
push
push
test
das
decb
out
push
nop
sub
lahf
stos
scas
add
mov
or
push
fcomp
jne
mov
xlat
out
daa
jg
int
insb
xchg
or
mov
mov
sbbl
mov
outsl
mov
sti
jns
lock
xchg
lock
or
sbb
lock
xor
adcl
das
imul
ljmp
xor
lret
ds
jno
jnp
cmp
xchg
mov
add
push
stc
push
leave
scas
fdivs
adc
sbb
mov
push
scas
pop
dec
adc
xor
xor
add
jmp
fisubrs
sbb
loope
lock
push
xchg
push
loop
pusha
sbb
test
mov
add
mov
loop
push
jg
int
xchg
push
mov
loop,pt
add
mov
das
test
mov
in
lock
dec
add
jecxz
sub
cli
sarb
sub
scas
sub
xlat
in
jo
mov
mov
cs
mov
loop
inc
andps
push
sbb
out
popa
decb
xchg
mov
ja
in
rcrb
pushf
lods
addr16
cmpsl
jge
push
test
test
aas
movsb
movb
stos
lods
sbb
mov
push
sbb
push
ja
loop
jg
dec
adc
mov
subb
rclb
dec
or
incl
sarl
call
in
lods
adc
bound
mov
push
push
mov
or
xor
xchg
sbb
fimull
adc
fcmovu
in
cli
push
leave
clc
cmp
loope
mov
jbe
jge
call
hlt
pop
jo
outsb
insl
push
mov
in
mov
rcl
lret
aaa
mov
cmp
jb
js
clc
inc
das
push
negb
les
mov
scas
cli
mov
or
into
xor
inc
inc
pop
jl
inc
sbb
int
cli
inc
in
push
test
out
lret
mov
addr16
add
pop
mov
jne
sub
push
sbbb
das
daa
xor
and
inc
adc
pushf
adc
xchg
cmpsl
cli
outsb
negb
xchg
cmpsl
and
test
test
dec
sarl
int3
cmp
lods
xchg
out
sti
into
push
dec
inc
mov
ss
mov
mov
test
mov
ss
jle
jg
imul
in
imul
adc
sti
mov
dec
ss
inc
pop
dec
int3
shrl
dec
pop
ss
lret
jge
inc
cmpsb
repnz
and
popa
sub
ret
cmp
sub
cmovg
das
dec
outsb
lcall
repnz
imul
jnp
movb
fdivr
push
jl
scas
cs
inc
ret
dec
ljmp
xor
jo
cmp
cmpsl
hlt
pop
fs
push
lret
adc
punpckhdq
stc
fwait
lea
inc
aaa
cli
jo
mov
mov
sub
mov
outsb
xor
and
pop
aaa
test
cs
pop
xor
push
push
gs
ds
imul
shrb
xorl
mov
or
rcrb
push
dec
insb
mov
das
stos
push
out
adc
in
lods
sub
mov
je
and
jbe
adc
lds
push
in
lods
dec
jne
or
xor
jne
xor
mov
ss
and
sub
sbb
xor
xchg
sbb
jg
mov
cltd
mov
sbb
jnp
push
sub
dec
insb
ljmp
sub
push
and
mov
mov
paddusb
inc
xchg
jb
xchg
clc
mov
ret
test
xor
sub
lcall
ss
jecxz
jnp
movsl
jne
inc
cmovg
and
push
aaa
paddb
dec
test
jbe
xor
aaa
add
mov
inc
mov
int
in
lock
jl
xor
or
test
cltd
sbb
jne
mov
outsl
inc
adc
dec
cmp
sub
jns
rcl
aam
cltd
cmp
cli
loope
or
das
and
int
dec
hlt
icebp
add
adc
push
mov
cltd
fstpt
cs
pushf
clc
cmp
add
insb
jns
into
cmp
imul
jle
pop
fnsave
je
sar
inc
mov
push
inc
jae
mov
rorb
mov
clc
leave
cld
or
and
mov
dec
idivl
xor
cs
mov
fdiv
xor
std
aaa
mov
mov
lahf
dec
push
push
cs
insl
mov
lods
pop
pop
clc
jp
pushf
sbb
stos
setp
jno
in
pop
push
notl
test
mov
scas
and
mov
movsb
out
call
cmc
jo
mov
in
imul
lea
movsl
mov
sub
dec
icebp
xor
cmp
scas
mov
cmp
push
jb
enter
movsb
subb
fwait
sub
je
aam
insb
fs
jge
dec
cmp
cvtpi2ps
jle
or
xchg
or
jl
xor
loop
jp
push
adc
out
xor
js
dec
adc
gs
insl
xchg
cs
adc
inc
popf
push
adc
sbb
mov
insl
sub
jmp
shll
rcll
subl
cmp
in
enter
scas
mov
and
push
lock
pop
movsb
mov
lcall
lods
dec
test
mov
cli
push
ret
mov
xchg
neg
stos
icebp
sub
pop
ja
test
jo
mov
cs
jbe
sahf
dec
fwait
xor
imul
std
push
cmp
mov
scas
inc
loope
das
lret
cmpsl
dec
jb
ficoml
and
bound
aaa
inc
push
xor
out
sbb
sub
inc
xchg
mov
cwtl
inc
mov
push
ljmp
sar
clc
dec
outsb
push
pop
jo
mov
fcomps
mov
jno
adc
sarl
push
outsb
jo
clc
scas
js
ja
js
and
lds
sub
iret
jae
dec
inc
mov
push
mov
mov
cmpw
mov
mov
push
cmp
sbb
ss
ret
scas
pop
adcb
mov
pop
clc
inc
add
pop
pusha
sub
lcall
push
mov
mov
push
cmp
lret
cmp
push
xchg
ficoml
aas
push
pushf
js
dec
fcmove
xchg
out
call
mov
cmp
ljmp
sbb
mov
jbe
clc
daa
cmp
fildl
daa
arpl
mov
ja
shrb
adc
repz
dec
or
loope
bnd
std
cmp
cmp
or
pop
sub
loope
or
jno
mov
mov
in
hlt
pop
mov
inc
test
test
shl
psraw
jnp
push
enter
jb
clc
sbb
scas
hlt
push
or
push
inc
xor
xchg
mov
cwtl
test
jno
stc
sbb
in
or
cmp
lods
imul
in
bndstx
outsb
mov
fnstsw
sbb
cpuid
adc
cmp
cltd
add
xor
insb
fidivs
cwtl
jne
test
or
inc
in
push
frstor
js
xor
clc
pop
das
pop
add
xor
popa
mov
mov
mov
inc
jnp
push
sbb
scas
lahf
aas
sbb
mov
repz
jne
inc
mov
dec
fbld
sbb
push
push
mov
cs
sahf
pop
jne
aaa
lret
sbb
dec
add
hlt
pop
or
sub
push
mov
popa
icebp
inc
cmp
lods
dec
inc
mov
clc
or
ja
out
sub
imulb
and
addr16
call
dec
mov
dec
cmpsb
mov
aaa
sbb
outsb
or
xchg
pop
sbb
push
inc
and
or
and
inc
dec
arpl
push
mov
out
push
mov
push
lds
aaa
fimull
lods
pusha
test
aaa
cwtl
sbb
scas
rolb
test
mov
insb
test
maskmovq
imull
rcr
fiaddl
test
mov
lcall
push
xchg
push
stos
inc
icebp
aas
jne
hlt
and
and
inc
and
cmpsb
inc
andb
push
sub
cmp
adc
inc
push
inc
fldcw
xchg
add
mov
das
popa
call
dec
xchg
ss
jno
das
sbb
inc
and
and
push
push
inc
push
imul
je
rclb
das
fwait
and
stos
and
xor
adc
pop
xchg
fimuls
imul
stos
je
test
dec
scas
outsb
imul
mov
sbb
bound
adc
sub
jle
mov
adc
std
xor
mov
jmp
imul
mov
clc
popl
ja
scas
mov
jae
pusha
and
out
cmp
add
in
push
and
clc
push
movsb
clc
sbb
test
xor
pop
gs
or
ret
das
cltd
mov
cmp
mov
xor
xor
mov
cltd
adc
scas
movd
mov
jp
loope
enter
push
xchg
cmp
push
in
psraw
and
mov
aam
xor
sub
js
popf
push
test
and
fldenv
sbb
arpl
cmpsl
ret
shll
imul
test
fsubs
cmp
gs
dec
sbb
ljmp
rcll
ljmp
mov
xor
andb
mov
xor
sbb
pop
cmp
adc
in
divb
scas
aaa
psubq
dec
and
cmpsb
mov
mov
rolb
mov
sub
mov
pop
leave
outsb
pop
xlat
mov
imul
add
sub
xchg
inc
push
les
inc
ret
xchg
lods
mov
test
push
movsl
std
jmp
push
inc
aaa
movsb
xor
lods
ss
xchg
out
xlat
mov
outsb
push
dec
push
pop
sbb
lods
aaa
bnd
je
jmp
adc
xchg
jmp
inc
fsts
inc
sub
mov
inc
call
stos
dec
ss
imul
dec
seto
stc
push
stos
lahf
in
stc
xchg
mov
cs
xchg
out
sti
repnz
inc
and
outsl
gs
add
cmp
aas
hlt
jno
inc
adc
xchg
push
dec
in
int
add
sarl
mov
aam
sti
inc
jae
dec
adc
inc
inc
sbb
jne
mov
pop
sbb
fmull
and
mov
inc
sub
stos
out
lcall
mov
pop
fwait
in
sbb
mov
popf
inc
push
dec
daa
jno
vmwrite
out
pop
jo
daa
in
mov
mov
pop
xor
and
js
pop
scas
mov
inc
js
pusha
das
pop
mov
pop
xor
aaa
icebp
push
mov
xchg
cltd
lret
int3
out
jmp
cmp
js
add
dec
pop
push
jbe
xchg
mov
mov
sbb
pop
ljmp
jne
and
dec
popf
dec
or
rol
sahf
dec
mov
lahf
mov
jns
dec
cmp
sarb
mov
push
inc
adcl
cmpsb
jae
push
cs
sub
sub
test
test
pop
cmp
push
jp
dec
sub
xor
dec
dec
addr16
sbb
xchg
test
daa
or
iret
scas
sbb
inc
stc
and
adc
into
jmp
mov
cmp
or
sbb
cmp
or
repnz
add
mov
lods
push
mov
imul
push
jb
fstpl
shlb
popaw
cwtl
shll
sub
imul
imul
add
jmp
shrl
stc
mov
adc
and
jbe
jecxz
push
nop
outsb
mov
push
adc
imulb
inc
repz
pop
jg
shll
mov
mov
xor
lcall
mov
lret
dec
out
addb
push
and
imul
push
pop
fwait
xor
mov
test
sbb
xchg
stos
dec
insl
test
outsb
lcall
pop
cmpsl
mov
mov
inc
cli
fs
cltd
dec
in
movsb
add
scas
push
dec
out
jl
jp
arpl
iret
inc
inc
xor
aas
enter
mov
insl
subl
fsubr
dec
fimull
aaa
popf
ret
test
push
mov
daa
push
test
cwtl
mov
negb
nop
and
scas
mov
cmp
enter
insb
sub
dec
xor
cs
pushf
xchg
ficomps
ror
into
cmp
sbb
lcall
sub
mov
or
push
xor
mov
cmp
in
xor
ldmxcsr
leave
sbbl
inc
and
cmp
mov
mov
mov
jge
xchg
sahf
pop
xor
ror
enter
cmp
scas
dec
les
mov
adc
call
or
push
mov
cs
stos
pushf
add
sbb
add
sub
add
mov
cmp
movsb
add
icebp
sbb
ret
sahf
cmp
pop
btr
push
mov
sub
lods
or
test
sbb
in
popa
ja
loopne
clc
push
stos
aam
popa
push
push
setno
mov
fs
pop
cmp
and
and
dec
and
push
fidivrl
adc
test
jmp
fldcw
lds
and
movsl
or
or
scas
insb
pop
jmp
sub
mov
jmp
mov
push
xor
lea
jp
aad
mov
xchg
jnp
xor
outsb
mov
pop
rcll
push
out
push
decb
xor
in
mov
mov
ret
and
push
cli
mov
pop
and
in
aad
mov
xor
xor
jo
fmuls
mov
enter
scas
cmp
cmp
ljmp
xor
mov
mov
xor
jo
jle
ret
push
cmpsl
cmpb
fbstp
stos
mov
push
jnp
jle
fucomip
xor
jp
mov
push
les
xchg
xchg
mov
push
jge
mov
dec
push
std
lret
mov
out
cmp
pop
das
mul
fucom
int3
fwait
das
adc
and
xchg
lock
add
adc
push
cmpsb
mov
xorb
jecxz
ret
push
loope
xor
and
lcall
add
xor
inc
std
adc
data16
jb
xchg
ds
pusha
gs
xlat
mov
in
cmp
pop
sbb
push
mov
sbb
adc
push
ds
sub
mov
sub
mov
fildll
movsb
lods
ljmp
mov
ud0
inc
or
mul
push
pop
add
or
fwait
sub
fwait
xor
nopl
dec
sbb
dec
fidivs
pop
les
arpl
out
loopne
ret
movsl
mov
bound
jns
mov
je
jne
dec
stos
arpl
out
lock
xor
testb
bound
pop
and
dec
rcll
dec
into
xor
dec
in
test
insb
stos
jns
sbb
jo
mov
cmp
aad
lcall
sahf
dec
das
mov
enter
lds
imul
scas
dec
sub
test
aaa
xchg
cmp
cmp
nop
clc
fisttpll
imul
outsb
mov
gs
dec
mov
pop
push
aam
mov
jbe
mov
xchg
push
mov
inc
mov
dec
clc
nop
add
outsb
push
cltd
dec
mov
jecxz
push
mov
insl
dec
into
js
data16
xor
mov
push
adc
fisttps
mov
pop
in
xchg
mov
xor
inc
sti
mov
mov
enter
test
aad
adc
jge
dec
enter
xchg
inc
push
push
test
mov
adcl
adc
mov
xor
lods
xchg
in
cmp
movsb
add
xor
cltd
adc
leave
jno
dec
fnstsw
outsb
adc
sbb
sbb
pop
pushf
pusha
fs
js
dec
jl
lcall
xor
sub
bsr
ret
bound
ss
jge
pop
fsubl
fsubrs
adc
mov
jp
xchg
inc
and
dec
repnz
iret
dec
push
xorl
jne
xor
push
xchg
lock
push
fwait
xorb
jp
int
cmp
jno
add
jns
sbb
mov
xor
jno
lcall
pop
push
jecxz
inc
dec
sbb
inc
xlat
lods
mov
and
in
jo
lret
pop
mov
dec
and
dec
lods
push
jae
daa
xchg
jge
inc
push
orb
xchg
adc
or
int3
lods
xor
lea
add
cmp
cmp
push
inc
sbb
cmpsb
push
mov
inc
loopne
push
lods
xor
adc
jno
sub
sahf
fcoms
lcall
pop
push
push
fisubrl
lock
in
xchg
push
jecxz
push
push
imul
inc
or
stos
mov
cmpsb
mov
stc
out
stc
push
les
rolb
ljmp
mov
xor
mov
bound
int3
push
jno,pt
mov
movsb
cmp
insl
cmp
xor
fs
cmp
cltd
imul
adc
xor
repnz
mov
mov
fmul
aas
push
inc
dec
cmpsb
mov
jno
inc
cltd
cwtl
and
mov
mov
sub
xor
rorb
insb
call
fiadds
xchg
cmp
fwait
das
icebp
sub
cmp
xchg
in
imul
adc
std
jbe
aas
insb
mov
fidivl
adc
sub
or
scas
shlb
andb
push
mov
sbb
pop
lcall
pop
mov
sub
dec
seta
add
test
add
jp
cmp
and
xor
imul
lock
stos
fnstenv
arpl
fldcw
xchg
add
stos
inc
adc
in
mov
and
dec
jge
ret
push
dec
loope
popa
lock
stos
cltd
or
orb
int3
xor
xchg
jmp
and
notl
push
mov
or
pop
scas
cmp
and
push
mov
and
and
lds
add
and
in
jnp
bound
fistpll
dec
jge
fistpl
in
ds
jns
push
push
mov
pop
mov
mov
xchg
push
popf
daa
popa
lock
inc
push
das
std
or
add
mov
cmp
dec
inc
mull
mov
cmp
sub
adcl
add
adc
adc
xor
dec
jmp
popa
jecxz
jmp
mull
shl
icebp
push
popa
jecxz
mov
adc
fwait
rorb
insl
jno
out
sarl
cmp
ss
stos
adc
mov
push
add
push
scas
dec
insb
ljmp
jo
cmp
ljmp
jno
lcall
mov
mov
jb
mov
mov
fmul
test
push
test
ss
lods
push
mov
inc
push
mov
loope
test
sub
test
push
mov
jg
mov
shlb
repnz
sbb
dec
cmpsb
lret
push
jmp
or
inc
aaa
sbb
xor
cwtl
iret
daa
inc
sbb
and
inc
adc
ljmp
xor
lds
mov
lret
jecxz
xlat
fstps
xor
popf
add
ja
rorl
ja
xchg
xor
and
jns
mov
sub
sub
lods
inc
and
jo
vshufps
xor
push
data16
stos
dec
jg
lret
add
ja
lock
daa
cli
cltd
cmp
sub
cwtl
sub
rclb
mov
cmpsb
js
scas
jne
bnd
pop
push
fwait
push
jno
rclb
add
and
pop
adc
jl
dec
pop
jo
shlb
stos
outsb
xor
test
adc
fidivrl
push
adcl
mov
adc
jns
push
shld
mov
jmp
jno
push
cmc
cmovo
push
fwait
sub
inc
mov
out
push
sbb
fildl
out
xchg
fsubl
ret
mov
or
test
inc
in
pop
inc
and
lret
xor
pop
mov
inc
lcall
aam
cli
dec
lds
leave
and
mov
insb
mov
xorps
xor
inc
aaa
pop
cs
mov
xchg
movsb
jle
xor
clc
mov
cmp
int3
adc
inc
push
enter
aam
xor
or
clc
es
test
test
bound
jae
and
xchg
sub
insb
sub
out
jbe
pshufw
jge
sti
sub
clc
mov
cmpsl
ret
movsb
cmp
sub
xchg
notrack
mov
ret
popl
in
inc
push
sub
andl
jge
arpl
call
inc
bound
jb
mov
loop
pusha
push
icebp
jle
jbe
xchg
mov
lods
ja
push
dec
pop
jecxz
add
fldl
sti
sub
xor
push
fstl
outsb
ret
outsl
fadds
stos
push
pushl
insl
cmpsl
cli
das
mov
xlat
out
bswap
inc
lcall
rol
xchg
scas
adc
add
xchg
enter
pop
xor
jns
jge
adc
xchg
cmpsb
leave
test
or
mov
leave
jl
inc
mov
add
ficompl
les
dec
jge
sub
icebp
sub
xchg
lock
dec
adc
mov
enter
mov
push
mov
dec
or
mov
sub
movsl
add
out
test
adc
cmp
jecxz
mov
sbb
stc
cmp
xlat
and
mov
cld
mov
dec
jns
in
inc
xor
lcall
or
or
jge
and
sbb
push
mov
sbb
ret
xor
cli
xor
sub
push
or
sbb
push
mov
lock
mov
jno
pop
ss
fadd
mov
pop
loop
int
or
cmpsb
sarl
test
dec
xorb
out
lret
divb
mov
dec
repz
cmp
dec
or
loope
call
je
mov
adcb
orb
mov
xor
fadds
in
adc
inc
mov
pop
mov
jp
sarb
xchg
or
inc
cmp
cld
testl
fisubs
mov
arpl
aaa
jge
cs
push
lock
cmp
cmp
fs
arpl
sub
ret
jp
jle
dec
jnp
push
insb
adc
jge
roll
dec
dec
push
insl
inc
add
mov
cmc
and
stos
test
adc
jb
js
inc
pop
loop
shl
push
xchg
inc
cmp
add
insl
test
outsb
mov
mov
aam
mov
lods
pop
enter
out
cmp
add
lret
sub
push
mov
cmp
or
mov
xor
and
push
pop
out
ss
pop
push
enter
mov
mov
push
jle
mov
push
decb
xor
jns
pop
mov
cs
divl
push
sub
test
stos
push
enter
dec
test
stos
and
xor
mov
pop
out
dec
add
cmp
jmp
mov
and
ds
stc
out
and
mov
scas
imul
lock
push
push
cmp
mov
lahf
mov
push
push
cwtl
pop
fidivl
mov
cmp
add
pop
test
fstps
fs
push
push
cmp
dec
movsb
ljmp
loope
cmpsb
pop
imul
decl
push
add
inc
scas
xor
sbb
and
andl
scas
jle
lret
test
sbb
inc
sbb
mov
xrelease
add
pushf
ja
addr16
mov
bound
test
xchg
fdiv
jne
lret
lret
test
in
addr16
jg
dec
xor
push
pusha
bnd
inc
mov
push
movl
ss
fidivs
in
enter
out
scas
push
or
sbb
fidivl
test
out
push
lcall
in
sbb
cs
jl
pusha
add
cld
push
xchg
pmovmskb
xor
fwait
or
mov
cmp
mov
mov
stos
dec
nop
cmpsb
call
arpl
call
insl
in
out
or
add
or
sti
cmpsl
imul
xchg
fisubrs
cs
xchg
lret
push
sub
fwait
shrb
push
dec
mov
rclb
test
sub
jge
dec
inc
adc
repnz
jb
mov
lock
push
dec
jmp
cmp
and
xchg
mov
mov
mov
sub
push
lret
lea
ss
mov
cmp
cmc
fstpl
mov
pop
cmp
arpl
sbb
sub
ds
nop
pop
xchg
sub
mov
cmc
stos
cmp
inc
mov
jns
aam
sub
push
fstpt
mov
imul
popa
and
or
pop
gs
pop
lods
dec
iret
push
cmpsb
or
aas
jmp
xchg
cs
dec
jmp
lock
inc
dec
mov
xor
shrl
mov
pusha
sub
or
mov
sar
aaa
in
pusha
xor
pop
inc
pusha
push
dec
inc
fdivrl
push
jp
scas
cmp
mov
sbb
pushf
cmp
repnz
cmovge
icebp
daa
mov
addb
jae
mov
xor
in
mov
and
mov
test
dec
nop
test
jae
push
xor
mov
mov
adc
dec
or
pushf
ret
and
roll
sub
cmp
sbb
lds
movsl
inc
test
mov
adc
adc
sahf
ljmp
fwait
push
dec
out
jo
add
inc
add
xchg
push
mov
pushf
stos
imul
stc
call
inc
mov
and
dec
fisubl
fs
popf
js
addr16
xor
cmpsb
cld
xor
lea
dec
xor
inc
mov
sub
add
scas
push
imul
outsb
push
lcall
fldcw
push
adc
insb
pop
add
add
add
push
xchg
popa
dec
aad
shlb
xchg
lods
sub
ss
mov
mov
stos
push
in
push
cltd
js
inc
stos
push
mov
in
psraw
sub
or
mov
push
sbb
xorb
cmp
sbb
xchg
fimull
adc
and
das
repnz
and
push
pop
movd
cs
mov
jmp
adc
call
xchg
cld
xchg
and
hlt
push
mov
push
lahf
mov
mov
cmp
cmc
dec
out
fadd
add
pop
ss
sub
dec
loop
out
push
and
test
xor
push
push
scas
xchg
xorb
cmp
outsb
cwtl
fdivr
cmp
and
jmp
aaa
sub
scas
arpl
mov
sub
jg
dec
inc
xor
mov
xrelease
push
js
jmp
xchg
stc
sub
mov
and
les
jecxz
mov
in
insl
lock
and
adc
and
push
aad
fwait
ret
add
jno
das
sbb
add
lret
insb
mov
pop
mov
jne
xchg
je
lcall
cmp
stc
dec
out
pop
pop
imul
push
scas
mov
mov
leave
les
test
sahf
adc
fldenv
jae
stc
cmp
repz
push
and
xor
cmpl
ret
aad
ret
mov
out
add
lea
and
into
sbb
ror
and
out
mov
std
mov
and
and
imul
cwtl
sbb
aas
cmpl
aaa
sub
int3
mov
jl
aad
dec
stos
adc
outsl
xchg
sbb
inc
push
mov
ds
mov
mov
pop
inc
mov
insl
mov
mov
mov
mov
sub
insl
stos
scas
pop
jns
sahf
inc
stos
aaa
scas
or
pusha
jge
inc
mov
inc
adc
popf
mov
or
fdivr
fidivl
pop
lock
mov
mov
cwtl
and
add
imul
mov
xor
ljmp
aaa
aaa
dec
xchg
add
imul
sbb
insl
add
cs
loop
sbb
popa
dec
aaa
xor
add
stos
jnp
mov
dec
repnz
in
insl
test
or
cmp
fwait
stos
imul
xchg
scas
leave
out
jp
xor
ss
pop
sbb
jnp
push
mov
imul
leave
lods
mov
mov
cltd
dec
mov
in
insb
xchg
sbb
arpl
icebp
pushw
out
sub
imul
mov
and
imul
xchg
sbb
or
or
popa
add
out
add
or
hlt
pop
xor
mov
xchg
dec
movzwl
cmpsb
cltd
movsl
push
xchg
xor
movl
mov
mov
gs
jmp
scas
inc
mov
js
movsl
popa
mov
cmpsb
pushf
jns
inc
push
cs
arpl
repz
pop
imul
push
mov
sbb
mov
aas
cmp
xor
jne
aam
sub
adc
data16
mov
jge
lock
cmp
loop
lods
insl
ud0
out
lock
cmp
std
push
int
or
jnp
int
cmp
mov
cmp
mov
mov
inc
or
mov
insb
sub
imul
dec
sub
lods
jo
ds
xor
fcomi
xchg
inc
xor
paddsb
sub
sub
fisubrs
ret
sub
loope
add
xor
jbe
popa
sub
inc
hlt
push
and
loop
mov
cmpsl
or
icebp
int
inc
invd
leave
rorb
dec
pop
push
mov
mov
cmp
repz
enter
out
jae
sub
jl
pusha
push
jl
push
dec
adc
jbe
cmp
adc
jge
scas
cmpsl
pusha
pop
cmp
subb
adc
out
push
jmp
ret
add
push
or
inc
dec
dec
jno
sar
iret
mov
pop
out
add
sub
jnp
ret
mov
pop
testb
inc
xlat
popa
stc
add
and
jle
repnz
insb
mov
cmp
cs
test
push
in
lock
inc
cmp
sub
xor
jo
shl
inc
andl
repnz
aad
cli
stos
cltd
mov
fs
in
negb
lahf
outsb
outsl
ss
call
pushf
ja
sbb
push
inc
pop
sbb
cmp
negb
xchg
cmp
push
mov
ret
sbb
push
fst
stos
stc
push
and
cmp
push
push
pop
loop
xor
gs
les
lret
lret
pusha
iret
or
in
insl
scas
pop
test
imul
sub
insb
cmp
imul
ret
xor
and
xchg
decb
sub
push
fwait
adc
fstps
inc
pop
shll
popa
adc
movsl
aad
or
inc
mov
dec
pop
popf
inc
out
test
fdivl
fwait
scas
xchg
dec
pop
add
ja
xchg
mov
xor
daa
pop
and
jbe
adc
stc
cmpsb
adc
and
ret
pop
add
mov
fnstcw
sahf
out
push
inc
dec
test
mov
adc
push
mov
shlb
lret
scas
push
xor
inc
pop
fisubs
daa
dec
cmp
push
test
mov
or
mov
ret
xorl
and
scas
cld
add
xchg
mov
imul
daa
mov
jg
lea
stc
push
aaa
test
dec
inc
in
jge
xchg
pop
pusha
cmp
inc
jle
add
loopne
mov
mov
push
and
js
inc
pop
out
pop
pop
xor
scas
mov
inc
push
testb
adc
pop
mov
and
inc
pop
out
lcall
shl
ss
pop
dec
rsm
stos
jle
inc
jo
aam
fs
aaa
data16
hlt
clc
fnsave
dec
adc
inc
aad
loopne
mov
enter
add
pop
xor
in
test
cs
dec
psubusb
mov
out
push
xchg
data16
popf
int3
push
dec
int
sbb
dec
mov
xor
lret
imul
scas
les
dec
into
xlat
push
shlb
cld
xchg
outsl
or
popf
cld
mov
sub
ficoml
mov
xor
xor
push
cmovbe
insl
ljmp
push
js
js
jle
push
scas
fisubs
mov
stos
ljmp
andl
inc
pop
fdivs
repnz
jno
cpuid
mov
ret
push
lahf
lock
pop
xchg
into
mov
pop
push
bnd
jecxz
cmp
arpl
adc
cmpsl
in
repnz
push
cmp
jnp
push
pop
icebp
sbb
call
decb
pushl
push
xchg
jg
inc
ds
sbb
add
test
in
pop
cs
testl
and
mov
cmp
cs
sbb
mov
sbb
push
inc
nop
adc
fadds
inc
cmc
out
jmp
fidivrl
push
rcl
and
xor
mov
xor
adc
mov
scas
adcl
dec
dec
lahf
fwait
ljmp
enter
imul
sar
ret
jl
outsb
push
jne
pop
aad
daa
push
out
aaa
jbe
xor
mov
mov
ret
add
add
mov
out
mov
int3
inc
inc
and
mov
push
pop
inc
cmpsl
out
pushf
pop
insb
cmp
push
or
sbb
daa
jecxz
or
mov
mov
les
mov
negl
sahf
cmp
scas
lods
movb
loop
push
fwait
cwtl
mov
rorl
xchg
scas
inc
cmp
xchg
shlb
dec
sbb
pop
cmp
out
bswap
fwait
pop
cmpsl
mov
pfnacc
cmpsl
dec
jno
mov
rep
cmpsb
push
jmp
fildl
imul
daa
movsb
psrlw
adc
scas
xor
cli
daa
cmp
mov
in
clc
mov
repnz
pop
comiss
shl
das
mov
dec
mov
insb
jno
xorl
ja
xor
call
jnp
pop
xor
orl
subb
xchg
cmpsl
and
lods
iret
xor
sub
pop
mov
in
push
ja
push
les
dec
fcmovbe
lcall
pop
loopne
rcrl
mov
xchg
inc
ljmp
dec
jbe
and
sbb
sub
sbbl
mov
in
jae
and
mov
jo
dec
sbb
cmp
cmp
std
push
addb
jbe
imul
mov
jb
aaa
and
lahf
xor
sahf
xor
cmc
mov
xorl
xor
dec
add
test
cmp
pushl
aaa
and
shll
jnp
jp
or
das
cmc
push
int
xlat
aam
roll
ss
scas
fisubrl
inc
xchg
or
sbb
hlt
inc
jle
test
in
rorb
or
xor
jecxz
inc
repnz
lret
sub
mov
dec
out
out
mov
jnp
clc
cmp
jp
lods
push
mov
inc
push
prefetchw
or
mov
cmp
rcll
or
and
or
jbe
push
data16
and
dec
add
fstpl
xchg
negb
fstpl
push
push
enter
ljmp
pop
push
ss
push
mov
mov
scas
sti
in
testl
test
sti
jge
loopne
ret
xchg
mov
mov
sar
jb
mov
ja
jb
cmp
mov
mov
jge
sbb
or
sbb
mov
xor
jb
xlat
mov
leave
andb
mov
pop
mov
pop
push
cmpsb
nop
clc
push
adc
push
outsl
xchg
ljmp
mov
mov
and
ss
loop
shrl
xor
icebp
outsb
sub
pusha
sbb
cmp
mov
pop
ds
jno
push
inc
push
ss
out
and
or
mov
sbb
push
ja
push
aas
mov
mov
test
and
pop
xchg
outsb
lcall
xchg
jl
jo
sub
stos
out
xor
jbe
mov
fsubr
setl
icebp
repz
cmpsb
push
int3
lods
bnd
pop
jo
imulb
push
nop
inc
cs
or
lcall
scas
jle
sub
push
push
dec
xor
adc
repnz
test
packssdw
lds
cmp
dec
aad
xor
sbb
cmp
roll
jno
aaa
dec
shll
mov
andl
outsb
sbb
cmp
xor
jno
sub
leave
stos
sub
mov
daa
lcall
mov
scas
push
leave
mov
push
shll
sub
cmovg
dec
fidivs
outsb
das
inc
clc
cmp
stc
mov
mov
clc
sahf
lcall
in
fwait
xor
sub
jmp
push
sbb
ljmp
add
or
inc
dec
jb
and
in
sub
push
pop
stos
mov
inc
and
jbe
lods
notl
scas
fdivrs
xor
rcrl
pop
into
xchg
mov
cmp
jb
movsb
lds
mov
stos
pop
aas
or
popa
xchg
inc
sub
xchg
popa
pop
test
pop
push
movsl
sbb
xchg
xchg
and
cld
dec
cld
and
fidivrl
and
movq
in
mov
pushf
or
iret
outsb
mov
insb
inc
sub
cmp
sub
cmp
inc
and
sets
fwait
xor
xchg
jl
rcrb
mov
icebp
push
mov
dec
fmulp
scas
out
in
xor
jnp
mov
mov
pop
add
dec
aas
lcall
dec
test
aad
ljmp
push
mov
movsb
jae
mov
scas
dec
int
dec
stc
or
rcrb
or
rcl
pop
xorb
sub
adc
dec
jge
jecxz
jmp
lods
cmp
std
sub
push
ds
xor
and
call
inc
mov
and
lcall
mov
test
and
ja
xor
ret
pop
dec
cmpl
cmpsl
pop
xor
cli
pop
pushf
lret
dec
inc
out
jb
leavew
xchg
into
inc
sub
inc
mov
sbb
xor
inc
cs
arpl
imul
mov
sti
mov
dec
call
mov
fwait
add
cmp
xor
andb
jg
jle
xor
xor
dec
iret
dec
aas
and
lds
mov
push
push
test
mov
daa
sub
cmp
xlat
pop
outsb
imul
sub
out
and
addr16
aaa
cmp
clc
lea
jo
insb
xor
sub
inc
imul
sub
test
cmp
and
lea
scas
sub
push
push
mov
pop
mov
icebp
in
into
xor
repnz
and
mov
mov
fs
push
pop
jl
mov
fdivs
daa
andb
scas
or
ja
xor
mull
mov
cmp
and
xorb
adc
addr16
imul
cmpsb
xchg
mov
test
addr16
jne
push
jg
test
bnd
inc
sub
addr16
mov
insl
xor
lods
addr16
cmp
sbb
pop
ss
repz
call
add
adc
mov
movsl
mov
ss
fwait
mov
jns
cwtl
lcall
dec
into
push
into
enter
inc
push
or
mov
fs
sub
dec
inc
xor
adc
pop
pop
inc
sub
mov
cmpsl
jbe
inc
push
cwtl
xor
xor
incl
lret
lret
adc
mov
push
sti
fsubrs
lcall
sub
popf
and
mov
sub
mov
int3
rol
pop
outsb
push
lock
flds
and
fistl
outsl
out
out
stos
lcall
ret
dec
and
jo
repnz
ss
stos
xor
push
mov
dec
ljmp
scas
jno
adc
out
shrl
dec
mov
fildl
fdivs
and
add
fwait
cmp
divb
and
and
cmp
rolb
sub
mov
fidivrl
mov
nop
mov
test
lods
sub
lret
call
mov
xor
vmwrite
outsl
dec
xorl
cld
aas
mov
paddsb
in
xor
push
cmpsb
xorb
lcall
jmp
adc
cs
shlb
mov
in
sub
dec
jno
jp
out
daa
scas
sub
inc
in
pop
insl
call
mov
loopw
arpl
gs
xor
and
bnd
setno
xor
and
movsl
xor
ret
mov
aaa
adc
test
sbb
pop
mov
into
jns
iret
xor
fucomi
and
mov
xor
mov
cld
bound
mov
mov
xor
sahf
les
and
stos
mov
paddsw
inc
jne
jnp
outsb
popa
shl
arpl
pop
movsb
push
outsb
add
pop
js
sub
jecxz
inc
stos
pusha
mov
push
in
mov
dec
ret
xchg
dec
scas
xor
ds
cltd
fwait
cmp
pop
cmp
pop
test
pop
pop
and
dec
dec
arpl
punpcklbw
inc
add
xor
dec
sbb
enter
cmp
mov
push
loop
pop
jnp
push
nop
sbb
fisttpl
jb
mov
jb
pop
inc
jne
inc
xor
push
dec
push
jbe
es
popa
std
scas
jnp
aam
push
pop
jecxz
push
cltd
jne
xor
out
jo
cmc
movsb
cmp
dec
and
bnd
fwait
adc
pop
jae
and
scas
je
fcompl
lds
clc
inc
bound
enter
and
test
mov
negl
call
push
or
repnz
cmp
mov
stos
pusha
ficoms
or
jne
cmp
bound
mov
setae
nop
mov
sub
ja
sub
ljmp
pop
push
incl
movsb
cmpsl
mov
pusha
push
sbb
mov
jns
mov
or
outsl
jl
inc
loopne
das
dec
add
sbb
jecxz
mov
outsb
popf
pop
sbb
cmp
mov
cmp
lret
jl
lcall
ja
mov
xchg
mov
insl
or
mov
pop
xchg
cmpsb
dec
mov
adc
mov
div
mov
jl
lock
dec
bound
push
test
movsb
or
mov
lds
add
cmp
push
mov
or
sub
jnp
sub
fdivrs
mov
pop
mov
inc
push
movsb
sbb
jae
push
sbb
cmp
cmp
cmp
js
pushf
lcall
mov
bound
scas
xor
and
je
mov
sbb
test
sbb
stos
push
lcall
jae
xchg
imul
fnstenv
inc
sbb
mov
adcb
push
push
jle
xor
cmpsl
cmp
insb
and
cli
ljmp
mov
cltd
dec
mov
lods
cld
dec
shl
push
mov
es
mov
mov
xor
push
sbb
dec
mov
dec
test
or
and
push
js
je
lock
negb
aaa
xchg
insb
and
cld
or
sbb
cs
jge
adc
rcrb
test
pop
leave
inc
mov
pop
jecxz
sbb
sub
and
out
lcall
scas
sub
pop
ret
push
add
and
insb
sti
xor
inc
addr16
sub
insl
mov
mov
andb
cmp
clc
cmp
lret
cmp
scas
outsl
mov
test
test
pop
jle
sbb
lds
jg
pop
aad
arpl
loope
stc
aam
leave
icebp
inc
or
sub
push
add
mov
xor
cmpsl
pop
xchg
push
sub
jb
mov
cmp
out
inc
js
rorb
das
stc
sub
scas
call
mov
lods
cmpl
add
jae
and
iret
jmp
in
cmp
push
arpl
repz
dec
notl
jns
es
push
pop
lret
push
stc
inc
subl
jmp
dec
mov
jns
xor
dec
mov
jbe
stos
mov
mov
addr16
and
xlat
loope
adc
xor
aam
push
xchg
mov
lds
add
pushf
cmp
fcompl
dec
loope
jg
fadds
iret
andl
in
decb
and
mov
jne
and
out
sub
lods
test
cli
mov
scas
push
inc
lea
cmp
or
fnstcw
sahf
push
outsb
popf
sub
push
aad
arpl
repnz
daa
cmp
sbb
andnps
dec
sbb
xchg
adcb
cs
dec
cs
jae
dec
add
xor
mov
mov
xorb
ljmp
div
test
setg
dec
iret
sbb
pop
jo
cmp
lea
ds
jnp
xchg
jge
pop
cmp
or
and
xchg
dec
xchg
lea
fldt
adc
pop
jp
xchg
xchg
andl
jge
add
inc
mov
cmp
dec
or
mov
enter
dec
xchg
and
insb
cmp
scas
fwait
addr16
and
mov
push
cmp
movb
fwait
push
mov
jge
mov
insl
adc
fisubrs
std
sbb
pushf
int3
xor
and
jo
jne
imul
iret
fiadds
and
pop
aaa
pop
mov
lds
cmp
std
push
mov
pop
add
out
inc
cmpsb
lret
sub
movsb
fcomp
sbb
hlt
push
imul
push
mov
shll
ljmp
nop
mov
xorb
lods
mov
movsb
push
cmp
push
leave
jne
lcall
cmpsl
push
push
insl
inc
xor
cmp
jmp
mov
movsl
cltd
dec
mov
scas
xor
imul
add
jbe
int
repz
xchg
and
insl
push
outsb
scas
xor
lahf
mov
rcrl
adc
hlt
cmpsb
jbe
movsb
lea
dec
push
test
sub
and
add
and
mov
mov
data16
push
popa
inc
lcall
lock
das
adc
pop
scas
cs
cmp
das
movsb
cmp
in
mov
and
imul
pop
mov
gs
push
mov
ret
or
dec
push
and
popa
add
stos
shl
test
or
clc
stc
fldenv
inc
scas
push
ret
jns
xor
xor
sbb
ljmp
nop
sub
jecxz
mov
cmc
or
in
xchg
fwait
mov
fwait
cmpsl
test
mov
push
jb
aaa
cmp
dec
xor
cmp
nop
mov
xchg
jo
scas
mov
cmp
mov
in
scas
lods
cmpsl
ds
outsb
push
in
pop
mov
mov
push
xor
ja
dec
push
aam
and
int3
xor
mov
movsl
push
xchg
dec
and
dec
fidivrs
inc
mov
jge
into
fwait
test
cmp
add
into
pop
inc
shrl
pop
clc
dec
mov
outsb
in
jbe
sub
sbb
dec
sbb
imulb
jge
sub
jmp
loopne
add
sub
ficoml
sub
into
push
test
xchg
or
push
call
push
pop
inc
arpl
jecxz
lock
jmp
jbe
fxch
pop
adc
movsb
out
xor
mov
inc
std
les
adc
int3
nop
movsb
test
cmp
sub
aas
bound
lods
leave
mov
pop
pop
inc
mov
test
mov
push
cmovns
xor
xor
mov
enter
cmpsl
pop
movsl
add
dec
sti
push
imul
das
push
fwait
xchg
mov
ret
das
sahf
jle
inc
sbb
cmp
popf
sub
notl
sbbl
sahf
inc
lret
push
jb
mov
add
pop
add
mov
or
and
sbb
loope
test
ss
popf
es
test
mov
sub
sbb
out
xor
push
cli
add
inc
jns
push
pop
xor
jb
jnp
pop
and
xchg
insb
ss
mov
jp
int
int
cli
add
mov
stos
sarl
dec
fmull
js
xchg
xor
push
jl
fs
inc
icebp
jae
jl
dec
and
cmp
lds
inc
inc
lock
sbb
lret
push
sub
jnp
push
fwait
cli
mov
mov
and
jg
ja
jp
push
icebp
sub
pushf
loop
mov
mov
jle
aam
or
inc
mov
test
and
cmp
mov
jne
mov
bound
test
cmp
test
and
mov
xchg
jb
stos
mov
inc
aas
cmpsl
pop
and
movsl
mov
out
cmp
dec
iret
push
push
adc
hlt
and
dec
and
scas
pop
jbe
dec
pop
pop
loopne
xchg
jmp
and
scas
adc
sub
ss
imul
pop
dec
mov
addr16
popf
sbb
adc
cmp
or
out
xor
arpl
lcall
mov
pop
xor
cld
lods
dec
stos
in
dec
add
subb
push
mov
loopne
ss
or
std
roll
pushf
lcall
addr16
mov
out
lcall
pop
adc
jns
sub
mov
dec
sub
mov
sub
pop
in
dec
pop
sub
clc
inc
mov
fs
arpl
mov
add
aaa
dec
sub
and
or
shlb
lcall
subb
jge
push
and
cmp
test
dec
add
popf
xchg
lret
mov
and
dec
je
cli
adc
push
push
mov
push
stc
in
mov
push
les
testb
arpl
test
adc
cs
and
xor
sub
sbb
inc
nop
sub
sub
sbb
inc
ss
sub
mov
clc
push
jp
ret
cmc
sahf
cli
push
ret
sbb
pop
push
outsb
mov
addr16
mov
and
mov
pop
outsb
enter
cmpsl
dec
push
mov
mov
sub
sbb
movsl
inc
out
push
mov
mov
mov
sub
test
movsl
shlb
mov
xor
outsl
mov
cli
xchg
inc
bt
jb
pop
or
data16
inc
fprem1
fsubs
sbb
rcl
pop
mov
mov
pop
mov
inc
aas
psubsw
mov
lds
fsubr
cwtl
push
push
pop
cmc
outsb
nop
sahf
bound
and
cmpsb
addl
mov
mov
mov
pcmpeqd
leave
addl
shll
aas
ljmp
sub
test
in
loop
sub
cmp
idivb
jb
add
incl
mov
ljmp
or
test
mov
add
adc
cmpsl
scas
aam
popaw
shll
into
call
out
xor
jmp
into
cs
pop
xchg
cmp
in
dec
addr16
and
repz
ficomps
fcmovbe
iret
fimuls
cmp
in
inc
fnsave
scas
popa
into
lret
or
call
mov
xchg
sbb
iret
mov
std
rclb
xchg
sbb
sti
xchg
insb
les
mov
movsb
popf
inc
ret
cld
push
jmp
lds
lret
scas
inc
mov
jmp
outsb
and
cmp
int
popa
sub
jmp
adc
leave
inc
mov
cmp
imul
fisubrs
rclb
fwait
mov
sub
push
jb
xor
nopl
xchg
stos
inc
jb
jb
stos
pop
cmp
fstpt
xor
add
and
pop
call
dec
jg
scas
cmp
test
or
xchg
lea
add
call
jp
dec
movsl
push
lret
mov
dec
mulb
movsl
ror
dec
dec
push
sbb
arpl
ds
mov
pop
xorl
inc
rorb
xchg
inc
jl
jns
sub
sub
mov
xchg
stos
cmp
rcrb
mov
sub
pop
dec
cmp
pop
sbbl
jbe
cwtl
pop
xor
jnp
mov
stos
lahf
arpl
popf
lock
sti
scas
lods
cmp
mov
add
cmp
js
pop
addr16
push
xor
daa
outsb
in
leave
cmp
xor
insl
outsb
arpl
xchg
sub
sub
cmp
fwait
jae
xlat
push
jbe
and
andb
cmp
lahf
out
jb
pop
in
lds
ss
cmp
aam
mov
xor
xor
sbb
xlat
pop
xchg
sbb
cmp
jecxz
pushf
and
add
cmp
sbb
fs
push
cmp
lcall
cmpsl
jo
jns
setno
sub
hlt
cmp
mov
mov
xor
fsin
test
add
je
add
in
sub
mov
or
push
dec
dec
lods
xor
je
dec
cmpl
xor
test
ss
xorl
out
ss
push
jae
jbe
aaa
dec
pop
cwtl
outsb
addr16
dec
push
cmp
das
ret
fwait
inc
dec
xor
xor
jbe
xchg
and
in
add
dec
pop
xchg
fldenv
dec
mov
mov
mov
sbb
cmp
cmc
cmp
and
push
dec
rcrb
movmskps
cltd
adc
mov
xor
inc
test
xor
dec
test
addr16
imul
stc
daa
inc
xor
into
aad
shl
clc
das
out
inc
push
aaa
popf
cmp
add
mov
stc
out
jge
xor
arpl
out
push
cs
hlt
sub
push
adcl
insb
mov
gs
in
mov
sarb
or
ds
push
rorb
mov
lcall
std
pop
arpl
inc
jae
repz
and
je
loopne
aad
fimull
xchg
adc
popf
test
jbe
lods
push
stc
je
sbb
outsb
lds
adc
adc
scas
jnp
mov
aam
push
popa
sub
dec
xor
sub
test
jb
cmp
jne
and
adc
cmc
shrl
int
daa
cld
adc
mov
outsb
mov
idiv
arpl
lcall
inc
adc
das
adc
dec
and
push
inc
dec
sbb
mov
pop
movups
test
je
loop
and
and
xor
adc
xor
pop
scas
mov
pushw
lds
out
cmp
cmp
or
mov
test
cmp
push
push
sbb
pop
and
adc
xor
insb
testb
lret
push
xor
mov
jno
cltd
lcall
xor
jb
jae
sub
ds
imull
pop
aaa
addr16
sub
sbb
lret
stos
andb
sub
adc
xor
mov
xor
push
sub
incl
sub
jbe
movsl
sbb
xor
mov
pop
sahf
xchg
movsl
push
jg
inc
cld
movsl
mov
jl
dec
pop
ds
sub
jo
ss
cmp
mov
xor
cld
mov
cmp
xchg
ret
loop
sub
out
cwtl
std
into
pushf
popl
inc
jp
adc
inc
pop
sub
adc
lret
mov
lret
in
dec
aas
pusha
ret
addb
mov
outsb
cs
addr16
gs
leave
sub
jne
jo
xlat
add
daa
leave
data16
cmp
xor
rorl
dec
imul
roll
jle
mov
mov
pop
fisubrs
iret
sbb
das
testl
cmp
addr16
mov
cmovns
daa
dec
divb
add
repnz
mov
ss
mov
fidivs
adc
cmpsb
inc
test
pop
xor
sub
icebp
cmp
aas
addr16
inc
jp
mov
orl
mov
jmp
nop
inc
push
pop
data16
or
mov
mov
sbb
sub
cmpsl
pop
in
daa
mov
xor
pop
aaa
xchg
ja
hlt
or
enter
jbe
imul
aad
stos
sub
inc
mov
sbb
lock
int
shrb
test
scas
sub
push
pusha
cli
xor
and
aas
inc
in
data16
gs
es
jle
scas
outsb
cs
cmp
xor
cmpsl
call
test
add
sahf
mov
jmp
mov
dec
aam
scas
fbld
sub
cmp
mov
or
es
sub
and
jl
mov
push
mov
sub
jbe
jb
insb
insl
test
ds
lds
aad
iret
add
lcall
pcmpeqb
xor
push
cmp
inc
and
gs
mov
into
out
mov
iret
mov
push
mov
daa
data16
pop
dec
lcall
frndint
mov
or
mov
push
and
mov
scas
xor
inc
xor
sbb
fwait
out
cmp
xor
dec
fwait
stos
jl
ss
pop
popa
xor
or
inc
js
jae
aam
mov
or
inc
push
push
xor
nop
push
aas
push
and
lret
in
jmp
outsb
stos
outsl
dec
pop
inc
bound
xor
mov
xlat
cmc
icebp
push
cmp
mov
sub
dec
pushf
adc
or
sub
dec
insl
cs
arpl
cwtl
scas
push
add
addr16
leave
popl
inc
sub
sbb
lcall
adc
and
decl
push
cmp
shrl
in
in
mov
js
sbb
shrb
out
lods
sbb
test
pop
sbb
push
dec
je
outsb
jmp
jg
jns
aaa
mov
mov
out
sbb
movaps
stc
inc
cs
and
dec
xor
leave
xlat
mov
xor
adc
xlat
mov
mov
test
scas
xor
inc
xchg
lcall
xor
push
pop
cmp
iret
push
mov
or
mov
imul
xor
stos
inc
cmp
cmp
cmp
sub
aad
mov
dec
std
add
aam
xor
pop
bound
lar
leave
xchg
ds
cld
scas
mov
jb
lock
pop
jmp
jae
ss
push
inc
push
gs
jmp
cmp
xor
out
mov
sbb
out
and
and
mov
inc
jmp
aam
sbb
xchg
rcrb
aaa
push
mov
xor
sbb
inc
ret
out
jbe
repnz
stos
mov
sbb
scas
sub
popl
push
adc
jbe
dec
out
sbb
in
adcb
lret
xor
cmpsl
cmc
in
push
cmp
adc
push
int
inc
in
adcb
push
mov
outsb
xor
jns
jb
insb
or
sub
imul
inc
xor
inc
imul
cmpsb
cmp
jae
sbb
push
das
and
push
cmovns
mov
cmpsb
xorb
inc
ss
cmpsl
and
lcall
push
sub
inc
leave
inc
ja
das
mov
cmp
notb
fidivrl
out
clc
pop
inc
loopne
fildl
and
and
das
popa
sbb
jmp
sub
pop
mov
sbb
xor
inc
in
cs
mov
jp
mov
pop
out
mov
mov
ss
mov
femms
or
push
daa
int
push
ja
fidivs
lcall
aaa
loopne
stc
push
stc
push
cmpsl
or
sbb
sub
jbe
inc
pop
mov
mov
inc
test
scas
ja
push
loopne
mov
fldl
pop
cmp
push
push
xchg
mov
adc
mov
dec
add
pop
test
jb
movsl
pop
out
insb
inc
lcall
out
xor
xchg
subl
dec
js
sbb
mov
inc
fs
movsb
pop
mov
sbb
sbb
es
cli
cmp
dec
daa
adc
sub
xor
out
je
fwait
sti
fs
mov
fadds
push
jb
sub
lods
cmp
ds
sbb
fstl
xor
sub
xor
adc
pop
mov
xchg
inc
dec
cmp
xor
jae
shlb
testl
inc
aad
xor
imul
lret
mov
movsb
mov
xchg
daa
fwait
sub
pop
and
cmp
cmp
fwait
xchg
inc
scas
jne
movsb
push
repz
mov
push
push
xor
rclb
add
xor
out
dec
add
cmpsb
push
cltd
xchg
push
pushf
cmp
xor
jb
clc
cwtl
jg
or
aas
mov
xor
adc
dec
dec
add
cmp
mov
lock
jnp
mov
push
cmp
mov
in
jne
sub
jge
adc
shlb
ret
or
in
push
enter
mov
push
std
in
ficoms
pmaxsw
cmp
gs
mov
mov
push
cmpsb
sub
sub
pop
pop
out
push
out
push
aam
dec
jmp
hlt
stc
into
lea
imul
xor
cmp
bound
pop
and
sub
ja
imul
push
add
outsb
loop
pop
sti
cmp
movb
ss
xor
movsb
fs
push
negb
pop
cmp
loope
js
fstpt
stos
adc
jae
popa
dec
and
lods
or
sub
or
stc
push
inc
test
bswap
xchg
addr16
dec
lods
sbb
sub
insb
xor
stos
cs
xor
imul
lcall
arpl
and
mov
in
divl
test
mov
jb
push
call
push
aas
cs
neg
cs
lcall
xor
nop
mov
jg
jg,pn
mov
mov
inc
outsb
mov
stos
mov
test
mov
cmp
inc
sub
pop
dec
inc
stos
cmp
ljmp
shll
dec
into
mov
aas
nop
sub
cli
and
jo
out
lss
pop
or
mov
pop
outsb
xchg
leave
mov
mov
pusha
inc
push
push
dec
dec
xchg
cmp
ret
cmpsb
fdivrs
add
push
jns
mov
pop
test
jnp,pt
aaa
stc
cmp
cmpsl
and
das
dec
cli
xchg
dec
adc
in
jae
push
repz
xor
cmp
les
mov
jno
addr16
push
jb
inc
mov
repz
bound
xor
or
in
lods
outsl
sub
mul
pop
gs
sbb
test
pop
cli
insl
xchg
sub
mov
add
pop
xchg
jge
mov
scas
stos
cli
xchg
add
in
and
push
dec
dec
push
cmp
out
dec
add
out
scas
jecxz
loope
cmp
push
sub
or
je
dec
sub
sbb
push
mov
jl
xchg
pop
cmp
sub
outsb
fmull
imul
cmp
dec
out
lock
cmp
push
mov
adc
inc
stos
and
dec
dec
pop
push
mov
mov
xor
mov
mov
push
pop
xor
cmp
mov
addl
add
hlt
push
cmp
mov
aad
jbe
cmpsl
jno
cmpb
sti
arpl
jno
lods
cmp
pop
and
pop
movsb
dec
outsb
pop
mov
js
mov
movsl
cmc
out
push
and
out
sub
push
mov
ss
das
dec
jo
dec
sub
jecxz
add
inc
dec
fidivl
shrb
mov
cmc
fwait
mov
in
mov
dec
das
inc
cmp
pop
shll
nop
test
pop
inc
movsl
aas
stc
dec
int
jge
jle
into
mov
shrl
add
roll
in
lret
jae
push
push
daa
sub
inc
in
adc
rcll
xor
pop
xor
cwtl
push
shlb
scas
sbb
scas
pop
dec
out
add
jp
cmp
mov
inc
ds
aaa
ljmp
mov
pop
push
enter
shlb
das
push
push
push
push
dec
cmp
pop
pop
js
inc
cmpsb
idivl
sbb
loop
inc
aam
and
pop
pop
sub
add
insl
sub
mov
and
pop
add
sbb
dec
fisubs
imul
pop
pop
jno
stos
sbb
dec
scas
or
or
dec
pop
imul
pushf
bound
in
icebp
sub
sub
jbe
ds
sub
or
loope
movb
mov
jmp
cld
mov
in
or
fcoml
outsb
jge
adc
mov
insl
pop
addr16
and
adc
repz
imul
lret
pop
lods
into
mov
test
xchg
pop
icebp
push
mov
pop
pop
leave
jno
stmxcsr
adc
cmpsl
inc
ja
jge
add
jecxz
xchg
inc
cmpsl
fdivrs
outsb
int3
cmp
adcl
xorb
mov
pop
cmpsb
jo
sahf
ss
ljmp
dec
popf
add
inc
fwait
push
and
outsb
and
fcoml
clc
fidivl
xlat
mov
sbb
cmpsb
negb
mov
push
in
stos
cmp
fstps
or
int
jb
cmp
repz
scas
ficoml
adc
movsb
mov
aaa
sub
movl
jp
push
stc
dec
popf
es
xor
mulb
mov
fadds
ja
in
popa
cmp
ficoms
inc
dec
jb
ja
jecxz
sub
imul
addb
pop
clc
jns,pt
inc
push
cld
cmp
mov
insb
mov
push
cmp
inc
jns,pn
inc
rcrb
divb
mov
cmp
movb
roll
sbb
lds
and
je
xor
iret
das
cli
aas
pop
lock
cmp
push
inc
inc
arpl
mov
sub
test
sub
push
or
xchg
movsl
pop
inc
lret
sub
add
mov
push
repnz
mov
cmpsb
and
ss
outsl
stos
jl
shrb
test
popa
cmp
mov
push
sub
jae
popa
and
mov
ret
ljmp
je
sbb
fistpl
int3
arpl
popl
sub
xchg
pop
lret
addr16
pop
lret
mov
or
mov
mov
test
shll
push
jp
mov
pop
adc
mov
fcomi
psraw
stos
out
lret
adc
inc
add
jbe
cmp
shrb
adc
pop
jo
js
lods
std
jns
aas
mulps
fisubrs
adc
mov
inc
scas
push
jnp
and
test
mov
xchg
shll
mov
xor
cs
fists
inc
or
sar
jns
loopne
push
push
cmc
mov
jb
stos
xchg
xor
nop
adc
xor
testl
das
jo
lahf
cmp
mov
push
jmp
test
and
bound
setg
pop
xchg
dec
mov
and
call
lea
nop
xor
ds
mov
mov
jno
inc
insb
data16
push
pop
test
sub
test
or
jbe
pop
inc
adc
or
ljmp
xchg
rcrb
cli
dec
jo
lods
dec
fimuls
dec
push
out
xor
pop
push
push
bound
and
stos
aad
add
jg
aad
jge
mov
xor
mov
pop
sub
or
test
push
pop
push
daa
divl
lcall
pop
add
rorl
jns
nop
add
icebp
lahf
pop
loope
scas
and
ret
nop
fistpll
xchg
jb
sub
ds
jle
cmp
adc
data16
je
pushf
scas
xor
js
push
outsb
push
pushf
adc
ja
nop
sub
and
aas
stos
push
mov
mov
dec
lods
mov
mov
jb
imulb
sets
dec
popf
sub
sbb
jb
out
in
jecxz
outsb
push
ficoml
fstpl
bound
cmp
push
push
pop
mov
pop
mov
mov
ss
pop
push
jns
subl
push
lcall
xor
stos
movsl
xchg
mov
mov
and
push
dec
leave
sub
scas
test
mov
insb
fnsave
lcall
imul
add
push
add
jbe
xor
rorl
andl
cmpsl
mov
hlt
and
mov
insl
clc
push
sub
cmpsl
aas
test
pop
out
subl
lret
jbe
inc
cmp
jbe
int3
fwait
xchg
inc
test
sub
cmpsb
jg
punpckhdq
popf
push
push
xor
in
sub
xchg
repz
jle
movsl
pop
pusha
in
repnz
nop
xor
pop
cmp
nop
xor
aas
out
imul
pop
imull
xor
dec
xchg
iret
cmp
xchg
sbb
outsl
aaa
pop
out
ljmp
in
inc
dec
sbb
inc
inc
jmp
mov
mov
xor
inc
mov
cmp
dec
inc
mov
pop
pop
call
and
mov
pop
xchg
lret
das
clts
jle
cmp
push
xor
fsubs
xor
in
lods
sub
and
aas
add
sbb
jg
sub
ret
aam
outsl
das
push
mov
mov
push
ja
nop
das
mov
jg
mov
stos
dec
into
daa
sbb
cld
fcompl
dec
fs
jmp
or
call
push
lret
xchg
and
add
ss
arpl
sub
sub
xor
inc
ss
scas
push
inc
cmp
shrb
xor
das
add
cmpsl
jle
cmp
cli
ja
xor
xchg
lret
push
jl
sbb
sub
movsb
sub
test
and
inc
bound
shlb
ss
test
sub
popa
jmp
cmp
cs
mov
push
dec
sbb
cmpsb
gs
and
cmp
cmp
sahf
or
sub
xlat
pushf
mov
fisubrs
out
stos
imul
and
sub
xlat
cmp
mov
out
cli
adc
outsl
insl
mov
insb
push
push
ss
dec
mov
add
scas
fwait
push
sbb
xor
jge
dec
lcall
inc
mov
stos
bound
and
inc
adc
push
ljmp
xor
sbb
push
sub
cmp
sbb
xorl
and
cmp
add
jne
push
js
push
in
pop
out
fwait
pop
and
clc
sti
enter
fcmovbe
cmp
movsl
mov
cmp
popa
mov
les
cmp
inc
pop
dec
push
movsb
incb
fcomps
pop
pop
stos
imul
les
mov
outsl
scas
mov
js
push
sbbl
jecxz
dec
data16
sbb
arpl
or
xchg
mov
and
inc
fs
clc
orl
sbb
cs
push
shrl
jb
push
inc
mov
jns
ss
mov
push
xor
scas
je
inc
popf
lret
mov
in
cwtl
pop
sub
cmpsl
jg
sbb
sub
lret
adc
enter
mov
inc
fisubrs
dec
sahf
mov
imull
out
cmc
cmpsl
insb
pop
sub
adc
push
sarl
adc
cmovns
add
add
push
sbb
dec
adc
mov
mov
push
push
scas
popa
call
xor
int3
das
int3
aaa
jbe
cmpsl
adc
outsb
lock
dec
je
int
xorl
xchg
bound
out
sbb
push
in
push
imul
cmp
sbb
push
jbe
xor
jl
loopne
jb
push
loop
orb
push
inc
addr16
sbb
xor
pop
dec
jnp
xor
cs
jge
dec
xor
and
mov
jp
lcall
sbb
jmp
jae
jp
jl
jbe
test
inc
fprem
sub
out
ror
mov
pop
aad
movsb
jle
addb
dec
xchg
xchg
pop
pop
inc
xor
adc
adc
inc
mov
filds
cmp
faddl
fisubrs
xor
push
mov
mov
inc
nop
sub
lea
aas
dec
into
xor
int
dec
das
pop
push
mov
nop
adc
lahf
jecxz
sbb
pop
xor
test
into
adc
dec
xor
pusha
push
loope
pop
lret
mov
inc
addr16
ss
out
add
sub
xor
push
adc
mov
movsl
xchg
dec
xchg
mov
or
mov
xchg
mov
fwait
push
hlt
fwait
and
and
push
sub
xor
and
js
mov
mov
mov
inc
dec
stc
out
cli
add
pop
cmp
xor
shrl
out
dec
repnz
adc
je
mov
xchg
mov
jns
jecxz
add
loopne
in
pop
lods
imul
xor
bound
jl
cmp
sti
dec
jle
nop
out
cli
pop
insb
push
lret
in
mov
jns
add
xor
in
aaa
scas
movsb
push
psubsb
loopne,pn
andb
and
cmp
pop
mov
jle
loopne
test
stos
pop
mov
aas
test
push
mov
negl
cmpsb
dec
call
xchg
push
pop
or
aaa
arpl
pop
rolb
dec
xor
invd
xor
inc
mov
ja
lds
dec
test
push
push
push
sbb
jbe
cmp
dec
fwait
jg
int
shl
dec
push
pop
push
fsubs
adc
fidivs
cmp
xor
out
mov
movsb
inc
inc
sub
daa
addr16
in
mov
js
mov
ja
jo
aas
dec
pushf
aaa
aaa
daa
setns
scas
mov
imul
jp
add
fs
jbe
adc
jno
jae
enter
xor
std
mov
inc
ds
sub
sbb
int
shlb
cmp
jecxz
dec
mov
icebp
andl
out
push
cld
push
test
push
xchg
fmuls
sub
lock
fisttps
stos
inc
or
inc
into
add
cmp
push
ss
jg
sub
and
lret
dec
jbe
pop
push
aas
xor
sub
out
push
or
incb
cmp
jns
xor
scas
cmp
aaa
icebp
and
push
inc
das
aaa
fwait
pop
cmc
sub
push
push
aad
xor
add
into
xchg
xchg
movsb
in
lds
subb
sub
mov
in
or
sub
pop
faddl
adc
sub
adc
add
mov
into
mov
jmp
inc
mov
push
das
lcallw
xor
and
lcall
push
test
data16
jbe
jp
int3
cmpsl
fistpl
cmc
adc
fsubrl
ja
int3
push
imul
loope
fsubs
out
jbe
jp
stos
push
clc
sbb
add
stos
xor
push
lock
push
dec
adc
and
popf
sub
xor
js
jns
inc
xchg
out
mov
outsb
pop
push
push
adcb
hlt
xor
ss
fucomi
negl
push
push
pop
scas
and
cmp
out
mov
cmpsl
jns
cmp
sbb
jo
push
jge
sub
dec
push
out
xor
cmp
pop
dec
inc
mov
push
lcall
dec
mov
inc
mov
aas
cmp
aaa
adc
jl
shll
ss
bound
pop
mov
stos
aaa
mov
outsl
pushf
add
sub
sbb
mov
insb
jbe
add
jp
and
push
test
arpl
xor
ret
sub
dec
mov
sarb
addr16
mov
jbe
xor
jge
adc
shrd
and
inc
pop
jns
pushf
ljmp
ret
xchg
cmpsl
test
movsb
data16
xchg
pop
dec
call
push
cmpsl
outsl
subl
in
les
pusha
pop
dec
leave
xor
adc
aad
aaa
jo
ret
sub
je
scas
adc
rorb
push
je
inc
punpckhwd
cmp
cmp
dec
dec
test
cmp
js,pt
or
jne
stc
repnz
sub
movsb
dec
push
xchg
call
js
pop
mov
ret
lock
stos
xor
movsb
push
xorl
ds
out
mov
hlt
shrl
jne
push
out
nop
sub
pop
inc
cmp
je
aam
movsl
lahf
xor
addr16
xor
pop
mov
out
in
lea
cwtl
bound
or
pop
clc
and
sub
adc
or
int3
cmpsb
cltd
bound
sub
int
stc
mov
insb
cmpsl
pop
cs
and
test
in
insl
pop
shrb
test
sub
ss
leave
jno
dec
sbb
xor
dec
push
mov
dec
and
ficompl
lea
cmp
fwait
adc
mov
out
push
cmp
jmp
sbb
push
adc
icebp
sub
adc
lock
pushf
mov
call
mov
movsb
call
push
sub
jo
test
mov
insb
pop
in
sahf
mov
push
mov
ljmp
mov
cmc
dec
jmp
icebp
ds
ja
insb
rcll
sub
test
push
sbb
cmp
push
fistpll
cltd
add
and
stos
imul
and
mov
mov
nop
and
mov
push
aaa
dec
out
insl
fcmovnu
or
mov
adc
repnz
ds
sbb
sub
ljmp
and
mov
cvttps2pi
mov
pushl
jns
sti
dec
stos
in
adc
pop
add
lret
scas
push
dec
mov
push
inc
mov
or
xchg
or
imul
push
out
mov
lods
aaa
aas
mov
push
adc
sub
negb
call
sbb
pusha
sbbl
push
jp
inc
movsb
ret
jge
fstps
ss
nop
push
dec
fmuls
loopne
push
xor
test
test
add
fwait
sti
lds
adc
jmp
addr16
pop
pop
cli
mov
cmpsb
pop
sbb
cmp
mov
mov
decb
repnz
cli
or
das
ret
mov
sbb
cmc
fdivp
mov
mov
out
pop
decb
clc
sub
pop
push
add
fwait
sbb
mov
cmp
jo
jb
jge
xor
inc
nop
cmp
add
subl
xlat
mov
cli
dec
leave
sbb
xor
xchg
jbe
push
xor
and
mov
lahf
mov
fnsave
repz
pop
lcall
jg
pop
xlat
inc
into
lods
mov
das
pop
mov
loope
das
add
push
push
mov
sub
lds
xchg
scas
lods
mov
gs
dec
in
ret
test
sub
mov
mov
and
loope
cmp
xchg
clts
lods
jecxz
cmp
std
cmp
inc
mov
imul
push
loopne
scas
jle
push
xchg
push
adc
sbb
aaa
sub
clc
cmp
mov
push
xor
sub
cwtl
cmp
stos
mov
sbb
xor
push
mov
cmp
sbb
in
push
sbbl
pop
jmp
or
jno
dec
bound
push
xchg
mov
xchg
lock
outsb
cmpsb
test
cs
push
pop
scas
inc
cmp
jno
mov
scas
shufps
cmp
scas
mov
test
xorl
mov
xchg
add
aas
xor
dec
jae
inc
popa
cltd
stc
ffreep
mov
dec
test
mov
push
xor
cmpsb
adcl
ljmp
scas
and
or
cmp
icebp
push
adc
push
xor
mov
xor
xor
ret
loopne
mov
dec
lds
test
xor
lock
loope
je
shlb
aas
scas
and
sbb
pop
fs
inc
pslld
xchg
dec
push
adc
or
sbb
ja
cmp
inc
fcmovb
ss
xor
imul
pop
cwtl
push
dec
add
out
jmp
pop
gs
test
or
imul
data16
pop
ss
out
mov
push
push
mov
xorps
fwait
aaa
cltd
movsb
insb
push
cmp
mov
jbe
sub
xchg
xchg
push
pop
sbb
sub
js
xchg
pop
pop
pop
mov
push
xor
popa
imul
adc
xlat
icebp
xor
icebp
dec
push
adc
fucom
fistpll
mov
mov
sub
push
subl
addr16
add
addr16
sahf
inc
xor
mov
add
cli
add
nop
sahf
ljmp
xor
scas
out
cmp
das
pop
push
push
nop
and
dec
pop
stos
cmpl
cmp
push
fisubl
shll
nop
xchg
sub
mov
inc
into
loop
in
mov
in
or
add
and
push
divb
fs
movsb
addr16
mov
xchg
das
subl
or
cmp
shll
push
xchg
iret
test
sbb
inc
xor
jecxz
inc
adc
inc
pop
pop
clc
cmp
test
pop
ret
lods
adc
inc
rcl
cli
pop
or
or
jne
aad
dec
dec
cmp
jmp
push
shll
fisubrs
lock
add
aas
pop
adc
int
jnp
jmp
shr
push
cmpsl
push
out
scas
je
adc
mov
push
das
fwait
sub
out
push
andb
scas
sbb
pop
jbe
aad
pushf
ja
fstps
push
cmpsl
icebp
adc
leave
enter
dec
ss
add
dec
rorb
adc
mov
mov
aad
fs
xchg
cli
daa
push
popa
movsb
xchg
xor
cmpsb
inc
sbb
pop
out
test
mov
jo
or
popf
cmpb
jge
adc
jl
push
add
dec
xor
push
or
cmp
int
add
jne
sub
inc
fwait
sub
push
push
das
or
jle
jae,pn
and
insb
dec
cmp
and
inc
xlat
adc
std
cmpsl
and
adc
pop
fsubrs
or
sub
jno
lret
adc
mov
sbb
dec
enter
cmp
rcrb
ficompl
call
cmp
jae
mov
ss
pop
mov
addr16
mov
jnp
shl
data16
inc
aad
mov
or
bound
mov
shll
jmp
bound
mulb
inc
orl
dec
imul
fdivs
pop
sbb
dec
aas
popf
pop
adc
dec
xchg
push
aaa
call
mov
scas
cs
js
jle
push
jmp
cmp
mov
shrl
lcall
dec
inc
imul
add
fwait
sub
arpl
das
mov
adc
mov
leave
loopne
lret
jp
cmp
shlb
je
inc
femms
aad
xor
call
sbb
iret
pusha
sub
xor
icebp
jne
addr16
cmp
xor
dec
push
dec
pop
rclb
jo
xor
dec
cmp
insl
xlat
jns
adc
sub
sahf
pop
cld
mov
es
and
inc
lcall
mov
test
pop
push
sbb
lock
jl
pop
testb
lds
pop
jae
xor
test
lret
dec
movsl
push
imul
push
ds
aaa
shlb
insl
xor
addr16
jl,pn
push
push
push
movsl
movsb
mov
sub
outsb
fwait
and
pop
inc
push
rcrl
out
inc
scas
loope
fdivrs
or
loop
aaa
daa
cmp
insl
in
add
das
in
lret
sbb
push
lret
das
test
pop
nop/reserved
push
int
je
push
sti
es
add
lods
mov
adc
cli
enter
and
loop
push
xchg
cltd
sti
cmp
notb
inc
sub
adc
or
lods
sub
jmp
in
shl
lcall
inc
mov
inc
ficompl
sahf
inc
jbe
imul
jge
out
es
fisubl
fcomps
lahf
xor
in
cmpsw
mov
jge
push
bound
movsb
mov
jbe
inc
mov
pextrw
mov
xchg
mov
js
movlps
int3
pop
jp
cs
ror
shrb
mov
cmp
ss
dec
inc
sbb
dec
mov
scas
gs
dec
es
xchg
js
ret
ret
push
popa
push
lods
loop
mov
stos
jp
das
outsb
cmp
lahf
and
enter
aas
testl
inc
lcall
pop
push
js
mov
popa
cs
xor
insb
cli
std
push
mov
movsb
stc
or
je
mov
cmp
cmp
enter
int3
mov
rolb
test
outsb
test
mov
pop
in
lret
arpl
pop
push
in
push
insb
mov
mov
roll
mov
js
or
test
inc
mov
ja
adc
stc
sahf
inc
fmull
out
das
adc
push
hlt
scas
sbb
bound
rorb
outsb
fnstenv
xor
inc
das
mov
shll
mov
and
ss
jne
cmp
in
nop
sub
and
fs
ss
enter
xor
or
lods
push
cmp
jle
cmpsb
outsl
add
mov
out
ljmp
lcall
mov
movsl
mov
pop
enter
lahf
ss
jg
sbb
cld
dec
scas
sbb
sub
ja
fwait
out
mov
out
lcall
cmp
mov
xor
jae
cmp
cwtl
frstor
mov
sub
aad
push
lock
es
lock
cmp
divl
or
test
test
mov
mov
pushf
inc
inc
repnz
mov
js
pop
sbb
dec
fistpll
dec
cmp
aaa
rcl
dec
scas
aad
xor
sbb
loop
mov
jne
mov
inc
inc
jge
xor
jp
and
inc
cmp
mov
cli
xor
icebp
andb
imulb
sbb
addr16
mov
fwait
mov
jns
jle
add
and
ja
cmp
fldcw
jge
sub
outsl
divb
clc
inc
aam
sub
jmp
jno
mov
cmp
fisubrs
mov
int3
push
dec
xchg
pop
into
imulb
push
fwait
cmp
daa
lcall
sub
popa
movsb
inc
mov
dec
nop
iret
inc
pop
xor
daa
xor
ds
hlt
jmp
cmpsb
sub
adc
jg
push
jne
insb
in
in
xor
inc
popa
mov
movsb
xchg
ljmp
mov
imul
lret
mov
popa
jmp
es
fwait
inc
test
and
lods
inc
sub
sub
cmpsl
add
cmp
adc
inc
popa
mov
data16
xchg
push
addr16
std
cmp
sahf
imul
and
pop
mov
int
push
push
dec
xor
xchg
and
fcompl
js
jae
ja
push
pop
add
cld
xchg
push
jae
mov
inc
movsl
dec
sub
aas
push
inc
push
test
data16
dec
xlat
fstl
stos
call
dec
dec
stc
sahf
lods
inc
imul
push
push
in
xchg
pop
dec
cs
cmp
outsl
scas
mov
outsb
inc
adc
in
inc
setge
test
ss
fs
ret
adc
xchg
push
xchg
mov
dec
sub
push
jnp
xchg
lret
js
mov
leave
jo
test
cmp
pop
mov
aad
jne
mov
gs
push
int
sbb
insl
test
fwait
pop
xor
cmp
lcall
mov
add
aas
out
pop
insl
cs
mov
inc
cmp
jno
fdivl
scas
movsb
push
ds
jo
add
add
adc
jge
scas
cmp
inc
loop
cs
cmpsb
mov
and
roll
je
sub
lcall
in
repz
lret
imul
xor
jbe
push
out
fisttpl
cwtl
push
mov
pop
out
dec
sbb
xor
dec
jo
mov
shlb
cld
ds
int3
push
imul
xchg
push
int
sbb
cmpsb
pop
nop
fldt
xor
mov
stos
stc
push
dec
cmp
mov
mov
jne
inc
lret
call
hlt
outsl
push
bound
jmp
in
sarb
cmp
mov
shll
sub
pop
jnp
ror
and
aam
sub
lcall
sub
jecxz
int3
mov
inc
mov
jb
and
xlat
add
jo
data16
es
addr16
leave
jp
test
scas
jns
xchg
insb
jo
pop
outsb
mov
shl
dec
jge
popl
mov
divb
jle
mov
or
inc
dec
std
mov
pop
rcr
sub
outsb
daa
scas
jmp
mov
cmp
mov
jb
pop
imul
xchg
fwait
push
cli
cmp
push
scas
gs
xchg
faddl
mov
pop
mov
outsb
jb
mov
sub
mov
pusha
pop
jge
or
jmp
push
mul
xlat
adc
xrelease
dec
push
inc
mov
cmpsl
push
push
test
call
test
dec
fnstenv
jns
rcr
inc
add
or
push
sub
outsb
mov
lcall
jo
out
pop
test
aas
outsl
repz
aaa
cli
pop
fxch
cmp
ljmp
std
outsl
fs
incb
out
push
idiv
push
rcrb
push
sbb
clc
test
fs
in
push
lock
mov
movsb
xor
xadd
mov
test
negl
or
xchg
cmp
int3
decb
aaa
pop
scas
adc
cmp
dec
lcall
xor
push
mov
sub
push
cmp
cmp
pop
lds
inc
shrl
push
insb
daa
mov
inc
enter
loop
into
movsl
or
pop
stc
aad
pop
movsl
dec
ljmp
or
xchg
cmpsl
push
and
sbb
fidivl
mov
scas
in
jecxz
imul
stos
popa
ja
sbb
mov
cmp
lods
sarl
pop
jo
ds
outsb
aad
jmp
xchg
test
hlt
inc
in
setns
jae
push
mov
lods
outsl
addb
out
mov
cmp
xor
push
push
mov
mov
xchg
cmp
xor
cmp
and
sbb
pop
nop
cmp
adc
dec
or
lds
mov
pop
stos
adc
fisttps
sub
aad
pop
iret
push
bswap
sub
test
jno
and
aas
pop
out
xlat
cmp
push
mov
jmp
mov
xlat
and
aaa
mov
push
push
push
sbbl
iret
add
jl
and
push
in
mov
inc
cmpsb
or
and
scas
lock
nop
in
push
push
arpl
paddusb
aaa
dec
sub
sar
aaa
sub
lcall
mov
ds
daa
lcall
lea
in
pop
ljmp
jbe
lods
shrl
mov
cmp
or
int
mov
in
aam
and
cmp
call
cmp
sub
insl
mov
aad
lcall
mov
mov
add
stc
push
jecxz
je
xchg
ret
jmp
enter
stos
std
scas
cmp
sbb
mov
or
pushf
add
notl
mulb
or
sub
shll
or
pusha
repnz
jge
call
inc
push
dec
nop
mov
fidivrl
sti
mov
enter
imul
ljmp
sub
push
push
xchg
scas
jbe
out
xchg
call
add
adc
dec
dec
addl
push
cmp
xor
pop
das
test
outsl
pop
and
and
sub
mov
cltd
mov
xchg
in
test
mov
sub
sub
push
cwtl
and
push
push
push
stos
stos
inc
aam
popf
xchg
ja
or
loopne
cmpsb
imul
push
scas
mov
and
jl
cmp
or
stos
outsb
dec
and
mov
sub
cwtl
fcoms
arpl
test
daa
sub
scas
and
shlb
pop
jl
int3
aaa
jg
aam
jno
mov
and
inc
ds
mov
jne
enter
sub
push
loope
insb
cmp
jns
and
ss
and
fsts
fidivrl
push
cmp
xor
jl
push
mov
rcll
out
daa
ss
lcall
sbb
pop
xor
or
sbbb
divl
scas
inc
out
mov
mov
test
dec
bound
out
rcrb
dec
inc
cmp
mov
xchg
and
int3
cmp
mov
pop
adc
cmp
push
add
pop
dec
adc
push
jne
mov
and
xchg
out
mov
mov
test
sub
inc
jne
daa
sahf
dec
flds
mov
jno
mov
cmp
jns
popf
cld
jns
in
subl
in
cmc
and
inc
push
lcall
pop
xchg
add
fidivrs
outsl
sub
stc
pcmpgtd
fiadds
leave
lds
sbb
mov
sub
icebp
leave
dec
push
mov
lcall
call
mov
pop
daa
dec
jp
dec
bound
fwait
jb
sub
dec
jns
out
or
popa
ja
fldl
sub
lock
ja
mov
clc
pop
fldt
leave
scas
test
das
scas
orl
sbb
inc
or
jo
aas
ret
push
scas
adc
lahf
xor
xor
xchg
cmp
xor
cmp
repz
dec
sbb
shrl
lds
adc
call
and
push
movsl
dec
lock
mov
rcrl
jno
xor
mov
sbb
add
ja
adc
jne
push
std
mov
std
leave
sbb
push
push
jb
mov
or
jbe
inc
outsb
movsl
xor
push
repnz
cmpsl
jg
bound
outsb
push
out
aad
mov
mov
hlt
mov
sub
mov
dec
int3
data16
inc
cltd
cmpsl
jl
mov
push
loop
xchg
cmpsb
or
xor
scas
test
cmp
iret
jge
repz
nop
pop
iret
aam
jge
out
add
fisubl
das
mov
pop
test
xor
das
pop
std
pop
insb
push
cmpsb
mov
sahf
lcall
jge
push
enter
aas
sbb
lods
mov
stc
call
push
fdivs
inc
rdmsr
inc
cli
das
fmuls
push
or
xor
jl
aaa
outsb
sub
inc
dec
mov
fs
push
fsubl
pusha
inc
lds
ds
ds
pop
lds
add
mov
dec
xor
lea
decl
sub
push
sbb
lret
push
popa
testb
cmp
sub
bound
push
insl
addr16
pop
in
jo
dec
sbb
xor
jmp
test
xchg
lret
idivb
cmp
sahf
addb
aaa
popa
in
repnz
and
leave
push
movsl
pop
lahf
inc
push
scas
into
inc
lar
addr16
pop
test
or
movsb
cmp
dec
nop
sub
pop
or
push
repnz
movsb
movsb
push
xorl
jge
movsl
paddusb
clc
sub
cld
test
xor
mov
popf
dec
mov
jg
or
lcall
arpl
sbb
xor
mov
jg
inc
and
xor
fnstsw
clc
pop
adc
mov
pop
inc
mov
pushf
pop
pop
pop
gs
test
js
push
push
pop
in
push
sub
mov
imul
aas
inc
xchg
xor
pop
jge
sub
or
mov
nop
cmp
aaa
ficompl
lods
cmp
and
sub
dec
cmpsb
pop
mov
jne
pop
dec
movsb
jecxz
daa
movsl
inc
popa
sbb
mov
jo
mov
dec
adc
adc
pop
mov
jo
and
lcall
inc
add
popa
test
mov
adc
pop
out
jne
scas
xchg
cltd
adc
popa
je
push
popf
fdivl
xor
loope
addr16
mov
outsb
push
push
mov
leave
insl
jg
gs
pop
lods
ret
nop
push
jmp
and
mov
adcl
cli
ret
lods
mov
lds
fwait
add
out
jno
dec
inc
sbb
int3
mov
leave
dec
mov
imul
push
cvtpi2ps
lret
mov
pop
fcmovnbe
insl
mov
pusha
addr16
sub
stos
out
inc
jge
aas
jge
mov
stc
cmp
insl
bound
arpl
xchg
je
fucomp
sbb
data16
push
mov
insl
jb
lea
jne
cmpsl
in
push
test
or
cmp
call
jo
test
mov
into
in
jle
das
jnp
and
sub
push
shlb
lcall
lret
and
mov
call
mov
addl
sub
pcmpgtw
cmp
xchg
scas
imul
ss
ss
sub
inc
xor
adc
cmp
cmp
out
cmp
adcb
mov
test
jns
pop
aaa
and
mov
out
leave
or
dec
cmp
jno
push
lcall
subb
pop
xor
dec
xor
sub
insl
rorl
inc
sbb
xchg
inc
rol
mov
addb
cmp
les
arpl
mov
xlat
jp
push
mov
cmp
add
adc
mov
lret
addr16
and
add
addr16
mov
outsb
push
outsb
stos
into
stos
or
popa
xor
mov
gs
fsubrs
mov
ljmp
cmp
push
push
out
and
adc
inc
popa
add
fsubp
out
js
mov
mov
xor
call
mov
in
lcall
mov
stos
add
cmp
cld
cmp
shrb
mov
repz
into
dec
imul
popa
add
mov
inc
pop
sahf
push
jmp
stos
lds
push
cltd
push
adc
mov
test
push
mov
push
cmovp
mov
cmpsl
data16
adc
add
test
lods
in
sub
inc
jbe
dec
call
or
gs
xor
sbb
imull
test
sub
jnp
fs
mov
push
in
cs
pop
movsl
xor
dec
sbb
pop
mov
loop
daa
add
lret
fsts
fcomps
es
insl
dec
jnp
stc
daa
imul
inc
into
inc
inc
ret
cmp
and
movb
les
popa
sub
mov
inc
or
stos
into
cmp
mov
mov
fwait
and
iret
adc
mov
sbb
pop
pop
test
rcrb
outsb
stos
dec
mov
loopne
out
push
add
aad
ljmp
outsl
outsb
cmp
mov
out
and
enter
jg
lods
lcall
orl
outsb
aad
xchg
jae
push
sbb
pusha
ret
cs
aas
xor
insb
xlat
pop
mov
mov
xchg
loope
dec
lods
sub
jae
xchg
pop
jno
xor
outsl
and
xor
ret
and
mov
pop
stc
cwtl
jge
or
lret
imul
dec
push
mov
dec
mov
jne
sbb
imul
jbe
shlb
movsl
faddl
push
pop
or
dec
inc
sub
test
xchg
fisubrs
repnz
je
and
cs
mov
loop
daa
push
aam
and
pop
int3
out
pusha
add
inc
xor
sub
push
popf
inc
sahf
cmp
add
pop
jns
movsb
cmp
cltd
sub
int3
nop
testl
pop
in
scas
inc
setg
jl
inc
sbb
add
sub
dec
cld
ss
add
ja
mov
mov
inc
and
and
cld
mov
xchg
scas
or
loop
and
sar
jns
sub
cmp
dec
imul
sbb
mov
push
jns
pop
ja
mov
mov
add
fsubrp
mov
pop
cmp
popa
mov
pop
dec
cmpsb
sbb
dec
pop
pop
pop
rol
sub
push
outsb
fimuls
mov
push
movsb
lds
sbb
xchg
scas
pop
out
fisubs
ljmp
pop
sub
dec
in
fs
jae
outsb
shll
ljmp
shll
mov
repz
outsl
dec
insb
test
xor
jg
repz
into
popw
cmp
ds
lods
test
ss
xor
mov
ss
aaa
fnstsw
int3
sub
imul
call
stos
and
mov
sti
cmpsb
mov
ret
and
mov
and
xor
mov
stc
adc
adc
add
mov
ja
pushf
ja
aas
movsl
sbb
je
gs
rcll
dec
push
int
jecxz
mov
andb
cmp
xor
cmp
push
push
dec
popa
dec
sub
mov
inc
ret
cltd
in
cmpsl
test
iret
inc
jns
jbe
stos
ret
dec
into
clc
fwait
sbb
not
icebp
jl
fcoml
sub
js
pop
jl
adc
push
dec
adc
lea
and
cwtl
cmp
xchg
clc
mov
jl
xchg
aas
push
jg
dec
lret
inc
pop
add
scas
xlat
xchg
jo
insb
pop
jns
push
lcall
pop
xchg
ss
push
in
xor
fwait
test
mov
lcall
fwait
cmp
add
jmp
ds
test
in
out
dec
xor
jg
jecxz
inc
adc
inc
mov
jge
cmp
push
mov
mov
mov
pop
add
subb
repz
push
push
add
ds
rcrl
negb
insb
js
mov
jg
sub
xor
sub
arpl
outsb
push
push
clc
xor
popw
data16
imul
xlat
icebp
push
daa
dec
stos
iret
aaa
mov
cli
repnz
cmpsb
fdivrs
push
psubsw
scas
cltd
lahf
jbe
xor
fisubrs
dec
ljmp
xor
or
push
mov
outsl
sbb
ss
inc
mov
add
call
pop
add
jg
xor
mov
test
outsl
xchg
sub
lret
imul
popa
cs
dec
mov
xor
inc
test
orl
mov
lock
or
test
stos
clc
mov
push
pusha
cmp
fnstenv
dec
outsb
xor
dec
lcall
inc
adc
les
outsb
push
stc
enter
insl
data16
imul
pop
pextrw
jg
cs
push
mov
cmpsb
sub
in
jle
in
and
cld
lea
jp
aaa
mov
cwtl
xchg
push
pushf
scas
scas
lods
outsb
pop
jb
pop
cmpl
jno
sub
ja
and
xor
andb
adc
xor
and
mov
nopl
pop
mov
push
popf
aad
pop
xorl
sub
jns
fstl
loop
movups
divl
xor
jecxz
push
enter
cmp
jnp
xchg
daa
pushf
inc
jbe
sbb
push
cmp
movsb
dec
mov
fsts
les
jno
cld
dec
lea
dec
orb
xor
mov
in
xor
and
call
aas
jmp
sub
das
push
sub
adc
enter
add
push
lcall
push
ret
adc
push
cmp
cmc
out
push
jg
lock
mov
xor
mov
xchg
jb
fadds
mov
ja
xor
aaa
dec
jne
ja
or
cmc
mov
cmp
and
push
scas
and
in
push
pcmpeqd
lock
pop
adc
scas
ret
push
fisubl
jmp
or
std
jmp
sub
jb
push
or
dec
out
stos
xor
lcall
xor
call
pop
cmpsb
test
fsubl
cmovp
mov
jns
mov
inc
inc
test
out
dec
outsb
fst
push
pop
cmp
xor
or
dec
jns
push
cld
mov
aaa
insb
sahf
pop
test
insl
cli
into
inc
lcall
mov
test
dec
pop
je
jp
xor
int
outsb
stc
inc
jb
lahf
jmp
xchg
int
and
stos
cmp
test
dec
int3
cmp
sub
or
js
xchg
lahf
sbbb
dec
jo
outsb
push
pop
clc
mov
cmp
pop
es
test
std
pop
push
dec
test
out
sub
scas
sti
outsb
xor
pop
cld
mov
stos
pop
and
or
xor
cmpsl
dec
mov
and
or
scas
push
cs
push
cli
inc
and
leave
mov
aas
lea
jb
aaa
aaa
test
test
cmp
gs
push
cwtl
hlt
pop
jbe
xchg
lods
dec
shrl
and
cs
xor
cmp
outsb
lods
add
jns
sbb
shlb
push
imulb
adcb
repz
inc
xlat
xor
ja
add
scas
sbb
dec
je
xchg
push
out
pop
data16
lods
or
data16
jle
cli
rclb
cmp
notb
sti
call
andb
ljmp
in
or
mov
sbb
push
xor
mov
stc
inc
outsb
les
xor
test
divl
dec
or
cmp
xlat
pop
sbb
mov
rol
push
sub
xchg
lods
outsl
int
nop
scas
jle
mov
xchg
mov
setbe
pop
lea
and
mov
mov
inc
cltd
add
lock
pop
filds
mov
push
nop
push
inc
cli
push
fstpl
test
mov
and
iret
mov
cmpsl
dec
add
lea
mov
push
repz
ss
sahf
cmp
dec
push
fdivrp
jl
adc
int
orb
je
pop
sbb
aaa
mov
jnp
fldl
sub
das
pop
jae
packsswb
mov
mov
scas
gs
push
jge
jne
ret
mov
jl
inc
out
jle
push
cs
jbe
cmpsb
scas
test
push
int3
push
pop
cmp
jno
jns
dec
or
push
sar
cmp
cmp
test
lcall
fidivrl
jmp
sbb
mov
pop
cmpsl
test
test
aas
inc
push
mov
cwtl
jge
sub
in
mov
sahf
rcl
mov
add
mov
ja
repnz
sub
or
in
arpl
or
movsl
mov
cmp
mov
adc
inc
jbe
mov
inc
mov
dec
pop
adc
adc
ss
mov
aad
jne
jg
fwait
adc
lock
xchg
pop
pop
xchg
stos
insl
and
test
sti
aam
in
add
je
fiaddl
arpl
mov
add
int
pop
sub
mov
loope
jno
mov
loop
fisubrs
or
mov
call
outsl
push
adc
lret
rdpmc
adc
outsb
jb
or
xchg
mov
mov
dec
stos
mov
fnstcw
ss
cmp
xor
ss
test
push
rorl
push
and
push
cmp
cmp
jb
movsb
imul
insl
repnz
fwait
mov
icebp
and
cmp
dec
fsubrs
pop
pushf
or
mov
enter
bound
getsec
cli
imul
mov
fsubrl
pop
sbb
xor
pop
sub
inc
cmp
mov
dec
mov
xor
stos
pop
adc
push
pushw
mov
xor
mov
dec
mov
dec
jns
inc
icebp
cmp
jge
je
stos
cmp
insl
cld
mov
inc
push
cmova
sub
aaa
nop
xor
and
dec
xchg
pushf
idiv
cmp
xor
cld
dec
xor
les
call
lahf
inc
mov
xchg
inc
mov
inc
pop
daa
imul
ja
xor
mov
jnp
pop
jmp
jge
inc
mov
mov
scas
mov
out
jecxz
cmp
pop
je
dec
outsb
dec
xchg
mov
shrl
sbb
inc
cmp
dec
imul
imul
imul
pop
xor
fstpt
xchg
push
push
cmpsl
dec
jle
lods
ss
lds
mov
jbe
sub
pop
aam
mov
sub
test
outsl
push
jle
fcmovu
dec
mov
add
add
mov
or
or
lods
sub
fs
xchg
push
adc
in
jg
mov
lock
add
pushf
xchg
adc
loopne
dec
notb
sti
jp
arpl
xorl
rcr
push
or
cmp
mov
jg
dec
mov
jns
cmpsl
cmp
sub
xlat
loope
push
cmp
push
call
xchg
adc
cmpsl
movsl
fwait
push
dec
mov
or
sub
lcall
xchg
xor
loop
mov
mov
test
negb
push
fwait
push
xchg
cmpsb
pusha
js
pop
dec
or
mov
jp
mov
aam
inc
movsl
data16
sub
pop
out
xchg
add
das
adc
ljmp
inc
test
data16
adc
xchg
ja
sbb
aaa
cmp
sub
aam
add
dec
sub
cld
mov
movups
dec
lods
adc
lmsw
adc
xor
pxor
dec
cmpsb
jae
lods
mov
push
das
nop
out
mov
in
jo
ret
cwtl
mov
movsl
andb
xor
inc
dec
outsl
dec
push
push
push
mov
inc
out
loop
sarl
or
xchg
mov
cmpb
mov
in
sub
fnstsw
cmp
lret
sbb
sbb
or
cmp
push
movsb
mov
mov
movsl
fsubrs
andl
hlt
xor
std
add
xor
xchg
and
gs
sbb
mov
mov
mov
push
aaa
jecxz
mov
inc
mov
pop
push
inc
repnz
scas
ss
call
add
sti
sub
push
and
pop
xorb
movsl
daa
shrl
test
popa
in
mov
es
push
orl
scas
xor
repnz
cmp
sub
cmp
sbb
jb
ss
cmp
std
xchg
or
pop
andl
xor
xchg
mov
pop
mov
stos
dec
sti
and
dec
dec
adc
js
adc
mov
movsl
sub
mov
push
out
pop
cmp
cmp
cmc
sub
pop
push
out
lds
jge
mov
in
int3
mov
out
sub
inc
cs
scas
ds
mov
js
xchg
mov
dec
jecxz
sbb
mov
paddusw
and
lods
and
fidivrl
cmp
mov
pop
gs
iret
mov
push
jo
xor
push
das
insl
inc
popf
data16
cmpsb
cltd
pop
ljmp
xchg
movsb
stos
jns
cmc
stos
inc
xor
bound
cmpsl
pop
push
faddp
js
inc
call
push
fstl
push
scas
or
mov
scas
cld
cmp
call
jge
mov
aaa
insl
ja,pt
fldl
pop
scas
push
lods
je
sbb
fwait
jne
flds
jbe
jb
pop
mov
push
dec
icebp
sub
fwait
push
inc
test
sub
out
lret
push
nop
push
pop
inc
sub
sbb
dec
pop
jnp
insb
mov
push
jnp
outsl
push
push
or
sti
push
scas
stos
outsb
pop
scas
add
cmp
sbb
pusha
aam
push
jns
adc
ljmp
mov
imul
xchg
rclb
test
bound
loop
jle
inc
push
sbb
stc
ss
into
inc
lods
mov
sbb
push
shr
sbb
aaa
push
cwtl
imul
or
mov
cmc
fwait
and
xor
int3
iret
outsb
push
add
stc
adc
mov
push
aas
push
push
mov
pusha
push
sub
lret
cmpsb
sbb
das
ss
mov
pop
pop
jg
cli
dec
lret
das
cmpsl
movsb
cs
cmp
std
or
push
push
sarl
imul
test
adc
mov
jecxz
jb
out
rclb
popa
subb
pop
sub
mov
cmpsl
lods
rcrb
dec
mov
fs
incb
lcall
sbb
leave
data16
jmp
push
stos
push
fildll
adc
test
push
push
rorb
inc
sub
loop
cmp
mov
dec
outsb
sbb
dec
call
lds
mov
lahf
xor
add
insb
jge
decl
lods
inc
or
and
divb
insb
adc
cmp
mov
shlb
cmpsb
lea
pop
lahf
frstor
sub
cltd
lcall
push
loop
mov
cmc
js
cmp
int3
mov
add
mov
jbe
popa
inc
std
out
sahf
sbb
cmp
ss
repnz
add
movsb
xor
mov
adc
mov
out
mov
pop
cmp
cs
sub
jno
sahf
into
in
aas
cmp
mov
push
and
push
lret
ret
movsl
lret
shlb
push
add
sbb
sub
cs
cmp
jp
insb
push
cmpsb
out
mov
mov
sub
mov
ds
xor
inc
nop
dec
cs
sbb
in
test
jg
mov
fisubs
pop
stos
sub
mov
repnz
andb
pusha
push
sarb
repnz
push
outsb
sbb
pushf
pop
repnz
ljmp
jb
into
out
in
cmp
sub
pop
shlb
loop
cmp
fsubr
out
inc
xchg
stc
sarl
icebp
aad
mov
mov
int3
push
sbb
testb
push
mov
sbb
test
cli
push
dec
mov
bound
cmp
fisttps
inc
push
test
push
pop
add
jns
add
lcall
and
inc
aam
jge
das
leave
out
enter
insb
xchg
pop
xor
scas
decb
sbb
mov
in
enter
sub
fldpi
cmp
jecxz
push
out
stos
sub
daa
xchg
inc
push
leave
jo
cmp
shll
mov
push
stos
pop
xchg
aaa
jl
jge
jo
sarl
jmp
inc
insl
aaa
lret
data16
jge
inc
loope
cmp
mov
mov
sbb
fldl
cmp
dec
test
xor
das
fdivs
js
jmp
sbb
das
pop
and
scas
lcall
mov
inc
shll
dec
mov
lea
imul
popf
jns
je
mov
sub
daa
add
fcoms
std
mov
xor
push
cmpl
aaa
enter
inc
cmpsb
outsl
inc
ss
test
xchg
test
mov
stos
sub
jo
mov
sub
sbb
jne
pop
jns
xor
in
sahf
push
cmp
cmpsl
jae
rcll
ss
push
cmp
outsl
inc
push
push
adc
mov
ja
ds
in
or
mov
dec
ss
adcb
adc
jne
cmp
cmp
orb
adcl
sbb
das
lcall
or
sbb
jbe
xchg
adc
sahf
mov
lods
repnz
xor
in
mov
mov
sub
repz
pop
aaa
pop
jl
std
subb
in
das
adcb
test
xchg
push
adc
ret
adc
std
sub
hlt
cmp
out
mov
sub
arpl
add
push
cmp
xor
fwait
insl
in
pop
imul
pop
test
xchg
push
dec
add
dec
stos
in
scas
aas
cmp
inc
inc
cmp
sbb
add
adc
pop
push
out
inc
cmp
sub
leave
cmp
inc
sub
outsb
js
cmpl
jbe
mov
ret
jl
cmp
andl
inc
adc
mov
mov
sub
inc
mov
cmp
xor
lret
out
hlt
cmp
rolb
shrb
loope
fwait
or
adc
pop
imul
push
rcl
mov
addr16
push
popa
subl
pop
jo
arpl
ljmp
cli
and
pop
add
push
mov
ffreep
xor
pop
out
jle
or
or
rorl
aas
imul
movsl
cmp
test
cli
and
mov
mov
dec
andb
and
inc
sub
rcll
mov
sbb
ss
jb
mov
xor
sbb
jp
leave
jmp
inc
inc
push
mov
ficoms
mov
test
movsb
jno
pop
ss
jo
mov
xor
jp
cmp
loop
add
stc
lcall
jbe
shlb
sbb
cld
lcall
in
int
xchg
mov
sbb
sti
jo
aad
int3
lcall
xor
arpl
mov
into
sub
cmp
adc
lods
push
dec
mov
pop
lods
mov
gs
xor
jb
or
adc
add
dec
lock
repz
and
cs
test
cmp
rorb
jp,pt
shll
enter
cmpsl
push
or
insl
add
jle
inc
js
dec
mov
or
into
mov
gs
dec
test
idivb
leave
lea
xchg
push
outsb
xchg
xor
add
pop
jo
push
das
dec
mov
push
push
dec
sbb
jecxz
in
mov
daa
cmpsb
mov
sbb
in
in
je
and
push
dec
jns
inc
leave
pop
mov
sub
std
ret
pusha
or
jns
iret
or
jae
xchg
push
mov
mov
mov
popf
test
add
popa
lcall
inc
and
aaa
jg
push
mov
jb
pop
mov
add
push
dec
mov
cld
jge
ja
xor
lret
push
test
sarl
fdivp
jg
cli
jne
inc
push
stos
xlat
inc
push
jne
addr16
daa
andps
dec
push
pop
popa
mov
push
mull
or
out
mov
mov
movsb
data16
jno
push
jp
dec
and
lret
pop
pop
cs
fcomps
jle
lods
xchg
lret
shlb
jae
mov
mov
cmp
aas
or
das
push
outsb
loopne
shl
pop
xchg
ss
addl
fidivs
cs
lret
push
jne
mov
das
inc
mov
je
or
mov
add
jg
mov
mov
dec
sbb
shl
add
push
outsb
xchg
aaa
in
mov
movsl
push
ds
sbb
push
sahf
cmp
into
mov
scas
push
stos
je
mov
lcall
xor
jg
jl
das
lcall
jbe
jno
mov
repz
data16
pop
and
aas
outsb
inc
xchg
test
sbb
add
shll
push
into
sbb
push
fs
hlt
pop
jmp
cmp
ret
aas
fdivs
mov
mov
inc
xor
add
arpl
mov
push
in
jecxz
arpl
mov
dec
ffree
dec
inc
jns
lock
xor
orl
pop
jne
xchg
sub
mov
xor
imul
xchg
jle
fisubrl
sarb
mov
in
insb
add
dec
bound
daa
mov
mov
sbb
sub
push
test
jnp,pn
cli
xorb
add
ss
dec
das
cmp
inc
in
add
fcoml
mov
push
push
xchg
dec
push
add
cmp
cmp
jnp
int3
mov
push
int3
aad
fwait
lret
sub
cmp
jp
shlb
clc
inc
dec
dec
in
sahf
push
lcall
mov
mov
push
les
mov
leave
lret
pop
shr
sahf
int3
dec
pop
js
mov
call
cmp
mov
mov
add
lea
leave
cli
dec
adc
insl
inc
cs
add
imul
imul
xor
sbb
xchg
stos
pop
daa
bound
ljmp
out
and
or
xor
cmc
aaa
dec
pop
jnp
loope
aam
mov
cmp
aad
stos
sub
mov
mov
inc
das
xchg
outsl
insl
out
jmp
or
ljmp
pushf
test
push
std
in
outsl
jbe
outsb
imul
jmp
clc
sarb
adc
jmp
outsb
jae
rcll
push
and
incb
nop
fldt
mov
mov
cmpsb
rsqrtps
mov
jl
pop
and
and
or
adc
cmpb
add
in
test
inc
push
lods
int
aam
add
rcll
stc
inc
mov
test
mov
mov
test
xor
mov
outsl
push
mov
dec
int
and
mov
imul
jb
jbe
test
jns
test
les
aaa
and
les
mov
testl
jbe
adc
pop
cmp
inc
cmp
dec
cmp
dec
jle
and
adc
sub
mov
arpl
xchg
sbb
gs
cmp
in
shll
mov
xor
mov
cmp
pop
dec
dec
push
dec
push
jae
aas
pop
dec
lahf
xchg
sbb
xor
push
ret
test
fnstcw
xorb
lret
in
cmp
sbb
test
adc
cmp
pop
adc
push
addb
cmp
aaa
jl
lahf
xchg
mov
aas
sub
xchg
popa
inc
lds
iret
xor
std
pop
mov
rorb
sbb
push
dec
dec
lcall
sahf
stos
xchg
pop
sbb
fiaddl
ss
xchg
sti
cmp
cmpsb
adc
test
jno
sub
and
jb
aaa
adc
xor
jle
les
inc
pavgw
jge
mov
dec
cli
scas
inc
xchg
punpcklbw
mov
inc
test
fisttpl
outsb
jp
xchg
jno
xchg
lock
inc
or
sbbb
push
pop
stos
in
pop
xor
sub
jns
arpl
cmp
xchg
xchg
push
xchg
mov
push
cmp
jmp
xor
addr16
xchg
jo
dec
std
popf
xchg
push
adc
cmpsl
daa
sub
js
inc
decb
cli
inc
inc
inc
push
mov
inc
add
sbb
sub
xchg
dec
xlat
lcall
jge
mov
inc
stos
movsb
cs
mov
or
mov
decb
mov
lret
and
pop
imul
into
push
data16
sbb
ja
das
push
and
shrb
jl
cs
xor
or
cmp
and
xchg
leave
je
ljmp
pop
push
lcall
inc
addb
int
ljmp
or
add
push
cmp
stos
add
cmp
stos
imul
shrb
enter
sbb
in
dec
jp
movsb
out
pop
mov
cmpsb
es
rclb
in
pop
dec
inc
jg
fwait
sub
adc
push
test
or
and
xor
sbbb
inc
dec
das
repnz
sbb
aaa
cmp
dec
stos
cmp
pop
xchg
cmpsl
test
jp
repz
jae
lods
or
push
dec
loopne
out
push
pop
ja
xchg
rclb
mov
cmp
adc
lret
in
sbb
mov
xor
xor
stc
xchg
xor
aaa
xchg
and
xor
push
inc
dec
dec
aas
jns
mov
loop
mov
xor
jae
popa
cmp
mov
adc
imul
gs
sahf
icebp
cmc
sub
cmpsb
int
sub
push
dec
mov
sahf
add
js,pt
mov
ja
add
out
push
in
pop
aaa
cmp
mov
sub
nop
push
push
ja
cmp
int3
insb
sub
mov
adc
mov
xchg
and
ljmp
mov
out
xor
push
inc
out
subl
loopne
xorl
sub
jb
in
cmpsb
adc
loop
in
and
ret
pop
sbb
mov
movsl
std
ret
test
stos
ljmp
cmp
cmp
lea
push
inc
movsb
dec
cmp
sub
sub
scas
stc
cmovle
mov
add
cmp
rolb
sub
outsb
mov
cwtl
xlat
and
enter
call
sbb
pop
out
cmp
stos
jl
jbe
das
cmp
in
push
in
push
jp
mov
sahf
in
or
je
pop
loope
lcall
out
push
shll
jnp
pusha
fstps
sbb
call
dec
mov
orb
test
mov
sarb
mov
xchg
xchg
xchg
stos
test
push
pop
jae
imulb
loop
dec
ljmp
mov
and
int3
dec
fmulp
idivl
movq
daa
dec
scas
frstor
sarl
mov
push
cmc
addr16
and
hlt
sahf
jo
cmp
lahf
mov
test
mov
dec
int
push
sub
mov
subl
add
outsb
js
mov
pop
in
dec
push
je
popa
pop
mov
add
mov
imul
sub
push
fstps
lds
cmp
push
cmpsb
dec
ret
push
test
jle
std
push
dec
ljmp
adc
dec
out
mov
out
inc
push
cmp
sub
mov
jbe
inc
cs
andb
psadbw
dec
lcall
scas
scas
fmull
mov
pop
out
sub
addr16
into
jb
cmp
clc
in
lock
and
push
and
imul
push
jmp
sub
pop
sqrtps
xchg
pop
add
cmp
xchg
adc
xor
lods
xor
outsl
aaa
mov
xor
mov
aad
dec
xchg
test
data16
jl
xor
imul
out
sub
in
dec
fwait
cmp
xor
mov
out
xchg
jb
sbb
jmp
repnz
leave
bound
sbb
rorb
cltd
xchg
xor
or
testb
jns
xor
fwait
mov
pusha
mov
jno
jb
stos
pop
xchg
jns
sahf
xchg
out
jo
xlat
cmp
sub
aad
pop
push
ss
lods
shufps
ljmp
in
push
ljmp
inc
lcallw
movq
jle
test
out
das
cwtl
push
mov
lea
paddq
shrb
jo
xor
cmp
jle
test
xor
fsubr
inc
lcall
and
cs
andl
mov
mov
icebp
dec
fwait
aaa
dec
lds
cmpsb
mov
vpaddb
leave
aaa
mov
mov
mov
xchg
sub
inc
ja
cs
mov
sub
push
jge
inc
ds
mov
js
cmp
mov
addr16
fcoms
bound
push
insl
aas
dec
jle
mov
mov
cmpl
addb
push
fsubrl
and
outsl
lods
cmpsb
decl
je
push
sbb
scas
iret
and
insl
mov
xchg
loope
xor
jae
push
into
xchg
mov
cmp
cmp
gs
pop
stos
jp
dec
sbb
cmp
sar
test
lcall
jp
mov
sub
add
loop
gs
dec
push
pop
mov
shlb
dec
jo
sub
adc
rol
repnz
aaa
test
cwtl
cmp
mov
dec
lret
fwait
into
sbb
daa
bound
cmp
xchg
mov
imul
sub
and
pop
jl
sarb
jp
popf
int3
dec
movsw
mov
mov
cmpl
push
or
add
fwait
mov
sub
pusha
sysret
cld
cmp
scas
mov
dec
insb
xor
push
jnp
rcrl
cmp
jbe
cmp
insl
clc
push
and
push
shlb
mov
push
jbe
jae
sbb
push
push
pop
jmp
cmp
shlb
int3
gs
mov
pop
jge
das
sub
adc
jb
popa
mov
dec
pop
inc
scas
push
cmp
dec
ret
das
test
dec
dec
sbb
xchg
rorl
loop
push
dec
jno
sarb
movsb
cmp
dec
loop
adc
and
fsubrs
mov
sbb
jecxz
test
int
adc
push
sub
cmc
xor
adc
jno
dec
scas
cmp
aaa
push
or
adc
movsb
dec
nop
push
xchg
add
lods
test
lds
pop
sub
dec
adc
cld
dec
mov
adc
lret
xchg
xchg
cmp
jne
out
xchg
lcall
xor
jb
jge
hlt
pop
clc
mov
scas
sub
pop
sbb
jnp
mov
cmp
dec
les
test
pop
ss
xchg
jp
xchg
adc
aas
adc
sbb
enter
jp
std
cmp
push
push
xchg
mov
mov
jle
mov
xor
imul
sub
divb
and
push
xor
cltd
cmp
adc
mov
rcrl
insl
inc
sub
mov
sub
test
cwtl
dec
and
test
ss
xchg
pushf
data16
pop
stos
aad
imul
dec
jb
inc
mov
dec
daa
jg
pop
sub
aaa
add
cmp
pop
lods
xchg
push
fwait
xor
inc
lods
xlat
insl
mov
aas
dec
out
adc
ucomiss
jne
decb
std
and
push
icebp
sub
jne
lea
es
cmp
pop
push
adc
add
aaa
icebp
xchg
jnp
add
dec
rolb
xor
sub
mov
movsl
push
neg
and
scas
sbbl
ja
dec
push
and
out
inc
mov
outsb
lds
mov
fwait
xor
mov
and
pop
outsl
pop
sti
fistl
lcall
xchg
jno
jg
cmp
sbb
daa
push
hlt
loopne
dec
cmp
inc
inc
scas
insb
mov
stc
push
jl
sub
popa
imul
mov
add
aam
sub
ljmp
sub
sbb
pushf
jecxz
xchg
outsl
xor
rcrb
mov
out
enter
mov
addl
cmp
sub
mov
pop
push
dec
mov
mov
dec
movsl
cmp
fstpt
stc
out
mov
fcmovne
ljmp
or
rclb
rcl
jb
jmp
inc
outsb
jo
adc
lretw
arpl
mov
outsb
stos
dec
cmpsl
in
sahf
push
bound
cmp
test
mov
loope
int3
stos
push
test
ss
fcomps
inc
jo
jmp
sub
push
mov
mov
fidivrl
push
clc
outsb
inc
jb
cli
dec
daa
test
outsl
insb
jecxz,pn
fwait
test
sbb
outsb
sub
cmp
xor
cmp
xor
outsl
mov
mov
xchg
xor
and
push
shrl
clc
sbb
movsl
mov
jb
xor
push
and
outsl
jae
inc
mov
cwtl
pop
dec
pcmpeqd
sub
rcrl
pop
jge
into
js
hlt
dec
jg
push
pushf
outsl
dec
imul
and
in
jle
push
aam
out
out
and
fneni(8087
cmp
dec
fwait
dec
mov
inc
inc
movsb
imul
pop
cld
adcl
push
xchg
cmp
and
ljmp
mov
shr
mov
je
inc
adc
pop
in
leave
fidivs
jle
comiss
dec
cmpsl
ror
test
leave
mov
mov
cmp
or
rorl
push
cmp
xchg
push
pop
incl
dec
push
xor
dec
dec
push
xor
push
xlat
enter
cli
xor
outsb
and
rcrl
pop
data16
mov
inc
stos
sub
std
repz
imul
mov
and
outsl
sub
adc
in
in
lret
pop
jno
call
es
xor
adc
ss
je
bound
les
cmp
fists
lret
push
jo
or
pand
stos
jno
inc
mov
add
mov
dec
popf
sub
inc
ret
outsb
xor
adc
cmc
daa
pcmpgtw
rolb
mov
mov
jnp
or
xchg
pop
or
das
or
mov
dec
add
data16
nop/reserved
adc
les
scas
inc
jp
xchg
push
sti
xor
push
xor
adc
scas
lret
outsb
movsb
inc
imul
push
push
repnz
dec
in
jns
lret
hlt
jbe
aaa
mov
mov
scas
js
mov
je
nop
lea
jl
test
mov
sti
lods
cld
iret
test
push
pop
mov
sbb
or
lahf
jns
cwtl
and
dec
aaa
out
cmp
push
xchg
sbb
lret
aas
movsl
inc
jl
jo
test
inc
or
aam
xor
insb
mov
aam
cmp
movaps
push
pop
in
ja
inc
dec
ds
adc
sbb
cli
pop
faddl
adc
pop
stc
mov
fsubrs
loop
cli
ret
pop
insb
xlat
ds
mov
sub
pop
inc
cli
sub
test
loop
test
xor
mov
movsl
sub
imul
daa
ret
rclb
cld
fiaddl
sub
movsb
and
pop
rorl
movsb
dec
jbe
mov
dec
insl
cmp
insb
ja
jp
ret
jp
or
imul
js
mov
popa
ds
sub
xor
les
mov
stos
push
shlb
and
xor
test
rclb
lds
imul
mov
cmp
cltd
mov
jae
push
das
test
loope
enter
outsl
fistl
dec
and
and
in
cmp
stos
jno
repnz
and
pop
mov
imul
add
lret
test
sub
scas
movsl
cmp
push
out
std
inc
into
imul
xchg
push
inc
mov
dec
cmp
fs
pushf
sub
xchg
lret
jmp
mov
aaa
mov
out
mov
sbb
and
test
popa
js
outsb
shrb
mov
iret
sbb
dec
xchg
and
jge
adc
js
aaa
hlt
push
cmp
mov
sub
stos
fadd
mov
and
mov
sub
push
stos
jne
arpl
inc
pop
cmp
mov
popa
out
rclb
mov
cwtl
jl
ss
xor
inc
divl
test
dec
push
pop
push
mov
jnp
dec
mov
movsb
cltd
sub
jno
push
data16
jnp
mov
jecxz
leave
push
adc
fwait
cmp
jl
lahf
xchg
pop
mov
cwtl
jmp
lcall
mov
dec
pushf
sbb
les
scas
aam
mov
sub
stos
dec
lods
lret
cli
test
pushf
pop
cmp
pop
cmp
ljmp
clc
pop
mov
shlb
cli
out
pop
push
sbb
fistl
test
in
push
ret
repnz
fwait
cmp
addr16
mov
mov
xor
pop
je
add
ret
sub
mov
fdivl
in
pminsw
and
pop
sub
adc
mov
daa
push
divb
mov
xor
adc
popa
lods
cmp
fsts
sbb
and
int3
ds
fsubrl
jo
xor
mov
push
dec
mov
call
mov
sub
stos
push
rolb
lods
call
dec
push
cli
into
xor
popa
xor
mov
daa
ret
negb
jbe
aam
cmp
cmp
cld
xor
dec
mov
xor
add
test
das
fisttpll
das
mov
lret
cwtl
addl
jg
dec
je,pt
movsb
jo
movsb
pop
cmp
dec
aaa
cmp
mov
mov
movsb
push
daa
dec
lcall
mov
cmc
inc
xor
sub
mov
sub
or
and
adc
ja
push
mov
rcl
addr16
cmp
push
push
pop
clc
sbbb
inc
sbb
insl
aaa
add
xchg
mov
mov
push
mov
sbb
fmul
fbld
jnp
mov
add
or
into
fiadds
cmp
subb
dec
xchg
jg
sbb
and
das
mov
js
cmp
jmp
mov
and
mov
aas
dec
lcall
mov
inc
inc
dec
cld
cmp
cmp
xor
dec
and
cmpsl
inc
imul
icebp
and
adc
mov
std
jle
xchg
and
pop
dec
inc
mov
dec
out
xor
cld
dec
push
adc
adc
fwait
inc
cltd
dec
sub
test
rol
iret
push
xor
inc
dec
push
dec
adc
jo
push
inc
jae
ss
jge
cwtl
or
ljmp
adc
mov
das
xor
push
lods
into
ljmp
mov
mov
or
fcoms
jns
in
subl
adc
ret
cmp
popw
ljmp
fstl
add
push
jecxz
sbb
sub
out
cld
adc
jne
outsb
aad
cltd
loope
popa
ds
std
adc
and
adc
sub
add
fwait
push
cmpsl
icebp
xchg
jge
xor
cld
mov
aam
cmp
adc
test
mov
out
je
fmuls
addr16
lods
xabort
xor
test
dec
sbb
imul
push
mov
sub
sub
loop
cmp
sbb
insb
lea
insb
out
aas
push
mov
pop
mov
stos
dec
mov
mov
lret
rcrl
mov
fidivrs
and
xor
daa
dec
lcall
push
sbb
push
mov
dec
test
dec
jne
mov
xor
dec
movsb
adc
push
xor
test
cwtl
sbb
add
dec
insb
dec
cli
data16
scas
jl
mov
cmp
repz
lods
dec
hlt
jl
aad
mov
aas
cmp
inc
arpl
dec
ss
data16
sete
mov
cltd
xchg
mov
setle
cltd
cmp
jns
inc
das
push
xlat
mov
sbb
outsw
cs
ret
aaa
fsubl
popa
add
pop
inc
inc
int
and
mov
jo
lods
in
stos
push
cld
jmp
scas
adc
mov
icebp
lds
cmpsb
pop
mov
iret
mov
movsb
mov
sbb
sub
mov
mov
lods
xor
mov
fwait
push
lret
ljmp
inc
cmp
push
stos
sub
ds
add
pop
outsl
test
jne
enter
inc
inc
packsswb
sti
push
ror
nop
je
mov
ds
cld
popf
jmp
mov
movsl
leave
xlat
xorb
imul
mov
clc
pop
out
xor
repnz
js
ja
or
mov
push
cmp
xor
icebp
or
sarl
push
leave
lret
and
pop
push
jno
mov
jo
dec
xor
movsl
shll
inc
lds
inc
fwait
adc
ja
or
ret
divl
cmpsw
mov
and
ret
mov
dec
cmp
fisttpl
add
add
cmp
imul
out
sarl
rdpmc
sub
sub
out
lods
scas
pop
push
lcall
inc
js
stos
insl
lds
sub
ds
arpl
ds
cmovg
pop
lods
daa
sarl
sahf
orl
mov
cmc
out
mulb
loope
mov
jne
test
jb
xchg
jbe
push
dec
pusha
icebp
dec
outsb
js
call
std
into
iret
pop
rcl
inc
sbb
push
adc
pop
sub
dec
sub
mov
dec
pusha
psrlw
jb
lods
xchg
inc
push
dec
xor
sub
cmp
test
and
fwait
outsb
sbb
data16
imul
fstl
ret
and
inc
inc
pop
sub
orl
cmp
and
js
fdivl
repnz
minps
add
sbb
icebp
cld
imull
mov
push
sub
mov
mov
push
mov
cmpsb
lret
xor
imul
insb
out
out
pop
fnsave
sbb
jae
cmp
lret
xor
cmpsb
cmp
in
xor
add
arpl
xor
pop
mov
cmpsb
out
je
pop
mov
call
inc
xor
sub
push
fnstenv
dec
push
ret
xchg
lret
dec
inc
cs
and
xchg
les
xor
sti
mov
push
jne
xchg
lods
fists
cwtl
jecxz
mov
inc
clc
jle
and
idivl
mov
paddsw
cmc
dec
fdivrs
jmpw
nop
dec
jge
and
inc
scas
dec
movsl
scas
test
mov
negb
mov
imul
jbe
cmp
daa
jbe
lahf
mov
add
das
mov
mov
cmp
cmpsl
mov
cwtl
ret
lret
adc
stos
addl
jae
fmull
inc
jp
cmpsl
aas
stos
sub
in
mov
xor
cmp
dec
push
cmp
cpuid
test
mov
aam
pop
dec
cmpsb
mov
and
and
addb
lock
jno
xchg
dec
jae
xchg
ja
push
jo
cmp
push
jbe
je
lds
mov
inc
mov
dec
jp
arpl
jbe
shlb
test
and
jp
xor
adc
andl
lods
push
test
pop
test
stos
dec
inc
pop
push
push
popa
lea
dec
sub
xchg
imul
push
fstpl
filds
jge
dec
and
push
adc
fidivs
lods
push
enter
push
dec
pop
jns
jg
cmp
int
mulb
pop
xor
mov
jb
js
or
hlt
mov
jbe
xor
jnp
inc
imulb
test
inc
test
negl
mov
cmp
in
les
sbb
negb
clc
dec
cmp
dec
push
subl
icebp
push
sub
mov
mov
ljmp
pop
sti
mov
push
lds
ror
cmp
shll
and
add
push
cmp
icebp
aas
movsl
pop
icebp
movsl
sub
and
mov
daa
mov
pop
mov
add
outsl
stc
xor
xor
mov
mov
cmpsb
nop
xor
and
xchg
jge
sub
fnstcw
adc
jge
sub
daa
cmp
mov
jo
jmp
in
popa
adc
fsubp
je
hlt
push
mov
mov
nop
mov
pop
cmp
das
add
sub
cs
idivl
inc
dec
repz
cltd
das
mov
daa
jp
mov
jecxz
pop
ret
js
inc
jecxz
cmp
popf
push
dec
mov
test
dec
data16
push
mov
ret
sub
sub
aaa
mov
enter
xor
sar
daa
mov
push
add
outsb
in
sub
ds
loopne
popa
andb
add
ret
rclb
mov
js
ja
sub
les
sub
adc
das
pusha
and
ja
data16
jbe
sbb
filds
pminub
mov
ds
mov
lds
dec
inc
sub
and
or
fsubr
jl
sub
lret
mov
and
dec
ret
mov
nop
aas
enter
push
cmp
dec
add
lret
scas
int
in
xchg
mov
pushf
popa
xor
xor
xor
adc
dec
pushf
jb
mov
out
ds
lret
dec
push
stos
mov
jns
sti
mov
push
nop
cmp
or
ja,pn
fmuls
sahf
mov
ss
xlat
mov
fdivs
sub
mov
outsb
test
test
jbe
xchg
xorb
and
je
pop
mov
cmp
cmpsl
mov
and
mov
cld
dec
jae
das
cmpsl
or
jl
dec
jnp
inc
mov
jb
cmpsb
aad
push
ss
fldenv
test
in
jmp
and
sbbl
insb
lcall
lods
cmp
mov
mov
sbb
shlb
sub
cs
xor
adc
je
scas
cs
xor
outsb
sub
pop
sub
pop
pop
or
jl
sbb
shlb
ss
in
add
push
test
push
jne
inc
adc
popa
lods
das
cltd
or
dec
mov
adc
inc
inc
imul
ds
inc
test
fadd
shlb
shll
dec
and
push
cli
jbe
dec
mov
loop
inc
sbb
cmp
pop
das
cmp
scas
out
outsl
imul
not
cmp
lcall
add
or
imul
push
nop
push
jmp
jl
mov
out
ss
dec
xchg
shlb
inc
push
sahf
mov
cmp
popa
sub
push
aas
outsl
dec
das
daa
xlat
cmp
push
movsb
sahf
or
insb
sub
in
xor
out
fs
sbb
mov
inc
push
cmp
mov
lret
je
stos
inc
ds
mov
pop
movsb
bound
shll
out
fsubs
and
mov
sbb
test
pushf
cmp
cmp
in
fidivl
push
movsb
inc
sub
push
mov
enter
jge
pop
loope
and
pop
test
mov
adc
jo
ljmp
push
popa
jno
sahf
push
loop
pop
push
cmp
aas
jge
push
nop
cmp
sub
add
and
pop
push
cmp
jge
mov
pop
nop
sbbb
mov
mov
aad
cmpsb
pop
mov
sbb
xchg
dec
add
xor
ds
scas
cmp
lret
and
jp
cli
in
inc
nop
aaa
fwait
pop
xor
jne
mov
jl
mov
mov
lods
ficoms
and
dec
rcrl
es
fs
pop
jmp
shlb
in
movsb
aas
inc
scas
jae
sub
repnz
sbb
jl
imulb
insb
and
lret
outsb
mov
scas
cmp
adc
push
sub
ja
ret
inc
jbe
xor
loopne
jmp
mov
out
scas
test
sbb
sbb
sbb
jl
cwtl
repnz
xor
clc
adc
mov
cmp
push
gs
xchg
xor
icebp
rolb
mov
loop
push
je
outsb
lcall
push
and
jnp
jbe
sub
or
outsb
mull
popa
stos
dec
sbb
dec
test
cmp
push
or
enter
xor
adc
inc
adcb
popf
mov
xor
pop
jo
cmp
cmp
das
jge
mov
add
jge
jp
pop
insb
into
rcrb
pop
cli
lods
call
jne
mov
mov
or
dec
paddsb
sbb
cmp
out
ret
sub
repz
scas
imul
xor
push
das
dec
scas
jp
decb
and
dec
dec
out
mov
mov
xchg
mov
outsb
xchg
xor
jbe
cmp
dec
lcall
in
dec
rcrb
xorb
push
cmp
loop
dec
and
dec
sbb
repz
adc
jns
sub
ljmp
push
pop
cmp
jae
dec
aas
cld
and
adc
leave
lret
mov
mov
cli
jae
mov
outsb
aad
xor
test
aad
leave
test
outsl
cmpsb
int
dec
sub
call
testb
scas
push
push
call
fmulp
testl
aaa
add
imul
cmp
sti
dec
test
bound
ja
dec
mov
xchg
xor
xor
xor
cmp
sbb
dec
push
and
mov
daa
js
adc
jl
sub
and
inc
into
hlt
pop
sbb
mov
jg
cwtl
subb
rcl
jns,pn
das
mov
test
testl
sbb
pop
bswap
jne
inc
fucomi
inc
pop
push
pop
cli
mov
mov
adc
xor
stos
les
xchg
out
push
pop
dec
cmp
inc
mov
fdivs
jl
testb
push
data16
push
mov
and
jo
insl
ds
mov
js
testl
and
cltd
or
test
jg
inc
into
sbb
jb
ret
push
mov
jbe
push
in
testb
cs
jns
dec
aad
or
imul
mov
mov
mov
test
push
sbb
xchg
cld
in
popf
push
sub
fwait
xor
insl
jnp
add
insl
dec
mov
lret
cmp
jns
cmp
push
inc
stos
mov
fwait
sbb
lret
sub
data16
aas
lcall
dec
jp
in
in
push
outsl
cmp
pop
jbe
ss
push
insb
pop
cwtd
cmp
in
dec
stos
sub
stc
xor
jp
out
push
sbb
cmp
adc
icebp
mov
adc
inc
pop
test
in
mov
imul
jno
arpl
dec
pushf
add
push
sbb
stos
out
push
daa
sub
lcall
jecxz
outsb
frstor
cmp
sub
mov
xor
out
aaa
inc
sbb
int
mov
adcb
shrb
xor
mov
out
push
testb
sub
and
in
scas
sete
mov
cmpl
out
ss
mov
movsb
push
xchg
jne
and
push
mov
loopne
in
stos
jbe
into
mov
xor
out
lods
xor
mov
clc
push
cmp
addl
inc
js
arpl
rclb
not
jnp,pt
stos
jns
xor
ja
dec
push
outsb
fldt
jo
add
pop
hlt
xor
fs
push
jae
iret
ss
jp
lods
lods
cmp
xor
push
pop
cmp
ljmp
jae
fidivrs
nop
and
sub
scas
clc
push
insb
jb
cli
jno
lds
and
inc
push
cmc
sub
test
inc
iret
pop
out
fs
fnstsw
jnp
rsqrtps
jo
shlb
xor
cld
leave
jp
cmp
cmpsb
pop
dec
cmpsb
push
sbb
and
jbe
mov
push
jl
fiaddl
pop
dec
sub
sbb
cmp
or
mov
pop
mov
aaa
mov
pop
mov
dec
dec
mov
cmp
jecxz
in
xchg
add
or
mov
add
mov
iret
int
sub
adc
xor
sbb
clc
dec
loope
lea
jns
xchg
inc
insb
push
mov
les
test
push
scas
lea
jp
cmp
daa
fwait
cmp
lcall
mov
shl
arpl
lret
push
das
outsb
jg
adc
mov
xchg
cltd
ss
xchg
and
aad
cwtl
call
sidtl
lcall
mov
iret
inc
adc
outsl
jecxz
inc
cmp
rorb
mov
and
std
inc
scas
clc
lds
sbb
jb
dec
push
xchg
ss
push
imul
xor
push
sub
cmp
jno
out
ja
inc
cmp
stc
addl
sti
and
pop
sub
mov
in
xor
xor
push
sub
lret
mov
xor
mov
imul
addr16
sub
dec
inc
dec
daa
dec
cmp
mov
xchg
jbe
xchg
and
add
shl
or
jmp
divl
cli
inc
scas
cmp
iret
lret
mov
xor
xchg
notb
inc
clc
and
nop
sarl
js
js
xchg
data16
fcoms
dec
xlat
pop
mov
insl
push
cmc
mov
test
mov
scas
adc
dec
cmp
dec
pop
pop
pop
and
mov
xor
xchg
push
pop
je
scas
ljmp
test
cmp
pop
mov
dec
dec
and
cmp
std
sub
pop
nop
pop
xchg
xor
pop
cmpsb
adc
cmpsb
test
pop
xor
pop
pop
insb
or
pop
movsb
jle
mov
mov
dec
stos
ja
psubq
fbstp
adc
xorb
ss
jnp
mov
cmp
fs
andnps
out
jbe
inc
in
cmp
scas
cmc
mov
pop
cmp
adc
das
stos
push
scas
fwait
ljmp
das
out
push
push
lret
xchg
sti
jns
inc
push
gs
stos
inc
scas
in
xor
divb
stc
imul
bound
ds
test
insl
sub
add
or
cs
jns
ljmp
scas
adc
stos
imul
pop
clc
cmp
push
ret
push
inc
fcomps
dec
dec
jge
iret
jnp
loop
nop
adc
shlb
lods
xchg
enter
movsb
pop
mov
lods
push
aaa
push
and
jb
cmp
mov
pop
rorl
push
out
shlb
jns
mov
xchg
out
daa
and
scas
lret
push
stos
faddl
xor
test
lods
popa
mov
cld
push
and
inc
mov
insb
pop
xor
push
mov
in
sub
xchg
or
xor
out
dec
pop
cmpb
jp
mov
inc
cmp
and
or
xor
adc
push
sbb
sub
push
xor
mov
subb
cmpsl
iret
pop
mov
push
leave
cmp
scas
fldl2t
scas
push
hlt
push
gs
aas
movsb
lahf
outsl
add
loopne
movsb
jbe
sub
das
fcmovne
lcall
xchg
popa
mov
out
in
les
mov
adc
sub
test
push
mov
jmp
cmp
int
lods
mov
mov
mov
jbe
sbb
scas
sub
cmpsb
iret
push
cmpsl
add
jns
xor
inc
dec
popf
push
sub
cli
stc
mov
mov
cmp
pop
out
pop
inc
cld
jae
sub
jno
fimuls
scas
mov
xor
sub
pop
test
push
sub
aaa
loope
cmp
mov
sahf
ret
and
xchg
cmp
push
cli
cmpsl
notb
lock
jb
pop
dec
outsb
daa
add
dec
sahf
xor
lret
js
inc
push
movsb
sub
call
nop
fstp
xor
xor
fs
cmp
sub
xor
test
add
popfw
aad
notb
aad
mov
pop
ret
cmp
pop
aaa
ljmp
int
dec
fwait
in
fldcw
fwait
cmpsl
xor
cmp
dec
xor
mov
mov
dec
adc
jge
mov
dec
int3
ret
jge
stc
aas
dec
sbb
pushf
cmc
ss
sahf
push
pushf
mov
inc
jg
fimull
iret
cmp
mov
jmp
xchg
and
and
insl
dec
xor
scas
mov
pop
xor
and
ja
lret
inc
movsl
mov
add
cmp
xlat
dec
jno
fisubs
dec
in
hlt
iret
jp
cmp
in
int
mov
xor
subl
pushf
cmp
or
push
test
cmp
clc
test
push
sbb
pushf
clc
or
test
aam
sub
jg
sub
sub
std
aad
jb
stos
mov
clc
jge
int3
cmpsl
in
nop
cmp
lods
pop
jg
pop
pop
push
mov
mov
stos
cmpl
push
add
adc
enter
mov
jmp
int
jl
enter
jp
stos
mov
punpckhdq
xor
mov
xor
fidivrs
sqrtps
adc
daa
inc
nop
push
call
push
repnz
mov
cmc
push
mov
and
cvttps2pi
imul
push
dec
jmp
ss
inc
sbb
sub
lcall
push
loop
pop
test
test
mov
pushf
mov
mov
push
push
iret
sub
xor
mov
test
jo
mov
mov
cmp
fwait
mov
pop
ss
movsl
insl
in
adc
test
rolb
in
int3
cmpsb
icebp
xor
mov
lock
popa
daa
bound
mov
pop
dec
push
inc
dec
lods
scas
push
jmp
lret
pushf
cmp
dec
mov
jp
inc
scas
jns
std
fcompl
sbb
cmpsl
add
jecxz
and
repnz
push
test
enter
sub
xor
aam
jns
pop
xor
lds
shr
inc
testb
push
pop
ds
xchg
rcll
inc
into
pusha
push
xchg
das
jns
dec
inc
jne
sub
mov
cmp
sbb
mov
push
pop
mov
mov
pushf
pop
and
xor
cs
sub
ja
jbe
mov
aad
subb
xor
xor
inc
cmpsb
pop
cmc
mov
jge
idivl
ss
fwait
push
adc
push
stos
rorl
lcall
cltd
ret
mov
inc
lretw
repz
jmp
and
or
pop
jns
pop
scas
dec
push
pop
rorl
and
lcall
fwait
cmp
push
outsl
jbe
ja
cmp
mov
js
les
jae
sub
out
xor
mov
adc
sti
dec
movb
mov
enter
sbb
push
pop
mov
sub
cmp
push
dec
lcall
jg
fbstp
data16
test
sub
in
aam
lods
shll
mov
cmp
rcll
sub
lcall
enter
dec
fwait
or
ret
sbbl
jl
repz
inc
adcb
push
cld
mov
sbb
call
push
jo
or
mov
cmpsb
cmpl
push
shll
bnd
adc
lds
insl
gs
and
daa
dec
sub
cmpsl
add
data16
push
mov
mov
push
pop
pop
mov
lock
cmpsb
and
dec
cmp
adc
or
int
sub
imul
jmp
pop
jne
aad
cmp
leave
jmp
test
add
outsb
inc
loope
addl
jbe
ljmp
dec
mov
pop
bound
mov
dec
stos
ss
into
pusha
inc
jge
imul
fnstcw
outsl
cmp
test
std
enter
test
xor
sbb
sub
mov
mov
inc
or
lods
inc
fwait
rorb
pop
jl
jns
push
inc
push
mov
nop
stos
in
pushf
inc
jo
repnz
dec
sub
cli
inc
orb
pop
push
cmp
mov
push
dec
std
sbb
sbb
adc
cmp
jns
jo
push
bound
daa
xchg
adc
test
push
dec
unpckhps
enter
ss
call
inc
push
leave
jae
pop
jo
in
mov
sub
and
jbe
push
ljmp
dec
outsb
leave
in
cmpsb
mov
sbb
pop
xor
repnz
push
and
push
aaa
jns
clc
out
out
or
cmp
ret
jmp
lret
dec
inc
and
sub
mov
loope
hlt
adcl
imul
paddusb
cmp
cwtl
repz
push
mov
mov
loop
out
mov
inc
sub
ss
fwait
inc
fnstsw
scas
xchg
mov
dec
dec
dec
fwait
sub
pop
jnp
push
dec
stos
push
ja
cmp
add
add
or
mov
nop
out
mov
daa
cmp
popa
popf
test
loop
lahf
out
push
jmp
sub
or
cwtl
stc
mov
cmp
mov
data16
push
pushf
cmp
test
sbb
dec
mov
cmp
in
sub
jecxz
xor
call
lock
fwait
cmp
into
or
sbb
cmp
popf
or
jb
cmp
pushf
sub
insb
sub
lcall
out
sbb
mov
mov
mov
sbb
aas
sub
roll
add
test
cmp
into
cmpsl
xor
xor
push
and
les
insb
jnp
cmpsb
jne
fisttps
jle
aaa
sub
ja
xor
xchg
aam
push
push
sub
push
push
push
jne
or
cmovns
shll
inc
push
idivl
shr
dec
aas
vmovdqa
mov
inc
iret
ret
imul
imul
add
mov
orl
mov
clc
xlat
and
loop
sbb
mov
jne
addr16
mov
daa
push
adc
aas
mov
loop
out
scas
ljmp
lods
sub
cmp
cmp
stos
sub
inc
xor
add
adc
xchg
sahf
mov
or
cld
mov
push
mov
adc
push
and
pop
push
jne
setbe
frstor
stos
jge
ja
pop
test
push
xchg
and
inc
dec
shll
out
imul
ds
adc
xchg
adc
xchg
je
test
nop
fisubs
popa
adc
outsb
sbb
fwait
pmuludq
xchg
jno
dec
add
mov
and
mov
and
cs
push
fistl
addb
out
xor
popa
mov
adc
xchg
dec
lods
ja
movsl
addr16
mov
push
mov
cmp
or
sub
mov
cmp
daa
jns
mov
testb
lods
mov
xchg
in
pop
shlb
js
add
and
sub
push
icebp
cmp
mov
inc
imul
and
push
sub
mov
push
ss
mov
mov
pop
lds
shll
jne
lahf
movsb
mov
movsb
dec
popf
push
jle
push
inc
mov
cwtl
sub
pop
xor
mov
and
fisubrl
mov
mov
out
ret
stos
ja
bound
rorb
scas
jg
adc
fidivrs
jne
jae
dec
sub
jbe
repnz
inc
jae
ja
andb
ret
jge
js
xchg
aaa
xchg
clc
imul
mov
adc
jle
scas
sbb
addb
sub
insb
cld
popf
stos
clc
adc
pop
pop
clc
ljmp
stc
jnp
xlat
ret
mov
scas
adc
test
push
sub
enter
ds
cs
mov
mov
orl
lock
icebp
sbb
push
jg
mov
mov
aam
scas
xchg
mov
test
dec
jbe
mov
rcll
push
scas
ja
prefetch
push
adc
push
repz
cmpsl
aam
sbb
mov
and
jae
lcall
outsl
adc
sbb
push
scas
lcall
dec
dec
inc
mov
test
imul
pop
pop
push
fs
daa
movd
pop
ljmp
stc
inc
push
mov
pop
cwtl
cmpsb
inc
mov
cs
icebp
xchg
fwait
mov
scas
repnz
int
cmp
mov
lret
aaa
add
sbb
das
mov
pop
out
aad
icebp
or
test
iret
inc
jg
jno
cltd
xchg
fcmovbe
fadds
pop
std
sahf
adc
lahf
jecxz
xor
inc
push
cmpsb
or
sbb
push
dec
adcl
pop
lret
ljmp
pop
sub
adc
loopne
movsb
lea
inc
aaa
stc
sub
in
inc
mov
push
cltd
xchg
jg
add
xor
dec
pcmpeqb
dec
add
push
enter
adc
mov
adc
push
cmp
push
inc
and
cmpsb
mov
and
push
imul
adc
test
cmp
mov
cmp
inc
adc
sub
scas
in
push
cmpsl
cmp
shll
orl
xchg
inc
push
arpl
loope
xor
or
out
lods
push
pushf
or
jns
push
rcrl
cmpsl
jo
aam
xorl
mov
xor
mov
subb
mov
out
push
and
test
add
mov
sbb
jne
and
pop
out
lcall
cld
xor
inc
sbb
pop
aas
fwait
cmp
mov
dec
adc
das
xchg
jne
fimull
add
and
adc
enter
adc
loop
mov
jecxz
inc
stos
out
lcall
mov
push
jns
jbe
or
rcl
push
ffreep
cmp
stos
sub
into
adc
pop
mov
loopne
lea
xor
scas
sahf
mov
jbe
xor
mov
cs
pop
ret
mov
into
push
jmp
pop
shll
fmuls
insl
not
sbb
cmp
adc
int
mov
jmp
out
sub
aad
adc
aad
sbb
das
pop
adcb
subl
popf
jb
inc
sub
jbe
dec
push
aad
push
insl
popa
mov
jae
add
punpckhwd
cmp
in
or
sarl
inc
ret
pop
add
movsb
mov
pushf
mov
xor
push
lds
cltd
inc
xchg
sub
lahf
or
or
jbe
mov
adc
jae
jo
xchg
lcall
push
push
inc
inc
mov
mov
das
sub
es
inc
pop
out
scas
dec
inc
mov
or
push
mov
scas
push
lods
cmp
loopne
cs
scas
inc
pop
xor
sub
xchg
aaa
xchg
scas
stos
jnp
adc
adc
pop
xchg
aaa
scas
lsl
int
scas
inc
dec
dec
cmpl
repnz
jge
je
or
add
shll
jle
lcall
out
jp
movsb
jle
xor
fidivrs
scas
fwait
sti
mov
push
cmp
adc
dec
xchg
cmpsl
mov
data16
sahf
mov
lret
pop
xchg
mov
mov
mov
push
fadds
dec
sbb
cmpsl
push
stos
outsb
mov
mov
cli
test
dec
incb
dec
test
ret
push
mov
mov
stos
and
or
hlt
mov
add
and
inc
mov
dec
pop
pop
js
sub
fmull
testb
adc
test
sbb
cmp
or
inc
cmp
fidivs
ja
and
andl
outsb
enter
aad
stc
adc
pcmpgtb
push
inc
sub
cmpsb
push
cmpsl
pusha
push
lret
push
cs
and
or
rorb
adc
dec
and
inc
insl
xor
into
xchg
lret
jmp
pushf
dec
or
ret
mov
daa
aad
mov
inc
jbe
adc
dec
jbe
push
mov
mov
pop
xor
and
sbb
lret
mov
hlt
rcrb
data16
scas
and
cli
cs
hlt
dec
adc
mov
das
scas
aas
jb
mov
xchg
scas
fsubs
aam
ja
adc
sbb
in
scas
push
call
cmc
dec
sahf
add
ja
mov
sbb
loope
stos
xchg
scas
sarl
mov
adc
sub
sti
cmc
xor
sub
or
out
out
pop
jo
mov
leave
leave
cwtl
mov
stos
pop
scas
jnp
fdivrs
mov
or
cmp
enter
ss
xor
xchg
lds
or
mov
or
mov
xchg
sub
cmp
jnp
fsubrl
xchg
subl
js
xor
outsb
dec
movsb
lret
outsb
gs
or
ret
in
inc
dec
jbe
jo
jecxz
adc
adc
ss
cmp
mov
pushf
add
push
lods
sbb
movsb
add
mov
ljmp
or
stc
rcr
xchg
cmp
iret
aaa
aaa
fsubr
push
sub
cmp
jge
iret
inc
mov
inc
repz
clc
repnz
scas
cs
cmp
sbb
into
sub
cmp
xor
imul
imul
sub
dec
or
jne
jo
inc
nop
jmp
aaa
xlat
pop
inc
scas
pop
mov
pop
iret
xchg
ficomps
pop
dec
test
mov
xor
stos
push
jg
push
xchg
jmp
arpl
fidivrs
cld
imul
xor
scas
cmp
inc
scas
cld
mov
sbb
push
xchg
decb
call
stos
jae
inc
push
lock
jle
sub
aaa
jb
inc
push
xlat
inc
bound
fnsaves
ja
aad
rclb
and
push
out
xor
cmp
cmpsl
lwpval
stos
push
mov
mov
and
xchg
cmp
test
mov
mov
arpl
add
adc
out
es
lret
lret
push
adc
mov
call
sarb
test
lea
ret
and
sub
inc
pop
and
aaa
push
push
pop
ds
mov
inc
push
mov
test
lret
outsb
std
push
test
dec
sbb
push
int3
push
pop
lea
scas
push
pop
xor
cmpsl
test
mov
cmp
mov
orb
push
js
mov
xor
test
push
popa
inc
outsl
sub
stos
rorl
ficomps
mov
mov
cmp
push
or
jle
inc
dec
xchg
movsb
sub
fwait
iret
xchg
cmp
cmc
push
jecxz
dec
out
mov
dec
jae
popa
cmp
pop
push
cmp
cmc
sbb
sbb
pusha
push
mov
test
mov
xor
sub
test
push
sarb
xor
dec
xor
and
adc
add
or
scas
inc
add
inc
add
cmc
mov
out
sahf
inc
sub
arpl
sub
mov
dec
pushf
xor
testb
xor
jle
jbe
aaa
outsb
nop
imul
cmp
cwtl
push
aaa
xor
popa
hlt
imul
push
and
out
inc
mov
jno
ja
add
popf
mov
and
dec
vpsubsb
cld
jb
xor
clc
aas
rorb
inc
dec
lret
xor
mov
insb
and
add
mov
cmpsb
rcl
aaa
push
negb
lcall
pushf
and
lds
pop
jne
in
cmpb
dec
inc
sub
std
sub
insb
pop
xor
push
int3
fdivrl
sub
imul
jno
xchg
out
js
mov
fcmovnbe
xor
cltd
xor
leave
jmp
xchg
lret
inc
mov
inc
add
jp
cmp
out
mov
stc
ret
outsb
dec
push
in
data16
js
repnz
adc
cs
ds
jg
dec
fisubrs
pop
cmp
sbb
pop
inc
push
lds
cmp
xchg
std
shr
cmp
mov
adc
hlt
inc
ret
sbbb
pop
insl
add
out
cmovg
cmp
idivl
inc
and
adc
fistps
mov
pop
cli
sbb
movsb
push
lret
divb
je
test
xrstor
dec
and
out
test
rclb
xor
rclb
sbbl
pop
and
testb
lock
ljmp
incl
xchg
cmp
lods
mov
xor
push
xor
sub
pop
jnp
push
sub
imul
or
call
push
cmp
jl
push
call
sub
inc
push
loope
jae
imul
xchg
mov
inc
je
insb
mov
aas
sub
push
mov
pop
daa
bound
push
cli
ljmp
in
pushf
adc
dec
mov
jbe
ja
test
xor
or
pop
xor
ds
push
test
das
jmp
ja
mov
cmp
sub
add
rcll
xor
stos
ss
filds
push
sub
add
xchg
addr16
mov
mov
mov
stos
insb
cmp
adc
cmp
push
mov
ss
add
jae
jno,pt
push
icebp
call
adc
mov
bound
dec
sub
test
rcrl
mov
mov
dec
ss
data16
push
push
mov
add
popa
in
jg
cmp
int
insl
dec
cmp
lret
adc
jbe
insl
popa
fs
call
rclb
sub
lahf
clc
jae
mov
ret
xor
cmc
out
pop
jno
shrb
jp
and
lea
cli
rorb
dec
and
cmp
push
sbbl
pop
out
sub
gs
sbb
scas
insb
imul
sub
mov
jo
mov
xchg
popa
add
push
adc
xchg
lret
jns
push
loope
jp
insl
inc
mov
ds
addb
mov
and
imul
xchg
xor
mov
xchg
call
imul
dec
jns,pn
cmc
ret
jp
jns
sub
in
aas
adc
mov
movb
mov
pushf
add
inc
dec
mov
sbb
lcall
icebp
inc
test
mov
cmp
jae
adc
pop
ss
inc
cmpsl
dec
adc
out
sub
xchg
rcll
paddb
fidivrl
hlt
in
aaa
in
insb
mov
sarb
call
mov
stos
xor
out
push
dec
cmc
fistl
rep
cs
into
ss
imul
mov
sahf
fidivrs
scas
cmp
lods
shrb
inc
sbb
in
insl
push
enter
sbb
mov
mov
mov
pop
jno
inc
ljmp
sub
or
call
cmp
std
lahf
push
in
clc
jno
and
mov
mov
cs
mov
cmp
data16
inc
scas
mov
ds
push
in
cmp
and
cmp
addl
mov
aad
les
in
xor
addr16
stc
xor
cld
js
xchg
leave
inc
std
mov
lret
lret
in
inc
cmpsb
jae
movsb
jb
push
popa
sub
inc
adc
aas
mov
cmpsb
notl
ret
and
jne
jno
adc
lret
jg
sub
and
cmp
aam
push
pop
shlb
jg
cmp
cmp
and
push
dec
sub
and
mov
in
jae
popa
sub
xor
out
push
rorb
xor
dec
mov
out
fmull
fstpt
pop
push
in
das
in
popa
testb
mov
out
and
and
inc
xchg
popa
cmc
push
repz
push
cmp
push
jge
lret
test
jl
mov
bound
out
outsl
inc
sub
mov
pop
dec
into
pop
dec
sub
push
pop
leave
fildl
testb
cmovp
pop
sbb
xor
xor
ljmp
loope
test
cltd
ja
inc
movsb
and
imul
int3
xor
in
or
mov
popa
addr16
jge,pt
test
out
repz
mov
inc
call
adc
sub
bound
sub
push
add
movsl
inc
sbb
test
mov
out
cs
aam
jge
push
testl
clc
addl
mov
sub
das
jg
sbb
jecxz
mov
stos
cmp
loop
mov
sbb
pop
aaa
cmpsb
dec
outsl
mov
repz
adc
pandn
sub
sub
sbb
xor
lret
shrb
mov
test
jmp
push
cmp
mov
int3
mov
int
dec
lret
das
mov
aas
out
xor
inc
int
shlb
testl
sti
lds
int
js
fidivrl
dec
jb
outsb
push
fidivrl
out
loopne
nop
mov
push
xor
mov
inc
adc
push
pop
imul
pop
ss
sub
xchg
push
mov
push
pop
lds
mov
jb
mov
imul
inc
sbb
mov
cmpsl
pop
xor
out
cmp
fwait
shll
pop
push
pop
dec
out
mov
or
call
or
shl
popa
mull
mov
add
pop
cli
aaa
and
mov
add
add
ds
fsubr
imul
stos
mov
lods
push
lret
nop
loop
ret
or
mov
out
lahf
jno
sti
dec
inc
jo
xchg
jb
shrb
pop
in
pop
push
dec
and
out
rcl
mov
int
ljmp
mov
in
addb
jmp
stos
push
imul
dec
js
and
ljmp
gs
dec
leave
jae
dec
sbb
loope
push
sub
in
pop
or
fidivrl
xor
sub
mov
scas
inc
jp
and
mov
lock
cmp
dec
inc
outsl
cmp
decb
call
sahf
inc
cmp
lods
cmp
in
call
push
das
das
stos
push
pop
mov
les
popa
in
fwait
xor
mov
sub
dec
inc
mov
mov
mov
cwtl
cmp
das
xor
lret
dec
nop
call
xor
lds
cli
push
leave
add
nop
daa
push
push
and
push
cmpsl
or
push
add
aam
lods
out
pop
mov
xor
sub
push
notb
push
addr16
arpl
jle
scas
jns
test
and
scas
cmp
sti
gs
rol
mov
and
mov
int3
and
out
add
popf
lret
mov
pop
mov
add
jae
scas
cmp
hlt
aad
out
add
in
push
lea
mov
jl
xchg
sub
sub
in
mov
mov
inc
cmp
xlat
jo
sbb
xchg
pop
imulb
pop
sbbb
clc
dec
dec
arpl
jo
pop
sub
lods
inc
sbb
sahf
insb
sbb
push
popa
pop
popf
inc
cmp
inc
adc
imul
xor
lahf
call
loopne
cs
mov
cltd
xchg
cmpsb
stc
jae
xchg
pop
loopne
aas
outsl
std
daa
mov
scas
test
pop
iret
cs
pop
pop
cmp
enter
enter
sbb
bound
movsl
sbb
cmc
push
in
cmp
frstor
mov
adc
inc
push
js
jle
or
push
push
add
pcmpeqd
dec
ja
adc
mov
push
sbb
stc
imul
mov
cmp
cmp
mov
mov
sbb
jle
mov
outsb
aas
jnp
jge
lock
aad
ss
insl
inc
test
dec
iret
rcll
outsb
das
in
insb
pop
fnstenv
lret
lahf
scas
pop
outsl
das
inc
mov
dec
push
mov
cmp
push
ljmp
negl
test
jl
inc
pop
outsb
stos
pop
mov
dec
jns
popf
aas
mov
loop
leave
mov
in
and
mov
sub
sub
xchg
hlt
out
sbb
je
add
push
inc
mov
cmp
fnstsw
loop
add
pop
add
arpl
xchg
and
cmp
ljmp
dec
mov
mov
xor
or
scas
sbb
js
push
shlb
clc
mov
addr16
in
fwait
push
fisubs
mov
sahf
loopne
scas
lcall
bound
pop
cwtl
pop
scas
pop
mov
repz
in
daa
test
aaa
das
mov
jns
cmp
dec
push
out
sbb
popa
jmp
pop
push
outsb
push
push
int3
cs
jl
xchg
inc
dec
cs
data16
inc
aaa
xchg
das
nop
inc
jle
stos
push
out
stos
jbe
enter
mov
fs
in
mov
fisubl
sub
push
mov
rcr
jb
mov
jg
push
imul
jns
adc
adc
or
dec
mov
inc
adc
hlt
ljmp
sbb
cmp
ja
dec
jnp
out
insb
sub
adc
jne
aad
dec
loop
lcall
scas
fwait
xor
mov
stos
xchg
das
push
cmpsb
jae
lods
rorl
clc
ret
pushf
dec
dec
test
or
or
mov
jns
xchg
fnstsw
sub
adc
cmpsl
inc
xor
jo
int
mov
aad
xor
pop
jnp
jle
popa
das
dec
repz
int3
adc
aaa
cmp
jbe
jmp
push
mov
pop
cli
adc
aas
dec
push
sub
add
mov
add
sub
jns
push
out
data16
add
cmp
dec
sbb
cmp
repnz
outsl
mov
cmc
jmp
and
mov
addl
jne
scas
mov
addr16
xor
pop
mov
inc
push
jmp
add
insb
add
pop
mov
dec
movsl
pop
inc
aad
mov
cmp
lods
ja
call
mov
js
inc
test
pop
lret
into
repz
fcmove
xor
pop
loop
cmp
test
les
lahf
mov
cmp
call
mov
ret
fistl
sub
pusha
clc
les
out
in
sbb
jae
push
ret
fs
cld
pusha
mov
divb
cmp
inc
fs
pushf
jae
pop
movl
push
out
test
ljmp
jb
sub
gs
scas
sub
fwait
cmp
cmp
or
sbb
inc
pop
ret
repz
pop
leave
xchg
fdivrs
outsl
cmp
sub
cmc
xor
sub
or
test
xor
mov
std
sbb
cmp
dec
mov
ljmp
cltd
bound
mov
mov
repnz
dec
xor
jno
and
dec
inc
cmp
testb
push
fidivl
adc
push
into
out
js
jge
push
push
and
xorl
das
les
dec
sub
cmpsb
mov
jnp
mov
sbb
jne
sahf
dec
daa
scas
das
cmp
rclb
les
andb
imul
jmp
ss
adc
js
mov
or
ror
rclb
scas
cs
lds
pusha
and
xor
mov
cmp
add
cmp
jno
push
cmc
repz
jp
mov
das
sti
xor
push
xor
or
pmaxub
pop
shlb
dec
and
xor
sbb
xchg
in
fcmovne
pop
rcrb
fimuls
cs
pop
into
cmp
xor
outsb
mov
lcall
mov
or
adc
cmpsl
or
lods
rcrb
rcrl
negl
mov
pop
sbb
lds
sub
fstl
dec
out
sahf
loopne
cmp
jbe
and
xor
ljmp
movsb
xchg
mov
and
sub
out
scas
daa
repnz
outsl
adc
insb
pop
hlt
inc
aad
and
mov
mov
shrd
jp
sub
rorl
push
adc
aas
pop
sti
jo
lods
sbb
aas
dec
paddq
fistps
sbb
aaa
lods
addr16
jge
icebp
sub
jl
push
xlat
js
ja
xor
lods
movsl
repnz
icebp
scas
fwait
ljmp
lods
das
or
enter
pop
out
sti
dec
fs
cmp
mov
shll
loope
cltd
mov
xor
das
lret
addr16
loopne
add
movsb
sub
aas
push
inc
imulb
sub
lret
aam
push
scas
out
fildll
stos
or
or
xor
aaa
arpl
dec
cs
stos
cltd
icebp
lret
xor
xor
out
scas
ja
incl
in
inc
jg
jbe
inc
test
cmp
pop
jge
xchg
scas
adc
dec
pop
jns
xor
outsl
das
leave
test
cmc
lret
repz
jp
push
dec
jns
fstpl
repz
sbb
sbb
dec
pop
jmp
mov
push
lahf
push
out
jge
xor
mov
push
mov
das
je
pop
js
push
adc
ds
dec
scas
in
movsl
xor
cmpsb
mov
outsl
aad
stos
ds
xchg
adc
loop
ljmp
mov
into
inc
jne
pusha
jae
imul
lods
fwait
out
ss
scas
xor
add
mov
add
add
and
or
shl
xor
push
adc
cmc
dec
sub
jecxz
das
pop
psubb
fwait
mov
je
sbb
sbb
cltd
out
das
sub
xor
das
pop
dec
mov
cmpsb
popf
mov
mov
jmp
mov
sub
mov
pop
fstpt
inc
ja
ret
inc
fidivl
test
push
xlat
mov
push
stos
icebp
xor
nop
cmp
adc
fisubrl
clc
push
cmp
and
cmpl
xstore-rng
cmpsl
inc
dec
jbe
adc
pop
xchg
or
mov
leave
out
jge
ret
or
sub
sub
push
mov
mov
cmovno
mov
fstps
dec
ret
ljmp
pusha
jecxz
arpl
insl
or
int3
pop
iret
inc
mov
sbb
rcll
jl
mov
or
imul
ljmp
shll
out
lahf
sub
push
test
pop
jae
je
sbb
sub
jnp
outsb
out
test
out
xorb
mov
movsb
push
leave
cmc
push
push
call
out
mov
mov
jo
jge
push
jp
sub
add
es
push
in
shlb
aaa
mov
or
lods
enter
xor
enter
jno
xchg
push
cmc
loopne
divb
mov
push
sahf
addr16
lret
repnz
jge
data16
push
inc
lret
arpl
cmp
pop
mov
inc
aas
lds
cld
cmc
push
dec
pop
and
mov
cmp
sub
pushf
mov
adc
sbb
lea
mov
push
outsb
aam
cmp
and
test
push
ss
das
cmp
icebp
cmp
mov
mov
mov
ljmp
adc
mov
and
pop
or
sub
and
out
mov
adc
jl
cmp
or
loopne
lcall
sti
loopne
jns
mov
cli
adc
add
and
mov
mov
push
lea
sub
cmp
mov
lds
and
lock
push
sub
popa
mov
enter
cmpsl
fwait
xor
mov
adc
aad
or
les
and
sub
sub
pop
outsl
adc
repnz
fistps
int
mov
mov
movsl
jg
das
lcall
xchg
pop
push
popa
loopne
adc
stos
loop
aad
dec
dec
repnz
dec
jns
inc
psubb
push
mov
sub
pop
mov
leave
inc
fsubrl
mov
imul
out
xor
cmp
invd
shl
push
mov
sub
mov
or
dec
test
cltd
sub
sub
out
jle
dec
jl
xchg
jg
jno
lret
imul
and
mov
dec
jbe
outsb
jns
incl
out
cmpsl
cs
xor
mov
or
pop
ret
add
dec
pop
sbb
mov
out
sub
xchg
js
sbb
inc
or
daa
pop
loopne
in
push
xor
xchg
adc
sub
cmp
pop
rclb
aas
test
movb
mov
stos
inc
jns
in
xor
mov
mov
mov
push
lcall
jmp
enter
adc
js
or
sbb
cwtl
inc
xor
outsl
adc
js
rorb
push
in
pushf
pop
js
push
xor
sarl
push
jnp
and
sahf
and
aam
inc
jne
mov
fisubs
sbb
repnz
mov
pop
setnp
mov
jmp
jl
je
int3
sti
ss
add
setno
test
jp
cs
ret
sub
rorb
push
mov
fisubl
fidivrs
outsl
push
adc
fsubrl
sub
or
mov
cmp
jp
dec
inc
cmpsb
bound
cwtl
pop
fwait
cmp
into
outsb
out
xor
fsubl
push
push
in
xor
and
imul
xor
push
sub
jbe
shlb
cld
push
ret
dec
cmp
jnp
cld
fstpl
cs
in
inc
jns
les
dec
or
prefetcht1
xor
mov
push
dec
cmp
shl
ret
mov
jbe
mov
and
mov
push
mov
mull
xor
add
fcmove
sub
jp
pop
pop
popa
dec
and
xor
mov
add
fcmovb
jg
cmp
dec
jmp
sub
lret
clc
mov
fidivs
ret
test
dec
jmp
les
aas
push
nop
js
in
lret
sub
push
mov
push
xor
mov
dec
inc
xor
push
std
iret
xchg
sub
stc
in
cmp
imul
nop
jo
sbb
jno
mov
das
push
sahf
aaa
lds
cmc
push
jns
movsb
out
fwait
xor
pop
mov
push
sbb
fsubrl
mov
xor
dec
dec
push
jp
add
inc
mov
xor
gs
sub
fldenv
mov
in
push
xchg
sub
mov
pop
xor
mov
jnp
sub
mov
inc
mov
jge
mov
aaa
adc
mov
cli
fistpll
pop
jb,pt
fs
mov
mov
inc
cld
or
in
add
test
loop
call
mov
shrl
xor
push
sub
in
xlat
stos
iret
mov
cmp
das
mov
push
into
movsb
xor
mov
aaa
jno
jle
sbb
lcall
xchg
lret
inc
mov
ss
repnz
sahf
mov
sub
cmpsb
sbb
daa
pop
sub
ss
sub
pop
das
stos
add
jecxz
adc
andl
pusha
dec
enter
clc
jns
lock
dec
fcomp
jle
mov
popf
push
fists
sbb
dec
emms
cmpl
mulb
xchg
cmpsl
das
jge
pop
cmp
jg
pop
into
data16
inc
loopne
cmpsl
mov
cmpsb
int3
scas
scas
nop
sub
adcb
xchg
mov
xchg
adc
cmp
shll
and
xchg
daa
xor
pop
mov
adc
sub
push
cmp
sbb
pop
pop
and
bnd
mov
inc
push
jno
pop
aaa
cmp
inc
adc
int3
inc
adc
inc
aaa
push
xchg
aas
test
and
mov
orb
mov
sub
push
mov
or
ds
int3
push
ja
daa
lret
push
test
inc
movsl
push
imul
cmpsl
push
and
cmp
dec
add
push
adc
into
mov
mov
popf
out
lret
nop
or
ds
push
adc
shrb
scas
fdivs
outsl
jns
mov
inc
sbb
adc
fcoml
jne
fsubl
pop
cmp
xchg
xor
xor
push
xor
jae
cld
daa
dec
xor
pop
lds
xlat
inc
aam
movsb
push
daa
inc
dec
or
lret
mov
dec
nopl
les
fwait
cli
arpl
fcomi
xorl
xor
sahf
inc
movsb
lds
mov
dec
sub
repnz
fcomps
or
push
jno
lods
mov
mov
mov
nop
das
js
or
push
sarb
push
gs
jo
push
jge
int3
cmp
fcompl
push
out
add
ss
rcll
mov
out
ss
mov
sti
mov
dec
sub
cmp
loopne
push
mov
or
test
cmp
clc
jge
sub
push
push
cwtl
pop
inc
ljmp
mov
sub
orl
cmp
dec
push
mov
mov
mov
test
movl
cli
dec
sti
sbb
ret
mov
push
stos
stos
leave
adc
push
mov
or
mov
leave
and
out
rorl
mov
lds
imul
xor
and
xchg
sub
jecxz,pn
jne
sub
dec
aad
push
mov
loop
leave
mov
cmp
outsl
stos
pop
jns
push
loop
je
data16
in
repnz
inc
pop
sub
cwtl
movsb
rol
push
jns
mov
push
xor
dec
sti
das
ja
fcom
adc
jg
push
lret
loope
les
sbb
mov
push
popa
call
repz
mov
jge
add
inc
ds
neg
jbe
das
sub
sub
pop
scas
mov
inc
clc
pop
and
test
ljmp
fucomi
and
inc
jb
fsubr
jp
mov
xor
fwait
add
test
jne
std
cmpsl
mov
cs
jae
sub
leave
bound
jnp
and
jae
sub
stc
jl
xlat
hlt
sub
mov
mov
movsl
ss
mov
mov
or
out
push
xor
aaa
xor
dec
movsl
xor
mov
mov
icebp
xor
xorb
push
fwait
addl
and
mov
and
pop
push
daa
popa
mov
ds
nop
dec
arpl
or
mov
jmp
xor
mov
jae
in
andb
mov
loope
xor
pop
pop
cmpsl
in
je
in
pushf
xor
fimull
cmp
xchg
cmc
sub
out
mov
bndstx
movsb
sub
enter
shrl
repnz
or
mov
dec
push
sahf
ud0
pusha
adc
add
push
jns
aaa
inc
or
movsb
inc
pusha
addb
aas
or
or
mov
jnp
out
adc
jb
add
xor
sbb
jo
decb
dec
pop
stos
inc
cmp
push
stos
ljmp
dec
jge
daa
xor
xchg
push
xchg
ljmp
add
add
lret
pusha
imul
push
lret
pusha
jecxz
xor
in
out
push
lock
xorb
xchg
inc
sub
cmp
mov
sub
insb
mov
cmc
inc
les
sarl
ss
sub
aad
sub
mov
mov
fisubs
roll
xor
sub
test
mov
mul
in
lods
cmpsb
pop
push
loopne
xor
push
mov
dec
and
mov
iret
add
or
mov
lret
sti
in
aas
andl
and
mov
sub
mov
and
jb
ret
mov
aam
shrb
push
jnp
mov
cmp
push
jns
in
addr16
mov
sub
aad
sbb
xchg
lret
fidivrs
cmp
xor
mov
ss
mov
xchg
cmpsb
mov
enter
data16
decl
pop
and
pop
mov
test
cld
dec
mov
push
fisttpl
xchg
cmc
test
add
and
push
jb
ficomps
out
sub
aaa
pop
jae
mov
scas
adc
sub
imul
movntq
pop
inc
test
sbb
stc
jg
or
out
xchg
and
outsb
dec
mov
pop
lret
dec
mov
cld
adc
xor
ja
dec
mov
lcall
and
es
ss
mov
out
jbe
dec
imul
xor
shr
add
das
sti
dec
pop
mov
outsl
shll
int3
clc
and
mov
jbe
pop
push
inc
cs
jno
mov
data16
xor
push
mov
lcall
lods
loope
sbb
jbe
and
or
rolb
add
les
pop
add
scas
shl
add
inc
mov
sti
iret
sarl
aaa
pop
cmp
pushf
jle
aam
jl
mov
out
addr16
cmp
pop
xor
insl
xor
inc
xor
cmp
lds
cmp
sbb
in
cmp
mov
and
jns
pop
pop
jg
das
orl
xor
jecxz
cmp
push
cltd
lcall
jb
jg
or
push
incl
aas
out
aas
mov
push
cmpsl
nop
cmp
fwait
aas
dec
nop
sub
push
fwait
imul
leave
add
xchg
stos
subps
dec
jne
sub
jle
sbb
sub
jbe
adc
and
mov
push
cmp
mov
dec
sub
mov
inc
gs
addr16
adcb
mov
fidivrl
mov
movsl
cmpsl
popf
push
cmp
mov
orl
clc
sbb
sbb
push
push
push
mov
adc
adc
jge
pop
pushf
sti
cltd
test
add
push
and
cmp
push
lock
and
fildll
int
ljmp
cmp
inc
xor
xchg
into
adc
mov
outsb
sub
xor
shlb
and
xor
mov
sbb
aas
jo
fildll
adc
aas
stos
cltd
dec
popf
jle
cltd
mov
imul
mov
bound
pop
push
push
sub
pop
cmp
cld
dec
in
cmp
adc
jg
push
das
jb
test
push
repnz
jne
rclb
fisubs
mov
jne
mov
sbb
sub
jge
nop
enter
dec
shll
loopne
lods
mov
sub
xchg
mov
imul
jo
and
sub
mov
pop
pop
fs
inc
mov
xchg
popa
cld
dec
mov
call
mov
jmp
mov
das
mov
out
rcll
dec
inc
shlb
mov
movsb
and
cltd
test
lods
fcmovu
xchg
lret
pusha
in
data16
xor
iret
enter
ds
sbb
cwtl
cs
or
iret
decl
mov
mov
hlt
adc
in
push
dec
mov
fldcw
adc
push
cmp
jge
je
jg
adc
call
or
sub
pop
add
std
cmp
push
jp
in
in
mov
mov
in
push
sub
pop
push
mov
mov
orb
cmp
add
mov
into
or
imul
sbb
add
pop
cmp
or
call
mov
mov
or
hlt
jnp
mov
pusha
sub
push
test
jl
imulb
push
out
xchg
mov
js
cmp
fs
push
and
pop
sahf
cmc
decb
mov
mov
adc
jae
adc
fwait
push
shlb
fsubr
mov
dec
xchg
outsb
lret
outsl
sahf
jge
ret
xor
cmovs
push
push
nop
adc
jo
cmp
lods
lods
dec
pop
dec
sub
dec
lods
sbb
pop
jp
inc
adc
pop
mov
lret
xor
fwait
adc
outsl
adc
scas
sub
add
or
addb
shlb
jne
ljmp
bound
nop
sbb
xchg
xor
jecxz
sbb
scas
mov
in
rorb
mov
inc
in
push
popa
lods
jp
cli
cmp
je
arpl
pushf
fwait
adc
subb
lahf
sub
popf
dec
pop
stos
jnp
mov
into
xor
sub
lcall
fsubrl
std
in
data16
dec
rclb
jmp
repz
out
in
adc
sub
cli
or
nop
popl
inc
push
jnp
sbb
aam
cmp
movl
movsl
fadds
inc
iret
enter
scas
aas
cli
and
mov
dec
inc
imul
decl
sub
sub
inc
push
scas
jge
es
dec
lcall
sar
in
inc
push
lods
mov
jp
add
jno
cmp
iret
dec
push
adc
lods
daa
push
nop
push
ja
dec
sbb
mov
stc
idivb
stos
aas
addps
cmp
je
sbb
dec
jns
cs
rcrl
mov
out
bound
cmp
std
cmp
sub
out
inc
add
das
push
mov
push
inc
push
xchg
loopne,pn
sub
mov
dec
pop
insb
cs
dec
push
outsb
arpl
sub
daa
or
stc
mov
xchg
mov
mov
xchg
add
inc
xchg
loope
dec
xchg
cmp
and
pusha
mov
ss
outsl
imul
loopne
inc
js
lea
jns
pushf
sub
mov
cmp
daa
mov
push
out
aaa
rcrl
xchg
push
es
jmp
stos
icebp
inc
xlat
cmpsb
xchg
out
dec
pop
or
shll
cmpsl
mov
in
scas
xor
sbb
mov
mov
push
gs
pop
out
or
or
lea
lods
inc
insl
int3
out
int
into
inc
dec
iret
pop
jbe
mov
mov
addr16
imul
int3
ret
add
mov
mov
xor
pop
daa
push
in
cmp
ss
jbe
push
bound
dec
pop
xchg
ret
jno
xor
aaa
mov
es
out
xor
xchg
rcr
outsl
push
data16
fdivl
insl
adc
adc
lret
dec
push
lock
add
push
cmp
movsb
aad
push
int
mov
or
xchg
push
js
inc
mov
sub
dec
push
mov
dec
mov
std
sbb
fstpt
test
shlb
jecxz
xor
inc
pop
daa
js
jle
xor
mov
iret
xchg
cmp
sub
fsubrs
dec
mov
xchg
xchg
test
mov
les
test
loop
jae
mov
add
test
movb
dec
mov
pop
pop
das
scas
ss
ss
imul
xor
mov
mov
pop
cld
jno
xchg
cs
xchg
push
push
ss
cs
mov
or
xchg
mov
ss
inc
xor
sub
iret
pop
jno
or
out
mov
lahf
mov
xor
mov
push
pusha
outsb
divb
pop
push
je
jle
daa
mov
dec
cmp
fisubrs
dec
aas
xchg
ss
cmc
mov
jnp
test
fisubrl
lret
dec
sbb
pop
cmp
das
arpl
cs
scas
xor
aaa
lods
pop
shrl
inc
pusha
aas
pop
js
dec
dec
push
pop
scas
dec
jbe
mov
filds
cs
jg
sub
aaa
cmp
mulb
in
inc
mov
push
pop
andl
sbb
mov
mov
xlat
push
mov
xor
test
scas
cmpsl
inc
sahf
pop
xor
ss
sub
push
inc
xchg
jae
and
xchg
je
or
mov
xor
push
hlt
dec
mov
stos
dec
inc
outsl
hlt
das
xchg
lea
cmp
pusha
je
mov
push
push
dec
sub
out
mov
ss
das
mov
pop
xchg
enter
pop
ss
xlat
xlat
ss
aaa
cmpsl
sahf
aaa
mov
sub
dec
cmp
sub
mov
cmp
cmp
pop
pop
call
scas
mov
xor
mov
and
imul
inc
andb
sub
daa
add
fidivrs
and
mov
mov
clc
pop
lods
call
data16
addb
pop
cwtl
mov
xchg
jne
xchg
divl
push
cld
scas
cmp
test
push
fisubrl
jp
std
jnp
stos
lea
or
or
bound
mov
rol
mov
push
ljmp
cmp
out
das
cs
pop
sub
aad
fistpl
fidivs
fwait
or
call
mov
ja
lret
aaa
and
mov
test
into
imul
mov
imul
pop
fsts
mov
push
pop
jl
cmpsb
aam
in
into
jmp
xor
nop
cmpsb
pop
movsl
jmp
vmwrite
cmpsb
mov
das
add
hlt
mov
hlt
adc
outsb
dec
add
or
xor
icebp
pop
pop
repnz
out
in
into
pop
pop
insb
inc
push
and
shlb
aas
dec
imul
dec
cs
mov
lcall
mov
xchg
test
mov
push
inc
push
sub
popf
mov
mov
enter
insl
and
daa
or
push
out
rcll
imul
inc
lahf
push
sbb
jg
sbb
push
and
jle
inc
lods
addl
jp
fists
inc
dec
arpl
xchg
cmpsb
and
inc
cmpsb
mov
cmp
aaa
xchg
dec
push
cmpsb
xchg
out
sbb
jo
out
mov
jge
jmp
loop
data16
ret
ljmp
js
push
xor
sub
cmc
aaa
enter
arpl
jge
cli
sub
leave
add
cmpsb
pop
pop
dec
cmp
sub
leave
nop
dec
out
insb
cmp
incb
pop
inc
push
sti
data16
inc
ss
sub
pop
inc
sub
mov
mov
test
lds
out
xchg
push
loopne
push
mov
inc
xchg
ficoms
sbb
mov
out
inc
fs
dec
dec
aad
mov
fs
xor
sub
shll
push
mov
xchg
cmpsb
mov
shlb
push
push
mov
or
xchg
sub
pop
mov
pop
mov
mov
jmp
ds
cmp
fmull
pushf
mov
fwait
jbe
dec
fcmovbe
xorl
push
aaa
jmp
das
std
mov
jo
mov
dec
das
lcall
xchg
mov
sub
pop
cmpsb
lahf
insb
nop
pop
insl
jg
dec
das
lahf
push
or
jp
and
fsubrs
jge
stos
push
cwtl
fisubl
in
aaa
jb
cs
subb
jp
sarb
out
das
dec
mov
cmp
push
pop
jb
ds
das
jmp
push
dec
pop
push
mov
outsl
leave
das
push
or
pushf
cs
mov
sahf
sbb
push
out
mov
cs
dec
popa
push
xor
incl
daa
out
jns
imul
pop
adcb
mov
cwtl
xchg
cltd
mov
ss
ja
mov
lahf
ret
push
xchg
mov
lea
pop
xchg
xchg
sbb
ljmp
mov
das
out
stos
fsubs
xchg
xor
das
add
xor
ss
pop
mov
repnz
lcall
xchg
pop
mov
xchg
jp,pn
jne
or
sub
je
inc
cmpsb
ret
mov
cmp
pop
ds
pop
pop
cmp
call
sub
aam
hlt
adc
xchg
outsl
pop
sub
ss
xchg
xchg
lcall
mov
outsb
mov
lcall
jg
inc
pop
je
rorl
lcall
fwait
cwtl
in
jle
jge
mov
mov
ja
dec
or
js
mov
add
jg
loopne
fsubrs
pop
xchg
aad
pop
popa
xchg
adc
mov
pop
push
lock
jg
aas
fidivl
pop
inc
jle
dec
pop
mov
or
ds
mov
push
mov
lock
add
push
xchg
dec
daa
xchg
test
lea
push
aad
pop
iret
pop
jbe
jnp
push
push
push
pop
mov
inc
and
mov
jo
inc
push
ja
call
test
popa
nop
dec
dec
pop
jl
dec
jae
pop
call
jl
add
rcrl
push
and
stc
pop
sub
in
xor
imul
sti
dec
pusha
int3
ss
sub
lret
or
pop
pushl
xchg
les
popf
add
mov
pop
addr16
sub
lock
cmp
outsl
adc
movsb
and
xor
dec
outsl
int
scas
push
lcall
cld
jle
push
dec
inc
test
mov
roll
cmpsb
ds
inc
lods
dec
pop
xor
ss
dec
mov
fildl
mov
mov
mov
out
mov
cmp
inc
sarb
imul
mov
fdivrs
push
xor
pop
sbb
shlb
sub
jbe
push
nop
cmpb
pop
mov
jp
xchg
push
lea
jae
gs
push
lea
sub
push
inc
cmp
sahf
test
stos
imul
lods
dec
push
jnp
imul
imul
sbb
push
sub
into
mov
in
es
cmp
sbb
sarb
dec
cwtl
pop
out
movsl
or
lahf
jns
xchg
sub
cltd
and
and
cwtl
push
sbb
jb
sahf
enter
push
jns
mov
mov
outsb
jge
push
push
adc
adc
jb
cld
scas
ret
aaa
jo
jle
outsl
push
jae
addr16
xchg
push
pop
xchg
popa
mov
das
scas
and
repz
aaa
inc
push
mov
cmc
cmp
mov
dec
mov
repnz
icebp
cmp
leave
daa
sub
xor
ret
or
ja
shll
mov
inc
mov
sub
dec
insl
pop
xor
aaa
lds
gs
imul
scas
daa
pop
out
mov
jae
jnp
dec
adc
sub
mov
test
push
xor
cmp
pusha
mov
jo
lds
stos
stos
add
jbe
inc
and
xchg
ds
push
and
out
insb
cmpsl
lock
lahf
jns
cmpl
in
aam
sbb
arpl
and
sub
lahf
xor
push
push
push
cs
push
jmp
das
sub
push
jge
xor
leave
pop
inc
scas
ret
pop
insl
mov
add
cli
cld
andl
test
push
jge
push
add
jge
in
sub
scas
sub
mov
jb
pop
push
xchg
or
xchg
bound
stos
mov
jl
shll
mov
test
daa
imul
fildl
stos
test
jge
sub
imull
fs
xor
ss
das
add
pop
lcall
add
jne
sbb
rcrb
jbe
mov
scas
push
stos
inc
scas
je
shr
sbbb
xchg
je
aad
pop
movsb
jbe
pop
inc
dec
adc
sbb
scas
lock
stc
or
or
dec
test
fisubrl
mov
xchg
lea
dec
mov
aam
test
je
inc
popf
and
or
out
push
out
call
push
sub
out
mov
push
jl
or
jns
jae
les
sub
shll
adc
xchg
ss
imul
test
adc
negb
mov
dec
fwait
xor
mov
jns
js
push
push
cmp
mov
adc
xorl
push
sub
cmp
sbb
lock
cmp
loopew
xor
andl
adc
sbb
divb
pop
jl
dec
cld
into
sbb
dec
adc
stc
sbb
ja
test
lret
nop
push
xor
loope
cmpsl
in
jmp
adc
gs
add
lret
xchg
cmpsl
enter
test
das
adc
arpl
jg
add
insb
out
sub
jge
adc
pop
das
ds
xor
xor
mov
add
jnp
js
push
adc
or
jno
loopne
mov
aas
inc
call
and
sub
pop
outsb
insl
out
in
jns
jp
sbb
test
std
in
add
call
fadd
pop
mulb
hlt
mov
adc
and
pop
jmp
sub
popa
jmp
subl
push
int
test
sbb
and
rorb
jne
and
push
out
jecxz
in
bound
js
xchg
or
nop
sub
push
or
movsb
mov
xlat
jb
jo
push
mov
movsb
sub
in
push
mov
in
pop
push
jnp
icebp
sub
out
aas
je
or
outsl
cmc
orl
mov
js
sub
cwtd
mov
sub
mov
push
stos
and
rsqrtps
cmp
outsl
xchg
pusha
sarb
dec
sub
mov
sub
inc
push
adc
adcb
push
clc
adc
mov
adc
outsl
loop
or
enter
fwait
pcmpeqw
out
movsb
lret
out
cmp
jnp
cmp
dec
es
sub
loopne
repz
xor
cmp
and
ss
mov
dec
fdivrs
cwtl
test
mov
or
xor
adc
mov
cmpsb
div
push
xlat
pop
pop
xor
dec
mov
mov
mov
int3
fs
jmp
xor
adc
cmc
mov
inc
adc
sub
fistpll
pop
pop
mov
fcoms
jbe
cmp
push
jo
push
leave
push
adc
jge
mov
pop
lods
jecxz
andl
inc
jl
cld
pop
cmp
xchg
icebp
inc
ficompl
lds
push
and
loope
xchg
mov
sub
lret
add
mov
daa
xchg
ss
mov
pop
jl
daa
pop
mov
movsb
mov
sti
adc
mov
jge
jp
stos
mov
movsl
js
jb
fidivrl
pusha
imul
xor
mov
and
dec
cmp
fadds
mov
ret
ds
test
pop
movsb
dec
cmp
daa
je
and
lret
mov
pop
cwtl
mov
clc
loopne
rcr
mov
imul
mov
ret
mov
out
ret
cmc
cmp
enter
cs
lret
daa
pop
daa
fwait
sub
cwtl
in
jl
outsb
cltd
dec
sets
shlb
add
lock
jno
cmp
mov
xor
popa
inc
push
jl
stos
jle
push
or
fstps
nop
jp
fisubl
jbe
imul
and
cli
inc
mov
push
insl
scas
imul
adc
inc
mov
ret
cmp
clc
popl
shll
jp
shlb
xor
or
jmp
mov
fwait
adc
das
or
cltd
mov
scas
jmp
lcall
cli
pop
scas
test
push
sub
fists
or
sub
sbb
and
sub
bound
ja
data16
adc
fcomi
aaa
inc
nop
cmp
mov
jne
push
cwtl
xor
mov
je
push
out
xor
mov
xchg
bound
outsb
repnz
out
movsb
sbbb
shl
adc
lock
push
test
cli
data16
mov
xchg
daa
negl
xchg
push
insb
negb
gs
mov
cld
shl
add
mov
dec
jg
sub
push
shlb
dec
xchg
inc
movswl
inc
aaa
xor
dec
mov
sahf
adc
xor
mov
call
sub
add
outsb
incl
iret
xor
pushf
sub
xchg
popa
and
xor
out
scas
inc
mov
mov
popa
jg
popf
push
out
ljmp
sub
jle
popf
ret
int
sbb
mov
sub
xchg
cwtl
imull
orl
popf
test
in
dec
movsl
mov
mov
jno
pop
mov
int3
loopne
xor
int
out
ja
pop
dec
pop
dec
out
leave
inc
ljmp
dec
dec
sub
xor
cmp
push
xor
das
push
leave
add
push
inc
ds
mov
adc
rorb
pop
sub
cmp
mov
scas
sbb
and
push
jg
lret
sbb
ss
popf
popf
sbbb
dec
cmp
ss
push
cmpsl
jge
mov
ret
xchg
mov
sbbl
sub
jae
cs
loope
add
mov
pop
nop
aas
mov
or
jl
sub
cli
add
stos
mov
pop
xchg
sub
pop
adc
cmc
push
dec
push
xor
jbe
mov
xchg
daa
xor
mov
mov
xchg
dec
mov
add
and
dec
push
ss
in
outsl
jnp
mov
neg
mov
xchg
mov
xor
popa
sbb
pop
movsl
ljmp
adc
test
sub
js
mov
push
aaa
add
mov
and
inc
mov
pop
test
or
out
mov
push
mov
test
dec
out
test
call
pop
pop
push
insb
lods
fsubrp
mov
push
lret
cmp
jge
jne
notl
sub
in
loopne
lock
les
pusha
je
push
adc
xchg
sarl
and
xchg
orb
push
sbb
mov
cmp
xor
dec
cmp
add
lahf
mov
adc
rcll
nop
sub
cmp
or
dec
xchg
lods
xchg
adc
jo
pusha
clc
add
pop
mov
outsb
cmp
xor
mov
shll
imul
cmp
ret
lret
pop
mov
call
jb
lods
push
mull
subb
xor
pushf
push
ds
adc
push
xor
cmpsl
push
push
cs
sub
in
dec
pop
test
mov
testl
shlb
cmp
or
dec
jo
insl
ljmp
sub
fists
cld
insb
dec
cli
xor
addr16
sub
jo
dec
aam
js
cmp
outsb
shrl
dec
and
cli
ja
fistpl
pop
push
xor
pop
ss
roll
cmp
fs
add
sub
lock
mov
mov
mov
dec
das
fldcw
gs
jnp
mov
lea
push
pushf
stos
jecxz
jmp
inc
or
ja
sub
imul
xchg
mov
push
ret
dec
cmc
and
stos
test
mov
ds
out
fimuls
cmp
and
add
and
xor
cmp
aam
xchg
cltd
mov
out
test
and
or
stos
dec
cltd
jae
js
jnp
iret
mov
and
std
test
shr
lcall
call
jo
dec
push
cmp
int3
push
xor
xchg
or
aaa
pop
lds
lods
jns
mov
adc
fildl
mov
cld
stos
test
cmpsl
mov
dec
push
mov
das
leave
mov
sub
inc
rcrb
test
inc
jnp
push
jb
mov
xor
sbb
maskmovq
notl
cmp
cltd
push
dec
xchg
daa
xor
push
sub
outsb
shlb
inc
and
inc
mov
cmc
pop
pop
push
test
dec
insb
jecxz
lret
lea
popa
cmp
mov
cmp
lret
aad
dec
mov
repz
push
dec
je
pushf
dec
cs
push
iret
and
inc
loop
sub
subl
clc
pop
xor
ljmp
sbb
mov
out
outsb
or
xor
imul
shrb
push
inc
rcrl
movsl
ss
push
push
lret
mov
jo
xor
sbb
cmp
cmp
jle
loope
and
data16
jns
fadds
push
inc
call
pop
outsl
dec
or
out
cmp
sahf
orb
imul
outsl
pusha
outsb
call
pop
adcl
inc
aad
mov
jae
rorb
cmp
mov
clc
mov
mov
jne
mov
loope
dec
stc
xor
out
sar
movl
inc
adc
mov
pusha
jle
fnstenv
pop
mov
popf
shrl
mov
arpl
push
pop
insw
cmp
xor
push
cmp
dec
jge
push
inc
in
ja
jne
inc
decb
push
ret
mov
xor
mov
cmp
lods
mov
movsb
inc
cmpsl
jge
sbb
mov
mov
lret
sbb
sub
lcall
pop
mov
sub
push
insl
fsubs
pop
pop
push
add
jns
mov
imul
pop
bound
push
cld
push
ss
scas
shrl
stos
divb
jl
movsb
rcrb
fisubs
xchg
mov
lea
sub
xchg
imul
jns
push
xor
dec
jns
cmpsb
dec
dec
mov
sti
imul
bound
scas
lods
mov
jecxz
mov
inc
push
loope
and
cs
jne
pop
mov
rcr
lcall
push
pminsw
inc
ljmp
shlb
movsb
pop
adc
inc
out
pop
loope
cmp
ror
sub
xor
imul
dec
sub
mov
rcl
xor
inc
mov
shrb
pusha
imul
mov
jle
ss
out
movdqa
dec
cwtl
push
bound
push
and
hlt
push
mov
ljmp
fstp
jo
mul
imul
xor
in
mov
mov
scas
inc
movsb
fsubp
lret
dec
pop
sbb
xor
mov
and
fstpl
sub
pop
push
jg
addr16
xor
xchg
mov
cs
mov
mov
mov
pop
sbb
dec
imul
dec
test
movsl
clc
out
sub
lret
mov
adc
test
xor
stc
pop
dec
inc
cmp
mov
imul
mov
jb
test
data16
int
add
imul
sub
cmc
push
ja
mov
dec
inc
jns
scas
xor
rcl
sbb
mov
stos
pop
add
mov
push
nop
sub
sub
in
mov
mov
orb
xor
and
dec
sbb
int3
push
shrl
cld
mov
nop
fdivr
rcrl
imul
mov
fwait
sbb
push
jno
pop
jne
cmp
out
sub
add
xor
mov
add
test
testb
stos
push
bound
pop
jb
cli
stos
insl
pop
pop
push
insl
lahf
int
mov
push
cmp
insb
cmp
scas
lods
mov
dec
pop
das
pop
adcl
push
clc
arpl
mov
testl
out
cmc
scas
sub
push
xchg
xor
adc
sbb
mov
test
or
and
lcall
push
inc
mov
aaa
insl
lds
jno
scas
cmp
jmp
sub
pop
or
or
mov
aad
mov
mov
loopne
pop
xchg
push
pop
pop
lret
dec
push
stos
cwtl
dec
push
fwait
push
inc
adc
pop
mov
cmpsb
pop
jmp
xor
insb
pushf
jo
sub
aam
dec
lret
mov
das
in
sbb
inc
mov
arpl
out
push
add
xorb
and
js
mov
cs
js
int3
dec
shl
lret
lods
lret
mul
divl
ljmp
loopne
aaa
aaa
add
push
test
mov
ss
pop
mov
cmp
cmp
mov
mov
xor
daa
adc
iret
add
loopne,pn
testb
divb
stos
xchg
mov
xor
mov
imul
outsb
out
sub
scas
push
shll
jge
and
mov
sub
mov
movsb
cs
bound
push
cmc
repnz
rcl
pusha
dec
and
insb
jns
add
add
cld
xor
xchg
cmp
std
cmpsl
mov
cmp
dec
addr16
stos
dec
lods
add
inc
adc
jmp
cwtl
mov
out
push
and
sarb
and
jbe
pop
mov
cmp
jno
xchg
jb
les
cmp
imul
dec
in
adc
in
sub
movsb
aas
cmpsb
loop
cmpsl
dec
mov
fwait
sub
jae
mov
mov
sub
cltd
je
ret
mov
gs
iret
jmp
xor
dec
mov
mov
mov
cmp
sub
jno
sub
outsl
pop
inc
sub
sub
fwait
dec
nop
out
in
lods
ret
or
ds
cmp
xchg
sbb
sub
jle
lock
and
lcall
cmpsb
int3
jbe
aam
ret
in
out
inc
out
jnp
imul
ds
inc
lcall
js
dec
fnstsw
cmp
sbb
lahf
scas
cltd
cmpsb
cmpsl
push
bswap
pop
pop
js
scas
iret
push
adc
scas
rcr
sbb
loopne
pushf
jbe
ds
in
pop
test
iret
cmp
push
scas
inc
bound
push
xchg
add
mov
sub
test
add
sbb
xor
jl
xchg
imul
xor
sbb
loope
or
inc
dec
int3
sbb
movl
mov
inc
fiadds
addr16
sbb
jae
movsb
xchg
jle
push
arpl
and
nop
mov
scas
fwait
or
add
movsb
pop
enter
mov
idivl
cmp
lds
push
sub
ljmp
lret
jno
jle
jnp
aaa
lret
inc
popf
out
into
dec
mov
push
sbb
ret
sbb
inc
int3
in
mov
js
jne
pop
loop
pop
mov
jge
mov
push
push
insb
int3
xor
xchg
mov
dec
fwait
cmp
mov
test
dec
adc
xor
sub
xchg
adc
jno
jge
pop
imul
add
imul
movl
or
dec
clc
call
or
sahf
outsl
adc
inc
push
xchg
pop
mov
jb
pop
sbb
mov
out
ret
sbb
cmp
xchg
mov
push
out
cmp
jnp
aam
sub
stc
imul
and
bound
outsb
adc
cld
push
enterw
jge
cmp
xor
push
push
fadd
cmp
fsubs
dec
lock
out
cwtl
cmp
mov
mov
ljmp
testl
bound
stos
insl
ja
ljmp
xor
ds
and
xor
pop
call
or
jb
sub
mov
dec
push
insl
jno
dec
mov
lret
aaa
filds
mov
jp
mov
jne
lods
mov
aad
push
stos
clc
es
js
and
movsl
jae
outsb
fistps
out
insb
mov
mov
cmpsb
sub
negl
clc
popf
das
mov
mov
fdivrs
push
daa
mov
test
sub
adcl
and
addr16
mov
push
adc
insb
or
out
dec
add
aam
notb
add
inc
movq
dec
inc
and
mov
mov
ss
enter
movsb
js
adc
mov
movsl
imul
stos
ja
dec
push
ficomps
je
sub
dec
or
or
xor
dec
ret
or
or
dec
add
jecxz
cmp
or
out
push
adc
push
insl
sbbl
outsl
push
add
pop
iret
jg
ret
mov
insb
enter
mov
inc
hlt
mov
dec
cmp
or
outsb
inc
out
mov
test
adc
js
ss
movsb
mov
ret
mov
xchg
ja
mov
cmp
xor
mov
jns
or
cmc
ss
lea
repnz
xchg
push
fwait
aas
pushf
push
push
out
adc
and
lock
sub
adc
js
dec
pop
xor
sahf
ljmp
std
stc
sti
fdivrl
dec
adc
loop
movsl
xor
jecxz
sbbl
and
ret
movsb
inc
xor
mov
jns
cmp
lods
push
sbb
dec
outsl
xor
push
xchg
sub
mov
scas
ja
movl
aaa
out
movsb
outsl
sub
ljmp
cmp
xchg
dec
sub
pusha
fwait
jl
mov
mov
ljmp
add
ja
out
aam
or
hlt
or
or
das
or
fadds
aaa
das
cmp
or
mov
or
test
jge
jle
push
cmp
adc
lret
xchg
loop
cmp
push
mov
push
test
mov
aad
das
push
and
adc
lret
outsb
leave
push
iret
lahf
mov
jbe
cs
mov
pop
imul
dec
sub
dec
int3
mov
frstor
scas
or
int
int3
fs
jl
xchg
nop
inc
jp
mov
mov
pop
push
mov
test
dec
sbb
sbb
cmp
outsb
cmpsb
into
rorb
imul
cmp
mov
xor
pushl
popa
mulb
fstps
mov
jbe
lods
test
loopne,pn
lds
and
jae
mov
adc
mov
ja
bound
inc
xor
inc
divl
push
sub
mov
or
xchg
shrl
xor
stos
inc
int3
ja
inc
outsb
dec
out
dec
movsb
pop
outsb
shlb
sub
add
mov
out
inc
testl
jge
cmp
dec
ret
mov
stc
mov
push
jb
dec
dec
decb
adc
jle
push
xor
or
cmp
xchg
nop
ds
adc
dec
aad
pop
inc
cmp
dec
mov
adc
mov
jecxz
push
dec
dec
jno
xchg
aas
inc
pop
xchg
inc
scas
xor
in
je
xor
testl
inc
ljmp
movsl
into
ss
rorl
scas
arpl
out
ss
ja
rcll
out
mov
push
xchg
pop
mov
and
shll
jno
scas
inc
or
xchg
sub
fwait
js
sbb
into
test
ja
aaa
lahf
or
dec
cmp
sahf
repnz
jne
cwtl
sbb
iret
and
adc
ror
imulw
jb
or
and
data16
fldt
sahf
jge
fists
mov
dec
lcall
inc
aam
mov
testl
cmp
cs
cmc
dec
and
jne
rcrb
inc
enter
sub
cs
ljmp
int
inc
cwtl
testb
push
and
pop
test
sbb
cmc
push
ja
and
adc
pop
add
jo
out
lcall
inc
mov
xor
js
jp
cmp
jns
mov
adc
cmc
push
imul
xchg
mov
lods
sub
popa
out
lcall
xchg
xor
push
xchg
xlat
push
jb
mov
and
int3
pop
inc
pop
mov
xor
mov
icebp
lcall
lret
fsubrl
daa
inc
mov
push
or
cmp
popf
je
loop
movsl
cmp
dec
test
in
push
aas
fwait
lcall
in
xchg
xor
or
or
sbb
cmp
aaa
fists
or
pop
jbe
ja
shlb
push
xor
cmp
ret
rorb
lods
jge
in
mov
mov
mov
ja
loope
jle
jp
jb
sbb
subb
jg
in
and
jp
cmp
into
jne
dec
push
push
push
orb
test
sub
add
pop
xor
ljmp
mov
test
nop
and
dec
out
sbb
popf
xchg
xor
mov
inc
nop
inc
push
popf
ret
ficoms
sub
push
mov
loopne
push
xchg
dec
jg
cli
sbb
idiv
test
dec
push
jbe
mov
jbe
sub
cmp
repnz
sub
out
xor
add
lea
fs
sbb
or
push
test
aam
sub
std
aas
jbe
test
sbbb
pop
aam
ds
pop
cltd
inc
iret
fidivl
cltd
fmul
cmp
scas
inc
cmp
ret
sub
lcall
xchg
into
fidivl
aam
xchg
jg
insl
movsb
ljmp
sub
pusha
das
out
mull
adcl
jnp
lea
pop
cmp
jbe
push
fldl
jg
push
lcall
inc
movsb
xchg
adc
jb
cmp
or
mov
dec
imul
push
aam
imull
imul
adc
cld
sar
dec
xor
add
rclb
test
and
add
xor
pop
xor
xor
inc
sub
xchg
sar
imul
in
pop
movsl
xchg
shrb
inc
xor
mov
pop
in
add
dec
data16
or
cmp
add
mov
aaa
and
lret
pusha
mov
add
gs
sub
daa
pop
xchg
cs
fldcw
jbe
xchg
and
and
repz
dec
jle
xor
mov
and
nop
push
icebp
jg
mov
sbb
mov
sub
mov
insb
mull
mov
scas
insb
outsb
icebp
adc
sarl
xchg
subl
aaa
insb
jb
cmp
movsb
sub
dec
aas
push
push
pop
aad
xchg
dec
xor
mov
mov
in
sbb
and
and
fwait
fs
xor
push
ret
mov
sahf
push
jbe
mov
inc
iret
sbb
cmp
sub
xchg
mov
lret
je
out
or
jl
mov
je
xor
out
pushf
jb
mov
lret
sub
push
out
xor
cmp
push
push
cwtl
ds
outsb
sub
ds
lods
push
sub
adcb
pusha
mov
cmovo
sub
cwtl
scas
fdivr
out
aam
push
push
fdivl
mov
fmul
dec
or
mov
loopnew
jo,pt
push
push
and
push
imul
shld
push
mov
pop
push
cmp
mov
jg
inc
push
cld
mov
lret
aas
cmc
test
or
insb
adc
or
push
mov
cmc
mov
lcall
mov
add
dec
xor
lods
mov
jno
and
mov
imul
sub
div
pop
xor
xor
and
jl
cmp
sub
jnp
sub
imul
fisttpl
sub
mov
fstpl
daa
mov
cmp
hlt
mov
adc
test
jmp
push
mov
flds
fcomps
dec
xor
jno
in
adc
sti
pop
cltd
cmp
lret
mov
push
ja
xor
sub
adc
outsb
mov
les
mov
and
out
jmp
jbe
pop
lods
ds
in
idivb
mov
pusha
mov
push
mov
test
sbb
in
std
inc
or
jns
push
mov
xor
daa
sub
and
stc
push
and
pop
xchg
push
jge
in
movsl
xlat
mov
dec
dec
ljmp
jb
push
addr16
push
xor
outsl
mov
jmp
in
cmp
pop
loope
in
lahf
xor
setge
mov
xorl
bound
addr16
and
lcall
sbb
sti
in
push
cmp
inc
pushf
dec
insb
push
ss
fwait
add
dec
sub
and
stc
adc
or
scas
outsl
and
mov
inc
fwait
adc
dec
sahf
mov
lcall
lds
daa
mov
and
push
sbb
xchg
std
push
bound
ret
mov
jg
lret
lsl
push
push
push
mov
aas
loop
bound
push
outsl
bound
outsl
mov
out
outsw
mov
mov
ret
das
je
xor
cwtl
sub
cmp
adc
mov
mov
scas
add
xchg
out
lahf
setl
daa
xorl
jnp
popf
cs
mov
fisubrs
in
es
cmp
addb
xchg
ffree
adc
jns
dec
mov
adcl
outsl
pop
arpl
addb
cwtl
jno
mov
fmuls
push
ds
mov
mov
xor
mov
cmc
fisttps
flds
ja
mov
dec
std
repnz
dec
mov
mov
cmp
or
flds
loope
inc
push
lock
fldcw
mov
jne
mov
mov
cmp
mov
sub
into
mov
push
adc
sub
test
ret
popa
dec
sub
lods
popa
mov
inc
scas
lahf
mov
popf
mov
jp
jl
js
jmp
add
dec
xor
pop
adc
pop
sbb
jp
jno
inc
pop
das
bound
nop
xchg
sub
mov
inc
out
pop
jns
outsl
cli
es
pop
icebp
ret
or
lcall
loope
iret
sti
jbe
test
in
xlat
shll
scas
ja
xor
sub
cli
xor
popa
jmp
movsb
mov
pop
mov
fwait
aas
addr16
lret
negl
mov
mov
dec
xor
in
movsb
xor
mov
outsb
jo
push
cltd
mov
jmp
pop
fwait
add
push
outsb
push
mov
add
out
inc
push
bound
pop
inc
ds
push
mov
or
mov
jg
aas
pusha
pop
test
imul
fstpl
repz
jo
xor
mov
and
xor
insl
xor
mov
jb
leave
xor
data16
popa
pop
lcall
mov
jp
adc
cld
or
addr16
sub
jge
mov
jge
mov
imul
imul
or
mov
mov
fdiv
aam
scas
adc
push
adc
mov
cmp
mov
ljmp
cltd
test
ficoms
std
xlat
fildll
fwait
push
lods
test
stos
fists
scas
cmp
jg
inc
sub
sub
test
aaa
or
sbb
or
mov
imul
xchg
push
dec
loop
imul
adc
cld
int3
xor
push
dec
call
add
sbb
call
xor
in
fidivrl
sub
pop
xor
push
sbb
jae
add
push
movsb
adc
push
stos
mov
cmc
bound
jg
xor
les
push
dec
xor
les
jge
ss
movsl
enter
cvttps2pi
jb
and
cmp
dec
rolb
int
aaa
mov
lds
fidivl
pop
cs
mov
jns
sbb
movsl
bound
int
aaa
inc
clc
fucomip
int3
or
mov
inc
movsl
sahf
icebp
movsb
lods
rolb
pushf
scas
clc
sub
in
jo
pop
xor
fisttpl
adc
insb
mov
hlt
or
mov
into
push
icebp
in
stos
dec
mov
cmp
outsb
lcall
ja
dec
xchg
mov
in
fimull
jno
push
push
fwait
inc
mov
xchg
sub
cmpsb
mov
mov
xchg
fxch
sub
in
mov
or
xchg
lods
rcrb
mov
xchg
pop
decb
xchg
sbb
sahf
pushf
jns
incl
cmp
xor
mov
sub
loope
jge
mov
popa
test
test
sbb
push
mov
and
dec
out
das
push
cmpsb
popa
mov
jnp
and
fldcw
add
aas
xlat
ja
ds
cmp
sub
xchg
scas
sbb
out
data16
in
pop
add
test
je
pop
push
test
inc
jp
call
mov
je
mov
clc
xor
sti
cmp
dec
scas
test
mov
cwtl
mov
scas
iret
arpl
mov
inc
enter
dec
jbe
ds
pop
mov
jo
dec
ss
jle
cmp
ja
pop
jl
scas
pop
out
lret
pop
aaa
sub
loop
xor
scas
push
mov
jmp
outsb
xchg
push
test
shrb
shll
fs
mov
ds
out
stos
inc
fst
in
inc
inc
jbe
mov
test
xor
je
mov
out
jno
dec
mov
push
push
cmp
pop
jecxz
repnz
test
out
sbb
lcall
or
ljmp
loope
rcll
and
outsl
sahf
sbb
mov
lds
inc
test
jne
in
cmp
jb
insl
into
push
cmp
popa
fists
test
pop
cmpsb
xchg
js
mov
enter
push
pop
mov
imul
jne
test
sub
adc
daa
ss
faddl
dec
jg
or
xchg
rolb
sbbb
inc
sub
pusha
outsb
shll
ss
insb
adc
push
imul
clc
ret
insl
fwait
dec
aas
aaa
jae
scas
inc
xchg
mov
mov
jne
int3
mov
cmp
adc
mov
js
iret
push
into
insb
enter
push
mov
and
mov
fwait
mov
xlat
inc
arpl
hlt
pop
fstpt
enter
int3
mov
negl
and
in
cmp
jno
or
mov
lret
pop
xchg
pop
fidivl
inc
fildll
cmp
ror
sub
lods
mov
jne
mov
fmul
lods
sbb
jge
or
cmp
rcl
outsl
sarl
xor
test
iret
movsb
pop
adc
push
sbb
pop
jge
sub
jg
mov
popa
stc
xor
mov
cmp
jmp
mov
test
cmc
es
sub
imulb
mov
bound
sub
in
mov
add
and
jns
push
cs
cmp
xor
pop
mov
pop
cmp
jp
mov
outsb
inc
jo
jg
icebp
fs
addr16
and
sub
fwait
jae
mov
mov
mov
bound
adc
outsl
xchg
push
inc
mov
imul
inc
nop
dec
pop
mov
cmp
std
jle
add
leave
insl
pop
pop
adc
scas
push
cmp
stos
xor
sub
sub
xchg
adc
mov
jo
fldcw
lea
stos
sub
stc
in
in
push
jmp
stos
and
ljmp
jecxz
mov
cvttps2pi
push
dec
sub
das
fwait
and
jno
js
sub
out
adc
mov
aam
cmpsl
cld
call
ficomps
lods
nop
sub
push
stc
dec
jae
shll
cs
push
push
and
icebp
sbb
ja
pusha
fs
out
sbb
inc
cmpsb
dec
xor
inc
mov
add
je
or
sbb
pop
dec
adc
bnd
arpl
sbb
mov
mov
cmp
adc
cs
scas
pop
jno
js
inc
xlat
mov
imul
addr16
cmp
and
adc
arpl
cmpsl
jns
mov
sub
mov
out
test
push
add
pop
lret
xchg
test
mov
sub
pop
aad
cmp
inc
ss
stos
inc
sbb
insl
push
into
ja
jb
pop
sbb
stos
mov
fadd
pop
bound
fdivl
inc
mov
mov
mov
push
stos
in
arpl
add
mov
jg
cmp
mov
push
xor
sbb
shrb
cltd
inc
jns
inc
mov
shlb
pop
insb
insl
inc
cs
inc
and
xchg
or
cmp
call
sbb
outsl
cmp
xor
gs
jle
ss
stos
das
xchg
inc
popf
push
and
push
ss
or
fwait
cmp
ds
cmp
mov
adc
lods
jno
ds
or
sbb
jl
inc
sti
outsb
lret
pop
push
idivb
sub
mov
cld
leave
dec
sub
dec
jl
mov
jecxz
outsb
sbb
jl
cwtl
jo
mov
push
pop
mov
popa
stos
pusha
inc
xchg
add
mov
in
xchg
adcl
ss
xor
je
shrl
mov
sbb
into
mov
fidivs
jge
movsb
into
cmpsb
cmc
xor
lahf
in
outsl
jmp
test
and
push
pop
cmp
jle
inc
and
adc
cld
mov
std
mov
pop
sbb
xor
dec
nopl
movsb
push
stos
in
stos
dec
xor
mov
mov
sbb
das
push
push
and
mov
fsubl
jo
lods
push
cmp
xchg
jbe
test
push
pop
int3
adc
out
in
cmp
xor
loop
jle
mov
mov
dec
bound
out
mov
shrl
jp
fwait
out
mov
push
xor
sub
push
jg
adc
or
jl
movups
lret
jecxz
cmp
lret
addb
insl
adc
jae
xchg
bound
sbbb
mov
les
inc
or
sarl
std
or
cwtl
xor
push
adc
push
add
rcrl
mov
movsb
test
xor
fs
ss
in
imul
pop
int3
dec
jns
xchg
inc
jle
out
cmp
jno
xchg
imul
stos
cwtl
ret
test
enter
fmull
mov
xchg
push
fildll
mov
or
lret
mov
out
cmpsl
shrl
dec
cmp
dec
mov
enter
mov
in
cmp
test
inc
ret
mov
adc
adc
aam
xchg
dec
adc
in
mov
fldl
pop
jge
daa
jbe
repz
sbb
cmpsl
das
pop
jmp
jae
jns
ret
mov
mov
adc
jmp
in
nop
call
imul
mov
je
mov
out
mov
and
jnp
icebp
jo
test
adc
fs
out
test
jecxz
mov
fs
cmc
lcall
repz
cmp
cmp
push
and
mov
sahf
cmp
fstps
cmp
dec
push
in
lcall
jae
pop
mov
mov
stos
push
inc
lods
cmp
dec
adc
fnstsw
orl
mov
sbb
shll
or
cmp
lods
add
mov
ret
sbb
fdivrp
lods
mov
and
test
inc
icebp
push
pop
adc
and
test
lret
cmp
dec
push
adc
xchg
outsl
push
and
jo
loope
dec
mov
outsl
sub
push
and
xlat
aam
adc
mov
out
adc
cmp
fldt
mov
or
cwtl
lret
popa
and
and
xor
mov
push
out
dec
dec
xchg
cmp
adc
cmp
push
pop
test
adc
leave
rorb
mov
dec
divb
cmp
insl
and
std
xchg
jbe
aaa
mov
negb
mov
cmp
xchg
testl
cmp
pop
inc
dec
mov
dec
std
mov
test
xor
repnz
inc
addr16
dec
ret
pop
jl
add
add
aaa
test
jo
xchg
outsb
cmp
sahf
out
jge
push
dec
lahf
inc
aad
sub
mov
insl
dec
lret
mul
imul
imul
xor
popa
mov
dec
cmp
cmp
ficomps
ja
clc
inc
push
mul
xchg
out
test
idivb
mov
cld
xchg
test
jmp
into
popa
fldcw
mov
scas
sub
lret
repnz
test
inc
idivb
out
mov
sub
stc
mov
aas
out
sub
std
enter
xor
pop
loope
stos
imul
outsb
cmp
fs
icebp
mov
push
nop
jp
sub
sub
inc
and
lea
test
inc
out
pop
loop
movsb
dec
nop
daa
lods
jg
jae
lcall
mov
scas
scas
into
mov
in
fistpl
dec
and
mov
xor
test
add
dec
push
sbb
push
inc
xor
inc
push
sbb
test
xor
push
mov
bound
out
sahf
jg
inc
data16
stos
mov
fcomps
xor
mov
outsb
std
push
or
cmp
cld
addr16
cs
mov
xchg
inc
je
ss
mov
add
sbb
mov
addr16
pop
pop
out
mov
xchg
xor
xor
xchg
xchg
shrb
xchg
insb
cmp
dec
icebp
in
jo
iret
mov
iret
mov
testl
aas
ret
shll
insl
dec
jb
xchg
out
aaa
inc
mov
dec
inc
lahf
je
pop
dec
xor
inc
xor
sahf
sub
mov
cwtl
and
xor
add
dec
cmpsb
mov
pop
jo
xor
bound
xor
std
push
or
mov
data16
dec
sub
stos
sbb
and
jo
in
xchg
movsb
insl
mov
push
in
mov
cmp
shlb
dec
in
into
js
fwait
adc
or
repz
cs
fildl
and
repz
dec
movsl
shlb
cli
jg
lahf
mov
push
inc
ret
in
in
sbb
mov
pushf
push
sub
outsb
push
dec
neg
ret
mov
push
nop
mov
lods
test
bound
adc
jp,pn
addb
mov
aad
xchg
cwtl
xor
xor
mov
adc
xor
scas
xchg
popa
pushf
or
xor
mov
dec
and
cmp
and
stos
pop
xor
xchg
sbb
cmc
mov
xor
dec
jno
mov
outsb
jge
jno
stc
sbb
in
popf
jbe
xor
outsb
add
jb
adc
mov
xor
bound
jno
xor
sub
dec
mov
sub
ss
cmp
xchg
fstps
fistps
jle
nop
mov
sub
mov
out
and
sbb
sbbb
cmp
popa
cmp
inc
jge
inc
cmc
mov
and
dec
jno
bound
cmp
add
xchg
xchg
in
data16
imul
adc
adc
dec
adc
jne
jo
loope
leave
test
push
xchg
addr16
icebp
iret
xorl
test
sub
scas
xchg
movb
push
and
mov
aad
mov
mov
or
xor
fsubrs
cmpsb
jns
mov
inc
lcall
adc
leave
cmp
inc
fisttpll
adc
fwait
push
shrl
lcall
in
lods
sbb
int3
lahf
pop
aaa
push
jecxz
out
xchg
shlb
ja
push
ret
cs
je
add
xor
loope
and
mov
ljmp
lods
push
jae
test
jb
out
sbb
out
imul
cmp
in
inc
push
leave
sub
mov
pop
jo
push
mov
js
adc
fisttpl
mov
ret
push
fwait
push
xchg
imul
lock
scas
mov
xor
icebp
push
mov
ret
shl
mov
shll
rcl
das
sbb
stos
scas
dec
orl
insb
jo
dec
inc
jle
mov
dec
mov
or
stos
nop
and
adc
daa
and
xor
mov
sbb
in
xchg
nop
xchg
push
inc
jmp
mov
sub
aaa
and
add
cld
aas
inc
pop
outsl
dec
and
push
xor
lds
pop
bound
sbb
inc
enter
dec
push
lret
scas
pop
test
idiv
xor
jge
outsb
xor
pop
inc
in
imul
sub
mov
mov
idivb
sub
out
lock
ja
movl
push
sarb
sbb
pop
mov
stos
popf
mov
push
aam
out
hlt
jns
adc
stos
jecxz
scas
push
aaa
sbb
adc
cmp
mov
jge
int
inc
inc
and
scas
cld
inc
popa
adc
add
xchg
ja
aad
pop
hlt
fldcw
and
sbb
sbb
mov
push
mov
mov
cmp
imul
xor
lahf
push
data16
pop
mov
stc
repnz
into
cmp
sbb
loope
bound
adcl
or
bound
cmp
mov
imul
js
aam
std
adc
sahf
scas
in
cmp
xchg
pop
test
or
data16
js
fstps
fdivs
adc
xchg
or
movsb
imul
out
mov
inc
fwait
dec
std
scas
dec
ljmp
push
jb
or
daa
fs
inc
addr16
mov
xchg
repz
stos
lds
movsl
pop
lds
ss
out
cld
arpl
jge
ss
fcmove
push
inc
sbbl
inc
outsb
and
scas
jbe
enterw
inc
jb
sbb
and
shl
mov
insb
mov
fcmovnbe
jns
aad
loopne
sbb
mov
sub
lcall
push
push
mov
or
test
subl
push
xor
cld
inc
mov
pop
out
xchg
push
push
adcl
enter
ljmp
or
jle
aas
xor
mov
popf
scas
fsubrl
mov
mov
fimull
in
inc
mov
rorl
lds
add
jno
mov
cmpsb
test
jge
negb
jmp
mov
xchg
pop
ret
lret
lret
push
popa
jecxz
sbb
sub
mov
mov
jbe
in
xor
or
movsl
cmp
mov
lcall
stos
testb
les
mov
pop
jbe
mov
test
push
call
sub
popa
aaa
dec
push
das
dec
dec
aaa
dec
test
add
jns
inc
rol
dec
jo
and
aad
mov
and
stc
and
dec
jge
jle
dec
lds
ss
in
cmp
push
mov
sub
push
sbb
stos
and
stos
outsl
add
mov
adcl
lahf
jae
jl
mov
inc
xchg
push
out
nop
pop
ja
jge
cs
ret
fwait
mov
jns
inc
jae
and
insl
ret
pushf
pusha
jb
movsb
xchg
cmp
lahf
push
cmpsl
sub
pushf
fwait
rcll
gs
aaa
loopne
sbb
scas
xlat
add
adc
shlb
jecxz
das
in
add
mov
loopne
adc
addr16
lods
lret
jmp
jmp
jl
lcall
outsb
mov
test
bound
insl
test
out
je
and
into
inc
dec
add
mov
push
sub
push
jnp
inc
dec
xor
cld
sub
roll
xchg
lods
sub
fnstsw
inc
cmp
jecxz
into
mull
fsubrs
xchg
xor
cli
jp
jno
dec
test
jl
xor
cmp
push
mov
jp
and
scas
dec
xchg
rcrl
add
pop
inc
mov
mov
cmp
mov
lds
enter
dec
inc
push
push
xchg
fldcw
or
xor
inc
sbb
dec
fadd
ss
imul
xor
pop
dec
fcmovu
push
mov
std
rolb
xlat
push
gs
cmp
out
loopne
loopne
inc
bound
popa
cmp
out
jmp
nop
sub
nop
adc
push
and
push
or
sbb
cli
fidivrs
xchg
das
popa
push
jmp
pop
bound
flds
test
push
mov
jmp
scas
lods
xor
cmpsb
mov
sub
out
push
mov
lahf
pop
jbe
cmp
xor
sub
leave
sub
gs
jno
sbb
sub
sahf
arpl
in
push
or
xchg
push
insb
cmp
inc
mov
inc
cld
scas
cmc
and
scas
insb
dec
js
push
push
pop
and
fwait
xor
sub
mov
pop
ret
or
stos
cmpsb
pop
cwtl
sub
icebp
adc
push
cmpsb
sbb
mov
scas
xor
dec
pop
dec
mov
and
mov
and
sahf
push
inc
push
fs
loope
inc
pop
xchg
mov
pushf
daa
jmp
insb
jns
jg
adc
mov
iret
jl
dec
xor
dec
jne
dec
dec
xor
sub
adc
sbb
lret
movsb
je
sub
pushf
es
push
cltd
dec
clc
push
cmp
shr
bts
pop
xor
addr16
sbb
stos
mov
fcomps
xor
mov
cld
xor
xor
dec
push
pusha
mov
jge,pt
xor
outsb
outsb
pop
or
add
scas
sbb
imul
xor
je
fs
inc
dec
or
ljmp
dec
loope
jae
cs
dec
push
lods
pop
lods
scas
scas
jbe
pop
je
dec
jae
jae
cs
fstl
jo
jno
jg
push
sub
sub
dec
pop
xor
shlb
jg
sbb
sti
cmpsb
push
and
mov
out
dec
jae
orb
jge
aam
inc
adc
pop
sbb
jl
ljmp
xor
jo
nop
lret
out
out
mov
in
insb
sub
push
xor
popa
push
cmp
mov
jl
pop
mov
jbe
xor
jg
adc
pop
test
mov
ja
cli
stos
and
aad
or
sbb
jnp
jl
sti
dec
cld
mov
mov
push
push
cli
stos
mov
ficompl
cmp
hlt
das
fisttpll
ss
or
push
shr
jecxz
in
lds
int3
ror
sbb
testl
ljmp
cmpsb
dec
xor
mov
shlb
add
add
sbb
ljmp
out
inc
popa
add
cmpsl
or
mov
je
or
push
lahf
add
mov
dec
lret
inc
inc
popa
in
mov
xor
rorl
push
popaw
sbb
dec
push
fdiv
add
xchg
jge
daa
jo
push
std
mov
pushf
or
fwait
mov
adc
adc
push
in
movsb
scas
mov
stc
cmpb
xchg
dec
xor
ds
and
nop
cmp
push
out
ret
cs
jg
adc
jb
jno
rep
push
outsl
xor
xor
or
dec
int3
inc
mov
mov
sub
into
int
jno
stos
xchg
xor
jl
jns
imul
out
inc
jbe
or
mov
push
mov
jns
dec
mov
pop
stos
lcall
data16
jae
push
fisttpll
push
inc
fildll
into
add
fwait
mov
sub
or
mov
xchg
cmp
mov
jns
mov
push
out
in
ret
mov
dec
pop
js
shlb
pop
outsl
fsts
ss
push
mov
mov
and
jle
push
xor
das
into
lea
or
mov
nop
fmul
mov
lcall
lods
mov
sub
cmpsl
lock
pop
repz
lret
mov
and
inc
cmp
pusha
call
mov
sbb
stos
stos
pusha
mov
addl
lret
stos
push
push
and
out
bnd
adc
push
inc
cwtl
in
or
jg
loop
jmp
mov
out
pop
out
and
stc
mov
inc
outsb
ds
push
nop
xorb
xor
daa
cmp
js
jmp
sets
jl
xor
jl
mov
sbb
or
lcall
pop
popa
repz
xor
test
cmc
sub
int
std
xlat
imul
aad
mov
ljmp
out
push
sbb
addb
lcall
lods
mov
mov
push
inc
aad
mov
jg
mov
sub
fnstenv
in
sahf
in
out
xor
pushl
mov
subl
mov
aad
test
mov
imul
sub
push
rorb
cwtl
jp
xchg
dec
cld
std
pop
aad
fadds
insl
jle
test
push
jle
test
ss
cmpsb
push
aam
xchg
mov
rol
mov
jne
ret
lret
outsl
push
ret
push
testl
shrb
and
push
push
mov
fs
das
pop
push
pushf
imul
jo
pop
fmuls
ficoml
mov
sub
mov
xor
jno
data16
jae
dec
popf
cmc
into
sbb
and
mov
das
mov
loopne
aaa
gs
dec
popf
add
pop
int3
sbb
inc
mov
dec
nop
sub
out
lret
mov
repz
in
fisttpl
fcomps
aaa
ret
fs
pop
push
imul
nop
and
pushf
xchg
inc
mov
outsb
mov
out
sbb
int
stos
xchg
clc
push
dec
or
movsb
out
pop
out
sub
dec
mov
pop
sub
imul
xchg
mov
mov
sub
popf
popa
cli
cltd
scas
test
fidivl
jl
push
sahf
pop
jle
jle
sbb
dec
fnsave
dec
and
jp
mov
dec
or
mov
dec
mov
mov
pushf
push
sbb
stos
in
mov
mov
sub
push
and
or
out
xor
or
daa
adcl
in
add
push
arpl
jmp
loope
lret
mov
ds
inc
mov
ds
lcall
lret
sub
cmove
call
movsb
inc
scas
imul
mov
inc
lcall
cmp
scas
cmp
jb
mov
adcb
and
pop
add
or
neg
jno
into
xor
jg
xor
lret
jmp
scas
push
inc
xchg
maxps
aaa
shrl
outsl
xor
pushf
pushf
adc
jg
inc
push
push
icebp
in
aas
cmpsl
push
out
mov
fistpll
outsb
outsl
xor
xor
decl
mov
pop
mov
insl
mov
insb
jnp
add
lcall
fwait
mov
and
jp
mov
xor
popf
inc
insb
push
lds
mov
cmp
cli
and
hlt
stc
ss
dec
sub
xor
imul
pusha
stos
jp
pop
xor
pop
divl
lea
in
push
lahf
stos
mov
cmc
bound
jg
xor
lret
mov
out
arpl
inc
inc
das
xchg
aam
push
adc
jne
cmc
jb
imul
stos
das
xor
sbb
pop
stc
push
shrb
out
push
fimull
dec
pop
cmp
xor
lret
jns
xor
test
sbb
test
adcl
inc
cs
add
sbb
lret
mov
lret
in
aaa
sub
xor
lea
xchg
xor
sub
push
cs
sub
bound
cmp
push
jno
movsl
clc
iret
push
dec
cmp
mov
jp
ljmp
insb
push
cs
clc
and
call
in
sub
and
mov
mov
cmpsb
jnp
divb
ret
push
jmp
jle
pushf
shld
mov
or
pop
jg
ljmp
movsb
inc
fwait
pop
mov
jg
sbb
xchg
aaa
xor
movb
xchg
shrl
inc
ret
imul
lea
shld
inc
push
mov
enter
cmp
dec
mov
scas
push
stos
or
pushf
cmp
xor
fs
aaa
add
mov
mov
push
int3
scas
and
outsb
cmp
and
sub
lcall
pop
insb
gs
mov
adc
insb
das
cmp
xor
jnp
push
push
cmp
inc
hlt
jne
popf
in
movsl
cmp
dec
xchg
push
fdivrs
loop
sub
sub
movsb
bound
in
cli
cmp
sub
or
pushf
and
xchg
out
mov
add
adc
cmp
pop
aad
jns
dec
daa
adc
mov
enter
insb
pop
push
dec
cltd
mov
cmp
xchg
dec
lahf
and
xchg
mov
sub
xchg
sub
in
scas
add
push
jmp
xor
ss
xchg
mov
loopne
ja
or
aas
ja
fwait
mov
out
cmp
pop
cld
rcrl
xor
sub
jns
cwtl
or
cmpsl
inc
sbbb
sbb
scas
cmp
orb
cmp
jmp
sahf
test
jae
imul
push
clc
pop
pusha
sahf
lods
xor
mov
repz
xor
les
and
aad
insl
in
jb
push
add
iret
pusha
xchg
stos
mov
stc
xor
mov
jno
mov
mov
scas
dec
mull
into
stos
insb
ja
dec
push
cwtl
shlb
push
inc
jmp
adc
sub
stc
aaa
mov
lods
mull
cmpsb
je
dec
mov
inc
enter
xor
sub
dec
popa
xchg
nop
pop
scas
insb
inc
aaa
or
in
shll
ss
loop
ja
and
je
in
outsb
test
mov
jnp
mov
inc
orb
cmp
mov
imul
xchg
mov
cmp
push
sbb
call
and
je,pt
ficomps
and
fwait
dec
add
or
add
jb
test
imul
jo
dec
scas
cmpsl
nop
push
or
push
mov
fucomi
mov
mov
add
daa
adc
xchg
shlb
xor
push
jne
pop
push
fcmove
push
enter
xor
int3
out
inc
xchg
insl
into
ja
adc
jge
xor
mov
call
or
jb
cmp
cmp
pop
xorb
stos
mov
stc
xor
mul
xor
push
shll
or
into
aaa
scas
enter
jae
shlb
mov
aaa
pop
insl
dec
inc
aaa
popa
stc
xchg
out
les
ret
and
ficomps
sbb
scas
jp
cmpl
mov
pop
mov
sub
fdivl
stos
lea
push
shrb
cs
stc
iret
aaa
insb
cmp
mov
movsb
sub
mov
pushw
inc
xor
pop
and
mov
sub
jno
cltd
cmp
dec
js
mov
ljmp
aaa
mov
mov
roll
rcl
sahf
in
cli
add
movsl
xchg
and
jmp
jno
pop
lods
mov
lock
addr16
in
cs
jne
test
mov
jbe
outsb
lods
enter
popf
fnstcw
sbb
repz
enter
sbb
jmp
inc
mov
scas
push
add
fwait
jp
nop
aad
mov
sub
adc
mov
mov
inc
xchg
mov
jecxz
mov
leave
mov
test
lret
icebp
mov
repz
sbb
lea
jbe
je
pop
sbb
jl
test
xor
push
loopne
sahf
or
mov
cli
lods
sub
and
mov
mov
mov
inc
and
mov
idiv
push
leave
in
sbb
mov
jbe
cli
dec
mov
out
xchg
mov
push
fsubrs
add
xor
pusha
add
adc
cmp
jecxz
inc
adc
jge
xor
in
pop
enter
leave
jns
xor
into
stos
insl
repnz
shlb
in
xchg
pop
insl
test
ljmp
inc
dec
jne
adc
out
sub
and
push
dec
gs
xor
adc
xor
bnd
mov
and
inc
fisubrl
shr
aad
mov
mov
pop
lods
adc
pusha
les
mov
aaa
inc
outsl
pop
lahf
mov
pop
lods
incb
pop
mov
out
jmp
xor
inc
test
sarb
push
outsl
add
dec
cmpb
aad
cmp
aad
das
mov
mov
insb
xor
into
sbb
push
xchg
sub
xor
lcall
mov
mov
int
std
int3
mov
popa
sbbb
aaa
adc
inc
xchg
nop
and
push
or
mov
int
mov
mov
push
mov
imul
cmp
adc
mov
mov
sbb
sbb
cmp
adc
in
enter
mov
testl
faddl
aam
das
mov
outsl
ljmp
jecxz
loopne
inc
xlat
hlt
inc
dec
and
fsubrp
out
imul
rolb
ret
and
mov
data16
int
test
lods
mov
das
fwait
mov
mov
into
mov
rcl
xor
mov
repnz
mov
fmul
cwtl
mov
jge
insl
push
push
adc
jnp
adc
nop
notb
movsl
jge
lahf
dec
push
xchg
sub
mov
xlat
dec
loop
mov
outsl
scas
rcrl
push
xorl
orl
push
loop
lret
pop
inc
sarl
or
push
xor
cmp
and
jnp
dec
mov
enter
pop
fstps
cld
outsb
mov
dec
or
insl
rcr
mov
xor
lock
ror
jge
sbbb
dec
nop
xor
pop
data16
sbb
dec
jle
jecxz
iret
sub
and
add
mov
dec
in
das
pop
jp
mov
aam
es
sub
jns
scas
inc
xor
and
jg
ss
jns
hlt
call
iret
leave
jnp
jmp
jno
mov
jnp
imul
clc
inc
jae
dec
add
jl
jge
jns
test
mov
outsl
cmpsl
incb
lcall
sarb
cmpsb
jge
addr16
in
mov
dec
lret
cmpl
sbb
sbb
cmc
daa
xchg
mov
pop
in
addl
and
std
fistps
bound
jnp
in
xchg
fstps
in
dec
imul
jge
sarb
and
dec
sub
aam
jge
mov
mov
pop
test
neg
insl
and
push
cs
icebp
jbe
nop
andl
scas
daa
lods
jns
cmpsl
mov
adc
nop
sbb
inc
test
iret
mov
push
pushl
mov
imul
mov
sub
fs
pop
push
arpl
fstpl
in
das
ret
mov
ja
mov
cmpsb
mov
inc
insl
loop
imul
cmp
sbb
cmp
outsl
daa
xchg
imul
stos
jp
add
stos
idivl
pop
outsb
lret
dec
scas
mov
setbe
xor
cmpsl
or
clc
add
cs
fistl
mov
dec
add
jns
push
fistl
scas
test
sti
pop
mov
mov
mov
xor
cmp
iret
mov
and
cld
ret
das
pop
lods
cmp
jo
cs
pop
cmp
mov
cmp
mov
dec
or
pop
jns
mov
stos
xor
lret
je
scas
aaa
cmp
push
mov
les
jg
push
add
push
mov
lcall
inc
mov
push
movsl
push
dec
jmp
pop
mov
sub
pop
jp
fildll
xor
jo
or
mov
inc
ljmp
jecxz
cmp
frstor
test
test
mov
cmp
and
mov
mov
jnp
lcall
lcall
mov
aas
das
das
ss
andl
mov
dec
mov
jnp
outsb
adc
jg
mov
out
addb
or
adc
jns
fsubrl
push
mov
lds
in
popa
jmp
mov
fdivl
cmp
jae
aaa
xchg
test
loopne,pt
pop
sbb
out
scas
ss
imul
adc
ss
and
aad
jb
cmp
rcll
cmpsl
adc
adc
mov
sub
sub
in
cs
enter
lods
mov
inc
stos
dec
imul
jne
push
jge
repz
and
fs
scas
cmp
dec
jbe
dec
mov
mov
and
lret
daa
xchg
xor
dec
xor
rorl
movsb
sarb
pop
pushf
scas
xor
rcrl
sti
fstpl
popa
cwtl
fwait
push
xchg
jns
inc
das
xchg
gs
std
addb
jae
scas
insb
push
pop
push
pop
jb
ds
je
pop
mov
cmp
mov
jp
fstpt
and
dec
adc
rol
xchg
test
dec
mov
enter
pop
insb
jp
sub
popa
cmp
pop
ss
pop
push
sub
popa
dec
mov
cmp
pop
push
je
cmpsl
fisubs
daa
push
call
sub
xor
inc
push
jns
cmp
ss
mov
mov
popf
aad
xchg
adc
push
jbe
popa
add
inc
and
mov
jbe
jl
pop
jnp
sub
jg
sbb
sub
dec
dec
fdivr
xor
scas
inc
pop
cwtl
mov
pop
fdivrs
xchg
pop
movsb
outsb
sub
shll
or
xchg
imul
daa
xor
cmp
cmp
ljmp
xor
and
ds
sbb
ror
in
sbb
add
sbb
cmp
insb
in
sarb
dec
dec
mov
jnp
xchg
mov
out
in
lcall
in
push
cmp
jae
ja
movsb
mov
mov
mov
sub
fistps
mov
xor
js
add
nop
hlt
mov
sbb
cmp
sub
aaa
mov
inc
mov
iret
ss
dec
scas
popl
fsts
mov
les
scas
idivl
psrlw
ret
cmp
mov
imulb
sub
call
add
mov
data16
sbb
cmp
jne
mov
sub
xlat
add
stos
sbb
push
mov
scas
arpl
scas
push
out
mov
incb
call
jae
imul
inc
sbb
xchg
cmp
shll
stos
pop
enter
lahf
outsb
outsl
outsl
stc
pop
shrl
push
xor
sub
rcrb
das
lea
movsl
or
ljmp
icebp
into
in
or
repz
pop
mov
shlb
push
pusha
mov
jno
and
clc
dec
mov
pop
in
sub
daa
cmpsb
cmovae
movsl
mov
pop
adc
js
insl
cmpsl
sub
lods
and
mov
movsl
je
and
sbb
xor
aaa
pop
and
pop
popa
out
adc
xor
or
repz
popa
jb
sub
xchg
popf
in
ss
out
dec
pop
ret
mov
test
rclb
pop
xor
xor
mov
lcall
prefetcht1
out
cmp
popa
and
js
in
jp
loop
jl
adc
mov
loop
lods
mov
addl
out
out
test
pop
int3
out
inc
mov
addl
jg
into
orl
aam
sbb
xorl
dec
lcall
scas
popa
adc
getsec
lods
push
cmp
cmp
pop
lods
jnp
add
mov
xchg
and
outsl
mov
add
lahf
jle
sub
or
adc
push
add
mov
and
out
jns
pop
idivl
gs
dec
mov
repnz
adcl
mov
cltd
int3
bnd
mov
sub
push
sbbl
inc
cmp
ljmp
mov
in
add
xlat
inc
push
and
dec
ss
push
xor
xchg
insb
mov
adc
adc
push
outsb
test
and
xchg
arpl
push
ds
inc
jg
rorb
ljmp
clc
inc
sbb
xchg
out
enter
pop
mov
dec
pop
jmp
in
out
nopl
sub
mov
in
fwait
stos
outsb
dec
xchg
mov
dec
mov
cmp
inc
xor
cld
jbe
insb
push
mov
aaa
or
dec
and
sub
or
mov
and
add
stos
stos
rcrb
cmp
loope
adc
nop
cmp
adc
lea
stc
cld
mov
shrb
cld
push
and
loope
add
lcall
push
push
out
cmp
js
xchg
xchg
push
mov
inc
shlb
mov
ljmp
mov
inc
mov
js
incb
out
jns
pop
pop
imul
fistpl
int3
mov
inc
xchg
or
pop
out
fisubrl
mov
inc
das
xor
xchg
inc
scas
movsb
cmp
sub
mov
fmuls
std
pop
subl
cmp
jp
out
fisubrs
cmpl
mov
in
insb
mov
cmpsb
mov
mov
cmp
enter
mov
push
adc
stos
jo
cli
add
add
movsb
xor
xchg
dec
pop
push
jbe
aad
mov
cmp
jo
jns
loope
mov
cltd
mov
pop
dec
nop
mov
push
imul
dec
push
and
lret
negl
in
nop
mov
xor
jg
outsb
push
aad
dec
xchg
js
xor
daa
jl
mov
nop
fucomp
insl
cmp
outsb
les
push
stc
mov
movsb
std
mov
je
enter
push
addr16
repnz
fisubrl
das
lcall
push
fwait
inc
rcr
mov
mov
add
aad
cmp
cwtl
xor
jl
jg
push
pop
pop
daa
cs
adc
push
push
pop
in
aaa
adc
push
jp
push
pop
mov
xorl
fwait
into
mov
sub
push
outsl
aaa
dec
xor
jge
pushf
nop
push
pop
in
pop
ds
in
sub
inc
jae
enter
test
push
out
dec
std
insl
or
in
daa
iret
push
ss
addb
into
enter
cmpsl
pop
ds
ret
scas
cmp
adc
repz
jnp
in
lret
inc
test
jl
or
mov
lahf
dec
pop
dec
aas
mov
mov
push
xchg
push
iret
addb
xor
lock
cwtl
sub
pop
fistpl
shrb
pop
lods
cmpsl
insb
mov
cmpsb
mov
sub
mov
inc
push
adc
icebp
adc
ret
mov
mov
ss
mov
idivb
mov
cmp
loopne
jbe
xchg
xor
imul
pop
push
adc
dec
cwtl
push
jnp
jl
pop
sarb
jg
xor
mov
xor
ss
xor
xchg
xor
pop
ja,pn
ds
stos
mov
fcomps
loope
lcall
pushf
ljmp
fwait
mov
mov
scas
jle
jge
pop
inc
xorb
cmp
lret
mov
ja
cmp
popf
pusha
hlt
je
inc
mov
dec
wbinvd
test
mov
sbb
mov
js
bound
stos
imul
ss
das
push
inc
imul
out
ss
sub
nop
sbb
mov
pop
inc
jns
xchg
jne
dec
mov
cwtl
mov
mov
sub
xor
mov
ja
aaa
lods
cmp
scas
test
sub
mov
stos
stos
inc
dec
pop
push
insl
push
sbb
sbb
addb
into
jp
jbe
lret
push
mov
cmpsl
pop
push
jle
data16
mov
outsb
rorb
ss
dec
out
xor
or
out
cld
push
mov
mov
xor
pop
pop
mov
add
jp
mov
lret
insb
cmpsb
out
push
jnp
nop
scas
mov
and
out
xchg
in
testb
lock
inc
repnz
dec
daa
jne
rorb
ss
dec
push
xchg
jbe
dec
cwtl
ss
lcall
dec
mov
pushf
mov
sub
lret
stos
ja
fisubs
jp
mov
and
mov
pop
aad
ret
fcoml
addb
jo
jle
push
push
in
mov
mov
xor
cmp
push
ret
pop
push
mov
cmp
and
adc
push
xor
aaa
cmp
cmc
movsl
jno
pop
mov
mov
push
and
insb
mov
push
jae
add
pop
cmp
sub
or
pop
sub
cmp
les
insl
inc
bnd
mov
inc
jl
cmp
ljmp
scas
loop
pop
xor
ljmp
stos
pminsw
stos
nop
jg
popa
loopne
addl
nop
ficomps
daa
test
outsl
xlat
push
and
mov
sahf
inc
scas
roll
push
push
test
scas
in
ja
cmc
mov
lock
nop
sub
sub
cmp
mov
adc
loopne
es
movsl
imul
mov
int3
jb
movsb
sbb
cmp
mov
aaa
ljmp
and
xor
ss
sub
mov
or
call
setle
mov
sbb
mov
and
mov
gs
outsb
psubusb
xor
cmp
push
xchg
xchg
scas
loopne
mov
cmpsl
movsl
insl
lcall
pop
ja
inc
push
push
orb
pop
js
and
mov
push
out
cmp
js
orb
ljmp
mov
xor
dec
add
sbb
icebp
outsb
push
xchg
js
push
sahf
pmaddwd
inc
ret
xor
pushf
pminub
pop
xor
cwtl
movswl
pop
xor
xchg
shld
xor
lcall
xchg
movd
cwtl
stos
mov
xchg
movsb
jae
cs
or
fldt
xor
sbb
pop
or
mov
adc
dec
loopne
and
and
push
mov
and
add
mov
push
aas
fwait
and
mov
jle
xchg
pop
mov
aaa
repnz
stc
pop
mov
loop
dec
insb
push
push
adc
xchg
inc
push
push
in
popa
cmp
loop
jns
xchg
orl
out
xor
cmp
cs
add
jp
push
dec
in
int
dec
pop
push
sarb
mov
lret
pop
and
jnp
fbstp
xlat
jecxz
mov
or
imul
push
cmp
pushf
xchg
scas
push
xchg
xor
dec
sub
sub
ss
mov
sub
push
sub
pop
jl
sahf
inc
outsb
mov
fimuls
xor
pop
cmp
and
movsl
mov
cmpsb
repz
dec
jb
stos
paddd
sahf
lret
lock
fildll
dec
dec
mov
stos
pop
cltd
dec
nop
mov
mov
xchg
dec
sahf
cmp
xorb
push
inc
inc
push
mov
loop
sub
ljmp
pop
scas
push
and
lock
or
daa
cmp
push
cwtl
sub
push
mov
mov
inc
stos
aad
ljmp
scas
inc
imul
push
lea
ja
ds
mov
or
xor
ss
fdivs
bound
aaa
adc
out
cwtl
ljmp
pop
jne
enter
xor
ljmp
pop
out
scas
cmpsl
iret
por
cs
pop
mov
jb
rcrb
xchg
mov
cmp
mov
dec
and
call
fldcw
dec
movb
lds
subb
jmp
aad
mov
sbb
cmp
add
xchg
mov
or
aaa
sub
lret
inc
hlt
jbe
mov
dec
das
rolb
insb
movsl
mov
cmp
sbb
out
cmc
push
pop
mov
push
inc
fiaddl
mov
cmp
inc
sub
cs
pop
mov
xor
inc
in
inc
ss
jns
xor
jne
daa
popa
jae
lcall
mov
xor
ss
pop
insl
xchg
or
lcall
sahf
lret
mov
pop
insb
inc
sbb
mov
sbb
stos
mov
push
adc
ljmp
fwait
xchg
push
push
and
lret
nop
sarb
popf
sbb
push
lock
jmp
jle
adc
mov
mov
sub
inc
sbb
jle
mov
lods
call
push
lret
push
sub
lods
xchg
stos
outsb
daa
in
push
xchg
mov
popa
sbbb
push
cmp
push
aaa
scas
sbb
dec
sbb
outsb
ljmp
pop
sub
fwait
stos
aad
cli
push
mov
sbb
pop
xor
popa
mov
insl
push
dec
jg
jae
fbld
pop
scas
sub
movsl
mov
xor
in
jbe
xor
fdivl
lods
nop
dec
and
mov
cmpsl
cmpsl
jbe
inc
lcall
out
fwait
dec
int
cmp
insl
push
jbe
pop
sub
and
xlat
xchg
dec
ficoml
call
test
out
adc
mov
les
jbe
inc
lods
dec
adc
jge
test
cmp
cmp
sub
xchg
xor
sub
outsb
add
fwait
push
xchg
sbb
sub
mov
push
stc
ret
or
test
jp
gs
mov
into
ret
dec
pop
aas
sub
fcomp
aaa
call
xlat
xor
mov
or
mov
das
leave
cli
jne
push
xchg
jle
cs
imul
inc
je
push
ljmp
and
xor
stc
push
pop
sub
fwait
inc
pop
shrl
jns
loopne
sub
xchg
inc
movsl
insl
mov
mov
cmpsb
test
and
sub
mov
in
sub
inc
in
cmpsb
fbld
jge
mov
jno
cmp
inc
jno
test
rdpmc
mov
xchg
jbe
mov
or
and
sti
push
and
int3
pop
add
lcall
sti
out
jg
movl
dec
push
test
rcr
lcall
loopne
xor
xor
inc
daa
ljmp
mov
xlat
movsl
and
push
ss
dec
int3
test
cmpsl
dec
hlt
mov
mov
push
iret
mov
jb
jb
or
jo
addr16
pop
push
lret
lds
mov
out
sub
jnp
cs
mov
jae
scas
ljmp
inc
ss
in
loope
sbb
repz
push
and
push
add
xor
test
sub
addr16
dec
js
lods
jo
push
outsb
aas
popf
imul
arpl
jnp
inc
ljmp
fcomps
inc
cmp
dec
push
daa
push
jle
jg
lcall
dec
xchg
outsb
sti
xchg
fwait
xchg
cs
and
mov
add
inc
das
insl
sbb
or
mov
sti
mov
stos
pop
outsb
mov
inc
mov
js
jb
xor
call
add
jb,pn
outsl
arpl
scas
pop
fwait
xchg
push
hlt
push
popf
sbb
int
jns
ss
loop
cmpsl
std
js
cmp
loopne
mov
je
loope
cmpsl
aam
cmc
into
jae
push
jo
jae
mov
sahf
xor
lds
inc
push
fwait
dec
sbb
mov
adcb
and
mov
roll
xor
imul
dec
ja
jle
and
mov
jns
jns
mov
nopl
cmp
inc
test
je
jge
or
xor
decb
ret
jno
sarl
andb
pop
push
jp
pop
mov
push
push
das
rcll
testb
out
or
jns
jae
add
ret
clc
test
sbb
and
xchg
jbe
mov
fmuls
xchg
mov
pop
jbe
js
adc
daa
dec
push
mov
aaa
mov
nop
push
cmp
pop
lds
xchg
pop
nop
push
pushf
ficoml
add
ljmp
fistps
jo
xlat
mov
mov
imul
rcl
mov
jge
dec
jo
ss
out
sbbb
bound
cmp
mov
or
jp
mov
nop
fcoml
push
jle
mov
fwait
mov
xchg
pusha
mov
jb
out
jmp
orb
xchg
dec
xchg
jno
dec
mov
xchg
push
jecxz
jl
dec
cmp
mov
mov
pop
dec
ds
in
les
xor
cli
stos
cwtd
push
imul
cmpb
aas
cmp
cld
push
repnz
ja
jp
sarb
pushf
mov
add
cmp
ss
cmp
dec
cmpsb
stos
sbb
shll
sub
mov
cmc
xchg
repnz
sub
je
testb
stc
outsl
dec
outsb
out
sbb
fwait
xor
dec
movaps
imul
jbe
lods
push
outsb
enter
adc
lret
adc
sub
int3
int3
xchg
push
cmp
jmp
icebp
xchg
push
stc
loopne
adcb
mov
cmp
inc
cmp
fcompl
gs
arpl
cmp
cmp
pop
xchg
out
lcall
dec
cmp
dec
dec
jnp
jl
xchg
mov
jge
xor
jnp
mov
xchg
into
xchg
mov
divl
out
cmp
call
rsm
mov
shlb
mov
jle
mov
cmp
bound
jbe
dec
add
repz
inc
push
clc
add
aad
sahf
mov
outsl
rcrl
ljmp
xlat
jne
arpl
repz
push
pavgb
xor
push
pop
lds
adc
arpl
and
mov
push
sbb
xchg
mov
rorb
or
inc
nop
nop
dec
les
je
xchg
aaa
int3
rcpps
sub
mov
xchg
jb
lcall
mov
out
arpl
fsts
dec
xchg
stos
push
repnz
js
stos
rcrl
mov
xor
push
dec
pushf
mov
sub
daa
pop
xchg
xchg
js
rcrl
xchg
jno
dec
cli
pop
decb
jae
ss
pop
adc
cmp
in
sub
xlat
pop
xor
gs
mov
into
and
stc
jnp
sub
cmp
popa
or
cmp
mov
pop
inc
dec
add
call
xorb
push
push
std
xchg
pop
pop
dec
sbb
pusha
scas
push
mov
mov
stos
je
sub
out
ja
les
pusha
sti
aaa
mov
arpl
sub
pop
clc
cld
lret
aam
testb
xor
xor
cmp
jbe
out
push
push
mov
sbb
lahf
dec
ss
sub
inc
jae
xchg
scas
call
dec
jno
xchg
mov
jbe,pn
mov
jno
cmp
cmp
push
ret
and
subb
dec
sbb
inc
repnz
mov
push
sub
imul
mov
sahf
cmc
mov
adc
mov
loop,pn
scas
dec
jns,pn
xchg
scas
jmp
push
xchg
xor
sbb
lahf
push
scas
ret
pop
jge
lods
fdivrl
jle
xor
push
dec
imulb
or
dec
jae
and
mov
inc
xor
push
aam
ret
iret
rcll
cltd
inc
stc
negb
inc
lods
nop
dec
inc
xor
mov
roll
dec
or
jle
popf
or
mov
push
iret
inc
outsb
or
lea
xor
jnp,pt
into
adc
fcoms
inc
jns
inc
xorb
inc
stc
shrb
aad
fdivs
data16
push
sbb
xor
sub
inc
xchg
mov
test
sub
or
mov
cmp
cmp
je
scas
int
fistps
inc
lock
inc
das
mov
push
inc
and
jbe
stc
in
mov
xor
and
mov
js
xchg
mov
data16
test
dec
imul
je
or
mov
aaa
push
jbe
push
lcall
enter
fs
xor
jb
testb
js
aas
cltd
mov
mov
adc
daa
jge
in
les
fs
xlat
dec
test
je
test
pop
rclb
jmp
push
xchg
mov
sub
or
or
xor
sub
pop
lock
lahf
sbb
push
mov
scas
sub
jp
idivl
pop
mov
or
push
sarl
out
daa
hlt
iret
add
imul
xor
dec
mov
orl
cmp
xor
pop
cmpsl
lds
lds
fwait
cmp
xor
mov
daa
or
lock
je
movsb
sub
insb
add
xorb
pushf
xchg
clc
and
fildl
shrb
cld
pop
daa
sub
mov
out
out
sbbb
popa
xor
xor
inc
and
adc
mov
cmp
mov
imul
and
movsb
dec
dec
cmpsl
add
outsb
push
pop
mov
int3
mov
test
jmp
sti
cmp
adc
push
push
cmp
imul
pop
lods
movsl
jnp
cmpsb
iret
imul
push
mov
lods
iret
cmpsl
push
xchg
icebp
dec
into
mov
and
and
mov
and
aas
ret
dec
in
mov
pandn
mov
jnp
aaa
bound
mov
cs
push
xchg
fsubrl
insl
ss
sysenter
lds
pop
lcall
push
sub
xor
popa
inc
sub
dec
fwait
call
fadds
popa
in
psubusb
data16
jp
pushf
out
or
faddp
mov
cmp
in
cltd
pxor
jbe
ja
cmp
or
inc
stos
nop
inc
and
jbe
out
jne
je
sahf
std
mov
scas
je
pop
aaa
inc
sti
jmp
sub
push
pop
pop
add
stos
leave
and
outsl
clc
cld
das
in
or
dec
lds
imul
pop
dec
dec
in
ljmp
mov
cmp
addb
adc
in
rolb
or
mov
jl
cmpsl
push
push
cld
sub
sbb
mov
jge
imul
lock
scas
lret
out
push
dec
sbb
inc
lcall
jge
popf
cmpsl
test
sub
popf
cld
push
mov
into
loop
push
dec
and
scas
testb
negb
subl
in
dec
sbb
lahf
and
sbb
test
call
cmc
push
or
stos
cwtl
push
mov
and
dec
pop
dec
daa
mov
test
repnz
mov
pushf
mov
ss
cmp
mov
inc
lods
ss
dec
inc
push
cli
xor
ljmp
scas
ss
jle
cmp
push
in
je
in
loop
nop
mov
jne
xchg
in
push
push
ja
push
aam
mov
push
push
seto
cmovbe
dec
aad
and
sbb
jo
addr16
mov
scas
pop
push
and
push
pop
xchg
fwait
cmp
movsb
jge
or
out
dec
addb
push
shl
scas
pop
sub
jnp
cld
shll
cmp
push
out
lret
bound
dec
imul
jge
ficompl
ss
out
mov
push
xor
aas
jmp
jo
jle
push
dec
push
lods
or
out
outsb
ljmp
subb
lods
dec
fisubrl
push
js
lcall
insb
push
inc
push
cmp
dec
scas
push
popf
hlt
stos
aas
push
and
pop
inc
add
enter
sbbb
repnz
or
dec
ljmp
push
pop
mov
cmp
xor
stos
cmp
lock
mov
invd
cmpb
aaa
pop
fwait
mov
ja
xor
mov
jecxz
orl
mov
sahf
inc
insb
jecxz
imul
cmc
scas
inc
testl
outsb
shrl
sub
ret
jg
mov
outsl
mov
jo
les
aam
in
dec
mov
jp
insb
push
inc
jb
scas
push
loopne
sarb
cmp
roll
xor
ss
out
adc
dec
pop
fdivrp
inc
lcall
cmp
enter
call
inc
aam
ret
ds
shlb
insb
add
inc
push
dec
mov
scas
push
ja
aas
mov
subb
mov
adc
dec
ja
outsl
push
mov
push
xchg
inc
mov
mov
out
movsb
mov
lcall
sbb
loop
and
cmp
ss
dec
fistl
gs
cld
cmp
push
js
jbe
dec
cmp
nop
push
pop
ret
dec
fstl
les
movsb
jecxz
or
sbb
and
inc
or
aas
jbe
mov
push
outsb
jns
out
mov
jo
mov
xor
dec
subb
xor
xor
cmp
lods
cmp
xor
lret
mov
push
aas
and
dec
cmp
pop
push
inc
pop
pop
pop
xor
sarb
push
fidivrs
imul
xchg
or
mov
push
cli
stos
imul
ljmp
xor
cli
shrb
outsb
addr16
leave
out
sbb
outsl
inc
rolb
inc
lret
mov
push
push
and
stc
stos
xor
dec
test
fucomp
arpl
daa
movsl
pop
adc
dec
lret
mov
movsb
movsb
xchg
pop
gs
inc
push
iret
test
fildll
cmpsl
and
adc
inc
test
mov
movsb
push
ja
sub
movsb
lock
cli
lret
lcall
dec
push
push
push
adc
test
fisubl
imul
insl
xor
lds
adcb
ret
mov
in
or
pop
sbbl
scas
fwait
sbb
fucomp
popa
adc
aaa
dec
sub
test
lcall
gs
push
xchg
fistps
rorb
push
stc
fidivrs
ljmp
dec
and
cwtl
jl
dec
outsl
mov
push
inc
fs
and
sub
scas
dec
sbb
or
pop
mov
test
dec
mov
xchg
push
sub
ja
cmc
shll
sub
and
mov
and
imul
inc
or
hlt
imul
ja
lods
enter
cmpsb
aad
fsubr
pop
adc
xor
adc
jmp
insl
jb
movsl
push
or
sbb
mov
call
xchg
movsb
sub
stos
lcall
scas
lcall
mov
sbb
ljmp
and
and
pop
jl
push
ret
lcall
adc
push
push
stos
movsl
sbb
push
movsb
fstpl
stos
test
ror
stos
inc
lds
fisubrl
mov
mov
mov
mulb
xlat
repnz
out
inc
push
push
stos
mov
push
dec
stos
insl
shr
push
xchg
mov
dec
push
mov
push
testl
ret
scas
cs
in
imul
xchg
stos
pop
loopne
jp
push
push
insl
jge
sbb
imul
pushf
and
xchg
or
js
mov
cwtl
cli
dec
setno
cmp
in
outsl
push
xor
je
pop
adc
sbb
movq
dec
inc
mov
fnstenv
jb
outsb
or
shrb
and
dec
sbb
pop
std
cmovo
sbb
xor
test
cs
mov
insb
push
xor
test
fidivl
sub
dec
add
das
gs
aaa
jmp
cs
sbb
inc
inc
jmp
dec
insb
popa
xchg
outsb
insb
faddp
mov
xchg
mov
jp
and
push
sub
cs
jb
push
shrl
jge
scas
xor
jg
lods
daa
in
pop
cltd
or
jg
pop
jo
in
mov
arpl
and
cmp
faddp
pop
push
test
mov
stos
movsb
je
out
dec
xchg
xchg
push
lods
dec
sub
in
leave
inc
sub
ja
ss
and
mov
andl
repnz
xor
cld
push
mov
fisttpl
mov
pop
jmp
dec
push
cmp
dec
scas
inc
ja
sub
and
push
sarb
ja
cmp
mov
jbe
inc
sbb
out
aad
push
and
xlat
insb
sbb
dec
in
jno
dec
xchg
mov
into
scas
push
incl
push
push
mov
aam
loopne
pop
push
push
xor
rorb
lds
and
push
sbb
fcomi
stos
cmp
in
popf
outsb
jo
mov
shlb
outsb
xor
arpl
push
mov
push
faddl
outsb
aas
add
addb
fidivrs
dec
aas
fisttpll
iret
push
jb
imul
mov
aas
push
ljmp
xor
enter
inc
xchg
imul
push
jp
jg
push
iret
imul
rclb
cmp
push
cmp
inc
testb
hlt
push
aaa
out
push
xchg
neg
add
push
mov
mov
shl
push
or
jle
out
lods
push
sbb
hlt
push
mov
in
mov
mov
sub
aad
mov
pop
inc
mov
mov
in
add
xor
lret
xchg
adc
les
cmp
push
stc
adc
test
sub
xchg
sub
lret
aam
decl
sbb
or
repz
in
dec
mov
sub
out
lret
mov
push
ja
js
xor
mov
rolb
add
mov
stc
jle
xor
jg
xchg
inc
push
lcall
mov
inc
fidivl
or
inc
add
mov
cmp
fimuls
jg
add
adcb
fimull
pusha
pushf
push
jo
push
addr16
fistpl
aaa
push
jl,pt
push
push
cmp
cmp
xchg
pushf
mov
push
mov
cmp
mov
sbb
jge
scas
pusha
xorl
xor
mov
inc
clc
push
pop
das
pop
ret
push
cltd
jmp
into
add
ss
pop
inc
enter
out
iret
mov
xor
outsb
ds
dec
testb
andb
pop
lock
clc
stos
push
and
sbb
adc
cmpsl
cli
pop
mov
cmp
push
cmp
les
lock
fcmovb
outsl
jae
dec
stos
cmp
ds
inc
mov
inc
push
enter
inc
cld
js
stos
mov
sbb
pop
sbb
push
shlb
inc
insl
daa
mov
test
arpl
call
mov
mov
clc
leave
jbe
mov
popf
stc
push
mov
cmp
popa
sub
push
cltd
je
pop
push
inc
push
push
xor
inc
push
inc
fwait
lcall
sbb
cvtps2pi
cltd
fsubrs
jmp
push
push
fdiv
addr16
mov
bound
ss
adc
das
adc
pop
and
mov
push
jns
incl
sahf
lcall
push
cmp
xchg
enter
jge
inc
xchg
pop
shll
daa
andb
scas
or
test
ljmp
or
movsb
sub
addr16
pop
cmp
ljmp
jle
mov
sub
pop
ja
cmp
sbb
jge
movsl
push
mov
jle
es
in
mov
sub
in
sahf
ucomiss
sbb
in
dec
push
orb
scas
ss
push
aaa
jmp
movsb
or
test
ja
imul
lock
pop
mov
or
jg
sub
and
popa
test
dec
pushf
scas
jge
cli
dec
add
pop
jecxz
loope
mov
add
fdivr
jno
mov
add
psubsb
and
xchg
in
aaa
mov
sub
push
cmp
jecxz
fsubs
or
mov
mov
cli
lods
ss
push
inc
stos
insl
cmp
add
xchg
inc
addr16
or
inc
inc
or
std
and
mov
call
xor
enter
xor
push
aaa
lret
stos
stc
in
pop
movsl
ljmp
ja
fisubrl
fisubrs
cmp
jbe
ret
outsb
ljmp
aas
fisubrs
data16
cmp
cmp
ds
lea
ret
imull
pop
data16
mov
je
mov
call
nop
dec
nop
mov
mov
mov
push
fstl
popa
jmp
in
jl
loope
xlat
lret
xor
rcrl
dec
sub
dec
sub
dec
cmp
mov
leave
xor
inc
jl
lods
int
push
out
outsb
fcoml
xchg
push
and
das
and
cmpsl
ljmp
cltd
stos
xlat
dec
mov
es
adc
test
je
negb
xor
pop
test
push
jecxz
push
faddl
repz
cmp
fs
adc
push
jge
insl
js
push
sbb
add
add
pop
lret
jge
movsb
dec
mov
dec
jecxz
test
sahf
inc
jnp
push
cmp
fcom
mov
popf
mov
sbb
cmpb
mov
cs
sub
push
xor
out
jno
or
pop
and
icebp
mov
push
pop
iret
jl
xlat
adc
xchg
scas
daa
jecxz
sbb
je
in
mov
cmp
push
lea
das
scas
sub
cmp
aaa
adc
or
fisttpll
es
cmc
and
push
cli
ja
jo
jno
mov
dec
insl
and
jb
mov
inc
push
xor
dec
mov
xor
jle
das
jge
in
lret
ret
adc
pop
jbe
inc
mov
push
insb
cmp
jbe
mov
in
js
cmp
mov
jae
gs
call
push
arpl
das
neg
add
lods
mov
enter
and
mov
pop
cmpl
fistpl
out
pusha
sbb
inc
push
xchg
cli
cmp
cmp
pop
sub
xor
das
cmp
pop
div
sar
adc
fstl
push
into
mov
scas
ret
pop
push
or
xchg
adc
rclb
pop
jge
movsl
jl
stc
push
movsb
test
inc
in
rclb
clc
dec
pop
sbb
mov
mov
into
enter
mov
xchg
sub
add
dec
or
sete
sbb
shlb
out
sub
scas
ds
in
mov
xor
subl
ja
fxch
xor
inc
iret
lock
pushf
push
jns
in
out
push
cmp
rorl
add
bound
add
push
ror
push
repz
push
scas
pop
or
mov
add
fcomps
and
jns
dec
nop
fcoml
dec
push
idivl
mov
cmpsb
rdpmc
stc
xchg
push
daa
and
and
lcall
jne
ljmp
ret
cmc
ret
add
dec
outsl
xchg
dec
getsec
shll
or
lds
mov
dec
scas
test
jb
popa
cmp
movsb
sub
sub
lcall
decb
mov
push
push
mov
std
das
loopne
shlb
stc
scas
jns
push
test
pop
sbb
cmp
sub
and
mov
and
cltd
push
push
sub
push
rolb
sub
insb
negb
loop
popf
in
popa
in
repz
cmp
inc
icebp
push
andb
addr16
repz
lret
clc
mov
sub
sub
js
test
iret
daa
mov
adc
mov
cltd
mov
fimull
push
imul
rorl
bound
jbe
pop
or
das
push
mov
push
pop
decb
stc
inc
xor
jge
pop
xchg
lock
testl
imul
xor
add
and
aam
push
xchg
mov
invd
and
xchg
test
and
mov
dec
lret
mov
push
or
gs
or
push
mov
mov
mov
sbb
movl
stos
jb
aad
shlb
std
jg
xchg
mov
or
dec
cmp
push
jmp
jbe
repnz
push
inc
mov
and
adc
mov
mov
push
arpl
les
mov
mov
or
psubq
add
dec
mulb
mov
pop
mulb
add
insb
daa
out
add
dec
and
or
push
jecxz
cmp
xorb
out
push
mov
xchg
out
cmpsl
push
lret
mov
jl
outsl
mov
xor
mov
pop
aas
shr
mov
repnz
jbe
mov
xchg
iret
dec
push
lcall
mov
arpl
mov
mov
push
outsl
push
xor
arpl
setno
movsb
das
sbb
adc
jnp
repnz
sbb
lahf
cmp
push
into
std
out
cmp
xchg
cmp
stos
mov
lret
add
adc
daa
jno
int3
dec
cld
push
cmp
mov
imul
mov
xchg
das
mov
jne
je
or
and
xlat
mov
jg
inc
loop
push
movsl
loopne
xchg
imul
jp
push
nop
imul
mov
xchg
lea
loop
or
push
xor
popa
lock
push
imul
cmp
push
xor
movsl
iret
adc
inc
lret
sbb
loope
repz
inc
jne
stos
call
pop
scas
data16
test
shll
mov
pop
sub
adc
inc
dec
movsl
ljmp
push
fistl
dec
vcvtss2si
cmp
dec
repz
insl
mov
test
push
out
shlb
stos
inc
gs
dec
ficoms
sub
repz
sub
dec
sbbb
xchg
insb
adc
inc
push
imul
push
sarl
mov
pop
add
dec
mov
enter
clc
add
in
ror
add
rorb
test
adc
add
mov
push
xor
and
push
dec
fnstsw
push
dec
cld
scas
adc
lret
dec
cmp
xor
push
xor
lea
cmp
jge
sete
shr
adc
dec
dec
repz
les
adc
sbb
std
mov
jo
stos
mov
loopne
in
xor
ret
cmp
pop
insb
fwait
or
ja
ret
xchg
popa
cmc
sub
or
mov
cli
pop
xchg
or
adcb
jl
cwtl
adc
mov
push
fcompl
in
fisttpl
xor
cmpb
ret
dec
and
ja
push
dec
ljmp
push
popa
cmpsb
jmp
out
jbe
cmpsb
jmp
insl
int
or
andb
fwait
adc
sub
cmp
mov
push
pop
dec
dec
sub
fwait
lcall
xor
clc
in
jns
stc
popa
cmp
movsb
cmp
push
out
inc
mov
add
outsb
in
pusha
outsb
pop
imul
pop
movsl
movsb
xchg
aas
and
stc
sbb
sub
sub
mov
sub
ret
mov
xor
mov
mov
fwait
sbb
dec
and
mov
add
jb
subb
cmp
sub
test
push
gs
imul
sbb
stos
in
lcall
pusha
dec
pop
jns
das
cmp
sarb
mov
fsubs
push
mov
dec
jmp
xor
lcall
mov
dec
into
aad
stos
or
push
iret
jge
inc
jo
mov
popa
jo
xor
popl
lds
emms
scas
shlb
lods
jo
push
dec
sub
mov
mov
mov
aaa
out
cli
xchg
aaa
daa
mov
out
jns
fmull
pop
fdivrl
ss
stos
ss
jo
es
pop
hlt
js
incl
push
mov
cmp
mov
xor
fcmovbe
sbb
test
jbe
adc
lea
mov
dec
in
pop
dec
cmp
cmp
rclb
subl
pop
push
sbb
loop
inc
addr16
dec
or
cli
test
mull
orb
push
mov
sbb
lcall
push
adc
cs
jno
ficoms
xor
cmp
cmp
dec
xchg
ss
enter
ds
stos
cmp
and
jmp
cmp
jl
divb
lret
add
in
jnp
mov
xlat
push
inc
mov
jno
dec
mov
cmp
jmp
into
adc
cmp
and
dec
fwait
pop
push
pop
push
ljmp
push
out
ret
loop
add
add
aam
jo
fdivrl
push
mov
psubw
mov
jns
adc
jl
adc
inc
sub
xchg
cltd
or
scas
js
jns
js
fsts
sbb
xchg
push
xor
nop
or
or
mov
mov
inc
int3
insl
outsl
dec
xor
jnp
mov
xor
bound
ret
imul
pop
and
dec
aas
or
xchg
aad
addr16
pusha
and
cmp
js
fists
cmp
out
stos
movsl
xchg
cmpsb
jg
imul
xchg
jnp
jnp
sbb
ds
mov
shlb
pop
into
sbb
jo
fldcw
dec
sbb
pusha
enter
pop
pop
mov
outsl
ss
ljmp
cmpsb
mov
scas
scas
xchg
push
push
subl
jo
sub
and
scas
push
inc
pop
xor
out
adc
iret
nop
xor
sub
shrl
aaa
xchg
mov
adc
sub
out
push
sub
mov
mov
cmp
rcrl
nop
xor
jp
push
hlt
jno
pop
lods
push
push
das
scas
cld
adc
pop
jbe
pcmpgtb
or
out
ljmp
xadd
sahf
sbb
dec
imul
cld
cmp
sbb
pop
sbb
push
addr16
sbb
jb
pop
push
pop
ljmp
xor
push
hlt
push
in
sbb
push
les
pop
jl
mov
cmp
xchg
sbb
jl
sub
stos
xchg
imulb
daa
popf
imull
xor
jne
dec
sub
xor
xor
cmp
pushl
ficompl
int3
inc
fimuls
jmp
ret
jge
xorl
push
ljmp
jecxz
ret
jge
xor
je
fistpll
out
pop
shlb
adc
ds
sbb
aas
movsl
pop
push
inc
mov
js
cmp
dec
lret
inc
dec
mov
mov
fs
pop
sbb
cmpsb
fistpl
cmp
xchg
pusha
imul
mov
push
push
jo
mov
mov
inc
jg
xor
inc
adc
xor
cmp
cld
adc
fdivr
xor
subb
movsb
lahf
ss
mov
mov
mov
inc
push
push
cs
and
push
mov
outsb
stc
xor
repnz
jo
push
pop
or
sbb
push
or
out
push
inc
iret
ret
push
mov
cmp
mov
movsl
mov
push
and
and
cmpsb
cmp
rolb
jle
mov
jle
clc
mov
push
and
pushf
adc
jno
mov
add
and
dec
push
subb
adc
enter
xor
jo
push
dec
mov
mov
stos
adc
shrb
jns
jnp
aad
dec
dec
or
je
inc
out
movsl
cltd
lcall
rorl
mov
xor
push
pop
dec
test
jb
pop
mov
fdivl
popf
ljmp
lcall
xchg
mov
jns
xor
lods
je
inc
jp
push
sahf
mov
insl
jns
ja
out
sub
pop
outsb
and
fmuls
sti
fsubrs
jbe
pop
jle
push
mov
scas
xor
sub
push
mov
inc
sub
cmp
push
cmp
adc
fiaddl
push
and
fldt
out
jp
adc
xlat
out
push
jns
dec
mov
mov
fcoms
nop
inc
dec
mov
fxtract
stos
outsb
gs
mov
jnp
test
stos
jo
push
lea
or
pop
adc
mov
mov
je
insl
cli
sub
std
and
cltd
imul
fs
and
and
in
xor
ficoms
lods
push
push
xchg
and
ss
stos
mov
sub
das
jge
dec
test
call
jb
mov
push
xor
ss
ja
xchg
cmc
inc
xlat
in
jb
adc
jl
xchg
jo
sbb
mov
lret
mov
mov
cmpb
push
sub
adc
push
dec
mov
cmp
cmc
fcmovbe
xchg
cmp
dec
push
and
jb
sbb
aaa
mov
lret
cmp
loope
pusha
push
rcll
push
loopne
dec
in
shll
sbbb
jmp
and
fiadds
and
cmp
push
add
adc
push
scas
dec
mov
pop
push
aad
pop
je
inc
dec
mov
jb
xchg
movsl
sub
scas
sub
jnp
push
push
mov
aas
xor
push
cwtl
inc
mov
lret
add
test
inc
test
imul
inc
mov
cmp
mov
stos
adc
insb
pop
les
mov
dec
jne
das
sub
test
dec
dec
daa
pop
jb
dec
mov
bound
lahf
stos
fdivrl
mov
out
outsb
into
sub
scas
sub
xchg
add
dec
pop
xor
add
jbe
xchg
shll
xchg
out
fwait
inc
xor
mov
ja
daa
outsb
push
jl
or
lcall
push
push
jge
popa
faddl
pop
out
and
jo
iret
ret
jne
es
jmp
flds
inc
lcall
push
jbe
js
jne
xor
in
pop
fldl
ljmp
dec
pop
sahf
mov
sub
orl
mov
aaa
or
jns
movsl
and
inc
fistpll
xchg
adc
and
addl
pop
test
jecxz
mov
lahf
pop
inc
sbb
cmp
ljmp
into
sbb
push
cmp
adc
bnd
inc
movsl
cmp
mov
pop
sbb
xor
xor
daa
je
sub
add
pop
and
cmp
sbb
aad
xchg
cmp
jbe
cmp
stos
dec
stos
cld
xor
cmp
push
push
iret
inc
out
pop
lods
push
cmovnp
and
add
jo
aam
filds
test
jp
outsb
pop
cmp
mov
mov
jb
sbb
outsb
stc
aad
pushw
fnstenv
cmp
add
inc
cmp
sbb
jae
xchg
add
jecxz
jb
dec
push
cmp
and
xchg
outsb
icebp
pop
jno
enter
and
xlat
mov
outsb
inc
fldl
xorb
add
daa
mov
sti
call
and
test
fcmovnb
mov
mov
xchg
and
or
into
dec
cli
cmpsl
xchg
into
push
repz
mov
test
fsubs
getsec
and
stos
inc
xor
push
adc
sub
fdivs
push
call
cmp
addr16
bound
pop
cmp
push
push
repz
xchg
xor
jno
aaa
in
pop
jle
data16
mov
ljmp
cmpsb
sbb
mov
jge
push
adc
das
xchg
gs
push
inc
mov
lods
fwait
pushf
push
mov
stos
out
mov
cmp
outsb
dec
push
and
scas
sub
adc
pop
bts
pushf
orb
sbb
cwtl
pop
ss
lods
lds
outsl
ret
inc
push
cmc
and
adc
mov
pop
mov
sub
sbb
push
mov
push
lods
xchg
je
jno
sbb
sbb
jb,pt
pop
cmp
imul
jge
or
and
sub
stos
pop
aad
test
sub
or
test
sbb
insl
test
and
fdivrl
xchg
test
scas
ds
mov
inc
inc
stc
mov
aaa
pop
sub
pop
in
or
and
cmp
pushf
shll
loope
sub
mov
sbbb
jecxz
inc
push
cmp
popa
cwtl
push
ss
call
dec
cmp
push
ret
sbb
jl
pushf
in
fiadds
int
inc
cmp
add
ljmp
cmpsl
fiadds
pop
in
dec
fsubrp
pop
sbb
arpl
fisubl
sub
in
xchg
cwtl
rcrl
inc
out
jecxz
pop
cwtl
add
pop
sbb
out
std
mov
mov
fmulp
xor
sti
dec
and
mov
jns
jmp
out
rorb
and
pop
fwait
imul
mov
inc
fisubrl
pop
lock
imul
adc
and
imul
lret
call
mov
dec
std
ja
cltd
lret
repz
xchg
and
ficoms
jg
mov
in
push
adcl
dec
mov
orb
test
ficoml
or
ljmp
and
lock
jge
mov
cli
ljmp
cli
fwait
cmp
movsb
xchg
add
pop
cmc
imul
pop
pop
fisubl
pop
les
orb
rcr
mov
inc
jno
scas
and
add
in
ds
lods
dec
mov
repnz
jl
and
int3
xchg
jo
push
les
mov
adc
clc
jp
sbb
rcr
xchg
and
and
push
out
stos
insl
das
imulb
js
iret
dec
pop
iret
pop
jg
mov
fiaddl
xchg
mov
push
mov
int
ss
mov
xor
xchg
sub
mov
ret
outsl
xchg
jns
mov
int
jbe
jl
das
dec
cld
jecxz
mov
pop
pop
or
aas
sub
cli
roll
dec
ss
cmp
push
ja
and
cmpb
and
jae
jb
jns
push
out
pop
test
push
mov
sub
push
mov
cs
loop
xor
add
sbb
ljmp
xor
adc
sub
test
add
adc
fidivrl
ret
jae
inc
cmp
push
roll
filds
push
push
jp
stos
mov
das
sbb
pop
mulb
sbb
cmp
sub
js
or
pop
cld
xor
mov
ja
jne
clc
sub
aad
inc
jo
ret
xchg
scas
mov
add
push
test
popa
adc
mov
add
jb
imul
pop
movsl
mov
pop
popa
add
fstps
cmp
mov
jp
jmp
and
dec
cmp
dec
imulb
cmp
cmp
stos
push
cmp
lods
dec
and
mov
lea
inc
mov
mov
inc
dec
std
mov
add
cmp
iret
or
ja
popa
sub
scas
jns
cmc
sub
push
pop
push
mov
pop
mov
repnz
test
mov
subl
push
jae
aad
shl
in
outsl
mov
cs
fnstenv
dec
xor
push
sbb
adc
push
mov
data16
push
daa
push
cmp
jnp
push
mov
adc
push
insb
inc
lods
jno
lret
je
sbb
and
mov
dec
jp
lret
cmp
sarb
mov
cmp
mov
enter
cmp
outsb
cmp
enter
xlat
push
jb
add
cmp
cmp
cld
leave
arpl
mov
dec
cmp
pop
pop
mov
stos
ja
push
adc
jne
and
xchg
dec
dec
ss
mov
jge
xchg
push
jb
lcall
inc
inc
std
jnp
jp
stc
mov
sub
adc
dec
jnp
mov
ds
test
bound
inc
fwait
cmp
push
arpl
or
lods
adc
mov
push
mov
icebp
push
mov
lds
fidivrs
mov
pop
or
dec
jmp
add
stos
sub
insb
and
fwait
aaa
jecxz
scas
mov
imul
pop
test
push
push
mov
jno
add
or
sub
inc
and
outsl
add
adc
xchg
or
divl
jne
xchg
cli
fmul
sqrtps
daa
push
mov
lcall
adc
push
push
sbb
mov
inc
push
outsb
lcall
pop
pop
dec
and
dec
xchg
mov
ret
ret
sti
fidivrs
ljmp
jb
outsl
inc
xchg
repnz
pushf
inc
outsb
mov
or
enter
sub
or
clc
mov
mov
dec
ljmp
jne
pop
sub
mov
repnz
out
cmc
test
jo
push
mov
les
scas
ss
dec
sbb
clc
add
mov
stos
aaa
adc
jp
xlat
aad
mov
out
adc
push
stos
push
daa
xchg
adc
xor
and
xchg
jecxz
push
test
cli
inc
cmpsb
xlat
lret
lcall
aam
cli
pop
stos
xor
ljmp
jno
sti
push
lds
insl
cli
scas
jp
inc
pop
testb
jp
and
add
hlt
add
mov
stos
dec
inc
aam
icebp
hlt
jge
stc
xor
clc
fidivl
cli
xor
mov
push
xor
sbb
enter
jmp
jl
cmc
div
out
jp
mov
femms
in
mov
dec
pop
cmp
outsl
cli
lret
cmpb
imul
mov
push
subl
mov
push
ret
push
dec
stos
mov
pop
push
jle
push
mov
ja
mov
add
mov
mov
adc
pop
test
jo
sbb
inc
jne
insl
jmp
sub
push
jmp
les
or
iret
push
repnz
ds
sub
push
std
or
adc
icebp
repnz
inc
ljmp
aaa
jle
cltd
jle
adc
jp
popa
scas
dec
mov
mov
mov
dec
lcall
inc
insl
push
outsb
iret
imul
cmp
pushl
push
mov
rcl
jne
push
push
ss
sbb
insl
pop
out
test
push
fsubs
orl
outsb
fsubrl
mov
fsubl
scas
arpl
std
push
push
sbb
dec
repz
mov
sti
icebp
std
lea
push
add
clc
outsb
bound
clc
pusha
ljmp
outsl
dec
cmp
mov
dec
add
sub
dec
pop
fsubl
pop
call
jl
ficompl
emms
arpl
cmpsl
adc
push
jne
jnp
xlat
push
mov
xorb
dec
jge
cmp
sbb
push
pop
jnp
js
flds
inc
call
dec
xor
bound
mov
sbb
pop
stc
repz
fstpt
xchg
and
shrb
outsb
push
sub
syscall
lods
fst
push
mov
push
ja
insb
cmp
sub
lahf
or
push
ja
fiadds
push
aad
or
test
nop
cltd
sti
jg
or
xor
popa
popa
push
or
insb
es
enter
dec
aas
test
cs
sbb
das
popa
pop
inc
adc
mov
or
xorb
mov
pusha
or
adc
mov
rorl
fldl
or
push
dec
mov
jmp
push
add
sub
pop
sarl
pop
mov
sbb
xor
push
push
out
pop
push
stos
enter
mov
pop
mov
and
mov
and
enter
dec
dec
cmp
pop
dec
aaa
pushf
sbb
ss
push
xchg
icebp
adc
add
cli
cs
int
cmp
js
and
mov
outsb
jae
pop
out
adc
mov
imul
std
int3
push
sbb
shll
adc
shrl
scas
test
dec
shll
jo
jge
mov
push
mov
push
and
movsl
sar
lcall
aaa
jns
fists
pop
int3
dec
mov
icebp
mov
jnp
cmpsl
mov
mov
lods
scas
fwait
cs
inc
filds
bsr
mov
outsb
pop
das
test
mov
movsb
inc
xlat
adc
push
jb
jbe
cmpsl
shrb
xor
push
inc
mov
ja
or
xor
and
int
mov
lcall
les
pop
pshufw
lea
dec
in
cmp
cmp
jo
fimuls
pop
cmpsb
dec
xchg
ud1
bound
dec
mov
jbe
lds
mov
sbb
cmc
and
leave
inc
adc
jae
push
mov
push
push
inc
and
xchg
outsb
int
test
fists
add
inc
mov
popf
scas
mov
jne
stc
add
dec
out
fwait
pusha
pop
pop
js
and
adc
or
mov
adc
loopne
adc
push
push
hlt
mov
jo
outsl
std
jle
mov
xor
insb
or
xor
nop
push
jle
pop
mov
pop
xor
xlat
das
jbe
sub
ds
jb
adc
add
hlt
and
jae
fcmove
insb
adc
and
scas
ss
in
dec
jbe
pop
jns
popf
scas
mov
ficoml
mov
lahf
clc
lret
popf
sub
imul
mov
mov
lret
cmp
lock
push
and
push
and
dec
inc
dec
inc
and
cmp
nop
mov
cs
mov
cmp
push
push
and
jno
add
inc
and
bound
les
jge
sub
xor
scas
or
std
xchg
jge
rcr
jp
jns
jl
mov
adc
adc
je
xor
push
repnz
mov
imul
subb
push
into
jg
insl
dec
aaa
or
je
in
out
lods
pop
sub
jb
fdivp
dec
mov
cmp
push
std
cs
lea
lea
scas
jo
dec
jnp
push
bound
ds
xor
lea
mull
je
push
mov
aas
filds
das
fwait
xor
dec
cld
sbb
mov
xchg
add
push
popf
pop
mov
xlat
test
sbb
ja
dec
lcall
bound
jle
movsl
pop
mov
outsb
dec
pop
pop
cmp
fwait
xchg
adc
sub
or
imul
push
pop
pop
xor
ficoml
xor
fnstcw
push
pop
xor
je
aam
mov
jl
lret
mov
lcall
xor
fwait
jbe
sbb
ret
cmovle
popa
dec
adc
push
adc
cmpsb
jb
ljmpw
sbb
lcall
adc
cmp
ss
lock
inc
adc
in
rclb
outsl
insb
push
mov
js
xor
pop
pop
sub
and
pop
sbb
adc
das
cld
subb
cmpsl
imul
popa
mov
add
lcall
inc
xor
dec
xor
fdivrl
inc
sub
mov
aas
rcll
adc
xor
mov
test
cmp
xor
xchg
sarl
xor
insl
adc
lret
pop
inc
mov
cmpl
xchg
jno
pop
aam
push
mov
sbb
inc
pop
leave
jmp
inc
adc
or
push
mov
mov
push
outsb
jge
ret
sub
int
push
sub
adc
mov
mov
dec
xchg
daa
adc
jl
pop
dec
fwait
push
icebp
mov
add
cmp
nop
mov
pop
xor
out
mov
dec
lcall
addr16
fwait
cmp
inc
in
mov
sarb
shr
rclb
jno
dec
popa
sahf
sbb
sti
sub
jns
push
mov
and
cld
xor
cld
dec
xchg
cmp
jnp
xor
cmp
sub
pop
lock
sbb
ret
dec
in
insb
ret
sub
in
adc
push
sbb
mov
mov
jbe
mov
push
mov
push
fucom
mov
sub
pop
ret
sti
mov
sbb
loop
xbegin
mov
dec
into
lea
dec
adc
lcall
mov
mov
sub
andl
outsb
outsb
je
jge
scas
jns
jno
xlat
mov
pop
add
repz
pusha
and
cld
into
movsb
lret
sbb
fsubp
mov
dec
cmp
jp
jl
lahf
jns
push
sbb
daa
pop
movntq
add
mov
out
cmc
mov
xor
xchg
outsl
insl
pusha
clc
push
in
mov
jo
insl
scas
cmp
leave
test
and
pop
xor
lcall
mov
inc
ficoml
jle
push
mov
std
cmp
out
adc
pusha
adc
jns
add
std
outsl
xor
inc
jl
push
in
dec
mov
jl
pop
mov
dec
movsl
daa
pop
adc
inc
pop
adc
jge
xlat
repnz
pop
clc
cmpsb
push
insb
popa
sbb
and
or
push
into
in
add
test
or
mov
pop
aaa
inc
out
stos
ss
scas
dec
jbe
mov
cltd
inc
fwait
ror
roll
aad
in
in
mov
jp
push
jno
aam
sbb
ret
add
in
addl
stos
jg
jge
adc
pop
jle
adc
ljmp
xor
cmpl
fistl
pop
mov
pop
xchg
pop
and
mov
enter
mov
movb
sbb
scas
outsb
sub
shlb
adc
scas
inc
push
lds
mov
sub
data16
cmpsl
out
ljmp
adc
sub
jl
popf
pop
lcall
jne
dec
das
xchg
repnz
in
inc
lahf
xlat
repnz
cmp
notb
out
pop
xor
rorl
xchg
cli
adc
sbb
mov
outsl
jl
pop
sbb
and
adc
lods
push
push
xchg
imul
test
mov
sbb
sbb
cmpsb
loop
cmp
andl
cwtl
push
mov
cmp
in
or
mov
stos
loop
mov
nop
cmp
jp
rcll
ret
int
es
stos
dec
cmp
or
push
fistpl
cmp
xchg
mov
xchg
repnz
adc
stos
mov
or
mov
mov
push
cmpsb
mov
xor
push
add
push
ss
mov
sarw
sub
int
sub
mov
lret
sbb
dec
outsl
mov
adc
xchg
dec
inc
push
lds
loop
jbe
pop
mov
add
dec
movsb
xorl
cld
cmp
xchg
cli
mov
sbb
loop
mov
icebp
and
push
ret
jbe
xor
mov
test
sub
les
lahf
jbe
push
add
adc
pop
sub
lods
xor
sbb
cmp
stc
scas
inc
and
std
xchg
cmp
mov
popa
fildl
ljmp
mov
inc
pusha
icebp
lcall
adc
mov
xor
loope
sahf
jbe
sbb
inc
cmpsb
bound
andb
scas
inc
inc
adc
push
pop
mov
dec
jge
punpckhwd
xchg
stos
push
jbe
cmp
inc
cs
push
cmpsb
pop
or
lcall
inc
pop
ss
mov
scas
fwait
sub
bound
xor
adc
ret
sub
or
fdiv
sub
rclb
leave
jne
inc
add
jbe
lds
dec
adc
xor
jno
jno
pushf
aad
aas
sub
aaa
mov
push
repz
add
jno
in
lahf
aad
int3
lcall
loope
sarb
adc
pop
shl
push
clc
stos
mov
and
shrb
setg
js
sub
mov
popa
push
ret
dec
sbb
sarb
adc
push
stc
test
mov
movsb
js
fwait
mov
ds
fwait
popa
lods
mov
imul
jge
clc
jge
mov
icebp
aad
sub
sub
xor
pop
por
ljmp
push
insl
daa
aam
sbbl
jbe
frstor
jns
aad
xor
pop
inc
jae
popa
mov
aaa
fiadds
in
jno
inc
and
psubusw
jmp
cmp
int
xchg
inc
inc
jl
inc
scas
pop
loop
xlat
sbb
cmp
hlt
and
clc
sub
xchg
dec
lret
mov
ret
adc
mov
sbb
rcrb
aam
int
mov
dec
cmp
jmp
cmp
jb
cmp
outsl
xchg
js
mov
movsb
cmp
sub
jns
clc
push
lahf
sbb
sbb
sbb
inc
js
test
fs
pop
lcall
sti
scas
insb
popf
inc
popf
ret
adc
push
xor
mov
push
pop
adc
mov
pop
xlat
xor
push
inc
mov
jp
dec
dec
clc
aad
dec
push
inc
shlb
ja
pop
pop
inc
movsl
or
andb
pop
fs
jne
and
jne
cmp
lcall
adc
daa
mov
sub
jnp
ljmp
jbe
xchg
sti
add
inc
dec
cmp
lcall
push
shll
pop
push
jge
sbb
test
mov
pop
push
ss
imul
sahf
mov
jbe
test
lock
outsb
ss
aaa
das
push
mov
jecxz
jp
jnp
movl
cld
add
stos
push
lods
mov
test
cmpsb
and
lea
out
into
test
into
pop
push
test
cmp
fisubrs
cmc
cmp
sub
mov
test
out
ja
cmp
sub
inc
sub
and
fs
ror
gs
sub
arpl
mov
dec
sub
inc
inc
mov
andl
mov
pop
scas
imul
das
xchg
sbb
pop
push
adc
mov
in
cmpsb
leave
mov
push
jbe
xlat
scas
sub
sbb
xor
lods
repnz
dec
push
adc
jnp
loope
pop
push
cmpsl
and
fcomps
xor
gs
adc
or
and
inc
pop
and
mov
and
in
mov
dec
loope
xchg
cmp
mov
jbe
push
aas
pop
add
rorl
pop
lret
mov
and
or
subl
jo
xorb
pop
mov
orl
adc
insl
mov
mov
mov
inc
inc
jbe
jnp
scas
cmp
and
scas
push
inc
loope
cmp
orl
xor
in
pushf
sub
pushf
in
mov
dec
jns
mov
pop
jbe
mov
xor
push
xor
and
pushf
cs
dec
cmpl
dec
into
ret
mov
push
or
xor
jbe
fldt
andl
mov
decl
pop
mov
imul
pop
aam
ss
idivb
fsubp
push
adcl
scas
push
fimuls
or
xchg
sbb
push
push
mov
and
mov
int
icebp
stos
loope
mov
inc
fs
xor
push
xlat
cmpsl
push
fisubrs
sbb
lret
loope
jge
jg
push
push
popa
mov
lret
dec
mov
xchg
popa
mov
aad
test
insl
ret
mov
add
or
inc
ja
outsb
cmp
stos
cmp
and
and
jle
mov
xchg
ret
push
loop
sbb
ja
cmp
mov
adc
aad
sbb
in
loopne
lds
scas
pop
adc
add
loopne
mov
and
das
jge
mov
cmp
jp
orb
push
scas
cld
or
inc
dec
in
loopne
dec
jnp
sbb
push
push
mov
fwait
inc
rolb
mov
fwait
mov
jmp
das
xchg
mov
xchg
xchg
ret
fwait
jg
aad
and
push
sbb
push
or
jecxz
mov
cmp
inc
fidivrl
jecxz
loope
push
leave
ja
fwait
mov
push
jge
ret
mov
icebp
loope
sbb
aad
dec
mov
ret
cmp
mov
imul
and
mov
sub
stos
mull
fmuls
xor
fwait
inc
sti
inc
pop
sub
push
xlat
or
cmp
int3
sbb
sahf
imul
jns,pn
iret
adc
scas
pop
inc
xor
mov
push
adc
jl
aad
mov
negb
fcmovb
or
sbb
lods
cmpsl
mov
ret
xor
push
shlb
mov
add
cmp
cltd
jge
add
cmpl
sti
and
scas
push
cmp
mov
xor
push
adc
fidivrl
push
cmp
aam
pmullw
xor
jnp
enter
push
insb
mov
adc
cmpsl
scas
xor
push
movsl
stos
movsl
lods
loop
hlt
icebp
cmp
out
fisubrl
cmp
lods
push
or
psllw
fsts
or
mov
xchg
data16
dec
xchg
in
scas
cs
popf
jbe
movsb
pop
mov
mov
jbe
xor
aaa
call
loopne
imul
pop
xchg
test
mov
scas
mov
lods
cmp
xchg
sub
push
dec
sub
xchg
or
cmp
xor
mov
lods
fimuls
je
cltd
in
and
dec
mov
jo
cmp
inc
fcoms
aas
inc
cs
insb
inc
out
push
mov
or
inc
push
mov
scas
jo
dec
inc
dec
add
dec
aad
pop
out
mov
pop
movsl
pusha
mov
pop
jecxz
push
insl
insb
dec
inc
dec
xchg
lret
fistl
frstor
scas
dec
out
mov
xchg
xchg
adc
sub
fiadds
inc
insl
push
mov
insl
leave
mov
jp
mull
jmp
adc
mov
dec
adcb
shll
ja
push
cmp
pop
popaw
lret
adc
sbb
cmp
jnp
sub
jae
cmp
lcall
xchg
scas
loopne
out
push
movsb
mov
mov
jo
test
cmovg
fucomp
mov
jecxz
inc
imul
inc
mov
ficoml
shlb
xor
sub
arpl
push
aaa
jl
in
adc
mov
cmpsl
ja
inc
or
add
setp
xor
xchg
lods
outsl
aaa
sub
fstpt
jbe
cmpsb
mov
inc
inc
ret
ljmp
dec
in
dec
xor
nop
and
inc
dec
stos
imul
push
mov
cmpsb
dec
mov
jp
sbb
pop
jno
aas
push
xor
aas
push
xchg
mov
lret
loope
into
test
fldl
ja
mov
push
aam
mov
movsl
lahf
pop
fstps
jb
movsl
or
mov
push
cmpb
mov
sbb
dec
imul
push
cld
jp,pt
cmp
out
outsb
fmulp
jns
or
xor
into
dec
xchg
adc
inc
xor
push
movl
add
dec
aas
pop
xchg
dec
cmp
jg
in
stos
movntps
arpl
mov
inc
xor
das
adc
inc
in
jecxz
sub
lahf
pop
cs
cmp
cmpsb
inc
ret
imul
ficomps
jno
push
std
lret
in
loop
das
movsl
xchg
lcall
xchg
jno
lods
sbb
pop
divl
and
arpl
sub
adc
cmpsb
pop
mov
jno
loop
stos
dec
sub
outsb
adc
xchg
xor
mov
sub
push
sub
ja
inc
mov
inc
xchg
dec
imul
inc
jmp
jo
mov
mov
fldl
aaa
imul
aas
mov
scas
nop
sbb
bound
mov
push
inc
dec
pop
ss
aaa
stc
inc
dec
push
ss
enter
bound
add
out
push
or
lods
insb
testb
inc
ss
imulb
pop
inc
das
pop
call
mov
push
add
stos
mov
test
jb
cwtl
lods
dec
in
cmc
ret
lcall
push
pop
mov
das
dec
in
push
cwtd
popf
push
shlb
cwtl
in
insl
sub
leave
orl
sete
inc
mov
jo
std
cmp
push
dec
sbb
jmp
hlt
pop
mov
jg
scas
add
xor
xchg
jg
out
subl
add
enter
xchg
jg
cmp
cmp
mov
cmp
scas
mov
dec
and
jge
sarb
lret
std
outsb
and
push
inc
inc
movsb
lcall
and
repnz
out
xor
jge
test
jle
aas
and
out
push
negl
mov
leave
jge
adc
mov
nop
mov
in
mov
push
and
xchg
xlat
push
mov
ret
popf
xchg
movb
in
push
pop
mov
ljmp
sub
xor
arpl
scas
inc
movsb
xor
push
das
xor
loop
inc
stos
out
pusha
das
inc
icebp
sub
dec
mov
cmp
inc
mov
adc
into
aaa
mov
aaa
fiadds
divb
orb
int
popf
int
lds
je
lods
repnz
dec
fwait
jo
bound
cmp
or
jae
lds
test
push
sub
scas
mov
pop
jnp
sbb
cmp
mov
pop
js
jns
push
scas
sets
cmp
out
fstl
cmpb
call
or
jbe
xor
inc
or
pop
and
insl
aas
cmpsl
icebp
and
sbb
sub
sub
nop
add
inc
imull
mov
push
ja
pop
cwtl
sub
aad
aad
out
lahf
push
push
pushf
imul
sub
jmp
push
pop
pop
insl
mov
ss
call
pop
pop
cmp
cmovge
xor
sbb
mov
cmp
jmp
or
mov
fnsave
addb
xor
mov
inc
cmp
ss
imul
lock
inc
fs
std
xchg
mov
adc
jg
xchg
xor
jle
clc
and
test
cwtl
or
in
mov
cli
inc
dec
testb
mov
daa
ficompl
jb
adc
xor
mov
mov
push
and
fidivl
sbb
or
xchg
sbb
cmpsb
test
push
and
cmpsl
dec
lods
push
fistpl
or
sbb
jb,pt
mov
xor
popf
fmul
cmp
jp
lcall
dec
fdivrs
gs
shl
repz
jle
inc
or
pop
in
or
cld
jg
or
xor
imul
xchg
mov
mov
dec
shll
ja
mov
lcall
xor
xor
je
lods
push
jge
inc
sbb
push
and
sahf
mov
mov
shlb
imul
idivl
sub
cmovp
scas
pop
std
stos
notb
and
into
cs
push
test
fs
loopne
push
out
or
mov
aaa
xor
add
rorl
push
jg
jmp
lods
movsb
inc
rorl
aas
call
cmp
enter
dec
push
add
fsubrl
push
pop
dec
and
int
and
out
and
cwtl
pop
cs
scas
fwait
jle
imull
mov
push
adc
mov
aas
sbb
in
test
and
lock
cmp
sub
lds
xchg
xchg
xor
sahf
push
cld
lret
and
gs
mov
mov
sbbl
cmc
cmp
mov
push
cs
mov
fs
mov
sub
and
jae
and
add
fildll
sbb
dec
push
enter
lahf
xor
iret
pop
fadds
roll
fs
scas
inc
push
push
xor
aaa
push
repnz
adc
popf
cmpsl
fisttpl
jle
ret
ds
fisubs
push
push
clc
imul
mov
xchg
repz
ja
rolb
dec
stos
pop
inc
movsb
jno
ret
cli
bnd
sbb
je
sbb
add
mov
xor
xchg
pop
dec
scas
fwait
test
mov
sub
sti
aaa
lods
push
pop
mov
push
stos
mov
pusha
movsb
and
inc
scas
cmp
push
ja
mov
paddusb
mov
imul
dec
pop
gs
xchg
pop
jbe
stos
outsl
push
xchg
sub
outsb
adc
fs
test
insb
stos
pop
sub
pop
ljmp
push
in
fs
jne
imul
shll
fisttpl
les
in
push
push
hlt
cmp
call
dec
jno
repnz
mov
ret
push
lcall
pop
inc
inc
lods
inc
sub
es
xor
negb
xchg
sub
stos
xor
fwait
aas
sbb
shrb
mov
xor
xchg
out
add
insl
cltd
sahf
call
inc
dec
jl
ljmp
adc
mov
lods
xchg
rolb
scas
sahf
movsb
fdivrl
jnp
xor
in
mov
mov
jecxz
pushf
popf
cmp
dec
lods
xchg
mov
ljmp
add
popf
mov
dec
add
into
cli
and
ret
sbb
shr
aaa
dec
xor
mov
mov
stos
pop
js
loop
mov
jecxz
cltd
ja
cmp
into
push
addr16
jl
lret
xor
ljmp
pushl
adc
sbbb
clc
jl
pop
aad
ja
cmc
imulb
rorb
out
push
xchg
out
aaa
push
mov
arpl
xchg
ds
mov
rol
dec
adc
sbb
lret
imul
les
jbe
push
push
inc
adc
sub
inc
dec
push
dec
addr16
test
das
xrelease
xchg
pop
sub
cltd
xchg
sub
sub
or
adc
in
test
icebp
popf
jo
and
add
and
inc
jo
push
gs
fstl
cmp
push
je
enter
adc
test
add
inc
scas
mov
cs
sub
xor
sub
cmp
mov
jo
test
hlt
sub
add
scas
mov
imul
push
push
mov
scas
insl
outsb
mov
add
pushf
lods
pop
imul
pop
jecxz
xor
lods
or
sahf
pop
lods
dec
push
xchg
mov
push
pop
and
mov
scas
push
js
mov
xor
pushf
lods
mov
add
xchg
pushf
mov
add
shr
jae
and
insb
xchg
fcmovbe
fdiv
adc
ss
xchg
fcomp
pusha
popa
fsubl
and
loop
insl
in
lret
pushf
mov
fcoms
insl
fisubrl
mov
out
pop
incl
cmp
pop
push
pop
dec
ljmp
mov
jnp
popa
int
mov
pop
and
lahf
mov
ljmp
add
dec
out
pop
jae
or
jno
mov
mulb
rorl
out
mul
aaa
jns
fcoms
int3
cltd
mov
pop
pop
into
cmp
or
js
push
or
subl
andb
cmp
in
imul
addb
imul
fnstsw
or
pop
push
mov
cmp
pop
push
jl
std
inc
cmp
in
je
pop
pop
push
mov
aam
mov
and
jns
pusha
adcl
fdivr
dec
jo
adc
mov
aas
scas
add
cmp
addr16
mov
push
data16
cs
pop
xlat
cmpsl
push
outsb
imul
je
sub
inc
pop
cmp
add
popa
add
xor
or
jns
cmp
pop
dec
ljmp
out
jecxz
fs
sbb
push
xor
shlb
stc
out
fcomi
mov
mov
xchg
negb
and
mov
mov
outsb
pushf
ja
fs
push
and
pop
push
in
or
insb
and
push
sbb
jo
negb
jnp
mov
push
xchg
ljmp
shlb
push
das
mov
jge
inc
or
lahf
stc
sbb
int3
das
mov
mov
pusha
mov
mov
jl
mov
jno
jb
push
fists
xlat
mov
mov
push
mov
das
push
imul
cmp
adc
out
stos
call
xchg
lock
insb
mov
enter
jae
add
divl
jecxz
idiv
nopl
shlb
mov
stc
push
inc
mov
xchg
out
jno
enter
inc
sub
cs
sub
mov
sbb
lea
mov
mov
sub
inc
or
mov
aaa
push
das
adc
inc
fidivl
inc
and
cmc
js
popa
or
dec
fimull
inc
and
loope
cmp
dec
bound
inc
insl
sub
mov
sbb
dec
mov
dec
lret
mov
lcall
ljmp
xor
hlt
mov
push
push
push
lock
xchg
cmp
sub
mov
and
imul
and
jb
jle
cltd
test
enter
and
push
pop
sti
jge
and
sbb
mov
ja
outsb
or
sbb
clc
dec
lcall
mov
clc
lret
cmp
xchg
or
mov
ret
sbb
mov
xchg
lcall
mov
cld
and
adc
mov
pop
mov
push
lods
sub
hlt
and
lcall
inc
jae
mov
iret
clc
cmp
loope
div
sbb
shr
mov
dec
scas
add
daa
popf
or
rcrb
je
cmp
in
lahf
jns
pop
dec
jge
push
ss
loop
mov
jge
cmp
jge
add
dec
or
imul
lock
aam
pop
jg
inc
xor
popl
add
lods
jle
mov
call
imul
repnz
pop
sbb
loopne
shll
fisttpll
push
in
je
test
int
sbb
xchg
pop
nop
fcoml
in
pop
test
lcall
pop
mov
and
pushf
adc
mov
fadd
inc
xlat
jns
rdseed
and
sbbl
out
iret
fisttpl
push
cmp
xchg
mov
cmp
push
pop
lods
jle
clc
jmp
shrl
dec
in
jl
test
scas
insl
dec
lea
sbb
mov
inc
adc
lret
bound
mov
adc
mov
mov
dec
push
jg
xor
push
mov
mov
inc
mov
xor
sti
adc
fwait
push
loope
xchg
push
adc
lock
jl
lret
jge
add
sub
leave
test
and
or
test
mov
cmp
stos
out
inc
add
lods
popa
jecxz
add
and
mov
popa
ljmp
jbe
sbbb
and
pop
or
cmpsb
inc
call
adc
mov
pop
loop
iret
push
push
loope
add
add
xchg
scas
mov
and
jg
mov
cmpsb
lret
add
and
aaa
aas
nop
cmp
ljmp
mov
xor
out
push
subl
mov
sbb
adc
insl
xchg
dec
sarb
inc
shlb
jno
mov
jns
ds
mov
or
sub
pop
lods
ja
data16
push
fiaddl
cmp
cmp
sbb
or
movsl
pop
xchg
mov
lea
mov
cltd
add
iret
sbb
pop
ss
mov
test
sbb
popa
adc
popa
cmp
repz
sub
fimull
adc
push
push
or
sub
cwtl
out
mov
lcall
nop
daa
and
sub
and
pop
repnz
push
les
movzbl
ljmp
imul
push
std
jge
pop
jns
push
cmp
mov
int
inc
nop
sub
insb
mov
cli
add
xor
mov
cli
xchg
push
ret
insb
scas
push
out
inc
stc
je
enterw
jbe
and
xchg
or
cld
dec
out
push
int
mov
xor
xorl
outsl
inc
fldt
push
sub
fstpt
mov
in
daa
iret
push
sbb
fucomi
or
int
lcall
jecxz
out
js
xchg
inc
enter
mov
mov
pop
mov
sub
pop
pop
imul
pop
pop
xor
add
cwtl
sahf
add
jl
xor
sub
cmc
loopne
orl
in
lds
adc
jb
stos
icebp
loopne
push
mov
repnz
dec
ja
clc
gs
mov
ds
lcall
test
lea
int
rep
pop
cli
lahf
jl
push
sbb
adc
fsubl
and
loop
jns
pop
push
jno
xor
out
mov
lods
mov
lock
fcmovne
rolb
xor
jl
mov
inc
and
cltd
inc
push
add
lods
lcall
cmp
xchg
das
dec
fidivs
inc
pop
insb
sbb
call
dec
jne
scas
insb
cmpb
cmpsb
pop
enter
dec
xor
lds
pop
or
fwait
rolb
mov
int3
sub
dec
out
xor
jl
jns
adc
adc
sub
jns
jge,pt
push
jmp
jg
clc
cmc
mov
dec
dec
shlb
lds
les
stos
mulb
fildl
xor
imul
rclb
fldt
or
mov
sub
adc
outsl
push
push
pushf
cmp
lcall
pop
shll
jge
scas
js
in
shlb
cld
ljmp
movsb
xchg
stos
cld
dec
and
adc
xchg
rclb
fisttpl
rcrl
hlt
push
nop
sub
insb
mov
in
jge
adc
and
int3
and
inc
jl
leave
insl
pop
test
ljmp
pop
out
fucomip
xchg
mov
outsl
jbe
dec
cs
push
fwait
ret
and
fcompl
jmp
push
pop
jmp
ja
xor
xor
xor
das
cs
frstor
sub
sub
sbb
mov
pop
pop
movsl
cltd
jo
pop
jmp
negb
inc
and
push
xchg
xor
xor
repz
das
mov
inc
mov
sbb
jb
inc
sub
out
inc
mov
mov
push
sbb
cmp
mov
adc
pop
jb
dec
push
lea
cmpsb
mov
int
lods
loop
mov
je
inc
mov
popf
jl
mov
neg
lcall
pop
in
pop
mov
or
adcl
mov
int3
addl
sbbb
gs
inc
loop
sub
je
xor
add
lds
lcall
mov
sub
inc
je
cmpsl
sarb
in
jp
fisttpl
mov
negb
das
cld
mov
fisttpll
push
lds
bound
test
inc
and
lret
iret
jge
push
test
push
inc
aaa
xchg
xor
jae
mov
xchg
dec
mov
dec
cmp
jo
push
sub
cmpsb
xor
pop
xor
cmpb
clc
rcrl
mov
and
mov
inc
mov
movsl
cs
push
and
ja
jg
mov
cmp
scas
test
loop
lea
xorb
stos
push
fcmovnbe
mov
jl
add
imul
enter
frstor
mov
repnz
mov
stos
ja
ds
mov
pop
ss
fidivrl
sbb
push
rep
call
shll
dec
shlb
add
xor
xchg
inc
out
jbe
daa
mov
adc
push
mov
mov
and
imul
and
fwait
xchg
lcall
sub
xor
dec
iret
sbb
pop
gs
xor
jno
aad
cmpl
divb
das
add
ss
stc
cmovle
pushl
jbe
cmp
aaa
data16
pop
mov
jp
test
aad
xor
sub
pop
mov
mov
dec
addr16
dec
mov
cmp
loope
adc
cltd
fdivrs
cmpsl
pop
popa
adc
adc
icebp
push
cmp
and
outsb
mov
xchg
rolb
lret
push
jmp
jbe
jge
push
lock
das
jmp
pop
andl
mov
sub
jno
dec
xor
xchg
idiv
call
insl
sub
cmpsb
out
push
test
aas
test
sub
iret
cmp
sub
ret
xchg
repz
daa
dec
xorb
pop
and
jbe
push
and
push
ret
dec
mov
ja
pop
xor
mov
cmp
js
mov
and
lret
dec
popf
cmc
neg
mov
push
pop
outsb
cmp
fldenv
call
mov
popa
mov
test
outsl
test
movsb
push
adcl
mov
mov
lods
and
mov
and
and
sub
pop
in
stos
mov
inc
fistl
int3
ret
dec
aaa
push
inc
cmp
js
jae
push
fcmovnbe
inc
mov
jl
or
jg
xchg
nop
and
subb
mov
andl
ret
into
in
jne
and
inc
orl
sbb
in
push
dec
cmp
mov
pop
pop
sub
pop
xor
or
aas
lret
mov
fldenv
push
add
daa
cmp
das
int
push
pop
aad
les
daa
pop
push
cld
in
mov
pop
mov
mov
ss
xor
pop
fwait
pop
pop
xchg
js
cld
jbe
stos
cmp
dec
cmp
les
test
fcompl
pop
push
bound
dec
mov
inc
ja
mov
out
pop
aas
pop
pop
aam
push
ja
js
sbb
xor
dec
stos
push
js
inc
xchg
nop
sti
shlb
out
and
repnz
insb
ja
aaa
pop
xor
or
mov
insb
sti
test
test
outsb
pop
sbb
mov
jp
test
and
jo
cwtl
popa
xor
push
and
mov
hlt
add
in
adc
adc
cld
sbb
sbb
icebp
cmp
mov
into
dec
sbb
mov
enter
dec
movsb
stc
in
hlt
addr16
cmp
cmp
lret
ss
fisubl
inc
sub
je
in
inc
pop
cmp
out
add
jo
dec
lods
jge
shlb
clc
addr16
pop
stos
nop
fwait
inc
mov
dec
in
push
ret
pop
mov
sub
dec
inc
js
scas
jb
sti
inc
fwait
jno
add
xlat
pop
inc
je
cmp
jbe
sbb
jo
sub
adc
dec
insb
std
and
fs
lock
push
pop
std
enter
mov
mov
cmp
js
in
test
jl
gs
xchg
jl
imul
js
hlt
stos
insb
pop
out
xor
xchg
fidivrl
fildll
cmp
xlat
std
ret
mov
fnsave
rcrb
jg
mov
inc
and
push
mov
div
dec
pop
mov
sub
mov
mov
jno
out
cs
aaa
cmp
hlt
lret
inc
scas
lods
dec
mov
dec
lahf
icebp
xorb
jecxz
inc
pop
jae
dec
lahf
push
or
push
stc
lock
mov
rcl
mov
push
fcom
fnstcw
mov
das
cmp
mov
fisubrl
push
popa
sbb
jb
cmp
in
dec
sti
mov
mov
aas
leave
mov
stos
popf
sti
inc
out
and
push
imul
adc
dec
and
divb
in
xchg
pop
pop
imul
insl
in
inc
shll
push
sub
pop
cltd
xor
dec
repz
xor
adc
pop
xor
jo
into
jmp
jbe
xor
push
lea
and
mov
pop
push
or
mov
xor
lods
inc
push
and
ret
outsb
jnp
push
cwtl
push
scas
cli
iret
jp
cmp
jg
cmp
add
dec
insb
mov
cmp
call
and
scas
or
cmp
sub
ds
cmp
cld
inc
aad
roll
push
cli
adc
cwtl
xor
outsb
sub
sbb
jmp
push
jl
nop
sub
int3
jecxz
andl
fisttps
test
stos
outsb
jne
ss
push
adc
divl
rol
jne
pop
maxps
mov
popa
inc
mov
and
sbb
pop
fs
in
push
xor
sbb
movl
jge
cs
insb
inc
and
into
pop
nop
xor
sarl
jbe
sbb
adc
mov
adc
cmc
test
mov
cmpsb
push
xchg
push
cwtl
inc
jae
test
lcall
jae
dec
xchg
push
mov
lock
mov
adc
adc
mov
loope
into
dec
jl
adc
add
test
push
fwait
bound
sub
sub
dec
bound
ds
leave
cmp
addr16
xor
add
cmp
lea
adc
popf
outsl
adc
push
xchg
mov
stos
push
push
dec
push
mov
push
dec
cmp
or
into
mov
push
or
lret
lret
push
xor
mov
outsb
jp
orb
popa
jae
jne
jl
into
ljmp
add
jne
enter
cmp
mov
outsb
pop
das
scas
xor
fldt
rorb
jb
mov
clc
xor
sbb
pop
and
or
cmp
jp
test
sbb
repnz
push
and
jb
movsb
pushf
inc
jg
clc
jno
out
push
cs
jg
push
inc
cmp
outsb
sub
test
cmp
aam
mov
and
mov
push
mov
mov
sahf
call
hlt
inc
pop
cmpb
in
mov
mov
mov
scas
daa
fwait
inc
fwait
add
xchg
stc
out
das
sbb
sub
popa
sub
dec
in
mov
push
dec
loop
mov
call
adc
jb
aad
mov
sbb
test
sbb
pop
jmp
cmp
sub
push
and
cpuid
mov
push
aad
lret
outsb
push
mov
gs
inc
jle
xchg
mov
inc
push
repz
data16
loop
popa
in
dec
pop
and
insb
xorl
push
xor
push
cmp
jbe
xchg
imul
or
dec
sar
jne
sub
sbb
outsb
repnz
outsl
jb
sub
mov
enter
mov
mov
jl
aam
xchg
pop
test
sbb
jecxz
jno
pop
adc
xlat
icebp
das
clc
std
loope
ljmp
adc
add
sbb
pop
push
outsl
rcrb
stos
inc
mov
pop
std
mov
mov
and
das
movsl
sub
jmp
jmp
inc
pop
xchg
push
dec
sub
cltd
lret
dec
fwait
sarl
xchg
pop
cmp
ds
sub
or
add
cmp
imul
dec
push
xchg
in
jmp
sti
cld
rorl
and
jnp
ret
adc
scas
call
movhps
cmpsl
arpl
int
jle
popl
call
repnz
sub
pop
pop
push
sbb
stos
out
dec
pop
lds
push
and
cmp
bts
push
push
lock
movsb
in
sub
ss
mov
inc
mov
outsb
add
mov
ds
inc
sbb
js
xor
daa
dec
xor
ja
or
js
jge
mov
sub
in
sbb
pop
xor
push
and
sbb
sbb
daa
jmp
stos
add
in
jmp
cmpsb
lret
xchg
insl
jecxz
mov
das
cmp
cmpsl
cmp
cmp
and
rolb
xor
inc
test
std
in
sub
cmpsl
pop
mov
stos
adc
popf
iret
das
lcall
push
int3
xchg
jo
fmuls
test
les
push
jbe
push
insl
mov
jbe
pop
testb
das
dec
pop
mov
cld
ljmp
jecxz
fisttps
outsb
inc
dec
vmmcall
mov
or
sahf
inc
or
enter
pop
and
mov
push
dec
push
jns
add
mov
sbb
mov
xor
pop
data16
pop
das
jno
jbe
dec
adc
inc
fcomi
mov
adc
sub
push
xlat
adc
pop
inc
inc
cmovle
sbb
lock
vmread
push
testl
sub
paddusw
jnp
stos
mov
mov
xor
add
in
dec
popf
push
stos
test
aam
mov
and
cmp
push
jo
xchg
aaa
sub
dec
lret
in
movl
inc
rorb
pop
into
ret
push
xchg
and
mov
mov
jl,pt
addr16
mov
cmp
mov
lret
dec
cmp
adcb
lahf
xchg
inc
mov
inc
jp
cmp
sub
stos
mov
scas
pop
ret
sbb
inc
push
push
pop
sti
add
pusha
loop
fcoms
adc
xlat
lahf
jmp
fidivrl
out
adc
jns
and
inc
imul
js
aad
mov
cmp
lock
jo
xor
fwait
mov
ret
mov
inc
sbb
sub
push
and
fs
dec
sub
adcl
pop
inc
ljmp
leave
outsb
sti
mov
sub
out
cltd
pop
mov
pop
out
sub
leave
add
lret
mov
pushf
xor
int3
into
sti
mov
shrl
sub
imul
mov
insl
out
push
inc
ja
cmc
xchg
or
add
bound
les
cwtl
negb
mov
gs
and
loopne
pushf
aas
mov
fidivrl
out
mov
lret
jbe
jecxz
jbe
cld
ljmp
scas
inc
xchg
data16
popa
cmp
hlt
and
xchg
cmp
xor
stos
fs
sub
popa
js
jmp
mov
stos
ficomps
andb
inc
sub
cmp
dec
xor
rorl
mov
dec
fiaddl
in
aas
sub
push
xchg
jnp
mov
pop
fs
xchg
pop
aaa
nop
cmp
push
or
or
push
adc
and
scas
daa
loope
mov
rclb
mov
inc
punpckhbw
shlb
sbb
xor
inc
sbb
fidivs
cld
inc
stos
aaa
adc
arpl
sub
enter
divb
xchg
push
aam
push
push
lret
mov
push
outsb
sarb
xor
les
mov
data16
jle
sbb
inc
and
pop
stos
mov
cwtl
ds
push
arpl
outsb
mov
inc
cmp
cmp
push
push
xor
inc
push
dec
jl
xor
cmp
cs
xor
push
fidivs
inc
test
sarb
xor
pop
lds
divl
cmp
out
repz
xor
outsb
cmc
jl
xchg
test
out
sub
add
sbb
mov
ljmp
fisubs
iret
dec
adcl
mov
inc
xor
rorl
data16
ljmp
ljmp
fwait
jne
xchg
fs
dec
in
pop
das
lahf
jo
add
push
inc
push
cmpsl
dec
addr16
xchg
lea
sbb
sbb
movsl
push
push
es
cwtl
inc
adc
push
test
fwait
aaa
fisubs
enter
adc
mov
loopne
ret
and
pop
fistpl
in
data16
sub
sbb
insl
push
loope
aaa
mov
inc
in
push
lret
or
dec
ss
dec
in
xchg
dec
pop
cli
cmp
popa
dec
mov
pop
mov
dec
js
mov
cmp
cmp
mov
aaa
adc
inc
xchg
outsb
out
jmp
jg,pt
push
stos
xchg
leave
lods
icebp
jae
divl
and
or
and
mov
in
xchg
jbe
inc
pop
push
pop
into
cmp
movsb
daa
mov
aam
mov
mov
mov
sub
aam
sub
jl
sahf
xchg
and
clc
jge
mov
stos
test
mov
pop
iret
sub
stos
push
jbe
test
loop
fsub
jp
cwtl
ss
inc
mov
aaa
sbb
das
lret
pop
adcl
cmp
pop
test
dec
mov
pop
mov
ficoms
adc
out
popf
je
test
outsb
xor
popf
inc
daa
sbb
xchg
sub
push
in
xchg
mov
pop
push
mov
inc
and
insb
out
je
add
jb
cmp
xor
sbb
xchg
xchg
movl
pop
nop
je
test
ss
xlat
fdivs
push
push
and
dec
out
push
mov
cmp
adc
jb
scas
cmp
push
aam
ret
ja
mov
pop
mov
xor
je
xchg
jnp
scas
xor
fisubs
out
pusha
pop
jg
dec
add
das
jno
mov
outsl
adc
sbb
lock
cmp
push
xchg
dec
clc
clc
aad
aad
dec
xor
mov
mov
inc
int
icebp
inc
push
mov
repnz
stos
mov
scas
pop
addr16
movsb
aaa
sbb
cmp
loopne
xor
push
inc
sti
inc
mov
sbb
jmp
adc
jno
add
fimuls
orb
in
nop
or
notl
sub
sbb
daa
inc
fwait
repnz
inc
outsl
jg
pop
popa
sub
daa
ja
les
imul
pop
movsl
test
mov
jo
cmpsl
pop
outsb
jge
or
xor
clc
xor
push
fadds
lahf
inc
xchg
inc
push
in
cmp
daa
mov
ds
icebp
subb
mov
daa
fs
pusha
mov
fwait
das
push
aaa
jge
jg
add
mov
aas
sub
mov
ljmp
push
jnp
xor
fidivrs
inc
shl
into
dec
js
mov
notb
mov
jl
shrb
mov
cs
mov
scas
or
push
dec
fidivs
add
imul
cmp
loop
mov
subl
scas
in
into
jns
movb
aaa
xor
push
stos
repz
dec
jno
lcall
inc
stos
adc
dec
dec
xor
xor
stos
sub
adc
or
call
stos
mov
jle
mov
aaa
push
fidivl
mov
jne
fldt
xor
test
cld
pop
mov
mov
jmp
push
jo
out
ss
mov
xchg
and
dec
jmp
stos
add
aam
pop
mov
lock
sub
scas
jo
mov
das
movsl
push
stc
test
xor
orl
and
mov
lret
xchg
das
pop
icebp
out
lcall
jbe
xlat
pop
fwait
adc
js
enter
and
in
mov
xchg
mov
pop
outsb
in
repnz
scas
repnz
stos
xchg
sarb
dec
dec
jge
xor
lcall
add
adc
ret
out
pop
subb
jnp
mov
inc
jae
je
dec
add
fimuls
push
lcall
jl
xlat
xchg
ljmp
jno
push
sub
sub
pmulhw
mov
scas
movsl
push
mov
dec
lods
xor
icebp
xchg
enter
cmpb
out
movsl
mov
popa
lods
dec
fcoml
push
mov
dec
jl
test
fisttpll
adc
push
das
dec
push
and
imul
adc
adc
mov
aad
xlat
push
jle
xchg
and
xchg
xchg
dec
pop
and
adc
and
xchg
and
pop
iret
pop
add
sbb
cltd
jbe,pn
cmp
and
cld
aam
daa
mov
stos
mov
jbe
jge
dec
addr16
mov
inc
jecxz
dec
pushf
sbb
xor
dec
cmp
and
dec
insb
mov
popf
popa
jecxz
xor
mov
inc
pop
and
imul
add
loop
cmp
and
mov
lahf
pop
ret
outsl
mov
das
adc
xor
cmp
cld
std
jae
hlt
scas
push
xchg
inc
xor
xor
mov
adc
arpl
scas
divl
shlb
push
dec
outsl
and
and
jne
insb
out
add
outsl
fcoms
add
add
sbb
inc
push
cmp
pop
loop
outsb
std
mov
loope
add
and
cli
xchg
mov
mov
jne
orl
mov
rorb
jle
adc
jp
lret
push
jmp
in
mov
adc
xchg
iret
cmpsl
xor
mov
add
insl
test
insb
inc
rcrl
addb
repnz
cmpsl
push
sub
movsb
fsubrl
pop
fisubrl
cmp
dec
and
scas
ja
mov
out
sub
mov
push
pop
ja
sbb
push
and
pop
jle
fwait
push
outsl
sbb
out
fwait
inc
and
pop
and
push
jno
out
mov
rolb
jp
xor
adc
into
jne
jecxz
and
xchg
jnp
iret
jp
push
push
shld
and
pop
sub
in
cs
sbb
daa
push
fwait
aaa
push
loopne
pushf
push
scas
sub
cmpsb
test
ror
icebp
popf
push
nop
sub
jno
sbb
je
pop
aad
mov
jge
jp
ljmp
jecxz
cs
cs
xor
jns
pop
adc
dec
cmp
and
mov
push
push
dec
mov
dec
nop
sub
test
imul
jae
ds
mov
pop
je
inc
push
lods
insl
cmpsb
and
pop
dec
sti
mov
movsb
aas
xchg
jno
insb
cmp
cmp
outsl
dec
push
je
lcall
loopne
inc
push
mov
cs
jae
lock
out
ds
mov
test
mov
shlb
mov
mov
inc
jno
out
mov
xchg
mov
and
xor
sub
adc
jns
int3
clc
jp
fsubrl
mov
cmc
cmp
outsb
and
fdivrp
push
fwait
das
pop
inc
in
out
sub
and
stos
mov
mov
je
sub
xor
cmc
pop
cwtl
or
or
imul
or
loopne
mov
add
dec
adc
push
xchg
jecxz
ds
mov
cmc
out
sahf
sahf
cltd
push
pop
or
jecxz
scas
idivb
jl
and
adc
dec
arpl
mov
div
jo
call
outsl
push
cmp
sbb
rcrl
inc
arpl
out
testl
ds
and
cmp
fcomps
test
sbb
add
test
xorl
test
inc
sub
or
adc
cmp
arpl
outsb
mov
or
cmp
fcoms
mov
jne
or
data16
insl
dec
das
push
cmp
pushf
nop
imul
out
scas
arpl
push
les
lods
or
xchg
movsl
inc
fistpl
mov
adc
out
lods
mov
nop
xor
push
jge
out
ret
insb
jge
ret
lret
pop
sahf
cmp
les
jg
pusha
dec
out
lcall
je
sbb
jnp
incl
xchg
add
inc
sahf
scas
mov
push
mulb
aaa
mov
xor
stos
out
or
das
scas
aam
cmp
nop
or
test
dec
into
jbe
ss
jnp
dec
pusha
fistps
jle
lret
fwait
mov
jge
test
xor
jns
fldl
sub
lcall
scas
lods
out
and
popa
lcall
push
aad
in
pop
cmp
sbb
nop
ficomps
fmuls
cmpb
xchg
adc
stos
fldcw
test
push
mov
push
push
jg
aaa
and
mov
xor
hlt
aaa
or
lahf
fidivs
jg
mov
das
jno
fwait
push
or
mov
das
add
arpl
xor
add
dec
pop
adc
cwtl
ss
xchg
xor
out
dec
ja
push
mov
repz
mov
bnd
mov
push
cld
fwait
xor
movsl
sub
jnp
lret
mov
xor
pop
movsb
pushf
jo
test
add
lock
lahf
in
ja
repz
push
lcall
lcall
cltd
and
jo
jnp
mov
scas
nop
cli
lods
xchg
popa
inc
test
movsl
or
or
push
jge
aas
mov
arpl
ds
adc
into
lods
mov
jno
jne
adc
push
rorb
mov
xchg
jno
adc
push
xor
imul
sub
sbb
sti
push
xchg
cmp
jae
and
imul
pop
push
pop
dec
aas
xchg
pop
jl
sub
or
jns
dec
mov
mov
add
push
stos
outsl
jbe
mov
push
mov
xor
cs
pop
xor
ja
cmp
insb
dec
xor
inc
sarb
inc
jae
push
and
cmp
nop
icebp
ficoms
pop
pop
adc
pushf
ret
sub
xor
fisubs
mov
popa
das
movsb
push
cwtl
adc
mov
test
xchg
push
out
clc
jg
push
xchg
jg
jno
xchg
inc
cmp
inc
out
dec
sub
xchg
inc
lahf
jle
ss
fs
adc
mov
arpl
sub
mov
push
dec
or
lods
popa
in
cltd
je
shll
pop
cmp
xlat
fs
cwtl
sbb
xor
jle
dec
jbe
fildll
cmpsl
scas
cmp
cli
cmpsl
movsl
into
adc
mov
jno
popf
jg
jne
dec
ds
inc
jmp
sub
addr16
loop
mov
fwait
daa
nop
dec
sub
jmp
pop
subb
push
enter
jmp
sbb
sar
jge
push
sbb
cmp
enter
pop
mov
jecxz
xor
dec
clc
es
push
xor
cwtl
add
enter
aad
ljmp
daa
sbb
jge
sub
in
jbe
dec
mov
sub
xlat
add
xor
lret
cmp
ss
cs
mov
xor
xor
cmpsl
inc
bound
mov
jne
test
pop
sub
lcall
push
inc
xchg
dec
fwait
in
lret
pop
into
push
or
aad
das
adc
add
aad
pop
jp
mov
das
sub
pop
clc
jg
xor
sbb
pop
pop
imul
outsl
add
mov
mov
jns
adc
je
cs
or
out
sbb
sbb
ds
cmovbe
and
in
inc
sub
jge,pt
jp
dec
dec
mov
test
lods
and
fistpl
hlt
push
jb
cwtl
outsl
add
cmpl
loope
cmp
jmp
add
out
test
xchg
sub
and
popa
adc
push
jle
adc
dec
mov
jbe
mov
pop
imul
icebp
les
cmp
andl
ss
inc
inc
data16
jge
scas
inc
xor
insb
adc
jnp
out
xor
aaa
test
lret
imul
out
mov
dec
mov
pop
arpl
adc
sti
push
dec
fsubs
lcall
cs
aam
pop
in
push
jl
lahf
adc
cld
out
jae
xchg
lahf
rcr
pop
xor
loopne
xor
popf
pop
ljmp
mov
jne
movntps
add
icebp
int
mov
les
sbb
push
gs
mov
jns
dec
imul
push
rclb
adc
stos
add
dec
out
ja
nop
jne
fiadds
mov
jecxz
cld
enter
xor
mov
sahf
push
mov
cmp
adc
sub
lahf
inc
sahf
fisubrl
cwtl
pop
scas
cmp
inc
xor
sub
pop
jmp
dec
lret
outsb
cmpsb
stos
das
fidivrs
loop
xorb
sti
mov
push
adc
lds
cmp
shlb
add
test
sub
stos
push
xchg
in
aad
call
rcrl
mov
int
inc
cmpsb
arpl
dec
loope
xchg
fwait
dec
nop
xor
into
dec
out
imul
sub
add
daa
mov
rorb
add
call
daa
mov
out
sysexit
ja
lcall
xchg
in
loopw
inc
cmp
dec
mov
xor
push
jmp
ret
fistpl
add
out
fwait
outsl
arpl
into
cmp
mov
xchg
scas
xchg
mov
cli
and
mov
dec
pop
xchg
cmp
das
out
lock
scas
cmp
push
dec
nop
xor
cld
dec
ja
das
adc
test
out
test
dec
das
ss
loope
jge
mulb
dec
ja
add
popa
cmp
stos
les
xchg
bound
rcrb
add
mov
dec
dec
adc
movsb
jne
pop
stos
mov
sbb
dec
iret
dec
inc
fwait
mov
cwtl
xchg
jmp
xor
sahf
ret
inc
push
test
outsb
jbe
add
movsl
mov
pop
jmp
cmpsl
xor
ja
out
sub
loopne
aas
cmp
mov
jmp
sbb
nop
pop
das
lock
inc
inc
mov
sbb
inc
add
mov
mov
or
mov
cmpsl
mov
lods
mov
dec
inc
push
pop
adc
int3
test
fimull
std
test
or
pop
mov
cltd
scas
pop
aaa
xlat
xchg
jne
mov
jbe
int
out
add
lods
ljmp
xor
mov
jno
in
cmpsb
cmp
mov
repnz
pop
mov
dec
add
cli
xchg
outsb
push
inc
jg
movsb
int
jo
dec
incl
jne,pn
add
pop
mov
fs
or
sbb
pop
stos
jmp
jle
in
cmp
mov
push
fwait
rcl
inc
push
sub
rcrl
push
shrl
dec
mov
inc
cmp
cmp
sbb
cmpsl
movsb
xchg
xchg
ss
jle
cmp
sbbb
es
push
ljmp
scas
aad
in
dec
fs
lds
fstps
subl
aas
test
mov
in
jbe
int3
mov
sbb
or
add
cld
mov
adc
cmp
dec
push
jbe
sub
dec
xor
jg
bound
fwait
cmp
dec
dec
out
and
imul
cmpsl
lret
adc
nop
scas
ds
sub
outsb
xchg
outsl
inc
mov
cmp
ds
scas
aam
mov
and
ljmp
loope
push
lcall
cmp
loop
inc
dec
lock
push
mov
les
repnz
xor
cmpsl
dec
sub
sub
push
je
shl
dec
daa
mov
xor
les
mov
fldenv
stos
dec
cmp
dec
jge
xor
push
jp
out
stc
cmp
sbb
mov
pop
fwait
dec
xor
ret
cmpsb
push
mov
cmp
xor
push
scas
cmp
push
mov
jno
notb
xorb
test
push
mov
sti
loope
jo
and
add
fs
adc
lret
pusha
add
dec
sahf
jg
daa
adc
popa
imul
sub
sahf
popa
lds
cs
lods
mov
into
lods
xchg
sbb
loop
cmp
fldcw
inc
je
inc
mov
stc
push
dec
dec
xchg
enter
and
push
mov
xchg
out
iret
rorb
loopne
cmpsb
loop
pop
nop
hlt
jb
jmp
in
inc
pop
mov
adc
pop
mov
test
lods
inc
ss
in
xchg
jecxz
dec
fiadds
sub
iret
cmpsl
add
ds
inc
dec
adc
adc
sub
xor
xor
lcall
jl
aas
mov
sti
lret
xchg
xor
es
xor
adc
insb
fimuls
xchg
das
scas
push
sub
loopne
and
mov
dec
scas
ss
aas
pop
mov
std
and
mov
mov
mov
sahf
pop
mov
mov
stos
sti
arpl
push
push
pop
cmp
mov
and
adc
movq
jle
lds
clc
mov
adc
dec
mov
pop
cmp
popf
mov
movsl
pop
mov
aaa
bound
cmp
xlat
data16
addb
xchg
fidivrs
pop
mov
cmp
push
cld
jno
mov
ds
cmp
scas
outsl
xchg
cld
sbb
arpl
push
sbb
dec
fwait
ljmp
sub
mov
push
push
push
mov
push
ss
and
jge
ss
fwait
inc
mov
fidivs
rorb
sahf
aad
nop
js
lcall
mov
mov
out
jnp
sub
daa
addr16
scas
sub
idiv
leave
mov
cld
loopne
stos
cwtl
das
jae
ljmp
cmpsl
dec
push
les
xchg
add
mov
push
adcl
jmp
jle
xor
sbb
pop
sub
in
sub
sbb
push
sbb
fsubrl
stos
mov
fwait
sub
jge
adcb
ucomiss
adc
sbb
cli
pop
popf
pop
cmp
in
xor
adc
icebp
out
mov
mov
jb
sub
ret
das
ja
push
das
add
jmp
das
jne
sub
pop
mov
std
shlw
ss
lcall
cmp
out
aaa
lcall
mov
enter
ss
and
cmpsb
cmp
inc
mov
push
adc
imul
mov
cltd
push
ljmp
adc
jns
pop
xlat
dec
sbb
lret
jne
shl
and
aas
cmp
cli
ds
xor
mov
test
cli
int
mov
mov
mov
cmp
jl
enter
addr16
dec
mov
or
cmp
scas
sub
stos
testl
outsl
xchg
sub
dec
dec
bnd
pop
jp
aad
xor
jg
divl
mov
add
add
inc
int
iret
aad
inc
lahf
push
ljmp
mov
cmc
ljmp
push
xor
fwait
ljmp
push
dec
xchg
js
clc
dec
test
dec
inc
negl
sub
stos
icebp
mov
dec
push
dec
jns
test
out
dec
push
mov
roll
add
lock
seta
pop
jae
mov
ret
loop
outsb
or
mov
mov
frstor
push
scas
push
sahf
pop
mov
and
imul
pop
push
and
pop
pop
push
pushl
int3
and
pop
dec
sbbb
inc
pop
leave
push
stos
push
aas
lcallw
cpuid
lcall
das
sub
lret
sub
jp
cmp
test
pop
stos
mov
inc
pop
outsb
imul
inc
inc
rcl
push
loope
cmp
sub
push
dec
out
icebp
in
ja
mov
push
in
jne
popa
fidivrl
cltd
and
adc
js
insl
mov
add
in
push
aas
inc
aas
pop
int
in
cmp
push
push
mov
dec
dec
add
or
movsl
shll
push
sbb
sub
scas
int3
push
mov
xlat
mov
je
mov
out
xchg
cld
push
xchg
inc
ljmp
ficoms
bound
xor
fisubrs
loope
mov
push
push
and
add
in
push
and
notb
dec
fwait
out
push
lock
sti
mov
not
cmp
and
mov
daa
movsb
jnp
movsb
inc
pop
push
fs
adc
xchg
sub
insb
pop
in
popa
mov
mov
cmp
mov
xor
inc
das
and
imul
inc
push
mov
xor
inc
in
push
pop
test
sub
fs
add
sbb
lea
addr16
adc
mov
add
xor
inc
and
and
sahf
inc
sbb
mov
imulb
ret
jne
shll
testl
cmp
out
pop
xchg
out
bound
add
xchg
jnp
xchg
lcall
add
cmp
out
push
repnz
mov
fisubrl
lcall
fwait
add
dec
rcrb
stc
loopne
xor
fisttpl
mov
mov
je
adc
and
cmpsl
popa
cmp
sub
jmp
sub
mov
das
add
jle
and
cs
mov
xchg
mov
cmp
pop
and
mov
in
cmp
pop
jbe
jg
jo
mov
pop
push
scas
inc
sub
clc
sbb
mov
cltd
sbb
fldenv
push
cmp
pop
sbb
lret
xor
lret
dec
in
jnp
js
stos
mov
aaa
sub
insl
sahf
push
lods
inc
push
mov
mov
inc
and
push
aas
lcall
mov
ss
aaa
dec
outsb
dec
push
sbb
out
sbb
xor
sahf
fs
adc
fs
mov
mov
push
lcall
cmp
push
xor
punpckhwd
repz
das
push
out
loope
popf
lret
sub
or
fbstp
push
or
dec
lods
insb
into
insl
mov
or
jns
adc
cmp
out
insl
xorl
dec
mov
enter
adc
cmp
js
bound
push
rorb
jb
jge
stc
mov
and
pop
mov
fmuls
dec
mov
mov
add
fstpl
cmpb
incb
loopne
icebp
js
shrl
dec
pusha
pop
cmpb
sbb
mov
cltd
xor
loopne
xor
pop
bound
dec
and
sub
dec
dec
fwait
inc
and
fwait
sub
leave
xor
xor
dec
insl
push
jp
xchg
mov
aas
iret
cwtl
adc
lods
les
jp
adc
jl
and
cmp
push
inc
movsl
das
push
xchg
jge
sub
in
sbb
pop
pop
jle
loopne
jnp
jg
sub
adc
insl
jae
scas
je
rorb
jns
pop
jge
and
pop
outsb
push
inc
push
dec
lea
fs
jno,pn
mov
jmp
jns
in
mov
push
sub
test
inc
aam
into
popf
mov
mov
hlt
mov
cmp
push
test
mov
int
lcall
jmp
xchg
pusha
fcmovbe
rolb
mov
pusha
dec
and
push
xchg
enter
in
sub
sub
cmp
test
ja
adc
rorl
sub
mov
sub
sbb
lods
sub
scas
cmp
test
jl
xchg
push
stos
aaa
pop
pop
mov
shlb
inc
push
dec
dec
push
add
cmpsl
shrb
cmp
ficoms
cmp
push
pop
jbe
push
pop
ficoml
jmp
nop
aaa
jmp
jbe
xor
pop
xor
dec
stos
cmp
push
pop
push
out
std
cmp
aaa
lea
ljmp
mov
mov
cmpsl
sbb
or
popf
dec
add
ret
jo
bound
pop
fcmove
sub
sub
xor
ljmp
push
testl
push
insb
cmp
mov
cmp
js
mov
ret
cli
cmp
loop
pop
xorl
and
xor
rorb
pop
jp
mov
fnsave
jae
sbb
movsb
outsb
outsl
ljmp
shlb
xchg
cmp
mov
dec
lock
and
test
dec
mov
xor
iret
ss
inc
dec
add
negb
outsl
jl
or
cmpsb
adc
div
ljmp
test
and
xor
add
imul
aad
test
and
mov
clc
sub
and
and
in
and
mov
int
popf
shlb
movsl
adc
stos
jl
cmp
push
psadbw
jl
mov
mov
adc
sbb
jno
lret
lret
icebp
pop
insb
inc
xchg
mov
ja
mov
dec
xchg
loopne
mov
in
out
repnz
lcall
shll
ret
aaa
jns
and
xor
lods
hlt
mov
repnz
and
mov
imul
pop
pop
mov
cmp
mov
xor
ljmp
or
test
daa
dec
mov
mov
pop
pop
jns
orl
mov
int3
nop
cld
sbbb
test
mov
scas
ds
ss
pop
adc
outsl
test
out
sti
push
into
popf
stos
add
push
sub
mov
xchg
fs
fwait
jmp
inc
adc
jecxz
jg
js
jns
cmp
cmp
aam
cmp
les
push
sahf
lret
test
sbb
inc
outsb
pop
cmp
jp
pop
xor
orl
sbb
jmp
fwait
xlat
mov
aas
inc
lock
leave
ror
stos
hlt
fmul
jbe
mov
adcl
push
push
aad
xchg
mov
or
and
int3
push
mov
push
xchg
icebp
into
aad
mov
pop
jge
outsb
dec
ret
enter
out
xchg
or
sub
gs
push
inc
je
scas
shlb
cmp
test
adc
jl
or
sbbb
lcall
mov
and
lret
lsl
stos
dec
mov
outsb
ss
mov
fisubrs
cmp
sub
dec
pop
add
cli
xor
sub
imul
xor
lcall
push
lods
jns
pop
dec
mov
push
pop
and
test
fwait
add
push
add
enter
mov
inc
ret
jge
pop
sbb
ret
and
mov
cmpsl
pop
insb
lods
xor
movsb
pop
in
jmp
push
lcall
aad
stos
inc
lcall
xchg
add
sub
sbb
mov
xlat
les
das
mov
xorl
roll
sahf
insb
jecxz
mov
movsb
test
test
movb
mov
mov
sub
lods
std
mov
aas
repnz
insb
sub
jno
inc
xchg
test
gs
ud1
cmpsl
and
xor
fsubrl
xchg
inc
scas
push
test
sbb
jl
cli
loopne
jmp
loope
fsubrs
mov
sbb
add
mov
mov
fisubrs
jecxz
out
jbe
cmp
nop
les
outsb
or
fdivrs
out
and
pusha
icebp
inc
and
imulb
incb
xchg
xor
out
push
rcrl
jae
cmp
js
das
rorb
mov
mov
sub
push
lahf
outsb
and
aas
mov
adc
lods
sbb
loop
int
mov
test
scas
mov
cmp
mov
fidivrl
scas
lods
mov
jbe
rorb
aas
and
mov
ret
push
gs
pop
cmpsl
push
nop
test
call
or
cmp
sbb
arpl
pusha
xchg
sbb
nop
push
xlat
mov
push
arpl
dec
movsl
mov
xor
test
pop
lret
ret
pop
pop
jecxz
adc
mov
test
call
dec
shll
scas
int3
flds
idiv
dec
sub
adc
sar
mov
leave
sub
jg
lret
jle
jno
lret
movl
daa
sbb
inc
mov
loope
sub
cmp
insb
and
jne
fstpl
jle
push
mov
cmp
or
sbb
sti
fs
fdivrl
mov
ja
push
sbb
std
test
mov
mov
fsts
arpl
mov
andb
scas
enter
js
and
movsb
jno
pop
ret
pop
pop
mov
dec
sub
stos
insb
loope,pt
add
mov
inc
and
jo
inc
out
jl
jbe
add
pop
mov
bnd
add
pop
adc
ss
dec
xchg
mov
lahf
insl
mov
sbb
cltd
sbb
push
sbb
mov
adc
rclb
dec
jl
mov
jo
push
xor
fsubrl
xor
push
dec
dec
mov
cmp
adcl
xlat
mov
jge
mov
mov
sub
or
cmp
rcrb
cld
dec
pop
cmpsb
fstl
and
xchg
dec
inc
jbe
arpl
dec
cmp
adc
xlat
stc
lret
pop
jmp
dec
jno
jns
pop
test
int
lock
inc
dec
mov
sti
dec
xor
aad
mov
add
jae
sub
enter
sub
cmpsb
cmpsb
pop
sbb
xchg
xchg
push
mov
bound
inc
pop
insb
daa
test
pusha
movsb
les
inc
popa
push
pop
sub
popa
mov
adc
insl
push
out
stc
mov
jl
xor
cmpsb
sti
jmp
cmpl
inc
xor
adc
clc
sbb
sbb
mov
sub
dec
xchg
push
cmp
jg
aaa
push
orb
ljmp
leave
stc
mov
ret
loopne
push
pop
jb
movsb
mov
out
lcall
jle
push
lds
jge
inc
mov
adcl
mov
mov
adc
rdpmc
fwait
inc
xor
fwait
dec
in
cwtl
sub
jg
xor
out
lahf
dec
or
jns
mov
push
jnp
or
dec
jb
ljmp
dec
imul
int
je
rep
fbstp
add
outsb
push
test
popf
pop
sbb
mov
loope
inc
jl
mov
cltd
scas
mov
jbe
rolb
mov
jl
mov
jmp
out
popf
insb
cmp
pop
cmp
push
and
cmp
sbb
fstpt
bound
das
jnp
popa
incb
mov
lcall
out
and
int3
push
enter
and
push
fwait
outsl
lcall
jge
push
jecxz
loope
mov
gs
int
test
lret
test
in
add
mov
push
xchg
out
mov
pop
das
stos
adc
inc
test
sub
call
daa
stos
xor
fimull
and
jbe
sbb
cld
sti
mov
movsl
push
outsb
xor
movsb
iret
sub
out
pop
repnz
movsb
das
loope
xchg
test
cs
push
jl
je
and
lahf
into
das
jbe
jp
push
xorb
das
jp
ljmp
lret
incl
movsb
aas
push
push
pusha
fisubs
lret
push
inc
cmp
loopne
sbb
push
mov
lcall
data16
sete
mov
ja
push
call
dec
add
stos
cmpsl
dec
aad
lret
jo
out
dec
push
dec
push
dec
cld
sub
adc
mov
int3
pop
das
nop
sub
aaa
mov
fisubrs
popf
xchg
add
xchg
js
and
call
test
or
bound
pop
add
push
mov
mov
mov
fwait
or
mov
pop
scas
jb
mov
repz
jl
mov
jo
hlt
cmp
push
daa
or
mov
data16
je
into
sub
int
iret
adc
cmc
mov
inc
scas
adcb
and
lahf
adc
add
sbb
inc
jne
sbb
ds
outsl
xchg
divb
vorps
outsb
cmp
jp
cmpsl
cli
clc
pop
loope
or
arpl
ss
mov
adc
outsl
out
cwtl
sbbb
or
sub
sbb
aad
jmp
cmp
ds
insb
adc
out
aas
add
test
jns
jo
jg
push
leave
push
xorb
xor
xor
aam
scas
js
fsub
dec
sahf
cli
in
jmp
mov
cmpb
test
out
std
xlat
xor
dec
pop
pusha
mov
cmpsb
sti
push
mov
divb
inc
adc
push
add
pusha
jle
lds
push
hlt
hlt
cmpsl
xchg
and
push
inc
lret
dec
xor
mov
mov
mov
mov
movq
imul
imull
xchg
ss
fidivrl
xor
pop
out
loopne
out
lret
jns
in
xchg
dec
sub
testb
popl
sbb
push
out
dec
push
mov
icebp
js
and
or
rorl
fcmovu
cli
dec
rcll
mov
cli
push
rorl
add
sti
pop
outsb
xor
jmp
cmp
pop
mov
mov
setp
sbb
mov
lds
clc
mov
fadd
inc
adc
or
ret
inc
and
mov
and
and
imul
add
stos
push
dec
jle
iret
mov
movsb
and
dec
mov
lock
pop
lods
movsb
mov
jmp
mov
sub
xchg
and
dec
sub
push
ret
sbb
and
jb
movsb
xor
dec
andb
xchg
mov
popl
or
mov
mov
sbb
sub
push
jp
pop
inc
sub
xor
sbb
mov
mov
mov
adc
sbb
outsb
aad
pop
push
movsb
mov
inc
cmpl
sbb
scas
mov
xor
push
mov
push
dec
fs
repnz
enter
cmp
mov
lcall
fprem
xchg
jne
cmp
das
mov
popf
push
shlb
push
fidivl
jmp
inc
cmp
fdivl
mov
pop
add
mov
movsl
loopne
sub
sti
mov
mov
sub
cmc
xchg
test
push
add
jbe
push
jnp
pop
daa
pop
lcall
push
aas
nop
sub
fmuls
pop
and
push
out
mov
mov
ret
mov
leave
jp
movsb
jp
pushf
jo
aaa
adc
stc
outsb
inc
addr16
mov
jnp
shll
or
and
inc
int3
mov
cmp
adc
mov
xor
fadds
push
jae
das
sbb
push
outsl
cmovae
aaa
push
bound
fwait
je
and
shrb
cs
loop
dec
mov
jbe
in
int3
loope
and
push
test
imul
cmc
ja
imul
jb
push
jae
mov
sub
cmp
sub
fwait
sub
cmc
arpl
out
adc
pop
jle
dec
lcall
insb
sbb
mov
stos
pmullw
and
jmp
bound
or
add
nop
mov
mov
enter
dec
lds
popa
aaa
xor
test
push
push
cs
test
inc
add
cmp
lahf
je
push
cmp
dec
mov
fisubl
cmp
cmpsl
add
xchg
xorl
jle
mov
sub
outsl
lods
nop
lods
ret
cmp
pushl
mov
mov
sub
push
or
cld
lods
mov
xchg
ret
jg
test
cmp
movsb
rorl
and
lods
dec
movsl
imul
enter
test
mov
dec
outsb
mov
cmc
mov
ss
ja
fwait
sarb
dec
scas
pop
pop
jb
jl
out
xchg
inc
mov
push
sub
out
jno
jne
mov
dec
pop
cs
push
cmpsb
push
mov
push
mov
out
push
cs
fidivrl
cmpsb
icebp
or
sub
aas
in
inc
xor
push
sub
push
fs
jbe
out
sub
sub
push
lcall
pop
mov
lret
push
stc
or
dec
xor
scas
call
in
outsb
es
lcall
jae
and
mov
in
pushf
das
cs
ss
and
xor
mov
js
sbb
and
ljmp
outsb
call
outsl
jl
insl
pop
into
push
pop
adc
jmp
loope
sub
jnp
das
xor
jbe
and
sub
mov
and
ss
dec
dec
sub
mov
inc
test
data16
sub
movsb
sub
mov
dec
loopne
test
dec
push
mov
mov
sub
dec
insb
cs
js
shll
pop
push
imul
mov
cmp
mov
jns
in
pop
mov
ss
pop
sub
jno
int3
adc
adcl
sbb
nop
pop
dec
push
lock
sub
int3
jns
push
sbb
mov
loope
fcoml
adcb
jle
sbb
gs
sub
jl
jg
sub
sub
rorl
cmpsl
or
jo
stos
je
inc
lret
dec
outsl
sub
pop
sub
xor
ja
dec
sub
inc
push
pop
das
insb
ss
fstpl
arpl
shrl
test
ss
pop
cmp
cmp
leave
imull
imull
cmp
xchg
inc
stos
pop
stos
push
lret
in
xor
stos
jecxz
cmp
mov
data16
mov
sub
sub
pop
xor
jecxz
sub
sub
add
dec
and
lret
push
sub
push
xchg
out
aaa
int
fisttpll
xchg
xchg
jae
test
sub
out
out
mov
fisubrl
mov
pop
stc
push
outsl
add
daa
adc
mov
add
ret
push
push
aas
scas
mov
data16
fsubr
sbb
jmp
xor
mov
and
dec
xorl
popa
dec
sub
jecxz
out
lcall
stos
testb
sbb
stos
inc
loopne
xchg
lds
xor
sub
scas
pusha
fidivs
xchg
adc
push
sub
aas
test
cli
xor
dec
scas
ja
push
jo
icebp
inc
test
inc
stos
xor
xor
cmp
sub
scas
push
inc
rorl
push
push
dec
cmp
stc
das
aaa
iret
add
fldcw
jo
stc
stos
dec
inc
and
pop
sub
mov
sub
jo
je
aas
sbb
sub
test
dec
in
outsb
bound
mov
testl
cmp
fcomps
push
inc
push
dec
lahf
pop
xchg
mov
xor
nop
jbe
pop
scas
cmp
push
pusha
jbe
push
iret
pop
cmp
rcr
mov
int3
jg
mov
fwait
dec
test
cmp
mov
pop
cmp
fwait
push
call
cs
insb
push
popaw
pop
mov
stos
cwtl
dec
jbe
push
out
mov
sub
fisubrl
mov
jecxz
jns
test
test
cmp
inc
popa
subb
mov
mov
mov
or
int3
icebp
mov
and
cmp
std
loopne
push
aad
xor
and
fs
fwait
cltd
jecxz
hlt
negb
inc
push
out
addr16
push
loopne
and
sbb
lret
cmp
adc
mov
stc
pop
out
fwait
in
mov
lds
mov
insb
mov
cltd
scas
jae
repnz
push
sub
mov
addb
xchg
rcl
jno
sub
cs
mov
icebp
imul
outsl
rolb
stos
pop
mov
cmp
aad
sub
cmp
aaa
cmp
mov
movsl
stos
out
popf
data16
stos
mov
in
iret
fimull
pop
mov
out
xor
popf
xchg
popa
pop
sbbb
jle
fs
and
movsl
pop
add
rcrl
jbe
sub
pop
adc
hlt
in
outsl
mov
inc
adc
add
inc
gs
push
out
cltd
clc
int3
test
pop
and
jp
std
sbb
cs
push
nop
pop
addr16
inc
or
xor
xchg
sbb
or
sub
xor
movsb
dec
push
in
mov
out
push
negl
inc
sub
ds
jae
jne
in
outsl
or
mov
addr16
ja
leave
das
loope
xchg
mov
adc
push
xchg
sub
add
jno
push
add
popa
dec
jmp
scas
jg
jb
mov
cwtl
dec
ss
rcrl
dec
sbb
in
mov
jbe
mov
pop
push
mov
xor
stos
mov
lods
xor
imul
fwait
sub
jne
icebp
icebp
rcll
test
jl
push
add
cmpsl
ljmp
push
cmp
icebp
out
fmull
cmp
push
mov
mov
xchg
divl
push
nop
push
rcrb
loop
cli
add
push
cmp
popa
sbb
cmp
aam
xchg
sub
push
push
in
inc
sbb
or
pop
imull
dec
push
stc
pop
push
jno
or
dec
xchg
push
mov
sub
sti
cs
dec
jp
adc
inc
pop
mov
call
lds
inc
aam
inc
ror
add
push
sti
xchg
inc
push
aad
rcr
xor
xchg
and
into
lods
test
loop
add
xor
xor
test
jnp
or
sub
daa
in
xor
or
dec
scas
adc
sub
out
lcall
popf
add
push
dec
pop
clc
pop
cltd
cs
pop
xor
xor
dec
ficoms
scas
cmp
mov
push
push
mov
ljmp
mov
fs
push
in
cmp
mov
stc
mov
xchg
pusha
outsb
fldenv
cs
adcl
dec
adc
jp
cmp
fildl
adc
xor
stos
push
jecxz
out
cmp
into
repz
pusha
pop
cmp
lret
sub
mov
add
popl
test
out
cmp
cmp
jo
push
mov
ljmp
cmp
ss
adc
adc
push
bound
sub
cmp
sub
sub
clc
push
xor
gs
cmp
outsb
fwait
popa
test
dec
xchg
mov
and
out
push
cmp
sbb
jle
jae
push
arpl
mov
data16
gs
movsl
jbe
aaa
leave
fstl
es
push
das
ss
dec
jg
dec
cmp
loopne
pcmpeqd
push
pop
jnp
and
addl
mov
mov
cmpsl
inc
mov
imul
mov
movsl
out
sub
loope
xchg
ss
mov
sbb
jp
adc
inc
inc
or
sti
mov
xor
addr16
push
int
mov
push
test
dec
jle
sbb
mov
or
xor
cmp
mov
push
clc
adc
and
inc
mov
jbe
cmp
or
out
mov
sbb
ljmp
jne
pop
lret
je
mov
adc
dec
mov
add
stc
fnstcw
or
mov
and
lods
push
adc
mov
loop
sbb
out
add
pop
xor
ss
xor
or
xorb
sbb
jp
lods
popf
sub
sub
inc
das
mov
sbb
test
pop
nop
pop
cld
adc
lcall
push
or
enter
out
push
pushl
push
cltd
outsb
pop
jo
ffreep
inc
mov
add
cmp
xor
mov
jecxz
push
outsl
imul
push
sbb
mov
push
mov
repnz
mov
daa
test
ficoms
mov
out
jnp
add
and
outsl
add
sbb
je,pn
dec
xchg
out
mov
cmpb
shrl
dec
scas
js,pn
mov
stos
popf
pop
adc
jb
icebp
jbe
inc
pop
pop
fwait
and
push
add
jmp
in
pop
outsb
lcall
inc
lods
in
rcll
fldt
repnz
insl
cmp
xor
out
mov
cmp
sub
push
enter
sarl
mov
outsb
dec
aaa
cmpsl
sub
hlt
mov
fistl
call
push
adc
shlb
ja
les
in
cmp
mov
cs
cs
fcompl
cmp
dec
stos
mov
and
jne
stos
inc
push
aas
adc
pop
lods
dec
fwait
aas
in
js
iret
aad
repz
loope
xor
test
fdivs
sub
imul
outsb
loope
jbe
daa
push
sbb
test
and
lods
pop
xor
outsl
ret
lcall
or
sahf
dec
jg
push
ss
push
jp
mov
or
fwait
mov
mov
nop
cmp
data16
dec
push
pop
mov
dec
pop
jle
xor
jo
test
js
mov
push
mov
lahf
cmp
ss
lret
push
add
call
leave
loope
adc
sub
fcomps
pop
aas
adc
test
dec
push
sub
scas
sub
or
test
push
or
cs
sub
mov
ds
add
jge
insb
xor
mov
inc
jp
out
stos
cmp
stos
pop
mov
sub
sub
nop
sbb
mov
scas
movsb
stos
dec
cltd
loope
inc
les
inc
xor
ljmp
lahf
leave
mov
outsb
stc
and
add
vmovlpd
loope
fstl
mov
pop
dec
add
pop
push
fstpt
cmp
mov
sbb
dec
jmp
mov
cwtl
scas
out
mov
in
mov
or
in
aam
push
fldcw
icebp
or
adc
mov
sub
xor
aad
pop
fneni(8087
repz
xchg
daa
sbb
add
cltd
mov
mov
push
lea
out
add
jnp
imul
cli
fisubs
ljmp
addr16
loopne
cmp
push
xchg
inc
cmp
call
std
xchg
into
loope
stos
push
mov
inc
mov
ret
enter
jbe
mov
cltd
add
jp
aaa
outsb
inc
xor
std
mov
inc
push
scas
push
setp
pop
pop
bound
shrl
lds
pop
xchg
mov
and
das
xor
or
cmp
dec
lcall
cmp
mov
pop
aas
mov
in
push
push
fldcw
in
jmp
jl
scas
pusha
xor
movsb
sti
jl
in
adcb
pop
jo
push
jb
xor
jg
jl
movsl
cmp
out
loop
fcmovnb
mov
pop
mov
mov
or
and
dec
and
dec
std
nop
and
addr16
push
aam
push
mov
sarb
inc
rcr
and
lcall
inc
dec
xor
inc
jae
testb
ljmp
mov
pop
out
inc
repnz
cmp
ss
call
xchg
pop
cmp
fistpl
arpl
sub
mov
pusha
pop
js
mov
adc
push
fsubrs
push
push
negl
xor
push
mov
enter
mov
jbe
jo
inc
jp
dec
repz
sbb
mov
jp
icebp
lcall
lods
mov
bound
popa
ret
push
cltd
fimuls
paddq
or
outsl
jno
ds
and
andb
icebp
out
sbb
sub
sbb
sub
sub
loope
cmpsb
fnstcw
and
adc
mov
dec
movsb
and
push
outsb
dec
sub
pop
xor
call
enter
ret
pusha
scas
stos
out
cs
jg
lds
mov
data16
sbb
sub
cmp
xor
sbb
xchg
sbb
push
adc
ss
jns
ficomps
pop
insb
xchg
jmp
sbb
mov
out
add
cmp
xchg
repz
mov
and
shrb
je
mov
je
push
cmpsb
inc
and
ret
jns
pop
inc
push
sub
dec
pop
push
insb
mov
cmc
hlt
jne
or
dec
jecxz
mov
add
jbe
dec
or
inc
testl
adc
jecxz
int3
subl
adc
testb
lds
jo
dec
int3
xor
imul
scas
js
xchg
xchg
add
mov
xor
xorb
sbb
outsb
mov
je
adc
inc
sub
data16
mov
inc
in
sub
inc
icebp
inc
push
paddb
inc
sub
xchg
cwtl
cmp
shrb
push
in
out
mov
loopne
repnz
and
mov
adc
jge
pop
jecxz
add
test
push
xor
and
adc
lods
int
cld
sbb
jnp
scas
jnp
mov
test
lds
in
cs
pop
loop
imul
xor
mov
cld
fistl
add
adc
inc
xchg
mov
scas
sub
aad
dec
sub
adc
jle
and
sbb
push
inc
cmp
mov
scas
xchg
push
pop
xchg
and
test
lret
mov
push
test
ss
outsb
or
test
ds
data16
lods
out
sbb
je
ljmp
dec
movsb
inc
pushf
hlt
cmp
jae
xchg
xchg
xlat
mov
lock
test
mov
lcall
imul
test
les
mov
xorb
dec
push
sbbb
out
ljmp
xor
pop
fucomip
adc
scas
pop
repnz
inc
xor
sbb
inc
cmp
popf
fildl
bound
imul
fwait
inc
andl
mulb
in
xchg
adcb
cmpsb
xor
cwtl
xchg
cltd
xor
push
adc
dec
aad
push
in
cmp
xor
mov
pop
outsb
in
adcl
adc
sub
jl
cmp
std
mov
adc
mov
imul
scas
dec
imull
mov
dec
imul
push
jbe
nop
sub
jb
test
cmp
dec
scas
fnstsw
mov
testb
push
lret
outsl
sbb
add
shrb
xchg
adc
push
fisubl
pop
jmp
mov
lret
mov
inc
test
inc
shlb
cltd
cwtl
out
lcall
pusha
push
xor
loopne
pop
fnsave
mov
cli
pop
mov
call
aaa
movsl
adc
dec
in
pavgw
lods
mov
jns
inc
sub
out
out
popf
jno,pn
dec
push
or
daa
jns
lahf
ret
cmp
cmp
das
cmp
pop
mov
push
popa
lcall
sub
adc
ret
dec
cmc
inc
mov
pop
or
jne
sahf
adc
jge
andl
je
pop
cmp
sub
dec
data16
lds
fistps
stc
je
xor
sbb
aas
mov
sub
pushf
cmp
repz
add
cltd
jns
popf
xchg
dec
in
jge
jae
movsb
inc
test
mov
mov
cs
jp
dec
cmp
cmp
sub
inc
and
adc
mov
push
jl
sbb
adc
adc
push
push
add
inc
sub
test
xchg
cli
sbbb
les
dec
movsb
insb
inc
mov
xchg
aad
dec
std
stos
push
mov
pushf
mov
mov
orl
add
je
hlt
aaa
adc
shlb
sbb
push
cmp
testb
sub
ljmp
aas
lahf
push
cmpsb
push
stc
adc
mov
jg
scas
xor
gs
inc
andb
xor
dec
ljmp
lock
pop
jae
inc
pop
add
pop
or
repz
data16
or
dec
mov
add
xor
cwtl
insb
inc
inc
adc
jb
jp
jae
in
scas
clc
cmp
outsb
repnz
cmp
sub
setle
dec
sbb
xchg
xor
mov
mov
cmpsl
pop
push
mov
dec
mov
ds
sub
loopne
jno
enter
adc
mov
mov
setle
jp
and
cmpl
test
notl
xchg
lods
and
jle
nop
pushf
dec
cld
cmp
das
bound
inc
scas
lahf
insb
clc
ds
ss
mov
fidivl
iret
dec
rorl
push
mov
add
fcmovnu
mov
mov
xchg
and
dec
inc
mov
mov
jp
pop
std
lcall
sbb
xchg
popf
dec
jmp
xchg
push
adc
sbb
adc
jns
arpl
and
mov
xor
sub
mov
and
cmp
sub
les
push
sbb
mov
jbe
cwtl
sti
andl
mov
fld
cmp
push
jmp
nop
xor
mov
push
adc
sahf
stos
notl
push
and
push
dec
mov
lcall
test
push
sbb
test
cmove
fucomp
mov
mov
sbb
cs
pop
dec
rorl
inc
add
or
cli
dec
dec
sub
dec
loope
jecxz
repz
test
mov
call
mov
mov
mov
xchg
in
outsb
test
xor
push
adc
mov
movsb
mov
cmp
and
inc
lret
adc
rol
sar
pop
arpl
jb
lret
mov
je
push
rcrl
xchg
out
jmp
subb
pop
xlat
insl
xor
lret
out
and
clc
add
ret
adc
aaa
dec
icebp
or
mov
fidivrl
gs
mov
cmpsl
dec
andl
push
mov
inc
push
cvtsd2ss
inc
cmp
lret
imul
scas
test
xchg
mov
add
lds
loope
fstpt
push
cltd
repnz
dec
in
sbb
sahf
or
sbb
or
ret
ljmp
dec
xchg
fidivl
aaa
aaa
pushf
xchg
mov
adc
push
aam
outsl
push
jns
dec
js
pop
inc
fisubs
pop
xchg
add
ficompl
dec
inc
addl
mov
jp
mov
outsb
scas
mov
pop
mov
call
test
or
push
dec
fisubrl
mov
ret
pop
lret
cld
das
movsl
sbb
jno
add
in
ljmp
push
cmp
xor
jne
imul
lahf
outsb
cmp
inc
and
icebp
pop
inc
inc
bound
int
sub
pusha
test
sub
outsb
scas
movsl
imul
lea
mov
xchg
sub
sub
mov
inc
movsb
sub
mov
inc
jb
mov
lcall
imul
dec
adc
cmp
test
data16
cmp
fwait
repz
pop
or
sub
xchg
push
push
ret
adcb
xor
scas
jno
sub
mov
in
dec
xor
push
fidivrl
adc
and
or
jno
sbb
scas
jge
adc
cs
in
mov
loopne
xor
inc
repnz
xor
ss
pop
insl
push
out
int
dec
mov
sbb
cmpsl
sub
cs
pop
movsb
scas
cmpsl
adc
inc
add
push
aam
sarb
popa
sbb
shrl
test
push
sub
jecxz
stos
das
push
in
fists
and
or
xor
push
add
jmp
mov
and
sahf
inc
in
jo
sub
scas
fwait
jl
cmp
inc
mov
and
mov
cs
adc
cmp
and
ret
add
icebp
push
or
or
dec
or
pop
push
cmp
mov
pop
fbld
inc
lcall
scas
nop
mov
push
fucomi
pop
fldt
cmpsl
and
popl
das
scas
das
mov
lods
push
sbbl
sbb
xor
ss
data16
fimuls
mov
fwait
xorb
div
mov
lret
mov
and
aas
and
shl
sahf
jnp
cwtl
shll
in
dec
in
pop
push
test
fwait
mov
push
je
add
rorl
and
adc
insl
insb
and
jbe
xor
call
lods
fists
ja
pop
sbb
popa
cs
cmp
loopne
mov
stos
pop
insl
ss
xchg
push
ds
mov
pop
mov
dec
mov
cmp
nop
sub
jl
in
into
pop
dec
push
add
mov
adc
sbb
into
clc
and
nop
scas
add
cmc
loop
adc
fldt
sub
sbb
push
xor
scas
fs
cmc
push
jae
test
xor
in
stos
rdpmc
cmp
call
inc
les
std
push
or
push
icebp
push
xorb
jl
lock
cmp
test
leave
int
jg
sub
xor
iret
imul
cmp
lret
mov
pop
pusha
push
cld
adc
jno
aaa
fisubrs
dec
sub
cmpl
ss
lods
fs
push
adc
sbb
inc
inc
or
hlt
clc
ficomps
cmpl
add
mov
mov
fsubs
shlb
pop
insb
dec
inc
pusha
push
jl
dec
add
sbb
dec
inc
jno
and
or
mov
push
repz
insl
enter
push
cmp
pop
lahf
stos
sarb
negl
cs
test
test
cli
fsubrs
ljmp
xchg
inc
adc
scas
push
lock
and
jmp
or
adc
pop
call
fstps
dec
jo
loop
dec
and
dec
movsl
inc
in
mov
repnz
mul
aas
icebp
sub
jmp
mov
xor
dec
movsl
es
or
out
inc
jle
dec
ss
int3
dec
sub
pop
dec
mov
jg
lock
mov
lods
mov
or
cmp
jbe
pushf
dec
push
sbb
or
addr16
out
cli
push
mov
dec
sbb
dec
in
jge
sbb
repnz
popa
aad
xor
jmp
mov
out
orl
jne
cmc
inc
jno
push
push
outsb
outsb
pop
mov
cmp
ds
pop
sbb
adc
dec
enter
or
sub
ss
or
mov
mov
lock
xor
xor
cmp
insb
pop
test
int3
inc
adcl
loop
push
mov
mov
dec
das
push
xchg
mov
bound
cmp
pop
inc
notb
hlt
data16
orb
pop
rolb
adc
aam
push
dec
popf
jno
push
fucom
xor
jnp
inc
das
cmp
mov
mov
cmp
sbb
shl
cmc
sub
in
imul
js
pop
push
push
and
lahf
daa
call
je
notl
sub
mov
mov
push
push
dec
and
xor
lcall
push
and
dec
outsl
add
inc
cmp
xor
stc
sar
adc
out
sub
and
xchg
nop
xor
jecxz
je
pop
cmp
outsl
movsl
push
notb
flds
lret
dec
dec
insb
repz
dec
ss
xchg
testl
sub
or
dec
adc
movsl
rol
dec
pusha
or
or
jae
jge
sarb
mov
fistl
sbb
push
adc
jns
or
aas
ds
xchg
jge
xchg
xchg
jg
pop
xor
std
dec
je
push
sub
push
idivl
outsl
dec
test
xchg
insl
popa
mov
test
rclb
push
cmp
mov
push
sbb
push
cmpb
xor
imul
add
dec
testb
in
mov
addr16
push
adc
push
setp
jns
or
xchg
je
icebp
or
hlt
lods
add
ljmp
fwait
popf
jbe
adc
adc
in
fidivrl
jg
add
dec
dec
xchg
popaw
mov
push
imul
cmp
and
sbb
in
jnp
mov
hlt
sub
lea
js
imull
std
and
xchg
in
dec
addb
adc
ret
ljmp
cmpsb
subb
popf
insl
hlt
inc
ss
xor
or
xchg
test
jecxz
xor
add
cmp
mov
cmp
push
jbe
inc
dec
mov
xchg
jge
icebp
or
push
jmp
dec
sub
inc
insb
into
xor
out
push
mov
jle
and
in
sbb
imul
arpl
and
add
mov
adc
xor
icebp
jbe
xchg
jle
push
push
mov
cmp
nop
cmp
insl
iret
or
imul
ss
mov
testb
adc
mov
jecxz
aam
jmp
adc
and
mov
andb
std
aam
lock
jbe
daa
hlt
popa
mull
jle
mov
jge
mov
mov
jle
outsb
mov
dec
dec
shlb
or
outsl
mov
lret
aaa
add
call
add
call
pop
in
test
test
adc
mov
imul
sbb
lea
cmp
add
jne
mov
iret
int
stos
xor
out
cltd
or
lds
dec
xor
outsb
cmp
mov
jecxz
ss
adc
sbb
xor
xor
outsl
pop
and
xchg
and
lods
stc
jb
pop
cmp
push
sub
fstl
push
sbb
sub
cli
in
and
out
fwait
aaa
fimuls
xchg
inc
sub
jmp
das
cs
out
mov
xor
ds
push
or
and
xchg
sbb
xor
not
in
out
inc
sbb
movsl
insb
divb
adc
shl
jge
gs
out
ljmp
movsb
push
mov
and
jns
insb
sbb
add
out
fs
nop
in
shrl
fiaddl
xlat
jae
jecxz
lock
sub
pop
push
ds
in
repz
push
fwait
andb
ds
pusha
test
and
pushf
dec
outsl
mov
dec
rcrl
add
out
mov
ds
push
lods
popf
scas
cmpb
or
ret
xchg
fldl
xchg
adc
mov
sub
mov
test
dec
jb
test
jg
mov
ret
mov
mov
cld
aam
int3
leave
imul
xor
fiadds
add
xor
xor
cmp
mov
leave
repnz
and
imul
jnp
xor
cmp
test
and
lock
push
cmp
pop
inc
imul
and
mov
pop
dec
mov
out
loope
push
xchg
or
inc
mov
arpl
fadds
mov
adc
arpl
mov
or
add
aad
pusha
sub
cmp
inc
xchg
fcoms
pushf
sub
mov
sbb
add
add
jnp
fdivs
out
imulb
into
adc
mov
lret
dec
into
test
ret
and
xor
and
cmp
sub
es
mov
pop
lcall
mov
push
std
std
clc
test
push
lcall
dec
jbe
jns
push
adc
cld
adc
xor
aas
pop
jns
pop
lds
cmp
cmp
push
loopne
and
loope
adc
scas
push
push
adc
push
mov
pop
out
rcll
pop
xlat
fcomip
rorb
cmp
ja
jno
push
iret
lcall
jns
loope
mov
dec
scas
les
cltd
iret
sbb
dec
jg
jecxz
jg
inc
in
insb
xchg
inc
jbe
sub
sub
dec
pushf
aas
aam
cltd
jnp
mul
xor
jb
dec
scas
xor
cwtl
or
popf
push
scas
fldt
mov
pop
mov
addr16
scas
xor
insb
sti
insl
mov
cwtl
xchg
adc
sbb
lea
push
mov
mov
psubsw
add
sub
jnp
out
sahf
movsl
sub
dec
cmp
mov
lret
pushf
out
dec
xchg
push
and
lods
push
jge
gs
das
xchg
jl
out
adc
pusha
cli
ret
shlb
jl
mov
push
repz
xchg
sbb
adc
aam
movl
bound
jns
push
mov
stos
popa
scas
fdivs
mov
sub
inc
rorl
dec
nop
out
push
push
addl
jge
dec
shlb
xor
jp
adc
iret
adc
ret
sub
jo
jns
aaa
push
dec
xchg
and
dec
add
out
mov
cld
icebp
cmp
pusha
jbe
mov
rorl
stos
inc
cmp
cmp
call
shl
daa
and
rcl
jns
mov
ss
les
mov
cmp
cmc
jae
and
lret
xor
sbb
mov
in
xorb
xor
and
aam
fisttpll
fisttpll
mov
and
cmp
cwtl
arpl
into
int
mov
mov
aad
add
dec
mov
stos
adc
fisubrl
sahf
inc
sbb
sub
jae
dec
rol
and
dec
movsb
sub
out
jbe
pop
pop
mov
sub
aam
push
mov
sub
cs
jbe
scas
clc
push
inc
popf
jns
in
cmpsb
mov
gs
cmpsl
xor
pop
clc
push
sub
cmpsl
pop
pop
xor
push
popa
aas
xor
lock
inc
and
sahf
fwait
push
shlb
mov
out
sub
into
pop
repz
mov
inc
fwait
cmp
int3
out
outsb
sub
scas
xor
adc
xor
fucom
int3
mov
adc
xor
and
ret
ds
fstpt
fwait
cmpsl
shrb
and
lcall
imul
mov
popa
enter
adc
stc
or
das
xor
mov
insl
sbb
jb
movsl
xlat
fsubl
cmpsb
add
sub
ss
xchg
call
mov
jle
cmp
sbb
pop
in
psrld
dec
mull
jbe
ret
mov
pop
mov
fidivl
xchg
bound
dec
mov
shrb
cmp
test
movaps
dec
xor
adc
test
dec
repnz
jle
sub
mov
ljmp
iret
add
push
dec
dec
or
push
andb
dec
jge
dec
outsb
cli
lock
stc
pop
push
mov
testl
mov
imul
mov
push
sbb
dec
sub
xor
mov
cmpsb
inc
outsb
dec
and
daa
xchg
push
sub
jbe
pop
xchg
push
sar
mov
fmull
out
mov
inc
push
arpl
test
mov
inc
push
test
mov
dec
xorl
mov
sub
xchg
dec
cs
sti
aam
mov
hlt
test
and
xor
and
nop
or
ljmp
popw
sub
add
in
dec
xchg
cmp
clc
and
stc
sub
cltd
inc
es
mov
outsb
and
notb
call
add
popa
es
push
dec
rclb
punpckhdq
cwtl
or
adc
repnz
push
dec
ret
cld
ds
test
and
test
jne
std
loopne
out
xchg
scas
xchg
push
dec
xchg
dec
mov
addl
inc
xor
addr16
sub
push
xor
cmpsb
pop
ss
sub
clc
lret
inc
popa
movsl
movsl
dec
fimuls
and
popf
test
adc
pop
inc
push
jle
xchg
lcall
scas
es
pushf
mov
fldcw
push
mov
std
mov
in
mov
shlb
aaa
push
jp
cmp
jmp
push
aam
divb
jnp
fistpl
scas
mov
imul
andl
cmp
jae
push
shrl
loope
xchg
or
sub
mov
pushf
mov
mov
inc
imul
ss
addl
sahf
bound
sbb
sub
fs
cmp
cs
aam
xchg
push
cmp
or
or
or
and
arpl
adc
in
sbb
push
pop
adc
mov
mov
and
orl
push
shll
add
ljmp
sti
ss
dec
jno
and
stos
ss
subb
nop
lcall
xchg
inc
scas
dec
mov
dec
jl
int
cld
pop
lea
push
cmp
jo
push
dec
outsb
mov
scas
sub
movsl
idivb
daa
das
cmp
ss
cmp
adc
push
repnz
lock
orb
ffree
je
and
push
mov
das
aad
xlat
stos
loop
cmp
scas
icebp
ja
loope,pt
aaa
pop
scas
shll
shrl
in
test
imul
push
sub
cmpsb
cmp
scas
jb
aam
mov
mov
fidivs
shlb
sub
cmp
addr16
or
inc
mov
cmp
sbbb
daa
jo
jle
sub
fbld
jmp
xor
sbb
sarb
test
add
sub
dec
adc
push
cmp
and
mov
rcrl
and
adc
lret
out
cmp
pop
icebp
push
ficomps
sti
add
mov
pop
adc
push
sub
scas
gs
dec
cwtl
pop
lock
inc
dec
repz
shlb
lods
enter
or
adc
dec
cmpsl
pop
mov
ds
scas
mov
dec
inc
in
clc
nop
pop
push
iret
sbb
jp
in
push
cmp
xor
jno
or
iret
xor
push
pushf
js
inc
mov
outsl
nop
sub
dec
fisubrs
mov
push
dec
test
in
imul
push
fwait
mov
bound
mov
jmp
add
cmp
arpl
sahf
enter
sub
sbb
in
test
push
inc
mov
incl
mov
bound
clc
inc
pop
outsb
push
lcall
adc
loope
int
lods
into
cmp
lock
sub
adc
fwait
inc
xchg
xlat
jmp
cmp
lahf
mov
mov
lret
stc
aam
add
outsl
and
leave
inc
mov
outsl
jecxz
sbb
outsl
das
in
inc
mov
cmp
push
xor
dec
push
sub
cmp
mov
inc
inc
movsb
inc
mov
shlb
fsubrs
mov
insb
mov
pop
pop
jp
repnz
das
lds
cmpsl
cmp
or
cs
inc
add
scas
mov
adc
lea
clc
gs
jo
mov
push
pop
ds
mov
push
arpl
inc
test
imul
les
ss
push
xchg
mov
add
jmp
stos
push
cmpsl
jno
cmp
pop
fdivl
scas
sub
and
jp
inc
popf
adc
in
int3
data16
adc
lcall
movsl
xchg
jle
js
mov
push
xor
pop
inc
xor
imul
push
jbe
push
das
js
sbb
popa
push
lcall
js
shlb
stc
pop
mov
mov
push
mov
cld
nop
enter
mov
repnz
jl
sbb
leave
push
lcall
cmp
cs
leave
push
push
popf
inc
mov
xor
mov
cmpsl
xor
and
sub
cmp
cmpsb
and
mov
dec
jns
leave
mov
sbb
inc
pop
xor
sub
pushf
jl
mov
je
jns
aam
sbbl
scas
sub
je
mov
xor
dec
inc
inc
push
fwait
adc
pushf
push
xor
cmp
adcl
inc
sub
push
js
push
jno
and
jl,pn
cmp
out
and
cmp
push
std
inc
call
iret
push
daa
or
clc
mov
mov
call
dec
mov
cmp
out
sahf
xchg
xor
mov
insb
xor
dec
cmpsl
test
inc
ds
inc
lods
repz
clc
xor
cmp
fldenv
and
push
push
inc
mov
pop
repz
mov
sbb
xor
xchg
in
xor
les
mov
enter
mov
cld
in
ds
cmp
jecxz
jo
adc
push
lods
add
mov
inc
push
jno
fidivl
xchg
sbb
cwtl
and
rcl
pusha
pop
inc
mov
dec
call
mov
and
popa
push
cltd
pop
enter
cwtl
xchg
test
jmp
jo
into
ds
push
sub
and
stos
mov
pop
cmp
mov
mov
stos
loope
pop
call
dec
mov
push
loopne
mov
shlb
xor
and
push
dec
cld
fbstp
cli
push
scas
dec
sbb
dec
test
cs
push
pop
cltd
insl
jl
hlt
imul
out
sub
mov
push
cmp
js
jb
sarb
aad
repnz
push
ficoml
arpl
jg
iret
inc
scas
xchg
nop
inc
xor
push
decb
pop
cmpsl
adc
ret
mov
jl
add
test
inc
fwait
xor
cli
mov
mov
dec
dec
push
fwait
outsb
out
scas
cmc
mov
scas
jb
pop
outsl
cmp
leave
cmp
inc
xor
ja
ficoms
mov
sbb
cmp
mov
dec
mov
in
mov
test
and
jecxz
dec
push
cmc
sub
cltd
cmpsb
mov
insl
cmpsb
dec
pop
xor
pop
add
fnsave
or
xor
cmpsl
and
insb
xchg
push
insl
push
dec
fwait
inc
push
sbb
fldcw
adc
jl
ja
mov
daa
js
or
mov
pop
in
inc
push
aaa
mov
push
jmp
cmp
ss
mov
and
jg
lret
fwait
push
insb
mov
shrb
dec
mov
jae
ret
mov
lret
aaa
push
mov
mov
push
jnp
jbe
push
xchg
movsb
cwtl
dec
movl
out
aaa
dec
cwtl
push
scas
leave
fistl
sbb
push
js
sbb
sbb
mov
sbb
mov
cmp
mov
inc
dec
pushf
std
int3
or
dec
sub
aam
sbb
mov
xchg
cld
cmpsl
xlat
lcall
xor
or
inc
fs
jns
outsb
data16
iret
aas
lcall
jp
fwait
popa
mov
push
repz
fldcw
xor
sbb
cmp
pop
jbe
in
push
in
cmp
sub
jb
fwait
popa
adc
sbb
mov
call
dec
stc
cmc
in
inc
cmp
inc
in
loop
int3
mov
sbb
pop
fwait
test
negl
dec
push
mov
jge
mov
cmp
fistps
stos
add
adc
pop
cmp
sbb
fwait
in
jge
pop
or
stos
sbb
jle
das
sub
ret
test
sbb
or
out
add
jnp
std
jbe
fcomps
inc
sbb
mov
push
push
pusha
cmp
inc
mov
jb
xor
jns
orb
adc
sub
lahf
sub
in
test
xor
stos
call
push
dec
xor
mov
xor
cmpsb
aaa
inc
fmull
dec
in
aas
out
push
rcrl
ja
push
cs
aam
lret
sub
les
addr16
pushf
call
clc
lcall
sbbb
insb
arpl
cmp
pop
cmp
cmp
push
push
cmp
aaa
cwtl
cmp
lock
pop
cs
adc
lret
mov
inc
mov
sbb
inc
dec
sbb
inc
cmp
xor
mov
fwait
cli
sti
dec
ret
jp
lock
dec
jmp
mov
fcomps
bound
dec
cmpsb
mov
js
pop
mov
shrl
add
into
into
int
xor
and
sbb
pop
add
js
inc
push
xor
xor
ss
sub
sub
cmpb
mov
jecxz
popa
dec
mov
push
adc
sbb
pop
dec
cmp
sub
sub
mov
xchg
ss
mov
mov
mov
repz
in
push
scas
push
js
jp
cmp
mov
mov
int
shll
jns
iret
push
or
pop
sub
movsb
inc
xor
push
push
jne
enter
mov
mov
jecxz
jl
out
call
push
arpl
push
shll
sub
push
adc
mov
inc
fldl
ds
clc
popf
fbstp
add
cmp
int3
mov
push
push
push
cmc
sti
out
xchg
mov
xchg
cmp
ja
lods
lcall
mov
jl
jns
jo
cli
xchg
scas
cltd
sub
sub
jl
gs
cmp
or
add
scas
cwtl
test
inc
lret
sub
outsb
dec
lods
test
ss
cwtl
data16
dec
cmp
aam
incb
in
push
adc
push
or
inc
pop
xor
stc
sbb
arpl
xor
aad
adc
stc
cmp
arpl
std
xchg
jge
ss
cmp
sub
into
ss
pop
call
mov
sub
add
mov
push
dec
mov
lods
fnsave
test
or
sub
cmp
lcall
ljmp
sahf
test
mov
popa
push
push
scas
lcall
jo
push
ds
cltd
lret
mov
xchg
dec
leave
mov
push
xchg
sub
mov
xchg
pop
in
pop
jne
dec
nop
dec
jno
adc
inc
pop
xor
pop
mov
dec
add
mov
fs
outsb
cwtl
sbb
cmp
outsb
data16
jmp
dec
test
lcall
pop
add
das
int3
scas
and
fs
iret
xor
sub
xor
inc
push
mov
push
jg
jo
ret
xchg
xchg
stos
movsb
enter
sahf
aam
sbb
xchg
push
sahf
push
in
jno
addb
push
cmp
xchg
pop
push
push
cmp
add
bnd
pop
fnsave
xor
mov
mov
outsb
adc
sbb
stos
xlat
or
daa
sub
dec
mov
xor
cld
mov
mov
or
pop
jge
ss
das
xor
mov
mov
and
and
jmp
and
xor
mov
mov
inc
in
shrb
xchg
ret
push
nop
mov
jae
sub
pop
clc
inc
jg
pop
sub
mov
xor
out
sbb
out
inc
sub
jmp
dec
arpl
sub
xor
or
fwait
sub
jb
adc
fmull
push
idivl
cmp
aam
mov
jne
sbb
xor
jbe
dec
or
fs
sub
lcall
movsb
aam
vmread
loop
sbb
cld
test
push
push
add
in
aas
push
cmp
xchg
push
imul
dec
sub
cltd
pop
fcoml
xchg
cmp
jnp
push
or
mov
mov
adc
popf
test
out
mov
xchg
cmp
mov
pushf
stos
cs
sub
dec
cmpsl
shrb
mov
xchg
out
pop
movsb
inc
sub
stc
das
scas
xor
mov
sub
sbb
dec
sbb
cmp
inc
lcall
pop
xor
cvtpi2ps
push
scas
or
jns
aaa
andb
loop
sarl
fs
cli
aas
loopne
jne
mov
cld
jb
roll
push
pop
jb
cmp
frstpm(287
xchg
sub
push
sub
stos
xchg
inc
or
std
ss
movsb
pusha
dec
fldcw
sbb
dec
paddb
notl
or
or
xor
pop
push
addr16
jo
push
or
and
outsb
cmp
arpl
cmc
lods
mov
dec
cmc
pop
push
out
or
sbb
lahf
dec
aad
cmpsl
scas
mov
xchg
icebp
out
sub
sub
cmp
xchg
jp
lods
jge
xchg
inc
sub
and
dec
out
adc
jns
inc
inc
xor
mov
hlt
test
int
adc
push
mov
cmp
daa
sub
push
dec
adc
int
scas
sub
jne
mov
inc
mov
ret
and
adc
shl
mov
movb
inc
ds
add
ss
or
out
jnp
hlt
push
mov
add
push
and
lods
and
bound
sub
mov
rcll
sub
gs
push
test
call
sub
jno
cltd
int3
outsb
sub
dec
inc
mov
loopne
les
mov
xor
dec
jbe
mov
data16
jo
out
push
mov
push
adc
dec
pop
cltd
das
mov
dec
pop
inc
xor
ss
xor
dec
xor
cmp
push
mov
cmpsb
scas
fwait
and
dec
sub
xor
xor
lret
dec
dec
aad
xor
mov
cmp
andb
jae
pop
push
ret
clc
jle
imul
add
mov
jnp
jo
fwait
movb
fdivr
adc
pusha
lret
cmp
jns
das
dec
addr16
jbe
jmp
cmp
cld
cmp
push
mov
cwtl
mov
jbe
jp
bound
mov
push
pop
push
add
pushf
insl
push
jae
movsl
sahf
cs
push
xor
movsl
sub
xor
pop
jmp
dec
lea
and
mov
xor
ds
dec
mov
mov
fildl
jle
mov
or
push
xchg
jp
in
mov
jb
out
mov
and
int
lock
add
or
push
ds
cmp
jns
pop
bound
add
sbb
mov
push
inc
mov
mov
cmpsl
or
scas
clc
jl
clc
out
out
inc
inc
int3
mov
jb
mov
mov
aaa
xchg
fsubs
cmpsl
movsl
cs
sahf
bound
mov
popa
iret
hlt
ss
sub
xor
mov
jbe
adc
ja
add
dec
aad
bound
lods
mov
mov
push
push
popf
roll
and
cmp
les
es
popa
sub
jmp
cmp
push
push
sbb
inc
divb
jmp
cmpsb
cmp
leave
aaa
sahf
mov
push
jmp
scas
pop
push
sub
pop
subb
cmp
test
lock
add
xor
aas
arpl
imul
das
or
pushf
push
bound
hlt
inc
jno
cmp
data16
mov
jns
dec
je
adc
out
popl
adc
mov
pushf
lret
pop
push
mov
ds
cmp
jae
inc
aas
mov
xor
push
pop
sub
aaa
xchg
repnz
mov
mov
sub
xor
fisubl
in
sbb
ss
les
dec
shr
mov
bnd
test
jecxz
and
das
inc
roll
outsl
sub
mov
push
fiaddl
dec
mov
addr16
sti
cltd
aad
fs
data16
stc
mov
aam
adc
jb
lahf
push
jle
sbb
js
adc
sbb
mov
pop
and
andb
cmp
jbe
icebp
mov
push
cli
ss
lods
push
fiadds
pop
les
and
pop
ljmp
jge
insl
push
cli
xor
mov
xchg
mov
sub
fs
push
push
mov
movsl
jmp
imul
data16
sbb
pop
cli
sub
scas
loop
adc
nop
sbb
cwtl
mov
dec
ja
scas
cs
inc
sbb
push
or
imul
pop
jle
ljmp
push
cmp
jl
inc
jecxz
cs
in
cltd
push
dec
pop
bound
ds
adc
inc
daa
sbb
fdivr
sub
scas
inc
mov
cmpsb
repnz
popa
cld
lcall
jl
and
push
or
in
leave
push
mov
lcall
test
xor
pop
call
jl
ss
das
push
xor
xchg
sub
mov
add
mov
movsl
lock
rcrb
imul
arpl
dec
fwait
inc
lock
xor
jl
fimuls
push
mov
iret
icebp
fwait
xchg
repnz
jne
jecxz
mov
inc
cmp
mov
stc
pop
adc
nop
pop
push
cmp
push
test
xchg
push
mov
stos
dec
jecxz
pop
push
jl
mov
push
mov
add
divl
inc
jl
int
or
jbe
lcall
push
push
sbb
mov
jl
sahf
mov
jne
je
lods
sub
push
enter
dec
bound
pop
std
addr16
lcall
cld
mov
dec
jmp
jl
test
cmp
pop
cmp
comiss
pop
and
cmp
lods
push
jmp
jle
mov
lret
cmp
sub
rorl
scas
aad
ljmp
pop
push
xor
or
jl
out
dec
pop
push
adc
pop
into
outsl
ds
xchg
testb
sub
jnp
or
push
mov
push
daa
sbb
cmp
fs
adc
out
mov
cld
jp
jne
mov
jne
in
insb
in
scas
sub
into
stos
cmp
loop
dec
scas
or
test
dec
out
pop
jae
jmp
xchg
adc
fdivrs
adc
lock
jne
iret
stc
mov
inc
fs
lock
jecxz
movsl
sub
lcall
xchg
inc
dec
jns
jnp
mov
xchg
and
mov
dec
ss
fdivs
call
ss
push
leave
jp
aas
out
cs
or
and
xor
popa
or
xor
in
xchg
pop
push
or
mov
out
call
bound
jb
movsl
popf
rcll
mov
jp
pop
call
cli
cmp
cmp
in
push
xor
xchg
mov
mov
push
inc
daa
scas
sbb
cmp
sub
pop
ds
int3
loope
inc
lods
testb
clc
outsl
outsl
jl
mulb
pop
adc
addb
sub
inc
and
ja
jb
idivb
cmp
push
add
test
push
inc
pop
xchg
add
sbb
sbb
jno
jb
jbe
call
out
icebp
dec
daa
test
sub
jecxz
sub
mov
movsl
fnstenv
push
xor
fcmovnb
loop
in
xor
pop
jne
xchg
inc
and
mov
push
pop
or
cli
push
dec
aaa
je
push
sbb
les
xor
jns
dec
in
xor
inc
divb
jo
lret
repz
jno
jmp
push
lock
shrl
outsb
jbe
mov
sbb
mov
mov
xchg
add
fs
jle
imul
cs
xchg
lret
pop
and
mov
mov
mov
lret
loope
inc
push
test
inc
cmpsl
inc
daa
dec
jmp
nop
in
mov
mov
dec
xchg
jg
xor
out
scas
fs
out
adc
sbb
movsb
mov
inc
jbe
adc
add
je
dec
sbb
movsb
int
sti
xchg
jne
xchg
aad
xchg
pop
cld
sbb
xchg
pop
fs
fs
xchg
jp
pop
pop
mov
add
scas
popa
add
pop
in
inc
push
cmpsb
pop
ss
shlb
push
adc
call
and
jbe
mov
daa
jnp
push
aaa
dec
iret
in
cmpsl
mov
push
mov
xor
sbb
arpl
int3
imul
xor
push
insl
cs
or
lcall
sbb
add
pop
into
ss
mulps
mov
adc
xchg
sbb
gs
imul
in
fwait
dec
inc
hlt
push
mov
inc
insb
addb
scas
xor
int
aam
dec
aam
cwtl
sub
pop
jno
xor
and
ss
test
movsb
dec
jnp
mov
inc
rcrl
pushf
dec
fwait
xchg
sbb
mov
xor
aad
inc
sbb
mov
push
out
fwait
inc
jg
cli
fdivr
xor
daa
dec
pop
dec
and
andl
push
lds
test
sbb
sub
jbe
nop
push
imul
jg
lret
add
mov
outsl
sub
pop
cld
stos
mov
ljmp
jbe
sbb
mov
movb
mov
push
adc
jae
mov
push
pop
ljmp
addr16
cli
pop
xor
cmc
bound
scas
insl
dec
sub
dec
adc
mov
dec
and
cmp
mov
in
cmp
fimuls
das
repnz
sub
mov
cmp
push
dec
jbe
jo
test
and
mov
sbb
outsb
adc
sub
cmp
dec
add
stos
and
outsb
pop
cs
fadds
jle
in
adc
loopne
cmp
pushw
out
mov
xchg
into
aaa
aad
sub
mull
pop
or
adcb
push
xchg
test
cs
xchg
add
push
test
cmp
xchg
leave
inc
sbb
mov
push
mov
and
inc
sbb
sbb
sub
test
or
xchg
fistpl
out
popa
mov
je
aaa
jae
mov
adc
ja
fwait
inc
shlb
adc
jp
out
mov
sub
mov
or
test
insb
sub
inc
sub
inc
mov
push
xor
ss
out
je
stos
mov
lcall
sub
insb
out
rorb
aad
xchg
cmp
sub
jge
ret
mov
sbb
mov
jp
sub
jge
ss
rolb
jbe
cmp
shll
jbe
cvtps2pd
and
fstpl
cmp
orl
fbstp
pushf
inc
sub
push
fwait
xor
push
sub
ss
andl
pop
lcall
test
aas
sti
out
adc
mov
js
cwtl
cmp
jge
jnp
ss
gs
cmp
sub
xor
ja
lds
mov
dec
repnz
sti
jb
xlat
mov
cld
mov
loope
pop
nop
or
jno
repnz
push
loope
inc
hlt
mov
daa
sbb
cs
loop
out
std
pop
outsb
scas
inc
loopne
inc
adc
out
add
mov
mov
decl
sbb
clc
dec
push
cld
lcall
pop
and
pop
mov
dec
mov
cltd
fstl
xor
push
adc
int
mov
icebp
clc
jge
inc
in
push
push
mov
xor
in
scas
icebp
push
andb
stos
jno
in
and
cmp
gs
sarl
arpl
xchg
movsb
call
shrl
mov
push
xchg
sub
sbbb
nop
and
out
xchg
scas
xchg
shr
inc
mov
push
pop
add
fstl
xchg
fwait
add
mov
cwtl
inc
ret
push
mov
push
push
scas
daa
popf
mov
mov
lea
xchg
pop
pop
loop
jle
pop
jbe
ja
sarb
fsubl
xor
cli
imul
mov
push
out
add
push
pop
dec
push
xchg
aam
mov
cmp
aaa
imul
dec
xor
stc
dec
shrb
mov
iret
fdivl
pop
xchg
xor
xchg
push
lea
ficoml
dec
xchg
xor
inc
jnp
arpl
xor
push
xchg
cmp
mov
icebp
mov
sub
adc
push
nop
outsb
sti
adc
jge
and
pop
outsl
test
mov
daa
jge
mov
les
cmc
decl
adc
sub
popf
outsb
push
adc
in
bound
adc
sub
fwait
cmpsl
mov
lcall
subl
outsb
adc
dec
xchg
scas
push
add
testb
inc
dec
data16
adc
mov
imul
add
cmpl
mov
decb
mov
push
rcr
pop
push
add
and
push
mov
xchg
sahf
fisttpl
sbb
xor
cld
push
mov
imul
fwait
sbb
dec
mov
push
sar
jae
pop
xorb
xchg
push
icebp
lcall
push
iret
mov
rclb
push
jg
cmp
jbe
xor
push
in
js
arpl
mov
jns
lods
xchg
loopne
cmp
sub
adc
notl
add
xlat
aaa
push
scas
jge
cmpsb
out
in
stos
test
aad
test
cmp
add
and
xchg
jmp
shrb
xor
int3
movlps
push
push
pop
pop
dec
sub
test
sub
aam
sub
mov
mov
daa
mov
out
arpl
out
shll
std
dec
mov
xchg
mov
jo
xor
insb
push
lods
mov
sub
sub
enter
outsl
jg
xchg
dec
pushf
add
jbe
sub
outsb
push
pop
xchg
sub
dec
ret
adc
or
nop
cmp
out
pop
and
outsb
xor
aam
mov
stos
add
dec
sar
lods
lret
loopne
mov
xlat
jo
push
mov
xchg
in
cmp
inc
jb
loopne
lods
xor
jle
jl
stos
mov
cmp
test
call
mov
aas
cmp
push
xchg
push
and
sbb
jmp
lahf
lahf
out
and
push
sbb
add
and
test
mov
scas
pop
inc
push
cmp
stos
out
inc
push
fidivl
int3
in
and
imull
popf
in
lods
outsl
pop
les
inc
movsb
cmp
push
ss
cli
movsb
mov
mov
push
push
cwtl
jle
fwait
dec
mov
cs
and
movsb
loop
mov
pop
stos
loopne
lods
adc
push
fldenv
mov
mov
enter
jno
inc
xorl
mov
pop
out
push
dec
daa
xchg
lret
jecxz
aad
jae
je
ja
mov
dec
or
pusha
add
xor
or
cmp
js
mov
cmp
inc
pop
cltd
inc
mov
xchg
dec
loopne
or
push
pop
outsb
dec
nop
pop
jae
fwait
sbbb
push
cmpsl
mov
mov
jge
mov
mov
adc
xchg
rolb
cmpsb
mov
push
xchg
jbe
jg
in
enter
pop
xchg
xchg
cmp
test
push
pushl
jns
idiv
mov
inc
or
jbe
dec
test
dec
push
adc
cmp
pop
addb
mov
test
push
cmpsl
or
push
mull
std
mov
push
or
dec
in
add
jns
sub
push
call
mov
outsb
aam
inc
adc
int3
jp
out
int
add
sub
adc
xchg
imul
lret
mov
mov
dec
and
leave
pop
test
fadds
mov
test
mov
cmpsl
popa
push
movsb
mov
cmpsb
cld
mov
addr16
sub
cli
in
sbb
dec
sub
adc
insb
inc
in
dec
sbb
cmp
adc
stos
sbb
mov
sar
and
sub
sub
push
xor
stos
rorl
xchg
mov
pop
mov
ljmp
mov
dec
pop
mov
stc
dec
jbe
lcall
lcall
sahf
fidivs
inc
sahf
mov
dec
lods
xchg
jns
pop
sub
fwait
andl
lock
sbb
pop
insl
lea
pop
mov
xchg
enter
xchg
mov
cmp
addr16
out
fs
inc
in
xor
adc
mov
lds
adc
mov
out
jbe
mov
and
rcll
cld
sub
insb
stos
and
push
cmp
ss
movsb
pop
out
in
shlb
mov
shll
movsb
neg
sbb
pop
pop
mov
outsb
and
ss
in
xchg
cwtl
movsl
add
clc
mov
inc
dec
adc
repnz
jge
cli
jg
outsl
je
pushw
lock
das
addr16
pop
xor
lods
imul
push
out
les
or
jg
std
outsb
or
inc
and
jns
mov
test
push
or
fwait
sub
lcall
pop
sub
jle
into
xor
nop
lods
or
das
inc
push
fstpl
dec
jb
cmp
push
sub
and
enter
les
jb
lcall
ret
call
dec
stos
or
test
out
sbb
popa
imul
aam
xor
or
call
push
les
in
xor
pop
loopne
xchg
ret
jno
jnp
and
aad
cmp
push
jp
sbb
xchg
push
jne
pop
xchg
sub
pop
xchg
outsl
ljmp
outsl
fs
mov
mov
les
popa
mov
jge
andb
cmp
pushf
and
mov
ds
jae
and
test
je
test
popa
sbb
dec
push
stos
jb
aad
clc
xor
sub
jb,pn
mov
mov
sbb
and
jne
test
and
hlt
inc
cmp
push
jns
and
lcall
sub
imul
ficoml
dec
js
aas
scas
hlt
push
inc
test
dec
push
xor
jnp
mov
xchg
int3
cltd
pop
pop
mov
push
mov
jle
jmp
leave
push
dec
and
popa
leave
sub
mov
movsb
sub
pop
outsl
mov
mov
push
pop
jno
dec
lcall
imul
imul
and
pop
into
ret
mov
cs
xor
lds
cmp
outsl
and
mov
add
jl
mov
jb
xlat
repz
mov
mov
sub
gs
sbb
cmp
lea
push
fwait
sbb
and
adc
mov
jno
sbb
test
and
and
popf
je
out
in
outsb
in
jns
sub
into
in
movsb
pop
lret
repnz
pmullw
jb
sarb
push
stos
inc
xor
test
mov
cmp
inc
mov
push
xchg
loope
aad
inc
sbb
dec
pop
jns
sub
mov
mov
pop
adc
aad
and
mov
test
jnp
cs
ret
orb
andl
das
push
mov
push
xchg
mov
and
dec
imul
push
cmp
pusha
and
pop
scas
dec
xchg
dec
dec
or
pushf
je
sbb
imul
dec
jno
jl
imul
hlt
popa
pop
popf
sub
pop
cmpsl
and
mov
stos
sbb
mov
cmp
aad
mov
push
sbb
xor
mov
mov
jnp
shlb
inc
dec
mov
lcall
mov
enter
cli
outsb
fcom
push
mov
push
mov
popf
fwait
rep
sahf
push
jge
jo
mov
sub
pop
cltd
inc
jnp
fldt
sub
out
ss
dec
and
and
cmp
lret
and
dec
dec
fmulp
mov
pop
lods
mov
xor
fisubrs
nop
mov
scas
not
cs
and
jl
push
mov
aas
fisubs
jp
outsl
pop
inc
lcall
jmp
xchg
cwtl
cmc
sbb
sahf
and
cmp
and
inc
dec
inc
pop
mov
inc
mov
and
sbb
movsl
test
dec
stos
pop
in
xchg
sub
into
daa
insb
xchg
jo
or
fnsave
pop
and
jns
mov
jne
dec
pushf
mov
cmp
pop
push
jbe
or
cmp
loopne
sbb
fucomip
mov
mov
outsb
lods
stos
sti
mov
push
sahf
dec
jl
pop
pop
xchg
pop
adc
lods
pand
sti
xor
jecxz
push
popf
dec
scas
sarb
mov
js
mov
int3
xchg
inc
jbe
fistps
push
push
test
mov
imul
mov
inc
and
jns
pop
xchg
movsb
dec
iret
outsb
xlat
mov
dec
ljmp
and
jb
xchg
sbb
xor
aad
jmp
cwtl
in
cmp
cmpsl
or
dec
fucom
std
lret
adc
push
test
jecxz
or
xchg
and
jp
inc
push
andl
nop
cmp
or
clc
lods
cmp
sbb
dec
inc
sub
lcall
inc
scas
sbb
dec
nop
ss
xor
dec
jne
je
dec
adc
scas
addl
repnz
sub
pop
or
push
inc
sbb
mov
and
lods
jmp
fwait
lret
insl
sbb
ja
lcall
daa
inc
cmp
push
cmpsb
inc
popa
dec
push
xor
arpl
xor
adc
in
lds
rolb
addb
inc
mov
test
jge
pop
insb
mov
mov
xchg
sub
and
inc
pop
loopne
cmc
movsb
jbe
lret
cs
jno
and
push
xchg
mov
sub
adc
inc
movsb
popf
mov
loop
ret
sub
pop
mov
enter
mov
and
test
xor
add
mov
dec
test
pop
subl
sub
scas
das
fwait
or
mov
cmp
dec
mov
popa
hlt
andb
jge
mov
xchg
jns
daa
fldt
scas
pop
mov
push
imul
or
pop
jbe
add
cmp
cwtl
sub
ficompl
add
jle
mov
test
mov
mov
mov
sub
mov
inc
pop
daa
fs
mov
popa
sub
pop
idivb
add
add
je
cmp
lcall
adc
sbbb
mov
jge
and
push
jp
xchg
mov
addr16
stos
inc
and
nop
push
sub
mov
js
stc
or
mov
adc
data16
sub
mov
ds
xchg
popf
pop
cmp
push
adc
or
fidivrs
je
mov
add
out
xor
push
in
sahf
mov
pushf
outsb
cs
push
fwait
cmp
add
jge
xor
sub
jae
fwait
outsl
loopne
cld
sbb
aaa
pushf
sub
mov
mov
mov
nop
adc
test
loopne
cmp
test
and
lret
xchg
jmp
dec
inc
pop
sub
daa
lods
movsb
sbbl
xor
xor
mov
jno
add
ss
mov
xchg
loopne
dec
dec
push
jne
cmp
cmp
test
sbb
adc
inc
shll
pop
mov
cltd
ficompl
cmpsb
push
bound
dec
and
mov
mov
xor
std
cmpsb
out
add
scas
sub
push
inc
std
into
inc
sub
and
jmp
xor
cmpsl
mov
push
lret
stc
dec
cmp
push
stos
push
in
adcb
cmp
or
lret
fsubrs
stos
xor
bound
mov
jge
fwait
push
jp
scas
test
adc
fisubs
into
push
cli
das
jp
push
out
imul
movsl
and
mov
mov
test
sbb
cmp
lea
out
jmp
imul
call
mulb
out
pushf
cmp
iret
insb
jmp
mov
sbb
fisttpll
sub
push
setge
cmp
mov
test
push
mov
lock
test
ss
or
cmovb
xchg
pushf
cmpb
jbe
xchg
and
gs
stos
mov
mov
imul
and
dec
adc
xor
jne,pn
pop
ror
dec
pop
cmp
in
roll
pushf
cmp
test
jge
or
ljmp
aam
loope
imul
enter
push
jnp
jge
push
lods
mov
nop
dec
clc
lret
or
dec
cmpsb
cld
pop
call
sub
inc
cmpl
jnp
call
out
mov
stc
out
mov
js
das
repz
movl
mov
and
or
or
push
data16
mov
sub
ret
sub
pop
cltd
dec
mov
gs
movsl
dec
dec
ljmp
lret
or
ds
fwait
cmp
push
xorb
scas
mov
mov
mov
mov
push
jbe
sub
inc
mov
sub
stos
out
movsb
dec
xorb
scas
addr16
inc
test
or
in
xchg
cmp
push
cwtl
stos
in
popa
xchg
push
scas
fistl
xor
add
dec
cmpsb
mov
dec
mov
mov
hlt
jb
leave
in
jbe
sbb
inc
adc
bound
cmp
adc
and
pop
testb
xchg
subl
scas
adc
and
pop
or
jmp
fsub
xchg
cmpsb
dec
fisubrs
popf
pop
lcall
pop
test
inc
adc
sbb
outsl
testb
push
push
cmpsb
inc
div
repnz
and
loope
outsl
sti
xor
pop
mov
cld
push
arpl
inc
mov
mov
cld
xor
push
pop
shlb
imul
jns
js
dec
fsubp
repnz
fildl
mov
ds
mov
out
addr16
adc
mov
pop
adc
lods
and
mov
lret
movsb
mov
popa
jnp
shlb
out
cmpsl
push
mov
dec
lds
js
jge
daa
inc
xchg
push
and
mov
cmp
sub
outsb
xor
pop
ss
and
xor
mov
insl
sub
mov
arpl
xchg
addr16
and
pop
dec
sahf
dec
and
xchg
repnz
out
pop
sbb
int
pop
sub
or
popl
xchg
push
js
push
addr16
mov
jmp
sub
arpl
lds
sub
jbe
pop
mov
sti
jmp
js
fnstenv
mov
lock
xor
popa
dec
in
and
fsubl
cmp
sub
sbb
sbb
mov
inc
outsb
inc
cvtdq2ps
rol
xor
imul
pop
mov
insl
in
outsl
push
popa
and
idivl
dec
out
or
dec
lods
mov
lcall
xchg
and
add
loopne
lds
popa
je
dec
push
push
ljmp
imul
push
push
cwtl
mov
pop
popf
test
jle
mov
lods
push
ret
mov
and
sub
mov
test
push
idivl
fstpt
and
sub
inc
adc
test
lods
jbe
ja
mov
lcall
push
xchg
cmp
loopne
mov
shll
mov
mov
sub
es
repz
push
repz
dec
or
mov
and
sub
cmp
mov
fsubl
push
movsl
scas
std
call
push
push
or
icebp
js
out
test
lcall
mov
repz
pop
rcl
push
std
data16
outsb
dec
ss
mov
cmp
mov
mov
sbb
dec
addr16
scas
cmp
fisttpl
insl
mov
dec
inc
lcall
cmpb
or
jl
jb
dec
mov
stos
shlb
mov
xchg
pop
adcl
stos
pop
pop
in
test
sahf
jl
mov
aaa
loopne
fdivs
cld
imul
sub
mov
sub
jbe
xlat
outsl
mov
mov
jno
jae
mov
cwtl
pop
test
adc
add
std
push
xor
pop
lock
pop
sub
dec
jns
mov
mov
jp
sbb
xlat
mov
andb
lret
sbb
xchg
adc
xor
lods
jae
and
aas
imul
push
cmp
popf
pop
cmc
cmp
adc
test
test
xlat
fisubrl
dec
mov
dec
mov
fidivl
stc
dec
jno
fistl
repnz
jno
jno
cmpsl
pop
push
in
icebp
lret
sti
mov
imul
lods
das
sbb
cltd
adc
pushf
push
lret
and
imul
jno
pusha
dec
xchg
jne
cs
jge
sub
movsb
aas
aas
xchg
sub
jge
and
sbbb
push
jae
dec
ret
in
add
enter
xchg
insb
push
jp
lcall
sub
xor
inc
mov
add
pop
cmpsl
dec
dec
mov
imul
test
or
test
aad
xlat
push
call
bound
cmp
mov
jge
std
mov
ss
adc
daa
push
das
pop
test
fucomp
push
in
adc
cld
test
pop
in
mov
loop
mov
xchg
jo
sbb
mov
push
sub
sub
jno
sbb
sti
xlat
hlt
stos
adc
mov
out
ret
push
data16
lahf
imul
push
fistps
sub
cmp
rcll
aaa
dec
xor
cwtl
incl
fs
push
int3
dec
aad
adc
stos
out
jge
inc
mov
dec
stos
xor
mul
mov
call
push
pop
cmp
sbb
sahf
shlb
and
scas
test
xor
cmp
jno
std
and
mov
push
xlat
xor
and
fcmove
mov
or
loop,pn
scas
in
jmp
fisttpll
cmp
das
movsb
and
scas
mov
out
dec
xor
push
mov
adc
idiv
popl
inc
lock
sub
jle
sbb
shr
inc
xor
movsb
push
xchg
jbe
notl
ljmp
mov
nop
in
adc
hlt
push
xor
and
mov
lcall
aaa
dec
cmp
push
outsb
stos
cmp
xchg
imul
xor
xor
dec
adc
insl
or
mull
xchg
mov
cmp
mov
ficompl
push
sub
and
cmp
mov
cwtl
sbbl
rcll
pusha
push
mov
add
push
shrb
push
mov
out
push
ja
xor
addr16
cmpsb
mov
into
push
dec
sarb
mov
ss
push
sub
test
and
lret
inc
mov
jecxz
xchg
jg
sahf
xchg
sub
lock
subb
sbb
out
jo
sbb
ljmp
inc
jl
imul
jnp
test
pop
push
imul
dec
mov
scas
mov
fs
int
aam
sbb
ds
nop
ds
in
xor
dec
in
pop
lods
sbb
ret
sub
addr16
fs
es
lods
cmp
sbb
inc
jno
adc
lret
mov
std
insb
ljmp
cmp
mov
pop
ja
pop
push
cmp
sub
test
push
cmp
outsb
pop
xor
mov
jno
out
shr
stc
cmp
into
cmp
ss
aaa
adc
xor
xorl
mov
sub
mov
push
and
cmpsl
pop
sbb
mov
out
fwait
mov
daa
cmp
inc
subb
loope
popa
into
subl
movsb
add
mov
push
push
gs
cmp
je
push
test
sub
imul
add
shlb
xchg
insl
repz
sub
and
push
insb
cmp
call
xor
mov
adc
push
ds
dec
cmpsl
je
sub
lods
sahf
pop
push
daa
fcoms
mov
xor
lds
movsl
push
movsb
scas
fs
dec
push
imul
aas
insl
sbb
jmp
pop
push
pop
lods
push
inc
cmp
out
and
gs
sahf
test
pop
add
sbb
je
sub
lret
mov
pop
mov
cmc
push
cmp
pop
in
aaa
sets
mov
dec
mov
xchg
aad
mov
roll
int
pop
repz
fmulp
or
inc
xchg
mov
and
add
inc
push
cwtl
xor
jge
sub
push
xchg
dec
inc
fimuls
sbb
add
daa
bnd
lds
mov
stc
or
cmp
popf
dec
mov
clc
jae
or
cmp
test
jp
addr16
fildl
shlb
test
xchg
xor
stc
inc
int
jg
and
jbe
repz
and
popa
sbb
push
mov
ds
add
and
cli
pusha
in
jle
push
adc
je
xor
js
test
xchg
xlat
aam
inc
dec
push
dec
inc
xchg
fs
xchg
dec
icebp
cmpsl
sub
test
sub
int
test
insb
mov
xorb
in
dec
hlt
jb
dec
lods
rorb
cmp
sub
cwtl
xor
lcall
mov
or
mulb
push
notl
test
mov
pop
xor
add
xor
nop
mov
inc
dec
push
scas
add
inc
xchg
ljmp
subb
inc
mov
lcall
mov
fistpll
imul
adc
das
inc
popf
pop
jmp
or
mov
out
cmpb
popa
leave
cmp
push
leave
pop
cmp
fs
mov
inc
inc
fwait
lret
nop
pop
cmpsl
mov
in
xlat
iret
shlb
ds
mov
jbe
mov
mov
test
mov
xchg
xor
mov
lcall
mov
sarb
sbb
inc
shlb
fisubrs
popf
dec
lcall
inc
and
dec
lods
sub
xor
stos
jne
addr16
push
js
mov
scas
ja
adc
sub
je
mov
mov
mov
imul
mov
fidivrs
sub
decb
sub
xor
cmp
adc
lret
mov
mov
push
push
outsb
or
xor
ret
ret
lea
sahf
push
mov
push
xor
insb
out
shr
xchg
mov
fwait
cmp
cwtl
and
into
push
int
fcomps
fdivrp
loopne
scas
test
jae
and
imul
je
scas
xor
adc
sbb
xor
sti
pop
cmp
iret
and
or
jns
jns
into
mov
jns
pop
aas
ret
inc
and
rorb
repnz
mov
cmp
out
jmp
push
inc
sub
push
imul
and
mov
mov
sarl
sub
lret
sub
push
icebp
sahf
pop
daa
xchg
sub
dec
push
daa
sbb
pusha
cltd
stos
mov
insb
dec
test
js
das
jl
enter
inc
cmp
out
outsb
pusha
imul
out
aam
sub
xor
pop
jle
data16
pop
cs
popa
dec
inc
icebp
xchg
ror
scas
inc
das
mov
fs
or
inc
mov
out
xchg
bswap
mov
stos
test
jl
cmp
movsb
sub
mov
cmp
imul
and
enter
cwtl
jg
sbb
rorl
mov
aam
xor
dec
out
xor
push
sub
sub
test
jbe
mov
sbb
jns
push
test
lock
stos
mov
mov
popf
jnp
fwait
adc
add
imul
bnd
pop
mov
add
and
lahf
cmpsl
and
mov
cmp
sub
pop
push
sbb
lret
inc
or
jecxz
iret
xor
aaa
xor
pop
jl
sbb
dec
aam
enter
fsubl
scas
std
sbb
and
mov
pop
mov
cmp
idivb
push
or
inc
push
idiv
aas
test
mov
push
pop
cmp
mov
mov
int3
mov
aas
hlt
dec
sub
dec
inc
aaa
cmp
pop
lds
cmp
pop
scas
jae
jg
mov
dec
jp
ss
mov
pop
cmp
fcomps
add
test
inc
jge
xchg
testb
pop
movsb
lcall
or
adc
shll
imul
out
sbb
push
shll
sub
mov
ss
ss
mov
adc
stos
jl
jp
sub
jae
mov
push
lret
bound
adc
rcrb
arpl
stos
addr16
data16
stos
cmp
cmp
shll
mov
xor
ret
mov
je
sbb
gs
movd
cmp
cwtl
lret
scas
push
xor
shll
fwait
xor
out
cmp
dec
cs
sahf
lret
aaa
mov
add
and
pop
rdpmc
mov
bound
and
outsl
cmp
scas
pop
push
setb
cli
pop
sub
cmp
xor
in
sbb
popa
dec
push
loop
sbb
ficompl
ds
xor
das
scas
cmp
push
cmp
movzbl
xor
movsl
sbb
aaa
fsubr
inc
xor
out
cwtl
xchg
mov
push
inc
je
and
ret
mov
push
lods
loop
push
and
sub
mov
call
adc
jns
pop
lret
cmpsl
pop
fidivrl
adc
sbb
enter
adc
andb
lds
dec
inc
add
cmp
dec
out
out
ds
aaa
mov
mov
mov
outsb
jo
mov
fsubrs
js
mov
push
push
pop
test
xchg
insb
jbe
dec
cmp
sub
scas
inc
fwait
stos
aas
ss
das
mov
popf
xor
push
icebp
lods
xlat
pop
push
pop
adc
inc
push
or
cmp
pop
jae
mov
inc
inc
jmp
dec
xchg
test
loope
adc
das
jle
cs
mov
insl
imul
ss
ficomps
into
sbb
pop
test
fisttpl
dec
jns
insb
push
inc
jb
add
mov
mov
pushf
pop
mov
xor
scas
bndldx
xlat
push
jne
arpl
inc
scas
inc
out
dec
dec
sbb
mov
xor
or
push
push
into
sub
flds
pop
nop
cltd
sbb
cmc
mov
ljmp
cmp
ss
xchg
mov
in
inc
sub
mov
scas
push
or
sbb
test
aaa
shll
or
push
adc
inc
cmp
or
je
test
aaa
push
adc
and
pop
shll
clc
stos
in
and
cmp
jge
jno
cld
cs
push
and
jo
pop
xor
das
cs
inc
xor
xor
cld
jae
pop
inc
nop
mov
push
push
fsubrs
pop
add
jle
and
mov
dec
pushf
imul
and
cmp
sbb
cs
mov
not
mov
push
stos
arpl
pop
cmp
enter
fdivs
dec
sahf
sub
cmp
xor
faddp
push
stos
pushf
xchg
cmp
std
push
pop
pop
loop
lcall
sbb
xor
mov
xor
flds
jbe
lret
je
mov
adc
sbb
mov
test
out
cmp
mov
scas
out
sub
cs
aaa
dec
pusha
xor
lcall
test
cmp
sub
test
sti
lcall
jp
in
mov
mov
sub
cmc
stos
add
rcll
mov
call
jge
jns
mov
rorb
outsl
cmp
push
xorb
dec
mov
xor
adc
push
imul
sbb
movsl
sub
mulb
mov
mov
cmp
aas
xor
jae
sub
popf
cmp
mov
xrelease
nop
andl
jne
pop
scas
ja
cmp
push
and
push
and
fwait
jno
and
sub
js
sub
cmpsl
or
mov
dec
in
cmpsb
dec
jns
push
fwait
mov
dec
enter
data16
sub
sahf
pushf
ret
ljmp
pop
jno
into
mov
pop
xor
sarb
sbb
inc
mov
and
js
push
lahf
dec
xor
dec
mov
cld
lea
lret
mov
sbb
jge
sbb
mov
sub
sub
bound
in
xor
pop
pop
sub
add
cmp
dec
mov
cld
cld
mov
arpl
pop
jge
lea
mov
sub
dec
and
movsb
cs
jl
jbe
addb
inc
cli
push
sub
add
dec
shr
adc
dec
insl
in
fs
jnp
scas
sub
push
cli
dec
sahf
outsl
jl
dec
cld
pop
pop
jp
ljmp
ds
pop
adc
jno
sub
bound
sub
outsb
jnp
movsb
subl
inc
and
xor
mov
sti
cmp
jge
xchg
ljmp
or
mov
idivl
test
aad
pop
test
or
xlat
cld
mov
divb
sub
jnp
mov
insb
jno
frstor
outsb
loope
stos
addr16
sbb
daa
or
into
xor
mov
or
ret
test
cmp
jl
mov
icebp
call
std
fmulp
popa
adc
sub
out
push
mov
sub
add
mov
stos
dec
test
mov
mov
cli
loope
mov
xchg
iret
inc
xchg
js
lcall
or
das
push
out
cmp
stos
push
cld
cmc
outsb
imul
aaa
mov
shll
push
and
adc
inc
cmp
push
and
pop
sbb
xchg
cmpsl
push
mov
mov
outsb
dec
test
or
cli
shlb
stos
inc
xor
lods
ljmp
jge
shrl
fs
dec
les
das
xor
sbb
sbb
mov
mov
sub
out
fwait
mov
xor
sbb
je
sbb
xor
out
je
and
push
inc
insb
xor
cmp
test
js
jle
lods
leave
jo,pn
sbb
xchg
dec
jnp
sub
sub
inc
data16
ja
popf
and
inc
push
sbb
js
ja
int3
out
addr16
xorb
sbb
outsb
ljmp
js
push
das
cmp
dec
mov
out
cmp
idivb
push
sbb
mov
and
aaa
mov
jg
xchg
out
mov
push
test
fs
mov
inc
push
out
pop
dec
mov
mov
dec
pop
scas
daa
inc
loop
outsb
mov
js
stos
dec
mov
xor
and
xor
push
mov
mov
push
and
std
dec
movsl
xor
pop
outsb
daa
fisttpl
aad
mov
in
das
outsb
les
aam
xorb
cmpsb
orb
lcall
sub
mov
inc
into
data16
and
cmp
test
mov
sub
cmc
cmpsb
hlt
daa
rolb
cmpl
push
call
or
mov
dec
lcall
cmpsb
idivb
fnstsw
push
dec
nop
sub
mov
pop
jp
jb
mov
mov
adc
stos
test
outsl
add
xchg
mov
mov
mov
adc
stos
jnp
jae
into
in
divl
aas
sub
push
test
ljmp
and
xor
sub
pop
enter
cli
mov
addr16
dec
scas
cmp
adc
push
push
push
inc
fnstenv
jle
mov
jle
push
jmp
pop
flds
dec
imulb
out
ret
jp
mov
das
pushf
jbe
mov
jbe
pop
jb
push
negl
icebp
sub
movsl
dec
sub
xor
cmp
and
aas
mov
push
sub
xor
ds
jb
xor
jmp
cmp
mov
sbb
xchg
movsl
out
out
fwait
pop
xchg
or
das
fiadds
add
rolb
add
xor
add
imul
ss
pop
push
cmp
outsb
or
js
add
cmpl
push
and
outsl
pop
das
pop
into
xchg
jne
or
mov
jne
es
leave
push
push
fcompl
push
ljmp
mov
ss
clc
pop
cli
mov
mov
dec
pop
jns
fnstenv
adc
adc
jne
jne
mov
push
rcrb
and
sbb
jp
pop
xor
loope
pop
mov
push
lods
pop
cmp
push
clc
out
mov
add
cmp
cmpsb
aad
mov
or
clc
in
cmp
rorb
adc
shr
call
hlt
pop
daa
mov
aas
jo
enter
mov
mov
xor
mov
ret
or
addb
bnd
adc
enter
ss
sub
inc
sbb
and
mov
mov
cltd
test
gs
mov
and
imul
data16
aas
mov
cmp
aaa
outsb
fcomps
push
fdivl
hlt
jbe
mov
xlat
scas
jp
dec
xor
ret
xlat
jae
enter
cmpsl
inc
add
sub
sbb
mov
pop
stos
outsb
jge
repnz
lret
mov
in
cmp
scas
mov
ret
repnz
in
xchg
fs
scas
mov
aam
sub
ss
xorl
xor
fiaddl
mov
aam
loop
leave
fidivrl
mov
insb
mov
sub
inc
xor
dec
inc
add
jge
dec
pushf
xor
jnp
sub
movsl
adc
push
stos
and
movsl
mov
cmp
pop
push
xor
cld
mov
xor
js
push
dec
daa
dec
mov
jnp
xor
ret
in
jl
call
je
inc
inc
lea
pop
outsb
mov
or
in
pop
pop
sbb
dec
outsb
cmp
into
aaa
cmp
cmp
cmp
fldt
jo
xchg
inc
xchg
mov
pop
jbe
add
adc
push
shll
adc
jne
dec
aas
adc
pop
cltd
mov
jl
add
mov
stc
jecxz
pusha
xor
lds
jp
jno
nop
add
inc
push
inc
popa
aaa
mov
push
push
push
test
jne
fwait
xchg
mov
mov
jl
mov
bound
xor
cmp
lods
aam
dec
ja
call
fmuls
stos
pushf
pop
stos
jns
test
ljmp
jp
int
dec
test
jne
ret
xchg
dec
mov
aad
jle
mov
pop
fwait
das
xor
test
mov
cmp
mov
cmp
jp
or
mov
adc
sub
push
adc
pop
pop
push
mov
fwait
cmp
int
mov
mov
cmp
inc
dec
mov
dec
jl
pop
jno
scas
lds
mov
repz
push
add
sub
mov
mov
push
sub
mov
cmp
mov
xchg
pusha
adc
lahf
scas
push
sahf
bswap
ds
dec
popf
stos
pop
xor
mov
scas
bound
dec
imul
cmp
bound
pop
mov
dec
pop
mov
mov
into
popa
or
out
cmp
ss
cmp
repnz
mov
xor
sbb
sub
jno
mov
dec
pop
jb
nop
pop
push
dec
int3
ja
sub
jnp
dec
in
mulb
pop
pop
inc
inc
es
movsl
xchg
test
notb
outsl
jbe
push
cmp
in
sub
mov
cmp
pop
push
fucomi
dec
adc
out
shl
imull
stc
xor
inc
add
jp
mov
je
cmp
mov
aas
sub
sbb
out
call
cmp
in
bound
jmp
pslld
mov
xor
cmpb
cltd
jg
mov
mov
jno
push
das
and
mov
cmp
mov
psubsw
out
sbb
jae
dec
iret
dec
daa
push
push
push
in
xchg
scas
jecxz
sub
sbb
inc
add
push
in
icebp
pop
and
or
sbb
push
xor
sbb
inc
nop
mov
jle
mov
pop
sub
cs
cmp
out
or
and
test
and
mov
adc
lret
cmp
jmp
icebp
sub
out
push
sbb
or
mov
cld
lret
test
cmp
and
stc
or
cmp
stos
mov
sbb
and
push
mov
and
inc
mov
sbb
jno
mov
lods
and
inc
xor
fimuls
insb
loop
scas
sub
cmp
sub
dec
xor
ss
cmp
or
jne
sbb
ret
in
stc
pop
mov
mov
insb
test
fidivs
fistpll
cmp
lret
push
sahf
pop
jle
push
cwtl
pop
adc
cwtl
rcll
in
test
aas
and
into
cmp
retw
cmc
cmpsl
pusha
inc
loop
sub
and
sbb
pop
jnp
mov
add
dec
popa
call
mov
sub
pop
cmp
aad
pushf
xor
sub
add
ja
add
inc
in
test
sub
insl
jo
scas
sub
test
imul
xlat
sahf
test
ss
mov
test
xchg
mov
loop
xlat
mov
dec
pop
push
pop
pop
mov
and
stc
push
adc
mov
clc
das
sbb
lock
mov
cld
push
scas
jns
pop
stos
add
cmp
lret
leave
mov
adc
adc
into
cmp
icebp
andl
mov
mov
inc
add
loope
stos
mov
mov
ljmp
subb
in
mov
sbb
loope
aam
call
pushf
int
lcall
out
movsb
mov
sub
test
push
sbbb
push
push
cmp
mov
mov
outsl
mov
cmp
rolb
xor
sub
sbb
cmp
bound
outsl
adc
pop
jb
insb
faddl
xchg
lcall
mov
mov
mov
sub
mov
neg
sub
dec
sub
pop
loopne
sbb
push
and
sub
push
inc
decb
add
stc
popf
sahf
ret
dec
lahf
pop
cmp
lea
dec
mov
mov
insb
sahf
insb
cwtl
cmp
out
scas
lcall
fsubrp
out
cmpsb
idivb
mov
fcomps
std
js
adc
lods
ret
add
push
shrb
inc
push
add
mov
jmp
adc
adc
mov
mov
xor
insl
scas
add
lcall
xor
ljmp
mov
mov
push
daa
popa
out
scas
or
jbe
jge
push
xchg
pop
punpckhbw
imul
jns
push
fcomps
in
dec
fwait
inc
je
sub
jae
lret
repnz
sub
mov
fbld
jo
or
sbb
sub
movsb
adc
pop
sti
dec
in
testl
mov
dec
mov
xor
movsl
jg
loop
adc
sub
fwait
sub
xchg
mov
fldl
data16
jp
lods
xor
cmc
dec
xchg
push
sti
mov
jle
out
jle
mov
test
inc
xchg
pop
cmpsb
push
lods
fcmovbe
int3
and
mov
imul
ds
jnp
aam
movsb
fstpt
sub
lret
mov
jl
scas
into
aaa
dec
outsb
cld
aaa
lcall
push
int3
je
das
push
daa
inc
sti
shl
in
mov
mov
call
pop
cld
push
mov
outsl
pop
ljmp
push
add
fwait
dec
xor
xor
xor
cmp
das
push
cmp
pop
jo
sub
and
dec
jp
imul
jp
mov
test
mov
cs
mov
imulb
push
cli
cmp
scas
js
xorb
lret
mov
movsb
cmp
sub
jbe
or
xchg
mov
out
push
add
cmpsb
push
pop
inc
mov
js
dec
adc
jne
inc
addl
lret
subl
mov
adc
push
or
push
dec
add
outsl
add
jbe
adc
pop
leave
and
lcall
jle
ljmp
inc
mov
inc
or
pop
outsl
and
mov
addl
aad
push
popf
xchg
in
inc
stos
orl
scas
movsb
lds
scas
mov
fldcw
pop
call
dec
ds
mov
ss
cmp
shr
icebp
xchg
iret
gs
cmp
roll
mov
les
jmp
push
sub
jmp
inc
les
ficoms
outsb
scas
dec
push
ljmp
nop
das
mov
xor
loop
dec
or
jo
loop
mov
mov
daa
mov
rorb
mov
mov
imul
lods
icebp
stc
add
test
xchg
sub
fwait
sbb
flds
cmp
fnstsw
out
jbe
mov
je
daa
lcall
jo
cli
mov
or
xchg
push
inc
mov
and
or
lcall
sub
xor
xor
push
cmp
dec
loopne
adc
aad
push
jbe
insb
jae
test
sub
mov
adc
out
mov
dec
mov
ja
je
std
dec
push
pop
lds
sub
mov
iret
scas
rorl
mov
push
jo
push
pop
xor
test
das
call
or
scas
nop
stc
lret
cs
in
dec
sub
cmp
das
mov
aad
mov
push
cmp
cmp
lds
add
xlat
push
lods
das
jmp
addr16
push
and
push
inc
mov
je
and
xchg
mov
dec
cmp
das
xor
sbb
add
lret
add
jle
xlat
lds
mov
loopne
shll
push
es
test
sbb
mov
daa
push
cmp
and
daa
pop
outsb
sub
sbb
xorl
out
mov
xor
and
jns
mov
push
cmp
test
sti
mov
pop
repnz
push
xchg
add
mov
jno
negl
sub
scas
ds
lea
push
dec
movl
push
imul
mov
and
xor
scas
push
xchg
xchg
das
outsb
adc
cmpsl
je
jmp
push
daa
cmp
pusha
mov
mov
jne
cmp
mov
push
jmp
mov
insl
stos
fiadds
ds
mov
xor
mov
ds
arpl
outsl
cmp
mov
mov
test
xor
and
and
scas
push
imul
scas
mov
outsl
mov
scas
sub
loope
ret
cs
xor
lcall
mov
jbe
jno
mov
int3
jns
ss
mov
int3
xchg
fmull
cwtl
enter
push
mov
push
cmp
cmp
clc
dec
int3
loop
xor
cld
dec
cmp
in
jns
dec
out
popa
mov
mov
jp
dec
inc
scas
adc
cmp
ja
divb
inc
jns
dec
sarl
sub
add
mov
xchg
jmp
stc
aas
inc
inc
jle
dec
icebp
mov
jg
iret
inc
sbb
and
mov
inc
xlat
jae,pt
cmp
int
dec
adc
scas
and
rol
aas
xchg
sbb
popf
imul
push
sbb
into
xlat
int3
jno
xor
cmp
and
push
shr
push
loopne
sub
clc
xlat
lds
push
adcl
in
push
inc
insb
and
jnp
sti
jae
jl
clc
cmpsl
dec
mov
mov
pop
push
xor
and
jp
or
sub
daa
push
sub
xchg
ffree
pop
push
in
mov
into
cmp
enter
jmp
sbb
fistl
nop
into
ljmp
and
jge,pn
push
dec
and
cmp
fisubrl
lock
add
pushf
xor
push
fcmovb
mov
lods
jnp
xor
cli
fmull
cmp
ss
jmp
dec
inc
ss
aad
inc
int3
lods
mov
xor
push
or
dec
iret
shrb
push
pop
dec
pop
mov
stos
add
cmp
pop
xor
add
or
aam
into
into
clc
fidivs
in
and
or
js
jge
mov
lods
outsl
xor
adc
fld
push
int3
fcmovu
loope
test
dec
push
jns
call
stos
pop
subb
jmp
pop
cld
ret
mov
jo
sbb
and
jns
adc
mov
lret
xchg
push
js
adc
sub
js
jge
add
fwait
dec
lcall
or
rol
mov
fwait
cmp
mov
cmpsb
enter
pop
sub
cmp
sbb
mov
ljmp
pop
push
xor
dec
mov
aaa
lahf
idivb
xchg
mov
dec
jns
cmpsb
ljmp
aad
sbb
outsb
push
stos
in
pop
test
and
and
ljmp
or
cmp
mov
scas
jo
xor
jns
inc
sbb
push
mov
mov
push
mov
xor
repz
xor
adc
sbb
or
jne
jg
mov
adc
cmovl
sti
dec
cmp
mov
jg
les
fs
lock
icebp
mov
sbb
lods
mov
sahf
cs
nop
mov
call
imul
cld
mov
lcall
adc
lcall
test
jbe
mov
adc
aaa
mov
jl
jnp
push
insb
fucomi
cwtl
xchg
idivl
push
and
dec
mov
cmp
in
jae
mov
dec
pop
data16
sbb
jo
mov
outsl
insl
pop
sub
out
into
or
xor
fs
lods
xor
test
sub
mov
movsl
fsubrl
or
or
dec
int
mov
into
cmpsb
idivb
insl
dec
jae
mov
aaa
sub
js
outsl
dec
inc
int
pop
ds
jnp
dec
cmp
lods
imul
or
sbb
fwait
les
jns
dec
jne
dec
adc
jp
adc
aas
or
js
ljmp
xlat
stos
and
or
dec
daa
mov
test
shrb
ja
dec
push
dec
flds
cmp
dec
fiadds
mov
jbe
xor
loopne
scas
lcall
add
cmc
and
mov
out
lret
pushf
pop
jns
scas
fstl
sbb
pop
or
push
dec
pop
cmpl
subl
popf
xor
jno
fdivl
sbb
leave
ret
in
shrl
mov
sbb
dec
sub
cld
push
sbb
sub
add
inc
fmuls
and
pcmpgtb
xor
dec
mov
rcr
jg
inc
xchg
iret
or
mov
test
mov
mov
fists
adc
test
dec
mov
shrl
push
sbb
xchg
mov
push
push
push
mov
or
cmp
sbb
xor
bswap
push
sub
out
jecxz
mov
sub
fwait
jo
sub
or
js
and
jbe
xor
mov
pushf
cmp
jo
repz
adc
sub
xor
shlb
sbb
and
mov
inc
movsl
jecxz
bound
sub
adc
jno
lret
loopne
not
cli
test
add
add
cmp
sti
push
cltd
mov
mov
inc
xchg
loope
call
cmp
mov
fdivl
inc
imul
inc
dec
push
push
and
int
ljmp
out
in
rol
xchg
out
adc
sbb
fadds
rcll
daa
test
hlt
jge
lret
das
mov
ss
jbe
ja
push
push
loopne
stos
loopne
fwait
pushf
loope
mov
pop
inc
daa
jne
sarb
clc
das
out
pop
mov
xchg
or
or
out
or
adc
fsubs
push
leave
ds
jle
and
lcall
pop
rol
fidivrs
adc
mov
std
lret
cmc
or
fstl
xchg
mov
lret
jecxz
jp
jo
out
cmp
in
cmp
int3
push
mov
cmp
sub
lahf
insb
ja
aas
and
lea
cmc
test
mov
aas
pop
push
jns
push
sbb
adcl
add
test
jbe
inc
inc
in
shlb
push
jg
test
mov
and
cmp
pusha
dec
ud1
inc
and
shlb
mov
jnp
fiaddl
shlb
int3
mov
and
setno
mov
cmp
inc
xor
fdivrs
cmp
adc
rclb
lds
aaa
aaa
add
inc
mov
pop
aaa
inc
shll
mov
ljmp
out
loope
push
and
mov
jge
cmp
mov
mov
stc
pop
add
jg
pop
xor
and
push
push
sbb
cmp
cld
jmp
sbb
rorb
mov
adc
push
and
aas
xor
mov
fcomi
mov
mov
dec
fsub
insb
scas
inc
jle
out
lret
rcll
push
lcall
push
out
mov
cmp
mov
fldcw
imul
pop
mov
lea
dec
adc
test
test
fwait
add
pop
push
push
pop
adc
subb
cmp
sub
clc
and
cmpsb
ljmp
sub
outsb
mov
dec
pop
mov
in
cmp
dec
lahf
lcall
cmp
scas
inc
xchg
jge
mov
insb
adc
and
and
add
mov
xchg
out
pop
lcall
pop
mov
jge
fwait
mov
ret
lcall
jbe
mov
adc
aad
imulb
lret
push
mov
lods
fwait
inc
jns
mov
push
imul
les
lcall
xchg
inc
movsl
int
notl
cmp
ss
xchg
inc
les
dec
js
addb
or
mov
mov
das
sub
jg
lds
mov
mov
mov
scas
fstpt
push
in
and
mov
in
insb
adc
and
stos
aaa
jge
lock
mov
sbb
push
mov
push
add
fcom
jno
les
jle
add
push
sub
or
jg
jno
dec
sbb
ja
jnp
stos
mov
push
and
mov
scas
test
movsl
adc
dec
js
cs
enter
rcrb
xchg
adc
insb
xlat
xchg
sbb
aam
xchg
lahf
adc
ss
lcall
mov
bound
jg
outsl
imull
xor
xchg
mov
fsub
scas
lds
mov
add
pop
les
bound
in
sbb
jecxz
les
xorb
bound
ret
push
lock
mov
in
mov
add
cli
pop
xor
cmp
sub
fwait
js
sahf
mov
jle
cmpsl
mov
cwtl
mov
fcoms
mov
adc
sahf
xchg
out
adc
inc
ret
xchg
addr16
pop
adc
dec
xchg
test
sub
mov
enter
cwtl
sub
mov
jle
jecxz
pop
fldt
adc
js
push
push
jmp
mov
push
dec
lcall
cmp
xor
sub
inc
sbb
dec
add
dec
xor
xorl
mov
sar
push
mov
mov
or
mov
inc
dec
scas
sbb
repnz
mov
mov
sbb
test
sub
mov
cmp
icebp
cmp
loopne
xor
scas
mov
jl
addr16
pop
fdivl
mov
js
and
aam
dec
lcall
lret
loope
mov
push
mov
push
test
les
push
imul
imul
gs
mov
pop
bound
idivb
out
sub
cmp
push
jno
fdivrl
push
cld
and
popa
js
cmc
sbb
fisubrl
imul
jns
inc
movsl
int
lock
or
in
pxor
push
mov
shr
mov
mov
rcll
test
andl
or
sar
xchg
cwtl
mov
mov
test
sbb
mov
or
sub
das
inc
or
popa
out
xor
pop
ljmp
cmp
fwait
lods
arpl
stos
cmp
and
push
jno
enter
nop
das
inc
das
xor
fsubr
bound
jno
adc
and
outsb
sahf
mov
out
push
xchg
adc
cmp
dec
sub
pop
icebp
xchg
data16
movsl
or
xor
icebp
pop
push
sub
adc
and
sub
pushf
pop
push
and
xchg
xor
nop
sub
mov
inc
cmp
pop
sbb
dec
ds
dec
lret
cltd
aaa
xor
nop
sub
lock
xor
dec
gs
or
cmp
cld
movsbl
jle
mov
mov
sahf
loope
xor
fadd
cmp
sbb
cwtl
or
les
movsl
aas
jbe
push
shr
adc
inc
aas
push
dec
lcall
xor
inc
scas
ss
and
scas
in
cmpsl
or
or
dec
push
aaa
jl
and
push
and
jecxz
ds
and
bound
add
inc
xor
in
dec
mov
sub
repnz
mov
cltd
pop
mov
fs
inc
push
divl
das
push
bnd
nop
fidivl
daa
cmp
dec
or
mov
shll
sub
push
repnz
lret
out
jae
ficompl
mov
or
adc
jmp
gs
imul
push
jno
cmp
fucomi
lods
loop
ss
enter
cmp
xchg
mov
outsb
dec
cmp
divb
mov
lret
push
add
sub
stos
pop
ja
iret
mov
movsl
or
add
mov
push
sub
adc
fldenv
sub
jne
rsqrtps
xor
and
inc
xor
dec
xor
es
sub
inc
fwait
repz
sub
push
inc
call
jbe
test
ss
rolb
xor
pop
fwait
pusha
arpl
sub
mov
mov
js
mov
outsl
cltd
push
das
push
jbe
and
cwtl
xchg
xchg
inc
jecxz
mov
jne
fdivl
pop
xor
sub
xchg
movsb
cmp
jbe
adc
push
int3
rclb
jecxz
adc
loope
adc
adc
cmp
loope
and
push
mov
sub
pusha
fistpl
out
add
jg
in
test
xchg
sbb
or
cmp
fs
xchg
mov
sbbw
outsb
ss
xchg
sub
sbb
outsb
inc
mov
lock
or
adc
mov
dec
xchg
bound
xchg
je
loopne
cmp
into
ret
mov
jg
cmp
dec
xchg
lea
fwait
push
mov
push
scas
xor
jl
push
in
insb
sbb
sbb
push
scas
pop
je
mov
jae
aaa
shrl
scas
cmp
dec
adc
jae
in
fs
mov
push
rolb
dec
into
leave
and
scas
mov
outsb
xor
scas
sub
mov
mov
fwait
pop
test
jbe
dec
shrb
lods
mov
inc
cmp
sub
mov
push
pusha
mov
fimull
mov
outsb
jecxz
in
adc
pop
in
cmp
popa
out
xor
cltd
fwait
push
ljmp
jg
mov
arpl
cmp
aam
shll
mov
dec
jge
mov
imul
insl
stos
clc
lcall
adc
cmpsb
xor
insl
xor
mov
add
pop
push
xor
test
insb
xor
pop
cmp
inc
sub
aas
aaa
push
mov
pop
sahf
callw
cmpsb
scas
jbe
mov
mov
mov
scas
jbe
mov
push
add
cmp
lods
fwait
xor
repnz
insl
daa
insb
leave
outsb
and
mov
adc
aas
jl
cmp
inc
xchg
mov
inc
addl
sub
and
sub
xor
cmp
inc
mov
scas
adc
inc
ds
into
outsl
cmp
addr16
in
rorb
sub
daa
push
mov
sub
sbb
mov
and
cmp
add
ljmp
mov
aas
imul
push
adc
adc
mov
and
sbbl
cwtl
sbb
add
cld
dec
mov
xchg
push
je
out
jmp
mov
sbb
loope
adc
test
das
pusha
add
and
ret
mov
popa
cmp
int
sub
bound
mov
stos
push
shrb
push
sub
mov
jns
fsubrs
jo
sbb
imul
cmp
pop
and
xchg
int3
jno
xor
xor
cmp
pusha
test
out
add
cmp
loope
rorl
push
mov
ss
fwait
das
loope
jle
sub
js
lahf
mov
dec
movsb
pop
enter
xchg
mov
movsb
cmp
das
mov
cmp
bound
pop
mov
push
in
repnz
cmp
cli
out
aad
stos
stc
loope
lahf
push
pop
sbb
ss
stos
movsb
bound
ret
sub
cwtl
aas
cmp
mov
subb
sbb
adc
lds
fldt
cmpsl
xor
dec
popf
pop
divb
push
cs
fdivl
pop
dec
fisubs
pop
aad
jnp
imul
mov
pop
jae
dec
aas
mov
daa
lods
int3
add
xor
pop
inc
in
sbb
push
test
pop
jbe
aaa
inc
pop
mov
lcall
movsb
adc
outsb
lds
dec
dec
pusha
lret
add
ljmp
out
and
idiv
stos
and
nop
ss
lret
adc
stc
iret
arpl
popa
lds
sub
je
adc
mov
cmp
imul
mov
shlb
mov
out
inc
sub
mov
fwait
das
xchg
aas
jb
xor
fiadds
inc
adc
pop
cmp
ss
jp
cmp
mov
or
add
jl
inc
xor
push
iret
cmp
rorb
cmp
aaa
insb
lret
lcall
insb
push
jbe
cltd
fisubl
mov
jne
scas
insl
xchg
push
std
cld
mov
xchg
fdivp
dec
sub
and
in
pop
sti
fdivs
xchg
mov
mov
test
cmp
sbb
cmp
sub
out
sub
cli
adc
or
jbe
inc
mov
movsb
sub
xchg
hlt
dec
bnd
fs
popa
lock
mov
aas
daa
jno
rcl
das
cltd
push
insb
jle,pt
mov
push
xchg
add
pop
dec
push
stc
js
push
adc
sub
loope
pop
decl
in
dec
mov
inc
das
test
aam
and
push
bound
imul
test
jns
ret
test
out
pusha
cmp
nop
cs
out
inc
push
cmpsl
scas
gs
jg
les
adc
test
or
das
mov
and
clc
push
daa
bound
sbb
mov
and
popa
push
pop
mov
cmovle
push
dec
sbb
sarl
push
push
sbb
scas
pop
cmp
clc
xor
push
or
dec
ja
scas
into
and
mov
inc
popf
mov
test
or
pop
adc
push
or
ret
sbb
lods
popf
mov
stos
movsl
cld
mov
int
cmp
out
scas
jmp
push
outsl
dec
fisubrl
jmp
adc
test
dec
cwtl
loope
dec
inc
pushf
imul
dec
mov
jb
xchg
fwait
enter
andb
cmp
cli
adc
adcb
icebp
addr16
repnz
inc
outsb
imul
pop
fwait
inc
dec
sbb
cmovs
das
push
cmc
mov
sub
nopl
or
xchg
jne
imul
jno
and
popf
lcall
pand
cwtl
fwait
mov
dec
pop
out
cwtl
sub
pop
in
ljmp
xchg
xlat
mov
fs
xor
sub
mov
and
dec
in
inc
push
not
test
cs
nop
ds
das
push
cmp
push
jge
rorl
cli
out
cmovge
xor
sub
repnz
les
mov
cltd
jns
repz
cwtl
push
cltd
cmpsb
jno
ficomps
mov
imul
loop
mull
pop
xor
add
pop
movsl
adc
lcall
pop
mov
pushw
jbe
neg
outsl
dec
add
stos
test
bound
mov
jp
mov
sbb
call
ljmp
xor
push
fsubrl
adc
and
pop
ss
xchg
cmp
xor
jne
in
cmpsl
icebp
popa
mov
bound
je
mov
xchg
xchg
push
mov
xchg
scas
fdivrp
ljmp
jo
rorl
stos
jecxz
dec
loopne
push
dec
jae
jl
ja
jl
or
pop
insl
repnz
mov
jne
mov
fstpt
mov
pop
and
cmp
loop
dec
sub
or
adc
cmpsb
inc
lock
xorps
sbb
and
fimull
jg
shlb
outsb
arpl
testb
clc
pop
stos
xchg
xor
test
aaa
xor
or
add
ja
inc
jle
and
pop
cmp
push
fdivrl
test
jns
fwait
loopne
aad
test
mov
addr16
mov
push
adc
inc
mov
bound
scas
mov
sbb
jnp
clc
cmpsb
das
sbb
movsb
pop
pop
pop
lret
cmp
sbb
outsb
daa
dec
pushf
jnp
mov
mov
andb
mov
jnp
sub
mov
and
iret
or
shll
cwtl
ljmp
jl
lahf
test
addr16
xchg
pop
and
mov
pop
popa
push
push
push
mov
inc
stc
adc
inc
adc
dec
jl
ljmp
push
and
pop
adc
push
in
cmc
rcrb
hlt
loope
mov
arpl
add
and
ficoms
pop
jae
scas
and
jnp
test
ljmp
shll
int3
xlat
dec
or
cmp
sub
xor
pop
lret
and
mov
mov
add
icebp
xor
lahf
shl
jnp
out
adc
mov
in
mov
testb
xor
sub
mov
sub
sub
inc
sbb
xchg
add
fnstenv
xor
cmp
je
leave
stos
sbb
sub
popf
mov
mov
push
mov
xor
mov
dec
push
enter
in
mov
nop
mov
xor
mov
jecxz
rorb
lret
insb
push
cmp
xchg
dec
data16
ljmp
inc
dec
xchg
out
push
data16
sbb
cmpsl
cmpsb
pop
push
cmp
adc
sbb
cmp
addl
mov
scas
test
sub
sub
popa
std
cwtl
outsb
fwait
das
inc
fldl
lea
sbb
mov
cmpsb
popa
cld
popf
cmp
sub
loop
arpl
sub
cld
push
xor
outsl
out
pop
sub
movsb
in
cmp
xor
lods
cmp
lret
adc
mov
test
icebp
jns
xchg
mov
mov
lret
aad
stos
inc
je
aam
or
adc
sub
push
push
push
and
orb
adc
call
movsb
cmp
pop
inc
aas
fwait
sub
popa
mulb
js
mov
je
sbb
enter
adc
cmpsb
jne
mov
mov
or
leave
nop
ds
inc
popa
sbb
mov
add
fldl
loope
stos
cld
sub
mov
push
xchg
jnp
inc
xor
das
stos
sbb
sub
mov
ss
sub
jb
mov
and
sub
fwait
lret
loop
enter
adc
popa
pop
shl
inc
dec
and
mul
or
and
call
push
lcall
int3
add
sahf
push
js
sub
jp
sbb
idiv
fsubrs
mov
mov
jb
lock
addb
push
adc
push
inc
dec
mov
and
lods
pop
pusha
das
xor
popa
mov
cmp
pop
xlat
adc
scas
cwtl
lcall
pusha
cmp
aad
and
push
mov
out
xor
or
dec
scas
adc
ja
cmp
out
mov
cmpsb
std
negb
and
cmp
sbb
adc
cmp
or
je
cmp
cmp
xor
hlt
mov
jl
mov
test
pusha
push
movsb
push
cmp
popa
cmpsl
push
jp
push
enter
mov
insb
test
popa
enter
jle
dec
pslld
ror
insl
push
loope
mov
mov
das
cmp
push
lea
leave
xchg
push
sub
push
movsb
jns
lret
jnp
fcoml
sbb
stc
pop
or
lret
inc
mov
push
sub
lret
xchg
sbb
dec
cmp
cmp
xor
mov
xorl
mov
in
stos
mov
dec
pusha
test
xor
stc
jbe
inc
lahf
push
shll
push
lcall
stos
pop
lret
repnz
sti
inc
mov
aaa
dec
cwtl
dec
push
mov
enter
out
jo
call
dec
imull
je
or
mov
cmp
mov
mov
dec
cs
mov
subb
xchg
cmp
movsb
jno
push
mov
push
dec
mov
sub
gs
mov
push
and
mov
ja
push
lea
jae
cmp
ss
mov
add
mov
sbb
jns
mov
lods
fcoml
xchg
cs
popf
pusha
dec
lcall
adc
sbb
fsts
imul
cmp
outsb
pop
aaa
call
cmp
out
lcall
push
xchg
pop
into
scas
movsb
repnz
dec
add
dec
decl
sbb
das
rcrl
mov
pop
and
push
jecxz
imul
inc
mov
in
sbb
aas
outsb
dec
xchg
addr16
push
orl
dec
push
and
roll
es
test
xchg
push
dec
inc
setnp
mov
jge
test
cld
stos
stos
repz
mov
cmp
sub
scas
mov
loop
mov
pop
imul
cmp
invlpg
outsl
mov
adc
xor
pop
xchg
and
push
xor
or
and
adc
dec
inc
jae
push
mov
pop
push
dec
xor
jns
mov
and
xchg
fwait
xchg
mov
push
insb
imul
out
stos
rcrl
in
mov
mov
cmp
sub
sbbb
mov
cmpsb
repnz
outsb
imul
nop
push
lods
jbe
dec
pop
scas
sub
inc
andb
mov
adc
clc
mov
pop
xor
mov
xchg
jge
fimull
in
stos
cmp
or
ss
and
aam
push
loope
push
sbb
pop
cmp
bound
dec
negb
aas
mov
mov
adc
pop
pusha
sbb
lret
inc
imul
int
sbb
out
aaa
in
and
outsl
aas
push
pop
push
or
mov
gs
out
mov
mov
out
sub
inc
cwtl
scas
into
cs
cwtl
xchg
divl
sub
xor
xor
push
stc
shrb
sub
cwtl
push
sub
cmp
ds
jno
sub
push
xchg
inc
cmpsb
movsb
inc
lret
inc
cld
cmp
mov
pop
sub
push
pop
jnp
push
push
dec
push
ja
iret
push
mov
xor
xchg
xchg
inc
popa
inc
jp
cmp
pop
adc
cmp
pop
fucomp
jg
push
dec
scas
xchg
jb
xchg
or
xor
dec
xor
push
cmp
push
lds
push
movaps
dec
loope
pop
and
mov
xor
adc
imul
aas
pop
jbe
jbe
push
xor
imul
repz
pop
sub
outsl
pop
cs
push
pop
push
dec
pop
scas
js
cmpsl
xchg
mov
into
outsb
mov
and
cmp
test
lahf
push
scas
mov
fwait
mov
jl
push
push
out
mov
mov
in
icebp
stos
sub
dec
mov
andb
rorb
dec
pop
xor
push
jae
cmpsb
xor
inc
test
xchg
pop
int
cld
xor
ljmp
pushf
dec
out
test
negb
mov
mov
or
mov
fidivrs
cmpsb
cmpsl
xlat
sub
mov
add
jp
hlt
mov
mov
mov
mov
ds
sub
or
movsb
andb
jb
jb
outsl
popa
fs
pop
in
pushw
xor
mov
fs
sub
xchg
sub
je
jecxz
mov
or
dec
mov
lods
mov
sub
push
jl
cmovg
lret
jb
shl
lcall
mov
and
cwtl
or
cs
xor
rol
pusha
fdivr
aaa
and
jmp
fwait
pop
lahf
mov
ss
das
push
scas
insl
dec
jbe
repz
shll
mov
or
and
push
mov
lcall
and
cmpsb
dec
test
sub
pop
aaa
cmpsb
sbb
outsb
and
jle
push
movsl
lcall
inc
mov
sub
mov
mov
out
outsl
jne
jns
test
sbb
in
outsl
movsl
lds
sarb
dec
sub
and
and
out
jecxz
scas
sub
ffree
nop
faddl
sbb
or
outsb
sub
push
daa
into
daa
fwait
sub
lock
push
or
mov
or
xor
out
sub
dec
int
mov
dec
adc
rcr
xchg
mov
mov
xor
dec
out
jae
sbb
ds
fbstp
cmp
out
loop
enter
sbb
scas
cld
jo
dec
inc
cmp
das
es
into
ror
daa
adcl
stos
cmp
push
sbb
push
jbe
xor
or
xor
mov
dec
cmp
cmp
cltd
dec
cmp
stos
cmp
sub
inc
into
inc
test
mov
outsb
mov
orl
jae
into
in
imul
dec
push
scas
xchg
fisttpll
popa
pop
sbb
sub
cs
aad
icebp
xor
shlb
test
movsb
xor
mov
dec
sbb
add
mov
add
aad
cli
in
movsb
pop
mov
out
xor
sbb
scas
stos
push
outsl
xchg
mov
sarl
mov
jmp
jbe
lds
push
lret
sbb
leave
sub
pop
push
cmp
or
pop
lcall
sub
push
aad
pop
sbb
loop
and
stos
adc
je
repnz
jae
push
insl
cwtl
ret
pushf
or
maxps
lock
mov
jle
jno
mov
jecxz
cmp
push
inc
rclb
or
sbb
pop
daa
mov
inc
xor
aad
push
scas
inc
xor
jge
push
dec
fidivrs
or
loope
out
repnz
jp
dec
mov
das
fisubs
mov
daa
jge
or
test
and
push
scas
or
push
adc
ja
fxch
cmpsb
mov
cmp
adc
comiss
sbb
aaa
add
dec
push
cltd
movsl
inc
jno
and
pop
addr16
adc
lea
sub
test
add
jno
cmp
and
mov
xchg
jge
pop
pop
dec
das
mov
jbe
sbb
ss
xor
shrl
ficoms
inc
mov
rcrl
push
and
shlb
popa
imul
pushf
sub
aas
add
xor
je
sbbb
lock
adc
or
mov
stos
push
dec
and
mov
cmp
add
sub
insl
xor
data16
out
mov
jns
mov
out
fwait
and
ret
push
mov
sbbl
xor
jl
int
adc
push
cmp
movsl
and
test
xor
pop
fwait
add
ss
repnz
xchg
std
testb
aam
mov
fsqrt
mov
pop
out
dec
imul
out
inc
xchg
or
sub
or
test
shr
int
movb
adc
cmp
jl
adc
xor
and
jg
fcomip
ss
jge
dec
loope
adc
mov
pusha
adc
fcoml
sarl
aaa
negl
std
mov
aas
adc
add
cmp
cmp
ret
addr16
sub
xor
out
daa
sub
xchg
shl
mov
lcall
cs
sub
mov
daa
cmp
cmpsl
cli
lcall
cltd
and
popa
out
pop
or
mov
pop
fs
xchg
ss
mov
inc
mov
jne
sub
mov
bsf
ret
mov
or
jge
pop
sbb
dec
adc
pop
addb
test
movsb
mov
subb
add
cmp
psubusw
push
into
xchg
fimull
call
rcll
inc
scas
scas
dec
push
in
xor
arpl
out
lret
jns
cmpsb
js
pop
adc
imul
das
fwait
inc
sbb
jne
movsl
jg
dec
call
cmp
fwait
gs
movsb
pop
int3
jl
fsub
test
cmpsb
repnz
jb
mov
sbb
aam
sub
cmp
scas
mov
cmp
shlb
pop
adc
add
movsl
lock
mov
jne
stos
ret
pop
sahf
ss
pop
push
mov
mov
xchg
sti
mov
cmpsl
scas
lods
outsl
cmp
or
dec
inc
inc
jno
adc
pop
mov
inc
and
adc
pop
push
movsb
sahf
fldt
lcall
lret
arpl
ja
nop
leave
bound
std
xor
out
mov
stos
cmpsb
repz
and
add
add
gs
mov
pop
scas
daa
lcall
pop
cmpsl
inc
xor
mov
icebp
pop
jge
dec
push
lahf
or
popl
leave
rcrl
dec
sbb
mov
mov
test
scas
stos
or
insl
loopne
loop
mov
imul
je
mov
loop
cmp
call
ja
lds
sub
inc
fidivs
pop
mov
sub
stos
in
inc
popa
cmc
movsb
jo
loope
dec
add
idivb
nop
sub
sbb
push
das
div
mov
enter
scas
xor
mov
imul
cli
mov
mov
imul
pop
push
js
out
cltd
ds
in
imul
stos
inc
ljmp
fdivp
jbe
dec
out
addr16
jbe
fildll
fdivl
xchg
push
xor
rolb
fwait
dec
fs
or
cs
or
cmpsb
mov
fdivrs
pop
lret
jbe
cmpsl
test
xor
and
lret
add
jo
xchg
fimull
dec
adc
sbb
stos
pop
data16
loop
loopne
dec
hlt
inc
movl
sub
xchg
pavgb
sub
les
fmuls
dec
jecxz
pop
adc
pop
movsb
jae
ret
adc
mov
out
jmp
daa
pop
rorl
mov
int3
mov
test
mov
sub
cmpsl
sahf
mov
jns
ret
andb
pop
mov
in
dec
add
dec
rorb
mov
jl
test
adc
adc
mov
mov
add
daa
jne
das
test
out
add
adc
sbb
insl
mov
cmp
nop
jl
call
hlt
jne
into
mov
loop
inc
jl
fwait
or
loop
mov
inc
aam
or
test
push
cmp
jl
std
adc
push
int3
bound
push
dec
inc
mov
cld
sub
inc
lret
sub
lret
sub
mov
into
and
adc
mov
andl
sub
lret
outsl
int3
cs
out
sub
and
mov
jb
xor
outsb
inc
push
inc
fwait
xor
adc
mov
adc
cmpb
arpl
lods
imul
xor
mov
jle
insl
aaa
mov
lods
leave
inc
mov
movl
add
mov
mov
jp
cmp
aam
jo
pop
insb
sub
mov
shll
repz
js
mov
out
jl
pusha
inc
cmpsb
insb
push
xor
test
pop
lods
stos
xor
fwait
sub
pop
adc
xchg
xor
xor
imul
pop
and
jno
push
jno
fwait
lods
inc
inc
mov
sahf
cs
sub
mov
je
adc
and
ficoml
pusha
inc
sbb
aad
push
pop
movsb
push
and
pusha
mov
std
in
das
popf
mul
mov
in
fdivl
adc
out
ja
shlb
pushf
popl
iret
or
push
loop
inc
sbb
pushf
mov
sbb
sbb
jno
addr16
insb
in
mov
jle
and
dec
pop
jg
cmpsl
decb
addr16
jg
and
outsb
repnz
xor
mov
out
clc
test
mov
pushf
cmpsb
xor
push
aad
in
sub
push
aam
aas
mov
dec
jo
cmp
pop
xor
adc
jle
dec
fwait
sub
iret
add
pop
add
lock
push
and
jle
test
test
loop
xlat
push
fisubrl
pop
jo
or
cmp
rcrb
imul
mov
dec
bound
mov
pop
cmc
jg
sbb
xor
cmpsl
jmp
xlat
shrb
ljmp
mov
push
movsb
js
scas
daa
inc
test
ret
xor
jbe
arpl
dec
outsl
data16
and
mov
jno
xor
adc
sub
dec
push
jecxz
gs
and
mov
inc
dec
test
pop
lock
mov
cltd
inc
into
inc
repz
pop
sub
push
test
push
push
inc
push
test
sub
dec
and
sub
cmp
pop
sahf
mov
in
and
outsl
outsl
cltd
movsl
xor
mov
adc
mul
jno
pop
cmp
rcr
out
bound
push
pusha
test
and
adc
xchg
jmp
insl
outsb
outsl
mov
fwait
aas
inc
pop
mov
out
sbb
mov
sub
insl
cmpsb
and
jo
int3
mov
sbb
pop
xor
mov
and
mov
addr16
aaa
xchg
cwtl
sub
insl
imulb
mov
xor
sbb
clc
loope
jl
lods
xchg
das
xor
gs
dec
mov
jne
pop
dec
mov
jge
test
cmp
jg
and
add
imul
test
mov
jb
xchg
scas
sub
jbe
sbb
dec
xchg
xor
cmp
jno
lcall
dec
loop
push
push
mov
pushf
enter
outsb
jl
push
push
xor
mov
sbb
cmp
mov
std
sbb
aaa
mov
movsb
push
or
pop
dec
in
sub
or
shrl
test
cmp
cs
sbb
push
adc
clc
and
adc
mov
ja
cmp
adc
or
push
test
push
imull
stos
adc
pusha
aad
cmp
fadds
xchg
xor
and
ljmp
jo
mov
cltd
out
xor
mov
adc
ret
push
xchg
xor
push
lcall
jo
fidivl
sahf
mov
insl
mov
arpl
mov
mov
lds
ss
adc
imul
xor
leave
mov
mov
cs
bound
aas
outsb
xor
push
and
xor
jge
ja
lcall
add
shll
mov
lcall
adc
add
aaa
sbb
mov
lret
outsl
or
nop
fsts
cmp
in
loopne
cli
aad
aas
fadd
mov
aaa
cs
leave
iret
push
stc
fsubrs
pop
mov
add
mov
xor
add
push
adc
mov
lds
add
mov
adc
jbe
mov
mov
test
push
pop
jo
aaa
js
scas
mov
fidivl
xchg
xor
sbb
push
dec
and
mov
cmp
adc
in
inc
inc
jo
jmp
data16
or
xor
jo
in
mov
pop
subl
ret
stc
xor
mov
stc
cmp
mov
jns
aad
pushf
ror
cmp
or
sbb
mov
xchg
dec
cmp
sub
dec
fcoms
pop
jnp
push
dec
loop
roll
mov
xor
xchg
adc
push
adc
stos
adc
cmp
adc
hlt
push
adc
pop
movsb
cmp
cmp
fdivs
mov
mov
mov
sahf
loope
fwait
cmp
xor
add
xor
frstor
jb
cmp
imul
ror
sub
jge
iret
mov
pop
pop
dec
cwtl
loopne
jge
mov
fdivrl
jecxz
cmp
rol
mov
or
inc
out
mov
in
push
xor
adc
notl
add
repnz
lcall
test
cmc
or
xchg
jo
out
dec
and
cmp
test
mov
inc
out
dec
jge
mov
xor
ja
shrb
data16
adc
mov
inc
aam
clc
dec
pushf
lret
fwait
insb
inc
test
pop
jge
pop
jecxz
into
sub
dec
sub
add
rclb
dec
lcall
aam
jns
shll
mov
cld
adc
push
mov
fwait
outsl
out
dec
enter
movsl
jb
ss
das
inc
sub
stos
ss
dec
jbe
ds
in
mov
idiv
add
add
out
daa
inc
or
or
pushf
sub
xor
imul
push
pop
fists
loopne
pop
mov
jb
and
mov
jge
adc
mov
sub
out
jno
xchg
pop
stc
xchg
jo
adc
mov
push
jo
sbb
jecxz
dec
movsb
pop
out
push
and
test
jle
sbb
popa
icebp
fistpll
cmp
jmp
mov
xchg
mov
pop
mov
jp
daa
cmp
mov
cmp
jp
mov
dec
jb
sbb
addb
movsb
fsubrs
ljmp
adc
aad
push
or
ficoms
mov
repnz
mov
and
and
adc
nop
test
loope
add
mov
shlb
sub
insb
and
jo
inc
inc
mov
cmpsb
dec
into
mov
stc
popa
adc
xor
xchg
sub
in
inc
pop
outsb
mov
xlat
sbb
mov
cmp
test
jbe
inc
aaa
repz
mov
call
pop
dec
pop
rolb
inc
js
scas
aas
jns
xchg
in
xor
jl
rclb
aad
lods
cmc
jl
fwait
scas
cmp
push
jge
outsb
push
add
jo
rolb
jg,pt
ss
and
rolb
or
and
dec
mov
test
cltd
das
jns
insb
rol
xor
add
and
je
xor
jae
shr
mov
outsb
cld
dec
add
cmp
scas
inc
fdivl
pop
subl
dec
out
cmpsb
cmp
pop
int3
push
inc
cli
cmp
movsb
xchg
jmp
std
sbb
inc
icebp
ss
mov
cs
mov
pop
push
sub
pop
pop
and
fnstsw
incb
imul
lods
and
mov
and
stc
mov
cwtl
imul
daa
arpl
das
sub
pushf
popa
mov
je
loope
xlat
sub
sub
mulb
inc
mov
cmp
cmp
adc
lea
adc
push
cmpb
imul
gs
jno
andb
sub
je
sar
aas
mov
ljmp
jge
mov
nop
int3
adc
and
push
sub
push
mov
out
aas
sub
ja
push
aam
dec
popa
call
shlb
pushf
pop
sub
fcoms
mov
mov
sbb
cmpsb
lret
ja
inc
dec
inc
inc
mov
xor
push
test
mov
xchg
pop
push
lcall
jnp
inc
addr16
pop
jo
out
sub
enter
push
xorl
push
es
sbb
xlat
pop
ds
mov
push
iret
pop
sbb
jbe
sarb
ja
jns
insb
jp
dec
xchg
inc
jg
iret
add
cwtl
push
dec
jl
out
aaa
jle
push
push
arpl
dec
cld
sub
and
dec
add
dec
cmp
sbbl
dec
and
je
repnz
stos
xchg
inc
cs
aad
scas
mov
jg
push
cmp
inc
push
sbb
jg
pop
xchg
cmpb
jle
cmp
adc
jae
in
int
adc
popf
test
sbbl
fdivp
imul
pusha
xchg
push
das
pop
fstps
sub
xorb
jl
test
cld
rep
jnp
cmp
mov
pop
adc
out
std
mov
sbb
dec
xor
push
mov
mov
push
dec
push
in
jmp
jbe
mov
setp
dec
and
lea
mov
cmp
test
fsubrs
mov
add
pop
xor
cmp
and
jl
pop
lods
ljmp
dec
adc
mov
add
sub
popf
pop
lcall
scas
out
loope
punpckhdq
aad
dec
ljmp
xor
jo
into
and
lcall
dec
and
jle
enter
sub
lods
add
lcall
hlt
mov
sub
call
and
and
push
pop
insl
shlb
ja
jne
repz
in
cwtl
das
xor
dec
sbb
mov
test
sti
mov
mov
xor
out
xchg
cwtl
movsb
sub
push
inc
xchg
sub
xor
xor
icebp
das
stos
sub
lcall
mov
adc
js
add
repnz
sub
lods
dec
add
add
jae
push
push
cs
push
dec
in
and
cmpsb
and
sub
fcompl
mov
xor
sub
movnti
out
push
mov
aaa
mov
jbe
jb
mov
shrb
mov
dec
jbe
sar
data16
cmp
inc
sub
push
mov
push
loop
outsb
addl
lret
dec
and
mov
cmp
xchg
mov
pop
inc
push
pusha
and
ds
test
fisttpl
sahf
loop
jae
stos
xor
fcmovbe
and
cmp
aam
hlt
aaa
mov
loop
ficoml
sbb
pushf
xchg
icebp
adc
arpl
mov
inc
and
mov
test
and
dec
xor
or
ljmp
call
mov
push
ss
pop
or
out
testl
out
and
jmp
cmp
push
mov
xchg
mov
aas
fiaddl
loope
xor
icebp
push
pop
inc
leave
int3
jmp
and
push
ret
cmpsl
movsb
inc
push
mov
jge
lahf
and
fsubs
jno
pop
sbb
lods
adc
mov
sub
fists
cmp
daa
in
rcll
cmp
dec
jo
daa
add
add
cmp
mov
test
insl
push
popa
dec
sbb
cmpsb
cld
dec
test
fwait
mov
daa
ret
scas
insl
push
jge
push
leave
jg
call
dec
movsb
lea
fidivrs
cmp
mov
mov
lods
rorb
andb
hlt
cmpsb
mov
xor
adc
mov
inc
outsl
ds
add
out
fs
out
xor
rorl
mulb
xor
out
in
mov
cltd
scas
loop
dec
aam
insb
adc
hlt
aad
and
pushf
mov
sahf
lcall
jae
mov
xor
dec
sub
xor
dec
mov
cmp
insb
movsl
cmp
pop
ret
aad
sub
out
mov
add
inc
xchg
sub
inc
or
mov
popa
xor
aaa
push
sub
adc
scas
jne
xorb
and
jnp
daa
shrb
popa
push
je
shrl
push
xor
outsl
sahf
ss
hlt
pop
inc
sub
stos
sbb
add
xchg
mov
mov
dec
popa
ret
out
and
jp
and
test
stos
or
and
movntps
xchg
pop
sahf
push
in
das
sbb
and
push
cmp
sbb
lgs
out
outsb
jne
sbb
fs
movsb
add
hlt
push
stos
jo
add
xor
mov
sarl
lcall
mov
sbb
xchg
and
sub
repz
repnz
push
mov
cmp
stc
and
hlt
pop
mov
imul
scas
jae
mov
addr16
aas
aad
push
push
jmp
inc
sbb
out
push
pop
mov
jl
dec
add
push
cmp
js
sbb
jmp
inc
loop
dec
dec
sahf
add
dec
cmp
mov
jbe
sbb
sub
icebp
jg
mov
or
int3
adc
hlt
int3
add
jb
jbe
jno
inc
lods
or
in
test
xchg
nop
pop
xor
add
push
inc
sub
sahf
inc
das
push
imul
ljmp
mov
xchg
jge
out
ja
push
mov
shrb
sub
sarl
icebp
shll
js
sub
xor
daa
jmp
ja
jo
scas
popf
hlt
sbb
lahf
and
jne
pop
outsb
das
std
leave
dec
aaa
pop
inc
psubd
push
insb
push
dec
stos
movl
aaa
and
sub
inc
cmpl
add
sbb
inc
mov
mov
fiadds
test
dec
ljmp
sub
nop
outsb
das
lahf
aaa
cmp
sub
xor
add
dec
jnp
mov
sub
lcall
js
arpl
jle
cmp
dec
sub
jns
sub
jbe
dec
push
stos
and
jb
cmp
cmp
out
scas
cmp
fwait
popa
pusha
xchg
inc
pop
fsubrl
mov
das
mov
or
dec
out
xchg
push
mov
cmp
add
icebp
stc
pusha
repz
inc
mov
push
outsb
lock
inc
mov
sahf
out
pop
pop
adc
jbe
and
mov
jo
sub
push
jne
iret
pop
fbld
dec
test
cld
dec
dec
lcall
divl
push
ja
mov
push
xor
cmp
data16
mov
push
int3
mov
sbb
cmp
test
cmp
pop
stos
out
data16
fadds
out
std
sbb
fstps
setne
sub
mov
xchg
push
lret
mov
adc
insl
roll
xchg
pop
dec
getsec
testb
xchg
push
repz
jno
xor
int3
xor
dec
test
mov
push
mov
xor
jno
and
inc
scas
jne
adc
addr16
pop
add
cmc
in
adc
pushl
divl
ss
cmp
adc
hlt
xor
xor
mov
jo
ja
das
mov
xchg
jo
push
outsl
sbb
dec
pushf
jl
dec
dec
data16
jb
dec
push
sbb
adc
div
push
enter
adc
js
std
sub
ret
mov
jnp
adc
ret
ds
movsb
sub
fwait
popa
jo
rclb
out
cmp
jle
scas
movsb
mov
mov
fsubs
cmpsb
je
call
inc
aad
test
ds
adc
outsl
mov
rolb
inc
inc
mov
insb
adc
and
jno
mov
jno
lea
imul
inc
lcall
cld
repnz
or
adc
push
adc
lcall
adc
dec
push
cmpsl
mov
loopne
sub
pusha
jle
mov
add
stos
or
push
inc
stc
dec
lds
mov
jl
mov
clc
xchg
shlb
ja
sub
cmp
push
outsl
and
js
dec
mov
sbb
jge
pop
jbe
jle
dec
add
dec
push
and
shlb
fsubr
mov
cmp
mov
xor
mov
push
mov
mov
lock
aad
cmpsl
push
ss
decl
lret
dec
add
push
or
icebp
shlb
jno
sbb
int
sbb
pusha
adc
cld
cmc
hlt
aad
mov
movsb
movsb
loope
xor
scas
mov
jb
xchg
sub
fsts
pop
jno
in
fwait
cmp
loopne
movsb
cmp
push
clc
pop
sub
movsb
dec
fwait
aaa
lcall
jo
pushf
shrb
xchg
imull
or
add
mov
jmp
push
loopne
mov
shlb
cld
dec
push
orl
outsb
scas
cmpsl
jne
aas
ss
test
cmpl
stc
and
add
das
popa
dec
add
in
and
push
pop
or
xor
repnz
cmp
cld
pop
int
sbb
test
ds
sub
cmc
daa
push
dec
mov
repnz
jns,pn
mov
mov
mov
aaa
ficomps
mov
loope
and
jno
mov
dec
xchg
ja
lret
fwait
addr16
lret
lret
or
nop
insl
sbb
out
repnz
fmuls
jae
aad
mov
jbe
xchg
add
jbe
cmp
outsl
sbb
mov
cmp
aaa
sub
loopne
test
dec
nop
and
cmp
call
dec
ljmp
pop
mov
cs
cmp
sub
jl
aaa
mov
pop
call
int3
sti
cwtl
inc
mov
sbb
jno
in
add
fimull
and
cmc
pop
inc
popf
das
hlt
jp
testl
aas
outsl
imul
mov
lahf
shlb
pop
hlt
in
or
cmpsl
lahf
jno
push
movsl
pop
cmp
xor
mov
clc
and
addb
xor
das
jbe,pt
push
jae
ss
iret
ret
bound
xor
cmp
sub
push
mov
mov
jle
mov
xor
push
stc
xor
sub
bound
mov
pop
popa
cmc
inc
cs
pop
addr16
dec
jle
push
adc
cmp
dec
or
arpl
ljmp
xor
test
mov
mov
xchg
sub
xor
inc
mov
sub
nop
cmp
negb
in
fwait
das
jecxz
mov
int
cwtl
inc
fnsave
sbb
xchg
hlt
add
outsb
pushf
addr16
mov
js
in
dec
lods
ss
pop
enter
dec
imul
push
add
cmp
shlb
inc
mov
dec
jecxz
inc
dec
sbb
dec
push
jge
push
pop
xor
xchg
out
jbe
scas
adc
dec
mov
rclb
inc
movb
adc
out
dec
bound
or
lcall
and
or
add
test
outsb
cli
pop
push
dec
gs
hlt
addb
push
xor
jmp
adc
or
imul
inc
push
and
mov
xor
pop
jb
je
push
inc
das
push
jnp
push
cmp
insl
je
loopne
int3
push
push
push
sahf
pop
mov
aas
sub
lcall
ss
ja
sbb
or
pusha
xacquire
test
fcoml
jl
or
jno
mov
insl
pop
mov
cmp
push
sub
adc
out
int
aad
stc
sbb
or
std
daa
int
lcall
lea
out
movsb
popf
sub
jmp
pop
imul
arpl
or
out
xor
out
cmp
imul
inc
mov
fsubrp
inc
sub
sub
lret
mov
and
jl
stos
push
scas
mov
or
mov
mov
pop
out
inc
mov
jp
loope
ds
xchg
inc
aaa
je
in
mov
jne
and
jae
push
and
adc
sbb
cmp
sbb
mov
aas
pop
jae
ss
loop
cmpsl
dec
lcall
std
stc
outsl
insb
and
outsl
push
dec
sbb
xlat
mov
sbb
stos
lds
mov
jae,pn
lock
inc
test
adc
in
fwait
test
out
popf
cmpsb
sub
loope
xor
and
jge
jb
pushf
pop
push
mov
jg
xor
pop
clc
test
push
cmpsb
in
sbb
mov
ja
dec
stos
xchg
xchg
inc
loopne
push
ss
out
jbe
xchg
in
lcall
add
dec
sub
fidivl
lret
ds
daa
lret
lock
mov
sub
rcrb
xchg
cld
or
jne
pop
sub
subl
xor
sbb
pop
xor
fwait
decb
pusha
divl
inc
mov
lcall
aad
xor
push
mov
divb
scas
push
inc
jle
push
or
clc
adc
loopne
dec
sbb
outsl
cmp
mov
adc
scas
jp
or
lcall
cmp
sbb
out
inc
jne
push
pop
and
pop
outsl
mov
add
icebp
fwait
cmp
xor
xchg
popf
aad
loop
dec
scas
ja
stos
mov
pop
dec
stos
arpl
pop
push
loope
into
mov
ja
push
mov
adc
mov
iret
push
mov
ja
es
xor
mov
imul
cltd
dec
aad
roll
xchg
mov
inc
je
popw
pop
adc
cli
and
dec
outsb
mov
and
pop
in
cli
scas
repnz
mov
and
pop
jle
sahf
and
and
cwtl
popa
arpl
push
jbe,pn
lret
jge
call
fwait
cmp
adc
outsl
mov
pop
mov
add
sub
push
add
push
dec
and
mov
ss
dec
and
in
outsb
call
and
add
push
pop
adc
scas
imul
test
out
xor
or
mov
adc
push
fcmovne
fadds
dec
jo
test
mov
in
xlat
stos
ret
cmp
push
nop
sub
fstps
xchg
ljmp
add
dec
push
cmp
idivl
test
and
mov
add
andb
pop
dec
sbb
stos
push
outsb
in
adc
or
push
icebp
sub
test
sbb
push
incb
mov
fisttpl
mov
xor
jge
sbb
sbb
jmp
jge
and
mov
inc
push
push
sub
dec
cmp
jb
out
repz
cltd
mov
jno
inc
fsubrs
xchg
jae
sub
fwait
mov
push
cli
mov
fcmove
mov
and
push
pop
sub
inc
sub
pushf
push
imul
movsb
cmp
rcll
sbb
push
inc
loope
mov
mov
or
lcall
bound
data16
xchg
sub
fists
jge
out
pop
jbe
or
mov
dec
inc
shrl
inc
sub
push
lods
xchg
xor
out
in
xchg
jmp
dec
nop
jbe
adc
lea
subl
divl
or
scas
cli
push
rclb
mov
enter
dec
popa
jle
dec
pop
cmp
dec
fsubs
cli
pop
dec
mov
or
sar
mov
out
sahf
in
lret
or
mov
sub
fldt
xchg
jg
or
sub
in
lcall
mov
sub
push
lcall
xlat
insl
mov
mov
or
push
les
pop
clc
ja
imul
dec
loopne
enter
stos
mov
rorb
sub
cltd
mov
cmp
popa
dec
inc
lcall
inc
insl
jle
mov
cltd
cltd
dec
add
shrb
sub
pop
xchg
adc
and
and
stc
dec
ds
popa
cmp
hlt
push
jbe
xchg
stc
inc
mov
testb
mov
fdiv
movsl
mov
repnz
stos
mov
cli
sub
dec
lea
jecxz
cmp
xor
shrb
aam
fisubrl
rcr
jl
stos
pop
lcall
out
loopne
in
imul
push
jno
adc
lock
mov
mov
in
cmp
jmp
xchg
inc
cmp
jns
in
out
inc
mov
decl
push
sbb
adc
sub
nop
rcll
jo
push
sbb
stos
dec
adc
fwait
push
shlb
and
adc
mov
sub
mov
inc
jl
and
fisttpll
insb
outsl
xchg
mov
sub
jo
and
inc
mov
jbe
sub
inc
push
xchg
add
sbb
sub
push
push
mov
cmp
inc
je
add
xor
cmpl
dec
adc
pop
movsl
call
fmuls
jno
and
push
jmp
sub
xor
pusha
pop
sahf
sub
mov
ja
in
das
pop
enter
mov
xchg
sbb
add
cmp
imul
inc
mov
push
imulb
sub
rcll
mov
push
aaa
mull
sti
or
push
xor
fs
out
cmp
sahf
push
sub
or
lret
and
jmp
sbbl
jmp
testl
xor
jle
rorl
clc
scas
jns
lahf
cli
xlat
push
lahf
or
mov
stos
and
inc
push
mov
sbbb
dec
aas
cmp
cs
cmp
test
daa
jne
add
jle
cmp
cmp
mov
xchg
cmpsl
test
jb
fs
scas
lds
test
jo
rcrl
adc
ret
sub
and
dec
mov
insb
cli
cs
dec
pop
jno
out
fwait
sub
inc
dec
cmp
jle
and
or
js
push
lcall
out
add
shrl
adc
icebp
and
mov
mov
push
imul
dec
je,pn
scas
dec
js
or
cmp
jl
std
loopne
data16
or
jp
jo
or
aad
insl
jp
call
inc
aas
popa
lret
push
mov
nop
outsl
push
in
lahf
cmpsl
sub
popa
lock
pop
adc
stos
mov
movsb
pop
xor
movsl
xor
stos
mov
push
pop
in
jp
call
mov
jae
adc
jns
jnp
pop
mov
jmp
movsb
std
jl
lods
mov
ljmp
mov
call
pop
jo
hlt
clc
sarl
push
push
ja
or
and
inc
jge
cmp
out
test
jge
mov
adc
loopne
cmp
mov
inc
and
sahf
pop
outsb
movsb
or
icebp
movsb
inc
aaa
outsl
scas
ss
sbb
add
jl
mov
lock
jecxz
int
adc
dec
adc
jle
sarb
out
call
sbb
xchg
or
js
xchg
push
inc
and
mov
test
xor
add
add
jl
shrl
subl
adc
sub
test
xor
xor
jg
push
sahf
cmpsb
sub
popa
and
clc
fbld
test
push
inc
pop
dec
push
mov
xor
ja
js
ss
push
std
add
stc
sahf
sbb
jnp
fidivs
into
jecxz
test
xchg
sub
cld
mov
test
test
cltd
data16
daa
push
jle
imul
or
jbe
add
sbb
mov
and
js
mov
jmp
adc
sti
stos
clc
lret
lds
jne
dec
addr16
inc
dec
aas
dec
pop
jns
cmp
fsubp
dec
inc
jl
sub
adc
popa
cmp
sub
scas
adcb
sbb
das
icebp
mov
ds
sbbl
jp
mov
fcmovbe
jbe
fwait
aaa
pop
pop
push
push
ja
loope
adc
push
push
int3
pop
inc
dec
negb
xor
inc
jnp
lcall
leave
push
push
addr16
sub
jbe
push
dec
into
and
inc
ljmp
sub
and
mov
mov
push
jno
mov
fwait
pop
stos
jns
js
loop
pushf
leave
cs
fsubrs
sti
addr16
and
cmp
lret
cmpsl
js
mov
sub
shrl
popa
test
js
add
jne
push
push
cmc
push
push
hlt
pushf
frstor
sub
jne
outsl
jno
sub
ficoms
jno
enter
push
mov
sbb
das
divb
in
inc
loopne
stc
mov
sub
sbb
ret
lea
daa
mov
test
scas
sbb
dec
sub
jae
cmp
xor
insb
shlb
dec
pop
lcall
pop
sub
mov
mov
mov
sbb
movsl
enter
lcall
adcl
jb
test
rep
mov
cmp
js
sub
sub
sar
or
adc
fs
jl
popf
dec
fwait
dec
in
sbb
mov
rcrl
xchg
jge
pusha
aam
popf
hlt
fsubrp
dec
adc
lcall
cmp
pop
mov
pop
cmp
sbb
sbb
adc
sub
outsb
ss
mov
repz
in
inc
sub
bound
adc
stos
cltd
loop
int
sub
and
inc
pop
adc
das
mov
daa
jbe
js
push
stos
int
das
loope
imul
cmp
inc
inc
ss
xor
popf
cmpsl
out
mov
mov
movsl
dec
adc
out
push
and
cmp
xchg
outsl
popa
pop
fwait
jecxz
xor
movsl
dec
dec
enter
mov
sbb
push
fwait
fs
push
addl
stc
jecxz
das
mov
sub
fwait
jmp
shl
sbb
or
mov
das
sbb
xchg
cmp
in
dec
mov
pop
push
dec
movsl
jbe
mov
ljmp
sbb
out
ss
push
mov
adc
mov
sub
jns
add
das
aaa
jns
movsb
vorps
mov
int
xor
or
enter
adc
jno
and
pop
push
out
mov
stos
push
jl
stos
mov
push
jmp
fs
mov
jmp
sub
scas
mov
call
movsl
ret
shll
das
fsubs
inc
not
das
push
jno
das
fs
cmp
js
xor
and
out
push
push
adc
cmpsb
les
mov
sub
sahf
aas
dec
push
sub
mov
in
fidivl
mov
in
xchg
cmp
mov
test
and
outsb
cmp
mov
xor
pop
movb
setge
push
sbb
lock
ja
cmp
call
sub
sub
inc
and
shl
jne
lods
ss
mov
dec
pop
out
rolb
pop
mov
aaa
aad
insl
adc
pushf
push
sbb
pop
scas
mov
lcall
jle
cmp
mov
popf
fmul
stos
push
mov
jge
ljmp
jp
cmp
mov
data16
idivb
inc
int
xchg
and
shlb
push
dec
pusha
leave
jg
dec
cmp
test
jl
mov
repz
popa
jecxz
movsl
fcom
mov
inc
push
mov
pop
sub
or
xchg
mov
sbb
inc
icebp
mov
add
add
cmpsb
cmp
mov
fwait
jbe
call
push
ret
adc
push
mov
or
fisubrs
adc
int
test
iret
xor
popa
int3
push
jge
movsb
add
sbb
add
jge
mov
or
aaa
loope
push
mov
mov
mov
gs
push
pop
mov
sub
stos
js
cmp
in
xchg
ljmp
in
cmpl
mov
jbe
push
sub
push
pusha
mov
sub
movsb
push
mov
pop
popa
stc
mov
sub
and
cmp
mov
cwtl
pop
mov
aaa
push
or
pcmpeqd
xor
imul
insb
cli
mov
scas
popf
or
jecxz
inc
inc
xchg
aas
mov
jne
jno
pop
cmp
mov
shl
add
je
sbb
dec
mov
lret
out
andl
adc
shll
fwait
push
cwtl
jmp
jp
jb
mov
dec
cmp
in
sarl
aas
ret
ss
dec
or
ret
jg
or
call
ret
call
mov
mov
sbb
sub
pop
sub
in
outsl
cmp
shl
sub
outsl
cmp
lcall
or
xorl
jmp
mov
sbb
sbb
sbb
xor
int
jecxz
mov
mov
sbb
xor
xor
push
inc
xor
push
or
retw
inc
jae
jae
push
add
mov
mov
pop
adc
or
xor
pop
mov
sub
add
push
aas
xor
icebp
pop
xor
lods
sub
subb
dec
add
hlt
mov
inc
inc
leave
test
inc
xorl
mov
cmpsb
cli
dec
adc
mov
adc
jo
fmulp
mov
push
mov
outsb
imul
hlt
mov
adc
push
cwtl
pop
daa
dec
nop
sub
rolb
out
lcallw
mov
scas
sub
js
cmp
shrl
lahf
das
jp
test
push
insb
jle
add
repz
pop
mov
jns
ret
lock
dec
cmpsl
movsb
xor
jle
bound
dec
decl
lret
mov
shl
insb
test
popf
dec
test
ss
out
jnp
fsubrs
call
hlt
pop
test
imull
dec
aaa
pushf
add
xlat
dec
xadd
xor
shll
dec
daa
dec
push
fwait
xlat
lock
cmp
xor
jmp
jecxz
lcall
jb
outsb
repz
mov
xlat
outsb
push
movsb
call
jmp
cmp
rcrb
and
mov
mov
inc
notl
and
aas
push
jp
fwait
in
push
push
ljmp
popf
mov
fwait
cmpsb
frstor
sbb
dec
lods
into
dec
mov
adc
xor
adc
sbb
or
lcall
orl
popa
xchg
incb
adc
pop
mov
test
iret
inc
jg
cmp
sub
inc
shlb
mov
shl
push
into
cmc
sbb
sbb
xchg
sti
dec
aam
jne
je
fwait
ja
cmp
loop
cli
lret
jl
jne
popa
aas
daa
mov
cli
mov
ds
sbbb
xor
call
mov
dec
jl
out
test
add
icebp
mov
and
sbb
sbb
jno
mov
pop
fwait
inc
mov
popa
dec
aas
xchg
jae
cmp
stos
ss
rcrb
ds
xor
jp
jg
pop
into
fcomp
jg
shrl
insb
push
mov
cmp
dec
mov
ljmp
mov
mov
mov
xor
jns
mov
fs
in
mov
mov
xor
movsb
push
cli
xchg
lods
dec
mov
out
fcmovu
dec
and
popa
push
jbe
mov
dec
leave
sub
in
push
and
loopne
jmp
adc
outsb
out
xchg
clc
push
test
out
mov
pushw
cmp
lahf
lcall
imul
movsb
cmp
add
push
mov
dec
sbb
data16
push
sbb
call
in
cltd
inc
push
pop
push
cmp
pop
jae
dec
movsb
pop
enter
pop
loop
push
enter
mov
jmp
mov
out
cmovbe
jne
xor
cmp
xor
and
jo
jge
cli
test
push
lret
sbb
and
mov
lahf
test
and
movsl
adc
js
das
and
add
sbb
aad
shlb
cmpsl
repz
mov
mov
insb
stos
and
add
pop
add
test
push
das
int3
push
dec
std
mov
jno
daa
out
test
xchg
fsubrs
jge
and
jo
xor
pop
cmp
mov
cmp
scas
mov
push
xlat
pop
add
cmp
fildll
jns
test
lret
das
pop
and
xchg
imul
sarl
cltd
int3
pop
jp
jbe
push
jmp
pop
ljmp
clc
loopne
push
xor
sbb
cvtps2pd
movsl
call
xchg
lea
sub
enter
pop
lds
and
xor
add
mov
jl
rep
xchg
mov
pushl
xor
jmp
sbb
jo
aaa
test
insb
mov
orl
cld
dec
orl
push
scas
mov
ljmp
inc
or
adc
in
movsbl
popf
push
mov
xchg
stc
inc
jbe
push
xchg
fwait
adc
scas
sbbb
frstor
and
scas
sub
jno
or
push
mov
in
imul
push
or
movsb
lds
out
xchg
xchg
xchg
dec
sub
push
cmpsb
icebp
pop
das
scas
rcrb
xchg
mov
test
test
push
lret
lea
dec
out
cmp
lcall
pushw
jp
stos
rclb
sbb
inc
ds
loope
cmp
mov
cmp
adc
sbb
xorb
mov
enter
jbe
mov
aad
xchg
ret
dec
pushf
push
scas
xchg
fnstenv
daa
sti
nop
sub
mov
jg
fwait
or
xor
mov
jl
or
adc
in
stos
cmp
pop
jo
pop
cmp
jge
cmpsl
in
jg
cmp
or
mov
lods
subb
xor
testb
iret
call
push
cmpsl
mov
jmp
pop
movsb
jp
in
push
test
push
add
dec
mov
sub
push
popa
xchg
cs
cs
inc
pusha
pop
jg
mov
movsl
mov
sub
jle
xor
xor
dec
inc
sahf
pop
dec
fimuls
sbb
jle
je
sahf
scas
lods
repnz
test
push
flds
jne
dec
insl
and
mov
mov
cmp
xor
jno
push
xor
loopne
jo
lds
push
xor
lcall
outsb
dec
movsb
pop
jmp
pop
call
jge
cmc
add
xor
inc
repz
pop
jns
js
and
mov
xchg
jne
mov
ja
mov
rcrl
jp
jbe
in
ret
jnp
in
dec
in
lods
xor
inc
cmp
jne
inc
pop
cmp
dec
or
aam
push
jno
inc
adc
fcoms
fs
xor
out
and
inc
mov
jg
dec
jl
mov
data16
negl
push
cmp
xchg
mov
jle
jbe,pt
xor
xchg
push
mov
cmc
test
push
jecxz
inc
jecxz
push
pop
aaa
fldl
jge
out
loopne
test
push
and
scas
insb
mov
xchg
pop
cmp
lods
push
mov
outsl
xchg
out
lret
aam
mov
cmp
data16
cmp
push
iret
add
scas
nop
jle
outsb
dec
or
xchg
pop
pushf
dec
sbb
jns
xor
and
std
xor
and
dec
lret
push
lods
or
xlat
mov
lret
xchg
test
mov
mov
xchg
or
mov
cmpsb
xchg
push
in
jb
out
or
loopne
loop
and
in
sahf
mov
femms
mov
xor
xchg
mov
gs
push
nop
sub
outsl
adc
xchg
inc
push
xchg
pop
fdivr
jl
pop
fildll
dec
inc
push
cmp
sbb
sub
cs
mov
or
outsb
mov
jg
cmp
cmp
mov
mov
push
inc
cmp
loope
lcall
mov
js
js
in
mov
insl
scas
inc
bound
fwait
cmp
movsb
fidivs
movsl
dec
sub
in
insb
cli
cmp
xchg
shlb
icebp
pop
cld
xchg
or
outsb
rep
data16
lcall
add
inc
addr16
and
or
or
ja
adc
addr16
cli
sub
mov
jmp
scas
lds
pop
test
test
lods
push
push
push
cld
faddl
mov
cmpsb
sub
sub
hlt
push
in
cli
push
xchg
pop
xor
xor
out
push
cmp
jo
out
test
mov
push
xchg
or
adc
mov
ss
cmp
jnp
cs
sbb
mov
sbb
sub
lods
xor
mov
or
xor
sbb
adc
and
sbb
sbb
cmp
frstor
test
mov
sbb
sub
ja
ss
icebp
adc
ds
cmp
test
pop
adc
ljmp
movhps
lcall
in
push
push
faddl
es
mov
nop
push
jns
stc
sub
sub
nop
mov
enter
jns
or
cmp
jp
jnp
xchg
arpl
enter
test
mov
ret
sub
sbbl
jae
mov
in
rorb
jo
and
mov
into
inc
outsl
add
out
jle
loope
push
or
aad
inc
test
inc
cwtl
enter
cld
ret
mov
mov
adc
sarl
xor
aaa
xor
clc
stos
jle
adc
std
out
adc
imul
push
and
dec
sub
push
sbb
or
lock
xor
mov
ja
ss
jp
xchg
into
ret
jecxz
cmp
jle
aam
mov
testb
lret
jne
mov
pop
test
ret
sub
push
inc
push
ret
sbb
xor
add
pop
fidivs
inc
lret
cmc
loop
inc
jge
call
out
or
out
jae
add
addr16
call
pop
sub
cmp
push
shlb
xor
mov
and
jne
pop
pop
push
std
cmp
sbb
clc
ret
fmulp
cmp
repnz
jnp
sub
jo
mov
ljmp
push
and
add
cld
add
push
ficomps
lretw
mov
add
xchg
jl
dec
mov
push
cs
arpl
je
pop
popa
mov
call
jge
mov
dec
mov
jb
push
pop
jnp
mov
outsl
enter
push
mov
lret
cmpsl
pushf
mulb
fs
adc
rcl
lahf
adc
sbb
mov
dec
jbe
dec
pop
push
jnp
arpl
adc
xor
sub
repnz
mov
mov
aaa
movsb
ds
add
dec
xor
pop
add
movsl
data16
push
jbe
mov
mov
xor
dec
and
pop
data16
and
cs
movsb
mov
nop
je
adc
out
insb
xchg
fwait
pop
mov
cld
xchg
xchg
jmp
pop
push
data16
lds
mov
jbe
sti
insb
addr16
fidivs
sub
mov
shrl
lds
jge
aaa
arpl
sbb
pop
iret
pop
cli
decl
push
popa
leave
xchg
je
push
js
xor
outsb
cmp
inc
sbb
pop
je
cmp
mov
sar
popa
jne
aad
ffree
push
pop
movsl
test
int3
popf
mov
sub
loope
pop
data16
xor
mov
insl
mov
push
or
aaa
mov
adc
mov
repz
es
inc
sub
xchg
cmp
mov
ja
int3
test
cmp
cmpsl
sarb
cmpsb
fwait
jmp
xor
gs
jae
stos
fwait
mov
or
inc
dec
daa
mov
shlb
or
pop
cs
je
lock
push
adc
cmp
negl
sub
sub
fadds
push
fwait
inc
ret
mov
test
jo
sbb
scas
jne
pop
dec
leave
je
std
cmp
pop
movsb
sub
testl
xor
mov
test
xchg
xor
xchg
fwait
subl
jo
pop
jne
inc
std
loope
aaa
lcall
scas
and
clc
adc
out
scas
cltd
mov
xchg
jns
or
pop
add
imul
mov
addr16
test
adc
and
iret
shll
scas
dec
jge
cmp
mov
push
sbb
mov
jo
add
adc
test
or
aaa
into
das
nop
dec
inc
popa
pop
mov
and
lea
dec
int
nop
pop
outsb
and
push
cmc
xor
sub
push
fwait
arpl
nop
fildl
dec
inc
daa
idivl
sub
mov
inc
lcall
cmp
jae
mov
aaa
dec
lcall
icebp
outsl
xchg
test
in
je
sahf
aaa
addr16
iret
loope
mov
adcb
pop
icebp
add
andb
ja
call
mov
add
push
mov
xchg
fbld
cld
mov
pop
and
fisubs
mov
rclb
negb
int
jne
push
popf
ret
xorb
cmp
sbb
sbb
jns
jle
cs
xchg
pop
dec
mov
mov
mov
loope
ret
pop
push
push
idivb
pop
stos
sub
inc
xchg
add
adc
push
cld
loop
cld
lret
hlt
lret
popl
dec
jp
das
lcall
mov
xor
psubq
lcall
mov
add
mov
and
sahf
mov
sarb
adc
cmpsb
aas
jo
mov
aad
in
lcall
sbb
fdivrs
pop
and
mov
ret
outsl
outsl
inc
ja
enter
test
lods
stos
mov
enter
inc
dec
dec
test
mul
movsb
jnp
out
js,pn
sub
ja
loop
push
jge
nop
enter
mov
jo
ss
aas
dec
dec
ljmp
or
fisubl
cmpsb
lods
pop
js
shl
push
cmp
xor
pop
push
pop
test
js
jnp
and
xchg
sbb
lock
xlat
mov
lret
inc
mov
data16
nop
mov
test
daa
and
cmc
cmp
add
push
or
push
lret
or
jbe
or
xor
xor
pusha
in
and
sbb
adc
scas
jno
xor
rorb
setno
fildll
clc
arpl
icebp
pop
or
push
xchg
sbb
jno
loopne
popf
pop
xor
pop
negb
loope
fisttpl
ja
lret
mov
mov
mov
push
loop
push
mov
sub
add
out
inc
ja
cmp
addr16
xchg
fsubrl
rclb
mov
test
adc
daa
sbb
mov
nop
clc
dec
jge
pop
in
sbb
jnp
testb
mov
outsb
jno
pop
jecxz
test
data16
jbe
das
inc
fdivl
sub
sbb
lret
ss
jb
fsubl
rorl
movsl
sub
xor
jp
aam
xor
mov
pop
mov
pop
test
mov
mov
mov
outsb
cmp
jp
addr16
idiv
jb
xor
jge
add
mov
and
je
test
aas
bnd
imul
sbb
inc
fisttpll
in
lcall
adc
push
das
xor
lret
sub
sbb
mov
idivb
sbb
or
js
xchg
pop
push
daa
test
movsl
fmulp
outsb
pop
ret
or
mov
mov
xchg
icebp
mov
jne
cmp
adc
and
add
mov
roll
mov
call
sub
sub
push
nop
xor
neg
cmp
rorl
pushf
push
push
inc
punpcklbw
lods
dec
ss
pushl
testb
mov
sbb
mov
mov
fdivr
dec
push
aam
jg
cmp
and
out
ds
out
aaa
and
xchg
test
jmp
mov
sbb
jmp
mov
out
enter
mov
ret
addr16
xchg
jb
movsl
js
out
daa
insb
sahf
jns
dec
sbb
pop
out
mov
cmp
adc
sarl
pop
mov
and
cs
mov
add
popf
push
push
shl
dec
adc
or
lret
test
pop
jp
bound
mov
iret
dec
jle
push
cmpsb
pop
cmp
pop
loop
adc
xchg
cwtl
outsb
pop
jb
ja
mov
rcrb
in
in
push
js
inc
jns
ss
bound
add
imulb
push
jno
aam
mov
or
cmpsb
setg
adc
adc
outsl
les
add
mov
xor
movsl
subl
xchg
cmp
imul
add
mov
lcall
ljmp
adc
pminub
push
outsb
cmp
pop
pusha
and
in
ror
fnstcw
test
pop
push
fisttpll
jo
adc
sub
or
fldcw
dec
cli
push
dec
lret
stos
sub
or
dec
das
movsb
xor
push
xor
out
jb,pn
hlt
push
rclb
push
adc
popa
mov
sub
fwait
leave
inc
test
xlat
sub
int
rcrb
icebp
xchg
sub
jecxz
adc
js
cli
data16
xlat
hlt
imul
sbb
leave
mov
test
mov
sub
mov
dec
push
cmp
cs
push
test
mov
addr16
dec
stos
xchg
loopne
push
sbb
sbb
outsb
push
add
dec
jmp
push
push
push
out
test
cmp
push
stos
pop
sub
negl
xor
ficoms
push
lods
outsl
popf
mov
xorl
stos
roll
adc
jno
bound
push
imul
nop
divb
mov
inc
cmpsl
push
mulb
mov
xlat
movsb
mov
test
adc
fbstp
iret
inc
add
push
jecxz
jno
repnz
outsb
daa
or
adc
mov
pop
fisubs
mov
mov
je,pn
popa
adc
std
xor
in
sub
mov
jnp
pop
in
mov
leave
mov
xchg
adc
push
fnsave
ds
xor
pusha
data16
jle
mov
sbb
cli
icebp
adc
sbb
dec
push
mov
cmp
test
pop
jmp
test
call
aad
sarl
and
or
cmp
cld
sub
daa
mov
insb
in
or
cmp
add
mov
sbb
and
sbb
inc
push
mov
sub
fwait
nop
bound
jle
pushf
push
cwtl
mov
dec
sbbl
scas
cs
vpunpckhwd
loope
adc
popa
adc
je
inc
mov
push
lcall
pop
mov
dec
jecxz
push
das
fucomp
enter
bound
pop
or
dec
mov
dec
lret
push
sarb
std
cmp
xlat
mov
cmp
je
sbb
lret
fadds
loop
nop
ss
orb
sbb
jno
stos
fstps
pop
mov
or
push
lock
adcl
dec
addl
xchg
mov
mov
lcall
push
push
inc
addb
pop
mov
dec
mov
movsb
mov
cmp
sub
mov
cmp
js
cmp
psubb
out
loop
pop
pop
out
sbb
das
xor
cmp
add
stos
add
imul
cmp
adc
fldenv
aad
jge
imul
loop
sbb
movsb
jo
jecxz
xchg
ds
xor
imul
stc
call
or
out
cltd
sbb
insl
xor
subl
insb
xor
pop
repz
fwait
inc
pop
cmpsb
add
xchg
pop
mov
lock
int3
pop
sub
sbb
adc
add
mov
pop
cmpsl
outsb
mov
push
stos
mov
scas
add
fldl
mov
fwait
aaa
adc
or
and
lcall
sbbl
push
jl
fdivrs
loop
pop
in
rcll
dec
mov
enter
or
adc
cmp
inc
sub
inc
out
std
push
and
mulb
cmp
xor
fwait
adc
pop
aaa
inc
and
inc
push
sbb
mov
repz
into
push
call
int3
fstl
xchg
pusha
test
lock
andl
dec
cmp
cmp
sbb
int3
jb
nop
pop
insl
xchg
dec
je
xor
ret
add
movsb
jge
inc
cmp
adc
jo
dec
mov
je
pop
xchg
mov
push
xor
out
loopne
aaa
lcall
inc
pushf
dec
sub
roll
into
or
mov
dec
fwait
mov
data16
and
mov
aam
mov
fdivr
inc
push
and
xchg
cmp
sbb
lock
imul
cmp
inc
xor
mov
mov
push
xor
test
or
and
xchg
jnp
nop
mov
pop
repnz
out
pop
jnp
xchg
pop
aad
pop
and
repz
mov
popa
xor
dec
das
adc
mov
mov
popa
out
stos
inc
adc
mov
imul
popl
and
and
push
or
dec
cmp
pop
cmp
cmc
jecxz
out
ret
addr16
xlat
dec
pop
sbb
dec
push
mov
jne
negl
fimuls
stos
pop
sub
sub
movsb
movsl
test
stos
sahf
lds
xchg
aaa
and
xor
mov
les
fxch
pop
add
dec
in
les
nop
imul
pop
ljmp
pop
aaa
sub
cmp
sub
push
and
cmp
fldenv
sti
mov
or
ja
pushf
int3
int
cmpsl
xor
xor
lret
mov
lcall
push
sub
out
inc
mov
xor
loop
cmpb
add
jns
cmpsl
or
push
jnp
fmulp
xorb
fnstcw
cmp
addr16
lock
cmp
cmp
jp
outsb
xlat
xor
push
and
mov
jne
cmp
inc
mov
and
jecxz
pop
pop
nop
fdivrs
add
mov
arpl
lods
aam
jnp
int3
cmp
xor
push
or
popa
mov
sub
fs
jg
add
xchg
pop
cmp
jl
push
push
pusha
sbb
mov
cmp
mov
and
std
pop
and
lret
sahf
das
and
xor
das
ret
sbb
fcomps
call
je
cmp
aad
mov
cmp
and
xor
jns
jae
imul
call
pop
pop
xchg
in
cld
jge
cmp
inc
and
flds
mov
and
mov
in
pop
int3
sub
ffree
jp
lret
imul
popa
xchg
and
shll
dec
outsl
mov
mov
cmp
add
sub
adc
push
jl
mov
dec
push
xchg
xchg
push
lock
fmuls
subl
notl
out
sub
sub
sub
add
or
jle
testb
mov
mov
dec
dec
sbb
add
scas
inc
pop
js
cmpsb
aaa
dec
mov
iret
sbb
push
pop
pop
test
cmp
scas
adc
in
js
scas
call
movsb
sbb
pop
sub
lret
fstp
fdivs
adc
push
xor
xor
jecxz
pop
js
inc
sub
addb
push
sbb
mov
pushf
fdecstp
aaa
cmpsb
dec
inc
ret
aas
ljmp
sahf
cmpsb
mov
xor
xor
sub
jmp
mov
gs
adc
movl
add
dec
or
cmp
lcall
popa
and
pop
sbb
push
and
js
mov
movsb
cmp
pushf
pop
xor
cmp
add
dec
das
sbb
jbe
mov
cmp
dec
xor
mov
adc
ds
out
addr16
pop
inc
sub
rorb
and
outsl
xor
pop
push
inc
das
in
jae
xor
cld
mov
ss
or
cmp
and
sub
sub
mov
sbb
dec
push
test
das
daa
mull
movsb
adc
andnps
push
popf
mov
pop
out
xor
pop
mov
imul
mov
mov
loopne
xorb
sbb
push
out
mov
push
lcall
aad
xchg
hlt
xor
dec
inc
mov
xor
push
movsb
test
cli
xchg
in
xchg
or
push
dec
jge
mov
or
add
mov
fwait
push
sbb
mov
or
int
push
dec
xor
and
add
jecxz
orb
pushf
push
std
das
inc
jge
inc
lahf
idivl
cmpsb
inc
jecxz
pop
outsb
xor
fisubrl
aad
sub
sbb
popf
cld
cmp
insb
sub
dec
bound
mov
sub
pop
fsubl
pop
mov
dec
pop
addr16
popa
mov
into
pushf
js
cli
mov
insl
sbb
rclb
jl
or
rcrb
in
gs
push
js
ds
adc
xor
cmp
cs
test
int3
cli
sub
test
add
divl
mov
popa
in
sub
push
scas
cmc
push
mov
mov
jae
repz
push
cmp
sahf
inc
cmpsb
gs
or
jl
cmp
jbe
lock
scas
lods
mov
jno
jge
into
es
push
insl
inc
lcall
shr
inc
xorl
sbb
jnp
rorb
sahf
mov
and
push
push
jmp
dec
mov
sub
lcall
xor
fadds
cmp
lcall
cltd
ja
dec
addr16
xchg
dec
mov
scas
mov
lret
jbe
iret
scas
mov
and
push
cmp
inc
cmp
jns
xchg
test
aam
imul
lret
cltd
sub
xchg
fwait
cmp
or
inc
test
dec
mov
mov
std
push
mov
fisttps
fmull
inc
dec
aaa
mov
ret
nop
ds
cmp
aad
lahf
aam
mov
stos
mov
sub
cmp
fwait
dec
inc
dec
xchg
xor
cs
mov
mov
cltd
xchg
mov
lods
or
aas
cmp
jge
inc
cmp
adc
jge
push
xor
jno
and
jb
out
das
lcall
push
push
fadds
mov
aam
xchg
xorl
add
inc
sbb
fisttpl
jg
int3
loopne
inc
in
xchg
ja
stos
and
push
pop
fmulp
outsl
inc
cmp
lret
aas
adc
scas
sbb
fdivl
inc
xor
mov
push
push
mov
cmp
ds
and
ret
xor
loop
pop
cmp
scas
cmp
push
dec
ljmp
mov
jecxz
dec
adc
imul
iret
sbb
dec
xchg
ds
push
leave
cmp
aas
nop
hlt
pop
in
mov
xor
jns
push
inc
inc
outsl
out
ljmp
cli
jmp
adc
lcall
stos
push
sub
add
rcll
xchg
ficoms
cwtl
fidivs
lods
push
ja
sub
xor
cmp
dec
mov
pop
lcall
push
hlt
push
push
cltd
shrl
xchg
jbe
pop
leave
cs
ss
xorb
gs
sub
mov
ja
cmp
dec
pop
in
mov
cmp
xchg
loop
add
sub
dec
gs
out
cltd
push
dec
or
cmp
je,pn
mov
adc
das
cmp
fwait
xor
lahf
sub
push
scas
ret
xlat
push
cmp
into
aas
lock
mov
mov
stos
xor
dec
ficoms
or
in
in
jmp
lods
jnp
cmp
ja
push
out
popa
add
jp
or
mov
xchg
xchg
or
cmp
mov
or
push
mov
inc
int
gs
into
scas
add
add
adc
sub
add
std
inc
cmp
jg
pop
addr16
out
add
aad
aas
adcl
inc
cmp
ljmp
cmpsb
xchg
out
cmp
push
ja
push
adc
mov
loop
addr16
cmp
addr16
aad
push
add
xchg
inc
add
ja
jecxz
push
mov
das
das
jns
ficomps
push
mov
in
pop
lods
mov
das
push
mov
lcall
cmp
mov
dec
test
cmp
popa
loopne
mov
sub
jg
cmp
std
push
stos
shrl
pop
mov
iret
enter
pop
or
dec
repnz
dec
lds
inc
jl
int
das
cli
sub
or
mov
pusha
push
je
enter
jnp
push
out
adc
movsb
jecxz
out
pop
je
nop
cmp
cli
pop
push
cmp
stos
dec
iret
jecxz
xor
out
and
cwtl
lcall
outsl
sbbb
push
pop
jp
lea
xor
popf
jnp
mov
and
das
fsub
scas
out
loopne
and
test
lods
xor
pop
jo
pop
adc
jecxz
cmp
stos
push
in
adc
cld
test
push
xlat
jmp
cs
xchg
pop
push
pop
gs
push
push
jns
adc
pop
inc
fld
and
mov
cmp
dec
sub
mov
push
add
or
or
test
or
and
paddq
sub
push
dec
mov
jp
xor
lret
sub
jb
or
dec
xor
jbe
repnz
lcall
adc
sub
mov
pushf
push
jne
cwtl
mov
flds
add
lret
cmp
mov
shrb
aad
sub
jne
push
jmp
mov
rorb
daa
xchg
lretw
jp
rclb
push
insb
cmp
and
test
mov
fwait
push
cmp
jno
sbb
das
push
mov
ds
imul
lcall
addr16
test
pusha
mov
aaa
and
aad
inc
mov
ss
outsb
jge
mov
gs
mov
xor
xchg
add
and
xor
scas
sbb
rclb
mov
out
cmp
mov
fwait
insb
sub
pop
into
pushf
mov
daa
jle
lcall
sbb
push
cmpsl
aas
xor
and
imul
adc
jno
pop
sbb
xor
addr16
sbb
cmp
sbb
test
or
xor
jo
push
daa
xchg
insb
data16
sbb
mov
std
push
mov
cmp
pushf
outsb
das
pop
arpl
inc
xor
or
lds
jbe
lds
mov
scas
lea
mov
jo
shrb
cmp
mov
ds
mov
lods
xorl
mov
jnp
ja
push
sbb
and
mov
out
xchg
js
or
popf
inc
fwait
jbe
popf
inc
mov
xchg
imul
push
jmp
mov
std
cmpsb
and
xor
aas
sbb
and
daa
int
test
add
jno
dec
cmp
cltd
fistl
iret
jae
mov
push
adc
aaa
inc
out
cli
and
jnp
mov
inc
jp
inc
pop
ljmp
fisubs
mov
scas
add
test
in
mov
and
imulb
dec
add
and
push
mov
mov
fwait
sub
sarl
data16
ss
outsb
adc
clc
and
xlat
dec
mov
mov
dec
mov
dec
pop
clc
jle
xchg
sbb
sbb
test
test
inc
pusha
sbb
enter
xor
sub
fidivrl
aad
inc
loopne
dec
jo
jmp
in
jecxz
mov
dec
and
lahf
add
and
hlt
pushf
cmp
inc
ret
addr16
repz
ss
inc
adc
iret
imul
mov
ss
outsb
pushf
int3
or
call
scas
add
and
movsl
xchg
fs
leave
ds
mov
test
or
and
cmp
sti
repz
xor
lcall
dec
mov
sub
pop
cmp
xchg
sub
out
sbb
xor
cmpsl
push
add
and
xchg
ds
sub
shll
push
sti
mov
cld
out
stos
xchg
xor
loop
aad
mov
jl
dec
xchg
ss
add
or
in
or
inc
test
loope
pop
cmp
mov
scas
push
xchg
enter
mov
dec
enter
mov
adc
movsb
xchg
add
pop
fisubs
or
mov
into
inc
adc
adc
xchg
ret
adc
loope
pop
outsl
shrb
iret
aas
stos
shlb
dec
rcrl
mov
inc
mov
sub
xchg
sub
jb
push
pop
pop
and
cmc
stos
adc
lret
adc
sub
jns
push
dec
hlt
adc
call
ss
sub
sub
push
in
je
call
pop
ret
pop
jne
cld
add
out
das
sub
dec
out
cmpsl
dec
xchg
inc
ficompl
dec
push
dec
in
add
pop
mov
fimuls
pop
push
and
push
mov
mov
pop
xor
push
dec
mov
inc
xchg
dec
cmp
pop
loopne
push
std
jmp
add
lods
std
mov
int
jae
push
out
scas
or
sarb
xor
fwait
lahf
sub
push
out
scas
xor
add
mov
push
inc
sbb
int
movsl
pushw
xor
lock
sub
arpl
out
test
sbb
es
str
mov
pushf
push
xor
cmp
cmp
jnp
xchg
mov
scas
std
in
adc
adc
xor
lods
jno
mov
test
andb
sub
popa
in
jmp
stos
add
popa
jne
cmc
sbb
push
ret
popa
jge
test
lcallw
jge
dec
icebp
cmp
mov
add
lret
dec
jl
or
mov
dec
mov
das
xchg
test
jl
push
adc
sti
dec
movsb
pcmpeqd
mov
cmp
mov
or
out
test
pushf
ror
xor
push
ds
sbb
lcall
mov
push
repz
push
pusha
movsl
xlat
rcr
ss
sub
pop
gs
sti
negl
or
loopne
inc
daa
sub
out
push
add
mov
outsl
cmpl
cmp
rorb
jg
clc
pcmpgtb
shl
sbb
sbb
and
inc
stos
jecxz
mov
test
xor
pushl
and
in
ficompl
jno
repnz
rep
aaa
ljmp
mov
and
aad
sbb
rorb
aam
shll
arpl
mov
aam
jge
pop
pop
xor
or
outsb
stc
sahf
mov
cmp
add
ret
enter
jne
ret
push
cmp
xchg
int
pusha
out
inc
xor
push
shrb
stos
insb
stos
pop
into
xchg
test
xchg
mov
adc
jl
test
loopne
psraw
push
dec
pop
inc
sbb
into
xor
add
outsl
inc
pushaw
fidivl
jmp
fwait
adc
or
pop
jl
ds
and
popa
jne
mov
inc
adc
jo
xor
pop
lock
loopne
scas
and
popa
sbb
das
cmp
pop
xchg
xlat
jp
lret
push
pop
fs
jb
xchg
into
lock
cmpl
adc
mov
xchg
stos
xchg
adc
sbb
inc
adc
mov
add
nop
sub
icebp
inc
aaa
cs
mov
add
pop
cli
lock
shll
cmp
lret
scas
push
mov
outsb
jl
sub
pop
cmp
adc
push
mov
pop
movsl
push
mov
sub
mov
repz
lock
dec
iret
cmpsb
std
mov
jbe
in
js
imul
pop
jno
pop
aaa
scas
sbb
mov
faddp
push
repz
into
xchg
cmc
sub
inc
imul
adc
jnp
sbb
sbb
dec
push
shlb
and
cli
out
cmp
and
push
push
mov
ret
in
sahf
movsb
adcb
push
jmp
mulb
jne
jbe
in
cmp
cmpsb
cmc
push
cmpsl
mov
push
sbb
in
dec
call
aas
stc
xchg
sub
pop
fwait
daa
mov
inc
lcall
jle
push
je
jp
jns
sbb
shll
ja
jp
push
int3
sub
cmp
dec
and
call
aas
popa
cmp
cs
and
cmp
test
xor
movsl
xlat
xchg
adc
add
inc
xor
xor
and
jae
lret
inc
rcrl
cmp
sub
je
pusha
outsb
lods
outsl
scas
cltd
ret
and
mov
sbb
fdivs
jge
sahf
outsb
sub
and
mov
pusha
aaa
out
sub
subb
mov
or
mov
sub
push
mov
jl,pt
and
mov
sub
dec
xchg
cs
mov
push
sbb
and
push
sub
faddp
ss
insb
data16
fs
mov
push
push
loope
shl
lods
ja
xchg
fimull
add
cld
add
inc
stc
push
aad
add
fimull
and
clc
shll
stc
inc
into
inc
outsb
fwait
je
push
or
out
packuswb
addr16
sbb
cmpsl
cld
push
sahf
orl
enter
mov
cs
jne
lcall
lds
pushf
sub
jb
fscale
sub
dec
nop
in
shll
cltd
inc
mov
mov
test
out
ds
xor
add
cmp
sub
and
clc
lahf
mov
sbb
or
jl
or
jl
out
push
add
nop
pop
mov
xor
push
cmpb
push
dec
insl
fwait
sbb
gs
ret
mov
xchg
adc
jge
xchg
xor
lcall
dec
out
loop
call
mov
shrl
lock
mov
out
jge
les
adc
mov
mov
out
ss
cmpsl
mov
inc
sub
ja
lcall
cld
inc
mov
inc
cmpsl
lods
cwtl
cli
ljmp
or
leave
mov
and
mov
xor
mov
sub
inc
mov
imul
sahf
stos
mov
push
insl
pop
adc
dec
fwait
ss
push
dec
mov
lcall
enter
xor
sub
icebp
jnp
outsb
fidivrs
push
sbb
fwait
xor
clc
adc
cmp
and
lret
std
push
mov
das
sahf
fidivs
adc
dec
popa
adc
mov
into
mov
frstor
data16
std
lds
add
jns
pop
or
icebp
cmp
or
movsl
dec
or
and
jno
adc
enter
scas
cmpsl
pop
cmp
inc
scas
idivl
cmp
pop
sbb
sub
push
and
xor
mov
js
sar
pushf
xor
dec
cmp
jno
arpl
pop
popa
in
dec
push
mov
pop
movsl
xchg
insb
bound
jle
addr16
stos
inc
clc
pushf
cmp
sbbb
sub
or
out
mov
je
bound
cs
sbb
sbb
dec
xor
out
outsb
mov
push
fisttps
rcll
cmp
xor
xor
scas
fwait
xor
inc
outsb
and
xchg
or
pop
and
lahf
insl
mov
adc
into
ret
inc
sbb
cli
inc
cmp
push
xchg
cltd
cli
push
movsl
dec
push
in
adc
push
pop
pop
test
push
dec
jae
or
loop
fcomps
in
pop
push
adc
and
sub
orl
lret
or
cmp
dec
ds
dec
and
jl
jns
xor
jmp
mov
xor
stc
ja
andl
je
cwtl
rcrb
out
cmp
cltd
movsb
xor
add
adc
mov
sub
call
xchg
push
sahf
xlat
jbe
push
popa
jl
push
and
shll
cli
jge
xlat
dec
movsb
daa
repnz
push
insl
subb
push
jbe
les
out
inc
in
lods
das
push
jl
outsl
add
mov
jae
fimuls
shrl
xchg
rolb
dec
out
negb
fldenv
pushf
ds
pop
sbb
cmp
popa
pop
inc
push
lods
test
or
aaa
cmp
cmp
aad
sbb
xchg
out
xchg
enter
and
shll
sub
sbb
test
push
dec
icebp
jge
pop
and
or
nop
sub
pop
jle
jb
mov
mov
xor
sbb
pop
scas
cwtl
pop
cmpsl
pop
push
inc
out
movl
sbb
outsl
or
lret
aas
ljmp
je
or
scas
test
wbinvd
add
push
ficompl
out
gs
xor
pop
jg
fiadds
sbb
add
cmp
lahf
push
cltd
mov
dec
out
stos
xor
popa
lcall
jl
jns
pop
in
ds
in
sbb
cmpsb
jle
das
push
cmpsl
or
xchg
movsb
cmp
sahf
insb
add
aaa
mov
dec
ja
subb
push
cmp
movsl
sub
jo
mov
cld
push
stos
pop
jl
mov
pushf
cmp
fildll
test
scas
or
cwtl
adc
xchg
daa
shrb
cmpsl
push
test
movsb
das
sub
mov
adcl
mov
mov
cltd
sahf
cmp
stos
push
sub
push
dec
xchg
imul
repnz
and
pop
inc
push
aad
jb
dec
pop
orl
jle
xor
subb
das
sub
out
call
stc
out
adc
mov
loop
mov
cmp
sub
jo
adc
mov
xor
mov
dec
pop
inc
in
mov
push
aas
mov
push
cmp
inc
inc
pop
mov
mov
sbb
adcb
das
test
scas
repz
into
xor
jmp
mov
sub
add
pushf
sahf
dec
lds
lods
push
mull
xchg
push
cmp
inc
rcr
js
scas
cvtps2pi
xor
test
ja
inc
rcrl
cmpb
add
lods
ja
sub
lds
push
sbb
xchg
jne
adc
scas
jmp
push
mul
js
cmp
mov
jnp
push
cwtl
je
push
je
inc
dec
hlt
mov
popa
jne
imul
sbb
call
jle
mov
inc
push
xor
xchg
push
imul
xchg
ss
out
fmulp
sbb
or
or
xor
ja
jno
sub
cwtl
stos
mov
inc
cli
adcb
aas
mov
shlb
inc
daa
push
mov
das
stc
insl
push
mov
das
call
adc
cltd
mov
decb
cmp
jl
insb
mov
aas
bound
xor
daa
es
jbe
int
in
int3
dec
add
rolb
ds
mov
test
and
bound
cmpsb
and
aaa
and
cmp
mov
iret
aaa
push
mov
jmp
cmp
xor
or
dec
dec
popa
fdivl
jg
dec
lcall
test
push
repz
pop
andb
outsb
adc
mov
cmp
aas
cmp
int3
test
insl
enter
jb
xchg
test
jg
scas
sub
jns
add
mov
pop
fbld
dec
jmp
jecxz
icebp
push
sbb
mov
sbb
cmp
outsl
mov
mov
imul
xor
mov
test
adc
repz
xchg
ficoml
cmp
rcll
sti
xchg
xchg
sbb
push
inc
adc
jno
dec
js
pusha
dec
test
dec
std
inc
cmp
mov
lahf
cmc
movsb
cmc
in
dec
lcall
xor
mov
adc
movsl
popa
clc
add
test
pop
andl
mov
gs
lcall
jo
or
inc
or
pop
gs
cmc
js
and
mov
jmp
or
mov
add
les
sub
adc
mov
addr16
pop
xchg
xor
idiv
jns
push
mov
push
fsubr
push
subb
das
stos
push
dec
lret
add
pop
das
fwait
js
test
ret
call
dec
nop
mov
int3
dec
shll
mov
jmp
jns
loopne
inc
sub
cmpsb
mov
push
inc
insb
pop
fwait
xor
xor
dec
add
rcll
mov
aam
movsb
arpl
push
fwait
outsb
mov
rorb
fidivrs
in
add
addr16
scas
stos
push
in
jbe
fistps
sbb
shl
mov
jnp
ret
and
or
aam
test
pop
leave
mov
je
dec
cmpb
rorl
pop
adc
sbb
inc
cmpsl
cltd
mov
sub
sbb
xor
sbb
mov
inc
ret
push
movsl
mov
lcall
or
mov
repz
xchg
adc
xor
cmp
ret
dec
shrl
jne
mov
mov
loopne
imul
out
cmpsb
or
or
add
dec
mov
stos
out
push
mov
or
pop
sub
lock
jge
push
cmc
mov
and
ja
movsb
andl
cmp
jmp
pop
pop
movsb
add
insl
bound
ficompl
push
inc
sbb
outsb
ror
fisttps
mov
push
insl
std
or
mov
jbe
push
sarb
cmpsb
pop
inc
dec
push
rcr
jbe
jp
fwait
leave
insl
daa
inc
rorb
jnp
push
out
icebp
dec
xchg
mov
jne
adc
leave
mov
dec
imul
mov
ss
pop
xchg
jnp
test
xor
dec
movsl
loop
sub
dec
aam
cmp
nop
xor
cmp
and
imul
loop
testl
lret
mov
cld
stos
imul
scas
mov
out
jle
into
xorl
jo
aam
ficoms
daa
push
inc
ljmp
xchg
cmp
dec
call
ret
aaa
shrb
mull
cmp
fnstenv
sbb
sub
ficompl
inc
mov
jge
push
sub
xchg
mov
xchg
pop
xchg
inc
sub
outsl
sbb
lret
pop
xor
xor
pop
or
pop
lret
unpckhps
test
and
pop
and
rorb
push
and
inc
jp
mov
mov
imul
mov
dec
inc
cmp
inc
mov
or
cmp
inc
imul
ss
or
lds
and
sbb
lret
pop
je
or
sub
push
sub
fwait
push
pop
movsb
jle
cmp
pushf
dec
scas
jne
aad
stos
pop
addr16
loop
cmp
xchg
std
cwtl
mov
sbb
leave
pop
les
call
add
xchg
push
movsb
xchg
sbb
mov
js
xor
inc
fwait
cmp
cmpsb
push
aad
cltd
lahf
pop
repnz
push
pop
sbb
inc
ss
dec
decb
inc
sub
sbb
and
fwait
cmp
dec
dec
popa
into
mov
cmc
sbb
inc
xchg
aam
nop
ljmp
imul
ljmp
cld
sbb
pop
data16
jp
mov
add
out
pop
mov
push
in
stos
pop
loopne
mov
jbe
arpl
inc
iret
je,pt
sub
dec
cmp
dec
adc
cmp
sub
xchg
pop
sub
pop
push
mov
cmp
push
loope
sub
fs
ds
push
push
cmp
pop
dec
cld
cld
push
gs
and
pop
dec
or
mov
scas
adc
int
icebp
fwait
insb
vhaddpd
mov
xchg
jo
repnz
sub
sub
stos
mov
sahf
xchg
dec
dec
movsb
bound
mov
xchg
pop
push
jnp
cmp
cmpsl
ret
sub
xor
mov
xchg
movsb
outsb
dec
add
jbe
mov
shrl
scas
and
push
jmp
into
jnp
cmp
adc
mov
daa
out
call
push
out
and
pop
sub
pop
stos
out
jecxz
mov
lcall
stos
das
loop
call
ljmp
and
sti
jmp
out
lahf
xor
imul
mov
mov
js
out
xor
inc
cs
in
mov
std
stos
sub
sbb
and
out
fstpl
xor
jbe
rorl
push
adc
pop
shl
stos
cs
shl
sbb
enter
and
cmpsl
jns
dec
ret
lcall
xor
in
stos
test
cmp
insl
lcall
sub
js
idiv
add
in
out
ja
push
xorl
dec
hlt
adc
sbbl
outsl
es
mov
xchg
fmuls
and
jecxz
mov
push
jb
push
mov
in
incb
cmp
or
push
mov
jp
movsl
push
call
outsl
push
push
ds
out
xorl
das
or
popf
push
mov
cmpsb
test
cmp
cmp
push
sbb
call
fcmovnu
xor
ljmp
push
xchg
imull
xor
mov
das
enter
das
std
cwtl
and
cmp
mov
sub
mov
push
insl
cmp
jnp
xorl
fdivrl
out
dec
mov
enter
inc
cli
ja
icebp
out
and
add
int3
cmp
ljmp
data16
mov
rcll
push
cs
enter
sbb
inc
inc
sub
jo
roll
sahf
sub
jmp
adc
lahf
sub
fwait
cmp
jbe
push
cmc
add
mov
inc
stc
dec
pop
imul
mov
pop
adc
divl
add
xor
push
push
push
loop
pop
imulb
add
add
pop
ss
je
idiv
push
scas
addr16
and
xchg
stos
add
imul
movsb
cli
shrb
lock
cs
sbb
dec
into
out
dec
lock
icebp
jge
les
pop
addr16
test
negb
mov
xor
addb
leave
scas
xor
push
sbb
jl
xor
insb
loop
movsl
push
jb
nop
pop
das
cmp
clc
nop
mov
cmc
inc
sub
ds
mov
cmp
dec
clc
add
push
movsb
push
sub
mov
jns
mov
sub
add
dec
mov
pop
in
jbe
fnstsw
outsb
adc
lods
ja
mov
xlat
cmp
divb
lret
iret
dec
xor
stos
je
aam
adc
mov
insb
cmp
inc
sub
stos
xor
cs
pop
and
scas
push
mov
dec
inc
mov
out
or
cmp
xor
bound
jle
pop
xchg
cmpsb
stos
addr16
xor
xor
pop
inc
sub
orb
xchg
jp
unpckhpd
test
push
cmp
lods
sbb
aaa
lea
ds
mov
jne
fdivp
sarb
sbb
aaa
test
adc
cltd
inc
fisttpl
icebp
push
lret
scas
pop
jb
in
pop
push
test
out
jbe
cmp
clc
and
jnp
pop
popa
add
adc
cmp
sbb
test
adc
dec
mov
test
std
mov
and
imul
stos
cltd
lcall
push
or
nop
popf
clc
cmpl
js
pop
and
jae
and
popa
mov
popa
aaa
sbb
lret
push
and
add
add
mov
or
jle
or
sahf
lock
scas
sub
out
loope
cs
cmp
jge
call
jae
adc
outsb
sbb
scas
cmp
dec
jmp
cmp
lea
test
xchg
repnz
inc
in
sahf
cmc
mov
push
fimuls
pop
insb
cld
cmpsl
jbe
inc
sbb
push
pop
mov
scas
xor
in
out
xlat
mov
test
inc
mov
sub
cmpsl
push
pop
sub
mov
xor
mov
push
loop,pt
iret
xchg
pop
add
idiv
dec
push
jns
scas
mov
adc
lahf
nop
cmpb
push
jmp
mov
jp
jg
xchg
imul
je
pop
ret
inc
out
aaa
dec
call
out
arpl
pushf
mov
dec
cmpb
dec
lcall
pop
inc
shrl
cmp
popf
and
mov
nop
sub
mov
jmp
repnz
push
test
lock
and
je
inc
inc
or
jnp
icebp
bound
cmp
jp
inc
ljmp
jl
inc
pop
pop
xchg
cltd
inc
add
push
jl
inc
dec
movsb
out
and
cmp
inc
lock
jle
pop
jbe
mov
imul
je
out
into
das
sub
push
or
pop
adc
movsb
cmp
cmp
lods
faddl
sub
loopne
pop
data16
inc
mov
mov
jle
mov
push
inc
outsb
push
popa
cmpsb
push
icebp
lcall
pop
nop
jp
ret
je
mov
push
or
push
in
sbb
imul
std
mov
jb
mov
andb
xchg
or
ss
or
push
mov
cmp
adc
mov
pop
mov
sbb
pop
mov
jl
cmp
push
or
cld
test
jg
psllq
out
cmp
outsl
cmp
sbb
mov
mov
aas
xchg
push
addr16
cmp
add
add
push
sahf
rol
xor
jle
inc
cli
pop
aad
xor
xorb
xchg
cld
mov
pop
jp
jl
mul
push
rcrl
lea
sub
lods
insl
andb
clc
and
in
inc
aaa
outsb
push
fwait
mov
js
mov
jb
push
sub
lds
cli
sub
sub
mov
add
mov
ljmp
push
aaa
mov
out
sarl
divb
test
scas
xchg
adc
addr16
xchg
enter
gs
lcall
xchg
xchg
std
data16
test
and
les
arpl
push
mov
sbb
inc
notl
jl
mov
fs
jno
popf
cmp
or
xor
xor
sar
mov
cs
lock
out
rcrl
mov
nop
sub
stos
add
mov
les
mov
jbe
jbe
xor
outsl
loope
push
jbe
sub
sub
inc
add
stos
jecxz
push
jb
sbb
fsubrl
insl
xor
mov
sbb
rep
push
cli
cld
jbe
jl
dec
out
movsb
stos
dec
jno
mov
stos
pop
sub
cltd
inc
data16
xchg
test
mov
or
popaw
adc
xchg
and
xor
pushf
inc
pop
inc
test
and
and
mov
dec
cmp
sub
hlt
pop
xchg
loope
mov
push
pop
jne
lods
push
fildll
mov
cs
out
and
sbb
ja
cmp
test
cmp
cli
lds
call
jne
sbb
jp
mov
insb
daa
pop
xor
bound
or
push
pusha
push
add
js
popa
out
mov
clc
and
sbb
push
insl
mov
jns
in
and
imul
data16
cmp
in
int
test
xchg
popf
mov
jns
lret
inc
xor
data16
mov
das
push
xor
subb
aaa
push
push
pop
loope
push
push
lds
ret
mov
dec
fnsave
call
xor
dec
rcrb
movsl
int3
sub
dec
sbb
ja
adc
test
test
imul
fwait
adc
push
loopne
dec
mov
cmp
cmp
mov
push
fdivrp
lret
ljmp
rcrb
xor
ss
adc
adc
mov
outsl
fldcw
movsl
cwtl
andb
mov
es
popf
inc
push
test
fstpt
rcr
mov
out
push
xor
xor
hlt
mov
movb
pop
dec
mov
cwtl
xor
ss
sarb
mov
mov
data16
icebp
bnd
adc
mov
cmp
push
adc
inc
sbb
mov
out
mov
or
ss
popa
cmp
inc
std
sbb
dec
mov
cmp
sbb
call
push
test
mull
push
dec
daa
enter
sub
pushl
mov
inc
push
mov
test
sub
ds
adc
aaa
add
ss
mov
pushf
adc
mov
mov
out
and
dec
sbb
enter
loopne
aam
sub
push
fdivs
adc
sbb
pusha
int3
sbb
out
nop
shrb
fcoml
mov
sub
add
adc
pop
cmp
lock
sub
cltd
sbbl
jno
test
cmpsl
scas
imul
mov
sqrtps
mov
into
jmp
roll
mov
pop
lcall
hlt
mov
cmp
add
outsl
negb
je
dec
ss
cmp
lret
jne
push
and
ficoms
push
ja
or
rorb
scas
mov
or
lcall
mov
cmp
push
mov
pop
dec
mov
push
push
out
test
imul
push
jbe
js
lcall
jp
jae
and
lds
pop
sahf
cltd
push
xor
sub
xchg
sub
call
mov
mov
loope
push
dec
push
inc
clc
ds
add
test
inc
jbe
jp
pop
and
sarb
andl
xor
dec
push
popa
in
out
imul
cmpl
into
xchg
cli
cmc
xor
shl
orl
in
leave
hlt
dec
aaa
or
mov
mov
movsb
dec
enter
fwait
cmp
test
and
rcrb
loope
insl
adc
inc
push
sub
lcall
mov
andb
jbe
fsubp
sbb
dec
daa
loop
mov
inc
mov
sub
add
test
outsl
sub
jl
jmp
add
lods
movsl
ljmp
and
les
scas
push
lahf
cli
sub
push
loopne
stos
jge
push
scas
jge
ja
push
dec
push
imul
stos
dec
bound
jne
push
push
mov
outsl
mov
sub
jge
pop
out
ja
pop
sbb
mov
push
jmp
sti
stos
inc
aam
ss
out
xchg
add
cmp
enter
cltd
ret
xor
mov
push
dec
push
sbb
in
mov
push
sub
ljmp
dec
sub
mov
in
lea
jo
lret
xchg
test
hlt
and
xchg
or
les
add
cvtpi2ps
test
mov
test
sub
push
leave
mov
data16
inc
test
cmp
lret
outsl
xor
sub
popf
test
out
loopne
jge
mov
and
inc
addr16
loopne
mov
out
nop
xor
add
ja
jmp
out
sbb
xor
xor
mov
xchg
jle
test
cmp
push
les
mov
sti
xor
inc
push
nop
sub
push
mov
push
adc
sbb
outsb
mov
pop
movsb
push
dec
addl
mov
add
dec
in
stos
je
movsl
cli
das
movsb
rclb
jo
test
xor
dec
data16
jns
xchg
mov
push
ret
outsb
ret
insb
jb
fwait
inc
pop
adc
bnd
mov
sub
fnstenv
mov
cmpsb
cmpsl
xchg
adc
sahf
pop
stc
out
movsl
sub
add
jns
mov
mov
daa
into
jge
sbb
clc
or
xor
roll
push
loop
fidivrl
jne
xlat
int3
fdivrl
inc
sahf
dec
mov
mov
dec
sub
jb
pop
ret
lret
cmp
ds
mov
andb
jle
dec
mov
call
int
aas
xchg
mov
imul
cmp
mov
xor
out
push
andb
outsl
and
test
push
push
popa
imul
sbb
out
out
sub
jae
and
jmp
add
fsubr
sbb
scas
insb
nop
sbb
jle
add
aas
popf
inc
inc
xor
in
lret
pop
incb
mov
xlat
push
lds
mov
xor
int3
es
out
arpl
or
clc
push
pop
adc
push
call
push
sub
push
insl
dec
outsb
fwait
jbe
in
jo
jnp
mov
adc
jmp
inc
pop
in
xchg
rolb
jecxz
dec
jmp
adc
clc
bound
movsb
jmp
lds
mov
sbb
mov
es
jne
push
out
cld
dec
dec
inc
popf
add
mov
add
sub
outsl
stos
pushf
push
pop
xchg
inc
adc
ret
subl
outsb
bound
add
pop
mov
enter
jo
dec
fld
rorl
jb
bound
or
movsb
addb
and
lret
fwait
ljmp
push
popf
sarb
sub
ss
sub
jp
mov
mov
inc
push
ss
pop
fdivs
call
scas
push
adc
in
push
inc
sahf
push
lock
dec
cld
and
fmull
dec
or
imull
push
fdivrs
jb
test
call
pop
sbb
push
test
xchg
call
addr16
mov
mov
sub
out
js
lods
int3
les
xchg
out
jns
lock
xchg
or
jns
inc
sub
jge
stc
dec
lock
push
push
iret
cmpsb
sbb
xchg
dec
xchg
push
and
imul
cld
adc
loopne
add
fstps
push
push
scas
imul
imul
ljmp
add
fidivs
push
shll
movsb
ds
lahf
add
cmpsb
push
jl
icebp
fwait
mov
out
cmpsb
je
pop
scas
test
mov
cmp
dec
icebp
jl
enter
add
imulb
push
jne
mov
icebp
movsb
pop
inc
push
cmpsb
mov
add
ljmp
fisubs
inc
and
enter
jl
ja
ja
mov
gs
dec
out
aaa
inc
inc
cmpsl
popf
sub
push
mov
and
std
and
lret
divl
outsb
out
popa
int
jecxz
div
gs
push
xor
push
movsl
mov
ret
icebp
pop
mov
cmc
push
sti
loop
clc
aad
xchg
mov
adcb
and
js
in
pushf
inc
mov
aaa
pop
jb
dec
or
das
xor
or
popa
jle
jo
stos
in
adc
sbb
aad
jge
nop
add
in
mov
ja
addb
jp
dec
ss
je
int3
lds
test
mulb
or
mov
addl
repnz
mov
stos
sub
jg
jb
pop
pop
cld
scas
add
popf
orl
push
xor
jecxz
inc
addr16
jmp
out
popf
fs
xor
and
add
inc
ss
mov
fs
pop
popa
in
mov
xor
inc
mov
sbb
sar
mov
rcrb
adc
iret
mov
sbb
xor
add
je
daa
test
outsb
dec
fdivl
mov
inc
mov
inc
bound
popa
scas
fisubrs
jle
xor
push
jbe
inc
and
cmpsb
dec
icebp
pushf
sub
movsb
lock
repnz
testb
je
jbe
push
ret
push
sub
jmp
into
and
data16
insl
jo
push
mov
lcall
inc
pop
insl
mov
adc
loopne
insb
lcall
outsb
iret
sbb
lds
inc
outsl
iret
mov
bound
scas
jge
mov
cmp
xor
or
mov
dec
icebp
lret
jns
enter
insl
dec
mov
pop
jl
stc
das
pop
sbb
jge
xchg
lods
jb
mov
lcall
inc
inc
cmp
sub
sbb
scas
test
inc
cld
sub
clc
insb
pop
jl
mov
xor
push
xchg
out
sbb
scas
sbb
mov
mov
push
sbb
jne
cmp
adcb
jae
mov
or
jne
cld
out
popf
or
sahf
in
mov
xchg
cli
xchg
push
imull
add
mov
xlat
mov
gs
rorl
rorw
xlat
xchg
mov
ljmp
push
dec
bnd
xorb
add
outsl
cmpsl
jb
test
xchg
dec
pushf
push
pop
sbb
lret
push
pop
scas
push
neg
mov
scas
sbb
insl
test
mov
xorl
out
jbe
add
cwtl
lret
mov
jo
jno
not
test
adc
fidivs
loopne
mov
jl
push
sahf
mov
fwait
pop
mov
sbb
shll
nop
mov
cmp
and
rorb
xlat
cmp
cmpsl
push
aaa
mov
sub
inc
push
and
movsl
loop
dec
out
aas
mov
nop
sub
mov
sub
test
shll
ds
cmp
mov
fldt
aaa
pop
jnp
push
sbb
dec
mov
in
and
mov
cmp
xchg
push
push
and
outsb
push
jno
fnstcw
push
mov
test
test
ja
outsb
add
or
or
sbb
into
mov
mov
xchg
imul
jbe
lods
xor
sbb
in
mov
and
mov
fnstsw
mov
add
testb
push
test
xor
lcall
dec
int
xchg
ret
mov
or
pop
sub
inc
cmpsb
xor
inc
sbb
cmp
scas
je
dec
pop
xor
ret
jo
fwait
leave
mov
xchg
sbb
dec
adc
cmp
jo
in
jae
fsubrs
push
scas
je
ds
jle
sbb
jmp
jo
pop
pushf
inc
movsl
mov
mov
cmp
pop
ficoml
std
push
jno
or
sub
shlb
lcall
sub
sub
push
call
inc
fistpl
add
cmp
popa
sbb
ret
cli
jnp
mov
cmpsl
and
sahf
test
lcall
inc
aaa
fwait
arpl
movsl
and
mov
inc
push
push
lcall
adc
xor
into
push
stos
sarb
adc
dec
das
cld
aad
pop
std
add
popf
push
lcall
int
into
inc
push
add
into
xor
mov
lods
lock
or
cmp
cwtl
loopne
mov
dec
adc
mov
mov
sbb
mov
cmp
addr16
inc
jmp
stc
pop
fbstp
mov
mov
jns
inc
adcb
aas
nop
inc
jl
insl
mov
push
popf
xchg
in
xor
mov
jecxz
push
push
pop
adc
cmp
fisubrl
shlb
xor
push
jbe
mov
adc
push
xchg
daa
lods
mov
push
cs
adc
adc
xchg
fdiv
les
push
jo
inc
movsl
mov
sarl
mov
int3
xchg
rcrb
cmc
cld
mov
cmp
shll
aas
lods
mov
push
popf
pop
pop
lcall
icebp
push
movsb
fcoms
xor
pop
xlat
pop
dec
and
aaa
ret
lcall
scas
xor
push
test
repnz
imul
lcall
mov
adc
aaa
lahf
xorl
pop
pop
cmp
int
mov
adc
push
xchg
movsl
xchg
popa
mov
xchg
or
pop
sti
sub
dec
inc
fists
fdivrs
xlat
repz
jb
add
test
and
leave
add
dec
pop
adc
out
xor
push
sbb
xlat
scas
outsb
adc
test
fucomip
dec
aad
cli
add
pop
add
push
stc
and
push
mov
and
imul
jmp
in
cs
mov
xchg
fnstsw
push
xor
sahf
sub
inc
push
pop
xchg
mov
imul
lods
xor
daa
mov
xor
sbb
dec
sti
pop
adc
out
push
mov
iret
data16
mov
jge
mov
in
fbstp
cld
dec
pop
xor
cmp
sub
xchg
into
out
int
mov
arpl
imul
sub
or
push
sub
scas
adc
cmp
bound
fdivrs
mov
pop
aad
pop
aam
lret
negl
lret
jmp
xchg
push
test
jb
pop
iret
shll
popf
sub
add
in
ds
cmpsb
jmp
jge
fmuls
ja
dec
add
pop
mov
pop
testb
xchg
movsl
push
xor
xchg
dec
loop
push
dec
test
in
mov
sbb
dec
out
inc
cmp
ss
daa
cmovae
in
jge
pop
scas
mov
adc
outsl
test
inc
dec
out
jnp
add
pushf
lods
mov
cwtl
dec
add
or
mov
cmp
data16
out
cmp
mov
leave
out
cmp
out
fnstenv
cmp
and
into
test
dec
jbe
mov
dec
jp
sbb
cmp
testl
jb
push
dec
inc
jle
mov
ss
xchg
and
lret
dec
adc
cld
jmp
enter
shrb
and
mov
fdivrl
ret
shr
xor
arpl
pop
int3
jecxz
xchg
mov
in
fnstsw
std
pop
mov
push
clc
pop
in
mov
outsb
call
cmovnp
daa
jb
dec
pop
imul
cmp
dec
shlb
repz
sti
pop
scas
movsb
adc
mov
inc
outsb
sub
mov
mov
rcrl
xchg
iret
xchg
jp
jbe
jbe
ret
outsl
push
xchg
sub
lcall
xor
mov
jae,pn
cmp
dec
push
push
jp
aaa
lret
int3
fidivrs
push
lods
stos
mov
jns
sbb
mov
dec
mov
subl
ficoml
add
mov
ds
popf
push
out
xchg
xor
sahf
mov
cld
mov
testl
out
dec
jbe
mov
loop
mov
push
mov
mov
lea
mov
scas
dec
rcll
push
dec
stos
call
and
repnz
call
inc
mov
push
inc
xor
lcall
jge
and
cmp
daa
aad
pop
icebp
sub
push
xor
inc
mov
or
push
mov
fcoms
mov
push
adc
roll
push
push
inc
je
dec
sarl
xor
mov
aaa
and
cmp
sbb
cmp
dec
inc
jbe
aaa
add
mov
mov
inc
stos
inc
cmp
dec
mov
cmpsb
or
movswl
pop
mov
mov
jae
cmp
lods
add
lock
mov
imul
mov
scas
imull
bound
lods
sahf
dec
imul
inc
cs
add
cmp
xor
ljmp
addr16
sbb
pop
jl
add
mov
aam
pusha
icebp
jbe
adc
xor
xor
loop
fsubrs
cmp
dec
xor
bndstx
ljmp
xchg
sbb
adc
and
pop
pop
ret
movsb
jbe
pop
jge
push
std
dec
xor
into
fstpl
incl
sarl
jae
loop
or
out
xchg
jg
and
addr16
dec
adc
mov
xor
cmp
cli
dec
ss
push
pop
ljmp
ss
imulb
dec
add
inc
jecxz
adc
pop
sub
and
aaa
add
fstpt
mov
das
mov
push
leave
dec
dec
das
gs
lea
lahf
jbe
enter
aad
leave
sbb
inc
mov
jle,pn
lret
mov
das
or
cs
mov
and
mov
adc
pushf
jb
pop
mov
inc
aaa
sub
lret
aad
add
pop
push
cmp
or
je
adc
jae
pop
out
jge
adc
nop
push
pop
lahf
jp
dec
sbb
mov
out
cmpsb
mov
lods
adc
lds
xchg
cmp
xchg
push
testl
ret
aaa
push
cmpsb
sbbl
or
fs
fwait
or
pop
push
rcrl
xor
sub
push
movsl
pop
lret
push
popa
and
pop
les
cld
aad
push
in
lret
cs
fldl
nop
mov
push
push
addr16
movsl
fistpl
popa
and
orb
ret
jns
dec
test
jle
xchg
jmp
push
sahf
scas
inc
sti
inc
mov
sub
lock
mov
cwtl
jns
test
fwait
push
sbb
mov
sub
sarb
jg
mov
xor
mov
push
insb
push
loope
pop
mov
rcrb
sbb
or
pop
push
aam
int3
jae
mov
int3
xor
data16
repnz
clc
notb
mov
push
in
xchg
pop
dec
pop
nop
push
imul
lods
pop
adc
lds
das
or
and
rep
imul
das
lds
push
std
cmpsl
mov
and
pushf
inc
sarl
xchg
xor
pop
test
pusha
addr16
fcoml
clc
cwtl
aam
sbb
daa
or
push
adc
test
je
in
cmpsb
adc
xchg
xor
test
dec
repnz
aas
mov
inc
inc
int
adc
cs
or
cmp
dec
cmp
cmp
push
in
call
fiaddl
and
push
test
arpl
inc
iret
fwait
push
lock
je
aam
xor
mov
outsb
sub
cmp
adc
xchg
inc
and
sahf
lock
jae
inc
ss
sarb
fisttps
cmp
jne
push
loopne
test
outsl
pusha
cltd
add
movb
sbb
xor
adc
insl
and
and
pop
xchg
jnp
or
jge
cmp
inc
or
loopne
xor
cmp
and
lds
divl
jbe
out
dec
test
mov
or
push
in
push
jg
mov
test
adc
push
push
ja
xchg
cli
roll
loope
pop
push
clc
jle
das
jbe
out
daa
pop
cvtps2pd
mov
lods
sbb
and
jno
xchg
scas
sub
imul
dec
cmpsb
ss
dec
scas
adc
lea
jecxz
aad
add
xchg
fldt
mov
orl
popa
icebp
jns
je
or
cs
fwait
inc
mov
aas
std
jmp
xchg
dec
mov
stos
out
push
bound
lock
rorl
sub
fwait
mov
mov
stos
imul
stos
fdivl
push
jnp
pop
sbb
mov
dec
cltd
je
or
push
sub
dec
cmpsl
dec
jno
mov
xchg
rcrl
ja
jnp
shll
pusha
and
les
push
cmp
sbb
incl
stc
xor
push
adc
cmp
fsts
pop
into
xchg
ljmp
incl
inc
sbb
aaa
fiadds
pop
sub
out
xchg
dec
sub
adc
inc
mov
dec
sub
insl
sahf
pop
adc
inc
lock
and
sub
cmp
stos
stos
aam
hlt
aam
jp
sub
sti
sub
cmp
adc
popf
mov
mov
outsb
adc
push
lods
js
dec
dec
mov
xchg
jg
loopne,pt
add
in
inc
xchg
cs
pop
xchg
jge
sahf
outsl
test
stos
imul
ror
mov
sub
clc
aad
add
es
xchg
stos
sbb
push
mov
inc
push
gs
aad
int3
xor
mov
lret
shlb
dec
push
lods
ret
sub
mov
pop
xchg
xchg
push
scas
xor
adc
lods
xlat
cs
in
es
sbb
adc
daa
pop
test
sub
lcall
jns
cmp
test
mov
push
mov
enter
push
call
imul
mov
ret
pop
cmp
out
push
jg
jle
mov
mov
jno
and
std
push
and
lods
xor
ds
cmpsb
repz
jg
sub
pop
outsb
stc
dec
popa
push
imul
dec
cmp
mov
adc
and
jmp
or
xorl
fs
push
shl
adc
ss
and
data16
aam
push
push
rorb
sub
std
testb
inc
int
sahf
mov
stos
xchg
popa
shrl
cli
mov
out
lcall
daa
or
cli
add
popa
hlt
enter
pop
fidivrs
cmp
cmp
in
sub
scas
xchg
sbb
add
add
jno
sbb
adcl
mov
std
ds
fwait
and
mov
and
sbb
push
cmp
cmp
pop
cld
loopne
std
pop
lock
outsl
jle
les
scas
fsubs
out
mov
into
loop
cwtl
test
mov
movsb
ss
jge
cmp
daa
pop
outsl
test
movsl
sbb
testb
test
in
out
push
sub
popa
sub
mov
cmp
daa
daa
jo
aas
lock
inc
dec
scas
mov
sub
inc
sub
cmp
pop
outsb
mov
ja
cmpsb
lret
push
push
or
outsl
movsl
add
mov
fistps
mov
pushf
pop
xor
popf
jg
enter
jno
xlat
pop
ss
mov
rcll
cmp
cmp
inc
xor
dec
and
or
cmp
jo
aam
pop
mov
pop
mov
pop
imul
and
push
insl
dec
fmul
jb
repz
ja
aas
push
aaa
pop
pop
in
add
out
push
cwtl
xchg
mov
cmp
inc
mov
mov
std
xlat
out
push
cmp
fstl
ss
pop
jne
jp
sbb
mov
inc
push
int
adc
pop
push
fidivs
push
fwait
xchg
test
mov
test
jbe
sub
mov
jmp
jnp
sub
lock
cltd
ret
scas
push
mov
popf
dec
mov
js
pop
inc
jns
adc
adc
lret
sbb
cs
fwait
adc
jno
push
and
push
mov
and
shll
testb
xor
dec
mov
stos
movsb
dec
fstpl
ret
add
cmp
dec
pop
mov
push
lahf
in
jp
xor
std
int3
popa
and
testl
orl
daa
movsb
shll
cmp
lret
or
dec
ss
sbb
xlat
daa
mov
pop
sub
and
mov
cmp
mov
sar
cmp
js
sub
into
cmp
pop
jg
ljmp
cmp
ja
and
lcall
out
jb
add
lcall
mov
nop
bound
movsb
neg
sbb
dec
rolb
scas
scas
rorl
jno
mov
mov
or
fimull
and
xlat
ja
shrb
test
movsb
bound
adc
in
pop
push
aad
add
jbe
loop
fimuls
sbb
xchg
cmpsl
dec
rclb
and
inc
cmc
jo
loopne
test
or
pop
aad
js
xor
mov
adc
and
shld
push
add
jae
jge
cli
insb
sub
add
gs
push
xchg
ja
mov
data16
dec
cmp
jbe
popa
xor
xor
cmp
and
movsl
or
cmc
cmp
xor
outsb
mov
cmp
arpl
mov
mov
add
cmpsl
mov
in
or
in
sub
ret
push
cs
movsb
dec
popf
outsb
push
lock
mov
stc
xor
xchg
popa
hlt
imull
and
je
jns
dec
iret
xchg
sub
xor
sbb
enter
cmp
call
push
cwtl
sub
and
ja
jno
and
mov
daa
outsb
mov
xchg
mov
fldenv
cltd
push
push
rolb
sbb
mov
push
push
int3
ficompl
cmpsb
scas
fwait
xchg
loope
shlb
dec
adc
call
test
cs
xor
pusha
popf
sub
stos
adc
fcomps
in
in
std
and
lret
les
sbb
cltd
daa
and
das
imull
adc
cmp
dec
xor
mul
mov
pusha
imul
movzwl
das
addr16
push
idiv
call
mov
or
shrl
push
ss
data16
dec
adc
daa
cmp
and
dec
inc
mov
scas
sub
pop
mov
movsb
xchg
stos
inc
in
cmp
out
mov
xor
jo
in
popa
pop
adc
repnz
pop
stos
mov
jle
cwtl
add
adc
sub
ja
lcall
sti
jo
add
ljmp
in
pop
inc
xor
pop
dec
rcr
cmp
test
je
ret
sub
ret
jge
fcmovu
jle
push
fcomps
lcall
cli
sbb
push
ja
ljmp
dec
push
mov
and
push
adc
popf
dec
shlb
jnp
sahf
sub
sub
jo
rorb
lahf
add
mov
inc
and
ds
negb
mov
divl
adcl
jle
mov
dec
pop
sub
cmpl
scas
jne
ficomps
lcall
sahf
sbb
xor
ds
pushf
jno
mov
adc
scas
sub
jmp
fsubrs
pop
daa
mov
dec
fstl
shll
jne
push
insl
push
xchg
xchg
mov
push
nop
fiadds
into
mov
add
push
mov
inc
push
push
pop
lcall
fcoml
inc
leave
xor
loop
or
mov
cmp
mov
sbb
dec
pushf
subb
jns
push
push
fsubs
mov
inc
lods
outsl
xchg
mov
inc
cmp
xor
ss
mov
in
data16
sub
cmp
imul
push
cmp
loope
pop
xor
pop
test
jne,pn
outsl
jbe
arpl
inc
cmp
mov
sub
cmp
jge
ss
dec
sti
mov
ljmp
cmpsb
arpl
dec
xor
xor
test
mov
aam
cltd
inc
cld
adc
jae
daa
sbb
scas
dec
pop
push
cmpsb
test
adc
mov
xor
sbb
adc
scas
jns
cmp
test
jle
aaa
imul
or
test
cmp
or
adc
and
xchg
aam
es
push
mov
les
lahf
xchg
fcomps
jp
into
clc
dec
jae
aaa
pop
sub
jb
pop
xor
jmp
jno
enter
stc
adc
repz
addr16
je
mov
movsb
pusha
mov
xor
and
in
popa
or
cmp
cwtl
lock
fwait
dec
sub
inc
inc
lcall
mov
xchg
push
lock
xlat
adc
mov
in
stos
push
in
mov
outsl
ja
cs
push
jne
sbb
adc
loop
xchg
rclb
cmp
pop
cltd
sub
cli
or
jnp
aas
subb
or
ja
sub
test
jns
test
push
jns
mov
fidivrs
jno
dec
adc
ds
test
loopne
jl
enter
mov
ret
je
repz
int
rolb
imul
push
sub
adc
adc
dec
xor
mov
mov
gs
insb
mov
test
dec
inc
lods
stos
outsb
jle
mov
cmpsb
lcall
adc
pop
aaa
test
fwait
xor
out
push
mov
adc
scas
mov
dec
popf
jo
dec
lret
popf
or
push
and
shrl
push
lcall
lcall
cwtl
xor
and
cmpsl
fistl
push
or
or
dec
xlat
xor
pop
xor
jle
xor
dec
inc
dec
jbe
sub
inc
nop
sub
in
inc
mov
push
mov
bswap
mov
cwtl
stos
scas
ja
jecxz
inc
xor
iret
pop
or
test
pusha
movq
xchg
je
fdivl
dec
cs
fildll
mov
inc
xchg
scas
test
xor
mov
sub
jg
push
sbb
stos
jo
into
je
xchg
inc
push
add
mov
ret
add
push
imul
ljmp
pop
jp
loope
outsl
insb
outsl
adc
imul
inc
xor
dec
scas
shll
inc
sbb
mov
push
push
sbb
fs
jbe
outsl
cmp
lock
ficoml
cmp
test
push
icebp
arpl
xor
mov
scas
dec
pop
push
ds
in
jge
and
mov
mov
jle
push
sub
addr16
sub
aas
das
negb
sti
jg
sub
xor
jp
mov
dec
fisubrs
mov
mov
sbb
inc
in
cli
push
mov
js
clc
scas
jns
scas
scas
adc
sub
in
and
ds
mov
fwait
imul
insl
and
jmp
and
dec
jno
fdiv
pop
test
cs
in
sbb
dec
cmp
add
push
adc
loop
jp
mov
push
cwtl
std
push
call
aad
out
xor
add
pushf
daa
sub
dec
sub
subl
or
and
dec
jnp
pop
jae
mov
xor
leave
pop
pop
and
in
ss
ljmp
scas
xor
aas
add
xchg
mov
push
aam
insb
out
stos
mov
xor
push
das
jmp
neg
push
in
loop
adc
orl
mov
push
jge
lret
dec
xchg
nop
nop
mov
sub
jno
dec
jo
sbb
mov
fwait
inc
mov
dec
xor
lahf
orl
sbb
test
mov
ret
out
int
mov
pop
out
sti
push
fucomip
push
cmpsl
adc
xor
mov
sub
test
test
fisubs
and
ja
cmp
sub
insb
push
and
lret
das
loope
loopne
mov
inc
xchg
jge
push
aam
scas
and
mov
push
push
adc
xchg
movsl
jne
rorb
imul
scas
cmp
movsl
jle
outsb
fisttpll
je
gs
dec
adc
push
sub
lock
jae
mov
fwait
shr
lcall
mov
xchg
cmpsb
sti
fwait
dec
lds
jge
cmp
sub
jmp
scas
or
das
cmp
sub
test
fsubs
scas
imul
stos
sbb
int3
scas
and
sub
cmp
and
pop
mov
nop
and
xchg
mov
jns
pop
lock
jne
shrb
xchg
repnz
addr16
js
ja
lds
push
dec
add
movswl
sbb
pop
cmp
add
or
push
fbstp
fwait
inc
adc
call
mov
iret
or
ds
dec
sub
jae
insl
sub
clc
std
adc
mov
inc
stos
cli
getsec
pusha
or
popf
insb
mov
mov
ss
subl
scas
insb
insl
cmp
cmp
dec
add
xchg
push
loop
xor
hlt
out
jae
dec
mov
adc
cld
jno
test
jns
adc
movsl
ss
clc
mov
insb
push
imul
imul
cmp
xlat
sbb
ljmp
cmpsb
xor
test
inc
adc
out
adc
out
sub
pop
and
mov
iret
mov
sub
cmp
and
adc
imull
out
sub
scas
push
dec
addr16
adc
or
ret
mov
bound
sub
call
mov
push
ja
jno
add
add
dec
mov
ljmp
popf
shlb
popf
mov
and
xchg
xor
jle
jns
and
cli
push
mov
addr16
mov
cmp
inc
stos
outsl
in
mull
daa
jns
sbb
adc
mov
adc
in
popa
movsb
js
les
xchg
mov
fs
mov
mov
jo
lcall
push
dec
dec
in
push
adc
jmp
jg
cmp
and
and
cmp
loopne
jae
jae
push
push
dec
lret
push
sbb
jno
out
sti
and
int
mov
inc
inc
jbe
mov
dec
jne
test
jg
push
js
rorb
mov
and
scas
sub
push
andb
mov
ljmp
push
cmp
iret
sub
fidivrl
cmp
mov
xor
mov
stos
add
adc
lds
aaa
popf
fcom
popf
cli
xorl
into
ret
cld
mov
fwait
gs
and
sbb
sub
subl
das
mov
aaa
fildl
fwait
cmpsl
ljmp
das
cs
push
sub
jmp
mov
ds
addl
sbb
jnp
mov
and
rolb
sub
sbb
out
scas
addl
mov
data16
out
ss
xor
cs
mov
mov
pop
cmp
xchg
in
pop
xor
test
scas
aaa
movsb
test
dec
fwait
in
jge
xorb
push
test
shrl
push
mov
in
fst
inc
and
cld
hlt
xor
test
sub
ret
in
pop
dec
mov
sub
outsb
outsb
test
adc
dec
mov
mov
cmp
and
jnp
pop
imul
cmp
out
mov
xchg
repnz
popf
mov
xchg
sbb
push
xchg
add
inc
push
gs
leave
outsl
movsl
and
enter
sub
jns
sarb
je
ds
adc
mov
sbbb
nop
push
insb
clc
fnsave
cmc
shll
cmp
std
jno
insb
fmull
mov
outsl
push
fidivrl
mov
sub
pop
sub
xor
outsb
inc
xchg
or
mov
dec
xor
sub
aad
push
push
movsl
cmp
inc
cmp
jle
js
push
bswap
sbb
xchg
inc
push
xlat
jno
or
inc
mov
push
mov
std
pop
xchg
push
and
insl
jno
dec
in
scas
ss
xor
adc
stos
cmp
in
sub
sahf
imul
mov
jnp
dec
or
popa
in
lcall
mov
or
imul
mov
sub
xor
and
int
call
mov
add
jne
imull
jl
mov
cmpsb
pop
push
fwait
cld
pop
xor
xchg
and
sub
xor
push
push
popa
sub
mov
sub
inc
mov
arpl
sub
inc
jmp
sub
scas
ljmp
mov
repnz
lea
sub
dec
test
imulb
mov
inc
jb
aad
pushf
sbb
cld
mov
call
xor
pop
pop
shrl
dec
push
jle
pop
mov
mov
cs
xor
fwait
mov
sub
xor
cmp
ja
test
idivb
jg
mov
sub
cmp
out
bound
scas
xor
in
lret
mov
ds
stc
sub
and
rorb
das
push
daa
test
pop
mov
pop
inc
cs
into
mov
in
sub
jle
test
jg
adcb
lods
fwait
clc
movsb
mov
push
xor
ss
filds
jp
pop
das
adc
scas
mov
adc
mov
cmpsb
mov
sub
dec
ds
into
cmp
daa
setl
sub
lea
cltd
ffreep
xor
mov
mov
leave
and
mov
fidivl
addb
in
xchg
loop
ljmp
cld
ss
mov
mov
cs
mov
cmp
cmp
inc
fwait
mov
xchg
test
cld
sbb
or
adc
stc
in
lods
shr
push
xor
pusha
sub
pop
lea
fwait
hlt
jns
pop
or
jns
cmp
mov
imul
popa
sub
push
rclb
jno
jae
daa
outsl
cli
xor
scas
xchg
xor
sbbb
pop
outsl
mov
fnstsw
mov
lds
out
jl
cmp
and
or
sbb
and
jmp
aad
inc
stos
sbb
jmp
jl
adc
sbb
orl
cmpl
fiadds
and
xchg
stos
xor
loopne
dec
sbb
push
out
push
pop
movd
jno
and
nop
sub
xchg
pusha
inc
add
call
sahf
xor
xchg
push
arpl
mov
cmc
je
loope
lcall
fdivp
mov
jge
mov
dec
lods
pop
jb
mov
cli
xor
daa
cltd
xchg
sbbl
sbb
and
mov
xlat
and
xor
lcall
xchg
lods
cmp
mov
jmp
aam
cmp
test
int
jnp
outsl
aaa
fsubrs
dec
scas
jp
imul
inc
push
jnp
jne
sbb
or
xchg
cmp
loope
push
sub
rclb
dec
dec
sbb
inc
ss
cmp
enter
inc
les
push
rep
pusha
call
pusha
cmc
push
mov
sub
outsb
jl
cld
ds
cmp
fistpl
lds
xlat
cltd
push
jp
out
or
sub
cmp
inc
push
bt
mov
adc
gs
sbb
sbb
sub
cs
mov
pop
xor
pushf
pop
pop
inc
mov
xchg
js
cmp
enter
ret
imul
push
add
and
jo
pop
cmp
test
mov
push
dec
adc
add
pop
ja
daa
xchg
movsbl
sarb
imul
in
sub
and
jno
cld
or
mov
rorl
outsl
out
outsb
lds
daa
mov
iret
dec
pop
and
push
jnp
and
cmc
ret
sub
push
outsl
cmp
fxch
or
cmp
imul
popa
xor
nop
sbb
cmp
into
fdivs
jbe
mov
adc
mov
xor
nop
jbe
mov
out
sub
out
lds
stc
fisubrs
into
mov
adc
pop
roll
xchg
cmp
enter
sbb
shrb
daa
push
pop
test
cmpsb
pop
in
push
sub
push
stos
push
loope
cs
xchg
ja
daa
jns
in
test
adcl
jmp
in
jno
sub
sbb
lcall
insb
jle
mov
sub
jae
jbe
daa
push
and
lds
je
xor
mov
sti
and
test
dec
cltd
fs
sub
xor
into
dec
add
sub
mov
mov
divl
sub
lds
add
sbb
adc
imul
jge
clc
sub
jbe
jb
dec
lods
test
ficomps
ret
mov
aas
test
push
fcompl
xor
pop
loopne
gs
loop
sub
mov
sti
and
mov
ja
jmp
out
adc
jmp
inc
adc
dec
adc
pop
pop
outsl
sti
sbb
out
adc
arpl
mov
add
mov
mov
gs
xor
xor
sbb
inc
lcall
inc
adc
sbb
dec
inc
cmp
and
packuswb
jp
in
inc
into
and
jno
cli
sarb
imul
in
mov
lds
and
aad
jp
fidivrl
lcall
dec
mov
add
pushl
push
shll
sub
ss
xor
pop
sub
popa
xorps
pop
mov
and
mov
loope
cmp
xchg
enter
mov
push
mov
pop
lcall
mov
cmp
push
js
ss
sub
imul
cs
cmp
mov
loopne
push
aas
mov
daa
adc
js
scas
addr16
in
mov
inc
popa
imul
mov
push
mov
je
aam
jecxz
jl
mov
ljmp
sti
push
fimuls
sbb
adc
stc
cli
jb
into
cmc
cmc
adc
push
sub
add
sti
jns
jmp
cmp
stc
jg
fistpl
cmpsl
lods
jle
movsl
or
jle
mov
bound
jno
sbb
push
sub
inc
daa
cmp
xchg
lret
cs
sti
int3
insl
inc
popf
jne
push
jnp
stos
mov
sub
xchg
or
shll
out
push
add
sub
data16
sbb
aad
xor
add
add
sbb
mov
stc
dec
gs
sbbb
fnstenv
loop
gs
iret
aaa
dec
daa
lea
cs
jno
cmp
mov
mov
addr16
adc
dec
imul
mov
sub
cmp
ds
fs
mov
xchg
sbb
jmp
mov
adc
xor
pusha
jo
jno
adc
sub
sub
xor
mulb
jle
and
in
imul
adc
bound
out
movsl
push
add
cmp
sub
inc
inc
outsl
cmp
out
test
daa
fs
loope
inc
out
out
movsb
clc
cmc
daa
cltd
or
fwait
jae
nop
xor
and
pop
ds
dec
jb
pop
aaa
mov
mov
out
mov
subl
in
xor
push
sub
mov
movsb
pop
xlat
ja
adc
push
ret
bnd
ss
sub
out
cld
cwtl
dec
popf
mov
xchg
pcmpgtd
stc
imul
mov
fcomps
and
push
js
bound
inc
sub
push
imul
mov
cmp
jp
jns
sub
jo
cs
dec
xor
cmp
cmp
xor
fxrstor
icebp
mov
sub
xchg
bound
sub
inc
jp
push
push
sbbl
ds
mov
mov
mov
lcall
and
and
inc
sub
js
gs
pop
andb
inc
fs
mov
inc
dec
push
imul
mov
iret
je
sbb
and
sub
push
mov
sub
sub
sub
insl
dec
movsb
mov
cmpsl
sbbl
mov
mov
in
push
jmp
js
cmp
pop
stos
dec
xor
or
movsb
dec
sbb
daa
scas
inc
cmpsl
pop
cld
in
fidivrl
ljmp
mov
ja
add
mov
push
into
call
cmpsb
xchg
ds
movsb
fsts
test
rorl
jle
outsb
jmp
mov
mov
xchg
xchg
xchg
sub
inc
sbb
test
cmp
arpl
nop
mov
push
outsb
xchg
bound
fwait
dec
dec
dec
pop
dec
xchg
inc
dec
mov
test
add
rcll
fistps
hlt
mov
sub
lret
push
jns
jmp
das
cmp
push
in
mov
push
movsl
lahf
daa
sub
test
out
sti
loope
shrl
jg
cmc
xchg
jl
pushw
sub
sarl
push
jge
mov
push
push
in
mov
and
cmp
pop
bound
dec
imul
aad
add
and
mov
inc
aas
jl
sbb
adc
test
push
movaps
pop
dec
outsb
mov
cmp
sub
pop
fldenv
sub
xor
lcall
je
adc
add
aam
mov
mov
fsubs
xchg
add
daa
cwtl
xor
dec
hlt
iret
xchg
jo
pusha
fcoms
enter
sahf
cs
xor
xor
cmp
pop
mov
js
outsb
lods
push
je
pop
ss
dec
out
mov
movsb
rcll
add
push
xor
push
sub
insb
mov
scas
cs
push
cmpsb
mov
push
mov
in
scas
imul
divl
mov
cmp
and
lods
push
in
rorb
lea
adc
test
mov
cmp
in
mov
push
pushf
je
insb
cltd
add
test
addr16
lcall
pusha
out
mov
and
rorl
dec
sbb
and
mov
mov
ficomps
adc
popf
je
enter
dec
push
mov
popf
cmp
xor
dec
cmpsb
inc
sbb
cmp
mov
adc
ror
mov
in
jge
les
inc
lret
mov
inc
fs
sub
loop
mov
ret
andl
pop
mov
les
push
mov
cli
sbb
jnp
xchg
std
xchg
xchg
jbe
xchg
movsb
dec
popa
daa
add
and
movsb
adc
addl
and
or
push
fisttpll
pop
sbb
mov
sub
addb
mov
dec
mov
divb
pop
push
repnz
push
cmp
lcall
nop
mov
test
or
pusha
and
movsl
loopne
dec
jmp
adc
jne
or
mov
dec
xchg
mov
adc
mov
aas
in
or
loopne
ljmp
test
mov
pop
out
jo
ja
rcll
dec
push
inc
cmp
divl
xchg
in
sbbl
or
test
sub
insb
cmp
pop
or
fmull
loope
sbb
test
outsb
sub
mov
push
jae
xlat
mov
push
mov
popf
jle
inc
inc
daa
and
je
pop
scas
scas
ja
scas
cli
insl
cmp
push
iret
dec
pop
mov
test
in
mov
nop
cmp
push
xchg
pushf
das
push
popa
imul
xchg
cmpsl
pop
js
insb
in
pop
stos
stc
data16
addr16
inc
cmpsl
in
cmp
mov
jnp
dec
cltd
sahf
pusha
dec
xchg
push
jg
mov
inc
arpl
aad
loop
jb
pop
jns
cmp
ss
lcall
incb
or
cmp
fwait
push
pusha
pop
mov
enter
xchg
fs
jno
test
push
outsl
repz
push
movsb
ljmp
movsl
daa
lret
sub
popa
inc
jg
cmp
aaa
mov
orb
inc
xor
xchg
mov
daa
js
in
insl
inc
cld
dec
aaa
push
movsb
xchg
lds
scas
out
dec
sub
out
xor
push
or
sbb
adc
out
cmp
sub
push
cmovnp
addr16
cmp
mov
insl
aas
daa
repnz
lods
push
mov
call
fwait
mov
lods
cwtl
ss
out
jns
and
jl
test
loop
inc
nop
cs
test
dec
push
cmp
inc
insl
bound
imul
lcall
pop
popa
lcall
lcall
movsl
insb
jl
repnz
jp
xor
cmp
add
jb
mov
rorb
hlt
add
pop
cs
push
pop
notl
push
divl
insl
ljmp
mov
test
jbe
fs
mov
movsb
xor
shll
cmp
mov
adc
je
jno
out
jns
in
or
fisttps
das
mov
push
push
ja
adc
sub
cmpsl
ja
or
addr16
aas
mov
out
jbe
lret
mov
insb
add
add
adc
mov
jno
or
push
bound
or
test
cmp
cmpsb
and
cwtl
arpl
out
fucom
popa
cmpsl
pop
mov
int3
imul
mov
xlat
cmp
inc
push
push
xor
xorb
mov
or
daa
in
mov
cs
cmp
scas
ja
dec
inc
pop
jle
mov
sbb
out
outsb
jle
dec
test
jo,pn
sub
inc
xchg
movsl
inc
jbe
xor
jno
in
lds
dec
mov
pushl
jge
xor
test
pop
das
add
cmp
mov
xchg
movsb
inc
das
popa
and
popf
mov
aaa
test
mov
push
pop
push
adc
cmpsb
jbe
pop
sarl
xchg
movsb
cld
cwtl
mov
adc
push
das
out
add
movsb
sbb
push
pushf
jae
rolb
mov
jl
jge
jle
popa
jbe
adc
mov
clc
lahf
push
mov
mov
daa
cwtl
dec
data16
aad
push
int
nop
xor
sub
fwait
mov
and
in
std
aad
scas
sub
cmp
ss
push
adc
mov
rorb
ror
mov
push
rclb
mov
dec
dec
and
test
je
scas
ffree
iret
sub
cmp
and
cmpsl
roll
cli
sarl
jb
jge
and
in
outsb
xchg
out
insl
inc
push
lret
jb
insl
and
push
dec
jo
std
icebp
push
stos
dec
mov
xor
pushf
repz
and
push
dec
jecxz
lret
dec
ss
dec
shrl
into
outsl
popf
jle
addb
lods
ret
adc
in
sbb
xchg
clc
and
out
pop
add
mov
daa
orl
push
pusha
adc
push
xor
mov
xor
xchg
mov
adc
xor
pop
pushf
mov
sub
lods
dec
js
sub
xor
cs
test
aaa
stos
bound
aaa
aad
aaa
movups
push
inc
sahf
lret
and
loopne
stos
cmpl
mov
sub
or
jno
movsb
pop
subl
push
dec
push
daa
dec
popa
and
inc
xchg
sub
cs
jae
fwait
cmp
iret
sbb
mov
jp
lcall
hlt
fstl
mov
orl
ja
sbbb
and
in
ficompl
fcompl
push
or
jmp
adc
push
cmp
pop
add
cld
pop
push
xor
shrl
dec
xor
stos
rcrl
sbb
xor
cs
pop
ret
cmp
mov
and
mov
cmp
mov
repnz
mov
loop
enter
outsb
adc
scas
insb
add
idivl
testl
mov
rcrl
jns
mov
pause
mov
arpl
add
aad
fcoml
add
out
int3
ret
dec
xor
sbb
pusha
shrb
lds
popf
or
shlb
push
daa
sahf
jle
stos
add
jmp
jp
and
movsl
sbb
lret
outsb
dec
or
pop
cli
dec
xor
jne
out
sbb
sahf
mov
push
and
lds
mov
dec
jge
lods
mov
push
pop
scas
or
pusha
mov
pop
xor
movsb
adc
cmp
jl
mov
push
push
mov
sub
int3
inc
cmp
xchg
pop
inc
nop
jge
adc
int
jbe
sub
scas
xor
adc
jnp
pop
push
test
sbb
aad
out
xor
xor
rclb
xlat
sbb
fdivrl
cltd
ja
xchg
inc
stos
sti
out
stc
mov
adc
sbb
jmp
mov
sti
and
scas
jmp
push
mov
int3
js
dec
jecxz
dec
dec
ret
push
inc
add
add
lret
insl
mov
jle
dec
push
pop
xorb
add
push
in
mov
mov
push
sub
cmp
add
xor
cmp
inc
jle
dec
mov
adc
arpl
ficomps
pop
mov
and
and
ja
dec
ds
xor
sub
push
push
ja
mov
movsb
mov
sti
leave
mov
pop
cmp
or
and
aas
ss
xchg
movsb
mov
jle
cmp
testl
pop
push
jle
sub
jecxz
jnp
pop
mov
imul
push
pop
cmp
xchg
xor
push
jns
rol
mov
out
sub
dec
sbb
mov
jo
push
add
nop
cmp
lret
cmpsb
outsl
test
mov
mov
orl
xchg
lcall
test
dec
sbb
push
jl
dec
cmp
jle
sti
mov
ret
outsl
xor
mov
in
pop
and
push
shlb
imul
cmp
jns
dec
or
pop
push
lock
dec
call
adc
push
push
lds
mov
jmp
je
push
adc
sbb
js
nop
mov
push
mov
push
out
mov
mov
addl
push
cli
adc
adc
adc
int3
push
pop
sbb
xchg
cmc
pop
pop
jl
mov
push
mov
cmpsl
test
xor
testl
ljmp
pop
jmp
push
rorl
loope
daa
lods
loop
out
cld
enter
or
adc
sbb
test
jecxz
pop
out
dec
cmc
mov
mov
out
into
sahf
int3
jp
adc
lret
xchg
push
lcall
outsb
mov
insb
push
cmp
nop
jbe
mov
xor
sbb
sub
je
sub
xor
popa
out
mov
xchg
mov
sub
push
push
stc
cmp
aaa
rol
add
in
inc
scas
lods
outsb
mov
lds
dec
mov
fisubrs
adc
cmp
out
push
jnp
sbb
sbb
fistl
outsw
pop
cld
inc
xor
fwait
mov
lods
and
call
xchg
push
int
xchg
jns
in
sbb
cmp
ja
push
push
sub
inc
cmp
push
in
sub
adc
pop
xor
sbb
lock
enter
adcb
outsl
mov
and
popf
mov
and
lcall
ds
mov
fidivrl
dec
popf
cmp
sub
out
outsl
push
pop
lods
faddp
xorl
fs
test
or
pop
xchg
xlat
in
adcl
js
xorl
xchg
inc
clc
mov
xchg
cli
in
outsb
ljmp
mov
gs
mov
jge
addb
mov
aad
enter
les
orb
and
sbb
inc
inc
xor
mov
mov
jae
lcall
clc
pop
push
aad
dec
pop
sbbb
cmp
and
in
out
dec
ja
sub
jmp
cmp
out
loope
popl
push
cmp
jge
xor
loopne
sub
lahf
jne
lret
popa
shrb
pop
clc
stos
scas
sub
xchg
xchg
movsb
les
test
pusha
mov
cmp
nop
sahf
fisttpll
fisubrs
xor
mov
xchg
fldl
fimuls
jno
cld
cmp
cmp
xchg
adc
or
jge
xor
xchg
mov
xchg
xor
jbe
lcall
subb
cld
fwait
bound
subl
daa
jo
jecxz
dec
pop
push
mov
push
sarb
dec
inc
mov
jbe
add
fwait
cmpsl
cli
xor
stos
jbe
push
cmp
in
mov
pop
mov
clc
pop
jno
outsl
xchg
push
fsubrs
push
fidivs
xchg
out
les
mov
xchg
insl
sub
jmp
cmp
adc
inc
jge
imul
in
jne
sti
xor
dec
adc
adc
and
lds
lret
out
inc
cmp
cmp
mov
jb
mov
popa
and
out
scas
pop
pop
fwait
jns
cmp
xor
push
mov
ss
xchg
imul
add
dec
sbb
dec
push
stos
adc
pop
xor
hlt
and
cld
dec
sbb
sub
add
add
xchg
push
aaa
pop
inc
and
mov
xor
dec
jge
push
mov
daa
fdivl
jl
jle
mull
adc
add
or
cmpsb
and
fwait
data16
xorb
call
lcall
pop
cs
fwait
lea
pusha
push
push
out
xor
cmp
mov
pop
sub
push
or
rolb
in
cmpsl
push
xor
and
adc
sar
mov
ljmp
mov
dec
aas
push
and
push
sub
lea
popa
in
outsb
mov
mov
lahf
sub
jbe
mov
sahf
aam
adc
cmpsl
sbb
popa
pop
out
lds
sbbl
cmp
sar
mov
repz
movsb
jecxz
scas
cmpl
mov
push
push
sarl
in
in
mov
jo
leave
dec
outsb
ja
aaa
popa
scas
sub
jno
movsb
push
in
ss
jnp
inc
push
mov
mov
pop
mov
and
hlt
adc
mov
xor
lock
icebp
test
popl
xor
mov
imul
fsubs
jle
movsl
and
aam
lock
int
cmp
sub
and
pop
and
xchg
mov
mov
mov
jmp
sbb
ss
adc
lods
xorb
ja
and
jbe
xor
jae
dec
ficoms
inc
mov
mov
and
xor
into
jge
jne
mov
push
add
sub
xor
les
push
dec
fnstsw
leave
push
xor
push
popf
mov
ss
xor
sbb
rolb
mov
and
outsl
sti
out
je
push
mov
test
xchg
call
into
inc
fmuls
cwtl
mov
pusha
in
pop
dec
adc
in
mov
jge
and
aaa
jp
aaa
xchg
lods
lock
cmp
and
icebp
std
aaa
jl
mov
xchg
loop
lret
xor
mov
mov
or
push
xor
pop
sbb
daa
mov
dec
ja
mov
rolb
ds
cmp
das
insl
pop
stos
adc
fisubs
or
jne
std
sub
cmp
sti
outsb
push
push
pusha
and
sub
push
add
scas
inc
mov
mov
adc
dec
test
cmp
imul
or
and
mov
mov
jne
xchg
and
ja
sub
sub
outsl
mov
mov
xor
gs
sbbl
test
popa
push
cmp
cli
outsl
fwait
jnp
popa
movsb
or
addr16
and
orl
ror
out
and
fistps
cmpl
pop
into
fstl
ret
jmp
adc
pop
lock
push
mov
add
js
les
mov
push
rdtsc
and
mov
cmp
inc
lods
xchg
mov
sub
test
mull
nop
cmp
or
adc
cmp
enter
xor
mov
repnz
adc
or
dec
push
fiadds
dec
out
cmpsl
sbbb
test
imul
lret
lea
pmulhw
mov
lock
imul
add
xor
jg
add
dec
sub
jb
ss
push
mov
mov
rcrb
lret
pop
add
xor
mov
jl
leave
iret
jne
js
push
mov
imul
sub
scas
cmpsl
push
or
jno
pop
lea
cs
dec
pushf
movsl
ds
mov
hlt
cmp
fsts
call
arpl
lock
std
cli
push
aas
mov
xchg
mov
cmp
push
inc
mov
xchg
push
stos
adc
add
push
js
pop
and
ss
outsl
jge
notl
xchg
mov
inc
lock
fsubrl
adc
push
and
mov
xor
jl
insb
rcll
pop
outsb
in
dec
inc
inc
sbb
pop
cmp
sub
push
in
pop
xorb
sbb
jne
cmp
std
scas
mov
adc
dec
sbb
out
or
loopne
pushf
data16
jp
fwait
pop
mov
test
xor
or
jns
mov
cmpsl
xchg
push
add
cld
push
ret
add
das
pop
clc
out
jnp
push
cmpb
sbb
mov
add
dec
and
adc
dec
mov
mov
int3
pop
inc
stos
pop
ss
sbb
cwtl
and
dec
mov
enter
out
mov
xlat
xchg
lock
push
dec
call
jb
rorl
jp
test
cmp
jle
arpl
mov
inc
rclb
es
adc
mov
cmpsl
adc
sti
jge
push
push
call
outsb
mov
mov
es
sbb
or
lds
xor
lcall
mov
push
mov
push
cmp
and
sub
fs
push
aas
xor
jne
lahf
jno
jbe
jbe
into
ss
xor
cmp
fwait
addb
add
pop
int3
push
sbb
xor
movsb
jns
push
outsl
sbb
inc
fmull
loope
dec
adc
cmpsl
xlat
jmp
fwait
cmp
cltd
sub
sub
scas
lea
mov
ret
addb
mov
js
daa
test
dec
ds
pushf
xor
dec
lcall
movsb
mov
pcmpgtb
mov
jle,pn
jbe
sub
icebp
cli
sub
gs
mov
jl
sub
and
mov
cmovb
push
outsl
enter
sti
lahf
sub
sahf
push
push
jge
loope
jmp
cmp
cs
dec
jge
sbb
movsb
push
aam
sbb
jno
dec
inc
stos
inc
outsb
push
add
ljmp
fstpt
or
sbb
sub
cli
call
lock
cmp
push
push
or
fidivl
pop
insb
push
sbb
idiv
out
rorl
ja
pop
jg
sub
cmp
scas
cmpsl
out
xchg
mov
dec
mov
jo
and
and
jae
jp
loope
arpl
xchg
mov
push
cmp
push
dec
mov
shl
xor
scas
cs
or
mov
movsb
dec
jp
add
ds
add
test
loope
clc
mov
push
ss
loop
test
cmpsb
pop
sbb
loope
out
pop
mov
ja
testw
out
adc
inc
lods
add
cmp
fidivrs
xor
sbb
pushf
lret
mov
sub
xor
dec
xchg
enter
lretw
xchg
ds
mov
sbb
mov
sub
cwtl
mulb
mov
mov
mov
xor
mov
xor
adc
inc
call
sub
xor
cmp
scas
dec
lahf
das
adc
add
arpl
xlat
ja
jns
or
jne
ss
add
sbb
ljmp
andl
ss
test
push
das
lds
push
cmp
popa
sub
fdivrs
push
sarl
jns
fdivrs
dec
in
dec
pop
stos
cmp
and
ja
mov
inc
jge
mov
jbe
test
sub
jno
inc
cmp
push
sbb
jge
dec
mov
xchg
mov
movsl
push
inc
ss
fdivrl
mov
insb
sbb
insl
stc
in
call
xor
sub
push
sub
nop
adc
mov
pop
dec
pop
inc
xchg
iret
out
push
push
pop
stc
cmp
in
into
xchg
ss
and
xlat
xor
push
ds
mov
test
fs
mov
mov
mov
iret
mov
aad
pop
jnp
mov
sub
es
mov
pop
ret
enter
aas
inc
mov
ljmp
adc
rorb
inc
mov
rclb
dec
stc
pop
ret
mov
pop
dec
orb
cmp
xor
mov
out
fistl
jmp
pop
inc
and
xchg
sub
push
add
testl
mov
pusha
enter
mov
xchg
mov
fdivl
and
daa
push
sub
pop
sub
jg
in
xorb
or
ret
test
int3
sbb
movsb
js
push
out
testb
ret
or
mov
dec
shlb
mov
sbb
ds
mov
add
sub
sub
push
ja
ja
icebp
out
jno
rorb
and
jecxz
pop
jnp
adc
push
rcr
pop
jg
test
adc
xchg
cmp
sbb
adcl
rorb
push
clc
xchg
test
inc
dec
andl
mov
mov
inc
das
push
out
negl
and
dec
psubw
sub
inc
push
and
cs
push
dec
imulb
int
cli
in
push
test
cli
cmpsb
je
add
inc
ja
xor
mov
mov
mov
add
dec
rorl
loopne
lcall
pop
cs
stos
push
push
dec
jbe
pop
dec
ds
pop
mov
pop
sub
pop
mov
adc
scas
arpl
cpuid
stos
push
in
mov
dec
or
push
mov
fs
sbb
inc
xor
jbe
popf
jns
nop
negl
cmp
dec
popa
hlt
sub
sub
shll
lds
sub
popa
subl
mov
fs
sub
daa
mov
fdivrl
dec
sub
test
push
cmpsb
je
test
faddl
subl
fs
dec
cmp
or
jne
add
bound
push
out
add
ljmp
dec
inc
mov
pop
pop
jle
add
out
imul
sub
pop
sub
jl
dec
popf
push
pop
and
sbb
lcall
jp
mov
call
stc
mov
mov
sub
out
push
mov
xor
jbe
cmp
ss
jmp
mov
sbb
mov
scas
lods
xchg
cmp
movsl
into
mov
push
out
lret
adc
and
mov
dec
scas
dec
mov
xchg
mov
popf
clc
sub
pusha
adc
out
xor
adc
xor
sub
pop
fiadds
ja
fs
inc
fbld
bound
stos
out
xchg
dec
pop
mov
jnp
pop
push
lcall
pop
push
dec
inc
stos
popa
jmp
mov
stos
mov
adc
cmp
inc
pop
fwait
xor
mov
ja
push
cld
ss
mov
and
mov
sub
imul
mov
lahf
dec
fnstenv
push
ret
add
in
stos
adc
dec
lods
mov
xor
sub
or
shlb
push
dec
xchg
inc
cmpsb
mov
and
mov
xor
dec
jb
ljmp
es
dec
lret
test
aaa
aas
scas
out
cmp
sbb
cmp
cmp
push
or
dec
xchg
sti
lea
dec
ljmp
aaa
es
out
xor
mov
pop
sub
popa
push
cltd
sub
jmp
imul
cmp
and
inc
dec
psubusb
das
push
lret
insb
mov
je
sbb
pop
mov
xor
ja
dec
sti
mov
push
mov
jnp
and
popf
stos
ja
and
mov
cli
cmpsb
js
mov
mov
jo
loop
pop
jg
cmp
pop
cmp
xchg
jbe
sbb
cmp
jge
andb
test
int3
fstpl
push
scas
push
in
inc
std
sbb
push
sti
lods
add
pop
mov
jp
cmp
cmpsl
sarl
aaa
pop
sbb
xchg
fwait
insb
jns
scas
push
call
mov
jno
mov
and
out
mov
jo
cmpsb
push
sub
les
mov
in
rcl
scas
xchg
xor
lret
dec
fwait
xchg
or
sbb
push
inc
sub
push
dec
mov
lea
test
loope
xor
mov
jge
out
mov
mov
push
mov
mov
inc
test
and
add
rcll
pop
adc
cmp
mov
mov
sbb
cwtl
or
cmpl
or
cli
loop
dec
fildl
mov
arpl
stos
out
scas
jg
imul
hlt
mov
loop
mov
out
jo
pop
push
test
testl
add
push
jno
in
cmc
push
sbb
out
fwait
xchg
loop
inc
repz
out
inc
sahf
dec
cs
add
pop
fistpl
out
pop
out
or
push
adc
cmpsb
or
push
fildl
out
sub
mov
dec
xor
loope
mov
cmp
mov
push
sub
push
mov
xchg
cmp
mov
jge
or
jnp
mov
mov
lods
scas
mov
mov
jae
add
dec
daa
xchg
iret
jmp
push
out
mov
sbb
add
loope
sbbl
push
xor
out
cmpsb
fimull
cmp
adc
out
inc
in
mov
loope
cmp
sub
in
and
imul
push
push
adc
pop
mov
loopne
lahf
je
jns
adc
enter
xor
and
fdecstp
and
flds
and
movsb
xchg
sub
mov
dec
fnstsw
push
adc
add
test
pop
stos
into
into
int
dec
cltd
imul
insb
mov
xchg
jno
popa
dec
mov
mov
pop
aad
jge
push
pusha
jecxz
add
aad
rorl
add
addr16
dec
movsl
dec
pop
ss
repnz
mov
pop
mov
divl
loope
ja
fstl
xchg
sub
xor
insl
lds
clc
outsb
sub
je
adc
movsl
mov
mov
cmpsb
popa
add
popf
xor
iret
insb
idivb
out
sar
cmpsb
repz
fistpl
sahf
mov
add
push
adc
xor
imul
pop
or
push
adc
dec
xor
jae
mov
push
lret
imul
inc
std
pop
pop
mov
and
fisttps
push
cli
mov
pop
sub
mov
orl
xchg
push
mov
cmpsl
add
lea
mov
paddsb
cmp
loop
pushf
and
popf
or
inc
xor
jp
jb
xchg
movsb
js
les
xor
nop
popl
jns
pop
xor
sub
cmp
negl
aas
aaa
push
adc
std
or
fistpll
cs
xlat
pushf
popf
andb
sbb
ds
into
xor
xor
addb
jne
inc
xor
cltd
outsb
test
clc
adc
ftst
xchg
test
cmp
dec
push
cltd
sub
ss
adc
jecxz
jbe
call
int
das
clc
mov
jns
pop
pop
loope
loopne
mov
outsb
cmp
sbb
dec
push
cmp
cmp
loope
pop
in
sub
pop
je
popf
push
xor
jb
into
jle
shll
cmpsl
and
mov
cld
fwait
and
xor
mov
sbb
or
cmp
adc
or
mov
push
inc
lcall
and
sar
cs
les
or
inc
arpl
jge
sbb
push
or
movsb
pushf
into
cs
fldl
mov
sbb
call
sub
sti
xchg
fdivrl
cmp
mov
push
fwait
out
mov
mov
out
xchg
push
cmp
outsl
push
sbbb
roll
jns
jecxz
hlt
imul
push
std
pop
mov
sahf
xor
int
inc
in
jbe
arpl
mov
jle
enter
mov
xchg
push
out
jno
ret
repz
shlb
dec
inc
lea
leave
data16
leave
xchg
divl
mov
andl
stos
mov
mov
xor
push
imul
je
into
xor
adc
je
pop
fwait
jle
pop
xchg
xor
in
inc
imul
pop
cmpsb
loopne
cmc
mov
leave
xchg
std
out
or
les
sub
mov
test
pop
stos
mov
addr16
pop
out
push
push
xchg
mov
inc
jnp
cmpsb
stc
xor
mov
cmpsb
into
push
sub
rcrb
xor
sub
ljmp
lahf
jne
jmp
movb
int3
out
mov
mov
push
rcll
pop
mov
cmp
mov
sub
jne
inc
xchg
mov
jo
lock
and
lds
jp
xor
outsb
mov
dec
call
pop
push
cld
cmp
jmp
dec
outsl
lcall
sub
sbb
stc
cmp
ss
test
mov
mov
fcomps
and
cmpsb
rorb
sti
in
enter
in
bound
ljmp
sti
inc
arpl
aad
fisubrs
or
add
sbb
addr16
jmp
iret
pop
mov
call
sub
or
mov
cmpsl
iret
lock
ss
xchg
dec
aad
adc
sarl
push
mov
xor
push
enter
lahf
in
jo
adc
mov
aaa
mov
incb
push
lods
jbe
mov
xor
pop
test
sti
movb
mov
mov
mov
xor
mov
enter
push
inc
insl
lret
push
xor
loope
and
icebp
sti
outsl
dec
push
dec
inc
ds
mov
or
inc
push
imul
push
mov
test
das
cmp
aas
out
mov
adc
into
in
stos
xlat
cmpsl
shl
cmp
jbe
push
jbe
xor
lret
cmp
lods
fmuls
mov
imul
push
push
fmull
cmp
ds
or
test
cmp
xchg
adc
push
test
push
test
jno
loop
adcb
sbb
insl
push
fsubrs
ss
and
ljmp
jo
cmp
aam
mov
test
fdivl
pop
pushf
xor
popa
pop
mov
mov
cmpsl
push
cli
movsb
int
and
inc
pop
mov
into
mov
int3
push
test
pop
or
jnp
out
dec
imul
stos
push
jmp
xor
or
mov
cmp
scas
xor
orb
movl
adc
sub
mov
testl
mov
jo
enter
stos
lret
pushf
push
icebp
sbb
sti
daa
test
xlat
jbe
cli
bound
incb
jne
addl
mov
jmp
iret
push
cld
dec
dec
into
jno
inc
push
in
pop
repnz
insb
outsl
mov
pop
dec
lea
rcll
sbb
mov
sarl
mov
nop
push
sub
push
pushf
adcl
daa
sub
pop
movsl
int
dec
loope
enter
popf
and
out
outsb
xchg
out
cmpsb
jo
movsb
inc
inc
cmp
and
mov
sub
aas
adc
xchg
sarl
xor
mov
jmp
push
mov
lods
jae
adc
push
xchg
call
mov
sahf
clc
push
mov
xor
cmp
imul
scas
das
jmp
enter
push
jnp
mov
cmp
inc
xor
cmp
pand
hlt
loop
dec
ja
outsl
lahf
ss
cmc
fimuls
lods
mov
in
or
pop
jle
daa
out
movsl
rorl
dec
repnz
mov
mov
mov
add
jp
mov
cmp
or
cwtl
je
inc
out
scas
mov
mov
jecxz
xor
cs
mov
dec
adcb
push
je
adc
and
js
enter
xchg
push
and
gs
and
jns
and
cmc
movsb
inc
mov
and
jno
and
dec
mov
pop
lahf
mov
add
cmc
mov
push
inc
xor
pop
ret
and
rclb
fsts
pop
mov
push
int3
inc
push
movsb
mov
inc
insl
sbb
inc
cmpsb
push
push
dec
fistpll
ljmp
xor
daa
je
jbe
aaa
xor
std
and
cmp
push
cmp
cmpsl
fwait
sub
sbb
push
je
in
jmp
xchg
xor
imul
loop
stos
and
mov
mov
or
and
sbbl
mov
fisubrl
test
jne
mov
loop
dec
push
pop
cmp
adc
sbb
add
fcom
nop
rcrl
mov
lahf
out
popl
sub
pop
mov
in
mov
out
in
jmp
call
mov
clc
iret
inc
out
stc
xlat
jno
jo
and
sub
push
inc
pusha
cmc
xchg
pop
daa
jae
push
data16
or
les
jo
std
or
loopne
cmp
jo
lods
adc
in
stos
jp
jbe
jb
cli
inc
sub
pusha
push
lcall
idivl
cs
adc
mov
jbe
subl
mov
ds
push
out
dec
jmp
daa
fwait
push
add
mov
daa
or
lock
sub
push
clc
shll
bound
mov
dec
inc
push
jmp
adc
jle
das
bound
das
push
mov
les
popa
out
fwait
mov
jbe
ja
mov
push
cmp
outsl
rolb
rclb
push
sub
and
addr16
aas
cmp
push
mul
inc
adc
sbb
or
aam
insl
lcall
push
ficoml
sbb
inc
mov
push
or
sbbl
xor
dec
pop
lock
loop
mov
iret
xor
cmpsl
in
in
jo
and
push
lock
stos
jne
arpl
fmuls
mov
popf
mov
sbb
xchg
sub
imul
outsl
jle
movsb
push
mov
std
movsl
gs
inc
xchg
jle
popa
push
std
movsb
cli
pusha
popa
imul
fwait
cmovnp
daa
push
movsl
jmp
cmp
sbb
sub
enter
xchg
xor
scas
mov
scas
int
cmp
inc
xrelease
sbb
xlat
jns
mov
cwtl
lcall
mov
xchg
cmc
add
mov
jg
jo
inc
jo
jno
adc
shll
lcall
jns
pop
mov
mov
xor
daa
lods
nop
lret
lret
in
mull
mov
negl
adc
fwait
mov
insl
push
fsubp
aad
mov
sbb
lcall
hlt
jno
cmp
call
pop
jbe
test
sahf
and
daa
pop
loope
movsl
movsb
aaa
mov
xor
xchg
pop
sti
out
dec
in
lcall
cs
mov
lret
lcall
inc
stc
cmc
jle
inc
pop
xor
sub
hlt
cs
in
flds
xchg
cli
aaa
loopne
adc
sbb
inc
repnz
sarl
mov
mov
push
repz
fnstcw
cld
xor
fidivl
pop
clc
rcr
loop
test
into
stc
test
or
add
stos
inc
xchg
movsl
inc
lcall
xchg
xchg
lret
stc
je
in
sub
push
iret
lods
inc
jp
das
stc
mov
fcoml
xchg
pop
ja
push
push
adc
sbb
xchg
ljmp
into
cs
sub
jge
lcall
or
enter
cli
scas
scas
push
aas
cs
sub
nop
ret
push
aad
fstl
repz
das
fwait
cmp
cmp
xchg
and
insb
loop
adc
sbb
hlt
ret
push
jl
push
or
shlb
les
xchg
lret
sbb
movsl
xchg
xor
mov
adcb
decl
ret
sbb
sub
mov
imul
inc
call
push
add
adc
test
jmp
scas
ds
jmp
insb
jg
jmp
dec
test
mov
mov
jl
push
add
xor
in
dec
flds
pop
sub
dec
push
mov
bound
or
inc
xor
bound
int
hlt
dec
mov
loope
imul
ficoms
aaa
pop
cwtl
test
sbb
mov
icebp
test
xchg
pop
mov
xor
xchg
cmp
adc
gs
mov
mov
nop
outsl
mov
stc
jp
fildl
ret
pop
xchg
mov
dec
mov
and
mov
xor
mov
push
cltd
push
es
popa
jbe
mov
push
xor
push
outsb
dec
lods
data16
cmpsl
cmp
sub
push
test
push
jecxz
lcall
aas
dec
inc
into
lods
pushw
push
lods
imul
dec
in
and
icebp
push
loop
cmp
xchg
adc
cli
cmp
repz
iret
push
pop
pop
lcall
lahf
cmp
or
cli
adc
subb
popf
jbe
push
dec
xor
sbb
inc
xchg
ss
cmp
loopne
call
and
std
pop
push
imul
js
dec
repz
push
sahf
mov
sub
push
cmp
test
flds
clc
punpckhbw
subb
push
out
push
inc
daa
decl
into
loop
jnp
push
into
stc
mov
mov
aaa
and
push
dec
scas
and
jbe
fcoml
add
adc
and
or
jb
jno
sbb
icebp
mov
sub
loopne
pop
pop
inc
mov
adc
mov
aaa
jp
jle
push
test
das
push
push
stc
xchg
enter
add
into
nop
xor
mov
mov
addb
leave
pop
mov
loope
fmull
cmp
psubb
clc
js
mov
or
enter
scas
inc
mov
xchg
cmp
fcmovnb
loop
dec
mov
mov
rcrb
popa
ljmp
mov
mov
scas
or
dec
push
les
aas
js
fisttpl
scas
rcrb
cmpsl
leave
cmpsb
into
call
in
xchg
inc
fs
sub
pop
jle
xor
shll
xor
mov
cvttps2pi
dec
outsl
xor
stc
push
mov
test
ljmp
jmp
stos
mov
outsl
dec
stc
out
ds
adc
ss
pop
jecxz
lea
cmc
cmp
sub
pop
adc
jne
imul
jae
nop
stos
jb
inc
cmp
scas
xor
enter
daa
dec
scas
dec
out
bound
arpl
imul
das
dec
jbe
pop
add
cld
sahf
hlt
xor
clc
sub
cmp
add
add
lds
xor
adc
xor
cmp
movd
mov
out
arpl
dec
jb
push
js
cli
adcb
xchg
mov
imul
mov
cmp
mov
sahf
ja
add
ljmp
lcall
addb
inc
or
sbb
cmpsl
sub
getsec
outsl
lret
in
das
xor
mov
sbb
cmovne
bound
mov
mov
je
mov
mov
dec
paddq
inc
mov
mov
lea
into
add
cmc
dec
push
cwtl
adc
xor
movl
in
jge
dec
jle
add
fsubrl
cmp
scas
jl
sbb
or
jne
js
sbb
cmovle
lcall
lcall
sub
or
loopne
pop
mov
push
mov
mov
mov
mov
fcoml
ss
push
xor
mov
scas
mov
jmp
nop
inc
cmp
jecxz
jo
mov
test
imul
sub
subl
btr
inc
ss
cmp
sbb
sarb
int3
aam
pop
test
mov
mov
mov
andl
lods
mov
pop
stos
insb
sub
inc
setge
jge
xlat
xlat
push
mov
and
mov
ljmp
push
test
dec
sbb
out
outsb
cs
testl
subl
mov
dec
push
in
mov
sub
jns
dec
cmp
stos
cmp
adc
nop
cmp
stc
sbb
fisttpl
data16
inc
out
test
or
pop
cli
popa
adc
repnz
jl
aaa
jno
sbb
mov
mov
lock
jbe
jns
xor
push
inc
cmp
cmp
mov
and
jbe
sub
xor
dec
push
lods
test
cmp
dec
sbb
jbe
vcvtsi2sd
test
mov
pcmpgtb
mov
scas
mov
pop
inc
cmp
xor
dec
repz
in
arpl
dec
ja
mov
lret
jge
push
push
pop
adc
fs
push
xor
adc
aas
ljmp
sbb
outsl
xchg
add
test
loop
fstl
dec
xor
cmpsl
or
sub
mov
mov
push
fs
sub
ds
cli
dec
test
icebp
cmp
test
mov
movb
hlt
push
lds
lahf
cs
scas
inc
xchg
test
or
mov
sub
stos
dec
add
sub
stos
push
push
or
xor
arpl
fsub
mov
stos
cmp
xchg
push
jge
stc
and
push
lcall
loop
sub
adc
push
stc
clc
rorl
mov
adc
inc
cmpsl
stos
aaa
daa
dec
push
push
mov
mov
and
xor
mov
jmp
test
sbb
pop
dec
push
xchg
jno
or
imul
sub
push
adc
jnp
popa
jo
lret
jecxz
push
jecxz
ds
in
jecxz
ss
xor
enter
jge
push
cmp
cmp
test
sub
fdivrp
jb
dec
popa
in
cmpsb
xchg
cld
cmp
ret
jle
out
cmp
mov
into
ret
stc
dec
inc
adc
mov
mov
call
or
dec
xlat
cmp
pop
ss
sub
and
xor
lock
shlw
fcom
dec
push
jns
fidivl
pop
push
sub
cmpsl
and
dec
push
xor
push
clts
dec
pop
out
hlt
push
pop
imul
sbb
push
inc
js
xchg
add
jo
mov
mov
sub
imul
pop
cmpl
mov
dec
mov
dec
lcall
jne
frstor
jle
fwait
pop
popa
jbe
adc
xchg
mov
sbb
cmp
bsr
fadd
inc
bound
popf
or
sbb
push
push
fcmovb
adc
stc
xchg
and
mov
outsl
adc
aad
push
inc
nop
push
inc
in
movsb
cld
mov
cmp
push
sarl
test
inc
fs
pop
fxch
iret
jl
gs
std
mov
cltd
pushf
adc
pop
icebp
push
jnp
stos
jb
call
je
sub
out
loope
je
mov
xlat
dec
nop
outsl
mov
adc
or
cld
out
mov
mov
jecxz
sti
sub
mov
and
lret
idivb
test
aad
jl
mov
dec
cmp
and
push
cli
pop
popf
out
cmpsb
push
xlat
add
add
lcall
test
push
loope
insl
clc
outsl
xor
addr16
cld
dec
inc
adc
xor
std
mov
mov
addr16
cmp
test
lds
dec
mov
out
push
lcall
fwait
sub
sbb
jbe
outsb
iret
and
pop
jno
imull
cs
sub
data16
xchg
inc
aas
push
mov
sub
subl
push
mov
sub
jbe
inc
sub
shr
adc
adc
mov
sarb
mov
imul
push
jge
inc
or
clc
dec
shlb
lret
or
popa
movsb
pop
scas
cmpl
lcall
or
xchg
jbe
sub
mov
sahf
aaa
and
mov
mov
push
test
push
push
and
stos
sti
sub
adc
jns
mov
lcall
movsb
data16
xchg
bound
push
dec
mov
push
pop
adc
mov
popf
mov
icebp
mov
in
xor
push
pop
dec
cmp
cmpsl
or
les
divb
push
in
or
aad
push
adc
fs
gs
and
dec
cli
insl
lcall
lods
cmp
movsl
rcrl
dec
pop
stc
lods
scas
adc
js
adc
fiaddl
cli
sbb
cld
call
push
movsb
lcall
fimull
movsl
mov
add
and
jmp
dec
mov
mov
mov
push
fwait
or
mov
outsb
mov
icebp
popa
and
adc
movsb
mov
and
je
lock
stos
movsl
mov
ds
mov
cld
and
repz
inc
xor
jae
call
jmp
pop
les
push
lcall
dec
rclb
cld
jo
mov
cs
pop
in
push
inc
loope
lods
cmc
add
sub
mov
mov
pusha
adc
ret
div
fimull
push
push
dec
mov
jne
pop
lcall
data16
pop
and
int
shlb
cmpsl
and
pop
loop
mull
mov
and
aaa
lret
mov
adc
jne
insl
fisttpll
add
jp
out
adc
in
aaa
adc
adc
hlt
je
or
inc
pop
dec
out
ja
pop
mov
push
sbb
add
pop
jle
lcall
mov
adc
inc
dec
loop
ja
outsb
dec
and
jle
mov
cs
js
and
test
mov
mov
scas
aas
sbb
adc
mov
mov
das
insl
movsl
pop
jo
mov
out
scas
dec
ja
push
adc
popa
pop
mov
mov
add
sahf
test
push
xor
lcall
enter
and
xlat
test
mov
push
pop
push
aas
nop
mov
movsb
fucomi
push
adc
lea
jnp
add
sbb
js
ljmp
xor
jns
jge
insb
jmp
jmp
notb
mov
popa
out
and
andl
and
jno
aas
sub
mov
in
nopl
push
outsb
push
pop
clc
imul
xor
test
or
in
jns,pn
jg
or
mov
enter
inc
stos
xchg
fdivs
pop
mov
xchg
arpl
mov
movsb
xor
xchg
lds
jns
or
clc
sub
dec
xor
js
addl
mov
outsb
jno
push
lcall
sbb
sub
orl
or
lret
inc
ljmp
add
mov
adc
sub
inc
testl
jge
or
lcall
push
mov
mov
sbbl
jl
cmc
sub
jmp
inc
push
jae
sbb
lret
inc
out
mov
sub
int3
aad
int
mov
mov
cmpsb
mov
mov
xor
push
mov
mov
mov
cwtl
pop
xor
stos
dec
mov
xor
push
and
fwait
push
ss
mov
dec
mov
aad
sub
cmp
test
movsb
bound
xor
daa
fwait
xchg
cli
jl
std
push
mov
movsb
mov
clc
mov
mov
jge
mov
lods
enter
das
fidivs
std
push
sbb
cmpsb
adc
mov
pop
push
push
and
push
test
fadd
jecxz
movd
je
popa
pop
sbb
icebp
std
sub
push
sahf
pusha
inc
sub
jle
scas
adc
test
mov
sub
aam
nop
test
jl
sbb
stc
push
inc
mov
mov
in
lret
mov
mov
sahf
push
mov
test
inc
jne
sub
jbe
mov
cmp
inc
gs
lcall
sub
push
pop
je
sub
das
xchg
mov
out
jns
sub
pushf
mov
and
test
lods
outsb
sahf
xor
loope
lods
ficomps
lods
xor
push
jno
dec
push
mov
cmpsl
std
jge
mov
ljmp
nopl
clc
enter
inc
mov
das
lret
dec
aad
icebp
in
mov
dec
xor
add
ljmp
ret
mov
ss
jne
imul
mov
dec
fnstsw
sbb
fwait
adcl
movsl
dec
lcall
aam
cmp
lret
nop
cmpsb
sub
pop
adc
cmp
jecxz
xor
sbb
cmpsl
jp
movsl
aaa
lcall
dec
xor
pushl
ds
and
sbb
push
int3
inc
jne
push
ss
and
inc
mov
sub
mov
add
test
les
push
loop
mov
cli
aaa
lods
sub
inc
pop
and
scas
add
test
inc
ret
insl
jne
jge
sub
mov
es
clc
fwait
cmp
pop
jecxz
adc
addl
pushf
pop
jns
push
cs
mov
gs
cmp
jnp
mov
mov
xor
test
xor
sbb
add
push
mov
mov
mov
push
bound
add
mov
push
inc
das
xor
int3
jnp,pt
sub
xor
lret
mov
xor
xchg
popf
aam
push
test
jg
and
or
cmp
cmpsl
push
mov
push
mov
lods
filds
call
xor
add
inc
das
or
xor
pop
cmpl
jecxz
xor
xor
scas
fldcw
xor
inc
cs
mov
cmp
hlt
sub
sub
jp
adc
xchg
stc
icebp
lods
adc
xor
jnp
lea
test
and
lds
shlb
add
imul
or
iret
sub
les
dec
out
cmpb
and
jo
sub
mov
daa
push
jge
clc
addr16
orl
dec
jecxz
mov
aad
push
mov
sub
mov
or
out
push
or
jns
jbe
and
sbbl
popf
in
test
sub
loop
push
les
dec
ret
int3
pusha
push
and
sub
and
cmp
or
inc
cmp
dec
push
xor
testl
dec
sbb
sub
push
fwait
aaa
wrmsr
xchg
repnz
mov
fildll
jl
jb
test
fwait
inc
movsl
or
das
lods
jp
adcl
mov
popf
mov
out
cmp
push
inc
xor
test
les
inc
scas
jecxz
outsl
mov
das
scas
movsb
mov
aas
das
push
mov
mov
out
insb
push
repnz
mov
push
cltd
sahf
pop
test
cmp
andb
jo
jmp
mov
in
and
fiadds
xchg
in
adcl
out
mov
orl
inc
sbb
shrl
inc
setne
bound
mov
jmp
addr16
adc
outsl
mov
xor
andl
adc
int3
int3
sub
cmp
fwait
mov
movsb
push
mov
mov
int3
test
sub
sarl
mov
leave
cmp
push
mov
punpckhdq
icebp
add
lcall
jnp
cmp
dec
int
ljmp
out
xor
out
sbb
outsl
push
sbb
dec
mov
xor
mov
je
pop
adc
cmp
sarb
mov
or
test
aam
xchg
jne
mov
movsl
dec
cmpsl
cmp
jno
daa
sbb
test
adc
push
jae
aad
pop
pushl
movhps
bound
pop
cmp
cld
scas
cmp
pop
sub
pushf
cmp
dec
jne
pop
das
sbb
aaa
movsl
push
xchg
push
xchg
lret
dec
cs
stos
adc
scas
push
fistpl
cmp
comiss
mov
jae
rorb
pop
sub
pop
mov
xor
out
sub
mov
roll
push
test
lcall
fsubs
jo
mov
dec
nop
je
outsb
stc
and
add
movsb
fistl
ss
mov
mov
pop
lock
jl
push
mov
push
dec
dec
pop
push
mov
mov
or
mov
test
xor
fldenv
push
popa
cwtl
mov
and
aaa
pushl
push
addr16
shlb
xchg
pop
mov
cmp
dec
lret
data16
jno
jmp
addb
xor
outsb
arpl
xor
dec
cmp
adc
adc
icebp
xor
sbb
ss
add
pushf
mov
cmp
sbb
jae
in
push
jle
ljmp
call
pop
cltd
dec
lcall
sbb
sub
lods
fadd
mov
jbe
push
or
fnsave
es
mov
test
adc
inc
mov
cmp
daa
inc
mov
stc
scas
test
pop
push
cmpsl
push
push
sub
and
jbe
xor
test
xchg
movsb
jmp
lods
pop
icebp
dec
idivl
dec
xchg
fwait
mov
enter
or
popa
add
outsb
pop
inc
fwait
pop
ljmp
outsl
movsb
pop
dec
aad
mov
js
sub
pushf
es
mov
inc
push
and
popa
dec
add
cltd
scas
in
jge
inc
xor
popa
decl
sub
lret
lret
jecxz
sahf
add
add
nop
push
sub
sub
bound
mov
out
icebp
ljmp
inc
and
pop
jg
sub
lcall
and
into
mov
adc
movb
jne
out
lcall
mov
cmp
loop
lods
ret
cmpb
xchg
int
jnp
shll
dec
push
xor
push
sub
xchg
in
test
fwait
pop
push
sub
push
cli
push
and
cli
cmovge
test
scas
sub
mov
xchg
jge
inc
cli
mov
negb
pusha
fwait
das
cmp
sub
xchg
push
getsec
push
inc
stos
push
mov
lahf
stos
inc
icebp
sub
inc
mov
cmpl
icebp
and
mov
cmp
mov
ss
sub
add
lcall
popa
push
mov
stc
pusha
xor
fcomps
and
pop
clc
out
ljmp
scas
ss
jae
rorb
push
in
pop
mov
sub
mov
sbb
mov
adcl
jno
repz
xchg
loop
jl
cmp
add
jl
inc
mov
dec
fsts
xchg
mov
repnz
int3
inc
enter
and
sbb
notb
xor
scas
mov
jecxz
rcll
adc
test
sub
sbb
push
jno
push
cli
jbe
stos
scas
adc
inc
xor
test
sub
cmp
ja
lret
pop
fnsave
push
jnp
adc
nop
iret
inc
mov
xor
sub
and
test
test
sub
scas
out
sbb
push
call
cmp
imulb
ret
out
aad
push
arpl
cmp
insl
rcrl
int3
scas
sbb
mov
iret
pop
jmp
push
push
xchg
xchg
dec
mov
inc
movsb
out
test
push
push
push
outsl
mov
fwait
inc
jl
mov
divl
mov
jmp
test
mov
sbbb
dec
jmp
jbe
push
pop
pop
inc
dec
fwait
dec
mov
fs
imul
cltd
outsb
iret
xchg
push
notl
push
enterw
cmpsl
and
or
cmp
jbe
jb
jo
mov
lahf
mov
push
or
dec
and
adc
es
dec
jge
dec
jp
xchg
mov
push
jo
mov
out
shll
add
ss
imul
orb
test
push
hlt
mov
adc
ja
xor
rcr
les
in
cmc
add
mov
scas
ja
push
aaa
aam
jg
and
paddd
cs
sbb
mov
fcoms
dec
add
mov
ss
ret
sbb
push
mov
ret
mul
xchg
cmp
mov
dec
mov
fwait
sbb
or
push
pop
cld
in
sub
sub
mov
test
mov
or
mov
in
into
aam
cmp
fnsave
cmpsl
out
jns
sbb
cmp
pop
adcb
arpl
clc
mulb
xchg
pop
lret
in
push
jo
dec
push
ss
mul
dec
lea
lret
pop
test
icebp
fwait
pop
lea
nop
and
fcomip
lea
aas
inc
movsb
push
popa
and
popl
gs
out
inc
jge
shrb
cmp
fldcw
jns
lds
in
cmp
in
lods
and
sbb
and
mov
aaa
in
arpl
and
popa
add
mov
mov
lcall
repz
dec
out
sbb
jne
in
outsb
and
jo
lods
mov
je
mov
sbb
push
mulb
pop
add
cmpsl
pop
mov
push
jo
das
push
and
push
negb
jno
leave
in
dec
mov
jl
pop
dec
test
xchg
arpl
mov
lods
clc
scas
in
out
les
adc
test
and
push
std
or
xchg
xchg
mov
mov
mov
xchg
mov
test
lods
mov
mov
and
push
imul
xchg
pop
lret
pop
lret
outsb
sahf
inc
push
into
sbb
dec
sbb
cmp
test
mov
pop
je
repz
nop
mov
xchg
push
xchg
out
out
jbe
inc
scas
fsubp
push
in
lahf
pop
mov
lahf
mov
test
mov
bnd
push
outsl
pop
loope
xor
jg
mov
popa
fidivrl
test
inc
dec
push
jbe
xor
and
clc
movsl
xchg
daa
xchg
jbe
push
pusha
adc
cs
sbb
pusha
addr16
mov
and
into
lds
sub
arpl
xor
shll
jmp
mov
je
sarb
xchg
dec
push
adc
mov
jnp
fwait
sbb
out
sub
mov
mov
dec
fwait
pop
roll
aaa
inc
pop
daa
xchg
dec
in
adc
dec
push
addr16
xlat
inc
inc
adc
sbb
js
inc
push
pop
popa
dec
imull
aad
fstpt
popa
jbe
and
mov
imul
cli
push
sbb
fs
jo
push
mov
mov
rol
sbb
stos
scas
push
dec
inc
or
out
fdivl
outsb
add
mov
inc
jno
loopne
push
dec
sti
pop
lcall
loopne
lcall
mov
sbb
jbe
xor
clc
xchg
adc
jecxz
aaa
cmpsl
sbb
outsb
imul
push
imulb
sbb
call
jge
and
scas
sbb
sar
adc
fcoms
jne
inc
fnsave
dec
popa
add
mov
add
push
mov
lcall
scas
test
mov
pop
jbe
js
cmp
cli
clc
pop
movb
xchg
mov
sbb
mov
daa
xor
fwait
dec
sbb
or
jb
cli
pop
test
das
jae
sti
lods
push
add
in
imul
mov
out
aad
cmp
sub
cmp
push
jae
ja
cs
mov
xchg
dec
mov
fiaddl
test
jmp
mov
divl
imul
outsl
cmp
jns
jg
cmp
clc
adc
test
test
dec
mov
out
add
dec
cli
inc
nop
inc
shrl
xor
ss
jg
pop
dec
jecxz
ds
pop
dec
sbb
lret
rorb
lret
loope
cmp
loope
sbb
inc
xchg
out
stos
arpl
fistpl
xorb
sub
dec
xor
cmpsb
outsb
cmp
and
mov
cmp
data16
mov
loop
push
jmp
pop
fnstenv
mov
mov
in
sbb
cmp
les
sub
data16
mov
jg
xchg
xor
das
mov
stos
mov
out
inc
pop
sub
inc
push
lahf
sbb
pop
xchg
ds
pusha
xor
fwait
sub
stos
lcall
xchg
pop
les
arpl
and
addr16
aam
push
lock
jbe
sub
sbb
jl
scas
adc
dec
mov
imul
call
mov
loopne
ret
pushl
movsl
aas
pushf
pop
outsl
rclb
push
out
push
ss
xor
aad
pop
push
cmp
or
or
adc
cmp
nop
jbe
shrb
jmp
cmpsb
clc
adc
jmp
repz
mov
mov
dec
mov
add
xchg
outsl
insl
inc
push
ficomps
clc
js
jle
sub
scas
adc
mov
cli
outsl
aaa
xor
fcmove
loop
jne
jl
fwait
mov
outsb
mov
sbb
loopne
fisttpll
xor
sbb
mov
in
mov
sbb
mov
pusha
sub
aad
ds
cwtl
icebp
dec
mov
inc
and
jbe
mov
mov
mov
add
dec
cmp
add
sbb
push
mov
scas
shlb
int
roll
cmp
mov
mov
in
stos
push
adc
or
leave
fs
mov
dec
jp
jno
dec
cmp
xchg
sub
mov
and
lea
mov
sub
test
jbe
cli
pop
push
add
arpl
lcall
jo
jbe
lods
loopne
dec
in
enter
std
into
mov
adc
data16
push
and
ror
cli
mov
dec
jl
jnp
sbb
cmp
dec
inc
push
dec
int
sub
add
scas
xor
daa
imul
sub
cmp
loopne
out
pop
clc
cmp
lods
cwtl
inc
mov
pop
push
rcll
dec
lods
mov
xor
fiadds
outsl
and
xchg
ljmp
aam
pusha
pop
adc
pop
mov
in
leave
xor
jge
test
out
sub
jo
push
cmc
test
sub
xchg
ficoms
jno
and
call
sub
popa
in
mov
stos
scas
jo
dec
add
pop
movsl
xchg
and
cld
stos
jb
dec
cmp
fistpll
je
mov
jge
imul
sbb
cmp
gs
and
jmp
push
mov
xchg
pop
pop
popf
xor
jge
in
dec
cld
imulb
cmp
add
cmp
test
add
bound
cmp
jnp
aad
leave
xor
rcrb
sub
inc
jl
xor
pop
ds
in
fistl
fidivrl
mov
lcall
repz
xchg
mov
popf
mov
or
mov
mov
jp
mov
and
bound
in
pushf
lret
mov
in
repz
das
push
cmp
dec
sti
and
cwtl
adc
and
mov
sbb
movsl
jae
nop
je
pushf
fwait
sub
push
out
fimuls
push
mov
cmp
add
xchg
push
xor
mov
pushf
inc
jmp
out
mov
cmp
movsb
dec
leave
cmp
mov
mov
insl
add
jle
and
jo
jbe
pop
mov
inc
adc
cmpsl
call
xchg
jnp
adc
outsl
mov
mov
xor
movsl
scas
jmp
ds
test
adc
xchg
scas
cs
lahf
push
jne
aaa
rolb
pop
mov
cmpl
outsb
lods
push
jp
pop
and
sbb
leave
mov
cmp
test
sbb
inc
icebp
je
sub
leave
dec
rcrl
loopne
fnsave
fwait
ret
push
jno
mov
push
in
mov
test
adc
outsl
mov
test
daa
shlb
dec
mov
das
ss
mov
inc
push
inc
int3
inc
jg
lds
scas
sub
add
jp
inc
fwait
inc
loopne
sub
sub
cmp
sub
cmp
inc
enter
cmp
cmp
cs
inc
pop
push
dec
dec
mov
add
out
dec
cmp
and
jge
xor
aad
pushw
xlat
lret
cmp
aam
aaa
ss
or
dec
mov
sub
cmp
inc
push
out
scas
jle
lods
aaa
push
ja
cmp
push
cmp
xchg
push
daa
sub
push
jb
pop
push
pop
mov
insb
inc
xor
iret
mov
lods
addr16
pop
jbe
jne,pt
movsb
imul
xor
mov
xor
insl
push
mulb
in
mov
push
mov
mov
dec
imulb
sahf
scas
test
xor
sub
outsb
insb
mov
pop
xchg
dec
das
pusha
push
inc
scas
xor
and
sub
dec
add
mov
dec
shrb
mov
cmpsb
cmp
inc
dec
xor
sub
data16
scas
cmp
dec
fsubrl
mov
dec
mov
test
scas
xchg
jb
outsb
pop
mov
dec
xor
aaa
sbb
sub
dec
cli
outsb
in
mov
dec
shrb
mov
sahf
cmp
mov
dec
dec
push
push
data16
cli
cmp
dec
shrb
mov
dec
mov
jb
pusha
dec
push
outsb
inc
mov
inc
and
pop
dec
das
clc
push
scas
lret
loop
mov
sub
dec
add
adc
mov
jb
aaa
push
out
das
outsb
mov
dec
cwtl
imul
lods
das
sarb
dec
out
hlt
mov
dec
or
sub
ss
inc
cmp
pusha
outsb
outsb
mov
dec
nop
push
lods
scas
mov
outsb
divb
sub
push
dec
scas
pop
cmp
jl
nop
mov
aaa
mov
dec
ljmp
iret
jnp
mov
inc
dec
bound
xchg
shrb
and
aaa
push
dec
or
call
dec
mov
dec
cwtl
pop
push
call
add
shrb
mov
dec
cwtl
push
js
data16
mov
das
inc
and
push
add
rorb
xchg
jl
insb
cmp
outsb
ds
xor
aaa
push
pop
cs
pop
aaa
fsubrl
enter
mov
cmp
outsb
pop
mov
push
inc
das
in
sub
dec
pushf
jo
loop
jle
insb
cmp
dec
outsb
cmp
dec
or
repnz
loopne
rorb
outsb
mov
push
js
push
outsb
cs
push
in
push
dec
cli
and
outsb
mov
push
subb
outsb
dec
mov
dec
xor
in
or
scas
out
dec
enter
cmpsb
dec
xchg
push
js
push
pop
dec
push
outsb
inc
mov
dec
sub
jecxz
or
scas
call
outsb
mov
stos
dec
lcall
scas
and
sub
stos
out
mov
jbe
pop
cmp
cmp
out
cs
mov
dec
ljmp
lock
push
das
inc
cmp
dec
mov
add
mov
dec
into
cmpsl
daa
dec
mov
cmpsb
inc
das
aas
scas
xor
outsb
cmp
out
lret
scas
fnstsw
cmp
dec
out
outsb
enter
mov
enter
dec
xor
leave
aaa
xor
dec
cs
sub
push
lock
xchg
out
das
subb
ss
sbb
dec
or
scas
out
cmp
dec
into
outsb
ret
dec
scas
mov
stos
mov
dec
clc
outsb
or
dec
ds
pop
scas
outsb
cmp
outsb
sahf
mov
dec
les
out
lock
dec
sbb
push
bound
mov
mov
dec
mov
in
lock
add
mov
ss
dec
ds
pop
scas
jo
orb
mov
push
out
scas
add
push
dec
and
or
pop
dec
push
je
daa
sub
lcall
pop
imul
xchg
xchg
inc
into
jp
add
mov
in
jb
mov
test
outsb
sbb
ret
jge
sub
xchg
jae
xchg
inc
subb
xchg
sub
and
jge
push
push
fs
xchg
mov
jb
pushf
in
leave
inc
test
cwtl
ds
mov
cwtl
pushf
lcall
movsb
in
push
popa
rcll
aas
xchg
repnz
pop
ds
jns
js
mov
xchg
lahf
xchg
xchg
addr16
lret
jns
lods
imul
in
jl
push
lea
daa
imul
pusha
dec
dec
shll
push
mov
dec
sub
cmp
mov
and
xor
js
out
pop
jl
cltd
sar
in
mov
mov
mov
insb
mov
pushw
out
insb
xchg
cwtl
xchg
fnsave
shlb
fidivrl
leave
sbb
cmpsb
cmp
cmc
jmp
insl
lock
push
inc
mov
push
xchg
mov
mov
mov
je
xchg
sub
loopne
jno
push
daa
in
jge
sbb
lahf
sub
cmp
les
mov
mov
mov
xchg
arpl
mov
jp
je
mov
dec
mov
sbb
xchg
xor
aam
jecxz
mov
or
inc
js
adc
mov
sub
cmp
test
adc
outsb
xchg
pop
jecxz
outsb
lods
cmp
mov
pop
jge
outsl
call
inc
cltd
int3
push
out
js
ja
mov
das
stos
mov
mov
jnp
mov
enter
test
loop
fimuls
push
enter
shll
das
rol
dec
xchg
push
repz
mov
mov
clc
loopne
dec
dec
sbb
jp
fcoml
ret
arpl
mov
mov
adc
dec
adc
mov
xor
xchg
jo
inc
insl
mov
mov
cs
ret
dec
fs
push
cmpsl
fmull
adc
xchg
sub
inc
inc
incl
leave
pop
mov
ret
xor
inc
dec
xchg
das
dec
cmp
jae
push
mov
pushf
ljmp
cmp
mov
ja
jo
aas
ret
vmread
sub
lahf
push
nop
xor
out
test
jl
jnp
cltd
and
nop
fstl
pop
dec
mov
sbb
inc
push
loope
dec
dec
dec
push
cmp
jbe
cld
or
dec
jns
add
or
mov
dec
shlb
jg
add
stc
lea
mov
jae
push
jns
call
icebp
test
iret
xchg
scas
jle
pushf
cmp
jle
mov
cmp
pop
inc
iret
xor
lret
das
lret
loop
mov
cmp
dec
test
bound
sub
lds
aas
jmp
sahf
or
mov
repnz
pop
stc
jbe
mov
inc
jb
outsl
cld
xorb
imul
mov
push
pop
push
mov
mov
xchg
mov
push
pushf
add
mov
xor
mov
add
xor
mov
xchg
mov
inc
pushf
xchg
lahf
outsl
xchg
add
push
rorb
xchg
outsl
mov
fidivl
sbb
in
mov
inc
popf
xchg
ret
mov
outsl
adc
inc
mov
pop
cwtl
dec
cmp
lods
mov
xchg
daa
scas
jno
lahf
mov
popf
push
sbb
cwtl
jle
lock
xchg
fwait
dec
fdiv
inc
mov
jno
mov
popf
clc
dec
mov
xchg
outsb
xor
fisubl
into
imul
lret
js
flds
ret
mov
bound
sub
jbe
imul
push
inc
rclb
dec
ds
out
xor
cmp
ret
mov
push
dec
jo
mov
mov
pop
mov
arpl
je
adc
push
imul
add
mov
lret
daa
mov
jg
out
pop
sarb
push
js
std
adc
push
mov
inc
pop
mov
or
mov
xchg
cmp
cmp
sub
fistl
out
int
sub
fsts
mov
mov
incb
mov
sub
jbe
lret
cmp
xor
dec
insb
fdivs
xchg
aaa
and
addr16
lahf
dec
mov
subl
dec
jnp
cmp
mov
in
jno
mov
push
jmp
or
dec
xchg
pop
mov
loop
fmul
mov
or
inc
push
pop
fistpl
inc
pop
addb
mov
xchg
jbe
or
cmp
cwtl
rclb
daa
push
shrb
inc
sti
adc
and
call
fwait
adc
jle
jbe
xchg
pop
lock
aaa
aaa
cs
and
mov
fadds
jp
sub
mov
jo
lret
scas
jp
dec
xor
xchg
daa
jno
jp
ss
outsb
xor
xor
push
lea
sbb
loopne
add
mov
cmp
les
pop
arpl
mov
jp
repnz
inc
mov
mov
outsb
pop
push
sub
std
sub
mov
xchg
mov
sbb
jae
mov
rcr
cmp
mov
jbe
test
mov
sub
test
push
es
imul
iret
push
push
gs
inc
mov
pop
jl
js
dec
scas
scas
jle
or
incb
jae
pop
je
mov
bound
nop
loop
jl
or
jecxz
sub
stos
mov
sarb
ja
das
test
xor
ret
adc
xchg
mov
pop
out
jbe
mov
or
test
les
inc
mov
stos
js
jb
push
inc
mov
cmp
lcall
aaa
mov
hlt
rorb
fsubrs
jo
mov
out
outsb
loopne
cmp
push
mov
xor
inc
push
adc
dec
es
lcall
push
aas
cmp
hlt
std
dec
jnp
outsb
into
pop
or
ja
sub
jl
out
xor
andb
mov
je
inc
jns
inc
mov
lret
dec
inc
mov
cmp
push
loop
movsl
adc
or
adc
outsl
in
fmuls
out
xlat
sub
cli
scas
jbe
add
jb
cwtl
push
push
push
je
pop
jns
dec
mov
jbe
xor
jns
or
xorb
lock
outsb
xchg
dec
dec
xchg
jbe
ficomps
fwait
jno
dec
dec
int3
jae
dec
sbb
ja
outsb
int
pop
and
or
jmp
js
pop
repz
daa
test
ds
sbb
dec
xlat
cwtl
adcl
ret
cmp
out
idivb
sub
dec
call
push
outsl
xlat
mov
scas
dec
imul
xchg
cmp
mov
sbb
outsb
jl
inc
dec
cmp
xor
xor
fsubrp
xor
dec
pop
pop
decl
test
out
scas
dec
xlat
pop
das
dec
or
mov
out
push
mov
inc
mov
ljmp
insl
jb
ljmp
ret
jb
insb
mov
stc
mov
scas
dec
mov
fimull
fs
in
fdivrs
inc
mov
pop
xor
lea
and
xor
pop
cmp
dec
shlb
repnz
xor
mov
dec
test
mov
xchg
jne
pop
pushf
mov
je
push
jns
sub
out
mov
aas
xchg
test
aaa
ficoms
out
cmp
insb
jg
mov
mov
imul
cmc
mov
xchg
mov
push
push
inc
mov
xchg
push
scas
xor
sub
lods
js
ss
js
loope
push
pop
sbb
mov
dec
push
push
inc
mov
xorb
or
pop
rorb
icebp
and
imul
lahf
jle
jl
out
lcall
jle
hlt
ret
out
pop
dec
jns
and
lds
loop
pop
mov
jle
fs
xor
repz
out
call
xchg
clc
adc
testb
lock
mov
mov
clc
xor
add
push
aam
push
push
lods
inc
fwait
in
inc
js
stos
mov
imul
ss
sbb
sub
stos
aaa
cmp
push
xor
add
jnp
pop
mov
or
cmp
jne
out
pop
ss
mov
das
mov
imul
cwtl
and
mov
mov
fsubrs
xor
ljmp
cmp
jo
push
mov
mov
dec
xchg
cli
rcrl
aam
jo
mov
cltd
js
out
stos
lahf
daa
icebp
mov
movsb
int
pop
dec
mov
add
xchg
pop
xchg
dec
inc
in
mov
mov
ss
mov
or
mov
jae
push
call
mov
cmpsl
sahf
and
leave
ret
pop
outsb
out
in
rcr
cwtl
pop
mov
push
or
imul
inc
jo
push
mov
stc
rorl
and
xlat
insb
cmp
divl
lods
dec
daa
cmp
push
push
mov
mov
push
mov
aas
inc
leave
cmp
sbb
mov
ficompl
push
sbbb
and
fwait
dec
cs
jbe
add
into
cli
pop
mov
lock
jo
mov
xchg
loope
jg
adc
and
xor
push
ljmp
cmp
jb
pusha
xchg
push
mov
mov
je
pop
push
dec
or
dec
inc
mov
repnz
jnp
ret
jle
jne
mov
cmp
ss
mov
jno
sbb
mov
mov
in
pusha
mov
insl
jl,pt
mov
shll
inc
xor
shrb
outsb
inc
je
dec
push
cltd
push
or
addr16
shll
dec
or
test
push
mov
mov
adc
and
jl
insb
xchg
mov
arpl
mov
xor
pop
addr16
sahf
adc
je
movsl
dec
lret
cmovo
cmp
adc
mov
and
cltd
xlat
push
outsl
lods
icebp
cmp
push
in
jb
outsb
fisttpll
lcall
push
ljmp
jg
xor
dec
jo
stos
or
orl
bound
cmp
rcrb
jl
fidivl
push
xchg
mov
mov
xchg
into
ja
ljmp
sbbl
mov
sbb
mov
and
inc
inc
adcb
scas
add
pop
jl
sub
into
inc
inc
mov
dec
jl
out
fdivrs
loop
mov
daa
inc
pop
fs
pop
pop
mov
out
stos
sub
pop
sub
lcall
xchg
aaa
out
inc
fimuls
pop
pop
into
push
push
dec
push
aam
dec
mov
scas
addr16
xor
inc
testb
add
ss
daa
test
inc
cltd
stos
xchg
pop
dec
outsb
sahf
sbb
cs
sbbb
add
cs
pop
mov
loop
mov
dec
gs
push
mov
ficoms
aaa
pop
push
push
xchg
dec
sub
sahf
xchg
fidivs
mov
testb
sahf
je
repnz
lock
testb
push
jg
pop
outsb
addr16
mov
dec
xor
add
inc
loop
mov
ss
push
push
pop
jg
inc
out
incb
inc
out
out
add
sbb
xorb
fdivp
adc
inc
sbb
into
jp
sub
mov
rorb
imulb
outsb
inc
add
fcomps
mov
xchg
xchg
imul
push
lret
mov
addr16
scas
cwtl
sub
orb
inc
add
lock
xchg
pop
fisubs
lret
scas
ss
mov
push
ss
inc
outsb
xchg
jp
jle
mov
out
aaa
push
inc
dec
dec
jno
fs
out
xchg
dec
dec
dec
xchg
rcrb
pop
pop
mov
stc
popa
sahf
dec
inc
xchg
mov
inc
fs
pop
push
stos
pushf
xchg
mov
adcl
mov
lea
scas
test
inc
jns
mov
int
mov
mov
outsl
pop
add
mov
inc
push
adc
stos
push
jp
aaa
daa
imulb
dec
enter
pop
cmp
pop
sub
sahf
outsb
ficompl
test
cmp
cmp
outsb
mov
inc
imulb
fisubrl
sahf
jno
mov
inc
sub
out
scas
mov
pop
cmpsl
aad
mov
fwait
pop
lock
push
jb
in
icebp
inc
lock
popf
pop
imul
or
ds
dec
dec
out
scas
xor
bound
cwtl
lret
jbe
into
ss
inc
pop
push
jmp
cmpsl
cwtl
lret
dec
mov
inc
out
or
xor
out
or
xor
inc
sub
push
cmp
sub
jbe
cs
sub
xor
sub
ds
pop
jb
mov
inc
clc
cs
mov
push
clc
cs
xchg
mov
jle,pn
jmp
push
cs
imulb
dec
data16
cs
mov
dec
push
cli
cmp
cs
xchg
or
dec
aaa
scas
divb
push
jle
cld
ds
int3
outsb
sahf
lret
cmpsb
sub
push
mov
insb
std
cmp
pop
out
std
push
mov
push
mov
sub
cmpsb
scas
into
or
cwtl
push
pop
inc
pushl
mov
out
out
push
xchg
add
pop
mov
xchg
mov
out
adc
add
mov
pop
inc
sub
dec
das
push
lret
inc
add
dec
cld
inc
dec
jle
ss
dec
js
cmp
dec
es
jmp
inc
outsb
mov
outsb
push
int
mov
aas
mov
out
lahf
into
jae
inc
cs
push
int3
dec
dec
inc
arpl
sub
sub
fisttpl
jno
dec
leave
push
xchg
fadd
inc
push
sub
daa
outsb
xchg
mov
jbe
pop
push
ss
jp
gs
push
jae
js
imul
mov
movl
inc
arpl
sub
cmp
in
adc
mov
xchg
bound
aad
addl
sub
cs
or
outsb
mov
jbe
mov
or
inc
inc
pop
cmp
mov
mov
jae
enter
cltd
std
repz
pop
jmp
xchg
ljmp
dec
pop
sti
inc
mov
pop
mov
ds
aas
inc
push
add
daa
xchg
scas
imul
xchg
test
sub
push
mov
cs
jnp
scas
adc
mov
jge
push
or
scas
mov
push
sub
dec
sub
ljmp
leave
pop
lret
daa
inc
push
mov
in
cmpsb
lret
hlt
jae
test
mov
daa
and
bound
sub
cmp
push
pop
pop
jo
rcl
leave
and
push
dec
sub
sub
inc
cmp
fsubrs
fs
popf
xor
daa
push
scas
or
add
addl
jo
filds
mov
or
mov
dec
jae
fwait
jecxz
rorb
outsb
adc
leave
cwtl
jnp
push
pop
daa
sub
xor
xor
sub
cs
mov
mov
inc
mov
mov
mov
mov
lret
xchg
ss
js
cs
lret
cmpsl
cmpsl
lds
and
inc
movsb
cmpsb
mov
cwtl
add
lea
cs
fcmovne
push
jmp
fsubrl
xchg
inc
pushf
or
xor
sub
add
cmc
nop
cs
subb
incb
pop
sub
movsb
lcall
test
aas
add
xor
xchg
cltd
add
fidivl
cmp
pop
aas
fdivs
mov
jl
xchg
fiaddl
cs
jb
sub
inc
daa
test
inc
mov
repnz
jbe
and
pop
stos
rcll
fdivs
or
test
lcall
push
cmp
ret
xchg
aas
cwtl
dec
imul
xchg
dec
xchg
or
mov
lahf
in
lea
sub
sub
rorl
mov
fwait
test
dec
jbe
jnp
pushf
sbb
mov
js
mov
scas
insb
addr16
rep
mov
jne
mov
dec
enter
fmuls
mov
daa
xchg
das
mov
outsb
imul
mov
idivb
sbbl
pop
mov
xor
jge
pop
mov
lods
xor
lahf
outsb
mov
jns
jae
push
loopne
mov
jg
jae
xor
test
and
pop
ss
push
xor
ja
pop
lcall
insb
add
mov
fs
mov
lcall
push
popf
mov
push
data16
rcrl
mov
outsb
mov
mov
xchg
xchg
cmp
adc
push
mov
jae
jg
and
jnp
dec
or
xor
loopne
xchg
pop
jno
lahf
mov
jl
test
das
faddl
out
cmp
dec
js
outsl
push
sbb
sahf
sarl
mov
mov
pop
push
ljmp
cltd
loopne
inc
call
ss
lret
mov
addr16
pop
jl
es
dec
fwait
adcb
mov
scas
sahf
jne
lret
sub
mov
jnp
push
sub
data16
mov
mov
mov
cmc
xchg
pop
push
xor
cltd
cld
sub
xor
inc
sbb
adcb
jge
test
mov
outsl
lahf
jb
jg
imul
data16
cs
int3
sub
inc
push
push
test
xchg
xchg
into
inc
sub
mov
adc
rolb
pop
cs
lods
loop
outsb
sub
sub
mov
pop
jl
js
or
sub
jnp
mov
jmp
cmp
xchg
mov
xchg
mov
cli
inc
inc
cmp
sub
das
inc
cmpb
inc
sahf
dec
in
mov
inc
pop
sbb
xor
jo
ja
push
mov
jnp
hlt
idivb
or
push
inc
scas
jle
ss
int3
lcall
dec
inc
dec
cmp
dec
mov
cmp
ss
stc
loope
mov
pop
mov
dec
out
lret
lret
cld
cmp
aas
jo
xchg
cs
lea
xchg
fisubrs
mov
les
mov
xor
inc
sarb
fistps
push
xchg
mov
addr16
fadds
mov
xchg
outsl
mov
adc
stc
xchg
xchg
andb
jb
imul
outsl
inc
push
jns
hlt
insb
xor
insb
sub
mov
inc
jle
inc
dec
cmp
xchg
jp
xlat
call
lcall
push
test
dec
adc
push
inc
lahf
sahf
cmp
loop
jb
mov
out
push
ds
insb
daa
push
mov
rorb
dec
inc
mov
and
leave
addr16
je
imul
rcrl
les
imul
jbe
jne
loopne
je,pt
dec
jl
movsb
cmp
push
pop
js
mov
add
push
jg
xorb
dec
mov
dec
insl
mov
mov
scas
mov
jo
jbe
sbb
cmp
iret
dec
mov
lods
out
xchg
xchg
jb
fadd
or
imul
mov
xchg
cwtl
int
ret
xchg
addr16
mov
lcall
shrl
jns
mov
das
xorb
push
cltd
inc
sti
aad
inc
or
xchg
imul
repz
lods
sarl
add
and
push
xchg
bound
sahf
lock
jns
pusha
pop
cwtl
out
jae
xor
into
cmp
inc
mov
mov
push
icebp
push
sub
cs
mov
ds
jle
ss
xor
push
mov
scas
out
xlat
push
incb
call
movb
inc
sub
push
mov
ret
out
sub
dec
addr16
lea
mov
mov
jns
pushf
jno
orl
ss
jbe
loopne
stos
mov
cmpsb
mov
mov
sbb
sub
jbe
xor
scas
xor
adc
dec
scas
fxch
dec
out
jg,pt
cmp
or
lea
call
ja
pop
cmpsb
sbb
or
imul
into
mov
mov
fdivrs
inc
dec
fs
inc
stos
pop
dec
imul
mov
xchg
imul
cltd
push
jbe
or
lahf
test
mov
out
movsb
jle
push
and
ds
cltd
es
lock
sbb
sub
push
mov
cmp
jge
ds
pop
mov
jae
add
push
testl
xlat
mov
cmp
lds
test
scas
mov
js
pop
out
fdivp
outsl
push
mov
sub
decl
cmp
hlt
scas
lods
ds
push
xor
ljmp
fimuls
mov
adcb
out
push
inc
test
inc
stos
or
push
dec
stos
or
xchg
fisttpl
lret
mov
push
mov
xchg
jle
xor
sub
lret
mov
jns
push
or
sbb
xchg
xchg
and
pushf
sub
push
and
xchg
sbb
int
xchg
cmp
shll
mov
inc
inc
inc
jbe
sub
arpl
ficoml
adc
lea
outsb
divl
cmp
inc
and
push
cmp
adcb
push
adc
xchg
fwait
lock
push
jle
test
mov
sub
adc
ss
lret
jne
leave
cli
repz
ds
pop
js
lret
data16
imul
xor
xchg
xchg
test
mov
inc
aad
lea
mov
sahf
xor
imul
jno
scas
adc
jno
mov
or
addr16
mov
sbbl
adc
xchg
popf
mov
call
aam
out
push
jns
jb
addr16
dec
outsb
jae
loope
and
loope
pop
js
mov
xor
pop
rcrb
dec
mov
adc
mov
pop
inc
push
pushf
jge
xor
in
jnp
js
outsl
ds
jg
mov
push
and
push
cmp
dec
fs
mov
dec
mov
dec
popa
xchg
dec
movsb
int
imul
inc
adc
push
in
sbb
movsb
insl
jge
rcrl
mull
push
jmp
adc
je
cli
fndisi(8087
out
push
xor
sbbl
nop
sbbl
xor
dec
xchg
lahf
imul
xor
mov
stos
push
push
ss
leave
mov
lock
imul
xchg
mov
jecxz
dec
shll
icebp
xor
cmp
shll
leave
sub
lds
in
pop
testb
xchg
jp
lds
mov
rolb
stos
add
push
loope
aas
outsl
push
xchg
dec
mov
imul
sub
push
mov
imul
sahf
dec
fwait
xchg
repz
dec
cmp
outsl
cmp
mov
subb
sahf
push
push
imul
xchg
sti
mov
xchg
xchg
js
cmp
popf
adc
sub
inc
push
xor
ds
int3
push
push
cwtl
pop
dec
lcall
mov
into
int3
jecxz
and
dec
jnp
jp
ss
cmp
or
dec
push
push
sub
out
jns
outsb
imul
test
in
and
leave
xor
push
outsl
je
and
inc
cmp
loop
sbb
inc
push
jae
mov
push
dec
pop
and
sub
jns
mov
add
dec
push
xor
cmc
repnz
aas
mov
js
push
mov
imul
push
pop
pop
das
pop
dec
pop
outsb
pop
lret
iret
inc
pop
add
cwtl
mov
ljmp
daa
fidivrs
out
das
inc
cmpsl
dec
jle
dec
cmp
dec
push
jge
outsl
sub
jns
mov
ds
sub
pop
hlt
ljmpw
adc
xchg
cmc
ds
dec
inc
sbb
ds
mov
mov
pop
push
gs
clc
or
pop
xchg
inc
xor
jg
add
jle
fcmovne
jecxz
insl
jno
dec
aaa
fisubrs
out
scas
and
pop
push
aaa
ds
push
push
aaa
cmp
mov
dec
testl
mov
sahf
hlt
dec
fisubrs
jne
aaa
mov
imul
outsb
mov
mov
push
inc
scas
push
leave
ss
mov
pop
push
pop
insl
sub
repnz
cmp
pop
pop
imul
mov
mov
pop
push
sub
push
aaa
lea
cmpsl
aaa
js
jle
jbe
sahf
iret
jbe,pt
int3
outsb
push
sahf
pop
dec
xchg
mov
out
scas
jb
aaa
sahf
scas
add
mov
cltd
sub
and
div
ret
or
jae
cmp
lods
mov
sub
inc
or
cli
fldenv
test
hlt
push
mov
xchg
sub
sub
add
repnz
sub
fldenv
icebp
cs
mov
orl
mov
mov
pusha
shrb
xor
dec
push
ds
in
iret
xchg
test
mov
aas
jbe
out
cmp
mov
cmpsl
inc
sub
sub
cs
xor
jle
xor
in
cmpsl
mov
mov
xor
push
lcall
outsb
inc
mov
sbb
sub
push
inc
scas
dec
cmp
and
jb
adc
lahf
scas
add
mov
mov
dec
and
cmp
push
sub
sub
cmp
cmp
pop
cmp
lcall
ljmp
aaa
scas
cmp
sub
inc
pop
pop
jb
addr16
imul
lock
mov
xchg
mov
mov
inc
insl
cwtl
dec
sub
mov
mov
stos
jb
mov
dec
cmp
mov
lret
insl
int
ffree
mov
or
mov
lret
cwtl
ljmp
jae
out
outsb
xchg
cltd
fsubrl
push
pop
pop
jne
pop
cmpsl
mov
inc
push
popa
scas
cmpb
dec
mov
sbb
aaa
pop
adcl
and
daa
adc
or
push
pop
pop
xchg
inc
jo
in
or
inc
xchg
mov
sub
push
jbe
daa
sub
sub
xor
sub
xor
mov
pusha
mov
cwtl
xorb
sbb
aas
pop
cmp
mov
sub
mov
sub
mov
aas
push
inc
pop
sub
data16
aaa
xor
xchg
ss
scas
cmp
dec
outsb
sahf
mov
dec
lahf
push
mov
ljmp
dec
push
outsb
scas
mov
mov
mov
xor
stos
pusha
sahf
clc
sahf
pop
mov
xor
outsb
xor
xor
push
cmp
in
inc
scas
in
pop
aaa
push
jbe
cmp
mov
test
arpl
mov
aaa
mov
out
dec
mov
push
scas
lock
xor
testb
divl
jle
data16
xchg
scas
cmp
mov
dec
fisubrs
imulb
cmp
jecxz
aas
cmp
cmp
outsb
dec
mov
sahf
aaa
inc
sub
outsb
into
mov
dec
out
inc
scas
inc
cmp
dec
inc
push
xor
push
mov
dec
mov
jbe
sahf
es
es
mov
fsts
scas
push
mov
mov
ds
out
push
push
scas
inc
cmp
dec
inc
push
xor
inc
mov
dec
inc
push
inc
scas
jle
push
dec
xchg
outsb
gs
dec
addr16
cwtl
data16
scas
cltd
cmp
dec
sahf
outsb
push
mov
xchg
data16
scas
ds
insb
sub
push
dec
insl
outsb
outsb
loopne
xchg
jo
mov
jno
into
push
out
jae
decb
outsb
push
mov
ss
ja
pop
cmp
jbe
jns
mov
and
jnp
mov
dec
jge
out
jle
push
cmp
push
outsb
add
xchg
dec
scas
cmpb
dec
subl
test
push
scas
scas
xchg
dec
xchg
mov
dec
imulb
push
scas
mov
mov
dec
nop
push
xchg
scas
outsb
cmp
mov
dec
xchg
push
xchg
scas
into
cmp
mov
dec
cltd
push
lcall
inc
dec
pushf
outsb
pop
mov
dec
jbe
sahf
mov
mov
scas
mov
outsb
push
mov
dec
push
inc
or
inc
cmp
sub
data16
fsubrs
sub
fldcw
mov
dec
scas
lds
aaa
push
fidivs
outsb
jbe
push
idivb
cmpsb
in
push
aaa
imul
outsb
nop
mov
dec
xchg
push
xchg
scas
xchg
lods
dec
sahf
jl
outsb
dec
mov
jb
aaa
ljmp
outsb
add
cmp
inc
scas
add
pop
dec
or
mov
dec
mov
daa
and
mov
mov
shrb
sub
cmp
stos
pusha
inc
pop
push
xor
cs
ds
pop
sbb
mov
and
inc
scas
pop
mov
imul
sbb
inc
mov
and
imul
or
inc
jle
mov
scas
sbb
fisubrs
lods
or
gs
push
push
cs
ljmp
xor
jle
mov
sahf
and
inc
into
pop
fidivs
xor
push
pop
cs
xor
dec
sbb
mov
and
or
scas
xor
into
sbb
inc
in
sbb
inc
mov
and
lods
or
inc
inc
ss
or
inc
outsb
pop
jle
out
mov
mov
and
lods
or
movsb
lods
or
gs
push
pop
push
xor
inc
ds
dec
xor
outsb
sbb
mov
and
inc
mov
fisubs
imul
cs
mov
inc
mov
and
or
inc
mov
sahf
xor
mov
fisubs
and
and
lods
or
gs
push
lods
or
inc
pop
pop
outsb
xor
mov
sahf
inc
mov
and
inc
fisubs
sbb
pop
push
xor
cs
pop
ds
pop
sbb
mov
and
inc
scas
pop
mov
imul
sbb
inc
mov
and
imul
and
or
inc
jle
mov
scas
sbb
fisubrs
lods
or
gs
push
push
cs
lods
ljmp
add
xor
movsb
sbb
cmpsb
iret
out
inc
pop
movsb
mov
out
rcl
ss
jle
mov
out
push
cs
mov
jbe
push
data16
scas
mov
xor
imulb
ret
mov
dec
ret
mov
pop
push
andl
fldenv
cmp
ss
xor
fsubrp
daa
inc
sub
cli
lock
pop
lret
test
xor
sub
pusha
js
stos
mov
xor
push
test
data16
daa
lods
cmpsb
stos
jbe
push
mov
mov
pop
mov
gs
int3
call
mov
sub
insl
jl
loop
mov
mov
or
stos
jmp
push
shlb
cmp
sub
sub
mov
push
pop
mov
cld
pop
bound
inc
lret
xorb
pop
dec
cmp
mov
jbe
cmp
aas
dec
inc
js
inc
cmp
inc
mov
mov
mov
inc
mov
sbb
outsb
sub
cmpsb
pop
jns
push
in
stos
jae
push
sub
sub
xchg
mov
pop
or
xchg
pop
and
inc
daa
xchg
outsb
cmpsl
js
ss
bound
push
mov
sub
push
ss
outsw
lods
scas
xor
pushf
data16
inc
cwtl
xchg
adcl
mov
xor
loop
test
xchg
imulb
sahf
mov
cmpsl
xchg
push
cmp
sbb
cmp
mov
fs
ss
sub
ds
sub
push
out
ss
dec
or
leave
pop
inc
sbb
stos
inc
into
xor
js
jp
cmpsb
pushf
lods
fiadds
jg
push
enter
sub
dec
stos
ss
cs
push
mov
call
mov
outsb
lds
je
mov
xor
ss
sub
in
js
jbe
xor
xor
cmpsb
sub
cmp
into
push
sub
inc
inc
mov
js
inc
ljmp
out
xchg
insb
imul
ljmp
dec
jo
daa
stos
jle
aaa
test
dec
mov
push
sub
mov
js
ss
jb
push
ss
pushf
jbe
addb
testb
cmp
push
out
mov
lret
pop
mov
fwait
call
xor
data16
mov
aas
push
mov
call
mov
and
data16
scas
scas
lods
bound
bound
xor
call
inc
outsb
popf
inc
jo
jmp
les
stos
ror
push
sahf
mov
lods
jbe,pn
cmp
push
xlat
loop
sub
mov
out
jae
ss
or
or
pop
ljmp
outsb
loopne
inc
mov
jmp
mov
sub
adc
jg
mov
shll
cmpsl
cmp
ss
and
mov
push
push
mov
mov
sbb
push
stos
fdivs
out
fnstenv
mov
mov
add
push
inc
mov
push
xchg
int3
mov
mov
divb
xor
mov
jle
add
and
jg
dec
push
imul
jbe
xchg
push
aad
dec
test
add
bound
aas
cmp
xchg
dec
mov
jg
cmp
or
pop
mov
sar
push
je
loop
or
ret
mov
inc
inc
mov
xor
jns
cwtl
pop
mov
mov
cmp
lcall
jp
loope
mov
arpl
jg
mov
sub
scas
inc
imul
aas
push
addr16
mov
pop
xchg
inc
mov
fsubs
adc
dec
pusha
or
enter
xchg
dec
dec
and
cmpb
sti
ss
xchg
mov
lea
xor
ljmp
and
out
fcomp
mov
mov
push
aam
adcl
outsb
mov
cwtl
test
xor
test
imul
mov
mov
adc
sarb
clc
int3
xchg
jae
mov
xchg
cli
cmp
ret
mov
sbb
lock
cmpsl
inc
push
or
movsb
mov
enter
fimull
cmpsb
lahf
xor
fcoms
ljmp
mov
mov
mov
mov
dec
fisubl
cmp
mov
dec
rcrb
mov
dec
push
imul
push
dec
lcall
mov
and
scas
pop
and
je
sub
call
jp
outsl
cmp
push
mov
fidivrs
add
mov
mov
add
pop
ljmp
lea
fcmovne
arpl
popa
or
faddl
jle
adcb
ret
shlb
or
fidivrl
lcall
push
int
cmp
mov
scas
mov
movsb
mov
mov
lahf
loopne
xchg
mov
mov
int
mov
mov
mov
ja
xorb
mov
loopne
sub
dec
xchg
mov
mov
aas
push
xchg
addl
cmpl
fistl
mov
jne
xchg
pop
fiadds
xor
pop
sub
loop
lret
push
dec
xchg
or
jle
lcall
insl
mov
push
lock
rcll
int3
cli
je
inc
daa
mov
sub
ss
xor
xchg
rolb
aaa
dec
pop
inc
das
iretw
inc
xchg
ret
jns
data16
mov
out
sub
xor
xor
sub
jmp
push
scas
mov
sbb
and
inc
sub
lods
ss
in
lods
and
ja
andl
dec
push
jne
fisttps
lret
out
pop
add
in
mov
daa
pop
int
sub
mov
jo
add
add
shl
push
sub
xchg
leave
repnz
cmp
jbe
adc
outsl
cmp
dec
shrb
cs
inc
jle
mov
inc
imul
lds
repz
xchg
push
push
lock
dec
mov
jbe
and
add
jbe
push
lahf
push
cwtl
ret
jg
jb
iret
fistpll
shl
mov
mov
cwtl
pop
add
pop
cmpsl
push
push
jo
iret
mov
jl
bound
mov
sahf
stc
rorl
shll
and
das
and
push
inc
sbb
inc
sbb
xor
or
xchg
inc
movsl
push
clc
mov
mov
push
inc
sub
dec
testb
mov
or
sbb
push
sahf
enter
mov
sahf
add
xor
sub
cwtl
pop
mov
daa
and
out
and
daa
in
mov
mov
xchg
jecxz
sbb
cmc
in
adc
cs
sub
insb
daa
dec
lods
and
testb
stos
mov
lock
push
jl
sub
popa
pop
mov
push
cmp
or
rolb
jg
push
and
mov
mov
xor
lcall
sub
dec
mov
mov
mov
out
lock
jne
mov
dec
mov
lcall
hlt
dec
jae
add
inc
orl
xor
aad
mov
xchg
xchg
loope
lea
sub
mov
mov
pushf
fdivp
mov
jnp
adc
cmp
xor
xlat
xchg
pop
mov
stos
test
push
mov
mov
jbe
aaa
js
orl
bound
out
cmpb
dec
out
fidivl
dec
or
pop
icebp
inc
mov
das
and
push
imulb
or
xchg
add
mov
add
test
mov
data16
addb
rep
ss
push
cmp
push
aam
imul
cmp
push
mov
and
pop
cmp
sub
xlat
xchg
mov
test
testb
pusha
adc
mov
cmpsb
gs
jl
pop
lcall
ss
sbb
jno
mov
adc
lods
mov
ss
adc
inc
lods
sub
aaa
bound
jbe
sub
gs
dec
pop
jns
jg
aam
mov
lea
add
add
lcall
fcmovne
and
lcall
jns
daa
adc
adc
inc
lea
xor
mov
out
cltd
push
and
test
aad
mov
sbb
lcall
repz
sbb
xor
adc
pop
sub
mov
dec
push
mov
repnz
jmp
ss
sahf
lods
jne
scas
sbb
sub
bound
sbb
stos
or
mov
stos
ss
add
lret
aaa
daa
data16
or
stos
ss
inc
push
adcl
sbb
daa
fisubrs
jns
push
inc
shrl
mov
push
push
mov
and
lret
outsb
xor
roll
fdivl
mov
xchg
lods
mov
push
orb
sbb
imul
out
push
cld
xchg
push
xchg
cs
cmp
add
dec
lahf
xchg
gs
comiss
test
mov
mov
xchg
mov
or
iret
pop
dec
mov
cmc
mov
push
outsb
ret
xchg
imul
sbb
push
cld
je
ljmp
jmp
lods
popf
dec
lea
in
movsl
into
pop
cmp
push
mov
mov
adc
push
loopne
xor
mov
mov
cmpsb
js
ss
xor
out
xor
sahf
jns
ds
xlat
add
stos
xor
andb
sub
push
mov
pop
rorb
push
test
sahf
lods
xor
movsl
cmc
movsl
cmp
jb
pop
mov
mov
in
push
fsubrl
ss
stc
aaa
or
addr16
mov
int3
outsl
imulb
add
sub
push
rclb
lods
cs
sahf
fildl
test
dec
mov
or
cmpsb
xchg
mov
cmpsb
inc
lahf
shlb
pop
rcr
pop
xchg
cmpsb
jmp
leave
test
mov
mov
and
arpl
xor
fsubr
jbe
lahf
aaa
add
inc
cs
inc
repz
gs
scas
mov
daa
mov
sbb
jecxz
or
andl
stos
je
xor
jae
outsl
repz
stc
pop
pop
js
jb
jno
outsl
je
xor
call
dec
mov
stos
daa
push
imul
and
pusha
pop
push
mov
cmpb
mov
aad
out
add
jl
sbb
js
ss
inc
aaa
es
cld
push
adc
shlb
testb
pop
jle
xlat
mov
adc
gs
mov
sti
stos
sbb
sbb
mov
xchg
sub
gs
mov
leave
xchg
jp
leave
cmpsb
data16
scas
lods
roll
ljmp
stos
gs
jno
shrb
or
daa
adc
movsb
jno
fdivs
int
cmp
fisubrs
jg
xchg
cmp
data16
pop
xchg
xsaveopt
sub
imul
sbb
jp
daa
jb
jbe
aaa
dec
pop
cli
ss
dec
mov
pop
ds
jnp
outsb
cmp
sub
and
push
daa
push
dec
push
test
sub
daa
clc
ljmp
jb
jge
cmp
test
jo
sub
insb
outsb
xchg
mov
aaa
movsl
cmpsb
mov
movsb
pop
ss
repnz
push
xchg
loop
stos
movq
jb
push
lret
xor
and
xor
sub
fimull
ss
daa
xorb
out
movsl
cmp
xor
mov
sub
mov
hlt
add
add
das
sub
outsb
add
inc
shrl
cs
dec
cs
dec
das
jne
out
cmp
jp
inc
xor
inc
bound
push
mov
and
lret
sub
aas
sub
mov
shrb
xor
dec
das
inc
xor
outsb
fisubrs
lret
and
push
cmpsb
sub
shrl
cs
cld
cs
sti
das
je
dec
mov
addl
push
shrb
mov
das
ljmp
inc
push
pop
js
or
jae
xchg
inc
xchg
pop
dec
out
call
enter
mov
pop
into
test
jl
lods
xor
pop
dec
pop
jle
pop
inc
stos
push
sbb
mov
outsl
sub
inc
data16
sbb
dec
mov
push
and
adc
xchg
sub
sub
pop
sub
outsb
sub
pop
lods
inc
dec
das
cmp
lea
cmpsb
sub
scas
add
push
push
in
lret
sub
data16
daa
mov
imul
lret
sub
xorb
aas
sub
pop
pop
dec
pushw
sub
daa
sbb
data16
data16
mov
das
sub
das
lcall
stos
sbb
mov
pop
jne
jge
mov
cmp
lds
inc
daa
pop
sub
dec
adcb
cmp
dec
shrb
cli
in
jl
sub
cmp
out
in
cmpsb
repnz
sub
dec
jg
xchg
mov
sbb
xor
pop
lds
inc
cmp
pop
or
xor
outsb
stos
and
add
sbb
lods
mov
xchg
lds
mov
pop
push
repz
sub
inc
movsb
mov
xchg
hlt
aaa
sub
xchg
arpl
push
xor
mov
stos
xchg
push
push
sti
mov
movsb
pop
jge
add
sti
mov
notb
pop
sub
in
pop
jl
xchg
rorb
jl
xchg
int
inc
pop
cld
xor
push
xor
sub
test
pop
xchg
scas
mov
insl
inc
std
mov
cltd
dec
add
inc
ret
cwtl
cltd
cmpsb
xchg
mov
outsl
mov
push
sahf
lods
and
roll
mov
xchg
jnp
push
stos
xchg
outsb
mov
mov
pop
jp
imul
add
mov
mov
lods
push
lods
js
jp
xor
or
neg
scas
pop
in
sub
mov
cmpsb
sub
pushf
pusha
and
cwtl
arpl
imul
cmpsb
lcall
cmpsw
aam
inc
sub
popf
fstl
pop
lcall
sbb
test
cs
mov
mov
mov
sub
idivl
xchg
xor
xor
xor
push
lods
and
pop
jae
scas
xor
mov
pop
out
stos
les
mov
xchg
roll
xor
sbb
in
cmp
iret
lret
and
xor
or
fsubrl
mov
mov
mov
outsb
jb
sti
mov
pop
cmp
js
stos
pusha
cmp
xor
addb
sub
lods
xor
and
mov
sub
cmp
xor
inc
lods
outsl
cmp
jo
push
push
mov
xor
push
int3
cmp
lea
sub
lahf
mov
pop
mov
xchg
pop
nop
lea
cmpsl
test
sub
fnstcw
sub
dec
push
popa
js
add
push
loop
popa
into
add
orb
mov
aam
cmpsl
cmp
mov
cmp
and
pushf
shr
scas
fcoml
push
mov
add
inc
lds
ss
jp
repz
sbb
mov
pop
mov
xchg
dec
js
insb
cmpsl
int3
add
lret
rep
adc
adc
mov
push
xor
je
xor
dec
mov
cmp
les
lods
lods
dec
into
jns
test
or
mov
ds
cs
dec
inc
icebp
sub
sbb
and
push
sub
cltd
xchg
mov
leave
pushf
test
lods
pop
dec
sub
sahf
sub
scas
pop
cwtl
mov
push
or
idivb
vminss
add
mov
or
rclb
dec
loope
gs
mov
sub
mov
pop
xor
aad
sbb
xor
outsb
xchg
xchg
sbb
mov
sub
or
mov
mov
ja
cmp
xchg
pop
ljmp
mov
push
enter
ret
cmp
aaa
enter
push
shll
data16
stc
pop
mov
dec
scas
mov
cmp
call
dec
inc
sub
test
pop
lds
cmp
sub
mov
xor
push
ss
ss
push
das
xor
sub
push
mov
ss
and
mov
mov
xor
scas
das
ret
sbbl
inc
repz
cmp
fsubrs
push
push
mov
insl
sahf
sbb
xor
lret
mov
sub
xor
xchg
sub
aas
sub
lahf
mov
cs
cwtl
cs
sub
rcrb
psubb
shrb
mov
mov
cs
xchg
sub
aaa
xor
lea
scas
jne
shlb
cwtl
and
push
dec
push
push
xor
test
sub
fnstcw
lea
xchg
je
cmpsb
inc
xchg
mov
push
das
scas
pop
js
xor
sbb
push
test
sub
in
xchg
cs
cmpsb
push
sub
sarl
inc
lret
cltd
lods
das
sbb
cmpsl
cs
pop
ss
scas
xor
outsb
out
lods
mov
xor
mov
out
shrl
mov
mov
in
sub
jbe
mov
xchg
mov
xor
inc
ljmp
cmp
or
mov
jge
lods
push
jne
dec
lcall
loopne
xor
test
aam
lret
imull
sub
cmp
loop
cmp
mov
xor
in
inc
shll
or
mov
dec
or
or
fcompl
das
push
lcall
jnp
push
stos
cmpsb
xor
and
sub
dec
push
or
pop
andl
dec
sub
inc
scas
mov
xor
out
sub
push
cmp
dec
int3
lret
sub
jle
lock
ret
push
enter
push
idivb
mov
enter
les
sbb
aam
sbbb
xor
dec
mov
xor
inc
imul
inc
mov
xor
das
ficoml
repnz
aaa
jb
xchg
add
data16
insl
push
push
mov
clc
mov
pop
enter
outsb
and
dec
push
mov
add
divb
push
mov
lods
mov
mov
inc
sub
pop
mov
jle
aaa
in
push
xor
pop
push
lcall
mov
xor
mov
sahf
jb
adc
xor
dec
mov
pop
pop
xchg
mov
mov
sbb
and
dec
dec
inc
sub
mov
shlb
arpl
fs
mov
in
in
sub
lcall
adc
push
xor
push
mov
and
add
lcall
mov
pop
xchg
cs
mov
dec
pop
jnp
jae
movsl
ffreep
sahf
lret
cmp
xor
clc
lret
jns
xlat
adc
rcll
out
xor
jae
dec
pusha
outsl
sbb
divb
js
jl
push
les
xor
inc
inc
or
lret
mov
jbe
shr
mov
inc
or
enter
mov
sub
mov
and
jo
es
ljmp
les
cmp
into
xor
ret
push
lcall
inc
in
push
and
mov
or
dec
push
mov
aas
pop
sbb
outsb
stc
dec
cs
test
push
aaa
ret
das
jne
cmp
sub
push
sub
sub
in
mov
int3
movsb
sar
imul
xor
or
mov
mov
sub
cwtl
xchg
mov
loop
mov
xor
cmp
shll
xor
sub
inc
mov
or
outsb
mov
dec
shlb
sub
dec
adc
jle
in
scas
push
decb
dec
mov
jae
jnp
push
xchg
sub
sub
push
enter
dec
sarb
cmp
aaa
mov
movsb
pop
add
mov
cmp
insl
cs
stos
cwtl
out
xor
or
loope
sub
xor
leave
rcrb
mov
xacquire
inc
ds
xchg
cmpsb
pop
jp
call
or
xchg
divl
xor
cli
mov
or
xchg
cmp
nop
inc
jg
pop
cs
xor
mov
xchg
into
xor
xor
cmp
lods
jb
lock
inc
adc
aaa
inc
fcoml
mov
xchg
inc
jb,pt
icebp
in
dec
ja
lret
adc
inc
fimull
xchg
dec
sti
shl
jbe
xchg
fnsave
into
fwait
add
fisttpll
xchg
xor
pop
cs
fdivp
in
arpl
sub
mov
popa
pop
xor
mov
cmp
cs
jne
addr16
sub
dec
loopne
cwtl
into
push
pop
cmp
cs
outsl
test
xor
adc
xor
lods
xchg
sahf
in
cmp
adc
mov
push
lcall
sub
xor
data16
rorl
ss
int3
fdivr
push
into
shlb
cs
pop
fistpll
jg
jle
outsb
sub
in
push
xchg
pop
mov
or
enter
mov
cmpsb
cmp
fsubrs
jle
cmp
and
iret
sub
jae
inc
sbb
mov
jns
into
enter
sub
movsl
xor
clc
push
loopne
call
pop
xor
out
call
sub
in
sti
in
xor
sbb
movsb
movl
xchg
loopne
xor
shr
dec
cmp
test
cmp
jl
mov
adc
mov
cmp
mov
sub
add
jnp
icebp
mov
je
scas
ds
lock
faddl
js
ret
cmp
jae
call
ficoms
subb
push
fidivrl
lcall
cmp
sbb
xor
hlt
inc
clc
sub
subb
xor
mov
divb
and
ss
iret
enter
out
push
bound
into
push
les
sub
mov
mov
dec
cld
xor
push
xchg
fdivrl
cli
fidivrl
pushl
mov
fisubs
xor
data16
inc
sbb
stos
xor
sbb
inc
iret
lock
mov
into
jbe
lret
stc
xchg
dec
lcall
push
test
adc
mov
fisubl
dec
jp
subb
subl
in
push
pop
outsl
xor
lock
test
jns
sub
lcall
icebp
mov
push
push
push
inc
jle
sub
add
insb
push
mov
dec
inc
cmc
or
mov
insl
inc
jl
and
dec
pop
sahf
pushl
mov
int3
sub
xchg
or
jbe
xor
fwait
clc
aas
std
loopne
aas
fsubrl
sub
ret
sbb
cmp
mov
addb
inc
and
xor
pop
cli
repz
mov
jge
mov
jno
in
test
jb
xchg
xor
outsl
insl
aaa
in
jne
test
ret
sar
dec
pop
cmp
push
int3
push
bnd
jbe
nop
repnz
sub
sub
dec
dec
xchg
cmp
loope
nop
mov
jl
lcall
pop
mov
add
push
mov
shlb
lret
jl
mov
cmp
push
and
jl
push
fidivl
jp
lcall
xchg
mov
xchg
mov
add
sub
lret
push
shll
test
mov
jle
and
insb
lahf
adc
lods
mov
or
call
int3
dec
xor
push
jne
out
aam
jb
mov
pop
cmpsb
jle
lretw
nop
push
in
xor
pop
lret
out
aaa
out
cs
lret
enter
sahf
dec
sbb
inc
or
mov
sbb
add
push
xchg
jo
int3
pusha
ja
pop
adc
push
mov
sub
outsb
xchg
jecxz
pop
popa
xor
cmpsb
dec
xor
jne
test
dec
xchg
cmp
xor
lock
fwait
dec
and
sbb
xchg
mov
and
mov
sbb
lods
cmp
and
imul
clc
xor
filds
push
lods
inc
xor
into
push
adc
xor
clc
lahf
cmp
lea
jle
dec
sbb
cmp
cmp
inc
movsl
inc
or
pushf
clc
sbb
popa
addr16
mov
stc
jns
mov
sub
cs
dec
clc
and
sub
mov
push
jl
cmpsb
cmp
mov
jge
mov
cs
xchg
cmp
out
in
jbe
cmp
test
dec
cmp
cmp
iret
test
cmp
lock
int
lret
adc
shlb
mov
sub
arpl
cmp
mov
nop
out
mull
dec
lcall
mulb
out
into
push
and
popa
xlat
sub
stos
pop
cmc
das
mov
arpl
add
ja
mov
mov
bound
cmp
pop
xor
rcrb
push
xor
das
stos
rcrl
mov
jmp
fs
dec
mov
out
test
insl
mov
enter
inc
lcall
xlat
adc
out
jo
lcall
mov
mov
jo
jbe
jbe
mov
insb
mov
ljmp
xor
dec
jo
loopne
push
fcmove
pushf
insb
pop
push
repnz
xorb
adc
sbb
aam
out
fdivs
dec
inc
inc
cmp
xor
ss
xchg
mov
mov
push
fidivrl
outsb
ds
jecxz
cltd
test
mov
das
mov
ret
xchg
sbb
stos
dec
adc
aad
lock
insb
pusha
insb
xchg
jecxz
in
into
fmull
dec
imul
jno
jp
mov
mov
int
jp
inc
outsb
sbb
inc
repnz
dec
mov
fst
adc
jp
sbb
mov
jne
sbb
js
int3
pop
js
cmp
push
add
sub
xor
cli
sbb
dec
shrl
xor
clc
insb
into
lret
jbe
je
or
jae
or
leave
and
xor
inc
xchg
in
mov
dec
mov
sarb
dec
clc
into
in
sub
jl
dec
dec
call
xchg
lock
inc
push
movsb
pop
pushf
jne
cmp
xor
adc
hlt
sahf
aaa
pop
adc
pop
xchg
dec
sahf
test
lock
insl
mov
xorb
cmp
xor
loope
sub
sbb
dec
ss
fmull
cld
and
xor
dec
dec
mov
outsl
dec
xor
push
loope
push
xor
sub
add
dec
dec
mov
js
lret
jne
fdivl
outsl
stos
fs
js,pn
outsl
sub
xor
pop
ficoml
movsl
outsl
push
push
ss
test
xor
ljmp
cld
lahf
js
or
and
arpl
stos
addr16
push
aad
cwtl
pop
mov
jb
test
aas
cs
dec
pop
cmp
lods
cltd
movsl
mov
data16
insb
imull
xor
insl
movsb
mul
rolb
dec
push
jecxz
xor
movsb
int
int3
cli
xchg
cmp
dec
mov
xchg
dec
movsb
inc
dec
cmp
sbb
mov
cmpsb
xor
test
testl
sub
cmp
add
mov
mov
cmp
mov
lock
ss
sub
jl
jns
cli
cwtl
ret
js
outsl
xchg
jmp
repz
pop
sub
sub
xor
loope
shl
fisttpll
daa
into
push
lret
loopne
pop
and
aad
pushf
insl
dec
add
dec
xchg
push
mov
pop
jae
imul
sub
cmp
imul
or
ja
mov
sbb
mov
xor
inc
rcl
sbb
sbb
int3
int3
mov
jbe
push
aad
ficoml
decb
mov
jp
xor
cmpsb
int
cmp
push
ja
rclb
mov
cmp
dec
pop
push
push
out
mov
je
pop
movsl
out
outsb
je
orl
mov
iret
hlt
dec
in
mov
jge
into
pusha
shr
sbb
je
pop
ss
sbb
push
jb
xor
cltd
les
repnz
xchg
xchg
aaa
ds
cli
xchg
shlb
aam
jg
imul
stc
xor
loop
int
je
std
adc
int
cwtl
sub
inc
dec
int3
lock
dec
cmpsb
add
nop
cwtl
sub
sub
cmp
fcmove
push
outsl
loop
push
add
int
shlb
push
jbe
sbb
lcall
sub
mov
mov
mov
cld
adc
addr16
shr
ljmp
cmp
cld
adc
cwtl
sarl
jbe
dec
js
and
daa
push
dec
jl
jp
and
sub
or
pop
aas
xchg
fwait
xchg
dec
jbe
das
sub
mov
jns
jne
pop
push
xor
mov
ja
ret
andb
push
pop
sub
mov
push
mov
mov
push
pop
scas
push
inc
mov
pop
mov
das
sbb
cmpsl
loop
das
inc
sub
push
jb
pop
cmp
add
ss
pop
and
mov
das
cs
push
inc
jp
push
inc
data16
xor
rorb
xor
lcall
sub
dec
mov
push
data16
mov
cmp
out
dec
cmp
scas
outsb
adc
ss
push
push
cmp
scas
xor
dec
pop
ds
xorb
dec
mov
push
inc
mov
sbb
jle
sub
dec
inc
inc
sub
inc
aaa
cmp
push
data16
lret
inc
cmpsl
xchg
cmp
dec
pop
inc
sub
dec
aaa
ljmp
push
jp
dec
fisubrs
cmp
dec
outsb
dec
sub
push
dec
cs
movb
push
repnz
push
push
cmpsl
mov
push
sub
push
push
cs
scas
cmp
inc
adc
ljmp
sub
or
popa
sub
cmp
jle
xor
push
imul
xchg
or
sub
cs
mov
into
xchg
daa
push
lods
leave
inc
out
and
jle
fisubrs
into
ret
test
or
jae
pop
sahf
fucomi
es
js
clc
cli
mov
sub
inc
dec
bound
push
ss
nop
daa
jb
enter
shl
jecxz
ret
cmp
mov
inc
sub
outsb
inc
jb
mov
xchg
shrb
insb
out
test
xchg
xchg
and
ss
mov
enter
sahf
out
scas
sets
hlt
pop
sub
insb
xchg
dec
sub
jle
out
data16
adc
pop
mov
stos
mov
aaa
ja
sub
mov
pop
ds
cmp
push
mov
out
mov
test
pop
das
mov
xchg
cmp
gs
mov
call
mov
push
cs
ds
sub
mov
xor
test
out
push
or
push
pop
inc
pusha
push
stos
mov
push
inc
jbe
push
popf
addr16
stc
lret
xor
or
lock
mov
mov
mov
daa
mov
cli
push
dec
inc
mov
lcall
sub
movb
ja
jns
orb
jns
aaa
cmpsl
out
mov
xor
mov
push
inc
btr
iret
scas
imul
cs
dec
mov
jne
cmpsb
xor
ljmp
dec
rorb
dec
sub
wrmsr
jl
cmp
push
cmpsb
mov
sub
bound
mov
push
and
dec
cmp
mov
mov
jle
mov
push
out
cmp
xchg
mov
pop
jb
mov
int
jnp
cmp
ret
inc
ljmp
aaa
mov
stos
pop
dec
cmp
lock
xor
lret
out
jne
sbb
into
scas
mov
repz
xchg
cs
dec
dec
xchg
cmp
dec
data16
xor
push
cmpsb
ss
jl,pn
pop
out
dec
dec
cmp
push
pop
xchg
loope
fisttps
gs
movsl
mov
pop
mov
mov
sub
pop
out
xor
pop
jns
mov
imul
imul
cmc
pop
mov
mov
dec
data16
shl
das
mov
lret
out
mov
dec
mov
mov
stos
or
out
push
repnz
and
mov
jp
pop
out
push
xchg
mov
sub
jbe
jb
push
inc
mov
sahf
insb
cs
sub
jns
mov
mov
out
push
rcll
cmpsb
cmp
push
stos
mov
cmp
pop
aaa
cmc
out
mov
inc
dec
push
insl
jp
out
mov
psubb
push
call
push
cwtl
sahf
pop
add
lret
push
mov
sub
pop
xchg
xor
pop
lahf
push
lea
sub
loopne
sbb
push
stos
cmc
jb
sub
imul
inc
ss
ljmp
cs
jb
inc
mov
mov
test
shlb
xchg
add
mov
scas
lcall
repz
clc
out
or
dec
xchg
jbe
out
pop
outsb
jb
push
int
adc
lock
out
jl
dec
mov
dec
mov
out
ljmp
sub
jle
loopne
out
movsb
jmp
push
push
out
scas
sahf
or
mov
fmuls
lret
movsl
dec
mov
pop
mov
mov
push
mov
dec
stos
push
adcl
into
or
mov
out
out
cmpsb
sub
ss
push
push
inc
shl
cwtl
mov
cs
xchg
mov
jp
push
out
jmp
sbb
inc
mov
paddsb
xlat
jp
push
movb
xchg
inc
xor
cs
add
jae
push
out
cs
imul
mov
xor
stos
fimull
and
mov
das
cltd
mov
inc
push
cs
sub
push
gs
jle
enter
push
out
jmp
pop
jbe
push
je
cmp
push
and
out
mov
push
inc
insb
xchg
lret
out
pop
mov
adc
out
push
mov
pop
cmpsb
mov
pop
ds
sub
lret
sbb
into
push
push
dec
push
mov
dec
pop
imul
ljmp
jbe
xor
inc
dec
cwtl
mov
out
jb
mov
push
xor
jle
icebp
ret
stos
mov
lods
ss
loop
mov
mov
imul
gs
pop
jb
mov
or
mov
rcrb
scas
out
push
sub
ss
sub
mov
ss
pop
lcall
jb
push
cmp
sub
jb
push
mov
fisubrl
stos
cmp
pop
mov
sub
ss
out
jle
lret
mov
push
add
jle
or
mov
dec
dec
pop
xor
fsub
into
pusha
push
subb
pop
ds
mov
push
jle
inc
in
scas
mov
push
add
push
mov
bound
add
enter
out
mov
push
outsb
pop
loopne
sbb
mov
ljmp
or
add
fcmove
mov
dec
mov
pushf
mov
ss
sub
push
je
xchg
xchg
cmp
repnz
mov
fisubl
stc
lret
mov
pop
lret
push
inc
or
out
lret
jmp
ss
into
popw
test
cs
and
loop
aaa
xchg
divps
rorb
loop
int
cmpsb
or
ss
mov
lret
cmp
mov
sbb
out
dec
jb
and
push
jne
repnz
dec
out
mov
aas
jbe
jb
push
push
or
data16
aaa
decl
rcrb
cmp
mov
xlat
sahf
sub
xor
test
insb
aaa
sbb
repnz
mov
ret
inc
jp
insl
repnz
fisubrs
sbb
sahf
dec
test
test
mov
push
pop
rol
aaa
lods
out
movsl
mov
dec
cmp
enter
int3
mov
cs
ljmp
test
pusha
mov
dec
mov
push
mov
pop
jno
mov
sub
outsb
mov
push
inc
outsb
loope
in
inc
sub
xor
xchg
mov
leave
jae
scas
loope
repnz
xchg
js
mov
sub
cs
or
or
mov
fldenv
sub
cmp
pop
mov
ret
inc
push
fldenv
jne
dec
add
mov
clc
sbb
mov
mov
sub
push
sub
push
or
cwtl
mov
jmp
leave
sahf
or
fiaddl
xor
mov
mov
lock
out
jl
js
inc
cmp
xor
ljmp
das
ljmp
out
jb
jns
pmaxsw
mov
stos
pop
mov
out
mov
cmp
testb
push
sub
mov
jp
jmp
jb
or
dec
adc
cmpsb
mov
mov
out
dec
jl
dec
adc
lea
cmp
out
dec
lcall
inc
sahf
pop
jge
negb
lret
out
push
dec
cs
mov
sbb
out
pop
jle
out
mov
ret
dec
out
das
mov
sub
mov
jg
loop
stos
push
jle
mov
ljmp
pushf
out
out
out
lock
in
cmp
imul
pop
sbb
add
divb
push
xchg
loope
loopne
add
ds
xchg
pop
test
dec
adcl
mov
mov
fisubl
jae
loop
push
mov
insl
jne
fucompp
dec
dec
test
imulb
dec
mov
mov
outsl
mov
mov
ret
jns
out
sbb
inc
push
jg
shr
imul
test
jb
insl
sahf
pop
lcall
jnp
xchg
add
jmp
mov
into
mov
mov
sahf
ljmp
lret
push
mov
outsb
inc
mov
out
or
fidivs
add
sub
inc
cmp
dec
xchg
dec
sub
ss
sub
cmp
push
pusha
sub
pop
loop
orb
xor
push
cmp
cmp
push
push
scas
out
sub
jo
add
xlat
stos
pop
out
cmp
shl
mov
das
fldcw
push
aaa
xlat
fsubs
mov
push
sbb
push
and
push
mov
xchg
scas
pop
push
jle
jp
aaa
mov
jp
popa
xchg
scas
dec
loop
nop
dec
jle
out
mov
xchg
mov
inc
push
pop
data16
lock
mov
lret
xor
out
insl
stos
dec
out
pop
pop
rsqrtps
rcrb
cmp
inc
xor
xor
out
mov
mov
out
fidivl
clc
and
jnp
xchg
xor
jbe
repnz
jg
push
into
ss
mov
mov
out
pop
push
mov
xor
mov
jbe
pop
push
stos
or
mov
xchg
aaa
pop
out
jno
push
add
movsb
xchg
xchg
dec
outsb
push
test
push
cmpsb
push
jb
mov
aaa
test
int
sbb
mov
outsb
pop
test
xor
data16
jb
enter
xor
data16
fisubs
imulb
scas
mov
ret
cmp
jbe
xlat
xchg
repnz
mov
push
pop
push
mov
push
mov
das
out
fptan
mov
xchg
loop
mov
push
cmp
add
xorb
aaa
iret
xchg
mov
jae
and
and
pop
dec
fs
cmc
inc
aaa
mov
cmp
ja
cmpl
sbb
pop
fiaddl
push
daa
out
fistpl
xlat
nop
push
push
dec
cwtl
pop
jns
ds
out
sbb
sub
jmp
ljmp
scas
push
lcall
push
sbb
jl
ds
sbb
dec
outsb
mov
and
into
push
mov
sahf
adc
dec
add
daa
mov
and
ds
data16
mov
lret
mov
cs
scas
xchg
testb
mov
cmp
outsb
mov
sahf
insl
mov
ds
rclb
cwtl
mov
ds
push
pop
sarl
loopne
dec
or
jp
push
or
fidivs
or
pop
or
mov
outsb
xor
push
mov
mov
xor
mov
mov
adc
adc
bound
sarl
mov
jne
add
ds
sub
push
pushf
lea
lods
or
fdivrl
push
scas
enter
jl
push
leave
mov
fdivrl
jns
push
dec
lret
or
inc
fwait
mov
int
dec
cmp
fs
xchg
fdivrl
push
cmpsb
scas
rolb
jbe
dec
out
insl
shr
fidivl
sub
inc
inc
cmp
ds
mov
push
scas
mov
addr16
push
adc
dec
mov
cmp
fs
mov
push
push
mov
ret
sub
mov
inc
aas
xchg
cs
push
cmp
ss
push
int
push
push
push
mov
jne
scas
ds
push
inc
or
mov
mov
push
xchg
push
sbb
jl
ds
sbb
jle
lcall
imul
outsb
push
inc
inc
cmpsl
push
cmp
imul
mov
jge
xchg
insl
sarl
scas
jb
aaa
testb
jns
push
outsl
mov
inc
subb
xchg
ds
mov
add
dec
outsb
outsb
jb
inc
test
mov
out
lret
dec
je
cs
xor
jl
ds
xchg
mov
dec
test
out
dec
push
jmp
inc
faddp
lock
mov
js
ds
and
jns
mov
dec
in
inc
jl
ds
ljmp
add
dec
test
xchg
jl
ds
ss
inc
movsl
dec
push
mov
loopne
gs
inc
ds
jp
cld
sub
scas
mov
inc
dec
mov
jl
ds
cmpsb
mov
popf
mov
or
insl
dec
jmp
dec
loop
lock
notrack
cmp
inc
jbe
mov
mov
or
lcall
dec
test
lret
lock
inc
cmp
push
daa
add
out
mov
leave
outsb
push
daa
mov
int3
ret
add
and
push
nop
pop
sahf
mov
ds
cmp
mov
push
jg
mov
push
push
pop
outsb
mov
adc
mov
mov
lock
ljmp
sub
jg
jns
inc
insb
int
out
pop
cmpl
dec
cmp
mov
xor
loope
into
das
push
xor
dec
sbb
jnp
sbb
ds
xchg
ljmp
jno
popf
mov
fdivl
inc
imulb
cmpsb
js
inc
jmp
mov
jl
ss
inc
xor
jmp
cmpsb
xor
stos
ss
shll
scas
xor
cmp
adc
aaa
mov
jbe
push
cmp
cmp
data16
cmp
pop
ds
stc
test
jne
leave
mov
inc
inc
mov
dec
inc
call
divb
ljmp
stos
dec
dec
sahf
jp
dec
mov
cmp
cmpsb
dec
pop
outsb
dec
inc
decb
push
nop
mov
negb
dec
sub
repnz
ss
push
pop
cmpsb
ljmp
mov
dec
sub
xor
add
xor
push
outsl
insl
sub
js
xor
or
dec
xor
mov
push
xor
lods
mov
sbb
inc
imul
jno
dec
aaa
dec
mov
push
xor
lods
mov
sbb
inc
imul
inc
aas
or
sahf
inc
lret
xor
push
outsl
inc
cs
data16
sbb
imul
jno
dec
dec
dec
mov
xor
dec
sbb
imul
inc
push
or
push
lods
mov
mov
pop
push
jg
jno
inc
pop
or
xor
jo
es
cltd
lcall
push
adc
push
outsl
mov
sahf
aaa
pop
inc
inc
ss
inc
cli
fs
mov
outsl
imul
jg
inc
cmpsb
inc
imul
push
popa
cmpsb
xchg
pop
jmp
out
aas
inc
jg
mov
push
push
cmpsl
ja
push
sub
and
aaa
cmp
test
cs
inc
sbb
fiaddl
push
xchg
scas
pop
cs
sbb
aas
stos
xlat
lcall
fiaddl
pop
notb
push
aas
arpl
imul
push
mov
outsl
jb
sbb
stos
scas
mov
ret
das
mov
ja
ds
fistpll
aas
mov
ljmp
ja
pusha
inc
loop
lret
insb
out
dec
aaa
bnd
das
iret
mov
xchg
adc
pop
mov
mov
mov
bound
push
int3
cmpsb
outsb
jp
mov
repnz
push
dec
mov
xchg
outsl
push
inc
into
mov
pop
add
ja
scas
mov
cmpsb
adc
pop
scas
outsl
sub
lcall
xchg
mov
scas
pop
mov
aas
xchg
inc
popa
adc
xor
das
and
cmp
cmp
push
push
add
xchg
jp
out
jb
push
inc
pusha
xchg
xchg
xor
daa
xor
push
and
dec
pop
int
lcall
cwtl
lcall
les
insb
xchg
inc
cltd
lcallw
dec
pop
aad
dec
je
pop
cmp
xchg
push
bnd
mov
push
fisubl
cmp
test
in
inc
push
mov
cmp
lds
test
xchg
dec
jge
inc
test
pop
pushf
fs
lds
dec
xchg
ret
loopne
sub
sarb
jp
jb
lret
inc
mov
test
adc
jne
mov
push
out
adc
fs
mov
pop
dec
sahf
jne
jb
push
cmp
rolb
faddl
scas
xchg
xchg
jg
inc
aaa
push
pop
sub
jne
add
cmp
mov
mov
mov
cmp
int3
jae
sti
mov
jo
cmp
insl
add
xor
insb
mov
xchg
data16
pushw
adc
jp
mov
lret
rolb
sub
mov
outsl
mov
pop
jne
xor
lret
fs
cmpsl
push
inc
popa
push
into
daa
cmp
fldt
cmp
mov
repz
xchg
xchg
ljmp
sub
cmp
cmp
or
popf
cmp
stc
inc
mov
pop
mov
push
ret
jb,pt
cmp
imulb
mov
sub
fs
or
sarb
and
push
sbb
xor
sub
stc
cmp
or
imul
push
je
ds
cmp
mov
mov
dec
mov
pop
dec
add
mov
xor
cmp
xor
sub
inc
jge
mov
cmp
cmp
outsl
repz
cltd
sbb
outsb
fisubrs
cmp
bound
cmp
jge
xor
xchg
add
cmp
fs
cmp
pop
xlat
jns
dec
pop
jae
out
bound
dec
lods
dec
cmp
ds
dec
pop
out
xchg
ss
outsb
les
cmp
mov
jns
arpl
pop
stos
cmp
push
push
push
push
sarb
jo,pt
call
xor
ret
mov
cmpsb
sbb
sbb
lods
mov
sub
dec
shl
cmp
cmc
ret
gs
sahf
sti
cmp
dec
pop
mov
sub
push
pop
outsl
dec
sub
and
popa
xor
dec
lret
popf
dec
push
inc
js
pop
in
scas
data16
and
jbe
aam
cmp
add
mov
push
push
mov
mov
xor
cltd
lea
cltd
sbb
mov
xor
ds
cmp
push
cmp
rorb
lret
inc
stos
jge
cmp
pop
imul
out
imul
cmp
pushw
aad
jp
dec
jb
cmp
cmp
outsl
fs
insl
xchg
jb
cmp
inc
pop
js
out
sbbl
cli
cmp
inc
inc
jns
test
push
clc
add
insl
pushl
jp
test
stc
rcr
test
imul
sub
xchg
mov
mov
xor
cmp
cmp
aas
dec
xchg
dec
push
inc
icebp
sub
bound
inc
pop
inc
ja
and
shr
repz
mov
pop
in
addb
sti
js
dec
addr16
test
lods
dec
nop
xchg
and
push
inc
pop
xchg
inc
enter
dec
cmp
inc
dec
lcall
punpcklwd
iret
pop
mov
popf
aaa
jns
aam
insl
mov
je
push
out
add
jns
inc
popf
ss
sbb
rcrb
xchg
xchg
lret
mov
out
xor
in
testb
dec
and
fwait
das
int
testl
cmpsl
ds
ljmp
popf
cmp
test
in
mov
mov
add
xor
lods
mov
inc
ret
jl
inc
cmp
push
jnp
outsb
sub
jg
aam
mov
lret
and
out
cs
rcrb
fcoms
dec
mov
xchg
mov
dec
aas
mov
outsl
dec
cmp
outsb
mov
addb
dec
cmp
push
mov
cmp
mov
and
iret
out
lcall
pop
stos
popa
sub
jns
mov
fidivrl
ljmp
je
movsl
jo
xchg
into
adc
je
je
add
addr16
cmp
jl
int3
sub
xchg
mov
mov
sub
ficomps
outsl
into
inc
fs
push
push
int3
sahf
call
loopne
pushf
push
scas
push
daa
dec
mov
mov
mov
or
jle
jp
call
mov
dec
into
jnp
outsl
push
mov
sar
into
cmp
pushf
push
mov
sub
addr16
add
bound
dec
cltd
ret
pop
ss
push
cltd
pop
out
scas
decb
sub
outsl
jns
or
test
out
cmpsb
ss
pop
cmp
sbb
cmp
xchg
push
add
xchg
pop
mov
outsl
and
mov
lret
bnd
cmp
xor
test
cltd
mov
fwait
xor
or
sbb
cmp
leave
dec
jbe
sti
js
push
mov
pushw
mov
push
flds
xchg
cmp
inc
inc
or
out
loop
jp
push
inc
outsl
dec
jbe
dec
adcb
fs
push
ds
and
dec
out
fwait
pop
xchg
jmp
dec
pop
inc
or
imul
push
hlt
dec
stos
insl
push
mov
and
xchg
loop
insb
faddp
lock
lcall
negl
jnp
dec
cmp
je
das
sub
fstpl
mov
or
mov
xor
mov
mov
xchg
cwtl
jns
lcall
pushf
enter
lahf
jbe
dec
pop
dec
lcall
jle
jmp
test
adc
add
mov
sub
pop
xchg
outsl
or
push
push
negb
cwtl
push
sub
xor
out
pushf
jno
aaa
dec
imulb
imulb
xchg
dec
cmp
dec
inc
xor
daa
sbb
iret
dec
sbb
pushf
nop
fsubrl
inc
lods
xchg
xchg
out
and
dec
add
cmp
xlat
mov
xchg
pushf
lret
dec
cmp
popw
mov
cmp
je
xchg
fwait
jb
cs
mov
fcmovne
sub
xchg
enter
cmpl
sub
inc
fs
jns
xor
cmp
subb
dec
sbb
dec
inc
xchg
pop
mov
daa
xchg
pop
dec
push
push
loope
aad
sbb
in
inc
ds
push
inc
aam
data16
mov
dec
movsb
call
or
ss
sarl
push
push
stos
xor
pop
dec
hlt
cmpsb
mov
lret
push
mov
xchg
mov
xor
stos
inc
cmp
shlb
and
cmp
rclb
jle
insl
add
cs
sub
cmpsl
push
imul
outsb
cli
ljmp
das
push
es
xor
mov
push
outsb
test
cwtl
sub
mov
in
adc
mov
push
sub
inc
xor
jb
mov
cltd
mov
push
jbe
insb
jle
addr16
xchg
int3
mov
sub
push
lcall
in
insb
fcompl
leave
out
push
stc
mov
loop
or
inc
mov
xor
dec
outsb
andb
mov
push
pop
stc
push
push
shrb
lret
xlat
pop
inc
jbe
cmp
xchg
addr16
fmull
clc
dec
jge
inc
jge
xchg
cmp
data16
sbb
xchg
iret
dec
out
js
cmp
icebp
jne
bound
xor
imul
outsb
xor
mov
imul
mov
lods
stos
fwait
bound
cmp
repz
add
sahf
mov
mov
dec
iret
mov
in
jno
stos
mov
imul
push
jle
subb
jle
sub
test
sbb
ss
mov
jb
inc
pushf
adc
jle
mov
sarb
mov
pop
idivl
sbb
outsb
mov
jecxz
cmp
out
cmp
push
sahf
data16
ss
and
stos
jae
xor
cmp
cmpsb
jmp
push
sub
outsl
sub
sbb
sbb
ds
xor
cmp
push
imul
push
dec
cli
ss
insl
dec
xor
loop
pop
jb
out
mov
js
pop
lahf
pop
das
fidivl
push
pop
iret
clc
dec
or
mov
dec
sub
imul
cmpsb
xor
or
scas
fistl
test
add
jno
icebp
mov
scas
mov
xchg
pushf
xchg
imul
mov
imul
inc
inc
mov
adc
jae
cmc
cwtl
lahf
int3
data16
cmpsb
out
xor
incb
aam
jge
lock
jae
xor
inc
cmp
push
cwtl
out
jl
out
gs
cmp
stos
and
xor
sbb
shlb
mov
sbb
lret
sbbl
mov
js
into
xor
lcall
push
adc
leave
jbe
notb
fidivl
test
jnp
sub
jle
cmp
or
or
dec
inc
ret
mov
arpl
sbb
jnp
mov
mov
pop
scas
fdivrp
jno
mov
ja
dec
pop
xor
je
int3
dec
jb
cmp
cmp
jns
insb
dec
sahf
xchg
pop
iret
daa
xchg
xchg
loopne
test
cmpsb
inc
icebp
sub
js
mov
jne,pn
add
lea
mov
pushf
mov
inc
push
adc
cwtl
inc
cmp
dec
cmpsb
mov
sbb
jbe
jp
push
mov
push
push
mov
mov
jg
sbb
fsubrl
imul
cli
cwtl
jnp
xchg
pop
inc
jno
lahf
inc
mov
lahf
outsb
jne
fcompl
mov
aas
push
loope
jbe
lods
scas
cwtl
or
mov
inc
repnz
inc
push
clc
addr16
jns
mov
scas
mov
xor
push
js
push
ss
xchg
mov
cmc
jmp
lods
push
into
push
inc
sbb
jns
aad
cwtl
jno
int
inc
cmp
adc
pushw
adc
push
fldcw
repnz
jle
ret
iret
xor
std
repnz
aaa
xchg
add
cmp
out
push
leave
scas
mov
dec
mov
cmp
mov
mulb
outsl
mov
cltd
loop
push
dec
scas
mov
sub
test
inc
jae
jnp
jne
mov
sub
inc
ljmp
pop
in
jbe
pop
push
cmp
fidivl
push
into
inc
aaa
es
sahf
ret
inc
mov
inc
into
jbe
mov
ret
pop
sti
pop
inc
aas
adc
dec
ljmp
cmpsb
cmp
inc
int3
ljmp
dec
sub
push
sbb
ljmp
test
cmp
pop
insl
inc
push
sbb
insb
and
les
outsl
and
mov
sub
dec
scas
lods
daa
cmp
push
mov
ds
mov
enter
mov
fidivl
test
adc
dec
pop
jge
jp
les
ss
je
jb
xchg
mov
ss
push
mov
pop
inc
mov
loop
inc
xchg
repz
je
dec
js
inc
mov
rcrb
fildll
mov
or
mov
jne
cmpsb
push
dec
pop
mov
cmp
outsb
cmp
hlt
addb
push
movsb
mov
cmp
orb
push
mov
cmp
divb
cmp
push
insb
mov
mov
insb
ljmp
loope
mov
cmp
push
cmp
aaa
addr16
out
and
mov
sub
mov
dec
out
mov
xchg
pop
fisubl
lret
rcl
into
cmp
push
cli
jbe
sub
xlat
jae
loope
js
popf
test
jle
mov
mov
enter
addb
xchg
jmp
mov
jb
dec
pop
clc
inc
xchg
js
cmp
dec
jle
xor
mov
mov
sub
inc
clc
sub
cmp
jns
fstpl
lods
pop
inc
inc
aas
cs
mov
pop
jp
mov
mov
push
sbb
movsl
int
xchg
mov
push
xor
outsl
outsl
push
inc
notb
mov
mov
inc
js
push
cli
aaa
test
iret
mov
nop
pop
ror
iret
jb
in
fwait
sbb
inc
mov
mov
or
outsb
or
pop
inc
adc
imul
stc
mov
push
enter
inc
mov
dec
and
mov
popa
decb
xchg
jb
pop
lret
rol
js
ret
push
cmp
test
jno,pn
cmpsb
pop
jns
inc
sbb
mov
cmc
aam
mov
pop
cmp
bound
xor
push
ljmp
xor
mov
xor
xchg
mov
cmpsb
sub
mov
mov
mov
xor
push
cmp
jb
mov
xor
xor
cmp
pop
es
cmp
mov
cmp
xchg
dec
stos
push
stc
pop
outsb
jmp
mov
sub
inc
or
push
sub
lock
insb
jmp
pop
cmp
sahf
xor
push
addr16
clc
xchg
stos
repnz
xor
xlat
xchg
dec
fwait
xchg
jno
imul
fcmovnbe
push
mov
add
inc
pop
das
mov
ss
and
testb
push
daa
mov
jae
aam
jp
pop
sub
stos
jp
pop
inc
pop
jp
out
test
out
push
dec
ljmp
mov
out
out
or
xor
inc
xor
mov
addr16
mov
push
adc
mov
lret
stos
mov
pop
jb
ds
xchg
mov
push
cmp
adc
add
bound
adc
xchg
lods
bound
cmp
jbe
cwtl
cmp
ljmp
mov
aaa
test
dec
jnp
inc
inc
out
xor
xlat
xor
sbb
or
xor
xchg
ss
pop
pop
adc
pushf
out
aam
ds
js
fidivrl
mov
ds
cmp
aas
push
lret
mov
jbe
lcall
outsb
dec
xchg
dec
sbb
pop
cwtl
or
mov
popa
js
pop
xor
and
mov
cmp
cmp
cltd
ret
mov
or
scas
insl
xchg
pop
jmp
mov
inc
or
jbe
cmp
jno
lcall
jb
or
pop
push
jo
movaps
mov
xor
cmp
push
mov
mov
xchg
mov
testb
cmp
ret
mov
loope
into
pop
sub
jp
outsb
bound
xchg
ljmp
outsb
aaa
xchg
loop
std
or
mov
jne
cmp
arpl
ss
dec
aad
jb
cmpsb
ss
cmp
xchg
cwtl
ret
ret
push
or
xor
cmp
adc
or
stos
lret
stos
outsb
inc
inc
stos
aam
int
or
cmp
inc
sub
into
lcall
push
inc
inc
ret
test
xchg
pop
adc
ja
xchg
fldt
fidivl
push
stos
mov
repnz
sub
dec
jp
push
lcall
sub
lods
xchg
dec
jle
cmp
in
in
dec
lcall
cmp
or
into
into
adc
xchg
inc
data16
dec
push
mov
jnp
cs
and
dec
push
cmp
push
inc
subb
divb
mov
mov
sahf
add
cmpsb
outsb
pop
ds
mov
cmpb
outsb
lahf
pop
dec
xchg
lods
jmp
jbe
cmp
dec
scas
inc
lret
pop
add
xchg
repnz
dec
sbb
inc
inc
or
mov
outsb
mov
sub
cmpb
push
sub
mov
fidivrl
cmp
push
push
js
ljmp
cmp
dec
mov
dec
ret
sbb
pop
inc
out
adc
inc
cltd
mov
dec
es
loop
push
outsl
sbb
mov
sbb
sub
incb
adc
repz
imul
push
jle
orb
insl
sbb
cmp
mov
push
roll
ds
daa
pop
aaa
inc
push
jo
xor
inc
pop
data16
xor
inc
dec
mov
mov
fiaddl
jb
and
mov
ds
cmp
rorb
imul
cmp
add
mov
ret
sub
pushf
das
insb
fimuls
or
dec
jb
das
mov
movb
pop
aaa
push
push
movsl
int
push
loopne
jnp
into
sub
jg
out
test
adcb
stos
cmp
dec
es
jmp
mov
pop
lret
push
insb
inc
mov
cmp
dec
inc
into
inc
sti
sub
dec
mov
dec
sub
je
mov
xchg
mov
outsl
leave
ret
dec
adc
push
xchg
scas
push
pop
mov
lods
inc
inc
pop
into
inc
jb
call
or
fdivl
stos
shrl
inc
lret
mov
sarb
stos
jno
ss
or
ljmp
outsl
mov
rcr
sub
inc
mov
stos
outsb
inc
sub
fwait
dec
mov
xchg
and
outsl
jge
ret
inc
mov
mov
xchg
jl
inc
mov
pusha
idiv
jle
call
sbb
rorb
sbb
inc
aas
aas
jne
jbe
outsb
push
sarb
jns
scas
inc
test
outsl
push
cmp
mov
dec
pop
es
jno
subl
js
push
xlat
cwtl
imul
mov
push
mov
sub
das
fdivs
popf
dec
jp
data16
cmp
push
ds
addr16
jp
sbb
mov
sarb
je
cmpsb
jb
inc
mov
xor
or
les
xchg
ss
test
mov
inc
inc
dec
cmpsb
scas
push
stos
mov
loopne
in
push
cmp
push
lahf
stos
leave
in
push
dec
notb
loop
push
push
rorl
push
mov
sub
ficompl
sbb
call
push
push
mov
dec
inc
scas
pop
clc
cmp
mov
jmp
push
push
mov
inc
push
add
pop
fwait
vrsqrtps
inc
jg
jb
sbb
and
bound
lret
inc
inc
xor
stc
jl
xchg
push
mov
orb
pop
cmpsb
xchg
inc
dec
xor
xor
out
inc
inc
das
test
into
cltd
mov
dec
or
push
push
xchg
xor
stos
inc
lret
add
and
xchg
jle
jo
mov
outsb
sub
mov
dec
lcall
cli
dec
loop
push
mov
int3
mov
inc
dec
ret
mov
add
stos
cmpsl
adc
jp
sahf
xor
mov
repnz
inc
push
outsb
dec
aam
push
sub
repnz
xlat
jb
add
fisubrs
cmp
mov
xchg
mov
xchg
xchg
loope
mov
dec
push
cmpsb
add
cltd
mov
je
mov
cmp
fldcw
jns
xchg
xchg
pop
jb
pop
push
outsb
xchg
sub
lcall
xchg
testb
dec
mov
add
outsb
data16
push
jmp
or
push
cltd
push
inc
push
dec
in
push
mov
mov
pop
ds
sbb
mov
sbb
ljmp
push
mov
jbe
stos
mov
jmp
or
or
scas
cmp
lret
xor
push
loop
stos
loope
iret
add
out
dec
dec
cmp
jno
inc
scas
inc
sub
or
ds
into
fimuls
mov
jle
push
pop
outsb
push
push
enter
cmp
xchg
outsb
sub
clc
pop
movb
sub
inc
test
push
dec
jns
movsb
rol
ds
xchg
inc
out
push
cwtl
movl
push
xor
in
inc
jb
ljmp
inc
sahf
inc
push
outsl
fwait
xchg
dec
mov
orb
cmp
scas
lds
adc
mov
lock
ss
adc
mov
imul
push
push
push
mov
sub
sarb
xchg
into
cmp
stos
dec
jle
mov
scas
pop
ds
and
ss
xchg
scas
jno
stos
lock
stos
jb
out
lret
adc
cmp
dec
cltd
inc
outsb
push
aaa
adc
cmp
dec
subl
pop
fldcw
jle
xchg
sub
jl
push
fsubr
mov
je
out
add
cmp
fcmovbe
ja
xor
mov
jp
mov
icebp
mov
scas
mov
mov
sbb
dec
xchg
iret
sub
sbb
imul
fadds
js
inc
decb
je
out
fdivs
or
inc
incb
xchg
in
int
jns
cmp
repz
dec
out
aaa
mov
mov
dec
mov
xchg
push
leave
sbb
cmp
scas
out
push
lret
mov
test
xchg
test
add
push
mov
xor
cs
je
inc
xchg
shl
add
daa
dec
push
sub
movsb
jne
shrb
jp
lahf
test
xchg
mov
imul
pop
ss
push
rcrb
and
push
xchg
je
pop
cmp
mov
xor
push
mov
and
js
ds
divl
push
pop
mov
dec
sub
cwtl
jns
push
lock
ds
push
shlb
jns
je
pop
push
fidivrl
stos
push
jne
cmp
dec
fisubrl
ss
subl
jae
inc
addr16
or
aam
push
xor
jbe
cmp
pop
push
bound
xchg
xor
mov
mov
scas
out
loope
push
aam
inc
cwtl
inc
cmpsl
dec
pop
jbe
aas
push
insb
jns
dec
imull
lret
inc
push
dec
cmc
push
dec
mov
jg
push
or
sub
aad
xor
dec
fists
mov
dec
jb
xchg
cmp
push
inc
push
inc
ss
sahf
mov
dec
data16
aaa
jnp
lods
inc
jp
cli
mov
sub
inc
imul
jne
out
mov
iret
cmp
pop
mov
mov
pop
loop
notb
out
lods
cltd
loope
std
dec
out
mov
pop
mov
push
xor
xchg
mov
pop
stos
inc
out
ret
stc
outsl
leave
mov
stos
mov
jbe
inc
stos
xchg
test
popa
mov
imul
pop
inc
lret
ljmp
mov
ret
push
in
mov
inc
sub
inc
cmpsl
mov
adc
mov
imul
fs
xor
bound
fucomp
jg
dec
xchg
jns
shll
or
mov
cmp
dec
sahf
dec
test
test
pusha
cld
pushf
ds
fadds
cltd
inc
or
xor
or
cmp
xor
mov
lods
inc
test
cltd
cltd
sbb
push
mov
das
pop
loopne
fs
fdivs
mov
dec
lahf
cmp
xchg
xchg
inc
sbb
xlat
pop
shl
popa
dec
daa
inc
cmp
cmp
mov
pop
xor
xchg
sahf
std
cltd
repnz
ja
push
xor
push
mov
push
insb
fwait
dec
push
call
sub
dec
mov
mov
dec
push
inc
mov
ds
xor
daa
dec
mov
push
dec
cli
xor
inc
mov
jb
sarb
inc
push
pop
cmpsl
lret
lcall
add
inc
mov
cmp
arpl
mov
pop
push
cmp
cmp
dec
repnz
mov
or
lret
dec
add
mov
inc
dec
xor
pop
cmp
ds
scas
push
popa
inc
cs
cmp
push
dec
jle
imul
data16
mov
idivl
cmp
jl
jl
or
inc
add
cmp
lock
in
sti
mov
fdivl
in
mov
push
test
fs
sarl
push
dec
adc
ja
std
insb
cmp
jp
ret
cmp
scas
push
mov
cmp
cmp
push
scas
inc
mov
push
xchg
fnstsw
ret
das
out
cmp
xchg
pop
pop
jl
inc
negb
popw
sub
cltd
cmpsl
repnz
jns
mov
aas
xor
mov
inc
inc
out
pop
push
cmp
je
mov
push
inc
ljmp
cmpsb
mov
stos
movsl
xchg
push
sahf
mov
ds
stos
sti
sahf
stos
and
dec
dec
outsb
pop
xor
push
pop
inc
cs
lret
push
pop
bound
jle
jg
jle
popf
jae
ljmp
fwait
testb
mov
jbe
lret
push
dec
sub
jp
pop
aaa
jbe
inc
call
scas
loop
mov
movsl
or
sbb
jo
push
xchg
xor
jp
pop
mov
sti
ljmp
rorb
sub
mov
push
jle
ss
jb
nop
jo
movsb
add
cmp
inc
jbe
push
negb
inc
pop
dec
jp
cli
push
push
sarl
mov
cli
repz
cmp
push
cmp
dec
push
test
dec
jb
sbb
push
out
fdivrp
dec
xchg
outsb
jle
push
dec
push
in
dec
ret
fcmovu
pop
mov
mov
aas
cmp
push
mov
push
cmp
xchg
xor
mov
dec
cmpsl
insl
mov
fldt
and
and
mov
xchg
mov
pop
lods
mov
mov
xchg
loop
mov
push
into
je
push
dec
mov
cmp
add
xchg
les
xchg
ljmp
inc
mov
pop
ds
pop
pop
push
js
dec
out
pop
ds
xor
and
dec
or
adc
push
clc
fcmovb
mov
pop
outsb
inc
rolb
inc
lmsw
push
ljmp
cmpsl
ds
jae
sti
or
jp
add
ficompl
mov
data16
pop
push
imul
nopl
mov
push
cmp
lods
cltd
mov
jg
cmp
pop
shlb
dec
xchg
cmp
aas
mov
orb
jo
xchg
data16
xor
pop
cmp
adc
push
or
pop
clc
fists
mov
push
pop
lods
lahf
jnp
dec
js
and
fistl
lcall
rolb
inc
push
popa
push
loopne
loopne
sub
push
es
rorl
inc
pop
bound
mov
enter
fdivp
and
ds
pop
popa
test
or
push
mov
iret
xor
aas
dec
jge
sub
mov
cli
xor
insl
bound
fs
mov
push
orb
push
out
mov
andl
out
dec
mov
cmp
and
jmp
std
pop
xchg
filds
cmp
push
mov
fmull
push
pop
outsb
ja
movsb
roll
addr16
push
lcall
insb
mov
mov
sub
gs
adcb
lret
or
cmp
cmp
test
cmp
xor
ss
jb
cmp
std
sub
mov
inc
inc
mov
cmp
adc
dec
bound
sahf
mov
inc
mov
gs
test
dec
xor
js
mov
fmul
dec
gs
jg
outsb
ds
jp
push
ficoml
pop
imulb
aaa
in
cltd
sbb
mov
mov
pushf
ss
mov
ljmp
js
into
cmp
outsl
pcmpeqd
cmp
dec
cmp
into
sbbb
orb
cmpsb
sahf
jbe
xchg
mov
push
pop
cmp
adc
pusha
addr16
ljmp
daa
sub
push
icebp
shlb
jp
mov
adc
jnp
jb
push
pop
xchg
sub
push
test
mov
push
cld
mov
mov
je,pn
scas
push
push
push
jb
fmuls
mov
sbb
pop
cmpsb
pop
cmp
or
jle
mov
pop
jb
sahf
dec
mov
stos
dec
outsb
and
mov
daa
jle
push
mov
xchg
adc
mov
pop
lret
popl
mov
cld
popl
sub
pop
scas
xor
push
insl
cwtl
cmp
ljmp
sub
mov
ds
pop
stos
imul
inc
pop
xor
mov
loope
fildll
add
xchg
inc
lret
pop
test
sbb
in
cmpsb
inc
out
xlat
xchg
xor
pop
xchg
mov
add
xor
aas
lcall
xchg
dec
xor
jmp
jp
inc
or
je
ds
cmp
mov
sub
push
xor
and
push
dec
inc
pop
imulb
inc
mov
pop
test
pop
xor
fimuls
push
push
cmp
movb
push
insl
xchg
sti
cltd
in
push
jb
mov
sub
into
push
or
add
xor
testb
jg
int3
pop
mov
jbe
jle
dec
push
dec
imul
outsb
pop
ljmp
outsb
mov
inc
fcoml
test
inc
xchg
jnp
pusha
fidivrl
loop
ja
xchg
les
jle
popa
push
lds
into
sar
xchg
inc
mov
arpl
sub
push
jnp
out
push
aas
push
test
mov
push
into
push
out
pop
negb
jge
jno
enter
xor
test
cmp
test
pop
jns
cmp
sub
xchg
dec
test
jle
arpl
push
nop
dec
ficomps
mov
sahf
xlat
mov
cmp
int3
adc
ds
push
push
inc
add
out
cli
sub
loop
jg
pop
dec
push
dec
leave
data16
orl
cli
divb
mov
cmpl
cmpsb
pop
das
push
inc
dec
xchg
adcb
ret
or
iret
int
fisubl
inc
pop
repnz
pop
pop
movsl
dec
ret
daa
ds
arpl
inc
pop
ds
out
mov
xor
movsb
js
push
cmp
jmp
dec
inc
mov
mov
cltd
inc
icebp
movsb
scas
mov
push
sub
push
adc
cli
out
inc
sbbb
inc
cmpsl
push
sub
es
sti
push
jae
cltd
fadd
notb
fs
mov
inc
xchg
mov
cwtl
inc
out
pop
xor
jb
lods
inc
and
dec
inc
rol
ds
adc
inc
mov
cmp
ret
mov
ja
mov
scas
pop
into
addr16
mov
sarb
adc
mov
out
stos
shlb
sahf
das
push
xchg
xchg
push
fidivrs
sbb
pusha
ss
pop
stos
dec
push
mov
popa
mov
mov
dec
xor
cld
or
dec
lea
mov
inc
mov
subb
cwtl
mov
jb
imulb
into
lcall
dec
lcall
xor
lret
push
pop
pusha
rcrb
pop
notl
outsb
ds
sub
pop
mov
cmp
pop
test
dec
xor
fidivrl
push
rcrb
mov
add
mov
daa
inc
insb
cmpsb
ds
dec
mov
ret
popf
std
into
ljmp
push
pop
test
or
sbb
fisttpll
cmpsl
dec
push
mov
mov
movsb
out
mov
mov
arpl
inc
push
mov
jmp
pop
inc
pop
mov
popa
ss
push
test
inc
stos
mov
sub
jb
mov
mov
dec
imul
out
inc
push
mov
lcall
push
ja
sbbb
pop
ss
or
push
or
std
dec
dec
mov
bound
mov
cmp
push
imul
push
and
ljmp
push
dec
dec
sahf
pop
cmp
daa
push
dec
pop
mov
mov
jmp
dec
sub
aas
test
stos
mov
mov
pop
jnp
or
pop
into
lret
xor
out
inc
outsb
pop
xor
pop
ljmp
test
inc
out
fidivrs
jno
pop
sbb
cmp
popa
inc
into
mov
xchg
negl
pop
arpl
jg
cwtl
mov
cmp
push
test
loope
and
bound
or
lds
scas
fildll
insb
push
mov
es
out
mov
mov
cltd
and
std
push
lret
fs
mov
jns
cmp
jmp
lret
sbb
cli
cmpsl
ljmp
sbb
out
out
cmpsb
cmp
inc
nop
pop
lea
loopne
cmp
inc
ss
aaa
push
out
out
mov
das
testb
push
push
add
xor
mov
aam
out
addr16
mov
dec
push
adc
xor
aas
pushaw
outsb
cld
jb
xchg
push
ja
pop
call
mov
mov
outsl
aam
cmpsl
xchg
jp
dec
sbb
push
sahf
mov
and
xchg
inc
lret
adc
inc
mov
sub
lods
mov
add
adc
and
inc
pop
push
push
insl
dec
jns
fwait
dec
fildll
jne
mov
push
fwait
sub
sbb
push
insl
xchg
xor
and
cmp
fimull
stos
aas
inc
cmp
lret
xchg
push
cmp
or
pop
mov
in
push
inc
inc
in
jle
imul
aam
dec
fs
xchg
sbb
inc
testl
sbb
pushf
inc
mov
lea
push
push
cli
cltd
dec
push
roll
gs
ljmp
addr16
cld
insl
xchg
je
insb
mov
loop
or
shll
int
pop
faddp
push
pop
push
xor
lret
mov
je
jle
xchg
dec
cli
sub
mov
ds
pop
cmp
push
cmp
mov
inc
aas
or
inc
sbb
popa
mov
into
jo
loop
dec
enter
or
mov
sahf
adc
jno
out
fwait
cwtl
divb
hlt
imul
lcall
loop
jl
jns
insl
mov
inc
out
addr16
cltd
mov
push
push
or
push
push
pop
inc
pop
lea
adcb
sbb
sbb
js
mov
sbb
cmp
mov
or
jge
dec
jno
scas
arpl
inc
push
inc
ljmp
dec
aas
mov
jge
jge
cmpsl
imul
fdivl
dec
inc
mov
inc
xor
cmp
cwtl
mov
mov
cmp
inc
sbb
xor
dec
dec
fiaddl
cmp
push
push
inc
lret
mov
lahf
sbb
pop
stc
sub
pusha
pop
ja
aas
inc
push
dec
pop
cmp
mov
ds
cmp
inc
or
aad
jle
or
dec
or
add
js
loop
jp
out
mov
test
cwtl
cmp
adc
test
test
out
std
and
xor
mov
mov
mov
jbe
cmp
add
nop
jo
jne
cmp
movsb
xchg
loopne
inc
mov
cs
xchg
aas
xchg
mov
movsl
scas
inc
pop
mov
lret
aas
jb
pushf
stos
test
fmull
repnz
mov
testb
fwait
data16
and
jns
je
rcrl
adc
aas
lods
pop
jno,pt
mov
hlt
fsubrl
std
inc
stos
adc
je
mov
mov
aaa
mov
lcall
dec
test
lcall
mov
jo
pushf
or
cmp
mov
sbb
fiadds
xchg
lret
jne
jge
pop
cli
loope
pop
repz
cmp
movsl
mov
repnz
enter
mov
add
ror
ds
loopne
mov
enter
mov
push
rorb
rcl
lock
lock
icebp
into
shrb
mov
popf
mov
dec
jmp
sbb
cltd
in
loop
mov
pop
sbb
dec
add
fdivrl
outsl
mov
mov
add
mov
cmp
or
leave
imull
popa
dec
dec
cmp
dec
enter
mov
rcr
add
lock
fucompp
or
jo
pushf
stc
cltd
xchg
mov
push
add
in
loope
lret
js
add
push
mov
mov
bnd
mulb
ljmp
jno
mov
ljmp
inc
sbb
mov
call
cmp
or
imul
mov
outsb
xor
xchg
mov
aad
or
hlt
mov
inc
pushf
lock
jg
cmp
xchg
data16
out
ja
mov
popf
push
and
or
sbb
mov
pop
inc
or
push
orl
ljmp
int3
and
aaa
dec
lahf
loopne
adc
cmp
and
xor
push
xchg
dec
inc
push
push
or
add
cwtl
push
pop
loop
adc
fisubl
or
ret
jnp
dec
cltd
adc
xorl
push
bound
outsb
mov
lds
and
adc
jb
mov
push
scas
imul
gs
cltd
dec
pop
pop
fmul
jno
mov
lret
pop
or
adc
insl
out
cld
and
clc
lcall
mov
sbb
xor
addr16
iret
stos
jae
mov
add
xchg
add
pop
push
flds
adc
adc
test
adc
lea
push
mov
add
ficompl
sub
xchg
ficoml
popf
jge
xchg
rcrb
mov
xchg
sub
mov
aad
pop
or
sbb
cmp
enter
pop
mov
jecxz
rorl
mov
sub
mov
iret
mov
sub
pop
movsb
out
incl
cltd
rol
sub
call
dec
inc
xchg
icebp
hlt
fcoms
xchg
add
outsl
jno
ffreep
insl
aas
mov
push
pop
in
inc
cmp
dec
mov
mov
stos
je
xor
inc
pop
pop
idivl
imul
xchg
inc
les
in
xchg
xchg
cmp
inc
add
dec
push
push
pop
dec
mov
mov
mov
adc
orl
mov
cmp
jl
cmp
fnstenv
mov
add
push
enter
lret
jp
loopne
cli
sub
pop
mov
add
dec
lahf
ss
push
or
push
call
cs
add
or
cmp
out
mov
mov
fwait
punpckhdq
jle
lcall
push
dec
popf
cmc
shll
jnp
push
or
dec
lods
add
enter
aaa
out
fimuls
cmpsb
and
mov
popf
mov
pop
cmp
dec
dec
xchg
icebp
mov
and
inc
cmp
cmp
mov
sahf
dec
jne
rclb
push
mov
sub
push
adc
xor
lds
fiaddl
xor
mov
dec
les
push
mov
push
ret
dec
mov
popf
xchg
push
enter
pushf
insl
adc
push
pop
std
lcall
mov
test
iret
popf
mov
imul
lock
enter
and
push
subb
inc
scas
dec
pop
mov
fwait
mov
or
divb
pushf
fstl
lret
out
fst
stos
pop
mov
mov
loopne
imul
jle
rcrb
pop
mov
fcoml
xchg
lahf
push
push
faddp
push
insb
outsl
fidivrl
lcall
or
ja
xor
mov
sbb
jl
cmp
insb
cmp
inc
adc
adc
xchg
push
mov
jmp
pop
jb
jge
push
ds
pop
or
leave
sub
jbe
ss
adc
push
mov
fcmovne
push
sbb
dec
cmp
sbb
push
xlat
arpl
bound
dec
cwtl
popa
xchg
ljmp
cmp
or
addr16
out
imul
cmp
xor
push
push
jp
in
sbb
xor
dec
sahf
into
sub
js
xchg
clc
pop
in
test
pop
or
pop
in
int3
fnsave
mov
sbb
int
jp
mov
inc
adcl
dec
add
push
int3
push
jb
mov
ljmp
cwtl
test
dec
adc
or
push
rcl
push
decb
inc
out
insl
fwait
pop
cltd
inc
lret
jp
repz
or
mov
dec
mov
push
sbb
insl
rorb
cwtl
mov
mov
cmp
dec
mov
lea
fistl
jns
in
xchg
je
js
jo
bswap
repz
popf
and
jb
xor
jb
push
fmull
jo
jbe
lret
popa
mov
cmp
outsl
jg
lret
mov
mov
imul
jo
mov
adc
xchg
jae
or
scas
add
and
xor
dec
jo
std
out
dec
out
pop
cltd
jno
es
mov
dec
add
sbb
adc
pop
lret
scas
lret
das
inc
mov
pop
rcrl
outsl
popf
shl
data16
cli
and
dec
fsubrs
push
dec
out
pop
push
call
pushl
adc
test
xchg
enter
push
lods
std
add
inc
lahf
test
jb
xor
divb
lahf
or
call
or
xor
push
pop
mov
mov
dec
xchg
dec
mov
mov
push
shl
stc
les
aad
mov
xchg
dec
lock
icebp
jno
shrb
dec
push
adcb
xor
cmp
and
push
aaa
addb
or
out
dec
insl
mov
outsb
leave
cmp
stos
in
cs
xor
sahf
lcall
sub
xor
shlb
orl
sub
jge
gs
or
scas
jl
mov
enter
aas
loope
xchg
movsl
mov
sbb
negl
mov
sahf
mov
dec
addb
or
adc
pop
dec
lret
lods
lcall
ja
push
pop
outsb
mov
enter
fadds
mov
mov
mov
or
sub
mov
in
insb
xor
stc
jg
mov
xlat
stos
bound
outsb
or
fcmovnu
inc
xchg
jnp
ret
mov
ret
dec
xchg
jg
push
dec
jns
test
mov
jnp
xlat
je
stc
cmpsl
push
lea
test
jno
popf
cmp
xchg
test
inc
adc
mov
jno
sarb
xchg
mov
or
or
sbb
pop
les
pop
inc
cmpsb
lcall
aam
jae
andb
xchg
fadds
and
dec
ret
mov
ljmp
jp
lret
adc
loop
adc
push
inc
call
xchg
das
lret
sbb
push
push
dec
jge
lret
jb
mov
mov
outsl
ret
lret
cmc
xchg
mov
in
sti
dec
psrad
mov
subl
jge
mull
mov
push
rorl
mov
xchg
sub
xor
loopne
pop
incb
cmpb
jns
addr16
clc
adc
out
push
sbb
pusha
mov
dec
jns
jle
pop
fwait
dec
cltd
lcall
push
dec
je
into
roll
insl
mov
jb
pop
sbb
lea
cltd
mov
inc
fnstsw
lods
movsl
mov
fsubr
mov
div
js
dec
xor
stc
popa
lcall
mov
rcrl
call
jb
rolb
dec
xchg
fcoml
jbe
cmp
lahf
fnsave
mov
dec
shrb
jg
mov
repnz
imul
dec
scas
jno
enter
je
mov
setg
mov
jne
loop
icebp
add
jno
jo
or
addr16
roll
sarb
rorb
mov
push
mov
mov
mov
jbe
mov
dec
cmp
icebp
adc
sub
xor
xchg
je
outsl
mov
sysexit
loope
mov
jae
test
insl
icebp
sbb
jne
or
mov
xor
insl
lahf
fldt
dec
jge
and
push
popa
je
dec
int
push
dec
cltd
lcall
cld
jne
into
fdiv
push
jmp
cltd
sbb
inc
mov
mov
out
xlat
cltd
faddl
adc
cmp
ja
xchg
lahf
out
mov
inc
hlt
cmp
and
push
ss
iret
xor
jecxz
jno
mov
pop
aas
aaa
stos
in
push
push
into
push
jge
in
mov
and
push
je
mov
pop
test
mov
aad
push
xor
mov
or
mov
movsb
fildl
inc
xor
push
int3
cld
icebp
jbe
mov
jo
test
jge
jns
cs
fidivl
cmp
js
adc
imul
inc
sbbb
out
and
adc
and
mov
adc
jns
fiaddl
cmpb
loopne
arpl
pop
js
dec
mov
lds
jbe
shrl
mov
bsr
pop
jne
aaa
adc
sub
fidivl
gs
jo
mov
mov
dec
jp
mov
or
jo
or
mov
fistl
or
test
mov
mov
enter
bound
pop
mov
inc
insb
xchg
out
jne
xor
add
jo
mov
test
rcrb
arpl
dec
jp
rorl
pop
lret
aam
cmp
push
add
sbb
stc
jns
add
xor
sti
fisubrl
cmp
clc
pop
and
mulb
and
js
push
cmp
add
aad
mov
mov
pusha
xchg
test
cltd
adcb
add
cmp
outsl
cmp
fcmovu
jne
testb
jo
es
outsl
inc
out
jo
idivl
jno
inc
cld
lock
mov
outsb
adc
lcall
iret
enter
inc
popa
mov
jo
push
mov
sbb
adc
dec
jp
aad
dec
adc
or
icebp
call
ljmp
push
addb
or
or
jp
jge
inc
ficoms
aad
mov
push
jge
push
dec
pop
sbb
jmp
mov
push
jle
fs
dec
pop
sahf
outsl
imul
mov
int
cltd
pop
fnsave
fiaddl
leave
je
push
mov
jo
lret
push
insl
dec
and
jl
mov
aam
je
std
stos
fistl
mov
mov
mov
imul
bound
mov
icebp
push
scas
pop
sti
dec
rcrb
lea
add
jne
hlt
push
dec
dec
jae
movb
and
stos
insl
xchg
push
mov
push
icebp
mov
pop
mov
or
add
repnz
inc
pop
gs
xchg
shr
lds
ja
js
js
jp
sti
popf
shlb
lcall
push
pusha
inc
cld
arpl
outsb
sbb
cmp
pop
adc
dec
push
push
int
in
or
pop
push
xchg
fisubrl
loop
mov
clc
cwtl
pusha
test
mov
es
jle
dec
cli
jbe
dec
sub
pushf
out
jnp
mov
sbb
mov
sbb
mov
iret
nop
cmp
xor
cmp
cmp
enter
sbb
ret
mov
adc
sbb
inc
push
lret
or
les
insl
arpl
sbb
scas
ret
pop
sti
enter
cmp
ja
clc
dec
stos
mov
push
jb
mov
adc
cli
mov
ret
popa
test
rclb
int3
rcll
mov
js
jne
dec
cmp
xor
imul
std
mov
mov
sbb
ljmp
push
ret
les
mov
cltd
adc
mov
adc
mov
mov
cmp
imul
stc
fucomip
mov
enter
dec
jbe
in
jge
push
pop
bound
or
int
and
push
fdiv
cmp
mov
jns
imulb
sbb
cmpsl
nop
icebp
mov
lahf
or
mov
xchg
xor
dec
mov
xchg
pop
lds
test
add
pop
fisttpll
outsl
or
mov
inc
enter
sti
or
rclb
mov
scas
cltd
movsb
orl
adc
inc
ret
pushl
xchg
hlt
xchg
pop
lcall
lret
mov
stc
loope
mov
imul
inc
ror
jl
stos
and
adc
add
xor
outsb
inc
cld
push
jmp
cmp
fists
fidivl
adc
cmc
cs
popa
or
mov
ror
pushf
mov
push
lret
fidivl
adc
cltd
movsb
sub
cmp
enter
jne
aaa
loope
imul
int
push
outsb
out
dec
dec
addb
dec
xor
dec
push
movsb
dec
adc
cmp
fisttps
ret
mov
push
jbe
fidivrs
dec
sub
xchg
sbb
lahf
shlb
aad
pusha
add
cs
daa
imul
cmp
fimuls
mov
test
jp
pop
mov
xchg
sti
mov
or
cmp
shll
mov
push
fists
mov
mov
bnd
inc
pop
dec
pop
jg
and
pop
ljmp
sbb
fisubrl
orl
das
dec
pop
addb
pushf
cmp
lock
push
sbb
mov
pop
lret
aad
addr16
push
xchg
mov
lret
push
mov
xchg
pop
mov
mov
sub
test
adc
and
mov
mov
adc
xchg
ret
xchg
dec
test
int3
lea
pushf
bound
mov
call
xchg
add
inc
pop
cmp
jnp,pt
pop
ljmp
jbe
lcall
roll
fs
popf
mov
xchg
xlat
push
outsl
mov
cmp
jne
into
cltd
mov
fisttpll
push
ds
xor
cmp
adc
inc
cmp
lret
cmp
cltd
mov
popf
imul
push
adc
aad
mov
xor
mov
pusha
xchg
cmp
xchg
sub
pushl
mov
je
pop
shld
dec
add
aas
jbe
lahf
or
mov
mov
pop
orl
mov
dec
cmp
and
loop
arpl
pushf
stos
test
push
rcr
mov
shll
cmc
mov
push
test
test
pusha
rorl
ret
sub
loop
icebp
xchg
sub
fistpll
lret
mov
lret
mov
sbb
cmp
adc
cld
add
push
loop
lret
xor
cmpsl
fisttpl
adc
xchg
jp
outsl
mov
mov
mov
push
ret
mov
xchg
mov
push
pop
cmp
mov
mov
aad
inc
arpl
cli
or
push
mov
stos
mov
sahf
ljmp
pop
mov
mov
clc
sbbl
or
sahf
rcl
and
mov
pop
test
push
mov
mov
lret
push
adc
lret
cmp
push
cltd
in
jmp
jp
test
sahf
test
adc
clc
mov
mov
cmpb
mov
movsb
add
mov
ret
jno
xor
cwtl
ficomps
stos
stc
or
cli
mov
out
sub
lahf
popf
in
lcall
cltd
shlb
inc
fwait
mov
xlat
hlt
mov
jae
insl
test
in
out
xchg
movl
cs
jno
js
cld
rcrb
movb
jne
lcall
dec
lock
mov
stc
jp
jb
mov
stos
lds
icebp
mov
jmp
lahf
in
ss
xchg
mov
xchg
mov
push
xchg
mov
adc
pushf
out
fdivrs
movsb
out
mov
and
mov
push
jno
enter
lahf
rclb
int3
mov
inc
lret
nop
mov
rcrl
push
cltd
push
jb
mov
and
das
les
push
dec
rcll
and
inc
dec
mov
shlb
movsb
fwait
rcll
addr16
fwait
xchg
jb
push
in
sub
push
out
jmp
dec
or
mov
cmpsb
lcall
dec
mov
subb
xchg
add
sub
mov
fidivrl
push
sti
cltd
ljmp
push
jecxz
ss
addl
mov
andb
nop
pop
mov
into
push
inc
mov
mov
test
xchg
push
mov
lea
ds
sbbl
addr16
add
jge
push
and
pop
icebp
mov
imul
test
stos
xchg
jecxz
jge
mov
push
jnp
pop
ret
lret
and
shrb
pop
mov
ret
imul
dec
jge
push
not
push
mov
and
jp
stc
add
pop
dec
fistps
push
mov
sbbl
outsl
aad
gs
rcr
push
js
outsl
sbb
push
xchg
lret
push
push
in
adc
mov
lret
mov
lcall
mov
push
subl
pusha
and
adc
and
sbbb
jmp
lcall
outsb
pop
movsb
adcb
and
out
push
push
push
call
cltd
fimuls
pop
movsb
les
xchg
jnp
outsl
outsl
dec
fistl
push
mov
xchg
xchg
negb
ja
xor
fistps
data16
ret
fidivl
dec
jo
jns
jp
js
ja
jb
push
das
cmp
dec
mov
jge
sub
lret
mov
adc
fxam
pop
sub
shl
test
mov
sub
dec
mov
lods
shrb
jbe
cltd
xchg
lret
cld
mov
push
pop
or
or
mov
rclb
jecxz
push
in
int
pusha
mov
pusha
les
mov
adc
jno
addr16
jne
xchg
dec
or
adc
int
jno
jecxz
cmp
arpl
pop
mov
pop
push
je
jbe
xchg
jae
gs
cmp
xchg
push
or
adc
xchg
out
mov
cli
sub
or
xchg
cmp
iret
ljmp
jb
xchg
or
pusha
or
loope
xchg
mov
push
loope
pop
mov
das
cli
sbb
mov
and
outsb
jl
and
fcomps
mov
mov
dec
fdivrs
pop
push
arpl
mov
jno
inc
push
arpl
xor
imul
xchg
cmpsb
jae
jno
push
push
mov
jb
jnp
es
sti
pop
mov
shll
sbb
jno
arpl
adc
and
adc
imul
mov
fucom
lods
aas
mov
scas
dec
fs
fisubrl
jecxz
js
rorb
sbb
fisubrl
inc
mov
dec
push
sbb
rorb
scas
filds
mov
fnsetpm(287
push
lcall
add
je
je
push
dec
movsb
or
inc
lcall
loope
sbb
dec
push
push
loop
add
outsl
aam
jae
rcll
jno
fildl
cmc
mov
pop
mov
xchg
int3
les
cltd
mov
pop
push
jnp
and
jbe
dec
fidivl
mov
push
lea
out
mov
pop
stos
movsb
les
pop
lret
cmc
testb
dec
jp
mov
mov
fs
int3
andb
je
clc
popa
or
mov
dec
push
fs
lret
cmp
and
pop
xchg
push
mov
nop/reserved
lods
in
mov
or
adc
push
xor
mov
movsb
dec
cltd
into
imul
lret
fwait
adc
dec
adc
fnsave
std
inc
dec
dec
cmp
fdivrs
mov
mov
and
fs
lret
adc
lcall
push
sbb
xchg
sbbb
pusha
arpl
add
pushf
add
rorl
adc
xchg
andb
xlat
pushf
stc
test
mov
push
cltd
sbb
ret
in
cmp
or
or
mov
push
push
lds
dec
addl
jmp
shlb
jns
and
or
or
jbe
icebp
jne
xchg
iret
cs
test
int
loope
jge
ja
cltd
subl
enter
dec
clc
loopne
dec
ljmp
push
cli
and
fucomp
enter
jnp
ljmp
sbb
xchg
adc
jbe
in
mov
sbbl
idiv
sbb
mov
dec
cmp
movsb
cltd
js
fidivrl
ja
and
push
inc
scas
dec
test
push
lahf
lea
push
addr16
cwtl
mov
fcomps
pop
lahf
popf
lret
stos
adc
dec
data16
xchg
lret
adc
les
inc
jp
mov
test
push
xor
imul
je
pop
orl
imul
scas
xchg
mov
mov
jge
push
gs
jbe
mov
xor
cli
in
push
enter
pop
icebp
push
fwait
push
and
push
orl
cmp
and
adc
xor
ja
popa
ret
icebp
sahf
cli
pop
jno
cltd
clc
dec
notb
adc
out
xchg
mov
xor
push
shll
push
scas
std
shr
mov
jecxz
scas
dec
xchg
lds
std
pop
std
bound
imul
add
jge
subb
notb
outsl
stos
icebp
addl
mov
dec
push
ja
repz
mov
cmpb
int
or
in
movsl
movsb
cld
pop
jmp
and
std
lds
lret
fdivr
sti
adc
and
pop
jae
int
mov
mov
shrl
xchg
ja
jae
xor
lcall
dec
xor
and
pop
mov
push
push
sbb
out
cmp
aaa
push
outsb
mov
xchg
push
push
or
outsb
mov
fnstcw
cli
and
ja
ja
mov
adc
mov
rcr
pop
js
imul
inc
sbb
mov
es
dec
fyl2x
pop
jne
jnp
push
adc
fiaddl
mov
xchg
lock
out
jg
push
dec
xchg
push
cld
sbb
ljmp
fisubrs
pop
test
into
ret
xchg
mov
and
js
pop
lret
mov
lret
test
push
mov
clc
rcrl
shl
sarb
xlat
jge
pusha
faddl
adc
dec
pop
movsb
mov
test
dec
popa
mov
xchg
xchg
lret
push
out
push
sbb
sti
dec
or
imul
dec
lret
fldenv
pop
add
pop
push
push
loop
push
sahf
push
pop
push
add
inc
jno
add
enter
roll
xor
mov
and
fnstcw
push
aas
adc
loop
testb
and
adcl
add
dec
mov
jecxz
loop
or
and
subl
mov
scas
cmp
sbb
xchg
mov
inc
push
mov
enter
mov
jg
unpckhps
jb
add
enter
fiaddl
and
mov
loopne
cmp
fstpt
xor
cmp
psubq
mov
lds
push
mov
mov
fists
filds
xchg
xchg
mov
cltd
lahf
loope
addl
dec
sti
and
rol
gs
clc
mov
test
adc
lcall
insl
ficompl
or
mov
outsl
sbb
inc
fmull
dec
popf
or
cs
repz
jg
ds
popa
enter
hlt
fcomps
mov
cmp
dec
data16
arpl
mov
xchg
movsl
arpl
cmp
popa
xchg
or
pop
push
xchg
sub
outsl
mulb
insb
stos
icebp
pop
jp
movsb
mov
jge
dec
movb
vmovhpd
insl
dec
mov
xchg
fsts
push
imul
jno
mov
push
or
push
outsl
divl
rolb
mov
or
push
dec
mov
fcmovnu
loop
jne
push
cld
dec
jns,pn
ss
mov
cmp
movsl
xchg
push
cmp
dec
mov
stos
mov
push
sbb
fwait
popa
pop
jmp
sub
cmpsb
cmc
xor
lods
inc
daa
and
xor
ds
ja,pn
in
push
les
xor
cs
scas
and
ljmp
xor
lock
mov
xchg
jb
dec
mov
cmpsb
dec
push
mov
mov
into
mov
lods
cmpsb
mov
cs
out
sub
mov
and
sbb
ds
lods
sahf
das
or
cs
or
ss
in
ds
push
jb
cs
sub
out
outsb
xchg
xchg
jnp
into
jns
cs
mov
mov
or
push
cmpsb
jb
outsb
outsl
xor
out
daa
push
mov
dec
push
into
inc
mov
xchg
mov
out
out
mov
lock
mov
mov
push
push
jb
jp
xor
sub
xchg
dec
lcall
sub
mov
and
outsb
sub
jns,pn
outsb
aaa
push
xor
cwtl
xchg
mov
mov
scas
ds
xor
push
data16
ds
mov
push
aaa
aaa
out
out
or
cwtl
push
mov
int3
ss
iret
xchg
insb
sub
mov
sahf
scas
jb,pt
out
jns
ss
fidivrl
scas
pop
or
outsb
mov
xor
cmp
ds
cmp
mov
aaa
scas
mov
mov
into
jb
adc
out
ss
pop
or
pop
outsb
push
pop
and
int3
ss
das
daa
pop
dec
sub
stos
or
ss
inc
adc
outsb
push
push
outsl
sub
testb
cmp
outsb
mov
int3
pop
jns
mov
pop
mov
or
mov
out
ds
int3
pop
jns
xchg
xor
push
fsubrp
out
push
pop
pop
daa
ds
mov
push
ds
imul
cs
push
ljmp
mov
jo
mov
cmpsb
sbb
outsb
int3
inc
dec
testb
pop
out
xchg
cs
ds
pop
sahf
inc
data16
inc
dec
scas
mov
inc
mov
pop
fwait
daa
mov
dec
fisubrs
pop
ss
jb
inc
insb
inc
dec
push
ss
lock
push
mov
es
mov
lret
mov
out
xlat
or
dec
pop
pop
jecxz
outsb
mov
out
cmp
cwtl
out
mov
sahf
jb
and
scas
ss
xchg
inc
ljmp
jb
mov
xchg
out
out
out
or
push
int3
sahf
dec
push
inc
aaa
push
ljmp
or
insl
ds
inc
scas
pop
daa
ljmp
mov
inc
jbe
jns
push
dec
xchg
mov
ds
int3
dec
imul
mov
out
or
pop
outsb
or
pop
ss
pop
jb
lcall
scas
push
adc
cs
imul
ss
jae
pop
xchg
mov
pop
insl
jbe
jg
xchg
out
mov
mov
inc
scas
lods
cmpsb
adcb
mov
in
hlt
sbb
mov
and
push
cmp
cmp
pop
mov
pop
fcomps
xor
cmp
scas
push
roll
xchg
pop
sbb
cmp
mov
add
mov
sub
inc
dec
mov
out
mov
mov
inc
mov
pop
dec
inc
jp
sub
mov
fidivrl
cmp
into
dec
into
adc
bound
sub
outsb
push
aaa
push
push
xchg
mov
sub
cmp
loopne
mov
xlat
mov
dec
sub
jle
xchg
test
mov
mov
sahf
out
out
mov
outsb
xchg
stos
xor
jbe
mov
mov
cmpsb
jp
sahf
scas
dec
mov
pop
ret
mov
jb
mov
mov
push
pusha
mov
outsb
dec
sub
mov
cmp
out
mov
scas
repnz
mov
pop
daa
mov
outsb
imul
sahf
pop
push
mov
push
leave
dec
xchg
mov
bound
push
sub
push
pop
das
cs
add
ja
mov
mov
lret
pop
push
aaa
sbb
outsb
stos
scas
repnz
mov
test
cmp
sarl
jbe
test
jo
ss
cwtl
xor
jbe
mov
push
scas
cmp
pop
enter
push
outsb
out
mov
into
sub
lods
mov
and
push
xor
sub
lods
mov
add
testl
mov
xchg
and
outsb
sahf
lahf
jl
sub
shlb
lods
insb
sub
enter
lods
mov
out
sub
mov
sbb
cs
movsb
scas
cmpb
inc
imul
out
orl
pop
subb
inc
lods
mov
out
xor
sbb
mov
sbb
test
jp
imul
out
xchg
xchg
lahf
xchg
ss
mov
imul
xchg
sub
testl
sub
outsb
xor
xor
xor
inc
mov
mov
dec
fisubrl
push
scas
sbb
xor
inc
das
pop
dec
jbe
mov
fcmovbe
ljmp
dec
ljmp
inc
mov
mov
sbb
push
out
das
jle
cmpsb
jae
into
mov
mov
cmp
lea
out
js
add
into
mov
push
pop
adc
lods
scas
mov
cs
inc
lods
in
push
js
dec
out
add
out
push
push
xchg
ljmp
pop
lods
in
sub
bound
sub
xchg
aaa
jbe
lcall
ljmp
orb
cmp
push
out
mov
inc
mov
ss
cmp
mov
lods
mov
and
movsb
xchg
jmp
inc
mov
add
dec
stc
inc
sahf
divb
xchg
aaa
les
sbb
or
sahf
test
adc
test
mov
imul
mov
ds
fsubrs
leave
stos
dec
push
push
dec
mov
ja
mov
lods
aas
sub
into
lods
lock
orb
xor
pop
jp
scas
push
mov
outsb
sub
cmp
mov
pop
out
outsb
dec
lcall
cmp
dec
cli
jne
mov
lds
mov
out
mov
mov
push
mov
cmp
mov
dec
mov
jb
out
mov
lret
mov
mov
out
mov
sub
imulb
and
xchg
jp
sub
cli
ljmp
xor
cli
shrb
sbb
sub
int3
das
mov
js
dec
scas
xor
ja
cmp
mov
js
dec
add
sahf
mov
imul
movsl
mov
outsb
mov
mov
mov
scas
out
inc
mov
das
fadds
push
mov
decb
pop
pop
xor
clc
dec
adc
lods
insb
xor
repz
out
xor
repz
fld
rolb
mov
cmp
stc
inc
lock
ja
push
sbb
aas
xor
dec
enter
inc
imul
orl
out
leave
mov
xchg
lret
push
ds
lret
aaa
ljmp
mov
dec
cmp
add
aaa
mov
xchg
cmp
cmp
cmp
cmp
lods
ss
cmp
sbb
cmp
mov
jb
cmp
cmp
dec
lcall
cmp
mov
out
aas
incl
outsb
mov
sbb
ficoml
ljmp
cmp
cmp
mov
push
inc
or
inc
inc
movsb
mov
outsb
mov
mov
lcall
insb
out
inc
loopne
out
lods
mov
out
inc
add
orl
inc
ljmp
clc
dec
dec
bound
insb
dec
hlt
into
xchg
das
cs
dec
addl
pop
cmp
cmp
outsb
cmp
cmp
inc
scas
inc
cmp
inc
outsb
inc
mov
dec
inc
push
dec
scas
stos
mov
cmp
dec
sub
mov
jbe
xchg
mov
dec
jo
adc
push
cmp
sbbb
mov
fidivl
xor
mov
dec
ret
add
dec
out
xchg
das
scas
mov
mov
push
test
sbb
sbb
loope
cli
dec
outsb
imul
pop
push
mov
dec
pop
lea
dec
xchg
xchg
fcmovne
jb
mov
pop
lea
xchg
mov
push
js
dec
out
mov
cmp
add
cmp
cmp
pop
dec
inc
or
dec
mov
movsb
push
mov
lcall
pop
pop
jle
xchg
dec
stos
mov
cmpsl
js
jbe
pushf
ja
pop
popf
cmp
mov
or
inc
or
js
dec
add
pop
jg
jns
loop
das
add
xchg
jecxz
fmulp
mov
mov
inc
push
or
repnz
pop
clc
lcall
repnz
and
mov
sbb
pusha
dec
ds
stos
xchg
bound
cmpsl
xor
js
sub
xor
dec
push
push
sub
mov
pop
cs
sahf
fistps
out
push
inc
sub
shll
jl
sahf
push
pop
xchg
jg
push
pop
ret
movsb
ja
inc
bound
fistps
int3
push
sbb
ljmp
fisubs
sub
fidivl
cmp
jge
bound
push
mov
int
mov
mov
scas
mov
jp
sbb
data16
push
frstor
sahf
sbb
cmp
push
lock
bound
out
xor
dec
push
inc
xor
movb
inc
push
or
push
xor
bound
bound
xor
jbe
imul
out
cmp
sub
jb
sahf
xor
imul
adcl
pop
ss
enter
bound
mov
xorb
shll
sub
lods
push
mov
fadds
scas
out
cmp
push
ficompl
aas
aaa
andl
pop
div
mov
scas
ss
sbb
cmp
cmp
bound
sahf
cmp
bound
sub
lock
sahf
mov
out
lret
mov
sbb
pop
ds
stos
ss
lcall
enter
sahf
inc
ds
dec
mov
cmp
ds
mov
insb
sahf
scas
aas
adc
cmp
fs
int
mov
inc
sbb
inc
mov
inc
lods
push
xor
mov
inc
aam
jge
bound
sahf
jl
bound
push
xchg
jle
inc
lock
mov
out
iret
mov
sbb
aam
push
inc
xchg
bound
sub
inc
stos
sarb
fadds
jns
fiaddl
mov
shlb
adc
inc
ja
xor
mov
and
dec
lods
push
mov
fidivrl
aam
push
dec
xchg
bound
jle
shr
mov
lods
pop
cmp
fsubl
cmp
popa
xchg
fdivrs
dec
bound
imul
dec
fidivrl
dec
jmp
push
mov
ds
data16
popa
mov
dec
ret
dec
out
out
ret
pop
roll
sub
inc
lahf
sub
xchg
out
ljmp
outsb
push
mov
push
cmpb
into
mov
out
lret
pop
xor
push
imul
mov
outsb
lret
call
push
bound
push
mov
inc
mov
bound
cli
outsb
sahf
push
mov
pop
stos
mov
fdivr
aas
push
andl
pop
mov
mov
aaa
jle
or
cmp
xchg
aam
jge
bound
sahf
jl
bound
pop
xchg
mov
or
sahf
pop
pop
cmpsb
dec
fisubs
out
pop
jg
xor
bound
push
pop
pop
xor
mov
out
cmpsl
in
dec
ljmp
sahf
pop
andb
sahf
pop
andl
mov
pop
pop
aas
test
ja
fidivl
cmp
cmp
scas
pop
jg
xor
or
outsb
inc
pop
mov
pop
pop
aas
test
fsubrs
sub
inc
test
movsl
pop
aas
nop
ja
sub
sub
mov
xor
mov
out
sub
xor
mov
sub
push
mov
int3
scas
ss
push
aaa
int3
sub
dec
cmp
cmp
push
sub
mov
fiadds
or
aas
push
pop
inc
xchg
dec
inc
aaa
push
out
mov
mov
aaa
or
inc
inc
mov
insl
mov
scas
adc
insb
inc
dec
jp
scas
out
fimuls
adc
bnd
mov
scas
push
stc
push
cmp
int3
add
jb
je
mov
imulb
dec
pop
outsl
lcall
push
pop
sub
ss
ds
jp
mov
sbb
push
cmpsb
scas
loop
push
or
pop
cs
mov
dec
push
inc
dec
das
push
ret
cmp
dec
cmp
xchg
push
mov
subb
lds
ret
mov
push
push
mov
jne
jle
fmul
fidivs
jmp
scas
aam
cmp
inc
dec
lahf
push
sub
adc
cmp
jl
int
ja
mov
push
dec
aad
lcall
xchg
cmp
and
test
subb
mov
cwtl
mov
bound
xor
sub
xlat
cmp
fs
xlat
sbb
imul
push
dec
fisubrl
fadds
outsb
mov
clc
push
mov
lock
push
xchg
sub
lods
imul
out
flds
mov
dec
lret
mov
out
xor
lret
pop
fisttpl
xchg
xchg
mov
cmp
push
xchg
mov
ljmp
sub
sahf
jne
adc
cltd
pop
xor
mov
cmp
or
mov
lods
push
lret
not
push
mov
bound
outsb
xor
dec
mov
xor
mull
bound
xor
xor
clc
mov
clc
in
mov
or
lahf
lret
aaa
push
stc
mov
stc
imul
arpl
xchg
insb
inc
dec
push
imul
cs
in
sahf
sub
push
stos
pop
push
repnz
xor
mov
pop
and
stos
mov
loope
into
xchg
dec
lret
enter
in
push
xor
ret
mov
dec
cmp
stos
shrb
adc
dec
das
jbe
mov
inc
dec
push
fildl
pop
jb
lret
out
scas
cmpb
ja
ljmp
mov
sub
sbb
push
ss
dec
scas
fstp
push
xchg
inc
lds
cmp
mov
aad
jp
dec
xchg
xchg
lds
mov
inc
outsb
jno
cli
fidivl
popa
ljmp
sub
push
std
mov
dec
outsb
stc
cmpsb
outsb
xchg
sub
fisubrs
dec
lods
sahf
adc
sahf
xchg
lret
outsb
and
mov
cltd
stos
xchg
sub
push
mov
outsb
mov
sbb
jge
bound
aaa
mov
ja
bound
sub
xchg
and
leave
ficompl
push
stc
mov
push
pop
push
push
mov
push
xchg
aaa
mov
fadds
inc
insl
sbb
dec
das
das
cmp
movd
push
xor
aaa
inc
sarb
data16
lds
mov
sub
dec
push
add
ss
push
into
js
jmp
jecxz
mov
push
jp
loope
xorb
dec
push
inc
ljmp
sub
inc
dec
jecxz
cmp
jecxz
xchg
cld
scas
addb
pop
shrb
ret
scas
xchg
andl
inc
add
sahf
xchg
bound
nop
addb
in
ret
push
in
or
inc
add
bound
loop
pop
jbe
out
jl
out
out
mov
xor
mov
aad
push
xchg
scas
fcoms
xor
out
push
dec
inc
dec
out
push
fcmovnbe
scas
sbb
sahf
xor
mov
push
lea
dec
call
and
cld
scas
mov
bound
mov
xor
mov
jmp
scas
mov
bound
fldcw
imul
fs
ljmp
sahf
cmp
inc
sahf
xor
data16
cmp
scas
jmp
mov
cmp
bound
sahf
ss
xchg
aas
cmp
in
scas
ret
in
adc
ficomps
pop
cmp
lret
repz
cmp
lcall
mov
fisttpl
push
push
xor
scas
fisubrs
sahf
cmp
bound
bound
ds
mov
pop
sub
sahf
stos
ret
push
shlb
jno
inc
aas
xchg
lock
stos
cld
subb
adc
int
clc
ret
mov
repnz
ljmp
sub
dec
mov
xchg
xor
pop
mov
orb
lret
or
pushf
into
mov
mov
insl
out
fstps
adc
aaa
add
push
mov
repnz
das
sub
push
cmpsb
push
push
scas
pop
sub
push
outsl
push
xorb
scas
lock
push
mov
loopne
sub
push
stos
mov
add
repz
mov
insl
add
hlt
jo
dec
jg
xchg
mov
stos
lret
dec
xorl
dec
mov
cmp
mov
mov
lock
imulb
or
outsb
out
mov
shlb
and
stc
pop
ljmp
xchg
ljmp
xor
int3
and
jns
xchg
fmul
and
imul
pshufw
out
fxrstor
push
sbb
scas
popa
push
xchg
repnz
bound
jnp
mov
inc
pop
adc
mov
add
inc
bound
roll
dec
lahf
lret
jo
bound
sub
popa
push
dec
mov
mov
test
sub
push
or
popa
out
dec
add
xor
push
cs
adc
scas
adc
lods
jl
bound
sahf
push
das
jecxz
loop
dec
lahf
push
push
loope
inc
dec
adc
jle
ficoml
lods
jl
bound
cmpsb
sbbl
jp
push
dec
adc
push
cwtl
sub
mulb
add
fiaddl
jge
lret
test
movsb
movl
push
add
inc
call
adc
inc
pushf
lods
out
jp
add
inc
or
pop
push
dec
sub
jo
fdivrs
bound
orb
aaa
cld
fiaddl
jge
lret
jbe
bound
push
divb
faddl
mov
sbb
jge
lret
dec
ljmp
cmp
jae
ret
out
bound
or
je
or
dec
ret
sbb
push
lds
cmp
lock
mov
bound
push
lock
ljmp
lahf
out
aad
fidivs
incl
jge
lret
mov
cmp
fsubl
sbb
lret
out
sahf
clc
jge
lret
rcrb
push
or
cli
mov
arpl
bound
jo
sbb
or
sahf
inc
mov
outsb
mov
mov
xor
lret
sahf
inc
bound
fsubrl
push
dec
aad
bound
lock
or
into
lods
imul
dec
stos
mov
out
dec
mov
pop
jge
or
cmp
push
dec
push
ret
mov
mov
pop
mov
dec
push
push
negl
push
xchg
inc
popa
push
cmpsb
cmpb
scas
xchg
adc
dec
stos
mov
out
dec
mov
outsb
mov
and
sbb
pop
loop
jno
int
or
imul
mov
out
push
push
enter
in
std
dec
push
ljmp
ljmp
call
dec
out
aaa
ljmp
mov
dec
leave
dec
push
jmp
cwtl
ficompl
cmp
push
clc
loop
sbb
pop
test
jp
xor
ficoml
bound
xor
fidivl
rcrb
sub
sub
cmp
inc
fidivrl
push
bound
push
stos
mov
out
pop
mov
ja
adc
cmp
lahf
outsb
fistps
mov
lret
sahf
mov
sub
bound
rcrl
mov
fimull
shl
out
sub
idivb
jo
out
clc
fisttps
xor
xchg
sbb
or
xchg
outsb
dec
ds
mov
push
sub
xchg
xor
lret
xchg
inc
mov
dec
lret
push
dec
aaa
sub
or
cwtl
and
inc
bound
dec
mov
stos
js
outsb
cmc
mov
mov
dec
sub
bound
or
xchg
mov
dec
out
pop
dec
lcall
mov
pop
das
dec
cmpsb
push
aad
dec
jb
push
and
cmp
push
adc
pop
inc
sub
and
into
out
and
negl
sub
and
mov
cmp
sbb
scas
lcall
fisubs
add
dec
mov
sbb
dec
cltd
stos
shrl
out
inc
or
fimull
pop
data16
daa
jmp
ds
popl
pop
sbb
jo
ficoms
cs
mov
out
cs
aas
das
inc
sbb
cmp
dec
inc
xor
xor
push
mov
mov
push
cwtl
mov
jo
sbb
scas
jb
daa
push
pop
sub
data16
mov
xor
or
xor
cli
cmp
fs
pop
mov
jge
push
int
adcb
pop
mov
das
pop
push
add
aaa
mov
pop
ljmp
mov
push
mov
scas
stos
insl
sarb
xchg
jecxz
fdivrp
stos
or
push
mulb
push
mov
pop
mov
jle,pt
dec
push
dec
aad
notl
jbe
aad
out
cli
test
push
bound
fildll
mov
push
out
sti
test
clc
fisubs
cld
stos
push
cmp
sahf
iret
cmpsb
enter
bound
out
std
cmp
pop
push
enter
mov
xor
jp
pop
aas
lods
testb
clc
jge
outsb
scas
sbb
jb
mov
dec
shrl
and
adc
push
push
bound
add
imul
subb
out
notb
jmp
ja
push
icebp
stos
scas
add
mov
fdivs
outsb
ja
push
icebp
stos
scas
add
mov
mov
push
icebp
stos
scas
add
out
mov
mov
rorb
dec
mov
push
data16
mulb
jp
aam
outsb
scas
push
test
xorb
pop
lret
into
push
adc
aad
pop
lahf
and
mov
bound
or
mov
mov
rclb
cmp
or
push
and
negl
jge
outsb
bound
jo
or
or
ja
in
cmpsb
cmp
mov
mov
in
outsb
mov
mov
sbb
cmp
fcmovne
push
sbb
sahf
inc
bound
xchg
sahf
cld
leave
push
negb
aaa
cmp
or
out
stos
push
cld
leave
push
negb
xchg
out
insl
push
aad
xor
dec
or
fdiv
insl
inc
imul
test
mov
ds
dec
js
ret
test
sbb
pop
sbb
divb
jp
mov
push
cmp
sub
dec
test
testb
jp
dec
bound
leave
pop
clc
push
fcmovu
push
push
rol
pusha
push
push
imul
pmaxsw
pusha
lcall
dec
sub
cmpl
stos
sub
lret
jb
dec
stc
push
movsl
int
orb
cmp
in
out
das
inc
sub
push
jle
pop
dec
cs
pop
mov
dec
pop
into
aaa
adc
or
cmp
mov
gs
test
push
cmp
mov
pop
test
mov
xchg
dec
push
mov
divb
and
sub
cmp
sbb
adc
sub
fwait
cmp
cmp
fimull
mov
std
add
mov
push
ret
or
dec
or
mulb
pop
insb
mov
pop
mov
add
inc
adc
rorb
xor
ja
pop
andb
mov
inc
outsb
dec
dec
movsb
push
lcall
loop
movsl
ss
pop
lock
add
sahf
and
add
dec
xor
mov
je
fwait
cmpb
pop
test
pop
xchg
stc
pop
stos
sbb
dec
test
dec
fs
jbe
les
dec
loopne
jg
push
pop
dec
lret
push
or
xchg
idivb
push
adc
les
push
adc
adc
xchg
mov
mov
add
sarb
or
dec
mov
ret
mov
push
notl
in
lcall
popl
bound
push
sbb
ja
bound
decb
popa
add
mov
pop
xchg
fisttpl
je
fdivs
or
in
xlat
push
sbb
dec
jbe
mov
push
pop
cwtl
sub
push
sub
popf
in
bound
fwait
push
js
bound
or
ret
imulb
mov
jb
popf
ret
test
sbb
xor
xlat
pop
pop
pop
outsb
rclb
fnstenv
scas
cs
ja
andl
div
bound
pop
xor
fcomps
adc
push
sbb
adc
fisubl
scas
sbb
negb
xchg
push
pop
jp
cmp
pop
rclb
data16
sub
push
ljmp
cmp
mov
mov
lds
lds
jno
notb
xor
sbb
es
add
cmp
adc
cmp
sbb
sub
in
stos
inc
aas
xchg
add
cmp
lcall
bound
fsubrs
clc
cs
sub
aad
into
aad
loop
add
adc
sub
cmpsb
jo
jle
push
sbb
clc
loop
and
dec
cs
es
sbb
mov
out
cmp
punpckldq
mov
aad
es
cmpsl
bound
sbb
xor
lcall
push
add
push
pop
loopne
sbb
pop
jo
or
mov
icebp
add
fdivrs
aas
sub
and
dec
jecxz
into
and
std
lcall
adc
sub
lcall
jge
mov
add
mov
out
push
push
jns
cmp
mov
pop
mov
dec
and
mov
pop
xor
rolb
mov
sahf
add
cmpsb
sub
lret
int
rorb
or
cmpsb
or
fmull
lahf
pop
rclb
xchg
pop
pop
subb
outsb
or
scas
xchg
mov
push
pop
push
fcmovbe
rorl
jg
lahf
or
dec
inc
sub
outsb
or
verr
imul
sub
outsb
lret
sub
int
jp
mov
ud0
jbe
cmpsb
xchg
and
sub
movsb
test
outsb
incb
sub
aaa
pop
jo
push
sub
lret
jbe
sub
sahf
out
rcl
pop
das
ljmp
jmp
pop
in
dec
cs
pop
das
cmp
inc
imul
push
dec
xor
mov
ss
pusha
inc
push
imul
xor
lahf
xor
push
pop
mov
mov
or
push
jp
fdivs
aaa
inc
bound
aaa
gs
cmp
add
ret
pop
mov
dec
xchg
inc
sbb
pushf
mov
push
jp
dec
aad
lcall
cmp
inc
fstpl
cmp
cmp
push
mov
inc
fstpl
cmp
sarl
roll
mov
mov
push
fisubrs
sbb
push
icebp
push
mov
sub
cmpb
out
cmp
sub
mov
sub
adc
adc
jp
push
sbb
push
ja
bound
xchg
jecxz
bound
xchg
hlt
pushf
es
inc
ja
pop
shll
cmp
pushf
es
mov
pop
jmp
xchg
dec
push
mov
mulb
push
cmp
push
rcrb
ja
in
imul
jle
cld
push
sbb
out
call
inc
inc
ja
pusha
fisubl
dec
or
fisubl
mov
sbb
bound
fcmovne
push
adc
outsb
repnz
ja
shll
inc
sahf
ljmp
bound
in
es
jp
inc
ja
push
idivb
pop
out
jno
sbb
sbb
ljmp
in
es
inc
ja
popa
andb
out
xchg
arpl
mov
mulb
movsl
or
shlb
inc
mov
stos
jl
dec
sbb
adc
outsb
repz
ja
in
cld
dec
sbb
adc
in
cmp
dec
subl
out
sahf
clc
test
mov
ficoml
mov
icebp
dec
mov
ja
andl
test
bound
nop
outsb
test
dec
jle
shll
testb
es
das
outsb
cmp
dec
and
lea
pushf
pop
setl
pushf
bound
pushf
sbbb
inc
mov
outsb
sub
insl
sahf
test
scas
clc
adc
cmp
stos
mov
std
ffree
clc
adc
pop
test
pop
sub
lcall
bound
lods
pop
sub
popa
sahf
lods
ret
adc
push
inc
push
arpl
pop
or
lods
jmp
dec
bound
push
mulb
lret
pop
xchg
jp
jo
push
lcall
jp
jne
mov
jecxz
mov
push
aaa
scas
pop
mov
jp
xor
push
or
aaa
push
mov
mov
jbe
mov
dec
dec
mov
bound
xchg
sbb
mov
popa
pop
test
adc
mov
or
cmp
fisubl
cmpsb
jmp
xchg
mov
mov
xor
push
sbb
lcall
mov
pop
fidivs
out
push
jo
mov
xor
aad
pop
scas
cmp
scas
mov
loop
adcb
popa
jno
cmp
push
pop
cmp
jne
pop
ss
pop
aaa
fisubs
xor
shlb
mov
fstpl
faddp
or
xchg
mov
inc
arpl
sub
dec
lahf
push
push
ficompl
lods
jmp
push
sahf
ficompl
mov
or
push
lret
jp
pusha
inc
jnp
adc
push
ret
and
int
push
dec
xor
aaa
push
std
or
sbb
fwait
add
sub
rcrb
jnp
sub
hlt
sub
push
sub
ss
call
and
mov
das
push
sub
xchg
aad
dec
ss
ret
mov
xchg
dec
mov
mov
mov
addl
mov
mov
test
xchg
inc
pop
daa
mov
sub
outsb
and
notl
std
or
mov
inc
bound
test
mov
std
fsubs
or
stos
lahf
repnz
lcall
mov
inc
nop
mov
push
inc
lahf
push
push
jecxz
rclb
pop
or
fs
dec
push
js
dec
out
push
add
orb
xchg
xchg
xor
sbb
mov
sub
inc
push
mov
rorl
js
push
push
xchg
pushf
push
inc
lods
fildl
mov
pop
lock
push
dec
jg
xor
push
outsb
mov
lock
fcoms
mov
lock
pop
push
mov
xor
repnz
push
ret
mov
cld
fmuls
loop
xchg
inc
xchg
push
mov
lret
loop
scas
sbb
cmp
dec
jp
mov
insl
or
push
mov
pop
dec
lret
dec
push
bound
or
cs
popa
lods
or
ds
jg
dec
lret
dec
push
push
dec
arpl
sub
out
das
divb
movsb
dec
inc
xor
add
sub
cmp
fs
insl
gs
movb
ljmp
bound
mov
jl
sub
pop
call
jo
and
lret
sbb
jp
sbb
jge
push
jb
sub
bound
xchg
sahf
int
ret
pop
mov
pop
jecxz
jp
je
fistps
rcrb
movd
bound
xchg
pop
mov
mov
bnd
jl
bound
adcl
push
cmp
or
into
push
add
cmp
sub
push
add
sbb
out
fwait
or
add
and
imul
xchg
sbb
ret
bound
sub
out
jnp
pop
xchg
push
stos
sbb
dec
lcall
and
andb
fnstsw
bound
ret
add
mov
out
jp
insb
mov
sub
adc
arpl
xor
das
sbb
jl
call
jl
bound
mov
mov
bound
xchg
scas
jp
outsb
pop
jg
dec
mov
ds
mov
add
mov
mov
sub
fisubrl
rorb
cmpsb
in
jo
cwtl
mov
mov
xchg
ret
jo
jbe
fisubl
cmp
sub
les
bound
sbbl
frstor
mov
push
fimull
cmp
negb
ret
sbb
pop
ret
push
sar
push
ret
push
sar
in
xchg
cmp
or
ror
push
xchg
imul
ret
sbb
pop
jmp
xchg
dec
fs
stc
loopne
push
push
pop
push
outsb
bound
jecxz
stos
pop
push
imul
jae
mov
scas
dec
jg
xor
punpckldq
push
and
je
jmp
out
cmp
push
sub
scas
popl
pop
push
lock
dec
bound
push
jle
push
cmp
ljmp
sub
icebp
pop
dec
out
cmpsl
ficoml
jne
jmp
jmp
aam
ljmp
frstor
jg
or
divb
cmp
push
fmul
push
jbe
xchg
push
xchg
incb
cmp
jns
xor
imul
into
push
dec
pop
ja
push
fdivrl
cmp
adc
out
decb
ja
imul
adc
push
imul
sub
into
or
aas
push
xor
add
outsb
ds
int
lret
adc
push
insb
imul
into
or
push
call
adc
add
sahf
pop
aas
lods
cmp
pop
xchg
xor
mov
pop
pop
frstor
sahf
push
push
push
lods
imul
lods
sbb
sahf
mov
bound
pop
andl
scas
cs
imul
push
dec
pop
frstor
sahf
push
push
lods
imul
scas
or
push
lock
xor
bound
xchg
jo
out
push
int3
ss
mov
shll
xor
js
stc
dec
lcall
or
test
scas
in
ss
sub
pop
xchg
lods
cs
push
ljmp
test
sub
call
push
jo
jb
xchg
js
addb
orb
sub
fucomip
mov
push
sub
scas
adc
mov
ljmp
std
imul
les
jb
push
ljmp
das
fimull
push
xor
mov
das
imulb
stos
in
cmpsb
dec
jp
ss
insb
add
xchg
scas
shr
pop
mov
jnp
ja
jnp
test
inc
pop
mov
test
adc
repnz
add
cmp
imul
sub
sbb
sub
push
insl
sahf
jge
xchg
xchg
or
bound
mov
fsubl
push
and
shr
jg
xchg
addb
inc
orb
mov
and
sbbl
pop
sahf
xchg
pop
and
cltd
scas
andb
rorl
gs
cmpl
addl
bound
test
add
pop
mov
daa
test
xor
push
pop
mov
ja
xchg
xchg
adc
mov
push
test
bound
ljmp
and
stos
mov
out
ss
aas
aaa
xor
cmp
outsb
dec
cmp
mov
fdivs
cmp
leave
mov
and
enter
dec
ja
pop
inc
inc
pop
mov
outsb
outsb
and
fists
stos
inc
push
jg
negb
cmpsb
lret
xchg
add
ljmp
xchg
das
mov
sub
cmp
stos
mov
gs
scas
test
ret
test
inc
loop
stos
ror
or
cmp
lcall
or
sbb
testb
fisubrs
fidivrl
push
inc
mov
inc
pop
cld
push
rorb
aad
into
or
push
outsb
mov
into
mov
pop
mov
ret
mov
push
mov
add
push
pusha
stos
sahf
add
lea
push
das
mov
mov
mov
es
sti
ret
dec
into
lock
decl
pop
lret
out
bound
in
cmp
nop
cmp
outsl
enter
call
or
lds
test
bound
pop
add
jle
jecxz
scas
ss
xchg
dec
ficoml
mov
pop
ljmp
lods
jmp
adc
push
xchg
mov
add
decl
dec
xchg
pop
pushf
jl
xchg
mov
push
sbbb
pushf
lods
lock
decl
dec
xchg
pop
and
jl
dec
and
or
dec
mulb
into
xchg
jno
and
rcl
dec
sbb
bound
iret
mov
lds
jp
xchg
cmp
jo
enter
inc
inc
pop
jno
scas
sub
xchg
bound
sbb
jmp
aas
cwtl
ja
andl
frstpm(287
add
push
cmp
bound
jg,pt
xor
aas
cltd
cmp
fs
movaps
pop
movlhps
jp
mov
bound
sahf
mov
pop
ljmp
xchg
bound
ss
fwait
stos
dec
jno
bound
cld
and
inc
scas
jmp
push
fcmovu
aad
add
and
scas
pushf
lods
mov
jge
popf
ficomps
pop
jecxz
scas
bound
lock
cmpl
sahf
movsl
push
push
push
sahf
or
inc
bound
cmp
ss
out
lahf
roll
adc
lds
bound
inc
push
test
jno
mov
pop
test
dec
mov
aaa
mov
adc
mov
fisubl
mov
xor
sbb
aaa
mov
sub
push
sub
push
push
jg
xor
mov
push
xor
jmp
mov
cmpl
mov
push
bound
sub
popw
inc
xchg
movsl
ret
mov
bound
pop
movsb
bound
lock
dec
mov
pop
jae
imul
dec
mov
push
lret
jno
push
push
scas
mov
ret
mov
sahf
xor
pusha
push
imul
rclb
enter
xchg
bound
fisttpl
ficomps
loopne
push
mov
pop
test
sub
stos
mov
icebp
cld
mov
or
cltd
mov
mov
mov
inc
dec
cmp
xchg
or
pop
sub
and
dec
pop
mov
mov
out
dec
testb
and
sub
sub
and
sbbb
scas
mov
lret
ficomps
cltd
dec
pushf
loop
mov
ss
imul
out
out
mov
mov
sbb
into
dec
or
int3
sub
scas
ss
mov
scas
add
cwtl
movsl
inc
mov
add
push
je
xlat
add
mov
push
mov
dec
mov
push
jp
ficomps
mov
xchg
pop
aad
mov
cmpsb
pop
push
cmpsl
jno
iret
push
fsubs
test
fimull
test
sahf
mov
das
jle
ret
mov
jmp
int
mov
in
imul
ds
push
ss
dec
cmp
shl
push
out
out
mov
inc
mov
push
xchg
jno
inc
out
int
push
jg
mov
lock
out
jg
dec
inc
scas
out
das
mov
dec
outsl
push
push
sbb
fsubr
fisubrs
stos
and
adc
inc
lret
mov
mov
ret
xchg
mov
dec
add
scas
push
xchg
pop
scas
jb
inc
pop
mov
push
inc
imul
and
mov
mov
scas
mov
sub
ja
nop
mov
mov
out
mov
or
push
mov
pop
mov
cli
out
mov
repnz
fdivs
ss
or
ret
das
push
lret
push
test
jbe
mov
inc
xor
mov
ds
lock
decl
adc
int
movsb
push
inc
lret
jbe
mov
dec
xor
jp
js
xchg
jmp
cmp
jp
mov
inc
cmp
sub
pop
cmc
jp
bound
cmc
mov
shlb
add
mov
mov
inc
lcall
mov
sahf
push
push
rcr
mov
cmp
cmpsb
lahf
ljmp
jo
adc
cmp
mov
stc
pop
out
inc
mulb
sbb
fcmovbe
sbb
mov
ja
aad
mov
push
clc
shl
add
or
sbb
sbb
cmp
ja
enter
lds
test
js
bound
outsl
jnp
jb
les
andl
dec
pop
cmp
pusha
jb
lret
bound
andb
jb
mov
cmpl
push
push
jp
lock
mov
lds
push
fsubl
cmp
push
bound
cmc
mov
aad
data16
ljmp
xor
jne
mov
scas
push
js
add
bound
jo
mov
push
enter
sub
out
sub
movsb
mov
insl
inc
imul
nop
outsb
jle
cmp
push
inc
jo
pusha
add
lahf
sbb
scas
xchg
pop
mov
jg
xorl
lret
js
lret
lret
jge
add
sbb
lret
add
cs
fxch
cmp
jns
enter
cs
inc
xor
mov
mov
cmpsb
into
sub
xor
inc
shll
sub
out
int3
mov
add
loop
jl
bound
adc
cmpsb
lret
ficoml
shl
add
int
push
fcmovbe
sbb
lret
jge
mov
int
mov
pop
into
mov
sahf
add
dec
frstor
adc
int
mov
sahf
imul
ss
sub
and
movsb
mov
cmpsl
sahf
dec
andl
cmpsb
and
jmp
outsb
jp
bound
cmp
addr16
push
pusha
dec
test
bound
push
jne
jo
sahf
sbb
insl
into
cwtl
jnp
sbb
std
mov
xchg
jl
push
lahf
into
add
inc
mov
mov
rcrl
mov
lcall
rorb
mov
jnp
sbb
inc
mulb
xchg
add
jo
pusha
sbb
dec
aad
cmp
dec
jge
sbb
bound
pushf
decb
in
mov
rcr
xchg
inc
pop
jle
jo
xchg
sbb
or
xchg
inc
nop
hlt
push
aam
or
xchg
pusha
dec
nop
hlt
push
bound
nop
add
jp
aad
mov
mov
ss
push
fucomi
push
outsl
ds
andl
pop
dec
lret
je
push
adc
pop
jg
jno
push
xlat
xchg
icebp
inc
mov
pushf
cmpb
cld
shrb
bound
subb
xchg
inc
jb
xor
cli
ficompl
fsubs
push
icebp
push
je
call
mov
dec
mulb
fdivrl
fisttpl
sti
xlat
fnstenv
neg
push
lahf
jbe
andb
ss
lcall
ficompl
sub
fidivl
mov
fs
cmp
pop
cmpsb
sub
sbb
aas
xor
push
imul
jne
or
mov
fsubrl
inc
lret
pop
xor
or
inc
imul
ljmp
scas
dec
daa
imul
jae
or
jp
sahf
imul
out
data16
xor
loopne
bound
mov
out
insl
mov
push
jl
fbstp
pop
xor
push
sahf
imull
mov
loopne
inc
dec
loopne
mov
outsl
cmp
push
outsb
bound
out
push
jno
loope
scas
mov
out
jno
outsb
xor
bound
sahf
divl
mov
loop
repnz
loop
add
stos
mov
lock
add
sahf
ss
jp
jne
jecxz
and
jecxz
cmp
jne
inc
jle
je
jecxz
sahf
inc
jbe
andb
cmp
out
push
jge
data16
sub
fcoms
ja
xchg
jl
bound
jbe
jp
js
mov
lahf
sub
mov
fdivrs
outsb
mov
jp
icebp
jo
bound
sub
xchg
sub
and
push
dec
jns
bound
cmp
xchg
inc
jl
in
mov
dec
lahf
or
jl
inc
lcall
into
fdivrs
jns
fimull
cld
push
mov
push
mov
sub
cmpsb
sub
scas
mov
xchg
mov
adc
xor
aad
pop
mov
les
mov
movsb
imul
das
jns
jns
aas
and
fdivrs
jnp
stos
inc
ss
je
in
mov
inc
sub
inc
or
inc
inc
insl
inc
inc
inc
or
cmpsb
pop
jle,pt
das
test
mov
sub
xchg
ret
jo
aaa
push
cs
pop
dec
sub
fdivr
or
mov
sub
dec
sub
pop
inc
pusha
mov
insl
adc
aad
fisubs
and
adc
loop
mov
loop
mov
loop
test
ljmp
out
cmc
jle
sub
mov
cmc
push
mov
pop
push
insb
bound
or
push
add
cmp
arpl
cli
aad
outsl
mov
or
xchg
sahf
mov
das
inc
push
ss
lret
aaa
inc
aaa
sub
mov
cmp
outsb
dec
stos
push
and
nop
loop
out
adc
scas
add
mov
fucom
fdivrp
mov
movsb
cmpb
pop
test
enter
sbb
xchg
mov
push
mov
lahf
push
lret
out
sub
ss
fwait
jmp
cmp
loope
xchg
cld
sahf
pushf
test
or
loop
mov
cmp
stos
mov
out
sub
in
jecxz
mov
in
push
push
push
in
mov
cmp
out
pushl
xor
mov
xchg
push
xchg
out
mov
add
cmpsl
cmp
rolb
pushf
push
xor
mov
cmp
xor
inc
data16
adc
aaa
jg
xor
mov
test
push
scas
jb
fucom
jmp
ljmp
push
test
push
sbb
gs
jne
push
rclb
into
bound
dec
jp
lea
decb
mov
push
xlat
cs
pusha
mov
outsb
cmp
mov
cmp
out
subb
push
or
inc
push
daa
dec
jg
xor
dec
add
mulb
add
sub
and
or
mov
mov
outsl
and
jmp
mov
cmp
bound
int
arpl
rclb
adc
pop
in
sbb
push
cmpsb
sbb
sbb
subb
fmull
shl
push
out
pop
push
aaa
out
pop
or
push
jmp
push
fidivs
movb
insl
mov
popf
in
divb
push
sbb
sti
imul
push
add
fistl
pop
pop
shll
ja
jg
enter
jp
insl
scas
mov
mov
jnp
icebp
jo
sahf
icebp
ret
mov
cmp
bound
scas
enter
mov
lret
jbe
jecxz
scas
outsb
bound
or
ja
xchg
icebp
or
arpl
lods
sub
or
repz
xchg
sbb
adc
aad
cmc
insl
push
out
cmc
pop
push
xchg
xor
and
pop
sub
aad
and
or
scas
idivl
mov
and
bound
jo
jge
sarb
xor
fucomi
cs
loope
out
and
rclb
and
push
cli
pop
mov
cli
push
out
cmpsb
addb
rorb
sarb
sti
pop
fwait
jmp
imul
sahf
mov
add
inc
sahf
ljmp
pop
inc
mov
cld
ja
sbb
test
mov
rorb
enter
outsb
mov
dec
inc
stos
outsb
sbb
adc
xchg
clc
mov
push
std
pop
jle
sub
fisubrs
jnp
ss
lcall
pop
jle
incb
xchg
arpl
mov
sbb
lahf
inc
xor
fcmovb
pushf
push
or
pop
sub
negb
addr16
fs
mov
mulb
mov
cmp
repnz
ja
bound
ds
cmp
or
push
cmp
sbb
std
sbb
add
fiaddl
dec
add
cmp
inc
bound
sbb
ja
cmpl
cmp
xor
mov
int3
jb
fdivr
adc
rorb
and
outsb
adc
sub
mov
fs
aaa
pop
inc
stos
push
bound
adc
mov
mov
dec
into
arpl
mov
dec
dec
ljmp
mov
stos
subl
push
push
fisubrl
mov
mov
dec
inc
je
loopne
xchg
dec
xor
lret
mov
sbb
jp
test
sbb
mulb
push
sub
push
ljmp
mov
add
inc
push
aas
xor
test
inc
add
mov
mov
xchg
or
inc
add
stos
push
dec
sahf
xchg
or
dec
xchg
sub
popf
jg
push
or
jp
and
jge
lea
xchg
lret
or
or
sbb
bound
into
xchg
dec
push
dec
adc
sub
mov
addl
jnp
pop
enter
jp
jp
inc
xchg
bound
jo
mov
enter
cmp
and
bound
push
jp
or
xchg
or
xchg
jo
xchg
bound
xchg
mov
mov
enter
andb
push
push
iret
push
popa
xchg
or
xchg
iret
xchg
cmp
or
mov
mov
or
mov
mov
rorb
xor
mov
ljmp
dec
jne
aad
into
pushf
lods
into
fsubrl
fildl
outsl
ret
dec
mov
js
lea
inc
fidivl
jp
adc
and
cs
sbb
or
jp
ficoms
into
outsl
sub
stc
add
int
mov
sub
cmpsb
mov
iret
pop
dec
ljmp
bound
ss
pop
sarb
dec
mov
gs
jae
xor
jne
pop
rcrl
shrl
rcrb
push
mov
cld
les
inc
rcrl
orb
shll
push
shll
xorl
je
push
into
mulb
pop
into
aad
fidivl
fsubl
dec
fst
stc
mov
mulb
pop
jne
push
into
repnz
shll
fisttpl
pop
lret
fisubl
and
or
add
push
mov
mov
inc
into
lret
jmp
add
push
outsb
rcl
dec
fs
lods
sub
movsl
imul
sbb
into
fisubl
push
pop
into
fidivrs
lods
dec
clc
pop
jmp
out
mov
into
bound
iret
push
and
jge
daa
push
js
jb
xchg
ja
add
into
and
mov
sub
sub
in
js
sub
icebp
mov
sbb
bound
dec
xchg
imul
loop
xchg
dec
push
jbe
fistpl
lret
dec
mov
out
inc
dec
dec
pop
das
push
xchg
fisttpl
mov
sub
mov
pushf
sahf
ljmp
test
cs
leave
cwtl
push
ja
bound
cmp
push
pushf
lods
rclb
ja
test
push
scas
and
lods
out
imul
pop
cmpsl
sahf
andl
data16
cmp
add
mov
cmp
xor
push
and
jecxz
bound
aaa
sub
fwait
cmp
xchg
fwait
and
data16
insl
sub
jns
push
pushf
pop
fnstsw
cmpsb
mov
rcr
push
fisubl
push
scas
jp
push
cmp
lods
testb
aas
popf
ja
test
push
popf
shl
sub
enterw
xor
ret
xor
mov
fnstsw
push
jbe
in
lds
loopne
lds
cmpsb
pop
imulb
sub
pop
or
insb
data16
mov
mov
mov
pop
inc
repz
ds
iret
xchg
and
push
add
pop
xchg
lahf
pop
stos
sbb
dec
std
vmovss
imul
push
mov
or
and
je
scas
mov
ljmp
dec
call
testl
mov
loope
xchg
push
sahf
cs
out
fwait
or
push
inc
jp
mov
aad
stos
push
pop
rcll
int
mov
fiadds
cli
out
movsl
sbb
cmp
clc
fs
imul
lds
shlb
jb
bound
sbb
cmpsl
popa
adc
shlb
bound
mov
xor
push
push
xchg
cmp
xchg
mov
jno
cmpsb
sbb
cmpsb
add
jae
ss
dec
add
test
lea
inc
inc
add
push
setae
stos
lock
cmp
push
leave
lret
sub
mov
cld
mov
mov
dec
add
sbb
push
cmpsb
dec
dec
and
add
xchg
lea
push
bound
sub
cs
cs
cmp
mov
pushw
xor
xor
cmpb
xchg
das
sahf
lds
jns
pop
xchg
pop
sub
xor
cli
push
xchg
lock
push
dec
subl
loop
lcall
push
aaa
adc
mov
inc
jl
xor
bound
stos
ds
pop
rcll
mov
jl
lock
jbe
bound
aaa
xor
bound
cmp
ret
push
xor
mov
sahf
mov
imul
insb
xor
idivb
ss
mov
int
fisubl
addb
bound
out
lahf
ret
bound
rcrb
pushl
dec
mov
lahf
repnz
pop
sub
lcall
jmp
push
sahf
inc
imul
pop
ret
jmp
jns
jo
bound
sub
into
sub
cmc
cli
outsb
bound
loope
cmpsb
pop
cmp
fsubl
cmp
inc
stos
popl
cli
pushf
lods
sub
cli
enter
adc
ss
cli
sbb
pop
add
mov
enter
outsb
out
cmp
out
dec
sbb
push
jl
lcall
xor
orb
push
inc
andb
dec
cmp
dec
adc
test
push
jbe
cmp
in
rorb
cli
xchg
addb
aam
rcrb
int
loop
sub
std
pop
rorb
aas
aad
mov
fidivs
inc
fcmovnbe
or
mov
pop
jp
adc
loop
inc
fwait
mov
push
push
je
loop
bound
ficoml
loop
ficoms
loope
or
fcmovnbe
sbb
dec
fisttpll
idivb
fdivrs
in
jb
cmp
aas
dec
xor
fimuls
dec
test
xchg
inc
mov
inc
push
jnp
pop
mov
out
inc
mov
mov
inc
popf
cmp
push
imul
push
ret
ja
icebp
sbb
pop
gs
icebp
cwtl
pop
cmp
or
in
add
ja
idivb
ss
sub
les
aam
xor
ret
or
mov
ret
xor
jns
mov
js
sub
lret
movsl
loop
jns
sub
into
push
imul
xchg
dec
mov
jg
mov
jnp
mov
scas
mov
das
out
js
decl
xchg
xchg
inc
push
imul
xor
cmp
mov
das
mov
or
inc
cs
push
das
mov
pop
lcall
pop
xchg
inc
pop
stos
call
inc
pop
cmp
cs
pop
orb
addb
xchg
dec
pop
stos
add
pop
cltd
and
xchg
dec
pop
stos
call
push
xchg
pop
lods
cmpsl
daa
dec
mov
mov
rolb
scas
inc
pop
daa
mov
dec
xchg
push
int
mov
mov
dec
mov
xchg
out
xor
xor
mov
xor
inc
push
fildll
xor
sbb
xor
pop
lods
test
push
mov
fadd
loop
jp
repz
test
add
mov
mov
mov
add
stos
shlb
aaa
xchg
fisubl
mov
aaa
pop
nop
ja
fsubl
cmp
xor
ret
loopne
add
mov
loope
mov
cwtl
stos
push
mov
stos
cmp
nop
mov
mov
ret
inc
repnz
bound
cli
lret
bnd
mov
pop
lea
pusha
fs
mov
adc
dec
sbb
mov
push
data16
pusha
push
repnz
jne
sbb
xor
aad
fs
jne
fisttpl
add
mulb
push
cmp
mov
mulb
gs
mov
mov
ss
jl
rorb
data16
lds
data16
and
cmpb
insb
addr16
mov
addr16
js
decl
clc
inc
bound
roll
push
and
jb
xor
cmp
imulb
sahf
push
mov
push
jmp
push
sub
adc
jae
cmp
bound
nopl
loopne
or
push
or
push
cmpsb
insl
mov
fildll
inc
bound
imull
faddl
mov
sti
pop
sbb
inc
insb
push
mov
sbb
stos
push
sbb
sbb
clc
add
mov
mov
test
negb
stos
pop
dec
xor
mov
pop
stos
imull
out
imul
xchg
pop
insl
mov
xor
fcoml
frstor
rcrl
cmp
mov
pop
sub
push
stos
ficoms
dec
int
lcall
pushf
jle
add
or
ljmp
orb
into
dec
add
push
cmp
dec
mov
mov
cli
ljmp
mov
xor
loop
sahf
ljmp
mov
jge
bound
xor
sbb
mov
bound
imull
out
bound
sbb
jno
out
bound
pop
sbb
xor
aam
ss
cs
jb
and
inc
inc
cs
dec
dec
lahf
incl
xor
loope
repnz
sub
cld
adc
dec
jae
cmp
imul
bound
iret
lret
add
pushl
lcall
mov
push
pusha
push
add
bound
mov
inc
push
scas
jne
mov
and
add
sti
lahf
data16
adcl
mov
jge
push
icebp
jbe
ljmp
push
scas
ljmp
push
cmp
bound
jle,pn
xor
imul
hlt
data16
push
jbe
jmp
jg
mov
sub
add
imul
out
bound
and
scas
js
pop
mov
pop
sbb
jl
cmp
orl
repz
outsb
movsl
fldcw
or
and
movl
jns
mov
inc
and
sahf
mov
push
push
pop
movsb
push
into
cld
loope
push
std
fxch
fcmovnbe
icebp
push
fistl
jp
push
data16
adc
jp
adc
jo
mov
adc
lds
cmp
inc
mov
movsb
mov
bound
mov
scas
or
pop
inc
dec
dec
cmp
in
sub
ja
ds
bound
push
add
aad
sub
shl
push
adc
sarl
lret
dec
cltd
testb
fwait
bound
pop
in
sub
call
out
xchg
bound
idivb
dec
bound
bound
xchg
sub
xchg
sbb
cmp
sub
dec
stos
and
sub
bound
adc
sbb
jo
incl
jg
andb
sahf
push
andl
push
loop
ja
sahf
or
popl
inc
mov
repnz
andb
sar
jp
lods
mov
lret
dec
add
sub
and
inc
lcall
adc
and
rol
pop
scas
mov
pop
xchg
int
push
and
xchg
aad
sub
sbb
jo
ret
adc
fbld
sub
adc
xchg
inc
imul
push
push
jne
stos
iret
xor
test
outsb
movsb
xchg
jle
imul
insb
aas
fs
test
aam
sub
imull
inc
sub
xorl
sbb
fistpll
loop
xchg
sub
pop
aaa
rclb
jb
mov
mov
xchg
xor
add
mov
mov
mov
add
lahf
jp
fsubrs
mov
shrl
bound
repnz
aaa
mov
push
mov
popa
loop
push
nop
push
std
fnstenv
sub
pop
push
jge
ss
sbb
sti
aad
out
jb
leave
push
shll
jecxz
push
sbbb
repnz
loope
int
jne
data16
leave
add
cmpsb
dec
daa
out
mov
dec
test
imul
xchg
and
sbb
dec
sbb
xor
ss
stc
sbb
mov
test
call
cmp
mov
push
inc
daa
out
cmpsb
pop
pusha
inc
popa
sub
mov
push
add
dec
pop
cs
fisttps
push
jb
push
cmp
aaa
push
je
stos
shll
daa
lods
push
xor
push
and
push
movsl
and
mov
adc
jne
sub
movsb
data16
inc
sahf
fs
and
xchg
daa
cwtl
jb
sub
sub
cmp
mov
mov
dec
daa
pop
mov
outsl
push
das
out
pop
cs
fildll
cmpsb
in
shlb
mov
out
sub
cs
lods
dec
sub
sub
daa
stos
cwtl
xor
pop
fs
jns
dec
push
inc
jmp
scas
data16
cmpsb
xor
mov
xchg
out
push
push
bound
ljmp
cmp
xor
jae
jns
inc
das
xchg
xchg
mov
cwtl
push
popl
mov
fistpll
jbe
sub
lcall
dec
fsubrs
pusha
je
jp
dec
bound
inc
sub
lea
bound
pop
inc
xor
lea
push
push
jns
mov
sub
mov
mov
push
aas
dec
xor
bound
push
orl
inc
jbe
mov
adc
pop
lods
mov
push
iret
xchg
jb
jae
mov
jbe
jp
inc
jbe
jno
jle
lret
loope
pop
je
and
lods
mov
lcall
mov
push
mov
push
ret
pop
inc
dec
shl
scas
dec
mov
lcall
ret
cmp
sbb
outsb
lcall
call
out
xor
or
mov
pop
jb
mov
fnstcw
imul
insl
xor
jl
mov
outsl
test
clc
pusha
lea
xchg
xor
fcoms
je
xor
push
scas
mov
cmp
jp
js
dec
dec
dec
lahf
xchg
pop
cmp
outsb
mov
cmp
mov
xchg
insb
lea
pop
into
dec
outsl
lahf
dec
sbb
nop
dec
iret
dec
cmp
xchg
dec
pop
jp
cmp
sar
fs
jae
jnp
push
out
xor
dec
pop
lock
pushf
jge
sbb
stos
sahf
out
jl
fisubrs
insb
sbb
push
dec
xchg
sbb
mov
sbb
jp
fistl
fdivrs
inc
hlt
dec
negb
iret
dec
lock
and
int3
mov
call
dec
bound
mov
xor
mov
cwtl
xor
out
pop
icebp
push
pop
aad
pop
dec
or
std
pop
imul
or
sub
insb
repnz
sub
pop
popf
pop
enter
shr
inc
stos
cs
shlb
sub
cmp
push
cld
jp
out
adc
out
jmp
cmp
push
shr
pop
mov
ljmp
out
push
es
mov
mov
pop
xchg
out
dec
cmc
lcall
dec
xor
xchg
xchg
shrb
shrb
mov
mov
jb
pop
shlb
jno
repz
outsl
mov
enter
out
push
ja
push
adc
push
cwtl
mov
sbb
jle
lret
jbe
xchg
xchg
dec
sub
call
xchg
sub
and
inc
cmc
and
xchg
xor
lods
mov
movsb
out
cmp
dec
sbb
aas
or
push
jp
pop
adc
push
adc
stos
adc
pop
int
mov
inc
repnz
xchg
mov
lret
pop
aas
or
pop
insl
push
gs
mov
test
pop
sbb
mov
sub
and
mov
push
push
dec
xchg
insb
xor
push
testb
cld
lock
mov
jg
cmpsb
mov
sahf
pop
mov
test
jns
loop
lea
xchg
push
ficompl
dec
push
fmuls
pop
dec
jp
jle
lods
xchg
outsb
imul
xchg
pop
mov
mov
sbb
mov
adc
xchg
inc
loop
ds
jnp
cmp
dec
idivl
stos
pop
outsb
mov
cmp
notb
sub
cltd
mov
incb
jns
les
xor
imul
ss
rcll
fcoms
mov
xor
loopne
mov
dec
push
dec
stos
xchg
insb
mov
jbe
jno
push
inc
daa
xchg
jle
pop
mov
retw
pusha
pop
cld
imul
mov
js
cmp
pop
ret
push
insb
fwait
das
mov
jge
into
xchg
inc
rcr
aam
push
pop
int3
cmpsb
mov
imul
mov
cs
add
push
mov
push
das
jp
xchg
mov
cltd
adc
aam
add
jl
jno
pusha
xchg
xchg
mov
jge
scas
mov
leave
fimull
sahf
sbb
xchg
aad
mov
jle
dec
ljmp
scas
xor
adcb
repnz
add
dec
sub
lahf
push
jb
cmpsb
mov
lcall
jle
movsb
push
test
ss
or
mov
or
dec
push
push
push
shrb
bound
cwtl
inc
push
shlb
stos
mov
lret
push
dec
xchg
leave
dec
test
pop
mov
or
lcall
iret
mov
push
sub
xchg
cmp
ljmp
push
cmp
xor
push
xlat
pop
jp
and
dec
loopne
cli
mov
xchg
imul
push
mov
cmc
cli
cld
mov
adc
fsubl
cmp
data16
scas
cmp
lcall
jne
loopne
int3
xor
push
stc
push
hlt
ss
xchg
push
cmp
test
ja
add
push
mov
ficompl
inc
lock
pop
dec
ja
inc
push
cmp
in
dec
xor
out
sbb
fnstsw
push
outsb
dec
pop
aaa
subb
dec
idivb
push
dec
push
das
mov
jg
cmc
mov
mov
push
scas
mov
inc
jbe
lret
dec
add
inc
mov
fisubl
pop
out
outsl
jnp
fidivrl
mov
jl
les
push
lret
mov
cmp
push
push
scas
mov
cmp
outsb
sbb
pop
dec
sub
outsb
test
push
inc
sbb
lods
jbe
movl
dec
orl
lret
mov
hlt
addr16
push
or
pop
fisttps
sbb
mov
mov
add
lods
imul
pop
test
xchg
es
inc
clc
push
push
xchg
cmp
pop
mov
pop
dec
das
mov
dec
jns
jo
mov
xchg
loopne
je
mov
mov
push
lea
sub
into
lret
rolb
mov
xor
stos
in
sub
daa
xor
mov
inc
lea
dec
movb
push
xor
mov
inc
push
push
mov
sbb
dec
lock
push
orb
or
les
leave
stos
lods
outsb
mov
cmp
rcr
aad
lret
cmpb
data16
mov
ret
pop
es
inc
imul
popa
push
dec
stos
push
mov
test
ret
sub
stc
inc
pop
ficoms
mov
push
add
jle
pusha
jnp
call
cmp
insl
divps
pop
fidivrl
mov
adc
dec
pop
fidivrl
mov
adc
aaa
sub
jp
outsl
pop
mov
outsb
jl
les
adc
clc
call
gs
inc
xor
clc
pop
push
cmp
repz
test
ljmp
ss
call
loopne
lret
and
sub
divl
xchg
dec
jae
cwtl
sbbb
push
scas
outsl
nop
cli
jne
lock
dec
adc
or
lcall
mov
lret
inc
pop
cmp
arpl
push
insb
mov
jl
or
test
push
xchg
sub
daa
mov
add
imul
xchg
hlt
lods
insl
push
sub
outsl
sahf
movaps
push
aas
sub
pop
xchg
mov
mov
nop
rcrb
inc
bound
lret
das
movb
xor
mov
lret
fisubs
jno
ret
clc
ja
ret
push
xor
cmpsb
enter
xchg
jne
dec
xor
addr16
popl
ss
sbb
adc
sbb
dec
enter
lcall
xor
mov
jle
loopne
push
dec
shll
inc
sahf
addps
dec
jl
cmpsb
ss
out
inc
mov
cmpb
push
pop
adc
mov
adc
xchg
inc
sbbb
dec
and
ds
stos
jbe
push
cmc
into
fdivrl
insl
into
insb
sub
fs
push
fildll
xchg
insl
mov
xor
into
mov
outsb
call
jp
outsb
aas
dec
xor
subb
lahf
mov
das
rclb
mov
cmc
push
fmul
jge
push
je
daa
orb
js
or
mov
int3
mov
addl
leave
stos
mov
adc
mov
xor
xchg
imul
sbb
pusha
sahf
xor
repnz
pusha
xchg
aaa
lods
cmpsl
fimull
cmp
inc
loop
sahf
sub
xorb
ficomps
pop
movsl
dec
jp
mov
mov
inc
lock
push
mov
inc
into
jne
add
test
stos
mov
movsb
push
dec
push
push
cmp
in
inc
jg
ret
inc
pop
cmp
popa
jp
mov
lret
sub
sbb
popa
jbe
lret
out
push
pop
push
fmul
mov
fsubrs
mov
cli
xchg
out
out
fsubrl
push
dec
mov
jmp
pop
jbe
rclb
xchg
call
xchg
lock
xchg
cmp
mov
mov
ret
dec
pop
rol
xchg
insb
xchg
mov
inc
fnclex
lret
push
mov
cltd
adc
out
inc
pop
lret
fdivp
mov
and
nop
ljmp
test
mov
lcall
pop
ret
cmp
pop
push
push
pop
je
mov
data16
or
xchg
ja
outsb
add
xor
cmp
pop
ljmp
aaa
cwtl
xchg
inc
or
shlb
cmp
fistpll
je
sub
push
xchg
mov
data16
adc
push
mov
mov
mov
mov
bound
mov
sbb
gs
jecxz
dec
mov
sbb
jnp
mov
out
mov
mov
add
test
mov
inc
push
sub
cmp
andb
std
cltd
mov
xor
adc
xor
ret
movsb
push
repnz
test
jbe
cmp
je
adc
push
sbb
ljmp
cwtl
cmp
dec
out
daa
sbb
sbb
mov
daa
dec
push
jo
out
cmp
fdivl
divb
push
cmp
push
adc
mov
fadds
jne
out
push
xor
test
pop
jb
inc
cmp
push
sub
mov
pop
jb
mov
cmp
cltd
js
jl
lods
aaa
cmp
push
dec
mov
jbe
daa
mov
lods
xor
aad
jl
jae
leave
push
in
mov
cmp
int
idiv
or
push
jg
cli
mov
js
jle
fwait
pop
jno,pt
pop
cs
jbe
cmp
sahf
mov
dec
aad
xorl
in
mov
sub
lahf
jl
or
popf
push
mov
and
insb
push
stc
jns
fxrstor
cmc
mov
push
outsb
inc
pusha
cpuid
mov
lret
mov
pop
jbe
and
jo
adc
ja
out
inc
hlt
subb
sti
ret
test
scas
xor
enterw
jmp
push
jbe
sahf
packssdw
pop
sahf
push
nop
mov
enter
test
xchg
ret
xchg
mov
dec
xor
pop
dec
xor
mov
add
or
pop
inc
sub
sub
jge
xor
push
or
fidivrs
pop
push
pop
loope
push
jle
xor
repnz
imul
mov
or
int
lret
mov
out
pop
mov
scas
lcall
xchg
pop
mov
or
sbb
lods
lods
imul
mov
or
xor
inc
je
inc
push
inc
push
pushf
fstps
stc
xchg
or
inc
and
inc
clc
adc
roll
fidivrl
add
in
mov
mov
ret
subb
push
or
dec
jnp,pn
add
jb
rcrl
jnp
lcall
pop
ret
outsb
imul
mov
ss
cmp
pusha
inc
nop
or
jp
iret
cmpsb
rorb
jno
xorb
xchg
into
jb
cs
mov
outsl
cmp
subl
sub
xor
or
dec
sbb
pop
fadds
nop
jno
mov
dec
xchg
test
out
xchg
iretw
cmp
lea
push
jne
cmpb
push
mov
sub
sub
pop
loop
lcall
mov
shr
adc
ret
je
xchg
out
dec
push
jle
insb
push
cmp
arpl
and
sbb
idivl
mov
push
pusha
push
dec
pop
and
pop
ss
sbb
les
xchg
scas
pop
mov
imul
je
jo,pn
pop
jbe
mov
xchg
xor
movl
or
repnz
negb
jb
xchg
pop
pop
int
lds
jmp
jns
hlt
sub
xlat
pop
push
nop
sub
adc
lret
mov
ret
testl
push
cmp
mov
inc
nop
les
jge
je
cmpsb
xchg
jo
xchg
aaa
outsl
test
pop
xchg
xlat
ficompl
xchg
mov
outsb
xchg
or
push
fsubrl
adc
xchg
mov
insb
sub
sbb
popa
push
mov
add
imul
pushf
mov
js
mov
mov
enter
loope
scas
jl
sbbl
sbb
or
dec
pusha
jae
xchg
pop
xor
popl
cs
dec
insb
subb
mov
jns
ret
jae
xchg
jmp
call
mov
movsb
pop
icebp
sahf
shlb
push
dec
enter
jle
icebp
sar
js
test
hlt
push
pop
popl
pop
mov
rcrl
cmp
fmuls
and
loop
push
pop
sahf
jbe
gs
jl
imul
mov
mov
popa
stos
test
xorb
jle
mov
aad
mov
jl
lds
repnz
sahf
lods
imul
mov
clc
shll
dec
and
push
cmp
mov
xor
push
or
xchg
cmp
sbb
sub
outsb
insb
cmp
sub
dec
daa
movsl
dec
shrl
push
daa
sub
aam
push
repnz
sub
ss
cmp
popa
and
xor
rcll
pop
mov
inc
sub
xchg
sbb
rcll
mov
sbb
and
sub
pop
jbe
into
xchg
test
and
jbe
idiv
es
push
or
sub
inc
sub
dec
and
sub
outsl
and
cmp
addr16
xchg
mov
or
and
xor
xchg
hlt
xchg
ss
stos
inc
fadds
test
std
inc
mov
mov
ret
imul
ret
call
aad
inc
aad
adc
out
cltd
ja
idivl
lods
iret
mov
xlat
pop
cmp
cmp
push
xchg
adc
cmp
xor
ss
jo
jns
jb
jbe
and
fisttpll
cmp
out
ljmp
repnz
dec
mov
fidivrs
lods
ret
imul
jge
pop
or
movl
jge
push
mov
dec
dec
test
mov
cmp
push
cmp
ja
mov
pop
ficompl
cmp
ss
cmp
or
add
add
in
icebp
lahf
and
ljmp
xchg
outsb
movsb
lahf
xchg
cmp
pop
inc
mov
call
fwait
sbb
data16
mov
aad
or
ror
mov
jp
mov
shlb
xlat
insb
inc
aad
scas
mov
add
add
test
mov
pop
push
out
mov
mov
mov
sbb
push
fnstcw
xchg
mov
cmpb
pop
mov
lods
icebp
push
jnp
call
cld
imul
jle
sub
push
push
mov
mov
clc
jb
out
cmp
or
push
sti
push
divl
outsl
lcall
stos
lret
and
pop
fwait
jns
pop
pop
xchg
lret
dec
popf
pop
fimull
lret
sahf
mov
and
cltd
push
jl
lock
rorb
push
test
ja
jnp
int3
test
fdivs
fidivl
mov
xchg
cltd
inc
rorl
push
or
pop
and
jbe
nop
push
inc
in
out
outsl
xor
dec
lahf
xor
lods
jg
test
sub
mov
cmp
loop
or
jae
inc
cmp
fadds
mov
mov
push
ja
addr16
test
cltd
roll
sub
xlat
ret
pop
mov
xchg
fdiv
nop
bound
cwtl
insb
insb
dec
mov
das
push
in
int
sbbb
cmp
imul
mov
addb
jl
nop
xchg
cwtl
insl
loopne
cmp
arpl
dec
sub
subb
pop
testb
hlt
insb
xchg
shrl
jge
xchg
in
inc
loopne
mov
dec
ror
xchg
xchg
adcb
mov
fsubs
pop
loopne
pop
in
lcall
mov
test
out
ds
cmp
popf
pushf
test
pusha
dec
xor
enter
dec
cs
fdivl
sbb
inc
mov
out
cltd
or
loop
mov
cmp
ss
fwait
nop
ljmp
mov
inc
jg
xchg
inc
pop
sub
xchg
ret
cld
mov
iret
push
mov
push
mov
lret
filds
fdivl
sub
push
push
andb
in
lret
jl
xchg
les
sub
push
mov
jge
mov
fdivs
cld
dec
dec
sub
cmp
lock
orl
divl
ret
mov
pusha
cmpb
or
push
jnp
insb
rcll
mov
push
lock
dec
lret
push
add
cmp
fnsave
ficoms
into
cmpsl
mov
dec
xchg
adc
dec
and
sbb
mov
dec
pushf
je
lcall
cmp
pushw
je
and
sar
add
gs
cmpsb
mov
xor
mov
stos
pusha
mov
dec
mov
filds
dec
cmp
jmp
sbb
push
cwtl
and
cs
inc
pusha
jp
cmp
js
hlt
mov
dec
push
pushf
mov
sub
pushf
into
and
mov
add
lret
mov
enter
mov
js
fcmovnu
scas
decb
fimull
idiv
jno
lret
pop
nop
das
pop
dec
inc
mov
pushf
int3
cli
mov
clc
pop
daa
test
shlb
mov
movsb
add
sbbl
aad
mov
mov
lahf
or
test
cmp
sbbb
into
mov
fs
mov
mov
pop
decb
sbb
mov
insl
enter
cli
out
call
push
out
push
sbb
push
adc
adc
insb
pcmpgtb
mov
mov
lods
jge
fstl
jle
mov
dec
mov
bound
xchg
cld
mov
outsb
xor
add
xor
dec
push
out
dec
lock
outsb
aam
nop
loope
les
aas
outsb
cwtl
hlt
clc
mov
rclb
nop
mov
dec
mov
movsb
mov
roll
sbb
and
mov
mov
out
mov
jbe
inc
jno
and
dec
scas
je
mov
or
outsl
divb
inc
and
dec
outsb
and
mov
daa
dec
sbbb
addb
dec
out
sahf
add
fmul
mov
mov
push
imul
inc
dec
push
mov
push
mov
call
out
xor
inc
jns
test
cmp
imulb
xchg
dec
fdiv
inc
pop
orl
test
repnz
popf
outsb
mov
inc
xchg
dec
mov
jg
outsl
dec
and
out
cwtl
lock
cmp
out
xchg
xor
inc
jp
inc
ret
cwtl
dec
bound
lcall
sbb
push
test
or
clts
push
xchg
fadds
xor
sahf
xor
pusha
inc
out
push
dec
out
nop
dec
insb
mov
pop
cmp
popa
xchg
negb
or
clc
mov
bound
je
mov
ss
push
dec
xchg
push
ss
pop
dec
ret
cmp
cmp
cltd
lret
insl
ret
arpl
ss
ds
test
push
icebp
cmp
aam
sub
stos
std
fwait
jle
lea
popf
les
pop
fs
inc
inc
les
mov
scas
imul
xor
mov
push
inc
push
xchg
test
outsb
mov
mov
cltd
test
test
mov
mov
bound
cli
divl
nop
mov
pop
push
jae
xchg
push
enter
xchg
fwait
popa
lea
adc
dec
push
and
fisttps
push
faddl
push
ljmp
out
insl
shll
mov
cltd
or
repz
mov
scas
ret
int
aam
push
insl
pop
jne
mov
mov
push
ja
jb
dec
int
pushf
add
pop
lret
push
lret
pushf
enter
sbb
imul
pushf
mov
dec
shrb
mov
in
mov
outsl
in
push
loop
enter
and
pop
movsb
or
and
pushf
inc
imul
cltd
lock
xchg
or
pushf
fstpt
inc
out
cmpsb
js
sahf
mov
jo
test
sub
jnp
mov
leave
sahf
pcmpeqb
loope
jge
ror
mov
jge
mov
xorl
xchg
xorb
repnz
adc
hlt
stc
fdivr
filds
push
push
mov
pushf
mov
mov
cmp
ljmp
cmpb
xchg
decl
mov
mov
inc
sbb
pusha
mov
or
jle
mov
call
gs
mov
jns
push
je
and
mov
outsl
add
js
test
cmp
ljmp
mov
inc
hlt
movsb
xchg
push
jne
push
sub
mov
mov
cs
aaa
daa
jle
or
or
idivb
dec
lahf
bound
push
jl
push
jg
pusha
mov
into
jl
mov
fidivrs
dec
ret
cmp
push
cmc
mov
mov
jno
test
rol
mov
inc
push
test
hlt
sbb
fidivl
push
cmpl
cmp
rcll
into
out
mov
xchg
xchg
inc
push
imul
push
push
cli
cmpsb
iret
push
mov
push
imul
iret
out
inc
in
movsb
dec
sbb
lcall
es
push
mov
sub
push
add
cwtl
inc
int3
mov
mov
iret
jg
push
loopne
cld
sti
pop
sbb
lcall
xor
cmp
call
mov
rcr
test
cltd
push
jno
jbe
cli
inc
push
lea
dec
xchg
sbb
cwtl
pushf
inc
or
ljmp
adc
sbb
dec
or
popf
cmp
jle
or
push
pop
push
mov
rolb
xor
ret
mov
fcomp
push
test
push
hlt
push
fisttpl
adc
xor
scas
push
in
test
arpl
popa
in
xor
push
xchg
imul
lahf
lcall
fcoml
push
mov
pop
mov
pop
pusha
mov
imul
xchg
or
lret
cwtl
xchg
pop
ja
mov
lret
adc
lret
pop
fwait
add
or
out
in
adc
mov
xor
shl
jp
push
bnd
mov
int
xchg
mov
fld
scas
mov
push
cmp
clc
andb
xchg
clc
rclb
or
xor
add
cltd
xor
cmp
pop
fs
and
jno
pushf
sti
test
mov
xchg
ret
inc
jbe
adc
jo
into
lret
mov
xchg
pop
or
mov
mov
and
mov
mov
fmuls
test
push
test
std
mov
or
les
nop
clc
cmp
outsl
stc
mov
or
jmp
lock
adc
scas
mov
jnp
inc
stc
and
test
gs
cmp
push
nop
loop
ret
jne
into
fcompl
dec
sub
push
cmc
sahf
jns
jne
xchg
mov
jb
pop
push
push
sbb
mov
scas
mov
std
xchg
pushf
push
insl
inc
in
and
lret
pop
sub
ss
jle,pn
lods
xchg
mov
mov
ret
enter
aad
and
adc
testl
aad
mov
rorl
push
lahf
jb
sub
pop
out
fistps
fistpll
mov
les
rcrb
mov
mov
push
add
lahf
stc
ds
cmc
ret
lods
jmp
add
xchg
ret
mov
dec
stos
xor
test
mov
orb
cmp
ret
mov
ror
mov
pop
mov
imull
xchg
dec
mov
add
jno
fdivr
mov
fadds
ret
int3
dec
adcl
inc
lock
push
mov
sahf
sbb
call
xorl
jae
jle
lret
xchg
mov
or
mov
lcall
stos
jns,pt
add
mov
mov
out
mov
loop
jno
pop
fmull
rcll
or
adc
jg
and
aad
adc
and
or
cwtl
push
xlat
and
jbe
sbb
enter
popf
inc
mov
movsb
sub
push
incl
dec
or
iret
mov
fdivrs
jp
add
jns
insb
shll
add
lds
test
je
dec
pusha
stc
mov
sti
push
or
mov
pop
inc
daa
cwtl
fcmove
sbb
jns
mov
inc
jg
push
into
dec
xor
inc
jno,pt
pusha
outsb
sbbb
fistl
out
outsb
xor
icebp
ds
dec
ja
ljmp
out
dec
push
mov
imul
ja
mov
mov
mov
jns
dec
mov
sub
inc
jno
mov
mov
mov
lret
stc
fstl
mov
jns
xchg
subl
mov
mov
ljmp
pop
dec
pop
push
aaa
push
add
adc
cmp
imul
lret
pop
inc
sub
dec
das
xor
cmp
enter
je
dec
ds
sbb
or
sbb
bound
jns
call
push
and
or
shlb
dec
pop
inc
flds
cmp
hlt
push
xchg
add
icebp
bound
sub
pop
sub
scas
adc
sub
adc
cmp
mov
cs
sbb
pop
dec
jne
and
cltd
jmp
ljmp
xchg
cmc
sarb
mov
or
dec
xchg
rcrb
jl
jne
dec
cltd
mov
imul
push
test
lock
pop
stos
pop
out
pop
lcall
jb
aam
cmp
int
fcoms
andl
movsl
faddl
sbb
mov
pop
sub
sbb
and
fiadds
push
mov
jo
dec
mull
imul
cmp
jo
fidivrs
mov
stc
xor
dec
iret
adc
fsubrs
cwtl
and
push
push
lret
sbb
mov
mov
jno
fs
mov
jne
push
out
and
add
nop
fisubl
rcll
push
fwait
mov
ja
pop
sti
lock
mull
jo
mov
mov
pop
mov
shlb
cmpsb
fcoms
jnp
pop
rorl
lret
enter
ja
cmpb
js
fadds
cld
fdivr
jecxz
or
sbb
bound
push
inc
or
lcall
add
sub
adc
mov
stc
xchg
nop
or
push
sbb
clc
rcll
jecxz
sub
mov
gs
bound
adc
cwtl
jbe
xor
je
lcall
pop
inc
mov
push
outsl
push
xor
inc
sbbb
scas
cmp
inc
fbstp
mov
shll
test
mov
test
mov
out
sti
mov
mov
jno
or
enter
test
and
aad
ret
jg
jb
loop
mov
push
sarb
cmp
enter
adc
push
call
jp
testb
jnp
lcall
fisttps
jnp
adc
mov
jno
and
or
mov
jecxz
add
jmp
or
leave
push
sbb
push
mov
mov
in
sub
sahf
or
mov
adcl
mov
fwait
psubq
mov
mov
or
lret
mov
mov
and
fsubs
push
cld
movsb
fdivrl
mov
cmp
dec
or
push
scas
dec
test
test
jns
sbb
je
push
ret
mov
inc
fcomps
cmp
xchg
bound
cltd
add
je
sarw
push
add
hlt
push
das
outsl
add
add
sbb
je
mov
mov
aam
mov
jecxz
int3
es
mov
int3
pop
rol
sahf
push
js
gs
push
push
out
mov
and
fwait
inc
pushf
cmp
xchg
test
fwait
sbb
dec
or
sti
ljmp
movsl
fsubrl
adc
insb
adc
lock
in
sbb
jl
jnp
imull
xchg
mov
adc
mov
mov
bt
add
jb
jno
inc
test
dec
inc
bndldx
cmp
in
mov
movsl
in
mov
fistps
jecxz
mov
popf
cmp
in
les
sub
lret
mov
adc
loope
adc
pop
push
dec
rclb
mov
movsb
xchg
cmpb
adc
cld
mov
sarb
lods
mov
shr
jecxz
mov
jecxz
add
mov
push
dec
cltd
ret
push
dec
lcall
jno
cmp
fisubrs
loopne
int3
and
xchg
dec
xchg
adc
jne
loop
pop
xchg
popa
ljmp
cli
es
xlat
mov
xor
scas
je
and
and
mov
sbb
std
jno
sub
sbbb
fcomip
loopne
jo
dec
sbb
xchg
test
or
push
call
fstp
into
aad
insb
lret
push
aad
xchg
jns
mov
mov
test
adc
mov
mov
fs
cli
divl
pusha
sbb
and
in
push
jecxz
int
jp
add
lock
bound
jecxz
adc
push
or
inc
adc
adc
and
xor
jb
insl
ljmp
pushf
jbe
jno
adc
test
andb
mov
mov
and
sbb
xchg
push
js
xchg
xchg
inc
dec
fdivrl
loop
add
jo
mov
xchg
mov
stos
dec
xchg
ja
sbb
and
dec
jmp
dec
pop
shrl
mov
jne
push
repz
push
into
lret
jbe
int
sbb
in
mov
sub
clc
dec
inc
adc
int3
popl
and
sbbl
popa
fs
test
pop
sti
cwtl
test
ror
cwtl
sbbl
mov
enter
in
mov
dec
outsl
in
fidivrl
aad
sub
push
jb
outsb
pop
push
sbb
in
adc
hlt
and
jle
pop
dec
fwait
mov
adc
or
inc
mov
dec
sbb
loope
clc
xor
mov
mov
push
jmp
clc
rcrl
imul
jns
loope
loop
pushf
imul
das
imul
mov
xorb
xchg
cltd
push
xchg
enter
je
lock
jnp
pop
test
sahf
adc
loope
int3
push
in
jb
nop
sbb
xchg
mov
scas
pushf
std
insl
sub
or
mov
std
ret
xchg
push
sbb
movsb
je
leave
data16
sbb
loop
ret
je
cmpsl
into
jo
add
add
mov
jns
jge
mov
mov
dec
fisttpll
in
sbb
mov
je
jno
sbb
cmp
add
sbb
in
popf
push
mov
or
push
and
sub
adc
inc
jge
mov
ds
xchg
mov
pushf
lds
fcmovbe
and
cmp
lret
notl
lock
sbb
jnp
ds
or
bound
stc
ljmp
jnp
xorl
mov
outsb
mov
or
inc
push
adc
xor
push
mov
ss
loop
jl
jg
andl
jae
mov
pop
xchg
cwtl
aam
bound
clc
sbb
out
jp
test
stc
mov
jnp
loopne
std
sbb
or
sub
arpl
jp
and
jp
or
imul
cmp
movsb
lock
add
in
mov
cwtl
test
fnstsw
std
or
shld
in
push
les
shll
xor
add
dec
fucomi
call
mov
push
adc
lret
popa
push
lret
rorb
aam
xchg
clc
imul
mov
enter
ss
lret
xorl
call
pop
add
pop
xor
mov
xchg
mov
sbb
adc
pop
fidivrs
cltd
mov
daa
ja
push
les
jnp
ret
push
sbb
add
jae
movsl
lds
sbb
or
ja
or
inc
xchg
cwtl
or
add
mov
mov
inc
fs
hlt
jne
not
imul
fmuls
jne
mov
and
xchg
push
add
sbb
test
jb
rclb
jns
xchg
stos
clc
inc
pop
cmp
in
bound
mov
push
into
imul
push
cmp
fildl
arpl
outsl
fwait
jae
mov
adc
push
mov
push
lds
lret
movsb
in
das
js
fs
mov
js
enter
dec
pop
sbb
lret
sahf
xchg
vphaddubq
add
jno
push
lahf
mov
movq
lahf
jp
jno
and
iret
pop
xor
push
fcoms
rcl
mov
ret
outsb
rcrl
inc
push
sarl
adc
aam
xor
imul
jno
xchg
xchg
repnz
xor
mov
cmp
jl
xchg
cwtl
push
fldenv
fcomps
sbb
in
push
sbb
add
jbe
xor
dec
enter
cs
mov
int3
push
jmp
je
mov
jb
into
sbb
ret
mov
punpckldq
mov
cmp
mov
cmp
lds
fisubl
pop
mov
push
mov
aam
mov
imul
jl
ret
cmp
and
and
push
gs
jge
idiv
stos
jl
sbb
push
adc
int
dec
imul
push
add
or
mov
or
fs
fsts
sbb
xchg
ljmp
out
push
mov
stos
add
outsb
test
mov
fs
lcall
mov
jb
lcall
adcb
or
push
nop
add
xchg
add
hlt
sbb
push
jae
movsl
shr
cwtl
popf
adc
cmpb
sub
rolb
jl
pop
push
mov
outsb
cld
mov
fs
shl
push
loop
shl
lods
out
pop
cld
out
mov
pop
std
dec
andb
movsl
pushf
jg
fcompl
in
fs
leave
pop
test
fwait
or
jge
enter
lcall
push
int3
test
in
and
pop
mov
lcall
dec
out
xchg
gs
leave
jle
adc
add
aas
mov
jecxz
enter
cmpsb
and
pop
ret
loopnew
dec
pop
sub
jae
jp
cmpb
jg
jno
repnz
subl
insb
mov
ja
orb
jbe
mov
hlt
mov
movsl
loop
int
dec
push
pop
loop
test
pop
into
aas
stos
dec
mov
jnp
inc
mov
cmp
jg
mov
or
test
inc
pop
and
cld
enter
mov
pop
push
js
in
movsb
or
ljmp
lea
lcall
sbb
mov
insb
inc
mov
jbe
dec
jo
fidivl
push
enter
sbb
je
sbb
clc
aam
jbe
or
add
mov
cltd
shlb
in
dec
aad
mov
andb
adc
jecxz
or
clc
roll
jl
loopne
sub
popa
int
lret
mov
jo
sub
movsl
or
lds
movsl
ja
mov
adc
aam
loopne
adc
nop
int
imul
push
lret
cmp
jo
pop
ss
stos
sbb
mov
or
cmc
xor
dec
and
jno
pop
test
mov
fcomps
jmp
and
pusha
ljmp
mov
hlt
cwtl
jnp
push
mov
or
cmpl
mov
mov
aam
jecxz
addb
cmp
popa
fcmovb
int
in
fidivl
push
iret
ror
cltd
mov
ds
sub
adcb
sbb
stos
std
ret
loopne
movsl
cmp
pop
movsb
sbb
clc
popl
fnstsw
pop
jle
xlat
jb
lahf
adc
or
or
or
jge
lret
push
cli
mov
in
into
lods
iret
xchg
enter
mov
pop
fs
push
dec
mov
push
cli
push
rorb
dec
out
pop
cld
and
lret
int3
xor
hlt
insl
fmuls
cmpsb
jg
xchg
inc
in
iret
mov
sti
dec
rclb
call
ljmp
std
cmc
call
sarb
mov
mov
jno
cmp
repz
sbb
mov
sbb
jl
sbb
lods
movsb
aad
cmp
addb
xlat
cmp
push
out
stos
add
cld
stc
adc
aam
adc
adc
enter
dec
addl
je
adc
and
push
fucom
mov
out
in
pushf
and
iret
out
sbb
push
inc
dec
or
call
popl
in
mov
lret
xchg
dec
in
add
mov
xchg
or
push
xchg
inc
jo
lret
fsub
lcall
ret
pop
cwtl
ret
les
jg
lcall
test
mov
mov
mull
dec
push
cli
sbbb
cmp
pop
pusha
cld
out
negb
and
mov
and
dec
fists
ds
fsubs
movsb
and
cwtl
mov
fwait
leave
stos
cli
jecxz
dec
mov
mov
pop
pop
xor
imul
pop
xchg
push
mov
mov
sarl
lret
ret
inc
mov
xchg
out
movsl
adc
insb
and
dec
and
sbb
test
movsl
mov
mov
lret
pushf
or
insb
pop
push
sbb
imul
enter
clc
jnp
add
out
cmp
cld
pop
inc
cld
fsubrl
iret
xor
sub
jge
mov
ror
adc
sub
adc
mov
push
push
add
mov
roll
jp
add
icebp
dec
dec
lcall
fcoms
xchg
adc
push
addr16
je
in
loop
loopne
adcb
lret
int3
je
bound
push
cmp
fisubl
js
dec
mov
idivb
xor
test
sti
stc
or
pop
cmp
add
ljmp
lds
enter
fstps
cli
pop
or
fidivrl
fsubrs
dec
add
loope
test
jl
iret
xchg
out
sub
sub
pop
add
in
jecxz
push
xor
sub
jbe
jb
in
pop
cmpl
fs
lock
push
je
cmp
push
shlb
mov
ja
pop
call
jno
and
mov
stc
shll
sbb
and
push
popf
fldl
cmp
xchg
icebp
mov
mov
dec
jg
fwait
nop
cs
sbb
loop
aam
pop
js
jnp
divb
fcmovbe
popf
inc
fs
or
mov
ljmp
dec
push
lret
mov
or
js
xchg
in
subb
adc
bound
sbb
std
fbstp
loopne
mov
pop
lock
lret
jne
adc
mov
and
adc
iret
dec
push
xchg
in
int3
push
out
xchg
jb
fistl
out
test
adc
insb
and
xchg
sbb
popf
jg
dec
jle
xchg
or
enter
js
adc
jno
push
mov
data16
dec
sbb
inc
je
adc
pop
and
sarl
ror
into
mov
ret
sbb
sti
fisubrs
adc
and
fsubs
cwtl
js
imul
jl
mov
clc
filds
adcb
push
lods
jecxz
outsb
mov
or
mov
imul
jle
fisubl
lcall
fcomps
add
outsb
mov
pop
scas
adc
iret
xor
and
push
push
sbb
andl
lret
out
ds
out
sbb
sbb
sbb
icebp
sbbb
add
hlt
iret
xor
and
lcall
sbb
mov
cmp
lds
xchg
js
jmp
cli
scas
mov
stc
ljmp
clc
lret
xlat
mov
movsb
jo
fimuls
cmc
movsb
int3
inc
jne
lahf
mov
sbb
jecxz
lock
sbb
or
out
and
mov
inc
push
std
dec
lods
and
xchg
sti
not
mov
nop
pushf
jecxz
inc
test
add
ds
and
pusha
push
bnd
push
nop
and
lret
cwtl
rorl
mov
sbb
xchg
and
insl
cmp
cli
and
inc
pop
std
iret
add
sbb
cmc
cmp
es
dec
mov
cwtl
fisttpl
push
adc
cmp
rolb
sub
inc
outsb
add
movsb
mov
fcmovne
push
cld
lds
sub
add
mov
cli
add
fildl
movsb
les
orl
in
sub
imul
sbb
das
jae
mov
mov
loop
sbb
dec
push
adc
je
dec
sbbl
lds
push
push
notl
pusha
fildll
jns
out
mov
mov
dec
dec
xor
dec
mov
cmp
out
pop
sbb
test
jbe
mov
shlb
mov
lock
mov
jg
and
punpckhbw
add
into
push
xorb
test
cwtl
add
mov
fsubr
pop
lcall
mull
outsb
mov
mov
shrb
push
outsl
imul
lret
movsb
js
lret
mov
arpl
jo
iret
push
or
aad
push
rorb
inc
push
pushf
xorl
sbb
ror
ja
push
fidivrl
add
test
cwtl
js
scas
lcall
push
std
push
lods
and
push
mov
mov
jl
and
sarb
mov
out
xchg
or
mov
arpl
adc
xor
fnstenv
mov
pushf
fnsave
and
cmp
push
sub
mov
push
sub
mov
push
pop
cmp
out
push
xor
push
adc
mov
ret
mov
push
into
into
lret
or
push
push
imul
mov
xchg
aas
std
ret
push
fldcw
adc
or
clc
mov
nop
mov
xchg
lock
or
or
push
fiaddl
int3
xchg
leave
push
lret
loopne
loop
cwtl
std
mov
insl
dec
sahf
sahf
lds
hlt
test
ficoms
jo
or
push
cli
jecxz
fidivl
jae
mov
cld
push
xor
xchg
mov
push
add
movsb
int3
mov
pop
lret
mov
mov
xchg
test
nop
jmp
aad
push
int3
lret
mov
pop
sub
push
push
loopne
mov
push
dec
mov
cli
mov
daa
pop
cmp
mov
js
pop
or
test
test
fmulp
je
imul
data16
and
loopne
bound
movsb
push
push
shll
mov
lahf
pusha
clc
jge
int3
add
pop
push
rcrl
mov
pop
in
mov
xchg
repz
mov
andl
adc
adcb
jo
jl
loop
push
fstpl
fiaddl
and
mov
outsb
jo
push
gs
scas
lret
jo
lahf
pusha
xor
scas
nop
test
or
adc
or
or
lea
cmp
mov
sbb
outsl
jnp
testl
rcl
lret
and
push
stos
icebp
mov
inc
add
test
jne
sbb
mov
in
adc
xchg
jnp
je
xor
push
push
ja
jmp
and
jnp
sub
mov
pop
nop
dec
ror
jle
outsb
or
je
add
dec
movsb
adcb
xchg
test
xor
decl
outsl
xchg
mov
jne
jb
ja
or
push
jp
fs
and
inc
pop
xchg
dec
fwait
xchg
adc
xchg
add
push
mov
fidivs
mov
ss
mov
xchg
pusha
sbbl
syscall
jmp
xchg
jae
je
xchg
pop
test
jle
inc
pop
adcb
std
lea
arpl
ss
pop
cwtl
push
jecxz
arpl
sbb
hlt
mov
ds
push
sbb
loopne
xchg
fmuls
mov
add
rcrb
repz
int
lock
push
dec
int3
xor
rolb
arpl
andl
ja
and
out
inc
fwait
loope
in
ds
test
rclb
mov
dec
outsl
push
aas
xchg
dec
popf
mov
xor
ljmp
adcl
and
push
fcmovu
mov
js
aam
loopne
aaa
sbb
js
push
shll
adc
jo
jp
std
pop
dec
mov
push
sbb
and
push
push
mov
clc
shr
mov
out
bound
negl
cwtl
aam
js
pop
aam
hlt
xchg
insl
mov
or
pusha
mov
iret
jae
dec
cmpsb
jne
clc
lcall
movsl
sti
lds
lcall
dec
mov
push
mull
push
in
int3
insl
mov
push
test
sub
gs
xchg
loop
mov
fiadds
into
jno
xchg
add
imul
sub
adc
sbb
adc
cli
fs
and
sbb
shll
lret
sub
adc
iret
sbb
repnz
and
xor
dec
scas
fisubrl
xor
push
lea
dec
dec
ljmp
rorb
sarb
push
lcall
cld
icebp
and
lret
loopne
ss
ss
in
jp
dec
outsb
enter
outsb
out
mov
rorb
and
adc
movsl
inc
adc
rcrb
sbb
mov
adc
or
push
cmp
inc
pop
sbbl
add
and
sahf
and
std
ffree
jp
jp
jnp
js
or
fsubrs
lock
and
xchg
push
jno
cmpsb
jno
mov
fmulp
cmp
mov
xchg
add
pop
outsb
clc
iret
sahf
movsl
lahf
lret
jp
or
or
pop
std
xchg
push
push
jge
dec
lock
in
sbb
push
adc
or
sti
jecxz
inc
sbb
ret
ja
lcall
andb
fiadds
push
mov
ja
add
clc
lret
jo
and
out
mov
iret
cwtl
inc
icebp
xchg
jge
sub
aam
cli
insl
int
lahf
mov
sbb
mov
jmp
aam
or
lcall
sbb
popa
fucomi
push
cli
mov
dec
sahf
idivl
add
jo
push
pop
rcrl
inc
subb
dec
negb
and
xchg
sbb
clc
pop
pop
xor
loope
lret
leave
and
dec
dec
xor
bound
push
mov
test
add
add
loop
fists
pop
cltd
jge
mov
or
xchg
or
jo
xabort
andl
adc
add
mov
pop
iret
push
sbb
ljmp
popa
xor
sbb
mov
lock
aam
loopne
jl
mov
lret
loope
rclb
push
mov
jge
outsb
and
adc
inc
sbb
and
test
mov
inc
loope
sbbb
mov
inc
movsl
dec
and
pop
push
mov
inc
mov
cltd
test
inc
lcall
push
gs
mov
jecxz
insb
adcl
pop
lock
shll
enter
orl
xchg
jae
and
adc
adc
loop
mov
push
movsl
ljmp
jl
divl
mov
inc
push
push
int
mov
ret
fmull
cmpsb
mov
mov
test
sbb
out
push
sti
mov
orb
add
jo
cwtl
ja
imul
push
cmpsb
popf
in
push
lret
push
loope
nop
into
neg
mov
and
leave
fdivrl
scas
imul
xor
mov
ret
data16
cld
push
jle
test
sub
add
enter
je
xchg
sbb
xchg
nop
push
dec
ror
leave
inc
aad
loope
jb
xchg
mov
push
push
cli
cld
orl
mov
mov
mov
fadds
aam
lods
and
cltd
mov
lcall
lahf
es
lcall
les
rolb
clc
inc
xorb
mov
cltd
dec
lret
lcall
fimuls
aam
jb
push
sbb
orl
jge
cmp
ljmp
das
loopne
ficomps
xor
cmpsl
cmp
insl
rcl
adcb
mov
jb
xchg
stc
adc
mov
test
and
out
cs
sbb
dec
mov
jno
loopne
inc
dec
inc
daa
xchg
xor
rclb
xchg
sbb
cld
je
aad
mov
pop
into
xor
mov
push
sub
xor
and
adc
or
popf
jmp
xchg
cmp
ss
js
cmp
roll
scas
cmp
push
mov
imul
inc
aaa
add
rclb
xorb
jbe
cmp
loop
loope
cmp
imul
add
cwtl
pop
jl
aas
rcl
jno
filds
mov
sti
loopne
pop
jbe
fwait
mov
pop
je
cmp
addps
or
xchg
outsb
inc
sbb
lock
xchg
insb
pop
xor
mov
or
popa
jl
mov
clc
xor
loopne
xor
mov
fwait
mov
jo
pop
dec
sbbb
xchg
sbb
dec
pop
mov
sbb
jp
mov
fsts
push
shrl
stos
jo
out
pop
mov
jo
push
aad
mov
aas
push
leave
and
nop
ja
bound
adc
xor
lea
fidivs
adc
mov
mov
out
daa
ja
xchg
nop
push
lret
test
pushf
je
dec
mov
or
mov
daa
push
jbe
mov
push
out
jnp
stos
sahf
mov
mul
push
add
ljmp
jg
sbb
jno
mov
dec
mov
outsl
lcall
dec
cltd
add
cmp
mov
push
dec
sub
daa
test
ss
pop
inc
cmpsl
pop
sbb
stos
data16
pusha
cwtl
jge
cltd
pushf
popf
sahf
mov
movsb
lods
movsb
mov
mov
mov
movsb
lds
movsb
aad
fldenv
movsb
jmp
movsb
cmc
movsb
stc
movsb
std
movsb
add
push
cmpsb
out
and
pop
pop
or
xor
pop
popa
je
mov
jmp
push
pop
lea
enter
cmpsl
and
jbe
xchg
leave
and
xor
push
pop
adc
or
jb
jbe
jp
mov
sbb
sbb
aas
fs
or
push
adc
pop
sbb
into
and
and
and
and
and
and
and
and
wbinvd
fsqrt
jmp
mov
cmpsl
pop
push
cwtl
icebp
addps
out
lahf
pop
cwtl
aam
in
imul
jl
mov
adc
pop
pusha
inc
pusha
inc
popa
dec
bound
push
fs
gs
gs
arpl
imul
jae
ja
jnp
jg
andl
mov
gs
gs
gs
gs
mov
gs
gs
mov
mov
gs
gs
gs
rorl
cmp
popa
fidivl
pop
bound
enter
mov
mov
arpl
insl
rorb
in
lods
adc
sbb
jbe
mov
push
int3
or
mov
je
mov
jmp
daa
pop
xor
stos
push
pop
sbb
pop
dec
pusha
jne
andl
xor
pop
pop
fdivr
addr16
pop
and
ds
cwtl
dec
lcall
xchg
mov
mov
movsb
push
jp
call
mov
bound
xchg
insl
scas
cmpsl
pop
arpl
push
fs
imul
out
xor
pusha
shll
sbb
jbe
jne
xchg
mov
sbb
push
sub
xchg
mov
pop
pop
addr16
int
fldenv
inc
pop
pop
pusha
call
arpl
or
push
adc
inc
sub
cmp
dec
add
cs
cmp
lods
inc
inc
pop
xchg
dec
sbbb
into
cmpsl
pop
sub
cs
xchg
jns
jbe
loopne
sbb
inc
bound
lock
xchg
leave
lcall
push
daa
xor
cmp
inc
adc
sbb
movsb
call
movsb
std
movsb
add
or
pop
and
gs
mov
cmc
inc
xor
out
xchg
sub
dec
dec
outsl
sub
int
in
outsl
or
test
mov
insl
mov
or
loope
call
or
push
push
fwait
sbb
pop
fcmovb
loopne
call
ret
ret
mov
mov
mov
movsb
lret
movsb
shlb
movsb
out
ljmp
movsb
cli
movsb
movsb
add
movsb
push
movsb
sbb
cwtl
sub
mov
inc
movsb
inc
movsb
dec
movsb
dec
ja
mov
bound
data16
outsb
and
jbe
jp
jle
andb
and
and
and
and
and
cwtl
lret
and
and
and
and
and
and
and
and
and
mov
add
and
cs
xor
ss
inc
sbb
dec
sbb
push
sbb
pop
sbb
sbb
outsb
sbb
jp
jle
sbbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
push
add
out
xor
xor
mov
cmc
lock
scas
mov
vpsubusw
out
in
sbb
sbb
sbb
sbb
pusha
data16
neg
inc
sahf
fisubl
adc
jae
xor
popa
xor
ds
inc
xor
pop
ljmp
push
pop
sbbb
pop
xchg
pop
popf
and
pop
add
inc
dec
bound
jmp
outsb
pop
in
and
shr
outsb
movsb
mov
mov
hlt
gs
shlb
fisubl
gs
out
ljmp
gs
gs
add
or
adc
sbb
xchg
pop
arpl
pusha
cs
xor
arpl
fs
push
inc
mov
dec
lds
push
push
mov
and
and
and
shrb
jae
andb
movsb
and
sub
je
jp
xchg
xor
into
cmc
in
or
adc
in
movsl
sub
fiadds
jae
nop
outsb
xchg
gs
gs
and
push
ss
mov
cmc
dec
inc
push
out
push
push
and
sbb
lods
movsb
lods
movsb
jmp
add
adc
pop
gs
enter
loope
ljmp
push
cmc
pop
cmc
and
sub
mov
dec
jmp
sbb
ja
sbbb
sbb
sbb
push
in
mov
pushf
pop
clc
outsb
je
ja
movsb
cmc
stos
das
rol
cmp
dec
or
pop
pop
les
popa
lock
pop
push
je
mov
jmp
mov
sub
pop
or
lret
popa
inc
mov
arpl
leave
fs
clc
or
pop
shlb
cs
mov
xchg
jmp
fmulp
les
or
push
or
das
pop
ss
cmp
pop
push
adc
inc
enter
andb
mov
cltd
pop
pop
mov
mov
mov
and
and
and
and
shlb
ret
incb
les
sub
mov
xchg
or
insl
or
inc
testl
push
fwait
adc
sub
push
outsb
lds
jbe
jp
sbb
cmc
xchg
mov
mov
xchg
cmc
xchg
cmc
lcall
stos
pop
scas
pop
mov
mov
mov
pop
pop
lret
pop
rcrb
pop
ficompl
ficomps
loop
out
ljmp
pop
cli
pop
pop
add
push
pop
or
adc
push
and
loope
or
inc
or
dec
or
pop
or
or
outsb
or
fidivrs
jle
sbbb
sbb
in
stos
or
mov
mov
jmp
and
popa
mov
in
inc
cmp
ret
push
je
add
dec
push
lods
jge
or
sbb
sbb
sbb
sbb
sbb
jle
movsb
ljmp
movsb
push
movsb
or
movsb
and
fs
inc
inc
dec
mov
mov
movsb
sbb
pusha
xor
cmp
shrb
cmpb
cmc
imull
cs
inc
mov
fisttpll
and
divl
pushl
pop
cmp
ds
inc
pop
dec
pop
dec
pop
push
pop
push
pop
pop
and
pop
push
outsb
pop
jb
jbe
jp
jle
sbbb
pop
mov
mov
xchg
and
and
movsb
mov
mov
mov
cmc
lret
out
ror
aam
stc
ss
out
pop
repnz
negb
cli
pop
pop
inc
push
and
shl
adc
sbb
and
cs
lret
cmp
ds
inc
mov
int
push
or
bound
pop
jb
jbe
jp
jle
bound
pop
or
add
add
pop
inc
mov
jmp
aam
jecxz
jmp
clc
sbb
xchg
inc
subb
inc
pop
add
xchg
adc
xor
lret
popa
jno
js
jg
lds
out
pusha
dec
popa
out
or
push
and
push
push
inc
adc
push
outsl
mov
pop
jl
mov
pop
pushf
bound
stos
gs
mov
gs
das
sub
xchg
inc
gs
lods
sub
adcb
scas
adc
mov
mov
mov
jle
movsb
fisubs
adc
pusha
iret
popa
loopne
xor
les
pusha
test
bound
push
add
and
and
mov
jnp
aam
xor
mov
xchg
mov
mov
mov
iret
jbe
movsb
adc
pop
cs
xor
inc
dec
korw
lods
pop
pop
pop
inc
bound
pop
call
pushf
movsb
mov
movsb
lret
movsb
shlb
movsb
loop
out
add
adc
pusha
sbb
mov
test
mov
inc
lcall
pop
dec
cltd
loop
or
jo
orl
scas
ss
lock
push
and
pop
rcrl
pop
mov
cs
call
pop
inc
dec
fs
adc
xor
jae
cmp
mov
mov
xchg
stc
lds
rcrb
andb
cli
push
add
sub
cs
jne
cmp
mov
dec
cmp
or
inc
mov
bound
movsb
jbe
jp
jle
xorb
lret
gs
dec
data16
out
jne
sub
pop
pop
inc
dec
stos
xor
daa
mov
loopne
xchg
pop
cwtl
adc
shr
mov
outsb
outsl
xor
sub
push
adc
scas
pop
adc
sub
xor
test
mov
mov
dec
mov
pushf
sahf
xchg
mov
mov
movsb
clc
movsb
add
ret
jnp
addl
test
xor
pop
pusha
je
mov
cmc
sahf
xor
add
sub
adc
out
xchg
pop
pop
push
mov
mov
mov
sub
cmp
inc
push
dec
adc
push
sbb
test
pusha
add
test
dec
mov
stos
push
xchg
mov
lcall
and
mov
loop
mov
dec
les
pop
jne
data16
je
mov
cwtl
pop
popf
pop
mov
sbb
sbb
sbb
sbb
cmp
mov
outsl
jb
dec
xchg
or
scas
or
push
dec
add
pop
and
loopne
lcall
int
and
push
fnsave
je
xchg
mov
push
lahf
push
cwtl
and
dec
mov
xor
push
xchg
or
jmp
bnd
in
dec
test
or
fisttpll
adc
mov
dec
xor
icebp
lea
cwtl
or
in
mov
sbb
sahf
loop
sbb
cmp
ret
dec
inc
push
mov
or
enter
les
xor
cmp
dec
call
sub
jns
test
xchg
dec
subb
push
inc
ljmp
lds
fiadds
xor
cmp
inc
popa
lds
nop
call
stos
push
cmp
mov
mov
int
clc
mov
push
xor
or
xor
insb
popa
pushf
jno
mov
je
les
dec
fs
mov
dec
test
lock
xchg
pushw
lret
dec
das
push
jbe
shlb
mov
test
jle
lret
xchg
push
mov
jb
mov
movsb
ljmp
cli
out
add
push
pop
or
push
pop
adc
push
pop
sbb
push
pop
arpl
int
in
int
jmp
pop
xchg
enter
add
sub
or
sbb
jmp
mov
mov
cmc
and
sub
mov
call
into
movsb
rolb
std
xor
cmc
out
cmc
repnz
div
cli
cmc
icebp
add
push
pop
adc
push
pop
sbb
push
and
pop
loop
in
inc
sarb
sub
and
and
mov
jle
adc
xor
lods
stos
pop
call
mov
lret
rorb
push
cmp
das
sbb
int
ffree
xor
dec
out
pop
imull
testb
sub
xor
lret
or
and
mov
out
shl
daa
pop
cwtl
das
lcall
push
mov
mov
fdivs
lret
adc
cmc
lcall
icebp
stos
or
dec
push
fcmovb
dec
cmp
rorl
test
add
sarb
sub
pushf
xor
movsb
inc
jno
xor
cmc
push
out
pop
mov
cmc
cmc
out
push
je
pop
jbe
jp
jle
xchg
mov
mov
xchg
pop
xchg
pop
out
sahf
and
lds
lds
lret
faddp
loop
out
ljmp
mov
mov
adc
mov
sub
cs
ss
jle
mov
dec
push
push
jle
inc
cmp
icebp
outsb
dec
dec
jbe
jp
jle
add
mov
lcall
cwtl
scas
pop
mov
pushf
mov
movsb
jo
das
add
xchg
pop
ficomps
loop
out
out
pop
repnz
negb
and
and
and
and
loopne
movsb
push
andl
pop
sub
les
inc
cmp
mov
add
push
add
or
stc
sarb
cld
push
push
js
sub
out
popa
fs
lea
sbb
mov
adc
sub
insl
xor
add
inc
or
ljmp
std
sbb
andl
idiv
movsb
jp
jle
andb
xchg
xor
jns
push
cld
std
and
gs
mov
daa
sub
xor
fisubrl
push
xchg
pop
cmp
xor
push
out
arpl
mov
outsb
mov
xor
mov
bound
mov
mov
in
sbb
sarb
pop
out
pop
repnz
lock
push
lods
or
push
notb
fiaddl
fiadds
sub
cs
xor
ss
lds
inc
lds
dec
lds
push
mov
mov
outsb
or
jle
orb
or
lcall
or
mov
mov
add
cmp
or
ds
and
inc
lcall
dec
jg
inc
jb
popa
push
movsl
sub
pop
adc
ficoms
mov
out
or
xor
and
mov
adc
push
loop
inc
push
mov
inc
cmc
inc
scas
inc
mov
mov
dec
mov
and
mov
sub
or
gs
push
lret
insl
out
or
push
movsb
dec
cli
pop
aam
pop
push
pop
or
push
fs
stos
push
jle
je
lods
cmp
sub
ss
cmp
and
push
and
sub
or
jb
jbe
pop
gs
andb
mov
lds
lds
lds
lds
lret
shlb
fldt
or
into
fisubs
dec
repnz
movsb
or
push
and
and
and
and
fistpll
ss
cmp
aaa
push
sub
cs
xor
ss
and
inc
or
inc
sbb
dec
sbb
sub
jmp
test
push
outsb
jne
jmp
sbb
mov
sbb
addl
repnz
dec
cli
and
and
and
and
and
in
inc
push
lds
lds
lds
fiadds
sub
cmp
or
sbb
and
dec
and
xor
sub
pop
push
push
gs
push
sbb
jbe
jle
andb
mov
mov
xchg
cmc
xchg
cmc
lcall
cmc
scas
cmc
mov
mov
mov
add
xchg
into
sbb
sbb
sbb
cli
sahf
inc
out
ljmp
inc
add
push
lds
lds
lds
mov
inc
cmp
mov
or
scas
orl
bound
push
imull
xchg
or
pop
xor
cmp
outsl
sub
icebp
lds
loop
jle
fisttps
dec
mov
call
movsb
mov
cmpb
xchg
sbb
dec
out
ror
outsb
dec
loopne
mov
mov
xchg
lcall
pusha
stos
push
call
dec
pusha
les
pop
int3
scas
xchg
cmp
xor
mov
jecxz
cmp
lcall
lock
jp
repnz
loop
movsb
mov
jae
idiv
fs
je
enter
pusha
mov
cld
icebp
and
add
andl
negl
repnz
pop
rorb
mov
dec
jg
mov
add
mov
lods
gs
jle
sarl
pushf
cld
enter
mov
out
leave
push
loop
pusha
test
lods
je
test
cmp
in
mov
shrb
pop
filds
xchg
mull
gs
dec
xor
pop
push
jbe
xchg
fs
cmpsb
dec
int3
out
in
stc
pop
pop
mov
hlt
jmp
leave
call
clc
dec
sahf
sub
lods
add
rcrl
fcoms
stc
je
jmp
mov
cmp
imul
enter
mov
jmp
clc
or
push
mov
and
and
fistps
getsec
xchg
push
lcall
movsb
push
xchg
rolb
jl
loope
hlt
stc
pusha
lahf
push
push
pop
pop
fdivrs
imul
mov
sbb
push
fsubs
pusha
push
add
adc
sub
push
mov
dec
and
jns
mov
stc
popa
sub
jg
lret
xchg
stos
fwait
stc
les
pop
lds
int3
pop
rcrl
ficompl
outsb
mov
shlb
fucomi
or
movsb
movsb
inc
cwtl
mov
pop
test
or
push
jb
jns
sbbb
ficompl
inc
xchg
lds
sbb
jo
xabort
shll
popa
bound
test
insl
lcall
cmc
or
daa
bound
in
lea
xor
addr16
pop
popf
pop
movsb
mov
push
mov
xor
loopne
fsubs
jmp
lcall
fisubl
xchg
push
sub
pop
pop
cmp
push
xchg
add
into
movsb
dec
mov
cltd
test
mov
nop
cmp
jne
shl
fdiv
sahf
in
or
add
or
aaa
dec
inc
insl
pusha
mov
jbe
or
imul
fucomp
in
cmp
pop
jo
mov
lods
in
lea
sti
or
sahf
sbb
and
daa
ret
outsl
rcrb
stos
sub
fimuls
ss
iret
and
pusha
orb
cmpsb
inc
ficompl
inc
mov
ret
mov
inc
mov
int
and
pop
aas
dec
pop
push
pushl
lcall
insl
jbe
jle
xchg
lret
mov
punpckhdq
pop
in
in
nop
das
je
pop
jbe
bound
pop
inc
outsl
push
pop
pop
push
insb
mov
ja
cmp
and
and
and
and
sub
cwtl
inc
call
pop
xchg
pop
lahf
pop
cmpsl
pop
mov
mov
stc
and
and
sub
pop
cmp
ret
mov
fadd
fdivrs
das
xor
incb
test
sub
popa
call
mov
add
xlat
fidivl
mov
icebp
negl
jp
add
je
call
add
movsb
insb
mov
dec
gs
out
sbb
ss
push
out
inc
push
xorl
or
inc
push
cwtl
fistpl
mov
in
push
pop
inc
pop
pop
jg
lahf
popa
movsl
dec
mov
iret
mov
mov
or
push
cmc
sbb
and
test
cmpsb
bnd
mov
dec
ds
cmpsb
dec
pop
pop
mov
inc
xor
pop
mov
icebp
pop
mov
dec
js
stc
fs
cmp
fcoml
stos
shr
in
mov
cmc
and
pop
std
pop
push
insb
out
addl
arpl
sahf
cwtl
int
test
and
push
xor
gs
jno
jmp
out
jno
out
in
div
movsl
xor
push
jns
mov
or
mov
cld
ss
mov
aam
push
scas
add
inc
rcrb
mov
stos
push
fnstsw
addb
in
add
dec
inc
pop
aad
outsl
push
int3
outsb
insb
arpl
iret
fidivrl
mov
ja
fidivl
sbb
xor
xchg
dec
gs
jbe
jno
enter
popa
popa
bound
outsl
lods
hlt
jge
test
out
imulb
movsb
and
test
jg
outsb
push
push
fidivl
repnz
or
in
inc
test
sbb
scas
mov
js
and
jle
dec
dec
sub
jmp
mov
sub
jns
mov
imul
testl
aam
dec
mov
sbb
add
jns
sahf
leave
mov
into
cmpsl
push
adc
xchg
push
adcb
sub
fwait
xchg
and
sbb
xor
xchg
lock
pop
pop
jmp
xchg
mov
out
rcll
fnstsw
mov
pop
jl
inc
adc
pop
xor
shlb
scas
movsl
jbe
jne
test
cmpsb
jle
movsb
loope
call
adc
add
pop
xor
push
dec
fadd
cmp
and
pop
insb
lods
sub
lea
cmpsl
jo
xchg
popa
das
mov
push
dec
inc
pusha
cmpsl
lcall
add
inc
xlat
mov
or
lods
adc
cmp
fs
push
mov
lcall
sbb
mov
ljmp
jmp
enter
movsb
mov
sbb
out
push
int3
rclb
insb
les
jl
test
les
out
push
je
cwtl
xchg
jne
xor
jno
push
or
pop
xor
sub
lret
sahf
jo
ja
je
in
xor
scas
jp
cmp
test
or
stc
adc
gs
jno
ja
mov
mov
mov
outsl
push
push
out
je
sbb
and
adc
rcrb
jmp
out
pusha
scas
inc
mov
stc
push
cmp
and
sub
cmp
mov
cmp
stc
dec
mov
jo
jp
test
mov
cwtl
push
test
sbb
cld
pushf
inc
aad
fadd
jecxz
mov
scas
xchg
sarb
push
mov
ret
jg
mov
xchg
cmp
test
push
rcrl
pop
jno
test
sub
push
dec
clc
push
adc
and
sub
js
test
ljmp
jno
and
cmp
movsb
sahf
adc
cs
mov
push
inc
inc
pop
dec
ret
and
xor
in
scas
push
sub
out
mulb
push
sbb
pop
push
xor
or
mov
dec
push
das
int3
jno
mulb
sbb
push
leave
mov
push
call
and
mov
push
repnz
loop
shlb
push
sub
mov
cwtl
xlat
gs
add
hlt
push
or
adc
pop
ret
sub
cmpsb
dec
fldt
jmp
std
into
sub
jle
cmpsl
jno
pop
lret
loop
or
lods
or
andb
push
xchg
cmp
ljmp
jecxz
mov
xchg
xorl
lret
gs
mov
cmpl
mov
outsb
cli
mov
mov
enter
jg
sbb
jne
addb
fists
push
push
xchg
lods
jo
mov
push
mov
push
dec
adc
adc
ret
mov
popf
scas
int3
lahf
scas
jnp
out
jmp
call
test
inc
test
add
leave
repnz
sbb
stos
jp
push
sub
xlat
pop
and
lcall
adc
setle
test
adc
push
jl
mov
test
adc
jno
sub
mov
cs
inc
loop
popa
popa
push
push
jge
test
mov
cwtl
gs
mov
mov
mov
imulb
test
push
rcrb
cmpsb
movsl
lods
jo
or
popa
cltd
addr16
push
jbe
cmp
ret
mov
out
je
sbb
adc
push
xchg
or
and
roll
push
std
mov
jl
dec
pop
addl
aad
mov
lcall
pop
mov
mov
call
fsubrl
jg
leave
adc
mov
scas
dec
mov
pop
push
das
inc
cli
inc
cmp
xlat
push
jo
bound
out
xchg
xor
out
clc
xor
fistpll
cld
shrl
addr16
jmp
adc
cmp
mov
ret
mov
cmpsl
add
cld
cmp
rcll
loop,pn
mov
mov
int
mov
add
int
mov
mov
and
xchg
sti
mov
cmp
add
mov
push
popa
pop
dec
insl
insl
jbe
jge
jle
shlb
jle
jno
push
into
shll
fcmovnb
stos
push
out
and
gs
bound
dec
mov
mov
mov
mov
sbb
sbb
test
or
es
les
nop
stos
jo
or
inc
test
hlt
push
and
cmc
jae
jge
xchg
mov
call
xor
or
xor
in
jo
movsb
mov
or
jge
sub
or
jg
std
push
repz
xchg
daa
inc
ds
inc
push
or
dec
cs
lret
sub
pop
push
ficoms
adc
xor
negb
push
popa
pop
bound
cmp
push
mov
or
lcall
adc
inc
out
push
push
jl
pop
hlt
jecxz
mov
sub
jmp
mov
lea
or
stos
fld
jmp
xchg
and
sub
cwtl
xor
jo
cmpsb
xchg
and
pop
mov
xor
aas
pusha
movsb
je
mov
call
lods
dec
rorl
imul
mulb
cmpsl
push
pop
and
ret
pop
push
fs
lahf
data16
xorb
insl
mov
lret
pop
inc
cmpb
aad
pusha
addb
jecxz
xchg
pop
jle
shr
int3
add
mov
aam
jnp
cmp
ss
popa
dec
push
out
xchg
lcall
or
in
fidivrs
movsb
lret
xor
xchg
lock
or
fst
dec
mov
in
sbb
xchg
imul
mov
sub
push
in
in
inc
in
inc
add
or
vmread
mov
dec
inc
dec
lds
pop
lds
insl
lds
adc
fidivs
gs
dec
sub
mov
sbb
sub
or
jmp
xchg
and
inc
pushf
insb
xorb
xorl
stos
movb
cld
sub
mov
into
push
mov
out
and
push
lcall
test
loope
sbb
inc
outsl
push
push
push
mov
stos
adcl
dec
mov
xor
mov
sbb
pushf
mov
mov
in
outsl
add
dec
push
ss
mov
mov
outsb
jbe
ss
sub
mov
mov
arpl
aad
xor
leave
xchg
fcomps
lock
les
and
cmp
pusha
jle
movsb
jo
or
cmpb
lcall
es
std
daa
jb
pop
jl
xor
add
xor
sub
aam
fmul
sahf
lds
jl
popa
jae
sub
enter
sbb
cli
les
and
movsb
and
mov
in
adc
mov
mov
push
outsb
inc
jno
adc
mov
mov
push
xchg
cmc
movsb
lcall
movsb
xchg
sbbl
stos
pop
loopne
hlt
in
and
lds
lds
cmp
inc
mov
call
rorl
jecxz
push
negl
pop
jno
jl
out
mov
sarl
cs
dec
push
pop
sub
adc
iret
sub
clc
add
and
adc
mov
testb
aam
cmp
jbe
enter
inc
sbb
inc
jae
cmp
test
jbe
stos
adc
dec
cmpsb
ret
call
movsb
push
jno
das
cld
xchg
xchg
pop
in
gs
sbb
push
lcall
dec
jne
or
mov
fisttps
mov
xor
push
cwtl
jno
cwtl
pop
mov
cmp
clc
les
cmp
push
mov
pop
das
pop
test
imull
jle
jno
test
and
inc
incl
and
arpl
lcall
mov
into
stc
enter
adc
aam
add
mov
cmpsb
sub
cwtl
addr16
dec
mov
mov
mov
movsb
or
das
inc
daa
xor
jmp
sti
xor
out
lods
rclb
push
mov
lret
xchg
clc
jl
lcall
xor
jno
mov
loop
mov
icebp
repz
addr16
pop
jns
xor
mov
test
sub
adc
push
lcall
mov
or
repz
sbb
push
out
pop
cld
add
scas
call
cmp
cwtl
push
loopne
jg
adc
stos
mov
mov
and
push
shr
fiadds
dec
pop
push
pop
dec
das
sub
fucom
xor
xchg
pushf
stos
inc
repz
sbbl
jne
test
lret
push
pop
cwtl
mov
push
sub
popaw
sbb
nop
fldl
fsubs
clc
push
out
fwait
imull
mov
xchg
outsb
cld
xor
push
push
jg
mov
push
data16
mov
mov
pop
lret
out
add
ds
pop
ss
inc
cmc
sub
dec
popa
ret
ret
cmp
jmp
fsts
call
mov
and
or
test
gs
lods
or
lods
xor
fists
xor
sti
ficoms
sbb
sub
jb
cmp
jl
or
sbb
repz
xor
add
push
lcall
cmp
imul
int3
sbb
push
in
shrb
or
pusha
cmpsb
or
push
into
sub
rorb
push
test
cmp
nop
sub
cld
and
push
or
das
lock
cwtl
idivl
push
icebp
pop
xchg
push
cmpsl
mov
cmp
push
mov
push
mov
add
cmp
repz
test
fadds
adc
dec
pop
dec
sub
xor
cmpsb
sub
pop
pop
pop
jnp
in
aam
jle
orb
ret
mov
inc
mov
in
push
mov
lcall
dec
dec
adc
out
pop
aaa
mov
loop
cmp
jne
jmp
pop
dec
mov
scas
btc
scas
inc
cmp
push
sub
mov
pop
sahf
mov
pop
push
jno
out
jno
js
jg
pop
mov
mov
xor
pop
adc
xchg
xor
popa
test
lcall
sub
test
arpl
cmp
mov
push
inc
in
sub
imul
loopne
cmp
cmp
cmp
mov
das
cmp
lret
aad
push
pop
bound
mov
push
or
ret
shrl
push
cmp
lods
mov
scas
sub
loopne
aam
dec
lahf
outsl
stos
jbe
cmp
pop
cmp
mov
mov
cwtl
sbb
or
loopne
rclb
rcl
or
sub
push
cli
das
pop
pusha
int
pop
mov
ljmp
arpl
das
andb
ficomps
dec
cmpsb
jo
xor
shlb
fldcw
scas
push
xchg
inc
js
mov
loopne,pn
sub
mov
adc
jmp
jbe
jno
test
stos
jge
fsubrl
into
lcall
pop
sarl
cli
dec
pusha
jno
enter
push
outsl
sub
push
mov
pop
fadds
xchg
dec
adc
mov
mov
inc
mov
and
inc
les
cmp
out
push
outsl
mov
adc
adc
ret
popf
cmp
dec
movsl
out
and
cmp
aam
cmp
fsts
sbb
enter
xor
pusha
and
xlat
je
test
in
leave
adc
and
jle
lock
fwait
call
inc
hlt
push
xchg
xchg
xor
xchg
xchg
or
mov
cwtl
aad
in
movsb
push
pop
dec
sub
sarl
and
push
mov
mov
xchg
push
push
mov
jo
mov
shll
icebp
mov
xchg
add
loope
or
jne
inc
mov
sbb
lcall
xchg
test
lret
push
adc
je
das
sbb
jbe
xorb
mov
fcmovnbe
dec
ret
jbe
std
stos
push
pop
popf
jmp
je
xchg
test
pop
cmp
adc
inc
or
popa
or
bound
enter
push
xor
jno
and
push
scas
out
lds
adc
push
pop
xor
dec
push
xor
test
notb
jg
js
sub
jl
enter
inc
mov
daa
rorb
gs
movsb
xchg
mov
jbe
xchg
jb
popa
jmp
jge
mov
xchg
and
aas
clc
sub
xchg
mov
cmp
or
lret
dec
fstpt
mov
dec
ficoms
dec
movsb
or
idivl
sub
xchg
sahf
push
push
aam
add
mov
lock
or
aam
push
insb
sysenter
test
fildll
push
cli
addr16
dec
pusha
test
cmp
fdivrs
imul
cmpsb
pop
mov
xorb
and
movsb
push
pop
pop
mov
int
inc
jl
mov
in
fs
pop
mov
rorb
xor
sbb
dec
mov
jo
shr
pusha
iret
popa
fcoml
stos
enter
hlt
in
sub
gs
into
lcall
fmulp
scas
lret
push
inc
mov
pop
pop
rcll
xor
cmp
adc
movsb
push
das
iret
mov
xchg
test
iret
push
in
or
gs
dec
add
outsl
jo
hlt
dec
sub
cmp
in
dec
push
cmp
idivb
sbb
jle
outsl
add
sysenter
popa
push
outsl
sbb
lock
lcall
mov
adc
xchg
fs
out
lahf
fs
jp
cmp
push
sar
and
mov
inc
ret
into
dec
fidivrl
mov
sbb
inc
cmp
jg
pushf
outsl
sarb
mov
sub
lret
and
push
push
pop
test
sbb
xor
mov
int
sub
cmp
mov
lcall
fdivs
push
dec
sub
enter
push
pusha
dec
pop
test
js
mov
mov
push
cmp
push
mov
test
cmp
lods
shl
out
loopne
add
lahf
addb
mov
test
incb
fimull
das
mov
adc
sbb
dec
imul
mov
jmp
pop
pop
mov
lods
imul
sub
popa
mov
cmp
stos
hlt
loope
pushf
data16
gs
or
mov
adc
data16
scas
scas
jno
xor
lods
mov
insb
bound
subb
sbb
push
or
lods
dec
and
in
mov
xorb
jle
add
sub
inc
and
xchg
mov
lods
gs
jae
fwait
mov
dec
int
aad
pop
test
push
fildl
push
das
adc
xlat
cs
jle
sub
push
jne
jnp
inc
push
dec
shll
lret
add
jno,pt
jmp
xchg
mov
cld
mov
cmc
out
lret
sahf
scas
movsb
fldenv
ffree
mov
or
out
xchg
pop
pushf
mov
test
xchg
in
setae
jecxz
shrl
cmpb
fistpl
shrl
jnp
cltd
pusha
jnp
les
dec
jnp
jae
xchg
ja
jl
jmp
jg
out
jnp
jg
addl
movsb
xor
jl
cmp
jne
lahf
icebp
mov
test
mov
hlt
lret
and
jecxz
js
push
cli
dec
fistps
mov
out
jmp
add
sbb
sbb
and
and
dec
mov
xchg
or
nop
popa
cmp
sarl
fadds
xor
call
cld
fdivrs
movsl
push
push
int
fneni(8087
push
movsb
add
push
jg
add
push
mov
mov
cli
pop
cmp
rclb
push
ret
jmp
pop
inc
and
push
cmp
mov
push
mov
sub
adc
sub
bound
leave
jo
mov
jmp
scas
fsubs
xor
jno
push
inc
mov
inc
imul
push
xchg
jno
sub
push
loope
in
enter
cmp
fdivs
sub
xchg
push
jl
leave
pop
mov
cltd
push
out
sub
fisubrs
fstps
push
arpl
imul
or
push
out
mov
arpl
jle
sub
shlb
test
popa
call
out
scas
fs
dec
xchg
sub
aaa
dec
imul
pop
pop
dec
lcall
lcall
pop
shrb
adc
enter
dec
popa
dec
stos
sbb
clc
pop
lds
ds
sub
pusha
mov
and
das
fs
out
js
xor
jne
scas
in
push
loop
dec
dec
jge
int3
cmp
out
push
jb
jbe
cmp
mov
and
dec
pop
rcrl
orb
lret
cli
lock
jns
imul
ret
or
cltd
test
dec
outsl
xchg
xchg
jmp
call
ljmp
pop
nop
fisttpl
and
mov
xchg
pop
test
cmp
mov
sub
or
push
cmp
mov
push
sub
or
cmp
jp
pop
mov
lcall
into
xor
and
push
push
adc
loopne
adc
test
pushf
push
jmp
add
push
add
push
mov
jbe
and
int3
in
stos
imul
adc
loope
sbb
cmp
hlt
jns
inc
out
push
jle
mov
mov
adc
hlt
rcrb
pop
inc
pop
jno
xor
pop
push
adc
xor
jbe
jo
jmp
pop
adc
inc
ficoml
cmp
jle
sahf
fstpt
fsubrs
pop
stos
pusha
lret
push
mov
push
sub
and
dec
outsl
in
or
push
sub
pop
xor
sub
fsubl
dec
ret
push
adc
gs
aam
mov
dec
das
push
mov
inc
clc
pop
sub
pop
pop
gs
jl
mov
ret
stos
xchg
lret
je
out
popa
inc
push
xor
loopne
add
fmul
ret
cwtl
xchg
cmp
arpl
fsubl
popa
leave
dec
push
cli
add
scas
xchg
aad
lods
mov
xchg
fmull
out
pop
popa
call
cmp
push
mov
mov
jb
int3
jne
js
jb
push
pop
sub
cli
lods
out
mov
cmp
stos
mov
inc
int3
ds
ret
pop
cld
mov
xchg
push
xchg
xchg
xor
stos
imul
cmp
mov
xchg
jbe
out
outsb
dec
xchg
out
dec
xchg
in
mov
test
xchg
inc
enter
jne
jnp
xchg
subb
sub
mov
test
cmp
or
enter
imul
dec
aaa
lods
pop
or
push
inc
sub
rolb
js
je
jb
xchg
jmp
test
xchg
sub
ficomps
push
imul
imul
sti
pop
add
jp
adc
pop
ficompl
stos
pushf
out
lods
pop
mov
jno
cmp
mov
pusha
cmp
push
int
add
xor
mov
int
add
adc
sbb
or
mov
cmpsb
inc
scas
sbbb
push
sub
into
sub
push
aad
jne
xor
fidivl
xor
jbe
je
das
and
or
push
fstps
and
push
sub
pop
push
mov
sbb
stos
mov
push
pop
loopne
test
mov
jl
mov
js
pop
cmp
test
test
xchg
and
inc
mov
int3
adc
mov
xor
test
frndint
out
pop
xchg
jecxz
xor
bound
int3
push
je
xor
lods
cmc
lret
xor
out
xor
pusha
lahf
dec
loopne
adc
lret
call
cmp
pusha
pop
idivl
xchg
arpl
push
cwtl
pop
test
test
inc
arpl
jno
rolb
push
frstor
andl
cmp
clc
sbb
xor
sub
push
inc
dec
push
push
addr16
cmp
push
inc
out
test
xor
and
mov
jbe
mov
pop
xor
mov
push
pop
mov
inc
jmp
fwait
lods
in
int
ljmp
mov
leave
mov
out
inc
pusha
mov
das
pop
and
ljmp
pushf
inc
adc
ret
ja
inc
aas
inc
inc
mov
mov
out
fxch
xor
into
mov
cmp
pop
leave
push
push
iret
stos
xchg
aaa
cli
repnz
in
sbb
pop
xor
jo
dec
mov
jecxz
lods
stos
mov
push
stos
pushl
push
sbb
stos
cmp
push
add
addr16
pop
xchg
in
cmp
cmp
pop
outsb
mov
sub
push
adc
inc
or
dec
cmp
dec
fimuls
xchg
hlt
xchg
adc
jge
add
enter
cld
outsl
sub
pusha
lds
jle
and
or
sub
dec
pop
xchg
mov
mov
mov
adc
sarb
nopl
push
test
movsb
or
sub
fdivr
push
and
push
xor
test
push
jns
sub
stc
cli
or
test
sbb
stos
inc
int
call
adc
pop
mov
pop
mov
mov
xor
push
negb
cmp
int3
pusha
divb
dec
push
pop
add
pop
cs
test
cld
outsb
cmp
sahf
pushf
lds
add
out
ds
test
cmpb
lds
sahf
cmp
movsl
xor
sub
scas
aaa
jb
pop
lahf
pusha
les
pushw
and
cwtl
lcall
int3
into
or
into
bound
push
sub
jbe
push
push
stos
and
dec
pop
addr16
cmpsl
movsl
inc
sbbb
je
faddl
daa
in
adc
mov
add
xor
pushf
xor
mov
adc
call
nop
pop
in
arpl
lock
decb
out
add
mov
stos
dec
fcoml
push
sub
xor
pop
lods
outsl
mov
les
cmp
pop
jne
cmpb
test
push
push
pusha
test
sarb
pop
and
fs
xchg
nop
jmp
sub
pop
dec
nop
call
lock
sbb
adcb
gs
gs
rclb
outsl
cmp
out
mov
insl
jl
cmp
mov
mov
daa
jbe
je
push
push
scas
scas
int
lret
and
dec
add
adc
jo
xchg
pop
std
xchg
xor
xor
les
and
and
pop
pop
imul
call
cmp
or
pusha
adc
mov
push
sub
arpl
fcompl
or
mov
sbb
sub
mov
out
inc
add
ss
ss
in
sub
pop
stos
jno
and
call
in
mov
fidivs
push
pop
cmp
mov
ja
pusha
fcompl
shrb
cmp
add
aaa
dec
fdivp
bound
out
call
xchg
mov
test
jecxz
push
dec
push
je
loop
cmp
fwait
xor
fisttpll
scas
mov
out
add
push
bound
arpl
push
lods
subb
das
mov
ret
ljmp
mov
and
sub
cmp
pop
jo
call
sub
or
shrb
cmp
iret
push
aad
je
cmp
test
or
adc
das
movb
pushf
gs
jo
out
lods
sarb
mov
lods
pop
int
adc
mov
mov
inc
sahf
leave
jo
xor
pop
out
mov
sarl
pop
stos
in
cmp
shlb
jle
mov
xor
pop
ss
decl
clc
dec
jp
out
lcall
fsts
xor
out
das
sahf
cmpsb
dec
cmp
les
jns
js
sbb
test
cmp
call
xor
lret
jp
cmp
iret
aam
push
sub
bound
push
jae
sbb
dec
js
addr16
pop
add
and
pop
nop
out
dec
add
xchg
popa
xor
mov
add
jbe
outsl
xchg
orb
lcall
lock
test
aam
mov
out
mov
jno
add
leave
mov
cwtl
mov
xor
cmp
sbb
out
cli
mov
addl
loope
icebp
dec
pop
jp
hlt
cmp
push
sub
stos
jle
rclb
or
pusha
sub
test
push
les
hlt
sub
fidivrl
dec
xchg
adc
pop
les
pop
test
adc
mov
or
push
and
and
pop
popa
dec
push
push
or
mov
xchg
out
push
movsl
mulb
jg
outsb
fmuls
stos
movsb
push
call
sti
dec
and
jmp
stc
sbb
enter
test
cli
mov
dec
inc
stos
lds
enter
cmp
sbb
lods
mov
lret
mov
ljmp
pop
inc
dec
push
stos
adc
push
sub
lds
mov
push
dec
adc
jl
insb
test
cld
mov
xchg
and
test
movsb
cld
cmp
outsl
mov
mov
xor
lcall
push
in
scas
movsl
outsl
cld
dec
xchg
xor
and
ds
cmp
pop
inc
andb
dec
pop
xor
das
sbb
push
nop
test
sar
insb
or
add
stos
insb
bound
aam
lds
cmp
gs
lea
inc
cmp
imul
sbb
push
out
dec
push
or
adcl
ds
in
inc
inc
loop
pusha
addr16
jge
clc
cmpsl
shufps
lds
cmp
jbe
icebp
out
call
sti
rcrl
ss
lret
and
push
cmp
jb
mov
xchg
pop
sub
xor
pusha
push
les
dec
enter
mov
scas
sarb
outsb
jecxz
mov
icebp
test
or
jmp
sarb
jb
out
mov
xchg
xchg
leave
push
fcmovnb
int3
cmp
push
out
xor
idivb
outsl
lods
enter
inc
mov
gs
inc
sarb
loope
cli
cmc
into
mov
sub
and
clc
sub
sub
xor
push
inc
mov
inc
movsb
dec
jne
xor
scas
aas
jne
jl
mov
into
sub
sahf
lret
or
sbb
dec
fsubrs
pusha
pop
imul
push
and
xor
jle
lcall
mov
mov
mov
outsl
sahf
adc
jmp
hlt
jno
jmp
test
pushf
and
pop
adc
push
sub
and
nop
in
mov
call
sub
cli
test
mov
lcall
sahf
into
dec
shrb
jmp
das
pop
cmp
xchg
adc
xor
call
hlt
lret
rol
inc
shll
fistps
pusha
push
push
cwtl
fs
jge
xor
mov
insl
jno
jl
xchg
sbb
sbb
cmp
push
clc
bound
dec
or
in
inc
out
dec
negl
jge
xchg
test
scas
xchg
stc
nop
xor
pusha
inc
push
jne
push
repnz
mov
mov
dec
sub
push
cmpsl
mov
sub
or
push
push
cmpsb
sti
and
sub
jg
lods
jmp
insb
mov
adc
adc
sbb
adc
and
lcall
clc
cmp
push
das
dec
xchg
jbe
movsb
mov
mov
push
xchg
out
cmp
outsl
lret
adc
mov
faddl
rsqrtps
sub
push
xor
pushf
test
sahf
dec
mov
push
xchg
jbe
lds
pop
cwtl
insl
sub
outsl
adc
addr16
prefetchwt1
cltd
push
add
push
dec
addr16
enter
xchg
pop
popa
mov
xor
sub
mov
jg
loop
daa
out
pop
nop
pusha
cmpsb
dec
mov
cmp
fiaddl
shl
ss
inc
in
xor
arpl
imulb
sbb
dec
fdivr
fsubrs
out
xor
mov
sbb
push
pop
adc
popa
mov
or
sahf
adc
mov
movsb
sub
mov
outsl
xchg
out
test
pop
adc
sbb
out
ss
push
sub
adc
and
cmp
push
ss
push
mov
mov
mov
test
mov
stc
pop
adc
rolb
loopne
jne
xor
inc
xchg
inc
pop
cmpsb
insl
fisubrs
into
pop
push
jmp
xor
pop
xlat
or
mov
inc
push
outsb
mov
in
push
jl
cmp
push
mov
mov
mov
inc
rorb
comiss
shlb
xor
xorl
repz
fs
mov
cmp
call
es
xchg
xor
cli
mov
out
inc
jl
je
push
push
xchg
jbe
ljmp
push
dec
sbbl
jns
push
out
dec
pop
fadd
not
bound
or
lods
mov
shll
bound
test
push
jbe
or
mov
xchg
pusha
cmp
mov
xlat
push
mov
cmp
jle
in
sbb
repnz
inc
dec
sbb
jp
icebp
push
das
push
dec
adc
mov
dec
cs
sahf
cmp
pop
insb
addr16
testb
pop
outsl
mov
popa
stos
dec
mov
jo
pop
negl
pop
dec
xor
lods
mov
xor
mov
adc
pop
bound
adc
pushf
push
inc
jle
mov
mov
xor
and
mov
les
jle
addl
pop
xchg
mov
sub
clc
sbb
mov
test
mov
mov
out
outsb
push
push
inc
pop
adcb
push
add
ljmp
cli
in
inc
sbb
lock
aam
cmpsb
jbe
pusha
mov
loope
adc
xor
xchg
inc
jno
scas
mov
xor
addr16
mov
sub
sub
pusha
test
cs
push
mov
stos
and
and
popa
orb
jb
pop
lods
dec
push
xor
popa
imul
add
mov
call
shrl
js
xchg
push
pop
xchg
nop
movsb
pop
popf
mov
mov
and
and
rorb
inc
outsl
imul
fwait
arpl
push
jp
mov
jp
lea
adc
cmp
adc
xor
sub
sub
popa
test
cmpl
jne
outsl
ret
pop
jae
clc
pop
sbb
cmpb
in
dec
or
xor
xchg
add
lods
or
imul
pop
pushf
pop
sbb
shl
out
add
xor
sub
rorb
fistpl
int3
fdivrs
cli
mov
jp
push
mov
stos
je
and
cmp
scas
inc
jle
jne
push
push
push
and
pop
and
loop
push
outsb
lds
jbe
enter
xchg
mov
sbb
out
xchg
negb
cmpsb
and
xor
add
push
andb
repnz
cli
pop
pusha
das
jp
lcall
sbb
cli
outsb
out
pop
insb
sbb
rolb
movsb
inc
sbb
mov
int
and
and
sbb
int
sbb
add
sbb
or
popl
sbb
bound
xor
add
adc
push
je
push
stos
jbe
loop
je
push
sbb
add
or
stc
fiadds
ficoml
je
cld
fcmovbe
les
xchg
and
pop
aad
and
adc
mov
or
mov
jne
stos
std
roll
clc
adc
adc
jecxz
add
clc
adc
movsb
mov
clc
and
clc
adc
jno
push
pusha
adc
jbe
jp
lcall
mov
mov
push
in
shll
fsubrs
jecxz
fdiv
dec
out
push
movsl
mov
hlt
sub
jl
adc
repnz
outsl
and
jl
in
fimull
loop
cmp
mov
jp
push
xor
dec
pusha
pop
insl
pusha
lea
js
xor
mov
scas
mov
and
push
movsb
cmp
add
hlt
inc
cltd
mov
popa
push
faddl
bound
push
adc
push
movsl
test
addr16
jl
shlb
out
int3
push
mov
xchg
pop
mov
adc
sub
pusha
inc
push
pop
mov
cs
sbb
jb
mov
or
xchg
ret
adc
push
inc
ltr
ret
stos
dec
stos
rclb
mov
pop
inc
jbe
loop
cmp
jp
dec
dec
jno
mov
dec
pop
aam
outsl
arpl
shlb
push
mov
fstpt
stc
loopne
int3
and
push
test
mov
dec
scas
jmp
pop
xchg
pop
mov
mov
or
clc
test
les
xor
push
cwtl
cwtl
pop
fs
jo
adc
test
int3
lock
mul
mov
sbbl
cmpsb
push
inc
sub
xor
lea
stos
fsubrl
ds
sahf
or
sbb
mov
pusha
iret
dec
fcomps
dec
cmp
jo
push
mov
jle
out
xchg
not
push
pop
clc
gs
or
jb
jp
loop
mov
scas
in
pop
dec
sahf
add
stc
pop
rcrb
dec
std
mov
pusha
int
loop
lock
das
ss
je
cmpsl
inc
bound
pushf
dec
lock
bound
sbb
out
inc
mov
test
jb
subl
mov
je
adc
push
loopne
and
in
cmc
jno
int
test
stos
push
fimuls
jb
pop
pop
xor
jl
js
into
data16
dec
paddd
mov
ljmp
push
mov
inc
nop
inc
sub
ret
cmp
lods
fcomps
pop
xchg
pop
add
outsl
jp
ja
push
sbb
gs
addb
cmc
mov
lret
mov
adc
dec
lods
mov
int3
lods
and
mov
add
pavgb
push
push
jle
push
lods
in
mov
pop
mov
mov
and
imul
repz
ret
out
dec
stc
push
or
dec
aam
dec
cmpsl
jp
cmp
jmp
mov
icebp
mov
xchg
mov
imulb
lret
push
jo
enter
je
test
jl
inc
jne
ficomps
out
ret
cmp
shll
push
gs
xchg
jbe
jne
pop
hlt
adc
or
jno
lahf
les
sbb
pushf
pop
cmp
jle
fcompl
cmp
xlat
pop
data16
xor
dec
mov
jmp
xor
push
idivb
dec
gs
test
mov
mov
mov
inc
dec
dec
push
outsl
bound
dec
imul
testb
cmpb
and
inc
add
cmp
outsl
stos
insl
xchg
stc
mov
shlb
das
push
pop
xchg
xlat
dec
sbb
sbb
push
push
pop
jge
mov
xor
pushf
jbe
ret
xor
push
push
fldt
fs
pop
mov
xchg
sahf
cmp
push
ret
dec
fidivrs
fiaddl
sub
jne
push
xchg
lcall
mov
add
stos
insb
scas
sar
pusha
fistl
or
xor
push
fsub
sub
repz
push
cmc
jbe
test
das
movsb
gs
test
sbb
mov
js
stos
sub
jbe
inc
xor
ret
jns
jg
sub
mov
enter
dec
je
cmp
test
push
test
xor
sbb
pop
or
add
rolb
jno
mov
inc
pop
pop
pop
cmp
jg
mov
rorb
push
mov
mov
xor
fs
in
push
je
test
and
xor
out
mov
outsl
pusha
jo
test
fwait
or
fwait
push
bnd
dec
push
lret
loop
pop
and
jbe
push
add
jno
clc
jecxz
jo
ss
aaa
scas
dec
push
out
rcrl
dec
cmp
push
ss
clc
inc
mov
mov
sbb
ds
into
enterw
push
movnti
push
push
push
outsb
dec
mov
test
test
leave
mov
popf
jl
inc
sbb
popa
push
bound
lds
xchg
shlb
leave
adc
test
fidivl
cmp
push
pop
or
and
scas
push
sub
xchg
sahf
xor
ljmp
fdivs
cli
dec
out
jbe
jae
cld
xor
ja
lret
cld
jb
clc
rcl
xor
push
imulb
outsl
scas
push
pusha
repnz
sbb
xor
mov
ficoml
mov
pop
pop
jg
out
popa
mov
sbb
xor
mov
pushf
xchg
jno
jmp
outsl
push
cltd
lcall
push
int3
push
pop
fcompl
pop
jmp
incl
rolb
stc
inc
test
jmp
push
lods
outsl
test
dec
xlat
sub
pop
adc
push
xchg
out
add
push
ljmp
movsb
pusha
mov
dec
sub
xchg
push
inc
out
adc
pushf
jno
call
fwait
popl
or
les
cmp
hlt
xchg
inc
clc
and
sub
jg
jb
mov
pop
push
push
movsb
in
inc
fstpt
push
sub
lods
sbb
insb
xchg
add
sub
mulb
lcall
push
push
xlat
stos
adcb
jo
mov
into
shlb
sbb
lds
stos
dec
andb
in
lcall
stc
sahf
pop
jne
scas
sub
mov
call
mov
jmp
lcall
push
push
pop
pop
iret
rclb
or
loope
arpl
nop
jne
jb
sbb
pop
aam
testl
cmp
outsl
ljmp
les
pop
or
push
movlps
and
pop
xor
and
pop
sub
scas
loop
in
shlb
je,pt
sahf
add
xor
lock
stos
enter
das
sub
jl
repnz
pop
mov
scas
and
imulb
aam
mov
or
movsb
mov
jecxz
sub
inc
push
cmp
into
cmpsb
mov
or
or
fs
cmp
mov
add
test
les
enter
xor
sub
mov
shrb
jl
lcall
xchg
or
insl
and
xchg
inc
aas
pop
fisttps
sub
sub
pop
out
push
pop
adcb
dec
fnstsw
mov
loopne
je
xor
arpl
ljmp
mov
push
push
jb
jmp
or
out
dec
add
adc
and
push
xchg
inc
mov
xchg
sub
jg
enter
jl
xor
sbb
mov
test
push
stc
cmp
push
adc
imull
lock
push
rcr
xor
loope
cs
fisubrs
in
decb
jle
sbb
addr16
mov
jo
mov
jmp
clc
jmp
cmpsb
sub
sub
adc
cmp
pusha
orb
call
inc
jle
jne
xor
jno
movsb
adc
ficompl
cmp
push
adc
and
cmp
pop
pop
pusha
jl
cltd
hlt
out
adc
push
sub
loop
cmp
mov
add
lcall
mov
aaa
je
out
jae
lahf
pop
dec
test
out
dec
and
popa
clc
bound
sbb
scas
push
jle
mov
push
push
test
dec
xor
addl
dec
jmp
mov
daa
inc
enter
adc
loopne
jo
call
sahf
pop
push
adc
adc
push
pop
fucom
push
repnz
pop
jbe
je
add
mov
push
inc
jb
sub
lea
mov
pop
or
fisttpll
sbb
nop
push
push
add
nop
ficomps
push
bound
lret
xchg
stc
mov
mov
outsb
test
fstpl
push
jb
push
loopne
test
call
cmp
insb
mov
aam
jne
push
cmp
pop
inc
shrb
xor
imul
and
mov
stos
sbb
mov
xor
jno
jle
mov
pop
jne
cmpsb
cmp
jnp
outsb
popa
out
dec
inc
stos
data16
in
push
jp
xor
sub
xor
pop
mov
cmc
scas
xor
into
je
push
push
pop
fucom
ret
and
out
mov
mov
mov
cmp
clc
adc
lcall
stc
and
and
pushf
or
mov
push
or
and
cli
test
pop
adc
lcall
pusha
jo
mov
fimuls
daa
loop
pop
fs
xor
cld
imul
cwtl
cmp
pop
jo
in
mov
out
push
dec
test
adc
push
hlt
jno
or
outsb
ljmp
shll
test
call
cwtl
dec
test
cmpsb
sbb
cmp
xor
out
scas
inc
negb
jp
into
dec
dec
arpl
into
jl
xor
sahf
push
movsb
mov
cmp
adc
ficoml
outsb
ret
dec
cltd
push
or
cmc
test
cmp
xchg
stos
push
test
adc
lea
clc
fdivrl
test
fldl
mov
jle
pop
fidivl
jne
jmp
lods
sahf
das
add
inc
mov
in
neg
test
fcmove
imul
jbe
fisttpll
jp
sub
lret
clc
mov
pop
mov
dec
les
out
xchg
inc
lret
xchg
xor
or
push
aas
adc
stos
lret
shlb
pop
push
cwtl
xchg
icebp
add
xor
mov
pop
pop
fs
xchg
lahf
xchg
mov
sub
in
lret
mov
pop
sub
arpl
pushf
dec
fildll
out
or
stos
jle
adc
mov
jle
movsb
sbb
cmp
cmpb
test
out
sub
call
inc
pop
int3
add
pop
cmp
stos
dec
ret
stos
jnp
hlt
push
cmp
inc
fs
push
mov
push
lock
push
jbe
adc
loopne
jo
mov
sub
mov
in
lods
sbbl
cmp
push
jo
ret
sub
and
clc
sbb
lcall
xor
fsubs
mov
mov
das
lret
xor
pop
inc
gs
fdivr
shufps
dec
xchg
xor
scas
nop
xchg
addb
in
mov
cmp
xor
cmc
out
cmc
div
pushl
jne
mov
mov
xchg
xor
lahf
movb
xor
and
mov
call
xor
in
cvtps2pd
mov
inc
int
jmp
bound
jle
jne
mov
or
mov
xchg
mov
jns
ret
push
add
in
cmp
adc
and
jo
test
shll
mov
cmp
pusha
pop
push
pop
and
pop
jae
mov
mov
push
loop
mov
pop
mov
jbe
lcall
sub
ljmp
test
add
fdivrs
jo
xor
addr16
dec
pop
arpl
mov
test
lcall
xorb
jp
push
scas
pop
icebp
prefetchwt1
lods
pop
nop
imull
test
addr16
pop
xchg
scas
sbb
xor
xor
test
dec
and
push
cmpsb
mov
scas
repnz
mov
sar
xorb
or
and
or
and
cld
push
das
xchg
cmp
test
fldl
push
mov
mov
sbb
test
call
jno
call
cmp
test
gs
call
add
dec
dec
push
outsl
push
xor
mov
ja
pop
mov
outsb
add
dec
adc
jmp
sub
xor
js
enter
scas
pop
out
out
call
jp
lods
dec
cwtl
int
in
int
fbld
xchg
dec
adc
stc
mov
add
ljmp
and
pop
cmpsl
cmp
cmp
pushf
cmpl
inc
sarl
int3
test
pop
jno
adc
cs
mov
sbb
sub
mov
pop
test
mov
hlt
iret
rorb
add
mov
popa
test
mov
push
fs
xchg
ljmp
push
call
ss
dec
jbe
es
xchg
jg
dec
dec
dec
pop
mov
push
xor
fdivrp
xchg
movsb
sbb
enter
gs
test
sub
xor
movsb
dec
push
out
lods
fs
outsb
int
xor
lock
in
sub
inc
pop
sarb
or
test
shr
fs
pop
push
dec
mov
cmpsb
call
cmpsl
adc
pop
push
dec
scas
and
ljmp
lret
or
ret
mov
pop
loop
nop
test
dec
jnp
xchg
push
push
dec
xchg
sbb
mov
and
jbe
jnp
and
js
mov
mov
fdivl
xchg
je
cmc
xor
out
and
bound
sub
adc
xchg
adc
fldt
int3
push
cmp
sbb
dec
into
mov
jmp
enter
cmp
call
lret
pop
jne
ss
fwait
push
lret
xchg
fstps
or
push
cs
xchg
jb,pn
es
cmp
outsl
cmc
jne
cli
or
shll
push
pop
sbb
pop
xchg
mov
jg
out
inc
dec
xor
mov
push
icebp
loopne
jo
into
les
bound
or
push
outsb
push
xor
jbe
jo
xor
dec
xchg
stos
inc
adc
stos
repz
push
call
mov
jle
je
pusha
shll
sub
test
cmp
adc
jne
scas
lods
cwtl
push
movsl
fsubrl
cmp
jle
jecxz
pop
inc
shrb
cwtl
nop
xor
icebp
fistps
mulb
in
lret
fdivl
xchg
stos
xor
push
scas
movsb
cli
movsb
pop
addb
lcall
dec
shr
fcom
test
clc
push
ss
push
jp
mov
add
sbb
jb
test
cmp
adc
sub
aam
inc
mull
dec
pop
addr16
mov
xchg
jne
cmp
lock
push
mov
push
cmp
xor
loopne
ja
adc
push
mov
push
sbb
fiadds
ficoms
xchg
out
pop
loop
xor
es
stos
mov
push
cwtl
and
jp
sbb
stos
xchg
xlat
cld
and
mov
das
and
lret
mov
mov
push
ljmp
jb
mov
lods
jle
dec
and
les
jg
jge
mov
fldt
fimuls
popa
cmp
xchg
push
pop
inc
scas
push
aas
ret
sub
add
cmp
push
sub
loop
subl
sub
pop
adc
push
pop
inc
stos
bound
cs
sbb
scas
sub
pop
pop
fisttps
stos
pop
add
fnstenv
jo
cmp
iret
jle
jne
test
and
stos
push
test
ja
repnz
push
mov
les
mov
mov
lock
jecxz
in
addps
xchg
mov
jbe
mov
pop
dec
pusha
push
push
arpl
cwtl
std
lcall
or
sbb
lret
dec
push
sbbb
shl
push
push
dec
jle
fidivs
test
mov
pop
fdiv
movsb
testl
cmp
stos
lock
scas
dec
test
mov
movl
push
call
mov
nop
iret
cld
mov
inc
jo
lds
mov
test
push
outsb
aaa
lds
hlt
dec
in
dec
test
cld
scas
lds
mov
call
inc
inc
mov
mov
dec
push
loopne
push
cmp
push
dec
pop
or
shrl
xchg
jbe
mov
push
dec
cmp
nop
pushf
push
sahf
pop
test
xor
in
loop
stos
clc
mov
lcall
xor
fs
lahf
push
push
jne
call
jbe
xchg
pop
je
xor
mov
int3
mov
cs
pusha
adcl
inc
dec
push
fisubs
cmpsb
mov
fimuls
push
cmp
das
xor
lret
loop
arpl
dec
sbb
jp
cmpsb
lret
daa
dec
xor
cmpsb
push
mov
loope
mov
cmp
adc
xor
dec
icebp
push
xor
jno
into
mov
sbb
xor
adcb
jecxz
enter
push
shr
dec
fsubr
cmpb
scas
xor
push
repz
js
xorb
inc
dec
enter
insl
mov
adc
call
jo
into
fwait
push
mov
movsb
sbb
je
push
cs
mov
xor
shll
adc
mov
sahf
loop
push
call
push
xor
cmp
ljmp
xor
xchg
int3
test
xor
ds
mov
jg
cwtl
cmp
push
fs
lds
movsl
pop
decb
push
add
jecxz
mov
fmulp
xor
data16
and
cmp
dec
xchg
shlb
push
in
test
clc
xor
inc
sbb
xchg
push
mov
pushf
xor
ja
inc
cs
push
push
dec
xchg
test
xchg
pop
lcall
xor
fs
repnz
out
mov
sub
ret
out
xor
xchg
xor
xor
mov
and
dec
scas
pusha
push
dec
fs
mov
into
dec
sbb
sahf
sbb
das
mov
xchg
test
test
enter
mov
lcall
stos
mov
xchg
xor
sahf
pop
orl
inc
jo
xchg
les
mov
xorl
mov
gs
arpl
neg
cli
push
jmp
leave
pop
flds
outsl
mov
test
mov
pop
push
add
push
jns
stos
cli
xchg
and
mov
rorl
fadds
xor
clc
cmp
cmp
je
dec
mov
xchg
add
xor
lods
mov
idivb
movsb
add
jmp
jp
dec
sub
cmp
sahf
out
enter
loope
or
add
lret
pop
das
sub
pushf
push
test
sarb
out
dec
push
xchg
xor
inc
cli
in
cmp
adc
insb
arpl
addr16
loop
cli
fldt
lods
or
mov
test
aam
pop
jne
mov
lcall
and
loopne
movsb
aam
loope
in
call
xor
xor
dec
add
cmp
mov
push
in
dec
mov
or
jae
pop
fisttpll
sub
add
and
adc
inc
aaa
push
xor
sub
cmp
dec
xchg
addr16
mov
inc
xchg
into
cmpsl
dec
fs
addl
rcrb
jecxz
daa
push
fadds
popa
imul
rcrl
fs
call
daa
adc
push
xor
into
mov
out
or
shlb
in
loopne
in
lock
lret
mov
fildl
aam
imulb
popa
enter
ret
mov
in
add
push
mov
ss
mov
or
mov
pop
sbb
jne
mov
mov
xor
fldcw
push
dec
sbb
ficoml
pop
sub
arpl
mov
das
pop
jo
sbb
cmc
sahf
and
pop
pop
jne
push
pop
loop
push
mov
or
xor
imul
das
cmp
add
pop
or
adc
movsl
ljmp
outsl
out
or
test
aas
adc
xor
addr16
pop
add
call
stos
cmp
in
fmull
div
adc
cmpb
int3
push
jge
or
add
and
push
dec
xchg
nop
sbb
cmp
fisttpll
mov
mov
pop
mov
jo
push
push
loopne
cmp
push
movl
jle
push
jmp
jnp
sub
in
or
pop
xchg
loop
xor
jno
test
cmpb
adc
push
pop
test
mov
cli
sahf
mov
call
cmp
pushf
aad
adc
sub
push
mov
jbe
mov
jmp
xor
movsb
movsl
cmpsl
sub
mov
jns
fs
xchg
cwtl
icebp
movsl
int
dec
dec
pop
insb
shll
loop
cmp
sub
push
xor
adc
in
js
out
bound
cmp
shll
psubb
pmuludq
dec
jbe
jo
scas
sbbb
test
xor
xchg
das
ret
or
push
mov
pop
dec
ret
bound
movsb
xor
push
xor
fwait
inc
aad
jmp
cli
call
mov
scas
xchg
out
test
and
jl
cmp
inc
fs
cli
gs
int3
aam
stc
js
dec
out
xchg
negb
dec
in
scas
lcall
and
andb
sub
dec
ficoms
bound
cmp
rcrb
dec
mov
popf
dec
pop
mov
or
addr16
pusha
sub
ss
out
dec
dec
mov
lods
pop
into
stos
hlt
push
cwtl
fistpl
mov
inc
dec
cmp
jno
dec
jge
jo
push
xor
mov
fs
ja
xchg
xchg
push
pushf
pop
outsl
aaa
jo
fmull
iret
in
cmp
test
inc
das
sbb
mov
or
loop
cmp
adc
fsubs
and
mov
cmpsb
push
jb
xchg
sub
pop
das
push
cmpsb
jle
mov
sub
cltd
aam
fcmovbe
fadds
mov
mov
bound
cmp
jno
mov
out
imul
fsubrl
call
inc
push
cmp
mov
loopne
fldt
aad
push
clc
mov
sbb
das
mov
mov
dec
pop
sub
stos
push
sbb
das
ss
push
xchg
sbbb
cmp
loop
dec
rcl
mov
enter
push
es
mov
push
adc
mov
daa
sbb
cmp
je
call
filds
incb
cmp
push
cwtl
aad
add
xor
lahf
sub
les
mov
or
cmp
ds
je
mov
icebp
mov
jbe
ret
cmp
bound
add
cmp
pushw
jbe
jae
sti
mov
paddusb
imulb
enter
es
jle
mov
push
sub
adc
test
call
cmp
pop
and
and
inc
lods
cmp
adc
scas
xor
push
sub
cwtl
push
cld
sbb
ret
sub
dec
test
push
stos
push
jne
mov
fmull
clc
loopne
jo
das
mov
push
lcall
sahf
sbb
add
inc
jg
xchg
hlt
push
mov
call
pushf
pushf
andl
dec
jl
ss
call
cmp
xlat
dec
inc
push
dec
faddl
call
movsb
jecxz
lock
pop
dec
test
ja
xchg
call
inc
idivl
push
sahf
push
pop
lds
jecxz
test
js
sbb
mov
lods
jb
stos
sarb
jbe
outsl
std
mov
pop
push
mov
dec
sub
movsb
dec
lds
call
dec
sub
jno
shr
mov
out
bswap
push
mov
test
std
jbe
addb
int
stos
mov
stc
adc
loop
jo
out
push
mov
jmp
sub
xchg
sbb
loope
jmp
test
lahf
sarb
xor
movsb
je
test
clc
jnp
shrb
and
push
mov
cwtl
bound
cmp
push
call
mov
xchg
push
int
in
imul
in
push
xchg
mov
xor
xchg
aam
imull
fdivr
ss
das
sub
pop
push
and
lcall
jb
jbe
jne
jmp
jnp
jl
mov
lcall
lcall
push
sub
es
lret
lock
enter
fwait
or
push
das
pop
lret
push
dec
loop
pusha
dec
mov
mov
rorl
data16
out
dec
dec
xchg
das
inc
jle
dec
push
outsl
js
xchg
mov
pushf
mov
mov
sbb
mov
push
sbb
ds
mov
fimuls
int3
mov
jle
test
mov
fildl
dec
mov
sbb
sub
stc
int3
or
jge
ret
xchg
gs
dec
mov
test
mov
out
add
xor
adc
mov
and
in
cmp
or
clc
stos
negl
adc
pop
int3
push
push
xor
xchg
adc
pusha
addr16
xor
mov
cltd
push
mov
popa
jno
call
dec
push
loope
inc
xor
jl
sub
push
mov
lcall
inc
scas
push
test
push
mov
jle
nop
pop
jmp
sbb
push
ss
mov
es
clc
inc
jns
jg
pop
lods
mov
cwtl
std
sub
jne
das
xchg
stos
aam
nop
cmp
mov
sbb
or
das
cmp
xchg
push
movsb
or
lds
and
push
add
f2xm1
or
xor
push
scas
sbb
cwtl
xor
sbbb
cmp
xchg
mov
xor
xor
orl
push
and
jne
or
dec
frstor
out
test
push
mov
add
mov
sti
cmp
mov
mov
fs
sar
adc
mov
jbe
pushf
add
lods
lods
das
fs
dec
pusha
adc
sbb
jp
fidivl
data16
xor
mov
je
decb
outsb
sub
cmp
xor
cs
inc
mov
add
sub
add
jns
rclb
int
xchg
movsl
cmp
mov
in
push
cwtl
push
and
inc
pop
pop
pusha
je
jg
xchg
lods
jb
out
pusha
daa
sahf
cwtl
push
or
cmp
arpl
mov
out
xchg
das
jecxz
scas
or
mov
mov
ss
sub
mov
out
std
divb
xchg
lcall
push
mov
cmp
jmp
stos
addr16
xchg
scas
lods
jo
das
testb
pop
mov
adcb
in
pop
mov
ds
enter
mov
pop
scas
js
stos
cwtl
mov
mov
xchg
scas
ret
add
jp
pop
push
and
movsl
sub
xchg
and
sub
pop
xchg
mov
mov
jle
lcall
jno
call
pushf
sti
testb
test
std
pop
enter
inc
or
dec
insl
inc
dec
icebp
adc
cmp
scas
mov
mov
mov
and
nop
sub
inc
push
addr16
lcall
lahf
dec
out
xlat
mov
nop
lds
bound
mov
stos
out
xor
movsb
mov
imul
adc
jb
dec
shl
jp
push
jp
popa
call
hlt
fdivr
and
cmp
or
sbb
outsl
and
pop
sub
xor
cmc
cmp
cmp
adc
lds
dec
jne
push
out
pop
dec
or
xor
sahf
pop
movsb
je
js
jo
int
or
imul
pusha
xchg
dec
mov
mov
jmp
sub
mov
lret
adc
outsb
jl
jg
push
mov
ja
inc
lock
pop
xchg
mov
cs
mov
shrb
pop
pop
int3
sti
cmpsl
sbb
xchg
xchg
fdivrs
dec
mov
aas
into
mov
insb
xchg
add
or
inc
mov
push
push
fmulp
push
add
or
scas
inc
jle
outsl
ljmp
mov
sbb
lods
mov
dec
jnp
nop
popf
lods
push
mov
repnz
inc
pop
push
fidivl
sbb
sahf
cmp
sarb
and
dec
clc
rcrb
loop
test
inc
sub
sub
mov
push
adc
inc
jle
jo
test
bound
cmp
lea
mov
or
loop
push
loopne
mov
adc
jl
test
push
inc
popw
imul
cmp
dec
fisubs
jmp
cmp
cld
fcoml
sahf
add
js
jle
jo
call
adc
bound
stos
in
fcoms
mov
mov
xor
xchg
je
pushf
jp
push
adcl
data16
out
sahf
int3
mov
and
popf
aaa
testb
popa
pusha
fdivrl
movsb
adc
test
outsb
imul
mov
mov
mov
data16
mov
lock
or
xchg
mov
addb
aam
pop
stos
call
sub
ret
pop
push
cmc
mov
push
pop
lcall
gs
outsb
push
jp
push
mov
and
loopne
push
xor
xor
js
mov
negl
inc
pop
mov
test
mov
iret
enter
gs
orb
inc
xchg
sarb
inc
loop
pusha
ljmp
xlat
gs
push
dec
dec
push
push
sub
mov
enter
sarb
and
daa
xor
je
mov
cmc
aaa
xor
bound
stos
xchg
testb
push
or
push
mov
xchg
pop
in
dec
pop
sbb
dec
mov
loop
push
xor
pushf
xorb
mov
lcall
or
mov
fmull
pop
test
jl
cmp
incl
xchg
sub
clc
mov
jnp
push
nop
sbb
arpl
push
push
cmc
xchg
push
pushf
pop
xorl
inc
scas
mov
push
loopne
mov
and
dec
mov
mov
xor
out
pop
push
push
mov
int3
cmp
lds
jbe
pop
mov
pop
sarb
push
sbb
lods
sbb
dec
loop
xchg
iret
push
ja
test
testb
popa
pushl
pop
dec
outsl
push
int
cltd
stos
ret
inc
rclb
and
xchg
inc
outsl
jmp
dec
jo
add
push
sbb
sbb
xchg
mov
movsb
sbb
xor
call
mov
cli
pop
or
stos
cmpsb
roll
test
push
adc
daa
adc
jnp
xor
add
pop
jno
das
movsb
cmpsb
sahf
pusha
test
sub
pop
fildl
jb
cmpb
out
mov
push
xchg
inc
mov
cmpsb
xor
or
repnz
xchg
sub
shlb
jno
push
jbe
jno
test
cmp
dec
lret
adc
jo
cli
int
or
shlb
stos
dec
cmp
orb
adc
aaa
pop
hlt
pop
push
out
mov
fdivl
pop
nop
mov
std
adc
into
dec
mov
xchg
push
pushf
push
cmpsb
jle
jae
test
stos
mov
and
stos
testl
or
cmp
adc
out
xchg
mov
mov
mov
pop
jne
xor
and
sub
dec
fs
stos
mov
into
xorb
pop
orl
pop
insl
push
xor
xchg
popf
xchg
cs
test
jp
adc
sub
jle
fs
es
cli
out
daa
adc
cli
xor
mov
push
aam
into
neg
mov
stos
mov
push
movsb
mov
call
add
push
aam
push
insl
in
enter
mov
dec
and
jno
js
hlt
dec
push
xchg
rclb
je
dec
dec
mov
jo
ret
sub
push
mull
xor
cld
push
pop
pop
push
or
dec
xchg
idivb
push
sahf
out
movsb
and
test
fdiv
pushf
out
cmp
or
add
les
test
push
test
jo
rclb
icebp
out
dec
mull
push
or
mov
inc
test
test
call
mov
fldt
inc
adc
cli
ss
push
pop
fstpl
xor
shlb
aam
cld
push
push
push
jg
inc
mov
xor
or
pop
push
pop
ss
ds
jl,pt
jmp
shll
cmpsb
xchg
jl
imul
scas
push
jecxz
mov
jno
jl
cmp
outsl
cs
xor
cmp
cs
inc
pop
adc
lahf
add
push
mov
jp
imul
fidivs
test
jno
mov
out
xchg
mov
int3
enter
bnd
cmp
iret
out
dec
jle
subb
dec
mov
adc
mov
ljmp
push
mov
xchg
and
mov
fdivrl
loopne
dec
push
fdivrl
fildll
mov
jle
push
mov
cld
mov
into
notb
neg
repnz
movsb
push
subb
lock
inc
sbbb
or
dec
ficoml
into
mov
ret
or
movsb
add
adc
enter
mov
es
jb
call
xchg
xorb
enter
mov
rcl
aam
and
fidivl
ficoml
jp
and
xor
shlb
push
push
xchg
jp
call
repnz
mov
push
rclb
mov
xchg
and
clc
adc
xor
mov
lcall
mov
ljmp
jl
xlat
insb
xchg
scas
jbe
stos
jb
dec
jo
jmp
loopne
push
cmp
push
bound
pop
mov
bound
cmp
mov
jl
inc
xor
inc
icebp
dec
pop
xchg
int3
orl
fadd
dec
mov
push
dec
data16
into
mov
xor
push
imul
fisubrl
iret
sub
aam
aam
pop
sub
loopne
jae
les
push
test
ljmp
and
sahf
outsl
jb
pop
jp
pop
push
lods
cmp
push
scas
mov
fdivs
jge,pt
fdivrl
out
js
push
ss
jb
fcoms
sub
not
loop
push
xor
sahf
mov
sub
xchg
mov
inc
sbb
ds
push
mov
loop
sub
shrb
sub
mov
jo
and
mov
dec
sub
mov
dec
pop
push
into
add
jp
andb
or
mov
outsb
pop
mov
dec
jp
mov
mov
pusha
das
ss
xor
xchg
mov
in
es
gs
jle
ret
sahf
inc
push
test
jb
das
push
lods
outsb
or
sub
inc
lea
pop
vpcmpeqw
dec
xor
mov
jp
lea
push
ret
mov
pop
inc
jg
push
jge
pop
cmp
add
inc
pop
cmpsb
inc
push
bound
jne
shll
xchg
fwait
hlt
test
sub
inc
jge
sub
popf
xchg
adc
dec
enter
cmp
pop
and
dec
sub
pushf
dec
sub
jo
clc
pop
mov
jg
lret
xor
cltd
test
cmpsl
add
push
xor
mov
mov
inc
into
inc
sub
mov
cmp
mov
inc
xchg
inc
jp
fwait
cltd
lcall
xchg
push
cmp
xor
xor
push
inc
outsl
testb
push
aas
cmp
int
xchg
in
mov
xchg
xchg
add
pushf
push
mov
dec
js
ss
es
je
inc
jb
addr16
push
aad
imul
into
dec
je
push
add
mov
push
inc
cmp
mov
jns
andb
pop
pop
pop
xchg
jne
and
out
dec
cmpsl
lds
cmpsl
mov
sahf
scas
sub
inc
sub
push
movsl
push
inc
xlat
sub
int
xor
aaa
xor
jns
sub
push
push
cli
sbb
subl
add
sbb
or
es
dec
adc
nop
sahf
icebp
xchg
cmp
in
push
sbb
movsb
roll
sub
mov
xor
xor
cmpsb
repnz
stos
pop
mov
jae
unpcklps
sarl
inc
ret
movsb
out
insl
mov
sti
and
stc
sub
sub
lcall
xchg
jnp
mov
daa
aaa
ss
repnz
fldenv
orl
sahf
lret
int
sub
adc
scas
mov
push
fxch
and
pop
xor
xchg
es
mov
movsl
cmp
in
sub
mov
ror
clc
es
lock
mov
es
dec
mov
es
push
ss
xchg
ret
or
and
jne
arpl
jnp
pop
aaa
mov
loop
sub
sub
sbb
ss
mov
and
cmp
ret
pop
jmp
mov
pop
loop
push
ja
xor
add
xor
aaa
popa
push
pop
stos
pop
jp
xchg
cltd
inc
xchg
mov
xchg
fs
insl
pusha
push
cmp
sub
pushf
mov
iret
push
mov
test
arpl
sbb
out
jb
xor
sub
and
dec
lods
adc
daa
sub
add
fnstsw
inc
mov
arpl
es
mov
stos
hlt
sahf
dec
es
outsb
lret
mov
or
es
aad
notl
in
mov
pop
fcmovnb
mov
and
and
mov
push
or
sub
ds
jbe
adc
mov
dec
push
push
stos
sbb
push
sbb
xor
dec
push
add
mov
push
adc
cmp
cld
in
mov
xchg
iret
cwtl
cli
push
push
outsb
jne
xor
xchg
mov
scas
lock
call
jmp
mov
shrb
pop
gs
repz
jp
andb
or
insl
rcr
arpl
sahf
cmpsb
das
inc
sbb
out
push
mov
pusha
lods
mov
add
es
fwait
sbb
sub
jne
or
lds
cmp
cltd
es
test
sub
insb
sub
jb
mov
jbe
mov
sub
lcall
push
jno
leave
cmpsl
fisubs
fcomi
data16
cs
sub
iret
lds
adc
fs
dec
lods
dec
mov
popf
cltd
mov
out
ja
addr16
das
dec
mov
xchg
sbb
xor
arpl
push
dec
xor
imul
fstl
cmc
dec
sarb
dec
dec
cmp
adc
dec
push
cmp
sub
jnp
pop
mov
inc
cmp
cmp
sub
sub
es
sbb
xchg
add
sbb
js
xor
repnz
es
call
xor
daa
inc
jae
sbb
mov
mov
xchg
dec
mov
lret
sbb
xor
xor
or
iret
sub
nop
iret
push
popa
icebp
cmovns
dec
andl
sbb
jns
out
pop
pusha
pop
inc
mov
cltd
lretw
aad
in
in
sub
imul
push
add
hlt
mov
das
int
and
inc
or
xor
sub
cmp
and
inc
out
mov
inc
scas
aaa
mull
mov
add
xchg
push
push
imul
dec
imul
or
push
pop
out
mov
xchg
cltd
inc
add
aaa
cmpsl
jge
push
inc
ds
inc
pop
sub
cmpsl
popl
xchg
push
inc
push
inc
fnstcw
cmp
inc
lret
scas
sub
fwait
sbb
lahf
xchg
sarl
cld
pop
stc
inc
inc
stc
sysexit
leave
mov
inc
iret
cmpsb
jecxz
xchg
or
sbb
je
dec
lds
adc
iret
mov
test
and
mov
ret
movl
add
imull
lahf
adc
es
out
jp
sbb
ret
inc
mov
stos
mov
jmp
mov
bound
mov
xchg
shrb
dec
mov
xor
jle
out
insb
or
push
iret
dec
pop
es
adc
push
loope
xchg
jnp
shrb
push
popf
jb
mov
shlb
cs
cmp
sub
or
mov
sub
lods
sbb
sub
inc
stc
in
imul
cmpsb
lods
pusha
adc
je
and
inc
mov
ds
es
xchg
es
and
mov
cmpsl
jge
fsubl
test
popf
sub
sbb
aam
es
cld
int
es
andb
push
cs
mov
xor
sub
out
test
add
lret
out
sub
mov
shlb
mov
xchg
adc
dec
ja
cmp
sub
out
arpl
xchg
test
or
sub
es
sbb
fisubrs
add
es
sub
pusha
or
sbb
jge
push
es
insl
out
mov
popa
cmpsb
or
jp
and
inc
xchg
gs
data16
mov
arpl
ss
nop
loope
cmp
out
imulb
or
addb
mov
out
push
pop
dec
push
in
inc
cmp
sbb
inc
out
cld
cmp
js
es
imul
or
jecxz
pusha
js
sub
xor
scas
inc
push
mov
cmpsb
sub
pop
cmpsb
push
sub
fiaddl
jge
sub
fcoml
sub
cmp
mov
fidivrs
push
or
pushf
xchg
notb
mov
xor
xchg
inc
aam
movl
pop
imul
sbbb
jae
xor
mov
xor
mov
sti
jp
gs
repz
xchg
add
pusha
daa
lods
mov
lcall
sub
nop
xor
shlb
daa
cli
data16
or
cmp
sarb
in
jns
xor
dec
xor
pop
sub
cmp
adc
std
adc
lods
xor
divb
jge
cltd
je
xor
push
xor
sub
mov
scas
xor
mov
jno
pop
cmp
mov
inc
ret
mov
sbb
pop
and
je
xchg
cs
stos
cmp
icebp
xor
es
sbb
xor
pop
dec
jae
clc
mov
and
or
sub
in
mov
jp
mov
roll
pop
jle
cmp
out
fidivl
pop
je
jp
push
xor
xchg
pop
and
cmpsb
icebp
jbe
inc
aam
sub
jo
gs
push
mov
or
sbb
es
push
int3
jnp
rcll
repz
xchg
outsl
jp
xor
dec
mov
fwait
mov
stc
loope
add
shll
ret
jne
cltd
xor
pop
lods
mov
scas
out
jae
inc
je
aaa
fistpl
add
xchg
push
pop
jecxz
mov
inc
pop
sub
xchg
dec
mov
push
sbb
into
add
xchg
mov
mov
fisttpll
leave
pop
xor
jp
inc
es
arpl
push
lcall
outsb
daa
mov
daa
xchg
pushf
xchg
daa
and
jno
pop
pop
insb
or
out
insl
xor
jne
sub
dec
out
sub
inc
cs
mov
xchg
ss
lods
pop
cmp
std
jp
mov
and
es
sbb
fdiv
pop
adc
loope
jg
sbb
ljmp
mov
sub
xor
mov
pop
ja
push
add
clc
and
xor
jle
shlb
ret
in
popf
or
es
or
jmp
fiaddl
jecxz
filds
pop
jg
pop
es
ret
les
enter
mov
mov
add
cmc
sub
adc
in
inc
es
mov
sbb
stc
cli
out
scas
cmpsl
cmp
test
mov
mov
push
fisttpll
cli
xchg
decl
dec
stos
mov
jp
movl
adc
lahf
or
lahf
test
outsl
and
jp
fwait
jae
mov
outsl
push
scas
ljmp
arpl
xchg
out
rcrb
es
fnstcw
sti
enter
incb
cmpsb
jnp
dec
mov
int3
and
mov
cmpsl
mov
mov
xor
enter
out
arpl
sub
and
dec
imul
lods
addl
pop
incl
push
rorb
mov
in
mov
nop
push
cltd
sub
daa
xor
stos
daa
pop
rclb
fs
adc
and
mov
adc
pop
pop
fbld
pop
xchg
inc
in
inc
out
insl
rcrb
gs
insl
cmpsb
sarb
ds
sbb
xor
cmp
fcomi
mov
call
mov
gs
test
imul
dec
pop
outsl
repnz
insl
adc
call
inc
push
adc
push
lock
and
out
dec
pop
imulb
ss
sbb
aas
or
shll
lods
inc
sub
pop
mov
and
cmpsb
bound
push
lock
enter
or
es
leave
data16
mov
call
cvtps2pd
pop
es
add
daa
inc
add
sub
subb
jg
sbb
add
xchg
aas
dec
fs
clc
inc
xchg
roll
pushf
sub
and
jl
lock
cs
jnp
icebp
xor
xor
mov
popf
jo
push
es
addr16
and
jge
jmp
imul
inc
bound
sti
cmpsb
dec
push
lahf
and
add
lea
push
negb
or
and
lods
fisubs
dec
test
es
sub
inc
in
push
or
cmc
sub
insl
jbe
mov
stc
cmp
jge
mov
mov
es
out
in
ja
push
fisubl
push
stc
movsl
test
fisubrs
iret
test
dec
sub
cmpsb
popa
sahf
das
lcall
jl
jo
xor
xor
gs
push
stc
repnz
xchg
push
push
xchg
outsb
push
mov
xchg
xchg
and
dec
mov
scas
push
pop
push
jae
pop
push
pop
add
pop
dec
and
jp
and
add
add
cmp
hlt
and
pusha
out
loopne
or
jns
push
mov
mov
insl
inc
inc
jecxz
icebp
daa
or
cmp
xchg
imul
sbb
pop
sub
or
sub
movsb
imul
mov
mov
scas
adc
fstpt
cmpsb
out
ljmp
test
in
imul
fisubrs
mov
jmp
push
rclb
mov
pusha
fistl
int
es
lods
mov
ds
push
ljmp
test
stc
push
sbb
xor
lcall
add
cmp
es
jl
mov
adc
lea
test
sysexit
add
and
es
xchg
repnz
ficoms
es
shll
les
testb
jae
dec
mov
xchg
dec
in
and
lds
es
ret
loope
push
test
pop
fimull
cmp
push
cmp
popa
pop
rcrl
cmpsl
in
push
aas
mov
xchg
sub
push
xor
xor
xor
cmp
inc
mov
cmp
sbb
mov
data16
jecxz
popa
jge
mov
sub
push
nop
push
push
xor
push
adcb
pop
cmpsb
pop
mov
imul
adcb
dec
cmpsb
inc
fucomip
popf
lret
push
pushf
mov
xor
push
push
es
lds
mov
iret
sub
nop
push
fsts
mov
xchg
inc
add
mov
clc
sub
mov
cli
sti
shll
sbb
es
jns
clc
push
test
es
out
sbb
aam
es
jb
jp
push
jo
jmp
and
in
cmp
stos
push
lcall
push
enter
and
or
sahf
loop
and
or
loopne
xchg
sbb
pop
xor
cmpsb
pop
adc
test
push
fdivs
sub
push
mov
add
or
jle
es
or
cmp
push
dec
es
pop
cmp
aaa
sbb
call
es
imul
push
pop
or
add
xor
movsb
data16
sbb
and
jno
adc
add
jecxz
addl
sbb
fistl
data16
xchg
ja
fwait
push
mov
cmp
lret
cld
test
jno
call
arpl
inc
pop
dec
dec
pop
out
fldenv
ret
and
push
ds
jecxz
xor
lock
sub
ret
cwtl
or
and
fdivrp
push
pop
xchg
jmp
jbe
inc
insb
sbb
cmpsb
mov
fisubrs
es
adc
mov
sbb
divl
daa
push
fidivrs
shll
pop
icebp
or
insb
fisubrl
lret
xor
mov
es
aas
sti
adc
into
cmpsl
outsl
push
dec
insl
xchg
pop
xchg
dec
sub
mov
testb
es
jecxz
add
mov
fs
dec
out
mov
int3
mov
mov
adc
mov
sbb
lahf
out
dec
fdivrl
negb
iret
es
cmc
hlt
ss
adc
or
jle
insl
push
test
ret
rcll
insb
mov
dec
inc
es
jecxz
into
mov
pop
es
mov
cmpsl
inc
push
ljmp
aaa
pop
mov
adc
xchg
shll
jb
daa
adc
stc
add
xor
out
adcl
clc
es
mov
sahf
scas
sahf
jp
xchg
jge
xchg
jmp
addb
pop
loop
push
pop
mov
insb
adc
sti
lcall
fs
sahf
jns
and
adc
push
movb
lea
ja
shl
sub
shrd
jmp
ret
push
and
or
jne
lods
sbb
jg
call
rorb
mov
mov
push
push
std
jle
sbb
scas
jno
mov
mov
nop
jmp
dec
mov
ljmp
clc
or
movb
lea
je
stc
or
call
inc
mov
call
lea
je
cmc
jmp
mov
movsb
xor
dec
mov
xchg
nop
adc
mov
lods
sbb
mov
aas
cmp
sub
inc
sti
adcb
cmp
psllw
inc
lahf
pop
pushl
jb
mov
lcall
push
mov
repz
shll
filds
loopne
ss
negl
ja
sbb
jle
negl
addb
lock
push
rorl
stc
roll
inc
jno
mov
inc
in
cmp
jle
sub
decb
fcmovb
sub
rcll
xchg
push
lret
lcall
sbb
ret
cmpsb
repnz
inc
mov
repnz
insb
mov
movsl
stc
jae
fdivs
lock
push
mov
call
or
pop
pushf
pop
and
jle
inc
push
sbb
pop
test
push
mov
jp
lret
lods
jnp
adc
inc
fsubrl
jnp
loopne
jae
adc
stc
movsb
add
lods
outsl
cld
mov
sub
test
jmp
stos
aad
xor
jno
jle
out
daa
cs
call
bound
mov
in
scas
sti
jo
dec
sub
stos
dec
inc
andl
pushf
jp
pop
xchg
adc
loop
iret
mov
into
gs
jl
xchg
mov
sub
xor
btl
mov
rclb
cmp
pop
mov
mov
cld
ljmp
fs
jne
jb
pushf
pusha
pusha
inc
pushf
push
inc
pushl
mov
movb
movb
lea
jmp
movb
lea
jne
not
pusha
jmp
mov
dec
jno
fnstcw
xor
mov
xchg
sbb
gs
les
pop
and
pop
fistpll
adc
sbb
ret
js
mov
mov
pop
jmp
daa
lret
jnp
stos
movsb
jbe
aam
push
movsl
js
lock
cld
ljmp
pushl
lea
movsbw
lahf
push
lahf
lahf
pusha
not
movl
cwtl
movsbw
lea
call
xchg
in
sti
push
lahf
sub
cmpsb
push
testl
outsl
jno
mov
jg
pop
lcall
insb
lods
xlat
adc
mov
call
sub
push
adc
push
cmp
clc
or
or
inc
mov
popf
mov
add
xchg
jns
iret
into
cld
orl
xchg
rcrl
fld
xor
lret
jae
xchg
jmp
dec
inc
dec
mov
pushf
fucom
mov
adc
add
jl
jns
movl
jmp
pushf
lea
je
clc
clc
pushf
cmp
call
call
shrl
inc
les
scas
mov
sbb
mov
add
pushf
subl
dec
pusha
jbe
push
xchg
dec
jnp
pop
daa
repz
push
and
jbe
adc
mov
add
rorb
mov
jo
sub
inc
filds
push
in
data16
icebp
cli
and
ljmp
in
loope
pop
cmp
push
out
ss
mov
add
fisubrl
sub
pop
push
into
scas
mov
jecxz
jnp
xchg
fisubrs
xchg
mov
lahf
hlt
repz
cld
ljmp
jb
sub
and
test
jae
pusha
pop
push
arpl
mov
ja
daa
popf
test
lods
cli
ret
sub
outsl
cmpsl
stos
aad
dec
cmp
into
pop
into
xchg
dec
mov
imul
dec
xchg
pop
out
and
mov
sub
enter
inc
xchg
mulb
icebp
mov
orl
lret
pushf
in
jle
test
out
push
jb
jg
repnz
ret
test
mov
ljmp
xor
not
jmp
mov
pushf
push
pushf
movb
xchg
lahf
call
mov
movsb
jmp
jne
out
rep
jns
icebp
popa
mov
aad
jne
lds
or
scas
mov
cld
es
and
imul
fwait
dec
in
mov
adc
int3
or
in
cld
xlat
lcall
movsb
mov
addr16
lods
movsl
mov
pusha
push
pop
rcr
mov
popa
mov
out
incb
dec
mov
dec
push
aaa
cwtl
add
push
jmp
inc
dec
jmp
jnp
push
in
or
std
sahf
clc
pop
add
movsb
cmp
xor
mov
sbbl
adc
mov
ja
dec
mov
dec
fildl
daa
jns
mov
mov
push
cltd
pop
sbb
lock
movsl
pop
sti
out
enterw
pop
add
dec
mov
sub
pop
pusha
cmp
jnp
imull
cmp
mov
jmp
cltd
js
push
adc
fs
shrl
cld
ljmp
push
push
lea
mov
push
jno
int
jbe
add
clc
push
mov
cltd
jns
adc
mov
ljmp
mov
rcll
adc
in
loop
push
fmuls
mov
ss
push
mov
lock
mov
jmp
pop
push
mov
je
dec
les
dec
into
cld
ljmp
ljmp
enter
cmp
sub
xor
cmp
shlb
in
xor
jl
leave
outsl
aad
mov
into
xor
in
psrlw
inc
adc
push
xchg
loope
mov
hlt
jns
xor
idivb
mul
sahf
jbe
mov
and
movl
jo
adc
push
pop
hlt
leave
mov
fwait
xor
mov
outsb
lret
push
mov
cmp
ljmp
pop
cld
xchg
inc
into
or
dec
mov
xchg
cwtl
lcall
sbb
and
push
push
adc
push
int3
sub
lods
in
sti
push
sub
cmc
jl
cmc
mov
enter
dec
xchg
adc
mov
push
jnp
push
and
pop
sbb
xor
and
decb
add
pop
loop
jnp
nop
popa
test
scas
test
xor
xor
sbb
and
hlt
add
addr16
in
iret
popa
fmull
add
push
or
sbb
sti
jne
or
fsubl
inc
jge
jl
aaa
bound
cli
mov
adc
adc
dec
add
and
xchg
mov
fs
roll
orb
cli
lahf
add
into
or
lea
add
in
jns
idivl
test
clc
mov
out
sbb
or
mov
cmpsb
adc
adc
xor
js
xchg
adc
adc
mov
cmp
je
mov
dec
adc
ret
mov
imul
pop
mov
add
dec
stos
movsl
jmp
jle
dec
scas
and
push
test
fstpt
nop
sub
stos
push
mov
cld
ljmp
mov
ljmp
fisttpl
add
fsts
cmp
push
inc
dec
dec
mov
scas
xor
out
push
mov
or
add
mov
clc
cmp
push
jb
push
mov
mov
nop
hlt
jmp
mov
or
push
hlt
xor
lret
shl
jbe
adc
jl
xchg
or
inc
dec
mov
mov
sub
mov
cwtl
repz
rol
inc
popf
xchg
cmp
ljmp
fs
jae
jmp
pusha
stc
and
movl
call
adc
push
pusha
inc
shll
dec
mov
daa
xor
push
dec
adc
mov
repz
adc
add
pop
pop
jns
loope
lods
das
orl
rcrl
mov
xchg
xchg
and
cltd
xchg
hlt
lock
jl
mulb
adc
mov
out
lods
test
dec
in
sub
mov
repnz
push
xor
inc
mov
cld
ljmp
and
call
jg
pushf
pushf
movl
lea
jb
pushf
movb
pushl
ret
jmp
test
neg
pusha
add
push
shr
push
lea
jp
pushf
pusha
lea
je
push
adc
pushl
push
lea
jmp
sub
movw
stc
repnz
call
fldt
inc
loope
enter
adc
push
push
dec
sarl
push
jecxz
pop
dec
test
rcl
jnp
data16
orb
sbb
cmp
aad
xchg
nop
mov
and
sub
cs
pop
ja
inc
xor
push
lods
cld
ljmp
xchg
push
fiadds
rcl
sub
ss
outsl
cmp
sub
js
mov
sub
lods
loope
insb
jle
mov
or
jmp
loopne
out
mov
push
aad
mov
mov
lds
fcoml
into
cltd
mov
dec
xor
pop
sub
or
movsl
repnz
cmp
jecxz
ja
jae
add
add
mov
call
mov
jle
pop
push
adc
jp
out
aad
int3
cmpsl
pop
pop
push
push
mov
pop
ds
jle
mov
arpl
cmpsl
enter
mov
xor
adc
insl
or
jp
stos
ss
cmp
loop
jbe
pop
inc
ds
sbb
insl
xor
hlt
insl
or
cmpsb
mov
sti
mov
jae
rcrb
arpl
cmovbe
stos
xor
inc
push
xor
sbb
cs
push
aad
imul
popa
xchg
loopne
xchg
xchg
pop
xchg
dec
test
loope
push
lret
in
pop
cli
popf
outsl
aam
movsl
outsl
or
pop
cmp
in
push
repnz
jle
mov
dec
hlt
adc
push
or
adc
and
out
outsl
fmul
cmp
loopne
cmpsl
cld
ljmp
adc
arpl
outsl
add
repz
in
push
out
add
mov
cmp
sub
pop
pop
push
cltd
mov
test
jb
pushf
aas
inc
pop
xchg
andb
cmpsl
ud0
dec
cld
ljmp
movl
call
lods
call
lea
jmp
lahf
lea
movb
setns
movb
mov
bswap
cwtl
call
lea
shr
add
shld
not
mov
clc
neg
mov
clc
repnz
pushf
pushl
lea
jne
movsbw
pusha
movb
not
lahf
setae
setbe
mov
bswap
movw
movzbl
jmp
not
pusha
dec
xor
rcl
neg
adc
pushl
adc
add
mov
pushf
stos
pushf
not
mov
lea
pusha
mov
call
not
pushf
pushf
pushl
dec
stc
movb
bt
neg
pushl
sub
jnp
mov
push
call
inc
bt
cmc
call
lea
pop
mov
call
push
lea
je
cmc
xor
dec
rcl
ror
mov
aam
mov
bt
and
push
bts
shr
lea
cmp
mov
call
pusha
lea
jne
add
neg
sbb
mov
cmp
add
cmc
push
movzwl
add
test
rcl
mov
cmc
clc
add
cmc
jmp
pusha
movl
jmp
sub
push
xchg
jmp
pushf
movl
pusha
call
pushf
movl
push
pusha
push
push
lea
jmp
sub
mov
es
mov
insl
jge
jmp
pop
inc
rcl
mov
and
mov
std
push
sbb
adc
lods
pop
xchg
negl
mov
sub
push
test
add
sbb
outsl
add
fwait
or
lods
mov
push
add
push
or
push
fisubrl
cmpsb
jecxz
mov
jecxz
inc
cmpsl
push
or
ljmp
in
rolb
in
addb
aas
lds
lahf
idiv
ljmp
mov
pop
out
hlt
lahf
adc
mov
lcall
add
jno
pop
dec
or
arpl
add
mov
cmp
mov
pop
mov
enter
pop
or
jne
lret
xor
mov
ljmp
jmp
test
sbb
add
inc
dec
mov
dec
jecxz
mov
jmp
add
pop
nop
lods
daa
cmp
fsubrs
dec
inc
sub
and
mov
and
xor
cmc
push
xchg
scas
xlat
push
pop
fiadds
aaa
pusha
dec
mov
std
jl
lret
js
cmp
sahf
adc
and
xor
bound
sbb
mov
subb
movsb
loop
into
adc
in
mov
sti
jmp
push
mov
push
mov
pusha
jnp
push
adc
mov
xchg
jp
inc
mov
jo
mov
pushf
jmp
std
daa
xchg
lea
mov
ucomiss
movswl
sarb
xor
lret
aad
out
mov
mov
aad
daa
pop
mov
into
cwtl
or
rol
out
out
mov
mov
sub
xchg
dec
mov
mov
push
test
cmc
in
inc
adc
stos
inc
add
or
lock
sahf
mov
mov
mov
aas
push
jno
jle
lods
test
or
push
jb
incb
push
pushf
mov
pop
fsubl
loope
mov
sbb
imul
jae
outsl
push
jns
pop
dec
les
jne
mov
rclb
adc
ljmp
int3
insl
fiadds
shrb
clc
imul
pop
jl
in
ljmp
push
nop
adc
sub
mov
stos
jo
jno
cmp
push
sbb
xor
aas
movsb
nop
adc
les
push
adc
icebp
mull
or
mov
stc
repnz
subl
jmp
push
adc
push
inc
or
xchg
adc
xor
push
call
insb
mov
mov
jp
mov
insl
aam
dec
xchg
sub
xchg
imul
inc
std
std
int
pusha
dec
dec
outsb
jb
mov
jno
xchg
or
adc
aam
shlb
mov
clc
cmp
mov
cmpsl
xor
shll
push
push
ljmp
sbb
xchg
scas
sbb
cltd
dec
mov
in
test
aad
xlat
lods
or
sub
xor
ds
inc
int
popa
xor
sub
lahf
jmp
inc
mov
inc
push
ret
push
inc
mov
fiaddl
adc
je
ljmp
xchg
nop
xchg
testb
push
bnd
nop
add
into
std
aaa
xor
pop
ret
sub
cmp
ret
ljmp
pop
xchg
lods
sbb
jbe
jp
xchg
popf
je
stos
adc
sarl
xor
cmpb
xor
ficoml
sub
xor
lahf
mov
and
jo
lret
ljmp
mov
dec
subb
sahf
pop
push
jg
push
bnd
cmc
mov
xchg
ljmp
outsb
push
test
dec
lea
test
inc
jbe
jmp
add
adc
test
mov
and
cs
cmpsl
xor
pop
cmpsb
jnp
sub
inc
ljmp
scas
cmp
and
mov
sub
lret
cmp
mov
stc
xor
xor
add
mov
iret
cld
ljmp
add
xchg
and
jbe
xchg
idivb
jne
jbe
pop
push
outsb
add
and
push
jo
mov
fsubl
mov
lret
cld
add
mov
adc
in
sub
or
adcl
lods
mov
fcompl
sub
in
call
idiv
dec
sub
mov
sub
mov
xchg
pop
mov
push
mov
dec
repz
int3
hlt
ljmp
xchg
push
xchg
lret
rcrl
andl
ljmp
cli
and
popa
sub
cmc
cli
jb
pop
sub
popa
ljmp
call
sub
pop
cltd
adc
lock
outsl
lea
filds
jl
das
mov
mov
mov
out
dec
fdivl
mov
pop
popa
lret
clc
test
pop
popa
fbld
push
std
and
xchg
mov
fnstenv
mov
fsubrl
cmp
mov
jnp
dec
div
scas
and
cld
ljmp
sbb
push
add
lds
sarb
ret
sahf
mov
mov
lret
mov
test
push
arpl
out
ficomps
mov
add
fidivrl
shrl
dec
push
imul
mov
lret
dec
jecxz
jo,pn
and
push
xchg
cld
ljmp
mov
or
cmp
push
pushl
call
dec
mov
addr16
in
sub
pop
add
repz
pmuludq
jae
popf
cmp
pop
movsb
or
sub
fisttpll
xlat
fldt
mov
imul
testb
in
and
shll
or
dec
lock
pop
movzbl
mov
pushf
cmp
pushf
lea
jbe
test
mov
dec
adc
add
mov
shr
mov
jmp
call
cmp
xchg
mov
push
jne
fistpl
gs
arpl
out
mov
inc
int
sub
frstor
jp
pop
fsubl
lds
add
or
sbb
aas
call
inc
call
xchg
sub
daa
nop
jae
insb
inc
mov
adc
cmpsb
cld
ljmp
shlb
pushf
lea
call
push
pushf
jmp
lea
ja
jmp
jmp
call
push
jmp
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
inc
and
popa
push
insb
idiv
cmp
pushf
jmp
lods
lock
adc
pop
push
dec
js
xchg
in
aaa
add
fadds
push
xor
ss
sub
and
and
cltd
jb
bswap
movsl
sbb
icebp
loop
mov
mov
xor
jp
mov
push
cmp
xchg
add
stos
iret
mov
xor
ljmp
sbb
cmpsl
mov
sti
notl
repz
lods
mov
lcall
in
inc
push
adc
xchg
out
clc
mov
js
out
movsl
lods
dec
pop
xchg
xor
out
lock
cmp
aam
out
outsl
xor
xchg
mov
addb
push
xor
adc
fistl
inc
add
call
nop
pop
inc
sbb
scas
mov
jae
cmpl
out
and
push
ret
fwait
adc
xchg
mov
mov
xchg
int
push
lret
adc
and
jmp
ficoms
cmp
int3
mov
jmp
sub
mov
mov
sub
dec
dec
or
push
push
in
loop
pop
scas
aad
jp
ret
push
dec
xchg
add
lret
push
loopne
out
dec
arpl
adc
and
add
xchg
xlat
xchg
xchg
ret
lds
cmp
inc
xor
es
adc
in
pop
adc
in
ja
dec
in
mov
aam
iret
sbb
pop
push
testl
jnp
out
mov
out
ljmp
inc
dec
lods
cld
ljmp
mov
incl
dec
jp
pop
ret
push
leave
inc
aaa
sub
xchg
and
and
movsl
sub
sub
fs
loope
dec
and
shrb
jl
inc
repnz
push
call
jne
or
inc
pop
nop
in
adc
sbb
loop
rcrb
leave
incb
xchg
sub
int3
inc
mov
mov
jns
push
loopne
scas
push
xor
stos
xor
sub
ljmp
pop
addr16
inc
leave
mov
leave
pop
mov
mov
jmp
scas
xchg
dec
je
and
cli
arpl
bound
pushf
rcrb
les
lret
stc
sub
push
lea
mov
stos
scas
out
dec
gs
iret
xor
adc
ja
or
ret
or
dec
jbe
movsb
push
or
data16
add
mov
enter
mov
rcl
cld
push
mov
dec
cmp
lahf
jo
cmc
xchg
xchg
testb
sbb
xor
lcall
jl
sub
ss
sub
jecxz
cmp
add
jcxz
lahf
adc
jle
cld
ljmp
lods
sub
lcall
sbb
test
push
pop
aam
inc
adc
and
push
sbb
xor
pop
mov
jmp
inc
push
mov
xchg
push
jne
ljmp
arpl
in
mov
mov
lds
aas
sahf
sahf
and
mov
test
addr16
inc
inc
fdivs
cmpsb
and
test
xchg
andl
or
jmp
mov
jbe
mov
pop
mov
cmpsl
test
adc
mov
push
inc
sub
insb
dec
mov
idiv
jbe
jmp
mov
xor
xchg
jnp
orl
xchg
mov
ds
loop
inc
loop
mov
insb
or
inc
mov
mov
testb
lcall
out
imul
or
sbb
enter
pop
push
inc
es
fbld
js
dec
push
add
pushl
shrl
push
mov
pusha
dec
push
movl
pushl
lea
jmp
call
mov
lea
push
mov
lea
lea
jno
pusha
mov
call
lea
call
push
pushf
mov
pusha
mov
mov
lea
jmp
call
push
xor
cs
cmp
inc
ss
daa
fdivl
cs
add
xchg
xor
or
inc
pop
inc
fistl
adc
mov
lock
mov
lcall
mov
inc
rorl
jmp
pop
dec
les
jl
mov
lods
xchg
jae
int3
das
cld
ljmp
and
mov
movzbw
lea
jl
pusha
movzbw
mov
bswap
lea
setnp
pushl
mov
mov
mov
movzbl
mov
pusha
pusha
mov
pushf
pushf
pushl
ret
rcl
mov
jmp
call
call
push
call
imul
gs
xor
cs
insb
add
mov
mov
frstpm(287
pop
pop
fmul
rcl
ss
lret
dec
sbbb
mov
jmp
xchg
push
xchg
rcrb
xor
adc
dec
out
add
stos
loope
xchg
call
repz
jo
aaa
cmp
cmp
mov
or
ljmp
mov
push
jb
jecxz
das
jns
jmp
sub
jbe
ljmp
add
add
test
gs
lea
stc
seta
mov
push
mov
or
pusha
mov
pushf
jmp
jne
gs
xor
fs
insb
add
das
int3
pop
mov
je
aad
pusha
popa
push
aas
flds
scas
aad
lret
mov
add
imul
or
sbb
dec
push
mov
mov
add
mov
shrb
fwait
xchg
idivl
icebp
dec
sub
out
outsl
xlat
mov
roll
das
or
int3
leave
jcxz
pop
imul
and
imul
dec
xlat
push
in
inc
sbb
xor
cmp
stos
movsl
rcl
mov
orl
cltd
in
cld
ljmp
jmp
xor
sbb
mov
mov
aaa
pushf
push
cld
push
pushf
inc
cld
push
add
or
mov
fwait
inc
popa
push
aaa
mov
mov
mov
inc
dec
push
pusha
movl
jmp
pushl
lea
call
call
lea
jb
pushf
movl
pushl
ret
push
jmp
xor
lea
pushf
pusha
jmp
lea
jle
push
mov
movl
jmp
xchg
out
adc
xchg
jnp
outsl
jb
in
int3
pop
arpl
mul
gs
mov
sbb
popf
mov
lahf
or
les
cli
and
mov
mov
and
cmp
sbb
lea
mov
icebp
rcll
push
cld
ljmp
and
cmp
jmp
push
test
or
call
call
repz
push
pusha
call
outsb
fstp
mov
jo
dec
xchg
scas
js
ds
scas
scas
mov
popf
adc
pop
xchg
add
adcb
popf
adc
les
repz
ret
sbb
pop
insl
pop
jnp
sbb
cmpb
je
push
popa
dec
add
push
leave
sub
jg
sbb
jnp
or
sbb
lds
xor
mov
cmp
mov
cmc
je
ljmp
push
sbb
fnsave
in
cmp
rorb
push
int3
push
in
pop
push
cld
sub
int3
sbb
mov
inc
out
or
nop
mov
pop
adc
mov
sub
sbb
inc
outsl
cmp
add
dec
pop
popf
push
imul
out
or
xor
mov
mov
jo
xlat
push
lea
mov
xor
pop
pop
dec
mov
sub
mov
and
inc
cmp
xchg
cld
ds
arpl
dec
xor
test
lret
lret
sti
orb
dec
mov
popf
xchg
fistpll
ss
cmp
inc
arpl
push
jo
sub
xor
and
sub
into
int
data16
test
jns
ljmp
sahf
inc
lods
mov
xchg
std
or
repz
rclw
lds
jmp
sarb
rolb
mov
pop
lret
mov
std
or
xor
xor
rol
cli
pop
jns
jle
aaa
xor
pushf
and
xor
mov
pop
mov
dec
mov
push
shlb
inc
mov
push
lret
das
push
adc
jne
sub
cmpsl
adc
decb
lea
jle
jne
push
movw
push
inc
mov
jmp
nop
mov
cmp
add
xor
mov
or
or
add
push
adc
and
out
jb
scas
xor
add
add
sbb
pop
loope
push
sub
xor
sub
jl
push
xchg
mov
adc
xlat
lcall
cmp
mov
leave
std
jl
into
cmc
jl
xchg
pushf
test
ja
jne
js
rcr
es
xchg
ljmp
xchg
fs
rcrb
mov
out
dec
mov
ds
mov
xchg
cmp
mov
inc
mov
push
sub
sub
add
int
xchg
inc
lea
dec
pushf
push
pop
ret
mov
faddl
sbb
jmp
jmp
push
call
lret
aad
fwait
in
jg
jg
fisttpll
inc
leave
xor
shll
outsl
xchg
inc
jno
xorb
dec
shrl
or
jp
pop
fldt
pop
fcmovnbe
aaa
xchg
stos
lahf
push
mov
pop
call
and
hlt
lahf
fisubrs
add
imul
jl
mov
xor
std
pop
into
into
mov
outsb
mov
repz
sub
mov
mov
out
jae
mov
cli
icebp
push
mov
sbb
dec
aam
enter
push
push
inc
cld
xlat
xor
dec
mov
fldl
mov
mov
pop
aas
imul
ret
ftst
bound
movsb
adc
test
add
repz
mov
jbe
push
fwait
ret
adc
iret
inc
out
fdivrl
pop
jmp
ljmp
fmull
or
jp
mov
stos
jmp
push
mov
inc
mov
shrb
pop
ficoms
pop
xchg
sub
mov
sub
push
mov
add
adc
fst
shl
push
aas
pushf
std
jne
rorb
jmp
ljmp
add
addl
cld
ljmp
sbb
xchg
mov
mov
fstl
xchg
push
notl
ffree
or
aas
jno
js
push
adc
into
in
push
jno
push
or
push
add
or
popf
xlat
cmp
xchg
int
jmp
pop
add
add
dec
shrb
pop
add
xchg
jmp
cltd
jle
daa
fwait
push
out
cmpb
jb
pop
jmp
pop
data16
jo
adc
mov
dec
mov
lock
cmc
rorl
push
sti
bound
pop
stos
cwtl
lea
or
adc
mov
or
mov
imul
dec
sahf
dec
sbb
shll
cmp
hlt
add
inc
pop
add
mov
insl
lods
mov
and
inc
mov
movsb
pop
dec
ss
push
cmp
shrl
jmp
sub
add
in
test
out
loope
mov
fs
add
cs
mov
hlt
jmp
lahf
add
fildll
lea
jb
adc
aad
and
lea
push
xor
xor
pop
xchg
imul
sbb
xchg
testb
and
lret
jbe
shrb
in
push
filds
lods
or
jl
push
mov
shlb
fs
fstl
sarl
in
lods
out
pop
jmp
cmc
test
or
test
mov
loope
enter
int3
das
xor
and
popl
push
lcall
add
mov
outsb
popf
add
pop
and
jmp
dec
mov
cld
ljmp
out
cmc
int
adc
repz
fucomi
pop
push
pop
dec
xlat
mov
iret
mov
dec
sbb
scas
xchg
mov
pusha
fwait
mov
shl
cwtl
out
popf
loopne
ljmp
add
sbb
lds
mov
das
rolb
jl
int
ja
cmp
xchg
mov
xlat
and
cld
ljmp
popw
jmp
push
jmp
push
movl
mov
lea
jmp
mov
jmp
nop
jnp
lea
das
in
fsubr
clc
push
fcoml
push
push
inc
cmp
push
push
cmpsb
dec
xchg
ja
xor
loope
sti
add
clc
push
jmp
mov
add
mov
jl
call
repz
adc
or
fdivs
mov
or
lcall
mov
test
push
lds
mov
paddb
pop
pop
add
dec
test
call
call
sahf
push
or
and
cwtl
xor
mov
xor
daa
fwait
dec
xor
lea
mov
cmc
push
push
mov
jbe
cmp
add
sahf
mov
les
aaa
test
gs
or
add
push
mov
mov
fcomp
and
in
outsb
and
dec
out
pop
aas
call
bound
add
int
aam
fwait
and
dec
test
ret
jo
lahf
mov
add
pop
popl
cmp
ljmp
push
and
fbld
icebp
fucomip
rorl
into
jne
mov
jle
add
sbb
jmp
cmpsb
and
test
push
mov
sarl
dec
xchg
arpl
mov
mov
les
jl
cmc
mov
cmp
push
out
mov
aaa
sahf
sbb
sbb
dec
andl
sub
mov
mov
lcall
ljmp
mov
imul
jbe
push
xchg
aam
lcall
dec
pop
add
sub
sub
ljmp
ficomps
sbb
pop
bswap
clc
ljmp
loop
mov
dec
inc
repz
sbb
fldl
movsl
push
cld
ljmp
and
je
push
cmp
jmp
or
jmp
lea
jne
rcl
rcr
jmp
cmp
mov
movsl
inc
inc
int3
or
jecxz
call
mov
ljmp
fdivr
sbbl
sahf
dec
stc
mulb
sbb
xorb
fst
fnstcw
adc
ljmp
movsl
push
mov
jbe
aaa
sbb
repz
iretw
mov
mov
stc
mov
xor
test
mov
jmp
mov
add
stc
mov
mov
dec
add
inc
sbb
mov
pushf
pushl
clc
test
pushf
pushf
jmp
add
add
inc
int
ds
scas
cs
push
mov
and
nop
das
ss
out
js
mov
ret
sbbb
movsb
adcb
aam
mov
sbbb
adc
mov
mov
sarl
cmc
test
shlb
xchg
inc
sub
scas
in
push
fdivp
stos
or
mov
out
in
cmp
pop
insb
jne
push
pusha
jnp
lods
imul
loop
cmp
inc
cmpsb
cld
ljmp
inc
and
jae
jbe
movw
mov
pusha
push
lea
jmp
setle
rcl
setb
mov
push
cmp
stc
add
jmp
and
jmp
pushl
popl
pop
call
pushl
popl
pusha
mov
movl
lea
jmp
sbb
mov
test
cmp
add
pusha
push
pushf
push
lea
jmp
cmc
mov
xor
push
mov
call
and
lea
je
pushf
mov
pusha
pusha
pushf
pushf
popl
call
pushf
pusha
push
pushf
lea
jne
neg
xorb
push
mov
pusha
push
movb
push
lea
jmp
mov
lea
je
pushf
pushf
popl
pushf
pushl
popl
push
pushf
lea
jmp
pushf
jmp
and
mov
bts
shl
mov
push
jmp
lea
ja
shl
pusha
sar
pushf
lea
aaa
bsf
dec
xchg
lea
shr
sub
btr
aam
lea
shl
btc
call
lea
jne
pushf
movw
push
mov
push
mov
lea
jmp
push
pusha
call
movl
push
pusha
mov
pushf
pushf
lea
jmp
mov
push
xchg
jmp
mov
push
mov
call
pushf
call
pushf
pop
movsbw
mov
pushf
mov
call
push
pusha
push
mov
not
mov
not
mov
not
lea
mov
call
cmc
clc
bt
cmc
xor
cmp
clc
cbtw
call
push
dec
pushf
pushf
pushf
pusha
lea
jmp
pushl
dec
push
lea
jmp
jmp
mov
movzbl
cmc
xor
push
jmp
xor
test
jmp
mov
cmc
cmp
stc
jmp
mov
pushf
pushl
push
lea
jmp
pushf
popl
jmp
repz
popl
movzbw
pushl
popl
movsbw
lea
not
movl
pushf
call
pusha
jmp
mov
not
jmp
pushl
cwtl
mov
sub
pushf
movb
mov
jmp
shl
clc
not
movsbl
mov
add
dec
sub
pusha
add
jmp
lea
movw
mov
bswap
jmp
inc
ror
sar
mov
pusha
cmc
add
pusha
push
lea
jmp
bswap
bswap
not
not
jmp
pushl
popl
movw
push
lea
jmp
jmp
pushf
popl
call
movw
mov
mov
pusha
lea
jmp
xadd
not
mov
mov
pushf
ror
pop
sar
add
not
sub
rol
shld
stc
seta
mov
call
pushf
popl
push
pushl
popl
movb
pushf
lea
jmp
adc
mov
lea
and
mov
bt
pusha
jmp
pusha
movb
lea
je
clc
call
mov
movsbw
call
pushl
popl
pusha
mov
movb
lea
jmp
aas
mov
adc
pushf
mov
push
seto
mov
cmp
push
stc
add
jmp
pusha
add
jno
sub
pusha
jmp
call
movzbw
lea
pop
mov
pushf
call
pusha
lea
jno
popl
push
lea
jmp
bsf
xor
adc
shl
mov
and
movzbw
btc
sub
btr
stc
and
xor
add
btr
sub
jmp
not
bswap
inc
btr
bt
rol
bts
shrd
rol
and
sub
pushl
cmp
pushf
mov
clc
test
add
jmp
jmp
pushf
mov
call
and
ror
mov
movb
add
pusha
mov
push
pushf
push
pushf
lea
jmp
repz
popl
bswap
lea
pop
not
pushl
popl
pushf
movl
movsbw
jmp
push
movzbw
push
push
mov
pushl
mov
jmp
seta
pusha
mov
mov
pushf
call
push
mov
mov
lea
jmp
mov
movb
pushf
pushl
pushl
lea
jmp
pusha
pushf
popl
pushl
pushl
popl
pushf
pushf
pushf
lea
jmp
push
movzbl
movsbw
movsbl
mov
pushl
dec
test
pusha
test
add
cmp
cmp
add
push
pushf
call
add
call
inc
mov
ror
dec
cmp
add
pushf
jmp
cmp
mov
cmc
call
push
jmp
sub
shld
or
bts
add
movsbw
btr
btc
setle
ror
movzbw
bswap
xor
adc
jmp
daa
mov
rol
and
mov
test
bt
push
add
jae
sub
bt
clc
pushf
mul
push
movw
mov
push
call
mov
movzbw
bswap
mov
pushf
lea
mov
lea
mov
movsbw
push
mov
bswap
push
push
mov
movsbw
not
push
movzbw
jmp
pushl
popl
pushf
mov
push
pushf
lea
jmp
pushf
cmp
jmp
mov
pushf
bswap
call
movsbw
neg
and
test
mov
btr
pusha
shld
cmp
mov
bt
cmc
pusha
movb
add
mov
push
mov
mov
lea
jmp
sar
bsf
rol
movzww
bt
test
xchg
test
pushf
sub
clc
pusha
cmc
stc
lea
stc
rol
jmp
pusha
movb
pushl
xchg
pushf
call
lea
mov
pusha
mov
movb
push
lea
jmp
call
dec
mov
test
movw
test
xor
pushf
add
cmc
test
pushf
sub
stc
stc
mov
jmp
push
mov
pushf
bswap
not
repz
popl
push
jmp
pusha
call
jmp
movsbw
pushf
mov
std
mov
jmp
mov
mov
mov
pushl
pushl
ret
pushf
inc
bts
rcl
pushf
rol
ror
and
add
cmc
movb
mov
cmc
sub
jmp
jmp
sub
pushf
mov
movb
lea
jmp
mov
pushf
lea
jmp
pushf
mov
repz
popl
movzbw
lea
push
pushl
popl
jmp
pusha
pusha
mov
push
pushf
pushf
movw
lea
jmp
clc
ror
pusha
call
pushl
mov
pushf
mov
lea
jmp
mov
pushf
movzbw
not
push
mov
push
repz
popl
mov
pushl
popl
bswap
movl
not
lea
bswap
mov
pusha
lea
jmp
inc
sar
xchg
mov
sets
add
mov
push
call
mov
mov
mov
push
pushf
lea
jmp
movb
push
mov
movb
pushf
push
lea
jmp
lea
jne
test
bsf
mov
call
bswap
shl
mov
pushf
jmp
movzbw
mov
pushf
movzbw
mov
pushl
pusha
pushf
jmp
jmp
mov
movw
push
sub
pushf
jmp
shl
call
pusha
mov
bswap
lea
pushf
mov
bswap
pusha
bswap
pushf
mov
movsbl
mov
not
not
lea
movsbw
mov
call
mov
mov
push
push
push
pusha
lea
jmp
movb
dec
stc
stc
xor
call
jmp
sub
mov
push
push
mov
push
push
lea
jmp
pushl
popl
pushf
push
push
pushf
lea
jmp
mov
pushl
pusha
push
lea
jmp
movl
push
jmp
mov
mov
stc
bt
push
call
pushl
push
mov
mov
mov
lea
jmp
call
mov
rep
btc
not
clc
test
mov
shrd
ror
rcr
mov
mov
pushl
popf
pushl
lea
jmp
mov
push
movb
pushl
push
lea
jmp
pusha
pusha
pushf
pushl
popl
pushf
pushf
mov
movb
lea
jmp
pushf
mov
pushf
movw
movb
lea
jmp
push
mov
pop
lea
mov
not
bswap
repz
popl
bswap
pushl
movsbw
pushl
popl
movzbw
jmp
cmc
stc
add
call
mov
pop
not
not
lea
mov
mov
pushf
movb
pushl
ret
mov
jmp
rep
not
shr
xchg
sub
mov
test
mov
push
mov
pushl
popf
pushl
lea
jmp
lea
repz
popl
pop
pushl
popl
movsbw
lea
jmp
aas
mov
pushf
test
jmp
bsr
btr
sub
shl
not
pusha
neg
and
neg
rcl
btr
not
not
movsbw
cmc
lea
adc
shl
sub
shld
xadd
and
shr
mov
ror
shr
dec
and
mov
bswap
cmp
btr
add
add
push
bsr
mov
test
cmp
add
mov
btc
pushf
bsr
neg
rol
ror
ror
btr
neg
cmc
bsr
add
pop
bswap
jmp
les
add
mov
imul
pop
add
jbe
add
mov
xchg
pop
add
lea
test
pop
add
jbe
add
pop
add
lea
xchg
pop
add
jbe
add
test
fistl
pop
add
cwtl
pop
add
cwtl
pop
add
mov
mov
pop
add
pop
add
lea
lret
add
xchg
pop
add
pop
add
jnp
add
pop
add
jne
add
pop
add
mov
xor
pop
add
xchg
pop
add
je
add
popf
pop
add
pop
add
jge
add
xchg
nop
mov
mov
pop
add
pop
add
mov
sahf
jb
add
pop
add
cwtl
pop
add
test
nop
mov
sahf
jb
add
xchg
mov
pop
add
cwtl
pop
add
pop
add
pop
add
pop
add
xchg
pop
cltd
pop
add
jb
add
test
cltd
lea
sbb
js
add
pop
add
pop
add
js
add
pop
add
lea
je
pop
add
pop
add
cwtl
pop
add
test
enter
mov
cltd
pop
add
pop
add
je
add
pop
add
jbe
add
cwtl
pop
add
pop
add
popf
pop
add
mov
pop
jge
add
test
dec
lcall
dec
lcall
dec
lcall
dec
lcall
ja
pop
add
xchg
jo
pop
add
pop
add
xchg
pop
add
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
cwtl
pop
add
cwtl
pop
add
pop
add
js
add
pop
add
pop
add
jl
add
fwait
pop
add
jbe
add
jbe
add
popf
pop
add
test
sbb
xchg
pop
add
xchg
pop
add
jae
add
jle
add
jns
add
mov
sbb
pushf
pop
add
jge
add
pushf
pop
add
je
add
cwtl
pop
add
lea
lea
enter
cmc
jns
add
popf
pop
add
test
icebp
pushf
pop
add
jnp
add
lea
and
cltd
pop
add
add
pop
add
xchg
pop
add
test
mov
pop
add
add
pushf
pop
add
mov
cmc
jns
add
pushf
pop
add
lea
push
mov
jo
pop
add
pop
add
add
pop
add
lea
in
jb
add
pop
add
jbe
add
pop
add
js
add
mov
push
xchg
pop
add
jnp
add
mov
dec
xchg
mov
pop
add
pop
add
pop
add
fwait
pop
add
test
xchg
pop
add
cltd
pop
add
popf
pop
add
test
pop
jge
add
js
add
pushf
pop
add
mov
in
jb
add
popf
pop
add
jle
add
pop
add
pop
add
lea
mov
pop
add
xchg
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
mov
jnp
pop
add
jb
add
popf
pop
add
pop
add
pop
add
pop
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
pushf
popl
jmp
pushf
movw
call
call
movzbl
stc
mov
test
jmp
call
pusha
pushl
jmp
pushl
popl
mov
lea
jmp
mov
call
jmp
push
call
mov
call
mov
pusha
push
mov
lea
jmp
movl
mov
jmp
call
setae
movzbl
stc
stc
cmp
clc
sub
cmc
push
bt
bt
sub
cmc
rol
clc
neg
call
push
call
mov
movb
movb
lea
jmp
pushf
lea
call
mov
jmp
mov
mov
pushl
movb
pushf
lea
jmp
mov
mov
bswap
bswap
lea
ja
push
mov
movw
pushl
pusha
pushl
ret
clc
rcr
add
mov
cmp
sub
bt
je
cmp
add
call
mov
mov
pop
mov
jmp
shrd
mov
ror
cmp
btc
mov
bt
pushf
movb
jmp
and
pusha
mov
call
mov
jmp
pushf
jmp
pusha
mov
movsbw
mov
not
jmp
mov
pushf
bswap
repz
popl
pop
lea
jnp
lea
pushl
jno
push
not
movzbw
mov
pusha
pushf
lea
jmp
lea
bswap
pushf
mov
pushf
mov
call
push
jmp
and
and
pusha
btr
mov
clc
mov
mov
pusha
cmp
sub
clc
push
shl
pushl
jmp
mov
pusha
jmp
pusha
xchg
not
call
jmp
call
bt
mov
cmc
push
pushl
sub
push
mov
pushl
lea
jmp
lea
movl
mov
mov
movw
pushf
push
lea
jmp
pushf
call
add
call
inc
daa
mov
xor
mov
cmc
test
stc
clc
sub
jmp
aad
or
btr
ror
mov
test
push
sub
push
jmp
movw
mov
mov
pusha
pop
mov
movzbw
mov
pushf
lea
movsbw
mov
mov
not
not
mov
movw
pushl
pusha
pop
mov
not
bswap
pushf
mov
movw
pushl
call
mov
pusha
jmp
call
push
lea
mov
movzbw
lea
pop
call
mov
pushf
pushf
mov
call
pusha
mov
pushf
movb
pushf
pushf
lea
jmp
movb
mov
push
lea
jmp
pusha
pushf
popl
jmp
call
decl
pushf
jmp
pushl
popl
push
mov
lea
jmp
shr
mov
jmp
push
pushf
pushf
popl
movw
jmp
dec
mov
bt
pusha
movb
xchg
call
mov
call
jmp
xchg
movzbw
movzbl
movw
mov
bswap
push
push
mov
movzbw
mov
jmp
mov
mov
movw
pusha
movb
lea
jmp
mov
pushf
mov
mov
pusha
call
not
repz
popl
not
pusha
movzbl
pop
pushl
popl
lea
mov
mov
movl
call
pushl
test
shrd
jmp
pusha
call
cmc
pusha
pusha
bt
add
push
mov
call
movzbw
cwtl
lea
call
xor
movw
pushl
pushl
xchg
pusha
pushl
movl
mov
movb
call
test
clc
and
cmc
push
cmp
pusha
lea
jae
pusha
pushl
lea
jne
not
and
jmp
mov
pop
jmp
xor
stc
sub
mov
mov
dec
jmp
std
pushl
popf
push
mov
mov
lea
jmp
bt
push
sub
cmc
test
test
sub
jmp
movb
divl
call
push
pushf
pusha
call
pushf
movb
mov
lea
cpuid
clc
cmp
pusha
sub
test
pushf
jmp
xor
cmc
jmp
mov
neg
btr
not
mov
stc
pushf
bt
add
pushf
lea
jmp
mov
mov
pusha
mov
pushf
popl
jmp
rol
movzbl
pusha
test
push
xor
stc
clc
push
neg
bt
stc
sub
cmc
push
clc
clc
ror
movw
mov
sub
jns
pusha
xor
push
clc
pushf
cbtw
pushf
jmp
clc
cmc
shr
mov
test
add
pushf
movl
pushf
mov
lea
jmp
pushf
cmc
sub
cmc
pusha
jmp
lea
jne
push
cmp
call
call
mov
pusha
mov
push
mov
lea
jmp
pusha
jmp
mov
not
mov
mov
movzbl
pusha
pushl
lea
mov
movzbl
movsbl
movsbw
jmp
shrd
cmc
pusha
mov
cmc
pusha
btr
bsr
mov
sub
sar
sub
mov
clc
jmp
pusha
mov
inc
push
call
movsbw
not
mov
call
movzbl
movl
lea
call
pushl
popl
pushf
pushf
pushf
mov
lea
jmp
pushf
popl
pusha
mov
jmp
pusha
mov
bswap
jmp
movw
mov
pusha
pushf
movsbw
mov
pushf
jmp
test
cmpl
pusha
jmp
cmc
bt
pushl
pusha
stc
cmc
pushl
add
call
test
test
shr
jmp
cmp
shl
cmp
shr
pushf
jmp
jmp
pushf
pusha
sub
cmc
xchg
stc
cmp
push
jmp
jmp
lea
jle
pushf
mov
pushl
popl
pusha
mov
pushf
lea
jmp
call
mov
pushl
popf
movb
lea
jmp
jmp
push
mov
push
push
pushl
mov
movb
lea
jmp
lea
ja
movsbw
das
mov
bsf
das
clc
lea
rcl
sub
shrd
lea
sar
and
sar
bts
rcr
sub
lea
mov
movsbl
pusha
mov
pusha
pop
jmp
pusha
mov
lea
jne
push
push
pushf
popl
pusha
movb
pushl
popl
pushf
pushl
pushf
movb
lea
jmp
mov
mov
mov
mov
lea
jmp
movzbw
mov
movw
mov
bswap
push
movsbw
pusha
mov
lea
movsbl
pushf
mov
jmp
jmp
shl
mov
clc
bswap
cmc
push
cmp
add
test
mov
cmp
cmc
neg
pushf
cmc
cmp
pushl
xor
stc
pushf
not
mov
stc
mov
cmc
add
cmp
sub
pushf
bt
cmc
mov
sub
jmp
call
btc
mov
push
push
call
mov
bswap
bswap
mov
call
movzbw
pushf
movzbw
mov
pushf
push
pushl
ret
mov
movl
call
jmp
adc
shrd
mov
pusha
sbb
sete
shl
mov
pushf
mov
test
sub
pusha
shl
push
mov
pushf
pushf
popl
jmp
call
clc
cmc
add
pushf
pusha
movl
lea
jmp
mov
push
call
mov
pushf
call
jmp
jmp
rcr
stc
bt
rcr
notl
or
bts
neg
mov
pushf
cmp
clc
sub
bt
movb
test
mov
and
jmp
call
mov
movl
mov
mov
call
dec
mov
mov
add
pusha
pusha
call
xchg
lea
not
mov
push
cld
mov
pusha
jmp
movsbw
lea
jp
pop
pusha
movsbw
mov
mov
mov
not
mov
xchg
lea
jbe
pop
lea
lea
movzbw
movsbw
pop
lea
pop
call
or
clc
xor
jmp
pusha
xchg
lea
mov
not
pushf
movw
movw
mov
pop
mov
bswap
call
mov
bswap
movzbw
pusha
mov
not
movzbw
mov
lea
bswap
movsbl
jmp
pushf
mov
push
push
movb
lea
jmp
sub
pushl
add
push
pushf
call
mov
call
pushf
pushf
popl
call
cwtl
stc
movb
pushf
stc
sub
call
lea
cld
lea
movb
pushl
pusha
mov
jmp
pushf
movsbw
mov
mov
mov
movsbl
call
and
mov
bsf
mov
clc
call
mov
mov
pushl
mov
jmp
push
mov
mov
push
push
pusha
lea
jmp
push
jmp
movl
not
jmp
push
mov
movsbw
pusha
not
mov
pop
pusha
movzbw
mov
pushf
push
not
movzbw
mov
movsbl
movzbl
movw
mov
pushf
pop
movzbl
mov
bswap
not
jmp
lea
lea
jns
push
jmp
setp
shrd
and
mov
cmc
test
jo
add
call
pushf
popl
pushf
mov
pushl
popl
push
mov
lea
jmp
dec
mov
test
stc
sub
pusha
push
mov
jmp
not
btc
mov
test
pushf
add
mov
mov
pusha
movb
lea
jmp
pushf
popl
mov
call
jae
push
movw
pushf
dec
pusha
pushf
pushf
lea
jmp
push
call
and
cmc
sub
movzbw
mov
call
shr
mov
add
mov
pusha
push
jmp
mov
pushf
movsbw
lea
mov
bswap
movsbw
mov
bswap
bswap
pop
movzbw
mov
movzbw
pusha
not
mov
call
call
bsr
or
lea
jg
cmp
cmp
jmp
repz
popl
lea
lea
bswap
pushf
pushl
popl
call
movl
lea
lea
mov
mov
movb
lea
jmp
jmp
mov
not
mov
jmp
sub
mov
movw
movb
pushl
mov
jmp
push
jmp
call
pushl
push
xchg
lea
mov
pushf
mov
xchg
mov
movzbl
pop
pushl
xchg
call
daa
mov
sub
mov
push
not
test
not
cmp
jmp
pushf
popl
push
pushl
popl
pushl
pushf
lea
jmp
mov
push
push
lea
jmp
cld
mov
lea
jo
movzbw
cld
lea
pushf
jmp
push
movb
movb
jmp
setno
bswap
mov
push
pushf
pushf
movb
mov
pusha
call
jmp
shr
xor
mov
ror
neg
cmc
mov
bt
pusha
cmp
call
mov
pushf
movb
lea
jmp
add
push
pushf
jmp
mov
movzbw
mov
movsbw
mov
bswap
call
call
call
mov
pushf
push
pushf
pusha
lea
jmp
lea
setp
pusha
pushl
mov
pushf
pushf
mov
jmp
mov
jmp
pushf
pop
mov
pusha
mov
bswap
mov
mov
pushf
mov
call
mov
pushf
movl
lea
jmp
mov
pushf
call
div
jmp
dec
movzbl
call
call
movw
pushf
jmp
add
add
add
push
push
pusha
lea
jmp
call
not
pusha
not
jmp
repz
popl
pop
jmp
movsbw
rol
shr
sub
or
pusha
sar
add
shl
xor
clc
mov
test
add
call
stc
call
bswap
test
bts
mov
cmp
cmc
pusha
add
mov
push
lea
jmp
stc
sub
jmp
not
mov
push
mov
movb
pushf
lea
jmp
pushf
mov
mov
pushf
popl
call
pushf
popl
pushf
pushl
popl
pushl
push
push
pushf
lea
jmp
mov
movw
mov
mov
jmp
movb
pushl
popl
movw
lea
jmp
jmp
pushf
pushl
mov
movzbl
movzbl
jmp
add
pushf
pushf
jmp
pushl
popl
movzbw
pushf
movl
pushf
bswap
call
mov
pushf
mov
pushf
pushf
pushf
pushf
lea
jmp
bswap
lea
mov
mov
repz
popl
pushf
pushl
popl
pop
movzbl
movl
pop
jmp
sub
pusha
bt
shr
jmp
pop
bswap
pushl
not
pusha
movl
pop
mov
pusha
lea
jmp
mov
bswap
lea
pushf
mov
mov
pop
pushf
mov
mov
mov
mov
lea
movzbw
mov
push
lea
pop
not
repz
popl
pushl
movzbw
pusha
jmp
movb
add
movb
pusha
movb
pusha
lea
jmp
mov
pushf
pusha
pushf
pushf
lea
jmp
movsbw
mov
pushf
lea
jmp
jmp
call
pushf
popl
jmp
add
movl
push
pusha
mov
lea
jmp
xor
pusha
mov
rcr
mov
test
add
movl
lea
jo
pushf
pushf
mov
pushl
pusha
push
lea
jmp
shld
ror
jo
shr
mov
jmp
pushf
popl
pushf
pushl
popl
pushf
lea
jmp
mov
movzbl
repz
popl
lea
mov
pushl
popl
bswap
pop
not
mov
movl
bswap
call
pusha
std
cld
movb
rep
rol
pop
mov
clc
clc
mov
cmc
call
pushf
popl
call
jmp
aad
pushf
daa
mov
pushf
jmp
mov
or
jmp
pushl
popl
pushl
lea
jmp
mov
pusha
push
pushf
popl
call
mov
bswap
push
movsbw
jmp
je
lahf
lea
mov
jmp
mov
call
bt
push
add
clc
shld
jmp
pushf
lea
jle
mov
push
pushf
pusha
pushf
mov
movb
push
pushl
pushf
lea
jmp
push
pushl
popl
mov
movb
lea
jmp
pusha
pop
pushl
popl
movsbl
movsbl
movl
pusha
push
lea
bswap
mov
push
push
pushl
pushl
lea
jmp
movb
pushf
call
btr
daa
shld
mov
push
pusha
call
movzbw
lea
mov
pushl
pushf
movb
lea
jmp
mov
pushf
pushl
movb
pushf
pushl
ret
mov
pusha
movb
mov
movb
pushl
lea
jmp
bswap
pushf
mov
jmp
movzbw
movl
pushf
not
mov
mov
mov
movw
lea
jmp
call
cmp
call
mov
pusha
bswap
mov
lea
movsbw
mov
movsbw
lea
pushf
mov
movsbl
lea
bswap
pop
mov
bswap
pop
movsbw
mov
movsbw
mov
mov
jmp
sub
push
jmp
cmc
movzbl
or
bswap
shl
xor
push
pusha
dec
rcl
setl
jmp
movzbw
cltd
pusha
mov
pushf
movsbl
mov
push
call
rcl
cmc
rol
push
bsf
adc
neg
btc
sar
rcr
rcr
sub
jmp
xchg
mov
mov
xchg
pusha
repz
popl
sub
pushl
popl
movzbw
movl
setbe
stc
lea
not
mov
sub
call
cld
jmp
lea
pusha
mov
pop
repz
popl
pusha
pushl
popl
call
setp
setle
call
pusha
mul
pushf
mov
jmp
pushf
popl
call
clc
rol
clc
bt
clc
call
sub
cmc
pusha
shl
pushl
mov
push
mov
pushf
movw
pushf
popl
pushf
pushf
pushl
popl
mov
mov
movl
lea
jmp
not
lea
call
mov
not
mov
lea
pushf
push
not
mov
lea
jne
bswap
push
push
repz
popl
push
movsbw
pushf
pushl
popl
movzbw
mov
jmp
call
pushf
sub
stc
rol
call
lea
pop
lea
pushf
mov
movzbw
pusha
movsbw
mov
not
mov
mov
lea
bswap
pushf
mov
lea
pushl
mov
lea
push
pop
bswap
mov
pushf
mov
push
mov
movb
movb
pushl
ret
pusha
mov
not
movzbw
pushf
mov
mov
pushf
jmp
sbb
adc
push
aad
mov
btr
mov
bsr
and
cmc
sbb
mov
pushl
test
test
cmc
sub
jmp
pushf
movsbw
not
jmp
clc
jmp
mov
pushf
call
pusha
movl
cmc
add
movw
jmp
pushl
popl
push
movw
movw
lea
jmp
mov
pushf
movb
mov
pushf
mov
call
bts
btc
lahf
mov
add
bts
neg
mov
call
pushf
movb
mov
xchg
bswap
push
pushf
movzbw
mov
pusha
pushf
movsbw
bswap
mov
pushl
push
jmp
dec
movw
lea
jmp
mov
jmp
sbb
xorb
bswap
push
mov
mov
mov
pusha
lea
jmp
call
shrd
xor
sub
mov
pushf
cmp
mov
add
push
pushl
call
neg
cmc
bt
sub
call
call
bt
inc
or
movzbl
adc
sbb
rol
xor
movsbw
neg
pushf
xor
btr
jmp
mov
mov
pushf
mov
lea
jmp
xadd
aad
mov
movzbw
pop
movsbl
std
pop
rdtsc
rcr
not
popf
lea
call
or
bswap
inc
rdtsc
push
cmp
clc
sub
push
mov
mov
pushf
pushf
push
mov
mov
lea
jmp
clc
clc
cmp
add
pusha
pusha
mov
pushf
push
push
lea
jmp
bswap
bswap
mov
push
setg
mov
call
mov
lea
jne
push
dec
mov
pushf
push
lea
jmp
pusha
mov
pushl
popl
pusha
pushl
lea
jmp
jmp
mov
mov
mov
pusha
mov
pushl
pushl
lea
jmp
movzbw
call
push
cwtl
test
bt
call
add
push
pusha
pushl
movl
lea
jmp
mov
push
dec
call
pushf
pusha
cmp
cmp
pusha
call
sub
cmp
test
stc
shr
mov
jmp
add
pushf
call
