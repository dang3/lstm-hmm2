jg
lcall
add
imul
sub
sub
cmp
or
cmp
mov
mov
sbb
cmp
add
imul
add
adc
rorb
pop
sub
out
out
decl
cmp
cmp
add
mov
leave
mov
or
inc
cld
aaa
mov
decl
add
add
add
mov
and
sbb
mov
adc
sub
sub
mov
push
insl
fcomi
int
dec
sbb
sbb
jge
mov
pop
mov
ret
xchg
jbe
mov
imul
cwtl
mov
inc
adc
mov
mov
sahf
sbb
rolb
std
int
mov
mov
xor
sub
mov
fdivs
aam
push
add
imul
fisttpl
xor
pop
sub
add
out
mov
mov
icebp
sub
sbb
fcmovnu
sub
sbb
cmp
scas
push
movzbl
sub
fldt
pop
pop
add
cmp
mov
adc
mov
jge
cmp
ljmp
into
in
mov
scas
mov
or
insl
jl
dec
test
je
sub
rclb
imul
adc
rolb
fldt
pop
pop
add
push
adc
sub
lods
sub
adc
jge
jg
lret
pand
mov
pop
popa
add
repnz
and
mov
bound
out
or
addr16
outsb
sbb
add
adc
mov
pop
sub
insb
fldt
adc
in
xor
pop
movsb
hlt
push
or
mov
insb
scas
inc
dec
loop
or
mov
jbe
add
call
leave
fstpl
pop
cmp
dec
inc
call
pop
sti
mov
icebp
mov
shl
icebp
sub
mov
or
add
sarl
pop
add
mov
popa
jge
dec
out
pop
outsl
sbb
ljmp
testb
add
inc
mov
adc
and
mov
dec
or
icebp
xchg
add
adc
ret
cmp
mov
and
ret
ret
movsl
icebp
and
jbe
jle
push
clc
mov
pop
sbb
ss
add
unpckhps
dec
ljmp
or
enter
shrb
out
in
stos
repz
add
mov
mov
rolb
lahf
sbb
fistps
pop
jae
fwait
pop
sbb
mov
jle
push
mov
mov
and
adc
jne
mov
jo
mov
mov
and
jo
fmull
cmp
das
pop
addr16
mov
xor
fucomp
push
fsubs
push
loop
insl
mov
pop
sub
cmp
inc
fidivs
insb
xchg
cli
xchg
mov
or
xchg
sbb
push
push
mov
cmp
mov
fdivr
rorl
push
adc
lret
arpl
pushf
cli
sbb
repz
call
push
dec
ret
je
mov
pop
dec
pop
add
shrb
or
negl
jmp
std
sbb
add
cmp
xor
int3
outsb
sbb
add
sbb
or
mov
push
ror
and
pop
ja
cmp
sbb
inc
rcrb
imul
jle
adc
sbb
jmp
add
jp
jmp
cmp
jnp
lcall
incl
out
mov
test
fstps
lcall
or
add
pop
adc
sub
sahf
fisttpll
in
mov
out
cmp
aad
push
xlat
mov
in
rol
sbb
mov
addb
int
add
add
mov
pop
scas
rorb
xchg
mov
insb
outsb
mov
adc
rcrl
test
adc
pop
scas
add
xlat
sbb
loopne
jmp
daa
jle
jne
jnp
ret
fists
dec
jle
push
sbb
sub
mov
subl
xorl
add
mov
pop
adc
jl
orl
adc
xchg
and
addr16
orb
sub
sub
stos
and
jecxz
iret
mov
mov
jecxz
lods
rolb
fsqrt
add
mov
sub
push
sarb
cmp
out
cs
rorl
adc
shlb
jp
mov
jb
inc
mov
or
adc
ror
ret
je
or
sub
movl
pop
lahf
mov
icebp
sbb
mov
lea
ds
sbb
test
adc
cmpl
in
mov
leave
mov
or
insl
or
movsb
mov
sahf
sbb
lods
lock
xchg
sub
rcr
push
jb
mov
lea
sub
push
inc
call
outsb
xor
cmpsb
xor
sbb
xor
orl
rcll
sub
cltd
icebp
sbb
sbb
cmpsl
ljmp
aaa
pop
sub
adc
nop
jnp
test
mov
aaa
inc
fistpl
inc
pop
lock
mov
clc
xor
or
int3
popa
jae
push
imul
mov
and
test
jecxz,pn
xor
out
jge
sbb
loop
insb
pop
fisttpl
and
inc
sbb
cmc
lret
ret
sbb
or
inc
stos
dec
pop
test
mov
es
mov
inc
int
pop
addr16
jge
add
lods
pop
sub
sbb
sti
push
ljmp
inc
mov
jbe
sbb
js
push
jns
lock
inc
adc
jbe
sbb
sarb
or
pop
push
inc
aad
sar
imul
rcrl
adc
xlat
loope
popa
sbb
rorb
xor
mov
mov
or
ds
shll
cmp
sbb
pop
or
popa
jg
lret
jo
out
pop
pop
mov
dec
cmpsb
pushw
cmp
cmp
sbb
sar
mov
sbb
and
and
fistpl
push
mov
pop
push
lods
add
hlt
into
dec
out
lock
ss
mov
pop
addr16
add
mov
mov
pop
pop
scas
or
xor
or
push
pop
scas
xlat
inc
test
sub
adc
imul
add
mov
or
push
inc
fwait
jo
adc
ret
pop
hlt
pop
scas
int
xor
xchg
mov
xchg
loopne
sbb
inc
jl
add
adc
sbb
adc
push
es
test
adc
push
pop
ss
les
aam
inc
cmp
loop
je
jno
data16
pop
ss
mov
mov
and
cmc
or
pop
cwtl
out
pop
sbb
push
scas
ljmp
fimuls
adc
loope
dec
pop
adc
push
push
mov
sbb
mov
pop
sbb
jmp
jno
mov
xor
ret
sbb
push
adc
add
enterw
sub
pop
hlt
pop
pop
test
shll
fucomp
push
and
mov
push
mov
lret
sbb
cmpl
or
fs
or
imul
lods
jg
pop
mov
mov
jno
adc
sbb
push
inc
hlt
add
in
pop
mov
push
ret
rolb
add
fistpl
into
inc
cmpb
ljmp
ret
movsb
and
lock
cmp
ret
test
dec
rorl
adc
pop
aad
stc
or
cltd
or
push
shr
pop
in
ficoms
pop
jne
ret
in
shll
mov
pushf
and
mov
add
sbb
push
loop
ret
insb
mov
add
dec
or
pop
daa
in
lret
jo
out
inc
push
jle
movsl
add
clc
push
cli
lret
repnz
xchg
rcll
dec
xchg
cmp
mov
fwait
sti
cmpl
push
data16
push
jmp
in
and
sbb
push
or
jmp
ljmp
hlt
push
in
mov
rcrb
adc
insl
pop
sub
adc
or
jmp
adc
mov
rorb
fdiv
test
jp
or
push
lret
add
ss
repz
call
xchg
sbb
icebp
aad
insb
movsl
sub
mov
stos
mov
sbb
outsb
xchg
mov
xor
call
inc
fildl
or
sbb
sbbb
clc
mov
bound
cmp
in
or
mov
cmc
push
nop
lret
adc
fisubl
cmp
lock
call
jbe
mov
inc
fwait
lds
push
pop
or
lea
rcl
rol
mov
mov
cmp
test
pop
shrb
fimull
adc
or
inc
call
bound
inc
shll
subb
sbb
add
pop
mov
xchg
or
sbb
xor
push
and
call
jg
add
mov
pop
call
popa
fsubs
or
adcl
rcl
adc
mov
mov
pop
pop
dec
je
out
into
dec
inc
xlat
les
add
push
popa
clc
inc
arpl
push
push
ffreep
or
xchg
dec
inc
sbb
out
fbstp
xchg
lea
cmp
or
fcoms
jmp
sbb
xor
dec
lods
ljmp
sbb
fadd
xlat
repnz
inc
dec
scas
daa
adc
push
and
in
les
mov
xchg
push
loop
push
push
int3
push
push
inc
jnp
aaa
sub
push
or
xor
push
mov
mov
and
cli
or
aas
dec
add
fcmovnb
sbb
lret
cmpsb
in
fsqrt
inc
es
movb
lds
mov
dec
cmpb
std
ljmp
jmp
adc
mov
cli
add
out
or
add
push
dec
add
mov
adc
push
les
out
sbb
adc
push
ss
icebp
imulb
iret
push
daa
mov
in
sbb
fadds
mov
mov
fs
mov
jne
test
cmp
ret
stc
jecxz
ret
inc
mov
mov
es
loop
adc
xor
sbb
cmp
push
push
push
outsb
pop
xlat
lcall
call
jl
add
or
js
or
test
sbb
push
xor
in
adc
test
arpl
hlt
leave
dec
out
rolb
push
rcrl
test
sub
push
fisubrl
rclb
dec
popf
mov
push
lret
mov
inc
test
add
lcall
ds
lock
xor
mov
sbb
daa
je
add
xchg
pop
sbb
or
sbb
cmp
loopne
test
adc
push
orl
pop
add
push
leave
sbb
or
jae
pop
ret
or
or
xchg
clc
add
dec
fcmovbe
aam
rorb
sbb
or
xchg
pop
mov
pop
insl
cmp
mov
addl
xchg
cld
es
inc
lret
shll
push
loope
pop
imul
inc
sub
wbinvd
fdivrs
int
jmp
sbb
popa
mov
xlat
cli
or
ljmp
mov
mov
jl
das
cmp
push
daa
divb
insb
mov
mov
mov
sbb
mov
add
popa
in
or
dec
xor
push
sbbl
scas
add
mov
gs
pusha
cld
add
rclb
movsl
rclb
add
jo
lods
lcall
fadd
icebp
mov
sbb
xor
icebp
adc
sbb
and
add
mov
adc
sub
fisubl
pushf
sub
inc
or
les
or
xchg
jp
xchg
adc
les
cmp
shll
and
sarb
add
arpl
sbb
loop
mov
cltd
mov
push
xor
cmp
mov
sub
add
jle
movntps
adc
sti
push
lods
adc
stc
adc
loopne
lcall
or
mov
cmp
les
cmp
jg
loopne
shll
cmp
scas
bound
aas
add
aam
data16
adc
or
mov
mov
and
lcall
pop
lock
cmp
rolb
shl
jnp
insb
sbb
pop
pop
xchg
adc
push
adc
cmp
or
add
call
dec
ret
mov
or
stos
addr16
mov
sbb
mov
adc
adc
push
pop
inc
pop
or
pop
pop
pop
or
popf
pop
mov
stc
push
mov
mov
ds
leave
push
adc
icebp
mov
mov
call
and
sbb
pop
mov
or
sub
pop
xor
shrb
mov
in
mov
pop
cmp
out
cmp
fcmovu
mov
add
icebp
nop
out
and
cli
dec
inc
sub
xchg
jno
jl
bnd
int3
push
sub
push
rcr
bound
mov
sbb
mov
add
addb
lret
push
xor
mov
loop
jmp
mov
cwtl
mov
and
inc
arpl
jo
fidivl
push
int3
add
adc
jl
jo
call
shl
nop
test
pop
mov
jmp
in
negl
add
adc
push
xor
push
mov
andl
dec
inc
wrmsr
aam
iret
sbb
js
mov
dec
dec
mov
je
or
or
pop
mov
into
or
sarl
and
in
scas
outsl
push
pushfw
mov
jp
aaa
stos
dec
sbb
inc
subb
nop
nop
lret
insl
push
jae
mov
dec
lock
push
push
or
adcb
aas
mov
cld
jge
cli
clc
cmc
pop
mov
rcr
aam
xchg
jo
push
jns
and
jge
adc
aam
or
xchg
add
lods
mov
shrl
push
repnz
fistps
xor
adc
dec
inc
lock
xor
or
mov
enter
mov
pop
loope
insb
ret
cli
add
inc
rolb
test
cmp
adc
sub
jmp
cltd
sbb
xchg
push
test
mov
push
sbb
adc
sti
hlt
rclb
adc
lret
add
jb
sbb
pop
shll
lcall
aaa
xor
mov
icebp
adc
add
fs
sub
or
sbb
or
loop
or
inc
mov
inc
rorl
fs
into
dec
adc
cmp
adc
mov
xor
jle
scas
inc
pavgusb
test
sbb
add
in
dec
jno
mov
fisubl
test
nop
sahf
push
push
add
jo
pop
jb
or
imul
xchg
mov
notl
mov
scas
sbb
and
jo
lret
xchg
sti
imul
cltd
pop
enter
sbb
imul
or
inc
push
mov
adc
adc
call
addr16
das
nop
add
or
ss
movsl
pop
adc
scas
push
mov
add
pop
test
movsb
mov
int
push
enter
les
sbb
into
inc
mov
nop
sbb
cmp
inc
inc
push
subps
and
mov
push
sub
jbe
jp
js
or
lret
js
dec
mov
adc
add
adc
loope
cmpsl
jnp
daa
xor
push
xor
mov
leave
pop
add
dec
mov
fimull
and
xchg
adc
push
inc
call
inc
xchg
sub
add
loopne
mov
icebp
inc
sbb
mov
cmpl
js
cmpsb
inc
jg
jle
mov
enter
das
popf
bound
mov
inc
rcll
mov
cmp
mov
push
push
jmp
icebp
push
mov
add
andb
lahf
sbb
addb
adc
dec
or
push
push
push
adc
daa
xor
das
loope
jg
rcrl
lret
sbb
leave
add
fisttpl
adc
pop
mov
push
xchg
sbb
sbb
jl
cltd
clc
cmovb
sbb
iret
ljmp
xor
andb
and
cmpsb
add
in
adc
es
or
or
add
imul
fisttpll
xchg
adcl
stos
or
sbb
pop
ret
scas
outsb
hlt
jb
xor
push
ficoml
dec
punpckhbw
xorl
call
cmp
sar
sub
dec
or
push
push
hlt
push
sbb
icebp
das
mov
aaa
shr
sbb
mov
outsb
xor
sbb
push
int
pop
push
inc
mov
outsb
ret
jp
int
pop
mov
mov
mov
es
mov
sub
mov
inc
add
or
les
mov
stos
push
test
insl
sbbb
push
or
cltd
rorb
mov
insl
sub
sub
jg
jmp
sbb
jnp
and
adc
xchg
mov
pusha
mov
cmp
cmp
js
pop
pushl
dec
shlb
lcall
sbb
sub
rorl
push
mov
inc
push
pop
ret
or
xor
adc
les
cmp
dec
push
sbbl
inc
sub
test
add
inc
pop
adc
inc
push
and
cmp
dec
or
push
sub
pop
or
lea
cmp
jo
push
insl
sbb
fidivl
add
subb
mov
pop
iret
mov
pop
aaa
repnz
mov
orl
in
mov
inc
mov
subb
rorl
cmpsb
psubsb
add
xor
enter
jmp
add
mov
rcl
adc
in
or
push
js
fimuls
cmpsb
cs
inc
dec
lods
or
xlat
test
stos
rclb
sub
addb
sbb
xor
fstl
or
or
cmp
in
and
orl
push
mov
or
iret
lock
cmp
add
shl
cmp
bound
push
ljmp
mov
mov
popa
mov
ficoml
xor
repz
sbb
lcall
inc
push
rorl
mov
sbb
jp
addl
cwtl
push
cwtl
into
orb
or
testb
sub
mov
js
loope
sub
or
inc
adc
mov
cmp
movsb
pop
daa
dec
imul
cmc
sbb
push
mov
mov
mov
jg
adc
or
push
dec
xchg
decl
testb
inc
mov
pop
call
rcl
stos
inc
pushf
mov
rol
psubd
and
outsb
scas
testl
inc
push
rcrl
dec
and
pop
incb
push
jmp
dec
jno
popf
aam
jp
sbb
push
xchg
and
mov
cltd
push
cltd
stc
in
add
or
inc
test
rolb
push
mov
in
sbb
outsl
adc
pop
adc
sub
aam
sbb
test
aad
cmp
in
pop
imul
int
sub
push
enter
test
dec
sbb
xchg
icebp
outsl
stc
js
mov
xor
shlb
ljmp
lock
or
inc
sub
mov
xchg
mov
repz
mov
or
push
rolb
inc
cmpsl
or
roll
sbb
shl
or
pop
adc
jmp
xchg
sub
and
xchg
adc
cli
fs
pusha
sub
sub
rcl
inc
xlat
or
inc
xchg
ljmp
stos
shrb
push
mov
add
shll
bnd
mov
and
or
rclb
inc
mov
cmp
rol
or
cmp
jl
or
les
neg
cmp
sarb
sub
sbb
outsb
sub
inc
mov
orl
fcompl
sub
pusha
adc
lahf
cmp
sahf
sti
adc
shl
jmp
adcb
daa
push
out
mov
lret
das
ss
je
adc
lret
rcrl
loope
cmp
clc
ret
add
add
mov
add
or
les
mov
insl
scas
insl
push
pop
mov
rcrl
or
and
cwtl
sbb
mov
xchg
loopne
gs
cmpsb
sbb
sbb
or
les
addr16
jmp
cmp
mull
rcrl
sbb
xor
sub
andl
mov
add
inc
cmovg
adc
adcb
add
mov
sti
clts
or
mov
ffree
mov
add
adc
push
shll
fisubrs
mov
add
or
sbb
mov
xchg
imul
fisubs
ret
pop
or
cli
sub
iret
push
ret
jo
xchg
hlt
jae
mov
lret
cmp
cld
xchg
clc
rcrl
loopne
shll
add
push
cwtl
cmp
inc
sar
sbb
icebp
push
sbb
push
cmp
push
cmpsb
sahf
pop
xchg
dec
and
push
sbb
jg
cmp
je
mov
push
test
sub
sbb
add
jge
mov
xor
enter
push
xor
push
test
daa
mov
dec
setle
in
scas
inc
outsb
xchg
pop
pop
add
ss
gs
shrb
adc
ret
pop
andl
push
call
mov
and
add
stos
shlb
sbb
ret
sti
sbb
push
push
pop
testb
lea
test
inc
insb
mov
bound
push
frstor
stos
xor
jns
xchg
or
call
pop
add
inc
ljmp
and
xor
loopne
andb
shlb
mov
sahf
rorb
or
clc
ret
ret
add
mov
jo
loopne
mov
push
and
lods
lret
mov
add
inc
mov
loope
bound
cs
ret
xlat
lcall
divb
enter
pop
or
push
cmp
lahf
ljmp
add
cmpsl
shlb
sbb
out
pop
xchg
pop
push
inc
and
xor
aad
push
pop
loopne
das
subb
popa
call
int3
ret
shlb
pop
pushf
ljmp
mov
pop
xchg
fdiv
sbb
or
inc
push
and
jae
ljmp
icebp
cmp
icebp
nop
cmp
add
pop
popf
imulb
jg
mov
push
push
pop
sbb
mov
rorb
mov
mov
add
jge
mov
shr
sbb
scas
je
add
and
test
test
or
leave
lods
sub
mov
cmp
push
add
cmpsb
in
or
je
negl
pushf
sti
icebp
or
add
xchg
pop
in
sub
orl
sbb
mov
xlat
push
ffreep
dec
adc
or
mov
cmp
add
add
push
sbb
cs
push
push
xor
mov
xchg
mov
xchg
lods
push
int
add
xchg
jb
xchg
addl
mov
stos
shrl
popf
sarl
imul
sbb
insb
adc
loop
xor
mov
sbb
lret
adc
pop
sbb
sbb
outsb
push
loope
pop
mov
adc
pop
adc
dec
add
ret
xchg
push
jae
fs
fcmovnu
lea
subb
gs
jne
adc
dec
add
mov
push
sub
inc
push
scas
mov
or
pop
adc
or
or
dec
jno
mov
mov
aad
add
das
jmp
pusha
push
les
push
jg
pop
cmp
cmc
mov
mov
sti
or
loopne
add
cmp
push
pop
lods
fiaddl
js
call
nop
popf
subb
and
enter
push
or
adc
loopne
aad
xchg
mov
jo
sub
lds
rcrb
inc
mov
mov
mov
xor
sub
shrl
push
sub
shll
mov
add
and
negb
xor
lret
fs
add
xchg
mov
add
adc
mov
and
adc
es
or
adc
rorb
in
lret
popf
sub
adc
iret
push
xadd
jmp
xchg
jecxz
ljmp
or
xlat
sbb
out
pop
xor
jmp
cld
mov
cmp
and
add
jmp
jo
ret
call
sub
icebp
lret
xor
bswap
lret
ljmp
jge
addl
and
icebp
add
orl
test
adc
or
xlat
jo
leave
cli
or
arpl
jb
xchg
fsub
push
js
mov
lret
inc
andl
sti
add
iret
inc
push
leave
adc
xchg
mov
imul
pop
faddl
in
test
lcall
push
ret
movb
clc
adc
or
add
push
xor
add
mov
sarl
cmc
adc
sub
imul
pusha
push
icebp
push
sbb
mov
push
mov
mov
mov
mov
sub
cmp
mov
inc
leave
cwtl
or
sbb
pop
mov
mov
insl
jne
push
lock
xor
pop
jg
ret
sbb
inc
int3
cld
mov
add
sub
das
xlat
add
sbb
ljmp
dec
adc
sbb
rcl
cld
mov
jl
leave
dec
xchg
cmp
xor
push
mov
rcll
loopne,pn
and
or
test
jo
adc
xchg
sbb
jecxz
repnz
int3
add
popf
mov
mov
mov
xor
repnz
mov
push
shlb
sbb
adc
adc
inc
mov
mov
rcrl
jp
or
andl
ret
lret
or
subb
and
or
mov
lahf
popa
js
mov
pusha
push
sub
cli
or
jmp
xor
enter
aam
aad
push
loop
xchg
pop
es
push
jge
shlb
test
lcall
std
inc
and
je
into
movb
mov
mov
jp,pn
adc
daa
inc
xor
jle
bound
dec
mov
dec
frstor
movsl
add
sbb
jle
call
call
pop
sbb
call
mov
jmp
mov
mov
add
rclb
and
movsl
mov
sub
and
adc
lret
push
inc
inc
xor
icebp
mov
pop
shlb
cmp
dec
xchg
mov
mov
cld
add
and
pop
dec
bound
cmp
and
add
popa
sub
imul
addb
push
xchg
adcb
mov
enter
xor
shrb
mov
test
add
ret
cmp
add
movsb
or
xor
cmc
push
sbb
mov
push
push
inc
sub
inc
push
lret
mov
loop
or
pop
popf
das
or
shr
fldl
aad
pop
stc
fistl
pop
xchg
adc
lock
xchg
push
add
daa
cmc
pop
xchg
or
jo
lcall
imulb
push
les
andb
sbb
shr
addl
mov
inc
cmp
jb
inc
xchg
lcall
stos
inc
mov
ret
ljmp
inc
dec
bound
lock
push
mov
or
fcmovnb
shlb
test
leave
inc
sub
inc
sbb
mov
pop
ljmp
mov
adc
adc
pop
test
sub
sarl
cmp
push
addr16
nop
sbb
adc
clc
sahf
push
pop
jl
nop
or
xchg
call
out
sbb
sbb
inc
rcrb
sbb
jecxz
pinsrw
mov
in
or
mov
adc
or
adc
mov
adc
push
test
icebp
xor
add
dec
cmc
mov
xchg
push
sbb
faddl
into
test
push
mov
jge
dec
lea
outsl
push
sub
call
push
stc
loope
lods
adc
cwtl
test
dec
inc
loopne
sahf
pop
sbb
mov
adc
and
mov
sub
adc
push
shll
test
ret
push
cmp
jmp
jnp
rol
bound
repnz
mov
add
mov
mov
xchg
mov
lds
inc
int
cwtl
mov
jmp
leave
int3
xlat
push
cmpb
or
lret
push
push
adc
ror
push
repnz
lock
mov
lcall
add
adc
sbb
add
adc
ret
addl
addr16
stc
shll
lods
mov
push
cwtl
inc
scas
mov
jae
adc
popa
test
add
scas
xlat
pop
xchg
mov
fstl
mov
shll
add
shlb
cmc
test
pop
mov
andl
inc
xor
inc
loop
cmp
stc
and
loope
push
xlat
mov
js
je
aad
pop
in
imul
test
and
adc
xchg
icebp
or
dec
adc
cmc
cmp
push
adc
sbbb
add
test
sbb
sub
mov
jo
shrb
mov
add
cmp
push
push
repz
sub
es
scas
push
dec
add
scas
mov
fmull
loope
daa
rcrb
push
pusha
pop
push
xor
inc
xchg
adc
aas
outsl
popa
inc
dec
xorl
push
add
mov
sbb
sub
mov
int3
ret
add
bound
test
inc
add
rcrb
cwtl
pop
pop
leave
pop
xchg
xor
sbb
andl
jnp
xchg
icebp
jno
mov
lahf
call
inc
adc
push
push
or
shrl
fs
adc
add
dec
negl
push
jb
cmpsb
test
or
mov
call
dec
rcrl
in
inc
lea
sbb
int
dec
cmc
adc
adc
add
stc
movsl
adc
scas
mov
inc
xor
fwait
adc
sbb
xor
adc
out
inc
addb
jmp
add
lea
lret
add
ljmp
pusha
testb
shrb
mov
cmp
xchg
iret
iret
add
repnz
push
mov
pop
aad
aam
outsl
cmp
push
addr16
cltd
pop
aaa
pop
aam
jp
push
push
adc
or
push
cmpl
push
into
mov
bound
clc
sbb
push
mov
inc
fstl
xor
jbe
outsl
mov
loop
mov
icebp
testb
mov
add
inc
loop
xor
stos
clc
and
cmp
mov
mov
out
xor
pop
inc
add
stc
adc
cwtl
and
test
inc
insl
push
mov
aad
add
jo
mov
xchg
jmp
mov
lret
lret
add
sub
push
push
adc
nop
inc
sbb
sbb
stos
or
inc
xor
push
jg
cmp
jl
adc
inc
mov
in
add
add
push
xchg
add
xchg
pop
push
or
icebp
mov
adc
mov
push
push
push
fs
inc
push
movaps
sub
mov
mov
movq
pop
loopne
addb
push
rorb
fwait
add
push
push
xorps
sbb
add
fsubl
or
pop
sbbb
push
dec
andps
into
pusha
push
push
xlat
sbb
fdivrs
sub
std
sub
mov
lret
ret
inc
movl
rclb
cmp
imul
lea
adc
filds
or
rclb
loope
adc
lds
mov
xor
adc
testb
push
lods
lahf
negb
lcall
cmp
or
add
and
inc
leave
push
das
bound
popf
enter
scas
mov
mov
adc
lcall
aas
imul
js
repz
nop
sub
or
rcll
inc
inc
lea
jne
add
xchg
jmp
or
xor
inc
xor
adc
push
orb
dec
ret
pop
pslld
pop
popa
sysret
adc
movsb
cli
adc
sub
cmp
sub
or
push
push
rolb
test
std
xor
addb
add
popf
add
or
cs
push
repnz
sub
push
or
sub
ss
or
into
push
rcl
popa
call
loop
mov
sbb
pop
stos
daa
adc
scas
dec
mov
repnz
mov
je
jmp
xor
xor
lgs
mov
stc
add
dec
and
in
dec
pushw
outsl
jmp
adc
mov
push
orb
shrb
sub
sbb
sbb
pop
sbb
in
int
mov
arpl
push
cmp
adc
push
xchg
mov
fldl
push
or
repz
mov
inc
sub
test
call
cmpsl
mov
daa
call
in
push
ds
std
mov
cmpsl
sub
ljmp
inc
pshufw
mov
pop
mov
add
sub
mov
inc
mov
sbb
jne
es
or
xor
jb
mov
mov
insl
cmp
add
mov
fsts
pop
test
cmp
push
test
or
icebp
lret
jo
mov
sub
mov
jno
adc
or
shl
mov
or
aad
rcrl
xor
out
push
pop
add
push
rcll
add
mov
in
pop
sar
inc
jne
jne
add
call
and
insl
mov
dec
adc
adc
fcmovnbe
mov
js
insb
ret
mov
and
cwtl
push
aam
das
or
into
xor
or
cli
insl
test
add
mov
loope
notb
rolb
push
fucomp
push
or
push
enter
lds
adc
rcrl
inc
rol
pop
sbb
push
ret
into
repnz
sub
ret
test
test
add
lods
add
jp
jp
sbb
and
dec
push
je
inc
scas
adc
pop
sbb
and
add
pop
sbb
xor
test
inc
lcall
xor
stc
into
scas
push
sbb
mov
adc
dec
mov
scas
jo
je
ljmp
lds
push
or
sbb
push
add
sbb
add
mov
mov
xchg
jl
sub
lods
clc
lret
mov
push
add
push
movl
sub
add
sbb
incb
or
push
jo
pop
xor
out
mov
push
add
psubusb
cld
sarb
repnz
sbb
lods
test
or
in
xchg
std
sbb
shlb
clc
inc
mov
cmp
movsl
push
push
or
mov
and
dec
les
bound
aad
sub
or
pushf
xchg
ljmp
push
test
rcll
mov
test
lret
or
adc
mov
adc
cmpsb
cmp
push
cltd
sbb
pop
aam
inc
and
push
sarb
dec
pushf
notl
loopne
iret
dec
cmp
pop
std
push
test
pop
push
push
push
jo
sub
popa
lret
or
pusha
rorl
and
ret
cwtl
jb
aam
adc
push
xor
icebp
xchg
push
sbb
push
js
test
push
lahf
mov
xchg
jl
into
jbe
jne
mov
or
cwtl
data16
mov
mov
fiaddl
inc
cwtl
or
popa
push
lock
fadd
in
lock
mov
orb
movsl
stos
mulb
lock
stos
rcl
or
push
popa
xlat
push
mov
sub
int3
add
and
cmpsb
push
inc
icebp
sbb
add
push
or
ljmp
jecxz
mov
xor
sbb
out
fcmove
jo
shl
into
push
sbb
cmp
pop
leave
inc
sbb
add
cmpps
xchg
int
movsb
stos
loopne
push
test
cmp
mov
loopne
mov
dec
push
repnz
mov
out
mov
inc
mov
push
aaa
adc
push
jnp
cmp
sub
sbb
sub
ds
fnsave
adc
je
push
add
adc
or
lods
scas
jg
enter
adc
xor
adcb
test
mov
insb
or
add
push
cmp
push
pop
cwtl
mov
negb
rorb
push
mov
loop
add
and
pop
mov
dec
pop
inc
push
add
test
or
clc
xlat
sub
jge
pop
sbb
sub
shl
inc
xchg
mov
jne
ret
adc
adc
dec
xchg
cmp
push
fbstp
sub
cmp
sbb
iret
xlat
enter
fimull
push
lcall
movsb
adc
add
pop
movb
mov
test
inc
and
cmp
cwtl
cmp
andl
push
xchg
mov
mov
and
sbb
je
lret
test
lcall
sbb
enter
in
dec
inc
cmp
test
pop
icebp
or
xorb
add
mov
sbb
lcall
aam
pusha
stos
lds
push
scas
push
stc
fcomi
mov
sbb
lret
or
xchg
stos
cmp
add
mov
and
jo
inc
mov
mov
lods
jb
mov
rorl
fdivl
or
add
sub
jo
mov
push
jne
jb
sbb
adc
cwtl
add
fiaddl
into
xor
dec
push
mov
adc
das
add
and
ds
add
decb
insb
shrb
icebp
or
loopne
sbb
or
xchg
sbb
cli
rcll
adc
mov
inc
cmp
add
adcl
inc
leave
rcrl
push
jle
sbb
lds
addr16
rolb
es
popa
cmc
ja
imull
lahf
xchg
roll
mov
lcall
test
icebp
mov
mov
add
loopne
mov
loope
sub
sub
sub
fisttps
adc
xchg
fnstcw
push
mov
or
xchg
add
mov
or
xor
repnz
hlt
cmpsl
push
xchg
add
cmc
add
call
pusha
cli
push
test
fbstp
sbb
push
pop
or
or
or
add
jo
add
dec
popf
addb
rcr
mov
into
adcb
inc
add
fwait
mov
jae
add
into
xorl
test
out
roll
fadds
mov
testb
adcb
or
test
ficoms
add
shlb
loope
imul
or
mov
cmp
cli
call
ljmp
lcall
subb
pusha
call
xchg
jb
sar
sbbl
sahf
sub
aaa
sub
jg
mov
push
mov
lret
and
jo
jp
mov
add
mov
xchg
and
les
movb
adc
adc
lea
rcll
inc
je
push
movsl
jl
rcrb
lods
jno
shl
add
into
jle
notb
call
inc
movsb
xlat
and
sub
or
push
or
push
lods
sbb
les
mov
rolb
and
sub
push
push
adc
jno
push
mov
loopne
sbb
or
test
sbb
add
roll
repnz
aas
inc
mov
aam
sbb
inc
int
mull
xor
adc
js
or
jne
enter
pop
sub
inc
sbb
mov
je
dec
fcoms
cmp
push
lret
out
jne
movsl
sub
stc
mov
addr16
mov
adc
lock
lock
pop
xor
xor
iret
int3
xor
in
xchg
sbb
jnp
xor
inc
roll
push
into
out
adc
pusha
push
fcmovu
stos
jne
lods
hlt
dec
or
clc
lret
jp
jo
fs
lea
in
popa
or
inc
mov
sub
loope
stc
inc
xchg
or
out
jp
scas
lret
cmp
call
ja,pt
jecxz
and
push
push
cwtl
pop
add
add
and
test
rolb
or
pop
sbbb
andb
push
mov
out
or
stos
sub
push
ljmp
add
push
cmp
insb
xchg
lret
int3
mov
jle
ret
xlat
pop
xchg
in
cmpsl
sub
mov
mov
push
das
push
rol
inc
shlb
sub
lcall
add
pop
sub
sub
add
call
and
stos
add
pop
cmpsb
and
or
sbb
mov
and
or
loopne
xlat
jb
scas
sub
push
mov
push
push
sbb
loop
jecxz
testb
mov
jne
ljmp
inc
hlt
adc
mov
mov
aad
clc
cmp
popa
movsb
push
mov
fwait
add
adcb
adc
movsb
cs
dec
xchg
scas
mov
inc
subl
stos
lock
inc
loope
add
xor
loopne
push
mov
shrl
lcall
and
xchg
or
push
push
cltd
pop
jns
stos
adc
cs
inc
dec
pusha
sbb
inc
scas
pop
or
lret
add
sub
inc
lret
cmp
mov
testb
icebp
inc
inc
icebp
push
pop
xchg
pop
sbb
fcmovb
icebp
mov
enter
push
stc
adc
adc
cs
mov
stc
aam
leave
lcall
and
js
and
add
jecxz
mov
rolb
add
jmp
in
shlb
add
rclb
xchg
cmp
mov
xor
adc
ja
xor
inc
insb
aad
jmp
test
clc
and
add
pop
sbb
cltd
push
and
push
in
cwtl
push
js
andb
pop
into
dec
cmpb
mov
and
add
nop
mov
scas
sbb
push
mov
sbb
jo
push
popf
push
pop
sbb
push
sub
adc
mov
mov
mov
test
push
int
rclb
out
daa
mov
xor
push
outsl
cli
loop
inc
stos
pop
add
leave
clc
mov
or
data16
insb
aas
test
sbb
testb
inc
add
les
push
pushf
rolb
enter
inc
add
rclb
loopne
xchg
sub
cltd
sarl
psubb
imul
mov
lret
pop
mov
xor
cmp
sub
mov
xchg
loope
jmp
loop
xor
pushf
subb
push
push
and
mov
or
sbb
and
add
jecxz
adc
mov
repnz
rcrb
mov
add
pop
jmp
dec
sub
mov
mov
stos
or
bound
shll
dec
pop
aam
sub
add
mov
add
or
in
add
cmp
push
or
push
sub
or
out
pop
mov
and
and
jb
lcall
iret
adc
out
or
cmp
shlb
or
pusha
pusha
insl
fists
push
gs
push
shlb
rorb
push
mov
ljmp
push
or
push
mov
je
xor
cmpsb
xchg
rorb
sarb
add
sub
data16
push
add
push
rcrb
cmpsb
push
lret
jbe
ret
shl
push
loopne
imul
in
outsb
shlb
mov
rolb
and
xchg
sub
pop
or
call
cmc
add
clc
inc
or
scas
bound
push
xor
loop
inc
xchg
add
cmp
js
adc
aad
and
sbb
repz
add
push
adc
int3
push
leave
stos
leave
setbe
adc
pushf
aam
push
subl
or
push
and
add
sub
vxorps
orb
mov
jo
test
rorb
out
rcl
mov
push
add
push
daa
or
and
pop
lods
pop
xor
mov
add
bsr
xor
mov
je
xchg
and
mov
push
stos
fisubrl
out
mov
scas
pop
and
mov
sub
loope
push
pop
pop
shl
add
pusha
inc
inc
mov
bound
enterw
sub
add
in
mov
sub
inc
femms
xchg
cmpsb
jbe
mov
cli
pop
rclb
xchg
test
pop
cmp
sub
pop
inc
adc
xchg
pop
add
sbb
or
sbb
xor
mov
adc
ret
test
test
mov
adc
cmc
mov
rcll
adc
cmp
insl
aam
in
push
push
mov
pop
jecxz
cli
mov
cwtl
jo
ds
xchg
push
push
pop
mov
dec
mov
xchg
icebp
es
cmp
cmp
pusha
mov
jmp
mov
jae
repz
push
xor
enter
test
sub
sbb
mov
push
orb
xchg
rol
and
mov
dec
in
insl
and
cs
lock
call
adc
sbb
cli
push
test
inc
mov
adc
insl
roll
mov
or
sub
pop
jns
in
ret
push
pusha
jg
clc
mov
inc
adc
or
sub
pop
xchg
adc
aam
or
mov
mov
bound
out
add
xor
adc
test
sub
xor
aad
jb
mov
xor
sbb
or
out
add
and
inc
popf
lds
or
adc
sub
push
jnp
orb
or
sbb
ljmp
inc
out
pop
sbb
sbb
sahf
mov
add
push
xor
jmp
lret
rorb
mov
push
xchg
push
adc
sbb
cwtl
leave
add
push
movb
stos
jge
idivb
popa
sub
loopne
sbb
push
lahf
roll
pusha
mov
sahf
enter
test
repz
cltd
movsl
add
inc
pop
ljmp
push
xor
insb
push
out
inc
inc
js
pop
or
push
mov
adc
xor
mov
pop
xchg
pop
loope
add
push
or
mov
cmp
dec
or
xor
mov
and
cmp
add
loopne
inc
cmp
stos
xchg
shrl
data16
push
adc
push
enter
inc
insl
push
mov
add
bound
rorb
dec
aas
mov
add
adc
inc
in
test
add
pop
sbb
leave
les
mov
or
test
jmp
xor
rorb
add
and
dec
mov
rol
push
or
push
cmp
inc
repnz
test
inc
in
xor
les
roll
mov
cmp
dec
xor
imulb
lret
int3
mov
or
push
dec
daa
adc
jmp
xor
sbb
adc
cwtl
aam
pop
out
shl
les
xchg
sbb
clc
lock
pop
ljmp
nop
adc
sub
fwait
shl
xchg
pop
pop
arpl
ret
jb
dec
cmp
sbb
jo
sub
sbb
sbb
cmp
sub
add
adc
rolb
test
cmp
js
test
or
je
mov
and
faddl
sbb
mov
ret
xor
adc
lea
cmp
sub
stos
xchg
ret
sbb
rcrb
notb
jmp
cmp
push
fimull
and
add
sbb
mov
out
sbb
je
sahf
test
nopl
push
cmp
mov
push
std
adc
imul
push
add
mov
lock
nop
xor
adc
adc
or
ret
and
lret
ficomps
add
mov
std
cltd
sub
vmulpd
imul
dec
shll
sbb
jl
and
std
add
adc
xor
push
sahf
push
or
bound
lahf
add
ds
add
lar
pop
ja
add
push
sbb
dec
jl
dec
xor
or
mov
cmpsl
or
sbb
int3
add
xchg
icebp
xchg
sbb
or
push
mov
aas
dec
sub
or
iret
popf
push
adc
call
dec
push
cmpsl
out
jo
mov
in
popa
sbb
shlb
and
xchg
inc
in
and
or
inc
add
cmp
add
aam
pusha
call
rclb
punpckhdq
push
pop
inc
add
sbb
mov
int
sub
adc
adc
stos
call
mov
push
test
lds
lcall
out
push
xchg
inc
push
add
or
push
jne
js
clc
test
cli
inc
aaa
adc
mov
arpl
popa
arpl
test
and
cmp
adc
mov
js
dec
add
cmp
dec
push
xor
or
imul
pop
mov
rclb
iret
and
and
pop
mov
pop
add
push
out
lcall
ret
call
daa
loop
dec
stc
or
add
add
loopne
push
or
sub
jo
movsb
xchg
gs
lds
push
jnp
into
shlb
push
and
add
or
cmp
adc
add
in
push
adc
adc
pop
pop
push
xor
aam
lods
js
push
sarb
cmp
into
pop
adc
push
adc
in
out
push
stos
jne
scas
lock
sbbb
pushf
add
and
or
enter
roll
add
popl
cs
push
pop
pop
push
fwait
jl
mov
mov
mov
pop
jl
sub
pop
sbb
rcrb
mov
sbb
sub
mov
cmp
rol
movsl
xchg
add
push
insb
dec
in
jecxz
or
jb
scas
add
pop
ret
pop
cltd
cwtl
das
sub
adcb
sar
fwait
roll
lcall
mov
sub
adcb
sub
ljmp
and
sbb
jmp
stos
outsb
dec
push
pop
or
and
mov
jb
adc
idiv
enter
popf
retw
mov
push
inc
fisttps
add
mov
repnz
cltd
into
rorl
adc
mov
shll
and
add
xor
sbb
sbb
lret
or
shl
jae
addr16
loope
jp
or
xlat
adc
js
mov
or
dec
cmp
sub
sbb
adc
jo
inc
push
insb
shll
in
pop
adc
jo
icebp
jo
push
pop
add
xchg
mov
mov
adc
add
xchg
popa
stos
sbb
test
push
mov
xlat
sub
out
push
inc
popa
or
add
mov
add
sbb
sbb
inc
sbb
sbb
les
daa
ja
repnz
mov
jo
bound
in
mov
jmp
xor
push
icebp
outsl
jnp
and
test
mov
push
pop
and
jmp
fsubs
adc
negl
adc
jne
add
icebp
or
mov
loopne
add
loopne
cmp
cmpsl
and
push
push
push
add
mov
inc
push
es
dec
xchg
subl
push
push
movsb
jbe
in
add
or
inc
ds
shrl
stos
jbe
mov
or
push
pop
and
pop
inc
or
pop
inc
into
sahf
popf
jle
mov
adc
jo
or
jnp
test
test
xor
mov
inc
int3
jns
lock
popa
clc
sbb
mov
cmpsl
push
mov
sbb
dec
stos
ret
gs
icebp
or
mov
and
fs
jns
xchg
scas
mov
add
js
add
iret
sbb
test
arpl
xor
add
daa
rcrl
loopne
outsb
adc
into
lods
pop
adcb
sbb
xchg
bound
stos
mov
pop
lds
xchg
test
je
shrl
into
rcr
dec
call
sti
inc
sub
add
roll
mov
push
push
mov
out
mov
pop
ficomps
pop
rclb
clc
or
pop
pop
mov
cmp
fiaddl
dec
mov
xchg
sbb
cli
call
add
daa
add
push
sbb
push
xchg
nop
das
sahf
or
das
in
adc
sub
stc
scas
xchg
vfmadd213ps
adc
sbb
or
data16
inc
mov
inc
push
sbb
or
adc
mov
pop
aad
pop
dec
push
lods
mov
popa
and
and
cwtl
add
sub
push
fists
inc
sub
and
inc
sbb
adc
divl
push
insl
in
scas
and
mov
subb
push
bound
clc
xchg
test
and
dec
pop
push
add
pop
pop
adc
mov
and
mov
mov
dec
sbb
mov
int3
sub
push
xchg
dec
dec
in
insb
push
bound
aaa
out
push
pop
jp
inc
cmpsb
sub
sbb
enter
sbb
clc
xchg
sub
mov
adcl
xor
jge
xor
sbb
js
or
mov
adc
es
loopne
sbb
ret
add
push
out
mov
daa
inc
mov
inc
sbb
pop
push
add
inc
xor
stos
dec
push
ljmp
dec
iret
sbb
push
xor
sbb
sub
xchg
fldl
inc
mov
mov
rolb
pop
addb
or
or
dec
test
push
mov
sbb
inc
stos
add
mov
lcall
xchg
sub
push
and
mov
mov
test
and
ljmp
push
mov
cwtl
dec
xor
jl
sub
lods
pop
inc
mov
mov
je
repnz
inc
rcll
add
cmp
inc
xor
rolb
pop
sbb
shll
test
jne
and
fcompl
adc
ret
mov
add
jb
aam
ja
xchg
ljmp
push
add
dec
add
push
rolb
jno
mov
jmp
inc
or
push
stos
add
xor
sbb
mov
mov
jne
ret
pop
mov
pusha
int
loope
add
pop
sbb
movl
xor
push
aad
and
add
adc
cmpsb
sbb
rol
shll
inc
ret
mov
add
push
loop
or
rcll
enter
das
mov
sbb
jae
sbb
shll
jne
bound
sahf
daa
mov
rorl
lret
mov
rclb
leave
lret
pusha
pop
aam
lret
mov
test
push
mov
push
movsb
xchg
push
push
dec
inc
inc
sub
mov
sbb
add
xor
adc
orb
pop
test
out
pushf
cmpb
jl
leave
add
loop
mov
inc
xchg
jle
pop
shlb
icebp
aam
jo
push
push
lods
test
outsb
adc
aam
aam
lcall
inc
popa
stos
push
sbbb
iret
fildll
push
sbb
push
stos
leave
iret
push
pop
cltd
bound
and
into
movl
cs
subb
xor
mov
adc
incb
push
cmc
outsb
cwtl
clc
adc
adc
xchg
jmp
jo
or
ret
push
mov
jno
test
xchg
ret
push
or
rcll
les
mov
add
push
andl
fst
or
add
cmp
inc
cmpsb
cmp
jmp
or
int
sub
xor
pop
adc
adc
sbb
add
addl
push
shlb
or
ds
rcll
mov
fists
scas
and
adc
sub
and
popf
call
push
and
cmp
or
pusha
shrl
push
arpl
dec
xchg
push
hlt
aad
adc
rcrl
adc
inc
xor
pop
adc
or
push
cli
stc
movzbl
nop
mov
inc
or
out
lcall
inc
cltd
decl
push
cmpsl
add
mov
add
xor
or
inc
xor
mov
mov
data16
in
fiaddl
or
add
test
mov
stos
xor
mov
and
xor
popa
pop
addb
add
lea
mov
inc
mov
push
sbb
es
dec
scas
fs
lret
add
sbbl
inc
xlat
mov
test
sbb
pop
les
mov
push
sub
je
leave
ds
cli
cltd
and
push
inc
mov
adc
add
cs
out
stos
cmp
or
sbb
movsb
cs
adc
sbbb
xlat
xor
testb
inc
push
gs
test
add
push
jno
enter
sbb
xor
lds
add
inc
cmp
or
out
scas
stos
inc
mov
add
inc
insl
add
fs
xor
sub
xchg
rcr
mov
push
add
movsl
push
jb
cmp
aam
pop
ret
movb
leave
add
lock
js
mov
pushf
add
mov
add
add
sbb
test
inc
ud0
cmp
cmp
shrl
rcll
pop
jnp
stos
fwait
rep
lret
es
clc
add
movsl
scas
add
sub
sub
fnsave
rol
add
inc
dec
and
out
sbb
sbb
mov
or
bsf
adc
push
lods
incb
bound
add
popa
and
repnz
aam
scas
adc
sbb
out
dec
adc
jbe
jnp
aad
sbb
out
pop
jge
cmpsb
and
push
sub
mov
subl
jb
stos
popa
rcrl
stc
or
fcoml
cmp
jo
loop
or
cs
test
es
and
xchg
stos
inc
mov
jo
loopne
popa
mov
das
pusha
inc
scas
and
movb
arpl
les
dec
repnz
adc
dec
dec
add
inc
rorb
fsubrl
mov
outsl
leave
lret
cmp
lret
xor
or
mov
cmp
or
testl
mov
sub
inc
mov
fadd
add
pusha
mov
faddl
xor
jo
mov
sbb
lods
ljmp
push
sub
cmp
mov
cwtl
sub
in
jp
lcall
xchg
and
in
fisttpll
jo,pt
icebp
testb
fs
fwait
addb
and
test
fcom
dec
add
push
pop
rcr
sub
scas
fst
movb
adc
adc
inc
mov
jle
mov
inc
push
dec
push
xchg
stos
sbb
adc
fadds
cli
add
push
aam
dec
ficoml
add
mov
and
pop
lods
pop
push
adc
cltd
pop
or
outsl
inc
aad
daa
ja
or
mov
jmp
adc
push
mov
cmpsb
dec
lea
adc
int
ret
fcomps
push
xchg
add
push
mov
mov
xor
or
cltd
or
sbb
pushf
push
ret
or
test
pop
adc
subb
add
jbe
cmpsb
inc
in
loope
nop
andl
mov
xor
add
sub
jb
repz
inc
or
adc
inc
rcll
fadds
test
push
add
or
sub
js
stos
xor
inc
xor
sbb
jge
xor
adc
and
movb
arpl
stos
add
pop
addr16
mov
mov
xor
call
cmpl
push
fisubl
cmp
out
sbb
or
add
sbb
jmp
mov
add
ret
mov
dec
xor
push
sub
adc
dec
bound
or
sbb
sahf
shrl
addb
push
xchg
lods
sub
or
jle
jecxz
orb
ret
push
push
sub
testb
js
jne
shl
std
bound
jo
into
addb
xchg
lods
sub
hlt
add
das
jo
rorl
and
aam
rolb
cltd
or
cli
and
and
faddl
sbb
dec
loopne
add
pop
inc
stos
pop
pusha
add
out
or
mov
mov
stos
pop
cwtl
lret
mov
xor
cs
call
test
call
adc
jae
xchg
sub
cmp
loopne
xchg
and
push
test
mov
mov
mov
xchg
xor
mov
sub
aam
adc
adc
stos
pop
ret
test
pop
push
xchg
ret
pop
adc
push
lods
and
mov
mov
add
lods
or
or
adc
push
rorb
mov
xor
mov
ss
stos
sub
daa
call
mov
add
call
inc
lea
push
pop
push
repz
push
jns
mov
mov
pop
xor
xchg
test
mov
dec
push
test
mov
and
mov
adc
push
jae
xchg
mov
jno
adc
push
adc
pop
ret
add
pop
xchg
jns
cmp
xor
push
xlat
mov
dec
mov
sub
inc
jge
mov
mov
dec
fdivrp
sbb
mov
adc
push
and
ud2
movsl
mov
or
mov
fiadds
nop
dec
rcr
jno
sbb
add
or
out
mov
shrb
and
push
ret
fldl
out
pop
es
jp
push
outsb
sbb
jae
pop
test
push
cmp
shr
sub
pushf
mov
sub
mov
or
hlt
enter
inc
mov
pushf
fisttps
aaa
push
mov
adc
pop
mov
test
orb
sbb
lcall
rcll
jmp
mov
or
sub
and
xchg
loop
aaa
ficoms
daa
test
leave
xchg
push
push
xlat
cmpb
mov
pop
jb
sbb
cmp
dec
push
pop
or
adc
les
cld
xor
push
add
xor
push
adc
jle
enter
pop
cmp
fidivrl
jmp
sbb
rclb
jge
fwait
xchg
loopne
and
lods
push
cmpb
rolb
cli
jnp
pusha
ret
inc
xchg
add
push
nop
push
mov
rcll
loopne
out
adc
dec
aad
adc
push
vcvtsi2ssl
mov
adc
sahf
sub
sarl
push
test
cwtl
sub
fprem1
adc
sub
lods
int
mov
andb
sub
hlt
adc
mov
pop
sub
mov
xlat
stos
adc
and
lea
icebp
movsl
or
pop
and
aaa
in
aaa
or
adc
aad
loop
jne
push
cmp
adc
ret
mov
jo
pop
icebp
push
xchg
xor
lret
aam
outsl
inc
movsb
adc
into
rcr
scas
addr16
pusha
daa
test
cld
inc
nop
inc
xor
ljmp
repnz
scas
cmovae
mov
arpl
mov
lock
adc
out
mov
inc
xchg
cmp
rolb
dec
pop
icebp
scas
lret
rclb
sarb
push
adc
enter
add
addr16
loopne
std
call
shl
gs
mov
pop
loope
insl
bound
dec
xchg
mov
xor
gs
ljmp
xchg
mov
rclb
adc
rorb
jo
xchg
sub
inc
pop
push
call
and
hlt
mov
inc
shrb
enter
xor
stc
insb
sub
xchg
jmp
or
mull
stos
cwtl
loope
jno
sbbb
mov
adc
or
test
mov
adc
pop
mov
sbb
into
jle
pop
lock
adc
ret
push
push
test
orb
sbb
adc
adc
jmp
add
orb
cmp
out
push
loopne
push
adc
push
test
push
je
pop
or
sti
or
cmp
mov
and
imul
insl
je
outsb
out
lock
aad
test
daa
or
or
or
testl
shr
xor
and
sub
loopne
cmp
push
inc
pop
aam
aas
push
cltd
repnz
fdivs
fnstcw
inc
mov
rclb
out
add
mov
jle
adc
and
sar
add
sub
or
mov
inc
movsb
and
dec
fwait
xchg
rorl
add
xor
andl
mov
iret
or
lds
inc
sub
imul
popa
or
pop
push
sbbl
add
sbbb
push
jmp
or
sahf
enter
adc
stos
dec
mov
xchg
push
inc
add
or
xor
or
push
cmpsb
push
jne
push
push
jae
pop
mov
adc
loope
cmpb
adc
fildl
dec
jp
es
mov
push
rclb
adc
int3
stos
sub
rorb
adc
into
cmp
xchg
loopne
add
aam
ficompl
or
lds
xlat
sbb
test
xlat
push
mulb
xchg
mov
dec
lahf
imul
sub
sbb
daa
lock
mov
push
sbb
add
cmp
mov
push
dec
push
and
cmp
lret
lcall
or
loopne
cmpsl
push
incb
cwtl
push
arpl
adc
cmp
add
or
cmc
sbb
addb
enter
adc
shr
adc
adc
call
cld
mov
pushf
js
push
pushf
add
add
push
ljmp
push
dec
ficoml
int
lods
xchg
inc
rcrb
pop
int3
add
push
ljmp
xchg
adc
xchg
cmp
adc
pop
mov
popf
js
jnp
test
cwtl
sub
rcll
andl
rdpmc
push
or
in
repz
xor
ss
je
clc
decl
inc
ljmp
popf
pop
pop
push
lock
jmp
pop
xorl
sbbb
jecxz
mov
leave
cmp
sar
lock
orb
cmc
mov
adc
icebp
and
cmpsl
xor
cmpl
sysret
sub
inc
xchg
sub
popf
sub
inc
das
or
sbb
jae
push
or
out
lret
addl
mov
and
sub
jl
sub
sbb
sbb
out
sbb
cmp
and
arpl
adc
aam
mov
or
out
lret
lock
adc
loop
fwait
subb
pop
xchg
les
mov
dec
push
lcall
mov
or
push
mov
testl
sbb
scas
adcb
push
sub
adc
mov
cmp
add
add
pop
add
sbb
xlat
add
roll
add
lret
add
clc
jae
sbb
outsl
dec
call
pusha
ror
push
pop
xor
mov
sbb
dec
jne
das
inc
mov
inc
push
mov
sbb
sbb
jo
jnp
xor
push
or
adc
addl
lock
jnp
mov
xchg
and
push
push
cmpsb
mov
rolb
jge
pop
ds
cwtl
lahf
stos
addl
adc
add
pop
into
imul
adc
inc
xorb
int3
pop
shrb
push
dec
mov
jne
pop
int
rcrb
addl
clc
and
loope
lock
push
jno
mov
cmp
dec
jp
adcb
xchg
adc
andb
xchg
lret
mov
push
mov
sub
adc
or
jp
daa
call
sub
fcompl
or
dec
les
xchg
adc
lea
add
cmpl
mov
add
cmpsb
sbb
pop
je
sbb
or
sbbl
xor
adc
pop
loopne
call
cwtl
push
inc
dec
add
cli
out
add
sbb
imul
push
fisttpll
or
popf
and
push
and
push
xor
mov
sbb
cmpsb
sub
ret
out
pop
xchg
loope
ljmp
mov
and
idivb
push
adcl
push
jge
mov
jbe
ljmp
rolb
xchg
xlat
sbb
cmp
mov
mov
test
sbb
sbb
adc
repnz
inc
testb
into
push
roll
xor
outsb
icebp
jb
bound
pop
call
cmpsl
scas
lcall
insl
shrb
je
mov
pop
adc
xchg
xchg
or
lcall
mov
movsl
or
mov
out
sbb
xor
inc
mov
adcb
cli
ror
test
mov
jo
roll
dec
push
sarb
add
dec
jbe
lock
push
add
rolb
or
leave
pop
stc
adc
outsb
lock
ljmp
xchg
sub
add
aam
data16
outsl
push
in
dec
es
fucomp
mov
xchg
imul
cli
sub
mov
push
mov
ret
ficompl
add
sbb
add
cmp
inc
xor
pop
loope
xchg
adc
jge
lods
shrb
fwait
out
add
mov
mov
dec
sarb
fs
rcrl
lcall
xchg
lods
ja
cmp
dec
push
mov
sbb
dec
mov
sub
adc
fs
mov
pusha
mov
jmp
rcll
cmpb
push
adcl
andl
cs
push
inc
xchg
jne
mov
mull
test
jg
sbb
adc
adc
jo
xchg
add
roll
xchg
mov
rclb
in
xchg
lds
add
mov
mov
push
mov
in
ss
shlb
inc
ret
lods
xchg
jmp
les
and
cmpsb
add
adc
dec
push
in
dec
adc
pop
lods
or
es
inc
xor
jge
mov
or
and
sub
sub
jae
add
pop
sub
push
mov
mov
jl
xor
sub
mov
inc
sbb
adc
cwtl
nop
mov
push
push
push
loopne
in
ret
daa
test
adc
push
mov
jb
xchg
mov
sbb
xchg
loop
andl
cmp
ret
test
adc
xchg
pop
push
push
fs
or
je
push
jmp
push
out
jne
aam
in
lcall
lock
pop
add
cmp
shr
inc
adc
or
and
and
sbb
xorb
pop
pop
xchg
pop
pop
mov
or
daa
adc
push
push
add
and
lds
pop
or
sbb
test
loopne
gs
scas
push
loopne
rcrl
ljmp
add
mov
rcl
add
xor
add
sub
aas
cli
sbb
or
aam
gs
xor
adc
into
mov
push
rclb
jbe
mov
ja
pop
xor
sbb
loope
mov
xchg
outsb
cmp
mov
out
test
mov
ds
add
cltd
sub
mov
jmp
stos
bound
in
or
jb
or
dec
and
push
adc
stos
xchg
push
cmpsl
fnstsw
adc
adc
add
mov
test
mov
test
test
jg
loopne
add
xchg
adc
aad
or
pop
or
adc
mov
int
sbb
notb
sub
pop
mov
repnz
rcl
leave
leave
fstl
add
or
into
push
mov
inc
test
push
rorb
adc
loop
inc
dec
pop
mov
andb
ret
push
mov
fcoml
and
sbbb
push
and
mov
insb
sub
imulb
dec
adc
cmp
or
xor
fbstp
cs
sahf
mov
push
in
dec
popf
js
or
aam
mull
pusha
push
flds
je
scas
sbb
insl
add
notl
shrb
jge
xchg
ja
mov
push
loopne
cmpsb
enter
inc
sbb
stos
sbb
fildl
loop
popa
push
inc
mov
ja
rol
inc
pusha
mov
push
test
mov
xchg
jnp
inc
dec
push
out
pop
ret
cltd
dec
sbb
or
jle
xor
movb
pop
pop
mov
inc
mov
xor
orb
hlt
adc
inc
out
jge
add
enter
mov
pop
int3
rclb
lds
call
aad
dec
js
repnz
imul
mov
pop
popf
lret
push
push
stos
sub
xor
enter
add
test
out
adc
mov
sbb
dec
data16
stos
jl
mov
jmp
insb
std
shll
fucom
loopne
pushf
sub
jle
clc
add
xor
push
rcrb
movsb
sbb
xchg
mov
and
rcrb
leave
ss
add
add
hlt
fbld
cli
pop
ret
cmp
mov
mov
add
adc
add
sbb
mov
rcll
dec
mov
popa
mov
pop
std
jb
xor
enter
ret
popf
jb
mov
mov
xchg
mov
movb
sbb
xchg
mov
bswap
insb
pop
xchg
jno
mov
test
adc
push
rorb
pminsw
rcrl
adc
sbb
and
mov
fcoml
mov
jb
xor
movsb
hlt
and
add
adc
es
and
in
add
ret
dec
adc
pusha
pop
roll
adc
inc
out
xorb
leave
jecxz
icebp
cmp
jo
pushf
mov
lods
mov
or
rcl
bswap
rcrl
cmpb
sub
lret
or
test
sbb
push
xchg
add
test
test
stos
sti
cmp
fxch
sbb
dec
adc
lock
pop
fchs
sbb
sbb
inc
subb
ljmp
dec
mov
xor
sbb
or
cwtl
jo
adcl
int
add
nop
cmp
rorb
nop/reserved
inc
and
cmp
rorl
push
lds
insl
int3
pop
mov
cmpsb
pusha
addl
or
pop
shlb
mov
icebp
sub
sbb
push
popa
push
or
push
rcrl
xor
add
clc
aam
add
sarl
mov
jp
push
and
push
add
push
mov
test
movb
subb
push
int3
dec
incb
dec
mov
adc
push
adcl
packuswb
and
ficompl
adc
xchg
lods
sbb
fimull
sub
lret
push
push
rcl
ds
push
sti
stos
mov
sbb
push
ljmp
in
outsb
jae
ljmp
cmp
or
and
mov
ret
idiv
pop
addl
or
test
push
aas
push
inc
push
sbb
or
lods
jo
inc
fwait
cmpsl
cli
push
invd
adc
mov
push
sbb
dec
shlb
push
sub
adc
int
adc
mov
ret
push
adc
push
jae
and
push
adc
xorb
test
jne
hlt
shr
sbb
adc
jno
mov
mov
test
orb
dec
add
out
adc
adc
push
movsl
sub
movsl
cli
push
xor
or
jp
pop
sti
enter
or
stos
lds
push
inc
movsl
jnp
dec
add
add
dec
hlt
mov
test
dec
mov
ljmp
xchg
xchg
add
rclb
gs
mov
mov
dec
bound
inc
add
adc
test
stos
test
mov
sub
push
xor
insb
push
push
jp
cmp
dec
adc
and
adc
jp
aam
cmp
sbb
mov
adcl
jmp
out
push
mov
and
push
or
loopne
jecxz
mov
jp
roll
and
aam
addr16
cmpsl
leave
inc
sub
sti
xor
add
push
mov
push
js
mov
sbb
inc
sub
xor
shlb
je
inc
mov
jno
xchg
or
roll
es
inc
jp
enter
ljmp
add
orb
mov
xchg
and
adc
sbb
push
rolb
repnz
iret
rolb
inc
test
jns
es
push
js
jge
and
add
pop
push
rcrb
lods
std
mov
dec
mov
insb
cs
leave
movsl
jmp
je
dec
push
inc
rolb
cs
inc
mov
and
orb
aad
fs
pop
pop
mov
aam
jns
cmp
inc
mov
cwtl
sbbb
and
cmp
add
sub
mov
sub
aad
xchg
sbb
int
mov
test
fmuls
push
call
add
xchg
lock
or
push
fcomip
sbb
xchg
cmp
jo
sub
adc
inc
je
cmp
adc
pop
xor
xchg
xor
xchg
mov
push
jb
add
xor
push
mov
shrl
mov
xor
and
movsb
or
adc
pop
add
cmp
dec
orb
push
inc
je
loop
mov
or
orl
ss
mov
pop
or
xchg
rcrl
mov
movsl
inc
shlb
xor
scas
mov
mov
adc
sbb
and
xchg
lret
jb
imul
mov
mov
cmp
call
xor
ret
sbb
mov
rol
fwait
jmp
push
popa
out
adc
clc
sub
inc
push
ror
push
je
and
adc
bound
push
pop
add
pop
push
lea
inc
in
xchg
cmp
xor
stos
xor
dec
and
sar
popa
xor
in
cli
add
lods
sub
ret
mov
ret
add
sbb
inc
aad
pop
pop
sbb
hlt
addb
cld
aam
push
das
push
push
cmp
or
in
push
or
pop
lock
push
aad
push
cmp
add
decb
or
loop
push
sub
add
xlat
xor
adc
sub
into
lds
loope
ret
pop
jmp
sbb
ret
mov
rolb
dec
sub
jne
inc
and
push
or
out
pop
or
pop
andl
push
pop
in
outsb
sti
or
cmpsb
inc
or
sub
and
ds
cmp
mov
and
pop
data16
inc
jns
mov
jno
jae
adcb
push
push
call
and
jle
cmp
int
dec
push
add
xor
xor
sub
fs
push
push
dec
dec
es
add
aaa
mov
push
mov
push
lcall
enter
inc
out
imul
icebp
mov
inc
pop
lds
mov
shll
sub
push
mov
jo
cmp
pushf
add
inc
out
movl
pop
repz
cmc
and
mov
mov
push
js
into
push
jns
push
std
sub
push
and
movsl
stos
clc
xor
mov
push
mov
xor
xor
or
mov
insb
or
push
rcll
pushf
mov
cmp
pop
jge
shlb
push
xchg
pusha
xchg
std
sbb
sbb
pop
imul
test
stos
insl
sub
adc
xchg
jge
jge
or
lcall
sub
data16
add
les
pop
int3
fdivs
add
xor
and
add
mov
dec
lds
xor
fucomip
push
jl
loop
pop
inc
push
mov
pop
data16
or
ss
leave
sar
dec
divb
int
add
ljmp
loop
pop
lcall
adc
aam
sbb
pop
rclb
xor
cld
les
add
lret
pop
xchg
imul
push
or
in
inc
or
xchg
popa
sbb
pop
not
repnz
push
mov
sti
roll
pusha
add
add
push
xor
pop
aad
adc
mov
insl
or
mov
push
sbb
mov
cmp
adc
and
test
out
leave
or
inc
lock
movsb
and
call
sbb
pop
lock
arpl
mov
movb
lods
push
lods
bound
xchg
shl
popf
mov
mov
lock
andb
aaa
jp
dec
adc
mov
arpl
test
je
ljmp
bound
adc
xchg
add
int
js
mov
and
sbb
cmpsl
push
scas
sbb
ja
pop
orb
mov
jo
xor
iret
cmp
mov
or
cmp
jb
push
mov
inc
mov
jae
insl
enter
adc
hlt
rolb
inc
adc
xlat
pop
testb
dec
loope
loopne
ret
adc
xorps
add
hlt
add
in
out
xor
addb
lcall
mov
adc
inc
mov
les
mov
cmc
ljmp
test
adc
sub
pop
sub
xchg
add
icebp
je
mov
cmp
inc
sub
sbb
xchg
jecxz
test
adc
inc
enter
add
or
das
out
push
sbb
xlat
pusha
popa
into
aam
mov
sbb
xchg
nop
sbb
sbb
push
fcmovnbe
popa
pop
mov
pop
in
rcr
repnz
or
sarb
in
sub
iret
push
sub
xlat
lret
adc
add
adc
int
int
jl
xlat
mov
insb
cvtdq2ps
sbb
jle
add
add
add
cmp
jne
xor
or
imul
and
adc
aad
mov
mov
push
or
xor
and
mov
sub
addb
add
out
lret
mov
cld
roll
push
test
testl
xor
lds
cmp
es
sbb
dec
movsl
or
stos
pop
in
es
aaa
sub
test
in
inc
rorl
adc
ljmp
mov
popa
imulb
xor
and
adc
mov
sbb
sarl
bound
cmp
jno
mov
adc
adc
mov
aaa
pop
push
cs
xor
sti
add
push
add
jns
inc
push
push
loope
rolb
and
adc
adc
or
enter
adc
ret
add
rcrl
icebp
mov
cmp
js
lret
jle
jno
adc
xchg
bnd
pusha
aad
outsb
add
mov
ss
testb
add
mov
add
and
shll
dec
ss
sub
rclb
cmpb
mov
inc
lahf
mov
mov
xor
jnp
jbe
xchg
and
scas
dec
or
dec
adc
cwtl
movsl
cmp
jle
or
push
push
adc
mov
cmpsb
sbb
xchg
test
insb
inc
mov
les
dec
add
mov
or
add
cmp
dec
rorl
js
sbb
popf
or
pop
rorl
rolb
or
fs
lcall
sbb
add
into
add
mov
adc
push
shll
cli
add
lods
add
ret
jns
lea
scas
xor
dec
adc
hlt
ja
xchg
push
add
daa
out
call
in
subl
ljmp
cmc
sub
loopne
ss
sbb
adc
or
and
sbb
inc
loopne
xchg
fadds
mov
das
dec
xor
arpl
add
pop
sarb
daa
adc
or
iret
push
scas
pop
mov
sub
fistps
adc
and
sub
or
shl
adc
push
inc
jns
nop
pop
mov
cli
pop
xchg
addr16
sub
cmp
pusha
mov
test
mov
ret
or
mov
sub
or
push
sub
leave
out
xchg
adc
hlt
push
lds
add
xor
xchg
test
or
add
adc
ljmp
add
call
adc
push
xchg
pop
sbb
add
sbb
adc
jo
add
mov
test
sub
add
jge
push
scas
ret
cld
pop
mov
lock
push
lods
adc
sbb
inc
lds
rorb
stos
adc
or
dec
push
ljmp
mov
push
add
push
into
iret
adc
mov
stos
cli
xchg
add
or
lret
cmp
lret
jb
loop
leave
inc
rorl
pusha
leave
mov
movsl
pop
pop
ljmp
in
and
sbb
push
xchg
adc
sbb
mov
xchg
xor
mov
push
mov
lret
lret
inc
mov
mov
and
cmp
sub
sbb
sub
je
mov
shrb
sub
or
add
sbb
or
cwtl
sub
cs
jno
xchg
mov
mov
push
test
cmp
jo
js
adc
adc
ret
xchg
add
cli
jp
or
jg
adc
gs
push
fisubs
cmp
or
xchg
push
js
je
cmp
lods
sub
lock
sbb
shlb
mov
and
and
lret
inc
into
add
aas
movsb
inc
gs
push
mov
mov
scas
xor
push
out
lret
cmc
fidivrs
subb
adc
fsubs
pop
mov
fcmovne
sbb
stos
rcll
adc
or
aam
or
sub
add
repz
pop
inc
push
xor
xor
shr
sub
add
stc
inc
add
mov
inc
rcrb
pushf
ljmp
push
icebp
pop
lods
nop
cld
aaa
mov
repnz
lea
inc
xor
les
push
mov
rorl
mov
adc
add
adc
leave
fstl
cltd
push
cli
or
andb
rolb
jo
inc
cmc
inc
imul
mov
xchg
adc
mov
cwtl
add
rcrl
orb
xchg
pop
shrl
push
not
mov
movsb
or
dec
push
movsl
and
cmp
inc
movsb
pop
in
inc
sub
adc
jnp
scas
push
scas
andb
push
mov
add
mov
adcl
clc
sub
inc
add
mov
push
add
inc
add
je
into
mov
jo
inc
add
sbb
jmp
or
sub
sbb
adc
lods
es
shll
xchg
dec
sbb
dec
es
and
push
xchg
add
xor
dec
rorb
sub
call
test
dec
mov
sahf
adc
push
add
arpl
out
shll
popf
or
movsb
or
pop
or
push
lret
inc
mov
pop
mov
in
add
sbb
push
push
dec
std
or
cli
cli
js
adc
xchg
bnd
cmpsb
loope
rcl
cmp
mov
pop
push
add
ss
xchg
insb
mov
inc
add
xchg
mov
lret
mov
pop
std
sbb
mov
mov
mov
loopne
or
int
es
or
cli
outsl
cmc
cwtl
add
jp
pop
add
pushl
mov
push
sbb
adc
cmovo
and
insb
add
inc
aad
enter
insl
mov
loopne
pop
mov
inc
test
dec
dec
inc
cmpsb
push
inc
test
mov
push
add
pushf
dec
sub
dec
sub
adc
int3
rol
es
inc
mov
push
gs
call
loope
test
mov
cltd
sbb
inc
cld
inc
mov
mov
inc
inc
cmpsl
adc
sbb
jb
xor
jo
jae
negl
rorb
mov
cmp
or
mov
cmp
jb
inc
cmp
mov
or
jle
push
xlat
add
lret
lret
loopne
push
scas
shlb
push
sbb
or
stc
int3
sbb
adc
stos
jge
add
lret
rcll
sub
adc
arpl
nop
int3
add
push
jo
inc
mov
inc
push
and
and
pop
mov
std
rcll
inc
into
jo
xorb
test
pop
mov
fisttpl
xchg
out
mov
add
adc
mov
or
and
and
daa
mov
adc
push
mov
xchg
adcl
lds
mov
shll
mov
mov
cmp
add
je
sahf
and
mov
cmp
xchg
in
andb
mov
inc
adc
pop
mov
mov
sbb
sub
pop
adc
mov
dec
cwtl
clc
add
sbb
add
add
and
pusha
shlb
sub
pushf
stos
inc
jo
jnp
dec
xchg
rorb
popa
fadd
adc
or
imul
lods
je
sbb
push
scas
jo
test
lods
sarb
push
xor
pushf
shlb
jle
jb
xor
shrb
add
jne
in
pop
sbb
push
pusha
out
decb
andb
lret
or
inc
sbb
lret
jae
inc
push
test
andb
sbb
sbb
sbb
mov
sbb
add
cltd
xchg
add
add
pop
xor
xchg
mov
fisubl
addb
outsb
pop
push
or
ljmp
shl
test
and
pop
in
pop
push
xor
jg
mov
rcll
pop
aad
xor
dec
and
push
push
daa
subb
or
std
and
lods
fidivrl
mov
or
sub
stos
les
push
inc
push
ret
nop
sub
popf
pop
lret
mov
push
pushf
mov
pop
cmp
adc
scas
sbb
fwait
or
clc
jge
pop
rcrb
or
pusha
icebp
dec
jns
pop
add
test
and
fstpl
stc
dec
ja
or
sbb
add
inc
lret
xor
loope
pop
mov
imul
clc
stos
pop
add
roll
adc
adc
cmc
sub
xchg
and
in
adc
cmp
jae
rcl
pop
daa
test
shlb
adc
mov
js
mov
lods
push
nop
and
cld
push
push
stos
test
xor
xchg
xchg
mov
xlat
push
xchg
inc
mulb
xchg
adc
push
daa
or
cmp
xchg
push
cmp
adc
inc
fcmovnu
jmp
movl
sub
subb
lcall
je
shrl
push
add
jne
xchg
jbe
sarl
push
adc
lock
test
adc
sbb
cmp
jp
mov
add
push
add
stos
cmp
add
clc
sbb
aaa
cmpsl
push
repnz
sub
jbe
sub
mov
mov
adc
inc
adc
sub
inc
or
mov
mov
adc
sbb
mov
fcomps
lret
leave
push
inc
adc
add
jno
cwtl
test
sbb
jb
push
in
add
sbbb
and
push
fs
arpl
cwtl
xor
jle
sub
fwait
mov
push
leave
xor
pushf
ljmp
cmp
inc
mov
pop
andl
repz
push
add
enter
adc
mov
arpl
push
sub
inc
fwait
or
aas
icebp
mov
roll
pop
jbe
rorb
cmp
xchg
sbb
cmpsl
pusha
cltd
lea
call
pop
dec
sar
pushf
mov
sbb
pop
addl
outsl
aam
push
jp
ret
popa
and
mov
xor
adc
scas
mov
sti
sbb
or
cmp
push
add
push
xor
call
outsb
loope
ret
add
xchg
push
mov
adc
inc
xor
lods
xor
or
adc
sbb
stos
pop
rcl
popa
imulb
and
push
or
lcall
push
in
add
pshufw
mov
aas
rorl
add
aad
pop
clc
std
dec
stos
call
dec
push
push
cltd
push
cmp
inc
enter
dec
stos
or
pusha
mov
or
les
adc
adc
inc
sbb
push
mov
sub
xchg
push
mov
or
fimuls
andb
loop
sub
dec
sbb
cmp
cwtl
rcll
or
and
cli
push
push
or
mov
mov
rcrb
out
xor
fadds
add
stos
test
xorl
ret
cmpb
add
loope
es
dec
and
lea
and
shll
in
sbb
push
loopne
push
lret
pop
and
subb
pusha
in
sbb
bound
repz
ss
xor
pop
add
pop
jne
add
pop
loop
adc
cli
pop
inc
leave
pop
inc
nop
mov
pop
push
or
adc
push
sbb
addb
test
cmpsb
dec
leave
xlat
repnz
mov
fistpl
adc
inc
movsb
pop
adc
xchg
nop
popf
test
movsb
int3
push
or
pop
jl
out
ret
inc
inc
stos
loop
or
ljmp
dec
sbb
divb
shl
enter
push
lea
sbb
fwait
sbb
mov
sbb
add
add
cltd
adc
adc
mov
mov
andb
lods
test
mov
popl
or
add
cltd
cmpsb
stos
pop
fisubrs
jmp
mov
nop
mov
je
lock
add
mov
adc
rcrl
addb
add
shrl
arpl
add
lahf
sub
cmp
inc
xchg
mov
dec
inc
lods
cltd
insb
das
pop
loop
and
ror
shr
shll
jo
inc
fdivl
pop
pusha
enter
push
xchg
call
lret
fs
ss
cmc
xchg
add
pusha
push
push
sbb
cwtl
mov
fsubrl
push
repnz
add
dec
push
cltd
adc
xchg
mov
iret
mov
ds
mov
adcl
adc
cmp
ret
xor
pop
and
mov
and
add
mov
sbb
jb
pop
add
lret
or
pop
add
add
popf
mov
in
adc
lock
dec
push
adc
ret
pop
add
add
xchg
lar
add
push
inc
and
inc
add
rcl
push
dec
test
cmp
push
cmp
mov
aaa
addl
rorb
lea
mov
shrl
adc
adc
xor
adc
or
or
cmp
and
mov
in
jl
sbb
cwtl
pop
stc
cmp
inc
rcl
repz
push
scas
jo
cltd
loopne
pop
shll
in
push
adc
or
and
push
fisttps
mov
xchg
rol
rorl
mov
cmp
adc
pusha
push
pop
push
mov
xor
into
stos
loope
jne
imul
mov
jg
and
and
inc
inc
or
cmc
xchg
xor
cmp
jbe
mov
call
int3
push
stos
lcall
rclb
and
or
mov
push
dec
popf
cli
jp
sbb
and
xchg
ljmp
test
and
sbb
shrl
fldz
push
daa
fwait
addb
pop
push
orl
sub
mov
xchg
popf
add
inc
or
sub
icebp
mov
xchg
rclb
mov
jo
and
jge
adc
or
xor
sbbl
inc
and
rcrl
into
call
adc
push
scas
in
add
scas
mov
mov
pop
mov
sub
js
stos
push
cs
lods
fiaddl
cmp
outsb
push
mov
dec
cmp
add
stos
push
sub
dec
pop
inc
mov
ljmp
xor
or
jmp
xor
stos
push
adc
xor
push
repz
movsb
shlb
add
adc
pop
sbbb
ja,pt
sahf
mov
fmull
jne
stos
add
or
push
loope
dec
movsb
cmp
mov
test
add
adc
adc
cld
es
lds
add
in
adc
add
pushf
fs
adc
add
subl
push
loopne
xchg
rcrl
xchg
push
sub
rorl
hlt
mov
sbb
sub
inc
push
rcl
fucom
cmpsb
sub
cltd
int3
pop
push
xor
and
jno
dec
mov
or
and
xchg
enter
cmp
fwait
mov
call
pop
sub
pop
out
es
or
inc
add
push
jae
mov
jp
pop
in
test
mov
mov
adc
cwtl
push
pusha
mov
leave
pop
ficoms
mov
mov
jns
xchg
or
inc
mov
insb
mov
mov
mov
inc
lret
testb
push
mov
jecxz
mov
loop
adc
mov
imul
scas
mov
pop
or
sbb
and
repz
fwait
sbb
sub
sbb
or
push
push
jp
push
aam
mov
adc
js
sbb
lds
int3
mov
push
adc
test
xor
sub
dec
rorb
sbb
add
negb
in
nop
adc
dec
cli
hlt
inc
push
mov
in
rcrl
push
shl
into
cmp
mov
pop
jne
call
mov
fisubl
loop
out
push
lcall
shl
dec
cmp
fwait
gs
data16
mov
into
in
in
pop
or
jp
inc
test
into
mov
jb
push
jecxz
mov
into
cmp
dec
adc
inc
sbb
push
push
dec
inc
pushf
rcll
and
pop
cmpsb
icebp
pop
mov
pop
and
nop
jae
cwtl
icebp
dec
jp
wrmsr
inc
enter
jne
loopne
adc
movsb
mov
std
lret
or
xor
xor
mov
inc
shrl
hlt
xor
jnp
or
test
scas
and
into
ret
push
pop
or
pop
sub
or
test
out
mov
shlb
bound
orb
push
mov
pop
aam
xchg
mov
adc
jne
je
mov
fmuls
shlb
mov
dec
push
add
mov
lahf
adc
adc
dec
jp
mov
jb
lea
out
pop
imul
push
xorl
pop
pop
movsl
dec
cvtps2pi
mov
aad
jmp
sbb
nop/reserved
hlt
sub
pop
push
push
mov
sbb
call
xchg
pushf
rorb
adc
ja
push
icebp
inc
or
sub
adc
movl
adcb
dec
mov
pop
ljmp
shrl
adc
js
rclb
icebp
ret
jge
mov
add
add
cmp
xlat
ret
cli
popf
mov
add
push
mov
inc
add
ret
add
add
push
fnstenv
int
push
in
xchg
insb
add
inc
icebp
cmp
mov
mov
mov
mov
lret
stos
xchg
and
mov
mov
ljmp
test
adc
xor
call
shl
stc
ret
xor
bsf
out
inc
sbb
leave
adc
rorb
add
sbb
dec
and
push
mov
stos
pop
es
movsb
pop
cmp
and
jmp
push
sarl
pop
xor
inc
popf
xchg
or
sub
xchg
or
in
loop
or
dec
dec
dec
mov
hlt
sub
mov
add
sub
xchg
call
lods
lret
or
cmp
add
lcall
cmp
pop
movsb
clc
or
ss
int
pushf
mov
mov
cmp
jl
rol
leave
sub
movsl
inc
push
push
fwait
add
inc
xchg
bound
adc
dec
adc
or
push
xor
scas
mov
sub
pop
xlat
push
mov
mov
mov
push
add
jmp
and
ret
cmpsb
pop
or
ror
add
xchg
addb
or
js
xor
push
adc
push
add
das
sub
out
and
xchg
push
fildl
clc
fimuls
addr16
int3
xchg
mov
adcb
rolb
in
add
addb
addb
push
pop
outsl
cltd
and
mov
adc
sub
mov
pusha
cmp
leave
pusha
and
mov
ljmp
push
xor
mov
sbb
cmp
fsubl
push
sub
cli
mov
scas
and
adc
ret
sub
jmp
dec
ret
and
inc
mov
fistps
add
loop
inc
xor
xor
insl
xchg
sbb
mov
push
test
inc
cmpsb
mov
scas
inc
or
add
mov
cltd
cli
mov
addl
sub
ret
mov
dec
push
mov
fidivrl
sar
push
rorb
pop
inc
sub
mov
sbb
mov
adc
loopne
mov
sbb
inc
adc
mov
add
mov
adc
bound
push
mov
inc
sarb
add
rolb
sbb
leave
inc
push
add
inc
out
dec
clc
dec
mov
add
pusha
ret
dec
inc
sbbb
lret
mov
mov
sbb
add
adc
call
inc
icebp
loopne
push
sub
ljmp
stos
adc
add
out
mov
stc
leave
or
sbb
loop
push
add
scas
into
jb
or
cmc
ss
pop
in
push
movsl
push
leave
xor
cmp
shlb
adc
in
or
enter
test
jo
adcb
adc
mov
mov
push
jle
mov
ret
mov
out
and
pop
aam
sub
jmp
cmp
jb
loope
sub
enter
negl
mov
add
aaa
stos
sbb
int
pop
in
add
jns
js
sub
shr
aas
andb
iret
mov
adc
mov
lods
test
sbb
push
or
mov
xor
repz
sub
lea
xchg
es
inc
push
rclb
fmull
mov
adc
notl
inc
mov
jp
ds
cwtl
push
jnp
sbb
lods
sbb
pop
sbb
xor
cmp
ret
sbb
cmpsl
push
push
adc
test
call
adc
cmp
push
popf
or
pop
in
aaa
mov
lret
movsb
adc
and
fwait
and
sbb
adc
or
cmc
dec
test
gs
sahf
gs
cmpsl
or
rolb
xor
add
imul
dec
push
mov
dec
inc
or
cli
cmp
inc
ljmp
lods
inc
sbb
or
or
adcl
lahf
or
pop
inc
cmp
les
and
sbb
into
xor
mov
push
roll
sbb
xor
js
pop
clc
add
xor
push
shrl
push
lods
shrl
and
add
insl
dec
push
sbb
xor
xchg
sub
ljmp
push
cpuid
mov
xor
inc
mov
mov
adc
aad
sub
icebp
and
jecxz
popf
lods
pop
add
mov
pop
test
push
mov
dec
mov
mov
xchg
mov
add
push
ret
out
jno
aad
outsl
or
inc
or
cmpsl
adc
ret
dec
dec
add
jmp
jno
out
inc
adc
push
sbb
aam
icebp
inc
adc
mov
inc
push
pusha
popf
pushf
cmpxchg
sbb
cli
cmp
les
dec
fldl
adc
xchg
aad
test
ret
sbb
add
cwtl
cmp
enter
lret
push
loope
addr16
ja
or
inc
pop
in
add
push
movsb
add
adc
mov
mov
cmc
push
add
sbb
jo
aam
add
popf
fdivs
and
jg
adc
imul
sub
mov
mov
add
push
mov
jo
pushf
adc
retw
push
sub
cmp
in
dec
lds
pop
mov
out
adcb
rcrb
sbb
mov
mov
sub
mov
xor
cmpsb
dec
xchg
pop
sbb
and
dec
outsb
cmp
sub
or
pop
push
or
test
fdivr
push
shlb
scas
add
pusha
xlat
xor
push
jno
ret
andb
rolb
dec
or
inc
mov
adc
mov
inc
cmp
jnp
dec
sbb
cmp
lds
into
into
adc
inc
nop
or
jp
fwait
push
aad
add
or
cmp
push
add
add
or
enter
jp
and
mov
sub
adc
adc
insb
or
fnstsw
cmpsb
rorl
pop
cld
sub
mov
jl
and
shll
fs
stos
pop
rcrb
cltd
push
add
add
and
fildll
xor
xor
icebp
hlt
stos
add
fdecstp
loopne
add
mov
or
icebp
loope
leave
es
push
or
addb
in
outsb
xor
lcall
popf
ljmp
pop
or
andl
add
inc
adc
mov
rcll
gs
sub
dec
int
mov
cmpsl
sbb
push
cwtl
imul
adc
or
test
lock
imul
scas
into
or
dec
cmp
sbb
dec
push
jo
lea
shll
mov
dec
sbb
scas
mov
add
jle
push
xor
rorl
add
push
cltd
mov
es
dec
xchg
ljmp
stc
sbb
push
andb
push
pop
mov
icebp
faddl
mov
clc
test
mov
mov
je
jp
inc
rorb
aam
scas
sub
in
mov
cmpsb
cmp
xchg
or
mov
fsubs
mov
sbb
orb
into
das
ret
loopne
stc
test
cmpsl
rclb
jl
push
addr16
jne
sub
xor
dec
in
or
pusha
popa
cmp
adc
xor
test
rclb
shll
or
cmpsb
xchg
and
pushf
jmp
pop
stos
jae
push
add
das
adc
mov
pop
rclb
shrb
push
sub
xchg
dec
data16
push
sub
test
jo
outsl
adc
or
cmpsl
stos
push
dec
cli
mov
push
or
ljmp
mov
dec
jne
jg
rcll
pop
adc
jmp
addl
push
mov
inc
add
mov
in
and
pop
mov
inc
adc
xor
xor
addr16
or
cs
sub
add
mov
jnp
enter
push
push
cmpb
mov
in
dec
ret
and
or
mov
add
lret
adc
push
sub
push
add
in
adc
or
gs
repz
xchg
push
inc
kmovw
cmp
or
lods
bound
sub
and
jns
shlb
jp
xor
push
das
out
inc
and
xlat
sub
push
mov
mov
leave
jp
es
mov
sbb
mov
mov
push
cmpsl
xchg
scas
sbb
push
repz
test
loopne
jge
ret
pop
push
dec
mov
lock
shll
inc
and
rorl
cmp
stos
loop
pop
sbb
test
add
or
les
xor
or
push
xchg
push
pop
test
adc
sbbb
popf
lods
filds
push
cmp
cmp
pop
mov
sub
loopne
mov
inc
push
dec
inc
adc
and
jp
stos
mov
add
call
mov
les
shlb
or
sub
mov
in
push
inc
push
jo
stos
cmp
add
dec
adc
sbb
or
subl
xlat
scas
add
idiv
jmp
push
sbb
out
xchg
arpl
ljmp
add
push
push
jo
or
stos
test
aaa
xchg
jp
call
out
sub
mov
shl
mov
inc
movsb
add
push
and
push
xor
cmpsb
ror
and
enter
adc
or
cltd
jo
in
or
add
or
loop
pop
inc
mov
stos
or
shrl
lea
sub
push
je
sub
adc
adc
or
sub
push
adc
adc
fs
jne
sarb
sbb
dec
xor
pop
in
in
test
test
lcall
inc
dec
enter
jmp
lock
xchg
sbb
rolw
sbb
pop
lock
mov
add
and
adc
mov
adc
or
xor
jnp
into
sub
adc
jae
shrb
jne
leave
dec
lret
fcmovbe
cmpl
or
ret
in
cmc
loopne
enter
xchg
push
add
loope
mov
cmp
fisttpl
sbb
and
push
xchg
sub
add
sbb
cmp
pop
gs
push
xor
cmp
sbb
in
push
or
repz
and
addr16
shll
lea
pop
rcl
clc
or
addl
cmp
pop
adc
es
stos
push
or
test
enter
adc
bound
into
mov
test
sub
pop
adc
add
and
ret
out
mov
rorb
jp
mov
rorb
ret
ror
cld
into
sbb
aad
adc
je
sbb
push
out
es
ds
leave
push
bound
inc
add
inc
mov
pushf
outsl
lock
mov
lods
jo
imul
cli
push
or
pop
adc
or
addr16
xchg
mov
cmc
sbb
loop
and
cwtl
xor
mov
sbb
test
test
into
and
dec
push
pop
insb
jecxz
pop
cmp
ljmp
or
mov
mov
mov
rcrb
xchg
xchg
push
or
scas
enter
adc
xchg
mov
xchg
adc
and
dec
push
cmp
push
adc
mov
pop
test
add
daa
or
and
loopne
mov
mov
add
mov
xchg
pop
scas
js
sarl
enter
loopne
add
les
and
adc
xor
cmp
stos
dec
mov
jbe
mov
mov
cmp
inc
repnz
pop
adc
outsb
into
cmp
test
add
jp
clc
rorb
rclb
cwtl
test
outsl
mov
das
mov
adc
clc
fildll
sub
icebp
xchg
ljmp
mov
inc
inc
sub
xor
out
cmpsb
loopne
lret
add
dec
dec
mov
mov
push
add
mov
insb
in
jb
xor
rorl
repz
nop
aam
or
out
addr16
or
add
inc
out
xor
mov
cmp
push
rol
xlat
cmpb
dec
or
push
sub
loop
cmpl
jge
sub
lods
rorl
sbbb
xorb
add
pop
add
mov
adc
loop
loope
loopne
inc
xchg
push
inc
or
cs
lcall
pop
jne
xchg
mov
divb
add
inc
jp
sub
rcll
push
mov
push
ljmp
jmp
cmpsl
loope
adc
adc
dec
add
pusha
jae
sub
outsb
jae
push
mov
pop
dec
lea
popa
mov
mov
pop
sub
add
push
xor
sbb
push
push
insb
leave
mov
subl
xor
mov
mov
clc
ffree
mov
fs
or
xchg
mov
sbb
ret
imulb
jge
andl
push
and
andl
stos
dec
sub
push
cmpsl
cmpsb
rorb
int3
push
mov
mov
dec
or
je
fmul
inc
sub
pop
mov
or
repnz
add
clc
mov
mov
cmp
mov
jae
mov
mov
push
and
xchg
call
rclb
jmp
mov
add
inc
pop
inc
and
loopne
add
push
sete
or
push
push
pop
xchg
mov
ret
inc
xchg
or
int3
dec
push
xchg
adcl
dec
push
movsb
mov
pop
push
and
push
xchg
dec
or
sbb
dec
and
ss
inc
je
push
and
add
pop
in
sahf
mov
sub
push
sti
mov
aad
inc
or
push
pop
loope
push
and
test
fstps
nop
and
mov
insl
xor
mov
ds
inc
sbb
aad
out
mov
mov
outsb
sbb
mov
sub
shrl
mov
dec
cmpsl
adcb
add
out
xchg
dec
or
inc
xor
cltd
popf
ficomps
fcom
add
rcll
enter
js
jle
pop
loopne
iret
call
or
nop
cmp
adc
xchg
movsl
inc
addr16
dec
push
pop
jnp
push
bound
sub
nop
adc
fwait
punpckhbw
mov
inc
mov
ret
test
mov
push
popa
xorb
dec
stos
movsb
sbbb
rol
in
inc
loope
ret
push
jo
cmp
inc
into
inc
xor
popa
ja
mov
xchg
and
cmovb
cld
jp
inc
xchg
push
xchg
es
arpl
xchg
jnp
ljmp
subb
rcll
mov
sbb
popa
inc
icebp
inc
test
xor
decl
into
adc
push
je
mov
xchg
xchg
xchg
jns
mov
push
lods
jo
mull
mov
faddl
cwtl
xor
sbb
gs
dec
add
push
sbb
lock
mov
push
cmp
mov
push
push
cmp
arpl
push
push
mov
push
add
inc
shlb
add
pop
xchg
add
jmp
sbb
nop
jb
mov
add
ret
sti
add
add
mov
inc
sarl
pop
jl,pt
mov
adc
push
jp
mov
dec
adc
xchg
cltd
add
mov
mov
jo
out
movsb
mov
mov
sbb
inc
out
fwait
pop
cmp
push
nop
and
cli
fwait
ja
stos
dec
loop
pop
aad
out
jne
lds
xor
stos
out
add
dec
inc
mov
mov
je
fmull
lcall
or
pop
push
push
pop
pop
or
sub
test
xor
sbbb
jne
test
inc
mov
sub
and
rcrl
or
dec
imul
lds
loopne
adc
rcrl
adc
cmpsb
sub
aam
cmp
inc
sub
add
inc
xor
push
rcll
int
sub
push
xor
popa
pop
daa
sbbb
leave
mov
sbb
inc
pop
aam
fwait
leave
adc
out
inc
enter
mov
or
inc
mov
sub
lods
jae
xchg
push
inc
adc
add
addr16
das
in
push
int3
test
add
jnp
or
add
sub
rolb
push
stos
inc
adc
add
push
adc
sbb
adc
mov
lahf
add
lods
add
mov
dec
or
rclb
add
add
fmulp
icebp
xchg
call
ret
daa
sbb
adc
stos
mov
gs
push
inc
push
dec
mov
or
adc
pop
xor
cmc
and
inc
add
call
sbb
cmpsb
stc
aad
pop
addl
and
or
mov
mov
add
sbbb
sub
add
arpl
inc
jnp
jp
jb
daa
xchg
dec
lcall
push
ret
pop
aad
mov
and
mov
or
jge
or
sub
cmp
mov
adc
jo
sub
pop
adc
cmp
mov
je
stc
cmpsb
ss
xor
outsl
cwtl
jp
pop
movsb
rclb
jb
cmp
repnz
stos
jl
adc
adc
pop
jae
push
lock
or
mov
in
jbe
mov
sahf
push
std
push
in
mov
hlt
pop
aam
dec
repnz
xchg
dec
movsl
and
add
ljmp
sbb
les
pop
push
xchg
mov
adc
inc
mov
jnp
rolb
and
xor
pop
or
shrb
lds
or
subb
pop
mov
int
sbb
and
pop
mov
in
sbb
fimull
call
daa
mov
iret
xlat
push
les
stc
in
push
and
lret
aam
mov
jmp
sub
sbb
or
adc
inc
movb
mov
add
mov
ds
cld
mov
add
or
inc
add
sbb
and
or
das
add
in
lods
dec
pop
dec
sub
ror
ret
sub
les
sbb
sub
xchg
jne
aam
push
sbb
mov
and
addr16
sbb
xor
xchg
sbb
repnz
mov
ja
add
adc
add
test
or
mov
add
add
ja
outsl
loope
mov
mov
das
shrl
xchg
pop
pop
mov
sub
adc
push
mov
mov
pop
adc
xchg
sbbb
mov
pop
jo
jp
adc
rol
cmp
jno
fcomps
adc
inc
out
or
lret
fdivrl
loope
push
rcrl
testb
jo
mov
mov
adc
or
ss
lock
enter
and
lea
sbb
sbb
adc
int3
push
pop
pop
add
inc
xchg
ja
adc
je
push
xchg
adc
pop
and
add
adc
rcrb
cmpsl
cli
inc
add
push
mov
jb
enter
negb
pop
xchg
xor
xor
sbb
subl
push
nop
sbb
lds
sub
in
inc
sub
stc
xor
mov
jnp
mov
sbb
cvtps2pd
xorl
mov
popa
push
jbe
scas
push
inc
lods
pop
pop
loope
cmpsl
dec
add
push
pop
inc
push
xor
add
inc
mov
push
aam
int
inc
mov
inc
lds
dec
mov
cmp
punpckhdq
movsl
icebp
inc
inc
test
js
ret
adc
test
fwait
jp
cmp
push
xchg
push
popa
sub
xchg
lret
or
loope
sub
push
mov
push
stos
jae
or
test
jp
mov
inc
fistps
jns
stos
adc
clc
shrl
pop
cmp
scas
aam
add
xor
push
adc
pusha
mov
mov
push
aam
inc
jno
mov
mov
in
test
pop
btcl
rol
jmp
mov
ss
mov
push
sbb
cli
or
sub
inc
popf
lret
lret
dec
add
cmpsl
fsubrs
lea
adc
mov
sub
lcall
shll
pop
sbb
fcoms
ret
addl
or
andl
inc
gs
scas
push
jecxz
pushf
xlat
jg
andb
rcr
pop
sub
inc
mov
std
pop
add
pusha
inc
push
or
pushl
push
addr16
adc
sbb
stos
stc
push
sbb
mov
and
adc
cwtl
add
je
xchg
add
cmp
orl
and
xor
ljmp
sub
mov
adcb
push
orl
push
xlat
sub
aam
lcall
and
add
push
test
mov
pushf
or
sub
adc
inc
xchg
xor
repnz
test
and
or
stos
loope
shlb
jmp
inc
or
std
cli
or
mov
or
leave
test
cs
jbe
adc
cli
stos
movsb
or
inc
sbb
and
pop
std
lret
mov
cmp
mov
cwtl
adc
dec
push
sub
sub
sub
movb
mov
mov
lea
in
dec
cli
xor
mov
jmp
scas
faddl
lret
ljmp
or
add
scas
push
lods
xchg
xor
stos
jo
lea
and
cmp
sbb
dec
loope
inc
popa
push
inc
or
dec
push
sbb
ss
test
mov
call
pushf
sub
js
dec
add
sub
out
hlt
push
out
loop
add
mov
mov
sahf
stos
ds
and
enter
jb
push
popa
dec
pusha
sub
xchg
jae
adc
mov
jb
rolb
scas
cmp
mov
xor
sub
mov
push
jno
jno
dec
inc
and
dec
sbb
icebp
sub
sar
in
adc
and
cwtl
or
jg
inc
mov
lret
icebp
jg
push
dec
mov
sub
movl
jg
sub
pusha
idivl
sbb
push
inc
and
jo
sub
cld
jg
cld
stc
cmp
addl
cmpsl
out
lcall
aad
sub
sub
insb
lock
stc
repz
inc
cmp
push
sbb
aas
out
or
push
jl
xchg
mov
cmc
mov
pop
das
cmp
repz
sub
aas
jg
cld
push
adc
mov
and
push
scas
repz
lahf
inc
mov
mov
popa
sub
cld
stc
stc
out
pop
mov
int3
rolb
pop
mov
imulb
push
ror
test
mov
stc
repz
test
sub
iretw
lahf
aas
jg
out
and
push
mov
cld
stc
repz
imul
mov
idivl
add
adc
inc
imul
rcrb
stc
repz
jns
lods
jnp
push
cmp
lods
in
or
jg
cld
pop
data16
push
icebp
std
rolb
out
inc
jno
out
lahf
out
cmp
add
push
pop
repz
in
adc
stc
aas
mov
pop
sub
jo
orl
subl
test
mov
mov
dec
mov
dec
lods
lods
sbb
shlb
xlat
or
imul
daa
loop
pop
movsb
dec
cld
stc
repz
mov
lea
mov
ja
ficomps
sarl
sub
test
stc
repz
sbb
sbb
push
adc
aas
jg
cld
cld
add
repz
outsl
push
xor
push
mov
repz
lahf
and
imul
dec
rorl
jg
cld
stc
data16
xor
add
scas
enter
out
lahf
aas
inc
sbb
imul
stc
rep
or
loopne
in
adc
aas
ret
push
pop
jp
rcr
out
aas
jg
push
orb
shl
cld
stc
repz
rolb
xor
mov
dec
or
jnp
lahf
aas
jg
dec
mov
mov
xchg
jne
jge
mov
stc
repz
inc
jo
xor
jbe
test
dec
lahf
aas
jg
mov
jnp
mov
mov
stc
repz
mov
xor
push
jbe
adc
into
pop
aas
jg
cld
jbe
inc
jge
shl
mov
imul
hlt
lahf
rep
add
jbe
into
aas
xchg
sbb
arpl
insl
jecxz
adc
repz
lahf
jnp
pop
xchg
int
and
lods
cmp
jg
cld
stc
push
or
sub
push
xchg
popa
jo
scas
in
filds
sub
iret
lahf
aas
or
aaa
pop
mov
cmpsl
cmp
cld
stc
repz
inc
sub
iret
mov
pop
or
decl
inc
jle
inc
pop
and
out
out
iret
jno,pt
out
lahf
aas
std
enter
inc
mov
push
int3
movsl
cld
stc
repz
in
cmp
sub
fidivl
inc
iret
lahf
aas
jg
popa
popa
js
jbe
jbe
sbb
test
mov
in
popf
test
mov
repz
cld
fmul
mov
cmpsl
shl
jnp
mov
cld
stc
and
lcall
das
dec
mov
iret
lahf
aas
movb
xorl
stc
repz
and
add
mov
mov
iret
lahf
aas
jg
loopne
push
scas
mov
nop
lock
stc
repz
mov
xchg
je
loop
lods
lahf
aas
jg
imul
jge
pop
rol
cmp
xchg
stc
repz
and
xor
lods
mov
cld
gs
fidivrs
cwtl
inc
mov
leave
cli
bsf
pop
loope
iret
lahf
test
mov
and
stc
inc
xchg
pop
lea
sub
lahf
aas
jg
dec
sub
cltd
or
repz
mov
mov
popf
aad
test
testb
xchg
inc
andb
out
push
in
adc
cmp
das
xor
lock
jg
cld
mov
cmp
adc
imul
iret
lahf
sub
xor
push
out
fnstcw
cld
stc
mov
inc
sub
je
test
movsb
inc
addb
sti
int
push
fdivl
xchg
ja
divl
lcall
or
aas
jg
sbb
testb
push
cmp
cltd
stc
repz
sub
loope
dec
imul
jg
cld
mov
in
pop
cmp
rol
xchg
repz
lahf
leave
pop
enter
stc
fsubl
jg
cld
stc
and
std
ret
jg
test
push
jnp
out
lahf
aas
dec
testl
adc
pushf
mov
xrelease
xchg
dec
sub
cli
mov
lock
iret
lahf
aas
jg
add
sbb
jnp
xchg
test
ljmp
dec
out
inc
andl
mov
call
or
xor
mov
repz
inc
out
pop
or
adc
pusha
sbb
xchg
sbb
aas
jg
cld
pop
mov
out
push
pop
push
xchg
xchg
dec
or
adc
pushl
jmp
and
nop
add
fadds
stc
adc
into
and
out
lahf
aas
pushf
jo
push
test
adc
cld
stc
repz
xor
fldenv
subl
lahf
aas
jg
faddl
lds
fimuls
cld
stc
repz
rol
jmp
inc
lret
scas
int
out
dec
push
xor
inc
mov
lea
and
jns
inc
imul
leave
in
push
xlat
push
cmp
rcrl
sub
mov
or
pushf
mov
pop
cs
mov
test
pop
iret
addl
jg
cld
push
mov
in
cmp
popf
mov
pop
js
out
lahf
dec
dec
or
call
fwait
incl
sbb
int
sub
popa
cmp
gs
inc
out
lahf
jg
adc
outsl
jl
ljmp
cld
stc
repz
test
shll
bound
mov
lahf
aas
jg
pop
negb
push
js
loop
stc
repz
fwait
outsb
test
xchg
sbb
loop
push
lahf
aas
jg
adc
cs
push
fucomip
clc
push
xor
stc
repz
movsl
or
pop
jae
adc
int3
jne
sub
fnsave
movsb
mov
jge
jl
mov
lahf
mov
push
mov
adc
mov
cld
stc
or
mov
jo
fwait
jp
jb
cld
stc
adc
cmp
jge
ljmp
jle
inc
repz
iret
jg
cld
stc
sbb
pop
xor
fldt
adc
out
lahf
aas
push
pop
mov
dec
or
jg,pn
cld
stc
repz
or
cwtl
ret
add
push
shll
test
cwtl
ljmp
push
adc
mov
sub
add
daa
lahf
aas
jg
outsb
mov
das
aas
jae
push
and
cld
loope
xor
mov
in
add
xor
iret
lahf
aas
xor
jo
mov
fxch
lret
nop
cld
stc
xrelease
movsb
shll
jecxz
aas
fisubs
mov
iret
lahf
aas
jg
pusha
mov
movsb
fadd
xchg
mov
popa
cld
stc
repz
scas
and
sub
inc
sbb
sbbb
lahf
aas
jg
icebp
movsl
xchg
and
and
add
stc
repz
cmpsl
push
stos
out
test
xchg
adc
aas
jg
cld
jp
sar
add
movsb
cmp
in
inc
add
lahf
repz
push
push
xchg
sub
mov
cld
stc
inc
mov
leave
aam
es
adc
ret
test
xor
ret
lcall
inc
cld
stc
repz
pop
mov
lods
mov
inc
aas
iret
lahf
aas
jg
daa
cmpsl
in
adc
int
cld
stc
repz
mov
sbb
cmp
divb
aas
jg
loope
and
outsb
mov
xchg
push
repnz
repz
stos
in
lret
push
xchg
dec
imul
xor
jg
cld
in
sti
fwait
es
negb
ds
jecxz
push
xchg
iret
lahf
dec
dec
xchg
insb
jnp
sahf
aas
jg
cmpsl
mov
or
mov
cld
pop
lahf
xlat
sti
or
repz
fdivs
xchg
jae
jg
cld
stc
mov
jl
pop
cmpsl
and
inc
aas
in
mov
movl
mov
add
repz
sbb
les
daa
cmpsl
in
iret
mov
lahf
aas
jg
lahf
jecxz
mov
dec
inc
out
fcmovne
mov
push
aad
dec
sar
cld
stc
repz
xchg
or
jae
rcrb
cs
iret
lahf
aas
jg
cmpsb
fsubl
push
sub
or
cmp
cld
stc
repz
ret
mov
mov
jno
aas
jg
cmpsl
jo
lahf
lds
scas
cwtl
in
xlat
push
stc
repz
xor
cld
rorl
or
shll
cld
iret
cmp
and
mov
lds
lea
iret
lahf
aas
sbb
jl
mov
stc
repz
cmp
cmp
adc
xor
dec
sub
aas
jg
cld
cmc
xchg
cmpsb
adcl
push
mov
adc
mov
mov
push
test
stc
repz
fisttps
clc
aaa
push
mov
and
cld
mov
out
push
pop
cmp
and
popf
mov
xor
cld
stc
repz
mov
mov
push
sbb
fbstp
iret
lahf
aas
jg
push
and
ss
mov
stc
pop
mov
out
xor
cmpsl
cmp
jg
cld
mov
sub
xor
dec
gs
repz
lahf
cli
mov
xchg
xor
jg
cld
stc
dec
mov
stos
aam
insl
sub
inc
addl
leave
and
lahf
aas
sub
inc
test
leave
sbb
andb
bound
sbb
scas
stos
iret
lahf
aas
jg
adc
mov
xlat
mov
in
stc
repz
dec
jmp
adc
mov
pusha
loope
inc
insb
lahf
aas
jg
testl
fnstenv
push
mov
mov
stc
repz
jg
xor
jecxz
inc
xlat
mov
aas
jg
cld
mov
stos
data16
ss
sbb
lahf
dec
imul
cs
push
lahf
lret
xchg
jg
cld
stc
rclb
cltd
rcl
sub
adc
lahf
aas
enter
popa
test
stc
repz
push
and
stos
or
aaa
xor
lahf
aas
jg
leave
pop
mov
dec
cmp
fwait
cld
in
out
xlat
ljmp
mov
pop
jg
mov
xor
dec
mov
cld
shrb
scas
pop
loop
push
iret
jmp
repz
lahf
jle
or
pushf
pop
orb
cld
cld
stc
xchg
xchg
sbb
inc
inc
mov
add
xlat
sahf
sbb
inc
inc
inc
xor
jg
pop
push
pop
mov
mov
cld
stc
repz
xor
jo
lret
out
sub
add
mov
and
sub
fwait
aaa
cmc
mov
fimull
stc
out
mov
cld
inc
mov
out
push
shlb
fwait
aaa
outsl
fidivrs
lock
push
cmp
lcall
sub
fadds
aaa
repz
aaa
outsl
fidivrs
cs
push
pop
sti
jmp
or
outsl
repz
fwait
dec
std
and
push
xchg
mov
outsb
outsl
fidivrs
xor
rorl
out
fwait
aaa
fildl
outsb
ret
in
cmpsl
mov
repz
adc
mov
imul
in
sub
inc
dec
and
mov
xchg
fdivl
cli
inc
mov
fldcw
leave
ret
mov
push
fldenv
adc
cmp
out
sbb
aas
adcb
add
repz
pop
das
sub
aam
xor
add
xchg
out
enter
cmc
enter
lahf
js
push
out
aaa
not
dec
out
fisubl
lahf
aas
jg
cmpl
add
iret
jmp
add
or
cmp
aas
jg
cld
sbb
mov
sub
addr16
lahf
repz
mov
inc
dec
aad
inc
js
daa
pushl
xor
cmp
pop
movsl
aas
dec
jb
iret
lahf
aas
sbb
xchg
sub
popf
cmpsl
xlat
movsl
add
sahf
cld
stc
repz
xor
aaa
inc
jp
add
add
and
lahf
aas
pushl
mov
xchg
mov
adc
mov
ja
dec
imul
leave
push
iret
lahf
aas
jg
imul
loopne
xor
aaa
lock
stc
repz
mov
and
movsl
lahf
ljmp
scas
cmp
stos
imul
in
mov
jg
cld
stc
nop
or
pop
mov
jno
addr16
hlt
sbb
out
lahf
aas
mov
std
inc
dec
idiv
je
cld
cmp
mov
mov
add
sub
popf
pop
ljmp
cld
stc
repz
aam
imul
stos
in
int3
je
lahf
aas
jg
sbb
aas
test
in
xchg
ret
stc
repz
inc
dec
sub
scas
pop
sub
bound
fldcw
dec
icebp
cld
stc
inc
ja
es
pushf
pop
test
iret
lahf
aas
jg
or
cmp
dec
insb
jmp
jg
lock
add
add
dec
dec
adc
sbb
call
out
aas
cmpsl
fs
pushf
and
push
mov
cld
stc
and
testl
pop
cmpsb
pop
repz
and
lods
inc
sub
inc
mov
inc
lds
stc
pop
sub
add
shrb
push
test
out
lahf
aas
rcr
adc
push
mov
cld
stc
repz
xchg
push
leave
enter
dec
sub
jg
in
xor
xor
subl
outsl
xchg
pop
in
fs
fiaddl
push
jbe
stc
cs
notl
scas
push
push
stc
repz
and
ret
dec
sub
xor
sub
cld
in
call
aad
aad
rcll
lahf
lock
aam
into
out
jae
jb
jg
cld
stc
in
ja
adc
in
jmp
les
xchg
stos
add
jle
xchg
xchg
aaa
jg
cld
stc
push
scas
xor
in
out
ja
jp
mov
mov
pop
arpl
rorl
insl
push
xchg
mull
adc
sub
out
fwait
aaa
pop
hlt
pusha
xor
fimull
ret
or
mov
repz
xlat
aas
pop
xchg
jl
add
mov
int
aaa
outsl
adc
push
and
cld
adc
xor
adc
and
cli
enter
cmpb
push
pop
push
mov
inc
std
mov
in
lods
cld
stc
repz
lcall
xor
xchg
lcall
incb
shrb
mov
testb
repz
inc
stc
ds
lock
mov
mov
cld
xor
add
push
shl
or
gs
iret
lahf
inc
lods
lea
in
mull
jp
xrelease
aad
aas
mov
stc
aad
sbb
ljmp
jno
test
jecxz
jl
enter
iret
out
fdivrl
repz
ret
xlat
repz
push
push
jg
pop
loopne
aas
cld
pop
in
cs
icebp
push
mov
repz
fwait
mov
orb
enter
aas
jg
cld
out
movsb
pop
je
in
in
movsb
scas
stos
xor
repz
lahf
int
and
addb
ss
cld
stc
mov
fnstsw
dec
mov
jg
and
adc
inc
repz
lahf
jno
pusha
dec
mov
jl
inc
addb
repnz
or
mov
sysret
enter
iret
lahf
aas
jg
pop
inc
daa
and
loop
mov
xchg
jle
pop
sub
cld
notl
aas
jg
ss
inc
cli
xchg
mov
and
dec
sbb
out
push
in
test
fcoml
lods
and
cld
cld
rolb
ja
int
repz
push
out
xchg
insl
neg
mov
jg
cld
stc
xchg
daa
push
mov
jg
or
fldenv
sbb
pop
outsl
pop
mov
cld
stc
repz
dec
mov
push
enter
mov
shl
outsl
hlt
test
mov
push
stc
repz
mov
pop
sti
pop
push
popf
aad
pusha
iret
lahf
aas
jg
movsl
sbb
dec
inc
and
mov
out
in
aam
or
fwait
nop
fwait
addb
or
xchg
in
sbb
pop
cmp
into
stc
repz
scas
adc
sub
clc
ucomiss
jg
cld
adc
hlt
leave
and
cmp
repz
lahf
jb
lret
and
or
jg
cld
stc
lcall
jmp
pop
js
pusha
shll
aas
gs
movsl
mov
loopw
aad
iret
lahf
aas
jg
jecxz
or
cmp
jbe
jbe
out
cld
stc
repz
inc
mov
mov
fidivrs
mov
addr16
fwait
push
push
mov
xor
dec
idiv
repz
xchg
mov
out
out
jnp
xlat
mov
ljmp
cld
jns
test
stos
sub
push
pop
ret
xchg
iret
lahf
and
cmp
inc
addl
into
inc
jle
xchg
std
imul
dec
repnz
cld
arpl
push
aas
ret
push
mov
lahf
aas
jg
ss
add
out
push
imul
stc
repz
push
push
dec
push
mov
daa
scas
sub
mov
popa
mov
sbbb
dec
push
pop
in
loope
insl
mov
inc
jle
neg
add
mov
mov
std
test
repnz
out
int
into
pop
jle
cld
addr16
dec
cmp
sub
xchg
sub
adc
and
dec
lock
pusha
sub
lahf
aad
inc
mov
cmpl
repz
aaa
ret
movsl
movsb
sahf
mov
lret
cld
rcll
outsb
ja
lret
add
lret
int
repz
lahf
dec
inc
cmpl
scas
jle
stc
aad
dec
inc
push
push
iret
ljmp
aas
push
pop
inc
ret
repz
mov
dec
push
jle
xchg
sarl
mov
jmp
push
xor
ret
pop
mov
ss
int3
lods
and
mov
pop
movsl
outsl
sub
out
push
or
into
scas
cld
stc
repz
pusha
dec
and
cmpsb
negl
aas
decl
addr16
inc
rolb
pusha
inc
insl
xchg
stos
sbb
jp
scas
push
sub
out
or
and
add
or
add
aaa
outsl
fidivrs
mov
lret
scas
cmp
fbld
push
mov
stos
xchg
mov
inc
xlat
mov
xchg
out
jo
ljmp
adc
stc
add
out
lahf
sahf
pop
push
jg
ficomps
cmpl
dec
cmc
xchg
scas
pop
ret
cwtl
clc
cwtl
call
aas
cmp
lahf
mov
mov
cmc
dec
jg
or
mov
push
mov
xor
and
iret
lahf
aas
test
out
or
cld
stc
rep
nop
insb
dec
sub
into
xor
push
ljmp
aas
jg
dec
mov
rclb
orl
pusha
popa
popf
and
lret
ficoms
movsb
add
xchg
push
negb
fwait
aaa
out
lahf
out
sub
bswap
in
int
mov
adc
scas
cs
mov
sete
mov
aaa
outsl
faddp
sub
and
fiadds
out
lret
ljmp
outsb
sub
mov
sar
sar
test
mov
push
pop
jns
dec
inc
adc
push
and
fcmovnb
out
in
jmp
sub
clc
out
cmp
cmp
cmp
inc
outsb
xchg
cld
stc
repz
pop
cmp
dec
inc
mov
inc
and
jg
std
add
sub
jbe
mov
jg
jl
and
in
fsubrs
sbb
push
and
out
lahf
aas
loope
push
push
mov
sub
mov
jl
repz
icebp
imul
jg
xor
fsubs
pop
jecxz
addl
mov
cmp
jl
cmp
popf
mov
stc
mov
jo
mov
pop
sahf
aas
bound
shl
dec
sub
iret
lahf
aas
mov
pop
push
push
movl
stc
repz
inc
aaa
or
xchg
jecxz
sub
lds
fwait
es
gs
mov
cmp
fdivr
stc
repz
incb
jge
xchg
rclb
mov
es
inc
ja
mov
mov
repz
pop
push
scas
movsb
cltd
mov
mov
mov
push
pop
mov
sbb
nop
adc
aaa
jg
push
xchg
in
stos
sti
xor
lahf
jns
out
in
les
sub
or
flds
fidivrs
add
jl
ret
dec
stc
pop
inc
test
inc
loope
xchg
or
aas
jg
fwait
xchg
or
int
fsubl
inc
daa
mov
ror
inc
push
sub
jb
mov
cvtps2pi
xlat
out
movsl
cwtl
fs
cld
stc
repz
pushf
and
push
mov
or
test
pop
inc
lods
addr16
cmpsb
pop
lods
imul
jecxz
jmp
inc
mov
sub
jg
cld
inc
dec
add
shrb
push
test
shl
out
lahf
fcoms
xchg
icebp
mov
mulb
mov
push
leave
enter
aas
jg
ftst
aaa
enter
mov
cltd
xchg
repz
lahf
outsl
xchg
pop
in
fs
fiaddl
push
stc
mov
pop
lahf
aas
in
cmp
test
dec
sub
aas
jg
jo
xchg
aas
mov
push
mov
out
lahf
std
rcll
aam
into
inc
cld
stc
out
jae
jb
in
ja
adc
in
mov
pushf
sbb
xchg
stos
ds
pushf
jle
cwtl
xchg
mov
and
movsb
mov
push
lahf
aas
jg
pop
lahf
jp
pop
push
movsb
arpl
int3
jno
js
out
insl
dec
icebp
xchg
lods
push
adc
hlt
pusha
mov
xor
fimull
ret
or
mov
aaa
outsl
aas
pop
xchg
jl
add
mov
jns
out
adc
push
and
cld
adc
xor
adc
and
outsl
fidivrs
movsb
push
outsb
push
pop
mov
roll
mov
repz
cmc
lcall
adc
cmpsl
outsl
fidivrs
shrb
mov
testb
int
aaa
inc
stc
ds
lock
mov
fidivrs
jb
add
shl
or
int
aaa
outsl
gs
lods
lea
in
mull
jp
jns
out
or
add
rcrb
add
sub
lea
jg
mov
adc
aas
jg
cld
cmpb
cwtl
xchg
push
fucom
jp
ljmp
xlat
push
push
jg
pop
loopne
in
cld
stc
mov
jmp
mov
mov
and
lahf
aas
mov
push
add
out
repz
icebp
je
out
or
int3
movsb
scas
stos
xor
cmp
or
jo
addb
outsl
fidivrs
pop
fcomp
mov
dec
mov
ljmp
fwait
cmpsb
cs
lahf
aas
call
lea
pusha
dec
mov
jl
inc
addb
outsl
cmc
or
inc
mov
outsl
bswap
jo
mov
pop
lahf
aas
jg
inc
daa
and
loop
mov
repz
pop
sub
cld
notl
das
mov
cli
xchg
and
daa
dec
sbb
outsl
ficoms
test
fcoml
lods
and
out
rolb
jl
int
out
aam
push
push
xchg
insl
neg
mov
mov
dec
popa
daa
push
mov
jg
or
out
fwait
aaa
fldenv
outsl
pop
mov
jns
aas
add
mov
cmp
mov
jne
dec
out
lahf
aas
scas
dec
mov
test
mov
repz
mov
cld
mov
cld
stc
xrelease
cmpsl
pusha
jecxz
sbb
inc
aas
stc
jo
jmp
cmp
in
aam
cmp
nop
insb
or
mov
sbb
cld
stc
xlat
or
dec
dec
jo
cmp
into
scas
adc
iret
lahf
aas
jg
sub
clc
ucomiss
adc
stc
repz
hlt
leave
and
cmp
jb
lret
jg
iret
jecxz
mov
or
lcall
xchg
daa
jge
lods
js
mov
stc
or
xor
movsl
jns
int
sub
lret
or
cmp
out
fwait
loop
xchg
push
mov
ficoms
stc
test
addr16
push
push
mov
and
notb
fdivrl
mov
ljmp
adc
out
jg
or
pop
ret
mov
sti
xor
xlat
mov
and
popa
add
imul
repnz
leave
int
lahf
sbb
mov
divl
adc
repnz
sbb
stc
repz
mov
ss
add
push
aaa
out
and
push
dec
push
mov
fwait
lock
daa
scas
sub
xchg
or
outsl
fidivrs
pop
jne
in
ret
pop
loope
insl
neg
out
fwait
aaa
fcmovnu
incb
cltd
pop
jg
fadds
xchg
fidivrs
mov
iret
into
pop
jle
cld
addr16
ficoms
jl
in
shrl
cmpsl
mov
ss
xchg
sub
xchg
out
dec
lock
and
mov
call
lahf
adc
pushf
imul
lahf
aas
jg
fisttps
int
jbe
lret
test
iret
ja
lret
add
lret
movsl
dec
lahf
aas
jg
jo
mov
or
pop
hlt
in
aad
dec
inc
push
ja
jns
out
out
lret
in
and
push
pop
inc
ret
out
fwait
aaa
outsl
fidivs
push
jle
xchg
sarl
out
jmp
repz
loope
xor
pop
mov
aaa
outsl
fidivrs
hlt
movsl
lds
or
repz
fwait
and
call
sub
jns
sbb
sbb
inc
pop
rolb
pusha
and
xchg
stos
cli
pop
push
sub
or
and
add
or
add
push
out
fwait
aas
mov
and
lret
scas
mov
push
mov
xchg
mov
repnz
xlat
mov
adc
fwait
fwait
aaa
out
or
add
ds
add
pop
jno
int
push
jg
or
cmpl
scas
pop
ret
cwtl
clc
cwtl
test
lahf
aas
call
cmp
lahf
fwait
aaa
out
stos
das
cmc
dec
movsl
xlat
in
mov
repz
call
xor
cmp
test
jns
jnp
out
or
insb
nop
insb
dec
sub
int
aaa
dec
into
xor
push
ljmp
fidivrs
pop
das
jle
rclb
orl
fnclex
inc
outsb
fmull
fbstp
add
out
les
outsb
fucom
sub
jns
pop
jge
enter
pop
adc
scas
xchg
mov
outsl
fidivrs
xchg
sub
mov
aaa
inc
inc
out
lret
ljmp
repz
mov
sar
sar
test
aaa
outsl
fimuls
xchg
push
pop
jns
dec
inc
adc
push
and
out
ret
vunpckhpd
in
sub
clc
arpl
and
mov
sarb
jl
outsb
xchg
das
pop
loopne
cld
test
inc
mov
inc
std
out
lahf
aas
add
sub
jbe
jbe
dec
push
and
out
lret
repz
rcr
mov
sbb
push
and
cld
stc
repz
loope
push
push
mov
sub
mov
sub
mov
or
jg
outsb
fiadds
aas
pop
xor
out
fsubs
jmp
cmpl
mov
cld
stc
cmp
jl
cmp
push
jbe
mov
add
iret
lahf
aas
fs
jo
mov
fisubl
sahf
aas
jg
lock
shl
iret
dec
sub
test
push
aaa
add
frstor
out
fwait
and
pop
sub
lds
scas
gs
mov
dec
cmp
fsubl
aaa
outsl
incb
jge
xchg
rclb
jns
scas
loop
ja
pop
mov
add
fnstcw
cltd
mov
sbb
xchg
or
and
adc
out
push
xchg
in
xchg
lea
lahf
aaa
outsl
fidivrs
adc
les
sub
or
fldcw
xor
sbb
inc
ret
dec
push
dec
fstpl
pop
in
pop
fwait
xchg
or
in
and
int
faddl
inc
mov
clc
jno
ret
lahf
pop
mov
xor
enter
push
inc
fidivrs
jmp
push
or
outsl
ficoms
jne
mov
repnz
mov
or
fwait
adc
aad
lock
aaa
outsl
fidivrs
mov
jge
inc
test
cltd
lock
ss
rcrb
mov
notl
lea
getsec
outsl
fidivrs
pop
cmpsb
pop
xor
ss
out
sbb
fwait
adc
add
push
outsl
fidivrs
pop
stos
popa
xor
adcl
lahf
xchg
scas
ret
dec
in
cmp
mov
lea
mov
nop
lahf
jg
xchg
inc
out
popa
cmpsb
dec
lock
jno
or
adc
repnz
pop
jo
mov
cmp
loopne
sahf
in
mov
cld
mov
test
fwait
aaa
out
adcb
and
cmp
cmc
mov
mov
sub
enter
cmpsl
pop
call
sbb
push
stos
mov
repnz
or
outsl
pop
xor
aas
jg
push
mov
xor
imul
and
lret
cld
jns
mov
andb
outsl
fidivrs
adc
add
outsl
or
mov
int
push
pop
iret
popf
lods
icebp
stos
sub
outsl
fidivrs
fucomi
bound
movsl
popf
xchg
xchg
cmp
aaa
mov
push
imul
and
mov
xchg
sahf
ret
xchg
push
jecxz
xchg
mov
fwait
aaa
outsl
jne
sbb
gs
cmpsl
mov
push
jns
gs
es
aad
stc
pop
add
adc
mov
rolb
adc
sarl
orb
sbb
jae
dec
push
cld
jmp
rorb
adc
mov
jmp
out
rcrl
add
outsl
fiadds
in
lret
repnz
int
cli
test
and
scas
clc
jp
sub
mov
aas
adc
push
ret
and
mov
cltd
js
mov
pusha
test
lfs
aaa
jg
popf
mov
rcr
int3
jge
outsb
shrb
pop
movsb
ror
push
mov
sti
movl
aam
lea
add
fidivs
stos
pop
dec
dec
les
out
fwait
adc
aam
mov
push
aad
outsl
fidivrs
push
cld
testb
fisubrs
dec
ljmp
aam
subps
repz
aas
or
ljmp
mov
jg
cmc
cmpsb
push
cmp
lea
adc
repz
inc
sub
pop
ja
push
ljmp
lcall
or
add
cmpsl
push
out
lahf
pop
sub
aas
mov
pop
jecxz
stos
add
in
fstp
jne
arpl
in
into
cmp
inc
call
ja
push
jno
test
clc
inc
jns
cmpsb
test
cmpsl
lcall
add
outsl
fidivrs
aas
in
inc
jb
mov
sbb
int
cmp
nop
loopne
sarb
daa
mov
fs
pop
lods
cmpl
daa
mov
xor
mov
cld
jecxz
push
cli
pop
sub
and
xlat
push
mov
dec
sbb
pop
mov
push
ss
inc
mov
repz
lahf
cmpsb
dec
stc
sub
xor
dec
jg
cld
stc
out
pop
gs
add
cmp
and
aas
xor
add
imul
inc
cltd
xor
sub
inc
add
xor
mov
pop
iret
lahf
aas
jg
sbbb
mov
subb
add
enter
les
jle
pushf
fwait
int
aaa
outsl
adcl
push
aad
jns
out
adc
push
sub
or
fwait
aaa
outsl
fdivrp
aaa
test
repz
adc
lods
ss
out
outsb
outsl
mov
and
xor
outsl
fidivrs
pmulhw
sbb
sbb
enter
pusha
sbb
shll
sbb
jne
sbb
outsl
sahf
or
iret
lahf
jg
icebp
loope
movsl
fmull
stc
repz
das
add
repnz
adc
stos
mov
sbb
jg
cld
push
aaa
xchg
inc
or
sbb
out
adc
repz
lahf
mov
xchg
pop
push
addr16
xchg
add
xchg
movsb
fwait
aaa
roll
dec
xor
hlt
adc
jns
out
sub
out
add
pop
and
repnz
sti
xchg
cmpl
lock
fwait
inc
das
add
and
add
inc
outsl
fidivrs
clc
inc
lahf
add
fs
xchg
push
pop
xchg
outsb
out
fwait
aaa
mov
mov
test
sbb
dec
bound
push
test
and
inc
int
aaa
outsl
pop
push
test
sbb
jmp
repz
scas
jbe
int3
mov
dec
mov
pop
inc
outsl
fidivs
jae
xchg
pop
mov
ret
out
adc
js
xchg
ss
movl
pop
jp
or
adc
out
lahf
jg
scas
call
das
or
cld
stc
repz
cmpsb
fwait
xor
cmp
lcall
iret
lahf
aas
jg
mov
cli
mov
xor
stc
repz
lcall
mov
mov
aaa
clc
dec
inc
jg,pt
divl
pusha
addl
ja
and
mov
xchg
mov
fs
leave
adc
sub
mov
fwait
aaa
outsl
ficomps
mov
dec
cmpsl
cmpsb
insl
push
int3
fwait
outsb
aas
jmp
and
test
mov
dec
fsub
out
lahf
xlat
and
adcb
or
in
lods
push
dec
mov
fiadds
lret
aad
in
mov
sar
leave
xchg
je
out
mov
imul
push
and
stos
fwait
aaa
outsl
fisubs
clc
xchg
subl
je
jns
out
mov
sbb
mov
popf
les
push
mov
dec
shlb
inc
lret
loopne
fwait
aaa
ja
cwtl
out
pop
cmpsb
testl
push
fldcw
shl
adc
aaa
outsl
fisubs
xor
push
in
jnp
enter
mov
xchg
idivb
jno
fidivrs
scas
int3
mov
leave
iret
lahf
jg
fcoms
mov
xor
mov
aad
scas
lahf
jne
inc
lock
std
fidivrs
addr16
fsubrl
sarl
add
outsl
sbb
adcl
pop
jns
out
psrlq
aad
and
jae
insb
fidivrs
aam
scas
cmp
test
mov
mov
cmc
adc
and
lahf
mov
outsl
fidivs
mov
jno
enter
iret
push
jb
out
in
dec
lret
sahf
mov
mov
gs
adc
popa
sbb
sbb
repz
xor
cld
lock
lcall
cld
cmp
mov
repz
push
ss
adc
xor
xchg
int
fwait
aaa
outsl
add
adc
mov
adc
mov
das
jns
out
repnz
xchg
outsb
pop
data16
cmpl
outsl
fidivrs
sbbb
fbld
jae
ror
sbb
iret
adc
hlt
fdivrl
les
stc
push
loope
cld
outsb
xchg
xchg
aaa
outsl
fimuls
jbe
das
cmc
adc
repnz
sbb
cmp
data16
ret
inc
jle
jno
xlat
aas
test
loopne
mov
xchg
jb
movsl
aas
cmc
pushf
int
daa
outsl
ficoms
lds
mov
out
lahf
xchg
out
in
in
fisttps
and
cld
mov
filds
add
ror
aas
jg
dec
icebp
gs
pop
mov
cld
stc
repz
aas
push
les
dec
ret
mov
xor
ss
and
cli
pop
in
jo
xor
sbb
stos
mov
lahf
aas
jg
cld
sbbb
add
sub
adc
xchg
mov
out
lahf
insb
push
push
out
xchg
lea
iret
stos
movsl
and
jne
shlb
int
aaa
outsl
cmpsl
divb
stos
sbb
enter
jg
xchg
fs
dec
mov
xchg
mov
stc
repz
xchg
pop
mov
inc
sub
push
nop
push
jmp
jg
cld
fstl
or
test
in
out
repz
mov
push
push
call
fdivrl
mov
shrb
jmp
push
cld
stc
pop
cmpl
add
rcrb
ja
outsl
inc
mov
pushf
adc
daa
push
addr16
sbb
bound
adc
cmc
bound
scas
pop
mov
xchg
in
cmp
lahf
cmp
lock
lea
jmp
jg
cld
stc
and
pop
dec
mov
push
mov
out
mov
pop
or
push
dec
mov
cld
stc
repz
sbb
pop
loope
jmp
cmp
and
aas
jg
dec
push
dec
insb
scas
sbb
out
xlat
pop
adc
xor
addb
aas
jg
cld
iret
fistl
adc
icebp
mov
and
fs
cmc
bound
mov
inc
int3
fsubs
pop
push
xor
mov
in
fwait
aaa
outsl
fidivs
jp
jmp
cmc
aad
cmpsb
jns
out
pop
lret
dec
rcll
loopne
das
jg
fnstcw
test
adc
iret
add
iret
lahf
and
sub
lods
mov
lock
jnp
repnz
stc
push
sbb
in
fisubs
sub
cld
stc
repz
cmpsl
lahf
jnp
sbb
pop
xlat
out
in
lahf
aas
jg
pop
or
add
arpl
icebp
mov
xchg
nop
xchg
jns
out
push
icebp
lea
repnz
int3
fstpl
mov
mov
fsubrs
mov
int
sahf
and
jle
mov
mov
outsl
fidivrs
xchg
mov
jns,pn
cmp
push
out
fwait
aaa
pop
jbe
mov
mov
mov
xor
push
jge
sbb
mov
fwait
aaa
out
or
jp
lods
jbe
dec
test
jns
out
or
hlt
in
aaa
mov
jp
inc
aaa
outsl
fidivrs
fistpl
add
mov
fwait
lcall
cmovge
fidivrs
ss
cli
test
add
jo
jecxz
or
push
into
iret
mov
aaa
bound
cmc
xchg
pusha
lock
jg
aaa
outsl
fidivrs
xchg
pop
mov
int3
dec
inc
in
aad
xchg
int
mov
das
imul
js
rcrl
jae
out
scas
pop
stc
push
out
addr16
xlat
repz
dec
adc
sar
jg
cld
cmp
test
cld
nopl
inc
clc
jo
out
lahf
or
jle
ljmp
and
jg
cld
stc
jbe
add
aad
rcl
lcall
out
lahf
aas
mov
js
enter
cld
stc
repz
jp
fs
jbe
es
jg
fs
ffree
cmp
jp
shlb
cmp
fbld
sbbb
sub
into
and
add
sub
sbbb
cld
cld
arpl
cltd
cmp
out
lahf
fildl
aad
das
ficoml
lahf
cld
cld
stc
sbb
lcall
repz
dec
sub
je
mov
and
jg
cld
stc
icebp
adc
inc
dec
push
push
mov
stc
cld
fadds
pop
repnz
lahf
sbb
cld
xor
xchg
fnstcw
mov
pop
pop
sarl
es
lcall
pop
pop
ja
aaa
inc
mov
jecxz
fwait
aaa
outsl
pop
push
outsl
or
repnz
fwait
mov
out
mov
add
cmp
pop
ret
icebp
cmp
fdivp
negb
mov
inc
cmpsl
adc
repz
rcl
pop
cmpsb
sahf
add
pop
scas
shrb
mov
jae
lcall
lcall
fwait
aaa
data16
adc
movsb
out
aaa
xor
lahf
aas
call
sbb
icebp
jno
cld
stc
repz
enter
sbb
dec
xor
jns
push
xchg
adc
aas
jg
jo
push
mov
hlt
pop
fldt
mov
sbb
mov
adc
dec
aas
addl
jns
adc
iret
lahf
repnz
cmpsl
adcl
jg
cld
stc
insb
js
ret
test
xor
rcrb
gs
lahf
aas
dec
sub
and
out
lods
adc
stc
repz
scas
mov
lods
jne
mov
iret
lahf
aas
jg
mov
mov
dec
aaa
stc
stc
repz
xor
out
cmpsl
xor
out
js
pushf
aaa
outsl
add
mov
dec
sub
out
fstl
idivl
mov
outsl
outsl
fidivrs
roll
inc
sub
cmp
adc
int
aaa
movsl
out
sbb
mov
jns
sbb
xchg
shrl
cwtl
popa
int
aaa
outsl
mov
iret
sbb
push
popf
mov
and
in
test
sbb
xor
sub
mov
aam
shr
xchg
sub
jg
cld
xlat
shll
mov
test
jg
xorl
pusha
xor
cmp
xor
inc
sub
iret
lahf
aas
das
sub
and
sbb
and
arpl
mov
mov
leave
fcomip
movb
cmpb
or
fcomip
add
rorb
outsl
fidivrs
or
sbb
adc
lods
mov
shll
cli
daa
dec
jae
fdivrl
lds
push
or
mov
out
lahf
aas
jmp
mov
fwait
mov
cld
stc
rep
pop
loopne
int
icebp
and
dec
mov
xchg
and
lahf
aas
jg
repz
push
and
dec
clc
jle
ficoms
sub
addr16
lahf
rolb
xchg
fwait
aaa
cmp
test
lds
jns
xlat
popa
dec
ja
jo
aad
cmp
xchg
fwait
aaa
outsl
fisubrs
pusha
fisubrs
jnp
jns
out
clc
adc
ret
mov
ja
sbb
outsl
fidivrs
xchg
dec
xlat
sbb
mov
mov
repz
fwait
mov
das
dec
leave
cmc
mov
jns
xchg
xchg
popf
mov
and
jb
std
xorb
fwait
aaa
cmpsl
xlat
sub
mov
mov
fidivrs
jmp
mov
je
jecxz
xchg
adc
mov
insb
mov
test
dec
addl
lock
and
loopne
repz
shll
mov
xchg
aaa
jge
sbb
pop
testl
adc
out
lahf
aas
js
sbb
adc
and
xor
repz
mov
mov
mov
push
lcall
adc
fldl
out
fwait
ja
popf
pusha
or
push
test
popa
and
mov
jg
jae
cmpsl
bound
push
into
int
aaa
outsl
mov
mov
fldl
fsubp
mov
xorb
lds
int
dec
mov
fwait
aaa
outsl
fidivrs
jnp
add
pop
jns
out
out
xchg
xchg
push
cli
negb
mov
push
jb
movsl
or
push
jb
popa
repz
fwait
mov
jbe
lcall
mov
adc
sbb
cmp
es
adc
into
dec
das
xor
pop
inc
mov
mov
test
pop
mov
inc
int
aaa
outsl
adc
cmp
xchg
enter
je
mov
add
cltd
das
jg
mov
adc
mov
or
es
test
or
stc
repz
stos
xlat
and
xor
xchg
imul
inc
add
in
cmp
mov
in
leave
iret
lahf
loopne
mulps
push
jl
repnz
pop
xchg
pop
inc
lret
into
xchg
into
add
lret
mov
icebp
push
sbb
aaa
add
push
xchg
pop
int
adc
and
add
out
fwait
mov
out
sti
jnp
out
gs
aad
outsl
fidivrs
mov
call
lods
data16
and
fwait
aaa
cmp
mov
push
fnclex
pop
fidivrs
scas
fsubrl
enter
push
int
aaa
outsl
stc
mov
movsl
lea
rorb
inc
jbe
mov
push
fstpt
pop
out
push
out
inc
cli
dec
fwait
aaa
outsl
ficoms
cwtl
sub
cmp
cltd
into
mov
lcall
mov
jns
fistpll
into
gs
das
clc
subb
add
push
mov
repnz
mov
sbb
outsb
mov
leave
aam
out
cld
fs
mov
imul
fisubs
ret
pop
xor
jnp
out
lods
in
inc
icebp
in
pop
xchg
in
cmpsb
sti
pop
aaa
outsl
fidivrs
ja
add
pop
adc
std
xchg
dec
push
out
fwait
aaa
inc
test
jo
clc
xor
and
mov
fs
and
stos
loop
fwait
xchg
rorb
fwait
ja
pop
addr16
add
icebp
cli
sti
xchg
xchg
repz
call
notb
and
outsl
fidivrs
imul
xor
loope
and
jge
dec
insl
inc
mov
mov
sbb
rclb
cmc
aam
cmpsl
fsubrp
push
sbbb
clc
lds
adc
test
in
mov
enter
call
scas
pop
lcall
xchg
outsl
fidivrs
add
jl
ficomps
aaa
sub
movsl
out
aaa
and
fidivrs
lahf
cmpsl
insb
sbb
stos
fs
sub
out
int
aaa
outsl
imul
mov
and
out
arpl
xchg
scas
jae
mov
cmpsb
js
pop
cld
stc
repz
aas
push
loopne
aad
sahf
push
mov
mov
lahf
aas
jg
xchg
push
or
daa
pop
dec
and
pushf
dec
cld
stc
repz
xor
adc
repnz
adc
adc
mov
cmp
mov
fisubrl
jle
lahf
aas
jg
ja
test
inc
enter
xchg
js
stc
repz
clc
rorl
mov
mov
cli
imul
cld
mov
movsb
mov
shr
jae
stc
repz
lahf
lahf
xchg
in
mov
fs
cmpsl
sub
cld
stc
add
jmp
push
sub
jle
roll
iret
lahf
aas
movsl
mov
sahf
push
mov
jno
cld
stc
repz
add
cmp
pop
hlt
jmp
or
push
xor
loopne
pop
pop
lret
repz
push
test
ret
inc
cmpsl
sub
stc
and
push
or
hlt
lods
lods
int
aaa
outsl
cmpsl
jmp
sub
cltd
outsb
icebp
insb
or
cmp
mov
push
ja
or
jle
sti
icebp
fwait
aaa
outsl
fidivs
cmp
enter
push
jbe
cld
aam
adc
enter
mov
les
outsl
push
sbb
imul
ljmp
sti
push
daa
fidivrs
ret
es
xchg
rol
jae
call
adc
stos
outsl
mov
out
lahf
jb
fadds
jb
jp
cmpsl
daa
loopne
pop
mov
stc
inc
push
sbb
xchg
mov
aas
push
mov
add
pop
stc
stc
repz
shlb
test
sbb
andb
fisubrl
and
fidivrs
mov
inc
jecxz
fwait
ja
inc
in
dec
rorb
mov
icebp
enter
fistps
repnz
out
insl
cmpl
adc
outsl
fidivrs
les
xchg
mov
je
movsb
aaa
out
orb
addb
iret
insb
mov
jbe
repz
fimull
sub
inc
pop
fs
fidivrs
pop
orl
imul
aaa
outsl
imul
push
dec
dec
pop
cmp
stc
js
jp
fmuls
dec
maskmovq
int
jns
xchg
jecxz
popa
cmp
sbb
xor
fwait
aaa
outsl
add
xchg
lods
shll
jle
add
ret
in
xchg
mov
lea
sub
adc
movsl
push
out
mov
scas
lret
inc
mov
xor
cld
fisttpll
and
fistps
daa
lea
or
jl
mov
adc
inc
adc
fsubs
fisubrl
aaa
outsl
ficomps
outsb
in
cli
ja
add
repz
mov
cmp
push
outsl
fidivrs
lahf
fnstcw
sbb
xchg
ds
and
int
aaa
and
inc
pushf
or
push
add
cmp
out
fidivrs
test
adc
jnp
xchg
fwait
aaa
outsl
imul
cmp
pop
inc
in
loop
jbe
push
pop
int3
mov
mov
out
inc
cmp
sub
inc
int
aaa
outsl
subb
sbb
lods
cli
enter
adc
mov
push
dec
jae
mov
iret
lahf
aas
add
mov
xorb
inc
xlat
int
xchg
cmpsl
pop
adc
jg
enter
sub
clc
pop
aam
sbb
lret
notl
gs
lahf
jg
add
mov
adc
out
cld
stc
repz
leave
sub
and
xchg
push
ret
sbb
aad
lahf
aas
jg
pop
push
push
add
out
cld
stc
repz
xchg
shlb
sbb
test
mov
jl
inc
ja
or
hlt
dec
mov
repz
pop
xchg
cmp
shll
les
cld
sbb
aas
jg
cld
inc
mov
xchg
lods
inc
and
repz
lahf
add
addr16
pop
mov
cld
stc
xchg
mov
push
movsb
stc
push
test
packuswb
into
mov
out
lahf
aas
jl
sub
dec
ret
add
jl
repz
imul
cld
cld
stc
repz
xchg
lods
xlat
data16
leave
insl
rep
jnp
mov
iret
lahf
insb
mov
dec
bound
std
jmp
inc
fisubl
clc
outsl
clc
mov
mov
aas
jg
shrl
out
jb
out
or
dec
cli
aad
lahf
mov
rclb
bound
repz
fwait
or
stos
sub
adc
mov
xor
mov
ret
rolb
cltd
hlt
out
fwait
aaa
push
xchg
out
or
mov
dec
mov
mov
cmp
cmp
inc
fists
dec
mov
outsl
sub
jne
pop
data16
mov
sarl
imul
or
sbb
test
mov
dec
and
int
fwait
adc
enter
call
loope
mov
jmp
lods
sub
scas
shr
shl
cmpsl
sbb
aaa
outsl
sbb
push
stos
and
jg
cld
stc
lds
jno
imul
dec
iret
mov
aas
ret
xor
cli
ret
cld
stc
repz
mov
stc
les
jecxz
lret
push
lods
out
iret
lahf
aas
jg
xor
jb
pop
sbb
sub
out
cmp
adc
repz
aas
push
push
push
sub
filds
cli
outsb
xchg
aaa
out
sub
out
xchg
andl
fsubs
xor
inc
cmp
cmpsl
cmp
sbb
das
push
ja
xchg
cmpsl
out
in
pop
mov
out
mov
jge
push
loope
inc
push
dec
mov
jge
sub
sbb
fwait
aaa
out
jmp
scas
in
stos
jl
dec
pop
pushf
fldcw
sbb
in
add
fmulp
stos
inc
pop
mov
ficoms
dec
jne
out
into
enter
lds
cmp
sub
xchg
jg
stos
mov
in
es
fidivl
stc
repz
push
mov
xor
leave
push
out
sub
aas
jg
cld
xchg
in
pop
int
mov
ret
shll
adc
out
lahf
popa
inc
icebp
push
cmpsl
mov
fadds
ret
pop
xor
cld
stc
ret
dec
ret
lahf
jno
inc
cltd
aam
testl
pop
outsb
in
gs
sbb
adc
fcoms
sbb
outsb
inc
dec
or
movb
or
stos
or
ds
outsb
adc
sar
sub
ja
add
jg
jno
repnz
fwait
loop
xchg
mov
aad
lcall
jg
push
push
lahf
decl
loope
push
cltd
inc
xchg
inc
mov
repz
ds
test
rcr
add
daa
pop
jns
mov
ss
sub
and
in
push
subb
or
cld
stc
push
dec
xchg
mov
sbbl
cmp
into
xchg
or
out
adc
cmp
outsl
ficoms
inc
cmc
pslld
jmp
int
ja
out
mov
adc
repz
jg
repz
repz
sub
ljmp
pop
and
lahf
aas
decl
cltd
adc
xor
out
sbb
adc
lds
jns
scas
js
lds
es
mov
dec
repnz
aaa
outsl
fidivrs
loop
mov
hlt
cli
maskmovq
int
cs
pop
cld
jp
sbb
fistl
loope
jle
cld
stc
adc
repnz
dec
std
std
test
and
inc
xor
cmc
rcll
leave
fwait
push
sbb
out
loopne
loope
stos
repz
mov
cmp
scas
and
shl
repz
sub
iret
push
movsb
test
outsl
fidivrs
xchg
jl
addb
and
fcompl
test
int
aaa
insl
fisttpll
sbb
std
xchg
loop
mov
mov
aaa
outsl
ficoms
scas
sbb
sub
repnz
fwait
push
fcoms
test
dec
sbbl
ja
das
ds
aas
sbb
int
mov
aas
jg
jl
fmul
shlb
push
xchg
cmpsl
pop
ds
lcall
rcrb
arpl
sbb
xor
inc
jle
ja
fs
inc
add
in
imul
pusha
in
repz
lret
jp
mov
xchg
mov
andb
inc
fwait
mov
repz
push
inc
mov
mov
outsb
adc
out
inc
add
push
adc
xchg
lahf
jecxz
cld
stc
aam
ja
pop
cwtl
and
mov
out
fwait
bound
loop
mov
inc
fidivrs
and
fists
inc
ret
xor
jae
aaa
adc
cmpsl
cmp
mov
pop
push
inc
push
scas
cmp
test
incl
aaa
outsl
fidivrs
adc
sbb
xor
inc
push
cmc
enter
add
dec
mov
out
dec
pop
ja
mov
fdivp
push
adc
and
cld
mov
adc
xor
fidivs
jns
iret
ret
mov
add
cs
out
lahf
aas
out
dec
mov
xchg
call
repz
push
xor
push
cmc
jg
iret
lahf
aas
jg
aam
sbb
push
mov
repz
adc
sahf
rolb
lahf
aas
jg
mov
mov
stos
jno
inc
xchg
mov
iret
xor
pop
test
sub
fistps
and
or
into
cmp
mov
inc
addr16
lcall
mov
lahf
aas
jg
push
push
scas
mov
mov
and
repz
push
push
adc
push
mov
xor
scas
aas
jg
cld
sti
xor
andl
inc
repz
lahf
lds
leave
dec
ja
mov
lahf
jg
cld
stc
imul
mov
adc
pushf
sub
fbld
lahf
rcrl
inc
test
cld
stc
repz
push
iret
xchg
sub
mov
or
xchg
aas
jg
ljmp
jno,pt
int
aaa
jg
clc
mov
push
sahf
xor
cmp
jne
mov
lret
scas
xor
pop
repz
mov
rorl
daa
dec
jl
mov
popa
jle
cld
stc
sbb
test
xchg
aad
mov
daa
adc
mov
dec
sbb
mov
cld
stc
pop
stos
cmp
jmp
repz
mov
aas
popf
dec
fbstp
ds
je
bnd
shlb
fcomps
pop
jno
fwait
aaa
inc
or
push
pop
inc
sub
jns
out
lea
or
popa
sub
cmpsl
inc
mov
sbb
xlat
scas
mov
adc
or
aaa
outsl
fiadds
fldenv
add
mov
ret
out
mov
test
mov
mov
add
mov
insl
aam
mov
sub
fwait
aaa
outsl
fidivs
fldenv
test
and
and
cli
and
dec
cmp
dec
repnz
aas
xlat
mov
out
pop
or
insl
xor
mov
fidivrs
xchg
push
ja
mov
pop
call
xchg
mov
enter
sbb
push
and
push
int
aaa
outsl
rorb
or
xchg
sub
mov
popa
arpl
mov
pop
xor
shrl
sub
xor
or
jae
cli
enter
sbb
ljmp
xchg
pop
std
jbe
push
pop
iret
lahf
aas
jg
and
jg
inc
bound
or
bound
daa
mov
repnz
dec
fadds
inc
jge
push
dec
int
insl
xchg
mov
jg
lahf
or
dec
or
mov
push
sub
shll
aaa
outsl
fiadds
data16
iret
xor
jg
rolb
jp
cmpl
repz
lahf
bound
mov
test
rcll
jge
sarb
cld
stc
sbb
or
adc
rcr
imul
mov
mov
xchg
lods
lcall
repz
mov
fcmovb
xlat
lock
aaa
xchg
cld
fs
jns
push
push
mov
pop
repz
jno
pop
mov
les
leave
pop
out
dec
xor
aaa
outsl
fidivrs
push
push
repz
fwait
or
push
xchg
lock
or
fcompl
mov
imul
test
ja
stc
inc
fwait
aaa
outsl
fisubs
cli
pop
dec
stos
dec
lcall
lea
out
gs
pop
leave
nop
inc
xchg
les
test
sub
pop
jns
out
testl
push
fwait
add
clc
js
out
out
hlt
dec
repz
outsl
fwait
ror
xor
mov
jns
es
stc
dec
xor
lret
xor
sbb
fdivrl
pop
and
pop
mov
sbb
inc
test
in
and
mov
cli
xchg
inc
imul
test
sti
jae
test
and
aaa
outsl
ficoms
inc
test
xchg
mov
mov
int
mov
fldl
popa
pop
pop
xchg
jns
repz
jge
or
int
pop
aas
shlb
out
sbb
loope
mov
cmpsb
sub
pop
pop
das
pop
out
inc
jg
xchg
aaa
outsl
xchg
or
or
sbb
fsub
dec
jne
aam
pop
push
lahf
xchg
mov
pop
mov
outsb
adc
data16
sub
fwait
aaa
outsl
sbb
push
dec
push
sbb
jns
out
fucomp
cmpsl
lods
mov
lret
in
mov
sti
test
fwait
aaa
outsl
fdivp
aas
mov
mov
nop
adc
pop
int
ljmp
pop
jecxz
dec
adc
call
inc
cmp
fstl
xor
aaa
dec
lods
inc
sarl
xor
add
test
sub
fsubp
nop
loop
push
jnp
push
sbb
stos
lcall
int3
loopne
jl
mov
rorb
ljmp
dec
ds
and
mov
sahf
aas
jg
inc
pop
jecxz
lods
fsub
mov
daa
ds
jmp
inc
mov
mov
nop
mov
sar
incb
repz
lahf
and
mov
inc
mov
mov
lret
mov
push
jg
sub
cld
pushf
pop
push
aad
and
outsl
ficomps
shr
push
cmp
adc
cld
lds
outsb
hlt
xor
mov
dec
lods
inc
mov
cld
stos
or
xchg
mov
adc
faddl
movsb
inc
and
fcmovnbe
aad
out
xor
cwtl
leave
push
dec
imul
inc
lcall
adc
push
cs
cs
pop
insl
aad
je
mov
scas
imull
cmpl
mov
fistps
movsb
jns
jl
das
adc
jnp
loope
adc
jmp
mov
pop
popf
pop
pop
pop
xor
int
aaa
inc
pop
test
push
faddp
int3
divb
jns
out
sbb
lret
inc
adc
pop
mov
add
push
inc
fimuls
ret
pop
addr16
shll
ss
adc
mov
xchg
iret
lahf
aas
inc
jl
cmc
jge
and
mov
hlt
popa
fs
push
cli
push
shl
xchg
fsts
cld
ja
shlb
and
pop
fistpll
push
pop
pop
aas
jg
shrl
in
fs
inc
push
sub
lahf
fsubl
dec
dec
icebp
cli
repz
aaa
outsl
fidivs
and
jmp
in
test
lahf
xchg
xchg
mov
mov
or
aam
mov
ja
test
aaa
pop
stos
ret
daa
repz
add
pop
or
push
xor
outsl
fidivrs
cmp
jmp
repz
fwait
inc
sub
inc
cs
lea
cmp
cmpsb
lods
data16
sbb
xor
adc
fwait
aaa
stos
insl
push
xchg
mov
lods
cmpsl
iret
fidivrs
adc
mov
mov
aaa
outsl
pushl
mov
sbb
jns
out
popa
pop
pop
jb
cmp
sub
inc
pop
fstps
iret
test
stos
ja
lahf
out
sbb
jg
aad
test
jns
outsb
movsl
aad
add
loop
push
repz
lahf
ds
cmp
andl
aaa
or
push
outsl
fidivrs
andb
and
out
fwait
aaa
xchg
outsb
push
cmpsb
cmp
sbb
aas
clc
enter
xor
rcll
das
cs
iret
lahf
push
inc
add
sub
jl
sub
dec
icebp
or
repz
lahf
jmp
or
dec
shl
mov
mov
inc
jg
cld
stc
inc
adc
bound
mov
xchg
lahf
aas
fistpl
xchg
jmp
add
mov
das
push
jnp
cmp
outsl
jne
sub
aam
jo
repz
adc
stos
scas
fs
fs
outsl
fidivrs
inc
and
dec
mov
fwait
imul
mov
jle
sbb
or
enter
sub
jbe
pop
pop
aaa
outsl
fidivrs
testl
cld
jecxz
fcomps
push
cltd
and
jp
repnz
sbb
xor
dec
dec
xchg
iret
lahf
aas
jg
fidivs
or
in
shll
cld
stc
repz
sub
rcl
inc
test
push
xor
mov
lahf
cld
mov
cmpsl
sbb
imul
outsl
ret
iret
fs
sahf
imulb
out
cld
mov
mov
jae
lret
sbb
lahf
aas
jg
pop
sub
bound
andb
lods
dec
inc
hlt
iret
dec
out
ja
xchg
dec
adc
test
js
pop
mov
jno
lods
adc
out
fwait
mov
jbe
ret
out
jne
std
rolb
mov
je
xchg
out
fisubl
aas
hlt
repz
jle
ja
gs
stc
xlat
fcomps
cld
stc
les
cwtl
add
xchg
outsb
inc
or
sub
test
cmp
repz
jns
mov
ficoml
pop
stos
and
fidivrs
mov
mov
add
int
leave
jno
jno
or
cltd
xchg
sub
inc
xor
inc
js
test
in
das
jecxz
into
imul
push
jno
aaa
outsl
ficoms
jmp
shlb
cmpl
inc
fdivp
ficompl
ss
daa
mov
cwtl
addr16
fildl
dec
das
adc
ja
and
dec
out
mov
ficoms
in
sbbl
sub
push
pop
mov
xor
mov
stc
repz
call
sub
and
arpl
jle
cld
xor
mov
ss
movsl
push
xor
inc
insb
inc
push
out
rcrl
int
stc
fimuls
popa
sbb
jae
es
es
sub
jno
mov
pop
hlt
leave
push
outsb
testl
outsb
jns
jl
xchg
xchg
sub
fidivrs
sbb
popa
sub
jns
out
aas
jg
sahf
xor
arpl
jb
lret
fidivrs
xchg
test
and
int
jp
cs
xor
xchg
push
fdivrl
jb
mov
hlt
add
cmpsb
addb
sbb
repz
cmp
add
cmp
mov
into
and
ja
jg
sarb
push
in
fs
lock
inc
iret
repz
lahf
lret
pop
loop
pop
loopne
xchg
cmpsl
lods
test
fstpt
stc
stc
arpl
or
cmp
push
aaa
outsb
cmc
ret
repz
lahf
outsl
sti
loop
sbb
aaa
mov
mov
push
push
stos
push
lea
out
lahf
testl
cmp
gs
or
in
sti
movb
aas
xorb
and
and
cmpsb
cmp
insb
push
jbe
and
hlt
fcoml
push
jns
out
inc
scas
daa
mov
mov
cli
arpl
outsl
fidivrs
pushf
out
cmpsl
popa
mov
fwait
enter
pop
push
adc
aas
js
ljmp
insl
fs
adc
outsb
insl
insb
or
test
in
mov
addb
repz
dec
notb
dec
jae
inc
arpl
sub
sub
cmp
int
aaa
outsl
cld
std
lods
or
sarl
repnz
xchg
mov
xchg
sbb
enter
or
loop
iret
lahf
aas
jg
mov
imul
stc
repz
test
inc
cmp
mov
xchg
and
jg
loopne
and
movsl
nop
movsl
inc
pop
mov
call
gs
mov
dec
inc
sub
call
fstp
mov
aaa
outsl
cld
cmp
adc
inc
adc
fistpll
sbb
test
or
cmpsl
xor
adc
fadds
orl
in
push
iret
sahf
imul
mov
sub
rorb
dec
adc
cli
sbb
outsl
andb
mov
jb
push
push
fwait
jb
outsl
lret
lret
divl
add
or
jbe
pushf
in
sub
int
aaa
iret
movsb
and
cmc
outsb
dec
and
repz
daa
mov
and
jo
test
xor
pop
shlb
imul
int
xchg
fwait
jae
add
xor
xchg
adc
cmp
xchg
int3
fsub
pop
aaa
outsl
fidivrs
mov
jle
sbb
xor
fwait
aaa
out
je
or
and
pop
pop
push
add
mov
xor
cmp
inc
adc
push
in
ja
aas
jbe
push
add
out
cmpsb
and
out
fwait
aaa
jg
cli
jb
or
shll
mov
imul
ljmp
jg
fwait
aaa
outsl
and
out
les
mov
fidivrs
shr
jmp
outsb
ror
fwait
aaa
outsl
sbb
dec
data16
clc
push
pushf
mov
inc
int
xchg
daa
jg
adc
push
push
aaa
and
punpckhwd
adc
xchg
pop
xchg
stc
repz
in
loop
jecxz
call
das
push
xchg
scas
xor
or
cmpb
in
fwait
aaa
add
cmpsl
movsb
inc
pop
pop
jb
jns
out
or
push
xor
sbb
aaa
outsl
fidivrs
out
in
cli
and
mov
dec
mov
outsb
into
inc
xchg
pushf
aam
fwait
aaa
out
xchg
in
jo
sbb
push
xchg
adc
adc
es
lds
jp
decl
inc
aaa
outsl
fidivrs
sbb
sub
mov
dec
pop
stc
shll
repz
lock
jb
lcall
fidivrs
out
mov
add
call
loopne
fwait
mov
add
xchg
test
sub
lahf
aas
dec
test
das
cmp
add
scas
mov
mov
and
pushf
jbe
pop
cwtl
in
and
jbe
outsb
testl
das
mov
jp
xchg
int
aaa
outsl
cmc
mov
popf
mov
inc
les
jns
out
sbb
jbe
inc
dec
add
mov
out
adc
push
daa
pop
cmp
addb
icebp
daa
aaa
aad
xchg
enter
jge
dec
mov
fidivrs
stos
clc
enter
mov
push
int3
shlb
int
aaa
outsl
dec
in
pop
mov
pop
ljmp
xchg
pop
pop
mov
adcl
and
dec
fwait
aaa
outsl
ficomps
add
sub
cmp
cli
xor
sbb
int
sahf
sbb
int3
push
ljmp
je
fidivrs
inc
insl
xchg
mov
or
or
xchg
ret
cmpsb
mov
pushf
fidivrs
arpl
adc
loop
mov
ds
maskmovq
divl
ja
enter
add
mov
and
rol
in
daa
aas
jg
aad
rol
es
pop
mov
mov
call
cmovle
cmp
fidivrs
int
push
stos
clc
test
negw
jno
mov
xchg
xchg
xchg
fwait
ljmp
imul
mov
pusha
sbb
pop
mov
push
fwait
aaa
outsl
fidivs
adc
loop
adc
out
mov
stos
jno
adc
dec
cmc
push
inc
aaa
outsl
fidivrs
sub
ret
neg
cli
sub
repz
fwait
lods
xchg
cwtl
ljmp
cld
cs
sub
mov
je
sub
add
sbb
fists
sub
mov
inc
mov
cmc
push
push
mov
pop
push
xchg
mov
nop
int
adcb
dec
sbb
sbb
lcall
pop
adc
dec
cmc
nop
out
dec
mov
jns
jno
lods
jg
jl
xchg
cmp
repnz
mov
mov
and
xor
fidivs
int
push
adc
nop
aaa
outsl
andb
aam
decb
and
cwtl
mov
inc
imul
push
inc
sbb
mov
out
stos
xchg
inc
xchg
fs
jns
out
sbb
dec
mov
push
push
adc
daa
loopne
and
sbb
xchg
iret
stos
and
pop
or
mov
ret
inc
sub
subb
test
sub
leave
sti
cwtl
stos
daa
xchg
cmpsb
loope
inc
psrld
scas
xchg
sti
mov
sub
or
orb
mov
adcb
mov
popf
das
mov
fildll
jo
into
aas
das
stos
sub
mov
inc
sub
pop
pop
inc
lods
pop
ja
jnp
jp
add
ljmp
adc
sub
push
movsb
push
inc
stos
iret
cmpsl
adc
jns
fbld
jl
aaa
outsl
or
and
xchg
loopne
mov
push
notb
xor
pop
pop
inc
aas
stc
cld
rol
dec
testl
repz
jg
pop
aas
mov
push
insl
xchg
push
lahf
and
push
push
movsb
mov
fcmovbe
cmp
push
shll
shll
jg
push
das
xchg
sub
lods
fildll
xchg
xor
mov
lock
cmpsb
out
xchg
fildll
loopne
lock
popa
nop
cmovnp
push
dec
aaa
sub
jbe
out
sub
or
shl
out
push
pop
xlat
aas
cmp
lret
icebp
xchg
add
outsl
stos
sub
xchg
sub
jbe
out
fwait
pop
out
mov
jnp
jle
shlb
jns
xchg
add
sahf
loop
pusha
stos
and
push
imul
mov
mov
repz
mov
mov
loop
cmp
mov
movsl
jecxz
add
mov
push
pop
sbb
iret
mov
loop
lods
scas
push
cld
stc
repz
call
dec
dec
je
xlat
xchg
jb
pop
iret
lahf
aas
jg
pop
push
or
mov
decl
stc
stc
repz
in
inc
dec
out
and
int
or
decb
mov
sub
stc
mul
out
mov
test
push
mov
dec
pop
stc
sub
cmp
add
lret
sarl
call
jns
je
add
mov
mov
mov
dec
pop
xchg
mov
inc
mov
mov
and
ja
cmp
int
aaa
pop
xor
inc
mov
popa
iret
sahf
mov
scas
clc
dec
repz
fiaddl
cld
nop
sahf
ret
aaa
cmp
jns
popa
adc
ret
add
int3
cmc
dec
dec
aaa
inc
push
cmpsl
shr
jmp
repz
fwait
aam
add
fsubrs
outsl
fidivrs
ds
cmpsl
push
orl
pop
jmp
fwait
aaa
xchg
cmc
push
rcr
sti
imul
cld
cld
cmp
lds
xor
fwait
and
jns
xchg
mov
outsl
fidivrs
daa
fstl
or
out
adc
dec
lcall
outsl
fidivrs
adc
dec
inc
adc
fisubl
inc
ss
cwtl
mov
aaa
outsl
jmp
mov
push
pop
push
mov
cld
jmp
aas
dec
mov
arpl
ja
pop
jns
cmpsb
fistpll
cmp
pop
inc
sub
pop
add
stos
aas
outsl
fidivrs
mov
dec
movsb
jmp
dec
roll
mov
jb
jns
out
insb
xor
push
jmp
dec
ficompl
cmp
add
push
jns
out
cs
mov
jbe
scas
xor
adc
mov
lds
outsb
mov
ljmp
push
divl
xchg
cmp
and
loopne
lock
out
sbb
stc
repz
pop
js
sub
flds
jle
cmp
sarl
cld
lret
cmc
fsubrs
sub
mov
iret
lahf
fs
scas
sub
call
dec
adc
cmc
sub
cwtl
cmp
mov
sahf
lret
mov
push
mov
out
addr16
jns
out
js
std
push
sti
fstpt
insl
ret
sub
mov
cmp
clc
and
sbb
sub
ja
xor
push
mov
dec
and
aaa
arpl
enter
cld
stc
adc
pop
cmc
mov
mov
lahf
aas
rcrb
pop
jp
xor
out
lock
movsb
repz
cwtl
or
das
cs
inc
jl
repz
sub
sbb
sub
divl
stos
mov
ljmp
and
inc
push
fs
push
leave
frstor
xchg
dec
dec
mov
jb
xchg
lahf
jg
xor
dec
into
addr16
dec
notb
cld
aaa
push
and
adc
int
mull
lret
sbb
outsb
lcall
mov
push
enter
lods
out
jl
push
out
lahf
aas
or
add
sarl
pop
cld
stc
repz
inc
cmp
jl
xor
test
jg
inc
call
pusha
jns
pop
sub
cld
stc
repz
stos
inc
fsubs
sbb
sbb
sarb
aas
jg
bound
and
clc
xor
stos
push
cltd
sti
mov
repnz
mov
lods
sub
mov
xchg
out
jecxz
lea
sti
push
adc
int
aaa
push
in
push
sbb
cmp
pushf
mov
mov
push
push
and
sbb
das
dec
adc
mov
imul
scas
and
das
sahf
das
mov
out
fwait
xorb
cmp
out
loop
fwait
loopne
inc
xor
into
insb
data16
pop
outsl
fidivrs
mov
push
std
jmp
aaa
mov
iret
mulb
mov
scas
cmpl
pop
mov
mov
mov
inc
pop
aas
jg
sbb
lret
pusha
cld
xchg
cli
imul
lahf
push
mov
out
fdivrl
out
lahf
aas
cmpsl
xor
sbb
push
lret
jg
cld
stc
repz
add
outsb
out
mov
decl
lahf
aas
jg
dec
es
shlb
stc
repz
add
imul
int
mov
pop
xchg
repz
daa
xchg
inc
sub
pop
cmp
cmpsb
pop
mov
push
aas
adcb
fidivrs
jne
stos
push
ds
jg
mov
repz
fwait
mov
leave
mov
xor
lcall
mov
lock
cli
mov
lahf
cmp
out
jne
out
fwait
aaa
fimuls
repz
or
mov
aas
jo
mov
sub
push
mov
shll
jmp
int
aaa
out
mov
mov
test
mov
mov
repz
stos
cltd
xor
jle
test
js
aaa
outsl
and
jb
out
fiaddl
sub
int
stos
push
push
mov
adc
stos
or
outsl
fidivrs
fs
int
fsts
push
fdiv
xchg
int
push
lahf
out
and
sbb
or
addr16
cmp
lret
cs
hlt
ljmp
inc
mov
xor
sbb
mov
cli
jmp
dec
rol
xor
inc
mov
daa
lahf
sahf
fsubrl
pop
pop
adc
fidivrs
lahf
dec
mov
xorb
lcall
mov
outsb
dec
in
sbb
lds
repnz
aaa
imul
aaa
outsl
cli
arpl
push
rorb
stos
add
ret
sbb
repnz
sti
xor
ja
iret
inc
cmp
iret
push
add
mov
aas
pushf
inc
cld
addr16
hlt
lahf
add
push
mov
mov
dec
inc
jg
xor
push
cmpsb
lahf
aas
jg
cmpsl
inc
in
leave
rcr
cmp
add
mov
iret
test
inc
or
pop
dec
iret
lahf
jg
xor
mov
add
mov
mov
fidivrs
adc
jle
enter
aad
daa
aaa
outsl
aam
jae
pop
test
dec
cmp
mov
out
data16
sar
ds
cltd
jno
out
fwait
aaa
xchg
pop
popa
stos
fdiv
aas
jns
ret
inc
cmp
sub
adc
fwait
jmp
jg
fcompl
jmp
outsl
inc
sbbb
aas
dec
mov
stc
repz
jl
xchg
imul
js
lods
sub
cld
loopne
mov
add
mov
push
int
adcb
jns
xor
clc
cmp
icebp
xchg
nop
cmp
bound
cmp
jle
cld
xchg
call
faddl
out
cld
stos
lea
mov
push
ss
mov
out
addr16
jp
xchg
mov
mov
aaa
out
sub
icebp
aad
outsl
sub
out
fwait
adc
jmp
pop
cs
cmp
jns
xchg
push
test
xor
sub
inc
mov
je
je
outsl
fidivrs
mov
jle
cmp
test
orb
cmp
mov
lret
ror
pop
adc
xlat
mov
stos
push
adc
faddl
pop
mov
scas
xchg
out
add
jle
and
js
imul
dec
mov
or
mov
in
adc
jge
pop
repz
sbb
and
cwtl
or
orl
mov
ljmp
js
add
xor
repz
dec
mov
pop
mov
adc
stc
push
cli
icebp
hlt
leave
mov
push
iret
lahf
jg
jmp
xchg
dec
jne
pop
cld
stc
repz
cmpsl
pop
dec
pop
push
fsts
shrb
adc
das
pop
sub
adc
cli
aaa
cli
pop
je
adc
insb
push
punpckhdq
xchg
mov
jg
push
outsb
cmc
or
cld
mov
jne
dec
arpl
test
iret
lahf
aas
jg
push
scas
xor
aas
clc
jnp
and
repz
std
adc
pop
sti
adc
pop
popf
push
push
jg
dec
movq
pusha
imul
aaa
out
stos
xlat
mov
sbb
mov
inc
aas
add
aaa
outsl
stos
lea
testl
out
fwait
popf
and
or
testb
xchg
cmp
push
out
jns
out
lcall
fstps
and
add
aas
imul
gs
in
ret
sub
popf
push
cmp
push
loope
and
xchg
nop
xchg
insb
in
fwait
ja
mov
fbld
inc
popa
mov
leave
int
in
fwait
mov
jo
mov
mov
dec
outsl
fidivrs
out
int3
sbb
rclb
js
mov
and
or
xchg
push
adc
daa
out
mov
sti
mov
aaa
inc
pop
lahf
outsl
fimuls
xchg
cmp
jg
cld
jmp
lcall
mov
out
ret
lahf
aas
add
mov
dec
mov
jl
sub
repz
je
movsb
lods
mov
lods
cmp
push
adc
and
or
stos
andl
ss
xor
leave
push
and
xchg
pop
or
pop
mov
les
cmpsb
iret
lods
adc
add
clc
pop
and
add
enter
iret
iret
lahf
ds
negl
scas
das
fs
sahf
testb
xchg
insl
sbb
call
push
mov
das
in
and
push
sahf
arpl
call
ja
add
stos
test
xchg
pop
stos
push
cmp
out
lahf
sbb
pushf
jo
add
dec
mov
cmpsl
jnp
jg
cld
stc
push
aas
push
mov
bound
push
int3
outsl
xor
iret
lahf
aas
add
fistl
sub
idivb
insl
cld
cld
stc
repz
push
outsl
fdivrs
cmc
iret
mov
or
iret
lahf
jg
sub
pop
sbb
in
repz
fs
jb
cmp
push
cmp
sbb
loope
out
mov
cwtl
int3
cmp
xlat
push
add
fimuls
push
xchg
fstps
jg
repz
dec
inc
xor
inc
icebp
mov
aad
aaa
outsl
fidivrs
xchg
push
push
jg
mov
int
fwait
pushf
ficompl
or
mov
imul
jns
sub
aas
shlb
pop
add
xor
cmp
sub
or
aaa
and
repz
xchg
lret
scas
dec
mov
jge
cmc
mov
mov
lahf
push
jne
shlb
stc
dec
mov
adc
mov
addr16
loope
rclb
mov
aas
lea
inc
insb
and
mov
xchg
push
fistpl
repnz
outsl
mov
add
jg
aad
fisubrs
enter
dec
gs
lahf
in
and
xchg
es
sbb
jg
cld
stc
pushl
ret
xchg
ds
pushf
xor
adc
daa
lahf
aas
insb
push
add
hlt
andb
pop
out
add
pop
ss
lock
sbb
jg
cld
outsl
sub
mov
ja
xor
push
repz
lahf
jmp
push
in
int
xor
jne
int
mov
cld
stc
aas
mov
push
inc
fwait
mov
push
inc
sub
lahf
aas
js
outsl
mov
bound
mov
add
lahf
ja
inc
mov
xor
out
fwait
add
sub
repz
data16
cmp
outsl
fidivrs
adc
clc
je
mov
lahf
aaa
cld
and
pop
pop
and
repz
outsb
xchg
fnstenv
adc
fwait
aaa
outsl
fisubrs
or
rorl
push
rcrl
stc
dec
jns
out
testb
pop
dec
jmp
mov
outsl
fidivrs
stos
xchg
leave
xchg
push
xchg
mov
icebp
cmc
enter
cmpsl
push
xor
or
cmp
jns
out
sbb
repz
push
or
aad
inc
shlb
mov
and
repz
scas
sbb
dec
paddw
aam
aaa
outsl
fidivrs
sbbb
xor
add
mov
ss
mov
out
sub
lods
lods
pop
xchg
inc
js
inc
and
mov
push
sahf
bound
add
stos
pop
stos
inc
cltd
and
jle
loopne
pop
testl
pop
mov
les
dec
les
dec
inc
pop
inc
inc
mov
daa
inc
sbb
inc
inc
push
rclb
mov
adc
fsts
cmp
shrl
xor
je
cmp
inc
inc
and
cwtl
inc
das
mov
stos
and
fisubs
outsl
inc
sub
xchg
mov
leave
inc
inc
mov
inc
outsl
inc
sub
mov
sbb
fwait
aaa
outsl
fsubs
fdivrs
nop
lahf
cmp
call
nop
xchg
or
lock
iret
jge
jmp
mov
mov
lahf
sarb
fidivrs
mov
push
push
adc
daa
loopne
or
leave
inc
lcall
mov
repnz
rcll
pop
xor
repz
sub
sbb
xchg
std
lods
aaa
lret
jecxz
aaa
add
jge
dec
jmp
div
jno
les
and
sbb
decl
jns
out
mov
test
mov
sub
adc
fiadds
sbb
cwtl
loop
sbb
lock
rcll
mov
stc
mov
je
cmc
movsb
ja
push
pushf
ja
aaa
and
push
cmp
lcall
cld
jge
repz
ds
cld
std
lea
ja
xchg
inc
aam
mov
mov
int
aaa
popf
push
cmp
das
dec
mov
in
pop
gs
scas
push
roll
daa
inc
les
repnz
jmp
call
cmpsl
xchg
xchg
into
sbb
enter
jmp
test
aaa
out
test
inc
testl
int
stos
inc
xor
cmp
mov
or
lahf
or
shll
sub
mov
scas
mov
hlt
pushf
andb
pop
lods
cmpsl
mov
repz
adc
jp
pop
inc
lret
std
clc
insb
push
jge
cmp
push
push
outsl
faddp
jecxz
inc
push
adc
out
adc
adc
mov
ud0
mov
ds
add
mov
inc
stos
nop
fidivrs
push
into
iret
scas
pop
jg
fwait
aaa
outsl
mov
jp
test
test
ror
bound
out
roll
mov
orl
and
push
jle
lret
or
stc
ret
daa
sbb
mov
shlb
lods
and
jg
push
fildl
or
dec
push
xchg
mov
daa
sub
jns
stos
push
xchg
sub
cmp
mov
xchg
fwait
aaa
dec
cmp
push
movsl
out
fwait
ja
pop
cmp
mov
mov
hlt
fcoml
inc
scas
daa
sbb
insb
ficomps
pop
bound
lea
out
rcl
insb
clc
fscale
cmp
xchg
mov
cmp
sahf
pop
and
xor
outsb
enter
xchg
dec
push
iret
lahf
aas
hlt
and
jnp
mov
cld
stc
repz
out
push
es
hlt
aad
cmp
out
popf
and
pop
ja
pusha
call
iret
add
jns
stc
repz
sbb
mov
outsl
in
out
repz
jg
aas
jg
cld
ja
pop
lret
dec
dec
pop
push
lods
fbld
loopne
lahf
pop
cmp
inc
testl
fprem1
jbe
outsb
roll
mov
inc
ficomps
repnz
sub
mov
out
bnd
shll
jmp
iret
lahf
ds
fmull
cmp
push
aam
adc
repz
mov
int
add
subl
push
call
push
test
call
push
iret
in
test
call
sbb
ds
pop
push
pop
sbb
imul
push
pop
jecxz
mov
pop
sub
call
das
call
lods
call
bound
call
mov
dec
mov
xchg
call
mov
inc
sub
xchg
pop
sub
mov
mov
call
aam
xchg
push
inc
sub
add
pop
test
add
bound
and
xor
call
push
lods
push
or
xchg
mov
jg
push
pop
push
faddp
adc
inc
and
call
push
call
push
movsb
mov
iret
out
push
call
push
adc
add
call
imul
lahf
sub
cmp
inc
cmc
call
mov
push
lods
call
mov
call
lahf
call
sub
inc
inc
fistpll
inc
call
push
jg
pop
lds
call
mov
mov
pop
mov
pop
sub
pop
call
out
loop
rorl
call
inc
xchg
mov
mov
out
das
push
call
out
call
push
call
adc
pop
push
lods
pop
call
adc
push
adc
adc
push
xchg
in
mov
call
pop
sub
aas
mov
push
sbb
xor
push
inc
xchg
outsl
call
inc
call
push
mov
adc
mov
adc
xchg
mov
adc
call
xchg
push
adc
call
adc
xchg
adcb
call
dec
call
in
out
pop
test
inc
movsl
aad
call
call
mov
mov
call
mov
notl
aam
mov
aas
call
cmpsl
call
or
mov
call
lods
call
sub
call
daa
call
mov
inc
lods
call
dec
inc
out
pop
sub
jmp
pop
dec
adc
enter
call
inc
call
imul
xchg
test
jle
push
sub
or
aaa
jg
loope
repnz
jg
shll
pop
call
inc
xchg
call
adc
push
mov
call
adc
cld
mov
jp
push
shr
aas
mov
lds
stos
pop
imul
jle
faddl
adc
sbb
movsb
sub
inc
sub
inc
lods
call
mov
mov
mov
call
shr
out
gs
and
push
adc
call
or
call
hlt
mov
inc
xchg
mov
mov
stos
adc
call
ja
in
push
xor
mov
call
push
outsl
call
mov
xlat
aas
pop
ror
sub
call
sub
xchg
out
iret
lods
sub
add
sub
inc
das
add
cmp
call
mov
call
dec
call
mov
pop
mov
mov
call
test
lea
adc
nop
loopne
call
inc
call
push
stc
fcomps
fcomps
arpl
call
aas
call
mov
pop
adc
push
adc
out
push
cmpsl
call
daa
call
sbb
call
in
leave
jno
add
out
mov
sbb
cmc
popa
adc
out
fsubs
fdivrs
aaa
lock
lock
mov
or
jmp
nop
fwait
ja
xlat
mov
lahf
mov
bound
in
sub
out
rorl
pop
or
pop
leave
repz
fnstcw
jle
jne
fimuls
push
outsl
fiadds
sbb
sbb
pop
sbb
std
lods
loop
fwait
aaa
aaa
lret
jecxz
outsb
push
ja
fs
mov
int
bnd
push
rdmsr
push
rorl
outsl
add
pop
mov
xchg
mov
sub
add
test
addr16
cld
stc
inc
and
sbb
inc
jg
jmp
dec
lock
out
lahf
aas
push
jb
adc
das
sub
je
stc
stc
repz
je
movsb
test
pushf
or
push
cmp
lcall
dec
inc
imull
ds
cld
std
lret
cld
stc
repz
inc
pushl
xor
and
or
push
mov
mov
popf
push
cmp
das
dec
mov
iret
push
pop
outsb
out
ljmp
scas
aas
jg
cld
push
rcrl
daa
inc
les
jmp
call
lahf
xchg
lods
pop
cmpsl
xchg
sbb
in
mov
jns
mov
data16
lds
mov
xor
cmp
mov
aaa
outsl
fisubs
mov
and
sub
ljmp
mov
lods
ja
mov
repnz
lods
test
stc
repz
push
pop
inc
lret
std
clc
insb
addr16
outsl
ficoms
cmp
cmp
jecxz
inc
push
adc
int
aaa
in
adc
mov
repz
psllq
pop
outsl
sub
mov
pop
stos
nop
adc
push
mov
into
iret
scas
mov
pop
jp
fnsave
adc
aad
cmp
ror
push
aad
fwait
mov
and
jns
setnp
sbb
push
jle
lret
and
iret
es
outsl
mov
lods
push
fildl
enter
or
dec
push
xchg
lds
and
idivl
cld
jnp
lods
cmp
jle
mov
cmp
mov
pop
push
movsl
pop
cmp
dec
leave
cwtl
push
mov
add
fwait
mov
scas
daa
sbb
repz
pop
sub
and
outsb
cltd
lea
fnstcw
int
dec
dec
aam
fists
xor
outsb
int
mov
mov
mov
loopne
out
and
and
das
loop
push
es
sbb
add
hlt
aad
cmp
out
popf
and
jge
es
jb
inc
iret
outsl
add
jns
scas
test
outsl
sbb
mov
out
jns
jno
fcomi
fcomi
jecxz
pop
lret
aaa
outsl
fidivrs
push
lods
fbld
cmp
push
ljmp
jbe
push
scas
fidivrs
outsb
roll
and
fldcw
aaa
outsl
mov
mov
push
fldenv
adc
sbb
push
icebp
enter
repnz
dec
sub
add
xchg
cmp
stc
bnd
roll
outsl
mov
int
aaa
inc
outsl
cwtl
and
addr16
mov
mov
sbb
xchg
out
loope
lahf
add
subl
out
test
pop
mov
add
mov
mov
xchg
fisttpl
loopne
mov
mov
adc
and
inc
or
or
fmuls
lea
mov
add
mov
add
mov
movl
insl
add
push
decl
scas
ret
insl
xchg
mov
xchg
add
add
cmp
popa
and
mov
lahf
in
mov
mov
xchg
shlb
inc
rcl
dec
and
mov
inc
adc
mov
enter
imul
push
dec
xacquire
loopne
xor
aaa
lock
mov
mov
adc
cmpl
jno
xor
mov
pop
scas
mov
mov
mov
insb
pop
mov
or
cmp
lahf
dec
int3
push
fiadds
inc
ss
int3
movsl
scas
jns
rolb
adc
pop
mov
and
mov
add
xor
push
inc
mov
test
adc
jns
aad
mov
adc
pusha
sarb
mov
jmp
lahf
sbb
and
ret
inc
inc
xchg
push
pop
das
pop
inc
test
lahf
aas
lds
fs
cld
insl
cmpsb
and
dec
icebp
subl
fistpll
sbb
xlat
sbb
scas
add
and
push
mov
add
incb
rcl
mov
test
or
ret
pop
pusha
fisttpll
lahf
mov
in
or
mov
dec
mov
inc
inc
movsb
jle
cld
stc
cmp
jmp
inc
mov
fmuls
mov
imul
adc
mov
fistl
test
adc
and
xor
push
cmpsl
and
ret
inc
mov
and
push
and
and
mov
adc
dec
inc
jle
mov
xchg
xchg
push
jmp
xor
mov
mov
cmp
iret
mov
mov
iret
lahf
fmuls
mov
lahf
inc
pop
fwait
lss
mov
out
aaa
test
in
outsb
lea
push
lea
enter
mov
andl
and
outsl
mov
daa
sbb
xor
mov
mov
add
aas
insb
mov
out
aas
mov
xor
push
fsubrs
aam
stc
movshdup
xchg
mov
adc
add
jle
outsl
test
mov
insb
mov
or
or
dec
mov
mov
push
cmc
leave
adc
pop
inc
lahf
aas
jg
cmp
int
aas
dec
mov
cli
xchg
ds
out
xchg
xlat
ret
xchg
adc
push
or
xchg
inc
jle
cld
jbe
jge
add
clc
xchg
inc
lcall
cmc
jne
aad
push
pop
add
push
int3
add
xchg
repz
or
add
mov
in
add
test
adc
cmp
enter
add
mov
push
lret
mov
push
xchg
iret
mov
aam
add
mov
pop
pop
jmp
add
push
add
cmp
loope
adc
adc
sbb
adc
inc
dec
push
inc
imul
into
fwait
add
push
fstpl
dec
push
mov
pushf
insl
push
aam
push
icebp
sahf
icebp
push
insb
dec
add
sbb
sub
or
mov
xor
clc
lret
mov
push
jbe
je
shll
pop
adc
add
fnsave
and
jl
aaa
movb
mov
cmc
sarb
cmpsl
sbb
pop
inc
and
mov
inc
adc
sbb
add
cld
sbb
or
pop
mov
mov
and
dec
push
inc
sub
inc
adc
pop
lods
mov
sbb
adc
push
or
unpcklps
inc
sbb
adc
test
add
into
add
movsl
xchg
loopne
add
sbb
inc
sbb
push
push
popf
mov
cmp
mov
inc
les
stc
push
cld
sbb
add
dec
ljmp
push
mov
test
outsl
inc
sub
mov
xchg
push
adc
adc
adc
dec
mov
mov
mov
push
push
test
jmp
jnp
stos
ret
jno
mov
imul
mov
stos
dec
sub
or
inc
adc
xor
jg
add
ret
enter
or
adc
sub
aaa
jnp
or
scas
push
and
aad
pop
xchg
shl
sub
xor
or
iret
or
cmp
or
add
jecxz
jmp
not
sbb
adc
inc
add
mov
mov
adc
cli
or
push
scas
mov
adc
and
aad
mov
inc
xor
in
insl
fcoms
add
sbb
out
and
add
sub
sbb
mov
aam
pop
xor
xor
or
adc
or
or
push
or
int3
fdivrs
loop
push
cmp
adc
mov
enter
out
sub
add
test
jo
mov
inc
adc
test
xchg
jg
cwtl
pop
mov
bound
fwait
adc
adc
unpckhps
xor
loopne
cmc
js
lret
mov
inc
sbb
sbb
je
mov
add
test
sbb
inc
dec
fsubs
mov
and
sub
dec
inc
mov
enter
inc
inc
lret
ret
sbb
js
or
nop
aas
rolb
std
jb
add
lret
pop
and
add
pop
adc
rorl
add
pop
notb
call
popa
inc
adc
cmp
call
lds
add
test
in
insb
push
sub
jae
push
repnz
push
out
sbb
push
lret
or
enter
cmp
cmp
ret
fistl
sbb
and
shrl
lock
xchg
lret
popa
jge
data16
mov
mov
movsb
add
stos
int3
jmp
mov
mov
or
or
pop
adc
cmp
rolb
jo
and
jbe
mov
xor
jb
jle
mov
push
out
call
mov
call
sarl
fwait
cmc
rorb
mov
and
add
cmpsb
or
xchg
adc
or
adc
loopne
cmp
cmp
mov
push
push
icebp
add
adc
or
and
roll
icebp
inc
sbb
adc
fbld
or
xor
mov
add
daa
fmul
inc
mov
pop
mov
cmpb
pop
push
inc
add
and
jbe
adc
pop
push
pop
adc
or
push
sub
or
add
inc
rol
cltd
mov
add
lret
add
cmpsb
sbb
inc
daa
rcrl
push
add
push
xlat
adc
sbb
test
sub
mov
inc
loop
jo
ficoml
sbb
push
popa
or
dec
adc
cmp
inc
sbb
popa
push
jg
cmpsl
or
xor
inc
add
leave
shll
ds
push
dec
adc
xor
push
sbb
or
ret
or
push
pop
add
or
leavew
or
add
lret
arpl
pop
adc
sub
inc
adc
or
mov
js
pusha
pop
rcrl
sbb
xlat
sub
or
jb
les
loop
mov
inc
inc
int
fistps
jecxz
add
adc
jmp
loop
ret
je
xor
lock
sahf
mov
inc
pop
ret
fwait
sub
push
push
arpl
push
addb
scas
aam
leave
addr16
or
xorb
jl
icebp
cwtl
add
adc
add
sbb
xchg
cmp
adc
xor
shlb
test
ror
cmp
adc
cmp
test
pop
push
clc
lock
sub
pop
into
mov
and
ljmp
scas
sarl
aad
adc
mov
int3
jmp
or
sbb
cwtl
add
test
xchg
or
pop
dec
pushf
lret
xor
repnz
clc
xor
lret
lock
sub
popf
mov
aam
repnz
stos
mov
sbb
insl
dec
adc
mov
adc
test
inc
lea
dec
scas
and
ja
xor
imul
cmp
shrb
push
test
bound
mov
test
pop
subl
sbb
fldenv
inc
in
mov
inc
xlat
adc
dec
rcl
rcr
dec
je
mov
aam
dec
je
push
imul
ret
stc
and
mov
movsb
add
xchg
and
add
loope
mov
mov
add
or
subl
inc
mov
xchg
push
or
xorb
jge
or
cmpsl
push
push
lods
test
nop
test
xchg
stc
xchg
xlat
mov
and
inc
rorb
or
addl
je
fcompl
push
aas
xor
enter
mov
push
push
int
adcb
xchg
orl
add
orb
mov
mov
add
addl
inc
sub
int
pusha
lret
or
pop
add
xchg
mov
es
mov
inc
ret
jns
add
dec
add
adcb
push
fsubs
push
xor
sahf
cmovo
add
adc
jbe
movb
sbb
xchg
sbb
flds
xor
nop
ljmp
mov
lret
mov
cwtl
sub
push
imul
test
or
and
nop
iret
add
sub
push
jno
add
add
mov
in
jge
xor
icebp
add
adc
fs
xor
fld
mov
add
sbb
or
test
lret
xchg
mov
pop
adc
inc
ja
imul
add
xchg
imul
cltd
inc
lret
inc
fstpt
mov
mov
popf
insl
das
dec
es
adc
pushf
movsb
sub
add
sbb
adc
pop
inc
push
or
pop
push
or
and
sbb
shl
leave
and
fimuls
js
ljmp
fistl
addr16
inc
lods
add
fiaddl
xchg
jg
and
rcrl
inc
pop
ret
sbb
sub
repnz
add
xor
push
test
xchg
pop
cli
cmp
je
adc
stos
mov
push
or
dec
scas
fwait
insl
inc
or
mov
pop
cmp
loope
adc
movsl
add
or
fs
ror
loope
out
lea
xlat
adc
dec
xor
push
mov
mov
pop
mov
add
ret
push
loop
and
cld
mov
xchg
add
mov
mov
or
pop
roll
adc
sbb
add
sbb
ds
test
ss
adc
jns
rolb
in
fcomip
sub
sub
push
cmp
dec
dec
add
pop
xchg
sbb
movsb
add
sub
mov
add
std
sub
xchg
cmp
cmc
add
sbb
push
mov
xor
les
push
or
push
add
shlb
add
cmp
int3
inc
mov
mov
fwait
je
xor
inc
mov
sub
cmp
pop
cmp
sub
ret
mov
int
adc
out
xchg
ss
pusha
and
adc
push
rorl
mov
sbb
or
inc
leave
sbb
jbe
dec
mov
push
mov
orb
cmpsl
inc
movsl
iret
in
inc
mov
push
or
xchg
rcrl
pop
xchg
mov
call
adc
cmpsb
rcrb
cmp
push
jmp
jo
pop
mov
jns
jecxz
and
sbb
push
adcb
and
pop
pusha
sub
adc
sahf
push
test
rdmsr
adc
lock
and
add
in
dec
scas
test
enter
js
addb
popa
orl
shrb
mov
sbb
fcomps
lret
shll
data16
inc
pusha
push
jmp
push
mov
push
ret
ljmp
push
and
dec
push
push
mov
jecxz
push
bound
cmp
lock
jle
cmp
ret
out
adc
sub
aad
pop
out
mov
xchg
cltd
ljmp
and
fs
js
cmp
inc
adc
test
inc
pop
ret
inc
orl
rcll
sub
orb
ljmp
or
adc
jle
and
jl
jne
xor
mov
jl
xor
mov
xor
dec
sub
mov
adc
xor
dec
in
fdivs
pop
mov
icebp
fdivl
orl
add
pop
xchg
add
lahf
or
shrb
movsb
add
pop
into
push
shlb
mov
pop
into
jl
add
pushl
mov
mov
test
push
rorl
push
and
xor
negb
or
scas
pop
and
mov
inc
int
mov
sbb
xlat
sbb
outsb
add
or
push
sbb
or
add
inc
xor
jbe
inc
shrb
cmp
test
call
mov
adc
dec
shll
repnz
adc
jp
pop
push
or
inc
xchg
sbb
push
mov
inc
outsb
gs
sbb
inc
inc
ficompl
inc
enter
insl
or
xchg
adcb
enter
out
add
test
push
adc
jmp
or
notb
mov
bound
cmc
dec
lret
mov
cmp
subb
push
mov
cli
mov
inc
adc
jnp
dec
popa
loopne
add
enter
mov
pop
adc
sub
out
test
das
mov
fimuls
or
push
xor
rorb
loop
cmp
fsub
jb
sub
adc
shrl
notb
jmp
add
aad
out
pop
cmp
mov
xor
add
adc
push
xchg
data16
push
push
xchg
clc
rol
rorl
pusha
sbb
add
inc
loop
xor
loop
or
fmuls
add
inc
rcrb
pop
mov
jge
pop
inc
pusha
and
sbb
inc
xor
cmp
or
jo
or
fcmovnu
push
adc
fstl
ljmp
sbb
mov
sbb
mov
adc
arpl
mov
jle
inc
pop
or
adc
dec
icebp
and
jmp
enter
jnp
cmp
insb
mov
cmc
dec
fidivl
sbb
in
cmpsl
mov
adc
jo
mov
jno
cmp
push
push
fdiv
xor
sub
fmulp
mov
push
cmp
mov
mov
stos
clc
xlat
movb
or
or
mov
push
mov
xchg
and
xchg
lcall
clc
sub
pop
jle
adc
xchg
movsl
dec
sbb
adc
push
push
mov
xlat
pop
and
lahf
out
sbb
add
aaa
iret
orl
push
lcall
fimuls
inc
push
adc
js
sub
pop
add
mov
push
or
push
ret
movsl
adc
sub
inc
cmpsl
rcrb
icebp
rol
xchg
out
out
adc
ret
mov
gs
or
mov
jne
cmp
xchg
rol
mov
cmp
xor
subl
mov
push
movsb
mov
push
cs
stc
or
pop
mov
call
je
daa
ljmp
mov
dec
mov
add
mov
subb
pop
push
bound
enter
mov
adc
xor
rclb
repnz
lea
or
aam
push
loopne
repnz
pop
adc
enter
dec
add
ds
mov
sbb
popa
pop
jbe
add
or
xchg
lea
mov
mov
pop
cs
adc
repnz
push
mov
insb
test
adc
notb
mov
je
pop
jge
subb
sub
cmp
push
adc
adc
rcrb
inc
int3
mov
mov
cmp
jns
or
mov
icebp
dec
cmp
std
push
mov
rorb
sbb
pop
adc
roll
mov
clc
dec
int3
sub
test
inc
push
mov
inc
leave
ror
inc
inc
cltd
adc
pop
add
sbb
mull
inc
enter
pop
andl
or
add
pusha
or
in
bound
stos
xlat
insl
push
mov
or
jnp
mov
pop
pop
cmpsb
es
mov
jp
adc
sbb
sub
cvttps2pi
push
jne
jae
or
inc
movsb
lock
je
dec
adc
xchg
pop
mov
mov
incb
mov
and
clc
adc
rclb
mov
lret
dec
or
lcall
push
jge
mov
imul
lea
icebp
fdiv
out
dec
add
in
lret
push
es
lret
fistps
pop
xor
sub
mov
sarl
lahf
mov
pushf
mov
sbb
lret
push
sub
leave
dec
shlb
pushf
cmp
lcall
xchg
xchg
sub
or
rcr
cmpsl
inc
adc
add
add
push
mov
sarl
jmp
sbb
and
ja
outsb
dec
mov
or
test
inc
inc
roll
ror
adc
sbb
push
cmpsb
mov
cmp
adc
sub
jecxz
andl
rcl
sub
test
mull
mov
cs
in
mov
push
inc
adc
aad
push
arpl
adc
lds
sub
and
out
or
test
rorb
push
repz
gs
sbb
and
enter
lret
ss
xor
inc
add
adc
mov
mov
rolb
scas
sbb
je
mov
pop
sbb
push
inc
mov
adc
call
mov
pop
dec
cs
adc
push
dec
jns
and
sbb
mov
loopne
push
add
xlat
or
out
ret
jne
or
or
ret
pop
push
push
push
stos
dec
mov
enter
mov
in
rcll
push
push
sbb
roll
in
sub
or
loopne
xor
lcall
add
pop
push
outsl
stos
lcall
jno
and
mov
push
sbb
pop
arpl
negl
xor
pop
cmp
xchg
lock
es
push
hlt
testb
inc
and
lahf
mov
push
test
adc
inc
add
inc
rcll
addb
add
mov
adc
add
pop
ja
add
and
in
lahf
pop
push
adc
stc
and
scas
lcall
sbb
js
cld
add
mov
xchg
xchg
xor
push
mov
lea
lret
ljmp
leave
adc
jo
insb
cs
mov
addr16
mov
scas
adc
mov
mov
sets
add
mov
push
je
inc
inc
jmp
jne
push
adc
arpl
icebp
js
inc
mov
dec
dec
mov
mov
mov
pop
mov
shlb
sbb
push
or
jge
add
sbb
int
dec
fnstsw
xchg
test
adc
mov
inc
movsb
lcall
xor
insl
test
xchg
xchg
xor
dec
mov
mov
dec
mov
sub
dec
adc
call
push
lods
imul
inc
jmp
dec
add
cwtl
rclb
cs
push
xlat
into
call
sbb
or
scas
outsb
push
mull
bound
xchg
mov
inc
sarb
cmp
das
lds
xor
pop
push
adc
xchg
je
subb
pop
xchg
sbb
cmc
sub
adc
popa
loopne
inc
adc
aad
inc
sub
sub
les
or
push
rcrl
roll
sub
stos
jge
and
mov
mov
adc
xor
sbb
mov
jl
aaa
cmpl
test
sbb
add
dec
lock
xchg
sbb
das
xchg
ja
cmpsb
es
rorb
popf
and
sbb
faddl
sbb
xlat
rcll
inc
fsubs
cmp
cmp
pusha
mulb
jo
jbe
sahf
mov
mov
sbb
adc
sti
push
xor
sbb
and
add
adc
push
or
enter
dec
add
popf
push
mov
sbb
pop
adc
sahf
sub
mov
and
and
cmp
xor
clc
sub
xor
test
mov
mov
in
mov
out
inc
enter
inc
and
xchg
sub
ret
dec
aad
and
mov
pop
or
inc
mov
scas
icebp
lret
sbb
roll
push
rorb
out
add
iret
sarb
or
jp
push
repnz
into
or
jo
jge
mov
mov
mov
imul
addb
mov
icebp
mov
into
outsl
cmpsb
call
sahf
out
popa
sti
sub
mov
lahf
pop
inc
add
push
adc
stos
mov
sbb
aad
inc
incl
xchg
sbb
push
out
push
push
or
pop
stos
mov
mov
dec
adc
ljmp
ret
dec
cmc
adc
mov
xchg
adc
sbb
mov
push
into
push
inc
adc
icebp
push
jmp
fmulp
mov
outsl
sarl
adc
pop
adc
mov
int
repz
ficoms
test
push
jo
sbb
push
xor
sbb
or
cmp
stos
adc
cmp
jae
mov
imul
jne
or
jne
sbb
sub
mov
mov
jns
ret
call
aas
xor
fwait
push
mov
and
sahf
lock
jge
into
mov
push
rcll
or
test
das
loop
adc
sub
pop
sub
lret
into
ja
jb
xor
lods
ret
push
push
stos
das
dec
pop
test
mov
aam
pop
mov
rorl
xor
cwtl
push
sub
out
add
ret
clc
shrl
or
cmp
push
cmp
lcall
jecxz
pop
loopne
add
push
or
test
aaa
cwtl
rcrl
inc
push
xor
adc
xchg
add
mov
or
inc
mov
inc
sub
jae
mov
shll
sahf
push
adc
push
xchg
dec
icebp
stos
and
pop
add
or
dec
sbb
add
jmp
jno
ret
adc
xor
insl
leave
jae
cmp
add
inc
pushf
sbb
push
int
js
sub
push
inc
adc
mov
cmp
insb
pop
iret
inc
mov
js
shrb
xor
in
pop
insl
lock
pop
hlt
out
or
push
xchg
jl
stos
or
push
lods
adc
dec
mov
sub
rorb
or
and
cmp
pop
adc
and
mov
xlat
out
inc
jae
mov
jmp
add
leave
jns
add
ret
mov
add
shlb
aad
rclb
orb
fnstenv
mov
push
clc
lret
mov
xchg
add
bound
inc
inc
dec
lds
mov
adc
shrl
lds
xchg
int
repnz
and
pop
mov
popa
push
fs
push
push
dec
xchg
xchg
inc
mov
and
jo
in
add
sbb
mov
lcall
test
out
xor
add
and
shrl
mov
mov
lret
bound
in
mov
fs
add
cmp
sahf
dec
insb
shl
pop
xchg
out
cld
jmp
jae
and
and
mov
pop
xor
roll
call
ret
push
testb
out
or
add
mov
push
fwait
adc
push
test
jl
aaa
sbb
pop
popa
or
cltd
aaa
shrl
into
dec
push
dec
aam
negl
adc
popa
jne
add
push
or
bound
sub
adc
pop
bound
adc
sbb
dec
mov
mov
loopne
hlt
mov
add
adc
int
pop
addb
xchg
daa
hlt
push
add
add
sbb
or
push
dec
outsb
inc
test
sbb
enter
adc
enter
push
xlat
mov
lret
loopne
or
loopne
adc
jmp
xchg
dec
add
insb
roll
ret
mov
call
mov
in
shrl
cmp
or
cmp
rolb
mov
lcall
rolb
lds
icebp
mov
fisttps
rolb
hlt
and
int
xchg
adc
jle
inc
mov
sbb
mov
or
icebp
sub
or
push
push
sub
mov
jmp
or
iret
fs
out
addr16
bound
add
test
jb
sbb
lods
or
cwtl
inc
mov
push
pop
add
sbb
cmpsb
icebp
dec
mov
xor
add
sbb
stos
faddl
insl
fmul
add
xchg
mov
adc
call
xchg
add
lcall
add
test
push
and
xchg
pop
into
lea
inc
stc
outsb
lret
or
add
pop
aam
mov
dec
ja
mov
add
mov
cmp
in
sub
adc
jg
cmpsb
fisubl
addr16
icebp
pop
cmp
mov
push
xchg
cmpsb
or
sub
mov
int
sub
mov
out
pop
sub
xor
rorl
mov
push
adc
int
push
daa
xor
pop
mov
jne
orl
inc
push
leave
jmp
dec
pusha
testb
push
adc
mov
jmp
mov
cmp
ficoml
mov
pop
out
sbb
add
jb
mov
or
scas
add
stos
or
outsb
jnp
push
inc
ret
popa
mov
mov
or
into
rolb
addb
push
mov
cmc
push
mov
push
cli
clc
test
inc
pop
xor
sub
add
test
scas
and
cli
or
mov
jno
iret
mov
insb
or
push
lret
or
add
inc
fsubrl
ret
imul
cmp
mov
jno
daa
xlat
push
xchg
lock
pop
sbb
sbb
sub
or
jbe
mov
add
dec
lock
inc
cwtl
sbb
sbb
mov
inc
aam
inc
xorb
or
mov
rcrb
int
mov
pop
icebp
mov
xchg
js
and
bound
lods
add
repnz
push
xlat
movb
mov
or
sarl
sahf
xchg
sub
or
sub
ja,pn
jl
enter
sub
or
inc
inc
pop
mov
add
mov
add
sbb
stos
pop
and
mov
lock
popa
cld
xor
cmpsb
insl
lea
push
push
inc
int
jle
xor
dec
notl
adc
xor
test
cmpsl
xchg
fdecstp
adc
or
cmp
dec
xchg
loopne
adc
or
shll
insl
push
sub
pop
push
cmp
adc
pop
or
hlt
jns
adc
mov
or
movhps
xor
sub
pop
inc
rcrb
push
push
push
inc
xchg
lret
pop
and
enter
or
push
cmc
or
cmp
adc
and
cmc
jne
stos
xchg
add
pop
or
daa
sub
test
xor
pop
and
or
xor
rorl
cmp
fmuls
sbb
loop
sbb
call
andl
xchg
sbb
sti
mov
jne
lahf
sarb
inc
push
xchg
stos
xchg
ds
bound
push
push
jns
sbb
call
add
leave
fiaddl
pop
dec
loope
jle
mov
mov
roll
popa
or
jo
cs
daa
rorb
push
dec
or
cmc
adc
das
shrl
cmpsl
add
and
cmp
scas
dec
cmpsb
push
daa
pop
sub
push
sub
push
shrb
cmc
mov
mov
push
add
or
cwtl
jge
fadds
cmp
enter
or
adc
or
mov
and
pushw
imulb
mov
push
sbb
movb
and
jmp
movsl
add
sarb
xor
call
lods
push
push
ret
les
andb
sub
mov
add
xor
cwtl
fadds
mov
aam
es
cld
jle
ljmp
inc
push
mov
mov
test
cmpsl
inc
cwtl
xor
out
mov
enter
orl
in
lds
les
add
cmpsl
mov
jo
xlat
mov
enter
fcomps
rcll
pop
into
aam
adc
add
and
cld
and
inc
push
popa
ljmp
dec
push
mov
or
and
xchg
jnp
sub
les
or
lret
adc
add
fistpl
call
pop
rolb
mov
push
adc
icebp
adc
pop
inc
jge
sbb
hlt
add
sarb
sub
pop
adc
add
sub
xor
mov
adc
pop
cmp
sbb
adcb
adc
push
pop
insb
cmp
rolb
hlt
adc
lods
jo
or
xchg
push
lret
adc
rclb
pop
mov
mov
dec
pop
mov
ss
adc
outsb
adc
data16
outsb
jb
test
scas
mov
shll
test
adc
push
jo
inc
adc
or
mov
imul
pop
enter
adc
aas
mov
xlat
mov
shr
bound
cmp
pop
pushf
xchg
adc
dec
jne
jb
dec
sbb
add
pop
enter
mov
inc
jle
push
adc
push
add
pop
or
popa
pop
inc
cmp
xor
clc
test
push
pop
or
and
push
add
push
mov
add
ljmp
idiv
filds
adc
push
push
sbb
cmp
add
shll
mov
pop
adc
negb
test
jns
xor
bts
inc
sbb
lret
and
out
mov
inc
push
pop
add
sbbl
cltd
dec
xor
lock
mov
dec
je
push
mov
lock
ds
or
adc
mov
or
imul
push
add
adc
cmp
and
sbb
push
jp
push
mov
je
into
mov
mov
adcb
xor
push
xchg
mov
orb
jo
popa
mov
les
cltd
dec
mov
pusha
push
pop
mov
sub
xchg
jns
addb
sub
dec
mov
lret
outsb
xchg
or
jp
xchg
pop
js
ret
jb
sahf
sbb
mov
mov
pop
out
pop
push
xor
popa
push
stos
push
call
dec
adc
test
mov
mov
int
jp
push
mov
test
imul
loopne
ret
sub
pop
enter
mov
les
lods
loope
adc
imul
add
push
mov
or
ljmp
mov
xor
or
test
cmp
push
loop
add
rorb
mov
push
mov
fisubl
adc
adc
cmp
pop
push
loope
ret
adc
add
icebp
iret
and
cmp
pop
xor
push
jb
fisubrs
mov
hlt
inc
push
cmp
mov
push
rol
mov
loopne
in
mov
adc
call
movl
stos
lret
sub
inc
or
icebp
in
fldcw
and
adc
adc
test
aam
in
mov
xorl
jp
or
and
sbb
add
leave
int3
ss
nop
pop
popa
pushf
repnz
sti
xor
insl
dec
out
es
mov
push
subl
mov
add
sbb
ljmp
push
jbe
inc
mov
or
and
lods
jnp
sbb
adc
mov
push
loop
arpl
inc
mov
sbb
ret
dec
mov
push
sbb
and
xor
or
sbb
mull
into
and
ror
inc
mov
cmp
pushf
mov
sub
xchg
adc
add
sbb
outsb
add
pop
daa
mov
or
test
jno
mov
lret
xchg
in
loop
orl
add
or
int3
xchg
sub
aad
inc
fdivs
ret
mov
xor
cmp
push
xchg
push
xor
sbb
cmp
sbb
push
fsubrl
add
and
adc
inc
xor
jo
xchg
adc
xchg
xchg
push
jle
repz
fiaddl
sahf
lds
cmp
stos
xor
push
sub
inc
inc
inc
xchg
add
lds
ja
adc
jo
adc
mov
sbb
cli
mov
xor
inc
xor
cmp
pop
xchg
or
and
imul
int
xchg
shrl
ret
rclb
addr16
aas
test
or
sub
inc
inc
scas
jle
mov
or
mov
movsb
out
inc
popl
loope
add
add
inc
sbb
int3
xchg
jo
or
mov
inc
push
mov
mov
aam
push
push
push
lea
or
out
add
cmp
loop
sbb
dec
mov
push
push
pop
stos
sysret
inc
cwtl
sahf
ficompl
or
mov
mov
mov
push
iret
inc
loope
add
stc
adc
test
lret
jne
shlb
xor
stos
adc
inc
pushf
and
inc
add
test
push
cwtl
mov
pop
push
lcall
mov
adc
and
push
ss
sbb
mov
cmp
adc
add
push
dec
aam
xchg
push
cmp
ret
and
add
cmp
lods
daa
rcl
stos
mov
stos
mov
ljmp
jo
and
cs
addb
andb
add
clc
or
testb
push
test
dec
push
fs
pop
mov
sub
add
pop
mov
les
loope
rcl
push
xchg
add
add
mov
adcb
je
add
push
out
or
push
cmpsb
cmp
jmp
adc
sbb
jno
leave
pusha
or
movsl
cli
std
sbb
and
add
mov
adc
push
imul
and
or
mov
sbb
into
jo
or
xor
xchg
mov
pop
sbb
cltd
mov
push
push
sub
stos
lret
adc
adc
sbb
push
pop
sub
inc
mov
adc
adc
loop
xor
bswap
and
or
add
mov
push
call
jo
adc
sbb
mov
js
out
pushf
pushf
lods
xor
sbb
mov
ds
daa
into
das
cmp
push
sbb
shrb
test
ljmp
sub
and
mov
pop
stos
mulb
lahf
enter
bound
sub
push
je
xchg
sahf
mov
inc
xchg
stc
add
test
add
xor
mov
push
scas
mov
inc
addr16
mov
shll
int3
mov
divb
add
aam
enter
inc
xchg
mov
push
ret
neg
mov
shlb
cmp
pop
cmp
daa
pop
aad
push
mov
fcompl
subb
leave
inc
dec
xchg
mov
and
adcb
hlt
mov
mov
xchg
jnp
and
ret
jb
inc
pavgw
sub
lock
gs
mov
inc
les
aas
or
test
enter
jmp
sbb
push
push
fwait
sarl
inc
es
out
mov
test
add
jecxz
or
mov
or
push
jb
mov
mov
ljmp
xchg
and
aad
or
sub
cmp
stos
call
loopne
sbb
sarl
loope
pop
push
mov
and
in
orb
mov
adc
xor
mov
mov
insb
stos
xor
pop
mov
cltd
into
daa
and
dec
push
popf
or
insl
mov
mov
in
jne
add
addr16
mov
and
mov
mov
jl
or
push
inc
xchg
or
push
insb
inc
subl
jb
call
add
inc
jo
mov
mov
aad
add
push
push
pop
adc
push
mov
mov
push
mov
insb
insb
pop
mov
jg
mov
out
adc
and
mov
add
or
mov
bound
or
sub
rolb
into
adc
or
test
mov
xchg
push
add
adc
outsb
sbb
bnd
icebp
push
adc
cmp
adc
sbb
test
jmp
sbb
inc
mov
mov
jl
loope
xlat
adc
sbb
sub
es
leave
and
mov
test
rorb
les
push
aam
cmpsb
jmp
out
push
sub
rol
push
dec
cwtl
lcall
mov
call
xorb
inc
cmpsb
add
int
sbb
sub
cmp
cltd
call
adc
inc
mov
xor
add
jle
sub
nop
xchg
sarb
xchg
loop
in
in
jp
push
add
or
idivb
sub
scas
mov
inc
sldt
mulb
out
or
andl
test
ficoml
adc
push
mov
push
mov
mov
into
mov
adc
rclb
jmp
push
mov
cld
repnz
inc
je
add
dec
lret
pusha
inc
adc
cltd
stos
xchg
xlat
lret
push
add
ret
out
test
sbb
add
cli
cwtl
ljmp
bound
ss
mov
clc
inc
shll
pop
add
inc
seta
push
sbb
aam
dec
mov
dec
pusha
call
scas
mov
lock
xchg
sub
in
adc
stos
and
add
mov
rorb
dec
mov
cmp
frstor
mov
inc
stc
sahf
pop
xor
push
mov
rclb
leave
call
add
add
loopne
xchg
inc
or
and
sahf
adc
xor
mov
or
and
adc
movl
pusha
add
jbe
jp
lcall
push
or
int
cmp
rclb
mov
cmc
add
repnz
cmp
jecxz
insb
lock
xor
inc
cmp
arpl
or
pop
mul
and
add
pop
mulb
jae
xor
in
pop
mov
pop
pop
rclb
jge
sbb
cmp
sbb
shlb
and
and
cmpb
push
xor
scas
addb
pop
cmp
mov
mov
cwtl
push
enter
out
fbstp
mov
adc
call
sbb
xorl
push
inc
add
push
sbb
hlt
add
xor
and
jo
jns
lahf
into
les
cmpsl
pop
arpl
or
adc
pop
add
push
add
mov
adc
cmp
dec
mov
xchg
rolb
and
mov
push
or
sub
lods
ljmp
adc
loopne
jne
movsl
lret
add
daa
pop
sub
in
add
pop
xor
aad
adc
xchg
mov
sub
mov
test
rol
ret
pusha
mov
inc
fcomi
add
adc
scas
pop
test
jecxz
push
movsb
push
bound
movsl
xchg
cmp
inc
add
pop
cwtl
push
ret
inc
lea
enter
loopne
push
cmp
inc
inc
mov
outsl
stos
adc
lods
dec
rol
pop
and
sub
cmp
xor
nop
mov
inc
push
test
mov
fidivl
mov
inc
and
pop
js
inc
jae
cmp
or
es
push
mov
mov
cmp
inc
xchg
cs
xor
push
imul
xor
in
or
popf
push
les
xor
rcrb
aam
mov
adc
into
add
inc
mov
xchg
enter
or
rorb
lock
xchg
js
mov
loopne
pop
sub
mov
or
pop
cmpsb
ret
inc
scas
mov
rclb
and
je
mov
sub
pop
cld
add
jo
cmp
xor
into
in
or
and
int
adc
ljmp
cmpsl
rolb
cli
movsl
jo
inc
cmp
ret
mov
vunpcklps
pop
push
adc
adc
mov
cmpsl
into
orb
into
repnz
inc
sbb
stos
movsl
loop
mov
movsl
mov
adc
ret
fcmovnb
push
lds
pop
in
pop
cmp
test
movsl
mov
je
mov
mov
andb
bound
xorb
mov
psllw
inc
mov
insl
jno
add
test
lret
push
jecxz
bound
and
addl
adcl
sahf
adc
adc
test
or
loope
cmp
push
rolb
sub
push
or
add
cli
test
andl
add
mov
sahf
pop
sub
push
mull
loopne
shr
sbb
xchg
pusha
mov
mov
jmp
adc
inc
xchg
lret
sbb
adc
je
pop
push
adcl
and
lods
ret
adc
stos
dec
sub
xchg
inc
mov
roll
add
push
pop
inc
mov
call
add
mov
test
adc
or
int3
leave
inc
push
out
xlat
leave
mov
mov
inc
push
push
rclb
xor
loopne
mov
xchg
or
ljmp
pusha
add
push
push
ficomps
jb
cmpsl
fisubrl
sbb
neg
jne
shrl
les
jl
ret
into
xor
adc
sbb
or
pop
pop
rorl
dec
add
xor
push
jle,pt
lds
dec
jg
lcall
add
imul
sub
sub
cmp
or
cmp
mov
mov
sbb
cmp
add
imul
add
adc
rorb
pop
sub
out
out
decl
cmp
cmp
add
mov
leave
mov
or
inc
cld
aaa
mov
decl
add
add
add
mov
and
sbb
mov
adc
sub
sub
mov
push
insl
fcomi
int
dec
sbb
sbb
jge
mov
pop
mov
ret
xchg
jbe
mov
imul
cwtl
mov
inc
adc
mov
mov
sahf
sbb
rolb
std
int
mov
mov
xor
sub
mov
fdivs
aam
push
add
imul
fisttpl
xor
pop
sub
add
out
mov
mov
icebp
sub
sbb
fcmovnu
sub
sbb
cmp
scas
push
movzbl
sub
fldt
pop
pop
add
cmp
mov
adc
mov
jge
cmp
ljmp
into
in
mov
scas
mov
or
insl
jl
dec
test
je
sub
rclb
imul
adc
rolb
fldt
pop
pop
add
push
adc
sub
lods
sub
adc
jge
jg
lret
pand
mov
pop
popa
add
repnz
and
mov
bound
out
or
addr16
outsb
sbb
add
adc
mov
pop
sub
insb
fldt
adc
in
xor
pop
movsb
hlt
push
or
mov
insb
scas
inc
dec
loop
or
mov
jbe
add
call
leave
fstpl
pop
cmp
dec
inc
call
pop
sti
mov
icebp
mov
shl
icebp
sub
mov
or
add
sarl
pop
add
mov
popa
jge
dec
out
pop
outsl
sbb
ljmp
testb
add
inc
mov
adc
and
mov
dec
or
icebp
xchg
add
adc
ret
cmp
mov
and
ret
ret
movsl
icebp
and
jbe
jle
push
clc
mov
pop
sbb
ss
add
unpckhps
dec
ljmp
or
enter
shrb
out
in
stos
repz
add
mov
mov
rolb
lahf
sbb
fistps
pop
jae
fwait
pop
sbb
mov
jle
push
mov
mov
and
adc
jne
mov
jo
mov
mov
and
jo
fmull
cmp
das
pop
addr16
mov
xor
fucomp
push
fsubs
push
loop
insl
mov
pop
sub
cmp
inc
fidivs
insb
xchg
cli
xchg
mov
or
xchg
sbb
push
push
mov
cmp
mov
fdivr
rorl
push
adc
lret
arpl
pushf
cli
sbb
repz
call
push
dec
ret
je
mov
pop
dec
pop
add
shrb
or
negl
jmp
std
sbb
add
cmp
xor
int3
outsb
sbb
add
sbb
or
mov
push
ror
and
pop
ja
cmp
sbb
inc
rcrb
imul
jle
adc
sbb
jmp
add
jp
jmp
cmp
jnp
lcall
incl
out
mov
test
fstps
lcall
or
add
pop
adc
sub
sahf
fisttpll
in
mov
out
cmp
aad
push
xlat
mov
in
rol
sbb
mov
addb
int
add
add
mov
pop
scas
rorb
xchg
mov
insb
outsb
mov
adc
rcrl
test
adc
pop
scas
add
xlat
sbb
loopne
jmp
daa
jle
jne
jnp
ret
fists
dec
jle
push
sbb
sub
mov
subl
xorl
add
mov
pop
adc
jl
orl
adc
xchg
and
addr16
orb
sub
sub
stos
and
jecxz
iret
mov
mov
jecxz
lods
rolb
fsqrt
add
mov
sub
push
sarb
cmp
out
cs
rorl
adc
shlb
jp
mov
jb
inc
mov
or
adc
ror
ret
je
or
sub
movl
pop
lahf
mov
icebp
sbb
mov
lea
ds
sbb
test
adc
cmpl
in
mov
leave
mov
or
insl
or
movsb
mov
sahf
sbb
lods
lock
xchg
sub
rcr
push
jb
mov
lea
sub
push
inc
call
outsb
xor
cmpsb
xor
sbb
xor
orl
rcll
sub
cltd
icebp
sbb
sbb
cmpsl
ljmp
aaa
pop
sub
adc
nop
jnp
test
mov
aaa
inc
fistpl
inc
pop
lock
mov
clc
xor
or
int3
popa
jae
push
imul
mov
and
test
jecxz,pn
xor
out
jge
sbb
loop
insb
pop
fisttpl
and
inc
sbb
cmc
lret
ret
sbb
or
inc
stos
dec
pop
test
mov
es
mov
inc
int
pop
addr16
jge
add
lods
pop
sub
sbb
sti
push
ljmp
inc
mov
jbe
sbb
js
push
jns
lock
inc
adc
jbe
sbb
sarb
or
pop
push
inc
aad
sar
imul
rcrl
adc
xlat
loope
popa
sbb
rorb
xor
mov
mov
or
ds
shll
cmp
sbb
pop
or
popa
jg
lret
jo
out
pop
pop
mov
dec
cmpsb
pushw
cmp
cmp
sbb
sar
mov
sbb
and
and
fistpl
push
mov
pop
push
lods
add
hlt
into
dec
out
lock
ss
mov
pop
addr16
add
mov
mov
pop
pop
scas
or
xor
or
push
pop
scas
xlat
inc
test
sub
adc
imul
add
mov
or
push
inc
fwait
jo
adc
ret
pop
hlt
pop
scas
int
xor
xchg
mov
xchg
loopne
sbb
inc
jl
add
adc
sbb
adc
push
es
test
adc
push
pop
ss
les
aam
inc
cmp
loop
je
jno
data16
pop
ss
mov
mov
and
cmc
or
pop
cwtl
out
pop
sbb
push
scas
ljmp
fimuls
adc
loope
dec
pop
adc
push
push
mov
sbb
mov
pop
sbb
jmp
jno
mov
xor
ret
sbb
push
adc
add
enterw
sub
pop
hlt
pop
pop
test
shll
fucomp
push
and
mov
push
mov
lret
sbb
cmpl
or
fs
or
imul
lods
jg
pop
mov
mov
jno
adc
sbb
push
inc
hlt
add
in
pop
mov
push
ret
rolb
add
fistpl
into
inc
cmpb
ljmp
ret
movsb
and
lock
cmp
ret
test
dec
rorl
adc
pop
aad
stc
or
cltd
or
push
shr
pop
in
ficoms
pop
jne
ret
in
shll
mov
pushf
and
mov
add
sbb
push
loop
ret
insb
mov
add
dec
or
pop
daa
in
lret
jo
out
inc
push
jle
movsl
add
clc
push
cli
lret
repnz
xchg
rcll
dec
xchg
cmp
mov
fwait
sti
cmpl
push
data16
push
jmp
in
and
sbb
push
or
jmp
ljmp
hlt
push
in
mov
rcrb
adc
insl
pop
sub
adc
or
jmp
adc
mov
rorb
fdiv
test
jp
or
push
lret
add
ss
repz
call
xchg
sbb
icebp
aad
insb
movsl
sub
mov
stos
mov
sbb
outsb
xchg
mov
xor
call
inc
fildl
or
sbb
sbbb
clc
mov
bound
cmp
in
or
mov
cmc
push
nop
lret
adc
fisubl
cmp
lock
call
jbe
mov
inc
fwait
lds
push
pop
or
lea
rcl
rol
mov
mov
cmp
test
pop
shrb
fimull
adc
or
inc
call
bound
inc
shll
subb
sbb
add
pop
mov
xchg
or
sbb
xor
push
and
call
jg
add
mov
pop
call
popa
fsubs
or
adcl
rcl
adc
mov
mov
pop
pop
dec
je
out
into
dec
inc
xlat
les
add
push
popa
clc
inc
arpl
push
push
ffreep
or
xchg
dec
inc
sbb
out
fbstp
xchg
lea
cmp
or
fcoms
jmp
sbb
xor
dec
lods
ljmp
sbb
fadd
xlat
repnz
inc
dec
scas
daa
adc
push
and
in
les
mov
xchg
push
loop
push
push
int3
push
push
inc
jnp
aaa
sub
push
or
xor
push
mov
mov
and
cli
or
aas
dec
add
fcmovnb
sbb
lret
cmpsb
in
fsqrt
inc
es
movb
lds
mov
dec
cmpb
std
ljmp
jmp
adc
mov
cli
add
out
or
add
push
dec
add
mov
adc
push
les
out
sbb
adc
push
ss
icebp
imulb
iret
push
daa
mov
in
sbb
fadds
mov
mov
fs
mov
jne
test
cmp
ret
stc
jecxz
ret
inc
mov
mov
es
loop
adc
xor
sbb
cmp
push
push
push
outsb
pop
xlat
lcall
call
jl
add
or
js
or
test
sbb
push
xor
in
adc
test
arpl
hlt
leave
dec
out
rolb
push
rcrl
test
sub
push
fisubrl
rclb
dec
popf
mov
push
lret
mov
inc
test
add
lcall
ds
lock
xor
mov
sbb
daa
je
add
xchg
pop
sbb
or
sbb
cmp
loopne
test
adc
push
orl
pop
add
push
leave
sbb
or
jae
pop
ret
or
or
xchg
clc
add
dec
fcmovbe
aam
rorb
sbb
or
xchg
pop
mov
pop
insl
cmp
mov
addl
xchg
cld
es
inc
lret
shll
push
loope
pop
imul
inc
sub
wbinvd
fdivrs
int
jmp
sbb
popa
mov
xlat
cli
or
ljmp
mov
mov
jl
das
cmp
push
daa
divb
insb
mov
mov
mov
sbb
mov
add
popa
in
or
dec
xor
push
sbbl
scas
add
mov
gs
pusha
cld
add
rclb
movsl
rclb
add
jo
lods
lcall
fadd
icebp
mov
sbb
xor
icebp
adc
sbb
and
add
mov
adc
sub
fisubl
pushf
sub
inc
or
les
or
xchg
jp
xchg
adc
les
cmp
shll
and
sarb
add
arpl
sbb
loop
mov
cltd
mov
push
xor
cmp
mov
sub
add
jle
movntps
adc
sti
push
lods
adc
stc
adc
loopne
lcall
or
mov
cmp
les
cmp
jg
loopne
shll
cmp
scas
bound
aas
add
aam
data16
adc
or
mov
mov
and
lcall
pop
lock
cmp
rolb
shl
jnp
insb
sbb
pop
pop
xchg
adc
push
adc
cmp
or
add
call
dec
ret
mov
or
stos
addr16
mov
sbb
mov
adc
adc
push
pop
inc
pop
or
pop
pop
pop
or
popf
pop
mov
stc
push
mov
mov
ds
leave
push
adc
icebp
mov
mov
call
and
sbb
pop
mov
or
sub
pop
xor
shrb
mov
in
mov
pop
cmp
out
cmp
fcmovu
mov
add
icebp
nop
out
and
cli
dec
inc
sub
xchg
jno
jl
bnd
int3
push
sub
push
rcr
bound
mov
sbb
mov
add
addb
lret
push
xor
mov
loop
jmp
mov
cwtl
mov
and
inc
arpl
jo
fidivl
push
int3
add
adc
jl
jo
call
shl
nop
test
pop
mov
jmp
in
negl
add
adc
push
xor
push
mov
andl
dec
inc
wrmsr
aam
iret
sbb
js
mov
dec
dec
mov
je
or
or
pop
mov
into
or
sarl
and
in
scas
outsl
push
pushfw
mov
jp
aaa
stos
dec
sbb
inc
subb
nop
nop
lret
insl
push
jae
mov
dec
lock
push
push
or
adcb
aas
mov
cld
jge
cli
clc
cmc
pop
mov
rcr
aam
xchg
jo
push
jns
and
jge
adc
aam
or
xchg
add
lods
mov
shrl
push
repnz
fistps
xor
adc
dec
inc
lock
xor
or
mov
enter
mov
pop
loope
insb
ret
cli
add
inc
rolb
test
cmp
adc
sub
jmp
cltd
sbb
xchg
push
test
mov
push
sbb
adc
sti
hlt
rclb
adc
lret
add
jb
sbb
pop
shll
lcall
aaa
xor
mov
icebp
adc
add
fs
sub
or
sbb
or
loop
or
inc
mov
inc
rorl
fs
into
dec
adc
cmp
adc
mov
xor
jle
scas
inc
pavgusb
test
sbb
add
in
dec
jno
mov
fisubl
test
nop
sahf
push
push
add
jo
pop
jb
or
imul
xchg
mov
notl
mov
scas
sbb
and
jo
lret
xchg
sti
imul
cltd
pop
enter
sbb
imul
or
inc
push
mov
adc
adc
call
addr16
das
nop
add
or
ss
movsl
pop
adc
scas
push
mov
add
pop
test
movsb
mov
int
push
enter
les
sbb
into
inc
mov
nop
sbb
cmp
inc
inc
push
subps
and
mov
push
sub
jbe
jp
js
or
lret
js
dec
mov
adc
add
adc
loope
cmpsl
jnp
daa
xor
push
xor
mov
leave
pop
add
dec
mov
fimull
and
xchg
adc
push
inc
call
inc
xchg
sub
add
loopne
mov
icebp
inc
sbb
mov
cmpl
js
cmpsb
inc
jg
jle
mov
enter
das
popf
bound
mov
inc
rcll
mov
cmp
mov
push
push
jmp
icebp
push
mov
add
andb
lahf
sbb
addb
adc
dec
or
push
push
push
adc
daa
xor
das
loope
jg
rcrl
lret
sbb
leave
add
fisttpl
adc
pop
mov
push
xchg
sbb
sbb
jl
cltd
clc
cmovb
sbb
iret
ljmp
xor
andb
and
cmpsb
add
in
adc
es
or
or
add
imul
fisttpll
xchg
adcl
stos
or
sbb
pop
ret
scas
outsb
hlt
jb
xor
push
ficoml
dec
punpckhbw
xorl
call
cmp
sar
sub
dec
or
push
push
hlt
push
sbb
icebp
das
mov
aaa
shr
sbb
mov
outsb
xor
sbb
push
int
pop
push
inc
mov
outsb
ret
jp
int
pop
mov
mov
mov
es
mov
sub
mov
inc
add
or
les
mov
stos
push
test
insl
sbbb
push
or
cltd
rorb
mov
insl
sub
sub
jg
jmp
sbb
jnp
and
adc
xchg
mov
pusha
mov
cmp
cmp
js
pop
pushl
dec
shlb
lcall
sbb
sub
rorl
push
mov
inc
push
pop
ret
or
xor
adc
les
cmp
dec
push
sbbl
inc
sub
test
add
inc
pop
adc
inc
push
and
cmp
dec
or
push
sub
pop
or
lea
cmp
jo
push
insl
sbb
fidivl
add
subb
mov
pop
iret
mov
pop
aaa
repnz
mov
orl
in
mov
inc
mov
subb
rorl
cmpsb
psubsb
add
xor
enter
jmp
add
mov
rcl
adc
in
or
push
js
fimuls
cmpsb
cs
inc
dec
lods
or
xlat
test
stos
rclb
sub
addb
sbb
xor
fstl
or
or
cmp
in
and
orl
push
mov
or
iret
lock
cmp
add
shl
cmp
bound
push
ljmp
mov
mov
popa
mov
ficoml
xor
repz
sbb
lcall
inc
push
rorl
mov
sbb
jp
addl
cwtl
push
cwtl
into
orb
or
testb
sub
mov
js
loope
sub
or
inc
adc
mov
cmp
movsb
pop
daa
dec
imul
cmc
sbb
push
mov
mov
mov
jg
adc
or
push
dec
xchg
decl
testb
inc
mov
pop
call
rcl
stos
inc
pushf
mov
rol
psubd
and
outsb
scas
testl
inc
push
rcrl
dec
and
pop
incb
push
jmp
dec
jno
popf
aam
jp
sbb
push
xchg
and
mov
cltd
push
cltd
stc
in
add
or
inc
test
rolb
push
mov
in
sbb
outsl
adc
pop
adc
sub
aam
sbb
test
aad
cmp
in
pop
imul
int
sub
push
enter
test
dec
sbb
xchg
icebp
outsl
stc
js
mov
xor
shlb
ljmp
lock
or
inc
sub
mov
xchg
mov
repz
mov
or
push
rolb
inc
cmpsl
or
roll
sbb
shl
or
pop
adc
jmp
xchg
sub
and
xchg
adc
cli
fs
pusha
sub
sub
rcl
inc
xlat
or
inc
xchg
ljmp
stos
shrb
push
mov
add
shll
bnd
mov
and
or
rclb
inc
mov
cmp
rol
or
cmp
jl
or
les
neg
cmp
sarb
sub
sbb
outsb
sub
inc
mov
orl
fcompl
sub
pusha
adc
lahf
cmp
sahf
sti
adc
shl
jmp
adcb
daa
push
out
mov
lret
das
ss
je
adc
lret
rcrl
loope
cmp
clc
ret
add
add
mov
add
or
les
mov
insl
scas
insl
push
pop
mov
rcrl
or
and
cwtl
sbb
mov
xchg
loopne
gs
cmpsb
sbb
sbb
or
les
addr16
jmp
cmp
mull
rcrl
sbb
xor
sub
andl
mov
add
inc
cmovg
adc
adcb
add
mov
sti
clts
or
mov
ffree
mov
add
adc
push
shll
fisubrs
mov
add
or
sbb
mov
xchg
imul
fisubs
ret
pop
or
cli
sub
iret
push
ret
jo
xchg
hlt
jae
mov
lret
cmp
cld
xchg
clc
rcrl
loopne
shll
add
push
cwtl
cmp
inc
sar
sbb
icebp
push
sbb
push
cmp
push
cmpsb
sahf
pop
xchg
dec
and
push
sbb
jg
cmp
je
mov
push
test
sub
sbb
add
jge
mov
xor
enter
push
xor
push
test
daa
mov
dec
setle
in
scas
inc
outsb
xchg
pop
pop
add
ss
gs
shrb
adc
ret
pop
andl
push
call
mov
and
add
stos
shlb
sbb
ret
sti
sbb
push
push
pop
testb
lea
test
inc
insb
mov
bound
push
frstor
stos
xor
jns
xchg
or
call
pop
add
inc
ljmp
and
xor
loopne
andb
shlb
mov
sahf
rorb
or
clc
ret
ret
add
mov
jo
loopne
mov
push
and
lods
lret
mov
add
inc
mov
loope
bound
cs
ret
xlat
lcall
divb
enter
pop
or
push
cmp
lahf
ljmp
add
cmpsl
shlb
sbb
out
pop
xchg
pop
push
inc
and
xor
aad
push
pop
loopne
das
subb
popa
call
int3
ret
shlb
pop
pushf
ljmp
mov
pop
xchg
fdiv
sbb
or
inc
push
and
jae
ljmp
icebp
cmp
icebp
nop
cmp
add
pop
popf
imulb
jg
mov
push
push
pop
sbb
mov
rorb
mov
mov
add
jge
mov
shr
sbb
scas
je
add
and
test
test
or
leave
lods
sub
mov
cmp
push
add
cmpsb
in
or
je
negl
pushf
sti
icebp
or
add
xchg
pop
in
sub
orl
sbb
mov
xlat
push
ffreep
dec
adc
or
mov
cmp
add
add
push
sbb
cs
push
push
xor
mov
xchg
mov
xchg
lods
push
int
add
xchg
jb
xchg
addl
mov
stos
shrl
popf
sarl
imul
sbb
insb
adc
loop
xor
mov
sbb
lret
adc
pop
sbb
sbb
outsb
push
loope
pop
mov
adc
pop
adc
dec
add
ret
xchg
push
jae
fs
fcmovnu
lea
subb
gs
jne
adc
dec
add
mov
push
sub
inc
push
scas
mov
or
pop
adc
or
or
dec
jno
mov
mov
aad
add
das
jmp
pusha
push
les
push
jg
pop
cmp
cmc
mov
mov
sti
or
loopne
add
cmp
push
pop
lods
fiaddl
js
call
nop
popf
subb
and
enter
push
or
adc
loopne
aad
xchg
mov
jo
sub
lds
rcrb
inc
mov
mov
mov
xor
sub
shrl
push
sub
shll
mov
add
and
negb
xor
lret
fs
add
xchg
mov
add
adc
mov
and
adc
es
or
adc
rorb
in
lret
popf
sub
adc
iret
push
xadd
jmp
xchg
jecxz
ljmp
or
xlat
sbb
out
pop
xor
jmp
cld
mov
cmp
and
add
jmp
jo
ret
call
sub
icebp
lret
xor
bswap
lret
ljmp
jge
addl
and
icebp
add
orl
test
adc
or
xlat
jo
leave
cli
or
arpl
jb
xchg
fsub
push
js
mov
lret
inc
andl
sti
add
iret
inc
push
leave
adc
xchg
mov
imul
pop
faddl
in
test
lcall
push
ret
movb
clc
adc
or
add
push
xor
add
mov
sarl
cmc
adc
sub
imul
pusha
push
icebp
push
sbb
mov
push
mov
mov
mov
mov
sub
cmp
mov
inc
leave
cwtl
or
sbb
pop
mov
mov
insl
jne
push
lock
xor
pop
jg
ret
sbb
inc
int3
cld
mov
add
sub
das
xlat
add
sbb
ljmp
dec
adc
sbb
rcl
cld
mov
jl
leave
dec
xchg
cmp
xor
push
mov
rcll
loopne,pn
and
or
test
jo
adc
xchg
sbb
jecxz
repnz
int3
add
popf
mov
mov
mov
xor
repnz
mov
push
shlb
sbb
adc
adc
inc
mov
mov
rcrl
jp
or
andl
ret
lret
or
subb
and
or
mov
lahf
popa
js
mov
pusha
push
sub
cli
or
jmp
xor
enter
aam
aad
push
loop
xchg
pop
es
push
jge
shlb
test
lcall
std
inc
and
je
into
movb
mov
mov
jp,pn
adc
daa
inc
xor
jle
bound
dec
mov
dec
frstor
movsl
add
sbb
jle
call
call
pop
sbb
call
mov
jmp
mov
mov
add
rclb
and
movsl
mov
sub
and
adc
lret
push
inc
inc
xor
icebp
mov
pop
shlb
cmp
dec
xchg
mov
mov
cld
add
and
pop
dec
bound
cmp
and
add
popa
sub
imul
addb
push
xchg
adcb
mov
enter
xor
shrb
mov
test
add
ret
cmp
add
movsb
or
xor
cmc
push
sbb
mov
push
push
inc
sub
inc
push
lret
mov
loop
or
pop
popf
das
or
shr
fldl
aad
pop
stc
fistl
pop
xchg
adc
lock
xchg
push
add
daa
cmc
pop
xchg
or
jo
lcall
imulb
push
les
andb
sbb
shr
addl
mov
inc
cmp
jb
inc
xchg
lcall
stos
inc
mov
ret
ljmp
inc
dec
bound
lock
push
mov
or
fcmovnb
shlb
test
leave
inc
sub
inc
sbb
mov
pop
ljmp
mov
adc
adc
pop
test
sub
sarl
cmp
push
addr16
nop
sbb
adc
clc
sahf
push
pop
jl
nop
or
xchg
call
out
sbb
sbb
inc
rcrb
sbb
jecxz
pinsrw
mov
in
or
mov
adc
or
adc
mov
adc
push
test
icebp
xor
add
dec
cmc
mov
xchg
push
sbb
faddl
into
test
push
mov
jge
dec
lea
outsl
push
sub
call
push
stc
loope
lods
adc
cwtl
test
dec
inc
loopne
sahf
pop
sbb
mov
adc
and
mov
sub
adc
push
shll
test
ret
push
cmp
jmp
jnp
rol
bound
repnz
mov
add
mov
mov
xchg
mov
lds
inc
int
cwtl
mov
jmp
leave
int3
xlat
push
cmpb
or
lret
push
push
adc
ror
push
repnz
lock
mov
lcall
add
adc
sbb
add
adc
ret
addl
addr16
stc
shll
lods
mov
push
cwtl
inc
scas
mov
jae
adc
popa
test
add
scas
xlat
pop
xchg
mov
fstl
mov
shll
add
shlb
cmc
test
pop
mov
andl
inc
xor
inc
loop
cmp
stc
and
loope
push
xlat
mov
js
je
aad
pop
in
imul
test
and
adc
xchg
icebp
or
dec
adc
cmc
cmp
push
adc
sbbb
add
test
sbb
sub
mov
jo
shrb
mov
add
cmp
push
push
repz
sub
es
scas
push
dec
add
scas
mov
fmull
loope
daa
rcrb
push
pusha
pop
push
xor
inc
xchg
adc
aas
outsl
popa
inc
dec
xorl
push
add
mov
sbb
sub
mov
int3
ret
add
bound
test
inc
add
rcrb
cwtl
pop
pop
leave
pop
xchg
xor
sbb
andl
jnp
xchg
icebp
jno
mov
lahf
call
inc
adc
push
push
or
shrl
fs
adc
add
dec
negl
push
jb
cmpsb
test
or
mov
call
dec
rcrl
in
inc
lea
sbb
int
dec
cmc
adc
adc
add
stc
movsl
adc
scas
mov
inc
xor
fwait
adc
sbb
xor
adc
out
inc
addb
jmp
add
lea
lret
add
ljmp
pusha
testb
shrb
mov
cmp
xchg
iret
iret
add
repnz
push
mov
pop
aad
aam
outsl
cmp
push
addr16
cltd
pop
aaa
pop
aam
jp
push
push
adc
or
push
cmpl
push
into
mov
bound
clc
sbb
push
mov
inc
fstl
xor
jbe
outsl
mov
loop
mov
icebp
testb
mov
add
inc
loop
xor
stos
clc
and
cmp
mov
mov
out
xor
pop
inc
add
stc
adc
cwtl
and
test
inc
insl
push
mov
aad
add
jo
mov
xchg
jmp
mov
lret
lret
add
sub
push
push
adc
nop
inc
sbb
sbb
stos
or
inc
xor
push
jg
cmp
jl
adc
inc
mov
in
add
add
push
xchg
add
xchg
pop
push
or
icebp
mov
adc
mov
push
push
push
fs
inc
push
movaps
sub
mov
mov
movq
pop
loopne
addb
push
rorb
fwait
add
push
push
xorps
sbb
add
fsubl
or
pop
sbbb
push
dec
andps
into
pusha
push
push
xlat
sbb
fdivrs
sub
std
sub
mov
lret
ret
inc
movl
rclb
cmp
imul
lea
adc
filds
or
rclb
loope
adc
lds
mov
xor
adc
testb
push
lods
lahf
negb
lcall
cmp
or
add
and
inc
leave
push
das
bound
popf
enter
scas
mov
mov
adc
lcall
aas
imul
js
repz
nop
sub
or
rcll
inc
inc
lea
jne
add
xchg
jmp
or
xor
inc
xor
adc
push
orb
dec
ret
pop
pslld
pop
popa
sysret
adc
movsb
cli
adc
sub
cmp
sub
or
push
push
rolb
test
std
xor
addb
add
popf
add
or
cs
push
repnz
sub
push
or
sub
ss
or
into
push
rcl
popa
call
loop
mov
sbb
pop
stos
daa
adc
scas
dec
mov
repnz
mov
je
jmp
xor
xor
lgs
mov
stc
add
dec
and
in
dec
pushw
outsl
jmp
adc
mov
push
orb
shrb
sub
sbb
sbb
pop
sbb
in
int
mov
arpl
push
cmp
adc
push
xchg
mov
fldl
push
or
repz
mov
inc
sub
test
call
cmpsl
mov
daa
call
in
push
ds
std
mov
cmpsl
sub
ljmp
inc
pshufw
mov
pop
mov
add
sub
mov
inc
mov
sbb
jne
es
or
xor
jb
mov
mov
insl
cmp
add
mov
fsts
pop
test
cmp
push
test
or
icebp
lret
jo
mov
sub
mov
jno
adc
or
shl
mov
or
aad
rcrl
xor
out
push
pop
add
push
rcll
add
mov
in
pop
sar
inc
jne
jne
add
call
and
insl
mov
dec
adc
adc
fcmovnbe
mov
js
insb
ret
mov
and
cwtl
push
aam
das
or
into
xor
or
cli
insl
test
add
mov
loope
notb
rolb
push
fucomp
push
or
push
enter
lds
adc
rcrl
inc
rol
pop
sbb
push
ret
into
repnz
sub
ret
test
test
add
lods
add
jp
jp
sbb
and
dec
push
je
inc
scas
adc
pop
sbb
and
add
pop
sbb
xor
test
inc
lcall
xor
stc
into
scas
push
sbb
mov
adc
dec
mov
scas
jo
je
ljmp
lds
push
or
sbb
push
add
sbb
add
mov
mov
xchg
jl
sub
lods
clc
lret
mov
push
add
push
movl
sub
add
sbb
incb
or
push
jo
pop
xor
out
mov
push
add
psubusb
cld
sarb
repnz
sbb
lods
test
or
in
xchg
std
sbb
shlb
clc
inc
mov
cmp
movsl
push
push
or
mov
and
dec
les
bound
aad
sub
or
pushf
xchg
ljmp
push
test
rcll
mov
test
lret
or
adc
mov
adc
cmpsb
cmp
push
cltd
sbb
pop
aam
inc
and
push
sarb
dec
pushf
notl
loopne
iret
dec
cmp
pop
std
push
test
pop
push
push
push
jo
sub
popa
lret
or
pusha
rorl
and
ret
cwtl
jb
aam
adc
push
xor
icebp
xchg
push
sbb
push
js
test
push
lahf
mov
xchg
jl
into
jbe
jne
mov
or
cwtl
data16
mov
mov
fiaddl
inc
cwtl
or
popa
push
lock
fadd
in
lock
mov
orb
movsl
stos
mulb
lock
stos
rcl
or
push
popa
xlat
push
mov
sub
int3
add
and
cmpsb
push
inc
icebp
sbb
add
push
or
ljmp
jecxz
mov
xor
sbb
out
fcmove
jo
shl
into
push
sbb
cmp
pop
leave
inc
sbb
add
cmpps
xchg
int
movsb
stos
loopne
push
test
cmp
mov
loopne
mov
dec
push
repnz
mov
out
mov
inc
mov
push
aaa
adc
push
jnp
cmp
sub
sbb
sub
ds
fnsave
adc
je
push
add
adc
or
lods
scas
jg
enter
adc
xor
adcb
test
mov
insb
or
add
push
cmp
push
pop
cwtl
mov
negb
rorb
push
mov
loop
add
and
pop
mov
dec
pop
inc
push
add
test
or
clc
xlat
sub
jge
pop
sbb
sub
shl
inc
xchg
mov
jne
ret
adc
adc
dec
xchg
cmp
push
fbstp
sub
cmp
sbb
iret
xlat
enter
fimull
push
lcall
movsb
adc
add
pop
movb
mov
test
inc
and
cmp
cwtl
cmp
andl
push
xchg
mov
mov
and
sbb
je
lret
test
lcall
sbb
enter
in
dec
inc
cmp
test
pop
icebp
or
xorb
add
mov
sbb
lcall
aam
pusha
stos
lds
push
scas
push
stc
fcomi
mov
sbb
lret
or
xchg
stos
cmp
add
mov
and
jo
inc
mov
mov
lods
jb
mov
rorl
fdivl
or
add
sub
jo
mov
push
jne
jb
sbb
adc
cwtl
add
fiaddl
into
xor
dec
push
mov
adc
das
add
and
ds
add
decb
insb
shrb
icebp
or
loopne
sbb
or
xchg
sbb
cli
rcll
adc
mov
inc
cmp
add
adcl
inc
leave
rcrl
push
jle
sbb
lds
addr16
rolb
es
popa
cmc
ja
imull
lahf
xchg
roll
mov
lcall
test
icebp
mov
mov
add
loopne
mov
loope
sub
sub
sub
fisttps
adc
xchg
fnstcw
push
mov
or
xchg
add
mov
or
xor
repnz
hlt
cmpsl
push
xchg
add
cmc
add
call
pusha
cli
push
test
fbstp
sbb
push
pop
or
or
or
add
jo
add
dec
popf
addb
rcr
mov
into
adcb
inc
add
fwait
mov
jae
add
into
xorl
test
out
roll
fadds
mov
testb
adcb
or
test
ficoms
add
shlb
loope
imul
or
mov
cmp
cli
call
ljmp
lcall
subb
pusha
call
xchg
jb
sar
sbbl
sahf
sub
aaa
sub
jg
mov
push
mov
lret
and
jo
jp
mov
add
mov
xchg
and
les
movb
adc
adc
lea
rcll
inc
je
push
movsl
jl
rcrb
lods
jno
shl
add
into
jle
notb
call
inc
movsb
xlat
and
sub
or
push
or
push
lods
sbb
les
mov
rolb
and
sub
push
push
adc
jno
push
mov
loopne
sbb
or
test
sbb
add
roll
repnz
aas
inc
mov
aam
sbb
inc
int
mull
xor
adc
js
or
jne
enter
pop
sub
inc
sbb
mov
je
dec
fcoms
cmp
push
lret
out
jne
movsl
sub
stc
mov
addr16
mov
adc
lock
lock
pop
xor
xor
iret
int3
xor
in
xchg
sbb
jnp
xor
inc
roll
push
into
out
adc
pusha
push
fcmovu
stos
jne
lods
hlt
dec
or
clc
lret
jp
jo
fs
lea
in
popa
or
inc
mov
sub
loope
stc
inc
xchg
or
out
jp
scas
lret
cmp
call
ja,pt
jecxz
and
push
push
cwtl
pop
add
add
and
test
rolb
or
pop
sbbb
andb
push
mov
out
or
stos
sub
push
ljmp
add
push
cmp
insb
xchg
lret
int3
mov
jle
ret
xlat
pop
xchg
in
cmpsl
sub
mov
mov
push
das
push
rol
inc
shlb
sub
lcall
add
pop
sub
sub
add
call
and
stos
add
pop
cmpsb
and
or
sbb
mov
and
or
loopne
xlat
jb
scas
sub
push
mov
push
push
sbb
loop
jecxz
testb
mov
jne
ljmp
inc
hlt
adc
mov
mov
aad
clc
cmp
popa
movsb
push
mov
fwait
add
adcb
adc
movsb
cs
dec
xchg
scas
mov
inc
subl
stos
lock
inc
loope
add
xor
loopne
push
mov
shrl
lcall
and
xchg
or
push
push
cltd
pop
jns
stos
adc
cs
inc
dec
pusha
sbb
inc
scas
pop
or
lret
add
sub
inc
lret
cmp
mov
testb
icebp
inc
inc
icebp
push
pop
xchg
pop
sbb
fcmovb
icebp
mov
enter
push
stc
adc
adc
cs
mov
stc
aam
leave
lcall
and
js
and
add
jecxz
mov
rolb
add
jmp
in
shlb
add
rclb
xchg
cmp
mov
xor
adc
ja
xor
inc
insb
aad
jmp
test
clc
and
add
pop
sbb
cltd
push
and
push
in
cwtl
push
js
andb
pop
into
dec
cmpb
mov
and
add
nop
mov
scas
sbb
push
mov
sbb
jo
push
popf
push
pop
sbb
push
sub
adc
mov
mov
mov
test
push
int
rclb
out
daa
mov
xor
push
outsl
cli
loop
inc
stos
pop
add
leave
clc
mov
or
data16
insb
aas
test
sbb
testb
inc
add
les
push
pushf
rolb
enter
inc
add
rclb
loopne
xchg
sub
cltd
sarl
psubb
imul
mov
lret
pop
mov
xor
cmp
sub
mov
xchg
loope
jmp
loop
xor
pushf
subb
push
push
and
mov
or
sbb
and
add
jecxz
adc
mov
repnz
rcrb
mov
add
pop
jmp
dec
sub
mov
mov
stos
or
bound
shll
dec
pop
aam
sub
add
mov
add
or
in
add
cmp
push
or
push
sub
or
out
pop
mov
and
and
jb
lcall
iret
adc
out
or
cmp
shlb
or
pusha
pusha
insl
fists
push
gs
push
shlb
rorb
push
mov
ljmp
push
or
push
mov
je
xor
cmpsb
xchg
rorb
sarb
add
sub
data16
push
add
push
rcrb
cmpsb
push
lret
jbe
ret
shl
push
loopne
imul
in
outsb
shlb
mov
rolb
and
xchg
sub
pop
or
call
cmc
add
clc
inc
or
scas
bound
push
xor
loop
inc
xchg
add
cmp
js
adc
aad
and
sbb
repz
add
push
adc
int3
push
leave
stos
leave
setbe
adc
pushf
aam
push
subl
or
push
and
add
sub
vxorps
orb
mov
jo
test
rorb
out
rcl
mov
push
add
push
daa
or
and
pop
lods
pop
xor
mov
add
bsr
xor
mov
je
xchg
and
mov
push
stos
fisubrl
out
mov
scas
pop
and
mov
sub
loope
push
pop
pop
shl
add
pusha
inc
inc
mov
bound
enterw
sub
add
in
mov
sub
inc
femms
xchg
cmpsb
jbe
mov
cli
pop
rclb
xchg
test
pop
cmp
sub
pop
inc
adc
xchg
pop
add
sbb
or
sbb
xor
mov
adc
ret
test
test
mov
adc
cmc
mov
rcll
adc
cmp
insl
aam
in
push
push
mov
pop
jecxz
cli
mov
cwtl
jo
ds
xchg
push
push
pop
mov
dec
mov
xchg
icebp
es
cmp
cmp
pusha
mov
jmp
mov
jae
repz
push
xor
enter
test
sub
sbb
mov
push
orb
xchg
rol
and
mov
dec
in
insl
and
cs
lock
call
adc
sbb
cli
push
test
inc
mov
adc
insl
roll
mov
or
sub
pop
jns
in
ret
push
pusha
jg
clc
mov
inc
adc
or
sub
pop
xchg
adc
aam
or
mov
mov
bound
out
add
xor
adc
test
sub
xor
aad
jb
mov
xor
sbb
or
out
add
and
inc
popf
lds
or
adc
sub
push
jnp
orb
or
sbb
ljmp
inc
out
pop
sbb
sbb
sahf
mov
add
push
xor
jmp
lret
rorb
mov
push
xchg
push
adc
sbb
cwtl
leave
add
push
movb
stos
jge
idivb
popa
sub
loopne
sbb
push
lahf
roll
pusha
mov
sahf
enter
test
repz
cltd
movsl
add
inc
pop
ljmp
push
xor
insb
push
out
inc
inc
js
pop
or
push
mov
adc
xor
mov
pop
xchg
pop
loope
add
push
or
mov
cmp
dec
or
xor
mov
and
cmp
add
loopne
inc
cmp
stos
xchg
shrl
data16
push
adc
push
enter
inc
insl
push
mov
add
bound
rorb
dec
aas
mov
add
adc
inc
in
test
add
pop
sbb
leave
les
mov
or
test
jmp
xor
rorb
add
and
dec
mov
rol
push
or
push
cmp
inc
repnz
test
inc
in
xor
les
roll
mov
cmp
dec
xor
imulb
lret
int3
mov
or
push
dec
daa
adc
jmp
xor
sbb
adc
cwtl
aam
pop
out
shl
les
xchg
sbb
clc
lock
pop
ljmp
nop
adc
sub
fwait
shl
xchg
pop
pop
arpl
ret
jb
dec
cmp
sbb
jo
sub
sbb
sbb
cmp
sub
add
adc
rolb
test
cmp
js
test
or
je
mov
and
faddl
sbb
mov
ret
xor
adc
lea
cmp
sub
stos
xchg
ret
sbb
rcrb
notb
jmp
cmp
push
fimull
and
add
sbb
mov
out
sbb
je
sahf
test
nopl
push
cmp
mov
push
std
adc
imul
push
add
mov
lock
nop
xor
adc
adc
or
ret
and
lret
ficomps
add
mov
std
cltd
sub
vmulpd
imul
dec
shll
sbb
jl
and
std
add
adc
xor
push
sahf
push
or
bound
lahf
add
ds
add
lar
pop
ja
add
push
sbb
dec
jl
dec
xor
or
mov
cmpsl
or
sbb
int3
add
xchg
icebp
xchg
sbb
or
push
mov
aas
dec
sub
or
iret
popf
push
adc
call
dec
push
cmpsl
out
jo
mov
in
popa
sbb
shlb
and
xchg
inc
in
and
or
inc
add
cmp
add
aam
pusha
call
rclb
punpckhdq
push
pop
inc
add
sbb
mov
int
sub
adc
adc
stos
call
mov
push
test
lds
lcall
out
push
xchg
inc
push
add
or
push
jne
js
clc
test
cli
inc
aaa
adc
mov
arpl
popa
arpl
test
and
cmp
adc
mov
js
dec
add
cmp
dec
push
xor
or
imul
pop
mov
rclb
iret
and
and
pop
mov
pop
add
push
out
lcall
ret
call
daa
loop
dec
stc
or
add
add
loopne
push
or
sub
jo
movsb
xchg
gs
lds
push
jnp
into
shlb
push
and
add
or
cmp
adc
add
in
push
adc
adc
pop
pop
push
xor
aam
lods
js
push
sarb
cmp
into
pop
adc
push
adc
in
out
push
stos
jne
scas
lock
sbbb
pushf
add
and
or
enter
roll
add
popl
cs
push
pop
pop
push
fwait
jl
mov
mov
mov
pop
jl
sub
pop
sbb
rcrb
mov
sbb
sub
mov
cmp
rol
movsl
xchg
add
push
insb
dec
in
jecxz
or
jb
scas
add
pop
ret
pop
cltd
cwtl
das
sub
adcb
sar
fwait
roll
lcall
mov
sub
adcb
sub
ljmp
and
sbb
jmp
stos
outsb
dec
push
pop
or
and
mov
jb
adc
idiv
enter
popf
retw
mov
push
inc
fisttps
add
mov
repnz
cltd
into
rorl
adc
mov
shll
and
add
xor
sbb
sbb
lret
or
shl
jae
addr16
loope
jp
or
xlat
adc
js
mov
or
dec
cmp
sub
sbb
adc
jo
inc
push
insb
shll
in
pop
adc
jo
icebp
jo
push
pop
add
xchg
mov
mov
adc
add
xchg
popa
stos
sbb
test
push
mov
xlat
sub
out
push
inc
popa
or
add
mov
add
sbb
sbb
inc
sbb
sbb
les
daa
ja
repnz
mov
jo
bound
in
mov
jmp
xor
push
icebp
outsl
jnp
and
test
mov
push
pop
and
jmp
fsubs
adc
negl
adc
jne
add
icebp
or
mov
loopne
add
loopne
cmp
cmpsl
and
push
push
push
add
mov
inc
push
es
dec
xchg
subl
push
push
movsb
jbe
in
add
or
inc
ds
shrl
stos
jbe
mov
or
push
pop
and
pop
inc
or
pop
inc
into
sahf
popf
jle
mov
adc
jo
or
jnp
test
test
xor
mov
inc
int3
jns
lock
popa
clc
sbb
mov
cmpsl
push
mov
sbb
dec
stos
ret
gs
icebp
or
mov
and
fs
jns
xchg
scas
mov
add
js
add
iret
sbb
test
arpl
xor
add
daa
rcrl
loopne
outsb
adc
into
lods
pop
adcb
sbb
xchg
bound
stos
mov
pop
lds
xchg
test
je
shrl
into
rcr
dec
call
sti
inc
sub
add
roll
mov
push
push
mov
out
mov
pop
ficomps
pop
rclb
clc
or
pop
pop
mov
cmp
fiaddl
dec
mov
xchg
sbb
cli
call
add
daa
add
push
sbb
push
xchg
nop
das
sahf
or
das
in
adc
sub
stc
scas
xchg
vfmadd213ps
adc
sbb
or
data16
inc
mov
inc
push
sbb
or
adc
mov
pop
aad
pop
dec
push
lods
mov
popa
and
and
cwtl
add
sub
push
fists
inc
sub
and
inc
sbb
adc
divl
push
insl
in
scas
and
mov
subb
push
bound
clc
xchg
test
and
dec
pop
push
add
pop
pop
adc
mov
and
mov
mov
dec
sbb
mov
int3
sub
push
xchg
dec
dec
in
insb
push
bound
aaa
out
push
pop
jp
inc
cmpsb
sub
sbb
enter
sbb
clc
xchg
sub
mov
adcl
xor
jge
xor
sbb
js
or
mov
adc
es
loopne
sbb
ret
add
push
out
mov
daa
inc
mov
inc
sbb
pop
push
add
inc
xor
stos
dec
push
ljmp
dec
iret
sbb
push
xor
sbb
sub
xchg
fldl
inc
mov
mov
rolb
pop
addb
or
or
dec
test
push
mov
sbb
inc
stos
add
mov
lcall
xchg
sub
push
and
mov
mov
test
and
ljmp
push
mov
cwtl
dec
xor
jl
sub
lods
pop
inc
mov
mov
je
repnz
inc
rcll
add
cmp
inc
xor
rolb
pop
sbb
shll
test
jne
and
fcompl
adc
ret
mov
add
jb
aam
ja
xchg
ljmp
push
add
dec
add
push
rolb
jno
mov
jmp
inc
or
push
stos
add
xor
sbb
mov
mov
jne
ret
pop
mov
pusha
int
loope
add
pop
sbb
movl
xor
push
aad
and
add
adc
cmpsb
sbb
rol
shll
inc
ret
mov
add
push
loop
or
rcll
enter
das
mov
sbb
jae
sbb
shll
jne
bound
sahf
daa
mov
rorl
lret
mov
rclb
leave
lret
pusha
pop
aam
lret
mov
test
push
mov
push
movsb
xchg
push
push
dec
inc
inc
sub
mov
sbb
add
xor
adc
orb
pop
test
out
pushf
cmpb
jl
leave
add
loop
mov
inc
xchg
jle
pop
shlb
icebp
aam
jo
push
push
lods
test
outsb
adc
aam
aam
lcall
inc
popa
stos
push
sbbb
iret
fildll
push
sbb
push
stos
leave
iret
push
pop
cltd
bound
and
into
movl
cs
subb
xor
mov
adc
incb
push
cmc
outsb
cwtl
clc
adc
adc
xchg
jmp
jo
or
ret
push
mov
jno
test
xchg
ret
push
or
rcll
les
mov
add
push
andl
fst
or
add
cmp
inc
cmpsb
cmp
jmp
or
int
sub
xor
pop
adc
adc
sbb
add
addl
push
shlb
or
ds
rcll
mov
fists
scas
and
adc
sub
and
popf
call
push
and
cmp
or
pusha
shrl
push
arpl
dec
xchg
push
hlt
aad
adc
rcrl
adc
inc
xor
pop
adc
or
push
cli
stc
movzbl
nop
mov
inc
or
out
lcall
inc
cltd
decl
push
cmpsl
add
mov
add
xor
or
inc
xor
mov
mov
data16
in
fiaddl
or
add
test
mov
stos
xor
mov
and
xor
popa
pop
addb
add
lea
mov
inc
mov
push
sbb
es
dec
scas
fs
lret
add
sbbl
inc
xlat
mov
test
sbb
pop
les
mov
push
sub
je
leave
ds
cli
cltd
and
push
inc
mov
adc
add
cs
out
stos
cmp
or
sbb
movsb
cs
adc
sbbb
xlat
xor
testb
inc
push
gs
test
add
push
jno
enter
sbb
xor
lds
add
inc
cmp
or
out
scas
stos
inc
mov
add
inc
insl
add
fs
xor
sub
xchg
rcr
mov
push
add
movsl
push
jb
cmp
aam
pop
ret
movb
leave
add
lock
js
mov
pushf
add
mov
add
add
sbb
test
inc
ud0
cmp
cmp
shrl
rcll
pop
jnp
stos
fwait
rep
lret
es
clc
add
movsl
scas
add
sub
sub
fnsave
rol
add
inc
dec
and
out
sbb
sbb
mov
or
bsf
adc
push
lods
incb
bound
add
popa
and
repnz
aam
scas
adc
sbb
out
dec
adc
jbe
jnp
aad
sbb
out
pop
jge
cmpsb
and
push
sub
mov
subl
jb
stos
popa
rcrl
stc
or
fcoml
cmp
jo
loop
or
cs
test
es
and
xchg
stos
inc
mov
jo
loopne
popa
mov
das
pusha
inc
scas
and
movb
arpl
les
dec
repnz
adc
dec
dec
add
inc
rorb
fsubrl
mov
outsl
leave
lret
cmp
lret
xor
or
mov
cmp
or
testl
mov
sub
inc
mov
fadd
add
pusha
mov
faddl
xor
jo
mov
sbb
lods
ljmp
push
sub
cmp
mov
cwtl
sub
in
jp
lcall
xchg
and
in
fisttpll
jo,pt
icebp
testb
fs
fwait
addb
and
test
fcom
dec
add
push
pop
rcr
sub
scas
fst
movb
adc
adc
inc
mov
jle
mov
inc
push
dec
push
xchg
stos
sbb
adc
fadds
cli
add
push
aam
dec
ficoml
add
mov
and
pop
lods
pop
push
adc
cltd
pop
or
outsl
inc
aad
daa
ja
or
mov
jmp
adc
push
mov
cmpsb
dec
lea
adc
int
ret
fcomps
push
xchg
add
push
mov
mov
xor
or
cltd
or
sbb
pushf
push
ret
or
test
pop
adc
subb
add
jbe
cmpsb
inc
in
loope
nop
andl
mov
xor
add
sub
jb
repz
inc
or
adc
inc
rcll
fadds
test
push
add
or
sub
js
stos
xor
inc
xor
sbb
jge
xor
adc
and
movb
arpl
stos
add
pop
addr16
mov
mov
xor
call
cmpl
push
fisubl
cmp
out
sbb
or
add
sbb
jmp
mov
add
ret
mov
dec
xor
push
sub
adc
dec
bound
or
sbb
sahf
shrl
addb
push
xchg
lods
sub
or
jle
jecxz
orb
ret
push
push
sub
testb
js
jne
shl
std
bound
jo
into
addb
xchg
lods
sub
hlt
add
das
jo
rorl
and
aam
rolb
cltd
or
cli
and
and
faddl
sbb
dec
loopne
add
pop
inc
stos
pop
pusha
add
out
or
mov
mov
stos
pop
cwtl
lret
mov
xor
cs
call
test
call
adc
jae
xchg
sub
cmp
loopne
xchg
and
push
test
mov
mov
mov
xchg
xor
mov
sub
aam
adc
adc
stos
pop
ret
test
pop
push
xchg
ret
pop
adc
push
lods
and
mov
mov
add
lods
or
or
adc
push
rorb
mov
xor
mov
ss
stos
sub
daa
call
mov
add
call
inc
lea
push
pop
push
repz
push
jns
mov
mov
pop
xor
xchg
test
mov
dec
push
test
mov
and
mov
adc
push
jae
xchg
mov
jno
adc
push
adc
pop
ret
add
pop
xchg
jns
cmp
xor
push
xlat
mov
dec
mov
sub
inc
jge
mov
mov
dec
fdivrp
sbb
mov
adc
push
and
ud2
movsl
mov
or
mov
fiadds
nop
dec
rcr
jno
sbb
add
or
out
mov
shrb
and
push
ret
fldl
out
pop
es
jp
push
outsb
sbb
jae
pop
test
push
cmp
shr
sub
pushf
mov
sub
mov
or
hlt
enter
inc
mov
pushf
fisttps
aaa
push
mov
adc
pop
mov
test
orb
sbb
lcall
rcll
jmp
mov
or
sub
and
xchg
loop
aaa
ficoms
daa
test
leave
xchg
push
push
xlat
cmpb
mov
pop
jb
sbb
cmp
dec
push
pop
or
adc
les
cld
xor
push
add
xor
push
adc
jle
enter
pop
cmp
fidivrl
jmp
sbb
rclb
jge
fwait
xchg
loopne
and
lods
push
cmpb
rolb
cli
jnp
pusha
ret
inc
xchg
add
push
nop
push
mov
rcll
loopne
out
adc
dec
aad
adc
push
vcvtsi2ssl
mov
adc
sahf
sub
sarl
push
test
cwtl
sub
fprem1
adc
sub
lods
int
mov
andb
sub
hlt
adc
mov
pop
sub
mov
xlat
stos
adc
and
lea
icebp
movsl
or
pop
and
aaa
in
aaa
or
adc
aad
loop
jne
push
cmp
adc
ret
mov
jo
pop
icebp
push
xchg
xor
lret
aam
outsl
inc
movsb
adc
into
rcr
scas
addr16
pusha
daa
test
cld
inc
nop
inc
xor
ljmp
repnz
scas
cmovae
mov
arpl
mov
lock
adc
out
mov
inc
xchg
cmp
rolb
dec
pop
icebp
scas
lret
rclb
sarb
push
adc
enter
add
addr16
loopne
std
call
shl
gs
mov
pop
loope
insl
bound
dec
xchg
mov
xor
gs
ljmp
xchg
mov
rclb
adc
rorb
jo
xchg
sub
inc
pop
push
call
and
hlt
mov
inc
shrb
enter
xor
stc
insb
sub
xchg
jmp
or
mull
stos
cwtl
loope
jno
sbbb
mov
adc
or
test
mov
adc
pop
mov
sbb
into
jle
pop
lock
adc
ret
push
push
test
orb
sbb
adc
adc
jmp
add
orb
cmp
out
push
loopne
push
adc
push
test
push
je
pop
or
sti
or
cmp
mov
and
imul
insl
je
outsb
out
lock
aad
test
daa
or
or
or
testl
shr
xor
and
sub
loopne
cmp
push
inc
pop
aam
aas
push
cltd
repnz
fdivs
fnstcw
inc
mov
rclb
out
add
mov
jle
adc
and
sar
add
sub
or
mov
inc
movsb
and
dec
fwait
xchg
rorl
add
xor
andl
mov
iret
or
lds
inc
sub
imul
popa
or
pop
push
sbbl
add
sbbb
push
jmp
or
sahf
enter
adc
stos
dec
mov
xchg
push
inc
add
or
xor
or
push
cmpsb
push
jne
push
push
jae
pop
mov
adc
loope
cmpb
adc
fildl
dec
jp
es
mov
push
rclb
adc
int3
stos
sub
rorb
adc
into
cmp
xchg
loopne
add
aam
ficompl
or
lds
xlat
sbb
test
xlat
push
mulb
xchg
mov
dec
lahf
imul
sub
sbb
daa
lock
mov
push
sbb
add
cmp
mov
push
dec
push
and
cmp
lret
lcall
or
loopne
cmpsl
push
incb
cwtl
push
arpl
adc
cmp
add
or
cmc
sbb
addb
enter
adc
shr
adc
adc
call
cld
mov
pushf
js
push
pushf
add
add
push
ljmp
push
dec
ficoml
int
lods
xchg
inc
rcrb
pop
int3
add
push
ljmp
xchg
adc
xchg
cmp
adc
pop
mov
popf
js
jnp
test
cwtl
sub
rcll
andl
rdpmc
push
or
in
repz
xor
ss
je
clc
decl
inc
ljmp
popf
pop
pop
push
lock
jmp
pop
xorl
sbbb
jecxz
mov
leave
cmp
sar
lock
orb
cmc
mov
adc
icebp
and
cmpsl
xor
cmpl
sysret
sub
inc
xchg
sub
popf
sub
inc
das
or
sbb
jae
push
or
out
lret
addl
mov
and
sub
jl
sub
sbb
sbb
out
sbb
cmp
and
arpl
adc
aam
mov
or
out
lret
lock
adc
loop
fwait
subb
pop
xchg
les
mov
dec
push
lcall
mov
or
push
mov
testl
sbb
scas
adcb
push
sub
adc
mov
cmp
add
add
pop
add
sbb
xlat
add
roll
add
lret
add
clc
jae
sbb
outsl
dec
call
pusha
ror
push
pop
xor
mov
sbb
dec
jne
das
inc
mov
inc
push
mov
sbb
sbb
jo
jnp
xor
push
or
adc
addl
lock
jnp
mov
xchg
and
push
push
cmpsb
mov
rolb
jge
pop
ds
cwtl
lahf
stos
addl
adc
add
pop
into
imul
adc
inc
xorb
int3
pop
shrb
push
dec
mov
jne
pop
int
rcrb
addl
clc
and
loope
lock
push
jno
mov
cmp
dec
jp
adcb
xchg
adc
andb
xchg
lret
mov
push
mov
sub
adc
or
jp
daa
call
sub
fcompl
or
dec
les
xchg
adc
lea
add
cmpl
mov
add
cmpsb
sbb
pop
je
sbb
or
sbbl
xor
adc
pop
loopne
call
cwtl
push
inc
dec
add
cli
out
add
sbb
imul
push
fisttpll
or
popf
and
push
and
push
xor
mov
sbb
cmpsb
sub
ret
out
pop
xchg
loope
ljmp
mov
and
idivb
push
adcl
push
jge
mov
jbe
ljmp
rolb
xchg
xlat
sbb
cmp
mov
mov
test
sbb
sbb
adc
repnz
inc
testb
into
push
roll
xor
outsb
icebp
jb
bound
pop
call
cmpsl
scas
lcall
insl
shrb
je
mov
pop
adc
xchg
xchg
or
lcall
mov
movsl
or
mov
out
sbb
xor
inc
mov
adcb
cli
ror
test
mov
jo
roll
dec
push
sarb
add
dec
jbe
lock
push
add
rolb
or
leave
pop
stc
adc
outsb
lock
ljmp
xchg
sub
add
aam
data16
outsl
push
in
dec
es
fucomp
mov
xchg
imul
cli
sub
mov
push
mov
ret
ficompl
add
sbb
add
cmp
inc
xor
pop
loope
xchg
adc
jge
lods
shrb
fwait
out
add
mov
mov
dec
sarb
fs
rcrl
lcall
xchg
lods
ja
cmp
dec
push
mov
sbb
dec
mov
sub
adc
fs
mov
pusha
mov
jmp
rcll
cmpb
push
adcl
andl
cs
push
inc
xchg
jne
mov
mull
test
jg
sbb
adc
adc
jo
xchg
add
roll
xchg
mov
rclb
in
xchg
lds
add
mov
mov
push
mov
in
ss
shlb
inc
ret
lods
xchg
jmp
les
and
cmpsb
add
adc
dec
push
in
dec
adc
pop
lods
or
es
inc
xor
jge
mov
or
and
sub
sub
jae
add
pop
sub
push
mov
mov
jl
xor
sub
mov
inc
sbb
adc
cwtl
nop
mov
push
push
push
loopne
in
ret
daa
test
adc
push
mov
jb
xchg
mov
sbb
xchg
loop
andl
cmp
ret
test
adc
xchg
pop
push
push
fs
or
je
push
jmp
push
out
jne
aam
in
lcall
lock
pop
add
cmp
shr
inc
adc
or
and
and
sbb
xorb
pop
pop
xchg
pop
pop
mov
or
daa
adc
push
push
add
and
lds
pop
or
sbb
test
loopne
gs
scas
push
loopne
rcrl
ljmp
add
mov
rcl
add
xor
add
sub
aas
cli
sbb
or
aam
gs
xor
adc
into
mov
push
rclb
jbe
mov
ja
pop
xor
sbb
loope
mov
xchg
outsb
cmp
mov
out
test
mov
ds
add
cltd
sub
mov
jmp
stos
bound
in
or
jb
or
dec
and
push
adc
stos
xchg
push
cmpsl
fnstsw
adc
adc
add
mov
test
mov
test
test
jg
loopne
add
xchg
adc
aad
or
pop
or
adc
mov
int
sbb
notb
sub
pop
mov
repnz
rcl
leave
leave
fstl
add
or
into
push
mov
inc
test
push
rorb
adc
loop
inc
dec
pop
mov
andb
ret
push
mov
fcoml
and
sbbb
push
and
mov
insb
sub
imulb
dec
adc
cmp
or
xor
fbstp
cs
sahf
mov
push
in
dec
popf
js
or
aam
mull
pusha
push
flds
je
scas
sbb
insl
add
notl
shrb
jge
xchg
ja
mov
push
loopne
cmpsb
enter
inc
sbb
stos
sbb
fildl
loop
popa
push
inc
mov
ja
rol
inc
pusha
mov
push
test
mov
xchg
jnp
inc
dec
push
out
pop
ret
cltd
dec
sbb
or
jle
xor
movb
pop
pop
mov
inc
mov
xor
orb
hlt
adc
inc
out
jge
add
enter
mov
pop
int3
rclb
lds
call
aad
dec
js
repnz
imul
mov
pop
popf
lret
push
push
stos
sub
xor
enter
add
test
out
adc
mov
sbb
dec
data16
stos
jl
mov
jmp
insb
std
shll
fucom
loopne
pushf
sub
jle
clc
add
xor
push
rcrb
movsb
sbb
xchg
mov
and
rcrb
leave
ss
add
add
hlt
fbld
cli
pop
ret
cmp
mov
mov
add
adc
add
sbb
mov
rcll
dec
mov
popa
mov
pop
std
jb
xor
enter
ret
popf
jb
mov
mov
xchg
mov
movb
sbb
xchg
mov
bswap
insb
pop
xchg
jno
mov
test
adc
push
rorb
pminsw
rcrl
adc
sbb
and
mov
fcoml
mov
jb
xor
movsb
hlt
and
add
adc
es
and
in
add
ret
dec
adc
pusha
pop
roll
adc
inc
out
xorb
leave
jecxz
icebp
cmp
jo
pushf
mov
lods
mov
or
rcl
bswap
rcrl
cmpb
sub
lret
or
test
sbb
push
xchg
add
test
test
stos
sti
cmp
fxch
sbb
dec
adc
lock
pop
fchs
sbb
sbb
inc
subb
ljmp
dec
mov
xor
sbb
or
cwtl
jo
adcl
int
add
nop
cmp
rorb
nop/reserved
inc
and
cmp
rorl
push
lds
insl
int3
pop
mov
cmpsb
pusha
addl
or
pop
shlb
mov
icebp
sub
sbb
push
popa
push
or
push
rcrl
xor
add
clc
aam
add
sarl
mov
jp
push
and
push
add
push
mov
test
movb
subb
push
int3
dec
incb
dec
mov
adc
push
adcl
packuswb
and
ficompl
adc
xchg
lods
sbb
fimull
sub
lret
push
push
rcl
ds
push
sti
stos
mov
sbb
push
ljmp
in
outsb
jae
ljmp
cmp
or
and
mov
ret
idiv
pop
addl
or
test
push
aas
push
inc
push
sbb
or
lods
jo
inc
fwait
cmpsl
cli
push
invd
adc
mov
push
sbb
dec
shlb
push
sub
adc
int
adc
mov
ret
push
adc
push
jae
and
push
adc
xorb
test
jne
hlt
shr
sbb
adc
jno
mov
mov
test
orb
dec
add
out
adc
adc
push
movsl
sub
movsl
cli
push
xor
or
jp
pop
sti
enter
or
stos
lds
push
inc
movsl
jnp
dec
add
add
dec
hlt
mov
test
dec
mov
ljmp
xchg
xchg
add
rclb
gs
mov
mov
dec
bound
inc
add
adc
test
stos
test
mov
sub
push
xor
insb
push
push
jp
cmp
dec
adc
and
adc
jp
aam
cmp
sbb
mov
adcl
jmp
out
push
mov
and
push
or
loopne
jecxz
mov
jp
roll
and
aam
addr16
cmpsl
leave
inc
sub
sti
xor
add
push
mov
push
js
mov
sbb
inc
sub
xor
shlb
je
inc
mov
jno
xchg
or
roll
es
inc
jp
enter
ljmp
add
orb
mov
xchg
and
adc
sbb
push
rolb
repnz
iret
rolb
inc
test
jns
es
push
js
jge
and
add
pop
push
rcrb
lods
std
mov
dec
mov
insb
cs
leave
movsl
jmp
je
dec
push
inc
rolb
cs
inc
mov
and
orb
aad
fs
pop
pop
mov
aam
jns
cmp
inc
mov
cwtl
sbbb
and
cmp
add
sub
mov
sub
aad
xchg
sbb
int
mov
test
fmuls
push
call
add
xchg
lock
or
push
fcomip
sbb
xchg
cmp
jo
sub
adc
inc
je
cmp
adc
pop
xor
xchg
xor
xchg
mov
push
jb
add
xor
push
mov
shrl
mov
xor
and
movsb
or
adc
pop
add
cmp
dec
orb
push
inc
je
loop
mov
or
orl
ss
mov
pop
or
xchg
rcrl
mov
movsl
inc
shlb
xor
scas
mov
mov
adc
sbb
and
xchg
lret
jb
imul
mov
mov
cmp
call
xor
ret
sbb
mov
rol
fwait
jmp
push
popa
out
adc
clc
sub
inc
push
ror
push
je
and
adc
bound
push
pop
add
pop
push
lea
inc
in
xchg
cmp
xor
stos
xor
dec
and
sar
popa
xor
in
cli
add
lods
sub
ret
mov
ret
add
sbb
inc
aad
pop
pop
sbb
hlt
addb
cld
aam
push
das
push
push
cmp
or
in
push
or
pop
lock
push
aad
push
cmp
add
decb
or
loop
push
sub
add
xlat
xor
adc
sub
into
lds
loope
ret
pop
jmp
sbb
ret
mov
rolb
dec
sub
jne
inc
and
push
or
out
pop
or
pop
andl
push
pop
in
outsb
sti
or
cmpsb
inc
or
sub
and
ds
cmp
mov
and
pop
data16
inc
jns
mov
jno
jae
adcb
push
push
call
and
jle
cmp
int
dec
push
add
xor
xor
sub
fs
push
push
dec
dec
es
add
aaa
mov
push
mov
push
lcall
enter
inc
out
imul
icebp
mov
inc
pop
lds
mov
shll
sub
push
mov
jo
cmp
pushf
add
inc
out
movl
pop
repz
cmc
and
mov
mov
push
js
into
push
jns
push
std
sub
push
and
movsl
stos
clc
xor
mov
push
mov
xor
xor
or
mov
insb
or
push
rcll
pushf
mov
cmp
pop
jge
shlb
push
xchg
pusha
xchg
std
sbb
sbb
pop
imul
test
stos
insl
sub
adc
xchg
jge
jge
or
lcall
sub
data16
add
les
pop
int3
fdivs
add
xor
and
add
mov
dec
lds
xor
fucomip
push
jl
loop
pop
inc
push
mov
pop
data16
or
ss
leave
sar
dec
divb
int
add
ljmp
loop
pop
lcall
adc
aam
sbb
pop
rclb
xor
cld
les
add
lret
pop
xchg
imul
push
or
in
inc
or
xchg
popa
sbb
pop
not
repnz
push
mov
sti
roll
pusha
add
add
push
xor
pop
aad
adc
mov
insl
or
mov
push
sbb
mov
cmp
adc
and
test
out
leave
or
inc
lock
movsb
and
call
sbb
pop
lock
arpl
mov
movb
lods
push
lods
bound
xchg
shl
popf
mov
mov
lock
andb
aaa
jp
dec
adc
mov
arpl
test
je
ljmp
bound
adc
xchg
add
int
js
mov
and
sbb
cmpsl
push
scas
sbb
ja
pop
orb
mov
jo
xor
iret
cmp
mov
or
cmp
jb
push
mov
inc
mov
jae
insl
enter
adc
hlt
rolb
inc
adc
xlat
pop
testb
dec
loope
loopne
ret
adc
xorps
add
hlt
add
in
out
xor
addb
lcall
mov
adc
inc
mov
les
mov
cmc
ljmp
test
adc
sub
pop
sub
xchg
add
icebp
je
mov
cmp
inc
sub
sbb
xchg
jecxz
test
adc
inc
enter
add
or
das
out
push
sbb
xlat
pusha
popa
into
aam
mov
sbb
xchg
nop
sbb
sbb
push
fcmovnbe
popa
pop
mov
pop
in
rcr
repnz
or
sarb
in
sub
iret
push
sub
xlat
lret
adc
add
adc
int
int
jl
xlat
mov
insb
cvtdq2ps
sbb
jle
add
add
add
cmp
jne
xor
or
imul
and
adc
aad
mov
mov
push
or
xor
and
mov
sub
addb
add
out
lret
mov
cld
roll
push
test
testl
xor
lds
cmp
es
sbb
dec
movsl
or
stos
pop
in
es
aaa
sub
test
in
inc
rorl
adc
ljmp
mov
popa
imulb
xor
and
adc
mov
sbb
sarl
bound
cmp
jno
mov
adc
adc
mov
aaa
pop
push
cs
xor
sti
add
push
add
jns
inc
push
push
loope
rolb
and
adc
adc
or
enter
adc
ret
add
rcrl
icebp
mov
cmp
js
lret
jle
jno
adc
xchg
bnd
pusha
aad
outsb
add
mov
ss
testb
add
mov
add
and
shll
dec
ss
sub
rclb
cmpb
mov
inc
lahf
mov
mov
xor
jnp
jbe
xchg
and
scas
dec
or
dec
adc
cwtl
movsl
cmp
jle
or
push
push
adc
mov
cmpsb
sbb
xchg
test
insb
inc
mov
les
dec
add
mov
or
add
cmp
dec
rorl
js
sbb
popf
or
pop
rorl
rolb
or
fs
lcall
sbb
add
into
add
mov
adc
push
shll
cli
add
lods
add
ret
jns
lea
scas
xor
dec
adc
hlt
ja
xchg
push
add
daa
out
call
in
subl
ljmp
cmc
sub
loopne
ss
sbb
adc
or
and
sbb
inc
loopne
xchg
fadds
mov
das
dec
xor
arpl
add
pop
sarb
daa
adc
or
iret
push
scas
pop
mov
sub
fistps
adc
and
sub
or
shl
adc
push
inc
jns
nop
pop
mov
cli
pop
xchg
addr16
sub
cmp
pusha
mov
test
mov
ret
or
mov
sub
or
push
sub
leave
out
xchg
adc
hlt
push
lds
add
xor
xchg
test
or
add
adc
ljmp
add
call
adc
push
xchg
pop
sbb
add
sbb
adc
jo
add
mov
test
sub
add
jge
push
scas
ret
cld
pop
mov
lock
push
lods
adc
sbb
inc
lds
rorb
stos
adc
or
dec
push
ljmp
mov
push
add
push
into
iret
adc
mov
stos
cli
xchg
add
or
lret
cmp
lret
jb
loop
leave
inc
rorl
pusha
leave
mov
movsl
pop
pop
ljmp
in
and
sbb
push
xchg
adc
sbb
mov
xchg
xor
mov
push
mov
lret
lret
inc
mov
mov
and
cmp
sub
sbb
sub
je
mov
shrb
sub
or
add
sbb
or
cwtl
sub
cs
jno
xchg
mov
mov
push
test
cmp
jo
js
adc
adc
ret
xchg
add
cli
jp
or
jg
adc
gs
push
fisubs
cmp
or
xchg
push
js
je
cmp
lods
sub
lock
sbb
shlb
mov
and
and
lret
inc
into
add
aas
movsb
inc
gs
push
mov
mov
scas
xor
push
out
lret
cmc
fidivrs
subb
adc
fsubs
pop
mov
fcmovne
sbb
stos
rcll
adc
or
aam
or
sub
add
repz
pop
inc
push
xor
xor
shr
sub
add
stc
inc
add
mov
inc
rcrb
pushf
ljmp
push
icebp
pop
lods
nop
cld
aaa
mov
repnz
lea
inc
xor
les
push
mov
rorl
mov
adc
add
adc
leave
fstl
cltd
push
cli
or
andb
rolb
jo
inc
cmc
inc
imul
mov
xchg
adc
mov
cwtl
add
rcrl
orb
xchg
pop
shrl
push
not
mov
movsb
or
dec
push
movsl
and
cmp
inc
movsb
pop
in
inc
sub
adc
jnp
scas
push
scas
andb
push
mov
add
mov
adcl
clc
sub
inc
add
mov
push
add
inc
add
je
into
mov
jo
inc
add
sbb
jmp
or
sub
sbb
adc
lods
es
shll
xchg
dec
sbb
dec
es
and
push
xchg
add
xor
dec
rorb
sub
call
test
dec
mov
sahf
adc
push
add
arpl
out
shll
popf
or
movsb
or
pop
or
push
lret
inc
mov
pop
mov
in
add
sbb
push
push
dec
std
or
cli
cli
js
adc
xchg
bnd
cmpsb
loope
rcl
cmp
mov
pop
push
add
ss
xchg
insb
mov
inc
add
xchg
mov
lret
mov
pop
std
sbb
mov
mov
mov
loopne
or
int
es
or
cli
outsl
cmc
cwtl
add
jp
pop
add
pushl
mov
push
sbb
adc
cmovo
and
insb
add
inc
aad
enter
insl
mov
loopne
pop
mov
inc
test
dec
dec
inc
cmpsb
push
inc
test
mov
push
add
pushf
dec
sub
dec
sub
adc
int3
rol
es
inc
mov
push
gs
call
loope
test
mov
cltd
sbb
inc
cld
inc
mov
mov
inc
inc
cmpsl
adc
sbb
jb
xor
jo
jae
negl
rorb
mov
cmp
or
mov
cmp
jb
inc
cmp
mov
or
jle
push
xlat
add
lret
lret
loopne
push
scas
shlb
push
sbb
or
stc
int3
sbb
adc
stos
jge
add
lret
rcll
sub
adc
arpl
nop
int3
add
push
jo
inc
mov
inc
push
and
and
pop
mov
std
rcll
inc
into
jo
xorb
test
pop
mov
fisttpl
xchg
out
mov
add
adc
mov
or
and
and
daa
mov
adc
push
mov
xchg
adcl
lds
mov
shll
mov
mov
cmp
add
je
sahf
and
mov
cmp
xchg
in
andb
mov
inc
adc
pop
mov
mov
sbb
sub
pop
adc
mov
dec
cwtl
clc
add
sbb
add
add
and
pusha
shlb
sub
pushf
stos
inc
jo
jnp
dec
xchg
rorb
popa
fadd
adc
or
imul
lods
je
sbb
push
scas
jo
test
lods
sarb
push
xor
pushf
shlb
jle
jb
xor
shrb
add
jne
in
pop
sbb
push
pusha
out
decb
andb
lret
or
inc
sbb
lret
jae
inc
push
test
andb
sbb
sbb
sbb
mov
sbb
add
cltd
xchg
add
add
pop
xor
xchg
mov
fisubl
addb
outsb
pop
push
or
ljmp
shl
test
and
pop
in
pop
push
xor
jg
mov
rcll
pop
aad
xor
dec
and
push
push
daa
subb
or
std
and
lods
fidivrl
mov
or
sub
stos
les
push
inc
push
ret
nop
sub
popf
pop
lret
mov
push
pushf
mov
pop
cmp
adc
scas
sbb
fwait
or
clc
jge
pop
rcrb
or
pusha
icebp
dec
jns
pop
add
test
and
fstpl
stc
dec
ja
or
sbb
add
inc
lret
xor
loope
pop
mov
imul
clc
stos
pop
add
roll
adc
adc
cmc
sub
xchg
and
in
adc
cmp
jae
rcl
pop
daa
test
shlb
adc
mov
js
mov
lods
push
nop
and
cld
push
push
stos
test
xor
xchg
xchg
mov
xlat
push
xchg
inc
mulb
xchg
adc
push
daa
or
cmp
xchg
push
cmp
adc
inc
fcmovnu
jmp
movl
sub
subb
lcall
je
shrl
push
add
jne
xchg
jbe
sarl
push
adc
lock
test
adc
sbb
cmp
jp
mov
add
push
add
stos
cmp
add
clc
sbb
aaa
cmpsl
push
repnz
sub
jbe
sub
mov
mov
adc
inc
adc
sub
inc
or
mov
mov
adc
sbb
mov
fcomps
lret
leave
push
inc
adc
add
jno
cwtl
test
sbb
jb
push
in
add
sbbb
and
push
fs
arpl
cwtl
xor
jle
sub
fwait
mov
push
leave
xor
pushf
ljmp
cmp
inc
mov
pop
andl
repz
push
add
enter
adc
mov
arpl
push
sub
inc
fwait
or
aas
icebp
mov
roll
pop
jbe
rorb
cmp
xchg
sbb
cmpsl
pusha
cltd
lea
call
pop
dec
sar
pushf
mov
sbb
pop
addl
outsl
aam
push
jp
ret
popa
and
mov
xor
adc
scas
mov
sti
sbb
or
cmp
push
add
push
xor
call
outsb
loope
ret
add
xchg
push
mov
adc
inc
xor
lods
xor
or
adc
sbb
stos
pop
rcl
popa
imulb
and
push
or
lcall
push
in
add
pshufw
mov
aas
rorl
add
aad
pop
clc
std
dec
stos
call
dec
push
push
cltd
push
cmp
inc
enter
dec
stos
or
pusha
mov
or
les
adc
adc
inc
sbb
push
mov
sub
xchg
push
mov
or
fimuls
andb
loop
sub
dec
sbb
cmp
cwtl
rcll
or
and
cli
push
push
or
mov
mov
rcrb
out
xor
fadds
add
stos
test
xorl
ret
cmpb
add
loope
es
dec
and
lea
and
shll
in
sbb
push
loopne
push
lret
pop
and
subb
pusha
in
sbb
bound
repz
ss
xor
pop
add
pop
jne
add
pop
loop
adc
cli
pop
inc
leave
pop
inc
nop
mov
pop
push
or
adc
push
sbb
addb
test
cmpsb
dec
leave
xlat
repnz
mov
fistpl
adc
inc
movsb
pop
adc
xchg
nop
popf
test
movsb
int3
push
or
pop
jl
out
ret
inc
inc
stos
loop
or
ljmp
dec
sbb
divb
shl
enter
push
lea
sbb
fwait
sbb
mov
sbb
add
add
cltd
adc
adc
mov
mov
andb
lods
test
mov
popl
or
add
cltd
cmpsb
stos
pop
fisubrs
jmp
mov
nop
mov
je
lock
add
mov
adc
rcrl
addb
add
shrl
arpl
add
lahf
sub
cmp
inc
xchg
mov
dec
inc
lods
cltd
insb
das
pop
loop
and
ror
shr
shll
jo
inc
fdivl
pop
pusha
enter
push
xchg
call
lret
fs
ss
cmc
xchg
add
pusha
push
push
sbb
cwtl
mov
fsubrl
push
repnz
add
dec
push
cltd
adc
xchg
mov
iret
mov
ds
mov
adcl
adc
cmp
ret
xor
pop
and
mov
and
add
mov
sbb
jb
pop
add
lret
or
pop
add
add
popf
mov
in
adc
lock
dec
push
adc
ret
pop
add
add
xchg
lar
add
push
inc
and
inc
add
rcl
push
dec
test
cmp
push
cmp
mov
aaa
addl
rorb
lea
mov
shrl
adc
adc
xor
adc
or
or
cmp
and
mov
in
jl
sbb
cwtl
pop
stc
cmp
inc
rcl
repz
push
scas
jo
cltd
loopne
pop
shll
in
push
adc
or
and
push
fisttps
mov
xchg
rol
rorl
mov
cmp
adc
pusha
push
pop
push
mov
xor
into
stos
loope
jne
imul
mov
jg
and
and
inc
inc
or
cmc
xchg
xor
cmp
jbe
mov
call
int3
push
stos
lcall
rclb
and
or
mov
push
dec
popf
cli
jp
sbb
and
xchg
ljmp
test
and
sbb
shrl
fldz
push
daa
fwait
addb
pop
push
orl
sub
mov
xchg
popf
add
inc
or
sub
icebp
mov
xchg
rclb
mov
jo
and
jge
adc
or
xor
sbbl
inc
and
rcrl
into
call
adc
push
scas
in
add
scas
mov
mov
pop
mov
sub
js
stos
push
cs
lods
fiaddl
cmp
outsb
push
mov
dec
cmp
add
stos
push
sub
dec
pop
inc
mov
ljmp
xor
or
jmp
xor
stos
push
adc
xor
push
repz
movsb
shlb
add
adc
pop
sbbb
ja,pt
sahf
mov
fmull
jne
stos
add
or
push
loope
dec
movsb
cmp
mov
test
add
adc
adc
cld
es
lds
add
in
adc
add
pushf
fs
adc
add
subl
push
loopne
xchg
rcrl
xchg
push
sub
rorl
hlt
mov
sbb
sub
inc
push
rcl
fucom
cmpsb
sub
cltd
int3
pop
push
xor
and
jno
dec
mov
or
and
xchg
enter
cmp
fwait
mov
call
pop
sub
pop
out
es
or
inc
add
push
jae
mov
jp
pop
in
test
mov
mov
adc
cwtl
push
pusha
mov
leave
pop
ficoms
mov
mov
jns
xchg
or
inc
mov
insb
mov
mov
mov
inc
lret
testb
push
mov
jecxz
mov
loop
adc
mov
imul
scas
mov
pop
or
sbb
and
repz
fwait
sbb
sub
sbb
or
push
push
jp
push
aam
mov
adc
js
sbb
lds
int3
mov
push
adc
test
xor
sub
dec
rorb
sbb
add
negb
in
nop
adc
dec
cli
hlt
inc
push
mov
in
rcrl
push
shl
into
cmp
mov
pop
jne
call
mov
fisubl
loop
out
push
lcall
shl
dec
cmp
fwait
gs
data16
mov
into
in
in
pop
or
jp
inc
test
into
mov
jb
push
jecxz
mov
into
cmp
dec
adc
inc
sbb
push
push
dec
inc
pushf
rcll
and
pop
cmpsb
icebp
pop
mov
pop
and
nop
jae
cwtl
icebp
dec
jp
wrmsr
inc
enter
jne
loopne
adc
movsb
mov
std
lret
or
xor
xor
mov
inc
shrl
hlt
xor
jnp
or
test
scas
and
into
ret
push
pop
or
pop
sub
or
test
out
mov
shlb
bound
orb
push
mov
pop
aam
xchg
mov
adc
jne
je
mov
fmuls
shlb
mov
dec
push
add
mov
lahf
adc
adc
dec
jp
mov
jb
lea
out
pop
imul
push
xorl
pop
pop
movsl
dec
cvtps2pi
mov
aad
jmp
sbb
nop/reserved
hlt
sub
pop
push
push
mov
sbb
call
xchg
pushf
rorb
adc
ja
push
icebp
inc
or
sub
adc
movl
adcb
dec
mov
pop
ljmp
shrl
adc
js
rclb
icebp
ret
jge
mov
add
add
cmp
xlat
ret
cli
popf
mov
add
push
mov
inc
add
ret
add
add
push
fnstenv
int
push
in
xchg
insb
add
inc
icebp
cmp
mov
mov
mov
mov
lret
stos
xchg
and
mov
mov
ljmp
test
adc
xor
call
shl
stc
ret
xor
bsf
out
inc
sbb
leave
adc
rorb
add
sbb
dec
and
push
mov
stos
pop
es
movsb
pop
cmp
and
jmp
push
sarl
pop
xor
inc
popf
xchg
or
sub
xchg
or
in
loop
or
dec
dec
dec
mov
hlt
sub
mov
add
sub
xchg
call
lods
lret
or
cmp
add
lcall
cmp
pop
movsb
clc
or
ss
int
pushf
mov
mov
cmp
jl
rol
leave
sub
movsl
inc
push
push
fwait
add
inc
xchg
bound
adc
dec
adc
or
push
xor
scas
mov
sub
pop
xlat
push
mov
mov
mov
push
add
jmp
and
ret
cmpsb
pop
or
ror
add
xchg
addb
or
js
xor
push
adc
push
add
das
sub
out
and
xchg
push
fildl
clc
fimuls
addr16
int3
xchg
mov
adcb
rolb
in
add
addb
addb
push
pop
outsl
cltd
and
mov
adc
sub
mov
pusha
cmp
leave
pusha
and
mov
ljmp
push
xor
mov
sbb
cmp
fsubl
push
sub
cli
mov
scas
and
adc
ret
sub
jmp
dec
ret
and
inc
mov
fistps
add
loop
inc
xor
xor
insl
xchg
sbb
mov
push
test
inc
cmpsb
mov
scas
inc
or
add
mov
cltd
cli
mov
addl
sub
ret
mov
dec
push
mov
fidivrl
sar
push
rorb
pop
inc
sub
mov
sbb
mov
adc
loopne
mov
sbb
inc
adc
mov
add
mov
adc
bound
push
mov
inc
sarb
add
rolb
sbb
leave
inc
push
add
inc
out
dec
clc
dec
mov
add
pusha
ret
dec
inc
sbbb
lret
mov
mov
sbb
add
adc
call
inc
icebp
loopne
push
sub
ljmp
stos
adc
add
out
mov
stc
leave
or
sbb
loop
push
add
scas
into
jb
or
cmc
ss
pop
in
push
movsl
push
leave
xor
cmp
shlb
adc
in
or
enter
test
jo
adcb
adc
mov
mov
push
jle
mov
ret
mov
out
and
pop
aam
sub
jmp
cmp
jb
loope
sub
enter
negl
mov
add
aaa
stos
sbb
int
pop
in
add
jns
js
sub
shr
aas
andb
iret
mov
adc
mov
lods
test
sbb
push
or
mov
xor
repz
sub
lea
xchg
es
inc
push
rclb
fmull
mov
adc
notl
inc
mov
jp
ds
cwtl
push
jnp
sbb
lods
sbb
pop
sbb
xor
cmp
ret
sbb
cmpsl
push
push
adc
test
call
adc
cmp
push
popf
or
pop
in
aaa
mov
lret
movsb
adc
and
fwait
and
sbb
adc
or
cmc
dec
test
gs
sahf
gs
cmpsl
or
rolb
xor
add
imul
dec
push
mov
dec
inc
or
cli
cmp
inc
ljmp
lods
inc
sbb
or
or
adcl
lahf
or
pop
inc
cmp
les
and
sbb
into
xor
mov
push
roll
sbb
xor
js
pop
clc
add
xor
push
shrl
push
lods
shrl
and
add
insl
dec
push
sbb
xor
xchg
sub
ljmp
push
cpuid
mov
xor
inc
mov
mov
adc
aad
sub
icebp
and
jecxz
popf
lods
pop
add
mov
pop
test
push
mov
dec
mov
mov
xchg
mov
add
push
ret
out
jno
aad
outsl
or
inc
or
cmpsl
adc
ret
dec
dec
add
jmp
jno
out
inc
adc
push
sbb
aam
icebp
inc
adc
mov
inc
push
pusha
popf
pushf
cmpxchg
sbb
cli
cmp
les
dec
fldl
adc
xchg
aad
test
ret
sbb
add
cwtl
cmp
enter
lret
push
loope
addr16
ja
or
inc
pop
in
add
push
movsb
add
adc
mov
mov
cmc
push
add
sbb
jo
aam
add
popf
fdivs
and
jg
adc
imul
sub
mov
mov
add
push
mov
jo
pushf
adc
retw
push
sub
cmp
in
dec
lds
pop
mov
out
adcb
rcrb
sbb
mov
mov
sub
mov
xor
cmpsb
dec
xchg
pop
sbb
and
dec
outsb
cmp
sub
or
pop
push
or
test
fdivr
push
shlb
scas
add
pusha
xlat
xor
push
jno
ret
andb
rolb
dec
or
inc
mov
adc
mov
inc
cmp
jnp
dec
sbb
cmp
lds
into
into
adc
inc
nop
or
jp
fwait
push
aad
add
or
cmp
push
add
add
or
enter
jp
and
mov
sub
adc
adc
insb
or
fnstsw
cmpsb
rorl
pop
cld
sub
mov
jl
and
shll
fs
stos
pop
rcrb
cltd
push
add
add
and
fildll
xor
xor
icebp
hlt
stos
add
fdecstp
loopne
add
mov
or
icebp
loope
leave
es
push
or
addb
in
outsb
xor
lcall
popf
ljmp
pop
or
andl
add
inc
adc
mov
rcll
gs
sub
dec
int
mov
cmpsl
sbb
push
cwtl
imul
adc
or
test
lock
imul
scas
into
or
dec
cmp
sbb
dec
push
jo
lea
shll
mov
dec
sbb
scas
mov
add
jle
push
xor
rorl
add
push
cltd
mov
es
dec
xchg
ljmp
stc
sbb
push
andb
push
pop
mov
icebp
faddl
mov
clc
test
mov
mov
je
jp
inc
rorb
aam
scas
sub
in
mov
cmpsb
cmp
xchg
or
mov
fsubs
mov
sbb
orb
into
das
ret
loopne
stc
test
cmpsl
rclb
jl
push
addr16
jne
sub
xor
dec
in
or
pusha
popa
cmp
adc
xor
test
rclb
shll
or
cmpsb
xchg
and
pushf
jmp
pop
stos
jae
push
add
das
adc
mov
pop
rclb
shrb
push
sub
xchg
dec
data16
push
sub
test
jo
outsl
adc
or
cmpsl
stos
push
dec
cli
mov
push
or
ljmp
mov
dec
jne
jg
rcll
pop
adc
jmp
addl
push
mov
inc
add
mov
in
and
pop
mov
inc
adc
xor
xor
addr16
or
cs
sub
add
mov
jnp
enter
push
push
cmpb
mov
in
dec
ret
and
or
mov
add
lret
adc
push
sub
push
add
in
adc
or
gs
repz
xchg
push
inc
kmovw
cmp
or
lods
bound
sub
and
jns
shlb
jp
xor
push
das
out
inc
and
xlat
sub
push
mov
mov
leave
jp
es
mov
sbb
mov
mov
push
cmpsl
xchg
scas
sbb
push
repz
test
loopne
jge
ret
pop
push
dec
mov
lock
shll
inc
and
rorl
cmp
stos
loop
pop
sbb
test
add
or
les
xor
or
push
xchg
push
pop
test
adc
sbbb
popf
lods
filds
push
cmp
cmp
pop
mov
sub
loopne
mov
inc
push
dec
inc
adc
and
jp
stos
mov
add
call
mov
les
shlb
or
sub
mov
in
push
inc
push
jo
stos
cmp
add
dec
adc
sbb
or
subl
xlat
scas
add
idiv
jmp
push
sbb
out
xchg
arpl
ljmp
add
push
push
jo
or
stos
test
aaa
xchg
jp
call
out
sub
mov
shl
mov
inc
movsb
add
push
and
push
xor
cmpsb
ror
and
enter
adc
or
cltd
jo
in
or
add
or
loop
pop
inc
mov
stos
or
shrl
lea
sub
push
je
sub
adc
adc
or
sub
push
adc
adc
fs
jne
sarb
sbb
dec
xor
pop
in
in
test
test
lcall
inc
dec
enter
jmp
lock
xchg
sbb
rolw
sbb
pop
lock
mov
add
and
adc
mov
adc
or
xor
jnp
into
sub
adc
jae
shrb
jne
leave
dec
lret
fcmovbe
cmpl
or
ret
in
cmc
loopne
enter
xchg
push
add
loope
mov
cmp
fisttpl
sbb
and
push
xchg
sub
add
sbb
cmp
pop
gs
push
xor
cmp
sbb
in
push
or
repz
and
addr16
shll
lea
pop
rcl
clc
or
addl
cmp
pop
adc
es
stos
push
or
test
enter
adc
bound
into
mov
test
sub
pop
adc
add
and
ret
out
mov
rorb
jp
mov
rorb
ret
ror
cld
into
sbb
aad
adc
je
sbb
push
out
es
ds
leave
push
bound
inc
add
inc
mov
pushf
outsl
lock
mov
lods
jo
imul
cli
push
or
pop
adc
or
addr16
xchg
mov
cmc
sbb
loop
and
cwtl
xor
mov
sbb
test
test
into
and
dec
push
pop
insb
jecxz
pop
cmp
ljmp
or
mov
mov
mov
rcrb
xchg
xchg
push
or
scas
enter
adc
xchg
mov
xchg
adc
and
dec
push
cmp
push
adc
mov
pop
test
add
daa
or
and
loopne
mov
mov
add
mov
xchg
pop
scas
js
sarl
enter
loopne
add
les
and
adc
xor
cmp
stos
dec
mov
jbe
mov
mov
cmp
inc
repnz
pop
adc
outsb
into
cmp
test
add
jp
clc
rorb
rclb
cwtl
test
outsl
mov
das
mov
adc
clc
fildll
sub
icebp
xchg
ljmp
mov
inc
inc
sub
xor
out
cmpsb
loopne
lret
add
dec
dec
mov
mov
push
add
mov
insb
in
jb
xor
rorl
repz
nop
aam
or
out
addr16
or
add
inc
out
xor
mov
cmp
push
rol
xlat
cmpb
dec
or
push
sub
loop
cmpl
jge
sub
lods
rorl
sbbb
xorb
add
pop
add
mov
adc
loop
loope
loopne
inc
xchg
push
inc
or
cs
lcall
pop
jne
xchg
mov
divb
add
inc
jp
sub
rcll
push
mov
push
ljmp
jmp
cmpsl
loope
adc
adc
dec
add
pusha
jae
sub
outsb
jae
push
mov
pop
dec
lea
popa
mov
mov
pop
sub
add
push
xor
sbb
push
push
insb
leave
mov
subl
xor
mov
mov
clc
ffree
mov
fs
or
xchg
mov
sbb
ret
imulb
jge
andl
push
and
andl
stos
dec
sub
push
cmpsl
cmpsb
rorb
int3
push
mov
mov
dec
or
je
fmul
inc
sub
pop
mov
or
repnz
add
clc
mov
mov
cmp
mov
jae
mov
mov
push
and
xchg
call
rclb
jmp
mov
add
inc
pop
inc
and
loopne
add
push
sete
or
push
push
pop
xchg
mov
ret
inc
xchg
or
int3
dec
push
xchg
adcl
dec
push
movsb
mov
pop
push
and
push
xchg
dec
or
sbb
dec
and
ss
inc
je
push
and
add
pop
in
sahf
mov
sub
push
sti
mov
aad
inc
or
push
pop
loope
push
and
test
fstps
nop
and
mov
insl
xor
mov
ds
inc
sbb
aad
out
mov
mov
outsb
sbb
mov
sub
shrl
mov
dec
cmpsl
adcb
add
out
xchg
dec
or
inc
xor
cltd
popf
ficomps
fcom
add
rcll
enter
js
jle
pop
loopne
iret
call
or
nop
cmp
adc
xchg
movsl
inc
addr16
dec
push
pop
jnp
push
bound
sub
nop
adc
fwait
punpckhbw
mov
inc
mov
ret
test
mov
push
popa
xorb
dec
stos
movsb
sbbb
rol
in
inc
loope
ret
push
jo
cmp
inc
into
inc
xor
popa
ja
mov
xchg
and
cmovb
cld
jp
inc
xchg
push
xchg
es
arpl
xchg
jnp
ljmp
subb
rcll
mov
sbb
popa
inc
icebp
inc
test
xor
decl
into
adc
push
je
mov
xchg
xchg
xchg
jns
mov
push
lods
jo
mull
mov
faddl
cwtl
xor
sbb
gs
dec
add
push
sbb
lock
mov
push
cmp
mov
push
push
cmp
arpl
push
push
mov
push
add
inc
shlb
add
pop
xchg
add
jmp
sbb
nop
jb
mov
add
ret
sti
add
add
mov
inc
sarl
pop
jl,pt
mov
adc
push
jp
mov
dec
adc
xchg
cltd
add
mov
mov
jo
out
movsb
mov
mov
sbb
inc
out
fwait
pop
cmp
push
nop
and
cli
fwait
ja
stos
dec
loop
pop
aad
out
jne
lds
xor
stos
out
add
dec
inc
mov
mov
je
fmull
lcall
or
pop
push
push
pop
pop
or
sub
test
xor
sbbb
jne
test
inc
mov
sub
and
rcrl
or
dec
imul
lds
loopne
adc
rcrl
adc
cmpsb
sub
aam
cmp
inc
sub
add
inc
xor
push
rcll
int
sub
push
xor
popa
pop
daa
sbbb
leave
mov
sbb
inc
pop
aam
fwait
leave
adc
out
inc
enter
mov
or
inc
mov
sub
lods
jae
xchg
push
inc
adc
add
addr16
das
in
push
int3
test
add
jnp
or
add
sub
rolb
push
stos
inc
adc
add
push
adc
sbb
adc
mov
lahf
add
lods
add
mov
dec
or
rclb
add
add
fmulp
icebp
xchg
call
ret
daa
sbb
adc
stos
mov
gs
push
inc
push
dec
mov
or
adc
pop
xor
cmc
and
inc
add
call
sbb
cmpsb
stc
aad
pop
addl
and
or
mov
mov
add
sbbb
sub
add
arpl
inc
jnp
jp
jb
daa
xchg
dec
lcall
push
ret
pop
aad
mov
and
mov
or
jge
or
sub
cmp
mov
adc
jo
sub
pop
adc
cmp
mov
je
stc
cmpsb
ss
xor
outsl
cwtl
jp
pop
movsb
rclb
jb
cmp
repnz
stos
jl
adc
adc
pop
jae
push
lock
or
mov
in
jbe
mov
sahf
push
std
push
in
mov
hlt
pop
aam
dec
repnz
xchg
dec
movsl
and
add
ljmp
sbb
les
pop
push
xchg
mov
adc
inc
mov
jnp
rolb
and
xor
pop
or
shrb
lds
or
subb
pop
mov
int
sbb
and
pop
mov
in
sbb
fimull
call
daa
mov
iret
xlat
push
les
stc
in
push
and
lret
aam
mov
jmp
sub
sbb
or
adc
inc
movb
mov
add
mov
ds
cld
mov
add
or
inc
add
sbb
and
or
das
add
in
lods
dec
pop
dec
sub
ror
ret
sub
les
sbb
sub
xchg
jne
aam
push
sbb
mov
and
addr16
sbb
xor
xchg
sbb
repnz
mov
ja
add
adc
add
test
or
mov
add
add
ja
outsl
loope
mov
mov
das
shrl
xchg
pop
pop
mov
sub
adc
push
mov
mov
pop
adc
xchg
sbbb
mov
pop
jo
jp
adc
rol
cmp
jno
fcomps
adc
inc
out
or
lret
fdivrl
loope
push
rcrl
testb
jo
mov
mov
adc
or
ss
lock
enter
and
lea
sbb
sbb
adc
int3
push
pop
pop
add
inc
xchg
ja
adc
je
push
xchg
adc
pop
and
add
adc
rcrb
cmpsl
cli
inc
add
push
mov
jb
enter
negb
pop
xchg
xor
xor
sbb
subl
push
nop
sbb
lds
sub
in
inc
sub
stc
xor
mov
jnp
mov
sbb
cvtps2pd
xorl
mov
popa
push
jbe
scas
push
inc
lods
pop
pop
loope
cmpsl
dec
add
push
pop
inc
push
xor
add
inc
mov
push
aam
int
inc
mov
inc
lds
dec
mov
cmp
punpckhdq
movsl
icebp
inc
inc
test
js
ret
adc
test
fwait
jp
cmp
push
xchg
push
popa
sub
xchg
lret
or
loope
sub
push
mov
push
stos
jae
or
test
jp
mov
inc
fistps
jns
stos
adc
clc
shrl
pop
cmp
scas
aam
add
xor
push
adc
pusha
mov
mov
push
aam
inc
jno
mov
mov
in
test
pop
btcl
rol
jmp
mov
ss
mov
push
sbb
cli
or
sub
inc
popf
lret
lret
dec
add
cmpsl
fsubrs
lea
adc
mov
sub
lcall
shll
pop
sbb
fcoms
ret
addl
or
andl
inc
gs
scas
push
jecxz
pushf
xlat
jg
andb
rcr
pop
sub
inc
mov
std
pop
add
pusha
inc
push
or
pushl
push
addr16
adc
sbb
stos
stc
push
sbb
mov
and
adc
cwtl
add
je
xchg
add
cmp
orl
and
xor
ljmp
sub
mov
adcb
push
orl
push
xlat
sub
aam
lcall
and
add
push
test
mov
pushf
or
sub
adc
inc
xchg
xor
repnz
test
and
or
stos
loope
shlb
jmp
inc
or
std
cli
or
mov
or
leave
test
cs
jbe
adc
cli
stos
movsb
or
inc
sbb
and
pop
std
lret
mov
cmp
mov
cwtl
adc
dec
push
sub
sub
sub
movb
mov
mov
lea
in
dec
cli
xor
mov
jmp
scas
faddl
lret
ljmp
or
add
scas
push
lods
xchg
xor
stos
jo
lea
and
cmp
sbb
dec
loope
inc
popa
push
inc
or
dec
push
sbb
ss
test
mov
call
pushf
sub
js
dec
add
sub
out
hlt
push
out
loop
add
mov
mov
sahf
stos
ds
and
enter
jb
push
popa
dec
pusha
sub
xchg
jae
adc
mov
jb
rolb
scas
cmp
mov
xor
sub
mov
push
jno
jno
dec
inc
and
dec
sbb
icebp
sub
sar
in
adc
and
cwtl
or
jg
inc
mov
lret
icebp
jg
push
dec
mov
sub
movl
jg
sub
pusha
idivl
sbb
push
inc
and
jo
sub
cld
jg
cld
stc
cmp
addl
cmpsl
out
lcall
aad
sub
sub
insb
lock
stc
repz
inc
cmp
push
sbb
aas
out
or
push
jl
xchg
mov
cmc
mov
pop
das
cmp
repz
sub
aas
jg
cld
push
adc
mov
and
push
scas
repz
lahf
inc
mov
mov
popa
sub
cld
stc
stc
out
pop
mov
int3
rolb
pop
mov
imulb
push
ror
test
mov
stc
repz
test
sub
iretw
lahf
aas
jg
out
and
push
mov
cld
stc
repz
imul
mov
idivl
add
adc
inc
imul
rcrb
stc
repz
jns
lods
jnp
push
cmp
lods
in
or
jg
cld
pop
data16
push
icebp
std
rolb
out
inc
jno
out
lahf
out
cmp
add
push
pop
repz
in
adc
stc
aas
mov
pop
sub
jo
orl
subl
test
mov
mov
dec
mov
dec
lods
lods
sbb
shlb
xlat
or
imul
daa
loop
pop
movsb
dec
cld
stc
repz
mov
lea
mov
ja
ficomps
sarl
sub
test
stc
repz
sbb
sbb
push
adc
aas
jg
cld
cld
add
repz
outsl
push
xor
push
mov
repz
lahf
and
imul
dec
rorl
jg
cld
stc
data16
xor
add
scas
enter
out
lahf
aas
inc
sbb
imul
stc
rep
or
loopne
in
adc
aas
ret
push
pop
jp
rcr
out
aas
jg
push
orb
shl
cld
stc
repz
rolb
xor
mov
dec
or
jnp
lahf
aas
jg
dec
mov
mov
xchg
jne
jge
mov
stc
repz
inc
jo
xor
jbe
test
dec
lahf
aas
jg
mov
jnp
mov
mov
stc
repz
mov
xor
push
jbe
adc
into
pop
aas
jg
cld
jbe
inc
jge
shl
mov
imul
hlt
lahf
rep
add
jbe
into
aas
xchg
sbb
arpl
insl
jecxz
adc
repz
lahf
jnp
pop
xchg
int
and
lods
cmp
jg
cld
stc
push
or
sub
push
xchg
popa
jo
scas
in
filds
sub
iret
lahf
aas
or
aaa
pop
mov
cmpsl
cmp
cld
stc
repz
inc
sub
iret
mov
pop
or
decl
inc
jle
inc
pop
and
out
out
iret
jno,pt
out
lahf
aas
std
enter
inc
mov
push
int3
movsl
cld
stc
repz
in
cmp
sub
fidivl
inc
iret
lahf
aas
jg
popa
popa
js
jbe
jbe
sbb
test
mov
in
popf
test
mov
repz
cld
fmul
mov
cmpsl
shl
jnp
mov
cld
stc
and
lcall
das
dec
mov
iret
lahf
aas
movb
xorl
stc
repz
and
add
mov
mov
iret
lahf
aas
jg
loopne
push
scas
mov
nop
lock
stc
repz
mov
xchg
je
loop
lods
lahf
aas
jg
imul
jge
pop
rol
cmp
xchg
stc
repz
and
xor
lods
mov
cld
gs
fidivrs
cwtl
inc
mov
leave
cli
bsf
pop
loope
iret
lahf
test
mov
and
stc
inc
xchg
pop
lea
sub
lahf
aas
jg
dec
sub
cltd
or
repz
mov
mov
popf
aad
test
testb
xchg
inc
andb
out
push
in
adc
cmp
das
xor
lock
jg
cld
mov
cmp
adc
imul
iret
lahf
sub
xor
push
out
fnstcw
cld
stc
mov
inc
sub
je
test
movsb
inc
addb
sti
int
push
fdivl
xchg
ja
divl
lcall
or
aas
jg
sbb
testb
push
cmp
cltd
stc
repz
sub
loope
dec
imul
jg
cld
mov
in
pop
cmp
rol
xchg
repz
lahf
leave
pop
enter
stc
fsubl
jg
cld
stc
and
std
ret
jg
test
push
jnp
out
lahf
aas
dec
testl
adc
pushf
mov
xrelease
xchg
dec
sub
cli
mov
lock
iret
lahf
aas
jg
add
sbb
jnp
xchg
test
ljmp
dec
out
inc
andl
mov
call
or
xor
mov
repz
inc
out
pop
or
adc
pusha
sbb
xchg
sbb
aas
jg
cld
pop
mov
out
push
pop
push
xchg
xchg
dec
or
adc
pushl
jmp
and
nop
add
fadds
stc
adc
into
and
out
lahf
aas
pushf
jo
push
test
adc
cld
stc
repz
xor
fldenv
subl
lahf
aas
jg
faddl
lds
fimuls
cld
stc
repz
rol
jmp
inc
lret
scas
int
out
dec
push
xor
inc
mov
lea
and
jns
inc
imul
leave
in
push
xlat
push
cmp
rcrl
sub
mov
or
pushf
mov
pop
cs
mov
test
pop
iret
addl
jg
cld
push
mov
in
cmp
popf
mov
pop
js
out
lahf
dec
dec
or
call
fwait
incl
sbb
int
sub
popa
cmp
gs
inc
out
lahf
jg
adc
outsl
jl
ljmp
cld
stc
repz
test
shll
bound
mov
lahf
aas
jg
pop
negb
push
js
loop
stc
repz
fwait
outsb
test
xchg
sbb
loop
push
lahf
aas
jg
adc
cs
push
fucomip
clc
push
xor
stc
repz
movsl
or
pop
jae
adc
int3
jne
sub
fnsave
movsb
mov
jge
jl
mov
lahf
mov
push
mov
adc
mov
cld
stc
or
mov
jo
fwait
jp
jb
cld
stc
adc
cmp
jge
ljmp
jle
inc
repz
iret
jg
cld
stc
sbb
pop
xor
fldt
adc
out
lahf
aas
push
pop
mov
dec
or
jg,pn
cld
stc
repz
or
cwtl
ret
add
push
shll
test
cwtl
ljmp
push
adc
mov
sub
add
daa
lahf
aas
jg
outsb
mov
das
aas
jae
push
and
cld
loope
xor
mov
in
add
xor
iret
lahf
aas
xor
jo
mov
fxch
lret
nop
cld
stc
xrelease
movsb
shll
jecxz
aas
fisubs
mov
iret
lahf
aas
jg
pusha
mov
movsb
fadd
xchg
mov
popa
cld
stc
repz
scas
and
sub
inc
sbb
sbbb
lahf
aas
jg
icebp
movsl
xchg
and
and
add
stc
repz
cmpsl
push
stos
out
test
xchg
adc
aas
jg
cld
jp
sar
add
movsb
cmp
in
inc
add
lahf
repz
push
push
xchg
sub
mov
cld
stc
inc
mov
leave
aam
es
adc
ret
test
xor
ret
lcall
inc
cld
stc
repz
pop
mov
lods
mov
inc
aas
iret
lahf
aas
jg
daa
cmpsl
in
adc
int
cld
stc
repz
mov
sbb
cmp
divb
aas
jg
loope
and
outsb
mov
xchg
push
repnz
repz
stos
in
lret
push
xchg
dec
imul
xor
jg
cld
in
sti
fwait
es
negb
ds
jecxz
push
xchg
iret
lahf
dec
dec
xchg
insb
jnp
sahf
aas
jg
cmpsl
mov
or
mov
cld
pop
lahf
xlat
sti
or
repz
fdivs
xchg
jae
jg
cld
stc
mov
jl
pop
cmpsl
and
inc
aas
in
mov
movl
mov
add
repz
sbb
les
daa
cmpsl
in
iret
mov
lahf
aas
jg
lahf
jecxz
mov
dec
inc
out
fcmovne
mov
push
aad
dec
sar
cld
stc
repz
xchg
or
jae
rcrb
cs
iret
lahf
aas
jg
cmpsb
fsubl
push
sub
or
cmp
cld
stc
repz
ret
mov
mov
jno
aas
jg
cmpsl
jo
lahf
lds
scas
cwtl
in
xlat
push
stc
repz
xor
cld
rorl
or
shll
cld
iret
cmp
and
mov
lds
lea
iret
lahf
aas
sbb
jl
mov
stc
repz
cmp
cmp
adc
xor
dec
sub
aas
jg
cld
cmc
xchg
cmpsb
adcl
push
mov
adc
mov
mov
push
test
stc
repz
fisttps
clc
aaa
push
mov
and
cld
mov
out
push
pop
cmp
and
popf
mov
xor
cld
stc
repz
mov
mov
push
sbb
fbstp
iret
lahf
aas
jg
push
and
ss
mov
stc
pop
mov
out
xor
cmpsl
cmp
jg
cld
mov
sub
xor
dec
gs
repz
lahf
cli
mov
xchg
xor
jg
cld
stc
dec
mov
stos
aam
insl
sub
inc
addl
leave
and
lahf
aas
sub
inc
test
leave
sbb
andb
bound
sbb
scas
stos
iret
lahf
aas
jg
adc
mov
xlat
mov
in
stc
repz
dec
jmp
adc
mov
pusha
loope
inc
insb
lahf
aas
jg
testl
fnstenv
push
mov
mov
stc
repz
jg
xor
jecxz
inc
xlat
mov
aas
jg
cld
mov
stos
data16
ss
sbb
lahf
dec
imul
cs
push
lahf
lret
xchg
jg
cld
stc
rclb
cltd
rcl
sub
adc
lahf
aas
enter
popa
test
stc
repz
push
and
stos
or
aaa
xor
lahf
aas
jg
leave
pop
mov
dec
cmp
fwait
cld
in
out
xlat
ljmp
mov
pop
jg
mov
xor
dec
mov
cld
shrb
scas
pop
loop
push
iret
jmp
repz
lahf
jle
or
pushf
pop
orb
cld
cld
stc
xchg
xchg
sbb
inc
inc
mov
add
xlat
sahf
sbb
inc
inc
inc
xor
jg
pop
push
pop
mov
mov
cld
stc
repz
xor
jo
lret
out
sub
add
mov
and
sub
fwait
aaa
cmc
mov
fimull
stc
out
mov
cld
inc
mov
out
push
shlb
fwait
aaa
outsl
fidivrs
lock
push
cmp
lcall
sub
fadds
aaa
repz
aaa
outsl
fidivrs
cs
push
pop
sti
jmp
or
outsl
repz
fwait
dec
std
and
push
xchg
mov
outsb
outsl
fidivrs
xor
rorl
out
fwait
aaa
fildl
outsb
ret
in
cmpsl
mov
repz
adc
mov
imul
in
sub
inc
dec
and
mov
xchg
fdivl
cli
inc
mov
fldcw
leave
ret
mov
push
fldenv
adc
cmp
out
sbb
aas
adcb
add
repz
pop
das
sub
aam
xor
add
xchg
out
enter
cmc
enter
lahf
js
push
out
aaa
not
dec
out
fisubl
lahf
aas
jg
cmpl
add
iret
jmp
add
or
cmp
aas
jg
cld
sbb
mov
sub
addr16
lahf
repz
mov
inc
dec
aad
inc
js
daa
pushl
xor
cmp
pop
movsl
aas
dec
jb
iret
lahf
aas
sbb
xchg
sub
popf
cmpsl
xlat
movsl
add
sahf
cld
stc
repz
xor
aaa
inc
jp
add
add
and
lahf
aas
pushl
mov
xchg
mov
adc
mov
ja
dec
imul
leave
push
iret
lahf
aas
jg
imul
loopne
xor
aaa
lock
stc
repz
mov
and
movsl
lahf
ljmp
scas
cmp
stos
imul
in
mov
jg
cld
stc
nop
or
pop
mov
jno
addr16
hlt
sbb
out
lahf
aas
mov
std
inc
dec
idiv
je
cld
cmp
mov
mov
add
sub
popf
pop
ljmp
cld
stc
repz
aam
imul
stos
in
int3
je
lahf
aas
jg
sbb
aas
test
in
xchg
ret
stc
repz
inc
dec
sub
scas
pop
sub
bound
fldcw
dec
icebp
cld
stc
inc
ja
es
pushf
pop
test
iret
lahf
aas
jg
or
cmp
dec
insb
jmp
jg
lock
add
add
dec
dec
adc
sbb
call
out
aas
cmpsl
fs
pushf
and
push
mov
cld
stc
and
testl
pop
cmpsb
pop
repz
and
lods
inc
sub
inc
mov
inc
lds
stc
pop
sub
add
shrb
push
test
out
lahf
aas
rcr
adc
push
mov
cld
stc
repz
xchg
push
leave
enter
dec
sub
jg
in
xor
xor
subl
outsl
xchg
pop
in
fs
fiaddl
push
jbe
stc
cs
notl
scas
push
push
stc
repz
and
ret
dec
sub
xor
sub
cld
in
call
aad
aad
rcll
lahf
lock
aam
into
out
jae
jb
jg
cld
stc
in
ja
adc
in
jmp
les
xchg
stos
add
jle
xchg
xchg
aaa
jg
cld
stc
push
scas
xor
in
out
ja
jp
mov
mov
pop
arpl
rorl
insl
push
xchg
mull
adc
sub
out
fwait
aaa
pop
hlt
pusha
xor
fimull
ret
or
mov
repz
xlat
aas
pop
xchg
jl
add
mov
int
aaa
outsl
adc
push
and
cld
adc
xor
adc
and
cli
enter
cmpb
push
pop
push
mov
inc
std
mov
in
lods
cld
stc
repz
lcall
xor
xchg
lcall
incb
shrb
mov
testb
repz
inc
stc
ds
lock
mov
mov
cld
xor
add
push
shl
or
gs
iret
lahf
inc
lods
lea
in
mull
jp
xrelease
aad
aas
mov
stc
aad
sbb
ljmp
jno
test
jecxz
jl
enter
iret
out
fdivrl
repz
ret
xlat
repz
push
push
jg
pop
loopne
aas
cld
pop
in
cs
icebp
push
mov
repz
fwait
mov
orb
enter
aas
jg
cld
out
movsb
pop
je
in
in
movsb
scas
stos
xor
repz
lahf
int
and
addb
ss
cld
stc
mov
fnstsw
dec
mov
jg
and
adc
inc
repz
lahf
jno
pusha
dec
mov
jl
inc
addb
repnz
or
mov
sysret
enter
iret
lahf
aas
jg
pop
inc
daa
and
loop
mov
xchg
jle
pop
sub
cld
notl
aas
jg
ss
inc
cli
xchg
mov
and
dec
sbb
out
push
in
test
fcoml
lods
and
cld
cld
rolb
ja
int
repz
push
out
xchg
insl
neg
mov
jg
cld
stc
xchg
daa
push
mov
jg
or
fldenv
sbb
pop
outsl
pop
mov
cld
stc
repz
dec
mov
push
enter
mov
shl
outsl
hlt
test
mov
push
stc
repz
mov
pop
sti
pop
push
popf
aad
pusha
iret
lahf
aas
jg
movsl
sbb
dec
inc
and
mov
out
in
aam
or
fwait
nop
fwait
addb
or
xchg
in
sbb
pop
cmp
into
stc
repz
scas
adc
sub
clc
ucomiss
jg
cld
adc
hlt
leave
and
cmp
repz
lahf
jb
lret
and
or
jg
cld
stc
lcall
jmp
pop
js
pusha
shll
aas
gs
movsl
mov
loopw
aad
iret
lahf
aas
jg
jecxz
or
cmp
jbe
jbe
out
cld
stc
repz
inc
mov
mov
fidivrs
mov
addr16
fwait
push
push
mov
xor
dec
idiv
repz
xchg
mov
out
out
jnp
xlat
mov
ljmp
cld
jns
test
stos
sub
push
pop
ret
xchg
iret
lahf
and
cmp
inc
addl
into
inc
jle
xchg
std
imul
dec
repnz
cld
arpl
push
aas
ret
push
mov
lahf
aas
jg
ss
add
out
push
imul
stc
repz
push
push
dec
push
mov
daa
scas
sub
mov
popa
mov
sbbb
dec
push
pop
in
loope
insl
mov
inc
jle
neg
add
mov
mov
std
test
repnz
out
int
into
pop
jle
cld
addr16
dec
cmp
sub
xchg
sub
adc
and
dec
lock
pusha
sub
lahf
aad
inc
mov
cmpl
repz
aaa
ret
movsl
movsb
sahf
mov
lret
cld
rcll
outsb
ja
lret
add
lret
int
repz
lahf
dec
inc
cmpl
scas
jle
stc
aad
dec
inc
push
push
iret
ljmp
aas
push
pop
inc
ret
repz
mov
dec
push
jle
xchg
sarl
mov
jmp
push
xor
ret
pop
mov
ss
int3
lods
and
mov
pop
movsl
outsl
sub
out
push
or
into
scas
cld
stc
repz
pusha
dec
and
cmpsb
negl
aas
decl
addr16
inc
rolb
pusha
inc
insl
xchg
stos
sbb
jp
scas
push
sub
out
or
and
add
or
add
aaa
outsl
fidivrs
mov
lret
scas
cmp
fbld
push
mov
stos
xchg
mov
inc
xlat
mov
xchg
out
jo
ljmp
adc
stc
add
out
lahf
sahf
pop
push
jg
ficomps
cmpl
dec
cmc
xchg
scas
pop
ret
cwtl
clc
cwtl
call
aas
cmp
lahf
mov
mov
cmc
dec
jg
or
mov
push
mov
xor
and
iret
lahf
aas
test
out
or
cld
stc
rep
nop
insb
dec
sub
into
xor
push
ljmp
aas
jg
dec
mov
rclb
orl
pusha
popa
popf
and
lret
ficoms
movsb
add
xchg
push
negb
fwait
aaa
out
lahf
out
sub
bswap
in
int
mov
adc
scas
cs
mov
sete
mov
aaa
outsl
faddp
sub
and
fiadds
out
lret
ljmp
outsb
sub
mov
sar
sar
test
mov
push
pop
jns
dec
inc
adc
push
and
fcmovnb
out
in
jmp
sub
clc
out
cmp
cmp
cmp
inc
outsb
xchg
cld
stc
repz
pop
cmp
dec
inc
mov
inc
and
jg
std
add
sub
jbe
mov
jg
jl
and
in
fsubrs
sbb
push
and
out
lahf
aas
loope
push
push
mov
sub
mov
jl
repz
icebp
imul
jg
xor
fsubs
pop
jecxz
addl
mov
cmp
jl
cmp
popf
mov
stc
mov
jo
mov
pop
sahf
aas
bound
shl
dec
sub
iret
lahf
aas
mov
pop
push
push
movl
stc
repz
inc
aaa
or
xchg
jecxz
sub
lds
fwait
es
gs
mov
cmp
fdivr
stc
repz
incb
jge
xchg
rclb
mov
es
inc
ja
mov
mov
repz
pop
push
scas
movsb
cltd
mov
mov
mov
push
pop
mov
sbb
nop
adc
aaa
jg
push
xchg
in
stos
sti
xor
lahf
jns
out
in
les
sub
or
flds
fidivrs
add
jl
ret
dec
stc
pop
inc
test
inc
loope
xchg
or
aas
jg
fwait
xchg
or
int
fsubl
inc
daa
mov
ror
inc
push
sub
jb
mov
cvtps2pi
xlat
out
movsl
cwtl
fs
cld
stc
repz
pushf
and
push
mov
or
test
pop
inc
lods
addr16
cmpsb
pop
lods
imul
jecxz
jmp
inc
mov
sub
jg
cld
inc
dec
add
shrb
push
test
shl
out
lahf
fcoms
xchg
icebp
mov
mulb
mov
push
leave
enter
aas
jg
ftst
aaa
enter
mov
cltd
xchg
repz
lahf
outsl
xchg
pop
in
fs
fiaddl
push
stc
mov
pop
lahf
aas
in
cmp
test
dec
sub
aas
jg
jo
xchg
aas
mov
push
mov
out
lahf
std
rcll
aam
into
inc
cld
stc
out
jae
jb
in
ja
adc
in
mov
pushf
sbb
xchg
stos
ds
pushf
jle
cwtl
xchg
mov
and
movsb
mov
push
lahf
aas
jg
pop
lahf
jp
pop
push
movsb
arpl
int3
jno
js
out
insl
dec
icebp
xchg
lods
push
adc
hlt
pusha
mov
xor
fimull
ret
or
mov
aaa
outsl
aas
pop
xchg
jl
add
mov
jns
out
adc
push
and
cld
adc
xor
adc
and
outsl
fidivrs
movsb
push
outsb
push
pop
mov
roll
mov
repz
cmc
lcall
adc
cmpsl
outsl
fidivrs
shrb
mov
testb
int
aaa
inc
stc
ds
lock
mov
fidivrs
jb
add
shl
or
int
aaa
outsl
gs
lods
lea
in
mull
jp
jns
out
or
add
rcrb
add
sub
lea
jg
mov
adc
aas
jg
cld
cmpb
cwtl
xchg
push
fucom
jp
ljmp
xlat
push
push
jg
pop
loopne
in
cld
stc
mov
jmp
mov
mov
and
lahf
aas
mov
push
add
out
repz
icebp
je
out
or
int3
movsb
scas
stos
xor
cmp
or
jo
addb
outsl
fidivrs
pop
fcomp
mov
dec
mov
ljmp
fwait
cmpsb
cs
lahf
aas
call
lea
pusha
dec
mov
jl
inc
addb
outsl
cmc
or
inc
mov
outsl
bswap
jo
mov
pop
lahf
aas
jg
inc
daa
and
loop
mov
repz
pop
sub
cld
notl
das
mov
cli
xchg
and
daa
dec
sbb
outsl
ficoms
test
fcoml
lods
and
out
rolb
jl
int
out
aam
push
push
xchg
insl
neg
mov
mov
dec
popa
daa
push
mov
jg
or
out
fwait
aaa
fldenv
outsl
pop
mov
jns
aas
add
mov
cmp
mov
jne
dec
out
lahf
aas
scas
dec
mov
test
mov
repz
mov
cld
mov
cld
stc
xrelease
cmpsl
pusha
jecxz
sbb
inc
aas
stc
jo
jmp
cmp
in
aam
cmp
nop
insb
or
mov
sbb
cld
stc
xlat
or
dec
dec
jo
cmp
into
scas
adc
iret
lahf
aas
jg
sub
clc
ucomiss
adc
stc
repz
hlt
leave
and
cmp
jb
lret
jg
iret
jecxz
mov
or
lcall
xchg
daa
jge
lods
js
mov
stc
or
xor
movsl
jns
int
sub
lret
or
cmp
out
fwait
loop
xchg
push
mov
ficoms
stc
test
addr16
push
push
mov
and
notb
fdivrl
mov
ljmp
adc
out
jg
or
pop
ret
mov
sti
xor
xlat
mov
and
popa
add
imul
repnz
leave
int
lahf
sbb
mov
divl
adc
repnz
sbb
stc
repz
mov
ss
add
push
aaa
out
and
push
dec
push
mov
fwait
lock
daa
scas
sub
xchg
or
outsl
fidivrs
pop
jne
in
ret
pop
loope
insl
neg
out
fwait
aaa
fcmovnu
incb
cltd
pop
jg
fadds
xchg
fidivrs
mov
iret
into
pop
jle
cld
addr16
ficoms
jl
in
shrl
cmpsl
mov
ss
xchg
sub
xchg
out
dec
lock
and
mov
call
lahf
adc
pushf
imul
lahf
aas
jg
fisttps
int
jbe
lret
test
iret
ja
lret
add
lret
movsl
dec
lahf
aas
jg
jo
mov
or
pop
hlt
in
aad
dec
inc
push
ja
jns
out
out
lret
in
and
push
pop
inc
ret
out
fwait
aaa
outsl
fidivs
push
jle
xchg
sarl
out
jmp
repz
loope
xor
pop
mov
aaa
outsl
fidivrs
hlt
movsl
lds
or
repz
fwait
and
call
sub
jns
sbb
sbb
inc
pop
rolb
pusha
and
xchg
stos
cli
pop
push
sub
or
and
add
or
add
push
out
fwait
aas
mov
and
lret
scas
mov
push
mov
xchg
mov
repnz
xlat
mov
adc
fwait
fwait
aaa
out
or
add
ds
add
pop
jno
int
push
jg
or
cmpl
scas
pop
ret
cwtl
clc
cwtl
test
lahf
aas
call
cmp
lahf
fwait
aaa
out
stos
das
cmc
dec
movsl
xlat
in
mov
repz
call
xor
cmp
test
jns
jnp
out
or
insb
nop
insb
dec
sub
int
aaa
dec
into
xor
push
ljmp
fidivrs
pop
das
jle
rclb
orl
fnclex
inc
outsb
fmull
fbstp
add
out
les
outsb
fucom
sub
jns
pop
jge
enter
pop
adc
scas
xchg
mov
outsl
fidivrs
xchg
sub
mov
aaa
inc
inc
out
lret
ljmp
repz
mov
sar
sar
test
aaa
outsl
fimuls
xchg
push
pop
jns
dec
inc
adc
push
and
out
ret
vunpckhpd
in
sub
clc
arpl
and
mov
sarb
jl
outsb
xchg
das
pop
loopne
cld
test
inc
mov
inc
std
out
lahf
aas
add
sub
jbe
jbe
dec
push
and
out
lret
repz
rcr
mov
sbb
push
and
cld
stc
repz
loope
push
push
mov
sub
mov
sub
mov
or
jg
outsb
fiadds
aas
pop
xor
out
fsubs
jmp
cmpl
mov
cld
stc
cmp
jl
cmp
push
jbe
mov
add
iret
lahf
aas
fs
jo
mov
fisubl
sahf
aas
jg
lock
shl
iret
dec
sub
test
push
aaa
add
frstor
out
fwait
and
pop
sub
lds
scas
gs
mov
dec
cmp
fsubl
aaa
outsl
incb
jge
xchg
rclb
jns
scas
loop
ja
pop
mov
add
fnstcw
cltd
mov
sbb
xchg
or
and
adc
out
push
xchg
in
xchg
lea
lahf
aaa
outsl
fidivrs
adc
les
sub
or
fldcw
xor
sbb
inc
ret
dec
push
dec
fstpl
pop
in
pop
fwait
xchg
or
in
and
int
faddl
inc
mov
clc
jno
ret
lahf
pop
mov
xor
enter
push
inc
fidivrs
jmp
push
or
outsl
ficoms
jne
mov
repnz
mov
or
fwait
adc
aad
lock
aaa
outsl
fidivrs
mov
jge
inc
test
cltd
lock
ss
rcrb
mov
notl
lea
getsec
outsl
fidivrs
pop
cmpsb
pop
xor
ss
out
sbb
fwait
adc
add
push
outsl
fidivrs
pop
stos
popa
xor
adcl
lahf
xchg
scas
ret
dec
in
cmp
mov
lea
mov
nop
lahf
jg
xchg
inc
out
popa
cmpsb
dec
lock
jno
or
adc
repnz
pop
jo
mov
cmp
loopne
sahf
in
mov
cld
mov
test
fwait
aaa
out
adcb
and
cmp
cmc
mov
mov
sub
enter
cmpsl
pop
call
sbb
push
stos
mov
repnz
or
outsl
pop
xor
aas
jg
push
mov
xor
imul
and
lret
cld
jns
mov
andb
outsl
fidivrs
adc
add
outsl
or
mov
int
push
pop
iret
popf
lods
icebp
stos
sub
outsl
fidivrs
fucomi
bound
movsl
popf
xchg
xchg
cmp
aaa
mov
push
imul
and
mov
xchg
sahf
ret
xchg
push
jecxz
xchg
mov
fwait
aaa
outsl
jne
sbb
gs
cmpsl
mov
push
jns
gs
es
aad
stc
pop
add
adc
mov
rolb
adc
sarl
orb
sbb
jae
dec
push
cld
jmp
rorb
adc
mov
jmp
out
rcrl
add
outsl
fiadds
in
lret
repnz
int
cli
test
and
scas
clc
jp
sub
mov
aas
adc
push
ret
and
mov
cltd
js
mov
pusha
test
lfs
aaa
jg
popf
mov
rcr
int3
jge
outsb
shrb
pop
movsb
ror
push
mov
sti
movl
aam
lea
add
fidivs
stos
pop
dec
dec
les
out
fwait
adc
aam
mov
push
aad
outsl
fidivrs
push
cld
testb
fisubrs
dec
ljmp
aam
subps
repz
aas
or
ljmp
mov
jg
cmc
cmpsb
push
cmp
lea
adc
repz
inc
sub
pop
ja
push
ljmp
lcall
or
add
cmpsl
push
out
lahf
pop
sub
aas
mov
pop
jecxz
stos
add
in
fstp
jne
arpl
in
into
cmp
inc
call
ja
push
jno
test
clc
inc
jns
cmpsb
test
cmpsl
lcall
add
outsl
fidivrs
aas
in
inc
jb
mov
sbb
int
cmp
nop
loopne
sarb
daa
mov
fs
pop
lods
cmpl
daa
mov
xor
mov
cld
jecxz
push
cli
pop
sub
and
xlat
push
mov
dec
sbb
pop
mov
push
ss
inc
mov
repz
lahf
cmpsb
dec
stc
sub
xor
dec
jg
cld
stc
out
pop
gs
add
cmp
and
aas
xor
add
imul
inc
cltd
xor
sub
inc
add
xor
mov
pop
iret
lahf
aas
jg
sbbb
mov
subb
add
enter
les
jle
pushf
fwait
int
aaa
outsl
adcl
push
aad
jns
out
adc
push
sub
or
fwait
aaa
outsl
fdivrp
aaa
test
repz
adc
lods
ss
out
outsb
outsl
mov
and
xor
outsl
fidivrs
pmulhw
sbb
sbb
enter
pusha
sbb
shll
sbb
jne
sbb
outsl
sahf
or
iret
lahf
jg
icebp
loope
movsl
fmull
stc
repz
das
add
repnz
adc
stos
mov
sbb
jg
cld
push
aaa
xchg
inc
or
sbb
out
adc
repz
lahf
mov
xchg
pop
push
addr16
xchg
add
xchg
movsb
fwait
aaa
roll
dec
xor
hlt
adc
jns
out
sub
out
add
pop
and
repnz
sti
xchg
cmpl
lock
fwait
inc
das
add
and
add
inc
outsl
fidivrs
clc
inc
lahf
add
fs
xchg
push
pop
xchg
outsb
out
fwait
aaa
mov
mov
test
sbb
dec
bound
push
test
and
inc
int
aaa
outsl
pop
push
test
sbb
jmp
repz
scas
jbe
int3
mov
dec
mov
pop
inc
outsl
fidivs
jae
xchg
pop
mov
ret
out
adc
js
xchg
ss
movl
pop
jp
or
adc
out
lahf
jg
scas
call
das
or
cld
stc
repz
cmpsb
fwait
xor
cmp
lcall
iret
lahf
aas
jg
mov
cli
mov
xor
stc
repz
lcall
mov
mov
aaa
clc
dec
inc
jg,pt
divl
pusha
addl
ja
and
mov
xchg
mov
fs
leave
adc
sub
mov
fwait
aaa
outsl
ficomps
mov
dec
cmpsl
cmpsb
insl
push
int3
fwait
outsb
aas
jmp
and
test
mov
dec
fsub
out
lahf
xlat
and
adcb
or
in
lods
push
dec
mov
fiadds
lret
aad
in
mov
sar
leave
xchg
je
out
mov
imul
push
and
stos
fwait
aaa
outsl
fisubs
clc
xchg
subl
je
jns
out
mov
sbb
mov
popf
les
push
mov
dec
shlb
inc
lret
loopne
fwait
aaa
ja
cwtl
out
pop
cmpsb
testl
push
fldcw
shl
adc
aaa
outsl
fisubs
xor
push
in
jnp
enter
mov
xchg
idivb
jno
fidivrs
scas
int3
mov
leave
iret
lahf
jg
fcoms
mov
xor
mov
aad
scas
lahf
jne
inc
lock
std
fidivrs
addr16
fsubrl
sarl
add
outsl
sbb
adcl
pop
jns
out
psrlq
aad
and
jae
insb
fidivrs
aam
scas
cmp
test
mov
mov
cmc
adc
and
lahf
mov
outsl
fidivs
mov
jno
enter
iret
push
jb
out
in
dec
lret
sahf
mov
mov
gs
adc
popa
sbb
sbb
repz
xor
cld
lock
lcall
cld
cmp
mov
repz
push
ss
adc
xor
xchg
int
fwait
aaa
outsl
add
adc
mov
adc
mov
das
jns
out
repnz
xchg
outsb
pop
data16
cmpl
outsl
fidivrs
sbbb
fbld
jae
ror
sbb
iret
adc
hlt
fdivrl
les
stc
push
loope
cld
outsb
xchg
xchg
aaa
outsl
fimuls
jbe
das
cmc
adc
repnz
sbb
cmp
data16
ret
inc
jle
jno
xlat
aas
test
loopne
mov
xchg
jb
movsl
aas
cmc
pushf
int
daa
outsl
ficoms
lds
mov
out
lahf
xchg
out
in
in
fisttps
and
cld
mov
filds
add
ror
aas
jg
dec
icebp
gs
pop
mov
cld
stc
repz
aas
push
les
dec
ret
mov
xor
ss
and
cli
pop
in
jo
xor
sbb
stos
mov
lahf
aas
jg
cld
sbbb
add
sub
adc
xchg
mov
out
lahf
insb
push
push
out
xchg
lea
iret
stos
movsl
and
jne
shlb
int
aaa
outsl
cmpsl
divb
stos
sbb
enter
jg
xchg
fs
dec
mov
xchg
mov
stc
repz
xchg
pop
mov
inc
sub
push
nop
push
jmp
jg
cld
fstl
or
test
in
out
repz
mov
push
push
call
fdivrl
mov
shrb
jmp
push
cld
stc
pop
cmpl
add
rcrb
ja
outsl
inc
mov
pushf
adc
daa
push
addr16
sbb
bound
adc
cmc
bound
scas
pop
mov
xchg
in
cmp
lahf
cmp
lock
lea
jmp
jg
cld
stc
and
pop
dec
mov
push
mov
out
mov
pop
or
push
dec
mov
cld
stc
repz
sbb
pop
loope
jmp
cmp
and
aas
jg
dec
push
dec
insb
scas
sbb
out
xlat
pop
adc
xor
addb
aas
jg
cld
iret
fistl
adc
icebp
mov
and
fs
cmc
bound
mov
inc
int3
fsubs
pop
push
xor
mov
in
fwait
aaa
outsl
fidivs
jp
jmp
cmc
aad
cmpsb
jns
out
pop
lret
dec
rcll
loopne
das
jg
fnstcw
test
adc
iret
add
iret
lahf
and
sub
lods
mov
lock
jnp
repnz
stc
push
sbb
in
fisubs
sub
cld
stc
repz
cmpsl
lahf
jnp
sbb
pop
xlat
out
in
lahf
aas
jg
pop
or
add
arpl
icebp
mov
xchg
nop
xchg
jns
out
push
icebp
lea
repnz
int3
fstpl
mov
mov
fsubrs
mov
int
sahf
and
jle
mov
mov
outsl
fidivrs
xchg
mov
jns,pn
cmp
push
out
fwait
aaa
pop
jbe
mov
mov
mov
xor
push
jge
sbb
mov
fwait
aaa
out
or
jp
lods
jbe
dec
test
jns
out
or
hlt
in
aaa
mov
jp
inc
aaa
outsl
fidivrs
fistpl
add
mov
fwait
lcall
cmovge
fidivrs
ss
cli
test
add
jo
jecxz
or
push
into
iret
mov
aaa
bound
cmc
xchg
pusha
lock
jg
aaa
outsl
fidivrs
xchg
pop
mov
int3
dec
inc
in
aad
xchg
int
mov
das
imul
js
rcrl
jae
out
scas
pop
stc
push
out
addr16
xlat
repz
dec
adc
sar
jg
cld
cmp
test
cld
nopl
inc
clc
jo
out
lahf
or
jle
ljmp
and
jg
cld
stc
jbe
add
aad
rcl
lcall
out
lahf
aas
mov
js
enter
cld
stc
repz
jp
fs
jbe
es
jg
fs
ffree
cmp
jp
shlb
cmp
fbld
sbbb
sub
into
and
add
sub
sbbb
cld
cld
arpl
cltd
cmp
out
lahf
fildl
aad
das
ficoml
lahf
cld
cld
stc
sbb
lcall
repz
dec
sub
je
mov
and
jg
cld
stc
icebp
adc
inc
dec
push
push
mov
stc
cld
fadds
pop
repnz
lahf
sbb
cld
xor
xchg
fnstcw
mov
pop
pop
sarl
es
lcall
pop
pop
ja
aaa
inc
mov
jecxz
fwait
aaa
outsl
pop
push
outsl
or
repnz
fwait
mov
out
mov
add
cmp
pop
ret
icebp
cmp
fdivp
negb
mov
inc
cmpsl
adc
repz
rcl
pop
cmpsb
sahf
add
pop
scas
shrb
mov
jae
lcall
lcall
fwait
aaa
data16
adc
movsb
out
aaa
xor
lahf
aas
call
sbb
icebp
jno
cld
stc
repz
enter
sbb
dec
xor
jns
push
xchg
adc
aas
jg
jo
push
mov
hlt
pop
fldt
mov
sbb
mov
adc
dec
aas
addl
jns
adc
iret
lahf
repnz
cmpsl
adcl
jg
cld
stc
insb
js
ret
test
xor
rcrb
gs
lahf
aas
dec
sub
and
out
lods
adc
stc
repz
scas
mov
lods
jne
mov
iret
lahf
aas
jg
mov
mov
dec
aaa
stc
stc
repz
xor
out
cmpsl
xor
out
js
pushf
aaa
outsl
add
mov
dec
sub
out
fstl
idivl
mov
outsl
outsl
fidivrs
roll
inc
sub
cmp
adc
int
aaa
movsl
out
sbb
mov
jns
sbb
xchg
shrl
cwtl
popa
int
aaa
outsl
mov
iret
sbb
push
popf
mov
and
in
test
sbb
xor
sub
mov
aam
shr
xchg
sub
jg
cld
xlat
shll
mov
test
jg
xorl
pusha
xor
cmp
xor
inc
sub
iret
lahf
aas
das
sub
and
sbb
and
arpl
mov
mov
leave
fcomip
movb
cmpb
or
fcomip
add
rorb
outsl
fidivrs
or
sbb
adc
lods
mov
shll
cli
daa
dec
jae
fdivrl
lds
push
or
mov
out
lahf
aas
jmp
mov
fwait
mov
cld
stc
rep
pop
loopne
int
icebp
and
dec
mov
xchg
and
lahf
aas
jg
repz
push
and
dec
clc
jle
ficoms
sub
addr16
lahf
rolb
xchg
fwait
aaa
cmp
test
lds
jns
xlat
popa
dec
ja
jo
aad
cmp
xchg
fwait
aaa
outsl
fisubrs
pusha
fisubrs
jnp
jns
out
clc
adc
ret
mov
ja
sbb
outsl
fidivrs
xchg
dec
xlat
sbb
mov
mov
repz
fwait
mov
das
dec
leave
cmc
mov
jns
xchg
xchg
popf
mov
and
jb
std
xorb
fwait
aaa
cmpsl
xlat
sub
mov
mov
fidivrs
jmp
mov
je
jecxz
xchg
adc
mov
insb
mov
test
dec
addl
lock
and
loopne
repz
shll
mov
xchg
aaa
jge
sbb
pop
testl
adc
out
lahf
aas
js
sbb
adc
and
xor
repz
mov
mov
mov
push
lcall
adc
fldl
out
fwait
ja
popf
pusha
or
push
test
popa
and
mov
jg
jae
cmpsl
bound
push
into
int
aaa
outsl
mov
mov
fldl
fsubp
mov
xorb
lds
int
dec
mov
fwait
aaa
outsl
fidivrs
jnp
add
pop
jns
out
out
xchg
xchg
push
cli
negb
mov
push
jb
movsl
or
push
jb
popa
repz
fwait
mov
jbe
lcall
mov
adc
sbb
cmp
es
adc
into
dec
das
xor
pop
inc
mov
mov
test
pop
mov
inc
int
aaa
outsl
adc
cmp
xchg
enter
je
mov
add
cltd
das
jg
mov
adc
mov
or
es
test
or
stc
repz
stos
xlat
and
xor
xchg
imul
inc
add
in
cmp
mov
in
leave
iret
lahf
loopne
mulps
push
jl
repnz
pop
xchg
pop
inc
lret
into
xchg
into
add
lret
mov
icebp
push
sbb
aaa
add
push
xchg
pop
int
adc
and
add
out
fwait
mov
out
sti
jnp
out
gs
aad
outsl
fidivrs
mov
call
lods
data16
and
fwait
aaa
cmp
mov
push
fnclex
pop
fidivrs
scas
fsubrl
enter
push
int
aaa
outsl
stc
mov
movsl
lea
rorb
inc
jbe
mov
push
fstpt
pop
out
push
out
inc
cli
dec
fwait
aaa
outsl
ficoms
cwtl
sub
cmp
cltd
into
mov
lcall
mov
jns
fistpll
into
gs
das
clc
subb
add
push
mov
repnz
mov
sbb
outsb
mov
leave
aam
out
cld
fs
mov
imul
fisubs
ret
pop
xor
jnp
out
lods
in
inc
icebp
in
pop
xchg
in
cmpsb
sti
pop
aaa
outsl
fidivrs
ja
add
pop
adc
std
xchg
dec
push
out
fwait
aaa
inc
test
jo
clc
xor
and
mov
fs
and
stos
loop
fwait
xchg
rorb
fwait
ja
pop
addr16
add
icebp
cli
sti
xchg
xchg
repz
call
notb
and
outsl
fidivrs
imul
xor
loope
and
jge
dec
insl
inc
mov
mov
sbb
rclb
cmc
aam
cmpsl
fsubrp
push
sbbb
clc
lds
adc
test
in
mov
enter
call
scas
pop
lcall
xchg
outsl
fidivrs
add
jl
ficomps
aaa
sub
movsl
out
aaa
and
fidivrs
lahf
cmpsl
insb
sbb
stos
fs
sub
out
int
aaa
outsl
imul
mov
and
out
arpl
xchg
scas
jae
mov
cmpsb
js
pop
cld
stc
repz
aas
push
loopne
aad
sahf
push
mov
mov
lahf
aas
jg
xchg
push
or
daa
pop
dec
and
pushf
dec
cld
stc
repz
xor
adc
repnz
adc
adc
mov
cmp
mov
fisubrl
jle
lahf
aas
jg
ja
test
inc
enter
xchg
js
stc
repz
clc
rorl
mov
mov
cli
imul
cld
mov
movsb
mov
shr
jae
stc
repz
lahf
lahf
xchg
in
mov
fs
cmpsl
sub
cld
stc
add
jmp
push
sub
jle
roll
iret
lahf
aas
movsl
mov
sahf
push
mov
jno
cld
stc
repz
add
cmp
pop
hlt
jmp
or
push
xor
loopne
pop
pop
lret
repz
push
test
ret
inc
cmpsl
sub
stc
and
push
or
hlt
lods
lods
int
aaa
outsl
cmpsl
jmp
sub
cltd
outsb
icebp
insb
or
cmp
mov
push
ja
or
jle
sti
icebp
fwait
aaa
outsl
fidivs
cmp
enter
push
jbe
cld
aam
adc
enter
mov
les
outsl
push
sbb
imul
ljmp
sti
push
daa
fidivrs
ret
es
xchg
rol
jae
call
adc
stos
outsl
mov
out
lahf
jb
fadds
jb
jp
cmpsl
daa
loopne
pop
mov
stc
inc
push
sbb
xchg
mov
aas
push
mov
add
pop
stc
stc
repz
shlb
test
sbb
andb
fisubrl
and
fidivrs
mov
inc
jecxz
fwait
ja
inc
in
dec
rorb
mov
icebp
enter
fistps
repnz
out
insl
cmpl
adc
outsl
fidivrs
les
xchg
mov
je
movsb
aaa
out
orb
addb
iret
insb
mov
jbe
repz
fimull
sub
inc
pop
fs
fidivrs
pop
orl
imul
aaa
outsl
imul
push
dec
dec
pop
cmp
stc
js
jp
fmuls
dec
maskmovq
int
jns
xchg
jecxz
popa
cmp
sbb
xor
fwait
aaa
outsl
add
xchg
lods
shll
jle
add
ret
in
xchg
mov
lea
sub
adc
movsl
push
out
mov
scas
lret
inc
mov
xor
cld
fisttpll
and
fistps
daa
lea
or
jl
mov
adc
inc
adc
fsubs
fisubrl
aaa
outsl
ficomps
outsb
in
cli
ja
add
repz
mov
cmp
push
outsl
fidivrs
lahf
fnstcw
sbb
xchg
ds
and
int
aaa
and
inc
pushf
or
push
add
cmp
out
fidivrs
test
adc
jnp
xchg
fwait
aaa
outsl
imul
cmp
pop
inc
in
loop
jbe
push
pop
int3
mov
mov
out
inc
cmp
sub
inc
int
aaa
outsl
subb
sbb
lods
cli
enter
adc
mov
push
dec
jae
mov
iret
lahf
aas
add
mov
xorb
inc
xlat
int
xchg
cmpsl
pop
adc
jg
enter
sub
clc
pop
aam
sbb
lret
notl
gs
lahf
jg
add
mov
adc
out
cld
stc
repz
leave
sub
and
xchg
push
ret
sbb
aad
lahf
aas
jg
pop
push
push
add
out
cld
stc
repz
xchg
shlb
sbb
test
mov
jl
inc
ja
or
hlt
dec
mov
repz
pop
xchg
cmp
shll
les
cld
sbb
aas
jg
cld
inc
mov
xchg
lods
inc
and
repz
lahf
add
addr16
pop
mov
cld
stc
xchg
mov
push
movsb
stc
push
test
packuswb
into
mov
out
lahf
aas
jl
sub
dec
ret
add
jl
repz
imul
cld
cld
stc
repz
xchg
lods
xlat
data16
leave
insl
rep
jnp
mov
iret
lahf
insb
mov
dec
bound
std
jmp
inc
fisubl
clc
outsl
clc
mov
mov
aas
jg
shrl
out
jb
out
or
dec
cli
aad
lahf
mov
rclb
bound
repz
fwait
or
stos
sub
adc
mov
xor
mov
ret
rolb
cltd
hlt
out
fwait
aaa
push
xchg
out
or
mov
dec
mov
mov
cmp
cmp
inc
fists
dec
mov
outsl
sub
jne
pop
data16
mov
sarl
imul
or
sbb
test
mov
dec
and
int
fwait
adc
enter
call
loope
mov
jmp
lods
sub
scas
shr
shl
cmpsl
sbb
aaa
outsl
sbb
push
stos
and
jg
cld
stc
lds
jno
imul
dec
iret
mov
aas
ret
xor
cli
ret
cld
stc
repz
mov
stc
les
jecxz
lret
push
lods
out
iret
lahf
aas
jg
xor
jb
pop
sbb
sub
out
cmp
adc
repz
aas
push
push
push
sub
filds
cli
outsb
xchg
aaa
out
sub
out
xchg
andl
fsubs
xor
inc
cmp
cmpsl
cmp
sbb
das
push
ja
xchg
cmpsl
out
in
pop
mov
out
mov
jge
push
loope
inc
push
dec
mov
jge
sub
sbb
fwait
aaa
out
jmp
scas
in
stos
jl
dec
pop
pushf
fldcw
sbb
in
add
fmulp
stos
inc
pop
mov
ficoms
dec
jne
out
into
enter
lds
cmp
sub
xchg
jg
stos
mov
in
es
fidivl
stc
repz
push
mov
xor
leave
push
out
sub
aas
jg
cld
xchg
in
pop
int
mov
ret
shll
adc
out
lahf
popa
inc
icebp
push
cmpsl
mov
fadds
ret
pop
xor
cld
stc
ret
dec
ret
lahf
jno
inc
cltd
aam
testl
pop
outsb
in
gs
sbb
adc
fcoms
sbb
outsb
inc
dec
or
movb
or
stos
or
ds
outsb
adc
sar
sub
ja
add
jg
jno
repnz
fwait
loop
xchg
mov
aad
lcall
jg
push
push
lahf
decl
loope
push
cltd
inc
xchg
inc
mov
repz
ds
test
rcr
add
daa
pop
jns
mov
ss
sub
and
in
push
subb
or
cld
stc
push
dec
xchg
mov
sbbl
cmp
into
xchg
or
out
adc
cmp
outsl
ficoms
inc
cmc
pslld
jmp
int
ja
out
mov
adc
repz
jg
repz
repz
sub
ljmp
pop
and
lahf
aas
decl
cltd
adc
xor
out
sbb
adc
lds
jns
scas
js
lds
es
mov
dec
repnz
aaa
outsl
fidivrs
loop
mov
hlt
cli
maskmovq
int
cs
pop
cld
jp
sbb
fistl
loope
jle
cld
stc
adc
repnz
dec
std
std
test
and
inc
xor
cmc
rcll
leave
fwait
push
sbb
out
loopne
loope
stos
repz
mov
cmp
scas
and
shl
repz
sub
iret
push
movsb
test
outsl
fidivrs
xchg
jl
addb
and
fcompl
test
int
aaa
insl
fisttpll
sbb
std
xchg
loop
mov
mov
aaa
outsl
ficoms
scas
sbb
sub
repnz
fwait
push
fcoms
test
dec
sbbl
ja
das
ds
aas
sbb
int
mov
aas
jg
jl
fmul
shlb
push
xchg
cmpsl
pop
ds
lcall
rcrb
arpl
sbb
xor
inc
jle
ja
fs
inc
add
in
imul
pusha
in
repz
lret
jp
mov
xchg
mov
andb
inc
fwait
mov
repz
push
inc
mov
mov
outsb
adc
out
inc
add
push
adc
xchg
lahf
jecxz
cld
stc
aam
ja
pop
cwtl
and
mov
out
fwait
bound
loop
mov
inc
fidivrs
and
fists
inc
ret
xor
jae
aaa
adc
cmpsl
cmp
mov
pop
push
inc
push
scas
cmp
test
incl
aaa
outsl
fidivrs
adc
sbb
xor
inc
push
cmc
enter
add
dec
mov
out
dec
pop
ja
mov
fdivp
push
adc
and
cld
mov
adc
xor
fidivs
jns
iret
ret
mov
add
cs
out
lahf
aas
out
dec
mov
xchg
call
repz
push
xor
push
cmc
jg
iret
lahf
aas
jg
aam
sbb
push
mov
repz
adc
sahf
rolb
lahf
aas
jg
mov
mov
stos
jno
inc
xchg
mov
iret
xor
pop
test
sub
fistps
and
or
into
cmp
mov
inc
addr16
lcall
mov
lahf
aas
jg
push
push
scas
mov
mov
and
repz
push
push
adc
push
mov
xor
scas
aas
jg
cld
sti
xor
andl
inc
repz
lahf
lds
leave
dec
ja
mov
lahf
jg
cld
stc
imul
mov
adc
pushf
sub
fbld
lahf
rcrl
inc
test
cld
stc
repz
push
iret
xchg
sub
mov
or
xchg
aas
jg
ljmp
jno,pt
int
aaa
jg
clc
mov
push
sahf
xor
cmp
jne
mov
lret
scas
xor
pop
repz
mov
rorl
daa
dec
jl
mov
popa
jle
cld
stc
sbb
test
xchg
aad
mov
daa
adc
mov
dec
sbb
mov
cld
stc
pop
stos
cmp
jmp
repz
mov
aas
popf
dec
fbstp
ds
je
bnd
shlb
fcomps
pop
jno
fwait
aaa
inc
or
push
pop
inc
sub
jns
out
lea
or
popa
sub
cmpsl
inc
mov
sbb
xlat
scas
mov
adc
or
aaa
outsl
fiadds
fldenv
add
mov
ret
out
mov
test
mov
mov
add
mov
insl
aam
mov
sub
fwait
aaa
outsl
fidivs
fldenv
test
and
and
cli
and
dec
cmp
dec
repnz
aas
xlat
mov
out
pop
or
insl
xor
mov
fidivrs
xchg
push
ja
mov
pop
call
xchg
mov
enter
sbb
push
and
push
int
aaa
outsl
rorb
or
xchg
sub
mov
popa
arpl
mov
pop
xor
shrl
sub
xor
or
jae
cli
enter
sbb
ljmp
xchg
pop
std
jbe
push
pop
iret
lahf
aas
jg
and
jg
inc
bound
or
bound
daa
mov
repnz
dec
fadds
inc
jge
push
dec
int
insl
xchg
mov
jg
lahf
or
dec
or
mov
push
sub
shll
aaa
outsl
fiadds
data16
iret
xor
jg
rolb
jp
cmpl
repz
lahf
bound
mov
test
rcll
jge
sarb
cld
stc
sbb
or
adc
rcr
imul
mov
mov
xchg
lods
lcall
repz
mov
fcmovb
xlat
lock
aaa
xchg
cld
fs
jns
push
push
mov
pop
repz
jno
pop
mov
les
leave
pop
out
dec
xor
aaa
outsl
fidivrs
push
push
repz
fwait
or
push
xchg
lock
or
fcompl
mov
imul
test
ja
stc
inc
fwait
aaa
outsl
fisubs
cli
pop
dec
stos
dec
lcall
lea
out
gs
pop
leave
nop
inc
xchg
les
test
sub
pop
jns
out
testl
push
fwait
add
clc
js
out
out
hlt
dec
repz
outsl
fwait
ror
xor
mov
jns
es
stc
dec
xor
lret
xor
sbb
fdivrl
pop
and
pop
mov
sbb
inc
test
in
and
mov
cli
xchg
inc
imul
test
sti
jae
test
and
aaa
outsl
ficoms
inc
test
xchg
mov
mov
int
mov
fldl
popa
pop
pop
xchg
jns
repz
jge
or
int
pop
aas
shlb
out
sbb
loope
mov
cmpsb
sub
pop
pop
das
pop
out
inc
jg
xchg
aaa
outsl
xchg
or
or
sbb
fsub
dec
jne
aam
pop
push
lahf
xchg
mov
pop
mov
outsb
adc
data16
sub
fwait
aaa
outsl
sbb
push
dec
push
sbb
jns
out
fucomp
cmpsl
lods
mov
lret
in
mov
sti
test
fwait
aaa
outsl
fdivp
aas
mov
mov
nop
adc
pop
int
ljmp
pop
jecxz
dec
adc
call
inc
cmp
fstl
xor
aaa
dec
lods
inc
sarl
xor
add
test
sub
fsubp
nop
loop
push
jnp
push
sbb
stos
lcall
int3
loopne
jl
mov
rorb
ljmp
dec
ds
and
mov
sahf
aas
jg
inc
pop
jecxz
lods
fsub
mov
daa
ds
jmp
inc
mov
mov
nop
mov
sar
incb
repz
lahf
and
mov
inc
mov
mov
lret
mov
push
jg
sub
cld
pushf
pop
push
aad
and
outsl
ficomps
shr
push
cmp
adc
cld
lds
outsb
hlt
xor
mov
dec
lods
inc
mov
cld
stos
or
xchg
mov
adc
faddl
movsb
inc
and
fcmovnbe
aad
out
xor
cwtl
leave
push
dec
imul
inc
lcall
adc
push
cs
cs
pop
insl
aad
je
mov
scas
imull
cmpl
mov
fistps
movsb
jns
jl
das
adc
jnp
loope
adc
jmp
mov
pop
popf
pop
pop
pop
xor
int
aaa
inc
pop
test
push
faddp
int3
divb
jns
out
sbb
lret
inc
adc
pop
mov
add
push
inc
fimuls
ret
pop
addr16
shll
ss
adc
mov
xchg
iret
lahf
aas
inc
jl
cmc
jge
and
mov
hlt
popa
fs
push
cli
push
shl
xchg
fsts
cld
ja
shlb
and
pop
fistpll
push
pop
pop
aas
jg
shrl
in
fs
inc
push
sub
lahf
fsubl
dec
dec
icebp
cli
repz
aaa
outsl
fidivs
and
jmp
in
test
lahf
xchg
xchg
mov
mov
or
aam
mov
ja
test
aaa
pop
stos
ret
daa
repz
add
pop
or
push
xor
outsl
fidivrs
cmp
jmp
repz
fwait
inc
sub
inc
cs
lea
cmp
cmpsb
lods
data16
sbb
xor
adc
fwait
aaa
stos
insl
push
xchg
mov
lods
cmpsl
iret
fidivrs
adc
mov
mov
aaa
outsl
pushl
mov
sbb
jns
out
popa
pop
pop
jb
cmp
sub
inc
pop
fstps
iret
test
stos
ja
lahf
out
sbb
jg
aad
test
jns
outsb
movsl
aad
add
loop
push
repz
lahf
ds
cmp
andl
aaa
or
push
outsl
fidivrs
andb
and
out
fwait
aaa
xchg
outsb
push
cmpsb
cmp
sbb
aas
clc
enter
xor
rcll
das
cs
iret
lahf
push
inc
add
sub
jl
sub
dec
icebp
or
repz
lahf
jmp
or
dec
shl
mov
mov
inc
jg
cld
stc
inc
adc
bound
mov
xchg
lahf
aas
fistpl
xchg
jmp
add
mov
das
push
jnp
cmp
outsl
jne
sub
aam
jo
repz
adc
stos
scas
fs
fs
outsl
fidivrs
inc
and
dec
mov
fwait
imul
mov
jle
sbb
or
enter
sub
jbe
pop
pop
aaa
outsl
fidivrs
testl
cld
jecxz
fcomps
push
cltd
and
jp
repnz
sbb
xor
dec
dec
xchg
iret
lahf
aas
jg
fidivs
or
in
shll
cld
stc
repz
sub
rcl
inc
test
push
xor
mov
lahf
cld
mov
cmpsl
sbb
imul
outsl
ret
iret
fs
sahf
imulb
out
cld
mov
mov
jae
lret
sbb
lahf
aas
jg
pop
sub
bound
andb
lods
dec
inc
hlt
iret
dec
out
ja
xchg
dec
adc
test
js
pop
mov
jno
lods
adc
out
fwait
mov
jbe
ret
out
jne
std
rolb
mov
je
xchg
out
fisubl
aas
hlt
repz
jle
ja
gs
stc
xlat
fcomps
cld
stc
les
cwtl
add
xchg
outsb
inc
or
sub
test
cmp
repz
jns
mov
ficoml
pop
stos
and
fidivrs
mov
mov
add
int
leave
jno
jno
or
cltd
xchg
sub
inc
xor
inc
js
test
in
das
jecxz
into
imul
push
jno
aaa
outsl
ficoms
jmp
shlb
cmpl
inc
fdivp
ficompl
ss
daa
mov
cwtl
addr16
fildl
dec
das
adc
ja
and
dec
out
mov
ficoms
in
sbbl
sub
push
pop
mov
xor
mov
stc
repz
call
sub
and
arpl
jle
cld
xor
mov
ss
movsl
push
xor
inc
insb
inc
push
out
rcrl
int
stc
fimuls
popa
sbb
jae
es
es
sub
jno
mov
pop
hlt
leave
push
outsb
testl
outsb
jns
jl
xchg
xchg
sub
fidivrs
sbb
popa
sub
jns
out
aas
jg
sahf
xor
arpl
jb
lret
fidivrs
xchg
test
and
int
jp
cs
xor
xchg
push
fdivrl
jb
mov
hlt
add
cmpsb
addb
sbb
repz
cmp
add
cmp
mov
into
and
ja
jg
sarb
push
in
fs
lock
inc
iret
repz
lahf
lret
pop
loop
pop
loopne
xchg
cmpsl
lods
test
fstpt
stc
stc
arpl
or
cmp
push
aaa
outsb
cmc
ret
repz
lahf
outsl
sti
loop
sbb
aaa
mov
mov
push
push
stos
push
lea
out
lahf
testl
cmp
gs
or
in
sti
movb
aas
xorb
and
and
cmpsb
cmp
insb
push
jbe
and
hlt
fcoml
push
jns
out
inc
scas
daa
mov
mov
cli
arpl
outsl
fidivrs
pushf
out
cmpsl
popa
mov
fwait
enter
pop
push
adc
aas
js
ljmp
insl
fs
adc
outsb
insl
insb
or
test
in
mov
addb
repz
dec
notb
dec
jae
inc
arpl
sub
sub
cmp
int
aaa
outsl
cld
std
lods
or
sarl
repnz
xchg
mov
xchg
sbb
enter
or
loop
iret
lahf
aas
jg
mov
imul
stc
repz
test
inc
cmp
mov
xchg
and
jg
loopne
and
movsl
nop
movsl
inc
pop
mov
call
gs
mov
dec
inc
sub
call
fstp
mov
aaa
outsl
cld
cmp
adc
inc
adc
fistpll
sbb
test
or
cmpsl
xor
adc
fadds
orl
in
push
iret
sahf
imul
mov
sub
rorb
dec
adc
cli
sbb
outsl
andb
mov
jb
push
push
fwait
jb
outsl
lret
lret
divl
add
or
jbe
pushf
in
sub
int
aaa
iret
movsb
and
cmc
outsb
dec
and
repz
daa
mov
and
jo
test
xor
pop
shlb
imul
int
xchg
fwait
jae
add
xor
xchg
adc
cmp
xchg
int3
fsub
pop
aaa
outsl
fidivrs
mov
jle
sbb
xor
fwait
aaa
out
je
or
and
pop
pop
push
add
mov
xor
cmp
inc
adc
push
in
ja
aas
jbe
push
add
out
cmpsb
and
out
fwait
aaa
jg
cli
jb
or
shll
mov
imul
ljmp
jg
fwait
aaa
outsl
and
out
les
mov
fidivrs
shr
jmp
outsb
ror
fwait
aaa
outsl
sbb
dec
data16
clc
push
pushf
mov
inc
int
xchg
daa
jg
adc
push
push
aaa
and
punpckhwd
adc
xchg
pop
xchg
stc
repz
in
loop
jecxz
call
das
push
xchg
scas
xor
or
cmpb
in
fwait
aaa
add
cmpsl
movsb
inc
pop
pop
jb
jns
out
or
push
xor
sbb
aaa
outsl
fidivrs
out
in
cli
and
mov
dec
mov
outsb
into
inc
xchg
pushf
aam
fwait
aaa
out
xchg
in
jo
sbb
push
xchg
adc
adc
es
lds
jp
decl
inc
aaa
outsl
fidivrs
sbb
sub
mov
dec
pop
stc
shll
repz
lock
jb
lcall
fidivrs
out
mov
add
call
loopne
fwait
mov
add
xchg
test
sub
lahf
aas
dec
test
das
cmp
add
scas
mov
mov
and
pushf
jbe
pop
cwtl
in
and
jbe
outsb
testl
das
mov
jp
xchg
int
aaa
outsl
cmc
mov
popf
mov
inc
les
jns
out
sbb
jbe
inc
dec
add
mov
out
adc
push
daa
pop
cmp
addb
icebp
daa
aaa
aad
xchg
enter
jge
dec
mov
fidivrs
stos
clc
enter
mov
push
int3
shlb
int
aaa
outsl
dec
in
pop
mov
pop
ljmp
xchg
pop
pop
mov
adcl
and
dec
fwait
aaa
outsl
ficomps
add
sub
cmp
cli
xor
sbb
int
sahf
sbb
int3
push
ljmp
je
fidivrs
inc
insl
xchg
mov
or
or
xchg
ret
cmpsb
mov
pushf
fidivrs
arpl
adc
loop
mov
ds
maskmovq
divl
ja
enter
add
mov
and
rol
in
daa
aas
jg
aad
rol
es
pop
mov
mov
call
cmovle
cmp
fidivrs
int
push
stos
clc
test
negw
jno
mov
xchg
xchg
xchg
fwait
ljmp
imul
mov
pusha
sbb
pop
mov
push
fwait
aaa
outsl
fidivs
adc
loop
adc
out
mov
stos
jno
adc
dec
cmc
push
inc
aaa
outsl
fidivrs
sub
ret
neg
cli
sub
repz
fwait
lods
xchg
cwtl
ljmp
cld
cs
sub
mov
je
sub
add
sbb
fists
sub
mov
inc
mov
cmc
push
push
mov
pop
push
xchg
mov
nop
int
adcb
dec
sbb
sbb
lcall
pop
adc
dec
cmc
nop
out
dec
mov
jns
jno
lods
jg
jl
xchg
cmp
repnz
mov
mov
and
xor
fidivs
int
push
adc
nop
aaa
outsl
andb
aam
decb
and
cwtl
mov
inc
imul
push
inc
sbb
mov
out
stos
xchg
inc
xchg
fs
jns
out
sbb
dec
mov
push
push
adc
daa
loopne
and
sbb
xchg
iret
stos
and
pop
or
mov
ret
inc
sub
subb
test
sub
leave
sti
cwtl
stos
daa
xchg
cmpsb
loope
inc
psrld
scas
xchg
sti
mov
sub
or
orb
mov
adcb
mov
popf
das
mov
fildll
jo
into
aas
das
stos
sub
mov
inc
sub
pop
pop
inc
lods
pop
ja
jnp
jp
add
ljmp
adc
sub
push
movsb
push
inc
stos
iret
cmpsl
adc
jns
fbld
jl
aaa
outsl
or
and
xchg
loopne
mov
push
notb
xor
pop
pop
inc
aas
stc
cld
rol
dec
testl
repz
jg
pop
aas
mov
push
insl
xchg
push
lahf
and
push
push
movsb
mov
fcmovbe
cmp
push
shll
shll
jg
push
das
xchg
sub
lods
fildll
xchg
xor
mov
lock
cmpsb
out
xchg
fildll
loopne
lock
popa
nop
cmovnp
push
dec
aaa
sub
jbe
out
sub
or
shl
out
push
pop
xlat
aas
cmp
lret
icebp
xchg
add
outsl
stos
sub
xchg
sub
jbe
out
fwait
pop
out
mov
jnp
jle
shlb
jns
xchg
add
sahf
loop
pusha
stos
and
push
imul
mov
mov
repz
mov
mov
loop
cmp
mov
movsl
jecxz
add
mov
push
pop
sbb
iret
mov
loop
lods
scas
push
cld
stc
repz
call
dec
dec
je
xlat
xchg
jb
pop
iret
lahf
aas
jg
pop
push
or
mov
decl
stc
stc
repz
in
inc
dec
out
and
int
or
decb
mov
sub
stc
mul
out
mov
test
push
mov
dec
pop
stc
sub
cmp
add
lret
sarl
call
jns
je
add
mov
mov
mov
dec
pop
xchg
mov
inc
mov
mov
and
ja
cmp
int
aaa
pop
xor
inc
mov
popa
iret
sahf
mov
scas
clc
dec
repz
fiaddl
cld
nop
sahf
ret
aaa
cmp
jns
popa
adc
ret
add
int3
cmc
dec
dec
aaa
inc
push
cmpsl
shr
jmp
repz
fwait
aam
add
fsubrs
outsl
fidivrs
ds
cmpsl
push
orl
pop
jmp
fwait
aaa
xchg
cmc
push
rcr
sti
imul
cld
cld
cmp
lds
xor
fwait
and
jns
xchg
mov
outsl
fidivrs
daa
fstl
or
out
adc
dec
lcall
outsl
fidivrs
adc
dec
inc
adc
fisubl
inc
ss
cwtl
mov
aaa
outsl
jmp
mov
push
pop
push
mov
cld
jmp
aas
dec
mov
arpl
ja
pop
jns
cmpsb
fistpll
cmp
pop
inc
sub
pop
add
stos
aas
outsl
fidivrs
mov
dec
movsb
jmp
dec
roll
mov
jb
jns
out
insb
xor
push
jmp
dec
ficompl
cmp
add
push
jns
out
cs
mov
jbe
scas
xor
adc
mov
lds
outsb
mov
ljmp
push
divl
xchg
cmp
and
loopne
lock
out
sbb
stc
repz
pop
js
sub
flds
jle
cmp
sarl
cld
lret
cmc
fsubrs
sub
mov
iret
lahf
fs
scas
sub
call
dec
adc
cmc
sub
cwtl
cmp
mov
sahf
lret
mov
push
mov
out
addr16
jns
out
js
std
push
sti
fstpt
insl
ret
sub
mov
cmp
clc
and
sbb
sub
ja
xor
push
mov
dec
and
aaa
arpl
enter
cld
stc
adc
pop
cmc
mov
mov
lahf
aas
rcrb
pop
jp
xor
out
lock
movsb
repz
cwtl
or
das
cs
inc
jl
repz
sub
sbb
sub
divl
stos
mov
ljmp
and
inc
push
fs
push
leave
frstor
xchg
dec
dec
mov
jb
xchg
lahf
jg
xor
dec
into
addr16
dec
notb
cld
aaa
push
and
adc
int
mull
lret
sbb
outsb
lcall
mov
push
enter
lods
out
jl
push
out
lahf
aas
or
add
sarl
pop
cld
stc
repz
inc
cmp
jl
xor
test
jg
inc
call
pusha
jns
pop
sub
cld
stc
repz
stos
inc
fsubs
sbb
sbb
sarb
aas
jg
bound
and
clc
xor
stos
push
cltd
sti
mov
repnz
mov
lods
sub
mov
xchg
out
jecxz
lea
sti
push
adc
int
aaa
push
in
push
sbb
cmp
pushf
mov
mov
push
push
and
sbb
das
dec
adc
mov
imul
scas
and
das
sahf
das
mov
out
fwait
xorb
cmp
out
loop
fwait
loopne
inc
xor
into
insb
data16
pop
outsl
fidivrs
mov
push
std
jmp
aaa
mov
iret
mulb
mov
scas
cmpl
pop
mov
mov
mov
inc
pop
aas
jg
sbb
lret
pusha
cld
xchg
cli
imul
lahf
push
mov
out
fdivrl
out
lahf
aas
cmpsl
xor
sbb
push
lret
jg
cld
stc
repz
add
outsb
out
mov
decl
lahf
aas
jg
dec
es
shlb
stc
repz
add
imul
int
mov
pop
xchg
repz
daa
xchg
inc
sub
pop
cmp
cmpsb
pop
mov
push
aas
adcb
fidivrs
jne
stos
push
ds
jg
mov
repz
fwait
mov
leave
mov
xor
lcall
mov
lock
cli
mov
lahf
cmp
out
jne
out
fwait
aaa
fimuls
repz
or
mov
aas
jo
mov
sub
push
mov
shll
jmp
int
aaa
out
mov
mov
test
mov
mov
repz
stos
cltd
xor
jle
test
js
aaa
outsl
and
jb
out
fiaddl
sub
int
stos
push
push
mov
adc
stos
or
outsl
fidivrs
fs
int
fsts
push
fdiv
xchg
int
push
lahf
out
and
sbb
or
addr16
cmp
lret
cs
hlt
ljmp
inc
mov
xor
sbb
mov
cli
jmp
dec
rol
xor
inc
mov
daa
lahf
sahf
fsubrl
pop
pop
adc
fidivrs
lahf
dec
mov
xorb
lcall
mov
outsb
dec
in
sbb
lds
repnz
aaa
imul
aaa
outsl
cli
arpl
push
rorb
stos
add
ret
sbb
repnz
sti
xor
ja
iret
inc
cmp
iret
push
add
mov
aas
pushf
inc
cld
addr16
hlt
lahf
add
push
mov
mov
dec
inc
jg
xor
push
cmpsb
lahf
aas
jg
cmpsl
inc
in
leave
rcr
cmp
add
mov
iret
test
inc
or
pop
dec
iret
lahf
jg
xor
mov
add
mov
mov
fidivrs
adc
jle
enter
aad
daa
aaa
outsl
aam
jae
pop
test
dec
cmp
mov
out
data16
sar
ds
cltd
jno
out
fwait
aaa
xchg
pop
popa
stos
fdiv
aas
jns
ret
inc
cmp
sub
adc
fwait
jmp
jg
fcompl
jmp
outsl
inc
sbbb
aas
dec
mov
stc
repz
jl
xchg
imul
js
lods
sub
cld
loopne
mov
add
mov
push
int
adcb
jns
xor
clc
cmp
icebp
xchg
nop
cmp
bound
cmp
jle
cld
xchg
call
faddl
out
cld
stos
lea
mov
push
ss
mov
out
addr16
jp
xchg
mov
mov
aaa
out
sub
icebp
aad
outsl
sub
out
fwait
adc
jmp
pop
cs
cmp
jns
xchg
push
test
xor
sub
inc
mov
je
je
outsl
fidivrs
mov
jle
cmp
test
orb
cmp
mov
lret
ror
pop
adc
xlat
mov
stos
push
adc
faddl
pop
mov
scas
xchg
out
add
jle
and
js
imul
dec
mov
or
mov
in
adc
jge
pop
repz
sbb
and
cwtl
or
orl
mov
ljmp
js
add
xor
repz
dec
mov
pop
mov
adc
stc
push
cli
icebp
hlt
leave
mov
push
iret
lahf
jg
jmp
xchg
dec
jne
pop
cld
stc
repz
cmpsl
pop
dec
pop
push
fsts
shrb
adc
das
pop
sub
adc
cli
aaa
cli
pop
je
adc
insb
push
punpckhdq
xchg
mov
jg
push
outsb
cmc
or
cld
mov
jne
dec
arpl
test
iret
lahf
aas
jg
push
scas
xor
aas
clc
jnp
and
repz
std
adc
pop
sti
adc
pop
popf
push
push
jg
dec
movq
pusha
imul
aaa
out
stos
xlat
mov
sbb
mov
inc
aas
add
aaa
outsl
stos
lea
testl
out
fwait
popf
and
or
testb
xchg
cmp
push
out
jns
out
lcall
fstps
and
add
aas
imul
gs
in
ret
sub
popf
push
cmp
push
loope
and
xchg
nop
xchg
insb
in
fwait
ja
mov
fbld
inc
popa
mov
leave
int
in
fwait
mov
jo
mov
mov
dec
outsl
fidivrs
out
int3
sbb
rclb
js
mov
and
or
xchg
push
adc
daa
out
mov
sti
mov
aaa
inc
pop
lahf
outsl
fimuls
xchg
cmp
jg
cld
jmp
lcall
mov
out
ret
lahf
aas
add
mov
dec
mov
jl
sub
repz
je
movsb
lods
mov
lods
cmp
push
adc
and
or
stos
andl
ss
xor
leave
push
and
xchg
pop
or
pop
mov
les
cmpsb
iret
lods
adc
add
clc
pop
and
add
enter
iret
iret
lahf
ds
negl
scas
das
fs
sahf
testb
xchg
insl
sbb
call
push
mov
das
in
and
push
sahf
arpl
call
ja
add
stos
test
xchg
pop
stos
push
cmp
out
lahf
sbb
pushf
jo
add
dec
mov
cmpsl
jnp
jg
cld
stc
push
aas
push
mov
bound
push
int3
outsl
xor
iret
lahf
aas
add
fistl
sub
idivb
insl
cld
cld
stc
repz
push
outsl
fdivrs
cmc
iret
mov
or
iret
lahf
jg
sub
pop
sbb
in
repz
fs
jb
cmp
push
cmp
sbb
loope
out
mov
cwtl
int3
cmp
xlat
push
add
fimuls
push
xchg
fstps
jg
repz
dec
inc
xor
inc
icebp
mov
aad
aaa
outsl
fidivrs
xchg
push
push
jg
mov
int
fwait
pushf
ficompl
or
mov
imul
jns
sub
aas
shlb
pop
add
xor
cmp
sub
or
aaa
and
repz
xchg
lret
scas
dec
mov
jge
cmc
mov
mov
lahf
push
jne
shlb
stc
dec
mov
adc
mov
addr16
loope
rclb
mov
aas
lea
inc
insb
and
mov
xchg
push
fistpl
repnz
outsl
mov
add
jg
aad
fisubrs
enter
dec
gs
lahf
in
and
xchg
es
sbb
jg
cld
stc
pushl
ret
xchg
ds
pushf
xor
adc
daa
lahf
aas
insb
push
add
hlt
andb
pop
out
add
pop
ss
lock
sbb
jg
cld
outsl
sub
mov
ja
xor
push
repz
lahf
jmp
push
in
int
xor
jne
int
mov
cld
stc
aas
mov
push
inc
fwait
mov
push
inc
sub
lahf
aas
js
outsl
mov
bound
mov
add
lahf
ja
inc
mov
xor
out
fwait
add
sub
repz
data16
cmp
outsl
fidivrs
adc
clc
je
mov
lahf
aaa
cld
and
pop
pop
and
repz
outsb
xchg
fnstenv
adc
fwait
aaa
outsl
fisubrs
or
rorl
push
rcrl
stc
dec
jns
out
testb
pop
dec
jmp
mov
outsl
fidivrs
stos
xchg
leave
xchg
push
xchg
mov
icebp
cmc
enter
cmpsl
push
xor
or
cmp
jns
out
sbb
repz
push
or
aad
inc
shlb
mov
and
repz
scas
sbb
dec
paddw
aam
aaa
outsl
fidivrs
sbbb
xor
add
mov
ss
mov
out
sub
lods
lods
pop
xchg
inc
js
inc
and
mov
push
sahf
bound
add
stos
pop
stos
inc
cltd
and
jle
loopne
pop
testl
pop
mov
les
dec
les
dec
inc
pop
inc
inc
mov
daa
inc
sbb
inc
inc
push
rclb
mov
adc
fsts
cmp
shrl
xor
je
cmp
inc
inc
and
cwtl
inc
das
mov
stos
and
fisubs
outsl
inc
sub
xchg
mov
leave
inc
inc
mov
inc
outsl
inc
sub
mov
sbb
fwait
aaa
outsl
fsubs
fdivrs
nop
lahf
cmp
call
nop
xchg
or
lock
iret
jge
jmp
mov
mov
lahf
sarb
fidivrs
mov
push
push
adc
daa
loopne
or
leave
inc
lcall
mov
repnz
rcll
pop
xor
repz
sub
sbb
xchg
std
lods
aaa
lret
jecxz
aaa
add
jge
dec
jmp
div
jno
les
and
sbb
decl
jns
out
mov
test
mov
sub
adc
fiadds
sbb
cwtl
loop
sbb
lock
rcll
mov
stc
mov
je
cmc
movsb
ja
push
pushf
ja
aaa
and
push
cmp
lcall
cld
jge
repz
ds
cld
std
lea
ja
xchg
inc
aam
mov
mov
int
aaa
popf
push
cmp
das
dec
mov
in
pop
gs
scas
push
roll
daa
inc
les
repnz
jmp
call
cmpsl
xchg
xchg
into
sbb
enter
jmp
test
aaa
out
test
inc
testl
int
stos
inc
xor
cmp
mov
or
lahf
or
shll
sub
mov
scas
mov
hlt
pushf
andb
pop
lods
cmpsl
mov
repz
adc
jp
pop
inc
lret
std
clc
insb
push
jge
cmp
push
push
outsl
faddp
jecxz
inc
push
adc
out
adc
adc
mov
ud0
mov
ds
add
mov
inc
stos
nop
fidivrs
push
into
iret
scas
pop
jg
fwait
aaa
outsl
mov
jp
test
test
ror
bound
out
roll
mov
orl
and
push
jle
lret
or
stc
ret
daa
sbb
mov
shlb
lods
and
jg
push
fildl
or
dec
push
xchg
mov
daa
sub
jns
stos
push
xchg
sub
cmp
mov
xchg
fwait
aaa
dec
cmp
push
movsl
out
fwait
ja
pop
cmp
mov
mov
hlt
fcoml
inc
scas
daa
sbb
insb
ficomps
pop
bound
lea
out
rcl
insb
clc
fscale
cmp
xchg
mov
cmp
sahf
pop
and
xor
outsb
enter
xchg
dec
push
iret
lahf
aas
hlt
and
jnp
mov
cld
stc
repz
out
push
es
hlt
aad
cmp
out
popf
and
pop
ja
pusha
call
iret
add
jns
stc
repz
sbb
mov
outsl
in
out
repz
jg
aas
jg
cld
ja
pop
lret
dec
dec
pop
push
lods
fbld
loopne
lahf
pop
cmp
inc
testl
fprem1
jbe
outsb
roll
mov
inc
ficomps
repnz
sub
mov
out
bnd
shll
jmp
iret
lahf
ds
fmull
cmp
push
aam
adc
repz
mov
int
add
subl
push
call
push
test
call
push
iret
in
test
call
sbb
ds
pop
push
pop
sbb
imul
push
pop
jecxz
mov
pop
sub
call
das
call
lods
call
bound
call
mov
dec
mov
xchg
call
mov
inc
sub
xchg
pop
sub
mov
mov
call
aam
xchg
push
inc
sub
add
pop
test
add
bound
and
xor
call
push
lods
push
or
xchg
mov
jg
push
pop
push
faddp
adc
inc
and
call
push
call
push
movsb
mov
iret
out
push
call
push
adc
add
call
imul
lahf
sub
cmp
inc
cmc
call
mov
push
lods
call
mov
call
lahf
call
sub
inc
inc
fistpll
inc
call
push
jg
pop
lds
call
mov
mov
pop
mov
pop
sub
pop
call
out
loop
rorl
call
inc
xchg
mov
mov
out
das
push
call
out
call
push
call
adc
pop
push
lods
pop
call
adc
push
adc
adc
push
xchg
in
mov
call
pop
sub
aas
mov
push
sbb
xor
push
inc
xchg
outsl
call
inc
call
push
mov
adc
mov
adc
xchg
mov
adc
call
xchg
push
adc
call
adc
xchg
adcb
call
dec
call
in
out
pop
test
inc
movsl
aad
call
call
mov
mov
call
mov
notl
aam
mov
aas
call
cmpsl
call
or
mov
call
lods
call
sub
call
daa
call
mov
inc
lods
call
dec
inc
out
pop
sub
jmp
pop
dec
adc
enter
call
inc
call
imul
xchg
test
jle
push
sub
or
aaa
jg
loope
repnz
jg
shll
pop
call
inc
xchg
call
adc
push
mov
call
adc
cld
mov
jp
push
shr
aas
mov
lds
stos
pop
imul
jle
faddl
adc
sbb
movsb
sub
inc
sub
inc
lods
call
mov
mov
mov
call
shr
out
gs
and
push
adc
call
or
call
hlt
mov
inc
xchg
mov
mov
stos
adc
call
ja
in
push
xor
mov
call
push
outsl
call
mov
xlat
aas
pop
ror
sub
call
sub
xchg
out
iret
lods
sub
add
sub
inc
das
add
cmp
call
mov
call
dec
call
mov
pop
mov
mov
call
test
lea
adc
nop
loopne
call
inc
call
push
stc
fcomps
fcomps
arpl
call
aas
call
mov
pop
adc
push
adc
out
push
cmpsl
call
daa
call
sbb
call
in
leave
jno
add
out
mov
sbb
cmc
popa
adc
out
fsubs
fdivrs
aaa
lock
lock
mov
or
jmp
nop
fwait
ja
xlat
mov
lahf
mov
bound
in
sub
out
rorl
pop
or
pop
leave
repz
fnstcw
jle
jne
fimuls
push
outsl
fiadds
sbb
sbb
pop
sbb
std
lods
loop
fwait
aaa
aaa
lret
jecxz
outsb
push
ja
fs
mov
int
bnd
push
rdmsr
push
rorl
outsl
add
pop
mov
xchg
mov
sub
add
test
addr16
cld
stc
inc
and
sbb
inc
jg
jmp
dec
lock
out
lahf
aas
push
jb
adc
das
sub
je
stc
stc
repz
je
movsb
test
pushf
or
push
cmp
lcall
dec
inc
imull
ds
cld
std
lret
cld
stc
repz
inc
pushl
xor
and
or
push
mov
mov
popf
push
cmp
das
dec
mov
iret
push
pop
outsb
out
ljmp
scas
aas
jg
cld
push
rcrl
daa
inc
les
jmp
call
lahf
xchg
lods
pop
cmpsl
xchg
sbb
in
mov
jns
mov
data16
lds
mov
xor
cmp
mov
aaa
outsl
fisubs
mov
and
sub
ljmp
mov
lods
ja
mov
repnz
lods
test
stc
repz
push
pop
inc
lret
std
clc
insb
addr16
outsl
ficoms
cmp
cmp
jecxz
inc
push
adc
int
aaa
in
adc
mov
repz
psllq
pop
outsl
sub
mov
pop
stos
nop
adc
push
mov
into
iret
scas
mov
pop
jp
fnsave
adc
aad
cmp
ror
push
aad
fwait
mov
and
jns
setnp
sbb
push
jle
lret
and
iret
es
outsl
mov
lods
push
fildl
enter
or
dec
push
xchg
lds
and
idivl
cld
jnp
lods
cmp
jle
mov
cmp
mov
pop
push
movsl
pop
cmp
dec
leave
cwtl
push
mov
add
fwait
mov
scas
daa
sbb
repz
pop
sub
and
outsb
cltd
lea
fnstcw
int
dec
dec
aam
fists
xor
outsb
int
mov
mov
mov
loopne
out
and
and
das
loop
push
es
sbb
add
hlt
aad
cmp
out
popf
and
jge
es
jb
inc
iret
outsl
add
jns
scas
test
outsl
sbb
mov
out
jns
jno
fcomi
fcomi
jecxz
pop
lret
aaa
outsl
fidivrs
push
lods
fbld
cmp
push
ljmp
jbe
push
scas
fidivrs
outsb
roll
and
fldcw
aaa
outsl
mov
mov
push
fldenv
adc
sbb
push
icebp
enter
repnz
dec
sub
add
xchg
cmp
stc
bnd
roll
outsl
mov
int
aaa
inc
outsl
cwtl
and
addr16
mov
mov
sbb
xchg
out
loope
lahf
add
subl
out
test
pop
mov
add
mov
mov
xchg
fisttpl
loopne
mov
mov
adc
and
inc
or
or
fmuls
lea
mov
add
mov
add
mov
movl
insl
add
push
decl
scas
ret
insl
xchg
mov
xchg
add
add
cmp
popa
and
mov
lahf
in
mov
mov
xchg
shlb
inc
rcl
dec
and
mov
inc
adc
mov
enter
imul
push
dec
xacquire
loopne
xor
aaa
lock
mov
mov
adc
cmpl
jno
xor
mov
pop
scas
mov
mov
mov
insb
pop
mov
or
cmp
lahf
dec
int3
push
fiadds
inc
ss
int3
movsl
scas
jns
rolb
adc
pop
mov
and
mov
add
xor
push
inc
mov
test
adc
jns
aad
mov
adc
pusha
sarb
mov
jmp
lahf
sbb
and
ret
inc
inc
xchg
push
pop
das
pop
inc
test
lahf
aas
lds
fs
cld
insl
cmpsb
and
dec
icebp
subl
fistpll
sbb
xlat
sbb
scas
add
and
push
mov
add
incb
rcl
mov
test
or
ret
pop
pusha
fisttpll
lahf
mov
in
or
mov
dec
mov
inc
inc
movsb
jle
cld
stc
cmp
jmp
inc
mov
fmuls
mov
imul
adc
mov
fistl
test
adc
and
xor
push
cmpsl
and
ret
inc
mov
and
push
and
and
mov
adc
dec
inc
jle
mov
xchg
xchg
push
jmp
xor
mov
mov
cmp
iret
mov
mov
iret
lahf
fmuls
mov
lahf
inc
pop
fwait
lss
mov
out
aaa
test
in
outsb
lea
push
lea
enter
mov
andl
and
outsl
mov
daa
sbb
xor
mov
mov
add
aas
insb
mov
out
aas
mov
xor
push
fsubrs
aam
stc
movshdup
xchg
mov
adc
add
jle
outsl
test
mov
insb
mov
or
or
dec
mov
mov
push
cmc
leave
adc
pop
inc
lahf
aas
jg
cmp
int
aas
dec
mov
cli
xchg
ds
out
xchg
xlat
ret
xchg
adc
push
or
xchg
inc
jle
cld
jbe
jge
add
clc
xchg
inc
lcall
cmc
jne
aad
push
pop
add
push
int3
add
xchg
repz
or
add
mov
in
add
test
adc
cmp
enter
add
mov
push
lret
mov
push
xchg
iret
mov
aam
add
mov
pop
pop
jmp
add
push
add
cmp
loope
adc
adc
sbb
adc
inc
dec
push
inc
imul
into
fwait
add
push
fstpl
dec
push
mov
pushf
insl
push
aam
push
icebp
sahf
icebp
push
insb
dec
add
sbb
sub
or
mov
xor
clc
lret
mov
push
jbe
je
shll
pop
adc
add
fnsave
and
jl
aaa
movb
mov
cmc
sarb
cmpsl
sbb
pop
inc
and
mov
inc
adc
sbb
add
cld
sbb
or
pop
mov
mov
and
dec
push
inc
sub
inc
adc
pop
lods
mov
sbb
adc
push
or
unpcklps
inc
sbb
adc
test
add
into
add
movsl
xchg
loopne
add
sbb
inc
sbb
push
push
popf
mov
cmp
mov
inc
les
stc
push
cld
sbb
add
dec
ljmp
push
mov
test
outsl
inc
sub
mov
xchg
push
adc
adc
adc
dec
mov
mov
mov
push
push
test
jmp
jnp
stos
ret
jno
mov
imul
mov
stos
dec
sub
or
inc
adc
xor
jg
add
ret
enter
or
adc
sub
aaa
jnp
or
scas
push
and
aad
pop
xchg
shl
sub
xor
or
iret
or
cmp
or
add
jecxz
jmp
not
sbb
adc
inc
add
mov
mov
adc
cli
or
push
scas
mov
adc
and
aad
mov
inc
xor
in
insl
fcoms
add
sbb
out
and
add
sub
sbb
mov
aam
pop
xor
xor
or
adc
or
or
push
or
int3
fdivrs
loop
push
cmp
adc
mov
enter
out
sub
add
test
jo
mov
inc
adc
test
xchg
jg
cwtl
pop
mov
bound
fwait
adc
adc
unpckhps
xor
loopne
cmc
js
lret
mov
inc
sbb
sbb
je
mov
add
test
sbb
inc
dec
fsubs
mov
and
sub
dec
inc
mov
enter
inc
inc
lret
ret
sbb
js
or
nop
aas
rolb
std
jb
add
lret
pop
and
add
pop
adc
rorl
add
pop
notb
call
popa
inc
adc
cmp
call
lds
add
test
in
insb
push
sub
jae
push
repnz
push
out
sbb
push
lret
or
enter
cmp
cmp
ret
fistl
sbb
and
shrl
lock
xchg
lret
popa
jge
data16
mov
mov
movsb
add
stos
int3
jmp
mov
mov
or
or
pop
adc
cmp
rolb
jo
and
jbe
mov
xor
jb
jle
mov
push
out
call
mov
call
sarl
fwait
cmc
rorb
mov
and
add
cmpsb
or
xchg
adc
or
adc
loopne
cmp
cmp
mov
push
push
icebp
add
adc
or
and
roll
icebp
inc
sbb
adc
fbld
or
xor
mov
add
daa
fmul
inc
mov
pop
mov
cmpb
pop
push
inc
add
and
jbe
adc
pop
push
pop
adc
or
push
sub
or
add
inc
rol
cltd
mov
add
lret
add
cmpsb
sbb
inc
daa
rcrl
push
add
push
xlat
adc
sbb
test
sub
mov
inc
loop
jo
ficoml
sbb
push
popa
or
dec
adc
cmp
inc
sbb
popa
push
jg
cmpsl
or
xor
inc
add
leave
shll
ds
push
dec
adc
xor
push
sbb
or
ret
or
push
pop
add
or
leavew
or
add
lret
arpl
pop
adc
sub
inc
adc
or
mov
js
pusha
pop
rcrl
sbb
xlat
sub
or
jb
les
loop
mov
inc
inc
int
fistps
jecxz
add
adc
jmp
loop
ret
je
xor
lock
sahf
mov
inc
pop
ret
fwait
sub
push
push
arpl
push
addb
scas
aam
leave
addr16
or
xorb
jl
icebp
cwtl
add
adc
add
sbb
xchg
cmp
adc
xor
shlb
test
ror
cmp
adc
cmp
test
pop
push
clc
lock
sub
pop
into
mov
and
ljmp
scas
sarl
aad
adc
mov
int3
jmp
or
sbb
cwtl
add
test
xchg
or
pop
dec
pushf
lret
xor
repnz
clc
xor
lret
lock
sub
popf
mov
aam
repnz
stos
mov
sbb
insl
dec
adc
mov
adc
test
inc
lea
dec
scas
and
ja
xor
imul
cmp
shrb
push
test
bound
mov
test
pop
subl
sbb
fldenv
inc
in
mov
inc
xlat
adc
dec
rcl
rcr
dec
je
mov
aam
dec
je
push
imul
ret
stc
and
mov
movsb
add
xchg
and
add
loope
mov
mov
add
or
subl
inc
mov
xchg
push
or
xorb
jge
or
cmpsl
push
push
lods
test
nop
test
xchg
stc
xchg
xlat
mov
and
inc
rorb
or
addl
je
fcompl
push
aas
xor
enter
mov
push
push
int
adcb
xchg
orl
add
orb
mov
mov
add
addl
inc
sub
int
pusha
lret
or
pop
add
xchg
mov
es
mov
inc
ret
jns
add
dec
add
adcb
push
fsubs
push
xor
sahf
cmovo
add
adc
jbe
movb
sbb
xchg
sbb
flds
xor
nop
ljmp
mov
lret
mov
cwtl
sub
push
imul
test
or
and
nop
iret
add
sub
push
jno
add
add
mov
in
jge
xor
icebp
add
adc
fs
xor
fld
mov
add
sbb
or
test
lret
xchg
mov
pop
adc
inc
ja
imul
add
xchg
imul
cltd
inc
lret
inc
fstpt
mov
mov
popf
insl
das
dec
es
adc
pushf
movsb
sub
add
sbb
adc
pop
inc
push
or
pop
push
or
and
sbb
shl
leave
and
fimuls
js
ljmp
fistl
addr16
inc
lods
add
fiaddl
xchg
jg
and
rcrl
inc
pop
ret
sbb
sub
repnz
add
xor
push
test
xchg
pop
cli
cmp
je
adc
stos
mov
push
or
dec
scas
fwait
insl
inc
or
mov
pop
cmp
loope
adc
movsl
add
or
fs
ror
loope
out
lea
xlat
adc
dec
xor
push
mov
mov
pop
mov
add
ret
push
loop
and
cld
mov
xchg
add
mov
mov
or
pop
roll
adc
sbb
add
sbb
ds
test
ss
adc
jns
rolb
in
fcomip
sub
sub
push
cmp
dec
dec
add
pop
xchg
sbb
movsb
add
sub
mov
add
std
sub
xchg
cmp
cmc
add
sbb
push
mov
xor
les
push
or
push
add
shlb
add
cmp
int3
inc
mov
mov
fwait
je
xor
inc
mov
sub
cmp
pop
cmp
sub
ret
mov
int
adc
out
xchg
ss
pusha
and
adc
push
rorl
mov
sbb
or
inc
leave
sbb
jbe
dec
mov
push
mov
orb
cmpsl
inc
movsl
iret
in
inc
mov
push
or
xchg
rcrl
pop
xchg
mov
call
adc
cmpsb
rcrb
cmp
push
jmp
jo
pop
mov
jns
jecxz
and
sbb
push
adcb
and
pop
pusha
sub
adc
sahf
push
test
rdmsr
adc
lock
and
add
in
dec
scas
test
enter
js
addb
popa
orl
shrb
mov
sbb
fcomps
lret
shll
data16
inc
pusha
push
jmp
push
mov
push
ret
ljmp
push
and
dec
push
push
mov
jecxz
push
bound
cmp
lock
jle
cmp
ret
out
adc
sub
aad
pop
out
mov
xchg
cltd
ljmp
and
fs
js
cmp
inc
adc
test
inc
pop
ret
inc
orl
rcll
sub
orb
ljmp
or
adc
jle
and
jl
jne
xor
mov
jl
xor
mov
xor
dec
sub
mov
adc
xor
dec
in
fdivs
pop
mov
icebp
fdivl
orl
add
pop
xchg
add
lahf
or
shrb
movsb
add
pop
into
push
shlb
mov
pop
into
jl
add
pushl
mov
mov
test
push
rorl
push
and
xor
negb
or
scas
pop
and
mov
inc
int
mov
sbb
xlat
sbb
outsb
add
or
push
sbb
or
add
inc
xor
jbe
inc
shrb
cmp
test
call
mov
adc
dec
shll
repnz
adc
jp
pop
push
or
inc
xchg
sbb
push
mov
inc
outsb
gs
sbb
inc
inc
ficompl
inc
enter
insl
or
xchg
adcb
enter
out
add
test
push
adc
jmp
or
notb
mov
bound
cmc
dec
lret
mov
cmp
subb
push
mov
cli
mov
inc
adc
jnp
dec
popa
loopne
add
enter
mov
pop
adc
sub
out
test
das
mov
fimuls
or
push
xor
rorb
loop
cmp
fsub
jb
sub
adc
shrl
notb
jmp
add
aad
out
pop
cmp
mov
xor
add
adc
push
xchg
data16
push
push
xchg
clc
rol
rorl
pusha
sbb
add
inc
loop
xor
loop
or
fmuls
add
inc
rcrb
pop
mov
jge
pop
inc
pusha
and
sbb
inc
xor
cmp
or
jo
or
fcmovnu
push
adc
fstl
ljmp
sbb
mov
sbb
mov
adc
arpl
mov
jle
inc
pop
or
adc
dec
icebp
and
jmp
enter
jnp
cmp
insb
mov
cmc
dec
fidivl
sbb
in
cmpsl
mov
adc
jo
mov
jno
cmp
push
push
fdiv
xor
sub
fmulp
mov
push
cmp
mov
mov
stos
clc
xlat
movb
or
or
mov
push
mov
xchg
and
xchg
lcall
clc
sub
pop
jle
adc
xchg
movsl
dec
sbb
adc
push
push
mov
xlat
pop
and
lahf
out
sbb
add
aaa
iret
orl
push
lcall
fimuls
inc
push
adc
js
sub
pop
add
mov
push
or
push
ret
movsl
adc
sub
inc
cmpsl
rcrb
icebp
rol
xchg
out
out
adc
ret
mov
gs
or
mov
jne
cmp
xchg
rol
mov
cmp
xor
subl
mov
push
movsb
mov
push
cs
stc
or
pop
mov
call
je
daa
ljmp
mov
dec
mov
add
mov
subb
pop
push
bound
enter
mov
adc
xor
rclb
repnz
lea
or
aam
push
loopne
repnz
pop
adc
enter
dec
add
ds
mov
sbb
popa
pop
jbe
add
or
xchg
lea
mov
mov
pop
cs
adc
repnz
push
mov
insb
test
adc
notb
mov
je
pop
jge
subb
sub
cmp
push
adc
adc
rcrb
inc
int3
mov
mov
cmp
jns
or
mov
icebp
dec
cmp
std
push
mov
rorb
sbb
pop
adc
roll
mov
clc
dec
int3
sub
test
inc
push
mov
inc
leave
ror
inc
inc
cltd
adc
pop
add
sbb
mull
inc
enter
pop
andl
or
add
pusha
or
in
bound
stos
xlat
insl
push
mov
or
jnp
mov
pop
pop
cmpsb
es
mov
jp
adc
sbb
sub
cvttps2pi
push
jne
jae
or
inc
movsb
lock
je
dec
adc
xchg
pop
mov
mov
incb
mov
and
clc
adc
rclb
mov
lret
dec
or
lcall
push
jge
mov
imul
lea
icebp
fdiv
out
dec
add
in
lret
push
es
lret
fistps
pop
xor
sub
mov
sarl
lahf
mov
pushf
mov
sbb
lret
push
sub
leave
dec
shlb
pushf
cmp
lcall
xchg
xchg
sub
or
rcr
cmpsl
inc
adc
add
add
push
mov
sarl
jmp
sbb
and
ja
outsb
dec
mov
or
test
inc
inc
roll
ror
adc
sbb
push
cmpsb
mov
cmp
adc
sub
jecxz
andl
rcl
sub
test
mull
mov
cs
in
mov
push
inc
adc
aad
push
arpl
adc
lds
sub
and
out
or
test
rorb
push
repz
gs
sbb
and
enter
lret
ss
xor
inc
add
adc
mov
mov
rolb
scas
sbb
je
mov
pop
sbb
push
inc
mov
adc
call
mov
pop
dec
cs
adc
push
dec
jns
and
sbb
mov
loopne
push
add
xlat
or
out
ret
jne
or
or
ret
pop
push
push
push
stos
dec
mov
enter
mov
in
rcll
push
push
sbb
roll
in
sub
or
loopne
xor
lcall
add
pop
push
outsl
stos
lcall
jno
and
mov
push
sbb
pop
arpl
negl
xor
pop
cmp
xchg
lock
es
push
hlt
testb
inc
and
lahf
mov
push
test
adc
inc
add
inc
rcll
addb
add
mov
adc
add
pop
ja
add
and
in
lahf
pop
push
adc
stc
and
scas
lcall
sbb
js
cld
add
mov
xchg
xchg
xor
push
mov
lea
lret
ljmp
leave
adc
jo
insb
cs
mov
addr16
mov
scas
adc
mov
mov
sets
add
mov
push
je
inc
inc
jmp
jne
push
adc
arpl
icebp
js
inc
mov
dec
dec
mov
mov
mov
pop
mov
shlb
sbb
push
or
jge
add
sbb
int
dec
fnstsw
xchg
test
adc
mov
inc
movsb
lcall
xor
insl
test
xchg
xchg
xor
dec
mov
mov
dec
mov
sub
dec
adc
call
push
lods
imul
inc
jmp
dec
add
cwtl
rclb
cs
push
xlat
into
call
sbb
or
scas
outsb
push
mull
bound
xchg
mov
inc
sarb
cmp
das
lds
xor
pop
push
adc
xchg
je
subb
pop
xchg
sbb
cmc
sub
adc
popa
loopne
inc
adc
aad
inc
sub
sub
les
or
push
rcrl
roll
sub
stos
jge
and
mov
mov
adc
xor
sbb
mov
jl
aaa
cmpl
test
sbb
add
dec
lock
xchg
sbb
das
xchg
ja
cmpsb
es
rorb
popf
and
sbb
faddl
sbb
xlat
rcll
inc
fsubs
cmp
cmp
pusha
mulb
jo
jbe
sahf
mov
mov
sbb
adc
sti
push
xor
sbb
and
add
adc
push
or
enter
dec
add
popf
push
mov
sbb
pop
adc
sahf
sub
mov
and
and
cmp
xor
clc
sub
xor
test
mov
mov
in
mov
out
inc
enter
inc
and
xchg
sub
ret
dec
aad
and
mov
pop
or
inc
mov
scas
icebp
lret
sbb
roll
push
rorb
out
add
iret
sarb
or
jp
push
repnz
into
or
jo
jge
mov
mov
mov
imul
addb
mov
icebp
mov
into
outsl
cmpsb
call
sahf
out
popa
sti
sub
mov
lahf
pop
inc
add
push
adc
stos
mov
sbb
aad
inc
incl
xchg
sbb
push
out
push
push
or
pop
stos
mov
mov
dec
adc
ljmp
ret
dec
cmc
adc
mov
xchg
adc
sbb
mov
push
into
push
inc
adc
icebp
push
jmp
fmulp
mov
outsl
sarl
adc
pop
adc
mov
int
repz
ficoms
test
push
jo
sbb
push
xor
sbb
or
cmp
stos
adc
cmp
jae
mov
imul
jne
or
jne
sbb
sub
mov
mov
jns
ret
call
aas
xor
fwait
push
mov
and
sahf
lock
jge
into
mov
push
rcll
or
test
das
loop
adc
sub
pop
sub
lret
into
ja
jb
xor
lods
ret
push
push
stos
das
dec
pop
test
mov
aam
pop
mov
rorl
xor
cwtl
push
sub
out
add
ret
clc
shrl
or
cmp
push
cmp
lcall
jecxz
pop
loopne
add
push
or
test
aaa
cwtl
rcrl
inc
push
xor
adc
xchg
add
mov
or
inc
mov
inc
sub
jae
mov
shll
sahf
push
adc
push
xchg
dec
icebp
stos
and
pop
add
or
dec
sbb
add
jmp
jno
ret
adc
xor
insl
leave
jae
cmp
add
inc
pushf
sbb
push
int
js
sub
push
inc
adc
mov
cmp
insb
pop
iret
inc
mov
js
shrb
xor
in
pop
insl
lock
pop
hlt
out
or
push
xchg
jl
stos
or
push
lods
adc
dec
mov
sub
rorb
or
and
cmp
pop
adc
and
mov
xlat
out
inc
jae
mov
jmp
add
leave
jns
add
ret
mov
add
shlb
aad
rclb
orb
fnstenv
mov
push
clc
lret
mov
xchg
add
bound
inc
inc
dec
lds
mov
adc
shrl
lds
xchg
int
repnz
and
pop
mov
popa
push
fs
push
push
dec
xchg
xchg
inc
mov
and
jo
in
add
sbb
mov
lcall
test
out
xor
add
and
shrl
mov
mov
lret
bound
in
mov
fs
add
cmp
sahf
dec
insb
shl
pop
xchg
out
cld
jmp
jae
and
and
mov
pop
xor
roll
call
ret
push
testb
out
or
add
mov
push
fwait
adc
push
test
jl
aaa
sbb
pop
popa
or
cltd
aaa
shrl
into
dec
push
dec
aam
negl
adc
popa
jne
add
push
or
bound
sub
adc
pop
bound
adc
sbb
dec
mov
mov
loopne
hlt
mov
add
adc
int
pop
addb
xchg
daa
hlt
push
add
add
sbb
or
push
dec
outsb
inc
test
sbb
enter
adc
enter
push
xlat
mov
lret
loopne
or
loopne
adc
jmp
xchg
dec
add
insb
roll
ret
mov
call
mov
in
shrl
cmp
or
cmp
rolb
mov
lcall
rolb
lds
icebp
mov
fisttps
rolb
hlt
and
int
xchg
adc
jle
inc
mov
sbb
mov
or
icebp
sub
or
push
push
sub
mov
jmp
or
iret
fs
out
addr16
bound
add
test
jb
sbb
lods
or
cwtl
inc
mov
push
pop
add
sbb
cmpsb
icebp
dec
mov
xor
add
sbb
stos
faddl
insl
fmul
add
xchg
mov
adc
call
xchg
add
lcall
add
test
push
and
xchg
pop
into
lea
inc
stc
outsb
lret
or
add
pop
aam
mov
dec
ja
mov
add
mov
cmp
in
sub
adc
jg
cmpsb
fisubl
addr16
icebp
pop
cmp
mov
push
xchg
cmpsb
or
sub
mov
int
sub
mov
out
pop
sub
xor
rorl
mov
push
adc
int
push
daa
xor
pop
mov
jne
orl
inc
push
leave
jmp
dec
pusha
testb
push
adc
mov
jmp
mov
cmp
ficoml
mov
pop
out
sbb
add
jb
mov
or
scas
add
stos
or
outsb
jnp
push
inc
ret
popa
mov
mov
or
into
rolb
addb
push
mov
cmc
push
mov
push
cli
clc
test
inc
pop
xor
sub
add
test
scas
and
cli
or
mov
jno
iret
mov
insb
or
push
lret
or
add
inc
fsubrl
ret
imul
cmp
mov
jno
daa
xlat
push
xchg
lock
pop
sbb
sbb
sub
or
jbe
mov
add
dec
lock
inc
cwtl
sbb
sbb
mov
inc
aam
inc
xorb
or
mov
rcrb
int
mov
pop
icebp
mov
xchg
js
and
bound
lods
add
repnz
push
xlat
movb
mov
or
sarl
sahf
xchg
sub
or
sub
ja,pn
jl
enter
sub
or
inc
inc
pop
mov
add
mov
add
sbb
stos
pop
and
mov
lock
popa
cld
xor
cmpsb
insl
lea
push
push
inc
int
jle
xor
dec
notl
adc
xor
test
cmpsl
xchg
fdecstp
adc
or
cmp
dec
xchg
loopne
adc
or
shll
insl
push
sub
pop
push
cmp
adc
pop
or
hlt
jns
adc
mov
or
movhps
xor
sub
pop
inc
rcrb
push
push
push
inc
xchg
lret
pop
and
enter
or
push
cmc
or
cmp
adc
and
cmc
jne
stos
xchg
add
pop
or
daa
sub
test
xor
pop
and
or
xor
rorl
cmp
fmuls
sbb
loop
sbb
call
andl
xchg
sbb
sti
mov
jne
lahf
sarb
inc
push
xchg
stos
xchg
ds
bound
push
push
jns
sbb
call
add
leave
fiaddl
pop
dec
loope
jle
mov
mov
roll
popa
or
jo
cs
daa
rorb
push
dec
or
cmc
adc
das
shrl
cmpsl
add
and
cmp
scas
dec
cmpsb
push
daa
pop
sub
push
sub
push
shrb
cmc
mov
mov
push
add
or
cwtl
jge
fadds
cmp
enter
or
adc
or
mov
and
pushw
imulb
mov
push
sbb
movb
and
jmp
movsl
add
sarb
xor
call
lods
push
push
ret
les
andb
sub
mov
add
xor
cwtl
fadds
mov
aam
es
cld
jle
ljmp
inc
push
mov
mov
test
cmpsl
inc
cwtl
xor
out
mov
enter
orl
in
lds
les
add
cmpsl
mov
jo
xlat
mov
enter
fcomps
rcll
pop
into
aam
adc
add
and
cld
and
inc
push
popa
ljmp
dec
push
mov
or
and
xchg
jnp
sub
les
or
lret
adc
add
fistpl
call
pop
rolb
mov
push
adc
icebp
adc
pop
inc
jge
sbb
hlt
add
sarb
sub
pop
adc
add
sub
xor
mov
adc
pop
cmp
sbb
adcb
adc
push
pop
insb
cmp
rolb
hlt
adc
lods
jo
or
xchg
push
lret
adc
rclb
pop
mov
mov
dec
pop
mov
ss
adc
outsb
adc
data16
outsb
jb
test
scas
mov
shll
test
adc
push
jo
inc
adc
or
mov
imul
pop
enter
adc
aas
mov
xlat
mov
shr
bound
cmp
pop
pushf
xchg
adc
dec
jne
jb
dec
sbb
add
pop
enter
mov
inc
jle
push
adc
push
add
pop
or
popa
pop
inc
cmp
xor
clc
test
push
pop
or
and
push
add
push
mov
add
ljmp
idiv
filds
adc
push
push
sbb
cmp
add
shll
mov
pop
adc
negb
test
jns
xor
bts
inc
sbb
lret
and
out
mov
inc
push
pop
add
sbbl
cltd
dec
xor
lock
mov
dec
je
push
mov
lock
ds
or
adc
mov
or
imul
push
add
adc
cmp
and
sbb
push
jp
push
mov
je
into
mov
mov
adcb
xor
push
xchg
mov
orb
jo
popa
mov
les
cltd
dec
mov
pusha
push
pop
mov
sub
xchg
jns
addb
sub
dec
mov
lret
outsb
xchg
or
jp
xchg
pop
js
ret
jb
sahf
sbb
mov
mov
pop
out
pop
push
xor
popa
push
stos
push
call
dec
adc
test
mov
mov
int
jp
push
mov
test
imul
loopne
ret
sub
pop
enter
mov
les
lods
loope
adc
imul
add
push
mov
or
ljmp
mov
xor
or
test
cmp
push
loop
add
rorb
mov
push
mov
fisubl
adc
adc
cmp
pop
push
loope
ret
adc
add
icebp
iret
and
cmp
pop
xor
push
jb
fisubrs
mov
hlt
inc
push
cmp
mov
push
rol
mov
loopne
in
mov
adc
call
movl
stos
lret
sub
inc
or
icebp
in
fldcw
and
adc
adc
test
aam
in
mov
xorl
jp
or
and
sbb
add
leave
int3
ss
nop
pop
popa
pushf
repnz
sti
xor
insl
dec
out
es
mov
push
subl
mov
add
sbb
ljmp
push
jbe
inc
mov
or
and
lods
jnp
sbb
adc
mov
push
loop
arpl
inc
mov
sbb
ret
dec
mov
push
sbb
and
xor
or
sbb
mull
into
and
ror
inc
mov
cmp
pushf
mov
sub
xchg
adc
add
sbb
outsb
add
pop
daa
mov
or
test
jno
mov
lret
xchg
in
loop
orl
add
or
int3
xchg
sub
aad
inc
fdivs
ret
mov
xor
cmp
push
xchg
push
xor
sbb
cmp
sbb
push
fsubrl
add
and
adc
inc
xor
jo
xchg
adc
xchg
xchg
push
jle
repz
fiaddl
sahf
lds
cmp
stos
xor
push
sub
inc
inc
inc
xchg
add
lds
ja
adc
jo
adc
mov
sbb
cli
mov
xor
inc
xor
cmp
pop
xchg
or
and
imul
int
xchg
shrl
ret
rclb
addr16
aas
test
or
sub
inc
inc
scas
jle
mov
or
mov
movsb
out
inc
popl
loope
add
add
inc
sbb
int3
xchg
jo
or
mov
inc
push
mov
mov
aam
push
push
push
lea
or
out
add
cmp
loop
sbb
dec
mov
push
push
pop
stos
sysret
inc
cwtl
sahf
ficompl
or
mov
mov
mov
push
iret
inc
loope
add
stc
adc
test
lret
jne
shlb
xor
stos
adc
inc
pushf
and
inc
add
test
push
cwtl
mov
pop
push
lcall
mov
adc
and
push
ss
sbb
mov
cmp
adc
add
push
dec
aam
xchg
push
cmp
ret
and
add
cmp
lods
daa
rcl
stos
mov
stos
mov
ljmp
jo
and
cs
addb
andb
add
clc
or
testb
push
test
dec
push
fs
pop
mov
sub
add
pop
mov
les
loope
rcl
push
xchg
add
add
mov
adcb
je
add
push
out
or
push
cmpsb
cmp
jmp
adc
sbb
jno
leave
pusha
or
movsl
cli
std
sbb
and
add
mov
adc
push
imul
and
or
mov
sbb
into
jo
or
xor
xchg
mov
pop
sbb
cltd
mov
push
push
sub
stos
lret
adc
adc
sbb
push
pop
sub
inc
mov
adc
adc
loop
xor
bswap
and
or
add
mov
push
call
jo
adc
sbb
mov
js
out
pushf
pushf
lods
xor
sbb
mov
ds
daa
into
das
cmp
push
sbb
shrb
test
ljmp
sub
and
mov
pop
stos
mulb
lahf
enter
bound
sub
push
je
xchg
sahf
mov
inc
xchg
stc
add
test
add
xor
mov
push
scas
mov
inc
addr16
mov
shll
int3
mov
divb
add
aam
enter
inc
xchg
mov
push
ret
neg
mov
shlb
cmp
pop
cmp
daa
pop
aad
push
mov
fcompl
subb
leave
inc
dec
xchg
mov
and
adcb
hlt
mov
mov
xchg
jnp
and
ret
jb
inc
pavgw
sub
lock
gs
mov
inc
les
aas
or
test
enter
jmp
sbb
push
push
fwait
sarl
inc
es
out
mov
test
add
jecxz
or
mov
or
push
jb
mov
mov
ljmp
xchg
and
aad
or
sub
cmp
stos
call
loopne
sbb
sarl
loope
pop
push
mov
and
in
orb
mov
adc
xor
mov
mov
insb
stos
xor
pop
mov
cltd
into
daa
and
dec
push
popf
or
insl
mov
mov
in
jne
add
addr16
mov
and
mov
mov
jl
or
push
inc
xchg
or
push
insb
inc
subl
jb
call
add
inc
jo
mov
mov
aad
add
push
push
pop
adc
push
mov
mov
push
mov
insb
insb
pop
mov
jg
mov
out
adc
and
mov
add
or
mov
bound
or
sub
rolb
into
adc
or
test
mov
xchg
push
add
adc
outsb
sbb
bnd
icebp
push
adc
cmp
adc
sbb
test
jmp
sbb
inc
mov
mov
jl
loope
xlat
adc
sbb
sub
es
leave
and
mov
test
rorb
les
push
aam
cmpsb
jmp
out
push
sub
rol
push
dec
cwtl
lcall
mov
call
xorb
inc
cmpsb
add
int
sbb
sub
cmp
cltd
call
adc
inc
mov
xor
add
jle
sub
nop
xchg
sarb
xchg
loop
in
in
jp
push
add
or
idivb
sub
scas
mov
inc
sldt
mulb
out
or
andl
test
ficoml
adc
push
mov
push
mov
mov
into
mov
adc
rclb
jmp
push
mov
cld
repnz
inc
je
add
dec
lret
pusha
inc
adc
cltd
stos
xchg
xlat
lret
push
add
ret
out
test
sbb
add
cli
cwtl
ljmp
bound
ss
mov
clc
inc
shll
pop
add
inc
seta
push
sbb
aam
dec
mov
dec
pusha
call
scas
mov
lock
xchg
sub
in
adc
stos
and
add
mov
rorb
dec
mov
cmp
frstor
mov
inc
stc
sahf
pop
xor
push
mov
rclb
leave
call
add
add
loopne
xchg
inc
or
and
sahf
adc
xor
mov
or
and
adc
movl
pusha
add
jbe
jp
lcall
push
or
int
cmp
rclb
mov
cmc
add
repnz
cmp
jecxz
insb
lock
xor
inc
cmp
arpl
or
pop
mul
and
add
pop
mulb
jae
xor
in
pop
mov
pop
pop
rclb
jge
sbb
cmp
sbb
shlb
and
and
cmpb
push
xor
scas
addb
pop
cmp
mov
mov
cwtl
push
enter
out
fbstp
mov
adc
call
sbb
xorl
push
inc
add
push
sbb
hlt
add
xor
and
jo
jns
lahf
into
les
cmpsl
pop
arpl
or
adc
pop
add
push
add
mov
adc
cmp
dec
mov
xchg
rolb
and
mov
push
or
sub
lods
ljmp
adc
loopne
jne
movsl
lret
add
daa
pop
sub
in
add
pop
xor
aad
adc
xchg
mov
sub
mov
test
rol
ret
pusha
mov
inc
fcomi
add
adc
scas
pop
test
jecxz
push
movsb
push
bound
movsl
xchg
cmp
inc
add
pop
cwtl
push
ret
inc
lea
enter
loopne
push
cmp
inc
inc
mov
outsl
stos
adc
lods
dec
rol
pop
and
sub
cmp
xor
nop
mov
inc
push
test
mov
fidivl
mov
inc
and
pop
js
inc
jae
cmp
or
es
push
mov
mov
cmp
inc
xchg
cs
xor
push
imul
xor
in
or
popf
push
les
xor
rcrb
aam
mov
adc
into
add
inc
mov
xchg
enter
or
rorb
lock
xchg
js
mov
loopne
pop
sub
mov
or
pop
cmpsb
ret
inc
scas
mov
rclb
and
je
mov
sub
pop
cld
add
jo
cmp
xor
into
in
or
and
int
adc
ljmp
cmpsl
rolb
cli
movsl
jo
inc
cmp
ret
mov
vunpcklps
pop
push
adc
adc
mov
cmpsl
into
orb
into
repnz
inc
sbb
stos
movsl
loop
mov
movsl
mov
adc
ret
fcmovnb
push
lds
pop
in
pop
cmp
test
movsl
mov
je
mov
mov
andb
bound
xorb
mov
psllw
inc
mov
insl
jno
add
test
lret
push
jecxz
bound
and
addl
adcl
sahf
adc
adc
test
or
loope
cmp
push
rolb
sub
push
or
add
cli
test
andl
add
mov
sahf
pop
sub
push
mull
loopne
shr
sbb
xchg
pusha
mov
mov
jmp
adc
inc
xchg
lret
sbb
adc
je
pop
push
adcl
and
lods
ret
adc
stos
dec
sub
xchg
inc
mov
roll
add
push
pop
inc
mov
call
add
mov
test
adc
or
int3
leave
inc
push
out
xlat
leave
mov
mov
inc
push
push
rclb
xor
loopne
mov
xchg
or
ljmp
pusha
add
push
push
ficomps
jb
cmpsl
fisubrl
sbb
neg
jne
shrl
les
jl
ret
into
xor
adc
sbb
or
pop
pop
rorl
dec
add
xor
push
jle,pt
lds
dec
adc
jp
push
rclb
mov
push
daa
mov
mov
push
mov
xlat
in
push
les
cld
dec
push
sub
inc
pop
and
leave
cmp
insl
adc
loopne
or
add
lret
add
inc
mov
cmpsl
popa
push
push
ret
sbb
xchg
mov
outsb
jno
push
mov
in
or
stos
pop
mov
inc
sub
test
cmp
sbb
cmpsb
inc
insl
or
push
mov
xchg
sbb
add
sbb
sub
xor
popa
sub
sub
or
notl
sbb
adc
dec
sub
and
xor
das
push
mov
orl
push
shr
jmp
gs
xor
mov
pusha
std
jo
or
jle
inc
cmpsb
push
add
mov
sub
mov
add
les
mov
lods
fsubs
add
cld
sub
loop
ret
testb
sub
adc
sub
das
roll
mov
out
or
lods
mov
xchg
rolb
adc
pusha
mov
pushf
or
arpl
shrb
adc
pop
adc
adc
stos
pusha
int
inc
roll
rol
and
in
inc
cmp
mov
stos
test
clc
adc
sbb
add
popa
cwtl
adc
inc
scas
rcll
adc
rolb
fiaddl
mov
add
xor
stos
push
or
add
rcll
xchg
fs
mov
or
enter
sbb
jo
sbb
lret
inc
add
pop
mov
pop
push
lods
ret
lds
aad
lods
or
pop
xchg
sub
and
mov
mov
shr
inc
or
leave
aam
push
imul
sub
xlat
xor
dec
leave
mov
lds
inc
add
into
mov
hlt
dec
pop
push
mov
mov
xlat
push
rclb
ret
in
mov
xchg
and
add
cli
mov
pushf
or
inc
cmp
push
adc
xchg
icebp
roll
pop
stos
seta
ret
push
mov
mov
loope
into
or
push
xchg
cli
or
lea
xchg
and
inc
sub
das
pop
sub
pop
inc
jbe
inc
fcmovnb
shrl
or
loopne
fwait
xchg
aad
fs
or
xor
jb
sarb
and
rcll
or
push
mov
xor
pop
add
sbb
add
xchg
adc
pop
mov
xchg
add
xchg
loop
sub
into
mov
loope
inc
xchg
push
ret
cmp
add
rorb
xchg
leave
or
add
sbb
mov
bound
mov
in
sub
fstpt
mov
repz
inc
movsl
mov
and
scas
aam
ficoml
mov
mov
movsb
lock
lods
inc
cmp
mov
sbb
add
popf
sbb
fsubrs
dec
add
push
lahf
loop
je
out
pop
mov
add
sub
mov
add
js
xchg
xor
pop
scas
mov
push
rorl
orb
inc
popf
pop
call
adc
scas
add
dec
dec
aad
test
adc
mov
addb
fldenv
xchg
dec
or
xchg
add
inc
and
das
andb
rolb
add
mov
outsl
cli
mov
cmpl
cmp
incl
or
push
jo
mov
adc
bound
lcall
cmpsl
push
mov
movsb
or
les
jno
pushf
addb
and
adc
jno
bound
mov
mov
stos
cmpsb
push
jbe
adc
cmp
or
adcl
or
adc
movsb
cmpsb
push
xor
add
sti
pushl
inc
insb
fs
or
ret
lahf
ret
popa
sub
xchg
scas
add
sbb
sbb
dec
inc
adc
enter
sbb
lods
and
lds
rolb
data16
movsb
adc
pop
xor
inc
pop
sbbl
sarl
pop
lret
pop
in
cmp
pop
cld
adc
shrb
pusha
inc
dec
loopne
xor
ljmp
mov
and
dec
add
dec
push
loope
xchg
and
cwtl
cmc
pop
mov
sub
push
sub
mov
orb
sbb
cs
add
or
dec
inc
rcrl
inc
adc
pop
fs
or
je
sbb
cwtl
or
arpl
adc
cld
cmp
and
jo
lahf
pop
adc
ret
lods
add
push
add
movsb
lock
je
adc
or
subb
adc
jl
sbb
dec
clc
push
and
or
push
adc
push
xchg
insl
jle
and
dec
sbb
mov
in
sti
aam
cwtl
or
pop
fs
sbb
mov
adc
cwtl
addb
mov
xchg
mov
cltd
or
sbb
test
mull
adcb
inc
das
pop
adc
mov
lret
or
adc
mov
sub
sub
add
subb
cmp
sub
sbb
ret
lock
sbb
imul
enter
push
inc
add
add
mov
mov
and
scas
seta
mov
xor
xorb
or
lock
inc
or
fcmovu
add
push
add
ja
bound
enter
pop
sahf
mov
adc
pusha
sbb
dec
aad
push
sbb
ffreep
and
call
mov
push
adc
xor
loopne
rorb
cs
push
push
push
adc
into
pop
xlat
dec
sar
add
lock
sbb
lcall
add
stos
dec
add
sub
lock
lock
imull
scas
addb
ds
call
dec
sub
mov
leave
sbb
dec
xchg
dec
sub
and
mov
mov
xchg
aas
stc
mov
inc
sub
rcrb
inc
inc
or
xor
mov
clc
dec
stos
std
cld
cli
adc
sub
lock
loopne
cmp
movsb
or
mov
sbbb
or
jg
sbb
pop
shll
pop
push
push
push
xchg
inc
cmp
int
mov
pop
loopne
jl
cmp
mov
lcall
fiadds
bound
or
xor
xor
je
sbb
pop
fwait
lcall
adc
sub
jecxz
or
test
test
test
shr
adc
inc
add
sbb
test
and
push
jo
aam
pop
subb
and
jo
xor
sub
sub
lods
add
cli
xor
and
shrb
jb
loopne
or
push
lret
stos
lret
push
mov
adc
inc
arpl
shrl
insl
in
mov
add
mov
adc
dec
sbb
add
call
or
movsb
fnstsw
stc
pop
scas
fxch
loope
add
out
clc
sub
js
jmp
pop
dec
aam
sbb
les
adc
add
adc
xor
jb
dec
lock
movsb
gs
sub
add
repz
addb
mov
bnd
inc
cmpsb
adc
adc
adc
test
mov
and
gs
sub
lock
shlb
scas
adc
push
or
lods
sub
cltd
mov
es
xchg
rclb
xor
test
sbb
sub
sbb
loop
inc
or
pop
xor
adc
fmulp
xor
sub
je
sbb
test
sub
push
mov
faddl
insb
pusha
rcll
xchg
jecxz
call
int
icebp
inc
mov
movsb
orb
outsl
xor
cmc
dec
or
ret
sbb
push
in
pop
dec
xor
stc
js
mov
add
hlt
sbb
dec
mov
or
addb
mov
mov
add
push
stos
cmp
cwtl
xchg
popa
xchg
lea
cmp
js
loopne
dec
and
dec
mov
push
and
sbb
adc
mov
enter
adc
add
paddq
test
ret
pop
xor
push
push
mov
loopne
pop
xor
mov
push
mov
imul
addr16
adc
packuswb
inc
scas
adc
rolb
in
xchg
push
mov
inc
push
imul
mov
orl
add
inc
mov
mov
or
add
push
adc
addb
or
jno
mov
add
mov
ret
sub
test
push
and
push
sub
dec
adc
mov
loop
mov
rolb
adc
leave
les
xor
pusha
add
shlb
call
mov
pop
and
rorl
add
mov
mov
into
xor
mov
pop
sarl
mov
lds
sbb
or
add
cmp
push
push
aam
mov
shlb
neg
add
mov
or
or
adc
js
sub
incl
sbbl
jp
pop
adc
sub
mov
cld
push
jp
and
and
inc
pop
movsb
pop
icebp
pop
xchg
cmp
lock
rclb
in
push
jo
ljmp
imul
cwtl
push
inc
in
fisttpll
xchg
mov
pop
sub
add
sub
mov
cmp
les
scas
jg
sub
ret
mov
jbe
pop
stos
dec
add
enter
repnz
jae
bound
mov
sub
addb
lods
in
scas
dec
cwtl
xor
addr16
imul
cmp
add
or
push
adc
push
push
push
aad
and
fidivl
test
mov
icebp
push
or
xchg
mov
or
push
jbe
xchg
inc
sub
cli
daa
roll
adc
push
adc
adc
fcomip
add
inc
outsb
and
icebp
test
pusha
sbb
jle
pop
or
or
add
sub
adc
ss
mov
rcrl
or
fistl
loopne
mov
mov
das
roll
and
xchg
or
adc
adc
sub
adc
pop
cwtl
stc
adc
mov
or
mov
pop
pop
xor
xlat
int
adc
inc
inc
subl
adc
push
pop
add
jle
adc
mov
enter
mov
add
and
push
push
and
xchg
or
xchg
or
lcall
adc
xor
pop
and
cs
push
mov
cwtl
into
xor
and
mov
lock
les
andb
dec
lock
adc
mov
mov
xchg
or
pop
movsl
pop
add
outsb
adc
in
cmp
test
inc
in
xchg
negl
or
orb
insb
shrl
add
ljmp
and
shlb
sbb
push
adc
push
je
push
jmp
rorb
imulb
clc
cmpsl
push
inc
cmp
cmpsb
mov
inc
adc
push
das
adc
pop
cmp
push
jmp
mov
insb
cmp
push
push
dec
nop
sbb
lret
add
lret
push
push
nop
mov
mov
inc
pop
ret
mov
xor
add
es
mov
lret
cmp
cmc
push
adcl
xor
add
xchg
dec
arpl
push
lds
pop
sbb
add
adc
cmp
adc
add
cltd
mov
push
mov
add
jge
movsl
xor
mov
sub
mov
xchg
or
push
outsb
pushf
rcl
js
inc
xchg
jg
sti
nop
cmp
adc
jo
sub
mov
pusha
dec
or
lret
test
jl
dec
das
pop
adc
ljmp
icebp
mov
xor
repz
arpl
jmp
push
out
or
mov
mov
cmp
add
xor
xor
sbb
push
inc
sahf
in
fistl
mov
ret
push
outsb
cld
push
cld
mov
mov
mov
in
pop
push
push
push
mov
call
rorb
pushf
or
jbe
scas
and
or
imul
shll
nop
std
add
jg
push
in
test
jne
scas
or
xor
adc
adc
xor
mov
or
out
fucomi
pop
sbb
pop
clc
movlps
inc
orb
mov
add
xor
rorb
aaa
clc
mov
add
jb
pushf
testb
je
mov
outsl
mov
push
pop
sbb
and
and
movups
and
ds
mov
or
push
push
fstp
out
ja
push
push
pop
pop
ret
mov
jne
push
jo
cmp
clc
out
add
or
and
sbb
push
fisttps
inc
das
and
and
inc
and
mov
add
cmp
testl
mov
les
ret
xchg
add
fwait
nop
addr16
addb
arpl
fucomip
es
cmp
jne
sbb
push
or
sub
mov
mov
enter
fnstsw
les
mov
and
lea
sbb
adc
repz
xor
cltd
sbb
enter
adc
sbb
fistpl
pop
sbb
or
pop
ret
subl
orb
sbb
dec
mov
cs
mov
enter
movb
push
jo
push
or
jbe
faddl
sub
nop
pop
je
sbb
outsb
mov
or
fldl
sti
add
sbb
sub
add
loop
dec
push
int
mov
mov
out
and
jne
jecxz
scas
enter
xchg
push
push
jge
lea
or
add
cmp
and
sbb
sarl
jno
pop
mov
pop
cmp
movl
cmp
xchg
orl
bnd
cmp
lea
push
cmp
xchg
pop
outsl
das
cld
rorl
iret
rcrl
js
pop
jmp
mov
push
push
lods
cld
mov
or
jmp
adc
xor
leave
mov
push
mov
aam
cmp
push
xchg
je
lea
jg
adc
add
cmp
jne
ret
imul
or
xor
movsl
jmp
call
std
call
cmp
cmp
jne
mov
inc
pop
je
test
imul
outsl
fcmovnu
mov
jmp
cmpb
or
jbe
inc
or
shlb
and
xor
add
jmp
cmc
jle
xor
cmp
ud0
movsl
mov
ret
je
cmp
je
inc
out
and
pop
lea
add
add
add
ss
fists
mov
lods
sbb
or
sti
arpl
cmp
cmp
cmp
aas
dec
das
pop
cmp
push
xor
ret
das
push
cs
in
fistpl
pop
bound
std
aaa
jne
pop
incl
push
sub
movl
mov
or
mov
ja
cld
fcom
xor
clc
mov
sbb
clc
mov
outsl
mov
clc
push
add
push
push
push
lahf
adc
pop
sbb
mov
mov
es
mov
fisttpll
mov
cld
daa
adc
pop
movsb
fistpl
jecxz
dec
sbb
js
imul
adc
jge
movl
mov
sbb
aaa
cld
or
mov
fwait
inc
mov
inc
cmp
fcmovne
das
mov
and
pop
roll
enter
add
mov
inc
inc
or
in
idivb
jmp
or
andb
inc
inc
sbb
inc
push
and
add
inc
subl
mov
inc
and
or
jne
dec
sbb
jne
dec
mov
jmpw
fistpl
add
lcall
mov
daa
add
pop
enter
fidivrl
mov
incl
rcl
test
aaa
sbb
pop
jne
inc
inc
jmp
xchg
sub
ret
add
pop
sti
or
cmpb
jecxz
jmp
jecxz
or
in
outsl
das
rcrl
es
ret
shr
mov
dec
test
push
inc
mov
jne
sbbb
cmpl
or
pop
push
pop
je
sub
loop
add
test
pop
sbb
inc
inc
fdivs
inc
je
pusha
xor
push
movl
mov
mov
insl
pop
sti
pop
ret
dec
and
or
xor
rcr
sub
test
add
sub
lahf
pop
test
dec
jnp
aam
sub
data16
inc
inc
cmp
pop
ljmp
loop
add
add
aas
daa
ret
pusha
divb
mov
sbb
push
insl
fmull
and
or
clc
mov
cli
pop
mov
inc
and
call
xor
shr
dec
xor
je
sbb
push
jne
xor
shll
xchg
jo
and
pop
or
lods
clc
cmp
ret
jmp
jne
movsl
test
je
pusha
mov
je
inc
cmp
add
dec
push
into
stos
rorl
sti
jmp
mov
ss
lds
cmp
insl
mov
cwtl
dec
in
dec
push
jae
cmp
xor
ss
cli
xor
pop
loopne
loopne
lea
sub
jae
outsl
add
mov
data16
movb
mov
pop
or
and
inc
jb
scas
cmp
in
or
cmp
mov
add
jnp
popa
ficoml
jl
pop
addr16
mov
lods
in
push
cmp
adcl
mov
pusha
or
pop
push
inc
mov
and
roll
add
jl
jmp
mov
adc
add
xor
lock
loope
jno
mov
test
lcall
push
ljmp
shll
pop
or
shll
add
or
fwait
inc
add
inc
cmp
jl
pusha
pop
sub
cmp
decl
ss
das
add
push
enter
jmp
ret
dec
neg
sbb
cmc
or
jp
push
jo
xor
or
ret
ds
orb
sub
or
jne
or
add
imul
bound
xchg
dec
ret
pop
push
sbb
pop
test
sbb
inc
xchg
jbe
xor
mov
je
imulb
inc
cmp
sub
sbb
lcall
pop
adc
ficoml
pop
pop
pushl
push
pop
fstp
sbb
popf
add
lods
popf
mov
movsb
xor
adc
data16
rol
mov
pop
jb
inc
and
insb
es
push
pop
adc
repnz
outsl
pop
jge
add
sbb
pushl
push
movb
pop
enter
pop
mov
cld
lcall
xor
cmp
icebp
jo
vandnps
aaa
jl
sbb
pop
cmp
ss
and
inc
add
mov
dec
je
or
cwtl
sti
mov
adc
push
push
inc
inc
fs
pop
movsb
pushf
add
fimull
mov
mov
hlt
mov
sub
jbe
mov
dec
test
xchg
mov
jne
push
mov
idiv
push
or
ret
popl
sti
fistpl
jns
push
pop
pusha
push
adcl
push
test
jecxz
push
mov
or
pop
pusha
jnp
mov
inc
lods
imul
ret
int3
pop
fimuls
push
inc
xor
pop
inc
xor
mov
or
push
insb
pop
xchg
testl
shlb
ds
icebp
pop
mov
jae
or
popa
xchg
jbe
imul
mov
je
push
push
lea
test
pop
pop
inc
insl
pop
testl
and
add
fdivl
sbb
ss
pop
mov
mov
mov
push
or
or
fidivs
xor
jmp
mov
jmp
pop
test
lods
xlat
aas
pop
push
xchg
mov
cmp
push
add
push
and
cmp
and
roll
xor
subb
jmp
insb
nop
cli
out
pop
adc
into
sub
xor
mov
rolb
insl
insl
or
test
pop
jp
test
icebp
jb
shl
cmp
xchg
call
dec
or
jne
les
xlat
icebp
sti
test
xchg
sarl
xor
pop
jno
inc
outsl
push
inc
in
add
push
outsl
inc
call
ds
pop
gs
sub
inc
sbb
clc
or
push
loopne
dec
outsb
push
xchg
cs
pusha
inc
xchg
lea
lods
sbb
addr16
mov
sbb
adc
and
cwtl
sub
push
push
mov
outsb
inc
dec
imul
movsl
cmp
cmp
gs
enter
je
push
in
call
pop
fadd
stos
or
int3
lods
push
fisttpl
pop
jb
sub
test
xor
cmp
push
push
clc
ljmp
pop
lods
cmpl
push
add
lds
outsb
sbb
test
add
ret
insb
mov
arpl
test
sbb
adc
mov
sbb
ret
adc
inc
jne
cltd
outsl
push
jo
hlt
testb
add
adc
and
add
add
sbb
xchg
insl
adc
sub
sub
sbb
add
sbb
adc
sti
fmull
mov
cld
pop
push
jo
sbb
mov
push
pusha
push
call
scas
mov
cmp
popa
and
cmpl
scas
and
mov
call
pop
les
cmpsl
cmpb
push
call
mov
ss
jbe
add
hlt
mov
decl
push
xchg
shlb
out
out
mov
dec
lea
add
lea
xchg
addb
mov
mov
out
movsl
pop
insl
add
xchg
ja
adc
mov
out
push
adc
inc
inc
cmpb
aam
ret
or
sbb
xlat
jb
fs
sti
hlt
or
push
lods
lods
push
mov
out
push
das
push
je
push
mov
shll
call
jno
gs
lahf
or
xchg
jb
push
cmp
mov
outsb
das
dec
push
jmp
or
add
dec
stos
add
push
jo
inc
xchg
dec
jge
xchg
insb
sbb
sbb
or
add
cmp
cmp
test
call
jne
sub
nop
cld
mov
les
push
orb
and
push
mov
jbe
pop
cmp
add
add
cmp
or
push
jno
bound
pusha
rcrb
lods
in
sbb
ljmp
icebp
xchg
xchg
lea
clc
cwtl
adc
push
push
aas
sarb
loopne
das
cwtl
decl
inc
repnz
push
fnstenv
rorl
add
add
adc
ja
lea
inc
mov
shr
test
xorl
rep
inc
inc
mov
xor
rcrb
push
in
cli
lds
xlat
mov
cmp
mov
and
sbb
push
push
push
xor
das
cmp
lods
fs
dec
push
daa
cld
ja
pop
jb
lret
jb
mov
test
sti
sbb
mov
add
mov
in
inc
rclb
add
sbb
mov
jbe
test
add
inc
jb
add
divb
enter
mov
in
insl
pop
sbb
ja
and
lods
shr
and
dec
dec
mov
add
push
inc
pop
pop
mov
mov
ret
pop
sbb
rolb
mov
push
jge
mov
adc
or
rcrl
sbb
fimull
fldt
or
pop
push
imul
int3
add
stos
inc
aaa
pop
jmp
lea
ljmp
test
inc
inc
std
lahf
xor
icebp
mov
mov
sbb
mov
cli
lock
ret
in
add
jle
cld
and
lods
push
mov
add
int
pop
jmp
add
jmp
xor
jmp
cld
pusha
or
sbb
rcr
sub
mov
inc
out
jmp
mov
or
bound
jnp
dec
push
cwtl
imul
xor
stc
daa
test
sbb
pop
push
cmp
mov
jmp
mov
mov
adc
sub
jo
aad
jl
inc
sbb
adc
inc
jne
lret
pusha
test
adc
rcr
pop
ret
adc
and
sbb
jb
mov
rcr
xor
dec
add
and
jge
popa
test
adc
int3
outsl
outsb
test
js
int
inc
jae
and
mov
ret
lds
rol
mov
cld
jle
test
ficompl
pop
dec
lret
mov
jbe
fistl
in
jb
mov
and
push
jb
repz
xchg
ret
ja
or
fimull
iret
ss
mov
test
push
clc
nop
pop
jl
adc
jne
adc
cmp
and
mov
mov
inc
xor
mov
add
xor
sub
dec
add
mov
sub
cmp
inc
and
je
aaa
nop
mov
filds
int3
pop
fbstp
movsb
pushf
mov
shll
in
call
xor
lock
hlt
clc
clc
stos
adc
xlat
out
adc
sahf
repnz
lock
mov
add
test
fwait
or
popf
or
adc
roll
in
ret
sub
cmp
jg
xchg
arpl
dec
or
and
neg
jb
out
or
xor
stc
xlat
cmp
mov
adcb
insb
dec
mov
outsl
add
pusha
das
and
push
mov
pop
enter
mov
sub
daa
and
push
ss
fldcw
test
outsb
popa
pop
push
xor
cmp
mov
push
pop
fs
cmpsb
imul
imul
cmpsb
imul
mov
add
or
cmpps
ret
mov
inc
pop
adc
or
outsl
inc
lods
mov
ja
ljmp
adc
add
lods
push
cld
daa
push
xlat
push
mov
jne
push
or
pop
or
js
push
jle
fstpt
sbb
push
paddb
xchg
sbb
or
jmp
pop
mov
pop
adc
push
les
insb
mov
push
cmp
pop
sub
mov
adc
mov
mov
xlat
inc
or
push
pop
add
cmp
and
rorb
imul
sub
add
fbstp
pop
mov
cld
push
shr
outsl
fadd
outsl
jns
cld
imul
jge
mov
inc
das
sub
inc
dec
dec
or
idivb
add
clc
jne
rcrl
or
iret
jbe
insl
aam
adc
dec
adc
add
xchg
jae
mov
shr
lea
xlat
and
decb
sub
fidivs
cmp
and
loopne
sub
and
jns
push
aaa
arpl
xchg
adc
add
add
out
mov
or
sar
icebp
aas
jnp
je
fildl
xchg
in
mov
mov
xor
clc
dec
pop
cmp
cmpsb
jbe
repz
icebp
out
sbb
inc
ds
jbe
cli
mov
je
cs
push
mov
enter
shlb
push
adc
xchg
and
push
mov
push
imul
or
xchg
stos
add
or
xor
nop
outsl
movsl
mov
lock
or
lcall
or
sub
out
jg
ja
push
paddd
mov
jae
scas
cmovbe
mov
sti
mov
shr
jbe
sbb
sbb
sub
pop
in
arpl
lea
sbb
cmp
or
mov
push
jmp
pop
adc
ds
imul
fisttps
mov
loope
add
push
xorb
add
push
call
pop
xor
cmp
or
cmp
jnp
roll
paddd
or
sbb
je
xchg
jns
adc
lods
fnsave
js
jne
sub
jo
pop
adc
push
push
pop
or
stc
hlt
stos
mov
push
loope
add
xchg
mov
sub
lea
fs
rclb
inc
xor
incl
nop
cmp
repz
cli
sbb
jmp
mov
fwait
adc
out
data16
in
das
push
shll
clc
sbb
jbe
pop
push
cld
test
sub
out
sub
mov
jmp
or
test
mov
not
call
push
or
mov
cmp
lret
jae
mov
stos
mov
sub
decb
iret
jne
clc
adc
in
pop
jne
mov
cmp
es
add
pop
and
iret
into
sub
xor
adc
jmp
es
sbb
out
push
push
stos
insl
or
sti
jnp
test
sub
inc
sub
pop
pop
mov
fsubrl
jmp
mov
mov
jbe
lock
dec
sub
adcb
push
aaa
mov
jo
push
addb
push
inc
or
mov
jne
add
into
sbb
pop
push
jge
and
or
je
mov
add
ja
mov
into
jne
pushw
fs
test
jne
jbe
jl
shl
inc
jmp
mov
push
stc
inc
or
jg
aam
xorl
cwtl
aas
jle
pop
cmp
fsubrl
fwait
or
and
insl
and
adc
ja
pop
pushf
shl
in
and
mov
decb
jne
ss
mov
or
xor
sub
sbb
sbb
mov
sbbb
insb
jb
sarb
add
mov
xchg
scas
jp
nop
test
fcmovne
sbb
movsl
and
add
or
fsub
pop
sub
cltd
or
mov
bound
ror
mov
cmp
nop
xchg
or
jmp
sub
in
sti
or
mov
lods
push
mov
xlat
or
push
je
mov
mov
cld
mov
mov
xchg
jns
dec
shll
add
dec
mov
or
and
xlat
ljmp
pop
mov
push
cmp
ljmp
add
fbld
or
pop
jne
cwtl
push
pop
test
push
jb
sub
xchg
push
xchg
pushf
cmp
je
mov
sarb
int
or
stos
adc
xchg
mov
adc
push
lods
adc
push
mov
sbb
or
pushl
fs
in
mov
xchg
jl
and
mov
incl
pop
inc
xchg
mov
jmp
in
push
fcmovnb
dec
loopne
ret
fdivr
mov
pop
sti
xor
pusha
inc
or
fnstsw
push
sti
test
out
jns
pop
xor
mov
adc
dec
shll
sub
loopne
testb
ja
lea
dec
repnz
hlt
lea
cld
lock
int
push
out
jmp
call
outsb
mov
push
sub
xchg
jbe
add
dec
or
clc
xchg
mov
lea
or
inc
mov
push
jecxz
inc
mov
or
mov
stos
sub
cmpsb
or
mov
xor
push
mov
fsubrs
mov
inc
sub
movsb
mov
jnp
addr16
mov
popa
xor
push
adc
mov
add
dec
mov
lods
jecxz
call
cmp
add
push
adc
add
dec
ror
add
sbb
xchg
jp
push
mov
jecxz
lods
ss
imull
push
and
jno
movsl
ficoms
jne
jmp
inc
inc
inc
in
flds
jl
dec
je
adc
pop
jne
sub
sbb
je
and
test
sub
ret
pop
push
call
xchg
add
out
cmp
cli
sub
xchg
arpl
lcall
pop
xchg
fisubrs
or
lcall
and
add
mov
add
rclb
push
or
popa
mov
jne
mov
test
dec
pop
inc
inc
sbb
aas
push
in
jo
inc
push
push
or
jp
ja
push
xor
std
xchg
filds
sbb
adc
lods
cmpsb
and
hlt
sub
jo
adc
adc
or
jno
pop
pop
jmp
int
in
push
sbb
pop
xor
add
pop
pop
adc
dec
fnsave
lret
and
inc
mov
and
mov
and
inc
insl
int3
andl
or
aaa
sbb
and
mov
pushf
ss
ja
jne
cld
add
fimuls
fisubrs
stos
push
jmp
icebp
mov
in
pop
sbb
adc
push
dec
xlat
and
and
dec
in
bound
mov
ja
subb
dec
divl
inc
or
sbb
mov
ss
push
fidivl
je
int3
dec
rorb
rcrb
push
xchg
sub
ss
fs
fmull
out
pop
lods
pop
mov
fbstp
fs
mov
int
je
mov
add
jmp
mov
sbb
push
mov
mov
mov
test
push
add
or
dec
fcoml
pop
push
xchg
repz
int3
sub
adc
faddl
sbb
rcrb
es
lods
ja
inc
outsb
cld
lea
push
push
pop
push
push
movsl
mov
add
sbb
mov
push
mov
mov
pop
mov
sub
add
jbe
xor
xor
rcr
in
xchg
pop
sbb
nop
lea
sbb
add
test
loopne
je
gs
inc
or
adc
add
subl
stc
testb
loopne
seta
clc
in
inc
push
add
int3
sbb
lock
add
mov
mov
xor
int3
add
pushf
je
sbb
dec
pop
stc
rorb
sub
push
jmp
addr16
add
push
or
adc
in
test
scas
jnp
push
rep
cmp
and
mov
loop
jmp
mov
xor
movsl
push
lea
nop
pop
cmp
adc
add
or
add
add
jne
adc
test
push
lahf
shll
jl
insb
inc
adcb
fs
mov
or
lock
int3
loopne
push
inc
inc
mov
inc
enter
dec
sub
or
add
mov
ss
ss
xlat
jne
sub
jg
add
push
add
inc
shll
aaa
jne
adc
mov
adc
add
jl
or
cmp
or
adc
jmp
add
add
pop
jae
stc
les
loope
sub
push
cmp
push
xchg
enter
push
adc
hlt
inc
inc
inc
inc
lock
in
inc
inc
inc
add
add
push
gs
inc
aam
add
mov
out
cs
or
add
jb
outsb
je
insl
and
jb
push
insl
lds
lods
or
push
push
pop
nop
jmp
push
add
dec
inc
add
in
notb
push
xor
cmp
sub
std
in
bound
and
imul
push
sti
stc
data16
daa
aaa
outsb
outsl
je
add
cmpb
jae
popa
arpl
data16
outsl
ja
cmp
in
outsl
outsb
aaa
ss
and
jo
jb
jbe
fldt
in
jb
jne
xor
or
insl
or
bound
pop
xor
sub
fisubrl
gs
das
pop
push
fsub
pop
fwait
sti
ret
cmp
outsl
jo
pop
xor
subb
pcmpgtb
arpl
cmp
ret
inc
and
gs
nop
jl
and
insl
jne
lods
sbb
mov
je
mov
arpl
or
fs
cs
ret
lods
xor
insl
add
addr16
sub
popa
insl
and
ss
xor
adc
in
lea
xor
sub
push
ret
popa
jb
jne
jae
xor
outsb
outsb
subb
cmp
fs
dec
sub
pusha
cmp
push
imul
push
fdivl
xor
jb
daa
or
push
inc
push
and
push
aam
ss
mov
ret
add
mov
ja
sbb
je
popa
mov
ja
xor
jbe
push
scas
jne
adc
lods
insl
xorps
xchg
jae
addr16
outsl
xchg
sbb
js
add
and
sub
lods
jnp
cmp
or
add
pop
or
inc
divl
xchg
mov
or
cmc
mov
xor
push
nop
incb
jbe
js
jns
or
mov
adc
or
sbb
fs
lea
mov
fs
nop
fs
push
fs
xchg
xchg
jmp
add
js
or
or
or
adc
leave
mov
xchg
sbb
add
or
or
or
adc
adc
xchg
daa
dec
cwtl
adc
sbb
sbb
sbb
xchg
daa
dec
push
js
jns
jp
jbe
in
cld
sbb
or
push
loopne
nop
mov
movaps
mov
pop
push
clc
pop
add
add
leave
inc
jle
das
movsb
add
jns
and
in
movsl
sbbl
sbb
fisubl
pop
inc
and
xorl
fnsave
mov
call
mov
iret
mov
ficompl
pop
pop
fisubrl
xor
leave
in
scas
rcr
fsubp
stc
cmp
jle
add
push
jp
jne
cmp
xor
sub
dec
add
enter
test
adc
orb
add
mov
addb
pusha
shll
and
sub
push
lret
add
add
or
fistps
mov
inc
add
add
popa
jo
insb
insb
outsl
sti
mov
dec
outsl
fs
gs
popa
outsb
fs
inc
adc
popa
xor
outsb
pcmpeqd
mov
adc
insl
insl
pop
dec
imul
insb
add
inc
lods
push
push
andl
daa
add
pop
gs
mov
jb
outsb
and
outsb
push
out
cmp
jo
inc
inc
imul
pop
adc
popa
insl
imul
inc
fsubrs
add
jae
loopne
das
push
push
push
imul
dec
gs
add
jns
pop
sub
jne
insb
push
inc
push
pop
adc
ss
jne
adc
fdivrs
jns
gs
ja
jle
js
fs
insb
jae
push
popa
insb
add
test
jne
or
push
dec
cmp
inc
cmpl
out
sahf
or
sbb
pop
and
push
mov
sbb
xchg
or
cmp
loop
popa
add
and
dec
jo
mov
mov
or
arpl
fwait
xor
outsb
push
adc
insl
in
lock
lds
or
pusha
rcr
pop
dec
inc
dec
or
mov
fadds
fs
sbb
and
dec
inc
adc
mov
orb
and
inc
push
mov
inc
or
lock
negb
nopl
adc
test
add
inc
jae
arpl
je
inc
repz
add
mov
push
xor
push
xor
test
outsb
xor
rorb
insl
test
lcall
loopne
scas
rcr
or
cmp
insl
fistpl
push
jb
sbb
jno
jbe
scas
xorb
lock
imul
test
push
jne
sbb
scas
insl
mov
or
js
inc
mov
cs
pcmpeqd
jge
inc
cmp
mov
mov
and
add
inc
sti
ljmp
cmp
cmp
add
lock
add
jg
inc
inc
add
xor
adc
push
jg
add
add
inc
and
incl
xor
aaa
lock
add
cmpb
xor
add
push
jns
sbb
cmp
cld
incl
dec
dec
mov
jge
jp
xor
mov
sbb
dec
add
jno
jnp
inc
addl
add
jg
mov
fdivr
call
lock
add
lcall
xchg
addb
jne
cld
add
xor
push
jge
mov
fistpl
cmp
cmp
xor
inc
lock
mov
cmp
mov
cmp
cmp
insl
jge
cmp
aaa
mov
out
inc
mov
dec
insb
enter
in
shll
add
xor
push
add
aaa
add
jg
imul
inc
dec
inc
in
mov
ja
dec
lock
stos
mov
fistps
outsl
dec
jbe
incb
add
pop
mov
inc
cmp
mov
std
cmp
inc
mov
xor
jl
or
in
mov
test
aaa
aas
add
or
xor
idiv
mov
lret
jnp
jl
cmp
sarb
lock
test
cwtl
dec
lock
idivl
std
xorl
addl
out
add
cmp
ret
cmp
sub
push
int
lret
idivb
inc
js
insl
mov
into
inc
jb
lock
jnp
call
pop
xlat
ss
xor
dec
enter
inc
ret
dec
inc
cmp
std
outsl
outsl
mov
jnp
xchg
ss
mov
inc
xchg
sbb
cmpb
add
inc
jle
push
add
xor
fcmovu
jb
mov
test
pop
mov
es
ss
mov
lock
cli
add
inc
movsl
inc
shl
xor
pushl
inc
sti
cmp
cmp
cmp
ret
mov
cmp
push
fs
jg
xchg
lock
add
out
inc
das
fdivr
out
and
mov
dec
jb
inc
add
loop
lods
mov
mov
dec
lahf
test
or
mov
inc
dec
dec
iret
jl
lock
test
lock
scas
jmp
xchg
add
and
add
std
js
mov
inc
add
mov
fisubrs
fcmovnb
dec
mov
mov
cld
pop
loopne
pop
add
je
inc
xchg
mov
aaa
ss
xchg
inc
orl
mov
in
mov
jge
lock
add
popf
add
rolb
pop
mov
loopne
inc
xor
cmp
aas
jg
ret
mov
inc
cmp
mov
repz
fildll
outsb
lds
dec
mov
cmp
dec
out
outsl
in
cmp
push
or
xor
xor
or
or
adc
push
pop
or
or
push
push
push
test
cmovl
xor
inc
or
adc
or
incl
pop
pop
dec
inc
jecxz
xor
aas
push
adc
xor
pop
adc
and
push
xor
sbb
cmp
pop
sbb
adc
pop
inc
imul
or
outsb
adc
cmovb
or
adc
sti
and
adc
sub
xor
xor
mov
insl
mov
or
or
je
or
inc
push
in
lods
cwtl
add
push
outsl
mov
adc
or
push
movups
fistpll
inc
push
mov
cmp
ret
sbb
scas
add
sub
sbb
add
or
add
or
pop
push
sbb
insl
sti
jb
push
or
jecxz
xor
or
add
push
imul
push
adc
adc
or
fimuls
jae
jbe
inc
push
push
test
jge
adc
sbb
adc
or
or
pop
adc
sbb
or
push
sbb
fdivrp
pop
push
xor
movsb
sbb
pop
adc
and
adc
rcrb
in
ja
int3
or
cmp
add
add
lods
or
fmuls
add
adc
fildl
call
lock
add
push
inc
cs
nop
add
mov
or
add
cmp
sub
in
or
aad
push
insb
push
add
or
add
jl
adc
jnp
mull
add
nop
insb
flds
push
and
jl
push
add
js
add
enter
add
or
in
pop
test
into
shrl
xor
lock
pusha
jb,pn
enter
push
rorb
mov
add
cs
push
shlb
inc
shlb
jb
jmp
dec
or
and
xor
jae
or
stc
filds
fcoml
add
add
add
add
add
add
add
add
add
add
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
