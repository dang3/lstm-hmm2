mov
je
cmc
cmpsb
jo
dec
lods
dec
lret
push
mov
mov
sbb
lods
mov
int3
mov
shlb
push
fbstp
in
int
in
dec
push
ret
repnz
xabort
int
push
push
and
leave
cwtl
jl
mov
adc
and
and
lcall
cmc
fstl
dec
movsl
push
cltd
push
mov
fwait
hlt
pop
push
pop
mull
fisttps
and
and
jle
pushf
mov
int
or
jge
push
cwtl
jns
addr16
push
loope
movsl
dec
push
lds
stc
push
and
test
imul
jns
push
push
in
daa
fucomip
and
push
not
daa
cmp
add
imul
jle
repz
push
insb
negb
push
repz
and
mov
sub
insl
push
xor
rep
aaa
mov
shlb
or
or
mov
push
jle
push
push
cmc
push
sub
les
test
jl
ja
cmp
jge
mulb
stos
jge
mov
testl
movsb
sub
ss
add
mov
cmp
ret
scas
jg
ret
xchg
lret
repnz
cmc
xlat
push
pop
dec
les
fidivrs
pop
cmc
mov
mov
arpl
mov
cmp
adc
or
jo
mov
or
popl
cmp
rolb
test
dec
cmp
dec
aaa
enter
test
enter
test
outsb
xchg
inc
call
jnp
xchg
arpl
sahf
mov
xchg
fwait
out
cld
mov
mov
lret
pop
mov
push
mov
addr16
aas
int3
mov
mov
mov
push
push
mov
or
mov
mov
cmp
mov
jb
cmp
jb
cmp
jb
cmpw
je
cmp
jae
mov
mov
cmp
jne
pop
pop
ret
int3
push
mov
sub
andl
push
push
push
pushl
call
cmp
jb
mov
lea
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
add
cmp
mov
mov
jbe
cmp
movswl
mov
jae
mov
cmp
jae
mov
cmp
jb
mov
add
cmp
jb
mov
mov
add
mov
lea
mov
mov
mov
movzbl
mov
movzbl
sub
jne
mov
mov
mov
sub
mov
cmpb
je
incl
mov
mov
mov
movzbl
mov
movzbl
sub
je
test
jl
jle
xor
inc
test
je
mov
inc
cmp
mov
jb
mov
pop
pop
pop
leave
ret
mov
mov
add
mov
jmp
xor
jmp
push
mov
sub
push
xor
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
mov
movb
movb
movb
movb
movb
movb
mov
mov
push
push
mov
mov
mov
pop
pop
lea
mov
cmp
jb
lea
cmp
jb
lea
cmp
jb
mov
push
pushl
call
mov
lea
push
pushl
call
mov
lea
push
pushl
call
mov
mov
cmp
jbe
mov
lea
push
push
call
push
pushl
lea
push
mov
lea
call
add
xor
lea
mov
add
mov
inc
add
cmp
jl
cmpl
jbe
mov
lea
push
mov
sub
push
push
call
mov
mov
lea
push
sub
push
push
call
mov
mov
push
sub
push
push
call
mov
mov
push
sub
push
push
call
mov
mov
push
sub
push
push
call
mov
mov
push
sub
push
push
call
mov
mov
mov
push
sub
push
push
call
push
push
pushl
call
push
push
call
push
mov
push
push
call
push
pushl
push
call
mov
movzwl
push
pushl
lea
push
call
add
pushl
mov
push
push
pushl
mov
pushl
pushl
call
pop
pop
mov
pop
leave
ret
add
add
imul
in
clc
jo
scas
push
jbe
imul
sub
lea
mov
popa
repz
adc
mov
in
push
mov
hlt
lds
cmp
leave
gs
and
cmp
cmp
adc
and
in
fucomp
mov
jge
cld
xchg
cmp
add
cmp
cmp
sbb
jg
and
cmp
sub
ret
mov
cmp
cmp
ret
lods
inc
push
mov
inc
cmp
or
orl
ljmp
outsl
mov
outsb
or
push
and
ds
jle
push
or
mov
ret
scas
lcall
mov
push
xchg
enter
into
sbb
aad
xchg
repz
dec
mul
or
call
lcall
sti
outsb
xchg
scas
add
mov
inc
fmuls
push
sbb
adc
out
fsubrs
xchg
imul
push
outsb
push
push
add
xor
xchg
leave
cmp
and
fisubl
pop
xchg
daa
dec
sbb
adcb
pop
lret
xchg
test
push
fisubs
fneni(8087
outsb
fwait
bound
je
pop
cmp
dec
fdivrl
addl
add
add
mov
dec
add
pushf
push
add
ret
add
gs
add
add
pop
test
add
ret
add
add
in
ja
enter
lret
cli
dec
out
and
and
es
and
jg
clc
out
adcl
int3
xor
and
cmpsb
shlb
push
aas
xor
push
mov
stos
xchg
mov
sub
outsl
shll
jb
mov
jb
mov
clc
mov
fistl
dec
popf
xlat
movsl
ljmp
mov
lret
dec
out
jmp
out
fadds
aam
call
lret
mov
out
shl
inc
push
mov
nop
mov
sbb
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
scas
in
mov
push
repnz
pop
rorb
jno
sub
jmp
sbb
inc
cmp
or
mov
fwait
jno
pop
pushf
add
rcrb
xor
inc
push
cmc
inc
out
iret
xchg
xor
jb
fnsave
mov
jb
mov
jb
mov
push
inc
outsb
imul
insb
xchg
inc
dec
and
nop
loop
mov
add
das
push
push
cmp
test
sub
push
ficoml
cmpsb
filds
sub
ds
int
lahf
ffreep
sub
out
dec
fdivrl
cmp
push
dec
test
sarb
bound
push
into
or
rcrb
dec
ret
mov
add
mov
jae
roll
int
cmpsb
dec
mov
xchg
outsl
shll
lods
dec
xchg
jno
and
pushl
mov
jb
mov
jb
mov
and
cmp
dec
das
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
les
lea
pop
push
jb
mov
jb
mov
jb
mov
mov
mov
aas
test
sub
ds
and
mov
jo
pop
nop
mov
popf
in
and
mov
aad
jbe
lcall
pusha
adc
jb
mov
mov
ds
loop
jl
daa
or
icebp
mov
loop
arpl
sbb
pop
jne
adc
jb
mov
setns
jmp
inc
mov
pop
ljmp
imul
mov
outsl
shll
in
in
jmp
sbb
fildl
jecxz
xlat
fcomi
jnp
push
push
lahf
cli
xchg
out
or
mov
jno
fwait
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
arpl
xchg
dec
cmp
pop
enter
mov
mov
xor
add
out
jge
in
push
ss
test
adc
xchg
movsb
imul
pushf
filds
inc
mov
into
jne
aas
andb
pop
in
rcrl
mov
ljmp
fcoms
pop
lcall
push
testl
inc
mov
xlat
pushf
mov
xor
inc
pop
shll
sub
xchg
dec
out
sarl
cmp
es
mov
pop
mov
aaa
push
loope
and
jbe
mov
cltd
repnz
xorb
push
jmp
jle
je
pop
dec
aaa
jne
sbb
stos
mov
dec
push
fwait
pop
testl
stc
jns
or
addb
ja
dec
lret
das
dec
mov
ja
and
fsubl
test
add
stos
shrl
xor
inc
jb
and
sbb
mov
jle
jp
jb
stos
cmp
ljmp
gs
movsb
mov
stc
bound
popa
jbe
ljmp
cmpsl
mov
movsl
jp
orb
inc
dec
pop
push
cli
mov
sub
aas
je
mov
or
adc
or
rcr
xchg
addb
add
popa
lods
jmp
in
cmpsl
mov
mov
push
fmull
xor
scas
ja
out
push
loope
rolb
xor
out
fiadds
or
test
push
pusha
mov
cmpsl
cmp
jnp
mov
lcall
ljmp
movb
jnp
roll
imul
mov
mov
addr16
shl
bound
stos
add
popa
inc
xchg
push
sbb
jl
decl
loope
sar
mulps
fstl
cmpsb
shll
fidivrs
test
xchg
or
adc
dec
mov
add
jp
pop
mov
push
mov
pop
mov
iret
xorb
fnsave
in
stc
jge
mov
testl
bt
mov
mov
adc
mov
jmp
leave
mov
cwtl
cmp
call
pushf
std
cmc
jne
adc
push
jle,pt
lea
or
fbld
mov
cmp
or
mov
pushf
adc
cmp
out
add
mov
cltd
inc
int3
inc
push
cmp
xor
inc
sbb
adc
into
faddl
call
pop
pusha
mov
mov
out
out
mov
ret
mov
cmpsb
dec
pop
pop
je
pop
shr
sub
inc
xor
mov
outsb
mov
mov
inc
inc
mov
inc
out
mov
ficoml
jp
and
test
push
sub
test
jnp
cmp
clc
mov
and
aas
das
hlt
inc
push
out
int
jnp
or
sub
jbe
cmp
xor
dec
cmc
mov
adcb
pusha
aad
mov
jo
dec
xchg
aam
cltd
addr16
jge
es
lds
or
ficoml
shll
inc
xor
add
xlat
in
stos
adc
push
mov
lock
ja
lea
xor
loopne
stos
icebp
mov
jno
dec
jns
mov
or
das
sub
pop
shlb
pop
ret
cwtl
outsb
jns
and
push
pop
push
sbb
adcb
jg
mov
sub
dec
jb,pt
enter
push
out
mov
test
mov
add
adc
in
dec
mov
mov
or
ror
cli
or
jg
xor
mov
jne
insl
outsl
xchg
aad
stos
lods
add
icebp
sbb
ret
std
jno
mov
pop
mov
xchg
lods
mov
jle
stos
movsl
mov
aad
ljmp
sub
into
xchg
lds
insb
xchg
hlt
mov
cmp
adc
mov
push
adc
shll
jp
push
xchg
pushf
jnp
mov
mov
fisubs
lret
adc
out
es
or
fildl
pop
dec
mov
test
xlat
adc
outsb
scas
lret
sahf
jns
xchg
inc
xchg
incb
jmp
dec
dec
repz
xor
pusha
adc
xchg
add
push
mov
hlt
or
fildll
rcrl
dec
push
or
in
add
sar
cmpb
jmp
inc
cmc
nop
xor
sub
imul
nop
arpl
sub
push
ja
inc
adc
notl
test
or
dec
xchg
ret
imul
and
daa
jb
sbb
jmp
cmp
mov
dec
data16
jb
mov
pop
adc
les
inc
cmp
push
enter
xor
cmpsb
sub
cmp
pop
pop
pusha
imul
out
mov
iret
pop
push
dec
movsb
cmp
push
dec
xor
pop
push
dec
lcall
jle
mov
cmp
loop
mov
call
add
out
mov
jnp
lcall
mov
xor
cmp
inc
cmp
leave
jecxz
pusha
adc
xchg
add
push
mov
pop
mov
fucomip
lahf
sbb
mov
imul
xor
mov
sub
clc
lods
cwtl
push
andb
jmp
bound
je
repnz
xchg
in
fadds
fists
loop
outsb
add
sbb
dec
data16
sub
movsl
mov
pop
bound
xchg
jg
das
test
pop
or
addl
mov
testl
sub
jae
sub
out
mov
imul
mov
bound
xchg
xchg
out
mov
jp
aad
adc
jbe
dec
jb
in
pop
dec
je
cs
push
push
and
rcll
sub
cmpsb
cmp
rol
xlat
xchg
mov
cmp
pusha
xor
xchg
iret
stc
cmp
popf
in
out
pop
std
ret
jg
pop
std
jne
sbb
sbb
loop
lret
testb
mov
in
xor
mov
xchg
fisttpll
adcb
popa
jecxz
jae
or
mov
inc
jns
repnz
mov
jne
inc
add
xor
mov
xor
in
fists
sbb
loopne
aad
jge
sub
imul
mov
out
shrl
push
inc
test
orl
inc
inc
cmp
dec
stos
out
push
mov
stos
mov
jb
out
xlat
or
xor
das
ja
iret
inc
add
inc
jl
mov
sub
mov
sbb
rorl
imul
xor
push
jl
xchg
inc
pop
xchg
xchg
and
movb
scas
add
mov
push
popa
sti
in
mov
cmp
subl
and
out
sar
out
dec
push
out
cmpb
into
push
cmp
mov
lcall
data16
push
cmp
and
and
das
in
hlt
es
lea
push
mov
sbb
lds
add
in
lahf
cmp
in
mov
cmp
into
or
cmc
mov
push
dec
mov
xor
pop
inc
add
insb
add
dec
cmp
sbb
mov
push
jno
and
into
xlat
addb
xorb
flds
jmp
add
jno
paddusb
add
and
add
scas
imul
inc
mov
shl
pop
lret
cmp
arpl
pushf
mov
mov
in
sti
out
pop
in
and
push
in
inc
mov
out
cmpsb
sub
dec
vphaddubw
fnstcw
imulb
cmpsl
push
ja
or
lea
lock
and
mov
push
cmpsl
push
ja
or
cmp
or
add
pop
xchg
insl
test
or
push
pop
leave
shrl
jge
xor
dec
inc
jo
push
in
gs
mov
adc
jnp
sub
adc
fwait
push
sub
mov
mov
xor
add
sbbl
scas
nop
fwait
sub
test
repz
imul
inc
les
xor
fwait
clc
mov
xchg
decl
call
daa
loop,pn
mov
add
and
ljmp
pop
repnz
hlt
sub
xchg
jl
add
fimull
or
add
stos
dec
enter
test
lahf
in
into
out
mov
int
add
cltd
or
inc
xor
cmc
or
scas
fidivs
pop
and
daa
dec
cwtl
sub
add
pop
popf
cld
jp
in
mov
dec
fistl
dec
lcall
sbb
sub
mov
mov
arpl
les
js
and
cmp
ljmp
gs
mov
loope
js
inc
xchg
pushf
dec
jbe
sub
or
jle
and
loopne
outsl
jge
mov
bound
sub
stos
into
mov
xor
jmp
lcall
push
dec
call
mov
testl
jl
and
ss
ret
push
nop
xor
ds
test
stos
test
cmc
std
or
pusha
fwait
data16
pop
daa
or
loope
stos
cmc
test
imul
jg
and
push
mov
icebp
pop
rorl
xor
loope
daa
add
dec
sub
int
mov
dec
ficomps
jmp
pop
xchg
test
jg
test
sub
ficoms
mov
xor
sub
xor
stos
xchg
pop
add
sti
xlat
enter
jbe
lods
pop
cmp
push
jecxz
and
and
dec
sar
mov
enter
and
shlb
push
mov
loop
rcll
jns
clc
xchg
sbb
sub
push
jne
repz
lods
fadd
jmp
push
cmc
mov
jmp
icebp
cmpsb
pop
fldt
les
rcl
sub
mov
dec
test
subl
cltd
sub
push
fwait
loope
pop
fstpt
adc
mov
popa
mov
outsl
pop
outsb
mov
push
xchg
xchg
out
out
jmp
loop
xor
ss
or
xchg
cli
cmp
jns
lahf
sub
pop
mov
mov
mov
sti
xor
inc
or
inc
mov
cmc
push
lcall
fisubrs
sti
je
test
mov
ret
mov
adc
mov
xor
fwait
sbb
push
aad
cmp
ret
dec
jb
movb
test
addr16
or
andb
cld
cwtl
shlb
mov
xor
inc
or
outsl
movsl
cmc
add
add
addl
movsb
sub
jo
js
imul
ret
push
test
inc
jbe
divl
cwtl
sbb
fbstp
add
push
cltd
sti
rcrl
in
stos
inc
sub
mov
mov
lret
mov
in
fcompl
jl
stos
sub
pop
aas
mov
inc
xor
mov
lret
test
pop
dec
mov
fildll
pop
mov
cmp
aaa
cmpsl
or
push
lods
movsl
inc
aaa
nop
outsb
jae
or
cltd
outsl
xchg
mov
xchg
in
sbb
pop
stos
sbb
xchg
sbb
pop
sub
ss
cmp
call
fnsetpm(287
lret
and
sbb
inc
push
popa
insl
sub
pop
dec
add
sbb
out
or
mov
cli
das
pusha
jmp
jns
imul
xchg
enter
pop
sbb
test
out
cmove
cltd
cmc
cmp
in
mov
add
cmpb
xchg
pop
push
or
je
cmp
jb
lock
xor
test
sbb
repnz
cmc
ljmp
jb
inc
enter
jmp
cmp
sub
outsb
fcomp
dec
xchg
imul
dec
sbb
sub
mov
pop
xor
fildll
pop
adc
cmp
scas
aad
orb
nop
xchg
xchg
leave
addb
dec
imul
jno
leave
dec
xchg
dec
mov
push
mov
call
xor
lret
lea
or
xor
xchg
ret
cmpsb
sbb
cmp
das
xchg
ror
push
adc
cmpsl
aas
aas
rcll
xor
jmp
add
hlt
xchg
cmp
jnp
cmp
and
test
in
xor
jg
hlt
cmp
push
add
add
dec
sub
add
adc
pop
mov
and
jl
pop
sub
clts
stc
or
xchg
jp
lods
mov
adc
add
js
cmp
aas
push
inc
pop
in
jge
cmc
mov
xchg
adc
jp
notl
out
scas
mov
xchg
repnz
cmp
mov
and
jmp
xchg
jbe
mov
pop
lahf
outsl
xor
or
xchg
pushf
movsl
insb
rorb
add
pop
mov
aaa
push
mov
and
pusha
ret
aam
jle
test
dec
cmpsl
sahf
mov
sub
jmp
add
pop
sbb
out
adc
test
lock
dec
mov
scas
shl
sbb
dec
xchg
mov
mov
pusha
lcall
out
and
mov
cwtl
cs
mulb
mov
sbb
jae
clc
inc
inc
mov
or
mov
cmpsl
push
push
pop
outsb
dec
jg
pop
rorb
sti
popa
stos
test
jmp
xchg
mov
in
jnp
push
xchg
out
sub
shrl
cmp
nop
fs
icebp
pushf
aaa
popf
inc
push
jmp
adc
daa
adc
inc
jae
fildll
aad
fdivs
cmp
push
rorl
sub
shll
cli
sbb
dec
nop
sbb
stos
pop
sub
sbb
add
mov
xlat
mov
cwtl
cmc
loopne
mov
cwtl
and
mov
xor
lock
movsb
and
inc
imul
loope
cld
and
mov
fwait
adc
lods
repz
in
or
dec
shlb
outsl
lcall
mov
mov
cld
rcrb
fs
test
jo
adc
pushf
or
insb
jecxz
adc
mov
movb
cmc
inc
and
ror
es
push
test
inc
aas
in
cmp
outsb
lret
ljmp
pop
cmp
dec
lods
inc
call
rcll
iret
push
pusha
int3
mov
out
inc
xchg
mov
mov
pop
push
mov
jae
jp
push
jecxz
sub
push
adc
or
in
call
mov
pop
sbb
cmpsl
je
sbb
mov
xchg
aad
cmp
sti
xchg
aaa
mov
daa
scas
xchg
sti
mov
ret
sar
stc
pop
clc
ret
outsb
sub
movsb
jmp
cs
in
mov
iret
je
js
bound
cli
pop
icebp
shrb
mov
add
sbb
dec
scas
adc
test
push
xor
mov
pop
fnstcw
add
sbb
lods
aaa
mov
daa
scas
xchg
sti
pop
push
jns
sub
cltd
mov
or
inc
add
sbb
rcrb
push
xchg
or
mov
into
test
sbb
xor
pop
ffreep
jp
add
and
ja
into
outsb
jbe
and
sti
push
jge
inc
daa
repz
dec
sub
test
cmp
roll
stc
cmpsb
sbb
es
sbb
lahf
addr16
jo
enter
mov
cld
fldenv
inc
push
cmp
scas
data16
repnz
clc
pop
add
shll
xchg
cmc
cmpsb
adc
out
js
jmp
adc
dec
lds
push
pop
inc
xor
fisttpll
rolb
daa
rcrl
mov
testb
stc
push
and
xor
xchg
fstpt
dec
std
mov
cltd
insl
aad
add
dec
shll
sbb
jle
xchg
sbb
addb
fmul
sbb
push
mov
lods
cmp
inc
and
push
pop
inc
add
in
mov
xchg
arpl
push
mov
xorb
jb
dec
mov
sbb
mov
pop
outsb
mov
shl
call
daa
and
push
push
adc
or
dec
sub
sbb
push
pop
lea
mov
pop
inc
or
sbb
mov
jne
clc
lea
dec
popf
daa
xlat
xor
push
adc
mov
jnp
scas
add
pop
lds
sarl
pop
test
and
and
loopne
mov
test
ret
out
sti
mov
push
pop
shl
nop
stos
cltd
daa
pop
push
push
out
stos
fsubl
sub
dec
xor
pushf
aam
les
jne
cli
xchg
test
or
mov
icebp
cmp
push
rorl
mov
inc
femms
cmp
mov
inc
or
dec
mov
fbld
add
aaa
pcmpeqd
rcrl
xchg
jg
mov
pusha
push
push
jno
adc
mov
loope
out
mov
sbb
loopne
jecxz
mov
sbb
stos
pushf
aam
pop
in
xchg
mov
pop
lods
xor
ret
rolb
adc
lahf
mov
movsl
insb
test
xchg
xchg
pop
add
outsb
mov
mov
xlat
imul
int
out
mov
inc
jmp
loop
jno
push
xchg
leave
xor
negl
hlt
inc
scas
inc
int3
add
pop
stc
pop
and
adc
or
out
cld
pop
add
lret
lods
cmp
icebp
sub
scas
or
cmp
mov
aad
xchg
fcomps
xchg
ds
jns
and
js
sbb
xchg
pusha
sarl
jbe
push
inc
shl
and
xchg
lret
dec
inc
rcrl
pop
lods
fsubrs
test
dec
push
lcall
in
xor
mov
cmp
ret
pop
jge
dec
or
je
stos
movsl
les
pop
insl
sub
mov
jg
mov
cmp
sti
mov
push
popf
push
movsl
jecxz
mov
mov
pop
mov
inc
daa
out
stos
mov
add
pop
inc
jne
xchg
fdivp
ja
imull
sti
lcall
adc
cmp
inc
scas
inc
fstl
xchg
cmp
or
icebp
sbb
insb
and
pop
addr16
and
ret
enter
shll
push
test
mov
pushf
lea
jg
fstpl
das
xchg
lock
loopne
xchg
or
fstp
xor
orl
hlt
sbb
mov
icebp
sbb
fcoml
sarl
adc
cmp
mulb
aam
shrb
jno
or
dec
mov
enter
divl
sbb
in
sahf
push
mov
mov
dec
aaa
lahf
fucomp
xor
push
pop
add
jo
jge
mov
adc
pop
adc
cwtl
inc
aaa
push
or
cmp
xchg
call
pop
cs
mov
xchg
sub
pop
sbb
sbb
pop
mov
clc
das
iret
fucomp
jo
dec
cmp
jp
or
mov
add
out
sbb
jge
lods
jne
scas
jge
aaa
and
sahf
jl
inc
leave
push
jmp
mov
jne
inc
or
mov
ljmp
jne
out
xchg
ret
scas
and
inc
dec
jno
js
bound
adcl
push
push
cmp
cwtl
cwtl
nop
inc
repnz
stc
mov
sub
jns
pop
aad
xchg
mov
lcall
mov
inc
testb
jp
imul
jnp
xchg
xchg
push
pushf
push
fisubrl
lret
xlat
ss
int3
add
subb
idiv
pop
sbb
insb
pushf
push
mov
sbb
sub
xchg
adc
sarb
mov
or
les
or
pop
rcrb
and
lcall
dec
xchg
sahf
popa
fists
flds
stc
xchg
xorb
in
push
sbb
mov
add
inc
jge
sti
nop
cs
addr16
inc
fsqrt
jo
push
mov
cld
shlb
int3
aam
in
push
jge
mov
shr
int
dec
push
pop
and
pop
xchg
insb
xor
fs
lret
mov
push
das
pop
mov
cmpsl
cmp
es
push
jb
fdivrs
xchg
ljmp
dec
jne
pushf
mov
movsb
in
sub
stos
sub
pop
mov
jns
shll
vpcomb
and
dec
inc
rcl
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
leave
into
movzbl
jnp
xchg
sbb
push
stos
in
mov
iret
lods
aad
fsubrs
sar
add
jp
movsl
dec
jecxz
sub
test
test
cmp
inc
test
rclb
loope
pusha
ret
xchg
sbb
mov
enter
dec
ret
cmovp
sbb
cmp
jp
lods
mov
out
or
movsb
xchg
stos
push
sub
test
mov
xor
xor
test
or
lahf
fildll
cmp
mov
aad
inc
mov
test
adc
push
adc
inc
in
pop
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
je
dec
xchg
sbb
dec
movl
mov
push
adc
mov
test
jmp
jne
arpl
jb
hlt
repz
ss
scas
adc
adcl
dec
mov
icebp
aas
movsl
fldl
push
adc
jae
mov
inc
adc
lods
aam
add
pop
data16
into
es
pop
es
mov
mov
shrb
das
sbb
cmp
les
ret
addr16
adc
scas
fisubrs
sbb
icebp
push
out
or
inc
cmpl
ret
cmp
movsb
cmp
sbb
pop
mov
or
dec
dec
dec
insb
pusha
out
jno
rolb
mov
dec
mov
fsubrl
pop
icebp
jnp
push
je
jecxz
in
out
out
push
xchg
shlb
jnp
es
sahf
shlb
cltd
lret
pop
jo
mov
pusha
xor
adc
xchg
sbb
and
push
jl
leave
call
push
push
push
jg
ljmp
adc
pop
pop
add
jno
ret
in
imul
mov
sub
arpl
or
int3
and
lods
inc
add
movsb
mov
ljmp
mov
sbb
pop
mov
push
shlb
jmp
loop
aas
fadds
inc
lods
xor
xchg
pop
lea
xor
adc
sub
adc
fs
and
mov
popf
orb
ror
fisttpl
pusha
cmp
mov
adc
mov
dec
cld
mov
mov
gs
imul
fimull
add
outsb
pop
jnp
ficoml
nop
sbb
xor
and
lods
fs
jb
pop
ss
mov
stos
lret
sub
out
pop
sbb
mov
mov
fnstenv
test
loopne
jmp
jb
jmp
sahf
dec
aaa
adc
int3
jne
dec
inc
push
scas
push
mov
jne
icebp
dec
pushf
fisubs
loopne
icebp
xchg
pop
mov
push
pushf
xor
cmp
dec
add
mov
test
outsb
push
in
pop
shlb
lea
mov
sbb
and
lret
cmc
jne
add
popa
xor
jle
call
insb
inc
loopne
jb
stos
arpl
sbb
rol
xor
lock
test
add
cmp
ljmp
in
adc
push
xor
sbb
push
xor
inc
jp
test
pop
ss
mov
and
aad
ret
bound
cmpsb
les
lock
mov
push
or
out
sub
mov
add
add
xor
push
mov
pop
testb
rcll
aaa
stc
lret
test
fisubrs
jp
mov
hlt
sti
cmp
fidivs
inc
push
jns
push
aas
push
mov
jecxz
jg
mov
sub
fnstsw
dec
outsb
push
mov
mov
mov
cli
in
stos
sub
pop
xor
cmpsb
inc
adc
push
mov
out
sbb
orl
popa
icebp
push
movsl
adc
out
pop
pop
jno
cmp
subl
dec
insl
push
inc
push
pop
lea
adc
lret
shlb
push
mov
fs
xlat
shrb
lcall
lahf
xchg
jge
out
sbb
mov
cmp
push
add
and
sarb
js
pusha
or
and
std
add
cmpsl
repz
dec
adc
dec
adc
mov
mov
pop
loop
scas
sub
mov
mov
imul
dec
pop
lods
mov
lock
test
iret
lock
and
jns
aam
add
or
ja
mov
sub
pop
cmp
mov
fldl
pusha
cmp
xchg
mov
jns
xor
xchg
jecxz
repnz
mov
out
jo
movsb
or
aam
int3
repz
inc
lods
outsl
ds
into
push
cmpsl
sub
movsb
cmp
pusha
ja
in
call
cmp
and
ds
dec
out
and
jb
scas
imul
repz
orb
pop
iret
xchg
push
daa
or
push
dec
sbb
filds
lahf
mov
rcl
pop
addl
dec
inc
inc
mov
icebp
aas
loop
cld
sub
push
popa
xor
arpl
in
scas
sbb
mov
mov
dec
push
div
lcall
fs
and
mov
fsubrs
and
adc
xchg
dec
jbe
faddl
pop
xor
sub
pop
push
loop
xlat
pinsrw
sbb
adc
fcomi
dec
sub
sbb
jle
xchg
push
cmpsl
orb
aas
stos
jo
pop
mov
xchg
rorl
fs
mov
and
ret
fidivl
cmp
or
sbb
jl
push
into
mov
out
pop
xor
sub
add
push
jp
push
lea
adc
stos
lds
push
add
test
outsl
in
inc
mov
hlt
xor
pop
push
push
sub
cmp
jbe
mov
test
push
adc
sub
pop
repz
das
xchg
mov
xchg
bnd
imul
inc
call
inc
test
adc
leave
pop
je
mov
pop
xor
pop
cmpsb
pop
xor
in
jo
mov
mov
mov
xlat
sbb
aad
cmp
sub
mov
ljmp
and
push
push
movsl
push
and
or
mov
mov
cmpsl
ljmp
xchg
inc
push
inc
andl
xchg
xor
sub
fstps
push
addr16
ret
pop
sub
lods
jne
add
test
std
sbbb
cmp
js
sub
lock
add
incb
lock
in
lods
loop
mov
fstpt
jmp
int3
pop
les
lcall
test
test
and
cmp
test
xchg
pop
ja
xor
daa
imul
push
add
std
daa
jl
rcr
xchg
and
icebp
jecxz
push
test
out
outsl
jp
stc
and
loope
mov
cmpsb
dec
mov
js
scas
push
aaa
clc
test
ljmp
cli
daa
bound
into
ja
hlt
xor
or
call
lods
shl
or
ja
into
in
imul
add
cltd
rcrb
in
incl
pop
xor
insb
int
leave
std
cli
lea
rol
mov
int
push
jb
jp
pop
inc
lods
pop
in
stc
mov
inc
lock
cli
add
ret
cmpsl
mov
jle
xor
dec
je
adc
lcall
insb
jnp
or
mov
movsb
mov
std
xor
or
es
sub
or
rolb
es
lcall
in
mov
mov
hlt
jbe
or
cmpsl
pop
fmull
adcb
xlat
sub
or
mov
ljmp
cmp
call
cld
bound
into
xchg
xchg
pop
das
dec
cli
mov
pop
sbb
ljmp
test
rcr
push
cmc
xor
ds
mov
leave
adc
sti
pop
push
cmp
popf
stos
out
add
fcoml
xchg
push
dec
push
dec
pop
jmp
outsb
loopne
fisubrl
ret
test
push
mov
insl
fst
dec
es
iret
ficomps
fisubrl
ret
test
add
xor
dec
je
jmp
jle
and
push
daa
es
sarb
loopne
inc
pop
xchg
or
cmp
sub
add
dec
cli
iret
cmc
pop
add
mov
les
push
sub
out
std
push
rcrb
and
cmp
xchg
jns
fisttps
movsl
int3
out
loop
ljmp
sbb
sti
fidivrl
push
mov
fucom
mov
sbbl
xchg
loope
test
mov
addr16
out
clc
negl
add
push
fs
jecxz
pop
cli
add
dec
mov
bound
testb
or
cmpb
xor
cmpsb
loope
repz
or
dec
orb
jp
inc
sub
in
les
mov
dec
aam
mov
je
fxch
insb
xlat
dec
mov
cmpsl
cmpsb
insl
fbld
out
mov
push
sahf
addr16
subl
loope
xchg
dec
mov
loope
je
lods
adc
stos
sub
into
iret
push
lock
jl
ret
call
adc
movsl
add
nop
cmc
pop
clc
fsubs
int
xor
in
jbe
in
inc
lods
mulb
xchg
int3
xor
js
jbe
ds
push
imul
dec
lods
xchg
sar
push
je
xor
stos
movsb
or
push
ret
or
icebp
add
call
cs
cmp
mov
jb
gs
push
jp
stos
dec
jmp
cmp
sub
cmpb
fs
mov
push
test
mov
daa
jno
cmp
cld
jg
sbb
pusha
repnz
out
push
and
inc
inc
test
enter
out
insl
mov
xchg
push
xchg
icebp
mov
mov
roll
inc
inc
sbbl
add
fists
push
sbb
pop
lret
sub
ljmp
push
cmp
lods
inc
icebp
insb
pop
mov
and
adc
outsl
xchg
ficomps
test
fwait
mov
fldl
cmpsl
push
outsb
cmp
sbbb
notb
jmp
cmpsb
or
rol
or
stc
nop
out
mov
dec
jbe
xchg
lret
lods
jp
out
push
jae
add
jle
jg
sub
jne
fst
push
dec
add
mov
inc
lret
pop
or
imul
aas
mov
pop
aad
aad
jo
addb
mov
mov
inc
mov
mov
jl
hlt
jmp
jae
sub
sub
loope
adc
fistps
loope
dec
dec
and
and
sub
mull
sbbb
jg
sbb
aaa
lds
lods
pop
jns
or
xor
dec
stc
outsl
inc
sbb
push
add
loope
aaa
ret
movsl
icebp
leave
sub
mov
fidivrs
xor
das
sub
repz
xor
pop
mov
push
faddl
jne
rorl
arpl
rol
dec
xchg
add
insl
mov
jno
xlat
mov
rcl
jno
testb
xor
lcall
dec
cmc
fcmove
jo
in
mov
xchg
fdivr
into
sbb
or
xchg
sbb
sub
mov
cli
pop
lahf
xchg
pop
daa
jp
sbb
inc
or
inc
fsubrp
lods
mov
jo
lret
mov
into
jbe
dec
or
mov
mov
push
subl
int
shll
add
xor
dec
je
pop
sbb
and
and
imul
loop
lods
fsubrl
add
adc
push
mov
cli
adc
fwait
lods
pop
jns
or
mov
adc
sbb
fildll
mov
sbb
sub
icebp
leave
sub
mov
test
aas
pop
stos
fs
lock
xchg
cmp
outsb
mov
lret
dec
into
cltd
subl
jmp
test
xor
jmp
lcall
mov
dec
shrb
ret
dec
inc
imul
fnstsw
fwait
cld
lods
mov
cmp
sarb
sub
int3
lock
adc
les
test
xchg
or
out
cmp
pop
push
test
ss
cmp
pop
test
pop
pop
movsb
adc
cmp
negb
or
mov
pop
mov
call
dec
leavew
cmp
int
jmp
sub
sahf
fstpl
stc
mov
jo
jb
les
aam
push
jg
cmpsl
xor
xlat
loope
push
jo
fcmovne
mov
repz
sbb
js
stc
sub
cltd
rclb
jmp
or
and
fcompl
fldenv
and
js
and
stos
rorl
adc
je
and
sbb
mov
in
inc
fistps
ljmp
shll
mov
jae
lds
repz
sub
push
int3
cwtl
jp
mov
iret
adc
xlat
test
cli
mov
xchg
cwtl
xor
or
scas
cltd
and
mov
rorb
xor
mov
and
or
out
fsubrl
mov
inc
cltd
pop
rclb
inc
mov
leave
cmp
xchg
fnsave
xorl
rorb
pop
dec
cmp
inc
cwtl
lret
inc
mov
pop
fcmovu
cmpsb
leave
nop
xchg
xchg
mov
test
lcall
les
popf
aad
mov
xorl
test
xchg
push
mov
cli
arpl
pop
ret
je
ret
stos
fidivrs
iret
xor
mov
push
or
jne
pop
movsb
lds
int3
mov
call
mov
push
jbe
mov
mov
inc
clc
xor
and
test
xor
push
fs
je
jns
gs
push
out
fsubrp
mov
cli
or
or
stos
cmp
xchg
test
cmp
sbb
adc
adc
cli
mov
divl
push
xchg
or
mov
jl
rcrl
jmp
cmpl
iret
imul
scas
dec
dec
inc
sub
clc
push
outsb
xor
inc
nop
or
xchg
cmp
mov
cmovo
aas
sub
leave
test
ficoms
cwtl
jb
or
mov
sbb
ret
test
mov
cmp
add
sub
imul
ret
fldl
je
dec
lods
lods
push
mov
ljmp
test
scas
cmpsl
in
xchg
sbbb
jmp
fisubrs
pop
mov
xor
add
ss
data16
pop
inc
sbb
cmp
pop
mov
and
pop
inc
fld
shlb
sub
test
fmull
adc
arpl
aaa
or
and
mov
in
push
fcoms
in
cmpl
and
enter
push
adc
mov
jb
and
std
out
jno
add
mov
mov
addb
jne
push
into
jnp
dec
pop
js
das
add
mov
and
out
push
addb
sbbb
jmp
push
ret
icebp
mov
or
mov
sub
sbb
daa
pop
aas
loop
xchg
adc
fisubs
jmp
mov
call
pop
mov
insl
pop
arpl
stos
movsl
lds
andl
fwait
push
mov
insl
sbb
inc
xchg
out
push
testb
fwait
std
leave
fldcw
aad
adcl
dec
loopne
mov
call
lods
xchg
dec
dec
cmp
xor
aad
fisttpll
rorb
daa
aaa
mov
cmpsb
jnp
jno
xchg
or
arpl
push
mov
lea
loop
popa
std
mov
jle
notb
xorl
imul
or
popa
mov
pop
adc
or
pop
or
xchg
inc
adc
add
xchg
rorb
xchg
in
adc
call
stos
mov
ss
mov
xchg
enter
ret
jmp
imul
push
pop
push
sub
and
jae
fmull
lcall
pop
test
sbb
dec
xchg
push
shrl
cmc
in
inc
fdivl
dec
adc
pop
mov
or
je
lcall
rcl
pop
push
aas
xchg
inc
js
push
inc
xchg
mov
mov
outsl
xor
int
mov
or
jg
push
leave
adc
sub
jp
mov
pop
inc
aaa
mov
sbb
sub
stos
fidivrs
xchg
outsl
sub
stc
movsb
iret
mov
out
enter
mov
js
hlt
pop
lock
and
stos
push
pop
pop
movsl
cmp
and
xchg
andb
sub
test
dec
jecxz
fisttpl
push
push
push
adc
dec
cmp
aam
cli
sbb
push
mov
mov
add
loopne
imul
lods
sub
xor
sub
pop
jbe
pop
add
or
push
xor
cwtl
in
imull
int
xor
pop
mov
sbb
imul
fcompl
test
out
pop
push
aas
mov
xchg
mov
or
pusha
and
xor
repz
push
jg
sub
mov
nop
cs
cli
cmp
dec
lcall
dec
or
inc
mov
gs
and
cmp
mov
add
test
in
sub
push
dec
mov
cmp
jbe
test
pop
pop
aad
lods
aad
lods
pop
dec
es
arpl
cmpsl
lds
call
dec
movsb
xor
sbb
dec
xchg
jno
sbb
jo
loopne
jnp
xchg
or
int3
movsl
fadds
std
inc
movd
sarl
pop
or
fcoms
mov
sti
cmp
inc
test
inc
bound
adc
loope
int
out
mov
mull
xchg
pop
call
dec
mov
test
mov
pop
or
call
sbb
sub
xor
int
sub
pop
sbb
sub
push
js
testl
xchg
mul
popa
mov
xchg
loope
push
xor
or
and
std
cwtl
push
arpl
and
cs
cltd
mov
and
cmpsl
mov
loopne
imul
psubusb
jae
sbb
push
bound
or
inc
pop
xchg
sbb
addr16
inc
stos
int
jg
inc
je
cmp
fisubrl
jmp
sub
loope
repz
pop
jbe
in
call
mov
movsl
mov
repnz
jb
jo
movsb
ss
hlt
inc
int
pusha
sbb
and
rclb
and
mov
and
and
int3
sbb
add
addb
and
scas
sar
adc
test
int3
adc
push
int
push
mov
mov
mov
mov
sbb
ret
xor
pop
jo
cmp
jmp
dec
jecxz
pop
in
dec
stos
cld
dec
jmp
scas
dec
or
sub
push
aam
cmpsl
leave
aaa
vsubps
push
out
call
pop
sbb
dec
jle
adc
push
sub
sbb
stos
sub
jmp
dec
sub
adc
pop
out
mov
ror
arpl
jno
sbb
fmulp
pop
pusha
cmc
or
mov
cwtl
mov
dec
adc
rclb
xchg
mov
dec
stos
test
adc
or
bound
mov
inc
add
fidivrl
call
hlt
sahf
and
xor
xorb
pushf
int3
imul
inc
adc
xor
xlat
jmp
adc
les
imul
and
jbe
cmpl
dec
jno
imul
sub
mov
mov
scas
pop
jge
xor
push
or
push
insl
scas
movsb
lods
orl
stos
mov
or
shrb
repz
mov
xchg
sti
int
mov
iretw
stc
jno
xchg
rep
adc
hlt
add
sbb
into
enter
movb
push
adc
push
push
mov
inc
cltd
xchg
adc
icebp
sbb
jnp
fildl
stos
pop
lods
stc
clc
adc
insl
stc
shlb
xor
cmp
frstor
stos
xor
repnz
lcall
or
lods
inc
push
mov
inc
pop
push
lock
andl
and
cmpsb
xchg
pop
pop
sbbb
gs
fldt
mov
sbb
xchg
adc
push
xor
out
fdivrl
pop
popf
push
adc
sub
inc
flds
sbb
mov
cwtl
insb
adc
inc
add
orl
shlb
mov
add
lret
push
dec
jge
gs
fs
or
xor
int
cmp
jmp
notb
push
loopne
sub
leave
repz
in
scas
cli
xchg
add
aam
pop
enter
pop
inc
or
repz
int
icebp
testb
stos
mov
pop
ja
jo
nop
jp
xchg
dec
pop
shl
adc
cmpsb
jge
xchg
and
push
jl
fstpl
int3
push
cmp
mov
jns,pt
movsb
dec
and
lock
jo
ret
sub
bound
jle
xor
dec
je
out
add
int
cltd
jno
jl
mov
cwtl
mov
add
lds
jbe
mov
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
arpl
test
or
aad
jbe,pt
out
mov
clc
sbb
jb
mov
jb
mov
leave
into
movzbl
jnp
xchg
sbb
push
stos
in
mov
iret
lods
aad
fsubrs
sar
add
jp
movsl
dec
jecxz
sub
test
test
cmp
inc
test
rclb
loope
pusha
ret
xchg
sbb
mov
enter
dec
ret
cmovp
sbb
cmp
jp
lods
mov
out
or
movsb
xchg
stos
push
sub
test
mov
xor
xor
test
xor
sbb
clc
daa
pop
mov
lret
mov
jbe
xchg
jo
mov
lcall
cwtl
lahf
adc
cltd
sub
cmp
fs
lahf
lods
jo
xchg
sub
or
push
push
jae
and
fistpl
cld
popa
je
lods
cmpsl
ja
lds
push
fisubs
lea
adc
js
pop
jne
es
std
mov
loopne
fsubl
daa
aad
loopne
pop
mov
out
cs
cli
xchg
dec
xchg
mov
mov
jle
push
mov
and
notl
test
add
or
or
xchg
jmp
call
in
dec
rcrl
loopne
sbb
movsb
clc
movzwl
std
addr16
div
movsl
adc
sub
dec
ljmp
sbb
mov
dec
jb
and
sbbb
lcall
or
sub
sbb
movsb
push
stc
mov
and
adc
jmp
bound
add
mov
cmp
test
ds
push
stos
cmpsb
push
repz
lcall
in
and
rcl
movsl
cmpsb
icebp
mov
in
leave
cld
dec
test
cmpsb
hlt
inc
bound
repnz
dec
mov
clc
jmp
insb
mov
std
jne
mov
movsl
xchg
mov
icebp
push
hlt
js
xor
xchg
jo
fimuls
addr16
hlt
ret
dec
or
add
add
pushf
push
aas
and
scas
cwtl
push
mov
repnz
aad
jl
hlt
int
sbb
sub
inc
jp
mov
mov
cltd
gs
xlat
lods
xor
mov
inc
pop
fisubl
icebp
popa
das
mov
sbb
adc
out
fbstp
inc
xor
mov
fadds
xlat
in
shl
xor
test
orl
icebp
daa
mov
xlat
jecxz
sbb
pop
outsb
sub
divb
out
xchg
mov
test
hlt
jle,pn
cmp
imul
sti
jle
mov
pop
or
leave
fnstenv
mov
and
pusha
aad
pop
inc
sbb
cmp
or
push
pop
rcrl
dec
xor
lods
jns
push
or
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
dec
pop
scas
mov
jns
nop
cmpl
fidivrl
in
popa
out
gs
cmp
mov
lods
inc
xor
mov
divb
gs
arpl
shr
pop
rcrl
mov
push
xor
xor
lret
push
jg
inc
dec
and
sbb
das
enter
out
lods
mov
push
daa
test
adc
add
popa
and
ds
mov
mov
mov
cmp
shlb
or
xchg
and
fcomps
stos
mov
inc
into
cmpsb
cmp
sbb
mov
and
sub
cli
mov
xor
xchg
dec
je
mov
call
ss
xchg
js
push
cmp
call
movsb
inc
mov
xchg
test
lret
mov
andb
fwait
adc
sti
iret
xchg
out
fsub
mov
cs
pushf
mov
mov
fbstp
mov
pop
jle
xchg
sub
cmp
push
enter
dec
pop
mov
addr16
push
or
adc
jnp
call
inc
aam
xor
jo
mov
jge
xor
mov
pop
or
mov
pop
sub
pop
push
dec
sub
xchg
or
lds
sbb
hlt
fimuls
xchg
jno
xor
mov
movsb
mov
cmpsl
cmp
jnp
aad
scas
and
ja
adc
out
inc
xor
je
sti
sbb
push
cmp
test
pop
lret
mov
sbb
cmp
ljmp
push
and
pop
cli
fcomp
mov
xor
xor
mov
jecxz
or
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
lods
sub
lock
add
push
in
mov
outsl
out
mov
mov
xchg
inc
xor
test
cmpsl
jmp
mov
adc
cmc
aam
mov
mov
lock
and
fistpl
add
xorb
adc
nop
xor
jmp
mov
enter
sub
and
and
xor
mov
insb
sub
or
sub
flds
dec
adc
int3
push
add
mov
adc
mov
xchg
xor
outsl
in
dec
adc
xchg
mov
int
jns
stos
sub
fwait
and
loope
adc
cmp
dec
pop
arpl
cmpsb
fcompl
sahf
jmp
aas
or
inc
aam
nop
cmp
and
insb
aad
cs
sub
jmp
xor
push
xor
int3
aaa
adc
cmpsl
ja
pop
add
mov
pusha
repz
test
jo
xor
pop
scas
test
int3
pop
mov
sarl
fldt
ljmp
adc
jp
nop
xchg
and
xor
mov
das
mov
or
or
pop
adc
push
aas
hlt
and
add
add
jg
adc
xchg
push
mov
movsl
enter
adc
adc
xor
xchg
fistpl
stos
sbb
rclb
shrl
or
jno
jnp
adc
je
jl
gs
mov
ret
mov
insl
cmpsb
inc
ja
int3
or
push
lods
or
adc
pop
dec
movhps
cli
adc
popa
push
mov
movsl
push
sub
sub
inc
pop
push
jmp
add
mov
daa
sbb
xchg
nopl
dec
sbb
mov
sub
pop
pop
data16
push
sub
inc
movsb
pop
stc
ss
dec
jae
and
shrl
mov
lods
pop
jmp
gs
sti
sahf
arpl
fucomp
sub
daa
fsts
ja
mov
mov
jg
scas
ja
repz
decb
pop
add
lods
mov
adc
mov
cmc
int3
jbe
outsb
in
xor
mov
scas
and
sti
mov
test
add
sbb
fistpll
xor
lods
sub
adc
imul
test
leave
push
xor
dec
push
inc
xor
or
or
mov
jo
mov
add
pop
int3
cld
mov
or
jae
sbb
jae
and
cltd
notb
adc
lds
push
daa
es
rcrl
pop
stos
pop
std
mull
insl
mov
ljmp
fistps
cld
mov
test
xor
lds
or
push
pusha
xchg
jge
jge
or
xchg
lods
fnstcw
out
cmp
aad
or
lds
loop
mov
lret
xchg
movsl
mov
xor
bound
lods
add
imul
adc
mov
dec
and
cmp
adc
insl
mov
mov
push
dec
jno
add
testl
icebp
or
out
int3
ds
push
pop
mov
mov
scas
inc
ss
adc
dec
xchg
mov
imul
push
add
mov
repz
aas
dec
inc
cltd
bound
test
mov
jecxz
adc
and
cmc
cmp
arpl
clc
in
and
cmp
mov
cmp
jp
cwtl
roll
jae
jecxz
sbbb
lahf
sbb
hlt
leave
in
sub
jl
add
jnp
mov
rcrb
lret
notb
js
shll
dec
inc
and
inc
daa
aaa
mov
aaa
lahf
jo
jne
aaa
or
iret
jne
jl
test
lea
pop
test
jb
push
rol
xchg
pop
jg
cmp
pop
lret
mov
mov
into
pop
xchg
and
jo
jge
addr16
mov
mov
pop
mov
cltd
shr
stos
push
icebp
mov
push
xor
je
movsl
jecxz
lods
push
xchg
adc
popa
dec
xchg
xor
shl
inc
mov
mov
xchg
scas
dec
mov
sub
cmc
stc
test
test
fists
loop
add
mov
lods
lods
pop
mov
sbb
mov
insl
xchg
repz
test
add
cmp
test
cmp
mov
cwtl
xlat
and
cmp
sbb
addb
lea
pcmpeqb
fs
ljmp
sub
and
sbb
mov
cmp
inc
add
cwtl
sbb
lahf
xor
push
iret
xlat
loopne
xchg
js
jns
or
xchg
or
sub
cltd
pop
pop
cmpb
add
sub
inc
pop
icebp
hlt
inc
mov
push
cmp
push
mov
sub
dec
movsl
inc
ficoml
jge
mov
aad
sub
adc
sbb
idivb
pushf
in
imull
mov
or
popa
add
adcb
sub
icebp
cmpsl
pop
pop
cld
pop
fcmovu
outsl
sbb
mov
aaa
fucompp
push
mov
mov
push
int3
pop
adc
les
jle
fwait
addb
stos
cmpsl
repnz
push
jnp
pop
scas
lret
inc
mov
xor
in
or
movsl
into
lods
ret
pop
insb
insb
cmp
in
cmp
push
mov
add
cmp
push
or
or
mov
das
dec
sub
mov
add
les
daa
outsb
mov
stc
xor
inc
add
out
or
cmc
lds
jg
popf
mov
mov
inc
and
test
stos
sbb
aaa
sbb
add
ret
ds
fnstcw
push
mov
in
bound
pop
push
mov
fisttpl
inc
cwtl
mov
popf
loop
and
sbb
fiaddl
pop
push
aaa
sbb
add
ret
adc
or
cs
ds
or
xor
cmp
out
adc
mov
fadds
mov
f2xm1
aaa
sbb
add
ret
add
mov
stos
push
mov
xor
ds
xchg
clc
pop
loope
aad
dec
pop
out
push
mov
pop
pop
jle
and
mov
adc
enter
inc
hlt
push
rolb
xchg
in
mov
sub
sti
mov
add
push
loop
cmpsb
xchg
dec
xor
xchg
in
cwtl
cmpsl
mov
insl
inc
adc
test
adc
pop
test
jbe
divl
jecxz
mov
out
in
pop
mov
xor
test
cmpsb
sahf
test
jbe
hlt
cltd
push
mov
je
fidivs
test
sbb
pushf
aad
push
add
sbb
stos
cmpsb
out
mov
add
add
out
int
test
xchg
dec
outsb
ret
jb
in
pop
pop
stos
or
xchg
add
out
dec
cmpsb
cmpsb
sbb
mov
xor
or
pop
or
loop
int3
pop
jmp
dec
mov
lock
mov
mov
cmp
les
sbb
ss
jp
lods
ret
xchg
or
xchg
push
mov
push
mov
dec
fisubl
ja
xchg
xchg
insl
sub
sbb
fs
imulb
jmp
xor
stc
loopne
dec
mov
dec
and
outsl
mov
inc
loop
cmpsl
push
push
add
pop
mov
test
in
movsb
repz
xchg
aaa
jbe
push
clc
xlat
jge
jle
leave
sub
stos
stos
test
testb
mov
adc
in
jae
aad
cmpb
push
stos
aam
xor
sub
jmp
lods
call
cmpsl
and
imul
xor
lcall
add
mov
addl
int
push
aaa
push
test
call
dec
jecxz
jge
and
adc
pop
shr
out
into
adc
mov
gs
fs
hlt
test
pop
jge
jle
mov
stos
inc
adc
push
dec
cmp
daa
fmulp
pop
pop
mov
or
inc
and
outsb
inc
hlt
in
mov
popf
xlat
lret
ja
ljmp
push
jecxz
cmp
sbb
xchg
xchg
mov
loopne
push
imul
repz
push
dec
dec
pop
jl
clc
and
dec
insb
test
cmp
test
mov
pusha
std
flds
jne
adc
jge
add
pushf
push
and
cmp
sbb
pop
sub
or
mov
sub
mov
int
fcomps
jns
dec
xchg
cmp
sub
insl
jno
mov
mov
std
scas
cmpsb
xchg
sub
fisubs
hlt
lods
fmull
gs
imul
dec
les
int3
push
mov
push
mov
cmp
mov
jl
mov
push
shr
push
mov
push
mov
mov
mov
movl
movl
mov
mov
mov
shr
add
shl
add
xor
mov
add
xor
sub
mov
shr
add
mov
shl
add
xor
mov
addl
add
xor
sub
decl
jne
mov
mov
mov
add
decl
jne
pop
pop
pop
leave
ret
int3
fimull
fidivs
dec
and
imul
inc
sub
xor
push
push
xor
aaa
jno
mov
mov
popf
nop
shll
jb
lret
jne
xlat
test
jnp
cmp
jae
jo
lahf
and
adc
leave
pop
push
xchg
test
dec
adc
mov
div
mov
les
dec
arpl
leave
push
pop
mov
ss
test
add
ret
push
sub
mov
and
lcall
sbb
or
dec
lret
rcpps
fcmovne
divl
fcoml
mov
push
fadd
sbbb
sub
push
rcll
sub
dec
test
inc
cmp
mov
mov
cmpsl
sbbl
xor
gs
inc
mov
and
mov
pop
in
je
push
out
xor
jmp
stos
pusha
ret
je
data16
xor
jae
jne
jns
xor
addb
xchg
jbe
mov
xor
out
mov
enter
lret
cmpsb
fwait
mov
es
xor
mov
pop
js
xchg
repz
loop
mov
mov
inc
jmp
ss
repnz
